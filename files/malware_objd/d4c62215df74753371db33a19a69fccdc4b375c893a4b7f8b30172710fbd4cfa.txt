
d4c62215df74753371db33a19a69fccdc4b375c893a4b7f8b30172710fbd4cfa.exe:     file format pei-i386


Disassembly of section .text:

00402000 <.text>:
  402000:	test   BYTE PTR [ebx+0x3],dl
  402003:	add    BYTE PTR [eax],al
  402005:	add    BYTE PTR [eax],al
  402007:	add    BYTE PTR [eax+0x0],cl
  40200a:	add    BYTE PTR [eax],al
  40200c:	add    al,BYTE PTR [eax]
  40200e:	add    eax,0x30b8800
  402013:	add    al,al
  402015:	inc    edi
  402016:	add    BYTE PTR [eax],al
  402018:	add    DWORD PTR [eax],eax
  40201a:	add    BYTE PTR [eax],al
  40201c:	add    eax,0x8060000
  402021:	test   DWORD PTR [eax],eax
  402023:	add    al,ch
  402025:	test   DWORD PTR [edx],eax
	...
  40204f:	add    BYTE PTR [edx],ah
  402051:	add    BYTE PTR [eax],ch
  402053:	or     eax,DWORD PTR [eax]
  402055:	add    BYTE PTR [esi],al
  402057:	add    BYTE PTR [edx],ch
  402059:	add    BYTE PTR [eax],al
  40205b:	add    BYTE PTR [ebx],al
  40205d:	xor    BYTE PTR [ecx],cl
  40205f:	add    BYTE PTR [eax+eax*1],cl
  402062:	add    BYTE PTR [eax],al
  402064:	add    BYTE PTR [eax],al
  402066:	add    BYTE PTR [eax],al
  402068:	jae    0x402085
  40206a:	add    BYTE PTR [eax],al
  40206c:	or     al,BYTE PTR [eax+0x4000001]
  402072:	add    BYTE PTR [edx],ch
  402074:	add    esi,DWORD PTR [eax]
  402076:	or     DWORD PTR [eax],eax
  402078:	push   eax
	...
  402081:	add    bl,BYTE PTR [edi]
  402083:	sbb    BYTE PTR [eax],ch
  402085:	pusha  
  402086:	add    BYTE PTR [eax],al
  402088:	push   es
  402089:	sub    BYTE PTR [eax+eax*1],bl
  40208c:	add    BYTE PTR [edx],cl
  40208e:	add    BYTE PTR [edx],al
  402090:	sub    BYTE PTR [eax+eax*1],al
  402093:	add    BYTE PTR [esi],al
  402095:	add    BYTE PTR [edx],al
  402097:	pop    ds
  402098:	sbb    al,0x28
  40209a:	pusha  
  40209b:	add    BYTE PTR [eax],al
  40209d:	push   es
  40209e:	outs   dx,DWORD PTR ds:[esi]
  40209f:	sbb    eax,0xa0000
  4020a4:	add    bl,BYTE PTR [edi]
  4020a6:	and    BYTE PTR [eax],ch
  4020a8:	pusha  
  4020a9:	add    BYTE PTR [eax],al
  4020ab:	push   es
  4020ac:	outs   dx,DWORD PTR ds:[esi]
  4020ad:	push   ds
  4020ae:	add    BYTE PTR [eax],al
  4020b0:	or     al,BYTE PTR [eax]
  4020b2:	add    bl,BYTE PTR [edi]
  4020b4:	and    al,0x28
  4020b6:	pusha  
  4020b7:	add    BYTE PTR [eax],al
  4020b9:	push   es
  4020ba:	outs   dx,DWORD PTR ds:[esi]
  4020bb:	pop    ds
  4020bc:	add    BYTE PTR [eax],al
  4020be:	or     al,BYTE PTR [eax]
  4020c0:	add    bl,BYTE PTR [edi]
  4020c2:	sub    BYTE PTR [eax],ch
  4020c4:	pusha  
  4020c5:	add    BYTE PTR [eax],al
  4020c7:	push   es
  4020c8:	outs   dx,DWORD PTR ds:[esi]
  4020c9:	and    BYTE PTR [eax],al
  4020cb:	add    BYTE PTR [edx],cl
  4020cd:	add    BYTE PTR [eax],al
  4020cf:	sub    bl,BYTE PTR [ebx]
  4020d1:	xor    BYTE PTR ds:0x14000,al
  4020d7:	add    BYTE PTR [ecx],al
  4020d9:	add    BYTE PTR [eax],al
  4020db:	adc    DWORD PTR [eax],eax
  4020dd:	jle    0x4020e0
  4020df:	add    BYTE PTR [eax],al
  4020e1:	add    al,0xd
  4020e3:	or     DWORD PTR [eax],ebp
  4020e5:	and    DWORD PTR [eax],eax
  4020e7:	add    BYTE PTR [edx],cl
  4020e9:	add    BYTE PTR [eax],al
  4020eb:	jle    0x4020ee
  4020ed:	add    BYTE PTR [eax],al
  4020ef:	add    al,0x6f
  4020f1:	and    al,BYTE PTR [eax]
  4020f3:	add    BYTE PTR [edx],cl
  4020f5:	jle    0x4020f8
  4020f7:	add    BYTE PTR [eax],al
  4020f9:	add    al,0x6f
  4020fb:	and    eax,DWORD PTR [eax]
  4020fd:	add    BYTE PTR [edx],cl
  4020ff:	and    eax,0x1301fe26
  402104:	add    eax,0xe9390511
  402109:	add    BYTE PTR [eax],al
  40210b:	add    BYTE PTR [ecx],bl
  40210d:	inc    ebp
  40210e:	add    DWORD PTR [eax],eax
  402110:	add    BYTE PTR [eax],al
  402112:	idiv   bh
  402114:	(bad)  
  402115:	call   DWORD PTR [edi]
  402117:	sub    eax,0x4d006
  40211c:	add    BYTE PTR [esi],al
  40211e:	es push ss
  402120:	sub    BYTE PTR [eax+0x0],ah
  402123:	add    BYTE PTR [esi],al
  402125:	or     bl,BYTE PTR [edx]
  402127:	sub    BYTE PTR [eax+0x0],ah
  40212a:	add    BYTE PTR [esi],al
  40212c:	jle    0x40212f
  40212e:	add    BYTE PTR [eax],al
  402130:	add    al,0x6f
  402132:	and    al,BYTE PTR [eax]
  402134:	add    BYTE PTR [edx],cl
  402136:	push   ds
  402137:	sub    BYTE PTR [eax+0x0],ah
  40213a:	add    BYTE PTR [esi],al
  40213c:	ficom  DWORD PTR [ebx]
  40213e:	add    al,0xb
  402140:	sub    esi,DWORD PTR [ecx+0x7e]
  402143:	add    DWORD PTR [eax],eax
  402145:	add    BYTE PTR [edi+eax*1],al
  402148:	outs   dx,DWORD PTR ds:[esi]
  402149:	and    al,0x0
  40214b:	add    BYTE PTR [edx],cl
  40214d:	or     al,0x8
  40214f:	outs   dx,DWORD PTR ds:[esi]
  402150:	and    eax,0x250a0000
  402155:	adc    eax,DWORD PTR es:0x4b2c0511
  40215c:	sbb    eax,0x145
  402161:	add    dh,dh
  402163:	(bad)  
  402164:	(bad)  
  402165:	inc    DWORD PTR [edi]
  402167:	push   es
  402168:	inc    BYTE PTR [ecx]
  40216a:	pop    ds
  40216b:	or     al,0x28
  40216d:	pusha  
  40216e:	add    BYTE PTR [eax],al
  402170:	push   es
  402171:	inc    BYTE PTR [ecx]
  402173:	adc    eax,DWORD PTR [esi]
  402175:	adc    DWORD PTR [esi],eax
  402177:	sub    al,0x23
  402179:	sbb    eax,0x145
  40217e:	add    dh,dh
  402180:	(bad)  
  402181:	(bad)  
  402182:	(bad)  
  402183:	jle    0x402186
  402185:	add    BYTE PTR [eax],al
  402187:	add    al,0x6
  402189:	jle    0x40218c
  40218b:	add    BYTE PTR [eax],al
  40218d:	add    al,0x7
  40218f:	outs   dx,DWORD PTR ds:[esi]
  402190:	and    al,0x0
  402192:	add    BYTE PTR [edx],cl
  402194:	and    eax,0x266f26
  402199:	add    BYTE PTR [edx],cl
  40219b:	add    BYTE PTR [eax],al
  40219d:	push   es
  40219e:	pop    ds
  40219f:	adc    BYTE PTR [eax],ch
  4021a1:	pusha  
  4021a2:	add    BYTE PTR [eax],al
  4021a4:	push   es
  4021a5:	(bad)  
  4021a6:	or     al,BYTE PTR [eax]
  4021a8:	add    BYTE PTR [edi],al
  4021aa:	pop    ds
  4021ab:	adc    al,0x28
  4021ad:	pusha  
  4021ae:	add    BYTE PTR [eax],al
  4021b0:	push   es
  4021b1:	(bad)  
  4021b2:	or     eax,DWORD PTR [edi]
  4021b4:	adc    DWORD PTR [ebx+edx*1],eax
  4021b7:	pop    es
  4021b8:	adc    DWORD PTR [edi],eax
  4021ba:	xor    DWORD PTR [esi+0x14519],eax
  4021c0:	add    BYTE PTR [eax],al
  4021c2:	idiv   bh
  4021c4:	(bad)  
  4021c5:	(bad)  
  4021c6:	jle    0x4021c9
  4021c8:	add    BYTE PTR [eax],al
  4021ca:	add    al,0x6
  4021cc:	jle    0x4021cf
  4021ce:	add    BYTE PTR [eax],al
  4021d0:	add    al,0x6f
  4021d2:	and    al,BYTE PTR [eax]
  4021d4:	add    BYTE PTR [edx],cl
  4021d6:	and    eax,0x6fda0626
  4021db:	daa    
  4021dc:	add    BYTE PTR [eax],al
  4021de:	or     al,BYTE PTR [eax]
  4021e0:	jle    0x4021e3
  4021e2:	add    BYTE PTR [eax],al
  4021e4:	add    al,0x7e
  4021e6:	add    DWORD PTR [eax],eax
  4021e8:	add    BYTE PTR [edi+ebp*2],al
  4021eb:	and    al,BYTE PTR [eax]
  4021ed:	add    BYTE PTR [edx],cl
  4021ef:	outs   dx,DWORD PTR ds:[esi]
  4021f0:	sub    BYTE PTR [eax],al
  4021f2:	add    BYTE PTR [edx],cl
  4021f4:	add    BYTE PTR [eax],al
  4021f6:	jle    0x4021f9
  4021f8:	add    BYTE PTR [eax],al
  4021fa:	add    al,0x2
  4021fc:	sub    BYTE PTR [ecx],ch
  4021fe:	add    BYTE PTR [eax],al
  402200:	or     dh,BYTE PTR [ebx+0x2a]
  402203:	add    BYTE PTR [eax],al
  402205:	or     ch,BYTE PTR [edi+0x2b]
  402208:	add    BYTE PTR [eax],al
  40220a:	or     al,BYTE PTR [eax]
  40220c:	add    dh,bl
  40220e:	or     DWORD PTR [eax],eax
  402210:	or     DWORD PTR [eax],ebp
  402212:	sub    al,0x0
  402214:	add    BYTE PTR [edx],cl
  402216:	add    ah,bl
  402218:	add    BYTE PTR [eax],al
  40221a:	add    BYTE PTR [edx],ch
  40221c:	inc    ecx
  40221d:	sbb    al,0x0
  40221f:	add    BYTE PTR [edx],al
  402221:	add    BYTE PTR [eax],al
  402223:	add    BYTE PTR [edi],cl
  402225:	add    BYTE PTR [eax],al
  402227:	add    BYTE PTR [ecx+eax*1],ah
  40222a:	add    BYTE PTR [eax],al
  40222c:	xor    eax,DWORD PTR [ecx]
  40222e:	add    BYTE PTR [eax],al
  402230:	or     DWORD PTR [eax],eax
  402232:	add    BYTE PTR [eax],al
  402234:	add    BYTE PTR [eax],al
  402236:	add    BYTE PTR [eax],al
  402238:	sbb    esi,DWORD PTR [eax]
  40223a:	add    eax,DWORD PTR [eax]
  40223c:	and    al,BYTE PTR [eax]
	...
  402246:	sub    BYTE PTR ds:0x280a0000,ch
  40224c:	add    BYTE PTR cs:[eax],al
  40224f:	or     al,BYTE PTR [eax]
  402251:	fiadd  WORD PTR [edx]
  402253:	add    ah,bl
  402255:	add    BYTE PTR [eax],ch
  402257:	adc    DWORD PTR [eax],eax
  402259:	add    BYTE PTR [esi],al
  40225b:	and    eax,0x2f6f0226
  402260:	add    BYTE PTR [eax],al
  402262:	or     al,BYTE PTR [eax]
  402264:	add    BYTE PTR [edx],ch
  402266:	add    BYTE PTR [eax],al
  402268:	add    DWORD PTR [eax],edx
  40226a:	add    BYTE PTR [eax],al
  40226c:	add    al,BYTE PTR [eax]
  40226e:	add    al,BYTE PTR [eax]
  402270:	or     eax,0x2000f
  402275:	add    BYTE PTR [eax],al
  402277:	add    BYTE PTR [ebx],al
  402279:	xor    BYTE PTR [ecx],cl
  40227b:	add    BYTE PTR [esi],dl
	...
  402285:	add    ch,BYTE PTR [eax]
  402287:	adc    eax,DWORD PTR [eax]
  402289:	add    BYTE PTR [esi],al
  40228b:	and    eax,0x166f26
  402290:	add    BYTE PTR [esi],al
  402292:	outs   dx,DWORD PTR ds:[esi]
  402293:	xor    BYTE PTR [eax],al
  402295:	add    BYTE PTR [edx],cl
  402297:	add    BYTE PTR [eax],al
  402299:	sub    al,BYTE PTR [eax]
  40229b:	add    BYTE PTR [ebx],al
  40229d:	xor    BYTE PTR [ecx],cl
  40229f:	add    BYTE PTR [edi],al
  4022a1:	add    BYTE PTR [eax],al
  4022a3:	add    BYTE PTR [eax],al
  4022a5:	add    BYTE PTR [eax],al
  4022a7:	add    BYTE PTR [edx],al
  4022a9:	sub    BYTE PTR [ecx],dh
  4022ab:	add    BYTE PTR [eax],al
  4022ad:	or     ch,BYTE PTR [edx]
  4022af:	add    BYTE PTR [ebx],al
  4022b1:	xor    BYTE PTR [ecx],cl
  4022b3:	add    BYTE PTR [edx],cl
	...
  4022bd:	add    ch,BYTE PTR [eax]
  4022bf:	xor    al,BYTE PTR [eax]
  4022c1:	add    BYTE PTR [edx],cl
  4022c3:	add    BYTE PTR [eax],al
  4022c5:	sub    al,BYTE PTR [eax]
  4022c7:	add    BYTE PTR [ebx],dl
  4022c9:	xor    BYTE PTR ds:0x4f00,al
  4022cf:	add    BYTE PTR [edx],al
  4022d1:	add    BYTE PTR [eax],al
  4022d3:	adc    DWORD PTR [eax],ebp
  4022d5:	xor    eax,DWORD PTR [eax]
  4022d7:	add    BYTE PTR [edx],cl
  4022d9:	and    eax,0x6fe1426
  4022de:	push   cs
  4022df:	add    BYTE PTR [eax],al
  4022e1:	push   es
  4022e2:	jae    0x402318
  4022e4:	add    BYTE PTR [eax],al
  4022e6:	or     ch,BYTE PTR [edi+0x35]
  4022e9:	add    BYTE PTR [eax],al
  4022eb:	or     ch,BYTE PTR [eax]
  4022ed:	xor    eax,DWORD PTR [eax]
  4022ef:	add    BYTE PTR [edx],cl
  4022f1:	and    eax,0x6fe1426
  4022f6:	or     al,0x0
  4022f8:	add    BYTE PTR [esi],al
  4022fa:	jae    0x402330
  4022fc:	add    BYTE PTR [eax],al
  4022fe:	or     ch,BYTE PTR [edi+0x36]
  402301:	add    BYTE PTR [eax],al
  402303:	or     ch,BYTE PTR [eax]
  402305:	aaa    
  402306:	add    BYTE PTR [eax],al
  402308:	or     ah,BYTE PTR ds:0x28060a26
  40230e:	or     eax,0x25060000
  402313:	or     eax,DWORD PTR es:[edi]
  402316:	sub    BYTE PTR [eax],bh
  402318:	add    BYTE PTR [eax],al
  40231a:	or     ah,BYTE PTR ds:0x28026
  402320:	add    BYTE PTR [edx+ebp*1],al
  402323:	add    BYTE PTR [ebx],al
  402325:	xor    BYTE PTR [ecx],cl
  402327:	add    BYTE PTR [edi],al
  402329:	add    BYTE PTR [eax],al
  40232b:	add    BYTE PTR [eax],al
  40232d:	add    BYTE PTR [eax],al
  40232f:	add    BYTE PTR [edx],al
  402331:	sub    BYTE PTR [ecx],bh
  402333:	add    BYTE PTR [eax],al
  402335:	or     ch,BYTE PTR [edx]
  402337:	add    BYTE PTR [ebx],al
  402339:	xor    BYTE PTR [ecx],cl
  40233b:	add    BYTE PTR [ecx],al
  40233d:	add    BYTE PTR [eax],al
  40233f:	add    BYTE PTR [eax],al
  402341:	add    BYTE PTR [eax],al
  402343:	add    BYTE PTR [edx],ch
  402345:	add    BYTE PTR [eax],al
  402347:	add    BYTE PTR [ebx],dl
  402349:	xor    BYTE PTR [ebx],al
  40234b:	add    BYTE PTR [edx],bh
  40234d:	add    BYTE PTR [eax],al
  40234f:	add    BYTE PTR [ebx],al
  402351:	add    BYTE PTR [eax],al
  402353:	adc    DWORD PTR [eax],ebp
  402355:	aaa    
  402356:	add    BYTE PTR [eax],al
  402358:	or     cl,BYTE PTR [edx]
  40235a:	push   es
  40235b:	sub    BYTE PTR ds:0xb060000,cl
  402361:	add    ebp,DWORD PTR [edi+0x3a]
  402364:	add    BYTE PTR [eax],al
  402366:	or     ah,BYTE PTR ds:0x3b6f0726
  40236c:	add    BYTE PTR [eax],al
  40236e:	or     ah,BYTE PTR ds:0x6192c26
  402374:	pop    es
  402375:	outs   dx,DWORD PTR ds:[esi]
  402376:	cmp    al,0x0
  402378:	add    BYTE PTR [edx],cl
  40237a:	or     al,0x1f
  40237c:	popa   
  40237d:	push   0x8
  40237f:	sub    BYTE PTR [esi+0x0],ch
  402382:	add    BYTE PTR [esi],al
  402384:	or     eax,0x3d2809
  402389:	add    BYTE PTR [edx],cl
  40238b:	sub    dl,BYTE PTR [edx+ebp*1]
  40238e:	add    BYTE PTR [eax],al
  402390:	adc    esi,DWORD PTR [eax]
  402392:	add    al,0x0
  402394:	inc    edx
  402395:	add    BYTE PTR [eax],al
  402397:	add    BYTE PTR [eax+eax*1],al
  40239a:	add    BYTE PTR [ecx],dl
  40239c:	add    ch,BYTE PTR [edi+0x3e]
  40239f:	add    BYTE PTR [eax],al
  4023a1:	or     ah,BYTE PTR ds:0x1f060a26
  4023a7:	sub    al,0x6f
  4023a9:	aas    
  4023aa:	add    BYTE PTR [eax],al
  4023ac:	or     ah,BYTE PTR ds:0x16070b26
  4023b2:	xor    bl,BYTE PTR [eax+ebx*1]
  4023b5:	inc    ebp
  4023b6:	add    DWORD PTR [eax],eax
  4023b8:	add    BYTE PTR [eax],al
  4023ba:	idiv   bh
  4023bc:	(bad)  
  4023bd:	call   DWORD PTR [edi]
  4023bf:	sub    eax,0xdd006
  4023c4:	add    BYTE PTR [esi],al
  4023c6:	es push es
  4023c8:	push   ss
  4023c9:	pop    es
  4023ca:	outs   dx,DWORD PTR ds:[esi]
  4023cb:	inc    eax
  4023cc:	add    BYTE PTR [eax],al
  4023ce:	or     cl,BYTE PTR [edx]
  4023d0:	push   es
  4023d1:	pop    ds
  4023d2:	mov    WORD PTR es:[edi],ds
  4023d5:	add    BYTE PTR [eax],al
  4023d7:	add    DWORD PTR [eax],ebp
  4023d9:	inc    ecx
  4023da:	add    BYTE PTR [eax],al
  4023dc:	or     ch,BYTE PTR [edx]
  4023de:	add    BYTE PTR [eax],al
  4023e0:	adc    esi,DWORD PTR [eax]
  4023e2:	add    eax,DWORD PTR [eax]
  4023e4:	outs   dx,DWORD PTR ds:[esi]
  4023e5:	add    BYTE PTR [eax],al
  4023e7:	add    BYTE PTR ds:0x7e110000,al
  4023ed:	add    al,BYTE PTR [eax]
  4023ef:	add    BYTE PTR [esp+ebp*1],al
  4023f2:	pusha  
  4023f3:	sbb    DWORD PTR [ebp+0x1],eax
  4023f6:	add    BYTE PTR [eax],al
  4023f8:	add    dh,dh
  4023fa:	(bad)  
  4023fb:	(bad)  
  4023fc:	call   DWORD PTR [edi]
  4023fe:	sub    eax,0xed006
  402403:	add    BYTE PTR [esi],al
  402405:	es jle 0x40240a
  402408:	add    BYTE PTR [eax],al
  40240a:	add    al,0x6f
  40240c:	inc    edx
  40240d:	add    BYTE PTR [eax],al
  40240f:	or     ah,BYTE PTR ds:0xd160c26
  402415:	sub    ebp,DWORD PTR [edx]
  402417:	or     BYTE PTR [ecx],cl
  402419:	call   0x3a:0x6f03060a
  402420:	add    BYTE PTR [edx],cl
  402422:	sub    BYTE PTR [ebx+0x0],al
  402425:	add    BYTE PTR [edx],cl
  402427:	and    eax,0x1d122c26
  40242c:	inc    ebp
  40242d:	add    DWORD PTR [eax],eax
  40242f:	add    BYTE PTR [eax],al
  402431:	idiv   bh
  402433:	(bad)  
  402434:	(bad)  
  402435:	jle    0x402439
  402437:	add    BYTE PTR [eax],al
  402439:	add    al,0xb
  40243b:	ficomp WORD PTR [ecx+ecx*1]
  40243e:	pop    ss
  40243f:	pop    eax
  402440:	or     eax,0x698e0809
  402445:	xor    dl,al
  402447:	sbb    BYTE PTR [ebp+0x1],al
  40244a:	add    BYTE PTR [eax],al
  40244c:	add    dh,dh
  40244e:	(bad)  
  40244f:	(bad)  
  402450:	call   DWORD PTR [edx+ebp*1]
  402453:	jle    0x402457
  402455:	add    BYTE PTR [eax],al
  402457:	add    al,0x2a
  402459:	pop    es
  40245a:	sub    al,BYTE PTR [eax]
  40245c:	add    esi,DWORD PTR [eax]
  40245e:	or     DWORD PTR [eax],eax
  402460:	xor    al,0x0
  402462:	add    BYTE PTR [eax],al
  402464:	add    BYTE PTR [eax],al
  402466:	add    BYTE PTR [eax],al
  402468:	jae    0x4024ae
  40246a:	add    BYTE PTR [eax],al
  40246c:	or     al,BYTE PTR [eax+0x4000003]
  402472:	jae    0x4024b9
  402474:	add    BYTE PTR [eax],al
  402476:	or     al,BYTE PTR [eax+0x4000004]
  40247c:	jae    0x4024c4
  40247e:	add    BYTE PTR [eax],al
  402480:	or     al,BYTE PTR [eax+0x4000005]
  402486:	jae    0x4024cf
  402488:	add    BYTE PTR [eax],al
  40248a:	or     al,BYTE PTR [eax+0x4000006]
  402490:	jae    0x4024da
  402492:	add    BYTE PTR [eax],al
  402494:	or     al,BYTE PTR [eax+0x4000007]
  40249a:	add    BYTE PTR [edx],ch
  40249c:	adc    esi,DWORD PTR [eax]
  40249e:	add    al,BYTE PTR [eax]
  4024a0:	adc    BYTE PTR [eax],al
  4024a2:	add    BYTE PTR [eax],al
  4024a4:	push   es
  4024a5:	add    BYTE PTR [eax],al
  4024a7:	adc    DWORD PTR [eax],eax
  4024a9:	jle    0x4024ae
  4024ab:	add    BYTE PTR [eax],al
  4024ad:	add    al,0x6f
  4024af:	dec    ecx
  4024b0:	add    BYTE PTR [eax],al
  4024b2:	or     cl,BYTE PTR [edx]
  4024b4:	sub    eax,DWORD PTR [eax]
  4024b6:	push   es
  4024b7:	sub    dl,BYTE PTR [ebx]
  4024b9:	xor    BYTE PTR [ebx],al
  4024bb:	add    BYTE PTR [edx],dl
  4024bd:	add    BYTE PTR [eax],al
  4024bf:	add    BYTE PTR [edi],al
  4024c1:	add    BYTE PTR [eax],al
  4024c3:	adc    DWORD PTR [eax],eax
  4024c5:	jle    0x4024cb
  4024c7:	add    BYTE PTR [eax],al
  4024c9:	add    al,0x6f
  4024cb:	dec    edx
  4024cc:	add    BYTE PTR [eax],al
  4024ce:	or     ah,BYTE PTR ds:0x2b0a26
  4024d4:	push   es
  4024d5:	sub    al,BYTE PTR [eax]
  4024d7:	add    BYTE PTR [ebx],dl
  4024d9:	xor    BYTE PTR [ebx],al
  4024db:	add    BYTE PTR [edx],dl
  4024dd:	add    BYTE PTR [eax],al
  4024df:	add    BYTE PTR [eax],cl
  4024e1:	add    BYTE PTR [eax],al
  4024e3:	adc    DWORD PTR [eax],eax
  4024e5:	jle    0x4024ec
  4024e7:	add    BYTE PTR [eax],al
  4024e9:	add    al,0x6f
  4024eb:	dec    ebx
  4024ec:	add    BYTE PTR [eax],al
  4024ee:	or     ah,BYTE PTR ds:0x2b0a26
  4024f4:	push   es
  4024f5:	sub    al,BYTE PTR [eax]
  4024f7:	add    BYTE PTR [ebx],dl
  4024f9:	xor    BYTE PTR [ebx],al
  4024fb:	add    BYTE PTR [edx],dl
  4024fd:	add    BYTE PTR [eax],al
  4024ff:	add    BYTE PTR [ecx],cl
  402501:	add    BYTE PTR [eax],al
  402503:	adc    DWORD PTR [eax],eax
  402505:	jle    0x40250d
  402507:	add    BYTE PTR [eax],al
  402509:	add    al,0x6f
  40250b:	dec    esp
  40250c:	add    BYTE PTR [eax],al
  40250e:	or     ah,BYTE PTR ds:0x2b0a26
  402514:	push   es
  402515:	sub    al,BYTE PTR [eax]
  402517:	add    BYTE PTR [ebx],dl
  402519:	xor    BYTE PTR [edx],al
  40251b:	add    BYTE PTR [eax],dl
  40251d:	add    BYTE PTR [eax],al
  40251f:	add    BYTE PTR [edx],cl
  402521:	add    BYTE PTR [eax],al
  402523:	adc    DWORD PTR [eax],eax
  402525:	jle    0x40252e
  402527:	add    BYTE PTR [eax],al
  402529:	add    al,0x6f
  40252b:	dec    ebp
  40252c:	add    BYTE PTR [eax],al
  40252e:	or     cl,BYTE PTR [edx]
  402530:	sub    eax,DWORD PTR [eax]
  402532:	push   es
  402533:	sub    al,BYTE PTR [ebx]
  402535:	xor    BYTE PTR [ecx],cl
  402537:	add    BYTE PTR [edx],cl
	...
  402541:	add    ch,BYTE PTR [eax]
  402543:	cmp    DWORD PTR [eax],eax
  402545:	add    BYTE PTR [edx],cl
  402547:	add    BYTE PTR [eax],al
  402549:	sub    al,BYTE PTR [eax]
  40254b:	add    BYTE PTR [ebx],dl
  40254d:	xor    BYTE PTR [eax+eax*1],al
  402550:	push   ds
  402551:	add    BYTE PTR [eax],al
  402553:	add    BYTE PTR [ebx],cl
  402555:	add    BYTE PTR [eax],al
  402557:	adc    DWORD PTR [edx],eax
  402559:	add    bh,BYTE PTR [ebx+0x8]
  40255c:	add    BYTE PTR [eax],al
  40255e:	add    al,0x28
  402560:	add    DWORD PTR [eax],eax
  402562:	add    BYTE PTR [ebx],ch
  402564:	and    eax,0x87d26
  402569:	add    BYTE PTR [edx+eax*1],al
  40256c:	jnp    0x402576
  40256e:	add    BYTE PTR [eax],al
  402570:	add    al,0xa
  402572:	sub    eax,DWORD PTR [eax]
  402574:	push   es
  402575:	sub    al,BYTE PTR [eax]
  402577:	add    BYTE PTR [ebx],dl
  402579:	xor    BYTE PTR [ebx],al
  40257b:	add    BYTE PTR [ecx+0x0],dl
  40257e:	add    BYTE PTR [eax],al
  402580:	or     al,0x0
  402582:	add    BYTE PTR [ecx],dl
  402584:	add    eax,DWORD PTR [edx]
  402586:	jnp    0x402590
  402588:	add    BYTE PTR [eax],al
  40258a:	add    al,0xfe
  40258c:	add    DWORD PTR [edx],ecx
  40258e:	push   es
  40258f:	sub    al,0x16
  402591:	sbb    al,0x45
  402593:	add    DWORD PTR [eax],eax
  402595:	add    BYTE PTR [eax],al
  402597:	idiv   bh
  402599:	(bad)  
  40259a:	call   DWORD PTR [edi]
  40259c:	sub    eax,0x17d006
  4025a1:	add    BYTE PTR [esi],al
  4025a3:	add    BYTE PTR es:[ebx],ch
  4025a6:	sub    al,0x0
  4025a8:	add    edx,DWORD PTR [esi+edi*8]
  4025ab:	add    DWORD PTR [edi],ebx
  4025ad:	sub    al,0x28
  4025af:	pusha  
  4025b0:	add    BYTE PTR [eax],al
  4025b2:	push   es
  4025b3:	inc    BYTE PTR [ecx]
  4025b5:	or     al,BYTE PTR [esi]
  4025b7:	sub    al,0xc
  4025b9:	pop    ss
  4025ba:	sub    BYTE PTR [eax+0x0],ch
  4025bd:	add    BYTE PTR [esi],al
  4025bf:	jae    0x40260f
  4025c1:	add    BYTE PTR [eax],al
  4025c3:	or     bh,BYTE PTR [edx+0x0]
  4025c6:	add    al,BYTE PTR [edx]
  4025c8:	jl     0x4025d2
  4025ca:	add    BYTE PTR [eax],al
  4025cc:	add    al,0x6f
  4025ce:	add    al,BYTE PTR [eax]
  4025d0:	add    BYTE PTR [ebx],ch
  4025d2:	add    BYTE PTR [eax],al
  4025d4:	sub    al,BYTE PTR [eax]
  4025d6:	add    BYTE PTR [eax],al
  4025d8:	sbb    esi,DWORD PTR [eax]
  4025da:	push   es
  4025db:	add    BYTE PTR [edx+0xd000001],bl
  4025e1:	add    BYTE PTR [eax],al
  4025e3:	adc    DWORD PTR [eax],eax
  4025e5:	add    cl,BYTE PTR [edi+eax*1+0x2c1b0000]
  4025ec:	sub    eax,0x14517
  4025f1:	add    BYTE PTR [eax],al
  4025f3:	idiv   bh
  4025f5:	(bad)  
  4025f6:	call   DWORD PTR [edi]
  4025f8:	sub    eax,0x18d006
  4025fd:	add    BYTE PTR [esi],al
  4025ff:	es (bad) 
  402602:	(bad)  
  402603:	push   ss
  402604:	pop    es
  402605:	add    BYTE PTR [eax],al
  402607:	sbb    ebp,DWORD PTR [edi+0x4f]
  40260a:	add    BYTE PTR [eax],al
  40260c:	or     ah,BYTE PTR ds:0x1f092d26
  402612:	xor    BYTE PTR [eax],ch
  402614:	pusha  
  402615:	add    BYTE PTR [eax],al
  402617:	push   es
  402618:	sub    eax,DWORD PTR [edi]
  40261a:	pop    ds
  40261b:	xor    al,0x28
  40261d:	pusha  
  40261e:	add    BYTE PTR [eax],al
  402620:	push   es
  402621:	add    BYTE PTR [ebx],dl
  402623:	add    al,0x11
  402625:	add    al,0x39
  402627:	dec    ebx
  402628:	add    DWORD PTR [eax],eax
  40262a:	add    BYTE PTR [edx],bl
  40262c:	inc    ebp
  40262d:	add    DWORD PTR [eax],eax
  40262f:	add    BYTE PTR [eax],al
  402631:	idiv   bh
  402633:	(bad)  
  402634:	(bad)  
  402635:	jle    0x402640
  402637:	add    BYTE PTR [eax],al
  402639:	add    al,0x14
  40263b:	inc    BYTE PTR [ecx]
  40263d:	pop    ds
  40263e:	cmp    BYTE PTR [eax],ch
  402640:	pusha  
  402641:	add    BYTE PTR [eax],al
  402643:	push   es
  402644:	inc    BYTE PTR [ecx]
  402646:	adc    eax,DWORD PTR ds:0x532c0511
  40264c:	sbb    eax,DWORD PTR [ebp+0x1]
  40264f:	add    BYTE PTR [eax],al
  402651:	add    dh,dh
  402653:	(bad)  
  402654:	(bad)  
  402655:	(bad)  
  402656:	jle    0x402661
  402658:	add    BYTE PTR [eax],al
  40265a:	add    al,0xd0
  40265c:	pop    es
  40265d:	add    BYTE PTR [eax],al
  40265f:	sbb    ebp,DWORD PTR [eax]
  402661:	push   eax
  402662:	add    BYTE PTR [eax],al
  402664:	or     ch,BYTE PTR [edi+0x51]
  402667:	add    BYTE PTR [eax],al
  402669:	or     dl,BYTE PTR [ebx]
  40266b:	push   es
  40266c:	adc    DWORD PTR [esi],eax
  40266e:	sub    al,0x2c
  402670:	sbb    al,BYTE PTR [ebp+0x1]
  402673:	add    BYTE PTR [eax],al
  402675:	add    dh,dh
  402677:	(bad)  
  402678:	(bad)  
  402679:	call   FWORD PTR [edi]
  40267b:	dec    eax
  40267c:	sub    BYTE PTR [eax+0x0],ch
  40267f:	add    BYTE PTR [esi],al
  402681:	and    eax,0x283c1f26
  402686:	pusha  
  402687:	add    BYTE PTR [eax],al
  402689:	push   es
  40268a:	lea    ebx,[esi+0x28010000]
  402690:	push   edx
  402691:	add    BYTE PTR [eax],al
  402693:	or     ah,BYTE PTR ds:0x537326
  402699:	add    BYTE PTR [edx],cl
  40269b:	jp     0x40269d
  40269d:	sub    ecx,DWORD PTR [ebx]
  40269f:	add    BYTE PTR [ebx+0x54],dh
  4026a2:	add    BYTE PTR [eax],al
  4026a4:	or     al,BYTE PTR [eax+0x4000009]
  4026aa:	add    BYTE PTR [esi+0x9],bh
  4026ad:	add    BYTE PTR [eax],al
  4026af:	add    al,0xd0
  4026b1:	pop    es
  4026b2:	add    BYTE PTR [eax],al
  4026b4:	sbb    ebp,DWORD PTR [eax]
  4026b6:	push   eax
  4026b7:	add    BYTE PTR [eax],al
  4026b9:	or     dl,BYTE PTR [edi+ebp*2]
  4026bc:	push   ebp
  4026bd:	add    BYTE PTR [eax],al
  4026bf:	or     al,BYTE PTR [eax]
  4026c1:	add    BYTE PTR [eax],ch
  4026c3:	add    eax,DWORD PTR [eax]
  4026c5:	add    BYTE PTR [ebx],ch
  4026c7:	or     bl,ch
  4026c9:	scas   eax,DWORD PTR es:[edi]
  4026ca:	add    BYTE PTR [eax],al
  4026cc:	add    ch,bl
  4026ce:	mov    eax,ds:0x75000000
  4026d3:	test   DWORD PTR [eax],eax
  4026d5:	add    BYTE PTR [ecx],al
  4026d7:	and    eax,0x1f260a2d
  4026dc:	inc    eax
  4026dd:	sub    BYTE PTR [eax+0x0],ah
  4026e0:	add    BYTE PTR [esi],al
  4026e2:	sub    esp,DWORD PTR [eiz*1+0x57280c]
  4026e9:	add    BYTE PTR [edx],cl
  4026eb:	or     BYTE PTR [edi+0x58],ch
  4026ee:	add    BYTE PTR [eax],al
  4026f0:	or     ah,BYTE PTR ds:0x1fe1426
  4026f6:	pop    ds
  4026f7:	inc    esp
  4026f8:	sub    BYTE PTR [eax+0x0],ah
  4026fb:	add    BYTE PTR [esi],al
  4026fd:	inc    BYTE PTR [ecx]
  4026ff:	pop    ds
  402700:	dec    eax
  402701:	sub    BYTE PTR [eax+0x0],ah
  402704:	add    BYTE PTR [esi],al
  402706:	inc    BYTE PTR [ebx]
  402708:	(bad)  
  402709:	adc    DWORD PTR [esi],esp
  40270b:	and    BYTE PTR [ecx+0x28000000],al
  402711:	push   0x25060000
  402716:	es pop ds
  402718:	dec    esp
  402719:	sub    BYTE PTR [eax+0x0],ah
  40271c:	add    BYTE PTR [esi],al
  40271e:	lea    ebx,[esi+0xd010000]
  402724:	or     DWORD PTR [edi],ebx
  402726:	push   eax
  402727:	sub    BYTE PTR [eax+0x0],ah
  40272a:	add    BYTE PTR [esi],al
  40272c:	or     BYTE PTR [edi+0x58],ch
  40272f:	add    BYTE PTR [eax],al
  402731:	or     ah,BYTE PTR ds:0x596f26
  402737:	add    BYTE PTR [edx],cl
  402739:	and    eax,0x900a226
  40273e:	sub    BYTE PTR [edx+0x0],dl
  402741:	add    BYTE PTR [edx],cl
  402743:	and    eax,0x8070b26
  402748:	outs   dx,DWORD PTR ds:[esi]
  402749:	pop    eax
  40274a:	add    BYTE PTR [eax],al
  40274c:	or     ah,BYTE PTR ds:0x5a7326
  402752:	add    BYTE PTR [edx],cl
  402754:	jp     0x40277e
  402756:	pop    ebx
  402757:	add    BYTE PTR [eax],al
  402759:	or     bl,dh
  40275b:	pop    ss
  40275c:	add    BYTE PTR [esi+0x9],bh
  40275f:	add    BYTE PTR [eax],al
  402761:	add    al,0xd0
  402763:	pop    es
  402764:	add    BYTE PTR [eax],al
  402766:	sbb    ebp,DWORD PTR [eax]
  402768:	push   eax
  402769:	add    BYTE PTR [eax],al
  40276b:	or     ch,BYTE PTR [edi+0x5c]
  40276e:	add    BYTE PTR [eax],al
  402770:	or     al,BYTE PTR [eax]
  402772:	fadd   QWORD PTR [eax]
  402774:	sub    eax,DWORD PTR ds:0x2b0a0200
  40277a:	add    DWORD PTR [eax],eax
  40277c:	push   es
  40277d:	sub    al,BYTE PTR [eax]
  40277f:	add    BYTE PTR [ecx],al
  402781:	sbb    al,0x0
  402783:	add    BYTE PTR [ecx],al
  402785:	add    dh,bl
  402787:	add    BYTE PTR [eax],dl
  402789:	add    DWORD PTR es:[edx-0x12],edx
  40278d:	add    BYTE PTR [eax],al
  40278f:	add    BYTE PTR [edx],al
  402791:	add    dh,bl
  402793:	add    BYTE PTR [edx+0x170178],bl
  402799:	add    BYTE PTR [eax],al
  40279b:	add    BYTE PTR [ebx],dl
  40279d:	xor    BYTE PTR [ebx],al
  40279f:	add    BYTE PTR [edi],bl
  4027a1:	add    BYTE PTR [eax],al
  4027a3:	add    BYTE PTR [esi],cl
  4027a5:	add    BYTE PTR [eax],al
  4027a7:	adc    DWORD PTR [eax],eax
  4027a9:	add    edi,esi
  4027ab:	push   ss
  4027ac:	pop    es
  4027ad:	add    BYTE PTR [eax],al
  4027af:	sbb    ebp,DWORD PTR [edi+0x5d]
  4027b2:	add    BYTE PTR [eax],al
  4027b4:	or     al,BYTE PTR [eax]
  4027b6:	add    edx,DWORD PTR [edx]
  4027b8:	add    dh,bh
  4027ba:	adc    eax,0x1b000007
  4027bf:	push   es
  4027c0:	add    DWORD PTR [edi],0x1b0000
  4027c6:	sub    al,BYTE PTR [eax]
  4027c8:	adc    esi,DWORD PTR [eax]
  4027ca:	add    al,0x0
  4027cc:	adc    al,0x0
  4027ce:	add    BYTE PTR [eax],al
  4027d0:	or     al,0x0
  4027d2:	add    BYTE PTR [ecx],dl
  4027d4:	add    BYTE PTR [edx],al
  4027d6:	add    ebp,DWORD PTR [eax]
  4027d8:	sub    DWORD PTR [eax],eax
  4027da:	add    BYTE PTR [edx],cl
  4027dc:	and    eax,0x5e2826
  4027e1:	add    BYTE PTR [edx],cl
  4027e3:	or     ch,BYTE PTR [ebx]
  4027e5:	add    BYTE PTR [esi],al
  4027e7:	sub    dl,BYTE PTR [ebx]
  4027e9:	xor    BYTE PTR [edx],al
  4027eb:	add    BYTE PTR [eax+eax*1],cl
  4027ee:	add    BYTE PTR [eax],al
  4027f0:	sldt   WORD PTR [eax]
  4027f3:	adc    DWORD PTR [eax],eax
  4027f5:	add    ch,BYTE PTR [eax]
  4027f7:	pop    edi
  4027f8:	add    BYTE PTR [eax],al
  4027fa:	or     cl,BYTE PTR [edx]
  4027fc:	sub    eax,DWORD PTR [eax]
  4027fe:	push   es
  4027ff:	sub    dl,BYTE PTR [ebx]
  402801:	xor    BYTE PTR [ebx],al
  402803:	add    BYTE PTR [edx],dl
  402805:	add    BYTE PTR [eax],al
  402807:	add    BYTE PTR [eax],dl
  402809:	add    BYTE PTR [eax],al
  40280b:	adc    DWORD PTR [eax],eax
  40280d:	rol    BYTE PTR [edi],1
  40280f:	add    BYTE PTR [eax],al
  402811:	add    ch,BYTE PTR [eax]
  402813:	push   eax
  402814:	add    BYTE PTR [eax],al
  402816:	or     ah,BYTE PTR ds:0x2b0a26
  40281c:	push   es
  40281d:	sub    al,BYTE PTR [eax]
  40281f:	add    BYTE PTR [ebx],dl
  402821:	xor    BYTE PTR [edx],al
  402823:	add    BYTE PTR [eax+eax*1],cl
  402826:	add    BYTE PTR [eax],al
  402828:	adc    DWORD PTR [eax],eax
  40282a:	add    BYTE PTR [ecx],dl
  40282c:	add    BYTE PTR [edx],al
  40282e:	sub    BYTE PTR [eax+0x0],ah
  402831:	add    BYTE PTR [edx],cl
  402833:	or     ch,BYTE PTR [ebx]
  402835:	add    BYTE PTR [esi],al
  402837:	sub    al,BYTE PTR [ebx]
  402839:	xor    BYTE PTR [ecx],cl
  40283b:	add    BYTE PTR [edx],cl
	...
  402845:	add    ch,BYTE PTR [eax]
  402847:	cmp    DWORD PTR [eax],eax
  402849:	add    BYTE PTR [edx],cl
  40284b:	add    BYTE PTR [eax],al
  40284d:	sub    al,BYTE PTR [eax]
  40284f:	add    BYTE PTR [ebx],dl
  402851:	xor    BYTE PTR [eax+eax*1],al
  402854:	push   ss
  402855:	add    BYTE PTR [eax],al
  402857:	add    BYTE PTR [eax+eax*1],cl
  40285a:	add    BYTE PTR [ecx],dl
  40285c:	add    BYTE PTR [edx],al
  40285e:	add    ebp,DWORD PTR [eax]
  402860:	sub    DWORD PTR [eax],eax
  402862:	add    BYTE PTR [edx],cl
  402864:	and    eax,0x5e2826
  402869:	add    BYTE PTR [edx],cl
  40286b:	and    eax,0x2b0a26
  402870:	push   es
  402871:	sub    al,BYTE PTR [eax]
  402873:	add    BYTE PTR [ebx],dl
  402875:	xor    BYTE PTR [ebx],al
  402877:	add    BYTE PTR [esi],cl
  402879:	add    BYTE PTR [eax],al
  40287b:	add    BYTE PTR [edi],cl
  40287d:	add    BYTE PTR [eax],al
  40287f:	adc    DWORD PTR [eax],eax
  402881:	add    ch,BYTE PTR [eax]
  402883:	pop    edi
  402884:	add    BYTE PTR [eax],al
  402886:	or     ah,BYTE PTR ds:0x2b0a26
  40288c:	push   es
  40288d:	sub    al,BYTE PTR [eax]
  40288f:	add    BYTE PTR [ebx],dl
  402891:	xor    BYTE PTR [ebx],al
  402893:	add    BYTE PTR [edx],dl
  402895:	add    BYTE PTR [eax],al
  402897:	add    BYTE PTR [eax],dl
  402899:	add    BYTE PTR [eax],al
  40289b:	adc    DWORD PTR [eax],eax
  40289d:	ror    BYTE PTR [eax],1
  40289f:	add    BYTE PTR [eax],al
  4028a1:	add    ch,BYTE PTR [eax]
  4028a3:	push   eax
  4028a4:	add    BYTE PTR [eax],al
  4028a6:	or     ah,BYTE PTR ds:0x2b0a26
  4028ac:	push   es
  4028ad:	sub    al,BYTE PTR [eax]
  4028af:	add    BYTE PTR [ebx],dl
  4028b1:	xor    BYTE PTR [ebx],al
  4028b3:	add    BYTE PTR [esi],cl
  4028b5:	add    BYTE PTR [eax],al
  4028b7:	add    BYTE PTR [ecx],dl
  4028b9:	add    BYTE PTR [eax],al
  4028bb:	adc    DWORD PTR [eax],eax
  4028bd:	add    ch,BYTE PTR [eax]
  4028bf:	pusha  
  4028c0:	add    BYTE PTR [eax],al
  4028c2:	or     ah,BYTE PTR ds:0x2b0a26
  4028c8:	push   es
  4028c9:	sub    al,BYTE PTR [eax]
  4028cb:	add    BYTE PTR [ebx],dl
  4028cd:	xor    BYTE PTR [ebx],al
  4028cf:	add    BYTE PTR ds:0x12000000,dh
  4028d5:	add    BYTE PTR [eax],al
  4028d7:	adc    DWORD PTR [eax],eax
  4028d9:	add    cl,BYTE PTR [edi+eax*1+0x141b0000]
  4028e0:	inc    BYTE PTR [ecx]
  4028e2:	or     eax,DWORD PTR [edi]
  4028e4:	sub    al,0x1f
  4028e6:	sbb    BYTE PTR [ebp+0x1],al
  4028e9:	add    BYTE PTR [eax],al
  4028eb:	add    dh,dh
  4028ed:	(bad)  
  4028ee:	(bad)  
  4028ef:	call   DWORD PTR [edi]
  4028f1:	sub    eax,0x23d006
  4028f6:	add    BYTE PTR [esi],al
  4028f8:	sub    BYTE PTR es:[ebx],al
  4028fb:	add    BYTE PTR [eax],al
  4028fd:	sub    esp,DWORD PTR ds:0x82b0a26
  402903:	sub    eax,DWORD PTR ds:0x2b0a0200
  402909:	add    DWORD PTR [eax],eax
  40290b:	push   es
  40290c:	sub    al,BYTE PTR [eax]
  40290e:	add    BYTE PTR [eax],al
  402910:	adc    esi,DWORD PTR [eax]
  402912:	add    eax,DWORD PTR [eax]
  402914:	adc    al,BYTE PTR [eax]
  402916:	add    BYTE PTR [eax],al
  402918:	push   cs
  402919:	add    BYTE PTR [eax],al
  40291b:	adc    DWORD PTR [eax],eax
  40291d:	add    edx,DWORD PTR [edx]
  40291f:	add    dh,bh
  402921:	adc    eax,0x1b000007
  402926:	push   es
  402927:	add    DWORD PTR [edi],0x1b0000
  40292d:	sub    al,BYTE PTR [eax]
  40292f:	add    BYTE PTR [ebx],al
  402931:	xor    BYTE PTR [ecx],cl
  402933:	add    BYTE PTR [edx],cl
	...
  40293d:	add    ch,BYTE PTR [eax]
  40293f:	cmp    DWORD PTR [eax],eax
  402941:	add    BYTE PTR [edx],cl
  402943:	add    BYTE PTR [eax],al
  402945:	sub    al,BYTE PTR [eax]
  402947:	add    BYTE PTR [ebx],dl
  402949:	xor    BYTE PTR [ebx],al
  40294b:	add    BYTE PTR [eax],ch
  40294d:	add    BYTE PTR [eax],al
  40294f:	add    BYTE PTR [ebx],dl
  402951:	add    BYTE PTR [eax],al
  402953:	adc    DWORD PTR [eax],eax
  402955:	jle    0x4029b8
  402957:	add    BYTE PTR [eax],al
  402959:	or     cl,BYTE PTR [ecx+ecx*1+0x141b0000]
  402960:	inc    BYTE PTR [ecx]
  402962:	or     eax,DWORD PTR [edi]
  402964:	sub    al,0xc
  402966:	sub    BYTE PTR [eax+eax*1],al
  402969:	add    BYTE PTR [ebx],ch
  40296b:	and    eax,0x618026
  402970:	add    BYTE PTR [edx],cl
  402972:	jle    0x4029d5
  402974:	add    BYTE PTR [eax],al
  402976:	or     cl,BYTE PTR [edx]
  402978:	sub    eax,DWORD PTR [eax]
  40297a:	push   es
  40297b:	sub    al,BYTE PTR [ebx]
  40297d:	xor    BYTE PTR [ecx],cl
  40297f:	add    BYTE PTR [eax+eax*1],cl
  402982:	add    BYTE PTR [eax],al
  402984:	add    BYTE PTR [eax],al
  402986:	add    BYTE PTR [eax],al
  402988:	jae    0x4029a5
  40298a:	add    BYTE PTR [eax],al
  40298c:	or     al,BYTE PTR [eax+0x400000b]
  402992:	add    BYTE PTR [edx],ch
  402994:	add    esi,DWORD PTR [eax]
  402996:	or     DWORD PTR [eax],eax
  402998:	sub    eax,DWORD PTR [eax]
  40299a:	add    BYTE PTR [eax],al
  40299c:	add    BYTE PTR [eax],al
  40299e:	add    BYTE PTR [eax],al
  4029a0:	add    ch,BYTE PTR [eax]
  4029a2:	bound  eax,QWORD PTR [eax]
  4029a4:	add    BYTE PTR [edx],cl
  4029a6:	add    BYTE PTR [edx],al
  4029a8:	add    ah,BYTE PTR ds:0x4407fe
  4029ae:	add    BYTE PTR [esi],al
  4029b0:	jae    0x402a15
  4029b2:	add    BYTE PTR [eax],al
  4029b4:	or     ch,BYTE PTR [eax]
  4029b6:	add    BYTE PTR fs:[eax],al
  4029b9:	or     al,BYTE PTR [eax]
  4029bb:	add    ch,BYTE PTR [eax]
  4029bd:	sub    DWORD PTR [eax],eax
  4029bf:	add    BYTE PTR [esi],al
  4029c1:	add    BYTE PTR [edx],al
  4029c3:	outs   dx,DWORD PTR ds:[esi]
  4029c4:	sub    eax,DWORD PTR [eax]
  4029c6:	add    BYTE PTR [esi],al
  4029c8:	add    BYTE PTR [eax],al
  4029ca:	sub    al,BYTE PTR [eax]
  4029cc:	sbb    esi,DWORD PTR [eax]
  4029ce:	add    eax,0x13d00
  4029d3:	add    BYTE PTR [ecx],al
  4029d5:	add    BYTE PTR [eax],al
  4029d7:	adc    DWORD PTR [eax],eax
  4029d9:	jle    0x4029e6
  4029db:	add    BYTE PTR [eax],al
  4029dd:	add    al,0xd
  4029df:	or     DWORD PTR [eax],ebp
  4029e1:	and    DWORD PTR [eax],eax
  4029e3:	add    BYTE PTR [edx],cl
  4029e5:	add    BYTE PTR [eax],al
  4029e7:	jle    0x4029f4
  4029e9:	add    BYTE PTR [eax],al
  4029eb:	add    al,0x6f
  4029ed:	and    al,BYTE PTR [eax]
  4029ef:	add    BYTE PTR [edx],cl
  4029f1:	and    eax,0xb7e26
  4029f6:	add    BYTE PTR [edi+ebp*2],al
  4029f9:	and    eax,DWORD PTR [eax]
  4029fb:	add    BYTE PTR [edx],cl
  4029fd:	inc    BYTE PTR [ecx]
  4029ff:	adc    eax,DWORD PTR ds:0xe4390511
  402a05:	add    BYTE PTR [eax],al
  402a07:	add    BYTE PTR [ebx],bl
  402a09:	inc    ebp
  402a0a:	add    DWORD PTR [eax],eax
  402a0c:	add    BYTE PTR [eax],al
  402a0e:	idiv   bh
  402a10:	(bad)  
  402a11:	call   DWORD PTR [edi]
  402a13:	sub    eax,0x29d006
  402a18:	add    BYTE PTR [esi],al
  402a1a:	es pop ds
  402a1c:	push   esp
  402a1d:	sub    BYTE PTR [eax+0x0],ah
  402a20:	add    BYTE PTR [esi],al
  402a22:	or     bl,BYTE PTR [edi]
  402a24:	pop    eax
  402a25:	sub    BYTE PTR [eax+0x0],ah
  402a28:	add    BYTE PTR [esi],al
  402a2a:	jle    0x402a37
  402a2c:	add    BYTE PTR [eax],al
  402a2e:	add    al,0x6f
  402a30:	and    al,BYTE PTR [eax]
  402a32:	add    BYTE PTR [edx],cl
  402a34:	pop    ds
  402a35:	pop    esp
  402a36:	sub    BYTE PTR [eax+0x0],ah
  402a39:	add    BYTE PTR [esi],al
  402a3b:	ficom  DWORD PTR [ebx]
  402a3d:	add    al,0xb
  402a3f:	sub    esp,DWORD PTR [edi+0x7e]
  402a42:	or     eax,DWORD PTR [eax]
  402a44:	add    BYTE PTR [edi+eax*1],al
  402a47:	outs   dx,DWORD PTR ds:[esi]
  402a48:	and    al,0x0
  402a4a:	add    BYTE PTR [edx],cl
  402a4c:	or     al,0x8
  402a4e:	outs   dx,DWORD PTR ds:[esi]
  402a4f:	and    eax,0x250a0000
  402a54:	adc    eax,DWORD PTR es:0x412c0511
  402a5b:	sbb    al,0x45
  402a5d:	add    DWORD PTR [eax],eax
  402a5f:	add    BYTE PTR [eax],al
  402a61:	idiv   bh
  402a63:	(bad)  
  402a64:	inc    DWORD PTR [edi]
  402a66:	push   es
  402a67:	inc    BYTE PTR [ecx]
  402a69:	pop    ds
  402a6a:	pusha  
  402a6b:	sub    BYTE PTR [eax+0x0],ah
  402a6e:	add    BYTE PTR [esi],al
  402a70:	inc    BYTE PTR [ecx]
  402a72:	adc    eax,DWORD PTR [esi]
  402a74:	adc    DWORD PTR [esi],eax
  402a76:	sub    al,0x19
  402a78:	jle    0x402a85
  402a7a:	add    BYTE PTR [eax],al
  402a7c:	add    al,0x6
  402a7e:	jle    0x402a8b
  402a80:	add    BYTE PTR [eax],al
  402a82:	add    al,0x7
  402a84:	outs   dx,DWORD PTR ds:[esi]
  402a85:	and    al,0x0
  402a87:	add    BYTE PTR [edx],cl
  402a89:	and    eax,0x266f26
  402a8e:	add    BYTE PTR [edx],cl
  402a90:	add    BYTE PTR [eax],al
  402a92:	push   es
  402a93:	pop    ds
  402a94:	sub    BYTE PTR fs:[eax+0x0],ah
  402a98:	add    BYTE PTR [esi],al
  402a9a:	(bad)  
  402a9b:	or     al,BYTE PTR [eax]
  402a9d:	add    BYTE PTR [edi],al
  402a9f:	pop    ds
  402aa0:	push   0x6028
  402aa5:	push   es
  402aa6:	(bad)  
  402aa7:	or     eax,DWORD PTR [edi]
  402aa9:	adc    DWORD PTR [ebx+edx*1],eax
  402aac:	pop    es
  402aad:	adc    DWORD PTR [edi],eax
  402aaf:	xor    DWORD PTR [eax+0x14517],edx
  402ab5:	add    BYTE PTR [eax],al
  402ab7:	idiv   bh
  402ab9:	(bad)  
  402aba:	(bad)  
  402abb:	jle    0x402ac8
  402abd:	add    BYTE PTR [eax],al
  402abf:	add    al,0x6
  402ac1:	jle    0x402ace
  402ac3:	add    BYTE PTR [eax],al
  402ac5:	add    al,0x6f
  402ac7:	and    al,BYTE PTR [eax]
  402ac9:	add    BYTE PTR [edx],cl
  402acb:	and    eax,0x6fda0626
  402ad0:	daa    
  402ad1:	add    BYTE PTR [eax],al
  402ad3:	or     al,BYTE PTR [eax]
  402ad5:	jle    0x402ae2
  402ad7:	add    BYTE PTR [eax],al
  402ad9:	add    al,0x7e
  402adb:	or     eax,DWORD PTR [eax]
  402add:	add    BYTE PTR [edi+ebp*2],al
  402ae0:	and    al,BYTE PTR [eax]
  402ae2:	add    BYTE PTR [edx],cl
  402ae4:	and    eax,0x286f26
  402ae9:	add    BYTE PTR [edx],cl
  402aeb:	add    BYTE PTR [eax],al
  402aed:	jle    0x402afa
  402aef:	add    BYTE PTR [eax],al
  402af1:	add    al,0x2
  402af3:	sub    BYTE PTR [ecx],ch
  402af5:	add    BYTE PTR [eax],al
  402af7:	or     ah,BYTE PTR ds:0x2a7326
  402afd:	add    BYTE PTR [edx],cl
  402aff:	outs   dx,DWORD PTR ds:[esi]
  402b00:	sub    eax,DWORD PTR [eax]
  402b02:	add    BYTE PTR [edx],cl
  402b04:	add    BYTE PTR [eax],al
  402b06:	fimul  WORD PTR [ecx]
  402b08:	add    BYTE PTR [ecx],cl
  402b0a:	sub    BYTE PTR [eax+eax*1],ch
  402b0d:	add    BYTE PTR [edx],cl
  402b0f:	add    ah,bl
  402b11:	add    BYTE PTR [eax],al
  402b13:	add    BYTE PTR [edx],ch
  402b15:	add    BYTE PTR [eax],al
  402b17:	add    BYTE PTR [ecx+0x1c],al
  402b1a:	add    BYTE PTR [eax],al
  402b1c:	add    al,BYTE PTR [eax]
  402b1e:	add    BYTE PTR [eax],al
  402b20:	sldt   WORD PTR [eax]
  402b23:	add    BYTE PTR [ecx],ah
  402b25:	add    DWORD PTR [eax],eax
  402b27:	add    BYTE PTR [eax],dh
  402b29:	add    DWORD PTR [eax],eax
  402b2b:	add    BYTE PTR [ecx],cl
  402b2d:	add    BYTE PTR [eax],al
  402b2f:	add    BYTE PTR [eax],al
  402b31:	add    BYTE PTR [eax],al
  402b33:	add    BYTE PTR [ebx],bl
  402b35:	xor    BYTE PTR [ebx],al
  402b37:	add    BYTE PTR [ebx+0x0],bl
  402b3a:	add    BYTE PTR [eax],al
  402b3c:	or     al,0x0
  402b3e:	add    BYTE PTR [ecx],dl
  402b40:	add    BYTE PTR [eax],al
  402b42:	add    ebp,DWORD PTR [ebx+ebx*1]
  402b45:	pop    ss
  402b46:	inc    ebp
  402b47:	add    DWORD PTR [eax],eax
  402b49:	add    BYTE PTR [eax],al
  402b4b:	idiv   bh
  402b4d:	(bad)  
  402b4e:	call   DWORD PTR [edi]
  402b50:	sub    eax,0x2ad006
  402b55:	add    BYTE PTR [esi],al
  402b57:	add    bh,BYTE PTR es:[ebx+0xc]
  402b5b:	add    BYTE PTR [eax],al
  402b5d:	add    al,0x2d
  402b5f:	or     DWORD PTR [edi],ebx
  402b61:	ins    BYTE PTR es:[edi],dx
  402b62:	sub    BYTE PTR [eax+0x0],ah
  402b65:	add    BYTE PTR [esi],al
  402b67:	sub    eax,DWORD PTR [edi]
  402b69:	pop    ds
  402b6a:	jo     0x402b94
  402b6c:	pusha  
  402b6d:	add    BYTE PTR [eax],al
  402b6f:	push   es
  402b70:	add    BYTE PTR [edx],cl
  402b72:	push   es
  402b73:	sub    al,0x16
  402b75:	sbb    al,BYTE PTR [ebp+0x1]
  402b78:	add    BYTE PTR [eax],al
  402b7a:	add    dh,dh
  402b7c:	(bad)  
  402b7d:	(bad)  
  402b7e:	inc    DWORD PTR [edx]
  402b80:	jnp    0x402b8e
  402b82:	add    BYTE PTR [eax],al
  402b84:	add    al,0x6f
  402b86:	add    BYTE PTR gs:[eax],al
  402b89:	or     al,BYTE PTR [eax]
  402b8b:	add    dh,bl
  402b8d:	or     al,BYTE PTR [eax]
  402b8f:	add    al,BYTE PTR [ebx]
  402b91:	sub    BYTE PTR [esi+0x0],ah
  402b94:	add    BYTE PTR [edx],cl
  402b96:	add    ah,bl
  402b98:	add    BYTE PTR [eax],al
  402b9a:	sub    al,BYTE PTR [eax]
  402b9c:	add    DWORD PTR [eax],edx
  402b9e:	add    BYTE PTR [eax],al
  402ba0:	add    al,BYTE PTR [eax]
  402ba2:	add    al,BYTE PTR [eax]
  402ba4:	dec    esp
  402ba5:	dec    esi
  402ba6:	add    BYTE PTR [edx],cl
  402ba8:	add    BYTE PTR [eax],al
  402baa:	add    BYTE PTR [eax],al
  402bac:	adc    esi,DWORD PTR [eax]
  402bae:	pop    es
  402baf:	add    BYTE PTR [eax+edx*1],cl
  402bb2:	add    BYTE PTR [eax],al
  402bb4:	adc    al,0x0
  402bb6:	add    BYTE PTR [ecx],dl
  402bb8:	add    al,dl
  402bba:	or     al,BYTE PTR [eax]
  402bbc:	add    BYTE PTR [edx],al
  402bbe:	sub    BYTE PTR [eax+0x0],dl
  402bc1:	add    BYTE PTR [edx],cl
  402bc3:	jae    0x402c2c
  402bc5:	add    BYTE PTR [eax],al
  402bc7:	or     cl,BYTE PTR [edx]
  402bc9:	add    dh,BYTE PTR [ebx+0x68]
  402bcc:	add    BYTE PTR [eax],al
  402bce:	or     ch,BYTE PTR [edi+0x2d]
  402bd1:	add    BYTE PTR [eax],al
  402bd3:	push   es
  402bd4:	add    BYTE PTR [edx],al
  402bd6:	jae    0x402c40
  402bd8:	add    BYTE PTR [eax],al
  402bda:	or     ch,BYTE PTR [edi+0x2f]
  402bdd:	add    BYTE PTR [eax],al
  402bdf:	push   es
  402be0:	add    BYTE PTR [edx],al
  402be2:	jae    0x402c4d
  402be4:	add    BYTE PTR [eax],al
  402be6:	or     ch,BYTE PTR [edi+0x31]
  402be9:	add    BYTE PTR [eax],al
  402beb:	push   es
  402bec:	add    BYTE PTR [edx],al
  402bee:	jae    0x402c5a
  402bf0:	add    BYTE PTR [eax],al
  402bf2:	or     ch,BYTE PTR [edi+0x33]
  402bf5:	add    BYTE PTR [eax],al
  402bf7:	push   es
  402bf8:	add    BYTE PTR [edx],al
  402bfa:	jae    0x402c67
  402bfc:	add    BYTE PTR [eax],al
  402bfe:	or     ch,BYTE PTR [edi+0x35]
  402c01:	add    BYTE PTR [eax],al
  402c03:	push   es
  402c04:	add    BYTE PTR [edx],al
  402c06:	jae    0x402c72
  402c08:	add    BYTE PTR [eax],al
  402c0a:	or     ch,BYTE PTR [edi+0x37]
  402c0d:	add    BYTE PTR [eax],al
  402c0f:	push   es
  402c10:	add    BYTE PTR [edx],al
  402c12:	jae    0x402c7d
  402c14:	add    BYTE PTR [eax],al
  402c16:	or     ch,BYTE PTR [edi+0x39]
  402c19:	add    BYTE PTR [eax],al
  402c1b:	push   es
  402c1c:	add    BYTE PTR [edx],al
  402c1e:	jae    0x402c8a
  402c20:	add    BYTE PTR [eax],al
  402c22:	or     ch,BYTE PTR [edi+0x3b]
  402c25:	add    BYTE PTR [eax],al
  402c27:	push   es
  402c28:	add    BYTE PTR [edx],al
  402c2a:	jae    0x402c96
  402c2c:	add    BYTE PTR [eax],al
  402c2e:	or     ch,BYTE PTR [edi+0x3d]
  402c31:	add    BYTE PTR [eax],al
  402c33:	push   es
  402c34:	add    BYTE PTR [edx],al
  402c36:	jae    0x402ca2
  402c38:	add    BYTE PTR [eax],al
  402c3a:	or     ch,BYTE PTR [edi+0x3f]
  402c3d:	add    BYTE PTR [eax],al
  402c3f:	push   es
  402c40:	add    BYTE PTR [edx],al
  402c42:	jae    0x402cae
  402c44:	add    BYTE PTR [eax],al
  402c46:	or     ch,BYTE PTR [edi+0x41]
  402c49:	add    BYTE PTR [eax],al
  402c4b:	push   es
  402c4c:	add    BYTE PTR [edx],al
  402c4e:	jae    0x402cba
  402c50:	add    BYTE PTR [eax],al
  402c52:	or     ch,BYTE PTR [edi+0x43]
  402c55:	add    BYTE PTR [eax],al
  402c57:	push   es
  402c58:	add    BYTE PTR [edx],al
  402c5a:	outs   dx,DWORD PTR ds:[esi]
  402c5b:	xor    BYTE PTR [eax],al
  402c5d:	add    BYTE PTR [esi],al
  402c5f:	and    eax,0x6c6f26
  402c64:	add    BYTE PTR [edx],cl
  402c66:	add    BYTE PTR [edx],al
  402c68:	outs   dx,DWORD PTR ds:[esi]
  402c69:	cmp    BYTE PTR [eax],al
  402c6b:	add    BYTE PTR [esi],al
  402c6d:	outs   dx,DWORD PTR ds:[esi]
  402c6e:	ins    BYTE PTR es:[edi],dx
  402c6f:	add    BYTE PTR [eax],al
  402c71:	or     al,BYTE PTR [eax]
  402c73:	add    ch,BYTE PTR [edi+0x6d]
  402c76:	add    BYTE PTR [eax],al
  402c78:	or     al,BYTE PTR [eax]
  402c7a:	add    ch,BYTE PTR [edi+0x2c]
  402c7d:	add    BYTE PTR [eax],al
  402c7f:	push   es
  402c80:	and    eax,0x6e2826
  402c85:	add    BYTE PTR [edx],cl
  402c87:	and    eax,0x6f6f26
  402c8c:	add    BYTE PTR [edx],cl
  402c8e:	add    BYTE PTR [edx],al
  402c90:	outs   dx,DWORD PTR ds:[esi]
  402c91:	sub    al,0x0
  402c93:	add    BYTE PTR [esi],al
  402c95:	and    eax,0xb62026
  402c9a:	add    BYTE PTR [eax],al
  402c9c:	sub    BYTE PTR [eax+0x0],ch
  402c9f:	add    BYTE PTR [esi],al
  402ca1:	pop    ds
  402ca2:	je     0x402ccc
  402ca4:	bound  eax,QWORD PTR [eax]
  402ca6:	add    BYTE PTR [esi],al
  402ca8:	and    eax,0x28781f26
  402cad:	pusha  
  402cae:	add    BYTE PTR [eax],al
  402cb0:	push   es
  402cb1:	pop    ds
  402cb2:	jl     0x402cdc
  402cb4:	pusha  
  402cb5:	add    BYTE PTR [eax],al
  402cb7:	push   es
  402cb8:	and    BYTE PTR [eax+0x28000000],al
  402cbe:	pusha  
  402cbf:	add    BYTE PTR [eax],al
  402cc1:	push   es
  402cc2:	jae    0x402d34
  402cc4:	add    BYTE PTR [eax],al
  402cc6:	or     ch,BYTE PTR [edi+0x71]
  402cc9:	add    BYTE PTR [eax],al
  402ccb:	or     al,BYTE PTR [eax]
  402ccd:	add    ch,BYTE PTR [edi+0x2c]
  402cd0:	add    BYTE PTR [eax],al
  402cd2:	push   es
  402cd3:	and    eax,0x20031226
  402cd8:	test   BYTE PTR [eax],al
  402cda:	add    BYTE PTR [eax],al
  402cdc:	sub    BYTE PTR [eax+0x0],ah
  402cdf:	add    BYTE PTR [esi],al
  402ce1:	and    BYTE PTR [eax+0x28000000],cl
  402ce7:	pusha  
  402ce8:	add    BYTE PTR [eax],al
  402cea:	push   es
  402ceb:	sub    BYTE PTR [edx+0x0],dh
  402cee:	add    BYTE PTR [edx],cl
  402cf0:	add    BYTE PTR [ecx],cl
  402cf2:	outs   dx,DWORD PTR ds:[esi]
  402cf3:	jae    0x402cf5
  402cf5:	add    BYTE PTR [edx],cl
  402cf7:	add    BYTE PTR [edx],al
  402cf9:	outs   dx,DWORD PTR ds:[esi]
  402cfa:	sub    al,0x0
  402cfc:	add    BYTE PTR [esi],al
  402cfe:	and    bh,bl
  402d00:	add    BYTE PTR [eax],al
  402d02:	add    BYTE PTR [eax],ch
  402d04:	push   0x6f060000
  402d09:	je     0x402d0b
  402d0b:	add    BYTE PTR [edx],cl
  402d0d:	add    BYTE PTR [edx],al
  402d0f:	outs   dx,DWORD PTR ds:[esi]
  402d10:	sub    al,0x0
  402d12:	add    BYTE PTR [esi],al
  402d14:	and    eax,0x20051226
  402d19:	mov    WORD PTR [eax],es
  402d1b:	add    BYTE PTR [eax],al
  402d1d:	sub    BYTE PTR [eax+0x0],ah
  402d20:	add    BYTE PTR [esi],al
  402d22:	and    BYTE PTR [eax+0x28000000],dl
  402d28:	pusha  
  402d29:	add    BYTE PTR [eax],al
  402d2b:	push   es
  402d2c:	sub    BYTE PTR [ebp+0x0],dh
  402d2f:	add    BYTE PTR [edx],cl
  402d31:	add    BYTE PTR [ecx],dl
  402d33:	add    eax,0x766f
  402d38:	or     al,BYTE PTR [eax]
  402d3a:	add    ch,BYTE PTR [edi+0x2c]
  402d3d:	add    BYTE PTR [eax],al
  402d3f:	push   es
  402d40:	and    eax,0x942026
  402d45:	add    BYTE PTR [eax],al
  402d47:	sub    BYTE PTR [eax+0x0],ah
  402d4a:	add    BYTE PTR [esi],al
  402d4c:	outs   dx,DWORD PTR ds:[esi]
  402d4d:	ja     0x402d4f
  402d4f:	add    BYTE PTR [edx],cl
  402d51:	add    BYTE PTR [edx],al
  402d53:	outs   dx,DWORD PTR ds:[esi]
  402d54:	sub    al,0x0
  402d56:	add    BYTE PTR [esi],al
  402d58:	and    dh,ch
  402d5a:	add    BYTE PTR [eax],al
  402d5c:	add    BYTE PTR [eax],ch
  402d5e:	push   0x25060000
  402d63:	outs   dx,DWORD PTR es:[esi]
  402d65:	js     0x402d67
  402d67:	add    BYTE PTR [edx],cl
  402d69:	add    BYTE PTR [edx],al
  402d6b:	outs   dx,DWORD PTR ds:[esi]
  402d6c:	sub    al,0x0
  402d6e:	add    BYTE PTR [esi],al
  402d70:	and    eax,0x982026
  402d75:	add    BYTE PTR [eax],al
  402d77:	sub    BYTE PTR [eax+0x0],ah
  402d7a:	add    BYTE PTR [esi],al
  402d7c:	outs   dx,DWORD PTR ds:[esi]
  402d7d:	jns    0x402d7f
  402d7f:	add    BYTE PTR [edx],cl
  402d81:	add    BYTE PTR [edx],al
  402d83:	outs   dx,DWORD PTR ds:[esi]
  402d84:	add    BYTE PTR cs:[eax],al
  402d87:	push   es
  402d88:	sub    BYTE PTR [edx+0x0],bh
  402d8b:	add    BYTE PTR [edx],cl
  402d8d:	outs   dx,DWORD PTR ds:[esi]
  402d8e:	outs   dx,DWORD PTR ds:[esi]
  402d8f:	add    BYTE PTR [eax],al
  402d91:	or     al,BYTE PTR [eax]
  402d93:	add    ch,BYTE PTR [edi+0x2e]
  402d96:	add    BYTE PTR [eax],al
  402d98:	push   es
  402d99:	and    eax,0x20031226
  402d9e:	pushf  
  402d9f:	add    BYTE PTR [eax],al
  402da1:	add    BYTE PTR [eax],ch
  402da3:	pusha  
  402da4:	add    BYTE PTR [eax],al
  402da6:	push   es
  402da7:	and    BYTE PTR [eax+0x28000000],ah
  402dad:	pusha  
  402dae:	add    BYTE PTR [eax],al
  402db0:	push   es
  402db1:	sub    BYTE PTR [edx+0x0],dh
  402db4:	add    BYTE PTR [edx],cl
  402db6:	add    BYTE PTR [ecx],cl
  402db8:	outs   dx,DWORD PTR ds:[esi]
  402db9:	jae    0x402dbb
  402dbb:	add    BYTE PTR [edx],cl
  402dbd:	add    BYTE PTR [edx],al
  402dbf:	outs   dx,DWORD PTR ds:[esi]
  402dc0:	add    BYTE PTR cs:[eax],al
  402dc3:	push   es
  402dc4:	and    eax,0x1092026
  402dc9:	add    BYTE PTR [eax],al
  402dcb:	sub    BYTE PTR [eax+0x0],ch
  402dce:	add    BYTE PTR [esi],al
  402dd0:	outs   dx,DWORD PTR ds:[esi]
  402dd1:	je     0x402dd3
  402dd3:	add    BYTE PTR [edx],cl
  402dd5:	add    BYTE PTR [edx],al
  402dd7:	outs   dx,DWORD PTR ds:[esi]
  402dd8:	add    BYTE PTR cs:[eax],al
  402ddb:	push   es
  402ddc:	and    eax,0x20051226
  402de1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402de2:	add    BYTE PTR [eax],al
  402de4:	add    BYTE PTR [eax],ch
  402de6:	pusha  
  402de7:	add    BYTE PTR [eax],al
  402de9:	push   es
  402dea:	and    BYTE PTR [eax+0x28000000],ch
  402df0:	pusha  
  402df1:	add    BYTE PTR [eax],al
  402df3:	push   es
  402df4:	sub    BYTE PTR [ebp+0x0],dh
  402df7:	add    BYTE PTR [edx],cl
  402df9:	add    BYTE PTR [ecx],dl
  402dfb:	add    eax,0x766f
  402e00:	or     al,BYTE PTR [eax]
  402e02:	add    ch,BYTE PTR [edi+0x2e]
  402e05:	add    BYTE PTR [eax],al
  402e07:	push   es
  402e08:	and    eax,0xac2026
  402e0d:	add    BYTE PTR [eax],al
  402e0f:	sub    BYTE PTR [eax+0x0],ah
  402e12:	add    BYTE PTR [esi],al
  402e14:	outs   dx,DWORD PTR ds:[esi]
  402e15:	ja     0x402e17
  402e17:	add    BYTE PTR [edx],cl
  402e19:	add    BYTE PTR [edx],al
  402e1b:	outs   dx,DWORD PTR ds:[esi]
  402e1c:	add    BYTE PTR cs:[eax],al
  402e1f:	push   es
  402e20:	and    eax,0x1182026
  402e25:	add    BYTE PTR [eax],al
  402e27:	sub    BYTE PTR [eax+0x0],ch
  402e2a:	add    BYTE PTR [esi],al
  402e2c:	and    eax,0x786f26
  402e31:	add    BYTE PTR [edx],cl
  402e33:	add    BYTE PTR [edx],al
  402e35:	outs   dx,DWORD PTR ds:[esi]
  402e36:	add    BYTE PTR cs:[eax],al
  402e39:	push   es
  402e3a:	and    eax,0xb02026
  402e3f:	add    BYTE PTR [eax],al
  402e41:	sub    BYTE PTR [eax+0x0],ah
  402e44:	add    BYTE PTR [esi],al
  402e46:	outs   dx,DWORD PTR ds:[esi]
  402e47:	jns    0x402e49
  402e49:	add    BYTE PTR [edx],cl
  402e4b:	add    BYTE PTR [edx],al
  402e4d:	outs   dx,DWORD PTR ds:[esi]
  402e4e:	xor    BYTE PTR [eax],al
  402e50:	add    BYTE PTR [esi],al
  402e52:	and    eax,0x21200626
  402e57:	add    DWORD PTR [eax],eax
  402e59:	add    BYTE PTR [eax],ch
  402e5b:	push   0x25060000
  402e60:	outs   dx,DWORD PTR es:[esi]
  402e62:	jnp    0x402e64
  402e64:	add    BYTE PTR [edx],cl
  402e66:	je     0x402ea9
  402e68:	add    BYTE PTR [eax],al
  402e6a:	add    DWORD PTR [edi+0x7c],ebp
  402e6d:	add    BYTE PTR [eax],al
  402e6f:	or     al,BYTE PTR [eax]
  402e71:	add    ch,BYTE PTR [edi+0x30]
  402e74:	add    BYTE PTR [eax],al
  402e76:	push   es
  402e77:	and    eax,0x20031226
  402e7c:	mov    ah,0x0
  402e7e:	add    BYTE PTR [eax],al
  402e80:	sub    BYTE PTR [eax+0x0],ah
  402e83:	add    BYTE PTR [esi],al
  402e85:	and    BYTE PTR [eax+0x28000000],bh
  402e8b:	pusha  
  402e8c:	add    BYTE PTR [eax],al
  402e8e:	push   es
  402e8f:	sub    BYTE PTR [edx+0x0],dh
  402e92:	add    BYTE PTR [edx],cl
  402e94:	add    BYTE PTR [ecx],cl
  402e96:	outs   dx,DWORD PTR ds:[esi]
  402e97:	jae    0x402e99
  402e99:	add    BYTE PTR [edx],cl
  402e9b:	add    BYTE PTR [edx],al
  402e9d:	outs   dx,DWORD PTR ds:[esi]
  402e9e:	xor    BYTE PTR [eax],al
  402ea0:	add    BYTE PTR [esi],al
  402ea2:	and    eax,0x1442026
  402ea7:	add    BYTE PTR [eax],al
  402ea9:	sub    BYTE PTR [eax+0x0],ch
  402eac:	add    BYTE PTR [esi],al
  402eae:	and    eax,0x746f26
  402eb3:	add    BYTE PTR [edx],cl
  402eb5:	add    BYTE PTR [edx],al
  402eb7:	outs   dx,DWORD PTR ds:[esi]
  402eb8:	xor    BYTE PTR [eax],al
  402eba:	add    BYTE PTR [esi],al
  402ebc:	and    eax,0x20051226
  402ec1:	mov    esp,0x28000000
  402ec6:	pusha  
  402ec7:	add    BYTE PTR [eax],al
  402ec9:	push   es
  402eca:	and    al,al
  402ecc:	add    BYTE PTR [eax],al
  402ece:	add    BYTE PTR [eax],ch
  402ed0:	pusha  
  402ed1:	add    BYTE PTR [eax],al
  402ed3:	push   es
  402ed4:	sub    BYTE PTR [ebp+0x0],dh
  402ed7:	add    BYTE PTR [edx],cl
  402ed9:	add    BYTE PTR [ecx],dl
  402edb:	add    eax,0x766f
  402ee0:	or     al,BYTE PTR [eax]
  402ee2:	add    ch,BYTE PTR [edi+0x30]
  402ee5:	add    BYTE PTR [eax],al
  402ee7:	push   es
  402ee8:	and    ah,al
  402eea:	add    BYTE PTR [eax],al
  402eec:	add    BYTE PTR [eax],ch
  402eee:	pusha  
  402eef:	add    BYTE PTR [eax],al
  402ef1:	push   es
  402ef2:	outs   dx,DWORD PTR ds:[esi]
  402ef3:	jge    0x402ef5
  402ef5:	add    BYTE PTR [edx],cl
  402ef7:	add    BYTE PTR [edx],al
  402ef9:	outs   dx,DWORD PTR ds:[esi]
  402efa:	xor    BYTE PTR [eax],al
  402efc:	add    BYTE PTR [esi],al
  402efe:	and    eax,0xc82026
  402f03:	add    BYTE PTR [eax],al
  402f05:	sub    BYTE PTR [eax+0x0],ah
  402f08:	add    BYTE PTR [esi],al
  402f0a:	outs   dx,DWORD PTR ds:[esi]
  402f0b:	jle    0x402f0d
  402f0d:	add    BYTE PTR [edx],cl
  402f0f:	add    BYTE PTR [edx],al
  402f11:	outs   dx,DWORD PTR ds:[esi]
  402f12:	xor    BYTE PTR [eax],al
  402f14:	add    BYTE PTR [esi],al
  402f16:	and    eax,0xcc2026
  402f1b:	add    BYTE PTR [eax],al
  402f1d:	sub    BYTE PTR [eax+0x0],ah
  402f20:	add    BYTE PTR [esi],al
  402f22:	outs   dx,DWORD PTR ds:[esi]
  402f23:	jg     0x402f25
  402f25:	add    BYTE PTR [edx],cl
  402f27:	add    BYTE PTR [edx],al
  402f29:	outs   dx,DWORD PTR ds:[esi]
  402f2a:	xor    al,BYTE PTR [eax]
  402f2c:	add    BYTE PTR [esi],al
  402f2e:	and    eax,0xb62026
  402f33:	add    BYTE PTR [eax],al
  402f35:	sub    BYTE PTR [eax+0x0],ch
  402f38:	add    BYTE PTR [esi],al
  402f3a:	and    eax,0xd02026
  402f3f:	add    BYTE PTR [eax],al
  402f41:	sub    BYTE PTR [edx+0x0],ah
  402f44:	add    BYTE PTR [esi],al
  402f46:	and    eax,0xd42026
  402f4b:	add    BYTE PTR [eax],al
  402f4d:	sub    BYTE PTR [eax+0x0],ah
  402f50:	add    BYTE PTR [esi],al
  402f52:	and    al,bl
  402f54:	add    BYTE PTR [eax],al
  402f56:	add    BYTE PTR [eax],ch
  402f58:	pusha  
  402f59:	add    BYTE PTR [eax],al
  402f5b:	push   es
  402f5c:	and    ah,bl
  402f5e:	add    BYTE PTR [eax],al
  402f60:	add    BYTE PTR [eax],ch
  402f62:	pusha  
  402f63:	add    BYTE PTR [eax],al
  402f65:	push   es
  402f66:	jae    0x402fd8
  402f68:	add    BYTE PTR [eax],al
  402f6a:	or     ch,BYTE PTR [edi+0x71]
  402f6d:	add    BYTE PTR [eax],al
  402f6f:	or     al,BYTE PTR [eax]
  402f71:	add    ch,BYTE PTR [edi+0x32]
  402f74:	add    BYTE PTR [eax],al
  402f76:	push   es
  402f77:	adc    al,BYTE PTR [ebx]
  402f79:	and    al,ah
  402f7b:	add    BYTE PTR [eax],al
  402f7d:	add    BYTE PTR [eax],ch
  402f7f:	pusha  
  402f80:	add    BYTE PTR [eax],al
  402f82:	push   es
  402f83:	and    ah,ah
  402f85:	add    BYTE PTR [eax],al
  402f87:	add    BYTE PTR [eax],ch
  402f89:	pusha  
  402f8a:	add    BYTE PTR [eax],al
  402f8c:	push   es
  402f8d:	sub    BYTE PTR [edx+0x0],dh
  402f90:	add    BYTE PTR [edx],cl
  402f92:	add    BYTE PTR [ecx],cl
  402f94:	outs   dx,DWORD PTR ds:[esi]
  402f95:	jae    0x402f97
  402f97:	add    BYTE PTR [edx],cl
  402f99:	add    BYTE PTR [edx],al
  402f9b:	outs   dx,DWORD PTR ds:[esi]
  402f9c:	xor    al,BYTE PTR [eax]
  402f9e:	add    BYTE PTR [esi],al
  402fa0:	and    eax,0x15b2026
  402fa5:	add    BYTE PTR [eax],al
  402fa7:	sub    BYTE PTR [eax+0x0],ch
  402faa:	add    BYTE PTR [esi],al
  402fac:	outs   dx,DWORD PTR ds:[esi]
  402fad:	je     0x402faf
  402faf:	add    BYTE PTR [edx],cl
  402fb1:	add    BYTE PTR [edx],al
  402fb3:	outs   dx,DWORD PTR ds:[esi]
  402fb4:	xor    al,BYTE PTR [eax]
  402fb6:	add    BYTE PTR [esi],al
  402fb8:	adc    al,BYTE PTR ds:0xe820
  402fbe:	add    BYTE PTR [eax],ch
  402fc0:	pusha  
  402fc1:	add    BYTE PTR [eax],al
  402fc3:	push   es
  402fc4:	and    ah,ch
  402fc6:	add    BYTE PTR [eax],al
  402fc8:	add    BYTE PTR [eax],ch
  402fca:	pusha  
  402fcb:	add    BYTE PTR [eax],al
  402fcd:	push   es
  402fce:	sub    BYTE PTR [ebp+0x0],dh
  402fd1:	add    BYTE PTR [edx],cl
  402fd3:	add    BYTE PTR [ecx],dl
  402fd5:	add    eax,0x766f
  402fda:	or     al,BYTE PTR [eax]
  402fdc:	add    ch,BYTE PTR [edi+0x32]
  402fdf:	add    BYTE PTR [eax],al
  402fe1:	push   es
  402fe2:	and    eax,0xf02026
  402fe7:	add    BYTE PTR [eax],al
  402fe9:	sub    BYTE PTR [eax+0x0],ah
  402fec:	add    BYTE PTR [esi],al
  402fee:	outs   dx,DWORD PTR ds:[esi]
  402fef:	ja     0x402ff1
  402ff1:	add    BYTE PTR [edx],cl
  402ff3:	add    BYTE PTR [edx],al
  402ff5:	outs   dx,DWORD PTR ds:[esi]
  402ff6:	xor    al,0x0
  402ff8:	add    BYTE PTR [esi],al
  402ffa:	and    eax,0xf42026
  402fff:	add    BYTE PTR [eax],al
  403001:	sub    BYTE PTR [eax+0x0],ah
  403004:	add    BYTE PTR [esi],al
  403006:	outs   dx,DWORD PTR ds:[esi]
  403007:	add    BYTE PTR [eax],0x0
  40300a:	or     al,BYTE PTR [eax]
  40300c:	add    ch,BYTE PTR [edi+0x34]
  40300f:	add    BYTE PTR [eax],al
  403011:	push   es
  403012:	and    BYTE PTR [esi+0x28000000],dh
  403018:	push   0x25060000
  40301d:	es and al,bh
  403020:	add    BYTE PTR [eax],al
  403022:	add    BYTE PTR [eax],ch
  403024:	bound  eax,QWORD PTR [eax]
  403026:	add    BYTE PTR [esi],al
  403028:	and    ah,bh
  40302a:	add    BYTE PTR [eax],al
  40302c:	add    BYTE PTR [eax],ch
  40302e:	pusha  
  40302f:	add    BYTE PTR [eax],al
  403031:	push   es
  403032:	and    BYTE PTR [eax],al
  403034:	add    DWORD PTR [eax],eax
  403036:	add    BYTE PTR [eax],ch
  403038:	pusha  
  403039:	add    BYTE PTR [eax],al
  40303b:	push   es
  40303c:	and    BYTE PTR [ecx+eax*1],al
  40303f:	add    BYTE PTR [eax],al
  403041:	sub    BYTE PTR [eax+0x0],ah
  403044:	add    BYTE PTR [esi],al
  403046:	jae    0x4030b8
  403048:	add    BYTE PTR [eax],al
  40304a:	or     ch,BYTE PTR [edi+0x71]
  40304d:	add    BYTE PTR [eax],al
  40304f:	or     al,BYTE PTR [eax]
  403051:	add    ch,BYTE PTR [edi+0x34]
  403054:	add    BYTE PTR [eax],al
  403056:	push   es
  403057:	and    eax,0x812826
  40305c:	add    BYTE PTR [edx],cl
  40305e:	and    eax,0x826f26
  403063:	add    BYTE PTR [edx],cl
  403065:	add    BYTE PTR [edx],al
  403067:	outs   dx,DWORD PTR ds:[esi]
  403068:	xor    al,0x0
  40306a:	add    BYTE PTR [esi],al
  40306c:	and    eax,0x20031226
  403071:	or     BYTE PTR [ecx],al
  403073:	add    BYTE PTR [eax],al
  403075:	sub    BYTE PTR [eax+0x0],ah
  403078:	add    BYTE PTR [esi],al
  40307a:	and    BYTE PTR [ecx+eax*1],cl
  40307d:	add    BYTE PTR [eax],al
  40307f:	sub    BYTE PTR [eax+0x0],ah
  403082:	add    BYTE PTR [esi],al
  403084:	sub    BYTE PTR [edx+0x0],dh
  403087:	add    BYTE PTR [edx],cl
  403089:	add    BYTE PTR [ecx],cl
  40308b:	outs   dx,DWORD PTR ds:[esi]
  40308c:	jae    0x40308e
  40308e:	add    BYTE PTR [edx],cl
  403090:	add    BYTE PTR [edx],al
  403092:	outs   dx,DWORD PTR ds:[esi]
  403093:	xor    al,0x0
  403095:	add    BYTE PTR [esi],al
  403097:	and    BYTE PTR [ecx+eax*1+0x0],ch
  40309b:	add    BYTE PTR [eax],ch
  40309d:	push   0x25060000
  4030a2:	outs   dx,DWORD PTR es:[esi]
  4030a4:	je     0x4030a6
  4030a6:	add    BYTE PTR [edx],cl
  4030a8:	add    BYTE PTR [edx],al
  4030aa:	outs   dx,DWORD PTR ds:[esi]
  4030ab:	xor    al,0x0
  4030ad:	add    BYTE PTR [esi],al
  4030af:	adc    al,BYTE PTR ds:0x11020
  4030b5:	add    BYTE PTR [eax],ch
  4030b7:	pusha  
  4030b8:	add    BYTE PTR [eax],al
  4030ba:	push   es
  4030bb:	and    BYTE PTR [ecx+eax*1],dl
  4030be:	add    BYTE PTR [eax],al
  4030c0:	sub    BYTE PTR [eax+0x0],ah
  4030c3:	add    BYTE PTR [esi],al
  4030c5:	sub    BYTE PTR [ebp+0x0],dh
  4030c8:	add    BYTE PTR [edx],cl
  4030ca:	add    BYTE PTR [ecx],dl
  4030cc:	add    eax,0x766f
  4030d1:	or     al,BYTE PTR [eax]
  4030d3:	add    ch,BYTE PTR [edi+0x34]
  4030d6:	add    BYTE PTR [eax],al
  4030d8:	push   es
  4030d9:	and    eax,0x1182026
  4030de:	add    BYTE PTR [eax],al
  4030e0:	sub    BYTE PTR [eax+0x0],ah
  4030e3:	add    BYTE PTR [esi],al
  4030e5:	outs   dx,DWORD PTR ds:[esi]
  4030e6:	ja     0x4030e8
  4030e8:	add    BYTE PTR [edx],cl
  4030ea:	add    BYTE PTR [edx],al
  4030ec:	outs   dx,DWORD PTR ds:[esi]
  4030ed:	xor    al,0x0
  4030ef:	add    BYTE PTR [esi],al
  4030f1:	and    BYTE PTR [ecx+0x1],bh
  4030f4:	add    BYTE PTR [eax],al
  4030f6:	sub    BYTE PTR [eax+0x0],ch
  4030f9:	add    BYTE PTR [esi],al
  4030fb:	and    eax,0x836f26
  403100:	add    BYTE PTR [edx],cl
  403102:	add    BYTE PTR [edx],al
  403104:	outs   dx,DWORD PTR ds:[esi]
  403105:	add    BYTE PTR ss:[eax],al
  403108:	push   es
  403109:	sub    BYTE PTR [eax+eax*1+0x26250a00],al
  403110:	outs   dx,DWORD PTR ds:[esi]
  403111:	test   DWORD PTR [eax],eax
  403113:	add    BYTE PTR [edx],cl
  403115:	add    BYTE PTR [edx],al
  403117:	outs   dx,DWORD PTR ds:[esi]
  403118:	add    BYTE PTR ss:[eax],al
  40311b:	push   es
  40311c:	and    BYTE PTR [ecx+eax*1],bl
  40311f:	add    BYTE PTR [eax],al
  403121:	sub    BYTE PTR [eax+0x0],ah
  403124:	add    BYTE PTR [esi],al
  403126:	outs   dx,DWORD PTR ds:[esi]
  403127:	xchg   BYTE PTR [eax],al
  403129:	add    BYTE PTR [edx],cl
  40312b:	add    BYTE PTR [edx],al
  40312d:	outs   dx,DWORD PTR ds:[esi]
  40312e:	add    BYTE PTR ss:[eax],al
  403131:	push   es
  403132:	and    eax,0xb62026
  403137:	add    BYTE PTR [eax],al
  403139:	sub    BYTE PTR [eax+0x0],ch
  40313c:	add    BYTE PTR [esi],al
  40313e:	and    eax,0x1202026
  403143:	add    BYTE PTR [eax],al
  403145:	sub    BYTE PTR [edx+0x0],ah
  403148:	add    BYTE PTR [esi],al
  40314a:	and    eax,0x1242026
  40314f:	add    BYTE PTR [eax],al
  403151:	sub    BYTE PTR [eax+0x0],ah
  403154:	add    BYTE PTR [esi],al
  403156:	and    BYTE PTR [eax],ch
  403158:	add    DWORD PTR [eax],eax
  40315a:	add    BYTE PTR [eax],ch
  40315c:	pusha  
  40315d:	add    BYTE PTR [eax],al
  40315f:	push   es
  403160:	and    BYTE PTR [ecx+eax*1],ch
  403163:	add    BYTE PTR [eax],al
  403165:	sub    BYTE PTR [eax+0x0],ah
  403168:	add    BYTE PTR [esi],al
  40316a:	jae    0x4031dc
  40316c:	add    BYTE PTR [eax],al
  40316e:	or     ch,BYTE PTR [edi+0x71]
  403171:	add    BYTE PTR [eax],al
  403173:	or     al,BYTE PTR [eax]
  403175:	add    ch,BYTE PTR [edi+0x36]
  403178:	add    BYTE PTR [eax],al
  40317a:	push   es
  40317b:	and    eax,0x20031226
  403180:	xor    BYTE PTR [ecx],al
  403182:	add    BYTE PTR [eax],al
  403184:	sub    BYTE PTR [eax+0x0],ah
  403187:	add    BYTE PTR [esi],al
  403189:	and    BYTE PTR [ecx+eax*1],dh
  40318c:	add    BYTE PTR [eax],al
  40318e:	sub    BYTE PTR [eax+0x0],ah
  403191:	add    BYTE PTR [esi],al
  403193:	sub    BYTE PTR [edx+0x0],dh
  403196:	add    BYTE PTR [edx],cl
  403198:	add    BYTE PTR [ecx],cl
  40319a:	outs   dx,DWORD PTR ds:[esi]
  40319b:	jae    0x40319d
  40319d:	add    BYTE PTR [edx],cl
  40319f:	add    BYTE PTR [edx],al
  4031a1:	outs   dx,DWORD PTR ds:[esi]
  4031a2:	add    BYTE PTR ss:[eax],al
  4031a5:	push   es
  4031a6:	and    eax,0x1382026
  4031ab:	add    BYTE PTR [eax],al
  4031ad:	sub    BYTE PTR [eax+0x0],ah
  4031b0:	add    BYTE PTR [esi],al
  4031b2:	outs   dx,DWORD PTR ds:[esi]
  4031b3:	xchg   DWORD PTR [eax],eax
  4031b5:	add    BYTE PTR [edx],cl
  4031b7:	add    BYTE PTR [edx],al
  4031b9:	outs   dx,DWORD PTR ds:[esi]
  4031ba:	add    BYTE PTR ss:[eax],al
  4031bd:	push   es
  4031be:	and    eax,0x1aa2026
  4031c3:	add    BYTE PTR [eax],al
  4031c5:	sub    BYTE PTR [eax+0x0],ch
  4031c8:	add    BYTE PTR [esi],al
  4031ca:	and    eax,0x746f26
  4031cf:	add    BYTE PTR [edx],cl
  4031d1:	add    BYTE PTR [edx],al
  4031d3:	outs   dx,DWORD PTR ds:[esi]
  4031d4:	add    BYTE PTR ss:[eax],al
  4031d7:	push   es
  4031d8:	and    eax,0x13c2026
  4031dd:	add    BYTE PTR [eax],al
  4031df:	sub    BYTE PTR [eax+0x0],ah
  4031e2:	add    BYTE PTR [esi],al
  4031e4:	outs   dx,DWORD PTR ds:[esi]
  4031e5:	mov    BYTE PTR [eax],al
  4031e7:	add    BYTE PTR [edx],cl
  4031e9:	add    BYTE PTR [edx],al
  4031eb:	outs   dx,DWORD PTR ds:[esi]
  4031ec:	add    BYTE PTR ss:[eax],al
  4031ef:	push   es
  4031f0:	and    eax,0x20051226
  4031f5:	inc    eax
  4031f6:	add    DWORD PTR [eax],eax
  4031f8:	add    BYTE PTR [eax],ch
  4031fa:	pusha  
  4031fb:	add    BYTE PTR [eax],al
  4031fd:	push   es
  4031fe:	and    BYTE PTR [ecx+eax*1+0x0],al
  403202:	add    BYTE PTR [eax],ch
  403204:	pusha  
  403205:	add    BYTE PTR [eax],al
  403207:	push   es
  403208:	sub    BYTE PTR [ebp+0x0],dh
  40320b:	add    BYTE PTR [edx],cl
  40320d:	add    BYTE PTR [ecx],dl
  40320f:	add    eax,0x766f
  403214:	or     al,BYTE PTR [eax]
  403216:	add    ch,BYTE PTR [edi+0x36]
  403219:	add    BYTE PTR [eax],al
  40321b:	push   es
  40321c:	and    eax,0x1482026
  403221:	add    BYTE PTR [eax],al
  403223:	sub    BYTE PTR [eax+0x0],ah
  403226:	add    BYTE PTR [esi],al
  403228:	outs   dx,DWORD PTR ds:[esi]
  403229:	ja     0x40322b
  40322b:	add    BYTE PTR [edx],cl
  40322d:	add    BYTE PTR [edx],al
  40322f:	outs   dx,DWORD PTR ds:[esi]
  403230:	add    BYTE PTR ss:[eax],al
  403233:	push   es
  403234:	push   es
  403235:	and    BYTE PTR [ebx+0x28000001],bh
  40323b:	push   0x25060000
  403240:	outs   dx,DWORD PTR es:[esi]
  403242:	mov    DWORD PTR [eax],eax
  403244:	add    BYTE PTR [edx],cl
  403246:	and    eax,0x8a6f26
  40324b:	add    BYTE PTR [edx],cl
  40324d:	add    BYTE PTR [edx],al
  40324f:	outs   dx,DWORD PTR ds:[esi]
  403250:	cmp    BYTE PTR [eax],al
  403252:	add    BYTE PTR [esi],al
  403254:	and    eax,0xd6200626
  403259:	add    DWORD PTR [eax],eax
  40325b:	add    BYTE PTR [eax],ch
  40325d:	push   0x25060000
  403262:	outs   dx,DWORD PTR es:[esi]
  403264:	jnp    0x403266
  403266:	add    BYTE PTR [edx],cl
  403268:	je     0x4032ab
  40326a:	add    BYTE PTR [eax],al
  40326c:	add    DWORD PTR [edi+0x7c],ebp
  40326f:	add    BYTE PTR [eax],al
  403271:	or     al,BYTE PTR [eax]
  403273:	add    ch,BYTE PTR [edi+0x38]
  403276:	add    BYTE PTR [eax],al
  403278:	push   es
  403279:	adc    al,BYTE PTR [ebx]
  40327b:	and    BYTE PTR [ecx+eax*1+0x0],cl
  40327f:	add    BYTE PTR [eax],ch
  403281:	pusha  
  403282:	add    BYTE PTR [eax],al
  403284:	push   es
  403285:	and    BYTE PTR [eax+0x1],dl
  403288:	add    BYTE PTR [eax],al
  40328a:	sub    BYTE PTR [eax+0x0],ah
  40328d:	add    BYTE PTR [esi],al
  40328f:	sub    BYTE PTR [edx+0x0],dh
  403292:	add    BYTE PTR [edx],cl
  403294:	add    BYTE PTR [ecx],cl
  403296:	outs   dx,DWORD PTR ds:[esi]
  403297:	jae    0x403299
  403299:	add    BYTE PTR [edx],cl
  40329b:	add    BYTE PTR [edx],al
  40329d:	outs   dx,DWORD PTR ds:[esi]
  40329e:	cmp    BYTE PTR [eax],al
  4032a0:	add    BYTE PTR [esi],al
  4032a2:	and    eax,0x1f92026
  4032a7:	add    BYTE PTR [eax],al
  4032a9:	sub    BYTE PTR [eax+0x0],ch
  4032ac:	add    BYTE PTR [esi],al
  4032ae:	and    eax,0x746f26
  4032b3:	add    BYTE PTR [edx],cl
  4032b5:	add    BYTE PTR [edx],al
  4032b7:	outs   dx,DWORD PTR ds:[esi]
  4032b8:	cmp    BYTE PTR [eax],al
  4032ba:	add    BYTE PTR [esi],al
  4032bc:	and    eax,0x20051226
  4032c1:	push   esp
  4032c2:	add    DWORD PTR [eax],eax
  4032c4:	add    BYTE PTR [eax],ch
  4032c6:	pusha  
  4032c7:	add    BYTE PTR [eax],al
  4032c9:	push   es
  4032ca:	and    BYTE PTR [eax+0x1],bl
  4032cd:	add    BYTE PTR [eax],al
  4032cf:	sub    BYTE PTR [eax+0x0],ah
  4032d2:	add    BYTE PTR [esi],al
  4032d4:	sub    BYTE PTR [ebp+0x0],dh
  4032d7:	add    BYTE PTR [edx],cl
  4032d9:	add    BYTE PTR [ecx],dl
  4032db:	add    eax,0x766f
  4032e0:	or     al,BYTE PTR [eax]
  4032e2:	add    ch,BYTE PTR [edi+0x38]
  4032e5:	add    BYTE PTR [eax],al
  4032e7:	push   es
  4032e8:	and    BYTE PTR [ecx+eax*1+0x0],bl
  4032ec:	add    BYTE PTR [eax],ch
  4032ee:	pusha  
  4032ef:	add    BYTE PTR [eax],al
  4032f1:	push   es
  4032f2:	outs   dx,DWORD PTR ds:[esi]
  4032f3:	jge    0x4032f5
  4032f5:	add    BYTE PTR [edx],cl
  4032f7:	add    BYTE PTR [edx],al
  4032f9:	outs   dx,DWORD PTR ds:[esi]
  4032fa:	cmp    BYTE PTR [eax],al
  4032fc:	add    BYTE PTR [esi],al
  4032fe:	and    eax,0x1602026
  403303:	add    BYTE PTR [eax],al
  403305:	sub    BYTE PTR [eax+0x0],ah
  403308:	add    BYTE PTR [esi],al
  40330a:	outs   dx,DWORD PTR ds:[esi]
  40330b:	jle    0x40330d
  40330d:	add    BYTE PTR [edx],cl
  40330f:	add    BYTE PTR [edx],al
  403311:	outs   dx,DWORD PTR ds:[esi]
  403312:	cmp    BYTE PTR [eax],al
  403314:	add    BYTE PTR [esi],al
  403316:	and    BYTE PTR [ecx+eax*1+0x0],ah
  40331a:	add    BYTE PTR [eax],ch
  40331c:	pusha  
  40331d:	add    BYTE PTR [eax],al
  40331f:	push   es
  403320:	outs   dx,DWORD PTR ds:[esi]
  403321:	jg     0x403323
  403323:	add    BYTE PTR [edx],cl
  403325:	add    BYTE PTR [edx],al
  403327:	outs   dx,DWORD PTR ds:[esi]
  403328:	cmp    al,BYTE PTR [eax]
  40332a:	add    BYTE PTR [esi],al
  40332c:	and    eax,0x842826
  403331:	add    BYTE PTR [edx],cl
  403333:	and    eax,0x856f26
  403338:	add    BYTE PTR [edx],cl
  40333a:	add    BYTE PTR [edx],al
  40333c:	outs   dx,DWORD PTR ds:[esi]
  40333d:	cmp    al,BYTE PTR [eax]
  40333f:	add    BYTE PTR [esi],al
  403341:	and    eax,0x1682026
  403346:	add    BYTE PTR [eax],al
  403348:	sub    BYTE PTR [eax+0x0],ah
  40334b:	add    BYTE PTR [esi],al
  40334d:	outs   dx,DWORD PTR ds:[esi]
  40334e:	xchg   BYTE PTR [eax],al
  403350:	add    BYTE PTR [edx],cl
  403352:	add    BYTE PTR [edx],al
  403354:	outs   dx,DWORD PTR ds:[esi]
  403355:	cmp    al,BYTE PTR [eax]
  403357:	add    BYTE PTR [esi],al
  403359:	and    eax,0xb62026
  40335e:	add    BYTE PTR [eax],al
  403360:	sub    BYTE PTR [eax+0x0],ch
  403363:	add    BYTE PTR [esi],al
  403365:	and    eax,0x16c2026
  40336a:	add    BYTE PTR [eax],al
  40336c:	sub    BYTE PTR [edx+0x0],ah
  40336f:	add    BYTE PTR [esi],al
  403371:	and    BYTE PTR [eax+0x1],dh
  403374:	add    BYTE PTR [eax],al
  403376:	sub    BYTE PTR [eax+0x0],ah
  403379:	add    BYTE PTR [esi],al
  40337b:	and    BYTE PTR [ecx+eax*1+0x0],dh
  40337f:	add    BYTE PTR [eax],ch
  403381:	pusha  
  403382:	add    BYTE PTR [eax],al
  403384:	push   es
  403385:	and    BYTE PTR [eax+0x1],bh
  403388:	add    BYTE PTR [eax],al
  40338a:	sub    BYTE PTR [eax+0x0],ah
  40338d:	add    BYTE PTR [esi],al
  40338f:	jae    0x403401
  403391:	add    BYTE PTR [eax],al
  403393:	or     ch,BYTE PTR [edi+0x71]
  403396:	add    BYTE PTR [eax],al
  403398:	or     al,BYTE PTR [eax]
  40339a:	add    ch,BYTE PTR [edi+0x3a]
  40339d:	add    BYTE PTR [eax],al
  40339f:	push   es
  4033a0:	and    BYTE PTR [ecx+eax*1+0x0],bh
  4033a4:	add    BYTE PTR [eax],ch
  4033a6:	pusha  
  4033a7:	add    BYTE PTR [eax],al
  4033a9:	push   es
  4033aa:	and    BYTE PTR [eax+0x28000001],al
  4033b0:	pusha  
  4033b1:	add    BYTE PTR [eax],al
  4033b3:	push   es
  4033b4:	and    BYTE PTR [ecx+eax*1+0x60280000],al
  4033bb:	add    BYTE PTR [eax],al
  4033bd:	push   es
  4033be:	sub    BYTE PTR [ebx+0x250a0000],cl
  4033c4:	outs   dx,DWORD PTR es:[esi]
  4033c6:	mov    WORD PTR [eax],es
  4033c8:	add    BYTE PTR [edx],cl
  4033ca:	add    BYTE PTR [edx],al
  4033cc:	outs   dx,DWORD PTR ds:[esi]
  4033cd:	cmp    al,BYTE PTR [eax]
  4033cf:	add    BYTE PTR [esi],al
  4033d1:	adc    al,BYTE PTR [ebx]
  4033d3:	and    BYTE PTR [eax+0x28000001],cl
  4033d9:	pusha  
  4033da:	add    BYTE PTR [eax],al
  4033dc:	push   es
  4033dd:	and    BYTE PTR [ecx+eax*1+0x60280000],cl
  4033e4:	add    BYTE PTR [eax],al
  4033e6:	push   es
  4033e7:	sub    BYTE PTR [edx+0x0],dh
  4033ea:	add    BYTE PTR [edx],cl
  4033ec:	add    BYTE PTR [ecx],cl
  4033ee:	outs   dx,DWORD PTR ds:[esi]
  4033ef:	jae    0x4033f1
  4033f1:	add    BYTE PTR [edx],cl
  4033f3:	add    BYTE PTR [edx],al
  4033f5:	outs   dx,DWORD PTR ds:[esi]
  4033f6:	cmp    al,BYTE PTR [eax]
  4033f8:	add    BYTE PTR [esi],al
  4033fa:	and    BYTE PTR [eax+0x28000001],dl
  403400:	pusha  
  403401:	add    BYTE PTR [eax],al
  403403:	push   es
  403404:	outs   dx,DWORD PTR ds:[esi]
  403405:	xchg   DWORD PTR [eax],eax
  403407:	add    BYTE PTR [edx],cl
  403409:	add    BYTE PTR [edx],al
  40340b:	outs   dx,DWORD PTR ds:[esi]
  40340c:	cmp    al,BYTE PTR [eax]
  40340e:	add    BYTE PTR [esi],al
  403410:	and    eax,0x2102026
  403415:	add    BYTE PTR [eax],al
  403417:	sub    BYTE PTR [eax+0x0],ch
  40341a:	add    BYTE PTR [esi],al
  40341c:	and    eax,0x746f26
  403421:	add    BYTE PTR [edx],cl
  403423:	add    BYTE PTR [edx],al
  403425:	outs   dx,DWORD PTR ds:[esi]
  403426:	cmp    al,BYTE PTR [eax]
  403428:	add    BYTE PTR [esi],al
  40342a:	and    eax,0x1942026
  40342f:	add    BYTE PTR [eax],al
  403431:	sub    BYTE PTR [eax+0x0],ah
  403434:	add    BYTE PTR [esi],al
  403436:	outs   dx,DWORD PTR ds:[esi]
  403437:	mov    BYTE PTR [eax],al
  403439:	add    BYTE PTR [edx],cl
  40343b:	add    BYTE PTR [edx],al
  40343d:	outs   dx,DWORD PTR ds:[esi]
  40343e:	cmp    al,BYTE PTR [eax]
  403440:	add    BYTE PTR [esi],al
  403442:	and    eax,0x20051226
  403447:	cwde   
  403448:	add    DWORD PTR [eax],eax
  40344a:	add    BYTE PTR [eax],ch
  40344c:	pusha  
  40344d:	add    BYTE PTR [eax],al
  40344f:	push   es
  403450:	and    BYTE PTR [ecx+eax*1+0x60280000],bl
  403457:	add    BYTE PTR [eax],al
  403459:	push   es
  40345a:	sub    BYTE PTR [ebp+0x0],dh
  40345d:	add    BYTE PTR [edx],cl
  40345f:	add    BYTE PTR [ecx],dl
  403461:	add    eax,0x766f
  403466:	or     al,BYTE PTR [eax]
  403468:	add    ch,BYTE PTR [edi+0x3a]
  40346b:	add    BYTE PTR [eax],al
  40346d:	push   es
  40346e:	and    BYTE PTR [eax+0x28000001],ah
  403474:	pusha  
  403475:	add    BYTE PTR [eax],al
  403477:	push   es
  403478:	outs   dx,DWORD PTR ds:[esi]
  403479:	ja     0x40347b
  40347b:	add    BYTE PTR [edx],cl
  40347d:	add    BYTE PTR [edx],al
  40347f:	outs   dx,DWORD PTR ds:[esi]
  403480:	cmp    al,BYTE PTR [eax]
  403482:	add    BYTE PTR [esi],al
  403484:	and    eax,0x2212026
  403489:	add    BYTE PTR [eax],al
  40348b:	sub    BYTE PTR [eax+0x0],ch
  40348e:	add    BYTE PTR [esi],al
  403490:	and    eax,0x8a6f26
  403495:	add    BYTE PTR [edx],cl
  403497:	add    BYTE PTR [edx],al
  403499:	outs   dx,DWORD PTR ds:[esi]
  40349a:	cmp    al,0x0
  40349c:	add    BYTE PTR [esi],al
  40349e:	and    eax,0x842826
  4034a3:	add    BYTE PTR [edx],cl
  4034a5:	and    eax,0x856f26
  4034aa:	add    BYTE PTR [edx],cl
  4034ac:	add    BYTE PTR [edx],al
  4034ae:	outs   dx,DWORD PTR ds:[esi]
  4034af:	cmp    al,0x0
  4034b1:	add    BYTE PTR [esi],al
  4034b3:	and    eax,0x1a42026
  4034b8:	add    BYTE PTR [eax],al
  4034ba:	sub    BYTE PTR [eax+0x0],ah
  4034bd:	add    BYTE PTR [esi],al
  4034bf:	outs   dx,DWORD PTR ds:[esi]
  4034c0:	xchg   BYTE PTR [eax],al
  4034c2:	add    BYTE PTR [edx],cl
  4034c4:	add    BYTE PTR [edx],al
  4034c6:	outs   dx,DWORD PTR ds:[esi]
  4034c7:	cmp    al,0x0
  4034c9:	add    BYTE PTR [esi],al
  4034cb:	and    eax,0xb62026
  4034d0:	add    BYTE PTR [eax],al
  4034d2:	sub    BYTE PTR [eax+0x0],ch
  4034d5:	add    BYTE PTR [esi],al
  4034d7:	and    eax,0x1a82026
  4034dc:	add    BYTE PTR [eax],al
  4034de:	sub    BYTE PTR [edx+0x0],ah
  4034e1:	add    BYTE PTR [esi],al
  4034e3:	and    eax,0x1ac2026
  4034e8:	add    BYTE PTR [eax],al
  4034ea:	sub    BYTE PTR [eax+0x0],ah
  4034ed:	add    BYTE PTR [esi],al
  4034ef:	and    BYTE PTR [eax+0x28000001],dh
  4034f5:	pusha  
  4034f6:	add    BYTE PTR [eax],al
  4034f8:	push   es
  4034f9:	and    BYTE PTR [ecx+eax*1+0x60280000],dh
  403500:	add    BYTE PTR [eax],al
  403502:	push   es
  403503:	jae    0x403575
  403505:	add    BYTE PTR [eax],al
  403507:	or     ch,BYTE PTR [edi+0x71]
  40350a:	add    BYTE PTR [eax],al
  40350c:	or     al,BYTE PTR [eax]
  40350e:	add    ch,BYTE PTR [edi+0x3c]
  403511:	add    BYTE PTR [eax],al
  403513:	push   es
  403514:	adc    al,BYTE PTR [ebx]
  403516:	and    BYTE PTR [eax+0x28000001],bh
  40351c:	pusha  
  40351d:	add    BYTE PTR [eax],al
  40351f:	push   es
  403520:	and    BYTE PTR [ecx+eax*1+0x60280000],bh
  403527:	add    BYTE PTR [eax],al
  403529:	push   es
  40352a:	sub    BYTE PTR [edx+0x0],dh
  40352d:	add    BYTE PTR [edx],cl
  40352f:	add    BYTE PTR [ecx],cl
  403531:	outs   dx,DWORD PTR ds:[esi]
  403532:	jae    0x403534
  403534:	add    BYTE PTR [edx],cl
  403536:	add    BYTE PTR [edx],al
  403538:	outs   dx,DWORD PTR ds:[esi]
  403539:	cmp    al,0x0
  40353b:	add    BYTE PTR [esi],al
  40353d:	and    eax,0x1c02026
  403542:	add    BYTE PTR [eax],al
  403544:	sub    BYTE PTR [eax+0x0],ah
  403547:	add    BYTE PTR [esi],al
  403549:	outs   dx,DWORD PTR ds:[esi]
  40354a:	xchg   DWORD PTR [eax],eax
  40354c:	add    BYTE PTR [edx],cl
  40354e:	add    BYTE PTR [edx],al
  403550:	outs   dx,DWORD PTR ds:[esi]
  403551:	cmp    al,0x0
  403553:	add    BYTE PTR [esi],al
  403555:	and    eax,0x3112026
  40355a:	add    BYTE PTR [eax],al
  40355c:	sub    BYTE PTR [eax+0x0],ch
  40355f:	add    BYTE PTR [esi],al
  403561:	outs   dx,DWORD PTR ds:[esi]
  403562:	je     0x403564
  403564:	add    BYTE PTR [edx],cl
  403566:	add    BYTE PTR [edx],al
  403568:	outs   dx,DWORD PTR ds:[esi]
  403569:	cmp    al,0x0
  40356b:	add    BYTE PTR [esi],al
  40356d:	and    eax,0x1c42026
  403572:	add    BYTE PTR [eax],al
  403574:	sub    BYTE PTR [eax+0x0],ah
  403577:	add    BYTE PTR [esi],al
  403579:	outs   dx,DWORD PTR ds:[esi]
  40357a:	mov    BYTE PTR [eax],al
  40357c:	add    BYTE PTR [edx],cl
  40357e:	add    BYTE PTR [edx],al
  403580:	outs   dx,DWORD PTR ds:[esi]
  403581:	cmp    al,0x0
  403583:	add    BYTE PTR [esi],al
  403585:	adc    al,BYTE PTR ds:0x1c820
  40358b:	add    BYTE PTR [eax],ch
  40358d:	pusha  
  40358e:	add    BYTE PTR [eax],al
  403590:	push   es
  403591:	and    ah,cl
  403593:	add    DWORD PTR [eax],eax
  403595:	add    BYTE PTR [eax],ch
  403597:	pusha  
  403598:	add    BYTE PTR [eax],al
  40359a:	push   es
  40359b:	sub    BYTE PTR [ebp+0x0],dh
  40359e:	add    BYTE PTR [edx],cl
  4035a0:	add    BYTE PTR [ecx],dl
  4035a2:	add    eax,0x766f
  4035a7:	or     al,BYTE PTR [eax]
  4035a9:	add    ch,BYTE PTR [edi+0x3c]
  4035ac:	add    BYTE PTR [eax],al
  4035ae:	push   es
  4035af:	and    al,dl
  4035b1:	add    DWORD PTR [eax],eax
  4035b3:	add    BYTE PTR [eax],ch
  4035b5:	pusha  
  4035b6:	add    BYTE PTR [eax],al
  4035b8:	push   es
  4035b9:	outs   dx,DWORD PTR ds:[esi]
  4035ba:	ja     0x4035bc
  4035bc:	add    BYTE PTR [edx],cl
  4035be:	add    BYTE PTR [edx],al
  4035c0:	outs   dx,DWORD PTR ds:[esi]
  4035c1:	cmp    al,0x0
  4035c3:	add    BYTE PTR [esi],al
  4035c5:	push   es
  4035c6:	and    BYTE PTR [edx],ah
  4035c8:	add    eax,DWORD PTR [eax]
  4035ca:	add    BYTE PTR [eax],ch
  4035cc:	push   0x25060000
  4035d1:	outs   dx,DWORD PTR es:[esi]
  4035d3:	mov    DWORD PTR [eax],eax
  4035d5:	add    BYTE PTR [edx],cl
  4035d7:	and    eax,0x8a6f26
  4035dc:	add    BYTE PTR [edx],cl
  4035de:	add    BYTE PTR [edx],al
  4035e0:	outs   dx,DWORD PTR ds:[esi]
  4035e1:	add    BYTE PTR ds:[eax],al
  4035e4:	push   es
  4035e5:	and    eax,0x842826
  4035ea:	add    BYTE PTR [edx],cl
  4035ec:	and    eax,0x856f26
  4035f1:	add    BYTE PTR [edx],cl
  4035f3:	add    BYTE PTR [edx],al
  4035f5:	outs   dx,DWORD PTR ds:[esi]
  4035f6:	add    BYTE PTR ds:[eax],al
  4035f9:	push   es
  4035fa:	and    ah,dl
  4035fc:	add    DWORD PTR [eax],eax
  4035fe:	add    BYTE PTR [eax],ch
  403600:	pusha  
  403601:	add    BYTE PTR [eax],al
  403603:	push   es
  403604:	outs   dx,DWORD PTR ds:[esi]
  403605:	xchg   BYTE PTR [eax],al
  403607:	add    BYTE PTR [edx],cl
  403609:	add    BYTE PTR [edx],al
  40360b:	outs   dx,DWORD PTR ds:[esi]
  40360c:	add    BYTE PTR ds:[eax],al
  40360f:	push   es
  403610:	and    eax,0xb62026
  403615:	add    BYTE PTR [eax],al
  403617:	sub    BYTE PTR [eax+0x0],ch
  40361a:	add    BYTE PTR [esi],al
  40361c:	and    eax,0x1d82026
  403621:	add    BYTE PTR [eax],al
  403623:	sub    BYTE PTR [edx+0x0],ah
  403626:	add    BYTE PTR [esi],al
  403628:	and    eax,0x1dc2026
  40362d:	add    BYTE PTR [eax],al
  40362f:	sub    BYTE PTR [eax+0x0],ah
  403632:	add    BYTE PTR [esi],al
  403634:	and    al,ah
  403636:	add    DWORD PTR [eax],eax
  403638:	add    BYTE PTR [eax],ch
  40363a:	pusha  
  40363b:	add    BYTE PTR [eax],al
  40363d:	push   es
  40363e:	and    ah,ah
  403640:	add    DWORD PTR [eax],eax
  403642:	add    BYTE PTR [eax],ch
  403644:	pusha  
  403645:	add    BYTE PTR [eax],al
  403647:	push   es
  403648:	jae    0x4036ba
  40364a:	add    BYTE PTR [eax],al
  40364c:	or     ch,BYTE PTR [edi+0x71]
  40364f:	add    BYTE PTR [eax],al
  403651:	or     al,BYTE PTR [eax]
  403653:	add    ch,BYTE PTR [edi+0x3e]
  403656:	add    BYTE PTR [eax],al
  403658:	push   es
  403659:	and    eax,0x20031226
  40365e:	call   0x28403664
  403663:	pusha  
  403664:	add    BYTE PTR [eax],al
  403666:	push   es
  403667:	and    ah,ch
  403669:	add    DWORD PTR [eax],eax
  40366b:	add    BYTE PTR [eax],ch
  40366d:	pusha  
  40366e:	add    BYTE PTR [eax],al
  403670:	push   es
  403671:	sub    BYTE PTR [edx+0x0],dh
  403674:	add    BYTE PTR [edx],cl
  403676:	add    BYTE PTR [ecx],cl
  403678:	outs   dx,DWORD PTR ds:[esi]
  403679:	jae    0x40367b
  40367b:	add    BYTE PTR [edx],cl
  40367d:	add    BYTE PTR [edx],al
  40367f:	outs   dx,DWORD PTR ds:[esi]
  403680:	add    BYTE PTR ds:[eax],al
  403683:	push   es
  403684:	and    eax,0x1f02026
  403689:	add    BYTE PTR [eax],al
  40368b:	sub    BYTE PTR [eax+0x0],ah
  40368e:	add    BYTE PTR [esi],al
  403690:	outs   dx,DWORD PTR ds:[esi]
  403691:	xchg   DWORD PTR [eax],eax
  403693:	add    BYTE PTR [edx],cl
  403695:	add    BYTE PTR [edx],al
  403697:	outs   dx,DWORD PTR ds:[esi]
  403698:	add    BYTE PTR ds:[eax],al
  40369b:	push   es
  40369c:	and    eax,0x33d2026
  4036a1:	add    BYTE PTR [eax],al
  4036a3:	sub    BYTE PTR [eax+0x0],ch
  4036a6:	add    BYTE PTR [esi],al
  4036a8:	and    eax,0x746f26
  4036ad:	add    BYTE PTR [edx],cl
  4036af:	add    BYTE PTR [edx],al
  4036b1:	outs   dx,DWORD PTR ds:[esi]
  4036b2:	add    BYTE PTR ds:[eax],al
  4036b5:	push   es
  4036b6:	and    eax,0x1f42026
  4036bb:	add    BYTE PTR [eax],al
  4036bd:	sub    BYTE PTR [eax+0x0],ah
  4036c0:	add    BYTE PTR [esi],al
  4036c2:	outs   dx,DWORD PTR ds:[esi]
  4036c3:	mov    BYTE PTR [eax],al
  4036c5:	add    BYTE PTR [edx],cl
  4036c7:	add    BYTE PTR [edx],al
  4036c9:	outs   dx,DWORD PTR ds:[esi]
  4036ca:	add    BYTE PTR ds:[eax],al
  4036cd:	push   es
  4036ce:	and    eax,0x20051226
  4036d3:	clc    
  4036d4:	add    DWORD PTR [eax],eax
  4036d6:	add    BYTE PTR [eax],ch
  4036d8:	pusha  
  4036d9:	add    BYTE PTR [eax],al
  4036db:	push   es
  4036dc:	and    ah,bh
  4036de:	add    DWORD PTR [eax],eax
  4036e0:	add    BYTE PTR [eax],ch
  4036e2:	pusha  
  4036e3:	add    BYTE PTR [eax],al
  4036e5:	push   es
  4036e6:	sub    BYTE PTR [ebp+0x0],dh
  4036e9:	add    BYTE PTR [edx],cl
  4036eb:	add    BYTE PTR [ecx],dl
  4036ed:	add    eax,0x766f
  4036f2:	or     al,BYTE PTR [eax]
  4036f4:	add    ch,BYTE PTR [edi+0x3e]
  4036f7:	add    BYTE PTR [eax],al
  4036f9:	push   es
  4036fa:	and    eax,0x2002026
  4036ff:	add    BYTE PTR [eax],al
  403701:	sub    BYTE PTR [eax+0x0],ah
  403704:	add    BYTE PTR [esi],al
  403706:	outs   dx,DWORD PTR ds:[esi]
  403707:	ja     0x403709
  403709:	add    BYTE PTR [edx],cl
  40370b:	add    BYTE PTR [edx],al
  40370d:	outs   dx,DWORD PTR ds:[esi]
  40370e:	add    BYTE PTR ds:[eax],al
  403711:	push   es
  403712:	and    eax,0x4e200626
  403717:	add    eax,DWORD PTR [eax]
  403719:	add    BYTE PTR [eax],ch
  40371b:	push   0x25060000
  403720:	outs   dx,DWORD PTR es:[esi]
  403722:	mov    DWORD PTR [eax],eax
  403724:	add    BYTE PTR [edx],cl
  403726:	and    eax,0x8a6f26
  40372b:	add    BYTE PTR [edx],cl
  40372d:	add    BYTE PTR [edx],al
  40372f:	outs   dx,DWORD PTR ds:[esi]
  403730:	inc    eax
  403731:	add    BYTE PTR [eax],al
  403733:	push   es
  403734:	and    eax,0x842826
  403739:	add    BYTE PTR [edx],cl
  40373b:	and    eax,0x856f26
  403740:	add    BYTE PTR [edx],cl
  403742:	add    BYTE PTR [edx],al
  403744:	outs   dx,DWORD PTR ds:[esi]
  403745:	inc    eax
  403746:	add    BYTE PTR [eax],al
  403748:	push   es
  403749:	and    eax,0x2042026
  40374e:	add    BYTE PTR [eax],al
  403750:	sub    BYTE PTR [eax+0x0],ah
  403753:	add    BYTE PTR [esi],al
  403755:	outs   dx,DWORD PTR ds:[esi]
  403756:	xchg   BYTE PTR [eax],al
  403758:	add    BYTE PTR [edx],cl
  40375a:	add    BYTE PTR [edx],al
  40375c:	outs   dx,DWORD PTR ds:[esi]
  40375d:	inc    eax
  40375e:	add    BYTE PTR [eax],al
  403760:	push   es
  403761:	and    BYTE PTR [esi+0x28000000],dh
  403767:	push   0x25060000
  40376c:	and    BYTE PTR es:[eax],cl
  40376f:	add    al,BYTE PTR [eax]
  403771:	add    BYTE PTR [eax],ch
  403773:	bound  eax,QWORD PTR [eax]
  403775:	add    BYTE PTR [esi],al
  403777:	and    BYTE PTR [edx+eax*1],cl
  40377a:	add    BYTE PTR [eax],al
  40377c:	sub    BYTE PTR [eax+0x0],ah
  40377f:	add    BYTE PTR [esi],al
  403781:	and    BYTE PTR [eax],dl
  403783:	add    al,BYTE PTR [eax]
  403785:	add    BYTE PTR [eax],ch
  403787:	pusha  
  403788:	add    BYTE PTR [eax],al
  40378a:	push   es
  40378b:	and    BYTE PTR [edx+eax*1],dl
  40378e:	add    BYTE PTR [eax],al
  403790:	sub    BYTE PTR [eax+0x0],ah
  403793:	add    BYTE PTR [esi],al
  403795:	jae    0x403807
  403797:	add    BYTE PTR [eax],al
  403799:	or     ch,BYTE PTR [edi+0x71]
  40379c:	add    BYTE PTR [eax],al
  40379e:	or     al,BYTE PTR [eax]
  4037a0:	add    ch,BYTE PTR [edi+0x40]
  4037a3:	add    BYTE PTR [eax],al
  4037a5:	push   es
  4037a6:	and    eax,0x8d2826
  4037ab:	add    BYTE PTR [edx],cl
  4037ad:	and    eax,0x8c6f26
  4037b2:	add    BYTE PTR [edx],cl
  4037b4:	add    BYTE PTR [edx],al
  4037b6:	outs   dx,DWORD PTR ds:[esi]
  4037b7:	inc    eax
  4037b8:	add    BYTE PTR [eax],al
  4037ba:	push   es
  4037bb:	and    eax,0x20031226
  4037c0:	sbb    BYTE PTR [edx],al
  4037c2:	add    BYTE PTR [eax],al
  4037c4:	sub    BYTE PTR [eax+0x0],ah
  4037c7:	add    BYTE PTR [esi],al
  4037c9:	and    BYTE PTR [edx+eax*1],bl
  4037cc:	add    BYTE PTR [eax],al
  4037ce:	sub    BYTE PTR [eax+0x0],ah
  4037d1:	add    BYTE PTR [esi],al
  4037d3:	sub    BYTE PTR [edx+0x0],dh
  4037d6:	add    BYTE PTR [edx],cl
  4037d8:	add    BYTE PTR [ecx],cl
  4037da:	outs   dx,DWORD PTR ds:[esi]
  4037db:	jae    0x4037dd
  4037dd:	add    BYTE PTR [edx],cl
  4037df:	add    BYTE PTR [edx],al
  4037e1:	outs   dx,DWORD PTR ds:[esi]
  4037e2:	inc    eax
  4037e3:	add    BYTE PTR [eax],al
  4037e5:	push   es
  4037e6:	and    BYTE PTR [eax],ah
  4037e8:	add    al,BYTE PTR [eax]
  4037ea:	add    BYTE PTR [eax],ch
  4037ec:	pusha  
  4037ed:	add    BYTE PTR [eax],al
  4037ef:	push   es
  4037f0:	outs   dx,DWORD PTR ds:[esi]
  4037f1:	xchg   DWORD PTR [eax],eax
  4037f3:	add    BYTE PTR [edx],cl
  4037f5:	add    BYTE PTR [edx],al
  4037f7:	outs   dx,DWORD PTR ds:[esi]
  4037f8:	inc    eax
  4037f9:	add    BYTE PTR [eax],al
  4037fb:	push   es
  4037fc:	and    eax,0x3692026
  403801:	add    BYTE PTR [eax],al
  403803:	sub    BYTE PTR [eax+0x0],ch
  403806:	add    BYTE PTR [esi],al
  403808:	and    eax,0x746f26
  40380d:	add    BYTE PTR [edx],cl
  40380f:	add    BYTE PTR [edx],al
  403811:	outs   dx,DWORD PTR ds:[esi]
  403812:	inc    eax
  403813:	add    BYTE PTR [eax],al
  403815:	push   es
  403816:	and    eax,0x2242026
  40381b:	add    BYTE PTR [eax],al
  40381d:	sub    BYTE PTR [eax+0x0],ah
  403820:	add    BYTE PTR [esi],al
  403822:	outs   dx,DWORD PTR ds:[esi]
  403823:	mov    BYTE PTR [eax],al
  403825:	add    BYTE PTR [edx],cl
  403827:	add    BYTE PTR [edx],al
  403829:	outs   dx,DWORD PTR ds:[esi]
  40382a:	inc    eax
  40382b:	add    BYTE PTR [eax],al
  40382d:	push   es
  40382e:	and    eax,0x20051226
  403833:	sub    BYTE PTR [edx],al
  403835:	add    BYTE PTR [eax],al
  403837:	sub    BYTE PTR [eax+0x0],ah
  40383a:	add    BYTE PTR [esi],al
  40383c:	and    BYTE PTR [edx+eax*1],ch
  40383f:	add    BYTE PTR [eax],al
  403841:	sub    BYTE PTR [eax+0x0],ah
  403844:	add    BYTE PTR [esi],al
  403846:	sub    BYTE PTR [ebp+0x0],dh
  403849:	add    BYTE PTR [edx],cl
  40384b:	add    BYTE PTR [ecx],dl
  40384d:	add    eax,0x766f
  403852:	or     al,BYTE PTR [eax]
  403854:	add    ch,BYTE PTR [edi+0x40]
  403857:	add    BYTE PTR [eax],al
  403859:	push   es
  40385a:	and    eax,0x2302026
  40385f:	add    BYTE PTR [eax],al
  403861:	sub    BYTE PTR [eax+0x0],ah
  403864:	add    BYTE PTR [esi],al
  403866:	outs   dx,DWORD PTR ds:[esi]
  403867:	ja     0x403869
  403869:	add    BYTE PTR [edx],cl
  40386b:	add    BYTE PTR [edx],al
  40386d:	outs   dx,DWORD PTR ds:[esi]
  40386e:	inc    eax
  40386f:	add    BYTE PTR [eax],al
  403871:	push   es
  403872:	and    BYTE PTR [edx+0x3],bh
  403875:	add    BYTE PTR [eax],al
  403877:	sub    BYTE PTR [eax+0x0],ch
  40387a:	add    BYTE PTR [esi],al
  40387c:	and    eax,0x8a6f26
  403881:	add    BYTE PTR [edx],cl
  403883:	add    BYTE PTR [edx],al
  403885:	outs   dx,DWORD PTR ds:[esi]
  403886:	inc    edx
  403887:	add    BYTE PTR [eax],al
  403889:	push   es
  40388a:	and    eax,0x842826
  40388f:	add    BYTE PTR [edx],cl
  403891:	outs   dx,DWORD PTR ds:[esi]
  403892:	test   DWORD PTR [eax],eax
  403894:	add    BYTE PTR [edx],cl
  403896:	add    BYTE PTR [edx],al
  403898:	outs   dx,DWORD PTR ds:[esi]
  403899:	inc    edx
  40389a:	add    BYTE PTR [eax],al
  40389c:	push   es
  40389d:	and    eax,0x2342026
  4038a2:	add    BYTE PTR [eax],al
  4038a4:	sub    BYTE PTR [eax+0x0],ah
  4038a7:	add    BYTE PTR [esi],al
  4038a9:	outs   dx,DWORD PTR ds:[esi]
  4038aa:	xchg   BYTE PTR [eax],al
  4038ac:	add    BYTE PTR [edx],cl
  4038ae:	add    BYTE PTR [edx],al
  4038b0:	outs   dx,DWORD PTR ds:[esi]
  4038b1:	inc    edx
  4038b2:	add    BYTE PTR [eax],al
  4038b4:	push   es
  4038b5:	and    eax,0xb62026
  4038ba:	add    BYTE PTR [eax],al
  4038bc:	sub    BYTE PTR [eax+0x0],ch
  4038bf:	add    BYTE PTR [esi],al
  4038c1:	and    eax,0x2382026
  4038c6:	add    BYTE PTR [eax],al
  4038c8:	sub    BYTE PTR [edx+0x0],ah
  4038cb:	add    BYTE PTR [esi],al
  4038cd:	and    eax,0x23c2026
  4038d2:	add    BYTE PTR [eax],al
  4038d4:	sub    BYTE PTR [eax+0x0],ah
  4038d7:	add    BYTE PTR [esi],al
  4038d9:	and    BYTE PTR [eax+0x2],al
  4038dc:	add    BYTE PTR [eax],al
  4038de:	sub    BYTE PTR [eax+0x0],ah
  4038e1:	add    BYTE PTR [esi],al
  4038e3:	and    BYTE PTR [edx+eax*1+0x0],al
  4038e7:	add    BYTE PTR [eax],ch
  4038e9:	pusha  
  4038ea:	add    BYTE PTR [eax],al
  4038ec:	push   es
  4038ed:	jae    0x40395f
  4038ef:	add    BYTE PTR [eax],al
  4038f1:	or     ch,BYTE PTR [edi+0x71]
  4038f4:	add    BYTE PTR [eax],al
  4038f6:	or     al,BYTE PTR [eax]
  4038f8:	add    ch,BYTE PTR [edi+0x42]
  4038fb:	add    BYTE PTR [eax],al
  4038fd:	push   es
  4038fe:	and    eax,0x8e2826
  403903:	add    BYTE PTR [edx],cl
  403905:	outs   dx,DWORD PTR ds:[esi]
  403906:	mov    WORD PTR [eax],es
  403908:	add    BYTE PTR [edx],cl
  40390a:	add    BYTE PTR [edx],al
  40390c:	outs   dx,DWORD PTR ds:[esi]
  40390d:	inc    edx
  40390e:	add    BYTE PTR [eax],al
  403910:	push   es
  403911:	adc    al,BYTE PTR [ebx]
  403913:	and    BYTE PTR [eax+0x2],cl
  403916:	add    BYTE PTR [eax],al
  403918:	sub    BYTE PTR [eax+0x0],ah
  40391b:	add    BYTE PTR [esi],al
  40391d:	and    BYTE PTR [edx+eax*1+0x0],cl
  403921:	add    BYTE PTR [eax],ch
  403923:	pusha  
  403924:	add    BYTE PTR [eax],al
  403926:	push   es
  403927:	sub    BYTE PTR [edx+0x0],dh
  40392a:	add    BYTE PTR [edx],cl
  40392c:	add    BYTE PTR [ecx],cl
  40392e:	outs   dx,DWORD PTR ds:[esi]
  40392f:	jae    0x403931
  403931:	add    BYTE PTR [edx],cl
  403933:	add    BYTE PTR [edx],al
  403935:	outs   dx,DWORD PTR ds:[esi]
  403936:	inc    edx
  403937:	add    BYTE PTR [eax],al
  403939:	push   es
  40393a:	and    BYTE PTR [eax+0x2],dl
  40393d:	add    BYTE PTR [eax],al
  40393f:	sub    BYTE PTR [eax+0x0],ah
  403942:	add    BYTE PTR [esi],al
  403944:	outs   dx,DWORD PTR ds:[esi]
  403945:	xchg   DWORD PTR [eax],eax
  403947:	add    BYTE PTR [edx],cl
  403949:	add    BYTE PTR [edx],al
  40394b:	outs   dx,DWORD PTR ds:[esi]
  40394c:	inc    edx
  40394d:	add    BYTE PTR [eax],al
  40394f:	push   es
  403950:	and    eax,0x3c52026
  403955:	add    BYTE PTR [eax],al
  403957:	sub    BYTE PTR [eax+0x0],ch
  40395a:	add    BYTE PTR [esi],al
  40395c:	outs   dx,DWORD PTR ds:[esi]
  40395d:	je     0x40395f
  40395f:	add    BYTE PTR [edx],cl
  403961:	add    BYTE PTR [edx],al
  403963:	outs   dx,DWORD PTR ds:[esi]
  403964:	inc    edx
  403965:	add    BYTE PTR [eax],al
  403967:	push   es
  403968:	and    eax,0x2542026
  40396d:	add    BYTE PTR [eax],al
  40396f:	sub    BYTE PTR [eax+0x0],ah
  403972:	add    BYTE PTR [esi],al
  403974:	outs   dx,DWORD PTR ds:[esi]
  403975:	mov    BYTE PTR [eax],al
  403977:	add    BYTE PTR [edx],cl
  403979:	add    BYTE PTR [edx],al
  40397b:	outs   dx,DWORD PTR ds:[esi]
  40397c:	inc    edx
  40397d:	add    BYTE PTR [eax],al
  40397f:	push   es
  403980:	and    eax,0x20051226
  403985:	pop    eax
  403986:	add    al,BYTE PTR [eax]
  403988:	add    BYTE PTR [eax],ch
  40398a:	pusha  
  40398b:	add    BYTE PTR [eax],al
  40398d:	push   es
  40398e:	and    BYTE PTR [edx+eax*1+0x0],bl
  403992:	add    BYTE PTR [eax],ch
  403994:	pusha  
  403995:	add    BYTE PTR [eax],al
  403997:	push   es
  403998:	sub    BYTE PTR [ebp+0x0],dh
  40399b:	add    BYTE PTR [edx],cl
  40399d:	add    BYTE PTR [ecx],dl
  40399f:	add    eax,0x766f
  4039a4:	or     al,BYTE PTR [eax]
  4039a6:	add    ch,BYTE PTR [edi+0x42]
  4039a9:	add    BYTE PTR [eax],al
  4039ab:	push   es
  4039ac:	and    eax,0x2602026
  4039b1:	add    BYTE PTR [eax],al
  4039b3:	sub    BYTE PTR [eax+0x0],ah
  4039b6:	add    BYTE PTR [esi],al
  4039b8:	outs   dx,DWORD PTR ds:[esi]
  4039b9:	ja     0x4039bb
  4039bb:	add    BYTE PTR [edx],cl
  4039bd:	add    BYTE PTR [edx],al
  4039bf:	outs   dx,DWORD PTR ds:[esi]
  4039c0:	inc    edx
  4039c1:	add    BYTE PTR [eax],al
  4039c3:	push   es
  4039c4:	and    eax,0x3d62026
  4039c9:	add    BYTE PTR [eax],al
  4039cb:	sub    BYTE PTR [eax+0x0],ch
  4039ce:	add    BYTE PTR [esi],al
  4039d0:	outs   dx,DWORD PTR ds:[esi]
  4039d1:	mov    al,BYTE PTR [eax]
  4039d3:	add    BYTE PTR [edx],cl
  4039d5:	add    BYTE PTR [edx],al
  4039d7:	adc    al,BYTE PTR [edi]
  4039d9:	and    BYTE PTR [edx+eax*1+0x0],ah
  4039dd:	add    BYTE PTR [eax],ch
  4039df:	bound  eax,QWORD PTR [eax]
  4039e1:	add    BYTE PTR [esi],al
  4039e3:	and    eax,0x2682026
  4039e8:	add    BYTE PTR [eax],al
  4039ea:	sub    BYTE PTR [edx+0x0],ah
  4039ed:	add    BYTE PTR [esi],al
  4039ef:	and    eax,0x8f2826
  4039f4:	add    BYTE PTR [edx],cl
  4039f6:	add    BYTE PTR [ecx],dl
  4039f8:	pop    es
  4039f9:	outs   dx,DWORD PTR ds:[esi]
  4039fa:	nop
  4039fb:	add    BYTE PTR [eax],al
  4039fd:	or     al,BYTE PTR [eax]
  4039ff:	add    ah,BYTE PTR [eax]
  403a01:	ins    BYTE PTR es:[edi],dx
  403a02:	add    al,BYTE PTR [eax]
  403a04:	add    BYTE PTR [eax],ch
  403a06:	pusha  
  403a07:	add    BYTE PTR [eax],al
  403a09:	push   es
  403a0a:	outs   dx,DWORD PTR ds:[esi]
  403a0b:	xchg   ecx,eax
  403a0c:	add    BYTE PTR [eax],al
  403a0e:	or     al,BYTE PTR [eax]
  403a10:	add    ah,BYTE PTR [eax]
  403a12:	jo     0x403a16
  403a14:	add    BYTE PTR [eax],al
  403a16:	sub    BYTE PTR [eax+0x0],ah
  403a19:	add    BYTE PTR [esi],al
  403a1b:	outs   dx,DWORD PTR ds:[esi]
  403a1c:	xchg   edx,eax
  403a1d:	add    BYTE PTR [eax],al
  403a1f:	or     al,BYTE PTR [eax]
  403a21:	add    ch,BYTE PTR [eax]
  403a23:	test   BYTE PTR [eax],al
  403a25:	add    BYTE PTR [edx],cl
  403a27:	outs   dx,DWORD PTR ds:[esi]
  403a28:	xchg   ebx,eax
  403a29:	add    BYTE PTR [eax],al
  403a2b:	or     al,BYTE PTR [eax]
  403a2d:	add    dl,BYTE PTR [edx]
  403a2f:	add    eax,0x27420
  403a34:	add    BYTE PTR [eax],ch
  403a36:	pusha  
  403a37:	add    BYTE PTR [eax],al
  403a39:	push   es
  403a3a:	and    BYTE PTR [eax+0x2],bh
  403a3d:	add    BYTE PTR [eax],al
  403a3f:	sub    BYTE PTR [eax+0x0],ah
  403a42:	add    BYTE PTR [esi],al
  403a44:	sub    BYTE PTR [ebp+0x0],dh
  403a47:	add    BYTE PTR [edx],cl
  403a49:	add    BYTE PTR [ecx],dl
  403a4b:	add    eax,0x946f
  403a50:	or     al,BYTE PTR [eax]
  403a52:	add    ch,BYTE PTR [edi-0x6b]
  403a55:	add    BYTE PTR [eax],al
  403a57:	or     ah,BYTE PTR ds:0x426f0226
  403a5d:	add    BYTE PTR [eax],al
  403a5f:	push   es
  403a60:	outs   dx,DWORD PTR ds:[esi]
  403a61:	xchg   esi,eax
  403a62:	add    BYTE PTR [eax],al
  403a64:	or     al,BYTE PTR [eax]
  403a66:	add    ch,BYTE PTR [edi-0x6b]
  403a69:	add    BYTE PTR [eax],al
  403a6b:	or     ah,BYTE PTR ds:0x386f0226
  403a71:	add    BYTE PTR [eax],al
  403a73:	push   es
  403a74:	and    eax,0x966f26
  403a79:	add    BYTE PTR [edx],cl
  403a7b:	add    BYTE PTR [edx],al
  403a7d:	outs   dx,DWORD PTR ds:[esi]
  403a7e:	xchg   ebp,eax
  403a7f:	add    BYTE PTR [eax],al
  403a81:	or     ah,BYTE PTR ds:0x366f0226
  403a87:	add    BYTE PTR [eax],al
  403a89:	push   es
  403a8a:	outs   dx,DWORD PTR ds:[esi]
  403a8b:	xchg   esi,eax
  403a8c:	add    BYTE PTR [eax],al
  403a8e:	or     al,BYTE PTR [eax]
  403a90:	add    ch,BYTE PTR [edi-0x6b]
  403a93:	add    BYTE PTR [eax],al
  403a95:	or     al,BYTE PTR [edx]
  403a97:	outs   dx,DWORD PTR ds:[esi]
  403a98:	xor    al,0x0
  403a9a:	add    BYTE PTR [esi],al
  403a9c:	and    eax,0x966f26
  403aa1:	add    BYTE PTR [edx],cl
  403aa3:	add    BYTE PTR [edx],al
  403aa5:	outs   dx,DWORD PTR ds:[esi]
  403aa6:	xchg   ebp,eax
  403aa7:	add    BYTE PTR [eax],al
  403aa9:	or     ah,BYTE PTR ds:0x326f0226
  403aaf:	add    BYTE PTR [eax],al
  403ab1:	push   es
  403ab2:	and    eax,0x966f26
  403ab7:	add    BYTE PTR [edx],cl
  403ab9:	add    BYTE PTR [edx],al
  403abb:	outs   dx,DWORD PTR ds:[esi]
  403abc:	xchg   ebp,eax
  403abd:	add    BYTE PTR [eax],al
  403abf:	or     ah,BYTE PTR ds:0x306f0226
  403ac5:	add    BYTE PTR [eax],al
  403ac7:	push   es
  403ac8:	and    eax,0x966f26
  403acd:	add    BYTE PTR [edx],cl
  403acf:	add    BYTE PTR [edx],al
  403ad1:	outs   dx,DWORD PTR ds:[esi]
  403ad2:	xchg   ebp,eax
  403ad3:	add    BYTE PTR [eax],al
  403ad5:	or     ah,BYTE PTR ds:0x2e6f0226
  403adb:	add    BYTE PTR [eax],al
  403add:	push   es
  403ade:	and    eax,0x966f26
  403ae3:	add    BYTE PTR [edx],cl
  403ae5:	add    BYTE PTR [edx],al
  403ae7:	outs   dx,DWORD PTR ds:[esi]
  403ae8:	xchg   ebp,eax
  403ae9:	add    BYTE PTR [eax],al
  403aeb:	or     al,BYTE PTR [edx]
  403aed:	outs   dx,DWORD PTR ds:[esi]
  403aee:	sub    al,0x0
  403af0:	add    BYTE PTR [esi],al
  403af2:	outs   dx,DWORD PTR ds:[esi]
  403af3:	xchg   esi,eax
  403af4:	add    BYTE PTR [eax],al
  403af6:	or     al,BYTE PTR [eax]
  403af8:	add    ch,BYTE PTR [edi-0x6b]
  403afb:	add    BYTE PTR [eax],al
  403afd:	or     ah,BYTE PTR ds:0x3c6f0226
  403b03:	add    BYTE PTR [eax],al
  403b05:	push   es
  403b06:	and    eax,0x966f26
  403b0b:	add    BYTE PTR [edx],cl
  403b0d:	add    BYTE PTR [edx],al
  403b0f:	outs   dx,DWORD PTR ds:[esi]
  403b10:	xchg   ebp,eax
  403b11:	add    BYTE PTR [eax],al
  403b13:	or     al,BYTE PTR [edx]
  403b15:	outs   dx,DWORD PTR ds:[esi]
  403b16:	cmp    al,BYTE PTR [eax]
  403b18:	add    BYTE PTR [esi],al
  403b1a:	outs   dx,DWORD PTR ds:[esi]
  403b1b:	xchg   esi,eax
  403b1c:	add    BYTE PTR [eax],al
  403b1e:	or     al,BYTE PTR [eax]
  403b20:	add    ch,BYTE PTR [edi-0x6b]
  403b23:	add    BYTE PTR [eax],al
  403b25:	or     al,BYTE PTR [edx]
  403b27:	outs   dx,DWORD PTR ds:[esi]
  403b28:	add    BYTE PTR ds:[eax],al
  403b2b:	push   es
  403b2c:	and    eax,0x966f26
  403b31:	add    BYTE PTR [edx],cl
  403b33:	add    BYTE PTR [edx],al
  403b35:	outs   dx,DWORD PTR ds:[esi]
  403b36:	xchg   ebp,eax
  403b37:	add    BYTE PTR [eax],al
  403b39:	or     ah,BYTE PTR ds:0x406f0226
  403b3f:	add    BYTE PTR [eax],al
  403b41:	push   es
  403b42:	and    eax,0x966f26
  403b47:	add    BYTE PTR [edx],cl
  403b49:	add    BYTE PTR [edx],al
  403b4b:	push   es
  403b4c:	and    dh,dl
  403b4e:	add    al,0x0
  403b50:	add    BYTE PTR [eax],ch
  403b52:	push   0x25060000
  403b57:	outs   dx,DWORD PTR es:[esi]
  403b59:	jnp    0x403b5b
  403b5b:	add    BYTE PTR [edx],cl
  403b5d:	and    eax,0x407426
  403b62:	add    BYTE PTR [ecx],al
  403b64:	outs   dx,DWORD PTR ds:[esi]
  403b65:	xchg   edi,eax
  403b66:	add    BYTE PTR [eax],al
  403b68:	or     al,BYTE PTR [eax]
  403b6a:	add    ah,BYTE PTR [eax]
  403b6c:	jmp    0x403b72
  403b6e:	add    BYTE PTR [eax],al
  403b70:	sub    BYTE PTR [eax+0x0],ch
  403b73:	add    BYTE PTR [esi],al
  403b75:	and    eax,0x746f26
  403b7a:	add    BYTE PTR [edx],cl
  403b7c:	add    BYTE PTR [edx],al
  403b7e:	and    dh,dh
  403b80:	add    al,0x0
  403b82:	add    BYTE PTR [eax],ch
  403b84:	push   0x25060000
  403b89:	outs   dx,DWORD PTR es:[esi]
  403b8b:	cwde   
  403b8c:	add    BYTE PTR [eax],al
  403b8e:	or     al,BYTE PTR [eax]
  403b90:	add    ch,BYTE PTR [edi+0x30]
  403b93:	add    BYTE PTR [eax],al
  403b95:	push   es
  403b96:	outs   dx,DWORD PTR ds:[esi]
  403b97:	cdq    
  403b98:	add    BYTE PTR [eax],al
  403b9a:	or     al,BYTE PTR [eax]
  403b9c:	add    ch,BYTE PTR [edi+0x38]
  403b9f:	add    BYTE PTR [eax],al
  403ba1:	push   es
  403ba2:	and    eax,0x996f26
  403ba7:	add    BYTE PTR [edx],cl
  403ba9:	add    BYTE PTR [edx],al
  403bab:	and    BYTE PTR [edx+eax*1+0x0],bh
  403baf:	add    BYTE PTR [eax],ch
  403bb1:	pusha  
  403bb2:	add    BYTE PTR [eax],al
  403bb4:	push   es
  403bb5:	outs   dx,DWORD PTR ds:[esi]
  403bb6:	call   0x6f02:0xa0000
  403bbd:	fwait
  403bbe:	add    BYTE PTR [eax],al
  403bc0:	or     al,BYTE PTR [eax]
  403bc2:	add    BYTE PTR [edx],ch
  403bc4:	adc    esi,DWORD PTR [eax]
  403bc6:	add    al,BYTE PTR [eax]
  403bc8:	or     eax,DWORD PTR [eax]
  403bca:	add    BYTE PTR [eax],al
  403bcc:	adc    eax,0x2110000
  403bd1:	jnp    0x403be0
  403bd3:	add    BYTE PTR [eax],al
  403bd5:	add    al,0xa
  403bd7:	sub    eax,DWORD PTR [eax]
  403bd9:	push   es
  403bda:	sub    al,BYTE PTR [eax]
  403bdc:	adc    esi,DWORD PTR [eax]
  403bde:	add    eax,DWORD PTR [eax]
  403be0:	add    BYTE PTR [eax],0x0
  403be3:	add    BYTE PTR [esi],dl
  403be5:	add    BYTE PTR [eax],al
  403be7:	adc    DWORD PTR [edx],eax
  403be9:	and    eax,0x5107fe
  403bee:	add    BYTE PTR [esi],al
  403bf0:	jae    0x403c55
  403bf2:	add    BYTE PTR [eax],al
  403bf4:	or     cl,BYTE PTR [edx]
  403bf6:	add    bh,BYTE PTR [ebx+0xd]
  403bf9:	add    BYTE PTR [eax],al
  403bfb:	add    al,0x14
  403bfd:	inc    BYTE PTR [ecx]
  403bff:	and    BYTE PTR [eax+0x28000002],al
  403c05:	pusha  
  403c06:	add    BYTE PTR [eax],al
  403c08:	push   es
  403c09:	inc    BYTE PTR [ecx]
  403c0b:	or     eax,DWORD PTR [edi]
  403c0d:	sub    al,0x20
  403c0f:	sbb    al,0x45
  403c11:	add    DWORD PTR [eax],eax
  403c13:	add    BYTE PTR [eax],al
  403c15:	idiv   bh
  403c17:	(bad)  
  403c18:	call   DWORD PTR [edi]
  403c1a:	sub    eax,0x2dd006
  403c1f:	add    BYTE PTR [esi],al
  403c21:	add    bh,BYTE PTR es:[ebx+0xd]
  403c25:	add    BYTE PTR [eax],al
  403c27:	add    al,0x6
  403c29:	outs   dx,DWORD PTR ds:[esi]
  403c2a:	pushf  
  403c2b:	add    BYTE PTR [eax],al
  403c2d:	or     al,BYTE PTR [eax]
  403c2f:	add    BYTE PTR [edx],al
  403c31:	add    edi,DWORD PTR [ebp+0xd]
  403c34:	add    BYTE PTR [eax],al
  403c36:	add    al,0x2
  403c38:	jnp    0x403c47
  403c3a:	add    BYTE PTR [eax],al
  403c3c:	add    al,0x14
  403c3e:	inc    BYTE PTR [ecx]
  403c40:	and    BYTE PTR [edx+eax*1+0x60280000],al
  403c47:	add    BYTE PTR [eax],al
  403c49:	push   es
  403c4a:	inc    BYTE PTR [ecx]
  403c4c:	or     eax,DWORD PTR [edi]
  403c4e:	sub    al,0x17
  403c50:	pop    ss
  403c51:	inc    ebp
  403c52:	add    DWORD PTR [eax],eax
  403c54:	add    BYTE PTR [eax],al
  403c56:	idiv   bh
  403c58:	(bad)  
  403c59:	inc    DWORD PTR [edx]
  403c5b:	jnp    0x403c6a
  403c5d:	add    BYTE PTR [eax],al
  403c5f:	add    al,0x6
  403c61:	outs   dx,DWORD PTR ds:[esi]
  403c62:	popf   
  403c63:	add    BYTE PTR [eax],al
  403c65:	or     al,BYTE PTR [eax]
  403c67:	add    BYTE PTR [eax],al
  403c69:	sub    al,BYTE PTR [eax]
  403c6b:	add    BYTE PTR [ebx],dl
  403c6d:	xor    BYTE PTR [edx],al
  403c6f:	add    BYTE PTR [ebx],cl
  403c71:	add    BYTE PTR [eax],al
  403c73:	add    BYTE PTR ds:0x2110000,dl
  403c79:	jnp    0x403c89
  403c7b:	add    BYTE PTR [eax],al
  403c7d:	add    al,0xa
  403c7f:	sub    eax,DWORD PTR [eax]
  403c81:	push   es
  403c82:	sub    al,BYTE PTR [eax]
  403c84:	adc    esi,DWORD PTR [eax]
  403c86:	add    eax,DWORD PTR [eax]
  403c88:	add    BYTE PTR [eax],0x0
  403c8b:	add    BYTE PTR [esi],dl
  403c8d:	add    BYTE PTR [eax],al
  403c8f:	adc    DWORD PTR [edx],eax
  403c91:	and    eax,0x5207fe
  403c96:	add    BYTE PTR [esi],al
  403c98:	jae    0x403cfd
  403c9a:	add    BYTE PTR [eax],al
  403c9c:	or     cl,BYTE PTR [edx]
  403c9e:	add    bh,BYTE PTR [ebx+0xe]
  403ca1:	add    BYTE PTR [eax],al
  403ca3:	add    al,0x14
  403ca5:	inc    BYTE PTR [ecx]
  403ca7:	and    BYTE PTR [eax+0x28000002],cl
  403cad:	pusha  
  403cae:	add    BYTE PTR [eax],al
  403cb0:	push   es
  403cb1:	inc    BYTE PTR [ecx]
  403cb3:	or     eax,DWORD PTR [edi]
  403cb5:	sub    al,0x20
  403cb7:	sbb    DWORD PTR [ebp+0x1],eax
  403cba:	add    BYTE PTR [eax],al
  403cbc:	add    dh,dh
  403cbe:	(bad)  
  403cbf:	(bad)  
  403cc0:	call   DWORD PTR [edi]
  403cc2:	sub    eax,0x2fd006
  403cc7:	add    BYTE PTR [esi],al
  403cc9:	add    bh,BYTE PTR es:[ebx+0xe]
  403ccd:	add    BYTE PTR [eax],al
  403ccf:	add    al,0x6
  403cd1:	outs   dx,DWORD PTR ds:[esi]
  403cd2:	pushf  
  403cd3:	add    BYTE PTR [eax],al
  403cd5:	or     al,BYTE PTR [eax]
  403cd7:	add    BYTE PTR [edx],al
  403cd9:	add    edi,DWORD PTR [ebp+0xe]
  403cdc:	add    BYTE PTR [eax],al
  403cde:	add    al,0x2
  403ce0:	jnp    0x403cf0
  403ce2:	add    BYTE PTR [eax],al
  403ce4:	add    al,0x14
  403ce6:	inc    BYTE PTR [ecx]
  403ce8:	and    BYTE PTR [edx+eax*1+0x60280000],cl
  403cef:	add    BYTE PTR [eax],al
  403cf1:	push   es
  403cf2:	inc    BYTE PTR [ecx]
  403cf4:	or     eax,DWORD PTR [edi]
  403cf6:	sub    al,0x17
  403cf8:	sbb    eax,DWORD PTR [ebp+0x1]
  403cfb:	add    BYTE PTR [eax],al
  403cfd:	add    dh,dh
  403cff:	(bad)  
  403d00:	(bad)  
  403d01:	inc    DWORD PTR [edx]
  403d03:	jnp    0x403d13
  403d05:	add    BYTE PTR [eax],al
  403d07:	add    al,0x6
  403d09:	outs   dx,DWORD PTR ds:[esi]
  403d0a:	popf   
  403d0b:	add    BYTE PTR [eax],al
  403d0d:	or     al,BYTE PTR [eax]
  403d0f:	add    BYTE PTR [eax],al
  403d11:	sub    al,BYTE PTR [eax]
  403d13:	add    BYTE PTR [ebx],dl
  403d15:	xor    BYTE PTR [edx],al
  403d17:	add    BYTE PTR [ebx],cl
  403d19:	add    BYTE PTR [eax],al
  403d1b:	add    BYTE PTR [edi],dl
  403d1d:	add    BYTE PTR [eax],al
  403d1f:	adc    DWORD PTR [edx],eax
  403d21:	jnp    0x403d32
  403d23:	add    BYTE PTR [eax],al
  403d25:	add    al,0xa
  403d27:	sub    eax,DWORD PTR [eax]
  403d29:	push   es
  403d2a:	sub    al,BYTE PTR [eax]
  403d2c:	add    esi,DWORD PTR [eax]
  403d2e:	or     DWORD PTR [eax],eax
  403d30:	or     DWORD PTR [eax],eax
  403d32:	add    BYTE PTR [eax],al
  403d34:	add    BYTE PTR [eax],al
  403d36:	add    BYTE PTR [eax],al
  403d38:	add    al,BYTE PTR [ebx]
  403d3a:	jge    0x403d4b
  403d3c:	add    BYTE PTR [eax],al
  403d3e:	add    al,0x0
  403d40:	sub    al,BYTE PTR [eax]
  403d42:	add    BYTE PTR [eax],al
  403d44:	adc    esi,DWORD PTR [eax]
  403d46:	add    al,BYTE PTR [eax]
  403d48:	or     eax,DWORD PTR [eax]
  403d4a:	add    BYTE PTR [eax],al
  403d4c:	sbb    BYTE PTR [eax],al
  403d4e:	add    BYTE PTR [ecx],dl
  403d50:	add    bh,BYTE PTR [ebx+0x10]
  403d53:	add    BYTE PTR [eax],al
  403d55:	add    al,0xa
  403d57:	sub    eax,DWORD PTR [eax]
  403d59:	push   es
  403d5a:	sub    al,BYTE PTR [eax]
  403d5c:	add    esi,DWORD PTR [eax]
  403d5e:	or     DWORD PTR [eax],eax
  403d60:	or     DWORD PTR [eax],eax
  403d62:	add    BYTE PTR [eax],al
  403d64:	add    BYTE PTR [eax],al
  403d66:	add    BYTE PTR [eax],al
  403d68:	add    al,BYTE PTR [ebx]
  403d6a:	jge    0x403d7c
  403d6c:	add    BYTE PTR [eax],al
  403d6e:	add    al,0x0
  403d70:	sub    al,BYTE PTR [eax]
  403d72:	add    BYTE PTR [eax],al
  403d74:	adc    esi,DWORD PTR [eax]
  403d76:	add    al,BYTE PTR [eax]
  403d78:	or     eax,DWORD PTR [eax]
  403d7a:	add    BYTE PTR [eax],al
  403d7c:	sbb    DWORD PTR [eax],eax
  403d7e:	add    BYTE PTR [ecx],dl
  403d80:	add    bh,BYTE PTR [ebx+0x11]
  403d83:	add    BYTE PTR [eax],al
  403d85:	add    al,0xa
  403d87:	sub    eax,DWORD PTR [eax]
  403d89:	push   es
  403d8a:	sub    al,BYTE PTR [eax]
  403d8c:	add    esi,DWORD PTR [eax]
  403d8e:	or     DWORD PTR [eax],eax
  403d90:	or     DWORD PTR [eax],eax
  403d92:	add    BYTE PTR [eax],al
  403d94:	add    BYTE PTR [eax],al
  403d96:	add    BYTE PTR [eax],al
  403d98:	add    al,BYTE PTR [ebx]
  403d9a:	jge    0x403dad
  403d9c:	add    BYTE PTR [eax],al
  403d9e:	add    al,0x0
  403da0:	sub    al,BYTE PTR [eax]
  403da2:	add    BYTE PTR [eax],al
  403da4:	adc    esi,DWORD PTR [eax]
  403da6:	add    al,BYTE PTR [eax]
  403da8:	or     eax,DWORD PTR [eax]
  403daa:	add    BYTE PTR [eax],al
  403dac:	sbb    BYTE PTR [eax],al
  403dae:	add    BYTE PTR [ecx],dl
  403db0:	add    bh,BYTE PTR [ebx+0x12]
  403db3:	add    BYTE PTR [eax],al
  403db5:	add    al,0xa
  403db7:	sub    eax,DWORD PTR [eax]
  403db9:	push   es
  403dba:	sub    al,BYTE PTR [eax]
  403dbc:	add    esi,DWORD PTR [eax]
  403dbe:	or     DWORD PTR [eax],eax
  403dc0:	or     DWORD PTR [eax],eax
  403dc2:	add    BYTE PTR [eax],al
  403dc4:	add    BYTE PTR [eax],al
  403dc6:	add    BYTE PTR [eax],al
  403dc8:	add    al,BYTE PTR [ebx]
  403dca:	jge    0x403dde
  403dcc:	add    BYTE PTR [eax],al
  403dce:	add    al,0x0
  403dd0:	sub    al,BYTE PTR [eax]
  403dd2:	add    BYTE PTR [eax],al
  403dd4:	adc    esi,DWORD PTR [eax]
  403dd6:	add    al,BYTE PTR [eax]
  403dd8:	or     eax,DWORD PTR [eax]
  403dda:	add    BYTE PTR [eax],al
  403ddc:	pop    ss
  403ddd:	add    BYTE PTR [eax],al
  403ddf:	adc    DWORD PTR [edx],eax
  403de1:	jnp    0x403df6
  403de3:	add    BYTE PTR [eax],al
  403de5:	add    al,0xa
  403de7:	sub    eax,DWORD PTR [eax]
  403de9:	push   es
  403dea:	sub    al,BYTE PTR [eax]
  403dec:	add    esi,DWORD PTR [eax]
  403dee:	or     DWORD PTR [eax],eax
  403df0:	or     DWORD PTR [eax],eax
  403df2:	add    BYTE PTR [eax],al
  403df4:	add    BYTE PTR [eax],al
  403df6:	add    BYTE PTR [eax],al
  403df8:	add    al,BYTE PTR [ebx]
  403dfa:	jge    0x403e0f
  403dfc:	add    BYTE PTR [eax],al
  403dfe:	add    al,0x0
  403e00:	sub    al,BYTE PTR [eax]
  403e02:	add    BYTE PTR [eax],al
  403e04:	adc    esi,DWORD PTR [eax]
  403e06:	add    al,BYTE PTR [eax]
  403e08:	or     eax,DWORD PTR [eax]
  403e0a:	add    BYTE PTR [eax],al
  403e0c:	sbb    BYTE PTR [eax],al
  403e0e:	add    BYTE PTR [ecx],dl
  403e10:	add    bh,BYTE PTR [ebx+0x14]
  403e13:	add    BYTE PTR [eax],al
  403e15:	add    al,0xa
  403e17:	sub    eax,DWORD PTR [eax]
  403e19:	push   es
  403e1a:	sub    al,BYTE PTR [eax]
  403e1c:	add    esi,DWORD PTR [eax]
  403e1e:	or     DWORD PTR [eax],eax
  403e20:	or     DWORD PTR [eax],eax
  403e22:	add    BYTE PTR [eax],al
  403e24:	add    BYTE PTR [eax],al
  403e26:	add    BYTE PTR [eax],al
  403e28:	add    al,BYTE PTR [ebx]
  403e2a:	jge    0x403e40
  403e2c:	add    BYTE PTR [eax],al
  403e2e:	add    al,0x0
  403e30:	sub    al,BYTE PTR [eax]
  403e32:	add    BYTE PTR [eax],al
  403e34:	adc    esi,DWORD PTR [eax]
  403e36:	add    al,BYTE PTR [eax]
  403e38:	or     eax,DWORD PTR [eax]
  403e3a:	add    BYTE PTR [eax],al
  403e3c:	sbb    BYTE PTR [eax],al
  403e3e:	add    BYTE PTR [ecx],dl
  403e40:	add    bh,BYTE PTR [ebx+0x15]
  403e43:	add    BYTE PTR [eax],al
  403e45:	add    al,0xa
  403e47:	sub    eax,DWORD PTR [eax]
  403e49:	push   es
  403e4a:	sub    al,BYTE PTR [eax]
  403e4c:	add    esi,DWORD PTR [eax]
  403e4e:	or     DWORD PTR [eax],eax
  403e50:	or     DWORD PTR [eax],eax
  403e52:	add    BYTE PTR [eax],al
  403e54:	add    BYTE PTR [eax],al
  403e56:	add    BYTE PTR [eax],al
  403e58:	add    al,BYTE PTR [ebx]
  403e5a:	jge    0x403e71
  403e5c:	add    BYTE PTR [eax],al
  403e5e:	add    al,0x0
  403e60:	sub    al,BYTE PTR [eax]
  403e62:	add    BYTE PTR [eax],al
  403e64:	adc    esi,DWORD PTR [eax]
  403e66:	add    al,BYTE PTR [eax]
  403e68:	or     eax,DWORD PTR [eax]
  403e6a:	add    BYTE PTR [eax],al
  403e6c:	sbb    BYTE PTR [eax],al
  403e6e:	add    BYTE PTR [ecx],dl
  403e70:	add    bh,BYTE PTR [ebx+0x16]
  403e73:	add    BYTE PTR [eax],al
  403e75:	add    al,0xa
  403e77:	sub    eax,DWORD PTR [eax]
  403e79:	push   es
  403e7a:	sub    al,BYTE PTR [eax]
  403e7c:	add    esi,DWORD PTR [eax]
  403e7e:	or     DWORD PTR [eax],eax
  403e80:	or     DWORD PTR [eax],eax
  403e82:	add    BYTE PTR [eax],al
  403e84:	add    BYTE PTR [eax],al
  403e86:	add    BYTE PTR [eax],al
  403e88:	add    al,BYTE PTR [ebx]
  403e8a:	jge    0x403ea2
  403e8c:	add    BYTE PTR [eax],al
  403e8e:	add    al,0x0
  403e90:	sub    al,BYTE PTR [eax]
  403e92:	add    BYTE PTR [eax],al
  403e94:	adc    esi,DWORD PTR [eax]
  403e96:	add    al,BYTE PTR [eax]
  403e98:	or     eax,DWORD PTR [eax]
  403e9a:	add    BYTE PTR [eax],al
  403e9c:	sbb    BYTE PTR [eax],al
  403e9e:	add    BYTE PTR [ecx],dl
  403ea0:	add    bh,BYTE PTR [ebx+0x17]
  403ea3:	add    BYTE PTR [eax],al
  403ea5:	add    al,0xa
  403ea7:	sub    eax,DWORD PTR [eax]
  403ea9:	push   es
  403eaa:	sub    al,BYTE PTR [eax]
  403eac:	add    esi,DWORD PTR [eax]
  403eae:	or     DWORD PTR [eax],eax
  403eb0:	or     DWORD PTR [eax],eax
  403eb2:	add    BYTE PTR [eax],al
  403eb4:	add    BYTE PTR [eax],al
  403eb6:	add    BYTE PTR [eax],al
  403eb8:	add    al,BYTE PTR [ebx]
  403eba:	jge    0x403ed3
  403ebc:	add    BYTE PTR [eax],al
  403ebe:	add    al,0x0
  403ec0:	sub    al,BYTE PTR [eax]
  403ec2:	add    BYTE PTR [eax],al
  403ec4:	adc    esi,DWORD PTR [eax]
  403ec6:	add    al,BYTE PTR [eax]
  403ec8:	or     eax,DWORD PTR [eax]
  403eca:	add    BYTE PTR [eax],al
  403ecc:	sbb    BYTE PTR [eax],al
  403ece:	add    BYTE PTR [ecx],dl
  403ed0:	add    bh,BYTE PTR [ebx+0x18]
  403ed3:	add    BYTE PTR [eax],al
  403ed5:	add    al,0xa
  403ed7:	sub    eax,DWORD PTR [eax]
  403ed9:	push   es
  403eda:	sub    al,BYTE PTR [eax]
  403edc:	add    esi,DWORD PTR [eax]
  403ede:	or     DWORD PTR [eax],eax
  403ee0:	or     DWORD PTR [eax],eax
  403ee2:	add    BYTE PTR [eax],al
  403ee4:	add    BYTE PTR [eax],al
  403ee6:	add    BYTE PTR [eax],al
  403ee8:	add    al,BYTE PTR [ebx]
  403eea:	jge    0x403f04
  403eec:	add    BYTE PTR [eax],al
  403eee:	add    al,0x0
  403ef0:	sub    al,BYTE PTR [eax]
  403ef2:	add    BYTE PTR [eax],al
  403ef4:	sbb    esi,DWORD PTR [eax]
  403ef6:	pop    es
  403ef7:	add    BYTE PTR [edi],bh
  403ef9:	pop    es
  403efa:	add    BYTE PTR [eax],al
  403efc:	sbb    al,BYTE PTR [eax]
  403efe:	add    BYTE PTR [ecx],dl
  403f00:	add    BYTE PTR [eax],ch
  403f02:	pop    ebx
  403f03:	add    BYTE PTR [eax],al
  403f05:	or     ah,BYTE PTR [eax]
  403f07:	nop
  403f08:	add    al,BYTE PTR [eax]
  403f0a:	add    BYTE PTR [eax],ch
  403f0c:	pusha  
  403f0d:	add    BYTE PTR [eax],al
  403f0f:	push   es
  403f10:	adc    edx,DWORD PTR [eax+eiz*1]
  403f13:	xchg   esp,eax
  403f14:	add    al,BYTE PTR [eax]
  403f16:	add    BYTE PTR [eax],ch
  403f18:	pusha  
  403f19:	add    BYTE PTR [eax],al
  403f1b:	push   es
  403f1c:	adc    edx,DWORD PTR [esi]
  403f1e:	and    BYTE PTR [eax+0x28000002],bl
  403f24:	pusha  
  403f25:	add    BYTE PTR [eax],al
  403f27:	push   es
  403f28:	sub    BYTE PTR [esi+0xa0000],bl
  403f2e:	and    BYTE PTR [edx+eax*1+0x60280000],bl
  403f35:	add    BYTE PTR [eax],al
  403f37:	push   es
  403f38:	adc    edx,DWORD PTR [esi]
  403f3a:	sub    BYTE PTR [edi+0xa0000],bl
  403f40:	and    BYTE PTR [eax+0x28000002],ah
  403f46:	pusha  
  403f47:	add    BYTE PTR [eax],al
  403f49:	push   es
  403f4a:	adc    edx,DWORD PTR [esi]
  403f4c:	and    BYTE PTR [edi],cl
  403f4e:	add    eax,0x68280000
  403f53:	add    BYTE PTR [eax],al
  403f55:	push   es
  403f56:	and    eax,0xa02826
  403f5b:	add    BYTE PTR [edx],cl
  403f5d:	adc    edx,DWORD PTR [edi]
  403f5f:	adc    DWORD PTR [edi],edx
  403f61:	cmp    DWORD PTR [ecx+eax*1+0x0],ecx
  403f65:	add    BYTE PTR ds:0x145,bl
  403f6b:	add    dh,dh
  403f6d:	(bad)  
  403f6e:	(bad)  
  403f6f:	call   DWORD PTR [edi]
  403f71:	sub    eax,0x44d006
  403f76:	add    BYTE PTR [esi],al
  403f78:	and    BYTE PTR es:[edx+eax*1+0x60280000],ah
  403f80:	add    BYTE PTR [eax],al
  403f82:	push   es
  403f83:	adc    edx,DWORD PTR [esi]
  403f85:	and    BYTE PTR [edx],bh
  403f87:	add    eax,0x68280000
  403f8c:	add    BYTE PTR [eax],al
  403f8e:	push   es
  403f8f:	jae    0x403f32
  403f91:	add    BYTE PTR [eax],al
  403f93:	or     cl,BYTE PTR [eax+eiz*1]
  403f96:	test   al,0x2
  403f98:	add    BYTE PTR [eax],al
  403f9a:	sub    BYTE PTR [eax+0x0],ah
  403f9d:	add    BYTE PTR [esi],al
  403f9f:	adc    edx,DWORD PTR [esi]
  403fa1:	or     BYTE PTR [edi-0x5e],ch
  403fa4:	add    BYTE PTR [eax],al
  403fa6:	or     ah,BYTE PTR ds:0xac200a26
  403fac:	add    al,BYTE PTR [eax]
  403fae:	add    BYTE PTR [eax],ch
  403fb0:	pusha  
  403fb1:	add    BYTE PTR [eax],al
  403fb3:	push   es
  403fb4:	adc    edx,DWORD PTR [esi]
  403fb6:	push   es
  403fb7:	and    BYTE PTR [ebp+0x5],ch
  403fba:	add    BYTE PTR [eax],al
  403fbc:	sub    BYTE PTR [eax+0x0],ch
  403fbf:	add    BYTE PTR [esi],al
  403fc1:	and    eax,0x5b7226
  403fc6:	add    BYTE PTR [eax+0x20],dh
  403fc9:	mov    al,0x2
  403fcb:	add    BYTE PTR [eax],al
  403fcd:	sub    BYTE PTR [eax+0x0],ah
  403fd0:	add    BYTE PTR [esi],al
  403fd2:	and    BYTE PTR [edx+eax*1+0x60280000],dh
  403fd9:	add    BYTE PTR [eax],al
  403fdb:	push   es
  403fdc:	and    BYTE PTR [eax+0x28000002],bh
  403fe2:	pusha  
  403fe3:	add    BYTE PTR [eax],al
  403fe5:	push   es
  403fe6:	sub    BYTE PTR [ebx+0x250a0000],ah
  403fec:	and    BYTE PTR es:[eax+0x5],dh
  403ff0:	add    BYTE PTR [eax],al
  403ff2:	sub    BYTE PTR [eax+0x0],ch
  403ff5:	add    BYTE PTR [esi],al
  403ff7:	and    eax,0x5b7226
  403ffc:	add    BYTE PTR [eax+0x20],dh
  403fff:	mov    esp,0x28000002
  404004:	pusha  
  404005:	add    BYTE PTR [eax],al
  404007:	push   es
  404008:	and    al,al
  40400a:	add    al,BYTE PTR [eax]
  40400c:	add    BYTE PTR [eax],ch
  40400e:	pusha  
  40400f:	add    BYTE PTR [eax],al
  404011:	push   es
  404012:	and    ah,al
  404014:	add    al,BYTE PTR [eax]
  404016:	add    BYTE PTR [eax],ch
  404018:	pusha  
  404019:	add    BYTE PTR [eax],al
  40401b:	push   es
  40401c:	sub    BYTE PTR [ebx+0xb0a0000],ah
  404022:	and    al,cl
  404024:	add    al,BYTE PTR [eax]
  404026:	add    BYTE PTR [eax],ch
  404028:	pusha  
  404029:	add    BYTE PTR [eax],al
  40402b:	push   es
  40402c:	adc    edx,DWORD PTR [esi]
  40402e:	add    ch,BYTE PTR [edi+0x32]
  404031:	add    BYTE PTR [eax],al
  404033:	push   es
  404034:	and    eax,0xa46f0726
  404039:	add    BYTE PTR [eax],al
  40403b:	or     ah,BYTE PTR ds:0x8a6f26
  404041:	add    BYTE PTR [edx],cl
  404043:	add    BYTE PTR [eax],ah
  404045:	int3   
  404046:	add    al,BYTE PTR [eax]
  404048:	add    BYTE PTR [eax],ch
  40404a:	pusha  
  40404b:	add    BYTE PTR [eax],al
  40404d:	push   es
  40404e:	adc    edx,DWORD PTR [esi]
  404050:	and    al,dl
  404052:	add    al,BYTE PTR [eax]
  404054:	add    BYTE PTR [eax],ch
  404056:	pusha  
  404057:	add    BYTE PTR [eax],al
  404059:	push   es
  40405a:	sub    BYTE PTR [ebp+0x250a0000],ah
  404060:	and    BYTE PTR es:[ebx+0x5],dh
  404064:	add    BYTE PTR [eax],al
  404066:	sub    BYTE PTR [eax+0x0],ch
  404069:	add    BYTE PTR [esi],al
  40406b:	and    eax,0xa62826
  404070:	add    BYTE PTR [edx],cl
  404072:	and    eax,0xa02826
  404077:	add    BYTE PTR [edx],cl
  404079:	and    eax,0x2d42026
  40407e:	add    BYTE PTR [eax],al
  404080:	sub    BYTE PTR [eax+0x0],ah
  404083:	add    BYTE PTR [esi],al
  404085:	inc    BYTE PTR [ecx]
  404087:	adc    edx,DWORD PTR [edi]
  404089:	adc    DWORD PTR [edi],edx
  40408b:	sub    al,0x1f
  40408d:	sbb    BYTE PTR [ebp+0x1],al
  404090:	add    BYTE PTR [eax],al
  404092:	add    dh,dh
  404094:	(bad)  
  404095:	(bad)  
  404096:	jmp    DWORD PTR [eax]
  404098:	fadd   DWORD PTR [edx]
  40409a:	add    BYTE PTR [eax],al
  40409c:	sub    BYTE PTR [eax+0x0],ah
  40409f:	add    BYTE PTR [esi],al
  4040a1:	adc    edx,DWORD PTR [esi]
  4040a3:	add    ch,BYTE PTR [edi+0x45]
  4040a6:	add    BYTE PTR [eax],al
  4040a8:	push   es
  4040a9:	and    eax,0x38002626
  4040ae:	adc    eax,0x20000004
  4040b3:	fadd   QWORD PTR [edx]
  4040b5:	add    BYTE PTR [eax],al
  4040b7:	sub    BYTE PTR [eax+0x0],ah
  4040ba:	add    BYTE PTR [esi],al
  4040bc:	adc    edx,DWORD PTR [esi]
  4040be:	add    BYTE PTR [eax],ah
  4040c0:	loopne 0x4040c4
  4040c2:	add    BYTE PTR [eax],al
  4040c4:	sub    BYTE PTR [eax+0x0],ah
  4040c7:	add    BYTE PTR [esi],al
  4040c9:	adc    edx,DWORD PTR [esi]
  4040cb:	add    ch,BYTE PTR [edi+0x46]
  4040ce:	add    BYTE PTR [eax],al
  4040d0:	push   es
  4040d1:	and    eax,0xe4202626
  4040d6:	add    al,BYTE PTR [eax]
  4040d8:	add    BYTE PTR [eax],ch
  4040da:	pusha  
  4040db:	add    BYTE PTR [eax],al
  4040dd:	push   es
  4040de:	adc    edx,DWORD PTR [esi]
  4040e0:	sub    BYTE PTR [eax],dl
  4040e2:	add    BYTE PTR [eax],al
  4040e4:	push   es
  4040e5:	and    eax,0xa76f26
  4040ea:	add    BYTE PTR [edx],cl
  4040ec:	and    eax,0x5a02026
  4040f1:	add    BYTE PTR [eax],al
  4040f3:	sub    BYTE PTR [eax+0x0],ch
  4040f6:	add    BYTE PTR [esi],al
  4040f8:	and    BYTE PTR [edi],bl
  4040fa:	push   es
  4040fb:	add    BYTE PTR [eax],al
  4040fd:	sub    BYTE PTR [eax+0x0],ch
  404100:	add    BYTE PTR [esi],al
  404102:	and    eax,0x6342026
  404107:	add    BYTE PTR [eax],al
  404109:	sub    BYTE PTR [eax+0x0],ch
  40410c:	add    BYTE PTR [esi],al
  40410e:	and    eax,0xa86f26
  404113:	add    BYTE PTR [edx],cl
  404115:	add    BYTE PTR [eax],ah
  404117:	call   0x2840411e
  40411c:	pusha  
  40411d:	add    BYTE PTR [eax],al
  40411f:	push   es
  404120:	adc    edx,DWORD PTR [esi]
  404122:	add    ch,BYTE PTR [edi+0x47]
  404125:	add    BYTE PTR [eax],al
  404127:	push   es
  404128:	adc    ecx,DWORD PTR [esi]
  40412a:	and    ah,ch
  40412c:	add    al,BYTE PTR [eax]
  40412e:	add    BYTE PTR [eax],ch
  404130:	pusha  
  404131:	add    BYTE PTR [eax],al
  404133:	push   es
  404134:	adc    edx,DWORD PTR [esi]
  404136:	add    ch,BYTE PTR [edi+0x4a]
  404139:	add    BYTE PTR [eax],al
  40413b:	push   es
  40413c:	and    eax,0xa92826
  404141:	add    BYTE PTR [edx],cl
  404143:	and    eax,0x20061326
  404148:	lock add al,BYTE PTR [eax]
  40414b:	add    BYTE PTR [eax],ch
  40414d:	pusha  
  40414e:	add    BYTE PTR [eax],al
  404150:	push   es
  404151:	adc    edx,DWORD PTR [esi]
  404153:	add    ch,BYTE PTR [edi+0x49]
  404156:	add    BYTE PTR [eax],al
  404158:	push   es
  404159:	sub    BYTE PTR [ecx+0xd0a0000],ch
  40415f:	and    ah,dh
  404161:	add    al,BYTE PTR [eax]
  404163:	add    BYTE PTR [eax],ch
  404165:	pusha  
  404166:	add    BYTE PTR [eax],al
  404168:	push   es
  404169:	adc    edx,DWORD PTR [esi]
  40416b:	and    al,bh
  40416d:	add    al,BYTE PTR [eax]
  40416f:	add    BYTE PTR [eax],ch
  404171:	pusha  
  404172:	add    BYTE PTR [eax],al
  404174:	push   es
  404175:	lea    ebx,[esi+0x13010000]
  40417b:	adc    edx,DWORD PTR [ecx]
  40417d:	adc    esp,DWORD PTR [eax]
  40417f:	cld    
  404180:	add    al,BYTE PTR [eax]
  404182:	add    BYTE PTR [eax],ch
  404184:	pusha  
  404185:	add    BYTE PTR [eax],al
  404187:	push   es
  404188:	and    BYTE PTR [ebp+0x6],ch
  40418b:	add    BYTE PTR [eax],al
  40418d:	sub    BYTE PTR [eax+0x0],ch
  404190:	add    BYTE PTR [esi],al
  404192:	mov    ds:0x20131100,al
  404197:	add    BYTE PTR [ebx],al
  404199:	add    BYTE PTR [eax],al
  40419b:	sub    BYTE PTR [eax+0x0],ah
  40419e:	add    BYTE PTR [esi],al
  4041a0:	adc    DWORD PTR [esi],ecx
  4041a2:	mov    ds:0x20131100,al
  4041a7:	add    al,0x3
  4041a9:	add    BYTE PTR [eax],al
  4041ab:	sub    BYTE PTR [eax+0x0],ah
  4041ae:	add    BYTE PTR [esi],al
  4041b0:	and    BYTE PTR [edx+0x28000006],ch
  4041b6:	push   0x25060000
  4041bb:	mov    es:0x20131100,al
  4041c1:	or     BYTE PTR [ebx],al
  4041c3:	add    BYTE PTR [eax],al
  4041c5:	sub    BYTE PTR [eax+0x0],ah
  4041c8:	add    BYTE PTR [esi],al
  4041ca:	adc    DWORD PTR [esi],eax
  4041cc:	mov    ds:0x20131100,al
  4041d1:	or     al,0x3
  4041d3:	add    BYTE PTR [eax],al
  4041d5:	sub    BYTE PTR [eax+0x0],ah
  4041d8:	add    BYTE PTR [esi],al
  4041da:	and    BYTE PTR [edx+0x28000006],ch
  4041e0:	push   0x25060000
  4041e5:	mov    es:0x20131100,al
  4041eb:	adc    BYTE PTR [ebx],al
  4041ed:	add    BYTE PTR [eax],al
  4041ef:	sub    BYTE PTR [eax+0x0],ah
  4041f2:	add    BYTE PTR [esi],al
  4041f4:	or     DWORD PTR [edx+0x28131100],esp
  4041fa:	stos   BYTE PTR es:[edi],al
  4041fb:	add    BYTE PTR [eax],al
  4041fd:	or     ah,BYTE PTR ds:0x200d1326
  404203:	adc    al,0x3
  404205:	add    BYTE PTR [eax],al
  404207:	sub    BYTE PTR [eax+0x0],ah
  40420a:	add    BYTE PTR [esi],al
  40420c:	adc    edx,DWORD PTR [esi]
  40420e:	and    BYTE PTR [ebp+0x28000006],ch
  404214:	push   0x25060000
  404219:	adc    ecx,DWORD PTR es:[edi]
  40421c:	and    BYTE PTR [eax],bl
  40421e:	add    eax,DWORD PTR [eax]
  404220:	add    BYTE PTR [eax],ch
  404222:	pusha  
  404223:	add    BYTE PTR [eax],al
  404225:	push   es
  404226:	adc    edx,DWORD PTR [esi]
  404228:	jae    0x4041d5
  40422a:	add    BYTE PTR [eax],al
  40422c:	or     dl,BYTE PTR [ebx]
  40422e:	adc    BYTE PTR [eax],ah
  404230:	sbb    al,0x3
  404232:	add    BYTE PTR [eax],al
  404234:	sub    BYTE PTR [eax+0x0],ah
  404237:	add    BYTE PTR [esi],al
  404239:	adc    edx,DWORD PTR [esi]
  40423b:	adc    DWORD PTR [eax],edx
  40423d:	adc    DWORD PTR ds:0xac6f0f11,ecx
  404243:	add    BYTE PTR [eax],al
  404245:	or     al,BYTE PTR [eax]
  404247:	and    BYTE PTR [eax],ah
  404249:	add    eax,DWORD PTR [eax]
  40424b:	add    BYTE PTR [eax],ch
  40424d:	pusha  
  40424e:	add    BYTE PTR [eax],al
  404250:	push   es
  404251:	adc    edx,DWORD PTR [esi]
  404253:	and    dl,bl
  404255:	push   es
  404256:	add    BYTE PTR [eax],al
  404258:	sub    BYTE PTR [eax+0x0],ch
  40425b:	add    BYTE PTR [esi],al
  40425d:	and    eax,0x20071326
  404262:	and    al,0x3
  404264:	add    BYTE PTR [eax],al
  404266:	sub    BYTE PTR [eax+0x0],ah
  404269:	add    BYTE PTR [esi],al
  40426b:	adc    edx,DWORD PTR [esi]
  40426d:	add    dl,BYTE PTR [ecx]
  40426f:	pop    es
  404270:	adc    DWORD PTR [esi],eax
  404272:	outs   dx,DWORD PTR ds:[esi]
  404273:	dec    ebx
  404274:	add    BYTE PTR [eax],al
  404276:	push   es
  404277:	and    eax,0x28202626
  40427c:	add    eax,DWORD PTR [eax]
  40427e:	add    BYTE PTR [eax],ch
  404280:	pusha  
  404281:	add    BYTE PTR [eax],al
  404283:	push   es
  404284:	adc    edx,DWORD PTR [esi]
  404286:	and    cl,ah
  404288:	push   es
  404289:	add    BYTE PTR [eax],al
  40428b:	sub    BYTE PTR [eax+0x0],ch
  40428e:	add    BYTE PTR [esi],al
  404290:	and    eax,0x20041326
  404295:	sub    al,0x3
  404297:	add    BYTE PTR [eax],al
  404299:	sub    BYTE PTR [eax+0x0],ah
  40429c:	add    BYTE PTR [esi],al
  40429e:	adc    edx,DWORD PTR [esi]
  4042a0:	and    BYTE PTR [edi],cl
  4042a2:	add    eax,0x68280000
  4042a7:	add    BYTE PTR [eax],al
  4042a9:	push   es
  4042aa:	adc    ecx,DWORD PTR [eax]
  4042ac:	and    BYTE PTR [eax],dh
  4042ae:	add    eax,DWORD PTR [eax]
  4042b0:	add    BYTE PTR [eax],ch
  4042b2:	pusha  
  4042b3:	add    BYTE PTR [eax],al
  4042b5:	push   es
  4042b6:	adc    edx,DWORD PTR [esi]
  4042b8:	jae    0x404265
  4042ba:	add    BYTE PTR [eax],al
  4042bc:	or     dl,BYTE PTR [ebx]
  4042be:	adc    DWORD PTR [eax],esp
  4042c0:	xor    al,0x3
  4042c2:	add    BYTE PTR [eax],al
  4042c4:	sub    BYTE PTR [eax+0x0],ah
  4042c7:	add    BYTE PTR [esi],al
  4042c9:	adc    edx,DWORD PTR [esi]
  4042cb:	adc    DWORD PTR [ecx],edx
  4042cd:	adc    DWORD PTR [ecx+edx*1],eax
  4042d0:	or     BYTE PTR [edi-0x54],ch
  4042d3:	add    BYTE PTR [eax],al
  4042d5:	or     al,BYTE PTR [eax]
  4042d7:	and    BYTE PTR [eax],bh
  4042d9:	add    eax,DWORD PTR [eax]
  4042db:	add    BYTE PTR [eax],ch
  4042dd:	pusha  
  4042de:	add    BYTE PTR [eax],al
  4042e0:	push   es
  4042e1:	adc    edx,DWORD PTR [esi]
  4042e3:	jae    0x404292
  4042e5:	add    BYTE PTR [eax],al
  4042e7:	or     dl,BYTE PTR [ebx]
  4042e9:	or     esp,DWORD PTR [eax]
  4042eb:	cmp    al,0x3
  4042ed:	add    BYTE PTR [eax],al
  4042ef:	sub    BYTE PTR [eax+0x0],ah
  4042f2:	add    BYTE PTR [esi],al
  4042f4:	adc    edx,DWORD PTR [esi]
  4042f6:	jae    0x4042a6
  4042f8:	add    BYTE PTR [eax],al
  4042fa:	or     dl,BYTE PTR [ebx]
  4042fc:	or     al,0x20
  4042fe:	inc    eax
  4042ff:	add    eax,DWORD PTR [eax]
  404301:	add    BYTE PTR [eax],ch
  404303:	pusha  
  404304:	add    BYTE PTR [eax],al
  404306:	push   es
  404307:	adc    edx,DWORD PTR [esi]
  404309:	adc    DWORD PTR [ebx],ecx
  40430b:	outs   dx,DWORD PTR ds:[esi]
  40430c:	scas   eax,DWORD PTR es:[edi]
  40430d:	add    BYTE PTR [eax],al
  40430f:	or     ah,BYTE PTR ds:0xb06f26
  404315:	add    BYTE PTR [edx],cl
  404317:	and    eax,0x200a1326
  40431c:	inc    esp
  40431d:	add    eax,DWORD PTR [eax]
  40431f:	add    BYTE PTR [eax],ch
  404321:	pusha  
  404322:	add    BYTE PTR [eax],al
  404324:	push   es
  404325:	adc    edx,DWORD PTR [esi]
  404327:	adc    DWORD PTR [eax+eiz*1],ecx
  40432a:	adc    al,0x7
  40432c:	add    BYTE PTR [eax],al
  40432e:	sub    BYTE PTR [eax+0x0],ch
  404331:	add    BYTE PTR [esi],al
  404333:	and    eax,0xb16f26
  404338:	add    BYTE PTR [edx],cl
  40433a:	add    BYTE PTR [eax],ah
  40433c:	dec    eax
  40433d:	add    eax,DWORD PTR [eax]
  40433f:	add    BYTE PTR [eax],ch
  404341:	pusha  
  404342:	add    BYTE PTR [eax],al
  404344:	push   es
  404345:	adc    edx,DWORD PTR [esi]
  404347:	adc    DWORD PTR [eax+eiz*1],ecx
  40434a:	and    DWORD PTR [edi],eax
  40434c:	add    BYTE PTR [eax],al
  40434e:	sub    BYTE PTR [eax+0x0],ch
  404351:	add    BYTE PTR [esi],al
  404353:	and    eax,0xb26f26
  404358:	add    BYTE PTR [edx],cl
  40435a:	add    BYTE PTR [eax],ah
  40435c:	dec    esp
  40435d:	add    eax,DWORD PTR [eax]
  40435f:	add    BYTE PTR [eax],ch
  404361:	pusha  
  404362:	add    BYTE PTR [eax],al
  404364:	push   es
  404365:	adc    edx,DWORD PTR [esi]
  404367:	adc    DWORD PTR [eax+eiz*1],ecx
  40436a:	push   eax
  40436b:	add    eax,DWORD PTR [eax]
  40436d:	add    BYTE PTR [eax],ch
  40436f:	pusha  
  404370:	add    BYTE PTR [eax],al
  404372:	push   es
  404373:	outs   dx,DWORD PTR ds:[esi]
  404374:	mov    bl,0x0
  404376:	add    BYTE PTR [edx],cl
  404378:	add    BYTE PTR [eax],ah
  40437a:	push   esp
  40437b:	add    eax,DWORD PTR [eax]
  40437d:	add    BYTE PTR [eax],ch
  40437f:	pusha  
  404380:	add    BYTE PTR [eax],al
  404382:	push   es
  404383:	adc    edx,DWORD PTR [esi]
  404385:	adc    DWORD PTR [eax+eiz*1],ecx
  404388:	pop    eax
  404389:	add    eax,DWORD PTR [eax]
  40438b:	add    BYTE PTR [eax],ch
  40438d:	pusha  
  40438e:	add    BYTE PTR [eax],al
  404390:	push   es
  404391:	outs   dx,DWORD PTR ds:[esi]
  404392:	mov    ah,0x0
  404394:	add    BYTE PTR [edx],cl
  404396:	add    BYTE PTR [eax],ah
  404398:	pop    esp
  404399:	add    eax,DWORD PTR [eax]
  40439b:	add    BYTE PTR [eax],ch
  40439d:	pusha  
  40439e:	add    BYTE PTR [eax],al
  4043a0:	push   es
  4043a1:	adc    edx,DWORD PTR [esi]
  4043a3:	adc    DWORD PTR [eax+eiz*1],ecx
  4043a6:	pusha  
  4043a7:	add    eax,DWORD PTR [eax]
  4043a9:	add    BYTE PTR [eax],ch
  4043ab:	pusha  
  4043ac:	add    BYTE PTR [eax],al
  4043ae:	push   es
  4043af:	outs   dx,DWORD PTR ds:[esi]
  4043b0:	mov    ch,0x0
  4043b2:	add    BYTE PTR [edx],cl
  4043b4:	add    BYTE PTR [eax],ah
  4043b6:	add    eax,DWORD PTR fs:[eax]
  4043b9:	add    BYTE PTR [eax],ch
  4043bb:	pusha  
  4043bc:	add    BYTE PTR [eax],al
  4043be:	push   es
  4043bf:	adc    edx,DWORD PTR [esi]
  4043c1:	adc    DWORD PTR [ebx],ecx
  4043c3:	adc    DWORD PTR [edi+ebp*2],ecx
  4043c6:	mov    dh,0x0
  4043c8:	add    BYTE PTR [edx],cl
  4043ca:	add    BYTE PTR [eax],ah
  4043cc:	push   0x28000003
  4043d1:	pusha  
  4043d2:	add    BYTE PTR [eax],al
  4043d4:	push   es
  4043d5:	adc    edx,DWORD PTR [esi]
  4043d7:	adc    DWORD PTR [ebx],ecx
  4043d9:	outs   dx,DWORD PTR ds:[esi]
  4043da:	mov    bh,0x0
  4043dc:	add    BYTE PTR [edx],cl
  4043de:	and    BYTE PTR es:[ebx+eax*1+0x0],ch
  4043e3:	add    BYTE PTR [eax],ch
  4043e5:	pusha  
  4043e6:	add    BYTE PTR [eax],al
  4043e8:	push   es
  4043e9:	adc    edx,DWORD PTR [esi]
  4043eb:	adc    DWORD PTR [ebx],ecx
  4043ed:	outs   dx,DWORD PTR ds:[esi]
  4043ee:	scas   eax,DWORD PTR es:[edi]
  4043ef:	add    BYTE PTR [eax],al
  4043f1:	or     ah,BYTE PTR ds:0xb06f26
  4043f7:	add    BYTE PTR [edx],cl
  4043f9:	and    eax,0x200a1326
  4043fe:	jo     0x404403
  404400:	add    BYTE PTR [eax],al
  404402:	sub    BYTE PTR [eax+0x0],ah
  404405:	add    BYTE PTR [esi],al
  404407:	adc    edx,DWORD PTR [esi]
  404409:	adc    DWORD PTR [ebx],ecx
  40440b:	outs   dx,DWORD PTR ds:[esi]
  40440c:	mov    eax,0xa0000
  404411:	and    BYTE PTR [ebx+eax*1+0x0],dh
  404415:	add    BYTE PTR [eax],ch
  404417:	pusha  
  404418:	add    BYTE PTR [eax],al
  40441a:	push   es
  40441b:	adc    edx,DWORD PTR [esi]
  40441d:	add    ch,BYTE PTR [edi+0x45]
  404420:	add    BYTE PTR [eax],al
  404422:	push   es
  404423:	and    BYTE PTR es:[eax+0x3],bh
  404427:	add    BYTE PTR [eax],al
  404429:	sub    BYTE PTR [eax+0x0],ah
  40442c:	add    BYTE PTR [esi],al
  40442e:	adc    edx,DWORD PTR [esi]
  404430:	and    BYTE PTR [esi],dh
  404432:	pop    es
  404433:	add    BYTE PTR [eax],al
  404435:	sub    BYTE PTR [eax+0x0],ch
  404438:	add    BYTE PTR [esi],al
  40443a:	and    eax,0x20051326
  40443f:	jl     0x404444
  404441:	add    BYTE PTR [eax],al
  404443:	sub    BYTE PTR [eax+0x0],ah
  404446:	add    BYTE PTR [esi],al
  404448:	adc    edx,DWORD PTR [esi]
  40444a:	and    BYTE PTR [eax+0x28000003],al
  404450:	pusha  
  404451:	add    BYTE PTR [eax],al
  404453:	push   es
  404454:	sub    BYTE PTR [ebp+0x250a0000],ah
  40445a:	and    BYTE PTR es:[ebx+0x7],ch
  40445e:	add    BYTE PTR [eax],al
  404460:	sub    BYTE PTR [eax+0x0],ch
  404463:	add    BYTE PTR [esi],al
  404465:	and    eax,0xa62826
  40446a:	add    BYTE PTR [edx],cl
  40446c:	and    eax,0x20091326
  404471:	test   BYTE PTR [ebx],al
  404473:	add    BYTE PTR [eax],al
  404475:	sub    BYTE PTR [eax+0x0],ah
  404478:	add    BYTE PTR [esi],al
  40447a:	adc    edx,DWORD PTR [esi]
  40447c:	jae    0x404429
  40447e:	add    BYTE PTR [eax],al
  404480:	or     dl,BYTE PTR [ebx]
  404482:	adc    ah,BYTE PTR [eax]
  404484:	mov    BYTE PTR [ebx],al
  404486:	add    BYTE PTR [eax],al
  404488:	sub    BYTE PTR [eax+0x0],ah
  40448b:	add    BYTE PTR [esi],al
  40448d:	adc    edx,DWORD PTR [esi]
  40448f:	adc    DWORD PTR [edx],edx
  404491:	adc    DWORD PTR ds:0xac6f0911,eax
  404497:	add    BYTE PTR [eax],al
  404499:	or     al,BYTE PTR [eax]
  40449b:	and    BYTE PTR [ebx+eax*1+0x60280000],cl
  4044a2:	add    BYTE PTR [eax],al
  4044a4:	push   es
  4044a5:	adc    edx,DWORD PTR [esi]
  4044a7:	and    BYTE PTR [edi+eax*1+0x0],bh
  4044ab:	add    BYTE PTR [eax],ch
  4044ad:	push   0x25060000
  4044b2:	and    BYTE PTR es:[ebp+0x28000007],cl
  4044b9:	push   0x25060000
  4044be:	sub    BYTE PTR es:[ecx+0x250a0000],bh
  4044c5:	es es add ch,bl
  4044c9:	add    DWORD PTR [bx+si],eax
  4044cc:	add    BYTE PTR [ecx],dl
  4044ce:	adc    eax,0x15110d2b
  4044d3:	and    BYTE PTR [eax+0x28000003],dl
  4044d9:	pusha  
  4044da:	add    BYTE PTR [eax],al
  4044dc:	push   es
  4044dd:	pop    eax
  4044de:	and    BYTE PTR [ebx+eax*1+0x60280000],dl
  4044e5:	add    BYTE PTR [eax],al
  4044e7:	push   es
  4044e8:	adc    edx,DWORD PTR ds:0x3145
  4044ee:	add    BYTE PTR [eax],al
  4044f0:	add    BYTE PTR [eax],al
  4044f2:	add    BYTE PTR [esi-0x7],cl
  4044f5:	(bad)  
  4044f6:	call   FWORD PTR [edi-0x7]
  4044f9:	(bad)  
  4044fa:	(bad)  
  4044fb:	jnp    0x4044f6
  4044fd:	(bad)  
  4044fe:	dec    DWORD PTR [ebp-0x39000007]
  404504:	stc    
  404505:	(bad)  
  404506:	jmp    edx
  404508:	stc    
  404509:	(bad)  
  40450a:	push   edi
  40450c:	stc    
  40450d:	(bad)  
  40450e:	jmp    FWORD PTR [edi-0x6]
  404511:	(bad)  
  404512:	call   DWORD PTR [ecx-0x1b000006]
  404518:	cli    
  404519:	(bad)  
  40451a:	(bad)  
  40451b:	stc    
  40451c:	cli    
  40451d:	(bad)  
  40451e:	(bad)  
  40451f:	cli    
  404520:	cli    
  404521:	(bad)  
  404522:	(bad)  
  404523:	(bad)  
  404524:	cli    
  404525:	(bad)  
  404526:	dec    DWORD PTR [ebx+edi*8]
  404529:	(bad)  
  40452a:	jmp    DWORD PTR [ecx]
  40452c:	sti    
  40452d:	(bad)  
  40452e:	jmp    DWORD PTR [ebx-0x5]
  404531:	(bad)  
  404532:	push   DWORD PTR [edi-0x5]
  404535:	(bad)  
  404536:	call   DWORD PTR [ebx+edi*8-0x4530001]
  40453d:	(bad)  
  40453e:	dec    DWORD PTR [edi-0x4]
  404541:	(bad)  
  404542:	jmp    FWORD PTR [ecx-0x4]
  404545:	(bad)  
  404546:	(bad)  
  404547:	jl     0x404545
  404549:	(bad)  
  40454a:	call   DWORD PTR [esp+edi*8-0x3510001]
  404551:	(bad)  
  404552:	inc    edi
  404554:	cld    
  404555:	(bad)  
  404556:	jmp    ecx
  404558:	cld    
  404559:	(bad)  
  40455a:	(bad)  
  40455b:	stc    
  40455c:	cld    
  40455d:	(bad)  
  40455e:	dec    DWORD PTR [edi*8-0x2db0001]
  404565:	(bad)  
  404566:	push   DWORD PTR [edi]
  404568:	std    
  404569:	(bad)  
  40456a:	dec    DWORD PTR [edx-0x3]
  40456d:	(bad)  
  40456e:	jmp    FWORD PTR [eax-0x3]
  404571:	(bad)  
  404572:	dec    DWORD PTR [eax-0x57000003]
  404578:	std    
  404579:	(bad)  
  40457a:	inc    esi
  40457c:	std    
  40457d:	(bad)  
  40457e:	jmp    esp
  404580:	std    
  404581:	(bad)  
  404582:	inc    DWORD PTR [edx]
  404584:	(bad)  
  404585:	(bad)  
  404586:	call   FWORD PTR [eax]
  404588:	(bad)  
  404589:	(bad)  
  40458a:	jmp    FWORD PTR [esi+edi*8]
  40458d:	(bad)  
  40458e:	dec    DWORD PTR [edx-0x2]
  404591:	(bad)  
  404592:	call   FWORD PTR [esi-0x2]
  404595:	(bad)  
  404596:	push   DWORD PTR [ecx-0x2]
  404599:	(bad)  
  40459a:	dec    DWORD PTR [ebx-0x42000002]
  4045a0:	(bad)  
  4045a1:	(bad)  
  4045a2:	call   eax
  4045a4:	(bad)  
  4045a5:	(bad)  
  4045a6:	(bad)  
  4045a7:	call   0x154045aa
  4045ac:	(bad)  
  4045ad:	(bad)  
  4045ae:	call   DWORD PTR ds:0xdeffffff
  4045b4:	ins    DWORD PTR es:[edi],dx
  4045b5:	adc    DWORD PTR [esi],edx
  4045b7:	adc    edx,DWORD PTR ds:0x98201411
  4045bd:	add    eax,DWORD PTR [eax]
  4045bf:	add    BYTE PTR [eax],ch
  4045c1:	pusha  
  4045c2:	add    BYTE PTR [eax],al
  4045c4:	push   es
  4045c5:	xor    BYTE PTR [esi],dl
  4045c7:	sbb    al,0x45
  4045c9:	add    DWORD PTR [eax],eax
  4045cb:	add    BYTE PTR [eax],al
  4045cd:	idiv   bh
  4045cf:	(bad)  
  4045d0:	jmp    DWORD PTR [eax]
  4045d2:	pushf  
  4045d3:	add    eax,DWORD PTR [eax]
  4045d5:	add    BYTE PTR [eax],ch
  4045d7:	pusha  
  4045d8:	add    BYTE PTR [eax],al
  4045da:	push   es
  4045db:	sub    eax,DWORD PTR [edx]
  4045dd:	adc    DWORD PTR [eax*2+0x2],edx
  4045e4:	add    BYTE PTR [eax],al
  4045e6:	add    BYTE PTR [eax],al
  4045e8:	in     eax,0xfe
  4045ea:	(bad)  
  4045eb:	(bad)  
  4045ec:	fidiv  WORD PTR [esi*2+0x100004b]
  4045f3:	adc    al,0xfe
  4045f5:	add    edx,DWORD PTR [ecx]
  4045f7:	adc    al,0x20
  4045f9:	mov    al,ds:0x28000003
  4045fe:	pusha  
  4045ff:	add    BYTE PTR [eax],al
  404601:	push   es
  404602:	inc    BYTE PTR [ebx]
  404604:	pop    edi
  404605:	adc    DWORD PTR ds:0x3a420,edx
  40460b:	add    BYTE PTR [eax],ch
  40460d:	pusha  
  40460e:	add    BYTE PTR [eax],al
  404610:	push   es
  404611:	inc    BYTE PTR [ecx]
  404613:	pop    edi
  404614:	(bad)  
  404615:	adc    DWORD PTR [ebx+ecx*2+0x0],esi
  404619:	add    BYTE PTR [ecx],al
  40461b:	sub    BYTE PTR [edi+0x0],dl
  40461e:	add    BYTE PTR [edx],cl
  404620:	ficom  WORD PTR [ebx+0x3a820]
  404626:	add    BYTE PTR [eax],ch
  404628:	pusha  
  404629:	add    BYTE PTR [eax],al
  40462b:	push   es
  40462c:	sub    BYTE PTR [edx+0x250a0000],bh
  404632:	es jp  0x404635
  404635:	adc    DWORD PTR ds:0x5b28052c,edx
  40463b:	add    BYTE PTR [eax],al
  40463d:	or     ch,BYTE PTR [edx]
  40463f:	add    BYTE PTR [ecx+0x1c],al
  404642:	add    BYTE PTR [eax],al
  404644:	add    DWORD PTR [eax],eax
  404646:	add    BYTE PTR [eax],al
  404648:	add    DWORD PTR [eax],eax
  40464a:	add    BYTE PTR [eax],al
  40464c:	in     eax,dx
  40464d:	push   es
  40464e:	add    BYTE PTR [eax],al
  404650:	push   ss
  404651:	pop    es
  404652:	add    BYTE PTR [eax],al
  404654:	or     al,0x0
  404656:	add    BYTE PTR [eax],al
  404658:	out    dx,al
  404659:	push   es
  40465a:	add    BYTE PTR [eax],al
  40465c:	sbb    esi,DWORD PTR [eax]
  40465e:	add    al,0x0
  404660:	push   0x1b000001
  404665:	add    BYTE PTR [eax],al
  404667:	adc    DWORD PTR [eax],eax
  404669:	sub    BYTE PTR [ebx+0x0],bl
  40466c:	add    BYTE PTR [edx],cl
  40466e:	and    BYTE PTR [ebx+eax*1+0x60280000],ch
  404675:	add    BYTE PTR [eax],al
  404677:	push   es
  404678:	adc    eax,DWORD PTR [eax+eiz*1]
  40467b:	mov    al,0x3
  40467d:	add    BYTE PTR [eax],al
  40467f:	sub    BYTE PTR [eax+0x0],ah
  404682:	add    BYTE PTR [esi],al
  404684:	adc    eax,DWORD PTR [esi]
  404686:	and    BYTE PTR [edx+0x28000007],ah
  40468c:	push   0x25060000
  404691:	or     esp,DWORD PTR es:[eax]
  404694:	mov    ah,0x3
  404696:	add    BYTE PTR [eax],al
  404698:	sub    BYTE PTR [eax+0x0],ah
  40469b:	add    BYTE PTR [esi],al
  40469d:	adc    eax,DWORD PTR [esi]
  40469f:	and    BYTE PTR [eax+0x28000003],bh
  4046a5:	pusha  
  4046a6:	add    BYTE PTR [eax],al
  4046a8:	push   es
  4046a9:	sub    BYTE PTR [ebp+0x250a0000],ah
  4046af:	and    BYTE PTR es:[ebx+0x5],dh
  4046b3:	add    BYTE PTR [eax],al
  4046b5:	sub    BYTE PTR [eax+0x0],ch
  4046b8:	add    BYTE PTR [esi],al
  4046ba:	and    eax,0xa62826
  4046bf:	add    BYTE PTR [edx],cl
  4046c1:	and    eax,0xbc200c26
  4046c6:	add    eax,DWORD PTR [eax]
  4046c8:	add    BYTE PTR [eax],ch
  4046ca:	pusha  
  4046cb:	add    BYTE PTR [eax],al
  4046cd:	push   es
  4046ce:	adc    eax,DWORD PTR [esi]
  4046d0:	jae    0x40467d
  4046d2:	add    BYTE PTR [eax],al
  4046d4:	or     cl,BYTE PTR ds:0x3c020
  4046da:	add    BYTE PTR [eax],ch
  4046dc:	pusha  
  4046dd:	add    BYTE PTR [eax],al
  4046df:	push   es
  4046e0:	adc    eax,DWORD PTR [esi]
  4046e2:	or     DWORD PTR [edi],eax
  4046e4:	or     BYTE PTR [edi-0x54],ch
  4046e7:	add    BYTE PTR [eax],al
  4046e9:	or     al,BYTE PTR [eax]
  4046eb:	(bad)  
  4046ed:	add    BYTE PTR [eax],al
  4046ef:	add    BYTE PTR [ecx],dl
  4046f1:	add    eax,0x5110d2b
  4046f6:	and    ah,al
  4046f8:	add    eax,DWORD PTR [eax]
  4046fa:	add    BYTE PTR [eax],ch
  4046fc:	pusha  
  4046fd:	add    BYTE PTR [eax],al
  4046ff:	push   es
  404700:	pop    eax
  404701:	and    al,cl
  404703:	add    eax,DWORD PTR [eax]
  404705:	add    BYTE PTR [eax],ch
  404707:	pusha  
  404708:	add    BYTE PTR [eax],al
  40470a:	push   es
  40470b:	adc    eax,DWORD PTR ds:0x745
  404711:	add    BYTE PTR [eax],al
  404713:	add    BYTE PTR [eax],al
  404715:	add    BYTE PTR [ebx],bh
  404717:	(bad)  
  404718:	(bad)  
  404719:	dec    DWORD PTR [edi+edi*8-0x1]
  40471d:	jmp    DWORD PTR [ebp-0x1]
  404720:	(bad)  
  404721:	call   DWORD PTR [esi-0x57000001]
  404727:	(bad)  
  404728:	(bad)  
  404729:	(bad)  
  40472a:	mov    ebp,0xddffffff
  40472f:	jbe    0x404731
  404731:	add    BYTE PTR [eax],al
  404733:	adc    DWORD PTR [esi],eax
  404735:	adc    eax,DWORD PTR ds:0xcc200411
  40473b:	add    eax,DWORD PTR [eax]
  40473d:	add    BYTE PTR [eax],ch
  40473f:	pusha  
  404740:	add    BYTE PTR [eax],al
  404742:	push   es
  404743:	xor    BYTE PTR [edi],bl
  404745:	sbb    eax,0x145
  40474a:	add    dh,dh
  40474c:	(bad)  
  40474d:	(bad)  
  40474e:	call   DWORD PTR [edi]
  404750:	sub    eax,0x45d006
  404755:	add    BYTE PTR [esi],al
  404757:	es and al,dl
  40475a:	add    eax,DWORD PTR [eax]
  40475c:	add    BYTE PTR [eax],ch
  40475e:	pusha  
  40475f:	add    BYTE PTR [eax],al
  404761:	push   es
  404762:	sub    eax,DWORD PTR [edx]
  404764:	adc    DWORD PTR [eax*2+0x2],eax
  40476b:	add    BYTE PTR [eax],al
  40476d:	add    BYTE PTR [eax],al
  40476f:	cmp    edi,0x34deffff
  404775:	jne    0x4047c2
  404777:	add    BYTE PTR [eax],al
  404779:	add    DWORD PTR [esi+edi*8],edx
  40477c:	add    edx,DWORD PTR [ecx]
  40477e:	add    al,0x20
  404780:	aam    0x3
  404782:	add    BYTE PTR [eax],al
  404784:	sub    BYTE PTR [eax+0x0],ah
  404787:	add    BYTE PTR [esi],al
  404789:	inc    BYTE PTR [ebx]
  40478b:	pop    edi
  40478c:	adc    DWORD PTR ds:0x3d820,eax
  404792:	add    BYTE PTR [eax],ch
  404794:	pusha  
  404795:	add    BYTE PTR [eax],al
  404797:	push   es
  404798:	inc    BYTE PTR [ecx]
  40479a:	pop    edi
  40479b:	(bad)  
  40479c:	adc    DWORD PTR [ebx+ecx*2+0x0],esi
  4047a0:	add    BYTE PTR [ecx],al
  4047a2:	sub    BYTE PTR [edi+0x0],dl
  4047a5:	add    BYTE PTR [edx],cl
  4047a7:	fimul  WORD PTR [edx+0x3dc20]
  4047ad:	add    BYTE PTR [eax],ch
  4047af:	pusha  
  4047b0:	add    BYTE PTR [eax],al
  4047b2:	push   es
  4047b3:	sub    BYTE PTR [edx+0x250a0000],bh
  4047b9:	es jp  0x4047c2
  4047bc:	adc    DWORD PTR ds:0x451d0f2c,eax
  4047c2:	add    DWORD PTR [eax],eax
  4047c4:	add    BYTE PTR [eax],al
  4047c6:	idiv   bh
  4047c8:	(bad)  
  4047c9:	jmp    FWORD PTR [eax]
  4047cb:	pop    ebx
  4047cc:	add    BYTE PTR [eax],al
  4047ce:	or     ch,BYTE PTR [edx]
  4047d0:	inc    ecx
  4047d1:	sbb    al,0x0
  4047d3:	add    BYTE PTR [ecx],al
  4047d5:	add    BYTE PTR [eax],al
  4047d7:	add    BYTE PTR [ecx],al
  4047d9:	add    BYTE PTR [eax],al
  4047db:	add    BYTE PTR [ecx+eax*1],cl
  4047de:	add    BYTE PTR [eax],al
  4047e0:	xor    eax,0xc000001
  4047e5:	add    BYTE PTR [eax],al
  4047e7:	add    BYTE PTR ds:0x1b000001,cl
  4047ed:	xor    BYTE PTR [eax+eax*1],al
  4047f0:	mov    bl,0x1
  4047f2:	add    BYTE PTR [eax],al
  4047f4:	sbb    al,0x0
  4047f6:	add    BYTE PTR [ecx],dl
  4047f8:	add    BYTE PTR [eax],ch
  4047fa:	pop    ebx
  4047fb:	add    BYTE PTR [eax],al
  4047fd:	or     ah,BYTE PTR [eax]
  4047ff:	loopne 0x404804
  404801:	add    BYTE PTR [eax],al
  404803:	sub    BYTE PTR [eax+0x0],ah
  404806:	add    BYTE PTR [esi],al
  404808:	adc    eax,DWORD PTR [eax+eiz*1]
  40480b:	in     al,0x3
  40480d:	add    BYTE PTR [eax],al
  40480f:	sub    BYTE PTR [eax+0x0],ah
  404812:	add    BYTE PTR [esi],al
  404814:	adc    eax,DWORD PTR [esi]
  404816:	and    ch,dh
  404818:	pop    es
  404819:	add    BYTE PTR [eax],al
  40481b:	sub    BYTE PTR [eax+0x0],ch
  40481e:	add    BYTE PTR [esi],al
  404820:	and    eax,0xbb2826
  404825:	add    BYTE PTR [edx],cl
  404827:	and    eax,0x3e82026
  40482c:	add    BYTE PTR [eax],al
  40482e:	sub    BYTE PTR [eax+0x0],ah
  404831:	add    BYTE PTR [esi],al
  404833:	inc    BYTE PTR [ecx]
  404835:	adc    eax,DWORD PTR [edi]
  404837:	adc    DWORD PTR [edi],eax
  404839:	sub    al,0x31
  40483b:	sbb    DWORD PTR [ebp+0x1],eax
  40483e:	add    BYTE PTR [eax],al
  404840:	add    dh,dh
  404842:	(bad)  
  404843:	(bad)  
  404844:	call   DWORD PTR [edi]
  404846:	sub    eax,0x46d006
  40484b:	add    BYTE PTR [esi],al
  40484d:	es and ah,ch
  404850:	add    eax,DWORD PTR [eax]
  404852:	add    BYTE PTR [eax],ch
  404854:	pusha  
  404855:	add    BYTE PTR [eax],al
  404857:	push   es
  404858:	adc    eax,DWORD PTR [esi]
  40485a:	and    ch,dh
  40485c:	pop    es
  40485d:	add    BYTE PTR [eax],al
  40485f:	sub    BYTE PTR [eax+0x0],ch
  404862:	add    BYTE PTR [esi],al
  404864:	and    eax,0xbc2826
  404869:	add    BYTE PTR [edx],cl
  40486b:	add    BYTE PTR es:[eax],ah
  40486e:	lock add eax,DWORD PTR [eax]
  404871:	add    BYTE PTR [eax],ch
  404873:	pusha  
  404874:	add    BYTE PTR [eax],al
  404876:	push   es
  404877:	adc    eax,DWORD PTR [esi]
  404879:	and    BYTE PTR [edx+0x28000007],ah
  40487f:	push   0x25060000
  404884:	or     esp,DWORD PTR es:[eax]
  404887:	hlt    
  404888:	add    eax,DWORD PTR [eax]
  40488a:	add    BYTE PTR [eax],ch
  40488c:	pusha  
  40488d:	add    BYTE PTR [eax],al
  40488f:	push   es
  404890:	adc    eax,DWORD PTR [esi]
  404892:	and    BYTE PTR [esi+eax*1],dh
  404895:	add    BYTE PTR [eax],al
  404897:	sub    BYTE PTR [eax+0x0],ch
  40489a:	add    BYTE PTR [esi],al
  40489c:	and    eax,0xf8200c26
  4048a1:	add    eax,DWORD PTR [eax]
  4048a3:	add    BYTE PTR [eax],ch
  4048a5:	pusha  
  4048a6:	add    BYTE PTR [eax],al
  4048a8:	push   es
  4048a9:	adc    eax,DWORD PTR [esi]
  4048ab:	jae    0x404858
  4048ad:	add    BYTE PTR [eax],al
  4048af:	or     cl,BYTE PTR ds:0x3fc20
  4048b5:	add    BYTE PTR [eax],ch
  4048b7:	pusha  
  4048b8:	add    BYTE PTR [eax],al
  4048ba:	push   es
  4048bb:	adc    eax,DWORD PTR [esi]
  4048bd:	or     DWORD PTR [edi],eax
  4048bf:	or     BYTE PTR [edi-0x54],ch
  4048c2:	add    BYTE PTR [eax],al
  4048c4:	or     al,BYTE PTR [eax]
  4048c6:	(bad)  
  4048c8:	add    BYTE PTR [eax],al
  4048ca:	add    BYTE PTR [ecx],dl
  4048cc:	add    eax,0x5110d2b
  4048d1:	and    BYTE PTR [eax],al
  4048d3:	add    al,0x0
  4048d5:	add    BYTE PTR [eax],ch
  4048d7:	pusha  
  4048d8:	add    BYTE PTR [eax],al
  4048da:	push   es
  4048db:	pop    eax
  4048dc:	and    BYTE PTR [esp+eax*1],al
  4048df:	add    BYTE PTR [eax],al
  4048e1:	sub    BYTE PTR [eax+0x0],ah
  4048e4:	add    BYTE PTR [esi],al
  4048e6:	adc    eax,DWORD PTR ds:0xa45
  4048ec:	add    BYTE PTR [eax],al
  4048ee:	add    BYTE PTR [eax],al
  4048f0:	add    ah,ah
  4048f2:	(bad)  
  4048f3:	(bad)  
  4048f4:	push   ebp
  4048f6:	(bad)  
  4048f7:	(bad)  
  4048f8:	(bad)  
  4048f9:	cmp    edi,edi
  4048fb:	(bad)  
  4048fc:	call   DWORD PTR [edi-0x1]
  4048ff:	(bad)  
  404900:	call   FWORD PTR [eax-0x1]
  404903:	(bad)  
  404904:	push   DWORD PTR [ecx-0x1]
  404907:	(bad)  
  404908:	dec    DWORD PTR [edx-0x63000001]
  40490e:	(bad)  
  40490f:	(bad)  
  404910:	push   DWORD PTR [ecx-0x21000001]
  404916:	ins    DWORD PTR es:[edi],dx
  404917:	adc    DWORD PTR [esi],eax
  404919:	adc    eax,DWORD PTR ds:0x8200411
  40491f:	add    al,0x0
  404921:	add    BYTE PTR [eax],ch
  404923:	pusha  
  404924:	add    BYTE PTR [eax],al
  404926:	push   es
  404927:	xor    BYTE PTR [esi],dl
  404929:	sbb    DWORD PTR [ebp+0x1],eax
  40492c:	add    BYTE PTR [eax],al
  40492e:	add    dh,dh
  404930:	(bad)  
  404931:	(bad)  
  404932:	jmp    DWORD PTR [eax]
  404934:	or     al,0x4
  404936:	add    BYTE PTR [eax],al
  404938:	sub    BYTE PTR [eax+0x0],ah
  40493b:	add    BYTE PTR [esi],al
  40493d:	sub    eax,DWORD PTR [edx]
  40493f:	adc    DWORD PTR [eax*2+0x2],eax
  404946:	add    BYTE PTR [eax],al
  404948:	add    BYTE PTR [eax],al
  40494a:	cmp    edi,0x34deffff
  404950:	jne    0x40499d
  404952:	add    BYTE PTR [eax],al
  404954:	add    DWORD PTR [esi+edi*8],edx
  404957:	add    edx,DWORD PTR [ecx]
  404959:	add    al,0x20
  40495b:	adc    BYTE PTR [eax+eax*1],al
  40495e:	add    BYTE PTR [eax],ch
  404960:	pusha  
  404961:	add    BYTE PTR [eax],al
  404963:	push   es
  404964:	inc    BYTE PTR [ebx]
  404966:	pop    edi
  404967:	adc    DWORD PTR ds:0x41420,eax
  40496d:	add    BYTE PTR [eax],ch
  40496f:	pusha  
  404970:	add    BYTE PTR [eax],al
  404972:	push   es
  404973:	inc    BYTE PTR [ecx]
  404975:	pop    edi
  404976:	(bad)  
  404977:	adc    DWORD PTR [ebx+ecx*2+0x0],esi
  40497b:	add    BYTE PTR [ecx],al
  40497d:	sub    BYTE PTR [edi+0x0],dl
  404980:	add    BYTE PTR [edx],cl
  404982:	ficom  WORD PTR [ebx+0x41820]
  404988:	add    BYTE PTR [eax],ch
  40498a:	pusha  
  40498b:	add    BYTE PTR [eax],al
  40498d:	push   es
  40498e:	sub    BYTE PTR [edx+0x250a0000],bh
  404994:	es jp  0x40499d
  404997:	adc    DWORD PTR ds:0x451c0f2c,eax
  40499d:	add    DWORD PTR [eax],eax
  40499f:	add    BYTE PTR [eax],al
  4049a1:	idiv   bh
  4049a3:	(bad)  
  4049a4:	jmp    FWORD PTR [eax]
  4049a6:	pop    ebx
  4049a7:	add    BYTE PTR [eax],al
  4049a9:	or     ch,BYTE PTR [edx]
  4049ab:	add    BYTE PTR [ecx+0x1c],al
  4049ae:	add    BYTE PTR [eax],al
  4049b0:	add    DWORD PTR [eax],eax
  4049b2:	add    BYTE PTR [eax],al
  4049b4:	add    DWORD PTR [eax],eax
  4049b6:	add    BYTE PTR [eax],al
  4049b8:	push   edi
  4049b9:	add    DWORD PTR [eax],eax
  4049bb:	add    BYTE PTR [eax+0xc000001],al
  4049c1:	add    BYTE PTR [eax],al
  4049c3:	add    BYTE PTR [eax+0x1],bl
  4049c6:	add    BYTE PTR [eax],al
  4049c8:	sbb    esi,DWORD PTR [eax]
  4049ca:	or     BYTE PTR [eax],al
  4049cc:	pop    esi
  4049cd:	add    DWORD PTR [eax],eax
  4049cf:	add    BYTE PTR ds:0x110000,bl
  4049d5:	sub    BYTE PTR [ebx+0x0],bl
  4049d8:	add    BYTE PTR [edx],cl
  4049da:	and    BYTE PTR [esp+eax*1],bl
  4049dd:	add    BYTE PTR [eax],al
  4049df:	sub    BYTE PTR [eax+0x0],ah
  4049e2:	add    BYTE PTR [esi],al
  4049e4:	or     eax,0x42020
  4049e9:	add    BYTE PTR [eax],ch
  4049eb:	pusha  
  4049ec:	add    BYTE PTR [eax],al
  4049ee:	push   es
  4049ef:	adc    eax,DWORD PTR ds:0xcd014
  4049f5:	add    BYTE PTR [edx],al
  4049f7:	sub    BYTE PTR [eax+0x0],dl
  4049fa:	add    BYTE PTR [edx],cl
  4049fc:	and    BYTE PTR [eax],dl
  4049fe:	or     BYTE PTR [eax],al
  404a00:	add    BYTE PTR [eax],ch
  404a02:	push   0x20060000
  404a07:	and    al,0x4
  404a09:	add    BYTE PTR [eax],al
  404a0b:	sub    BYTE PTR [eax+0x0],ah
  404a0e:	add    BYTE PTR [esi],al
  404a10:	lea    ebp,[ecx+0x0]
  404a13:	add    BYTE PTR [ecx],al
  404a15:	or     al,0x8
  404a17:	and    BYTE PTR [eax],ch
  404a19:	add    al,0x0
  404a1b:	add    BYTE PTR [eax],ch
  404a1d:	pusha  
  404a1e:	add    BYTE PTR [eax],al
  404a20:	push   es
  404a21:	add    ch,BYTE PTR [edi+0x50]
  404a24:	add    BYTE PTR [eax],al
  404a26:	push   es
  404a27:	and    eax,0x292826
  404a2c:	add    BYTE PTR [edx],cl
  404a2e:	and    eax,0x800a226
  404a33:	adc    al,0x14
  404a35:	adc    al,0x28
  404a37:	mov    ebp,0x250a0000
  404a3c:	sub    BYTE PTR es:[ecx+0x250a0000],ch
  404a43:	or     esp,DWORD PTR es:[eax]
  404a46:	sub    al,0x4
  404a48:	add    BYTE PTR [eax],al
  404a4a:	sub    BYTE PTR [eax+0x0],ah
  404a4d:	add    BYTE PTR [esi],al
  404a4f:	adc    eax,DWORD PTR ds:0xc5dd0a07
  404a55:	add    BYTE PTR [eax],al
  404a57:	add    ch,bl
  404a59:	rol    BYTE PTR [eax],0x0
  404a5c:	add    BYTE PTR [ecx],dl
  404a5e:	add    al,0x2b
  404a60:	or     eax,0x30200411
  404a65:	add    al,0x0
  404a67:	add    BYTE PTR [eax],ch
  404a69:	pusha  
  404a6a:	add    BYTE PTR [eax],al
  404a6c:	push   es
  404a6d:	pop    eax
  404a6e:	and    BYTE PTR [esp+eax*1],dh
  404a71:	add    BYTE PTR [eax],al
  404a73:	sub    BYTE PTR [eax+0x0],ah
  404a76:	add    BYTE PTR [esi],al
  404a78:	adc    eax,DWORD PTR [eax*2+0x5]
  404a7f:	add    BYTE PTR [eax],al
  404a81:	add    BYTE PTR [eax],al
  404a83:	inc    edx
  404a84:	(bad)  
  404a85:	(bad)  
  404a86:	call   DWORD PTR [edx-0x1]
  404a89:	(bad)  
  404a8a:	push   DWORD PTR [edx-0x3a000001]
  404a90:	(bad)  
  404a91:	(bad)  
  404a92:	(bad)  
  404a93:	fnsave [ebx+0x0]
  404a96:	add    BYTE PTR [eax],al
  404a98:	adc    DWORD PTR ds:0x20090413,eax
  404a9e:	cmp    BYTE PTR [eax+eax*1],al
  404aa1:	add    BYTE PTR [eax],ch
  404aa3:	pusha  
  404aa4:	add    BYTE PTR [eax],al
  404aa6:	push   es
  404aa7:	xor    BYTE PTR [edi],bl
  404aa9:	sbb    al,BYTE PTR [ebp+0x1]
  404aac:	add    BYTE PTR [eax],al
  404aae:	add    dh,dh
  404ab0:	(bad)  
  404ab1:	(bad)  
  404ab2:	call   DWORD PTR [edi]
  404ab4:	sub    eax,0x47d006
  404ab9:	add    BYTE PTR [esi],al
  404abb:	and    BYTE PTR es:[esp+eax*1],bh
  404abf:	add    BYTE PTR [eax],al
  404ac1:	sub    BYTE PTR [eax+0x0],ah
  404ac4:	add    BYTE PTR [esi],al
  404ac6:	sub    eax,DWORD PTR [ecx]
  404ac8:	or     DWORD PTR [ebp+0x2],eax
  404acb:	add    BYTE PTR [eax],al
  404acd:	add    BYTE PTR [eax],al
  404acf:	add    BYTE PTR [eax],al
  404ad1:	add    BYTE PTR [ebx-0x21000001],cl
  404ad7:	xor    esi,DWORD PTR [ebp+0x4b]
  404ada:	add    BYTE PTR [eax],al
  404adc:	add    DWORD PTR [esi+edi*8],edx
  404adf:	add    ecx,DWORD PTR [ecx]
  404ae1:	and    BYTE PTR [eax+0x4],al
  404ae4:	add    BYTE PTR [eax],al
  404ae6:	sub    BYTE PTR [eax+0x0],ah
  404ae9:	add    BYTE PTR [esi],al
  404aeb:	inc    BYTE PTR [ebx]
  404aed:	pop    edi
  404aee:	adc    DWORD PTR [eax+eiz*1],eax
  404af1:	inc    esp
  404af2:	add    al,0x0
  404af4:	add    BYTE PTR [eax],ch
  404af6:	pusha  
  404af7:	add    BYTE PTR [eax],al
  404af9:	push   es
  404afa:	inc    BYTE PTR [ecx]
  404afc:	pop    edi
  404afd:	(bad)  
  404afe:	adc    DWORD PTR [ebx+ecx*2+0x0],esi
  404b02:	add    BYTE PTR [ecx],al
  404b04:	sub    BYTE PTR [edi+0x0],dl
  404b07:	add    BYTE PTR [edx],cl
  404b09:	fimul  WORD PTR [ebp+0x44820]
  404b0f:	add    BYTE PTR [eax],ch
  404b11:	pusha  
  404b12:	add    BYTE PTR [eax],al
  404b14:	push   es
  404b15:	sub    BYTE PTR [edx+0x250a0000],bh
  404b1b:	es jp  0x404b24
  404b1e:	adc    DWORD PTR [esp+ebp*1],eax
  404b21:	bndldx bnd0,[ebp+0x1]
  404b25:	add    BYTE PTR [eax],al
  404b27:	add    dh,dh
  404b29:	(bad)  
  404b2a:	(bad)  
  404b2b:	jmp    FWORD PTR [eax]
  404b2d:	pop    ebx
  404b2e:	add    BYTE PTR [eax],al
  404b30:	or     ch,BYTE PTR [edx]
  404b32:	add    BYTE PTR [eax],al
  404b34:	inc    ecx
  404b35:	sbb    al,0x0
  404b37:	add    BYTE PTR [ecx],al
  404b39:	add    BYTE PTR [eax],al
  404b3b:	add    BYTE PTR [ecx],al
  404b3d:	add    BYTE PTR [eax],al
  404b3f:	add    BYTE PTR [ebx],al
  404b41:	add    DWORD PTR [eax],eax
  404b43:	add    BYTE PTR [ebx],ch
  404b45:	add    DWORD PTR [eax],eax
  404b47:	add    BYTE PTR [eax+eax*1],cl
  404b4a:	add    BYTE PTR [eax],al
  404b4c:	add    al,0x1
  404b4e:	add    BYTE PTR [eax],al
  404b50:	sbb    esi,DWORD PTR [eax]
  404b52:	add    eax,0x18000
  404b57:	add    BYTE PTR [esi],bl
  404b59:	add    BYTE PTR [eax],al
  404b5b:	adc    DWORD PTR [eax],eax
  404b5d:	sub    BYTE PTR [ebx+0x0],bl
  404b60:	add    BYTE PTR [edx],cl
  404b62:	and    BYTE PTR [esp+eax*1+0x0],cl
  404b66:	add    BYTE PTR [eax],ch
  404b68:	pusha  
  404b69:	add    BYTE PTR [eax],al
  404b6b:	push   es
  404b6c:	adc    eax,DWORD PTR ds:0x45020
  404b72:	add    BYTE PTR [eax],ch
  404b74:	pusha  
  404b75:	add    BYTE PTR [eax],al
  404b77:	push   es
  404b78:	adc    eax,DWORD PTR [edi]
  404b7a:	jae    0x404b3a
  404b7c:	add    BYTE PTR [eax],al
  404b7e:	or     cl,BYTE PTR ds:0x45420
  404b84:	add    BYTE PTR [eax],ch
  404b86:	pusha  
  404b87:	add    BYTE PTR [eax],al
  404b89:	push   es
  404b8a:	adc    eax,DWORD PTR [edi]
  404b8c:	or     DWORD PTR [eax],esp
  404b8e:	pop    eax
  404b8f:	add    al,0x0
  404b91:	add    BYTE PTR [eax],ch
  404b93:	pusha  
  404b94:	add    BYTE PTR [eax],al
  404b96:	push   es
  404b97:	and    BYTE PTR [esp+eax*1+0x0],bl
  404b9b:	add    BYTE PTR [eax],ch
  404b9d:	pusha  
  404b9e:	add    BYTE PTR [eax],al
  404ba0:	push   es
  404ba1:	outs   dx,DWORD PTR ds:[esi]
  404ba2:	mov    edi,0x250a0000
  404ba7:	adc    eax,DWORD PTR es:[eax+eiz*1]
  404bab:	pusha  
  404bac:	add    al,0x0
  404bae:	add    BYTE PTR [eax],ch
  404bb0:	pusha  
  404bb1:	add    BYTE PTR [eax],al
  404bb3:	push   es
  404bb4:	adc    eax,DWORD PTR [edi]
  404bb6:	jae    0x404b63
  404bb8:	add    BYTE PTR [eax],al
  404bba:	or     cl,BYTE PTR [eax+eiz*1]
  404bbd:	fs add al,0x0
  404bc0:	add    BYTE PTR [eax],ch
  404bc2:	pusha  
  404bc3:	add    BYTE PTR [eax],al
  404bc5:	push   es
  404bc6:	adc    eax,DWORD PTR [edi]
  404bc8:	or     BYTE PTR [eax],ah
  404bca:	das    
  404bcb:	or     BYTE PTR [eax],al
  404bcd:	add    BYTE PTR [eax],ch
  404bcf:	push   0x25060000
  404bd4:	adc    DWORD PTR es:[eax+ebp*1],eax
  404bd8:	rol    BYTE PTR [eax],0x0
  404bdb:	or     ah,BYTE PTR ds:0xa62826
  404be1:	add    BYTE PTR [edx],cl
  404be3:	and    eax,0xc16f26
  404be8:	add    BYTE PTR [edx],cl
  404bea:	and    eax,0x68200a26
  404bef:	add    al,0x0
  404bf1:	add    BYTE PTR [eax],ch
  404bf3:	pusha  
  404bf4:	add    BYTE PTR [eax],al
  404bf6:	push   es
  404bf7:	adc    eax,DWORD PTR [edi]
  404bf9:	push   es
  404bfa:	or     ebx,ebp
  404bfc:	mov    esi,0xdd000000
  404c01:	mov    ecx,0x11000000
  404c06:	push   es
  404c07:	sub    ecx,DWORD PTR ds:0x6c200611
  404c0d:	add    al,0x0
  404c0f:	add    BYTE PTR [eax],ch
  404c11:	pusha  
  404c12:	add    BYTE PTR [eax],al
  404c14:	push   es
  404c15:	pop    eax
  404c16:	and    BYTE PTR [eax+0x4],dh
  404c19:	add    BYTE PTR [eax],al
  404c1b:	sub    BYTE PTR [eax+0x0],ah
  404c1e:	add    BYTE PTR [esi],al
  404c20:	adc    eax,DWORD PTR [esi]
  404c22:	inc    ebp
  404c23:	or     BYTE PTR [eax],al
  404c25:	add    BYTE PTR [eax],al
  404c27:	add    BYTE PTR [eax],al
  404c29:	add    BYTE PTR [eax],al
  404c2b:	push   ss
  404c2c:	(bad)  
  404c2d:	(bad)  
  404c2e:	jmp    DWORD PTR [edi]
  404c30:	(bad)  
  404c31:	(bad)  
  404c32:	(bad)  
  404c33:	cmp    edi,edi
  404c35:	(bad)  
  404c36:	jmp    DWORD PTR [ebx-0x1]
  404c39:	(bad)  
  404c3a:	push   DWORD PTR [ebp-0x1]
  404c3d:	(bad)  
  404c3e:	jmp    DWORD PTR [esi-0x46000001]
  404c44:	(bad)  
  404c45:	(bad)  
  404c46:	(bad)  
  404c47:	fisub  WORD PTR [ebx+0x11]
  404c4a:	pop    es
  404c4b:	adc    eax,DWORD PTR [esi]
  404c4d:	adc    DWORD PTR ds:0x47420,eax
  404c53:	add    BYTE PTR [eax],ch
  404c55:	pusha  
  404c56:	add    BYTE PTR [eax],al
  404c58:	push   es
  404c59:	xor    BYTE PTR [eax+eiz*1],cl
  404c5c:	js     0x404c62
  404c5e:	add    BYTE PTR [eax],al
  404c60:	sub    BYTE PTR [eax+0x0],ah
  404c63:	add    BYTE PTR [esi],al
  404c65:	sub    eax,DWORD PTR [edx]
  404c67:	adc    DWORD PTR ds:0x245,eax
  404c6d:	add    BYTE PTR [eax],al
  404c6f:	add    BYTE PTR [eax],al
  404c71:	add    BYTE PTR [ebx-0x21000001],dl
  404c77:	xor    al,0x75
  404c79:	dec    ebx
  404c7a:	add    BYTE PTR [eax],al
  404c7c:	add    DWORD PTR [esi+edi*8],edx
  404c7f:	add    edx,DWORD PTR [ecx]
  404c81:	add    eax,0x47c20
  404c86:	add    BYTE PTR [eax],ch
  404c88:	pusha  
  404c89:	add    BYTE PTR [eax],al
  404c8b:	push   es
  404c8c:	inc    BYTE PTR [ebx]
  404c8e:	pop    edi
  404c8f:	adc    DWORD PTR [esi],eax
  404c91:	and    BYTE PTR [eax+0x28000004],al
  404c97:	pusha  
  404c98:	add    BYTE PTR [eax],al
  404c9a:	push   es
  404c9b:	inc    BYTE PTR [ecx]
  404c9d:	pop    edi
  404c9e:	(bad)  
  404c9f:	adc    DWORD PTR [ebx+ecx*2+0x0],esi
  404ca3:	add    BYTE PTR [ecx],al
  404ca5:	sub    BYTE PTR [edi+0x0],dl
  404ca8:	add    BYTE PTR [edx],cl
  404caa:	ficomp WORD PTR [ebp+0x48420]
  404cb0:	add    BYTE PTR [eax],ch
  404cb2:	pusha  
  404cb3:	add    BYTE PTR [eax],al
  404cb5:	push   es
  404cb6:	sub    BYTE PTR [edx+0x250a0000],bh
  404cbc:	es jp  0x404cc6
  404cbf:	adc    DWORD PTR [esi],eax
  404cc1:	sub    al,0x18
  404cc3:	sbb    eax,DWORD PTR [ebp+0x1]
  404cc6:	add    BYTE PTR [eax],al
  404cc8:	add    dh,dh
  404cca:	(bad)  
  404ccb:	(bad)  
  404ccc:	call   DWORD PTR [edi]
  404cce:	sub    eax,0x48d006
  404cd3:	add    BYTE PTR [esi],al
  404cd5:	sub    BYTE PTR es:[ebx+0x0],bl
  404cd9:	add    BYTE PTR [edx],cl
  404cdb:	sub    al,BYTE PTR [ecx+0x1c]
  404cde:	add    BYTE PTR [eax],al
  404ce0:	add    DWORD PTR [eax],eax
  404ce2:	add    BYTE PTR [eax],al
  404ce4:	add    DWORD PTR [eax],eax
  404ce6:	add    BYTE PTR [eax],al
  404ce8:	sbb    eax,DWORD PTR [ecx]
  404cea:	add    BYTE PTR [eax],al
  404cec:	inc    esp
  404ced:	add    DWORD PTR [eax],eax
  404cef:	add    BYTE PTR [eax+eax*1],cl
  404cf2:	add    BYTE PTR [eax],al
  404cf4:	sbb    al,0x1
  404cf6:	add    BYTE PTR [eax],al
  404cf8:	sbb    esi,DWORD PTR [eax]
  404cfa:	pop    es
  404cfb:	add    BYTE PTR [eax],dh
  404cfd:	add    eax,DWORD PTR [eax]
  404cff:	add    BYTE PTR [edi],bl
  404d01:	add    BYTE PTR [eax],al
  404d03:	adc    DWORD PTR [eax],eax
  404d05:	sub    BYTE PTR [ebx+0x0],bl
  404d08:	add    BYTE PTR [edx],cl
  404d0a:	and    BYTE PTR [eax+0x28000004],cl
  404d10:	pusha  
  404d11:	add    BYTE PTR [eax],al
  404d13:	push   es
  404d14:	adc    eax,DWORD PTR ds:0x48c20
  404d1a:	add    BYTE PTR [eax],ch
  404d1c:	pusha  
  404d1d:	add    BYTE PTR [eax],al
  404d1f:	push   es
  404d20:	adc    eax,DWORD PTR [edi]
  404d22:	and    BYTE PTR [edx],bh
  404d24:	add    eax,0x68280000
  404d29:	add    BYTE PTR [eax],al
  404d2b:	push   es
  404d2c:	sub    BYTE PTR [eax+0x250a0000],ah
  404d32:	adc    ecx,DWORD PTR es:[eax]
  404d35:	adc    DWORD PTR [eax],ecx
  404d37:	cmp    ebp,edx
  404d39:	add    BYTE PTR [eax],al
  404d3b:	add    BYTE PTR [edi],dl
  404d3d:	inc    ebp
  404d3e:	add    DWORD PTR [eax],eax
  404d40:	add    BYTE PTR [eax],al
  404d42:	idiv   bh
  404d44:	(bad)  
  404d45:	call   DWORD PTR [edi]
  404d47:	sub    eax,0x49d006
  404d4c:	add    BYTE PTR [esi],al
  404d4e:	and    BYTE PTR es:[eax+0x28000004],dl
  404d55:	pusha  
  404d56:	add    BYTE PTR [eax],al
  404d58:	push   es
  404d59:	adc    eax,DWORD PTR [edi]
  404d5b:	and    BYTE PTR [edx],bh
  404d5d:	add    eax,0x68280000
  404d62:	add    BYTE PTR [eax],al
  404d64:	push   es
  404d65:	jae    0x404d08
  404d67:	add    BYTE PTR [eax],al
  404d69:	or     dl,BYTE PTR [ebx]
  404d6b:	add    al,0x20
  404d6d:	xchg   esp,eax
  404d6e:	add    al,0x0
  404d70:	add    BYTE PTR [eax],ch
  404d72:	pusha  
  404d73:	add    BYTE PTR [eax],al
  404d75:	push   es
  404d76:	adc    eax,DWORD PTR [edi]
  404d78:	adc    DWORD PTR [edi+ebp*2],eax
  404d7b:	mov    ds:0x250a0000,al
  404d80:	es or  al,0x20
  404d83:	cwde   
  404d84:	add    al,0x0
  404d86:	add    BYTE PTR [eax],ch
  404d88:	pusha  
  404d89:	add    BYTE PTR [eax],al
  404d8b:	push   es
  404d8c:	adc    eax,DWORD PTR [edi]
  404d8e:	or     BYTE PTR [eax],ah
  404d90:	ins    DWORD PTR es:[edi],dx
  404d91:	add    eax,0x68280000
  404d96:	add    BYTE PTR [eax],al
  404d98:	push   es
  404d99:	and    eax,0x5b7226
  404d9e:	add    BYTE PTR [eax+0x20],dh
  404da1:	pushf  
  404da2:	add    al,0x0
  404da4:	add    BYTE PTR [eax],ch
  404da6:	pusha  
  404da7:	add    BYTE PTR [eax],al
  404da9:	push   es
  404daa:	and    BYTE PTR [eax+0x28000004],ah
  404db0:	pusha  
  404db1:	add    BYTE PTR [eax],al
  404db3:	push   es
  404db4:	and    BYTE PTR [esp+eax*1+0x60280000],ah
  404dbb:	add    BYTE PTR [eax],al
  404dbd:	push   es
  404dbe:	sub    BYTE PTR [ebx+0x250a0000],ah
  404dc4:	and    BYTE PTR es:[eax+0x5],dh
  404dc8:	add    BYTE PTR [eax],al
  404dca:	sub    BYTE PTR [eax+0x0],ch
  404dcd:	add    BYTE PTR [esi],al
  404dcf:	and    eax,0x5b7226
  404dd4:	add    BYTE PTR [eax+0x20],dh
  404dd7:	test   al,0x4
  404dd9:	add    BYTE PTR [eax],al
  404ddb:	sub    BYTE PTR [eax+0x0],ah
  404dde:	add    BYTE PTR [esi],al
  404de0:	and    BYTE PTR [esp+eax*1+0x60280000],ch
  404de7:	add    BYTE PTR [eax],al
  404de9:	push   es
  404dea:	and    BYTE PTR [eax+0x28000004],dh
  404df0:	pusha  
  404df1:	add    BYTE PTR [eax],al
  404df3:	push   es
  404df4:	sub    BYTE PTR [ebx+0xd0a0000],ah
  404dfa:	and    BYTE PTR [esp+eax*1+0x60280000],dh
  404e01:	add    BYTE PTR [eax],al
  404e03:	push   es
  404e04:	adc    eax,DWORD PTR [edi]
  404e06:	or     DWORD PTR [edi-0x5c],ebp
  404e09:	add    BYTE PTR [eax],al
  404e0b:	or     ah,BYTE PTR ds:0x292b0a26
  404e11:	and    BYTE PTR [eax+0x28000004],bh
  404e17:	pusha  
  404e18:	add    BYTE PTR [eax],al
  404e1a:	push   es
  404e1b:	adc    eax,DWORD PTR [edi]
  404e1d:	add    BYTE PTR [eax],ah
  404e1f:	mov    esp,0x28000004
  404e24:	pusha  
  404e25:	add    BYTE PTR [eax],al
  404e27:	push   es
  404e28:	adc    eax,DWORD PTR [edi]
  404e2a:	add    ch,BYTE PTR [edi+0x48]
  404e2d:	add    BYTE PTR [eax],al
  404e2f:	push   es
  404e30:	and    eax,0xa92826
  404e35:	add    BYTE PTR [edx],cl
  404e37:	and    eax,0x20000a26
  404e3c:	rol    BYTE PTR [eax+eax*1],0x0
  404e40:	sub    BYTE PTR [eax+0x0],ah
  404e43:	add    BYTE PTR [esi],al
  404e45:	adc    eax,DWORD PTR [edi]
  404e47:	push   es
  404e48:	and    BYTE PTR [eax+0x8],ch
  404e4b:	add    BYTE PTR [eax],al
  404e4d:	sub    BYTE PTR [eax+0x0],ch
  404e50:	add    BYTE PTR [esi],al
  404e52:	and    eax,0x3b6f26
  404e57:	add    BYTE PTR [edx],cl
  404e59:	and    eax,0x4c42026
  404e5e:	add    BYTE PTR [eax],al
  404e60:	sub    BYTE PTR [eax+0x0],ah
  404e63:	add    BYTE PTR [esi],al
  404e65:	inc    BYTE PTR [ecx]
  404e67:	adc    ecx,DWORD PTR [eax]
  404e69:	adc    DWORD PTR [eax],ecx
  404e6b:	sub    al,0x17
  404e6d:	and    al,cl
  404e6f:	add    al,0x0
  404e71:	add    BYTE PTR [eax],ch
  404e73:	pusha  
  404e74:	add    BYTE PTR [eax],al
  404e76:	push   es
  404e77:	adc    eax,DWORD PTR [edi]
  404e79:	and    BYTE PTR [ebx+0x8],ch
  404e7c:	add    BYTE PTR [eax],al
  404e7e:	sub    BYTE PTR [eax+0x0],ch
  404e81:	add    BYTE PTR [esi],al
  404e83:	or     al,BYTE PTR [eax]
  404e85:	and    ah,cl
  404e87:	add    al,0x0
  404e89:	add    BYTE PTR [eax],ch
  404e8b:	pusha  
  404e8c:	add    BYTE PTR [eax],al
  404e8e:	push   es
  404e8f:	adc    eax,DWORD PTR [edi]
  404e91:	and    ch,dh
  404e93:	pop    es
  404e94:	add    BYTE PTR [eax],al
  404e96:	sub    BYTE PTR [eax+0x0],ch
  404e99:	add    BYTE PTR [esi],al
  404e9b:	sub    BYTE PTR [ebx+0x250a0000],bh
  404ea1:	es and al,dl
  404ea4:	add    al,0x0
  404ea6:	add    BYTE PTR [eax],ch
  404ea8:	pusha  
  404ea9:	add    BYTE PTR [eax],al
  404eab:	push   es
  404eac:	inc    BYTE PTR [ecx]
  404eae:	adc    ecx,DWORD PTR [eax]
  404eb0:	adc    DWORD PTR [eax],ecx
  404eb2:	sub    al,0x2a
  404eb4:	sbb    DWORD PTR [ebp+0x1],eax
  404eb7:	add    BYTE PTR [eax],al
  404eb9:	add    dh,dh
  404ebb:	(bad)  
  404ebc:	(bad)  
  404ebd:	jmp    DWORD PTR [eax]
  404ebf:	aam    0x4
  404ec1:	add    BYTE PTR [eax],al
  404ec3:	sub    BYTE PTR [eax+0x0],ah
  404ec6:	add    BYTE PTR [esi],al
  404ec8:	adc    eax,DWORD PTR [edi]
  404eca:	and    ch,dh
  404ecc:	pop    es
  404ecd:	add    BYTE PTR [eax],al
  404ecf:	sub    BYTE PTR [eax+0x0],ch
  404ed2:	add    BYTE PTR [esi],al
  404ed4:	and    eax,0xbc2826
  404ed9:	add    BYTE PTR [edx],cl
  404edb:	and    eax,0x20002626
  404ee0:	fadd   DWORD PTR [eax+eax*1]
  404ee3:	add    BYTE PTR [eax],ch
  404ee5:	pusha  
  404ee6:	add    BYTE PTR [eax],al
  404ee8:	push   es
  404ee9:	adc    eax,DWORD PTR [edi]
  404eeb:	sub    BYTE PTR [eax],dl
  404eed:	add    BYTE PTR [eax],al
  404eef:	push   es
  404ef0:	outs   dx,DWORD PTR ds:[esi]
  404ef1:	ret    0x0
  404ef4:	or     ah,BYTE PTR ds:0x53a2026
  404efa:	add    BYTE PTR [eax],al
  404efc:	sub    BYTE PTR [eax+0x0],ch
  404eff:	add    BYTE PTR [esi],al
  404f01:	and    eax,0xdc200626
  404f06:	add    al,0x0
  404f08:	add    BYTE PTR [eax],ch
  404f0a:	pusha  
  404f0b:	add    BYTE PTR [eax],al
  404f0d:	push   es
  404f0e:	outs   dx,DWORD PTR ds:[esi]
  404f0f:	ret    
  404f10:	add    BYTE PTR [eax],al
  404f12:	or     al,BYTE PTR [eax]
  404f14:	and    al,ah
  404f16:	add    al,0x0
  404f18:	add    BYTE PTR [eax],ch
  404f1a:	pusha  
  404f1b:	add    BYTE PTR [eax],al
  404f1d:	push   es
  404f1e:	adc    eax,DWORD PTR [edi]
  404f20:	push   es
  404f21:	or     ebx,ebp
  404f23:	clc    
  404f24:	add    BYTE PTR [eax],al
  404f26:	add    ch,bl
  404f28:	repz add BYTE PTR [eax],al
  404f2b:	add    BYTE PTR [ecx],dl
  404f2d:	push   es
  404f2e:	sub    ecx,DWORD PTR ds:0xe4200611
  404f34:	add    al,0x0
  404f36:	add    BYTE PTR [eax],ch
  404f38:	pusha  
  404f39:	add    BYTE PTR [eax],al
  404f3b:	push   es
  404f3c:	pop    eax
  404f3d:	and    al,ch
  404f3f:	add    al,0x0
  404f41:	add    BYTE PTR [eax],ch
  404f43:	pusha  
  404f44:	add    BYTE PTR [eax],al
  404f46:	push   es
  404f47:	adc    eax,DWORD PTR [esi]
  404f49:	inc    ebp
  404f4a:	adc    al,0x0
  404f4c:	add    BYTE PTR [eax],al
  404f4e:	add    BYTE PTR [eax],al
  404f50:	add    BYTE PTR [eax],al
  404f52:	addr16 std 
  404f54:	(bad)  
  404f55:	(bad)  
  404f56:	js     0x404f55
  404f58:	(bad)  
  404f59:	push   DWORD PTR [ecx-0x31000003]
  404f5f:	std    
  404f60:	(bad)  
  404f61:	jmp    esp
  404f63:	std    
  404f64:	(bad)  
  404f65:	call   FWORD PTR [esi+edi*8-0x1]
  404f69:	push   DWORD PTR [ecx-0x2]
  404f6c:	(bad)  
  404f6d:	push   DWORD PTR [ebx-0x2]
  404f70:	(bad)  
  404f71:	inc    DWORD PTR [eax-0x63000002]
  404f77:	(bad)  
  404f78:	(bad)  
  404f79:	call   FWORD PTR [ebp-0x30000002]
  404f7f:	(bad)  
  404f80:	(bad)  
  404f81:	jmp    esi
  404f83:	(bad)  
  404f84:	(bad)  
  404f85:	jmp    edi
  404f87:	(bad)  
  404f88:	(bad)  
  404f89:	jmp    DWORD PTR [eax]
  404f8b:	(bad)  
  404f8c:	(bad)  
  404f8d:	inc    DWORD PTR [eax-0x1]
  404f90:	(bad)  
  404f91:	inc    DWORD PTR [ecx-0x1]
  404f94:	(bad)  
  404f95:	push   DWORD PTR [esi-0x1]
  404f98:	(bad)  
  404f99:	dec    DWORD PTR [ecx-0x21000001]
  404f9f:	ins    DWORD PTR es:[edi],dx
  404fa0:	adc    DWORD PTR [edi],eax
  404fa2:	adc    eax,DWORD PTR [esi]
  404fa4:	adc    DWORD PTR ds:0x4ec20,eax
  404faa:	add    BYTE PTR [eax],ch
  404fac:	pusha  
  404fad:	add    BYTE PTR [eax],al
  404faf:	push   es
  404fb0:	xor    BYTE PTR [esi],dl
  404fb2:	sbb    BYTE PTR [ebp+0x1],al
  404fb5:	add    BYTE PTR [eax],al
  404fb7:	add    dh,dh
  404fb9:	(bad)  
  404fba:	(bad)  
  404fbb:	jmp    DWORD PTR [eax]
  404fbd:	lock add al,0x0
  404fc0:	add    BYTE PTR [eax],ch
  404fc2:	pusha  
  404fc3:	add    BYTE PTR [eax],al
  404fc5:	push   es
  404fc6:	sub    eax,DWORD PTR [edx]
  404fc8:	adc    DWORD PTR ds:0x245,eax
  404fce:	add    BYTE PTR [eax],al
  404fd0:	add    BYTE PTR [eax],al
  404fd2:	add    BYTE PTR [ecx-0x1],bl
  404fd5:	(bad)  
  404fd6:	(bad)  
  404fd7:	fidiv  WORD PTR [esi*2+0x100004b]
  404fde:	adc    al,0xfe
  404fe0:	add    edx,DWORD PTR [ecx]
  404fe2:	add    eax,0x4f420
  404fe7:	add    BYTE PTR [eax],ch
  404fe9:	pusha  
  404fea:	add    BYTE PTR [eax],al
  404fec:	push   es
  404fed:	inc    BYTE PTR [ebx]
  404fef:	pop    edi
  404ff0:	adc    DWORD PTR [esi],eax
  404ff2:	and    al,bh
  404ff4:	add    al,0x0
  404ff6:	add    BYTE PTR [eax],ch
  404ff8:	pusha  
  404ff9:	add    BYTE PTR [eax],al
  404ffb:	push   es
  404ffc:	inc    BYTE PTR [ecx]
  404ffe:	pop    edi
  404fff:	(bad)  
  405000:	adc    DWORD PTR [ebx+ecx*2+0x0],esi
  405004:	add    BYTE PTR [ecx],al
  405006:	sub    BYTE PTR [edi+0x0],dl
  405009:	add    BYTE PTR [edx],cl
  40500b:	ficom  WORD PTR [ebx+0x4fc20]
  405011:	add    BYTE PTR [eax],ch
  405013:	pusha  
  405014:	add    BYTE PTR [eax],al
  405016:	push   es
  405017:	sub    BYTE PTR [edx+0x250a0000],bh
  40501d:	es jp  0x405027
  405020:	adc    DWORD PTR [esi],eax
  405022:	sub    al,0xf
  405024:	sbb    eax,DWORD PTR [ebp+0x1]
  405027:	add    BYTE PTR [eax],al
  405029:	add    dh,dh
  40502b:	(bad)  
  40502c:	(bad)  
  40502d:	jmp    FWORD PTR [eax]
  40502f:	pop    ebx
  405030:	add    BYTE PTR [eax],al
  405032:	or     ch,BYTE PTR [edx]
  405034:	inc    ecx
  405035:	sbb    al,0x0
  405037:	add    BYTE PTR [ecx],al
  405039:	add    BYTE PTR [eax],al
  40503b:	add    BYTE PTR [ecx],al
  40503d:	add    BYTE PTR [eax],al
  40503f:	add    ah,dl
  405041:	add    al,BYTE PTR [eax]
  405043:	add    ch,bh
  405045:	add    al,BYTE PTR [eax]
  405047:	add    BYTE PTR [eax+eax*1],cl
  40504a:	add    BYTE PTR [eax],al
  40504c:	aad    0x2
  40504e:	add    BYTE PTR [eax],al
  405050:	sbb    esi,DWORD PTR [eax]
  405052:	add    eax,0x1ed00
  405057:	add    BYTE PTR [eax],ah
  405059:	add    BYTE PTR [eax],al
  40505b:	adc    DWORD PTR [eax],eax
  40505d:	sub    BYTE PTR [ebx+0x0],bl
  405060:	add    BYTE PTR [edx],cl
  405062:	and    BYTE PTR [eax],al
  405064:	add    eax,0x60280000
  405069:	add    BYTE PTR [eax],al
  40506b:	push   es
  40506c:	adc    eax,DWORD PTR [esi]
  40506e:	and    BYTE PTR [eax*1+0x60280000],al
  405075:	add    BYTE PTR [eax],al
  405077:	push   es
  405078:	adc    ecx,DWORD PTR [eax]
  40507a:	and    BYTE PTR [eax+0x28000008],dh
  405080:	push   0x25060000
  405085:	es or  al,0x20
  405088:	or     BYTE PTR ds:0x60280000,al
  40508e:	add    BYTE PTR [eax],al
  405090:	push   es
  405091:	adc    ecx,DWORD PTR [eax]
  405093:	jae    0x405053
  405095:	add    BYTE PTR [eax],al
  405097:	or     cl,BYTE PTR [ebx]
  405099:	and    BYTE PTR [eax*1+0x60280000],cl
  4050a0:	add    BYTE PTR [eax],al
  4050a2:	push   es
  4050a3:	adc    ecx,DWORD PTR [eax]
  4050a5:	jae    0x40506b
  4050a7:	add    BYTE PTR [eax],al
  4050a9:	or     cl,BYTE PTR ds:0x51020
  4050af:	add    BYTE PTR [eax],ch
  4050b1:	pusha  
  4050b2:	add    BYTE PTR [eax],al
  4050b4:	push   es
  4050b5:	adc    ecx,DWORD PTR [eax]
  4050b7:	and    BYTE PTR [eax*1+0x60280000],dl
  4050be:	add    BYTE PTR [eax],al
  4050c0:	push   es
  4050c1:	adc    eax,DWORD PTR [eax+eiz*1]
  4050c4:	sbb    BYTE PTR ds:0x60280000,al
  4050ca:	add    BYTE PTR [eax],al
  4050cc:	push   es
  4050cd:	adc    ecx,DWORD PTR [eax]
  4050cf:	pop    es
  4050d0:	and    BYTE PTR [eax*1+0x60280000],bl
  4050d7:	add    BYTE PTR [eax],al
  4050d9:	push   es
  4050da:	and    BYTE PTR [eax],ah
  4050dc:	add    eax,0x60280000
  4050e1:	add    BYTE PTR [eax],al
  4050e3:	push   es
  4050e4:	outs   dx,DWORD PTR ds:[esi]
  4050e5:	mov    edi,0x250a0000
  4050ea:	adc    eax,DWORD PTR es:0x52420
  4050f1:	add    BYTE PTR [eax],ch
  4050f3:	pusha  
  4050f4:	add    BYTE PTR [eax],al
  4050f6:	push   es
  4050f7:	adc    ecx,DWORD PTR [eax]
  4050f9:	or     DWORD PTR [eax],ecx
  4050fb:	adc    DWORD PTR ds:0x52820,eax
  405101:	add    BYTE PTR [eax],ch
  405103:	pusha  
  405104:	add    BYTE PTR [eax],al
  405106:	push   es
  405107:	outs   dx,DWORD PTR ds:[esi]
  405108:	inc    eax
  405109:	add    BYTE PTR [eax],al
  40510b:	or     ah,BYTE PTR ds:0xc56f26
  405111:	add    BYTE PTR [edx],cl
  405113:	and    eax,0x2c202626
  405118:	add    eax,0x60280000
  40511d:	add    BYTE PTR [eax],al
  40511f:	push   es
  405120:	adc    ecx,DWORD PTR [eax]
  405122:	add    BYTE PTR [ecx],dl
  405124:	add    al,0x20
  405126:	xor    BYTE PTR ds:0x60280000,al
  40512c:	add    BYTE PTR [eax],al
  40512e:	push   es
  40512f:	(bad)  
  405130:	adc    eax,DWORD PTR [ecx+edx*1]
  405133:	add    al,0x20
  405135:	xor    al,0x5
  405137:	add    BYTE PTR [eax],al
  405139:	sub    BYTE PTR [eax+0x0],ah
  40513c:	add    BYTE PTR [esi],al
  40513e:	adc    ecx,DWORD PTR [ecx]
  405140:	adc    DWORD PTR [ecx],ecx
  405142:	ds jl  0x405144
  405145:	(bad)  
  405146:	call   FWORD PTR [ebx]
  405148:	inc    ebp
  405149:	add    DWORD PTR [eax],eax
  40514b:	add    BYTE PTR [eax],al
  40514d:	idiv   bh
  40514f:	(bad)  
  405150:	call   DWORD PTR [edi]
  405152:	sub    eax,0x4ad006
  405157:	add    BYTE PTR [esi],al
  405159:	and    BYTE PTR es:[eax],bh
  40515c:	add    eax,0x60280000
  405161:	add    BYTE PTR [eax],al
  405163:	push   es
  405164:	adc    ecx,DWORD PTR [eax]
  405166:	or     DWORD PTR [edi-0x3a],ebp
  405169:	add    BYTE PTR [eax],al
  40516b:	or     ah,BYTE PTR ds:0xcadd0a26
  405171:	add    BYTE PTR [eax],al
  405173:	add    ch,bl
  405175:	lds    eax,FWORD PTR [eax]
  405177:	add    BYTE PTR [eax],al
  405179:	adc    DWORD PTR [edi],eax
  40517b:	sub    ecx,DWORD PTR ds:0x3c200711
  405181:	add    eax,0x60280000
  405186:	add    BYTE PTR [eax],al
  405188:	push   es
  405189:	pop    eax
  40518a:	and    BYTE PTR [eax+0x5],al
  40518d:	add    BYTE PTR [eax],al
  40518f:	sub    BYTE PTR [eax+0x0],ah
  405192:	add    BYTE PTR [esi],al
  405194:	adc    eax,DWORD PTR [edi]
  405196:	inc    ebp
  405197:	or     eax,DWORD PTR [eax]
  405199:	add    BYTE PTR [eax],al
  40519b:	add    BYTE PTR [eax],al
  40519d:	add    BYTE PTR [eax],al
  40519f:	xchg   esi,eax
  4051a0:	(bad)  
  4051a1:	(bad)  
  4051a2:	jmp    DWORD PTR [edi-0x3f000002]
  4051a8:	(bad)  
  4051a9:	(bad)  
  4051aa:	call   edx
  4051ac:	(bad)  
  4051ad:	(bad)  
  4051ae:	jmp    esp
  4051b0:	(bad)  
  4051b1:	(bad)  
  4051b2:	(bad)  
  4051b3:	cld    
  4051b4:	(bad)  
  4051b5:	(bad)  
  4051b6:	jmp    DWORD PTR [esi]
  4051b8:	(bad)  
  4051b9:	(bad)  
  4051ba:	dec    DWORD PTR [edi-0x1]
  4051bd:	(bad)  
  4051be:	call   DWORD PTR [ebx-0x52000001]
  4051c4:	(bad)  
  4051c5:	(bad)  
  4051c6:	(bad)  
  4051c7:	fisub  WORD PTR [ebx+0x11]
  4051ca:	or     BYTE PTR [ebx],dl
  4051cc:	pop    es
  4051cd:	adc    DWORD PTR [esi],eax
  4051cf:	and    BYTE PTR [ebp+eax*1+0x0],al
  4051d3:	add    BYTE PTR [eax],ch
  4051d5:	pusha  
  4051d6:	add    BYTE PTR [eax],al
  4051d8:	push   es
  4051d9:	xor    BYTE PTR [eax+eiz*1],cl
  4051dc:	dec    eax
  4051dd:	add    eax,0x60280000
  4051e2:	add    BYTE PTR [eax],al
  4051e4:	push   es
  4051e5:	sub    eax,DWORD PTR [edx]
  4051e7:	adc    DWORD PTR [esi],eax
  4051e9:	inc    ebp
  4051ea:	add    al,BYTE PTR [eax]
  4051ec:	add    BYTE PTR [eax],al
  4051ee:	add    BYTE PTR [eax],al
  4051f0:	add    BYTE PTR [eax],al
  4051f2:	xchg   edi,edi
  4051f4:	(bad)  
  4051f5:	(bad)  
  4051f6:	fidiv  WORD PTR [esi*2+0x100004b]
  4051fd:	adc    al,0xfe
  4051ff:	add    edx,DWORD PTR [ecx]
  405201:	push   es
  405202:	and    BYTE PTR [ebp+eax*1+0x0],cl
  405206:	add    BYTE PTR [eax],ch
  405208:	pusha  
  405209:	add    BYTE PTR [eax],al
  40520b:	push   es
  40520c:	inc    BYTE PTR [ebx]
  40520e:	pop    edi
  40520f:	adc    DWORD PTR [edi],eax
  405211:	and    BYTE PTR [eax+0x5],dl
  405214:	add    BYTE PTR [eax],al
  405216:	sub    BYTE PTR [eax+0x0],ah
  405219:	add    BYTE PTR [esi],al
  40521b:	inc    BYTE PTR [ecx]
  40521d:	pop    edi
  40521e:	(bad)  
  40521f:	adc    DWORD PTR [ebx+ecx*2+0x0],esi
  405223:	add    BYTE PTR [ecx],al
  405225:	sub    BYTE PTR [edi+0x0],dl
  405228:	add    BYTE PTR [edx],cl
  40522a:	ficomp WORD PTR [ebp+0x55420]
  405230:	add    BYTE PTR [eax],ch
  405232:	pusha  
  405233:	add    BYTE PTR [eax],al
  405235:	push   es
  405236:	sub    BYTE PTR [edx+0x250a0000],bh
  40523c:	es jp  0x405245
  40523f:	adc    DWORD PTR [edi],eax
  405241:	sub    al,0x5
  405243:	sub    BYTE PTR [ebx+0x0],bl
  405246:	add    BYTE PTR [edx],cl
  405248:	sub    al,BYTE PTR [eax]
  40524a:	add    BYTE PTR [eax],al
  40524c:	inc    ecx
  40524d:	sbb    al,0x0
  40524f:	add    BYTE PTR [ecx],al
  405251:	add    BYTE PTR [eax],al
  405253:	add    BYTE PTR [ecx],al
  405255:	add    BYTE PTR [eax],al
  405257:	add    BYTE PTR [ebx-0x3bffffff],bl
  40525d:	add    DWORD PTR [eax],eax
  40525f:	add    BYTE PTR [eax+eax*1],cl
  405262:	add    BYTE PTR [eax],al
  405264:	pushf  
  405265:	add    DWORD PTR [eax],eax
  405267:	add    BYTE PTR [ebx],bl
  405269:	xor    BYTE PTR [edi],al
  40526b:	add    BYTE PTR [edx+0x4],dh
  40526e:	add    BYTE PTR [eax],al
  405270:	and    DWORD PTR [eax],eax
  405272:	add    BYTE PTR [ecx],dl
  405274:	add    BYTE PTR [eax],ch
  405276:	pop    ebx
  405277:	add    BYTE PTR [eax],al
  405279:	or     ah,BYTE PTR [eax]
  40527b:	pop    eax
  40527c:	add    eax,0x60280000
  405281:	add    BYTE PTR [eax],al
  405283:	push   es
  405284:	adc    ecx,DWORD PTR [edi]
  405286:	and    BYTE PTR [ebp+eax*1+0x0],bl
  40528a:	add    BYTE PTR [eax],ch
  40528c:	pusha  
  40528d:	add    BYTE PTR [eax],al
  40528f:	push   es
  405290:	adc    edx,DWORD PTR [ecx]
  405292:	add    esi,DWORD PTR [ebx-0x39]
  405295:	add    BYTE PTR [eax],al
  405297:	or     cl,BYTE PTR [edx]
  405299:	and    BYTE PTR [eax+0x5],ah
  40529c:	add    BYTE PTR [eax],al
  40529e:	sub    BYTE PTR [eax+0x0],ah
  4052a1:	add    BYTE PTR [esi],al
  4052a3:	adc    edx,DWORD PTR [ecx]
  4052a5:	push   es
  4052a6:	outs   dx,DWORD PTR ds:[esi]
  4052a7:	enter  0x0,0xa
  4052ab:	adc    ecx,DWORD PTR [eax+eiz*1]
  4052ae:	fs add eax,0x60280000
  4052b4:	add    BYTE PTR [eax],al
  4052b6:	push   es
  4052b7:	adc    ecx,DWORD PTR [ebx]
  4052b9:	cmp    dl,bh
  4052bb:	add    al,BYTE PTR [eax]
  4052bd:	add    BYTE PTR [ecx],dl
  4052bf:	or     al,0x11
  4052c1:	or     ebx,DWORD PTR [edx+0x568200b]
  4052c7:	add    BYTE PTR [eax],al
  4052c9:	sub    BYTE PTR [eax+0x0],ah
  4052cc:	add    BYTE PTR [esi],al
  4052ce:	adc    edx,DWORD PTR [ecx]
  4052d0:	pop    es
  4052d1:	outs   dx,DWORD PTR ds:[esi]
  4052d2:	leave  
  4052d3:	add    BYTE PTR [eax],al
  4052d5:	or     ah,BYTE PTR ds:0x200e1326
  4052db:	ins    BYTE PTR es:[edi],dx
  4052dc:	add    eax,0x60280000
  4052e1:	add    BYTE PTR [eax],al
  4052e3:	push   es
  4052e4:	adc    ecx,DWORD PTR ds:0x24f38
  4052ea:	add    BYTE PTR [ecx],dl
  4052ec:	push   cs
  4052ed:	adc    DWORD PTR ds:0x70200d9a,ecx
  4052f3:	add    eax,0x60280000
  4052f8:	add    BYTE PTR [eax],al
  4052fa:	push   es
  4052fb:	adc    edx,DWORD PTR [ecx]
  4052fd:	or     DWORD PTR [edi-0x36],ebp
  405300:	add    BYTE PTR [eax],al
  405302:	or     dl,BYTE PTR [ebx]
  405304:	add    al,0x20
  405306:	je     0x40530d
  405308:	add    BYTE PTR [eax],al
  40530a:	sub    BYTE PTR [eax+0x0],ah
  40530d:	add    BYTE PTR [esi],al
  40530f:	adc    edx,DWORD PTR [ecx]
  405311:	adc    DWORD PTR [eax+eiz*1],eax
  405314:	sub    eax,0x28000009
  405319:	push   0x25060000
  40531e:	outs   dx,DWORD PTR es:[esi]
  405320:	retf   
  405321:	add    BYTE PTR [eax],al
  405323:	or     ah,BYTE PTR ds:0x11121326
  405329:	adc    ch,BYTE PTR [eax+ebx*1]
  40532c:	sbb    eax,DWORD PTR [ebp+0x1]
  40532f:	add    BYTE PTR [eax],al
  405331:	add    dh,dh
  405333:	(bad)  
  405334:	(bad)  
  405335:	call   DWORD PTR [edi]
  405337:	sub    eax,0x4bd006
  40533c:	add    BYTE PTR [esi],al
  40533e:	es cmp cl,bl
  405341:	add    DWORD PTR [eax],eax
  405343:	add    BYTE PTR [eax],ah
  405345:	js     0x40534c
  405347:	add    BYTE PTR [eax],al
  405349:	sub    BYTE PTR [eax+0x0],ah
  40534c:	add    BYTE PTR [esi],al
  40534e:	adc    edx,DWORD PTR [ecx]
  405350:	add    BYTE PTR [eax],ah
  405352:	jl     0x405359
  405354:	add    BYTE PTR [eax],al
  405356:	sub    BYTE PTR [eax+0x0],ah
  405359:	add    BYTE PTR [esi],al
  40535b:	adc    edx,DWORD PTR [ecx]
  40535d:	or     DWORD PTR [edi-0x34],ebp
  405360:	add    BYTE PTR [eax],al
  405362:	or     ah,BYTE PTR ds:0xcd2826
  405368:	add    BYTE PTR [edx],cl
  40536a:	and    eax,0x20051326
  40536f:	add    BYTE PTR ds:0x60280000,0x0
  405376:	add    BYTE PTR [esi],al
  405378:	adc    edx,DWORD PTR [ecx]
  40537a:	adc    DWORD PTR ds:0xce28,eax
  405380:	or     ah,BYTE PTR ds:0x5842026
  405386:	add    BYTE PTR [eax],al
  405388:	sub    BYTE PTR [ebx+0x0],ah
  40538b:	add    BYTE PTR [esi],al
  40538d:	and    eax,0x9253026
  405392:	outs   dx,DWORD PTR ds:[esi]
  405393:	iret   
  405394:	add    BYTE PTR [eax],al
  405396:	or     ah,BYTE PTR ds:0x93c2026
  40539c:	add    BYTE PTR [eax],al
  40539e:	sub    BYTE PTR [eax+0x0],ch
  4053a1:	add    BYTE PTR [esi],al
  4053a3:	outs   dx,DWORD PTR ds:[esi]
  4053a4:	rol    BYTE PTR [eax],1
  4053a6:	add    BYTE PTR [edx],cl
  4053a8:	and    eax,0x180c2c26
  4053ad:	inc    ebp
  4053ae:	add    DWORD PTR [eax],eax
  4053b0:	add    BYTE PTR [eax],al
  4053b2:	idiv   bh
  4053b4:	(bad)  
  4053b5:	jmp    FWORD PTR [ebx]
  4053b7:	daa    
  4053b8:	or     DWORD PTR [edi-0x31],ebp
  4053bb:	add    BYTE PTR [eax],al
  4053bd:	or     ah,BYTE PTR ds:0x94b2026
  4053c3:	add    BYTE PTR [eax],al
  4053c5:	sub    BYTE PTR [eax+0x0],ch
  4053c8:	add    BYTE PTR [esi],al
  4053ca:	and    eax,0xd06f26
  4053cf:	add    BYTE PTR [edx],cl
  4053d1:	and    eax,0x190c2c26
  4053d6:	inc    ebp
  4053d7:	add    DWORD PTR [eax],eax
  4053d9:	add    BYTE PTR [eax],al
  4053db:	idiv   bh
  4053dd:	(bad)  
  4053de:	jmp    FWORD PTR [ebx]
  4053e0:	and    eax,0xcf6f09
  4053e5:	add    BYTE PTR [edx],cl
  4053e7:	and    eax,0x9662026
  4053ec:	add    BYTE PTR [eax],al
  4053ee:	sub    BYTE PTR [eax+0x0],ch
  4053f1:	add    BYTE PTR [esi],al
  4053f3:	outs   dx,DWORD PTR ds:[esi]
  4053f4:	rol    BYTE PTR [eax],1
  4053f6:	add    BYTE PTR [edx],cl
  4053f8:	and    eax,0x1c0c2c26
  4053fd:	inc    ebp
  4053fe:	add    DWORD PTR [eax],eax
  405400:	add    BYTE PTR [eax],al
  405402:	idiv   bh
  405404:	(bad)  
  405405:	jmp    FWORD PTR [ebx]
  405407:	inc    esi
  405408:	or     DWORD PTR [edi-0x31],ebp
  40540b:	add    BYTE PTR [eax],al
  40540d:	or     ah,BYTE PTR ds:0x9752026
  405413:	add    BYTE PTR [eax],al
  405415:	sub    BYTE PTR [eax+0x0],ch
  405418:	add    BYTE PTR [esi],al
  40541a:	and    eax,0xd06f26
  40541f:	add    BYTE PTR [edx],cl
  405421:	and    eax,0x9292d26
  405426:	outs   dx,DWORD PTR ds:[esi]
  405427:	iret   
  405428:	add    BYTE PTR [eax],al
  40542a:	or     ah,BYTE PTR ds:0x98a2026
  405430:	add    BYTE PTR [eax],al
  405432:	sub    BYTE PTR [eax+0x0],ch
  405435:	add    BYTE PTR [esi],al
  405437:	and    eax,0xd06f26
  40543c:	add    BYTE PTR [edx],cl
  40543e:	and    eax,0x200c2d26
  405443:	mov    WORD PTR ds:0x60280000,es
  405449:	add    BYTE PTR [eax],al
  40544b:	push   es
  40544c:	sub    ecx,DWORD PTR [edx]
  40544e:	and    BYTE PTR [eax+0x28000005],dl
  405454:	pusha  
  405455:	add    BYTE PTR [eax],al
  405457:	push   es
  405458:	add    BYTE PTR [ebx],dl
  40545a:	adc    dl,BYTE PTR [ecx]
  40545c:	adc    ch,BYTE PTR [edi+ecx*1]
  40545f:	sbb    BYTE PTR [ebp+0x1],al
  405462:	add    BYTE PTR [eax],al
  405464:	add    dh,dh
  405466:	(bad)  
  405467:	(bad)  
  405468:	(bad)  
  405469:	cmp    BYTE PTR [esi+0x20000000],ch
  40546f:	xchg   esp,eax
  405470:	add    eax,0x60280000
  405475:	add    BYTE PTR [eax],al
  405477:	push   es
  405478:	adc    edx,DWORD PTR [ecx]
  40547a:	add    BYTE PTR [eax],ah
  40547c:	cwde   
  40547d:	add    eax,0x60280000
  405482:	add    BYTE PTR [eax],al
  405484:	push   es
  405485:	adc    edx,DWORD PTR [ecx]
  405487:	or     DWORD PTR [edi-0x31],ebp
  40548a:	add    BYTE PTR [eax],al
  40548c:	or     ah,BYTE PTR ds:0x20081326
  405492:	pushf  
  405493:	add    eax,0x60280000
  405498:	add    BYTE PTR [eax],al
  40549a:	push   es
  40549b:	adc    edx,DWORD PTR [ecx]
  40549d:	or     DWORD PTR [edi-0x31],ebp
  4054a0:	add    BYTE PTR [eax],al
  4054a2:	or     ah,BYTE PTR ds:0x9992026
  4054a8:	add    BYTE PTR [eax],al
  4054aa:	sub    BYTE PTR [eax+0x0],ch
  4054ad:	add    BYTE PTR [esi],al
  4054af:	and    eax,0xa62826
  4054b4:	add    BYTE PTR [edx],cl
  4054b6:	adc    ecx,DWORD PTR [ecx]
  4054b8:	and    BYTE PTR [eax+0x28000005],ah
  4054be:	pusha  
  4054bf:	add    BYTE PTR [eax],al
  4054c1:	push   es
  4054c2:	adc    edx,DWORD PTR [ecx]
  4054c4:	add    al,0x13
  4054c6:	or     ah,BYTE PTR [eax]
  4054c8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4054c9:	add    eax,0x60280000
  4054ce:	add    BYTE PTR [eax],al
  4054d0:	push   es
  4054d1:	adc    edx,DWORD PTR [ecx]
  4054d3:	add    dl,BYTE PTR [ecx]
  4054d5:	or     ch,BYTE PTR [edi+0x4d]
  4054d8:	add    BYTE PTR [eax],al
  4054da:	push   es
  4054db:	and    eax,0x20071326
  4054e0:	test   al,0x5
  4054e2:	add    BYTE PTR [eax],al
  4054e4:	sub    BYTE PTR [eax+0x0],ah
  4054e7:	add    BYTE PTR [esi],al
  4054e9:	adc    edx,DWORD PTR [ecx]
  4054eb:	add    dl,BYTE PTR [ecx]
  4054ed:	or     ch,BYTE PTR [edi+0x4e]
  4054f0:	add    BYTE PTR [eax],al
  4054f2:	push   es
  4054f3:	and    eax,0x20061326
  4054f8:	lods   al,BYTE PTR ds:[esi]
  4054f9:	add    eax,0x60280000
  4054fe:	add    BYTE PTR [eax],al
  405500:	push   es
  405501:	adc    edx,DWORD PTR [ecx]
  405503:	add    dl,BYTE PTR [ecx]
  405505:	or     BYTE PTR [ecx],dl
  405507:	or     DWORD PTR [ecx],edx
  405509:	pop    es
  40550a:	adc    DWORD PTR [esi],eax
  40550c:	and    BYTE PTR [eax+0x28000005],dh
  405512:	pusha  
  405513:	add    BYTE PTR [eax],al
  405515:	push   es
  405516:	outs   dx,DWORD PTR ds:[esi]
  405517:	dec    edi
  405518:	add    BYTE PTR [eax],al
  40551a:	push   es
  40551b:	add    BYTE PTR [eax],al
  40551d:	add    BYTE PTR [ecx],dl
  40551f:	or     eax,0x5b420
  405524:	add    BYTE PTR [eax],ch
  405526:	pusha  
  405527:	add    BYTE PTR [eax],al
  405529:	push   es
  40552a:	(bad)  
  40552b:	adc    ecx,DWORD PTR ds:0x5b820
  405531:	add    BYTE PTR [eax],ch
  405533:	pusha  
  405534:	add    BYTE PTR [eax],al
  405536:	push   es
  405537:	adc    edx,DWORD PTR [ecx]
  405539:	add    BYTE PTR [ecx],dl
  40553b:	or     eax,0xb78e0e11
  405540:	inc    BYTE PTR [ebx+edx*1]
  405543:	adc    dl,BYTE PTR [ecx]
  405545:	adc    bh,BYTE PTR [edx]
  405547:	mov    al,ds:0x17fffffd
  40554c:	inc    ebp
  40554d:	add    DWORD PTR [eax],eax
  40554f:	add    BYTE PTR [eax],al
  405551:	idiv   bh
  405553:	(bad)  
  405554:	jmp    DWORD PTR [eax]
  405556:	mov    esp,0x28000005
  40555b:	pusha  
  40555c:	add    BYTE PTR [eax],al
  40555e:	push   es
  40555f:	adc    edx,DWORD PTR [ecx]
  405561:	pop    es
  405562:	outs   dx,DWORD PTR ds:[esi]
  405563:	enter  0x0,0xa
  405567:	and    eax,0x20b78e26
  40556c:	rol    BYTE PTR ds:0x60280000,0x0
  405573:	add    BYTE PTR [esi],al
  405575:	inc    BYTE PTR [edx]
  405577:	adc    edx,DWORD PTR [edx]
  405579:	adc    DWORD PTR [edx],edx
  40557b:	sub    al,0x1e
  40557d:	and    ah,al
  40557f:	add    eax,0x60280000
  405584:	add    BYTE PTR [eax],al
  405586:	push   es
  405587:	adc    edx,DWORD PTR [ecx]
  405589:	add    al,BYTE PTR [edi]
  40558b:	outs   dx,DWORD PTR ds:[esi]
  40558c:	iret   
  40558d:	add    BYTE PTR [eax],al
  40558f:	or     ah,BYTE PTR ds:0x4b6f0426
  405595:	add    BYTE PTR [eax],al
  405597:	push   es
  405598:	and    eax,0x11002626
  40559d:	or     esp,DWORD PTR [eax]
  40559f:	enter  0x5,0x0
  4055a3:	sub    BYTE PTR [eax+0x0],ah
  4055a6:	add    BYTE PTR [esi],al
  4055a8:	(bad)  
  4055a9:	adc    ecx,DWORD PTR [ebx]
  4055ab:	and    ah,cl
  4055ad:	add    eax,0x60280000
  4055b2:	add    BYTE PTR [eax],al
  4055b4:	push   es
  4055b5:	adc    edx,DWORD PTR [ecx]
  4055b7:	add    BYTE PTR [ecx],dl
  4055b9:	or     edx,DWORD PTR [ecx]
  4055bb:	or     al,0x8e
  4055bd:	mov    bh,0xfe
  4055bf:	add    al,0x13
  4055c1:	adc    dl,BYTE PTR [ecx]
  4055c3:	adc    bh,BYTE PTR [edx]
  4055c5:	cmc    
  4055c6:	cld    
  4055c7:	(bad)  
  4055c8:	(bad)  
  4055c9:	fisttp QWORD PTR ds:0x11000001
  4055cf:	adc    BYTE PTR [ebx],ch
  4055d1:	or     eax,0xd0201011
  4055d6:	add    eax,0x60280000
  4055db:	add    BYTE PTR [eax],al
  4055dd:	push   es
  4055de:	pop    eax
  4055df:	and    ah,dl
  4055e1:	add    eax,0x60280000
  4055e6:	add    BYTE PTR [eax],al
  4055e8:	push   es
  4055e9:	adc    edx,DWORD PTR [eax]
  4055eb:	inc    ebp
  4055ec:	sbb    eax,DWORD PTR [eax]
  4055ee:	add    BYTE PTR [eax],al
  4055f0:	add    BYTE PTR [eax],al
  4055f2:	add    BYTE PTR [eax],al
  4055f4:	sbb    esp,edi
  4055f6:	(bad)  
  4055f7:	jmp    FWORD PTR [edx]
  4055f9:	cld    
  4055fa:	(bad)  
  4055fb:	(bad)  
  4055fc:	cmp    eax,0x68fffffc
  405601:	cld    
  405602:	(bad)  
  405603:	call   DWORD PTR [ebp-0x56000004]
  405609:	cld    
  40560a:	(bad)  
  40560b:	jmp    ebx
  40560d:	cld    
  40560e:	(bad)  
  40560f:	(bad)  
  405610:	call   0xf6405611
  405615:	cld    
  405616:	(bad)  
  405617:	call   DWORD PTR [edx]
  405619:	std    
  40561a:	(bad)  
  40561b:	dec    DWORD PTR ds:0x12fffffe
  405621:	(bad)  
  405622:	(bad)  
  405623:	call   FWORD PTR [edi]
  405625:	(bad)  
  405626:	(bad)  
  405627:	push   DWORD PTR ds:0x5cfffffe
  40562d:	(bad)  
  40562e:	(bad)  
  40562f:	jmp    FWORD PTR [ebx-0x2]
  405632:	(bad)  
  405633:	inc    DWORD PTR [ebx-0x64000002]
  405639:	(bad)  
  40563a:	(bad)  
  40563b:	inc    eax
  40563d:	(bad)  
  40563e:	(bad)  
  40563f:	inc    ecx
  405641:	(bad)  
  405642:	(bad)  
  405643:	call   ecx
  405645:	(bad)  
  405646:	(bad)  
  405647:	(bad)  
  405648:	stc    
  405649:	(bad)  
  40564a:	(bad)  
  40564b:	jmp    DWORD PTR [ecx]
  40564d:	(bad)  
  40564e:	(bad)  
  40564f:	(bad)  
  405650:	aas    
  405651:	(bad)  
  405652:	(bad)  
  405653:	dec    DWORD PTR [edi-0x1]
  405656:	(bad)  
  405657:	jmp    FWORD PTR [ebp-0x1]
  40565a:	(bad)  
  40565b:	(bad)  
  40565c:	fisubr WORD PTR [ebp+0x11]
  40565f:	adc    DWORD PTR [ebx],edx
  405661:	adc    BYTE PTR [ecx],dl
  405663:	mov    eax,cr3
  405666:	add    eax,0x60280000
  40566b:	add    BYTE PTR [eax],al
  40566d:	push   es
  40566e:	xor    BYTE PTR [esi],dl
  405670:	sbb    BYTE PTR [ebp+0x1],al
  405673:	add    BYTE PTR [eax],al
  405675:	add    dh,dh
  405677:	(bad)  
  405678:	(bad)  
  405679:	jmp    DWORD PTR [eax]
  40567b:	fadd   QWORD PTR ds:0x60280000
  405681:	add    BYTE PTR [eax],al
  405683:	push   es
  405684:	sub    eax,DWORD PTR [edx]
  405686:	adc    DWORD PTR [edi],ecx
  405688:	inc    ebp
  405689:	add    al,BYTE PTR [eax]
  40568b:	add    BYTE PTR [eax],al
  40568d:	add    BYTE PTR [eax],al
  40568f:	add    BYTE PTR [eax],al
  405691:	cmp    eax,0xdeffffff
  405696:	xor    al,0x75
  405698:	dec    ebx
  405699:	add    BYTE PTR [eax],al
  40569b:	add    DWORD PTR [esi+edi*8],edx
  40569e:	add    edx,DWORD PTR [ecx]
  4056a0:	mov    eax,cr4
  4056a3:	add    eax,0x60280000
  4056a8:	add    BYTE PTR [eax],al
  4056aa:	push   es
  4056ab:	inc    BYTE PTR [ebx]
  4056ad:	pop    edi
  4056ae:	adc    DWORD PTR [eax],edx
  4056b0:	and    ah,ah
  4056b2:	add    eax,0x60280000
  4056b7:	add    BYTE PTR [eax],al
  4056b9:	push   es
  4056ba:	inc    BYTE PTR [ecx]
  4056bc:	pop    edi
  4056bd:	(bad)  
  4056be:	adc    DWORD PTR [ebx+ecx*2+0x0],esi
  4056c2:	add    BYTE PTR [ecx],al
  4056c4:	sub    BYTE PTR [edi+0x0],dl
  4056c7:	add    BYTE PTR [edx],cl
  4056c9:	ficom  WORD PTR [ebx+0x5e820]
  4056cf:	add    BYTE PTR [eax],ch
  4056d1:	pusha  
  4056d2:	add    BYTE PTR [eax],al
  4056d4:	push   es
  4056d5:	sub    BYTE PTR [edx+0x7a0a0000],bh
  4056db:	or     BYTE PTR [ecx],dl
  4056dd:	adc    BYTE PTR [eax*1+0x5b28],ch
  4056e4:	or     ch,BYTE PTR [edx]
  4056e6:	add    BYTE PTR [eax],al
  4056e8:	inc    ecx
  4056e9:	sbb    al,0x0
  4056eb:	add    BYTE PTR [ecx],al
  4056ed:	add    BYTE PTR [eax],al
  4056ef:	add    BYTE PTR [ecx],al
  4056f1:	add    BYTE PTR [eax],al
  4056f3:	add    BYTE PTR [edx],ah
  4056f5:	add    al,0x0
  4056f7:	add    BYTE PTR [ebx+0x4],cl
  4056fa:	add    BYTE PTR [eax],al
  4056fc:	or     al,0x0
  4056fe:	add    BYTE PTR [eax],al
  405700:	and    eax,DWORD PTR [eax+eax*1]
  405703:	add    BYTE PTR [ebx],bl
  405705:	xor    BYTE PTR [edi],al
  405707:	add    BYTE PTR [edi+0x22000003],al
  40570d:	add    BYTE PTR [eax],al
  40570f:	adc    DWORD PTR [eax],eax
  405711:	sub    BYTE PTR [ebx+0x0],bl
  405714:	add    BYTE PTR [edx],cl
  405716:	and    ah,ch
  405718:	add    eax,0x60280000
  40571d:	add    BYTE PTR [eax],al
  40571f:	push   es
  405720:	adc    edx,DWORD PTR [eax]
  405722:	and    al,dh
  405724:	add    eax,0x60280000
  405729:	add    BYTE PTR [eax],al
  40572b:	push   es
  40572c:	adc    edx,DWORD PTR [edx]
  40572e:	add    esi,DWORD PTR [ebx-0x39]
  405731:	add    BYTE PTR [eax],al
  405733:	or     cl,BYTE PTR [ebx]
  405735:	and    ah,dh
  405737:	add    eax,0x60280000
  40573c:	add    BYTE PTR [eax],al
  40573e:	push   es
  40573f:	adc    edx,DWORD PTR [edx]
  405741:	pop    es
  405742:	outs   dx,DWORD PTR ds:[esi]
  405743:	enter  0x0,0xa
  405747:	and    eax,0x200d1326
  40574c:	clc    
  40574d:	add    eax,0x60280000
  405752:	add    BYTE PTR [eax],al
  405754:	push   es
  405755:	adc    ecx,DWORD PTR [eax+edi*1]
  405758:	or     eax,DWORD PTR [edx]
  40575a:	add    BYTE PTR [eax],al
  40575c:	adc    DWORD PTR ds:0xc9a0c11,ecx
  405762:	and    ah,bh
  405764:	add    eax,0x60280000
  405769:	add    BYTE PTR [eax],al
  40576b:	push   es
  40576c:	adc    edx,DWORD PTR [edx]
  40576e:	or     BYTE PTR [edi-0x37],ch
  405771:	add    BYTE PTR [eax],al
  405773:	or     ah,BYTE PTR ds:0x200f1326
  405779:	add    BYTE PTR [esi],al
  40577b:	add    BYTE PTR [eax],al
  40577d:	sub    BYTE PTR [eax+0x0],ah
  405780:	add    BYTE PTR [esi],al
  405782:	adc    ecx,DWORD PTR [esi]
  405784:	cmp    BYTE PTR [edx+0x1],ah
  405787:	add    BYTE PTR [eax],al
  405789:	adc    DWORD PTR [edi],ecx
  40578b:	adc    DWORD PTR [esi],ecx
  40578d:	call   0x0:0x604200d
  405794:	sub    BYTE PTR [eax+0x0],ah
  405797:	add    BYTE PTR [esi],al
  405799:	adc    edx,DWORD PTR [edx]
  40579b:	or     DWORD PTR [edi-0x36],ebp
  40579e:	add    BYTE PTR [eax],al
  4057a0:	or     ah,BYTE PTR ds:0x20041326
  4057a6:	or     BYTE PTR [esi],al
  4057a8:	add    BYTE PTR [eax],al
  4057aa:	sub    BYTE PTR [eax+0x0],ah
  4057ad:	add    BYTE PTR [esi],al
  4057af:	adc    edx,DWORD PTR [edx]
  4057b1:	adc    DWORD PTR [eax+eiz*1],eax
  4057b4:	sub    eax,0x28000009
  4057b9:	push   0x25060000
  4057be:	outs   dx,DWORD PTR es:[esi]
  4057c0:	retf   
  4057c1:	add    BYTE PTR [eax],al
  4057c3:	or     ah,BYTE PTR ds:0x11131326
  4057c9:	adc    edi,DWORD PTR [ecx]
  4057cb:	inc    DWORD PTR [eax]
  4057cd:	add    BYTE PTR [eax],al
  4057cf:	sbb    DWORD PTR [ebp+0x1],eax
  4057d2:	add    BYTE PTR [eax],al
  4057d4:	add    dh,dh
  4057d6:	(bad)  
  4057d7:	(bad)  
  4057d8:	call   DWORD PTR [edi]
  4057da:	sub    eax,0x4cd006
  4057df:	add    BYTE PTR [esi],al
  4057e1:	and    BYTE PTR es:[esi+eax*1],cl
  4057e5:	add    BYTE PTR [eax],al
  4057e7:	sub    BYTE PTR [eax+0x0],ah
  4057ea:	add    BYTE PTR [esi],al
  4057ec:	adc    edx,DWORD PTR [edx]
  4057ee:	or     DWORD PTR [edi-0x31],ebp
  4057f1:	add    BYTE PTR [eax],al
  4057f3:	or     ah,BYTE PTR ds:0x20081326
  4057f9:	adc    BYTE PTR [esi],al
  4057fb:	add    BYTE PTR [eax],al
  4057fd:	sub    BYTE PTR [eax+0x0],ah
  405800:	add    BYTE PTR [esi],al
  405802:	adc    edx,DWORD PTR [edx]
  405804:	or     DWORD PTR [edi-0x31],ebp
  405807:	add    BYTE PTR [eax],al
  405809:	or     ah,BYTE PTR ds:0x9992026
  40580f:	add    BYTE PTR [eax],al
  405811:	sub    BYTE PTR [eax+0x0],ch
  405814:	add    BYTE PTR [esi],al
  405816:	and    eax,0xa62826
  40581b:	add    BYTE PTR [edx],cl
  40581d:	and    eax,0x200a1326
  405822:	adc    al,0x6
  405824:	add    BYTE PTR [eax],al
  405826:	sub    BYTE PTR [eax+0x0],ah
  405829:	add    BYTE PTR [esi],al
  40582b:	adc    edx,DWORD PTR [edx]
  40582d:	add    al,0x13
  40582f:	or     esp,DWORD PTR [eax]
  405831:	sbb    BYTE PTR [esi],al
  405833:	add    BYTE PTR [eax],al
  405835:	sub    BYTE PTR [eax+0x0],ah
  405838:	add    BYTE PTR [esi],al
  40583a:	adc    edx,DWORD PTR [edx]
  40583c:	add    dl,BYTE PTR [ecx]
  40583e:	or     ebp,DWORD PTR [edi+0x4d]
  405841:	add    BYTE PTR [eax],al
  405843:	push   es
  405844:	adc    eax,DWORD PTR [esi]
  405846:	and    BYTE PTR [esi+eax*1],bl
  405849:	add    BYTE PTR [eax],al
  40584b:	sub    BYTE PTR [eax+0x0],ah
  40584e:	add    BYTE PTR [esi],al
  405850:	adc    edx,DWORD PTR [edx]
  405852:	add    dl,BYTE PTR [ecx]
  405854:	or     ebp,DWORD PTR [edi+0x4e]
  405857:	add    BYTE PTR [eax],al
  405859:	push   es
  40585a:	and    eax,0x20051326
  40585f:	and    BYTE PTR [esi],al
  405861:	add    BYTE PTR [eax],al
  405863:	sub    BYTE PTR [eax+0x0],ah
  405866:	add    BYTE PTR [esi],al
  405868:	adc    edx,DWORD PTR [edx]
  40586a:	or     DWORD PTR [edi-0x31],ebp
  40586d:	add    BYTE PTR [eax],al
  40586f:	or     ah,BYTE PTR ds:0x20071326
  405875:	and    al,0x6
  405877:	add    BYTE PTR [eax],al
  405879:	sub    BYTE PTR [eax+0x0],ah
  40587c:	add    BYTE PTR [esi],al
  40587e:	adc    edx,DWORD PTR [edx]
  405880:	adc    DWORD PTR [edi],eax
  405882:	and    BYTE PTR [eax],ch
  405884:	push   es
  405885:	add    BYTE PTR [eax],al
  405887:	sub    BYTE PTR [eax+0x0],ah
  40588a:	add    BYTE PTR [esi],al
  40588c:	adc    DWORD PTR [edi],eax
  40588e:	outs   dx,DWORD PTR ds:[esi]
  40588f:	rol    DWORD PTR [eax],1
  405891:	add    BYTE PTR [edx],cl
  405893:	and    eax,0x62c2026
  405898:	add    BYTE PTR [eax],al
  40589a:	sub    BYTE PTR [eax+0x0],ah
  40589d:	add    BYTE PTR [esi],al
  40589f:	fisubr DWORD PTR [edi+0x40]
  4058a2:	add    BYTE PTR [eax],al
  4058a4:	or     ah,BYTE PTR ds:0x20091326
  4058aa:	xor    BYTE PTR [esi],al
  4058ac:	add    BYTE PTR [eax],al
  4058ae:	sub    BYTE PTR [eax+0x0],ah
  4058b1:	add    BYTE PTR [esi],al
  4058b3:	adc    edx,DWORD PTR [edx]
  4058b5:	add    dl,BYTE PTR [ecx]
  4058b7:	pop    es
  4058b8:	adc    DWORD PTR [ecx],ecx
  4058ba:	adc    DWORD PTR [esi],eax
  4058bc:	adc    DWORD PTR ds:0x63420,eax
  4058c2:	add    BYTE PTR [eax],ch
  4058c4:	pusha  
  4058c5:	add    BYTE PTR [eax],al
  4058c7:	push   es
  4058c8:	outs   dx,DWORD PTR ds:[esi]
  4058c9:	dec    edi
  4058ca:	add    BYTE PTR [eax],al
  4058cc:	push   es
  4058cd:	add    BYTE PTR [eax],al
  4058cf:	adc    DWORD PTR [esi],ecx
  4058d1:	and    BYTE PTR [eax],bh
  4058d3:	push   es
  4058d4:	add    BYTE PTR [eax],al
  4058d6:	sub    BYTE PTR [eax+0x0],ah
  4058d9:	add    BYTE PTR [esi],al
  4058db:	(bad)  
  4058dc:	adc    ecx,DWORD PTR [esi]
  4058de:	and    BYTE PTR [esi+eax*1],bh
  4058e1:	add    BYTE PTR [eax],al
  4058e3:	sub    BYTE PTR [eax+0x0],ah
  4058e6:	add    BYTE PTR [esi],al
  4058e8:	adc    edx,DWORD PTR [edx]
  4058ea:	add    BYTE PTR [ecx],dl
  4058ec:	push   cs
  4058ed:	adc    DWORD PTR [edi],ecx
  4058ef:	mov    ?,WORD PTR [edi+0x131304fe]
  4058f5:	adc    DWORD PTR [ebx],edx
  4058f7:	cmp    cl,BYTE PTR [ebp+0x20fffffe]
  4058fd:	inc    eax
  4058fe:	push   es
  4058ff:	add    BYTE PTR [eax],al
  405901:	sub    BYTE PTR [eax+0x0],ah
  405904:	add    BYTE PTR [esi],al
  405906:	adc    edx,DWORD PTR [edx]
  405908:	or     BYTE PTR [edi-0x38],ch
  40590b:	add    BYTE PTR [eax],al
  40590d:	or     ah,BYTE PTR ds:0x20b78e26
  405913:	inc    esp
  405914:	push   es
  405915:	add    BYTE PTR [eax],al
  405917:	sub    BYTE PTR [eax+0x0],ah
  40591a:	add    BYTE PTR [esi],al
  40591c:	inc    BYTE PTR [edx]
  40591e:	adc    edx,DWORD PTR [ebx]
  405920:	adc    DWORD PTR [ebx],edx
  405922:	sub    al,0x26
  405924:	sbb    eax,0x145
  405929:	add    dh,dh
  40592b:	(bad)  
  40592c:	(bad)  
  40592d:	jmp    DWORD PTR [eax]
  40592f:	dec    eax
  405930:	push   es
  405931:	add    BYTE PTR [eax],al
  405933:	sub    BYTE PTR [eax+0x0],ah
  405936:	add    BYTE PTR [esi],al
  405938:	adc    edx,DWORD PTR [edx]
  40593a:	add    cl,BYTE PTR [eax]
  40593c:	outs   dx,DWORD PTR ds:[esi]
  40593d:	iret   
  40593e:	add    BYTE PTR [eax],al
  405940:	or     al,BYTE PTR [edi+ebp*2]
  405943:	dec    esp
  405944:	add    BYTE PTR [eax],al
  405946:	push   es
  405947:	and    eax,0x11002626
  40594c:	or     al,0x20
  40594e:	dec    esp
  40594f:	push   es
  405950:	add    BYTE PTR [eax],al
  405952:	sub    BYTE PTR [eax+0x0],ah
  405955:	add    BYTE PTR [esi],al
  405957:	(bad)  
  405958:	adc    ecx,DWORD PTR [eax+eiz*1]
  40595b:	push   eax
  40595c:	push   es
  40595d:	add    BYTE PTR [eax],al
  40595f:	sub    BYTE PTR [eax+0x0],ah
  405962:	add    BYTE PTR [esi],al
  405964:	adc    edx,DWORD PTR [edx]
  405966:	add    BYTE PTR [ecx],dl
  405968:	or     al,0x11
  40596a:	or     eax,0x4feb78e
  40596f:	adc    edx,DWORD PTR [ebx]
  405971:	adc    DWORD PTR [ebx],edx
  405973:	cmp    ah,ah
  405975:	std    
  405976:	(bad)  
  405977:	call   FWORD PTR ds:0x145
  40597d:	add    dh,dh
  40597f:	(bad)  
  405980:	(bad)  
  405981:	(bad)  
  405982:	(bad)  
  405984:	add    BYTE PTR [eax],al
  405986:	add    BYTE PTR [ecx],dl
  405988:	adc    DWORD PTR [ebx],ebp
  40598a:	or     eax,0x54201111
  40598f:	push   es
  405990:	add    BYTE PTR [eax],al
  405992:	sub    BYTE PTR [eax+0x0],ah
  405995:	add    BYTE PTR [esi],al
  405997:	pop    eax
  405998:	and    BYTE PTR [eax+0x6],bl
  40599b:	add    BYTE PTR [eax],al
  40599d:	sub    BYTE PTR [eax+0x0],ah
  4059a0:	add    BYTE PTR [esi],al
  4059a2:	adc    edx,DWORD PTR [ecx]
  4059a4:	inc    ebp
  4059a5:	push   ss
  4059a6:	add    BYTE PTR [eax],al
  4059a8:	add    BYTE PTR [eax],al
  4059aa:	add    BYTE PTR [eax],al
  4059ac:	add    BYTE PTR [eax],dl
  4059ae:	std    
  4059af:	(bad)  
  4059b0:	jmp    DWORD PTR [ecx]
  4059b2:	std    
  4059b3:	(bad)  
  4059b4:	push   DWORD PTR [edi*8-0x29e0001]
  4059bb:	(bad)  
  4059bc:	dec    DWORD PTR [esi-0x5b000003]
  4059c2:	std    
  4059c3:	(bad)  
  4059c4:	jmp    ecx
  4059c6:	std    
  4059c7:	(bad)  
  4059c8:	push   edi
  4059ca:	std    
  4059cb:	(bad)  
  4059cc:	jmp    DWORD PTR [eax]
  4059ce:	(bad)  
  4059cf:	(bad)  
  4059d0:	jmp    FWORD PTR [edi]
  4059d2:	(bad)  
  4059d3:	(bad)  
  4059d4:	inc    DWORD PTR [ebp-0x2]
  4059d7:	(bad)  
  4059d8:	call   FWORD PTR [ebp-0x2]
  4059db:	(bad)  
  4059dc:	push   DWORD PTR [ebx-0x2]
  4059df:	(bad)  
  4059e0:	jmp    FWORD PTR [eax-0x32000002]
  4059e6:	(bad)  
  4059e7:	(bad)  
  4059e8:	(bad)  
  4059e9:	(bad)  
  4059eb:	(bad)  
  4059ec:	(bad)  
  4059ed:	sti    
  4059ee:	(bad)  
  4059ef:	(bad)  
  4059f0:	jmp    FWORD PTR ds:0x49ffffff
  4059f6:	(bad)  
  4059f7:	(bad)  
  4059f8:	call   FWORD PTR [ecx-0x1]
  4059fb:	(bad)  
  4059fc:	inc    DWORD PTR [ecx-0x21000001]
  405a02:	ins    DWORD PTR es:[edi],dx
  405a03:	adc    DWORD PTR [edx],edx
  405a05:	adc    edx,DWORD PTR [ecx]
  405a07:	adc    DWORD PTR [eax],edx
  405a09:	and    BYTE PTR [esi+eax*1+0x0],bl
  405a0d:	add    BYTE PTR [eax],ch
  405a0f:	pusha  
  405a10:	add    BYTE PTR [eax],al
  405a12:	push   es
  405a13:	xor    BYTE PTR [esi],dl
  405a15:	sbb    al,BYTE PTR [ebp+0x1]
  405a18:	add    BYTE PTR [eax],al
  405a1a:	add    dh,dh
  405a1c:	(bad)  
  405a1d:	(bad)  
  405a1e:	jmp    DWORD PTR [eax]
  405a20:	pusha  
  405a21:	push   es
  405a22:	add    BYTE PTR [eax],al
  405a24:	sub    BYTE PTR [eax+0x0],ah
  405a27:	add    BYTE PTR [esi],al
  405a29:	sub    eax,DWORD PTR [edx]
  405a2b:	adc    DWORD PTR [eax],edx
  405a2d:	inc    ebp
  405a2e:	add    al,BYTE PTR [eax]
  405a30:	add    BYTE PTR [eax],al
  405a32:	add    BYTE PTR [eax],al
  405a34:	add    BYTE PTR [eax],al
  405a36:	push   ecx
  405a37:	(bad)  
  405a38:	(bad)  
  405a39:	(bad)  
  405a3a:	fidiv  WORD PTR [esi*2+0x100004b]
  405a41:	adc    al,0xfe
  405a43:	add    edx,DWORD PTR [ecx]
  405a45:	adc    BYTE PTR [eax],ah
  405a47:	fs push es
  405a49:	add    BYTE PTR [eax],al
  405a4b:	sub    BYTE PTR [eax+0x0],ah
  405a4e:	add    BYTE PTR [esi],al
  405a50:	inc    BYTE PTR [ebx]
  405a52:	pop    edi
  405a53:	adc    DWORD PTR [ecx],edx
  405a55:	and    BYTE PTR [eax+0x6],ch
  405a58:	add    BYTE PTR [eax],al
  405a5a:	sub    BYTE PTR [eax+0x0],ah
  405a5d:	add    BYTE PTR [esi],al
  405a5f:	inc    BYTE PTR [ecx]
  405a61:	pop    edi
  405a62:	(bad)  
  405a63:	adc    DWORD PTR [ebx+ecx*2+0x0],esi
  405a67:	add    BYTE PTR [ecx],al
  405a69:	sub    BYTE PTR [edi+0x0],dl
  405a6c:	add    BYTE PTR [edx],cl
  405a6e:	ficom  WORD PTR [ebx+0x66c20]
  405a74:	add    BYTE PTR [eax],ch
  405a76:	pusha  
  405a77:	add    BYTE PTR [eax],al
  405a79:	push   es
  405a7a:	sub    BYTE PTR [edx+0x250a0000],bh
  405a80:	es jp  0x405a89
  405a83:	adc    DWORD PTR [ecx],edx
  405a85:	sub    al,0xf
  405a87:	pop    ss
  405a88:	inc    ebp
  405a89:	add    DWORD PTR [eax],eax
  405a8b:	add    BYTE PTR [eax],al
  405a8d:	idiv   bh
  405a8f:	(bad)  
  405a90:	jmp    FWORD PTR [eax]
  405a92:	pop    ebx
  405a93:	add    BYTE PTR [eax],al
  405a95:	or     ch,BYTE PTR [edx]
  405a97:	add    BYTE PTR [ecx+0x1c],al
  405a9a:	add    BYTE PTR [eax],al
  405a9c:	add    DWORD PTR [eax],eax
  405a9e:	add    BYTE PTR [eax],al
  405aa0:	add    DWORD PTR [eax],eax
  405aa2:	add    BYTE PTR [eax],al
  405aa4:	sub    eax,DWORD PTR [ebx]
  405aa6:	add    BYTE PTR [eax],al
  405aa8:	push   esp
  405aa9:	add    eax,DWORD PTR [eax]
  405aab:	add    BYTE PTR [eax+eax*1],cl
  405aae:	add    BYTE PTR [eax],al
  405ab0:	sub    al,0x3
  405ab2:	add    BYTE PTR [eax],al
  405ab4:	sbb    esi,DWORD PTR [eax]
  405ab6:	add    eax,0x29f00
  405abb:	add    BYTE PTR [ebx],ah
  405abd:	add    BYTE PTR [eax],al
  405abf:	adc    DWORD PTR [eax],eax
  405ac1:	sub    BYTE PTR [ebx+0x0],bl
  405ac4:	add    BYTE PTR [edx],cl
  405ac6:	and    BYTE PTR [eax+0x6],dh
  405ac9:	add    BYTE PTR [eax],al
  405acb:	sub    BYTE PTR [eax+0x0],ah
  405ace:	add    BYTE PTR [esi],al
  405ad0:	adc    ecx,DWORD PTR [edx]
  405ad2:	and    BYTE PTR [esi+eax*1+0x0],dh
  405ad6:	add    BYTE PTR [eax],ch
  405ad8:	pusha  
  405ad9:	add    BYTE PTR [eax],al
  405adb:	push   es
  405adc:	adc    ecx,DWORD PTR [ebx+eax*1]
  405adf:	outs   dx,DWORD PTR ds:[esi]
  405ae0:	rol    BYTE PTR [eax],cl
  405ae2:	add    BYTE PTR [edx],cl
  405ae4:	or     eax,0x67820
  405ae9:	add    BYTE PTR [eax],ch
  405aeb:	pusha  
  405aec:	add    BYTE PTR [eax],al
  405aee:	push   es
  405aef:	adc    ecx,DWORD PTR [ecx+ecx*1]
  405af2:	and    BYTE PTR [esi+eax*1+0x0],bh
  405af6:	add    BYTE PTR [eax],ch
  405af8:	pusha  
  405af9:	add    BYTE PTR [eax],al
  405afb:	push   es
  405afc:	outs   dx,DWORD PTR ds:[esi]
  405afd:	rol    DWORD PTR [eax],cl
  405aff:	add    BYTE PTR [edx],cl
  405b01:	and    eax,0x20051326
  405b06:	add    BYTE PTR [esi],0x0
  405b09:	add    BYTE PTR [eax],ch
  405b0b:	pusha  
  405b0c:	add    BYTE PTR [eax],al
  405b0e:	push   es
  405b0f:	adc    ecx,DWORD PTR [ecx+edx*1]
  405b12:	add    eax,0x68420
  405b17:	add    BYTE PTR [eax],ch
  405b19:	pusha  
  405b1a:	add    BYTE PTR [eax],al
  405b1c:	push   es
  405b1d:	(bad)  
  405b1e:	lea    ebx,[esi]
  405b20:	add    BYTE PTR [eax],al
  405b22:	add    DWORD PTR [edx],ecx
  405b24:	and    BYTE PTR [eax+0x28000006],cl
  405b2a:	pusha  
  405b2b:	add    BYTE PTR [eax],al
  405b2d:	push   es
  405b2e:	adc    ecx,DWORD PTR [eax+eiz*1]
  405b31:	mov    WORD PTR [esi],es
  405b33:	add    BYTE PTR [eax],al
  405b35:	sub    BYTE PTR [eax+0x0],ah
  405b38:	add    BYTE PTR [esi],al
  405b3a:	or     DWORD PTR [eax],esp
  405b3c:	nop
  405b3d:	push   es
  405b3e:	add    BYTE PTR [eax],al
  405b40:	sub    BYTE PTR [eax+0x0],ah
  405b43:	add    BYTE PTR [esi],al
  405b45:	outs   dx,DWORD PTR ds:[esi]
  405b46:	rol    DWORD PTR [eax],cl
  405b48:	add    BYTE PTR [edx],cl
  405b4a:	adc    ecx,DWORD PTR [ecx]
  405b4c:	adc    eax,DWORD PTR [edi]
  405b4e:	sub    esi,DWORD PTR [esi]
  405b50:	and    BYTE PTR [esi+eax*1+0x60280000],dl
  405b57:	add    BYTE PTR [eax],al
  405b59:	push   es
  405b5a:	adc    ecx,DWORD PTR [esi+eax*1]
  405b5d:	adc    DWORD PTR [edi],eax
  405b5f:	or     DWORD PTR [ecx],edx
  405b61:	pop    es
  405b62:	xchg   ebx,eax
  405b63:	sub    ah,dl
  405b65:	add    BYTE PTR [eax],al
  405b67:	or     dh,BYTE PTR [esp+ebx*4+0x69820]
  405b6e:	add    BYTE PTR [eax],ch
  405b70:	pusha  
  405b71:	add    BYTE PTR [eax],al
  405b73:	push   es
  405b74:	adc    ecx,DWORD PTR [eax+eax*1]
  405b77:	adc    DWORD PTR [edi],eax
  405b79:	and    BYTE PTR [esi+eax*1+0x60280000],bl
  405b80:	add    BYTE PTR [eax],al
  405b82:	push   es
  405b83:	(bad)  
  405b84:	adc    eax,DWORD PTR [edi]
  405b86:	adc    DWORD PTR [edi],eax
  405b88:	adc    DWORD PTR [ecx],ecx
  405b8a:	adc    ecx,DWORD PTR ds:0xc0310d11
  405b90:	sbb    eax,0x145
  405b95:	add    dh,dh
  405b97:	(bad)  
  405b98:	(bad)  
  405b99:	call   DWORD PTR [edi]
  405b9b:	sub    eax,0x4dd006
  405ba0:	add    BYTE PTR [esi],al
  405ba2:	and    BYTE PTR es:[eax+0x28000006],ah
  405ba9:	pusha  
  405baa:	add    BYTE PTR [eax],al
  405bac:	push   es
  405bad:	adc    ecx,DWORD PTR [ebx+esi*2]
  405bb0:	aad    0x0
  405bb2:	add    BYTE PTR [edx],cl
  405bb4:	adc    eax,DWORD PTR [esi]
  405bb6:	and    BYTE PTR [esi+eax*1+0x60280000],ah
  405bbd:	add    BYTE PTR [eax],al
  405bbf:	push   es
  405bc0:	adc    ecx,DWORD PTR [ecx+edx*1]
  405bc3:	push   es
  405bc4:	push   es
  405bc5:	outs   dx,DWORD PTR ds:[esi]
  405bc6:	(bad)  
  405bc7:	add    BYTE PTR [eax],al
  405bc9:	or     ah,BYTE PTR ds:0xa8200c26
  405bcf:	push   es
  405bd0:	add    BYTE PTR [eax],al
  405bd2:	sub    BYTE PTR [eax+0x0],ah
  405bd5:	add    BYTE PTR [esi],al
  405bd7:	adc    ecx,DWORD PTR [eax+eiz*1]
  405bda:	lods   al,BYTE PTR ds:[esi]
  405bdb:	push   es
  405bdc:	add    BYTE PTR [eax],al
  405bde:	sub    BYTE PTR [eax+0x0],ah
  405be1:	add    BYTE PTR [esi],al
  405be3:	lea    ebx,[esi]
  405be5:	add    BYTE PTR [eax],al
  405be7:	add    DWORD PTR [ebx],ecx
  405be9:	and    BYTE PTR [eax+0x28000006],dh
  405bef:	pusha  
  405bf0:	add    BYTE PTR [eax],al
  405bf2:	push   es
  405bf3:	adc    ecx,DWORD PTR [eax+eiz*1]
  405bf6:	mov    ah,0x6
  405bf8:	add    BYTE PTR [eax],al
  405bfa:	sub    BYTE PTR [eax+0x0],ah
  405bfd:	add    BYTE PTR [esi],al
  405bff:	adc    ecx,DWORD PTR [eax]
  405c01:	and    BYTE PTR [eax+0x28000006],bh
  405c07:	pusha  
  405c08:	add    BYTE PTR [eax],al
  405c0a:	push   es
  405c0b:	adc    ecx,DWORD PTR [edi+eax*1]
  405c0e:	adc    DWORD PTR [eax],ecx
  405c10:	or     BYTE PTR [ecx],dl
  405c12:	or     BYTE PTR [ecx+0x6bc209c],dl
  405c18:	add    BYTE PTR [eax],al
  405c1a:	sub    BYTE PTR [eax+0x0],ah
  405c1d:	add    BYTE PTR [esi],al
  405c1f:	adc    ecx,DWORD PTR [eax+eax*1]
  405c22:	adc    DWORD PTR [eax],ecx
  405c24:	and    al,al
  405c26:	push   es
  405c27:	add    BYTE PTR [eax],al
  405c29:	sub    BYTE PTR [eax+0x0],ah
  405c2c:	add    BYTE PTR [esi],al
  405c2e:	(bad)  
  405c2f:	adc    ecx,DWORD PTR [eax]
  405c31:	adc    DWORD PTR [eax],ecx
  405c33:	and    ah,al
  405c35:	push   es
  405c36:	add    BYTE PTR [eax],al
  405c38:	sub    BYTE PTR [eax+0x0],ah
  405c3b:	add    BYTE PTR [esi],al
  405c3d:	adc    ecx,DWORD PTR ds:0xbe310d11
  405c43:	sbb    BYTE PTR [ebp+0x1],al
  405c46:	add    BYTE PTR [eax],al
  405c48:	add    dh,dh
  405c4a:	(bad)  
  405c4b:	(bad)  
  405c4c:	jmp    DWORD PTR [eax]
  405c4e:	enter  0x6,0x0
  405c52:	sub    BYTE PTR [eax+0x0],ah
  405c55:	add    BYTE PTR [esi],al
  405c57:	adc    ecx,DWORD PTR [edi+eax*1]
  405c5a:	adc    eax,DWORD PTR [ebx*8+0xe8]
  405c61:	fucom  st(3)
  405c63:	add    BYTE PTR [eax],al
  405c65:	add    BYTE PTR [ecx],dl
  405c67:	or     ebp,DWORD PTR [ebx]
  405c69:	or     eax,0xcc200b11
  405c6e:	push   es
  405c6f:	add    BYTE PTR [eax],al
  405c71:	sub    BYTE PTR [eax+0x0],ah
  405c74:	add    BYTE PTR [esi],al
  405c76:	pop    eax
  405c77:	and    al,dl
  405c79:	push   es
  405c7a:	add    BYTE PTR [eax],al
  405c7c:	sub    BYTE PTR [eax+0x0],ah
  405c7f:	add    BYTE PTR [esi],al
  405c81:	adc    ecx,DWORD PTR [ebx]
  405c83:	inc    ebp
  405c84:	adc    BYTE PTR [eax],al
  405c86:	add    BYTE PTR [eax],al
  405c88:	add    BYTE PTR [eax],al
  405c8a:	add    BYTE PTR [eax],al
  405c8c:	stc    
  405c8d:	std    
  405c8e:	(bad)  
  405c8f:	dec    DWORD PTR [edx]
  405c91:	(bad)  
  405c92:	(bad)  
  405c93:	call   FWORD PTR ds:0x3dfffffe
  405c99:	(bad)  
  405c9a:	(bad)  
  405c9b:	call   FWORD PTR [esi+edi*8-0x1]
  405c9f:	dec    DWORD PTR [eax-0x5d000002]
  405ca5:	(bad)  
  405ca6:	(bad)  
  405ca7:	(bad)  
  405ca8:	(bad)  
  405caa:	(bad)  
  405cab:	(bad)  
  405cac:	out    dx,al
  405cad:	(bad)  
  405cae:	(bad)  
  405caf:	inc    DWORD PTR ds:0x21ffffff
  405cb5:	(bad)  
  405cb6:	(bad)  
  405cb7:	(bad)  
  405cb8:	cmp    edi,edi
  405cba:	(bad)  
  405cbb:	dec    DWORD PTR [ebp-0x1]
  405cbe:	(bad)  
  405cbf:	inc    DWORD PTR [ebp-0x66000001]
  405cc5:	(bad)  
  405cc6:	(bad)  
  405cc7:	(bad)  
  405cc8:	fisubr WORD PTR [ebp+0x11]
  405ccb:	or     al,0x13
  405ccd:	or     edx,DWORD PTR [ecx]
  405ccf:	or     ah,BYTE PTR [eax]
  405cd1:	aam    0x6
  405cd3:	add    BYTE PTR [eax],al
  405cd5:	sub    BYTE PTR [eax+0x0],ah
  405cd8:	add    BYTE PTR [esi],al
  405cda:	xor    BYTE PTR [esi],dl
  405cdc:	sbb    eax,0x145
  405ce1:	add    dh,dh
  405ce3:	(bad)  
  405ce4:	(bad)  
  405ce5:	jmp    DWORD PTR [eax]
  405ce7:	fadd   DWORD PTR [esi]
  405ce9:	add    BYTE PTR [eax],al
  405ceb:	sub    BYTE PTR [eax+0x0],ah
  405cee:	add    BYTE PTR [esi],al
  405cf0:	sub    eax,DWORD PTR [edx]
  405cf2:	adc    DWORD PTR [edx],ecx
  405cf4:	inc    ebp
  405cf5:	add    al,BYTE PTR [eax]
  405cf7:	add    BYTE PTR [eax],al
  405cf9:	add    BYTE PTR [eax],al
  405cfb:	add    BYTE PTR [eax],al
  405cfd:	imul   edi,edi,0x34deffff
  405d03:	jne    0x405d50
  405d05:	add    BYTE PTR [eax],al
  405d07:	add    DWORD PTR [esi+edi*8],edx
  405d0a:	add    edx,DWORD PTR [ecx]
  405d0c:	or     ah,BYTE PTR [eax]
  405d0e:	fadd   QWORD PTR [esi]
  405d10:	add    BYTE PTR [eax],al
  405d12:	sub    BYTE PTR [eax+0x0],ah
  405d15:	add    BYTE PTR [esi],al
  405d17:	inc    BYTE PTR [ebx]
  405d19:	pop    edi
  405d1a:	adc    DWORD PTR [ebx],ecx
  405d1c:	and    al,ah
  405d1e:	push   es
  405d1f:	add    BYTE PTR [eax],al
  405d21:	sub    BYTE PTR [eax+0x0],ah
  405d24:	add    BYTE PTR [esi],al
  405d26:	inc    BYTE PTR [ecx]
  405d28:	pop    edi
  405d29:	(bad)  
  405d2a:	adc    DWORD PTR [ebx+ecx*2+0x0],esi
  405d2e:	add    BYTE PTR [ecx],al
  405d30:	sub    BYTE PTR [edi+0x0],dl
  405d33:	add    BYTE PTR [edx],cl
  405d35:	ficom  WORD PTR [ebx+0x6e420]
  405d3b:	add    BYTE PTR [eax],ch
  405d3d:	pusha  
  405d3e:	add    BYTE PTR [eax],al
  405d40:	push   es
  405d41:	sub    BYTE PTR [edx+0x250a0000],bh
  405d47:	es jp  0x405d5b
  405d4a:	add    al,0x11
  405d4c:	or     ebp,DWORD PTR [edi+ecx*1]
  405d4f:	sbb    BYTE PTR [ebp+0x1],al
  405d52:	add    BYTE PTR [eax],al
  405d54:	add    dh,dh
  405d56:	(bad)  
  405d57:	(bad)  
  405d58:	jmp    FWORD PTR [eax]
  405d5a:	pop    ebx
  405d5b:	add    BYTE PTR [eax],al
  405d5d:	or     ch,BYTE PTR [edx]
  405d5f:	add    BYTE PTR [ecx+0x1c],al
  405d62:	add    BYTE PTR [eax],al
  405d64:	add    DWORD PTR [eax],eax
  405d66:	add    BYTE PTR [eax],al
  405d68:	add    DWORD PTR [eax],eax
  405d6a:	add    BYTE PTR [eax],al
  405d6c:	inc    edx
  405d6d:	add    al,BYTE PTR [eax]
  405d6f:	add    BYTE PTR [ebx+0x2],ch
  405d72:	add    BYTE PTR [eax],al
  405d74:	or     al,0x0
  405d76:	add    BYTE PTR [eax],al
  405d78:	inc    ebx
  405d79:	add    al,BYTE PTR [eax]
  405d7b:	add    BYTE PTR [ebx],bl
  405d7d:	xor    BYTE PTR ds:0x29b00,al
  405d83:	add    BYTE PTR [ebx],ah
  405d85:	add    BYTE PTR [eax],al
  405d87:	adc    DWORD PTR [eax],eax
  405d89:	sub    BYTE PTR [ebx+0x0],bl
  405d8c:	add    BYTE PTR [edx],cl
  405d8e:	and    al,ch
  405d90:	push   es
  405d91:	add    BYTE PTR [eax],al
  405d93:	sub    BYTE PTR [eax+0x0],ah
  405d96:	add    BYTE PTR [esi],al
  405d98:	adc    ecx,DWORD PTR [edx]
  405d9a:	and    ah,ch
  405d9c:	push   es
  405d9d:	add    BYTE PTR [eax],al
  405d9f:	sub    BYTE PTR [eax+0x0],ah
  405da2:	add    BYTE PTR [esi],al
  405da4:	adc    ecx,DWORD PTR [ebx+eax*1]
  405da7:	outs   dx,DWORD PTR ds:[esi]
  405da8:	rol    BYTE PTR [eax],cl
  405daa:	add    BYTE PTR [edx],cl
  405dac:	and    eax,0xf0200d26
  405db1:	push   es
  405db2:	add    BYTE PTR [eax],al
  405db4:	sub    BYTE PTR [eax+0x0],ah
  405db7:	add    BYTE PTR [esi],al
  405db9:	adc    ecx,DWORD PTR [ecx+ecx*1]
  405dbc:	and    ah,dh
  405dbe:	push   es
  405dbf:	add    BYTE PTR [eax],al
  405dc1:	sub    BYTE PTR [eax+0x0],ah
  405dc4:	add    BYTE PTR [esi],al
  405dc6:	outs   dx,DWORD PTR ds:[esi]
  405dc7:	rol    DWORD PTR [eax],cl
  405dc9:	add    BYTE PTR [edx],cl
  405dcb:	and    eax,0x20051326
  405dd0:	clc    
  405dd1:	push   es
  405dd2:	add    BYTE PTR [eax],al
  405dd4:	sub    BYTE PTR [eax+0x0],ah
  405dd7:	add    BYTE PTR [esi],al
  405dd9:	adc    ecx,DWORD PTR [ecx+edx*1]
  405ddc:	add    eax,0x6fc20
  405de1:	add    BYTE PTR [eax],ch
  405de3:	pusha  
  405de4:	add    BYTE PTR [eax],al
  405de6:	push   es
  405de7:	(bad)  
  405de8:	lea    ebx,[esi]
  405dea:	add    BYTE PTR [eax],al
  405dec:	add    DWORD PTR [edx],ecx
  405dee:	and    BYTE PTR [eax],al
  405df0:	pop    es
  405df1:	add    BYTE PTR [eax],al
  405df3:	sub    BYTE PTR [eax+0x0],ah
  405df6:	add    BYTE PTR [esi],al
  405df8:	adc    ecx,DWORD PTR [eax+eiz*1]
  405dfb:	add    al,0x7
  405dfd:	add    BYTE PTR [eax],al
  405dff:	sub    BYTE PTR [eax+0x0],ah
  405e02:	add    BYTE PTR [esi],al
  405e04:	or     DWORD PTR [eax],esp
  405e06:	or     BYTE PTR [edi],al
  405e08:	add    BYTE PTR [eax],al
  405e0a:	sub    BYTE PTR [eax+0x0],ah
  405e0d:	add    BYTE PTR [esi],al
  405e0f:	outs   dx,DWORD PTR ds:[esi]
  405e10:	rol    DWORD PTR [eax],cl
  405e12:	add    BYTE PTR [edx],cl
  405e14:	adc    ecx,DWORD PTR [ecx]
  405e16:	adc    eax,DWORD PTR [edi]
  405e18:	sub    edi,DWORD PTR [eax]
  405e1a:	and    BYTE PTR [edi+eax*1],cl
  405e1d:	add    BYTE PTR [eax],al
  405e1f:	sub    BYTE PTR [eax+0x0],ah
  405e22:	add    BYTE PTR [esi],al
  405e24:	adc    ecx,DWORD PTR [esi+eax*1]
  405e27:	adc    DWORD PTR [edi],eax
  405e29:	or     DWORD PTR [ecx],edx
  405e2b:	pop    es
  405e2c:	xchg   ebx,eax
  405e2d:	sub    ah,dl
  405e2f:	add    BYTE PTR [eax],al
  405e31:	or     ah,BYTE PTR ds:0x209cb426
  405e37:	adc    BYTE PTR [edi],al
  405e39:	add    BYTE PTR [eax],al
  405e3b:	sub    BYTE PTR [eax+0x0],ah
  405e3e:	add    BYTE PTR [esi],al
  405e40:	adc    ecx,DWORD PTR [eax+eax*1]
  405e43:	adc    DWORD PTR [edi],eax
  405e45:	and    BYTE PTR [edi+eax*1],dl
  405e48:	add    BYTE PTR [eax],al
  405e4a:	sub    BYTE PTR [eax+0x0],ah
  405e4d:	add    BYTE PTR [esi],al
  405e4f:	(bad)  
  405e50:	adc    eax,DWORD PTR [edi]
  405e52:	adc    DWORD PTR [edi],eax
  405e54:	adc    DWORD PTR [ecx],ecx
  405e56:	adc    ecx,DWORD PTR ds:0xbe310d11
  405e5c:	and    BYTE PTR [eax],bl
  405e5e:	pop    es
  405e5f:	add    BYTE PTR [eax],al
  405e61:	sub    BYTE PTR [eax+0x0],ah
  405e64:	add    BYTE PTR [esi],al
  405e66:	adc    ecx,DWORD PTR [ebx+esi*2]
  405e69:	aad    0x0
  405e6b:	add    BYTE PTR [edx],cl
  405e6d:	adc    eax,DWORD PTR [esi]
  405e6f:	and    BYTE PTR [edi+eax*1],bl
  405e72:	add    BYTE PTR [eax],al
  405e74:	sub    BYTE PTR [eax+0x0],ah
  405e77:	add    BYTE PTR [esi],al
  405e79:	adc    ecx,DWORD PTR [ecx+edx*1]
  405e7c:	push   es
  405e7d:	push   es
  405e7e:	outs   dx,DWORD PTR ds:[esi]
  405e7f:	(bad)  
  405e80:	add    BYTE PTR [eax],al
  405e82:	or     cl,BYTE PTR [eax+eiz*1]
  405e85:	and    BYTE PTR [edi],al
  405e87:	add    BYTE PTR [eax],al
  405e89:	sub    BYTE PTR [eax+0x0],ah
  405e8c:	add    BYTE PTR [esi],al
  405e8e:	adc    ecx,DWORD PTR [eax+eiz*1]
  405e91:	and    al,0x7
  405e93:	add    BYTE PTR [eax],al
  405e95:	sub    BYTE PTR [eax+0x0],ah
  405e98:	add    BYTE PTR [esi],al
  405e9a:	lea    ebx,[esi]
  405e9c:	add    BYTE PTR [eax],al
  405e9e:	add    DWORD PTR [ebx],ecx
  405ea0:	and    BYTE PTR [eax],ch
  405ea2:	pop    es
  405ea3:	add    BYTE PTR [eax],al
  405ea5:	sub    BYTE PTR [eax+0x0],ah
  405ea8:	add    BYTE PTR [esi],al
  405eaa:	adc    ecx,DWORD PTR [eax+eiz*1]
  405ead:	sub    al,0x7
  405eaf:	add    BYTE PTR [eax],al
  405eb1:	sub    BYTE PTR [eax+0x0],ah
  405eb4:	add    BYTE PTR [esi],al
  405eb6:	adc    ecx,DWORD PTR [eax]
  405eb8:	and    BYTE PTR [eax],dh
  405eba:	pop    es
  405ebb:	add    BYTE PTR [eax],al
  405ebd:	sub    BYTE PTR [eax+0x0],ah
  405ec0:	add    BYTE PTR [esi],al
  405ec2:	adc    ecx,DWORD PTR [edi+eax*1]
  405ec5:	adc    DWORD PTR [eax],ecx
  405ec7:	and    BYTE PTR [edi+eax*1],dh
  405eca:	add    BYTE PTR [eax],al
  405ecc:	sub    BYTE PTR [eax+0x0],ah
  405ecf:	add    BYTE PTR [esi],al
  405ed1:	fimul  DWORD PTR [eax]
  405ed3:	adc    DWORD PTR [eax],ecx
  405ed5:	xchg   ecx,eax
  405ed6:	pushf  
  405ed7:	and    BYTE PTR [eax],bh
  405ed9:	pop    es
  405eda:	add    BYTE PTR [eax],al
  405edc:	sub    BYTE PTR [eax+0x0],ah
  405edf:	add    BYTE PTR [esi],al
  405ee1:	adc    ecx,DWORD PTR [eax+eax*1]
  405ee4:	adc    DWORD PTR [eax],ecx
  405ee6:	and    BYTE PTR [edi+eax*1],bh
  405ee9:	add    BYTE PTR [eax],al
  405eeb:	sub    BYTE PTR [eax+0x0],ah
  405eee:	add    BYTE PTR [esi],al
  405ef0:	(bad)  
  405ef1:	adc    ecx,DWORD PTR [eax]
  405ef3:	adc    DWORD PTR [eax],ecx
  405ef5:	and    BYTE PTR [eax+0x7],al
  405ef8:	add    BYTE PTR [eax],al
  405efa:	sub    BYTE PTR [eax+0x0],ah
  405efd:	add    BYTE PTR [esi],al
  405eff:	adc    ecx,DWORD PTR ds:0xb3310d11
  405f05:	and    BYTE PTR [edi+eax*1+0x0],al
  405f09:	add    BYTE PTR [eax],ch
  405f0b:	pusha  
  405f0c:	add    BYTE PTR [eax],al
  405f0e:	push   es
  405f0f:	adc    ecx,DWORD PTR [edi+eax*1]
  405f12:	adc    eax,DWORD PTR [ebx*8+0xf4]
  405f19:	fucomp st(7)
  405f1b:	add    BYTE PTR [eax],al
  405f1d:	add    BYTE PTR [ecx],dl
  405f1f:	or     ebp,DWORD PTR [ebx]
  405f21:	or     eax,0x48200b11
  405f26:	pop    es
  405f27:	add    BYTE PTR [eax],al
  405f29:	sub    BYTE PTR [eax+0x0],ah
  405f2c:	add    BYTE PTR [esi],al
  405f2e:	pop    eax
  405f2f:	and    BYTE PTR [edi+eax*1+0x0],cl
  405f33:	add    BYTE PTR [eax],ch
  405f35:	pusha  
  405f36:	add    BYTE PTR [eax],al
  405f38:	push   es
  405f39:	adc    ecx,DWORD PTR [ebx]
  405f3b:	inc    ebp
  405f3c:	adc    BYTE PTR [eax],al
  405f3e:	add    BYTE PTR [eax],al
  405f40:	add    BYTE PTR [eax],al
  405f42:	add    BYTE PTR [eax],al
  405f44:	or     esi,edi
  405f46:	(bad)  
  405f47:	call   FWORD PTR [edx]
  405f49:	(bad)  
  405f4a:	(bad)  
  405f4b:	jmp    FWORD PTR [edi]
  405f4d:	(bad)  
  405f4e:	(bad)  
  405f4f:	dec    DWORD PTR [edi-0x2]
  405f52:	(bad)  
  405f53:	jmp    FWORD PTR [esi-0x2]
  405f56:	(bad)  
  405f57:	call   FWORD PTR [edx-0x49000002]
  405f5d:	(bad)  
  405f5e:	(bad)  
  405f5f:	(bad)  
  405f60:	fdiv   st(6),st
  405f62:	(bad)  
  405f63:	(bad)  
  405f64:	out    dx,eax
  405f65:	(bad)  
  405f66:	(bad)  
  405f67:	inc    DWORD PTR [edi+edi*8]
  405f6a:	(bad)  
  405f6b:	jmp    DWORD PTR [eax]
  405f6d:	(bad)  
  405f6e:	(bad)  
  405f6f:	(bad)  
  405f70:	cmp    bh,bh
  405f72:	(bad)  
  405f73:	call   DWORD PTR [edi-0x1]
  405f76:	(bad)  
  405f77:	inc    DWORD PTR [ebp-0x66000001]
  405f7d:	(bad)  
  405f7e:	(bad)  
  405f7f:	(bad)  
  405f80:	fnsave [esi+0x0]
  405f83:	add    BYTE PTR [eax],al
  405f85:	adc    DWORD PTR [ebx+edx*1],ecx
  405f88:	or     edx,DWORD PTR [ecx]
  405f8a:	or     ah,BYTE PTR [eax]
  405f8c:	push   eax
  405f8d:	pop    es
  405f8e:	add    BYTE PTR [eax],al
  405f90:	sub    BYTE PTR [eax+0x0],ah
  405f93:	add    BYTE PTR [esi],al
  405f95:	xor    BYTE PTR [edi],bl
  405f97:	sbb    eax,DWORD PTR [ebp+0x1]
  405f9a:	add    BYTE PTR [eax],al
  405f9c:	add    dh,dh
  405f9e:	(bad)  
  405f9f:	(bad)  
  405fa0:	call   DWORD PTR [edi]
  405fa2:	sub    eax,0x4ed006
  405fa7:	add    BYTE PTR [esi],al
  405fa9:	and    BYTE PTR es:[edi+eax*1+0x0],dl
  405fae:	add    BYTE PTR [eax],ch
  405fb0:	pusha  
  405fb1:	add    BYTE PTR [eax],al
  405fb3:	push   es
  405fb4:	sub    eax,DWORD PTR [edx]
  405fb6:	adc    DWORD PTR [edx],ecx
  405fb8:	inc    ebp
  405fb9:	add    al,BYTE PTR [eax]
  405fbb:	add    BYTE PTR [eax],al
  405fbd:	add    BYTE PTR [eax],al
  405fbf:	add    BYTE PTR [eax],al
  405fc1:	pop    ebp
  405fc2:	(bad)  
  405fc3:	(bad)  
  405fc4:	(bad)  
  405fc5:	fidiv  WORD PTR [esi*2+0x100004b]
  405fcc:	adc    al,0xfe
  405fce:	add    edx,DWORD PTR [ecx]
  405fd0:	or     ah,BYTE PTR [eax]
  405fd2:	pop    eax
  405fd3:	pop    es
  405fd4:	add    BYTE PTR [eax],al
  405fd6:	sub    BYTE PTR [eax+0x0],ah
  405fd9:	add    BYTE PTR [esi],al
  405fdb:	inc    BYTE PTR [ebx]
  405fdd:	pop    edi
  405fde:	adc    DWORD PTR [ebx],ecx
  405fe0:	and    BYTE PTR [edi+eax*1+0x0],bl
  405fe4:	add    BYTE PTR [eax],ch
  405fe6:	pusha  
  405fe7:	add    BYTE PTR [eax],al
  405fe9:	push   es
  405fea:	inc    BYTE PTR [ecx]
  405fec:	pop    edi
  405fed:	(bad)  
  405fee:	adc    DWORD PTR [ebx+ecx*2+0x0],esi
  405ff2:	add    BYTE PTR [ecx],al
  405ff4:	sub    BYTE PTR [edi+0x0],dl
  405ff7:	add    BYTE PTR [edx],cl
  405ff9:	fimul  WORD PTR [edx+0x76020]
  405fff:	add    BYTE PTR [eax],ch
  406001:	pusha  
  406002:	add    BYTE PTR [eax],al
  406004:	push   es
  406005:	sub    BYTE PTR [edx+0x250a0000],bh
  40600b:	es jp  0x40601f
  40600e:	add    al,0x11
  406010:	or     ebp,DWORD PTR [edi+ecx*1]
  406013:	pop    ss
  406014:	inc    ebp
  406015:	add    DWORD PTR [eax],eax
  406017:	add    BYTE PTR [eax],al
  406019:	idiv   bh
  40601b:	(bad)  
  40601c:	jmp    FWORD PTR [eax]
  40601e:	pop    ebx
  40601f:	add    BYTE PTR [eax],al
  406021:	or     ch,BYTE PTR [edx]
  406023:	add    BYTE PTR [ecx+0x1c],al
  406026:	add    BYTE PTR [eax],al
  406028:	add    DWORD PTR [eax],eax
  40602a:	add    BYTE PTR [eax],al
  40602c:	add    DWORD PTR [eax],eax
  40602e:	add    BYTE PTR [eax],al
  406030:	add    al,BYTE PTR ds:[eax]
  406033:	add    BYTE PTR [edi+0x2],ah
  406036:	add    BYTE PTR [eax],al
  406038:	or     al,0x0
  40603a:	add    BYTE PTR [eax],al
  40603c:	aas    
  40603d:	add    al,BYTE PTR [eax]
  40603f:	add    BYTE PTR [ebx],bl
  406041:	xor    BYTE PTR ds:0x46e00,al
  406047:	add    BYTE PTR [eax+eax*1],ah
  40604a:	add    BYTE PTR [ecx],dl
  40604c:	add    BYTE PTR [eax],ch
  40604e:	pop    ebx
  40604f:	add    BYTE PTR [eax],al
  406051:	or     ah,BYTE PTR [eax]
  406053:	fs pop es
  406055:	add    BYTE PTR [eax],al
  406057:	sub    BYTE PTR [eax+0x0],ah
  40605a:	add    BYTE PTR [esi],al
  40605c:	adc    ecx,DWORD PTR [ecx]
  40605e:	and    BYTE PTR [eax+0x7],ch
  406061:	add    BYTE PTR [eax],al
  406063:	sub    BYTE PTR [eax+0x0],ah
  406066:	add    BYTE PTR [esi],al
  406068:	adc    ecx,DWORD PTR [ebx]
  40606a:	add    al,BYTE PTR [ebx]
  40606c:	and    BYTE PTR [edi+eax*1+0x0],ch
  406070:	add    BYTE PTR [eax],ch
  406072:	pusha  
  406073:	add    BYTE PTR [eax],al
  406075:	push   es
  406076:	and    BYTE PTR [eax+0x7],dh
  406079:	add    BYTE PTR [eax],al
  40607b:	sub    BYTE PTR [eax+0x0],ah
  40607e:	add    BYTE PTR [esi],al
  406080:	jae    0x406059
  406082:	add    BYTE PTR [eax],al
  406084:	or     bh,BYTE PTR [ebp+0x1b]
  406087:	add    BYTE PTR [eax],al
  406089:	add    al,0x20
  40608b:	je     0x406094
  40608d:	add    BYTE PTR [eax],al
  40608f:	sub    BYTE PTR [eax+0x0],ah
  406092:	add    BYTE PTR [esi],al
  406094:	adc    ecx,DWORD PTR [ebx]
  406096:	add    al,BYTE PTR [eax+eiz*1]
  406099:	js     0x4060a2
  40609b:	add    BYTE PTR [eax],al
  40609d:	sub    BYTE PTR [eax+0x0],ah
  4060a0:	add    BYTE PTR [esi],al
  4060a2:	and    BYTE PTR [edi+eax*1+0x0],bh
  4060a6:	add    BYTE PTR [eax],ch
  4060a8:	pusha  
  4060a9:	add    BYTE PTR [eax],al
  4060ab:	push   es
  4060ac:	jae    0x406085
  4060ae:	add    BYTE PTR [eax],al
  4060b0:	or     bh,BYTE PTR [ebp+0x1c]
  4060b3:	add    BYTE PTR [eax],al
  4060b5:	add    al,0x20
  4060b7:	add    BYTE PTR [edi],0x0
  4060ba:	add    BYTE PTR [eax],ch
  4060bc:	pusha  
  4060bd:	add    BYTE PTR [eax],al
  4060bf:	push   es
  4060c0:	adc    ecx,DWORD PTR [ebx]
  4060c2:	add    bh,BYTE PTR [ebx+0x1c]
  4060c5:	add    BYTE PTR [eax],al
  4060c7:	add    al,0x20
  4060c9:	test   BYTE PTR [edi],al
  4060cb:	add    BYTE PTR [eax],al
  4060cd:	sub    BYTE PTR [eax+0x0],ah
  4060d0:	add    BYTE PTR [esi],al
  4060d2:	push   0x6f
  4060d4:	fadd   DWORD PTR [eax]
  4060d6:	add    BYTE PTR [edx],cl
  4060d8:	add    BYTE PTR [eax],ah
  4060da:	mov    BYTE PTR [edi],al
  4060dc:	add    BYTE PTR [eax],al
  4060de:	sub    BYTE PTR [eax+0x0],ah
  4060e1:	add    BYTE PTR [esi],al
  4060e3:	adc    ecx,DWORD PTR [ebx]
  4060e5:	and    BYTE PTR [edi+eax*1+0x60280000],cl
  4060ec:	add    BYTE PTR [eax],al
  4060ee:	push   es
  4060ef:	lea    ebx,[esi]
  4060f1:	add    BYTE PTR [eax],al
  4060f3:	add    DWORD PTR [edx],ecx
  4060f5:	and    BYTE PTR [eax+0x28000007],dl
  4060fb:	pusha  
  4060fc:	add    BYTE PTR [eax],al
  4060fe:	push   es
  4060ff:	adc    ecx,DWORD PTR [ebx]
  406101:	and    BYTE PTR [edi+eax*1+0x60280000],dl
  406108:	add    BYTE PTR [eax],al
  40610a:	push   es
  40610b:	push   0x13
  40610d:	add    al,0x20
  40610f:	cwde   
  406110:	pop    es
  406111:	add    BYTE PTR [eax],al
  406113:	sub    BYTE PTR [eax+0x0],ah
  406116:	add    BYTE PTR [esi],al
  406118:	adc    ecx,DWORD PTR [ebx]
  40611a:	add    bh,BYTE PTR [ebx+0x1b]
  40611d:	add    BYTE PTR [eax],al
  40611f:	add    al,0x6f
  406121:	fld    DWORD PTR [eax]
  406123:	add    BYTE PTR [edx],cl
  406125:	and    eax,0x20051326
  40612a:	pushf  
  40612b:	pop    es
  40612c:	add    BYTE PTR [eax],al
  40612e:	sub    BYTE PTR [eax+0x0],ah
  406131:	add    BYTE PTR [esi],al
  406133:	adc    ecx,DWORD PTR [ebx]
  406135:	jae    0x406111
  406137:	add    BYTE PTR [eax],al
  406139:	or     cl,BYTE PTR [eax+eiz*1]
  40613c:	mov    al,ds:0x28000007
  406141:	pusha  
  406142:	add    BYTE PTR [eax],al
  406144:	push   es
  406145:	adc    ecx,DWORD PTR [ebx]
  406147:	add    BYTE PTR [esi],cl
  406149:	add    eax,0x7a420
  40614e:	add    BYTE PTR [eax],ch
  406150:	pusha  
  406151:	add    BYTE PTR [eax],al
  406153:	push   es
  406154:	pop    ecx
  406155:	adc    ecx,DWORD PTR [ecx+edx*1]
  406158:	or     al,0x45
  40615a:	add    al,BYTE PTR [eax]
  40615c:	add    BYTE PTR [eax],al
  40615e:	add    al,BYTE PTR [eax]
  406160:	add    BYTE PTR [eax],al
  406162:	xor    al,BYTE PTR [eax]
  406164:	add    BYTE PTR [eax],al
  406166:	sub    ebx,DWORD PTR [esi+0x0]
  406169:	and    BYTE PTR [eax+0x28000007],ch
  40616f:	pusha  
  406170:	add    BYTE PTR [eax],al
  406172:	push   es
  406173:	adc    ecx,DWORD PTR [ebx]
  406175:	add    bh,BYTE PTR [ebx+0x1c]
  406178:	add    BYTE PTR [eax],al
  40617a:	add    al,0x8
  40617c:	add    eax,0xdb6f040e
  406181:	add    BYTE PTR [eax],al
  406183:	or     ah,BYTE PTR ds:0x7ac2026
  406189:	add    BYTE PTR [eax],al
  40618b:	sub    BYTE PTR [eax+0x0],ah
  40618e:	add    BYTE PTR [esi],al
  406190:	jae    0x40616e
  406192:	add    BYTE PTR [eax],al
  406194:	or     cl,BYTE PTR [ebx]
  406196:	sub    ebp,DWORD PTR [esi]
  406198:	add    BYTE PTR [eax],ah
  40619a:	mov    al,0x7
  40619c:	add    BYTE PTR [eax],al
  40619e:	sub    BYTE PTR [eax+0x0],ah
  4061a1:	add    BYTE PTR [esi],al
  4061a3:	adc    ecx,DWORD PTR [ebx]
  4061a5:	add    bh,BYTE PTR [ebx+0x1c]
  4061a8:	add    BYTE PTR [eax],al
  4061aa:	add    al,0x8
  4061ac:	add    eax,0xdd6f040e
  4061b1:	add    BYTE PTR [eax],al
  4061b3:	or     ah,BYTE PTR ds:0x7b42026
  4061b9:	add    BYTE PTR [eax],al
  4061bb:	sub    BYTE PTR [eax+0x0],ah
  4061be:	add    BYTE PTR [esi],al
  4061c0:	jae    0x40619e
  4061c2:	add    BYTE PTR [eax],al
  4061c4:	or     cl,BYTE PTR [ebx]
  4061c6:	add    BYTE PTR [ebx],ch
  4061c8:	bound  esp,QWORD PTR [eax]
  4061ca:	mov    eax,0x28000007
  4061cf:	pusha  
  4061d0:	add    BYTE PTR [eax],al
  4061d2:	push   es
  4061d3:	adc    ecx,DWORD PTR [ebx]
  4061d5:	add    bh,BYTE PTR [ebx+0x1b]
  4061d8:	add    BYTE PTR [eax],al
  4061da:	add    al,0x6
  4061dc:	and    BYTE PTR [edi+eax*1+0x60280000],bh
  4061e3:	add    BYTE PTR [eax],al
  4061e5:	push   es
  4061e6:	and    al,al
  4061e8:	pop    es
  4061e9:	add    BYTE PTR [eax],al
  4061eb:	sub    BYTE PTR [eax+0x0],ah
  4061ee:	add    BYTE PTR [esi],al
  4061f0:	outs   dx,DWORD PTR ds:[esi]
  4061f1:	fiadd  WORD PTR [eax]
  4061f3:	add    BYTE PTR [edx],cl
  4061f5:	and    eax,0xc4200d26
  4061fa:	pop    es
  4061fb:	add    BYTE PTR [eax],al
  4061fd:	sub    BYTE PTR [eax+0x0],ah
  406200:	add    BYTE PTR [esi],al
  406202:	adc    ecx,DWORD PTR [ebx]
  406204:	pop    es
  406205:	push   es
  406206:	and    al,cl
  406208:	pop    es
  406209:	add    BYTE PTR [eax],al
  40620b:	sub    BYTE PTR [eax+0x0],ah
  40620e:	add    BYTE PTR [esi],al
  406210:	or     DWORD PTR [edi-0x21],ebp
  406213:	add    BYTE PTR [eax],al
  406215:	or     al,BYTE PTR [eax]
  406217:	and    ah,cl
  406219:	pop    es
  40621a:	add    BYTE PTR [eax],al
  40621c:	sub    BYTE PTR [eax+0x0],ah
  40621f:	add    BYTE PTR [esi],al
  406221:	adc    ecx,DWORD PTR [ebx]
  406223:	adc    DWORD PTR [ecx+ecx*1],eax
  406226:	push   0xffffffd6
  406228:	adc    eax,DWORD PTR [eax+eax*1]
  40622b:	and    al,dl
  40622d:	pop    es
  40622e:	add    BYTE PTR [eax],al
  406230:	sub    BYTE PTR [eax+0x0],ah
  406233:	add    BYTE PTR [esi],al
  406235:	adc    ecx,DWORD PTR [ebx]
  406237:	adc    DWORD PTR [ecx+edx*1],eax
  40623a:	add    eax,0xd1304fe
  40623f:	adc    DWORD PTR ds:0x451d862d,ecx
  406245:	add    DWORD PTR [eax],eax
  406247:	add    BYTE PTR [eax],al
  406249:	idiv   bh
  40624b:	(bad)  
  40624c:	call   DWORD PTR [edi]
  40624e:	sub    eax,0x4fd006
  406253:	add    BYTE PTR [esi],al
  406255:	es and ah,dl
  406258:	pop    es
  406259:	add    BYTE PTR [eax],al
  40625b:	sub    BYTE PTR [eax+0x0],ah
  40625e:	add    BYTE PTR [esi],al
  406260:	adc    ecx,DWORD PTR [ebx]
  406262:	pop    es
  406263:	outs   dx,DWORD PTR ds:[esi]
  406264:	loopne 0x406266
  406266:	add    BYTE PTR [edx],cl
  406268:	add    BYTE PTR [eax],ah
  40626a:	fadd   DWORD PTR [edi]
  40626c:	add    BYTE PTR [eax],al
  40626e:	sub    BYTE PTR [eax+0x0],ah
  406271:	add    BYTE PTR [esi],al
  406273:	adc    ecx,DWORD PTR [ebx]
  406275:	add    bh,BYTE PTR [ebx+0x1b]
  406278:	add    BYTE PTR [eax],al
  40627a:	add    al,0x6f
  40627c:	loopne 0x40627e
  40627e:	add    BYTE PTR [edx],cl
  406280:	add    BYTE PTR [eax],ah
  406282:	fadd   QWORD PTR [edi]
  406284:	add    BYTE PTR [eax],al
  406286:	sub    BYTE PTR [eax+0x0],ah
  406289:	add    BYTE PTR [esi],al
  40628b:	adc    ecx,DWORD PTR [ebx]
  40628d:	add    bh,BYTE PTR [ebx+0x1c]
  406290:	add    BYTE PTR [eax],al
  406292:	add    al,0x6f
  406294:	loopne 0x406296
  406296:	add    BYTE PTR [edx],cl
  406298:	add    BYTE PTR [eax],ah
  40629a:	loopne 0x4062a3
  40629c:	add    BYTE PTR [eax],al
  40629e:	sub    BYTE PTR [eax+0x0],ah
  4062a1:	add    BYTE PTR [esi],al
  4062a3:	adc    ecx,DWORD PTR [ebx]
  4062a5:	push   cs
  4062a6:	add    eax,0x7e420
  4062ab:	add    BYTE PTR [eax],ch
  4062ad:	pusha  
  4062ae:	add    BYTE PTR [eax],al
  4062b0:	push   es
  4062b1:	inc    BYTE PTR [ecx]
  4062b3:	adc    ecx,DWORD PTR ds:0x322c0d11
  4062b9:	sbb    al,BYTE PTR [ebp+0x1]
  4062bc:	add    BYTE PTR [eax],al
  4062be:	add    dh,dh
  4062c0:	(bad)  
  4062c1:	(bad)  
  4062c2:	jmp    DWORD PTR [eax]
  4062c4:	call   0x284062d0
  4062c9:	pusha  
  4062ca:	add    BYTE PTR [eax],al
  4062cc:	push   es
  4062cd:	adc    ecx,DWORD PTR [ebx]
  4062cf:	add    esi,DWORD PTR [ebx-0x1f]
  4062d2:	add    BYTE PTR [eax],al
  4062d4:	or     dl,BYTE PTR [ebx]
  4062d6:	push   es
  4062d7:	and    ah,ch
  4062d9:	pop    es
  4062da:	add    BYTE PTR [eax],al
  4062dc:	sub    BYTE PTR [eax+0x0],ah
  4062df:	add    BYTE PTR [esi],al
  4062e1:	adc    ecx,DWORD PTR [ebx]
  4062e3:	adc    DWORD PTR [esi],eax
  4062e5:	outs   dx,DWORD PTR ds:[esi]
  4062e6:	loop   0x4062e8
  4062e8:	add    BYTE PTR [edx],cl
  4062ea:	add    BYTE PTR [eax],al
  4062ec:	and    al,dh
  4062ee:	pop    es
  4062ef:	add    BYTE PTR [eax],al
  4062f1:	sub    BYTE PTR [eax+0x0],ah
  4062f4:	add    BYTE PTR [esi],al
  4062f6:	adc    ecx,DWORD PTR [ebx]
  4062f8:	push   cs
  4062f9:	add    eax,0x7f420
  4062fe:	add    BYTE PTR [eax],ch
  406300:	pusha  
  406301:	add    BYTE PTR [eax],al
  406303:	push   es
  406304:	inc    BYTE PTR [ecx]
  406306:	adc    ecx,DWORD PTR ds:0x282c0d11
  40630c:	and    al,bh
  40630e:	pop    es
  40630f:	add    BYTE PTR [eax],al
  406311:	sub    BYTE PTR [eax+0x0],ah
  406314:	add    BYTE PTR [esi],al
  406316:	adc    ecx,DWORD PTR [ebx]
  406318:	add    esi,DWORD PTR [ebx-0x1f]
  40631b:	add    BYTE PTR [eax],al
  40631d:	or     dl,BYTE PTR [ebx]
  40631f:	pop    es
  406320:	and    ah,bh
  406322:	pop    es
  406323:	add    BYTE PTR [eax],al
  406325:	sub    BYTE PTR [eax+0x0],ah
  406328:	add    BYTE PTR [esi],al
  40632a:	adc    ecx,DWORD PTR [ebx]
  40632c:	adc    DWORD PTR [edi],eax
  40632e:	outs   dx,DWORD PTR ds:[esi]
  40632f:	loop   0x406331
  406331:	add    BYTE PTR [edx],cl
  406333:	add    BYTE PTR [eax],al
  406335:	and    BYTE PTR [eax],al
  406337:	or     BYTE PTR [eax],al
  406339:	add    BYTE PTR [eax],ch
  40633b:	pusha  
  40633c:	add    BYTE PTR [eax],al
  40633e:	push   es
  40633f:	adc    ecx,DWORD PTR [ebx]
  406341:	add    bh,BYTE PTR [ebx+0x1b]
  406344:	add    BYTE PTR [eax],al
  406346:	add    al,0x6f
  406348:	loopne 0x40634a
  40634a:	add    BYTE PTR [edx],cl
  40634c:	add    BYTE PTR [eax],ah
  40634e:	add    al,0x8
  406350:	add    BYTE PTR [eax],al
  406352:	sub    BYTE PTR [eax+0x0],ah
  406355:	add    BYTE PTR [esi],al
  406357:	adc    ecx,DWORD PTR [ebx]
  406359:	add    bh,BYTE PTR [ebx+0x1c]
  40635c:	add    BYTE PTR [eax],al
  40635e:	add    al,0x6f
  406360:	loopne 0x406362
  406362:	add    BYTE PTR [edx],cl
  406364:	add    ch,bl
  406366:	cmp    eax,DWORD PTR [ecx]
  406368:	add    BYTE PTR [eax],al
  40636a:	adc    DWORD PTR [edx],ecx
  40636c:	sub    ecx,DWORD PTR ds:0x8200a11
  406372:	or     BYTE PTR [eax],al
  406374:	add    BYTE PTR [eax],ch
  406376:	pusha  
  406377:	add    BYTE PTR [eax],al
  406379:	push   es
  40637a:	pop    eax
  40637b:	and    BYTE PTR [eax+ecx*1],cl
  40637e:	add    BYTE PTR [eax],al
  406380:	sub    BYTE PTR [eax+0x0],ah
  406383:	add    BYTE PTR [esi],al
  406385:	adc    ecx,DWORD PTR [edx]
  406387:	inc    ebp
  406388:	add    BYTE PTR es:[eax],al
  40638b:	add    BYTE PTR [eax],al
  40638d:	add    BYTE PTR [eax],al
  40638f:	add    BYTE PTR [ecx],ch
  406391:	cld    
  406392:	(bad)  
  406393:	(bad)  
  406394:	cmp    bh,ah
  406396:	(bad)  
  406397:	jmp    DWORD PTR [esi-0x4]
  40639a:	(bad)  
  40639b:	call   DWORD PTR [edx-0x4a000004]
  4063a1:	cld    
  4063a2:	(bad)  
  4063a3:	call   ecx
  4063a5:	cld    
  4063a6:	(bad)  
  4063a7:	(bad)  
  4063a8:	jmp    0xfffd:0x5fffffc
  4063af:	call   DWORD PTR [edi]
  4063b1:	std    
  4063b2:	(bad)  
  4063b3:	jmp    DWORD PTR [edx+0x45fffffd]
  4063b9:	std    
  4063ba:	(bad)  
  4063bb:	inc    DWORD PTR [eax]
  4063bd:	add    BYTE PTR [eax],al
  4063bf:	add    BYTE PTR [ebp-0x3],al
  4063c2:	(bad)  
  4063c3:	push   DWORD PTR [edx-0x3]
  4063c6:	(bad)  
  4063c7:	push   DWORD PTR [ebp-0x3]
  4063ca:	(bad)  
  4063cb:	push   DWORD PTR [ebp-0x3]
  4063ce:	(bad)  
  4063cf:	jmp    DWORD PTR [edx-0x5c000003]
  4063d5:	std    
  4063d6:	(bad)  
  4063d7:	inc    DWORD PTR [edi]
  4063d9:	(bad)  
  4063da:	(bad)  
  4063db:	jmp    DWORD PTR [ebp-0x2b000003]
  4063e1:	std    
  4063e2:	(bad)  
  4063e3:	push   ebx
  4063e5:	std    
  4063e6:	(bad)  
  4063e7:	inc    DWORD PTR [esi]
  4063e9:	(bad)  
  4063ea:	(bad)  
  4063eb:	push   DWORD PTR [edx]
  4063ed:	(bad)  
  4063ee:	(bad)  
  4063ef:	inc    DWORD PTR [ebp-0x2]
  4063f2:	(bad)  
  4063f3:	call   FWORD PTR [ebp-0x2]
  4063f6:	(bad)  
  4063f7:	push   DWORD PTR [ebp-0x2]
  4063fa:	(bad)  
  4063fb:	call   FWORD PTR [edi-0x4c000002]
  406401:	(bad)  
  406402:	(bad)  
  406403:	inc    edi
  406405:	(bad)  
  406406:	(bad)  
  406407:	dec    eax
  406409:	(bad)  
  40640a:	(bad)  
  40640b:	(bad)  
  40640c:	call   0xfd40640f
  406411:	(bad)  
  406412:	(bad)  
  406413:	call   DWORD PTR [eax]
  406415:	(bad)  
  406416:	(bad)  
  406417:	call   DWORD PTR [ecx]
  406419:	(bad)  
  40641a:	(bad)  
  40641b:	jmp    FWORD PTR [ecx]
  40641d:	(bad)  
  40641e:	(bad)  
  40641f:	inc    DWORD PTR [ecx-0x1]
  406422:	(bad)  
  406423:	(bad)  
  406424:	fisubr WORD PTR [ebp+0x11]
  406427:	or     edx,DWORD PTR [ebx]
  406429:	or     dl,BYTE PTR [ecx]
  40642b:	or     DWORD PTR [eax],esp
  40642d:	adc    BYTE PTR [eax],cl
  40642f:	add    BYTE PTR [eax],al
  406431:	sub    BYTE PTR [eax+0x0],ah
  406434:	add    BYTE PTR [esi],al
  406436:	xor    BYTE PTR [esi],dl
  406438:	pop    ss
  406439:	inc    ebp
  40643a:	add    DWORD PTR [eax],eax
  40643c:	add    BYTE PTR [eax],al
  40643e:	idiv   bh
  406440:	(bad)  
  406441:	jmp    DWORD PTR [eax]
  406443:	adc    al,0x8
  406445:	add    BYTE PTR [eax],al
  406447:	sub    BYTE PTR [eax+0x0],ah
  40644a:	add    BYTE PTR [esi],al
  40644c:	sub    eax,DWORD PTR [edx]
  40644e:	adc    DWORD PTR [ecx],ecx
  406450:	inc    ebp
  406451:	add    al,BYTE PTR [eax]
  406453:	add    BYTE PTR [eax],al
  406455:	add    BYTE PTR [eax],al
  406457:	add    BYTE PTR [eax],al
  406459:	adc    edi,edi
  40645b:	(bad)  
  40645c:	(bad)  
  40645d:	fidiv  WORD PTR [esi*2+0x100004b]
  406464:	adc    al,0xfe
  406466:	add    edx,DWORD PTR [ecx]
  406468:	or     DWORD PTR [eax],esp
  40646a:	sbb    BYTE PTR [eax],cl
  40646c:	add    BYTE PTR [eax],al
  40646e:	sub    BYTE PTR [eax+0x0],ah
  406471:	add    BYTE PTR [esi],al
  406473:	inc    BYTE PTR [ebx]
  406475:	pop    edi
  406476:	adc    DWORD PTR [edx],ecx
  406478:	and    BYTE PTR [eax+ecx*1],bl
  40647b:	add    BYTE PTR [eax],al
  40647d:	sub    BYTE PTR [eax+0x0],ah
  406480:	add    BYTE PTR [esi],al
  406482:	inc    BYTE PTR [ecx]
  406484:	pop    edi
  406485:	(bad)  
  406486:	adc    DWORD PTR [ebx+ecx*2+0x0],esi
  40648a:	add    BYTE PTR [ecx],al
  40648c:	sub    BYTE PTR [edi+0x0],dl
  40648f:	add    BYTE PTR [edx],cl
  406491:	ficom  WORD PTR [ebx+0x82020]
  406497:	add    BYTE PTR [eax],ch
  406499:	pusha  
  40649a:	add    BYTE PTR [eax],al
  40649c:	push   es
  40649d:	sub    BYTE PTR [edx+0x250a0000],bh
  4064a3:	es jp  0x4064a6
  4064a6:	adc    DWORD PTR [edx],ecx
  4064a8:	sub    al,0xf
  4064aa:	sbb    BYTE PTR [ebp+0x1],al
  4064ad:	add    BYTE PTR [eax],al
  4064af:	add    dh,dh
  4064b1:	(bad)  
  4064b2:	(bad)  
  4064b3:	jmp    FWORD PTR [eax]
  4064b5:	pop    ebx
  4064b6:	add    BYTE PTR [eax],al
  4064b8:	or     ch,BYTE PTR [edx]
  4064ba:	add    BYTE PTR [eax],al
  4064bc:	inc    ecx
  4064bd:	sbb    al,0x0
  4064bf:	add    BYTE PTR [ecx],al
  4064c1:	add    BYTE PTR [eax],al
  4064c3:	add    BYTE PTR [ecx],al
  4064c5:	add    BYTE PTR [eax],al
  4064c7:	add    BYTE PTR [edx],dl
  4064c9:	add    al,0x0
  4064cb:	add    BYTE PTR [ebx],bh
  4064cd:	add    al,0x0
  4064cf:	add    BYTE PTR [eax+eax*1],cl
  4064d2:	add    BYTE PTR [eax],al
  4064d4:	adc    eax,DWORD PTR [eax+eax*1]
  4064d7:	add    BYTE PTR [ebx],bl
  4064d9:	xor    BYTE PTR [eax+eax*1],al
  4064dc:	sbb    eax,DWORD PTR [ecx]
  4064de:	add    BYTE PTR [eax],al
  4064e0:	and    eax,0x110000
  4064e5:	sub    BYTE PTR [ebx+0x0],bl
  4064e8:	add    BYTE PTR [edx],cl
  4064ea:	and    BYTE PTR [eax+ecx*1],ah
  4064ed:	add    BYTE PTR [eax],al
  4064ef:	sub    BYTE PTR [eax+0x0],ah
  4064f2:	add    BYTE PTR [esi],al
  4064f4:	or     al,0x20
  4064f6:	sub    BYTE PTR [eax],cl
  4064f8:	add    BYTE PTR [eax],al
  4064fa:	sub    BYTE PTR [eax+0x0],ah
  4064fd:	add    BYTE PTR [esi],al
  4064ff:	adc    eax,DWORD PTR [eax+ebp*1]
  406502:	jecxz  0x406504
  406504:	add    BYTE PTR [edx],cl
  406506:	and    eax,0x2c200b26
  40650b:	or     BYTE PTR [eax],al
  40650d:	add    BYTE PTR [eax],ch
  40650f:	pusha  
  406510:	add    BYTE PTR [eax],al
  406512:	push   es
  406513:	adc    eax,DWORD PTR [edi+eax*1]
  406516:	and    BYTE PTR [eax],dh
  406518:	or     BYTE PTR [eax],al
  40651a:	add    BYTE PTR [eax],ch
  40651c:	pusha  
  40651d:	add    BYTE PTR [eax],al
  40651f:	push   es
  406520:	call   0x250a:0xe46f
  406527:	outs   dx,DWORD PTR es:[esi]
  406529:	in     eax,0x0
  40652b:	add    BYTE PTR [edx],cl
  40652d:	and    eax,0xc0dd0a26
  406532:	add    BYTE PTR [eax],al
  406534:	add    ch,bl
  406536:	mov    ebx,0x9000000
  40653b:	sub    ecx,DWORD PTR [ecx+ecx*1]
  40653e:	and    BYTE PTR [eax+ecx*1],dh
  406541:	add    BYTE PTR [eax],al
  406543:	sub    BYTE PTR [eax+0x0],ah
  406546:	add    BYTE PTR [esi],al
  406548:	pop    eax
  406549:	and    BYTE PTR [eax],bh
  40654b:	or     BYTE PTR [eax],al
  40654d:	add    BYTE PTR [eax],ch
  40654f:	pusha  
  406550:	add    BYTE PTR [eax],al
  406552:	push   es
  406553:	or     eax,0x545
  406558:	add    BYTE PTR [eax],al
  40655a:	add    BYTE PTR [eax],al
  40655c:	add    BYTE PTR [eax-0x1],bh
  40655f:	(bad)  
  406560:	dec    DWORD PTR [eax-0x63000001]
  406566:	(bad)  
  406567:	(bad)  
  406568:	dec    eax
  40656a:	(bad)  
  40656b:	(bad)  
  40656c:	(bad)  
  40656d:	fnsave [ecx+0x0]
  406570:	add    BYTE PTR [eax],al
  406572:	adc    DWORD PTR [ecx*1+0x83c2008],eax
  406579:	add    BYTE PTR [eax],al
  40657b:	sub    BYTE PTR [eax+0x0],ah
  40657e:	add    BYTE PTR [esi],al
  406580:	xor    BYTE PTR [edi],bl
  406582:	sbb    al,0x45
  406584:	add    DWORD PTR [eax],eax
  406586:	add    BYTE PTR [eax],al
  406588:	idiv   bh
  40658a:	(bad)  
  40658b:	call   DWORD PTR [edi]
  40658d:	sub    eax,0x50d006
  406592:	add    BYTE PTR [esi],al
  406594:	and    BYTE PTR es:[eax+0x8],al
  406598:	add    BYTE PTR [eax],al
  40659a:	sub    BYTE PTR [eax+0x0],ah
  40659d:	add    BYTE PTR [esi],al
  40659f:	sub    eax,DWORD PTR [ecx]
  4065a1:	or     BYTE PTR [ebp+0x2],al
  4065a4:	add    BYTE PTR [eax],al
  4065a6:	add    BYTE PTR [eax],al
  4065a8:	add    BYTE PTR [eax],al
  4065aa:	add    BYTE PTR [esi-0x21000001],cl
  4065b0:	xor    dh,BYTE PTR [ebp+0x4b]
  4065b3:	add    BYTE PTR [eax],al
  4065b5:	add    DWORD PTR [esi+edi*8],edx
  4065b8:	add    ecx,DWORD PTR [eax]
  4065ba:	and    BYTE PTR [eax+ecx*1+0x0],al
  4065be:	add    BYTE PTR [eax],ch
  4065c0:	pusha  
  4065c1:	add    BYTE PTR [eax],al
  4065c3:	push   es
  4065c4:	inc    BYTE PTR [ebx]
  4065c6:	pop    edi
  4065c7:	or     DWORD PTR [eax],esp
  4065c9:	dec    eax
  4065ca:	or     BYTE PTR [eax],al
  4065cc:	add    BYTE PTR [eax],ch
  4065ce:	pusha  
  4065cf:	add    BYTE PTR [eax],al
  4065d1:	push   es
  4065d2:	inc    BYTE PTR [ecx]
  4065d4:	pop    edi
  4065d5:	(bad)  
  4065d6:	adc    DWORD PTR [ebx+ecx*2+0x0],esi
  4065da:	add    BYTE PTR [ecx],al
  4065dc:	sub    BYTE PTR [edi+0x0],dl
  4065df:	add    BYTE PTR [edx],cl
  4065e1:	fimul  WORD PTR [edi+0x84c20]
  4065e7:	add    BYTE PTR [eax],ch
  4065e9:	pusha  
  4065ea:	add    BYTE PTR [eax],al
  4065ec:	push   es
  4065ed:	sub    BYTE PTR [edx+0x250a0000],bh
  4065f3:	es jp  0x4065fc
  4065f6:	or     DWORD PTR [eax*1+0x5b28],ebp
  4065fd:	or     ch,BYTE PTR [edx]
  4065ff:	add    BYTE PTR [ecx],al
  406601:	adc    BYTE PTR [eax],al
  406603:	add    BYTE PTR [ecx],al
  406605:	add    BYTE PTR [ecx],al
  406607:	add    ah,cl
  406609:	repz add BYTE PTR [ecx*8+0x1b000000],cl
  406611:	xor    BYTE PTR [esi],al
  406613:	add    BYTE PTR [edx],bl
  406615:	add    al,BYTE PTR [eax]
  406617:	add    BYTE PTR [esi],ah
  406619:	add    BYTE PTR [eax],al
  40661b:	adc    DWORD PTR [eax],eax
  40661d:	sub    BYTE PTR [ebx+0x0],bl
  406620:	add    BYTE PTR [edx],cl
  406622:	and    BYTE PTR [eax+0x8],dl
  406625:	add    BYTE PTR [eax],al
  406627:	sub    BYTE PTR [eax+0x0],ah
  40662a:	add    BYTE PTR [esi],al
  40662c:	adc    eax,DWORD PTR [eax+eiz*1]
  40662f:	push   esp
  406630:	or     BYTE PTR [eax],al
  406632:	add    BYTE PTR [eax],ch
  406634:	pusha  
  406635:	add    BYTE PTR [eax],al
  406637:	push   es
  406638:	adc    eax,DWORD PTR [esi]
  40663a:	jae    0x4065e7
  40663c:	add    BYTE PTR [eax],al
  40663e:	or     cl,BYTE PTR [ebx]
  406640:	and    BYTE PTR [eax+0x8],bl
  406643:	add    BYTE PTR [eax],al
  406645:	sub    BYTE PTR [eax+0x0],ah
  406648:	add    BYTE PTR [esi],al
  40664a:	adc    eax,DWORD PTR [esi]
  40664c:	pop    es
  40664d:	and    BYTE PTR [edx+0x28000009],ch
  406653:	push   0x25060000
  406658:	add    ch,BYTE PTR es:[edi+0x47]
  40665c:	add    BYTE PTR [eax],al
  40665e:	push   es
  40665f:	and    eax,0x9d32026
  406664:	add    BYTE PTR [eax],al
  406666:	sub    BYTE PTR [eax+0x0],ch
  406669:	add    BYTE PTR [esi],al
  40666b:	and    eax,0xe62826
  406670:	add    BYTE PTR [edx],cl
  406672:	and    eax,0xc16f26
  406677:	add    BYTE PTR [edx],cl
  406679:	and    eax,0x5c200a26
  40667e:	or     BYTE PTR [eax],al
  406680:	add    BYTE PTR [eax],ch
  406682:	pusha  
  406683:	add    BYTE PTR [eax],al
  406685:	push   es
  406686:	adc    eax,DWORD PTR [esi]
  406688:	push   es
  406689:	adc    al,0xfe
  40668b:	add    DWORD PTR [ebx],edx
  40668d:	pop    es
  40668e:	adc    DWORD PTR [edi],eax
  406690:	sub    al,0x36
  406692:	sbb    eax,0x145
  406697:	add    dh,dh
  406699:	(bad)  
  40669a:	(bad)  
  40669b:	call   DWORD PTR [edi]
  40669d:	sub    eax,0x51d006
  4066a2:	add    BYTE PTR [esi],al
  4066a4:	and    BYTE PTR es:[eax+0x8],ah
  4066a8:	add    BYTE PTR [eax],al
  4066aa:	sub    BYTE PTR [eax+0x0],ah
  4066ad:	add    BYTE PTR [esi],al
  4066af:	adc    eax,DWORD PTR [esi]
  4066b1:	and    ah,bl
  4066b3:	or     DWORD PTR [eax],eax
  4066b5:	add    BYTE PTR [eax],ch
  4066b7:	push   0x28060000
  4066bc:	out    0x0,eax
  4066be:	add    BYTE PTR [edx],cl
  4066c0:	and    eax,0x84382626
  4066c5:	add    BYTE PTR [eax],al
  4066c7:	add    BYTE PTR [eax],ah
  4066c9:	or     BYTE PTR fs:[eax],al
  4066cc:	add    BYTE PTR [eax],ch
  4066ce:	pusha  
  4066cf:	add    BYTE PTR [eax],al
  4066d1:	push   es
  4066d2:	adc    eax,DWORD PTR [esi]
  4066d4:	add    BYTE PTR [eax],ah
  4066d6:	push   0x28000008
  4066db:	pusha  
  4066dc:	add    BYTE PTR [eax],al
  4066de:	push   es
  4066df:	adc    eax,DWORD PTR [esi]
  4066e1:	push   es
  4066e2:	and    BYTE PTR [eax+ecx*1+0x0],ch
  4066e6:	add    BYTE PTR [eax],ch
  4066e8:	pusha  
  4066e9:	add    BYTE PTR [eax],al
  4066eb:	push   es
  4066ec:	and    BYTE PTR [eax+0x8],dh
  4066ef:	add    BYTE PTR [eax],al
  4066f1:	sub    BYTE PTR [eax+0x0],ah
  4066f4:	add    BYTE PTR [esi],al
  4066f6:	outs   dx,DWORD PTR ds:[esi]
  4066f7:	inc    eax
  4066f8:	add    BYTE PTR [eax],al
  4066fa:	or     ah,BYTE PTR ds:0x74200c26
  406700:	or     BYTE PTR [eax],al
  406702:	add    BYTE PTR [eax],ch
  406704:	pusha  
  406705:	add    BYTE PTR [eax],al
  406707:	push   es
  406708:	adc    eax,DWORD PTR [esi]
  40670a:	and    dl,bl
  40670c:	push   es
  40670d:	add    BYTE PTR [eax],al
  40670f:	sub    BYTE PTR [eax+0x0],ch
  406712:	add    BYTE PTR [esi],al
  406714:	and    eax,0x78200d26
  406719:	or     BYTE PTR [eax],al
  40671b:	add    BYTE PTR [eax],ch
  40671d:	pusha  
  40671e:	add    BYTE PTR [eax],al
  406720:	push   es
  406721:	adc    eax,DWORD PTR [esi]
  406723:	add    cl,BYTE PTR [ecx]
  406725:	or     BYTE PTR [edi+0x4c],ch
  406728:	add    BYTE PTR [eax],al
  40672a:	push   es
  40672b:	and    eax,0x7c202626
  406730:	or     BYTE PTR [eax],al
  406732:	add    BYTE PTR [eax],ch
  406734:	pusha  
  406735:	add    BYTE PTR [eax],al
  406737:	push   es
  406738:	adc    eax,DWORD PTR [esi]
  40673a:	and    BYTE PTR [esi+0x2800000b],dl
  406740:	push   0x25060000
  406745:	es sub bh,ah
  406748:	add    BYTE PTR [eax],al
  40674a:	or     ah,BYTE PTR [esi]
  40674c:	add    ch,bl
  40674e:	iret   
  40674f:	add    BYTE PTR [eax],al
  406751:	add    BYTE PTR [ecx],dl
  406753:	add    eax,0x5110d2b
  406758:	and    BYTE PTR [eax+0x28000008],al
  40675e:	pusha  
  40675f:	add    BYTE PTR [eax],al
  406761:	push   es
  406762:	pop    eax
  406763:	and    BYTE PTR [eax+ecx*1+0x60280000],al
  40676a:	add    BYTE PTR [eax],al
  40676c:	push   es
  40676d:	adc    eax,DWORD PTR ds:0xe45
  406773:	add    BYTE PTR [eax],al
  406775:	add    BYTE PTR [eax],al
  406777:	add    BYTE PTR [ecx-0x2],dh
  40677a:	(bad)  
  40677b:	inc    DWORD PTR [edx-0x6b000002]
  406781:	(bad)  
  406782:	(bad)  
  406783:	call   eax
  406785:	(bad)  
  406786:	(bad)  
  406787:	(bad)  
  406788:	stc    
  406789:	(bad)  
  40678a:	(bad)  
  40678b:	call   DWORD PTR [edi]
  40678d:	(bad)  
  40678e:	(bad)  
  40678f:	call   FWORD PTR [edi+edi*8]
  406792:	(bad)  
  406793:	jmp    FWORD PTR [ecx]
  406795:	(bad)  
  406796:	(bad)  
  406797:	call   DWORD PTR [edx-0x1]
  40679a:	(bad)  
  40679b:	jmp    FWORD PTR [ebx-0x1]
  40679e:	(bad)  
  40679f:	inc    DWORD PTR [edx-0x5f000001]
  4067a5:	(bad)  
  4067a6:	(bad)  
  4067a7:	jmp    DWORD PTR [ecx-0x21000001]
  4067ad:	arpl   WORD PTR [ecx],dx
  4067af:	push   es
  4067b0:	adc    eax,DWORD PTR ds:0x88200411
  4067b6:	or     BYTE PTR [eax],al
  4067b8:	add    BYTE PTR [eax],ch
  4067ba:	pusha  
  4067bb:	add    BYTE PTR [eax],al
  4067bd:	push   es
  4067be:	xor    BYTE PTR [eax+eiz*1],cl
  4067c1:	mov    WORD PTR [eax],cs
  4067c3:	add    BYTE PTR [eax],al
  4067c5:	sub    BYTE PTR [eax+0x0],ah
  4067c8:	add    BYTE PTR [esi],al
  4067ca:	sub    eax,DWORD PTR [edx]
  4067cc:	adc    DWORD PTR [eax*2+0x2],eax
  4067d3:	add    BYTE PTR [eax],al
  4067d5:	add    BYTE PTR [eax],al
  4067d7:	jnp    0x4067d8
  4067d9:	(bad)  
  4067da:	(bad)  
  4067db:	fidiv  WORD PTR [esi*2+0x100004b]
  4067e2:	adc    al,0xfe
  4067e4:	add    edx,DWORD PTR [ecx]
  4067e6:	add    al,0x20
  4067e8:	nop
  4067e9:	or     BYTE PTR [eax],al
  4067eb:	add    BYTE PTR [eax],ch
  4067ed:	pusha  
  4067ee:	add    BYTE PTR [eax],al
  4067f0:	push   es
  4067f1:	inc    BYTE PTR [ebx]
  4067f3:	pop    edi
  4067f4:	adc    DWORD PTR ds:0x89420,eax
  4067fa:	add    BYTE PTR [eax],ch
  4067fc:	pusha  
  4067fd:	add    BYTE PTR [eax],al
  4067ff:	push   es
  406800:	inc    BYTE PTR [ecx]
  406802:	pop    edi
  406803:	(bad)  
  406804:	adc    DWORD PTR [ebx+ecx*2+0x0],esi
  406808:	add    BYTE PTR [ecx],al
  40680a:	sub    BYTE PTR [edi+0x0],dl
  40680d:	add    BYTE PTR [edx],cl
  40680f:	ficomp WORD PTR [ebp+0x89820]
  406815:	add    BYTE PTR [eax],ch
  406817:	pusha  
  406818:	add    BYTE PTR [eax],al
  40681a:	push   es
  40681b:	sub    BYTE PTR [edx+0x7a0a0000],bh
  406821:	add    BYTE PTR [ecx],dl
  406823:	add    eax,0x451d0f2c
  406828:	add    DWORD PTR [eax],eax
  40682a:	add    BYTE PTR [eax],al
  40682c:	idiv   bh
  40682e:	(bad)  
  40682f:	jmp    FWORD PTR [eax]
  406831:	pop    ebx
  406832:	add    BYTE PTR [eax],al
  406834:	or     ch,BYTE PTR [edx]
  406836:	add    BYTE PTR [eax],al
  406838:	inc    ecx
  406839:	sbb    al,0x0
  40683b:	add    BYTE PTR [ecx],al
  40683d:	add    BYTE PTR [eax],al
  40683f:	add    BYTE PTR [ecx],al
  406841:	add    BYTE PTR [eax],al
  406843:	add    al,al
  406845:	add    DWORD PTR [eax],eax
  406847:	add    cl,ch
  406849:	add    DWORD PTR [eax],eax
  40684b:	add    BYTE PTR [eax+eax*1],cl
  40684e:	add    BYTE PTR [eax],al
  406850:	rol    DWORD PTR [ecx],0x0
  406853:	add    BYTE PTR [ebx],al
  406855:	xor    BYTE PTR [ecx],cl
  406857:	add    BYTE PTR [ecx],cl
	...
  406861:	sub    al,ch
  406863:	add    BYTE PTR [eax],al
  406865:	or     al,BYTE PTR [eax]
  406867:	add    BYTE PTR [edx],ch
  406869:	add    BYTE PTR [eax],al
  40686b:	add    BYTE PTR [ebx],al
  40686d:	xor    BYTE PTR [ecx],cl
  40686f:	add    BYTE PTR [ecx],cl
  406871:	add    BYTE PTR [eax],al
  406873:	add    BYTE PTR [eax],al
  406875:	add    BYTE PTR [eax],al
  406877:	add    BYTE PTR [edx],al
  406879:	sub    BYTE PTR [ecx],bh
  40687b:	add    BYTE PTR [eax],al
  40687d:	or     al,BYTE PTR [eax]
  40687f:	add    BYTE PTR [edx],ch
  406881:	add    BYTE PTR [eax],al
  406883:	add    BYTE PTR [ebx],bl
  406885:	xor    BYTE PTR [eax+eax*1],al
  406888:	mov    dl,0x2
  40688a:	add    BYTE PTR [eax],al
  40688c:	daa    
  40688d:	add    BYTE PTR [eax],al
  40688f:	adc    DWORD PTR [eax],eax
  406891:	sub    BYTE PTR [ebx+0x0],bl
  406894:	add    BYTE PTR [edx],cl
  406896:	and    BYTE PTR [eax+0x9],al
  406899:	add    BYTE PTR [eax],al
  40689b:	sub    BYTE PTR [eax+0x0],ah
  40689e:	add    BYTE PTR [esi],al
  4068a0:	adc    eax,DWORD PTR ds:0x94420
  4068a6:	add    BYTE PTR [eax],ch
  4068a8:	pusha  
  4068a9:	add    BYTE PTR [eax],al
  4068ab:	push   es
  4068ac:	adc    eax,DWORD PTR [edi]
  4068ae:	and    BYTE PTR [eax+0x9],cl
  4068b1:	add    BYTE PTR [eax],al
  4068b3:	sub    BYTE PTR [eax+0x0],ah
  4068b6:	add    BYTE PTR [esi],al
  4068b8:	or     ah,BYTE PTR [eax]
  4068ba:	dec    esp
  4068bb:	or     DWORD PTR [eax],eax
  4068bd:	add    BYTE PTR [eax],ch
  4068bf:	pusha  
  4068c0:	add    BYTE PTR [eax],al
  4068c2:	push   es
  4068c3:	adc    eax,DWORD PTR [edi]
  4068c5:	and    BYTE PTR [eax+0x9],dl
  4068c8:	add    BYTE PTR [eax],al
  4068ca:	sub    BYTE PTR [eax+0x0],ah
  4068cd:	add    BYTE PTR [esi],al
  4068cf:	lea    esp,[esi-0x7fff0000]
  4068d5:	and    BYTE PTR [eax],al
  4068d7:	add    BYTE PTR [eax+eiz*1],al
  4068da:	push   esp
  4068db:	or     DWORD PTR [eax],eax
  4068dd:	add    BYTE PTR [eax],ch
  4068df:	pusha  
  4068e0:	add    BYTE PTR [eax],al
  4068e2:	push   es
  4068e3:	adc    eax,DWORD PTR [edi]
  4068e5:	and    BYTE PTR [eax+0x9],bl
  4068e8:	add    BYTE PTR [eax],al
  4068ea:	sub    BYTE PTR [eax+0x0],ah
  4068ed:	add    BYTE PTR [esi],al
  4068ef:	or     esp,DWORD PTR [eax]
  4068f1:	pop    esp
  4068f2:	or     DWORD PTR [eax],eax
  4068f4:	add    BYTE PTR [eax],ch
  4068f6:	pusha  
  4068f7:	add    BYTE PTR [eax],al
  4068f9:	push   es
  4068fa:	adc    eax,DWORD PTR [edi]
  4068fc:	and    BYTE PTR [eax+0x9],ah
  4068ff:	add    BYTE PTR [eax],al
  406901:	sub    BYTE PTR [eax+0x0],ah
  406904:	add    BYTE PTR [esi],al
  406906:	jle    0x406928
  406908:	add    BYTE PTR [eax],al
  40690a:	add    al,0x8e
  40690c:	mov    bh,0x20
  40690e:	or     DWORD PTR fs:[eax],eax
  406911:	add    BYTE PTR [eax],ch
  406913:	pusha  
  406914:	add    BYTE PTR [eax],al
  406916:	push   es
  406917:	fidivr DWORD PTR [eax+0x380c0413]
  40691d:	adc    BYTE PTR [ecx],al
  40691f:	add    BYTE PTR [eax],al
  406921:	and    BYTE PTR [eax+0x9],ch
  406924:	add    BYTE PTR [eax],al
  406926:	sub    BYTE PTR [eax+0x0],ah
  406929:	add    BYTE PTR [esi],al
  40692b:	adc    eax,DWORD PTR [edi]
  40692d:	or     BYTE PTR [ebx],cl
  40692f:	and    BYTE PTR [ecx+ecx*1+0x0],ch
  406933:	add    BYTE PTR [eax],ch
  406935:	pusha  
  406936:	add    BYTE PTR [eax],al
  406938:	push   es
  406939:	adc    eax,DWORD PTR [edi]
  40693b:	and    BYTE PTR [eax+0x9],dh
  40693e:	add    BYTE PTR [eax],al
  406940:	sub    BYTE PTR [eax+0x0],ah
  406943:	add    BYTE PTR [esi],al
  406945:	or     eax,0x97420
  40694a:	add    BYTE PTR [eax],ch
  40694c:	pusha  
  40694d:	add    BYTE PTR [eax],al
  40694f:	push   es
  406950:	adc    eax,DWORD PTR [edi]
  406952:	pop    es
  406953:	outs   dx,BYTE PTR ds:[esi]
  406954:	and    BYTE PTR [eax+0x9],bh
  406957:	add    BYTE PTR [eax],al
  406959:	sub    BYTE PTR [eax+0x0],ah
  40695c:	add    BYTE PTR [esi],al
  40695e:	push   0x5f
  406960:	and    BYTE PTR [ecx+ecx*1+0x0],bh
  406964:	add    BYTE PTR [eax],ch
  406966:	pusha  
  406967:	add    BYTE PTR [eax],al
  406969:	push   es
  40696a:	push   0xfffffffe
  40696c:	add    DWORD PTR [ebx],edx
  40696e:	or     BYTE PTR [ecx],dl
  406970:	or     BYTE PTR [eax+esi*1],ch
  406973:	sbb    al,0x45
  406975:	add    DWORD PTR [eax],eax
  406977:	add    BYTE PTR [eax],al
  406979:	idiv   bh
  40697b:	(bad)  
  40697c:	call   DWORD PTR [edi]
  40697e:	sub    eax,0x54d006
  406983:	add    BYTE PTR [esi],al
  406985:	and    BYTE PTR es:[eax+0x28000009],al
  40698c:	pusha  
  40698d:	add    BYTE PTR [eax],al
  40698f:	push   es
  406990:	adc    eax,DWORD PTR [edi]
  406992:	pop    es
  406993:	and    BYTE PTR [ecx+ecx*1+0x60280000],al
  40699a:	add    BYTE PTR [eax],al
  40699c:	push   es
  40699d:	fs push es
  40699f:	popa   
  4069a0:	or     ebp,DWORD PTR [ebx]
  4069a2:	and    BYTE PTR es:[eax+0x28000009],cl
  4069a9:	pusha  
  4069aa:	add    BYTE PTR [eax],al
  4069ac:	push   es
  4069ad:	adc    eax,DWORD PTR [edi]
  4069af:	add    BYTE PTR [eax],ah
  4069b1:	mov    WORD PTR [ecx],cs
  4069b3:	add    BYTE PTR [eax],al
  4069b5:	sub    BYTE PTR [eax+0x0],ah
  4069b8:	add    BYTE PTR [esi],al
  4069ba:	adc    eax,DWORD PTR [edi]
  4069bc:	pop    es
  4069bd:	and    BYTE PTR [eax+0x28000009],dl
  4069c3:	pusha  
  4069c4:	add    BYTE PTR [eax],al
  4069c6:	push   es
  4069c7:	or     eax,DWORD PTR fs:[eax]
  4069ca:	and    BYTE PTR [ecx+ecx*1+0x60280000],dl
  4069d1:	add    BYTE PTR [eax],al
  4069d3:	push   es
  4069d4:	adc    eax,DWORD PTR [edi]
  4069d6:	add    BYTE PTR [ecx],cl
  4069d8:	and    BYTE PTR [eax+0x28000009],bl
  4069de:	pusha  
  4069df:	add    BYTE PTR [eax],al
  4069e1:	push   es
  4069e2:	(bad)  
  4069e3:	or     eax,0x99c2009
  4069e8:	add    BYTE PTR [eax],al
  4069ea:	sub    BYTE PTR [eax+0x0],ah
  4069ed:	add    BYTE PTR [esi],al
  4069ef:	adc    ecx,DWORD PTR [ecx]
  4069f1:	adc    DWORD PTR [ecx],ecx
  4069f3:	cmp    al,0x4e
  4069f5:	(bad)  
  4069f6:	(bad)  
  4069f7:	call   DWORD PTR [edi]
  4069f9:	inc    ebp
  4069fa:	add    DWORD PTR [eax],eax
  4069fc:	add    BYTE PTR [eax],al
  4069fe:	idiv   bh
  406a00:	(bad)  
  406a01:	jmp    DWORD PTR [eax]
  406a03:	mov    al,ds:0x28000009
  406a08:	pusha  
  406a09:	add    BYTE PTR [eax],al
  406a0b:	push   es
  406a0c:	adc    eax,DWORD PTR [edi]
  406a0e:	jle    0x406a30
  406a10:	add    BYTE PTR [eax],al
  406a12:	add    al,0x8
  406a14:	test   BYTE PTR [edi],al
  406a16:	sahf   
  406a17:	and    BYTE PTR [ecx+ecx*1+0x60280000],ah
  406a1e:	add    BYTE PTR [eax],al
  406a20:	push   es
  406a21:	adc    eax,DWORD PTR [edi]
  406a23:	add    BYTE PTR [eax],cl
  406a25:	and    BYTE PTR [eax+0x28000009],ch
  406a2b:	pusha  
  406a2c:	add    BYTE PTR [eax],al
  406a2e:	push   es
  406a2f:	xlat   BYTE PTR ds:[ebx]
  406a30:	or     al,0x8
  406a32:	adc    DWORD PTR [ebx+edx*1],eax
  406a35:	or     dl,BYTE PTR [ecx]
  406a37:	or     al,BYTE PTR [ebx-0x1c]
  406a3a:	(bad)  
  406a3b:	(bad)  
  406a3c:	call   FWORD PTR [eax]
  406a3e:	inc    ebp
  406a3f:	add    DWORD PTR [eax],eax
  406a41:	add    BYTE PTR [eax],al
  406a43:	idiv   bh
  406a45:	(bad)  
  406a46:	(bad)  
  406a47:	fucomp st(3)
  406a49:	add    BYTE PTR [eax],al
  406a4b:	add    BYTE PTR [ecx],dl
  406a4d:	push   es
  406a4e:	sub    ecx,DWORD PTR ds:0xac200611
  406a54:	or     DWORD PTR [eax],eax
  406a56:	add    BYTE PTR [eax],ch
  406a58:	pusha  
  406a59:	add    BYTE PTR [eax],al
  406a5b:	push   es
  406a5c:	pop    eax
  406a5d:	and    BYTE PTR [eax+0x28000009],dh
  406a63:	pusha  
  406a64:	add    BYTE PTR [eax],al
  406a66:	push   es
  406a67:	adc    eax,DWORD PTR [esi]
  406a69:	inc    ebp
  406a6a:	adc    al,BYTE PTR [eax]
  406a6c:	add    BYTE PTR [eax],al
  406a6e:	add    BYTE PTR [eax],al
  406a70:	add    BYTE PTR [eax],al
  406a72:	(bad)  
  406a74:	(bad)  
  406a75:	(bad)  
  406a76:	in     al,dx
  406a77:	std    
  406a78:	(bad)  
  406a79:	inc    DWORD PTR [ebx]
  406a7b:	(bad)  
  406a7c:	(bad)  
  406a7d:	jmp    DWORD PTR [ebx]
  406a7f:	(bad)  
  406a80:	(bad)  
  406a81:	(bad)  
  406a82:	cmp    bh,dh
  406a84:	(bad)  
  406a85:	jmp    FWORD PTR [ebx-0x2]
  406a88:	(bad)  
  406a89:	(bad)  
  406a8a:	jns    0x406a8a
  406a8c:	(bad)  
  406a8d:	call   DWORD PTR [eax-0x2f000002]
  406a93:	(bad)  
  406a94:	(bad)  
  406a95:	(bad)  
  406a96:	jmp    0x406a96
  406a98:	(bad)  
  406a99:	(bad)  
  406a9a:	in     eax,dx
  406a9b:	(bad)  
  406a9c:	(bad)  
  406a9d:	(bad)  
  406a9e:	cli    
  406a9f:	(bad)  
  406aa0:	(bad)  
  406aa1:	call   DWORD PTR [ebx]
  406aa3:	(bad)  
  406aa4:	(bad)  
  406aa5:	call   DWORD PTR [edi+edi*8]
  406aa8:	(bad)  
  406aa9:	dec    DWORD PTR [edi+edi*8-0x1]
  406aad:	jmp    DWORD PTR [ecx-0x1]
  406ab0:	(bad)  
  406ab1:	call   DWORD PTR [ecx-0x21000001]
  406ab7:	ins    DWORD PTR es:[edi],dx
  406ab8:	adc    DWORD PTR [edi],eax
  406aba:	adc    eax,DWORD PTR [esi]
  406abc:	adc    DWORD PTR ds:0x9b420,eax
  406ac2:	add    BYTE PTR [eax],ch
  406ac4:	pusha  
  406ac5:	add    BYTE PTR [eax],al
  406ac7:	push   es
  406ac8:	xor    BYTE PTR [esi],dl
  406aca:	pop    ss
  406acb:	inc    ebp
  406acc:	add    DWORD PTR [eax],eax
  406ace:	add    BYTE PTR [eax],al
  406ad0:	idiv   bh
  406ad2:	(bad)  
  406ad3:	jmp    DWORD PTR [eax]
  406ad5:	mov    eax,0x28000009
  406ada:	pusha  
  406adb:	add    BYTE PTR [eax],al
  406add:	push   es
  406ade:	sub    eax,DWORD PTR [edx]
  406ae0:	adc    DWORD PTR ds:0x245,eax
  406ae6:	add    BYTE PTR [eax],al
  406ae8:	add    BYTE PTR [eax],al
  406aea:	add    BYTE PTR [ecx-0x1],ah
  406aed:	(bad)  
  406aee:	(bad)  
  406aef:	fidiv  WORD PTR [esi*2+0x100004b]
  406af6:	adc    al,0xfe
  406af8:	add    edx,DWORD PTR [ecx]
  406afa:	add    eax,0x9bc20
  406aff:	add    BYTE PTR [eax],ch
  406b01:	pusha  
  406b02:	add    BYTE PTR [eax],al
  406b04:	push   es
  406b05:	inc    BYTE PTR [ebx]
  406b07:	pop    edi
  406b08:	adc    DWORD PTR [esi],eax
  406b0a:	and    al,al
  406b0c:	or     DWORD PTR [eax],eax
  406b0e:	add    BYTE PTR [eax],ch
  406b10:	pusha  
  406b11:	add    BYTE PTR [eax],al
  406b13:	push   es
  406b14:	inc    BYTE PTR [ecx]
  406b16:	pop    edi
  406b17:	(bad)  
  406b18:	adc    DWORD PTR [ebx+ecx*2+0x0],esi
  406b1c:	add    BYTE PTR [ecx],al
  406b1e:	sub    BYTE PTR [edi+0x0],dl
  406b21:	add    BYTE PTR [edx],cl
  406b23:	ficom  WORD PTR [ebx+0x9c420]
  406b29:	add    BYTE PTR [eax],ch
  406b2b:	pusha  
  406b2c:	add    BYTE PTR [eax],al
  406b2e:	push   es
  406b2f:	sub    BYTE PTR [edx+0x250a0000],bh
  406b35:	es jp  0x406b38
  406b38:	adc    DWORD PTR [esi],eax
  406b3a:	sub    al,0x5
  406b3c:	sub    BYTE PTR [ebx+0x0],bl
  406b3f:	add    BYTE PTR [edx],cl
  406b41:	sub    al,BYTE PTR [eax]
  406b43:	add    BYTE PTR [ecx+0x1c],al
  406b46:	add    BYTE PTR [eax],al
  406b48:	add    DWORD PTR [eax],eax
  406b4a:	add    BYTE PTR [eax],al
  406b4c:	add    DWORD PTR [eax],eax
  406b4e:	add    BYTE PTR [eax],al
  406b50:	pusha  
  406b51:	add    al,BYTE PTR [eax]
  406b53:	add    BYTE PTR [ecx+0xc000002],cl
  406b59:	add    BYTE PTR [eax],al
  406b5b:	add    BYTE PTR [ecx+0x2],ah
  406b5e:	add    BYTE PTR [eax],al
  406b60:	sbb    esi,DWORD PTR [eax]
  406b62:	add    al,0x0
  406b64:	mov    ebp,0x28000001
  406b69:	add    BYTE PTR [eax],al
  406b6b:	adc    DWORD PTR [eax],eax
  406b6d:	sub    BYTE PTR [ebx+0x0],bl
  406b70:	add    BYTE PTR [edx],cl
  406b72:	and    BYTE PTR [eax+ecx*1+0x60280000],bl
  406b79:	add    BYTE PTR [eax],al
  406b7b:	push   es
  406b7c:	adc    eax,DWORD PTR ds:0x8a020
  406b82:	add    BYTE PTR [eax],ch
  406b84:	pusha  
  406b85:	add    BYTE PTR [eax],al
  406b87:	push   es
  406b88:	adc    eax,DWORD PTR [edi]
  406b8a:	and    BYTE PTR [eax+ecx*1+0x60280000],ah
  406b91:	add    BYTE PTR [eax],al
  406b93:	push   es
  406b94:	or     esp,DWORD PTR [eax]
  406b96:	test   al,0x8
  406b98:	add    BYTE PTR [eax],al
  406b9a:	sub    BYTE PTR [eax+0x0],ah
  406b9d:	add    BYTE PTR [esi],al
  406b9f:	adc    eax,DWORD PTR [edi]
  406ba1:	and    BYTE PTR [eax+ecx*1+0x60280000],ch
  406ba8:	add    BYTE PTR [eax],al
  406baa:	push   es
  406bab:	add    cl,BYTE PTR [esi+0x8b020b7]
  406bb1:	add    BYTE PTR [eax],al
  406bb3:	sub    BYTE PTR [eax+0x0],ah
  406bb6:	add    BYTE PTR [esi],al
  406bb8:	ficom  DWORD PTR [ebx]
  406bba:	add    al,0xc
  406bbc:	sub    ebx,DWORD PTR [eax+eiz*1-0x4c]
  406bc0:	or     BYTE PTR [eax],al
  406bc2:	add    BYTE PTR [eax],ch
  406bc4:	pusha  
  406bc5:	add    BYTE PTR [eax],al
  406bc7:	push   es
  406bc8:	adc    eax,DWORD PTR [edi]
  406bca:	pop    es
  406bcb:	outs   dx,BYTE PTR ds:[esi]
  406bcc:	and    BYTE PTR [eax+0x28000008],bh
  406bd2:	pusha  
  406bd3:	add    BYTE PTR [eax],al
  406bd5:	push   es
  406bd6:	push   0x5f
  406bd8:	add    cl,BYTE PTR [eax]
  406bda:	xchg   ecx,eax
  406bdb:	outs   dx,BYTE PTR ds:[esi]
  406bdc:	popa   
  406bdd:	mov    ah,0xd
  406bdf:	and    BYTE PTR [eax+ecx*1+0x60280000],bh
  406be6:	add    BYTE PTR [eax],al
  406be8:	push   es
  406be9:	adc    eax,DWORD PTR [edi]
  406beb:	pop    es
  406bec:	and    al,al
  406bee:	or     BYTE PTR [eax],al
  406bf0:	add    BYTE PTR [eax],ch
  406bf2:	pusha  
  406bf3:	add    BYTE PTR [eax],al
  406bf5:	push   es
  406bf6:	fs jle 0x406c19
  406bf9:	add    BYTE PTR [eax],al
  406bfb:	add    al,0x9
  406bfd:	xchg   ebp,eax
  406bfe:	popa   
  406bff:	or     esp,DWORD PTR [eax]
  406c01:	les    ecx,FWORD PTR [eax]
  406c03:	add    BYTE PTR [eax],al
  406c05:	sub    BYTE PTR [eax+0x0],ah
  406c08:	add    BYTE PTR [esi],al
  406c0a:	adc    eax,DWORD PTR [edi]
  406c0c:	add    BYTE PTR [eax],cl
  406c0e:	and    al,cl
  406c10:	or     BYTE PTR [eax],al
  406c12:	add    BYTE PTR [eax],ch
  406c14:	pusha  
  406c15:	add    BYTE PTR [eax],al
  406c17:	push   es
  406c18:	(bad)  
  406c19:	or     al,0x8
  406c1b:	adc    DWORD PTR [ebx+edx*1],eax
  406c1e:	or     BYTE PTR [ecx],dl
  406c20:	or     BYTE PTR [ecx],dh
  406c22:	fwait
  406c23:	sbb    al,BYTE PTR [ebp+0x1]
  406c26:	add    BYTE PTR [eax],al
  406c28:	add    dh,dh
  406c2a:	(bad)  
  406c2b:	(bad)  
  406c2c:	call   DWORD PTR [edi]
  406c2e:	sub    eax,0x55d006
  406c33:	add    BYTE PTR [esi],al
  406c35:	es and ah,cl
  406c38:	or     BYTE PTR [eax],al
  406c3a:	add    BYTE PTR [eax],ch
  406c3c:	pusha  
  406c3d:	add    BYTE PTR [eax],al
  406c3f:	push   es
  406c40:	adc    eax,DWORD PTR [edi]
  406c42:	pop    es
  406c43:	data16 or bl,ch
  406c46:	retf   0x0
  406c49:	add    ch,bl
  406c4b:	lds    eax,FWORD PTR [eax]
  406c4d:	add    BYTE PTR [eax],al
  406c4f:	adc    DWORD PTR [esi],eax
  406c51:	sub    ecx,DWORD PTR ds:0xd0200611
  406c57:	or     BYTE PTR [eax],al
  406c59:	add    BYTE PTR [eax],ch
  406c5b:	pusha  
  406c5c:	add    BYTE PTR [eax],al
  406c5e:	push   es
  406c5f:	pop    eax
  406c60:	and    ah,dl
  406c62:	or     BYTE PTR [eax],al
  406c64:	add    BYTE PTR [eax],ch
  406c66:	pusha  
  406c67:	add    BYTE PTR [eax],al
  406c69:	push   es
  406c6a:	adc    eax,DWORD PTR [esi]
  406c6c:	inc    ebp
  406c6d:	or     DWORD PTR [eax],eax
  406c6f:	add    BYTE PTR [eax],al
  406c71:	add    BYTE PTR [eax],al
  406c73:	add    BYTE PTR [eax],al
  406c75:	fdivr  st,st(6)
  406c77:	(bad)  
  406c78:	(bad)  
  406c79:	jmp    0x1406c7c
  406c7e:	(bad)  
  406c7f:	(bad)  
  406c80:	jmp    FWORD PTR [ecx]
  406c82:	(bad)  
  406c83:	(bad)  
  406c84:	dec    DWORD PTR [edx-0x1]
  406c87:	(bad)  
  406c88:	jmp    FWORD PTR [ebx-0x1]
  406c8b:	(bad)  
  406c8c:	jmp    DWORD PTR [ecx-0x4a000001]
  406c92:	(bad)  
  406c93:	(bad)  
  406c94:	(bad)  
  406c95:	fisubr WORD PTR [ebp+0x11]
  406c98:	pop    es
  406c99:	adc    eax,DWORD PTR [esi]
  406c9b:	adc    DWORD PTR ds:0x8d820,eax
  406ca1:	add    BYTE PTR [eax],ch
  406ca3:	pusha  
  406ca4:	add    BYTE PTR [eax],al
  406ca6:	push   es
  406ca7:	xor    BYTE PTR [esi],dl
  406ca9:	sbb    DWORD PTR [ebp+0x1],eax
  406cac:	add    BYTE PTR [eax],al
  406cae:	add    dh,dh
  406cb0:	(bad)  
  406cb1:	(bad)  
  406cb2:	jmp    DWORD PTR [eax]
  406cb4:	fmul   QWORD PTR [eax]
  406cb6:	add    BYTE PTR [eax],al
  406cb8:	sub    BYTE PTR [eax+0x0],ah
  406cbb:	add    BYTE PTR [esi],al
  406cbd:	sub    eax,DWORD PTR [edx]
  406cbf:	adc    DWORD PTR ds:0x245,eax
  406cc5:	add    BYTE PTR [eax],al
  406cc7:	add    BYTE PTR [eax],al
  406cc9:	add    BYTE PTR [ebp-0x21000001],al
  406ccf:	xor    al,0x75
  406cd1:	dec    ebx
  406cd2:	add    BYTE PTR [eax],al
  406cd4:	add    DWORD PTR [esi+edi*8],edx
  406cd7:	add    edx,DWORD PTR [ecx]
  406cd9:	add    eax,0x8e020
  406cde:	add    BYTE PTR [eax],ch
  406ce0:	pusha  
  406ce1:	add    BYTE PTR [eax],al
  406ce3:	push   es
  406ce4:	inc    BYTE PTR [ebx]
  406ce6:	pop    edi
  406ce7:	adc    DWORD PTR [esi],eax
  406ce9:	and    ah,ah
  406ceb:	or     BYTE PTR [eax],al
  406ced:	add    BYTE PTR [eax],ch
  406cef:	pusha  
  406cf0:	add    BYTE PTR [eax],al
  406cf2:	push   es
  406cf3:	inc    BYTE PTR [ecx]
  406cf5:	pop    edi
  406cf6:	(bad)  
  406cf7:	adc    DWORD PTR [ebx+ecx*2+0x0],esi
  406cfb:	add    BYTE PTR [ecx],al
  406cfd:	sub    BYTE PTR [edi+0x0],dl
  406d00:	add    BYTE PTR [edx],cl
  406d02:	ficom  WORD PTR [ebx+0x8e820]
  406d08:	add    BYTE PTR [eax],ch
  406d0a:	pusha  
  406d0b:	add    BYTE PTR [eax],al
  406d0d:	push   es
  406d0e:	sub    BYTE PTR [edx+0x7a0a0000],bh
  406d14:	push   es
  406d15:	adc    DWORD PTR [esi],eax
  406d17:	sub    al,0xf
  406d19:	sbb    al,BYTE PTR [ebp+0x1]
  406d1c:	add    BYTE PTR [eax],al
  406d1e:	add    dh,dh
  406d20:	(bad)  
  406d21:	(bad)  
  406d22:	jmp    FWORD PTR [eax]
  406d24:	pop    ebx
  406d25:	add    BYTE PTR [eax],al
  406d27:	or     ch,BYTE PTR [edx]
  406d29:	add    BYTE PTR [eax],al
  406d2b:	add    BYTE PTR [ecx+0x1c],al
  406d2e:	add    BYTE PTR [eax],al
  406d30:	add    DWORD PTR [eax],eax
  406d32:	add    BYTE PTR [eax],al
  406d34:	add    DWORD PTR [eax],eax
  406d36:	add    BYTE PTR [eax],al
  406d38:	arpl   WORD PTR [ecx],ax
  406d3a:	add    BYTE PTR [eax],al
  406d3c:	mov    WORD PTR [ecx],es
  406d3e:	add    BYTE PTR [eax],al
  406d40:	or     al,0x0
  406d42:	add    BYTE PTR [eax],al
  406d44:	add    DWORD PTR fs:[eax],eax
  406d47:	add    BYTE PTR [ebx],bl
  406d49:	xor    BYTE PTR [eax+eax*1],al
  406d4c:	aad    0x1
  406d4e:	add    BYTE PTR [eax],al
  406d50:	sub    DWORD PTR [eax],eax
  406d52:	add    BYTE PTR [ecx],dl
  406d54:	add    BYTE PTR [eax],ch
  406d56:	pop    ebx
  406d57:	add    BYTE PTR [eax],al
  406d59:	or     ah,BYTE PTR [eax]
  406d5b:	in     al,dx
  406d5c:	or     BYTE PTR [eax],al
  406d5e:	add    BYTE PTR [eax],ch
  406d60:	pusha  
  406d61:	add    BYTE PTR [eax],al
  406d63:	push   es
  406d64:	adc    eax,DWORD PTR [esi]
  406d66:	and    al,dh
  406d68:	or     BYTE PTR [eax],al
  406d6a:	add    BYTE PTR [eax],ch
  406d6c:	pusha  
  406d6d:	add    BYTE PTR [eax],al
  406d6f:	push   es
  406d70:	adc    ecx,DWORD PTR [eax]
  406d72:	sub    cl,ch
  406d74:	add    BYTE PTR [eax],al
  406d76:	or     ah,BYTE PTR ds:0xea6f0226
  406d7c:	add    BYTE PTR [eax],al
  406d7e:	or     cl,BYTE PTR [edx]
  406d80:	and    ah,dh
  406d82:	or     BYTE PTR [eax],al
  406d84:	add    BYTE PTR [eax],ch
  406d86:	pusha  
  406d87:	add    BYTE PTR [eax],al
  406d89:	push   es
  406d8a:	adc    ecx,DWORD PTR [eax]
  406d8c:	and    al,bh
  406d8e:	or     BYTE PTR [eax],al
  406d90:	add    BYTE PTR [eax],ch
  406d92:	pusha  
  406d93:	add    BYTE PTR [eax],al
  406d95:	push   es
  406d96:	or     al,0x20
  406d98:	cld    
  406d99:	or     BYTE PTR [eax],al
  406d9b:	add    BYTE PTR [eax],ch
  406d9d:	pusha  
  406d9e:	add    BYTE PTR [eax],al
  406da0:	push   es
  406da1:	adc    ecx,DWORD PTR [eax]
  406da3:	and    BYTE PTR [eax],al
  406da5:	or     DWORD PTR [eax],eax
  406da7:	add    BYTE PTR [eax],ch
  406da9:	pusha  
  406daa:	add    BYTE PTR [eax],al
  406dac:	push   es
  406dad:	push   es
  406dae:	mov    ?,WORD PTR [edi+0x90420]
  406db4:	add    BYTE PTR [eax],ch
  406db6:	pusha  
  406db7:	add    BYTE PTR [eax],al
  406db9:	push   es
  406dba:	ficom  DWORD PTR [ebx]
  406dbc:	add    eax,0x205e2b0d
  406dc1:	or     BYTE PTR [ecx],cl
  406dc3:	add    BYTE PTR [eax],al
  406dc5:	sub    BYTE PTR [eax+0x0],ah
  406dc8:	add    BYTE PTR [esi],al
  406dca:	adc    ecx,DWORD PTR [eax]
  406dcc:	or     BYTE PTR [esi+0x20],ch
  406dcf:	or     al,0x9
  406dd1:	add    BYTE PTR [eax],al
  406dd3:	sub    BYTE PTR [eax+0x0],ah
  406dd6:	add    BYTE PTR [esi],al
  406dd8:	push   0x5f
  406dda:	push   es
  406ddb:	or     DWORD PTR [ecx+0x13b4616e],edx
  406de1:	add    al,0x20
  406de3:	adc    BYTE PTR [ecx],cl
  406de5:	add    BYTE PTR [eax],al
  406de7:	sub    BYTE PTR [eax+0x0],ah
  406dea:	add    BYTE PTR [esi],al
  406dec:	adc    ecx,DWORD PTR [eax]
  406dee:	or     BYTE PTR [eax],ah
  406df0:	adc    al,0x9
  406df2:	add    BYTE PTR [eax],al
  406df4:	sub    BYTE PTR [eax+0x0],ah
  406df7:	add    BYTE PTR [esi],al
  406df9:	fs jle 0x406e1c
  406dfc:	add    BYTE PTR [eax],al
  406dfe:	add    al,0x11
  406e00:	add    al,0x95
  406e02:	popa   
  406e03:	or     al,0x20
  406e05:	sbb    BYTE PTR [ecx],cl
  406e07:	add    BYTE PTR [eax],al
  406e09:	sub    BYTE PTR [eax+0x0],ah
  406e0c:	add    BYTE PTR [esi],al
  406e0e:	adc    ecx,DWORD PTR [eax]
  406e10:	add    BYTE PTR [ecx],cl
  406e12:	and    BYTE PTR [ecx+ecx*1],bl
  406e15:	add    BYTE PTR [eax],al
  406e17:	sub    BYTE PTR [eax+0x0],ah
  406e1a:	add    BYTE PTR [esi],al
  406e1c:	(bad)  
  406e1d:	or     eax,0x13051109
  406e22:	or     DWORD PTR [ecx],edx
  406e24:	or     DWORD PTR [ecx],esi
  406e26:	cdq    
  406e27:	sbb    eax,DWORD PTR [ebp+0x1]
  406e2a:	add    BYTE PTR [eax],al
  406e2c:	add    dh,dh
  406e2e:	(bad)  
  406e2f:	(bad)  
  406e30:	call   DWORD PTR [edi]
  406e32:	sub    eax,0x56d006
  406e37:	add    BYTE PTR [esi],al
  406e39:	and    BYTE PTR es:[eax],ah
  406e3c:	or     DWORD PTR [eax],eax
  406e3e:	add    BYTE PTR [eax],ch
  406e40:	pusha  
  406e41:	add    BYTE PTR [eax],al
  406e43:	push   es
  406e44:	adc    ecx,DWORD PTR [eax]
  406e46:	or     BYTE PTR [esi+0xb],ah
  406e49:	ffree  st(6)
  406e4b:	add    BYTE PTR [eax],al
  406e4d:	add    ch,bl
  406e4f:	rol    DWORD PTR [eax],0x0
  406e52:	add    BYTE PTR [ecx],dl
  406e54:	pop    es
  406e55:	sub    ecx,DWORD PTR ds:0x24200711
  406e5b:	or     DWORD PTR [eax],eax
  406e5d:	add    BYTE PTR [eax],ch
  406e5f:	pusha  
  406e60:	add    BYTE PTR [eax],al
  406e62:	push   es
  406e63:	pop    eax
  406e64:	and    BYTE PTR [eax],ch
  406e66:	or     DWORD PTR [eax],eax
  406e68:	add    BYTE PTR [eax],ch
  406e6a:	pusha  
  406e6b:	add    BYTE PTR [eax],al
  406e6d:	push   es
  406e6e:	adc    eax,DWORD PTR [edi]
  406e70:	inc    ebp
  406e71:	or     al,BYTE PTR [eax]
  406e73:	add    BYTE PTR [eax],al
  406e75:	add    BYTE PTR [eax],al
  406e77:	add    BYTE PTR [eax],al
  406e79:	mov    eax,0xc9fffffe
  406e7e:	(bad)  
  406e7f:	(bad)  
  406e80:	jmp    ebx
  406e82:	(bad)  
  406e83:	(bad)  
  406e84:	(bad)  
  406e85:	cli    
  406e86:	(bad)  
  406e87:	(bad)  
  406e88:	jmp    DWORD PTR [ebx]
  406e8a:	(bad)  
  406e8b:	(bad)  
  406e8c:	inc    DWORD PTR [ebp-0x1]
  406e8f:	(bad)  
  406e90:	jmp    DWORD PTR [edi-0x1]
  406e93:	(bad)  
  406e94:	call   FWORD PTR [ebp-0x4e000001]
  406e9a:	(bad)  
  406e9b:	(bad)  
  406e9c:	(bad)  
  406e9d:	fisub  WORD PTR [ebx+0x11]
  406ea0:	or     BYTE PTR [ebx],dl
  406ea2:	pop    es
  406ea3:	adc    DWORD PTR [esi],eax
  406ea5:	and    BYTE PTR [ecx+ecx*1],ch
  406ea8:	add    BYTE PTR [eax],al
  406eaa:	sub    BYTE PTR [eax+0x0],ah
  406ead:	add    BYTE PTR [esi],al
  406eaf:	xor    BYTE PTR [eax+eiz*1],cl
  406eb2:	xor    BYTE PTR [ecx],cl
  406eb4:	add    BYTE PTR [eax],al
  406eb6:	sub    BYTE PTR [eax+0x0],ah
  406eb9:	add    BYTE PTR [esi],al
  406ebb:	sub    eax,DWORD PTR [edx]
  406ebd:	adc    DWORD PTR [esi],eax
  406ebf:	inc    ebp
  406ec0:	add    al,BYTE PTR [eax]
  406ec2:	add    BYTE PTR [eax],al
  406ec4:	add    BYTE PTR [eax],al
  406ec6:	add    BYTE PTR [eax],al
  406ec8:	mov    edi,edi
  406eca:	(bad)  
  406ecb:	(bad)  
  406ecc:	fidiv  WORD PTR [esi*2+0x100004b]
  406ed3:	adc    al,0xfe
  406ed5:	add    edx,DWORD PTR [ecx]
  406ed7:	push   es
  406ed8:	and    BYTE PTR [ecx+ecx*1],dh
  406edb:	add    BYTE PTR [eax],al
  406edd:	sub    BYTE PTR [eax+0x0],ah
  406ee0:	add    BYTE PTR [esi],al
  406ee2:	inc    BYTE PTR [ebx]
  406ee4:	pop    edi
  406ee5:	adc    DWORD PTR [edi],eax
  406ee7:	and    BYTE PTR [eax],bh
  406ee9:	or     DWORD PTR [eax],eax
  406eeb:	add    BYTE PTR [eax],ch
  406eed:	pusha  
  406eee:	add    BYTE PTR [eax],al
  406ef0:	push   es
  406ef1:	inc    BYTE PTR [ecx]
  406ef3:	pop    edi
  406ef4:	(bad)  
  406ef5:	adc    DWORD PTR [ebx+ecx*2+0x0],esi
  406ef9:	add    BYTE PTR [ecx],al
  406efb:	sub    BYTE PTR [edi+0x0],dl
  406efe:	add    BYTE PTR [edx],cl
  406f00:	ficomp WORD PTR [ebp+0x93c20]
  406f06:	add    BYTE PTR [eax],ch
  406f08:	pusha  
  406f09:	add    BYTE PTR [eax],al
  406f0b:	push   es
  406f0c:	sub    BYTE PTR [edx+0x250a0000],bh
  406f12:	es jp  0x406f1c
  406f15:	adc    DWORD PTR [edi],eax
  406f17:	sub    al,0xf
  406f19:	sbb    eax,0x145
  406f1e:	add    dh,dh
  406f20:	(bad)  
  406f21:	(bad)  
  406f22:	jmp    FWORD PTR [eax]
  406f24:	pop    ebx
  406f25:	add    BYTE PTR [eax],al
  406f27:	or     ch,BYTE PTR [edx]
  406f29:	add    BYTE PTR [eax],al
  406f2b:	add    BYTE PTR [ecx+0x1c],al
  406f2e:	add    BYTE PTR [eax],al
  406f30:	add    DWORD PTR [eax],eax
  406f32:	add    BYTE PTR [eax],al
  406f34:	add    DWORD PTR [eax],eax
  406f36:	add    BYTE PTR [eax],al
  406f38:	jns    0x406f3b
  406f3a:	add    BYTE PTR [eax],al
  406f3c:	mov    ds:0xc000001,al
  406f41:	add    BYTE PTR [eax],al
  406f43:	add    BYTE PTR [edx+0x1],bh
  406f46:	add    BYTE PTR [eax],al
  406f48:	adc    esi,DWORD PTR [eax]
  406f4a:	add    al,0x0
  406f4c:	pop    ebx
  406f4d:	add    BYTE PTR [eax],al
  406f4f:	add    BYTE PTR [edx],ch
  406f51:	add    BYTE PTR [eax],al
  406f53:	adc    DWORD PTR [eax],eax
  406f55:	jle    0x406f78
  406f57:	add    BYTE PTR [eax],al
  406f59:	add    al,0x14
  406f5b:	sub    bl,ch
  406f5d:	add    BYTE PTR [eax],al
  406f5f:	or     ah,BYTE PTR ds:0x2c080c26
  406f65:	sbb    BYTE PTR ds:[ebp+0x1],al
  406f69:	add    BYTE PTR [eax],al
  406f6b:	add    dh,dh
  406f6d:	(bad)  
  406f6e:	(bad)  
  406f6f:	call   DWORD PTR [edi]
  406f71:	sub    eax,0x57d006
  406f76:	add    BYTE PTR [esi],al
  406f78:	es and bh,cl
  406f7b:	or     eax,DWORD PTR [eax]
  406f7d:	add    BYTE PTR [eax],ch
  406f7f:	push   0x25060000
  406f84:	ror    BYTE PTR es:0x28020000,1
  406f8b:	push   eax
  406f8c:	add    BYTE PTR [eax],al
  406f8e:	or     ah,BYTE PTR ds:0xec6f26
  406f94:	add    BYTE PTR [edx],cl
  406f96:	and    eax,0xed7326
  406f9b:	add    BYTE PTR [edx],cl
  406f9d:	or     eax,DWORD PTR [edi]
  406f9f:	and    BYTE PTR [ecx],0x0
  406fa2:	add    BYTE PTR [eax+eax*1],al
  406fa5:	jle    0x406fc8
  406fa7:	add    BYTE PTR [eax],al
  406fa9:	add    al,0xa
  406fab:	sub    eax,DWORD PTR [eax]
  406fad:	push   es
  406fae:	sub    al,BYTE PTR [eax]
  406fb0:	adc    esi,DWORD PTR [eax]
  406fb2:	add    al,BYTE PTR [eax]
  406fb4:	or     eax,DWORD PTR [eax]
  406fb6:	add    BYTE PTR [eax],al
  406fb8:	sub    eax,DWORD PTR [eax]
  406fba:	add    BYTE PTR [ecx],dl
  406fbc:	add    BYTE PTR [esi+0x22],bh
  406fbf:	add    BYTE PTR [eax],al
  406fc1:	add    al,0xa
  406fc3:	sub    eax,DWORD PTR [eax]
  406fc5:	push   es
  406fc6:	sub    al,BYTE PTR [eax]
  406fc8:	add    esi,DWORD PTR [eax]
  406fca:	or     DWORD PTR [eax],eax
  406fcc:	or     DWORD PTR [eax],eax
  406fce:	add    BYTE PTR [eax],al
  406fd0:	add    BYTE PTR [eax],al
  406fd2:	add    BYTE PTR [eax],al
  406fd4:	add    BYTE PTR [edx],al
  406fd6:	and    BYTE PTR [edx],0x0
  406fd9:	add    BYTE PTR [eax+eax*1],al
  406fdc:	sub    al,BYTE PTR [eax]
  406fde:	add    BYTE PTR [eax],al
  406fe0:	add    esi,DWORD PTR [eax]
  406fe2:	or     DWORD PTR [eax],eax
  406fe4:	daa    
  406fe5:	add    BYTE PTR [eax],al
  406fe7:	add    BYTE PTR [eax],al
  406fe9:	add    BYTE PTR [eax],al
  406feb:	add    BYTE PTR [ebx+0x5b],dh
  406fee:	add    BYTE PTR [eax],al
  406ff0:	push   es
  406ff1:	sub    dh,ch
  406ff3:	add    BYTE PTR [eax],al
  406ff5:	or     dh,BYTE PTR [esi+ecx*1+0x0]
  406ff9:	add    BYTE PTR [edx],al
  406ffb:	and    BYTE PTR [ebx],0x0
  406ffe:	add    BYTE PTR [ebx+esi*2],al
  407001:	cmp    DWORD PTR [eax],eax
  407003:	add    BYTE PTR [edx],cl
  407005:	sub    BYTE PTR [ecx],ch
  407007:	add    BYTE PTR [eax],al
  407009:	or     ah,BYTE PTR ds:0x258026
  40700f:	add    BYTE PTR [eax+eax*1],al
  407012:	sub    al,BYTE PTR [eax]
  407014:	add    esi,DWORD PTR [eax]
  407016:	or     DWORD PTR [eax],eax
  407018:	or     DWORD PTR [eax],eax
  40701a:	add    BYTE PTR [eax],al
  40701c:	add    BYTE PTR [eax],al
  40701e:	add    BYTE PTR [eax],al
  407020:	add    ch,BYTE PTR [eax]
  407022:	out    dx,eax
  407023:	add    BYTE PTR [eax],al
  407025:	or     al,BYTE PTR [eax]
  407027:	add    BYTE PTR [edx],ch
  407029:	add    BYTE PTR [eax],al
  40702b:	add    BYTE PTR [ebx],dl
  40702d:	xor    BYTE PTR [ebx],al
  40702f:	add    BYTE PTR [eax+eax*1],dh
  407032:	add    BYTE PTR [eax],al
  407034:	or     al,0x0
  407036:	add    BYTE PTR [ecx],dl
  407038:	add    BYTE PTR [eax],ch
  40703a:	adc    DWORD PTR [eax],eax
  40703c:	add    BYTE PTR [esi],al
  40703e:	and    eax,0xf06f26
  407043:	add    BYTE PTR [edx],cl
  407045:	or     al,BYTE PTR [esi]
  407047:	sub    al,0x20
  407049:	sbb    BYTE PTR [ebp+0x1],al
  40704c:	add    BYTE PTR [eax],al
  40704e:	add    dh,dh
  407050:	(bad)  
  407051:	(bad)  
  407052:	call   DWORD PTR [edi]
  407054:	sub    eax,0x5cd006
  407059:	add    BYTE PTR [esi],al
  40705b:	sub    BYTE PTR es:[ebp+0x0],ah
  40705f:	add    BYTE PTR [esi],al
  407061:	and    eax,0xf16f26
  407066:	add    BYTE PTR [edx],cl
  407068:	add    BYTE PTR [eax],al
  40706a:	add    BYTE PTR [edx],ch
  40706c:	sbb    esi,DWORD PTR [eax]
  40706e:	add    al,0x0
  407070:	mov    eax,ds:0x2c000000
  407075:	add    BYTE PTR [eax],al
  407077:	adc    DWORD PTR [eax],eax
  407079:	jle    0x40709f
  40707b:	add    BYTE PTR [eax],al
  40707d:	add    al,0x20
  40707f:	enter  0x9,0x0
  407083:	sub    BYTE PTR [eax+0x0],ah
  407086:	add    BYTE PTR [esi],al
  407088:	inc    BYTE PTR [ecx]
  40708a:	or     al,0x8
  40708c:	cmp    DWORD PTR [ebp+0x0],edi
  40708f:	add    BYTE PTR [eax],al
  407091:	sbb    eax,DWORD PTR [ebp+0x1]
  407094:	add    BYTE PTR [eax],al
  407096:	add    dh,dh
  407098:	(bad)  
  407099:	(bad)  
  40709a:	call   DWORD PTR [edi]
  40709c:	sub    eax,0x5dd006
  4070a1:	add    BYTE PTR [esi],al
  4070a3:	add    BYTE PTR es:[esi+0x25],bh
  4070a7:	add    BYTE PTR [eax],al
  4070a9:	add    al,0xb
  4070ab:	pop    es
  4070ac:	sub    dl,dh
  4070ae:	add    BYTE PTR [eax],al
  4070b0:	or     al,BYTE PTR [eax]
  4070b2:	pop    es
  4070b3:	sub    BYTE PTR [ecx],ah
  4070b5:	add    BYTE PTR [eax],al
  4070b7:	or     al,BYTE PTR [eax]
  4070b9:	add    BYTE PTR [esi+0x24],bh
  4070bc:	add    BYTE PTR [eax],al
  4070be:	add    al,0x20
  4070c0:	int3   
  4070c1:	or     DWORD PTR [eax],eax
  4070c3:	add    BYTE PTR [eax],ch
  4070c5:	pusha  
  4070c6:	add    BYTE PTR [eax],al
  4070c8:	push   es
  4070c9:	inc    BYTE PTR [ecx]
  4070cb:	or     al,0x8
  4070cd:	sub    al,0x32
  4070cf:	sbb    al,0x45
  4070d1:	add    DWORD PTR [eax],eax
  4070d3:	add    BYTE PTR [eax],al
  4070d5:	idiv   bh
  4070d7:	(bad)  
  4070d8:	jmp    FWORD PTR [eax]
  4070da:	adc    DWORD PTR [eax],eax
  4070dc:	add    BYTE PTR [esi],al
  4070de:	and    eax,0x6fe1426
  4070e3:	pop    esp
  4070e4:	add    BYTE PTR [eax],al
  4070e6:	push   es
  4070e7:	jae    0x4070dc
  4070e9:	add    BYTE PTR [eax],al
  4070eb:	or     ch,BYTE PTR [edi-0xc]
  4070ee:	add    BYTE PTR [eax],al
  4070f0:	or     al,BYTE PTR [eax]
  4070f2:	and    al,dl
  4070f4:	or     DWORD PTR [eax],eax
  4070f6:	add    BYTE PTR [eax],ch
  4070f8:	pusha  
  4070f9:	add    BYTE PTR [eax],al
  4070fb:	push   es
  4070fc:	and    BYTE PTR [eax+eax*1],0x0
  407100:	add    al,0x0
  407102:	add    dh,bl
  407104:	or     BYTE PTR [edi],al
  407106:	sub    BYTE PTR [eax+eax*1],ch
  407109:	add    BYTE PTR [edx],cl
  40710b:	add    ah,bl
  40710d:	add    BYTE PTR [eax],al
  40710f:	jle    0x407134
  407111:	add    BYTE PTR [eax],al
  407113:	add    al,0xa
  407115:	sub    eax,DWORD PTR [eax]
  407117:	push   es
  407118:	sub    al,BYTE PTR [eax]
  40711a:	add    BYTE PTR [eax],al
  40711c:	add    DWORD PTR [eax],edx
  40711e:	add    BYTE PTR [eax],al
  407120:	add    al,BYTE PTR [eax]
  407122:	inc    edx
  407123:	add    BYTE PTR [ebx-0x73],cl
  407126:	add    BYTE PTR [eax],cl
  407128:	add    BYTE PTR [eax],al
  40712a:	add    BYTE PTR [eax],al
  40712c:	adc    esi,DWORD PTR [eax]
  40712e:	add    eax,0x5e00
  407133:	add    BYTE PTR ds:0x7e110000,ch
  407139:	add    BYTE PTR es:[eax],al
  40713c:	add    al,0x2d
  40713e:	push   esi
  40713f:	pop    ss
  407140:	inc    ebp
  407141:	add    DWORD PTR [eax],eax
  407143:	add    BYTE PTR [eax],al
  407145:	idiv   bh
  407147:	(bad)  
  407148:	call   DWORD PTR [edi]
  40714a:	sub    eax,0x5ed006
  40714f:	add    BYTE PTR [esi],al
  407151:	es jb  0x4071b1
  407154:	add    BYTE PTR [eax],al
  407156:	jo     0x407162
  407158:	push   es
  407159:	sub    ch,dh
  40715b:	add    BYTE PTR [eax],al
  40715d:	or     ah,BYTE PTR ds:0xe9280b26
  407163:	add    BYTE PTR [eax],al
  407165:	or     ah,BYTE PTR ds:0x7160726
  40716b:	mov    gs,WORD PTR [ecx+0x6f]
  40716e:	test   BYTE PTR [eax],0x0
  407171:	or     ah,BYTE PTR ds:0x37280a26
  407177:	add    BYTE PTR [eax],al
  407179:	or     ah,BYTE PTR ds:0x3c6f0626
  40717f:	add    BYTE PTR [eax],al
  407181:	or     ah,BYTE PTR ds:0x611f0c26
  407187:	push   0x8
  407189:	sub    BYTE PTR [esi+0x0],ch
  40718c:	add    BYTE PTR [esi],al
  40718e:	and    eax,0x268026
  407193:	add    BYTE PTR [edx+ebp*1],al
  407196:	add    BYTE PTR [eax],al
  407198:	add    esi,DWORD PTR [eax]
  40719a:	or     DWORD PTR [eax],eax
  40719c:	pop    es
  40719d:	add    BYTE PTR [eax],al
  40719f:	add    BYTE PTR [eax],al
  4071a1:	add    BYTE PTR [eax],al
  4071a3:	add    BYTE PTR [edx],al
  4071a5:	sub    BYTE PTR [ecx],bh
  4071a7:	add    BYTE PTR [eax],al
  4071a9:	or     ch,BYTE PTR [edx]
  4071ab:	add    BYTE PTR [ebx],al
  4071ad:	xor    BYTE PTR [ecx],cl
  4071af:	add    BYTE PTR [esi],cl
  4071b1:	add    BYTE PTR [eax],al
  4071b3:	add    BYTE PTR [eax],al
  4071b5:	add    BYTE PTR [eax],al
  4071b7:	add    BYTE PTR [esi+0x26],bh
  4071ba:	add    BYTE PTR [eax],al
  4071bc:	add    al,0x2
  4071be:	sub    bh,dh
  4071c0:	add    BYTE PTR [eax],al
  4071c2:	or     ah,BYTE PTR ds:0x2a26
  4071c8:	add    esi,DWORD PTR [eax]
  4071ca:	or     DWORD PTR [eax],eax
  4071cc:	or     al,0x0
  4071ce:	add    BYTE PTR [eax],al
  4071d0:	add    BYTE PTR [eax],al
  4071d2:	add    BYTE PTR [eax],al
  4071d4:	jle    0x4071fc
  4071d6:	add    BYTE PTR [eax],al
  4071d8:	add    al,0x2
  4071da:	sub    al,bh
  4071dc:	add    BYTE PTR [eax],al
  4071de:	or     ch,BYTE PTR [edx]
  4071e0:	add    esi,DWORD PTR [eax]
  4071e2:	or     DWORD PTR [eax],eax
  4071e4:	push   cs
  4071e5:	add    BYTE PTR [eax],al
  4071e7:	add    BYTE PTR [eax],al
  4071e9:	add    BYTE PTR [eax],al
  4071eb:	add    BYTE PTR [esi+0x26],bh
  4071ee:	add    BYTE PTR [eax],al
  4071f0:	add    al,0x2
  4071f2:	sub    cl,bh
  4071f4:	add    BYTE PTR [eax],al
  4071f6:	or     ah,BYTE PTR ds:0x2a26
  4071fc:	add    esi,DWORD PTR [eax]
  4071fe:	or     DWORD PTR [eax],eax
  407200:	push   cs
  407201:	add    BYTE PTR [eax],al
  407203:	add    BYTE PTR [eax],al
  407205:	add    BYTE PTR [eax],al
  407207:	add    BYTE PTR [esi+0x26],bh
  40720a:	add    BYTE PTR [eax],al
  40720c:	add    al,0x2
  40720e:	sub    dl,bh
  407210:	add    BYTE PTR [eax],al
  407212:	or     ah,BYTE PTR ds:0x2a26
  407218:	adc    esi,DWORD PTR [eax]
  40721a:	push   es
  40721b:	add    dl,dl
  40721d:	add    BYTE PTR [eax],al
  40721f:	add    BYTE PTR [edi],cl
  407221:	add    BYTE PTR [eax],al
  407223:	adc    DWORD PTR [esi],edx
  407225:	or     bh,BYTE PTR [esi+0x26]
  407228:	add    BYTE PTR [eax],al
  40722a:	add    al,0x3
  40722c:	xchg   ecx,eax
  40722d:	and    BYTE PTR [eax+0x5f000000],al
  407233:	sub    eax,0x1451927
  407238:	add    BYTE PTR [eax],al
  40723a:	add    dh,dh
  40723c:	(bad)  
  40723d:	(bad)  
  40723e:	call   DWORD PTR [edi]
  407240:	sub    eax,0x64d006
  407245:	add    BYTE PTR [esi],al
  407247:	es jle 0x407270
  40724a:	add    BYTE PTR [eax],al
  40724c:	add    al,0x3
  40724e:	xchg   ecx,eax
  40724f:	or     al,BYTE PTR [ebx]
  407251:	pop    ss
  407252:	pop    eax
  407253:	dec    BYTE PTR [ebx]
  407255:	add    DWORD PTR [eax],eax
  407257:	cmp    BYTE PTR [eax+eax*1+0x0],bh
  40725b:	add    BYTE PTR [esi+0x26],bh
  40725e:	add    BYTE PTR [eax],al
  407260:	add    al,0x3
  407262:	xchg   ecx,eax
  407263:	pop    ds
  407264:	inc    eax
  407265:	pop    edi
  407266:	sub    eax,0x1451d2f
  40726b:	add    BYTE PTR [eax],al
  40726d:	add    dh,dh
  40726f:	(bad)  
  407270:	(bad)  
  407271:	(bad)  
  407272:	jle    0x40729a
  407274:	add    BYTE PTR [eax],al
  407276:	add    al,0x3
  407278:	xchg   ecx,eax
  407279:	and    BYTE PTR [edi-0x1],bh
  40727c:	(bad)  
  40727d:	call   FWORD PTR [edi+0x1e]
  407280:	bound  ecx,QWORD PTR [edx]
  407282:	push   es
  407283:	jle    0x4072ab
  407285:	add    BYTE PTR [eax],al
  407287:	add    al,0x3
  407289:	pop    ss
  40728a:	pop    eax
  40728b:	xchg   ecx,eax
  40728c:	pusha  
  40728d:	or     al,BYTE PTR [ebx]
  40728f:	sbb    BYTE PTR [eax-0x2],bl
  407292:	or     eax,DWORD PTR [ecx]
  407294:	add    BYTE PTR [ebx],ch
  407296:	inc    ecx
  407297:	jle    0x4072bf
  407299:	add    BYTE PTR [eax],al
  40729b:	add    al,0x3
  40729d:	xchg   ecx,eax
  40729e:	and    BYTE PTR [edi],bh
  4072a0:	(bad)  
  4072a1:	(bad)  
  4072a2:	call   FWORD PTR [edi+0x1f]
  4072a5:	sbb    BYTE PTR [edx+0xa],ah
  4072a8:	push   es
  4072a9:	jle    0x4072d1
  4072ab:	add    BYTE PTR [eax],al
  4072ad:	add    al,0x3
  4072af:	pop    ss
  4072b0:	pop    eax
  4072b1:	xchg   ecx,eax
  4072b2:	pop    ds
  4072b3:	adc    BYTE PTR [edx+0x60],ah
  4072b6:	or     al,BYTE PTR [esi]
  4072b8:	jle    0x4072e0
  4072ba:	add    BYTE PTR [eax],al
  4072bc:	add    al,0x3
  4072be:	sbb    BYTE PTR [eax-0x6f],bl
  4072c1:	push   ds
  4072c2:	bound  esp,QWORD PTR [eax+0xa]
  4072c5:	push   es
  4072c6:	jle    0x4072ee
  4072c8:	add    BYTE PTR [eax],al
  4072ca:	add    al,0x3
  4072cc:	sbb    DWORD PTR [eax-0x6f],ebx
  4072cf:	pusha  
  4072d0:	or     al,BYTE PTR [ebx]
  4072d2:	sbb    bl,BYTE PTR [eax-0x2]
  4072d5:	or     eax,DWORD PTR [ecx]
  4072d7:	add    BYTE PTR [esi],al
  4072d9:	pop    ss
  4072da:	das    
  4072db:	or     ebx,DWORD PTR [eax*2+0x1]
  4072e2:	idiv   bh
  4072e4:	(bad)  
  4072e5:	jmp    FWORD PTR [edx]
  4072e7:	jle    0x40730f
  4072e9:	add    BYTE PTR [eax],al
  4072eb:	add    al,0x3
  4072ed:	add    dl,BYTE PTR [esi]
  4072ef:	push   es
  4072f0:	sub    bl,bh
  4072f2:	add    BYTE PTR [eax],al
  4072f4:	or     ch,BYTE PTR [edx]
  4072f6:	add    BYTE PTR [eax],al
  4072f8:	adc    esi,DWORD PTR [eax]
  4072fa:	add    al,BYTE PTR [eax]
  4072fc:	or     eax,DWORD PTR [eax]
  4072fe:	add    BYTE PTR [eax],al
  407300:	add    BYTE PTR cs:[eax],al
  407303:	adc    DWORD PTR [eax],eax
  407305:	sub    BYTE PTR [ebp+0x0],bl
  407308:	add    BYTE PTR [esi],al
  40730a:	or     ch,BYTE PTR [ebx]
  40730c:	add    BYTE PTR [esi],al
  40730e:	sub    al,BYTE PTR [eax]
  407310:	adc    esi,DWORD PTR [eax]
  407312:	add    eax,0x4700
  407317:	add    BYTE PTR ds:0x7e110000,ch
  40731d:	sub    BYTE PTR [eax],al
  40731f:	add    BYTE PTR [ebp*1+0x87723f],al
  407326:	add    BYTE PTR [eax+0xa],dh
  407329:	push   es
  40732a:	sub    ch,dh
  40732c:	add    BYTE PTR [eax],al
  40732e:	or     cl,BYTE PTR [ebx]
  407330:	sub    cl,ch
  407332:	add    BYTE PTR [eax],al
  407334:	or     ah,BYTE PTR ds:0x7160726
  40733a:	mov    gs,WORD PTR [ecx+0x6f]
  40733d:	test   BYTE PTR [eax],0x0
  407340:	or     ah,BYTE PTR ds:0x37280a26
  407346:	add    BYTE PTR [eax],al
  407348:	or     ah,BYTE PTR ds:0x3c6f0626
  40734e:	add    BYTE PTR [eax],al
  407350:	or     cl,BYTE PTR [edi+ebx*1]
  407353:	popa   
  407354:	push   0x8
  407356:	sub    BYTE PTR [esi+0x0],ch
  407359:	add    BYTE PTR [esi],al
  40735b:	and    eax,0x288026
  407360:	add    BYTE PTR [edx+ebp*1],al
  407363:	add    BYTE PTR [ebx],al
  407365:	xor    BYTE PTR [ecx],cl
  407367:	add    BYTE PTR [edi],al
  407369:	add    BYTE PTR [eax],al
  40736b:	add    BYTE PTR [eax],al
  40736d:	add    BYTE PTR [eax],al
  40736f:	add    BYTE PTR [edx],al
  407371:	sub    BYTE PTR [ecx],bh
  407373:	add    BYTE PTR [eax],al
  407375:	or     ch,BYTE PTR [edx]
  407377:	add    BYTE PTR [ebx],dl
  407379:	xor    BYTE PTR ds:0xe100,al
  40737f:	add    BYTE PTR [edi],ch
  407381:	add    BYTE PTR [eax],al
  407383:	adc    DWORD PTR [esi],edx
  407385:	or     bh,BYTE PTR [esi+0x28]
  407388:	add    BYTE PTR [eax],al
  40738a:	add    al,0x2
  40738c:	xchg   ecx,eax
  40738d:	and    BYTE PTR [eax+0x5f000000],al
  407393:	sub    eax,0x1451727
  407398:	add    BYTE PTR [eax],al
  40739a:	add    dh,dh
  40739c:	(bad)  
  40739d:	(bad)  
  40739e:	call   DWORD PTR [edi]
  4073a0:	sub    eax,0x68d006
  4073a5:	add    BYTE PTR [esi],al
  4073a7:	es jle 0x4073d2
  4073aa:	add    BYTE PTR [eax],al
  4073ac:	add    al,0x2
  4073ae:	xchg   ecx,eax
  4073af:	or     al,BYTE PTR [edx]
  4073b1:	pop    ss
  4073b2:	pop    eax
  4073b3:	dec    BYTE PTR [ebx]
  4073b5:	add    BYTE PTR [eax],al
  4073b7:	cmp    BYTE PTR [eax+eax*1+0x0],bh
  4073bb:	add    BYTE PTR [esi+0x28],bh
  4073be:	add    BYTE PTR [eax],al
  4073c0:	add    al,0x2
  4073c2:	xchg   ecx,eax
  4073c3:	pop    ds
  4073c4:	inc    eax
  4073c5:	pop    edi
  4073c6:	sub    eax,0x1451a2f
  4073cb:	add    BYTE PTR [eax],al
  4073cd:	add    dh,dh
  4073cf:	(bad)  
  4073d0:	(bad)  
  4073d1:	(bad)  
  4073d2:	jle    0x4073fc
  4073d4:	add    BYTE PTR [eax],al
  4073d6:	add    al,0x2
  4073d8:	xchg   ecx,eax
  4073d9:	and    BYTE PTR [edi-0x1],bh
  4073dc:	(bad)  
  4073dd:	call   FWORD PTR [edi+0x1e]
  4073e0:	bound  ecx,QWORD PTR [edx]
  4073e2:	push   es
  4073e3:	jle    0x40740d
  4073e5:	add    BYTE PTR [eax],al
  4073e7:	add    al,0x2
  4073e9:	pop    ss
  4073ea:	pop    eax
  4073eb:	xchg   ecx,eax
  4073ec:	pusha  
  4073ed:	or     al,BYTE PTR [edx]
  4073ef:	sbb    BYTE PTR [eax-0x2],bl
  4073f2:	or     eax,DWORD PTR [eax]
  4073f4:	add    BYTE PTR [ebx],ch
  4073f6:	inc    ecx
  4073f7:	jle    0x407421
  4073f9:	add    BYTE PTR [eax],al
  4073fb:	add    al,0x2
  4073fd:	xchg   ecx,eax
  4073fe:	and    BYTE PTR [edi],bh
  407400:	(bad)  
  407401:	(bad)  
  407402:	call   FWORD PTR [edi+0x1f]
  407405:	sbb    BYTE PTR [edx+0xa],ah
  407408:	push   es
  407409:	jle    0x407433
  40740b:	add    BYTE PTR [eax],al
  40740d:	add    al,0x2
  40740f:	pop    ss
  407410:	pop    eax
  407411:	xchg   ecx,eax
  407412:	pop    ds
  407413:	adc    BYTE PTR [edx+0x60],ah
  407416:	or     al,BYTE PTR [esi]
  407418:	jle    0x407442
  40741a:	add    BYTE PTR [eax],al
  40741c:	add    al,0x2
  40741e:	sbb    BYTE PTR [eax-0x6f],bl
  407421:	push   ds
  407422:	bound  esp,QWORD PTR [eax+0xa]
  407425:	push   es
  407426:	jle    0x407450
  407428:	add    BYTE PTR [eax],al
  40742a:	add    al,0x2
  40742c:	sbb    DWORD PTR [eax-0x6f],ebx
  40742f:	pusha  
  407430:	or     al,BYTE PTR [edx]
  407432:	sbb    bl,BYTE PTR [eax-0x2]
  407435:	or     eax,DWORD PTR [eax]
  407437:	add    BYTE PTR [esi],al
  407439:	pop    ss
  40743a:	das    
  40743b:	adc    BYTE PTR [ecx],bl
  40743d:	inc    ebp
  40743e:	add    DWORD PTR [eax],eax
  407440:	add    BYTE PTR [eax],al
  407442:	idiv   bh
  407444:	(bad)  
  407445:	(bad)  
  407446:	jle    0x407444
  407448:	add    BYTE PTR [eax],al
  40744a:	or     ch,BYTE PTR [edx]
  40744c:	sub    ch,bh
  40744e:	add    BYTE PTR [eax],al
  407450:	or     bh,BYTE PTR [esi+0x28]
  407453:	add    BYTE PTR [eax],al
  407455:	add    al,0x2
  407457:	push   es
  407458:	outs   dx,DWORD PTR ds:[esi]
  407459:	test   BYTE PTR [eax],0x0
  40745c:	or     cl,BYTE PTR [ebx]
  40745e:	pop    es
  40745f:	sub    dh,bh
  407461:	add    BYTE PTR [eax],al
  407463:	or     ch,BYTE PTR [edx]
  407465:	add    BYTE PTR [eax],al
  407467:	add    BYTE PTR [ebx],al
  407469:	xor    BYTE PTR [ebx],al
  40746b:	add    BYTE PTR [ecx+0x0],al
  40746e:	add    BYTE PTR [eax],al
  407470:	add    BYTE PTR [eax],al
  407472:	add    BYTE PTR [eax],al
  407474:	adc    al,0x80
  407476:	sub    al,0x0
  407478:	add    BYTE PTR [esp+edx*1],al
  40747b:	sub    BYTE PTR ds:0x20040000,0xff
  407482:	(bad)  
  407483:	(bad)  
  407484:	jg     0x407406
  407486:	sub    al,BYTE PTR [eax]
  407488:	add    BYTE PTR [eax+eiz*1],al
  40748b:	add    BYTE PTR [eax],al
  40748d:	add    BYTE PTR [eax+0x2b80],al
  407493:	add    al,0x16
  407495:	jae    0x407496
  407497:	add    BYTE PTR [eax],al
  407499:	or     al,BYTE PTR [eax+0x400002c]
  40749f:	push   ss
  4074a0:	jae    0x4074a1
  4074a2:	add    BYTE PTR [eax],al
  4074a4:	or     al,BYTE PTR [eax+0x400002d]
  4074aa:	jae    0x4074e5
  4074ac:	add    BYTE PTR [eax],al
  4074ae:	or     al,BYTE PTR [eax+0x4000029]
  4074b4:	sub    al,BYTE PTR [eax]
  4074b6:	add    BYTE PTR [eax],al
  4074b8:	add    esi,DWORD PTR [eax]
  4074ba:	or     DWORD PTR [eax],eax
  4074bc:	pop    es
  4074bd:	add    BYTE PTR [eax],al
  4074bf:	add    BYTE PTR [eax],al
  4074c1:	add    BYTE PTR [eax],al
  4074c3:	add    BYTE PTR [edx],al
  4074c5:	sub    BYTE PTR [ecx],bh
  4074c7:	add    BYTE PTR [eax],al
  4074c9:	or     ch,BYTE PTR [edx]
  4074cb:	add    BYTE PTR [ebx],dl
  4074cd:	xor    BYTE PTR [eax+eax*1],al
  4074d0:	xor    al,BYTE PTR [eax]
  4074d2:	add    BYTE PTR [eax],al
  4074d4:	add    al,0x0
  4074d6:	add    BYTE PTR [ecx],dl
  4074d8:	add    ch,BYTE PTR [edi+0x3e]
  4074db:	add    BYTE PTR [eax],al
  4074dd:	or     cl,BYTE PTR [edx]
  4074df:	push   es
  4074e0:	pop    ds
  4074e1:	sub    al,0x6f
  4074e3:	aas    
  4074e4:	add    BYTE PTR [eax],al
  4074e6:	or     cl,BYTE PTR [ebx]
  4074e8:	pop    es
  4074e9:	push   ss
  4074ea:	xor    bl,BYTE PTR [ebx*1+0x145]
  4074f1:	add    dh,dh
  4074f3:	(bad)  
  4074f4:	(bad)  
  4074f5:	call   DWORD PTR [edi]
  4074f7:	sub    eax,0x6bd006
  4074fc:	add    BYTE PTR [esi],al
  4074fe:	es push es
  407500:	push   ss
  407501:	pop    es
  407502:	outs   dx,DWORD PTR ds:[esi]
  407503:	inc    eax
  407504:	add    BYTE PTR [eax],al
  407506:	or     cl,BYTE PTR [edx]
  407508:	push   es
  407509:	sub    al,BYTE PTR [eax]
  40750b:	add    BYTE PTR [ebx],bl
  40750d:	xor    BYTE PTR [eax+eax*1],al
  407510:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407511:	add    BYTE PTR [eax],al
  407513:	add    BYTE PTR [eax],dh
  407515:	add    BYTE PTR [eax],al
  407517:	adc    DWORD PTR [edx],eax
  407519:	outs   dx,DWORD PTR ds:[esi]
  40751a:	add    BYTE PTR ds:[eax],al
  40751d:	or     cl,BYTE PTR [edx]
  40751f:	push   es
  407520:	jb     0x4074d3
  407522:	add    BYTE PTR [eax],al
  407524:	jo     0x407595
  407526:	add    BYTE PTR [ecx],al
  407528:	add    BYTE PTR [edx],cl
  40752a:	and    eax,0x16070b26
  40752f:	das    
  407530:	pop    ds
  407531:	sbb    al,0x45
  407533:	add    DWORD PTR [eax],eax
  407535:	add    BYTE PTR [eax],al
  407537:	idiv   bh
  407539:	(bad)  
  40753a:	call   DWORD PTR [edi]
  40753c:	sub    eax,0x6cd006
  407541:	add    BYTE PTR [esi],al
  407543:	es push es
  407545:	jb     0x407518
  407547:	add    BYTE PTR [eax],al
  407549:	jo     0x4075ba
  40754b:	add    BYTE PTR [ecx],al
  40754d:	add    BYTE PTR [edx],cl
  40754f:	or     eax,DWORD PTR [edi]
  407551:	push   ss
  407552:	das    
  407553:	add    eax,0xde051314
  407558:	bound  eax,QWORD PTR [edi]
  40755a:	pop    ds
  40755b:	addps  xmm1,XMMWORD PTR [ebx]
  40755e:	push   es
  40755f:	pop    es
  407560:	outs   dx,DWORD PTR ds:[esi]
  407561:	add    DWORD PTR [ecx],eax
  407563:	add    BYTE PTR [edx],cl
  407565:	and    eax,0x2e6e1f26
  40756a:	adc    eax,0x16f0706
  40756f:	add    DWORD PTR [eax],eax
  407571:	or     bl,BYTE PTR [edi]
  407573:	dec    esi
  407574:	xor    ecx,DWORD PTR [edi]
  407576:	sbb    eax,DWORD PTR [ebp+0x1]
  407579:	add    BYTE PTR [eax],al
  40757b:	add    dh,dh
  40757d:	(bad)  
  40757e:	(bad)  
  40757f:	call   DWORD PTR [ebx+edx*1]
  407582:	add    eax,0x70636de
  407587:	pop    ds
  407588:	adc    BYTE PTR [edi+0x40],ch
  40758b:	add    BYTE PTR [eax],al
  40758d:	or     ah,BYTE PTR ds:0x20080c26
  407593:	add    eax,DWORD PTR [edx]
  407595:	add    BYTE PTR [eax],al
  407597:	sub    BYTE PTR [edx],al
  407599:	add    DWORD PTR [eax],eax
  40759b:	or     ah,BYTE PTR ds:0x28090d26
  4075a1:	add    eax,DWORD PTR [ecx]
  4075a3:	add    BYTE PTR [edx],cl
  4075a5:	and    eax,0x11041326
  4075aa:	add    al,0x28
  4075ac:	add    al,0x1
  4075ae:	add    BYTE PTR [edx],cl
  4075b0:	adc    DWORD PTR [ebx+edx*1],eax
  4075b3:	add    eax,0xde2605de
  4075b8:	add    BYTE PTR [edx+ebp*1],dl
  4075bb:	adc    DWORD PTR ds:0x100002a,eax
  4075c1:	adc    BYTE PTR [eax],al
  4075c3:	add    BYTE PTR [eax],al
  4075c5:	add    BYTE PTR [eax],al
  4075c7:	add    BYTE PTR [esi+0x6903009e],bl
  4075cd:	add    BYTE PTR [eax],al
  4075cf:	add    DWORD PTR [ebx],ebx
  4075d1:	xor    BYTE PTR [ebx],al
  4075d3:	add    BYTE PTR [ebx],ah
  4075d5:	add    BYTE PTR [eax],al
  4075d7:	add    BYTE PTR [ecx],dh
  4075d9:	add    BYTE PTR [eax],al
  4075db:	adc    DWORD PTR [esi+0x29],edi
  4075de:	add    BYTE PTR [eax],al
  4075e0:	add    al,0x25
  4075e2:	or     ebp,DWORD PTR [eax]
  4075e4:	and    DWORD PTR [eax],eax
  4075e6:	add    BYTE PTR [edx],cl
  4075e8:	pop    ds
  4075e9:	popa   
  4075ea:	push   0x2
  4075ec:	sub    BYTE PTR [edi+0x0],ch
  4075ef:	add    BYTE PTR [esi],al
  4075f1:	and    eax,0x7de0a26
  4075f6:	pop    es
  4075f7:	sub    BYTE PTR [eax+eax*1],ch
  4075fa:	add    BYTE PTR [edx],cl
  4075fc:	fadd   QWORD PTR [esi]
  4075fe:	sub    al,BYTE PTR [eax]
  407600:	add    DWORD PTR [eax],edx
  407602:	add    BYTE PTR [eax],al
  407604:	add    al,BYTE PTR [eax]
  407606:	or     al,0x0
  407608:	push   cs
  407609:	sbb    al,BYTE PTR [eax]
  40760b:	pop    es
  40760c:	add    BYTE PTR [eax],al
  40760e:	add    BYTE PTR [eax],al
  407610:	sbb    esi,DWORD PTR [eax]
  407612:	add    eax,DWORD PTR [eax]
  407614:	sbb    al,BYTE PTR [eax]
  407616:	add    BYTE PTR [eax],al
  407618:	xor    al,BYTE PTR [eax]
  40761a:	add    BYTE PTR [ecx],dl
  40761c:	add    ebp,DWORD PTR [eax]
  40761e:	ins    DWORD PTR es:[edi],dx
  40761f:	add    BYTE PTR [eax],al
  407621:	push   es
  407622:	or     bl,dh
  407624:	(bad)  
  407626:	pop    ds
  407627:	popa   
  407628:	push   0x3
  40762a:	sub    BYTE PTR [edi+0x0],ch
  40762d:	add    BYTE PTR [esi],al
  40762f:	and    eax,0xde0a26
  407634:	push   es
  407635:	sub    al,BYTE PTR [eax]
  407637:	add    BYTE PTR [ecx],al
  407639:	adc    BYTE PTR [eax],al
  40763b:	add    BYTE PTR [eax],al
  40763d:	add    BYTE PTR [eax],al
  40763f:	add    BYTE PTR [ecx],cl
  407641:	or     DWORD PTR [eax],eax
  407643:	setnp  BYTE PTR [eax]
  407646:	add    BYTE PTR [ecx],al
  407648:	sbb    esi,DWORD PTR [eax]
  40764a:	pop    es
  40764b:	add    BYTE PTR [ebx+eax*1],bl
  40764e:	add    BYTE PTR [eax],al
  407650:	xor    eax,DWORD PTR [eax]
  407652:	add    BYTE PTR [ecx],dl
  407654:	add    ecx,DWORD PTR [edx]
  407656:	adc    al,0xb
  407658:	add    ebp,DWORD PTR [edi+0x5]
  40765b:	add    DWORD PTR [eax],eax
  40765d:	or     ah,BYTE PTR ds:0x80cd126
  407663:	ror    WORD PTR [edi+edx*1],1
  407667:	or     eax,0x6f030d2b
  40766c:	add    eax,0x250a0001
  407671:	es or  DWORD PTR es:[edi],edx
  407675:	pop    eax
  407676:	or     eax,0xef321909
  40767b:	sbb    eax,DWORD PTR [ebp+0x1]
  40767e:	add    BYTE PTR [eax],al
  407680:	add    dh,dh
  407682:	(bad)  
  407683:	(bad)  
  407684:	call   DWORD PTR [edi]
  407686:	sub    eax,0x6fd006
  40768b:	add    BYTE PTR [esi],al
  40768d:	or     BYTE PTR es:[eax],bl
  407690:	pop    edi
  407691:	cmp    edi,esp
  407693:	add    DWORD PTR [eax],eax
  407695:	add    BYTE PTR [ebx+0x6],dh
  407698:	add    DWORD PTR [eax],eax
  40769a:	or     dl,BYTE PTR [ebx]
  40769c:	add    al,0x1e
  40769e:	lea    ebx,[esi]
  4076a0:	add    BYTE PTR [eax],al
  4076a2:	add    DWORD PTR [ebx],edx
  4076a4:	add    eax,0x16051103
  4076a9:	push   ds
  4076aa:	outs   dx,DWORD PTR ds:[esi]
  4076ab:	pop    es
  4076ac:	add    DWORD PTR [eax],eax
  4076ae:	or     ah,BYTE PTR ds:0x4112626
  4076b4:	adc    DWORD PTR ds:0x1086f,eax
  4076ba:	or     bl,BYTE PTR [esi]
  4076bc:	lea    ebx,[esi]
  4076be:	add    BYTE PTR [eax],al
  4076c0:	add    DWORD PTR [ebx],edx
  4076c2:	push   es
  4076c3:	add    edx,DWORD PTR [ecx]
  4076c5:	push   es
  4076c6:	push   ss
  4076c7:	push   ds
  4076c8:	outs   dx,DWORD PTR ds:[esi]
  4076c9:	pop    es
  4076ca:	add    DWORD PTR [eax],eax
  4076cc:	or     ah,BYTE PTR ds:0x13172626
  4076d2:	pop    es
  4076d3:	adc    DWORD PTR [esi],eax
  4076d5:	adc    edx,DWORD PTR ds:0x2b161316
  4076db:	and    BYTE PTR [ecx],dl
  4076dd:	adc    eax,0x13911611
  4076e2:	or     BYTE PTR [ecx],dl
  4076e4:	or     BYTE PTR [edi+ecx*1],ch
  4076e7:	sbb    BYTE PTR [ebp+0x1],al
  4076ea:	add    BYTE PTR [eax],al
  4076ec:	add    dh,dh
  4076ee:	(bad)  
  4076ef:	(bad)  
  4076f0:	call   DWORD PTR [esi]
  4076f2:	adc    eax,DWORD PTR [edi]
  4076f4:	sub    ebx,DWORD PTR [eax]
  4076f6:	adc    DWORD PTR [esi],edx
  4076f8:	pop    ss
  4076f9:	pop    eax
  4076fa:	adc    edx,DWORD PTR [esi]
  4076fc:	adc    DWORD PTR [esi],edx
  4076fe:	adc    DWORD PTR ds:0xd832698e,edx
  407704:	sbb    al,BYTE PTR [ebp+0x1]
  407707:	add    BYTE PTR [eax],al
  407709:	add    dh,dh
  40770b:	(bad)  
  40770c:	(bad)  
  40770d:	call   DWORD PTR [ecx]
  40770f:	pop    es
  407710:	sub    al,0x1a
  407712:	sbb    DWORD PTR [ebp+0x1],eax
  407715:	add    BYTE PTR [eax],al
  407717:	add    dh,dh
  407719:	(bad)  
  40771a:	(bad)  
  40771b:	jmp    FWORD PTR [eax]
  40771d:	aaa    
  40771e:	add    BYTE PTR [eax],al
  407720:	or     ah,BYTE PTR ds:0x6c2826
  407726:	add    BYTE PTR [esi],al
  407728:	and    eax,0x11061326
  40772d:	add    al,0x11
  40772f:	push   es
  407730:	outs   dx,DWORD PTR ds:[esi]
  407731:	or     DWORD PTR [ecx],eax
  407733:	add    BYTE PTR [edx],cl
  407735:	jle    0x407763
  407737:	add    BYTE PTR [eax],al
  407739:	add    al,0x2d
  40773b:	inc    esp
  40773c:	sbb    al,BYTE PTR [ebp+0x1]
  40773f:	add    BYTE PTR [eax],al
  407741:	add    dh,dh
  407743:	(bad)  
  407744:	(bad)  
  407745:	(bad)  
  407746:	jle    0x407772
  407748:	add    BYTE PTR [eax],al
  40774a:	add    al,0x20
  40774c:	(bad)  
  40774d:	(bad)  
  40774e:	(bad)  
  40774f:	jg     0x407784
  407751:	pop    ds
  407752:	sbb    eax,0x145
  407757:	add    dh,dh
  407759:	(bad)  
  40775a:	(bad)  
  40775b:	(bad)  
  40775c:	jle    0x40778a
  40775e:	add    BYTE PTR [eax],al
  407760:	add    al,0x3
  407762:	outs   dx,DWORD PTR ds:[esi]
  407763:	or     al,BYTE PTR [ecx]
  407765:	add    BYTE PTR [edx],cl
  407767:	and    eax,0xb6f6926
  40776c:	add    DWORD PTR [eax],eax
  40776e:	or     ch,BYTE PTR [ebx]
  407770:	movd   DWORD PTR [eax+eax*1],mm5
  407774:	add    BYTE PTR [esi+edi*2],al
  407777:	sub    al,BYTE PTR [eax]
  407779:	add    BYTE PTR [edi+ebp*2],al
  40777c:	or     eax,DWORD PTR [ecx]
  40777e:	add    BYTE PTR [edx],cl
  407780:	jle    0x4077ae
  407782:	add    BYTE PTR [eax],al
  407784:	add    al,0x16
  407786:	push   0x6f
  407788:	or     al,0x1
  40778a:	add    BYTE PTR [edx],cl
  40778c:	adc    DWORD PTR [edi+ebp*2],eax
  40778f:	or     eax,0x250a0001
  407794:	adc    ecx,DWORD PTR es:[ecx]
  407797:	adc    DWORD PTR [ecx],ecx
  407799:	outs   dx,DWORD PTR ds:[esi]
  40779a:	push   cs
  40779b:	add    DWORD PTR [eax],eax
  40779d:	or     ah,BYTE PTR ds:0x110a1326
  4077a3:	or     DWORD PTR [edi+0xf],ebp
  4077a6:	add    DWORD PTR [eax],eax
  4077a8:	or     ah,BYTE PTR ds:0x9112626
  4077ae:	outs   dx,DWORD PTR ds:[esi]
  4077af:	sgdtd  [eax]
  4077b2:	or     ah,BYTE PTR ds:0x1e8d26
  4077b8:	add    BYTE PTR [ecx],al
  4077ba:	adc    ecx,DWORD PTR [ebx]
  4077bc:	adc    DWORD PTR [ecx],ecx
  4077be:	outs   dx,DWORD PTR ds:[esi]
  4077bf:	push   cs
  4077c0:	add    DWORD PTR [eax],eax
  4077c2:	or     cl,BYTE PTR [ebp+0x100001e]
  4077c8:	adc    ecx,DWORD PTR [ebx+eax*1]
  4077cb:	outs   dx,DWORD PTR ds:[esi]
  4077cc:	adc    BYTE PTR [ecx],al
  4077ce:	add    BYTE PTR [edx],cl
  4077d0:	imul   edx,DWORD PTR [ebx],0x3372b0d
  4077d6:	adc    DWORD PTR [esi+edx*1],ecx
  4077d9:	adc    DWORD PTR [edx],ecx
  4077db:	outs   dx,DWORD PTR ds:[esi]
  4077dc:	pop    es
  4077dd:	add    DWORD PTR [eax],eax
  4077df:	or     ah,BYTE PTR ds:0x9112626
  4077e5:	adc    DWORD PTR [esi+edx*1],ecx
  4077e8:	adc    DWORD PTR [edx],ecx
  4077ea:	adc    DWORD PTR [ebx],ecx
  4077ec:	push   ss
  4077ed:	outs   dx,DWORD PTR ds:[esi]
  4077ee:	adc    DWORD PTR [ecx],eax
  4077f0:	add    BYTE PTR [edx],cl
  4077f2:	and    eax,0x7e0e1326
  4077f7:	sub    al,0x0
  4077f9:	add    BYTE PTR [ecx+edx*1],al
  4077fc:	or     edx,DWORD PTR [esi]
  4077fe:	adc    DWORD PTR [esi],ecx
  407800:	outs   dx,DWORD PTR ds:[esi]
  407801:	adc    al,BYTE PTR [ecx]
  407803:	add    BYTE PTR [edx],cl
  407805:	adc    DWORD PTR ds:0x13580a11,ecx
  40780b:	or     eax,0xa110d11
  407810:	pop    eax
  407811:	push   0x3
  407813:	outs   dx,DWORD PTR ds:[esi]
  407814:	or     al,BYTE PTR [ecx]
  407816:	add    BYTE PTR [edx],cl
  407818:	and    eax,0x1cb93226
  40781d:	inc    ebp
  40781e:	add    DWORD PTR [eax],eax
  407820:	add    BYTE PTR [eax],al
  407822:	idiv   bh
  407824:	(bad)  
  407825:	inc    DWORD PTR [ebx]
  407827:	adc    DWORD PTR [esi+edx*1],ecx
  40782a:	add    ebp,DWORD PTR [edi+0xa]
  40782d:	add    DWORD PTR [eax],eax
  40782f:	or     dl,BYTE PTR [ecx]
  407831:	or     eax,0x6f69596a
  407836:	pop    es
  407837:	add    DWORD PTR [eax],eax
  407839:	or     ah,BYTE PTR ds:0x9112626
  40783f:	adc    DWORD PTR [esi+edx*1],ecx
  407842:	add    ebp,DWORD PTR [edi+0xa]
  407845:	add    DWORD PTR [eax],eax
  407847:	or     ah,BYTE PTR ds:0x6a0d1126
  40784d:	pop    ecx
  40784e:	imul   ebp,DWORD PTR [edi+0x13],0x250a0001
  407855:	adc    ecx,DWORD PTR es:[edi]
  407858:	jle    0x407886
  40785a:	add    BYTE PTR [eax],al
  40785c:	add    al,0x11
  40785e:	movhps xmm2,QWORD PTR [ecx]
  407861:	jle    0x152e7d0
  407867:	add    BYTE PTR [edx],cl
  407869:	jle    0x407897
  40786b:	add    BYTE PTR [eax],al
  40786d:	add    al,0xa
  40786f:	push   es
  407870:	push   ss
  407871:	push   0x6f
  407873:	or     al,0x1
  407875:	add    BYTE PTR [edx],cl
  407877:	jle    0x4078a5
  407879:	add    BYTE PTR [eax],al
  40787b:	add    al,0xb
  40787d:	or     BYTE PTR [esi],bl
  40787f:	pop    edi
  407880:	cmp    DWORD PTR [edi+0x18000000],esi
  407886:	inc    ebp
  407887:	add    DWORD PTR [eax],eax
  407889:	add    BYTE PTR [eax],al
  40788b:	idiv   bh
  40788d:	(bad)  
  40788e:	(bad)  
  40788f:	jle    0x4078be
  407891:	add    BYTE PTR [eax],al
  407893:	add    al,0x2d
  407895:	inc    esp
  407896:	pop    ss
  407897:	inc    ebp
  407898:	add    DWORD PTR [eax],eax
  40789a:	add    BYTE PTR [eax],al
  40789c:	idiv   bh
  40789e:	(bad)  
  40789f:	(bad)  
  4078a0:	jle    0x4078cd
  4078a2:	add    BYTE PTR [eax],al
  4078a4:	add    al,0x20
  4078a6:	add    BYTE PTR [eax],al
  4078a8:	add    BYTE PTR [eax+0x451c1f33],al
  4078ae:	add    DWORD PTR [eax],eax
  4078b0:	add    BYTE PTR [eax],al
  4078b2:	idiv   bh
  4078b4:	(bad)  
  4078b5:	(bad)  
  4078b6:	jle    0x4078e5
  4078b8:	add    BYTE PTR [eax],al
  4078ba:	add    al,0x6
  4078bc:	outs   dx,DWORD PTR ds:[esi]
  4078bd:	or     al,BYTE PTR [ecx]
  4078bf:	add    BYTE PTR [edx],cl
  4078c1:	imul   ebx,DWORD PTR [eax],0x10b6f5a
  4078c7:	add    BYTE PTR [edx],cl
  4078c9:	sub    ecx,DWORD PTR [edi]
  4078cb:	jle    0x4078fa
  4078cd:	add    BYTE PTR [eax],al
  4078cf:	add    al,0x7e
  4078d1:	sub    eax,DWORD PTR [eax]
  4078d3:	add    BYTE PTR [edi+ebp*2],al
  4078d6:	or     eax,DWORD PTR [ecx]
  4078d8:	add    BYTE PTR [edx],cl
  4078da:	jle    0x407909
  4078dc:	add    BYTE PTR [eax],al
  4078de:	add    al,0x16
  4078e0:	push   0x6f
  4078e2:	or     al,0x1
  4078e4:	add    BYTE PTR [edx],cl
  4078e6:	push   es
  4078e7:	push   ss
  4078e8:	jae    0x4078fe
  4078ea:	add    DWORD PTR [eax],eax
  4078ec:	or     dl,BYTE PTR [ebx]
  4078ee:	adc    BYTE PTR [eax],ah
  4078f0:	call   0x134078f8
  4078f5:	adc    DWORD PTR [ecx],edx
  4078f7:	adc    DWORD PTR [ebp+0x100001e],ecx
  4078fd:	adc    edx,DWORD PTR [ebx]
  4078ff:	adc    DWORD PTR [eax],edx
  407901:	adc    DWORD PTR [ebx],edx
  407903:	push   ss
  407904:	adc    DWORD PTR [ecx],edx
  407906:	outs   dx,DWORD PTR ds:[esi]
  407907:	pop    es
  407908:	add    DWORD PTR [eax],eax
  40790a:	or     dl,BYTE PTR [ebx]
  40790c:	adc    dl,BYTE PTR [ecx]
  40790e:	adc    dl,BYTE PTR [esi]
  407910:	xor    DWORD PTR [edi],ecx
  407912:	jle    0x407941
  407914:	add    BYTE PTR [eax],al
  407916:	add    al,0x11
  407918:	adc    edx,DWORD PTR [esi]
  40791a:	adc    DWORD PTR [edx],edx
  40791c:	outs   dx,DWORD PTR ds:[esi]
  40791d:	adc    al,BYTE PTR [ecx]
  40791f:	add    BYTE PTR [edx],cl
  407921:	adc    DWORD PTR [edx],edx
  407923:	adc    DWORD PTR [ecx],edx
  407925:	das    
  407926:	fcomp  DWORD PTR ds:0x145
  40792c:	add    dh,dh
  40792e:	(bad)  
  40792f:	(bad)  
  407930:	(bad)  
  407931:	jle    0x407960
  407933:	add    BYTE PTR [eax],al
  407935:	add    al,0xb
  407937:	fiadd  WORD PTR [ebx]
  407939:	fiadd  WORD PTR es:[eax]
  40793c:	pop    es
  40793d:	sub    al,0x9
  40793f:	pop    es
  407940:	outs   dx,DWORD PTR ds:[esi]
  407941:	adc    eax,0x250a0001
  407946:	sub    al,BYTE PTR es:[ebx]
  407949:	outs   dx,DWORD PTR ds:[esi]
  40794a:	or     al,BYTE PTR [ecx]
  40794c:	add    BYTE PTR [edx],cl
  40794e:	add    ebp,DWORD PTR [edi+0x10]
  407951:	add    DWORD PTR [eax],eax
  407953:	or     ah,BYTE PTR ds:0x8dd45926
  407959:	push   ds
  40795a:	add    BYTE PTR [eax],al
  40795c:	add    DWORD PTR [ebx],edx
  40795e:	adc    al,0x3
  407960:	adc    DWORD PTR [esi+edx*1],edx
  407963:	adc    DWORD PTR [esi+ecx*4],edx
  407966:	imul   ebp,DWORD PTR [edi+0x7],0x260a0001
  40796d:	adc    DWORD PTR [edx+ebp*1],edx
  407970:	add    DWORD PTR [eax],edx
  407972:	add    BYTE PTR [eax],al
  407974:	add    BYTE PTR [eax],al
  407976:	cmp    eax,DWORD PTR [edx]
  407978:	stos   BYTE PTR es:[edi],al
  407979:	in     eax,0x2
  40797b:	add    ecx,DWORD PTR [ebx+0x0]
  40797e:	add    BYTE PTR [ecx],al
  407980:	sbb    esi,DWORD PTR [eax]
  407982:	add    eax,0xff00
  407987:	add    BYTE PTR [eax+eax*1],dh
  40798a:	add    BYTE PTR [ecx],dl
  40798c:	jle    0x4079bd
  40798e:	add    BYTE PTR [eax],al
  407990:	add    al,0x3a
  407992:	retf   0x0
  407995:	add    BYTE PTR ds:0x145,bl
  40799b:	add    dh,dh
  40799d:	(bad)  
  40799e:	(bad)  
  40799f:	call   DWORD PTR [edi]
  4079a1:	sub    eax,0x70d006
  4079a6:	add    BYTE PTR [esi],al
  4079a8:	es jb  0x40799c
  4079ab:	add    BYTE PTR [eax],al
  4079ad:	jo     0x4079b9
  4079af:	push   es
  4079b0:	sub    ch,dh
  4079b2:	add    BYTE PTR [eax],al
  4079b4:	or     ah,BYTE PTR ds:0xe9280b26
  4079ba:	add    BYTE PTR [eax],al
  4079bc:	or     ah,BYTE PTR ds:0x7160726
  4079c2:	mov    gs,WORD PTR [ecx+0x6f]
  4079c5:	test   BYTE PTR [eax],0x0
  4079c8:	or     ah,BYTE PTR ds:0x37280a26
  4079ce:	add    BYTE PTR [eax],al
  4079d0:	or     ah,BYTE PTR ds:0x3c6f0626
  4079d6:	add    BYTE PTR [eax],al
  4079d8:	or     cl,BYTE PTR [edi+ebx*1]
  4079db:	popa   
  4079dc:	push   0x8
  4079de:	sub    BYTE PTR [esi+0x0],ch
  4079e1:	add    BYTE PTR [esi],al
  4079e3:	and    eax,0x2f8026
  4079e8:	add    BYTE PTR [ebx+esi*2],al
  4079eb:	push   ss
  4079ec:	add    DWORD PTR [eax],eax
  4079ee:	or     al,BYTE PTR [eax+0x4000030]
  4079f4:	jle    0x407a25
  4079f6:	add    BYTE PTR [eax],al
  4079f8:	add    al,0x16
  4079fa:	jae    0x407a13
  4079fc:	add    DWORD PTR [eax],eax
  4079fe:	or     dh,BYTE PTR [ebx+0x18]
  407a01:	add    DWORD PTR [eax],eax
  407a03:	or     cl,BYTE PTR ds:0x1196f09
  407a09:	add    BYTE PTR [edx],cl
  407a0b:	and    eax,0x16041326
  407a10:	adc    eax,DWORD PTR ds:0x6f09262b
  407a16:	sbb    DWORD PTR [ecx],eax
  407a18:	add    BYTE PTR [edx],cl
  407a1a:	adc    eax,DWORD PTR [esi]
  407a1c:	or     DWORD PTR [edi+0x19],ebp
  407a1f:	add    DWORD PTR [eax],eax
  407a21:	or     ah,BYTE PTR ds:0x7e071326
  407a27:	xor    BYTE PTR [eax],al
  407a29:	add    BYTE PTR [ecx+edx*1],al
  407a2c:	push   es
  407a2d:	adc    DWORD PTR [edi],eax
  407a2f:	outs   dx,DWORD PTR ds:[esi]
  407a30:	sbb    al,BYTE PTR [ecx]
  407a32:	add    BYTE PTR [edx],cl
  407a34:	adc    DWORD PTR ds:0x5135817,eax
  407a3a:	adc    DWORD PTR ds:0xd4320411,eax
  407a40:	sbb    eax,0x145
  407a45:	add    dh,dh
  407a47:	(bad)  
  407a48:	(bad)  
  407a49:	(bad)  
  407a4a:	ficom  WORD PTR [ecx+ecx*1]
  407a4d:	sub    al,0x10
  407a4f:	sbb    DWORD PTR [ebp+0x1],eax
  407a52:	add    BYTE PTR [eax],al
  407a54:	add    dh,dh
  407a56:	(bad)  
  407a57:	(bad)  
  407a58:	dec    DWORD PTR [ecx]
  407a5a:	outs   dx,DWORD PTR ds:[esi]
  407a5b:	add    BYTE PTR gs:[eax],al
  407a5e:	or     bl,ah
  407a60:	shl    BYTE PTR [eax+eax*1+0x0],1
  407a64:	add    DWORD PTR [eax],ebp
  407a66:	push   eax
  407a67:	add    BYTE PTR [eax],al
  407a69:	or     ah,BYTE PTR ds:0x281c2c26
  407a6f:	aaa    
  407a70:	add    BYTE PTR [eax],al
  407a72:	or     ah,BYTE PTR ds:0x11b6f26
  407a78:	add    BYTE PTR [edx],cl
  407a7a:	and    eax,0x6f9a1626
  407a7f:	sbb    al,0x1
  407a81:	add    BYTE PTR [edx],cl
  407a83:	and    eax,0x318026
  407a88:	add    BYTE PTR [edx+ebp*1],al
  407a8b:	add    BYTE PTR [ecx],al
  407a8d:	adc    BYTE PTR [eax],al
  407a8f:	add    BYTE PTR [edx],al
  407a91:	add    BYTE PTR [ecx+0x0],bh
  407a94:	inc    edi
  407a95:	rol    BYTE PTR [eax],0x14
  407a98:	add    BYTE PTR [eax],al
  407a9a:	add    BYTE PTR [eax],al
  407a9c:	add    esi,DWORD PTR [eax]
  407a9e:	or     DWORD PTR [eax],eax
  407aa0:	pop    es
  407aa1:	add    BYTE PTR [eax],al
  407aa3:	add    BYTE PTR [eax],al
  407aa5:	add    BYTE PTR [eax],al
  407aa7:	add    BYTE PTR [edx],al
  407aa9:	sub    BYTE PTR [ecx],bh
  407aab:	add    BYTE PTR [eax],al
  407aad:	or     ch,BYTE PTR [edx]
  407aaf:	add    BYTE PTR [ebx],bl
  407ab1:	xor    BYTE PTR [edi],al
  407ab3:	add    BYTE PTR [ebx+0x1],cl
  407ab6:	add    BYTE PTR [eax],al
  407ab8:	xor    eax,0x7e110000
  407abd:	xor    DWORD PTR [eax],eax
  407abf:	add    BYTE PTR [ebx+edx*1],al
  407ac2:	or     dl,BYTE PTR [edx]
  407ac4:	or     al,BYTE PTR [edx]
  407ac6:	sub    BYTE PTR ds:0x280a0001,bl
  407acc:	push   eax
  407acd:	add    BYTE PTR [eax],al
  407acf:	or     cl,BYTE PTR [edx]
  407ad1:	jle    0x407b04
  407ad3:	add    BYTE PTR [eax],al
  407ad5:	add    al,0x13
  407ad7:	or     edx,DWORD PTR [edx]
  407ad9:	or     eax,DWORD PTR [ebx]
  407adb:	sub    BYTE PTR [esi],bl
  407add:	add    DWORD PTR [eax],eax
  407adf:	or     ah,BYTE PTR ds:0x317e26
  407ae5:	add    BYTE PTR [ebx+edx*1],al
  407ae8:	or     al,0x12
  407aea:	or     al,0x4
  407aec:	sub    BYTE PTR ds:0x250a0001,bl
  407af2:	sub    BYTE PTR es:[edi],bl
  407af5:	add    DWORD PTR [eax],eax
  407af7:	or     ah,BYTE PTR ds:0x74080c26
  407afd:	add    BYTE PTR [eax],0x0
  407b00:	add    DWORD PTR [ebx],ecx
  407b02:	fiadd  WORD PTR [ebx]
  407b04:	es (bad) 
  407b06:	sbb    al,BYTE PTR [esi]
  407b08:	and    BYTE PTR [eax],ch
  407b0a:	add    al,0x0
  407b0c:	add    BYTE PTR [edi+0x20],ch
  407b0f:	add    DWORD PTR [eax],eax
  407b11:	or     ah,BYTE PTR ds:0x160d1326
  407b17:	adc    ecx,DWORD PTR [esi]
  407b19:	cmp    bl,dl
  407b1b:	add    BYTE PTR [eax],al
  407b1d:	add    BYTE PTR [ecx],dl
  407b1f:	or     eax,0xd9a0e11
  407b24:	adc    al,0x13
  407b26:	add    eax,0x1216f07
  407b2b:	add    BYTE PTR [edx],cl
  407b2d:	and    eax,0x7061326
  407b32:	sub    BYTE PTR [edi+0x0],dh
  407b35:	add    BYTE PTR [esi],al
  407b37:	and    eax,0x7071326
  407b3c:	outs   dx,DWORD PTR ds:[esi]
  407b3d:	and    al,BYTE PTR [ecx]
  407b3f:	add    BYTE PTR [edx],cl
  407b41:	and    eax,0x1236f26
  407b46:	add    BYTE PTR [edx],cl
  407b48:	and    eax,0x11b7226
  407b4d:	add    BYTE PTR [eax+0x7],dh
  407b50:	outs   dx,DWORD PTR ds:[esi]
  407b51:	and    al,0x1
  407b53:	add    BYTE PTR [edx],cl
  407b55:	jb     0x407b76
  407b57:	add    DWORD PTR [eax],eax
  407b59:	jo     0x407b83
  407b5b:	and    eax,0x250a0001
  407b60:	es pop es
  407b62:	jne    0x407bd8
  407b64:	add    BYTE PTR [eax],al
  407b66:	add    DWORD PTR ds:0x1451b22,ebp
  407b6c:	add    BYTE PTR [eax],al
  407b6e:	add    dh,dh
  407b70:	(bad)  
  407b71:	(bad)  
  407b72:	call   DWORD PTR [edi]
  407b74:	sub    eax,0x72d006
  407b79:	add    BYTE PTR [esi],al
  407b7b:	es pop es
  407b7d:	je     0x407b01
  407b7f:	add    BYTE PTR [eax],al
  407b81:	add    DWORD PTR [edi+0x26],ebp
  407b84:	add    DWORD PTR [eax],eax
  407b86:	or     ah,BYTE PTR ds:0x14012b26
  407b8c:	adc    DWORD PTR [edi],eax
  407b8e:	pop    es
  407b8f:	outs   dx,DWORD PTR ds:[esi]
  407b90:	and    al,BYTE PTR [ecx]
  407b92:	add    BYTE PTR [edx],cl
  407b94:	and    eax,0x27731726
  407b99:	add    DWORD PTR [eax],eax
  407b9b:	or     dl,BYTE PTR [ebx]
  407b9d:	add    eax,0x307e
  407ba2:	add    al,0x2
  407ba4:	adc    cl,BYTE PTR [eax]
  407ba6:	outs   dx,DWORD PTR ds:[esi]
  407ba7:	sub    BYTE PTR [ecx],al
  407ba9:	add    BYTE PTR [edx],cl
  407bab:	and    eax,0x5112626
  407bb0:	outs   dx,DWORD PTR ds:[esi]
  407bb1:	sub    DWORD PTR [ecx],eax
  407bb3:	add    BYTE PTR [edx],cl
  407bb5:	adc    ecx,DWORD PTR [ecx]
  407bb7:	adc    DWORD PTR [esi],eax
  407bb9:	adc    DWORD PTR [ecx],ecx
  407bbb:	sub    BYTE PTR [eax+eax*1+0x0],dh
  407bbf:	push   es
  407bc0:	adc    cl,BYTE PTR [eax]
  407bc2:	pop    es
  407bc3:	adc    DWORD PTR [ecx],ecx
  407bc5:	sub    BYTE PTR [ebx+0x0],dh
  407bc8:	add    BYTE PTR [esi],al
  407bca:	adc    cl,BYTE PTR [eax]
  407bcc:	adc    DWORD PTR [ecx],ecx
  407bce:	sub    BYTE PTR [ebp+0x0],dh
  407bd1:	add    BYTE PTR [esi],al
  407bd3:	adc    DWORD PTR ds:0x12a6f06,eax
  407bd9:	add    BYTE PTR [edx],cl
  407bdb:	adc    eax,DWORD PTR [ecx+ecx*1]
  407bde:	adc    al,0x11
  407be0:	add    al,0x6f
  407be2:	sub    eax,DWORD PTR [ecx]
  407be4:	add    BYTE PTR [edx],cl
  407be6:	fiadd  WORD PTR [ebx]
  407be8:	fiadd  WORD PTR es:[eax]
  407beb:	adc    DWORD PTR [esi],ecx
  407bed:	pop    ss
  407bee:	pop    eax
  407bef:	adc    ecx,DWORD PTR [esi]
  407bf1:	adc    DWORD PTR [esi],ecx
  407bf3:	adc    DWORD PTR ds:0x223f698e,ecx
  407bf9:	(bad)  
  407bfa:	(bad)  
  407bfb:	call   DWORD PTR [edi]
  407bfd:	inc    ebp
  407bfe:	add    DWORD PTR [eax],eax
  407c00:	add    BYTE PTR [eax],al
  407c02:	idiv   bh
  407c04:	(bad)  
  407c05:	jmp    FWORD PTR [edx]
  407c07:	add    BYTE PTR [ecx],al
  407c09:	sbb    al,0x0
  407c0b:	add    BYTE PTR [eax],al
  407c0d:	add    BYTE PTR [eax],al
  407c0f:	add    BYTE PTR [eax+0x48],cl
  407c12:	add    BYTE PTR [ebx],al
  407c14:	dec    ebx
  407c15:	add    BYTE PTR [eax],al
  407c17:	add    DWORD PTR [eax],eax
  407c19:	add    BYTE PTR [eax+0x0],ch
  407c1c:	les    ebp,FWORD PTR [ecx+eax*1]
  407c1f:	add    ecx,DWORD PTR [ebx+0x0]
  407c22:	add    BYTE PTR [ecx],al
  407c24:	adc    esi,DWORD PTR [eax]
  407c26:	push   es
  407c27:	add    BYTE PTR [esi+0x0],bl
  407c2a:	add    BYTE PTR [eax],al
  407c2c:	add    BYTE PTR ss:[eax],al
  407c2f:	adc    DWORD PTR [esi+0x2f],edi
  407c32:	add    BYTE PTR [eax],al
  407c34:	add    al,0x2
  407c36:	dec    edx
  407c37:	sub    bh,dh
  407c39:	add    BYTE PTR [eax],al
  407c3b:	or     ah,BYTE PTR ds:0x25020a26
  407c41:	dec    edx
  407c42:	sbb    bl,BYTE PTR [eax+0x54]
  407c45:	jle    0x407c76
  407c47:	add    BYTE PTR [eax],al
  407c49:	add    al,0x2
  407c4b:	dec    edx
  407c4c:	sub    bh,dh
  407c4e:	add    BYTE PTR [eax],al
  407c50:	or     ah,BYTE PTR ds:0x25020b26
  407c56:	dec    edx
  407c57:	sbb    bl,BYTE PTR [eax+0x54]
  407c5a:	pop    es
  407c5b:	lea    ebx,[esi]
  407c5d:	add    BYTE PTR [eax],al
  407c5f:	add    DWORD PTR [esi+edi*2],ecx
  407c62:	das    
  407c63:	add    BYTE PTR [eax],al
  407c65:	add    al,0x2
  407c67:	dec    edx
  407c68:	or     BYTE PTR [esi],dl
  407c6a:	pop    es
  407c6b:	sub    bl,bh
  407c6d:	add    BYTE PTR [eax],al
  407c6f:	or     al,BYTE PTR [ebx]
  407c71:	or     BYTE PTR [ebx+esi*2],al
  407c74:	jns    0x407c76
  407c76:	add    BYTE PTR [esi],al
  407c78:	or     eax,0x7a6f09
  407c7d:	add    BYTE PTR [esi],al
  407c7f:	add    al,0x8
  407c81:	push   es
  407c82:	outs   dx,DWORD PTR ds:[esi]
  407c83:	sub    al,0x1
  407c85:	add    BYTE PTR [edx],cl
  407c87:	add    ah,BYTE PTR ds:0x5458074a
  407c8d:	sub    al,BYTE PTR [eax]
  407c8f:	add    BYTE PTR [ebx],bl
  407c91:	xor    BYTE PTR ds:0x7300,al
  407c97:	add    BYTE PTR [edi],dh
  407c99:	add    BYTE PTR [eax],al
  407c9b:	adc    DWORD PTR [eax],ebp
  407c9d:	sub    eax,0xa0a0001
  407ca2:	add    ch,BYTE PTR [edi+0x2e]
  407ca5:	add    DWORD PTR [eax],eax
  407ca7:	or     ch,BYTE PTR [edi+0x2f]
  407caa:	add    DWORD PTR [eax],eax
  407cac:	or     ah,BYTE PTR ds:0x1d2b0c26
  407cb2:	or     BYTE PTR [edi+0x30],ch
  407cb5:	add    DWORD PTR [eax],eax
  407cb7:	or     ah,BYTE PTR ds:0x7060b26
  407cbd:	outs   dx,DWORD PTR ds:[esi]
  407cbe:	xor    DWORD PTR [ecx],eax
  407cc0:	add    BYTE PTR [edx],cl
  407cc2:	pop    es
  407cc3:	outs   dx,DWORD PTR ds:[esi]
  407cc4:	xor    al,BYTE PTR [ecx]
  407cc6:	add    BYTE PTR [edx],cl
  407cc8:	and    eax,0x1336f26
  407ccd:	add    BYTE PTR [edx],cl
  407ccf:	or     BYTE PTR [edi+0x34],ch
  407cd2:	add    DWORD PTR [eax],eax
  407cd4:	or     ch,BYTE PTR ds:0x14519db
  407cda:	add    BYTE PTR [eax],al
  407cdc:	add    dh,dh
  407cde:	(bad)  
  407cdf:	(bad)  
  407ce0:	call   DWORD PTR [edi]
  407ce2:	sub    eax,0x74d006
  407ce7:	add    BYTE PTR [esi],al
  407ce9:	ficom  WORD PTR es:[eax+ecx*1]
  407ced:	sub    al,0x10
  407cef:	sbb    eax,0x145
  407cf4:	add    dh,dh
  407cf6:	(bad)  
  407cf7:	(bad)  
  407cf8:	dec    DWORD PTR [eax]
  407cfa:	outs   dx,DWORD PTR ds:[esi]
  407cfb:	add    BYTE PTR gs:[eax],al
  407cfe:	or     bl,ah
  407d00:	add    eax,DWORD PTR [esi]
  407d02:	outs   dx,DWORD PTR ds:[esi]
  407d03:	xor    eax,0x250a0001
  407d08:	outs   dx,DWORD PTR es:[esi]
  407d0a:	add    DWORD PTR ss:[eax],eax
  407d0d:	or     ch,BYTE PTR [edx]
  407d0f:	add    BYTE PTR [ecx],al
  407d11:	adc    BYTE PTR [eax],al
  407d13:	add    BYTE PTR [edx],al
  407d15:	add    BYTE PTR [eax+eax*1],dl
  407d18:	cmp    al,0x50
  407d1a:	add    BYTE PTR [eax+eax*1],dl
  407d1d:	add    BYTE PTR [eax],al
  407d1f:	add    BYTE PTR [ebx],dl
  407d21:	xor    BYTE PTR [esi],al
  407d23:	add    cl,bl
  407d25:	add    BYTE PTR [eax],al
  407d27:	add    BYTE PTR [eax],bh
  407d29:	add    BYTE PTR [eax],al
  407d2b:	adc    DWORD PTR [esi+0x2f],edi
  407d2e:	add    BYTE PTR [eax],al
  407d30:	add    al,0x2
  407d32:	dec    edx
  407d33:	sub    bh,dh
  407d35:	add    BYTE PTR [eax],al
  407d37:	or     cl,BYTE PTR [edx]
  407d39:	add    ah,BYTE PTR ds:0x54581a4a
  407d3f:	push   es
  407d40:	sub    eax,0x1451c14
  407d45:	add    BYTE PTR [eax],al
  407d47:	add    dh,dh
  407d49:	(bad)  
  407d4a:	(bad)  
  407d4b:	call   DWORD PTR [edi]
  407d4d:	sub    eax,0x75d006
  407d52:	add    BYTE PTR [esi],al
  407d54:	sub    al,BYTE PTR es:[esi]
  407d57:	lea    ebx,[esi]
  407d59:	add    BYTE PTR [eax],al
  407d5b:	add    DWORD PTR [ebx],ecx
  407d5d:	jle    0x407d8e
  407d5f:	add    BYTE PTR [eax],al
  407d61:	add    al,0x2
  407d63:	dec    edx
  407d64:	pop    es
  407d65:	push   ss
  407d66:	push   es
  407d67:	sub    bl,bh
  407d69:	add    BYTE PTR [eax],al
  407d6b:	or     bl,BYTE PTR [edx]
  407d6d:	or     al,0x6
  407d6f:	sbb    bl,BYTE PTR [ecx+0x1f]
  407d72:	sbb    BYTE PTR [ebx+0xd],bl
  407d75:	push   ss
  407d76:	adc    eax,DWORD PTR [ebx+ebp*1]
  407d79:	je     0x407d82
  407d7b:	or     BYTE PTR [eax],ch
  407d7d:	test   DWORD PTR [eax],0x5130a00
  407d83:	or     BYTE PTR [edi],bl
  407d85:	adc    al,0x58
  407d87:	or     al,0x11
  407d89:	add    eax,0x8110813
  407d8e:	inc    ebp
  407d8f:	add    eax,0x2000000
  407d94:	add    BYTE PTR [eax],al
  407d96:	add    BYTE PTR ds:0x3d000000,bh
  407d9c:	add    BYTE PTR [eax],al
  407d9e:	add    BYTE PTR ds:0x32000000,bh
  407da4:	add    BYTE PTR [eax],al
  407da6:	add    BYTE PTR [ebx],ch
  407da8:	cmp    edi,DWORD PTR [esi+0x31]
  407dab:	add    BYTE PTR [eax],al
  407dad:	add    al,0x13
  407daf:	or     DWORD PTR [edx],edx
  407db1:	or     DWORD PTR [edi],eax
  407db3:	or     BYTE PTR [eax],ch
  407db5:	test   DWORD PTR [eax],0x1d280a00
  407dbb:	add    DWORD PTR [eax],eax
  407dbd:	or     ah,BYTE PTR ds:0x3061326
  407dc3:	adc    DWORD PTR [esi],eax
  407dc5:	outs   dx,DWORD PTR ds:[esi]
  407dc6:	aaa    
  407dc7:	add    DWORD PTR [eax],eax
  407dc9:	or     ah,BYTE PTR ds:0x11071326
  407dcf:	pop    es
  407dd0:	or     BYTE PTR [edi],al
  407dd2:	sub    BYTE PTR [esi+0x0],dh
  407dd5:	add    BYTE PTR [esi],al
  407dd7:	sub    ecx,DWORD PTR [ebx]
  407dd9:	jb     0x407e12
  407ddb:	add    DWORD PTR [eax],eax
  407ddd:	jo     0x407e52
  407ddf:	cmp    BYTE PTR [ecx],al
  407de1:	add    BYTE PTR [edx],cl
  407de3:	jp     0x407ded
  407de5:	sbb    bl,BYTE PTR [eax+0xc]
  407de8:	adc    DWORD PTR [edi+edx*1],eax
  407deb:	pop    eax
  407dec:	adc    eax,DWORD PTR [ecx+edx*1]
  407def:	add    al,0x9
  407df1:	xor    al,BYTE PTR [edi+0x1451c]
  407df7:	add    BYTE PTR [eax],al
  407df9:	idiv   bh
  407dfb:	(bad)  
  407dfc:	inc    DWORD PTR [ebx]
  407dfe:	pop    es
  407dff:	outs   dx,DWORD PTR ds:[esi]
  407e00:	cmp    DWORD PTR [ecx],eax
  407e02:	add    BYTE PTR [edx],cl
  407e04:	sub    al,BYTE PTR [eax]
  407e06:	add    BYTE PTR [eax],al
  407e08:	add    esi,DWORD PTR [eax]
  407e0a:	or     DWORD PTR [eax],eax
  407e0c:	cmp    DWORD PTR [eax],eax
  407e0e:	add    BYTE PTR [eax],al
  407e10:	add    BYTE PTR [eax],al
  407e12:	add    BYTE PTR [eax],al
  407e14:	add    al,0x3
  407e16:	and    eax,0xbfe5817
  407e1b:	add    DWORD PTR [eax],eax
  407e1d:	add    dl,dl
  407e1f:	pushf  
  407e20:	add    al,0x3
  407e22:	and    eax,0xbfe5817
  407e27:	add    DWORD PTR [eax],eax
  407e29:	add    bl,BYTE PTR [esi]
  407e2b:	arpl   dx,dx
  407e2d:	pushf  
  407e2e:	add    al,0x3
  407e30:	and    eax,0xbfe5817
  407e35:	add    DWORD PTR [eax],eax
  407e37:	add    bl,BYTE PTR [edi]
  407e39:	adc    BYTE PTR [ebx-0x2e],ah
  407e3c:	pushf  
  407e3d:	add    al,0x3
  407e3f:	and    eax,0xbfe5817
  407e44:	add    DWORD PTR [eax],eax
  407e46:	add    bl,BYTE PTR [edi]
  407e48:	sbb    BYTE PTR [ebx-0x2e],ah
  407e4b:	pushf  
  407e4c:	sub    al,BYTE PTR [eax]
  407e4e:	add    BYTE PTR [eax],al
  407e50:	adc    esi,DWORD PTR [eax]
  407e52:	add    eax,0xb500
  407e57:	add    BYTE PTR [ecx],bh
  407e59:	add    BYTE PTR [eax],al
  407e5b:	adc    DWORD PTR [edx],eax
  407e5d:	outs   dx,DWORD PTR ds:[esi]
  407e5e:	cmp    al,BYTE PTR [ecx]
  407e60:	add    BYTE PTR [edx],cl
  407e62:	and    eax,0x8e060a26
  407e67:	imul   ecx,DWORD PTR [ebx],0x13b6f02
  407e6d:	add    BYTE PTR [edx],cl
  407e6f:	and    eax,0x1d172d26
  407e74:	inc    ebp
  407e75:	add    DWORD PTR [eax],eax
  407e77:	add    BYTE PTR [eax],al
  407e79:	idiv   bh
  407e7b:	(bad)  
  407e7c:	call   DWORD PTR [edi]
  407e7e:	sub    eax,0x77d006
  407e83:	add    BYTE PTR [esi],al
  407e85:	es pop es
  407e87:	pop    ss
  407e88:	pop    eax
  407e89:	or     eax,DWORD PTR [edi]
  407e8b:	lea    esp,[eax+eax*1+0x160c0100]
  407e92:	or     eax,0x13b6f02
  407e97:	add    BYTE PTR [edx],cl
  407e99:	and    eax,0x1c442d26
  407e9e:	inc    ebp
  407e9f:	add    DWORD PTR [eax],eax
  407ea1:	add    BYTE PTR [eax],al
  407ea3:	idiv   bh
  407ea5:	(bad)  
  407ea6:	inc    DWORD PTR [edx]
  407ea8:	outs   dx,DWORD PTR ds:[esi]
  407ea9:	and    al,BYTE PTR [ecx]
  407eab:	add    BYTE PTR [edx],cl
  407ead:	and    eax,0x13c6f26
  407eb2:	add    BYTE PTR [edx],cl
  407eb4:	and    eax,0x181c2c26
  407eb9:	inc    ebp
  407eba:	add    DWORD PTR [eax],eax
  407ebc:	add    BYTE PTR [eax],al
  407ebe:	idiv   bh
  407ec0:	(bad)  
  407ec1:	dec    DWORD PTR [eax]
  407ec3:	push   ss
  407ec4:	add    ch,BYTE PTR [edi+0x22]
  407ec7:	add    DWORD PTR [eax],eax
  407ec9:	or     ch,BYTE PTR [edi+0x3d]
  407ecc:	add    DWORD PTR [eax],eax
  407ece:	or     ah,BYTE PTR ds:0x92ba226
  407ed4:	or     BYTE PTR [esi],dl
  407ed6:	add    ch,BYTE PTR [edi+0x22]
  407ed9:	add    DWORD PTR [eax],eax
  407edb:	or     ah,BYTE PTR [edx+0xd581709]
  407ee1:	push   ss
  407ee2:	adc    eax,DWORD PTR [ebx+ebp*1]
  407ee5:	sbb    BYTE PTR [eax],cl
  407ee7:	or     DWORD PTR [esi],eax
  407ee9:	adc    DWORD PTR [edx+ebx*4],eax
  407eec:	outs   dx,DWORD PTR ds:[esi]
  407eed:	add    DWORD PTR ds:[eax],eax
  407ef0:	or     ah,BYTE PTR ds:0x411a226
  407ef6:	pop    ss
  407ef7:	pop    eax
  407ef8:	adc    eax,DWORD PTR [ecx+ecx*1]
  407efb:	pop    ss
  407efc:	pop    eax
  407efd:	or     eax,0x8e060411
  407f02:	imul   esi,DWORD PTR [edx],0x14519e1
  407f08:	add    BYTE PTR [eax],al
  407f0a:	add    dh,dh
  407f0c:	(bad)  
  407f0d:	(bad)  
  407f0e:	dec    DWORD PTR [eax]
  407f10:	sub    al,BYTE PTR [eax]
  407f12:	add    BYTE PTR [eax],al
  407f14:	adc    esi,DWORD PTR [eax]
  407f16:	add    al,0x0
  407f18:	lds    eax,FWORD PTR [eax]
  407f1a:	add    BYTE PTR [eax],al
  407f1c:	cmp    al,BYTE PTR [eax]
  407f1e:	add    BYTE PTR [ecx],dl
  407f20:	and    BYTE PTR [eax],al
  407f22:	add    DWORD PTR [eax],eax
  407f24:	add    BYTE PTR [ebp+0x1000077],cl
  407f2a:	xor    BYTE PTR [edx],0x0
  407f2d:	add    BYTE PTR [eax+eiz*1],al
  407f30:	add    BYTE PTR [ecx],al
  407f32:	add    BYTE PTR [eax],al
  407f34:	lea    esi,[edi+0x0]
  407f37:	add    BYTE PTR [ecx],al
  407f39:	xor    BYTE PTR [ebx],0x0
  407f3c:	add    BYTE PTR [eax+edx*8],al
  407f3f:	js     0x407f41
  407f41:	add    BYTE PTR [ecx],al
  407f43:	sub    BYTE PTR [eax+0x0],dl
  407f46:	add    BYTE PTR [edx],cl
  407f48:	pop    ds
  407f49:	sbb    BYTE PTR [edi+0x20],ch
  407f4c:	add    DWORD PTR [eax],eax
  407f4e:	or     cl,BYTE PTR ds:0x38041316
  407f54:	js     0x407f56
  407f56:	add    BYTE PTR [eax],al
  407f58:	or     DWORD PTR [ecx],edx
  407f5a:	add    al,0x9a
  407f5c:	or     al,BYTE PTR [esi]
  407f5e:	adc    al,0x6f
  407f60:	aas    
  407f61:	add    DWORD PTR [eax],eax
  407f63:	or     ah,BYTE PTR ds:0x77a526
  407f69:	add    BYTE PTR [ecx],al
  407f6b:	or     edx,DWORD PTR [edx]
  407f6d:	add    DWORD PTR [eax],ebp
  407f6f:	inc    eax
  407f70:	add    DWORD PTR [eax],eax
  407f72:	or     ah,BYTE PTR ds:0x80cd126
  407f78:	and    BYTE PTR [eax],al
  407f7a:	add    DWORD PTR [eax],eax
  407f7c:	add    BYTE PTR [edi],ch
  407f7e:	adc    edi,DWORD PTR [esi+0x32]
  407f81:	add    BYTE PTR [eax],al
  407f83:	add    al,0x8
  407f85:	(bad)  
  407f86:	ja     0x407f88
  407f88:	add    BYTE PTR [ecx],al
  407f8a:	pop    es
  407f8b:	xor    DWORD PTR [edi+0x0],0x382b0100
  407f92:	or     BYTE PTR [eax],ah
  407f94:	add    bh,bh
  407f96:	add    BYTE PTR [eax],al
  407f98:	pop    edi
  407f99:	and    BYTE PTR [eax],al
  407f9b:	inc    BYTE PTR [eax]
  407f9d:	add    BYTE PTR [ebx],dh
  407f9f:	sub    bl,BYTE PTR [eax]
  407fa1:	inc    ebp
  407fa2:	add    DWORD PTR [eax],eax
  407fa4:	add    BYTE PTR [eax],al
  407fa6:	idiv   bh
  407fa8:	(bad)  
  407fa9:	call   DWORD PTR [edi]
  407fab:	sub    eax,0x78d006
  407fb0:	add    BYTE PTR [esi],al
  407fb2:	es jle 0x407fe8
  407fb5:	add    BYTE PTR [eax],al
  407fb7:	add    al,0x8
  407fb9:	and    bh,bh
  407fbb:	add    BYTE PTR [eax],al
  407fbd:	add    BYTE PTR [edi-0x71],bl
  407fc0:	ja     0x407fc2
  407fc2:	add    BYTE PTR [ecx],al
  407fc4:	pop    es
  407fc5:	xor    DWORD PTR [edi+0x0],0x4110100
  407fcc:	pop    ss
  407fcd:	pop    eax
  407fce:	adc    eax,DWORD PTR [ecx+edx*1]
  407fd1:	add    al,0x9
  407fd3:	mov    gs,WORD PTR [ecx+0x3f]
  407fd6:	jle    0x407fd7
  407fd8:	(bad)  
  407fd9:	call   FWORD PTR [ecx]
  407fdb:	inc    ebp
  407fdc:	add    DWORD PTR [eax],eax
  407fde:	add    BYTE PTR [eax],al
  407fe0:	idiv   bh
  407fe2:	(bad)  
  407fe3:	jmp    FWORD PTR [edx]
  407fe5:	add    BYTE PTR [eax],al
  407fe7:	add    BYTE PTR [ebx],al
  407fe9:	xor    BYTE PTR [eax+eax*1],al
  407fec:	arpl   WORD PTR [eax],ax
  407fee:	add    BYTE PTR [eax],al
  407ff0:	add    BYTE PTR [eax],al
  407ff2:	add    BYTE PTR [eax],al
  407ff4:	add    ch,BYTE PTR [eax]
  407ff6:	cmp    DWORD PTR [eax],eax
  407ff8:	add    BYTE PTR [edx],cl
  407ffa:	add    al,BYTE PTR ds:0x367d
  408000:	add    al,0x2
  408002:	add    al,0x7d
  408004:	xor    eax,0x2040000
  408009:	push   ss
  40800a:	jge    0x408040
  40800c:	add    BYTE PTR [eax],al
  40800e:	add    al,0x2
  408010:	add    ebp,DWORD PTR [edi+0x41]
  408013:	add    DWORD PTR [eax],eax
  408015:	or     bh,BYTE PTR [ebp+0x37]
  408018:	add    BYTE PTR [eax],al
  40801a:	add    al,0x2
  40801c:	add    esi,DWORD PTR [ebp+0x74]
  40801f:	add    BYTE PTR [eax],al
  408021:	add    DWORD PTR ds:0x426f030a,ebp
  408027:	add    DWORD PTR [eax],eax
  408029:	or     ah,BYTE PTR ds:0x14012b26
  40802f:	jge    0x408069
  408031:	add    BYTE PTR [eax],al
  408033:	add    al,0x2
  408035:	add    ebp,DWORD PTR [edi+0x22]
  408038:	add    DWORD PTR [eax],eax
  40803a:	or     ah,BYTE PTR ds:0x3112c26
  408040:	outs   dx,DWORD PTR ds:[esi]
  408041:	and    al,BYTE PTR [ecx]
  408043:	add    BYTE PTR [edx],cl
  408045:	and    eax,0x1436f26
  40804a:	add    BYTE PTR [edx],cl
  40804c:	and    eax,0x14012b26
  408051:	jge    0x40808c
  408053:	add    BYTE PTR [eax],al
  408055:	add    al,0x2a
  408057:	add    BYTE PTR [ebx],al
  408059:	xor    BYTE PTR [ecx],cl
  40805b:	add    BYTE PTR [eax+eax*1],bl
  40805e:	add    BYTE PTR [eax],al
  408060:	add    BYTE PTR [eax],al
  408062:	add    BYTE PTR [eax],al
  408064:	sub    ecx,DWORD PTR [ecx]
  408066:	add    ch,BYTE PTR [eax]
  408068:	jnp    0x40806a
  40806a:	add    BYTE PTR [esi],al
  40806c:	and    eax,0x7b022626
  408071:	xor    al,0x0
  408073:	add    BYTE PTR [edx+eax*1],al
  408076:	jnp    0x4080ad
  408078:	add    BYTE PTR [eax],al
  40807a:	add    al,0x8e
  40807c:	imul   esi,DWORD PTR [edx],0x30132ae7
  408082:	push   es
  408083:	add    BYTE PTR [ecx+0x3b000003],ch
  408089:	add    BYTE PTR [eax],al
  40808b:	adc    DWORD PTR [edx],eax
  40808d:	jnp    0x4080c3
  40808f:	add    BYTE PTR [eax],al
  408091:	add    al,0xa
  408093:	jle    0x4080d9
  408095:	add    DWORD PTR [eax],eax
  408097:	or     cl,BYTE PTR [ebx]
  408099:	push   ss
  40809a:	or     al,0x2
  40809c:	sub    BYTE PTR [ebp+0x0],bh
  40809f:	add    BYTE PTR [esi],al
  4080a1:	or     eax,0xfe2009
  4080a6:	add    BYTE PTR [eax],al
  4080a8:	cs sbb al,BYTE PTR es:[ebp+0x1]
  4080ad:	add    BYTE PTR [eax],al
  4080af:	add    dh,dh
  4080b1:	(bad)  
  4080b2:	(bad)  
  4080b3:	call   DWORD PTR [edi]
  4080b5:	sub    eax,0x7bd006
  4080ba:	add    BYTE PTR [esi],al
  4080bc:	es jle 0x4080f1
  4080bf:	add    BYTE PTR [eax],al
  4080c1:	add    al,0x9
  4080c3:	(bad)  
  4080c4:	ja     0x4080c6
  4080c6:	add    BYTE PTR [ecx],al
  4080c8:	jno    0x408141
  4080ca:	add    BYTE PTR [eax],al
  4080cc:	add    DWORD PTR [ebx],ecx
  4080ce:	sub    ebx,DWORD PTR [edx]
  4080d0:	add    ch,BYTE PTR [eax]
  4080d2:	jge    0x4080d4
  4080d4:	add    BYTE PTR [esi],al
  4080d6:	and    eax,0x337e0d26
  4080db:	add    BYTE PTR [eax],al
  4080dd:	add    al,0x9
  4080df:	(bad)  
  4080e0:	ja     0x4080e2
  4080e2:	add    BYTE PTR [ecx],al
  4080e4:	jno    0x40815d
  4080e6:	add    BYTE PTR [eax],al
  4080e8:	add    DWORD PTR [ebx],ecx
  4080ea:	adc    al,BYTE PTR [ecx]
  4080ec:	sub    BYTE PTR [ebp+0x1],al
  4080ef:	add    BYTE PTR [edx],cl
  4080f1:	and    eax,0x110c1326
  4080f6:	or     al,0x45
  4080f8:	adc    eax,DWORD PTR [eax]
  4080fa:	add    BYTE PTR [eax],al
  4080fc:	adc    BYTE PTR [eax],al
  4080fe:	add    BYTE PTR [eax],al
  408100:	sbb    al,BYTE PTR [ecx]
  408102:	add    BYTE PTR [eax],al
  408104:	and    al,BYTE PTR [eax]
  408106:	add    BYTE PTR [eax],al
  408108:	sub    eax,DWORD PTR [eax]
  40810a:	add    BYTE PTR [eax],al
  40810c:	rol    BYTE PTR [eax],0x0
  40810f:	add    BYTE PTR ds:0xd1000000,al
  408115:	add    al,BYTE PTR [eax]
  408117:	add    BYTE PTR ds:0xd1000000,bh
  40811d:	add    al,BYTE PTR [eax]
  40811f:	add    BYTE PTR [ecx+0x58000000],cl
  408125:	add    BYTE PTR [eax],al
  408127:	add    BYTE PTR [ebp-0x4dfffffe],bh
  40812d:	add    DWORD PTR [eax],eax
  40812f:	add    BYTE PTR [ecx+eax*1+0x0],ah
  408133:	add    BYTE PTR [edi+0x0],cl
  408136:	add    BYTE PTR [eax],al
  408138:	pop    es
  408139:	add    BYTE PTR [eax],al
  40813b:	add    BYTE PTR [ecx],bl
  40813d:	add    BYTE PTR [eax],al
  40813f:	add    BYTE PTR [eax+eax*1],dh
  408142:	add    BYTE PTR [eax],al
  408144:	inc    esi
  408145:	add    BYTE PTR [eax],al
  408147:	add    BYTE PTR [eax],bh
  408149:	int3   
  40814a:	add    al,BYTE PTR [eax]
  40814c:	add    BYTE PTR [edx+ebp*1],dl
  40814f:	add    dl,BYTE PTR [edi]
  408151:	sub    BYTE PTR [eax+eax*1+0x0],bh
  408155:	push   es
  408156:	adc    al,0x2a
  408158:	add    bl,BYTE PTR [edx]
  40815a:	sub    BYTE PTR [eax+eax*1+0x0],bh
  40815e:	push   es
  40815f:	adc    al,0x2a
  408161:	add    dl,BYTE PTR [edi]
  408163:	sub    BYTE PTR [eax+eax*1+0x0],bh
  408167:	push   es
  408168:	adc    al,0x2a
  40816a:	add    bl,BYTE PTR [edx]
  40816c:	sub    BYTE PTR [eax+eax*1+0x0],bh
  408170:	push   es
  408171:	adc    al,0x2a
  408173:	add    bl,BYTE PTR [esi]
  408175:	sub    BYTE PTR [eax+eax*1+0x0],bh
  408179:	push   es
  40817a:	adc    al,0x2a
  40817c:	add    bl,BYTE PTR [edx]
  40817e:	sub    BYTE PTR [eax+eax*1+0x0],bh
  408182:	push   es
  408183:	adc    al,0x2a
  408185:	add    bl,BYTE PTR [esi]
  408187:	sub    BYTE PTR [eax+eax*1+0x0],bh
  40818b:	push   es
  40818c:	adc    al,0x2a
  40818e:	add    dl,BYTE PTR [edi]
  408190:	sub    BYTE PTR [eax+eax*1+0x0],bh
  408194:	push   es
  408195:	adc    al,0x2a
  408197:	add    bl,BYTE PTR [eax]
  408199:	sub    BYTE PTR [eax+eax*1+0x0],bh
  40819d:	push   es
  40819e:	adc    al,0x2a
  4081a0:	add    ch,BYTE PTR [eax]
  4081a2:	jle    0x4081a4
  4081a4:	add    BYTE PTR [esi],al
  4081a6:	and    eax,0x2020c26
  4081ab:	jnp    0x4081e3
  4081ad:	add    BYTE PTR [eax],al
  4081af:	add    al,0x2
  4081b1:	jnp    0x4081ea
  4081b3:	add    BYTE PTR [eax],al
  4081b5:	add    al,0x8
  4081b7:	outs   dx,DWORD PTR ds:[esi]
  4081b8:	inc    esi
  4081b9:	add    DWORD PTR [eax],eax
  4081bb:	or     ch,BYTE PTR [edi+0x47]
  4081be:	add    DWORD PTR [eax],eax
  4081c0:	or     al,BYTE PTR [esi]
  4081c2:	adc    al,BYTE PTR [ecx]
  4081c4:	sub    BYTE PTR [eax+0x1],cl
  4081c7:	add    BYTE PTR [edx],cl
  4081c9:	pop    eax
  4081ca:	sub    BYTE PTR [edi+0x0],bh
  4081cd:	add    BYTE PTR [esi],al
  4081cf:	adc    al,0x2a
  4081d1:	add    ch,BYTE PTR [eax]
  4081d3:	jle    0x4081d5
  4081d5:	add    BYTE PTR [esi],al
  4081d7:	and    eax,0x2020c26
  4081dc:	jnp    0x408214
  4081de:	add    BYTE PTR [eax],al
  4081e0:	add    al,0x2
  4081e2:	jnp    0x40821b
  4081e4:	add    BYTE PTR [eax],al
  4081e6:	add    al,0x8
  4081e8:	outs   dx,DWORD PTR ds:[esi]
  4081e9:	dec    ecx
  4081ea:	add    DWORD PTR [eax],eax
  4081ec:	or     ah,BYTE PTR ds:0x14a6f26
  4081f2:	add    BYTE PTR [edx],cl
  4081f4:	and    eax,0x1120626
  4081f9:	sub    BYTE PTR [eax+0x1],cl
  4081fc:	add    BYTE PTR [edx],cl
  4081fe:	and    eax,0x7f285826
  408203:	add    BYTE PTR [eax],al
  408205:	push   es
  408206:	adc    al,0x2a
  408208:	add    ch,BYTE PTR [eax]
  40820a:	jle    0x40820c
  40820c:	add    BYTE PTR [esi],al
  40820e:	and    eax,0x7b020c26
  408213:	aaa    
  408214:	add    BYTE PTR [eax],al
  408216:	add    al,0x8
  408218:	add    bh,BYTE PTR [ebx+0x39]
  40821b:	add    BYTE PTR [eax],al
  40821d:	add    al,0x2
  40821f:	jnp    0x408259
  408221:	add    BYTE PTR [eax],al
  408223:	add    al,0x6f
  408225:	dec    ebx
  408226:	add    DWORD PTR [eax],eax
  408228:	or     dl,BYTE PTR [ebx]
  40822a:	add    al,0x2
  40822c:	add    bh,BYTE PTR [ebx+0x36]
  40822f:	add    BYTE PTR [eax],al
  408231:	add    al,0x11
  408233:	add    al,0x6f
  408235:	dec    esp
  408236:	add    DWORD PTR [eax],eax
  408238:	or     ah,BYTE PTR ds:0x6f041126
  40823e:	and    al,BYTE PTR [ecx]
  408240:	add    BYTE PTR [edx],cl
  408242:	and    eax,0x14d6f26
  408247:	add    BYTE PTR [edx],cl
  408249:	and    eax,0x14e6f26
  40824e:	add    BYTE PTR [edx],cl
  408250:	and    eax,0x1120626
  408255:	sub    BYTE PTR [eax+0x1],cl
  408258:	add    BYTE PTR [edx],cl
  40825a:	pop    eax
  40825b:	sub    BYTE PTR [edi+0x0],bh
  40825e:	add    BYTE PTR [esi],al
  408260:	adc    al,0x2a
  408262:	add    ch,BYTE PTR [eax]
  408264:	jle    0x408266
  408266:	add    BYTE PTR [esi],al
  408268:	and    eax,0x7b020c26
  40826d:	aaa    
  40826e:	add    BYTE PTR [eax],al
  408270:	add    al,0x8
  408272:	add    bh,BYTE PTR [ebx+0x39]
  408275:	add    BYTE PTR [eax],al
  408277:	add    al,0x2
  408279:	jnp    0x4082b3
  40827b:	add    BYTE PTR [eax],al
  40827d:	add    al,0x6f
  40827f:	dec    edi
  408280:	add    DWORD PTR [eax],eax
  408282:	or     ah,BYTE PTR ds:0x2051326
  408288:	add    bh,BYTE PTR [ebx+0x36]
  40828b:	add    BYTE PTR [eax],al
  40828d:	add    al,0x11
  40828f:	add    eax,0x1506f
  408294:	or     ch,BYTE PTR [edi+0x51]
  408297:	add    DWORD PTR [eax],eax
  408299:	or     al,BYTE PTR [esi]
  40829b:	adc    al,BYTE PTR [ecx]
  40829d:	sub    BYTE PTR [eax+0x1],cl
  4082a0:	add    BYTE PTR [edx],cl
  4082a2:	and    eax,0x7f285826
  4082a7:	add    BYTE PTR [eax],al
  4082a9:	push   es
  4082aa:	adc    al,0x2a
  4082ac:	add    ch,BYTE PTR [eax]
  4082ae:	jle    0x4082b0
  4082b0:	add    BYTE PTR [esi],al
  4082b2:	and    eax,0x7b020c26
  4082b7:	aaa    
  4082b8:	add    BYTE PTR [eax],al
  4082ba:	add    al,0x8
  4082bc:	add    bh,BYTE PTR [ebx+0x39]
  4082bf:	add    BYTE PTR [eax],al
  4082c1:	add    al,0x2
  4082c3:	jnp    0x4082fd
  4082c5:	add    BYTE PTR [eax],al
  4082c7:	add    al,0x6f
  4082c9:	push   edx
  4082ca:	add    DWORD PTR [eax],eax
  4082cc:	or     ah,BYTE PTR ds:0x2061326
  4082d2:	add    bh,BYTE PTR [ebx+0x36]
  4082d5:	add    BYTE PTR [eax],al
  4082d7:	add    al,0x11
  4082d9:	push   es
  4082da:	outs   dx,DWORD PTR ds:[esi]
  4082db:	dec    ebp
  4082dc:	add    DWORD PTR [eax],eax
  4082de:	or     ah,BYTE PTR ds:0x1376f26
  4082e4:	add    BYTE PTR [edx],cl
  4082e6:	and    eax,0x1120626
  4082eb:	sub    BYTE PTR [eax+0x1],cl
  4082ee:	add    BYTE PTR [edx],cl
  4082f0:	and    eax,0x7f285826
  4082f5:	add    BYTE PTR [eax],al
  4082f7:	push   es
  4082f8:	adc    al,0x2a
  4082fa:	add    ch,BYTE PTR [eax]
  4082fc:	jle    0x4082fe
  4082fe:	add    BYTE PTR [esi],al
  408300:	and    eax,0x7b020c26
  408305:	aaa    
  408306:	add    BYTE PTR [eax],al
  408308:	add    al,0x8
  40830a:	add    bh,BYTE PTR [ebx+0x39]
  40830d:	add    BYTE PTR [eax],al
  40830f:	add    al,0x2
  408311:	jnp    0x40834b
  408313:	add    BYTE PTR [eax],al
  408315:	add    al,0x6f
  408317:	push   ebx
  408318:	add    DWORD PTR [eax],eax
  40831a:	or     ah,BYTE PTR ds:0x11071326
  408320:	pop    es
  408321:	outs   dx,DWORD PTR ds:[esi]
  408322:	push   esp
  408323:	add    DWORD PTR [eax],eax
  408325:	or     ah,BYTE PTR ds:0x2e201f26
  40832b:	sbb    dl,BYTE PTR [ecx]
  40832d:	pop    es
  40832e:	outs   dx,DWORD PTR ds:[esi]
  40832f:	push   esp
  408330:	add    DWORD PTR [eax],eax
  408332:	or     ah,BYTE PTR ds:0x802026
  408338:	add    BYTE PTR [eax],al
  40833a:	xor    ebp,DWORD PTR ds:0x14517
  408340:	add    BYTE PTR [eax],al
  408342:	idiv   bh
  408344:	(bad)  
  408345:	call   DWORD PTR [ecx]
  408347:	pop    es
  408348:	jne    0x4082ee
  40834a:	add    BYTE PTR [eax],al
  40834c:	add    DWORD PTR [ebx],edx
  40834e:	or     BYTE PTR [edx],al
  408350:	jnp    0x408388
  408352:	add    BYTE PTR [eax],al
  408354:	add    al,0x11
  408356:	or     BYTE PTR [edi+0x4d],ch
  408359:	add    DWORD PTR [eax],eax
  40835b:	or     ah,BYTE PTR ds:0x1376f26
  408361:	add    BYTE PTR [edx],cl
  408363:	or     al,0x38
  408365:	mov    BYTE PTR [eax],al
  408367:	add    BYTE PTR [eax],al
  408369:	adc    DWORD PTR [edi],eax
  40836b:	outs   dx,DWORD PTR ds:[esi]
  40836c:	push   esp
  40836d:	add    DWORD PTR [eax],eax
  40836f:	or     ah,BYTE PTR ds:0x1e2e1e26
  408375:	sbb    al,BYTE PTR [ebp+0x1]
  408378:	add    BYTE PTR [eax],al
  40837a:	add    dh,dh
  40837c:	(bad)  
  40837d:	(bad)  
  40837e:	call   DWORD PTR [ecx]
  408380:	pop    es
  408381:	outs   dx,DWORD PTR ds:[esi]
  408382:	push   esp
  408383:	add    DWORD PTR [eax],eax
  408385:	or     dl,BYTE PTR [edi]
  408387:	xor    edi,DWORD PTR [esp+ebx*1]
  40838a:	inc    ebp
  40838b:	add    DWORD PTR [eax],eax
  40838d:	add    BYTE PTR [eax],al
  40838f:	idiv   bh
  408391:	(bad)  
  408392:	call   DWORD PTR [ecx]
  408394:	pop    es
  408395:	jne    0x408317
  408397:	add    BYTE PTR [eax],al
  408399:	add    DWORD PTR [ebx],edx
  40839b:	or     DWORD PTR [edx],eax
  40839d:	jnp    0x4083d5
  40839f:	add    BYTE PTR [eax],al
  4083a1:	add    al,0x11
  4083a3:	or     DWORD PTR [edi+0x4c],ebp
  4083a6:	add    DWORD PTR [eax],eax
  4083a8:	or     ah,BYTE PTR ds:0x6f091126
  4083ae:	and    al,BYTE PTR [ecx]
  4083b0:	add    BYTE PTR [edx],cl
  4083b2:	and    eax,0x14d6f26
  4083b7:	add    BYTE PTR [edx],cl
  4083b9:	and    eax,0x14e6f26
  4083be:	add    BYTE PTR [edx],cl
  4083c0:	and    eax,0x2c2b0c26
  4083c5:	adc    DWORD PTR [edi],eax
  4083c7:	outs   dx,DWORD PTR ds:[esi]
  4083c8:	push   esp
  4083c9:	add    DWORD PTR [eax],eax
  4083cb:	or     ah,BYTE PTR ds:0x20331a26
  4083d1:	adc    DWORD PTR [edi],eax
  4083d3:	jne    0x408451
  4083d5:	add    BYTE PTR [eax],al
  4083d7:	add    DWORD PTR [ebx],edx
  4083d9:	or     al,BYTE PTR [edx]
  4083db:	jnp    0x408413
  4083dd:	add    BYTE PTR [eax],al
  4083df:	add    al,0x11
  4083e1:	or     ch,BYTE PTR [edi+0x50]
  4083e4:	add    DWORD PTR [eax],eax
  4083e6:	or     ah,BYTE PTR ds:0x1516f26
  4083ec:	add    BYTE PTR [edx],cl
  4083ee:	and    eax,0x8020c26
  4083f3:	push   es
  4083f4:	adc    al,BYTE PTR [ecx]
  4083f6:	sub    BYTE PTR [eax+0x1],cl
  4083f9:	add    BYTE PTR [edx],cl
  4083fb:	and    eax,0x7f285826
  408400:	add    BYTE PTR [eax],al
  408402:	push   es
  408403:	adc    al,0x2a
  408405:	add    ch,BYTE PTR [eax]
  408407:	jle    0x408409
  408409:	add    BYTE PTR [esi],al
  40840b:	adc    ecx,DWORD PTR [ebx]
  40840d:	add    dl,BYTE PTR [ecx]
  40840f:	or     ebx,DWORD PTR [edx]
  408411:	pop    edx
  408412:	sub    BYTE PTR [eax+eax*1+0x0],bh
  408416:	push   es
  408417:	adc    al,0x2a
  408419:	jb     0x4083ac
  40841b:	add    DWORD PTR [eax],eax
  40841d:	jo     0x408431
  40841f:	add    DWORD PTR [eax],ebp
  408421:	inc    ebp
  408422:	add    DWORD PTR [eax],eax
  408424:	or     cl,BYTE PTR [ecx+edi*2+0x28010000]
  40842b:	inc    ecx
  40842c:	add    BYTE PTR [eax],al
  40842e:	or     dh,BYTE PTR [ebx+0x55]
  408431:	add    DWORD PTR [eax],eax
  408433:	or     bh,BYTE PTR [edx+0x0]
  408436:	add    BYTE PTR [eax],al
  408438:	add    esi,DWORD PTR [eax]
  40843a:	or     DWORD PTR [eax],eax
  40843c:	sldt   WORD PTR [eax]
  40843f:	add    BYTE PTR [eax],al
  408441:	add    BYTE PTR [eax],al
  408443:	add    BYTE PTR [edx],al
  408445:	and    eax,0x347b
  40844a:	add    al,0x3
  40844c:	pop    eax
  40844d:	jge    0x408483
  40844f:	add    BYTE PTR [eax],al
  408451:	add    al,0x2a
  408453:	add    BYTE PTR [ebx],dl
  408455:	xor    BYTE PTR ds:0x1900,al
  40845b:	add    BYTE PTR [edi],cl
  40845d:	add    BYTE PTR [eax],al
  40845f:	adc    DWORD PTR [edx],eax
  408461:	jnp    0x408498
  408463:	add    BYTE PTR [eax],al
  408465:	add    al,0x2
  408467:	and    eax,0x347b
  40846c:	add    al,0x25
  40846e:	or     dl,BYTE PTR [edi]
  408470:	pop    eax
  408471:	jge    0x4084a7
  408473:	add    BYTE PTR [eax],al
  408475:	add    al,0x6
  408477:	xchg   ecx,eax
  408478:	sub    al,BYTE PTR [eax]
  40847a:	add    BYTE PTR [eax],al
  40847c:	adc    esi,DWORD PTR [eax]
  40847e:	add    al,0x0
  408480:	and    al,0x0
  408482:	add    BYTE PTR [eax],al
  408484:	sldt   WORD PTR [eax]
  408487:	adc    DWORD PTR [edx],eax
  408489:	jnp    0x4084bf
  40848b:	add    BYTE PTR [eax],al
  40848d:	add    al,0xa
  40848f:	add    ah,BYTE PTR ds:0x347b
  408495:	add    al,0x1a
  408497:	pop    eax
  408498:	jge    0x4084ce
  40849a:	add    BYTE PTR [eax],al
  40849c:	add    al,0x2
  40849e:	jnp    0x4084d5
  4084a0:	add    BYTE PTR [eax],al
  4084a2:	add    al,0x6
  4084a4:	sub    bh,dh
  4084a6:	add    BYTE PTR [eax],al
  4084a8:	or     ah,BYTE PTR ds:0x30032a26
  4084ae:	add    eax,0x4d00
  4084b3:	add    BYTE PTR [eax],al
  4084b5:	add    BYTE PTR [eax],al
  4084b7:	add    BYTE PTR [edx],al
  4084b9:	jnp    0x4084f0
  4084bb:	add    BYTE PTR [eax],al
  4084bd:	add    al,0x4
  4084bf:	and    eax,0xbfe5817
  4084c4:	add    al,BYTE PTR [eax]
  4084c6:	add    edx,edx
  4084c8:	pushf  
  4084c9:	add    bh,BYTE PTR [ebx+0x35]
  4084cc:	add    BYTE PTR [eax],al
  4084ce:	add    al,0x4
  4084d0:	and    eax,0xbfe5817
  4084d5:	add    al,BYTE PTR [eax]
  4084d7:	add    ebx,DWORD PTR [esi]
  4084d9:	arpl   dx,dx
  4084db:	pushf  
  4084dc:	add    bh,BYTE PTR [ebx+0x35]
  4084df:	add    BYTE PTR [eax],al
  4084e1:	add    al,0x4
  4084e3:	and    eax,0xbfe5817
  4084e8:	add    al,BYTE PTR [eax]
  4084ea:	add    ebx,DWORD PTR [edi]
  4084ec:	adc    BYTE PTR [ebx-0x2e],ah
  4084ef:	pushf  
  4084f0:	add    bh,BYTE PTR [ebx+0x35]
  4084f3:	add    BYTE PTR [eax],al
  4084f5:	add    al,0x4
  4084f7:	and    eax,0xbfe5817
  4084fc:	add    al,BYTE PTR [eax]
  4084fe:	add    ebx,DWORD PTR [edi]
  408500:	sbb    BYTE PTR [ebx-0x2e],ah
  408503:	pushf  
  408504:	sub    al,BYTE PTR [eax]
  408506:	add    BYTE PTR [eax],al
  408508:	jecxz  0x40848f
  40850a:	add    al,BYTE PTR [eax]
  40850c:	cmc    
  40850d:	add    BYTE PTR [eax],al
  40850f:	ins    DWORD PTR es:[edi],dx
  408510:	mov    ebp,0x4fea50e7
  408515:	out    dx,eax
  408516:	xor    DWORD PTR [ebx+ebp*4-0x6d],edx
  40851a:	aam    0xe2
  40851c:	push   ecx
  40851d:	inc    edi
  40851e:	in     eax,dx
  40851f:	and    bh,BYTE PTR [ebp-0x1ca65568]
  408525:	dec    eax
  408526:	cs or  eax,0xa32c9979
  40852c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40852d:	in     eax,dx
  40852e:	xchg   ebp,eax
  40852f:	xchg   edx,eax
  408530:	fwait
  408531:	into   
  408532:	inc    esp
  408533:	dec    ecx
  408534:	mov    al,ds:0x44880c2b
  408539:	ins    DWORD PTR es:[edi],dx
  40853a:	push   esi
  40853b:	loopne 0x408555
  40853d:	add    eax,0x5b8febd4
  408542:	xor    BYTE PTR [ecx],ah
  408544:	push   DWORD PTR [edi*8-0x46dc7955]
  40854b:	in     al,dx
  40854c:	push   cs
  40854d:	shl    cl,0xcb
  408550:	fcmovne st,st(7)
  408552:	dec    eax
  408553:	stc    
  408554:	mov    esp,0x6a3dcc72
  408559:	xor    DWORD PTR ds:0x1152ac5c,edx
  40855f:	mov    esp,0xa95693bc
  408564:	int    0xc2
  408566:	jne    0x4085d8
  408568:	jbe    0x4084ee
  40856a:	fadd   DWORD PTR [ecx]
  40856c:	ins    DWORD PTR es:[edi],dx
  40856d:	mov    DWORD PTR [eax],esi
  40856f:	pop    esi
  408570:	pop    esi
  408571:	stc    
  408572:	mov    ch,0xe4
  408574:	or     eax,0x892ed7a1
  408579:	stos   BYTE PTR es:[edi],al
  40857a:	test   BYTE PTR [ebp-0x25],bl
  40857d:	adc    al,0x80
  40857f:	jge    0x408576
  408581:	ins    DWORD PTR es:[edi],dx
  408582:	sahf   
  408583:	xor    BYTE PTR [ebx+0x34cff252],al
  408589:	daa    
  40858a:	xor    eax,0xd370ea13
  40858f:	or     DWORD PTR [edi-0x39a3eed5],esi
  408595:	je     0x408529
  408597:	xchg   edx,eax
  408598:	test   DWORD PTR [ebp-0x41],edi
  40859b:	int    0xd8
  40859d:	loop   0x40860f
  40859f:	adc    ah,BYTE PTR ss:[eax+0x14]
  4085a3:	mov    edx,0xa8c0e1c1
  4085a8:	rcr    DWORD PTR [eax-0x21],1
  4085ab:	inc    eax
  4085ac:	inc    ecx
  4085ad:	or     al,0x9d
  4085af:	(bad)  
  4085b0:	loope  0x408615
  4085b2:	shl    DWORD PTR [edi+ebp*2-0x2c],cl
  4085b6:	xchg   edi,eax
  4085b7:	add    cl,BYTE PTR [esi+0x4e364078]
  4085bd:	rcr    BYTE PTR [esi],cl
  4085bf:	inc    esi
  4085c0:	add    ch,BYTE PTR [esi-0x2a]
  4085c3:	ret    
  4085c4:	retf   
  4085c5:	or     eax,0x4c54452b
  4085ca:	outs   dx,BYTE PTR ds:[esi]
  4085cb:	pop    eax
  4085cc:	mov    BYTE PTR ds:0x7c6032d9,0x44
  4085d3:	daa    
  4085d4:	xor    al,0x6
  4085d6:	mov    cl,0x92
  4085d8:	xchg   ebp,eax
  4085d9:	jb     0x4085cb
  4085db:	icebp  
  4085dc:	adc    eax,0xec41a38a
  4085e1:	mov    edi,0xee035c97
  4085e6:	xchg   ebx,eax
  4085e7:	push   ds
  4085e8:	push   0x37
  4085ea:	add    al,0xba
  4085ec:	add    ebx,0xa599db56
  4085f2:	jp     0x4085ff
  4085f4:	xchg   esi,eax
  4085f5:	push   cs
  4085f6:	cmp    DWORD PTR [esp+ebp*8-0x4d],0x5
  4085fb:	aad    0x41
  4085fd:	sub    eax,0x4dd10ba8
  408602:	cwde   
  408603:	or     eax,0x3d24c059
  408608:	pop    ds
  408609:	hlt    
  40860a:	mov    dl,0x24
  40860c:	pop    edx
  40860d:	and    al,0x95
  40860f:	je     0x4085f8
  408611:	popa   
  408612:	and    ch,BYTE PTR [edi-0x34]
  408615:	mov    es,ecx
  408617:	loop   0x4085fb
  408619:	lea    edx,[ebx+0x638198d7]
  40861f:	or     al,0x90
  408621:	ds jbe 0x4085c4
  408624:	cwde   
  408625:	je     0x40864a
  408627:	shl    BYTE PTR [esi+0xe65be11],cl
  40862d:	mov    esp,0x8ad850f5
  408632:	rcr    edx,1
  408634:	pop    esi
  408635:	sub    eax,DWORD PTR [ecx]
  408637:	xor    DWORD PTR [ebx-0x7f],0x7c
  40863b:	mov    BYTE PTR [ebx-0x10],bh
  40863e:	ins    BYTE PTR es:[edi],dx
  40863f:	mov    bl,0xab
  408641:	add    DWORD PTR [ecx+0x47dffd88],eax
  408647:	scas   eax,DWORD PTR es:[edi]
  408648:	jb     0x408668
  40864a:	mov    ch,0xfa
  40864c:	idiv   BYTE PTR [edx]
  40864e:	mov    ecx,0x1d5f0e4b
  408653:	cmc    
  408654:	lahf   
  408655:	dec    edi
  408656:	pusha  
  408657:	aad    0x26
  408659:	retf   
  40865a:	xchg   ebx,eax
  40865b:	lock inc edx
  40865d:	icebp  
  40865e:	mov    esi,DWORD PTR [eax]
  408660:	mov    ebx,0x18a2a865
  408665:	fdiv   DWORD PTR [edi+ebp*1-0x4b9c33dd]
  40866c:	fidiv  WORD PTR [esi+edx*1]
  40866f:	fld    QWORD PTR [ebp+0x73]
  408672:	xor    eax,0x91de3f74
  408677:	lock mov ds:0x38ddbdfe,al
  40867d:	not    BYTE PTR [edx]
  40867f:	or     DWORD PTR [edx+eax*4],eax
  408682:	fsubr  DWORD PTR [esi+0x2906379a]
  408688:	pop    es
  408689:	out    0xcd,al
  40868b:	add    BYTE PTR [esi],cl
  40868d:	cmp    DWORD PTR [ebx-0x1c],ebx
  408690:	inc    ebx
  408691:	inc    ebp
  408692:	mov    ecx,0xb5af1408
  408697:	sub    eax,0x58b3913c
  40869c:	inc    ecx
  40869d:	mov    ecx,0x5e1e6c30
  4086a2:	dec    eax
  4086a3:	add    al,BYTE PTR [esi+0x38]
  4086a6:	push   0xffffff90
  4086a8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4086a9:	push   ds
  4086aa:	mov    WORD PTR [ecx],gs
  4086ac:	push   edx
  4086ad:	fs pop ss
  4086af:	inc    edx
  4086b0:	and    bh,BYTE PTR ds:0x31ca307d
  4086b6:	arpl   ax,dx
  4086b8:	mov    edi,0x5863e745
  4086bd:	push   0xedac6002
  4086c2:	or     DWORD PTR [edi+0x3fafe918],esi
  4086c8:	push   es
  4086c9:	lods   al,BYTE PTR ds:[esi]
  4086ca:	sbb    esi,DWORD PTR [eax]
  4086cc:	int3   
  4086cd:	popa   
  4086ce:	xlat   BYTE PTR ds:[ebx]
  4086cf:	push   esi
  4086d0:	mov    eax,ds:0x599cb3c4
  4086d5:	loope  0x40871c
  4086d7:	scas   al,BYTE PTR es:[edi]
  4086d8:	push   cs
  4086d9:	adc    eax,0xe89dbe0c
  4086de:	xchg   ebx,eax
  4086df:	push   ecx
  4086e0:	mov    eax,ds:0x167abd75
  4086e5:	(bad)  
  4086e6:	fsubp  st(6),st
  4086e8:	cmc    
  4086e9:	in     eax,0x88
  4086eb:	push   edi
  4086ec:	adc    BYTE PTR ds:0x3a4e1648,al
  4086f2:	repz test al,0xe7
  4086f5:	sbb    BYTE PTR [edx-0x79],bl
  4086f8:	nop
  4086f9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4086fa:	mov    ebp,0x4f13a1e4
  4086ff:	fs in  al,dx
  408701:	mov    esi,0x9dee59e3
  408706:	(bad)  
  408707:	dec    edx
  408708:	xchg   edi,eax
  408709:	mov    ss,edx
  40870b:	test   BYTE PTR [eax+0x384e367d],bh
  408711:	dec    esp
  408712:	int3   
  408713:	ret    
  408714:	test   DWORD PTR [ebp-0x19cb6ba4],ecx
  40871a:	test   BYTE PTR [edi-0x31881a4],0x2b
  408721:	lahf   
  408722:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408723:	daa    
  408724:	loope  0x4086fb
  408726:	jbe    0x4086c2
  408728:	call   0xbca6:0x7fc060c3
  40872f:	xor    edx,edi
  408731:	lds    edx,FWORD PTR [ebp+0x18e3d9ff]
  408737:	mov    DWORD PTR ds:0x53d6fd1,ebp
  40873d:	daa    
  40873e:	ret    
  40873f:	stc    
  408740:	push   edx
  408741:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408742:	mov    cl,0x9d
  408744:	cmc    
  408745:	or     edx,esi
  408747:	loop   0x408768
  408749:	inc    esp
  40874a:	cmp    cl,bl
  40874c:	and    al,0x25
  40874e:	lock mov ds,esi
  408751:	scas   al,BYTE PTR es:[edi]
  408752:	shr    DWORD PTR [ecx],cl
  408754:	sub    DWORD PTR cs:[edx+eax*2],0x6fbc6fb4
  40875c:	dec    edi
  40875d:	mov    al,ds:0x90827cf4
  408762:	sub    eax,0xc88ee3bd
  408767:	push   0xfffffff6
  408769:	inc    esp
  40876a:	mov    edx,0xb8494740
  40876f:	jmp    0x48a36e5c
  408774:	fxch   st(4)
  408776:	jmp    0x40874d
  408778:	sbb    BYTE PTR [eax-0x7c203231],dh
  40877e:	add    al,0xe1
  408780:	mov    esi,ss
  408782:	xchg   esi,eax
  408783:	sti    
  408784:	out    dx,eax
  408785:	sbb    BYTE PTR [edi+0x2f01e49c],bh
  40878b:	psrlw  mm3,QWORD PTR [ecx+ebx*1+0x509953e0]
  408793:	test   DWORD PTR [ebx+0x3c],eax
  408796:	ins    DWORD PTR es:[edi],dx
  408797:	add    eax,0x86608e14
  40879c:	jb     0x408743
  40879e:	lds    esi,FWORD PTR [edi]
  4087a0:	ds ss pop esi
  4087a3:	(bad)  
  4087a4:	pop    ebx
  4087a5:	pop    ebp
  4087a6:	das    
  4087a7:	push   ds
  4087a8:	outs   dx,DWORD PTR ds:[esi]
  4087a9:	(bad)  
  4087aa:	adc    eax,0xb20643bf
  4087af:	mov    dh,0x8b
  4087b1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4087b2:	ficomp DWORD PTR [edx+0x4d942532]
  4087b8:	jl     0x40878c
  4087ba:	dec    eax
  4087bb:	dec    ecx
  4087bc:	lds    esi,FWORD PTR [ebx]
  4087be:	dec    edi
  4087bf:	sahf   
  4087c0:	stos   BYTE PTR es:[edi],al
  4087c1:	xchg   DWORD PTR ds:0x4f0ec368,ecx
  4087c7:	sbb    BYTE PTR [ebx+0x3cefc752],al
  4087cd:	inc    esi
  4087ce:	cli    
  4087cf:	inc    ecx
  4087d0:	mov    eax,0xd44271e9
  4087d5:	adc    DWORD PTR [edi+0x2c],ecx
  4087d8:	jl     0x408769
  4087da:	adc    al,0x8f
  4087dc:	adc    BYTE PTR [edi-0x445a3c97],bh
  4087e2:	jmp    0xf7f37353
  4087e7:	push   ebp
  4087e8:	stos   DWORD PTR es:[edi],eax
  4087e9:	aas    
  4087ea:	cmp    esi,esp
  4087ec:	mov    esi,edi
  4087ee:	lahf   
  4087ef:	imul   eax,DWORD PTR [ecx-0x75],0x3180e30d
  4087f6:	mov    ecx,0xfd0072c
  4087fb:	fstp   QWORD PTR [edx+0x73173f95]
  408801:	sbb    bh,BYTE PTR [esi]
  408803:	inc    edx
  408804:	cli    
  408805:	xchg   edi,eax
  408806:	(bad)  
  408807:	ficom  DWORD PTR [edx+0x5d]
  40880a:	add    dl,0xcd
  40880d:	lods   al,BYTE PTR ds:[esi]
  40880e:	jmp    0x40880c
  408810:	dec    ebx
  408811:	sub    al,0xda
  408813:	and    esi,DWORD PTR [esi-0x710e40f4]
  408819:	and    eax,0x11a62b10
  40881e:	push   cs
  40881f:	mov    ?,WORD PTR [esi+0x6c]
  408822:	sbb    BYTE PTR ds:[edx-0x38],0x19
  408827:	inc    ebx
  408828:	cli    
  408829:	push   0xffffffdc
  40882b:	mov    cl,0xf8
  40882d:	cli    
  40882e:	hlt    
  40882f:	and    al,0xda
  408831:	mov    bl,bh
  408833:	retf   
  408834:	inc    esp
  408835:	dec    eax
  408836:	sub    ebx,DWORD PTR [ebx-0x2c]
  408839:	in     al,0x7e
  40883b:	cwde   
  40883c:	or     BYTE PTR [eiz*8+0x135d4973],dh
  408843:	xor    eax,DWORD PTR [edi+0x50]
  408846:	out    0xde,al
  408848:	test   eax,0xedddb9f4
  40884d:	mov    ebx,0x35dd2561
  408852:	cmc    
  408853:	es std 
  408855:	jb     0x408804
  408857:	pop    ds
  408858:	jmp    0x592d56b4
  40885d:	xor    dh,al
  40885f:	call   0x8e85a50f
  408864:	sbb    BYTE PTR [eax],cl
  408866:	repz sbb ebp,DWORD PTR [eax]
  408869:	push   esi
  40886a:	cmc    
  40886b:	cld    
  40886c:	xor    BYTE PTR [edx],0xee
  40886f:	lock push si
  408872:	push   eax
  408873:	push   DWORD PTR [edx]
  408875:	cmp    ah,BYTE PTR [edi]
  408877:	cs icebp 
  408879:	neg    DWORD PTR [ecx+0x55]
  40887c:	dec    esi
  40887d:	xor    dh,dh
  40887f:	(bad)  [edx]
  408881:	(bad)  
  408883:	dec    edi
  408884:	xchg   ecx,eax
  408885:	add    ebx,DWORD PTR [esi]
  408887:	cs push ebp
  408889:	inc    ebx
  40888a:	dec    ch
  40888c:	das    
  40888d:	adc    DWORD PTR [ecx+0x60f08976],edx
  408893:	or     BYTE PTR [edx-0x519390b0],bh
  408899:	add    al,0x14
  40889b:	dec    edi
  40889c:	dec    esi
  40889d:	pusha  
  40889e:	dec    edi
  40889f:	(bad)  
  4088a0:	inc    DWORD PTR gs:[edx+0x2]
  4088a4:	mov    ch,0xce
  4088a6:	int3   
  4088a7:	neg    ecx
  4088a9:	cmc    
  4088aa:	inc    ebp
  4088ab:	or     DWORD PTR [esi+ebx*2],eax
  4088ae:	add    edx,esp
  4088b0:	xchg   edi,eax
  4088b1:	push   esi
  4088b2:	dec    esp
  4088b3:	pop    ss
  4088b4:	dec    eax
  4088b5:	sbb    eax,DWORD PTR [edi]
  4088b7:	jge    0x408882
  4088b9:	sub    BYTE PTR [ecx+0x4bca87dd],al
  4088bf:	mov    al,ds:0xae1f49a7
  4088c4:	pop    esp
  4088c5:	cmp    BYTE PTR [ecx-0x61d462bc],dl
  4088cb:	mov    esi,0xdb333860
  4088d0:	sub    al,bl
  4088d2:	cdq    
  4088d3:	or     eax,0x43353143
  4088d8:	jae    0x4088a3
  4088da:	fmul   DWORD PTR [edi+edi*2+0x1d]
  4088de:	into   
  4088df:	lock and bl,BYTE PTR es:[ebx-0x64334c46]
  4088e7:	scas   al,BYTE PTR es:[edi]
  4088e8:	push   ss
  4088e9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4088ea:	fidivr WORD PTR [edx-0x20e8c928]
  4088f0:	lods   al,BYTE PTR ds:[esi]
  4088f1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4088f2:	scas   al,BYTE PTR es:[edi]
  4088f3:	cdq    
  4088f4:	sub    edi,ebp
  4088f6:	repz imul DWORD PTR [edx+0x202645ea]
  4088fd:	adc    eax,0xb17f00ba
  408902:	scas   eax,DWORD PTR es:[edi]
  408903:	(bad)  
  408904:	cli    
  408905:	push   cs
  408906:	pusha  
  408907:	imul   esp,DWORD PTR [ebx+ecx*8+0x1f9fa2e7],0x4d96ccd7
  408912:	sub    DWORD PTR [esi],esp
  408914:	jnp    0x4088e5
  408916:	imul   DWORD PTR [esi+0x5b]
  408919:	loop   0x408910
  40891b:	pop    es
  40891c:	ds in  eax,0xd9
  40891f:	mov    cl,0x9d
  408921:	leave  
  408922:	mov    BYTE PTR es:[ecx-0x29],dh
  408926:	retf   
  408927:	inc    edi
  408928:	popf   
  408929:	adc    BYTE PTR [edi],ch
  40892b:	test   al,0x30
  40892d:	sbb    dh,bh
  40892f:	dec    ecx
  408930:	fwait
  408931:	iret   
  408932:	mov    ch,0x89
  408934:	mov    ds,WORD PTR gs:[ebp+0x4c8bc4c3]
  40893b:	jbe    0x40899f
  40893d:	and    al,0xa1
  40893f:	cmp    BYTE PTR [edi+eiz*2+0x24091638],dh
  408946:	(bad)  
  408948:	lods   eax,DWORD PTR ds:[esi]
  408949:	js     0x40899f
  40894b:	(bad)  
  40894c:	(bad)  
  40894d:	cwde   
  40894e:	jne    0x4089ad
  408950:	out    0x1b,al
  408952:	fsub   DWORD PTR [ebx+0x2c]
  408955:	outs   dx,BYTE PTR ds:[esi]
  408956:	dec    edi
  408957:	fst    QWORD PTR [edx+0x13377e9e]
  40895d:	test   al,0x18
  40895f:	xchg   esi,eax
  408960:	pop    esp
  408961:	fidivr WORD PTR [ecx-0x1f7f409c]
  408967:	je     0x408908
  408969:	shl    DWORD PTR [ebx+0x6d31ce95],1
  40896f:	in     al,0x4d
  408971:	mov    bh,0xc2
  408973:	ja     0x40895a
  408975:	loop   0x40899d
  408977:	dec    ebx
  408978:	mov    ecx,0xeed5eb32
  40897d:	fidiv  DWORD PTR [ecx]
  40897f:	pop    ds
  408980:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408981:	or     DWORD PTR [ebx],eax
  408983:	lea    eax,[ebp-0x470757a2]
  408989:	xchg   ebx,eax
  40898a:	sbb    ebx,DWORD PTR [esi]
  40898c:	mov    bl,0x50
  40898e:	pop    edx
  40898f:	jg     0x408971
  408991:	adc    DWORD PTR [edx],esi
  408993:	xchg   edi,eax
  408994:	push   es
  408995:	push   edx
  408996:	xor    edx,eax
  408998:	mov    esi,0x26a131ee
  40899d:	in     al,dx
  40899e:	in     eax,0x8d
  4089a0:	xchg   esi,eax
  4089a1:	xbegin 0x8f20e2c1
  4089a7:	sbb    bl,BYTE PTR [esi-0x6d4f743d]
  4089ad:	(bad)  
  4089ae:	(bad)  
  4089af:	outs   dx,DWORD PTR ds:[esi]
  4089b0:	and    ebp,DWORD PTR [ecx+ecx*8-0x2d]
  4089b4:	jb     0x408942
  4089b6:	or     eax,0x36a28753
  4089bb:	xchg   edx,eax
  4089bc:	xchg   ebx,eax
  4089bd:	xor    eax,0x4f
  4089c0:	jecxz  0x408a3c
  4089c2:	mov    cl,BYTE PTR [esi+0x820e43c]
  4089c8:	dec    ecx
  4089c9:	shl    DWORD PTR [edx],0x2f
  4089cc:	rcl    BYTE PTR [esp+esi*1-0x4908fb72],1
  4089d3:	pushf  
  4089d4:	dec    edi
  4089d5:	in     al,dx
  4089d6:	stos   DWORD PTR es:[edi],eax
  4089d7:	shl    DWORD PTR [ebx+eax*4+0x5cf273da],1
  4089de:	add    BYTE PTR [ecx-0x30],ah
  4089e1:	xor    al,0xe9
  4089e3:	fcomp  DWORD PTR [esi+0x12]
  4089e6:	xor    eax,DWORD PTR [eax-0x63]
  4089e9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4089ea:	rcr    dh,1
  4089ec:	out    0xe4,eax
  4089ee:	pusha  
  4089ef:	jmp    0x408976
  4089f1:	fild   QWORD PTR [eax+0x61f6e456]
  4089f7:	ret    
  4089f8:	sbb    al,0xfa
  4089fa:	add    eax,0x72bd4905
  4089ff:	sub    ebx,DWORD PTR [ebp-0xf852559]
  408a05:	popf   
  408a06:	gs pusha 
  408a08:	pop    ebp
  408a09:	lods   eax,DWORD PTR ds:[esi]
  408a0a:	pop    ebx
  408a0b:	ins    BYTE PTR es:[edi],dx
  408a0c:	dec    ecx
  408a0d:	rcl    edx,cl
  408a0f:	inc    edx
  408a10:	out    0x31,al
  408a12:	sub    edi,DWORD PTR [esi-0x1f14ea7c]
  408a18:	inc    edx
  408a19:	adc    cl,BYTE PTR [bx+di-0x76]
  408a1d:	jle    0x408a4b
  408a1f:	scas   eax,DWORD PTR es:[edi]
  408a20:	arpl   ax,di
  408a22:	xchg   esi,eax
  408a23:	add    ebp,DWORD PTR [esi+0x37]
  408a26:	mov    al,ds:0x54d95586
  408a2b:	or     DWORD PTR [edx-0x9beeaa7],0xffffff8a
  408a32:	xor    ch,bl
  408a34:	ss daa 
  408a36:	(bad)  
  408a37:	fdiv   st(0),st
  408a39:	outs   dx,DWORD PTR ds:[esi]
  408a3a:	mov    ebp,ebx
  408a3c:	pop    eax
  408a3d:	loop   0x4089fe
  408a3f:	push   es
  408a40:	adc    eax,0x3567bc3f
  408a45:	cmc    
  408a46:	xchg   esi,eax
  408a47:	add    BYTE PTR [edi+0x2c],ch
  408a4a:	stc    
  408a4b:	or     eax,0xab2e30d2
  408a50:	cdq    
  408a51:	push   ebp
  408a52:	rcr    DWORD PTR [eax+0x17],cl
  408a55:	cmp    ebp,DWORD PTR [eax]
  408a57:	mov    WORD PTR [eax-0x35],fs
  408a5a:	sub    BYTE PTR [ecx],dh
  408a5c:	or     ebx,DWORD PTR [esi]
  408a5e:	outs   dx,DWORD PTR ds:[esi]
  408a5f:	inc    edx
  408a60:	out    0x2d,al
  408a62:	sar    DWORD PTR [ebp+eax*4-0x46],0x61
  408a67:	shl    DWORD PTR [ebx],cl
  408a69:	xlat   BYTE PTR ds:[ebx]
  408a6a:	push   0x7d12e4e7
  408a6f:	mov    BYTE PTR [ebx-0x22],al
  408a72:	dec    esi
  408a73:	arpl   sp,bp
  408a75:	xor    ch,ah
  408a77:	push   esp
  408a78:	into   
  408a79:	aad    0xc6
  408a7b:	mov    bl,0x30
  408a7d:	(bad)  
  408a7f:	loopne 0x408a18
  408a81:	cmp    eax,0x3df2a224
  408a86:	mov    DWORD PTR [ecx+0x589009ad],eax
  408a8c:	xchg   esi,eax
  408a8d:	push   0x5532c2a5
  408a92:	mov    bh,0xde
  408a94:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408a95:	add    BYTE PTR [esi+0x2d],bl
  408a98:	jg     0x408ade
  408a9a:	bound  edi,QWORD PTR [edi]
  408a9c:	xchg   BYTE PTR [eax],dh
  408a9e:	test   BYTE PTR [edi-0x71],cl
  408aa1:	adc    eax,0x4e237951
  408aa6:	cmp    al,0x1a
  408aa8:	xchg   ebp,eax
  408aa9:	ins    DWORD PTR es:[edi],dx
  408aaa:	popf   
  408aab:	jg     0x408afb
  408aad:	cwde   
  408aae:	dec    ebp
  408aaf:	xchg   ebx,eax
  408ab0:	aad    0x13
  408ab2:	cli    
  408ab3:	pusha  
  408ab4:	cmp    eax,0x30fcfab1
  408ab9:	ret    
  408aba:	fsub   DWORD PTR [ecx-0x2daaae53]
  408ac0:	adc    al,0xc0
  408ac2:	dec    esp
  408ac3:	cld    
  408ac4:	retf   0x5643
  408ac7:	shl    DWORD PTR ss:[edx+0x35],cl
  408acb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408acc:	pop    ebp
  408acd:	imul   esp,DWORD PTR [ecx],0xffffff9c
  408ad0:	arpl   WORD PTR [eax-0xc],di
  408ad3:	cld    
  408ad4:	adc    DWORD PTR [ecx+0x7d],esi
  408ad7:	ret    0x4fe5
  408ada:	mov    eax,0x87782b7b
  408adf:	sbb    edi,DWORD PTR [edi+0x1c]
  408ae2:	and    al,0x43
  408ae4:	fstp   TBYTE PTR [edi]
  408ae6:	sbb    al,0x59
  408ae8:	and    eax,ecx
  408aea:	aad    0x36
  408aec:	jae    0x408abb
  408aee:	retf   0xca70
  408af1:	inc    edi
  408af2:	mov    ds,WORD PTR [eax-0x384782ee]
  408af8:	data16 cmp al,0x20
  408afb:	aam    0xb9
  408afd:	dec    ebp
  408afe:	pop    eax
  408aff:	pop    es
  408b00:	ror    BYTE PTR [edi-0x4b5bf3e1],0xad
  408b07:	jge    0x408a8b
  408b09:	xor    ah,BYTE PTR [edx]
  408b0b:	aaa    
  408b0c:	xchg   edx,eax
  408b0d:	inc    ebp
  408b0e:	fld    st(6)
  408b10:	add    DWORD PTR [ebp-0x3d008b35],esi
  408b16:	add    eax,DWORD PTR [edi-0x33]
  408b19:	push   0xffffffa6
  408b1b:	mov    dl,0x2a
  408b1d:	arpl   WORD PTR [ebx+0x29],cx
  408b20:	outs   dx,DWORD PTR ds:[esi]
  408b21:	popa   
  408b22:	push   ebp
  408b23:	js     0x408ae2
  408b25:	mov    dl,0x8a
  408b27:	xchg   ebp,eax
  408b28:	xchg   BYTE PTR [ecx+0x57],bh
  408b2b:	popa   
  408b2c:	jb     0x408ab0
  408b2e:	int3   
  408b2f:	ror    edx,1
  408b31:	add    BYTE PTR [ebp-0x549426e7],0x4f
  408b38:	mov    BYTE PTR [ecx-0x21],dh
  408b3b:	repnz xchg ecx,eax
  408b3d:	sub    esi,DWORD PTR [edx-0x577477e1]
  408b43:	fisttp WORD PTR [esi+0x2ed77056]
  408b49:	xor    BYTE PTR [esi],cl
  408b4b:	mov    bl,0xbc
  408b4d:	fsub   QWORD PTR [eax]
  408b4f:	ins    DWORD PTR es:[edi],dx
  408b50:	retf   
  408b51:	fidivr DWORD PTR [eax+0x7a]
  408b54:	call   DWORD PTR [ebp+0x20]
  408b57:	pop    ebp
  408b58:	and    BYTE PTR [esi+ebx*2+0x58],bl
  408b5c:	inc    esp
  408b5d:	add    dl,ch
  408b5f:	add    ch,BYTE PTR [ebp+0x4cf12008]
  408b65:	in     al,0x15
  408b67:	hlt    
  408b68:	jp     0x408bb8
  408b6a:	fadd   DWORD PTR [esi+0xf]
  408b6d:	shl    DWORD PTR [eax],cl
  408b6f:	aad    0xe4
  408b71:	adc    DWORD PTR [ebp-0x639f2f2c],0x2a
  408b78:	ins    DWORD PTR es:[edi],dx
  408b79:	dec    eax
  408b7a:	mov    edi,0xcb7ad26c
  408b7f:	aaa    
  408b80:	mov    edi,0x592319de
  408b85:	jo     0x408bc6
  408b87:	pop    ebp
  408b88:	test   eax,0xf4688ac6
  408b8d:	mov    ch,0x68
  408b8f:	movs   BYTE PTR es:[edi],BYTE PTR cs:[esi]
  408b91:	or     BYTE PTR [ebp-0x3b],ch
  408b94:	leave  
  408b95:	jbe    0x408b31
  408b97:	mov    ds:0x6e1f9526,al
  408b9c:	je     0x408b3e
  408b9e:	or     BYTE PTR [ebp+edx*8-0x60],0x8f
  408ba3:	xchg   esp,eax
  408ba4:	push   cs
  408ba5:	(bad)  
  408ba6:	mov    esp,0x15beee82
  408bab:	ins    BYTE PTR es:[di],dx
  408bad:	mov    al,ds:0x69dde1d9
  408bb2:	gs xchg esp,eax
  408bb4:	(bad)  
  408bb5:	push   cs
  408bb6:	adc    edx,DWORD PTR [ebx-0x3e4c3ec5]
  408bbc:	sub    bl,BYTE PTR [ebx+0x33]
  408bbf:	mov    ah,BYTE PTR [ecx-0x1475eb4a]
  408bc5:	sbb    bl,ch
  408bc7:	ret    0x6448
  408bca:	sub    ecx,DWORD PTR [esi-0x3d]
  408bcd:	lock adc edi,DWORD PTR [edx-0x4]
  408bd1:	pop    esp
  408bd2:	or     BYTE PTR [edx-0x62],dl
  408bd5:	inc    edi
  408bd6:	cmc    
  408bd7:	mov    edi,0xd0ba7e8d
  408bdc:	inc    BYTE PTR [esi+eax*8-0x721f6bce]
  408be3:	dec    esp
  408be4:	xor    DWORD PTR [ebx+0x3f48b844],esi
  408bea:	push   ss
  408beb:	(bad)  [esi+0x64483fee]
  408bf1:	cli    
  408bf2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408bf3:	sbb    DWORD PTR [ebx],esp
  408bf5:	add    al,al
  408bf7:	out    0x91,al
  408bf9:	ja     0x408c20
  408bfb:	(bad)  
  408bfc:	cmp    dl,dh
  408bfe:	addr16 cmp dh,cl
  408c01:	les    eax,FWORD PTR [ebx+0x4a]
  408c04:	and    ebx,DWORD PTR [eax+0x8]
  408c07:	jecxz  0x408bf2
  408c09:	push   ds
  408c0a:	and    esp,DWORD PTR [ebp+0x4f]
  408c0d:	add    al,0x4e
  408c0f:	icebp  
  408c10:	inc    esp
  408c11:	(bad)  
  408c12:	loopne 0x408bf6
  408c14:	fwait
  408c15:	mov    ecx,0xcc6d5194
  408c1a:	je     0x408c99
  408c1c:	mov    ds,WORD PTR [ecx+ebx*2]
  408c1f:	lods   eax,DWORD PTR ds:[esi]
  408c20:	pushf  
  408c21:	dec    ebp
  408c22:	xchg   ebp,eax
  408c23:	jp     0x408c9a
  408c25:	pop    eax
  408c26:	mov    bh,0xc4
  408c28:	stos   DWORD PTR es:[edi],eax
  408c29:	cmp    cl,BYTE PTR [esi+ebp*4-0x302f563f]
  408c30:	pushf  
  408c31:	pusha  
  408c32:	xor    al,0x0
  408c34:	jbe    0x408c86
  408c36:	std    
  408c37:	dec    edi
  408c38:	outs   dx,DWORD PTR ds:[esi]
  408c39:	dec    ebx
  408c3a:	into   
  408c3b:	shl    BYTE PTR [ecx],0x5c
  408c3e:	push   edi
  408c3f:	rol    esp,cl
  408c41:	push   0xffffffba
  408c43:	call   0x62b1:0xb3209135
  408c4a:	adc    DWORD PTR [ebx-0x39],0xa
  408c4e:	mov    ecx,0x7e3a1fed
  408c53:	ins    DWORD PTR es:[edi],dx
  408c54:	xchg   ebx,eax
  408c55:	ror    DWORD PTR [ecx+0x47],0x2b
  408c59:	sub    DWORD PTR [ebx],edx
  408c5b:	dec    esi
  408c5c:	mov    ah,0x22
  408c5e:	test   DWORD PTR [ecx],ebx
  408c60:	sub    BYTE PTR [esi],ch
  408c62:	outs   dx,BYTE PTR ds:[esi]
  408c63:	adc    BYTE PTR [ebx-0x5136688],cl
  408c69:	dec    ecx
  408c6a:	sub    eax,0xd524a5fe
  408c6f:	jne    0x408c95
  408c71:	mov    al,ds:0xb9256494
  408c76:	mov    bh,0xd0
  408c78:	leave  
  408c79:	mov    eax,ds:0xde0f45c8
  408c7e:	scas   eax,DWORD PTR es:[edi]
  408c7f:	dec    esi
  408c80:	js     0x408c23
  408c82:	push   edx
  408c83:	lahf   
  408c84:	pop    ebp
  408c85:	add    BYTE PTR [edx-0x39],bh
  408c88:	in     al,dx
  408c89:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408c8a:	sub    ch,BYTE PTR [ebx+0x62]
  408c8d:	test   al,0x74
  408c90:	mov    ch,0x14
  408c92:	jmp    0x9a94868a
  408c97:	push   edx
  408c98:	outs   dx,DWORD PTR ds:[esi]
  408c99:	mov    al,0xe7
  408c9b:	cmp    DWORD PTR [edx-0x1fe46072],ebp
  408ca1:	add    eax,0x475cf0ed
  408ca6:	retf   
  408ca7:	outs   dx,DWORD PTR ds:[esi]
  408ca8:	in     eax,0xc
  408caa:	icebp  
  408cab:	jae    0x408c66
  408cad:	(bad)  
  408cae:	ja     0x408c47
  408cb0:	pop    eax
  408cb1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408cb2:	xor    dh,BYTE PTR [edi]
  408cb4:	or     al,0x70
  408cb6:	sub    BYTE PTR [ecx],al
  408cb8:	push   ss
  408cb9:	mov    esi,DWORD PTR ds:0xdb45
  408cbe:	les    ebp,FWORD PTR [bp-0x7eaf]
  408cc3:	mov    dl,0x85
  408cc5:	xor    esp,DWORD PTR [eax+0x12]
  408cc8:	aad    0x33
  408cca:	outs   dx,BYTE PTR ds:[esi]
  408ccb:	add    BYTE PTR [ecx],bh
  408ccd:	loopne 0x408c6e
  408ccf:	jb     0x408cba
  408cd1:	cmp    eax,0xf119f567
  408cd6:	ror    BYTE PTR [ebx],0xa1
  408cd9:	sbb    edi,DWORD PTR [ebp+0x9656ae1]
  408cdf:	icebp  
  408ce0:	js     0x408cde
  408ce2:	mov    ds:0x5973aaaa,eax
  408ce7:	cmc    
  408ce8:	cmp    edx,edi
  408cea:	out    0xe4,eax
  408cec:	pop    edx
  408ced:	xchg   esp,eax
  408cee:	cwde   
  408cef:	cmp    DWORD PTR [eax],0xf91828d0
  408cf5:	mov    edx,0xc412c16b
  408cfa:	out    dx,eax
  408cfb:	dec    esi
  408cfc:	ret    0xd280
  408cff:	mov    BYTE PTR [ebx+0x65],cl
  408d02:	scas   al,BYTE PTR es:[edi]
  408d03:	or     DWORD PTR [ebp-0x2b],0xffffff86
  408d07:	mov    eax,0xbcc8104a
  408d0c:	retf   
  408d0d:	sbb    DWORD PTR [eax+0x3],esp
  408d10:	cmc    
  408d11:	hlt    
  408d12:	cmc    
  408d13:	push   cs
  408d14:	(bad)  
  408d15:	cld    
  408d16:	sbb    al,0x34
  408d18:	push   0xffffffce
  408d1a:	mov    ds:0xfe4edd94,al
  408d1f:	inc    esi
  408d20:	mov    dl,0xc
  408d22:	inc    ecx
  408d23:	sahf   
  408d24:	and    edx,DWORD PTR [edx]
  408d26:	fistp  DWORD PTR [eax+0xf7006af]
  408d2c:	dec    ebp
  408d2d:	and    ecx,DWORD PTR [ebp+0x7b]
  408d30:	shl    edx,cl
  408d32:	xchg   DWORD PTR cs:[esi-0x37e58d5],ebp
  408d39:	or     BYTE PTR [eax+0x42],bh
  408d3c:	repnz push esi
  408d3e:	leave  
  408d3f:	(bad)  
  408d40:	fcomp  QWORD PTR [ebp+0x78d76870]
  408d46:	into   
  408d47:	mov    ebp,0x72efe5e9
  408d4c:	sahf   
  408d4d:	or     ah,ah
  408d4f:	jle    0x408d43
  408d51:	and    al,0x73
  408d53:	icebp  
  408d54:	pop    ecx
  408d55:	pop    edi
  408d56:	pop    ds
  408d57:	adc    al,0x20
  408d59:	in     eax,0x1d
  408d5b:	aaa    
  408d5c:	out    0x13,eax
  408d5e:	je     0x408d33
  408d60:	sbb    BYTE PTR [edx],ch
  408d62:	push   DWORD PTR [edx+0x5fcd6cdf]
  408d68:	pop    es
  408d69:	sbb    BYTE PTR [edi-0x12],bh
  408d6c:	xchg   BYTE PTR ds:[esi+edi*4],dh
  408d70:	imul   edx,ecx,0xdda1491c
  408d76:	dec    edx
  408d77:	or     ah,BYTE PTR [edx+eiz*8-0x7b]
  408d7b:	mov    edx,0x9ed0ede0
  408d80:	fisub  WORD PTR [esi+0x7b]
  408d83:	sub    eax,0x72e254ac
  408d88:	mov    dl,0x5e
  408d8a:	cmp    al,0xb8
  408d8c:	adc    BYTE PTR [ebx+0x46],dh
  408d8f:	adc    BYTE PTR [ecx],dl
  408d91:	imul   esp,DWORD PTR [esp+ebx*4],0xffffffec
  408d95:	sti    
  408d96:	xor    edi,0xffffffdb
  408d99:	push   ss
  408d9a:	adc    ecx,ebx
  408d9c:	fistp  WORD PTR [ebx]
  408d9e:	sti    
  408d9f:	or     eax,DWORD PTR [edi-0x4c]
  408da2:	cmp    al,dh
  408da4:	sbb    eax,0x3fa058f1
  408da9:	mov    edi,0x713fc06f
  408dae:	enter  0x49e5,0x85
  408db2:	xchg   ebx,eax
  408db3:	cli    
  408db4:	mov    dh,0x11
  408db6:	nop
  408db7:	call   0x37897160
  408dbc:	aas    
  408dbd:	outs   dx,DWORD PTR ds:[esi]
  408dbe:	push   ebp
  408dbf:	jae    0x408d5c
  408dc1:	call   0x87b6:0xd4951c0a
  408dc8:	inc    ebx
  408dc9:	jmp    0x408d91
  408dcb:	pop    esp
  408dcc:	xchg   edx,eax
  408dcd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408dce:	and    DWORD PTR [ebx],0xae8fd9b0
  408dd4:	adc    al,0xb0
  408dd6:	mov    WORD PTR [ecx+edx*8],es
  408dd9:	pop    es
  408dda:	cwde   
  408ddb:	test   DWORD PTR [eax+0x65],esp
  408dde:	shl    ch,0xb2
  408de1:	leave  
  408de2:	push   cs
  408de3:	clc    
  408de4:	push   cs
  408de5:	dec    edi
  408de6:	mov    ch,BYTE PTR [edx+0x1f]
  408de9:	mov    DWORD PTR [edx-0x5f],eax
  408dec:	pusha  
  408ded:	or     al,0xd7
  408def:	pushf  
  408df0:	sahf   
  408df1:	mov    esp,0x7cfa16d9
  408df6:	test   DWORD PTR [edx-0x54],esp
  408df9:	or     al,0x11
  408dfb:	mov    eax,ds:0xff84ce26
  408e00:	enter  0x140,0x21
  408e04:	nop
  408e05:	push   ebx
  408e06:	pmullw mm4,QWORD PTR [edi]
  408e09:	sub    ch,BYTE PTR [eax+0xca22828]
  408e0f:	cmp    al,0x68
  408e11:	cli    
  408e12:	or     cl,BYTE PTR [eax*1-0x4c9bcfdc]
  408e19:	in     al,0x8d
  408e1b:	sbb    ebx,DWORD PTR [eax-0x65761cd9]
  408e21:	mov    edi,0x6c35f9fe
  408e26:	fcom   QWORD PTR [ecx+0x2e7577c8]
  408e2c:	je     0x408e92
  408e2e:	jg     0x408dd2
  408e30:	div    DWORD PTR [edx]
  408e32:	mov    al,ds:0xcd020b64
  408e37:	jl     0x408e0e
  408e39:	or     BYTE PTR [ebp-0x75464cf9],bh
  408e3f:	push   esp
  408e40:	and    dl,BYTE PTR [edi+0x31454e0e]
  408e46:	pop    esp
  408e47:	mov    esi,0x20e777dd
  408e4c:	mov    edi,0x8aa85ab6
  408e51:	dec    edx
  408e52:	or     ecx,DWORD PTR [ebx-0x5c82a99]
  408e58:	mov    ah,0x29
  408e5a:	add    DWORD PTR [eax+esi*2-0x3d],ebp
  408e5e:	outs   dx,BYTE PTR ds:[esi]
  408e5f:	stos   DWORD PTR es:[edi],eax
  408e60:	sbb    al,0x86
  408e62:	int3   
  408e63:	xchg   BYTE PTR [ebp+0x4d],bl
  408e66:	cmp    bh,0xa5
  408e69:	iret   
  408e6a:	adc    BYTE PTR [ebp-0x7c44f40],ch
  408e70:	scas   eax,DWORD PTR es:[edi]
  408e71:	icebp  
  408e72:	push   cs
  408e73:	push   cs
  408e74:	retf   
  408e75:	fcmovnu st,st(5)
  408e77:	std    
  408e78:	inc    esp
  408e79:	add    al,BYTE PTR [ebx]
  408e7b:	adc    BYTE PTR [ebx+0x5f8c3327],0x1c
  408e82:	xchg   esi,esi
  408e84:	loopne 0x408e61
  408e86:	lea    ecx,[edx]
  408e88:	inc    BYTE PTR [ebx+0x6657a698]
  408e8e:	imul   eax,DWORD PTR [edi+0x28fef8c4],0xffffffc4
  408e95:	mov    ch,0x75
  408e97:	fwait
  408e98:	mov    esp,0x9a02a5ee
  408e9d:	jp     0x408f1d
  408e9f:	lahf   
  408ea0:	mov    al,fs:0x64cf3e1c
  408ea6:	jl     0x408e6f
  408ea8:	lods   al,BYTE PTR ds:[esi]
  408ea9:	sbb    ah,ah
  408eab:	mov    ecx,0xe3b24dae
  408eb0:	es pop es
  408eb2:	mov    ch,0x13
  408eb4:	call   0xb255:0x43197c89
  408ebb:	xchg   esi,eax
  408ebc:	inc    eax
  408ebd:	pushf  
  408ebe:	(bad)  
  408ebf:	mov    esp,0x16a82a42
  408ec4:	jl     0x408e7c
  408ec6:	ins    DWORD PTR es:[edi],dx
  408ec7:	int3   
  408ec8:	jns    0x408f0d
  408eca:	cld    
  408ecb:	addr16 pushf 
  408ecd:	in     al,0x25
  408ecf:	fimul  WORD PTR [ebx+0x25c1882b]
  408ed5:	and    al,0xac
  408ed7:	lods   al,BYTE PTR ds:[esi]
  408ed8:	call   FWORD PTR [edx-0x13]
  408edb:	jle    0x408eb6
  408edd:	aaa    
  408ede:	cmp    eax,0x649dae72
  408ee3:	fwait
  408ee4:	dec    eax
  408ee5:	lods   al,BYTE PTR ds:[esi]
  408ee6:	mov    esi,0xd3979f25
  408eeb:	mov    eax,ds:0x60043f82
  408ef0:	jmp    0x408ee3
  408ef2:	in     eax,dx
  408ef3:	push   0x76
  408ef5:	and    dl,BYTE PTR [edi]
  408ef7:	sbb    ecx,edx
  408ef9:	in     eax,dx
  408efa:	aam    0xc5
  408efc:	mov    BYTE PTR [ebx],ah
  408efe:	adc    BYTE PTR [edx+0x55],al
  408f01:	or     DWORD PTR [edx-0x54394255],ebx
  408f07:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408f08:	jnp    0x408f34
  408f0a:	std    
  408f0b:	in     al,0x6c
  408f0d:	repz loop 0x408eec
  408f10:	jmp    0x408ef7
  408f12:	push   edx
  408f13:	mov    ebp,DWORD PTR [edi-0x7c]
  408f16:	neg    BYTE PTR [ecx-0x63]
  408f19:	je     0x408eac
  408f1b:	js     0x408f08
  408f1d:	mov    ebx,0xcec0e64b
  408f22:	mov    ecx,0x51b2d475
  408f27:	shl    DWORD PTR [esi+0x2c],0x61
  408f2b:	pusha  
  408f2c:	xor    DWORD PTR [ecx+eiz*8],eax
  408f2f:	mov    DWORD PTR [eax+ebp*1+0x64],edi
  408f33:	and    eax,0xd6a735f0
  408f38:	jo     0x408f5d
  408f3a:	ret    
  408f3b:	bound  esp,QWORD PTR [edx+eiz*2+0x75b1f79e]
  408f42:	or     BYTE PTR [ebx],ah
  408f44:	xor    al,0x29
  408f46:	xlat   BYTE PTR ds:[ebx]
  408f47:	mov    DWORD PTR [edi-0x45],esi
  408f4a:	retf   
  408f4b:	dec    edx
  408f4c:	repnz mov eax,0x4928bdc6
  408f52:	push   ecx
  408f53:	int    0x95
  408f55:	jns    0x408f34
  408f57:	lods   al,BYTE PTR ds:[esi]
  408f58:	fidiv  DWORD PTR [ecx]
  408f5a:	or     eax,0x3c96c1e2
  408f5f:	push   esi
  408f60:	std    
  408f61:	or     ebp,DWORD PTR [esi]
  408f63:	jp     0x408fd4
  408f65:	repnz imul ebp,DWORD PTR [edx],0xfb77859a
  408f6c:	into   
  408f6d:	es inc esp
  408f6f:	inc    ebp
  408f70:	out    0x71,al
  408f72:	jo     0x408f7a
  408f74:	pop    edi
  408f75:	jp     0x408f53
  408f77:	addr16 hlt 
  408f79:	fbld   TBYTE PTR [ecx-0x61]
  408f7c:	inc    eax
  408f7d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408f7e:	or     eax,0x1a39ceff
  408f83:	pop    esp
  408f84:	loope  0x408f27
  408f86:	push   cs
  408f87:	pop    ds
  408f88:	pop    edx
  408f89:	aam    0x7c
  408f8b:	iret   
  408f8c:	scas   al,BYTE PTR es:[edi]
  408f8d:	scas   al,BYTE PTR es:[edi]
  408f8e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408f8f:	mov    eax,0xcfb48123
  408f94:	retf   0x780b
  408f97:	xor    eax,0xaa178bf7
  408f9c:	jg     0x408fba
  408f9e:	dec    edi
  408f9f:	mov    esp,DWORD PTR [ebx]
  408fa1:	xchg   ecx,eax
  408fa2:	(bad)
  408fa5:	cld    
  408fa6:	xlat   BYTE PTR ds:[ebx]
  408fa7:	xchg   esi,eax
  408fa8:	or     BYTE PTR [eax+0x762ccbaf],cl
  408fae:	jp     0x408f59
  408fb0:	(bad)  
  408fb1:	call   0xbe0c1c49
  408fb6:	imul   esp,DWORD PTR [ecx-0x6af01e5c],0xffffffb8
  408fbd:	mov    ecx,ebx
  408fbf:	jl     0x408f9a
  408fc1:	and    DWORD PTR [esi+0xea5ec96],0x47310e53
  408fcb:	outs   dx,BYTE PTR ds:[esi]
  408fcc:	xor    BYTE PTR [ebp-0x3e224978],ah
  408fd2:	sub    dl,BYTE PTR [edx+0x71fbfacf]
  408fd8:	mov    dl,0x2c
  408fda:	dec    edx
  408fdb:	(bad)
  408fde:	(bad)  
  408fdf:	sub    BYTE PTR [eax-0x3cb57e1b],ah
  408fe5:	lods   eax,DWORD PTR ds:[esi]
  408fe6:	cmp    cl,bl
  408fe8:	aaa    
  408fe9:	in     eax,0x3
  408feb:	or     eax,DWORD PTR [eax]
  408fed:	xchg   BYTE PTR [ebp-0x57],bh
  408ff0:	adc    al,BYTE PTR [edx-0x3a]
  408ff3:	dec    cl
  408ff5:	or     eax,0x9a385e54
  408ffa:	rol    BYTE PTR [ebp-0x74],cl
  408ffd:	fild   WORD PTR [ebx]
  408fff:	jnp    0x409062
  409001:	jmp    0xd0d7:0xf7ceac6
  409008:	adc    eax,0x9f743678
  40900d:	jmp    0x871a279a
  409012:	inc    ecx
  409013:	(bad)  
  409015:	shr    DWORD PTR [esi-0x66],cl
  409018:	mov    al,0xa8
  40901a:	(bad)  
  40901b:	daa    
  40901c:	or     BYTE PTR [ebp+0x78226f24],0xef
  409023:	mov    ds:0xc504dfd,al
  409028:	or     al,0x90
  40902a:	mov    DWORD PTR [ecx-0x6de97abb],esi
  409030:	enter  0x79d4,0x5
  409034:	fdiv   DWORD PTR [ebp-0x1a]
  409037:	in     eax,0x47
  409039:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40903a:	mov    ch,0xd0
  40903c:	xchg   esp,eax
  40903d:	cmp    DWORD PTR [ebx+0x1100cc7c],ecx
  409043:	cmp    ebp,DWORD PTR [ecx+0x14]
  409046:	je     0x40906d
  409048:	add    eax,0x11ce64c4
  40904d:	adc    eax,0xc636411f
  409052:	sbb    esi,DWORD PTR [edi+0x71e13f38]
  409058:	mov    ebx,0xdd56dc99
  40905d:	push   cs
  40905e:	lock int 0x33
  409061:	(bad)  
  409062:	xchg   ebp,eax
  409063:	jmp    0x409086
  409065:	daa    
  409066:	cmp    BYTE PTR [edx+edx*1+0x8],dl
  40906a:	mov    DWORD PTR [edi-0x2b],eax
  40906d:	lock shl DWORD PTR [edi*2+0x7ec3baf8],cl
  409075:	jp     0x409064
  409077:	ror    BYTE PTR [edi],1
  409079:	xchg   ebx,eax
  40907a:	ucomiss xmm6,DWORD PTR [eax+0x48d226a7]
  409081:	jae    0x4090ac
  409083:	fistp  DWORD PTR [ecx]
  409085:	push   ds
  409086:	sub    ebp,0xef2fd722
  40908c:	icebp  
  40908d:	sub    DWORD PTR [ebx-0x1809be03],ebp
  409093:	mov    ebp,0xfdddfa92
  409098:	and    edx,DWORD PTR [eax]
  40909a:	dec    esp
  40909b:	or     dh,ah
  40909d:	enter  0x6573,0x8c
  4090a1:	pop    esp
  4090a2:	and    eax,0x63b5c351
  4090a7:	pushf  
  4090a8:	xchg   esp,eax
  4090a9:	or     bl,bl
  4090ab:	(bad)  
  4090ac:	pushf  
  4090ad:	mov    ebp,0xf11302ca
  4090b2:	add    al,0x62
  4090b4:	jp     0x409092
  4090b6:	shl    BYTE PTR [ebx],1
  4090b8:	mov    ah,0xdb
  4090ba:	mov    ebp,0xb4b7a24f
  4090bf:	test   eax,0xf38537e5
  4090c4:	pop    esp
  4090c5:	mov    dh,0x97
  4090c7:	test   DWORD PTR [esi],esi
  4090c9:	mov    edi,0x7d7c420c
  4090ce:	jmp    0xb847:0x88456ee3
  4090d5:	fidivr DWORD PTR [edi+edx*4]
  4090d8:	clc    
  4090d9:	in     eax,dx
  4090da:	sub    ebx,0x4646c816
  4090e0:	add    al,0xb3
  4090e2:	lahf   
  4090e3:	or     al,0xbb
  4090e5:	popf   
  4090e6:	or     dh,ah
  4090e8:	jb     0x4090f5
  4090ea:	out    0xc4,al
  4090ec:	inc    esp
  4090ed:	push   ebp
  4090ee:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4090ef:	push   edx
  4090f0:	(bad)  
  4090f1:	jecxz  0x409094
  4090f3:	mov    ebx,0x9545bd28
  4090f8:	mov    eax,0xec8ab98e
  4090fd:	and    al,0x8d
  4090ff:	fs aam 0xa3
  409102:	lods   eax,DWORD PTR ds:[esi]
  409103:	(bad)  
  409104:	jb     0x40909e
  409106:	adc    ch,ch
  409108:	adc    BYTE PTR [edx-0x68],0x29
  40910c:	xor    dl,BYTE PTR [edi+0x3c]
  40910f:	(bad)  
  409110:	gs pushf 
  409112:	fdiv   QWORD PTR ds:0x89f4bff8
  409118:	add    dh,dl
  40911a:	jns    0x4090c2
  40911c:	ins    DWORD PTR es:[edi],dx
  40911d:	jl     0x4090c0
  40911f:	inc    ebp
  409120:	add    BYTE PTR [esi+0x3e4d721d],0x41
  409127:	pushf  
  409128:	dec    edi
  409129:	jg     0x40916d
  40912b:	ficom  DWORD PTR [ebp+0x6871dba8]
  409131:	cmp    eax,0x7d2b2d87
  409136:	mov    esp,0xf58ff5e
  40913b:	mov    dl,0xaf
  40913d:	fist   WORD PTR [edi+edx*8]
  409140:	mov    BYTE PTR [ebp+eiz*8-0x36],dh
  409144:	cmp    DWORD PTR [eax],ecx
  409146:	in     al,0x4a
  409148:	call   0x3d19:0xfa2816de
  40914f:	pushf  
  409150:	test   al,0x80
  409152:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409153:	out    0xfc,eax
  409155:	xchg   DWORD PTR [edi+ecx*8+0x332b0ce4],esp
  40915c:	xchg   edi,eax
  40915d:	sbb    DWORD PTR [edx],ecx
  40915f:	aad    0x45
  409161:	aam    0x6e
  409163:	inc    edi
  409164:	pop    ebx
  409165:	push   esp
  409166:	push   0xffffffa5
  409168:	cmc    
  409169:	and    al,0x6f
  40916b:	pop    edi
  40916c:	mov    al,ds:0x669418c
  409171:	fcomp  DWORD PTR [ebx]
  409173:	fmul   st(2),st
  409175:	sbb    BYTE PTR [edi+0x0],ch
  409178:	or     ebx,DWORD PTR [edi+0x26eead85]
  40917e:	jno    0x4091e6
  409180:	addr16 sbb al,0x80
  409183:	pop    edi
  409184:	and    al,0xd
  409186:	dec    ebp
  409187:	or     BYTE PTR [edx+ebp*2],bl
  40918a:	adc    BYTE PTR [edx+0x5f],al
  40918d:	outs   dx,DWORD PTR ds:[esi]
  40918e:	mov    esp,0x3492cb57
  409193:	scas   al,BYTE PTR es:[edi]
  409194:	dec    edi
  409195:	aam    0x21
  409197:	push   edx
  409198:	ins    BYTE PTR es:[edi],dx
  409199:	nop
  40919a:	push   ecx
  40919b:	lahf   
  40919c:	dec    ebx
  40919d:	sbb    al,0x9a
  40919f:	outs   dx,DWORD PTR ds:[esi]
  4091a0:	xchg   esp,eax
  4091a1:	sub    esp,DWORD PTR [esi+0x48b4b2ac]
  4091a7:	ja     0x40921d
  4091a9:	mov    edx,0xfa24eb17
  4091ae:	in     al,dx
  4091af:	sub    dh,BYTE PTR [edi+0x6c1f4a72]
  4091b5:	shl    bl,0x5a
  4091b8:	push   cs
  4091b9:	aas    
  4091ba:	jecxz  0x4091b4
  4091bc:	ret    0xf681
  4091bf:	retf   0x765c
  4091c2:	mov    ch,0xf
  4091c4:	push   ebp
  4091c5:	in     eax,dx
  4091c6:	(bad)  
  4091c7:	adc    eax,0x62b3c845
  4091cc:	icebp  
  4091cd:	sbb    bh,BYTE PTR [edx]
  4091cf:	xchg   BYTE PTR [eax-0x4c],dh
  4091d2:	mov    eax,0xe8c1acdb
  4091d7:	fdivr  st(0),st
  4091d9:	nop
  4091da:	mov    eax,ds:0x107fbee3
  4091df:	das    
  4091e0:	fidiv  DWORD PTR [edx+0x10]
  4091e3:	push   cs
  4091e4:	adc    esp,esp
  4091e6:	std    
  4091e7:	mov    al,0x8
  4091e9:	lahf   
  4091ea:	pop    ds
  4091eb:	mov    esi,0x92e3e686
  4091f0:	(bad)  
  4091f1:	fwait
  4091f2:	sub    al,0x43
  4091f4:	inc    DWORD PTR [eax+0x5243f9ac]
  4091fa:	xor    eax,0xffffffb3
  4091fd:	inc    esp
  4091fe:	xor    DWORD PTR [ecx-0x33],esp
  409201:	or     edx,ecx
  409203:	jnp    0x40924f
  409205:	jecxz  0x409242
  409207:	xor    eax,0xb761b966
  40920c:	inc    ebp
  40920d:	std    
  40920e:	inc    ebx
  40920f:	lods   al,BYTE PTR ds:[esi]
  409210:	jno    0x40925c
  409212:	xchg   ebp,eax
  409213:	jo     0x409232
  409215:	call   0x1210ef95
  40921a:	repnz cmp al,0xbf
  40921d:	adc    DWORD PTR [ecx*4+0xd03ef88],edx
  409224:	cmp    dl,dh
  409226:	shr    DWORD PTR [edx-0x7c568060],0xf7
  40922d:	sub    BYTE PTR [ecx+0x4a],bh
  409230:	inc    BYTE PTR [ebx]
  409232:	xchg   DWORD PTR [edi-0x5],edx
  409235:	stc    
  409236:	ja     0x409242
  409238:	ins    BYTE PTR es:[edi],dx
  409239:	sbb    BYTE PTR [edi-0x238bcb],0x61
  409240:	sub    al,dh
  409242:	cmp    eax,eax
  409244:	test   DWORD PTR [edx+ecx*1-0x8315109],esp
  40924b:	pop    ecx
  40924c:	mov    ebp,DWORD PTR [ecx]
  40924e:	loop   0x409274
  409250:	mov    ds:0x5c1b1f,al
  409255:	nop
  409256:	pushf  
  409257:	sahf   
  409258:	imul   esp,DWORD PTR [ecx],0xc3974efc
  40925e:	fcomp  DWORD PTR [eax]
  409260:	mov    gs:0x204ef8e0,eax
  409266:	(bad)  
  409267:	mov    esp,0xe1ef062b
  40926c:	pcmpeqw mm7,QWORD PTR [edi-0x6b]
  409270:	add    esi,DWORD PTR [ecx]
  409272:	jno    0x4092b4
  409274:	fwait
  409275:	xor    al,0xab
  409277:	popa   
  409278:	shl    BYTE PTR [edx],1
  40927a:	mov    eax,0xf8ecc010
  40927f:	scas   eax,DWORD PTR es:[edi]
  409280:	push   0x2e
  409282:	fisub  DWORD PTR [esi]
  409284:	xor    eax,0xc7e1e006
  409289:	inc    ecx
  40928a:	sbb    edx,DWORD PTR [ebx]
  40928c:	and    DWORD PTR es:[ebx],ebp
  40928f:	xlat   BYTE PTR ds:[ebx]
  409290:	sbb    BYTE PTR [ecx+0xde4d532],dh
  409296:	into   
  409297:	push   0xf25ff0ca
  40929c:	rcl    bh,0x74
  40929f:	fidiv  WORD PTR [ecx]
  4092a1:	mov    edi,DWORD PTR [eax-0x643a60a3]
  4092a7:	test   BYTE PTR [ebx+0x4808fdaf],dh
  4092ad:	mov    al,ds:0x5f88597e
  4092b2:	mov    dl,0x48
  4092b4:	xchg   esp,eax
  4092b5:	(bad)  
  4092b6:	leave  
  4092b7:	xlat   BYTE PTR ds:[ebx]
  4092b9:	sbb    BYTE PTR [edi-0x31],al
  4092bc:	addr16 iret 
  4092be:	xchg   esp,eax
  4092bf:	jae    0x4092e2
  4092c1:	mov    ah,BYTE PTR [edx-0x6c9ef2f1]
  4092c7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4092c8:	cwde   
  4092c9:	and    DWORD PTR [ebp+0x4e],esp
  4092cc:	loope  0x4092db
  4092ce:	dec    ebp
  4092cf:	idiv   DWORD PTR [ecx+0x597c477]
  4092d5:	cdq    
  4092d6:	add    eax,0x441ef229
  4092db:	(bad)  
  4092dc:	fst    st(4)
  4092de:	hlt    
  4092df:	loop   0x4092f9
  4092e1:	pop    es
  4092e2:	mov    gs,edx
  4092e4:	aad    0x7f
  4092e6:	pop    edx
  4092e7:	sub    BYTE PTR [ebx],dl
  4092e9:	stos   BYTE PTR es:[edi],al
  4092ea:	xchg   edx,eax
  4092eb:	cwde   
  4092ec:	lods   al,BYTE PTR ds:[esi]
  4092ed:	push   cs
  4092ee:	mov    eax,cs:0xfc2b050b
  4092f4:	and    BYTE PTR [esi-0x39],cl
  4092f7:	pop    eax
  4092f8:	fs fwait
  4092fa:	test   eax,0xf9884449
  4092ff:	pop    esi
  409300:	out    0x84,al
  409302:	xchg   edx,eax
  409303:	adc    ecx,DWORD PTR [eax]
  409305:	imul   esp,DWORD PTR [ebx+0x5dd58d27],0xffffffb7
  40930c:	push   edx
  40930d:	or     eax,0x6f8c97fc
  409312:	retf   
  409313:	stc    
  409314:	mov    ebx,0xf482b6d7
  409319:	jnp    0x409345
  40931b:	shr    esi,1
  40931d:	pop    esi
  40931e:	mov    eax,ds:0x239571b5
  409323:	and    eax,0xdaf65e37
  409328:	mov    esi,DWORD PTR [ebp+0x531010ec]
  40932e:	mov    ds,WORD PTR [esi+0x12]
  409331:	in     al,0x6b
  409333:	sti    
  409334:	aad    0xd4
  409336:	inc    ebx
  409337:	pop    edi
  409338:	xchg   ebp,eax
  409339:	push   edi
  40933a:	sub    DWORD PTR [ebp+0x4e370395],0x4c95a555
  409344:	mov    esp,0x7552d05f
  409349:	adc    esi,eax
  40934b:	nop
  40934c:	or     BYTE PTR [eax+ebp*2+0xca0b286],bl
  409353:	int3   
  409354:	cwde   
  409355:	ss sbb edi,esp
  409358:	arpl   WORD PTR [edx+0x26],bp
  40935b:	int    0x44
  40935d:	retf   
  40935e:	std    
  40935f:	sub    bh,0x25
  409362:	mov    ds:0x49b443e7,eax
  409367:	imul   ecx,DWORD PTR [edx-0x73],0xb3cc0cce
  40936e:	mov    es,WORD PTR [esi+esi*8-0x3a600e39]
  409375:	mov    ebx,0x9628c60a
  40937a:	(bad)
  40937d:	div    BYTE PTR [eax+0x5]
  409380:	stos   DWORD PTR es:[edi],eax
  409381:	push   edx
  409382:	xor    DWORD PTR [eax-0x9],ebp
  409385:	jnp    0x409354
  409387:	xchg   esp,eax
  409388:	fld    QWORD PTR es:[esi-0x6f]
  40938c:	inc    ecx
  40938d:	cmp    al,0xc4
  40938f:	mov    edx,0xd4896ac9
  409394:	out    dx,al
  409395:	jbe    0x4093ea
  409397:	retf   
  409398:	pop    esp
  409399:	push   ds
  40939a:	pop    ss
  40939b:	js     0x409372
  40939d:	loopne 0x409348
  40939f:	fcomp  DWORD PTR [edi-0x2452214a]
  4093a5:	dec    ebp
  4093a6:	push   esp
  4093a7:	xor    bl,ah
  4093a9:	push   esp
  4093aa:	xchg   edx,eax
  4093ab:	daa    
  4093ac:	call   0x5cfe:0x1da4bb0f
  4093b3:	sbb    bl,BYTE PTR [edx]
  4093b5:	cmp    eax,0x9a21d4f9
  4093ba:	ret    0x6527
  4093bd:	inc    ebx
  4093be:	rcl    edi,cl
  4093c0:	dec    edx
  4093c1:	inc    eax
  4093c2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4093c3:	pushf  
  4093c4:	test   eax,0xe4e6bbe3
  4093c9:	out    dx,eax
  4093ca:	in     eax,dx
  4093cb:	jnp    0x4093dd
  4093cd:	sbb    ah,dh
  4093cf:	inc    esp
  4093d0:	push   ds
  4093d1:	mov    WORD PTR [ebp-0x19790465],cs
  4093d7:	stos   DWORD PTR es:[edi],eax
  4093d8:	jo     0x409449
  4093da:	xchg   dh,ch
  4093dc:	pop    esp
  4093dd:	pop    ss
  4093de:	jge    0x40941a
  4093e0:	jns    0x4093cf
  4093e2:	lock push cs
  4093e4:	and    al,0x9d
  4093e6:	aaa    
  4093e7:	cmp    al,0x9a
  4093e9:	pop    esi
  4093ea:	push   0x6390188e
  4093ef:	ds cld 
  4093f1:	into   
  4093f2:	mov    eax,DWORD PTR [eax-0x1b7d8394]
  4093f8:	jle    0x4093d9
  4093fa:	or     BYTE PTR [esp+eiz*8+0x79],0xe5
  4093ff:	out    dx,al
  409400:	in     eax,dx
  409401:	popf   
  409402:	ret    0xe704
  409405:	pop    ds
  409406:	push   ebp
  409407:	inc    edx
  409408:	sbb    DWORD PTR [ecx-0x4e41cba4],0x530f4b3
  409412:	dec    edx
  409413:	out    0x12,eax
  409415:	rol    ebp,1
  409417:	inc    eax
  409418:	and    al,0x3
  40941a:	sub    al,0x9e
  40941c:	sahf   
  40941d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40941e:	add    DWORD PTR [edi-0x4811b3b3],ecx
  409424:	in     eax,0xad
  409426:	jle    0x4093f9
  409428:	bnd jg 0x409491
  40942b:	xlat   BYTE PTR ds:[ebx]
  40942c:	scas   eax,DWORD PTR es:[edi]
  40942d:	repnz dec ecx
  40942f:	and    eax,0xaa3972e1
  409434:	repz leave 
  409436:	sbb    bh,BYTE PTR [edi+0x624e0fdb]
  40943c:	dec    eax
  40943d:	pop    ebx
  40943e:	gs or  al,0xbf
  409441:	shr    BYTE PTR [edi+0x4ba1a9dd],0xaf
  409448:	inc    edi
  409449:	adc    DWORD PTR [ebx+ebp*2-0x6837ddb9],ebp
  409450:	inc    esi
  409451:	mov    gs,WORD PTR [eax+0x657ee5ef]
  409457:	add    eax,0x1ae2f2f5
  40945c:	mov    edi,0xee72ff9b
  409461:	clc    
  409462:	and    DWORD PTR [ecx],0x66679705
  409468:	pop    esp
  409469:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40946a:	in     al,dx
  40946b:	xor    DWORD PTR [edx+ebx*2+0x2c],edi
  40946f:	inc    edx
  409470:	add    BYTE PTR [eax],ch
  409472:	mov    eax,0xa3879484
  409477:	sub    dl,BYTE PTR [esi]
  409479:	in     al,0xd9
  40947b:	pop    eax
  40947c:	mov    edi,0xe5b9d52
  409481:	call   0xc3ed:0x895f13a8
  409488:	push   0x115b07a9
  40948d:	(bad)  
  40948e:	popf   
  40948f:	xor    ch,bl
  409491:	mov    al,ah
  409493:	js     0x4094bf
  409495:	retf   
  409496:	cli    
  409497:	mov    esi,0x282e40b8
  40949c:	popf   
  40949d:	mov    fs,WORD PTR [edi]
  40949f:	repnz imul edi,DWORD PTR [ebx-0x4b],0xffffffe4
  4094a4:	xor    edx,edx
  4094a6:	lods   al,BYTE PTR ds:[esi]
  4094a7:	das    
  4094a8:	push   0xaf1dfc29
  4094ad:	push   esp
  4094ae:	push   cs
  4094af:	xchg   edx,eax
  4094b0:	sbb    al,0x7d
  4094b2:	test   BYTE PTR [edi+ebx*2+0x7bacdfb4],0x99
  4094ba:	add    edx,DWORD PTR [eax+0x7c]
  4094bd:	lds    eax,FWORD PTR [ecx]
  4094bf:	outs   dx,BYTE PTR ds:[esi]
  4094c0:	sub    DWORD PTR [edx-0x64],0x7
  4094c4:	ins    DWORD PTR es:[edi],dx
  4094c5:	inc    ecx
  4094c6:	jle    0x409539
  4094c8:	aas    
  4094c9:	(bad)  
  4094ca:	jg     0x4094db
  4094cc:	and    al,0xaf
  4094ce:	aas    
  4094cf:	out    dx,eax
  4094d0:	or     eax,0xcaa359ad
  4094d6:	pop    ecx
  4094d7:	mov    dh,0x34
  4094d9:	push   ebx
  4094da:	xchg   DWORD PTR [edi],ebp
  4094dc:	cld    
  4094dd:	imul   ebp,DWORD PTR [eax-0x721bfd5d],0xe52f2ff6
  4094e7:	mov    ebp,0x91d3d2bb
  4094ec:	sub    al,al
  4094ee:	stc    
  4094ef:	neg    BYTE PTR [ebp-0x3fbc5e3c]
  4094f5:	cmp    eax,0x6b31089a
  4094fa:	pop    esi
  4094fb:	daa    
  4094fc:	(bad)  
  4094fe:	cmp    al,0xef
  409500:	cmp    DWORD PTR [esi],ebx
  409502:	int    0x6b
  409504:	pop    esp
  409505:	rcl    DWORD PTR [ebx],1
  409507:	mov    dh,0xbf
  409509:	push   esi
  40950a:	pop    ebx
  40950b:	mov    BYTE PTR [ecx-0x76],dl
  40950e:	fistp  WORD PTR [ecx+0x3e35eb7f]
  409514:	dec    edi
  409515:	out    dx,al
  409516:	pop    esi
  409517:	mov    ecx,ebx
  409519:	cmp    DWORD PTR [esi+0x74e4e29f],0xfe2acf06
  409523:	jmp    0x3031:0x375842e8
  40952a:	xchg   ebp,eax
  40952b:	adc    eax,0xca64b4e
  409530:	test   al,0xb9
  409532:	pop    edx
  409533:	(bad)  
  409534:	je     0x4094e7
  409536:	inc    esi
  409537:	jl     0x4095b6
  409539:	sub    BYTE PTR [si],bl
  40953c:	arpl   WORD PTR [esi+ecx*2+0x21],cx
  409540:	mov    al,ds:0x96a2ff2b
  409545:	out    0x8d,al
  409547:	mov    cl,0xe3
  409549:	mov    esp,0x703ae595
  40954e:	not    DWORD PTR [esi-0x42]
  409551:	mov    ebx,0x39137024
  409556:	sbb    DWORD PTR [ebx],ecx
  409558:	add    bh,BYTE PTR [eax+0x78]
  40955b:	fs sub eax,0x69e82434
  409561:	mov    ch,0x49
  409563:	ins    BYTE PTR es:[edi],dx
  409564:	stc    
  409565:	xchg   ebx,eax
  409566:	and    dh,bl
  409568:	pop    esp
  409569:	xor    BYTE PTR [edi+esi*2],ah
  40956c:	mov    edx,DWORD PTR [esp+ecx*8+0x18]
  409570:	inc    esi
  409571:	add    eax,DWORD PTR [esi-0x241351c2]
  409577:	ret    0x9853
  40957a:	jg     0x409514
  40957c:	xchg   ebp,eax
  40957d:	pop    es
  40957e:	jnp    0x4095d4
  409580:	cmp    BYTE PTR [eax+eiz*1-0x66],ch
  409584:	add    edi,DWORD PTR [esi+0x40]
  409587:	jmp    0xd7fa83de
  40958c:	fstp   QWORD PTR [ebx-0x9e3ee96]
  409592:	mov    DWORD PTR ds:0x495e0175,ebp
  409598:	(bad)  [esi-0x63]
  40959b:	mov    DWORD PTR ds:0x103ae6fb,edi
  4095a1:	dec    edi
  4095a2:	sahf   
  4095a3:	inc    esp
  4095a4:	pop    ebp
  4095a5:	jne    0x40957b
  4095a7:	jge    0x409558
  4095a9:	loopne 0x4095b6
  4095ab:	std    
  4095ac:	sub    eax,0x4c908ffb
  4095b2:	popa   
  4095b3:	std    
  4095b4:	cwde   
  4095b5:	mov    ebx,0xa9d5444c
  4095ba:	aam    0x27
  4095bc:	es ss mov dl,0xa3
  4095c0:	jmp    0x3324270e
  4095c5:	pop    ds
  4095c6:	push   ebx
  4095c7:	adc    esi,edx
  4095c9:	pop    esp
  4095ca:	add    edi,DWORD PTR [ebx-0x6c]
  4095cd:	inc    ebx
  4095ce:	mov    ah,0x91
  4095d0:	les    eax,FWORD PTR [ebx-0x4dbfca95]
  4095d6:	leave  
  4095d7:	repnz aam 0x76
  4095da:	ret    
  4095db:	enter  0xdc22,0x20
  4095df:	rol    BYTE PTR [esi],1
  4095e1:	or     ecx,ecx
  4095e3:	aam    0x46
  4095e5:	icebp  
  4095e6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4095e7:	cdq    
  4095e8:	aam    0x29
  4095ea:	cmp    BYTE PTR [ebp+0x7d],bl
  4095ed:	popa   
  4095ee:	lahf   
  4095ef:	jle    0x4095ef
  4095f1:	jns    0x409671
  4095f3:	mov    esp,esp
  4095f5:	ja     0x40964c
  4095f7:	push   edi
  4095f8:	and    eax,0xfe372dc5
  4095fd:	mov    fs,WORD PTR [edi+0x4b5aaec]
  409603:	jl     0x4095cc
  409605:	int3   
  409606:	aaa    
  409607:	push   ss
  409608:	cmp    ebx,DWORD PTR [edx-0x7951fcca]
  40960e:	pusha  
  40960f:	pop    ecx
  409610:	icebp  
  409611:	xlat   BYTE PTR ds:[ebx]
  409612:	mov    dl,0xe6
  409614:	cmp    al,0xf4
  409616:	sahf   
  409617:	mov    al,0x70
  409619:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40961a:	sbb    eax,0x63c052a
  40961f:	pop    es
  409620:	pusha  
  409621:	mov    ch,0x26
  409623:	pop    esp
  409624:	jmp    0x1ba5:0x3602345a
  40962b:	mov    ds:0x5966ba7a,eax
  409630:	mov    DWORD PTR [esi-0x7b],edi
  409633:	xor    ah,dh
  409635:	cmp    al,0x16
  409637:	cmp    bh,ch
  409639:	inc    ebx
  40963a:	int    0x7b
  40963c:	push   esi
  40963d:	pop    esi
  40963e:	sti    
  40963f:	sbb    DWORD PTR [esi+0x56],0x5c108fc7
  409646:	jg     0x409626
  409648:	mov    dh,0xe1
  40964a:	rol    BYTE PTR [ecx],0x7a
  40964d:	pop    esp
  40964e:	xor    ch,BYTE PTR [esi+0x60b9112d]
  409654:	cmp    al,0x69
  409656:	je     0x409663
  409658:	repnz aas 
  40965a:	push   ebx
  40965b:	test   eax,0xbf0ecba5
  409660:	jp     0x409689
  409662:	jne    0x409663
  409664:	inc    edi
  409665:	std    
  409666:	and    al,0xda
  409668:	pop    ecx
  409669:	retf   
  40966a:	cmc    
  40966b:	dec    esp
  40966c:	mov    esi,0x17adfb9f
  409671:	adc    al,0xb7
  409673:	jae    0x4096db
  409675:	xchg   ebp,eax
  409676:	pop    eax
  409677:	xor    BYTE PTR [ebp+0x61],ah
  40967a:	lods   al,BYTE PTR gs:[esi]
  40967c:	add    DWORD PTR ds:[ecx+0x7a],ebx
  409680:	es in  eax,0xfa
  409683:	loope  0x4096e2
  409685:	add    al,0xf7
  409687:	bnd ret 0x5d6b
  40968b:	sahf   
  40968c:	add    edi,DWORD PTR [edx+0x7283a574]
  409692:	pushf  
  409693:	daa    
  409694:	inc    esi
  409695:	xor    eax,0xf18719e9
  40969a:	(bad)  
  40969b:	out    dx,eax
  40969c:	xchg   edx,eax
  40969d:	(bad)  
  40969e:	rcl    edi,0xbc
  4096a1:	inc    eax
  4096a2:	rol    BYTE PTR [ebp-0x1b],cl
  4096a5:	data16 jbe 0x409656
  4096a8:	and    BYTE PTR [eax+0xd2ab532],ah
  4096ae:	adc    eax,0x2059a4ef
  4096b3:	xchg   edx,eax
  4096b4:	xchg   edi,eax
  4096b5:	add    ch,BYTE PTR [edx+0x53]
  4096b8:	jo     0x4096b3
  4096ba:	fistp  QWORD PTR [edx-0x55570c64]
  4096c0:	lods   al,BYTE PTR ds:[esi]
  4096c1:	mov    ch,0xc4
  4096c3:	mov    edx,0x73341a21
  4096c8:	mov    ch,BYTE PTR [esi+0x51]
  4096cb:	jmp    FWORD PTR [ebp-0x37c293f9]
  4096d1:	pop    esp
  4096d2:	aad    0xaf
  4096d4:	ret    0xc172
  4096d7:	adc    eax,0xc60f2ba5
  4096dc:	lock outs dx,DWORD PTR ds:[esi]
  4096de:	rcr    BYTE PTR [edx],cl
  4096e0:	jne    0x4096fe
  4096e2:	dec    esi
  4096e3:	add    ebp,DWORD PTR [esi-0x33fd951f]
  4096e9:	je     0x409729
  4096eb:	mov    ds,ebp
  4096ed:	in     al,dx
  4096ee:	dec    edi
  4096ef:	jno    0x40969a
  4096f1:	fs add eax,0xd45022e5
  4096f7:	fcmovbe st,st(3)
  4096f9:	lods   eax,DWORD PTR ds:[esi]
  4096fa:	fld    DWORD PTR [esi]
  4096fc:	arpl   WORD PTR ds:0x731c22bb,dx
  409702:	sub    al,0xfd
  409704:	ror    BYTE PTR cs:[ebp-0x4d5b3d9f],cl
  40970b:	dec    esp
  40970c:	jnp    0x409709
  40970e:	cmp    al,0xfb
  409710:	xor    edx,esi
  409712:	addr16 push ebx
  409714:	cs dec edi
  409716:	scas   eax,DWORD PTR es:[edi]
  409717:	mov    edx,0x67b6a6a2
  40971c:	sub    BYTE PTR [ebx-0x6c9bdec5],bl
  409722:	dec    ecx
  409723:	inc    esp
  409724:	cmc    
  409725:	mov    edi,ebp
  409727:	jmp    0x409754
  409729:	dec    edx
  40972a:	sbb    BYTE PTR [ebx-0x53],al
  40972d:	pop    es
  40972e:	repz and al,BYTE PTR [ebx-0x25]
  409732:	sbb    esp,ebp
  409734:	xor    ecx,edi
  409736:	push   ss
  409737:	clc    
  409738:	dec    ebp
  409739:	rcl    DWORD PTR [esi],0x29
  40973c:	ret    
  40973d:	ret    0xbe03
  409740:	outs   dx,BYTE PTR ds:[esi]
  409741:	cli    
  409742:	sbb    bl,BYTE PTR [eax]
  409744:	fild   QWORD PTR [edx]
  409746:	in     al,dx
  409747:	and    DWORD PTR [eax],ebx
  409749:	and    ebp,eax
  40974b:	and    al,0x78
  40974d:	xchg   edx,eax
  40974e:	xchg   edi,eax
  40974f:	dec    ecx
  409750:	mov    ebp,0x19459709
  409755:	push   eax
  409756:	in     al,dx
  409757:	stc    
  409758:	and    eax,DWORD PTR [edi]
  40975a:	pop    esp
  40975b:	pop    ds
  40975c:	fs jle 0x4096ea
  40975f:	push   esi
  409760:	je     0x409740
  409762:	xor    al,0xc2
  409764:	inc    esp
  409765:	sub    ecx,DWORD PTR [esi]
  409767:	and    eax,0x9b2e4700
  40976c:	ja     0x4097ca
  40976e:	call   0x3cb:0x7f454911
  409775:	adc    eax,0xadbe82f6
  40977a:	cmc    
  40977b:	test   DWORD PTR [esi-0x59],ebp
  40977e:	sti    
  40977f:	les    ecx,FWORD PTR [edx+0x55711437]
  409785:	push   0x9f77fb04
  40978a:	ret    
  40978b:	cli    
  40978c:	icebp  
  40978d:	inc    esi
  40978e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40978f:	rcr    BYTE PTR [ecx+0xd8ac1],0x14
  409796:	(bad)
  409799:	ds pop ecx
  40979b:	in     al,dx
  40979c:	pop    eax
  40979d:	out    dx,eax
  40979e:	sub    eax,0x1634639c
  4097a3:	into   
  4097a4:	push   ebx
  4097a5:	dec    eax
  4097a6:	outs   dx,BYTE PTR ds:[esi]
  4097a7:	enter  0x7634,0x25
  4097ab:	sbb    eax,0x60f2052a
  4097b0:	jle    0x40982c
  4097b2:	test   esp,edx
  4097b4:	cmp    cl,dh
  4097b6:	scas   eax,DWORD PTR es:[edi]
  4097b7:	jl     0x409801
  4097b9:	ja     0x409794
  4097bb:	shl    DWORD PTR [esi+0x6f],0x6a
  4097bf:	and    al,al
  4097c1:	adc    dh,BYTE PTR ds:0x9b376bf0
  4097c7:	pop    edx
  4097c8:	inc    ecx
  4097c9:	adc    DWORD PTR [eax-0x42],esp
  4097cc:	xchg   ebx,eax
  4097cd:	sub    al,0xa1
  4097cf:	xor    eax,0xfed26541
  4097d4:	and    eax,0x31463563
  4097d9:	sub    DWORD PTR [ebx+0x1d],ebx
  4097dc:	dec    esp
  4097dd:	retf   0x5169
  4097e0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4097e1:	js     0x409787
  4097e3:	pop    ebx
  4097e4:	popf   
  4097e5:	xchg   ecx,eax
  4097e6:	ror    esi,cl
  4097e8:	bound  esp,QWORD PTR [edx]
  4097ea:	sahf   
  4097eb:	dec    esp
  4097ec:	lss    ecx,FWORD PTR [eax]
  4097ef:	or     ebx,ebp
  4097f1:	data16 sahf 
  4097f3:	into   
  4097f4:	or     DWORD PTR [edx],0xfffffff6
  4097f7:	push   esi
  4097f8:	retf   
  4097f9:	inc    ecx
  4097fa:	adc    DWORD PTR [edx+0x32],ebp
  4097fd:	cmp    eax,0xe164f874
  409802:	ret    
  409803:	jmp    0x4a01:0xd263357a
  40980a:	adc    esi,DWORD PTR fs:[eax-0x5f91e1ab]
  409811:	loop   0x409881
  409813:	rcr    cl,cl
  409815:	mov    WORD PTR [ecx-0x709b2b95],fs
  40981b:	cli    
  40981c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40981d:	ret    0x2012
  409820:	xchg   DWORD PTR [edx],ebp
  409822:	xor    BYTE PTR [edx],dl
  409824:	cmp    DWORD PTR [eax+0x72f79151],edi
  40982a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40982b:	cli    
  40982c:	loop   0x40983a
  40982e:	pop    edi
  40982f:	pop    ebx
  409830:	sub    DWORD PTR [si-0x70],esi
  409834:	jecxz  0x4097f5
  409836:	push   esp
  409837:	push   ss
  409838:	jl     0x4097e5
  40983a:	fild   QWORD PTR [edi+0x52d32e44]
  409840:	leave  
  409841:	add    DWORD PTR [edx],esi
  409843:	adc    ch,BYTE PTR [eax+0x44]
  409846:	push   esp
  409847:	out    dx,al
  409848:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409849:	xchg   edx,eax
  40984a:	mov    ebx,0x990ccc98
  40984f:	mov    ecx,0xd49da622
  409854:	xchg   ebp,eax
  409855:	test   BYTE PTR [edi],cl
  409857:	pop    edx
  409858:	retf   
  409859:	in     al,dx
  40985a:	adc    bl,BYTE PTR [edi-0x43f3297b]
  409860:	stc    
  409861:	adc    BYTE PTR [esi-0x51],0x5b
  409865:	stos   DWORD PTR es:[edi],eax
  409866:	sar    BYTE PTR [ebx-0x755261a1],0x7e
  40986d:	sbb    DWORD PTR [edx],ecx
  40986f:	add    DWORD PTR [ebx-0x36],edx
  409872:	cwde   
  409873:	jle    0x4098a6
  409875:	nop
  409876:	cmc    
  409877:	dec    edx
  409878:	mov    dl,0x0
  40987a:	and    DWORD PTR [esi+0x3ef4a722],edx
  409880:	sub    al,0x43
  409882:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409883:	cwde   
  409884:	fs int3 
  409886:	sbb    esi,eax
  409888:	das    
  409889:	repnz cwde 
  40988b:	iret   
  40988c:	mov    ebx,0xe60e14eb
  409891:	lock or cl,BYTE PTR [eax+0x45]
  409895:	in     eax,dx
  409896:	imul   esp,DWORD PTR [eax+ebx*2+0x749648b3],0xffffffb9
  40989e:	int    0x74
  4098a0:	xchg   BYTE PTR [ecx+0x1f112c8b],cl
  4098a6:	add    DWORD PTR [edx+edx*2],esp
  4098a9:	mov    esi,0x50402af9
  4098ae:	(bad)  
  4098af:	push   ss
  4098b0:	lahf   
  4098b1:	or     esp,DWORD PTR [esi+0x28]
  4098b4:	fwait
  4098b5:	pushf  
  4098b6:	test   ebx,ebp
  4098b8:	test   BYTE PTR [edi],0xed
  4098bb:	(bad)  [ebp-0x44b6e65d]
  4098c1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4098c2:	adc    edx,ecx
  4098c4:	pushf  
  4098c5:	repz fnstcw WORD PTR [edi-0x3265be6b]
  4098cc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4098cd:	cmp    dh,BYTE PTR [edx-0x722a38b2]
  4098d3:	cmp    esp,DWORD PTR [ebp+0x73]
  4098d6:	mov    ah,BYTE PTR [edi+0xfdaaa74]
  4098dc:	adc    BYTE PTR [ecx],dh
  4098de:	push   ebp
  4098df:	mov    ds,edx
  4098e1:	scas   al,BYTE PTR es:[edi]
  4098e2:	inc    edi
  4098e3:	sub    esi,DWORD PTR [edx-0x5d]
  4098e6:	xor    eax,0x7b13f329
  4098eb:	lahf   
  4098ec:	cdq    
  4098ed:	jb     0x4098bb
  4098ef:	repz inc edi
  4098f1:	cmp    eax,edx
  4098f3:	push   edi
  4098f4:	hlt    
  4098f5:	jns    0x4098e4
  4098f7:	aam    0x83
  4098f9:	test   dl,dh
  4098fb:	mov    DWORD PTR [edx],eax
  4098fd:	and    dh,BYTE PTR [esi]
  4098ff:	retf   
  409900:	cmp    eax,0x96b7b6ca
  409905:	xor    eax,0xa1eb3019
  40990a:	stc    
  40990b:	xlat   BYTE PTR ds:[ebx]
  40990c:	pop    edi
  40990d:	cmp    BYTE PTR [edx],0x5
  409910:	mov    al,0xd2
  409912:	xchg   BYTE PTR [ebp+0x5c7350a5],bh
  409918:	dec    esp
  409919:	les    edi,FWORD PTR [ecx-0x6c8ebe9]
  40991f:	ins    DWORD PTR es:[edi],dx
  409920:	jnp    0x409970
  409922:	inc    eax
  409923:	cmp    cl,0xf8
  409926:	dec    eax
  409927:	in     al,dx
  409928:	retf   
  409929:	cs loop 0x40996e
  40992c:	hlt    
  40992d:	push   ebx
  40992e:	ja     0x40992e
  409930:	loopne 0x4098be
  409932:	xlat   BYTE PTR ds:[ebx]
  409933:	pop    ebx
  409934:	lods   al,BYTE PTR ds:[esi]
  409935:	mov    esp,DWORD PTR [ecx-0x3e]
  409938:	lods   al,BYTE PTR ds:[esi]
  409939:	pop    ebx
  40993a:	add    BYTE PTR cs:[ebx+0x7b1bb702],0x54
  409942:	and    al,0xe9
  409944:	lods   al,BYTE PTR ds:[esi]
  409945:	test   eax,0x64b3b079
  40994a:	js     0x409938
  40994c:	jae    0x4099af
  40994e:	repz xchg edx,eax
  409950:	adc    ebp,ebx
  409952:	pushf  
  409953:	adc    BYTE PTR gs:[ebx],ah
  409956:	inc    ebx
  409957:	not    cl
  409959:	stos   BYTE PTR es:[edi],al
  40995a:	sub    BYTE PTR ds:0xd6588c34,al
  409960:	es push 0xffffffc6
  409963:	xor    bh,BYTE PTR [edx]
  409965:	ret    
  409966:	jl     0x409990
  409968:	(bad)  
  40996a:	outs   dx,DWORD PTR ds:[esi]
  40996b:	jb     0x4099ac
  40996d:	fist   DWORD PTR [eax+0x4a]
  409970:	adc    edx,DWORD PTR [esi]
  409972:	or     BYTE PTR [eax+0x1f],0x15
  409976:	adc    edx,DWORD PTR [ebx-0x3de92e9b]
  40997c:	aas    
  40997d:	enter  0x3a8a,0x33
  409981:	sbb    BYTE PTR cs:[esi-0x37],0xde
  409986:	icebp  
  409987:	dec    eax
  409988:	cmp    eax,0xccac9eb4
  40998d:	(bad)  
  40998e:	jle    0x409961
  409990:	lahf   
  409991:	and    eax,0x959caf06
  409996:	retf   
  409997:	or     eax,0x2175c5e6
  40999c:	lds    ebp,FWORD PTR [edi]
  40999e:	fimul  WORD PTR [esi]
  4099a0:	test   BYTE PTR [eax+0x61],0xe5
  4099a4:	or     eax,0x59f03526
  4099a9:	and    eax,0x386e9df4
  4099ae:	pusha  
  4099af:	and    DWORD PTR ds:0xf37ba487,edx
  4099b5:	popa   
  4099b6:	push   edx
  4099b7:	pop    ebx
  4099b8:	pop    ss
  4099b9:	mov    ebx,0xf8088f51
  4099be:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4099bf:	cwde   
  4099c0:	jmp    FWORD PTR [ebx+0x76]
  4099c3:	sbb    BYTE PTR [ebx+ebx*8],ch
  4099c6:	adc    eax,0x17732d74
  4099cb:	push   0x7f1b4be0
  4099d0:	pop    ss
  4099d1:	mov    eax,DWORD PTR [esi+eax*2-0x662505c7]
  4099d8:	xchg   DWORD PTR [esi-0x45],esi
  4099db:	ins    DWORD PTR es:[edi],dx
  4099dc:	fs lock inc edx
  4099df:	es push esi
  4099e1:	push   edx
  4099e2:	adc    bh,cl
  4099e4:	xchg   esi,eax
  4099e5:	jp     0x409a19
  4099e7:	sub    eax,DWORD PTR [ecx]
  4099e9:	cmp    ecx,DWORD PTR [edx-0x19fabbee]
  4099ef:	fadd   st,st(6)
  4099f1:	jmp    0x12f6:0xa2d4f8c8
  4099f8:	fild   WORD PTR [ebp+ecx*1+0x5c]
  4099fc:	sbb    ecx,esi
  4099fe:	pop    ds
  4099ff:	jge    0x40999c
  409a01:	bound  esi,QWORD PTR [edi]
  409a03:	(bad)  
  409a04:	iret   
  409a05:	mov    bl,0xaf
  409a07:	and    BYTE PTR [edi-0x35a04cbb],bl
  409a0d:	loop   0x4099d7
  409a0f:	out    dx,al
  409a10:	pop    ss
  409a11:	adc    ecx,esi
  409a13:	xor    al,BYTE PTR ds:0x19029b69
  409a19:	xlat   BYTE PTR ds:[ebx]
  409a1a:	mov    eax,0x5328ae2b
  409a1f:	and    BYTE PTR [esi+0x56f6964],ch
  409a25:	popf   
  409a26:	sar    BYTE PTR [edx-0x7f2f1661],1
  409a2c:	pop    ds
  409a2d:	test   bh,ah
  409a2f:	daa    
  409a30:	(bad)  
  409a31:	jne    0x8d56447d
  409a37:	fstp   TBYTE PTR [ebp-0x3eb3e161]
  409a3d:	sbb    ebp,DWORD PTR [ebp-0x1e]
  409a40:	and    al,cl
  409a42:	push   esp
  409a43:	adc    cl,BYTE PTR ds:0x9d75899b
  409a49:	ror    BYTE PTR [ebp+0x41553e58],1
  409a4f:	repnz imul ecx,DWORD PTR [edx],0x77422f72
  409a56:	jb     0x409a11
  409a58:	push   0xffffffb2
  409a5a:	inc    eax
  409a5b:	cmp    ebx,DWORD PTR [edi]
  409a5d:	sub    ah,al
  409a5f:	inc    eax
  409a60:	inc    ebp
  409a61:	das    
  409a62:	dec    esp
  409a63:	das    
  409a64:	cmps   DWORD PTR cs:[esi],DWORD PTR es:[edi]
  409a66:	je     0x4099fc
  409a68:	push   0xffffffd3
  409a6a:	fisub  DWORD PTR [edi+0x25aedaae]
  409a70:	ficomp DWORD PTR [ebx+edi*4+0x6a]
  409a74:	lods   eax,DWORD PTR ds:[esi]
  409a75:	arpl   ax,bp
  409a77:	rol    DWORD PTR [eax+0x45],1
  409a7a:	pop    ebp
  409a7b:	lods   al,BYTE PTR ds:[esi]
  409a7c:	rol    BYTE PTR [edx+eax*4],cl
  409a7f:	or     ebx,esi
  409a81:	pop    ebx
  409a82:	cld    
  409a83:	scas   al,BYTE PTR es:[edi]
  409a84:	aaa    
  409a85:	or     al,0xc7
  409a87:	cmp    eax,0x6230a5ec
  409a8c:	stc    
  409a8d:	jge    0x409a5a
  409a8f:	pop    esp
  409a90:	mov    ds:0x493ea383,eax
  409a95:	adc    al,0xa3
  409a97:	mov    DWORD PTR [ebx-0x74],ebx
  409a9a:	xlat   BYTE PTR ds:[ebx]
  409a9b:	sub    ebx,esp
  409a9d:	or     ecx,DWORD PTR [ecx+0x4fb509db]
  409aa3:	lods   al,BYTE PTR ds:[esi]
  409aa4:	repnz fsubr DWORD PTR [esi+0x58420a90]
  409aab:	inc    esp
  409aac:	dec    edx
  409aad:	aam    0xa0
  409aaf:	and    BYTE PTR [ecx+ecx*2+0x8],bl
  409ab3:	mov    bl,0xac
  409ab5:	and    ecx,DWORD PTR [esi+0x2b]
  409ab8:	inc    ecx
  409ab9:	fisub  DWORD PTR ss:[ebx]
  409abc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409abd:	sti    
  409abe:	sbb    eax,0x6a4a0cde
  409ac3:	pop    es
  409ac4:	mov    ch,0xb9
  409ac6:	into   
  409ac7:	fld    TBYTE PTR [esi+0x66]
  409aca:	sbb    DWORD PTR [bx+di],eax
  409acd:	xlat   BYTE PTR ds:[ebx]
  409ace:	xchg   esp,eax
  409acf:	jmp    0xc341:0xb4be9257
  409ad6:	fxch   st(7)
  409ad8:	cmp    eax,0xac5a0f67
  409add:	js     0x409b24
  409adf:	xchg   esp,eax
  409ae0:	jmp    0x7ca9:0xbf45137b
  409ae7:	jno    0x409ad1
  409ae9:	xor    DWORD PTR [eax+0x6b],esi
  409aec:	mov    al,bl
  409aee:	mov    ds:0xc233e2b7,al
  409af3:	mov    ds:0xbe4d20f0,al
  409af8:	(bad)  
  409af9:	rcr    DWORD PTR [edi-0x2],0xcf
  409afd:	test   BYTE PTR [edx-0x33780f3d],dh
  409b03:	mov    eax,ds:0x4a1d9741
  409b08:	pop    eax
  409b09:	(bad)  
  409b0a:	out    0x76,eax
  409b0c:	shl    BYTE PTR [eax-0x51],1
  409b0f:	pusha  
  409b10:	pop    esp
  409b11:	mov    ecx,0x386a8090
  409b16:	mov    ds:0x170ffdb9,eax
  409b1b:	dec    ecx
  409b1c:	loopne 0x409b2d
  409b1e:	push   0x53
  409b20:	lar    edx,WORD PTR [esi+0xc]
  409b24:	inc    esi
  409b25:	adc    ebp,DWORD PTR [edx-0x6c]
  409b28:	push   ecx
  409b29:	mov    BYTE PTR [bp+si],cl
  409b2c:	push   ebx
  409b2d:	cmp    dl,BYTE PTR [ebp-0xa]
  409b30:	jmp    0x9752:0xf0ffecef
  409b37:	inc    edi
  409b38:	jmp    0x14ea5c8f
  409b3d:	mov    al,0x3a
  409b3f:	mov    edi,0xb4ca6293
  409b44:	jmp    0xe3bb:0x1f2a7140
  409b4b:	and    eax,0x2795a4df
  409b50:	popf   
  409b51:	in     al,0x99
  409b53:	pop    ds
  409b54:	fs mov esi,0x216265a3
  409b5a:	ins    BYTE PTR es:[edi],dx
  409b5b:	push   ecx
  409b5c:	sub    eax,0x2d9f8a38
  409b61:	xor    BYTE PTR [ecx+0x23],dl
  409b64:	push   0x28
  409b66:	mov    dh,BYTE PTR [eax+0x73520291]
  409b6c:	and    DWORD PTR [esi-0x62],edi
  409b6f:	jbe    0x409b42
  409b71:	adc    edi,ebx
  409b73:	scas   al,BYTE PTR es:[edi]
  409b74:	dec    edx
  409b75:	cwde   
  409b76:	jns    0x409b35
  409b78:	xor    esi,DWORD PTR [edi]
  409b7a:	outs   dx,BYTE PTR ds:[esi]
  409b7b:	mov    eax,0xc96ab411
  409b80:	jbe    0x409bcd
  409b82:	sti    
  409b83:	in     al,dx
  409b84:	xchg   ebp,eax
  409b85:	dec    ebx
  409b86:	xor    eax,0xdd422795
  409b8b:	inc    ebx
  409b8c:	adc    al,0xe4
  409b8e:	adc    al,0xa7
  409b90:	ret    0x7218
  409b93:	cmp    eax,0xfed67bee
  409b98:	sub    eax,0x81c31be7
  409b9d:	push   edi
  409b9e:	shl    DWORD PTR [eax-0x715f5222],1
  409ba4:	and    ebx,DWORD PTR [ebx+edx*2-0x17]
  409ba8:	dec    edx
  409ba9:	push   edx
  409baa:	mov    esi,0xe2f873a
  409baf:	pop    ecx
  409bb0:	imul   BYTE PTR [edi+eiz*8+0x4a]
  409bb4:	mov    DWORD PTR [ecx+eax*2+0x11c9e9f7],esp
  409bbb:	std    
  409bbc:	int    0x9c
  409bbe:	bound  eax,QWORD PTR [eax]
  409bc0:	pop    ds
  409bc1:	fwait
  409bc2:	neg    esi
  409bc4:	cmp    eax,0xda846931
  409bc9:	xchg   BYTE PTR [esi],ch
  409bcb:	cmp    esi,DWORD PTR [esi+edi*1]
  409bce:	dec    ecx
  409bcf:	dec    edi
  409bd0:	cwde   
  409bd1:	scas   al,BYTE PTR es:[edi]
  409bd2:	ret    
  409bd3:	push   esi
  409bd4:	push   ecx
  409bd5:	dec    ebp
  409bd6:	in     al,dx
  409bd7:	in     al,0xc4
  409bd9:	mov    ah,0xc9
  409bdb:	push   ss
  409bdc:	lods   al,BYTE PTR ds:[esi]
  409bdd:	jmp    0x409b70
  409bdf:	xor    DWORD PTR [eax+0x2ebc0dd7],edx
  409be5:	push   ebp
  409be6:	stos   BYTE PTR es:[edi],al
  409be7:	ds fs loop 0x409b7f
  409beb:	add    esp,0x31
  409bee:	jb     0x409b77
  409bf0:	enter  0x64f5,0x1e
  409bf4:	int3   
  409bf5:	inc    edi
  409bf6:	stos   BYTE PTR es:[edi],al
  409bf7:	int3   
  409bf8:	gs cmp ah,bh
  409bfb:	fsub   QWORD PTR [ebx+0x7d0922d]
  409c01:	not    DWORD PTR es:[ecx]
  409c04:	(bad)  
  409c05:	and    BYTE PTR [ebp-0x2e6bb5b6],al
  409c0b:	sub    ebx,DWORD PTR [ebp-0x3f]
  409c0e:	not    BYTE PTR [edx]
  409c10:	pop    ecx
  409c11:	je     0x409c4c
  409c13:	addr16 jne 0x409c36
  409c16:	adc    al,0xea
  409c18:	xor    eax,edi
  409c1a:	pop    ds
  409c1b:	in     eax,0x58
  409c1d:	and    DWORD PTR [ebx-0x1],edx
  409c20:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409c21:	sbb    al,al
  409c23:	out    dx,al
  409c24:	arpl   WORD PTR [ecx-0x25],bp
  409c27:	cmp    ch,BYTE PTR [esp+ebp*4-0x28]
  409c2b:	mov    BYTE PTR [edi],dl
  409c2d:	and    eax,0x9bb3600a
  409c32:	mov    fs,WORD PTR [ebx+eiz*4-0x696b8805]
  409c39:	cmp    eax,0x46df4134
  409c3e:	mov    dh,0xdd
  409c40:	sbb    DWORD PTR [eax-0x6f],ecx
  409c43:	jmp    0x6b4dce99
  409c48:	retf   
  409c49:	or     ax,0x9b82
  409c4d:	daa    
  409c4e:	mov    al,0x67
  409c50:	call   0x250caf78
  409c55:	or     BYTE PTR [eax+0x1319bb9b],ch
  409c5b:	jp     0x409ca5
  409c5d:	shl    BYTE PTR [edx+eiz*4+0x795492dd],1
  409c64:	dec    edi
  409c65:	ds imul esp,DWORD PTR es:[esi-0x10],0x86760a98
  409c6e:	cmp    eax,0x9e8855b6
  409c73:	loop   0x409c56
  409c75:	lds    edx,FWORD PTR [edi+0x6a3cbd85]
  409c7b:	das    
  409c7c:	hlt    
  409c7d:	and    al,0xec
  409c7f:	aaa    
  409c80:	stos   DWORD PTR es:[edi],eax
  409c81:	lahf   
  409c82:	icebp  
  409c83:	out    0xe,al
  409c85:	int3   
  409c86:	cmp    al,0x3a
  409c88:	or     eax,DWORD PTR [ebx+0x3f5d1766]
  409c8e:	jb     0x409cf3
  409c90:	mov    ds:0x9fe73464,eax
  409c95:	adc    ecx,DWORD PTR [ecx+0x7d]
  409c98:	ds ja  0x409c38
  409c9b:	test   BYTE PTR [esp+ebp*2],ch
  409c9e:	icebp  
  409c9f:	sbb    BYTE PTR [ebx],bl
  409ca1:	gs out 0x73,eax
  409ca4:	call   0x5b1f:0xd484d594
  409cab:	or     al,0x70
  409cad:	retf   0xcc07
  409cb0:	fsubr  st(0),st
  409cb2:	xor    DWORD PTR [eax-0x2e],esp
  409cb5:	jecxz  0x409cb4
  409cb7:	mov    ds:0x866bcca2,eax
  409cbc:	adc    dh,BYTE PTR [ecx]
  409cbe:	fistp  DWORD PTR [esp+ebx*8+0x57]
  409cc2:	mov    esi,0xf8bc9847
  409cc7:	mov    dh,BYTE PTR [ebx+0x66]
  409cca:	push   edx
  409ccb:	adc    al,0x81
  409ccd:	and    bl,BYTE PTR [edx-0x6a]
  409cd0:	pop    es
  409cd1:	mul    BYTE PTR [esi]
  409cd3:	jbe    0x409c6d
  409cd5:	aas    
  409cd6:	aaa    
  409cd7:	and    BYTE PTR [ebx-0xd],dl
  409cda:	out    0xbd,al
  409cdc:	sahf   
  409cdd:	rol    DWORD PTR ds:0x5aa3b49c,0x7c
  409ce4:	into   
  409ce5:	inc    eax
  409ce6:	add    DWORD PTR [ecx+0x7720c2e5],edx
  409cec:	out    dx,eax
  409ced:	adc    esi,DWORD PTR [ebp+0x23e5b082]
  409cf3:	push   es
  409cf4:	adc    DWORD PTR [esi+0x4f],ebp
  409cf7:	pop    ss
  409cf8:	sbb    al,0x3f
  409cfa:	shl    BYTE PTR [esi-0x1680c486],0x27
  409d01:	js     0x409d27
  409d03:	and    BYTE PTR [eax],al
  409d05:	fwait
  409d06:	test   DWORD PTR [ebx+0x4f],eax
  409d09:	mov    ah,0x24
  409d0b:	sbb    eax,DWORD PTR gs:[eax+0x48]
  409d0f:	aad    0xcf
  409d11:	in     al,0x7
  409d13:	mov    dl,0xcf
  409d15:	clc    
  409d16:	ret    0x2767
  409d19:	sub    DWORD PTR [eax-0x108a100f],eax
  409d1f:	inc    ecx
  409d20:	push   edx
  409d21:	xchg   esp,eax
  409d22:	sbb    al,0xd7
  409d24:	idiv   DWORD PTR [edx]
  409d26:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409d27:	retf   
  409d28:	push   cs
  409d29:	ficomp DWORD PTR [esp+edi*8+0xccde6d7]
  409d30:	pop    ecx
  409d31:	pop    esp
  409d32:	inc    edx
  409d33:	dec    edi
  409d34:	icebp  
  409d35:	mov    cl,0x11
  409d37:	adc    al,0x4a
  409d39:	dec    ebp
  409d3a:	dec    esp
  409d3b:	sub    DWORD PTR [ebx-0x6bf0bf2f],edx
  409d41:	mov    bh,BYTE PTR gs:[ecx-0x7f2c601a]
  409d48:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409d49:	call   0xa92496f
  409d4e:	add    ebp,DWORD PTR [eax+0x50fd7c0b]
  409d54:	arpl   WORD PTR [ecx],si
  409d56:	add    BYTE PTR [edx+0x3cc4c75f],bh
  409d5c:	adc    esp,ecx
  409d5e:	mov    ebp,0xbbeec8d8
  409d63:	cld    
  409d64:	fsubr  DWORD PTR [eax]
  409d66:	jns    0x409d34
  409d68:	pop    es
  409d69:	cwde   
  409d6a:	push   eax
  409d6b:	xchg   esi,eax
  409d6c:	pop    edx
  409d6d:	fadd   DWORD PTR [esi-0x6303c763]
  409d73:	dec    edi
  409d74:	imul   esp,DWORD PTR [eax],0x52
  409d77:	ror    DWORD PTR [ecx+0x4d],0x9a
  409d7b:	clc    
  409d7c:	adc    al,bl
  409d7e:	imul   edx,eax,0xffffff87
  409d81:	repz sub dh,al
  409d84:	outs   dx,DWORD PTR ds:[esi]
  409d85:	and    DWORD PTR [eax+0x57],ebp
  409d88:	mov    al,0x4d
  409d8a:	pop    es
  409d8b:	sbb    eax,0x190b7278
  409d90:	(bad)  
  409d91:	js     0x409e0a
  409d93:	push   ebp
  409d94:	sub    dh,BYTE PTR [ebx-0x3c]
  409d97:	addr16 aas 
  409d99:	ret    
  409d9a:	(bad)  
  409d9b:	iret   
  409d9c:	xor    dh,BYTE PTR [edi]
  409d9e:	adc    DWORD PTR [esi+0x7d55caab],ebp
  409da4:	inc    esp
  409da5:	mov    edi,0x82e49eeb
  409daa:	xchg   esp,eax
  409dab:	and    esp,DWORD PTR [ebx+ebx*8]
  409dae:	scas   eax,DWORD PTR es:[edi]
  409daf:	shr    BYTE PTR [ecx],0x8f
  409db2:	and    al,0x73
  409db4:	int3   
  409db5:	inc    esp
  409db6:	or     DWORD PTR es:[ecx+0x102bf5b2],eax
  409dbd:	cmp    edx,edi
  409dbf:	and    al,0x4d
  409dc1:	push   ss
  409dc2:	(bad)  
  409dc4:	movd   mm6,DWORD PTR [edx*8+0x2e9d4db9]
  409dcc:	push   edx
  409dcd:	retf   
  409dce:	mov    ch,0xd1
  409dd0:	das    
  409dd1:	fcmove st,st(6)
  409dd3:	rcr    DWORD PTR [edx-0x5badd151],cl
  409dd9:	xlat   BYTE PTR ds:[ebx]
  409dda:	push   edi
  409ddb:	xchg   esi,eax
  409ddc:	add    ebx,DWORD PTR [ebx+0x3f]
  409ddf:	mov    dh,BYTE PTR [esi+0x457f0b8c]
  409de5:	or     eax,0x3580b212
  409dea:	jle    0x409dce
  409dec:	idiv   BYTE PTR [ecx-0xa]
  409def:	mov    eax,0x69ee63d5
  409df4:	cld    
  409df5:	sbb    bl,BYTE PTR [ecx+esi*1+0x701fdc96]
  409dfc:	or     eax,0x1dc0e823
  409e01:	or     DWORD PTR [ebx+edx*8-0x338e14be],ecx
  409e08:	or     BYTE PTR [ebp+0x66],ch
  409e0b:	fisubr DWORD PTR [ebx]
  409e0d:	dec    ebp
  409e0e:	add    DWORD PTR ds:[ebx],0x5c630d10
  409e15:	and    BYTE PTR [edi],0x58
  409e18:	mov    ss,WORD PTR [ecx+0x44]
  409e1b:	mov    esi,0xcb5bd32b
  409e20:	mov    al,BYTE PTR [edx-0x39cf944f]
  409e26:	pop    ds
  409e27:	mov    ebx,0x144e2d18
  409e2c:	adc    ebx,edi
  409e2e:	lahf   
  409e2f:	(bad)  
  409e30:	sti    
  409e31:	dec    edi
  409e32:	sti    
  409e33:	cdq    
  409e34:	xchg   ecx,eax
  409e35:	mov    eax,0x8afc14cc
  409e3a:	pusha  
  409e3b:	sahf   
  409e3c:	jb     0x409e0b
  409e3e:	out    dx,eax
  409e3f:	stos   BYTE PTR es:[edi],al
  409e40:	aas    
  409e41:	loope  0x409e45
  409e43:	imul   cl
  409e45:	and    cl,BYTE PTR ds:0x1dc45aad
  409e4b:	cli    
  409e4c:	xchg   ebx,eax
  409e4d:	cdq    
  409e4e:	ret    
  409e4f:	adc    BYTE PTR [ebx],0x8a
  409e52:	pop    eax
  409e53:	aaa    
  409e54:	arpl   dx,dx
  409e56:	inc    edi
  409e57:	dec    esp
  409e58:	mov    es,WORD PTR [ebx+0x37b2ef0b]
  409e5e:	imul   ebp,DWORD PTR [eax+0x7d],0xb0907b66
  409e65:	shl    DWORD PTR [ecx+0x4c],1
  409e68:	sti    
  409e69:	push   0x66
  409e6b:	stos   DWORD PTR es:[edi],eax
  409e6c:	xchg   esp,eax
  409e6d:	mov    ch,0x38
  409e6f:	or     eax,0xfa7f83dd
  409e74:	mov    ebp,0x31e5f4ca
  409e79:	xor    BYTE PTR [edx+eax*2],dh
  409e7c:	pusha  
  409e7d:	je     0x409e84
  409e7f:	fld    QWORD PTR [eax+ebx*4-0x8afab11]
  409e86:	sub    DWORD PTR fs:[ebp-0x1d46e1f7],eax
  409e8d:	or     al,0xc7
  409e8f:	mov    bl,0x2
  409e91:	mov    dh,0xd6
  409e93:	scas   al,BYTE PTR es:[edi]
  409e94:	test   BYTE PTR [ebx+0x37],cl
  409e97:	fistp  QWORD PTR [edi-0x3230041e]
  409e9d:	sbb    BYTE PTR [edi+0x61],dh
  409ea0:	cmp    eax,0x46e151d0
  409ea5:	leave  
  409ea6:	and    al,dl
  409ea8:	add    ecx,DWORD PTR [edx+0x52015d94]
  409eae:	ret    
  409eaf:	sub    dl,BYTE PTR [edx+0x314ac49e]
  409eb5:	pushf  
  409eb6:	or     dl,ah
  409eb8:	in     eax,0x24
  409eba:	arpl   ax,di
  409ebc:	cmp    cl,BYTE PTR [edx-0x98c6460]
  409ec2:	jl     0x409e54
  409ec4:	js     0x409e63
  409ec6:	push   ss
  409ec7:	inc    ebx
  409ec8:	sbb    al,0x8a
  409eca:	add    al,0x7f
  409ecc:	pop    ss
  409ecd:	ins    DWORD PTR es:[edi],dx
  409ece:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409ecf:	fs push ebx
  409ed1:	lds    eax,FWORD PTR [ecx]
  409ed3:	dec    eax
  409ed4:	jbe    0x409f0f
  409ed6:	push   esp
  409ed7:	and    cl,BYTE PTR [ebx-0x63]
  409eda:	mov    edi,0xe092a724
  409edf:	stos   BYTE PTR es:[edi],al
  409ee0:	call   0x7ec7:0x5a4f5b03
  409ee7:	into   
  409ee8:	sti    
  409ee9:	out    dx,al
  409eea:	hlt    
  409eeb:	shr    bl,cl
  409eed:	test   ch,dl
  409eef:	jmp    0x64773b74
  409ef4:	jecxz  0x409e82
  409ef6:	sbb    ecx,DWORD PTR [eax+0x1e]
  409ef9:	xor    BYTE PTR [edi+0x49],bl
  409efc:	les    eax,FWORD PTR [ebx-0x21]
  409eff:	mov    esi,0xfcc67b05
  409f04:	sbb    esi,DWORD PTR [edx]
  409f06:	fdivr  st(0),st
  409f08:	loope  0x409ef2
  409f0a:	push   esp
  409f0b:	xchg   esi,eax
  409f0c:	adc    eax,0xb1a7fcc8
  409f11:	in     eax,dx
  409f12:	mov    cl,0x10
  409f14:	xchg   edi,eax
  409f15:	adc    dl,BYTE PTR [ebx]
  409f17:	nop
  409f18:	loope  0x409f4c
  409f1a:	or     BYTE PTR [edx-0x56],dh
  409f1d:	fisub  DWORD PTR [eax+0x463f98b4]
  409f23:	fimul  WORD PTR [edi+0x32]
  409f26:	imul   edx,DWORD PTR [eax+ecx*1],0xffffffb3
  409f2a:	imul   ebp,DWORD PTR [ebx],0x7e
  409f2d:	inc    DWORD PTR [edx+0x6f]
  409f30:	ret    
  409f31:	sub    al,0xf0
  409f33:	pop    ebx
  409f34:	out    0xee,eax
  409f36:	jbe    0x409f70
  409f38:	sbb    DWORD PTR [ebp+edi*8-0x17fe335f],edi
  409f3f:	je     0x409ed0
  409f41:	popa   
  409f42:	push   ecx
  409f43:	mov    ah,0x1a
  409f45:	lea    eax,[ebp-0x37]
  409f48:	or     DWORD PTR [ebp+esi*2+0x4],ebp
  409f4c:	mov    DWORD PTR [ebx-0x67b068ee],edi
  409f52:	jne    0x409f90
  409f54:	sbb    BYTE PTR [edi+0x12],bh
  409f57:	push   edi
  409f58:	mov    ds:0x85ca5ed2,al
  409f5d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409f5e:	jl     0x409f5f
  409f60:	xchg   ecx,eax
  409f61:	dec    esi
  409f62:	into   
  409f63:	retf   0xaf72
  409f66:	vmread DWORD PTR [edx-0x431e582b],ecx
  409f6d:	jp     0x409fb3
  409f6f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409f70:	pop    ebp
  409f71:	push   ecx
  409f72:	inc    esp
  409f73:	pop    ss
  409f74:	mov    dl,0x66
  409f76:	jo     0x409f29
  409f78:	icebp  
  409f79:	mov    ebx,0x294cb811
  409f7e:	fs inc edi
  409f80:	dec    esi
  409f81:	push   eax
  409f82:	jnp    0x409fd7
  409f84:	popa   
  409f85:	fisub  WORD PTR [edi+0x5d]
  409f88:	fistp  QWORD PTR [edi]
  409f8a:	cmp    al,0x27
  409f8c:	loopne 0x409fd4
  409f8e:	jmp    0x78ce6300
  409f93:	or     BYTE PTR [ecx+0x70],dh
  409f96:	mov    edx,ebp
  409f98:	push   ecx
  409f99:	lods   al,BYTE PTR ds:[esi]
  409f9a:	sbb    ecx,esi
  409f9c:	mov    eax,ds:0x3dfcd91f
  409fa1:	jecxz  0x409fc6
  409fa3:	std    
  409fa4:	xchg   ecx,eax
  409fa5:	lahf   
  409fa6:	cdq    
  409fa7:	cld    
  409fa8:	dec    esp
  409fa9:	jmp    0x62b61a4
  409fae:	cmp    dh,dl
  409fb0:	pop    edi
  409fb1:	pusha  
  409fb2:	fimul  WORD PTR [edx-0x77d5d823]
  409fb8:	xchg   edi,eax
  409fb9:	jbe    0x409ffb
  409fbb:	pop    ebx
  409fbc:	test   al,0x0
  409fbe:	mov    ch,0xa7
  409fc0:	mov    ebx,0x26fd49d5
  409fc5:	imul   ebp,DWORD PTR [ebx+0x5a549f94],0xffffff84
  409fcc:	inc    eax
  409fcd:	jle    0x409f6e
  409fcf:	mov    ah,0xf1
  409fd1:	scas   al,BYTE PTR es:[edi]
  409fd2:	into   
  409fd3:	add    bh,0x56
  409fd6:	or     al,0x5e
  409fd8:	daa    
  409fd9:	out    dx,eax
  409fda:	icebp  
  409fdb:	push   es
  409fdc:	push   edx
  409fdd:	fidiv  WORD PTR [ebx]
  409fdf:	ds jne 0x409fe6
  409fe2:	or     BYTE PTR [esi-0x32],al
  409fe5:	pop    esp
  409fe6:	(bad)  
  409fe7:	cmc    
  409fe8:	mov    DWORD PTR [eax+0x2d],ecx
  409feb:	mov    ds:0xca670b1f,eax
  409ff0:	mov    ecx,0x35814e81
  409ff5:	mov    esi,0xced1b1df
  409ffa:	inc    eax
  409ffb:	mov    ecx,0x73ccd3be
  40a000:	scas   al,BYTE PTR es:[edi]
  40a001:	push   eax
  40a002:	mov    esi,0x1611d83a
  40a007:	add    BYTE PTR [ebx+0x35],dh
  40a00a:	retf   
  40a00b:	loope  0x40a020
  40a00d:	imul   DWORD PTR [esi+0x304455db]
  40a013:	add    dl,BYTE PTR cs:0xe495fa66
  40a01a:	mov    cl,0xd6
  40a01c:	dec    edi
  40a01d:	loope  0x40a071
  40a01f:	mov    edi,0x2ccadbb3
  40a024:	cdq    
  40a025:	ret    0xf35d
  40a028:	mov    edx,0xbdab293e
  40a02d:	xor    esi,DWORD PTR [ebp-0x37]
  40a030:	jmp    0x40a055
  40a032:	cwde   
  40a033:	push   edi
  40a034:	enter  0x87b4,0xf1
  40a038:	sub    DWORD PTR [ebp-0x61b352b4],edi
  40a03e:	dec    esi
  40a03f:	call   0xd465426d
  40a044:	scas   al,BYTE PTR es:[edi]
  40a045:	into   
  40a046:	(bad)  
  40a048:	repnz dec edx
  40a04a:	inc    ebx
  40a04b:	mov    edx,0x57dc839
  40a050:	xchg   edx,eax
  40a051:	popf   
  40a052:	cmp    ebp,ebp
  40a054:	pop    eax
  40a055:	daa    
  40a056:	lock mov ss:0xf521cd,eax
  40a05d:	xor    al,0xee
  40a05f:	fadd   st(4),st
  40a061:	pop    edi
  40a062:	push   0xda015e31
  40a067:	in     eax,dx
  40a068:	out    dx,al
  40a069:	imul   esi,DWORD PTR [ebx-0x7a],0x41
  40a06d:	push   ebp
  40a06e:	(bad)  [edx]
  40a070:	js     0x40a09f
  40a072:	cdq    
  40a073:	xchg   BYTE PTR [esi],bh
  40a075:	jge    0x40a09c
  40a077:	scas   eax,DWORD PTR es:[edi]
  40a078:	mov    bh,0x3c
  40a07a:	shr    bl,cl
  40a07c:	or     BYTE PTR [ebx],ch
  40a07e:	into   
  40a07f:	rol    BYTE PTR [eax+ecx*8],cl
  40a082:	cmp    al,0x55
  40a084:	and    eax,DWORD PTR [edx]
  40a086:	daa    
  40a087:	imul   esp,DWORD PTR [eax+0x28f58959],0x6d
  40a08e:	cmp    BYTE PTR [eax-0x49],dh
  40a091:	cmp    BYTE PTR [edx+0x30],cl
  40a094:	lock lahf 
  40a096:	inc    esi
  40a097:	jecxz  0x40a0ad
  40a099:	std    
  40a09a:	xchg   ecx,eax
  40a09b:	(bad)  
  40a09c:	push   ss
  40a09d:	out    0x61,eax
  40a09f:	push   0x2b
  40a0a1:	inc    esp
  40a0a2:	or     esp,edi
  40a0a4:	pop    ebx
  40a0a5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a0a6:	scas   al,BYTE PTR es:[edi]
  40a0a7:	inc    eax
  40a0a8:	or     BYTE PTR [esi-0x9809bf3],bl
  40a0ae:	repz dec esp
  40a0b0:	fldenv [esi-0x47]
  40a0b3:	dec    edx
  40a0b4:	mov    ah,0x5
  40a0b6:	mov    BYTE PTR [edx],al
  40a0b8:	ja     0x40a0e9
  40a0ba:	(bad)  
  40a0bb:	or     ch,BYTE PTR ds:0x9e149248
  40a0c1:	pop    ebx
  40a0c2:	add    dh,BYTE PTR [esi]
  40a0c4:	xor    al,0x19
  40a0c6:	xor    al,0x74
  40a0c8:	xchg   edi,eax
  40a0c9:	dec    ebp
  40a0ca:	mov    BYTE PTR ds:0x9f130f7d,bl
  40a0d0:	jae    0x40a14f
  40a0d2:	retf   0x2b69
  40a0d5:	adc    bl,BYTE PTR [ecx]
  40a0d7:	xor    DWORD PTR [ebx-0x671ba342],esp
  40a0dd:	aaa    
  40a0de:	arpl   bp,sp
  40a0e0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a0e1:	(bad)  
  40a0e2:	fsub   st(4),st
  40a0e4:	cwde   
  40a0e5:	fcom   DWORD PTR [edx+0x10]
  40a0e8:	in     al,dx
  40a0e9:	mov    al,0x56
  40a0eb:	push   es
  40a0ec:	lock out dx,eax
  40a0ee:	ror    DWORD PTR [eax+0x68ddf323],1
  40a0f4:	jge    0x40a104
  40a0f6:	mov    dh,0x74
  40a0f8:	call   DWORD PTR [esi-0x47f2dd22]
  40a0fe:	aam    0xbc
  40a100:	ds inc esp
  40a102:	inc    edx
  40a103:	mov    dl,0xfc
  40a105:	sub    eax,0x83cd5367
  40a10a:	loop   0x40a0b9
  40a10c:	mov    edx,0x4c84fe1e
  40a111:	sbb    esi,esp
  40a113:	mov    al,0xc0
  40a115:	fisubr DWORD PTR [edi+edi*8]
  40a118:	sub    DWORD PTR [edx],esp
  40a11a:	and    esi,DWORD PTR [edx]
  40a11c:	mov    esp,0x21a9637f
  40a121:	aaa    
  40a122:	and    edi,ebp
  40a124:	fsub   st(5),st
  40a126:	xchg   edi,eax
  40a127:	aaa    
  40a128:	mov    WORD PTR ds:0xa86ecce0,ds
  40a12e:	jb     0x40a19c
  40a130:	fcom   DWORD PTR [esi+0x27]
  40a133:	jns    0x40a12a
  40a135:	adc    ch,al
  40a137:	mov    esp,0x2f06644f
  40a13c:	dec    ebp
  40a13d:	sahf   
  40a13e:	add    al,0xb8
  40a140:	or     BYTE PTR [edi-0x4415f598],bh
  40a146:	(bad)  
  40a147:	adc    BYTE PTR [ebx],dh
  40a149:	(bad)  
  40a14a:	stc    
  40a14b:	gs jmp 0xc2f5:0xcbd8fed
  40a153:	mov    ds,WORD PTR [ecx+0x16bb57d9]
  40a159:	push   esi
  40a15a:	or     dl,ch
  40a15c:	sbb    edx,ecx
  40a15e:	shl    DWORD PTR [edx-0x5609ad9],cl
  40a164:	jmp    0x40a164
  40a166:	jg     0x40a16d
  40a168:	bound  ecx,QWORD PTR [ecx+0x381a86f8]
  40a16e:	stos   BYTE PTR es:[edi],al
  40a16f:	retf   
  40a170:	or     eax,0xfbb3596a
  40a175:	not    bh
  40a177:	add    al,0x1b
  40a179:	arpl   WORD PTR [esi-0xc],ax
  40a17c:	mov    WORD PTR [esi],?
  40a17e:	cwde   
  40a17f:	aad    0x47
  40a181:	jle    0x40a1ae
  40a183:	dec    ebp
  40a184:	sbb    bh,BYTE PTR [eax+ecx*4-0x1d]
  40a188:	pop    edx
  40a189:	jmp    0xf3cad4d2
  40a18e:	aad    0x20
  40a190:	clc    
  40a191:	push   cs
  40a192:	imul   edx,ebp,0xc0378506
  40a198:	rcl    DWORD PTR [ebp-0x22],cl
  40a19b:	add    BYTE PTR ds:0x4422bac7,ah
  40a1a1:	push   eax
  40a1a2:	popf   
  40a1a3:	pop    edi
  40a1a4:	xchg   ebx,eax
  40a1a5:	aas    
  40a1a6:	push   edi
  40a1a7:	pushf  
  40a1a8:	inc    ecx
  40a1a9:	jno    0x40a15f
  40a1ab:	mul    DWORD PTR ds:0x544e33fb
  40a1b1:	cmp    esi,DWORD PTR [edi+0x54]
  40a1b4:	sub    cl,dh
  40a1b6:	push   es
  40a1b7:	cmp    DWORD PTR [ebx],edi
  40a1b9:	mov    esi,DWORD PTR [eax+0x25]
  40a1bc:	stos   DWORD PTR es:[edi],eax
  40a1bd:	aaa    
  40a1be:	outs   dx,DWORD PTR ds:[esi]
  40a1bf:	fdiv   st(0),st
  40a1c1:	in     eax,dx
  40a1c2:	mov    cs,WORD PTR [edi+ebx*1+0x9da301]
  40a1c9:	nop
  40a1ca:	cmp    DWORD PTR [ebx-0x66],0x5ceeaebb
  40a1d1:	in     eax,0x18
  40a1d3:	out    0xb3,eax
  40a1d5:	mov    ch,0x44
  40a1d8:	dec    ecx
  40a1d9:	mov    ah,0x9d
  40a1db:	inc    edi
  40a1dc:	mov    ds:0x3917db71,al
  40a1e1:	(bad)  
  40a1e2:	test   BYTE PTR [edx-0xd94826b],dl
  40a1e8:	push   edi
  40a1e9:	sbb    DWORD PTR [ebx+edi*1+0x5b],esp
  40a1ed:	adc    eax,0x7695cac1
  40a1f2:	fwait
  40a1f3:	test   dl,ah
  40a1f5:	xor    DWORD PTR [edx+edx*2-0x788c685d],ebx
  40a1fc:	imul   esp,esi,0x7d2d4117
  40a202:	mov    eax,ds:0xaa94030a
  40a207:	repz pop ecx
  40a209:	int    0x5
  40a20b:	(bad)  
  40a20c:	dec    esi
  40a20d:	and    eax,0x2e527579
  40a212:	sub    ch,BYTE PTR [ebx-0x1faf0539]
  40a218:	js     0x40a1e9
  40a21a:	mov    ebp,0x92e0992
  40a21f:	push   eax
  40a220:	push   esp
  40a221:	mov    DWORD PTR [edi+ebx*2+0x1355a1d0],ebx
  40a228:	mov    DWORD PTR [edx+ebx*1],ebp
  40a22b:	ret    
  40a22c:	int    0x2b
  40a22e:	inc    ecx
  40a22f:	stos   DWORD PTR es:[edi],eax
  40a230:	ret    0x3a20
  40a233:	mov    ebx,edx
  40a235:	xchg   esp,eax
  40a236:	mov    WORD PTR [esi-0x34],fs
  40a239:	dec    esp
  40a23a:	fild   DWORD PTR [ebp-0xf]
  40a23d:	imul   edi,DWORD PTR ds:0x3ba9ace2,0x7e
  40a244:	shl    BYTE PTR [ecx+0x58c3a94],0x1b
  40a24b:	sbb    al,0x78
  40a24d:	loope  0x40a2be
  40a24f:	xchg   edx,eax
  40a250:	js     0x40a20c
  40a252:	or     BYTE PTR [edi],al
  40a254:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a255:	stos   BYTE PTR es:[edi],al
  40a256:	sti    
  40a257:	jg     0x40a240
  40a259:	mov    bh,0xca
  40a25b:	(bad)  
  40a25c:	sub    esi,ebx
  40a25e:	loop   0x40a2db
  40a260:	or     BYTE PTR [edi+ebx*1],dh
  40a263:	cmp    WORD PTR [ebx+0x51dc1e5b],sp
  40a26a:	mov    eax,ds:0x18f1bca9
  40a26f:	pop    esi
  40a270:	enter  0x4ec6,0x4e
  40a274:	(bad)  
  40a275:	scas   al,BYTE PTR es:[edi]
  40a276:	jl     0x40a2a3
  40a278:	mov    dl,BYTE PTR [eax+0x7e]
  40a27b:	fstp   DWORD PTR [edi-0xeb862dd]
  40a281:	sub    edi,DWORD PTR gs:[ebp-0xd98bc92]
  40a288:	cmc    
  40a289:	loope  0x40a223
  40a28b:	sbb    BYTE PTR [ebx+0x363e1a35],cl
  40a291:	test   eax,0xa402e45
  40a296:	imul   esi,DWORD PTR [esi+eax*2-0x47],0x598164f1
  40a29e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a29f:	outs   dx,DWORD PTR ds:[esi]
  40a2a0:	pop    edi
  40a2a1:	xchg   ecx,eax
  40a2a2:	dec    ebx
  40a2a3:	fcomi  st,st(5)
  40a2a5:	imul   esi,esp,0xffffffde
  40a2a8:	mov    ebx,0x117dfcd8
  40a2ad:	add    DWORD PTR [eax],ebx
  40a2af:	xor    DWORD PTR [esi],0x5f
  40a2b2:	popf   
  40a2b3:	inc    esi
  40a2b4:	jo     0x40a254
  40a2b6:	in     eax,0x6
  40a2b8:	add    bh,BYTE PTR [edi+0x4]
  40a2bb:	fdivp  st(5),st
  40a2bd:	pop    ebx
  40a2be:	retf   0xdf20
  40a2c1:	xchg   ebx,ebp
  40a2c3:	data16 cli 
  40a2c5:	sbb    ecx,DWORD PTR [ebx+0x2c1433aa]
  40a2cb:	(bad)  
  40a2cc:	inc    eax
  40a2cd:	sbb    DWORD PTR [eax+0x600b3d65],ebp
  40a2d3:	or     BYTE PTR [ebp+0x61],bl
  40a2d6:	mov    WORD PTR [ebx+0x27c7654],es
  40a2dc:	push   esi
  40a2dd:	out    dx,al
  40a2de:	cmp    DWORD PTR [ebx-0x1b],esi
  40a2e1:	dec    edx
  40a2e2:	push   edx
  40a2e3:	xor    BYTE PTR [edi+eiz*8],cl
  40a2e6:	gs jmp 0x5410:0x58d67902
  40a2ee:	rcl    DWORD PTR [esi],cl
  40a2f0:	pusha  
  40a2f1:	xchg   edx,eax
  40a2f2:	sbb    al,0x5a
  40a2f4:	test   BYTE PTR [edx-0x21],dl
  40a2f7:	hlt    
  40a2f8:	arpl   dx,bp
  40a2fa:	fistp  QWORD PTR [ecx+0x2e]
  40a2fd:	mov    edi,0x482b017b
  40a302:	pop    edx
  40a303:	add    ebx,DWORD PTR [ecx+0x4f]
  40a306:	scas   eax,DWORD PTR es:[edi]
  40a307:	retf   0xd9d5
  40a30a:	jb     0x40a302
  40a30c:	mov    ebp,0x19cb214c
  40a311:	ss cmp al,0x69
  40a314:	cmp    eax,0xa8ff2de3
  40a319:	add    BYTE PTR [edi],al
  40a31b:	addr16 in eax,dx
  40a31d:	cmp    cl,bl
  40a31f:	inc    esi
  40a320:	mov    ebx,0xdd9f0b0d
  40a325:	cld    
  40a326:	jmp    DWORD PTR [edi+0x1b]
  40a329:	inc    ecx
  40a32a:	in     eax,dx
  40a32b:	jmp    0x50fe903b
  40a330:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a331:	ds bswap ebx
  40a334:	jae    0x40a39b
  40a336:	jno    0x40a345
  40a338:	fwait
  40a339:	imul   esi,edi,0x3ec163d6
  40a33f:	jnp    0x40a36f
  40a341:	push   ss
  40a342:	cmc    
  40a343:	cmp    DWORD PTR [edx],ecx
  40a345:	in     eax,dx
  40a346:	sub    al,0x21
  40a348:	cmp    BYTE PTR [edx+0x173ccba9],cl
  40a34e:	aas    
  40a34f:	mov    dh,0x47
  40a351:	mov    ah,BYTE PTR [esi]
  40a353:	pop    esi
  40a354:	cmp    al,0xb2
  40a356:	cmp    DWORD PTR [ebx-0x1fce1aa2],edx
  40a35c:	(bad)  
  40a360:	mov    edi,gs
  40a362:	(bad)  
  40a363:	xchg   edx,eax
  40a364:	push   ecx
  40a365:	mov    al,0xbe
  40a367:	in     al,dx
  40a368:	jmp    0x666:0xa06827df
  40a36f:	push   cs
  40a370:	sbb    ah,BYTE PTR [ecx+0x73c5b2ed]
  40a376:	ja     0x40a36d
  40a378:	enter  0xdf9f,0xb
  40a37c:	mov    DWORD PTR [ecx+eax*8-0x5aa7fbc1],edi
  40a383:	dec    eax
  40a384:	cmp    ecx,DWORD PTR [ecx]
  40a386:	dec    esp
  40a387:	es adc al,0x78
  40a38a:	test   al,0x12
  40a38c:	xchg   ebp,eax
  40a38d:	push   ebx
  40a38e:	cld    
  40a38f:	jmp    0x8d7a:0x23b13320
  40a396:	adc    DWORD PTR [ebx+0x46b99cd3],esp
  40a39c:	dec    edi
  40a39d:	dec    edx
  40a39e:	sub    al,0x52
  40a3a0:	in     al,0x81
  40a3a2:	jne    0x40a363
  40a3a4:	aaa    
  40a3a5:	push   ebp
  40a3a6:	mov    esi,0xfb01326e
  40a3ab:	(bad)  
  40a3ad:	sub    al,dl
  40a3af:	loopne 0x40a399
  40a3b1:	mov    al,0x68
  40a3b3:	mov    ebx,0x4c6a8b2e
  40a3b8:	xlat   BYTE PTR ds:[ebx]
  40a3b9:	dec    edi
  40a3ba:	inc    ebp
  40a3bb:	sub    ebp,DWORD PTR [edx+esi*8-0x10a64a17]
  40a3c2:	jns    0x40a436
  40a3c4:	aad    0xf8
  40a3c6:	jne    0x40a3f9
  40a3c8:	jmp    0x93cd:0xeee4e24f
  40a3cf:	inc    edi
  40a3d0:	ja     0x40a43b
  40a3d2:	cdq    
  40a3d3:	repz daa 
  40a3d5:	mul    BYTE PTR [eax+0x7f]
  40a3d8:	fild   DWORD PTR ds:0xf3982f22
  40a3de:	retf   
  40a3df:	mov    esi,0xb1bc2f0d
  40a3e4:	push   0xffffffca
  40a3e6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a3e7:	cmp    BYTE PTR [ecx],ch
  40a3e9:	and    bl,al
  40a3eb:	std    
  40a3ec:	mov    fs,WORD PTR [ebx+0x5c912714]
  40a3f2:	cs loope 0x40a42a
  40a3f5:	pop    ebp
  40a3f6:	jbe    0x40a452
  40a3f8:	bound  ebx,QWORD PTR [esi]
  40a3fa:	fs adc al,0xa7
  40a3fd:	jns    0x40a3be
  40a3ff:	jg     0x40a472
  40a401:	jbe    0x40a410
  40a403:	push   edx
  40a404:	shl    DWORD PTR [edi+0x661b6107],0x3e
  40a40b:	shr    bh,cl
  40a40d:	das    
  40a40e:	jmp    0xd904:0x23c1353a
  40a415:	push   esi
  40a416:	outs   dx,DWORD PTR ds:[esi]
  40a417:	xor    edi,DWORD PTR [ebx+0x4b]
  40a41a:	and    al,0xb1
  40a41c:	cli    
  40a41d:	jp     0x40a461
  40a41f:	push   esp
  40a420:	ror    BYTE PTR [edi+esi*8],0x39
  40a424:	pusha  
  40a425:	popf   
  40a426:	pop    ss
  40a427:	pop    ds
  40a428:	arpl   WORD PTR [ecx],si
  40a42a:	jecxz  0x40a3c7
  40a42c:	jns    0x40a483
  40a42e:	pop    esp
  40a42f:	sbb    eax,DWORD PTR [ebp-0x7f]
  40a432:	pop    ds
  40a433:	mov    al,ds:0x2aaa621f
  40a438:	sbb    DWORD PTR [ebx-0x4a],ebp
  40a43b:	in     al,0xfd
  40a43d:	push   edi
  40a43e:	mov    ebx,0x80f83924
  40a443:	stc    
  40a444:	cmp    eax,0xa8330388
  40a449:	mov    eax,0x38b967d9
  40a44e:	adc    esi,ebx
  40a450:	inc    ebx
  40a451:	mov    ch,0x2f
  40a453:	jp     0x40a46f
  40a455:	mov    ecx,0xf4c8f5e1
  40a45a:	adc    bl,BYTE PTR [ebx+0x292de4ce]
  40a460:	das    
  40a461:	mov    esp,0xe0005d12
  40a466:	pop    edx
  40a467:	ficom  DWORD PTR [ebx-0x3511186f]
  40a46d:	dec    edi
  40a46e:	jmp    0x40a4e9
  40a470:	cmp    DWORD PTR [ebp-0x67],esi
  40a473:	mov    cl,0xca
  40a475:	add    ebp,ecx
  40a477:	ins    DWORD PTR es:[edi],dx
  40a478:	neg    BYTE PTR [ecx+0x7341f662]
  40a47e:	lock jg 0x40a4e1
  40a481:	inc    esi
  40a482:	ror    esi,0x54
  40a485:	cli    
  40a486:	fidivr WORD PTR [ecx-0x14f31abc]
  40a48c:	xchg   ecx,eax
  40a48d:	mov    ds:0x9e583c0f,eax
  40a492:	adc    ecx,DWORD PTR [ebp-0x50]
  40a495:	ss adc eax,0x24db5ab2
  40a49b:	xchg   ebp,eax
  40a49c:	cmp    BYTE PTR [ebx],ch
  40a49e:	jns    0x40a50e
  40a4a0:	inc    eax
  40a4a1:	out    dx,al
  40a4a2:	int3   
  40a4a3:	clc    
  40a4a4:	ds daa 
  40a4a6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a4a7:	mov    eax,ds:0xbd714b7b
  40a4ac:	cwde   
  40a4ad:	sbb    eax,0xc544a8dc
  40a4b2:	jno    0x40a45a
  40a4b4:	xchg   ebp,eax
  40a4b5:	ins    DWORD PTR es:[edi],dx
  40a4b6:	aaa    
  40a4b7:	push   0x142f36f6
  40a4bc:	push   cs
  40a4bd:	mov    eax,ds:0x1459d7fc
  40a4c2:	inc    ebx
  40a4c3:	cld    
  40a4c4:	adc    ch,BYTE PTR [ebp+0x58]
  40a4c7:	jnp    0x40a4a8
  40a4c9:	xchg   edx,eax
  40a4ca:	sbb    esp,DWORD PTR [ebx]
  40a4cc:	shl    bh,1
  40a4ce:	out    0xbb,al
  40a4d0:	sub    eax,esp
  40a4d2:	shl    BYTE PTR [esi],cl
  40a4d4:	push   cs
  40a4d5:	rol    DWORD PTR [eax-0x4749d322],cl
  40a4db:	or     eax,0xf73c3a93
  40a4e0:	mov    ecx,0x52f2ccb3
  40a4e5:	rol    BYTE PTR ds:0xbad2df03,1
  40a4eb:	adc    eax,0x27325d13
  40a4f0:	out    0x47,eax
  40a4f2:	dec    ebp
  40a4f3:	add    dl,BYTE PTR [ecx+0x40db105a]
  40a4f9:	or     eax,0xe15681bc
  40a4fe:	(bad)  
  40a4ff:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a500:	call   0xe1d56738
  40a505:	jbe    0x40a4fb
  40a507:	inc    ebp
  40a508:	mov    dl,0xb4
  40a50a:	adc    BYTE PTR [eax-0x6ce4ed2d],al
  40a510:	ds retf 0xb123
  40a514:	sbb    eax,0x42436a9a
  40a519:	jp     0x40a529
  40a51b:	in     eax,dx
  40a51c:	je     0x40a54d
  40a51e:	ror    DWORD PTR [esi-0x66166bb9],0x42
  40a525:	in     eax,0x59
  40a527:	lods   eax,DWORD PTR ds:[esi]
  40a528:	hlt    
  40a529:	sbb    DWORD PTR [edi],ebx
  40a52b:	sub    BYTE PTR [ebx-0xc15cd2d],al
  40a531:	jnp    0x40a5a3
  40a533:	out    dx,eax
  40a534:	call   0x79859d65
  40a539:	in     al,dx
  40a53a:	or     eax,0xd7576093
  40a53f:	dec    esi
  40a540:	pop    edx
  40a541:	(bad)  
  40a542:	sbb    al,0x6a
  40a544:	sub    DWORD PTR [ecx-0x62],edi
  40a547:	clc    
  40a548:	mov    ds:0xf57a318e,eax
  40a54d:	fcmovnbe st,st(6)
  40a54f:	clc    
  40a550:	lahf   
  40a551:	xor    DWORD PTR [ebx],eax
  40a553:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a554:	adc    DWORD PTR [esi-0x2b],0x47
  40a558:	sbb    dh,BYTE PTR [eax+0x2c]
  40a55b:	push   edi
  40a55c:	pop    ss
  40a55d:	sub    BYTE PTR [edx+0x68],bl
  40a560:	fwait
  40a561:	ret    
  40a562:	jbe    0x40a547
  40a564:	mov    bh,0x89
  40a566:	jge    0x40a5d8
  40a568:	cmp    DWORD PTR [edx],edi
  40a56a:	imul   eax
  40a56c:	add    edx,DWORD PTR ds:0x920c4ef2
  40a572:	dec    edx
  40a573:	jno    0x40a5d2
  40a575:	ret    
  40a576:	xor    bl,BYTE PTR [ebx-0x75]
  40a579:	test   eax,0x2d60f9f8
  40a57e:	jno    0x40a57b
  40a580:	lods   al,BYTE PTR ds:[esi]
  40a581:	jne    0x40a53a
  40a583:	cld    
  40a584:	mov    dl,BYTE PTR [esi]
  40a586:	js     0x40a5c1
  40a588:	gs fs cmp al,0x97
  40a58c:	push   esi
  40a58d:	pop    eax
  40a58e:	mov    ah,0xad
  40a590:	loope  0x40a536
  40a592:	loop   0x40a568
  40a594:	(bad)  
  40a595:	xchg   ebp,eax
  40a596:	mov    ebp,DWORD PTR ds:0x406e598d
  40a59c:	sub    eax,0x1a3556d0
  40a5a1:	add    ecx,DWORD PTR [esi+0x40df59a1]
  40a5a7:	jp     0x40a52a
  40a5a9:	cli    
  40a5aa:	(bad)  
  40a5ab:	mov    ds:0x783b3d01,eax
  40a5b0:	mov    edx,0xe4fd8886
  40a5b5:	jne    0x40a62c
  40a5b7:	adc    ah,ch
  40a5b9:	arpl   WORD PTR [ecx-0x5d],cx
  40a5bc:	push   ecx
  40a5bd:	add    DWORD PTR [eax+ebx*1+0x7984cedb],0xffffffe3
  40a5c5:	cmp    al,0xb
  40a5c7:	sub    eax,0xda42a89e
  40a5cc:	jecxz  0x40a62a
  40a5ce:	sbb    al,0x5c
  40a5d0:	rcl    BYTE PTR [ebx],1
  40a5d2:	arpl   WORD PTR [edi],di
  40a5d4:	xor    al,0x2b
  40a5d6:	loopne 0x40a5b2
  40a5d8:	push   0x881d12b2
  40a5dd:	cmc    
  40a5de:	enter  0x29a6,0x4c
  40a5e2:	popf   
  40a5e3:	div    DWORD PTR [bx+di+0xf]
  40a5e7:	pop    es
  40a5e8:	sub    cl,0x4e
  40a5eb:	sub    eax,0x148b8f03
  40a5f0:	push   ds
  40a5f1:	repz pop ecx
  40a5f3:	cmp    DWORD PTR [eax+edx*4+0x1390ef3d],ecx
  40a5fa:	sub    bl,BYTE PTR [ecx+edi*8+0xe]
  40a5fe:	and    DWORD PTR [eax-0x5c26266],eax
  40a604:	push   ebp
  40a605:	test   al,ch
  40a607:	test   eax,0x7137a7dd
  40a60c:	(bad)  
  40a60d:	enter  0x1134,0xaf
  40a611:	mov    WORD PTR ss:[esi],?
  40a614:	daa    
  40a615:	add    BYTE PTR cs:0xfe4c9b93,0xb6
  40a61d:	xchg   ecx,eax
  40a61e:	sbb    ch,ah
  40a620:	mov    ecx,0x51396b6d
  40a625:	or     BYTE PTR [edx+0x20ba70bf],al
  40a62b:	mov    ch,0x29
  40a62d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a62e:	outs   dx,DWORD PTR ds:[esi]
  40a62f:	and    edi,edi
  40a631:	call   0x76bc8524
  40a636:	xchg   esi,eax
  40a637:	arpl   WORD PTR [ebp+0x8],ax
  40a63a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a63b:	mov    ecx,0x941022ef
  40a640:	ja     0x40a5e6
  40a642:	inc    esi
  40a643:	xlat   BYTE PTR ds:[ebx]
  40a644:	cli    
  40a645:	xor    al,0x67
  40a647:	stc    
  40a648:	adc    dl,0x88
  40a64b:	inc    ecx
  40a64c:	cli    
  40a64d:	pop    es
  40a64e:	add    BYTE PTR [ebx],bh
  40a650:	ja     0x40a607
  40a652:	aad    0xa
  40a654:	adc    edx,DWORD PTR [esi]
  40a656:	pop    edi
  40a657:	in     eax,dx
  40a658:	rcl    cl,0x7f
  40a65b:	adc    edi,DWORD PTR [ebp+ebp*4-0x6c016a64]
  40a662:	aam    0xe9
  40a664:	loop   0x40a6cf
  40a666:	popa   
  40a667:	cmp    ch,BYTE PTR [eax+0x70]
  40a66a:	mov    bh,0x7a
  40a66c:	mov    edx,0x9496c429
  40a671:	fs xchg esi,eax
  40a673:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a674:	hlt    
  40a675:	jnp    0x40a691
  40a677:	ins    DWORD PTR es:[edi],dx
  40a678:	pop    esi
  40a679:	mov    eax,ds:0x54e070f0
  40a67e:	cmp    DWORD PTR [edx-0x51],edi
  40a681:	jmp    0x8f2c:0x43a50909
  40a688:	dec    edi
  40a689:	in     eax,0xda
  40a68b:	jb     0x40a61d
  40a68d:	and    edi,ebp
  40a68f:	dec    ebx
  40a690:	mov    ebp,0x7c1a6720
  40a695:	dec    ebp
  40a696:	sahf   
  40a697:	or     eax,0x95150a9b
  40a69c:	cmp    DWORD PTR [eax+0x78b72cc6],edx
  40a6a2:	jae    0x40a69c
  40a6a4:	fwait
  40a6a5:	adc    ch,BYTE PTR [ebx]
  40a6a7:	loope  0x40a6a8
  40a6a9:	pop    esi
  40a6aa:	inc    esp
  40a6ab:	mov    ecx,0xbf88337e
  40a6b0:	in     eax,dx
  40a6b1:	jb     0x40a6be
  40a6b3:	sub    BYTE PTR [ebp-0x11383cd4],bh
  40a6b9:	sti    
  40a6ba:	fdiv   DWORD PTR [esi-0x37]
  40a6bd:	cmp    al,bh
  40a6bf:	(bad)  
  40a6c0:	outs   dx,BYTE PTR ds:[esi]
  40a6c1:	(bad)  
  40a6c3:	mov    ebp,0x517ce697
  40a6c8:	sbb    BYTE PTR [eax+0x70c9730c],dl
  40a6ce:	mov    edi,0xc02b6813
  40a6d3:	ret    0x814e
  40a6d6:	cmc    
  40a6d7:	mov    al,gs:0x6dd75288
  40a6dd:	pop    es
  40a6de:	loope  0x40a6c6
  40a6e0:	(bad)  
  40a6e1:	(bad)  
  40a6e2:	xchg   ebx,eax
  40a6e3:	mov    dl,0x13
  40a6e5:	imul   edi,DWORD PTR [eax-0x6a],0xb8d5b881
  40a6ec:	cmp    edx,DWORD PTR [ebx]
  40a6ee:	jge    0x40a6c8
  40a6f0:	rcr    BYTE PTR [ebx+0x1edb755c],1
  40a6f6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a6f7:	pop    esp
  40a6f8:	inc    esp
  40a6f9:	out    0xde,eax
  40a6fb:	pop    ebp
  40a6fc:	inc    eax
  40a6fd:	in     eax,0xee
  40a6ff:	aad    0x43
  40a701:	repz ret 
  40a703:	sbb    ebx,ecx
  40a705:	inc    ebp
  40a706:	dec    ebp
  40a707:	daa    
  40a708:	imul   ebx,DWORD PTR [esi],0x2e4093dd
  40a70e:	out    0xc7,al
  40a710:	sub    bl,bh
  40a712:	ror    bl,0xd1
  40a715:	push   ds
  40a716:	xor    al,0x66
  40a718:	sahf   
  40a719:	gs inc ebx
  40a71b:	dec    esi
  40a71c:	cld    
  40a71d:	mov    al,ds:0xd51f3ac7
  40a722:	loope  0x40a6b1
  40a724:	mov    esp,0xc0610f80
  40a729:	daa    
  40a72a:	dec    edx
  40a72b:	outs   dx,DWORD PTR ds:[esi]
  40a72c:	(bad)  
  40a72d:	jmp    0x40a6c4
  40a72f:	and    al,0x34
  40a731:	pop    ds
  40a732:	xchg   ebx,eax
  40a733:	sub    DWORD PTR [eax],edx
  40a735:	mov    ecx,0x64a031f4
  40a73a:	dec    edx
  40a73b:	icebp  
  40a73c:	pop    ds
  40a73d:	mov    edi,0x38861712
  40a742:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a743:	push   fs
  40a745:	xchg   DWORD PTR [ebx+ebp*2],ebp
  40a748:	or     ah,BYTE PTR [eax+0xb491022]
  40a74e:	pop    edx
  40a74f:	mov    ecx,DWORD PTR [esi]
  40a751:	in     eax,dx
  40a752:	or     eax,0x9120125d
  40a757:	clc    
  40a758:	jno    0x40a799
  40a75a:	mov    ecx,0x77d2d213
  40a75f:	clc    
  40a760:	push   esp
  40a761:	retf   0x1f15
  40a764:	fstp   QWORD PTR [edi+esi*8]
  40a767:	xor    dh,BYTE PTR [ebp+0x4d]
  40a76a:	mov    dl,0x57
  40a76c:	cmp    al,0xcc
  40a76e:	scas   eax,DWORD PTR es:[edi]
  40a76f:	push   ebp
  40a770:	pop    ss
  40a771:	jmp    0xc333:0xa405c2d9
  40a778:	pop    edx
  40a779:	mov    dl,0x13
  40a77b:	retf   0xcf4f
  40a77e:	mov    ch,0x48
  40a780:	sbb    al,0x2e
  40a782:	ret    
  40a783:	rcl    edi,1
  40a785:	mov    ebp,0xa46daa4c
  40a78a:	retf   0xc49f
  40a78d:	mov    ?,WORD PTR [esi]
  40a78f:	mov    edi,0x6110f6ca
  40a794:	jg     0x40a7fd
  40a796:	push   es
  40a797:	loop   0x40a7f6
  40a799:	scas   eax,DWORD PTR es:[edi]
  40a79a:	and    eax,0x4efc9483
  40a79f:	push   eax
  40a7a0:	scas   al,BYTE PTR es:[edi]
  40a7a1:	je     0x40a780
  40a7a3:	shr    ebp,1
  40a7a5:	pop    eax
  40a7a6:	push   ebx
  40a7a7:	xor    al,0xdb
  40a7a9:	call   0xaa14e287
  40a7ae:	jecxz  0x40a783
  40a7b0:	cmp    eax,0x6548eb2b
  40a7b5:	leave  
  40a7b6:	shr    DWORD PTR [eax+0x27],cl
  40a7b9:	push   eax
  40a7ba:	jo     0x40a7ff
  40a7bc:	clc    
  40a7bd:	xor    DWORD PTR [ecx+ecx*8-0x1b],edi
  40a7c1:	lds    ecx,FWORD PTR [ecx+0x51]
  40a7c4:	mov    eax,ds:0x3d515ce7
  40a7c9:	mov    esp,ds
  40a7cb:	add    dh,dh
  40a7cd:	mov    edi,0xbce4bdcc
  40a7d2:	cmp    ch,0x28
  40a7d5:	sub    dh,al
  40a7d7:	rcl    BYTE PTR [ecx+ebp*2-0x1fa3418a],cl
  40a7de:	jp     0x40a7e4
  40a7e0:	pop    ebp
  40a7e1:	in     al,0x11
  40a7e3:	stc    
  40a7e4:	fcom   QWORD PTR ds:0x86836859
  40a7ea:	idiv   DWORD PTR [esp+edx*4]
  40a7ed:	sbb    DWORD PTR [edi+0x1c],0x1a600aaf
  40a7f4:	sub    bl,bh
  40a7f6:	cli    
  40a7f7:	jb     0x40a82e
  40a7f9:	inc    ebp
  40a7fa:	xlat   BYTE PTR ds:[ebx]
  40a7fb:	stc    
  40a7fc:	jge    0x40a7a2
  40a7fe:	ja     0x40a7d3
  40a800:	jle    0x40a824
  40a802:	xchg   ebp,eax
  40a803:	repnz shl DWORD PTR [ebp+0x71],0x8a
  40a808:	cwde   
  40a809:	inc    ebx
  40a80a:	push   ebp
  40a80b:	idiv   ah
  40a80d:	xor    eax,0x855e4331
  40a812:	test   BYTE PTR [esi],cl
  40a814:	retf   
  40a815:	mov    al,0x2d
  40a817:	pop    esi
  40a818:	jg     0x40a846
  40a81a:	fistp  QWORD PTR [eax-0x7a]
  40a81d:	lods   al,BYTE PTR ds:[esi]
  40a81e:	ret    
  40a81f:	test   eax,0xb35aa246
  40a824:	fs je  0x40a89c
  40a827:	pop    esp
  40a828:	sub    al,0x6b
  40a82a:	pop    ecx
  40a82b:	in     eax,0x59
  40a82d:	sub    al,0x62
  40a82f:	adc    DWORD PTR [edx],ebp
  40a831:	or     BYTE PTR [edx+0x6f],dh
  40a834:	mov    dl,0x8c
  40a836:	xor    BYTE PTR [ebx+0x798886cd],ah
  40a83c:	shl    BYTE PTR [edi-0xa74a10b],cl
  40a842:	xor    al,bl
  40a844:	mov    al,0x23
  40a846:	mov    ebp,DWORD PTR [esi-0x15]
  40a849:	jp     0x40a7e4
  40a84b:	push   ebx
  40a84c:	adc    DWORD PTR [eax+0x4f],0xf33934b2
  40a853:	mov    esp,0xac9623df
  40a858:	cmp    ch,BYTE PTR [ebx]
  40a85a:	xor    ebp,edi
  40a85c:	ret    0xc28a
  40a85f:	or     esi,DWORD PTR [edi-0x31]
  40a862:	jo     0x40a8c9
  40a864:	dec    esi
  40a865:	sbb    BYTE PTR ds:0xc0d4b684,al
  40a86b:	pop    eax
  40a86c:	mov    ds:0x3dbcac7f,eax
  40a871:	mov    ebx,0xc78ebbfd
  40a876:	and    eax,0xffffff8f
  40a879:	or     esp,eax
  40a87b:	inc    edx
  40a87c:	or     DWORD PTR ds:[edx-0x2afcb0d3],0x53
  40a884:	(bad)  
  40a885:	icebp  
  40a886:	mov    ah,0x8c
  40a888:	cmc    
  40a889:	test   eax,esp
  40a88b:	inc    ebp
  40a88c:	sti    
  40a88d:	lahf   
  40a88e:	and    dl,BYTE PTR [ebx+0x0]
  40a891:	push   ebp
  40a892:	addr16 popa 
  40a894:	in     eax,dx
  40a895:	lahf   
  40a896:	push   es
  40a897:	pop    ebx
  40a898:	cld    
  40a899:	jmp    0x40a864
  40a89b:	rol    DWORD PTR [edx-0x5d],1
  40a89e:	inc    eax
  40a89f:	push   ebx
  40a8a0:	pop    esp
  40a8a1:	push   ebp
  40a8a2:	mov    ss,edx
  40a8a4:	sar    DWORD PTR [ebx+0x65f1c65f],cl
  40a8aa:	ja     0x40a8bd
  40a8ac:	cmp    DWORD PTR [esi+0x44],eax
  40a8af:	xchg   DWORD PTR [edi-0x1bfc5be5],ebp
  40a8b5:	jmp    0xefe5:0x442499a7
  40a8bc:	jg     0x40a8f8
  40a8be:	popa   
  40a8bf:	xlat   BYTE PTR ds:[ebx]
  40a8c0:	(bad)  
  40a8c1:	cs (bad) 
  40a8c3:	ins    BYTE PTR es:[edi],dx
  40a8c4:	ret    
  40a8c5:	stos   DWORD PTR es:[edi],eax
  40a8c6:	ret    0xd31e
  40a8c9:	mov    cl,0xd8
  40a8cb:	mov    ah,0x23
  40a8cd:	out    0xc2,al
  40a8cf:	inc    ebp
  40a8d0:	sbb    eax,0xb92d367c
  40a8d5:	mov    BYTE PTR [ebx],ah
  40a8d7:	or     ecx,ecx
  40a8d9:	pop    edi
  40a8da:	add    eax,0xaf2de067
  40a8df:	xor    bh,BYTE PTR [edi+0x567bfc2e]
  40a8e5:	fs sub ebp,esp
  40a8e8:	or     al,0x96
  40a8ea:	adc    bh,BYTE PTR [ebp+0x4]
  40a8ed:	(bad)
  40a8f1:	pop    esp
  40a8f2:	sar    edi,1
  40a8f4:	lock sub dh,BYTE PTR [eax+eiz*1]
  40a8f8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a8f9:	sub    DWORD PTR [ecx],edi
  40a8fb:	add    eax,DWORD PTR [ebx+0x759933ac]
  40a901:	sti    
  40a902:	jecxz  0x40a8da
  40a904:	pop    edi
  40a905:	mov    ecx,0xfd423f74
  40a90a:	cs ret 
  40a90c:	mov    ebx,ds
  40a90e:	mov    dh,0x67
  40a910:	ret    0xbb29
  40a913:	or     BYTE PTR ds:0xe5d6e995,ah
  40a919:	test   al,0x4f
  40a91b:	sbb    bh,cl
  40a91d:	pop    ds
  40a91e:	inc    ebx
  40a91f:	out    dx,al
  40a920:	push   ds
  40a921:	dec    ecx
  40a922:	inc    ecx
  40a923:	dec    ebp
  40a924:	sbb    dl,BYTE PTR [ecx-0x4d25c159]
  40a92a:	xor    ah,BYTE PTR [esi+0x26fcadd2]
  40a930:	cs popa 
  40a932:	int3   
  40a933:	sub    al,0x21
  40a935:	adc    edi,DWORD PTR [edi+0x7a29c9a1]
  40a93b:	lods   eax,DWORD PTR ds:[esi]
  40a93c:	sub    bh,BYTE PTR [edi]
  40a93e:	shr    DWORD PTR [ebx+ecx*2-0x2a],1
  40a942:	cmp    edx,esi
  40a944:	dec    edi
  40a945:	fwait
  40a946:	adc    cl,al
  40a948:	or     al,0xf3
  40a94a:	lds    esi,FWORD PTR [esi-0x60]
  40a94d:	cmc    
  40a94e:	and    eax,0x78327e28
  40a953:	inc    ebx
  40a954:	sub    edi,DWORD PTR [eax]
  40a956:	pusha  
  40a957:	fwait
  40a958:	retf   0x4ec6
  40a95b:	cli    
  40a95c:	retf   
  40a95d:	ds add al,0x10
  40a960:	sbb    ecx,edx
  40a962:	daa    
  40a963:	xchg   BYTE PTR [ecx+0x1fd8bfc7],bl
  40a969:	scas   eax,DWORD PTR es:[edi]
  40a96a:	push   ds
  40a96b:	mov    eax,ds:0xa665e5fc
  40a970:	iret   
  40a971:	loope  0x40a8fe
  40a973:	push   edi
  40a974:	inc    esi
  40a975:	sti    
  40a976:	and    bh,BYTE PTR [ebx]
  40a978:	aas    
  40a979:	mov    ds:0x126ff88f,eax
  40a97e:	or     edx,esp
  40a980:	push   0xfad6d5fe
  40a985:	(bad)  
  40a986:	jmp    DWORD PTR [esi]
  40a988:	std    
  40a989:	idiv   BYTE PTR [ebp-0x22]
  40a98c:	or     edx,edi
  40a98e:	pop    ss
  40a98f:	out    0xf9,eax
  40a991:	jl     0x40a9bb
  40a993:	push   es
  40a994:	mov    DWORD PTR [ecx+ebx*4],eax
  40a997:	push   ss
  40a998:	sub    edx,esi
  40a99a:	call   0xc6934de4
  40a99f:	mov    ebp,DWORD PTR [bx]
  40a9a2:	or     cl,bh
  40a9a4:	xor    DWORD PTR [ecx+0x15],edi
  40a9a7:	mov    edx,0xdb2c6b6e
  40a9ac:	sub    DWORD PTR [ebp+0x7046c828],eax
  40a9b2:	jecxz  0x40a984
  40a9b4:	dec    esp
  40a9b5:	mov    eax,0x69bd5a58
  40a9ba:	dec    ecx
  40a9bb:	sbb    BYTE PTR [edx+esi*4+0x1c544a12],bl
  40a9c2:	xor    BYTE PTR [edx],cl
  40a9c4:	std    
  40a9c5:	in     al,0x5
  40a9c7:	ror    DWORD PTR [eax+0x7ffb0908],1
  40a9cd:	scas   ax,WORD PTR es:[edi]
  40a9cf:	(bad)  
  40a9d0:	call   FWORD PTR [edx-0x54]
  40a9d3:	adc    eax,0xa3202c9f
  40a9d8:	dec    esi
  40a9d9:	jp     0x40a98e
  40a9db:	push   ebx
  40a9dc:	fisub  DWORD PTR [eax-0x562037ab]
  40a9e2:	pop    es
  40a9e3:	xchg   ah,bl
  40a9e5:	popf   
  40a9e6:	push   ds
  40a9e7:	adc    eax,0xde50bcdd
  40a9ec:	lods   al,BYTE PTR ds:[esi]
  40a9ed:	or     DWORD PTR [ebx-0x77],esp
  40a9f0:	xchg   ebp,eax
  40a9f1:	ins    BYTE PTR es:[edi],dx
  40a9f2:	dec    esi
  40a9f3:	mov    bh,BYTE PTR [esi]
  40a9f5:	in     al,dx
  40a9f6:	jmp    0x40aa0d
  40a9f8:	(bad)  
  40a9f9:	pop    edx
  40a9fa:	jnp    0x40a97e
  40a9fc:	mov    DWORD PTR [ebx],edx
  40a9fe:	sub    cl,BYTE PTR [esi+0xc]
  40aa01:	add    eax,0x8e73bf6b
  40aa06:	dec    esi
  40aa07:	data16 jne 0x40aa53
  40aa0a:	push   eax
  40aa0b:	inc    esp
  40aa0c:	loop   0x40aa74
  40aa0e:	fnstcw WORD PTR [eax-0x2d]
  40aa11:	xchg   ebp,eax
  40aa12:	mov    esi,0xbc9d6c34
  40aa17:	push   es
  40aa18:	xchg   ebp,eax
  40aa19:	jl     0x40aa81
  40aa1b:	mov    ds:0x3391f034,eax
  40aa20:	fsubr  st(3),st
  40aa22:	xchg   ebp,eax
  40aa23:	inc    eax
  40aa24:	mov    ebp,0x5e4cdf50
  40aa29:	std    
  40aa2a:	mul    ecx
  40aa2c:	mov    dl,0x12
  40aa2e:	int3   
  40aa2f:	imul   edi,DWORD PTR [eax-0x50a86813],0xffffff83
  40aa36:	imul   DWORD PTR [bp+di]
  40aa39:	(bad)  
  40aa3a:	fstp   QWORD PTR [edx]
  40aa3c:	jle    0x40aa1c
  40aa3e:	mov    ds:0x270f52f3,al
  40aa43:	xchg   ebp,eax
  40aa44:	mov    bl,0x2f
  40aa46:	lods   eax,DWORD PTR ds:[esi]
  40aa47:	jmp    0x40a9cf
  40aa49:	push   ebx
  40aa4a:	out    0x72,eax
  40aa4c:	outs   dx,DWORD PTR ds:[esi]
  40aa4d:	retf   
  40aa4e:	js     0x40a9d1
  40aa50:	xchg   esi,eax
  40aa51:	sar    BYTE PTR [ecx-0x1c],cl
  40aa54:	mov    al,ds:0xa960ea61
  40aa59:	fistp  WORD PTR [edx+0x519e9528]
  40aa5f:	sub    ebx,esi
  40aa61:	loopne 0x40aa61
  40aa63:	inc    ecx
  40aa64:	cdq    
  40aa65:	jmp    DWORD PTR [edi+0x29]
  40aa68:	leave  
  40aa69:	aas    
  40aa6a:	adc    al,0x13
  40aa6c:	sbb    ah,BYTE PTR [edi-0x30]
  40aa6f:	std    
  40aa70:	adc    eax,0x245ae2f7
  40aa75:	mov    ecx,0xb53b5939
  40aa7a:	(bad)  
  40aa7b:	sub    DWORD PTR [edi-0x74],edx
  40aa7e:	mov    ss,WORD PTR [ecx+edx*8]
  40aa81:	jle    0x40aa27
  40aa83:	adc    esi,ebp
  40aa85:	outs   dx,BYTE PTR ds:[esi]
  40aa86:	dec    esi
  40aa87:	ret    0xad38
  40aa8a:	xor    edi,0xb5332223
  40aa90:	loope  0x40aae4
  40aa92:	jo     0x40aa26
  40aa94:	and    bh,BYTE PTR [edi-0x791ed349]
  40aa9a:	add    eax,0xb0539fd4
  40aa9f:	ret    0x762e
  40aaa2:	cmc    
  40aaa3:	jg     0x40aa2a
  40aaa5:	push   edi
  40aaa6:	pop    edi
  40aaa7:	repz shl BYTE PTR [ebp+eiz*1-0x79d844a3],0x17
  40aab0:	je     0x40ab18
  40aab2:	mov    ecx,0xbf9cb822
  40aab7:	mov    BYTE PTR [ebx-0x8],bl
  40aaba:	xor    DWORD PTR [eax+0x324536d8],esi
  40aac0:	jecxz  0x40ab37
  40aac2:	mov    ch,0xc3
  40aac4:	adc    BYTE PTR ds:0x336c8339,ch
  40aaca:	xlat   BYTE PTR ds:[ebx]
  40aacb:	cmp    eax,0x58aad28d
  40aad0:	mov    ebx,0xf685cd21
  40aad5:	inc    edx
  40aad6:	cmp    al,0xce
  40aad8:	test   eax,ebp
  40aada:	pop    edx
  40aadb:	cdq    
  40aadc:	mov    esi,0xb6f0ad90
  40aae1:	shl    BYTE PTR [esi+0x29],1
  40aae4:	(bad)  
  40aae7:	add    al,0xed
  40aae9:	fcomp  QWORD PTR [ecx-0x6879feba]
  40aaef:	sbb    DWORD PTR [esi+0x30],eax
  40aaf2:	xlat   BYTE PTR ds:[ebx]
  40aaf3:	rol    ebx,0xc0
  40aaf6:	mov    ecx,0xef16216a
  40aafb:	outs   dx,DWORD PTR ds:[esi]
  40aafc:	inc    ebx
  40aafd:	mov    edx,DWORD PTR [edi]
  40aaff:	retf   0x57ad
  40ab02:	rol    BYTE PTR [eax],1
  40ab04:	cs ss adc al,0xee
  40ab08:	pop    esi
  40ab09:	jno    0x40ab4e
  40ab0b:	and    esp,eax
  40ab0d:	mov    al,0x4b
  40ab0f:	jp     0x40aad2
  40ab11:	mov    eax,0x74c3263d
  40ab16:	shr    BYTE PTR [eax],cl
  40ab18:	in     eax,dx
  40ab19:	mov    DWORD PTR [eax+0x491d4690],0x8ba7e72d
  40ab23:	jae    0x40aac8
  40ab25:	add    esi,DWORD PTR ds:0x449de9d6
  40ab2b:	shl    DWORD PTR [ecx-0x2f],cl
  40ab2e:	mov    ecx,0x47a852a3
  40ab33:	and    bl,BYTE PTR [eax]
  40ab35:	sbb    al,0xd
  40ab37:	sbb    eax,0x7d413d2d
  40ab3c:	mov    es,WORD PTR [ebx-0x3138fb9e]
  40ab42:	je     0x40ab8d
  40ab44:	js     0x40aaf1
  40ab46:	std    
  40ab47:	repnz mov edi,0xaefbfb59
  40ab4d:	mov    ecx,0x257ffdc9
  40ab52:	scas   eax,DWORD PTR es:[edi]
  40ab53:	sub    eax,0xa64f6d62
  40ab58:	inc    eax
  40ab59:	mov    al,0x5f
  40ab5b:	cld    
  40ab5c:	in     eax,0x43
  40ab5e:	outs   dx,BYTE PTR ds:[esi]
  40ab5f:	hlt    
  40ab60:	xchg   ecx,eax
  40ab61:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ab62:	xor    esi,DWORD PTR [ecx-0x3b]
  40ab65:	jne    0x40ab18
  40ab67:	fmul   st(3),st
  40ab69:	call   0x2f600811
  40ab6e:	adc    bl,dl
  40ab70:	and    eax,0xceb19917
  40ab75:	clc    
  40ab76:	jg     0x40ab2d
  40ab78:	ins    BYTE PTR es:[edi],dx
  40ab79:	enter  0x9d2e,0xb4
  40ab7d:	pop    edi
  40ab7e:	xor    DWORD PTR [ebx-0x139998e1],esi
  40ab84:	mov    dh,0xb5
  40ab86:	adc    BYTE PTR [ebx],ch
  40ab88:	stc    
  40ab89:	jo     0x40ab57
  40ab8b:	jp     0x40ab41
  40ab8d:	pop    ss
  40ab8e:	jg     0x40abb3
  40ab90:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ab91:	push   0xffffff82
  40ab93:	add    bh,dl
  40ab95:	add    eax,esp
  40ab97:	(bad)  
  40ab98:	(bad)  
  40ab99:	mov    dl,0x8f
  40ab9b:	stos   DWORD PTR es:[edi],eax
  40ab9c:	add    al,0x67
  40ab9e:	in     eax,0xce
  40aba0:	jmp    0x1f4b:0x126737da
  40aba7:	pop    ebp
  40aba8:	jns    0x40ab33
  40abaa:	sbb    al,BYTE PTR [edx]
  40abac:	js     0x40abc3
  40abae:	xchg   ebp,eax
  40abaf:	scas   al,BYTE PTR es:[edi]
  40abb0:	dec    edx
  40abb1:	les    ebx,FWORD PTR [ebx+0x55]
  40abb4:	out    0x6,al
  40abb6:	imul   edx,ebp,0x9e5a2b53
  40abbc:	(bad)  
  40abbd:	xchg   esp,eax
  40abbe:	clc    
  40abbf:	imul   esi,DWORD PTR [edx-0x197aa3fa],0x20de8ed7
  40abc9:	ins    BYTE PTR es:[edi],dx
  40abca:	sahf   
  40abcb:	sub    dh,BYTE PTR [ebp+edx*1+0x53e30f96]
  40abd2:	cwde   
  40abd3:	outs   dx,DWORD PTR ds:[esi]
  40abd4:	ja     0x40ac06
  40abd6:	lds    ecx,FWORD PTR [edx]
  40abd8:	or     eax,0x6a7376d6
  40abdd:	mov    eax,0x9a98433
  40abe2:	mov    edi,0xd7339daa
  40abe7:	jns    0x40abee
  40abe9:	call   0xa6b64250
  40abee:	jbe    0x40ac5c
  40abf0:	iret   
  40abf1:	adc    DWORD PTR [eax+eax*4+0x34],edi
  40abf5:	retf   0x2bad
  40abf8:	pop    ds
  40abf9:	dec    ebp
  40abfa:	push   ebp
  40abfb:	rcr    DWORD PTR [edi-0x3c1c3c65],cl
  40ac01:	cdq    
  40ac02:	in     al,0xd5
  40ac04:	jne    0x40abe7
  40ac06:	shl    BYTE PTR [eax],1
  40ac08:	jecxz  0x40ac09
  40ac0a:	iret   
  40ac0b:	ret    
  40ac0c:	xchg   ecx,eax
  40ac0d:	xchg   esp,eax
  40ac0e:	xchg   ebp,eax
  40ac0f:	pop    ds
  40ac10:	jp     0x40ac58
  40ac12:	push   ds
  40ac13:	sbb    eax,0x9a7db90
  40ac18:	scas   al,BYTE PTR es:[edi]
  40ac19:	add    ebx,DWORD PTR [ebp-0x61]
  40ac1c:	vpaddsw ymm1,ymm5,YMMWORD PTR [edi+esi*1-0x49]
  40ac22:	pop    ebp
  40ac23:	jp     0x40abaf
  40ac25:	imul   DWORD PTR [edi]
  40ac27:	repnz push gs
  40ac2a:	aam    0xa3
  40ac2c:	sbb    BYTE PTR [ecx-0x1158a2c2],bh
  40ac32:	test   eax,0x5820b53e
  40ac37:	mov    bh,0xa0
  40ac39:	es loopne 0x40ac9c
  40ac3c:	inc    BYTE PTR [ebp+0x6713db2e]
  40ac42:	lea    ebp,[eax]
  40ac44:	fiadd  DWORD PTR [edi+edi*8]
  40ac47:	push   cs
  40ac48:	mul    DWORD PTR [eax]
  40ac4a:	xchg   edx,eax
  40ac4b:	std    
  40ac4c:	inc    edx
  40ac4d:	fisubr WORD PTR [edi]
  40ac4f:	cmp    ebp,DWORD PTR [edi+eiz*2+0x31fc52c5]
  40ac56:	in     eax,dx
  40ac57:	xlat   BYTE PTR ds:[ebx]
  40ac58:	jbe    0x40acc5
  40ac5a:	out    dx,eax
  40ac5b:	add    edx,DWORD PTR [edi+0xa]
  40ac5e:	out    dx,al
  40ac5f:	lock cdq 
  40ac61:	lahf   
  40ac62:	and    eax,0xd6caf93c
  40ac67:	pop    es
  40ac68:	add    al,0xe9
  40ac6a:	dec    ebx
  40ac6b:	add    BYTE PTR [edx-0x2ac40da1],0x48
  40ac72:	jecxz  0x40abf8
  40ac74:	cmp    ah,bh
  40ac76:	pop    esi
  40ac77:	repz lock pusha 
  40ac7a:	(bad)  
  40ac7b:	cli    
  40ac7c:	fld    DWORD PTR [esi]
  40ac7e:	icebp  
  40ac7f:	mov    cl,0x7f
  40ac81:	jno    0x40accd
  40ac83:	rcr    BYTE PTR ds:0x5386ac6e,cl
  40ac89:	mov    ebp,?
  40ac8b:	test   eax,0x71b1aa72
  40ac90:	int    0xc7
  40ac92:	xchg   edx,eax
  40ac93:	dec    ebx
  40ac94:	mov    ds:0x5e02696e,eax
  40ac99:	or     eax,0x38560287
  40ac9e:	out    0xd2,eax
  40aca0:	mov    ds:0xd633e70d,al
  40aca5:	ret    0x6d48
  40aca8:	call   0xc30fb5f0
  40acad:	aam    0x1
  40acaf:	mov    al,ds:0xad026b4f
  40acb4:	pop    esi
  40acb5:	xor    ebp,esp
  40acb7:	mov    edx,0xb77abeb1
  40acbc:	dec    ebp
  40acbd:	jo     0x40ac64
  40acbf:	repnz and ch,BYTE PTR [esi-0x31b6d229]
  40acc6:	sbb    eax,0x66b6748e
  40accb:	sub    DWORD PTR [edi],esi
  40accd:	adc    DWORD PTR gs:[eax+0x1f],ecx
  40acd1:	rcr    BYTE PTR [esi+0x2b],0xa6
  40acd5:	(bad)  
  40acd6:	push   eax
  40acd7:	call   0xf0c4:0x6bc4c9ef
  40acde:	inc    ebp
  40acdf:	or     ebx,DWORD PTR [ecx+0x2b2d421b]
  40ace5:	or     eax,0x2515d8b4
  40acea:	ret    
  40aceb:	add    BYTE PTR [ebx-0x5953458],0x29
  40acf2:	and    BYTE PTR [edi+0xc001b50],cl
  40acf8:	cdq    
  40acf9:	fadd   st,st(1)
  40acfb:	add    eax,0xa825d222
  40ad00:	lahf   
  40ad01:	dec    ebx
  40ad02:	xchg   DWORD PTR [eax+0x74],edx
  40ad05:	pop    edi
  40ad06:	fidivr DWORD PTR [eax-0x597ef6ea]
  40ad0c:	bound  esi,QWORD PTR [ecx+0x3]
  40ad0f:	jmp    0x54e2e44a
  40ad14:	mov    DWORD PTR [edi+0x18],ebx
  40ad17:	mov    al,0xfc
  40ad19:	mov    esp,0xa85de656
  40ad1e:	inc    edi
  40ad1f:	push   ecx
  40ad20:	repz mov edi,0x1c695177
  40ad26:	xor    eax,0xa9f8aef3
  40ad2b:	xor    ebp,DWORD PTR [eax+0x4c]
  40ad2e:	into   
  40ad2f:	rol    DWORD PTR [ecx-0x1],1
  40ad32:	stc    
  40ad33:	std    
  40ad34:	inc    edi
  40ad35:	sbb    eax,0x5f071a76
  40ad3a:	xchg   esp,eax
  40ad3b:	cmp    cl,BYTE PTR [esi+0x7e]
  40ad3e:	jo     0x40ad53
  40ad40:	ror    DWORD PTR [ebx-0x19],1
  40ad43:	shl    DWORD PTR [ecx],cl
  40ad45:	lea    ebp,[esi]
  40ad47:	pop    ds
  40ad48:	clc    
  40ad49:	jmp    0x40ad5d
  40ad4b:	sti    
  40ad4c:	pop    es
  40ad4d:	mov    ch,0xb7
  40ad4f:	arpl   WORD PTR [ecx+0x21e86cb3],dx
  40ad55:	dec    ebx
  40ad56:	lock add DWORD PTR [ecx+0x3af3fa73],edi
  40ad5d:	in     al,dx
  40ad5e:	das    
  40ad5f:	mov    bl,BYTE PTR [eax]
  40ad61:	(bad)  
  40ad63:	in     eax,dx
  40ad64:	repnz mov al,cl
  40ad67:	stos   DWORD PTR es:[edi],eax
  40ad68:	shl    DWORD PTR [edx-0x714516cf],0x75
  40ad6f:	mov    ebx,0x4b423813
  40ad74:	mov    esi,0xd0e08222
  40ad79:	dec    ecx
  40ad7a:	ds dec ebp
  40ad7c:	gs js  0x40ad0e
  40ad7f:	mov    bl,0xfa
  40ad81:	les    esi,FWORD PTR [ecx-0x54]
  40ad84:	stc    
  40ad85:	inc    edx
  40ad86:	addr16 cmp al,0x25
  40ad89:	jo     0x40adac
  40ad8b:	adc    ecx,DWORD PTR ds:0x3915dc5d
  40ad91:	leave  
  40ad92:	inc    esp
  40ad93:	shl    BYTE PTR [ebx-0x6c30b496],1
  40ad99:	pop    esp
  40ad9a:	int    0x36
  40ad9c:	int3   
  40ad9d:	pop    edi
  40ad9e:	scas   eax,DWORD PTR es:[edi]
  40ad9f:	xchg   edx,edi
  40ada1:	dec    edx
  40ada2:	cmp    ch,BYTE PTR [edi+0xaf15a63]
  40ada8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ada9:	push   esi
  40adaa:	cmc    
  40adab:	in     eax,dx
  40adac:	pop    ss
  40adad:	cmp    edx,DWORD PTR [eax-0x7d2c26a]
  40adb3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40adb4:	add    al,0x76
  40adb6:	dec    esi
  40adb7:	push   ebx
  40adb8:	adc    al,0x23
  40adba:	mov    ebp,0x552cbfcd
  40adbf:	add    al,dl
  40adc1:	stos   BYTE PTR es:[edi],al
  40adc2:	pop    DWORD PTR [ebp+0x32e06ae0]
  40adc8:	pop    DWORD PTR [ebx]
  40adca:	jb     0x40ad74
  40adcc:	mov    cl,0x1b
  40adce:	clc    
  40adcf:	lahf   
  40add0:	jecxz  0x40ae24
  40add2:	push   ebx
  40add3:	test   BYTE PTR [eax+ebp*8+0x1f699d76],bl
  40adda:	inc    esp
  40addb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40addc:	fstp   QWORD PTR [eax+0x4025863]
  40ade2:	push   edx
  40ade4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ade5:	mov    eax,ds:0x91a4369e
  40adea:	push   ecx
  40adeb:	push   es
  40adec:	sahf   
  40aded:	cwde   
  40adee:	sbb    bh,BYTE PTR ds:0xc4305ff2
  40adf4:	pop    edx
  40adf5:	pop    ebp
  40adf6:	and    DWORD PTR [ebx-0x24],eax
  40adf9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40adfa:	ja     0x40ae19
  40adfc:	pop    ss
  40adfd:	jg     0x40ae67
  40adff:	repz dec edi
  40ae01:	aaa    
  40ae02:	mov    dl,BYTE PTR ds:0x166cd96c
  40ae08:	hlt    
  40ae09:	and    eax,0x72bc533e
  40ae0e:	rol    BYTE PTR [edi-0x7c5250bd],0xd3
  40ae15:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ae16:	imul   esi,DWORD PTR [ebx+ecx*2],0x2
  40ae1a:	add    ecx,eax
  40ae1c:	dec    esp
  40ae1d:	and    cl,ch
  40ae1f:	popf   
  40ae20:	lahf   
  40ae21:	fld    TBYTE PTR ds:0x5b4051ae
  40ae27:	test   DWORD PTR [eax-0xd],0x3d98abb8
  40ae2e:	push   esi
  40ae2f:	pop    edx
  40ae30:	(bad)  
  40ae32:	sub    bh,ah
  40ae34:	in     eax,0xe0
  40ae36:	sub    eax,0x4f67d643
  40ae3b:	aaa    
  40ae3c:	or     DWORD PTR [ebx],esi
  40ae3e:	das    
  40ae3f:	cli    
  40ae40:	push   0x25
  40ae42:	lea    esi,[ebx+0x4]
  40ae45:	lea    esi,[esi-0x5f]
  40ae48:	(bad)  
  40ae49:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ae4a:	xchg   DWORD PTR [edx+0x7c],edx
  40ae4d:	test   eax,0x79ce810c
  40ae52:	sti    
  40ae53:	xor    BYTE PTR [edi+0x13e89433],0xcd
  40ae5a:	nop
  40ae5b:	jae    0x40ae27
  40ae5d:	out    0x9c,eax
  40ae5f:	daa    
  40ae60:	jge    0x40ae44
  40ae62:	adc    al,0x46
  40ae64:	test   eax,0x4ead0ba2
  40ae69:	sub    DWORD PTR [ebp+0x3f],ebx
  40ae6c:	push   ecx
  40ae6d:	fs xchg esi,eax
  40ae6f:	adc    eax,0x9935d5a8
  40ae74:	outs   dx,DWORD PTR ds:[esi]
  40ae75:	int    0x98
  40ae77:	cmp    DWORD PTR [edi+0x6d346362],ebx
  40ae7d:	mov    cl,BYTE PTR [eax-0x7f]
  40ae80:	adc    DWORD PTR [edi-0x4029a7ec],0x4d
  40ae87:	sbb    cl,BYTE PTR [ebp+0x50e558ae]
  40ae8d:	add    al,0x20
  40ae8f:	imul   edi,DWORD PTR [esi+0x36],0xffffffe9
  40ae93:	xor    al,0x1d
  40ae95:	ds dec esp
  40ae97:	adc    eax,0xe5316283
  40ae9c:	mov    cl,0x88
  40ae9e:	mov    ecx,0x7bdb1d6a
  40aea3:	mov    ds:0x1a9eb124,al
  40aea8:	jmp    0x40aeeb
  40aeaa:	ins    BYTE PTR es:[edi],dx
  40aeab:	popa   
  40aeac:	xlat   BYTE PTR ds:[ebx]
  40aead:	inc    edi
  40aeae:	mov    al,0x36
  40aeb0:	jp     0x40aed4
  40aeb2:	jno    0x40aefe
  40aeb4:	jmp    ebp
  40aeb6:	aad    0xd5
  40aeb8:	fst    QWORD PTR [esi-0x6b06bcc2]
  40aebe:	mov    al,0xf0
  40aec0:	loop   0x40aee5
  40aec2:	jg     0x40ae6c
  40aec4:	in     al,dx
  40aec5:	nop
  40aec6:	or     al,0x1d
  40aec8:	sbb    BYTE PTR [ebx+ebp*4-0x7bdb3d3c],bh
  40aecf:	push   ebp
  40aed0:	inc    ecx
  40aed1:	wbinvd 
  40aed3:	mov    eax,0x680e4713
  40aed8:	dec    ebp
  40aed9:	cmp    dh,BYTE PTR [esi+0x59c394da]
  40aedf:	dec    edx
  40aee0:	adc    eax,DWORD PTR [edi]
  40aee2:	sub    DWORD PTR [eax],0xda43c2bc
  40aee8:	mov    WORD PTR [edi-0x5e],fs
  40aeeb:	inc    edi
  40aeec:	and    eax,DWORD PTR [esi+edi*2+0x53]
  40aef0:	sbb    al,0x58
  40aef2:	leave  
  40aef3:	mov    ch,0x56
  40aef5:	int    0x3f
  40aef7:	and    eax,0xa5ac2e1c
  40aefc:	push   ebp
  40aefd:	ror    edi,cl
  40aeff:	jge    0x40ae96
  40af01:	jg     0x40aea9
  40af03:	xchg   esp,eax
  40af04:	dec    esi
  40af05:	sbb    DWORD PTR [eax],ebx
  40af07:	inc    ecx
  40af08:	xor    cl,BYTE PTR [ebp+0x5a380846]
  40af0e:	inc    ebp
  40af0f:	mov    eax,ds:0x35371eda
  40af14:	sar    bh,cl
  40af16:	sub    eax,0x432920af
  40af1b:	pop    edx
  40af1c:	push   ebx
  40af1d:	sbb    dh,bl
  40af1f:	aad    0x1b
  40af21:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40af22:	inc    esp
  40af23:	jo     0x40aef9
  40af25:	call   FWORD PTR [ebx-0x642d08cf]
  40af2b:	popa   
  40af2c:	loope  0x40aeb7
  40af2e:	xchg   DWORD PTR [esi+0x28],ebx
  40af31:	test   al,0xd
  40af33:	jbe    0x40af77
  40af35:	daa    
  40af36:	cmp    BYTE PTR [esi-0x7d],0x54
  40af3a:	outs   dx,BYTE PTR ds:[esi]
  40af3b:	popf   
  40af3c:	add    BYTE PTR [edi-0xd],al
  40af3f:	into   
  40af40:	cmp    cl,BYTE PTR [edi+0x1c09f347]
  40af46:	inc    edi
  40af47:	repnz stc 
  40af49:	aad    0xe0
  40af4b:	jge    0x40aed4
  40af4d:	sub    eax,DWORD PTR [ebp+0x7a6e42f6]
  40af53:	fs xchg ebx,eax
  40af55:	popf   
  40af56:	push   edx
  40af57:	inc    esp
  40af58:	and    ch,BYTE PTR [edx+0x3f]
  40af5b:	rol    BYTE PTR [edx-0x6d],cl
  40af5e:	jnp    0x40af61
  40af60:	jb     0x40af38
  40af62:	pushf  
  40af63:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40af64:	out    dx,al
  40af65:	cmp    edx,DWORD PTR [esi+0x5]
  40af68:	pop    esp
  40af69:	jo     0x40af04
  40af6b:	inc    eax
  40af6c:	mov    esi,0x4d9d4bae
  40af71:	dec    edx
  40af72:	imul   ecx,DWORD PTR [ebx+0x5e],0x4d7dd55e
  40af79:	ins    DWORD PTR es:[edi],dx
  40af7a:	dec    esi
  40af7b:	call   0x231ce12c
  40af80:	mov    ah,0xb9
  40af82:	fstp   DWORD PTR [eax-0x35]
  40af85:	xor    bl,BYTE PTR [edi+ecx*4-0x798e7785]
  40af8c:	push   ds
  40af8d:	int3   
  40af8e:	and    ebp,DWORD PTR [ebp-0xf61cf8a]
  40af94:	mov    ds:0x3d0cd00b,al
  40af99:	int    0x3
  40af9b:	adc    eax,0xbb38eb33
  40afa0:	ret    
  40afa1:	lock jp 0x40afe0
  40afa4:	pop    esp
  40afa5:	mov    dl,0xb3
  40afa7:	scas   eax,DWORD PTR es:[edi]
  40afa8:	mov    ebp,0xa8391bc7
  40afad:	outs   dx,BYTE PTR ds:[esi]
  40afae:	scas   eax,DWORD PTR es:[edi]
  40afaf:	dec    ebp
  40afb0:	aad    0x47
  40afb2:	in     eax,dx
  40afb3:	scas   eax,DWORD PTR es:[edi]
  40afb4:	gs adc eax,0xa62871f5
  40afba:	adc    eax,0x3a8857d4
  40afbf:	add    ebp,DWORD PTR [ebx]
  40afc1:	shl    DWORD PTR [ecx+esi*8+0x9094e9c],0x14
  40afc9:	jp     0x40af5f
  40afcb:	inc    edx
  40afcc:	xchg   esi,eax
  40afcd:	rol    DWORD PTR [ebp-0x11],cl
  40afd0:	sbb    DWORD PTR [ecx],esp
  40afd2:	sti    
  40afd3:	xlat   BYTE PTR ds:[ebx]
  40afd4:	scas   al,BYTE PTR es:[edi]
  40afd5:	arpl   WORD PTR [edx-0x6],bx
  40afd8:	aad    0x62
  40afda:	sti    
  40afdb:	hlt    
  40afdc:	mov    edi,0x646eebf6
  40afe1:	xor    ecx,DWORD PTR [esi]
  40afe3:	pop    edx
  40afe4:	cmp    al,0x5b
  40afe6:	sub    ecx,DWORD PTR [edx-0x2]
  40afe9:	cmp    ch,BYTE PTR [esi-0x48]
  40afec:	jmp    0xb830:0xbf9c0bb1
  40aff3:	adc    eax,0x765c8781
  40aff8:	or     eax,edx
  40affa:	cmp    al,0xab
  40affc:	ja     0x40b03a
  40affe:	into   
  40afff:	inc    ebx
  40b000:	add    eax,0x9623e94f
  40b005:	lahf   
  40b006:	jmp    0x7138:0xadd5f2b6
  40b00d:	ret    0x9ac0
  40b010:	pop    ds
  40b011:	sbb    BYTE PTR [eax],ah
  40b013:	sbb    BYTE PTR [ecx+0xa62ac75],dl
  40b019:	ror    DWORD PTR [ebp+0x1],0xa2
  40b01d:	jnp    0x40b054
  40b01f:	(bad)  [ebx+0x64]
  40b022:	dec    edx
  40b023:	repnz test DWORD PTR [ecx-0x72],esi
  40b027:	xor    DWORD PTR [edi],edi
  40b029:	(bad)  
  40b02a:	gs pop ds
  40b02c:	sbb    eax,0x5e647e66
  40b031:	sbb    DWORD PTR [ecx+edi*4-0x7e],esp
  40b035:	(bad)  
  40b037:	outs   dx,DWORD PTR ds:[esi]
  40b038:	mov    dl,0x65
  40b03a:	int    0x11
  40b03c:	or     DWORD PTR [edi+0x7b],edi
  40b03f:	out    0xd5,eax
  40b041:	or     ch,BYTE PTR [ebp+0x580f03dd]
  40b047:	cli    
  40b048:	(bad)  
  40b049:	jae    0x40b062
  40b04b:	out    0x9,eax
  40b04d:	ret    0xf16e
  40b050:	test   al,0x32
  40b052:	mov    edi,ecx
  40b054:	dec    esi
  40b055:	mov    eax,0x2ecd2479
  40b05a:	cld    
  40b05b:	ins    DWORD PTR es:[edi],dx
  40b05c:	mov    cl,0xc2
  40b05e:	hlt    
  40b05f:	mov    esp,0x8edcf2
  40b064:	adc    BYTE PTR fs:[edx-0x5ea9da25],0x2c
  40b06c:	mov    bl,0xa6
  40b06e:	or     esi,edi
  40b070:	cmp    BYTE PTR [eax+0x75],ch
  40b073:	je     0x40b0b4
  40b075:	rcr    ah,cl
  40b077:	and    esp,edi
  40b079:	inc    esp
  40b07a:	push   esp
  40b07b:	and    al,0xa
  40b07d:	sti    
  40b07e:	jl     0x40b040
  40b080:	pop    eax
  40b081:	dec    edi
  40b082:	jmp    0x7af0:0x6e07efa5
  40b089:	cmp    DWORD PTR [esi+eiz*8-0x215ad74a],ebp
  40b090:	ins    DWORD PTR es:[edi],dx
  40b091:	or     DWORD PTR [ebx+ebx*2],esi
  40b094:	nop
  40b095:	daa    
  40b096:	add    esi,DWORD PTR [edi]
  40b098:	pop    ebp
  40b099:	pop    edi
  40b09a:	mov    cl,0x68
  40b09c:	dec    esp
  40b09d:	daa    
  40b09e:	xchg   edx,eax
  40b09f:	dec    ebp
  40b0a0:	jnp    0x40b040
  40b0a2:	int3   
  40b0a3:	dec    edx
  40b0a4:	adc    al,0xa1
  40b0a6:	inc    edi
  40b0a7:	jge    0x40b036
  40b0a9:	(bad)  [esi+0x8d95021]
  40b0af:	ss adc eax,0xd748e68d
  40b0b5:	xchg   esi,eax
  40b0b6:	jmp    0x40b12c
  40b0b8:	sub    eax,0xca80888c
  40b0bd:	push   ebp
  40b0be:	leave  
  40b0bf:	push   ebp
  40b0c0:	ins    BYTE PTR es:[edi],dx
  40b0c1:	fsub   QWORD PTR [ebx-0x3c]
  40b0c4:	fwait
  40b0c5:	pop    es
  40b0c6:	dec    ebx
  40b0c7:	sbb    BYTE PTR [edi+0x18],ah
  40b0ca:	std    
  40b0cb:	jo     0x40b065
  40b0cd:	jmp    0x40b0da
  40b0cf:	inc    ecx
  40b0d0:	mov    al,0x10
  40b0d2:	(bad)  
  40b0d3:	sub    bh,bh
  40b0d5:	lods   eax,DWORD PTR ds:[esi]
  40b0d6:	push   es
  40b0d7:	test   ebx,edi
  40b0d9:	cmc    
  40b0da:	ficom  WORD PTR [esi+eiz*1-0x8e7128e]
  40b0e1:	adc    DWORD PTR [ecx-0x2bb373cd],0x9522f33
  40b0eb:	fst    QWORD PTR [ebx-0x7231487]
  40b0f1:	dec    BYTE PTR [edx]
  40b0f3:	fstp   DWORD PTR [eax+ebx*2]
  40b0f7:	dec    esp
  40b0f8:	jle    0x40b0c2
  40b0fa:	mov    edi,0xc0725227
  40b0ff:	jmp    0x2806cf5c
  40b104:	or     dl,cl
  40b106:	dec    edx
  40b107:	xchg   ebp,eax
  40b108:	(bad)  
  40b109:	pop    edx
  40b10a:	shl    DWORD PTR [edx-0x262d543a],0x4
  40b111:	aad    0xa6
  40b113:	out    dx,al
  40b114:	pop    ecx
  40b115:	sbb    ebx,DWORD PTR [ebp-0x3e]
  40b118:	mov    eax,0xfbd3ad60
  40b11d:	xchg   BYTE PTR [ecx],ah
  40b11f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b120:	jmp    0x61b4caeb
  40b125:	(bad)  
  40b126:	dec    ebx
  40b127:	fstp   QWORD PTR [ebx+0x5ae05e60]
  40b12d:	and    al,BYTE PTR [edi-0xefc63e9]
  40b133:	jecxz  0x40b103
  40b135:	loope  0x40b16c
  40b137:	addr16 pop bp
  40b13a:	loope  0x40b160
  40b13c:	dec    esi
  40b13d:	dec    ebx
  40b13e:	in     al,0x48
  40b140:	xor    DWORD PTR [ebx+0x573bef74],ecx
  40b146:	repz pop edx
  40b148:	jae    0x40b114
  40b14a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b14b:	es push 0x28
  40b14e:	out    0xe0,al
  40b150:	out    dx,eax
  40b151:	outs   dx,BYTE PTR ds:[esi]
  40b152:	push   esp
  40b153:	fwait
  40b154:	dec    ecx
  40b155:	lods   al,BYTE PTR ds:[esi]
  40b156:	xchg   esi,eax
  40b157:	scas   al,BYTE PTR es:[edi]
  40b158:	mov    WORD PTR [ebx+esi*2],es
  40b15b:	rcr    BYTE PTR [eax],0xf7
  40b15e:	mov    dl,bl
  40b160:	sub    BYTE PTR [ecx-0x7f],0x80
  40b164:	mov    eax,ds:0x9595168f
  40b169:	xchg   esp,eax
  40b16a:	test   al,0xef
  40b16c:	jo     0x40b139
  40b16e:	ins    BYTE PTR es:[edi],dx
  40b16f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b170:	ja     0x40b1c9
  40b172:	aam    0xf
  40b174:	mov    esp,0x57979b55
  40b179:	mov    ds:0xd1389cdc,al
  40b17e:	call   0x44f047ca
  40b183:	inc    esp
  40b184:	(bad)  
  40b185:	sub    ebx,esi
  40b187:	xor    BYTE PTR [ecx+0x27fab9fd],al
  40b18d:	das    
  40b18e:	das    
  40b18f:	clc    
  40b190:	inc    ebp
  40b191:	arpl   WORD PTR [ebx],bx
  40b193:	jecxz  0x40b14c
  40b195:	inc    ebx
  40b196:	fwait
  40b197:	inc    esp
  40b198:	(bad)  
  40b199:	xchg   esi,eax
  40b19a:	outs   dx,DWORD PTR ds:[esi]
  40b19b:	push   edx
  40b19c:	adc    DWORD PTR [ebp+0x759c3edd],ebp
  40b1a2:	pop    ss
  40b1a3:	jnp    0x40b154
  40b1a5:	jns    0x40b182
  40b1a7:	mov    dh,0x3
  40b1a9:	(bad)  
  40b1aa:	cld    
  40b1ab:	pop    ecx
  40b1ac:	stos   BYTE PTR es:[edi],al
  40b1ad:	xlat   BYTE PTR ds:[ebx]
  40b1ae:	ss xor al,0x67
  40b1b1:	mov    dh,0x39
  40b1b3:	test   al,0xf4
  40b1b5:	cmp    eax,0xc735c8a6
  40b1ba:	xor    BYTE PTR gs:0x32fa73a,bl
  40b1c1:	aas    
  40b1c2:	inc    ecx
  40b1c3:	fwait
  40b1c4:	enter  0xa349,0x66
  40b1c8:	push   ecx
  40b1c9:	into   
  40b1ca:	sub    al,0xd1
  40b1cc:	scas   al,BYTE PTR es:[edi]
  40b1cd:	cmp    DWORD PTR [edx],ebp
  40b1cf:	shl    DWORD PTR [edi+ecx*2+0x17],cl
  40b1d3:	int    0x1f
  40b1d5:	popa   
  40b1d6:	inc    esi
  40b1d7:	iret   
  40b1d8:	sti    
  40b1d9:	call   0x122d4747
  40b1de:	pop    ecx
  40b1df:	jno    0x40b1e0
  40b1e1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b1e2:	fwait
  40b1e3:	jp     0x40b17f
  40b1e5:	cmp    eax,0xd5608b12
  40b1ea:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b1eb:	in     al,0xc2
  40b1ed:	push   es
  40b1ee:	addr16 dec esp
  40b1f0:	cmp    dh,bl
  40b1f2:	jmp    0x40b1c9
  40b1f4:	xor    esp,DWORD PTR [edx+0x7966b28e]
  40b1fa:	cmp    DWORD PTR [ebx-0x1b],esp
  40b1fd:	and    al,0xed
  40b1ff:	lods   eax,DWORD PTR ds:[esi]
  40b200:	or     DWORD PTR [ecx],edi
  40b202:	and    bl,dl
  40b204:	mov    esp,0x7dc9c54e
  40b209:	out    dx,al
  40b20a:	(bad)  
  40b20b:	dec    ebx
  40b20c:	fld    TBYTE PTR [ebx]
  40b20e:	pop    ebx
  40b20f:	mov    DWORD PTR [ecx+0x12],0x9952583d
  40b216:	sub    dl,BYTE PTR [ecx-0x63b72a5e]
  40b21c:	push   ds
  40b21d:	jl     0x40b1b9
  40b21f:	icebp  
  40b220:	mov    dh,bh
  40b222:	inc    ecx
  40b223:	push   edi
  40b224:	fadd   DWORD PTR [esi]
  40b226:	jnp    0x40b1aa
  40b228:	pop    ebx
  40b229:	mov    esi,0x3a4e173c
  40b22e:	push   es
  40b22f:	jge    0x40b201
  40b231:	xor    BYTE PTR [edi+0x2b],al
  40b234:	mov    ds:0xa7fff8e5,eax
  40b239:	imul   ebp,DWORD PTR [edi],0x60
  40b23c:	(bad)  
  40b23d:	fldcw  WORD PTR [ebp-0x55]
  40b240:	in     eax,dx
  40b241:	push   ss
  40b242:	mov    ebp,0x6eb54b6
  40b247:	dec    esi
  40b248:	xchg   edx,eax
  40b249:	aad    0x78
  40b24b:	scas   al,BYTE PTR es:[edi]
  40b24c:	sub    ah,ah
  40b24e:	sbb    dh,al
  40b250:	test   DWORD PTR [ebx+0x50784766],esi
  40b256:	and    DWORD PTR [esi+0x2ddff5f5],edx
  40b25c:	loopne 0x40b262
  40b25e:	jae    0x40b1fd
  40b260:	sub    al,0x39
  40b262:	mov    ah,BYTE PTR [edx+edx*2]
  40b265:	xor    DWORD PTR [ebx-0x27d50ce3],ebx
  40b26b:	imul   eax,DWORD PTR [ebp-0x7a7fae2c],0x59
  40b272:	cld    
  40b273:	out    0x26,al
  40b275:	(bad)  
  40b276:	push   0x451495d6
  40b27b:	mov    ebx,0x77f944f4
  40b280:	dec    edx
  40b281:	and    BYTE PTR [ecx+0x173e0185],0x5c
  40b288:	aad    0x20
  40b28a:	jle    0x40b2cb
  40b28c:	dec    ebp
  40b28d:	add    DWORD PTR [edi-0x10],0xffffff9f
  40b291:	jne    0x40b2ac
  40b293:	xchg   ebp,eax
  40b294:	(bad)  
  40b295:	clc    
  40b296:	jge    0x40b26b
  40b298:	push   ds
  40b299:	jp     0x40b238
  40b29b:	mov    ah,0x24
  40b29d:	adc    al,0xb0
  40b29f:	cmp    edx,edi
  40b2a1:	(bad)  
  40b2a2:	rcr    ebx,1
  40b2a4:	retf   
  40b2a5:	or     dh,ch
  40b2a7:	les    ecx,FWORD PTR [edx*1-0x46285af8]
  40b2ae:	in     al,0x90
  40b2b0:	add    ebp,DWORD PTR [eax+0x63]
  40b2b3:	int3   
  40b2b4:	inc    esi
  40b2b5:	jge    0x40b268
  40b2b7:	mov    ecx,0x704f65b0
  40b2bc:	sbb    esi,DWORD PTR [esi+0x79a5bb0f]
  40b2c2:	in     al,dx
  40b2c3:	repnz pop ebx
  40b2c5:	inc    ebp
  40b2c6:	sub    eax,DWORD PTR fs:[eax+0x2192f70f]
  40b2cd:	xchg   edx,eax
  40b2ce:	test   DWORD PTR ds:0x946af9d,esp
  40b2d4:	out    0x26,al
  40b2d6:	xor    al,0xc3
  40b2d8:	loopne 0x40b2af
  40b2da:	test   BYTE PTR [ecx+ebx*8],0x84
  40b2de:	fsubr  QWORD PTR [ebx]
  40b2e0:	jne    0x40b280
  40b2e2:	and    BYTE PTR [esi-0x4c],ah
  40b2e5:	push   esi
  40b2e6:	les    esp,FWORD PTR [edx+0x6af1be30]
  40b2ec:	push   ebx
  40b2ed:	or     al,0x3b
  40b2ef:	mov    bl,0xa8
  40b2f1:	adc    bh,BYTE PTR [ebp+0x53]
  40b2f4:	(bad)  
  40b2f5:	inc    BYTE PTR [esi+0x49114d]
  40b2fb:	fmul   DWORD PTR [edx]
  40b2fd:	ficom  WORD PTR ds:0xd6f08c00
  40b303:	jae    0x40b288
  40b305:	or     ch,BYTE PTR [esi-0x3c]
  40b308:	pop    edx
  40b309:	fcom   QWORD PTR [bp+di+0x4c80]
  40b30e:	imul   esi,DWORD PTR [edx+0x31],0x39942608
  40b315:	mov    al,0x22
  40b317:	mov    ?,WORD PTR ds:0xf75a381d
  40b31d:	inc    edx
  40b31e:	pop    ecx
  40b31f:	fisubr WORD PTR [edi-0x494ebc44]
  40b325:	add    ebp,ebp
  40b327:	mov    es:0xf3dd52a7,al
  40b32d:	or     esi,DWORD PTR [ebx+0x4f]
  40b330:	sbb    eax,0x1ffa7b23
  40b335:	xchg   esp,eax
  40b336:	fsubr  QWORD PTR [eax+0x9533fcb]
  40b33c:	(bad)  
  40b33d:	mov    dh,0x9
  40b33f:	sub    esp,DWORD PTR [ecx-0x2c]
  40b342:	inc    ecx
  40b343:	ss cdq 
  40b345:	mov    al,ds:0xb5025251
  40b34a:	push   ss
  40b34b:	outs   dx,BYTE PTR ds:[esi]
  40b34c:	xchg   esi,eax
  40b34d:	xchg   esp,eax
  40b34e:	fwait
  40b34f:	or     eax,0xd2bd5eac
  40b354:	jecxz  0x40b341
  40b356:	(bad)  
  40b357:	xor    al,0x3c
  40b359:	pusha  
  40b35a:	sbb    dl,bl
  40b35c:	push   es
  40b35d:	jb     0x40b345
  40b35f:	xor    al,0x7a
  40b361:	jge    0x40b343
  40b363:	pop    edi
  40b364:	icebp  
  40b365:	xor    DWORD PTR [edi-0x1b],ecx
  40b368:	mov    eax,0xe91ed820
  40b36d:	push   esp
  40b36e:	test   al,0xe6
  40b370:	scas   al,BYTE PTR es:[edi]
  40b371:	ret    
  40b372:	add    DWORD PTR [eax],0xf152c83f
  40b378:	retf   0x93b7
  40b37b:	push   0xeaf817cd
  40b380:	push   ebp
  40b381:	push   edi
  40b382:	cld    
  40b383:	js     0x40b311
  40b385:	cld    
  40b386:	mov    cl,0xae
  40b388:	mov    dh,0x6c
  40b38a:	aad    0x79
  40b38c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b38d:	mov    cl,0xaf
  40b38f:	jbe    0x40b316
  40b391:	push   eax
  40b392:	shl    DWORD PTR [eax+0x5a],cl
  40b395:	xor    eax,0xa8078a0d
  40b39a:	sar    DWORD PTR [ebx-0x6aba7341],1
  40b3a0:	mov    dh,0xb6
  40b3a2:	mov    edx,0x63e05a60
  40b3a7:	daa    
  40b3a8:	pop    ebp
  40b3a9:	fdivr  DWORD PTR [ebp+0x16]
  40b3ac:	test   eax,0x8f64fc0e
  40b3b1:	or     BYTE PTR [esi+0x16],ah
  40b3b4:	add    eax,0xd579fa7e
  40b3b9:	fdiv   st(1),st
  40b3bb:	jmp    0xed0:0x9e2c77df
  40b3c2:	push   es
  40b3c3:	(bad)  
  40b3c4:	cmp    eax,0xb2e5a61e
  40b3c9:	cmc    
  40b3ca:	ins    DWORD PTR es:[edi],dx
  40b3cb:	inc    ecx
  40b3cc:	sub    al,0x83
  40b3ce:	and    eax,DWORD PTR [eax-0x758510ed]
  40b3d4:	push   edx
  40b3d5:	je     0x40b44f
  40b3d7:	int    0xec
  40b3d9:	icebp  
  40b3da:	mov    cl,0xde
  40b3dc:	add    ah,BYTE PTR [edi+0x4a850d33]
  40b3e2:	jne    0x40b370
  40b3e4:	adc    al,0x66
  40b3e6:	push   edx
  40b3e7:	cdq    
  40b3e8:	sti    
  40b3e9:	lods   eax,DWORD PTR ds:[esi]
  40b3ea:	inc    ebx
  40b3eb:	scas   al,BYTE PTR es:[edi]
  40b3ec:	push   edi
  40b3ed:	mov    esp,0x6c9f147a
  40b3f2:	enter  0x3033,0x8b
  40b3f6:	pop    ecx
  40b3f7:	mov    ch,BYTE PTR [ebx+ebp*4+0x33f2ad26]
  40b3fe:	call   0x50b9951f
  40b403:	jnp    0x40b454
  40b405:	sbb    DWORD PTR [edi+0x55],esp
  40b408:	std    
  40b409:	fcmovne st,st(5)
  40b40b:	cs pop ebx
  40b40d:	stos   DWORD PTR es:[edi],eax
  40b40e:	mov    ds:0x64bbfc43,eax
  40b413:	pop    ss
  40b414:	test   eax,0xccb3cc1d
  40b419:	ins    DWORD PTR es:[edi],dx
  40b41a:	xchg   ebx,eax
  40b41b:	lods   al,BYTE PTR ds:[esi]
  40b41c:	mov    ebx,ebx
  40b41e:	dec    esi
  40b41f:	int    0xe0
  40b421:	das    
  40b422:	xchg   ebx,eax
  40b423:	jne    0x40b406
  40b425:	add    edi,DWORD PTR [edx]
  40b427:	push   ebx
  40b428:	lea    esp,[ebx+0x4badc931]
  40b42e:	(bad)  
  40b430:	fistp  DWORD PTR [eax+0x3e631f6d]
  40b436:	je     0x40b449
  40b438:	stos   DWORD PTR es:[edi],eax
  40b439:	out    0xd8,al
  40b43b:	shr    DWORD PTR [esi-0x721071a5],1
  40b441:	shl    BYTE PTR [ecx-0x24],1
  40b444:	xchg   esi,eax
  40b445:	enter  0xaa8a,0xbd
  40b449:	je     0x40b3f4
  40b44b:	fs dec esi
  40b44d:	aad    0xb9
  40b44f:	push   ss
  40b450:	and    bl,BYTE PTR [edx+0x64]
  40b453:	sub    ch,dh
  40b455:	out    dx,eax
  40b456:	mov    bh,0xd9
  40b458:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b459:	inc    eax
  40b45a:	adc    dh,BYTE PTR [ebx+0x21]
  40b45d:	pop    ecx
  40b45e:	cmp    ebx,DWORD PTR [edi+0x3ac0d3cb]
  40b464:	jmp    FWORD PTR [ebx-0x3e]
  40b467:	repnz adc eax,0x51e3d3c2
  40b46d:	push   es
  40b46e:	inc    edx
  40b46f:	push   0xffffffc5
  40b471:	fwait
  40b472:	daa    
  40b473:	and    BYTE PTR [edx],0x54
  40b476:	adc    BYTE PTR [ecx],al
  40b478:	dec    edi
  40b479:	dec    BYTE PTR [ecx+ecx*2-0x58e4a211]
  40b480:	fistp  QWORD PTR [ebp-0x39]
  40b483:	(bad)  
  40b484:	loopne 0x40b455
  40b486:	ds jecxz 0x40b463
  40b489:	bound  ebp,QWORD PTR [ebx+0x7f90088a]
  40b48f:	adc    al,0xc6
  40b492:	sbb    BYTE PTR [edx+ebp*1-0x11a97ca6],bl
  40b499:	ds mov ebp,0x6197caa
  40b49f:	call   0xcc0e:0x5506bd61
  40b4a6:	shl    BYTE PTR [eax+0x4a],1
  40b4a9:	or     ebp,edi
  40b4ab:	cmp    ecx,DWORD PTR [ecx-0x467afd84]
  40b4b1:	stos   BYTE PTR es:[edi],al
  40b4b2:	test   al,0xf0
  40b4b4:	cs cmp al,0x87
  40b4b7:	jne    0x40b46a
  40b4b9:	repz imul esp,ebx,0xffffffec
  40b4bd:	xor    DWORD PTR [esi-0x4a],edx
  40b4c0:	cmp    eax,0xecb7ca84
  40b4c5:	mov    ch,0x2
  40b4c7:	(bad)  [edx+0x9]
  40b4ca:	xor    al,0x5d
  40b4cc:	(bad)  
  40b4ce:	es mov edx,0xce636d9c
  40b4d4:	fcmovnu st,st(7)
  40b4d6:	xchg   edi,eax
  40b4d7:	or     cl,dl
  40b4d9:	fcom   st(1)
  40b4db:	sbb    bl,ch
  40b4dd:	dec    ebp
  40b4de:	or     dh,BYTE PTR [edi+0x4a]
  40b4e1:	cmc    
  40b4e2:	or     ch,al
  40b4e4:	and    ebp,DWORD PTR [eax]
  40b4e6:	retf   
  40b4e7:	xor    dh,BYTE PTR [ecx]
  40b4e9:	jge    0x40b491
  40b4eb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b4ec:	je     0x40b4c8
  40b4ee:	mov    ds:0x4dc93c19,eax
  40b4f3:	push   es
  40b4f4:	fs (bad) 
  40b4f6:	loopne 0x40b4f9
  40b4f8:	out    dx,al
  40b4f9:	and    DWORD PTR ds:[esi],esp
  40b4fc:	in     al,dx
  40b4fd:	push   cs
  40b4fe:	jne    0x40b558
  40b500:	test   BYTE PTR [eax+0x3],cl
  40b503:	adc    ch,BYTE PTR [edx]
  40b505:	jp     0x40b4fd
  40b507:	add    eax,DWORD PTR [ecx]
  40b509:	je     0x40b4ea
  40b50b:	push   DWORD PTR [edi+0x2aa2db7]
  40b511:	dec    eax
  40b512:	push   es
  40b513:	test   DWORD PTR [esi-0x27],eax
  40b516:	push   ss
  40b517:	dec    edi
  40b518:	add    edx,DWORD PTR ds:0xffda690
  40b51e:	out    0x35,al
  40b520:	dec    esi
  40b521:	pop    edi
  40b522:	lock or ch,BYTE PTR [ecx-0xa]
  40b526:	mov    al,0xb0
  40b528:	mov    fs:0x323bb449,eax
  40b52e:	sbb    eax,0xa0ecde51
  40b533:	mov    ebx,0x39fc813f
  40b538:	xor    BYTE PTR [ebx+0x68],0x17
  40b53c:	ret    
  40b53d:	enter  0x9e9d,0x67
  40b541:	xchg   esp,eax
  40b542:	add    BYTE PTR [edx],0xea
  40b545:	xchg   ebp,eax
  40b546:	pop    ds
  40b547:	fldpi  
  40b549:	push   eax
  40b54a:	mov    BYTE PTR [ebx+0x5e060b33],cl
  40b550:	pop    es
  40b551:	ja     0x40b4f4
  40b553:	inc    ebx
  40b554:	add    esi,esp
  40b556:	lahf   
  40b557:	cmp    edi,ecx
  40b559:	mov    al,ds:0xaef05a37
  40b55e:	rol    BYTE PTR [edx-0x7d],1
  40b561:	sbb    dh,0x34
  40b564:	pop    edi
  40b565:	jp     0x40b5d3
  40b567:	(bad)  
  40b569:	pop    edi
  40b56a:	fsubr  DWORD PTR [edx]
  40b56c:	das    
  40b56d:	lock in al,0x6e
  40b570:	fs dec ebx
  40b572:	push   0xf0528f9a
  40b577:	inc    edi
  40b578:	daa    
  40b579:	push   ecx
  40b57a:	mov    edi,DWORD PTR [eax]
  40b57c:	add    eax,0x1b71de7a
  40b581:	(bad)  
  40b583:	mov    ah,0x16
  40b585:	pop    edx
  40b586:	jnp    0x40b56f
  40b588:	adc    al,0x28
  40b58a:	scas   al,BYTE PTR es:[edi]
  40b58b:	outs   dx,BYTE PTR ds:[esi]
  40b58c:	sbb    ebp,esp
  40b58e:	fisttp WORD PTR [ecx+0x236c4d6e]
  40b594:	xor    eax,0x92309c3d
  40b599:	sbb    BYTE PTR [edi+0x3b352858],cl
  40b59f:	push   ebx
  40b5a0:	mov    ds:0xf8286e5f,eax
  40b5a5:	js     0x40b610
  40b5a7:	icebp  
  40b5a8:	fdivr  DWORD PTR ds:0xc162608
  40b5ae:	pop    ebx
  40b5af:	cdq    
  40b5b0:	arpl   WORD PTR [ebx],bx
  40b5b2:	push   cs
  40b5b3:	push   ebx
  40b5b4:	mov    eax,ds:0x2ccfb26c
  40b5b9:	add    al,0xf3
  40b5bb:	mov    edx,0x7873e6aa
  40b5c0:	sbb    al,0x6d
  40b5c2:	addr16 stc 
  40b5c4:	push   ecx
  40b5c5:	or     BYTE PTR [eax-0x7c6a43cf],ah
  40b5cb:	mov    ds:0x489b6a0f,al
  40b5d0:	mov    cl,0xad
  40b5d2:	out    dx,eax
  40b5d3:	sti    
  40b5d4:	daa    
  40b5d5:	(bad)  
  40b5d7:	dec    esi
  40b5d8:	add    ebx,DWORD PTR [edi-0x2b721a83]
  40b5de:	mov    dl,bl
  40b5e0:	adc    ebp,DWORD PTR [ecx]
  40b5e2:	test   bh,dh
  40b5e4:	(bad)  
  40b5e5:	sbb    edi,DWORD PTR [ebx+0x6d]
  40b5e8:	fs or  al,0xd2
  40b5eb:	mov    eax,0xee88748f
  40b5f0:	pop    es
  40b5f1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b5f2:	jmp    0x40b59e
  40b5f4:	mov    ebp,DWORD PTR [ecx]
  40b5f6:	test   eax,0x7c0a5139
  40b5fb:	xchg   ebx,eax
  40b5fc:	cdq    
  40b5fd:	adc    DWORD PTR [ebp+0x5cbca27e],edx
  40b603:	mov    edx,0x1177f003
  40b608:	daa    
  40b609:	je     0x40b61c
  40b60b:	(bad)  
  40b60c:	adc    dh,al
  40b60e:	pushf  
  40b60f:	push   0xffffffff
  40b611:	inc    esp
  40b612:	and    esi,DWORD PTR [edi]
  40b614:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b615:	add    al,0x9b
  40b617:	call   0xb79:0xbd325fee
  40b61e:	repnz ins BYTE PTR es:[edi],dx
  40b620:	or     eax,0x1c72765c
  40b625:	ror    BYTE PTR [edi],0xcc
  40b628:	clc    
  40b629:	in     al,0x4
  40b62b:	or     ah,BYTE PTR [edx]
  40b62d:	aad    0x2
  40b62f:	and    BYTE PTR [ecx+0x0],0x7e
  40b633:	out    0x1f,eax
  40b635:	jg     0x40b611
  40b637:	nop
  40b638:	out    dx,eax
  40b639:	dec    eax
  40b63a:	sub    al,0x45
  40b63c:	cmp    BYTE PTR [edi],ah
  40b63e:	ds call 0x788b6c7e
  40b644:	test   al,0x1e
  40b646:	inc    ecx
  40b647:	sti    
  40b648:	mov    DWORD PTR es:[esi+0x0],ebx
  40b64c:	js     0x40b62a
  40b64e:	(bad)  
  40b64f:	pop    ebp
  40b650:	jmp    0x1daa:0x3f122988
  40b657:	push   0x86c7d30e
  40b65c:	sub    ah,BYTE PTR [ecx+eax*2+0x79]
  40b660:	dec    ebx
  40b661:	and    DWORD PTR [ebp-0x3df092c2],edx
  40b667:	iret   
  40b668:	mov    al,0x92
  40b66a:	pop    ebx
  40b66b:	pop    ecx
  40b66c:	pop    esi
  40b66d:	mov    ds:0x5001b46d,eax
  40b672:	sub    eax,0xb88f3661
  40b677:	fwait
  40b678:	mov    ebp,DWORD PTR [edi+0x237aa8b7]
  40b67e:	cli    
  40b67f:	push   ebp
  40b680:	push   edx
  40b681:	rcl    BYTE PTR [edx+ebp*4],0xe4
  40b685:	pop    ecx
  40b686:	inc    edi
  40b687:	cmp    al,0x60
  40b689:	xchg   esp,eax
  40b68a:	add    al,0xc4
  40b68c:	clc    
  40b68d:	push   esi
  40b68e:	shl    BYTE PTR [ecx-0x4b],cl
  40b691:	xor    al,0x3e
  40b693:	mov    DWORD PTR [edx+0x3f40e101],eax
  40b699:	popf   
  40b69a:	inc    edx
  40b69b:	inc    ecx
  40b69c:	inc    eax
  40b69d:	cmp    eax,0x585f909a
  40b6a2:	popa   
  40b6a3:	pop    ebp
  40b6a4:	xchg   esp,eax
  40b6a5:	and    al,0x23
  40b6a7:	inc    ebp
  40b6a8:	push   bx
  40b6aa:	pop    esp
  40b6ab:	and    al,0x9b
  40b6ad:	xor    BYTE PTR [eax-0xc],0x2e
  40b6b1:	aas    
  40b6b2:	ja     0x40b6f7
  40b6b4:	sub    ebx,DWORD PTR [eax-0x3136ddda]
  40b6ba:	pop    ebx
  40b6bb:	add    ah,BYTE PTR [ebx]
  40b6bd:	popa   
  40b6be:	push   ss
  40b6bf:	cmp    al,0x87
  40b6c1:	pop    esi
  40b6c2:	je     0x40b6dc
  40b6c4:	inc    eax
  40b6c5:	dec    esi
  40b6c6:	xor    DWORD PTR [ebx],esi
  40b6c8:	cwde   
  40b6c9:	fbld   TBYTE PTR [edi-0x4f]
  40b6cc:	fdiv   QWORD PTR [ecx-0x7a]
  40b6cf:	mov    cl,0xf1
  40b6d1:	dec    ebx
  40b6d2:	(bad)  
  40b6d3:	jmp    FWORD PTR [ebp-0x5b]
  40b6d6:	xor    eax,DWORD PTR [ecx-0x17]
  40b6d9:	add    al,0x3d
  40b6db:	pop    ebp
  40b6dc:	out    dx,eax
  40b6dd:	loope  0x40b685
  40b6df:	shr    esp,cl
  40b6e1:	int3   
  40b6e2:	nop
  40b6e3:	xlat   BYTE PTR ds:[ebx]
  40b6e4:	mov    edx,0x50a1297b
  40b6e9:	in     al,dx
  40b6ea:	enter  0x906e,0x15
  40b6ee:	rcr    BYTE PTR [edx],1
  40b6f0:	out    dx,al
  40b6f1:	dec    ecx
  40b6f2:	or     bh,BYTE PTR [edx+0x20]
  40b6f5:	jg     0x40b76c
  40b6f7:	dec    esp
  40b6f8:	adc    bh,BYTE PTR [edi-0x34ffd44e]
  40b6fe:	dec    ecx
  40b6ff:	clc    
  40b700:	mov    edx,0xecbad9ab
  40b705:	cmp    BYTE PTR [edx+0x146a57d9],ch
  40b70b:	in     eax,0xd8
  40b70d:	mov    cl,0xc6
  40b70f:	aam    0xa6
  40b711:	leave  
  40b712:	add    al,0xe0
  40b714:	rcl    BYTE PTR [edi+0x65],cl
  40b717:	aad    0x94
  40b719:	pop    ds
  40b71a:	or     BYTE PTR [eax+0x61],ah
  40b71d:	lods   eax,DWORD PTR ds:[esi]
  40b71e:	inc    ecx
  40b71f:	push   ds
  40b720:	jg     0x40b799
  40b722:	mov    edi,0x1a6459af
  40b727:	add    eax,0xbb75cfc9
  40b72c:	cs pusha 
  40b72e:	call   0x1b2c:0xf1c9ca32
  40b735:	call   0x8c5650ca
  40b73a:	push   ebx
  40b73b:	js     0x40b701
  40b73d:	outs   dx,DWORD PTR ds:[esi]
  40b73e:	xor    edi,esi
  40b740:	ins    BYTE PTR es:[edi],dx
  40b741:	cmp    ah,BYTE PTR [ecx]
  40b743:	add    DWORD PTR [ebp+ebx*1-0x5ad489b1],ecx
  40b74a:	(bad)  
  40b74b:	aaa    
  40b74c:	inc    ebp
  40b74d:	(bad)  
  40b74e:	clc    
  40b74f:	push   edi
  40b750:	ret    0xc512
  40b753:	mov    al,ds:0xcda3c499
  40b758:	arpl   WORD PTR [ebx],sp
  40b75a:	xchg   ebp,ebp
  40b75c:	ins    DWORD PTR es:[edi],dx
  40b75d:	ins    BYTE PTR es:[edi],dx
  40b75e:	test   BYTE PTR [edi],0xc2
  40b761:	lahf   
  40b762:	rol    DWORD PTR [edi+0x24f0da89],cl
  40b768:	js     0x40b785
  40b76a:	(bad)  
  40b76b:	cld    
  40b76c:	mov    ebx,0x7640978d
  40b771:	mov    bh,0x7
  40b773:	mov    BYTE PTR [edx],bh
  40b775:	pop    ebp
  40b776:	adc    bl,BYTE PTR [ebx+edi*1-0x6]
  40b77a:	lahf   
  40b77b:	inc    esi
  40b77c:	js     0x40b7d0
  40b77e:	ja     0x40b78e
  40b780:	inc    esp
  40b781:	mov    edx,0x819813f6
  40b786:	jne    0x40b71d
  40b788:	adc    eax,0x8d47d6af
  40b78d:	fwait
  40b78e:	out    0x7f,eax
  40b790:	pop    esi
  40b791:	js     0x40b7ec
  40b793:	test   BYTE PTR [edi+0x4dfa6e84],0x84
  40b79a:	mov    ebp,0x12bf9bed
  40b79f:	int3   
  40b7a0:	dec    ecx
  40b7a1:	push   ecx
  40b7a2:	les    eax,FWORD PTR gs:[edx]
  40b7a5:	inc    ebp
  40b7a6:	adc    al,0x5e
  40b7a8:	loopne 0x40b74d
  40b7aa:	fiadd  DWORD PTR [ecx+edi*1-0x1c94f669]
  40b7b1:	jo     0x40b7fe
  40b7b3:	push   esp
  40b7b4:	shl    BYTE PTR [ecx+0x69],cl
  40b7b7:	inc    esp
  40b7b8:	mov    cl,0xd9
  40b7ba:	loopne 0x40b79c
  40b7bc:	int    0xa
  40b7be:	(bad)  
  40b7bf:	adc    DWORD PTR [ebx],esi
  40b7c1:	cs (bad) 
  40b7c3:	scas   eax,DWORD PTR es:[edi]
  40b7c4:	xor    BYTE PTR [ebx-0x18],0xcb
  40b7c8:	outs   dx,DWORD PTR ds:[esi]
  40b7c9:	je     0x40b7e7
  40b7cb:	jmp    0xd7c79eb3
  40b7d0:	rcl    DWORD PTR [eax+edi*1],0x12
  40b7d4:	vpshlw xmm10,[ecx-0x5e417fcb],xmm6
  40b7dd:	inc    ecx
  40b7de:	cli    
  40b7df:	mov    cl,0xa8
  40b7e1:	sub    al,0x96
  40b7e3:	rcr    DWORD PTR ds:0x94e8e063,cl
  40b7e9:	stos   BYTE PTR es:[edi],al
  40b7ea:	ja     0x40b779
  40b7ec:	mov    dl,0x53
  40b7ee:	in     eax,0x82
  40b7f0:	pop    edx
  40b7f1:	adc    DWORD PTR [edi-0x7a8dc80f],esp
  40b7f7:	xor    al,0xa4
  40b7f9:	retf   
  40b7fa:	adc    DWORD PTR [ebx],esi
  40b7fc:	lds    eax,FWORD PTR [ecx+0x1f]
  40b7ff:	jmp    0xe79a:0x65491bd4
  40b806:	inc    eax
  40b807:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b808:	add    edi,DWORD PTR [edi]
  40b80a:	inc    ebx
  40b80b:	ins    DWORD PTR es:[edi],dx
  40b80c:	loopne 0x40b794
  40b80e:	(bad)  
  40b80f:	xchg   edi,eax
  40b810:	xor    al,0x9a
  40b812:	sub    ebx,ebp
  40b814:	pop    ebp
  40b815:	retf   0x6d24
  40b818:	nop
  40b819:	mov    ebp,0xac3cc1da
  40b81e:	mov    ebx,0x1be6e09d
  40b823:	repz ja 0x40b8a5
  40b826:	jmp    0x3e91a090
  40b82b:	leave  
  40b82c:	cs aam 0xa9
  40b82f:	fild   QWORD PTR [esi]
  40b831:	jle    0x40b816
  40b833:	jmp    0x40b80b
  40b835:	inc    esp
  40b836:	jns    0x40b817
  40b838:	sub    al,BYTE PTR [edi+0x694bfe8]
  40b83e:	sbb    ebx,esp
  40b840:	xchg   ecx,eax
  40b841:	lods   al,BYTE PTR ds:[esi]
  40b842:	xor    al,BYTE PTR [ecx]
  40b844:	sti    
  40b845:	fwait
  40b846:	ins    DWORD PTR es:[edi],dx
  40b847:	lea    ecx,[eax+0x74]
  40b84a:	int3   
  40b84b:	dec    ebp
  40b84c:	mov    ecx,0xe4ebbf0a
  40b851:	arpl   WORD PTR ds:[eax+0x298b3133],di
  40b858:	mov    dh,0xf8
  40b85a:	pop    edx
  40b85b:	add    esi,esp
  40b85d:	mov    bl,0x6d
  40b85f:	mov    esi,0xd4f0a6a
  40b864:	mov    bl,al
  40b866:	call   0x5da8:0x2d7a4977
  40b86d:	(bad)  
  40b86e:	int3   
  40b86f:	(bad)  
  40b870:	inc    esp
  40b871:	xchg   esi,eax
  40b872:	call   0xb636195c
  40b877:	ds mov ebx,0x12e95a9e
  40b87d:	push   edx
  40b87e:	sbb    BYTE PTR [eax-0x67],0x68
  40b882:	shr    BYTE PTR [ecx+ebp*1],0x8a
  40b886:	jne    0x40b80a
  40b888:	das    
  40b889:	mul    bl
  40b88b:	stc    
  40b88c:	js     0x40b8ed
  40b88e:	mov    ds:0x7a7f9bc1,al
  40b893:	ds xchg ecx,eax
  40b895:	pop    ebx
  40b896:	fnsave [edi-0x15]
  40b899:	scas   al,BYTE PTR es:[edi]
  40b89a:	mov    ecx,0x9b749643
  40b89f:	adc    eax,0x7970ac56
  40b8a4:	nop
  40b8a5:	in     eax,0x82
  40b8a7:	dec    esp
  40b8a8:	sub    eax,0x5788aba7
  40b8ad:	in     al,0x22
  40b8af:	gs jmp 0x40b8c3
  40b8b2:	test   BYTE PTR ds:0x350fcf2e,ah
  40b8b8:	cld    
  40b8b9:	mov    edi,DWORD PTR [esi-0x46ac497f]
  40b8bf:	jle    0x40b88c
  40b8c1:	sbb    al,0x7
  40b8c3:	popf   
  40b8c4:	in     eax,0x7
  40b8c6:	push   0xffffffbc
  40b8c8:	int3   
  40b8c9:	cs inc ebp
  40b8cb:	ja     0x40b922
  40b8cd:	mov    ebx,0x6aaf49db
  40b8d2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b8d3:	pop    edx
  40b8d4:	push   ds
  40b8d5:	fisub  WORD PTR ds:0x865a207e
  40b8db:	inc    eax
  40b8dc:	and    BYTE PTR [eax+0x3f],al
  40b8df:	out    dx,al
  40b8e0:	adc    BYTE PTR [ebx+0x5b],0xf4
  40b8e4:	mov    ecx,0xa13fca8e
  40b8e9:	mov    ebx,0x6043bd82
  40b8ee:	pushf  
  40b8ef:	or     DWORD PTR [ecx-0x3dcc0826],0xb
  40b8f6:	xchg   edx,eax
  40b8f7:	rcl    DWORD PTR [edi],1
  40b8f9:	mov    al,0x52
  40b8fb:	jne    0x40b920
  40b8fd:	lods   eax,DWORD PTR ds:[esi]
  40b8fe:	push   0x2b
  40b900:	outs   dx,BYTE PTR ds:[esi]
  40b901:	call   0x26f2cafd
  40b906:	icebp  
  40b907:	arpl   di,dx
  40b909:	push   edi
  40b90a:	int3   
  40b90b:	pop    ecx
  40b90c:	pop    ebx
  40b90d:	adc    DWORD PTR [eax],edx
  40b90f:	adc    eax,0x28244968
  40b914:	aad    0x41
  40b916:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b917:	repz aas 
  40b919:	lds    edi,FWORD PTR [esp+ebp*2+0x7f]
  40b91d:	adc    eax,0x7eceb000
  40b922:	je     0x40b958
  40b924:	(bad)  
  40b925:	int3   
  40b926:	xchg   edx,eax
  40b927:	bts    ebx,edx
  40b92a:	adc    al,al
  40b92c:	data16 neg BYTE PTR [edx+0x23]
  40b930:	aam    0x38
  40b932:	fnsave [esi+0x79]
  40b935:	xchg   esp,eax
  40b936:	std    
  40b937:	cwde   
  40b938:	inc    edi
  40b939:	mov    al,ds:0x27f54ad6
  40b93e:	jb     0x40b95d
  40b940:	shr    edi,cl
  40b942:	int    0xbf
  40b944:	cmp    BYTE PTR [ebp-0x593e4e32],dl
  40b94a:	hlt    
  40b94b:	or     BYTE PTR [esi+ebp*2+0x23],cl
  40b94f:	jne    0x40b961
  40b951:	(bad)  
  40b954:	or     eax,0xea078624
  40b959:	xchg   ebp,eax
  40b95a:	dec    esp
  40b95b:	jp     0x40b9a7
  40b95d:	in     eax,0x63
  40b95f:	in     al,0x43
  40b961:	push   es
  40b962:	ret    0xee8e
  40b965:	sar    BYTE PTR [eax*4+0x36beaea2],cl
  40b96c:	or     eax,0xddc530d9
  40b971:	jno    0x40b98b
  40b973:	or     DWORD PTR [ebx-0x129a2539],esi
  40b979:	pop    ds
  40b97a:	mov    bh,0xb7
  40b97c:	or     edx,ecx
  40b97e:	push   eax
  40b97f:	sub    dl,BYTE PTR [ebx+0x2d5901c]
  40b985:	push   0xffffffcc
  40b987:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b988:	sbb    al,BYTE PTR [eax-0x1e8f72ca]
  40b98e:	mov    ecx,DWORD PTR [esi]
  40b990:	sbb    al,0xf6
  40b992:	xor    al,0x2d
  40b994:	icebp  
  40b995:	inc    ebx
  40b996:	hlt    
  40b997:	push   0xfffffff1
  40b999:	ret    0x8549
  40b99c:	push   ss
  40b99d:	sub    al,0xf6
  40b99f:	pop    edx
  40b9a0:	dec    esp
  40b9a1:	sub    eax,0x717ae9db
  40b9a6:	add    BYTE PTR ds:0xa9e90d05,0x34
  40b9ad:	xchg   ebx,eax
  40b9ae:	shl    ch,1
  40b9b0:	(bad)  
  40b9b2:	popf   
  40b9b3:	in     al,dx
  40b9b4:	outs   dx,DWORD PTR ds:[esi]
  40b9b5:	xchg   edx,eax
  40b9b6:	das    
  40b9b7:	add    al,0xcf
  40b9b9:	outs   dx,BYTE PTR ds:[esi]
  40b9ba:	retf   0x5591
  40b9bd:	mov    eax,0x8ba184c6
  40b9c2:	ret    
  40b9c3:	add    al,0x5a
  40b9c5:	xor    al,0x83
  40b9c7:	xchg   edx,eax
  40b9c8:	ret    0x4666
  40b9cb:	pop    ss
  40b9cc:	ins    BYTE PTR es:[edi],dx
  40b9cd:	mov    edx,0xdabea6b9
  40b9d2:	and    edi,DWORD PTR [esi-0x28]
  40b9d5:	dec    dh
  40b9d7:	imul   esi,esp,0xffffff9f
  40b9da:	(bad)  [ebx]
  40b9dc:	sub    dl,BYTE PTR [ebx]
  40b9de:	popa   
  40b9df:	mov    ecx,0xf5f56dca
  40b9e4:	inc    ebp
  40b9e5:	cld    
  40b9e6:	ja     0x40b973
  40b9e8:	mov    dl,0x2b
  40b9ea:	scas   eax,DWORD PTR es:[edi]
  40b9eb:	loop   0x40ba25
  40b9ed:	push   0x3a
  40b9ef:	into   
  40b9f0:	fisttp QWORD PTR ds:0xf919624c
  40b9f6:	sbb    DWORD PTR [edx-0x51],esp
  40b9f9:	ret    0xe0d7
  40b9fc:	jns    0x40b990
  40b9fe:	retf   
  40b9ff:	test   DWORD PTR [esp+eiz*2-0x77],ebp
  40ba03:	xchg   BYTE PTR [edi+ebx*8+0x3c],cl
  40ba07:	lods   eax,DWORD PTR ds:[esi]
  40ba08:	jle    0x40b993
  40ba0a:	mov    edx,0xd41d0ba
  40ba0f:	addr16 and eax,0x12f8fe99
  40ba15:	iret   
  40ba16:	add    ebp,DWORD PTR [edi-0x5]
  40ba19:	add    edx,DWORD PTR [edi-0x15]
  40ba1c:	outs   dx,DWORD PTR ds:[esi]
  40ba1d:	rol    DWORD PTR [edi+0x5a],1
  40ba20:	inc    eax
  40ba21:	loopne 0x40b9a4
  40ba23:	jmp    0xe75ea6f3
  40ba28:	adc    eax,0x6baae01a
  40ba2d:	std    
  40ba2e:	cmp    esp,DWORD PTR [edx]
  40ba30:	and    BYTE PTR [esi-0x76],ch
  40ba33:	adc    DWORD PTR [ecx-0x16f8a072],0x7de34ab9
  40ba3d:	mov    ecx,0xc0074546
  40ba42:	pop    ebp
  40ba43:	mov    BYTE PTR [eax-0x392dfff5],dh
  40ba49:	dec    edi
  40ba4a:	fsubr  QWORD PTR [esi-0x36]
  40ba4d:	mov    edi,esi
  40ba4f:	inc    edx
  40ba50:	iret   
  40ba51:	test   esp,edx
  40ba53:	imul   esi,DWORD PTR [ebp+esi*4-0x53],0xffffffd3
  40ba58:	test   al,0xbf
  40ba5a:	scas   eax,DWORD PTR es:[edi]
  40ba5b:	xchg   edx,eax
  40ba5c:	(bad)  
  40ba5d:	in     eax,dx
  40ba5e:	or     ecx,esp
  40ba60:	ja     0x40ba05
  40ba62:	idiv   esp
  40ba64:	(bad)  
  40ba65:	in     al,dx
  40ba66:	test   BYTE PTR [eax],al
  40ba68:	adc    ebx,DWORD PTR [edx+0x5c]
  40ba6b:	outs   dx,DWORD PTR ds:[esi]
  40ba6c:	xor    al,0x25
  40ba6e:	xchg   ecx,eax
  40ba6f:	push   ds
  40ba70:	sub    DWORD PTR [eax+0x6d369751],ebp
  40ba76:	stc    
  40ba77:	mov    ebx,0xc724272d
  40ba7c:	cwde   
  40ba7d:	cmp    al,0x63
  40ba7f:	jno    0x40bad3
  40ba81:	adc    eax,0x3d56d9cb
  40ba86:	sub    eax,0x40ca58fd
  40ba8b:	xor    DWORD PTR [ebp-0x43],0xffffffb4
  40ba8f:	cmps   BYTE PTR gs:[esi],BYTE PTR es:[edi]
  40ba91:	jnp    0x40baff
  40ba93:	xchg   DWORD PTR [ecx],esp
  40ba95:	rol    DWORD PTR [esi],cl
  40ba97:	cmc    
  40ba98:	xchg   DWORD PTR [edx+esi*8+0x9],ecx
  40ba9c:	mov    al,ds:0x7728f86a
  40baa1:	add    edx,DWORD PTR [edx+0x5]
  40baa4:	sbb    BYTE PTR [edi+0x4f728c02],0xeb
  40baab:	adc    al,0xb8
  40baad:	(bad)  
  40baae:	enter  0x457a,0x59
  40bab2:	lds    eax,FWORD PTR [eax+0x46]
  40bab5:	stos   BYTE PTR es:[edi],al
  40bab6:	cdq    
  40bab7:	arpl   WORD PTR [eax-0x751be5e7],si
  40babd:	adc    eax,0x864e47eb
  40bac2:	fs or  eax,0x88be02cc
  40bac8:	sahf   
  40bac9:	mul    BYTE PTR [edx-0x1916dbc0]
  40bacf:	cmc    
  40bad0:	push   cs
  40bad1:	push   ecx
  40bad2:	jbe    0x40bad9
  40bad4:	mov    dh,0xfc
  40bad6:	push   ss
  40bad7:	test   eax,0x5982f0b
  40badc:	icebp  
  40badd:	fild   QWORD PTR [eax-0x7f3fe2ac]
  40bae3:	(bad)  
  40bae4:	sti    
  40bae5:	xchg   edi,eax
  40bae6:	or     eax,0x9ea326cd
  40baeb:	std    
  40baec:	mov    esp,0xfc0134f1
  40baf1:	pop    es
  40baf2:	push   edi
  40baf3:	cld    
  40baf4:	inc    edi
  40baf5:	ins    DWORD PTR es:[edi],dx
  40baf6:	push   ebx
  40baf7:	mov    ebx,0x73c77fb
  40bafc:	pop    eax
  40bafd:	jp     0x40bad5
  40baff:	call   0x7350fc32
  40bb04:	int3   
  40bb05:	pop    esi
  40bb06:	xor    eax,0x95157582
  40bb0b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40bb0c:	addr16 mov dh,0x8f
  40bb0f:	push   ecx
  40bb10:	data16 rcr BYTE PTR [ebx+ebp*2],1
  40bb14:	(bad)  ds:0x8fad668d
  40bb1a:	jae    0x40bb1b
  40bb1c:	sub    eax,0x90325817
  40bb21:	adc    eax,0x4bda5ac9
  40bb26:	aad    0xe5
  40bb28:	int3   
  40bb29:	inc    edx
  40bb2a:	sbb    esi,DWORD PTR [ecx+0x5c]
  40bb2d:	sub    DWORD PTR [ecx+edi*2-0x23ebe4dc],ebx
  40bb34:	out    0xe0,eax
  40bb36:	xor    BYTE PTR [edi-0x69],0xf4
  40bb3a:	fild   WORD PTR [ecx]
  40bb3c:	fldenv [ecx]
  40bb3e:	cmp    al,0x5a
  40bb41:	xor    DWORD PTR [esi+ecx*8+0x44f3943a],esp
  40bb48:	dec    edx
  40bb49:	fldcw  WORD PTR [edx]
  40bb4b:	imul   ebx,DWORD PTR [ebx+edx*8+0x3b2a962],0x382a4fad
  40bb56:	inc    ebp
  40bb57:	fbld   TBYTE PTR [esi]
  40bb59:	jo     0x40bb5a
  40bb5b:	fwait
  40bb5c:	ds lock inc eax
  40bb5f:	inc    edx
  40bb60:	pop    esi
  40bb61:	mov    WORD PTR [eax],?
  40bb63:	mov    al,0xd9
  40bb65:	pop    ss
  40bb66:	ret    0xcaef
  40bb69:	pop    ebp
  40bb6a:	ror    bh,1
  40bb6c:	imul   BYTE PTR [edi]
  40bb6e:	adc    eax,0x63995319
  40bb73:	lods   eax,DWORD PTR ds:[esi]
  40bb74:	adc    DWORD PTR [edx],ebx
  40bb76:	fwait
  40bb77:	daa    
  40bb78:	sbb    BYTE PTR [ebx],ch
  40bb7a:	cld    
  40bb7b:	(bad)  
  40bb7c:	shr    BYTE PTR [ebp+0x73],1
  40bb7f:	push   esp
  40bb80:	jo     0x40bb32
  40bb82:	jae    0x40bb77
  40bb84:	add    eax,0xcd98928a
  40bb89:	ret    
  40bb8a:	pop    ss
  40bb8b:	jbe    0x40bc08
  40bb8d:	sub    edx,edi
  40bb8f:	fsubr  st(0),st
  40bb91:	adc    ecx,ecx
  40bb93:	pusha  
  40bb94:	movntps XMMWORD PTR ds:0x5cc7acef,xmm2
  40bb9b:	xchg   ecx,eax
  40bb9c:	xchg   ebx,eax
  40bb9d:	sub    DWORD PTR [ebx-0x5e7e5969],esp
  40bba3:	add    DWORD PTR [edi-0x2b],edi
  40bba6:	arpl   WORD PTR [eax],sp
  40bba8:	repz dec eax
  40bbaa:	popa   
  40bbab:	jbe    0x40bb6b
  40bbad:	ins    BYTE PTR es:[edi],dx
  40bbae:	mov    dh,0x25
  40bbb0:	ret    0xb5ee
  40bbb3:	jmp    0x17ac0823
  40bbb8:	(bad)  
  40bbb9:	pop    ds
  40bbba:	sbb    DWORD PTR [edx+ebp*4-0x64],0x5b
  40bbbf:	std    
  40bbc0:	lds    edx,FWORD PTR fs:[bp+si-0x14c1]
  40bbc6:	lahf   
  40bbc7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40bbc8:	imul   edx,DWORD PTR [eax+0x11],0xffffffcd
  40bbcc:	xchg   ebx,eax
  40bbcd:	jb     0x9935c5eb
  40bbd3:	inc    ecx
  40bbd4:	pusha  
  40bbd5:	pop    ss
  40bbd6:	fld    DWORD PTR [ebx+0x44]
  40bbda:	adc    DWORD PTR [edi],0xffffffa8
  40bbdd:	sub    al,0xb5
  40bbdf:	pop    edx
  40bbe0:	mov    al,0x63
  40bbe2:	ret    0xc09d
  40bbe5:	adc    DWORD PTR [ebx-0x393684d1],esp
  40bbeb:	jnp    0x40bbef
  40bbed:	xchg   edx,eax
  40bbee:	push   esp
  40bbef:	sahf   
  40bbf0:	add    BYTE PTR [ebx+0x32],ah
  40bbf3:	daa    
  40bbf4:	(bad)  
  40bbf5:	call   0x324b4748
  40bbfa:	cli    
  40bbfb:	and    edx,edi
  40bbfd:	pop    es
  40bbfe:	lock mov eax,0xfc99586c
  40bc04:	and    al,BYTE PTR [eax]
  40bc06:	pop    eax
  40bc07:	jbe    0x40bc6b
  40bc09:	ds lock mov dh,0x60
  40bc0d:	in     al,dx
  40bc0e:	fadd   DWORD PTR [edi+0x76]
  40bc11:	fild   QWORD PTR [eax+0x6f1ada70]
  40bc17:	cmp    edx,DWORD PTR [esi-0x94aa7e0]
  40bc1d:	cld    
  40bc1e:	hlt    
  40bc1f:	pop    ds
  40bc20:	cmove  ebx,DWORD PTR [ecx+0x5b8b3b24]
  40bc27:	sub    BYTE PTR [ebp-0x26],cl
  40bc2a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40bc2b:	imul   edx,DWORD PTR [ebp-0x54],0x6d
  40bc2f:	cwde   
  40bc30:	pop    ebp
  40bc31:	gs mov edx,0x1ccff0df
  40bc37:	stc    
  40bc38:	fistp  QWORD PTR [edx-0x28]
  40bc3b:	mov    ch,0x3d
  40bc3d:	out    0xd4,al
  40bc3f:	lea    esi,[esi-0x1e4d2c6d]
  40bc45:	cdq    
  40bc46:	inc    ebx
  40bc47:	push   edx
  40bc48:	mov    dh,0x6d
  40bc4a:	cld    
  40bc4b:	stos   DWORD PTR es:[edi],eax
  40bc4c:	loop   0x40bc84
  40bc4e:	(bad)  
  40bc4f:	imul   edi,DWORD PTR [ecx-0x29e0b6c3],0xdfc9af75
  40bc59:	dec    eax
  40bc5a:	sub    DWORD PTR [esi+0x46],edi
  40bc5d:	xchg   edi,eax
  40bc5e:	cmp    esi,ebx
  40bc60:	jmp    0x40bbe6
  40bc62:	mov    dh,0x2c
  40bc64:	leave  
  40bc65:	pop    ds
  40bc66:	lock sar BYTE PTR ds:0x1371f88,1
  40bc6d:	push   esi
  40bc6e:	xchg   edi,eax
  40bc6f:	sbb    eax,0x5ae43807
  40bc74:	and    BYTE PTR [ecx+0x1ab77586],bh
  40bc7a:	loop   0x40bc59
  40bc7c:	adc    BYTE PTR [edi+0x4989b209],al
  40bc82:	imul   eax,ebx,0x83a87442
  40bc88:	ficomp WORD PTR [esi]
  40bc8a:	sbb    DWORD PTR [esi+esi*2-0x36],0xfcd0fcae
  40bc92:	lods   al,BYTE PTR ds:[esi]
  40bc93:	mov    dl,0xca
  40bc95:	shr    BYTE PTR [eax],1
  40bc97:	stos   BYTE PTR es:[edi],al
  40bc98:	xlat   BYTE PTR ds:[ebx]
  40bc99:	push   ebx
  40bc9a:	or     al,0x23
  40bc9c:	rol    dh,cl
  40bc9e:	mov    eax,DWORD PTR [edi+0x7f7ea790]
  40bca4:	cmp    eax,0x33eff892
  40bca9:	(bad)  
  40bcaa:	das    
  40bcab:	add    DWORD PTR [ebp+0x118c4da4],ecx
  40bcb1:	sub    al,0x92
  40bcb3:	stos   DWORD PTR es:[edi],eax
  40bcb4:	mov    cs:0x3fbfa39,al
  40bcba:	outs   dx,DWORD PTR ds:[esi]
  40bcbb:	or     eax,0x6d784db5
  40bcc0:	push   ds
  40bcc1:	es dec ebp
  40bcc3:	lea    edi,[eax-0x20]
  40bcc6:	out    dx,al
  40bcc7:	ins    BYTE PTR es:[edi],dx
  40bcc8:	pushf  
  40bcc9:	fild   DWORD PTR [ecx-0x33]
  40bccc:	mov    ch,0x28
  40bcce:	add    ecx,eax
  40bcd0:	in     al,0xdf
  40bcd2:	lock inc edi
  40bcd4:	inc    eax
  40bcd5:	sub    BYTE PTR [esi+0x5619094d],dh
  40bcdb:	es cld 
  40bcdd:	xchg   edi,eax
  40bcde:	dec    ecx
  40bcdf:	xchg   edi,eax
  40bce0:	iret   
  40bce1:	out    dx,eax
  40bce2:	pusha  
  40bce3:	cmp    eax,0xc48dc990
  40bce8:	idiv   BYTE PTR [ebx]
  40bcea:	or     ebp,ebp
  40bcec:	mov    edx,0xf0d056d1
  40bcf1:	pop    eax
  40bcf2:	mov    bl,0x8d
  40bcf4:	mov    fs,WORD PTR [esi-0x3f]
  40bcf7:	in     eax,0xbb
  40bcf9:	pop    ecx
  40bcfa:	xchg   ecx,eax
  40bcfb:	and    BYTE PTR [eax],dh
  40bcfd:	pusha  
  40bcfe:	sbb    ebx,DWORD PTR [ebx]
  40bd00:	add    DWORD PTR [esi+ebp*2-0x60ead684],eax
  40bd07:	data16 sub BYTE PTR [edi],ch
  40bd0a:	mov    WORD PTR [ebx+0x46b4df8e],es
  40bd10:	ret    0x1e97
  40bd13:	dec    edi
  40bd14:	fidiv  WORD PTR [esp+eax*2-0xbea0f07]
  40bd1b:	or     DWORD PTR [edx+0x5ee77179],0x16
  40bd22:	ret    
  40bd23:	clc    
  40bd24:	stc    
  40bd25:	gs adc eax,0x83853ed8
  40bd2b:	inc    esi
  40bd2c:	xchg   ecx,eax
  40bd2d:	fnstenv [ebp+0x1]
  40bd30:	lods   al,BYTE PTR ds:[esi]
  40bd31:	nop
  40bd32:	jg     0x40bcc5
  40bd34:	xchg   ecx,eax
  40bd35:	psrad  mm2,QWORD PTR [ebp+0x32]
  40bd39:	mov    dh,BYTE PTR [edx+0x519ffba2]
  40bd3f:	dec    ecx
  40bd40:	es sbb bl,bh
  40bd43:	(bad)  
  40bd44:	popf   
  40bd45:	scas   eax,DWORD PTR es:[edi]
  40bd46:	lock loope 0x40bd60
  40bd49:	mov    bl,0xc1
  40bd4b:	pop    esi
  40bd4c:	aad    0xd6
  40bd4e:	cmp    DWORD PTR [edx],edx
  40bd50:	(bad)  
  40bd51:	jmp    0x453604c1
  40bd56:	loop   0x40bd38
  40bd58:	hlt    
  40bd59:	cmc    
  40bd5a:	sub    al,0x2f
  40bd5c:	mov    esi,0xab8e3704
  40bd61:	mov    ebp,0xb3a7ca08
  40bd66:	mov    dh,0xb6
  40bd68:	add    BYTE PTR [edi-0x5e],dl
  40bd6b:	int    0xdf
  40bd6d:	mov    gs,WORD PTR [esi]
  40bd6f:	sar    DWORD PTR [ecx],1
  40bd71:	sahf   
  40bd72:	std    
  40bd73:	setl   BYTE PTR [edx+0xc]
  40bd77:	mov    al,ds:0x67aa8f01
  40bd7c:	fcomp  QWORD PTR [eax-0x65a3c2d3]
  40bd82:	jo     0x40bdec
  40bd84:	sub    al,0x14
  40bd86:	fwait
  40bd87:	push   edi
  40bd88:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40bd89:	sbb    BYTE PTR [edx+0x25da5fcc],ah
  40bd8f:	and    bh,bh
  40bd91:	mov    ds:0xa6c1d660,eax
  40bd96:	sar    dl,cl
  40bd98:	dec    ecx
  40bd99:	adc    BYTE PTR [edi],cl
  40bd9b:	mov    edi,ebp
  40bd9d:	jge    0x40bda7
  40bd9f:	into   
  40bda0:	mov    eax,ds:0x6711723a
  40bda5:	fcom   DWORD PTR [edx]
  40bda7:	xor    al,BYTE PTR [ecx-0x2b920162]
  40bdad:	repnz ins DWORD PTR es:[edi],dx
  40bdaf:	push   esp
  40bdb0:	mov    bh,0x41
  40bdb2:	dec    edi
  40bdb3:	sbb    esp,DWORD PTR [ecx]
  40bdb5:	push   esp
  40bdb6:	es int3 
  40bdb8:	cmp    BYTE PTR [eax-0xcdf7dc4],ah
  40bdbe:	gs inc esi
  40bdc0:	shl    BYTE PTR [edx],1
  40bdc2:	loopne 0x40be0e
  40bdc4:	out    0x1c,al
  40bdc6:	add    BYTE PTR [edx+0x4490713c],bl
  40bdcc:	std    
  40bdcd:	(bad)  
  40bdce:	in     eax,0xdd
  40bdd0:	ret    0x7cee
  40bdd3:	mov    ebp,0x50411ca2
  40bdd8:	loop   0x40bdbe
  40bdda:	or     eax,0x8cd687
  40bddf:	lods   al,BYTE PTR ds:[esi]
  40bde0:	sub    al,0x62
  40bde2:	add    ecx,ebx
  40bde4:	ror    ecx,0x9d
  40bde7:	push   edi
  40bde8:	or     dh,ch
  40bdea:	stos   BYTE PTR es:[edi],al
  40bdeb:	adc    ecx,ecx
  40bded:	jnp    0x40bd91
  40bdef:	pop    esp
  40bdf0:	xor    ebp,edi
  40bdf2:	or     BYTE PTR [edx-0x43],ah
  40bdf5:	push   es
  40bdf6:	fst    QWORD PTR [eax+edi*8+0x44c1ddf1]
  40bdfd:	or     eax,0xcde2893b
  40be02:	shl    BYTE PTR [ebx-0x4b],cl
  40be05:	rol    DWORD PTR [ebx-0x47],cl
  40be08:	in     eax,0x3a
  40be0a:	mov    ds,WORD PTR [eax-0x22]
  40be0d:	pop    es
  40be0e:	aam    0x6
  40be10:	ret    
  40be11:	mov    dl,0x97
  40be13:	dec    ebx
  40be14:	loopne 0x40be82
  40be16:	sub    BYTE PTR [edi],0x72
  40be19:	push   esp
  40be1a:	aad    0xf7
  40be1c:	add    al,0x23
  40be1e:	mov    al,0x79
  40be20:	xchg   edx,eax
  40be21:	mov    eax,0x9cfc2abd
  40be26:	adc    BYTE PTR [ecx-0x5243f177],ah
  40be2c:	mov    cl,0xc3
  40be2e:	or     eax,0xbdaff0be
  40be33:	mov    cl,0x5c
  40be35:	xor    eax,0x35340b3c
  40be3a:	add    edi,DWORD PTR [eax]
  40be3c:	stos   DWORD PTR es:[edi],eax
  40be3d:	add    eax,DWORD PTR [ecx-0x6d]
  40be40:	or     ecx,edi
  40be42:	es jg  0x40be8f
  40be45:	loope  0x40be45
  40be47:	sbb    ch,BYTE PTR [edx+eiz*2-0xf78a115]
  40be4e:	popa   
  40be4f:	(bad)  
  40be50:	lock shr DWORD PTR [ebx+0x79],0x62
  40be55:	loope  0x40bde1
  40be57:	jle    0x40bea8
  40be59:	jg     0x40be12
  40be5b:	dec    edx
  40be5c:	sbb    dl,al
  40be5e:	pusha  
  40be5f:	or     bh,al
  40be61:	mov    dh,0xf5
  40be63:	jae    0x40be9c
  40be65:	dec    ch
  40be67:	jns    0x40bdee
  40be69:	pop    ecx
  40be6a:	mov    BYTE PTR [ecx+eax*2+0x66],0xd7
  40be6f:	xor    edx,DWORD PTR [edx+0x63]
  40be72:	jmp    0xc171:0x63716edf
  40be79:	or     bh,cl
  40be7b:	arpl   WORD PTR [ebx],ax
  40be7d:	sub    ebx,DWORD PTR [ebp-0x62]
  40be80:	push   edx
  40be81:	ins    BYTE PTR es:[edi],dx
  40be82:	(bad)  
  40be84:	repz cmp DWORD PTR gs:[eax+0x1332a04],esp
  40be8c:	sbb    al,0xf5
  40be8e:	sar    DWORD PTR [esp+edi*8],cl
  40be91:	sbb    dh,dh
  40be93:	push   eax
  40be94:	repnz out dx,al
  40be96:	mov    ah,0xc6
  40be98:	xchg   ebp,eax
  40be99:	xchg   esp,eax
  40be9a:	mul    BYTE PTR [edx]
  40be9c:	and    DWORD PTR [esi],0x76995958
  40bea2:	js     0x40bef0
  40bea4:	ret    
  40bea5:	aas    
  40bea6:	pop    edx
  40bea7:	outs   dx,DWORD PTR ds:[esi]
  40bea8:	and    eax,0x5d05b0a7
  40bead:	push   ss
  40beae:	ds fsubrp st(5),st
  40beb1:	inc    ecx
  40beb2:	repz sbb eax,DWORD PTR [ebp+0x19]
  40beb6:	pushf  
  40beb7:	pop    edx
  40beb8:	pop    ecx
  40beb9:	fcom   st(4)
  40bebb:	jg     0x40beaf
  40bebd:	pop    esi
  40bebe:	call   0xc03b:0x14a06831
  40bec5:	jno    0x40bec6
  40bec7:	sbb    al,0x9f
  40bec9:	and    bl,0xd3
  40becc:	cmp    bl,dh
  40bece:	sti    
  40becf:	inc    eax
  40bed0:	mov    DWORD PTR [eax],ecx
  40bed2:	in     al,dx
  40bed3:	mov    ds:0xf67723c6,eax
  40bed8:	xor    DWORD PTR [edx],ecx
  40beda:	push   ss
  40bedb:	jno    0x40bef9
  40bedd:	inc    eax
  40bede:	jae    0x40be64
  40bee0:	push   es
  40bee1:	sti    
  40bee2:	pop    ebp
  40bee3:	ffree  st(3)
  40bee5:	inc    eax
  40bee6:	fistp  DWORD PTR [ecx]
  40bee8:	shl    BYTE PTR ds:0x663ec3f9,0x9f
  40beef:	(bad)  
  40bef0:	mov    ebp,DWORD PTR ss:[esi+ecx*1]
  40bef4:	xchg   BYTE PTR [edi],cl
  40bef6:	jecxz  0x40bf6d
  40bef8:	out    0x4f,al
  40befa:	xor    BYTE PTR ds:0x5410fa6b,bh
  40bf00:	out    0xb1,al
  40bf02:	outs   dx,BYTE PTR ds:[si]
  40bf04:	pusha  
  40bf05:	adc    al,BYTE PTR [ecx+0xda9d71b]
  40bf0b:	cmp    BYTE PTR [ebx+eiz*8-0x68],al
  40bf0f:	aas    
  40bf10:	and    BYTE PTR [edx+0x5c55009f],bh
  40bf16:	jmp    0x40bf7c
  40bf18:	pop    ebx
  40bf19:	aam    0x79
  40bf1b:	push   ds
  40bf1c:	mov    cl,0x59
  40bf1e:	aad    0xeb
  40bf20:	test   al,0x8
  40bf22:	adc    eax,0x9c42acd9
  40bf27:	add    ecx,DWORD PTR [eax+ebp*4-0x38]
  40bf2b:	jp     0x40bef9
  40bf2d:	xor    BYTE PTR [esi+0x3e],cl
  40bf30:	jnp    0x40bef6
  40bf32:	or     eax,esi
  40bf34:	jbe    0x40bed9
  40bf36:	iret   
  40bf37:	sub    DWORD PTR [eax],ecx
  40bf39:	out    dx,eax
  40bf3a:	mov    BYTE PTR [edi+0x5b],dl
  40bf3d:	(bad)  
  40bf3e:	out    dx,eax
  40bf3f:	(bad)  
  40bf40:	cmc    
  40bf41:	mov    eax,ds:0xfbdde768
  40bf46:	mov    esp,0xfd2c3d42
  40bf4b:	mov    al,0x58
  40bf4d:	out    0x72,al
  40bf4f:	cwde   
  40bf50:	sahf   
  40bf51:	pop    esi
  40bf52:	ret    0xcc9b
  40bf55:	(bad)  
  40bf56:	(bad)
  40bf59:	pop    ecx
  40bf5a:	cmp    esi,edi
  40bf5c:	(bad)  
  40bf5e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40bf5f:	(bad)  
  40bf60:	jo     0x40bf64
  40bf62:	xor    bh,BYTE PTR [ecx-0x498a1ff0]
  40bf68:	fld    TBYTE PTR [ebx]
  40bf6a:	aas    
  40bf6b:	mov    ds:0x2da854d1,al
  40bf70:	imul   edi,DWORD PTR [edi+0x7607feba],0x1d61d38e
  40bf7a:	sub    al,0xfc
  40bf7c:	mov    edx,0xb921e37f
  40bf81:	sbb    BYTE PTR ds:0xab2042fc,al
  40bf88:	outs   dx,DWORD PTR ds:[esi]
  40bf89:	and    BYTE PTR [edi-0x3d],ch
  40bf8c:	sub    BYTE PTR [esi-0x7e],bl
  40bf8f:	int3   
  40bf90:	les    eax,FWORD PTR [ebp+0xc071346]
  40bf96:	repz cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40bf98:	and    al,0xab
  40bf9a:	and    bh,BYTE PTR [edx]
  40bf9c:	xchg   DWORD PTR [eax+eiz*4],eax
  40bf9f:	in     eax,dx
  40bfa0:	test   BYTE PTR [ebx+0x2b],ah
  40bfa3:	dec    eax
  40bfa4:	jbe    0x40bf62
  40bfa6:	or     DWORD PTR [ebp-0x1f],0x7
  40bfaa:	lock test DWORD PTR [ecx+0x11ff4c36],edx
  40bfb1:	sbb    al,0xb1
  40bfb3:	jge    0x40bf93
  40bfb5:	(bad)  
  40bfb6:	and    al,0x57
  40bfb8:	arpl   WORD PTR [ebx+ebp*8-0xa3934f9],di
  40bfbf:	aaa    
  40bfc0:	cmp    edx,DWORD PTR [eax+0x4]
  40bfc3:	or     esp,ecx
  40bfc5:	movs   BYTE PTR es:[edi],BYTE PTR ss:[esi]
  40bfc7:	dec    ebx
  40bfc8:	pop    ebx
  40bfc9:	sbb    esi,DWORD PTR [ecx+0x2f]
  40bfcc:	outs   dx,BYTE PTR ds:[esi]
  40bfcd:	test   BYTE PTR [edx+0x31],bl
  40bfd0:	rol    BYTE PTR [ebx+0x6c657ed],1
  40bfd6:	cdq    
  40bfd7:	test   ch,cl
  40bfd9:	ret    
  40bfda:	mov    bl,0x81
  40bfdc:	std    
  40bfdd:	mov    cl,0x81
  40bfdf:	(bad)  
  40bfe0:	test   DWORD PTR [ebx-0x65],0x3172fc6a
  40bfe7:	jecxz  0x40bfaf
  40bfe9:	and    edx,DWORD PTR [ecx]
  40bfeb:	mov    BYTE PTR [edi+0x66],dh
  40bfee:	(bad)  
  40bfef:	xlat   BYTE PTR ds:[ebx]
  40bff0:	fidivr DWORD PTR [edi]
  40bff2:	xchg   esi,eax
  40bff3:	mov    ch,BYTE PTR [ecx-0x57]
  40bff6:	aad    0xaf
  40bff8:	popa   
  40bff9:	gs inc eax
  40bffb:	sbb    dh,BYTE PTR [edi]
  40bffd:	inc    esi
  40bffe:	cmp    BYTE PTR [ebx],bh
  40c000:	retf   0xa262
  40c003:	dec    ebx
  40c004:	stos   DWORD PTR es:[edi],eax
  40c005:	fimul  WORD PTR [esi-0x70ce8553]
  40c00b:	mov    ah,0xfe
  40c00d:	sub    eax,0xbcf14a56
  40c012:	lds    ebx,FWORD PTR [ecx+0x14410ca]
  40c018:	jecxz  0x40bfdd
  40c01a:	call   0x354f:0x704d1a95
  40c021:	les    ecx,FWORD PTR [ebx]
  40c023:	imul   esi,DWORD PTR [esi],0xffffff8b
  40c026:	add    al,0x9d
  40c028:	call   0x5fe0:0x50c1273e
  40c02f:	icebp  
  40c030:	xor    bh,BYTE PTR [edi+0x72]
  40c033:	adc    BYTE PTR [edi],dh
  40c035:	mov    al,0xf5
  40c037:	fs sub al,0x10
  40c03a:	cli    
  40c03b:	shl    BYTE PTR [esi],1
  40c03d:	mov    WORD PTR [edx],ds
  40c03f:	mov    cl,0xd5
  40c041:	sub    eax,0xdb870b4e
  40c046:	sub    eax,DWORD PTR [eax+eax*4-0x79344620]
  40c04d:	daa    
  40c04e:	dec    esp
  40c04f:	rcr    DWORD PTR [esi+0x3e],1
  40c052:	stc    
  40c053:	cmc    
  40c054:	sbb    esi,DWORD PTR [esi+esi*8-0x3c253ca4]
  40c05b:	push   ebx
  40c05c:	push   esp
  40c05d:	and    BYTE PTR [ecx+0x32aa185e],al
  40c063:	jp     0x40bff4
  40c065:	xor    eax,0xf8cd2b94
  40c06a:	dec    edx
  40c06b:	xchg   esp,eax
  40c06c:	xor    BYTE PTR [edi],0x7d
  40c06f:	sbb    ah,ah
  40c071:	popf   
  40c072:	xchg   esi,eax
  40c073:	xor    DWORD PTR [esi+0x778621ff],0x9b36b494
  40c07d:	(bad)  
  40c07f:	arpl   WORD PTR [esi+0x585b6f36],di
  40c085:	adc    ch,cl
  40c087:	outs   dx,BYTE PTR ds:[esi]
  40c088:	(bad)  [ebx+0x69]
  40c08b:	push   edi
  40c08c:	jmp    0xc5cb:0x543ce50
  40c093:	fs cs pushf 
  40c096:	cmp    bl,BYTE PTR [esi-0xf3f2884]
  40c09c:	push   0x55
  40c09e:	inc    ebx
  40c09f:	sub    eax,0xb011eba3
  40c0a4:	inc    edx
  40c0a5:	jecxz  0x40c048
  40c0a7:	xor    BYTE PTR ss:[edi+0x2e],0x6
  40c0ac:	or     BYTE PTR [edi],bh
  40c0ae:	ret    
  40c0af:	push   ebx
  40c0b0:	mov    ebp,0x41ffd6e6
  40c0b5:	xor    edi,eax
  40c0b7:	sub    cl,ch
  40c0b9:	mov    edx,0xe76f017c
  40c0be:	in     al,dx
  40c0bf:	xchg   edx,eax
  40c0c0:	clc    
  40c0c1:	test   BYTE PTR [edi+0x1a487120],cl
  40c0c7:	jg     0x40c0da
  40c0c9:	dec    ebp
  40c0ca:	cmp    al,0xd0
  40c0cc:	je     0x40c0f4
  40c0ce:	std    
  40c0cf:	fimul  WORD PTR [ebp+ecx*1+0x24df7551]
  40c0d6:	scas   al,BYTE PTR es:[edi]
  40c0d7:	hlt    
  40c0d8:	and    ah,al
  40c0da:	call   FWORD PTR [eax-0x10]
  40c0dd:	sbb    BYTE PTR [eax+0x5b],al
  40c0e0:	jge    0x40c0d0
  40c0e2:	jo     0x40c07c
  40c0e4:	sbb    eax,0x721ec284
  40c0e9:	(bad)  
  40c0ea:	repnz test BYTE PTR [ecx+0x4edab619],bh
  40c0f1:	pop    eax
  40c0f2:	cmp    DWORD PTR [ebx+0x54],edx
  40c0f5:	or     bl,BYTE PTR [ecx]
  40c0f7:	sub    DWORD PTR [edi-0x3e90d42b],esi
  40c0fd:	popa   
  40c0fe:	sbb    al,0x3c
  40c100:	out    dx,eax
  40c101:	enter  0x7e7b,0x69
  40c105:	fisub  DWORD PTR [edi+0x44]
  40c108:	add    al,0x54
  40c10a:	mov    al,0x54
  40c10c:	aad    0x80
  40c10e:	xor    DWORD PTR [ecx-0x765ff4ec],ebp
  40c114:	dec    eax
  40c115:	mov    ?,WORD PTR [esi+0x20]
  40c118:	popa   
  40c119:	in     eax,dx
  40c11a:	cmc    
  40c11b:	retf   
  40c11c:	or     ebp,DWORD PTR [edi-0x49]
  40c11f:	cmc    
  40c120:	addr16 out dx,al
  40c122:	fsubr  QWORD PTR [esi]
  40c124:	mov    esi,0xbd7b9fa1
  40c129:	es loopne 0x40c0f4
  40c12c:	les    esp,FWORD PTR [ebx+0x4ccbe2f7]
  40c132:	out    dx,eax
  40c133:	xchg   esi,eax
  40c134:	jns    0x40c124
  40c136:	addr16 xchg ebx,eax
  40c138:	neg    BYTE PTR [ecx+0x72ff993f]
  40c13e:	retf   0x9014
  40c141:	sbb    ebp,DWORD PTR [ecx-0x3c]
  40c144:	aad    0xaf
  40c146:	pop    ds
  40c147:	fst    DWORD PTR [edx+0x798021a1]
  40c14d:	cmp    esp,ecx
  40c14f:	mov    ds:0xc005dce8,eax
  40c154:	adc    ebp,DWORD PTR [eax+0x75]
  40c157:	int3   
  40c158:	jae    0x40c12b
  40c15a:	rcr    DWORD PTR [edx+ebx*2],1
  40c15d:	jns    0x40c1d7
  40c15f:	wrmsr  
  40c161:	mov    bl,0x2d
  40c163:	mov    esi,0xe18e89
  40c168:	or     BYTE PTR [ecx-0x1a27dd3],ch
  40c16e:	push   ebp
  40c16f:	push   ebx
  40c170:	inc    esi
  40c171:	jnp    0x40c148
  40c173:	dec    esi
  40c174:	dec    eax
  40c175:	cmp    bh,dh
  40c177:	push   0x642a99c4
  40c17c:	dec    edx
  40c17d:	popf   
  40c17e:	sub    DWORD PTR [ecx-0x4e],eax
  40c181:	xor    al,0xb2
  40c183:	ja     0x40c1ee
  40c185:	lea    esi,[esi+edi*8-0xd]
  40c189:	std    
  40c18a:	mov    ebx,0x68f854c7
  40c18f:	loope  0x40c1c6
  40c191:	mov    cl,0xc6
  40c193:	outs   dx,DWORD PTR ds:[esi]
  40c194:	push   edx
  40c195:	ja     0x40c211
  40c197:	imul   ebx,DWORD PTR [esi],0x561f21fb
  40c19d:	cs pop eax
  40c19f:	call   FWORD PTR [ecx+0x63094d7c]
  40c1a5:	or     bh,0x25
  40c1a8:	xor    eax,0x63372ec7
  40c1ad:	inc    esi
  40c1ae:	push   ss
  40c1af:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c1b0:	jne    0x40c206
  40c1b2:	popa   
  40c1b3:	pop    ebp
  40c1b4:	inc    edi
  40c1b5:	out    dx,al
  40c1b6:	outs   dx,DWORD PTR ds:[esi]
  40c1b7:	inc    edx
  40c1b8:	repnz mov ecx,0x6c346288
  40c1be:	stc    
  40c1bf:	xchg   esp,eax
  40c1c0:	sub    esp,DWORD PTR [ebp-0x76]
  40c1c3:	mov    cl,0xd3
  40c1c5:	inc    ebx
  40c1c6:	call   0xffd:0x7cd1add3
  40c1cd:	add    DWORD PTR [edx-0x71617a53],esi
  40c1d3:	xor    BYTE PTR [ebx],ah
  40c1d5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c1d6:	jns    0x40c250
  40c1d8:	hlt    
  40c1d9:	xchg   esp,eax
  40c1da:	loopne 0x40c24c
  40c1dc:	push   esp
  40c1dd:	test   BYTE PTR [ebp-0xf],dh
  40c1e0:	pop    edx
  40c1e1:	push   ebx
  40c1e2:	pop    esi
  40c1e3:	jecxz  0x40c238
  40c1e5:	and    dh,dl
  40c1e7:	jb     0x40c225
  40c1e9:	add    eax,0x4a4237ed
  40c1ee:	jl     0x40c1c0
  40c1f0:	inc    ebx
  40c1f1:	xor    al,0xa6
  40c1f3:	cdq    
  40c1f4:	pop    ebx
  40c1f5:	cmp    al,0x1a
  40c1f7:	jbe    0x40c1ed
  40c1f9:	outs   dx,DWORD PTR ds:[esi]
  40c1fa:	pop    eax
  40c1fb:	xchg   esi,eax
  40c1fc:	jbe    0x40c198
  40c1fe:	aam    0xc1
  40c200:	adc    BYTE PTR [edx],ah
  40c202:	sub    al,BYTE PTR [edi+0x3f]
  40c205:	mov    dl,0x21
  40c207:	add    ah,BYTE PTR [ecx-0x7e]
  40c20a:	cmp    BYTE PTR [esi+eax*1],ch
  40c20d:	pop    esi
  40c20e:	idiv   BYTE PTR ds:0x1e791c9d
  40c214:	test   eax,0x5234ea97
  40c219:	or     esp,edi
  40c21b:	dec    ebx
  40c21c:	(bad)  
  40c21e:	je     0x40c1be
  40c220:	jo     0x40c221
  40c222:	test   BYTE PTR [edx],cl
  40c224:	ds enter 0xfc7c,0x46
  40c229:	je     0x40c213
  40c22b:	inc    eax
  40c22c:	pop    ebp
  40c22d:	add    eax,0xe986e5aa
  40c232:	aam    0xcc
  40c234:	or     BYTE PTR [edx-0x58],ch
  40c237:	int3   
  40c238:	ins    BYTE PTR es:[edi],dx
  40c239:	cmp    DWORD PTR [eax+0x16790a8c],ecx
  40c23f:	sti    
  40c240:	and    ecx,DWORD PTR [edi+0x2b54ced8]
  40c246:	jl     0x40c1ee
  40c248:	ss (bad) 
  40c24b:	dec    esi
  40c24c:	adc    DWORD PTR [ebx+0x5385adb6],esi
  40c252:	clc    
  40c253:	or     al,0x6c
  40c255:	xchg   ch,dh
  40c257:	push   cs
  40c258:	stos   BYTE PTR es:[edi],al
  40c259:	test   BYTE PTR [eax],dl
  40c25b:	push   0xf42982b9
  40c260:	and    al,0xaf
  40c262:	push   esp
  40c263:	xchg   ecx,eax
  40c264:	std    
  40c265:	or     edi,eax
  40c267:	(bad)  
  40c268:	and    eax,DWORD PTR [ecx-0x72]
  40c26b:	and    al,0x3
  40c26d:	dec    ebx
  40c26e:	icebp  
  40c26f:	aaa    
  40c270:	fadd   QWORD PTR [esi+0x35]
  40c273:	mov    ebx,ebp
  40c275:	or     BYTE PTR [ebp+0x5b3f41a9],0x85
  40c27c:	iret   
  40c27d:	in     eax,0xb2
  40c27f:	mov    ebx,0x27dd2230
  40c284:	popa   
  40c285:	jecxz  0x40c207
  40c287:	test   DWORD PTR [ebx-0x62],0xdedbcb15
  40c28e:	pusha  
  40c28f:	jb     0x40c289
  40c291:	in     eax,dx
  40c292:	loope  0x40c2ff
  40c294:	outs   dx,DWORD PTR ds:[esi]
  40c295:	cli    
  40c296:	cmp    eax,0xc2f44ae7
  40c29b:	lods   al,BYTE PTR ds:[esi]
  40c29c:	pusha  
  40c29d:	sbb    DWORD PTR [eax+0x59d918f7],edx
  40c2a3:	mov    cl,0x37
  40c2a5:	inc    esi
  40c2a6:	fidiv  DWORD PTR [eax-0x2a]
  40c2a9:	inc    eax
  40c2aa:	mov    eax,ds:0x46f35a1a
  40c2af:	adc    al,BYTE PTR [esi-0x6c]
  40c2b2:	dec    edx
  40c2b3:	push   eax
  40c2b4:	and    bh,BYTE PTR [ecx-0x7b]
  40c2b7:	jge    0x40c2f0
  40c2b9:	add    al,0x23
  40c2bb:	dec    ebx
  40c2bc:	add    edi,DWORD PTR [esi+0x4a]
  40c2bf:	imul   ebp,DWORD PTR [esp+eax*4+0x6c4479eb],0x1c
  40c2c7:	push   edx
  40c2c8:	sub    DWORD PTR [eax-0x14],ecx
  40c2cb:	adc    esi,DWORD PTR [esi-0x6f4a05d6]
  40c2d1:	icebp  
  40c2d2:	sar    BYTE PTR [edx+ebx*8-0x3c],0x4f
  40c2d7:	sub    eax,0xbc5a4bba
  40c2dc:	push   edi
  40c2dd:	lock movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c2df:	test   DWORD PTR [esi],edi
  40c2e1:	mul    BYTE PTR [ecx-0x31]
  40c2e4:	(bad)  
  40c2e5:	dec    esp
  40c2e6:	pop    esp
  40c2e7:	or     esp,esp
  40c2e9:	stc    
  40c2ea:	inc    ecx
  40c2eb:	lock push eax
  40c2ed:	mov    eax,ds:0xabfc74f3
  40c2f2:	xor    edi,DWORD PTR [eax]
  40c2f4:	lods   eax,DWORD PTR ds:[esi]
  40c2f5:	sti    
  40c2f6:	jmp    0x40c314
  40c2f8:	xor    eax,0xb73d80e9
  40c2fd:	add    BYTE PTR [ecx],0xc6
  40c300:	fimul  DWORD PTR [ebx]
  40c302:	fisubr DWORD PTR [ecx-0x50]
  40c305:	fs (bad) 
  40c307:	mov    ah,0x8c
  40c309:	in     al,dx
  40c30a:	fxtract 
  40c30c:	xchg   ecx,eax
  40c30d:	stos   DWORD PTR es:[edi],eax
  40c30e:	shl    DWORD PTR [edx],cl
  40c310:	sbb    edx,esi
  40c312:	and    ebp,DWORD PTR [esi-0x18]
  40c315:	call   0x27b577dd
  40c31a:	mov    ebx,0xbbb69e11
  40c31f:	ret    
  40c320:	cdq    
  40c321:	js     0x40c2ad
  40c323:	cmp    BYTE PTR [ecx-0x51253556],dh
  40c329:	and    al,0x8e
  40c32b:	(bad)  
  40c32c:	adc    ebp,ecx
  40c32e:	cmp    al,0x2d
  40c330:	popa   
  40c331:	fcmovb st,st(0)
  40c333:	mov    eax,0x793e7a65
  40c338:	or     ebp,DWORD PTR [ebp+0x63]
  40c33b:	addr16 das 
  40c33d:	jmp    0x40c2c0
  40c33f:	jbe    0x40c2eb
  40c341:	adc    BYTE PTR [eax+eiz*8],al
  40c344:	xchg   BYTE PTR [ecx-0x1a67f0d5],bl
  40c34a:	imul   eax,ebx,0x772034d5
  40c350:	xor    eax,0xe5b35d29
  40c355:	jno    0x40c324
  40c357:	je     0x40c317
  40c359:	or     BYTE PTR [eax+0x4a],0x37
  40c35d:	call   0x8c1c:0x33f9a71
  40c364:	pop    ebx
  40c365:	pusha  
  40c366:	add    al,0xda
  40c368:	imul   ebx,DWORD PTR ss:[ecx+0x0],0xfca6fa14
  40c370:	into   
  40c371:	fucomip st,st(1)
  40c373:	sbb    eax,0x65e2fb77
  40c378:	dec    ebp
  40c379:	loopne 0x40c315
  40c37b:	sub    eax,0x80da347f
  40c380:	sar    DWORD PTR ds:0xffcf3c78,cl
  40c386:	in     al,0x67
  40c388:	and    DWORD PTR [esi+0x30],0xffffffc1
  40c38c:	cwde   
  40c38d:	sub    bh,al
  40c38f:	dec    ecx
  40c390:	mov    ds:0x44837a74,eax
  40c395:	mov    al,0x98
  40c397:	xchg   DWORD PTR [ebp+0x6d],esi
  40c39a:	data16 outs dx,BYTE PTR ds:[esi]
  40c39c:	ins    DWORD PTR es:[edi],dx
  40c39d:	cld    
  40c39e:	pop    es
  40c39f:	out    dx,al
  40c3a0:	cmp    BYTE PTR [ebp+edi*8+0x50e25c1d],bl
  40c3a7:	ret    0xf4be
  40c3aa:	push   0xb77cef2e
  40c3af:	mov    fs,ebx
  40c3b1:	pushf  
  40c3b2:	popa   
  40c3b3:	mov    DWORD PTR [edx+0x60],esi
  40c3b6:	dec    ebx
  40c3b7:	push   cs
  40c3b8:	mov    dl,0x5a
  40c3ba:	xor    DWORD PTR [ecx],eax
  40c3bc:	add    eax,0x83eaaf25
  40c3c1:	popa   
  40c3c2:	dec    ebx
  40c3c3:	cmp    BYTE PTR [edi+edi*1-0x3c],0xc8
  40c3c8:	adc    bh,ah
  40c3ca:	and    DWORD PTR [edi-0x7],ebp
  40c3cd:	pop    eax
  40c3ce:	rol    WORD PTR [ecx+0x6ff8da8d],cl
  40c3d5:	add    DWORD PTR [edi+ebx*4],edx
  40c3d8:	shr    DWORD PTR [ebp-0x66],1
  40c3db:	scas   eax,DWORD PTR es:[edi]
  40c3dc:	push   es
  40c3dd:	xchg   ecx,ecx
  40c3df:	jo     0x40c3b4
  40c3e1:	sar    DWORD PTR [ebx+0x3c],0x47
  40c3e5:	dec    ecx
  40c3e6:	sbb    edx,eax
  40c3e8:	dec    ecx
  40c3e9:	pop    esp
  40c3ea:	shr    BYTE PTR [ecx],cl
  40c3ec:	fld    QWORD PTR [ebp+edi*4-0x51e627fc]
  40c3f3:	int3   
  40c3f4:	out    dx,eax
  40c3f5:	dec    ebp
  40c3f6:	retf   
  40c3f7:	xchg   ecx,eax
  40c3f8:	xchg   esi,eax
  40c3f9:	icebp  
  40c3fa:	iret   
  40c3fb:	pushf  
  40c3fc:	loop   0x40c3ba
  40c3fe:	mov    cl,0xef
  40c400:	test   DWORD PTR [edi+0x41],0x87d7c477
  40c407:	sbb    ebp,DWORD PTR [edx+0x520f3ce9]
  40c40d:	add    DWORD PTR [esi+0x10760f02],edx
  40c413:	popa   
  40c414:	push   0x73092a5e
  40c419:	(bad)  
  40c41a:	loopne 0x40c3a8
  40c41c:	and    DWORD PTR [edx+0x6a],ebx
  40c41f:	sub    DWORD PTR [edi-0x15c31ae3],ebp
  40c425:	std    
  40c426:	mov    ebx,0x4fb5c956
  40c42b:	(bad)  
  40c42c:	pop    esp
  40c42d:	jle    0x40c454
  40c42f:	adc    BYTE PTR [esi+0x183c0367],cl
  40c435:	shr    BYTE PTR [eax],1
  40c437:	lds    eax,FWORD PTR ds:0xaf1513c
  40c43d:	dec    ebx
  40c43e:	pop    eax
  40c43f:	push   0xec017c1b
  40c444:	imul   eax,DWORD PTR [ebp+0x9cc280],0x1b642090
  40c44e:	test   BYTE PTR [ecx+0x87f1f45],0x19
  40c455:	sbb    al,0x31
  40c457:	push   edi
  40c458:	adc    eax,0xf986a6b
  40c45d:	cmp    DWORD PTR [ebx],eax
  40c45f:	xor    al,0x32
  40c461:	fadd   DWORD PTR [esi]
  40c463:	cmp    edi,DWORD PTR [ebx-0x402a731a]
  40c469:	sahf   
  40c46a:	mov    edi,edx
  40c46c:	fsqrt  
  40c46e:	xchg   ebx,eax
  40c46f:	add    BYTE PTR [ebp-0x4d28d9fa],ch
  40c475:	fldcw  WORD PTR [ecx+0x6f]
  40c478:	in     al,dx
  40c479:	mov    al,ds:0x29a0f821
  40c47e:	dec    BYTE PTR [ecx+0x28]
  40c481:	stc    
  40c482:	jecxz  0x40c445
  40c484:	jae    0x40c4af
  40c486:	push   edi
  40c487:	dec    ebx
  40c488:	inc    ebx
  40c489:	cmps   WORD PTR ds:[esi],WORD PTR es:[edi]
  40c48b:	dec    esp
  40c48c:	int3   
  40c48d:	mov    dl,0x67
  40c48f:	pop    ebx
  40c490:	sbb    esi,DWORD PTR [ebx+0x2e]
  40c493:	jnp    0x40c426
  40c495:	pop    ds
  40c496:	xchg   esp,eax
  40c497:	lahf   
  40c498:	iret   
  40c499:	outs   dx,DWORD PTR ds:[esi]
  40c49a:	add    DWORD PTR [edx],0x5a3be83b
  40c4a0:	lods   eax,DWORD PTR ds:[esi]
  40c4a1:	repz and ebp,ebp
  40c4a4:	clc    
  40c4a5:	push   edx
  40c4a6:	xchg   edi,eax
  40c4a7:	pop    esi
  40c4a8:	sbb    ecx,DWORD PTR cs:[edi-0x5b5a4156]
  40c4af:	xor    ch,BYTE PTR [esi]
  40c4b1:	jg     0x40c4e8
  40c4b3:	out    dx,eax
  40c4b4:	adc    bh,ch
  40c4b6:	dec    ebp
  40c4b7:	test   DWORD PTR [edx],ebp
  40c4b9:	scas   eax,DWORD PTR es:[edi]
  40c4ba:	sbb    ch,bl
  40c4bc:	or     BYTE PTR [eax+esi*2-0x42397b5],0xd4
  40c4c4:	cmp    BYTE PTR [ecx],al
  40c4c6:	mov    ebx,DWORD PTR [esi-0x78d9892b]
  40c4cc:	adc    dl,BYTE PTR [eax+0x6a3c3d99]
  40c4d2:	mov    edx,0xd0c7e223
  40c4d7:	stos   DWORD PTR es:[edi],eax
  40c4d8:	nop
  40c4d9:	add    al,0x8d
  40c4db:	mov    esp,0x88c2b510
  40c4e0:	ds sub al,0xc7
  40c4e3:	inc    edi
  40c4e4:	inc    edi
  40c4e5:	in     al,dx
  40c4e6:	popf   
  40c4e7:	in     eax,0xfa
  40c4e9:	push   esi
  40c4ea:	push   esi
  40c4eb:	loop   0x40c549
  40c4ed:	add    edx,DWORD PTR ds:0x64b5d3c1
  40c4f3:	xor    al,0xd2
  40c4f5:	mov    bl,0xb7
  40c4f7:	test   ebp,ecx
  40c4f9:	cli    
  40c4fa:	pop    edi
  40c4fb:	lods   eax,DWORD PTR ds:[esi]
  40c4fc:	int    0x51
  40c4fe:	sub    DWORD PTR [edx+0x7e719558],edi
  40c504:	mov    DWORD PTR [ebx],esp
  40c506:	and    DWORD PTR [ebp-0x1934e3ad],edi
  40c50c:	jecxz  0x40c524
  40c50e:	cdq    
  40c50f:	les    ebp,FWORD PTR [eax-0x4c05d8f1]
  40c515:	loop   0x40c4c6
  40c517:	int    0x27
  40c519:	sub    eax,0x83c4ab3e
  40c51e:	shl    esp,0x22
  40c521:	gs in  eax,0x2b
  40c524:	mov    cl,0x9e
  40c526:	(bad)  
  40c527:	shl    BYTE PTR [edi+0x67e03d0a],cl
  40c52d:	cwde   
  40c52e:	mov    eax,ds:0xdd4c0d99
  40c533:	popa   
  40c534:	pop    ebx
  40c535:	imul   esi,DWORD PTR [eax],0x7
  40c538:	out    0x6a,eax
  40c53a:	ret    
  40c53b:	jecxz  0x40c574
  40c53d:	xor    BYTE PTR [eax+eiz*8-0x49],ch
  40c541:	xchg   ch,bl
  40c543:	stc    
  40c544:	cdq    
  40c545:	and    eax,DWORD PTR [esi]
  40c547:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c548:	sub    eax,0xb4c11af9
  40c54d:	xor    ah,bl
  40c54f:	retf   
  40c550:	push   ds
  40c551:	cmp    BYTE PTR [ecx+0x6357c6f7],bl
  40c557:	mov    bh,0x57
  40c559:	pop    ecx
  40c55a:	outs   dx,BYTE PTR ds:[esi]
  40c55b:	shl    BYTE PTR [ecx+0x34],1
  40c55e:	pop    es
  40c55f:	ins    DWORD PTR es:[edi],dx
  40c560:	cdq    
  40c561:	push   0x47479bd6
  40c566:	fsubr  QWORD PTR [ebp+edx*2+0x649332a9]
  40c56d:	clc    
  40c56e:	les    edx,FWORD PTR [esi]
  40c570:	sbb    eax,0x60f97356
  40c575:	add    al,0xc5
  40c577:	push   cs
  40c578:	pop    eax
  40c579:	sbb    BYTE PTR [edi],al
  40c57b:	pushf  
  40c57c:	scas   eax,DWORD PTR es:[edi]
  40c57d:	scas   al,BYTE PTR es:[edi]
  40c57e:	mov    bl,BYTE PTR [edx+0x21dee9a4]
  40c584:	loope  0x40c5a8
  40c586:	aas    
  40c587:	push   edi
  40c588:	jge    0x40c565
  40c58a:	push   ds
  40c58b:	mov    edi,0x50fed694
  40c590:	fiadd  DWORD PTR [ebp+0x63]
  40c593:	dec    edx
  40c594:	xchg   edx,eax
  40c595:	jnp    0x40c5cc
  40c597:	inc    bh
  40c599:	or     al,0xf5
  40c59b:	adc    DWORD PTR [ecx+0x58f5e4b8],0xffffffbe
  40c5a2:	pop    es
  40c5a3:	ds xchg cx,ax
  40c5a6:	mov    WORD PTR [edi+eax*1-0x2a0ddd37],es
  40c5ad:	push   ebp
  40c5ae:	mov    al,0x84
  40c5b0:	iret   
  40c5b1:	mov    esi,0x9467c9bc
  40c5b6:	leave  
  40c5b7:	inc    ecx
  40c5b8:	je     0x40c5fe
  40c5ba:	mov    ds:0x663ddc7f,al
  40c5bf:	aam    0xaa
  40c5c1:	cli    
  40c5c2:	push   esp
  40c5c3:	xor    eax,0xd6e4daf
  40c5c8:	push   ebp
  40c5c9:	dec    ebx
  40c5ca:	loope  0x40c5a3
  40c5cc:	sti    
  40c5cd:	push   edi
  40c5ce:	into   
  40c5cf:	leave  
  40c5d0:	and    eax,0xeeb9119d
  40c5d5:	sub    BYTE PTR [edi-0x2f],0x9b
  40c5d9:	push   ss
  40c5da:	inc    edi
  40c5db:	gs aam 0x58
  40c5de:	cs xchg ebp,eax
  40c5e0:	mov    cl,0x8
  40c5e2:	cmp    BYTE PTR [ebx-0x70],0xda
  40c5e6:	mov    ebp,esi
  40c5e8:	fisubr DWORD PTR [edi-0x1a9626f4]
  40c5ee:	xchg   edx,eax
  40c5ef:	sub    bl,BYTE PTR [ecx-0x5d]
  40c5f2:	pop    ebx
  40c5f3:	or     eax,0xbb57207a
  40c5f8:	jns    0x40c677
  40c5fa:	(bad)  
  40c5fb:	inc    DWORD PTR [edi+0x5c37bc4f]
  40c601:	fisubr WORD PTR gs:[edx]
  40c604:	hlt    
  40c605:	cs and eax,0xf545f73b
  40c60b:	out    dx,al
  40c60c:	adc    ebp,DWORD PTR [edi+0x1649c09b]
  40c612:	(bad)  
  40c614:	push   ecx
  40c615:	fs js  0x40c5ed
  40c618:	xchg   esp,eax
  40c619:	imul   edx,esp,0xf259a809
  40c61f:	cmp    DWORD PTR [esi-0x1c],ecx
  40c622:	adc    BYTE PTR [eax],0xfa
  40c625:	pop    edi
  40c626:	call   0x890d:0x366aa4c0
  40c62d:	ins    BYTE PTR es:[edi],dx
  40c62e:	xor    eax,DWORD PTR [eax-0x37724f4d]
  40c634:	loope  0x40c614
  40c636:	and    esi,DWORD PTR [ebp*4+0x684295c9]
  40c63d:	pop    esp
  40c63e:	fdivr  DWORD PTR [edi]
  40c640:	aam    0xaf
  40c642:	cld    
  40c643:	es sahf 
  40c645:	mov    al,0xe1
  40c647:	aaa    
  40c648:	push   edx
  40c649:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c64a:	inc    edx
  40c64b:	cmc    
  40c64c:	mov    eax,0x968c741d
  40c651:	push   edx
  40c652:	push   ecx
  40c653:	iret   
  40c654:	retf   0x6f41
  40c657:	out    dx,al
  40c658:	pop    esi
  40c659:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c65a:	xchg   ebp,eax
  40c65b:	into   
  40c65c:	sub    DWORD PTR [edi-0x3d],esp
  40c65f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c660:	cmp    DWORD PTR [ebx+ebp*1+0x61],ecx
  40c664:	xor    eax,0xf5df73e2
  40c669:	cwde   
  40c66a:	adc    dh,BYTE PTR [edi]
  40c66c:	aaa    
  40c66d:	jg     0x40c605
  40c66f:	lds    esp,FWORD PTR [edx]
  40c671:	pop    ecx
  40c672:	lds    ebp,FWORD PTR [edx-0x3fd0a6dc]
  40c678:	xor    eax,0xb6f47a0c
  40c67d:	or     edx,DWORD PTR ds:0xabdbc284
  40c683:	outs   dx,DWORD PTR ds:[esi]
  40c684:	dec    ecx
  40c685:	sbb    DWORD PTR [edi+0x10],esi
  40c688:	inc    esp
  40c689:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c68a:	sbb    dh,bh
  40c68c:	push   ecx
  40c68d:	leave  
  40c68e:	js     0x40c698
  40c690:	and    ecx,DWORD PTR [ecx]
  40c692:	lea    ecx,[eax+esi*4-0x12b5bee6]
  40c699:	fisttp DWORD PTR [ebx+0x29684ad8]
  40c69f:	cwde   
  40c6a0:	jmp    0x469c:0x8e03d73b
  40c6a7:	push   ebx
  40c6a8:	or     ch,BYTE PTR [ebx]
  40c6aa:	cmp    BYTE PTR [ecx+0xa1fabc4],0x19
  40c6b1:	ret    
  40c6b2:	pusha  
  40c6b3:	push   ebx
  40c6b4:	adc    esi,DWORD PTR [ebp+0x64]
  40c6b7:	das    
  40c6b8:	lock sub DWORD PTR [eax-0x4f3de065],eax
  40c6bf:	ret    
  40c6c0:	inc    ebp
  40c6c1:	adc    edi,eax
  40c6c3:	mov    dl,0x92
  40c6c5:	and    al,0xdc
  40c6c7:	mov    esp,0x5b0c87a2
  40c6cc:	lods   eax,DWORD PTR ds:[esi]
  40c6cd:	ret    0xe197
  40c6d0:	sti    
  40c6d1:	jb     0x40c6a4
  40c6d3:	dec    esp
  40c6d4:	(bad)
  40c6d9:	inc    edx
  40c6db:	cmp    eax,0xac00ff7a
  40c6e0:	jno    0x40c6e6
  40c6e2:	hlt    
  40c6e3:	mov    eax,0x7cdee150
  40c6e8:	dec    edx
  40c6e9:	shl    BYTE PTR [edx+ecx*1+0xb72a489],cl
  40c6f0:	add    al,bl
  40c6f2:	and    BYTE PTR [esi-0x439ac52e],cl
  40c6f8:	neg    BYTE PTR [ebx]
  40c6fa:	pop    esi
  40c6fb:	push   ds
  40c6fc:	cmp    dh,BYTE PTR [edx]
  40c6fe:	dec    DWORD PTR [esi+0x6b]
  40c701:	aam    0x8f
  40c703:	jl     0x40c756
  40c705:	int3   
  40c706:	in     eax,0xbe
  40c708:	mov    cl,0x69
  40c70a:	clc    
  40c70b:	gs sbb eax,0xf3595ec9
  40c711:	mov    edx,0x3b8a6c2f
  40c716:	out    0x57,eax
  40c718:	mov    cl,0x80
  40c71a:	bound  ebx,QWORD PTR [ebp+0xc3fd39a]
  40c720:	std    
  40c721:	stc    
  40c722:	lahf   
  40c723:	push   ecx
  40c724:	push   es
  40c725:	or     DWORD PTR [edi-0x71],0x184778b2
  40c72c:	fs push ebx
  40c72e:	inc    esi
  40c72f:	inc    edx
  40c730:	add    BYTE PTR [ebx-0x44eb8d40],ah
  40c736:	out    dx,al
  40c737:	inc    edx
  40c738:	or     BYTE PTR [eax+0x1b],dl
  40c73b:	gs clc 
  40c73d:	lods   eax,DWORD PTR ds:[esi]
  40c73e:	cmc    
  40c73f:	(bad)  
  40c740:	call   0xa86dc12
  40c745:	push   0xffffffc0
  40c747:	xchg   ebx,eax
  40c748:	repz sbb dl,cl
  40c74b:	inc    eax
  40c74c:	xchg   ecx,eax
  40c74d:	(bad)  
  40c74e:	sbb    BYTE PTR [edx-0x2081dab0],cl
  40c754:	pop    ss
  40c755:	cmp    ebx,esi
  40c757:	int3   
  40c758:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c759:	add    al,0xc6
  40c75b:	xchg   ecx,eax
  40c75c:	push   0x60
  40c75e:	add    ch,0xf6
  40c761:	pop    eax
  40c762:	push   esp
  40c763:	retf   
  40c764:	add    esi,eax
  40c766:	mov    BYTE PTR [ecx-0x3696c23b],ah
  40c76c:	int    0x2e
  40c76e:	inc    eax
  40c76f:	(bad)  
  40c770:	cmp    eax,0x2d72e46d
  40c775:	pop    eax
  40c776:	fidivr DWORD PTR [eax+0x1d]
  40c779:	jne    0x40c71d
  40c77b:	leave  
  40c77c:	mov    ch,0x30
  40c77e:	lds    esi,FWORD PTR [ebp+0x74687f8c]
  40c784:	leave  
  40c785:	repnz adc ecx,eax
  40c788:	(bad)  
  40c789:	jmp    0x18c9619a
  40c78e:	sbb    al,0xaa
  40c790:	fcom   QWORD PTR [edx+0x3f]
  40c793:	jo     0x40c798
  40c795:	xchg   edx,eax
  40c796:	aad    0xbc
  40c798:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c799:	mov    bh,dl
  40c79b:	sti    
  40c79c:	mov    eax,ds:0x15c45d57
  40c7a1:	leave  
  40c7a2:	jge    0x40c820
  40c7a4:	adc    edx,ecx
  40c7a6:	push   0x5d
  40c7a8:	pop    edi
  40c7a9:	xor    DWORD PTR [ecx+eax*2],edx
  40c7ac:	push   ecx
  40c7ad:	sahf   
  40c7ae:	arpl   WORD PTR [ecx-0xc884aac],dx
  40c7b4:	fwait
  40c7b5:	pop    edi
  40c7b6:	cmc    
  40c7b7:	test   DWORD PTR [edx],ecx
  40c7b9:	fidiv  DWORD PTR [edx+edi*8]
  40c7bc:	xchg   BYTE PTR [ecx],bh
  40c7be:	gs ds in eax,0xe3
  40c7c2:	add    ah,BYTE PTR ds:0x10fc76bc
  40c7c8:	clc    
  40c7c9:	dec    esi
  40c7ca:	(bad)  
  40c7cb:	aaa    
  40c7cc:	xor    ah,bl
  40c7ce:	nop
  40c7cf:	loope  0x40c7c8
  40c7d1:	xor    bl,dl
  40c7d3:	or     eax,0x51417dd4
  40c7d8:	push   0x46
  40c7da:	inc    edi
  40c7db:	or     ecx,DWORD PTR [ecx-0x1e]
  40c7de:	xor    al,0xe4
  40c7e0:	xor    eax,0x4a242d4b
  40c7e5:	jl     0x40c7ea
  40c7e7:	push   ds
  40c7e8:	add    DWORD PTR ds:[eax],esp
  40c7eb:	xor    ebx,DWORD PTR [esi+0x2d]
  40c7ee:	inc    esp
  40c7ef:	inc    ecx
  40c7f0:	xchg   ebx,eax
  40c7f1:	jb     0x40c844
  40c7f3:	sbb    BYTE PTR [ebx-0x58],dh
  40c7f6:	sub    al,0x1b
  40c7f8:	rcr    BYTE PTR [ecx-0x7f0db876],0xe0
  40c7ff:	mov    cl,0x3c
  40c801:	in     eax,0x47
  40c803:	mov    ch,0x4d
  40c805:	jecxz  0x40c859
  40c807:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c808:	sub    BYTE PTR [edx+eax*4+0x58],bl
  40c80c:	std    
  40c80d:	and    DWORD PTR [ebp-0x65],ebp
  40c810:	pop    edx
  40c811:	xlat   BYTE PTR ds:[ebx]
  40c812:	mov    esi,eax
  40c814:	imul   esp,DWORD PTR ds:0x95dec453,0xffffffac
  40c81b:	pop    eax
  40c81c:	ss cmp dl,cl
  40c81f:	jmp    0x40c818
  40c821:	cmp    eax,0xb985aec5
  40c826:	sbb    dl,BYTE PTR [edi]
  40c828:	mov    ecx,0x28d910b
  40c82e:	dec    esi
  40c82f:	popf   
  40c830:	ret    0xfdaf
  40c833:	inc    edx
  40c834:	push   es
  40c835:	mov    DWORD PTR [ebp+0x56],ebx
  40c838:	sbb    eax,0x29c4a11a
  40c83d:	rcl    BYTE PTR ds:0x7f516c57,1
  40c843:	mov    al,0xda
  40c845:	or     dl,BYTE PTR [edx+0x50a21cb7]
  40c84b:	fild   QWORD PTR [ebp+ebp*2-0x2a]
  40c84f:	in     al,dx
  40c850:	xchg   ebx,eax
  40c851:	(bad)  
  40c852:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c853:	aaa    
  40c854:	and    al,0x35
  40c856:	mov    cl,BYTE PTR [esi]
  40c858:	push   ds
  40c859:	jle    0x40c8a3
  40c85b:	inc    esi
  40c85c:	jle    0x40c897
  40c85e:	dec    ebx
  40c85f:	mov    bh,0xb6
  40c861:	xchg   esp,eax
  40c862:	jb     0x40c88b
  40c864:	cdq    
  40c865:	fistp  WORD PTR [ebx]
  40c867:	bound  edi,QWORD PTR [ecx]
  40c869:	fwait
  40c86a:	pusha  
  40c86b:	xor    edi,DWORD PTR [esp+eiz*4-0x5b1480a5]
  40c872:	loop   0x40c8b1
  40c874:	cwde   
  40c875:	hlt    
  40c876:	repnz popf 
  40c878:	leave  
  40c879:	or     dh,BYTE PTR [edx]
  40c87b:	test   al,0x43
  40c87d:	mul    ecx
  40c87f:	jo     0x40c80c
  40c881:	cdq    
  40c882:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c883:	retf   0xf4cb
  40c886:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c887:	(bad)  
  40c888:	mov    bl,0xd7
  40c88a:	mov    ah,0xaf
  40c88c:	into   
  40c88d:	addr16 jbe 0x123ee412
  40c894:	out    dx,eax
  40c895:	in     eax,dx
  40c896:	mov    esi,0xb1b54019
  40c89b:	lods   eax,DWORD PTR ds:[esi]
  40c89c:	xchg   ebp,eax
  40c89d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c89e:	shl    BYTE PTR [eax-0x1a2de4e8],1
  40c8a4:	mov    ebx,0x8b1425b8
  40c8a9:	jo     0x40c91b
  40c8ab:	xor    DWORD PTR [eax-0x5848d771],edx
  40c8b1:	pop    esi
  40c8b2:	push   0xfffffff7
  40c8b4:	ja     0x40c880
  40c8b6:	pop    ebp
  40c8b7:	pop    ecx
  40c8b8:	push   ecx
  40c8b9:	div    DWORD PTR [ecx+0x7354063a]
  40c8bf:	(bad)  
  40c8c0:	xor    eax,0x98ad227b
  40c8c5:	push   ds
  40c8c6:	out    dx,eax
  40c8c7:	fucomp st(6)
  40c8c9:	jae    0x40c89f
  40c8cb:	push   DWORD PTR [ecx-0x5e]
  40c8ce:	popf   
  40c8cf:	jbe    0x40c90f
  40c8d1:	inc    ecx
  40c8d2:	fwait
  40c8d3:	addr16 aaa 
  40c8d5:	(bad)  
  40c8d7:	mov    ah,0x55
  40c8d9:	(bad)  
  40c8da:	leave  
  40c8db:	adc    dl,bh
  40c8dd:	mov    ss,WORD PTR [ecx-0x66463107]
  40c8e3:	loopne 0x40c92e
  40c8e5:	mov    ds,WORD PTR [edi+0x3a2873a7]
  40c8eb:	(bad)  
  40c8ec:	mov    dh,0x91
  40c8ee:	or     ah,ah
  40c8f0:	ds sub dh,bl
  40c8f3:	fmul   DWORD PTR [ebp+0x742fcdad]
  40c8f9:	int3   
  40c8fa:	add    DWORD PTR [edi],0x37
  40c8fd:	mov    ds:0x96ae64f7,al
  40c902:	inc    ebx
  40c903:	outs   dx,DWORD PTR ds:[esi]
  40c904:	test   eax,0xf0fc9a9a
  40c909:	dec    esp
  40c90a:	sub    eax,0x4b0127b4
  40c90f:	sti    
  40c910:	test   ah,dl
  40c912:	ins    BYTE PTR es:[edi],dx
  40c913:	add    DWORD PTR [esi],0xa9e02e88
  40c919:	mov    cs,WORD PTR [eax-0x330fd7fe]
  40c91f:	aaa    
  40c920:	mov    cl,0xfa
  40c922:	add    eax,0xffffffd1
  40c925:	outs   dx,BYTE PTR ds:[esi]
  40c926:	in     al,dx
  40c927:	push   esp
  40c928:	bound  edi,QWORD PTR [ecx+esi*2-0x1c013e9e]
  40c92f:	mov    esp,0x55dcced6
  40c934:	sbb    al,0x3
  40c936:	and    ebp,DWORD PTR [ecx]
  40c938:	test   eax,0x359f00bc
  40c93d:	and    BYTE PTR [ecx-0x26],dl
  40c940:	clc    
  40c941:	ror    ecx,1
  40c943:	cdq    
  40c944:	mov    eax,ds:0xa3e2a49f
  40c949:	push   ecx
  40c94a:	cwde   
  40c94b:	cmp    cl,BYTE PTR [eax-0x2d]
  40c94e:	mov    cs,eax
  40c950:	xchg   ebx,eax
  40c951:	into   
  40c952:	adc    eax,0x2b37376a
  40c957:	scas   eax,DWORD PTR es:[edi]
  40c958:	and    BYTE PTR [edi-0x1e861b75],ch
  40c95e:	mov    ecx,ebp
  40c960:	add    al,0x4a
  40c962:	(bad)
  40c965:	fucomi st,st(4)
  40c967:	xor    DWORD PTR [ebp-0x35],ebx
  40c96a:	mov    cl,0xab
  40c96c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c96d:	ins    DWORD PTR es:[di],dx
  40c96f:	adc    dl,BYTE PTR ss:[esp+edi*1]
  40c973:	call   0xd7c5b5d3
  40c978:	mov    al,0x55
  40c97a:	fistp  WORD PTR [ebp+ebx*4+0x66915b22]
  40c981:	xchg   esi,ebx
  40c983:	ja     0x40c960
  40c985:	pop    eax
  40c986:	and    DWORD PTR [eax],0x1f
  40c989:	mov    WORD PTR [ecx+eiz*8+0x71],es
  40c98d:	mov    DWORD PTR [edx-0x167756f],esi
  40c993:	test   BYTE PTR [ebp+0x11],bh
  40c996:	shl    DWORD PTR [edx],cl
  40c998:	push   ecx
  40c999:	jmp    0xe2b2c1ee
  40c99e:	inc    ebp
  40c99f:	fcom   QWORD PTR [ecx]
  40c9a1:	pusha  
  40c9a2:	push   0x8fded108
  40c9a7:	repz add DWORD PTR [esi],edx
  40c9aa:	mov    eax,0x17db38f4
  40c9af:	inc    ebp
  40c9b0:	dec    eax
  40c9b1:	hlt    
  40c9b2:	dec    eax
  40c9b3:	out    dx,al
  40c9b4:	cmp    eax,0x1f1295f5
  40c9b9:	xlat   BYTE PTR ds:[ebx]
  40c9ba:	add    DWORD PTR [eax+0x12da5c33],esp
  40c9c0:	and    esp,DWORD PTR [eax-0x68]
  40c9c3:	call   0x32ef3b3c
  40c9c8:	push   edi
  40c9c9:	pop    eax
  40c9ca:	mov    esi,0xfc3a5acf
  40c9cf:	call   0xf839:0x63146b6a
  40c9d6:	push   0x3ceff4f6
  40c9db:	out    0xc9,al
  40c9dd:	jl     0x40c9cf
  40c9df:	push   cs
  40c9e0:	test   eax,0x53384bf7
  40c9e5:	test   ah,al
  40c9e7:	jno    0x40ca10
  40c9e9:	xor    bl,dh
  40c9eb:	push   0xffffff96
  40c9ed:	add    eax,0xba5351b8
  40c9f2:	add    DWORD PTR [edx],0x4e01bf19
  40c9f8:	int3   
  40c9f9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c9fa:	bound  ebp,QWORD PTR [edx-0x52]
  40c9fd:	std    
  40c9fe:	mov    bh,0xf4
  40ca00:	push   edi
  40ca01:	enter  0xecd3,0xa1
  40ca05:	jns    0x40c9b0
  40ca07:	fucomip st,st(3)
  40ca09:	repnz lds esi,FWORD PTR [ecx+ebx*2-0x50]
  40ca0e:	inc    edx
  40ca0f:	mov    al,0xc7
  40ca11:	push   ecx
  40ca12:	pop    edx
  40ca13:	lahf   
  40ca14:	es es nop
  40ca17:	pop    ss
  40ca18:	xlat   BYTE PTR ds:[ebx]
  40ca19:	dec    ecx
  40ca1a:	fs add eax,edx
  40ca1d:	jo     0x40c9d0
  40ca1f:	neg    BYTE PTR [edx+0x1e7f9c48]
  40ca25:	lahf   
  40ca26:	xchg   esi,eax
  40ca27:	pop    edx
  40ca28:	or     DWORD PTR [edi-0x51],esi
  40ca2b:	dec    esi
  40ca2c:	sbb    ch,0x92
  40ca2f:	stos   DWORD PTR es:[edi],eax
  40ca30:	dec    ecx
  40ca31:	inc    ecx
  40ca32:	div    DWORD PTR [esi+0x6b8c96e2]
  40ca38:	lahf   
  40ca39:	jmp    0xa0a36d94
  40ca3e:	dec    eax
  40ca3f:	push   esp
  40ca40:	pushf  
  40ca41:	fwait
  40ca42:	shl    DWORD PTR [ebx+0x79],0xf5
  40ca46:	or     dh,BYTE PTR [ebx+esi*4+0x317a13e4]
  40ca4d:	int3   
  40ca4e:	xchg   ebx,eax
  40ca4f:	mov    al,BYTE PTR [esi+0x6]
  40ca52:	inc    esp
  40ca53:	pop    ss
  40ca54:	cwde   
  40ca55:	add    al,0xa4
  40ca57:	xchg   esp,eax
  40ca58:	(bad)  
  40ca5a:	cwde   
  40ca5b:	(bad)  
  40ca5c:	push   edx
  40ca5d:	dec    esp
  40ca5e:	cld    
  40ca5f:	xchg   BYTE PTR [esi-0x54],dl
  40ca62:	ss jl  0x40ca7e
  40ca65:	rcl    ch,1
  40ca67:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ca68:	push   eax
  40ca69:	inc    ebx
  40ca6a:	and    ch,BYTE PTR ds:0x5c673b05
  40ca70:	mov    ds:0xd4669281,al
  40ca75:	mov    ecx,DWORD PTR [ecx]
  40ca77:	pop    ds
  40ca78:	into   
  40ca79:	in     eax,0x97
  40ca7b:	out    dx,al
  40ca7c:	scas   eax,DWORD PTR es:[edi]
  40ca7d:	xchg   edi,eax
  40ca7e:	mov    bl,0x1b
  40ca80:	xor    ebx,DWORD PTR [eax]
  40ca82:	out    0x2b,al
  40ca84:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ca85:	xor    eax,0xbfd06ae6
  40ca8a:	push   es
  40ca8b:	jecxz  0x40cabf
  40ca8d:	mov    dh,0x1
  40ca8f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ca90:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ca91:	sbb    al,0x8a
  40ca93:	lea    esp,[ebp+0x1d]
  40ca96:	loop   0x40ca9d
  40ca98:	nop
  40ca99:	cmc    
  40ca9a:	add    al,0x72
  40ca9c:	mov    BYTE PTR [eax],al
  40ca9e:	jae    0x40caca
  40caa0:	and    eax,0xc097dc86
  40caa5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40caa6:	pop    esp
  40caa7:	xor    al,0xc7
  40caa9:	test   DWORD PTR [esi+0x797b58fc],0xeec48cd5
  40cab3:	xor    edx,DWORD PTR [ebx]
  40cab5:	mov    BYTE PTR [esi+0x27c006f4],ch
  40cabb:	jle    0x40caf7
  40cabd:	cs nop
  40cabf:	shl    DWORD PTR [edx],0x89
  40cac2:	and    dh,BYTE PTR [ecx-0x63]
  40cac5:	(bad)  [ebx-0x6793316a]
  40cacb:	lock ja 0x40cac7
  40cace:	pop    ebx
  40cacf:	jl     0x40cb0a
  40cad1:	fs scas al,BYTE PTR es:[edi]
  40cad3:	add    eax,0xc0d6d437
  40cad8:	pop    edi
  40cad9:	pop    DWORD PTR [edx-0x5f]
  40cadc:	inc    ebx
  40cadd:	arpl   WORD PTR [edi+0x3],sp
  40cae0:	(bad)
  40cae3:	ins    BYTE PTR es:[edi],dx
  40cae4:	mov    cl,0xb5
  40cae6:	xor    BYTE PTR ds:0x692d5768,0xf4
  40caed:	test   al,0x93
  40caef:	test   al,0x85
  40caf1:	pusha  
  40caf2:	jp     0x40cae0
  40caf4:	mulps  xmm5,XMMWORD PTR [ebp+0x2bf00246]
  40cafb:	adc    BYTE PTR [edi+0x48],al
  40cafe:	in     al,0x7
  40cb00:	frstor [edx+0x34]
  40cb03:	add    eax,0x7cd58d71
  40cb08:	mov    ecx,0x59056836
  40cb0d:	fsub   DWORD PTR [ecx]
  40cb0f:	and    esi,DWORD PTR [ecx-0x52]
  40cb12:	(bad)  
  40cb14:	xchg   DWORD PTR [ecx],esp
  40cb16:	retf   
  40cb17:	aad    0xdc
  40cb19:	es pop es
  40cb1b:	sbb    al,0x2c
  40cb1d:	xchg   esp,eax
  40cb1e:	test   eax,0x9991eab4
  40cb23:	push   0xffffffa3
  40cb25:	ret    
  40cb26:	adc    eax,0x656a9f43
  40cb2b:	fst    DWORD PTR [ebx-0x21]
  40cb2e:	pop    es
  40cb2f:	lea    ebx,[edi+0x64c2f557]
  40cb35:	mov    edx,0xa22c73c1
  40cb3a:	or     dh,BYTE PTR [esi+esi*1+0x736a774e]
  40cb41:	stos   DWORD PTR es:[edi],eax
  40cb42:	inc    esi
  40cb43:	cwde   
  40cb44:	dec    ebp
  40cb45:	(bad)  
  40cb46:	push   0x65faed61
  40cb4b:	shl    DWORD PTR [edx+0x5],0x9c
  40cb4f:	hlt    
  40cb50:	mov    eax,ds:0x54cd78f8
  40cb55:	mov    ds:0x2922fb9e,eax
  40cb5a:	fcom   DWORD PTR [esi+0x17f29f94]
  40cb60:	xchg   esp,eax
  40cb61:	popf   
  40cb62:	lods   al,BYTE PTR ds:[esi]
  40cb63:	add    ebx,edx
  40cb65:	or     bl,BYTE PTR ds:0xc36d22c8
  40cb6b:	mov    DWORD PTR [ebp+eiz*8+0x70c607d4],0x897e8688
  40cb76:	in     al,0xd4
  40cb78:	jnp    0x40cba6
  40cb7a:	lods   al,BYTE PTR ds:[esi]
  40cb7b:	adc    DWORD PTR [ebx],edx
  40cb7d:	pop    esi
  40cb7e:	push   0xffffffb3
  40cb80:	int    0xc3
  40cb82:	hlt    
  40cb83:	xchg   ecx,eax
  40cb84:	aas    
  40cb85:	xor    ecx,DWORD PTR [ecx+0x2e]
  40cb88:	(bad)  
  40cb89:	fimul  WORD PTR [ecx]
  40cb8b:	jl     0x40cb68
  40cb8d:	pop    esi
  40cb8e:	test   DWORD PTR [ecx],ebp
  40cb90:	ret    
  40cb91:	scas   eax,DWORD PTR es:[edi]
  40cb92:	ins    DWORD PTR es:[edi],dx
  40cb93:	mov    BYTE PTR [ecx],cl
  40cb95:	xchg   BYTE PTR [esi+0x13],cl
  40cb98:	pop    eax
  40cb99:	inc    ebp
  40cb9a:	push   ecx
  40cb9b:	sub    al,ch
  40cb9d:	adc    dh,BYTE PTR [edx+0x6a5213b0]
  40cba3:	cld    
  40cba4:	pop    es
  40cba5:	add    eax,0xdb3d5af5
  40cbaa:	fs daa 
  40cbac:	sbb    esp,DWORD PTR [ebx-0x10]
  40cbaf:	fidiv  WORD PTR ds:0xe842fb3b
  40cbb5:	ret    
  40cbb6:	mov    al,0x9c
  40cbb8:	jno    0x40cbd0
  40cbba:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40cbbb:	fstp   TBYTE PTR [ebx]
  40cbbd:	cmp    eax,0xee2a1bb
  40cbc2:	std    
  40cbc3:	(bad)
  40cbc6:	xchg   edi,eax
  40cbc7:	popa   
  40cbc8:	neg    DWORD PTR [ecx]
  40cbca:	or     eax,0xc6ec60ec
  40cbcf:	and    al,0x35
  40cbd1:	xor    al,0x26
  40cbd3:	popa   
  40cbd4:	shl    DWORD PTR ds:0x93a16a51,1
  40cbda:	dec    esi
  40cbdb:	mov    eax,ds:0x4535f18e
  40cbe0:	bound  ecx,QWORD PTR [edx+0x65502b6d]
  40cbe6:	sub    al,0xa7
  40cbe8:	popa   
  40cbe9:	cdq    
  40cbea:	retf   
  40cbeb:	jne    0x40cba9
  40cbed:	call   0xb195:0xeb131c47
  40cbf4:	or     esi,DWORD PTR [edi-0x56]
  40cbf7:	jno    0x40cc67
  40cbf9:	dec    ecx
  40cbfa:	jge    0x40cc31
  40cbfc:	mov    eax,0xc86fb3a3
  40cc01:	adc    DWORD PTR [ebp-0x76381979],ebx
  40cc07:	sti    
  40cc08:	xor    ebx,esp
  40cc0a:	mov    DWORD PTR [edi+0x65],ebp
  40cc0d:	inc    edi
  40cc0e:	adc    edi,DWORD PTR [edi-0x73]
  40cc11:	ins    DWORD PTR es:[edi],dx
  40cc12:	sbb    eax,ebx
  40cc14:	sbb    esp,DWORD PTR [eax-0x2e781c4e]
  40cc1a:	push   ds
  40cc1b:	retf   
  40cc1c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40cc1d:	cmp    eax,0xdb44797e
  40cc22:	xchg   ebp,eax
  40cc23:	loope  0x40cbd7
  40cc25:	(bad)  
  40cc27:	shl    DWORD PTR [esi+0x11f1a152],cl
  40cc2d:	lods   eax,DWORD PTR ds:[esi]
  40cc2e:	inc    eax
  40cc2f:	inc    esp
  40cc30:	or     al,BYTE PTR [esi]
  40cc32:	sub    ebx,0x42
  40cc35:	pushf  
  40cc36:	jnp    0x40cbf9
  40cc38:	inc    edi
  40cc39:	add    ecx,ebp
  40cc3b:	in     eax,0x7d
  40cc3d:	dec    edi
  40cc3e:	xchg   edx,eax
  40cc3f:	ret    0xcb4a
  40cc42:	loop   0x40cbd9
  40cc44:	jae    0x40cc33
  40cc46:	aaa    
  40cc47:	in     eax,dx
  40cc48:	sbb    BYTE PTR [ecx],cl
  40cc4a:	das    
  40cc4b:	xor    ebp,DWORD PTR [esi]
  40cc4d:	jo     0x40cc73
  40cc4f:	mov    ah,0xc3
  40cc51:	pop    es
  40cc52:	clc    
  40cc53:	fxch   st(4)
  40cc55:	sbb    esp,esp
  40cc57:	cmp    edx,0xb8405d3f
  40cc5d:	or     al,0x3
  40cc5f:	xor    al,0x5e
  40cc61:	inc    eax
  40cc62:	jnp    0x40cc41
  40cc64:	scas   eax,DWORD PTR es:[edi]
  40cc65:	ins    DWORD PTR es:[edi],dx
  40cc66:	stos   BYTE PTR es:[edi],al
  40cc67:	sub    cl,BYTE PTR [eax-0x24]
  40cc6a:	mov    al,ds:0x71751eb2
  40cc6f:	mov    eax,0xdf5a5b58
  40cc74:	adc    ebx,DWORD PTR [ecx+0x7f]
  40cc77:	mov    ebx,eax
  40cc79:	sub    al,0x43
  40cc7b:	aaa    
  40cc7c:	or     al,0x90
  40cc7e:	mov    ds:0x22a42551,al
  40cc83:	mov    al,ds:0x423010f8
  40cc88:	(bad)  
  40cc89:	xlat   BYTE PTR cs:[ebx]
  40cc8b:	push   ds
  40cc8c:	pop    esp
  40cc8d:	xchg   ebx,eax
  40cc8e:	lock call 0x40bc:0x8243ac4b
  40cc96:	mov    dl,0xe6
  40cc98:	add    BYTE PTR ds:0x31ebb45e,bl
  40cc9e:	push   ds
  40cc9f:	mov    bh,0x24
  40cca1:	xchg   DWORD PTR [edi+0x74],edx
  40cca4:	leave  
  40cca5:	mul    DWORD PTR [ebp-0x44]
  40cca8:	(bad)  
  40cca9:	adc    dh,cl
  40ccab:	pop    edi
  40ccac:	imul   ebp,DWORD PTR [eax+edi*2],0xffffffe0
  40ccb0:	push   eax
  40ccb1:	lahf   
  40ccb2:	mov    ebx,0xc6d255d
  40ccb7:	rol    BYTE PTR [esi-0x21ffe22a],0xd9
  40ccbe:	pop    edi
  40ccbf:	ins    BYTE PTR es:[edi],dx
  40ccc0:	lea    esi,[ecx]
  40ccc2:	jmp    0x138aad6c
  40ccc7:	mov    ds:0xf1c24a22,al
  40cccc:	loop   0x40cc91
  40ccce:	icebp  
  40cccf:	fnstenv [ebp+ebx*4+0x2e69dad]
  40ccd6:	mov    al,ds:0xbb29ab92
  40ccdb:	sahf   
  40ccdc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ccdd:	or     BYTE PTR [edx*1+0x6441301b],0x45
  40cce5:	jnp    0x40cc97
  40cce7:	or     ah,BYTE PTR [edx-0x7e]
  40ccea:	aam    0xe6
  40ccec:	xchg   ebp,eax
  40cced:	fwait
  40ccee:	adc    al,0x85
  40ccf0:	ret    0x66cc
  40ccf3:	neg    dh
  40ccf5:	ja     0x40cc9c
  40ccf7:	pop    ecx
  40ccf8:	mov    ds:0xb6deafa9,eax
  40ccfd:	push   cs
  40ccfe:	test   al,0x7c
  40cd00:	sub    al,0x1d
  40cd02:	stos   BYTE PTR es:[edi],al
  40cd03:	mov    ecx,ebx
  40cd05:	pop    esp
  40cd06:	ret    0x62d5
  40cd09:	sti    
  40cd0a:	push   esi
  40cd0b:	(bad)  
  40cd0c:	sbb    al,0xfe
  40cd0e:	or     eax,0x345974e9
  40cd13:	xor    DWORD PTR [ebx-0x14],edi
  40cd16:	push   ecx
  40cd17:	std    
  40cd18:	rcr    DWORD PTR [esi+0x66],0x9
  40cd1c:	xchg   esp,eax
  40cd1d:	and    eax,0xa70fb895
  40cd22:	sub    esi,DWORD PTR [eax+0x38]
  40cd25:	das    
  40cd26:	jp     0x40ccc5
  40cd28:	frstor [edx+0x14]
  40cd2b:	add    dl,BYTE PTR [esi-0x441aabea]
  40cd31:	jne    0x40cd98
  40cd33:	fadd   QWORD PTR [esp+edi*4]
  40cd36:	mov    ds:0xb8d84292,eax
  40cd3b:	stos   BYTE PTR es:[edi],al
  40cd3c:	adc    ah,ch
  40cd3e:	and    al,BYTE PTR [esp+ebx*8-0x581052ba]
  40cd45:	outs   dx,BYTE PTR ds:[esi]
  40cd46:	repz fmul QWORD PTR [ecx+0x318d0d8f]
  40cd4d:	scas   eax,DWORD PTR es:[edi]
  40cd4e:	aas    
  40cd4f:	adc    dh,BYTE PTR [ecx]
  40cd51:	pop    edi
  40cd52:	shl    DWORD PTR [esi],1
  40cd54:	pop    ebp
  40cd55:	sub    DWORD PTR [edi-0x1d995711],esi
  40cd5b:	mov    ebx,DWORD PTR [ecx-0x1e]
  40cd5e:	xchg   esi,eax
  40cd5f:	pusha  
  40cd60:	fcmove st,st(5)
  40cd62:	dec    esp
  40cd63:	lea    ecx,[edx+0x40]
  40cd66:	scas   al,BYTE PTR es:[edi]
  40cd67:	jl     0x40cdbf
  40cd69:	push   edx
  40cd6a:	and    eax,DWORD PTR [ebp-0x3c]
  40cd6d:	or     eax,esi
  40cd6f:	sti    
  40cd70:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40cd71:	shr    DWORD PTR [eax],0x95
  40cd74:	dec    edx
  40cd75:	or     dh,BYTE PTR [eax]
  40cd77:	xor    dl,0x8c
  40cd7a:	movs   BYTE PTR es:[edi],BYTE PTR gs:[esi]
  40cd7c:	loope  0x40cd0c
  40cd7e:	jp     0x40cd34
  40cd80:	mov    ebp,DWORD PTR [ebx+0x21bec90e]
  40cd86:	cs jbe 0x40cdd1
  40cd89:	in     al,0x82
  40cd8b:	add    BYTE PTR [ecx+eax*1+0x6b335593],dh
  40cd92:	adc    DWORD PTR [edx+ecx*4+0x460c2384],esp
  40cd99:	cmp    DWORD PTR [ebp+edx*1+0x35a754e2],ebx
  40cda0:	(bad)  
  40cda3:	outs   dx,DWORD PTR ds:[esi]
  40cda4:	jg     0x40cdba
  40cda6:	sub    eax,0xaf78d5d1
  40cdab:	into   
  40cdac:	and    esp,esp
  40cdae:	mov    dl,0x8d
  40cdb0:	nop
  40cdb1:	push   ecx
  40cdb2:	stc    
  40cdb3:	adc    BYTE PTR [edx-0x58a81650],0xba
  40cdba:	mov    ah,0xae
  40cdbc:	aaa    
  40cdbd:	mov    ecx,0x8a68403b
  40cdc2:	pop    ebx
  40cdc3:	and    al,0x8f
  40cdc5:	cmc    
  40cdc6:	out    dx,eax
  40cdc7:	out    dx,eax
  40cdc8:	cmp    al,0x9e
  40cdca:	xor    eax,0x9a868d8a
  40cdcf:	sub    eax,0x636c412d
  40cdd4:	adc    al,0xe0
  40cdd6:	xor    BYTE PTR [ebp+0x2643abd2],cl
  40cddc:	xor    al,0xd4
  40cdde:	imul   ecx,DWORD PTR [ebp-0x75],0x1dbe643e
  40cde5:	xchg   edx,eax
  40cde6:	xor    DWORD PTR [esi-0x5d],edx
  40cde9:	popa   
  40cdea:	pop    es
  40cdeb:	adc    BYTE PTR [ecx-0x15341a36],cl
  40cdf1:	loop   0x40cdaa
  40cdf3:	and    dh,BYTE PTR [ecx-0x49]
  40cdf6:	cmp    edi,esp
  40cdf8:	dec    edi
  40cdf9:	lds    eax,FWORD PTR [ecx-0x57]
  40cdfc:	mov    bl,0x0
  40cdfe:	test   DWORD PTR [edx],0xa3df3f95
  40ce04:	ins    DWORD PTR es:[edi],dx
  40ce05:	adc    ax,WORD PTR [ebx]
  40ce08:	pop    ds
  40ce09:	jno    0x40ce1e
  40ce0b:	out    dx,eax
  40ce0c:	cmp    al,0x6c
  40ce0e:	int    0xc1
  40ce10:	pcmpgtw mm7,QWORD PTR [ebx-0x10]
  40ce14:	dec    ecx
  40ce15:	push   es
  40ce16:	xchg   ecx,eax
  40ce17:	retf   
  40ce18:	je     0x40cdbb
  40ce1a:	sar    BYTE PTR [edi+eiz*1-0x22],1
  40ce1e:	and    dh,BYTE PTR [ecx-0x409ef1c8]
  40ce24:	fisttp QWORD PTR [ebx-0x56e57bf8]
  40ce2a:	sub    dl,bl
  40ce2c:	push   ss
  40ce2d:	pop    esp
  40ce2e:	ret    
  40ce2f:	aam    0xc4
  40ce31:	adc    al,0x5a
  40ce33:	inc    edi
  40ce34:	stos   BYTE PTR es:[edi],al
  40ce35:	pop    edx
  40ce36:	aaa    
  40ce37:	mov    eax,0x11533a4f
  40ce3c:	scas   al,BYTE PTR es:[edi]
  40ce3d:	fiadd  WORD PTR [esi-0x6a4193dc]
  40ce43:	mov    esi,0x26541752
  40ce48:	test   al,0x44
  40ce4a:	lahf   
  40ce4b:	lods   eax,DWORD PTR ds:[esi]
  40ce4c:	into   
  40ce4d:	loopne 0x40cebc
  40ce4f:	jmp    0x40ceaa
  40ce51:	pushf  
  40ce52:	aas    
  40ce53:	addr16 int 0xef
  40ce56:	mov    cl,0xbf
  40ce58:	cwde   
  40ce59:	les    ebx,FWORD PTR [ebx]
  40ce5b:	add    BYTE PTR [eax],dh
  40ce5d:	xchg   edx,eax
  40ce5e:	fldcw  WORD PTR [eax]
  40ce60:	push   ecx
  40ce61:	jg     0x40ce2b
  40ce63:	adc    ah,BYTE PTR [esp+eiz*2-0x3a33e6d8]
  40ce6a:	pop    edx
  40ce6b:	and    al,0x92
  40ce6d:	inc    eax
  40ce6e:	sub    eax,DWORD PTR [esi+0x2f]
  40ce71:	dec    ebx
  40ce72:	cmp    BYTE PTR [edx],ch
  40ce74:	push   es
  40ce75:	fld    st(4)
  40ce77:	icebp  
  40ce78:	gs out dx,eax
  40ce7a:	add    edi,DWORD PTR [eax]
  40ce7c:	xor    al,0xfe
  40ce7e:	or     BYTE PTR [edi],0x19
  40ce81:	xchg   ecx,eax
  40ce82:	inc    ecx
  40ce83:	push   cs
  40ce84:	or     bh,bh
  40ce86:	xor    al,0x5c
  40ce88:	mov    esp,0xa42cc83d
  40ce8d:	test   al,0xc6
  40ce8f:	pop    ecx
  40ce90:	int3   
  40ce91:	pop    ebp
  40ce92:	push   ds
  40ce93:	in     eax,dx
  40ce94:	mov    edx,0x1d1abf34
  40ce99:	mov    edi,0xa9136f0c
  40ce9e:	or     ecx,DWORD PTR [ebx-0x38cd37c4]
  40cea4:	int3   
  40cea5:	fidivr WORD PTR [ecx+ecx*2+0x5e]
  40cea9:	(bad)  
  40ceaa:	imul   esi
  40ceac:	xchg   edi,eax
  40cead:	add    esi,edi
  40ceaf:	js     0x40ceab
  40ceb1:	(bad)  
  40ceb2:	outs   dx,DWORD PTR ds:[esi]
  40ceb3:	inc    ebp
  40ceb4:	stos   BYTE PTR es:[edi],al
  40ceb5:	pop    ss
  40ceb6:	loopne 0x40ce5d
  40ceb8:	call   FWORD PTR [eax+0x287cea84]
  40cebe:	das    
  40cebf:	push   ss
  40cec0:	jne    0x40ceaa
  40cec2:	or     edi,DWORD PTR [ebp+0x76]
  40cec5:	mov    cl,0xb5
  40cec7:	jmp    FWORD PTR [edx]
  40cec9:	sbb    BYTE PTR [ebx+0x2c],cl
  40cecc:	push   ebp
  40cecd:	(bad)  
  40cece:	pop    esi
  40cecf:	push   ecx
  40ced0:	shr    DWORD PTR ss:[ebx+0x71],0x5b
  40ced5:	mov    dl,0xfa
  40ced7:	sar    BYTE PTR [ecx+0x25cb1e67],1
  40cedd:	dec    ebp
  40cede:	cmc    
  40cedf:	in     al,dx
  40cee0:	jle    0x40ce80
  40cee2:	stos   DWORD PTR es:[edi],eax
  40cee3:	ret    0xff15
  40cee6:	xor    BYTE PTR gs:[ecx+0x5d],0x60
  40ceeb:	sub    dh,BYTE PTR [eax-0x6b]
  40ceee:	cmp    al,0x5c
  40cef1:	rcr    DWORD PTR [ebp-0x50],1
  40cef4:	xchg   ecx,eax
  40cef5:	xchg   esi,eax
  40cef6:	mov    al,0x7f
  40cef8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40cef9:	loope  0x40cee8
  40cefb:	(bad)  
  40cefc:	fsubr  QWORD PTR [ebp-0x62]
  40ceff:	push   0x47
  40cf01:	xchg   edx,eax
  40cf02:	in     eax,dx
  40cf03:	xlat   BYTE PTR ds:[ebx]
  40cf04:	mov    edx,0xb3afca5c
  40cf09:	ret    
  40cf0a:	sbb    eax,0x62d607c8
  40cf0f:	ins    DWORD PTR es:[edi],dx
  40cf10:	adc    dx,WORD PTR [ebx-0x72]
  40cf14:	mov    ebx,0x26772a3b
  40cf19:	inc    ecx
  40cf1a:	iret   
  40cf1b:	hlt    
  40cf1c:	fimul  WORD PTR [ecx+0x19277ec5]
  40cf22:	retf   0x6185
  40cf25:	or     al,0x1a
  40cf27:	out    dx,eax
  40cf28:	pop    eax
  40cf29:	jae    0x40cef6
  40cf2b:	jb     0x40cf49
  40cf2d:	push   ds
  40cf2e:	call   0xf226c32c
  40cf33:	mov    eax,ds:0xaff55939
  40cf38:	bound  edx,QWORD PTR [edi+0x79bdcf79]
  40cf3e:	pop    es
  40cf3f:	sahf   
  40cf40:	dec    esi
  40cf41:	adc    esp,DWORD PTR [ecx+0x6c]
  40cf44:	and    ch,BYTE PTR [esp+ecx*4+0x6c95459]
  40cf4b:	fst    DWORD PTR [edx+0x5b]
  40cf4e:	xchg   esi,eax
  40cf4f:	jns    0x40cf82
  40cf51:	cmp    BYTE PTR cs:[edi-0x32],ah
  40cf55:	repz and ah,ch
  40cf58:	out    dx,eax
  40cf59:	mov    ch,0xed
  40cf5b:	dec    BYTE PTR [ecx-0x3a34bb1c]
  40cf61:	mov    ds:0xde23d09b,al
  40cf66:	not    DWORD PTR [esi-0x5da686c4]
  40cf6c:	shl    DWORD PTR [edx],1
  40cf6e:	dec    ebp
  40cf6f:	hlt    
  40cf70:	fwait
  40cf71:	ret    0x444d
  40cf74:	lock mov ch,0x77
  40cf77:	jge    0x40cf89
  40cf79:	jecxz  0x40cf07
  40cf7b:	xor    eax,0x89bac45c
  40cf80:	or     al,0x13
  40cf82:	adc    BYTE PTR [ebp+0x29],dh
  40cf85:	int    0xcc
  40cf87:	fwait
  40cf88:	in     al,dx
  40cf89:	jl     0x40cf61
  40cf8b:	es in  eax,0xd2
  40cf8e:	cwde   
  40cf8f:	jmp    0x40cfe3
  40cf91:	mov    bl,0x2d
  40cf93:	mov    edx,0xe848c32b
  40cf98:	iret   
  40cf99:	icebp  
  40cf9a:	mov    al,ds:0x60969433
  40cf9f:	and    DWORD PTR [edi-0x7b],ecx
  40cfa2:	pop    ss
  40cfa3:	push   ss
  40cfa4:	jge    0x40d010
  40cfa6:	push   edx
  40cfa7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40cfa8:	pop    ds
  40cfa9:	mov    BYTE PTR [ecx-0x2aa36f74],0x77
  40cfb0:	test   eax,0x2b9dfeb9
  40cfb5:	call   0xd8280422
  40cfba:	xor    BYTE PTR [esi],bh
  40cfbc:	js     0x40cfc7
  40cfbe:	or     DWORD PTR [ebx+0x15],edx
  40cfc1:	mov    BYTE PTR [edi-0x499494c7],0xd4
  40cfc8:	jbe    0x40cfad
  40cfca:	enter  0x455b,0x15
  40cfce:	(bad)  
  40cfcf:	jmp    0x4542d4b6
  40cfd4:	cdq    
  40cfd5:	pop    edi
  40cfd6:	xor    edi,esi
  40cfd8:	fstp   DWORD PTR [edi+0x437d8be5]
  40cfde:	add    ecx,DWORD PTR [eax]
  40cfe0:	sti    
  40cfe1:	dec    ebp
  40cfe2:	out    dx,al
  40cfe3:	aad    0x2b
  40cfe5:	jne    0x40cf80
  40cfe7:	sub    edi,edi
  40cfe9:	aas    
  40cfea:	mov    WORD PTR [ebx],ds
  40cfec:	xchg   dl,ch
  40cfee:	iret   
  40cfef:	shr    DWORD PTR [ebx+ebx*2],1
  40cff2:	adc    BYTE PTR [edi],ch
  40cff4:	imul   BYTE PTR [edx]
  40cff6:	jbe    0x40cfbd
  40cff8:	jbe    0x40d05d
  40cffa:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40cffb:	xchg   edi,eax
  40cffc:	mov    ah,0xab
  40cffe:	xor    BYTE PTR [esi],ch
  40d000:	lods   eax,DWORD PTR ds:[esi]
  40d001:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d002:	pop    es
  40d003:	jmp    0x1213:0xbee521ff
  40d00a:	pop    esi
  40d00b:	xchg   edi,eax
  40d00c:	and    ch,cl
  40d00e:	fs push esp
  40d010:	test   DWORD PTR [eax],0x4fb4665e
  40d016:	jle    0x40cfef
  40d018:	and    esp,0xfcf3b7c1
  40d01e:	sahf   
  40d01f:	mov    DWORD PTR [ebx],esi
  40d021:	push   edi
  40d022:	inc    BYTE PTR [eax]
  40d024:	stos   DWORD PTR es:[edi],eax
  40d025:	adc    DWORD PTR [eax],0x43
  40d028:	hlt    
  40d029:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d02a:	out    dx,al
  40d02b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d02c:	cwde   
  40d02d:	rol    DWORD PTR [edi-0x37],1
  40d030:	jl     0x40d04c
  40d032:	out    dx,al
  40d033:	jecxz  0x40cfc3
  40d035:	ins    BYTE PTR es:[edi],dx
  40d036:	and    ebx,eax
  40d038:	into   
  40d039:	and    eax,DWORD PTR [ebx+0x6550e0ce]
  40d03f:	pop    ebp
  40d040:	call   0xaa50:0xe719aa67
  40d047:	pop    ecx
  40d048:	or     DWORD PTR ds:0x552944ea,esp
  40d04e:	mov    ch,0x75
  40d050:	push   ss
  40d051:	xor    ebx,ebx
  40d053:	je     0x40d051
  40d055:	div    DWORD PTR [edi+ecx*1-0x4a]
  40d059:	jmp    0x5bbf:0xd08df5bb
  40d060:	xchg   DWORD PTR [ebx],ebp
  40d062:	xchg   ebx,ecx
  40d064:	adc    eax,0xbc5f3f1d
  40d069:	outs   dx,DWORD PTR ds:[esi]
  40d06a:	in     al,dx
  40d06b:	mov    edi,0x9380d6aa
  40d070:	aas    
  40d071:	jmp    0x40d08d
  40d073:	scas   eax,DWORD PTR es:[edi]
  40d074:	cmp    edi,DWORD PTR [ebx+0x241d95ea]
  40d07a:	adc    edx,ebx
  40d07c:	cmp    edx,DWORD PTR [edi]
  40d07e:	adc    DWORD PTR [ebp-0x18],eax
  40d081:	aaa    
  40d082:	test   bh,ah
  40d084:	sub    dh,ah
  40d086:	push   ds
  40d087:	stos   BYTE PTR es:[edi],al
  40d088:	out    0x5a,al
  40d08a:	sbb    BYTE PTR [edi],bh
  40d08c:	scas   al,BYTE PTR es:[edi]
  40d08d:	fsub   DWORD PTR [edx+0x70]
  40d090:	adc    ch,BYTE PTR [esi]
  40d092:	out    0x8b,eax
  40d094:	mov    ecx,0xc1103ecf
  40d099:	ins    BYTE PTR es:[edi],dx
  40d09a:	cli    
  40d09b:	std    
  40d09c:	shr    DWORD PTR [eax-0x18],cl
  40d09f:	pop    ebp
  40d0a0:	pop    ebp
  40d0a1:	and    eax,0xf04f986c
  40d0a6:	adc    cl,BYTE PTR [edx]
  40d0a8:	jg     0x40d0ad
  40d0aa:	call   DWORD PTR [eax]
  40d0ac:	cmp    eax,0x989bd418
  40d0b1:	xchg   ebx,eax
  40d0b2:	push   cs
  40d0b3:	jp     0x40d104
  40d0b5:	inc    esp
  40d0b6:	push   ss
  40d0b7:	xchg   edi,eax
  40d0b8:	mov    eax,ds:0xff847067
  40d0bd:	push   edi
  40d0be:	xor    BYTE PTR [edi-0x71],dh
  40d0c1:	adc    esi,edx
  40d0c3:	or     al,0x13
  40d0c5:	cwde   
  40d0c6:	jmp    0x965d864f
  40d0cb:	mov    es,WORD PTR [ebx-0x4]
  40d0ce:	xor    ebx,DWORD PTR [eax-0x6406321a]
  40d0d4:	xchg   ebx,eax
  40d0d5:	fsub   DWORD PTR [edx]
  40d0d7:	sub    dh,BYTE PTR [edi]
  40d0d9:	hlt    
  40d0da:	daa    
  40d0db:	(bad)  
  40d0dc:	mov    cs,WORD PTR [ecx-0x2f4b9a9e]
  40d0e2:	repz mov ebx,0xc3b4fc9a
  40d0e8:	mov    cl,0x15
  40d0ea:	in     eax,0x5
  40d0ec:	add    edx,esi
  40d0ee:	add    BYTE PTR [eax],al
  40d0f0:	mov    al,ds:0xadc4480c
  40d0f5:	jle    0x40d0cd
  40d0f7:	js     0x40d088
  40d0f9:	cmp    al,0x6b
  40d0fb:	jnp    0x40d0f7
  40d0fd:	outs   dx,DWORD PTR ds:[esi]
  40d0fe:	es fwait
  40d100:	pusha  
  40d101:	dec    esi
  40d102:	and    DWORD PTR [edx+0x3f],0x4a
  40d106:	out    0x4f,eax
  40d108:	out    dx,eax
  40d109:	sub    bl,dh
  40d10b:	into   
  40d10c:	retf   0xfe74
  40d10f:	mov    ebx,DWORD PTR [ebx-0x10]
  40d112:	jnp    0x40d167
  40d114:	mov    bl,BYTE PTR [ecx]
  40d116:	sti    
  40d117:	mov    ebp,0x12c25cc0
  40d11c:	loope  0x40d124
  40d11e:	cmp    bh,0x48
  40d121:	je     0x40d169
  40d123:	inc    ebp
  40d124:	int3   
  40d125:	aas    
  40d126:	inc    ebx
  40d127:	jmp    0x40d17d
  40d129:	fisubr WORD PTR [eax]
  40d12b:	xchg   DWORD PTR [eax+0x38],ecx
  40d12e:	jmp    0x656b:0x98249bc6
  40d135:	call   0x29a11c2c
  40d13a:	push   edx
  40d13b:	push   ebp
  40d13c:	sbb    eax,0xc11f64cd
  40d141:	test   eax,0x5185d086
  40d146:	xor    edi,ecx
  40d148:	pop    esp
  40d149:	jmp    FWORD PTR [edx+0x5a1173c5]
  40d14f:	in     eax,0xb2
  40d151:	mov    esi,ecx
  40d153:	or     bl,ch
  40d155:	and    DWORD PTR [ebp-0x45],edi
  40d158:	sar    dh,cl
  40d15a:	xchg   edi,eax
  40d15b:	xchg   ebx,eax
  40d15c:	sbb    BYTE PTR [edi],0xab
  40d15f:	add    DWORD PTR [ecx-0x6b1877a1],ecx
  40d165:	(bad)  
  40d166:	mov    BYTE PTR [ecx],cl
  40d168:	inc    esi
  40d169:	push   ebx
  40d16a:	mov    BYTE PTR [esi+0x55ff703d],0x13
  40d171:	call   0x647:0x86c70b74
  40d178:	jl     0x40d1c3
  40d17a:	in     eax,dx
  40d17b:	ficomp WORD PTR [ecx]
  40d17d:	jp     0x40d197
  40d17f:	inc    ecx
  40d180:	xchg   ebx,eax
  40d181:	test   bl,dl
  40d183:	push   edi
  40d184:	mov    ds:0x3150a254,al
  40d189:	push   edi
  40d18a:	and    eax,ebx
  40d18c:	loopne 0x40d1d9
  40d18e:	adc    eax,0x28766ffc
  40d193:	adc    ah,BYTE PTR [ebx]
  40d195:	cmp    esi,DWORD PTR [ecx]
  40d197:	jnp    0x40d156
  40d199:	adc    eax,0x10f5086d
  40d19e:	xchg   edx,eax
  40d19f:	mov    ch,0x57
  40d1a1:	shl    DWORD PTR [esi+0x4e],cl
  40d1a4:	icebp  
  40d1a5:	addr16 in eax,0x86
  40d1a8:	mov    WORD PTR [ecx-0x4ef4b563],?
  40d1ae:	jnp    0x40d1b0
  40d1b0:	jne    0x40d15a
  40d1b2:	ret    0x9570
  40d1b5:	jbe    0x40d218
  40d1b7:	dec    ebp
  40d1b8:	xor    BYTE PTR [ebx],ah
  40d1ba:	jnp    0x40d234
  40d1bc:	push   0xefbbe607
  40d1c1:	pop    ebx
  40d1c2:	inc    eax
  40d1c3:	lods   eax,DWORD PTR ds:[esi]
  40d1c4:	mov    dl,0x76
  40d1c6:	scas   eax,DWORD PTR es:[edi]
  40d1c7:	mov    bh,al
  40d1c9:	cmp    DWORD PTR [esi+0x4f8223ea],esi
  40d1cf:	dec    esp
  40d1d0:	dec    ebx
  40d1d1:	sbb    dh,BYTE PTR [edx+0x4f]
  40d1d4:	inc    esp
  40d1d5:	js     0x40d19a
  40d1d7:	ss sub eax,0x78682fcd
  40d1dd:	in     eax,dx
  40d1de:	dec    esi
  40d1df:	pop    ss
  40d1e0:	and    DWORD PTR [eax+0x26],0x71809b59
  40d1e7:	push   es
  40d1e8:	or     DWORD PTR [edi],ebp
  40d1ea:	sub    BYTE PTR ds:0x74570d96,dl
  40d1f0:	mov    ebp,0x7c28dcf1
  40d1f5:	mov    ebp,0x7ba1ce4f
  40d1fa:	push   ebx
  40d1fb:	neg    BYTE PTR [ebx+0x9]
  40d1fe:	pop    esp
  40d1ff:	pop    es
  40d200:	xor    bh,BYTE PTR [edi]
  40d202:	xchg   ecx,eax
  40d203:	je     0x40d22e
  40d205:	mov    ch,0xca
  40d207:	loopne 0x40d26b
  40d209:	gs sub al,0x45
  40d20c:	pushf  
  40d20d:	inc    esi
  40d20e:	inc    ecx
  40d20f:	dec    eax
  40d210:	ret    
  40d211:	pop    esp
  40d212:	xchg   edi,eax
  40d213:	xchg   esi,eax
  40d214:	ret    0x734b
  40d217:	hlt    
  40d218:	outs   dx,BYTE PTR ds:[esi]
  40d219:	pop    esi
  40d21a:	mov    ecx,0x636e5032
  40d21f:	scas   eax,DWORD PTR es:[edi]
  40d220:	mov    eax,ds:0xb37a0ed9
  40d225:	jns    0x40d25e
  40d227:	aad    0x5
  40d229:	pop    ecx
  40d22a:	jno    0x40d289
  40d22c:	adc    eax,0x9ccab307
  40d231:	fsub   st,st(7)
  40d233:	mov    edx,es
  40d235:	jmp    0x2dac:0x87ed44
  40d23c:	out    dx,al
  40d23d:	test   eax,0x28299ce1
  40d242:	lea    ebx,[eax-0x6e]
  40d245:	pop    ss
  40d246:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d247:	jmp    0xe58902ea
  40d24c:	stc    
  40d24d:	add    esi,DWORD PTR [esi-0x356fe79c]
  40d253:	imul   eax,DWORD PTR [ebx],0xd46eaec5
  40d259:	mov    bh,0xeb
  40d25b:	int    0x23
  40d25d:	cmp    edx,DWORD PTR [ecx+ebx*8-0x48]
  40d261:	ss pop ebx
  40d263:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d264:	popf   
  40d265:	fwait
  40d266:	mov    eax,ds:0xff54a55
  40d26b:	outs   dx,DWORD PTR ds:[esi]
  40d26c:	cmp    DWORD PTR [edx],ebx
  40d26e:	jne    0x40d20e
  40d270:	mov    BYTE PTR [eax],dh
  40d272:	or     bl,bl
  40d274:	daa    
  40d275:	sbb    ecx,DWORD PTR [ebp+0x73dbea30]
  40d27b:	into   
  40d27c:	mov    eax,DWORD PTR [ebx]
  40d27e:	fidivr WORD PTR [edi+0x11e69779]
  40d284:	jmp    0x6b7a54c5
  40d289:	sub    cl,BYTE PTR [edi]
  40d28b:	rol    ebp,0x80
  40d28e:	scas   al,BYTE PTR es:[edi]
  40d28f:	xchg   esp,eax
  40d290:	pop    es
  40d291:	icebp  
  40d292:	adc    al,0xbd
  40d294:	pusha  
  40d295:	aam    0x9
  40d297:	sbb    DWORD PTR [edi-0x56],ebp
  40d29a:	mov    ds:0xc5933402,al
  40d29f:	ss shl ebx,cl
  40d2a2:	ins    DWORD PTR es:[edi],dx
  40d2a3:	ss mov bl,0x51
  40d2a6:	sti    
  40d2a7:	addr16 push 0xa8ffc815
  40d2ad:	mov    ah,0xe7
  40d2af:	gs in  al,dx
  40d2b1:	fs in  eax,0x69
  40d2b4:	adc    ecx,DWORD PTR [eax+ebp*1+0x5f]
  40d2b8:	mov    ah,0xf6
  40d2ba:	nop
  40d2bb:	shl    DWORD PTR [ebx],cl
  40d2bd:	out    dx,al
  40d2be:	add    BYTE PTR [edi+ebx*2+0x28cd1d58],ch
  40d2c5:	bound  edx,QWORD PTR [edi-0x426f0f58]
  40d2cb:	sbb    bl,cl
  40d2cd:	dec    esp
  40d2cf:	mov    ebp,0xca15f5b
  40d2d4:	aam    0xf5
  40d2d6:	das    
  40d2d7:	xchg   DWORD PTR [eax-0x35b598e],esi
  40d2dd:	in     eax,dx
  40d2de:	jmp    0x40d304
  40d2e0:	call   0xe910af7e
  40d2e5:	push   edi
  40d2e6:	test   al,0x8
  40d2e8:	adc    cl,0x90
  40d2eb:	sub    DWORD PTR [ecx],eax
  40d2ed:	clc    
  40d2ee:	inc    ecx
  40d2ef:	adc    ch,BYTE PTR [edi]
  40d2f1:	mov    ebx,0x713198eb
  40d2f6:	or     edi,ecx
  40d2f8:	aad    0x5
  40d2fa:	inc    eax
  40d2fb:	jge    0x40d27e
  40d2fd:	mov    ecx,fs
  40d2ff:	push   ss
  40d300:	fdivr  DWORD PTR [edi+0x50]
  40d303:	loopne 0x40d34c
  40d305:	mov    esi,0xc132af4e
  40d30a:	jae    0x40d2a8
  40d30c:	mov    ah,0x40
  40d30e:	inc    esi
  40d30f:	pop    es
  40d310:	(bad)  
  40d311:	mov    edx,0x8276a15b
  40d316:	and    esp,DWORD PTR [ecx-0x7d]
  40d319:	mov    esi,esp
  40d31b:	pusha  
  40d31c:	sti    
  40d31d:	sti    
  40d31e:	mov    eax,0xe12442a0
  40d323:	fs cmp eax,0xebc89923
  40d329:	gs cli 
  40d32b:	nop
  40d32c:	into   
  40d32d:	inc    ebx
  40d32e:	sar    BYTE PTR [esi+eiz*2+0x384bb3e],0x91
  40d336:	mov    ecx,0x9e979039
  40d33b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d33d:	sbb    al,0xbc
  40d33f:	and    dh,BYTE PTR [esi+esi*2+0x282dcb75]
  40d346:	push   ss
  40d347:	add    al,0x1
  40d349:	pop    ss
  40d34a:	clc    
  40d34b:	inc    ebx
  40d34c:	pop    ecx
  40d34d:	adc    ecx,DWORD PTR ds:0xe69ea449
  40d353:	repnz ffree st(7)
  40d356:	cli    
  40d357:	push   0x827d68c1
  40d35c:	add    dl,al
  40d35e:	loope  0x40d3bc
  40d360:	dec    edx
  40d361:	sbb    edx,0xb58ffca4
  40d367:	retf   0x2f04
  40d36a:	xchg   BYTE PTR [eax],cl
  40d36c:	mov    edi,0x3f76c3dc
  40d371:	inc    ecx
  40d372:	sbb    ch,BYTE PTR [ebx]
  40d374:	ins    DWORD PTR es:[edi],dx
  40d375:	xchg   esp,eax
  40d376:	mov    ch,0xeb
  40d378:	jns    0x40d384
  40d37a:	lahf   
  40d37b:	(bad)  
  40d37c:	rcr    BYTE PTR [edx],1
  40d37e:	or     al,0x66
  40d380:	adc    eax,0xab865928
  40d385:	dec    ebp
  40d386:	adc    ah,BYTE PTR [esi+0x7fa9c33a]
  40d38c:	mov    ebp,DWORD PTR [esi-0x76]
  40d38f:	ret    
  40d390:	push   ss
  40d391:	or     al,0xc4
  40d393:	adc    ah,BYTE PTR [edi+0x5039e9c0]
  40d399:	jge    0x40d3cd
  40d39b:	(bad)  
  40d39c:	xchg   ebp,eax
  40d39d:	mov    BYTE PTR [edx+esi*2-0x79],0x93
  40d3a2:	in     al,0xa7
  40d3a4:	mov    ebx,0xf9f57760
  40d3a9:	xchg   ebp,eax
  40d3aa:	stos   BYTE PTR es:[edi],al
  40d3ab:	or     DWORD PTR [edi+0xd7820db],eax
  40d3b1:	pop    ss
  40d3b2:	inc    ebp
  40d3b3:	popf   
  40d3b4:	xchg   edi,eax
  40d3b5:	cmp    bh,dl
  40d3b7:	test   DWORD PTR [esi],ecx
  40d3b9:	add    edi,DWORD PTR [esi+eax*2+0x2e80a7c7]
  40d3c0:	xchg   ebx,eax
  40d3c1:	pop    ss
  40d3c2:	loop   0x40d3ba
  40d3c4:	xor    dl,BYTE PTR [ecx]
  40d3c6:	inc    ecx
  40d3c7:	pop    es
  40d3c8:	jecxz  0x40d437
  40d3ca:	int    0x12
  40d3cc:	hlt    
  40d3cd:	out    dx,eax
  40d3ce:	into   
  40d3cf:	sbb    al,0x97
  40d3d1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d3d2:	dec    ebx
  40d3d3:	add    DWORD PTR [edi],esi
  40d3d5:	ror    DWORD PTR ds:0x136f687b,1
  40d3db:	shl    esi,0x19
  40d3de:	ret    0xd6ea
  40d3e1:	and    al,0xd6
  40d3e3:	retf   0xc7d2
  40d3e6:	jbe    0x40d425
  40d3e8:	int3   
  40d3e9:	and    eax,0xe23d8758
  40d3ee:	(bad)  [esi+0x2b8d7678]
  40d3f4:	sbb    DWORD PTR [edx],esi
  40d3f6:	inc    edx
  40d3f7:	stc    
  40d3f8:	jne    0x40d427
  40d3fa:	sub    ecx,ebx
  40d3fc:	jge    0x40d3e4
  40d3fe:	shr    ch,cl
  40d400:	ret    0x980e
  40d403:	stos   DWORD PTR es:[edi],eax
  40d404:	lahf   
  40d405:	pop    esi
  40d406:	xchg   edx,eax
  40d407:	fdiv   st(3),st
  40d409:	cmp    eax,0x92e48912
  40d40e:	push   0x712c4416
  40d413:	push   ecx
  40d414:	fild   QWORD PTR [ebx-0x1e424c73]
  40d41a:	dec    ebp
  40d41b:	xor    esi,eax
  40d41d:	jb     0x40d418
  40d41f:	outs   dx,DWORD PTR ds:[esi]
  40d420:	into   
  40d421:	loopne 0x40d41e
  40d423:	xchg   edx,eax
  40d424:	sbb    eax,0x8b554fc0
  40d429:	retf   0x4717
  40d42c:	cmp    DWORD PTR [ebx+0x4bc90436],ebp
  40d432:	sub    eax,DWORD PTR [eax+0x60ab3bfc]
  40d438:	ror    eax,1
  40d43a:	in     al,dx
  40d43b:	jbe    0x40d48b
  40d43d:	das    
  40d43e:	push   esp
  40d43f:	or     ebp,DWORD PTR [esi+0x25]
  40d442:	shr    DWORD PTR [eax],1
  40d444:	and    al,0x37
  40d446:	setbe  BYTE PTR [ebp-0x7034debb]
  40d44d:	rcr    edi,0x5e
  40d450:	mov    eax,ds:0xf1ef35a7
  40d455:	sar    DWORD PTR [eax],0x9d
  40d458:	sub    bh,BYTE PTR fs:[esp+eiz*2-0x2f]
  40d45d:	xchg   esp,eax
  40d45e:	mov    ch,dl
  40d460:	test   edi,edx
  40d462:	cmp    bh,BYTE PTR [ecx+eax*8]
  40d465:	jmp    0x136f18ec
  40d46a:	jge    0x40d4d8
  40d46c:	inc    esi
  40d46d:	rcl    BYTE PTR fs:[esi-0x9ae39f5],cl
  40d474:	xchg   edi,eax
  40d475:	xchg   BYTE PTR [ebp+0x65],bl
  40d478:	push   ds
  40d479:	fild   DWORD PTR [edx+0x7a73616b]
  40d47f:	xor    DWORD PTR [ebx-0x57ddeaf1],ecx
  40d485:	lea    esp,[eax+eiz*8+0x3f]
  40d489:	push   ecx
  40d48a:	inc    edi
  40d48b:	jl     0x40d440
  40d48d:	and    al,0x21
  40d48f:	jo     0x40d4a1
  40d491:	fdecstp 
  40d493:	push   ebp
  40d494:	and    BYTE PTR [esi],cl
  40d496:	cs push edx
  40d498:	sub    bh,BYTE PTR [ebx]
  40d49a:	jecxz  0x40d464
  40d49c:	outs   dx,BYTE PTR ds:[esi]
  40d49d:	aad    0xec
  40d49f:	xchg   edx,eax
  40d4a0:	lds    esi,FWORD PTR [ecx+0x2a]
  40d4a3:	(bad)  
  40d4a5:	add    edi,DWORD PTR [esp+ebx*1+0x31be2f01]
  40d4ac:	dec    ebp
  40d4ad:	popa   
  40d4ae:	adc    eax,0xc21204f4
  40d4b3:	out    0x5c,eax
  40d4b5:	xor    al,0x63
  40d4b7:	shr    BYTE PTR [ebp-0x3894d7c],0xe5
  40d4be:	mov    ch,0xb
  40d4c0:	inc    ecx
  40d4c1:	shl    ebp,cl
  40d4c3:	xchg   ecx,eax
  40d4c4:	add    al,0x59
  40d4c6:	mov    ebp,0x4e5216d6
  40d4cb:	out    0x7c,eax
  40d4cd:	dec    esp
  40d4ce:	dec    ebp
  40d4cf:	jge    0x40d516
  40d4d1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d4d2:	hlt    
  40d4d3:	pop    ebp
  40d4d4:	add    edi,DWORD PTR [ecx+0x79]
  40d4d7:	loope  0x40d493
  40d4d9:	shl    DWORD PTR [eax-0x69050c68],0x40
  40d4e0:	pusha  
  40d4e1:	xchg   ebp,eax
  40d4e2:	in     eax,dx
  40d4e3:	jecxz  0x40d552
  40d4e5:	int    0x72
  40d4e7:	das    
  40d4e8:	das    
  40d4e9:	pop    ss
  40d4ea:	mov    al,ds:0x6d42a609
  40d4ef:	repz push ds
  40d4f1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d4f2:	retf   0x8763
  40d4f5:	in     al,0x1c
  40d4f7:	inc    ebp
  40d4f8:	daa    
  40d4f9:	adc    al,0x16
  40d4fb:	rol    DWORD PTR [esi-0x58],1
  40d4fe:	adc    BYTE PTR [eax-0x60],al
  40d501:	ds cmp al,0xf0
  40d504:	iret   
  40d505:	jbe    0x40d4e9
  40d507:	mov    al,ds:0x4a9f9cbd
  40d50c:	scas   al,BYTE PTR es:[edi]
  40d50d:	cld    
  40d50e:	adc    eax,0x879291e3
  40d513:	mov    esi,0xfc4f4d4
  40d518:	lock jle 0x40d49b
  40d51b:	jo     0x40d59b
  40d51d:	or     ecx,ebx
  40d51f:	lock jmp 0x52915265
  40d525:	inc    ebp
  40d526:	cmp    ecx,esi
  40d528:	and    eax,0xe56b0ae4
  40d52d:	(bad)  
  40d52e:	and    eax,0xb878341e
  40d533:	cdq    
  40d534:	dec    esp
  40d535:	outs   dx,DWORD PTR ds:[esi]
  40d536:	inc    edx
  40d537:	iret   
  40d538:	(bad)  
  40d539:	iret   
  40d53a:	jl     0x40d4d6
  40d53c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d53d:	pop    ebp
  40d53e:	out    0x16,al
  40d540:	sbb    esi,DWORD PTR [ecx]
  40d542:	data16 repnz mov al,ds:0xfe3781d5
  40d549:	stos   DWORD PTR es:[edi],eax
  40d54a:	push   0xb76978d5
  40d54f:	in     al,0xcb
  40d551:	cmp    BYTE PTR [esi],ah
  40d553:	xchg   esp,esi
  40d555:	push   0xffffff89
  40d557:	sub    ah,BYTE PTR [edx]
  40d559:	or     eax,0x446018b2
  40d55e:	push   edx
  40d55f:	jmp    0x6388:0x50d44bad
  40d566:	int    0x1a
  40d568:	inc    ebp
  40d569:	or     DWORD PTR [ebp+0x38f772b6],esi
  40d56f:	aas    
  40d570:	in     al,0x68
  40d572:	not    BYTE PTR [ebp+0x7a]
  40d575:	aad    0x45
  40d577:	push   esp
  40d578:	mov    ds:0x789a5df0,al
  40d57d:	std    
  40d57e:	push   0x31c395c
  40d583:	fsub   st,st(1)
  40d585:	cmp    ch,ch
  40d587:	adc    BYTE PTR [ebx],0x77
  40d58a:	aaa    
  40d58b:	add    DWORD PTR [ebp+edi*8+0x4f419549],esi
  40d592:	cmc    
  40d593:	stc    
  40d594:	test   BYTE PTR ds:0x7b2b98b2,cl
  40d59a:	sbb    al,0x27
  40d59c:	add    al,0xa0
  40d59e:	push   cs
  40d59f:	out    0xa7,eax
  40d5a1:	imul   esp,DWORD PTR cs:[edx+esi*4+0x4bdc18fd],0x6fd148c4
  40d5ad:	sub    al,0xc8
  40d5af:	fsub   st(2),st
  40d5b1:	inc    esi
  40d5b2:	jge    0x40d5a5
  40d5b4:	pushf  
  40d5b5:	ret    
  40d5b6:	gs push 0x4f
  40d5b9:	outs   dx,DWORD PTR ds:[esi]
  40d5ba:	aas    
  40d5bb:	mov    ebp,0x557c1227
  40d5c0:	adc    BYTE PTR ds:0xc10120cc,bl
  40d5c6:	clflush BYTE PTR [esi-0x2]
  40d5ca:	les    eax,FWORD PTR [ebp-0x5c]
  40d5cd:	fcomp  QWORD PTR [esi]
  40d5cf:	jecxz  0x40d55d
  40d5d1:	cmp    eax,0x27314408
  40d5d6:	add    al,0x62
  40d5d8:	and    DWORD PTR [edx+0x26f39c77],0xffffff83
  40d5df:	mov    dh,0xab
  40d5e1:	fstp   DWORD PTR [bp+si+0x2c]
  40d5e5:	dec    ecx
  40d5e6:	fcmovu st,st(1)
  40d5e8:	test   eax,0xdc2e4735
  40d5ed:	or     esp,DWORD PTR [ecx]
  40d5ef:	and    al,0x51
  40d5f1:	in     al,0xb6
  40d5f3:	daa    
  40d5f4:	jp     0x40d631
  40d5f6:	popa   
  40d5f7:	jge    0x40d61c
  40d5f9:	jb     0x40d653
  40d5fb:	pop    eax
  40d5fc:	push   edi
  40d5fd:	inc    esi
  40d5fe:	out    dx,al
  40d5ff:	push   esi
  40d600:	push   DWORD PTR [ecx+0x2e]
  40d603:	pop    ss
  40d604:	jg     0x40d5e5
  40d606:	mov    dl,0xc2
  40d608:	je     0x40d674
  40d60a:	leave  
  40d60b:	pop    ebx
  40d60c:	jne    0x40d5ea
  40d60e:	jbe    0x40d678
  40d610:	jge    0x40d658
  40d612:	int    0xb6
  40d614:	scas   eax,DWORD PTR es:[edi]
  40d615:	mov    ebx,0x955d7405
  40d61a:	xchg   edi,eax
  40d61b:	or     eax,0xdd96c1f
  40d620:	les    esp,FWORD PTR [ecx]
  40d622:	clc    
  40d623:	scas   al,BYTE PTR es:[edi]
  40d624:	out    dx,eax
  40d625:	gs loope 0x40d5cf
  40d628:	sti    
  40d629:	or     al,BYTE PTR [edx]
  40d62b:	push   ss
  40d62c:	mov    ds,WORD PTR [esp+ebx*1+0x41]
  40d630:	stc    
  40d631:	ja     0x40d5d7
  40d633:	scas   eax,DWORD PTR es:[edi]
  40d634:	bound  esi,QWORD PTR [ebp+0x8232f67]
  40d63a:	shl    BYTE PTR ds:0x3dabfc97,0xfe
  40d641:	adc    al,0xa4
  40d643:	jl     0x40d6ac
  40d645:	out    0x40,al
  40d647:	ja     0x40d693
  40d649:	inc    ecx
  40d64a:	(bad)  
  40d64b:	add    DWORD PTR [edi+edx*1+0x7b],edi
  40d64f:	mov    bl,dh
  40d651:	repz mov eax,ds:0xdfe3934a
  40d657:	adc    eax,0x6cdbf2bc
  40d65c:	cmp    dl,BYTE PTR [ebx-0x7c]
  40d65f:	outs   dx,DWORD PTR ds:[esi]
  40d660:	lods   al,BYTE PTR ds:[esi]
  40d661:	call   0xf4fc255b
  40d666:	mov    cl,0xae
  40d668:	or     DWORD PTR [ebp+0x1fc5f718],ecx
  40d66e:	sub    eax,0xa07ac62b
  40d673:	popf   
  40d674:	add    eax,0x644c9ece
  40d679:	aaa    
  40d67a:	xor    ecx,ebp
  40d67c:	jb     0x40d611
  40d67e:	cmp    edx,eax
  40d680:	add    esi,DWORD PTR [eax-0x8]
  40d683:	pop    ds
  40d684:	cmp    cl,dh
  40d686:	jg     0x40d69e
  40d688:	jbe    0x40d614
  40d68a:	push   edi
  40d68b:	add    BYTE PTR [eax+0xf56a0cb],ch
  40d691:	sti    
  40d692:	ret    
  40d693:	rcl    ecx,1
  40d695:	out    dx,al
  40d696:	push   edx
  40d697:	dec    ecx
  40d698:	xchg   ebp,eax
  40d699:	mov    bl,0xb
  40d69b:	fimul  DWORD PTR [ebp+0x21]
  40d69e:	aad    0x34
  40d6a0:	mov    eax,0xd8d8b7eb
  40d6a5:	adc    al,0xc4
  40d6a7:	and    eax,0xd548a4be
  40d6ac:	adc    BYTE PTR [ecx],al
  40d6ae:	enter  0xa202,0x3d
  40d6b2:	sub    ebx,DWORD PTR [esi-0x7932aad4]
  40d6b8:	dec    ebp
  40d6b9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d6ba:	push   ebx
  40d6bb:	mov    dh,0x2a
  40d6bd:	pop    ebx
  40d6be:	sub    ebp,DWORD PTR [edx+esi*4]
  40d6c1:	rol    esi,0x98
  40d6c4:	xrelease mov DWORD PTR [ebp-0x5cab0c6f],ebx
  40d6cb:	and    al,0xb8
  40d6cd:	adc    ebp,DWORD PTR [eax-0x41]
  40d6d0:	inc    esi
  40d6d1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d6d2:	xor    eax,0xd668e2b2
  40d6d7:	lds    edi,FWORD PTR [edx-0x6ec4b6f4]
  40d6dd:	gs jmp 0x59de:0x6519a87
  40d6e5:	imul   edx,ecx,0x16
  40d6e8:	xchg   ebx,eax
  40d6e9:	mov    dl,0xd
  40d6eb:	push   ss
  40d6ec:	loop   0x40d6ea
  40d6ee:	cmp    esi,ebx
  40d6f0:	outs   dx,DWORD PTR ds:[esi]
  40d6f1:	mov    ah,0x33
  40d6f3:	(bad)  
  40d6f4:	lahf   
  40d6f5:	xchg   BYTE PTR [ebx-0x28],al
  40d6f8:	scas   eax,DWORD PTR es:[edi]
  40d6f9:	sub    eax,0xe26fa9aa
  40d6fe:	dec    esi
  40d6ff:	xor    al,0x7a
  40d701:	ret    0xa813
  40d704:	nop
  40d705:	loope  0x40d692
  40d707:	in     eax,dx
  40d708:	fmul   QWORD PTR [esi+0x58]
  40d70b:	mov    ebp,0x23bfc5b2
  40d710:	inc    eax
  40d711:	mov    ebp,0x7ec78954
  40d716:	mov    eax,ds:0x51cf6797
  40d71b:	(bad)  
  40d71c:	(bad)  
  40d71d:	mov    DWORD PTR [ecx+0x1a],edi
  40d720:	xor    BYTE PTR [esi-0x3e0e5300],al
  40d726:	stc    
  40d727:	lock sub al,BYTE PTR [ebp+edx*2+0x4d]
  40d72c:	rol    eax,cl
  40d72e:	imul   ebp,DWORD PTR [edx+ecx*1+0x61e80293],0xffffff95
  40d736:	repnz inc edi
  40d738:	hlt    
  40d739:	inc    ebx
  40d73a:	(bad)  
  40d73b:	push   ebp
  40d73c:	xor    al,0xe3
  40d73e:	pop    ebp
  40d73f:	push   ss
  40d740:	mov    eax,ds:0xd7f03ebd
  40d745:	push   0xffffffd7
  40d747:	xchg   esp,eax
  40d748:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d749:	mov    edx,0xe8404a89
  40d74e:	ins    DWORD PTR es:[edi],dx
  40d74f:	or     BYTE PTR [ebx-0x7c],bl
  40d752:	mov    esi,0xb84af8f7
  40d757:	adc    dl,BYTE PTR ds:0xf4e3a0e8
  40d75d:	repz and al,bh
  40d760:	cmp    dh,BYTE PTR [edx]
  40d762:	out    dx,eax
  40d763:	aaa    
  40d764:	jmp    0x40d7e1
  40d766:	stos   DWORD PTR es:[edi],eax
  40d767:	fidiv  WORD PTR [esp+esi*8-0x49af0b5b]
  40d76e:	shl    BYTE PTR [ecx-0x61fea565],0x6
  40d775:	fcmovb st,st(5)
  40d777:	ret    0x4d56
  40d77a:	pop    ebp
  40d77b:	add    BYTE PTR [edi],0xd9
  40d77e:	dec    DWORD PTR [edx]
  40d780:	sbb    ebx,ebx
  40d782:	pop    eax
  40d783:	hlt    
  40d784:	add    ebp,DWORD PTR [esi]
  40d786:	jp     0x40d764
  40d788:	iret   
  40d789:	shr    BYTE PTR [ebx+0x12258ca4],0x1f
  40d790:	push   ecx
  40d791:	jecxz  0x40d78e
  40d793:	dec    eax
  40d794:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d795:	push   cs
  40d796:	xchg   DWORD PTR ds:0x1418ac57,edx
  40d79c:	jmp    0x6c4e20a5
  40d7a1:	arpl   WORD PTR [ecx-0x51],bp
  40d7a4:	ja     0x40d743
  40d7a6:	add    al,0xb6
  40d7a8:	loop   0x40d7e1
  40d7aa:	cmp    al,0x51
  40d7ac:	aam    0x11
  40d7ae:	sub    dh,BYTE PTR [eax+0x73a5a9e9]
  40d7b4:	(bad)  
  40d7b5:	rcl    BYTE PTR [eax],cl
  40d7b7:	sbb    al,0xea
  40d7b9:	(bad)  
  40d7ba:	fdivr  st,st(0)
  40d7bc:	cmp    eax,DWORD PTR ds:0xb86f253
  40d7c2:	inc    ecx
  40d7c3:	test   BYTE PTR [eax],dh
  40d7c5:	mov    ecx,0x6568d7ee
  40d7ca:	add    al,0x68
  40d7cc:	adc    cl,BYTE PTR [edx]
  40d7ce:	add    BYTE PTR [ebx],0x49
  40d7d1:	rcl    DWORD PTR [ebp-0x6a26df73],1
  40d7d7:	stos   DWORD PTR es:[edi],eax
  40d7d8:	inc    ebx
  40d7d9:	inc    edi
  40d7da:	jmp    0xc136:0x3f08d9da
  40d7e1:	xor    dh,BYTE PTR [eax+ebp*2-0x29]
  40d7e5:	inc    edx
  40d7e6:	lods   eax,DWORD PTR ds:[esi]
  40d7e7:	addr16 pop edi
  40d7e9:	dec    esp
  40d7ea:	call   0xc23c:0x9b3f6b7e
  40d7f1:	test   BYTE PTR [esp+ebx*1],dl
  40d7f4:	or     edx,edx
  40d7f6:	dec    DWORD PTR [esi]
  40d7f8:	push   ds
  40d7f9:	cmp    BYTE PTR [edx+0x4e60bdc7],0x38
  40d800:	or     BYTE PTR ds:0x37972361,bl
  40d806:	mov    dl,0x25
  40d809:	and    DWORD PTR [ebx],0x5a
  40d80c:	jl     0x40d88c
  40d80e:	push   eax
  40d80f:	aaa    
  40d810:	cdq    
  40d811:	jecxz  0x40d80d
  40d813:	inc    ecx
  40d814:	xor    al,0xa5
  40d816:	imul   ebx,DWORD PTR [edi+0x7a],0xffffffd9
  40d81a:	or     DWORD PTR [esi],esi
  40d81c:	xor    BYTE PTR [edx+eax*4],bl
  40d81f:	xor    BYTE PTR [edi-0x620a1b33],al
  40d825:	out    dx,al
  40d826:	or     al,BYTE PTR [esi]
  40d828:	cmp    BYTE PTR [ebp+0x4d1e3cf6],bl
  40d82e:	cld    
  40d82f:	out    dx,eax
  40d830:	jno    0x40d89d
  40d832:	mov    ecx,0x93ad6d55
  40d837:	nop
  40d838:	test   DWORD PTR [edx+0x4f],eax
  40d83b:	xchg   esp,eax
  40d83c:	jle    0x40d835
  40d83e:	rcr    al,0x24
  40d841:	fist   DWORD PTR [esi]
  40d843:	test   eax,0x8817e32c
  40d848:	inc    edx
  40d849:	idiv   BYTE PTR [ecx+0x53]
  40d84c:	sub    al,0x53
  40d84f:	add    bh,cl
  40d851:	jl     0x40d87b
  40d853:	cdq    
  40d854:	fidivr DWORD PTR [edx-0x14]
  40d857:	stos   DWORD PTR es:[edi],eax
  40d858:	retf   0x5933
  40d85b:	repz and DWORD PTR [ebx+ebp*2-0x80],edx
  40d860:	dec    esp
  40d861:	hlt    
  40d862:	pusha  
  40d863:	push   ds
  40d864:	clc    
  40d865:	mov    cl,0x3f
  40d867:	rol    DWORD PTR [edx-0x9],1
  40d86a:	sar    edi,1
  40d86c:	push   edi
  40d86d:	adc    DWORD PTR [ebx+0x2e],edx
  40d870:	sub    esi,DWORD PTR [ebx+ebx*8+0x5d]
  40d874:	into   
  40d875:	mov    BYTE PTR [ecx-0x7f],bh
  40d878:	jae    0x40d89d
  40d87a:	sub    edi,DWORD PTR [ebp+0x37]
  40d87d:	adc    al,0x78
  40d87f:	push   esp
  40d880:	sub    al,0xbd
  40d882:	pop    edx
  40d883:	adc    esp,DWORD PTR [esi]
  40d885:	dec    ebp
  40d886:	mov    gs,WORD PTR [ebx+eiz*4+0x4]
  40d88a:	mov    ds:0x56f37a19,al
  40d88f:	sbb    ebx,edi
  40d891:	repz mov ch,dl
  40d894:	add    DWORD PTR fs:[ebx-0x50],esi
  40d898:	imul   esp,esp,0xcdcd4f11
  40d89e:	mov    ds:0x351f199a,eax
  40d8a3:	call   0x5d55acb3
  40d8a8:	mov    bh,0xc8
  40d8aa:	jae    0x40d903
  40d8ac:	clc    
  40d8ad:	add    al,0x27
  40d8af:	ror    dh,1
  40d8b1:	outs   dx,BYTE PTR ds:[esi]
  40d8b2:	ss xchg ebx,eax
  40d8b4:	mov    edi,0x9330ceda
  40d8b9:	nop
  40d8ba:	lods   eax,DWORD PTR ds:[esi]
  40d8bb:	enter  0xa81b,0xc1
  40d8bf:	pop    edx
  40d8c0:	or     ch,BYTE PTR [ebp-0x51]
  40d8c3:	call   0xa59e6b33
  40d8c8:	in     eax,0xe0
  40d8ca:	(bad)  
  40d8cb:	mov    DWORD PTR [edi-0x52e8e667],ebp
  40d8d1:	int3   
  40d8d2:	cmp    esi,ecx
  40d8d4:	fs ins DWORD PTR es:[edi],dx
  40d8d6:	jp     0x40d8d9
  40d8d8:	arpl   WORD PTR [ebx],ax
  40d8da:	inc    esp
  40d8db:	icebp  
  40d8dc:	pop    edi
  40d8dd:	ss dec esi
  40d8df:	out    0xcd,eax
  40d8e1:	out    dx,eax
  40d8e2:	dec    ebx
  40d8e3:	sbb    ebp,DWORD PTR [eax-0x7a]
  40d8e6:	data16 and dl,BYTE PTR [ebx+edi*8+0x194f5ea6]
  40d8ee:	mov    esp,DWORD PTR [ecx+0x34]
  40d8f1:	and    al,0x88
  40d8f3:	in     al,dx
  40d8f4:	jl     0x40d8d7
  40d8f6:	mov    esi,0xe6256e9d
  40d8fb:	shl    DWORD PTR [ecx-0x24],1
  40d8fe:	add    BYTE PTR [eax],dh
  40d900:	mov    bl,0xd1
  40d902:	and    DWORD PTR [esi],ecx
  40d904:	push   ss
  40d905:	inc    esi
  40d906:	arpl   WORD PTR [edx-0x54],di
  40d909:	aaa    
  40d90a:	or     BYTE PTR ds:0xc46029c5,0xfa
  40d911:	repz mov cl,0xea
  40d914:	call   0xb8a9:0x3b8e14f7
  40d91b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d91c:	jne    0x40d974
  40d91e:	pop    ds
  40d91f:	outs   dx,DWORD PTR ds:[esi]
  40d920:	int3   
  40d921:	pop    es
  40d922:	sahf   
  40d923:	jnp    0x40d971
  40d925:	jg     0x40d94f
  40d927:	xor    BYTE PTR [edx+ebx*4-0x52],bl
  40d92b:	(bad)  
  40d92c:	push   0x656ef2fa
  40d931:	inc    ebx
  40d932:	cmp    eax,0xc35639ae
  40d937:	sbb    ebp,DWORD PTR [edi-0x6cff7290]
  40d93d:	(bad)  
  40d93e:	xchg   ecx,eax
  40d93f:	add    BYTE PTR [esi+0x322de720],bh
  40d945:	scas   al,BYTE PTR es:[edi]
  40d946:	pusha  
  40d947:	mov    ch,0xb0
  40d949:	int3   
  40d94a:	out    dx,al
  40d94b:	jmp    0xdff5:0x211bf3c4
  40d952:	lods   eax,DWORD PTR ds:[esi]
  40d953:	in     eax,0xdc
  40d955:	int3   
  40d956:	mov    esp,0xa063543
  40d95b:	aaa    
  40d95c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d95d:	loop   0x40d95a
  40d95f:	out    0x53,al
  40d961:	loop   0x40d92e
  40d963:	pop    ss
  40d964:	cmp    eax,0x8d3910ac
  40d969:	loopne 0x40d929
  40d96b:	push   es
  40d96c:	loop   0x40d999
  40d96e:	push   eax
  40d96f:	test   edx,esp
  40d971:	fist   DWORD PTR [edx]
  40d973:	mov    ch,0x28
  40d975:	test   eax,0x352a585
  40d97a:	aam    0x60
  40d97c:	stos   BYTE PTR es:[edi],al
  40d97d:	out    0xbc,eax
  40d97f:	aas    
  40d980:	jo     0x40d92a
  40d982:	stos   BYTE PTR es:[edi],al
  40d983:	lods   eax,DWORD PTR ds:[esi]
  40d984:	xchg   edx,eax
  40d985:	or     ebx,0x7914391a
  40d98b:	dec    ecx
  40d98c:	daa    
  40d98d:	neg    BYTE PTR [ecx-0x60f00ef3]
  40d993:	das    
  40d994:	cmp    ebp,esi
  40d996:	in     al,dx
  40d997:	and    esi,edx
  40d999:	sub    ah,BYTE PTR [ebp-0x46]
  40d99c:	xchg   ebp,eax
  40d99d:	repz call 0x60312aad
  40d9a3:	popf   
  40d9a4:	pop    es
  40d9a5:	xor    edi,DWORD PTR [edi+edx*1]
  40d9a8:	xchg   ebx,eax
  40d9a9:	add    eax,0xb90bfe01
  40d9ae:	lods   eax,DWORD PTR ds:[esi]
  40d9af:	in     eax,dx
  40d9b0:	scas   al,BYTE PTR es:[edi]
  40d9b1:	mov    ecx,0x205d9b55
  40d9b6:	inc    ecx
  40d9b7:	push   edx
  40d9b8:	adc    eax,0xd2fc1dd6
  40d9bd:	mov    ds:0x8e09a706,al
  40d9c2:	jg     0x40d99e
  40d9c4:	pushf  
  40d9c5:	mov    bl,0x5c
  40d9c7:	stc    
  40d9c8:	sbb    ch,BYTE PTR [ebp+0x35]
  40d9cb:	sbb    BYTE PTR [eax+0x436e6d8e],ch
  40d9d1:	lahf   
  40d9d2:	and    BYTE PTR [edx+edx*4-0xf],dh
  40d9d6:	mov    BYTE PTR [eax+0x6c8750fb],0xb5
  40d9dd:	shr    DWORD PTR [eax+0x1a],cl
  40d9e0:	dec    BYTE PTR [eax]
  40d9e2:	mov    ah,0x4f
  40d9e4:	push   0x6a1cd119
  40d9e9:	inc    ecx
  40d9ea:	ss nop
  40d9ec:	or     cl,dl
  40d9ee:	daa    
  40d9ef:	xchg   esi,eax
  40d9f0:	sbb    BYTE PTR [ecx],ch
  40d9f2:	or     ebx,ebx
  40d9f4:	das    
  40d9f5:	pop    ss
  40d9f6:	sub    al,BYTE PTR [edx+eiz*8+0x4ed3da91]
  40d9fd:	mov    ebp,esi
  40d9ff:	or     ebx,DWORD PTR [ebx]
  40da01:	es daa 
  40da03:	cmp    al,0x4f
  40da05:	adc    eax,0x4a63a2bf
  40da0a:	adc    al,0xd1
  40da0c:	pop    ds
  40da0d:	push   0x41745e29
  40da12:	xor    esi,DWORD PTR [ebx+0x2a]
  40da15:	xor    ah,BYTE PTR [ebp+0x59]
  40da18:	int3   
  40da19:	dec    edx
  40da1a:	aas    
  40da1b:	(bad)  
  40da1c:	aaa    
  40da1d:	repnz imul esp,DWORD PTR [ebx-0x35f036c8],0x10eff3c7
  40da28:	mov    bl,0x7f
  40da2a:	sbb    DWORD PTR [ecx+0x57],0xd6bf270a
  40da31:	mov    bh,0x8a
  40da33:	je     0x40da0c
  40da35:	and    DWORD PTR [edi],ecx
  40da37:	sbb    esp,esp
  40da39:	xchg   DWORD PTR [ebp+eax*1+0x7a8dc795],edx
  40da40:	je     0x40da2a
  40da42:	and    DWORD PTR [edi+0x514c3f61],ecx
  40da48:	in     eax,0xb2
  40da4a:	leave  
  40da4b:	repz icebp 
  40da4d:	bound  edi,QWORD PTR [esi]
  40da4f:	adc    eax,0x8e522bfb
  40da54:	sti    
  40da55:	dec    ebx
  40da56:	xchg   ebp,eax
  40da57:	gs pop edx
  40da59:	pop    ss
  40da5a:	in     al,dx
  40da5b:	add    edx,0xd6c3db
  40da61:	mov    ch,0xca
  40da63:	pop    ss
  40da64:	xor    al,0x92
  40da66:	inc    eax
  40da67:	cs in  eax,0xaa
  40da6a:	stos   BYTE PTR es:[edi],al
  40da6b:	sbb    DWORD PTR cs:[edi-0x428c4ec0],0xa65da73b
  40da76:	sbb    DWORD PTR [eax+0x44c2b494],ebx
  40da7c:	and    DWORD PTR [edi],esi
  40da7e:	or     DWORD PTR [eax],esp
  40da80:	add    dh,cl
  40da82:	jl     0x40daa5
  40da84:	repz shl al,1
  40da87:	adc    eax,0xd2c05511
  40da8c:	pop    ds
  40da8d:	and    eax,0xbf1335fa
  40da92:	hlt    
  40da93:	sub    al,0xe4
  40da95:	push   ebp
  40da96:	xchg   esp,eax
  40da97:	mov    bl,0x93
  40da99:	mov    esi,DWORD PTR [edx+0x1d]
  40da9c:	pop    ss
  40da9d:	idiv   ebx
  40da9f:	mov    WORD PTR [edx-0x54908462],gs
  40daa5:	cs ins BYTE PTR es:[edi],dx
  40daa7:	(bad)  
  40daa8:	adc    al,0x56
  40daaa:	out    dx,al
  40daab:	leave  
  40daac:	mov    al,ds:0xaed8603e
  40dab1:	push   ebp
  40dab2:	out    0xad,eax
  40dab4:	jp     0x40dac4
  40dab6:	out    0x1a,al
  40dab8:	and    ch,0x0
  40dabb:	xor    DWORD PTR [ecx],eax
  40dabd:	imul   eax,DWORD PTR [ebx-0x7e],0x66
  40dac1:	xchg   edi,eax
  40dac2:	scas   eax,DWORD PTR es:[edi]
  40dac3:	out    dx,al
  40dac4:	push   ds
  40dac5:	sbb    BYTE PTR [esi],bl
  40dac7:	add    DWORD PTR [esi+0x11ecd617],ebp
  40dacd:	sbb    ebx,DWORD PTR [ecx]
  40dacf:	pop    ds
  40dad0:	sbb    DWORD PTR [ebx],0x1a
  40dad3:	push   cs
  40dad4:	cmp    esp,DWORD PTR ds:[edi+0x5347392]
  40dadb:	xlat   BYTE PTR ds:[ebx]
  40dadc:	(bad)  
  40dadd:	icebp  
  40dade:	add    eax,0xaafbb8a4
  40dae3:	(bad)  
  40dae4:	mov    ebx,0x627b2da5
  40dae9:	inc    edx
  40daea:	mov    al,ds:0xdd622162
  40daef:	(bad)  
  40daf0:	scas   al,BYTE PTR es:[edi]
  40daf1:	add    BYTE PTR [eax],0x29
  40daf4:	push   0xffffff8c
  40daf6:	imul   esi,DWORD PTR [eax],0xe8451a77
  40dafc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40dafe:	push   eax
  40daff:	mul    BYTE PTR [edi-0x11]
  40db02:	inc    eax
  40db03:	push   esi
  40db04:	fabs   
  40db06:	(bad)  
  40db07:	(bad)  
  40db08:	mov    esi,eax
  40db0a:	jns    0x40db72
  40db0c:	sbb    BYTE PTR [edi+0x1abe2400],0x1
  40db13:	and    BYTE PTR [esi+0x53c5591c],cl
  40db19:	inc    ecx
  40db1a:	cld    
  40db1b:	icebp  
  40db1c:	out    0xb8,al
  40db1e:	cmc    
  40db1f:	dec    esp
  40db20:	mov    ecx,0xd8c0d6d5
  40db25:	sti    
  40db26:	dec    ecx
  40db27:	popf   
  40db28:	mov    al,cs:0xd10ccc7f
  40db2e:	mov    ch,0x6d
  40db30:	out    dx,eax
  40db31:	inc    ebp
  40db32:	fsubr  DWORD PTR [esi+ecx*1]
  40db35:	data16 mov WORD PTR [edx-0x71],fs
  40db39:	rcl    BYTE PTR [edx+eiz*2],0x5c
  40db3d:	das    
  40db3e:	adc    BYTE PTR [edx-0xf216b75],ch
  40db44:	jl     0x40db1f
  40db46:	ds dec eax
  40db48:	jle    0x40db84
  40db4a:	stos   BYTE PTR es:[edi],al
  40db4b:	xor    ch,cl
  40db4d:	nop
  40db4e:	or     dh,ah
  40db50:	test   al,0xbb
  40db52:	inc    eax
  40db53:	push   ebx
  40db54:	fisub  DWORD PTR [ebx-0x5a]
  40db57:	test   ecx,esp
  40db59:	addr16 pop ds
  40db5b:	xchg   edi,ebp
  40db5d:	daa    
  40db5e:	add    eax,0xdb62f980
  40db63:	cdq    
  40db64:	dec    edi
  40db65:	push   edi
  40db66:	pop    edx
  40db67:	rcr    DWORD PTR gs:[edx+0x23],cl
  40db6b:	push   cs
  40db6c:	in     al,dx
  40db6d:	push   ebx
  40db6e:	lea    esp,[edx+eax*1-0x6]
  40db72:	mov    edi,eax
  40db74:	mov    eax,ds:0xcdcd546e
  40db79:	mov    ebp,DWORD PTR [edx+0x15251679]
  40db7f:	pushf  
  40db80:	mov    DWORD PTR [ebp-0x4c],esp
  40db83:	push   edx
  40db84:	mov    ds:0x8116727a,al
  40db89:	xor    eax,0x80f9c0cd
  40db8e:	or     DWORD PTR [esi],ebx
  40db90:	rcl    BYTE PTR [esi+0x5fba65e3],cl
  40db96:	xor    ebx,DWORD PTR [eax-0x1937fad6]
  40db9c:	cld    
  40db9d:	popf   
  40db9e:	cwde   
  40db9f:	mov    edi,0x8f71042e
  40dba4:	adc    BYTE PTR [edi+0x7814fd4],ah
  40dbaa:	inc    esp
  40dbab:	cmp    DWORD PTR [ebx+eax*8+0x4],0x96119a47
  40dbb3:	clc    
  40dbb4:	adc    cl,BYTE PTR [edx]
  40dbb6:	pushf  
  40dbb7:	repnz push es
  40dbb9:	pop    eax
  40dbba:	mov    cl,0x4e
  40dbbc:	ds or  ecx,ebx
  40dbbf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40dbc0:	(bad)  
  40dbc1:	sub    eax,0xd9fddc11
  40dbc6:	es sub eax,DWORD PTR es:[esi-0x50078357]
  40dbce:	add    eax,0xbe50ba38
  40dbd3:	loope  0x40dc3b
  40dbd5:	enter  0x9562,0xc6
  40dbd9:	dec    esi
  40dbda:	sbb    esp,ebx
  40dbdc:	jle    0x40dbdb
  40dbde:	adc    ebx,edx
  40dbe0:	sub    DWORD PTR [ebx-0x1d],0xa3852266
  40dbe7:	xor    bh,BYTE PTR [ebx-0x75]
  40dbea:	cmp    BYTE PTR [edi-0x5ed24641],bh
  40dbf0:	mov    ah,0xdb
  40dbf2:	mov    bl,0xa8
  40dbf4:	inc    ebp
  40dbf5:	mov    WORD PTR [esp+ebx*4-0x10],ds
  40dbf9:	fs icebp 
  40dbfb:	push   ebx
  40dbfc:	es aam 0x33
  40dbff:	call   0xbb745973
  40dc04:	pop    ecx
  40dc05:	fldenv ds:0xd5f97cda
  40dc0b:	mov    esi,0x9928fcae
  40dc10:	fcomp  QWORD PTR [esi+0x41]
  40dc13:	pop    edx
  40dc14:	(bad)  
  40dc16:	fdivr  DWORD PTR ds:0x6e0b7eda
  40dc1d:	push   ss
  40dc1e:	(bad)  
  40dc1f:	and    dh,BYTE PTR [eax]
  40dc21:	push   es
  40dc22:	pop    sp
  40dc24:	inc    esp
  40dc25:	sbb    DWORD PTR [eax+0x2f],eax
  40dc28:	adc    bh,BYTE PTR [edx]
  40dc2a:	shr    DWORD PTR [eax+0x66],0xfe
  40dc2e:	std    
  40dc2f:	fs xchg ebx,eax
  40dc31:	sbb    al,0x7a
  40dc33:	xchg   DWORD PTR [ebx],eax
  40dc35:	idiv   DWORD PTR [ecx+eax*4+0x53ebb021]
  40dc3c:	stos   DWORD PTR es:[edi],eax
  40dc3d:	out    0x53,al
  40dc3f:	daa    
  40dc40:	sub    al,0x87
  40dc42:	out    dx,eax
  40dc43:	test   BYTE PTR [eax],dh
  40dc45:	das    
  40dc46:	out    dx,al
  40dc47:	sbb    al,0x43
  40dc49:	jns    0x40dc23
  40dc4b:	clc    
  40dc4c:	cmp    bl,BYTE PTR [ebx-0x7a05c72a]
  40dc52:	add    al,0x3a
  40dc54:	xor    DWORD PTR [esi],ebx
  40dc56:	jno    0x40dc8a
  40dc58:	sbb    esi,0xfffffffd
  40dc5b:	lods   eax,DWORD PTR ds:[esi]
  40dc5c:	inc    edi
  40dc5d:	jl     0x40dbf5
  40dc5f:	(bad)  
  40dc60:	cli    
  40dc61:	sub    al,ah
  40dc63:	pusha  
  40dc64:	pop    ecx
  40dc65:	inc    eax
  40dc66:	std    
  40dc67:	and    eax,0xe70ab0ee
  40dc6c:	and    ebp,DWORD PTR [edi+ebp*8+0x5096f5ca]
  40dc73:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40dc74:	adc    BYTE PTR [ebp+0xd],dl
  40dc77:	iret   
  40dc78:	push   ecx
  40dc79:	rol    BYTE PTR [edi+0x2],0xea
  40dc7d:	popa   
  40dc7e:	add    al,0x43
  40dc80:	mov    dl,0xb8
  40dc82:	pop    ss
  40dc83:	fild   DWORD PTR [ebx]
  40dc85:	ins    DWORD PTR es:[edi],dx
  40dc86:	jmp    FWORD PTR [ecx+ecx*2-0x7f]
  40dc8a:	std    
  40dc8b:	hlt    
  40dc8c:	call   0x7433:0xb6a42d2d
  40dc93:	(bad)  
  40dc94:	xlat   BYTE PTR ds:[ebx]
  40dc95:	in     eax,dx
  40dc96:	dec    edi
  40dc97:	cmp    dh,BYTE PTR [edx]
  40dc99:	je     0x40dcf4
  40dc9b:	dec    ecx
  40dc9c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40dc9d:	in     eax,dx
  40dc9e:	cmc    
  40dc9f:	ins    DWORD PTR es:[edi],dx
  40dca0:	and    ecx,ebp
  40dca2:	enter  0x12f0,0x5b
  40dca6:	lahf   
  40dca7:	mov    WORD PTR [ebx-0x62],ss
  40dcaa:	jno    0x40dd23
  40dcac:	push   esp
  40dcad:	int3   
  40dcae:	pop    eax
  40dcaf:	aas    
  40dcb0:	mov    esp,0x78caa198
  40dcb5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40dcb6:	ror    ecx,1
  40dcb8:	dec    edx
  40dcb9:	fsubr  QWORD PTR [edx+0x50]
  40dcbc:	rol    DWORD PTR [ebp-0x1e],cl
  40dcbf:	mov    eax,ds:0x6ee65872
  40dcc4:	fisub  WORD PTR [esi-0x33592a51]
  40dcca:	cmc    
  40dccb:	sahf   
  40dccc:	mov    bl,dh
  40dcce:	xor    DWORD PTR [edi+edi*8+0x22970ee2],eax
  40dcd5:	sbb    BYTE PTR [eax+0x1be11146],bh
  40dcdb:	push   0xffffff98
  40dcdd:	pop    es
  40dcde:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40dcdf:	sbb    BYTE PTR [esi-0x36],bl
  40dce2:	jmp    0x40dd44
  40dce4:	sub    al,0xe3
  40dce6:	jnp    0x40dd2a
  40dce8:	mov    bh,0xf4
  40dcea:	sub    eax,0x7f3ceb31
  40dcef:	push   cs
  40dcf0:	sbb    DWORD PTR [ebx*2+0x488c8a52],edx
  40dcf7:	(bad)  
  40dcf8:	adc    eax,0x3e11a5fd
  40dcfd:	(bad)  
  40dcfe:	adc    ebp,DWORD PTR [ecx-0x5a]
  40dd01:	push   ecx
  40dd02:	xchg   ecx,eax
  40dd03:	xchg   edi,eax
  40dd04:	xchg   esp,eax
  40dd05:	inc    esp
  40dd06:	sub    DWORD PTR [eax-0x48a488a7],esi
  40dd0c:	sbb    BYTE PTR [esi+0x2b57a0fe],bh
  40dd12:	and    cl,dl
  40dd14:	dec    ebp
  40dd15:	ds inc ecx
  40dd17:	popa   
  40dd18:	sub    BYTE PTR [esi-0x2],al
  40dd1b:	es clc 
  40dd1d:	dec    esi
  40dd1e:	loopne 0x40dccf
  40dd20:	sub    BYTE PTR [edi-0x5a],ah
  40dd23:	push   ebp
  40dd24:	pop    ecx
  40dd25:	jb     0x40dcc9
  40dd27:	leave  
  40dd28:	arpl   cx,bp
  40dd2a:	jo     0x40dd00
  40dd2c:	fimul  WORD PTR [esi-0x35]
  40dd2f:	push   cs
  40dd30:	test   eax,0x9ab37a4
  40dd35:	sbb    eax,0x816b8910
  40dd3a:	pushf  
  40dd3b:	dec    edx
  40dd3c:	xor    BYTE PTR [ebx],ch
  40dd3e:	loop   0x40dd3c
  40dd40:	pop    edi
  40dd41:	sub    WORD PTR [edx+0x68d039bb],di
  40dd48:	inc    ebp
  40dd49:	push   ds
  40dd4a:	loope  0x40dd27
  40dd4c:	rcr    dh,0xba
  40dd4f:	xor    al,0xfe
  40dd51:	loopne 0x40dd18
  40dd53:	std    
  40dd54:	lahf   
  40dd55:	in     al,dx
  40dd56:	jmp    0xb508e209
  40dd5b:	mov    esp,0xdbc361ee
  40dd60:	aas    
  40dd61:	mov    al,0xa
  40dd63:	pop    es
  40dd64:	xlat   BYTE PTR ds:[ebx]
  40dd65:	adc    al,0xea
  40dd67:	inc    esp
  40dd68:	sbb    eax,0x48aa2b80
  40dd6d:	jbe    0x40dd63
  40dd6f:	push   edi
  40dd70:	out    0x19,al
  40dd72:	sbb    DWORD PTR [ebx+0x26dbaf16],ecx
  40dd78:	jmp    0x40dd67
  40dd7a:	mov    ds:0xc2985ea8,al
  40dd7f:	in     eax,0x28
  40dd81:	ss push 0x2169f63e
  40dd87:	stc    
  40dd88:	xlat   BYTE PTR ds:[ebx]
  40dd89:	xor    dh,0xc9
  40dd8c:	call   0x4309f856
  40dd91:	cli    
  40dd92:	sub    eax,0xa5c15fc2
  40dd97:	in     eax,dx
  40dd98:	xchg   ebx,eax
  40dd99:	sub    BYTE PTR [ecx-0x57],dh
  40dd9c:	mov    bh,BYTE PTR [edi+ebx*8+0x1b21a1ea]
  40dda3:	mov    esi,0xd4801ae5
  40dda8:	lds    edi,FWORD PTR [ecx+0x285e1975]
  40ddae:	push   0xffffffa8
  40ddb0:	stc    
  40ddb1:	daa    
  40ddb2:	push   ds
  40ddb3:	test   BYTE PTR [ecx+0x7b4f5ecb],bl
  40ddb9:	les    ecx,FWORD PTR [edx-0x293d64b5]
  40ddbf:	cmc    
  40ddc0:	push   ds
  40ddc1:	mov    eax,ecx
  40ddc3:	and    ah,0x57
  40ddc6:	jo     0x40de23
  40ddc8:	push   esp
  40ddc9:	sbb    eax,ecx
  40ddcb:	mov    bh,0xbc
  40ddcd:	mov    ah,0x29
  40ddcf:	adc    al,0x4e
  40ddd1:	fucomp st(2)
  40ddd3:	cmp    ebp,ecx
  40ddd5:	cmp    bl,bl
  40ddd7:	cdq    
  40ddd8:	jno    0x40ddcf
  40ddda:	daa    
  40dddb:	(bad)  
  40dddc:	scas   eax,DWORD PTR es:[edi]
  40dddd:	xchg   edi,eax
  40ddde:	lock xchg esi,eax
  40dde0:	sbb    bh,ch
  40dde2:	and    al,0x3a
  40dde4:	inc    edi
  40dde5:	stos   DWORD PTR es:[edi],eax
  40dde6:	xchg   DWORD PTR [ebx],ebx
  40dde8:	loope  0x40ddac
  40ddea:	test   al,0x54
  40ddec:	in     eax,dx
  40dded:	adc    ebx,DWORD PTR [edi]
  40ddef:	xor    BYTE PTR [ebp-0x518a4c9b],al
  40ddf5:	and    BYTE PTR [eax-0x12],dl
  40ddf8:	mov    dh,0xea
  40ddfa:	popa   
  40ddfb:	loopne 0x40ddad
  40ddfd:	(bad)  
  40ddfe:	dec    ebp
  40ddff:	out    0x7f,eax
  40de01:	cs loope 0x40dd92
  40de04:	mov    ch,0xf2
  40de06:	xor    ebx,DWORD PTR [esi-0xe]
  40de09:	mov    ebp,0xa6de84df
  40de0e:	and    bl,BYTE PTR [edx+0x69]
  40de11:	frstor ds:0x68a293ac
  40de17:	aas    
  40de18:	mov    edi,0x8ef57355
  40de1d:	std    
  40de1e:	bound  ebp,QWORD PTR [esp+edx*4+0x1d]
  40de22:	scas   al,BYTE PTR es:[edi]
  40de23:	push   ebp
  40de24:	(bad)  
  40de25:	sub    bl,BYTE PTR [ecx]
  40de27:	xor    al,0x13
  40de29:	pop    edi
  40de2a:	pop    eax
  40de2b:	cmp    al,0x88
  40de2d:	mov    DWORD PTR [eax-0x35c5fc32],edx
  40de33:	stos   BYTE PTR es:[edi],al
  40de34:	loopne 0x40de07
  40de36:	add    BYTE PTR ds:0xb2990e88,0x80
  40de3d:	sub    eax,0xfb4cb027
  40de42:	fld    TBYTE PTR [esp+ebp*4+0x25]
  40de46:	push   ss
  40de47:	addr16 mov cl,0x47
  40de4a:	inc    edx
  40de4b:	and    al,0x4a
  40de4d:	pop    esp
  40de4e:	and    dl,BYTE PTR [ebp-0x69c215ce]
  40de54:	lds    eax,FWORD PTR ds:0x23194149
  40de5a:	cmp    DWORD PTR [ebx-0x264e24b2],ebp
  40de60:	popa   
  40de61:	retf   
  40de62:	mul    DWORD PTR [esi]
  40de64:	xor    bl,BYTE PTR [edx+0x32362315]
  40de6a:	and    al,0x81
  40de6c:	loopne 0x40de40
  40de6e:	fs or  edx,ebx
  40de71:	push   ds
  40de72:	xor    eax,0xd2fdb1c6
  40de77:	pop    ebx
  40de78:	out    dx,eax
  40de79:	mov    cl,0x4
  40de7b:	mov    DWORD PTR [esi+0x426cc8c1],ecx
  40de81:	(bad)  
  40de82:	xchg   esp,eax
  40de83:	push   eax
  40de84:	cmp    al,0xbf
  40de86:	pop    es
  40de87:	rcl    BYTE PTR [edx+0x3121d0c4],0xb
  40de8e:	pop    ebx
  40de8f:	inc    eax
  40de90:	fisttp DWORD PTR [edx+0x2ddc16c2]
  40de96:	jecxz  0x40deb5
  40de98:	add    ebp,0x81ba0c72
  40de9e:	fdivr  DWORD PTR [eax]
  40dea0:	mov    ah,0xbb
  40dea2:	repz mov dl,0x79
  40dea5:	daa    
  40dea6:	push   es
  40dea7:	lods   al,BYTE PTR ds:[esi]
  40dea8:	sbb    al,0xcf
  40deaa:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40deab:	sub    al,BYTE PTR [ecx+eiz*4]
  40deae:	xor    bh,BYTE PTR [edi+ecx*4-0x5d5337cf]
  40deb5:	add    eax,0xde2b1d94
  40deba:	pusha  
  40debb:	mul    BYTE PTR [eax+0x40]
  40debe:	mov    DWORD PTR [edi-0x16],esi
  40dec1:	in     eax,dx
  40dec2:	ss pop edx
  40dec4:	ins    BYTE PTR es:[edi],dx
  40dec5:	inc    edi
  40dec6:	pop    ebx
  40dec7:	leave  
  40dec8:	scas   al,BYTE PTR es:[edi]
  40dec9:	pop    ss
  40deca:	retf   
  40decb:	dec    ebp
  40decc:	xor    esp,ebp
  40dece:	jo     0x40df32
  40ded0:	mov    al,0xe5
  40ded2:	ds jns 0x40de87
  40ded5:	data16 cli 
  40ded7:	ja     0x40defb
  40ded9:	in     al,0x20
  40dedb:	aad    0xec
  40dedd:	sbb    BYTE PTR [edi+eiz*4-0x6d],dh
  40dee1:	pop    ecx
  40dee2:	imul   ebp,DWORD PTR [eax],0x27
  40dee5:	pop    esp
  40dee6:	pop    esi
  40dee7:	jns    0x40dee8
  40dee9:	mov    al,0x7e
  40deeb:	add    bl,dh
  40deed:	lods   eax,DWORD PTR ds:[esi]
  40deee:	mov    al,0x27
  40def0:	xchg   BYTE PTR [edx+0x4367af2a],ah
  40def6:	or     al,0x54
  40def8:	(bad)  
  40def9:	in     al,0x93
  40defb:	cmp    al,0xad
  40defd:	inc    eax
  40defe:	xchg   dl,al
  40df00:	sbb    BYTE PTR [esi+ebx*4],ah
  40df03:	or     dh,BYTE PTR [ebx]
  40df05:	inc    ebx
  40df06:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40df07:	add    esi,0xa8cbdcd4
  40df0d:	ror    BYTE PTR [ecx+0x46],cl
  40df10:	mov    eax,0x6110e21
  40df15:	mov    edi,0xc019c22c
  40df1a:	mov    dh,0x83
  40df1c:	push   ds
  40df1d:	arpl   WORD PTR [esi-0x2f],di
  40df20:	cwde   
  40df21:	fcomp  DWORD PTR [ecx+0x4cd3ce43]
  40df27:	test   DWORD PTR [esi+0x69cc7771],edx
  40df2d:	or     BYTE PTR [edx+0x75951de3],0x6e
  40df34:	int    0x97
  40df36:	push   edx
  40df37:	add    esp,DWORD PTR [edi-0x308043b8]
  40df3d:	call   0xdf21:0x1204d0e9
  40df44:	mov    edi,0x8e837219
  40df49:	lds    esp,FWORD PTR [eax+edx*1]
  40df4c:	mov    bl,0x3e
  40df4e:	jp     0x40def7
  40df50:	push   eax
  40df51:	pop    esi
  40df52:	daa    
  40df53:	push   esi
  40df54:	pushf  
  40df55:	mov    ebx,0x85592540
  40df5a:	mov    ds:0x1b622106,al
  40df5f:	push   edi
  40df60:	push   ss
  40df61:	shl    BYTE PTR [esi],1
  40df63:	add    bh,BYTE PTR [edx+0x5]
  40df66:	adc    eax,DWORD PTR ds:0x2410c76f
  40df6c:	lods   al,BYTE PTR ds:[esi]
  40df6d:	ja     0x40dfeb
  40df6f:	enter  0xe12c,0xa
  40df73:	and    eax,0x54f10291
  40df78:	ja     0x40df02
  40df7a:	xor    cl,BYTE PTR [edi+0x233cec78]
  40df80:	xchg   dh,cl
  40df82:	(bad)  
  40df83:	fcmovu st,st(6)
  40df85:	enter  0xf0b2,0x22
  40df89:	fdiv   DWORD PTR [ebx]
  40df8b:	test   eax,0x47202bc7
  40df90:	cmc    
  40df91:	in     eax,0x7c
  40df93:	add    dl,BYTE PTR ds:0x8068db73
  40df99:	push   ecx
  40df9a:	gs pop esi
  40df9c:	jbe    0x40e00d
  40df9e:	pop    es
  40df9f:	jle    0x40df8b
  40dfa1:	mov    bl,0x47
  40dfa3:	mov    bh,0x5b
  40dfa5:	bound  esp,QWORD PTR [eax]
  40dfa7:	or     dx,WORD PTR [ebx-0x7]
  40dfab:	inc    ebp
  40dfac:	pop    eax
  40dfad:	out    dx,al
  40dfae:	dec    ecx
  40dfaf:	scas   eax,DWORD PTR es:[edi]
  40dfb0:	dec    ecx
  40dfb1:	dec    esp
  40dfb2:	and    eax,0xffffffd0
  40dfb5:	(bad)  
  40dfb6:	aad    0x27
  40dfb8:	jmp    edx
  40dfba:	cwde   
  40dfbb:	repz xor bh,BYTE PTR [ebp+0x23]
  40dfbf:	sbb    al,0x8a
  40dfc1:	lods   al,BYTE PTR ds:[esi]
  40dfc2:	mov    ah,0x2f
  40dfc4:	in     eax,dx
  40dfc5:	push   cs
  40dfc6:	(bad)  
  40dfc7:	daa    
  40dfc8:	nop
  40dfc9:	(bad)  
  40dfca:	or     DWORD PTR [ebx-0x6855f15],ebx
  40dfd0:	mov    ds:0x46179d9,eax
  40dfd5:	fidivr WORD PTR [edx]
  40dfd7:	or     al,0x45
  40dfd9:	addr16 test ah,dl
  40dfdc:	sbb    eax,0x39260ed1
  40dfe1:	dec    ecx
  40dfe2:	test   eax,0x84bc57d7
  40dfe7:	fs dec edi
  40dfe9:	jo     0x40e046
  40dfeb:	jl     0x40e044
  40dfed:	dec    edi
  40dfee:	xchg   esi,eax
  40dfef:	rcl    DWORD PTR [edi+edx*4],0xdb
  40dff3:	fist   DWORD PTR [edi]
  40dff5:	sbb    DWORD PTR [ebx-0x6d],0xb6a0491b
  40dffc:	aas    
  40dffd:	and    esp,eax
  40dfff:	push   eax
  40e000:	mov    al,0x21
  40e002:	mov    ds,WORD PTR [edi-0x857fdbc]
  40e008:	sahf   
  40e009:	test   BYTE PTR [ebx-0x7be8d8d3],al
  40e00f:	jmp    0xf54976a3
  40e014:	or     eax,0x9f9c2b0b
  40e019:	push   ds
  40e01a:	push   eax
  40e01b:	push   edx
  40e01c:	addr16 push eax
  40e01e:	into   
  40e01f:	sub    al,0x70
  40e021:	mov    edx,0x77e3f438
  40e026:	into   
  40e027:	loope  0x40e06d
  40e029:	aas    
  40e02a:	adc    dh,BYTE PTR [ecx-0x53557322]
  40e030:	test   DWORD PTR [ecx+0x51],esi
  40e033:	sub    eax,0x7ba2481d
  40e038:	mov    ds:0xeb07a035,eax
  40e03d:	pmullw mm0,mm5
  40e040:	dec    eax
  40e041:	ror    edi,1
  40e043:	jne    0x40e083
  40e045:	inc    ebp
  40e046:	inc    eax
  40e047:	stc    
  40e048:	dec    esi
  40e049:	jae    0x40dfec
  40e04b:	pop    edx
  40e04c:	sbb    bh,dh
  40e04e:	xor    BYTE PTR [eax+0x24fd883d],0x10
  40e055:	sbb    al,0x32
  40e057:	loop   0x40e09e
  40e059:	add    BYTE PTR [esp+0x1b4facde],dl
  40e060:	and    BYTE PTR [ebx-0x15672f67],bh
  40e066:	test   al,0xb4
  40e068:	adc    BYTE PTR [esi+0x64b05f4d],0xed
  40e06f:	or     eax,0xc41931db
  40e074:	loop   0x40e083
  40e076:	pop    ebp
  40e077:	dec    ebp
  40e078:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e079:	rcl    BYTE PTR [esi+0xa],cl
  40e07c:	sub    DWORD PTR [eax],edx
  40e07e:	mov    eax,ds:0xc515f7b5
  40e083:	retf   0x2605
  40e086:	imul   edx,DWORD PTR [edi],0xe86a231a
  40e08c:	jecxz  0x40e04e
  40e08e:	mov    esp,0x735f4a20
  40e093:	mul    BYTE PTR [ecx+0x6a449f01]
  40e099:	das    
  40e09a:	xor    al,0xb6
  40e09c:	push   es
  40e09d:	cld    
  40e09e:	fld    st(3)
  40e0a0:	xchg   ecx,eax
  40e0a1:	and    DWORD PTR [edx+0x74],esp
  40e0a4:	(bad)  
  40e0a5:	in     al,0xdd
  40e0a7:	std    
  40e0a8:	sub    al,0x1e
  40e0aa:	or     eax,ebx
  40e0ac:	xor    BYTE PTR [ebp-0xb],0x1a
  40e0b0:	out    0xf1,al
  40e0b2:	cmp    DWORD PTR [eax+0x5b6f58b7],esp
  40e0b8:	mov    bh,0x3d
  40e0ba:	pop    eax
  40e0bb:	fbstp  TBYTE PTR [edx+ebx*2]
  40e0be:	mov    esi,DWORD PTR [ecx]
  40e0c0:	les    ecx,FWORD PTR [edx]
  40e0c2:	enter  0x7940,0xfc
  40e0c6:	push   0x6d95866e
  40e0cb:	inc    edi
  40e0cc:	xor    DWORD PTR [esi],eax
  40e0ce:	imul   ecx,eax,0x2cbb19b9
  40e0d4:	nop
  40e0d5:	cmc    
  40e0d6:	sub    ah,BYTE PTR [ecx-0x6dd7e798]
  40e0dc:	or     al,0x8e
  40e0de:	mov    ds:0x2bd20b72,al
  40e0e3:	popa   
  40e0e4:	jg     0x40e14f
  40e0e6:	mov    dh,0xce
  40e0e8:	das    
  40e0e9:	popf   
  40e0ea:	xor    eax,0x71a93a55
  40e0ef:	js     0x40e100
  40e0f1:	mov    ebp,0x341afd02
  40e0f6:	inc    ebp
  40e0f7:	pop    ss
  40e0f8:	pop    edx
  40e0f9:	loope  0x40e156
  40e0fb:	xchg   edi,eax
  40e0fc:	fdiv   DWORD PTR [ebx+0xaffbc31]
  40e102:	or     ebx,DWORD PTR [edi+0x31]
  40e105:	dec    esi
  40e106:	out    0xfd,al
  40e108:	sub    eax,0x6f87d3bf
  40e10d:	aad    0x92
  40e10f:	push   edi
  40e110:	icebp  
  40e111:	fs cmp al,0xaf
  40e114:	xchg   BYTE PTR [edi],ah
  40e116:	hlt    
  40e117:	mov    esi,0x28f96653
  40e11c:	adc    ebx,DWORD PTR [edi+0x26]
  40e11f:	icebp  
  40e120:	xchg   ebp,ebp
  40e122:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e123:	ficom  WORD PTR [eax]
  40e125:	mov    cl,0xd8
  40e127:	pusha  
  40e128:	pushf  
  40e129:	out    dx,eax
  40e12a:	sbb    eax,esi
  40e12c:	push   esp
  40e12d:	dec    cl
  40e12f:	enter  0x4970,0x2d
  40e133:	xchg   esp,eax
  40e134:	call   0xbe45:0x9f1f7737
  40e13b:	mov    BYTE PTR [edx+0x60],bh
  40e13e:	xchg   ecx,eax
  40e13f:	add    al,BYTE PTR [ebp+0x7520ab5b]
  40e145:	leave  
  40e146:	cmp    al,0x5a
  40e148:	xchg   esi,eax
  40e149:	and    al,0xd0
  40e14b:	shr    BYTE PTR [edi-0x1f9e2096],1
  40e151:	cwde   
  40e152:	xor    ch,BYTE PTR [ebx-0x6]
  40e155:	pop    ds
  40e156:	sbb    DWORD PTR [esp+eiz*8+0x65],eax
  40e15a:	adc    eax,0xe4275ced
  40e15f:	test   al,0x83
  40e161:	sub    dh,dl
  40e163:	jl     0x40e153
  40e165:	test   DWORD PTR [esi],edx
  40e167:	add    eax,0xb2ff15c0
  40e16c:	jnp    0x40e1e3
  40e16e:	sub    eax,DWORD PTR [ebx-0x6a]
  40e171:	pop    esi
  40e172:	lock ret 
  40e174:	mov    ds:0x15adc3ac,al
  40e179:	ret    0x2530
  40e17c:	and    ecx,DWORD PTR [esi+0x2f1b3d22]
  40e182:	adc    al,0xe7
  40e184:	adc    eax,0x2601f69f
  40e189:	call   DWORD PTR [ebp-0x5a]
  40e18c:	cdq    
  40e18d:	xor    DWORD PTR [edi-0x80],edi
  40e190:	into   
  40e191:	rcl    DWORD PTR [eax],0x10
  40e194:	mov    ah,BYTE PTR [ecx]
  40e196:	mov    dl,0x63
  40e198:	jb     0x40e1f0
  40e19a:	leave  
  40e19b:	mov    cl,0x5a
  40e19d:	in     al,0xd7
  40e19f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e1a0:	daa    
  40e1a1:	shr    dl,1
  40e1a3:	mov    edx,0xb76a2f09
  40e1a8:	ja     0x40e214
  40e1aa:	mov    bl,0x1a
  40e1ac:	xchg   eax,ebx
  40e1ae:	jge    0x40e14a
  40e1b0:	cld    
  40e1b1:	xchg   BYTE PTR [ebx+0x54],cl
  40e1b4:	pop    ds
  40e1b5:	jmp    0x6c2839c4
  40e1ba:	or     ebx,DWORD PTR [eax]
  40e1bc:	mov    ecx,0x4fbfa9e5
  40e1c1:	daa    
  40e1c2:	(bad)  
  40e1c3:	jle    0x40e14a
  40e1c5:	outs   dx,BYTE PTR ds:[esi]
  40e1c6:	mov    ch,0x6
  40e1c8:	xchg   edi,eax
  40e1c9:	lahf   
  40e1ca:	sahf   
  40e1cb:	sub    al,0x3e
  40e1cd:	adc    eax,0x9dfe3182
  40e1d2:	jno    0x40e231
  40e1d4:	xchg   ebp,eax
  40e1d5:	ss push ds
  40e1d7:	in     eax,0xa0
  40e1d9:	cld    
  40e1da:	mov    edx,0x8163ca8a
  40e1df:	xor    eax,0x4eba9d3b
  40e1e4:	inc    ebp
  40e1e5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e1e6:	loopne 0x40e217
  40e1e8:	das    
  40e1e9:	adc    DWORD PTR [esi],0x134f07cd
  40e1ef:	(bad)  [ebp+esi*8-0x45]
  40e1f3:	out    dx,eax
  40e1f4:	call   0x4d67cc43
  40e1f9:	in     al,dx
  40e1fa:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e1fb:	push   es
  40e1fc:	adc    edx,ecx
  40e1fe:	mov    esp,0x652e3705
  40e203:	fist   DWORD PTR [esi-0x3240e848]
  40e209:	int3   
  40e20a:	cmp    ch,0xef
  40e20d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e20e:	xchg   edi,eax
  40e20f:	xor    BYTE PTR [ecx+0x1],0x88
  40e213:	cmp    al,0xbd
  40e215:	push   es
  40e216:	daa    
  40e217:	aam    0xfc
  40e219:	pop    ebx
  40e21a:	pop    esi
  40e21b:	sbb    DWORD PTR [ecx],esi
  40e21d:	xor    ch,bl
  40e21f:	aaa    
  40e220:	mov    bh,0x4c
  40e222:	push   esp
  40e223:	jge    0x40e279
  40e225:	mov    edi,edx
  40e227:	pop    ebx
  40e228:	nop
  40e229:	push   0xf61b2f7e
  40e22e:	int3   
  40e22f:	jmp    0xb41c:0x251da73e
  40e236:	or     BYTE PTR [eax],cl
  40e238:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e239:	in     eax,0x35
  40e23b:	mov    ecx,0xfb44b164
  40e240:	into   
  40e241:	inc    eax
  40e242:	mov    ebx,0x960583b6
  40e247:	and    al,BYTE PTR [ebx]
  40e249:	sub    BYTE PTR [ebp-0x31],dl
  40e24c:	xor    DWORD PTR [edi],0x5ecc144
  40e252:	call   0x37a070df
  40e257:	mov    DWORD PTR [edx-0x21],ebp
  40e25a:	fs (bad) 
  40e25c:	jnp    0x40e28f
  40e25e:	mov    ebp,0xa60224ed
  40e263:	loop   0x40e268
  40e265:	int3   
  40e266:	mov    BYTE PTR [ebx],al
  40e268:	push   cs
  40e269:	pop    es
  40e26a:	sbb    al,0xe3
  40e26c:	dec    edi
  40e26d:	icebp  
  40e26e:	(bad)  
  40e26f:	jno    0x40e213
  40e271:	out    dx,al
  40e272:	sbb    ebp,eax
  40e274:	out    0xd9,eax
  40e276:	pop    ebx
  40e277:	inc    edi
  40e278:	dec    eax
  40e279:	ja     0x40e2c1
  40e27b:	sbb    al,0x6f
  40e27d:	gs jle 0x40e231
  40e280:	or     dl,0xa4
  40e283:	sbb    BYTE PTR [esi],0x1a
  40e286:	and    dh,BYTE PTR [ecx+edx*2]
  40e289:	and    ah,bh
  40e28b:	jo     0x40e2bd
  40e28d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e28e:	adc    eax,0x693ad553
  40e293:	sbb    eax,0x3569dcd4
  40e298:	scas   eax,DWORD PTR es:[edi]
  40e299:	daa    
  40e29a:	aam    0x27
  40e29c:	mov    edx,0x458504d8
  40e2a1:	int    0xfc
  40e2a3:	cmp    al,0xb9
  40e2a6:	cmc    
  40e2a7:	push   esi
  40e2a8:	xor    bl,BYTE PTR [esi+0x72]
  40e2ab:	sbb    esi,DWORD PTR ss:[ebp-0x210013]
  40e2b2:	jle    0x40e305
  40e2b4:	dec    esi
  40e2b5:	pop    esp
  40e2b6:	daa    
  40e2b7:	push   cs
  40e2b8:	cmp    al,0xd6
  40e2ba:	lahf   
  40e2bb:	mov    WORD PTR [edx+0x712e8bc3],cs
  40e2c1:	and    DWORD PTR [ebp+0x62],esi
  40e2c4:	test   al,0xba
  40e2c6:	xchg   edi,eax
  40e2c7:	sbb    esi,DWORD PTR [esi]
  40e2c9:	xor    al,0x5a
  40e2cb:	xor    DWORD PTR [ebx],eax
  40e2cd:	cwde   
  40e2ce:	ss cwde 
  40e2d0:	test   al,0x31
  40e2d2:	shl    BYTE PTR [esi-0x3d],0xbc
  40e2d6:	sub    DWORD PTR cs:[eax+0x224f28a8],esi
  40e2dd:	sub    al,0xe
  40e2df:	fimul  WORD PTR [esi-0x51]
  40e2e2:	mov    bh,0xff
  40e2e4:	dec    eax
  40e2e5:	mov    al,0xd2
  40e2e7:	cmp    BYTE PTR [edx+ebx*8+0x6d],bl
  40e2eb:	aaa    
  40e2ec:	push   edx
  40e2ed:	pop    esi
  40e2ee:	(bad)  
  40e2ef:	in     eax,dx
  40e2f0:	xor    esp,DWORD PTR [edi+0x4b50662e]
  40e2f6:	mov    ah,0x31
  40e2f8:	mov    al,ds:0x4f71ddac
  40e2fd:	in     al,0x99
  40e2ff:	call   0x6d719606
  40e304:	in     eax,0xf6
  40e306:	dec    esp
  40e307:	daa    
  40e308:	jb     0x40e31d
  40e30a:	push   eax
  40e30b:	popf   
  40e30c:	hlt    
  40e30d:	mov    BYTE PTR [ebx+0x6821e3de],al
  40e313:	pop    esp
  40e314:	cli    
  40e315:	mov    esi,0x8f33269e
  40e31a:	mov    cl,BYTE PTR [edi]
  40e31c:	jle    0x40e30c
  40e31e:	pop    ss
  40e31f:	jmp    0x57b6c1a2
  40e324:	and    eax,0x366055e6
  40e329:	xlat   BYTE PTR ds:[ebx]
  40e32a:	inc    ecx
  40e32b:	out    dx,eax
  40e32c:	adc    dh,ah
  40e32e:	sbb    ecx,DWORD PTR [eax+ebp*1]
  40e331:	add    eax,0x745cdef3
  40e336:	in     al,0x90
  40e338:	and    BYTE PTR [esi+0x54],ch
  40e33b:	lods   al,BYTE PTR ds:[esi]
  40e33c:	es adc eax,0x181f16c6
  40e342:	pop    edx
  40e343:	pusha  
  40e344:	arpl   WORD PTR ds:0xef68c0ce,si
  40e34a:	dec    edi
  40e34b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e34c:	cmp    DWORD PTR [esi-0x6e35f070],edx
  40e352:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e353:	pop    es
  40e354:	sahf   
  40e355:	cdq    
  40e356:	call   0xcffb:0xe3b140d1
  40e35d:	mov    ah,0x1b
  40e35f:	inc    esi
  40e360:	cmp    dh,BYTE PTR [eax+eiz*2]
  40e363:	mov    ebp,0xc0529f3b
  40e368:	sub    al,cl
  40e36a:	ja     0x40e3ea
  40e36c:	push   esp
  40e36d:	adc    edi,eax
  40e36f:	scas   al,BYTE PTR es:[edi]
  40e370:	mov    edx,0xd81f309f
  40e375:	andnps xmm2,XMMWORD PTR [esi+0x46f7bfb5]
  40e37c:	adc    al,0x83
  40e37e:	sbb    eax,0xfbf3a689
  40e383:	mov    bh,0x57
  40e385:	inc    ebx
  40e386:	mov    bl,0xaa
  40e388:	pusha  
  40e389:	add    cl,BYTE PTR [ecx-0x7]
  40e38c:	fild   WORD PTR [ecx+0x43]
  40e38f:	cmp    DWORD PTR [ecx+0x39d06f30],ebp
  40e395:	cmp    DWORD PTR [eax],edx
  40e397:	xchg   ebx,eax
  40e398:	mov    ds:0xe900f505,al
  40e39d:	cli    
  40e39e:	data16 cmp ch,BYTE PTR [eax]
  40e3a1:	sahf   
  40e3a2:	in     al,0x2c
  40e3a4:	pop    eax
  40e3a5:	adc    eax,0x9ed5e305
  40e3aa:	rcr    BYTE PTR [ecx+0x2],0x6d
  40e3ae:	pop    edi
  40e3af:	xor    eax,0xefd6064c
  40e3b4:	push   0xcaf6333a
  40e3b9:	push   esp
  40e3ba:	mov    dh,0x18
  40e3bc:	retf   
  40e3bd:	test   bl,cl
  40e3bf:	and    DWORD PTR [ebx-0x232ec1df],esp
  40e3c5:	(bad)  [ebx-0x16]
  40e3c8:	mov    ds:0x43cc996e,eax
  40e3cd:	pop    ebp
  40e3ce:	in     eax,dx
  40e3cf:	(bad)  [ebp-0x4ff6b84d]
  40e3d5:	fimul  WORD PTR [eax-0x19e0f050]
  40e3db:	mov    edi,0xc5df1886
  40e3e0:	jb     0x40e38c
  40e3e2:	mov    al,ds:0x3e0f7128
  40e3e7:	inc    ebx
  40e3e8:	js     0x40e468
  40e3ea:	bound  edx,QWORD PTR [edi]
  40e3ec:	jne    0x40e41c
  40e3ee:	jo     0x40e3d9
  40e3f0:	bound  ebx,QWORD PTR [ecx-0x74ba2b45]
  40e3f6:	rcl    DWORD PTR [eax+edx*4],1
  40e3f9:	add    al,0x3f
  40e3fb:	sub    BYTE PTR [ecx+0x2c5d8a51],al
  40e401:	jmp    0xfc527039
  40e406:	sbb    al,0x27
  40e408:	je     0x40e38b
  40e40a:	test   al,0xaf
  40e40c:	(bad)  
  40e40d:	ss dec edi
  40e40f:	xor    esp,edx
  40e411:	dec    DWORD PTR [edi]
  40e413:	imul   esi,DWORD PTR [ebp-0x439446c],0xffffffe4
  40e41a:	push   eax
  40e41b:	test   BYTE PTR [edx],dl
  40e41d:	rcr    BYTE PTR [esi+0x7a137f11],cl
  40e423:	dec    edi
  40e424:	inc    edx
  40e425:	xchg   ebx,eax
  40e426:	push   ebp
  40e427:	icebp  
  40e428:	fs dec edi
  40e42a:	add    edx,DWORD PTR [edi-0x7e]
  40e42d:	pop    es
  40e42e:	arpl   WORD PTR [ebx],dx
  40e430:	loope  0x40e3ff
  40e432:	cs daa 
  40e434:	rdpmc  
  40e436:	aam    0xfa
  40e438:	repz addr16 in eax,0xdc
  40e43c:	rcr    BYTE PTR [eax],cl
  40e43e:	out    dx,al
  40e43f:	mov    ch,0x8d
  40e441:	cmc    
  40e442:	lods   eax,DWORD PTR ds:[esi]
  40e443:	nop
  40e444:	into   
  40e445:	iret   
  40e446:	sbb    ah,dh
  40e448:	push   ecx
  40e449:	xor    al,0xe8
  40e44b:	out    0x38,eax
  40e44d:	push   0x19
  40e44f:	(bad)  
  40e450:	(bad)  
  40e451:	(bad)  
  40e453:	xor    eax,0x5c222efa
  40e458:	ror    BYTE PTR [ebx],cl
  40e45a:	cmp    DWORD PTR [ebx-0x1ba6863d],eax
  40e460:	mov    eax,0xc8d3b4e8
  40e465:	fadd   QWORD PTR [edx-0x7]
  40e468:	(bad)  
  40e469:	sar    BYTE PTR [ebx-0x46],cl
  40e46c:	mov    ebx,?
  40e46e:	sbb    BYTE PTR [ecx+0x76a20530],0x1f
  40e475:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e476:	cdq    
  40e477:	push   ds
  40e478:	outs   dx,DWORD PTR ds:[esi]
  40e479:	mov    bl,0xbb
  40e47b:	jae    0x40e4f2
  40e47d:	pusha  
  40e47e:	aaa    
  40e47f:	or     cl,cl
  40e481:	push   ds
  40e482:	(bad)  
  40e483:	xor    ah,BYTE PTR [ebx]
  40e485:	mov    BYTE PTR [edx+0x18],bh
  40e488:	je     0x40e40d
  40e48a:	xchg   edx,eax
  40e48b:	call   0x5485:0x7561b395
  40e492:	bound  edi,QWORD PTR [edx]
  40e494:	add    DWORD PTR [edi-0x79],edi
  40e497:	stos   BYTE PTR es:[edi],al
  40e498:	push   0xca6220e5
  40e49d:	cmp    eax,0x5409a8b9
  40e4a2:	inc    edi
  40e4a3:	les    edx,FWORD PTR [ebp-0x4350fb]
  40e4a9:	stos   DWORD PTR es:[edi],eax
  40e4aa:	cmp    eax,0x70c417cc
  40e4af:	(bad)  
  40e4b0:	fisubr DWORD PTR [esi+0x68]
  40e4b3:	ret    
  40e4b4:	je     0x40e491
  40e4b6:	mov    DWORD PTR [ecx+0xd],eax
  40e4b9:	leave  
  40e4ba:	retf   
  40e4bb:	loope  0x40e4a6
  40e4bd:	jmp    0xfd50bdce
  40e4c2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e4c3:	int3   
  40e4c4:	cmp    al,0x37
  40e4c6:	(bad)  
  40e4c7:	push   edi
  40e4c8:	adc    al,0x8f
  40e4ca:	add    BYTE PTR ds:0x955f6b76,ah
  40e4d0:	pop    ecx
  40e4d1:	xchg   ecx,eax
  40e4d2:	add    ebp,DWORD PTR [ebx]
  40e4d4:	sbb    DWORD PTR [edx+0xf26e98f],0xffffff96
  40e4db:	fstp   QWORD PTR [ebx-0x42fcfca1]
  40e4e1:	dec    eax
  40e4e2:	adc    dl,cl
  40e4e4:	mov    esp,0x889384a5
  40e4e9:	sub    dl,BYTE PTR [edx+0x13663fc0]
  40e4ef:	mov    cl,0xcb
  40e4f1:	push   esp
  40e4f2:	adc    DWORD PTR [ebp+0x6b],esp
  40e4f5:	dec    edx
  40e4f6:	vrcpss xmm6,xmm2,DWORD PTR [ecx-0x51afc6e8]
  40e4fe:	ror    DWORD PTR [ecx],cl
  40e500:	out    dx,al
  40e501:	jne    0x40e531
  40e503:	sbb    bh,ch
  40e505:	dec    edi
  40e506:	dec    esp
  40e507:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e508:	xor    DWORD PTR [esi+0x39],edx
  40e50b:	mov    bl,0x45
  40e50d:	cmp    eax,0x4c4df334
  40e512:	sub    ch,ch
  40e514:	add    bh,BYTE PTR [eax]
  40e516:	mov    ds:0x2d827979,al
  40e51b:	jnp    0x40e538
  40e51d:	or     ebp,DWORD PTR [edi]
  40e51f:	call   0xb409:0xcdbbc2cc
  40e526:	jl     0x40e4ca
  40e528:	push   eax
  40e529:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e52a:	aaa    
  40e52b:	fisubr DWORD PTR [edi+0x6d530827]
  40e531:	stos   BYTE PTR es:[edi],al
  40e532:	jb     0x40e58d
  40e534:	imul   edi,esi,0x7c27407f
  40e53a:	mov    ds:0x8d9d847,al
  40e53f:	and    esi,DWORD PTR [ebp-0x7d]
  40e542:	stc    
  40e543:	fisttp WORD PTR [edi+edx*8+0x59]
  40e547:	jle    0x40e599
  40e549:	xor    eax,0x4347c9da
  40e54e:	hlt    
  40e54f:	rcl    BYTE PTR [ebx+0x1638806f],0xb2
  40e556:	icebp  
  40e557:	sbb    bh,dl
  40e559:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e55a:	dec    ebx
  40e55b:	adc    DWORD PTR [edi],esp
  40e55d:	cdq    
  40e55e:	leave  
  40e55f:	or     BYTE PTR [ecx],dl
  40e561:	call   DWORD PTR [ecx+0x7d782fe5]
  40e567:	ror    DWORD PTR [ecx],1
  40e569:	fist   WORD PTR [esi+0x3e11efe7]
  40e56f:	mov    ebp,0xeb008d59
  40e574:	cdq    
  40e575:	mov    ah,0x4f
  40e577:	popa   
  40e578:	lahf   
  40e579:	ds xchg ebx,eax
  40e57b:	sbb    al,0xce
  40e57d:	jmp    0x1601:0x99cfd9ee
  40e584:	sub    DWORD PTR [esi-0x462f6680],ebx
  40e58a:	pop    es
  40e58b:	cmp    al,0x41
  40e58d:	dec    esp
  40e58e:	sbb    DWORD PTR [edx],ebx
  40e590:	mov    esp,edi
  40e592:	or     ah,0x3a
  40e595:	inc    edi
  40e596:	add    eax,0xafcd264f
  40e59b:	pop    edx
  40e59c:	inc    esi
  40e59d:	xchg   BYTE PTR [eax],dl
  40e59f:	pushf  
  40e5a0:	xor    al,0xd4
  40e5a2:	adc    DWORD PTR [edx+ecx*8-0x55],ebx
  40e5a6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e5a7:	das    
  40e5a8:	push   edi
  40e5a9:	dec    esp
  40e5aa:	pop    ebp
  40e5ab:	test   al,0x63
  40e5ad:	ret    0x5f
  40e5b0:	int    0x40
  40e5b2:	lods   eax,DWORD PTR ds:[esi]
  40e5b3:	cmp    eax,0xe95e4600
  40e5b8:	leave  
  40e5b9:	mov    dl,0xa0
  40e5bb:	sub    eax,0x6253ecb4
  40e5c0:	sub    cl,BYTE PTR [edx+esi*8-0x79db4768]
  40e5c7:	sbb    BYTE PTR [ebp-0x69a640aa],0xbc
  40e5ce:	fild   WORD PTR [ebx+edi*8+0xc628fde]
  40e5d5:	retf   0xca8c
  40e5d8:	rcr    DWORD PTR [ecx+0x2f],1
  40e5db:	inc    esp
  40e5dc:	xlat   BYTE PTR ds:[ebx]
  40e5dd:	sbb    esp,ecx
  40e5df:	jnp    0x40e564
  40e5e1:	dec    ecx
  40e5e2:	rol    DWORD PTR [ecx-0x6b],cl
  40e5e5:	stos   DWORD PTR es:[edi],eax
  40e5e6:	mov    dh,0x3a
  40e5e8:	hlt    
  40e5e9:	ret    0xc44f
  40e5ec:	xchg   ecx,eax
  40e5ed:	das    
  40e5ee:	cmp    al,0x4b
  40e5f0:	pop    esp
  40e5f1:	test   bl,bl
  40e5f3:	mov    cl,0x7e
  40e5f5:	rol    DWORD PTR [ebx-0x65],0xa3
  40e5f9:	sub    ebp,DWORD PTR [ebp+0x297a9546]
  40e5ff:	xchg   ecx,eax
  40e600:	push   es
  40e601:	fmul   QWORD PTR ds:0x809966f8
  40e607:	mov    al,ds:0x6ea48d72
  40e60c:	popf   
  40e60d:	cmp    DWORD PTR [edi+0x3],ebx
  40e610:	je     0x40e686
  40e612:	retf   
  40e613:	shl    BYTE PTR [ebx-0x31f56f28],0x3e
  40e61a:	shl    DWORD PTR [edx+0x1d79c52c],0xc7
  40e621:	xchg   edx,eax
  40e622:	mov    eax,0x51c6b294
  40e627:	outs   dx,BYTE PTR ds:[esi]
  40e628:	jp     0x40e687
  40e62a:	dec    edx
  40e62b:	jmp    0x40e696
  40e62d:	fsubp  st(4),st
  40e62f:	ret    
  40e630:	cdq    
  40e631:	xor    al,0x3e
  40e633:	push   esp
  40e634:	xchg   edx,eax
  40e635:	dec    ecx
  40e636:	mov    gs,WORD PTR [ebx+0x408de70e]
  40e63c:	xchg   ebp,eax
  40e63d:	jmp    0x70d3:0x6557320
  40e644:	or     al,0x64
  40e646:	sub    dl,bh
  40e648:	out    0x40,al
  40e64a:	loop   0x40e684
  40e64c:	dec    edx
  40e64d:	retf   
  40e64e:	fcmovne st,st(0)
  40e650:	dec    esp
  40e651:	mov    ds:0xd15e2de0,al
  40e656:	jge    0x40e6a5
  40e658:	(bad)  
  40e659:	loop   0x40e681
  40e65b:	mov    al,0xcd
  40e65d:	pusha  
  40e65e:	mov    DWORD PTR [ebx+0x700e441],ebx
  40e664:	cli    
  40e665:	popa   
  40e666:	loop   0x40e65b
  40e668:	add    al,dl
  40e66a:	jge    0x40e66c
  40e66c:	adc    edx,DWORD PTR [edi-0x7]
  40e66f:	xor    al,0x99
  40e671:	push   edx
  40e672:	in     eax,0x9a
  40e674:	repz cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e676:	inc    ebp
  40e677:	mov    ecx,0xf8806635
  40e67c:	fsubrp st(7),st
  40e67e:	adc    eax,0x1f48d17b
  40e683:	pop    ds
  40e684:	mov    ebx,0x13d5cd80
  40e689:	add    eax,0xef072d98
  40e68e:	xchg   BYTE PTR [edx+eax*4+0x5b],bl
  40e692:	sbb    esp,DWORD PTR [edi]
  40e694:	xor    ah,BYTE PTR [eax]
  40e696:	lahf   
  40e697:	fisttp DWORD PTR [eax+0x144bc7ff]
  40e69d:	and    eax,0xa6997493
  40e6a2:	pop    edx
  40e6a3:	rol    dl,cl
  40e6a5:	fild   DWORD PTR [ebx+esi*2]
  40e6a8:	pop    ebp
  40e6a9:	ror    DWORD PTR [edx],cl
  40e6ab:	ret    0x2a90
  40e6ae:	mov    dl,0x75
  40e6b0:	ja     0x40e68d
  40e6b2:	and    ebp,DWORD PTR [ecx]
  40e6b4:	cmc    
  40e6b5:	mov    ebx,DWORD PTR [esi+0x47]
  40e6b8:	adc    eax,0xc4af7810
  40e6bd:	retf   
  40e6be:	jnp    0x40e732
  40e6c0:	into   
  40e6c1:	iret   
  40e6c2:	loope  0x40e6b7
  40e6c4:	adc    BYTE PTR [eax+0x6d],0x84
  40e6c8:	xor    al,0x54
  40e6ca:	outs   dx,DWORD PTR ds:[esi]
  40e6cb:	aad    0x36
  40e6cd:	mov    ebx,0xa2a46567
  40e6d2:	push   eax
  40e6d3:	sbb    bh,BYTE PTR [ebx]
  40e6d5:	push   ebp
  40e6d6:	add    DWORD PTR [edi-0xda50f4],0x1c1eb890
  40e6e0:	icebp  
  40e6e1:	ret    0xdc2c
  40e6e4:	ficom  WORD PTR [edx+0x15]
  40e6e7:	or     edi,DWORD PTR [edx]
  40e6e9:	repz shl BYTE PTR [ebx-0x5],cl
  40e6ed:	adc    ebx,DWORD PTR [ebx+0x55]
  40e6f0:	test   ah,dh
  40e6f2:	adc    DWORD PTR [edi],ebp
  40e6f4:	inc    eax
  40e6f5:	arpl   WORD PTR [ebx+0x2a8e157],dx
  40e6fb:	mov    al,BYTE PTR ds:[ebx-0x1c7e4bb7]
  40e702:	pushf  
  40e703:	sbb    BYTE PTR [eax+edx*4-0x3fd128d6],dl
  40e70a:	mov    ecx,0x5f146f36
  40e70f:	mov    al,ds:0xb8f3ecd2
  40e714:	adc    eax,0xccb136a4
  40e719:	mov    ebp,0xd4bbba6e
  40e71e:	sub    eax,0x878245f2
  40e723:	fistp  DWORD PTR [eax]
  40e725:	pop    ss
  40e726:	push   cs
  40e727:	and    edi,DWORD PTR [edx+0x4f]
  40e72a:	pop    ds
  40e72b:	ins    BYTE PTR es:[edi],dx
  40e72c:	push   0x6a
  40e72e:	retf   0x896
  40e731:	loope  0x40e6c6
  40e733:	les    ebx,FWORD PTR [esi+0x1fbd9b7c]
  40e739:	push   ss
  40e73a:	mov    ch,0xa0
  40e73c:	jg     0x40e78b
  40e73e:	cld    
  40e73f:	and    eax,DWORD PTR [esi]
  40e741:	outs   dx,DWORD PTR ds:[esi]
  40e742:	inc    eax
  40e743:	test   DWORD PTR [edx+0x2d],ebx
  40e746:	mov    edi,0x6e248773
  40e74b:	mov    ch,0x78
  40e74d:	clc    
  40e74e:	scas   eax,DWORD PTR es:[edi]
  40e74f:	aam    0xf5
  40e751:	gs xor eax,0xfce10e3
  40e757:	mov    ds:0xac6f3df6,al
  40e75c:	adc    al,0x8d
  40e75e:	jbe    0x40e792
  40e760:	xor    eax,0x5b49aecc
  40e765:	repnz mov al,ds:0xc7fc5e80
  40e76b:	arpl   WORD PTR [ecx+0x59fe645d],bx
  40e771:	dec    edx
  40e772:	out    0xc2,eax
  40e774:	inc    ebp
  40e775:	mov    ebp,0x5506e22f
  40e77a:	vxorps xmm0,xmm4,XMMWORD PTR [eax-0x2c]
  40e77f:	pop    ss
  40e780:	daa    
  40e781:	enter  0x4320,0xd6
  40e785:	loop   0x40e732
  40e787:	js     0x40e7e8
  40e789:	sbb    ebx,esp
  40e78b:	mov    WORD PTR [ebx+eiz*4],gs
  40e78e:	xor    BYTE PTR gs:[ebx+0x43f08d91],0x43
  40e796:	outs   dx,DWORD PTR ds:[esi]
  40e797:	and    DWORD PTR [ebp-0x48],eax
  40e79a:	inc    ecx
  40e79b:	mov    bh,0x23
  40e79d:	lods   al,BYTE PTR ds:[esi]
  40e79e:	fild   QWORD PTR [esi-0x35]
  40e7a1:	cmp    DWORD PTR [ecx+0x72ae6f5c],ebx
  40e7a7:	pop    ebx
  40e7a8:	push   esi
  40e7a9:	push   esi
  40e7aa:	sbb    DWORD PTR [ebx],esp
  40e7ac:	inc    eax
  40e7ad:	retf   0xb07d
  40e7b0:	jns    0x40e783
  40e7b2:	xchg   ecx,eax
  40e7b3:	pop    ds
  40e7b4:	lds    edx,FWORD PTR [edx+0x44385236]
  40e7ba:	dec    eax
  40e7bb:	xor    al,dh
  40e7bd:	aas    
  40e7be:	fidiv  DWORD PTR [edx-0x9]
  40e7c1:	jg     0x40e794
  40e7c3:	cmp    cl,bh
  40e7c5:	xlat   BYTE PTR ss:[ebx]
  40e7c7:	sbb    dl,BYTE PTR [eax]
  40e7c9:	ds nop
  40e7cb:	mov    WORD PTR [esi],gs
  40e7cd:	aad    0x2e
  40e7cf:	mov    dh,0x64
  40e7d1:	jb     0x40e7a5
  40e7d3:	int    0x91
  40e7d5:	aad    0xf1
  40e7d7:	inc    esi
  40e7d8:	repnz mov BYTE PTR [ebx+0x50787985],0xb9
  40e7e0:	aad    0x1f
  40e7e2:	jge    0x40e852
  40e7e4:	cmp    al,0x3a
  40e7e6:	dec    edi
  40e7e7:	cs adc eax,0xecaae6a2
  40e7ed:	or     al,0xaf
  40e7ef:	fistp  QWORD PTR [edx]
  40e7f1:	dec    ecx
  40e7f2:	pop    es
  40e7f3:	packuswb xmm3,xmm0
  40e7f7:	dec    esi
  40e7f8:	cmp    DWORD PTR [ebp-0x754d55b3],esp
  40e7fe:	or     DWORD PTR [edi-0x46],esp
  40e801:	and    al,0x96
  40e803:	mov    BYTE PTR [ecx+edi*2],dl
  40e806:	pop    ecx
  40e807:	call   0x374:0xae3583f7
  40e80e:	pop    ebp
  40e80f:	lock idiv edi
  40e812:	mov    bl,BYTE PTR ds:0x3c88bdbd
  40e818:	ret    0x8f15
  40e81b:	mov    esi,0x2bd2b780
  40e820:	aaa    
  40e821:	or     DWORD PTR [ebx-0x12c7c4ab],ecx
  40e827:	cmc    
  40e828:	pop    ss
  40e829:	inc    esp
  40e82a:	mov    ds:0x5c1442ba,eax
  40e82f:	cmp    BYTE PTR [ebx+0x2f],0x94
  40e833:	mov    BYTE PTR [esi-0x35e7baaf],dh
  40e839:	ror    DWORD PTR [ebx-0x28],0xab
  40e83d:	fst    st(3)
  40e83f:	jle    0x40e883
  40e841:	mov    ds:0xf72f278c,al
  40e846:	jecxz  0x40e863
  40e848:	mov    ds:0x1bc8a453,eax
  40e84d:	mov    eax,ds:0xefde073a
  40e852:	sar    BYTE PTR [edx+0x1f118901],cl
  40e858:	mov    bh,0xcb
  40e85a:	hlt    
  40e85b:	jo     0x40e8d3
  40e85d:	jmp    0xf7fd0444
  40e862:	and    DWORD PTR [esi-0x44],0x8ba8d5a7
  40e869:	ret    
  40e86a:	mov    esi,0x3125f803
  40e86f:	mov    ?,WORD PTR [ecx]
  40e871:	in     eax,0x1c
  40e873:	dec    ebp
  40e874:	pop    eax
  40e875:	cwde   
  40e876:	push   edi
  40e877:	out    0x6f,al
  40e879:	cmp    BYTE PTR [eax-0x5d3c327a],0x43
  40e880:	rcr    BYTE PTR [esi],cl
  40e882:	fidiv  DWORD PTR [ecx]
  40e884:	and    al,0x85
  40e886:	sbb    al,0x40
  40e888:	addr16 inc esi
  40e88a:	add    dl,al
  40e88c:	aas    
  40e88d:	in     al,0x15
  40e88f:	in     al,0xb9
  40e891:	sbb    eax,DWORD PTR [ebx]
  40e893:	retf   
  40e894:	rol    DWORD PTR [esi+0x23351043],cl
  40e89a:	push   ecx
  40e89b:	push   eax
  40e89c:	and    bh,dl
  40e89e:	into   
  40e89f:	fprem  
  40e8a1:	mov    edi,esi
  40e8a3:	imul   eax,DWORD PTR [edi+esi*4],0x3a417602
  40e8aa:	imul   esp,DWORD PTR [edi],0x70
  40e8ad:	push   ebp
  40e8ae:	sbb    eax,0xdec282b6
  40e8b3:	ror    ebx,cl
  40e8b5:	sbb    DWORD PTR [edi+0x1f],ebx
  40e8b8:	mov    al,0xc6
  40e8ba:	and    BYTE PTR [ebx],ah
  40e8bc:	ret    0x5ee9
  40e8bf:	nop
  40e8c0:	push   edi
  40e8c1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e8c2:	inc    edx
  40e8c3:	daa    
  40e8c4:	push   esp
  40e8c5:	dec    esp
  40e8c6:	jnp    0x40e86a
  40e8c8:	jg     0x40e940
  40e8ca:	xchg   BYTE PTR [edi+0x3],bh
  40e8cd:	inc    ebx
  40e8ce:	shr    eax,0xf5
  40e8d1:	push   ebx
  40e8d2:	cmp    edx,ebp
  40e8d4:	jecxz  0x40e896
  40e8d6:	add    dl,0xca
  40e8d9:	mov    esp,0x4ce6e1e9
  40e8de:	ds in  al,dx
  40e8e0:	xlat   BYTE PTR ds:[ebx]
  40e8e1:	lgs    eax,FWORD PTR [ebx+0x27]
  40e8e5:	mov    ds:0x5e420a64,al
  40e8ea:	fld    TBYTE PTR [ebp-0x2fb4f088]
  40e8f0:	icebp  
  40e8f1:	lahf   
  40e8f2:	ja     0x40e8f2
  40e8f4:	cdq    
  40e8f5:	(bad)  
  40e8f6:	in     eax,dx
  40e8f7:	int    0xb7
  40e8f9:	stos   DWORD PTR es:[edi],eax
  40e8fa:	sbb    al,0xa4
  40e8fc:	in     al,0xe5
  40e8fe:	addr16 xchg edx,eax
  40e900:	(bad)  
  40e901:	lods   eax,DWORD PTR ds:[esi]
  40e902:	mov    al,0x47
  40e904:	jns    0x40e943
  40e906:	and    al,0xca
  40e908:	call   0x7b374431
  40e90d:	fld    TBYTE PTR [edi+eax*2+0x2494b820]
  40e914:	push   ds
  40e915:	mov    ch,0xb4
  40e917:	xchg   ecx,eax
  40e918:	loop   0x40e903
  40e91a:	rcl    DWORD PTR [edx+0x274dcab],1
  40e920:	mov    esi,0xe1b6ec78
  40e925:	stos   DWORD PTR es:[edi],eax
  40e926:	cwde   
  40e927:	adc    eax,0xaccb5e96
  40e92c:	ss mov dh,0x31
  40e92f:	inc    esi
  40e930:	cwde   
  40e931:	xchg   ebx,eax
  40e932:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e933:	iret   
  40e934:	add    eax,DWORD PTR [eax-0x39f6553a]
  40e93a:	dec    edi
  40e93b:	aaa    
  40e93c:	cmp    eax,0xf7c659dd
  40e941:	cmp    ebx,esi
  40e943:	lahf   
  40e944:	adc    al,BYTE PTR [ebp-0x4505f5a0]
  40e94a:	xchg   ebx,eax
  40e94b:	test   BYTE PTR [eax+0x6f],bh
  40e94e:	inc    ecx
  40e94f:	sti    
  40e950:	or     DWORD PTR [eax+ebp*2],0x74
  40e954:	out    dx,eax
  40e955:	gs inc ebp
  40e957:	out    0x37,eax
  40e959:	fimul  DWORD PTR [edi-0x60]
  40e95c:	out    0xfc,eax
  40e95e:	dec    esp
  40e95f:	pop    ecx
  40e960:	cmp    eax,0xec36235e
  40e965:	mov    al,ds:0xc7d8942d
  40e96a:	mov    ch,0x74
  40e96c:	mov    ss,WORD PTR [ebx]
  40e96e:	cmc    
  40e96f:	(bad)  
  40e970:	out    0x42,eax
  40e972:	push   ebp
  40e973:	mov    bl,bh
  40e975:	lods   al,BYTE PTR ds:[esi]
  40e976:	and    DWORD PTR [edi-0x2c],esp
  40e979:	mov    eax,ds:0x762842dc
  40e97e:	loop   0x40e9d9
  40e980:	(bad)  
  40e981:	mov    al,0xe7
  40e983:	clc    
  40e984:	mov    DWORD PTR ds:0xbf0a8c54,ebp
  40e98a:	stos   DWORD PTR es:[edi],eax
  40e98b:	clc    
  40e98c:	mov    eax,ds:0xfda03871
  40e991:	pop    ss
  40e992:	xor    edx,DWORD PTR [edx]
  40e994:	leave  
  40e995:	out    0x8a,eax
  40e997:	or     al,0xa8
  40e999:	mov    al,ds:0xe9c3dd53
  40e99e:	pop    ecx
  40e99f:	xchg   ecx,eax
  40e9a0:	add    DWORD PTR [ebx+ecx*1],0xe35bc1c2
  40e9a7:	sub    ch,BYTE PTR [eax]
  40e9a9:	add    al,0x19
  40e9ab:	mov    ds:0x3b0dd951,al
  40e9b0:	(bad)  
  40e9b1:	push   ecx
  40e9b2:	sub    BYTE PTR es:[eax-0x66],dh
  40e9b6:	test   al,0xf8
  40e9b8:	cmp    eax,0x7314e685
  40e9bd:	fcomp  DWORD PTR ds:0x13c3e071
  40e9c3:	test   BYTE PTR [esi],bh
  40e9c5:	rcr    BYTE PTR [esp+edx*1],1
  40e9c8:	pop    edx
  40e9c9:	cmp    DWORD PTR [ebx],edi
  40e9cb:	adc    dh,dl
  40e9cd:	xchg   edx,eax
  40e9ce:	fisub  WORD PTR [edi-0x3def0c0f]
  40e9d4:	pushf  
  40e9d5:	inc    ebx
  40e9d6:	mov    ah,0x62
  40e9d8:	mov    ch,0xc8
  40e9da:	or     al,0xcf
  40e9dc:	mov    ds:0xdb804730,al
  40e9e1:	setbe  BYTE PTR [eax-0x53]
  40e9e5:	pop    ebx
  40e9e6:	neg    BYTE PTR [edx+0x40]
  40e9e9:	mov    ss,WORD PTR [ebp+ebx*4+0x5b74a7a4]
  40e9f0:	jne    0x40e9ea
  40e9f2:	fiadd  WORD PTR [ebx]
  40e9f4:	(bad)  
  40e9f5:	push   esi
  40e9f6:	mov    bh,0x31
  40e9f8:	dec    ecx
  40e9f9:	icebp  
  40e9fa:	mov    WORD PTR [ebx+0x5027274e],es
  40ea00:	mov    dl,BYTE PTR [esi+0x61]
  40ea03:	iret   
  40ea04:	iretw  
  40ea06:	ss mov ebp,0xf8aa2b52
  40ea0c:	sub    dh,ah
  40ea0e:	sub    eax,0xc44c578d
  40ea13:	sub    ecx,DWORD PTR [ebx]
  40ea15:	ins    BYTE PTR es:[edi],dx
  40ea16:	js     0x40ea18
  40ea18:	jecxz  0x40e9a4
  40ea1a:	daa    
  40ea1b:	mov    eax,ds:0xfa1b6a34
  40ea20:	push   edi
  40ea21:	inc    ecx
  40ea22:	(bad)  
  40ea23:	pop    ecx
  40ea24:	jmp    0x96a8:0x589de086
  40ea2b:	test   eax,0xb2ba3fba
  40ea30:	(bad)  
  40ea32:	in     al,dx
  40ea33:	call   0x1fcc:0x8b9f9a4e
  40ea3a:	inc    eax
  40ea3b:	fst    DWORD PTR cs:[esi-0x23c25744]
  40ea42:	adc    BYTE PTR [ecx],cl
  40ea44:	or     BYTE PTR [edx+0x7e],bl
  40ea47:	ret    0x812d
  40ea4a:	sub    BYTE PTR [edi],0x31
  40ea4d:	dec    edx
  40ea4e:	rcl    BYTE PTR [edi-0x63],1
  40ea51:	push   edi
  40ea52:	ret    
  40ea53:	cmp    ebx,esi
  40ea55:	add    DWORD PTR [ecx-0x1e1592a3],0xffffffa8
  40ea5c:	dec    edx
  40ea5d:	and    DWORD PTR [ebx-0x7dd63220],ebx
  40ea63:	in     al,dx
  40ea64:	cmp    eax,0x9c61b4a4
  40ea69:	jbe    0x40ea0e
  40ea6b:	or     dl,BYTE PTR [ebp+esi*2+0x37]
  40ea6f:	xchg   BYTE PTR [edi+0x7de1dd86],ah
  40ea75:	mov    ch,0x6
  40ea77:	clc    
  40ea78:	sub    al,0xfc
  40ea7a:	pop    eax
  40ea7b:	sub    BYTE PTR [ebx+0x18ae8ee6],ah
  40ea81:	mov    WORD PTR [ebx+0x19cd7365],cs
  40ea87:	add    DWORD PTR [edx+0x1306d1fa],0x9b931563
  40ea91:	xor    DWORD PTR [edx-0x405c6d34],esi
  40ea97:	cdq    
  40ea98:	lds    ebx,FWORD PTR [ebp+0x78]
  40ea9b:	lea    esi,[eax-0x18]
  40ea9e:	mov    ebp,0xd267c1da
  40eaa3:	cmp    al,0x13
  40eaa5:	adc    eax,0xa2938517
  40eaaa:	add    ebx,ebp
  40eaac:	xchg   edx,eax
  40eaad:	pusha  
  40eaae:	pushf  
  40eaaf:	pop    ds
  40eab0:	std    
  40eab1:	cmp    al,0x6a
  40eab3:	mov    ch,0x36
  40eab5:	mov    dl,0x6c
  40eab7:	inc    ebx
  40eab8:	aad    0xff
  40eaba:	repz xchg ebp,eax
  40eabc:	sti    
  40eabd:	fdivr  QWORD PTR [esi+0x3aa743c2]
  40eac3:	push   edi
  40eac4:	fucomp st(5)
  40eac6:	shl    BYTE PTR ds:0xd94513d,0x15
  40eacd:	push   ebx
  40eace:	test   BYTE PTR [ebx],ch
  40ead0:	and    cl,BYTE PTR [ecx+eax*8+0x142497c8]
  40ead7:	push   edx
  40ead8:	adc    ch,BYTE PTR [esi]
  40eada:	xchg   DWORD PTR [ebx],eax
  40eadc:	lock ins BYTE PTR es:[edi],dx
  40eade:	retf   0x1ef9
  40eae1:	xor    DWORD PTR [edi+0x7c882a0e],edi
  40eae7:	mov    esp,0xb91a8756
  40eaec:	sub    BYTE PTR [esi],bh
  40eaee:	jo     0x40eb30
  40eaf0:	dec    edx
  40eaf1:	jbe    0x40eb36
  40eaf3:	cmp    al,0x75
  40eaf5:	test   eax,0x78b624ec
  40eafa:	addr16 gs imul eax,esp,0x59
  40eaff:	push   esp
  40eb00:	aad    0xb6
  40eb02:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40eb03:	jmp    0x40eb1c
  40eb05:	out    0x8c,al
  40eb07:	and    cl,bh
  40eb09:	ss xchg edi,eax
  40eb0b:	sub    esi,DWORD PTR [eax+0x6ea99963]
  40eb11:	aaa    
  40eb12:	and    al,0xa4
  40eb14:	pop    esp
  40eb15:	mov    al,ds:0x451e30b5
  40eb1a:	mov    dl,0xd6
  40eb1c:	xchg   ebx,eax
  40eb1d:	hlt    
  40eb1e:	jns    0x40eb6c
  40eb20:	ja     0x40eb34
  40eb22:	lds    ecx,FWORD PTR [edi-0x56]
  40eb25:	retf   
  40eb26:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40eb27:	pop    es
  40eb28:	xchg   ecx,eax
  40eb29:	sub    eax,0x60638954
  40eb2e:	dec    esp
  40eb2f:	pop    es
  40eb30:	add    al,BYTE PTR [ebx+ecx*4+0x59]
  40eb34:	jg     0x40eb37
  40eb36:	cs push esi
  40eb38:	inc    edx
  40eb39:	pop    esp
  40eb3a:	popf   
  40eb3b:	dec    edi
  40eb3c:	shl    ch,cl
  40eb3e:	xor    eax,0x5201405f
  40eb43:	retf   0x1b7a
  40eb46:	outs   dx,DWORD PTR fs:[esi]
  40eb48:	mov    al,0xa7
  40eb4a:	and    al,0x7c
  40eb4c:	mov    ebx,DWORD PTR [edi]
  40eb4e:	or     eax,0x6f9d8e51
  40eb53:	enter  0x2f73,0x6a
  40eb57:	shl    DWORD PTR [ebx+0x5bc14ad],0xd
  40eb5e:	aaa    
  40eb5f:	adc    eax,0xb4cd47f1
  40eb64:	mov    cl,0x95
  40eb66:	jmp    0x40eba2
  40eb68:	dec    ebp
  40eb69:	cmc    
  40eb6a:	xchg   esp,eax
  40eb6b:	cmp    eax,0xcb8bb04c
  40eb70:	pop    ecx
  40eb71:	int3   
  40eb72:	scas   al,BYTE PTR es:[edi]
  40eb73:	jmp    0x1bc3:0x8338dfca
  40eb7a:	scas   al,BYTE PTR es:[edi]
  40eb7b:	(bad)  
  40eb7c:	std    
  40eb7d:	or     ch,BYTE PTR [ecx]
  40eb7f:	cmp    BYTE PTR [edi+0x4a],dl
  40eb82:	iret   
  40eb83:	scas   eax,DWORD PTR es:[edi]
  40eb84:	scas   al,BYTE PTR es:[edi]
  40eb85:	sub    dh,ah
  40eb87:	nop    esp
  40eb8a:	in     al,dx
  40eb8b:	call   0x848bce42
  40eb90:	mov    edx,0xe6db00fa
  40eb95:	je     0x40eb7c
  40eb97:	add    cl,BYTE PTR [esi+eax*2+0x172ac946]
  40eb9e:	inc    ebx
  40eb9f:	in     eax,dx
  40eba0:	test   edx,ebx
  40eba2:	call   0xb7e150bd
  40eba7:	mov    ds:0x40f42176,eax
  40ebac:	sub    ebx,eax
  40ebae:	lahf   
  40ebaf:	and    DWORD PTR [ebp-0x277c48d9],0x9a2a5a22
  40ebb9:	sub    DWORD PTR [edi+0x3da70b60],0x5d
  40ebc0:	mov    eax,ds:0x60d9f11
  40ebc5:	lock jne 0x40eb5e
  40ebc8:	cmp    bl,BYTE PTR [eax+0x16491be1]
  40ebce:	fld    st(5)
  40ebd0:	inc    eax
  40ebd1:	rcl    BYTE PTR [edi+0x7faf09a9],0xa7
  40ebd8:	jp     0x40eb70
  40ebda:	fstp   TBYTE PTR [ecx]
  40ebdc:	jp     0x40ec18
  40ebde:	inc    esp
  40ebdf:	test   eax,0x587c488
  40ebe4:	dec    eax
  40ebe5:	shr    ch,cl
  40ebe7:	jl     0x40eb86
  40ebe9:	mov    gs,WORD PTR [edi]
  40ebeb:	and    edx,edx
  40ebed:	xchg   edi,eax
  40ebee:	add    al,0x84
  40ebf0:	ret    
  40ebf1:	ret    
  40ebf2:	loopne 0x40ebda
  40ebf4:	pop    ebx
  40ebf5:	or     eax,0xed17477c
  40ebfa:	bound  esp,QWORD PTR [edx-0x1b]
  40ebfd:	addr16 jmp 0xca5d43e0
  40ec03:	in     eax,0xa2
  40ec05:	pop    eax
  40ec06:	aam    0xc
  40ec08:	in     al,dx
  40ec09:	lock rol BYTE PTR [ecx+0x17],cl
  40ec0d:	add    eax,0x1ca8375a
  40ec12:	jl     0x40ebed
  40ec14:	cmp    DWORD PTR [esi],edx
  40ec16:	ins    BYTE PTR es:[edi],dx
  40ec17:	mov    edi,DWORD PTR [ebx+0x54]
  40ec1a:	and    al,0xab
  40ec1c:	cld    
  40ec1d:	sbb    BYTE PTR [esi+ebp*2+0x23],0xf0
  40ec22:	nop
  40ec23:	mov    al,ds:0x7b160d99
  40ec28:	push   ds
  40ec29:	mov    BYTE PTR [esp+esi*2+0x6f52b481],ch
  40ec30:	jge    0x40ec28
  40ec32:	push   ds
  40ec33:	scas   al,BYTE PTR es:[edi]
  40ec34:	mov    bh,0x3f
  40ec36:	sahf   
  40ec37:	sti    
  40ec38:	aas    
  40ec39:	add    BYTE PTR [eax+0x4a83a3bc],ch
  40ec3f:	jmp    0x8ab7ec75
  40ec44:	sub    al,ah
  40ec46:	cs es scas eax,DWORD PTR es:[edi]
  40ec49:	arpl   WORD PTR [esi-0x65b6cd8d],si
  40ec4f:	mov    bl,0x57
  40ec51:	push   eax
  40ec52:	sbb    bh,ah
  40ec54:	jns    0x40ec45
  40ec56:	outs   dx,DWORD PTR ds:[esi]
  40ec57:	pop    es
  40ec58:	lock jg 0x40ec07
  40ec5b:	jbe    0x40ecac
  40ec5d:	mov    eax,0x14824dc1
  40ec62:	gs or  al,0x85
  40ec65:	sub    bh,ch
  40ec67:	push   0x77be0aba
  40ec6c:	mov    ds:0x18c6af20,ax
  40ec72:	cmp    al,0x9b
  40ec74:	sti    
  40ec75:	mov    al,0xfb
  40ec77:	ds aam 0x3
  40ec7a:	jnp    0x40ec66
  40ec7c:	test   eax,0x122d1840
  40ec81:	aaa    
  40ec82:	dec    esi
  40ec83:	sub    DWORD PTR [edx],ebp
  40ec85:	xor    edx,edx
  40ec87:	fwait
  40ec88:	mov    bh,0xe0
  40ec8a:	lahf   
  40ec8b:	pop    eax
  40ec8c:	push   ebp
  40ec8d:	push   cs
  40ec8e:	add    DWORD PTR [eax+eiz*4],esi
  40ec91:	or     DWORD PTR [ebp+0x7940e5fe],ebp
  40ec97:	jbe    0x40ec61
  40ec99:	sub    DWORD PTR [esi],edx
  40ec9b:	not    ah
  40ec9d:	ret    0x1251
  40eca0:	(bad)  
  40eca1:	cmp    al,0x0
  40eca3:	call   0xd7dd1592
  40eca8:	imul   ebp,DWORD PTR [ebx-0x46b46135],0x296bff87
  40ecb2:	push   ebp
  40ecb3:	inc    edx
  40ecb4:	adc    eax,0xf6a31dad
  40ecb9:	sub    al,0xd7
  40ecbb:	inc    ebp
  40ecbc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ecbd:	mov    al,0xfb
  40ecbf:	inc    ebx
  40ecc0:	xchg   edx,eax
  40ecc1:	outs   dx,DWORD PTR ds:[esi]
  40ecc2:	sbb    BYTE PTR [ebp-0x9bc451b],ah
  40ecc8:	push   es
  40ecc9:	add    DWORD PTR [edx+0x2e],esi
  40eccc:	rep outs dx,DWORD PTR ds:[esi]
  40ecce:	jb     0x40ed1f
  40ecd0:	shl    BYTE PTR [edi+0x39],0x28
  40ecd4:	push   esi
  40ecd5:	dec    edx
  40ecd6:	dec    eax
  40ecd7:	and    DWORD PTR [edx],ebp
  40ecd9:	xchg   edx,eax
  40ecda:	test   eax,0x84a63290
  40ecdf:	loope  0x40ec9d
  40ece1:	dec    edx
  40ece2:	popf   
  40ece3:	and    eax,0x587bb161
  40ece8:	les    ecx,FWORD PTR [edi]
  40ecea:	push   0x21
  40ecec:	and    DWORD PTR [ecx-0x3b],ecx
  40ecef:	psrlw  mm6,QWORD PTR [ecx]
  40ecf2:	mov    ah,0x1b
  40ecf4:	aaa    
  40ecf5:	hlt    
  40ecf6:	jae    0x40ed6b
  40ecf8:	sub    cl,bh
  40ecfa:	or     al,0x39
  40ecfc:	aaa    
  40ecfd:	inc    ebp
  40ecfe:	pop    edi
  40ecff:	scas   eax,DWORD PTR es:[edi]
  40ed00:	mov    dh,0x12
  40ed02:	pushf  
  40ed03:	jb     0x40ecb0
  40ed05:	sti    
  40ed06:	jne    0x40ed35
  40ed08:	xor    BYTE PTR [ecx*8-0x3cd4da6f],0xc3
  40ed10:	bound  esp,QWORD PTR [edx+0x48456cb2]
  40ed16:	sbb    al,0x7c
  40ed18:	sub    ecx,ecx
  40ed1a:	in     al,dx
  40ed1b:	cmp    eax,0xc194ab32
  40ed20:	fwait
  40ed21:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ed22:	mov    ah,0xa3
  40ed24:	push   esp
  40ed25:	fcomp  QWORD PTR [ebx]
  40ed27:	fisttp DWORD PTR [eax+0x7f71d93a]
  40ed2d:	sub    ecx,esi
  40ed2f:	out    dx,al
  40ed30:	es in  al,0xf
  40ed33:	sbb    cl,bh
  40ed35:	inc    edx
  40ed36:	sub    edx,DWORD PTR [edi+0x677dc7a2]
  40ed3c:	sahf   
  40ed3d:	push   ecx
  40ed3e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ed3f:	adc    dh,ch
  40ed41:	mov    edx,edi
  40ed43:	stos   DWORD PTR es:[edi],eax
  40ed44:	mov    eax,DWORD PTR [ecx+0x60]
  40ed47:	pusha  
  40ed48:	rcl    BYTE PTR [edi+0xf],cl
  40ed4b:	int    0xc4
  40ed4d:	les    esi,FWORD PTR [edi]
  40ed4f:	mov    ds:0x175ea5bb,al
  40ed54:	xchg   edx,eax
  40ed55:	mov    eax,0xa81ecd95
  40ed5a:	and    al,0x9a
  40ed5c:	ins    DWORD PTR es:[edi],dx
  40ed5d:	lods   eax,DWORD PTR ds:[esi]
  40ed5e:	jmp    0x40edb5
  40ed60:	stos   BYTE PTR es:[edi],al
  40ed61:	cmc    
  40ed62:	adc    DWORD PTR [esi-0x6b],esi
  40ed65:	pop    eax
  40ed66:	cli    
  40ed67:	fs mov bl,0x23
  40ed6a:	cmp    ebx,DWORD PTR [edx-0xf]
  40ed6d:	push   0xfffffff9
  40ed6f:	in     al,0xd9
  40ed71:	sub    edi,DWORD PTR [esi-0x13]
  40ed74:	pushf  
  40ed75:	lods   al,BYTE PTR ds:[esi]
  40ed76:	repz inc ebx
  40ed78:	enter  0x553f,0x69
  40ed7c:	jnp    0x40ed17
  40ed7e:	push   esp
  40ed7f:	add    edi,DWORD PTR [eax+0x62]
  40ed82:	add    eax,DWORD PTR [ecx+0x4cfc42e3]
  40ed88:	add    DWORD PTR [ebp+ebx*2+0x434caed2],0x37
  40ed90:	mov    ah,BYTE PTR [ebx+0x6306d7d9]
  40ed96:	nop    DWORD PTR [edx-0x4e941cdf]
  40ed9d:	xchg   ebx,eax
  40ed9e:	and    ah,ch
  40eda0:	push   edi
  40eda1:	inc    edi
  40eda2:	and    dh,BYTE PTR [edi+eiz*8+0x45c85a41]
  40eda9:	scas   al,BYTE PTR es:[edi]
  40edaa:	sbb    BYTE PTR [ebx],cl
  40edac:	ja     0x40ed53
  40edae:	mov    esp,0xffd7d4bb
  40edb3:	mov    edi,0x6b94b6db
  40edb8:	not    ch
  40edba:	inc    ecx
  40edbb:	rcl    BYTE PTR [ecx+0x45],cl
  40edbe:	inc    esp
  40edbf:	sbb    eax,0x157ef38f
  40edc4:	sub    DWORD PTR [ebx-0x6bde90e],esi
  40edca:	jmp    0x6f65:0xbd596eb1
  40edd1:	retf   
  40edd2:	ret    
  40edd3:	scas   eax,DWORD PTR es:[edi]
  40edd4:	xchg   esi,eax
  40edd5:	lods   al,BYTE PTR ds:[esi]
  40edd6:	scas   al,BYTE PTR es:[edi]
  40edd7:	push   eax
  40edd8:	in     al,dx
  40edd9:	and    eax,0xc02958cc
  40edde:	repnz mov esp,0x2a0863d3
  40ede4:	into   
  40ede5:	pop    edi
  40ede6:	jne    0x40ee2f
  40ede8:	fldcw  WORD PTR ds:0xbccc9dd8
  40edee:	or     BYTE PTR [eax],0xd3
  40edf1:	cmp    al,0xc1
  40edf3:	mov    edx,0x14823311
  40edf8:	sbb    DWORD PTR [ebp+0xffa2208],edx
  40edfe:	pop    edi
  40edff:	jne    0x40edfd
  40ee01:	xchg   edx,eax
  40ee02:	xlat   BYTE PTR ds:[ebx]
  40ee03:	stos   DWORD PTR es:[edi],eax
  40ee04:	mov    eax,0xda19b810
  40ee09:	sub    eax,DWORD PTR [eax]
  40ee0b:	mov    al,0x12
  40ee0d:	or     eax,ebx
  40ee0f:	leave  
  40ee10:	mov    ah,0x36
  40ee12:	in     eax,dx
  40ee13:	sbb    ebx,eax
  40ee15:	dec    esi
  40ee16:	je     0x40eda9
  40ee18:	fcom   st(1)
  40ee1a:	xchg   edx,eax
  40ee1b:	jg     0x40ee3e
  40ee1d:	lea    ebp,[ecx]
  40ee1f:	pusha  
  40ee20:	bound  ebp,QWORD PTR [eax+0x4]
  40ee23:	jmp    0x91a6:0x366def2f
  40ee2a:	rcl    BYTE PTR [eax+0xe],cl
  40ee2d:	mov    ecx,0x3efa4b99
  40ee32:	fwait
  40ee33:	arpl   WORD PTR [ebx-0x6ac7b02],dx
  40ee39:	inc    esi
  40ee3a:	jae    0x40ee3c
  40ee3c:	mov    DWORD PTR [edi-0x25faaf29],esi
  40ee42:	cmp    edi,DWORD PTR [ebp-0x4739241e]
  40ee48:	and    BYTE PTR [ebx+0x6af09412],ch
  40ee4e:	push   edi
  40ee4f:	mov    edx,DWORD PTR [ebp+0x2]
  40ee52:	lahf   
  40ee53:	arpl   WORD PTR [ecx+0x31],di
  40ee56:	lea    esp,[ecx]
  40ee58:	pop    ss
  40ee59:	popa   
  40ee5a:	mov    ds:0xc60f65f,eax
  40ee5f:	and    dh,BYTE PTR [eax+0x221e15eb]
  40ee65:	dec    esp
  40ee66:	sub    esp,esi
  40ee68:	sub    DWORD PTR [ecx-0x79],0x6f
  40ee6c:	adc    BYTE PTR [eax+0x0],ch
  40ee6f:	cmp    DWORD PTR [ebp+0x56da9c82],edx
  40ee75:	pop    edi
  40ee76:	and    BYTE PTR [ebx],0x97
  40ee79:	popf   
  40ee7a:	pop    ecx
  40ee7b:	cli    
  40ee7c:	iret   
  40ee7d:	inc    ebp
  40ee7e:	sbb    ebp,DWORD PTR [eax+0x304b527e]
  40ee84:	xor    al,0xa3
  40ee86:	adc    eax,0xa8b01006
  40ee8b:	xor    DWORD PTR ds:0x87b1d9a5,0x71b6cbd9
  40ee95:	repnz pop ebp
  40ee97:	test   al,0x8c
  40ee99:	lods   eax,DWORD PTR ds:[esi]
  40ee9a:	in     al,dx
  40ee9b:	sahf   
  40ee9c:	cmp    DWORD PTR [ebp-0x21],0xfffffffe
  40eea0:	cs push esp
  40eea2:	pusha  
  40eea3:	adc    bh,BYTE PTR [ebp+0x1]
  40eea6:	sub    eax,0xe252f301
  40eeab:	sti    
  40eeac:	repz ror BYTE PTR [edx],0xd0
  40eeb0:	sar    bl,0x52
  40eeb3:	sub    dh,BYTE PTR [ebp+0x2f]
  40eeb6:	loope  0x40ef18
  40eeb8:	sub    eax,0xf82b159b
  40eebd:	aas    
  40eebe:	fwait
  40eebf:	outs   dx,BYTE PTR ds:[esi]
  40eec0:	outs   dx,BYTE PTR ds:[esi]
  40eec1:	adc    al,0x40
  40eec3:	sub    esp,esp
  40eec5:	push   esp
  40eec6:	add    ebp,DWORD PTR [esi+edx*2-0x4f]
  40eeca:	and    eax,DWORD PTR [ecx+0x3]
  40eecd:	aad    0x35
  40eecf:	and    ebp,DWORD PTR [ebx]
  40eed1:	lea    ecx,[ebx+0x31d2b676]
  40eed7:	pushf  
  40eed8:	jnp    0x40ef2b
  40eeda:	push   ss
  40eedb:	popa   
  40eedc:	xor    bh,bl
  40eede:	xchg   edi,eax
  40eedf:	outs   dx,BYTE PTR ds:[esi]
  40eee0:	icebp  
  40eee1:	inc    ebp
  40eee2:	push   es
  40eee3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40eee4:	mov    ds:0x9f536217,eax
  40eee9:	jle    0x40ef66
  40eeeb:	mov    ds:0x91c3a639,al
  40eef0:	add    BYTE PTR [ecx-0x4b],dh
  40eef3:	jo     0x40eee8
  40eef5:	rcl    DWORD PTR [edi],0xc0
  40eef8:	out    0x3f,al
  40eefa:	add    ecx,DWORD PTR [edx-0x4b9d88c9]
  40ef00:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ef01:	ds sub esi,edx
  40ef04:	inc    edi
  40ef05:	out    0x11,al
  40ef07:	scas   al,BYTE PTR es:[edi]
  40ef08:	cmc    
  40ef09:	jnp    0x40ef3e
  40ef0b:	cmp    BYTE PTR [edx-0x35],ah
  40ef0e:	lds    edx,FWORD PTR [eax+0x1f8abb3d]
  40ef14:	dec    edi
  40ef15:	inc    edx
  40ef16:	mov    ecx,0x1c363dc6
  40ef1b:	ins    BYTE PTR es:[edi],dx
  40ef1c:	dec    eax
  40ef1d:	add    dl,dh
  40ef1f:	inc    eax
  40ef20:	aam    0xe
  40ef22:	ret    
  40ef23:	in     eax,dx
  40ef24:	ja     0x40efa0
  40ef26:	sub    DWORD PTR [ebx+esi*2-0x28b9eda4],edx
  40ef2d:	sub    edx,ecx
  40ef2f:	imul   edi,esp,0x503232b7
  40ef35:	xchg   edx,eax
  40ef36:	inc    ebp
  40ef37:	mov    ah,0x27
  40ef39:	mov    dl,0x31
  40ef3b:	sub    al,0x4a
  40ef3d:	fs xchg esi,eax
  40ef3f:	xchg   esp,eax
  40ef40:	and    DWORD PTR [edx],0x4fd02d1b
  40ef46:	out    dx,al
  40ef47:	dec    ebx
  40ef48:	rcr    DWORD PTR [esi-0x143bf54f],1
  40ef4e:	xchg   ebp,eax
  40ef4f:	mov    ecx,0x46ff2a42
  40ef54:	dec    ecx
  40ef55:	(bad)  
  40ef56:	pop    ebp
  40ef57:	push   ebp
  40ef58:	dec    DWORD PTR [ecx+0x3ca1f4e3]
  40ef5e:	nop
  40ef5f:	stos   BYTE PTR es:[edi],al
  40ef60:	(bad)  
  40ef61:	cmp    al,0xd0
  40ef63:	int    0x0
  40ef65:	inc    ecx
  40ef66:	call   0x8d62:0xf608f230
  40ef6d:	mov    ah,0xb5
  40ef6f:	cmp    al,0x9a
  40ef71:	lea    ebp,[esp+ecx*1]
  40ef74:	out    0x4a,al
  40ef76:	mov    esp,0x71fb3444
  40ef7b:	sti    
  40ef7c:	pop    ebp
  40ef7d:	cmp    al,0xdd
  40ef7f:	ins    DWORD PTR es:[edi],dx
  40ef80:	test   al,0x23
  40ef82:	(bad)  
  40ef83:	mov    bh,0x9a
  40ef85:	(bad)  
  40ef86:	cmp    cl,ah
  40ef88:	ins    BYTE PTR es:[edi],dx
  40ef89:	mov    cl,0x4c
  40ef8b:	mov    esp,0x9b39429a
  40ef90:	push   0xffffffe4
  40ef92:	fisttp WORD PTR [ebp-0x7fd65de6]
  40ef98:	add    al,BYTE PTR [eax-0x5a85e143]
  40ef9e:	fwait
  40ef9f:	fwait
  40efa0:	adc    bh,BYTE PTR [eax+0x499fb42b]
  40efa6:	mul    edx
  40efa8:	xchg   edi,eax
  40efa9:	out    dx,eax
  40efaa:	loopne 0x40ef69
  40efac:	jmp    0x40efee
  40efae:	dec    ebp
  40efaf:	pop    ebp
  40efb0:	lods   eax,DWORD PTR ds:[esi]
  40efb1:	or     al,0x24
  40efb3:	xchg   BYTE PTR [edx-0x62b9c913],bh
  40efb9:	test   dl,dh
  40efbb:	push   edi
  40efbc:	jle    0x40ef6d
  40efbe:	clc    
  40efbf:	stos   DWORD PTR es:[edi],eax
  40efc0:	mov    bl,0xc5
  40efc2:	into   
  40efc3:	add    ebp,DWORD PTR [ecx+ecx*8+0x24d6baa1]
  40efca:	out    0xf7,eax
  40efcc:	xchg   edx,eax
  40efcd:	cmp    ch,cl
  40efcf:	pop    ebx
  40efd0:	push   eax
  40efd1:	aam    0xce
  40efd3:	es mov ah,0x77
  40efd6:	jmp    0x624f1e5
  40efdb:	(bad)  
  40efdc:	int3   
  40efdd:	int3   
  40efde:	(bad)  
  40efe0:	cli    
  40efe1:	int    0xc0
  40efe3:	add    DWORD PTR [esi-0x6e838ec3],eax
  40efe9:	iret   
  40efea:	jecxz  0x40f050
  40efec:	xchg   DWORD PTR [edx+0x7b781467],ecx
  40eff2:	or     al,0x5
  40eff4:	lods   al,BYTE PTR ds:[esi]
  40eff5:	in     al,0xa5
  40eff7:	or     esp,DWORD PTR [ecx-0xd99ecf]
  40effd:	bound  ebx,QWORD PTR [ebp+0x601e7b13]
  40f003:	dec    edi
  40f004:	loope  0x40f04b
  40f006:	inc    eax
  40f007:	add    eax,0xb06e9f3e
  40f00c:	jmp    0x8799:0x4bdd8232
  40f013:	push   0x91364512
  40f018:	pop    esi
  40f019:	jmp    0x5c5580c4
  40f01e:	loope  0x40f058
  40f020:	mov    ecx,0xabc67133
  40f025:	jne    0x40f09d
  40f027:	fld    QWORD PTR [ecx]
  40f029:	test   eax,0xf69e26a4
  40f02e:	rcl    DWORD PTR [ebp-0x4c7d2f26],cl
  40f034:	mov    ebx,0x4254e7c1
  40f039:	adc    eax,0x38501c25
  40f03e:	pop    ecx
  40f03f:	adc    ebp,DWORD PTR [ecx]
  40f041:	cmp    BYTE PTR [edx+0x20],dl
  40f044:	sub    DWORD PTR ds:0x94b71178,ecx
  40f04a:	in     al,0x0
  40f04c:	idiv   cl
  40f04e:	ins    DWORD PTR es:[edi],dx
  40f04f:	cmp    eax,0xcc29b1a9
  40f054:	sbb    BYTE PTR [edx+0x42],dh
  40f057:	shl    DWORD PTR [esi+0x3e],cl
  40f05a:	imul   edx,DWORD PTR ds:0xc78a0316,0x7e
  40f061:	into   
  40f062:	arpl   WORD PTR [ebp-0x76],cx
  40f065:	xor    al,BYTE PTR [ebx+0x67c8cb27]
  40f06b:	xchg   ecx,eax
  40f06c:	(bad)  
  40f06e:	ja     0x40f087
  40f070:	cmp    ah,BYTE PTR [edx]
  40f072:	outs   dx,DWORD PTR ds:[esi]
  40f073:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f074:	pop    esp
  40f075:	cwde   
  40f076:	dec    edx
  40f077:	xchg   BYTE PTR [eax],ah
  40f079:	sbb    ch,BYTE PTR [esi]
  40f07b:	xchg   ebp,eax
  40f07c:	add    ch,ch
  40f07e:	add    BYTE PTR [esi],dh
  40f080:	sbb    bl,0xef
  40f083:	push   ebp
  40f084:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f085:	stos   DWORD PTR es:[edi],eax
  40f086:	xor    DWORD PTR [edi],esi
  40f088:	mov    esi,0x84d70ba4
  40f08d:	sub    DWORD PTR ds:0x46b6e607,0xcd5f5af1
  40f097:	adc    eax,0x98645570
  40f09c:	(bad)  
  40f09e:	imul   BYTE PTR [edi]
  40f0a0:	mov    edi,0xba3794d4
  40f0a5:	push   esp
  40f0a6:	in     al,0xed
  40f0a8:	cmp    BYTE PTR ds:0xd9883d36,ah
  40f0ae:	es push edx
  40f0b0:	rol    ecx,0x51
  40f0b3:	jecxz  0x40f075
  40f0b5:	pop    ss
  40f0b6:	jle    0x40f0a7
  40f0b8:	dec    ecx
  40f0b9:	push   ss
  40f0ba:	add    bh,BYTE PTR [ebx-0x4f1ad689]
  40f0c0:	rcr    BYTE PTR [eax],1
  40f0c2:	aas    
  40f0c3:	mov    ch,0x2
  40f0c5:	jnp    0x40f0b4
  40f0c7:	and    eax,DWORD PTR [edx-0x4]
  40f0ca:	shl    DWORD PTR [edi],0x74
  40f0cd:	mov    ebx,0xc08b64fc
  40f0d2:	pop    eax
  40f0d3:	lahf   
  40f0d4:	xor    eax,0x91e28f45
  40f0d9:	jge    0x40f0d3
  40f0db:	mov    eax,0x622ca2ef
  40f0e0:	push   ds
  40f0e1:	je     0x40f091
  40f0e3:	mov    bl,0x6b
  40f0e5:	test   ebx,edx
  40f0e7:	jo     0x40f0c0
  40f0e9:	fidiv  WORD PTR [ecx+eax*2]
  40f0ec:	pop    ss
  40f0ed:	xor    esi,0x57
  40f0f0:	sti    
  40f0f1:	mov    al,BYTE PTR [edx-0x11]
  40f0f4:	test   BYTE PTR [eax],ah
  40f0f6:	push   esp
  40f0f7:	mov    bl,0x90
  40f0f9:	jno    0x40f0e5
  40f0fb:	mov    ebx,0x7dfe4f51
  40f100:	pop    ds
  40f101:	cmp    esp,ecx
  40f103:	jo     0x40f14d
  40f105:	loop   0x40f0a8
  40f107:	imul   ebp,DWORD PTR [edx+edx*2-0x9],0xfffffffb
  40f10c:	pusha  
  40f10d:	mov    eax,0x3ca4dbc2
  40f112:	and    DWORD PTR [edi],0x2ee3f361
  40f118:	pusha  
  40f119:	mov    eax,0xe54f917d
  40f11e:	arpl   WORD PTR [ebx+0x76],bx
  40f121:	add    ebp,DWORD PTR [esi+0x2a527af1]
  40f127:	jmp    0xde0fbeaa
  40f12c:	inc    ebp
  40f12d:	add    al,0x6d
  40f12f:	lahf   
  40f130:	xchg   BYTE PTR [ebp+0x3ca05c50],bl
  40f136:	ds xor eax,0x89d073d1
  40f13c:	xor    al,0x13
  40f13e:	call   0x3512ca4b
  40f143:	iret   
  40f144:	pop    ebx
  40f145:	sahf   
  40f146:	add    eax,0x23548923
  40f14b:	sbb    ah,BYTE PTR ds:0xd742c005
  40f151:	pushf  
  40f152:	dec    ecx
  40f153:	lock jno 0x40f1d4
  40f156:	add    cl,BYTE PTR [edx+ebx*1]
  40f159:	pop    esp
  40f15a:	(bad)  
  40f15b:	cmp    al,0x4b
  40f15d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f15e:	ds mov gs:0x8fe15ea,al
  40f165:	sar    dl,0xd6
  40f168:	icebp  
  40f169:	dec    esp
  40f16a:	gs cli 
  40f16c:	dec    eax
  40f16d:	mov    ah,0x51
  40f16f:	sub    al,BYTE PTR [eax+0x186ddf27]
  40f175:	in     eax,0xf4
  40f177:	pusha  
  40f178:	pop    edx
  40f179:	sub    BYTE PTR [ebx],bh
  40f17b:	add    DWORD PTR [ecx+edi*4],edx
  40f17e:	ja     0x40f12a
  40f180:	and    bl,BYTE PTR [eax+ecx*1-0x84cc9f4]
  40f187:	outs   dx,BYTE PTR ds:[esi]
  40f188:	hlt    
  40f189:	adc    bh,bl
  40f18b:	inc    edx
  40f18c:	or     DWORD PTR [ebp+0x1a],0x6a0a87f1
  40f193:	in     al,dx
  40f194:	inc    eax
  40f195:	(bad)  
  40f196:	in     eax,dx
  40f197:	scas   al,BYTE PTR es:[edi]
  40f198:	ss push edx
  40f19a:	cs sti 
  40f19c:	gs dec esp
  40f19e:	or     bh,bl
  40f1a0:	jle    0x40f1cf
  40f1a2:	pusha  
  40f1a3:	sbb    bl,BYTE PTR [eax]
  40f1a5:	or     DWORD PTR [ebx],edx
  40f1a7:	fsubr  DWORD PTR es:[eax]
  40f1aa:	dec    edi
  40f1ab:	cli    
  40f1ac:	aaa    
  40f1ad:	call   0xef1c0d93
  40f1b2:	shl    DWORD PTR [eax+0x59e4a0cd],0xc5
  40f1b9:	idiv   ebx
  40f1bb:	adc    al,0x44
  40f1bd:	sub    eax,0x5bcc4084
  40f1c2:	jmp    0xc0c8:0x84014b96
  40f1c9:	or     ebx,DWORD PTR [esi+eax*1+0x24]
  40f1cd:	jmp    FWORD PTR [eax-0x52]
  40f1d0:	sbb    BYTE PTR [esi-0x42],0x3a
  40f1d4:	jle    0x40f1b3
  40f1d6:	je     0x40f1f1
  40f1d8:	bound  eax,QWORD PTR [edx-0x75]
  40f1db:	pop    eax
  40f1dc:	pop    ss
  40f1dd:	(bad)  
  40f1de:	and    DWORD PTR [edx-0x3696516d],ebx
  40f1e4:	xchg   ebx,eax
  40f1e5:	je     0x40f249
  40f1e7:	and    esp,DWORD PTR [ecx]
  40f1e9:	pcmpgtd mm1,QWORD PTR [ebp-0x61]
  40f1ed:	(bad)  
  40f1ee:	pop    esp
  40f1ef:	cmc    
  40f1f0:	pop    es
  40f1f1:	daa    
  40f1f2:	test   DWORD PTR [edi+edx*1-0x80],ebx
  40f1f6:	(bad)  
  40f1f7:	push   0xcfe5bd5f
  40f1fc:	xor    ebp,DWORD PTR [ebp-0x2111ee17]
  40f202:	ficom  DWORD PTR [eax]
  40f204:	mov    al,ds:0xb857dd8a
  40f209:	popf   
  40f20a:	fst    QWORD PTR [eax+0x3db439c3]
  40f210:	lock loop 0x40f246
  40f213:	fwait
  40f214:	pop    edi
  40f215:	(bad)  
  40f216:	in     eax,0x95
  40f218:	xor    ah,dl
  40f21a:	sub    ah,BYTE PTR [ebx-0x64]
  40f21d:	pop    esp
  40f21e:	enter  0x166e,0xd0
  40f222:	or     bl,al
  40f224:	clc    
  40f225:	inc    ebp
  40f226:	cmp    ecx,ecx
  40f228:	sahf   
  40f229:	xchg   ebx,eax
  40f22a:	hlt    
  40f22b:	sub    DWORD PTR [eax-0x38d84b8f],eax
  40f231:	fcmovbe st,st(2)
  40f233:	jg     0x40f257
  40f235:	mov    ds:0x6af738c1,eax
  40f23a:	loope  0x40f1d5
  40f23c:	mov    ds:0xba172aca,al
  40f241:	lods   eax,DWORD PTR ds:[esi]
  40f242:	and    al,0xe4
  40f244:	pop    edx
  40f245:	div    BYTE PTR [edx-0x3f]
  40f248:	push   ebx
  40f249:	aaa    
  40f24a:	loopne 0x40f22e
  40f24c:	mov    esp,DWORD PTR [edi-0x7fd84d2d]
  40f252:	aam    0xc0
  40f254:	sub    DWORD PTR [eax],0xffffff9f
  40f257:	dec    edx
  40f258:	push   edx
  40f259:	arpl   dx,bp
  40f25b:	xor    DWORD PTR [ebx],esp
  40f25d:	adc    al,0x2
  40f25f:	adc    al,0x3f
  40f261:	daa    
  40f262:	push   esp
  40f263:	sbb    BYTE PTR [ebp+0x4a],ch
  40f266:	shr    BYTE PTR [ebx],cl
  40f268:	out    0x59,eax
  40f26a:	pop    ebp
  40f26b:	add    eax,0x12998662
  40f270:	mov    esi,0xca360b02
  40f275:	dec    edx
  40f276:	loop   0x40f219
  40f278:	repnz cmp al,0x65
  40f27b:	and    eax,0xe42fec2
  40f280:	retf   0x12b6
  40f283:	ins    BYTE PTR es:[edi],dx
  40f284:	jge    0x40f2c5
  40f286:	int    0x6b
  40f288:	aas    
  40f289:	stc    
  40f28a:	push   edx
  40f28b:	xchg   ebx,eax
  40f28c:	(bad)  
  40f28d:	xlat   BYTE PTR ds:[ebx]
  40f28e:	xchg   edi,eax
  40f28f:	or     ah,BYTE PTR [ebx+0x77d9005e]
  40f295:	lods   al,BYTE PTR ds:[esi]
  40f296:	sbb    al,0x87
  40f298:	add    DWORD PTR [edx+0x167a71fa],0xffffffba
  40f29f:	inc    esp
  40f2a0:	pushf  
  40f2a1:	add    ah,BYTE PTR [ebp+0x46a0b661]
  40f2a7:	sbb    ebp,DWORD PTR [ecx-0x5754214c]
  40f2ad:	push   esp
  40f2ae:	mov    ah,0x41
  40f2b0:	into   
  40f2b1:	fstp   QWORD PTR [edx-0x6deb9ee3]
  40f2b7:	jl     0x40f330
  40f2b9:	and    DWORD PTR [ebp+0x1c192647],ebx
  40f2bf:	dec    BYTE PTR [edi-0x5c]
  40f2c2:	(bad)  
  40f2c3:	gs add al,0x47
  40f2c6:	xchg   BYTE PTR [esi+0x3259b06],bl
  40f2cc:	or     eax,0x8ef26eb4
  40f2d1:	mov    al,0xc1
  40f2d3:	dec    esi
  40f2d4:	jmp    0xe157:0x946e86c5
  40f2db:	repz sub esi,edx
  40f2de:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f2df:	(bad)  
  40f2e0:	sbb    esi,DWORD PTR [ebx-0x24c2e077]
  40f2e6:	mov    ebp,0xa3786e8c
  40f2eb:	mov    ecx,0x8445e8cb
  40f2f0:	pop    ebx
  40f2f1:	adc    DWORD PTR [ebp-0x2c491a51],esp
  40f2f7:	or     al,0xc2
  40f2f9:	mov    esi,0xf66c1a63
  40f2fe:	mov    ah,0x51
  40f300:	inc    eax
  40f301:	out    dx,al
  40f302:	mov    ss,WORD PTR [ebp-0x9]
  40f305:	dec    ebx
  40f306:	nop
  40f307:	mov    ecx,DWORD PTR [edx+0x8]
  40f30a:	stos   DWORD PTR es:[edi],eax
  40f30b:	xchg   edi,eax
  40f30c:	popa   
  40f30d:	adc    eax,0x595de8da
  40f312:	adc    ch,ah
  40f314:	mov    ebp,0x6c436072
  40f319:	or     al,0x21
  40f31b:	and    al,0xff
  40f31d:	add    ebx,DWORD PTR [ecx+0x1e]
  40f320:	and    edx,DWORD PTR [esi+0x3d]
  40f323:	sub    BYTE PTR [eax],ch
  40f325:	fdiv   DWORD PTR [ebp+ebx*1-0x236199de]
  40f32c:	es jne 0x40f348
  40f32f:	repz rcr BYTE PTR [eax+0x12d97a8f],cl
  40f336:	fxch   st(5)
  40f338:	dec    ebp
  40f339:	data16 in al,dx
  40f33b:	lea    edi,[ebp-0xc8d42a9]
  40f341:	and    ebp,ebx
  40f343:	mov    ds:0x157381eb,al
  40f348:	pop    esi
  40f349:	and    BYTE PTR [eax+0x1],cl
  40f34c:	imul   ebx,DWORD PTR [edx],0xffffffaf
  40f34f:	fdiv   st(2),st
  40f351:	repnz inc ecx
  40f353:	mov    ebp,ebx
  40f355:	popf   
  40f356:	cmp    eax,esi
  40f358:	xor    bl,BYTE PTR [ecx+0x5fbb13bb]
  40f35e:	mov    edx,0x463df226
  40f363:	jo     0x40f3ae
  40f365:	and    al,0x31
  40f367:	jns    0x40f3e4
  40f369:	add    DWORD PTR [eax+0x17],eax
  40f36c:	dec    ebx
  40f36d:	scas   eax,DWORD PTR es:[edi]
  40f36e:	xchg   esp,eax
  40f36f:	xor    al,0xaf
  40f371:	mov    edx,DWORD PTR [esi+0x125eceb2]
  40f377:	inc    BYTE PTR [esi]
  40f379:	push   ss
  40f37a:	call   0x36f2abe5
  40f37f:	sbb    DWORD PTR [esi-0x40a0e199],edx
  40f385:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f386:	inc    esi
  40f387:	out    dx,al
  40f388:	mov    cl,0xf0
  40f38a:	mov    esi,0xb6812499
  40f38f:	cdq    
  40f390:	gs mov ebp,0x765f3e2
  40f396:	inc    eax
  40f398:	(bad)  
  40f399:	js     0x40f341
  40f39b:	test   DWORD PTR [esi],0x1a3e96a2
  40f3a1:	call   0x11b000fd
  40f3a6:	aas    
  40f3a7:	mov    ebp,0x451b1e3a
  40f3ac:	dec    ebx
  40f3ad:	xor    ebx,DWORD PTR ds:0x90aed42e
  40f3b3:	pop    es
  40f3b4:	sub    al,0xdb
  40f3b6:	xchg   BYTE PTR [ecx],al
  40f3b8:	inc    esp
  40f3b9:	jge    0x40f41e
  40f3bb:	sbb    al,0x7d
  40f3bd:	mov    cl,0xef
  40f3bf:	pop    es
  40f3c0:	fistp  QWORD PTR [edi+0x781ce08b]
  40f3c6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f3c7:	sub    ah,BYTE PTR [edx]
  40f3c9:	js     0x40f3af
  40f3cb:	add    eax,0x5408c226
  40f3d0:	xchg   edi,eax
  40f3d1:	fstp   DWORD PTR [ecx+0x4a84ba2]
  40f3d7:	pushf  
  40f3d8:	gs pop esi
  40f3da:	sti    
  40f3db:	les    eax,FWORD PTR [ebp+0x41707c98]
  40f3e1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f3e2:	sub    edx,DWORD PTR [ebx]
  40f3e4:	adc    dl,dl
  40f3e6:	sbb    eax,0x7785818d
  40f3eb:	into   
  40f3ec:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f3ed:	jmp    0xbd6a5619
  40f3f2:	icebp  
  40f3f3:	into   
  40f3f4:	into   
  40f3f5:	dec    ebp
  40f3f6:	mov    eax,0x57d08322
  40f3fb:	nop
  40f3fc:	lds    ebp,FWORD PTR [edx+0x20]
  40f3ff:	sbb    cl,BYTE PTR [edx]
  40f401:	ret    
  40f402:	add    BYTE PTR [eax+0x29791723],dh
  40f408:	ror    BYTE PTR [ecx-0x74aaf000],cl
  40f40e:	lods   eax,DWORD PTR ds:[esi]
  40f40f:	sub    eax,0x420dc997
  40f414:	jle    0x40f39b
  40f416:	test   al,0x4e
  40f418:	(bad)  
  40f419:	cmp    dh,BYTE PTR [eax+0x2a]
  40f41c:	and    eax,0x3b32ae9c
  40f421:	stc    
  40f422:	sbb    al,0x5d
  40f424:	retf   0x6ca4
  40f427:	data16 movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f429:	shr    DWORD PTR [edx+0x62b55daf],0x8d
  40f430:	mov    al,ds:0xb1e8edbe
  40f435:	bound  edx,QWORD PTR [esi]
  40f437:	loope  0x40f425
  40f439:	mov    BYTE PTR [esi+0x64],bl
  40f43c:	and    BYTE PTR [edx-0x5a],al
  40f43f:	sbb    eax,DWORD PTR [ebx]
  40f441:	and    edi,eax
  40f443:	inc    eax
  40f444:	jnp    0x40f420
  40f446:	out    dx,eax
  40f447:	dec    ebp
  40f448:	iret   
  40f449:	pop    ebp
  40f44a:	xchg   ecx,eax
  40f44b:	xlat   BYTE PTR ds:[ebx]
  40f44c:	mov    esi,0x48e067c7
  40f451:	mov    dh,0xdf
  40f453:	xor    ebx,esi
  40f455:	inc    edi
  40f456:	mov    dh,0x5e
  40f458:	inc    DWORD PTR [ecx+0x5327a489]
  40f45e:	adc    bh,BYTE PTR [edx]
  40f460:	icebp  
  40f461:	push   eax
  40f462:	clc    
  40f463:	shld   DWORD PTR [edx],esi,cl
  40f466:	xchg   ebp,eax
  40f467:	mov    ch,0x2e
  40f469:	push   0xc45f8cff
  40f46e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f46f:	fs jb  0x40f4ed
  40f472:	outs   dx,DWORD PTR ds:[esi]
  40f473:	mov    bh,0x8
  40f475:	lahf   
  40f476:	in     al,dx
  40f477:	fdiv   DWORD PTR [ecx-0x141de06]
  40f47d:	xor    BYTE PTR [ebx-0x51],dl
  40f480:	mov    al,0x90
  40f482:	int    0xae
  40f484:	outs   dx,BYTE PTR ds:[esi]
  40f485:	mov    al,BYTE PTR [ebx-0x6e]
  40f488:	and    al,0x8d
  40f48a:	sub    al,0x8
  40f48c:	ret    
  40f48d:	add    al,0xef
  40f48f:	mov    ch,BYTE PTR [eax]
  40f491:	adc    esp,DWORD PTR [ecx]
  40f493:	xchg   ecx,eax
  40f494:	add    DWORD PTR [edi],edx
  40f496:	pop    edi
  40f497:	mov    ds:0xf13a2e9e,al
  40f49c:	jnp    0x40f457
  40f49e:	push   eax
  40f49f:	push   ebp
  40f4a0:	ret    
  40f4a1:	pop    es
  40f4a2:	mov    ds:0xc653b845,al
  40f4a7:	push   0xa7c25a09
  40f4ac:	int3   
  40f4ad:	ja     0x40f4d4
  40f4af:	xchg   BYTE PTR [esi+0x3],ch
  40f4b2:	xor    dh,cl
  40f4b4:	fst    DWORD PTR [edi+0x57]
  40f4b7:	loope  0x40f4a5
  40f4b9:	jecxz  0x40f48b
  40f4bb:	sbb    al,0x21
  40f4bd:	and    al,0xa
  40f4bf:	push   0xffffffc3
  40f4c1:	add    DWORD PTR [ecx-0x781bf5ab],ebx
  40f4c7:	shl    BYTE PTR [ebx-0x1f],1
  40f4ca:	nop    DWORD PTR [ecx-0x196b5896]
  40f4d1:	nop
  40f4d2:	or     dl,BYTE PTR [ebx]
  40f4d4:	or     BYTE PTR [edx+0x222f3822],bh
  40f4da:	aad    0x90
  40f4dc:	or     DWORD PTR [esp+edi*2],ebx
  40f4df:	push   edi
  40f4e0:	sub    edi,ecx
  40f4e2:	rcr    DWORD PTR [edx+ecx*2],0x5f
  40f4e6:	xor    BYTE PTR [ecx-0x66],dl
  40f4e9:	or     edx,DWORD PTR [ebx-0x73ff28e1]
  40f4ef:	cmp    eax,0x15df4e33
  40f4f4:	ds psrld mm5,0xc4
  40f4f9:	in     eax,0xca
  40f4fb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f4fc:	loopne 0x40f562
  40f4fe:	sbb    DWORD PTR [edi],ecx
  40f500:	js     0x40f4d7
  40f502:	scas   eax,DWORD PTR es:[edi]
  40f503:	shl    dh,0x15
  40f506:	mov    cl,0x4a
  40f508:	cdq    
  40f509:	or     BYTE PTR [ebx],al
  40f50b:	das    
  40f50c:	push   edi
  40f50d:	jmp    0x2c0:0xe76a121b
  40f514:	(bad)  
  40f515:	mov    al,ds:0x805952c6
  40f51a:	jp     0x40f50e
  40f51c:	fbld   TBYTE PTR [edi]
  40f51e:	pop    esp
  40f51f:	in     eax,0xb0
  40f521:	sub    dh,BYTE PTR [esp]
  40f524:	out    0xc4,eax
  40f526:	or     al,0xf5
  40f528:	rol    DWORD PTR [ebx-0x1a00ae8d],cl
  40f52e:	cli    
  40f52f:	inc    esp
  40f530:	mov    ebx,0xff6f867
  40f535:	inc    ecx
  40f536:	sub    eax,0x8d1717c1
  40f53b:	cs push ebp
  40f53d:	pop    ebp
  40f53e:	sbb    BYTE PTR [edi-0x792dcada],0x38
  40f545:	mov    bh,0xbc
  40f547:	mov    ebp,0xa1fd23f1
  40f54c:	cmp    DWORD PTR [esi+0x68c93345],0x10
  40f553:	ja     0x40f594
  40f555:	shr    DWORD PTR [edx+0x2a5ad3e3],1
  40f55b:	loope  0x40f58f
  40f55d:	xchg   edx,eax
  40f55e:	out    0x8b,al
  40f560:	xchg   ebx,eax
  40f561:	add    eax,0x4ab52e7d
  40f566:	ret    0x1326
  40f569:	outs   dx,DWORD PTR ds:[esi]
  40f56a:	lahf   
  40f56b:	push   ds
  40f56c:	pop    esi
  40f56d:	ret    
  40f56e:	popa   
  40f56f:	fs out dx,eax
  40f571:	aad    0x1a
  40f573:	push   ss
  40f574:	adc    ch,BYTE PTR [ebx]
  40f576:	shl    DWORD PTR [ecx+0x11638d6b],cl
  40f57c:	cld    
  40f57d:	cmc    
  40f57e:	jbe    0x40f5af
  40f580:	mov    bh,0x5a
  40f582:	xchg   edi,eax
  40f583:	fistp  DWORD PTR [esi-0x43]
  40f586:	in     al,dx
  40f587:	retf   0x3384
  40f58a:	pop    esi
  40f58b:	add    BYTE PTR [ebx],ah
  40f58d:	push   cs
  40f58e:	inc    esp
  40f58f:	cmp    BYTE PTR [edi-0x31],dl
  40f592:	sti    
  40f593:	xchg   esp,eax
  40f594:	int    0xf3
  40f596:	div    bl
  40f598:	xor    dl,ah
  40f59a:	mov    DWORD PTR [ebp+0x2f],ebp
  40f59d:	leave  
  40f59e:	dec    ebx
  40f59f:	mov    ds:0x46a8307f,eax
  40f5a4:	mov    ch,0xaa
  40f5a6:	bound  ebp,QWORD PTR [ebx+0x6e40b65b]
  40f5ac:	cs jge 0x40f545
  40f5af:	sbb    eax,0x56f49b39
  40f5b4:	adc    edi,edx
  40f5b6:	pop    eax
  40f5b7:	stos   DWORD PTR es:[edi],eax
  40f5b8:	int    0xd6
  40f5ba:	push   edi
  40f5bb:	add    bh,cl
  40f5bd:	mov    dh,0x76
  40f5bf:	mov    DWORD PTR [edx+esi*1+0x4f405076],edi
  40f5c6:	fistp  WORD PTR [esi+0x77]
  40f5c9:	cli    
  40f5ca:	adc    eax,0xed442536
  40f5cf:	jg     0x40f5f0
  40f5d1:	push   0xffffff88
  40f5d3:	add    ebx,0xfec03b2e
  40f5d9:	arpl   sp,di
  40f5db:	jmp    0x40f57e
  40f5dd:	push   0x6658553d
  40f5e2:	mov    esi,0x98a75f5f
  40f5e7:	addr16 inc ecx
  40f5e9:	adc    DWORD PTR fs:[esi-0x2d64841a],esi
  40f5f0:	ret    
  40f5f1:	(bad)  
  40f5f2:	mov    ds:0x85dc4b41,al
  40f5f7:	pusha  
  40f5f8:	xor    edx,0xb391336e
  40f5fe:	pop    edi
  40f5ff:	lds    ecx,FWORD PTR [ecx+0x2911f173]
  40f605:	arpl   WORD PTR [ebx],di
  40f607:	sbb    DWORD PTR [edx+0x2c5994eb],0x6b
  40f60e:	outs   dx,DWORD PTR ds:[esi]
  40f60f:	jl     0x40f59e
  40f611:	stos   DWORD PTR es:[edi],eax
  40f612:	cmp    dh,BYTE PTR gs:[esi-0x124db707]
  40f619:	pop    ecx
  40f61a:	mov    dh,0x2a
  40f61c:	mov    edx,DWORD PTR [ecx+0x7e04a6d5]
  40f622:	enter  0xfa44,0xea
  40f626:	rol    BYTE PTR [edi+edi*2],1
  40f629:	or     bl,ch
  40f62b:	mov    ecx,0x26c6444c
  40f630:	push   ss
  40f631:	adc    BYTE PTR [eax+esi*2],bl
  40f634:	in     eax,dx
  40f635:	loopne 0x40f602
  40f637:	fstp   TBYTE PTR [ecx-0x37d16f9a]
  40f63d:	icebp  
  40f63e:	bound  eax,QWORD PTR [ebx-0x4a97187]
  40f644:	xchg   BYTE PTR [eax+0x15b5e752],dh
  40f64a:	push   esi
  40f64b:	xchg   edi,eax
  40f64c:	and    BYTE PTR [ecx-0x3a],dl
  40f64f:	(bad)  
  40f650:	in     eax,dx
  40f651:	scas   eax,DWORD PTR es:[edi]
  40f652:	popa   
  40f653:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f654:	xchg   ecx,eax
  40f655:	clc    
  40f656:	mov    ebp,0x731e854e
  40f65b:	xor    DWORD PTR [edx-0x59ebbf89],eax
  40f661:	je     0x40f5ea
  40f663:	jbe    0x40f652
  40f665:	pop    ds
  40f666:	xchg   DWORD PTR [ebp+0x2b],ebx
  40f669:	and    al,0x53
  40f66b:	outs   dx,BYTE PTR ds:[esi]
  40f66c:	xchg   ebp,eax
  40f66d:	push   cs
  40f66e:	in     al,dx
  40f66f:	push   ss
  40f670:	inc    esi
  40f671:	jmp    0xf23e3179
  40f676:	(bad)  
  40f677:	push   ebx
  40f678:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f679:	fst    QWORD PTR [esi+eiz*8+0x11]
  40f67d:	out    dx,eax
  40f67e:	idiv   DWORD PTR [ecx+0x3c79b3b9]
  40f684:	and    ebp,eax
  40f686:	inc    ebx
  40f687:	add    ebp,DWORD PTR ss:[esi-0x2bbff1a2]
  40f68e:	in     eax,dx
  40f68f:	dec    esp
  40f690:	aad    0x76
  40f692:	cdq    
  40f693:	adc    BYTE PTR [ecx-0x15a62376],0xa6
  40f69a:	jmp    0xe9cb35f7
  40f69f:	push   edx
  40f6a0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f6a1:	push   edi
  40f6a2:	push   ecx
  40f6a3:	push   esp
  40f6a4:	popa   
  40f6a5:	jl     0x40f6ed
  40f6a7:	stos   BYTE PTR es:[edi],al
  40f6a8:	inc    eax
  40f6a9:	mov    esp,0x43057ea3
  40f6ae:	sar    DWORD PTR [ecx],1
  40f6b0:	sub    al,0xcd
  40f6b2:	popa   
  40f6b3:	mov    bl,0x37
  40f6b5:	shl    DWORD PTR [edi],1
  40f6b7:	push   eax
  40f6b8:	sbb    DWORD PTR [ecx],eax
  40f6ba:	(bad)  
  40f6bb:	(bad)  
  40f6bc:	pop    ds
  40f6bd:	loopne 0x40f72d
  40f6bf:	xchg   edx,eax
  40f6c0:	xor    al,0x69
  40f6c2:	mov    bl,0x9c
  40f6c4:	ret    
  40f6c5:	adc    DWORD PTR [esi+0x3fea948c],ebp
  40f6cb:	(bad)  
  40f6cc:	in     al,dx
  40f6cd:	mov    ah,BYTE PTR [edx+0x7d]
  40f6d0:	ins    BYTE PTR es:[edi],dx
  40f6d1:	(bad)  
  40f6d2:	imul   BYTE PTR [edx+0x32778f8f]
  40f6d8:	(bad)  
  40f6d9:	cwde   
  40f6da:	scas   eax,DWORD PTR es:[edi]
  40f6db:	dec    ecx
  40f6dc:	adc    DWORD PTR [ecx-0x1e73b6e4],edx
  40f6e2:	xchg   ecx,eax
  40f6e3:	ror    DWORD PTR [edi+0x65],1
  40f6e6:	pop    ecx
  40f6e7:	lea    edi,[esi]
  40f6e9:	jo     0x40f71a
  40f6eb:	add    al,0x93
  40f6ed:	mov    eax,0x64003f36
  40f6f2:	push   ebp
  40f6f3:	scas   al,BYTE PTR es:[edi]
  40f6f4:	adc    ecx,ebx
  40f6f6:	inc    ecx
  40f6f7:	es inc esp
  40f6f9:	adc    cl,BYTE PTR [ebp+0x6f0a278a]
  40f6ff:	sbb    al,0xa3
  40f701:	push   ecx
  40f702:	vshufps xmm4,xmm4,xmm5,0xd4
  40f707:	leave  
  40f708:	stos   BYTE PTR es:[edi],al
  40f709:	mov    bl,0x71
  40f70b:	or     al,0x83
  40f70d:	push   ebx
  40f70e:	xor    edi,ecx
  40f710:	mov    cl,0xe7
  40f712:	jno    0x40f6cb
  40f714:	out    dx,eax
  40f715:	sub    al,0x93
  40f717:	in     al,0xd0
  40f719:	mov    bl,0x25
  40f71b:	lods   al,BYTE PTR ds:[esi]
  40f71c:	arpl   WORD PTR [edi+0x65],cx
  40f71f:	fidivr DWORD PTR [edi-0x5f]
  40f722:	push   0x2f
  40f724:	stc    
  40f725:	sbb    DWORD PTR [ebp+0x6],0x92b6d83f
  40f72c:	stos   BYTE PTR es:[edi],al
  40f72d:	icebp  
  40f72e:	shl    BYTE PTR [ebx],1
  40f730:	jg     0x40f7ac
  40f732:	and    BYTE PTR [ecx+0x17],ch
  40f735:	mov    cl,BYTE PTR [edx-0x2c4560f5]
  40f73b:	out    dx,eax
  40f73c:	add    ch,BYTE PTR [esi]
  40f73e:	data16 (bad) 
  40f740:	inc    ebx
  40f741:	sub    BYTE PTR [ecx+0x31453a56],dh
  40f747:	push   es
  40f748:	nop
  40f749:	das    
  40f74a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f74b:	fldcw  WORD PTR [edx+0x78]
  40f74e:	pop    edi
  40f74f:	aaa    
  40f750:	push   esp
  40f751:	outs   dx,DWORD PTR ds:[esi]
  40f752:	frstor gs:[eax-0x589e356c]
  40f759:	sbb    BYTE PTR [eax+0x38],ah
  40f75c:	jne    0x40f7cf
  40f75e:	ds fwait
  40f760:	pushf  
  40f761:	push   ss
  40f762:	in     eax,dx
  40f763:	jbe    0x40f7a9
  40f765:	(bad)  
  40f767:	jns    0x40f746
  40f769:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f76a:	add    eax,0xb7aa52fc
  40f76f:	ins    DWORD PTR es:[edi],dx
  40f770:	fiadd  WORD PTR [edi-0x18]
  40f773:	repnz retf 0x89cf
  40f777:	xor    eax,0xb463969f
  40f77c:	pop    ss
  40f77d:	jae    0x40f710
  40f77f:	pop    ebx
  40f780:	xchg   edx,eax
  40f781:	lds    ecx,FWORD PTR [ecx+0x20]
  40f784:	ds mov dl,0x3e
  40f787:	jb     0x40f7ae
  40f789:	mov    cl,0xf6
  40f78b:	mov    cs,WORD PTR [edi+ecx*8]
  40f78e:	arpl   WORD PTR [esi+0x63b2bbf2],di
  40f794:	fsub   DWORD PTR [esi+esi*2-0x18b4c910]
  40f79b:	cmp    DWORD PTR [edi-0x64bfc3a1],eax
  40f7a1:	pusha  
  40f7a2:	stc    
  40f7a3:	pop    ecx
  40f7a4:	adc    eax,0x2ff0296a
  40f7a9:	cwde   
  40f7aa:	mov    ecx,0xfda60714
  40f7af:	and    DWORD PTR [ebx],edi
  40f7b1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f7b2:	lahf   
  40f7b3:	or     BYTE PTR [edi],ah
  40f7b5:	inc    esp
  40f7b6:	scas   al,BYTE PTR es:[edi]
  40f7b7:	or     BYTE PTR [ebp+0x4e08f33d],0xb3
  40f7be:	jp     0x40f7e5
  40f7c0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f7c1:	sbb    esp,DWORD PTR [eax]
  40f7c3:	sub    al,0x45
  40f7c5:	mov    ecx,0x48052d04
  40f7ca:	retf   
  40f7cb:	pushf  
  40f7cc:	mov    ch,0xd1
  40f7ce:	dec    esp
  40f7cf:	std    
  40f7d0:	(bad)  [edx]
  40f7d2:	cmp    DWORD PTR [eax],ebx
  40f7d4:	jge    0x40f80c
  40f7d6:	xor    ecx,DWORD PTR [edi+0x44]
  40f7d9:	mov    ecx,0xf39c51f
  40f7de:	inc    eax
  40f7df:	or     eax,0x297e9e9f
  40f7e4:	mov    bh,0x90
  40f7e6:	test   DWORD PTR [edx+0x16ccc80f],0x28974cf
  40f7f0:	xor    al,0x12
  40f7f2:	mov    ebp,0x20ae8523
  40f7f7:	retf   
  40f7f8:	adc    bh,BYTE PTR [ebp+0xbb82dd9]
  40f7fe:	dec    edx
  40f7ff:	adc    ebp,DWORD PTR [esi+0x71d9c526]
  40f805:	jmp    0xeb9b:0x4e3e4003
  40f80c:	leave  
  40f80d:	jl     0x40f858
  40f80f:	(bad)  
  40f810:	(bad)  
  40f812:	shr    BYTE PTR [ebp+0x73],cl
  40f815:	xor    al,0x32
  40f817:	dec    eax
  40f818:	pushf  
  40f819:	lock gs pop ebp
  40f81c:	loope  0x40f7c0
  40f81e:	in     al,dx
  40f81f:	std    
  40f820:	test   BYTE PTR [ebp+ecx*8+0x1051e878],ch
  40f827:	adc    dh,bl
  40f829:	mov    ecx,0x84fdd9e
  40f82e:	lahf   
  40f82f:	(bad)  
  40f830:	xchg   esp,eax
  40f831:	dec    eax
  40f832:	pushw  cs
  40f834:	jecxz  0x40f7cb
  40f836:	lods   eax,DWORD PTR ds:[esi]
  40f837:	cmp    esp,DWORD PTR [edx]
  40f839:	mov    eax,ds:0x5a3bcfb3
  40f83e:	inc    ecx
  40f83f:	sbb    DWORD PTR [edx],esp
  40f841:	xor    BYTE PTR [esi-0x145e35fd],al
  40f847:	pushf  
  40f848:	fbld   TBYTE PTR [edx]
  40f84a:	cdq    
  40f84b:	shl    BYTE PTR [ebx+edi*8-0x5484e246],1
  40f852:	(bad)  
  40f853:	fsubp  st(3),st
  40f855:	push   0x51f8c2c8
  40f85a:	push   0xadf1cfc3
  40f85f:	push   ebx
  40f860:	xchg   esi,eax
  40f861:	inc    esi
  40f862:	mov    dl,0x62
  40f864:	or     ebx,DWORD PTR [ecx-0x56]
  40f867:	popf   
  40f868:	xlat   BYTE PTR ds:[ebx]
  40f869:	inc    edx
  40f86a:	test   eax,0x7dc8cd46
  40f86f:	(bad)  
  40f870:	mov    edi,DWORD PTR [ebp+0x396e099e]
  40f876:	cwde   
  40f877:	mov    esi,0xfa8974c7
  40f87c:	push   ds
  40f87d:	mov    dh,0x2b
  40f87f:	int    0x3b
  40f881:	sub    al,BYTE PTR [ebx-0x3]
  40f884:	xor    DWORD PTR [ecx-0x2],ebx
  40f887:	pop    edx
  40f888:	es dec edi
  40f88a:	mov    ebp,0xfcc1391a
  40f88f:	sbb    ah,bh
  40f891:	repz sbb eax,DWORD PTR [ecx]
  40f894:	pop    es
  40f895:	stos   BYTE PTR es:[edi],al
  40f896:	and    eax,0xc6a17b47
  40f89b:	sahf   
  40f89c:	cmp    cl,BYTE PTR [edi-0x869da8]
  40f8a2:	xor    eax,0x597eea4c
  40f8a7:	repz add ch,BYTE PTR [edx]
  40f8aa:	cmp    edx,DWORD PTR [ebx+0x7b]
  40f8ad:	ret    0xb5cc
  40f8b0:	adc    eax,0x56f61207
  40f8b5:	or     ch,BYTE PTR [esi]
  40f8b7:	pop    ss
  40f8b8:	shr    DWORD PTR [ebx+0x19a55af6],1
  40f8be:	fsub   QWORD PTR ds:0x4a90226e
  40f8c4:	imul   edx,DWORD PTR ds:0x6fbde086,0xcd70c0a3
  40f8ce:	dec    ebx
  40f8cf:	lods   eax,DWORD PTR ds:[esi]
  40f8d0:	or     ah,BYTE PTR [ecx+0x2]
  40f8d3:	pop    eax
  40f8d4:	jge    0x40f898
  40f8d6:	fwait
  40f8d7:	int    0xc7
  40f8d9:	sub    bl,BYTE PTR [edi]
  40f8db:	fs loopne 0x40f953
  40f8de:	out    dx,al
  40f8df:	dec    edi
  40f8e0:	mov    bh,BYTE PTR [edx]
  40f8e2:	add    BYTE PTR [ecx+0x51],ch
  40f8e5:	xchg   ebp,eax
  40f8e6:	arpl   WORD PTR [ebp+0x16],sp
  40f8e9:	cli    
  40f8ea:	cld    
  40f8eb:	and    eax,0x1a6d875d
  40f8f0:	mov    ebx,ds
  40f8f2:	in     eax,0xd4
  40f8f4:	adc    cl,ch
  40f8f6:	mov    cl,0xd5
  40f8f8:	push   esi
  40f8f9:	scas   al,BYTE PTR es:[edi]
  40f8fa:	push   esi
  40f8fb:	loop   0x40f8f2
  40f8fd:	or     BYTE PTR [esi+0x0],bl
  40f900:	fisub  DWORD PTR [ecx]
  40f902:	ins    BYTE PTR es:[edi],dx
  40f903:	jle    0x40f8b4
  40f905:	mov    cl,0xb3
  40f907:	cmc    
  40f908:	jle    0x40f93a
  40f90a:	jge    0x40f8eb
  40f90c:	or     al,0x70
  40f90e:	push   0x9b7c3a04
  40f913:	stc    
  40f914:	popa   
  40f915:	pop    ecx
  40f916:	push   cs
  40f917:	xor    ebx,DWORD PTR [ecx]
  40f919:	fs or  ch,bl
  40f91c:	jae    0x40f98c
  40f91e:	xchg   edx,eax
  40f91f:	xchg   edx,eax
  40f920:	jmp    0xc984b902
  40f925:	stos   DWORD PTR es:[edi],eax
  40f926:	out    dx,al
  40f927:	shr    cl,cl
  40f929:	aam    0xda
  40f92b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f92c:	test   DWORD PTR [bp+0x60],edi
  40f930:	adc    DWORD PTR [edi*8+0x3a61dee2],edx
  40f937:	add    ebp,DWORD PTR [eax+0x6e]
  40f93a:	stos   BYTE PTR es:[edi],al
  40f93b:	cmp    edi,DWORD PTR [esi+0x3ead2eaa]
  40f941:	test   edi,ebx
  40f943:	loope  0x40f915
  40f945:	dec    ebp
  40f946:	lods   eax,DWORD PTR ds:[esi]
  40f947:	mov    edi,0x96c7a4e6
  40f94c:	imul   esp,DWORD PTR [edi+ebx*2-0x1b],0xffffffd2
  40f951:	mov    ds:0x1b2bdab3,eax
  40f956:	add    ch,cl
  40f958:	xor    ebp,DWORD PTR [edx+esi*1-0x57]
  40f95c:	xchg   ecx,eax
  40f95d:	outs   dx,DWORD PTR ds:[esi]
  40f95e:	jae    0x40f93c
  40f960:	js     0x40f989
  40f962:	jp     0x40f9d3
  40f964:	ret    
  40f965:	add    BYTE PTR [ecx],0x60
  40f968:	add    eax,ecx
  40f96a:	pop    ecx
  40f96b:	(bad)  
  40f96c:	test   eax,0x44d1cd1c
  40f971:	mov    eax,ds:0xcd9a38dc
  40f976:	out    0x5a,eax
  40f978:	adc    DWORD PTR [edx],esi
  40f97a:	xchg   ecx,eax
  40f97b:	mov    edx,?
  40f97d:	imul   edi,DWORD PTR [ecx-0x4d],0x18b589ac
  40f984:	and    ecx,eax
  40f986:	out    dx,al
  40f987:	outs   dx,DWORD PTR ds:[esi]
  40f988:	idiv   DWORD PTR [edx]
  40f98a:	call   0x12aae2bd
  40f98f:	pop    ds
  40f990:	pop    esi
  40f991:	cmp    ebp,eax
  40f993:	dec    edi
  40f994:	xchg   ebx,eax
  40f995:	retf   0x6ddb
  40f998:	mov    ebx,0xb0072d5a
  40f99d:	enter  0x5c14,0x91
  40f9a1:	popf   
  40f9a2:	and    DWORD PTR [ebx-0x54d2a41a],esp
  40f9a8:	sub    eax,0x8326a657
  40f9ad:	sbb    BYTE PTR [eax-0x7e],bh
  40f9b0:	mov    WORD PTR [eax],ss
  40f9b2:	push   ebp
  40f9b3:	retf   0x7c0b
  40f9b6:	es stos DWORD PTR es:[edi],eax
  40f9b8:	outs   dx,BYTE PTR ds:[esi]
  40f9b9:	in     al,0xa
  40f9bb:	push   edx
  40f9bc:	out    dx,al
  40f9bd:	(bad)  
  40f9be:	fdivr  DWORD PTR [ebp+0x59d3a247]
  40f9c4:	mov    esi,0x4c6d908b
  40f9c9:	cmp    DWORD PTR [edi],esi
  40f9cb:	test   eax,0xb915bb68
  40f9d0:	add    ah,ah
  40f9d2:	ds sub eax,0xe46edb79
  40f9d8:	xchg   DWORD PTR [ecx+0x27d2fee3],ebx
  40f9de:	dec    eax
  40f9df:	and    al,0xc6
  40f9e1:	jmp    DWORD PTR [ecx]
  40f9e3:	scas   al,BYTE PTR es:[edi]
  40f9e4:	daa    
  40f9e5:	xor    DWORD PTR [eax-0x19c21bc6],esi
  40f9eb:	pop    eax
  40f9ec:	mov    BYTE PTR [ebx+0x7c975f9],ch
  40f9f2:	ss xchg edx,eax
  40f9f4:	das    
  40f9f5:	cmp    al,0x5f
  40f9f7:	dec    edx
  40f9f8:	mov    al,ds:0xfff1571d
  40f9fd:	sbb    esi,DWORD PTR [edi+0xb301f9c]
  40fa03:	addr16 rcl bl,0x66
  40fa07:	cmp    eax,0x422b8e94
  40fa0c:	fidivr DWORD PTR [eax]
  40fa0e:	jns    0x40f9c0
  40fa10:	std    
  40fa11:	sub    DWORD PTR [ecx],edx
  40fa13:	dec    eax
  40fa14:	xchg   edi,eax
  40fa15:	loope  0x40fa11
  40fa17:	or     DWORD PTR [ecx+0x40471dbe],edx
  40fa1d:	adc    BYTE PTR [esi+0x5347b01f],0xfb
  40fa24:	dec    ebp
  40fa25:	push   ebp
  40fa26:	fild   QWORD PTR [edi+0x65b3a4ae]
  40fa2c:	mov    ch,0x5e
  40fa2e:	jmp    0xee97:0x23eed057
  40fa35:	cld    
  40fa36:	mov    ah,0x3a
  40fa38:	push   esi
  40fa39:	push   edx
  40fa3a:	dec    ecx
  40fa3b:	mov    al,ds:0xf511fb0b
  40fa40:	push   ecx
  40fa41:	(bad)  
  40fa42:	fist   WORD PTR [edi-0x149df3fe]
  40fa48:	add    cl,0x38
  40fa4b:	push   edi
  40fa4c:	pop    esp
  40fa4d:	repz or al,BYTE PTR [ebp+ebp*8-0x1d]
  40fa52:	or     eax,0x2802a4b5
  40fa57:	sub    BYTE PTR [edi+esi*1+0x225e6216],0x6e
  40fa5f:	pop    es
  40fa60:	fs aas 
  40fa62:	push   ebx
  40fa63:	inc    ebx
  40fa64:	imul   esp,esi,0x4e
  40fa67:	mov    dh,BYTE PTR [edi+0x61]
  40fa6a:	scas   al,BYTE PTR es:[edi]
  40fa6b:	sbb    DWORD PTR [ebx+eax*8+0x6c],ebp
  40fa6f:	cmp    eax,DWORD PTR [esi+ebx*2+0x3]
  40fa73:	xchg   ecx,eax
  40fa74:	fldcw  WORD PTR [esi]
  40fa76:	aad    0x1
  40fa78:	stc    
  40fa79:	xlat   BYTE PTR ds:[ebx]
  40fa7a:	inc    esp
  40fa7b:	fstp   TBYTE PTR [ecx]
  40fa7d:	in     al,dx
  40fa7e:	xor    BYTE PTR [edx+0x57],dl
  40fa81:	dec    edi
  40fa82:	repnz mov cl,0x5a
  40fa85:	out    dx,al
  40fa86:	jmp    0x40fa57
  40fa88:	lods   al,BYTE PTR ds:[esi]
  40fa89:	mov    bl,0x61
  40fa8b:	push   0xffffff93
  40fa8d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40fa8e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40fa8f:	push   edx
  40fa90:	jmp    DWORD PTR [edx+eiz*4+0x5f]
  40fa94:	call   0xe41647d4
  40fa99:	pushf  
  40fa9a:	xchg   DWORD PTR [esi+eax*8+0x277ca1cb],ebx
  40faa1:	stos   BYTE PTR es:[edi],al
  40faa2:	mov    gs,ebp
  40faa4:	dec    ebx
  40faa5:	shr    DWORD PTR [edi+edi*4],1
  40faa8:	iret   
  40faa9:	rol    DWORD PTR [ecx],cl
  40faab:	stos   DWORD PTR es:[edi],eax
  40faac:	cli    
  40faad:	push   ebx
  40faae:	and    al,0xf5
  40fab0:	pop    ebp
  40fab1:	sbb    al,0x1d
  40fab3:	pop    ss
  40fab4:	ret    0x22fe
  40fab7:	cs mov dh,0x20
  40faba:	fsub   st,st(1)
  40fabc:	sub    DWORD PTR [edx-0x50425073],ebx
  40fac2:	inc    edx
  40fac3:	and    ebx,eax
  40fac5:	cld    
  40fac6:	sbb    esp,DWORD PTR [edx+0x47]
  40fac9:	rcr    BYTE PTR [esi+0x796e1097],1
  40facf:	xchg   ebx,eax
  40fad0:	xor    al,0xc6
  40fad2:	shl    BYTE PTR [edi],1
  40fad4:	mov    bl,0x14
  40fad6:	imul   edx,DWORD PTR [esp+eiz*2-0x2d6ac895],0xc0869b92
  40fae1:	push   ebp
  40fae2:	xchg   ecx,eax
  40fae3:	cmp    edx,eax
  40fae5:	mov    ebp,0x6011d9ef
  40faea:	loopne 0x40fb53
  40faec:	sub    eax,0xb7e4fd33
  40faf1:	jmp    0xb682:0x6bc198d2
  40faf8:	cmp    BYTE PTR [ebx+0x6a26a143],al
  40fafe:	fst    QWORD PTR [ecx+edi*1]
  40fb01:	rcr    DWORD PTR [ecx],1
  40fb03:	enter  0x47c1,0xb0
  40fb07:	pop    ecx
  40fb08:	xchg   edi,eax
  40fb09:	cmp    BYTE PTR [eax+0x41fe1a45],dh
  40fb0f:	push   ebx
  40fb10:	push   es
  40fb11:	cmp    ebx,DWORD PTR [ebx-0xa]
  40fb14:	scas   eax,DWORD PTR es:[edi]
  40fb15:	mov    al,0xd5
  40fb17:	fs push cs
  40fb19:	mov    WORD PTR [esi+0x7b0f9939],cs
  40fb1f:	pop    ebx
  40fb20:	neg    BYTE PTR [eiz*2-0x685960e2]
  40fb27:	sub    edx,ebx
  40fb29:	popf   
  40fb2a:	jecxz  0x40fb79
  40fb2c:	cld    
  40fb2d:	mov    esp,0xbd81fdb3
  40fb32:	push   ds
  40fb33:	mov    edi,DWORD PTR [ecx]
  40fb35:	jg     0x40fadd
  40fb37:	repnz test al,0x47
  40fb3a:	mov    ah,BYTE PTR [esi+0x29]
  40fb3d:	enter  0x295c,0xf6
  40fb41:	sti    
  40fb42:	fisubr WORD PTR [ebx+0x5a]
  40fb45:	stc    
  40fb46:	xchg   esi,eax
  40fb47:	lds    esp,FWORD PTR ds:0xd99efbdc
  40fb4d:	ja     0x40fb11
  40fb4f:	aad    0x8e
  40fb51:	xlat   BYTE PTR ds:[ebx]
  40fb52:	inc    edi
  40fb53:	add    dh,ch
  40fb55:	jmp    FWORD PTR [edi+edi*4]
  40fb58:	pop    ebx
  40fb59:	xor    eax,0x49f137f6
  40fb5e:	xor    DWORD PTR [esi+ecx*4+0xc2ee5ac],esp
  40fb65:	aaa    
  40fb66:	mov    ch,0x93
  40fb68:	or     al,0x94
  40fb6a:	pushf  
  40fb6b:	push   ds
  40fb6c:	xchg   ebp,eax
  40fb6d:	xor    dl,BYTE PTR [edx+0x14]
  40fb70:	cmp    al,0xb2
  40fb72:	repnz out dx,eax
  40fb74:	les    esp,FWORD PTR [ebx]
  40fb76:	daa    
  40fb77:	and    al,0x3e
  40fb79:	sbb    ebp,DWORD PTR [esi+0x17e6183]
  40fb7f:	add    eax,0x67beeb94
  40fb84:	ja     0x40fbe8
  40fb86:	jp     0x40fb50
  40fb88:	in     al,dx
  40fb89:	xchg   edx,eax
  40fb8a:	lods   al,BYTE PTR ds:[esi]
  40fb8b:	nop
  40fb8c:	test   BYTE PTR ds:0x502da801,bl
  40fb92:	bound  esp,QWORD PTR [ebp+0x53595ad1]
  40fb98:	rcr    BYTE PTR [edi-0x40],0xdb
  40fb9c:	inc    edi
  40fb9d:	add    eax,0xa6a93a54
  40fba2:	aam    0x35
  40fba4:	idiv   BYTE PTR [ebx-0x48]
  40fba7:	cmp    edx,DWORD PTR [di]
  40fbaa:	test   DWORD PTR [esi-0x2a],esp
  40fbad:	jmp    0xd8708d56
  40fbb2:	adc    cl,BYTE PTR [eax-0x51]
  40fbb5:	repz scas al,BYTE PTR es:[edi]
  40fbb7:	or     edx,DWORD PTR [ebx-0x16]
  40fbba:	outs   dx,DWORD PTR ds:[esi]
  40fbbb:	pushf  
  40fbbc:	jmp    0x40fc3d
  40fbbe:	dec    edx
  40fbbf:	add    eax,0x2b35c6d
  40fbc4:	mov    edi,0xf18b89fd
  40fbc9:	loopne 0x40fba8
  40fbcb:	sub    eax,ebx
  40fbcd:	dec    edi
  40fbce:	jecxz  0x40fc4d
  40fbd0:	or     al,0xe7
  40fbd2:	les    esp,FWORD PTR [ecx-0x30]
  40fbd5:	(bad)  
  40fbd6:	scas   eax,DWORD PTR es:[edi]
  40fbd7:	pop    ecx
  40fbd8:	dec    ebp
  40fbd9:	cwde   
  40fbda:	cwde   
  40fbdb:	stos   BYTE PTR es:[edi],al
  40fbdc:	fistp  DWORD PTR [ebp-0x17]
  40fbdf:	mov    edi,0xd2c1ba2e
  40fbe4:	adc    al,0xcb
  40fbe6:	and    al,0xd6
  40fbe8:	pop    ecx
  40fbe9:	jno    0x40fc36
  40fbeb:	or     ebp,esi
  40fbed:	mov    bh,0x3a
  40fbef:	pop    ecx
  40fbf0:	(bad)  
  40fbf1:	xor    DWORD PTR [edi],eax
  40fbf3:	popaw  
  40fbf5:	fild   WORD PTR gs:[edx+0x72]
  40fbf9:	adc    BYTE PTR [eax-0x36ab64b9],dh
  40fbff:	push   ebx
  40fc00:	cmp    DWORD PTR [ebx+0x4],esp
  40fc03:	dec    ebp
  40fc04:	fsub   QWORD PTR [ebx]
  40fc06:	push   ecx
  40fc07:	cwde   
  40fc08:	scas   al,BYTE PTR es:[edi]
  40fc09:	aad    0xce
  40fc0b:	jp     0x40fbec
  40fc0d:	(bad)  
  40fc0e:	cdq    
  40fc0f:	sub    ebp,edi
  40fc11:	cmp    ecx,DWORD PTR [edi]
  40fc13:	mov    eax,fs:0x21726a87
  40fc19:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40fc1a:	sub    al,0xb6
  40fc1c:	xchg   edx,eax
  40fc1d:	aaa    
  40fc1e:	mov    esi,0x8e75f0dd
  40fc23:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40fc24:	dec    edi
  40fc25:	es xchg ebx,eax
  40fc27:	or     DWORD PTR [edi-0x26],eax
  40fc2a:	repnz ins DWORD PTR es:[edi],dx
  40fc2c:	jmp    0x40fca3
  40fc2e:	test   al,0xd1
  40fc30:	jmp    DWORD PTR [edx+0x69]
  40fc33:	and    DWORD PTR [edx],esi
  40fc35:	sbb    DWORD PTR [ecx-0x34b5d1b8],esi
  40fc3b:	sar    BYTE PTR [ebx+0xf],0xff
  40fc3f:	retf   0x6890
  40fc42:	and    bh,BYTE PTR [edx+0x49]
  40fc45:	sysenter 
  40fc47:	sbb    al,0xc5
  40fc49:	mov    eax,ds:0x1ff8aa7
  40fc4e:	daa    
  40fc4f:	mov    ds:0xf3c41b72,eax
  40fc54:	pop    esp
  40fc55:	data16 xor cl,BYTE PTR [ebp+0x2a]
  40fc59:	aam    0x1e
  40fc5b:	pushf  
  40fc5c:	mov    al,ds:0x717feaab
  40fc61:	xor    eax,0xc6fdf0fa
  40fc66:	jb     0x40fcd6
  40fc68:	les    esp,FWORD PTR ds:0x94f4c19
  40fc6e:	bound  ebp,QWORD PTR [ebx+0x6ebb4b37]
  40fc74:	push   ecx
  40fc75:	loopne 0x40fbfb
  40fc77:	mov    esp,0xf99b71e5
  40fc7c:	cmp    ebp,0x10
  40fc7f:	fwait
  40fc80:	jnp    0x40fcf5
  40fc82:	das    
  40fc83:	add    al,0x4f
  40fc85:	cmc    
  40fc86:	xchg   bl,bl
  40fc88:	loop   0x40fcfd
  40fc8a:	sub    BYTE PTR [edi+0x6986e554],cl
  40fc90:	jl     0x40fc48
  40fc92:	enter  0xb1e2,0x45
  40fc96:	jae    0x40fc32
  40fc98:	add    dh,BYTE PTR [edx]
  40fc9a:	pop    es
  40fc9b:	push   ds
  40fc9c:	call   0x8d50:0xd297494b
  40fca3:	test   bh,bh
  40fca5:	jmp    0x40fc42
  40fca7:	sub    al,0x66
  40fca9:	jmp    0x40fd11
  40fcab:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40fcac:	out    0x8d,al
  40fcae:	imul   esi,DWORD PTR [eax],0xfffffffa
  40fcb1:	sbb    ebx,ecx
  40fcb3:	xor    eax,0x6f8ce826
  40fcb8:	cli    
  40fcb9:	mov    bl,0x8a
  40fcbb:	adc    bl,bl
  40fcbd:	icebp  
  40fcbe:	add    eax,0xa9729ea2
  40fcc3:	push   0xffffffdb
  40fcc5:	retf   0x8bbf
  40fcc8:	jmp    0xde06:0x6c89bf35
  40fccf:	and    BYTE PTR [esi],cl
  40fcd1:	cmp    DWORD PTR [esi],esi
  40fcd3:	jge    0x40fcd5
  40fcd5:	mov    WORD PTR [eax],?
  40fcd7:	pop    edx
  40fcd8:	test   al,0xd4
  40fcda:	and    al,0xcf
  40fcdc:	out    0x42,al
  40fcde:	sahf   
  40fcdf:	not    BYTE PTR [ebp+eiz*2-0x320f3e08]
  40fce6:	out    0x9e,al
  40fce8:	push   eax
  40fce9:	xchg   esi,eax
  40fcea:	js     0x40fcd0
  40fcec:	mov    bh,0xb6
  40fcee:	sub    BYTE PTR [esi],cl
  40fcf0:	xchg   edi,eax
  40fcf1:	outs   dx,DWORD PTR ds:[esi]
  40fcf2:	jbe    0x40fc84
  40fcf4:	push   ds
  40fcf5:	sub    dl,BYTE PTR ds:0xdaac88c0
  40fcfb:	ss sub al,0x37
  40fcfe:	imul   ecx,DWORD PTR [esi],0xffffff84
  40fd01:	lock and al,0x2c
  40fd04:	and    BYTE PTR ds:0xc8b4e50,bl
  40fd0a:	dec    esp
  40fd0b:	sub    al,0xe1
  40fd0d:	mov    eax,DWORD PTR [eax+0x3f]
  40fd10:	push   esi
  40fd11:	rol    DWORD PTR [eax-0x9],1
  40fd14:	pop    ebx
  40fd15:	pop    eax
  40fd16:	mov    edi,0x7ef6f979
  40fd1b:	inc    esp
  40fd1c:	das    
  40fd1d:	push   esi
  40fd1e:	inc    edi
  40fd1f:	lea    esp,[edx-0x40]
  40fd22:	cmp    al,0xda
  40fd24:	repz out dx,al
  40fd26:	mov    DWORD PTR ds:[ebp+0x7220306b],edi
  40fd2d:	aaa    
  40fd2e:	sub    eax,0xe4c1a5f1
  40fd34:	add    dl,bh
  40fd36:	push   ebx
  40fd37:	dec    eax
  40fd38:	cmp    esp,DWORD PTR [ebx+0x50]
  40fd3b:	xchg   BYTE PTR [ebp-0x50],dh
  40fd3e:	shl    DWORD PTR [ecx+0x6ffa4ded],cl
  40fd44:	mov    ch,0x6
  40fd46:	cmp    edi,esi
  40fd48:	fs adc al,0x40
  40fd4b:	pop    ebp
  40fd4c:	mov    edx,DWORD PTR [eax]
  40fd4e:	pop    ds
  40fd4f:	push   ds
  40fd50:	xchg   edx,eax
  40fd51:	or     BYTE PTR [edx],0x6
  40fd54:	clc    
  40fd55:	(bad)  
  40fd56:	in     al,dx
  40fd57:	in     eax,dx
  40fd58:	mov    esp,0x3c597a18
  40fd5d:	(bad)  
  40fd5f:	fcom   DWORD PTR [eax-0x2c316247]
  40fd65:	adc    eax,DWORD PTR [ebx-0x53e8ad4c]
  40fd6b:	shr    DWORD PTR [ebx],cl
  40fd6d:	test   dh,al
  40fd6f:	mov    bl,0xa5
  40fd71:	rcl    BYTE PTR [ecx+0x2],0xe7
  40fd75:	js     0x40fd06
  40fd77:	stc    
  40fd78:	cmp    BYTE PTR [ebp-0x4e],ch
  40fd7b:	bound  ebx,QWORD PTR [edx]
  40fd7d:	sbb    esi,edi
  40fd7f:	xchg   ebx,eax
  40fd80:	hlt    
  40fd81:	jno    0x40fd33
  40fd83:	xchg   esi,eax
  40fd84:	aaa    
  40fd85:	cdq    
  40fd86:	push   ss
  40fd87:	jge    0x40fdcb
  40fd89:	inc    edi
  40fd8a:	mov    bh,BYTE PTR [eax+0x7b3b7cca]
  40fd90:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40fd91:	loope  0x40fd3d
  40fd93:	loope  0x40fd4c
  40fd95:	mov    gs,WORD PTR [edx+0x2a]
  40fd98:	fld    DWORD PTR [edx-0x13b5d157]
  40fd9e:	push   0xfffffffc
  40fda0:	into   
  40fda1:	xor    BYTE PTR [esi],al
  40fda3:	xor    al,0x7b
  40fda5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40fda6:	pop    ecx
  40fda7:	into   
  40fda8:	int3   
  40fda9:	adc    ch,BYTE PTR [esi-0x22967b62]
  40fdaf:	fldcw  WORD PTR [ebp-0x183ce28e]
  40fdb5:	cmp    ebx,DWORD PTR [ebp+ebx*8+0x3c181063]
  40fdbc:	jae    0x40fda0
  40fdbe:	(bad)  
  40fdbf:	out    dx,al
  40fdc0:	push   es
  40fdc1:	xor    al,0xea
  40fdc3:	cmc    
  40fdc4:	(bad)  [esi-0x453024fd]
  40fdca:	call   0xe4da:0xa54c1e14
  40fdd1:	sub    DWORD PTR [esi+0x148ed950],ebp
  40fdd7:	add    esi,DWORD PTR ds:0xf6dc90aa
  40fddd:	je     0x40fe24
  40fddf:	js     0x40fe3a
  40fde1:	jae    0x40fe3f
  40fde3:	inc    eax
  40fde4:	aam    0xe6
  40fde6:	imul   eax,DWORD PTR [esi+0x1f31c4f5],0x331da62f
  40fdf0:	daa    
  40fdf1:	ds push 0xffffff91
  40fdf4:	sbb    bh,bh
  40fdf6:	ret    0x586e
  40fdf9:	pop    eax
  40fdfa:	mov    cl,0x91
  40fdfc:	or     eax,0x15e68c33
  40fe01:	adc    dh,bl
  40fe03:	(bad)  
  40fe04:	pop    ss
  40fe05:	sub    dl,BYTE PTR [edx]
  40fe07:	retf   0x7fbd
  40fe0a:	add    DWORD PTR [edx-0x100d4e86],esi
  40fe10:	sbb    eax,0xb0ecd5bd
  40fe15:	arpl   WORD PTR [ebx+0x3],sp
  40fe18:	or     DWORD PTR [esi-0xbbf0e8a],esp
  40fe1e:	in     al,dx
  40fe1f:	neg    esp
  40fe21:	dec    edx
  40fe22:	and    al,0x71
  40fe24:	adc    dl,bl
  40fe26:	push   esi
  40fe27:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40fe28:	cmovno edx,ebx
  40fe2b:	add    bl,BYTE PTR [ebx-0x64]
  40fe2e:	(bad)  
  40fe2f:	aam    0xbe
  40fe31:	in     eax,0x52
  40fe33:	inc    eax
  40fe34:	int    0xee
  40fe36:	mov    WORD PTR [edx+eax*4],gs
  40fe39:	or     DWORD PTR [esi+0x40],0x3ab16fce
  40fe40:	pop    edi
  40fe41:	leave  
  40fe42:	or     eax,0xdc1f451
  40fe47:	adc    ecx,DWORD PTR [edi]
  40fe49:	dec    edx
  40fe4a:	mov    BYTE PTR [ebp+0x65],cl
  40fe4d:	enter  0x39b2,0x34
  40fe51:	in     eax,dx
  40fe52:	xchg   ecx,eax
  40fe53:	rcr    esi,1
  40fe55:	imul   edi,DWORD PTR [edx-0x46e459e9],0x1c
  40fe5c:	mov    dh,0xe8
  40fe5e:	push   es
  40fe5f:	mov    edi,0x7cfaf083
  40fe64:	inc    esi
  40fe65:	cmp    al,0xf6
  40fe67:	mov    ecx,0xca3fcd2e
  40fe6c:	out    dx,al
  40fe6d:	jecxz  0x40fe9b
  40fe6f:	outs   dx,BYTE PTR ds:[esi]
  40fe71:	icebp  
  40fe72:	dec    esp
  40fe73:	push   cs
  40fe74:	neg    DWORD PTR [ebx-0x6ecc0701]
  40fe7a:	sub    al,0x54
  40fe7c:	sysret 
  40fe7e:	push   edi
  40fe7f:	sbb    DWORD PTR [ebp+0x62],0xade26f47
  40fe86:	in     al,0x31
  40fe88:	ret    0xcf30
  40fe8b:	lods   al,BYTE PTR ds:[esi]
  40fe8c:	enter  0x493e,0x8b
  40fe90:	adc    BYTE PTR [ebx],al
  40fe92:	mov    esp,0x392766a
  40fe97:	(bad)  
  40fe98:	add    BYTE PTR [ebx-0x4b1edc0a],al
  40fe9e:	ds scas al,BYTE PTR es:[edi]
  40fea0:	hlt    
  40fea1:	ret    
  40fea2:	mov    esp,0x289e972
  40fea7:	push   edx
  40fea8:	inc    edx
  40fea9:	inc    eax
  40feaa:	outs   dx,BYTE PTR ds:[esi]
  40feab:	inc    eax
  40feac:	jmp    0x8b70:0x80781b96
  40feb3:	std    
  40feb4:	pop    esi
  40feb5:	and    DWORD PTR [edi],esp
  40feb7:	jo     0x40fe8c
  40feb9:	cmc    
  40feba:	jo     0x40fede
  40febc:	dec    edx
  40febd:	mov    bh,0xab
  40febf:	push   0xfffffff7
  40fec1:	test   DWORD PTR [edi-0x2b],edi
  40fec4:	adc    BYTE PTR [ebx+0x31],al
  40fec7:	call   0xab3c:0x8b4e3ff6
  40fece:	xchg   edx,eax
  40fecf:	call   0xdbd3:0xb8bc4179
  40fed6:	aad    0xd5
  40fed8:	fidivr DWORD PTR [ecx-0xb22fae9]
  40fede:	enter  0x9a7c,0xa8
  40fee2:	dec    esi
  40fee3:	mov    esi,0x9445f493
  40fee8:	mov    DWORD PTR ds:[esi],ebp
  40feeb:	mov    BYTE PTR [edi],dh
  40feed:	fs shl bh,1
  40fef0:	pop    eax
  40fef1:	test   al,dl
  40fef3:	out    dx,al
  40fef4:	leave  
  40fef5:	ret    
  40fef6:	(bad)  
  40fef7:	sti    
  40fef8:	scas   al,BYTE PTR es:[edi]
  40fef9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40fefa:	mov    bl,0x4b
  40fefc:	sub    eax,0x6defaa38
  40ff01:	aaa    
  40ff02:	sbb    BYTE PTR [edi-0x53b4a164],al
  40ff08:	pop    ebp
  40ff09:	outs   dx,DWORD PTR ds:[esi]
  40ff0a:	je     0x40ff6e
  40ff0c:	ror    BYTE PTR [eax-0x1a],0xb5
  40ff10:	push   edx
  40ff11:	and    eax,0x4adbd744
  40ff16:	and    eax,0x65b7c450
  40ff1b:	sbb    bl,al
  40ff1d:	inc    edi
  40ff1e:	cmc    
  40ff1f:	retf   
  40ff20:	add    BYTE PTR [edi-0x3],0x71
  40ff24:	inc    ecx
  40ff25:	test   al,dh
  40ff27:	clc    
  40ff28:	dec    eax
  40ff29:	push   esi
  40ff2a:	ret    
  40ff2b:	(bad)  
  40ff2c:	lahf   
  40ff2d:	repz lahf 
  40ff2f:	xor    al,0x76
  40ff31:	call   0x80aaa396
  40ff36:	outs   dx,DWORD PTR ds:[esi]
  40ff37:	xor    DWORD PTR [ecx+0x66],ecx
  40ff3a:	shr    bl,0x74
  40ff3d:	mov    ebx,0x8810f94
  40ff42:	call   0x6122:0xc74f86f2
  40ff49:	push   ebx
  40ff4a:	pop    edi
  40ff4b:	pop    eax
  40ff4c:	in     al,0xfa
  40ff4e:	je     0x40ff1f
  40ff50:	jmp    0x40ff8e
  40ff52:	faddp  st(6),st
  40ff54:	jnp    0x40fedd
  40ff56:	sub    dh,BYTE PTR [esi]
  40ff58:	in     al,0x65
  40ff5a:	inc    ebp
  40ff5b:	mov    bl,0xd8
  40ff5d:	mov    ebx,0xae2cbac1
  40ff62:	fdiv   st(5),st
  40ff64:	xor    al,0x63
  40ff66:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ff67:	add    cl,dh
  40ff69:	pop    ecx
  40ff6a:	mov    ecx,0xf39fe1e5
  40ff6f:	cmp    eax,0x405d59f5
  40ff74:	ins    DWORD PTR es:[edi],dx
  40ff75:	pop    edx
  40ff76:	sub    al,0x7a
  40ff78:	adc    DWORD PTR [eax],ebp
  40ff7a:	jmp    0x79df:0x98d195e9
  40ff81:	mov    esi,0x71437ebf
  40ff86:	xchg   edi,eax
  40ff87:	xlat   BYTE PTR ds:[ebx]
  40ff88:	nop
  40ff89:	xlat   BYTE PTR ds:[ebx]
  40ff8a:	jge    0x40ff98
  40ff8c:	jb     0x40ff0e
  40ff8e:	dec    esp
  40ff8f:	and    al,0x6a
  40ff91:	pop    es
  40ff92:	xchg   DWORD PTR [edi*4+0x606838de],ebp
  40ff99:	enter  0x9354,0xc1
  40ff9d:	push   cs
  40ff9e:	(bad)  [esi]
  40ffa0:	mov    ds:0x5aec4795,al
  40ffa5:	fst    QWORD PTR gs:[ebx]
  40ffa8:	dec    eax
  40ffa9:	sbb    cl,BYTE PTR [ebx]
  40ffab:	pop    esp
  40ffac:	mov    ch,0xc7
  40ffae:	loopne 0x40ffda
  40ffb0:	jb     0x40ff34
  40ffb2:	and    BYTE PTR [edx],bh
  40ffb4:	mov    al,ds:0xf15cc17c
  40ffb9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ffba:	pop    ss
  40ffbb:	popf   
  40ffbc:	add    dh,BYTE PTR [ebx]
  40ffbe:	inc    edi
  40ffbf:	ret    
  40ffc0:	daa    
  40ffc1:	mov    ebp,DWORD PTR [ebx+0x5fca2116]
  40ffc7:	test   al,0x20
  40ffc9:	dec    ebp
  40ffca:	adc    bh,BYTE PTR [ebp-0x6df2f0ce]
  40ffd0:	dec    ecx
  40ffd1:	inc    edi
  40ffd2:	cvttpd2pi mm5,XMMWORD PTR [ebx]
  40ffd6:	pop    esp
  40ffd7:	sahf   
  40ffd8:	pop    ds
  40ffd9:	pop    esp
  40ffda:	sbb    ah,BYTE PTR [eax+0x64231e74]
  40ffe0:	xchg   edi,eax
  40ffe1:	xor    DWORD PTR [eax],0xb0fa1191
  40ffe7:	mov    ebp,0x7583d1ca
  40ffec:	mov    ebp,0x60c5eead
  40fff1:	add    DWORD PTR [edx+0x46],edx
  40fff4:	bound  esi,QWORD PTR [ecx+edx*4+0x2d]
  40fff8:	test   esp,0x808e22af
  40fffe:	jl     0x40ff9a
  410000:	or     DWORD PTR [eax+0x40266ec1],ecx
  410006:	mov    al,bh
  410008:	push   ss
  410009:	cdq    
  41000a:	ret    0x6052
  41000d:	int3   
  41000e:	push   esi
  41000f:	or     edi,DWORD PTR [eax-0x59]
  410012:	xchg   esi,eax
  410013:	cmp    BYTE PTR [ebx-0x58],0xc5
  410017:	jno    0x410083
  410019:	iret   
  41001a:	in     al,dx
  41001b:	ret    
  41001c:	popa   
  41001d:	fs push ecx
  41001f:	loopne 0x41008d
  410021:	data16 jle 0x41000e
  410024:	out    dx,eax
  410025:	push   es
  410026:	lea    esp,[esi]
  410028:	daa    
  410029:	and    esi,DWORD PTR [ebp-0x68]
  41002c:	and    DWORD PTR [eax],esp
  41002e:	retf   0x9665
  410031:	ds inc esi
  410033:	cmp    DWORD PTR ds:0xd3ab0ed0,edx
  410039:	adc    edi,DWORD PTR [edi]
  41003b:	and    BYTE PTR [edx+0x359be5d3],ah
  410041:	in     eax,dx
  410042:	push   eax
  410043:	mov    ?,WORD PTR [ebp-0x24]
  410046:	xor    BYTE PTR [esi+0x4b],0xfe
  41004a:	aam    0x45
  41004c:	sti    
  41004d:	clc    
  41004e:	cmp    BYTE PTR [ecx*4+0x26a58125],0x66
  410056:	adc    al,0x11
  410058:	aad    0x82
  41005a:	in     eax,0x92
  41005c:	pushf  
  41005d:	xlat   BYTE PTR ds:[ebx]
  41005e:	sbb    dl,BYTE PTR [edx-0x77]
  410061:	add    ecx,ebx
  410063:	adc    eax,0xb8b79e21
  410068:	adc    cl,BYTE PTR [edi+0x390e4ad8]
  41006e:	jle    0x4100e8
  410070:	retf   0x27f0
  410073:	mov    DWORD PTR [eax-0x4c],edi
  410076:	cmp    ebp,DWORD PTR [edi+0x7d]
  410079:	push   eax
  41007a:	out    0x55,eax
  41007c:	pop    eax
  41007d:	(bad)  
  41007e:	sub    eax,0xb49ce2a
  410083:	test   al,0x4a
  410085:	mov    esp,gs
  410087:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410088:	push   ss
  410089:	xlat   BYTE PTR ds:[ebx]
  41008a:	ds loop 0x41010c
  41008d:	fldenv [ebp-0x6b26b573]
  410093:	xchg   edi,eax
  410094:	pushf  
  410095:	lods   al,BYTE PTR ds:[esi]
  410096:	cmp    esi,DWORD PTR [edx]
  410098:	add    eax,ebp
  41009a:	iret   
  41009b:	mov    edi,DWORD PTR [edx+0x1f2c7bda]
  4100a1:	les    edi,FWORD PTR [edi+0x55]
  4100a4:	out    0x7,al
  4100a6:	addr16 shl ebp,1
  4100a9:	mov    WORD PTR [ecx],?
  4100ab:	bound  ebp,QWORD PTR [edi+0x266b3bbd]
  4100b1:	aam    0x1
  4100b3:	mov    edi,0x409b76b3
  4100b8:	daa    
  4100b9:	outs   dx,BYTE PTR ds:[esi]
  4100ba:	shl    ecx,cl
  4100bc:	or     al,0x52
  4100be:	cdq    
  4100bf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4100c0:	pop    edx
  4100c1:	ds int3 
  4100c3:	les    eax,FWORD PTR [edi+0x68adef07]
  4100c9:	loopne 0x410086
  4100cb:	mov    cl,0x32
  4100cd:	in     eax,dx
  4100ce:	cwde   
  4100cf:	sub    BYTE PTR [edi-0x52b7be10],ah
  4100d5:	inc    esi
  4100d6:	add    esp,DWORD PTR [edi]
  4100d8:	mov    ds:0xfa2fa762,al
  4100dd:	mov    eax,0xc69385d2
  4100e2:	jmp    0x4100a3
  4100e4:	adc    al,0x3a
  4100e6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4100e7:	jg     0x4100c8
  4100e9:	aas    
  4100ea:	pop    ebx
  4100eb:	stc    
  4100ec:	popf   
  4100ed:	or     edx,edx
  4100ef:	hlt    
  4100f0:	xor    DWORD PTR [eax+0x56],0x710a5442
  4100f7:	jne    0x41008f
  4100f9:	mov    bl,0x6a
  4100fb:	push   esi
  4100fc:	call   0x430ad50d
  410101:	cmp    eax,0x6c54915f
  410106:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410107:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410108:	sub    eax,0x52c5e5c0
  41010d:	sub    ebx,DWORD PTR [eax-0x21]
  410110:	imul   DWORD PTR [ecx+0x79]
  410113:	fild   QWORD PTR [ecx+edi*4-0x39]
  410117:	or     ah,bl
  410119:	outs   dx,BYTE PTR ds:[esi]
  41011a:	xlat   BYTE PTR ds:[ebx]
  41011b:	bound  ecx,QWORD PTR [edx]
  41011d:	dec    edx
  41011e:	sbb    edi,DWORD PTR [ecx+0x3a]
  410121:	ret    
  410122:	pop    eax
  410123:	cmp    al,0x26
  410125:	clc    
  410126:	sub    DWORD PTR ds:0x1a4a3308,0x36effad8
  410130:	push   ebp
  410131:	push   ebx
  410132:	in     eax,dx
  410133:	xchg   ebx,eax
  410134:	mov    esp,0xd616135c
  410139:	xor    al,0x2
  41013b:	out    dx,al
  41013c:	pop    esi
  41013d:	dec    ecx
  41013e:	pop    ebx
  41013f:	mov    ds,WORD PTR [esi+0xda8aa80]
  410145:	cmp    al,0x6c
  410147:	push   esi
  410148:	or     DWORD PTR [eax-0x369436d2],ecx
  41014e:	mov    esi,0x2b5cbe33
  410153:	sahf   
  410154:	ret    0xc903
  410157:	mov    dl,0x51
  410159:	pop    eax
  41015a:	jo     0x4101d5
  41015c:	add    BYTE PTR [edx],ch
  41015e:	pop    ecx
  41015f:	jg     0x4101b1
  410161:	mul    DWORD PTR [ebp+eiz*4+0x49]
  410165:	jne    0x410143
  410167:	outs   dx,BYTE PTR ds:[esi]
  410168:	cmp    eax,0xaf5f800
  41016d:	sub    esp,esp
  41016f:	ins    BYTE PTR es:[edi],dx
  410170:	mov    dh,0x76
  410172:	cmp    eax,0x32e360a5
  410177:	sbb    BYTE PTR [ebp-0x1b9aad0e],ch
  41017d:	inc    ebp
  41017e:	aad    0xad
  410180:	inc    esi
  410181:	push   ds
  410182:	sbb    DWORD PTR [esi],esp
  410184:	jno    0x41017b
  410186:	sahf   
  410187:	lods   eax,DWORD PTR ds:[esi]
  410188:	aaa    
  410189:	jmp    0xfb4d:0xc9f8121b
  410190:	inc    ecx
  410191:	test   al,0x26
  410193:	retf   0x4669
  410196:	pinsrw mm7,WORD PTR [edx],0xef
  41019a:	jmp    0x4101b2
  41019c:	stc    
  41019d:	sub    al,0x61
  41019f:	inc    edx
  4101a0:	dec    edi
  4101a1:	sub    esp,DWORD PTR [ebp-0x8]
  4101a4:	mov    WORD PTR [edi],fs
  4101a6:	popf   
  4101a7:	inc    ebx
  4101a8:	sub    al,0xf5
  4101aa:	jecxz  0x410226
  4101ac:	dec    edi
  4101ad:	xchg   DWORD PTR [eax+0x43],ebx
  4101b0:	pop    esi
  4101b1:	retf   
  4101b2:	repnz xchg esi,eax
  4101b4:	inc    ecx
  4101b5:	in     al,0xd5
  4101b7:	sbb    BYTE PTR [edx-0x47],ah
  4101ba:	jae    0x4101ae
  4101bc:	or     edi,eax
  4101be:	test   BYTE PTR [edx],0x5d
  4101c1:	mov    ds:0x55aa2890,eax
  4101c6:	jmp    0x9c93:0xc9414b67
  4101cd:	fcomp  st(7)
  4101cf:	push   ebx
  4101d0:	pusha  
  4101d1:	loope  0x41022b
  4101d3:	and    edx,DWORD PTR [edx]
  4101d5:	int    0xb8
  4101d7:	and    edi,ebx
  4101d9:	test   eax,0x6c1eaf9f
  4101de:	adc    edx,DWORD PTR [esi-0x27]
  4101e1:	and    bl,bh
  4101e3:	repnz rol DWORD PTR [esi+0x36],cl
  4101e7:	and    al,0x6d
  4101e9:	sbb    BYTE PTR [ecx-0x49],ah
  4101ec:	or     BYTE PTR [ebx+0x48],ch
  4101ef:	xchg   ecx,eax
  4101f0:	dec    ebp
  4101f1:	mov    dh,0x23
  4101f4:	ss inc ebx
  4101f6:	push   ebx
  4101f7:	jmp    0x8d1e:0xc5842b3
  4101fe:	or     esp,DWORD PTR [ebx+0x54934c9c]
  410204:	int3   
  410205:	pop    ecx
  410207:	je     0x41022f
  410209:	cmp    DWORD PTR [ebp-0xdb97cec],edx
  41020f:	adc    dl,BYTE PTR [ebx+0x6baabf5a]
  410215:	mov    cl,0x65
  410217:	ret    0xa64a
  41021a:	cmp    BYTE PTR [edx-0x52],bl
  41021d:	sub    al,0x8a
  41021f:	ficom  DWORD PTR [esi-0x1591494c]
  410225:	stos   DWORD PTR es:[edi],eax
  410226:	push   eax
  410227:	(bad)  
  410228:	xchg   edi,eax
  410229:	sbb    al,0x69
  41022b:	or     BYTE PTR [ecx-0x6df0517a],al
  410231:	mov    ch,0xa7
  410233:	sbb    esi,DWORD PTR [ebp-0x6853bf09]
  410239:	(bad)  
  41023a:	test   ax,0xf65c
  41023e:	test   al,0x79
  410240:	imul   edi,DWORD PTR ds:0x81f1c3f8,0x3e
  410247:	ret    
  410248:	dec    esi
  410249:	xchg   ebx,eax
  41024a:	ret    
  41024b:	xchg   ebp,eax
  41024c:	popf   
  41024d:	jnp    0x4101e0
  41024f:	jecxz  0x410292
  410251:	jae    0x41023c
  410253:	int3   
  410254:	and    al,0x7b
  410256:	outs   dx,BYTE PTR ds:[esi]
  410257:	es repnz dec edx
  41025a:	fidivr DWORD PTR [ecx]
  41025c:	push   ds
  41025d:	or     dh,bl
  41025f:	ja     0x410243
  410261:	leave  
  410262:	outs   dx,DWORD PTR ds:[esi]
  410263:	fdivr  DWORD PTR [ebx-0x75]
  410266:	and    al,0xd
  410268:	inc    edx
  410269:	mov    esp,0x9b5b7f3b
  41026e:	mov    bl,0xf2
  410270:	xor    bh,BYTE PTR [edx]
  410272:	test   BYTE PTR [ebx],0x28
  410275:	inc    esi
  410276:	pop    ebp
  410277:	cli    
  410278:	imul   esi,DWORD PTR [esp+ebp*1+0x15e3eb2c],0xffffff90
  410280:	mov    ebp,0x996e8991
  410285:	lds    eax,FWORD PTR [esi-0x3228aafd]
  41028b:	out    0x29,al
  41028d:	mov    esp,0xb77c8da0
  410292:	lahf   
  410293:	and    al,BYTE PTR [ebx]
  410295:	jne    0x410223
  410297:	fcmovne st,st(7)
  410299:	push   es
  41029a:	cmp    cl,cl
  41029c:	shr    DWORD PTR [esi-0x61],0xf6
  4102a0:	xor    al,BYTE PTR [ecx-0x58]
  4102a3:	jno    0x410265
  4102a5:	jp     0x41029c
  4102a7:	mov    eax,ds:0xbb200495
  4102ac:	inc    esi
  4102ad:	mov    al,ds:0x12621fb8
  4102b2:	inc    ebp
  4102b3:	push   ss
  4102b4:	pusha  
  4102b5:	xchg   ecx,eax
  4102b6:	mov    edi,0x4f4f0638
  4102bb:	xchg   ebx,eax
  4102bc:	sub    al,0xd5
  4102be:	jecxz  0x4102ac
  4102c0:	add    al,0xd4
  4102c2:	mov    BYTE PTR [edi+0x7bc32b5c],dl
  4102c8:	and    bl,BYTE PTR [ecx+0x8685974]
  4102ce:	sub    al,0x4f
  4102d0:	sub    ah,dl
  4102d2:	add    al,0x77
  4102d4:	test   BYTE PTR [ebp+0x25a4080f],bl
  4102da:	mov    BYTE PTR ds:0xaca88b95,dh
  4102e0:	aas    
  4102e1:	or     BYTE PTR [ecx-0x5],0xf8
  4102e5:	mov    edi,0x8b570e50
  4102ea:	dec    esi
  4102eb:	shr    DWORD PTR [edi+0x4a],cl
  4102ee:	es mov bl,0x7
  4102f1:	xor    al,BYTE PTR [ebp-0x75]
  4102f4:	xor    DWORD PTR [ebx-0x1f],edx
  4102f7:	dec    edx
  4102f8:	aam    0x62
  4102fa:	mov    esi,0x62b8f561
  4102ff:	retf   
  410300:	push   ebp
  410301:	fild   DWORD PTR [edx]
  410303:	and    al,0x1a
  410305:	push   0xffffffa2
  410307:	loop   0x41035e
  410309:	mov    dh,0x35
  41030b:	repz mov dh,0x63
  41030e:	fldenv [esi]
  410310:	add    DWORD PTR [esi],edi
  410312:	mov    eax,0xe72aa465
  410317:	outs   dx,DWORD PTR ds:[esi]
  410318:	cmp    al,0xdd
  41031a:	inc    esp
  41031b:	cs enter 0x87ec,0xf7
  410320:	mov    ch,0x52
  410322:	and    al,BYTE PTR [eax+0x54]
  410325:	pop    esp
  410326:	cmp    DWORD PTR [eax-0x20],0x64253566
  41032d:	jbe    0x4102f0
  41032f:	xlat   BYTE PTR ds:[ebx]
  410330:	iret   
  410331:	xor    ebx,ebp
  410333:	retf   0xcad
  410336:	adc    al,0xf1
  410338:	mov    bh,0x6e
  41033a:	inc    esi
  41033b:	stc    
  41033c:	gs ds xchg ecx,eax
  41033f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410340:	iret   
  410341:	ins    DWORD PTR es:[edi],dx
  410342:	cmp    BYTE PTR [eax],al
  410344:	ins    BYTE PTR es:[edi],dx
  410345:	cmp    eax,0xe3cc3a37
  41034a:	out    0xae,eax
  41034c:	mov    ds:0x26522a57,al
  410351:	mov    ebp,0x116e4dfa
  410356:	icebp  
  410357:	cmp    esi,esi
  410359:	shl    eax,1
  41035b:	or     BYTE PTR [ebx*2-0x29a1b374],bl
  410362:	int3   
  410363:	ds rol esp,0xbc
  410367:	call   0xdc23397f
  41036c:	emms   
  41036e:	out    dx,eax
  41036f:	cli    
  410370:	enter  0x3907,0xd3
  410374:	daa    
  410375:	push   es
  410376:	test   al,0x2
  410378:	(bad)  
  410379:	sbb    BYTE PTR [eax],dh
  41037b:	test   edi,ecx
  41037d:	pop    edi
  41037e:	xor    esp,esp
  410380:	or     ebx,esp
  410382:	aam    0x86
  410384:	sub    al,0x29
  410386:	leave  
  410387:	les    ebp,FWORD PTR [ecx]
  410389:	ss jl  0x4103a5
  41038c:	popf   
  41038d:	cmp    BYTE PTR [eax+0x781d06f2],bl
  410393:	fnstsw WORD PTR [ebx]
  410395:	ins    DWORD PTR es:[edi],dx
  410396:	inc    ebp
  410397:	push   0xd836e206
  41039c:	ins    BYTE PTR es:[edi],dx
  41039d:	stos   BYTE PTR es:[edi],al
  41039e:	sub    BYTE PTR [ebx+0x2119da3a],dh
  4103a4:	stc    
  4103a5:	aam    0x1f
  4103a7:	pop    ebp
  4103a8:	xor    ah,ah
  4103aa:	xor    dl,BYTE PTR ds:0x1fc49473
  4103b0:	call   FWORD PTR [edi+0x2a6b6ebe]
  4103b6:	dec    edi
  4103b7:	pop    esp
  4103b8:	in     eax,dx
  4103b9:	mov    eax,0x51d9aeae
  4103be:	jle    0x4103ec
  4103c0:	test   dh,0xec
  4103c3:	pop    esi
  4103c4:	add    edx,esi
  4103c6:	(bad)  
  4103c7:	mov    BYTE PTR [ebx-0x3fb77c5d],cl
  4103cd:	cld    
  4103ce:	xlat   BYTE PTR ds:[ebx]
  4103cf:	push   eax
  4103d0:	out    0x30,al
  4103d2:	sbb    DWORD PTR ds:0x7a2d1410,edx
  4103d8:	lds    edi,FWORD PTR [edi+0x50c8291b]
  4103de:	fdiv   QWORD PTR [ebx]
  4103e0:	je     0x4103d9
  4103e2:	xor    DWORD PTR [edi],esp
  4103e4:	sahf   
  4103e5:	mov    ds:0xcff1dc32,eax
  4103ea:	adc    DWORD PTR [ebx],edi
  4103ec:	scas   al,BYTE PTR es:[edi]
  4103ed:	pop    esp
  4103ee:	mul    BYTE PTR [esi]
  4103f0:	(bad)  
  4103f1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4103f2:	popa   
  4103f3:	mov    edi,0x63711141
  4103f8:	out    0xf4,al
  4103fa:	and    ecx,DWORD PTR [edx]
  4103fc:	mov    eax,0x75a9f66c
  410401:	xor    al,0x2a
  410403:	nop
  410404:	pop    es
  410405:	lock mov ch,0xeb
  410408:	push   ds
  410409:	sar    DWORD PTR [ebp-0x5606cd6],0xc5
  410410:	in     eax,0x38
  410412:	in     eax,0x3e
  410414:	xor    al,0x66
  410416:	mov    ah,0x38
  410418:	dec    edx
  410419:	jl     0x41043c
  41041b:	mov    esp,0x1c3ab25f
  410420:	cmp    bl,BYTE PTR [eax+0x66]
  410423:	dec    esi
  410424:	push   eax
  410425:	lahf   
  410426:	shr    DWORD PTR [ecx+0x7997dbda],cl
  41042c:	pushf  
  41042d:	jae    0x410411
  41042f:	mov    eax,0xb04bf159
  410434:	mov    ds:0x3d4a01f9,eax
  410439:	retf   
  41043a:	call   0x54f7:0xb55f0fe7
  410441:	push   ss
  410442:	dec    ecx
  410443:	aaa    
  410444:	pop    ss
  410445:	nop
  410446:	(bad)  
  410447:	mov    dh,0xa6
  410449:	addr16 cwde 
  41044b:	mov    ebx,0xdf27b30b
  410450:	out    0x69,al
  410452:	div    BYTE PTR [ebp+0x37]
  410455:	ret    0x2c2
  410458:	push   esp
  410459:	push   eax
  41045a:	fs jnp 0x4103f5
  41045d:	adc    DWORD PTR [edi+0x5d],ebp
  410460:	je     0x4103fb
  410462:	adc    al,bl
  410464:	test   al,0x6e
  410466:	nop
  410467:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410468:	mov    edi,0x8b1226af
  41046d:	loop   0x4103f0
  41046f:	jo     0x410412
  410471:	sti    
  410472:	xor    al,0x8
  410474:	adc    BYTE PTR [edx],al
  410476:	cs loope 0x4104b7
  410479:	cmp    DWORD PTR [ecx-0x40],0xffffffb6
  41047d:	sub    edi,DWORD PTR [esi-0x2a6ae362]
  410483:	or     BYTE PTR [ebp+edx*8-0x33bd1ac],dl
  41048a:	stos   BYTE PTR es:[edi],al
  41048b:	cmp    ch,BYTE PTR [ebx]
  41048d:	dec    esi
  41048e:	fwait
  41048f:	mov    al,ds:0x6694590b
  410494:	or     al,0xb
  410496:	lahf   
  410497:	es dec ecx
  410499:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41049a:	(bad)  
  41049b:	lock cmp ebp,DWORD PTR [edi]
  41049e:	xchg   esi,eax
  41049f:	cmp    al,0xda
  4104a1:	or     esp,edx
  4104a3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4104a4:	cmp    bh,dl
  4104a6:	cmp    edx,DWORD PTR [edi+0x37]
  4104a9:	and    eax,0xcc9d9130
  4104ae:	adc    bl,BYTE PTR [edx-0x61]
  4104b1:	cli    
  4104b2:	ficomp DWORD PTR [edx]
  4104b4:	gs loope 0x4104bc
  4104b7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4104b8:	loop   0x410467
  4104ba:	inc    ecx
  4104bb:	inc    edi
  4104bc:	xchg   edx,eax
  4104bd:	jnp    0x41051c
  4104bf:	mov    esp,0x32bf07c4
  4104c4:	test   al,0xc9
  4104c6:	xchg   edi,eax
  4104c7:	leave  
  4104c8:	add    al,0x9
  4104ca:	clc    
  4104cb:	xchg   ch,bl
  4104cd:	test   DWORD PTR [edx+eax*8],ecx
  4104d0:	xchg   esi,eax
  4104d1:	pop    es
  4104d2:	and    DWORD PTR [edi+0x4e0d439f],esi
  4104d8:	ds in  eax,dx
  4104da:	xchg   edx,eax
  4104db:	xor    al,0xe
  4104dd:	test   bh,0xd3
  4104e0:	inc    eax
  4104e1:	es adc al,0xcf
  4104e4:	fst    DWORD PTR [eax+eax*8+0x49]
  4104e8:	repz (bad) 
  4104ea:	or     bh,BYTE PTR [esi-0x4f]
  4104ed:	push   ss
  4104ee:	shl    BYTE PTR [eax+eax*2],1
  4104f1:	fwait
  4104f2:	clc    
  4104f3:	sbb    DWORD PTR ds:0x7bc8ee9e,edx
  4104f9:	bound  esi,QWORD PTR [edx-0x29]
  4104fc:	jg     0x4104cf
  4104fe:	cmovno bx,WORD PTR [esp+eiz*8]
  410503:	cmp    BYTE PTR [ebp-0x109635da],dh
  410509:	xor    ebx,ebx
  41050b:	loop   0x41052b
  41050d:	xor    ah,dl
  41050f:	ins    DWORD PTR es:[edi],dx
  410510:	(bad)  
  410511:	(bad)  
  410512:	fidivr WORD PTR [ebx]
  410514:	(bad)  ds:0x4e669517
  41051a:	aas    
  41051b:	inc    eax
  41051c:	jno    0x410522
  41051e:	mov    edi,0xac754e10
  410523:	lahf   
  410524:	xchg   ebp,eax
  410525:	sar    edi,0x85
  410528:	pop    edx
  410529:	cmp    ecx,ebx
  41052b:	xor    dl,BYTE PTR [eax]
  41052d:	or     al,0xe7
  41052f:	inc    BYTE PTR [ecx-0x1b]
  410532:	cmc    
  410533:	(bad)  
  410534:	jmp    0x4104d0
  410536:	push   edx
  410537:	dec    ebx
  410538:	sbb    cl,BYTE PTR [edx]
  41053a:	add    esi,DWORD PTR [ebx+0x42]
  41053d:	push   ecx
  41053e:	mov    esi,0x3ff927e1
  410543:	aam    0xa0
  410545:	push   ebx
  410546:	jbe    0x410558
  410548:	std    
  410549:	xchg   bl,dl
  41054b:	xchg   edx,eax
  41054c:	jmp    0x3ceb2d4c
  410551:	and    dl,ch
  410553:	push   esi
  410554:	pop    ds
  410555:	ss xchg edi,eax
  410557:	mov    bl,0x68
  410559:	xor    eax,0xbd0173b8
  41055e:	lahf   
  41055f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410560:	xchg   edi,eax
  410561:	das    
  410562:	lods   al,BYTE PTR ds:[esi]
  410563:	div    BYTE PTR [ebx-0x1f479fde]
  410569:	clc    
  41056a:	cdq    
  41056b:	mov    ebp,0x992cdbc7
  410570:	(bad)  
  410571:	int3   
  410572:	(bad)  
  410573:	inc    ebx
  410574:	sub    al,0x7d
  410576:	sub    al,0x7e
  410578:	pop    ebp
  410579:	mov    ds:0xce788ce4,al
  41057e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41057f:	sub    DWORD PTR [edi+0x24],ebp
  410582:	fwait
  410583:	ja     0x4105a6
  410585:	sbb    BYTE PTR [ecx],dl
  410587:	adc    al,0xc3
  410589:	cmc    
  41058a:	ret    
  41058b:	xchg   ebx,eax
  41058c:	inc    ebp
  41058d:	neg    DWORD PTR [ecx+0x63878c82]
  410593:	push   0x847dc50
  410598:	mov    eax,0x57f188eb
  41059d:	pop    edi
  41059e:	pop    esi
  41059f:	adc    DWORD PTR [ebp-0x57279e4c],eax
  4105a5:	or     DWORD PTR ds:0x453ad2e0,edi
  4105ab:	ja     0x41055f
  4105ad:	ja     0x410565
  4105af:	and    DWORD PTR [esi],edx
  4105b1:	mov    esi,0x8db6a4ff
  4105b6:	jne    0x4105c7
  4105b8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4105b9:	in     eax,dx
  4105ba:	test   al,0x33
  4105bc:	cmp    eax,0x30078f83
  4105c1:	sbb    al,0x4f
  4105c3:	or     eax,0x24c3918c
  4105c8:	mov    ds:0xabfb2296,eax
  4105cd:	push   es
  4105ce:	retf   0x5596
  4105d1:	push   ds
  4105d2:	sbb    al,0x81
  4105d4:	(bad)  
  4105d5:	rcr    BYTE PTR [ebx-0x26],1
  4105d8:	js     0x41062e
  4105da:	push   esp
  4105db:	push   cs
  4105dc:	bound  eax,QWORD PTR [esi+eiz*2+0x7218431d]
  4105e3:	push   ss
  4105e4:	lods   eax,DWORD PTR ds:[esi]
  4105e5:	xchg   esp,eax
  4105e6:	cmc    
  4105e7:	lods   al,BYTE PTR ds:[esi]
  4105e8:	or     ch,BYTE PTR [eax+0xf]
  4105eb:	sub    ecx,DWORD PTR [edi+0x1d4212f4]
  4105f1:	push   ds
  4105f2:	stos   BYTE PTR es:[edi],al
  4105f3:	cdq    
  4105f4:	(bad)  
  4105f5:	jmp    0x7993a15d
  4105fa:	add    eax,0x71f0fab0
  4105ff:	fdivr  st,st(1)
  410601:	push   eax
  410602:	pop    edx
  410603:	and    BYTE PTR [ebx],0xab
  410606:	out    0x55,eax
  410608:	fcmovnb st,st(4)
  41060a:	pop    esp
  41060b:	fyl2x  
  41060d:	pop    es
  41060e:	test   al,0xe6
  410610:	adc    eax,0x8b10707b
  410615:	ret    0x734b
  410618:	pop    eax
  410619:	out    0xf9,eax
  41061b:	sbb    al,0x1b
  41061d:	fwait
  41061e:	jnp    0x41060b
  410620:	mov    bl,0x51
  410622:	jo     0x41063f
  410624:	es inc edx
  410626:	dec    esi
  410627:	jp     0x410600
  410629:	xor    edx,ebp
  41062b:	xlat   BYTE PTR ds:[ebx]
  41062c:	mov    esp,0x9eb12bdc
  410631:	pop    ss
  410632:	enter  0x581f,0x9d
  410636:	int    0xb6
  410638:	cwde   
  410639:	dec    edx
  41063a:	cs mov bl,0x68
  41063d:	pusha  
  41063e:	scas   al,BYTE PTR es:[edi]
  41063f:	leave  
  410640:	cld    
  410641:	mov    ebx,0x788e7a56
  410646:	mov    ebp,0x8c9a8a6e
  41064b:	or     DWORD PTR [edi-0x6e],eax
  41064e:	in     al,0x34
  410650:	scas   eax,DWORD PTR es:[edi]
  410651:	dec    eax
  410652:	xchg   ebp,eax
  410653:	or     al,0x38
  410655:	fs aaa 
  410657:	imul   eax,ebx,0x34
  41065a:	sub    eax,0xb2753218
  41065f:	jge    0x41065e
  410661:	cmc    
  410662:	repz push ecx
  410664:	repnz inc eax
  410666:	xor    bl,dl
  410668:	fdiv   st(7),st
  41066a:	xchg   DWORD PTR [ebp+0x6724db12],edx
  410670:	das    
  410671:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410672:	mov    gs:0x8e42edae,eax
  410678:	push   ds
  410679:	jno    0x4105fd
  41067b:	les    ebp,FWORD PTR [edi+ebx*2]
  41067e:	mov    ecx,0x8ed03b56
  410683:	shr    DWORD PTR [esp+ecx*2-0x61b5c0ef],cl
  41068a:	lods   eax,DWORD PTR ds:[esi]
  41068b:	pushf  
  41068c:	mov    edi,0xd9ab4e9d
  410691:	xor    DWORD PTR [esi],ebx
  410693:	or     DWORD PTR [eax+esi*8+0x5f652e90],esp
  41069a:	clc    
  41069b:	in     al,0x29
  41069d:	or     al,0xb0
  41069f:	or     edi,0x6663e6b3
  4106a5:	push   cs
  4106a6:	shl    DWORD PTR [ecx+eiz*1-0x75],cl
  4106aa:	dec    ebx
  4106ab:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4106ac:	inc    ebp
  4106ad:	push   edx
  4106ae:	adc    cl,BYTE PTR [ecx-0x5390fbdc]
  4106b4:	popa   
  4106b5:	data16 mov WORD PTR [ebp-0x311a32cc],?
  4106bc:	push   es
  4106bd:	dec    ebp
  4106be:	mov    al,fs:0x7e67ab95
  4106c4:	fwait
  4106c5:	out    dx,eax
  4106c6:	cmc    
  4106c7:	sbb    eax,0x74dae9ca
  4106cc:	pop    ds
  4106cd:	int3   
  4106ce:	push   ebx
  4106cf:	pop    ebp
  4106d0:	jne    0x41070a
  4106d2:	(bad)  
  4106d3:	shl    BYTE PTR [edi+0x1b],cl
  4106d6:	bound  esp,QWORD PTR [edi+0x360c19d]
  4106dc:	lds    esi,FWORD PTR [ecx+0x52]
  4106df:	dec    edi
  4106e0:	pop    eax
  4106e1:	test   al,0x24
  4106e3:	fidivr WORD PTR [eax+0x59fa3c57]
  4106e9:	les    ebp,FWORD PTR [ecx+0x38fe0b75]
  4106ef:	sub    ebx,esp
  4106f1:	cwde   
  4106f2:	and    eax,0x5e91d219
  4106f7:	mov    eax,ds:0x655e4011
  4106fc:	ds inc esi
  4106fe:	test   BYTE PTR [ecx+eax*1-0x4],0xf6
  410703:	mov    ds:0x435f2fac,eax
  410708:	dec    eax
  410709:	es shl edx,1
  41070c:	xchg   esp,eax
  41070d:	jg     0x41078d
  41070f:	mov    dh,0x8b
  410711:	jo     0x410744
  410713:	inc    edx
  410714:	push   ebp
  410715:	adc    bl,BYTE PTR [ebp+edx*4+0x513552d4]
  41071c:	xor    BYTE PTR [ecx+0x6f],cl
  41071f:	test   eax,ecx
  410721:	pop    esp
  410722:	js     0x410728
  410724:	int3   
  410725:	xor    ebp,DWORD PTR [edx-0x5dca586d]
  41072b:	add    BYTE PTR [ecx+0x68],ah
  41072e:	inc    ebp
  41072f:	fisubr WORD PTR cs:[edi-0x1c78d39e]
  410736:	bound  esp,QWORD PTR [ecx+0x2f]
  410739:	hlt    
  41073a:	pop    ds
  41073b:	jge    0x41072e
  41073d:	loope  0x410763
  41073f:	and    eax,0xcb973ba9
  410744:	retf   0xfe14
  410747:	sub    al,0x53
  410749:	addr16 xchg ch,dh
  41074c:	mov    DWORD PTR [ebx],ebx
  41074e:	enter  0x1cf5,0x96
  410752:	(bad)  
  410753:	sub    esp,DWORD PTR [esi+edx*1+0x735a1631]
  41075a:	add    ebx,DWORD PTR [ecx+0x5e8bcde7]
  410760:	bound  esi,QWORD PTR [esp+eiz*2]
  410763:	jg     0x410794
  410765:	test   eax,0x6bc04fad
  41076a:	jnp    0x4106fa
  41076c:	push   eax
  41076d:	shld   DWORD PTR [esi],esp,0x40
  410771:	scas   al,BYTE PTR es:[edi]
  410772:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410773:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410774:	inc    esp
  410775:	mov    ah,0xc2
  410777:	mov    cl,0x9b
  410779:	in     al,dx
  41077a:	mov    bh,0x6b
  41077c:	cmp    eax,0x4fc44ac2
  410781:	push   ecx
  410782:	push   ss
  410783:	pushf  
  410784:	xor    BYTE PTR [edi+eax*8],dl
  410787:	rcl    ah,cl
  410789:	enter  0xc179,0xd1
  41078d:	xchg   edi,eax
  41078e:	std    
  41078f:	jnp    0x4107b6
  410791:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410792:	mov    al,0xc
  410794:	pusha  
  410795:	mov    ebx,0xb43623f5
  41079a:	lods   al,BYTE PTR ds:[esi]
  41079b:	or     cl,ch
  41079d:	cmp    eax,0x552fad08
  4107a2:	pop    ecx
  4107a3:	fisub  DWORD PTR [eax+edx*2]
  4107a6:	cmc    
  4107a7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4107a8:	ins    BYTE PTR es:[edi],dx
  4107a9:	jb     0x41073b
  4107ab:	aam    0xf0
  4107ad:	xchg   ecx,eax
  4107ae:	std    
  4107af:	push   edi
  4107b0:	xchg   edi,eax
  4107b1:	ret    0x180c
  4107b4:	int    0xe3
  4107b6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4107b7:	dec    ebx
  4107b8:	rcl    BYTE PTR [esi+eiz*2],0xea
  4107bc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4107bd:	xor    BYTE PTR [edx],al
  4107bf:	jno    0x4107f8
  4107c1:	daa    
  4107c2:	mov    esi,0x35623a88
  4107c7:	loopne 0x4107b2
  4107c9:	in     al,dx
  4107ca:	fiadd  WORD PTR [ecx]
  4107cc:	stos   BYTE PTR es:[edi],al
  4107cd:	aaa    
  4107ce:	ins    BYTE PTR es:[edi],dx
  4107cf:	jp     0x410804
  4107d1:	xor    DWORD PTR [esi+esi*8-0x7c084c74],ecx
  4107d8:	pop    edx
  4107d9:	cdq    
  4107da:	imul   ecx,DWORD PTR [esi],0x63b64af6
  4107e0:	cmp    edx,esi
  4107e2:	aad    0xc
  4107e4:	xor    eax,0xd00e65c1
  4107e9:	data16 cmp al,0x26
  4107ec:	push   0x4b
  4107ee:	mov    edx,0xbd1879ab
  4107f3:	test   DWORD PTR [ecx+0x10],edx
  4107f6:	pop    esp
  4107f7:	les    ecx,FWORD PTR [edi+0x51d7d1e9]
  4107fd:	mov    bl,0x74
  4107ff:	inc    ebx
  410800:	sbb    al,0xd9
  410802:	sub    eax,0x6f5ef384
  410807:	sub    DWORD PTR [ebx-0x5c9d2b5f],edi
  41080d:	aaa    
  41080e:	imul   edx,DWORD PTR ds:0x38fb4783,0xa2e6619a
  410818:	and    BYTE PTR [edx],bl
  41081a:	fistp  DWORD PTR [edi]
  41081c:	fwait
  41081d:	mov    ?,esi
  41081f:	adc    BYTE PTR [edx-0x36591353],al
  410825:	jno    0x410866
  410827:	and    bh,ah
  410829:	(bad)  
  41082a:	sub    esp,DWORD PTR [ebp-0x251d04fe]
  410830:	push   edi
  410831:	mov    ah,0xae
  410833:	ret    0xf546
  410836:	sbb    ebp,DWORD PTR [ecx-0x259f1c01]
  41083c:	lds    ebp,FWORD PTR [ebx+0x11c065b5]
  410842:	mov    ebx,0x6b48cf6a
  410847:	push   eax
  410848:	pusha  
  410849:	icebp  
  41084a:	out    dx,eax
  41084b:	leave  
  41084c:	in     al,0x5c
  41084e:	(bad)  
  41084f:	and    ah,BYTE PTR [esi+ecx*4+0x5f99612a]
  410856:	push   edi
  410857:	cmp    ah,BYTE PTR [esi]
  410859:	sbb    cl,BYTE PTR [ebx+esi*8]
  41085c:	cmp    edi,ebx
  41085e:	cdq    
  41085f:	arpl   WORD PTR [edx],dx
  410861:	cmp    al,0x9f
  410863:	outs   dx,BYTE PTR ds:[esi]
  410864:	adc    al,0xa5
  410866:	jb     0x4108b4
  410868:	daa    
  410869:	adc    edi,DWORD PTR [ebx-0x15020f9b]
  41086f:	ins    DWORD PTR es:[edi],dx
  410870:	pop    es
  410871:	imul   edi,DWORD PTR [edi+0x6b23cca2],0xffffffbc
  410878:	mov    edx,0x1d008715
  41087d:	clc    
  41087e:	xor    bl,BYTE PTR [eax+0x6]
  410881:	data16 div BYTE PTR [ebx+0x25]
  410885:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410886:	lods   al,BYTE PTR ds:[esi]
  410887:	adc    eax,0x2a85e53c
  41088c:	push   ds
  41088d:	mov    ebp,0x161f34d
  410892:	xor    DWORD PTR [ecx-0x14],esp
  410895:	jmp    0x4108d7
  410897:	and    DWORD PTR [edi],0x854846c0
  41089d:	cmp    esp,edx
  41089f:	jmp    0x4108a0
  4108a1:	lds    esi,FWORD PTR [eax-0x2c2d180a]
  4108a7:	stos   BYTE PTR es:[edi],al
  4108a8:	imul   eax,DWORD PTR [esi],0xffffffcb
  4108ab:	cwde   
  4108ac:	imul   BYTE PTR [ebp+0x5c]
  4108af:	popa   
  4108b0:	xchg   ebp,eax
  4108b1:	xchg   ebp,eax
  4108b2:	add    bl,BYTE PTR [esi]
  4108b4:	(bad)  
  4108b5:	fwait
  4108b6:	loopne 0x41089d
  4108b8:	dec    esi
  4108b9:	mov    bh,0xe4
  4108bb:	cmp    ebx,DWORD PTR [ebx]
  4108bd:	shl    bl,cl
  4108bf:	loop   0x41090e
  4108c1:	jnp    0x410933
  4108c3:	jne    0x4108fd
  4108c5:	inc    esi
  4108c6:	adc    ebx,ebx
  4108c8:	push   0x9b7e0b83
  4108cd:	(bad)
  4108d0:	aad    0x17
  4108d2:	fisub  WORD PTR gs:[edx+0x1]
  4108d6:	dec    edi
  4108d7:	ja     0x4108fe
  4108d9:	or     bl,BYTE PTR [ebp+0x27d8a902]
  4108df:	jae    0x4108f6
  4108e1:	dec    ebp
  4108e2:	pop    ss
  4108e3:	cmp    DWORD PTR [edi+0x27],edi
  4108e6:	out    dx,eax
  4108e7:	(bad)  
  4108e8:	cmp    al,0xf7
  4108ea:	sbb    al,BYTE PTR [edx]
  4108ec:	xor    eax,0xaf81e126
  4108f1:	mov    edx,0xa5f4bb47
  4108f6:	inc    ebx
  4108f7:	jne    0x410948
  4108f9:	scas   eax,DWORD PTR es:[edi]
  4108fa:	dec    ebx
  4108fb:	iret   
  4108fc:	dec    ebp
  4108fd:	lods   eax,DWORD PTR ds:[esi]
  4108fe:	scas   al,BYTE PTR es:[edi]
  4108ff:	fistp  WORD PTR [esi-0x6b]
  410902:	rcl    DWORD PTR [edi],cl
  410904:	retf   0xe126
  410907:	lock jmp 0x3105a957
  41090d:	lods   al,BYTE PTR ds:[esi]
  41090e:	mov    ecx,0xc9a915ac
  410913:	xchg   ecx,eax
  410914:	adc    BYTE PTR [ecx],dh
  410916:	xchg   esp,eax
  410917:	ja     0x410986
  410919:	stc    
  41091a:	mov    dh,0xac
  41091c:	lea    esp,[ecx+esi*8]
  41091f:	test   al,0x37
  410921:	mov    ds:0xd9ca4af3,al
  410926:	idiv   BYTE PTR [ecx+eax*4]
  410929:	jns    0x410975
  41092b:	mov    ah,0x8
  41092d:	aaa    
  41092e:	add    DWORD PTR [edx],esi
  410930:	sbb    bl,ch
  410932:	jmp    0x410922
  410934:	pop    edi
  410935:	dec    ebp
  410936:	scas   al,BYTE PTR es:[edi]
  410937:	sbb    eax,0x2d052172
  41093c:	xchg   edi,eax
  41093d:	stos   BYTE PTR es:[edi],al
  41093e:	add    cl,BYTE PTR [edx+0x3d]
  410941:	inc    DWORD PTR [ebx+0x62cfbc8d]
  410947:	pop    ebx
  410948:	pop    ds
  410949:	inc    ebp
  41094a:	cld    
  41094b:	mov    bl,0xf6
  41094d:	(bad)  [edx+ebp*8+0x1f5a244b]
  410954:	xchg   dl,bl
  410956:	punpckhdq mm0,QWORD PTR [eax-0x69]
  41095a:	xor    al,0xff
  41095c:	xor    eax,0x409c7be8
  410961:	into   
  410962:	(bad)  
  410963:	and    bh,BYTE PTR [edx]
  410965:	push   edi
  410966:	or     DWORD PTR [eax-0x4fb0d58],edx
  41096c:	push   ecx
  41096d:	repnz push ebp
  41096f:	je     0x41096c
  410971:	pop    es
  410972:	mov    esi,ss
  410974:	and    dl,BYTE PTR [eax-0x5344edcd]
  41097a:	inc    eax
  41097b:	pop    ss
  41097c:	jns    0x410942
  41097e:	jp     0x4109e3
  410980:	mov    DWORD PTR [eax+0x15],edx
  410983:	jnp    0x410977
  410985:	mov    dh,0x41
  410987:	xchg   esp,eax
  410988:	adc    al,0x69
  41098a:	adc    al,0x2
  41098c:	popa   
  41098d:	inc    edx
  41098e:	pop    ss
  41098f:	xor    al,0xa
  410991:	lahf   
  410992:	dec    ebx
  410993:	retf   0xbde3
  410996:	retf   
  410997:	add    al,bh
  410999:	pop    ebp
  41099a:	dec    eax
  41099b:	and    DWORD PTR [edx-0x12],ebx
  41099e:	arpl   WORD PTR [eax-0x1e],sp
  4109a1:	inc    ebx
  4109a2:	loopne 0x410983
  4109a4:	ficom  DWORD PTR [edi]
  4109a6:	aas    
  4109a7:	fimul  WORD PTR [eax+0x2d27c2c2]
  4109ad:	test   al,0x1d
  4109af:	mov    eax,ds:0xaa811652
  4109b4:	mov    bl,0xc1
  4109b6:	int3   
  4109b7:	pop    ecx
  4109b8:	ret    0xf64
  4109bb:	pushf  
  4109bc:	retf   0xf6b7
  4109bf:	addr16 dec edi
  4109c1:	pop    esp
  4109c2:	les    ebp,FWORD PTR [ebp+0x1581c053]
  4109c8:	imul   ebp,DWORD PTR [ebx+eax*4+0x21],0xfffffffd
  4109cd:	aas    
  4109ce:	cmp    ebx,DWORD PTR [ebx-0xa604faa]
  4109d4:	or     eax,0xc2d1e7
  4109d9:	fisubr WORD PTR [edi-0x2f]
  4109dc:	scas   eax,DWORD PTR es:[edi]
  4109dd:	imul   BYTE PTR gs:[ecx+eax*2-0x3b]
  4109e2:	add    bl,ch
  4109e4:	mov    dh,0x6b
  4109e6:	sbb    BYTE PTR [ebx+edx*2+0x15],bl
  4109ea:	or     al,0x3e
  4109ec:	les    ebx,FWORD PTR [ebp+edi*8-0x33]
  4109f0:	mov    esp,DWORD PTR [eax+edx*8-0x46ea16d8]
  4109f7:	aas    
  4109f8:	sbb    BYTE PTR [edi+0x3f],0xec
  4109fc:	mov    ecx,0x68d26030
  410a01:	jbe    0x410995
  410a03:	retf   
  410a04:	add    DWORD PTR [ecx-0x3b],ecx
  410a07:	cmp    eax,0xb9f4f7b6
  410a0c:	lock movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410a0e:	dec    ebp
  410a0f:	pop    edx
  410a10:	scas   al,BYTE PTR es:[edi]
  410a11:	and    DWORD PTR [edx-0x32],ebx
  410a14:	add    eax,0x3b9857a2
  410a19:	add    cl,BYTE PTR [ebx]
  410a1b:	and    BYTE PTR [esi-0x588584ce],0x70
  410a22:	jmp    0x410a14
  410a24:	cmp    edx,DWORD PTR [esp+ecx*2+0x58]
  410a28:	mov    ch,0x4e
  410a2a:	adc    al,0x5b
  410a2c:	(bad)  [ecx+0x1f]
  410a2f:	xor    al,0x4a
  410a31:	mov    cl,0xbf
  410a33:	repnz mov ecx,0x9d7ef4d3
  410a39:	xor    eax,0xf5f08d02
  410a3e:	ins    BYTE PTR es:[edi],dx
  410a3f:	xchg   BYTE PTR [ebx],ch
  410a41:	pusha  
  410a42:	dec    ecx
  410a43:	call   0x524a8550
  410a48:	and    DWORD PTR [ebp+0x4b],0x54012759
  410a4f:	sti    
  410a50:	xchg   ecx,eax
  410a51:	lods   al,BYTE PTR ds:[esi]
  410a52:	fwait
  410a53:	clc    
  410a54:	jmp    0x410a71
  410a56:	inc    edx
  410a57:	and    al,0x2e
  410a59:	test   al,0xc3
  410a5b:	cmp    al,0xc0
  410a5d:	lock adc DWORD PTR [esi-0x64],esi
  410a61:	xor    ebp,DWORD PTR [eax+eiz*4+0x61463773]
  410a68:	into   
  410a69:	adc    BYTE PTR [ecx-0x45],al
  410a6c:	mov    ebp,0x49b7e503
  410a71:	mul    BYTE PTR [esi]
  410a73:	mov    esi,eax
  410a75:	sub    eax,0x458fe055
  410a7a:	push   ss
  410a7b:	xor    BYTE PTR [eax-0x74],bl
  410a7e:	hlt    
  410a7f:	mov    ecx,0x95c5339b
  410a84:	je     0x410aa8
  410a86:	mov    dl,0x9b
  410a88:	and    al,0x84
  410a8a:	int3   
  410a8b:	jae    0x410a1b
  410a8d:	jnp    0x410abe
  410a8f:	mov    esp,0xbac176c3
  410a94:	xor    ebx,DWORD PTR [eax-0x67cc44ed]
  410a9a:	aad    0xae
  410a9c:	pusha  
  410a9d:	jp     0x410a7f
  410a9f:	lahf   
  410aa0:	dec    ebp
  410aa1:	into   
  410aa2:	test   DWORD PTR [ebp-0xcdb1204],ebx
  410aa8:	push   esp
  410aa9:	jmp    FWORD PTR [esi]
  410aab:	xchg   ebp,eax
  410aac:	jp     0x410b21
  410aae:	aaa    
  410aaf:	inc    edx
  410ab0:	(bad)  
  410ab1:	not    BYTE PTR [ebp-0x5cc3e063]
  410ab7:	(bad)  
  410ab8:	dec    ecx
  410ab9:	js     0x410a8a
  410abb:	and    al,0x33
  410abd:	cwde   
  410abe:	sbb    BYTE PTR [eax+eiz*2],0x5a
  410ac2:	sub    ebp,DWORD PTR [edx]
  410ac4:	fcom   DWORD PTR [edi+0x10eddbd4]
  410aca:	clc    
  410acb:	arpl   WORD PTR [ecx],dx
  410acd:	stos   BYTE PTR es:[edi],al
  410ace:	xor    BYTE PTR [ebx],0xa2
  410ad1:	sbb    eax,0x2a661cc0
  410ad6:	sbb    ebx,DWORD PTR [esi+0x20]
  410ad9:	cdq    
  410ada:	ss out dx,al
  410adc:	popf   
  410add:	pop    ss
  410ade:	jae    0x410ae9
  410ae0:	mov    cl,0x56
  410ae2:	sub    eax,0x83dbf32d
  410ae7:	adc    al,0xfc
  410ae9:	test   al,0xea
  410aeb:	hlt    
  410aec:	dec    eax
  410aed:	outs   dx,DWORD PTR ds:[esi]
  410aee:	out    dx,eax
  410aef:	cmp    DWORD PTR [eax-0x4b],0xaa46d748
  410af6:	jecxz  0x410b1b
  410af8:	jg     0x410ae8
  410afa:	push   es
  410afb:	pop    ss
  410afc:	into   
  410afd:	or     al,0x86
  410aff:	and    ebp,esi
  410b01:	dec    esp
  410b02:	add    al,BYTE PTR [ebp-0x1d]
  410b05:	and    eax,0xe1aa767f
  410b0a:	pop    ebx
  410b0b:	push   cs
  410b0c:	inc    esp
  410b0d:	int    0x1d
  410b0f:	mov    ecx,0xac260da1
  410b14:	loopne 0x410b34
  410b16:	jns    0x410ac5
  410b18:	add    eax,0x7fc4bd3e
  410b1d:	add    ecx,DWORD PTR [edx]
  410b1f:	sub    al,0x4d
  410b21:	test   al,0x2a
  410b23:	cmp    eax,0x191f881b
  410b28:	dec    esp
  410b29:	ja     0x410b84
  410b2b:	mov    DWORD PTR cs:[edi+esi*8-0x75],eax
  410b30:	and    al,0xd8
  410b32:	pop    ebp
  410b33:	adc    eax,0xd669f148
  410b38:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410b39:	shl    bl,0xbb
  410b3c:	adc    eax,0xb8ee2ba
  410b41:	push   0xffffffef
  410b43:	mov    ah,0xb5
  410b45:	cli    
  410b46:	inc    ecx
  410b47:	rcr    BYTE PTR [ebp+eax*4+0x7b],cl
  410b4b:	ret    0x21e
  410b4e:	jg     0x410b76
  410b50:	stos   DWORD PTR es:[edi],eax
  410b51:	dec    ecx
  410b52:	sub    ch,BYTE PTR [eax+0x41]
  410b55:	(bad)  [edi+0x73]
  410b58:	xchg   ecx,eax
  410b59:	inc    edi
  410b5a:	mov    dh,dh
  410b5c:	mov    al,0x7b
  410b5e:	enter  0xd91e,0x10
  410b62:	dec    esp
  410b63:	int    0x72
  410b65:	and    edx,DWORD PTR ds:0x8b959e03
  410b6b:	out    0x6f,eax
  410b6d:	imul   eax,DWORD PTR [esi-0x18],0xffffffab
  410b71:	es jle 0x410b94
  410b74:	xor    al,0xf7
  410b76:	mov    bl,0xb4
  410b78:	mov    BYTE PTR [ebx],ch
  410b7a:	call   0x8cb2:0xe2e01ec2
  410b81:	pop    ds
  410b82:	cs stos BYTE PTR es:[edi],al
  410b84:	pop    eax
  410b85:	test   eax,0x41f1eb51
  410b8a:	fsubr  QWORD PTR ds:0x46eb291a
  410b90:	imul   ecx,DWORD PTR [edx-0x20cb82d0],0x58
  410b97:	imul   ebp,esi,0xedd65f12
  410b9d:	inc    esp
  410b9e:	(bad)  
  410b9f:	sbb    esi,eax
  410ba1:	vpperm xmm12,xmm7,xmm3,XMMWORD PTR [eax+0x7c]
  410ba8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410ba9:	push   ebp
  410baa:	inc    ebp
  410bab:	dec    esp
  410bac:	or     BYTE PTR [eax-0x26c23d15],0x7b
  410bb3:	pop    ds
  410bb4:	mov    ds:0x18bb887f,eax
  410bb9:	sar    DWORD PTR [ebp+0x7],0x99
  410bbd:	call   0x94fd:0xafa374f9
  410bc4:	ret    
  410bc5:	in     eax,0x87
  410bc7:	clc    
  410bc8:	arpl   WORD PTR [ebx-0x1547a532],bp
  410bce:	pusha  
  410bcf:	lods   eax,DWORD PTR ds:[esi]
  410bd0:	inc    ebx
  410bd1:	popf   
  410bd2:	aad    0x49
  410bd4:	shr    BYTE PTR [edi+0x6ce0090b],0x7a
  410bdb:	in     eax,dx
  410bdc:	xor    DWORD PTR [eax-0x568de433],esp
  410be2:	xchg   DWORD PTR [ebp-0x330f7bdd],edx
  410be8:	cmc    
  410be9:	fsubr  DWORD PTR [esi]
  410beb:	inc    ebx
  410bec:	mov    ?,WORD PTR [edx-0xa]
  410bef:	mov    ebp,0x7f34a40e
  410bf4:	push   edx
  410bf5:	sbb    DWORD PTR [esi-0x18bbeafe],eax
  410bfb:	(bad)  
  410bfc:	cmp    edx,DWORD PTR [ebx-0x25]
  410bff:	std    
  410c00:	mov    DWORD PTR [edi+0x6f63a2f7],edi
  410c06:	mov    dl,0x53
  410c08:	cmp    al,BYTE PTR [ebx]
  410c0a:	scas   al,BYTE PTR es:[edi]
  410c0b:	into   
  410c0c:	mov    ch,0xa0
  410c0e:	xor    bh,ah
  410c10:	cmp    DWORD PTR [ecx+0x49d2d65a],ebx
  410c16:	les    ebx,FWORD PTR [edi-0x37c93d14]
  410c1c:	rcr    bh,0xc5
  410c1f:	les    eax,FWORD PTR [ebx-0xbf3ed2c]
  410c25:	test   bh,ah
  410c27:	pop    edx
  410c28:	scas   al,BYTE PTR es:[edi]
  410c29:	in     al,dx
  410c2a:	pushf  
  410c2b:	add    DWORD PTR [edi+eiz*4+0x44],ebx
  410c2f:	jo     0x410c85
  410c31:	mov    esi,DWORD PTR [esi]
  410c33:	clc    
  410c34:	leave  
  410c35:	inc    ecx
  410c36:	jns    0x410bd4
  410c38:	idiv   dl
  410c3a:	in     al,dx
  410c3b:	jg     0x410bf1
  410c3d:	js     0x410c38
  410c3f:	aaa    
  410c40:	shr    BYTE PTR [ecx],0xc5
  410c43:	xchg   BYTE PTR [edx-0x2d56a996],ah
  410c49:	add    al,0x63
  410c4b:	inc    edi
  410c4c:	adc    cl,BYTE PTR [eax]
  410c4e:	inc    esi
  410c4f:	cdq    
  410c50:	pop    es
  410c51:	lods   al,BYTE PTR ds:[esi]
  410c52:	or     DWORD PTR [ebx],edi
  410c54:	aas    
  410c55:	cmp    bl,BYTE PTR [ebp+0x4adce141]
  410c5b:	mov    ds:0xfb03091e,al
  410c60:	lock out dx,eax
  410c62:	call   0x29af:0x25539cf2
  410c69:	rcr    BYTE PTR [eiz*2+0x632c8458],cl
  410c70:	stos   BYTE PTR es:[edi],al
  410c71:	fisttp WORD PTR [edx+0x11]
  410c74:	js     0x410c58
  410c76:	jg     0x410c74
  410c78:	dec    edx
  410c79:	and    esi,DWORD PTR [ebp-0x35b8a2b5]
  410c7f:	adc    bl,BYTE PTR [ebp-0x7e]
  410c82:	(bad)  
  410c83:	and    BYTE PTR [eax-0x5eae2e51],bl
  410c89:	out    0x53,eax
  410c8b:	aam    0x4e
  410c8d:	add    BYTE PTR [ebx+0x2a],cl
  410c90:	mov    esi,0x9bc94d4b
  410c95:	push   0xba4ae2ba
  410c9a:	push   0xffffffac
  410c9c:	mov    ds:0xcbd9c451,al
  410ca1:	ins    BYTE PTR es:[edi],dx
  410ca2:	or     al,0xf7
  410ca4:	rcr    BYTE PTR [ebp+eiz*2-0x43],1
  410ca8:	ror    BYTE PTR [ecx],0xea
  410cab:	mov    al,0x53
  410cad:	inc    ebx
  410cae:	push   0x7b
  410cb0:	lea    ebp,[eax-0x6b]
  410cb3:	shl    DWORD PTR [ebx],cl
  410cb5:	pop    ebx
  410cb6:	loop   0x410cbf
  410cb8:	jno    0x410cc8
  410cba:	and    cl,ch
  410cbc:	enter  0x368e,0xfa
  410cc0:	pop    es
  410cc1:	nop
  410cc2:	adc    ebp,ebp
  410cc4:	and    cl,BYTE PTR [ecx]
  410cc6:	mov    al,0xb4
  410cc8:	mov    bh,0x1c
  410cca:	(bad)  
  410ccb:	bound  esi,QWORD PTR [esi]
  410ccd:	pop    ecx
  410cce:	cld    
  410ccf:	pop    esi
  410cd0:	loopne 0x410c83
  410cd2:	in     al,0xfc
  410cd4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410cd5:	add    al,0xf2
  410cd7:	adc    eax,0x8a8655dd
  410cdc:	or     BYTE PTR [esi+edi*4],0x40
  410ce0:	pop    ebp
  410ce1:	adc    esp,DWORD PTR [edi+0x3d7c8424]
  410ce7:	xor    al,BYTE PTR [esi]
  410ce9:	push   edi
  410cea:	push   cs
  410ceb:	lods   eax,DWORD PTR ds:[esi]
  410cec:	es scas eax,DWORD PTR es:[edi]
  410cee:	push   edi
  410cef:	pusha  
  410cf0:	add    BYTE PTR [ecx-0x6f],ah
  410cf3:	xchg   ecx,eax
  410cf4:	mov    dl,0x7d
  410cf6:	nop
  410cf7:	aas    
  410cf8:	fist   DWORD PTR [ecx+esi*4+0x1]
  410cfd:	pop    eax
  410cfe:	jno    0x410ca7
  410d00:	aaa    
  410d01:	sub    eax,0x51071c88
  410d06:	fs je  0x410d3c
  410d09:	dec    ebx
  410d0a:	repz sbb BYTE PTR [edi],ah
  410d0d:	lds    ebx,FWORD PTR [esi-0x4f390e2b]
  410d13:	xchg   DWORD PTR ds:[edi-0x2ab337a8],edi
  410d1a:	addr16 push ds
  410d1c:	sbb    DWORD PTR [ebx],eax
  410d1e:	push   es
  410d1f:	out    0x82,al
  410d21:	and    BYTE PTR [ebx-0x3f60a428],ah
  410d27:	push   es
  410d28:	(bad)  
  410d29:	(bad)  
  410d2a:	inc    esi
  410d2b:	mov    gs,WORD PTR [ebp+0xfec9d8]
  410d31:	jns    0x410d4b
  410d33:	xchg   ebx,eax
  410d34:	paddq  mm5,QWORD PTR [eax-0x26e8c63c]
  410d3b:	sbb    al,BYTE PTR [ebx+ebx*4+0x7b]
  410d3f:	test   eax,0xa3c21182
  410d44:	or     ah,BYTE PTR [edi]
  410d46:	in     eax,0x71
  410d48:	adc    al,0xa1
  410d4a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410d4b:	int3   
  410d4c:	and    DWORD PTR [ebp+ecx*8+0x3c],esi
  410d50:	loopne 0x410cd9
  410d52:	xor    BYTE PTR [eax-0x5b],dl
  410d55:	xor    edi,edi
  410d57:	dec    edx
  410d58:	sub    ebp,DWORD PTR [ebp+0x7d79423c]
  410d5e:	iret   
  410d5f:	pop    esp
  410d60:	dec    eax
  410d61:	ret    0xb2b3
  410d64:	pusha  
  410d65:	cdq    
  410d66:	or     BYTE PTR [esp+esi*2+0x30],cl
  410d6a:	sub    ebx,esi
  410d6c:	and    DWORD PTR [edx],ecx
  410d6e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410d6f:	push   ss
  410d70:	(bad)  
  410d71:	fnstsw WORD PTR [ebx]
  410d73:	int    0xfd
  410d75:	stos   DWORD PTR es:[edi],eax
  410d76:	mov    edi,0xd7a8f770
  410d7b:	pop    ecx
  410d7c:	add    al,0x10
  410d7e:	ds inc esp
  410d80:	and    al,BYTE PTR ds:0x5662b990
  410d86:	jno    0x410e04
  410d88:	popa   
  410d89:	jo     0x410d45
  410d8b:	xchg   edx,eax
  410d8c:	out    0xd2,eax
  410d8e:	aaa    
  410d8f:	add    ch,BYTE PTR ds:0x25e19f35
  410d95:	xor    DWORD PTR [edi],ebp
  410d97:	push   ecx
  410d98:	rol    ecx,cl
  410d9a:	loopne 0x410d30
  410d9c:	sub    BYTE PTR [esi-0x59],0x4b
  410da0:	pop    ds
  410da1:	test   BYTE PTR [eax],cl
  410da3:	nop
  410da4:	in     eax,dx
  410da5:	loopne 0x410dd2
  410da7:	ss cld 
  410da9:	ret    
  410daa:	mov    esi,DWORD PTR [ebx-0x52]
  410dad:	dec    esp
  410dae:	stc    
  410daf:	in     al,dx
  410db0:	adc    DWORD PTR [ecx+ebp*1-0xe],ecx
  410db4:	div    DWORD PTR [esi+0xb0b7857]
  410dba:	mov    edi,DWORD PTR [edx]
  410dbc:	push   ebp
  410dbd:	mov    dl,0xa1
  410dbf:	ss mov esi,fs
  410dc2:	mov    ecx,0x8c6f6cb3
  410dc7:	enter  0x960c,0x67
  410dcb:	shl    DWORD PTR [ebx],0x6f
  410dce:	aam    0x7f
  410dd0:	sbb    ch,ch
  410dd2:	rol    DWORD PTR [ebx+0x1b],0x6
  410dd6:	aaa    
  410dd7:	int3   
  410dd8:	pop    ebx
  410dda:	inc    esi
  410ddb:	mov    edi,DWORD PTR [esi]
  410ddd:	pop    es
  410dde:	rcl    DWORD PTR [eax-0x79796fe7],cl
  410de4:	retf   
  410de5:	mov    eax,0x9ff707e6
  410dea:	mov    esp,0x2a6f082e
  410def:	xchg   edi,eax
  410df0:	inc    esi
  410df1:	push   ds
  410df2:	jnp    0x410e3e
  410df4:	jecxz  0x410dbe
  410df6:	cmp    cl,bh
  410df8:	xchg   edi,eax
  410df9:	dec    ebp
  410dfa:	div    BYTE PTR [esi]
  410dfc:	cmp    al,0x6f
  410dfe:	ret    0x9bc4
  410e01:	sbb    edi,ebp
  410e03:	int    0x1a
  410e05:	cli    
  410e06:	int3   
  410e07:	push   eax
  410e08:	sub    esp,edi
  410e0a:	stc    
  410e0b:	pop    esi
  410e0c:	(bad)  
  410e0d:	les    eax,FWORD PTR fs:[ebp+0x3e5d2fa]
  410e14:	sub    ebp,DWORD PTR [ecx+0x38441143]
  410e1a:	xor    ebx,DWORD PTR [eax-0x2506e5bc]
  410e20:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410e21:	push   esi
  410e22:	(bad)  
  410e23:	lea    edx,[ebx]
  410e25:	test   DWORD PTR [ebx],edx
  410e27:	add    al,0xc4
  410e29:	(bad)  
  410e2a:	icebp  
  410e2b:	ror    BYTE PTR [esi],1
  410e2d:	push   0x277e6e7f
  410e32:	jl     0x410db4
  410e34:	xchg   edx,eax
  410e35:	dec    ebp
  410e36:	or     cl,BYTE PTR [edi+0x6e]
  410e39:	pop    eax
  410e3a:	stc    
  410e3b:	fwait
  410e3c:	jle    0x410e01
  410e3e:	dec    DWORD PTR [ebp-0x192a7d76]
  410e44:	xchg   DWORD PTR ds:[ebp+edi*8-0x6b34a68f],esp
  410e4c:	xor    DWORD PTR [edx+0x6761143e],0x4f2938f8
  410e56:	xlat   BYTE PTR ds:[ebx]
  410e57:	jns    0x410e20
  410e59:	cdq    
  410e5a:	adc    esi,DWORD PTR [ebx+0x55229c88]
  410e60:	xor    DWORD PTR [esi-0x7ff1ebc6],ecx
  410e66:	jl     0x410ea9
  410e68:	dec    bl
  410e6a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410e6b:	cmp    DWORD PTR ds:[esp+ebx*4-0xd],eax
  410e70:	jmp    0xd5105c87
  410e75:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410e76:	inc    edi
  410e77:	fimul  DWORD PTR [ecx]
  410e79:	sbb    DWORD PTR [edi+0x2dca813b],0xb2658bc6
  410e83:	xor    eax,0xa3d6ead1
  410e88:	jp     0x410e55
  410e8a:	fcomp  DWORD PTR [edx-0x54001bc2]
  410e90:	sub    BYTE PTR [esi],bl
  410e92:	pop    ds
  410e93:	test   edi,0x80a89000
  410e99:	out    dx,al
  410e9a:	mov    al,ds:0xf8097892
  410e9f:	or     ebp,DWORD PTR [ecx-0x6e]
  410ea2:	xchg   edx,eax
  410ea3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410ea4:	out    dx,al
  410ea5:	idiv   DWORD PTR [edi-0xb]
  410ea8:	(bad)  
  410ea9:	lds    esp,FWORD PTR [esi-0x28b64d29]
  410eaf:	pusha  
  410eb0:	les    esp,FWORD PTR [esi+0x3d]
  410eb3:	iret   
  410eb4:	fidiv  DWORD PTR [eax-0x4282c379]
  410eba:	pop    edx
  410ebb:	mov    ebx,DWORD PTR ds:0x9f7b6854
  410ec1:	shl    DWORD PTR [esi+esi*1],0xf2
  410ec5:	sahf   
  410ec6:	inc    esp
  410ec7:	push   0xc0081916
  410ecc:	push   esi
  410ecd:	cmp    al,BYTE PTR [edx]
  410ecf:	xor    DWORD PTR [edx+0x7dbb2b1],edi
  410ed5:	mov    ds:0x76c2ee84,eax
  410eda:	and    BYTE PTR [edi+0x6b],cl
  410edd:	pop    edx
  410ede:	or     ah,BYTE PTR [ebp-0x70]
  410ee1:	jge    0x410e71
  410ee3:	mov    ds:0x4105251f,al
  410ee8:	mov    dh,0x47
  410eea:	xchg   edi,eax
  410eeb:	repnz pop edx
  410eed:	outs   dx,BYTE PTR ds:[esi]
  410eee:	xchg   esi,edx
  410ef0:	daa    
  410ef1:	stos   DWORD PTR es:[edi],eax
  410ef2:	push   eax
  410ef3:	xchg   esp,eax
  410ef4:	test   eax,0x8ed5ae70
  410ef9:	xor    al,0xa9
  410efb:	popa   
  410efc:	(bad)  
  410efd:	pop    ss
  410efe:	and    DWORD PTR [ebx],esp
  410f00:	jb     0x410eec
  410f02:	jmp    0xdcefad6c
  410f07:	sub    eax,0x300c037f
  410f0c:	jle    0x410f88
  410f0e:	xchg   BYTE PTR [eax-0x1b],bh
  410f11:	repz sub eax,0xa9340e2a
  410f17:	sub    edx,DWORD PTR ds:0x731ba3a0
  410f1d:	adc    dh,BYTE PTR [eax]
  410f1f:	jge    0x410eff
  410f21:	rcr    BYTE PTR [ebx],cl
  410f23:	mov    ebp,0xc924c2fc
  410f28:	(bad)  
  410f29:	adc    al,0x15
  410f2b:	sbb    BYTE PTR [eax],bh
  410f2d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410f2e:	retf   
  410f2f:	retf   0x7dbb
  410f32:	sti    
  410f33:	mov    ebp,DWORD PTR [esi]
  410f35:	rcr    DWORD PTR [ecx+0x33],1
  410f38:	loop   0x410f16
  410f3a:	ret    
  410f3b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410f3c:	add    BYTE PTR ds:0x95a6c44a,al
  410f42:	push   ecx
  410f43:	int    0xb0
  410f45:	xor    eax,0x14b3699d
  410f4a:	or     DWORD PTR [ebx-0x51],edi
  410f4d:	adc    edx,DWORD PTR [ecx+0x79]
  410f50:	je     0x410f7b
  410f52:	in     al,dx
  410f53:	or     eax,0x41f859d4
  410f58:	fisttp WORD PTR [ebx+eiz*4-0x1a]
  410f5c:	shl    BYTE PTR [ecx+0x12],1
  410f5f:	shl    DWORD PTR [edx],cl
  410f61:	imul   ecx,DWORD PTR [ecx],0xffffffbf
  410f64:	test   al,0x91
  410f66:	and    BYTE PTR [edi],bh
  410f68:	sub    al,0x3b
  410f6a:	outs   dx,DWORD PTR ds:[esi]
  410f6b:	cmp    dh,ch
  410f6d:	(bad)  
  410f6e:	jbe    0x410f42
  410f70:	mov    al,0x4c
  410f72:	mov    ds:0x38245b93,al
  410f77:	jbe    0x410f4e
  410f79:	cmp    cl,BYTE PTR [edx+0x57]
  410f7c:	addr16 adc eax,0x951f665e
  410f82:	les    edx,FWORD PTR [esi+0x6ca9af5e]
  410f88:	or     BYTE PTR [edx],0x1b
  410f8b:	add    cl,dl
  410f8d:	imul   edi,DWORD PTR [ebx-0x7c0954a7],0xffffff94
  410f94:	mov    ?,ebx
  410f96:	mov    eax,ds:0xb21840a4
  410f9b:	and    DWORD PTR [esi+ebx*4],0xffffffeb
  410f9f:	xchg   ebx,eax
  410fa0:	cld    
  410fa1:	cmp    ecx,DWORD PTR [esp+eax*1]
  410fa4:	xor    bh,BYTE PTR [ebx+0x2f7bbad]
  410faa:	leave  
  410fab:	add    BYTE PTR [edi-0x65],0xe
  410faf:	jae    0x410fd5
  410fb1:	lahf   
  410fb2:	test   DWORD PTR [esi],ebp
  410fb4:	aaa    
  410fb5:	(bad)  
  410fb6:	mov    edi,0x5dbddc92
  410fbb:	mov    eax,ds:0x5671b7ae
  410fc0:	mov    ecx,0xf8c9fcea
  410fc5:	xchg   edi,eax
  410fc6:	mov    esp,0xd32c7c10
  410fcb:	fnstenv [ebx-0x2e]
  410fce:	int    0xb8
  410fd0:	jge    0x410fdd
  410fd2:	outs   dx,DWORD PTR ds:[esi]
  410fd3:	(bad)  
  410fd4:	jo     0x411020
  410fd6:	ins    DWORD PTR es:[edi],dx
  410fd7:	leave  
  410fd8:	dec    ebp
  410fd9:	(bad)  
  410fda:	call   0xb698eca5
  410fdf:	add    al,0x35
  410fe1:	pushf  
  410fe2:	or     DWORD PTR [esi-0x63],0xfc0665f3
  410fe9:	cs inc edx
  410feb:	(bad)
  410fee:	jge    0x410f9c
  410ff0:	imul   edi,DWORD PTR [esp+esi*2+0x58e3dd80],0xffffffb6
  410ff8:	call   0x157e1ee0
  410ffd:	in     al,0x4d
  410fff:	(bad)  
  411000:	jnp    0x411003
  411002:	les    edx,FWORD PTR [edx-0x25e4c170]
  411008:	cmp    cl,bl
  41100a:	mov    ah,BYTE PTR [ebx]
  41100c:	mov    DWORD PTR [esi],edx
  41100e:	xchg   edi,eax
  41100f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411010:	icebp  
  411011:	mov    dh,0xdc
  411013:	retf   
  411014:	loope  0x41102f
  411016:	mov    cl,0x72
  411018:	mov    edx,0x4a3fd753
  41101d:	dec    ebx
  41101e:	adc    BYTE PTR [ebx],0x6f
  411021:	gs sub al,al
  411024:	adc    al,0xee
  411026:	jg     0x410fc5
  411028:	and    eax,0xa5436955
  41102d:	pop    ecx
  41102e:	mov    ds:0x5adfff5,al
  411033:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411034:	inc    ecx
  411035:	(bad)  
  411037:	push   0x55
  411039:	xchg   ecx,eax
  41103a:	pop    ss
  41103b:	add    eax,0x41249340
  411040:	retf   
  411041:	in     al,0xaa
  411043:	in     eax,dx
  411044:	mov    al,0x2
  411046:	test   DWORD PTR [eax+ebp*8-0x2b],esi
  41104a:	test   eax,0x14887f0d
  41104f:	pop    ds
  411050:	lea    ecx,[edi+0x28]
  411053:	xchg   BYTE PTR [eax+0x47],al
  411056:	ret    
  411057:	test   al,0xe0
  411059:	jmp    0x7b40eea8
  41105e:	popa   
  41105f:	dec    eax
  411060:	out    dx,eax
  411061:	ins    DWORD PTR es:[edi],dx
  411062:	icebp  
  411063:	ret    
  411064:	sub    ebp,eax
  411066:	or     ebx,0xe836a0b9
  41106c:	xchg   bl,dl
  41106e:	push   edi
  41106f:	loope  0x411022
  411071:	mov    esi,0xfd4ddf48
  411076:	ror    BYTE PTR [ecx+0x22],1
  411079:	sub    dh,BYTE PTR [edi+0x34]
  41107c:	xchg   ebx,eax
  41107d:	pop    ebp
  41107e:	mov    al,0xf6
  411080:	cmc    
  411081:	aad    0xcb
  411083:	fbstp  TBYTE PTR [ecx-0x7216afd4]
  411089:	mov    eax,ds:0xb485fc3e
  41108e:	(bad)  
  41108f:	jne    0x41110a
  411091:	mov    edi,0x875d2adc
  411096:	clc    
  411097:	adc    cl,BYTE PTR [ebp+0x47]
  41109a:	mov    cs,edx
  41109c:	(bad)  
  41109e:	mov    esp,0x736889e8
  4110a3:	pop    ebx
  4110a4:	sbb    ah,BYTE PTR [ebp+0xfdd8be6]
  4110aa:	inc    ebp
  4110ab:	stos   DWORD PTR es:[edi],eax
  4110ac:	lahf   
  4110ad:	lds    esp,FWORD PTR [eax-0x60]
  4110b0:	pop    es
  4110b1:	or     ebx,DWORD PTR [esi+0x213c5544]
  4110b7:	imul   ebx,DWORD PTR [edi-0x6aec9631],0x6ee13bd9
  4110c1:	(bad)  
  4110c2:	outs   dx,BYTE PTR ds:[esi]
  4110c3:	(bad)  
  4110c4:	in     eax,0x6d
  4110c6:	dec    ebp
  4110c7:	xchg   edi,eax
  4110c8:	fnstsw WORD PTR [edi-0x60]
  4110cb:	idiv   BYTE PTR [eax+0x44]
  4110ce:	fsin   
  4110d0:	fisub  DWORD PTR [esi-0x66]
  4110d3:	jecxz  0x411070
  4110d5:	jl     0x411075
  4110d7:	pop    ecx
  4110d8:	lds    ebp,FWORD PTR [edx+0x31]
  4110db:	mov    edi,DWORD PTR [ecx]
  4110dd:	fcomp  QWORD PTR [eax-0x2]
  4110e0:	out    dx,al
  4110e1:	mov    al,0x58
  4110e3:	add    ebp,esi
  4110e5:	sbb    eax,0xcbefd52b
  4110ea:	outs   dx,DWORD PTR ds:[esi]
  4110eb:	or     al,0x35
  4110ed:	inc    edx
  4110ee:	out    0x41,al
  4110f0:	or     al,0x8
  4110f2:	or     al,0x23
  4110f4:	ds dec edi
  4110f6:	dec    esp
  4110f7:	loop   0x4110f4
  4110f9:	fld    QWORD PTR [ebx-0x5dbb3570]
  4110ff:	ret    
  411100:	pop    ebx
  411101:	dec    ebx
  411102:	mov    ecx,DWORD PTR [ecx]
  411104:	push   ss
  411105:	push   cs
  411106:	add    BYTE PTR [ecx],0x9
  411109:	lds    ebx,FWORD PTR [edi+edi*2-0x11104c23]
  411110:	cmp    al,0x2b
  411112:	jns    0x411156
  411114:	or     al,0xa4
  411116:	push   ebp
  411117:	aad    0x2e
  411119:	enter  0x85ac,0x33
  41111d:	push   0xf1e85468
  411122:	adc    ah,bh
  411124:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411125:	jl     0x411145
  411127:	jmp    0x41117d
  411129:	inc    ebx
  41112a:	repnz test eax,0x701f98ab
  411130:	jmp    0x411116
  411132:	mov    edi,0xd9dfd377
  411137:	sub    DWORD PTR [edi-0x51],edi
  41113a:	or     ebp,ebx
  41113c:	inc    edi
  41113d:	cmp    ah,BYTE PTR [edi+0x8]
  411140:	mov    ah,0x67
  411142:	xchg   DWORD PTR [esi],eax
  411144:	jecxz  0x411180
  411146:	arpl   WORD PTR [ecx+0x7381f2e3],si
  41114c:	push   edx
  41114e:	jmp    FWORD PTR [ebx+ebx*4+0x60]
  411152:	jmp    0x411159
  411154:	fidivr WORD PTR [edx]
  411156:	int3   
  411157:	pop    edx
  411158:	sahf   
  411159:	dec    esi
  41115a:	jb     0x411177
  41115c:	mov    bl,0x14
  41115e:	ds sbb dl,dl
  411161:	les    ebx,FWORD PTR [eax+0x18]
  411164:	out    dx,al
  411165:	scas   al,BYTE PTR es:[edi]
  411166:	leave  
  411167:	adc    DWORD PTR [ecx-0x278e812f],eax
  41116d:	mov    BYTE PTR [esi],dh
  41116f:	in     eax,0x5
  411171:	inc    esi
  411172:	jmp    0x411176
  411174:	jb     0x41119b
  411176:	aas    
  411177:	sub    DWORD PTR ds:0x8ca4246f,ecx
  41117d:	lahf   
  41117e:	add    eax,eax
  411180:	mov    ?,WORD PTR fs:[ebx+eiz*1+0x4]
  411185:	in     al,0xaa
  411187:	in     eax,0x2a
  411189:	push   cs
  41118a:	loopne 0x411199
  41118c:	adc    ebx,DWORD PTR [esi]
  41118e:	clc    
  41118f:	jle    0x4111b9
  411191:	jbe    0x41117b
  411193:	out    dx,eax
  411194:	pop    ecx
  411195:	aaa    
  411196:	rcr    bh,cl
  411198:	dec    edx
  411199:	scas   al,BYTE PTR es:[edi]
  41119a:	ret    
  41119b:	xchg   ebx,eax
  41119c:	jp     0x4111c6
  41119e:	jo     0x4111ef
  4111a0:	push   edi
  4111a1:	adc    BYTE PTR [edx+ebx*2],ch
  4111a4:	repz cdq 
  4111a6:	(bad)  
  4111a7:	(bad)  [edx]
  4111a9:	add    BYTE PTR [eax-0x6829dbc0],cl
  4111af:	shr    esp,1
  4111b1:	sbb    BYTE PTR [ebx+edi*1-0xbcd70a7],dh
  4111b8:	mov    edi,0x968858f2
  4111bd:	test   DWORD PTR [ecx+0x5125789b],ebp
  4111c3:	fimul  WORD PTR [ebp+0x30]
  4111c6:	sub    eax,0x946f34e9
  4111cb:	push   esp
  4111cc:	lds    ebp,FWORD PTR [esi-0x5d]
  4111cf:	dec    ecx
  4111d0:	les    ebp,FWORD PTR [ecx+0x67e1ad91]
  4111d6:	add    al,0x15
  4111d8:	sbb    esp,edi
  4111da:	sub    esi,DWORD PTR [ecx]
  4111dc:	dec    esp
  4111dd:	push   edi
  4111de:	sbb    edi,DWORD PTR [edi+0x4971f117]
  4111e4:	jge    0x411263
  4111e6:	inc    DWORD PTR [edi]
  4111e8:	rol    BYTE PTR [edx+0x61],cl
  4111eb:	mov    esp,0x7e060d47
  4111f0:	jl     0x411251
  4111f2:	gs xchg ecx,eax
  4111f4:	xor    al,0x37
  4111f6:	dec    eax
  4111f7:	and    edx,ecx
  4111f9:	adc    al,0xdc
  4111fb:	dec    esi
  4111fc:	jno    0x41118c
  4111fe:	imul   ebx,edi,0xffffff9b
  411201:	jmp    0x411257
  411203:	aam    0x7
  411205:	repnz (bad) 
  411207:	fbstp  TBYTE PTR [ebp-0x4f]
  41120a:	lahf   
  41120b:	fdivr  st,st(4)
  41120d:	enter  0x3a92,0x6c
  411211:	cmp    DWORD PTR [ecx],edx
  411213:	xor    ch,BYTE PTR [edx]
  411215:	je     0x411203
  411217:	in     al,dx
  411218:	pop    edx
  411219:	push   0x50
  41121b:	pop    ss
  41121c:	pop    ss
  41121d:	cmp    ebx,DWORD PTR [eax]
  41121f:	(bad)  
  411221:	mov    ecx,0x77ce7bd9
  411226:	ret    
  411227:	and    al,0xc7
  411229:	fisub  DWORD PTR [esi-0x22]
  41122c:	lds    eax,FWORD PTR [ebx]
  41122e:	add    eax,0xaac5b9b4
  411233:	(bad)  
  411234:	cs leave 
  411236:	adc    eax,0xb7ecf73b
  41123b:	push   ax
  41123d:	or     al,0xd0
  41123f:	jl     0x4111fc
  411241:	ins    DWORD PTR es:[edi],dx
  411242:	inc    ebp
  411243:	jnp    0x41124d
  411245:	data16 (bad) 
  411247:	mov    al,ds:0x99d052c6
  41124c:	scas   eax,DWORD PTR es:[edi]
  41124d:	scas   al,BYTE PTR es:[edi]
  41124e:	xchg   ecx,eax
  41124f:	push   cs
  411250:	test   DWORD PTR [eax+0x61771789],esi
  411256:	inc    esp
  411257:	and    BYTE PTR [edi+0x1cdf21c6],0x2c
  41125e:	sbb    DWORD PTR [edi+0x6],eax
  411261:	rol    DWORD PTR [esi-0x602eb765],0x11
  411268:	pop    edi
  411269:	jae    0x41127f
  41126b:	jo     0x411207
  41126d:	ins    BYTE PTR es:[edi],dx
  41126e:	sbb    al,0xd1
  411270:	pop    eax
  411271:	adc    dl,BYTE PTR [ebp-0x1acc5516]
  411277:	inc    edx
  411278:	(bad)  
  411279:	cmp    al,0xb8
  41127b:	mov    ah,0x92
  41127d:	(bad)  
  41127e:	mov    esp,0x550e6aed
  411283:	ret    0x8fab
  411286:	inc    edi
  411287:	push   ss
  411288:	outs   dx,BYTE PTR ds:[esi]
  411289:	ja     0x4112d1
  41128b:	adc    eax,DWORD PTR [eax-0x3a]
  41128e:	scas   al,BYTE PTR es:[edi]
  41128f:	mov    ds,WORD PTR [eax-0x6]
  411292:	int3   
  411293:	mov    ds:0xf6a4c47,eax
  411298:	dec    eax
  411299:	nop
  41129a:	mov    cl,0x95
  41129c:	push   edi
  41129d:	mov    esi,0xa02bc3fa
  4112a2:	push   cs
  4112a3:	jb     0x4112e8
  4112a5:	cwde   
  4112a6:	add    eax,0xf889f9cf
  4112ab:	leave  
  4112ac:	test   BYTE PTR [ecx-0x69f2b965],bl
  4112b2:	es dec edx
  4112b4:	clc    
  4112b5:	(bad)  
  4112b6:	icebp  
  4112b7:	ins    DWORD PTR es:[edi],dx
  4112b8:	fsub   DWORD PTR cs:[edx]
  4112bb:	aaa    
  4112bc:	cmp    BYTE PTR [edx-0x57416794],ch
  4112c2:	cmp    BYTE PTR [edi+0x3ea3d5b9],dh
  4112c8:	sbb    edx,eax
  4112ca:	xchg   edx,eax
  4112cb:	sbb    al,0xc3
  4112cd:	mov    bl,BYTE PTR [edx]
  4112cf:	mov    bl,0xc7
  4112d1:	(bad)  
  4112d3:	dec    eax
  4112d4:	sub    ch,BYTE PTR [ebp+eax*4+0x5bcaf766]
  4112db:	inc    esi
  4112dc:	hlt    
  4112dd:	stos   BYTE PTR es:[edi],al
  4112de:	outs   dx,BYTE PTR ds:[esi]
  4112df:	mov    WORD PTR [edi-0xe94dc3a],?
  4112e5:	sbb    eax,0xd3dabf65
  4112ea:	pop    ds
  4112eb:	sahf   
  4112ec:	in     eax,0x20
  4112ee:	mov    esp,0x13af224b
  4112f3:	jecxz  0x4112cd
  4112f5:	add    ecx,ebx
  4112f7:	add    edi,esp
  4112f9:	xor    ch,BYTE PTR [edx+0xf1260d1]
  4112ff:	ror    DWORD PTR [esi-0x398e0e46],cl
  411305:	cmp    ebp,DWORD PTR [ecx]
  411307:	xlat   BYTE PTR ds:[ebx]
  411308:	sbb    DWORD PTR [esi+0x4b],ebx
  41130b:	xchg   esp,eax
  41130c:	cmp    al,0x73
  41130e:	stos   BYTE PTR es:[edi],al
  41130f:	xchg   esp,eax
  411310:	cdq    
  411311:	std    
  411312:	xchg   edx,eax
  411313:	pop    ebp
  411314:	xchg   edi,eax
  411315:	inc    esi
  411316:	scas   al,BYTE PTR es:[edi]
  411317:	jmp    0x41134d
  411319:	les    esi,FWORD PTR [edx+0x9]
  41131c:	pusha  
  41131d:	jp     0x411330
  41131f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411320:	fdivr  DWORD PTR ds:0x9837c405
  411326:	mov    ds:0x270c6832,al
  41132b:	(bad)  
  41132d:	push   edi
  41132e:	lea    ebp,[ebx]
  411330:	cdq    
  411331:	cmp    DWORD PTR [eax+0x26],edi
  411334:	dec    BYTE PTR [eax+0x18013032]
  41133a:	or     al,0xb0
  41133c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41133d:	fwait
  41133e:	push   ebx
  41133f:	mov    ah,0xeb
  411341:	ins    BYTE PTR es:[edi],dx
  411342:	sub    al,0x83
  411344:	sbb    DWORD PTR [edi-0x1cffc367],eax
  41134a:	lds    edx,FWORD PTR [ebx]
  41134c:	sbb    al,0x6
  41134e:	push   es
  41134f:	jge    0x4112e8
  411351:	jnp    0x4113ab
  411353:	lods   al,BYTE PTR ds:[esi]
  411354:	add    al,0x94
  411356:	loope  0x411399
  411358:	je     0x4112fb
  41135a:	mov    ebp,0x68802b36
  41135f:	pop    es
  411360:	test   DWORD PTR [edi+0x40],0xc1ca8e4b
  411367:	(bad)  
  411368:	push   eax
  411369:	push   ebx
  41136a:	push   ebp
  41136b:	xlat   BYTE PTR ds:[ebx]
  41136c:	jae    0x411321
  41136e:	push   ss
  41136f:	cs dec edi
  411371:	repz (bad) 
  411373:	cli    
  411374:	mov    WORD PTR [eax-0x29],ss
  411377:	shl    BYTE PTR [edi+0x57],cl
  41137a:	arpl   WORD PTR [ebx+0x1308c3b0],bp
  411380:	inc    eax
  411381:	sub    dh,al
  411383:	mov    dh,0x41
  411385:	or     eax,DWORD PTR [eax-0x8e1cfa4]
  41138b:	xchg   esp,eax
  41138c:	loopne 0x41135f
  41138e:	mov    DWORD PTR [eax-0xc],ecx
  411391:	jo     0x41132f
  411393:	test   eax,0xbe4215ab
  411398:	or     ebx,DWORD PTR [ecx+0x693926f3]
  41139e:	dec    ecx
  41139f:	or     al,0x2
  4113a1:	xchg   ecx,eax
  4113a2:	lods   eax,DWORD PTR ds:[esi]
  4113a3:	jmp    edx
  4113a5:	jle    0x4113b0
  4113a7:	repnz movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4113a9:	mov    eax,ds:0xcd675822
  4113ae:	sub    BYTE PTR [esi+0x50],0x66
  4113b2:	pop    eax
  4113b3:	jg     0x4113af
  4113b5:	and    esi,ebx
  4113b7:	jecxz  0x4113bf
  4113b9:	mov    dl,0x1a
  4113bb:	mov    bh,0xec
  4113bd:	imul   eax,DWORD PTR [esi+eiz*1-0x63bd70b0],0x15
  4113c5:	arpl   bp,ax
  4113c7:	jl     0x41137d
  4113c9:	repz cmp eax,0x3a61cd4d
  4113cf:	mov    ds:0xbaec19d0,eax
  4113d4:	push   es
  4113d5:	iret   
  4113d6:	mov    ebp,0x799cbc44
  4113db:	sbb    al,0xd
  4113dd:	mov    edx,0xf093212a
  4113e2:	in     eax,dx
  4113e3:	mov    ds:0x138beab9,eax
  4113e8:	mov    ah,0x4
  4113ea:	add    DWORD PTR [esi],eax
  4113ec:	scas   al,BYTE PTR es:[edi]
  4113ed:	cmovs  ebx,DWORD PTR [edx-0x4f]
  4113f1:	push   ds
  4113f2:	xchg   DWORD PTR [edx],ecx
  4113f4:	stos   BYTE PTR es:[edi],al
  4113f5:	loope  0x41141f
  4113f7:	inc    ecx
  4113f8:	mov    al,0xd7
  4113fa:	es repnz call 0x5592:0xb3abf71b
  411403:	pusha  
  411404:	pop    esi
  411405:	push   ss
  411406:	adc    BYTE PTR [eax-0x4d02ccd4],ah
  41140c:	or     ch,bl
  41140e:	push   ss
  41140f:	push   ebp
  411410:	push   ss
  411411:	ds jbe 0x4113a6
  411414:	push   edi
  411415:	stos   DWORD PTR es:[edi],eax
  411416:	sbb    DWORD PTR [eax],esp
  411418:	fdivr  QWORD PTR [edx+0x17]
  41141b:	sbb    eax,0xbb826fc4
  411420:	inc    edi
  411421:	sub    ecx,DWORD PTR [ecx-0x71]
  411424:	rol    DWORD PTR [ecx+0x11],0x91
  411428:	mov    eax,ds:0x556f47dc
  41142d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41142e:	push   esp
  41142f:	jo     0x41143e
  411431:	or     eax,0xe3fb1e4a
  411436:	xchg   BYTE PTR [esp+ebx*8+0x2d],bh
  41143a:	pop    ecx
  41143b:	fdecstp 
  41143d:	ret    
  41143e:	stos   BYTE PTR es:[edi],al
  41143f:	push   ebx
  411440:	push   esp
  411441:	xchg   cl,dh
  411443:	adc    al,0x25
  411445:	ja     0x4114b7
  411447:	addr16 fwait
  411449:	cli    
  41144a:	xchg   ecx,eax
  41144b:	mov    al,0x98
  41144d:	call   0x465c735d
  411452:	mov    edx,DWORD PTR [esi-0x6b]
  411455:	in     al,dx
  411456:	jb     0x411498
  411458:	jecxz  0x41149b
  41145a:	cld    
  41145b:	jg     0x411448
  41145d:	xchg   ebp,eax
  41145e:	mov    ah,0xa1
  411460:	mov    dh,0x67
  411462:	cmc    
  411463:	cmp    esi,DWORD PTR [edi+ebx*2+0x52798d44]
  41146a:	or     eax,0x685cea8e
  41146f:	fadd   st,st(1)
  411471:	add    cl,dh
  411473:	and    bh,BYTE PTR [ebp+0x587ffa96]
  411479:	adc    BYTE PTR es:[edi+0x5c],dh
  41147d:	xlat   BYTE PTR ds:[ebx]
  41147e:	mov    esi,0xab5937d6
  411483:	xlat   BYTE PTR ds:[ebx]
  411484:	pop    eax
  411485:	push   ss
  411486:	fisubr WORD PTR [ecx+0x1b]
  411489:	jb     0x411428
  41148b:	pop    eax
  41148c:	push   0x137bd11a
  411491:	xor    DWORD PTR [eax],ebx
  411493:	lahf   
  411494:	(bad)  
  411496:	std    
  411497:	pop    ds
  411498:	outs   dx,BYTE PTR ds:[esi]
  411499:	adc    eax,0x55c81806
  41149e:	push   esi
  41149f:	inc    edx
  4114a0:	sub    eax,0x3bdb1615
  4114a5:	std    
  4114a6:	sub    BYTE PTR [edi-0xabaeae5],bh
  4114ac:	adc    al,0xef
  4114ae:	pop    ebx
  4114af:	shl    BYTE PTR [esi+ecx*2-0x71],0xc8
  4114b4:	std    
  4114b5:	stc    
  4114b6:	inc    eax
  4114b7:	jo     0x4114a1
  4114b9:	sbb    dh,BYTE PTR [esi]
  4114bb:	cli    
  4114bc:	push   0x2f4b48d3
  4114c1:	arpl   WORD PTR [edx+0x48],bx
  4114c4:	in     al,dx
  4114c5:	jae    0x4114a7
  4114c7:	fsub   QWORD PTR [esi-0x1484e20c]
  4114cd:	dec    ebx
  4114ce:	pop    edi
  4114cf:	je     0x4114c0
  4114d1:	mov    DWORD PTR fs:[edi+0x44a17458],edx
  4114d8:	loope  0x41152d
  4114da:	loope  0x41155a
  4114dc:	xchg   edx,eax
  4114dd:	add    DWORD PTR [eax],edi
  4114df:	or     ch,dl
  4114e1:	sti    
  4114e2:	repnz inc eax
  4114e4:	and    eax,0x80d33433
  4114e9:	fwait
  4114ea:	addr16 jmp 0x10c40397
  4114f0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4114f1:	nop
  4114f2:	add    eax,0xf877e981
  4114f7:	inc    ecx
  4114f8:	dec    edi
  4114f9:	iret   
  4114fa:	push   edx
  4114fb:	fwait
  4114fc:	sub    DWORD PTR [esi],ecx
  4114fe:	hlt    
  4114ff:	mov    al,ds:0x32669ec1
  411504:	outs   dx,BYTE PTR ds:[esi]
  411505:	jp     0x41155d
  411507:	inc    ebx
  411508:	pop    ecx
  411509:	adc    ebp,esp
  41150b:	add    eax,0x7b865e71
  411510:	out    0xf4,eax
  411512:	dec    edx
  411513:	repnz xor dh,BYTE PTR [esi]
  411516:	pop    es
  411517:	or     eax,0x81ec1374
  41151c:	das    
  41151d:	outs   dx,DWORD PTR ds:[esi]
  41151e:	pop    edi
  41151f:	pop    eax
  411520:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411521:	inc    eax
  411522:	or     al,0x42
  411524:	cld    
  411525:	sbb    DWORD PTR [ebx],ebp
  411527:	cmp    al,0xee
  411529:	test   DWORD PTR [edx-0x21],esi
  41152c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41152d:	cld    
  41152e:	(bad)  
  41152f:	or     BYTE PTR [edx+eax*2],dh
  411532:	test   BYTE PTR [ebx+0x63c98927],0x8c
  411539:	cwde   
  41153a:	leave  
  41153b:	and    BYTE PTR [ebx-0x5b07cad6],al
  411541:	rcr    ebx,1
  411543:	inc    ebp
  411544:	push   ecx
  411545:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411546:	pushf  
  411547:	cdq    
  411548:	lds    ebx,FWORD PTR ds:0xb25df807
  41154e:	mov    ss,WORD PTR [edi+0x23e5b2cc]
  411554:	mov    esi,0xf782ec1b
  411559:	and    BYTE PTR [eax-0x1e],0x6d
  41155d:	mov    dh,0x44
  41155f:	jb     0x4115ad
  411561:	test   eax,0x8d250d66
  411566:	mov    edi,0x82243028
  41156b:	popf   
  41156c:	cdq    
  41156d:	push   ebx
  41156e:	fild   QWORD PTR [ecx+0x7d]
  411571:	outs   dx,BYTE PTR ds:[esi]
  411572:	or     eax,DWORD PTR [esi+0x4bad4103]
  411578:	pop    eax
  411579:	sub    eax,0xbf483ae
  41157e:	(bad)  
  41157f:	pop    ss
  411580:	fsub   QWORD PTR [edx+0x61]
  411583:	xchg   ebx,eax
  411584:	test   eax,0xeff30735
  411589:	xor    DWORD PTR [edi],0x32
  41158c:	sub    al,0xdf
  41158e:	pop    esp
  41158f:	pop    ebx
  411590:	sbb    DWORD PTR [ecx],edx
  411592:	out    dx,eax
  411593:	inc    ecx
  411594:	jle    0x4115ab
  411596:	clc    
  411597:	je     0x4115f1
  411599:	sbb    ch,BYTE PTR [ecx+0x3f]
  41159c:	and    DWORD PTR [ecx-0xceba54],ebp
  4115a2:	clc    
  4115a3:	inc    ebp
  4115a4:	add    eax,0xd67b0f29
  4115a9:	stc    
  4115aa:	scas   al,BYTE PTR es:[edi]
  4115ab:	call   0x936cb8a3
  4115b0:	xor    DWORD PTR [esi+eiz*4],0xfffffff2
  4115b4:	xor    al,0x2d
  4115b6:	push   ds
  4115b7:	sub    cl,al
  4115b9:	idiv   esp
  4115bb:	outs   dx,BYTE PTR ds:[esi]
  4115bc:	cmp    BYTE PTR [ecx+0x56],ch
  4115bf:	xor    al,0x6a
  4115c1:	punpcklbw mm5,DWORD PTR [edx+0x3f]
  4115c5:	(bad)  
  4115c6:	pop    edi
  4115c7:	into   
  4115c8:	rcr    DWORD PTR [ecx+0x6d],cl
  4115cb:	pop    edi
  4115cc:	fcomp  QWORD PTR [ebp+eiz*1+0x1c]
  4115d0:	scas   al,BYTE PTR es:[edi]
  4115d1:	mov    WORD PTR [edi-0x42],?
  4115d4:	mov    dl,0x1c
  4115d6:	dec    eax
  4115d7:	mov    dh,0x88
  4115d9:	arpl   WORD PTR [ebp+eiz*2-0x44],dx
  4115dd:	add    DWORD PTR [ebp+0xfe55baf],eax
  4115e3:	xlat   BYTE PTR ds:[ebx]
  4115e4:	js     0x41165d
  4115e6:	(bad)  
  4115e8:	int    0x38
  4115ea:	out    0x47,al
  4115ec:	jg     0x411664
  4115ee:	cs push cs
  4115f0:	jo     0x411593
  4115f2:	sbb    DWORD PTR [ecx+0x37],ebx
  4115f5:	inc    edx
  4115f6:	(bad)  
  4115f7:	mov    eax,ds:0xea0a87a3
  4115fc:	adc    eax,edx
  4115fe:	retf   
  4115ff:	jmp    0x411628
  411601:	mov    ecx,0xe0916649
  411606:	jl     0x4115fa
  411608:	daa    
  411609:	out    0xdf,al
  41160b:	scas   al,BYTE PTR es:[edi]
  41160c:	push   edi
  41160d:	sti    
  41160e:	(bad)  
  411610:	fwait
  411611:	and    DWORD PTR [eax],ebx
  411613:	hlt    
  411614:	pop    ecx
  411615:	outs   dx,BYTE PTR ds:[esi]
  411616:	inc    eax
  411617:	push   0x5e
  411619:	jp     0x41163c
  41161b:	jg     0x411669
  41161d:	dec    edi
  41161e:	retf   
  41161f:	xor    eax,0xc7fac902
  411624:	push   ss
  411625:	xor    DWORD PTR [edx+0x668f6fd6],0x72622498
  41162f:	mov    cl,0xc
  411631:	lock xlat BYTE PTR ds:[ebx]
  411633:	jmp    0xd88c:0xc67e9198
  41163a:	stos   BYTE PTR es:[edi],al
  41163b:	xchg   edi,eax
  41163c:	xor    al,0x9c
  41163e:	fdiv   QWORD PTR [ebx-0x65]
  411641:	and    esi,DWORD PTR [ebp+eax*4-0x7058f8d0]
  411648:	dec    ebp
  411649:	add    DWORD PTR [edi+ecx*2-0x49455ad8],edx
  411650:	lods   eax,DWORD PTR ds:[esi]
  411651:	ss push ebp
  411653:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411654:	xchg   ebx,eax
  411655:	mov    ds:0x8d63f716,al
  41165a:	popa   
  41165b:	add    BYTE PTR [esi],bh
  41165d:	sbb    DWORD PTR [ebp+0x42],edi
  411660:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411661:	jnp    0x411620
  411663:	das    
  411664:	stc    
  411665:	adc    eax,0x4ad25f93
  41166a:	inc    eax
  41166b:	jb     0x411671
  41166d:	sti    
  41166e:	ja     0x4116bc
  411670:	shr    DWORD PTR [edi+0x36],cl
  411673:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411674:	enter  0xaa9d,0x63
  411678:	mov    ch,0x3b
  41167a:	fdivrp st(7),st
  41167c:	xor    eax,0x644ac98d
  411681:	cmp    al,0x85
  411683:	lea    ebp,[ecx+0x115689b4]
  411689:	adc    al,BYTE PTR [edi-0x71]
  41168c:	mov    al,0x2
  41168e:	into   
  41168f:	test   al,0x60
  411691:	xor    ch,BYTE PTR [ebx-0x73]
  411694:	je     0x4116df
  411696:	dec    edi
  411697:	add    cl,BYTE PTR [ebp-0x14]
  41169a:	push   ebp
  41169b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41169c:	fist   WORD PTR [ebp+0x72a5ddda]
  4116a2:	imul   eax,DWORD PTR [esi+0x34],0xde1e64c5
  4116a9:	sbb    bl,dl
  4116ab:	xchg   edx,eax
  4116ac:	fwait
  4116ad:	adc    al,0xa4
  4116af:	mov    dh,0x63
  4116b1:	cmc    
  4116b2:	mov    bh,0x95
  4116b4:	pushw  0xff90
  4116b7:	push   edx
  4116b8:	mov    BYTE PTR [edx+ebx*2-0x19],ch
  4116bc:	sub    BYTE PTR [edx-0x35],cl
  4116bf:	fwait
  4116c0:	div    ebp
  4116c2:	push   ebx
  4116c3:	je     0x411668
  4116c5:	jmp    0xca39:0x834278cc
  4116cc:	and    al,0xa3
  4116ce:	pop    edx
  4116cf:	jg     0x4116cc
  4116d1:	(bad)  
  4116d2:	adc    ebx,DWORD PTR [eax+0x46]
  4116d5:	jmp    DWORD PTR [ebx+0x6611234c]
  4116db:	outs   dx,BYTE PTR ds:[esi]
  4116dc:	push   eax
  4116dd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4116de:	sub    eax,0x1f3ee6f1
  4116e3:	add    BYTE PTR [ecx+0x5e],cl
  4116e6:	gs int3 
  4116e8:	push   ebp
  4116e9:	(bad)
  4116ed:	ret    0xcabb
  4116f0:	clc    
  4116f1:	(bad)  
  4116f2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4116f3:	push   0x9866a314
  4116f8:	in     eax,dx
  4116f9:	add    eax,0xe25b058b
  4116fe:	arpl   bx,ax
  411700:	mov    eax,0xfaf45c5c
  411705:	push   esi
  411706:	pop    ds
  411707:	bswap  esi
  411709:	fstp   DWORD PTR [ecx*2+0x3ddbbeef]
  411710:	in     eax,0x31
  411712:	or     BYTE PTR [edi-0x7bf208f3],bh
  411718:	and    BYTE PTR [edx-0x78d7f90c],ch
  41171e:	popf   
  41171f:	in     eax,0xbd
  411721:	out    dx,eax
  411722:	mov    gs,ecx
  411724:	xchg   DWORD PTR [edi-0x46],ebx
  411727:	sub    al,0x1
  411729:	into   
  41172a:	jle    0x411748
  41172c:	dec    ebp
  41172d:	or     eax,0x1881fe8d
  411732:	xchg   edx,eax
  411733:	popf   
  411734:	scas   al,BYTE PTR es:[edi]
  411735:	sbb    esp,edi
  411737:	add    esi,DWORD PTR [ecx+0x492f6c5b]
  41173d:	mov    ss,WORD PTR [edi+0x25a0f0d4]
  411743:	aas    
  411744:	sub    DWORD PTR [ecx],0x32
  411747:	test   eax,0xe2a06029
  41174c:	jmp    0x4121:0xedf19bfe
  411753:	nop
  411754:	xchg   ebx,eax
  411755:	test   DWORD PTR [ecx],ebx
  411757:	inc    ebp
  411758:	mov    bl,0x80
  41175a:	nop
  41175b:	cmp    al,0xfc
  41175d:	xchg   edx,eax
  41175e:	stos   BYTE PTR es:[edi],al
  41175f:	aaa    
  411760:	mov    ah,0xb2
  411762:	pop    edi
  411763:	test   BYTE PTR [edi-0x275e3eae],0x97
  41176a:	ins    BYTE PTR es:[edi],dx
  41176b:	int3   
  41176c:	cmp    bh,dh
  41176e:	mov    al,ds:0xbc501284
  411773:	mov    esp,0x89e088de
  411778:	add    BYTE PTR [esi+0x43],0xd2
  41177c:	inc    eax
  41177d:	pop    ss
  41177e:	adc    dl,BYTE PTR [ecx+0x74]
  411781:	sar    ecx,cl
  411783:	test   al,0x21
  411785:	(bad)  
  411786:	mov    edi,0x900b3936
  41178b:	mov    edx,0xb62eb9d2
  411790:	fild   QWORD PTR [esi-0x7e8811ad]
  411796:	fcomp  DWORD PTR [ecx-0x110653ef]
  41179c:	int    0xfc
  41179e:	mov    ebx,0x1b5ef85
  4117a3:	js     0x411728
  4117a5:	sbb    DWORD PTR [ebx+ebp*1],0xfc3e725d
  4117ac:	lea    edx,[edi-0x36012a8d]
  4117b2:	push   ds
  4117b3:	jmp    0x4117ce
  4117b5:	cwde   
  4117b6:	xor    DWORD PTR [edi],edi
  4117b8:	cmp    al,0x58
  4117ba:	imul   ebx,esi,0x1f02adde
  4117c0:	xchg   DWORD PTR [ecx-0xa],esp
  4117c3:	in     eax,dx
  4117c4:	lahf   
  4117c5:	jmp    0x41182a
  4117c7:	push   edx
  4117c8:	fisttp QWORD PTR ds:0x4d850a0c
  4117ce:	jbe    0x4117a7
  4117d0:	inc    eax
  4117d1:	in     al,0xfc
  4117d3:	stos   DWORD PTR es:[edi],eax
  4117d4:	add    DWORD PTR [eax+0x580a59],0x3a
  4117db:	loop   0x411836
  4117dd:	adc    edi,DWORD PTR es:[eax+0x49]
  4117e1:	test   BYTE PTR [edx+0x288d9e8b],cl
  4117e7:	ficom  DWORD PTR [ebx]
  4117e9:	or     BYTE PTR [edx],0xa3
  4117ec:	mov    WORD PTR [edx+0x7a8fa731],ds
  4117f2:	xchg   esi,eax
  4117f3:	rcl    BYTE PTR [ebx+0x55],1
  4117f6:	and    bh,BYTE PTR [ebp+0x195d42de]
  4117fc:	push   cs
  4117fd:	add    eax,0x37e940e1
  411802:	pop    edi
  411803:	repnz out 0x45,al
  411806:	jmp    0xd30:0xb59d1258
  41180d:	jecxz  0x41180d
  41180f:	mov    eax,0x312efa2f
  411814:	or     al,0x7d
  411816:	sub    BYTE PTR [esi+0x21],ah
  411819:	imul   edi,DWORD PTR [esp+ebx*4-0x38],0xd2ea4890
  411821:	xchg   edx,eax
  411822:	cli    
  411823:	cmp    DWORD PTR [ebp-0x7bb1e74d],0x2b
  41182a:	lock inc ebp
  41182c:	inc    ebp
  41182d:	and    DWORD PTR [esi-0x65],edx
  411830:	inc    edx
  411831:	test   al,0xdd
  411833:	mov    edx,0x81d07464
  411838:	xor    ah,BYTE PTR [ecx-0x535b3b09]
  41183e:	push   edx
  41183f:	cs in  eax,0x48
  411842:	retf   
  411843:	call   0xc9e:0xb48d6c31
  41184a:	mov    al,ds:0x29afd49a
  41184f:	pop    ebx
  411850:	test   al,0xe3
  411852:	retf   
  411853:	mov    ebx,0x62e03ad8
  411858:	xchg   ebx,eax
  411859:	push   esp
  41185a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41185b:	xor    eax,0xe432a72f
  411860:	pusha  
  411861:	jp     0x4118e2
  411863:	jae    0x41180d
  411865:	call   edi
  411867:	sub    eax,0x8894db85
  41186c:	xchg   ebp,eax
  41186d:	jno    0x411805
  41186f:	std    
  411870:	push   ss
  411871:	push   ss
  411872:	mov    edi,0xac0a167b
  411877:	jmp    0x4118ef
  411879:	jnp    0x411822
  41187b:	ja     0x4118b9
  41187d:	jb     0x4118af
  41187f:	mov    edi,DWORD PTR [ecx-0x61]
  411882:	push   0xa3bacd43
  411887:	sub    dh,dl
  411889:	push   ds
  41188a:	or     al,0x43
  41188c:	lods   al,BYTE PTR ds:[esi]
  41188d:	ins    DWORD PTR es:[edi],dx
  41188e:	dec    ebp
  41188f:	add    cl,0xcf
  411892:	mov    ds:0x48c49168,eax
  411897:	js     0x41185a
  411899:	dec    edx
  41189a:	xchg   ebp,eax
  41189b:	sti    
  41189c:	add    ah,BYTE PTR [eax+0x42]
  41189f:	xor    DWORD PTR [ecx+0x394deb1c],ebx
  4118a5:	mov    ds:0xd918712f,eax
  4118aa:	jmp    0xfacd5fa1
  4118af:	jo     0x4118bd
  4118b1:	sub    esi,esi
  4118b3:	into   
  4118b4:	sbb    ch,bh
  4118b6:	cs jl  0x4118f6
  4118b9:	xchg   BYTE PTR [ebx],ah
  4118bb:	pop    ss
  4118bc:	cmp    eax,0x3247e5e2
  4118c1:	push   0x7517343f
  4118c6:	add    DWORD PTR [eax],ecx
  4118c8:	dec    edx
  4118c9:	stos   BYTE PTR es:[edi],al
  4118ca:	mov    eax,ds:0xc25dc7e
  4118cf:	add    ecx,esp
  4118d1:	out    dx,al
  4118d2:	(bad)  
  4118d3:	loope  0x4118b5
  4118d5:	mov    ds:0x783f75c5,eax
  4118da:	fcomp  QWORD PTR [eax-0x3545405d]
  4118e0:	idiv   DWORD PTR [esp+edx*2]
  4118e3:	das    
  4118e4:	xchg   DWORD PTR [edx],edx
  4118e6:	jae    0x411964
  4118e8:	(bad)  
  4118e9:	xchg   ebx,eax
  4118ea:	pusha  
  4118eb:	mov    bl,0x5d
  4118ed:	and    edx,DWORD PTR [edi]
  4118ef:	push   ss
  4118f0:	push   edi
  4118f1:	ss push es
  4118f3:	(bad)  [edx+0x63a0831c]
  4118f9:	out    dx,al
  4118fa:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4118fb:	mov    ds:0x412b2ebe,eax
  411900:	jno    0x411948
  411902:	mov    dl,0x41
  411904:	rcr    bh,cl
  411906:	out    0xcd,al
  411908:	xor    eax,0x8358253e
  41190d:	ret    
  41190e:	inc    ebp
  41190f:	pop    esi
  411910:	pop    ebx
  411911:	xor    DWORD PTR [edi-0x21],esi
  411914:	scas   eax,DWORD PTR es:[edi]
  411915:	sbb    al,0x1e
  411917:	inc    ebp
  411918:	into   
  411919:	pop    ss
  41191a:	idiv   DWORD PTR [edx]
  41191c:	jb     0x411960
  41191e:	push   ecx
  41191f:	dec    esp
  411920:	inc    edx
  411921:	mov    ds:0xb5fadd1a,al
  411926:	sbb    esi,edx
  411928:	mov    ebp,0x85aa90a0
  41192e:	or     ebx,DWORD PTR ds:0x35819f22
  411934:	adc    esp,DWORD PTR [esi+0x3ab55410]
  41193a:	jmp    0x41192d
  41193c:	inc    ebp
  41193d:	lods   eax,DWORD PTR ds:[esi]
  41193e:	dec    ebp
  41193f:	setb   BYTE PTR [esp+eiz*2+0x58438604]
  411947:	xchg   edx,eax
  411948:	mov    dl,0xf1
  41194a:	ja     0x41196f
  41194c:	clc    
  41194d:	cmp    eax,0x1fa3fc6d
  411952:	inc    esp
  411953:	fcom   QWORD PTR [ebx-0x2da4ed5]
  411959:	jae    0x41190f
  41195b:	push   ds
  41195c:	movd   mm0,DWORD PTR [edx+0xe]
  411960:	mov    dh,0x21
  411962:	xchg   ecx,eax
  411963:	data16 xchg BYTE PTR [ecx+0x6b],ch
  411967:	mov    DWORD PTR ds:0x37042ff6,ecx
  41196d:	add    ah,BYTE PTR [ebx+0x7b9fb691]
  411973:	sahf   
  411974:	mov    ch,0xfb
  411976:	push   ds
  411977:	mov    dh,0xb5
  411979:	push   ds
  41197a:	sub    cl,BYTE PTR ds:0x1d7e27f2
  411980:	sub    edi,DWORD PTR [edx-0x5e]
  411983:	pop    ebp
  411984:	stos   DWORD PTR es:[edi],eax
  411985:	push   esi
  411986:	add    al,0x9c
  411988:	lds    edx,FWORD PTR [ebx+esi*2+0x36586ac3]
  41198f:	ds cmp eax,0xd5a0aef0
  411995:	mov    al,0x63
  411997:	hlt    
  411998:	bound  ebp,QWORD PTR [ebx]
  41199a:	lods   eax,DWORD PTR ds:[esi]
  41199b:	jmp    0x19a88008
  4119a0:	pop    eax
  4119a1:	adc    al,0xc
  4119a3:	mov    esp,DWORD PTR [ecx]
  4119a5:	add    al,0xb7
  4119a7:	inc    eax
  4119a8:	test   BYTE PTR [ebx+edx*1-0x22],bh
  4119ac:	scas   al,BYTE PTR es:[edi]
  4119ad:	inc    esp
  4119ae:	repnz adc al,0xe1
  4119b1:	xor    al,0x10
  4119b3:	fimul  WORD PTR [esi+0x6f]
  4119b6:	pop    ds
  4119b7:	pop    edx
  4119b8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4119b9:	out    dx,eax
  4119ba:	sub    al,0xf6
  4119bc:	mov    ds:0xb319f458,eax
  4119c1:	pop    esi
  4119c2:	adc    BYTE PTR [edi+0xa8cd572],ch
  4119c8:	jp     0x411992
  4119ca:	mov    WORD PTR [edx-0x1f3dea5b],gs
  4119d0:	fisubr DWORD PTR [edx+0x1756894]
  4119d6:	sbb    edi,edi
  4119d8:	xchg   BYTE PTR [ebx],bl
  4119da:	push   esp
  4119db:	mov    esi,0x12f97247
  4119e0:	les    ebx,FWORD PTR [edx]
  4119e2:	jg     0x4119e5
  4119e4:	sahf   
  4119e5:	repnz cmp ebp,DWORD PTR [eax-0x10]
  4119e9:	xor    bh,bl
  4119eb:	jmp    0x9830:0x828d1fae
  4119f2:	mov    cl,0xba
  4119f4:	ret    0xf8f8
  4119f7:	and    ebx,edi
  4119f9:	int3   
  4119fa:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4119fb:	push   eax
  4119fc:	jmp    FWORD PTR [ebp+esi*1-0x414258c5]
  411a03:	pop    edx
  411a04:	dec    esi
  411a05:	fisttp DWORD PTR [edx-0x3667f7dd]
  411a0b:	jle    0x41199a
  411a0d:	pop    eax
  411a0e:	int3   
  411a0f:	cmp    eax,0x86489a35
  411a14:	clc    
  411a15:	sbb    ebp,DWORD PTR [ebp+0x719f6688]
  411a1b:	adc    esi,DWORD PTR [edx+0x5a]
  411a1e:	add    dl,ah
  411a20:	cld    
  411a21:	mov    gs,WORD PTR [esp+eiz*8-0x12]
  411a25:	adc    dh,dh
  411a27:	outs   dx,DWORD PTR ds:[esi]
  411a28:	pop    esi
  411a29:	cdq    
  411a2a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411a2b:	adc    al,0x99
  411a2d:	push   0x1b
  411a2f:	je     0x411a96
  411a31:	mov    dh,0xec
  411a33:	xor    eax,0x8c7dc736
  411a38:	push   ecx
  411a39:	popa   
  411a3a:	mov    cl,0xba
  411a3c:	add    bh,cl
  411a3e:	mov    dh,0x2e
  411a40:	clc    
  411a41:	sub    ch,0xb3
  411a44:	imul   edx,DWORD PTR [ebp+0x56],0x18
  411a48:	pop    ebx
  411a49:	daa    
  411a4a:	push   edi
  411a4b:	cmc    
  411a4c:	cli    
  411a4d:	cmp    eax,0x9ebfb57f
  411a52:	aaa    
  411a53:	and    dl,BYTE PTR [edx]
  411a55:	add    eax,0xdf2ca019
  411a5a:	mov    bh,0xb0
  411a5c:	add    bl,BYTE PTR [ebx]
  411a5e:	mov    edi,DWORD PTR [eax-0x71]
  411a61:	ret    
  411a62:	out    0xe0,al
  411a64:	xor    dl,BYTE PTR [ecx+0x1c]
  411a67:	pop    edi
  411a68:	neg    DWORD PTR [ebx+edx*8]
  411a6b:	add    DWORD PTR [ebx+0x4c],esi
  411a6e:	push   ds
  411a6f:	cwde   
  411a70:	(bad)  
  411a71:	sbb    dh,ah
  411a73:	cmp    DWORD PTR [edx-0x15],ebx
  411a76:	add    ah,cl
  411a78:	gs jns 0x411a25
  411a7b:	stc    
  411a7c:	out    dx,eax
  411a7d:	out    dx,eax
  411a7e:	arpl   WORD PTR [ebx-0x1c],di
  411a81:	mov    cl,0x5a
  411a83:	aaa    
  411a84:	xchg   ebp,eax
  411a85:	sti    
  411a86:	outs   dx,BYTE PTR ds:[esi]
  411a87:	jne    0x411a3f
  411a89:	cmp    al,0xe6
  411a8b:	and    BYTE PTR [eax-0x5fcd1f48],dh
  411a91:	mov    bh,0xcc
  411a93:	ins    BYTE PTR es:[edi],dx
  411a94:	adc    BYTE PTR ds:0x227306ba,al
  411a9a:	xor    ecx,DWORD PTR [edx]
  411a9c:	(bad)  
  411a9d:	mov    esi,edi
  411a9f:	mov    al,ds:0x62027a9b
  411aa4:	mov    eax,0xec8a4abf
  411aa9:	cmp    al,BYTE PTR [edi]
  411aab:	imul   esi,ebp,0xd112c63b
  411ab1:	sub    al,0xa6
  411ab3:	ret    
  411ab4:	add    esi,edx
  411ab6:	ins    DWORD PTR es:[edi],dx
  411ab7:	loopne 0x411a3a
  411ab9:	mov    ah,BYTE PTR [esp+ebp*4+0x4b0e0e71]
  411ac0:	xchg   esi,eax
  411ac1:	fucomp st(4)
  411ac3:	xchg   edi,edi
  411ac5:	mov    gs,WORD PTR [ebp+ecx*8-0x3d]
  411ac9:	shl    ecx,1
  411acb:	leave  
  411acc:	leave  
  411acd:	mov    ecx,0x501a60d4
  411ad2:	cmp    dl,al
  411ad4:	cmp    BYTE PTR [esi+0x5030f560],0xc6
  411adb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411adc:	sbb    al,0x59
  411ade:	or     BYTE PTR [ebx+0x1cc26eef],bl
  411ae4:	ja     0x411b50
  411ae6:	cmp    BYTE PTR [ebx-0x4a],dh
  411ae9:	std    
  411aea:	dec    esp
  411aeb:	aaa    
  411aec:	adc    eax,0x7bcc102c
  411af1:	rcr    ch,cl
  411af3:	jne    0x411b47
  411af5:	out    0x5f,eax
  411af7:	jp     0x411b72
  411af9:	fistp  DWORD PTR [ecx+eax*8+0x70141958]
  411b00:	sub    BYTE PTR [edx+0xea0acdb],ah
  411b06:	rcl    DWORD PTR [esi],cl
  411b08:	test   BYTE PTR [esi],dl
  411b0a:	pop    ebx
  411b0b:	sub    al,0x4a
  411b0d:	jp     0x411b4d
  411b0f:	jo     0x411aaf
  411b11:	scas   al,BYTE PTR es:[edi]
  411b12:	gs jl  0x411b6e
  411b15:	adc    al,ch
  411b17:	inc    edx
  411b18:	in     eax,0xef
  411b1a:	jp     0x411ad9
  411b1c:	mov    ecx,0xf21c2c01
  411b21:	jns    0x411ac0
  411b23:	int    0x86
  411b25:	xchg   BYTE PTR [ebp+eiz*1+0x45],dl
  411b29:	sub    DWORD PTR ds:0x90b6f843,esi
  411b2f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411b30:	mov    ecx,0x38db448
  411b35:	inc    esp
  411b36:	inc    esi
  411b37:	xchg   esi,eax
  411b38:	cli    
  411b39:	or     cl,BYTE PTR [edx+0x3e]
  411b3c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411b3d:	popf   
  411b3e:	jae    0x411b27
  411b40:	fdiv   DWORD PTR [ebx+0x2e]
  411b43:	enter  0xca86,0x22
  411b47:	mov    ds:0x452e2db1,al
  411b4c:	mov    edi,0x6f51d5df
  411b51:	mov    bl,0xc2
  411b53:	or     eax,0x64b7483f
  411b58:	popf   
  411b59:	mov    WORD PTR [eax+ebp*2-0x59504bad],cs
  411b60:	scas   al,BYTE PTR es:[edi]
  411b61:	add    esi,DWORD PTR [edi+0x33]
  411b64:	cmp    DWORD PTR [ebp+0x430622f4],esp
  411b6a:	test   al,0x8c
  411b6c:	data16 outs dx,BYTE PTR ds:[esi]
  411b6e:	out    0xc9,eax
  411b70:	dec    eax
  411b71:	push   ebp
  411b72:	adc    bh,BYTE PTR [edx-0x236a5af0]
  411b78:	fimul  DWORD PTR [eax]
  411b7a:	mov    WORD PTR [eax-0x2104ea75],?
  411b80:	xor    ecx,DWORD PTR [esi]
  411b82:	std    
  411b83:	or     DWORD PTR [ebx],esi
  411b85:	dec    eax
  411b86:	gs cld 
  411b88:	xchg   ebx,eax
  411b89:	adc    DWORD PTR [eax],0xfdcff84
  411b8f:	inc    edx
  411b90:	lahf   
  411b91:	les    ebp,FWORD PTR [ebx+0x66873770]
  411b97:	je     0x411ba6
  411b99:	cmp    ebx,DWORD PTR [esi+0xc]
  411b9c:	sbb    al,0x53
  411b9e:	nop
  411b9f:	stos   BYTE PTR es:[edi],al
  411ba0:	and    ebp,edx
  411ba2:	jo     0x411bbe
  411ba4:	mov    esp,0xe6b28086
  411ba9:	mov    dl,0x7a
  411bab:	in     al,0x6b
  411bad:	stos   DWORD PTR es:[edi],eax
  411bae:	ins    DWORD PTR es:[edi],dx
  411baf:	xlat   BYTE PTR ds:[ebx]
  411bb0:	jmp    0x411c14
  411bb2:	sbb    cx,WORD PTR [eax]
  411bb5:	push   ss
  411bb6:	scas   eax,DWORD PTR es:[edi]
  411bb7:	adc    al,0x29
  411bb9:	or     dh,BYTE PTR [ebx+0x24108260]
  411bbf:	mov    ?,WORD PTR [ebp+0x27]
  411bc2:	xchg   ebx,eax
  411bc3:	xchg   ecx,eax
  411bc4:	imul   ecx,DWORD PTR ds:0x2d04d5c8,0x58ad46b6
  411bce:	xor    BYTE PTR [edx-0xa],0x8b
  411bd2:	fs mov ss,edx
  411bd5:	xor    eax,0x39b85fab
  411bda:	push   edx
  411bdb:	dec    edx
  411bdc:	mov    es,edx
  411bde:	xchg   edi,eax
  411bdf:	push   0x2270665b
  411be4:	add    DWORD PTR fs:[ebp-0x3a],eax
  411be8:	jo     0x411c03
  411bea:	inc    eax
  411beb:	jecxz  0x411bc1
  411bed:	push   eax
  411bee:	xchg   esi,eax
  411bef:	out    0x7a,al
  411bf1:	test   eax,0x80b43740
  411bf6:	iret   
  411bf7:	jmp    0xe22f:0x31a38a40
  411bfe:	fcomip st,st(0)
  411c00:	les    edx,FWORD PTR [ecx-0x7d290800]
  411c06:	sub    dh,BYTE PTR [esi+0x28355ddc]
  411c0c:	mov    esp,0xac2595a2
  411c11:	sub    DWORD PTR ds:0x896163ec,ebp
  411c17:	add    dh,ah
  411c19:	xchg   esi,eax
  411c1a:	mov    ebx,?
  411c1c:	sti    
  411c1d:	pusha  
  411c1e:	jne    0x411ba4
  411c20:	xor    edi,esp
  411c22:	jecxz  0x411bfe
  411c24:	not    DWORD PTR [ecx+0x3c2353c6]
  411c2a:	xor    al,0x61
  411c2c:	stos   DWORD PTR es:[edi],eax
  411c2d:	push   ebx
  411c2e:	add    DWORD PTR [ebp-0x7718e92f],ebx
  411c34:	in     al,0xa7
  411c36:	pop    esi
  411c37:	pop    edi
  411c38:	and    eax,0xc27d9637
  411c3d:	mov    dl,0xfe
  411c3f:	push   ebx
  411c40:	imul   esi,DWORD PTR [ebx+edx*2+0x258b96ad],0xffffffcf
  411c48:	sbb    esp,esi
  411c4a:	stc    
  411c4b:	outs   dx,DWORD PTR ds:[esi]
  411c4c:	sbb    al,BYTE PTR [eax]
  411c4e:	gs addr16 popa 
  411c51:	retf   
  411c52:	out    0x5b,eax
  411c54:	add    BYTE PTR [esi],al
  411c56:	pop    ebx
  411c57:	lods   al,BYTE PTR ds:[esi]
  411c58:	inc    esp
  411c59:	jns    0x411c2e
  411c5b:	call   0x2ad2:0x71276911
  411c62:	sbb    al,0xb9
  411c64:	mov    WORD PTR [ecx-0x10],gs
  411c67:	inc    ebx
  411c68:	lds    ebx,FWORD PTR ds:0xc63733ec
  411c6e:	mov    ecx,0x49779b7b
  411c73:	loop   0x411c88
  411c75:	repz mov eax,edi
  411c78:	pop    ecx
  411c79:	outs   dx,DWORD PTR ds:[esi]
  411c7a:	and    al,0xe8
  411c7c:	(bad)  
  411c7d:	pop    ss
  411c7e:	add    al,0x47
  411c80:	adc    DWORD PTR ds:0x2cb9918c,esi
  411c86:	stos   BYTE PTR es:[edi],al
  411c87:	loope  0x411c86
  411c89:	mov    eax,ds:0x9e577c82
  411c8e:	and    al,0xdb
  411c90:	mov    al,ds:0xd2cb6da8
  411c95:	(bad)  
  411c96:	sti    
  411c97:	in     al,0x1f
  411c99:	stc    
  411c9a:	ss leave 
  411c9c:	int    0x52
  411c9e:	xor    edx,ebp
  411ca0:	shl    DWORD PTR [esi+0x5208da3e],0x37
  411ca7:	xor    ebx,esi
  411ca9:	sub    esi,DWORD PTR fs:[ebp+0x41b28dba]
  411cb0:	pop    ebx
  411cb1:	inc    edi
  411cb2:	xor    ebx,eax
  411cb4:	xor    eax,0xbf83a460
  411cb9:	mov    ebx,0x9a481e46
  411cbe:	xor    al,0x7f
  411cc0:	sbb    BYTE PTR [esi+0x4],cl
  411cc3:	mov    al,ds:0x7b0990a0
  411cc8:	scas   eax,DWORD PTR es:[edi]
  411cc9:	aaa    
  411cca:	sar    BYTE PTR ds:0x4cf5b70a,cl
  411cd0:	adc    eax,DWORD PTR [ecx+0x5f91af52]
  411cd6:	mov    ebp,ds
  411cd8:	add    dh,BYTE PTR [esi-0x4d379cd7]
  411cde:	cmp    DWORD PTR [edi+0x5e],ecx
  411ce1:	outs   dx,BYTE PTR ds:[esi]
  411ce2:	inc    ebx
  411ce3:	cmp    DWORD PTR [ecx],eax
  411ce5:	add    dh,BYTE PTR ds:0xafd98835
  411ceb:	jge    0x411c98
  411ced:	mov    cl,0x24
  411cef:	jmp    0x411caa
  411cf1:	or     eax,0x45d85d9f
  411cf6:	lock mov dl,0x56
  411cf9:	mov    dl,0x82
  411cfb:	popa   
  411cfc:	(bad)  
  411cfd:	in     al,0xc0
  411cff:	cli    
  411d00:	adc    esp,0x18962efd
  411d06:	dec    esi
  411d07:	dec    ecx
  411d08:	sbb    ebx,esi
  411d0a:	mov    cl,BYTE PTR [ebx-0x24017124]
  411d10:	leave  
  411d11:	inc    ebx
  411d12:	mov    WORD PTR [eax+eax*8-0x3],ds
  411d16:	enter  0x9277,0xa7
  411d1a:	mov    dh,ch
  411d1c:	push   edx
  411d1d:	sahf   
  411d1e:	stc    
  411d1f:	sbb    eax,0xf09c059
  411d24:	mov    eax,ds:0xce63f9ce
  411d29:	pop    edx
  411d2a:	and    BYTE PTR [eax],0x5c
  411d2d:	mov    ?,WORD PTR [ebp+0x3a]
  411d30:	cmp    al,cl
  411d32:	(bad)  
  411d33:	adc    bh,BYTE PTR [ecx+edx*2-0x65051c9d]
  411d3a:	and    DWORD PTR [edi+0x6b1180ab],0x6a
  411d41:	pop    ebx
  411d42:	je     0x411cf6
  411d44:	fmul   QWORD PTR [edx]
  411d46:	dec    esp
  411d48:	ret    0x707e
  411d4b:	adc    esi,DWORD PTR [ebx+0x302a5ad3]
  411d51:	dec    ebp
  411d52:	jge    0x411d77
  411d54:	adc    ch,BYTE PTR [ebx]
  411d56:	xchg   DWORD PTR [edi-0x7],edi
  411d59:	retf   
  411d5a:	mov    esi,0xa7806c7e
  411d5f:	loope  0x411d58
  411d61:	mov    al,ds:0xd568d3ff
  411d66:	push   edi
  411d67:	add    DWORD PTR [ebp-0x1f],0x10
  411d6b:	fld    DWORD PTR [edx+0x219c22fa]
  411d71:	clc    
  411d72:	xchg   BYTE PTR [edx+0x6e5874e7],al
  411d78:	aaa    
  411d79:	mov    esp,0x94cced3f
  411d7e:	jecxz  0x411dd5
  411d80:	and    ch,ch
  411d82:	jnp    0x411df2
  411d84:	xor    DWORD PTR [edi+0x69ede684],ecx
  411d8a:	enter  0xd615,0x6b
  411d8e:	nop
  411d8f:	mov    WORD PTR ds:0x9590bc03,?
  411d95:	in     eax,dx
  411d96:	stc    
  411d97:	sbb    eax,0xde3bd1ff
  411d9c:	mov    ebp,0xdac2eeb2
  411da1:	jae    0x411dec
  411da3:	sahf   
  411da4:	push   esp
  411da5:	lods   eax,DWORD PTR ds:[esi]
  411da6:	add    BYTE PTR [eax-0x50c4bc97],bl
  411dac:	stos   BYTE PTR es:[edi],al
  411dad:	xchg   DWORD PTR [esp+ebx*2-0x7779604],eax
  411db4:	loopne 0x411db5
  411db6:	cmp    eax,0x2314fe3d
  411dbb:	loop   0x411dbb
  411dbd:	addr16 sbb al,0xe0
  411dc0:	dec    ebx
  411dc1:	xchg   ebp,eax
  411dc2:	into   
  411dc3:	(bad)  
  411dc4:	mov    ds,ebp
  411dc6:	push   DWORD PTR [eax-0x469cb93d]
  411dcc:	pop    eax
  411dcd:	mov    BYTE PTR [ebp+0x2e2d89eb],dh
  411dd3:	ficom  WORD PTR [ebp-0x55]
  411dd6:	and    al,BYTE PTR [esi+0xf157f54]
  411ddc:	sub    DWORD PTR [ebx+0x318cc63a],0xffffffa3
  411de3:	les    esi,FWORD PTR [ebx+0x76712c25]
  411de9:	cmc    
  411dea:	bound  edi,QWORD PTR [ebp+0x10]
  411ded:	inc    esp
  411dee:	mov    ds:0x6b877dbe,al
  411df3:	and    ebp,DWORD PTR [ecx]
  411df5:	(bad)  
  411df6:	jmp    0xddf2298
  411dfb:	jne    0x411db2
  411dfd:	cli    
  411dfe:	pusha  
  411dff:	inc    di
  411e01:	in     eax,0x20
  411e03:	retf   0x930b
  411e06:	ret    0x9151
  411e09:	test   DWORD PTR [eax-0x16],ecx
  411e0c:	loope  0x411e04
  411e0e:	dec    edx
  411e0f:	test   DWORD PTR [ecx-0x3e806d34],0x4aca67b6
  411e19:	inc    esp
  411e1a:	adc    DWORD PTR [ecx-0x2f],edi
  411e1d:	adc    dh,BYTE PTR [ebx+0x3b]
  411e20:	(bad)  
  411e21:	jo     0x411e82
  411e23:	mov    ds:0x4c2e5dac,al
  411e28:	cli    
  411e29:	inc    edx
  411e2a:	push   ebp
  411e2b:	add    DWORD PTR [ecx+0x5e441bdb],esi
  411e31:	lea    esp,[eax+0x45593fbe]
  411e37:	mov    edx,eax
  411e39:	lock ret 
  411e3b:	out    dx,al
  411e3c:	add    al,0xc6
  411e3e:	pop    ebx
  411e3f:	sbb    eax,0xfbfaa9ca
  411e44:	xor    al,0x38
  411e46:	aam    0x2b
  411e48:	das    
  411e49:	push   esi
  411e4a:	cmp    DWORD PTR ds:0x173c718b,esi
  411e50:	scas   al,BYTE PTR es:[edi]
  411e51:	pop    edx
  411e52:	or     BYTE PTR [eax],al
  411e54:	pop    esi
  411e55:	dec    ecx
  411e56:	pop    es
  411e57:	daa    
  411e58:	and    al,0x10
  411e5a:	fisubr WORD PTR [ebp+eax*4-0x52]
  411e5e:	cli    
  411e5f:	pop    esi
  411e60:	cmp    DWORD PTR [ebp-0x47f97c18],ecx
  411e66:	inc    edx
  411e67:	pushf  
  411e68:	(bad)  
  411e69:	jmp    0x411ea8
  411e6b:	(bad)  
  411e6c:	call   0xf3ab9266
  411e71:	mov    eax,ds:0x8c3a57e9
  411e76:	or     eax,0x9c3f9e39
  411e7b:	(bad)  
  411e7d:	adc    ebp,DWORD PTR [ecx+0x30]
  411e80:	inc    edi
  411e81:	and    eax,0x843a51a5
  411e86:	push   esi
  411e87:	ja     0x411ef4
  411e89:	xor    ch,bh
  411e8b:	xchg   edi,eax
  411e8c:	ins    DWORD PTR es:[edi],dx
  411e8d:	sbb    edi,DWORD PTR [edx]
  411e8f:	sbb    esi,ecx
  411e91:	mov    eax,0x8683ef34
  411e96:	aaa    
  411e97:	dec    esp
  411e98:	xlat   BYTE PTR ds:[ebx]
  411e99:	pop    ecx
  411e9a:	xor    BYTE PTR [ebp-0x2f],dh
  411e9d:	add    al,0x1a
  411e9f:	ins    BYTE PTR es:[edi],dx
  411ea0:	das    
  411ea1:	push   esp
  411ea2:	jl     0x411f10
  411ea4:	(bad)  
  411ea5:	addr16 dec edx
  411ea7:	ss add eax,0xef3ec870
  411ead:	jb     0x411ed7
  411eaf:	pop    ebx
  411eb0:	fcmovb st,st(0)
  411eb2:	adc    DWORD PTR [edx+0x52c56afe],0xa
  411eb9:	stos   DWORD PTR es:[edi],eax
  411eba:	push   ecx
  411ebb:	xchg   ch,bl
  411ebd:	sub    DWORD PTR [ebp-0xb],ebp
  411ec0:	das    
  411ec1:	mov    bh,0x3c
  411ec3:	adc    DWORD PTR [eax+0x9],ecx
  411ec6:	(bad)  
  411ec7:	lds    edi,FWORD PTR [edi+ebx*4+0x36]
  411ecb:	adc    dh,BYTE PTR [edi-0x710222ae]
  411ed1:	mov    al,0x58
  411ed3:	out    dx,al
  411ed4:	mov    edx,gs
  411ed6:	mov    ch,0xb9
  411ed8:	mov    dl,0x93
  411eda:	xchg   BYTE PTR [esi-0x6315fa44],dl
  411ee0:	jbe    0x411ed4
  411ee2:	gs and al,0xf2
  411ee5:	xchg   eax,eax
  411ee7:	daa    
  411ee8:	inc    edi
  411ee9:	test   DWORD PTR [esi-0x44500d44],edi
  411eef:	cmp    edx,ebx
  411ef1:	test   ch,0xd4
  411ef4:	add    al,BYTE PTR [eax+0x4a]
  411ef7:	fiadd  WORD PTR [esi]
  411ef9:	mov    bh,BYTE PTR [ebx+0xc]
  411efc:	ja     0x411ee9
  411efe:	ds mov ebx,0x24601993
  411f04:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411f05:	loopne 0x411f83
  411f07:	sbb    al,0x87
  411f09:	das    
  411f0a:	dec    esi
  411f0b:	mov    ?,WORD PTR [ebx+0x10]
  411f0e:	pop    eax
  411f0f:	sbb    bl,BYTE PTR [edx]
  411f11:	dec    edi
  411f12:	or     edi,DWORD PTR [ebx-0x7b8fcc3b]
  411f18:	dec    edx
  411f19:	in     eax,0xaf
  411f1b:	jge    0x411f73
  411f1d:	or     dh,BYTE PTR [esp+eax*2-0x4face85f]
  411f24:	dec    ebx
  411f25:	icebp  
  411f26:	mov    ch,0xd0
  411f28:	cmp    al,0xe5
  411f2a:	bound  esp,QWORD PTR [ecx-0x30]
  411f2d:	pushf  
  411f2e:	jb     0x411fad
  411f30:	jb     0x411efd
  411f32:	outs   dx,DWORD PTR ds:[esi]
  411f33:	cmp    dh,BYTE PTR [ecx]
  411f35:	xor    bh,BYTE PTR ds:0xbc5fae24
  411f3b:	jecxz  0x411f6d
  411f3d:	mov    bl,0xd1
  411f3f:	clc    
  411f40:	xchg   BYTE PTR [edx+0x181f0827],ah
  411f46:	sub    eax,0x389afe6e
  411f4b:	adc    eax,DWORD PTR ds:0x940547fa
  411f51:	add    BYTE PTR [edx+0x2983a359],ch
  411f57:	mov    ebp,0xc8a92bd9
  411f5c:	int    0x57
  411f5e:	push   0xffffffa1
  411f60:	rcl    ch,0x6c
  411f63:	push   ecx
  411f64:	mov    ebx,DWORD PTR [ecx]
  411f66:	xor    edi,DWORD PTR [esi-0x1221087]
  411f6c:	sub    ah,BYTE PTR [esi+0x5495500]
  411f72:	iret   
  411f73:	shl    edi,0x61
  411f76:	mov    ah,BYTE PTR [ebx]
  411f78:	and    al,0xbb
  411f7a:	sbb    al,0xea
  411f7c:	es mov ah,0x28
  411f7f:	in     eax,0x71
  411f81:	sub    esp,DWORD PTR es:[eax-0x3e]
  411f85:	bound  esi,QWORD PTR [edx+ebp*8]
  411f88:	iret   
  411f89:	or     dh,al
  411f8b:	adc    eax,0x7098b659
  411f90:	rcl    al,cl
  411f92:	or     ah,dl
  411f94:	jle    0x411f78
  411f96:	push   ds
  411f97:	push   esi
  411f98:	xor    esi,ecx
  411f9a:	fadd   QWORD PTR [eax-0x29]
  411f9d:	xchg   edx,eax
  411f9e:	push   edx
  411f9f:	sbb    al,0x3d
  411fa1:	mov    ah,0x7c
  411fa3:	sahf   
  411fa4:	(bad)  
  411fa5:	mov    edx,0xf3d966b1
  411faa:	inc    eax
  411fab:	mov    esi,0x45ed40f5
  411fb0:	push   cs
  411fb1:	sbb    bl,BYTE PTR [esp+edx*8]
  411fb4:	shr    BYTE PTR [ebp+0x3b675329],0x66
  411fbb:	mov    ah,0x7
  411fbd:	sbb    edx,ecx
  411fbf:	rol    eax,0xd7
  411fc2:	fsubr  DWORD PTR [esi-0x6744311a]
  411fc8:	xor    eax,0x39ef2c48
  411fcd:	push   0x34
  411fcf:	stos   DWORD PTR es:[edi],eax
  411fd0:	ret    
  411fd1:	adc    eax,0xef37e821
  411fd6:	xchg   esi,eax
  411fd7:	sub    ch,dl
  411fd9:	lods   eax,DWORD PTR ds:[esi]
  411fda:	jge    0x412016
  411fdc:	mov    eax,ds:0x69e9c1d9
  411fe1:	jle    0x412046
  411fe3:	mov    ebp,0xf68203dd
  411fe8:	push   ss
  411fe9:	sub    esi,DWORD PTR [ebx-0x3c5799a8]
  411fef:	pop    esp
  411ff0:	xlat   BYTE PTR ds:[ebx]
  411ff1:	ret    0x21b4
  411ff4:	xlat   BYTE PTR ds:[ebx]
  411ff5:	retf   
  411ff6:	in     eax,0x92
  411ff8:	mov    cl,0x9
  411ffa:	cmp    eax,DWORD PTR [eax-0x49]
  411ffd:	and    BYTE PTR ds:0x27175340,dh
  412003:	pop    edi
  412004:	sar    DWORD PTR [esi+edx*8+0x37],cl
  412008:	dec    ebx
  412009:	jp     0x411ff1
  41200b:	sbb    DWORD PTR [edi-0x4a6088d0],edx
  412011:	cli    
  412012:	sbb    ebp,ebp
  412014:	invd   
  412016:	mov    ds:0x5a08a74a,eax
  41201b:	pop    ds
  41201c:	loop   0x41201c
  41201e:	mov    dh,0x7e
  412020:	int    0x50
  412022:	fnsave [eax]
  412024:	dec    ecx
  412025:	test   esp,ebp
  412027:	dec    ebx
  412028:	loopne 0x412059
  41202a:	sbb    al,0x0
  41202c:	add    ebp,ebp
  41202e:	outs   dx,DWORD PTR ds:[esi]
  41202f:	jle    0x411fdc
  412031:	lods   al,BYTE PTR ds:[esi]
  412032:	mov    BYTE PTR [ecx+0x22],0x79
  412036:	sbb    DWORD PTR [edi],esi
  412038:	dec    esi
  412039:	cmp    al,BYTE PTR [edi]
  41203b:	fcomp  QWORD PTR [esp+edx*2-0x10]
  41203f:	cmp    DWORD PTR [edx+0x52c9483e],ebp
  412045:	pusha  
  412046:	cdq    
  412047:	add    bl,BYTE PTR [edi]
  412049:	xor    cl,BYTE PTR [esi+0x398cdca5]
  41204f:	cli    
  412050:	xchg   ecx,eax
  412051:	and    eax,0xc2d74687
  412056:	cld    
  412057:	fwait
  412058:	push   ecx
  412059:	mov    ebx,0x24f4cd86
  41205e:	(bad)  
  41205f:	rol    DWORD PTR [esi-0x3cd74282],1
  412065:	popf   
  412066:	dec    esp
  412067:	pushf  
  412068:	mov    ch,0x21
  41206a:	loopne 0x412074
  41206c:	push   edx
  41206e:	aam    0x55
  412070:	dec    ecx
  412071:	mov    eax,ds:0xf0147e44
  412076:	and    ecx,ecx
  412078:	ror    BYTE PTR [esi+edi*2],cl
  41207b:	(bad)  
  41207c:	sub    ebp,esi
  41207e:	push   ss
  41207f:	cmp    eax,0xf08cb3eb
  412084:	mov    DWORD PTR [ebx+0x7d01f05c],esi
  41208a:	jb     0x4120f4
  41208c:	stos   BYTE PTR es:[edi],al
  41208d:	jp     0x41208b
  41208f:	js     0x4120fb
  412091:	js     0x412108
  412093:	push   0x65
  412095:	pop    ebx
  412096:	xor    al,0x4d
  412098:	test   al,0xf7
  41209a:	inc    eax
  41209b:	xor    DWORD PTR [edx-0xce5fefe],edx
  4120a1:	adc    al,0xab
  4120a3:	adc    bh,ch
  4120a5:	adc    al,0xc2
  4120a7:	xchg   dl,ah
  4120a9:	aaa    
  4120aa:	call   0xb7cac252
  4120af:	fistp  WORD PTR [esi+0x62f8d25e]
  4120b5:	mov    ah,BYTE PTR [edi]
  4120b7:	mov    ch,0x4c
  4120b9:	iret   
  4120ba:	adc    eax,0xa14b136e
  4120bf:	out    dx,eax
  4120c0:	push   ebx
  4120c1:	sbb    al,0x4c
  4120c3:	cmp    edi,edx
  4120c5:	push   esi
  4120c6:	adc    BYTE PTR [ebp+0xaf351b3],ch
  4120cc:	frstor ds:0xa28f2f47
  4120d2:	(bad)  
  4120d3:	or     eax,0x38c24d43
  4120d8:	shl    DWORD PTR [esi-0x3796b9cf],1
  4120de:	sbb    cl,BYTE PTR [esi]
  4120e0:	stos   DWORD PTR es:[edi],eax
  4120e1:	loope  0x4120d4
  4120e3:	jb     0x4120fe
  4120e5:	cmp    edx,DWORD PTR [esi+0x2b]
  4120e8:	imul   esp,DWORD PTR [ebx+edi*1+0x6f28142d],0xf81bc48f
  4120f3:	scas   eax,DWORD PTR es:[edi]
  4120f4:	dec    ebx
  4120f5:	push   ds
  4120f6:	dec    edx
  4120f7:	mov    ds:0x6a203e35,eax
  4120fc:	fild   DWORD PTR [ecx+0x522f0c3a]
  412102:	or     esi,ebx
  412104:	push   ebx
  412105:	mov    ch,0x7f
  412107:	call   0xae33:0x68bc05f0
  41210e:	ins    DWORD PTR es:[edi],dx
  41210f:	enter  0x5f40,0x1f
  412113:	loope  0x4120be
  412115:	sbb    BYTE PTR [ebx-0x2],cl
  412118:	scas   eax,DWORD PTR es:[edi]
  412119:	adc    eax,0xc5dccf79
  41211e:	cmp    DWORD PTR [eax+0x49],ecx
  412121:	in     eax,0x80
  412123:	clc    
  412124:	jmp    0x9bdd4bdd
  412129:	mov    al,0x1f
  41212b:	jb     0x412175
  41212d:	lods   al,BYTE PTR ds:[esi]
  41212e:	mov    bl,0xf0
  412130:	xchg   edi,eax
  412131:	adc    al,0x4a
  412133:	out    dx,eax
  412134:	mov    dh,BYTE PTR [edx+edi*2+0x72]
  412138:	jl     0x412125
  41213a:	jp     0x412197
  41213c:	loopne 0x412133
  41213e:	dec    ebx
  41213f:	sbb    DWORD PTR [ebx],ecx
  412141:	int    0x60
  412143:	ret    0x6f54
  412146:	(bad)  
  412148:	loop   0x4121c0
  41214a:	or     eax,0x95a365a5
  41214f:	xor    cl,BYTE PTR [eax+0x78]
  412152:	pop    es
  412153:	add    al,0x27
  412155:	adc    edi,DWORD PTR [eax]
  412157:	rcr    esp,0xb9
  41215a:	jecxz  0x412164
  41215c:	mov    esp,0x5ed95ef5
  412161:	mov    al,ds:0x5ce6d807
  412166:	in     eax,0xd9
  412168:	lock cmp eax,0xb818caac
  41216e:	std    
  41216f:	aas    
  412170:	sbb    eax,0x6d4b8491
  412175:	adc    eax,ecx
  412177:	or     edx,edx
  412179:	call   0x94505c1c
  41217e:	sub    ah,BYTE PTR ds:[ebp-0x55]
  412182:	call   0x702d:0x201d6846
  412189:	ins    DWORD PTR es:[edi],dx
  41218a:	dec    edi
  41218b:	aad    0xa1
  41218d:	fmul   QWORD PTR [esi]
  41218f:	outs   dx,BYTE PTR ds:[esi]
  412190:	hlt    
  412191:	sbb    BYTE PTR [ebp+0xa],bh
  412194:	or     eax,0x53d60944
  412199:	or     esi,DWORD PTR [edx-0x1fa57036]
  41219f:	cmp    edi,esp
  4121a1:	sub    DWORD PTR ds:0x9ade4a39,ebx
  4121a7:	and    BYTE PTR [eax-0x60],bh
  4121aa:	pop    eax
  4121ab:	push   0x92ceae9c
  4121b0:	mov    dh,0x1d
  4121b2:	or     DWORD PTR [si-0x17],ebp
  4121b6:	or     edx,DWORD PTR [edx+ebx*8]
  4121b9:	test   al,0x36
  4121bb:	into   
  4121bc:	jmp    0x41215c
  4121be:	mov    al,0x75
  4121c0:	xchg   esi,eax
  4121c1:	xchg   ebp,eax
  4121c2:	outs   dx,DWORD PTR ds:[esi]
  4121c3:	jno    0x4121b9
  4121c5:	out    dx,al
  4121c6:	and    esi,DWORD PTR ds:0x37f3ea22
  4121cc:	mov    ebp,0xdcd27a02
  4121d1:	dec    edx
  4121d2:	loopne 0x412186
  4121d4:	push   ebp
  4121d5:	or     BYTE PTR [edx],bh
  4121d7:	inc    ecx
  4121d8:	jmp    0x412180
  4121da:	xchg   ecx,eax
  4121db:	out    dx,eax
  4121dc:	outs   dx,DWORD PTR ds:[esi]
  4121dd:	jmp    0x7c0fcc97
  4121e2:	adc    eax,DWORD PTR [edi-0x1f]
  4121e5:	jb     0x4121e6
  4121e7:	sub    ebp,ecx
  4121e9:	lods   al,BYTE PTR ds:[esi]
  4121ea:	and    ah,BYTE PTR [ecx]
  4121ec:	imul   edi,edx,0x22
  4121ef:	dec    ebx
  4121f0:	jno    0x4121b6
  4121f2:	jnp    0x41218b
  4121f4:	pop    eax
  4121f5:	sahf   
  4121f6:	jmp    0xfb5d9561
  4121fb:	adc    eax,0xf8e83f71
  412200:	nop
  412201:	test   DWORD PTR ds:0x62a37a93,0xf7b47677
  41220b:	dec    esi
  41220c:	fcmovb st,st(5)
  41220e:	iret   
  41220f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412210:	dec    edx
  412211:	mov    ah,0x8d
  412213:	sub    esp,DWORD PTR [edi+0x5d325938]
  412219:	(bad)  
  41221a:	popf   
  41221b:	push   esp
  41221c:	les    edi,FWORD PTR [edx-0x133db7ed]
  412222:	shl    DWORD PTR [esi],1
  412224:	jns    0x41222b
  412226:	das    
  412227:	fisubr WORD PTR [edi-0x5b038d87]
  41222d:	mov    ds:0xb4fa5983,al
  412232:	inc    ebp
  412233:	fwait
  412234:	sub    al,0x5c
  412236:	sbb    ebx,eax
  412238:	sahf   
  412239:	(bad)  
  41223a:	mov    ds:0x3c78aa4,al
  41223f:	inc    edx
  412240:	shl    dh,1
  412242:	ja     0x4121e2
  412244:	jno    0x412286
  412246:	sub    DWORD PTR [ecx-0x80],esi
  412249:	test   BYTE PTR [ecx+0x78b5980d],cl
  41224f:	clc    
  412250:	dec    esi
  412251:	popa   
  412252:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412253:	mov    esp,ss
  412255:	mov    dh,0xff
  412257:	mov    bl,0x18
  412259:	std    
  41225a:	xchg   dl,bh
  41225c:	rcl    esi,1
  41225e:	fidiv  DWORD PTR [edi]
  412260:	or     eax,0x397a8ddd
  412265:	sub    DWORD PTR [edi-0x2],0xf2021076
  41226c:	xor    DWORD PTR [edi+edi*1+0x3f],ebp
  412270:	fnstcw WORD PTR [eax-0x41]
  412273:	dec    esp
  412274:	mov    ecx,DWORD PTR [ebx-0x2d]
  412277:	cmp    ebp,DWORD PTR [edx+0x1c]
  41227a:	xchg   ebp,eax
  41227b:	arpl   sp,sp
  41227d:	mul    dh
  41227f:	dec    ecx
  412280:	mov    ebp,0x9993178e
  412285:	add    eax,ebp
  412287:	ficomp WORD PTR [ebx]
  412289:	dec    ecx
  41228b:	fsub   QWORD PTR [esp+ebp*2-0x14feae0b]
  412292:	dec    edx
  412293:	aaa    
  412294:	fcomp  st(6)
  412296:	arpl   WORD PTR [esi-0x2a],si
  412299:	push   edi
  41229a:	ins    BYTE PTR es:[edi],dx
  41229b:	mov    edx,0x505eb4c
  4122a0:	imul   esp,DWORD PTR [ebx+0x2513a782],0x7
  4122a7:	sbb    eax,0x4acaa7de
  4122ac:	dec    ecx
  4122ad:	lods   al,BYTE PTR ds:[esi]
  4122ae:	sbb    DWORD PTR [edx+0x71],eax
  4122b1:	clc    
  4122b2:	xor    BYTE PTR [eax],dl
  4122b4:	mov    bh,0x26
  4122b6:	mov    ebx,0xcb76520a
  4122bb:	cmp    BYTE PTR [esi],cl
  4122bd:	mov    bh,0x4
  4122bf:	out    0xbe,eax
  4122c1:	ficomp DWORD PTR [eax+0x166ae127]
  4122c7:	shl    dh,cl
  4122c9:	imul   esi,DWORD PTR [edx+0x32196612],0x63fe12da
  4122d3:	and    eax,0x8a02263b
  4122d8:	shl    BYTE PTR [ebp+0x1a713084],cl
  4122de:	mov    cl,0xe9
  4122e0:	adc    BYTE PTR [edx+0x36],ch
  4122e3:	test   esp,esp
  4122e5:	aam    0x1f
  4122e7:	lea    esp,[esi]
  4122e9:	call   0x6191:0xdc4d8d4b
  4122f0:	pop    ebp
  4122f1:	inc    ebp
  4122f2:	je     0x412338
  4122f4:	and    esi,DWORD PTR [edx+0x1f]
  4122f7:	xchg   edi,eax
  4122f8:	jle    0x41232e
  4122fa:	inc    ebx
  4122fb:	test   eax,0x96ae7e60
  412300:	mov    ebx,0x92328fa3
  412305:	push   0x3a3c0c2d
  41230a:	dec    edx
  41230b:	in     al,dx
  41230c:	loope  0x412291
  41230e:	rol    DWORD PTR [edi+ebx*8+0x2c],1
  412312:	dec    esi
  412313:	(bad)  
  412314:	push   cs
  412315:	scas   al,BYTE PTR es:[edi]
  412316:	adc    al,0xe0
  412318:	fs dec edi
  41231a:	dec    ebp
  41231b:	enter  0x43cf,0x60
  41231f:	fst    QWORD PTR [esi]
  412321:	push   esp
  412322:	sbb    al,0xdb
  412324:	das    
  412325:	mov    esp,gs
  412327:	out    0xd7,al
  412329:	test   ecx,0x4f034b70
  41232f:	out    0x6d,al
  412331:	and    ah,dh
  412333:	(bad)  
  412334:	mov    edx,0x5d87da4c
  412339:	(bad)  
  41233a:	add    edi,DWORD PTR [edi-0x2e4e2f2d]
  412340:	repnz cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412342:	ins    BYTE PTR es:[edi],dx
  412343:	outs   dx,BYTE PTR ds:[esi]
  412344:	stos   BYTE PTR es:[edi],al
  412345:	lods   al,BYTE PTR ds:[esi]
  412346:	and    BYTE PTR es:[ecx+0xd],al
  41234a:	gs (bad) 
  41234d:	addr16 jnp 0x41237c
  412350:	mov    ebx,0x6bf1390f
  412355:	call   0xc136:0x1977363
  41235c:	cwde   
  41235d:	mov    cl,0x39
  41235f:	add    eax,0xcbb24c11
  412364:	push   eax
  412365:	adc    DWORD PTR [ecx-0x31e8304e],edi
  41236b:	jns    0x4122fe
  41236d:	jp     0x4123a4
  41236f:	jg     0x4123b4
  412371:	jl     0x4123a6
  412373:	adc    eax,0xf6da71d0
  412378:	sbb    DWORD PTR [ebx+edi*1+0x7da4f464],esp
  41237f:	and    ah,al
  412381:	mov    al,ds:0xd24c63a3
  412386:	sub    eax,0x7675cb9e
  41238b:	add    dh,bh
  41238d:	cdq    
  41238e:	xor    DWORD PTR [edi-0x6e],eax
  412391:	pop    ebx
  412392:	mov    ebx,0x920c4a8e
  412397:	inc    esi
  412398:	fcomp  DWORD PTR ss:[edi-0x65a37330]
  41239f:	cmp    ch,BYTE PTR [ebx-0x22876eec]
  4123a5:	mov    ch,0xd4
  4123a7:	pop    esi
  4123a8:	mov    edx,0x90793457
  4123ad:	mov    ecx,0x2e95d35
  4123b2:	daa    
  4123b3:	rcl    DWORD PTR [edi+0x31],cl
  4123b6:	add    dh,dl
  4123b8:	mov    eax,ds:0x14a93de2
  4123bd:	sub    ah,al
  4123bf:	out    dx,al
  4123c0:	leave  
  4123c1:	enter  0xcc68,0x34
  4123c5:	push   esi
  4123c6:	jno    0x4123a2
  4123c8:	adc    BYTE PTR [esi+0x7d],0x6
  4123cc:	dec    esp
  4123cd:	shl    BYTE PTR ds:0xfdd83e2a,1
  4123d3:	test   DWORD PTR [esi+esi*4],eax
  4123d6:	inc    esp
  4123d7:	out    0x33,eax
  4123d9:	lods   eax,DWORD PTR ds:[esi]
  4123da:	icebp  
  4123db:	inc    esi
  4123dc:	cmp    bl,BYTE PTR [edi+eiz*8-0x48]
  4123e0:	inc    edx
  4123e1:	xchg   cl,al
  4123e3:	aam    0x96
  4123e5:	arpl   bx,di
  4123e7:	or     dh,BYTE PTR [esi]
  4123e9:	add    edx,DWORD PTR [edx+0x2e8d8a9]
  4123ef:	das    
  4123f0:	in     eax,0x88
  4123f2:	daa    
  4123f3:	idiv   BYTE PTR [ecx-0x50]
  4123f6:	cmp    BYTE PTR [ecx],0xe2
  4123f9:	data16 xor dx,WORD PTR [ebp+0x12]
  4123fe:	leave  
  4123ff:	mov    ch,BYTE PTR [esi+eax*4+0x67]
  412403:	dec    ecx
  412404:	out    dx,eax
  412405:	mov    edx,0x51eae33
  41240a:	xchg   ebp,eax
  41240b:	sbb    ch,BYTE PTR [esi]
  41240d:	aam    0x85
  41240f:	jmp    0x9724:0x344a12b7
  412416:	(bad)  [ecx-0x56]
  412419:	fisttp DWORD PTR [eax+0x10ce2b55]
  41241f:	sbb    BYTE PTR [ebp+0x1a],ch
  412422:	adc    eax,0xc5bae052
  412427:	ret    
  412428:	mov    edx,0x4491e5cc
  41242d:	(bad)  
  41242f:	pushf  
  412430:	mov    al,0xab
  412432:	or     al,0xee
  412434:	mov    eax,0x7f035513
  412439:	aam    0xcf
  41243b:	inc    DWORD PTR [ebp+0x19]
  41243e:	xchg   BYTE PTR [ecx+0x45],ah
  412441:	sub    edx,edi
  412443:	pop    ecx
  412444:	ds pop edx
  412446:	sub    al,0xbb
  412448:	cmp    dl,bh
  41244a:	jle    0x4123cd
  41244c:	push   0xffffffbd
  41244e:	adc    DWORD PTR [esi+0x2def3386],0x50
  412455:	mov    ecx,0x58a24ad6
  41245a:	neg    BYTE PTR [ebx-0x50a61dcc]
  412460:	jge    0x4124d0
  412462:	int3   
  412463:	(bad)  
  412464:	mov    eax,ds:0x8a624c7f
  412469:	popa   
  41246a:	ss lock and eax,0x7c06c788
  412471:	mov    ds:0x5d4b8011,eax
  412476:	(bad)  
  412477:	aam    0x58
  412479:	cmc    
  41247a:	inc    edx
  41247b:	mov    dl,0xb6
  41247d:	out    0x6b,eax
  41247f:	(bad)  
  412480:	out    0x4e,eax
  412482:	sub    eax,0xc027698c
  412487:	cmp    eax,0xb15c6bb9
  41248c:	mov    al,0xaf
  41248f:	mov    ds,WORD PTR [edx+edi*4]
  412492:	scas   eax,DWORD PTR es:[edi]
  412493:	fwait
  412494:	out    0xf3,al
  412496:	dec    ebx
  412497:	adc    ecx,edi
  412499:	jno    0x4124e6
  41249b:	pop    edx
  41249c:	mov    edi,0x55d41571
  4124a1:	cmp    eax,0x8ac4279e
  4124a6:	out    0xe,al
  4124a8:	fcom   DWORD PTR [ebx-0x5d7cc87b]
  4124ae:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4124af:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4124b0:	stos   DWORD PTR es:[edi],eax
  4124b1:	stos   DWORD PTR es:[edi],eax
  4124b2:	and    DWORD PTR [esi+0x70],esp
  4124b5:	and    DWORD PTR ds:0x6ce09623,ecx
  4124bb:	adc    al,0x2b
  4124bd:	imul   edi,DWORD PTR [ecx-0x2a80e80],0x80dd00fe
  4124c7:	push   edi
  4124c8:	dec    edi
  4124c9:	inc    eax
  4124ca:	lods   al,BYTE PTR ds:[esi]
  4124cb:	cld    
  4124cc:	add    eax,0x31caa358
  4124d1:	inc    edi
  4124d2:	dec    esi
  4124d3:	jbe    0x412479
  4124d5:	test   BYTE PTR [eax-0x2837218b],cl
  4124db:	xor    BYTE PTR [ebx+0x420c7be5],ch
  4124e1:	adc    BYTE PTR [ebp+eiz*1-0x48a627ee],al
  4124e8:	cmp    edi,DWORD PTR [edi]
  4124ea:	dec    edx
  4124eb:	stos   BYTE PTR es:[edi],al
  4124ec:	mov    dh,0x3c
  4124ee:	ss mov ebp,0xbcb24769
  4124f4:	ins    DWORD PTR es:[edi],dx
  4124f5:	dec    esp
  4124f6:	sbb    eax,0x346f71e3
  4124fb:	out    dx,al
  4124fc:	and    cl,dl
  4124fe:	jmp    0xa176e9b3
  412503:	inc    ebp
  412504:	jbe    0x4124bb
  412506:	mov    ah,0x22
  412508:	outs   dx,DWORD PTR ds:[esi]
  412509:	xchg   ebp,eax
  41250a:	cli    
  41250b:	inc    ebx
  41250c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41250d:	and    ebp,eax
  41250f:	ror    edi,cl
  412511:	ficom  WORD PTR [ebx]
  412513:	addr16 pop ecx
  412515:	and    ebx,DWORD PTR es:[ebx-0x52ada5ea]
  41251c:	or     eax,DWORD PTR [edi+0x1eb78b9]
  412522:	xchg   DWORD PTR gs:[edx],ebp
  412525:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412526:	dec    eax
  412527:	dec    edx
  412528:	inc    edx
  412529:	cmp    al,0x92
  41252b:	and    DWORD PTR [ebp+0x1b],edi
  41252e:	sbb    DWORD PTR [edx-0xd],esp
  412531:	adc    al,0xd9
  412533:	les    ecx,FWORD PTR [esi]
  412535:	fisub  DWORD PTR ds:0x96e52438
  41253b:	sbb    dl,BYTE PTR [ecx-0x46]
  41253e:	scas   eax,DWORD PTR es:[edi]
  41253f:	pop    ds
  412540:	aam    0xae
  412542:	xchg   edi,eax
  412543:	pop    ss
  412544:	push   edx
  412545:	es in  eax,dx
  412547:	fiadd  WORD PTR [edx+0xa]
  41254a:	or     ah,bl
  41254c:	or     BYTE PTR [ebp-0x6867783b],0x29
  412553:	int    0x4a
  412555:	xchg   esi,eax
  412556:	xchg   edx,eax
  412557:	mov    ch,0x64
  412559:	xchg   ecx,eax
  41255a:	jno    0x4124f1
  41255c:	jmp    0xba58:0x64626445
  412563:	sub    eax,0xc0a454f4
  412568:	(bad)  
  412569:	ficom  DWORD PTR [eax]
  41256b:	lock mov ch,0x36
  41256e:	daa    
  41256f:	clc    
  412570:	mov    eax,ds:0x6905c422
  412575:	push   edx
  412576:	push   es
  412577:	add    BYTE PTR [ecx+eiz*4-0x7ff68fad],al
  41257e:	jp     0x412580
  412580:	push   ecx
  412581:	mov    al,ds:0x3c23351b
  412586:	lock fisubr DWORD PTR [edi-0x314fdecd]
  41258d:	push   ebx
  41258e:	in     al,0x8
  412590:	in     al,0xfb
  412592:	dec    edx
  412593:	loope  0x41251a
  412595:	scas   eax,DWORD PTR es:[edi]
  412596:	push   cs
  412597:	xor    DWORD PTR [ecx+0x3f],ecx
  41259a:	gs inc ebx
  41259c:	xchg   BYTE PTR [eax],bl
  41259e:	stos   BYTE PTR es:[edi],al
  41259f:	pop    esi
  4125a0:	mov    esi,esp
  4125a2:	pop    ss
  4125a3:	aam    0x56
  4125a5:	mov    ds:0x2cc0101c,al
  4125aa:	xchg   esi,eax
  4125ab:	cmp    DWORD PTR [edi],esi
  4125ad:	(bad)  
  4125ae:	sbb    ah,ah
  4125b0:	loop   0x412584
  4125b2:	sub    DWORD PTR [eax-0x6e080c61],edi
  4125b8:	test   eax,0xd57b24bf
  4125bd:	inc    ebx
  4125be:	xchg   ecx,eax
  4125bf:	cs jmp 0x4125c2
  4125c2:	xchg   BYTE PTR [esi-0x77765e66],bl
  4125c8:	push   cs
  4125c9:	cmc    
  4125ca:	adc    ecx,DWORD PTR ss:[edx-0x2c]
  4125ce:	scas   eax,DWORD PTR es:[edi]
  4125cf:	jno    0x41263c
  4125d1:	cli    
  4125d2:	and    al,0x6c
  4125d4:	xor    al,0x10
  4125d6:	dec    esp
  4125d7:	pop    esp
  4125d8:	cmp    ecx,DWORD PTR [ecx-0x40]
  4125db:	repz xlat BYTE PTR gs:[ebx]
  4125de:	cdq    
  4125df:	mov    ebp,0xbe42cab4
  4125e4:	into   
  4125e5:	call   0x6908d643
  4125ea:	jp     0x41265e
  4125ec:	push   eax
  4125ed:	mov    esi,0x3e7d70f0
  4125f2:	sbb    DWORD PTR [ebp+0x76f86d58],edi
  4125f8:	aad    0x86
  4125fa:	les    ecx,FWORD PTR [ebx-0x15]
  4125fd:	gs cmc 
  4125ff:	icebp  
  412600:	push   ss
  412601:	push   ecx
  412602:	mov    dh,0x98
  412604:	cmp    ebp,DWORD PTR [ebx-0x71eac08a]
  41260a:	inc    edi
  41260b:	inc    edx
  41260c:	mov    esp,0x9ed5a87
  412611:	xor    BYTE PTR [ebx+0x4d],bh
  412614:	jp     0x4125e6
  412616:	out    dx,al
  412617:	idiv   dl
  412619:	adc    esi,0x81395486
  41261f:	in     eax,dx
  412620:	dec    ecx
  412621:	sub    eax,0x174c9a8e
  412626:	xchg   ebp,eax
  412627:	enter  0x1c7a,0x6d
  41262b:	dec    ecx
  41262c:	or     BYTE PTR ss:[edx-0x59],al
  412630:	ja     0x4125cd
  412632:	inc    ecx
  412633:	adc    esi,DWORD PTR [ecx+0x6a]
  412636:	nop
  412637:	xor    BYTE PTR [ebp-0x5433eebd],bh
  41263d:	aad    0x15
  41263f:	jle    0x4125d7
  412641:	test   al,0xfc
  412643:	mov    ds:0x454139b4,eax
  412648:	or     al,bl
  41264a:	sub    eax,0x2357d2e6
  41264f:	xor    edx,0xffffffb0
  412652:	mov    al,0xdb
  412654:	push   esp
  412655:	adc    BYTE PTR [esi-0x5b],bl
  412658:	push   edx
  412659:	dec    ebp
  41265a:	pop    ebp
  41265b:	cmp    DWORD PTR [esi-0x7a194f38],0x11
  412662:	cld    
  412663:	push   eax
  412664:	retf   
  412665:	mov    eax,ds:0xe4f5f287
  41266a:	in     eax,dx
  41266b:	mov    esp,ecx
  41266d:	sub    eax,0xff70912f
  412672:	cmp    ebx,DWORD PTR [esi-0x42a773f]
  412678:	add    al,0x5b
  41267a:	mov    bl,0x50
  41267c:	enter  0x59e4,0x26
  412680:	or     BYTE PTR ds:0x78e220b6,0x8a
  412687:	es xor bl,0x2c
  41268b:	inc    ecx
  41268c:	ss in  al,dx
  41268e:	(bad)  
  41268f:	pop    esi
  412690:	lahf   
  412691:	(bad)  
  412692:	mov    ah,0x4b
  412694:	sub    eax,0x12f64b31
  412699:	call   0x262258c3
  41269e:	dec    ecx
  41269f:	fistp  WORD PTR [esi+eiz*2]
  4126a2:	imul   ebx,ebx,0xfffffffd
  4126a5:	mov    edx,0x930a72c1
  4126aa:	jge    0x41272b
  4126ac:	fild   WORD PTR [edi+eax*1-0x5c]
  4126b0:	push   esi
  4126b1:	imul   BYTE PTR [edi]
  4126b3:	dec    ecx
  4126b4:	sbb    edx,edx
  4126b6:	lahf   
  4126b7:	xor    al,0xcf
  4126b9:	inc    esi
  4126ba:	fld    QWORD PTR [eax+0x10]
  4126bd:	mov    dl,0x2e
  4126bf:	and    eax,0xb1ff59
  4126c4:	cli    
  4126c5:	pop    ss
  4126c6:	stc    
  4126c7:	(bad)  
  4126c9:	imul   esi,DWORD PTR [ebx],0x212a6829
  4126cf:	add    al,0xd3
  4126d1:	and    DWORD PTR [edi],0x8a25afcd
  4126d7:	(bad)  
  4126d8:	jmp    0x97d51ca2
  4126dd:	push   ss
  4126de:	dec    esi
  4126df:	jecxz  0x412717
  4126e1:	pop    ss
  4126e2:	xchg   edx,eax
  4126e3:	push   es
  4126e4:	sti    
  4126e5:	pop    ecx
  4126e6:	mov    dh,0xdf
  4126e8:	or     BYTE PTR [esi+eiz*1-0x64552b17],cl
  4126ef:	call   0x3b28ed96
  4126f4:	inc    esi
  4126f5:	jo     0x412681
  4126f7:	cmp    dl,al
  4126f9:	xchg   edx,eax
  4126fa:	adc    DWORD PTR [ebx+0x29],edx
  4126fd:	pusha  
  4126fe:	data16 idiv ch
  412701:	rcl    ecx,1
  412703:	in     eax,0x18
  412705:	xor    DWORD PTR [ebp+0x75],edx
  412708:	dec    edx
  412709:	(bad)  
  41270a:	and    DWORD PTR [ebx+0x0],edi
  41270d:	xor    ecx,DWORD PTR [ecx+0x288235a7]
  412713:	mov    cl,0x6
  412715:	ror    esp,cl
  412717:	mov    dh,BYTE PTR [edi-0x3d]
  41271a:	add    bh,BYTE PTR [edi-0x640385e1]
  412720:	mov    eax,0xf9c7197a
  412725:	scas   eax,DWORD PTR es:[edi]
  412726:	mov    dh,0xf6
  412728:	jae    0x41279f
  41272a:	shl    DWORD PTR [ecx+0x6f],0x31
  41272e:	mov    al,ds:0xed5635a9
  412733:	push   0xc2566769
  412738:	sti    
  412739:	test   eax,0x4e0a00e6
  41273e:	cmp    bl,bl
  412740:	inc    ebx
  412741:	cld    
  412742:	push   ecx
  412743:	pushf  
  412744:	inc    eax
  412745:	mov    al,0x7
  412747:	das    
  412748:	sar    BYTE PTR [ecx+0x72ef569b],cl
  41274e:	push   ecx
  41274f:	into   
  412750:	jmp    ecx
  412752:	xchg   edi,eax
  412753:	mov    WORD PTR [edi-0x541f5d56],?
  412759:	jb     0x41278e
  41275b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41275c:	call   0xdff:0x69b5f5c8
  412763:	xchg   ebx,eax
  412764:	arpl   WORD PTR [ecx],cx
  412766:	and    al,dh
  412768:	ja     0x412725
  41276a:	arpl   WORD PTR [ebx+0x4c002b37],bp
  412770:	shl    BYTE PTR [ecx-0x24],cl
  412773:	mov    al,ds:0x3dd1fe5f
  412778:	shr    BYTE PTR [esi],cl
  41277a:	push   edx
  41277b:	push   ebx
  41277c:	pop    es
  41277d:	xor    esp,0x4a
  412780:	push   ecx
  412781:	dec    edi
  412782:	bound  esi,QWORD PTR [ecx+0x61]
  412785:	xor    bh,bl
  412787:	ss inc ebp
  412789:	repz push esp
  41278b:	pop    edi
  41278c:	inc    ebp
  41278d:	lahf   
  41278e:	mov    bl,0xf7
  412791:	adc    ebp,edi
  412793:	sbb    edx,DWORD PTR [edx+eax*4+0x20]
  412797:	dec    ecx
  412798:	dec    edx
  412799:	jmp    0x97de:0x63d1a7b2
  4127a0:	retf   0xd150
  4127a3:	pop    edi
  4127a4:	addr16 jmp 0x2aeae040
  4127aa:	mov    cl,BYTE PTR [esi]
  4127ac:	ret    0x5132
  4127af:	(bad)  
  4127b0:	loopne 0x412823
  4127b2:	sbb    ebx,DWORD PTR [edx]
  4127b4:	lea    esp,[esi+edi*4+0x6ccb53b6]
  4127bb:	dec    ecx
  4127bc:	(bad)  
  4127bd:	or     al,BYTE PTR [esi]
  4127bf:	inc    esi
  4127c0:	sti    
  4127c1:	sti    
  4127c2:	push   esp
  4127c3:	pop    es
  4127c4:	push   edx
  4127c5:	aad    0xb5
  4127c7:	add    DWORD PTR [ecx+0x7f],ebp
  4127ca:	add    dh,BYTE PTR [ebp+ebp*2-0x17]
  4127ce:	push   esp
  4127cf:	outs   dx,BYTE PTR ds:[esi]
  4127d0:	pop    ebp
  4127d1:	and    eax,0xb09d20d5
  4127d6:	inc    ecx
  4127d7:	or     dh,BYTE PTR [ebp-0x313e8a04]
  4127dd:	lea    edi,[ecx-0x581c08b4]
  4127e3:	pop    es
  4127e4:	push   es
  4127e5:	dec    eax
  4127e6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4127e7:	stc    
  4127e8:	aad    0x7d
  4127ea:	mov    eax,0x1d53779d
  4127ef:	je     0x4127a4
  4127f1:	rol    BYTE PTR [esi-0x1c52ba6a],1
  4127f7:	cmp    eax,DWORD PTR [ecx-0x68]
  4127fa:	out    0x65,al
  4127fc:	xchg   ebp,eax
  4127fd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4127fe:	dec    esp
  4127ff:	or     DWORD PTR [ecx+0x1a483223],ebp
  412805:	jno    0x412807
  412807:	shr    BYTE PTR [ebx],cl
  412809:	loop   0x4127df
  41280b:	push   ss
  41280c:	popa   
  41280d:	mov    bl,BYTE PTR [eax+ebx*1]
  412810:	push   cs
  412811:	or     DWORD PTR [edx+0x6f],edi
  412814:	mov    esi,0x2e46a44e
  412819:	das    
  41281a:	call   0x43ad:0xf61b4b48
  412821:	in     al,dx
  412822:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412823:	pusha  
  412824:	sbb    BYTE PTR [esi-0x63],ch
  412827:	stc    
  412828:	xor    eax,0x5c5787d9
  41282d:	sbb    ecx,DWORD PTR [eax]
  41282f:	test   al,0xd6
  412831:	jecxz  0x412892
  412833:	jmp    0x99e0bf
  412838:	int3   
  412839:	mov    ds:0xe91b641a,eax
  41283e:	lock (bad) 
  412840:	jmp    0x412849
  412842:	out    dx,eax
  412843:	push   edi
  412844:	cmp    cl,BYTE PTR [edx+0x445915aa]
  41284a:	dec    edx
  41284b:	retf   0xa110
  41284e:	jnp    0x4127ee
  412850:	push   0xffffffdf
  412852:	inc    edx
  412853:	dec    edi
  412854:	ins    BYTE PTR es:[edi],dx
  412855:	je     0x412894
  412857:	mov    ds:0xab91bf27,al
  41285c:	push   0x4425823f
  412861:	push   ecx
  412862:	cmp    dh,BYTE PTR [esi-0x2e6ca80e]
  412868:	xlat   BYTE PTR ds:[ebx]
  412869:	or     ah,bh
  41286b:	popf   
  41286c:	and    ecx,DWORD PTR [ecx-0x63]
  41286f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412870:	push   eax
  412871:	pop    ecx
  412872:	cmp    al,0x6e
  412874:	add    eax,0x4ad22342
  412879:	sbb    eax,0x276a7331
  41287e:	js     0x4128cc
  412880:	xchg   DWORD PTR [edx+0x6b],ebp
  412883:	lods   eax,DWORD PTR ds:[esi]
  412884:	repnz lods al,BYTE PTR ds:[esi]
  412886:	adc    dh,al
  412888:	not    edx
  41288a:	pop    ebp
  41288b:	push   cs
  41288c:	sub    BYTE PTR [ecx+ebp*8-0x622836da],cl
  412893:	in     eax,0x54
  412895:	not    eax
  412897:	jb     0x4128df
  412899:	test   al,0xaa
  41289b:	mov    esp,0x9139fe94
  4128a0:	mov    eax,ds:0x28bd5c50
  4128a5:	(bad)  
  4128a6:	mov    al,0x2c
  4128a8:	mov    edx,?
  4128aa:	or     eax,edi
  4128ac:	retf   
  4128ad:	pop    ss
  4128ae:	add    al,0xfd
  4128b0:	add    dh,BYTE PTR [edx-0x3d909b66]
  4128b6:	add    BYTE PTR ds:[esp+edi*1+0x17],al
  4128bb:	sub    ecx,ecx
  4128bd:	fnstenv [eax]
  4128bf:	jno    0x4128e4
  4128c1:	cdq    
  4128c2:	mov    eax,0xbd5fb5d5
  4128c7:	(bad)  
  4128c8:	xchg   ecx,eax
  4128c9:	mov    edx,0x836a30a8
  4128ce:	sub    dh,BYTE PTR ds:0xde866cd
  4128d4:	xchg   ebp,eax
  4128d5:	pop    ecx
  4128d6:	enter  0xe922,0x6e
  4128da:	or     al,0xac
  4128dc:	ins    DWORD PTR es:[edi],dx
  4128dd:	or     al,BYTE PTR [edi-0x2a089b65]
  4128e3:	sti    
  4128e4:	test   al,0xb
  4128e6:	sub    BYTE PTR [ebx+0x33b0f783],0xff
  4128ed:	in     al,0x64
  4128ef:	cld    
  4128f0:	sbb    DWORD PTR [edi+0x2ff81708],0xa4f3f039
  4128fa:	cmp    BYTE PTR [ebx*2+0x9f1fee2],0xfb
  412902:	mov    cl,0xc4
  412904:	cmp    al,0xb7
  412906:	or     DWORD PTR [ecx+0x6e4f00a8],ebp
  41290c:	imul   eax,DWORD PTR [eax],0x52
  41290f:	push   ds
  412910:	stc    
  412911:	idiv   eax
  412913:	sub    eax,0x1bd65242
  412918:	daa    
  412919:	out    0xa6,al
  41291b:	jnp    0x4128d4
  41291d:	test   edi,0xe86a35ef
  412923:	or     edx,DWORD PTR [esi]
  412925:	add    BYTE PTR [edx],cl
  412927:	add    eax,0x1c9a90d4
  41292c:	add    eax,0xf6e24c6
  412931:	cdq    
  412932:	scas   eax,DWORD PTR es:[edi]
  412933:	or     edx,DWORD PTR [edi]
  412935:	push   edi
  412936:	add    bh,ch
  412938:	or     eax,DWORD PTR [edi-0x69006791]
  41293e:	addr16 btc esp,edx
  412942:	pop    es
  412943:	jb     0x4128df
  412945:	adc    eax,esp
  412947:	push   ebp
  412948:	xor    ecx,edx
  41294a:	add    DWORD PTR [eax+0x9],esp
  41294d:	pop    ds
  41294e:	dec    ecx
  41294f:	xchg   edi,eax
  412950:	je     0x412989
  412952:	inc    edi
  412953:	adc    DWORD PTR [ebx-0x3e],ecx
  412956:	mov    WORD PTR [edx],?
  412958:	je     0x412960
  41295a:	cmc    
  41295b:	sub    al,0x8b
  41295d:	icebp  
  41295e:	fnsave [ebx]
  412960:	imul   edx,DWORD PTR [edi-0x6ad87c30],0x762fbaca
  41296a:	shl    bl,cl
  41296c:	ss xor al,0x28
  41296f:	call   0x6701:0x16391fe4
  412976:	loope  0x412957
  412978:	mov    bx,WORD PTR [ecx+0x70]
  41297c:	call   0xe57265a0
  412981:	enter  0x4be8,0x41
  412985:	outs   dx,BYTE PTR ds:[esi]
  412986:	inc    edx
  412987:	sar    BYTE PTR [ecx+ebx*8-0x8],cl
  41298b:	sbb    eax,0xb158053
  412990:	in     al,0x1c
  412992:	les    esi,FWORD PTR [edx]
  412994:	xchg   edx,eax
  412995:	fild   DWORD PTR [ecx+0x40c6d924]
  41299b:	clc    
  41299c:	or     DWORD PTR [eax],ecx
  41299e:	loop   0x412963
  4129a0:	(bad)  
  4129a1:	in     al,dx
  4129a2:	and    DWORD PTR [eax-0x15],edx
  4129a5:	loopne 0x412996
  4129a7:	lods   al,BYTE PTR ds:[esi]
  4129a8:	sbb    BYTE PTR [edi],dl
  4129aa:	test   DWORD PTR [ecx],ecx
  4129ac:	dec    cx
  4129ae:	jle    0x4129b1
  4129b0:	lds    eax,FWORD PTR [eax+0x3f]
  4129b3:	xchg   ebx,eax
  4129b4:	jg     0x412987
  4129b6:	rcl    BYTE PTR [edx-0xba5a2c8],cl
  4129bc:	pop    es
  4129bd:	add    al,0x10
  4129bf:	pusha  
  4129c0:	xor    esp,DWORD PTR [edx]
  4129c2:	and    BYTE PTR [ecx+0x17826929],0x98
  4129c9:	and    ch,BYTE PTR [esi-0x1e]
  4129cc:	dec    esp
  4129cd:	cmp    eax,0x11b4a2b3
  4129d2:	mov    BYTE PTR [edi+0x52f6add2],al
  4129d8:	pop    ebp
  4129d9:	jne    0x41296a
  4129db:	outs   dx,DWORD PTR ds:[esi]
  4129dc:	mov    eax,gs
  4129de:	push   0x14
  4129e0:	pop    ss
  4129e1:	enter  0xac5c,0x26
  4129e5:	xor    ebx,edi
  4129e7:	sub    dl,ch
  4129e9:	test   DWORD PTR ds:0x7e9190f8,0xcd6936d1
  4129f3:	pop    esi
  4129f4:	jl     0x412a60
  4129f6:	ss sub eax,0xba06b9a0
  4129fc:	outs   dx,BYTE PTR ds:[esi]
  4129fd:	push   ebp
  4129fe:	ins    BYTE PTR es:[edi],dx
  4129ff:	cmp    eax,esi
  412a01:	ret    
  412a02:	jmp    0x4129d4
  412a04:	test   DWORD PTR [ebx+0x35],ebp
  412a07:	jg     0x412a35
  412a09:	sub    DWORD PTR [edi-0x30],0xa1cd6afa
  412a10:	dec    ebp
  412a11:	dec    edx
  412a12:	jnp    0x412a6f
  412a14:	in     eax,dx
  412a15:	pop    ecx
  412a16:	jge    0x412a60
  412a18:	test   BYTE PTR [eax-0x52],dl
  412a1b:	xor    dh,BYTE PTR [ecx+eiz*8+0x1e7cac22]
  412a22:	int    0xe7
  412a24:	pop    esp
  412a25:	fdiv   DWORD PTR [ecx-0x9]
  412a28:	adc    DWORD PTR [edi],eax
  412a2a:	xchg   BYTE PTR [eax-0x43d954ad],ah
  412a30:	cli    
  412a31:	xchg   esp,eax
  412a32:	sahf   
  412a33:	hlt    
  412a34:	mov    ecx,0x60f90e52
  412a39:	rcl    DWORD PTR [ecx],1
  412a3b:	push   cs
  412a3c:	fmul   QWORD PTR [ebp+0x78]
  412a3f:	popa   
  412a40:	jne    0x412a05
  412a42:	pop    ebp
  412a43:	test   BYTE PTR [edi+0x5b],bl
  412a46:	out    0x9b,al
  412a48:	jno    0x4129de
  412a4a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412a4b:	sbb    esp,edi
  412a4d:	ins    DWORD PTR es:[edi],dx
  412a4e:	mov    ecx,0xd97ae804
  412a53:	cld    
  412a54:	mov    ds:0x476298da,eax
  412a59:	inc    ecx
  412a5a:	retfw  0xab8a
  412a5e:	out    dx,eax
  412a5f:	push   esi
  412a60:	jmp    0xc790:0x866efd2b
  412a67:	test   eax,0x47e09443
  412a6c:	push   ds
  412a6d:	mov    dh,0x98
  412a6f:	retf   
  412a70:	or     edi,DWORD PTR [ecx+0x222b7435]
  412a76:	retf   
  412a77:	xlat   BYTE PTR ds:[ebx]
  412a78:	jmp    0xabb5:0x9462cca1
  412a7f:	mov    al,0x52
  412a81:	daa    
  412a82:	iret   
  412a83:	sub    ebp,DWORD PTR [ebx]
  412a85:	push   ds
  412a86:	das    
  412a87:	lahf   
  412a88:	inc    edx
  412a89:	jae    0x412a2b
  412a8b:	(bad)  es:[esi]
  412a8e:	fist   DWORD PTR cs:[ecx-0x13]
  412a92:	out    dx,eax
  412a93:	lods   al,BYTE PTR ds:[esi]
  412a94:	cld    
  412a95:	scas   eax,DWORD PTR es:[edi]
  412a96:	sub    esp,DWORD PTR [eax+0x2edb8254]
  412a9c:	mov    ebx,0xf0b6ebd3
  412aa1:	xor    eax,0xdd1b9b45
  412aa6:	lahf   
  412aa7:	fnsave [ebx+0x3ed7694e]
  412aad:	push   es
  412aae:	jnp    0x412ada
  412ab0:	fimul  WORD PTR [eax]
  412ab2:	push   ds
  412ab3:	mov    ah,0x3f
  412ab5:	inc    ebx
  412ab6:	adc    dl,BYTE PTR [edi-0x64]
  412ab9:	ss dec esp
  412abb:	sub    ebx,ebp
  412abd:	add    edx,DWORD PTR [ecx+0x46]
  412ac0:	pushf  
  412ac1:	mov    dh,0x15
  412ac3:	test   DWORD PTR [ebp+0x19],0x4d2bdbb8
  412aca:	ja     0x412b1f
  412acc:	out    dx,al
  412acd:	pop    ecx
  412ace:	dec    ebp
  412acf:	push   esp
  412ad0:	pop    edx
  412ad1:	mov    ?,WORD PTR [esp+esi*4]
  412ad4:	arpl   WORD PTR [esi-0x49],cx
  412ad7:	jl     0x412ad7
  412ad9:	(bad)  
  412ada:	sub    al,0xe6
  412adc:	stos   BYTE PTR es:[edi],al
  412add:	adc    esi,DWORD PTR [ebp-0x2d5eb75c]
  412ae3:	mov    BYTE PTR [edx],dh
  412ae5:	fwait
  412ae6:	mov    bh,0x58
  412ae8:	jbe    0x412b5a
  412aea:	mov    al,bh
  412aec:	lods   al,BYTE PTR ds:[esi]
  412aed:	inc    edi
  412aee:	lock repz jo 0x412ad2
  412af2:	stos   DWORD PTR es:[edi],eax
  412af3:	jnp    0x412adb
  412af5:	dec    ebp
  412af6:	xor    eax,0xd1590a3d
  412afb:	mov    ecx,0x88a7d66d
  412b00:	dec    esi
  412b01:	push   eax
  412b02:	arpl   WORD PTR [ebp+edi*1-0x6f7c0c8],bp
  412b09:	icebp  
  412b0a:	outs   dx,BYTE PTR ds:[esi]
  412b0b:	jmp    0x2ea9:0xbbf308fc
  412b12:	pop    es
  412b13:	or     al,0x95
  412b15:	sahf   
  412b16:	cmp    DWORD PTR [ecx],esp
  412b18:	lock test BYTE PTR [ebp+0x13],cl
  412b1c:	xchg   esi,eax
  412b1d:	std    
  412b1e:	cmc    
  412b1f:	push   esp
  412b20:	mov    edx,0x802538ad
  412b25:	call   0x58f5:0xb917d27e
  412b2c:	cmp    eax,0xef1c2542
  412b31:	mov    al,0x67
  412b33:	int3   
  412b34:	adc    BYTE PTR [ebx],cl
  412b36:	or     edx,DWORD PTR [eax+0x11731b5c]
  412b3c:	lods   al,BYTE PTR ds:[esi]
  412b3d:	retf   0x244a
  412b40:	xor    BYTE PTR [eax-0xf489163],0x4b
  412b47:	inc    esi
  412b48:	imul   ecx,edx,0xc5e562de
  412b4e:	mov    ds:0x98ca6c0c,eax
  412b53:	or     ah,BYTE PTR [eax-0x71]
  412b56:	fcmove st,st(5)
  412b58:	push   edx
  412b59:	xchg   edi,eax
  412b5a:	test   eax,0x396396e6
  412b5f:	and    ch,BYTE PTR [edi]
  412b61:	shl    BYTE PTR [ecx+0x2ac7f542],cl
  412b67:	add    edx,DWORD PTR [ebx+ecx*2-0x30770ee0]
  412b6e:	sub    ch,BYTE PTR [esi+ebp*1+0x5d]
  412b72:	jmp    0xf8bc737f
  412b77:	jmp    0x4b85:0x24699c65
  412b7e:	fstp   QWORD PTR [eax]
  412b80:	pop    ebx
  412b81:	jno    0x412b03
  412b83:	and    eax,0x6f4029d5
  412b88:	test   DWORD PTR [ebx],ebx
  412b8a:	fist   DWORD PTR [eax-0x38]
  412b8d:	js     0x412bc4
  412b8f:	data16 shl BYTE PTR [ecx-0x5f3e6841],1
  412b96:	retf   
  412b97:	out    0x6a,al
  412b99:	pop    eax
  412b9a:	into   
  412b9b:	xor    eax,0x87dd1d0b
  412ba0:	dec    edi
  412ba1:	jmp    0x412b50
  412ba3:	mov    ecx,0x90bdc49e
  412ba8:	xor    cl,BYTE PTR [eax]
  412baa:	(bad)  
  412bac:	push   edi
  412bad:	shl    BYTE PTR [ecx],cl
  412baf:	push   0x22ee7107
  412bb4:	loopne 0x412b69
  412bb6:	cli    
  412bb7:	popf   
  412bb8:	and    cl,al
  412bba:	pop    edi
  412bbb:	cs sub eax,0x18b46fed
  412bc1:	mov    BYTE PTR [esi],cl
  412bc3:	jmp    0xf3895918
  412bc8:	mov    ch,0x0
  412bca:	mov    edx,0x599b1d84
  412bcf:	xor    al,0xf9
  412bd1:	hlt    
  412bd2:	push   es
  412bd3:	cmp    eax,0xa0b0add8
  412bd8:	pop    edx
  412bd9:	push   esi
  412bda:	xor    eax,0x89fbd000
  412bdf:	in     eax,0x40
  412be1:	mov    al,ds:0xb17fa4b0
  412be6:	add    bl,BYTE PTR [esi-0x7d0d3519]
  412bec:	sti    
  412bed:	jmp    0x5f14:0x85e4b007
  412bf4:	mov    eax,0x13519285
  412bf9:	jmp    0x412c01
  412bfb:	test   DWORD PTR [edx],edx
  412bfd:	push   eax
  412bfe:	pop    esi
  412bff:	lea    eax,[ebp+0x14]
  412c02:	fidivr DWORD PTR [ebx+0x25]
  412c05:	les    esi,FWORD PTR [edi+esi*8]
  412c08:	test   edx,eax
  412c0a:	push   es
  412c0b:	jg     0x412be4
  412c0d:	or     eax,ecx
  412c0f:	push   0x1f4ca8f
  412c14:	scas   eax,DWORD PTR es:[edi]
  412c15:	sti    
  412c16:	jmp    0xc36ce57d
  412c1b:	push   ebp
  412c1c:	popf   
  412c1d:	test   BYTE PTR [eax],bl
  412c1f:	ds cwde 
  412c21:	fidivr DWORD PTR [ecx-0x2c]
  412c24:	push   0xfffffff6
  412c26:	adc    cl,bh
  412c28:	aas    
  412c29:	jecxz  0x412bc7
  412c2b:	or     ebp,DWORD PTR [ebp+0x9]
  412c2e:	js     0x412bec
  412c30:	pop    ebx
  412c31:	inc    DWORD PTR [edi+0x7fd10178]
  412c37:	push   ss
  412c38:	pop    eax
  412c39:	sbb    esp,DWORD PTR [edx]
  412c3b:	inc    edx
  412c3c:	outs   dx,DWORD PTR ds:[esi]
  412c3d:	inc    ebp
  412c3e:	and    BYTE PTR [eax+esi*1],ah
  412c41:	idiv   BYTE PTR [eax]
  412c43:	xchg   edx,esi
  412c45:	popa   
  412c46:	clts   
  412c48:	popf   
  412c49:	jbe    0x412c7a
  412c4b:	pop    ss
  412c4c:	ins    DWORD PTR es:[edi],dx
  412c4d:	push   ds
  412c4e:	(bad)  
  412c4f:	jecxz  0x412c24
  412c51:	xchg   ebp,eax
  412c52:	sub    edx,DWORD PTR [ebp-0x4d]
  412c55:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412c56:	int    0xeb
  412c58:	fld    DWORD PTR [esi-0xc46025d]
  412c5e:	and    eax,0xe8718f41
  412c63:	out    dx,eax
  412c64:	sbb    cl,BYTE PTR [ecx-0x42]
  412c67:	cmp    al,bh
  412c69:	jecxz  0x412ce3
  412c6b:	push   eax
  412c6c:	or     BYTE PTR [edx],dl
  412c6e:	call   0x79fa:0x6debd509
  412c75:	(bad)  
  412c76:	and    BYTE PTR [esi-0x11],ch
  412c79:	dec    edi
  412c7a:	es mov edx,0xf9ebf17e
  412c80:	pusha  
  412c81:	or     al,0xc4
  412c83:	iret   
  412c84:	aas    
  412c85:	retf   
  412c86:	inc    edx
  412c87:	mov    eax,ds:0xbeaa09ab
  412c8c:	inc    esi
  412c8d:	pop    ds
  412c8e:	cmp    BYTE PTR [esi-0x1a],0xf1
  412c92:	gs push ecx
  412c94:	lock movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412c96:	xchg   edx,eax
  412c97:	adc    BYTE PTR [ecx-0x1e],bl
  412c9a:	sub    esi,DWORD PTR [edi]
  412c9c:	xchg   edi,eax
  412c9d:	imul   ecx,DWORD PTR [esi],0xffffffe0
  412ca0:	jae    0x412c64
  412ca2:	out    0x1e,eax
  412ca4:	pop    edi
  412ca5:	sbb    ch,BYTE PTR [eax+0x4a7a6075]
  412cab:	dec    edi
  412cac:	fisub  DWORD PTR [eax+0x69]
  412caf:	dec    esi
  412cb0:	dec    edx
  412cb1:	inc    esi
  412cb2:	sbb    BYTE PTR fs:[ebp-0xeb38ef9],dl
  412cb9:	jns    0x412c88
  412cbb:	popa   
  412cbc:	mov    ds:0xd792206e,al
  412cc1:	mov    esi,0xb978c9d1
  412cc6:	jecxz  0x412d30
  412cc8:	shr    dl,cl
  412cca:	inc    eax
  412ccb:	and    al,0x6e
  412ccd:	adc    eax,0x184125b0
  412cd2:	pushf  
  412cd3:	dec    ebp
  412cd4:	cmc    
  412cd5:	xchg   edi,eax
  412cd6:	xor    edi,DWORD PTR [edi-0x4687e2db]
  412cdc:	in     al,0x82
  412cde:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412cdf:	loope  0x412c95
  412ce1:	mul    ah
  412ce3:	cmp    edx,DWORD PTR [edx+0x70]
  412ce6:	loop   0x412d10
  412ce8:	(bad)  
  412ce9:	das    
  412cea:	xor    DWORD PTR [ebx],edi
  412cec:	sub    DWORD PTR [bp+di-0x1b],0xffffffe0
  412cf1:	xor    dl,BYTE PTR [edi-0x1c71a4ed]
  412cf7:	dec    esi
  412cf8:	adc    BYTE PTR [ebx+eiz*2+0x3c],bl
  412cfc:	xor    al,0xaa
  412cfe:	nop
  412cff:	ret    0x1fd4
  412d02:	retf   0x72fd
  412d05:	adc    BYTE PTR [eax],bl
  412d07:	outs   dx,BYTE PTR ds:[esi]
  412d08:	scas   al,BYTE PTR es:[edi]
  412d09:	lock ss fcomi st,st(7)
  412d0d:	clc    
  412d0e:	rcl    BYTE PTR [ebp-0x56],0x11
  412d12:	ds ss ret 0xa960
  412d17:	lods   eax,DWORD PTR ds:[esi]
  412d18:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412d19:	sbb    BYTE PTR [ecx-0x28],ch
  412d1c:	ins    BYTE PTR es:[edi],dx
  412d1d:	xor    bl,bl
  412d1f:	xor    dl,BYTE PTR [edi]
  412d21:	lods   al,BYTE PTR ds:[esi]
  412d22:	inc    edi
  412d23:	adc    al,BYTE PTR [edi]
  412d25:	jmp    DWORD PTR [esi-0x4bf68d6f]
  412d2b:	jnp    0x412cc9
  412d2d:	inc    ebx
  412d2e:	fsubr  DWORD PTR [ebx+eiz*1-0x78]
  412d32:	sub    eax,0xb451f0c7
  412d37:	fild   QWORD PTR [eax-0x46dbba6c]
  412d3d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412d3e:	adc    DWORD PTR [ecx-0x42bfb801],eax
  412d44:	(bad)  
  412d45:	scas   al,BYTE PTR es:[edi]
  412d46:	push   edx
  412d47:	mov    ch,0x9d
  412d49:	jnp    0x412d8c
  412d4b:	div    DWORD PTR [edi+0x2fdb3dcd]
  412d51:	jmp    0xb2ac999a
  412d56:	inc    edi
  412d57:	cmp    eax,0x73e0031d
  412d5c:	mov    eax,ds:0x95287599
  412d61:	in     al,dx
  412d62:	ins    BYTE PTR es:[edi],dx
  412d63:	cli    
  412d64:	inc    esi
  412d65:	push   esp
  412d66:	stos   BYTE PTR es:[edi],al
  412d67:	fcmovne st,st(4)
  412d69:	stos   BYTE PTR es:[edi],al
  412d6a:	scas   eax,DWORD PTR es:[edi]
  412d6b:	jp     0x412db3
  412d6d:	test   eax,0xd45855f5
  412d72:	into   
  412d73:	xchg   ecx,eax
  412d74:	sub    eax,0x83eb402b
  412d79:	jge    0x412d3b
  412d7b:	xchg   DWORD PTR [edx-0x4c],esp
  412d7e:	imul   edx,ebx,0x1cf169da
  412d84:	shl    DWORD PTR [ebp-0x30832f1],cl
  412d8a:	outs   dx,BYTE PTR ds:[esi]
  412d8b:	jae    0x412de7
  412d8d:	sub    DWORD PTR [eax+0x156a269d],0xa
  412d94:	fwait
  412d95:	mov    ebp,0x81f1402
  412d9a:	push   esi
  412d9b:	sbb    BYTE PTR fs:[esi+ebp*4-0x1ac40cb2],al
  412da3:	pop    ebp
  412da4:	inc    ecx
  412da5:	movaps XMMWORD PTR [ebx-0x5660523a],xmm4
  412dac:	mov    ebp,0x8cf62d5a
  412db1:	mov    eax,ds:0xcf0a4cb1
  412db6:	cld    
  412db7:	jp     0x412d57
  412db9:	sub    eax,0x5d5910f2
  412dbe:	aaa    
  412dbf:	test   DWORD PTR [ebx+0x4ba0b106],eax
  412dc5:	scas   al,BYTE PTR es:[edi]
  412dc6:	mov    edi,0x63f0eb5a
  412dcb:	out    dx,eax
  412dcc:	dec    edx
  412dcd:	out    0xf8,al
  412dcf:	mov    ds:0x9bb52d52,eax
  412dd4:	xchg   esi,eax
  412dd5:	aad    0x33
  412dd7:	dec    ebx
  412dd8:	fild   DWORD PTR [ecx]
  412dda:	and    BYTE PTR [edi-0x4e],dh
  412ddd:	(bad)  
  412dde:	sahf   
  412ddf:	or     eax,0x79e2c713
  412de4:	lea    ecx,[ebp-0x18]
  412de7:	pop    ebp
  412de8:	add    eax,DWORD PTR [edx+eiz*8-0x6202caa1]
  412def:	xlat   BYTE PTR ds:[ebx]
  412df0:	pop    ss
  412df1:	mov    eax,ds:0xb51f294e
  412df6:	or     BYTE PTR [edx+esi*1],bl
  412df9:	mov    fs,WORD PTR [edx-0x26f1fea1]
  412dff:	jle    0x412d8c
  412e01:	out    dx,al
  412e02:	sti    
  412e03:	sub    ch,BYTE PTR [ebx-0x3f]
  412e06:	icebp  
  412e07:	mov    ?,esp
  412e09:	(bad)  
  412e0a:	jge    0x412e37
  412e0c:	jb     0x412e67
  412e0e:	out    dx,eax
  412e0f:	out    0x15,eax
  412e11:	inc    esp
  412e12:	outs   dx,BYTE PTR ds:[esi]
  412e13:	inc    ebx
  412e14:	add    ah,bh
  412e16:	sbb    eax,0xb4aec13a
  412e1b:	je     0x412e5c
  412e1d:	(bad)  
  412e1e:	or     ebp,DWORD PTR [ebx+0x34f04041]
  412e24:	fiadd  WORD PTR [eax-0x19]
  412e27:	cmp    BYTE PTR [edi+0x71],0x7f
  412e2b:	test   BYTE PTR [edx+0x5c7e84c3],al
  412e31:	repnz les edx,FWORD PTR [ecx-0x3a]
  412e35:	sub    DWORD PTR [edi-0x21],esp
  412e38:	xchg   DWORD PTR [ebx],esp
  412e3a:	adc    esi,DWORD PTR [ebp+0x180cb2a1]
  412e40:	mov    esi,0x7a86ec40
  412e45:	loopne 0x412e35
  412e47:	adc    DWORD PTR [edi-0x8],ebx
  412e4a:	mov    ebx,0x583ab9ad
  412e4f:	inc    eax
  412e50:	inc    ebx
  412e51:	nop
  412e52:	mov    al,ds:0x5bd53cbb
  412e57:	pop    ecx
  412e58:	rol    DWORD PTR [ebx-0x3b7a1b7a],1
  412e5e:	or     ah,BYTE PTR [ebx]
  412e60:	je     0x412e19
  412e62:	xchg   BYTE PTR [ebx+0x40],al
  412e65:	sbb    esp,DWORD PTR [edi-0x50184353]
  412e6b:	adc    al,0x7a
  412e6d:	or     DWORD PTR [eax],ebx
  412e6f:	lods   al,BYTE PTR ds:[esi]
  412e70:	int3   
  412e71:	clc    
  412e72:	mov    ah,0x69
  412e74:	inc    eax
  412e75:	jae    0x412e5b
  412e77:	out    dx,eax
  412e78:	cmp    eax,ebx
  412e7a:	je     0x412ea0
  412e7c:	mov    edx,0x51a0ef05
  412e81:	scas   eax,DWORD PTR es:[edi]
  412e82:	push   0x4e
  412e84:	adc    DWORD PTR [edx-0xec450d2],edx
  412e8a:	outs   dx,DWORD PTR ds:[esi]
  412e8b:	push   ebp
  412e8c:	push   esp
  412e8d:	pop    es
  412e8e:	(bad)  
  412e90:	sbb    al,0xdc
  412e92:	adc    DWORD PTR [esi+eax*1-0x73],esp
  412e96:	push   eax
  412e97:	xor    ebp,DWORD PTR [ecx]
  412e99:	arpl   WORD PTR [edx+0x7bd233d8],sp
  412e9f:	(bad)  
  412ea0:	je     0x412e7f
  412ea2:	mov    al,ds:0x2e929432
  412ea7:	data16 mov al,0xd8
  412eaa:	shr    BYTE PTR [eax+edx*1-0x53],0xdc
  412eaf:	pop    ecx
  412eb0:	push   ss
  412eb1:	outs   dx,BYTE PTR ds:[esi]
  412eb2:	stos   DWORD PTR es:[edi],eax
  412eb3:	ret    0x5878
  412eb6:	or     DWORD PTR [esi],ebx
  412eb8:	std    
  412eb9:	mov    eax,ds:0x32df9f20
  412ebe:	and    BYTE PTR gs:[esi],dl
  412ec1:	addr16 mov esi,0x93598346
  412ec7:	mov    ebp,0x798aa35e
  412ecc:	ds xchg esp,eax
  412ece:	aad    0x74
  412ed0:	(bad)  
  412ed1:	int    0x84
  412ed3:	xchg   ebp,eax
  412ed4:	push   0x5f7a29ec
  412ed9:	popf   
  412eda:	into   
  412edb:	outs   dx,BYTE PTR ds:[esi]
  412edc:	jae    0x412ec3
  412ede:	add    eax,0xc40722d4
  412ee3:	push   ebx
  412ee4:	dec    eax
  412ee5:	adc    eax,0x9b9edc3
  412eea:	mov    ds:0x7b1a53b3,al
  412eef:	adc    dh,BYTE PTR [ecx+0xec650f]
  412ef5:	jno    0x412f6c
  412ef7:	jp     0x412e90
  412ef9:	push   ds
  412efa:	lods   al,BYTE PTR ds:[esi]
  412efb:	lahf   
  412efc:	push   eax
  412efd:	lock cmp ebx,ebx
  412f00:	inc    eax
  412f01:	and    esi,edi
  412f03:	mov    edi,0x13ccab9e
  412f08:	cmp    ebp,ecx
  412f0a:	sub    ecx,DWORD PTR fs:[ecx]
  412f0d:	push   edi
  412f0e:	enter  0x614f,0xf
  412f12:	sbb    DWORD PTR [esi-0x3a],ecx
  412f15:	test   BYTE PTR [ecx-0x3d],cl
  412f18:	gs imul ebx,esp,0xe9bdf9ec
  412f1f:	mov    BYTE PTR [ecx-0x26e2c1a8],dl
  412f25:	xchg   eax,esi
  412f27:	inc    esp
  412f28:	pop    es
  412f29:	xchg   BYTE PTR [edx-0x2f9cfff],cl
  412f2f:	mov    ebx,0x3543f8d3
  412f34:	jo     0x412f53
  412f36:	enter  0x4da9,0x53
  412f3a:	or     cl,al
  412f3c:	push   0xfffffffc
  412f3e:	pusha  
  412f3f:	retf   
  412f40:	in     eax,0xc8
  412f42:	xchg   esp,eax
  412f43:	pop    eax
  412f44:	inc    eax
  412f45:	push   edi
  412f46:	es in  eax,0x3d
  412f49:	std    
  412f4a:	mov    ebp,0xaa17389e
  412f4f:	xlat   BYTE PTR ds:[ebx]
  412f50:	add    al,BYTE PTR [edx-0x22]
  412f53:	xchg   edx,eax
  412f54:	(bad)  
  412f55:	in     al,0x79
  412f57:	inc    edx
  412f58:	mov    esp,0x8951c31e
  412f5d:	int    0xd2
  412f5f:	sub    al,0x40
  412f61:	neg    DWORD PTR [esi]
  412f63:	inc    esp
  412f64:	xchg   edx,eax
  412f65:	inc    ebp
  412f66:	jno    0x412f6a
  412f68:	std    
  412f69:	clc    
  412f6a:	int3   
  412f6b:	adc    BYTE PTR [eax],dl
  412f6d:	in     eax,0x15
  412f6f:	dec    edi
  412f70:	repz scas eax,DWORD PTR es:[edi]
  412f72:	fidiv  WORD PTR [ebp+0x62139fd4]
  412f78:	mov    ebp,0xbd5e7956
  412f7d:	mov    gs,WORD PTR [ebx-0x7e2f2326]
  412f83:	(bad)  
  412f84:	scas   al,BYTE PTR es:[edi]
  412f85:	cmc    
  412f86:	mov    ds:0xfd5a55a4,al
  412f8b:	dec    ebp
  412f8c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412f8d:	icebp  
  412f8e:	popf   
  412f8f:	mov    ?,WORD PTR [esi-0x47]
  412f92:	pop    esi
  412f93:	inc    eax
  412f94:	or     al,0x37
  412f96:	or     DWORD PTR [eax-0x3d44ed5c],ebx
  412f9c:	adc    eax,0xfc3705f9
  412fa1:	mov    ah,0xcb
  412fa3:	aas    
  412fa4:	shl    DWORD PTR [edx],1
  412fa6:	sbb    eax,edx
  412fa8:	mov    edx,0x60b9f2f6
  412fad:	imul   edx,DWORD PTR [ecx],0x434fb23d
  412fb3:	scas   al,BYTE PTR es:[edi]
  412fb4:	(bad)  
  412fb5:	jmp    0xb2e742d
  412fba:	and    DWORD PTR [ebx+edx*4-0x5511b353],esp
  412fc1:	push   0x2c83306a
  412fc6:	cdq    
  412fc7:	dec    esi
  412fc8:	lods   al,BYTE PTR ds:[esi]
  412fc9:	xor    DWORD PTR [eax],0xe1a91d83
  412fcf:	scas   al,BYTE PTR es:[edi]
  412fd0:	inc    ebp
  412fd1:	call   DWORD PTR ds:0x5070d70e
  412fd7:	call   ebx
  412fd9:	ins    BYTE PTR es:[edi],dx
  412fda:	pop    ss
  412fdb:	iret   
  412fdc:	sub    BYTE PTR [ebx+0x59ad7da0],bl
  412fe2:	ret    0xb0d7
  412fe5:	mov    al,0xdc
  412fe7:	or     ecx,DWORD PTR [edx-0x22]
  412fea:	jecxz  0x412fcb
  412fec:	or     esp,edx
  412fee:	pop    ecx
  412fef:	xchg   edi,eax
  412ff0:	or     ch,BYTE PTR ds:0xd2b19c86
  412ff6:	jmp    0xf67a9a9c
  412ffb:	mov    WORD PTR [edx-0x7e791ea9],fs
  413001:	repz enter 0xc2e7,0xd3
  413006:	and    BYTE PTR [ebx],ah
  413008:	add    BYTE PTR [edi-0x56],al
  41300b:	(bad)  
  41300c:	pop    DWORD PTR [edx-0x48]
  41300f:	mov    esi,esi
  413011:	dec    edx
  413012:	lock or BYTE PTR [ebp-0x42],cl
  413016:	(bad)  
  413017:	cmp    DWORD PTR [esi-0x2e],esi
  41301a:	mov    ebx,0xcc0dd1ab
  41301f:	xchg   esp,eax
  413020:	sbb    eax,0x3d1d9eca
  413025:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413026:	jo     0x412fbb
  413028:	test   eax,0x3fb6712a
  41302d:	inc    bx
  41302f:	shl    esp,0x5e
  413032:	sbb    eax,0x7e1d6e5e
  413037:	pop    esi
  413038:	adc    BYTE PTR [esi],al
  41303a:	(bad)
  41303e:	(bad)  
  41303f:	jmp    0x8865:0xab14ca36
  413046:	mov    ah,0x4c
  413048:	xchg   ebp,eax
  413049:	and    DWORD PTR [eax+eiz*2],esi
  41304c:	mov    esi,0xcd5f3932
  413051:	sbb    eax,0xb385e1a5
  413056:	lock in eax,dx
  413058:	test   eax,0x7b873158
  41305d:	mov    ebx,0xf7888ed4
  413062:	mov    ebp,0x26fae8d
  413067:	jmp    0xdd77:0x3c4f0070
  41306e:	pop    ebp
  41306f:	jmp    0x413064
  413071:	xchg   ecx,eax
  413072:	and    bh,BYTE PTR [eax]
  413074:	data16 fld TBYTE PTR [ebp-0x2dabfa16]
  41307b:	jmp    0x285aedd4
  413080:	in     al,0x40
  413082:	dec    edx
  413083:	dec    edi
  413084:	je     0x4130ec
  413086:	repz push esp
  413088:	out    0xc3,al
  41308a:	scas   al,BYTE PTR es:[edi]
  41308b:	outs   dx,BYTE PTR ds:[esi]
  41308c:	add    al,0x20
  41308e:	sahf   
  41308f:	shl    BYTE PTR ds:[eax-0x4c],0x60
  413094:	pop    ebp
  413095:	in     al,dx
  413096:	in     al,dx
  413097:	hlt    
  413098:	iret   
  413099:	mov    dl,0x78
  41309b:	(bad)  
  41309c:	mov    bh,0xc8
  41309e:	mov    bl,0xed
  4130a0:	(bad)  
  4130a1:	and    ebx,DWORD PTR [edx+ebp*4+0x4500e446]
  4130a8:	mov    BYTE PTR [esi-0x3f],bl
  4130ab:	ins    DWORD PTR es:[edi],dx
  4130ac:	sar    esp,1
  4130ae:	cdq    
  4130af:	cmp    edx,DWORD PTR [ecx+ecx*8]
  4130b2:	nop
  4130b3:	jb     0x41312a
  4130b5:	jmp    0x3d9:0x19d276dd
  4130bc:	add    al,0xd8
  4130be:	mov    ebx,0x80ea96fc
  4130c3:	push   es
  4130c4:	mov    BYTE PTR [ebp-0x51f1f1f],dl
  4130ca:	inc    DWORD PTR [ecx-0x2634196d]
  4130d0:	adc    eax,0x5c662689
  4130d5:	fsub   QWORD PTR [ebx]
  4130d8:	inc    edi
  4130d9:	pop    ebp
  4130da:	outs   dx,DWORD PTR ds:[esi]
  4130db:	shl    BYTE PTR [esp-0x63],cl
  4130df:	and    BYTE PTR [ebx+0x5],cl
  4130e2:	mov    fs,WORD PTR [edi-0x7b27e351]
  4130e8:	popf   
  4130e9:	test   DWORD PTR [eax],ebx
  4130eb:	pop    es
  4130ec:	mov    cl,cl
  4130ee:	loope  0x4130f2
  4130f0:	jle    0x413081
  4130f2:	mov    bh,0x69
  4130f4:	out    dx,al
  4130f5:	jnp    0x413133
  4130f7:	std    
  4130f8:	scas   eax,DWORD PTR es:[edi]
  4130f9:	clc    
  4130fa:	and    DWORD PTR [ebp+0x2a],ecx
  4130fd:	jae    0x41307f
  4130ff:	inc    eax
  413100:	addr16 aad 0x4f
  413103:	int3   
  413104:	mov    al,BYTE PTR [ebx+0x5988ad99]
  41310a:	popf   
  41310b:	jl     0x4130be
  41310d:	(bad)  
  41310e:	repz call FWORD PTR [ebx+ebp*8+0x33]
  413113:	(bad)  
  413114:	int    0xbb
  413116:	jmp    0xe350:0xc31f79f6
  41311d:	fwait
  41311e:	div    DWORD PTR [edx]
  413120:	mov    BYTE PTR [ebp-0x1677774f],ch
  413126:	addr16 loopne 0x4130b8
  413129:	out    dx,eax
  41312a:	mov    dl,0x91
  41312c:	lods   eax,DWORD PTR ds:[esi]
  41312d:	mov    cl,0x6d
  41312f:	or     edi,DWORD PTR [esi+0x28]
  413132:	adc    dh,bh
  413134:	push   ecx
  413135:	aaa    
  413136:	loop   0x41313a
  413138:	sbb    DWORD PTR [edi],esp
  41313a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41313b:	fstp   TBYTE PTR [esp+esi*8+0x78e0661b]
  413142:	cmp    ebp,0xd4f9bdd5
  413148:	test   al,0x51
  41314a:	xor    eax,0xcb52a206
  41314f:	mov    ss,edi
  413151:	add    cl,al
  413153:	dec    esi
  413154:	mov    eax,0x90333f62
  413159:	mov    al,ds:0x35c4d48
  41315e:	xchg   ebx,eax
  41315f:	and    DWORD PTR [edi+0x48],0x50
  413163:	pop    ss
  413164:	and    dh,ah
  413166:	jl     0x4131b6
  413168:	cmp    edx,DWORD PTR [ecx+0x44]
  41316b:	nop
  41316c:	retf   0x1c3e
  41316f:	arpl   WORD PTR [edi+ecx*4+0x4b],sp
  413173:	and    al,0x74
  413175:	mov    ecx,0x3e8fca91
  41317a:	mov    dh,0xb2
  41317c:	fiadd  DWORD PTR [eax]
  41317e:	js     0x413121
  413180:	pop    eax
  413181:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413182:	xchg   ebp,eax
  413183:	adc    ebx,edi
  413185:	(bad)  
  413186:	test   eax,0xac52304e
  41318b:	ins    BYTE PTR es:[di],dx
  41318d:	push   eax
  41318e:	push   0x5c1df9c5
  413193:	jne    0x413119
  413195:	mov    dh,0x82
  413197:	pop    ss
  413198:	loope  0x413142
  41319a:	bound  edx,QWORD PTR [ecx-0x4c1ac7f0]
  4131a0:	add    edi,0xb43c2f57
  4131a6:	sbb    al,0xb4
  4131a8:	aad    0x41
  4131aa:	out    dx,eax
  4131ab:	add    ebp,esp
  4131ad:	mov    ds:0xa88383fa,al
  4131b2:	out    0xaf,eax
  4131b4:	xor    esi,esp
  4131b6:	inc    ebp
  4131b7:	sbb    eax,0x30ce65a0
  4131bc:	fld    TBYTE PTR [ebp-0x38ab8661]
  4131c2:	ds jge 0x413208
  4131c5:	xchg   ebp,esp
  4131c7:	popf   
  4131c8:	aas    
  4131c9:	mov    dh,0xf5
  4131cb:	mov    ecx,0xaf387fd9
  4131d0:	shr    eax,1
  4131d2:	cld    
  4131d3:	dec    edi
  4131d4:	outs   dx,BYTE PTR ds:[esi]
  4131d5:	repnz mov dh,0x40
  4131d8:	or     DWORD PTR [esi+0x23c69b68],0x48
  4131df:	mov    cl,0x2d
  4131e1:	lahf   
  4131e2:	call   0xdee0:0xe5c428eb
  4131e9:	shr    BYTE PTR [ecx],0x86
  4131ec:	or     bl,bl
  4131ee:	add    eax,0xff6ce3a0
  4131f3:	push   es
  4131f4:	call   0x34fdbc75
  4131f9:	add    dl,BYTE PTR [ecx+eiz*8-0x59]
  4131fd:	xlat   BYTE PTR ds:[ebx]
  4131fe:	pusha  
  4131ff:	idiv   BYTE PTR [esi]
  413201:	jb     0x4131f0
  413203:	pop    edi
  413204:	sub    al,0xe5
  413206:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413207:	inc    ecx
  413208:	stos   DWORD PTR es:[edi],eax
  413209:	aaa    
  41320a:	or     eax,0xef2cc6c9
  41320f:	outs   dx,BYTE PTR ds:[esi]
  413210:	push   cs
  413211:	retf   
  413212:	push   esi
  413213:	arpl   WORD PTR [edx-0x3eb0b09],ax
  413219:	cld    
  41321a:	xlat   BYTE PTR ds:[ebx]
  41321b:	sbb    BYTE PTR [ebx],0x82
  41321e:	jle    0x4131ed
  413220:	mov    edi,0x18e02a3
  413225:	sbb    bl,ch
  413227:	sub    eax,0xd1e73a86
  41322c:	daa    
  41322d:	mov    esi,esp
  41322f:	sub    dh,BYTE PTR [esi+0x6d]
  413232:	dec    ecx
  413233:	stos   DWORD PTR es:[edi],eax
  413234:	inc    ebp
  413235:	(bad)  
  413236:	test   dh,0x68
  413239:	inc    eax
  41323a:	sub    al,0x36
  41323c:	hlt    
  41323d:	push   ebx
  41323e:	add    ebp,DWORD PTR [edi]
  413240:	je     0x4131c3
  413242:	jmp    0xf379:0x87f45ec6
  413249:	inc    edi
  41324a:	mov    ds:0x2e362567,eax
  41324f:	dec    edi
  413250:	jmp    0x413209
  413252:	out    0x5d,eax
  413254:	ds jg  0x413234
  413257:	jg     0x4132b8
  413259:	sahf   
  41325a:	pop    esp
  41325b:	inc    edx
  41325c:	icebp  
  41325d:	cmp    ebx,DWORD PTR [ebp+ebx*8+0x72]
  413261:	dec    esp
  413262:	cmp    edx,DWORD PTR [esi+0x2b]
  413265:	adc    ch,BYTE PTR ss:[edi]
  413268:	fwait
  413269:	jae    0x4131fc
  41326b:	push   ebx
  41326c:	inc    edx
  41326d:	pop    ebx
  41326e:	hlt    
  41326f:	xor    dh,ah
  413271:	data16 int3 
  413273:	idiv   al
  413275:	add    BYTE PTR [esi+0xbb188c3],bh
  41327b:	xchg   ebx,eax
  41327c:	inc    ecx
  41327d:	dec    ebp
  41327e:	das    
  41327f:	ror    BYTE PTR [edi+0x56],1
  413282:	dec    ebp
  413283:	jmp    0x5e85:0xf89e845a
  41328a:	dec    eax
  41328b:	stc    
  41328c:	mov    esi,DWORD PTR [ebp*4+0x2c7bcd5c]
  413293:	pop    ecx
  413294:	retf   
  413295:	or     al,0x71
  413297:	cli    
  413298:	xor    eax,0x48713faa
  41329d:	out    0x52,eax
  41329f:	leave  
  4132a0:	test   BYTE PTR [ebp-0x57],al
  4132a3:	out    dx,al
  4132a4:	lds    edi,FWORD PTR cs:[ebx+ecx*8+0x18]
  4132a9:	std    
  4132aa:	das    
  4132ab:	ffree  st(7)
  4132ad:	mov    edi,0x250ce118
  4132b2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4132b3:	stos   BYTE PTR es:[edi],al
  4132b4:	lea    ebp,[ebp+0x1f]
  4132b7:	imul   edi,ebp,0x729d78d9
  4132bd:	mov    dl,0x53
  4132bf:	xchg   BYTE PTR [ebx+0x50],bl
  4132c2:	das    
  4132c3:	out    dx,al
  4132c4:	dec    ecx
  4132c5:	scas   al,BYTE PTR es:[edi]
  4132c6:	sbb    eax,0xfcca2e02
  4132cb:	mov    dl,0x75
  4132cd:	add    DWORD PTR [ecx-0x17beb537],0x9809948a
  4132d7:	xchg   ecx,eax
  4132d8:	pop    ebx
  4132d9:	pop    ds
  4132da:	jge    0x4132c5
  4132dc:	les    esi,FWORD PTR [ebx+0x1ebeba9a]
  4132e2:	dec    edx
  4132e3:	adc    cl,dh
  4132e5:	push   ss
  4132e6:	es cmp al,dh
  4132e9:	jno    0x413348
  4132eb:	pop    eax
  4132ec:	and    al,0x61
  4132ee:	ins    BYTE PTR es:[edi],dx
  4132ef:	dec    edx
  4132f0:	add    dl,BYTE PTR [ebx-0x427f431f]
  4132f6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4132f7:	jg     0x413376
  4132f9:	jle    0x413318
  4132fb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4132fc:	jle    0x4132a8
  4132fe:	(bad)  
  4132ff:	imul   eax,ecx,0xffffffd7
  413302:	nop
  413303:	aas    
  413304:	jae    0x413376
  413306:	jnp    0x413381
  413308:	stos   DWORD PTR es:[edi],eax
  413309:	jne    0x4132f4
  41330b:	pop    es
  41330c:	push   ebp
  41330d:	nop
  41330e:	cwde   
  41330f:	rcr    BYTE PTR [ebx+0x49fa0f0f],1
  413315:	adc    BYTE PTR [ecx+0x0],0x30
  413319:	movsx  esp,WORD PTR [esi-0x4a53b5f6]
  413320:	sub    eax,0x32908a23
  413325:	ret    0xdfe9
  413328:	push   ds
  413329:	jae    0x413337
  41332b:	enter  0x221c,0x1e
  41332f:	xor    DWORD PTR [eax-0x7aa1fa51],eax
  413335:	lock int3 
  413337:	inc    esi
  413338:	popa   
  413339:	mov    cl,0xa5
  41333b:	imul   eax,DWORD PTR [esi+0x48],0xffffffaf
  41333f:	hlt    
  413340:	mov    edi,0x935e9548
  413345:	ss or  eax,0x4c540f18
  41334b:	mov    eax,ds:0x610a8007
  413350:	inc    edi
  413351:	sbb    eax,0xe8e731c
  413356:	inc    edi
  413357:	push   eax
  413358:	stc    
  413359:	pushf  
  41335a:	or     al,0x16
  41335c:	int    0x75
  41335e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41335f:	(bad)  
  413360:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413361:	mov    eax,0x41d43b2
  413366:	lock sbb eax,0x9cafa27d
  41336c:	test   BYTE PTR [esi-0x1a29a5ae],ah
  413372:	push   esi
  413373:	dec    edi
  413374:	repz not BYTE PTR [ebx+0x23ef450c]
  41337b:	or     dl,dl
  41337d:	sub    BYTE PTR [edx+0x3c],dh
  413380:	in     al,0x8
  413382:	shr    BYTE PTR [ebp+esi*4+0x30],cl
  413386:	iret   
  413387:	and    al,0xc1
  413389:	stc    
  41338a:	add    al,0xcc
  41338c:	fld    TBYTE PTR [edi-0x13]
  41338f:	or     edx,DWORD PTR [eax+0x6d]
  413392:	jp     0x4133fb
  413394:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413395:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413396:	(bad)  
  413398:	mov    ah,0xc1
  41339a:	mov    ebx,ebx
  41339c:	or     bl,BYTE PTR [edx]
  41339e:	adc    eax,0x137977f3
  4133a3:	iret   
  4133a4:	shl    BYTE PTR [esi+0x70c12297],cl
  4133aa:	and    al,0x54
  4133ac:	ret    0xf0b8
  4133af:	jno    0x41337a
  4133b1:	push   ecx
  4133b2:	jmp    0x41338d
  4133b4:	into   
  4133b5:	pushf  
  4133b6:	fwait
  4133b7:	out    dx,al
  4133b8:	ret    0x734d
  4133bb:	leave  
  4133bc:	mov    cl,dh
  4133be:	jne    0x41334c
  4133c0:	fldcw  WORD PTR [edi+0x1d614773]
  4133c6:	lods   eax,DWORD PTR ds:[esi]
  4133c7:	push   ebp
  4133c8:	xchg   BYTE PTR [ebx+0x30],bl
  4133cb:	push   0xffffffa1
  4133cd:	clc    
  4133ce:	fs out dx,eax
  4133d0:	mov    al,ds:0x3f720d74
  4133d5:	or     ah,bl
  4133d7:	call   0xd4f2:0x4d1f65b7
  4133de:	and    al,0x5f
  4133e0:	ins    BYTE PTR es:[edi],dx
  4133e1:	jle    0x41342e
  4133e3:	mov    ebx,0xceb1058e
  4133e8:	(bad)  
  4133e9:	pop    ds
  4133ea:	pop    esi
  4133eb:	clc    
  4133ec:	or     BYTE PTR [ecx],bh
  4133ee:	sbb    BYTE PTR [ecx],0xec
  4133f1:	inc    edx
  4133f2:	sbb    DWORD PTR [edi-0x6daf6a8a],esp
  4133f8:	pop    eax
  4133f9:	lods   eax,DWORD PTR ss:[esi]
  4133fb:	add    al,0xa6
  4133fd:	pusha  
  4133fe:	push   ss
  4133ff:	sub    ebx,DWORD PTR [esi+0xb]
  413402:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413403:	dec    edx
  413404:	cmp    BYTE PTR ds:0x2c92cb3d,ah
  41340a:	xchg   BYTE PTR [eax],bl
  41340c:	je     0x413472
  41340e:	mov    esp,0x15be72ed
  413413:	rcl    BYTE PTR [edx],1
  413415:	push   0x3c
  413417:	rcr    DWORD PTR [ecx-0x2c],1
  41341a:	push   esp
  41341b:	fidivr WORD PTR [eax]
  41341d:	pop    edx
  41341e:	push   es
  41341f:	popf   
  413420:	cmp    esp,DWORD PTR [ecx]
  413422:	or     ch,al
  413424:	cmp    esp,ebp
  413426:	cmp    ebx,edx
  413428:	push   0xfffffff7
  41342a:	inc    ecx
  41342b:	push   ds
  41342c:	sub    eax,0x687b4da2
  413431:	push   ebp
  413432:	in     eax,dx
  413433:	mov    ch,0x96
  413435:	push   0xe5030c60
  41343a:	push   edi
  41343b:	sbb    DWORD PTR [edi+0x25897c60],esp
  413441:	adc    al,0xb8
  413443:	fsubr  QWORD PTR [edx]
  413445:	call   0x2d96:0x6543ad1c
  41344c:	sbb    dh,dh
  41344e:	call   0x40b17144
  413453:	mov    ecx,0xe717b9a2
  413458:	sub    al,0x40
  41345a:	int3   
  41345b:	dec    esi
  41345c:	shr    BYTE PTR [eax],0x9c
  41345f:	dec    eax
  413460:	jne    0x4134d1
  413462:	xchg   edi,eax
  413463:	or     DWORD PTR [ebx+0x32301e1b],eax
  413469:	inc    ecx
  41346a:	inc    ecx
  41346b:	pop    eax
  41346c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41346d:	sub    al,0x20
  41346f:	cmp    al,0x17
  413471:	test   DWORD PTR [edi],edx
  413473:	daa    
  413474:	pushf  
  413475:	in     eax,dx
  413476:	bound  ebp,QWORD PTR [edx+0x1ad022c2]
  41347c:	xchg   ebx,eax
  41347d:	dec    esp
  41347e:	je     0x4134ca
  413480:	sub    BYTE PTR [esp+edx*4-0xf],bh
  413484:	mov    cl,BYTE PTR [ebx-0x5becae6c]
  41348a:	pop    esi
  41348b:	dec    ebp
  41348c:	popa   
  41348d:	addr16 jmp 0xf78ed43b
  413493:	ss cwde 
  413495:	xchg   edi,eax
  413496:	clc    
  413497:	push   DWORD PTR [edx+0xb0c43e7]
  41349d:	repnz mov al,ds:0xe022833a
  4134a3:	adc    BYTE PTR [eax+0x49],0x21
  4134a7:	daa    
  4134a8:	aam    0x5d
  4134aa:	push   ebp
  4134ab:	(bad)  
  4134ad:	int    0x80
  4134af:	in     al,dx
  4134b0:	ss push ebp
  4134b2:	add    eax,0xb7b1ce5c
  4134b7:	push   0x84627fe9
  4134bc:	pop    es
  4134bd:	inc    eax
  4134be:	jl     0x413524
  4134c0:	xor    ecx,DWORD PTR [ebx-0x60]
  4134c3:	sbb    ebp,DWORD PTR [bx+di-0x111]
  4134c8:	call   0x40a65ff5
  4134cd:	cwde   
  4134ce:	or     ah,BYTE PTR [esi+0x77d020fe]
  4134d4:	jne    0x413522
  4134d6:	dec    edx
  4134d7:	add    al,BYTE PTR [eax+eax*8]
  4134da:	nop
  4134db:	jle    0x41350a
  4134dd:	pop    ds
  4134de:	pop    esi
  4134df:	mov    ebp,0x7815394b
  4134e4:	jb     0x413515
  4134e6:	jp     0x41350e
  4134e8:	inc    ebp
  4134e9:	ds out dx,eax
  4134eb:	imul   edi,DWORD PTR [ecx+0x13],0x7f
  4134ef:	xor    BYTE PTR [ebx+edi*4+0x4c],dh
  4134f3:	arpl   WORD PTR [ebx-0x1650af2],bp
  4134f9:	sub    esi,edx
  4134fb:	std    
  4134fc:	xor    al,0x85
  4134fe:	sub    ebp,esi
  413500:	cs iret 
  413502:	inc    ecx
  413503:	and    al,0xca
  413505:	(bad)  
  413506:	jns    0x4134b0
  413508:	dec    eax
  41350a:	(bad)  
  41350b:	loopne 0x413519
  41350d:	and    ecx,DWORD PTR [ebx]
  41350f:	xchg   ecx,eax
  413510:	data16 cmc 
  413512:	and    ecx,DWORD PTR [eax-0x4ccfc5e]
  413518:	je     0x413548
  41351a:	cmc    
  41351b:	jne    0x4134de
  41351d:	dec    edx
  41351e:	xor    BYTE PTR [esi-0x5bbf215],bl
  413524:	imul   ebp,edi,0x8cda4aef
  41352a:	es push ds
  41352c:	faddp  st(3),st
  41352e:	ficomp WORD PTR [ebx]
  413530:	cwde   
  413531:	loopne 0x4135ae
  413533:	and    BYTE PTR ds:0xe9437187,0xbb
  41353a:	out    dx,eax
  41353b:	fcmovu st,st(0)
  41353d:	push   ss
  41353e:	repnz and ebp,DWORD PTR [ebx-0x6e]
  413542:	out    dx,eax
  413543:	in     al,dx
  413544:	add    BYTE PTR [esi-0x7e],cl
  413547:	das    
  413548:	mov    ?,WORD PTR [ebp-0x56]
  41354b:	sbb    DWORD PTR [edx],ebx
  41354d:	jg     0x4135c9
  41354f:	(bad)  
  413551:	in     eax,0x63
  413553:	xchg   edi,eax
  413554:	cmp    eax,0xbe6b3c44
  413559:	ss sub bh,dh
  41355c:	xchg   edx,eax
  41355d:	adc    eax,0x13705c2
  413562:	pop    edi
  413563:	inc    ecx
  413564:	push   ecx
  413565:	adc    eax,0x3b8e149d
  41356a:	mov    al,BYTE PTR [ebx+0x3e]
  41356d:	out    dx,al
  41356e:	pop    ds
  41356f:	xchg   DWORD PTR [eax-0x632730aa],ebp
  413575:	jmp    0x413553
  413577:	xor    al,0x7
  413579:	mov    edi,DWORD PTR [ecx+0x1f87b29b]
  41357f:	mov    bl,0xa5
  413581:	in     al,0x86
  413583:	inc    edx
  413584:	iret   
  413585:	mov    dl,ah
  413587:	fmul   DWORD PTR [esi-0x55]
  41358a:	dec    eax
  41358b:	xchg   edi,eax
  41358c:	cmp    edi,ecx
  41358e:	sub    BYTE PTR [esi-0x14ddb9f1],ah
  413594:	js     0x4135e1
  413596:	add    BYTE PTR [ebx+eax*4-0x5dc6d827],cl
  41359d:	push   edi
  41359e:	xchg   ebp,eax
  41359f:	out    0x5e,eax
  4135a1:	test   al,0xd8
  4135a3:	rol    BYTE PTR [ebx+0x74619039],0x2e
  4135aa:	add    ebx,DWORD PTR [ecx+0x5e]
  4135ad:	in     al,0x43
  4135af:	addr16 xchg esp,eax
  4135b1:	fidiv  DWORD PTR [ecx]
  4135b3:	jl     0x4135a8
  4135b5:	sbb    dh,BYTE PTR [ebx]
  4135b7:	(bad)  
  4135b9:	std    
  4135ba:	scas   eax,DWORD PTR es:[edi]
  4135bb:	add    al,0x2c
  4135bd:	fs mov eax,0xd34fd775
  4135c3:	fwait
  4135c4:	out    0x46,al
  4135c6:	or     eax,0x1975d27b
  4135cb:	sub    eax,0x338c7b79
  4135d0:	mov    al,0xd9
  4135d2:	stos   BYTE PTR es:[edi],al
  4135d3:	rcl    DWORD PTR [eax-0x3067194e],cl
  4135d9:	call   0x9a4e812e
  4135de:	sahf   
  4135df:	(bad)  
  4135e0:	and    ebp,DWORD PTR [ebp+0x74bf5227]
  4135e6:	inc    ecx
  4135e7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4135e8:	leave  
  4135e9:	push   0x36
  4135eb:	pop    edi
  4135ec:	sub    bh,bh
  4135ee:	sub    DWORD PTR [ebp-0x37],0x7a188edb
  4135f5:	cmp    ebx,DWORD PTR [edx-0x2b]
  4135f8:	sub    al,0x1
  4135fa:	(bad)  
  4135fb:	fstp   QWORD PTR [edx-0x3f8328da]
  413601:	fmul   DWORD PTR [ebx+0x41]
  413604:	pop    edi
  413605:	pop    ss
  413606:	push   eax
  413607:	ins    BYTE PTR es:[edi],dx
  413608:	xlat   BYTE PTR ds:[ebx]
  413609:	or     bl,BYTE PTR [ebp+0x6e00776b]
  41360f:	dec    ecx
  413610:	leave  
  413611:	fdivp  st(4),st
  413613:	js     0x4135fa
  413615:	(bad)  
  413616:	aam    0x6
  413618:	and    ch,dl
  41361a:	dec    ebx
  41361b:	imul   ecx,DWORD PTR [edi],0x6159e3c9
  413621:	xor    edi,0x2212707f
  413627:	and    al,0x66
  413629:	scas   al,BYTE PTR es:[edi]
  41362a:	or     DWORD PTR [esi+0x10],edi
  41362d:	push   esi
  41362e:	push   esi
  41362f:	cwde   
  413630:	mov    cl,0xf2
  413632:	leave  
  413633:	hlt    
  413634:	fistp  DWORD PTR [eax+0x69]
  413637:	push   0xa0b82733
  41363c:	mov    BYTE PTR [edx+0x4a03373a],bl
  413642:	sbb    BYTE PTR [esi-0x2f35c1e0],0x44
  413649:	mov    edx,0x168e1bf7
  41364e:	arpl   bx,bp
  413650:	out    dx,eax
  413651:	jbe    0x4135df
  413653:	cdq    
  413654:	inc    ebx
  413655:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413656:	mov    edi,0x3cf09446
  41365b:	or     al,0xfe
  41365d:	push   esp
  41365e:	dec    edi
  41365f:	sub    edx,ecx
  413661:	test   BYTE PTR [edx+0x67],bl
  413664:	mov    esp,0xddf4e7ae
  413669:	stc    
  41366a:	out    dx,eax
  41366b:	ffree  st(1)
  41366d:	pop    es
  41366e:	scas   al,BYTE PTR es:[edi]
  41366f:	push   eax
  413670:	ret    
  413671:	shr    BYTE PTR [ebx-0x65ea2361],0x2b
  413678:	hlt    
  413679:	mov    esi,DWORD PTR [edi+0x6d]
  41367c:	ja     0x4136e2
  41367e:	iret   
  41367f:	clc    
  413680:	cmc    
  413681:	or     esp,ecx
  413683:	scas   al,BYTE PTR es:[edi]
  413684:	call   FWORD PTR [edi]
  413686:	ins    DWORD PTR es:[edi],dx
  413687:	or     cl,dl
  413689:	mov    ah,ah
  41368b:	ret    0x35a4
  41368e:	mov    al,0xc0
  413690:	jno    0x41362a
  413692:	rcl    DWORD PTR [edi-0x36e0fc26],1
  413698:	scas   eax,DWORD PTR es:[edi]
  413699:	cmp    BYTE PTR [ebx],ch
  41369b:	mov    al,ds:0x307b9204
  4136a0:	ja     0x4136d1
  4136a2:	mov    eax,ds:0x841f9254
  4136a7:	push   es
  4136a8:	sti    
  4136a9:	push   0x92978934
  4136ae:	cdq    
  4136af:	inc    esp
  4136b0:	sbb    al,0x8a
  4136b2:	xchg   ebp,eax
  4136b3:	dec    edx
  4136b4:	ss inc ebp
  4136b6:	inc    eax
  4136b7:	shl    DWORD PTR [edi],1
  4136b9:	push   0xffffffbd
  4136bb:	call   0x2960:0xffe45494
  4136c2:	cmp    al,0x56
  4136c4:	and    BYTE PTR [edi+0x79],al
  4136c7:	popf   
  4136c8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4136c9:	push   edx
  4136ca:	(bad)  
  4136cc:	mov    ebp,0x3fd1d79
  4136d1:	sti    
  4136d2:	pop    esi
  4136d3:	adc    al,0x26
  4136d5:	repz mov bh,0xaa
  4136d8:	jb     0x413724
  4136da:	das    
  4136db:	(bad)  
  4136dc:	sbb    BYTE PTR [ebp+0x4d4da968],ah
  4136e2:	int    0x1a
  4136e4:	sahf   
  4136e5:	mov    eax,ds:0x74dfef1c
  4136ea:	ja     0x413709
  4136ec:	push   edx
  4136ed:	xor    BYTE PTR [ebx-0x3370c540],0xd
  4136f4:	(bad)  [ecx-0xa108d44]
  4136fa:	lahf   
  4136fb:	iret   
  4136fc:	xchg   edi,eax
  4136fd:	test   al,0xf7
  4136ff:	shl    BYTE PTR [edx],0xfa
  413702:	pop    eax
  413703:	js     0x413768
  413705:	pop    es
  413706:	mov    eax,ds:0xb4ae8a3
  41370b:	cmp    al,BYTE PTR [edi]
  41370d:	xchg   edx,eax
  41370e:	jmp    0x425ab2d4
  413713:	lods   al,BYTE PTR ds:[esi]
  413714:	(bad)  
  413716:	push   ss
  413717:	aaa    
  413718:	pop    ebx
  413719:	stos   DWORD PTR es:[edi],eax
  41371a:	mov    esi,0x410a5c79
  41371f:	js     0x413764
  413721:	adc    eax,0x8144304d
  413726:	leave  
  413727:	fdivr  DWORD PTR [eax-0x6a61e336]
  41372d:	rol    BYTE PTR [esi+0x136763a1],1
  413733:	xchg   esi,eax
  413734:	cmc    
  413735:	inc    ebp
  413736:	adc    DWORD PTR [ecx],eax
  413738:	mov    ch,0xda
  41373a:	sub    ah,BYTE PTR [esi+ecx*1]
  41373d:	add    eax,DWORD PTR [ebp+ecx*2-0x571ae75b]
  413744:	sar    BYTE PTR [ebp+0x1e],cl
  413747:	or     edi,0xdd1a99d3
  41374d:	pusha  
  41374e:	stos   BYTE PTR es:[edi],al
  41374f:	xchg   esi,eax
  413750:	inc    esi
  413751:	add    BYTE PTR [edx+0x6ec13a0c],0xf5
  413758:	pushf  
  413759:	fidiv  WORD PTR [eax+ebp*1+0x47c98d0a]
  413760:	nop
  413761:	inc    edx
  413762:	out    dx,eax
  413763:	lahf   
  413764:	fcom   QWORD PTR [ecx+edi*4]
  413767:	mov    ds:0xba4ce1f6,al
  41376c:	stc    
  41376d:	jecxz  0x4137bd
  41376f:	pusha  
  413770:	mov    WORD PTR [ebp-0x2f],gs
  413773:	enter  0xdd63,0x4f
  413777:	repz xor DWORD PTR [eax],edx
  41377a:	and    ah,bl
  41377c:	bound  edx,QWORD PTR [ecx]
  41377e:	stc    
  41377f:	in     al,dx
  413780:	mov    BYTE PTR [esi],al
  413782:	rcr    BYTE PTR [ecx],cl
  413784:	xor    dh,al
  413786:	(bad)
  413789:	(bad)  
  41378a:	pop    esp
  41378b:	fucom  st(6)
  41378d:	std    
  41378e:	mov    ecx,0x7c882640
  413793:	out    0x96,al
  413795:	(bad)  
  413796:	mov    esi,0x6fd12986
  41379b:	fcom   QWORD PTR [ebx-0x1f03f2]
  4137a1:	mov    bl,BYTE PTR [ecx+eax*1]
  4137a4:	mov    ds:0xf7c54a2c,al
  4137a9:	out    0xe0,al
  4137ab:	nop
  4137ac:	pop    edi
  4137ad:	jne    0x4137fb
  4137af:	ja     0x4137c1
  4137b1:	pop    ss
  4137b2:	lods   eax,DWORD PTR ds:[esi]
  4137b3:	out    0xa1,al
  4137b5:	sbb    eax,0x9adc6ffb
  4137ba:	fyl2xp1 
  4137bc:	fidiv  WORD PTR [edx+eax*2]
  4137bf:	int3   
  4137c0:	(bad)  
  4137c1:	sbb    ebp,DWORD PTR [ebp+0x1ce0084a]
  4137c7:	pop    ecx
  4137c8:	cmp    al,0x18
  4137ca:	push   0x384fc3c5
  4137cf:	and    ah,BYTE PTR [esi-0x63a34853]
  4137d5:	jnp    0x4137a8
  4137d7:	sub    BYTE PTR [esi],cl
  4137d9:	and    BYTE PTR [edx],ah
  4137db:	mov    eax,0x4425b129
  4137e0:	adc    eax,0xec16fbbf
  4137e5:	addr16 dec ecx
  4137e7:	xor    al,0x38
  4137e9:	call   0x225e:0x138fa8e
  4137f0:	jne    0x4137bb
  4137f2:	or     BYTE PTR [eax+0x72],dh
  4137f5:	in     al,0xf1
  4137f7:	fnstcw WORD PTR [esi]
  4137f9:	jge    0x413872
  4137fb:	cmp    BYTE PTR [eax],bh
  4137fd:	mov    cl,BYTE PTR [ebp-0x2d]
  413800:	lods   al,BYTE PTR ds:[esi]
  413801:	lahf   
  413802:	mov    bl,cl
  413804:	(bad)
  413807:	popf   
  413808:	pop    eax
  413809:	xchg   esp,eax
  41380a:	dec    ebp
  41380b:	xchg   BYTE PTR [ebx-0x4c],dl
  41380e:	lods   al,BYTE PTR ds:[esi]
  41380f:	sub    ch,BYTE PTR [ebx]
  413811:	jmp    0x4137a6
  413813:	ja     0x41380c
  413815:	pop    ss
  413816:	push   0xffffffed
  413818:	push   cs
  413819:	adc    eax,0x30832809
  41381e:	push   esp
  41381f:	std    
  413820:	adc    DWORD PTR [edi+0x7ce5b608],0xffffffda
  413827:	mov    BYTE PTR ds:0x6008790,0x24
  41382e:	pop    es
  41382f:	adc    eax,0x6798a7af
  413834:	dec    ecx
  413835:	xchg   edi,eax
  413836:	jmp    0x8471:0xc0dbc1c4
  41383d:	lock inc ecx
  41383f:	ret    0x83f
  413842:	add    al,0x7e
  413844:	dec    ecx
  413845:	(bad)  
  413846:	stos   DWORD PTR es:[edi],eax
  413847:	mov    bh,0xb7
  413849:	or     eax,0x9f20b7df
  41384e:	inc    esi
  41384f:	dec    DWORD PTR [esi+eax*1]
  413852:	fstp   QWORD PTR [ebx]
  413854:	or     eax,0x3b90d33e
  413859:	and    ecx,DWORD PTR [eax]
  41385b:	inc    edx
  41385c:	xor    ecx,DWORD PTR [edi]
  41385e:	add    BYTE PTR [eax],ch
  413860:	sti    
  413861:	mov    edi,0xff646dfc
  413866:	enter  0x5e47,0x6e
  41386a:	mov    dl,0xa2
  41386c:	inc    esp
  41386d:	cmp    dh,bl
  41386f:	bnd jb 0x413854
  413872:	pushf  
  413873:	hlt    
  413874:	stc    
  413875:	mov    al,ds:0x346f458e
  41387a:	xchg   esp,eax
  41387b:	daa    
  41387c:	mov    al,ds:0x10499288
  413881:	cmp    eax,0x93a0edee
  413887:	mov    ah,0x98
  413889:	repnz mov bl,0xc7
  41388c:	popa   
  41388d:	add    al,0xae
  41388f:	test   al,0x56
  413891:	mov    ebp,DWORD PTR [esi-0x267c4b48]
  413897:	pop    edx
  413898:	jno    0x413868
  41389a:	lds    ebx,FWORD PTR [edi+0x4b0e0431]
  4138a0:	repnz mov cl,0x99
  4138a3:	push   ds
  4138a4:	or     al,0x4
  4138a6:	fistp  QWORD PTR [ecx+0x69]
  4138a9:	push   esp
  4138aa:	stos   DWORD PTR es:[edi],eax
  4138ab:	clc    
  4138ac:	std    
  4138ad:	add    BYTE PTR [edi],dh
  4138af:	push   ds
  4138b0:	sahf   
  4138b1:	and    BYTE PTR [eax+ebp*4+0x6b951327],ah
  4138b8:	loop   0x41383a
  4138ba:	out    dx,al
  4138bb:	xlat   BYTE PTR ds:[ebx]
  4138bc:	mov    dh,0x72
  4138be:	call   0x8c59e8fe
  4138c3:	sbb    edx,edi
  4138c5:	clc    
  4138c6:	mov    ebp,0x5242ef50
  4138cb:	xor    al,0x83
  4138cd:	jecxz  0x4138c5
  4138cf:	loope  0x4138cf
  4138d1:	inc    esp
  4138d2:	imul   esi,DWORD PTR [edi+0x5a],0x7d
  4138d6:	(bad)  
  4138d7:	push   ss
  4138d8:	cmp    bh,BYTE PTR [ecx-0x43]
  4138db:	jo     0x413877
  4138dd:	and    bl,BYTE PTR [ecx-0x5fce71d6]
  4138e3:	scas   al,BYTE PTR es:[edi]
  4138e4:	mov    esp,0x4c10ee1
  4138e9:	sahf   
  4138ea:	or     DWORD PTR [ebx-0x58],esi
  4138ed:	ret    0x6c3c
  4138f0:	mov    eax,0x6bc1c8c7
  4138f5:	mov    ebx,0x53a83f09
  4138fa:	jle    0x4138c2
  4138fc:	fwait
  4138fd:	adc    al,0x2b
  4138ff:	loope  0x413936
  413901:	xor    BYTE PTR [ebx+0x68],0x90
  413905:	ds ja  0x413916
  413908:	jge    0x41395d
  41390a:	mov    al,ds:0x3ba6ca4
  41390f:	xor    al,0x4c
  413911:	fisttp QWORD PTR [bp+di]
  413914:	cmp    DWORD PTR [edx+edx*2+0xaae9bd9],0xfffffff8
  41391c:	jo     0x4138a3
  41391e:	daa    
  41391f:	lods   al,BYTE PTR ds:[esi]
  413920:	fnstcw WORD PTR [ebp+0x75251c33]
  413926:	push   ss
  413927:	adc    DWORD PTR ds:0xe9f40e2b,edx
  41392d:	cmc    
  41392e:	out    0xda,eax
  413930:	dec    edi
  413931:	pop    ss
  413932:	mov    ebx,0xc35efa27
  413937:	xor    DWORD PTR [edx],esp
  413939:	outs   dx,DWORD PTR ds:[esi]
  41393a:	xor    DWORD PTR [edi-0x632e9c7f],esp
  413940:	cmp    cl,ch
  413942:	add    cl,BYTE PTR es:[ebp-0x1b3e28f1]
  413949:	sub    eax,0x98b9e13a
  41394e:	leave  
  41394f:	push   ds
  413950:	inc    ecx
  413951:	les    eax,FWORD PTR [ebx+0x21137047]
  413957:	jmp    0xb45c:0xfee1e909
  41395e:	dec    ebx
  41395f:	outs   dx,DWORD PTR ds:[esi]
  413960:	dec    ebp
  413961:	pop    edi
  413962:	out    dx,al
  413963:	(bad)
  413967:	in     al,0xab
  413969:	repz jns 0x413912
  41396c:	neg    DWORD PTR [eax-0x9]
  41396f:	pop    esi
  413970:	adc    edx,DWORD PTR [eax-0x71]
  413973:	aaa    
  413974:	mov    al,ds:0xb7b2e9fd
  413979:	scas   al,BYTE PTR es:[edi]
  41397a:	jmp    0x413904
  41397c:	jne    0x413984
  41397e:	in     eax,0x9e
  413980:	retf   
  413981:	xchg   ebx,eax
  413982:	jno    0x4139bb
  413984:	cmp    al,0xb3
  413986:	push   esi
  413987:	test   DWORD PTR [edi-0x22],ecx
  41398a:	jmp    0x658330fd
  41398f:	ja     0x41394d
  413991:	or     dh,BYTE PTR [eax-0x71]
  413994:	push   edx
  413995:	gs gs es xor al,0xc9
  41399a:	jo     0x413a0b
  41399c:	dec    edi
  41399d:	sbb    DWORD PTR [edi+eax*2-0x33],ebx
  4139a1:	dec    eax
  4139a2:	retf   0x8dcd
  4139a5:	ja     0x413a03
  4139a7:	ror    dh,1
  4139a9:	pop    edx
  4139aa:	popf   
  4139ab:	rol    DWORD PTR [ecx+ebp*8],cl
  4139ae:	sub    bh,BYTE PTR [eax+0x1f]
  4139b1:	lock mov cl,0xd6
  4139b4:	dec    eax
  4139b5:	lahf   
  4139b6:	fprem  
  4139b8:	scas   al,BYTE PTR es:[edi]
  4139b9:	push   es
  4139ba:	out    dx,al
  4139bb:	repz daa 
  4139bd:	push   edi
  4139be:	xchg   esp,eax
  4139bf:	(bad)  
  4139c0:	xor    DWORD PTR [esi+0x43],eax
  4139c3:	out    dx,eax
  4139c4:	or     DWORD PTR [esi],ecx
  4139c6:	push   ss
  4139c7:	rcr    DWORD PTR [esp+esi*4-0x539ac1bd],0x76
  4139cf:	jp     0x413963
  4139d1:	sbb    BYTE PTR [ebp+0x9],dl
  4139d4:	inc    ebp
  4139d5:	(bad)  [edx+0x39]
  4139d8:	in     eax,0x1c
  4139da:	pop    edi
  4139db:	adc    ebx,esi
  4139dd:	fyl2x  
  4139df:	xchg   esi,eax
  4139e0:	mov    dl,0x72
  4139e2:	nop
  4139e3:	adc    al,0x22
  4139e5:	sbb    dl,BYTE PTR [edi-0x4984c9fd]
  4139eb:	pushf  
  4139ec:	and    bh,BYTE PTR [eax]
  4139ee:	popf   
  4139ef:	cmp    DWORD PTR [eax],edx
  4139f1:	fild   WORD PTR [eax]
  4139f3:	add    al,0xc
  4139f5:	call   0x15f3:0xd1cd39cc
  4139fc:	jno    0x413a40
  4139fe:	out    0x7a,al
  413a00:	out    dx,al
  413a01:	or     edi,0xeedc7b2c
  413a07:	xor    BYTE PTR [edx-0x631807a2],al
  413a0d:	call   0xa8d1ecd4
  413a12:	xlat   BYTE PTR ds:[ebx]
  413a13:	mov    ebp,0xdfbc6640
  413a18:	lock scas al,BYTE PTR es:[edi]
  413a1a:	xor    eax,esp
  413a1c:	push   es
  413a1d:	add    esp,ebp
  413a1f:	lods   eax,DWORD PTR ds:[esi]
  413a20:	(bad)  
  413a21:	call   0xea486d42
  413a26:	mov    ecx,0x856f3561
  413a2b:	nop
  413a2c:	lods   eax,DWORD PTR ds:[esi]
  413a2d:	div    edi
  413a2f:	ds int3 
  413a31:	xchg   edx,eax
  413a32:	fidiv  WORD PTR [eax]
  413a34:	ret    0x1a59
  413a37:	xchg   edx,eax
  413a38:	dec    eax
  413a39:	ja     0x4139ef
  413a3b:	jae    0x413a1d
  413a3d:	jnp    0x4139ce
  413a3f:	(bad)  
  413a40:	xor    al,bh
  413a42:	pop    esp
  413a43:	or     BYTE PTR [esi+0x13db7c3b],bl
  413a49:	dec    edi
  413a4a:	das    
  413a4b:	inc    esi
  413a4c:	or     al,0x33
  413a4e:	shl    BYTE PTR [edx-0x33],1
  413a51:	xlat   BYTE PTR ds:[ebx]
  413a52:	in     eax,0x64
  413a54:	mov    esp,ecx
  413a56:	int    0xf0
  413a58:	xor    BYTE PTR [edx-0x4b],cl
  413a5b:	hlt    
  413a5c:	or     BYTE PTR [ebp-0x3b70e68f],0xa5
  413a63:	jmp    0x4139e8
  413a65:	in     al,dx
  413a66:	mov    esp,es
  413a68:	ins    BYTE PTR es:[edi],dx
  413a69:	push   cs
  413a6a:	xchg   ebx,eax
  413a6b:	sbb    DWORD PTR [ebp+0x2713658f],esp
  413a71:	addr16 or eax,0xea46ebac
  413a77:	xchg   ecx,eax
  413a78:	add    DWORD PTR [esp+edi*8],esp
  413a7b:	xchg   edi,eax
  413a7c:	lahf   
  413a7d:	cmp    al,0xfe
  413a7f:	mov    cl,0xc0
  413a81:	inc    esi
  413a82:	out    dx,al
  413a83:	fild   WORD PTR [ecx-0x2e]
  413a86:	jp     0x413a84
  413a88:	dec    eax
  413a89:	push   0xbe0a1ce7
  413a8e:	push   ebx
  413a8f:	push   edi
  413a90:	iret   
  413a91:	jo     0x413a30
  413a93:	or     BYTE PTR [edi-0x2bd193e9],bh
  413a99:	inc    ebx
  413a9a:	mov    bh,0xc3
  413a9c:	pop    esp
  413a9d:	call   0xdbc4:0x419033d4
  413aa4:	ds dec esp
  413aa6:	mov    dl,0x8d
  413aa8:	mov    al,0xc0
  413aaa:	outs   dx,BYTE PTR ds:[esi]
  413aab:	or     eax,0xf0716a82
  413ab0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413ab1:	and    DWORD PTR ds:0x89234652,0x76fd6bcf
  413abb:	inc    esi
  413abc:	pop    ds
  413abd:	shr    BYTE PTR [ecx],1
  413abf:	ins    DWORD PTR es:[edi],dx
  413ac0:	inc    eax
  413ac1:	and    al,0x94
  413ac3:	cs ret 0xd9db
  413ac7:	add    bh,BYTE PTR [eax-0x24]
  413aca:	sbb    esi,ebx
  413acc:	cdq    
  413acd:	fs leave 
  413acf:	xor    eax,0xa11ba372
  413ad4:	sbb    ebx,DWORD PTR [edx-0x2193d7e0]
  413ada:	icebp  
  413adb:	and    BYTE PTR [esi-0x55],0xd6
  413adf:	add    DWORD PTR [edi+0x6261da2c],ebp
  413ae5:	outs   dx,DWORD PTR ds:[esi]
  413ae6:	pop    ebp
  413ae7:	scas   eax,DWORD PTR es:[edi]
  413ae8:	add    al,al
  413aea:	mov    dh,0x5
  413aec:	sti    
  413aed:	les    edi,FWORD PTR [ebp+0x219fb4e9]
  413af3:	xor    eax,0x5cdec03f
  413af8:	sbb    eax,0x8a6775aa
  413afd:	jnp    0x413b4d
  413aff:	pop    edx
  413b00:	pop    es
  413b01:	imul   DWORD PTR [ecx+0x61dcb605]
  413b07:	mov    cl,0x6a
  413b09:	mov    ebp,ecx
  413b0b:	adc    edi,DWORD PTR [edx+0x59]
  413b0e:	jne    0x413b1a
  413b10:	cdq    
  413b11:	dec    ebp
  413b12:	aas    
  413b13:	mov    ah,0xc3
  413b15:	sub    al,0x9a
  413b17:	iret   
  413b18:	ins    DWORD PTR es:[edi],dx
  413b19:	mov    BYTE PTR [edx],0xc9
  413b1c:	lods   al,BYTE PTR ds:[esi]
  413b1d:	ds js  0x413b0f
  413b20:	jbe    0x413b72
  413b22:	call   0x202e:0x7593bcb5
  413b29:	adc    al,0x7
  413b2b:	jl     0x413b4b
  413b2d:	mov    al,ds:0x20a013b6
  413b32:	scas   eax,DWORD PTR es:[edi]
  413b33:	push   edi
  413b34:	jmp    0x413b40
  413b36:	in     al,0xd4
  413b38:	retf   0xf47f
  413b3b:	and    DWORD PTR [eax-0x5506d496],esp
  413b41:	in     eax,dx
  413b42:	mov    dh,0xe1
  413b44:	mov    eax,ds:0xe7e5d065
  413b49:	mov    edi,0x331539b2
  413b4e:	mov    cl,0x21
  413b50:	jno    0x413b73
  413b52:	xchg   esi,edi
  413b54:	test   DWORD PTR [ebx-0x131a01d7],ebp
  413b5a:	fdiv   st(0),st
  413b5c:	jns    0x413b45
  413b5e:	xchg   bl,ah
  413b60:	and    ecx,DWORD PTR [eax-0x1049d848]
  413b66:	and    eax,DWORD PTR [eax-0x17]
  413b69:	mov    bh,0x2f
  413b6b:	fnstenv [eax]
  413b6d:	xchg   ebx,eax
  413b6e:	cmp    DWORD PTR [edx],0x65153aec
  413b74:	stos   BYTE PTR es:[edi],al
  413b75:	sbb    al,0xa5
  413b77:	pop    ebx
  413b78:	scas   eax,DWORD PTR es:[edi]
  413b79:	sbb    ah,BYTE PTR [edi+0x2b81c0b6]
  413b7f:	jmp    DWORD PTR [ecx]
  413b81:	cmp    eax,0x5bcbff84
  413b86:	add    dl,BYTE PTR [edx]
  413b88:	es (bad) 
  413b8a:	out    dx,al
  413b8b:	adc    DWORD PTR [ebx+ecx*4-0x20],edi
  413b8f:	rcl    BYTE PTR [esi-0x60],cl
  413b92:	sub    BYTE PTR [ebx+0x11b7be9c],bh
  413b98:	jl     0x413bce
  413b9a:	(bad)
  413b9e:	mov    ds:0xfdb7a606,al
  413ba3:	xchg   edx,eax
  413ba4:	push   ecx
  413ba5:	sub    eax,0xe7c44f12
  413baa:	mov    ds,WORD PTR [ebp-0x56]
  413bad:	pop    edx
  413bae:	push   es
  413baf:	dec    edi
  413bb0:	push   ecx
  413bb1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413bb2:	push   esi
  413bb3:	hlt    
  413bb4:	mov    ebp,0xec3a2cc4
  413bb9:	cmp    eax,0x3c51fe1c
  413bbe:	mov    eax,0x652fca92
  413bc3:	adc    al,0x81
  413bc5:	dec    ebp
  413bc6:	lea    esi,[esi]
  413bc8:	pop    esp
  413bc9:	test   al,0xfe
  413bcb:	push   0x74
  413bcd:	daa    
  413bce:	and    al,BYTE PTR [eax+0x59]
  413bd1:	sti    
  413bd2:	push   cs
  413bd3:	and    ebx,ebp
  413bd5:	pop    esp
  413bd6:	aaa    
  413bd7:	lods   eax,DWORD PTR ds:[esi]
  413bd8:	in     al,dx
  413bd9:	sub    eax,0xf1d66928
  413bde:	xchg   esi,eax
  413bdf:	xchg   DWORD PTR [ebp+0x1d506e6d],esp
  413be5:	mov    ch,dl
  413be7:	jnp    0x413bc7
  413be9:	pop    eax
  413bea:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413beb:	xchg   edi,eax
  413bec:	mov    dh,0xb4
  413bee:	adc    al,0x65
  413bf0:	jnp    0x413b88
  413bf2:	or     eax,0x1f05d54f
  413bf7:	xchg   ebp,eax
  413bf8:	into   
  413bf9:	xchg   edi,eax
  413bfa:	call   0x45c6cf41
  413bff:	sar    BYTE PTR [ebp-0x55],cl
  413c02:	sub    BYTE PTR [ebx+0x32],ch
  413c05:	and    eax,0x86f1d2b2
  413c0a:	mov    al,ds:0x7d6d1576
  413c0f:	cmp    eax,0xde530d33
  413c14:	mov    WORD PTR [edx+0x2f],ss
  413c17:	fnstsw WORD PTR [eax+0x77]
  413c1a:	jno    0x413c10
  413c1c:	mov    DWORD PTR [ecx-0xb88b614],esi
  413c22:	aam    0x11
  413c24:	ss mov edi,0x8b901f82
  413c2a:	xor    BYTE PTR [edx-0xd],ah
  413c2d:	bound  ebp,QWORD PTR [ebx-0x7ff51602]
  413c33:	cwde   
  413c34:	pop    ebp
  413c35:	and    cl,BYTE PTR ds:0x125f4a3c
  413c3b:	pop    esp
  413c3c:	add    DWORD PTR [esi+0x6f],edx
  413c3f:	mov    ebp,0x1da0e352
  413c44:	jle    0x413bdf
  413c46:	dec    edx
  413c47:	xor    al,BYTE PTR [ebx+esi*2-0x4e]
  413c4b:	sub    BYTE PTR [eax+edi*8],dl
  413c4e:	cwde   
  413c4f:	jnp    0x413cba
  413c51:	jge    0x413c93
  413c53:	xor    eax,0x28a5f0c2
  413c58:	jne    0x413c39
  413c5a:	xor    eax,0xf5263d5b
  413c5f:	adc    al,bl
  413c61:	dec    esp
  413c62:	pop    ds
  413c63:	inc    esi
  413c64:	lahf   
  413c65:	inc    edx
  413c66:	mov    bl,0xf8
  413c68:	in     al,0xaf
  413c6a:	ins    DWORD PTR es:[edi],dx
  413c6b:	or     eax,0xf402f511
  413c70:	test   eax,0x91d4ff6f
  413c75:	ja     0x413c49
  413c77:	sar    BYTE PTR [ebp+ebp*4-0x3b9c217b],1
  413c7e:	push   DWORD PTR [ebp+0x43]
  413c81:	adc    edi,edi
  413c83:	cmp    edi,DWORD PTR ds:0xab0a27ec
  413c89:	sbb    ebx,DWORD PTR [eax]
  413c8b:	cs ret 0x1ee0
  413c8f:	xor    DWORD PTR [edx],ebp
  413c91:	fsubr  st,st(7)
  413c93:	jb     0x413c35
  413c95:	test   eax,0x42fc612a
  413c9a:	jne    0x413d00
  413c9c:	xchg   edx,eax
  413c9d:	call   0xbb25f179
  413ca2:	mov    ebx,0x2a7127cf
  413ca7:	or     eax,0xd6535950
  413cac:	xchg   esi,eax
  413cad:	push   esp
  413cae:	dec    ebp
  413caf:	push   edi
  413cb0:	and    ch,BYTE PTR ds:0x75fc461f
  413cb6:	js     0x413cfb
  413cb8:	push   0x67af3841
  413cbd:	out    0xad,al
  413cbf:	neg    DWORD PTR [ebx-0x18716dcd]
  413cc5:	jne    0x413c63
  413cc7:	jb     0x413ce5
  413cc9:	seto   BYTE PTR [eax+0x5bf48943]
  413cd0:	stos   BYTE PTR es:[edi],al
  413cd1:	pop    edx
  413cd2:	pop    es
  413cd3:	inc    esi
  413cd4:	pop    ebx
  413cd5:	mov    edx,0xc039f42
  413cda:	cs mov ecx,0x21ecf9c9
  413ce0:	pop    eax
  413ce1:	into   
  413ce2:	mov    bh,0xcb
  413ce4:	xor    esp,0xffffffa9
  413ce7:	rol    DWORD PTR [eax-0x7e05c5e9],cl
  413ced:	xor    ebp,DWORD PTR [ebp+0x30]
  413cf0:	scas   al,BYTE PTR es:[edi]
  413cf1:	push   edi
  413cf2:	push   edi
  413cf3:	pusha  
  413cf4:	fld    TBYTE PTR [edx]
  413cf6:	add    BYTE PTR [edx],bl
  413cf8:	outs   dx,BYTE PTR ds:[esi]
  413cf9:	xchg   ebp,eax
  413cfa:	rcl    BYTE PTR ds:0x23f5f78d,0x50
  413d01:	inc    ecx
  413d02:	mov    eax,DWORD PTR [eax+0x75]
  413d05:	in     al,0xd8
  413d07:	mov    esp,0xc1fbbb12
  413d0c:	mov    edx,0x3c8a29a2
  413d11:	jmp    0x413d0f
  413d13:	mov    ch,0xfb
  413d15:	inc    ebx
  413d16:	stos   DWORD PTR es:[edi],eax
  413d17:	add    eax,ebp
  413d19:	or     eax,0x28318ec9
  413d1e:	outs   dx,BYTE PTR ds:[esi]
  413d1f:	inc    eax
  413d20:	jge    0x413cf2
  413d22:	clc    
  413d23:	adc    eax,0x9b2c820b
  413d28:	and    al,0xab
  413d2a:	mov    esp,0x9daec9be
  413d2f:	jnp    0x413d96
  413d31:	leave  
  413d32:	(bad)  
  413d33:	cmp    eax,0x49eb4441
  413d38:	lea    eax,[ebp-0x2d]
  413d3b:	(bad)  
  413d3c:	inc    edi
  413d3d:	pop    es
  413d3e:	inc    esp
  413d3f:	bound  edx,QWORD PTR [eax+0x1a8bc92f]
  413d45:	pop    edi
  413d46:	xchg   ebp,eax
  413d47:	ds cmc 
  413d49:	fadd   DWORD PTR [edi-0x212601e4]
  413d4f:	ds xchg edi,eax
  413d51:	xor    al,BYTE PTR ds:0x32de2ca1
  413d57:	sbb    bh,dh
  413d59:	push   ds
  413d5a:	inc    esp
  413d5b:	pop    ss
  413d5c:	pop    ebp
  413d5d:	loope  0x413d7d
  413d5f:	(bad)  
  413d60:	push   eax
  413d61:	sahf   
  413d62:	cmp    cl,BYTE PTR [edi]
  413d64:	add    DWORD PTR [esi+ecx*1+0x44bb19b3],ebx
  413d6b:	enter  0xe8f4,0xc8
  413d6f:	das    
  413d70:	rcr    DWORD PTR [edx+0x6e8fe949],0x8d
  413d77:	arpl   WORD PTR [edx+0x26],ax
  413d7a:	inc    ebp
  413d7b:	retf   
  413d7c:	inc    edx
  413d7d:	sub    eax,0x5b4304da
  413d82:	lods   eax,DWORD PTR ds:[esi]
  413d83:	xchg   dl,ch
  413d85:	(bad)  
  413d86:	push   ecx
  413d87:	test   eax,0xea310802
  413d8c:	xor    al,0x20
  413d8e:	mov    dl,0xdc
  413d90:	test   DWORD PTR [edi],esi
  413d92:	push   esi
  413d93:	xchg   esp,eax
  413d94:	loopne 0x413dd0
  413d96:	push   ebp
  413d97:	xlat   BYTE PTR ds:[ebx]
  413d98:	test   al,0x9
  413d9a:	xor    BYTE PTR [ecx],cl
  413d9c:	test   eax,0x63bddfab
  413da1:	les    ebx,FWORD PTR ds:0xd2c136a5
  413da7:	inc    esp
  413da8:	retf   0x3228
  413dab:	pop    edx
  413dac:	inc    esp
  413dad:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413dae:	sub    ebp,ebx
  413db0:	stos   DWORD PTR es:[edi],eax
  413db1:	cmp    al,0xf5
  413db3:	pop    eax
  413db4:	and    bl,BYTE PTR [edi]
  413db6:	or     al,BYTE PTR [eax+eiz*1+0x68]
  413dba:	cmp    al,0xe1
  413dbc:	repnz sub eax,0xdeab698b
  413dc2:	fild   DWORD PTR [esi-0x3b]
  413dc5:	cmp    BYTE PTR [ecx],al
  413dc7:	pop    ds
  413dc8:	bound  esi,QWORD PTR [ecx-0x3eb570f7]
  413dce:	loop   0x413e0c
  413dd0:	xlat   BYTE PTR ds:[ebx]
  413dd1:	fadd   DWORD PTR [edx]
  413dd3:	or     cl,ch
  413dd5:	adc    DWORD PTR [ebx+0x2a2d614f],ebx
  413ddb:	cmc    
  413ddc:	call   0x1e9ea65c
  413de1:	inc    DWORD PTR [edx+0x22441bb5]
  413de7:	xor    dl,BYTE PTR [eax+ebp*8+0x87f2789]
  413dee:	pop    edi
  413def:	jbe    0x413e5d
  413df1:	mov    ch,0x80
  413df3:	les    esp,FWORD PTR [esi+esi*8]
  413df6:	aam    0xaf
  413df8:	jg     0x413e58
  413dfa:	pop    ds
  413dfb:	gs push ss
  413dfd:	dec    edx
  413dfe:	cmp    eax,0xc71c64a3
  413e03:	inc    DWORD PTR [ebx+0x1948c3ea]
  413e09:	jg     0x413e0d
  413e0b:	out    0x51,al
  413e0d:	scas   al,BYTE PTR es:[edi]
  413e0e:	adc    ecx,edx
  413e10:	leave  
  413e11:	xchg   ecx,eax
  413e13:	dec    ebx
  413e14:	adc    eax,0x864c5959
  413e19:	jae    0x413e97
  413e1b:	adc    BYTE PTR [eax-0x49377594],0x96
  413e22:	fs cmp esp,edx
  413e25:	std    
  413e26:	jg     0x413ea4
  413e28:	or     al,0x63
  413e2a:	jg     0x413e12
  413e2c:	push   edi
  413e2d:	mov    edx,0x29ac636a
  413e32:	xchg   edx,eax
  413e33:	pop    ebp
  413e34:	cmp    edx,DWORD PTR [ebx+edx*8-0x75]
  413e38:	fs inc esi
  413e3a:	fsubr  QWORD PTR [ebx-0xc]
  413e3d:	add    DWORD PTR [ebp+0x45],0xb8f44bb5
  413e44:	or     BYTE PTR [ebx-0x13],bh
  413e47:	std    
  413e48:	mov    edx,0xe4ff431c
  413e4d:	aad    0x60
  413e4f:	xchg   BYTE PTR [ebx+ebx*2],cl
  413e52:	iret   
  413e53:	inc    ebp
  413e54:	pop    ebp
  413e55:	ins    BYTE PTR es:[edi],dx
  413e56:	ds (bad) 
  413e58:	mov    ebp,0xaa2cd389
  413e5d:	retf   
  413e5e:	jge    0x413e7c
  413e60:	fisttp DWORD PTR [edx-0x31]
  413e63:	aaa    
  413e64:	push   edi
  413e65:	aad    0x78
  413e67:	loope  0x413e15
  413e69:	push   ds
  413e6a:	ret    0x4341
  413e6d:	pop    ds
  413e6e:	sub    bl,0x67
  413e71:	sti    
  413e72:	pop    ss
  413e73:	dec    edi
  413e74:	(bad)  
  413e75:	rol    DWORD PTR [edi+edx*4],1
  413e78:	rcl    edi,cl
  413e7a:	add    esi,DWORD PTR [ebx-0x2f]
  413e7d:	aad    0xa7
  413e7f:	in     al,0x16
  413e81:	inc    edx
  413e82:	xor    eax,0x8711fd59
  413e87:	lea    ecx,[ebp+0x619a0526]
  413e8d:	nop
  413e8e:	push   0xe7b2eb54
  413e93:	push   0xd44d0ead
  413e98:	or     DWORD PTR [eax+0x6b],esp
  413e9b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413e9c:	outs   dx,DWORD PTR ds:[esi]
  413e9d:	and    BYTE PTR [eax-0x6d],dh
  413ea0:	or     ch,dh
  413ea2:	pushf  
  413ea3:	sar    esi,0xf2
  413ea6:	shl    DWORD PTR [eax],cl
  413ea8:	add    al,0x6c
  413eaa:	retf   
  413eab:	test   BYTE PTR [esi],0x43
  413eae:	stc    
  413eaf:	jno    0x413e49
  413eb1:	ins    DWORD PTR es:[edi],dx
  413eb2:	pushw  0x2fc
  413eb6:	ja     0x413e85
  413eb8:	lds    esi,FWORD PTR [edx]
  413eba:	outs   dx,DWORD PTR ds:[esi]
  413ebb:	add    al,0x8e
  413ebd:	jo     0x413ecf
  413ebf:	out    dx,eax
  413ec0:	inc    esp
  413ec1:	push   edi
  413ec2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413ec3:	adc    eax,0xe19d6e98
  413ec8:	pop    esp
  413ec9:	and    BYTE PTR [ebx+0x76],0xd1
  413ecd:	es jne 0x413ea6
  413ed0:	ins    BYTE PTR es:[edi],dx
  413ed1:	xchg   DWORD PTR [edi],ebp
  413ed3:	int    0x63
  413ed5:	(bad)  
  413ed6:	lock adc al,0x6f
  413ed9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413eda:	sbb    ah,BYTE PTR [ecx]
  413edc:	clc    
  413edd:	mov    BYTE PTR [eax],dh
  413edf:	cmp    DWORD PTR [esi+0x29],esi
  413ee2:	jle    0x413f1e
  413ee4:	out    0x53,eax
  413ee6:	nop
  413ee7:	lock fwait
  413ee9:	jle    0x413e78
  413eeb:	jmp    FWORD PTR [ebp+esi*8+0x69d956be]
  413ef2:	pop    edx
  413ef3:	jl     0x413e88
  413ef5:	fdivr  st(0),st
  413ef7:	push   edx
  413ef8:	pusha  
  413ef9:	push   cs
  413efa:	push   es
  413efb:	les    esi,FWORD PTR [ecx]
  413efd:	test   eax,0x2af9195c
  413f02:	scas   eax,DWORD PTR es:[edi]
  413f03:	mov    eax,ds:0x23d5c5a3
  413f08:	sub    ah,bl
  413f0a:	add    ebx,DWORD PTR [edx+0x2]
  413f0d:	test   al,0xdd
  413f0f:	add    ebp,eax
  413f11:	mov    al,ds:0xe2913715
  413f16:	repz sub ebx,DWORD PTR [ebp+0x1]
  413f1a:	pop    ds
  413f1b:	or     eax,0xfcc3cbe5
  413f20:	stc    
  413f21:	push   ecx
  413f22:	nop
  413f23:	mov    bh,bh
  413f25:	sub    eax,0xe9cafb2f
  413f2a:	mov    gs,esi
  413f2c:	push   ds
  413f2d:	mov    eax,ds:0xe505271e
  413f32:	xor    dl,BYTE PTR [ebx-0x3df5ac3b]
  413f38:	fcomp  st(7)
  413f3a:	dec    edi
  413f3b:	push   0x32
  413f3d:	loope  0x413ec5
  413f3f:	cmp    al,0x12
  413f41:	jmp    0x413f31
  413f43:	jge    0x413f85
  413f45:	aam    0x5b
  413f47:	jecxz  0x413fab
  413f49:	test   BYTE PTR [eax+0x5c],cl
  413f4c:	mov    ah,0xbc
  413f4e:	lods   al,BYTE PTR ds:[esi]
  413f4f:	lds    eax,FWORD PTR [edx+0x26]
  413f52:	push   esp
  413f53:	fimul  WORD PTR [ebx+ecx*8-0x51]
  413f57:	adc    al,0x91
  413f59:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413f5a:	adc    ebp,DWORD PTR [ebx+0x1f]
  413f5d:	fwait
  413f5e:	mov    eax,0xdb7b70a6
  413f63:	sbb    DWORD PTR [esp+eax*4-0x1b],ebx
  413f67:	cmp    eax,0xb5700563
  413f6c:	sub    eax,DWORD PTR [edi+0x3b]
  413f6f:	jns    0x413f01
  413f71:	and    al,0xa0
  413f73:	pop    ds
  413f74:	adc    al,BYTE PTR [esi+0x73]
  413f77:	jecxz  0x413f85
  413f79:	stc    
  413f7a:	loop   0x413fa1
  413f7c:	jae    0x413fc8
  413f7e:	out    0x38,eax
  413f80:	js     0x414000
  413f82:	outs   dx,BYTE PTR ds:[esi]
  413f83:	push   edx
  413f84:	push   DWORD PTR [edi-0x19]
  413f87:	pop    esp
  413f88:	mov    DWORD PTR [eax],esi
  413f8a:	les    edi,FWORD PTR [edx-0x7c508543]
  413f90:	mov    esp,0x23bace7d
  413f95:	(bad)
  413f98:	or     bh,cl
  413f9a:	retf   0x8e89
  413f9d:	inc    ebp
  413f9e:	hlt    
  413f9f:	fstp   TBYTE PTR [eax+0x1cbd37ae]
  413fa5:	mov    eax,ds:0xfeb27f7d
  413faa:	adc    eax,0x32b54f37
  413faf:	das    
  413fb0:	into   
  413fb1:	mov    al,ds:0x2ab5f274
  413fb6:	inc    esi
  413fb7:	sti    
  413fb8:	in     al,dx
  413fb9:	jp     0x413fd3
  413fbb:	call   0xe517:0xc2f7360f
  413fc2:	push   eax
  413fc3:	sub    BYTE PTR [eax],dh
  413fc5:	sar    al,0x5
  413fc8:	aad    0xe6
  413fca:	xchg   DWORD PTR [ebp-0xad4e36],edi
  413fd0:	sbb    eax,0x224e8bd0
  413fd5:	mov    ds:0x2220ac68,al
  413fda:	sub    ch,BYTE PTR [edx]
  413fdc:	adc    cl,ch
  413fde:	xlat   BYTE PTR ds:[ebx]
  413fdf:	mov    esi,0x4005c52c
  413fe4:	and    edi,DWORD PTR [ecx+0xaad516c]
  413fea:	shl    BYTE PTR [edi+0x7c],1
  413fed:	shr    DWORD PTR [ecx-0x50a2ebab],cl
  413ff3:	sub    ebp,DWORD PTR [ecx+0x76]
  413ff6:	mov    cl,0x76
  413ff8:	push   ebx
  413ff9:	mov    esi,0xb2f68f0d
  413ffe:	bound  ebx,QWORD PTR [ebx-0x7677b48b]
  414004:	popf   
  414005:	lea    ebx,[edx]
  414007:	loopne 0x413fc3
  414009:	add    al,0xde
  41400b:	xchg   DWORD PTR [eax-0x6576f8fe],ebp
  414011:	addr16 push edi
  414013:	imul   ebp,DWORD PTR [eax],0xffffffc2
  414016:	xchg   edx,eax
  414017:	sub    al,0x60
  414019:	mov    edi,0x4bc6f9f2
  41401e:	mov    ebp,0x7fbf38c2
  414023:	mov    ah,0x53
  414025:	push   eax
  414026:	adc    dl,0xba
  414029:	test   eax,0xd82c8b2
  41402e:	fnstsw WORD PTR [ecx]
  414030:	fldcw  WORD PTR [edi]
  414032:	test   BYTE PTR [esi+ebp*4-0x4f],bh
  414036:	pop    ebx
  414037:	fadd   QWORD PTR [esi-0x5f]
  41403a:	dec    DWORD PTR [edx+0x35eac597]
  414040:	mov    ch,BYTE PTR [edx-0x3b]
  414043:	pushf  
  414044:	dec    edi
  414045:	call   0x75cf7839
  41404a:	pop    es
  41404b:	aas    
  41404c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41404d:	jbe    0x414090
  41404f:	push   esi
  414050:	lds    eax,FWORD PTR [ebx-0x54fbb645]
  414056:	xchg   ecx,eax
  414057:	sub    ch,cl
  414059:	retf   0x497e
  41405c:	or     BYTE PTR [eax-0x3e],0x24
  414060:	xchg   ecx,eax
  414061:	mov    ds:0xbee002e,eax
  414066:	push   esi
  414067:	ja     0x6d61686d
  41406d:	jg     0x41403d
  41406f:	and    al,cl
  414071:	test   BYTE PTR [edi+0x1c],dh
  414074:	push   ds
  414075:	arpl   WORD PTR [ebx],si
  414077:	sti    
  414078:	out    dx,al
  414079:	mov    al,ds:0xef5656ca
  41407e:	test   eax,0x991087c8
  414083:	leave  
  414084:	cdq    
  414085:	pop    edi
  414086:	nop
  414087:	ficomp DWORD PTR [ebx+0x74447ebb]
  41408d:	in     al,dx
  41408e:	ins    BYTE PTR es:[edi],dx
  41408f:	xor    DWORD PTR [esi+ebx*4-0x4],edx
  414093:	mov    dh,0xa9
  414095:	mov    esp,0x7260a2e8
  41409a:	jecxz  0x414066
  41409c:	mov    edi,0xd12ab840
  4140a1:	add    BYTE PTR [eax],bl
  4140a3:	mov    ebx,0x5ef950d7
  4140a8:	xor    al,0xf4
  4140aa:	dec    esi
  4140ab:	aaa    
  4140ac:	nop
  4140ad:	xchg   ebp,eax
  4140ae:	mov    esp,0x8bb7843e
  4140b3:	push   esi
  4140b4:	jnp    0x414096
  4140b6:	cmc    
  4140b7:	ret    
  4140b8:	int3   
  4140b9:	nop
  4140ba:	push   edi
  4140bb:	jns    0x4140b5
  4140bd:	inc    ecx
  4140be:	or     DWORD PTR [ecx],ecx
  4140c0:	mov    al,bh
  4140c2:	mov    ds:0x84ac1bae,eax
  4140c7:	mov    edx,DWORD PTR [ebx-0x5e862dd]
  4140cd:	call   0x2d4c:0x4e65b8c
  4140d4:	jnp    0x414140
  4140d6:	and    BYTE PTR [esi+0x34bcd305],cl
  4140dc:	add    BYTE PTR cs:[ecx],bh
  4140df:	sahf   
  4140e0:	shr    BYTE PTR [esp+ecx*8-0x5cbaeb1d],0x63
  4140e8:	xchg   BYTE PTR [ecx],ch
  4140ea:	test   DWORD PTR [ebp-0x7a9b9c67],eax
  4140f0:	jmp    FWORD PTR [esi]
  4140f2:	sbb    BYTE PTR [ebx+edx*1+0x16],0x92
  4140f7:	pop    ebx
  4140f8:	sub    al,0x56
  4140fa:	fisub  WORD PTR [esi]
  4140fc:	outs   dx,DWORD PTR ds:[esi]
  4140fd:	push   ss
  4140fe:	enter  0xbb9f,0xd3
  414102:	pop    es
  414103:	inc    esp
  414104:	(bad)  
  414105:	iret   
  414106:	jo     0x4140a2
  414108:	mov    edx,0x5e81f6df
  41410d:	shr    DWORD PTR [edx],1
  41410f:	stos   BYTE PTR es:[edi],al
  414110:	(bad)  
  414111:	add    BYTE PTR [edx+0x29],ch
  414114:	push   ebx
  414115:	inc    esp
  414116:	shl    BYTE PTR [ebx-0x331cd503],1
  41411c:	scas   eax,DWORD PTR es:[edi]
  41411d:	sub    al,0x88
  41411f:	jl     0x41417e
  414121:	mov    ?,WORD PTR [edx+0x61a51e76]
  414127:	jbe    0x414103
  414129:	cmp    BYTE PTR [esi+ebx*2+0x6ed1daea],cl
  414130:	pop    ds
  414131:	adc    eax,0xc5d62834
  414136:	mov    ebp,DWORD PTR [ecx-0x32cc289e]
  41413c:	push   cs
  41413d:	jecxz  0x414177
  41413f:	in     al,0x50
  414141:	pop    eax
  414142:	adc    bh,dh
  414144:	adc    eax,0x5792e7fe
  414149:	fld    DWORD PTR [ebp+edx*1+0x39790a1c]
  414150:	fs jecxz 0x4140ec
  414153:	test   DWORD PTR [ebx+0x29],edi
  414156:	fld    QWORD PTR [ecx-0x80]
  414159:	push   ecx
  41415a:	mul    BYTE PTR [eax]
  41415c:	shl    DWORD PTR [edx-0x3d979710],1
  414162:	popf   
  414163:	mov    bh,0xed
  414165:	pusha  
  414166:	je     0x4141c6
  414168:	loopne 0x414168
  41416a:	int    0x6f
  41416c:	jb     0x414196
  41416e:	stos   BYTE PTR es:[edi],al
  41416f:	call   0x8d40:0x354e3bff
  414176:	xchg   edx,eax
  414177:	loope  0x41418c
  414179:	dec    esp
  41417a:	addr16 dec esi
  41417c:	dec    esp
  41417d:	imul   eax,DWORD PTR [esi+0x612b60e8],0xfffffff7
  414184:	jmp    eax
  414186:	inc    esi
  414187:	mov    fs:0x2d399dbe,eax
  41418d:	sbb    al,0x50
  41418f:	inc    ebx
  414190:	and    esp,ecx
  414192:	xor    DWORD PTR [edi+ebp*1-0x63],esi
  414196:	pop    es
  414197:	jl     0x414178
  414199:	pop    es
  41419a:	scas   eax,DWORD PTR es:[edi]
  41419b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41419c:	in     eax,0xab
  41419e:	dec    ebp
  41419f:	cli    
  4141a0:	adc    cl,BYTE PTR [ebx-0x5f]
  4141a3:	inc    edx
  4141a4:	fdivp  st(4),st
  4141a6:	ror    DWORD PTR [ebx+0x58],0xdf
  4141aa:	dec    ebx
  4141ab:	test   al,0x65
  4141ad:	inc    edx
  4141ae:	lods   al,BYTE PTR ds:[esi]
  4141af:	mov    ds:0x93529d9,eax
  4141b4:	pushf  
  4141b5:	iret   
  4141b6:	int3   
  4141b7:	xchg   edi,eax
  4141b8:	or     bl,BYTE PTR [ecx+eax*4]
  4141bb:	jge    0x4141c3
  4141bd:	adc    bl,BYTE PTR [edx+0x3]
  4141c0:	repnz leave 
  4141c2:	lea    esp,ds:0x81035ad7
  4141c8:	xlat   BYTE PTR ds:[ebx]
  4141c9:	(bad)  
  4141ca:	dec    ecx
  4141cb:	mov    al,0x88
  4141cd:	in     eax,0x72
  4141cf:	cwde   
  4141d0:	sub    al,0x35
  4141d2:	mov    ch,0x47
  4141d4:	and    DWORD PTR [esi+0x6599becd],esp
  4141da:	add    BYTE PTR [edx+0x418aff42],cl
  4141e0:	and    DWORD PTR [esi-0x34d71b14],0xd0403c0a
  4141ea:	pop    ss
  4141eb:	into   
  4141ec:	pop    ebp
  4141ed:	jno    0x4141ea
  4141ef:	adc    eax,ebp
  4141f1:	lahf   
  4141f2:	jecxz  0x414270
  4141f4:	dec    edx
  4141f5:	xor    BYTE PTR [ecx+ebx*2],dh
  4141f8:	add    BYTE PTR [ebp-0x24],ah
  4141fb:	mov    bh,BYTE PTR [ebp-0x159d60b5]
  414201:	ret    
  414202:	xchg   esi,eax
  414203:	push   edx
  414204:	mov    bl,0xc0
  414206:	push   edi
  414207:	push   ecx
  414208:	inc    edx
  414209:	xor    BYTE PTR [ebp+0x6d],al
  41420c:	dec    ecx
  41420d:	std    
  41420e:	out    dx,al
  41420f:	hlt    
  414210:	fisttp QWORD PTR [esi+0xc09e159]
  414216:	inc    edx
  414217:	retf   0x754
  41421a:	stos   DWORD PTR es:[edi],eax
  41421b:	loop   0x4141d8
  41421d:	hlt    
  41421e:	pop    edi
  41421f:	cs je  0x414238
  414222:	dec    BYTE PTR [edx+esi*8+0x2c]
  414226:	cmp    BYTE PTR ds:0x69c6686a,bh
  41422c:	fwait
  41422d:	mov    eax,ds:0xaa0137b4
  414232:	sub    esp,DWORD PTR [ecx-0x79c601c2]
  414238:	jmp    0x41421d
  41423a:	fdivr  DWORD PTR [edx+eax*2-0x128a689a]
  414241:	dec    ebp
  414242:	in     eax,dx
  414243:	ret    0x5d5d
  414246:	bound  ebp,QWORD PTR [ecx+0x37]
  414249:	inc    ebp
  41424a:	wrmsr  
  41424c:	js     0x4142aa
  41424e:	(bad)  
  41424f:	cmp    eax,0x40d8ec6
  414254:	dec    esi
  414255:	fbld   TBYTE PTR [ecx-0xb0a10f4]
  41425b:	or     DWORD PTR [edx+0x58],esp
  41425e:	inc    esp
  41425f:	sub    eax,0x30970f1d
  414264:	cmp    cl,BYTE PTR [edx-0x7d918fd1]
  41426a:	add    al,cl
  41426c:	mov    ebx,0x59d4d631
  414271:	cmp    eax,0x5995cf9e
  414276:	(bad)  
  414277:	stc    
  414278:	mov    ah,0x6e
  41427a:	mov    ebp,0xca7352aa
  41427f:	sub    DWORD PTR [esi-0x3912df78],ecx
  414285:	test   eax,0x8382b065
  41428a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41428b:	fsub   QWORD PTR [ebp-0x3f]
  41428e:	sub    DWORD PTR [eax-0x42],esp
  414291:	xchg   BYTE PTR [ebx],cl
  414293:	xchg   BYTE PTR [ecx+0x3a627134],bh
  414299:	mov    dh,0xb3
  41429b:	pop    eax
  41429c:	int    0x3d
  41429e:	cld    
  41429f:	rol    DWORD PTR [edx+0x8],0x13
  4142a3:	and    edi,DWORD PTR [ebp+ecx*2-0x79]
  4142a7:	repnz push ss
  4142a9:	inc    edi
  4142aa:	xchg   edi,eax
  4142ab:	mov    esi,0xa264358c
  4142b0:	or     BYTE PTR fs:[edx+esi*2-0x4f61d4b],dh
  4142b8:	xor    DWORD PTR [eax-0x74],esi
  4142bb:	int    0xc
  4142bd:	xor    BYTE PTR [ecx+0x5e],ch
  4142c0:	iret   
  4142c1:	pop    edx
  4142c2:	mov    ecx,DWORD PTR [ecx+0x7e]
  4142c5:	stos   DWORD PTR es:[edi],eax
  4142c6:	neg    ah
  4142c8:	mov    ah,0x94
  4142ca:	test   eax,0xd9e5f29c
  4142cf:	sbb    ebx,ebp
  4142d1:	lods   eax,DWORD PTR ds:[esi]
  4142d2:	mov    bl,0x7f
  4142d4:	stos   BYTE PTR es:[edi],al
  4142d5:	sub    ecx,ebx
  4142d7:	lods   eax,DWORD PTR ds:[esi]
  4142d8:	int    0xa6
  4142da:	cmp    DWORD PTR [ecx+0x57],ebx
  4142dd:	test   al,bl
  4142df:	(bad)  
  4142e0:	in     eax,dx
  4142e1:	mov    ebx,DWORD PTR [esi+0x1b9fa1]
  4142e7:	repz push edi
  4142e9:	repz in al,dx
  4142eb:	std    
  4142ec:	scas   eax,DWORD PTR es:[edi]
  4142ed:	sbb    edx,DWORD PTR [edx+0x16aa16d7]
  4142f3:	jecxz  0x4142e5
  4142f5:	jecxz  0x41431a
  4142f7:	adc    ch,BYTE PTR [edx+0x3]
  4142fa:	jmp    0xae4a1297
  4142ff:	in     al,dx
  414300:	ins    DWORD PTR es:[edi],dx
  414301:	mov    edi,0x241d9294
  414306:	(bad)  
  414307:	jnp    0x414362
  414309:	loope  0x4142d2
  41430b:	sbb    eax,0x43dc4335
  414310:	pushf  
  414311:	mov    dh,0x5d
  414313:	mov    ah,BYTE PTR [esi-0x53]
  414316:	or     DWORD PTR [esi-0x69d6040b],edi
  41431c:	mov    eax,ds:0xa478d364
  414321:	sub    BYTE PTR [eax+eax*2],bl
  414324:	push   ss
  414325:	sti    
  414326:	push   esi
  414327:	xchg   al,al
  414329:	ds dec ebp
  41432b:	mov    ?,WORD PTR ds:0xc8af541b
  414331:	push   edx
  414332:	icebp  
  414333:	sub    bh,dl
  414335:	imul   esp,DWORD PTR [ebx+0x59b05e90],0xfc0fc56f
  41433f:	xchg   ch,bl
  414341:	and    eax,0xb7e90ce1
  414346:	stos   DWORD PTR es:[edi],eax
  414347:	lea    ebx,[edx-0x72a5bcf2]
  41434d:	test   al,0xa6
  41434f:	je     0x41433a
  414351:	xor    ebp,edi
  414353:	mov    al,ds:0xbdea5cb9
  414358:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414359:	or     esi,edi
  41435b:	adc    al,0xeb
  41435d:	jbe    0x4143b3
  41435f:	jp     0x414311
  414361:	xor    edx,DWORD PTR [ebx]
  414363:	and    al,0xff
  414365:	jns    0x41438f
  414367:	lods   eax,DWORD PTR ds:[esi]
  414368:	xor    eax,0xe88e4c19
  41436d:	stos   BYTE PTR es:[edi],al
  41436e:	aas    
  41436f:	push   cs
  414370:	add    esi,DWORD PTR [edi-0x65]
  414373:	dec    edx
  414374:	and    DWORD PTR [ebx-0x3c],edx
  414377:	in     eax,dx
  414378:	sub    dl,BYTE PTR [ebp-0x59]
  41437b:	les    ebx,FWORD PTR [esi+edi*1-0x16]
  41437f:	push   esp
  414380:	fidivr WORD PTR ds:0x4d3cb058
  414386:	(bad)  
  414388:	(bad)  
  41438a:	sub    edi,DWORD PTR [eax-0x16]
  41438d:	adc    eax,0xb364083d
  414392:	inc    edx
  414393:	adc    ah,dl
  414395:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414396:	cmp    al,0x80
  414398:	add    al,0xdb
  41439a:	or     eax,0x6674df10
  41439f:	cmc    
  4143a0:	push   esi
  4143a1:	(bad)  
  4143a2:	jmp    0xb22b14d8
  4143a7:	push   ds
  4143a8:	xor    DWORD PTR [eax+0x1cba13ba],eax
  4143ae:	mov    bh,0x73
  4143b0:	loop   0x41441e
  4143b2:	pushf  
  4143b3:	jmp    0xd290328e
  4143b8:	pop    ecx
  4143b9:	out    dx,eax
  4143ba:	push   ebx
  4143bb:	add    DWORD PTR [eax-0x1159c840],ebx
  4143c1:	(bad)  
  4143c2:	rcl    BYTE PTR ds:0xccc4ff7d,1
  4143c8:	pop    es
  4143c9:	push   edx
  4143ca:	jne    0x4143e4
  4143cc:	lods   eax,DWORD PTR ds:[esi]
  4143cd:	adc    al,0xd
  4143cf:	push   ecx
  4143d0:	fwait
  4143d1:	dec    ecx
  4143d2:	movs   WORD PTR es:[edi],WORD PTR ds:[esi]
  4143d4:	hlt    
  4143d5:	repnz mov DWORD PTR [ebx],ebx
  4143d8:	mov    al,ds:0xefcc58b8
  4143dd:	sub    eax,0x9fc37262
  4143e2:	sub    al,BYTE PTR [eax+0x5418b23d]
  4143e8:	std    
  4143e9:	and    al,0xfc
  4143eb:	sub    al,0xf6
  4143ed:	xchg   edi,eax
  4143ee:	pusha  
  4143ef:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4143f0:	fisttp WORD PTR ss:[ecx+esi*4]
  4143f4:	ins    BYTE PTR es:[edi],dx
  4143f5:	add    ecx,ebp
  4143f7:	pushf  
  4143f8:	dec    ebp
  4143f9:	test   eax,0xf00c7e50
  4143fe:	cld    
  4143ff:	jmp    0x414450
  414401:	mov    edi,0x9a2eefd6
  414406:	mov    bh,0xa9
  414408:	(bad)  
  41440a:	and    ch,BYTE PTR fs:[edi+0x585264c]
  414411:	es or  eax,0x86ed6078
  414417:	jp     0x41441a
  414419:	out    dx,al
  41441a:	nop
  41441b:	xchg   edi,eax
  41441c:	jae    0x4143df
  41441e:	daa    
  41441f:	loope  0x414462
  414421:	popa   
  414422:	or     al,0x2e
  414424:	jno    0x414483
  414426:	adc    al,0x55
  414428:	cmc    
  414429:	dec    esi
  41442a:	cmc    
  41442b:	fadd   st,st(3)
  41442d:	mov    ebx,DWORD PTR [ecx-0x67]
  414430:	mov    bl,0x5a
  414432:	imul   BYTE PTR [esi+esi*1-0x4f]
  414436:	call   0x46c1:0x4252d33b
  41443d:	std    
  41443e:	scas   al,BYTE PTR es:[edi]
  41443f:	push   ecx
  414440:	shr    DWORD PTR ds:0x8e5242b7,cl
  414446:	sbb    al,0x15
  414448:	(bad)  [edi+0x38]
  41444b:	adc    cl,BYTE PTR [esp+ebx*2]
  41444e:	jecxz  0x4144af
  414450:	popf   
  414451:	push   0x2e
  414453:	shr    DWORD PTR [eax-0x7f07d816],0xbb
  41445a:	or     ah,BYTE PTR [edx]
  41445c:	dec    ebp
  41445d:	pop    ds
  41445e:	pop    ebp
  41445f:	inc    esp
  414460:	das    
  414461:	xor    DWORD PTR [ebx-0xf09fde3],esi
  414467:	lods   al,BYTE PTR ds:[esi]
  414468:	data16 jl 0x41449f
  41446b:	adc    DWORD PTR [eax+eiz*1-0x58],ebp
  41446f:	adc    dl,BYTE PTR [ebp-0x41770ecf]
  414475:	sbb    al,0x27
  414477:	or     BYTE PTR [esi+0x4523e158],bh
  41447d:	mov    gs,WORD PTR [ecx+0x786e68c2]
  414483:	xchg   DWORD PTR [ecx+eiz*4+0x6f],esi
  414487:	mov    dl,0xb7
  414489:	scas   al,BYTE PTR es:[edi]
  41448a:	sub    BYTE PTR [eax],ch
  41448c:	jle    0x414486
  41448e:	mov    BYTE PTR [eax],bh
  414490:	int    0xcd
  414492:	dec    esi
  414493:	push   ecx
  414494:	fs cmp al,0x5f
  414497:	aad    0xa0
  414499:	push   esp
  41449a:	dec    ebp
  41449b:	(bad)  
  41449c:	leave  
  41449d:	ins    BYTE PTR es:[edi],dx
  41449e:	cmp    DWORD PTR [edi-0x50],edx
  4144a1:	add    eax,0x15d22c36
  4144a6:	loop   0x4144a5
  4144a8:	sub    ebp,esp
  4144aa:	fsubp  st(0),st
  4144ac:	sub    al,0x12
  4144ae:	jno    0x4144aa
  4144b0:	mov    ecx,0xe2853338
  4144b5:	sub    eax,0x7afad2fd
  4144ba:	jne    0x414442
  4144bc:	jae    0x4144d0
  4144be:	ret    0xcae1
  4144c1:	ja     0x414512
  4144c3:	mov    bh,0xff
  4144c5:	or     eax,0xa9b62eeb
  4144ca:	bound  ebx,QWORD PTR [ecx]
  4144cc:	in     al,dx
  4144cd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4144ce:	sub    al,0x3e
  4144d0:	sbb    al,0x5f
  4144d2:	jmp    0x7a86dee4
  4144d7:	aaa    
  4144d8:	dec    ecx
  4144d9:	push   ebx
  4144da:	into   
  4144db:	gs jbe 0x41448b
  4144de:	mov    ds:0x143803fe,eax
  4144e3:	mov    ch,dh
  4144e5:	cld    
  4144e6:	sar    DWORD PTR [ebx+0x82aa081],0x78
  4144ed:	je     0x4144ce
  4144ef:	xchg   DWORD PTR [edi-0x29],esi
  4144f2:	test   dl,al
  4144f4:	cmp    al,0x3f
  4144f6:	adc    ax,0x638b
  4144fa:	cmp    edx,DWORD PTR [ecx+ebp*8]
  4144fd:	adc    bh,BYTE PTR [edi-0x66]
  414500:	mov    dl,0x96
  414502:	pusha  
  414503:	mov    eax,0xc38da870
  414508:	aaa    
  414509:	out    0x47,eax
  41450b:	nop
  41450c:	mov    ebx,0x5b13e79a
  414511:	pusha  
  414512:	and    eax,0x1b1b5fd5
  414517:	xor    BYTE PTR [esi+0x5e],ch
  41451a:	enter  0x9fde,0xc7
  41451e:	test   DWORD PTR ds:0x86da7b03,eax
  414524:	pop    esp
  414525:	dec    edi
  414526:	dec    edx
  414527:	or     al,0xbc
  414529:	adc    DWORD PTR [esi+0x5e],0x83511f92
  414530:	scas   al,BYTE PTR es:[edi]
  414531:	out    0x8f,al
  414533:	and    esi,esp
  414535:	push   ebx
  414536:	and    al,BYTE PTR [ebp-0xa]
  414539:	pop    ebx
  41453a:	pushf  
  41453b:	fst    st(1)
  41453d:	cmp    DWORD PTR [ebp-0x35],edx
  414540:	stc    
  414541:	add    cl,BYTE PTR [ecx-0x612f3ce4]
  414547:	mov    bl,BYTE PTR [ebp-0x518e854e]
  41454d:	sti    
  41454e:	bound  esp,QWORD PTR [edi+0x22]
  414551:	ins    BYTE PTR es:[edi],dx
  414552:	dec    edx
  414553:	dec    edx
  414554:	sbb    BYTE PTR [ebp+0x41ca2273],dl
  41455a:	dec    eax
  41455b:	jmp    0xb2ce6806
  414560:	call   DWORD PTR [esi-0x348979eb]
  414566:	imul   ebp,esp,0xffffff81
  414569:	lock (bad) 
  41456b:	sti    
  41456c:	sbb    edi,DWORD PTR [edx+0x78]
  41456f:	rcr    cl,1
  414571:	jl     0x4145d1
  414573:	nop
  414574:	xor    DWORD PTR [ebp+0x1b],ecx
  414577:	jmp    0x414537
  414579:	es ror bh,cl
  41457c:	and    ebp,DWORD PTR [ecx+0x17]
  41457f:	dec    eax
  414580:	mov    bh,0xc2
  414582:	add    eax,0x641b47b9
  414587:	xor    BYTE PTR [ebp+0x461827d8],0x1
  41458e:	jmp    0xbbd8:0x6c95ab09
  414595:	pop    ebx
  414596:	and    BYTE PTR [edi+0x48],ch
  414599:	cmc    
  41459a:	add    DWORD PTR [ebp-0x34],edi
  41459d:	test   BYTE PTR [esi-0x59dcffff],bl
  4145a3:	arpl   WORD PTR [eax],dx
  4145a5:	mov    DWORD PTR ds:0xd8cb299e,esi
  4145ab:	pop    es
  4145ac:	inc    edx
  4145ad:	sbb    al,0x5c
  4145af:	jmp    0x4145a0
  4145b1:	scas   al,BYTE PTR es:[edi]
  4145b2:	jecxz  0x41462d
  4145b4:	sub    edi,esi
  4145b6:	hlt    
  4145b7:	repz gs mov bh,0xc4
  4145bb:	mov    ch,0xc1
  4145bd:	adc    edx,ebx
  4145bf:	call   0x11ae:0x8e5ef6ee
  4145c6:	pop    ebx
  4145c7:	xor    al,0x8f
  4145c9:	loope  0x414551
  4145cb:	fistp  QWORD PTR [ecx+0x1e]
  4145ce:	mov    dh,0xed
  4145d1:	add    ebp,DWORD PTR [eax-0x1d9ccb2b]
  4145d7:	(bad)  
  4145d8:	or     dh,al
  4145da:	sub    al,0xa6
  4145dc:	retf   
  4145dd:	add    DWORD PTR [ebx-0x8],0xffffffdd
  4145e1:	adc    eax,0x3c3b957c
  4145e6:	pop    ebx
  4145e7:	sub    eax,0x72c93705
  4145ec:	dec    ecx
  4145ed:	dec    edi
  4145ee:	(bad)  
  4145ef:	imul   BYTE PTR [ebx+0xc]
  4145f2:	cdq    
  4145f3:	aad    0x5f
  4145f5:	fdiv   DWORD PTR ds:0x59385f5a
  4145fb:	call   0xf737d78e
  414600:	inc    esp
  414601:	fst    DWORD PTR [edx+edx*8-0x16]
  414605:	rcl    DWORD PTR [esi],1
  414607:	xor    eax,0x2a0aa397
  41460c:	add    eax,0xa9579b4c
  414611:	add    BYTE PTR [eax+0x3dcb291b],bh
  414617:	mov    ds:0x7880ead3,eax
  41461c:	xchg   edx,eax
  41461d:	jle    0x4145aa
  41461f:	dec    esi
  414620:	or     bh,bh
  414622:	xchg   ecx,eax
  414623:	dec    eax
  414624:	outs   dx,BYTE PTR ds:[esi]
  414625:	xchg   ebx,eax
  414626:	popa   
  414627:	cmp    al,0xac
  414629:	xchg   edx,eax
  41462a:	daa    
  41462b:	mov    di,0xb834
  41462f:	pop    ebx
  414630:	call   0x131e547f
  414635:	mov    ah,0x6c
  414637:	imul   esp,DWORD PTR [ebx],0x6
  41463a:	gs or  al,0x6b
  41463d:	phaddd mm5,QWORD PTR [ecx-0x42b11cf0]
  414645:	and    al,0x27
  414647:	and    dh,dl
  414649:	jnp    0x414601
  41464b:	mov    al,ds:0xcbb54b44
  414650:	mov    edx,DWORD PTR [edx-0x2460d901]
  414656:	pop    ebp
  414657:	mov    bl,0x8e
  414659:	adc    ah,0xa3
  41465c:	pop    esp
  41465d:	dec    ebx
  41465e:	cld    
  41465f:	mov    ah,0x31
  414661:	int3   
  414662:	outs   dx,DWORD PTR ds:[esi]
  414663:	outs   dx,BYTE PTR ds:[esi]
  414664:	mov    ebx,0xe88b9ae3
  414669:	push   cs
  41466a:	mov    ds:0x7bb69fec,al
  41466f:	add    edx,DWORD PTR [eax+0xae4afad]
  414675:	xchg   esp,eax
  414676:	push   esp
  414677:	(bad)
  41467a:	imul   edx,DWORD PTR [edx],0xf348038
  414680:	js     0x414619
  414682:	and    DWORD PTR [ebx],esi
  414684:	call   0x3835afe0
  414689:	cmp    al,0xd8
  41468b:	jae    0x414668
  41468d:	in     al,dx
  41468e:	pop    ecx
  41468f:	(bad)  
  414690:	jmp    0x9dc9c7f6
  414695:	inc    esi
  414696:	or     esi,esp
  414698:	retf   0xfdb1
  41469b:	xor    eax,0x841ec9d1
  4146a0:	jmp    0x41465a
  4146a2:	and    esi,esp
  4146a4:	into   
  4146a5:	push   es
  4146a6:	inc    edi
  4146a7:	test   BYTE PTR [edi],bh
  4146a9:	pop    eax
  4146aa:	xchg   esi,eax
  4146ab:	repz dec ebx
  4146ad:	call   0xf870:0xb4c119d4
  4146b4:	dec    ecx
  4146b5:	leave  
  4146b6:	sti    
  4146b7:	xchg   DWORD PTR ss:[eax+0x22059b40],ebp
  4146be:	cdq    
  4146bf:	pop    esi
  4146c0:	cdq    
  4146c1:	mov    bh,BYTE PTR [ebp+0x4b]
  4146c4:	mov    eax,0xa924ddd5
  4146c9:	and    ch,BYTE PTR [edi+0x56]
  4146cc:	(bad)  
  4146cd:	aas    
  4146ce:	add    DWORD PTR ds:0xac7051bb,esp
  4146d4:	cli    
  4146d5:	call   0x351e:0xa752b026
  4146dc:	jp     0x414722
  4146de:	xor    DWORD PTR [ebx+0x3],eax
  4146e1:	shl    BYTE PTR [esi+edi*2],0xfe
  4146e5:	lds    edx,FWORD PTR [edx-0x2c84f3d9]
  4146eb:	push   ds
  4146ec:	adc    bh,bl
  4146ee:	in     eax,0xc8
  4146f0:	imul   bl
  4146f2:	sahf   
  4146f3:	xadd   BYTE PTR [esi+eiz*2+0x5],dh
  4146f8:	les    ecx,FWORD PTR [ebx+0x8d050c6]
  4146fe:	mov    al,ds:0x5f491c35
  414703:	sbb    dl,BYTE PTR [edi+0x29]
  414706:	xchg   esp,eax
  414707:	and    al,BYTE PTR [eax]
  414709:	inc    ebx
  41470b:	fistp  QWORD PTR [ebp-0xc11eba2]
  414711:	fcmovbe st,st(4)
  414713:	push   edi
  414714:	fcomi  st,st(3)
  414716:	adc    ch,BYTE PTR [edi]
  414718:	inc    esi
  414719:	cmp    eax,0x775d8228
  41471e:	sub    esi,DWORD PTR [esi-0x52]
  414721:	(bad)  
  414722:	in     al,dx
  414723:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414724:	or     ebx,DWORD PTR [esi]
  414726:	sub    ah,al
  414728:	ss push es
  41472a:	aad    0x9
  41472c:	jge    0x4146c4
  41472e:	jno    0x4146c2
  414730:	adc    eax,0x486bb306
  414735:	sbb    eax,0x5c3784e5
  41473a:	xor    dh,dl
  41473c:	cmp    BYTE PTR [edi-0x59937b77],bl
  414742:	jmp    0x4146fa
  414744:	popa   
  414745:	std    
  414746:	jae    0x414768
  414748:	ss jmp 0x4146fa
  41474b:	int    0x63
  41474d:	in     al,0x27
  41474f:	leave  
  414750:	mov    bl,0xbd
  414752:	rcl    DWORD PTR [eax-0x5e8837ba],1
  414758:	dec    esi
  414759:	(bad)  
  41475a:	add    al,ah
  41475c:	(bad)  
  41475e:	fiadd  DWORD PTR [ebp+0x62]
  414761:	ror    DWORD PTR [ebp+0x310f7cf2],0x2f
  414768:	scas   eax,DWORD PTR es:[edi]
  414769:	xor    BYTE PTR [eax+ebx*1+0x77],al
  41476d:	xchg   edx,eax
  41476e:	or     cl,cl
  414770:	push   0xffffff84
  414772:	jo     0x4146fe
  414774:	lea    ebp,[edi+eiz*4-0x43e69595]
  41477b:	add    ebx,DWORD PTR [edi+edx*8]
  41477e:	and    ah,BYTE PTR [edi-0x56331c5d]
  414784:	je     0x4147ed
  414786:	dec    edi
  414787:	xchg   cl,ah
  414789:	leave  
  41478a:	retf   
  41478b:	sbb    eax,0x1dc3caac
  414790:	fstp   DWORD PTR [ebx-0x44]
  414793:	lahf   
  414794:	jno    0x414809
  414796:	xchg   ebp,eax
  414797:	jp     0x4147b4
  414799:	mov    BYTE PTR [eax+esi*4],al
  41479c:	pushf  
  41479d:	(bad)  
  41479e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41479f:	aad    0x3
  4147a1:	and    BYTE PTR [ecx],bl
  4147a3:	add    eax,0x848f18f5
  4147a8:	mov    ds:0xc32df586,al
  4147ad:	add    cl,BYTE PTR ds:0x8f5a7f7c
  4147b3:	pop    ecx
  4147b4:	mov    eax,ds:0x401e58a6
  4147b9:	inc    edx
  4147ba:	into   
  4147bb:	pop    ebp
  4147bc:	mov    edx,0xf8a3335e
  4147c1:	dec    esp
  4147c2:	mov    BYTE PTR [edi],cl
  4147c4:	das    
  4147c5:	cmc    
  4147c6:	xor    eax,0xb8183e7c
  4147cb:	jns    0x4147cf
  4147cd:	jne    0x414791
  4147cf:	cs push edi
  4147d1:	jmp    0xd11b54df
  4147d6:	jo     0x4147f5
  4147d8:	mov    fs,WORD PTR [edi+0x6c]
  4147db:	inc    DWORD PTR [ecx+edi*1]
  4147de:	pop    edx
  4147df:	mov    ebp,0x967de274
  4147e4:	push   ebp
  4147e5:	pusha  
  4147e6:	ins    DWORD PTR es:[edi],dx
  4147e7:	scas   eax,DWORD PTR es:[edi]
  4147e8:	mov    bl,0x88
  4147ea:	xchg   esi,eax
  4147eb:	repz mov ecx,0x3242f5b4
  4147f1:	inc    esp
  4147f2:	sbb    al,0xd9
  4147f4:	gs cmp bl,bh
  4147f7:	mov    eax,DWORD PTR [ebx-0x433baf55]
  4147fd:	or     BYTE PTR [edx],al
  4147ff:	adc    eax,0xdbf8c243
  414804:	cld    
  414805:	xor    eax,0x394f9f4c
  41480a:	add    ch,al
  41480c:	jle    0x414834
  41480e:	mov    WORD PTR [ecx],?
  414810:	(bad)  
  414812:	xor    edi,DWORD PTR [ebx-0x35]
  414815:	sbb    DWORD PTR [ecx],0x43325843
  41481b:	mov    ah,0xbd
  41481d:	inc    esi
  41481e:	stos   BYTE PTR es:[edi],al
  41481f:	lahf   
  414820:	sub    al,0x37
  414822:	gs dec edx
  414824:	xchg   ecx,eax
  414825:	mov    ah,0x1
  414827:	ss out dx,al
  414829:	fwait
  41482a:	rcl    BYTE PTR [edx+0x498ea0bc],cl
  414830:	jp     0x414805
  414832:	xor    esi,edx
  414834:	or     BYTE PTR [ecx+ecx*1],al
  414837:	sbb    esi,eax
  414839:	mov    ebx,DWORD PTR [ebx-0x2a]
  41483c:	nop
  41483d:	das    
  41483e:	dec    ecx
  41483f:	pusha  
  414840:	in     eax,0x4d
  414842:	add    al,0xee
  414844:	aam    0x6b
  414846:	in     al,dx
  414847:	pop    es
  414848:	loopne 0x414827
  41484a:	sub    BYTE PTR [esp+ebx*2+0x45],bl
  41484e:	mov    WORD PTR [edi+0x2026018a],ds
  414854:	jp     0x41481c
  414856:	jl     0x41480f
  414858:	(bad)  
  414859:	push   eax
  41485a:	or     esp,eax
  41485c:	pop    dx
  41485e:	popa   
  41485f:	sub    bl,al
  414861:	pmaxsw mm0,QWORD PTR [ecx+0x123babab]
  414868:	cdq    
  414869:	outs   dx,BYTE PTR ds:[esi]
  41486a:	xor    ebx,DWORD PTR [edx+ecx*2-0x71]
  41486e:	(bad)  [eax]
  414870:	arpl   WORD PTR [eax],dx
  414872:	or     ch,dh
  414874:	jl     0x41482b
  414876:	mov    dh,0x99
  414878:	ror    BYTE PTR [edi-0x71d4609],1
  41487e:	es pop ds
  414880:	pop    ecx
  414881:	jo     0x414816
  414883:	inc    eax
  414884:	inc    edi
  414885:	(bad)  
  414886:	enter  0x1ecf,0x52
  41488a:	jge    0x414907
  41488c:	or     ebp,ebx
  41488e:	add    cl,bh
  414890:	fcom   DWORD PTR [eax-0x3e]
  414893:	cli    
  414894:	sbb    DWORD PTR [edi+edi*4+0x4497715a],edx
  41489b:	jmp    0xb1530bca
  4148a0:	inc    edi
  4148a1:	and    dl,BYTE PTR [eax-0x79]
  4148a4:	pop    ebp
  4148a5:	push   cs
  4148a6:	in     al,0x61
  4148a8:	mov    WORD PTR [eax+ebx*1-0x6ee2a414],ds
  4148af:	pop    edx
  4148b0:	xchg   DWORD PTR [ebp-0x6b],edi
  4148b3:	jge    0x4148b3
  4148b5:	cmp    dl,0xea
  4148b8:	jmp    0xb9b8:0x654e2ba4
  4148bf:	leave  
  4148c0:	loope  0x4148bd
  4148c2:	lock xchg esi,eax
  4148c4:	dec    esi
  4148c5:	sub    ch,0x7b
  4148c8:	out    dx,eax
  4148c9:	push   ss
  4148ca:	imul   edx,DWORD PTR [edi-0xb],0xea618a90
  4148d1:	sar    ecx,cl
  4148d3:	dec    ebp
  4148d4:	inc    ebx
  4148d5:	cld    
  4148d6:	sti    
  4148d7:	sub    eax,0x7679bc8
  4148dc:	jb     0x4148fb
  4148de:	sar    BYTE PTR [edi-0x19e62bc9],cl
  4148e4:	jnp    0x4148e0
  4148e6:	and    bl,dh
  4148e8:	rol    DWORD PTR [eax],0xd5
  4148eb:	popf   
  4148ec:	loopne 0x414916
  4148ee:	lds    esi,FWORD PTR [edi+0x5c]
  4148f1:	fwait
  4148f2:	stos   BYTE PTR es:[edi],al
  4148f3:	dec    eax
  4148f4:	inc    esp
  4148f5:	adc    DWORD PTR [edi+eax*1],esi
  4148f8:	daa    
  4148f9:	xchg   esp,eax
  4148fa:	sub    esp,DWORD PTR [ecx+0x7f43cf5a]
  414900:	(bad)  
  414901:	jmp    0x4148fe
  414903:	lods   al,BYTE PTR ds:[esi]
  414904:	xchg   esp,eax
  414905:	jne    0x41492e
  414907:	pop    edx
  414908:	hlt    
  414909:	mov    ds:0x5c4e72bd,al
  41490e:	int    0xa4
  414910:	xchg   ebx,eax
  414911:	or     DWORD PTR [esi+eiz*8+0x45d07f57],ecx
  414918:	push   ebx
  414919:	adc    al,0x62
  41491b:	pop    edx
  41491c:	pop    esp
  41491d:	out    dx,eax
  41491e:	mov    bl,0xba
  414920:	jg     0x414900
  414922:	(bad)  
  414923:	outs   dx,BYTE PTR ds:[esi]
  414924:	cmp    BYTE PTR [esp+eax*1],dl
  414927:	nop
  414928:	test   DWORD PTR [ebx+0x32],0xf167bcfd
  41492f:	cmp    eax,0xe4dbda26
  414934:	jae    0x41492b
  414936:	mov    al,ds:0x483c61c
  41493b:	pop    edx
  41493c:	sbb    eax,ebp
  41493e:	mov    cl,0xd4
  414940:	cs loopne 0x4148ed
  414943:	js     0x414918
  414945:	iret   
  414946:	and    DWORD PTR [edi],ebx
  414948:	dec    edx
  414949:	add    al,BYTE PTR [ebx]
  41494b:	fcomp  DWORD PTR [esi+0x3976078f]
  414951:	mov    ds:0xff278482,al
  414956:	xor    eax,0x5f13f906
  41495b:	jge    0x41493c
  41495d:	jno    0x414957
  41495f:	dec    edx
  414960:	pop    ecx
  414961:	popf   
  414962:	jns    0x414977
  414964:	dec    edi
  414965:	ins    DWORD PTR es:[edi],dx
  414966:	inc    ecx
  414967:	and    esp,DWORD PTR [eax-0xf]
  41496a:	dec    ebx
  41496b:	cmc    
  41496c:	out    dx,al
  41496d:	cwde   
  41496e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41496f:	clc    
  414970:	inc    ecx
  414971:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414972:	xor    eax,0x7df74815
  414977:	or     dl,BYTE PTR [ebx+0x31]
  41497a:	jbe    0x4149a8
  41497c:	jmp    0x41493e
  41497e:	push   esp
  41497f:	xor    ah,dl
  414981:	outs   dx,DWORD PTR ds:[esi]
  414982:	pop    esp
  414983:	dec    esp
  414984:	fimul  WORD PTR [ecx+0x4d]
  414987:	push   eax
  414988:	bound  ecx,QWORD PTR [ecx+eiz*8+0x26]
  41498c:	fdivr  st(1),st
  41498e:	(bad)  [ecx-0x6fb4e5b1]
  414994:	jo     0x414a0e
  414996:	mov    esp,0x48384d28
  41499b:	mov    gs,WORD PTR [ebp+0x4b]
  41499e:	sahf   
  41499f:	test   eax,0x6dab4a1f
  4149a4:	inc    ebx
  4149a5:	int3   
  4149a6:	pop    esp
  4149a7:	cli    
  4149a8:	loopne 0x4149a3
  4149aa:	adc    BYTE PTR [edx+0x21],0xc
  4149ae:	fcom   QWORD PTR [edi-0x7b]
  4149b1:	pop    ds
  4149b2:	pop    esi
  4149b3:	push   0x5fd1d104
  4149b8:	in     al,0x59
  4149ba:	retf   0x1adc
  4149bd:	pop    ebp
  4149be:	push   esp
  4149bf:	imul   ebx,ecx,0xfffffff2
  4149c2:	mov    eax,ds:0xc761fbb6
  4149c7:	ret    
  4149c8:	clc    
  4149c9:	dec    ebp
  4149ca:	mov    esp,0x1304d331
  4149cf:	pop    esp
  4149d0:	je     0x414960
  4149d2:	mov    eax,ds:0xf97a05c6
  4149d7:	ja     0x414a56
  4149d9:	scas   eax,DWORD PTR es:[edi]
  4149da:	test   eax,0xd704d24d
  4149df:	addr16 jmp 0x4149eb
  4149e2:	(bad)
  4149e5:	loop   0x414a3c
  4149e7:	cmp    ebx,DWORD PTR [edi+esi*4]
  4149ea:	mov    DWORD PTR [ebx+0x501a7a9f],edi
  4149f0:	dec    esp
  4149f1:	sbb    dl,BYTE PTR [edi+0x3cb314fa]
  4149f7:	xlat   BYTE PTR ds:[ebx]
  4149f8:	xchg   ebx,eax
  4149f9:	xchg   ebx,eax
  4149fa:	aam    0x3
  4149fc:	sub    bh,dh
  4149fe:	dec    edx
  4149ff:	jmp    0x414a0b
  414a01:	pop    ebx
  414a02:	in     al,dx
  414a03:	ret    0x6396
  414a06:	mov    ebx,0xae1b9f0a
  414a0b:	aas    
  414a0c:	dec    eax
  414a0d:	dec    eax
  414a0e:	(bad)  
  414a0f:	mov    al,ds:0xbc395378
  414a14:	xlat   BYTE PTR ds:[ebx]
  414a15:	inc    edx
  414a16:	pop    edx
  414a17:	cmp    eax,0x6eeb6462
  414a1c:	lock sar DWORD PTR [ecx-0x4e10c0a2],cl
  414a23:	sbb    ah,BYTE PTR [edx+0x45]
  414a26:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414a27:	dec    esi
  414a28:	outs   dx,DWORD PTR ds:[esi]
  414a29:	dec    eax
  414a2a:	(bad)
  414a2d:	cdq    
  414a2e:	scas   eax,DWORD PTR es:[edi]
  414a2f:	and    DWORD PTR [ecx-0x79],ebp
  414a32:	pop    ds
  414a33:	out    0x14,al
  414a35:	and    ebp,0xac91bee2
  414a3b:	fidivr WORD PTR [edx-0x6dc520d6]
  414a41:	clc    
  414a42:	fdivr  st(4),st
  414a44:	add    al,0x4c
  414a46:	xchg   ecx,eax
  414a47:	or     DWORD PTR [edi-0x5f],ebx
  414a4a:	push   esi
  414a4b:	in     al,dx
  414a4c:	mov    ebx,0x5071bda6
  414a51:	jg     0x414a2e
  414a53:	outs   dx,DWORD PTR ds:[esi]
  414a54:	adc    BYTE PTR [eax-0x45],ch
  414a57:	sahf   
  414a58:	xor    eax,0xc8506006
  414a5d:	and    bl,BYTE PTR [ecx+eiz*8-0x3d]
  414a61:	(bad)  
  414a62:	iret   
  414a63:	int    0x31
  414a65:	fwait
  414a66:	mov    ah,0xc3
  414a68:	push   esi
  414a69:	jae    0x414aa9
  414a6b:	push   es
  414a6c:	mov    ebx,0xd3f71143
  414a71:	push   esp
  414a72:	cdq    
  414a73:	and    bl,0xa
  414a76:	pop    ebx
  414a78:	lods   eax,DWORD PTR ds:[esi]
  414a79:	sbb    BYTE PTR [edi],bl
  414a7b:	lods   eax,DWORD PTR ds:[esi]
  414a7c:	mov    al,ds:0xe6ddc0c7
  414a81:	iret   
  414a82:	cmp    al,0x6c
  414a84:	sbb    BYTE PTR ds:0x8eeb752d,ch
  414a8a:	bound  edx,QWORD PTR [ecx-0x75]
  414a8d:	imul   esi,DWORD PTR [edi],0x6c
  414a90:	or     DWORD PTR [ebp+0x4046418d],esi
  414a96:	push   edi
  414a97:	cmc    
  414a98:	fndisi(8087 only) 
  414a9a:	sbb    DWORD PTR [eax-0x1d1f645e],ebx
  414aa0:	adc    DWORD PTR es:[esi],edi
  414aa3:	cli    
  414aa4:	fnsave [ebx-0x56]
  414aa7:	adc    DWORD PTR [eax+0x3d3f5583],ebp
  414aad:	push   edi
  414aae:	pop    ds
  414aaf:	cmp    al,0x35
  414ab1:	dec    edi
  414ab2:	adc    eax,0xf0299d9a
  414ab7:	inc    edi
  414ab8:	mov    dh,0x33
  414aba:	dec    ebx
  414abb:	out    0xb0,al
  414abd:	int3   
  414abe:	adc    edx,ebp
  414ac0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414ac1:	icebp  
  414ac2:	add    dh,BYTE PTR ss:[esi+0x6b0877c4]
  414ac9:	mov    esp,0x63067a17
  414ace:	dec    ebp
  414acf:	adc    eax,0xe4eb1fc2
  414ad4:	xchg   DWORD PTR [edx-0xe8eb1e],eax
  414ada:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414adb:	fwait
  414adc:	mov    esp,0xa21ef2e2
  414ae1:	pop    esi
  414ae3:	or     eax,0x486699bf
  414ae8:	jno    0x414acb
  414aea:	shl    ebp,0x72
  414aed:	aas    
  414aee:	jmp    0x5e78d1b5
  414af3:	sbb    DWORD PTR ds:0xff3c381d,ecx
  414af9:	and    DWORD PTR [ebp+0x29],esp
  414afc:	mov    WORD PTR [edx],?
  414afe:	inc    ecx
  414aff:	ins    BYTE PTR es:[edi],dx
  414b00:	and    ecx,DWORD PTR [edx+0x13]
  414b03:	in     al,dx
  414b04:	ficomp WORD PTR [edx-0x18ce4e9b]
  414b0a:	sub    al,0xa0
  414b0c:	xchg   BYTE PTR [esi+0x2708fdb2],cl
  414b12:	inc    esp
  414b13:	mov    ecx,0x422d68c7
  414b18:	rcl    DWORD PTR [ebx+0x0],cl
  414b1b:	sub    DWORD PTR [eax],edx
  414b1d:	or     ecx,DWORD PTR [edx+0x6f0a03ea]
  414b23:	mov    eax,0x4f797afe
  414b28:	push   edx
  414b29:	and    eax,0x38f48c0d
  414b2e:	nop
  414b2f:	fidiv  WORD PTR [edi-0x78d5287b]
  414b35:	test   DWORD PTR ds:0xb8f362b,edi
  414b3b:	pop    ebp
  414b3c:	lea    esp,[ebp+0xe]
  414b3f:	mov    cl,BYTE PTR ds:0xf20db11c
  414b45:	(bad)  
  414b46:	imul   esp,DWORD PTR [edx-0x60e03e7e],0x3d
  414b4d:	setns  dh
  414b50:	int    0x1b
  414b52:	call   0x949b:0x2b0ceddb
  414b59:	jbe    0x414bbd
  414b5b:	sahf   
  414b5c:	xchg   ecx,eax
  414b5d:	pop    esi
  414b5e:	and    al,0x9f
  414b60:	inc    esi
  414b61:	mov    ch,0xaf
  414b63:	xchg   ebx,eax
  414b64:	xchg   edi,eax
  414b65:	bound  esi,QWORD PTR [edi+0x15271845]
  414b6b:	and    ecx,DWORD PTR [edx]
  414b6d:	(bad)  
  414b6e:	pop    eax
  414b6f:	test   DWORD PTR [ebp-0x4778c483],esi
  414b75:	fcom   QWORD PTR [ecx]
  414b77:	lods   eax,DWORD PTR ds:[esi]
  414b78:	sahf   
  414b79:	scas   al,BYTE PTR es:[edi]
  414b7a:	inc    esp
  414b7b:	clc    
  414b7c:	cmovp  esi,DWORD PTR [esi+0x6d276e09]
  414b83:	ror    DWORD PTR [edx],0xdf
  414b86:	lahf   
  414b87:	inc    ebp
  414b88:	mov    esi,0x5bce9eee
  414b8d:	mov    cl,0xf8
  414b8f:	mov    al,0x14
  414b91:	inc    esp
  414b92:	sub    ecx,DWORD PTR [esi]
  414b94:	xor    dl,BYTE PTR [ecx+0x40]
  414b97:	hlt    
  414b98:	mov    ds:0x82c85d81,eax
  414b9d:	push   esp
  414b9e:	pushf  
  414b9f:	and    bh,BYTE PTR [edx]
  414ba1:	mov    ?,WORD PTR [edx]
  414ba3:	mov    dl,0xe2
  414ba5:	loop   0x414b3d
  414ba7:	jb     0x414b56
  414ba9:	(bad)  
  414baa:	test   eax,0x76407651
  414baf:	ret    
  414bb0:	test   BYTE PTR [eax+0xf],0xb3
  414bb4:	int    0x59
  414bb6:	clc    
  414bb7:	or     bl,0x97
  414bba:	(bad)  
  414bbb:	fisttp QWORD PTR ds:0x77429542
  414bc1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414bc2:	lock or ah,dh
  414bc5:	xor    ebp,esi
  414bc7:	pop    esi
  414bc8:	sub    al,0xa2
  414bca:	sub    dl,BYTE PTR [edx]
  414bcc:	fcom   QWORD PTR [edx]
  414bce:	or     eax,0xb3318ee8
  414bd3:	mov    bl,0x79
  414bd5:	cmp    ebp,edi
  414bd7:	xor    BYTE PTR [ebx],bl
  414bd9:	sub    edx,DWORD PTR [edi+0x2a]
  414bdc:	adc    al,BYTE PTR [eax+ecx*8]
  414bdf:	cmp    DWORD PTR [eax+0x1b372af8],ecx
  414be5:	mov    al,ds:0x8c74fa58
  414bea:	or     dh,dl
  414bec:	test   ebx,0x3b50d9b9
  414bf2:	in     al,0x8e
  414bf4:	gs mov edx,0x703269c5
  414bfa:	cmp    BYTE PTR [esi],ah
  414bfc:	push   edi
  414bfd:	fnstcw WORD PTR ds:0xc2a52a4a
  414c03:	rol    BYTE PTR [edx-0x503e9eda],0xd4
  414c0a:	push   ebx
  414c0b:	pop    ecx
  414c0c:	or     edi,DWORD PTR [ebx+0x4d]
  414c0f:	xchg   DWORD PTR [ecx+0x53a76663],esp
  414c15:	test   BYTE PTR [eax+0x3ee10ab],bl
  414c1b:	adc    edi,DWORD PTR [eax-0x51b407ef]
  414c21:	sub    al,0x8d
  414c23:	fistp  QWORD PTR ds:0xedc15177
  414c29:	popa   
  414c2a:	in     eax,0xfe
  414c2c:	push   ebp
  414c2d:	xchg   esp,eax
  414c2e:	and    cl,BYTE PTR [esi+0x41e55d3f]
  414c34:	and    al,0xda
  414c36:	jp     0x414c4e
  414c38:	and    eax,0xc79afc15
  414c3d:	mov    ah,0xca
  414c3f:	push   ebx
  414c40:	xchg   ebp,eax
  414c41:	sub    bh,BYTE PTR [ebp+0x29bd8f3a]
  414c47:	nop
  414c48:	adc    eax,0xcb0b5a52
  414c4d:	cmp    al,0x28
  414c4f:	loopne 0x414cca
  414c51:	sbb    al,0x0
  414c53:	push   cs
  414c54:	stc    
  414c55:	push   ds
  414c56:	sub    BYTE PTR [ebx-0x1d680174],dh
  414c5c:	imul   edi,DWORD PTR [edi],0xbdfe5926
  414c62:	stos   DWORD PTR es:[edi],eax
  414c63:	add    DWORD PTR [eax-0x14],ebp
  414c66:	jl     0x414c08
  414c68:	sahf   
  414c69:	jecxz  0x414c87
  414c6b:	jmp    0xee79:0x8f915f7c
  414c72:	sbb    eax,0x1f42c74c
  414c77:	ret    
  414c78:	xchg   ecx,eax
  414c79:	mov    edx,DWORD PTR [edx-0x23]
  414c7c:	rol    BYTE PTR [ebx],1
  414c7e:	sahf   
  414c7f:	inc    ebx
  414c80:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414c81:	dec    ecx
  414c82:	out    dx,eax
  414c83:	xor    DWORD PTR cs:[edx+edx*2],esp
  414c87:	int3   
  414c88:	test   eax,0x9ed2b44d
  414c8d:	or     ch,al
  414c8f:	xor    eax,0x3dbd3478
  414c94:	jp     0x414d0d
  414c96:	cmp    eax,0x29408190
  414c9b:	cdq    
  414c9c:	pop    es
  414c9d:	loop   0x414c92
  414c9f:	nop
  414ca0:	sbb    eax,0x3762d439
  414ca5:	mov    edx,0xf1b77147
  414caa:	dec    eax
  414cab:	xchg   esi,eax
  414cac:	adc    al,0x97
  414cae:	mov    BYTE PTR [eax-0x26],al
  414cb1:	add    eax,0x1c31c650
  414cb6:	adc    eax,0x967386eb
  414cbb:	out    dx,al
  414cbc:	push   eax
  414cbd:	and    BYTE PTR [ebp+0x66],bh
  414cc0:	jmp    DWORD PTR [esi+0x7f3c0955]
  414cc6:	mov    edx,0xfcf20e3f
  414ccb:	dec    ebx
  414ccc:	dec    ebp
  414ccd:	fsub   st,st(2)
  414ccf:	inc    edx
  414cd0:	popf   
  414cd1:	fdivr  st(2),st
  414cd3:	arpl   WORD PTR [edi+0x75],dx
  414cd6:	repnz inc ecx
  414cd8:	adc    al,0x65
  414cdb:	lds    esp,FWORD PTR [edi+0x5c]
  414cde:	dec    edi
  414cdf:	cmp    eax,0xcab89276
  414ce4:	push   0x9ec939de
  414ce9:	gs xchg edi,eax
  414ceb:	(bad)  
  414ced:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414cee:	pop    esi
  414cef:	add    edi,DWORD PTR [esi]
  414cf1:	pop    ss
  414cf2:	in     eax,0xc0
  414cf4:	sub    edi,edi
  414cf6:	hlt    
  414cf7:	mov    al,ds:0x3896f4b4
  414cfc:	cmp    edi,DWORD PTR [ebx]
  414cfe:	xor    ch,BYTE PTR [ebp+0x2a9ee865]
  414d04:	xlat   BYTE PTR ds:[ebx]
  414d05:	push   0x6b0d7051
  414d0a:	(bad)  
  414d0b:	adc    DWORD PTR [ecx+ebx*8+0x1143606a],edx
  414d12:	and    ch,BYTE PTR [esi+0x5f79d91f]
  414d18:	cs xchg ecx,eax
  414d1a:	adc    esi,DWORD PTR [edx-0x5b785c7c]
  414d20:	mov    edx,0xf4f5a2ed
  414d25:	mov    bh,0x5c
  414d27:	adc    ch,ah
  414d29:	loopne 0x414d44
  414d2b:	adc    eax,0x975c60cd
  414d30:	mov    dl,0xdd
  414d32:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414d33:	leave  
  414d34:	sbb    DWORD PTR es:[ecx+0x6c0fc42e],esi
  414d3b:	pop    esp
  414d3c:	or     al,0xe6
  414d3e:	sub    bh,cl
  414d40:	xor    BYTE PTR [ebp-0x45d27e2e],bl
  414d46:	lods   al,BYTE PTR ds:[esi]
  414d47:	push   ds
  414d48:	fcmovne st,st(5)
  414d4a:	in     eax,dx
  414d4b:	add    al,0xec
  414d4d:	add    edi,DWORD PTR [ebx+0x6c]
  414d50:	push   edi
  414d51:	jecxz  0x414da6
  414d53:	out    dx,al
  414d54:	ja     0x414d45
  414d56:	lods   eax,DWORD PTR ds:[esi]
  414d57:	cmc    
  414d58:	sub    ecx,0x75
  414d5b:	add    DWORD PTR [eax],ebp
  414d5d:	push   ds
  414d5e:	or     ecx,esi
  414d60:	aam    0x67
  414d62:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414d63:	stos   DWORD PTR es:[edi],eax
  414d64:	(bad)  
  414d65:	(bad)  
  414d66:	test   al,0x1a
  414d68:	adc    ch,dl
  414d6a:	push   edx
  414d6b:	sbb    ecx,ebp
  414d6d:	xchg   ecx,eax
  414d6e:	repnz sti 
  414d70:	push   ebp
  414d71:	sahf   
  414d72:	sbb    esi,edx
  414d74:	and    BYTE PTR [edx],bl
  414d76:	lods   al,BYTE PTR ds:[esi]
  414d77:	cli    
  414d78:	pop    ss
  414d79:	inc    ebx
  414d7a:	xlat   BYTE PTR ds:[ebx]
  414d7b:	std    
  414d7c:	adc    dh,BYTE PTR [ebx-0x63]
  414d7f:	out    0x29,eax
  414d81:	cdq    
  414d82:	in     eax,0xfa
  414d84:	dec    esp
  414d85:	xchg   esi,eax
  414d86:	(bad)  
  414d87:	mov    DWORD PTR ds:0xf344c502,0x8ed6caf5
  414d91:	out    dx,al
  414d92:	fld    TBYTE PTR ds:0x1fb70050
  414d98:	cmp    BYTE PTR [ebx+0x66],dl
  414d9b:	ins    DWORD PTR es:[edi],dx
  414d9c:	dec    edx
  414d9d:	add    eax,0xb672b913
  414da2:	adc    bl,BYTE PTR [esi-0x3620c65a]
  414da8:	adc    eax,0x4e6a2b98
  414dad:	retf   0x4e66
  414db0:	ds jp  0x414d85
  414db3:	adc    al,0x8f
  414db5:	push   0xbd47c80c
  414dba:	sar    DWORD PTR [ecx+0x37],cl
  414dbd:	(bad)  
  414dbe:	jnp    0x414dc8
  414dc0:	stos   DWORD PTR es:[edi],eax
  414dc1:	daa    
  414dc2:	push   ecx
  414dc3:	push   esp
  414dc4:	jns    0x414d67
  414dc6:	pop    esi
  414dc7:	mov    al,0xb0
  414dc9:	and    bh,ch
  414dcb:	bound  ebp,QWORD PTR [ebp+0x6583d9da]
  414dd1:	sbb    bl,ch
  414dd3:	pushf  
  414dd4:	(bad)  
  414dd6:	adc    ebx,DWORD PTR [esi]
  414dd8:	xor    al,0x19
  414dda:	(bad)  
  414ddb:	and    al,0xfb
  414ddd:	xchg   edi,eax
  414dde:	and    esp,ecx
  414de0:	or     edi,DWORD PTR [eax]
  414de2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414de3:	cld    
  414de4:	aad    0x90
  414de6:	add    esi,DWORD PTR [edi]
  414de8:	shl    DWORD PTR [edi-0x7b],0xad
  414dec:	ja     0x414d80
  414dee:	sub    edx,DWORD PTR [eax]
  414df0:	dec    eax
  414df1:	out    0xef,eax
  414df3:	xor    DWORD PTR ds:0xa62976d,0x1d
  414dfa:	dec    ebx
  414dfb:	popf   
  414dfc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414dfd:	imul   ebx,DWORD PTR [ecx+edi*4+0x64],0xffffffcd
  414e02:	js     0x414e15
  414e04:	ror    DWORD PTR [ecx-0x32],cl
  414e07:	test   eax,0xd847f5fd
  414e0c:	adc    BYTE PTR ds:0xd4766885,bh
  414e12:	jg     0x414e03
  414e14:	test   BYTE PTR ds:0x9f1c4e9a,ch
  414e1a:	push   es
  414e1b:	dec    edx
  414e1c:	popf   
  414e1d:	mov    ds:0x4c1b486b,eax
  414e22:	jo     0x414ddc
  414e24:	fcmovbe st,st(0)
  414e26:	push   cs
  414e27:	imul   edi,DWORD PTR [esi-0x7f],0x34
  414e2b:	loope  0x414e2c
  414e2d:	retf   
  414e2e:	gs dec edi
  414e30:	pop    ds
  414e31:	mov    DWORD PTR [ebp-0x2b13c2dd],0x6ecb9cd1
  414e3b:	adc    ah,bl
  414e3d:	mov    edx,ebp
  414e3f:	cmp    ecx,DWORD PTR [edi]
  414e41:	shl    ebp,0xc
  414e44:	in     al,dx
  414e45:	imul   BYTE PTR [ebp+0x1b]
  414e48:	adc    eax,0x58313801
  414e4d:	or     BYTE PTR [ecx+0x6f76db09],ch
  414e53:	xchg   ebp,eax
  414e54:	push   esi
  414e55:	push   esi
  414e56:	fs pop eax
  414e58:	ret    0x468b
  414e5b:	bound  esp,QWORD PTR [edx-0xcc0602f]
  414e61:	jns    0x414eb3
  414e63:	enter  0x5874,0xf7
  414e67:	in     eax,0x39
  414e69:	cmp    esp,edi
  414e6b:	repnz dec BYTE PTR [ebx+0x2708d329]
  414e72:	in     al,dx
  414e73:	adc    al,BYTE PTR [eax-0x63]
  414e76:	outs   dx,DWORD PTR ds:[esi]
  414e77:	jno    0x414ee5
  414e79:	stos   DWORD PTR es:[edi],eax
  414e7a:	sbb    al,0x2a
  414e7c:	xor    eax,DWORD PTR [ebx-0x5585dbf7]
  414e82:	mov    DWORD PTR [esi+eax*8],esi
  414e85:	icebp  
  414e86:	jno    0x414e35
  414e88:	mov    ds:0x2cb63928,al
  414e8d:	in     al,dx
  414e8e:	popf   
  414e8f:	bound  edx,QWORD PTR [esi]
  414e91:	jle    0x414eab
  414e93:	shl    dl,cl
  414e95:	push   ss
  414e96:	mov    eax,0x6da303c
  414e9b:	mov    al,0x81
  414e9d:	inc    esi
  414e9e:	fbld   TBYTE PTR [ecx-0x66549661]
  414ea4:	xchg   DWORD PTR [edx+0x225a4e3e],edi
  414eaa:	rcl    DWORD PTR [ecx+0x2b],1
  414ead:	mov    eax,DWORD PTR [ebx-0x778b5dff]
  414eb3:	out    dx,eax
  414eb4:	repnz call 0xb839:0x3720dfc4
  414ebc:	(bad)  
  414ebd:	mov    edx,0x265da229
  414ec2:	outs   dx,BYTE PTR ds:[esi]
  414ec3:	inc    ebx
  414ec4:	pushf  
  414ec5:	in     eax,0xc9
  414ec7:	push   0xfe6c302f
  414ecc:	or     ch,al
  414ece:	ds mov edx,0x3d68b671
  414ed4:	sub    bl,0x44
  414ed7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414ed8:	retf   
  414ed9:	call   0x21c2:0x46a5005f
  414ee0:	lds    esi,FWORD PTR [ebp-0x5e]
  414ee3:	in     eax,0x9b
  414ee5:	adc    eax,0xcff162fe
  414eea:	jp     0x414e94
  414eec:	jmp    0x2bcf:0x89d09084
  414ef3:	push   cs
  414ef4:	stos   DWORD PTR es:[edi],eax
  414ef5:	mov    bh,0xb7
  414ef7:	adc    ah,BYTE PTR [ecx]
  414ef9:	push   eax
  414efa:	pop    es
  414efb:	push   edi
  414efc:	(bad)  
  414efd:	jnp    0x414f56
  414eff:	mov    esp,0x961dda9e
  414f04:	lods   al,BYTE PTR ds:[esi]
  414f05:	xchg   esi,eax
  414f06:	ds out 0x84,al
  414f09:	dec    eax
  414f0a:	popf   
  414f0b:	xchg   ebp,eax
  414f0c:	(bad)
  414f0f:	add    ebx,0xffffffed
  414f12:	inc    ebp
  414f13:	cmp    al,0x90
  414f15:	jae    0x414f41
  414f17:	int3   
  414f18:	push   0x995ad732
  414f1d:	cmp    esi,ebp
  414f1f:	stc    
  414f20:	mov    dh,0x6b
  414f22:	mov    dl,BYTE PTR [esi-0x5f]
  414f25:	mov    ds:0x71ca859d,al
  414f2a:	sbb    ah,BYTE PTR [eax]
  414f2c:	mov    bh,0xee
  414f2e:	dec    edi
  414f2f:	jae    0x414f8c
  414f31:	push   0x3d
  414f33:	push   ebp
  414f34:	std    
  414f35:	addr16 push 0x85ed6f2
  414f3b:	or     eax,0xe82246a3
  414f40:	jl     0x414f50
  414f42:	mov    BYTE PTR [eax-0x6bfb62aa],ch
  414f48:	out    0x5c,al
  414f4a:	xchg   ebp,eax
  414f4b:	xchg   edx,eax
  414f4c:	push   cs
  414f4d:	push   ecx
  414f4e:	jns    0x414ee8
  414f50:	add    BYTE PTR [ebp+edi*1+0x6e],0xd0
  414f55:	lahf   
  414f56:	cmp    esi,DWORD PTR [esi]
  414f58:	adc    al,0x93
  414f5a:	cli    
  414f5b:	int    0xa9
  414f5d:	int3   
  414f5e:	jl     0x414ee7
  414f60:	add    ebp,edx
  414f62:	aad    0x61
  414f64:	dec    esp
  414f65:	inc    esi
  414f66:	sbb    BYTE PTR ds:0x1bc0ae38,bl
  414f6c:	pop    esi
  414f6d:	int3   
  414f6e:	mov    DWORD PTR [edi],ebp
  414f70:	jecxz  0x414f27
  414f72:	sbb    dh,cl
  414f74:	xchg   esp,eax
  414f75:	lea    esi,[ecx]
  414f77:	ror    BYTE PTR [edi+0x0],0xc9
  414f7b:	call   0x74f86960
  414f80:	jo     0x414f40
  414f82:	ja     0x414fff
  414f84:	pushf  
  414f85:	loopne 0x414f46
  414f87:	ins    DWORD PTR es:[edi],dx
  414f88:	push   DWORD PTR [edx+0x5b]
  414f8b:	mov    ecx,0xc29123e5
  414f90:	cwde   
  414f91:	add    BYTE PTR ds:0x2583d049,ch
  414f97:	xor    dh,dh
  414f99:	fadd   QWORD PTR ds:0x21650dcb
  414f9f:	in     eax,0xf4
  414fa1:	ds jae 0x414fb8
  414fa4:	mov    edx,0x17350d17
  414fa9:	sub    BYTE PTR [edx+ebx*1+0x3806db7b],ch
  414fb0:	xchg   ebp,eax
  414fb1:	popf   
  414fb2:	std    
  414fb3:	(bad)  
  414fb4:	jnp    0x414f58
  414fb6:	jnp    0x414fd5
  414fb8:	lea    esp,[eax+0x50164f95]
  414fbe:	fstp   TBYTE PTR [esi+0x6fe3c94e]
  414fc4:	lock mov edx,0x379feb9a
  414fca:	scas   eax,DWORD PTR es:[edi]
  414fcb:	add    esp,DWORD PTR [ebp-0x1a875681]
  414fd1:	push   ds
  414fd2:	jecxz  0x41500a
  414fd4:	(bad)  
  414fd5:	cs ins DWORD PTR es:[edi],dx
  414fd7:	lock les edx,FWORD PTR [eax+0xc1fe251]
  414fde:	pop    ds
  414fdf:	inc    ebx
  414fe0:	mov    cl,0x77
  414fe2:	push   ebx
  414fe3:	imul   edi,DWORD PTR [ecx+ebp*8+0x5691b8b5],0xcf435169
  414fee:	xchg   ebx,eax
  414fef:	jb     0x415050
  414ff1:	cmc    
  414ff2:	mov    ds:0x20b5e746,al
  414ff7:	and    DWORD PTR [edi-0x2a],eax
  414ffa:	pop    ds
  414ffb:	in     eax,0x5d
  414ffd:	xchg   edi,eax
  414ffe:	pop    esi
  414fff:	cld    
  415000:	mov    DWORD PTR [ecx+0x7a],esi
  415003:	dec    ecx
  415004:	mov    bl,0x14
  415006:	pop    edx
  415007:	add    edx,DWORD PTR [eax]
  415009:	cmp    cl,dh
  41500b:	mov    esp,0x14db1e70
  415010:	xchg   ecx,eax
  415011:	mov    WORD PTR [eax+ecx*8-0xa],?
  415015:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415016:	pop    ebp
  415017:	pop    ds
  415018:	sub    dh,BYTE PTR [edi-0x1b]
  41501b:	push   ds
  41501c:	inc    esi
  41501d:	cdq    
  41501e:	sub    eax,0xaf7d73c2
  415023:	sti    
  415024:	inc    ecx
  415025:	mov    al,ds:0x37285c5a
  41502a:	push   es
  41502b:	stos   BYTE PTR es:[edi],al
  41502c:	add    BYTE PTR [edi-0x1c],0x11
  415030:	stc    
  415031:	aaa    
  415032:	adc    BYTE PTR [eax-0xd],dl
  415035:	adc    al,0x68
  415037:	fld    TBYTE PTR [edx+0x32]
  41503a:	add    edx,DWORD PTR [ebx+0x7318d54b]
  415040:	or     DWORD PTR [esi],ebx
  415042:	cmp    DWORD PTR [ebx],esp
  415044:	sub    DWORD PTR [ebp+0x22],eax
  415047:	adc    esi,DWORD PTR [ecx]
  415049:	dec    ebx
  41504a:	pop    ecx
  41504b:	lea    esi,[eax-0x29]
  41504e:	or     ecx,DWORD PTR [edx+0x49]
  415051:	jl     0x415029
  415053:	push   ecx
  415054:	lahf   
  415055:	das    
  415056:	not    BYTE PTR [edx+eiz*8-0x6a]
  41505a:	call   0x298fec8c
  41505f:	adc    DWORD PTR [edi],esi
  415061:	repz out dx,eax
  415063:	addr16 or eax,0xb45502b4
  415069:	ror    dh,cl
  41506b:	xlat   BYTE PTR ds:[ebx]
  41506c:	popa   
  41506d:	jae    0x4150c4
  41506f:	mov    edx,0xeab14bad
  415074:	mov    esp,esp
  415076:	push   eax
  415077:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415078:	and    eax,0xea9fed13
  41507d:	stc    
  41507e:	or     eax,0x9a08cd9b
  415083:	and    eax,DWORD PTR [edi]
  415085:	das    
  415086:	scas   al,BYTE PTR es:[edi]
  415087:	add    eax,0xe588ad55
  41508c:	call   DWORD PTR [eax]
  41508e:	sysenter 
  415090:	push   0x7f
  415092:	cmp    DWORD PTR [ebx-0x57],ebp
  415095:	lock push 0x29
  415098:	mov    ah,BYTE PTR [ecx+0x29cc7cde]
  41509e:	push   ebx
  41509f:	push   ss
  4150a0:	cmp    DWORD PTR [ebx],esi
  4150a2:	ret    
  4150a3:	inc    ebp
  4150a4:	(bad)  
  4150a5:	mov    al,0x6f
  4150a7:	inc    ebx
  4150a8:	xchg   edi,eax
  4150a9:	rcl    BYTE PTR [edi],cl
  4150ab:	push   0x3d
  4150ad:	imul   esp,DWORD PTR [ebp-0xfb5b5c6],0xffffffd1
  4150b4:	(bad)  
  4150b6:	or     al,0x95
  4150b8:	add    eax,0x882742ca
  4150bd:	dec    esp
  4150be:	push   esi
  4150bf:	dec    esp
  4150c0:	and    dh,BYTE PTR [ecx-0x64166280]
  4150c6:	mov    ebx,0x5aca5f38
  4150cb:	mov    esi,0x7b91e8fb
  4150d0:	out    0xd5,eax
  4150d2:	adc    DWORD PTR [eax+0x48],ebx
  4150d5:	sub    eax,0x78192850
  4150da:	mov    eax,ds:0x47a6db15
  4150df:	inc    esp
  4150e0:	dec    edx
  4150e1:	add    al,al
  4150e3:	add    BYTE PTR [ecx-0x26c41dcc],ah
  4150e9:	fstp   DWORD PTR [eax-0x49]
  4150ec:	add    DWORD PTR [ecx-0x19],ebx
  4150ef:	sahf   
  4150f0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4150f1:	mov    ecx,0xf6ccf902
  4150f6:	jp     0x41513a
  4150f8:	sub    eax,0x7d40e247
  4150fd:	ins    BYTE PTR es:[edi],dx
  4150fe:	inc    edx
  4150ff:	jg     0x4150b2
  415101:	aas    
  415102:	cmp    dl,BYTE PTR [ebx]
  415104:	arpl   WORD PTR [esi+0x61],dx
  415107:	add    ebp,DWORD PTR [edx-0x5edc79a0]
  41510d:	inc    edx
  41510e:	sti    
  41510f:	push   ecx
  415110:	jbe    0x415152
  415112:	pop    ds
  415113:	cmp    eax,0xe302d53e
  415118:	xchg   ebp,eax
  415119:	es loopne 0x41516c
  41511c:	jp     0x41513f
  41511e:	xchg   edi,eax
  41511f:	mov    esp,0xcb4af236
  415124:	add    DWORD PTR [ebx+0x5b],esi
  415127:	or     DWORD PTR [ebp-0x72dda3a3],0xffffffec
  41512e:	jl     0x4150e4
  415130:	fbld   TBYTE PTR [esi-0x6f0bb30b]
  415136:	inc    ecx
  415137:	outs   dx,DWORD PTR ds:[esi]
  415138:	xor    DWORD PTR [ebp+0x51569073],edi
  41513e:	iret   
  41513f:	sbb    al,0xd8
  415141:	mov    al,0x2e
  415143:	dec    ebp
  415144:	dec    edi
  415145:	cmp    BYTE PTR [ebx-0x19342aa4],al
  41514b:	cmp    esi,ebp
  41514d:	dec    ebx
  41514e:	ror    BYTE PTR [ebp+0x7994aafb],1
  415154:	add    BYTE PTR [ebx*2-0xf924c40],dh
  41515b:	ja     0x4151a4
  41515d:	les    esi,FWORD PTR [ebx+0x2d]
  415160:	jg     0x4150e4
  415162:	call   0x113d9d6
  415167:	pop    ebp
  415168:	shr    ebp,0xb6
  41516b:	ja     0x41515c
  41516d:	mul    DWORD PTR [edx]
  41516f:	jp     0x4151e5
  415171:	and    ecx,DWORD PTR [edx-0x3d]
  415174:	push   ecx
  415175:	dec    edx
  415176:	and    BYTE PTR gs:0xa7e57f28,dl
  41517d:	fwait
  41517e:	mov    bh,0x6b
  415180:	test   BYTE PTR [ecx+eiz*2],bl
  415183:	fs cld 
  415185:	add    al,0xc0
  415187:	in     al,0x61
  415189:	sub    DWORD PTR [ecx-0x209dc2b9],ebx
  41518f:	into   
  415190:	jge    0x4151ea
  415192:	mov    edx,ebp
  415194:	cmp    DWORD PTR [ebp-0x60b168a6],eax
  41519a:	inc    edi
  41519b:	xabort 0xa4
  41519e:	dec    edi
  41519f:	jb     0x415178
  4151a1:	xor    DWORD PTR [esi],0x71246972
  4151a7:	xchg   esi,eax
  4151a8:	or     bl,dh
  4151aa:	(bad)  
  4151ab:	loop   0x41516c
  4151ad:	out    0x4c,eax
  4151af:	data16 and al,0x9f
  4151b2:	sub    ah,ch
  4151b4:	or     DWORD PTR [ebx+0x68],esi
  4151b7:	dec    edx
  4151b8:	mov    edi,0x733d5a89
  4151bd:	(bad)  
  4151be:	rol    BYTE PTR ds:0x351eaa0a,1
  4151c4:	aas    
  4151c5:	cmp    esp,DWORD PTR [ebx-0x4addc6e9]
  4151cb:	(bad)  
  4151cc:	shl    DWORD PTR [eax+0x7a82be66],0xa5
  4151d3:	sub    al,0xec
  4151d5:	mov    ch,0x6b
  4151d7:	daa    
  4151d8:	hlt    
  4151d9:	push   ebp
  4151da:	mov    ch,0x9d
  4151dc:	out    dx,al
  4151dd:	mov    eax,ds:0xdb6cc90a
  4151e2:	nop
  4151e3:	(bad)  
  4151e4:	enter  0x6843,0xf9
  4151e8:	sbb    esp,esi
  4151ea:	loopne 0x4151e2
  4151ec:	dec    esp
  4151ed:	hlt    
  4151ee:	mov    cl,0x96
  4151f0:	mov    ecx,0xed153a32
  4151f5:	add    ah,BYTE PTR [edi-0xd7dedd]
  4151fb:	imul   eax,DWORD PTR [eax-0x4b],0xffffffa3
  4151ff:	ret    
  415200:	cmp    eax,DWORD PTR [edx+0x2a]
  415203:	pop    ss
  415204:	xchg   edx,eax
  415205:	loope  0x415236
  415207:	into   
  415208:	rol    DWORD PTR [ebx],cl
  41520a:	adc    ch,BYTE PTR [esp+esi*8+0x13]
  41520e:	imul   esp,DWORD PTR ds:0x438088f6,0xffffffff
  415215:	test   DWORD PTR [eax-0x44],ebp
  415218:	js     0x41520b
  41521a:	pop    ecx
  41521b:	lods   eax,DWORD PTR ds:[esi]
  41521c:	int    0x44
  41521e:	pop    edi
  41521f:	push   edx
  415220:	jnp    0x415274
  415222:	inc    esi
  415223:	dec    ebx
  415224:	icebp  
  415225:	data16 je 0x415251
  415228:	js     0x4151d2
  41522a:	xchg   esp,eax
  41522b:	std    
  41522c:	sbb    ecx,esi
  41522e:	jb     0x4151d8
  415230:	(bad)  [edx]
  415232:	jp     0x41524d
  415234:	sbb    eax,DWORD PTR [edi+0x5]
  415237:	(bad)  
  415238:	cmp    DWORD PTR [esi],esi
  41523a:	xchg   ecx,eax
  41523b:	outs   dx,BYTE PTR ds:[esi]
  41523c:	out    0x1e,al
  41523e:	pop    eax
  41523f:	push   ebx
  415240:	cmp    al,0x76
  415242:	iret   
  415243:	test   al,0x18
  415245:	shl    DWORD PTR [ebx],1
  415247:	sbb    eax,0xf3bc2983
  41524c:	stos   DWORD PTR es:[edi],eax
  41524d:	xor    BYTE PTR [ebx],ch
  41524f:	les    ebp,FWORD PTR [edx]
  415251:	shl    ebp,cl
  415253:	sub    eax,0xf7bcacbd
  415258:	popa   
  415259:	mul    BYTE PTR [eax-0x3e]
  41525c:	repnz cwde 
  41525e:	outs   dx,DWORD PTR ds:[esi]
  41525f:	jo     0x4152c1
  415261:	lods   al,BYTE PTR ds:[esi]
  415262:	sbb    DWORD PTR [esi],ebp
  415264:	push   0x26
  415266:	popf   
  415267:	push   ecx
  415268:	lds    eax,FWORD PTR [eax]
  41526a:	inc    esi
  41526b:	out    dx,eax
  41526c:	pop    es
  41526d:	popf   
  41526e:	mov    BYTE PTR [ebp-0x1f],ah
  415271:	cmc    
  415272:	mov    ecx,0xc5cc9a76
  415277:	in     eax,dx
  415278:	push   esp
  415279:	retf   
  41527a:	mov    edi,0x597e032d
  41527f:	jp     0x41528e
  415281:	outs   dx,DWORD PTR ds:[esi]
  415282:	pop    ss
  415283:	lea    ebx,[edx+esi*4-0x39cc818d]
  41528a:	(bad)  
  41528b:	fist   DWORD PTR [ebx+0xf7f1a00]
  415291:	bound  esp,QWORD PTR [edx]
  415293:	add    BYTE PTR [ebp-0x59],dl
  415296:	wbinvd 
  415298:	and    dl,dh
  41529a:	pop    edi
  41529b:	outs   dx,BYTE PTR ds:[esi]
  41529c:	clc    
  41529d:	cmp    dl,BYTE PTR [ebp+ecx*2+0x153f91a8]
  4152a4:	repnz xchg esi,eax
  4152a6:	es stos BYTE PTR es:[edi],al
  4152a8:	hlt    
  4152a9:	pop    edi
  4152aa:	cmp    al,0x63
  4152ac:	adc    eax,0x40faa9dd
  4152b1:	in     eax,0x69
  4152b3:	std    
  4152b4:	lock repnz dec eax
  4152b7:	call   eax
  4152b9:	adc    BYTE PTR [ebx],dl
  4152bb:	dec    ecx
  4152bc:	jae    0x4152ce
  4152be:	push   edi
  4152bf:	ss push edx
  4152c1:	mov    ecx,0x8a0f0930
  4152c6:	ror    DWORD PTR [ebp+ecx*2+0x7],0xcf
  4152cb:	inc    esp
  4152cc:	(bad)  
  4152cd:	sub    al,0xc7
  4152cf:	bound  ecx,QWORD PTR [esp+eax*8]
  4152d2:	lahf   
  4152d3:	pop    edx
  4152d4:	stos   BYTE PTR es:[edi],al
  4152d5:	fwait
  4152d6:	imul   BYTE PTR ds:0x40872c6f
  4152dc:	je     0x4152ef
  4152de:	and    eax,0x9bb58378
  4152e3:	loop   0x41534b
  4152e5:	ins    DWORD PTR es:[edi],dx
  4152e6:	in     eax,dx
  4152e7:	xchg   DWORD PTR [ebx-0xe],esp
  4152ea:	mov    cl,0x3d
  4152ec:	loopne 0x41527a
  4152ee:	xchg   edx,eax
  4152ef:	sub    DWORD PTR [esi+0x8],0x2c6d4afb
  4152f6:	stos   DWORD PTR es:[edi],eax
  4152f7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4152f8:	leave  
  4152f9:	pop    edx
  4152fa:	scas   eax,DWORD PTR es:[edi]
  4152fb:	adc    DWORD PTR [esp+edi*8],esi
  4152fe:	fisubr WORD PTR [edx-0x37dd36f0]
  415304:	mov    edi,0x69a9880a
  415309:	mov    ah,0x25
  41530b:	popf   
  41530c:	mov    ds:0x45424797,al
  415311:	adc    BYTE PTR [esi+0x1ffff683],0x51
  415318:	add    al,0x7d
  41531a:	mov    eax,0x91ee6d06
  41531f:	xor    edx,DWORD PTR [edx]
  415321:	pushf  
  415322:	nop
  415323:	push   0x24
  415325:	lock imul ebp,DWORD PTR [esi+0x6111f657],0x49
  41532d:	mov    al,ds:0xb3681e7d
  415332:	xchg   edi,eax
  415333:	and    BYTE PTR es:[esi+0x31800e64],bl
  41533a:	lods   eax,DWORD PTR ds:[esi]
  41533b:	clc    
  41533c:	mov    esi,DWORD PTR [edx-0x6542c30]
  415342:	test   eax,0xbbd05d13
  415347:	pusha  
  415348:	fdivr  QWORD PTR [ecx+0x1ab3c239]
  41534e:	imul   edx,ebx,0x72
  415351:	mov    bh,0xbb
  415353:	lahf   
  415354:	not    BYTE PTR [edi]
  415356:	and    BYTE PTR [esi+0x3d],ch
  415359:	xchg   esp,eax
  41535a:	sbb    eax,0x150da58c
  41535f:	sbb    ecx,DWORD PTR [edi+0x51b7fbb7]
  415365:	int3   
  415366:	leave  
  415367:	mov    eax,ds:0xa6e208c5
  41536c:	jmp    0x2225:0x6ab88c19
  415373:	xchg   esi,eax
  415374:	xchg   DWORD PTR [edx],eax
  415376:	icebp  
  415377:	mov    cl,0xd3
  415379:	add    al,BYTE PTR [esi+eax*4-0x216d6755]
  415380:	or     dl,BYTE PTR fs:[eax]
  415383:	mov    DWORD PTR [eax+0x2e],ebp
  415386:	inc    ebx
  415387:	xlat   BYTE PTR ds:[ebx]
  415388:	push   ecx
  415389:	inc    ebp
  41538a:	or     dh,BYTE PTR [esi+esi*2+0x53]
  41538e:	in     eax,dx
  41538f:	sbb    al,0xec
  415391:	mov    bh,0x4c
  415393:	push   ebp
  415394:	cmp    DWORD PTR [ebx],ecx
  415396:	sub    eax,0x388d8b52
  41539b:	dec    esp
  41539c:	data16 test BYTE PTR [eax-0x1b],0xa3
  4153a1:	lods   al,BYTE PTR ds:[esi]
  4153a2:	cmp    eax,0x3c32211c
  4153a7:	pop    esp
  4153a8:	adc    al,0x77
  4153ab:	es push ebx
  4153ad:	in     eax,dx
  4153ae:	popa   
  4153af:	add    eax,0x73a58e15
  4153b4:	add    eax,0xd175e35d
  4153b9:	sub    al,0x8f
  4153bb:	fidivr WORD PTR [ebp-0x36]
  4153be:	ds icebp 
  4153c0:	test   eax,0xa7f2104a
  4153c5:	cli    
  4153c6:	cld    
  4153c7:	xor    DWORD PTR [ebp+eiz*4-0x4be38001],ebx
  4153ce:	test   BYTE PTR [ebp-0x7ab06b1d],cl
  4153d4:	imul   ecx,DWORD PTR [esi],0x53dd1955
  4153da:	cld    
  4153db:	jno    0x4153c9
  4153dd:	into   
  4153de:	dec    ebp
  4153df:	call   0x23c6236b
  4153e4:	push   ebx
  4153e5:	ror    ebx,cl
  4153e7:	mov    cl,BYTE PTR [ebx+0x15]
  4153ea:	dec    ebp
  4153eb:	dec    edi
  4153ec:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4153ed:	mov    ebp,0xbba3df52
  4153f2:	call   0xff668fdd
  4153f7:	xchg   ebp,eax
  4153f8:	sbb    ebx,eax
  4153fa:	stos   DWORD PTR es:[edi],eax
  4153fb:	jmp    0x415447
  4153fd:	mov    esp,edx
  4153ff:	(bad)  
  415400:	xor    al,0x3
  415402:	mov    esp,0xd1e0ba95
  415407:	adc    ecx,esp
  415409:	cmp    BYTE PTR [edi+0x71],0x3
  41540d:	mov    BYTE PTR [edi],bh
  41540f:	mov    al,dh
  415411:	popf   
  415412:	adc    DWORD PTR [ebx],edi
  415414:	mov    esp,0x15a778df
  415419:	in     eax,0xb6
  41541b:	mov    esi,0x39c5706a
  415420:	les    esp,FWORD PTR [ecx]
  415422:	mov    cl,0x5f
  415424:	pmulhw mm1,QWORD PTR [eax-0xe]
  415428:	dec    edi
  415429:	push   es
  41542a:	add    eax,0xf278613c
  41542f:	mov    ds:0x8f66ef52,eax
  415434:	and    cl,BYTE PTR [ebx]
  415436:	mov    al,ds:0x379f1c88
  41543b:	xchg   esi,eax
  41543c:	mov    al,ds:0x3e0f6da0
  415441:	ret    
  415442:	mov    BYTE PTR [eax+0x47],cl
  415445:	dec    eax
  415446:	fnstsw WORD PTR [eax+esi*1-0x626be16c]
  41544d:	dec    edx
  41544e:	outs   dx,DWORD PTR ds:[esi]
  41544f:	mov    WORD PTR [edx],fs
  415451:	jbe    0x4153fe
  415453:	cli    
  415454:	in     al,dx
  415455:	psraw  mm3,QWORD PTR [ebx-0x3474039c]
  41545c:	dec    edx
  41545d:	push   0x1e6ce05
  415462:	fs jo  0x415416
  415465:	add    BYTE PTR [edx],0x23
  415468:	or     al,BYTE PTR [ecx]
  41546a:	stos   DWORD PTR es:[edi],eax
  41546b:	jns    0x415431
  41546d:	jno    0x415475
  41546f:	fnstsw WORD PTR [eax-0x60]
  415472:	or     al,BYTE PTR [edi+0x13]
  415475:	jp     0x415482
  415477:	mov    edi,0x45284984
  41547c:	nop
  41547d:	sub    ah,BYTE PTR [ecx-0x76]
  415480:	inc    eax
  415481:	scas   eax,DWORD PTR es:[edi]
  415482:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415483:	ins    BYTE PTR es:[edi],dx
  415484:	fucomp st(7)
  415486:	xchg   ecx,eax
  415487:	lods   eax,DWORD PTR fs:[esi]
  415489:	hlt    
  41548a:	xor    DWORD PTR [edx-0x19],0x1b
  41548e:	jno    0x415482
  415490:	adc    DWORD PTR [edx],ebx
  415492:	outs   dx,BYTE PTR ds:[esi]
  415493:	jmp    0x415501
  415495:	sbb    DWORD PTR [eax+0x6b3d0b2],eax
  41549b:	cmc    
  41549c:	pop    ds
  41549d:	mov    al,0x45
  41549f:	mov    ds:0xbb18f68f,eax
  4154a4:	dec    esp
  4154a5:	mul    DWORD PTR [ecx]
  4154a7:	shr    BYTE PTR [eax],1
  4154a9:	sahf   
  4154aa:	ss inc ecx
  4154ac:	jl     0x415441
  4154ae:	adc    edi,DWORD PTR [ecx+0x4b4ce8bc]
  4154b4:	cli    
  4154b5:	jge    0x4154f5
  4154b7:	lods   eax,DWORD PTR ds:[esi]
  4154b8:	lea    ecx,[edi]
  4154ba:	rol    BYTE PTR [ecx],1
  4154bc:	addr16 mov ah,0x2c
  4154bf:	cs push ds
  4154c1:	maxps  xmm6,XMMWORD PTR [edi-0x30]
  4154c5:	xor    eax,0x31a86431
  4154ca:	jae    0x4154d1
  4154cc:	(bad)  
  4154cd:	(bad)  
  4154ce:	push   ebx
  4154cf:	std    
  4154d0:	add    eax,0xbb8ad096
  4154d5:	sub    ecx,DWORD PTR [edx]
  4154d7:	cs push ebp
  4154d9:	retf   0x87ae
  4154dc:	jmp    0xb5ce:0x60dfd0de
  4154e3:	cdq    
  4154e4:	dec    eax
  4154e5:	out    dx,eax
  4154e6:	repnz inc ebx
  4154e8:	popa   
  4154e9:	add    bh,al
  4154eb:	jmp    FWORD PTR [ecx+0x62]
  4154ee:	sbb    eax,0x33ff948e
  4154f3:	pop    esi
  4154f4:	mov    ebp,0x353cff1b
  4154f9:	inc    edi
  4154fa:	in     al,dx
  4154fb:	jge    0x415505
  4154fd:	loop   0x415579
  4154ff:	adc    bl,BYTE PTR [edx+0x3e]
  415502:	sti    
  415503:	aas    
  415504:	jmp    0x62e4:0xca419a5d
  41550b:	mov    BYTE PTR [ecx-0x317280b7],dh
  415511:	xchg   ebx,eax
  415512:	daa    
  415513:	mov    ecx,0x396d729f
  415518:	pop    eax
  415519:	mov    bl,0xf5
  41551b:	cmp    al,BYTE PTR [ecx+eiz*1+0x49]
  41551f:	sub    eax,0xd2fe9ef0
  415524:	adc    ch,BYTE PTR [ecx+0x40a4072f]
  41552a:	mov    ah,0x20
  41552c:	cli    
  41552d:	outs   dx,BYTE PTR fs:[esi]
  41552f:	fisttp WORD PTR [esi-0x77dd3488]
  415535:	cli    
  415536:	jmp    0x6a8:0xa2bf59c4
  41553d:	mov    ebp,DWORD PTR [ecx]
  41553f:	push   edx
  415540:	lods   eax,DWORD PTR ds:[esi]
  415541:	rol    BYTE PTR [ebx-0x36],0xae
  415545:	pop    ss
  415546:	repnz pop ebp
  415548:	int3   
  415549:	test   al,0x5a
  41554b:	call   0x4818:0xbe167106
  415552:	add    eax,0x357c25a4
  415557:	jmp    0x41551e
  415559:	mov    ebp,0x7bdca3c4
  41555e:	or     al,0xbd
  415560:	xchg   ebx,eax
  415561:	jecxz  0x415551
  415563:	call   0x2e29:0x974078ea
  41556a:	push   DWORD PTR [edi-0x38]
  41556d:	and    bl,BYTE PTR [ecx+0x65]
  415570:	lds    ecx,FWORD PTR [ecx+0x35]
  415573:	inc    BYTE PTR [edx-0x64]
  415576:	add    al,0xf6
  415578:	or     dl,BYTE PTR [ecx+eiz*1]
  41557b:	inc    ecx
  41557c:	dec    ebx
  41557d:	sti    
  41557e:	sahf   
  41557f:	int    0x5f
  415581:	out    dx,al
  415582:	push   edi
  415583:	jg     0x415603
  415585:	dec    ebp
  415586:	jecxz  0x415581
  415588:	pop    edx
  415589:	push   ds
  41558a:	jae    0x4155bd
  41558c:	cwde   
  41558d:	mov    bl,0xa4
  41558f:	popa   
  415590:	mov    cl,0x42
  415592:	jge    0x4155de
  415594:	mov    ah,0xd7
  415596:	(bad)  
  415597:	(bad)  
  415599:	call   0xc8cd:0x6d329f75
  4155a0:	push   0xffffffe0
  4155a2:	out    0x6e,eax
  4155a4:	das    
  4155a5:	sar    eax,cl
  4155a7:	push   cs
  4155a8:	outs   dx,BYTE PTR ds:[esi]
  4155a9:	jl     0x4155ba
  4155ab:	repnz xor al,0x3e
  4155ae:	ins    BYTE PTR es:[edi],dx
  4155af:	ins    BYTE PTR es:[edi],dx
  4155b0:	mov    ebp,0x98b8bb12
  4155b5:	sub    BYTE PTR [ebx-0x677ce0e9],dl
  4155bb:	pop    es
  4155bc:	jp     0x41559a
  4155be:	inc    edx
  4155bf:	into   
  4155c0:	ins    DWORD PTR es:[edi],dx
  4155c1:	and    eax,edx
  4155c3:	outs   dx,DWORD PTR ds:[esi]
  4155c4:	jne    0x4155c1
  4155c6:	inc    edx
  4155c7:	repnz sar BYTE PTR gs:[ebx+edi*1-0x6cc015ee],0xf2
  4155d1:	pop    ss
  4155d2:	(bad)  
  4155d3:	pop    ss
  4155d4:	rcr    BYTE PTR [ebx],cl
  4155d6:	into   
  4155d7:	sub    BYTE PTR [edi],cl
  4155d9:	push   esi
  4155da:	xchg   ah,cl
  4155dc:	push   esi
  4155dd:	add    ah,BYTE PTR [ebx+0x47]
  4155e0:	ret    
  4155e1:	inc    edi
  4155e2:	jb     0x415643
  4155e4:	aam    0xab
  4155e6:	push   ss
  4155e7:	mul    BYTE PTR [ebp-0x76]
  4155ea:	xor    ebx,ecx
  4155ec:	mov    bh,0x4e
  4155ee:	sar    DWORD PTR [ecx],cl
  4155f0:	lahf   
  4155f1:	mov    dh,0x32
  4155f3:	xor    ah,ch
  4155f5:	sbb    BYTE PTR [ebx+0x6c],dh
  4155f8:	add    eax,0xb04b3a6d
  4155fd:	adc    eax,0x3051bf1
  415602:	daa    
  415603:	jl     0x4155fd
  415605:	daa    
  415606:	call   0x113fa729
  41560b:	pop    edi
  41560c:	sbb    DWORD PTR [ecx-0x12],edi
  41560f:	pop    esp
  415610:	mov    cl,0x32
  415612:	mov    edx,0x1fafdc06
  415617:	cs mov al,0x1a
  41561a:	aad    0x9e
  41561c:	mov    esp,0xec31bbea
  415621:	aas    
  415622:	sbb    esi,DWORD PTR [esi+0x4bfb9259]
  415628:	mov    bl,0x7e
  41562a:	sub    dh,ch
  41562c:	or     BYTE PTR [esi+0x6bc0aa5f],al
  415632:	push   cs
  415633:	mov    cl,0xb0
  415635:	fsubr  st(1),st
  415637:	scas   eax,DWORD PTR es:[edi]
  415638:	(bad)  [ebp-0x5ac2fee8]
  41563e:	fidivr WORD PTR [edx]
  415640:	add    BYTE PTR [eax-0x3f971f64],bl
  415646:	cwde   
  415647:	xchg   edi,eax
  415648:	neg    ebx
  41564a:	jbe    0x4156b8
  41564c:	jg     0x41568e
  41564e:	fistp  WORD PTR [ebx]
  415650:	jg     0x4156b7
  415652:	xlat   BYTE PTR ds:[ebx]
  415653:	xor    esi,ebp
  415655:	pushf  
  415656:	pop    eax
  415657:	scas   al,BYTE PTR es:[edi]
  415658:	inc    ecx
  415659:	out    0x5d,eax
  41565b:	or     dh,BYTE PTR ds:0x32307400
  415661:	pusha  
  415662:	retf   0x6fed
  415665:	cmp    eax,0x90de4c52
  41566a:	jg     0x415608
  41566c:	test   DWORD PTR ds:0xd874eef3,esi
  415672:	repnz sub al,0x32
  415675:	dec    edi
  415676:	sbb    bh,BYTE PTR [eax-0x29]
  415679:	cs mov al,0xa
  41567c:	ins    DWORD PTR es:[edi],dx
  41567d:	and    BYTE PTR [eax-0x70],ch
  415680:	xor    ebp,edx
  415682:	xchg   esi,eax
  415683:	adc    al,bh
  415685:	push   ds
  415686:	xchg   ebp,eax
  415687:	inc    ecx
  415688:	sbb    dh,BYTE PTR [edi+0x6bfe017f]
  41568e:	ja     0x415616
  415690:	lods   al,BYTE PTR ds:[esi]
  415691:	mul    BYTE PTR [ecx+0x27]
  415694:	loop   0x415683
  415696:	cli    
  415697:	mov    ds:0x531a3382,eax
  41569c:	xor    BYTE PTR [ebp-0x72],ah
  41569f:	inc    ebp
  4156a0:	mov    dh,0xc4
  4156a2:	mov    dh,ch
  4156a4:	iret   
  4156a5:	mov    cl,0xf2
  4156a7:	test   BYTE PTR [ebp+0x693269f],dh
  4156ad:	fnstcw WORD PTR [esi+0x7701a900]
  4156b3:	mov    ah,0x8c
  4156b5:	imul   ecx,edi,0x45af5e13
  4156bb:	add    DWORD PTR [eax-0x3e],0xffffffd9
  4156bf:	jno    0x415729
  4156c1:	aad    0xa2
  4156c3:	or     al,0xa4
  4156c5:	test   eax,0x1f1a5033
  4156ca:	fdivr  st,st(0)
  4156cc:	sbb    BYTE PTR [edx+0x7f],0x4b
  4156d0:	(bad)  
  4156d1:	jb     0x41567f
  4156d3:	lahf   
  4156d4:	mov    esp,0xe1838d68
  4156d9:	mov    bh,0xc2
  4156db:	and    al,0xd1
  4156dd:	cmp    DWORD PTR [ecx-0x29],0xffffff9a
  4156e1:	push   cs
  4156e2:	cld    
  4156e3:	cwde   
  4156e4:	mov    bh,0x45
  4156e6:	cli    
  4156e7:	lea    ebp,[ebx+0x32]
  4156ea:	dec    edi
  4156eb:	pop    edi
  4156ec:	and    bl,BYTE PTR es:[eax-0x55]
  4156f0:	cmp    al,0xe7
  4156f2:	jns    0x41573e
  4156f4:	sti    
  4156f5:	nop
  4156f6:	neg    DWORD PTR [eax-0x40]
  4156f9:	or     DWORD PTR ds:0xdbe9d661,edi
  4156ff:	daa    
  415700:	(bad)  [eax+0xeebbc2d]
  415706:	in     al,dx
  415707:	inc    edi
  415708:	outs   dx,DWORD PTR ds:[esi]
  415709:	push   ss
  41570a:	mov    bl,ch
  41570c:	fmul   DWORD PTR [ebp-0x7d]
  41570f:	ret    
  415710:	mov    ds:0xec30376b,al
  415715:	and    eax,ecx
  415717:	mov    cl,0xe7
  415719:	mov    edx,0x725ae84e
  41571e:	ja     0x4156ed
  415720:	ror    ecx,0x96
  415723:	test   al,0x97
  415725:	push   eax
  415726:	(bad)  
  415728:	nop
  415729:	mov    ebx,0xfc4a2838
  41572e:	add    BYTE PTR [eax],dh
  415730:	sbb    edx,DWORD PTR [edi-0x4ad98860]
  415736:	neg    DWORD PTR [edi]
  415738:	push   ss
  415739:	repz xor eax,esp
  41573c:	and    dl,BYTE PTR [esi]
  41573e:	or     al,0xcf
  415740:	mov    ah,0xc
  415742:	mov    ecx,0xebd25850
  415747:	pop    es
  415748:	sub    al,0x30
  41574a:	out    0xd5,al
  41574c:	cmp    bl,BYTE PTR [ebp+0x6d04ac62]
  415752:	and    ebp,ebp
  415754:	scas   eax,DWORD PTR es:[edi]
  415755:	(bad)  
  415756:	jecxz  0x415785
  415758:	jno    0x41571b
  41575a:	and    al,0xa7
  41575c:	xor    eax,0xdc390422
  415761:	call   0xbaf1:0xc66ed79a
  415768:	test   DWORD PTR [ecx+ecx*2+0x263a8db5],esp
  41576f:	add    DWORD PTR [ecx+0x2d],0x2f
  415773:	jo     0x41576e
  415775:	mov    esp,0xb32adbeb
  41577a:	jo     0x415783
  41577c:	ret    
  41577d:	inc    eax
  41577e:	lods   al,BYTE PTR ds:[esi]
  41577f:	cmp    DWORD PTR [edi],eax
  415781:	sbb    eax,0x95834912
  415786:	adc    edi,DWORD PTR [edx+eax*8]
  415789:	ja     0x415809
  41578b:	popf   
  41578c:	sahf   
  41578d:	push   es
  41578e:	pop    ds
  41578f:	fcomp  DWORD PTR [ebx]
  415791:	adc    eax,0x44d3ce17
  415796:	mov    edx,0xf7261476
  41579b:	inc    ebx
  41579c:	loopne 0x4157a0
  41579e:	sahf   
  41579f:	sar    DWORD PTR [edi],1
  4157a1:	mov    edi,DWORD PTR [ebx-0x42]
  4157a4:	cmp    dl,al
  4157a6:	jns    0x4157c2
  4157a8:	mov    ds:0xabac6065,al
  4157ad:	push   esi
  4157ae:	mov    bh,0x8b
  4157b0:	pop    esp
  4157b1:	and    eax,0x29375594
  4157b6:	pop    esi
  4157b7:	sub    ch,BYTE PTR [edi-0x29]
  4157ba:	std    
  4157bb:	loope  0x4157bd
  4157bd:	and    dh,BYTE PTR [esi+0x59]
  4157c0:	jae    0x415749
  4157c2:	jb     0x4157f1
  4157c4:	mov    ch,0x64
  4157c6:	inc    edi
  4157c7:	adc    cl,BYTE PTR [eax]
  4157c9:	adc    ebp,DWORD PTR [esp+edx*2]
  4157cc:	mov    dh,0xed
  4157ce:	cmp    esp,ecx
  4157d0:	pusha  
  4157d1:	mov    esi,DWORD PTR [edx+0x5e]
  4157d4:	jge    0x415841
  4157d6:	pop    eax
  4157d7:	mov    bl,0xc
  4157d9:	xor    ch,BYTE PTR [ecx]
  4157db:	xchg   esp,ebp
  4157dd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4157de:	jb     0x41582a
  4157e0:	(bad)  
  4157e2:	adc    DWORD PTR [ecx],ebp
  4157e4:	imul   edx,DWORD PTR [ecx-0x17dc9e1e],0xe8740148
  4157ee:	pop    ebp
  4157ef:	dec    esi
  4157f0:	sbb    ch,ch
  4157f2:	int3   
  4157f3:	mov    esp,0x65eb229b
  4157f8:	mov    cl,0x4a
  4157fa:	js     0x415867
  4157fc:	(bad)  
  4157fd:	mov    es,WORD PTR [ebx+ecx*1+0x60]
  415801:	ror    bh,cl
  415803:	pop    edi
  415804:	jno    0x415877
  415806:	xchg   ebp,eax
  415807:	xor    eax,0xb9040874
  41580c:	pop    ebx
  41580d:	add    ah,BYTE PTR [edx]
  41580f:	fidivr WORD PTR [ebx-0x13a10a46]
  415815:	sar    BYTE PTR es:[ebp+ebx*4-0x5d],1
  41581a:	xchg   edx,eax
  41581b:	jae    0x415894
  41581d:	fidivr DWORD PTR [ebx+0x30]
  415820:	ins    BYTE PTR es:[edi],dx
  415821:	mov    eax,0x55783bfe
  415826:	adc    ecx,DWORD PTR [esi-0x2c94ac91]
  41582c:	sub    BYTE PTR [ebx],ah
  41582e:	add    DWORD PTR [edx],eax
  415830:	daa    
  415831:	in     eax,dx
  415832:	sbb    edi,DWORD PTR [ebp+0x67f310c4]
  415838:	scas   eax,DWORD PTR es:[edi]
  415839:	cld    
  41583a:	adc    DWORD PTR [eax+0x13],ecx
  41583d:	dec    ecx
  41583f:	(bad)  
  415840:	outs   dx,DWORD PTR ds:[esi]
  415841:	adc    al,0xce
  415843:	pop    esi
  415844:	add    esi,DWORD PTR [ecx-0x5c3194c0]
  41584a:	scas   al,BYTE PTR es:[edi]
  41584b:	xchg   ecx,eax
  41584c:	outs   dx,DWORD PTR ds:[esi]
  41584d:	mov    DWORD PTR [bp+di-0x30],esi
  415851:	inc    ebp
  415852:	mov    BYTE PTR [ebx+ebx*4-0x1e],al
  415856:	dec    edx
  415857:	sti    
  415858:	imul   edx,DWORD PTR [edx-0x22],0xffffffbb
  41585c:	or     DWORD PTR [ecx+0x10557328],0xffffffa1
  415863:	in     al,0xad
  415865:	(bad)  
  415866:	mov    ds:0xf413e75a,ax
  41586c:	push   esi
  41586d:	shl    esi,cl
  41586f:	jl     0x415892
  415871:	fsub   DWORD PTR [edi+edi*2]
  415874:	pop    eax
  415875:	call   0x9a1b036
  41587a:	cdq    
  41587b:	test   al,0xed
  41587d:	adc    BYTE PTR [edi+0x3922221b],bh
  415883:	push   esp
  415884:	aam    0x50
  415886:	addr16 and esi,edx
  415889:	stc    
  41588a:	mov    eax,ds:0xd356e4ff
  41588f:	loop   0x41584f
  415891:	xor    ch,BYTE PTR [ebp-0x16]
  415894:	jo     0x41585f
  415896:	cmp    al,0xc3
  415898:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415899:	les    edi,FWORD PTR [ebx]
  41589b:	stos   DWORD PTR es:[edi],eax
  41589c:	ins    DWORD PTR es:[edi],dx
  41589d:	xchg   BYTE PTR [ebx+0xd],bl
  4158a0:	leave  
  4158a1:	out    0x6e,eax
  4158a3:	sbb    dh,BYTE PTR [ecx+0x4abb8f59]
  4158a9:	mov    edi,0x3711151c
  4158ae:	adc    al,0xcc
  4158b0:	sbb    BYTE PTR [eax+ebp*1+0x117ee933],0x7f
  4158b8:	fcmovu st,st(5)
  4158ba:	shl    DWORD PTR [eax+0x67028c2],0xbe
  4158c1:	cmp    eax,0x676eb4b8
  4158c6:	sbb    BYTE PTR [esi+0x10],0x7
  4158ca:	mul    DWORD PTR [eax-0x53aa177f]
  4158d0:	fstp   st(4)
  4158d2:	mov    ebx,0x7f0a7a52
  4158d7:	mov    edx,0x609f6b8e
  4158dc:	xor    ebp,esi
  4158de:	shl    BYTE PTR [eax-0x28],1
  4158e1:	aam    0x22
  4158e3:	pop    edx
  4158e4:	dec    ebx
  4158e5:	(bad)
  4158e9:	outs   dx,DWORD PTR ds:[esi]
  4158ea:	ficomp WORD PTR [eax+0x2]
  4158ed:	ds pop ecx
  4158ef:	ret    0x85fa
  4158f2:	push   cs
  4158f3:	das    
  4158f4:	cpuid  
  4158f6:	jge    0x415890
  4158f8:	(bad)  
  4158f9:	ins    DWORD PTR es:[edi],dx
  4158fa:	fiadd  WORD PTR fs:[edx+esi*8+0x62f00cba]
  415902:	push   esi
  415903:	cld    
  415904:	sub    edx,ecx
  415906:	xor    ebp,DWORD PTR [eax-0x6e7524ad]
  41590c:	xor    cl,BYTE PTR [edx+0x3d3ece5b]
  415912:	std    
  415913:	popa   
  415914:	mov    bh,0x9d
  415916:	xor    DWORD PTR [eax+0x2ea0982c],0x1c2d90f8
  415920:	(bad)  
  415921:	sbb    al,0x4
  415923:	cdq    
  415924:	mov    ah,BYTE PTR [eax-0x5d4f5209]
  41592a:	out    0x6f,eax
  41592c:	(bad)  
  41592d:	gs stc 
  41592f:	sub    eax,0x10b754b5
  415934:	sub    bh,BYTE PTR [edx]
  415936:	fucomip st,st(6)
  415938:	inc    ecx
  415939:	shl    DWORD PTR [ebx*2-0x5cbd0cbd],0xd2
  415941:	es stos BYTE PTR es:[edi],al
  415943:	pushf  
  415944:	not    ah
  415946:	mov    bl,0xae
  415948:	mov    edx,0x24ac47b4
  41594d:	repz push ss
  41594f:	mov    bh,0x73
  415951:	pusha  
  415952:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415953:	xchg   edx,eax
  415954:	jns    0x415992
  415956:	jle    0xa3578ea8
  41595c:	and    al,0x5e
  41595e:	pop    ebp
  41595f:	int3   
  415960:	dec    ah
  415962:	mov    ah,dl
  415964:	pusha  
  415965:	cdq    
  415966:	sub    dh,dl
  415968:	ins    BYTE PTR es:[edi],dx
  415969:	enter  0x6b23,0x61
  41596d:	data16 fs into 
  415970:	je     0x4159a8
  415972:	cmp    al,0x5d
  415974:	ds jmp 0x1ce1:0xec8f374e
  41597c:	push   ebp
  41597d:	mov    DWORD PTR [esi+ebx*4+0x3c8a6f30],edi
  415984:	mov    dl,0x86
  415986:	inc    edi
  415987:	inc    eax
  415988:	cmp    al,0xb0
  41598a:	test   eax,0xea379
  41598f:	xchg   esi,eax
  415990:	jb     0x415966
  415992:	mov    ds:0xceb7ff27,al
  415997:	xor    eax,0xfa181cfd
  41599c:	mov    esi,DWORD PTR [ecx-0x7b59423a]
  4159a2:	mov    al,ds:0xe88adeb6
  4159a7:	shl    esi,1
  4159a9:	xor    DWORD PTR [edx],edi
  4159ab:	jmp    0x4159e9
  4159ad:	lock mov eax,0xe1ed7f27
  4159b3:	int    0x33
  4159b5:	sbb    eax,0x79152f9d
  4159ba:	sub    eax,ecx
  4159bc:	ffree  st(2)
  4159be:	jmp    0x415a37
  4159c0:	mov    ah,0x59
  4159c2:	mov    ds:0xc8830dac,al
  4159c7:	pop    esp
  4159c8:	sbb    eax,DWORD PTR [eax+0x4f40694c]
  4159ce:	sar    eax,0x46
  4159d1:	xbegin 0xd0cccc1c
  4159d7:	xchg   ebx,eax
  4159d8:	push   edx
  4159d9:	adc    al,0xcb
  4159db:	mov    ebx,0x280f8593
  4159e0:	loopne 0x415a34
  4159e2:	add    ecx,ecx
  4159e4:	iret   
  4159e5:	xchg   ebp,eax
  4159e6:	sub    eax,0x6fec956a
  4159eb:	call   0x44e68e5c
  4159f0:	sub    ebx,DWORD PTR [eax+ebp*1]
  4159f3:	xchg   ecx,eax
  4159f4:	xchg   BYTE PTR [edi+0x53c9a753],bl
  4159fa:	jle    0x41599c
  4159fc:	lock push edx
  4159fe:	lods   eax,DWORD PTR ds:[esi]
  4159ff:	or     BYTE PTR [edi-0x36],cl
  415a02:	aaa    
  415a03:	ret    
  415a04:	sub    eax,ebp
  415a06:	call   0xd9b69558
  415a0b:	adc    BYTE PTR [bx+di],ah
  415a0e:	cmp    esi,ecx
  415a10:	pop    ebp
  415a11:	add    al,BYTE PTR [edi+edi*4+0x18]
  415a15:	push   esp
  415a16:	pop    ds
  415a17:	out    0x92,eax
  415a19:	pop    edx
  415a1a:	xchg   DWORD PTR [edi],edi
  415a1c:	inc    edx
  415a1d:	pop    ds
  415a1e:	test   al,0x87
  415a20:	sbb    dh,bh
  415a22:	mov    eax,es
  415a24:	dec    edi
  415a25:	mov    ch,0x48
  415a27:	add    DWORD PTR [edx],edi
  415a29:	iret   
  415a2a:	sbb    eax,esi
  415a2c:	cs or  eax,0xacc25f83
  415a32:	(bad)  
  415a33:	sar    DWORD PTR [edi],1
  415a35:	(bad)  [esi]
  415a37:	add    DWORD PTR [ebx],ecx
  415a39:	addr16 test eax,0x1e020d2f
  415a3f:	(bad)  
  415a41:	push   ebp
  415a42:	stos   BYTE PTR es:[edi],al
  415a43:	pop    ebp
  415a44:	iret   
  415a45:	ja     0x415aad
  415a47:	mov    esp,0x4b43e86c
  415a4c:	jno    0x415a7a
  415a4e:	ins    DWORD PTR es:[edi],dx
  415a4f:	xor    al,0x13
  415a51:	sub    al,0x65
  415a53:	jmp    0x9f50:0xe3f47ef5
  415a5a:	mov    esi,0x5d31103c
  415a5f:	out    0xe4,eax
  415a61:	xchg   edi,eax
  415a62:	or     ebx,DWORD PTR [ecx-0x6]
  415a65:	aaa    
  415a66:	in     eax,0x45
  415a68:	es ja  0x415a6e
  415a6b:	inc    esi
  415a6c:	xor    BYTE PTR [edi+ebp*4-0xc],0x8
  415a71:	add    BYTE PTR ds:0xf2c8f73d,0xf2
  415a78:	and    BYTE PTR [ebx],0x33
  415a7b:	out    0x4c,eax
  415a7d:	ret    0x72d7
  415a80:	lds    esi,FWORD PTR [ecx+0x785d41a4]
  415a86:	mov    ebp,0xc3561c01
  415a8b:	pop    ebp
  415a8c:	pop    esp
  415a8d:	add    bh,cl
  415a8f:	mov    ecx,0xef7a66bf
  415a94:	sub    BYTE PTR [edx+eiz*1-0x11],dh
  415a98:	das    
  415a99:	aas    
  415a9a:	pop    ss
  415a9b:	sbb    DWORD PTR [ecx],0x56
  415a9e:	(bad)
  415aa1:	aas    
  415aa2:	cmp    BYTE PTR [edx],ch
  415aa4:	ret    0xaed8
  415aa7:	pushf  
  415aa8:	mov    al,ds:0x5eb5451d
  415aad:	push   ecx
  415aae:	sub    eax,0xb627753f
  415ab3:	xor    BYTE PTR [eax],dh
  415ab5:	loopne 0x415aeb
  415ab7:	test   BYTE PTR ds:0x28b2ec68,ah
  415abd:	bound  esi,QWORD PTR ds:0xf6fee51b
  415ac3:	mov    dl,0x7
  415ac5:	adc    ebx,DWORD PTR [ebx-0x34]
  415ac8:	test   al,0x49
  415aca:	out    0x9e,al
  415acc:	or     al,0x0
  415ace:	cdq    
  415acf:	mov    ds:0xbc6a0a9f,eax
  415ad4:	inc    ecx
  415ad5:	jb     0x415ac6
  415ad7:	push   esp
  415ad8:	bound  ebx,QWORD PTR [edi-0x1b]
  415adb:	jg     0x415acc
  415add:	pushf  
  415ade:	fsubp  st(3),st
  415ae0:	mov    eax,ds:0xbd2b638d
  415ae5:	push   ebx
  415ae6:	into   
  415ae7:	mov    eax,ds:0x92f7ea04
  415aec:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415aed:	mov    ecx,0xb92c15d7
  415af2:	mov    edi,0xce8dd95c
  415af7:	hlt    
  415af8:	popa   
  415af9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415afa:	sub    al,0xc8
  415afc:	push   0xffffffd9
  415afe:	sar    DWORD PTR [ebp-0x3c],0x7f
  415b02:	mov    esp,0x4fe3056
  415b07:	push   cs
  415b08:	hlt    
  415b09:	xlat   BYTE PTR ds:[ebx]
  415b0a:	leave  
  415b0b:	and    eax,0x668b397b
  415b10:	fistp  QWORD PTR [ebx+0x160d8182]
  415b16:	loop   0x415ae0
  415b18:	aam    0x81
  415b1a:	or     eax,0xc1ca0d05
  415b1f:	stos   BYTE PTR es:[edi],al
  415b20:	je     0x415b82
  415b22:	loope  0x415ac6
  415b24:	inc    edi
  415b25:	sbb    al,0x10
  415b28:	test   BYTE PTR [edi-0x72],dl
  415b2b:	ins    BYTE PTR es:[edi],dx
  415b2c:	add    BYTE PTR [edi+0x1c],0x64
  415b30:	rcr    BYTE PTR ds:0xbdd79e9f,0xe8
  415b37:	fwait
  415b38:	loope  0x415ae6
  415b3a:	xchg   ebx,eax
  415b3b:	xor    bl,bl
  415b3d:	scas   eax,DWORD PTR es:[edi]
  415b3e:	in     al,dx
  415b3f:	lods   eax,DWORD PTR ds:[esi]
  415b40:	jp     0x415b3f
  415b42:	jle    0x415b18
  415b44:	cs (bad) 
  415b46:	mov    ch,0x0
  415b48:	ja     0x415bbd
  415b4a:	or     DWORD PTR cs:[edx+edi*4-0x3f],eax
  415b4f:	shr    dl,cl
  415b51:	pop    eax
  415b52:	sti    
  415b53:	push   edi
  415b54:	push   si
  415b56:	out    dx,eax
  415b57:	jecxz  0x415aeb
  415b59:	push   eax
  415b5a:	cmp    al,0x22
  415b5c:	out    dx,eax
  415b5d:	call   0x6a97:0xb666f110
  415b64:	jl     0x415bba
  415b66:	xchg   ebx,eax
  415b67:	popf   
  415b68:	(bad)  
  415b69:	call   0x9ee3:0x82f88bf2
  415b70:	jae    0x415b3a
  415b72:	xchg   ebp,eax
  415b73:	sbb    ebp,0x15c88a26
  415b79:	mov    ebp,0xcc480a1f
  415b7e:	retf   
  415b7f:	pop    es
  415b80:	mov    DWORD PTR [esi+0x1e],esp
  415b83:	push   edx
  415b84:	(bad)  
  415b85:	in     eax,0x56
  415b87:	into   
  415b88:	pop    ss
  415b89:	cli    
  415b8a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415b8b:	ins    DWORD PTR es:[edi],dx
  415b8c:	(bad)  
  415b8d:	out    dx,al
  415b8e:	jmp    0x2cd16acf
  415b93:	mov    esi,0x4c794b15
  415b98:	mov    eax,ds:0x9f87357
  415b9d:	hlt    
  415b9e:	test   DWORD PTR [edx],ebx
  415ba0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415ba1:	sar    BYTE PTR [esi+0x60],cl
  415ba4:	jmp    0x286c0197
  415ba9:	xor    al,0x27
  415bab:	fwait
  415bac:	jecxz  0x415c0c
  415bae:	and    al,0x8a
  415bb0:	pop    ss
  415bb1:	mov    al,0x5b
  415bb3:	dec    eax
  415bb4:	add    al,0x56
  415bb6:	fsubr  DWORD PTR [esi+0x26]
  415bb9:	jnp    0x415bc2
  415bbb:	ror    DWORD PTR [ebp-0x58],0x69
  415bbf:	nop
  415bc0:	rcl    al,cl
  415bc2:	dec    ecx
  415bc3:	xor    BYTE PTR [eax+0x2309ef31],ch
  415bc9:	(bad)  
  415bca:	xor    BYTE PTR [esi+0x2db3b429],ch
  415bd0:	fdiv   DWORD PTR [esi-0x4f191557]
  415bd6:	loope  0x415bcf
  415bd8:	mov    al,ds:0x555cf6ce
  415bdd:	sbb    al,bh
  415bdf:	iret   
  415be0:	dec    eax
  415be1:	shl    BYTE PTR [edi+0x80baaa0],1
  415be7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415be8:	cmp    esp,esp
  415bea:	add    ch,dh
  415bec:	pop    edi
  415bed:	bound  esp,QWORD PTR [ecx+0xf]
  415bf0:	jle    0x415c4b
  415bf2:	adc    edx,eax
  415bf4:	jmp    0x7984be64
  415bf9:	mov    bl,0xb7
  415bfb:	and    al,0x5c
  415bfd:	pushf  
  415bfe:	jle    0x415c54
  415c00:	sub    DWORD PTR [esi],edi
  415c02:	es sti 
  415c04:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415c05:	(bad)  
  415c06:	xor    DWORD PTR [edi+0x2750ed89],edx
  415c0c:	inc    edi
  415c0d:	cdq    
  415c0e:	sub    ch,ah
  415c10:	(bad)  
  415c11:	fsub   st(1),st
  415c13:	and    eax,DWORD PTR [edx]
  415c15:	gs pushf 
  415c17:	mov    esi,DWORD PTR [ebx+0x7266ac14]
  415c1d:	jo     0x415bf9
  415c1f:	not    DWORD PTR [esi-0x71]
  415c22:	lea    eax,[eax+0xf]
  415c25:	sub    dl,BYTE PTR [eax]
  415c27:	(bad)  
  415c28:	mov    WORD PTR [eax],ds
  415c2a:	sbb    ebp,0xd9993f10
  415c30:	test   al,0x11
  415c32:	test   BYTE PTR [ebx],0x6c
  415c35:	pop    ecx
  415c36:	(bad)  [ebp-0x1b9cb060]
  415c3c:	in     eax,dx
  415c3d:	sbb    eax,0x45acb9f2
  415c42:	push   0xed3d6c30
  415c47:	out    dx,eax
  415c48:	push   esi
  415c49:	xchg   esp,eax
  415c4a:	in     eax,0xb1
  415c4c:	inc    esi
  415c4d:	aaa    
  415c4e:	mov    BYTE PTR [esi],cl
  415c50:	add    ebp,esp
  415c52:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415c53:	rcl    BYTE PTR [esi-0x65],0x2
  415c57:	mov    ebx,0xbb940f1c
  415c5c:	add    esp,edx
  415c5e:	mov    ebx,0x9f304a58
  415c63:	sbb    esi,DWORD PTR [edx-0x3a9e0487]
  415c69:	repnz sbb eax,0x74113ec6
  415c6f:	imul   edx,eax,0xffffffc7
  415c72:	push   ecx
  415c73:	(bad)  
  415c74:	xchg   edx,eax
  415c75:	push   ds
  415c76:	push   esi
  415c77:	fbld   TBYTE PTR [ecx]
  415c79:	cmp    bl,BYTE PTR [edi-0x41]
  415c7c:	lods   eax,DWORD PTR ds:[esi]
  415c7d:	cmc    
  415c7e:	inc    ebp
  415c7f:	or     BYTE PTR ds:0x7cd985e3,bl
  415c85:	sub    BYTE PTR [eax+0x45],ah
  415c88:	sub    bl,BYTE PTR [edi+ecx*2]
  415c8b:	push   es
  415c8c:	dec    DWORD PTR [eax+0x74d05c7b]
  415c92:	mov    bl,0x75
  415c94:	mov    ds:0x4d23682a,al
  415c99:	test   eax,0xb099fbbd
  415c9e:	inc    ebx
  415c9f:	mov    esi,0x64225ddd
  415ca4:	or     dl,dl
  415ca6:	packsswb mm1,QWORD PTR [ecx-0x1c]
  415caa:	dec    esp
  415cab:	adc    eax,0x4bc225a0
  415cb0:	xor    BYTE PTR [ebx+0x53],ah
  415cb3:	push   0x30c73bfc
  415cb8:	add    eax,0xb57455fb
  415cbd:	xchg   DWORD PTR ds:0xecaa12,eax
  415cc3:	retf   
  415cc4:	fidiv  DWORD PTR [ebx]
  415cc6:	test   al,0xbd
  415cc8:	scas   eax,DWORD PTR es:[edi]
  415cc9:	or     BYTE PTR [ebx-0x7b71cef5],ah
  415ccf:	arpl   sp,dx
  415cd1:	jo     0x415c63
  415cd3:	jbe    0x415cfa
  415cd5:	add    BYTE PTR [eax],al
  415cd7:	pop    eax
  415cd8:	jo     0x415ccc
  415cda:	jg     0x415cff
  415cdc:	jnp    0x415d24
  415cde:	add    al,0xa3
  415ce0:	jmp    DWORD PTR ds:0xd39aa09a
  415ce6:	int    0x4d
  415ce8:	outs   dx,DWORD PTR ds:[esi]
  415ce9:	dec    edx
  415cea:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415ceb:	jl     0x415d4c
  415ced:	mov    edx,edi
  415cef:	mov    ds,WORD PTR [eax]
  415cf1:	in     eax,dx
  415cf2:	in     al,0x65
  415cf4:	dec    ecx
  415cf5:	jecxz  0x415d48
  415cf7:	push   ebx
  415cf8:	push   esi
  415cf9:	mov    esi,DWORD PTR [eax+0x77a0cb0a]
  415cff:	jge    0x415d35
  415d01:	gs popf 
  415d03:	stos   BYTE PTR es:[edi],al
  415d04:	xor    bh,ch
  415d06:	daa    
  415d07:	scas   al,BYTE PTR es:[edi]
  415d08:	inc    edi
  415d09:	repnz inc edi
  415d0b:	jb     0x415d0a
  415d0d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415d0e:	push   ebx
  415d0f:	fdivr  st(0),st
  415d11:	retf   0xcc74
  415d14:	test   eax,0xb0b25a21
  415d19:	imul   edi,DWORD PTR [edi],0x2c5f0cee
  415d1f:	scas   eax,DWORD PTR es:[edi]
  415d20:	xor    DWORD PTR [edi+ebx*1+0xbda4bf7],ecx
  415d27:	dec    ecx
  415d28:	ss scas al,BYTE PTR es:[edi]
  415d2a:	mov    ebp,0x90e2b8fe
  415d2f:	pushf  
  415d30:	xor    al,0x2b
  415d32:	dec    ebx
  415d33:	mov    WORD PTR [esi*4+0x39165d9f],ds
  415d3a:	pcmpgtw mm2,mm7
  415d3d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415d3e:	add    esp,esi
  415d40:	cs (bad) 
  415d42:	outs   dx,BYTE PTR ds:[esi]
  415d43:	ficom  WORD PTR [edi-0x76199083]
  415d49:	test   eax,0x62a46126
  415d4e:	sti    
  415d4f:	popa   
  415d50:	mov    dh,0xc
  415d52:	shr    DWORD PTR [esi+0x77ccf793],1
  415d58:	xchg   esi,eax
  415d59:	push   cs
  415d5a:	(bad)  
  415d5b:	xor    al,0x13
  415d5d:	loopne 0x415d33
  415d5f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415d60:	lods   al,BYTE PTR ds:[esi]
  415d61:	scas   eax,DWORD PTR es:[edi]
  415d62:	shl    DWORD PTR [esi-0x423a3de3],0xbc
  415d69:	adc    BYTE PTR [ecx-0x73],0xb7
  415d6d:	sar    DWORD PTR [edx-0x59],1
  415d70:	xor    BYTE PTR [eax],ch
  415d72:	jg     0x415db8
  415d74:	pop    ebp
  415d75:	fiadd  WORD PTR [edx+0x3e]
  415d79:	adc    edi,ebp
  415d7b:	mov    cl,0x40
  415d7d:	jmp    0x415d82
  415d7f:	ret    
  415d80:	dec    edx
  415d81:	sub    al,0x67
  415d83:	push   edx
  415d84:	pop    esi
  415d85:	or     al,0xda
  415d87:	sub    eax,0x1a9a92e3
  415d8c:	dec    ebp
  415d8d:	cmp    BYTE PTR [edx-0x43cf2221],0xf9
  415d94:	out    0x91,al
  415d96:	cmp    bh,BYTE PTR [ecx-0x57]
  415d99:	aam    0x91
  415d9b:	es pop ecx
  415d9d:	leave  
  415d9e:	cwde   
  415d9f:	jg     0x415d43
  415da1:	outs   dx,BYTE PTR ds:[esi]
  415da2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415da3:	jg     0x415e05
  415da5:	int    0xd6
  415da7:	push   edi
  415da8:	mov    ecx,0x1101f021
  415dad:	mov    esp,0x2957bfdc
  415db2:	in     eax,0xd7
  415db4:	cdq    
  415db5:	out    dx,eax
  415db6:	pop    esp
  415db7:	pop    DWORD PTR [edx-0x25]
  415dba:	and    al,0x94
  415dbc:	fs adc al,0x68
  415dbf:	mov    ecx,0x3caaa55b
  415dc4:	push   ds
  415dc5:	xor    al,0x2f
  415dc7:	jmp    FWORD PTR [eax+0x59d0a1f]
  415dcd:	mov    WORD PTR [edi+ebx*4+0x32c801fb],es
  415dd4:	outs   dx,DWORD PTR ds:[esi]
  415dd5:	mov    edi,0x2b91bc59
  415dda:	cmp    al,0xfd
  415ddc:	dec    edi
  415ddd:	aaa    
  415dde:	add    bh,BYTE PTR ds:0xe799a4a3
  415de4:	or     al,0xdd
  415de6:	shl    BYTE PTR [eax],1
  415de8:	neg    BYTE PTR [esi]
  415dea:	xchg   ebp,eax
  415deb:	repz clc 
  415ded:	sbb    BYTE PTR [edi-0x69],0x80
  415df1:	fsub   DWORD PTR [ebx]
  415df3:	lds    ebp,FWORD PTR [eax+0x1cf51941]
  415df9:	push   0x4c
  415dfb:	popf   
  415dfc:	or     esp,0xffffff85
  415dff:	js     0x415dfa
  415e01:	mov    cl,0x35
  415e03:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415e04:	fsubr  QWORD PTR [ecx+eax*4-0x3891a756]
  415e0b:	ror    bh,0xa7
  415e0e:	mov    eax,ds:0x1ce7b8eb
  415e13:	fdiv   QWORD PTR [ecx]
  415e15:	inc    DWORD PTR [ebp+0x2e9ca851]
  415e1b:	adc    eax,0xf7e2eb0c
  415e20:	jmp    0xfd9e:0x1e234a27
  415e27:	popa   
  415e28:	test   BYTE PTR [esi+0x5a],dl
  415e2b:	xchg   edi,eax
  415e2c:	and    BYTE PTR [edx+ebx*8],dh
  415e2f:	pop    ecx
  415e30:	and    eax,0x7cbfc32
  415e35:	mov    esp,DWORD PTR [edx-0x1c]
  415e38:	test   al,0x9e
  415e3a:	sbb    DWORD PTR [ebx+ebx*1],edi
  415e3d:	clc    
  415e3e:	test   dh,bh
  415e40:	inc    BYTE PTR ds:0xeeb6cd23
  415e46:	(bad)  
  415e47:	enter  0x7a9c,0x95
  415e4b:	xor    al,0xbd
  415e4d:	cmp    dl,dl
  415e4f:	retf   
  415e50:	retf   
  415e51:	(bad)  
  415e53:	ret    
  415e54:	pop    ebx
  415e55:	pusha  
  415e56:	test   BYTE PTR [ecx-0x31cbfa7],0x4a
  415e5d:	pop    esi
  415e5e:	mov    DWORD PTR [edi+0x1d],ebx
  415e61:	adc    edx,DWORD PTR [edx-0x27]
  415e64:	jge    0x415e64
  415e66:	xchg   ecx,eax
  415e67:	add    eax,0xe4312718
  415e6c:	mov    ebp,0x3e0ddc6e
  415e71:	mov    al,0xf0
  415e73:	(bad)  
  415e74:	push   ss
  415e75:	pop    es
  415e76:	dec    eax
  415e77:	aad    0xb1
  415e79:	dec    eax
  415e7a:	call   0x8bd1c2d5
  415e7f:	mov    BYTE PTR [edx+0x1e369a39],dl
  415e85:	or     BYTE PTR [esi+0xe],cl
  415e88:	dec    esi
  415e89:	jo     0x415eee
  415e8b:	mov    esp,0xcf26e401
  415e90:	retf   
  415e91:	mov    cl,0x38
  415e93:	jns    0x415e49
  415e95:	dec    edx
  415e96:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415e97:	ins    DWORD PTR es:[edi],dx
  415e98:	jb     0x415e3b
  415e9a:	outs   dx,DWORD PTR ds:[esi]
  415e9b:	hlt    
  415e9c:	xor    dh,cl
  415e9e:	push   dx
  415ea0:	(bad)  
  415ea1:	mov    BYTE PTR [ebp-0x51087880],bh
  415ea7:	in     al,0x8e
  415ea9:	sbb    BYTE PTR [edx],bh
  415eab:	ins    DWORD PTR es:[edi],dx
  415eac:	in     eax,0x5d
  415eae:	mov    ecx,0x4465710a
  415eb3:	inc    ebx
  415eb4:	xchg   edi,eax
  415eb5:	dec    ebx
  415eb6:	or     DWORD PTR [esi+0x5b],ebp
  415eb9:	cmp    eax,0x5baad82c
  415ebe:	push   esi
  415ebf:	sub    esi,0x4aef5188
  415ec5:	mov    eax,ds:0x712e90b0
  415eca:	jnp    0x415ef3
  415ecc:	mov    ebp,0xe9819dcd
  415ed1:	int3   
  415ed2:	popa   
  415ed3:	or     eax,DWORD PTR [eax+0x58]
  415ed6:	mov    dl,0xdd
  415ed8:	in     al,0xf7
  415eda:	and    eax,DWORD PTR [edx-0x75004967]
  415ee0:	mov    bh,0xf
  415ee2:	or     eax,0xfb9ea499
  415ee7:	sbb    eax,0x29125c76
  415eec:	movs   DWORD PTR es:[edi],DWORD PTR es:[esi]
  415eee:	push   cs
  415eef:	push   0x3
  415ef1:	jge    0x415eed
  415ef3:	push   ds
  415ef4:	fnstenv [ecx-0x38]
  415ef7:	pop    es
  415ef8:	push   es
  415ef9:	pop    ebp
  415efa:	push   edx
  415efb:	adc    al,0xa1
  415efd:	mov    ds:0xfbf1e0e0,al
  415f02:	push   esp
  415f03:	xor    edi,DWORD PTR [ebx+eiz*4+0x88465a6]
  415f0a:	mov    ds:0xaad39944,al
  415f0f:	dec    ebp
  415f10:	adc    DWORD PTR ds:0x4dbc3718,eax
  415f16:	std    
  415f17:	pushf  
  415f18:	xor    eax,0x66449607
  415f1d:	mov    ecx,0x4c50b84e
  415f22:	sub    ebx,ebp
  415f24:	mov    edx,0x9dbc3cd1
  415f29:	test   DWORD PTR [esi+0x32fce859],eax
  415f2f:	cmp    DWORD PTR [ebp+0x35],0xe4f7d483
  415f36:	jle    0x415ec4
  415f38:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415f39:	or     BYTE PTR [esi+0x32],dl
  415f3c:	enter  0x7da9,0xb0
  415f40:	add    ah,cl
  415f42:	fidivr DWORD PTR [ebx]
  415f44:	dec    edx
  415f45:	hlt    
  415f46:	cmp    BYTE PTR [ebp-0x43],cl
  415f49:	sub    eax,0xfa1cc931
  415f4e:	lea    ebp,[eax-0x45]
  415f51:	js     0x415f93
  415f53:	jnp    0x415f36
  415f55:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415f56:	div    BYTE PTR [edx+0x755ca18a]
  415f5c:	dec    DWORD PTR [ebp+ecx*4-0x4f]
  415f60:	mov    bh,0x21
  415f62:	(bad)  
  415f63:	leave  
  415f64:	mov    dh,0xa1
  415f66:	fmulp  st(1),st
  415f68:	pcmpeqw mm6,mm5
  415f6b:	mov    ds:0x20030733,al
  415f70:	xchg   ebp,eax
  415f71:	test   eax,0xe29612e4
  415f76:	cdq    
  415f77:	and    al,0x46
  415f79:	pmulhuw mm6,QWORD PTR gs:[ecx+0x47]
  415f7e:	jl     0x415f46
  415f80:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415f81:	push   0xffffff99
  415f83:	xor    al,0x6b
  415f85:	mov    eax,ds:0xd34a3c45
  415f8a:	pusha  
  415f8b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415f8c:	push   esp
  415f8d:	aad    0x19
  415f8f:	bound  ebx,QWORD PTR [eax]
  415f91:	int3   
  415f92:	and    BYTE PTR [ebx+ebp*1+0x6dc61cb4],ah
  415f99:	jge    0x415f4a
  415f9b:	xchg   edi,eax
  415f9c:	add    BYTE PTR [ebx],cl
  415f9e:	pop    ss
  415f9f:	sar    BYTE PTR [edi+ebx*8],cl
  415fa2:	cmc    
  415fa3:	sbb    dl,bl
  415fa5:	loope  0x415f7c
  415fa7:	inc    edi
  415fa8:	jle    0x415fac
  415faa:	pop    eax
  415fab:	gs in  eax,0x77
  415fae:	aaa    
  415faf:	push   ecx
  415fb0:	xlat   BYTE PTR ds:[ebx]
  415fb1:	add    eax,0x67df454f
  415fb6:	push   ecx
  415fb7:	shr    ah,cl
  415fb9:	mov    ds,edx
  415fbb:	push   ss
  415fbc:	push   ds
  415fbd:	mov    bh,ch
  415fbf:	sub    al,0x4e
  415fc1:	xor    ah,BYTE PTR [esi]
  415fc3:	int    0xb6
  415fc5:	shl    DWORD PTR [eax+0x6d1e0139],0x3b
  415fcc:	push   edi
  415fcd:	call   0x1b115b77
  415fd2:	fisubr WORD PTR [ecx+0x4d229094]
  415fd8:	jp     0x415f91
  415fda:	mov    al,ds:0x716edd23
  415fdf:	xor    eax,0xf32bff86
  415fe4:	jecxz  0x415fc7
  415fe6:	xchg   edi,eax
  415fe7:	ins    BYTE PTR es:[edi],dx
  415fe8:	pop    ecx
  415fe9:	and    BYTE PTR [eax+0x6e7044e9],al
  415fef:	pop    ss
  415ff0:	push   ecx
  415ff1:	lock jecxz 0x415fa2
  415ff4:	jne    0x415ffe
  415ff6:	jb     0x415fee
  415ff8:	mov    esi,0x56c5d9fc
  415ffd:	ret    0xf27a
  416000:	enter  0x16bb,0xe1
  416004:	call   0x4b7e84e5
  416009:	icebp  
  41600a:	pop    ecx
  41600b:	ss jo  0x415faa
  41600e:	call   DWORD PTR [edi]
  416010:	ss inc ebx
  416012:	aaa    
  416013:	pop    ss
  416014:	rcl    DWORD PTR [esi-0x51],1
  416017:	lods   eax,DWORD PTR ds:[esi]
  416018:	jl     0x415fa0
  41601a:	sbb    bh,cl
  41601c:	pop    ebp
  41601d:	push   es
  41601e:	xchg   ecx,eax
  41601f:	sbb    eax,0x754bdbd8
  416024:	sbb    eax,0x3880c7c4
  416029:	(bad)
  41602c:	mov    dh,0x90
  41602e:	imul   ecx,DWORD PTR [edx+0x17d14029],0x283cbd3d
  416038:	adc    al,0x18
  41603a:	(bad)  
  41603c:	aas    
  41603d:	ins    DWORD PTR es:[edi],dx
  41603e:	inc    eax
  41603f:	mov    cl,0x62
  416041:	(bad)  
  416042:	nop
  416043:	retf   0xbde1
  416046:	or     DWORD PTR [esi],eax
  416048:	xchg   BYTE PTR [eax],bl
  41604a:	in     al,dx
  41604b:	mov    bl,0xbe
  41604d:	retf   0x3e55
  416050:	or     eax,0x34187fb6
  416055:	dec    esi
  416056:	pop    es
  416057:	dec    esi
  416058:	mov    ebx,0x1c39c860
  41605d:	xchg   DWORD PTR [edx+eiz*8-0x2a1c759a],edi
  416064:	out    dx,eax
  416065:	in     al,0x32
  416067:	call   0xdcb58916
  41606c:	sbb    DWORD PTR [eax+0x51426184],0x33c52a3e
  416076:	add    DWORD PTR [eax+ebx*1-0x492e9cb6],ecx
  41607d:	popa   
  41607e:	jne    0x4160a9
  416080:	cmp    eax,0xb428a56
  416085:	mov    edi,0x1ac7fc2d
  41608a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41608b:	cmp    eax,0x85b2b3e5
  416090:	rcl    BYTE PTR [ebp+0x6f],1
  416093:	sub    al,0x9c
  416095:	pop    ecx
  416096:	xor    dh,ah
  416098:	jmp    0x4790:0x68f1b303
  41609f:	cmp    eax,0xd638b49c
  4160a4:	addr16 inc eax
  4160a6:	(bad)  
  4160a7:	ds jns 0x4160ed
  4160aa:	cmc    
  4160ab:	pop    ecx
  4160ac:	ja     0x4160c2
  4160ae:	ins    DWORD PTR es:[edi],dx
  4160af:	sbb    ecx,esp
  4160b1:	cmp    al,0xce
  4160b3:	mov    ds,WORD PTR [edi-0x6262a4b6]
  4160b9:	(bad)  
  4160ba:	mov    ebp,0x626d4f5a
  4160bf:	repnz sbb BYTE PTR [edi+ecx*2+0x46],dl
  4160c4:	xlat   BYTE PTR ds:[ebx]
  4160c5:	pop    edx
  4160c6:	sbb    ecx,DWORD PTR [edi-0x5a5c3c3b]
  4160cc:	inc    ebx
  4160cd:	rcl    DWORD PTR [esi+0x3b99a947],1
  4160d3:	push   0xfd1321be
  4160d8:	xchg   edi,eax
  4160d9:	mov    BYTE PTR [ebp-0x6a],bl
  4160dc:	scas   eax,DWORD PTR es:[edi]
  4160dd:	dec    eax
  4160de:	std    
  4160df:	push   0xffffffa9
  4160e1:	dec    ebp
  4160e2:	ret    0xcb0d
  4160e5:	sbb    BYTE PTR [edi],ch
  4160e7:	mov    esp,0x6df1e497
  4160ec:	fucomp st(0)
  4160ee:	out    0x8a,al
  4160f0:	rcl    BYTE PTR [edx-0x19],1
  4160f3:	std    
  4160f4:	push   ds
  4160f5:	mov    edx,0xda8c24d0
  4160fa:	adc    eax,0x514d93c5
  4160ff:	inc    esi
  416100:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416101:	lahf   
  416102:	arpl   WORD PTR [esi-0x1bcee3f6],ax
  416108:	sbb    al,0xf6
  41610a:	mov    DWORD PTR [ebx-0x76cee4af],edi
  416110:	inc    esi
  416111:	adc    DWORD PTR ds:0xea414118,ebx
  416117:	in     eax,0xfb
  416119:	das    
  41611a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41611b:	je     0x4160d0
  41611d:	jle    0x416156
  41611f:	sbb    BYTE PTR [eax-0x678b814],ah
  416125:	mov    al,es:0xd4439710
  41612b:	and    dl,ah
  41612d:	pop    eax
  41612e:	sbb    DWORD PTR [edx+eax*4-0x67aaa612],edi
  416135:	ja     0x416158
  416137:	xor    eax,0x7ea16fd7
  41613c:	(bad)  
  41613d:	out    0x72,al
  41613f:	sbb    eax,0x92a659d6
  416144:	sub    DWORD PTR [eax+0x27],esp
  416147:	xchg   edx,eax
  416148:	data16 das 
  41614a:	lock cld 
  41614c:	daa    
  41614d:	mov    BYTE PTR [esi+0x5a],ch
  416150:	add    eax,0xb6cfd79
  416155:	ret    
  416156:	add    edi,ebp
  416158:	cmp    ecx,DWORD PTR [esi+0x38]
  41615b:	pusha  
  41615c:	add    dl,BYTE PTR [eax+0x3e]
  41615f:	out    dx,eax
  416160:	icebp  
  416161:	sub    bh,cl
  416163:	xchg   ebp,eax
  416164:	loopne 0x4161b6
  416166:	fwait
  416167:	adc    BYTE PTR [ecx+ebx*2],ch
  41616a:	dec    esp
  41616b:	addr16 ror al,0xec
  41616f:	(bad)  
  416170:	and    al,0x6d
  416172:	(bad)
  416176:	popf   
  416177:	pop    es
  416178:	dec    ebx
  416179:	inc    esi
  41617a:	jge    0x4161a6
  41617c:	cmp    ch,BYTE PTR [ecx+0x59]
  41617f:	jbe    0x41617f
  416181:	nop
  416182:	fs push ds
  416184:	sub    al,0x47
  416186:	xor    BYTE PTR [edx+0x62],dh
  416189:	sub    esp,DWORD PTR [edx+0x7d]
  41618c:	or     esi,DWORD PTR ds:0x74c0b313
  416192:	push   esi
  416193:	loop   0x41611a
  416195:	arpl   bp,dx
  416197:	sbb    al,0xdb
  416199:	sbb    BYTE PTR [eax+ebp*2-0x13],dl
  41619d:	outs   dx,BYTE PTR ds:[esi]
  41619e:	stc    
  41619f:	xor    eax,0x80ed585c
  4161a4:	dec    ecx
  4161a5:	xchg   edx,eax
  4161a6:	pop    esp
  4161a7:	sbb    al,0x55
  4161a9:	sub    eax,0xdec02479
  4161ae:	pop    ds
  4161af:	ja     0x416145
  4161b1:	cmp    DWORD PTR [ecx],esi
  4161b3:	cmp    edi,DWORD PTR [ebx-0x2c]
  4161b6:	pushf  
  4161b7:	jecxz  0x4161b9
  4161b9:	and    bh,BYTE PTR [esi+0x575134a1]
  4161bf:	mov    bh,0x4b
  4161c1:	xchg   esi,eax
  4161c2:	dec    esi
  4161c3:	mov    dh,0x7d
  4161c5:	mov    WORD PTR [ebp+esi*1-0x6b],ds
  4161c9:	add    BYTE PTR [ebp+0x6d0a1a55],al
  4161cf:	out    dx,eax
  4161d0:	dec    ebp
  4161d1:	mov    esi,0x55f6c0ca
  4161d6:	sub    eax,0x6a9e00dd
  4161db:	sub    eax,0x24bef720
  4161e0:	pop    ds
  4161e1:	aas    
  4161e2:	pop    ss
  4161e3:	pop    ecx
  4161e5:	pop    edx
  4161e6:	ins    DWORD PTR es:[edi],dx
  4161e7:	push   esi
  4161e8:	fld    QWORD PTR [esi+0x2e]
  4161eb:	and    DWORD PTR [edx-0x62a0b280],esi
  4161f1:	(bad)  
  4161f2:	adc    al,0xe1
  4161f4:	daa    
  4161f5:	cmp    ebp,DWORD PTR [eax+eax*4]
  4161f8:	sub    al,0xe9
  4161fa:	sub    al,0xd
  4161fc:	(bad)  
  4161fe:	mov    ch,dl
  416200:	pop    ss
  416201:	jle    0x4161be
  416203:	and    esi,DWORD PTR [esi+eiz*8-0x5c]
  416207:	inc    edi
  416208:	stos   DWORD PTR es:[edi],eax
  416209:	or     DWORD PTR [ebx],0xc
  41620c:	pushf  
  41620d:	pop    edi
  41620e:	pushf  
  41620f:	test   eax,0x92a9be26
  416214:	pop    es
  416215:	pop    ebp
  416216:	ror    BYTE PTR [ebx+0x7],cl
  416219:	add    cl,BYTE PTR [edi-0x7b]
  41621c:	adc    DWORD PTR [edi],0x9bbcf012
  416222:	or     BYTE PTR [ecx-0x1],cl
  416225:	mov    eax,0xa75f6246
  41622a:	push   eax
  41622b:	xchg   ecx,eax
  41622c:	mov    al,ds:0xd51658e5
  416231:	imul   esp,edi,0xffffffd6
  416234:	adc    al,0x4d
  416236:	inc    ebx
  416237:	mov    esi,0x8274e013
  41623c:	es je  0x4161d2
  41623f:	push   esp
  416240:	pusha  
  416241:	pop    ebp
  416242:	test   DWORD PTR ds:0xfdb4d0a7,ebx
  416248:	cs inc edx
  41624a:	(bad)  
  41624b:	retf   0xd985
  41624e:	je     0x4162c6
  416250:	imul   edi,ebx,0xf6c88e3f
  416256:	aas    
  416257:	shl    eax,cl
  416259:	or     eax,0x52663e53
  41625e:	cmp    al,0xdc
  416260:	or     DWORD PTR [ebx-0x59],esi
  416263:	data16 jmp 0x41623a
  416266:	pop    eax
  416267:	jmp    0x4d9bbcbf
  41626c:	push   es
  41626d:	inc    esi
  41626e:	add    bl,bh
  416270:	pop    ss
  416271:	inc    esi
  416272:	imul   edi,ecx,0xc69718e6
  416278:	mov    eax,ds:0x456ca12b
  41627d:	xor    BYTE PTR [edx+esi*4+0x48],ah
  416281:	(bad)  
  416282:	in     eax,0x1a
  416284:	push   esp
  416285:	fst    QWORD PTR [edi]
  416287:	bound  edi,QWORD PTR [ebx+esi*1]
  41628a:	and    BYTE PTR [edi+0x15ec5b91],0x5e
  416291:	add    BYTE PTR [edx+0x45],ah
  416294:	inc    edi
  416295:	lahf   
  416296:	loop   0x41622c
  416298:	cmp    dl,dh
  41629a:	push   ds
  41629b:	and    esp,DWORD PTR [ebx-0x11]
  41629e:	(bad)  
  41629f:	imul   ebp,DWORD PTR [eax],0x5f03bb4
  4162a5:	aas    
  4162a6:	pop    es
  4162a7:	lods   eax,DWORD PTR ds:[esi]
  4162a8:	cli    
  4162a9:	fisubr WORD PTR [edx-0xc]
  4162ac:	mov    DWORD PTR [ebx],ebx
  4162ae:	add    ebx,edi
  4162b0:	inc    ebp
  4162b1:	mov    BYTE PTR [ebx+0x10799e48],bl
  4162b7:	or     edx,DWORD PTR [eax]
  4162b9:	xchg   edx,eax
  4162ba:	hlt    
  4162bb:	xor    DWORD PTR [eax],ecx
  4162bd:	hlt    
  4162be:	or     esp,esp
  4162c0:	dec    ebp
  4162c1:	lods   al,BYTE PTR ds:[esi]
  4162c2:	sti    
  4162c3:	loopne 0x416332
  4162c5:	pop    eax
  4162c6:	inc    eax
  4162c7:	sbb    cl,BYTE PTR [esi+edx*4+0x3a]
  4162cb:	sbb    BYTE PTR [ebx-0xb897c59],dl
  4162d1:	in     al,0x91
  4162d3:	adc    eax,0xeabffd51
  4162d8:	xlat   BYTE PTR ds:[ebx]
  4162d9:	cmp    al,0x1b
  4162db:	cld    
  4162dc:	sbb    BYTE PTR [ebx-0x78],ch
  4162df:	mov    cl,0x86
  4162e1:	in     al,dx
  4162e2:	push   eax
  4162e3:	retf   
  4162e4:	cmp    esp,DWORD PTR [ecx]
  4162e6:	inc    ecx
  4162e7:	neg    BYTE PTR [ebx-0x20]
  4162ea:	push   esi
  4162eb:	or     ax,0x3f2d
  4162ef:	cli    
  4162f0:	pop    ds
  4162f1:	ja     0x4162e2
  4162f3:	jae    0x4162b6
  4162f5:	sbb    ebp,DWORD PTR [ebx+eiz*8]
  4162f8:	inc    BYTE PTR ds:0xe25fd504
  4162fe:	jge    0x416310
  416300:	push   es
  416301:	aad    0x51
  416303:	rcr    ebx,cl
  416305:	pop    es
  416306:	mov    al,0x83
  416308:	stos   BYTE PTR es:[edi],al
  416309:	and    dl,ch
  41630b:	mov    ss,WORD PTR [edx-0x5f4e9aa3]
  416311:	lea    ebx,[edx+ecx*4-0x6b]
  416315:	sbb    DWORD PTR [esi+0x32],0x3aa96a64
  41631c:	nop
  41631d:	outs   dx,DWORD PTR ds:[esi]
  41631e:	jle    0x41637f
  416320:	adc    ebx,DWORD PTR [ebx+0x1c999630]
  416326:	(bad)  
  416327:	jecxz  0x416363
  416329:	add    al,0x39
  41632b:	aad    0xcd
  41632d:	cdq    
  41632e:	add    dl,0x8
  416331:	xrelease mov DWORD PTR [edx-0x33bf730b],edi
  416338:	call   FWORD PTR [ebp+0x23]
  41633b:	add    eax,DWORD PTR [eax-0x1390ae85]
  416341:	add    BYTE PTR [ebx+0x44],al
  416344:	cdq    
  416345:	dec    edi
  416346:	cld    
  416347:	mov    ds:0xbc194040,al
  41634c:	pop    ecx
  41634d:	dec    edx
  41634e:	loopne 0x41630f
  416350:	push   ds
  416351:	dec    esp
  416352:	ja     0x4162f0
  416354:	add    DWORD PTR [ecx-0x221ecd68],eax
  41635a:	cmp    bl,BYTE PTR ss:[esi+ecx*1]
  41635e:	xchg   DWORD PTR [ebx+0x39791b4b],eax
  416364:	or     al,0xaa
  416366:	shr    DWORD PTR [eax],1
  416368:	shl    DWORD PTR [edi+eiz*2],cl
  41636b:	adc    cl,bh
  41636d:	sub    al,0x92
  41636f:	xlat   BYTE PTR ds:[ebx]
  416370:	mov    al,ds:0xb082fae0
  416375:	addr16 push esp
  416377:	lahf   
  416378:	jmp    0x70f5f6ba
  41637d:	ret    
  41637e:	mov    dl,0x1b
  416380:	push   0xffffffb8
  416382:	add    bh,BYTE PTR [ecx-0x44434056]
  416388:	outs   dx,DWORD PTR ds:[esi]
  416389:	ror    DWORD PTR [edx],cl
  41638b:	sub    eax,0x508f2389
  416390:	pop    ebx
  416391:	(bad)  
  416392:	xlat   BYTE PTR ds:[ebx]
  416393:	xor    eax,0x37e27268
  416398:	fidiv  WORD PTR [ebx]
  41639a:	pop    eax
  41639b:	shl    BYTE PTR ds:[esi-0x1],1
  41639f:	loopne 0x416347
  4163a1:	jg     0x41640c
  4163a3:	hlt    
  4163a4:	jle    0x416355
  4163a6:	cmp    cl,BYTE PTR [ebx]
  4163a8:	aas    
  4163a9:	push   edx
  4163aa:	or     dl,BYTE PTR [edx+ebx*1-0x798272f4]
  4163b1:	mov    al,0xc1
  4163b3:	pop    ds
  4163b4:	sbb    DWORD PTR [ebx],edi
  4163b6:	stos   DWORD PTR es:[edi],eax
  4163b7:	jne    0x41635b
  4163b9:	bound  esi,QWORD PTR [esi-0x34]
  4163bc:	ret    0x7c7e
  4163bf:	mov    edi,0x669337f0
  4163c4:	add    eax,DWORD PTR [ebp+0x7f8fdb0d]
  4163ca:	imul   eax,edx,0x57af1020
  4163d0:	jmp    0xd4a7f63
  4163d5:	daa    
  4163d6:	retf   0x4bea
  4163d9:	and    BYTE PTR [eax],0x7d
  4163dc:	inc    esp
  4163dd:	test   al,0x5f
  4163df:	mov    bh,BYTE PTR [ebx+esi*4+0x12c0ed51]
  4163e6:	jmp    0x814d4f23
  4163eb:	lock test eax,0x9ea87187
  4163f1:	mov    WORD PTR [ecx+ebp*1-0x1],es
  4163f5:	sahf   
  4163f6:	sub    ah,BYTE PTR [ecx]
  4163f8:	xchg   ebp,eax
  4163f9:	lods   eax,DWORD PTR ds:[esi]
  4163fa:	es mov dh,0x64
  4163fd:	bound  edi,QWORD PTR ds:0xda12b7ac
  416403:	xchg   edx,eax
  416404:	les    esi,FWORD PTR [eax-0x50]
  416407:	push   esi
  416408:	jg     0x4163af
  41640a:	mov    al,0xba
  41640c:	data16 cld 
  41640e:	mov    ebp,0xd24a0c69
  416413:	addr16 push ecx
  416415:	lahf   
  416416:	inc    esi
  416417:	sub    al,0x97
  416419:	push   ss
  41641a:	and    ebx,DWORD PTR [esi+0x50]
  41641d:	arpl   WORD PTR [ebx+ebx*1+0x3c],sp
  416421:	push   edx
  416422:	add    DWORD PTR [esi],edi
  416424:	cmp    eax,0xef0905fd
  416429:	cmovo  eax,esp
  41642c:	adc    ecx,esi
  41642e:	mov    eax,0x79240dcd
  416433:	and    ch,BYTE PTR [edx+0x30]
  416436:	xor    eax,0xcb5ddb3f
  41643b:	inc    ebx
  41643c:	dec    edi
  41643d:	mul    ch
  41643f:	jge    0x416417
  416441:	and    DWORD PTR [esi+0x59],esi
  416444:	sbb    eax,0x315dd81a
  416449:	dec    esp
  41644a:	jbe    0x416493
  41644c:	mov    ebx,DWORD PTR [eax-0x28c00446]
  416452:	cmp    ah,dl
  416454:	mov    edx,0xb8bf0701
  416459:	(bad)  
  41645a:	and    cl,BYTE PTR [edi]
  41645c:	sbb    ah,BYTE PTR [eax]
  41645e:	fwait
  41645f:	pop    ebx
  416460:	outs   dx,DWORD PTR ds:[esi]
  416461:	or     BYTE PTR [ebp+edx*4+0xdca9f16],0xb
  416469:	mov    cl,0x30
  41646b:	cli    
  41646c:	sbb    BYTE PTR [edx-0x13aa217b],bh
  416472:	dec    eax
  416473:	xor    DWORD PTR [esi],ebx
  416475:	cmc    
  416476:	gs inc eax
  416478:	xor    eax,0x378fc389
  41647d:	mov    dh,0xc0
  41647f:	cmp    edi,DWORD PTR [edi-0x22]
  416482:	fdiv   st(2),st
  416484:	adc    eax,0x1569ccdf
  416489:	mov    eax,ds:0x2b8885f5
  41648e:	and    ebp,DWORD PTR [esp+eax*2+0x466d57bf]
  416495:	test   esp,esi
  416497:	xor    bh,BYTE PTR [edx]
  416499:	cld    
  41649a:	mov    ch,0x20
  41649c:	imul   eax,esi,0x85f0b14
  4164a2:	add    eax,DWORD PTR [esi-0x20]
  4164a5:	mov    ebx,0x5978a58d
  4164aa:	popa   
  4164ab:	push   0x4b21a486
  4164b0:	fimul  DWORD PTR [esi-0x44c07221]
  4164b6:	cld    
  4164b7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4164b8:	call   0xd051:0xd696240d
  4164bf:	cmp    bh,ch
  4164c1:	or     eax,0x661e4850
  4164c6:	aaa    
  4164c7:	stos   DWORD PTR es:[edi],eax
  4164c8:	(bad)  
  4164c9:	jge    0x416511
  4164cb:	lahf   
  4164cc:	aaa    
  4164cd:	(bad)  
  4164ce:	shr    dh,cl
  4164d0:	jnp    0x416461
  4164d2:	fild   QWORD PTR [ebp+0x69]
  4164d5:	leave  
  4164d6:	test   DWORD PTR [eax+0xa433713],esi
  4164dc:	mov    edx,?
  4164de:	jns    0x416480
  4164e0:	sahf   
  4164e1:	outs   dx,DWORD PTR ds:[esi]
  4164e2:	daa    
  4164e3:	xchg   edi,eax
  4164e4:	jmp    0xb01ab6e0
  4164e9:	pop    esi
  4164ea:	not    DWORD PTR [esp+ebx*2]
  4164ed:	pop    esi
  4164ee:	repnz add al,0xf8
  4164f1:	gs out 0x6d,eax
  4164f4:	xchg   DWORD PTR [eax+0x51f663fb],edx
  4164fa:	outs   dx,BYTE PTR ds:[esi]
  4164fb:	jle    0x41656e
  4164fd:	hlt    
  4164fe:	and    DWORD PTR [ebx+0x27b5a4c3],esp
  416504:	aam    0x95
  416506:	mov    ebx,0x523fa343
  41650b:	in     eax,0x83
  41650d:	mov    dl,0x58
  41650f:	add    edx,DWORD PTR [edx-0x39a74fa7]
  416515:	mov    ds:0x1fea629a,al
  41651a:	jns    0x416563
  41651c:	push   esi
  41651d:	repz sahf 
  41651f:	mov    bl,0xf7
  416521:	and    dh,BYTE PTR [ecx+0x27]
  416524:	jle    0x416568
  416526:	cmp    BYTE PTR [eax-0x514c88bf],cl
  41652c:	dec    esp
  41652d:	cmp    ebx,DWORD PTR [ecx-0x2]
  416530:	mov    bl,ah
  416532:	xchg   ebp,eax
  416533:	push   edi
  416534:	hlt    
  416535:	stos   BYTE PTR es:[edi],al
  416536:	aam    0x14
  416538:	dec    edx
  416539:	cld    
  41653a:	mov    esp,0x3537b511
  41653f:	stos   BYTE PTR es:[edi],al
  416540:	cmc    
  416541:	adc    al,0xc8
  416543:	jle    0x416593
  416545:	pusha  
  416546:	stos   BYTE PTR es:[edi],al
  416547:	rcr    BYTE PTR [esi+0x5b5e4a58],0x3f
  41654e:	(bad)  
  41654f:	or     ecx,esi
  416551:	inc    DWORD PTR [esi+0x76]
  416554:	fst    QWORD PTR ds:0x95aa26b1
  41655a:	std    
  41655b:	inc    ebx
  41655c:	fdiv   st(1),st
  41655e:	cld    
  41655f:	loope  0x4165a1
  416561:	add    dl,BYTE PTR [ebp-0x50]
  416564:	inc    edi
  416565:	push   cs
  416566:	push   ss
  416567:	clc    
  416568:	es test eax,0x58c63bf0
  41656e:	xchg   edx,eax
  41656f:	lods   eax,DWORD PTR ds:[esi]
  416570:	add    al,0x3f
  416572:	xor    DWORD PTR [ebx+ebx*1-0x30518c4b],ebp
  416579:	xor    DWORD PTR es:[ebp+0x7],ebx
  41657d:	xor    BYTE PTR [edx+0x209554ba],al
  416583:	popf   
  416584:	addr16 retf 0xa87a
  416588:	in     al,0x33
  41658a:	xchg   bh,al
  41658c:	pop    ebp
  41658d:	ds aas 
  41658f:	xchg   edi,edx
  416591:	fwait
  416592:	imul   ebp,DWORD PTR [edi+eiz*8+0x39d18de8],0x7ec47f29
  41659d:	dec    ebx
  41659e:	mov    BYTE PTR [eax+0xd771eeb],cl
  4165a4:	outs   dx,BYTE PTR es:[esi]
  4165a6:	sahf   
  4165a7:	mov    sp,0xbc37
  4165ab:	mov    edi,0x2eabed93
  4165b0:	sbb    BYTE PTR [ecx+0x73],bh
  4165b3:	adc    dh,ah
  4165b5:	cmc    
  4165b6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4165b7:	cmp    dh,bl
  4165b9:	call   0xf709b34e
  4165be:	mov    al,ds:0xa15d6afc
  4165c3:	xor    bh,BYTE PTR [ecx]
  4165c5:	ret    0x9dfb
  4165c8:	(bad)  
  4165c9:	jo     0x4165cd
  4165cb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4165cc:	pop    ebx
  4165cd:	loop   0x4165a5
  4165cf:	push   esp
  4165d0:	bound  edx,QWORD PTR [edx-0x4e2ffb14]
  4165d6:	dec    edi
  4165d7:	clc    
  4165d8:	retf   0x8eb9
  4165db:	out    dx,al
  4165dc:	pop    es
  4165dd:	popa   
  4165de:	xchg   BYTE PTR [ebp+0x1565f0d6],bh
  4165e4:	data16 and BYTE PTR [edx+0x5f],dl
  4165e8:	and    DWORD PTR [ecx-0x2f],0xfba72ff
  4165ef:	cmp    dl,BYTE PTR [ecx-0x4]
  4165f2:	test   eax,0x4ce026b5
  4165f7:	pop    esp
  4165f8:	mov    ebx,0x1335f3e3
  4165fd:	pop    esp
  4165fe:	mov    ds:0xc0b832eb,eax
  416603:	dec    ebx
  416604:	mov    bl,0xe1
  416606:	jmp    FWORD PTR [eax-0x343c3a88]
  41660c:	inc    ecx
  41660d:	enter  0x4e46,0x64
  416611:	xor    al,0xdc
  416613:	adc    al,BYTE PTR [ebx]
  416615:	push   edi
  416616:	mov    cl,0x68
  416618:	cmp    cl,dl
  41661a:	inc    edx
  41661b:	daa    
  41661c:	imul   ebp,DWORD PTR ds:[ebp+0x7],0x5f
  416621:	imul   edi,DWORD PTR [ecx+0x51be026d],0xba75e304
  41662b:	clc    
  41662c:	inc    eax
  41662d:	mov    ebx,0x4d4e1a53
  416632:	fs mov esp,0xa7a86801
  416638:	mov    bl,0xed
  41663a:	(bad)  
  41663b:	mov    eax,0x3e1a1abd
  416640:	jecxz  0x4165d7
  416642:	mov    eax,0xd10d47b
  416647:	sbb    al,bh
  416649:	daa    
  41664a:	mov    eax,ds:0xdcb747b4
  41664f:	adc    ebx,ebp
  416651:	sub    al,0xc
  416653:	inc    edx
  416654:	int    0x25
  416656:	add    ecx,DWORD PTR [ebp+0x528a2bc3]
  41665c:	adc    al,0x72
  41665e:	test   al,0xa7
  416660:	cmc    
  416661:	cmp    BYTE PTR [eax+0x18],0x7c
  416665:	sub    al,BYTE PTR [ecx+0x5a]
  416668:	pop    ds
  416669:	jb     0x4166e4
  41666b:	stos   DWORD PTR es:[edi],eax
  41666c:	push   esp
  41666d:	mov    ebx,0xcf01f837
  416672:	xchg   ebx,eax
  416673:	mov    al,ds:0x30d6acc1
  416678:	popf   
  416679:	pop    ss
  41667a:	add    al,BYTE PTR [esi+0x5e407871]
  416680:	(bad)  
  416681:	push   esp
  416682:	dec    ecx
  416683:	or     ebx,DWORD PTR [ecx+0x7f]
  416686:	jmp    0xc750:0x96b90fbf
  41668d:	pop    ss
  41668e:	add    ebx,DWORD PTR [esi]
  416690:	xchg   DWORD PTR [edi-0x51094ce],edi
  416696:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416697:	mov    ds:0x3c1d98e0,eax
  41669c:	call   0x24ff:0x65375218
  4166a3:	mov    WORD PTR [ecx-0x16],?
  4166a6:	cmp    bl,BYTE PTR [esi+0x7f]
  4166a9:	push   edx
  4166aa:	arpl   WORD PTR [ebx+edx*4],cx
  4166ad:	push   ebp
  4166ae:	adc    BYTE PTR [ebp+0x67],bh
  4166b1:	clc    
  4166b2:	mov    dl,BYTE PTR [ebp+esi*1+0x32f9a7f6]
  4166b9:	loop   0x4166d3
  4166bb:	(bad)  
  4166bc:	push   esp
  4166bd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4166be:	and    eax,0xf5d3af94
  4166c3:	sar    DWORD PTR [ebx+0x0],1
  4166c6:	jno    0x4166bf
  4166c8:	shl    BYTE PTR [edi-0x5a],1
  4166cb:	call   0x1c3a67d7
  4166d0:	mov    dl,0xde
  4166d2:	fcmovne st,st(0)
  4166d4:	push   ss
  4166d5:	shr    WORD PTR [ecx-0xc339ee9],0xb0
  4166dd:	fs sbb eax,0x82b14692
  4166e3:	dec    esi
  4166e4:	pop    eax
  4166e5:	mov    bh,0xfb
  4166e7:	jle    0x41666e
  4166e9:	mov    ds:0xbe6f8414,eax
  4166ee:	int3   
  4166ef:	stc    
  4166f0:	mov    esi,fs
  4166f2:	(bad)  
  4166f3:	push   eax
  4166f4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4166f5:	shl    DWORD PTR [eax-0x206331d],0x4a
  4166fc:	mov    al,ds:0x51159a69
  416701:	lahf   
  416702:	punpckhdq mm4,mm7
  416705:	idiv   ch
  416707:	fwait
  416708:	lahf   
  416709:	imul   ebx,DWORD PTR [edi+0x50cf70b6],0x3d
  416710:	add    BYTE PTR [esi],ch
  416712:	aas    
  416713:	pop    ebp
  416714:	outs   dx,BYTE PTR ds:[esi]
  416715:	jne    0x416793
  416717:	dec    ebx
  416718:	lea    esi,[ebp-0x7a3cedfa]
  41671e:	psraw  mm7,mm1
  416721:	in     al,dx
  416722:	aam    0xdb
  416724:	retf   0x106f
  416727:	popf   
  416728:	push   es
  416729:	or     DWORD PTR [ebx],ebx
  41672b:	push   eax
  41672c:	inc    ebp
  41672d:	jno    0x416744
  41672f:	jne    0x41678c
  416731:	xor    dl,BYTE PTR es:[eax-0x91354c3]
  416738:	ins    DWORD PTR es:[edi],dx
  416739:	inc    esi
  41673a:	aam    0x81
  41673c:	scas   al,BYTE PTR es:[edi]
  41673d:	lods   al,BYTE PTR ds:[esi]
  41673e:	jge    0x4167ad
  416740:	stos   BYTE PTR es:[edi],al
  416741:	sbb    DWORD PTR [eax+0x4521b579],0xffffffdb
  416748:	out    0x58,eax
  41674a:	loop   0x4166f6
  41674c:	rol    DWORD PTR [edi],1
  41674e:	jl     0x416755
  416750:	fucomi st,st(4)
  416752:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416753:	inc    ebx
  416754:	mov    al,ds:0x41cdbd70
  416759:	dec    ebx
  41675a:	cwde   
  41675b:	xor    DWORD PTR [edi],eax
  41675d:	xchg   ebp,eax
  41675e:	aaa    
  41675f:	xchg   BYTE PTR [eax+0x2af6d51c],bh
  416765:	sub    esp,eax
  416767:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416768:	xlat   BYTE PTR ds:[ebx]
  416769:	je     0x41673c
  41676b:	and    DWORD PTR [esi+0xd],ecx
  41676e:	jne    0x4167c8
  416770:	mov    ebp,DWORD PTR [eax-0x5b3b0056]
  416776:	lods   eax,DWORD PTR ds:[esi]
  416777:	sbb    eax,0x80cb10ad
  41677c:	jno    0x416789
  41677e:	cmp    eax,0xcc1c04e6
  416783:	jge    0x416716
  416785:	mov    eax,ds:0x2ce5aa
  41678a:	jge    0x4167a2
  41678c:	in     al,dx
  41678d:	mov    dl,0xed
  41678f:	clc    
  416790:	jl     0x41673c
  416792:	push   ecx
  416793:	pop    edx
  416794:	cmp    al,bl
  416796:	sahf   
  416797:	or     eax,edi
  416799:	mov    ebx,0xc3e020c6
  41679e:	popa   
  41679f:	aaa    
  4167a0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4167a1:	rcl    DWORD PTR [ecx],0x1c
  4167a4:	adc    al,BYTE PTR [ebx-0x34]
  4167a7:	pop    esi
  4167a8:	sub    eax,0xf714ceab
  4167ad:	stc    
  4167ae:	sbb    dl,ch
  4167b0:	mov    al,BYTE PTR ds:0xb7ea3c34
  4167b6:	lods   al,BYTE PTR ds:[esi]
  4167b7:	inc    edi
  4167b8:	in     al,0x28
  4167ba:	mov    WORD PTR ds:0x7db491d0,fs
  4167c0:	(bad)  
  4167c1:	xor    dl,bl
  4167c3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4167c4:	imul   ebp,eax,0x580d8718
  4167ca:	jnp    0x4167f7
  4167cc:	sbb    ah,BYTE PTR [ebx+0x63]
  4167cf:	shl    dl,0xbd
  4167d2:	mov    edi,0xd1ae133a
  4167d7:	sti    
  4167d8:	lods   eax,DWORD PTR ds:[esi]
  4167d9:	mov    al,ds:0xb15aa811
  4167de:	mov    eax,ds:0x9234f500
  4167e3:	into   
  4167e4:	aas    
  4167e5:	mov    bl,BYTE PTR [edx]
  4167e7:	xchg   edi,eax
  4167e8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4167e9:	jle    0x4167e1
  4167eb:	push   eax
  4167ec:	leave  
  4167ed:	adc    esi,esp
  4167ef:	(bad)  
  4167f0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4167f1:	in     al,0xb5
  4167f3:	ret    
  4167f4:	outs   dx,DWORD PTR ds:[esi]
  4167f5:	pop    edi
  4167f6:	xchg   esp,eax
  4167f7:	lahf   
  4167f8:	dec    esp
  4167f9:	dec    ebp
  4167fa:	not    DWORD PTR [eax-0x504ab166]
  416800:	repnz dec esi
  416802:	data16 add BYTE PTR [edi+0x5],0xc4
  416807:	aam    0xda
  416809:	std    
  41680a:	fyl2x  
  41680c:	ja     0x41682e
  41680e:	mov    WORD PTR [edx-0x74],ss
  416811:	ror    DWORD PTR [edi-0x5e],0x3f
  416815:	mov    bh,0x3a
  416817:	dec    edi
  416818:	fmul   QWORD PTR [esi]
  41681a:	mov    bh,0x7c
  41681c:	inc    ebp
  41681d:	add    BYTE PTR ds:0x9dcff21b,bl
  416823:	mov    bl,0x98
  416825:	rcr    DWORD PTR [edx],0x1a
  416828:	jmp    0x61b9:0x4a41e2a2
  41682f:	and    eax,0xd04d1298
  416834:	jno    0x41680e
  416836:	fs cld 
  416838:	mov    esi,0xcb18808c
  41683d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41683e:	bound  ecx,QWORD PTR [ebx-0x223f5d40]
  416844:	(bad)  
  416845:	and    eax,0xee1a4370
  41684a:	rcr    BYTE PTR [ebx],1
  41684c:	xor    al,0x2
  41684e:	sbb    al,0x95
  416850:	xchg   ecx,eax
  416851:	sahf   
  416852:	push   eax
  416853:	adc    ebp,DWORD PTR [ebx-0x6b]
  416856:	push   ds
  416857:	(bad)  
  416858:	lods   al,BYTE PTR ds:[esi]
  416859:	mov    edx,0x95f94f5d
  41685f:	adc    BYTE PTR [edi+0x3fe97b3f],bl
  416865:	out    dx,eax
  416866:	inc    ebx
  416867:	hlt    
  416868:	retf   
  416869:	xchg   edi,eax
  41686a:	(bad)  
  41686b:	sub    ah,dl
  41686d:	mov    al,0x95
  41686f:	jmp    0x416880
  416871:	lods   eax,DWORD PTR ds:[esi]
  416872:	mov    bh,BYTE PTR [ecx]
  416874:	dec    edx
  416875:	cwde   
  416876:	scas   eax,DWORD PTR es:[edi]
  416877:	cmp    BYTE PTR [eax+0x582454ea],bh
  41687d:	das    
  41687e:	add    DWORD PTR [eax+edx*4+0x3462ae16],0xffffff89
  416886:	push   ss
  416887:	jnp    0x41684d
  416889:	mov    BYTE PTR [edi-0x75d9bb3f],dh
  41688f:	xor    ebp,DWORD PTR [edi+eax*4-0x49]
  416893:	xor    al,0xd5
  416895:	leave  
  416896:	imul   edi,DWORD PTR [edx+0x21668b9b],0x1a
  41689d:	xor    BYTE PTR [esi+0x2df11995],ah
  4168a3:	pop    ebx
  4168a4:	in     eax,0x9
  4168a6:	mov    esi,esi
  4168a8:	ss test ecx,esp
  4168ab:	jne    0x416853
  4168ad:	jg     0x41683d
  4168af:	cmp    BYTE PTR [ebp-0x5f93a92b],bl
  4168b5:	mov    ah,0x6b
  4168b7:	test   esp,0xbd5b90e5
  4168bd:	js     0x41692f
  4168bf:	add    DWORD PTR [ecx+0x1d],0x27
  4168c3:	add    ebp,esi
  4168c5:	cs jns 0x4168fe
  4168c8:	outs   dx,BYTE PTR ds:[esi]
  4168c9:	sub    ch,ch
  4168cb:	push   ebx
  4168cc:	inc    ebp
  4168cd:	xor    eax,0x26e5abd5
  4168d2:	mov    ah,0x4c
  4168d4:	mov    bl,BYTE PTR [edi+0x2e]
  4168d7:	mov    bl,0x2c
  4168d9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4168da:	hlt    
  4168db:	aam    0x6
  4168dd:	mov    al,0x6f
  4168df:	fcomip st,st(1)
  4168e1:	mov    ds:0xb031555d,eax
  4168e6:	icebp  
  4168e7:	ja     0x4168c7
  4168e9:	mov    ds:0x85380e36,al
  4168ee:	dec    esi
  4168ef:	mov    dh,0xf8
  4168f1:	out    0x9f,al
  4168f3:	fidivr DWORD PTR [ecx]
  4168f5:	mov    BYTE PTR [ebx+0x38491a06],dl
  4168fb:	dec    ebx
  4168fc:	cmp    eax,DWORD PTR [ebx+0x366ec5df]
  416902:	in     al,dx
  416903:	(bad)  
  416904:	dec    BYTE PTR [eax-0x666b37f5]
  41690a:	jnp    0x416981
  41690c:	pusha  
  41690d:	js     0x416980
  41690f:	pop    esi
  416910:	mov    esp,0xec203328
  416915:	popf   
  416916:	cs push edx
  416918:	xor    cl,BYTE PTR [ecx]
  41691a:	sbb    eax,0x70660a64
  41691f:	lods   eax,DWORD PTR ds:[esi]
  416920:	push   eax
  416921:	ret    0xcf53
  416924:	cwde   
  416925:	sub    BYTE PTR [esi],ah
  416927:	test   eax,0x607006c8
  41692c:	mov    BYTE PTR [edi],bh
  41692e:	lea    eax,fs:[eax+eiz*2-0x667bf124]
  416936:	out    0x4b,eax
  416938:	cmc    
  416939:	cdq    
  41693a:	dec    edi
  41693b:	mov    ?,ecx
  41693d:	ins    BYTE PTR es:[edi],dx
  41693e:	push   cs
  41693f:	(bad)  
  416940:	call   0x1c89ce72
  416945:	lods   eax,DWORD PTR ds:[esi]
  416946:	and    BYTE PTR [di+0x69],cl
  41694a:	xor    BYTE PTR [ebp-0x363ac079],0xa0
  416951:	(bad)  
  416952:	addr16 pop ecx
  416954:	push   ss
  416955:	push   esp
  416956:	scas   al,BYTE PTR es:[edi]
  416957:	add    bl,BYTE PTR [edx+edx*1+0x4f]
  41695b:	out    0x96,eax
  41695d:	mov    cl,0x24
  41695f:	cmp    DWORD PTR [ebp-0x55ea1568],0xffffffa5
  416966:	xchg   ebp,eax
  416967:	outs   dx,BYTE PTR ds:[esi]
  416968:	or     BYTE PTR [ebx],0xa3
  41696b:	inc    esi
  41696c:	sbb    BYTE PTR [esi-0xa],ch
  41696f:	jl     0x4168f9
  416971:	and    al,0x93
  416973:	lahf   
  416974:	gs and bh,al
  416977:	add    esp,eax
  416979:	repz pop ebx
  41697b:	vrsqrtss xmm7,xmm4,DWORD PTR [ebp+0x5a93946b]
  416983:	mov    dh,0x82
  416985:	mov    cl,0x2e
  416987:	mov    ecx,0xe35282b9
  41698c:	fmul   st(0),st
  41698e:	and    ebx,esi
  416990:	or     BYTE PTR [ecx-0x7680c2b4],ch
  416996:	ins    DWORD PTR es:[edi],dx
  416997:	pop    esi
  416998:	lea    ebp,[ebp-0x3f3e3e12]
  41699e:	addr16 cmc 
  4169a0:	push   edi
  4169a1:	pop    esi
  4169a2:	mov    al,ds:0x7dcc2dd9
  4169a7:	pusha  
  4169a8:	das    
  4169a9:	xor    DWORD PTR [ecx+ebp*1-0x61],ecx
  4169ad:	xlat   BYTE PTR ds:[ebx]
  4169ae:	pop    esp
  4169af:	aad    0x3
  4169b1:	pop    edx
  4169b2:	fdivr  QWORD PTR [ecx+0x2e]
  4169b5:	adc    eax,0x500a28af
  4169ba:	ss out dx,al
  4169bc:	int    0x84
  4169be:	adc    al,0x5b
  4169c0:	jp     0x4169af
  4169c2:	fcom   QWORD PTR ds:0x9ee79505
  4169c8:	repz test DWORD PTR [edi-0x40c6d735],ebp
  4169cf:	pop    ecx
  4169d0:	dec    ecx
  4169d1:	(bad)  
  4169d2:	das    
  4169d3:	es ins DWORD PTR es:[edi],dx
  4169d5:	imul   esp,DWORD PTR [edi],0xc
  4169d8:	and    dl,0xc
  4169db:	push   ecx
  4169dc:	jmp    0x416a1f
  4169de:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4169df:	cmc    
  4169e0:	cli    
  4169e1:	push   esi
  4169e2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4169e3:	xor    eax,0xb36a4a74
  4169e8:	(bad)  
  4169e9:	sbb    DWORD PTR ds:0x370900f8,edi
  4169ef:	leave  
  4169f0:	out    0xa5,eax
  4169f2:	bound  ebx,QWORD PTR [eax]
  4169f4:	ret    0x9827
  4169f7:	jl     0x4169df
  4169f9:	int    0x5a
  4169fb:	repnz mov BYTE PTR [ebp+0x1cc6fe0d],dl
  416a02:	mov    ds:0x21bb9dd1,al
  416a07:	retf   0xc2c7
  416a0a:	push   edi
  416a0b:	add    BYTE PTR [edi-0x5a],bh
  416a0e:	push   ebp
  416a0f:	test   eax,0x498296ee
  416a14:	je     0x416a64
  416a16:	loope  0x416a44
  416a18:	pop    esp
  416a19:	int    0xdd
  416a1b:	mov    al,al
  416a1d:	xlat   BYTE PTR ds:[ebx]
  416a1e:	int    0xcd
  416a20:	ret    
  416a21:	sar    DWORD PTR [ebp+0x4b],cl
  416a24:	push   ss
  416a25:	lock add DWORD PTR [ecx],esp
  416a28:	in     al,0x26
  416a2a:	jp     0x416a52
  416a2c:	xchg   esi,eax
  416a2d:	sbb    eax,0xab4832e3
  416a32:	jmp    0x416a00
  416a34:	inc    esi
  416a35:	mov    ch,0x41
  416a37:	test   al,0xa0
  416a39:	(bad)  
  416a3a:	pop    esp
  416a3b:	shr    DWORD PTR [eax+0x55b2b234],cl
  416a41:	imul   eax,DWORD PTR gs:[ebx+0x59],0x7e
  416a46:	in     eax,0x62
  416a48:	pop    ebx
  416a49:	aaa    
  416a4a:	dec    ecx
  416a4b:	test   bh,bh
  416a4d:	jmp    0x5e56:0xf161ef37
  416a54:	adc    cl,BYTE PTR [ebx]
  416a56:	inc    esp
  416a57:	xor    ebp,DWORD PTR [ecx]
  416a59:	adc    eax,0x14335634
  416a5e:	adc    dh,BYTE PTR [ebx+0x4dffca5c]
  416a64:	ins    DWORD PTR es:[edi],dx
  416a65:	adc    esi,ecx
  416a67:	ror    BYTE PTR [ebx+0x6045d777],cl
  416a6d:	xchg   DWORD PTR [eax],esi
  416a6f:	pop    es
  416a70:	retf   
  416a71:	mov    al,ds:0x114809d9
  416a76:	mov    al,0x57
  416a78:	pushf  
  416a79:	leave  
  416a7a:	test   BYTE PTR [eax],al
  416a7c:	sbb    dh,BYTE PTR [edi]
  416a7e:	inc    eax
  416a7f:	pop    esi
  416a80:	bound  ebp,QWORD PTR [edi+0x79abfb76]
  416a86:	shl    DWORD PTR [ebp+ecx*8+0x2a],0x5f
  416a8b:	mov    esp,0x5c53ebc5
  416a90:	xchg   ebp,eax
  416a91:	aam    0x7f
  416a93:	inc    esp
  416a94:	mov    esp,0x25e85f78
  416a99:	jnp    0x416b19
  416a9b:	sbb    bl,BYTE PTR [ecx]
  416a9d:	neg    BYTE PTR [ebx]
  416a9f:	and    BYTE PTR [eax],0x54
  416aa2:	add    al,0xb9
  416aa4:	sti    
  416aa5:	xor    DWORD PTR [edx+0x57],0xffffff99
  416aa9:	inc    edx
  416aaa:	lods   al,BYTE PTR ds:[esi]
  416aab:	retf   0xbdde
  416aae:	and    eax,0x6dca1251
  416ab3:	mov    ebx,0x88a97aac
  416ab8:	mov    ebx,DWORD PTR [edi+0x11]
  416abb:	adc    BYTE PTR [esi],ah
  416abd:	(bad)  
  416abe:	and    esi,DWORD PTR ds:0x42a7d558
  416ac4:	cmp    esp,DWORD PTR [edx]
  416ac6:	adc    BYTE PTR [ebp+0x13],0x7a
  416aca:	outs   dx,DWORD PTR ds:[esi]
  416acb:	pushf  
  416acc:	dec    esp
  416acd:	xor    bl,bl
  416acf:	pusha  
  416ad0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416ad1:	jle    0x416abb
  416ad3:	(bad)  
  416ad4:	iret   
  416ad5:	mov    ch,0xa0
  416ad7:	sti    
  416ad8:	add    ah,BYTE PTR [eax+0x23]
  416adb:	add    eax,0xf8c55faa
  416ae0:	pop    ebx
  416ae1:	inc    ecx
  416ae2:	jmp    0xb971:0x5d7d84c
  416ae9:	add    DWORD PTR [ebp-0x4d6bb18a],ebx
  416aef:	ds cld 
  416af1:	lahf   
  416af2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416af3:	lahf   
  416af4:	and    edi,ebp
  416af6:	rcr    BYTE PTR [eax-0x77b0a033],cl
  416afc:	int3   
  416afd:	cwde   
  416afe:	xor    DWORD PTR [ecx+eiz*4+0x10],0xfffffffa
  416b03:	lds    edx,FWORD PTR [esi+0x3c380271]
  416b09:	test   eax,0x70e43da8
  416b0e:	jo     0x416b73
  416b10:	ret    
  416b11:	out    dx,eax
  416b12:	pop    ebp
  416b13:	mul    DWORD PTR [ebx-0x15]
  416b16:	sub    al,0xf9
  416b18:	test   BYTE PTR [ecx],0x85
  416b1b:	dec    eax
  416b1c:	lds    ebp,FWORD PTR [edi]
  416b1e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416b1f:	inc    ecx
  416b20:	mov    ecx,DWORD PTR [ebx+0x6c4683c0]
  416b26:	(bad)  
  416b27:	xor    eax,0xd9627760
  416b2c:	rep movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416b2e:	sbb    al,0xa3
  416b30:	cli    
  416b31:	rol    bh,0x50
  416b34:	popa   
  416b35:	fs jmp FWORD PTR es:[eax-0x680761c0]
  416b3d:	jp     0x416b8f
  416b3f:	outs   dx,DWORD PTR ds:[esi]
  416b40:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416b41:	mov    edx,0xcf4e19fc
  416b46:	add    BYTE PTR [eax+0x286e0e0d],ah
  416b4c:	mov    esi,0x3f62183c
  416b51:	adc    eax,DWORD PTR [eax+0x5bfb4760]
  416b57:	or     BYTE PTR [ebp+0x263a050b],cl
  416b5d:	ins    DWORD PTR es:[edi],dx
  416b5e:	lds    eax,FWORD PTR [edx]
  416b60:	inc    edx
  416b61:	lahf   
  416b62:	ds xchg edx,eax
  416b64:	sub    esp,eax
  416b66:	add    al,0xa
  416b68:	imul   ebp,DWORD PTR [edi+ebp*8+0x67246403],0x74
  416b70:	sbb    eax,ebp
  416b72:	out    dx,al
  416b73:	or     cl,cl
  416b75:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416b76:	iret   
  416b77:	and    dl,BYTE PTR [edi]
  416b79:	push   edi
  416b7a:	les    esi,FWORD PTR [edi-0x71207e8]
  416b80:	jmp    0x416bc9
  416b82:	sti    
  416b83:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416b84:	out    0x9a,al
  416b86:	mov    bl,0x56
  416b88:	aaa    
  416b89:	sub    al,0x3f
  416b8b:	xchg   esi,eax
  416b8c:	imul   esp,DWORD PTR ds:0x921c9050,0xb0c95055
  416b96:	sbb    cl,bh
  416b98:	mov    ebx,DWORD PTR [edi+0x173996e7]
  416b9e:	push   0xffffffd5
  416ba0:	mov    cl,0x79
  416ba2:	jnp    0x416b5b
  416ba4:	cmp    DWORD PTR [edi-0x32f27d1d],esi
  416baa:	cwde   
  416bab:	sbb    al,0x97
  416bad:	addr16 loopne 0x416b53
  416bb0:	xlat   BYTE PTR ds:[ebx]
  416bb1:	aaa    
  416bb2:	cmp    DWORD PTR [ecx+eax*8],esp
  416bb5:	inc    ebx
  416bb6:	das    
  416bb7:	xor    BYTE PTR [edx-0x30c85898],ch
  416bbd:	xchg   BYTE PTR [eax-0x3614fbc],ah
  416bc3:	ins    BYTE PTR es:[edi],dx
  416bc4:	cwde   
  416bc5:	adc    eax,0x19161e1b
  416bca:	mov    dh,0xc9
  416bcc:	inc    ebx
  416bcd:	loopne 0x416b85
  416bcf:	pop    edx
  416bd0:	arpl   WORD PTR [ebp-0x438b9c6b],di
  416bd6:	retf   
  416bd7:	lds    esi,FWORD PTR [eax-0x52]
  416bda:	lods   al,BYTE PTR ds:[esi]
  416bdb:	add    al,0xf7
  416bdd:	push   ecx
  416bde:	add    al,BYTE PTR [ecx-0x7a]
  416be1:	cmp    eax,0x2a8f1be9
  416be6:	outs   dx,DWORD PTR ds:[esi]
  416be7:	fldenv [esp+ebx*8-0x7f]
  416beb:	xor    ch,BYTE PTR [edx+0x17]
  416bee:	cs fwait
  416bf0:	daa    
  416bf1:	adc    edx,edi
  416bf3:	fmul   DWORD PTR [ecx+ebp*1-0x79]
  416bf7:	jb     0x416bff
  416bf9:	pushf  
  416bfa:	arpl   cx,di
  416bfc:	mov    ebp,0x47609ea4
  416c01:	push   eax
  416c02:	call   0x6b8d419f
  416c07:	inc    ecx
  416c08:	and    bl,dl
  416c0a:	mov    cl,0x2a
  416c0c:	out    dx,eax
  416c0d:	loope  0x416ba5
  416c0f:	mov    eax,0x6bb8b0a8
  416c14:	stos   DWORD PTR es:[edi],eax
  416c15:	fstp   TBYTE PTR [edx+0x6f]
  416c18:	mov    bh,ch
  416c1a:	pop    ds
  416c1b:	iret   
  416c1c:	dec    ebp
  416c1d:	sub    al,0x36
  416c1f:	jnp    0x416bca
  416c21:	push   ecx
  416c22:	cmc    
  416c23:	push   ecx
  416c24:	neg    BYTE PTR [edi-0x4abea250]
  416c2a:	lea    edi,[ebx+0x6]
  416c2d:	and    al,BYTE PTR [eax-0x5059e432]
  416c33:	mov    dl,bh
  416c35:	fwait
  416c36:	jns    0x416bd5
  416c38:	lock add eax,0xf1cef78
  416c3e:	pop    ecx
  416c3f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416c40:	fdivp  st(3),st
  416c42:	loopne 0x416c11
  416c44:	xor    DWORD PTR [esi+0x419cea00],ebx
  416c4a:	mov    dh,0xe8
  416c4c:	jmp    DWORD PTR [edi+0x3f]
  416c4f:	shl    DWORD PTR [edx],0x10
  416c52:	sbb    al,0x73
  416c54:	push   esp
  416c55:	lea    ebp,[edx]
  416c57:	aad    0xce
  416c59:	int    0x9b
  416c5b:	sbb    al,0x6c
  416c5d:	outs   dx,DWORD PTR ds:[esi]
  416c5e:	cwde   
  416c5f:	cld    
  416c60:	lea    ebp,[ebx]
  416c62:	mov    edi,DWORD PTR [ecx-0x77]
  416c65:	fsub   st(0),st
  416c67:	or     ah,BYTE PTR [esi+ebx*2-0x6f9c056]
  416c6e:	xchg   BYTE PTR [eax-0x6a],cl
  416c71:	cmovg  ebx,DWORD PTR [edi-0x5dd1fa00]
  416c78:	aad    0xfe
  416c7a:	cmc    
  416c7b:	jmp    0x9fc3eecb
  416c80:	mov    esi,0xeaf812d6
  416c85:	cld    
  416c86:	pop    es
  416c87:	push   cs
  416c88:	popf   
  416c89:	mov    ebx,0x2597f39d
  416c8e:	js     0x416c94
  416c90:	mov    ebx,0xa97d8c4d
  416c95:	jg     0x416c62
  416c97:	jno    0x416c62
  416c99:	nop
  416c9a:	xor    eax,0x3d7a90b9
  416c9f:	popa   
  416ca0:	cmp    esi,esp
  416ca2:	mov    bh,al
  416ca4:	pop    esp
  416ca5:	not    BYTE PTR [edx+0x2f]
  416ca8:	aam    0x7e
  416caa:	or     BYTE PTR [eax+0x476ddb9d],bl
  416cb0:	out    dx,al
  416cb1:	js     0x416c91
  416cb3:	jp     0x416d2e
  416cb5:	dec    edi
  416cb6:	data16 gs (bad) 
  416cb9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416cba:	in     eax,dx
  416cbb:	or     DWORD PTR [ebx-0x24034dbf],edi
  416cc1:	dec    ebx
  416cc2:	mov    ds:0xaa32d893,eax
  416cc7:	mov    ch,0xc3
  416cc9:	push   esi
  416cca:	pop    es
  416ccb:	scas   al,BYTE PTR es:[edi]
  416ccc:	mov    al,ds:0xbeef0340
  416cd1:	icebp  
  416cd2:	lods   al,BYTE PTR ds:[esi]
  416cd3:	push   0x29b759bd
  416cd8:	xor    eax,0x4cc2568e
  416cdd:	ficom  DWORD PTR [edx]
  416cdf:	add    eax,0x7498c2b4
  416ce4:	push   edx
  416ce5:	jmp    0x9f97a6d0
  416cea:	popf   
  416ceb:	mov    eax,0xd100f1dd
  416cf0:	or     eax,0xb101fc16
  416cf5:	mov    eax,gs:0xd4a65fbb
  416cfb:	mov    bh,0x78
  416cfd:	ja     0x416cbf
  416cff:	or     BYTE PTR [esi+0x44],dh
  416d02:	dec    ebx
  416d03:	mov    BYTE PTR [ebx-0x1696c0b5],dh
  416d09:	mov    cl,bl
  416d0b:	inc    edx
  416d0c:	dec    edi
  416d0d:	test   BYTE PTR [ebx+0x677bbb11],al
  416d13:	xor    al,0x80
  416d15:	rcl    DWORD PTR [ecx+0x3e],cl
  416d18:	popf   
  416d19:	js     0x416d26
  416d1b:	(bad)  
  416d1c:	fist   WORD PTR [edx+0x61984d15]
  416d22:	adc    esp,DWORD PTR [eax-0x19]
  416d25:	mov    ds:0x5e4316d,eax
  416d2a:	fidiv  WORD PTR [edi+0x6e5da7c7]
  416d30:	sbb    BYTE PTR [ebx+ebp*2],0xbf
  416d34:	inc    ecx
  416d35:	repnz xor al,0x50
  416d38:	cmp    DWORD PTR [edx-0x40f1ee68],esp
  416d3e:	mov    bh,0xbd
  416d40:	xor    dh,BYTE PTR [ebx]
  416d42:	out    0x6,eax
  416d44:	mov    eax,0x71bfadd7
  416d49:	and    al,0x16
  416d4b:	add    BYTE PTR [ebx-0x7410636],dl
  416d51:	shr    DWORD PTR [esi-0x1e],0x2
  416d55:	test   BYTE PTR [edi],0x82
  416d58:	test   eax,0x1f019ba9
  416d5d:	jne    0x416d0c
  416d5f:	jl     0x416d9d
  416d61:	addr16 nop
  416d63:	ds aaa 
  416d65:	mov    ebx,DWORD PTR [ebp+0x77]
  416d68:	fild   QWORD PTR [eax+eiz*4-0x7cb7c924]
  416d6f:	add    bl,bh
  416d71:	test   al,0x75
  416d73:	xor    ebx,esp
  416d75:	gs mov dh,0xc6
  416d78:	mov    ah,0x93
  416d7a:	retf   0x1462
  416d7d:	into   
  416d7e:	cwde   
  416d7f:	enter  0x6e75,0xd8
  416d83:	repnz dec eax
  416d85:	pop    ds
  416d86:	aas    
  416d87:	xlat   BYTE PTR ds:[ebx]
  416d88:	xchg   ecx,eax
  416d89:	lds    eax,FWORD PTR [edi+eiz*8]
  416d8c:	sbb    DWORD PTR [esi-0x7b246021],edi
  416d92:	add    eax,0x866c4ce3
  416d97:	fidiv  WORD PTR [ebp+0x71]
  416d9a:	mov    eax,0xc8918cab
  416d9f:	enter  0x7875,0x43
  416da3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416da4:	hlt    
  416da5:	dec    esi
  416da6:	push   ss
  416da7:	in     eax,0xd8
  416da9:	mov    bl,0xb8
  416dab:	pop    edx
  416dac:	enter  0xcd87,0xa1
  416db0:	sbb    DWORD PTR ds:0x1f0e5e5e,edi
  416db6:	fsubr  QWORD PTR [ecx]
  416db8:	ins    BYTE PTR es:[edi],dx
  416db9:	mov    ebx,DWORD PTR [eax]
  416dbb:	pop    ebp
  416dbc:	loop   0x416e1b
  416dbe:	ss clc 
  416dc0:	out    dx,al
  416dc1:	loop   0x416dbd
  416dc3:	jns    0x416dfd
  416dc5:	fdiv   DWORD PTR [edx-0x71]
  416dc8:	push   0xf95f715f
  416dcd:	and    DWORD PTR [ebp+0x24],0x35
  416dd1:	leave  
  416dd2:	push   esi
  416dd3:	jl     0x416e2e
  416dd5:	xchg   BYTE PTR [ebp-0x27],dh
  416dd8:	ret    
  416dd9:	xor    BYTE PTR [ebp-0x68],bh
  416ddc:	and    al,0x7b
  416dde:	adc    DWORD PTR [edi],ecx
  416de0:	test   ebp,esi
  416de2:	dec    ebx
  416de3:	and    DWORD PTR [eax-0x60],ebp
  416de6:	leave  
  416de7:	add    eax,0xde002a89
  416dec:	test   bl,0x93
  416def:	xor    DWORD PTR [ecx],esp
  416df1:	push   0xbef7c72c
  416df6:	mov    ch,0x7a
  416df8:	sub    eax,0x961f6c2b
  416dfd:	and    edx,ebx
  416dff:	mov    ecx,0x1db8d6df
  416e04:	imul   esp,DWORD PTR [eax],0xffffffd0
  416e07:	push   eax
  416e08:	add    al,0xbc
  416e0a:	fadd   QWORD PTR [ecx+ebx*1+0x6a]
  416e0e:	jmp    0x416dc3
  416e10:	jmp    0xc7b8a211
  416e15:	inc    ebp
  416e16:	sub    eax,0x54b8a873
  416e1b:	xchg   edi,eax
  416e1c:	jmp    0x416da0
  416e1e:	add    al,0x4
  416e20:	add    DWORD PTR [ebx],edi
  416e22:	test   eax,0xbd301814
  416e27:	ret    
  416e28:	add    ebx,DWORD PTR [ebx+0x59]
  416e2b:	sbb    DWORD PTR [eax+ebp*1-0xa],eax
  416e2f:	mov    ds:0xb725a7cd,eax
  416e34:	cmp    eax,0x201eca8c
  416e39:	lahf   
  416e3a:	xor    DWORD PTR [edi+eax*1-0xd],ebp
  416e3e:	mov    esi,0xbe88c949
  416e43:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416e44:	mov    cl,0x9c
  416e46:	neg    BYTE PTR [ecx-0x61]
  416e49:	mov    eax,0xa4a50d13
  416e4e:	call   0xccb2:0x12972010
  416e55:	imul   eax,esp,0xffffffbf
  416e58:	lds    edx,FWORD PTR [ebp+0x24]
  416e5b:	jb     0x416e83
  416e5d:	lods   al,BYTE PTR ds:[esi]
  416e5e:	pop    ds
  416e5f:	cdq    
  416e60:	lods   eax,DWORD PTR ds:[esi]
  416e61:	fwait
  416e62:	popf   
  416e63:	test   BYTE PTR [edi+edx*8+0x44133a66],ah
  416e6a:	mov    bl,cl
  416e6c:	outs   dx,DWORD PTR ds:[esi]
  416e6d:	lds    ebp,FWORD PTR [ecx+eiz*2+0x19]
  416e71:	fldenv [esi+edi*8+0x7]
  416e75:	scas   eax,DWORD PTR es:[edi]
  416e76:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416e77:	pop    edx
  416e78:	iret   
  416e79:	mov    ds:0xa8c4d6a1,eax
  416e7e:	mov    ds:0x3bf89c5e,al
  416e83:	inc    ebx
  416e84:	jp     0x416e4c
  416e86:	dec    esp
  416e87:	and    eax,0x616b2036
  416e8c:	mov    edi,0x268c2e01
  416e91:	js     0x416eab
  416e93:	dec    ebx
  416e94:	ret    0x6ba1
  416e97:	cmp    BYTE PTR [eax-0x5],0x35
  416e9b:	mov    esp,0x11bddcda
  416ea0:	bound  ecx,QWORD PTR [ebx]
  416ea2:	fmul   QWORD PTR [ecx+0xa]
  416ea5:	pop    eax
  416ea6:	cmp    esp,0xca6aacfd
  416eac:	lods   eax,DWORD PTR ds:[esi]
  416ead:	push   esi
  416eae:	sub    DWORD PTR [ebx],edx
  416eb0:	cmp    DWORD PTR [ebx+0x7cb9795f],0x2141b5e9
  416eba:	dec    edx
  416ebb:	pop    ss
  416ebc:	xchg   ah,bl
  416ebe:	cmc    
  416ebf:	adc    eax,0xcc7ce3c
  416ec4:	cmp    ch,dh
  416ec6:	cmps   DWORD PTR ss:[esi],DWORD PTR es:[edi]
  416ec8:	add    esp,esp
  416eca:	and    al,0x86
  416ecc:	mov    esi,0x21e10be2
  416ed1:	retf   0xe9c
  416ed4:	enter  0x3d77,0x1d
  416ed8:	in     al,dx
  416ed9:	ja     0x416f1a
  416edb:	and    al,0xc6
  416edd:	jns    0x416e7a
  416edf:	rcr    DWORD PTR [ecx-0x6f8913dc],cl
  416ee5:	scas   eax,DWORD PTR es:[edi]
  416ee6:	push   ss
  416ee7:	add    eax,ebx
  416ee9:	push   esi
  416eea:	inc    edi
  416eeb:	cmp    eax,0x3b879170
  416ef0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416ef1:	or     al,cl
  416ef3:	cmc    
  416ef4:	ret    
  416ef5:	js     0x416e9c
  416ef7:	pop    esp
  416ef8:	cmc    
  416ef9:	sbb    eax,0x69b562ea
  416efe:	loope  0x416e9c
  416f00:	jp     0x416ef7
  416f02:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416f03:	mov    ecx,0x59ed1b8f
  416f08:	ins    DWORD PTR es:[edi],dx
  416f09:	jne    0x416ee7
  416f0b:	retf   
  416f0c:	xor    DWORD PTR [edx],edi
  416f0e:	int3   
  416f0f:	std    
  416f10:	inc    ebp
  416f11:	popa   
  416f12:	test   ebp,0x4fff3389
  416f18:	data16 cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416f1a:	cmp    al,0x2e
  416f1c:	cdq    
  416f1d:	add    al,0x45
  416f1f:	sti    
  416f20:	mov    eax,0x9ce138bc
  416f25:	mov    esi,0x5887b620
  416f2a:	mov    dl,0xa8
  416f2c:	push   ds
  416f2d:	shl    DWORD PTR [ebx],cl
  416f2f:	(bad)  
  416f30:	hlt    
  416f31:	popf   
  416f32:	out    0xde,eax
  416f34:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416f35:	jmp    0x3ba943e0
  416f3a:	dec    edi
  416f3b:	fwait
  416f3c:	xchg   edi,ebp
  416f3e:	push   ebx
  416f3f:	fild   QWORD PTR [esi]
  416f41:	nop
  416f42:	mov    esp,0xfbd84af5
  416f47:	jns    0x416fbb
  416f49:	fisub  DWORD PTR [eax+0x63d52d77]
  416f4f:	das    
  416f50:	mov    ds:0xe02f9414,al
  416f55:	cmp    BYTE PTR [ebp+eiz*2-0x700246df],0x8c
  416f5d:	jmp    0x416fd4
  416f5f:	cld    
  416f60:	cmp    eax,0x308a828c
  416f65:	(bad)  
  416f66:	int3   
  416f67:	in     al,0x49
  416f69:	in     eax,dx
  416f6a:	hlt    
  416f6b:	push   ss
  416f6c:	mov    edx,0x657698e0
  416f71:	xchg   edx,eax
  416f72:	cmp    eax,0x87a214d7
  416f77:	cmp    al,0x3d
  416f79:	mov    bl,0xcc
  416f7b:	inc    ebp
  416f7c:	push   0x72
  416f7e:	sub    DWORD PTR [eax],ecx
  416f80:	push   ss
  416f81:	hlt    
  416f82:	int    0x9d
  416f84:	push   edx
  416f85:	mov    ah,0x0
  416f87:	push   edx
  416f88:	lock retf 
  416f8a:	push   ds
  416f8b:	mov    ch,0x33
  416f8d:	(bad)  
  416f8e:	push   ecx
  416f8f:	lahf   
  416f90:	outs   dx,DWORD PTR ds:[esi]
  416f91:	xor    bl,BYTE PTR gs:[ebx+0x3e]
  416f95:	dec    ebp
  416f96:	jg     0x416fcb
  416f98:	pop    ecx
  416f99:	lods   al,BYTE PTR ds:[esi]
  416f9a:	daa    
  416f9b:	mov    edi,0x27802f9a
  416fa0:	jae    0x416fe8
  416fa2:	mov    ebp,0x85c7660e
  416fa7:	mov    eax,ds:0xc87cc58
  416fac:	clc    
  416fad:	adc    al,0xd7
  416faf:	std    
  416fb0:	fwait
  416fb1:	aad    0x54
  416fb3:	loop   0x416f7f
  416fb5:	fisub  DWORD PTR [eax-0x2d9b93d2]
  416fbb:	push   ebp
  416fbd:	in     eax,dx
  416fbe:	push   ebp
  416fbf:	enter  0xe2ca,0xb9
  416fc3:	inc    ebx
  416fc4:	xor    BYTE PTR [ebx-0x1f7180a9],ch
  416fca:	inc    edx
  416fcb:	gs jmp 0x6cc:0x37455724
  416fd3:	imul   ebx,ebp,0x18
  416fd6:	out    0x77,eax
  416fd8:	popf   
  416fd9:	or     eax,0xe01259e3
  416fde:	stc    
  416fdf:	les    ecx,FWORD PTR [edx-0x3b]
  416fe2:	add    eax,0x6713879a
  416fe7:	fdivr  QWORD PTR ds:0x534a8512
  416fed:	mov    eax,0x92b6ca60
  416ff2:	fist   WORD PTR [ebx+0xb]
  416ff5:	out    dx,eax
  416ff6:	or     eax,0x67eba73b
  416ffb:	or     bh,BYTE PTR [edi-0xe]
  416ffe:	adc    esp,esp
  417000:	add    edx,ebp
  417002:	xchg   ecx,eax
  417003:	ins    DWORD PTR es:[edi],dx
  417004:	push   ebx
  417005:	mov    ecx,edi
  417007:	div    BYTE PTR [edi]
  417009:	in     eax,0xc1
  41700b:	pushf  
  41700c:	fld    DWORD PTR [ebx]
  41700e:	hlt    
  41700f:	int    0xe5
  417011:	ret    
  417012:	in     eax,dx
  417013:	sbb    al,0x3d
  417015:	hlt    
  417016:	repnz pop edx
  417018:	test   DWORD PTR [eax],eax
  41701a:	sbb    BYTE PTR [edx],cl
  41701c:	aaa    
  41701d:	and    eax,0x700b59c5
  417022:	adc    eax,0xf318a45c
  417027:	ret    0x2b12
  41702a:	dec    edi
  41702b:	bound  esi,QWORD PTR [esi]
  41702d:	add    BYTE PTR [ebx-0x80],dl
  417030:	les    eax,FWORD PTR [esi-0xd]
  417033:	pop    esp
  417034:	cdq    
  417035:	or     eax,0x96ecea34
  41703a:	sbb    edx,esp
  41703c:	inc    esp
  41703d:	push   0x87685a61
  417042:	xor    eax,0x2330e833
  417047:	sub    al,0xed
  417049:	iret   
  41704a:	dec    edx
  41704b:	in     al,0x2f
  41704d:	sbb    eax,0x22072f4a
  417052:	rcl    BYTE PTR [edi],0x8c
  417055:	mov    WORD PTR [edi-0x66],?
  417058:	jae    0x41707a
  41705a:	clc    
  41705b:	cwde   
  41705c:	leave  
  41705d:	icebp  
  41705e:	mov    eax,ds:0x781d1997
  417063:	mov    ds:0x44fcfeb6,eax
  417068:	ds loope 0x4170e9
  41706b:	push   cs
  41706c:	jmp    0xb060:0x638bf859
  417073:	cmp    ebx,DWORD PTR [edx+0x3f]
  417076:	mov    esi,0x23742a4f
  41707b:	push   ss
  41707c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41707d:	pop    ecx
  41707e:	repz add edx,ecx
  417081:	(bad)  
  417082:	fld    QWORD PTR [eax+0xd]
  417085:	or     BYTE PTR [esi],ch
  417087:	jae    0x417073
  417089:	(bad)  
  41708a:	fstp   QWORD PTR [ecx]
  41708c:	inc    edx
  41708d:	sar    BYTE PTR [ebp+0x42eb337d],cl
  417093:	add    ecx,DWORD PTR [edx]
  417095:	fcomp  QWORD PTR [eax-0x6a]
  417098:	mov    esp,0x8cf2a781
  41709d:	popf   
  41709e:	shr    DWORD PTR [ecx-0x5d],1
  4170a1:	call   0xf4b3:0xe143c0c4
  4170a8:	popa   
  4170a9:	ja     0x41704a
  4170ab:	push   ds
  4170ac:	push   0x2e
  4170ae:	test   al,0x62
  4170b0:	addr16 daa 
  4170b2:	test   al,0x10
  4170b4:	shl    ah,1
  4170b6:	xor    DWORD PTR [ecx],ebp
  4170b8:	xor    eax,0xc11c533f
  4170bd:	dec    eax
  4170be:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4170bf:	mov    eax,0xa77e963b
  4170c4:	jg     0x4170dd
  4170c6:	mov    ebp,DWORD PTR [edx+0x43]
  4170c9:	sub    dh,BYTE PTR [edx+esi*1-0x5d0dfd4d]
  4170d0:	mov    ds:0x38d6793e,eax
  4170d5:	aad    0x17
  4170d7:	ficom  WORD PTR [eax+0x1c16fbdb]
  4170dd:	or     edi,edx
  4170df:	(bad)  
  4170e0:	imul   ecx,edx,0x34
  4170e3:	xchg   ebx,eax
  4170e4:	pop    ds
  4170e5:	push   0x7c82260c
  4170ea:	out    dx,eax
  4170eb:	ror    DWORD PTR [esp+edx*8+0x5fe48e8b],0x5e
  4170f3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4170f4:	mov    ebp,0xecfab34
  4170f9:	mov    al,ds:0x2b47fbdb
  4170fe:	data16 and BYTE PTR [ebx+edi*8+0x6a],bl
  417103:	mov    bl,bh
  417105:	pop    ss
  417106:	xchg   edi,eax
  417107:	or     DWORD PTR [edx+edi*8+0x50d2f2a9],0x2719b796
  417112:	aaa    
  417113:	daa    
  417114:	xchg   esp,eax
  417115:	repz mov fs,WORD PTR [ecx+0x26]
  417119:	aaa    
  41711a:	(bad)  
  41711b:	fs jne 0x4170b7
  41711e:	xchg   edi,eax
  41711f:	sbb    edi,DWORD PTR [eax]
  417121:	fisub  WORD PTR [ebx-0x6b]
  417124:	fmul   st(3),st
  417126:	fst    st(2)
  417128:	dec    edi
  417129:	jno    0x417172
  41712b:	mov    ds:0xa196aada,eax
  417130:	ror    BYTE PTR [ebx+edi*1],1
  417133:	fcom   QWORD PTR [eax]
  417135:	xor    eax,0x8047acc8
  41713a:	test   eax,0xad9c351f
  41713f:	sti    
  417140:	mov    ecx,DWORD PTR [eax-0x7c5f1913]
  417146:	aad    0x3d
  417148:	(bad)  
  417149:	cmp    eax,0x87520e0c
  41714e:	scas   al,BYTE PTR es:[edi]
  41714f:	and    eax,0x79af6c9f
  417154:	mov    cl,0xc3
  417156:	push   0xf3ccdb4d
  41715b:	ins    DWORD PTR es:[edi],dx
  41715c:	mov    al,ds:0x6aeccea3
  417161:	ja     0x41714f
  417163:	aaa    
  417164:	and    al,0xa4
  417166:	std    
  417167:	mov    bl,BYTE PTR ds:0xc2eb27b8
  41716d:	call   0xd9f7:0x57ed513d
  417174:	lods   al,BYTE PTR ds:[esi]
  417175:	jg     0x41719e
  417177:	inc    edx
  417178:	adc    al,0xa3
  41717a:	push   edx
  41717b:	jmp    0x417110
  41717d:	push   edx
  41717e:	lock or eax,0x91053917
  417184:	mov    eax,0xf9214a10
  417189:	outs   dx,BYTE PTR ds:[esi]
  41718a:	arpl   WORD PTR fs:[edi+eax*4+0x19d43c95],sp
  417192:	cs mov ebx,0x986ab02f
  417198:	add    dh,BYTE PTR [edi+0x7a52c789]
  41719e:	inc    esp
  41719f:	push   ss
  4171a0:	in     eax,0xb1
  4171a2:	pushf  
  4171a3:	pop    ebp
  4171a4:	in     eax,dx
  4171a5:	ins    DWORD PTR es:[edi],dx
  4171a6:	dec    esp
  4171a7:	and    dl,BYTE PTR [ebp+0x4a2042f5]
  4171ad:	sbb    ebx,DWORD PTR [ebx+0xf]
  4171b0:	std    
  4171b1:	je     0x417142
  4171b3:	aaa    
  4171b4:	jg     0x417203
  4171b6:	popf   
  4171b7:	es sub eax,0xe80c2dea
  4171bd:	sbb    ecx,DWORD PTR [ebx-0xe3c2cf6]
  4171c3:	cmp    DWORD PTR [esi],esp
  4171c5:	adc    ah,BYTE PTR [edi]
  4171c7:	mov    cl,0x20
  4171c9:	mov    dh,0x23
  4171cb:	(bad)  
  4171cc:	mov    fs,WORD PTR [edx+edx*4]
  4171cf:	add    DWORD PTR [ebx],eax
  4171d1:	loop   0x41717c
  4171d3:	or     BYTE PTR [esi],cl
  4171d5:	mov    BYTE PTR [ebp-0x5e594682],bl
  4171db:	not    BYTE PTR [edx]
  4171dd:	mov    ebx,0x94db245e
  4171e2:	addr16 inc ecx
  4171e4:	aad    0xf9
  4171e6:	scas   eax,DWORD PTR es:[edi]
  4171e7:	xor    DWORD PTR [ebp-0x5],0xa080c841
  4171ee:	sub    eax,DWORD PTR [ebx+0x30]
  4171f1:	mov    edi,0xd4ed1bb0
  4171f6:	lock rcl BYTE PTR [ecx+0x4050cef],1
  4171fd:	std    
  4171fe:	out    dx,eax
  4171ff:	push   0x37
  417201:	scas   al,BYTE PTR es:[edi]
  417202:	(bad)  
  417203:	cld    
  417204:	inc    ebp
  417205:	jmp    0x482b:0x7f35853c
  41720c:	in     al,0x65
  41720e:	and    al,0x49
  417210:	enter  0xcea3,0xb
  417214:	mov    esp,0xdf900b41
  417219:	stos   DWORD PTR es:[edi],eax
  41721a:	sbb    eax,0x60377c24
  41721f:	mov    cl,0x5
  417221:	out    0xba,eax
  417223:	imul   eax,DWORD PTR [edi-0x18],0x7ae63f0d
  41722a:	icebp  
  41722b:	call   0x3fe:0x7e9a738a
  417232:	mov    cl,0xbb
  417234:	enter  0xeba5,0x0
  417238:	int    0x5d
  41723a:	loop   0x4171fa
  41723c:	jae    0x417267
  41723e:	pop    edx
  41723f:	xchg   edi,eax
  417240:	repz jmp 0x4171d4
  417243:	push   ds
  417244:	pop    edx
  417245:	ret    
  417246:	cmp    BYTE PTR [edi+edx*1],al
  417249:	int    0x9f
  41724b:	inc    edx
  41724c:	mov    bh,al
  41724e:	dec    edi
  41724f:	sbb    dl,BYTE PTR [ebx-0x6c]
  417252:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417253:	aad    0xb1
  417255:	mov    ch,0xb8
  417257:	rcr    BYTE PTR [edi],0xc3
  41725a:	test   BYTE PTR [ebx+0x7d9230f9],bh
  417260:	repnz in al,dx
  417262:	cdq    
  417263:	xchg   ebp,eax
  417264:	stos   DWORD PTR es:[edi],eax
  417265:	xor    edx,ecx
  417267:	xor    eax,0xa5f10ef8
  41726c:	pop    eax
  41726d:	aaa    
  41726e:	jb     0x417275
  417270:	add    edi,DWORD PTR [eax-0x16f7c028]
  417276:	dec    eax
  417277:	iret   
  417278:	fistp  WORD PTR [ecx+0x5c]
  41727b:	sbb    DWORD PTR [ebp-0x48cbeb1c],eax
  417281:	push   esp
  417282:	mov    bh,0x10
  417284:	cmp    ebx,esi
  417286:	xor    esi,DWORD PTR [ebp+0x26]
  417289:	pop    ebp
  41728a:	or     esi,DWORD PTR [edx]
  41728c:	jl     0x98236167
  417292:	mov    edx,0xef4e8380
  417297:	xor    ebx,DWORD PTR [ebp-0x57c93a3d]
  41729d:	iret   
  41729e:	pop    eax
  41729f:	and    al,0x2
  4172a1:	push   esi
  4172a2:	cli    
  4172a3:	xor    DWORD PTR ds:0xc1e8ee50,ecx
  4172a9:	(bad)  
  4172aa:	mov    bh,0x8a
  4172ac:	cmp    ebp,0xffffffc0
  4172af:	lods   eax,DWORD PTR ds:[esi]
  4172b0:	repz push ebp
  4172b2:	and    cl,BYTE PTR [esi]
  4172b4:	pop    esp
  4172b5:	pop    ds
  4172b6:	outs   dx,BYTE PTR ds:[esi]
  4172b7:	sbb    edi,DWORD PTR [eax-0x41018136]
  4172bd:	mov    WORD PTR [ecx],?
  4172bf:	shr    DWORD PTR [ecx+ebx*4+0x210648e7],cl
  4172c6:	out    dx,eax
  4172c7:	fmul   DWORD PTR [ecx-0x12]
  4172ca:	mov    dl,0x1a
  4172cc:	adc    bl,dl
  4172ce:	inc    edx
  4172cf:	cmp    ch,BYTE PTR [edx-0x877a194]
  4172d5:	je     0x417324
  4172d7:	shl    esp,1
  4172d9:	dec    ebx
  4172da:	fwait
  4172db:	add    al,BYTE PTR [edi+0x16]
  4172de:	cdq    
  4172df:	fs popf 
  4172e1:	pop    edx
  4172e2:	mov    edi,0x3084e1e2
  4172e7:	jmp    0x2ab:0x6cc33da5
  4172ee:	leave  
  4172ef:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4172f0:	push   ebx
  4172f1:	or     BYTE PTR [edx-0xc],dl
  4172f4:	and    al,0x77
  4172f6:	icebp  
  4172f7:	pop    es
  4172f8:	jge    0x417314
  4172fa:	inc    ebp
  4172fb:	push   es
  4172fc:	adc    DWORD PTR [ebx+eax*1+0x64a56568],edi
  417303:	and    bh,BYTE PTR [edi+eax*1-0x73]
  417307:	test   eax,0x628d06f9
  41730c:	mov    cl,0xa3
  41730e:	xchg   DWORD PTR [edi],esp
  417310:	inc    esp
  417311:	jb     0x41734d
  417313:	pushf  
  417314:	inc    ebp
  417315:	xchg   edx,eax
  417316:	and    cl,BYTE PTR [ecx+0x7]
  417319:	and    eax,0x75982b4
  41731e:	test   BYTE PTR [ebx-0x3158b10],cl
  417324:	ror    BYTE PTR [eax],cl
  417326:	push   eax
  417327:	adc    esi,DWORD PTR [edx]
  417329:	inc    ebx
  41732a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41732b:	jecxz  0x417326
  41732d:	inc    ebp
  41732e:	cli    
  41732f:	popa   
  417330:	jns    0x4173a7
  417332:	repnz mov ah,0xbf
  417335:	inc    esp
  417336:	xchg   bh,cl
  417338:	ror    DWORD PTR [esi+edx*2],1
  41733b:	mov    dl,0xa0
  41733d:	mov    dh,dl
  41733f:	adc    eax,0x54d39872
  417344:	sub    cl,BYTE PTR [esi-0x67f7c38]
  41734a:	cmp    ah,BYTE PTR [esi+0x2ea63596]
  417350:	sbb    al,0x85
  417352:	and    DWORD PTR [edi+0x21a16d8e],edx
  417358:	(bad)  
  417359:	sar    BYTE PTR [ebp-0x7f4ad628],cl
  41735f:	sahf   
  417360:	push   edx
  417361:	(bad)
  417365:	cmp    esi,DWORD PTR [ebp+0x32a75d56]
  41736b:	add    ah,bl
  41736d:	xor    ebp,eax
  41736f:	mov    cl,0x1c
  417371:	mov    WORD PTR [esi-0x63],ss
  417374:	fdiv   st(3),st
  417376:	mov    esp,0xeb47f8fe
  41737b:	xchg   BYTE PTR [edi-0x50],al
  41737e:	mov    ?,eax
  417380:	shr    DWORD PTR [ebx+0x15754a7c],1
  417386:	mov    al,BYTE PTR [ebx+ebp*1-0x60]
  41738a:	ret    
  41738b:	add    edi,edx
  41738d:	stc    
  41738e:	test   eax,0x8503bfb0
  417393:	push   0x77
  417395:	mov    ds:0x8c88dfd1,al
  41739a:	(bad)
  41739d:	cmp    BYTE PTR [edi-0x534121cb],0x3e
  4173a4:	sub    DWORD PTR [edx+0x4fbc7ae0],ecx
  4173aa:	pop    esi
  4173ab:	and    BYTE PTR [ecx-0x40dfa71b],dh
  4173b1:	mov    edi,0xd41bda20
  4173b6:	or     eax,0x756eec5
  4173bb:	pop    esp
  4173bc:	cdq    
  4173bd:	popa   
  4173be:	and    BYTE PTR [ebx+ebp*8-0x68],al
  4173c2:	cmp    al,0x59
  4173c4:	xor    esp,DWORD PTR [eax-0x77]
  4173c7:	iret   
  4173c8:	imul   ebx,esp,0xffffff8a
  4173cb:	stos   BYTE PTR es:[edi],al
  4173cc:	scas   eax,DWORD PTR es:[edi]
  4173cd:	inc    esp
  4173ce:	jl     0x417413
  4173d0:	icebp  
  4173d1:	in     eax,0xf1
  4173d3:	xchg   edx,eax
  4173d4:	call   DWORD PTR [edi]
  4173d6:	aad    0x7d
  4173d8:	bound  ebx,QWORD PTR [ebx-0xf]
  4173db:	fdivr  QWORD PTR [ebx]
  4173dd:	mov    esp,0x282fd06
  4173e2:	mov    ah,0x3e
  4173e4:	xor    DWORD PTR fs:0x70e74083,esp
  4173eb:	stos   BYTE PTR es:[edi],al
  4173ec:	push   ebx
  4173ed:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4173ee:	adc    ebp,DWORD PTR [eax-0xb]
  4173f1:	test   al,0xea
  4173f3:	lock push 0x5766c462
  4173f9:	nop
  4173fa:	ss adc eax,0x93d60b42
  417400:	xor    eax,0x25bc6b4e
  417405:	popf   
  417406:	rol    DWORD PTR [esp+ecx*1-0x74],cl
  41740a:	ins    DWORD PTR es:[edi],dx
  41740b:	pop    esp
  41740c:	div    DWORD PTR [ebx]
  41740e:	xor    BYTE PTR [eax],al
  417410:	into   
  417411:	pop    eax
  417412:	icebp  
  417413:	jns    0x4173ba
  417415:	mov    esp,0xd342fc0b
  41741a:	or     al,0xac
  41741c:	pop    ds
  41741d:	xchg   ecx,eax
  41741e:	int3   
  41741f:	xchg   ebp,eax
  417420:	(bad)
  417423:	mov    edx,0x9d28afc6
  417428:	scas   al,BYTE PTR es:[edi]
  417429:	loop   0x4173b3
  41742b:	and    al,0x99
  41742d:	lds    ecx,FWORD PTR [eax+0x6e64576]
  417433:	or     DWORD PTR [ecx+ecx*1+0x74799a44],ecx
  41743a:	sti    
  41743b:	inc    ebx
  41743c:	pop    ds
  41743d:	jno    0x4173ea
  41743f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417440:	in     al,dx
  417441:	out    dx,al
  417442:	inc    edi
  417443:	sahf   
  417444:	sbb    al,0xd4
  417446:	sahf   
  417447:	not    DWORD PTR [ebx]
  417449:	js     0x4174ba
  41744b:	mov    ds:0x4744252e,al
  417450:	dec    ebp
  417451:	cs mov dh,0x74
  417454:	mov    ds:0x1a333765,al
  417459:	dec    edi
  41745a:	leave  
  41745b:	aaa    
  41745c:	in     al,dx
  41745d:	pop    ebp
  41745e:	and    eax,0x3acf7b01
  417463:	imul   esp,ebx,0x1007726
  417469:	xchg   ebp,eax
  41746a:	pop    ecx
  41746b:	rcl    DWORD PTR [esi],cl
  41746d:	hlt    
  41746e:	mov    dh,0x5a
  417470:	pop    esi
  417471:	mov    edx,0x31d51bea
  417476:	sbb    eax,0x9d82b126
  41747b:	mov    DWORD PTR [ecx+0x24e30a8f],esi
  417481:	das    
  417482:	xchg   BYTE PTR [ecx-0x4514c1ed],dl
  417488:	icebp  
  417489:	xor    eax,0x40a4affd
  41748e:	pop    esi
  41748f:	xchg   edi,eax
  417490:	fnstenv [esi+0x17d0d53b]
  417496:	cmc    
  417497:	push   esp
  417498:	(bad)  
  417499:	xor    ebp,DWORD PTR [eax-0x5920246a]
  41749f:	mov    al,0x52
  4174a1:	scas   al,BYTE PTR es:[edi]
  4174a2:	adc    al,BYTE PTR [ebx-0x71]
  4174a5:	push   esi
  4174a6:	gs iret 
  4174a8:	mov    ds:0xa45027c3,eax
  4174ad:	stc    
  4174ae:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4174af:	xchg   ecx,eax
  4174b0:	fst    QWORD PTR [eax+0x5b5973db]
  4174b6:	ins    BYTE PTR es:[edi],dx
  4174b7:	imul   eax,ebp,0xb5ae162a
  4174bd:	xchg   esp,eax
  4174be:	rol    ebp,cl
  4174c0:	popa   
  4174c1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4174c2:	dec    eax
  4174c3:	leave  
  4174c4:	xor    eax,0x6d784808
  4174c9:	mov    dl,0xec
  4174cb:	ds ret 0x3a41
  4174cf:	push   es
  4174d0:	inc    esi
  4174d1:	sub    DWORD PTR [ecx],ebp
  4174d3:	dec    BYTE PTR [edx+0x7eb80211]
  4174d9:	cwde   
  4174da:	xor    ebx,DWORD PTR [ecx+esi*1-0x37ef688a]
  4174e1:	sub    BYTE PTR [edx+eiz*2],bl
  4174e4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4174e5:	int    0x70
  4174e7:	rcl    BYTE PTR [edx+eiz*4],0x38
  4174eb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4174ec:	test   DWORD PTR [ebp+eax*4+0x5c],edi
  4174f0:	push   esi
  4174f1:	or     BYTE PTR [eax+0x26],al
  4174f4:	bound  esi,QWORD PTR [ebx-0x7f34e2bf]
  4174fa:	std    
  4174fb:	jb     0x41755d
  4174fd:	outs   dx,DWORD PTR ds:[esi]
  4174fe:	jnp    0x41753a
  417500:	int    0x96
  417502:	and    bl,BYTE PTR [edx+0x26d0a94f]
  417508:	mov    ecx,0x13b80f51
  41750d:	addr16 or eax,0xcbf98df9
  417513:	sar    dh,0xc8
  417516:	call   0xebb8633
  41751b:	int3   
  41751c:	aad    0xa0
  41751e:	stc    
  41751f:	adc    ch,BYTE PTR [bx+di]
  417522:	cmc    
  417523:	sahf   
  417524:	sbb    edx,DWORD PTR [edx-0x6f]
  417527:	pop    edx
  417528:	add    BYTE PTR [edi-0x27ce6068],ch
  41752e:	and    al,0x6a
  417530:	cs push ss
  417532:	add    eax,0x9b4f175a
  417537:	mov    dh,0x33
  417539:	rol    dh,0x88
  41753c:	bound  edx,QWORD PTR [ecx]
  41753e:	pusha  
  41753f:	pop    eax
  417540:	mov    edi,0xad8cb5af
  417545:	retf   
  417546:	into   
  417547:	dec    ebp
  417548:	sbb    ecx,DWORD PTR [esi]
  41754a:	ror    BYTE PTR [ebx],0x1b
  41754d:	stc    
  41754e:	hlt    
  41754f:	pop    esp
  417550:	jbe    0x41759a
  417552:	test   eax,0x6d35bcb4
  417557:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417558:	icebp  
  417559:	cmp    al,0xba
  41755b:	test   BYTE PTR [edi+ebp*2-0x4f],0x8f
  417560:	pushf  
  417561:	fwait
  417562:	jbe    0x417598
  417564:	out    dx,eax
  417565:	(bad)  
  417567:	jmp    0x41759f
  417569:	push   ebp
  41756a:	or     al,0x4c
  41756c:	data16 sahf 
  41756e:	das    
  41756f:	out    dx,eax
  417570:	push   ss
  417571:	sar    BYTE PTR [ecx],cl
  417573:	int3   
  417574:	mov    edx,0xe8295315
  417579:	sbb    eax,0x7401387f
  41757e:	div    dl
  417580:	or     eax,0x1f9d6770
  417585:	fistp  QWORD PTR [edi-0x63303f86]
  41758b:	and    bh,BYTE PTR [eax]
  41758d:	pushf  
  41758e:	inc    ebx
  41758f:	sti    
  417590:	scas   eax,DWORD PTR es:[edi]
  417591:	mov    ebp,?
  417593:	outs   dx,DWORD PTR ds:[esi]
  417594:	lods   al,BYTE PTR ds:[esi]
  417595:	(bad)  
  417596:	mov    ebp,0xeb1693a2
  41759b:	dec    eax
  41759c:	and    DWORD PTR [edi+edx*4],esp
  41759f:	iret   
  4175a0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4175a1:	neg    BYTE PTR [eax+eax*8+0x31]
  4175a5:	push   0xd1cd571e
  4175aa:	loopne 0x417591
  4175ac:	sbb    BYTE PTR [eax],al
  4175ae:	mov    ebx,0x716ea508
  4175b3:	pop    ss
  4175b4:	xchg   DWORD PTR [ecx+ebx*8],esp
  4175b7:	sbb    ch,BYTE PTR [esi]
  4175b9:	jns    0x41762b
  4175bb:	(bad)  
  4175bc:	(bad)  
  4175bd:	outs   dx,BYTE PTR ds:[esi]
  4175be:	xor    eax,edx
  4175c0:	mov    ebp,0xc89a28f2
  4175c5:	sbb    BYTE PTR [ecx],dh
  4175c7:	lods   al,BYTE PTR ds:[esi]
  4175c8:	or     eax,0xb3bcd9e8
  4175cd:	xchg   edx,eax
  4175ce:	adc    DWORD PTR [ebp-0x13],eax
  4175d1:	in     al,0x5b
  4175d3:	in     al,0x5a
  4175d5:	js     0x41755d
  4175d7:	mov    es,WORD PTR [eax]
  4175d9:	ins    BYTE PTR es:[edi],dx
  4175da:	sbb    al,0xd3
  4175dc:	ret    0xd147
  4175df:	call   0x945d:0x8a4fa622
  4175e6:	sbb    eax,esi
  4175e8:	aaa    
  4175e9:	mov    al,0x2a
  4175eb:	cdq    
  4175ec:	imul   eax,DWORD PTR [edx+0x5dfae32b],0x3d
  4175f3:	add    ah,BYTE PTR [edi]
  4175f5:	mov    al,ds:0x7cce3084
  4175fa:	mov    esi,0x91e96d92
  4175ff:	jmp    0x6f6d7385
  417604:	pop    ecx
  417605:	aas    
  417606:	ds and al,0x26
  417609:	xlat   BYTE PTR ds:[ebx]
  41760a:	dec    esp
  41760b:	in     eax,dx
  41760c:	pop    ebx
  41760d:	mov    ds:0x1a6d2859,eax
  417612:	ss das 
  417614:	aad    0x3d
  417616:	cmc    
  417617:	jl     0x4175cd
  417619:	and    BYTE PTR [edi+0x10],dh
  41761c:	sahf   
  41761d:	mov    bh,0x93
  41761f:	pop    eax
  417620:	jnp    0x41767e
  417622:	push   edi
  417623:	adc    ah,dl
  417625:	div    BYTE PTR fs:[ebp+ecx*8-0x72]
  41762a:	fmul   DWORD PTR ss:[edi+0x2623099d]
  417631:	jo     0x417678
  417633:	shl    BYTE PTR gs:0xd0063659,0x95
  41763b:	xchg   ebx,eax
  41763c:	hlt    
  41763d:	mov    esp,0xeee6f0bb
  417642:	ret    0x5916
  417645:	scas   al,BYTE PTR es:[edi]
  417646:	xor    BYTE PTR [edx-0x5e],0xd9
  41764a:	aas    
  41764b:	inc    esp
  41764c:	fnsave [ecx]
  41764e:	push   es
  41764f:	ins    BYTE PTR es:[edi],dx
  417650:	sbb    bl,ah
  417652:	cmp    eax,0x21a23b57
  417657:	xlat   BYTE PTR ds:[ebx]
  417658:	pop    sp
  41765a:	call   0x25f733f8
  41765f:	adc    edx,edx
  417661:	or     eax,0xd3aa019d
  417666:	add    edi,ebp
  417668:	jecxz  0x417603
  41766a:	pop    eax
  41766b:	and    al,0x5b
  41766d:	xor    al,0x96
  41766f:	xlat   BYTE PTR ds:[ebx]
  417670:	sahf   
  417671:	mov    al,0x5b
  417673:	leave  
  417674:	ja     0x417669
  417676:	stos   BYTE PTR es:[edi],al
  417677:	push   es
  417678:	dec    ebx
  417679:	jge    0x417690
  41767b:	je     0x4176ae
  41767d:	jg     0x417641
  41767f:	sahf   
  417680:	stc    
  417681:	ficom  DWORD PTR [ecx+0xb]
  417684:	or     DWORD PTR [ebx+0xc4f6ec7],ebx
  41768a:	int    0x4d
  41768c:	int3   
  41768d:	aas    
  41768e:	or     ecx,DWORD PTR [ebp-0x30840c7f]
  417694:	pop    eax
  417695:	jle    0x41768f
  417697:	mov    bh,0x65
  417699:	repnz imul edx,eax,0xb2df63e0
  4176a0:	pop    esp
  4176a1:	inc    ebx
  4176a2:	sub    eax,DWORD PTR [edi+0x79]
  4176a5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4176a6:	call   FWORD PTR [eax]
  4176a8:	inc    edx
  4176a9:	add    DWORD PTR [ebx-0x79cf9f18],ecx
  4176af:	ret    0x8652
  4176b2:	jmp    0x872d:0xfe868006
  4176b9:	repz adc al,0x61
  4176bc:	adc    DWORD PTR [edx],ecx
  4176be:	arpl   WORD PTR [edx+0x3a37dca9],dx
  4176c4:	loopne 0x41769a
  4176c6:	fdiv   QWORD PTR [ebp+0x27]
  4176c9:	lock pop ebx
  4176cb:	call   0xf7a45262
  4176d0:	push   0xfffffff0
  4176d2:	fadd   QWORD PTR [ebx]
  4176d4:	sub    eax,0xb7f1d019
  4176d9:	push   ss
  4176da:	out    dx,eax
  4176db:	lea    ecx,[edi-0x579fb599]
  4176e1:	repz clc 
  4176e3:	test   ecx,esp
  4176e5:	gs daa 
  4176e7:	dec    ebx
  4176e8:	icebp  
  4176e9:	dec    edi
  4176ea:	dec    eax
  4176eb:	pusha  
  4176ec:	dec    ebx
  4176ed:	je     0x4176cd
  4176ef:	mov    WORD PTR [ecx+0xf],es
  4176f2:	push   es
  4176f3:	sub    bl,bh
  4176f5:	outs   dx,DWORD PTR ds:[esi]
  4176f6:	jmp    0xd563:0xedef409b
  4176fd:	enter  0x4638,0x1d
  417701:	mov    al,0xe4
  417703:	imul   edi,edi,0xc82a993b
  417709:	in     al,dx
  41770a:	fs loopne 0x417698
  41770d:	out    0x57,al
  41770f:	(bad)  
  417710:	stos   BYTE PTR es:[edi],al
  417711:	hlt    
  417712:	pop    edi
  417713:	ins    DWORD PTR es:[edi],dx
  417714:	sti    
  417715:	add    BYTE PTR ds:0x8d018c79,ah
  41771b:	repz ror BYTE PTR [ebp-0x7c],1
  41771f:	push   0x50
  417721:	sub    bh,BYTE PTR [eax+0x23b546f]
  417727:	sbb    BYTE PTR [ebp-0x2d],dl
  41772a:	fist   WORD PTR [edx-0x9a44496]
  417730:	icebp  
  417731:	outs   dx,DWORD PTR ds:[esi]
  417732:	ss inc ecx
  417734:	jl     0x4176c1
  417736:	sub    eax,0xe3d121cf
  41773b:	mov    bl,0xf5
  41773d:	in     al,dx
  41773e:	rol    DWORD PTR [ebp+0x3e],cl
  417741:	or     esp,DWORD PTR [esi+0x4c249ccc]
  417747:	mov    edi,0x1a032119
  41774c:	xor    esi,0x9bc9aceb
  417752:	adc    DWORD PTR [ebx-0x32],0x3dbe3bdd
  417759:	jb     0x417776
  41775b:	and    dh,al
  41775d:	xor    ch,BYTE PTR [ecx+0x5700caf]
  417763:	jo     0x4176f6
  417765:	and    ebp,edx
  417767:	loop   0x417705
  417769:	fnsave [edx+0x149d4a91]
  41776f:	scas   eax,DWORD PTR es:[edi]
  417770:	pop    eax
  417771:	loopne 0x41775b
  417773:	mov    ah,BYTE PTR [ebp-0xc214ad5]
  417779:	jmp    0xdaf2:0x88e34c31
  417780:	cs add dh,bl
  417783:	rcr    bh,1
  417785:	push   edi
  417786:	lahf   
  417787:	cmp    eax,ebp
  417789:	test   eax,0x449ad6ef
  41778e:	loopne 0x417783
  417790:	mov    cl,0xa3
  417792:	jmp    0x138e:0x70ead005
  417799:	cli    
  41779a:	xor    eax,DWORD PTR [ebx+0x9]
  41779d:	mov    esp,0xf84d7a38
  4177a2:	(bad)  
  4177a3:	(bad)  
  4177a4:	icebp  
  4177a5:	push   ecx
  4177a6:	test   al,0x53
  4177a8:	test   eax,0xf812583a
  4177ad:	push   0x1e4b1cb7
  4177b2:	loope  0x41779b
  4177b4:	repnz ror DWORD PTR [esi-0x3091f117],cl
  4177bb:	cmp    al,0xad
  4177bd:	jmp    0xd091:0xda62153c
  4177c4:	fistp  QWORD PTR [ebx+0x5c70b91e]
  4177ca:	sub    BYTE PTR [edi-0x8],ah
  4177cd:	fwait
  4177ce:	pop    ss
  4177cf:	lahf   
  4177d0:	xor    ebx,DWORD PTR [edi-0x2ebfba0f]
  4177d6:	mov    eax,0x67090a39
  4177db:	leave  
  4177dc:	dec    eax
  4177dd:	stc    
  4177de:	sub    BYTE PTR [eax-0x9e0dadf],bl
  4177e4:	mov    ds:0x8c30f9a9,eax
  4177e9:	ds push eax
  4177eb:	cmp    bh,BYTE PTR [eax+ebx*4]
  4177ee:	mov    ds,WORD PTR [edx]
  4177f0:	into   
  4177f1:	push   ecx
  4177f2:	loopne 0x417784
  4177f4:	outs   dx,BYTE PTR ds:[esi]
  4177f5:	jp     0x41779d
  4177f7:	xlat   BYTE PTR ds:[ebx]
  4177f8:	pop    eax
  4177f9:	popf   
  4177fa:	imul   esp,DWORD PTR [eax+0x44],0x26
  4177fe:	in     eax,0xc9
  417800:	cmp    DWORD PTR [edx],eax
  417802:	mov    DWORD PTR [edi-0x2e],edx
  417805:	cmp    ch,ch
  417807:	sub    eax,DWORD PTR [ecx]
  417809:	sbb    al,0x9f
  41780b:	push   ebx
  41780c:	imul   BYTE PTR [edx-0x5fe7a3f4]
  417812:	sar    DWORD PTR [ebp+0x56],cl
  417815:	pop    ss
  417816:	add    ebx,DWORD PTR [ebx+ecx*4+0x69]
  41781a:	xchg   ebx,eax
  41781b:	jl     0x4177c3
  41781d:	aad    0xfb
  41781f:	inc    edi
  417820:	cmp    bl,BYTE PTR [eax-0x4d68af12]
  417826:	xlat   BYTE PTR ds:[ebx]
  417827:	push   es
  417828:	cmp    BYTE PTR [ebx],ah
  41782a:	jg     0x4177cb
  41782c:	xchg   edx,eax
  41782d:	adc    eax,0x7f5a8364
  417832:	dec    edx
  417833:	pop    edx
  417834:	push   eax
  417835:	push   0xffffff90
  417837:	add    BYTE PTR [ecx+ebx*1],0x33
  41783b:	rcl    DWORD PTR [ebx+esi*2+0xa0452c0],0x8b
  417843:	xchg   DWORD PTR [ebx+0x4d3ae8d6],ecx
  417849:	dec    ecx
  41784a:	cmp    BYTE PTR [ecx+eiz*1+0x77bea886],bh
  417851:	sub    eax,0x749b3ff5
  417856:	and    eax,0xa8207c1
  41785b:	jg     0x41789b
  41785d:	test   BYTE PTR [ebx],ah
  41785f:	sar    DWORD PTR [ebp-0x6c],cl
  417862:	test   BYTE PTR [ebx+0x67],0x39
  417866:	mov    eax,0x11dc999b
  41786b:	dec    esi
  41786c:	sub    al,0xe7
  41786e:	dec    esi
  41786f:	je     0x41781a
  417871:	fs retf 
  417873:	das    
  417874:	push   sp
  417876:	xchg   ecx,eax
  417877:	cmp    DWORD PTR [eax-0x550ccb5d],0xffffffb6
  41787e:	fild   DWORD PTR [ebp+edx*8+0x49]
  417882:	jecxz  0x4178e5
  417884:	test   DWORD PTR es:[eax*8-0x163b3e24],esp
  41788c:	mov    ch,0xcb
  41788e:	push   ss
  41788f:	pop    edi
  417890:	add    eax,DWORD PTR [edi]
  417892:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417893:	sub    al,0x74
  417895:	adc    ebp,DWORD PTR [ebx]
  417897:	mul    ah
  417899:	pop    ss
  41789a:	inc    ebp
  41789b:	wrmsr  
  41789d:	fwait
  41789e:	in     eax,dx
  41789f:	(bad)  
  4178a0:	push   edx
  4178a1:	in     eax,0xef
  4178a3:	je     0x4178a8
  4178a5:	push   edx
  4178a6:	push   es
  4178a7:	(bad)  
  4178a8:	js     0x417892
  4178aa:	cmp    eax,0x685a7ea2
  4178af:	je     0x417919
  4178b1:	stos   BYTE PTR es:[edi],al
  4178b2:	jmp    0x78b2388e
  4178b7:	data16 int 0x15
  4178ba:	jecxz  0x41791e
  4178bc:	sbb    esp,esi
  4178be:	mov    dl,0xd5
  4178c0:	scas   eax,DWORD PTR es:[edi]
  4178c1:	repz push ebx
  4178c3:	jo     0x4178e1
  4178c5:	xor    ah,BYTE PTR [eax+0x0]
  4178c8:	mov    cl,0x5d
  4178ca:	fisubr DWORD PTR [edx-0x215308ce]
  4178d0:	jae    0x41789c
  4178d2:	es (bad) 
  4178d4:	jne    0x417953
  4178d6:	and    BYTE PTR [eax+0x7bac80c5],al
  4178dc:	sub    esi,ecx
  4178de:	das    
  4178df:	retf   
  4178e0:	jns    0x41793b
  4178e2:	or     ecx,esi
  4178e4:	mov    dh,0xca
  4178e6:	loopne 0x4178e5
  4178e8:	cwde   
  4178e9:	dec    esp
  4178ea:	xchg   edx,eax
  4178eb:	in     al,dx
  4178ec:	pop    edx
  4178ed:	into   
  4178ee:	sti    
  4178ef:	scas   eax,DWORD PTR es:[edi]
  4178f0:	std    
  4178f1:	push   esi
  4178f2:	mov    eax,0xcd415f2a
  4178f7:	pop    ss
  4178f8:	inc    ebp
  4178f9:	jmp    0x417899
  4178fb:	or     eax,0xc41cb58d
  417900:	test   DWORD PTR [edx-0x28],edi
  417903:	adc    DWORD PTR [ecx+0x44df5a8c],eax
  417909:	ficomp DWORD PTR [edi]
  41790b:	(bad)  
  41790c:	fistp  WORD PTR [edx+0x44ffc4d0]
  417912:	jne    0x4178f2
  417914:	adc    al,0x0
  417916:	and    al,0x76
  417918:	adc    eax,0x6df79212
  41791d:	jl     0x417925
  41791f:	ja     0x41799b
  417921:	out    dx,al
  417922:	push   0x3c76d837
  417927:	div    DWORD PTR [eax-0x72c5626]
  41792d:	arpl   bp,dx
  41792f:	imul   ebp,DWORD PTR [ecx-0x63],0x6a4cad2f
  417936:	inc    ecx
  417937:	jle    0x417963
  417939:	nop
  41793a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41793b:	loop   0x417974
  41793d:	imul   ebp,ecx,0x76
  417940:	ja     0x417924
  417942:	nop
  417943:	into   
  417944:	and    DWORD PTR [ecx-0x69],eax
  417947:	jecxz  0x417992
  417949:	and    BYTE PTR [ebx-0x1c7b33f7],ch
  41794f:	shl    BYTE PTR [ebp-0x6e],1
  417952:	dec    esi
  417953:	push   esi
  417954:	cmp    ah,BYTE PTR [ebx]
  417956:	jp     0x41792b
  417958:	fst    QWORD PTR [eax+0x7b]
  41795b:	in     eax,0x47
  41795d:	and    ecx,DWORD PTR [eax]
  41795f:	mov    edi,0x9bda6208
  417964:	loopne 0x417926
  417966:	push   ecx
  417967:	or     al,0x74
  417969:	(bad)  
  41796a:	mov    ch,0xc1
  41796c:	fwait
  41796d:	neg    BYTE PTR [ebx-0x4d]
  417970:	mov    ecx,0x9b3a9154
  417975:	hlt    
  417976:	jg     0x417934
  417978:	or     bl,BYTE PTR [edi*4+0x7a049b9]
  41797f:	dec    esp
  417980:	push   edx
  417981:	(bad)  
  417982:	data16 xchg dh,dh
  417985:	shr    DWORD PTR [ecx+0x38580afb],cl
  41798b:	and    ah,dh
  41798d:	hlt    
  41798e:	fwait
  41798f:	ret    0x6b1b
  417992:	jbe    0x417948
  417994:	mov    ecx,0x408cd864
  417999:	pop    ss
  41799a:	js     0x417a12
  41799c:	icebp  
  41799d:	repz ret 
  41799f:	jae    0x4179e5
  4179a1:	loopne 0x41792c
  4179a3:	pusha  
  4179a4:	aam    0x9e
  4179a6:	sub    eax,0x4ec8c6ee
  4179ab:	loop   0x417a03
  4179ad:	jmp    0x19c3762b
  4179b2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4179b3:	mov    cl,0x41
  4179b5:	or     ah,bh
  4179b7:	ret    0xd3bc
  4179ba:	repz (bad) 
  4179bc:	cmp    DWORD PTR [esi+0xb63f983],ecx
  4179c2:	pop    esp
  4179c3:	sbb    DWORD PTR [eax+0x6a],edx
  4179c6:	lea    edi,[esi]
  4179c8:	aas    
  4179c9:	js     0x41795e
  4179cb:	add    eax,DWORD PTR [esi]
  4179cd:	lea    esp,[edx-0x76]
  4179d0:	jge    0x417a1d
  4179d2:	pop    edx
  4179d3:	xchg   ebp,eax
  4179d4:	jno    0x417a4a
  4179d6:	fimul  WORD PTR [eax]
  4179d8:	arpl   WORD PTR [edx-0x2],si
  4179db:	arpl   WORD PTR [ebp+edx*4-0x7d],bx
  4179df:	xchg   esi,eax
  4179e0:	(bad)
  4179e5:	ss inc ebp
  4179e7:	test   al,0x76
  4179e9:	push   cs
  4179ea:	ret    0x708a
  4179ed:	mov    bl,0xd9
  4179ef:	nop
  4179f0:	mov    dl,BYTE PTR [ecx+0x59aca4c2]
  4179f6:	icebp  
  4179f7:	xchg   ecx,eax
  4179f8:	stc    
  4179f9:	add    dh,ch
  4179fb:	pop    ebx
  4179fc:	nop
  4179fd:	adc    ebp,edx
  4179ff:	loope  0x4179a2
  417a01:	xchg   ebx,eax
  417a02:	adc    ebx,esp
  417a04:	fsubp  st(0),st
  417a06:	dec    ecx
  417a07:	dec    eax
  417a08:	cli    
  417a09:	inc    esp
  417a0a:	stos   BYTE PTR es:[edi],al
  417a0b:	xor    DWORD PTR [ebp-0x4e],edi
  417a0e:	mov    bh,0x58
  417a10:	mov    esp,0xd4a2fcf7
  417a15:	jg     0x4179a4
  417a17:	sub    edi,DWORD PTR [ecx-0x75cc245]
  417a1d:	jbe    0x417a5b
  417a1f:	mov    ?,WORD PTR [ebp+0x7c5ec919]
  417a25:	dec    edi
  417a26:	mov    BYTE PTR [ecx-0x72],dl
  417a29:	fiadd  DWORD PTR [edx]
  417a2b:	and    eax,0x24a06fef
  417a30:	ins    DWORD PTR es:[edi],dx
  417a31:	es xchg ebx,eax
  417a33:	add    DWORD PTR [bp+si],edx
  417a36:	pop    ecx
  417a37:	mov    WORD PTR [edx],es
  417a39:	jmp    0x368f:0x3002fd44
  417a40:	dec    ecx
  417a41:	adc    eax,0xf3dce7e7
  417a46:	jmp    0x417a52
  417a48:	dec    DWORD PTR [ecx+esi*1-0x26]
  417a4c:	(bad)  
  417a4d:	shl    DWORD PTR [edi],cl
  417a4f:	(bad)  
  417a50:	in     al,dx
  417a51:	push   edx
  417a52:	daa    
  417a53:	out    0x40,eax
  417a55:	add    al,BYTE PTR [edx+0x373d0c40]
  417a5b:	xor    al,0x6c
  417a5d:	mov    edi,0xf1b790bc
  417a62:	in     eax,0xaa
  417a64:	jnp    0x417aa2
  417a66:	fsubr  DWORD PTR [edi]
  417a68:	push   ebp
  417a69:	cmc    
  417a6a:	ss mov ah,0x74
  417a6d:	and    bl,BYTE PTR [eax+eiz*1-0x5b]
  417a71:	mov    edi,0x4c39e0a1
  417a76:	jnp    0x417ab1
  417a78:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417a79:	sub    al,BYTE PTR [eax]
  417a7b:	fincstp 
  417a7d:	jbe    0x417adc
  417a7f:	rol    BYTE PTR [edx+esi*4],1
  417a82:	dec    ebp
  417a83:	ficomp DWORD PTR [edx-0x33]
  417a86:	jmp    0x812b6b0b
  417a8b:	ret    0x3a1b
  417a8e:	sub    BYTE PTR [esi-0x4b],0xa
  417a92:	jb     0x417a3a
  417a94:	loope  0x417afe
  417a96:	(bad)  
  417a97:	(bad)  
  417a98:	pop    ebx
  417a99:	or     DWORD PTR [eax+ecx*4+0x56],0x37
  417a9e:	xor    edi,DWORD PTR [esi-0x7ca959a3]
  417aa4:	daa    
  417aa5:	xor    eax,0x64f01139
  417aaa:	mov    edi,0x7a870e8f
  417aaf:	mov    dh,0xec
  417ab1:	icebp  
  417ab2:	stc    
  417ab3:	inc    ebp
  417ab4:	not    BYTE PTR [eax-0x73]
  417ab7:	scas   al,BYTE PTR es:[edi]
  417ab8:	and    al,0x91
  417aba:	cmp    edi,DWORD PTR [ecx]
  417abc:	in     al,0x1a
  417abe:	push   0x6f
  417ac0:	mov    esi,0x42d8d87
  417ac5:	inc    DWORD PTR [edi-0x127a3734]
  417acb:	add    DWORD PTR [ebx],esp
  417acd:	sub    al,BYTE PTR [eax-0x57]
  417ad0:	xchg   ebx,eax
  417ad1:	outs   dx,BYTE PTR ds:[esi]
  417ad2:	stos   BYTE PTR es:[edi],al
  417ad3:	(bad)  [ebx]
  417ad5:	rcl    BYTE PTR [edx+edi*8+0x42fe9226],0xb1
  417add:	dec    edi
  417ade:	lock sar DWORD PTR [edx-0x7e],0xf3
  417ae3:	jmp    0x966b:0x4b9aaa37
  417aea:	in     eax,0x37
  417aec:	jmp    0x7bfd03f1
  417af1:	(bad)  
  417af2:	fisub  WORD PTR [esi-0x3]
  417af5:	mov    WORD PTR [ebp+0x1e],?
  417af8:	mul    BYTE PTR [ebp+0x1b]
  417afb:	adc    bh,cl
  417afd:	(bad)
  417b01:	pop    ebp
  417b02:	jno    0x417aa8
  417b04:	inc    edx
  417b06:	adc    BYTE PTR [ebp+0x5f2299ea],bl
  417b0c:	popa   
  417b0d:	je     0x417b56
  417b0f:	push   eax
  417b10:	imul   edi,DWORD PTR [edi],0xffffffcf
  417b13:	or     eax,0x47c869d0
  417b18:	dec    eax
  417b19:	lea    esp,[ebx]
  417b1b:	xchg   esp,eax
  417b1c:	inc    ebp
  417b1e:	sbb    ch,bh
  417b20:	and    edx,DWORD PTR [edx]
  417b22:	les    ebx,FWORD PTR ds:0xb732c275
  417b28:	cmp    DWORD PTR [edi*2+0x482a8f9d],esi
  417b2f:	add    eax,0xe655106
  417b34:	mov    al,0x6d
  417b36:	dec    ebx
  417b37:	xor    cl,BYTE PTR [eax+0x2c1d40f3]
  417b3d:	inc    edi
  417b3e:	sbb    al,0x37
  417b40:	mov    ds:0xb628cd27,eax
  417b45:	shr    DWORD PTR [eax+0x7833b671],0x23
  417b4c:	adc    ah,BYTE PTR [ebx+0x11478385]
  417b52:	and    al,0x20
  417b54:	sbb    al,0x76
  417b56:	mov    esp,0xe9a034cc
  417b5b:	sbb    al,0x67
  417b5d:	xor    eax,0x81ba98ee
  417b62:	inc    edi
  417b63:	dec    edx
  417b64:	push   esi
  417b65:	test   BYTE PTR [edi],0x6a
  417b68:	mov    al,ds:0xdbf267dc
  417b6d:	int    0x97
  417b6f:	cmovnp ebp,esp
  417b72:	mov    cl,0xcb
  417b74:	mov    esi,0xe5ceab61
  417b79:	jno    0x417bc8
  417b7b:	jo     0x417b3f
  417b7d:	or     ch,0xe
  417b80:	sub    eax,0x5e3dd420
  417b85:	ss inc ebx
  417b87:	add    al,0xa5
  417b89:	sub    ebp,DWORD PTR [edi-0x5d5d0e49]
  417b8f:	or     eax,0x27f87d75
  417b94:	adc    ebp,esi
  417b96:	fcom   QWORD PTR [ecx]
  417b98:	test   DWORD PTR [edx+0x3e1d44],ebp
  417b9e:	hlt    
  417b9f:	out    dx,al
  417ba0:	stc    
  417ba1:	inc    ecx
  417ba2:	leave  
  417ba3:	inc    edi
  417ba4:	sar    DWORD PTR [ebx],cl
  417ba6:	popf   
  417ba7:	push   ecx
  417ba8:	pop    ebp
  417ba9:	xor    DWORD PTR [edi-0x27],ebx
  417bac:	mov    ebx,0x1f667007
  417bb1:	mov    esp,0xaa853881
  417bb6:	inc    ebp
  417bb7:	out    dx,eax
  417bb8:	or     al,ah
  417bba:	jg     0x417beb
  417bbc:	cmp    esi,DWORD PTR [ecx-0x2d]
  417bbf:	mov    dh,0x57
  417bc1:	adc    al,0xef
  417bc3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417bc4:	xchg   ecx,edi
  417bc6:	sbb    eax,0x2e102f9d
  417bcb:	cmp    DWORD PTR [edx],ebx
  417bcd:	les    edx,FWORD PTR [eax-0x3b]
  417bd0:	iret   
  417bd1:	jae    0x417b8e
  417bd3:	mov    BYTE PTR [ebx+0x6c37e1f2],ch
  417bd9:	int    0xb7
  417bdb:	mov    bh,0xa0
  417bdd:	mov    bh,0xa5
  417bdf:	sub    BYTE PTR [eax+0x23],cl
  417be2:	sub    DWORD PTR [ecx],ebp
  417be4:	mov    al,0x6e
  417be6:	inc    eax
  417be7:	mov    cl,0xac
  417be9:	std    
  417bea:	rcr    DWORD PTR [edi-0x11cf8415],0x2
  417bf1:	fwait
  417bf2:	mov    eax,0x86f20da4
  417bf7:	adc    DWORD PTR [edi+esi*4+0x7c],0xedbcc8b0
  417bff:	fadd   DWORD PTR [ebx+0x66]
  417c02:	sbb    DWORD PTR gs:[ebx+0x7c],esi
  417c06:	pop    ecx
  417c07:	add    eax,0x1d0d561e
  417c0c:	es jnp 0x417bf0
  417c0f:	mov    esp,0x7a244cc1
  417c14:	adc    DWORD PTR [eax+0x4d9f742],0x36
  417c1b:	pushf  
  417c1c:	pop    es
  417c1d:	or     al,0xd0
  417c1f:	sbb    al,0x35
  417c21:	dec    ebp
  417c22:	dec    esi
  417c23:	(bad)  
  417c25:	out    0x10,eax
  417c27:	call   0xc85168da
  417c2c:	fwait
  417c2d:	xor    ecx,DWORD PTR [edi+ecx*2-0x70d48549]
  417c34:	push   0xa401402c
  417c39:	jae    0x417c5d
  417c3b:	xor    BYTE PTR [edx+0x110edb3],bh
  417c41:	mov    WORD PTR [eax-0x54],ds
  417c44:	lahf   
  417c45:	loope  0x417c53
  417c47:	stos   BYTE PTR es:[edi],al
  417c48:	fwait
  417c49:	ja     0x417ca9
  417c4b:	les    esi,FWORD PTR [eax+0x4]
  417c4e:	inc    edi
  417c4f:	(bad)  
  417c50:	dec    edi
  417c51:	aam    0xa7
  417c53:	cmc    
  417c54:	dec    edx
  417c55:	push   esi
  417c56:	fisub  WORD PTR [edx]
  417c58:	push   0x43
  417c5a:	addr16 push 0x52d0c97c
  417c60:	adc    DWORD PTR [ecx+0x1c],esp
  417c63:	push   0xffffff93
  417c65:	xchg   edx,esi
  417c67:	adc    cl,BYTE PTR [ebx+0x37]
  417c6a:	inc    eax
  417c6b:	pop    es
  417c6c:	mov    bl,0x24
  417c6e:	xchg   dl,bl
  417c70:	mov    ds:0x2d5b400a,al
  417c75:	inc    eax
  417c76:	std    
  417c77:	pop    edx
  417c78:	xchg   edx,eax
  417c79:	jmp    DWORD PTR cs:[ebx-0x6a]
  417c7d:	pushf  
  417c7e:	arpl   WORD PTR [ebx+0x6f],di
  417c81:	int    0xbf
  417c83:	push   esi
  417c84:	sub    eax,0xc1ee6ff4
  417c89:	imul   edx,esi,0x9
  417c8c:	push   esi
  417c8d:	hlt    
  417c8e:	pop    ecx
  417c8f:	xchg   ecx,eax
  417c90:	shr    DWORD PTR [ebp+0x20],0x2
  417c94:	leave  
  417c95:	arpl   WORD PTR [edi],di
  417c97:	inc    edx
  417c98:	xchg   esp,eax
  417c99:	cdq    
  417c9a:	mov    ah,0x9d
  417c9c:	outs   dx,BYTE PTR ds:[esi]
  417c9d:	rcl    DWORD PTR [eax+eax*1],1
  417ca0:	mov    ch,al
  417ca2:	jge    0x417c69
  417ca4:	mov    bh,0x25
  417ca6:	lods   al,BYTE PTR ds:[esi]
  417ca7:	adc    al,0xc8
  417ca9:	xor    al,0x8c
  417cab:	dec    ecx
  417cac:	xchg   edi,eax
  417cad:	or     eax,0x6ebbf1cf
  417cb2:	sub    BYTE PTR [ebx-0x4f547a8e],bh
  417cb8:	inc    eax
  417cb9:	les    edi,FWORD PTR [edi+esi*1]
  417cbc:	adc    al,0x38
  417cbe:	cld    
  417cbf:	stos   DWORD PTR es:[edi],eax
  417cc0:	mov    esp,0xe85a093e
  417cc5:	jge    0x417c58
  417cc7:	mov    ah,BYTE PTR [ebx-0x6e]
  417cca:	and    DWORD PTR ds:0xa0c0c581,edx
  417cd0:	daa    
  417cd1:	inc    ebp
  417cd2:	lods   al,BYTE PTR ds:[esi]
  417cd3:	das    
  417cd4:	and    BYTE PTR [ebp+ecx*4+0x67],ch
  417cd8:	push   edx
  417cd9:	pushf  
  417cda:	clc    
  417cdb:	xchg   edi,eax
  417cdc:	and    dl,ah
  417cde:	arpl   ax,ax
  417ce0:	std    
  417ce1:	pushf  
  417ce2:	or     BYTE PTR [edi-0x2d],dl
  417ce5:	xlat   BYTE PTR ds:[ebx]
  417ce6:	sbb    DWORD PTR [ecx],0xffffffce
  417ce9:	jns    0x417c83
  417ceb:	fcomp  DWORD PTR [edi+ecx*4-0x73]
  417cef:	or     eax,0xdba0e691
  417cf4:	mov    al,ds:0x65ba19d0
  417cf9:	in     eax,dx
  417cfa:	ror    DWORD PTR [ecx-0x52],0xc8
  417cfe:	lods   al,BYTE PTR ds:[esi]
  417cff:	push   0x62ed12a5
  417d04:	jg     0x417d3f
  417d06:	popa   
  417d07:	jp     0x417cb3
  417d09:	and    BYTE PTR [ecx-0x88ac31a],ch
  417d0f:	arpl   WORD PTR [ecx+0x7de33544],bp
  417d15:	xchg   ebx,eax
  417d16:	fs cmp al,0x58
  417d19:	cdq    
  417d1a:	js     0x417d63
  417d1c:	call   0xf0fede72
  417d21:	test   DWORD PTR [esi+0x4c263898],eax
  417d27:	loop   0x417cc5
  417d29:	xchg   esi,eax
  417d2a:	fld    st(2)
  417d2c:	mov    ds:0x81c174db,eax
  417d31:	retf   
  417d32:	mul    DWORD PTR [ebp-0x2]
  417d35:	out    dx,eax
  417d36:	test   eax,0xaf59db10
  417d3b:	test   BYTE PTR [ecx+0x1edee1a5],0x3b
  417d42:	daa    
  417d43:	lea    eax,[ebx]
  417d45:	jl     0x417d9b
  417d47:	adc    esi,DWORD PTR [ebx+ebx*1-0x4704e15]
  417d4e:	in     eax,dx
  417d4f:	shl    edx,1
  417d51:	lods   al,BYTE PTR ds:[esi]
  417d52:	in     eax,dx
  417d53:	fistp  QWORD PTR [edx]
  417d55:	std    
  417d56:	xor    BYTE PTR [ebx-0x32],ch
  417d59:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417d5a:	pop    eax
  417d5b:	daa    
  417d5c:	cmp    al,0x1e
  417d5e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417d5f:	test   al,0x8a
  417d61:	sbb    bl,BYTE PTR [eax]
  417d63:	fstp   DWORD PTR ss:[ebx]
  417d66:	stc    
  417d67:	add    al,0xb7
  417d69:	add    DWORD PTR [esi+0x6cbfaa06],eax
  417d6f:	into   
  417d70:	sbb    ch,bl
  417d72:	ja     0x417d99
  417d74:	pop    esi
  417d75:	test   BYTE PTR ds:0x26902a49,0xa1
  417d7c:	mov    ch,0xc7
  417d7e:	cmp    eax,esp
  417d80:	sbb    al,ch
  417d82:	test   DWORD PTR [ebp-0x31280511],esp
  417d88:	inc    eax
  417d89:	cmp    BYTE PTR [eax-0x45],dl
  417d8c:	call   DWORD PTR [ebx+0x7]
  417d8f:	mov    ecx,0xc6c40d5f
  417d94:	pop    edi
  417d95:	add    edi,DWORD PTR [eax+eax*1+0x74e8d638]
  417d9c:	jg     0x417dd8
  417d9e:	dec    ecx
  417d9f:	dec    ebx
  417da0:	sbb    esp,ebx
  417da2:	sbb    bl,BYTE PTR [edx+0x12683bbc]
  417da8:	ds loopne 0x417dc7
  417dab:	jl     0x417e10
  417dad:	mov    eax,0x6f4e8a67
  417db2:	fmul   st(7),st
  417db4:	cld    
  417db5:	mov    ah,0x86
  417db7:	cmp    ebp,DWORD PTR [ecx-0x7bebdd6b]
  417dbd:	cmp    ebp,0x26
  417dc0:	in     al,0xef
  417dc2:	mov    bl,0xdb
  417dc4:	mul    ch
  417dc6:	(bad)  
  417dc7:	ins    DWORD PTR es:[edi],dx
  417dc8:	je     0x417daa
  417dca:	sbb    eax,0x2c5d0667
  417dcf:	mov    esp,0x557e749b
  417dd4:	shr    BYTE PTR [edi+edx*1+0x1fb8d5b8],cl
  417ddb:	cli    
  417ddc:	mov    ebp,0xf5d993da
  417de1:	mov    dh,0xab
  417de3:	mov    al,ds:0xad773dcd
  417de8:	lahf   
  417de9:	add    ah,ah
  417deb:	data16 jns 0x417e1e
  417dee:	mov    al,0x69
  417df0:	aas    
  417df1:	mov    cl,0xef
  417df3:	imul   esi,DWORD PTR [edx+0x1e],0xffffffaa
  417df7:	test   al,0x67
  417df9:	mov    al,ds:0x967ed634
  417dfe:	je     0x417d9c
  417e00:	mov    ds:0xb098bf3d,eax
  417e05:	sar    DWORD PTR [ebx+0x2b],cl
  417e08:	sub    ebp,DWORD PTR [edi+0x5c364a78]
  417e0e:	push   ebx
  417e0f:	or     ecx,DWORD PTR [eax]
  417e11:	adc    eax,0x698d172b
  417e16:	xor    ch,BYTE PTR [edi]
  417e18:	or     edi,esp
  417e1a:	push   eax
  417e1b:	cld    
  417e1c:	push   ss
  417e1d:	fdiv   DWORD PTR [esi+0x768772ce]
  417e23:	adc    ch,BYTE PTR [eax+0x331149d2]
  417e29:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417e2a:	mov    eax,ds:0xed36818d
  417e2f:	lods   al,BYTE PTR ds:[esi]
  417e30:	call   0xb08afba7
  417e35:	sbb    BYTE PTR [edx-0x5a64a319],ch
  417e3b:	dec    eax
  417e3c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417e3d:	mov    edi,DWORD PTR [edx]
  417e3f:	paddusw mm4,QWORD PTR [ecx]
  417e42:	add    BYTE PTR [esi+0x60],ch
  417e45:	leave  
  417e46:	mov    cl,0xe8
  417e48:	jo     0x417e43
  417e4a:	or     dl,bl
  417e4c:	mov    al,0xe9
  417e4e:	sub    eax,0x21867df3
  417e53:	test   eax,0x5320c927
  417e58:	jns    0x417ec0
  417e5a:	cs (bad) 
  417e5c:	fninit 
  417e5e:	mov    ecx,0x6c0c3a90
  417e63:	daa    
  417e64:	mov    al,ds:0x1f696d57
  417e69:	or     BYTE PTR [ecx-0x63],bl
  417e6c:	mov    BYTE PTR [ecx+ebx*1+0x23],bh
  417e70:	mov    edx,0xe6cb7605
  417e75:	jmp    0xc08813b3
  417e7a:	pop    esp
  417e7b:	mov    WORD PTR [ecx-0x4bfe6e3d],?
  417e81:	inc    edx
  417e82:	loop   0x417ef2
  417e84:	in     al,dx
  417e85:	mov    ebx,0x78803641
  417e8a:	mov    cl,al
  417e8c:	repnz enter 0xe708,0x5b
  417e91:	ds mov cl,dh
  417e94:	add    bl,BYTE PTR [ebx]
  417e96:	inc    ebx
  417e97:	imul   ebx,DWORD PTR [ebx-0x43],0x8a86c71f
  417e9e:	xchg   ebp,eax
  417e9f:	mov    esp,0xae64fd9a
  417ea4:	stc    
  417ea5:	mul    BYTE PTR [edx-0x42]
  417ea8:	outs   dx,BYTE PTR ds:[esi]
  417ea9:	dec    ebp
  417eaa:	inc    ecx
  417eab:	shl    BYTE PTR [edi+0x22],0x17
  417eaf:	jmp    0x417eb2
  417eb1:	cli    
  417eb2:	xchg   ecx,eax
  417eb3:	mov    ds:0x6753ad95,al
  417eb8:	retf   
  417eb9:	sub    al,0xcb
  417ebb:	jge    0x417e41
  417ebd:	xchg   ebx,eax
  417ebe:	sbb    edi,edi
  417ec0:	pop    esi
  417ec1:	jle    0x417eb2
  417ec3:	rcr    BYTE PTR [ecx],cl
  417ec5:	jns    0x417eb4
  417ec7:	les    ecx,FWORD PTR ds:0xb273a42f
  417ecd:	rcl    BYTE PTR [esi],0x0
  417ed0:	ss inc edi
  417ed2:	out    0xcc,al
  417ed4:	int3   
  417ed5:	adc    al,0x5c
  417ed7:	fild   DWORD PTR [esi-0x51d1759d]
  417edd:	test   eax,0x77db7dd3
  417ee2:	or     al,0x77
  417ee4:	leave  
  417ee5:	dec    esi
  417ee6:	sbb    DWORD PTR [ecx+0x4],0xffffff9a
  417eea:	inc    eax
  417eeb:	jns    0x417ee0
  417eed:	les    eax,FWORD PTR [edx]
  417eef:	in     eax,0x7d
  417ef1:	mov    ch,0xf8
  417ef3:	push   es
  417ef4:	mov    ch,0xc
  417ef6:	dec    esp
  417ef7:	ret    
  417ef8:	aad    0x83
  417efa:	mov    ebp,0x56803487
  417eff:	jb     0x417f57
  417f01:	test   eax,0xeb3f3dd7
  417f06:	sbb    ah,BYTE PTR ss:0x36362291
  417f0d:	dec    ebp
  417f0e:	daa    
  417f0f:	or     al,0xb0
  417f11:	mov    dl,0x55
  417f13:	mov    eax,0x63c4c9f7
  417f18:	xchg   BYTE PTR [ecx+ebx*1-0x53],cl
  417f1c:	frstor [ebx-0x414ec1f9]
  417f22:	adc    BYTE PTR [edi],bh
  417f24:	jne    0x417eec
  417f26:	and    DWORD PTR [eax],esp
  417f28:	jmp    0x9952:0x238dce6c
  417f2f:	fndisi(8087 only) 
  417f31:	push   es
  417f32:	inc    eax
  417f33:	lea    esi,[ebx+0x2f7e00b2]
  417f39:	pop    ebx
  417f3a:	push   esp
  417f3b:	sbb    BYTE PTR ds:0x59f3a8dd,bh
  417f41:	cwde   
  417f42:	mov    cl,0x5b
  417f44:	mov    eax,DWORD PTR [edx]
  417f46:	mov    edx,0x49e01ac6
  417f4b:	pop    ecx
  417f4c:	nop
  417f4d:	dec    eax
  417f4e:	cmp    eax,0xf279eb11
  417f53:	jne    0x417f22
  417f55:	(bad)  
  417f56:	pop    es
  417f57:	mov    edx,0xaa95cf8b
  417f5c:	and    al,0x5f
  417f5e:	ret    0xb57d
  417f61:	in     al,dx
  417f62:	retf   
  417f63:	push   ecx
  417f64:	push   edx
  417f65:	ret    
  417f66:	inc    eax
  417f67:	cmp    DWORD PTR [edx],ebp
  417f69:	stos   DWORD PTR es:[edi],eax
  417f6a:	mov    eax,0x8c229e36
  417f6f:	and    esi,esp
  417f71:	mov    dh,0x41
  417f73:	out    dx,al
  417f74:	inc    esi
  417f75:	in     eax,dx
  417f76:	ss push ds
  417f78:	adc    cl,BYTE PTR [ebx]
  417f7a:	call   0x66ed:0xf1b65839
  417f81:	jle    0x417f8e
  417f83:	lahf   
  417f84:	mov    esp,0xb4a4f399
  417f89:	rcl    DWORD PTR [esp+ebp*1-0x19f5d0bb],1
  417f90:	mov    esp,DWORD PTR ss:[esi]
  417f93:	and    dl,BYTE PTR ds:[eax+edi*4-0x6034706d]
  417f9b:	pop    edi
  417f9c:	in     eax,0x9e
  417f9e:	xchg   ebp,eax
  417f9f:	imul   ebp,eax,0xffffffb8
  417fa2:	add    dl,ah
  417fa4:	sbb    edx,DWORD PTR [ecx-0x6d]
  417fa7:	jno    0x417fa0
  417fa9:	stos   DWORD PTR es:[edi],eax
  417faa:	mov    dh,BYTE PTR [edx]
  417fac:	mov    eax,0xd45bc26d
  417fb1:	repz sti 
  417fb3:	dec    ecx
  417fb4:	loop   0x41801b
  417fb6:	(bad)  
  417fb8:	iret   
  417fb9:	and    DWORD PTR [edi],ebx
  417fbb:	xor    BYTE PTR [ebp-0x4dd8bbbf],dl
  417fc1:	ins    DWORD PTR es:[edi],dx
  417fc2:	xchg   esi,eax
  417fc3:	cmp    dh,BYTE PTR [esi+eiz*1+0x4ec08895]
  417fca:	jno    0x41803e
  417fcc:	jecxz  0x417f51
  417fce:	adc    eax,0xef4e0504
  417fd3:	mov    cl,0x71
  417fd5:	inc    edx
  417fd6:	leave  
  417fd7:	xor    eax,0xf24c5dc0
  417fdc:	call   0x6ef6:0x3d55e683
  417fe3:	je     0x417fea
  417fe5:	test   ch,0xfa
  417fe8:	cmp    al,0x26
  417fea:	rcr    edi,1
  417fec:	xor    al,ah
  417fee:	fldenv [ecx-0x1a67ebe9]
  417ff4:	lods   al,BYTE PTR ds:[esi]
  417ff5:	add    ecx,eax
  417ff7:	fiadd  DWORD PTR ds:0xb421
  417ffc:	outs   dx,DWORD PTR ds:[esi]
  417ffd:	rcl    BYTE PTR [edx-0x6ae11646],cl
  418003:	icebp  
  418004:	fsubrp st(6),st
  418006:	(bad)  
  418007:	iret   
  418008:	lahf   
  418009:	and    edx,DWORD PTR [edx+0x4e62c2a7]
  41800f:	bnd jp 0x417f9d
  418012:	int3   
  418013:	push   ebp
  418014:	xor    al,0x7f
  418016:	sbb    eax,0x3e6a339a
  41801b:	cmp    eax,0x51558ba2
  418020:	das    
  418021:	lock fst QWORD PTR [ebp-0x6c]
  418025:	sbb    al,0x0
  418027:	sbb    eax,esp
  418029:	(bad)  
  41802a:	stc    
  41802b:	call   ebp
  41802d:	pushf  
  41802e:	mov    ecx,DWORD PTR ds:0x5c29d776
  418034:	pop    edx
  418035:	retf   0x9212
  418038:	lds    ebx,FWORD PTR [esi+esi*2-0x2692a8d1]
  41803f:	xor    dl,bl
  418041:	gs xchg edi,eax
  418043:	jge    0x4180be
  418045:	outs   dx,DWORD PTR ds:[esi]
  418046:	xchg   edx,eax
  418047:	mov    esp,DWORD PTR [ebx+0x3e17c7b1]
  41804d:	fwait
  41804e:	mov    WORD PTR [edx],ds
  418050:	inc    ebp
  418051:	xchg   edx,eax
  418053:	ss xor edi,edx
  418056:	sub    eax,0x3335f3a
  41805b:	aaa    
  41805c:	imul   esp,DWORD PTR [ebx-0x432f184b],0x23
  418063:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418064:	mov    cl,0xc7
  418066:	mov    al,ds:0x398de408
  41806b:	dec    esi
  41806c:	jo     0x7592326a
  418072:	or     bl,al
  418074:	in     al,0x62
  418076:	in     eax,dx
  418077:	jge    0x41806a
  418079:	inc    esp
  41807a:	push   ds
  41807b:	cmp    ch,bh
  41807d:	adc    al,0x3c
  41807f:	jns    0x4180f7
  418081:	dec    edx
  418082:	inc    esi
  418083:	dec    ebp
  418084:	bound  ebx,QWORD PTR [ebx]
  418086:	pop    ecx
  418087:	pop    esi
  418088:	popa   
  418089:	(bad)  
  41808b:	mov    esi,ebx
  41808d:	dec    ecx
  41808e:	add    eax,DWORD PTR [eax+0x7f13a91b]
  418094:	test   DWORD PTR [edi-0x3c48ef8e],edx
  41809a:	mov    edi,0x5dc9b7d5
  41809f:	lea    ecx,[ecx-0x3]
  4180a2:	fisub  WORD PTR [ebx+0x71]
  4180a5:	pop    ds
  4180a6:	sbb    BYTE PTR [ecx+eax*4-0x271d0c9d],bl
  4180ad:	mov    bh,BYTE PTR [esi+0x15]
  4180b0:	and    al,0x27
  4180b2:	test   edi,edx
  4180b4:	push   edx
  4180b5:	lahf   
  4180b6:	mov    edi,0x52228ead
  4180bb:	jg     0x4180c7
  4180bd:	push   edi
  4180be:	inc    ebp
  4180bf:	push   0xffffffbb
  4180c1:	stc    
  4180c2:	pop    ds
  4180c3:	and    eax,0x56eebeb7
  4180c8:	jp     0x4180b8
  4180ca:	sbb    cl,dl
  4180cc:	push   esp
  4180cd:	jl     0x4180d0
  4180cf:	pop    ebp
  4180d0:	inc    esp
  4180d1:	cmp    edi,DWORD PTR [edx+0x6b]
  4180d4:	lock fadd DWORD PTR [ebx-0xe]
  4180d8:	lahf   
  4180d9:	in     al,dx
  4180da:	lock dec esp
  4180dc:	jo     0x41806d
  4180de:	out    0xc,eax
  4180e0:	scas   eax,DWORD PTR es:[edi]
  4180e1:	sub    cl,BYTE PTR es:[ecx+0x7b]
  4180e5:	fwait
  4180e6:	mov    ah,0x3
  4180e8:	sub    BYTE PTR [edi],0x1e
  4180eb:	aas    
  4180ec:	and    al,0x66
  4180ee:	lods   al,BYTE PTR ds:[esi]
  4180ef:	jns    0x418093
  4180f1:	xchg   esp,eax
  4180f2:	hlt    
  4180f3:	push   ss
  4180f4:	and    DWORD PTR [edi],0xdefdf52
  4180fa:	sbb    esp,edi
  4180fc:	and    dl,bh
  4180fe:	pop    ecx
  4180ff:	jbe    0x418154
  418101:	lods   al,BYTE PTR ds:[esi]
  418102:	loope  0x4180ab
  418104:	mov    ebp,DWORD PTR [edi]
  418106:	pushf  
  418107:	js     0x418140
  418109:	push   ebp
  41810a:	sub    DWORD PTR [esi-0x32],edx
  41810d:	data16 outs dx,BYTE PTR ds:[esi]
  41810f:	inc    ebp
  418110:	jp     0x418179
  418112:	pop    edx
  418113:	mov    esi,0x908e36e
  418118:	stos   DWORD PTR es:[edi],eax
  418119:	fsubr  QWORD PTR [edi]
  41811b:	loopne 0x418120
  41811d:	xchg   edx,eax
  41811e:	shl    ch,1
  418120:	mov    ds:0x1cbac7f1,eax
  418125:	jle    0x4180ac
  418127:	fwait
  418128:	dec    eax
  418129:	and    ch,BYTE PTR [edi+0x9e3fa38]
  41812f:	outs   dx,BYTE PTR ds:[esi]
  418130:	sahf   
  418131:	inc    esi
  418132:	jo     0x418160
  418134:	pop    esi
  418135:	setne  bh
  418138:	mov    cl,0xe9
  41813a:	fmul   QWORD PTR [eax]
  41813c:	push   esp
  41813d:	mov    bh,0xae
  41813f:	mov    al,0x8f
  418141:	jno    0x41811f
  418143:	and    eax,0x42c38811
  418148:	mov    ch,0x59
  41814a:	xchg   ebx,eax
  41814b:	pushf  
  41814c:	cdq    
  41814d:	dec    ebp
  41814e:	or     BYTE PTR [edi+0x76b8ec48],dl
  418154:	and    bl,ah
  418156:	and    cl,bl
  418158:	fidiv  WORD PTR [edi]
  41815a:	lahf   
  41815b:	cmp    ch,ah
  41815d:	in     eax,dx
  41815e:	sbb    al,0x20
  418160:	or     BYTE PTR [esi+0x6979da33],dl
  418166:	lahf   
  418167:	ja     0x4181aa
  418169:	icebp  
  41816a:	scas   al,BYTE PTR es:[edi]
  41816b:	rcl    BYTE PTR [eax-0x21398f58],1
  418171:	adc    DWORD PTR [edi+ecx*8-0x1e],0x51
  418176:	js     0x41811e
  418178:	lods   eax,DWORD PTR ds:[esi]
  418179:	pop    ds
  41817a:	inc    ebx
  41817b:	mov    bl,0x81
  41817d:	add    eax,0x1768da9
  418182:	jmp    0x34423f02
  418187:	push   eax
  418188:	xor    dl,ah
  41818a:	dec    edx
  41818b:	call   0x4a9f:0x20d1271c
  418192:	push   eax
  418193:	jno    0x41818b
  418195:	or     al,0x2f
  418197:	dec    esp
  418198:	stc    
  418199:	jle    0x4181f4
  41819b:	test   BYTE PTR [edi+0x2ce743d9],bh
  4181a1:	mov    ss,ebx
  4181a3:	cmp    esp,DWORD PTR [esp+edi*4]
  4181a6:	pop    ecx
  4181a7:	mov    BYTE PTR [eax+0x73150072],dl
  4181ad:	stos   BYTE PTR es:[edi],al
  4181ae:	push   ebp
  4181af:	jg     0x418179
  4181b1:	sub    DWORD PTR ds:0xe33540b7,edi
  4181b7:	jbe    0x418184
  4181b9:	inc    ebp
  4181ba:	inc    esp
  4181bb:	add    edx,DWORD PTR [ecx+0x6791fe99]
  4181c1:	je     0x418178
  4181c3:	rcr    BYTE PTR [ecx],0x75
  4181c6:	jns    0x418239
  4181c8:	push   cs
  4181c9:	test   al,0x23
  4181cb:	out    0xe5,eax
  4181cd:	cmp    ecx,DWORD PTR [edx]
  4181cf:	pushf  
  4181d0:	and    BYTE PTR [ebx],0x13
  4181d3:	(bad)  
  4181d4:	jge    0x418202
  4181d6:	push   esp
  4181d7:	fisttp QWORD PTR [eax+0x2e]
  4181da:	fisttp WORD PTR [edi]
  4181dc:	add    ebx,DWORD PTR [edx+0x1a]
  4181df:	xchg   ecx,eax
  4181e0:	pop    edx
  4181e1:	fwait
  4181e2:	neg    DWORD PTR [eax]
  4181e4:	inc    esp
  4181e5:	ret    
  4181e6:	inc    ecx
  4181e7:	mov    al,ds:0x669c7505
  4181ec:	fwait
  4181ed:	neg    BYTE PTR [edx-0x25]
  4181f0:	pop    edx
  4181f1:	mov    esp,0xf182058c
  4181f6:	shl    BYTE PTR [esp+ebx*4-0x21],cl
  4181fa:	fisub  WORD PTR [edi-0x53093b57]
  418200:	xchg   ebp,eax
  418201:	cwde   
  418202:	into   
  418203:	fnstcw WORD PTR [eax]
  418205:	mov    eax,ds:0x7af1f35e
  41820a:	in     al,0x48
  41820c:	pop    ecx
  41820d:	test   eax,0x4f00a47d
  418212:	enter  0xca1f,0x11
  418216:	iret   
  418217:	mov    eax,0x3895e14d
  41821c:	(bad)  
  41821d:	push   0x7b
  41821f:	sbb    eax,0x25b6d05
  418224:	sahf   
  418225:	xchg   edi,eax
  418226:	sub    DWORD PTR [edi-0x5bbbca9f],ecx
  41822c:	push   edx
  41822d:	mov    esp,0xb1fe3d05
  418232:	adc    BYTE PTR [edx+0x74b77f94],0x23
  418239:	sbb    DWORD PTR [ecx],0xffffffbe
  41823c:	imul   dl
  41823e:	mov    ah,0xf3
  418240:	rol    BYTE PTR [eax],cl
  418242:	retf   0x20b2
  418245:	adc    DWORD PTR [esi+0xb3bb66],0x7ab00909
  41824f:	mov    ?,esp
  418251:	fbld   TBYTE PTR [esi-0x5d639576]
  418257:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418258:	or     ecx,esi
  41825a:	push   ds
  41825b:	fsubr  DWORD PTR [edi]
  41825d:	pushf  
  41825e:	loope  0x41829c
  418260:	call   0xa7fe:0x572539c0
  418267:	pop    DWORD PTR [ebp+0x38]
  41826a:	sbb    eax,0xd3fb57d3
  41826f:	aam    0x7a
  418271:	and    eax,DWORD PTR [ebx]
  418273:	dec    ebp
  418274:	dec    esi
  418275:	and    dh,0xc
  418278:	jg     0x418291
  41827a:	shr    BYTE PTR ds:0x65154748,0xa5
  418281:	ss (bad) 
  418283:	push   ebp
  418284:	inc    ecx
  418285:	mov    bl,0xf5
  418287:	arpl   ax,ax
  418289:	fisub  WORD PTR [eax+edi*1-0x55c9a3f6]
  418290:	mov    ch,0xa3
  418292:	xchg   ebp,eax
  418293:	stc    
  418294:	test   eax,0xddad883a
  418299:	mov    ecx,0xe4161ba5
  41829e:	inc    ecx
  41829f:	cmp    esp,DWORD PTR [ebp*1+0x50929e9b]
  4182a6:	mov    dh,0xa2
  4182a8:	js     0x418260
  4182aa:	or     BYTE PTR [ebx+0x46],dh
  4182ad:	pop    eax
  4182ae:	fsub   QWORD PTR [ebx-0x1e6b733e]
  4182b4:	mov    dh,BYTE PTR [esp+edi*8+0x2b]
  4182b8:	je     0x4182a4
  4182ba:	test   al,0xd8
  4182bc:	or     BYTE PTR [ebx-0x73967be0],ch
  4182c2:	test   al,0xeb
  4182c4:	mov    ds:0xac596b7b,eax
  4182c9:	iret   
  4182ca:	fwait
  4182cb:	dec    ebx
  4182cc:	cmp    ch,bh
  4182ce:	ret    0xba26
  4182d1:	sbb    DWORD PTR [ebx-0x26],ebp
  4182d4:	or     al,0x51
  4182d6:	ss out dx,al
  4182d8:	xchg   ebx,eax
  4182d9:	aaa    
  4182da:	repnz add al,0xe4
  4182dd:	jp     0x418325
  4182df:	and    eax,0x7d57a873
  4182e4:	mov    BYTE PTR [esi+0x2c10df9f],0xb5
  4182eb:	(bad)  
  4182ec:	dec    ecx
  4182ee:	das    
  4182ef:	and    al,0x59
  4182f1:	sub    eax,0x766f4faf
  4182f6:	push   edx
  4182f7:	aaa    
  4182f8:	js     0x418354
  4182fa:	mov    esp,0x5906ece5
  4182ff:	adc    eax,0x597b0616
  418304:	jl     0x418379
  418306:	add    dl,BYTE PTR [edx+edi*4]
  418309:	imul   ecx,DWORD PTR [ecx-0x5a],0x2b79d6f5
  418310:	retf   
  418311:	and    eax,0xd7620b52
  418316:	mov    ch,0x7d
  418318:	jne    0x418382
  41831a:	out    dx,al
  41831b:	std    
  41831c:	xchg   ebp,eax
  41831d:	inc    edi
  41831e:	mov    eax,ds:0xaa11b4db
  418323:	mov    esp,0xe0979621
  418328:	and    DWORD PTR [ebx+0x1],ebx
  41832b:	sub    dh,ah
  41832d:	inc    edx
  41832e:	ins    BYTE PTR es:[edi],dx
  41832f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418330:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418331:	cmp    al,0x38
  418333:	or     eax,0x99fcf482
  418338:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418339:	dec    edx
  41833a:	add    DWORD PTR [esi-0x2816f103],esi
  418340:	pop    esi
  418341:	jno    0x418336
  418343:	sbb    cl,BYTE PTR [edx-0x53]
  418346:	mov    DWORD PTR [edx],ebx
  418348:	cmp    esi,ecx
  41834a:	pop    es
  41834b:	int3   
  41834c:	mov    esi,0x6cb54525
  418351:	cld    
  418352:	int3   
  418353:	fdivr  DWORD PTR ds:0xd9f49654
  418359:	pop    es
  41835a:	hlt    
  41835b:	enter  0xf2d7,0xe5
  41835f:	adc    eax,0x9fa2fd0f
  418364:	sti    
  418365:	data16 (bad) 
  418367:	jmp    0x41838f
  418369:	adc    ah,BYTE PTR [ecx]
  41836b:	cli    
  41836c:	out    0xef,eax
  41836e:	cld    
  41836f:	retf   
  418370:	pop    esp
  418371:	cmp    BYTE PTR [eax-0xe07034b],0x70
  418378:	inc    esi
  418379:	scas   al,BYTE PTR es:[edi]
  41837a:	sub    DWORD PTR ds:0xf6c23475,esp
  418380:	rcl    BYTE PTR [ebp-0x52],1
  418383:	sub    ch,dh
  418385:	xor    dl,ch
  418387:	test   BYTE PTR [eax-0x30],0x35
  41838b:	int    0xed
  41838d:	sbb    bl,ah
  41838f:	inc    edx
  418390:	mov    ah,0x5c
  418392:	mov    ebx,edx
  418394:	or     dh,0xb
  418397:	adc    ebp,DWORD PTR [ecx-0x7a45d897]
  41839d:	mov    ds:0xedba613a,al
  4183a2:	and    DWORD PTR [ecx*2-0x4e9b3a9d],0xf3b53572
  4183ad:	shl    BYTE PTR [esi],0x16
  4183b0:	cmpxchg BYTE PTR [esi+0x1f],ah
  4183b4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4183b5:	xor    dh,bh
  4183b7:	or     al,0x2b
  4183b9:	mov    edx,0x456e99a0
  4183be:	push   esi
  4183bf:	add    DWORD PTR [edi],esp
  4183c1:	or     DWORD PTR [eax+0x61],esi
  4183c4:	jae    0x41841a
  4183c6:	test   eax,0xde430168
  4183cb:	shr    BYTE PTR [eax],0xab
  4183ce:	push   edx
  4183cf:	sbb    DWORD PTR [ecx-0x33],0x60
  4183d3:	sahf   
  4183d4:	neg    ecx
  4183d6:	inc    ebp
  4183d7:	xchg   BYTE PTR [eax],ch
  4183d9:	jmp    0xd35a:0x5eafca70
  4183e0:	mov    BYTE PTR [ebx-0xbdee57d],dl
  4183e6:	xchg   esp,eax
  4183e7:	ret    0x2bab
  4183ea:	cdq    
  4183eb:	mov    edx,0x15c88d7d
  4183f0:	dec    edx
  4183f1:	or     esp,DWORD PTR [ebx]
  4183f3:	adc    eax,0x88df26e3
  4183f8:	pop    ss
  4183f9:	mov    ebx,0xa09fa888
  4183fe:	(bad)  
  4183ff:	cmp    eax,0x34bcbfde
  418404:	adc    BYTE PTR [edi-0x24],bl
  418407:	ret    0xfe48
  41840a:	ins    BYTE PTR es:[edi],dx
  41840b:	cmp    DWORD PTR [esi+0x14],eax
  41840e:	jae    0x41839d
  418410:	in     eax,dx
  418411:	mov    bh,0xc1
  418413:	pop    eax
  418414:	ins    DWORD PTR es:[edi],dx
  418415:	xor    eax,0x5f6e4ade
  41841a:	adc    BYTE PTR [edx+0x59],ch
  41841d:	call   0x100b:0x9146dc07
  418424:	mov    dh,0x20
  418426:	cmp    ebp,DWORD PTR [eax+0x2a]
  418429:	repnz lods eax,DWORD PTR ds:[esi]
  41842b:	fwait
  41842c:	mov    dl,0xe2
  41842e:	xchg   ebp,eax
  41842f:	pop    ebp
  418430:	stos   DWORD PTR es:[edi],eax
  418431:	cwde   
  418432:	add    esp,DWORD PTR [esi-0x62]
  418435:	arpl   si,bp
  418437:	addr16 shr edi,1
  41843a:	mov    edx,0x3048fc8f
  41843f:	aad    0x14
  418441:	xor    ch,dh
  418443:	jns    0x4184b9
  418445:	mov    dl,0xab
  418447:	or     eax,0x33921307
  41844c:	call   0xc41c515
  418451:	xchg   DWORD PTR [ebp+0x46],ebx
  418454:	add    DWORD PTR [esi-0x3c],ebx
  418457:	rcl    cl,0xe6
  41845a:	pop    edx
  41845b:	jnp    0x4183fd
  41845d:	pusha  
  41845e:	jge    0x418464
  418460:	push   cs
  418461:	repz sub dh,dl
  418464:	sahf   
  418465:	sub    ebx,edx
  418467:	mov    eax,ds:0xa4e3d408
  41846c:	lds    edx,FWORD PTR [ebx-0x37]
  41846f:	or     eax,0x439a25c5
  418474:	ficom  WORD PTR [edx-0x2013232a]
  41847a:	cmp    eax,0xac413d6e
  41847f:	in     al,dx
  418480:	push   cs
  418481:	mov    bl,0xfd
  418483:	rcr    eax,cl
  418485:	inc    edi
  418486:	mov    ah,BYTE PTR [ebp+ebp*8+0x174476b3]
  41848d:	mov    ecx,0x2862ecf9
  418492:	cli    
  418493:	fist   WORD PTR [ebp+0x39e41d0d]
  418499:	icebp  
  41849a:	pusha  
  41849b:	adc    eax,DWORD PTR [edi-0x5]
  41849e:	mov    bh,BYTE PTR [edx-0x54]
  4184a1:	popa   
  4184a2:	push   cs
  4184a3:	(bad)  [ebx]
  4184a5:	adc    eax,0x2852c7e4
  4184aa:	in     al,0x7b
  4184ac:	jg     0x4184b1
  4184ae:	or     eax,0x7e6c8808
  4184b3:	add    al,BYTE PTR [eax+eax*8-0x3f3d4433]
  4184ba:	in     al,0xd9
  4184bc:	je     0x418446
  4184be:	in     al,0x50
  4184c0:	add    cl,dl
  4184c2:	xor    eax,0x7fdcb7a6
  4184c7:	shl    DWORD PTR [eax+0x2],cl
  4184ca:	mov    al,ds:0x869585c1
  4184cf:	push   ds
  4184d0:	add    BYTE PTR [ebp+0x92674b],ch
  4184d6:	cmp    DWORD PTR [ecx],0x5bbb99ba
  4184dc:	xchg   esi,eax
  4184dd:	mov    cl,0x30
  4184df:	je     0x41848e
  4184e1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4184e2:	xor    al,0x1a
  4184e4:	fsub   DWORD PTR [edx]
  4184e6:	in     eax,0xee
  4184e8:	fs fdiv st,st(3)
  4184eb:	or     esi,edi
  4184ed:	cmc    
  4184ee:	shl    edx,1
  4184f0:	jg     0x418513
  4184f2:	xor    dh,bh
  4184f4:	lea    ebx,[edi]
  4184f6:	dec    ecx
  4184f7:	loop   0x418526
  4184f9:	dec    edi
  4184fa:	repnz pop edx
  4184fc:	rcl    bh,0x9f
  4184ff:	cmp    edi,ecx
  418501:	iret   
  418502:	mov    dh,0x7
  418504:	mov    eax,ds:0x7ee87f46
  418509:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41850a:	pop    DWORD PTR [edx-0x2cabc6bb]
  418510:	push   esi
  418511:	mov    bh,0x5d
  418513:	imul   ecx,DWORD PTR ds:0x1949f70d,0x2bb8e9b5
  41851d:	xchg   ebx,ebx
  41851f:	xchg   ebp,eax
  418520:	cmc    
  418521:	mul    esp
  418523:	push   ss
  418524:	data16 aaa 
  418526:	mov    edx,0x9ad4c26f
  41852b:	mov    esp,0x7fa134c8
  418530:	ret    
  418531:	ret    
  418532:	sbb    BYTE PTR [ebx+0x68],dh
  418535:	jp     0x41856c
  418537:	dec    edx
  418538:	xlat   BYTE PTR ds:[ebx]
  418539:	xor    eax,0xd9934b45
  41853e:	sub    BYTE PTR [ebx],0x61
  418541:	pop    edi
  418542:	rcr    BYTE PTR [esi+0xf],0xe9
  418546:	sar    BYTE PTR [edx],1
  418548:	mov    eax,ds:0xf240b9ef
  41854d:	jmp    0xc92c:0x470590cd
  418554:	rol    esi,0x83
  418557:	mov    ebx,0x3d7b7b84
  41855c:	xchg   edx,eax
  41855d:	into   
  41855e:	xor    DWORD PTR [edi-0x42],ebp
  418561:	loopne 0x418561
  418563:	xchg   ebp,eax
  418564:	xchg   esi,eax
  418565:	sbb    ah,BYTE PTR [esi]
  418567:	lods   al,BYTE PTR ds:[esi]
  418568:	and    eax,0xbe062ea6
  41856d:	test   BYTE PTR [edi-0x49e7a302],0x99
  418574:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418575:	mov    ds:0x72c02e83,eax
  41857a:	jo     0x418568
  41857c:	xchg   ebx,eax
  41857d:	not    DWORD PTR ds:0xf2827722
  418583:	jmp    0xbaf3:0x9f83ae5e
  41858a:	xchg   esi,eax
  41858b:	cmp    eax,DWORD PTR [eax+0x4ab32870]
  418591:	jbe    0x418583
  418593:	pop    edi
  418594:	mov    esp,0xab7768b3
  418599:	out    0xb6,eax
  41859b:	popf   
  41859c:	mov    dh,0x24
  41859e:	aad    0xb3
  4185a0:	call   DWORD PTR [ebp-0x108a50d7]
  4185a6:	jl     0x4185b8
  4185a8:	mov    eax,ds:0x81418a0e
  4185ad:	jno    0x4185eb
  4185af:	adc    edi,DWORD PTR [ebx-0x34]
  4185b2:	ss cmp al,0x6c
  4185b5:	sbb    eax,0x24b3f74a
  4185ba:	test   BYTE PTR [eax],0x8a
  4185bd:	aam    0x19
  4185bf:	jae    0x418588
  4185c1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4185c2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4185c3:	bound  ecx,QWORD PTR [ecx]
  4185c5:	jle    0x4185ae
  4185c7:	sbb    edx,ecx
  4185c9:	out    dx,eax
  4185ca:	sbb    ecx,DWORD PTR es:[ecx]
  4185cd:	ror    BYTE PTR [ebx+0x63],1
  4185d0:	jp     0x4185fb
  4185d2:	mov    ecx,0x9b900be5
  4185d7:	mov    ch,dh
  4185d9:	out    0x3a,eax
  4185db:	out    0xe9,al
  4185dd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4185de:	xchg   ecx,eax
  4185df:	inc    edx
  4185e0:	in     al,dx
  4185e1:	test   eax,0xadaed4cc
  4185e6:	mov    ds:0x291df227,al
  4185eb:	mov    dh,0x48
  4185ed:	xor    al,0xee
  4185ef:	call   0x649f:0x8b431ca0
  4185f6:	in     eax,0x42
  4185f8:	mov    edi,0xe8d8996d
  4185fd:	(bad)  
  4185fe:	out    0x2a,eax
  418600:	jecxz  0x4185f9
  418602:	pop    ds
  418603:	push   eax
  418604:	retf   0x5791
  418607:	pop    ebp
  418608:	xor    al,0x14
  41860a:	dec    ecx
  41860b:	push   esp
  41860c:	test   DWORD PTR [eax],0xb2155ef1
  418612:	(bad)
  418616:	fnstcw WORD PTR [edi]
  418618:	inc    ebx
  418619:	cld    
  41861a:	and    eax,ebx
  41861c:	pop    esi
  41861d:	add    esi,esp
  41861f:	test   eax,0xafec67c9
  418624:	loop   0x418631
  418626:	(bad)  
  418627:	iret   
  418628:	into   
  418629:	mov    eax,DWORD PTR [edi+0x74]
  41862c:	push   0x92bb2f54
  418631:	or     ebx,ebx
  418633:	jns    0x418677
  418635:	cmc    
  418636:	rcr    DWORD PTR [ebx],1
  418638:	sbb    DWORD PTR [esp+edi*8-0x2c],esi
  41863c:	inc    ebx
  41863d:	(bad)  
  41863e:	cld    
  41863f:	ins    BYTE PTR es:[edi],dx
  418640:	daa    
  418641:	clc    
  418642:	sar    BYTE PTR [ecx],cl
  418644:	fs addr16 dec edx
  418647:	mov    DWORD PTR [eax],eax
  418649:	mov    ebx,0xb3418101
  41864e:	jo     0x4185fd
  418650:	pushf  
  418651:	mov    eax,ds:0xacacb749
  418656:	push   esp
  418657:	or     eax,DWORD PTR [ebp-0x5f228c89]
  41865d:	fcom   DWORD PTR [esi+0x17]
  418660:	(bad)  
  418661:	jge    0x41860e
  418663:	lea    edi,[edx+0x74]
  418666:	mov    edi,0x6f08c798
  41866b:	jl     0xf60ea40b
  418671:	pop    esp
  418672:	dec    ebp
  418673:	lss    ebx,FWORD PTR cs:[esi]
  418677:	cmp    eax,0xffd2ce08
  41867c:	test   dl,ch
  41867e:	es inc esp
  418680:	jmp    0x4186e3
  418682:	in     eax,dx
  418683:	fsubr  QWORD PTR [esi+edi*2]
  418686:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418687:	ds stos DWORD PTR es:[edi],eax
  418689:	call   0x5dba3b1c
  41868e:	mov    ah,0xde
  418690:	lods   al,BYTE PTR ds:[esi]
  418691:	xor    BYTE PTR [esi+0x5b77fae8],al
  418697:	sub    esi,DWORD PTR [edi+0x1f]
  41869a:	outs   dx,DWORD PTR ds:[esi]
  41869b:	pushf  
  41869c:	loopne 0x41864b
  41869e:	sar    BYTE PTR [eax],cl
  4186a0:	out    0xb5,eax
  4186a2:	pop    esp
  4186a3:	in     al,0xb6
  4186a5:	nop
  4186a6:	xor    cl,BYTE PTR [esi]
  4186a8:	ins    DWORD PTR es:[edi],dx
  4186a9:	push   ebx
  4186aa:	lea    esp,ds:0x5855d1eb
  4186b0:	jno    0x418659
  4186b2:	scas   al,BYTE PTR es:[edi]
  4186b3:	inc    esp
  4186b4:	shl    ah,0xe5
  4186b7:	dec    ebp
  4186b8:	inc    edx
  4186b9:	stc    
  4186ba:	add    ecx,esi
  4186bc:	and    eax,0x173ef8b0
  4186c1:	dec    edx
  4186c2:	es sub al,0x33
  4186c5:	inc    esp
  4186c6:	mov    ch,0x42
  4186c8:	clc    
  4186c9:	retf   0xb085
  4186cc:	mov    esp,0x9863710b
  4186d1:	xor    esi,eax
  4186d3:	inc    edx
  4186d4:	les    edx,FWORD PTR [ecx+0x27bdf5e7]
  4186da:	psllw  mm5,QWORD PTR [ebp+0x56107783]
  4186e1:	jmp    0x4186b7
  4186e3:	mov    bh,0xec
  4186e5:	sbb    al,0xb4
  4186e7:	test   al,0x66
  4186e9:	mov    ds:0xb1e068fb,al
  4186ee:	jp     0x418734
  4186f0:	(bad)  
  4186f1:	cmp    BYTE PTR [esi],ah
  4186f3:	push   esi
  4186f4:	cli    
  4186f5:	das    
  4186f6:	in     eax,dx
  4186f7:	jecxz  0x4186f4
  4186f9:	sub    eax,0x76010c63
  4186fe:	inc    esp
  4186ff:	mov    gs,WORD PTR [esi-0x5a]
  418702:	inc    ebx
  418703:	and    ch,dh
  418705:	pop    ebp
  418706:	jg     0x4186c9
  418708:	xchg   edx,eax
  418709:	retf   
  41870a:	push   eax
  41870b:	cli    
  41870c:	jmp    0x418749
  41870e:	sub    ch,BYTE PTR [ebx+0x2]
  418711:	push   0xd04c1805
  418716:	stc    
  418717:	stos   BYTE PTR es:[edi],al
  418718:	pop    ebx
  418719:	push   ss
  41871a:	inc    eax
  41871b:	ret    0xe75a
  41871e:	(bad)  
  41871f:	mov    esp,0x81a30747
  418724:	jnp    0x41872c
  418726:	mov    ah,0x24
  418728:	mov    ds:0xb3eb4a0a,eax
  41872d:	int3   
  41872e:	inc    edi
  41872f:	iret   
  418730:	push   esi
  418731:	mov    edi,0xa52696ca
  418736:	jl     0x4186d6
  418738:	pop    esi
  418739:	enter  0x9bc6,0x4b
  41873d:	and    esi,DWORD PTR [ebx-0x66]
  418740:	retfw  
  418742:	fist   WORD PTR [eax+0xd]
  418745:	mov    ebx,0xac73f5fe
  41874a:	xchg   esi,eax
  41874b:	les    esi,FWORD PTR [eax+0xf]
  41874e:	inc    esp
  41874f:	sahf   
  418750:	sbb    ecx,DWORD PTR [ecx+eax*2-0x64cae7af]
  418757:	cmp    al,0xdd
  418759:	outs   dx,DWORD PTR ds:[esi]
  41875a:	aam    0x4f
  41875c:	adc    BYTE PTR [eax-0x37c46ff7],dl
  418762:	jge    0x418761
  418764:	es cli 
  418766:	mov    edi,0x86a4ebc8
  41876b:	aad    0xe6
  41876d:	jns    0x4186f2
  41876f:	dec    edx
  418770:	ins    DWORD PTR es:[edi],dx
  418771:	and    al,0xd
  418773:	inc    ebx
  418774:	fstp   TBYTE PTR [edx-0x1e]
  418777:	pop    esi
  418778:	mov    esi,DWORD PTR [ebx]
  41877a:	inc    ebx
  41877b:	and    dh,BYTE PTR [esp+edi*8]
  41877e:	fcomp  QWORD PTR [ecx+0x1ecf62c5]
  418784:	inc    esp
  418785:	aad    0x6b
  418787:	int3   
  418788:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418789:	in     al,dx
  41878a:	in     eax,dx
  41878b:	mov    al,0xf8
  41878d:	jbe    0x418792
  41878f:	es aam 0x46
  418792:	and    esi,ebp
  418794:	in     eax,dx
  418795:	xchg   ecx,eax
  418796:	adc    al,0x27
  418798:	sahf   
  418799:	sub    edi,DWORD PTR [ebx]
  41879b:	push   ds
  41879c:	jbe    0x41875d
  41879e:	clc    
  41879f:	xchg   ecx,esp
  4187a1:	pop    ebp
  4187a2:	push   ss
  4187a3:	(bad)  
  4187a4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4187a5:	and    edi,DWORD PTR [ebp+0x2b5241b4]
  4187ab:	sbb    dh,BYTE PTR [esi+0x26444a0]
  4187b1:	and    bl,cl
  4187b3:	mov    eax,0x4be32992
  4187b8:	ss adc edi,ebp
  4187bb:	cmc    
  4187bc:	add    bl,dh
  4187be:	add    BYTE PTR ds:0x2ac9396e,0x59
  4187c5:	mov    ds,WORD PTR [ebx+0x7e89624c]
  4187cb:	je     0x418759
  4187cd:	test   DWORD PTR [esi+eax*4-0x2c],edx
  4187d1:	jmp    0x4187b0
  4187d3:	jp     0x418761
  4187d5:	jmp    0x1ea2:0xd591cbbe
  4187dc:	mov    ebp,0xf98c3c53
  4187e1:	pusha  
  4187e2:	aaa    
  4187e3:	call   0xa9708662
  4187e8:	mov    dh,dh
  4187ea:	outs   dx,BYTE PTR ds:[esi]
  4187eb:	pop    ebp
  4187ec:	bound  ecx,QWORD PTR [ebp-0x4f]
  4187ef:	lods   eax,DWORD PTR ds:[esi]
  4187f0:	sbb    bh,BYTE PTR [ebx-0x12]
  4187f3:	loope  0x418776
  4187f5:	mov    ah,0xdf
  4187f7:	jmp    0x4187e0
  4187f9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4187fa:	sub    al,0x2b
  4187fc:	xor    edx,DWORD PTR [ecx-0x154d6a03]
  418802:	and    bl,BYTE PTR [ebx]
  418804:	test   al,0x2d
  418807:	mov    bh,0xd7
  418809:	imul   edx,DWORD PTR [edx],0x61
  41880c:	push   edx
  41880d:	into   
  41880e:	outs   dx,DWORD PTR ds:[esi]
  41880f:	mov    cl,0xc2
  418811:	and    ebp,DWORD PTR [ebx+0x2d]
  418814:	xchg   ebp,eax
  418815:	add    al,0xcf
  418817:	inc    esp
  418818:	pop    esp
  418819:	push   cs
  41881a:	pop    ss
  41881b:	shr    DWORD PTR [eax-0x39949635],cl
  418821:	cwde   
  418822:	xchg   BYTE PTR [ebx],bh
  418824:	dec    eax
  418825:	in     eax,0xfa
  418827:	imul   eax,esi,0x60
  41882a:	aas    
  41882b:	push   edx
  41882c:	pop    edx
  41882d:	add    ebp,esp
  41882f:	out    0x6b,eax
  418831:	jle    0x418880
  418833:	jmp    0x41888c
  418835:	ja     0x418897
  418837:	jmp    0x4187f4
  418839:	push   esi
  41883a:	sti    
  41883b:	add    bl,BYTE PTR [ebx]
  41883d:	pop    esp
  41883e:	sub    eax,0xa3809caf
  418843:	leave  
  418844:	cld    
  418845:	aas    
  418846:	(bad)
  41884b:	clc    
  41884c:	imul   edx,DWORD PTR [edx],0xaeb88947
  418852:	dec    esi
  418853:	ja     0x418827
  418855:	call   0xd4c4fe98
  41885a:	mov    dh,0x7a
  41885c:	inc    ecx
  41885d:	xor    eax,DWORD PTR [ecx-0x7fcc3e25]
  418863:	inc    BYTE PTR [ecx]
  418865:	xor    DWORD PTR es:[ecx+0x20151aaa],edx
  41886c:	mov    ebx,0x9ed18251
  418871:	(bad)  
  418872:	mov    DWORD PTR [eax-0x45d19ea8],edx
  418878:	and    DWORD PTR [edx],0xa3347b7b
  41887e:	loop   0x41883e
  418880:	and    DWORD PTR [eax-0x559d170d],0x1033a38e
  41888a:	mov    ds:0xfd47e473,eax
  41888f:	dec    edx
  418890:	out    dx,eax
  418891:	aas    
  418892:	cmp    eax,0xce5460e7
  418897:	add    DWORD PTR [ebp-0x41],esi
  41889a:	outs   dx,BYTE PTR ds:[esi]
  41889b:	dec    ebx
  41889c:	dec    ecx
  41889d:	aam    0x46
  41889f:	pop    edx
  4188a0:	mov    cl,0x97
  4188a2:	jle    0x418923
  4188a4:	pop    ds
  4188a5:	xor    bh,dh
  4188a7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4188a8:	gs jecxz 0x418830
  4188ab:	adc    DWORD PTR [ebx+eax*2],ebx
  4188ae:	add    BYTE PTR [esi],cl
  4188b0:	jne    0x418848
  4188b2:	test   edi,edi
  4188b4:	inc    ecx
  4188b5:	iret   
  4188b6:	mov    edi,0x38129718
  4188bb:	idiv   BYTE PTR [edi+ebx*2-0x5f43db61]
  4188c2:	pushf  
  4188c3:	cmp    cl,BYTE PTR [edx]
  4188c5:	and    BYTE PTR [ecx-0x13],0xdc
  4188c9:	sbb    al,0xaf
  4188cb:	mov    ebx,0x27f9f0ea
  4188d0:	and    BYTE PTR [ebx],dl
  4188d2:	aaa    
  4188d3:	jle    0x41894f
  4188d5:	pop    ds
  4188d6:	sbb    bh,bh
  4188d8:	ins    BYTE PTR es:[edi],dx
  4188d9:	call   0x5308:0xc991d3f9
  4188e0:	aaa    
  4188e1:	push   esp
  4188e2:	sahf   
  4188e3:	push   es
  4188e4:	fstp   st(7)
  4188e6:	shl    BYTE PTR [edx+edi*8-0x4],1
  4188ea:	and    ecx,DWORD PTR [ecx+0x6e]
  4188ed:	(bad)  
  4188ee:	in     eax,dx
  4188ef:	sbb    edx,esp
  4188f1:	cmp    al,0x86
  4188f3:	aas    
  4188f4:	es fs adc al,0x79
  4188f8:	in     eax,dx
  4188f9:	mov    ah,0x57
  4188fb:	(bad)  
  4188fc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4188fd:	xchg   ebx,eax
  4188fe:	sti    
  4188ff:	fcom   QWORD PTR [ebp-0x6c76cc2c]
  418905:	jle    0x41891e
  418907:	adc    ebx,ecx
  418909:	inc    ecx
  41890a:	xchg   edx,eax
  41890b:	mov    dh,0x9b
  41890d:	ins    DWORD PTR es:[di],dx
  41890f:	imul   edx,DWORD PTR [ecx+eax*1],0xfb59d81b
  418916:	sbb    BYTE PTR [ebp-0x27e4e800],al
  41891c:	scas   eax,DWORD PTR es:[edi]
  41891d:	ret    
  41891e:	and    al,0x5c
  418920:	mov    ss,WORD PTR [ecx+ebx*2+0x3f]
  418924:	test   eax,0xdced85f7
  418929:	mov    cl,0x42
  41892b:	mov    ebx,edi
  41892d:	push   eax
  41892e:	hlt    
  41892f:	dec    edx
  418930:	fcmove st,st(4)
  418932:	jge    0x4188f6
  418934:	jmp    0x4188e0
  418936:	test   al,0x4b
  418938:	loope  0x418921
  41893a:	stc    
  41893b:	gs loope 0x418979
  41893e:	retf   
  41893f:	mov    cl,0x7c
  418941:	aaa    
  418942:	and    eax,DWORD PTR [edx]
  418944:	push   edi
  418945:	inc    edx
  418946:	pop    ds
  418947:	xchg   ebx,eax
  418948:	cdq    
  418949:	repz imul ecx,DWORD PTR [esi-0x16f0af0d],0x2f
  418951:	scas   al,BYTE PTR es:[edi]
  418952:	loope  0x4189bd
  418954:	sahf   
  418955:	test   al,0xb8
  418957:	or     DWORD PTR [ebx-0x2e],0xffffffc0
  41895b:	xchg   edi,eax
  41895c:	mov    ch,0xa0
  41895e:	or     BYTE PTR [ebx],dl
  418960:	pop    ds
  418961:	mov    dh,0xa6
  418963:	dec    edi
  418964:	cmp    eax,0x9e246356
  418969:	or     eax,0xde15020b
  41896e:	sub    dh,cl
  418970:	bound  edx,QWORD PTR [eax+0x43f0d446]
  418976:	mov    ds:0xecc9817e,al
  41897b:	out    0xa1,eax
  41897d:	jno    0x41898a
  41897f:	imul   esp,esp,0xffffffde
  418982:	mov    edi,0x2c6648ac
  418987:	sbb    BYTE PTR [eax],0xde
  41898a:	jle    0x41899c
  41898c:	(bad)  
  41898d:	repz jbe 0x418918
  418990:	sbb    esi,DWORD PTR [edi+0x1d1453dc]
  418996:	xor    DWORD PTR [edx+0x5d7b8b06],esp
  41899c:	adc    eax,DWORD PTR [ebp+0x21e0035d]
  4189a2:	test   eax,0x96887971
  4189a7:	adc    edi,DWORD PTR [esi]
  4189a9:	xor    al,0x83
  4189ab:	cli    
  4189ac:	dec    eax
  4189ad:	fsub   DWORD PTR [esi-0x4c21eca0]
  4189b3:	sbb    DWORD PTR [eax-0x48],esp
  4189b6:	bound  esp,QWORD PTR [ecx]
  4189b8:	mov    eax,0x159b07d7
  4189bd:	inc    esi
  4189be:	test   BYTE PTR [ebx],ch
  4189c0:	fcmovbe st,st(4)
  4189c2:	pop    edx
  4189c3:	mov    dl,0x80
  4189c5:	xor    dl,bh
  4189c7:	retf   
  4189c8:	cmp    esi,DWORD PTR [esi]
  4189ca:	ds pop edx
  4189cc:	data16 loop 0x4189f9
  4189cf:	ins    BYTE PTR es:[edi],dx
  4189d0:	repz pushf 
  4189d2:	mov    ebx,0x3bafc5ab
  4189d7:	jge    0x41898c
  4189d9:	mov    eax,ds:0xd81a6dfe
  4189de:	xchg   ebx,eax
  4189df:	dec    edx
  4189e0:	shl    bl,cl
  4189e2:	add    edx,DWORD PTR [edx-0x7]
  4189e5:	sub    al,0x3b
  4189e7:	in     eax,dx
  4189e8:	nop
  4189e9:	mov    edi,0x29452d70
  4189ee:	into   
  4189ef:	xchg   edx,eax
  4189f0:	ficomp DWORD PTR [edx-0x6d]
  4189f3:	and    eax,0x26d36374
  4189f8:	test   eax,0x51dd16a7
  4189fd:	imul   ebx,DWORD PTR [edx-0x35],0x8f7db048
  418a04:	popf   
  418a05:	adc    BYTE PTR [eax],0x86
  418a08:	clc    
  418a09:	push   ecx
  418a0a:	inc    esp
  418a0b:	push   esp
  418a0c:	sub    edx,DWORD PTR [esi+0x259874dc]
  418a12:	add    DWORD PTR [ebx-0x59c77660],ecx
  418a18:	dec    ebx
  418a19:	lods   al,BYTE PTR ds:[esi]
  418a1a:	inc    eax
  418a1b:	mov    eax,ds:0xe3c2cc7c
  418a20:	cdq    
  418a21:	in     al,dx
  418a22:	mov    esi,0x11ec5e17
  418a27:	inc    edx
  418a28:	inc    eax
  418a29:	mov    eax,ds:0x871eaa3a
  418a2e:	push   eax
  418a2f:	adc    al,0x5f
  418a31:	xor    esi,DWORD PTR [esi-0x777df84f]
  418a37:	cmp    eax,0xdb9e4e13
  418a3c:	jmp    0xbc26742f
  418a41:	mov    al,0xe7
  418a43:	es cmp eax,0xa74209ec
  418a49:	sbb    edi,0xd7772816
  418a4f:	das    
  418a50:	bound  esi,QWORD PTR [edx+eax*1]
  418a53:	sbb    eax,0x787226d4
  418a58:	jmp    0xb8b4b67a
  418a5d:	std    
  418a5e:	inc    eax
  418a5f:	pop    ss
  418a60:	(bad)  
  418a61:	push   ebx
  418a62:	push   es
  418a63:	cmp    DWORD PTR [edi],ebp
  418a65:	aam    0xf6
  418a67:	lock adc ah,BYTE PTR [edi]
  418a6a:	push   0xffffffc7
  418a6c:	stos   BYTE PTR es:[edi],al
  418a6d:	jmp    0x418a05
  418a6f:	jbe    0x418a5e
  418a71:	lock and DWORD PTR [edx],esi
  418a74:	cmp    bl,BYTE PTR [ebp+0x4842dd2f]
  418a7a:	mov    bl,0x27
  418a7c:	mov    bh,0x2a
  418a7e:	fs push 0x4909095e
  418a84:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418a85:	cmp    bh,0x47
  418a88:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418a89:	fcom   st(1)
  418a8b:	add    ebp,esi
  418a8d:	add    DWORD PTR [eax-0x324860ec],edx
  418a93:	xchg   edi,eax
  418a94:	mov    ch,0xdb
  418a96:	mov    edi,ebx
  418a98:	mov    ah,bl
  418a9a:	fld    QWORD PTR [eax-0x7]
  418a9d:	push   ebx
  418a9e:	and    bh,BYTE PTR [edi+eax*2-0x30]
  418aa2:	xor    DWORD PTR [ebx-0x3e],esi
  418aa5:	loop   0x418a73
  418aa7:	es pop ss
  418aa9:	push   0xd5cb6cda
  418aae:	add    dl,BYTE PTR [edx]
  418ab0:	lods   al,BYTE PTR ds:[esi]
  418ab1:	push   ds
  418ab2:	cs dec edx
  418ab4:	shr    DWORD PTR [edi-0x7b58f02],0x91
  418abb:	test   al,0xa1
  418abd:	mov    BYTE PTR [edx],ch
  418abf:	push   esp
  418ac0:	jl     0x418b3f
  418ac2:	lahf   
  418ac3:	shl    esp,cl
  418ac5:	mov    al,0x2f
  418ac7:	retf   
  418ac8:	repnz or al,BYTE PTR [edi]
  418acb:	or     eax,0xfec586a4
  418ad0:	sahf   
  418ad1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418ad2:	sbb    al,0xd1
  418ad4:	pusha  
  418ad5:	mov    BYTE PTR [esi+0x68],ch
  418ad8:	dec    ebx
  418ad9:	inc    ebx
  418ada:	xchg   esi,eax
  418adb:	leave  
  418adc:	push   edx
  418add:	repz shr DWORD PTR [ebx],cl
  418ae0:	cmp    eax,0x3afa4fa7
  418ae5:	push   edi
  418ae6:	sub    eax,0x6ad38ad1
  418aeb:	inc    ebx
  418aec:	mov    cs,eax
  418aee:	popf   
  418aef:	mov    edx,0xfeaf534e
  418af4:	cmp    ebx,esp
  418af6:	inc    edi
  418af7:	call   0xe2:0x56c50f73
  418afe:	(bad)  
  418aff:	jmp    0xad23:0x9db78b8b
  418b06:	sbb    eax,0x5dd90d49
  418b0b:	mov    esp,DWORD PTR [edi]
  418b0d:	cmp    al,0x6f
  418b0f:	fist   DWORD PTR [eax]
  418b11:	ja     0x418b09
  418b13:	xor    al,BYTE PTR [eax-0x46]
  418b16:	out    dx,eax
  418b17:	xchg   edi,eax
  418b18:	fisubr WORD PTR [esi+0x14]
  418b1b:	xchg   BYTE PTR [eax],dh
  418b1d:	js     0x418b73
  418b1f:	jae    0x418b79
  418b21:	pop    edi
  418b22:	mov    eax,ds:0xae75e7f4
  418b27:	out    dx,al
  418b28:	and    BYTE PTR [edx+ecx*1+0x463e18f5],ah
  418b2f:	pop    esi
  418b30:	pop    ebp
  418b31:	test   al,0x14
  418b33:	(bad)  
  418b34:	sti    
  418b35:	fwait
  418b36:	out    0x1,al
  418b38:	les    eax,FWORD PTR [edx]
  418b3a:	sub    DWORD PTR [ebp+0x34],ebp
  418b3d:	add    DWORD PTR [ecx],edi
  418b3f:	stos   BYTE PTR es:[edi],al
  418b40:	js     0x418b86
  418b42:	pop    edi
  418b43:	lock loop 0x418ae8
  418b46:	mov    esp,DWORD PTR [edi]
  418b48:	xchg   DWORD PTR [ebp-0x28],ebp
  418b4b:	sbb    ebx,eax
  418b4d:	nop
  418b4e:	pand   mm6,QWORD PTR [ecx]
  418b51:	xor    DWORD PTR ds:0xae963eeb,0x6439fe1c
  418b5b:	test   al,0xd3
  418b5d:	rol    edx,0x45
  418b60:	xor    al,0x5f
  418b62:	out    0x1d,eax
  418b64:	xchg   edi,eax
  418b65:	xor    ah,BYTE PTR [esi]
  418b67:	ror    DWORD PTR [ecx],0x6f
  418b6a:	aas    
  418b6b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418b6c:	mov    ecx,DWORD PTR [eax]
  418b6e:	or     eax,0xfbc51766
  418b73:	mov    dh,0x4
  418b75:	dec    BYTE PTR [eax+0x16f793b9]
  418b7b:	pushf  
  418b7c:	cld    
  418b7d:	gs or  bl,ah
  418b80:	and    al,0xb6
  418b82:	fs addr16 lock push esi
  418b86:	mov    cl,0xad
  418b88:	stc    
  418b89:	(bad)  
  418b8a:	cmovne edx,DWORD PTR [ecx-0x6e]
  418b8e:	xor    BYTE PTR [ebx+0x33],0x92
  418b92:	bound  esp,QWORD PTR [edx-0x64cdf5ca]
  418b98:	mov    ds:0xffbce7e7,al
  418b9d:	dec    eax
  418b9e:	ds inc ebx
  418ba0:	test   eax,eax
  418ba2:	dec    edx
  418ba3:	mov    ds:0xf36845ca,al
  418ba8:	inc    ebx
  418ba9:	sbb    al,0xf3
  418bab:	dec    ecx
  418bac:	xchg   edx,eax
  418bad:	and    BYTE PTR [eax],0xe6
  418bb0:	inc    esi
  418bb1:	cmp    al,0x2d
  418bb3:	inc    ebx
  418bb4:	push   ds
  418bb5:	loope  0x418c05
  418bb7:	pop    esi
  418bb8:	mov    edx,0xdcf27677
  418bbd:	mov    ecx,0xfc457795
  418bc2:	sahf   
  418bc3:	sbb    ebx,DWORD PTR [ebx-0x2a4b7b6f]
  418bc9:	test   DWORD PTR [ecx],0xcdb59212
  418bcf:	lods   eax,DWORD PTR ds:[esi]
  418bd0:	sbb    esi,DWORD PTR [eax]
  418bd2:	out    dx,al
  418bd3:	dec    edx
  418bd4:	jle    0x418c25
  418bd6:	jmp    0x32d8:0x10847c1b
  418bdd:	ret    0x23d8
  418be0:	xchg   ebx,eax
  418be1:	(bad)  
  418be3:	ins    BYTE PTR es:[edi],dx
  418be4:	(bad)  
  418be5:	jmp    0x6d83:0xc12867aa
  418bec:	hlt    
  418bed:	jp     0x418c2f
  418bef:	jmp    0x251e:0x7a7e17ee
  418bf6:	cmp    dh,ch
  418bf8:	int3   
  418bf9:	xchg   ecx,eax
  418bfa:	leave  
  418bfb:	mov    dl,0x46
  418bfd:	or     al,0xc0
  418bff:	mov    ebp,DWORD PTR [eax+0x7b732317]
  418c05:	in     eax,0xb7
  418c07:	mov    bh,0x37
  418c09:	lock pop edi
  418c0b:	jae    0x418c01
  418c0d:	stos   DWORD PTR es:[edi],eax
  418c0e:	dec    esp
  418c0f:	ins    DWORD PTR es:[edi],dx
  418c10:	leave  
  418c11:	or     BYTE PTR [ecx],0x62
  418c14:	xor    al,0xa2
  418c16:	in     eax,dx
  418c17:	(bad)  
  418c18:	in     eax,dx
  418c19:	dec    ebx
  418c1a:	pop    es
  418c1b:	fcmovbe st,st(4)
  418c1d:	mov    al,0xc7
  418c1f:	nop
  418c20:	xchg   esp,eax
  418c21:	hlt    
  418c22:	add    ah,BYTE PTR [esi-0x6b]
  418c25:	ss push es
  418c27:	push   ebp
  418c28:	out    0x86,eax
  418c2a:	xor    ebp,DWORD PTR [edx]
  418c2c:	jmp    0x5f13:0x5271abb6
  418c33:	cld    
  418c34:	xchg   DWORD PTR [eax+0x630888bf],eax
  418c3a:	xchg   dh,dl
  418c3c:	sub    eax,0x478d0bb1
  418c41:	sub    DWORD PTR [edx+0x6874828e],0xffffffb8
  418c48:	sbb    ch,BYTE PTR [edx+edx*8+0x58]
  418c4c:	test   bl,dl
  418c4e:	xor    eax,0x45e454a9
  418c53:	int    0xd3
  418c55:	jmp    0xb6a0d736
  418c5a:	sub    esi,DWORD PTR [ebp+edi*4+0x3b]
  418c5e:	mov    cl,0xa7
  418c60:	lds    edx,FWORD PTR [eax-0x14]
  418c63:	sub    BYTE PTR [eax+0x4a],0x6b
  418c67:	sub    esi,DWORD PTR [ecx+0x4494bac3]
  418c6d:	arpl   WORD PTR [eax-0x562466d8],si
  418c73:	retf   
  418c74:	stos   BYTE PTR es:[edi],al
  418c75:	jo     0x418ca0
  418c77:	sbb    eax,0xcb1bc503
  418c7c:	je     0x418cb1
  418c7e:	mov    cl,0xd2
  418c80:	add    DWORD PTR ds:0x77a204f2,edx
  418c86:	in     eax,0xf4
  418c88:	push   ebp
  418c89:	sub    al,0x1
  418c8b:	seta   bh
  418c8e:	xor    cl,BYTE PTR ds:0xff839940
  418c94:	mov    DWORD PTR [esi],0xcc7c9ec3
  418c9a:	add    edx,DWORD PTR [ecx+0x20]
  418c9d:	(bad)  
  418c9e:	stos   DWORD PTR es:[edi],eax
  418c9f:	hlt    
  418ca0:	mov    ecx,DWORD PTR [ecx-0x4c6f37a3]
  418ca6:	mov    BYTE PTR [ebx+0x1d],0xaa
  418caa:	cmp    DWORD PTR [ebp+0x4a53e31d],edi
  418cb0:	icebp  
  418cb1:	dec    ebp
  418cb2:	repnz or edx,DWORD PTR [edi-0x1100ced0]
  418cb9:	mov    ah,0x6c
  418cbb:	call   0x2d63b82d
  418cc0:	cdq    
  418cc1:	push   ds
  418cc2:	adc    al,BYTE PTR [edi-0x7f]
  418cc5:	jne    0x418ce0
  418cc7:	ror    BYTE PTR [eax-0x28],1
  418cca:	into   
  418ccb:	dec    esi
  418ccc:	mov    DWORD PTR fs:0xff4fe164,esi
  418cd3:	in     eax,dx
  418cd4:	cs dec edi
  418cd6:	inc    eax
  418cd7:	lea    ebx,[ebx-0x72]
  418cda:	jmp    0x5567:0x149306b7
  418ce1:	pop    esi
  418ce2:	enter  0xd71d,0x77
  418ce6:	adc    eax,0x7df518bf
  418ceb:	loope  0x418d10
  418ced:	sub    BYTE PTR [edi+0x3454acc4],ah
  418cf3:	stc    
  418cf4:	loope  0x418d43
  418cf6:	push   ebp
  418cf7:	inc    ecx
  418cf8:	jae    0x418d2d
  418cfa:	sti    
  418cfb:	sbb    ebp,esp
  418cfd:	push   ebp
  418cfe:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418cff:	push   ebx
  418d00:	sub    eax,0xbc811e7a
  418d05:	sub    eax,0x179d03fd
  418d0a:	xchg   DWORD PTR [edx+0x11],ecx
  418d0d:	or     BYTE PTR [ecx+0x43294166],ch
  418d13:	jns    0x418d1c
  418d15:	inc    esi
  418d16:	xchg   edx,eax
  418d17:	dec    ecx
  418d18:	test   eax,0xe0928289
  418d1d:	pop    eax
  418d1e:	rcr    DWORD PTR [esi],cl
  418d20:	dec    esi
  418d21:	div    DWORD PTR [edx]
  418d23:	das    
  418d24:	lea    ebx,[eax]
  418d26:	ret    0xcf4a
  418d29:	cdq    
  418d2a:	mov    esp,ecx
  418d2c:	ss cmp edx,ecx
  418d2f:	adc    eax,0xfc852f3d
  418d34:	cdq    
  418d35:	nop
  418d36:	dec    ebx
  418d38:	push   edi
  418d39:	xchg   edx,eax
  418d3a:	enter  0x368f,0x5e
  418d3e:	dec    ecx
  418d3f:	mov    dh,cl
  418d41:	sbb    al,bh
  418d43:	mov    dh,0x2d
  418d45:	xor    bl,bl
  418d47:	js     0x418d1e
  418d49:	out    0x7d,al
  418d4b:	out    dx,al
  418d4c:	std    
  418d4d:	xchg   ebp,eax
  418d4e:	pop    esi
  418d4f:	push   ebp
  418d50:	test   eax,0x39ac6fa9
  418d55:	test   DWORD PTR [edi],ebx
  418d57:	dec    edx
  418d58:	shl    edi,cl
  418d5a:	pop    edi
  418d5b:	jp     0x418d3b
  418d5d:	and    eax,0x4941dd66
  418d62:	push   0xde59aab2
  418d67:	jbe    0x418d8b
  418d69:	cmp    BYTE PTR [ebx],0xe5
  418d6c:	call   0x7fe6610f
  418d71:	test   dl,0x9e
  418d74:	fdivr  QWORD PTR [edx+ecx*1-0x77]
  418d78:	stos   DWORD PTR es:[edi],eax
  418d79:	(bad)  
  418d7a:	adc    bl,cl
  418d7c:	sub    ebx,edi
  418d7e:	in     al,0x25
  418d80:	add    eax,0xbfdd3d9
  418d85:	or     dh,BYTE PTR [esi+eax*4-0x30]
  418d89:	sbb    dl,BYTE PTR [eax+0x7b47df72]
  418d8f:	aaa    
  418d90:	lods   al,BYTE PTR ds:[esi]
  418d91:	sbb    ch,BYTE PTR [ecx+0x3e]
  418d94:	fisttp WORD PTR [edx-0x5fe82d73]
  418d9a:	and    al,0xf9
  418d9c:	push   eax
  418d9d:	jae    0x418d8f
  418d9f:	(bad)  
  418da0:	mov    dh,0x52
  418da2:	clc    
  418da3:	inc    edi
  418da4:	jg     0x418dbe
  418da6:	aaa    
  418da7:	dec    ecx
  418da8:	xchg   ebx,eax
  418da9:	mov    DWORD PTR ds:0x779fae0b,edi
  418daf:	mov    esi,0xcb7116f9
  418db4:	out    0x6d,eax
  418db6:	xchg   DWORD PTR [edx],edx
  418db8:	xor    DWORD PTR [ecx+0x116ba888],ecx
  418dbe:	mov    BYTE PTR [ebp+0x34],ah
  418dc1:	push   es
  418dc2:	in     al,dx
  418dc3:	mov    ah,0xbc
  418dc5:	cli    
  418dc6:	rcr    BYTE PTR [ecx+0x390e946d],cl
  418dcc:	push   edi
  418dcd:	les    esi,FWORD PTR [edx+ebp*1]
  418dd0:	inc    ebp
  418dd1:	out    dx,eax
  418dd2:	jmp    0x418d80
  418dd4:	rcr    BYTE PTR [esi],cl
  418dd6:	add    dl,BYTE PTR [edi-0x676f4427]
  418ddc:	mov    BYTE PTR [esi],ch
  418dde:	lods   eax,DWORD PTR ds:[esi]
  418ddf:	jecxz  0x418d84
  418de1:	cmp    al,0x75
  418de3:	stos   BYTE PTR es:[edi],al
  418de4:	imul   ecx,ecx,0xffffff84
  418de7:	and    BYTE PTR [edx],bh
  418de9:	xchg   ecx,eax
  418dea:	ins    BYTE PTR es:[di],dx
  418dec:	das    
  418ded:	pop    eax
  418dee:	fsub   DWORD PTR [eax+0x457c8b4b]
  418df4:	mov    ds:0xf7f64c27,eax
  418df9:	lahf   
  418dfa:	sub    al,0x73
  418dfc:	sub    eax,0x4bb2f710
  418e01:	or     al,0xee
  418e03:	sbb    DWORD PTR [edi-0x34],ebp
  418e06:	fwait
  418e07:	arpl   WORD PTR [eax],cx
  418e09:	or     ch,ah
  418e0b:	pop    eax
  418e0c:	into   
  418e0d:	pop    ecx
  418e0e:	ja     0x418e35
  418e10:	call   0x265f0407
  418e15:	retf   0xa9e7
  418e18:	dec    ebp
  418e19:	arpl   WORD PTR [ecx+0x4a7718ea],cx
  418e1f:	aam    0x2f
  418e21:	jmp    0x418dff
  418e23:	stos   DWORD PTR es:[edi],eax
  418e24:	xchg   edx,eax
  418e25:	inc    eax
  418e26:	ja     0x418e68
  418e28:	push   edx
  418e29:	jne    0x418e65
  418e2b:	loope  0x418dc7
  418e2d:	fistp  WORD PTR [ebx]
  418e2f:	jmp    0xf2a8:0xd4568399
  418e36:	or     al,0x4c
  418e38:	sti    
  418e39:	and    ch,BYTE PTR [ebx+edi*4-0x31cf03bc]
  418e40:	add    BYTE PTR [edi-0x2f],cl
  418e43:	xchg   ecx,eax
  418e44:	aaa    
  418e45:	std    
  418e46:	ret    0x1aa7
  418e49:	xchg   esp,eax
  418e4a:	cmp    edx,DWORD PTR es:[esi+0x76e47de1]
  418e51:	mov    edx,0xec01103f
  418e56:	push   0x340389c5
  418e5b:	inc    BYTE PTR [eax+esi*1+0x5bb51feb]
  418e62:	repz sti 
  418e64:	jno    0x418e8d
  418e66:	ins    DWORD PTR es:[edi],dx
  418e67:	ror    ch,0x1a
  418e6a:	jp     0x418e56
  418e6c:	and    eax,0x35f295f9
  418e71:	xchg   edx,eax
  418e72:	pop    edx
  418e73:	jmp    0x625664cc
  418e78:	retf   0x700e
  418e7b:	in     al,0x58
  418e7d:	aaa    
  418e7e:	aaa    
  418e7f:	je     0x418e55
  418e81:	out    0x39,eax
  418e83:	pusha  
  418e84:	imul   eax,edx,0xffffff8f
  418e87:	lahf   
  418e88:	dec    ebp
  418e89:	mov    fs,WORD PTR [ebp+ebp*1+0x6d]
  418e8d:	ja     0x418e93
  418e8f:	(bad)  [edi+0xa01142]
  418e95:	fst    DWORD PTR [ecx+0x176054df]
  418e9b:	sbb    DWORD PTR [edx-0x62680cc9],ecx
  418ea1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418ea2:	pop    esi
  418ea3:	mov    eax,ds:0x9678226e
  418ea8:	push   ss
  418ea9:	xlat   BYTE PTR ds:[ebx]
  418eaa:	mov    BYTE PTR [ebp+0x3f],0x33
  418eae:	cmp    esp,esi
  418eb0:	push   ebx
  418eb1:	dec    eax
  418eb2:	pop    ss
  418eb3:	pop    edx
  418eb4:	les    ebx,FWORD PTR [ebx-0x3c]
  418eb7:	sbb    DWORD PTR [ecx+ecx*8-0x27],ebp
  418ebb:	fistp  DWORD PTR [ecx-0x7675124c]
  418ec1:	icebp  
  418ec2:	scas   eax,DWORD PTR es:[edi]
  418ec3:	inc    edi
  418ec4:	scas   eax,DWORD PTR es:[edi]
  418ec5:	jge    0x418ee0
  418ec7:	pop    ecx
  418ec8:	out    0x50,al
  418eca:	inc    esp
  418ecb:	(bad)  [esi-0x4c]
  418ece:	rol    eax,cl
  418ed0:	and    esp,DWORD PTR [esi]
  418ed2:	or     BYTE PTR [esi+ebx*8-0x80],0x77
  418ed7:	loop   0x418ea5
  418ed9:	xchg   edx,eax
  418eda:	or     BYTE PTR [ebx+0x10447433],dl
  418ee0:	ror    ch,1
  418ee2:	push   edi
  418ee3:	daa    
  418ee4:	dec    ebx
  418ee5:	sahf   
  418ee6:	sub    ecx,esp
  418ee8:	popa   
  418ee9:	fmul   st,st(5)
  418eeb:	dec    edi
  418eec:	into   
  418eed:	hlt    
  418eee:	loope  0x418ee0
  418ef0:	and    eax,DWORD PTR [edx+ebx*2+0x3749541b]
  418ef7:	cs loope 0x418f1a
  418efa:	les    esp,FWORD PTR ds:0x609f6aea
  418f00:	push   ss
  418f01:	data16 aaa 
  418f03:	clc    
  418f04:	dec    edi
  418f05:	push   eax
  418f06:	jmp    0xa5ee:0x3c074fb6
  418f0d:	push   ss
  418f0e:	xor    eax,0x77a385a4
  418f13:	sbb    BYTE PTR [esi-0x69],dl
  418f16:	fisubr WORD PTR [ecx]
  418f18:	pop    ds
  418f19:	xor    ebp,DWORD PTR ds:0x7af9f26a
  418f1f:	mov    es,WORD PTR [ebp+0x6e985345]
  418f25:	out    0xc,eax
  418f27:	ficomp DWORD PTR [ebp+0x6]
  418f2a:	icebp  
  418f2b:	test   BYTE PTR [ebx],ah
  418f2d:	fcom   st(3)
  418f2f:	xchg   DWORD PTR [ecx],esp
  418f31:	xchg   BYTE PTR es:[ebx],ah
  418f34:	jno    0x418f4e
  418f36:	xchg   edx,eax
  418f37:	cs dec eax
  418f39:	out    0x7f,eax
  418f3b:	retf   0xa6e
  418f3e:	cmp    DWORD PTR ds:0x6c7afc80,ebx
  418f44:	dec    esp
  418f45:	jle    0x418fa8
  418f47:	ret    0xd337
  418f4a:	cmc    
  418f4b:	pop    ebx
  418f4c:	hlt    
  418f4d:	ja     0x418f3a
  418f4f:	aad    0x9b
  418f51:	fcomi  st,st(1)
  418f53:	xchg   ecx,eax
  418f54:	jmp    0x418f1e
  418f56:	jecxz  0x418fb4
  418f58:	(bad)  
  418f59:	(bad)  
  418f5b:	rcr    DWORD PTR [edx-0x49],0xd6
  418f5f:	iret   
  418f60:	mov    ?,WORD PTR [edi-0x494f7038]
  418f66:	ja     0x418fce
  418f68:	mov    eax,0x848dd34e
  418f6d:	pusha  
  418f6e:	add    bl,bl
  418f70:	in     al,dx
  418f71:	sub    al,al
  418f73:	adc    al,0xba
  418f75:	xlat   BYTE PTR ds:[ebx]
  418f76:	shl    DWORD PTR [esi],0xe6
  418f79:	and    eax,0x32492117
  418f7e:	mov    esp,0x4b4e0dab
  418f83:	cmp    bh,BYTE PTR [ecx+edi*8]
  418f86:	adc    ebx,esi
  418f88:	fdivp  st(0),st
  418f8a:	mov    DWORD PTR [esi-0x707a8925],ecx
  418f90:	sbb    DWORD PTR ds:0xda6d5c4,esp
  418f96:	push   0x150b36c3
  418f9b:	xor    DWORD PTR [ebx+eiz*1+0x7d],eax
  418f9f:	int3   
  418fa0:	sahf   
  418fa1:	aam    0xb3
  418fa3:	xchg   ebp,eax
  418fa4:	mov    ecx,fs
  418fa6:	cld    
  418fa7:	fs aas 
  418fa9:	mov    edi,0x3e57eadb
  418fae:	(bad)  
  418faf:	ss sub al,0x23
  418fb2:	movs   BYTE PTR es:[edi],BYTE PTR gs:[esi]
  418fb4:	or     DWORD PTR [eax+eiz*2+0xf418d6b],esp
  418fbb:	ja     0x418fc9
  418fbd:	mov    ebx,DWORD PTR [ebp+0x7e]
  418fc0:	outs   dx,BYTE PTR ds:[esi]
  418fc1:	add    DWORD PTR [esi-0x7c8a107],edi
  418fc7:	call   0x76f157c9
  418fcc:	mov    ?,WORD PTR [eax-0x4d9476d7]
  418fd2:	sbb    dl,al
  418fd4:	jg     0x419018
  418fd6:	push   eax
  418fd7:	sub    DWORD PTR [edi+0x63099f44],eax
  418fdd:	je     0x418fde
  418fdf:	pop    esi
  418fe0:	sub    eax,0x50d35b56
  418fe5:	test   DWORD PTR [esi-0x1071c3e2],eax
  418feb:	sbb    al,0x29
  418fed:	pop    eax
  418fee:	inc    esi
  418fef:	jmp    0x7b24435d
  418ff4:	sbb    al,0x22
  418ff6:	int    0xdd
  418ff8:	out    dx,al
  418ff9:	jo     0x418fea
  418ffb:	aaa    
  418ffc:	xor    edx,DWORD PTR [edi+0x43]
  418fff:	hlt    
  419000:	scas   eax,DWORD PTR es:[edi]
  419001:	out    dx,al
  419002:	push   ecx
  419003:	ds cld 
  419005:	adc    ebp,DWORD PTR ss:[eax+0x17636fbf]
  41900c:	rep outs dx,DWORD PTR ds:[esi]
  41900e:	jecxz  0x419066
  419010:	nop
  419011:	and    BYTE PTR [ebp+0x1152dc8e],ah
  419017:	das    
  419018:	mov    cl,0x17
  41901a:	out    0xd3,al
  41901c:	xor    ah,cl
  41901e:	(bad)  
  41901f:	(bad)  
  419020:	pusha  
  419021:	stos   BYTE PTR es:[edi],al
  419022:	cmp    eax,0xf8dcb38d
  419027:	sahf   
  419028:	int3   
  419029:	and    al,0xf6
  41902b:	sbb    ebp,DWORD PTR [esi+0x5e456697]
  419031:	jnp    0x418fc5
  419033:	leave  
  419034:	cld    
  419035:	lahf   
  419036:	push   0xb0a4ad55
  41903b:	int    0x72
  41903d:	sub    eax,0x8de82004
  419042:	or     dl,cl
  419044:	and    al,0xbb
  419046:	inc    esp
  419047:	cmc    
  419048:	push   ecx
  419049:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41904a:	ins    DWORD PTR es:[edi],dx
  41904b:	xor    ch,BYTE PTR [ecx-0x1b]
  41904e:	not    DWORD PTR [edx+0x7e]
  419051:	outs   dx,DWORD PTR ds:[esi]
  419052:	jmp    0x418ffe
  419054:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419055:	retf   
  419056:	pop    ecx
  419057:	ins    DWORD PTR es:[edi],dx
  419058:	pop    DWORD PTR [edi-0x13]
  41905b:	adc    ebp,ebx
  41905d:	jbe    0x418fe5
  41905f:	retf   
  419060:	sub    BYTE PTR [eax+eax*8-0x35ddf503],al
  419067:	mov    ah,0xbd
  419069:	mov    BYTE PTR [edx+0x237f47ac],0x5a
  419070:	sub    cl,BYTE PTR [ebp-0x6300a4ff]
  419076:	xchg   esi,eax
  419077:	jb     0x41902d
  419079:	std    
  41907a:	outs   dx,BYTE PTR ds:[esi]
  41907b:	nop
  41907c:	test   eax,0xf0a1dc9
  419081:	cmp    BYTE PTR [ebp+0x20],al
  419084:	es ins BYTE PTR es:[edi],dx
  419086:	(bad)  
  419087:	les    eax,FWORD PTR [esi-0x56]
  41908a:	scas   al,BYTE PTR es:[edi]
  41908b:	rcl    DWORD PTR [edi+0x34],0x85
  41908f:	jns    0x4190c1
  419091:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419092:	ret    
  419093:	rcl    BYTE PTR [eax-0x6d],1
  419096:	jp     0x419077
  419098:	push   0xffffff8e
  41909a:	adc    DWORD PTR [edi],edi
  41909c:	aas    
  41909d:	cs into 
  41909f:	pop    ebp
  4190a0:	scas   eax,DWORD PTR es:[edi]
  4190a1:	jnp    0x419084
  4190a3:	loope  0x419076
  4190a5:	(bad)  
  4190a6:	rcl    BYTE PTR [ecx-0x4a],0x73
  4190aa:	repnz in eax,0xf6
  4190ad:	(bad)  
  4190ae:	js     0x419090
  4190b0:	pop    ds
  4190b1:	jmp    0x4190c9
  4190b3:	sahf   
  4190b4:	xchg   edi,eax
  4190b5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4190b6:	clc    
  4190b7:	xor    eax,0x15e17af2
  4190bc:	lock add eax,0x8443c5f0
  4190c2:	(bad)
  4190c6:	scas   eax,DWORD PTR es:[edi]
  4190c7:	jb     0x4190aa
  4190c9:	fiadd  DWORD PTR [eax+esi*2+0x62]
  4190cd:	retf   0x933d
  4190d0:	cwde   
  4190d1:	int3   
  4190d2:	cmp    DWORD PTR [ecx],esp
  4190d4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4190d5:	sbb    DWORD PTR [edx-0x391c3b14],ebx
  4190db:	sub    ebp,edi
  4190dd:	nop
  4190de:	mov    esi,0x5cd1549b
  4190e3:	(bad)  
  4190e4:	xchg   esi,eax
  4190e5:	icebp  
  4190e6:	aas    
  4190e7:	push   ss
  4190e8:	dec    eax
  4190e9:	dec    eax
  4190ea:	jns    0x4190f2
  4190ec:	inc    edi
  4190ed:	lahf   
  4190ee:	popf   
  4190ef:	xchg   ebx,eax
  4190f0:	inc    ebx
  4190f1:	loope  0x4190e5
  4190f3:	lods   eax,DWORD PTR ds:[esi]
  4190f4:	js     0x419157
  4190f6:	push   esi
  4190f7:	add    DWORD PTR [edi],edi
  4190f9:	mov    eax,0xf8412053
  4190fe:	scas   al,BYTE PTR es:[edi]
  4190ff:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419100:	adc    eax,0x77c0d9be
  419105:	fisubr WORD PTR [edx-0xd]
  419108:	sahf   
  419109:	sbb    DWORD PTR [esi+0x3],0xfe10b84d
  419110:	adc    ebp,DWORD PTR [ebx+eax*8+0x27]
  419114:	cmc    
  419115:	call   0xba2e5642
  41911a:	imul   ecx,DWORD PTR [edi+0x2ed44c99],0xffffff9d
  419121:	inc    esp
  419122:	pop    esi
  419123:	xor    DWORD PTR [bp+si],0xffffffed
  419127:	stos   BYTE PTR es:[edi],al
  419128:	dec    ecx
  419129:	jle    0x41911d
  41912b:	pop    ebp
  41912c:	mov    cl,0xe2
  41912e:	mov    dl,0x6
  419130:	sub    al,0x60
  419132:	add    ch,cl
  419134:	pop    ecx
  419135:	add    ah,BYTE PTR [edx]
  419137:	mov    ebx,0x1847a849
  41913c:	int    0x15
  41913e:	mov    al,cl
  419140:	je     0x41918c
  419142:	pop    ebx
  419143:	inc    ebx
  419144:	mov    ds:0xaf0c8cb5,eax
  419149:	mov    esp,0xa0b77873
  41914e:	xor    BYTE PTR [edi+0x7c],0x76
  419152:	inc    edi
  419153:	ins    BYTE PTR es:[edi],dx
  419154:	aad    0xbd
  419156:	xchg   DWORD PTR [ebx-0x4eec1b78],edi
  41915c:	leave  
  41915d:	mov    ebx,0xbff40146
  419162:	dec    edx
  419163:	mov    bl,0xcc
  419165:	jp     0x4190f1
  419167:	movs   DWORD PTR es:[di],DWORD PTR ds:[si]
  419169:	scas   eax,DWORD PTR es:[edi]
  41916a:	push   ss
  41916b:	mov    edi,0xd8f621ed
  419170:	mov    ch,0xbf
  419172:	shl    eax,0xf9
  419175:	sub    DWORD PTR [edi+edi*1+0x5c],ebp
  419179:	ss mov edx,0x937c2b8b
  41917f:	xor    bh,BYTE PTR [ebx+0x22e42fa6]
  419185:	lock cmp BYTE PTR [edx-0x6d],bh
  419189:	adc    al,0x76
  41918b:	push   eax
  41918c:	(bad)  [esi+0x21]
  41918f:	mov    DWORD PTR ds:0x4906bb55,esp
  419195:	pop    ebx
  419196:	xor    al,0x19
  419198:	outs   dx,DWORD PTR ds:[esi]
  419199:	adc    eax,0x3f526cb2
  41919e:	in     eax,0x34
  4191a0:	push   ebp
  4191a1:	rcr    DWORD PTR [ebp+0x28],0x53
  4191a5:	sar    ecx,0x1b
  4191a8:	adc    eax,0x4911c963
  4191ad:	sub    al,0x81
  4191af:	pop    esp
  4191b0:	xchg   ecx,eax
  4191b1:	sub    al,0x6d
  4191b3:	and    al,BYTE PTR [esi]
  4191b5:	ret    0x8cbf
  4191b8:	xchg   ecx,eax
  4191b9:	idiv   BYTE PTR [edi+eiz*1-0x17]
  4191bd:	ins    WORD PTR es:[edi],dx
  4191bf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4191c0:	dec    esi
  4191c1:	in     al,dx
  4191c2:	data16 jae 0x4191fd
  4191c5:	jnp    0x4191fc
  4191c7:	lock fidivr DWORD PTR [eax+0x15]
  4191cb:	jmp    0x17a3:0xb29f18f6
  4191d2:	xor    eax,0xa4beeb96
  4191d7:	push   edx
  4191d8:	mov    cl,0xe0
  4191da:	adc    DWORD PTR [ebx-0x5818fa97],esp
  4191e0:	sti    
  4191e1:	mov    dh,0xd3
  4191e3:	lods   al,BYTE PTR ds:[esi]
  4191e4:	das    
  4191e5:	jle    0x419264
  4191e7:	pop    es
  4191e8:	push   esi
  4191e9:	inc    edi
  4191ea:	mov    fs,WORD PTR [esi+0x5d]
  4191ed:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4191ee:	xchg   esi,eax
  4191ef:	rcr    al,1
  4191f1:	out    dx,eax
  4191f2:	les    esp,FWORD PTR [ecx+0x6b64572a]
  4191f8:	add    al,0xce
  4191fa:	addps  xmm0,XMMWORD PTR ds:0x9fdf536d
  419201:	aam    0xae
  419203:	rcr    ch,0x98
  419206:	xchg   ebp,eax
  419207:	xor    eax,0x24d9f944
  41920c:	and    al,0xea
  41920e:	pop    eax
  41920f:	pop    esi
  419210:	mov    al,0xbf
  419212:	ins    BYTE PTR es:[edi],dx
  419213:	icebp  
  419214:	inc    edi
  419215:	xchg   esp,eax
  419216:	push   edx
  419217:	cmp    ecx,DWORD PTR [ecx+eax*1-0x4932ddb4]
  41921e:	ss int3 
  419220:	cld    
  419221:	fwait
  419222:	pop    eax
  419223:	icebp  
  419224:	push   esi
  419225:	pop    es
  419226:	jne    0x419219
  419228:	mov    al,0x37
  41922a:	sahf   
  41922b:	loop   0x4191b5
  41922d:	inc    edx
  41922e:	shl    esi,0xc7
  419231:	ja     0x41922a
  419233:	imul   ebp,DWORD PTR [edi-0x6f],0x44fd2423
  41923a:	(bad)  
  41923b:	sahf   
  41923c:	jmp    0x41927a
  41923e:	(bad)  [eax-0x21a60e2]
  419244:	aas    
  419245:	add    bl,dl
  419247:	imul   al
  419249:	pushf  
  41924a:	sbb    eax,0x680344d
  41924f:	lods   al,BYTE PTR ds:[esi]
  419250:	push   esi
  419251:	lods   al,BYTE PTR ds:[esi]
  419252:	jmp    0x5487f3eb
  419257:	xchg   edi,eax
  419258:	dec    edi
  419259:	(bad)  
  41925a:	mov    esi,0x21ccfcd9
  41925f:	arpl   WORD PTR [edx],si
  419261:	js     0x419233
  419263:	xchg   ecx,eax
  419264:	xor    al,0x88
  419266:	pop    ecx
  419267:	mov    cl,0xd7
  419269:	into   
  41926a:	push   0xffffffb2
  41926c:	ror    DWORD PTR [esi-0x63],0x7a
  419270:	xchg   ebx,eax
  419271:	fs push ecx
  419273:	mov    ds:0x75147f5e,al
  419278:	aaa    
  419279:	nop
  41927a:	pop    es
  41927b:	mov    dh,0x89
  41927d:	push   esp
  41927e:	push   eax
  41927f:	mov    edi,0xb572b28e
  419284:	leave  
  419285:	jnp    0x41924e
  419287:	sbb    al,0xaa
  419289:	jbe    0x4192a2
  41928b:	popa   
  41928c:	mov    ebx,0x37cc5b17
  419291:	dec    ebx
  419292:	add    al,0x41
  419294:	test   al,0xf0
  419296:	xchg   edi,eax
  419297:	pop    ebx
  419298:	xchg   ebx,eax
  419299:	ja     0x419280
  41929b:	sar    bh,1
  41929d:	retf   0x20ef
  4192a0:	sub    al,0x7b
  4192a2:	pusha  
  4192a3:	rol    DWORD PTR [ecx],cl
  4192a5:	add    DWORD PTR [ecx+ecx*4],ecx
  4192a8:	xlat   BYTE PTR ds:[ebx]
  4192a9:	ret    
  4192aa:	jmp    0x419278
  4192ac:	div    dh
  4192ae:	fcmove st,st(6)
  4192b0:	sub    ebx,edx
  4192b2:	idiv   BYTE PTR [esi+0x62f3412a]
  4192b8:	test   al,0x74
  4192ba:	xor    al,0x7f
  4192bc:	sbb    BYTE PTR [edx-0x4dc7f720],bl
  4192c2:	sbb    eax,0x932bf0d
  4192c7:	push   edx
  4192c8:	sbb    edi,esp
  4192ca:	pop    edx
  4192cb:	(bad)  
  4192cc:	cmp    BYTE PTR [ebx],dl
  4192ce:	lods   eax,DWORD PTR ds:[esi]
  4192cf:	(bad)  
  4192d0:	jp     0x4192da
  4192d2:	les    ebx,FWORD PTR [ebx]
  4192d4:	or     eax,0x5ac00211
  4192d9:	cmp    BYTE PTR [esi],dl
  4192db:	add    cl,BYTE PTR [eax]
  4192dd:	cs sub eax,0xca00010c
  4192e3:	sbb    bl,ah
  4192e5:	add    al,0x2d
  4192e7:	mov    edx,0x2a87a3bc
  4192ec:	add    al,BYTE PTR [edx-0x14]
  4192ef:	jmp    0x41933a
  4192f1:	xchg   edi,esi
  4192f3:	pop    ebp
  4192f4:	push   eax
  4192f5:	xor    eax,0x9d66cc1a
  4192fa:	cwde   
  4192fb:	mov    edi,0x90811200
  419300:	in     eax,dx
  419301:	out    dx,al
  419302:	or     edx,eax
  419304:	add    DWORD PTR [ecx-0x732eb821],eax
  41930a:	add    ebp,esi
  41930c:	pop    ecx
  41930d:	out    0xb6,al
  41930f:	lods   al,BYTE PTR gs:[esi]
  419311:	xchg   ecx,eax
  419312:	and    bh,al
  419314:	nop
  419315:	mov    al,0x5c
  419317:	cli    
  419318:	mov    edx,0x3ac547f
  41931d:	data16 stos BYTE PTR es:[edi],al
  41931f:	dec    BYTE PTR [edi-0x4]
  419322:	push   ecx
  419323:	or     ebp,DWORD PTR ds:0xbe6e31a1
  419329:	cmp    BYTE PTR [ebp+ebx*1-0x14],0x23
  41932e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41932f:	repz fwait
  419331:	xchg   ecx,eax
  419332:	xlat   BYTE PTR ds:[ebx]
  419333:	popf   
  419334:	cmc    
  419335:	jmp    0x41933a
  419337:	stos   BYTE PTR es:[edi],al
  419338:	sbb    BYTE PTR [edi+ebx*4-0x7e59fd34],bh
  41933f:	cdq    
  419340:	(bad)  
  419341:	cmp    BYTE PTR [ecx],cl
  419343:	or     bl,bl
  419345:	inc    ebx
  419346:	jnp    0x419393
  419348:	stos   DWORD PTR es:[edi],eax
  419349:	jae    0x41935d
  41934b:	mov    bh,0xbe
  41934d:	test   BYTE PTR [edx-0x1d917fda],0xf3
  419354:	aas    
  419355:	xchg   ebp,eax
  419356:	mov    dl,BYTE PTR [esp-0x4]
  41935a:	imul   ebp,DWORD PTR [edi-0xc658259],0x60
  419361:	test   ebp,eax
  419363:	add    dh,bh
  419365:	adc    al,0x82
  419367:	std    
  419368:	jg     0x419371
  41936a:	and    eax,0xdfd13646
  41936f:	lds    eax,FWORD PTR [ecx]
  419371:	sbb    al,0xbe
  419373:	std    
  419374:	mov    ebx,0xc31412bc
  419379:	lods   eax,DWORD PTR ds:[esi]
  41937a:	mov    ss:0xcb5c3dc2,al
  419380:	fwait
  419381:	sahf   
  419382:	(bad)  
  419383:	mov    cl,0x75
  419385:	loope  0x419379
  419387:	add    BYTE PTR [edx],ah
  419389:	stos   BYTE PTR es:[edi],al
  41938a:	(bad)  [eax]
  41938c:	data16 fcomi st,st(5)
  41938f:	jns    0x419390
  419391:	xor    eax,0x2a7d2be2
  419396:	std    
  419397:	dec    edx
  419398:	jb     0x4193c0
  41939a:	pop    ds
  41939b:	add    al,BYTE PTR [edx+0x3d]
  41939e:	mov    edi,ebp
  4193a0:	aaa    
  4193a1:	not    DWORD PTR [ebx+0x2efa8218]
  4193a7:	add    eax,0x37ca845e
  4193ac:	or     ch,dl
  4193ae:	lock inc edi
  4193b0:	mov    edx,0x93466007
  4193b5:	and    BYTE PTR [eax-0xd],ah
  4193b8:	xor    eax,0x47ef6c99
  4193bd:	pop    esp
  4193be:	das    
  4193bf:	mov    WORD PTR [ebx+0x5e0ec366],ss
  4193c5:	jmp    DWORD PTR [edi+0x3a]
  4193c8:	dec    edi
  4193c9:	push   edx
  4193ca:	fiadd  WORD PTR ds:[edi-0xa]
  4193ce:	mov    eax,ds:0xeef9de9e
  4193d3:	mov    eax,edi
  4193d5:	popf   
  4193d6:	inc    ebx
  4193d7:	retf   
  4193d8:	outs   dx,DWORD PTR fs:[esi]
  4193da:	(bad)  
  4193db:	jno    0x4193b1
  4193dd:	scas   al,BYTE PTR es:[edi]
  4193de:	arpl   WORD PTR [esi],bp
  4193e0:	cwde   
  4193e1:	and    al,0xd9
  4193e3:	add    eax,0xf0510f69
  4193e8:	add    esp,DWORD PTR [esi+ecx*4+0x5267e123]
  4193ef:	jns    0x419388
  4193f1:	xchg   ebx,eax
  4193f2:	add    DWORD PTR [edx+0x241acc40],ecx
  4193f8:	cmc    
  4193f9:	in     al,0x2b
  4193fb:	jnp    0x419423
  4193fd:	add    eax,DWORD PTR ds:0x90b82bed
  419403:	fmul   st,st(7)
  419405:	cmp    al,BYTE PTR [edi-0x5e]
  419408:	xchg   edi,eax
  419409:	leave  
  41940a:	aaa    
  41940b:	out    dx,eax
  41940c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41940d:	lock (bad) 
  41940f:	popf   
  419410:	(bad)  
  419411:	adc    ch,BYTE PTR [ecx]
  419413:	or     esp,DWORD PTR [esi]
  419415:	fisub  WORD PTR [ecx+0x77b2f82f]
  41941b:	js     0x4193d9
  41941d:	jns    0x41941b
  41941f:	dec    esi
  419420:	(bad)  
  419421:	mov    al,ds:0x37558cf2
  419426:	sub    ch,BYTE PTR [eax-0x5c]
  419429:	clc    
  41942a:	and    bl,BYTE PTR [edx]
  41942c:	or     DWORD PTR ds:0x5ef45ee9,ecx
  419432:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419433:	inc    ebx
  419434:	test   al,0xea
  419436:	(bad)  
  419437:	arpl   WORD PTR [edi],cx
  419439:	sbb    DWORD PTR [ebp+0x3aa4c243],ebx
  41943f:	(bad)  
  419440:	jbe    0x41944d
  419442:	ret    
  419443:	fldcw  WORD PTR [ecx]
  419445:	cs mov edx,0x5fd462ca
  41944b:	inc    esi
  41944c:	xchg   edx,eax
  41944d:	cld    
  41944e:	xor    DWORD PTR [edi+eiz*1-0x69],edi
  419452:	mov    esp,0x8f3f0335
  419457:	(bad)  
  419458:	ins    BYTE PTR es:[edi],dx
  419459:	cmp    eax,DWORD PTR [eax-0x69]
  41945c:	mov    edx,0x64b1f556
  419461:	mov    BYTE PTR [edx],dh
  419463:	mov    BYTE PTR [ebx+0x6],dh
  419466:	in     al,dx
  419467:	imul   edi,DWORD PTR [ebp+0x444647f0],0xffffff86
  41946e:	(bad)  
  41946f:	mov    ds:0x4b4b2ccb,eax
  419474:	int    0x4d
  419476:	xchg   edx,eax
  419477:	icebp  
  419478:	inc    edi
  419479:	xor    DWORD PTR [ecx+0x55],esp
  41947c:	shl    DWORD PTR ds:0xa8ffdd6a,0x2b
  419483:	cwde   
  419484:	(bad)  
  419485:	not    DWORD PTR [edi-0x3910359b]
  41948b:	sbb    edi,DWORD PTR [ebp+0x62bb8d7c]
  419491:	inc    esi
  419492:	out    dx,al
  419493:	add    ax,0xe6e
  419497:	ror    BYTE PTR [eax],1
  419499:	and    ebx,edi
  41949b:	imul   ebx,DWORD PTR [ebx],0x9af59dbc
  4194a1:	jno    0x419446
  4194a3:	dec    edx
  4194a4:	add    ch,al
  4194a6:	and    eax,0xffffff9d
  4194a9:	scas   eax,DWORD PTR es:[di]
  4194ab:	inc    edi
  4194ac:	js     0x4194f4
  4194ae:	sub    ecx,esi
  4194b0:	pop    edi
  4194b1:	pop    edi
  4194b2:	(bad)  
  4194b3:	jmp    0xf36b:0x4a31797a
  4194ba:	lahf   
  4194bb:	push   esi
  4194bc:	cmp    DWORD PTR [edx+0x785aa39f],edx
  4194c2:	push   esp
  4194c3:	jae    0x419534
  4194c5:	ficom  DWORD PTR [edi+0x52]
  4194c8:	fisttp DWORD PTR ds:0xa402e945
  4194ce:	jl     0x419543
  4194d0:	js     0x41951c
  4194d2:	xchg   esi,eax
  4194d3:	mov    eax,0x839005a7
  4194d8:	ficomp WORD PTR [edi+0x6830fe92]
  4194de:	jbe    0x41952a
  4194e0:	and    BYTE PTR [eax+0x3b],ch
  4194e3:	imul   eax,edi,0x7f
  4194e6:	pop    es
  4194e7:	inc    ebp
  4194e8:	jmp    0xc5cc:0xb5319bdb
  4194ef:	and    edi,DWORD PTR [ebp+0x2e]
  4194f2:	cwde   
  4194f3:	ins    DWORD PTR es:[edi],dx
  4194f4:	aas    
  4194f5:	(bad)  
  4194f6:	stos   BYTE PTR es:[edi],al
  4194f7:	mov    esi,0xbe74d7d2
  4194fc:	pop    edi
  4194fd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4194fe:	and    al,0xe5
  419500:	cli    
  419501:	mov    ?,ebx
  419503:	aaa    
  419504:	pop    ebp
  419505:	xchg   esp,eax
  419506:	dec    ebx
  419507:	in     al,0xf5
  419509:	add    ch,BYTE PTR ds:0xa5085108
  41950f:	pop    ebp
  419510:	cvtpi2ps xmm2,QWORD PTR [eax+0x32aa4dbe]
  419517:	add    esp,DWORD PTR [edi-0x6b]
  41951a:	fiadd  DWORD PTR [esi-0x2f]
  41951d:	add    al,0xca
  41951f:	pop    es
  419520:	sub    al,0x3
  419522:	and    eax,0x55f79b37
  419527:	loopne 0x41959f
  419529:	sbb    dl,ch
  41952b:	dec    ebx
  41952c:	push   es
  41952d:	nop
  41952e:	adc    cl,BYTE PTR [esi]
  419530:	mov    dl,0x5d
  419532:	xchg   edx,eax
  419533:	push   ds
  419534:	ret    0xf72f
  419537:	sbb    edx,edx
  419539:	sti    
  41953a:	fs push 0x87b046da
  419540:	sbb    BYTE PTR [ecx+0x18a4d328],dl
  419546:	out    0x4,al
  419548:	popa   
  419549:	fidivr WORD PTR [edx-0x2742d2fe]
  41954f:	adc    BYTE PTR [ecx],ch
  419551:	dec    eax
  419552:	adc    DWORD PTR [esi-0x3a],ebx
  419555:	(bad)  
  419557:	sub    dh,cl
  419559:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41955a:	in     eax,0xf1
  41955c:	shl    ah,cl
  41955e:	popf   
  41955f:	aam    0x33
  419561:	mov    ebx,0xcccd69e9
  419566:	adc    eax,0x2fe3ba24
  41956b:	mov    dl,0xb1
  41956d:	adc    ebp,DWORD PTR [edx-0x658f2c34]
  419573:	mov    esp,0x690f8a2
  419578:	cld    
  419579:	mov    bl,0xad
  41957b:	das    
  41957c:	fucom  st(1)
  41957e:	sbb    eax,DWORD PTR [ebx]
  419580:	outs   dx,DWORD PTR ds:[esi]
  419581:	inc    ecx
  419582:	fwait
  419583:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419584:	inc    ebp
  419585:	adc    DWORD PTR [edi+esi*4+0x47c4f0f9],esi
  41958c:	mov    esp,0xab31b04
  419591:	shl    BYTE PTR [ecx+0x5d],1
  419594:	push   esp
  419595:	or     eax,0x2243421b
  41959a:	iret   
  41959b:	ja     0x4195b4
  41959d:	cwde   
  41959e:	mov    eax,0x829b50b3
  4195a3:	jae    0x419541
  4195a5:	jmp    0xa5b9:0x2d361333
  4195ac:	mov    ch,0x16
  4195ae:	pusha  
  4195af:	jmp    0x41956f
  4195b1:	push   edx
  4195b2:	xchg   esp,eax
  4195b3:	pop    ecx
  4195b4:	fcomp  DWORD PTR [esp+edx*4-0x54690191]
  4195bb:	popa   
  4195bc:	scas   eax,DWORD PTR es:[edi]
  4195bd:	cmc    
  4195be:	nop
  4195bf:	cmp    edx,DWORD PTR [edi-0x25]
  4195c2:	imul   eax,DWORD PTR [edx+0x42],0x15865d64
  4195c9:	jl     0x41954f
  4195cb:	neg    DWORD PTR [ebp-0x3a]
  4195ce:	stos   BYTE PTR es:[edi],al
  4195cf:	mov    esi,0x4cb9840e
  4195d4:	or     al,0x31
  4195d6:	sbb    DWORD PTR [edx+0x7a5f23ce],0xa90cca35
  4195e0:	or     edi,DWORD PTR [ebx+eiz*1]
  4195e3:	loopne 0x419581
  4195e5:	sbb    al,0x4c
  4195e7:	xchg   edi,eax
  4195e8:	adc    BYTE PTR [ebx+eiz*4],ah
  4195eb:	dec    ebp
  4195ec:	mov    edi,0x8e4f1e90
  4195f1:	pop    edx
  4195f2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4195f3:	push   edi
  4195f4:	push   cs
  4195f5:	dec    edi
  4195f6:	sub    ah,BYTE PTR [ebp+0xaf70973]
  4195fc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4195fd:	ficom  DWORD PTR [eax+0x1e]
  419600:	jle    0x419677
  419602:	sbb    al,0x47
  419604:	popf   
  419605:	aad    0xb
  419607:	clc    
  419608:	fwait
  419609:	in     eax,dx
  41960a:	or     eax,0x3d0c8d17
  41960f:	outs   dx,DWORD PTR ds:[esi]
  419610:	inc    ecx
  419611:	lods   al,BYTE PTR ds:[esi]
  419612:	cmp    al,dh
  419614:	cmc    
  419615:	mov    edx,0xdf6c0c25
  41961a:	je     0x4195e4
  41961c:	and    DWORD PTR [eax+0x3fa759af],ebp
  419622:	es out dx,al
  419624:	gs inc eax
  419626:	iret   
  419627:	mov    bl,0xda
  419629:	xchg   edi,eax
  41962a:	out    dx,eax
  41962b:	fnstenv ds:0xbb0c5012
  419631:	pusha  
  419632:	test   DWORD PTR [edi-0x4c],esi
  419635:	adc    al,0x51
  419637:	psllq  mm2,QWORD PTR [edx+0x8259f5e]
  41963e:	test   eax,0x55d0f584
  419643:	mov    bh,0x74
  419645:	adc    BYTE PTR [eax+0x4c4c16e9],cl
  41964b:	and    esp,DWORD PTR [edx-0x7fe10cb1]
  419651:	rol    eax,1
  419653:	out    dx,al
  419654:	leave  
  419655:	or     al,0xb8
  419657:	cwde   
  419658:	pop    esp
  419659:	add    al,0xf
  41965b:	pusha  
  41965c:	pop    ecx
  41965d:	dec    esp
  41965e:	mov    WORD PTR [eax+0x735af57e],fs
  419664:	mov    esp,ebx
  419666:	dec    ecx
  419667:	leave  
  419668:	(bad)  
  419669:	call   0xdb5f11ed
  41966e:	pop    ss
  41966f:	mov    cl,0x81
  419671:	inc    ecx
  419672:	clc    
  419673:	mov    WORD PTR [eax],ss
  419675:	sub    DWORD PTR [ebx+eax*1+0x7],edi
  419679:	cmp    eax,0x7806e982
  41967e:	pop    ss
  41967f:	inc    esp
  419680:	arpl   WORD PTR [ebp-0x7],dx
  419683:	ficomp DWORD PTR [esi+0x45315f4d]
  419689:	sub    DWORD PTR [edx],ebx
  41968b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41968c:	loopne 0x4196c6
  41968e:	addr16 xchg ebx,eax
  419690:	jp     0x4196ff
  419692:	sub    eax,0xcbaa148a
  419697:	or     al,bh
  419699:	icebp  
  41969a:	mov    edi,0x747f89d4
  41969f:	add    DWORD PTR [ecx+0x25],eax
  4196a2:	lds    edx,FWORD PTR [edx-0x49525e33]
  4196a8:	jbe    0x4196ea
  4196aa:	xor    al,0x85
  4196ac:	pop    ss
  4196ad:	mov    esp,0xc2ed177e
  4196b2:	pop    edi
  4196b3:	stos   BYTE PTR es:[edi],al
  4196b4:	and    al,0x7b
  4196b6:	jmp    0x9ff672c0
  4196bb:	outs   dx,BYTE PTR ds:[esi]
  4196bc:	pop    edi
  4196bd:	pmulhuw mm4,mm3
  4196c0:	sub    BYTE PTR [ebx+edx*8+0x68],cl
  4196c4:	test   DWORD PTR [edx+0x5b4968d5],ebp
  4196ca:	mov    DWORD PTR [edi+0x31cba3ca],ebx
  4196d0:	sbb    edi,ecx
  4196d2:	ret    0x9701
  4196d5:	adc    BYTE PTR [ebp-0x14],0x5b
  4196d9:	lock dec edi
  4196db:	fstp   QWORD PTR [esi+0x20]
  4196de:	inc    edi
  4196df:	data16 mov dl,0xc4
  4196e2:	fst    DWORD PTR [esi]
  4196e4:	cmc    
  4196e5:	mov    dh,dh
  4196e7:	mov    DWORD PTR [ecx],0x7a44f154
  4196ed:	and    eax,0x86f9bc36
  4196f2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4196f3:	pop    ebp
  4196f4:	imul   ecx,DWORD PTR [esi-0x50],0xffffffa6
  4196f8:	jg     0x419773
  4196fa:	fstp   DWORD PTR [esi-0x7134c8dd]
  419700:	aam    0x3f
  419702:	pop    edi
  419703:	pop    DWORD PTR [eax-0x1e4549e3]
  419709:	leave  
  41970a:	push   ebp
  41970b:	push   ebx
  41970c:	push   es
  41970d:	pop    ecx
  41970e:	arpl   WORD PTR [esi],bx
  419710:	inc    eax
  419711:	aas    
  419712:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419713:	repnz call 0xb3fa:0xa21e1320
  41971b:	push   0xffffffcc
  41971d:	push   es
  41971e:	sub    esi,DWORD PTR [ecx+0x1b768da1]
  419724:	push   ecx
  419725:	stos   DWORD PTR es:[edi],eax
  419726:	daa    
  419727:	hlt    
  419728:	adc    ebx,DWORD PTR [edx-0x6d]
  41972b:	(bad)  
  41972d:	pop    es
  41972e:	int3   
  41972f:	test   eax,0x6dddef10
  419734:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419735:	ficom  WORD PTR [edx+edx*1]
  419738:	dec    dx
  41973a:	ret    0x2f6a
  41973d:	mov    ds:0x5cee64d9,al
  419742:	cli    
  419743:	(bad)  
  419744:	mov    esi,0xc5f82ee4
  419749:	jle    0x419742
  41974b:	pusha  
  41974c:	mov    ebp,0xd031f8eb
  419751:	repz push eax
  419753:	push   ebp
  419754:	jo     0x419738
  419756:	jl     0x419715
  419758:	sbb    ah,0x28
  41975b:	pushf  
  41975c:	push   esp
  41975d:	sar    DWORD PTR [eax],cl
  41975f:	clc    
  419760:	mov    ecx,0xd946d652
  419765:	xchg   esi,eax
  419766:	bound  ebx,QWORD PTR [esp+ebx*1]
  419769:	mov    bh,0xfe
  41976b:	add    BYTE PTR [ecx-0x89edc7f],dh
  419771:	jb     0x4197e9
  419773:	js     0x419714
  419775:	cdq    
  419776:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419777:	mov    dh,0xab
  419779:	(bad)  
  41977a:	mov    bh,0xdb
  41977c:	xor    al,0x31
  41977e:	ror    BYTE PTR [ebx],cl
  419780:	inc    eax
  419781:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419782:	add    dh,0x1c
  419785:	mov    bh,0x62
  419787:	cmp    ah,bh
  419789:	add    DWORD PTR [esi-0x29f5f49e],ebx
  41978f:	(bad)  
  419790:	fld    st(6)
  419792:	je     0x419780
  419794:	leave  
  419795:	jl     0x41980f
  419797:	lock xlat BYTE PTR ds:[ebx]
  419799:	shr    cl,0xbb
  41979c:	cmp    BYTE PTR [eax-0x410cefcc],al
  4197a2:	adc    eax,0x38fa928b
  4197a7:	sub    ebp,DWORD PTR es:[ecx-0x53]
  4197ab:	adc    ecx,esi
  4197ad:	icebp  
  4197ae:	pop    es
  4197af:	out    0xf9,eax
  4197b1:	(bad)  [bp+di]
  4197b4:	iret   
  4197b5:	push   eax
  4197b6:	pop    edi
  4197b7:	lahf   
  4197b8:	mov    ch,0x5e
  4197ba:	push   ds
  4197bb:	adc    al,0xbc
  4197bd:	dec    eax
  4197be:	jnp    0x419836
  4197c0:	dec    esp
  4197c1:	jnp    0x41974d
  4197c3:	mov    ah,dl
  4197c5:	pushf  
  4197c6:	mov    ecx,DWORD PTR [ecx]
  4197c8:	sub    eax,0x166fe663
  4197cd:	mov    edx,0x1bf132d2
  4197d2:	(bad)  
  4197d3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4197d4:	pushf  
  4197d5:	adc    bl,BYTE PTR [ebx]
  4197d7:	fbstp  TBYTE PTR ds:0xde57a9c1
  4197dd:	inc    esp
  4197de:	mov    bh,0x8e
  4197e0:	jo     0x419846
  4197e2:	cli    
  4197e3:	cwde   
  4197e4:	popa   
  4197e5:	inc    eax
  4197e6:	mov    ds:0xfd7d0efd,al
  4197eb:	xor    BYTE PTR [esi-0x57],ah
  4197ee:	sbb    ah,ah
  4197f0:	push   cs
  4197f1:	in     al,dx
  4197f2:	jne    0x419791
  4197f4:	jmp    0xe55e:0x4c21c2b1
  4197fb:	ins    DWORD PTR es:[edi],dx
  4197fc:	and    bl,BYTE PTR ds:0x3c91c54e
  419802:	fild   DWORD PTR [edi+0x4d]
  419805:	mov    ds:0x7352e044,al
  41980a:	popf   
  41980b:	ds sti 
  41980d:	cmp    DWORD PTR [esp+eax*8],ebp
  419810:	fcmovne st,st(7)
  419812:	jnp    0x4197f0
  419814:	frstor [ebx-0x7]
  419817:	jge    0x419808
  419819:	push   esp
  41981a:	ins    DWORD PTR es:[edi],dx
  41981b:	adc    edi,edx
  41981d:	sbb    al,0xad
  41981f:	ret    0x9384
  419822:	hlt    
  419823:	enter  0x88f9,0xeb
  419827:	cdq    
  419828:	or     ebp,DWORD PTR [eax-0x7c903808]
  41982e:	leave  
  41982f:	or     bl,bh
  419831:	out    dx,eax
  419832:	xchg   edx,eax
  419833:	in     eax,dx
  419834:	rol    BYTE PTR [ebx-0x38],cl
  419837:	(bad)  
  419838:	xor    BYTE PTR [ebx],ch
  41983a:	mov    BYTE PTR [edi],ch
  41983c:	inc    eax
  41983d:	das    
  41983e:	sub    DWORD PTR [ebp-0x748e1b1b],0x3fc9edee
  419848:	out    0xd4,eax
  41984a:	sub    bh,0x10
  41984d:	mov    cl,0xa9
  41984f:	aas    
  419850:	div    esp
  419852:	jecxz  0x41980a
  419854:	scas   eax,DWORD PTR es:[edi]
  419855:	test   BYTE PTR [eax+0x5c],ah
  419858:	cmp    al,0x86
  41985a:	(bad)  
  41985b:	xchg   ebp,eax
  41985c:	jp     0x41984f
  41985e:	pop    eax
  41985f:	cmp    eax,DWORD PTR [edx-0x10]
  419862:	mov    cl,0xfe
  419864:	fsubr  DWORD PTR [esi]
  419866:	xchg   ebx,eax
  419867:	cmc    
  419868:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419869:	dec    ecx
  41986a:	or     al,0x38
  41986c:	xchg   WORD PTR [edi],di
  41986f:	add    DWORD PTR [ecx],esp
  419871:	mov    edx,0x32c9b84d
  419876:	add    esi,DWORD PTR [ebx-0x1a]
  419879:	int    0xaa
  41987b:	and    eax,0xdfa3c9e5
  419880:	les    edx,FWORD PTR [eax-0x76]
  419883:	push   edi
  419884:	mov    ah,0x5a
  419886:	push   ds
  419887:	js     0x4198e2
  419889:	adc    al,0x40
  41988b:	out    0x89,al
  41988d:	inc    esi
  41988e:	into   
  41988f:	push   es
  419890:	xchg   ch,ah
  419892:	and    edx,esp
  419894:	sub    al,0x62
  419896:	je     0x419888
  419898:	add    DWORD PTR [ebp-0x7def0449],0xbf4db6e2
  4198a2:	imul   eax,ebp,0xc47e359b
  4198a8:	in     al,dx
  4198a9:	sbb    al,0xbd
  4198ab:	aad    0x28
  4198ad:	xor    DWORD PTR [ebp+0x10665712],esp
  4198b3:	les    esi,FWORD PTR [ecx+0x5bf6b6ed]
  4198b9:	push   ss
  4198ba:	pop    eax
  4198bb:	inc    ecx
  4198bc:	jge    0x4198cd
  4198be:	inc    ecx
  4198bf:	jl     0x419893
  4198c1:	mov    bh,0x93
  4198c3:	mov    ds:0x53323638,al
  4198c8:	and    ax,dx
  4198cb:	adc    DWORD PTR [edi],0x79
  4198ce:	das    
  4198cf:	aam    0x77
  4198d1:	(bad)
  4198d5:	and    eax,0xd7410440
  4198da:	and    BYTE PTR [edi],0x39
  4198dd:	ret    
  4198de:	ret    0x9ada
  4198e1:	fwait
  4198e2:	mov    cs,WORD PTR es:[ecx]
  4198e5:	shl    ch,cl
  4198e7:	adc    BYTE PTR [ebp-0x14],bh
  4198ea:	xchg   DWORD PTR [eax],esi
  4198ec:	test   BYTE PTR [eax+eax*2],bl
  4198ef:	sub    eax,0x63227a0e
  4198f4:	bound  ebx,QWORD PTR [ebx+0x2a87d573]
  4198fa:	inc    esp
  4198fb:	addr16 enter 0xde02,0xff
  419900:	push   eax
  419901:	inc    edi
  419902:	loop   0x4198f6
  419904:	repz cmp al,0xd5
  419907:	dec    edi
  419908:	data16 jecxz 0x41995f
  41990b:	jne    0x4198f9
  41990d:	setne  BYTE PTR [edi]
  419910:	cmc    
  419911:	rcr    DWORD PTR [eax+ebp*8+0x7091ce3a],0xda
  419919:	push   cs
  41991a:	dec    eax
  41991b:	sbb    al,0x42
  41991d:	call   0xd9d5:0xc34bfc1a
  419924:	cmp    BYTE PTR [ebp+0x33],0x65
  419928:	dec    edi
  419929:	fbstp  TBYTE PTR [edi-0xd]
  41992c:	mov    DWORD PTR [esi+0x30ce162d],esp
  419932:	and    ecx,edx
  419934:	mov    esp,0x57be445a
  419939:	jp     0x419996
  41993b:	test   al,0x51
  41993d:	xor    ch,BYTE PTR [edx+0x6694041b]
  419943:	xchg   esi,eax
  419944:	and    eax,0x7ecba852
  419949:	stc    
  41994a:	test   al,0xd9
  41994c:	push   ds
  41994d:	mov    dh,0x81
  41994f:	into   
  419950:	mov    esp,0x45160106
  419955:	xor    cl,BYTE PTR [esi]
  419957:	pop    ss
  419958:	in     al,dx
  419959:	out    dx,al
  41995a:	sbb    al,0xed
  41995c:	mov    dl,0xcd
  41995e:	add    ch,BYTE PTR [esi]
  419960:	xchg   BYTE PTR [ebx],dl
  419962:	stos   DWORD PTR es:[edi],eax
  419963:	add    DWORD PTR [edi+0x78],edx
  419966:	push   edx
  419967:	inc    esp
  419968:	mov    ds:0x36dc686d,al
  41996d:	adc    ah,bl
  41996f:	js     0x41993c
  419971:	cmp    al,0xe9
  419973:	cmp    dh,dl
  419975:	loop   0x419984
  419977:	ds mov bh,0xf4
  41997a:	dec    ebx
  41997b:	iret   
  41997c:	dec    ebx
  41997d:	sbb    al,0xfa
  41997f:	js     0x4199fc
  419981:	(bad)  
  419982:	cmp    esi,esp
  419984:	pusha  
  419985:	push   cs
  419986:	mov    bl,0x74
  419988:	test   BYTE PTR [edi+0xb],0xab
  41998c:	retf   
  41998d:	inc    eax
  41998e:	jno    0x4199eb
  419990:	retf   0x5065
  419993:	ins    BYTE PTR es:[edi],dx
  419994:	xchg   bl,dh
  419996:	mov    eax,ds:0x127877a3
  41999b:	adc    cl,BYTE PTR [edi+0x1f212ae3]
  4199a1:	es push ebp
  4199a3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4199a4:	and    cl,BYTE PTR [ecx]
  4199a6:	test   BYTE PTR [edx],bl
  4199a8:	js     0x4199c7
  4199aa:	(bad)  
  4199ab:	daa    
  4199ac:	repz pop ebp
  4199ae:	mov    ds:0xc356686c,eax
  4199b3:	cmp    ecx,edx
  4199b5:	jmp    0xe26cd24b
  4199ba:	pusha  
  4199bb:	pop    eax
  4199bc:	lods   eax,DWORD PTR ds:[esi]
  4199bd:	loop   0x4199f8
  4199bf:	jmp    0x5254:0xde2db284
  4199c6:	(bad)  
  4199c8:	pop    edi
  4199c9:	call   0xef87:0x7db11e96
  4199d0:	cmp    bh,bh
  4199d2:	xor    edx,ebp
  4199d4:	jmp    0x8e7f113d
  4199d9:	inc    esp
  4199da:	cwde   
  4199db:	loope  0x419a4b
  4199dd:	jbe    0x419a3a
  4199df:	or     al,0x7f
  4199e1:	push   eax
  4199e2:	xor    BYTE PTR [ebx],bh
  4199e4:	cmp    dl,BYTE PTR [ecx+0x430a6d27]
  4199ea:	push   ebp
  4199eb:	xor    eax,0xc4e6ec8f
  4199f0:	fiadd  DWORD PTR [edi]
  4199f2:	push   ds
  4199f3:	inc    esi
  4199f4:	or     DWORD PTR [ebx-0x256947b0],0x1b
  4199fb:	inc    ebp
  4199fc:	mov    esi,DWORD PTR [esi]
  4199fe:	cmc    
  4199ff:	add    BYTE PTR [esi],dl
  419a01:	add    dh,BYTE PTR [edi+0x73]
  419a04:	icebp  
  419a05:	sub    esp,DWORD PTR [ecx+0x76503f3d]
  419a0b:	push   edi
  419a0c:	mov    ebp,0x78547725
  419a11:	pusha  
  419a12:	fwait
  419a13:	and    BYTE PTR [edi+0x2],bh
  419a16:	ds ret 0x4140
  419a1a:	and    dh,al
  419a1c:	adc    eax,0xc48be356
  419a21:	std    
  419a22:	test   al,0xce
  419a24:	(bad)  
  419a25:	jecxz  0x419a36
  419a27:	hlt    
  419a28:	inc    ebp
  419a29:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419a2a:	sub    edi,DWORD PTR [edx]
  419a2c:	sub    bl,BYTE PTR [ebx-0x2e]
  419a2f:	(bad)  [ebx+0x3b2dc0d4]
  419a35:	mov    cl,0xb
  419a37:	sub    BYTE PTR [ecx+0x727a1ef1],bl
  419a3d:	dec    ecx
  419a3e:	adc    BYTE PTR [edi],al
  419a40:	push   eax
  419a41:	add    DWORD PTR ds:0xde0ed96c,eax
  419a47:	dec    esp
  419a48:	sbb    DWORD PTR [esi+ebp*1],0x6a2b8a7a
  419a4f:	sub    al,0x7f
  419a51:	in     al,dx
  419a52:	gs pop edi
  419a54:	lock fstp DWORD PTR [ebx-0x21096b54]
  419a5b:	mov    dh,0xe1
  419a5d:	test   esp,ebp
  419a5f:	psubw  mm2,QWORD PTR [esi]
  419a62:	out    0x9e,eax
  419a64:	sti    
  419a65:	mov    DWORD PTR [ebx+0x581e4320],eax
  419a6b:	inc    edi
  419a6c:	nop
  419a6d:	adc    BYTE PTR [edx],al
  419a6f:	clc    
  419a70:	mov    al,ds:0x98c28d7b
  419a75:	mov    al,ds:0xba67784
  419a7a:	les    ebx,FWORD PTR [ecx]
  419a7c:	imul   ecx,DWORD PTR [ebx],0x58
  419a7f:	inc    edx
  419a80:	inc    ebx
  419a81:	push   cs
  419a82:	inc    ebx
  419a83:	mov    esp,0x5b5ce7b6
  419a88:	push   esp
  419a89:	rcr    BYTE PTR [edx-0x300af9c5],0xb
  419a90:	or     DWORD PTR [ebx+0xc],esp
  419a93:	inc    esi
  419a94:	mov    ch,BYTE PTR [ebx]
  419a96:	rcr    dh,1
  419a98:	data16 sbb ch,dh
  419a9b:	stc    
  419a9c:	ja     0x419a76
  419a9e:	loope  0x419a92
  419aa0:	pop    ebp
  419aa1:	pushf  
  419aa2:	and    ecx,ecx
  419aa4:	dec    eax
  419aa5:	jl     0x419afb
  419aa7:	dec    eax
  419aa8:	std    
  419aa9:	push   ds
  419aaa:	add    ebp,eax
  419aac:	add    ebx,DWORD PTR [ebx+0x59]
  419aaf:	inc    edx
  419ab0:	ds retf 0x77fa
  419ab4:	lods   al,BYTE PTR ds:[esi]
  419ab5:	les    edi,FWORD PTR [edi+edi*2]
  419ab8:	dec    eax
  419ab9:	cli    
  419aba:	sub    eax,0xf9fd6d88
  419abf:	mov    ch,0x79
  419ac1:	lods   al,BYTE PTR ds:[esi]
  419ac2:	and    eax,0x9c1f0690
  419ac7:	sbb    edx,ecx
  419ac9:	data16 cmp BYTE PTR [ebx+esi*2+0x590f9112],bl
  419ad1:	out    dx,eax
  419ad2:	clc    
  419ad3:	outs   dx,DWORD PTR ds:[esi]
  419ad4:	ret    
  419ad5:	mov    edx,0x1d25d595
  419ada:	dec    edi
  419adb:	mov    esp,es
  419add:	test   ch,0x22
  419ae0:	add    dh,dl
  419ae2:	(bad)  
  419ae3:	outs   dx,BYTE PTR ds:[esi]
  419ae4:	sbb    eax,0xc4ff4da8
  419ae9:	jg     0x419aef
  419aeb:	dec    ebp
  419aec:	add    DWORD PTR [edi-0x3a],esp
  419aef:	adc    ah,al
  419af1:	cmp    edx,DWORD PTR [edi]
  419af3:	push   es
  419af4:	stos   DWORD PTR es:[edi],eax
  419af5:	out    dx,al
  419af6:	test   BYTE PTR [eax],0x53
  419af9:	cmc    
  419afa:	mov    al,0xf4
  419afc:	cmp    edi,DWORD PTR [edx+esi*2-0x2580fb2d]
  419b03:	fst    QWORD PTR [ebx]
  419b05:	cmp    BYTE PTR ds:0x286bb7f1,0xe2
  419b0c:	pop    esp
  419b0d:	loop   0x419b15
  419b0f:	sahf   
  419b10:	mov    esp,0xd830aad0
  419b15:	sub    ah,BYTE PTR [ecx+ebp*1+0x39]
  419b19:	jp     0x419b0b
  419b1b:	mov    fs,WORD PTR [edx+eiz*8+0x3693cf6e]
  419b22:	sbb    eax,0xc7e16a6a
  419b27:	adc    ch,al
  419b29:	daa    
  419b2a:	push   ecx
  419b2b:	jmp    0xa0efffa9
  419b30:	scas   eax,DWORD PTR es:[edi]
  419b31:	(bad)  
  419b32:	bound  edi,QWORD PTR [esi-0x70]
  419b35:	mov    dh,0x2c
  419b37:	sbb    eax,0xa02c9f00
  419b3c:	mov    ebx,0xa8fbddd9
  419b41:	xchg   edx,eax
  419b42:	pop    eax
  419b43:	mov    ch,0x5a
  419b45:	dec    ecx
  419b46:	mov    cl,BYTE PTR [ebp-0x44]
  419b49:	out    dx,eax
  419b4a:	or     DWORD PTR [ebx],eax
  419b4c:	sub    eax,0xa913427a
  419b51:	add    esp,edi
  419b53:	loopne 0x419b72
  419b55:	jle    0x419b07
  419b57:	fidiv  WORD PTR [edi]
  419b59:	dec    edi
  419b5a:	fs aas 
  419b5c:	push   ebx
  419b5d:	(bad)  
  419b5e:	jns    0x419bd1
  419b60:	and    ah,0x90
  419b63:	fmul   DWORD PTR [ecx-0x7dae7008]
  419b69:	jl     0x419b53
  419b6b:	push   edx
  419b6c:	jnp    0x419b67
  419b6e:	sbb    ebx,ebp
  419b70:	xor    al,0xb4
  419b72:	mov    bl,0xab
  419b74:	sbb    al,0x54
  419b76:	sub    ebp,DWORD PTR [eax+0x21ca630f]
  419b7c:	or     dh,dl
  419b7e:	mov    ch,BYTE PTR [esi-0x3]
  419b81:	push   esi
  419b82:	jmp    0xb330:0x813a638d
  419b89:	repz dec edx
  419b8b:	dec    esp
  419b8c:	mov    esp,0x9d49cb8a
  419b91:	fmul   QWORD PTR [edi]
  419b93:	das    
  419b94:	in     eax,dx
  419b95:	outs   dx,BYTE PTR ds:[esi]
  419b96:	(bad)  
  419b97:	(bad)  
  419b98:	cli    
  419b99:	jl     0x419bcd
  419b9b:	mov    ds:0xfa8f311b,eax
  419ba0:	pop    edx
  419ba1:	xor    BYTE PTR [edx],bl
  419ba3:	pop    ds
  419ba4:	mov    DWORD PTR [esi-0x45],ecx
  419ba7:	in     al,0x12
  419ba9:	xor    BYTE PTR [edx+0x16b8165b],bl
  419baf:	cmp    bh,dl
  419bb1:	xchg   edx,eax
  419bb2:	in     al,0x87
  419bb4:	jne    0x419bcf
  419bb6:	push   0x2abe770
  419bbb:	mov    cl,0x41
  419bbd:	sbb    bh,BYTE PTR [edi+ebx*1]
  419bc0:	add    cl,dl
  419bc2:	and    BYTE PTR ds:0x3f388102,0xa7
  419bca:	lods   eax,DWORD PTR ds:[esi]
  419bcb:	(bad)  
  419bcc:	xlat   BYTE PTR ds:[ebx]
  419bcd:	and    bl,BYTE PTR [ebx-0x3e]
  419bd0:	cmp    BYTE PTR [eax+ecx*8],dl
  419bd3:	out    0xc6,al
  419bd5:	pushf  
  419bd6:	jae    0x419b64
  419bd8:	repnz push edx
  419bda:	shl    DWORD PTR [edx-0x13],0x47
  419bde:	push   edi
  419bdf:	popa   
  419be0:	pushf  
  419be1:	in     al,0x2b
  419be3:	sbb    ch,al
  419be5:	push   0x32f1a5d4
  419bea:	sbb    BYTE PTR [edx+0x7],cl
  419bed:	ins    DWORD PTR es:[edi],dx
  419bee:	arpl   WORD PTR [edx+esi*1],bp
  419bf1:	mov    ebx,0x78e1dbe9
  419bf6:	inc    DWORD PTR [edi-0x7e]
  419bf9:	and    eax,0xf9cc0fbe
  419bfe:	ficom  DWORD PTR [ecx]
  419c00:	mov    dl,BYTE PTR [ebp+0x21]
  419c03:	xchg   edx,eax
  419c04:	mov    ebp,0xf47d91a1
  419c09:	add    BYTE PTR [eax-0x73fd84e],ah
  419c0f:	iret   
  419c10:	add    DWORD PTR [eax],ecx
  419c12:	in     al,dx
  419c13:	push   0xee6f67df
  419c18:	aas    
  419c19:	nop
  419c1a:	pop    esi
  419c1b:	or     ebp,DWORD PTR [eax+0x56]
  419c1e:	fdivr  DWORD PTR [ecx+0x30]
  419c21:	scas   al,BYTE PTR es:[edi]
  419c22:	mov    ?,WORD PTR [ecx-0x7]
  419c25:	pop    ebx
  419c26:	push   ds
  419c27:	ret    0x2ecb
  419c2a:	mov    edx,0x85fe05fc
  419c2f:	push   ss
  419c30:	cmp    edx,eax
  419c32:	nop
  419c33:	leave  
  419c34:	push   esi
  419c35:	pop    esi
  419c36:	dec    ecx
  419c37:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419c38:	push   eax
  419c39:	retf   
  419c3a:	fimul  DWORD PTR [ebp+0x374e863a]
  419c40:	push   es
  419c41:	inc    esi
  419c42:	scas   eax,DWORD PTR es:[edi]
  419c43:	ret    0x3372
  419c46:	add    al,0x94
  419c48:	sub    al,0x72
  419c4a:	stos   BYTE PTR es:[edi],al
  419c4b:	cdq    
  419c4c:	inc    edx
  419c4d:	dec    ebx
  419c4e:	mov    ecx,0xbc424aea
  419c53:	mov    ebp,0x7db67f47
  419c59:	leave  
  419c5a:	test   eax,0x9827a1a9
  419c5f:	sub    al,0x2e
  419c61:	into   
  419c62:	push   cs
  419c63:	das    
  419c64:	ds jne 0x419c18
  419c67:	adc    BYTE PTR [edi],bl
  419c69:	(bad)  
  419c6a:	loopne 0x419c69
  419c6c:	ret    
  419c6d:	(bad)  
  419c6e:	and    cl,ah
  419c70:	inc    esi
  419c71:	xchg   esi,eax
  419c72:	push   ebp
  419c73:	jle    0x419cb6
  419c75:	hlt    
  419c76:	mov    bh,0x73
  419c78:	lods   al,BYTE PTR ds:[esi]
  419c79:	push   esp
  419c7a:	inc    esi
  419c7b:	or     DWORD PTR [eax+0x67],ecx
  419c7e:	push   cs
  419c7f:	mov    eax,0x127c8117
  419c84:	(bad)  
  419c85:	ins    BYTE PTR es:[edi],dx
  419c86:	pop    ecx
  419c87:	ja     0x419c36
  419c89:	sbb    edi,esi
  419c8b:	xchg   edx,eax
  419c8c:	ja     0x419c2f
  419c8e:	mov    cl,0x4d
  419c90:	inc    ebp
  419c91:	mov    edx,0xe6a221f4
  419c96:	mov    edx,0xc2531b7c
  419c9b:	ja     0x419cd6
  419c9d:	add    DWORD PTR [ebx+0x354816aa],0x7cdcca8b
  419ca7:	mov    WORD PTR [esp+edi*2+0x43282ade],?
  419cae:	call   0x282c31cf
  419cb3:	fdivr  DWORD PTR [ecx+0x6f5a5181]
  419cb9:	cmp    eax,0xea2e9551
  419cbe:	jmp    0x419cdb
  419cc0:	sbb    DWORD PTR [esi],ebx
  419cc2:	mov    ch,0x89
  419cc4:	jle    0x419ccc
  419cc6:	push   ebx
  419cc7:	xchg   edi,eax
  419cc8:	or     BYTE PTR [edx],0x6
  419ccb:	jg     0x419d25
  419ccd:	popf   
  419cce:	mov    edi,0xecfb0a3c
  419cd3:	arpl   cx,bx
  419cd5:	xor    eax,0x45aa7c07
  419cda:	sub    eax,0x7b30d921
  419cdf:	pop    ebx
  419ce0:	sub    esp,DWORD PTR [esi+0x4e]
  419ce3:	clc    
  419ce4:	mov    edx,0x70621088
  419ce9:	pusha  
  419cea:	or     BYTE PTR [ecx+0x34cf97d9],0x3a
  419cf1:	jecxz  0x419ccd
  419cf3:	inc    esp
  419cf4:	je     0x419d72
  419cf6:	in     al,dx
  419cf7:	add    al,BYTE PTR [edi-0x77]
  419cfa:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419cfb:	pop    esi
  419cfc:	and    DWORD PTR ds:0x5180fca3,esp
  419d02:	xor    eax,0x46144aca
  419d07:	xchg   esp,eax
  419d08:	push   0x45640747
  419d0d:	scas   eax,DWORD PTR es:[edi]
  419d0e:	out    dx,al
  419d0f:	sbb    DWORD PTR [eax+0x5],ebx
  419d12:	inc    ebx
  419d13:	inc    esp
  419d14:	fld    TBYTE PTR [ebp+0x33]
  419d17:	and    ch,BYTE PTR [eax-0x23e132e4]
  419d1d:	jne    0x419d23
  419d1f:	lea    edi,[ebp-0x7769484]
  419d25:	inc    ebp
  419d26:	scas   al,BYTE PTR es:[edi]
  419d27:	lods   eax,DWORD PTR ds:[esi]
  419d28:	ret    
  419d29:	jne    0x419cae
  419d2b:	out    0xc4,al
  419d2d:	jle    0x419d6b
  419d2f:	dec    ebx
  419d30:	cmp    al,0x99
  419d32:	(bad)  
  419d33:	push   esi
  419d34:	inc    ecx
  419d35:	xchg   BYTE PTR [edi+edx*4+0x51],dl
  419d39:	(bad)  
  419d3a:	fwait
  419d3b:	(bad)
  419d3f:	mov    ebx,0x5739e17
  419d44:	cmp    eax,0x11c48c20
  419d49:	inc    edx
  419d4a:	jl     0x419d89
  419d4c:	repnz pop esi
  419d4e:	jno    0x419cda
  419d50:	clc    
  419d51:	add    DWORD PTR [esi-0xf],edx
  419d54:	and    dh,dl
  419d56:	and    eax,0x6e1db665
  419d5b:	xor    eax,0x3a43b462
  419d60:	mov    ecx,0x16642970
  419d65:	adc    eax,0x5b21f94a
  419d6a:	sbb    al,0x32
  419d6c:	sti    
  419d6d:	mov    ds:0xac2d2d1c,eax
  419d72:	pop    ecx
  419d73:	xchg   edi,eax
  419d74:	lahf   
  419d75:	adc    esp,DWORD PTR [ecx-0x271ec96d]
  419d7b:	push   esp
  419d7c:	mov    bl,0x5b
  419d7e:	xor    al,0x1a
  419d80:	pop    edx
  419d81:	pop    esi
  419d82:	inc    eax
  419d83:	cmp    al,0xa3
  419d85:	sbb    ch,0x77
  419d88:	mov    ds:0x8962850b,eax
  419d8d:	in     eax,dx
  419d8e:	push   cs
  419d8f:	aas    
  419d90:	mov    dl,0xf3
  419d92:	xchg   edx,eax
  419d93:	or     dh,0xf6
  419d96:	push   ds
  419d97:	pop    ebx
  419d98:	stc    
  419d99:	dec    eax
  419d9a:	jg     0x419d6e
  419d9c:	adc    DWORD PTR [esp+edi*2+0x6a87a151],eax
  419da3:	cli    
  419da4:	ins    DWORD PTR es:[edi],dx
  419da5:	arpl   WORD PTR [edi+0xb7de00a],bx
  419dab:	outs   dx,BYTE PTR ds:[esi]
  419dac:	inc    edx
  419dad:	pop    esp
  419dae:	arpl   WORD PTR [esi+ecx*2+0x53bff5ef],bp
  419db5:	cld    
  419db6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419db7:	push   es
  419db8:	icebp  
  419db9:	mov    al,0x3f
  419dbb:	fisttp WORD PTR [esi+ecx*2]
  419dbe:	call   0x75d999ab
  419dc3:	inc    esp
  419dc4:	dec    esp
  419dc5:	push   ss
  419dc6:	pusha  
  419dc7:	sahf   
  419dc8:	cmp    ebx,0xffffff89
  419dcb:	lods   al,BYTE PTR ds:[esi]
  419dcc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419dcd:	push   0x320c29fe
  419dd2:	sub    edx,DWORD PTR [eax*2-0x6dfa6583]
  419dd9:	(bad)  
  419dda:	iret   
  419ddb:	fwait
  419ddc:	daa    
  419ddd:	sub    ch,BYTE PTR [esi+0x72e76ba]
  419de3:	mov    edx,0x189ea27a
  419de8:	std    
  419de9:	aam    0x40
  419deb:	push   ebp
  419dec:	cmp    al,0xd7
  419dee:	(bad)  [ebx-0x47918de7]
  419df4:	ja     0x419e3a
  419df6:	mov    dl,BYTE PTR [ebx+0x23]
  419df9:	and    eax,0x4db033b
  419dfe:	push   0x2b8c147a
  419e03:	leave  
  419e04:	xchg   ebx,eax
  419e05:	dec    ebp
  419e06:	or     esi,DWORD PTR [edx]
  419e08:	jo     0x419e24
  419e0a:	std    
  419e0b:	mov    esp,0x8508171
  419e10:	inc    edi
  419e11:	(bad)  
  419e12:	(bad)  
  419e13:	mov    eax,0xb31ea3bc
  419e18:	fstp   TBYTE PTR ds:[ebx+eax*8]
  419e1c:	push   edi
  419e1d:	(bad)  
  419e1e:	mov    ecx,0x2815c369
  419e23:	cmp    DWORD PTR [esi],edx
  419e25:	sti    
  419e26:	aaa    
  419e27:	outs   dx,BYTE PTR ds:[esi]
  419e28:	jbe    0x419e7f
  419e2a:	xchg   BYTE PTR [ecx+0x75],al
  419e2d:	ret    
  419e2e:	mov    dh,0xfe
  419e30:	jb     0x419e78
  419e32:	js     0x419dee
  419e34:	push   ds
  419e35:	cdq    
  419e36:	in     eax,0xc6
  419e38:	and    DWORD PTR [ebp+0x1d86ebb0],esi
  419e3e:	mov    edx,0xb664115
  419e43:	mov    dh,0x82
  419e45:	out    dx,al
  419e46:	jle    0x419df4
  419e48:	sub    BYTE PTR [ebx+ebx*1],bh
  419e4b:	mov    cl,0xf6
  419e4d:	out    0x77,al
  419e4f:	jmp    0x419e90
  419e51:	hlt    
  419e52:	fs int3 
  419e54:	add    bl,BYTE PTR ds:0xf69825cc
  419e5a:	inc    ebx
  419e5b:	push   edi
  419e5c:	xchg   esi,eax
  419e5d:	cmp    eax,0x8645e67a
  419e62:	(bad)  
  419e63:	or     eax,0xfb3a8cf2
  419e68:	inc    ebx
  419e69:	add    eax,0x9a88faac
  419e6e:	ds push ebp
  419e70:	pushf  
  419e71:	test   ebx,0x4d19b69
  419e77:	nop
  419e78:	push   0x5ace9f6d
  419e7d:	or     al,0xeb
  419e7f:	dec    ebp
  419e80:	cmc    
  419e81:	nop
  419e82:	cwde   
  419e83:	adc    eax,0x81506883
  419e88:	fwait
  419e89:	push   ds
  419e8a:	mov    bh,0x80
  419e8c:	and    al,0x25
  419e8e:	call   0x74a93d62
  419e93:	cmp    DWORD PTR [ecx-0x1cfc380a],edi
  419e99:	push   0xffffff96
  419e9b:	cmp    al,0x6d
  419e9d:	add    eax,0x29e6a740
  419ea2:	sbb    al,0x22
  419ea4:	ret    
  419ea5:	dec    ecx
  419ea6:	pop    es
  419ea7:	inc    eax
  419ea8:	icebp  
  419ea9:	sbb    BYTE PTR [ecx],bl
  419eab:	call   0xb95:0x78f4fe22
  419eb2:	fild   WORD PTR [esi-0x51432ad0]
  419eb8:	call   0x7f96:0x26422452
  419ebf:	stos   DWORD PTR es:[edi],eax
  419ec0:	outs   dx,BYTE PTR ds:[esi]
  419ec1:	jmp    0x419e75
  419ec3:	push   0xb721d34
  419ec8:	sub    cl,BYTE PTR [edi]
  419eca:	xchg   edx,eax
  419ecb:	pop    ebx
  419ecc:	mov    esp,0xed1063c4
  419ed1:	or     BYTE PTR [edx+ebx*2],bh
  419ed4:	cld    
  419ed5:	inc    ecx
  419ed6:	sub    bl,BYTE PTR [edi]
  419ed8:	adc    eax,0x94f176a1
  419edd:	pop    edi
  419ede:	push   0x56
  419ee0:	dec    ebx
  419ee2:	xor    eax,0x3387a1f
  419ee7:	ficomp DWORD PTR [edi+0xa]
  419eea:	sahf   
  419eeb:	push   edi
  419eec:	jae    0x419e9e
  419eee:	ja     0x419f2d
  419ef0:	jno    0x419e94
  419ef2:	scas   eax,DWORD PTR es:[edi]
  419ef3:	add    BYTE PTR [ecx],ch
  419ef5:	pop    edi
  419ef6:	adc    cl,0x21
  419ef9:	push   0xccd7a0c
  419efe:	outs   dx,DWORD PTR ds:[esi]
  419eff:	cmp    ecx,DWORD PTR ds:0x28bebe8c
  419f05:	(bad)
  419f08:	adc    eax,0xd2cedf74
  419f0d:	pop    eax
  419f0e:	rol    dh,1
  419f10:	adc    esi,ebx
  419f12:	inc    BYTE PTR [ebx]
  419f14:	mov    eax,0x5a86dfb9
  419f19:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419f1a:	pop    esi
  419f1b:	dec    ecx
  419f1c:	fidiv  WORD PTR [ebx]
  419f1e:	test   eax,0x407e8257
  419f23:	pop    edx
  419f24:	jmp    0x2dc5:0x79ab006b
  419f2b:	(bad)  
  419f2c:	xor    DWORD PTR [edi+0x27f831ed],esp
  419f32:	fs pop es
  419f34:	std    
  419f35:	call   0x13bd:0xf031be3
  419f3c:	ret    0x7975
  419f3f:	ins    BYTE PTR es:[edi],dx
  419f40:	sub    DWORD PTR [ebx+0x64],0x56
  419f44:	ret    
  419f45:	mov    esp,0x9efdeb62
  419f4a:	in     al,0xdd
  419f4c:	xchg   DWORD PTR [ecx],esi
  419f4e:	shl    DWORD PTR [ebx],1
  419f50:	lods   eax,DWORD PTR ds:[esi]
  419f51:	push   0xffffffd3
  419f53:	sbb    DWORD PTR [ecx],esi
  419f55:	fsub   QWORD PTR ds:[edx]
  419f58:	sbb    eax,0xb2bbcc1
  419f5d:	pop    ebp
  419f5e:	fstp   TBYTE PTR [esi+0x58df69a0]
  419f64:	cwde   
  419f65:	jne    0x419fc7
  419f67:	push   ecx
  419f68:	push   ebx
  419f69:	xchg   ecx,eax
  419f6a:	pop    ss
  419f6b:	sub    al,0xe1
  419f6d:	sub    esp,edx
  419f6f:	scas   al,BYTE PTR es:[edi]
  419f70:	xlat   BYTE PTR ds:[ebx]
  419f71:	in     eax,dx
  419f72:	push   edx
  419f73:	sti    
  419f74:	sub    DWORD PTR [ebx],esp
  419f76:	pop    ds
  419f77:	jmp    0xcd54:0x2d70c9b
  419f7e:	jae    0x419fb4
  419f80:	mov    ecx,0x9cc016a7
  419f85:	inc    esi
  419f86:	adc    BYTE PTR [edi],bl
  419f88:	scas   eax,DWORD PTR es:[edi]
  419f89:	cmc    
  419f8a:	jnp    0x41a001
  419f8c:	push   ss
  419f8d:	cmc    
  419f8e:	outs   dx,DWORD PTR ds:[esi]
  419f8f:	mov    ebx,DWORD PTR [ecx+0x326c8ce7]
  419f95:	and    bh,BYTE PTR [esi-0x545f3448]
  419f9b:	test   BYTE PTR [esi-0x63],dh
  419f9e:	bound  ecx,QWORD PTR [edx]
  419fa0:	fcomp  QWORD PTR [eax]
  419fa2:	sub    BYTE PTR [edx+0x7e83a6d7],cl
  419fa8:	lods   eax,DWORD PTR ds:[esi]
  419fa9:	jns    0x419f80
  419fab:	lock es or al,0xc9
  419faf:	neg    esp
  419fb1:	adc    ch,bh
  419fb3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419fb4:	mov    dl,0xcf
  419fb6:	and    ebx,esp
  419fb8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419fb9:	aaa    
  419fba:	test   BYTE PTR [eax-0x71c56672],cl
  419fc0:	jne    0x419fe4
  419fc2:	push   ebx
  419fc3:	cmp    ecx,DWORD PTR [ebp-0x4c]
  419fc6:	test   ebx,edi
  419fc8:	lods   eax,DWORD PTR ds:[esi]
  419fc9:	dec    esi
  419fca:	sahf   
  419fcb:	and    edi,edx
  419fcd:	stc    
  419fce:	aad    0x92
  419fd0:	rol    dl,0xb9
  419fd3:	lock gs pop ds
  419fd6:	repnz hlt 
  419fd8:	js     0x419faa
  419fda:	jnp    0x419f83
  419fdc:	pop    ebp
  419fdd:	push   esp
  419fde:	call   0xb640930d
  419fe3:	or     DWORD PTR [ebp-0x67],ebx
  419fe6:	lahf   
  419fe7:	repnz gs and dl,bl
  419feb:	jnp    0x419fcf
  419fed:	cmp    dl,BYTE PTR [edi+0x4bc70884]
  419ff3:	shl    BYTE PTR [edi],0xd
  419ff6:	add    bh,dl
  419ff8:	nop
  419ff9:	mov    BYTE PTR [eax-0x52b5e810],bl
  419fff:	cdq    
  41a000:	stc    
  41a001:	add    al,0x23
  41a003:	mov    ah,0xae
  41a005:	push   0x4a
  41a007:	cli    
  41a008:	sahf   
  41a009:	pop    ecx
  41a00a:	mov    eax,0xadedb5fc
  41a00f:	push   ss
  41a010:	jnp    0x419fad
  41a012:	scas   eax,DWORD PTR es:[edi]
  41a013:	call   0x53c9:0x81bdc428
  41a01a:	push   esi
  41a01b:	inc    edx
  41a01c:	and    al,0x8d
  41a01e:	inc    ebp
  41a01f:	mov    ebp,0xb88a1a5a
  41a024:	imul   edi,DWORD PTR [ecx-0x2d],0x7a
  41a028:	push   eax
  41a029:	mov    ds:0x134333ec,eax
  41a02e:	mov    eax,ds:0xe79410e2
  41a033:	sub    eax,esp
  41a035:	adc    BYTE PTR [ebx],0x67
  41a038:	sti    
  41a039:	mov    dl,0x67
  41a03b:	push   ss
  41a03c:	adc    ecx,DWORD PTR [ebp-0x42bb3cf3]
  41a042:	fs inc edi
  41a044:	adc    BYTE PTR [edx+0x4c],dh
  41a047:	sbb    esi,edx
  41a049:	lods   eax,DWORD PTR ds:[esi]
  41a04a:	ror    DWORD PTR [esp+ebp*8],1
  41a04d:	les    ebx,FWORD PTR [eiz*8+0x3e6c20ee]
  41a054:	inc    BYTE PTR [edx+esi*4+0x2c2a6cb1]
  41a05b:	add    BYTE PTR [edi+0x37],cl
  41a05e:	mov    dl,0xf9
  41a060:	pop    eax
  41a061:	lahf   
  41a062:	mov    eax,0x1a6c108d
  41a067:	retf   
  41a068:	mov    al,0x70
  41a06a:	add    DWORD PTR [ebx],eax
  41a06c:	xor    al,0xd2
  41a06e:	xchg   esp,eax
  41a06f:	sbb    BYTE PTR [ebx+0x59f12a8b],ah
  41a075:	mov    ah,cl
  41a077:	sbb    ecx,DWORD PTR [ebx]
  41a079:	adc    eax,0x18987b64
  41a07e:	aas    
  41a07f:	pusha  
  41a080:	jmp    0x6957c2ce
  41a085:	outs   dx,BYTE PTR ds:[esi]
  41a086:	fnstenv [eax]
  41a088:	fild   DWORD PTR [esi-0x1d]
  41a08b:	sbb    dl,BYTE PTR es:0xe206e7d
  41a092:	(bad)  
  41a093:	ror    DWORD PTR [edx+0x6],1
  41a096:	jnp    0x41a07d
  41a098:	(bad)  
  41a099:	(bad)  
  41a09a:	(bad)  
  41a09b:	xchg   edi,eax
  41a09c:	jp     0x41a0f2
  41a09e:	cmc    
  41a09f:	mov    esp,0xc786182f
  41a0a4:	jp     0x41a0ce
  41a0a6:	mov    ebp,0x704572e6
  41a0ab:	jle    0x41a10a
  41a0ad:	push   cs
  41a0ae:	dec    esp
  41a0af:	data16 hlt 
  41a0b1:	push   ebx
  41a0b2:	inc    esi
  41a0b3:	inc    ecx
  41a0b4:	pop    edx
  41a0b5:	mov    esi,0xc797e85f
  41a0ba:	mov    edi,0x5f5e187f
  41a0bf:	test   eax,0x8f6e821a
  41a0c4:	out    dx,eax
  41a0c5:	loope  0x41a0f0
  41a0c7:	and    al,0xd9
  41a0c9:	xchg   BYTE PTR [edi-0x21],ah
  41a0cc:	adc    al,0xc5
  41a0ce:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a0cf:	cli    
  41a0d0:	retf   0xe602
  41a0d3:	add    DWORD PTR [ebx+0x34],esi
  41a0d6:	dec    ecx
  41a0d7:	cmc    
  41a0d8:	setge  BYTE PTR ds:0x62b37044
  41a0df:	fwait
  41a0e0:	xchg   esi,eax
  41a0e1:	int3   
  41a0e2:	pop    esi
  41a0e3:	push   esp
  41a0e4:	iret   
  41a0e5:	(bad)  
  41a0e6:	dec    edx
  41a0e7:	adc    dh,BYTE PTR [eax+esi*4-0x1422b4a]
  41a0ee:	cmp    ecx,DWORD PTR [ecx-0x62]
  41a0f1:	push   0xf4402ac8
  41a0f6:	add    eax,0x54cf48db
  41a0fb:	daa    
  41a0fc:	xchg   ah,dh
  41a0fe:	call   0xae64b92c
  41a103:	mov    cl,0x12
  41a105:	and    BYTE PTR [eax],dh
  41a107:	push   es
  41a108:	scas   eax,DWORD PTR es:[edi]
  41a109:	mov    cl,BYTE PTR [ebx]
  41a10b:	div    DWORD PTR [esi-0x3]
  41a10e:	mov    ah,0x93
  41a110:	jae    0x41a0b5
  41a112:	push   edx
  41a113:	aam    0x4e
  41a115:	lods   eax,DWORD PTR ds:[esi]
  41a116:	pop    edx
  41a117:	scas   eax,DWORD PTR es:[edi]
  41a118:	pusha  
  41a119:	ret    
  41a11a:	cwde   
  41a11b:	fcom   QWORD PTR [edx+0x79dc9fd1]
  41a121:	xchg   ebp,edi
  41a123:	clc    
  41a124:	clc    
  41a125:	fldenv [esi+0x15405a47]
  41a12b:	and    esi,ecx
  41a12d:	lea    edi,[ecx+0x8bf30bf]
  41a133:	add    ebx,ecx
  41a135:	aad    0x10
  41a137:	inc    esp
  41a138:	sbb    dh,ch
  41a13a:	dec    edx
  41a13b:	pop    edx
  41a13c:	js     0x41a14c
  41a13e:	repz xor BYTE PTR [ecx],dh
  41a141:	sub    ah,BYTE PTR [eax-0x65]
  41a144:	push   es
  41a145:	shr    DWORD PTR [eax-0x461261a1],cl
  41a14b:	sti    
  41a14c:	jbe    0x41a101
  41a14e:	mov    esp,0x4dedf55c
  41a153:	in     eax,dx
  41a154:	or     ebp,esi
  41a156:	xlat   BYTE PTR ds:[ebx]
  41a157:	sbb    al,0x94
  41a159:	add    eax,0xda358b6e
  41a15e:	pop    esi
  41a15f:	mov    DWORD PTR [ecx+0x502ea18e],edx
  41a165:	xor    DWORD PTR [edx+0x36eaca1e],edx
  41a16b:	mov    edx,0x96c0b6c5
  41a170:	ror    BYTE PTR [esi+0xe19bd5b],cl
  41a176:	mov    ds:0x332351b6,al
  41a17b:	imul   ebx,DWORD PTR [ebp-0x45],0x24
  41a17f:	test   BYTE PTR [ebp+0x1d],dl
  41a182:	push   edx
  41a183:	lock pusha 
  41a185:	cdq    
  41a186:	(bad)  
  41a187:	outs   dx,BYTE PTR ds:[esi]
  41a188:	shl    ah,cl
  41a18a:	and    DWORD PTR [ecx-0x16b6a116],ebx
  41a190:	mov    eax,ds:0x93ef73bf
  41a195:	data16 mov bh,0xbc
  41a198:	fsubr  QWORD PTR [edi+edi*1]
  41a19b:	xor    al,0xf5
  41a19d:	test   DWORD PTR [edx-0x1cadc072],edx
  41a1a3:	dec    ecx
  41a1a4:	adc    DWORD PTR [eax+0x52ee9500],esi
  41a1aa:	in     al,0xe3
  41a1ac:	mov    esp,0x64a886cd
  41a1b1:	dec    ecx
  41a1b2:	mov    ds:0x34f98be9,eax
  41a1b7:	jnp    0x41a1da
  41a1b9:	adc    BYTE PTR [ecx],al
  41a1bb:	xor    BYTE PTR [esi+esi*4+0x1d],bl
  41a1bf:	sub    bh,BYTE PTR [eax]
  41a1c1:	add    cl,bh
  41a1c3:	or     al,0x55
  41a1c5:	out    0xa0,eax
  41a1c7:	shl    BYTE PTR [ebp-0x36],cl
  41a1ca:	xchg   DWORD PTR [ebx],ebx
  41a1cc:	ror    BYTE PTR [ebx+0x242f3de8],cl
  41a1d2:	fwait
  41a1d3:	mov    ebp,0x10623f88
  41a1d8:	ins    BYTE PTR es:[edi],dx
  41a1d9:	es inc edi
  41a1db:	test   DWORD PTR [esi+eax*8],edi
  41a1de:	dec    edi
  41a1df:	xlat   BYTE PTR es:[ebx]
  41a1e1:	mov    eax,0xcd626bb9
  41a1e6:	dec    eax
  41a1e7:	pusha  
  41a1e8:	or     edi,DWORD PTR [ebx-0x53]
  41a1eb:	cmp    DWORD PTR [eax-0x5f],esp
  41a1ee:	fadd   QWORD PTR [edi+0x76]
  41a1f1:	sub    BYTE PTR [edx],ch
  41a1f3:	jae    0x41a1f3
  41a1f5:	lea    edi,[esi+eax*4+0x35]
  41a1f9:	rol    DWORD PTR [ebx],0x64
  41a1fc:	xor    DWORD PTR ds:0xfe8b24dd,esp
  41a202:	jne    0x41a18d
  41a204:	int3   
  41a205:	retf   0xfe6a
  41a208:	clc    
  41a209:	mov    dl,0xf7
  41a20b:	mov    al,ds:0x5aa52614
  41a210:	ins    DWORD PTR es:[edi],dx
  41a211:	(bad)  
  41a212:	cwde   
  41a213:	mov    bh,0xe6
  41a215:	clc    
  41a216:	sahf   
  41a217:	xor    al,0x3b
  41a219:	add    BYTE PTR [ecx],al
  41a21b:	test   DWORD PTR [ebp+0x1d7a657c],0x922eab02
  41a225:	test   al,0xc5
  41a227:	out    0xc8,al
  41a229:	mov    WORD PTR [ecx],?
  41a22b:	push   ss
  41a22c:	rcl    DWORD PTR [ecx+ecx*8+0x4e],cl
  41a230:	inc    esi
  41a231:	jb     0x41a208
  41a233:	push   ebp
  41a234:	es inc ebx
  41a236:	inc    edx
  41a237:	(bad)  [esi-0x3ae8f76f]
  41a23d:	sub    al,0x7a
  41a23f:	out    dx,eax
  41a240:	push   0xc5e4ff36
  41a245:	cld    
  41a246:	scas   eax,DWORD PTR es:[edi]
  41a247:	retf   
  41a248:	in     eax,dx
  41a249:	sub    eax,0xcc3af11f
  41a24e:	adc    BYTE PTR [edi-0x41433653],0x7c
  41a255:	sbb    dl,ch
  41a257:	stc    
  41a258:	mov    eax,0x8dabb0c5
  41a25d:	leave  
  41a25e:	(bad)  
  41a25f:	sbb    eax,0xa71a19c
  41a264:	mov    bl,0x60
  41a266:	inc    esp
  41a267:	jle    0x41a275
  41a269:	in     al,0xd5
  41a26b:	in     eax,dx
  41a26c:	sbb    bh,BYTE PTR [eax-0x29]
  41a26f:	bound  edx,QWORD PTR [ecx+0x7f]
  41a272:	add    DWORD PTR [ebx-0x7819fc2b],edi
  41a278:	js     0x41a251
  41a27a:	fsubr  DWORD PTR [ebx+eiz*4-0x24091408]
  41a281:	popf   
  41a282:	cmp    eax,0x3e0484f4
  41a287:	int    0xad
  41a289:	fstp   TBYTE PTR [ebp-0x5f903ca1]
  41a28f:	and    eax,0x4cff33bd
  41a294:	dec    esi
  41a295:	inc    ecx
  41a296:	push   es
  41a297:	ret    
  41a298:	(bad)  
  41a299:	jge    0x41a2ed
  41a29b:	inc    ebp
  41a29c:	cmp    eax,0x1a8fa7ce
  41a2a1:	push   eax
  41a2a2:	dec    esi
  41a2a3:	push   ebx
  41a2a4:	shr    al,0x1
  41a2a7:	mov    al,BYTE PTR [eax]
  41a2a9:	mov    ds:0xaf8b1a27,eax
  41a2ae:	rcr    DWORD PTR [edx],1
  41a2b0:	fmulp  st(5),st
  41a2b2:	add    dh,BYTE PTR [ecx]
  41a2b4:	and    DWORD PTR [edx+0x12],esp
  41a2b7:	fstp   TBYTE PTR [edx+0x78878305]
  41a2bd:	fmul   DWORD PTR [eax]
  41a2bf:	dec    ah
  41a2c1:	loope  0x41a282
  41a2c3:	inc    edi
  41a2c4:	js     0x41a2ca
  41a2c6:	jl     0x41a2dc
  41a2c8:	sub    eax,DWORD PTR [ecx]
  41a2ca:	ror    cl,0x5d
  41a2cd:	clc    
  41a2ce:	mov    ebp,0x966df383
  41a2d3:	sbb    eax,DWORD PTR [ebx-0x9e9b479]
  41a2d9:	fadd   DWORD PTR [ebx+0x4f89ea6b]
  41a2df:	dec    ebp
  41a2e0:	jae    0x41a323
  41a2e2:	cmp    eax,0x2dff8871
  41a2e7:	mov    esp,0xbf7fb83f
  41a2ec:	icebp  
  41a2ed:	ins    DWORD PTR es:[edi],dx
  41a2ee:	mov    esp,0x13e8df9b
  41a2f3:	imul   ecx,DWORD PTR [ecx+edx*2-0x12],0xffffff9a
  41a2f8:	imul   eax,esi,0x57
  41a2fb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a2fc:	dec    esi
  41a2fd:	fcmovu st,st(7)
  41a2ff:	scas   eax,DWORD PTR es:[edi]
  41a300:	push   ebp
  41a301:	cmp    al,0x4b
  41a303:	cs (bad) 
  41a306:	xchg   edi,eax
  41a307:	fdivr  DWORD PTR [esi-0x42]
  41a30a:	push   ss
  41a30b:	xor    edi,DWORD PTR [ebx]
  41a30d:	(bad)  
  41a30e:	lock fisubr WORD PTR [ebp+0x11a807c4]
  41a315:	xor    eax,0xfd1515eb
  41a31a:	xchg   BYTE PTR [ebx-0x3a],dl
  41a31d:	inc    ebx
  41a31e:	(bad)
  41a321:	shl    DWORD PTR [esi+0x2a319a6],cl
  41a327:	js     0x41a31d
  41a329:	jp     0x41a36e
  41a32b:	inc    ebp
  41a32c:	daa    
  41a32d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a32e:	jbe    0x41a33c
  41a330:	imul   ebp,DWORD PTR [edx],0xffffff9d
  41a333:	sub    al,0x74
  41a335:	jne    0x41a316
  41a337:	lea    esi,ds:0xdd9d0a73
  41a33d:	aad    0xd4
  41a33f:	cwde   
  41a340:	add    al,0x19
  41a342:	cmp    BYTE PTR [ecx+0x3f8ebcbe],dl
  41a348:	adc    ch,BYTE PTR [eax-0x7d36bde3]
  41a34e:	and    cl,BYTE PTR [esi-0x51]
  41a351:	pop    es
  41a352:	loopne 0x41a33c
  41a354:	pop    ds
  41a355:	test   ebx,0x6231ca94
  41a35b:	mov    eax,ds:0xbd2d204f
  41a360:	adc    ebp,0xaa1a7e5c
  41a366:	sub    BYTE PTR [eax+0x48],0x88
  41a36a:	or     bl,ch
  41a36c:	fwait
  41a36d:	mov    BYTE PTR [eax],dl
  41a36f:	dec    eax
  41a370:	xchg   ebp,eax
  41a371:	int3   
  41a372:	xor    DWORD PTR [ebp+0x2ab7f01a],ebx
  41a378:	into   
  41a379:	ret    0x1fce
  41a37c:	jo     0x39970a62
  41a382:	shl    BYTE PTR [ebp-0x37],cl
  41a385:	jne    0x41a316
  41a387:	bound  ebx,QWORD PTR [edi+esi*2-0x70]
  41a38b:	xchg   esp,eax
  41a38c:	cld    
  41a38d:	pop    ss
  41a38e:	pop    ebp
  41a38f:	push   ds
  41a390:	inc    edx
  41a391:	xchg   ecx,eax
  41a392:	fwait
  41a393:	or     DWORD PTR [ecx+0x44630665],ebx
  41a399:	jnp    0x41a320
  41a39b:	sub    esp,ebx
  41a39d:	retf   
  41a39e:	fwait
  41a39f:	dec    esi
  41a3a0:	mov    ecx,0xc2a20083
  41a3a5:	or     BYTE PTR [ebp-0x19136cf3],dl
  41a3ab:	loopne 0x41a367
  41a3ad:	int3   
  41a3ae:	aad    0xc6
  41a3b0:	enter  0x7190,0x1e
  41a3b4:	(bad)  
  41a3b5:	sub    DWORD PTR [ecx],ecx
  41a3b7:	xor    ch,al
  41a3b9:	es pop ss
  41a3bb:	icebp  
  41a3bc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a3bd:	or     eax,DWORD PTR [edx]
  41a3bf:	sbb    ebx,DWORD PTR ds:0x17edfbc0
  41a3c5:	ror    BYTE PTR [edx+0x65c70867],cl
  41a3cb:	jne    0x41a3be
  41a3cd:	addr16 sub eax,0x411274a2
  41a3d3:	arpl   WORD PTR [eax+0x58],dx
  41a3d6:	hlt    
  41a3d7:	call   FWORD PTR [edx-0x20]
  41a3da:	push   esp
  41a3db:	xchg   edi,eax
  41a3dc:	dec    eax
  41a3dd:	add    ecx,esi
  41a3df:	test   ebp,esp
  41a3e1:	(bad)  
  41a3e2:	push   ebp
  41a3e3:	add    eax,0x80dd669b
  41a3e8:	add    al,0x4b
  41a3ea:	scas   al,BYTE PTR es:[edi]
  41a3eb:	xor    eax,0x57aa2746
  41a3f0:	out    dx,eax
  41a3f1:	mov    WORD PTR [ecx],gs
  41a3f3:	inc    esp
  41a3f4:	pop    edx
  41a3f5:	sub    edi,ebx
  41a3f7:	cli    
  41a3f8:	aam    0x8e
  41a3fa:	data16 mov ds:0xfa4735c6,al
  41a400:	call   0xbf698186
  41a405:	mov    dl,0xf3
  41a407:	xlat   BYTE PTR ds:[ebx]
  41a408:	out    0xe8,al
  41a40a:	lds    esi,FWORD PTR fs:[edi+0x28]
  41a40e:	fisttp QWORD PTR [esi+0x59]
  41a411:	psraw  mm0,QWORD PTR [esp+eiz*2]
  41a415:	pop    esi
  41a416:	mov    dl,0x96
  41a418:	cwde   
  41a419:	sbb    DWORD PTR [eax-0x5b],esp
  41a41c:	or     BYTE PTR [edx+0x52],ah
  41a41f:	mov    al,0xa2
  41a421:	pop    edi
  41a422:	xchg   BYTE PTR [edi-0x58],al
  41a425:	adc    al,dl
  41a427:	cmp    al,0xf6
  41a429:	les    eax,FWORD PTR [esi+0x28]
  41a42c:	(bad)  
  41a42e:	sbb    dh,dl
  41a430:	test   eax,0x4e257571
  41a435:	cwde   
  41a436:	sub    DWORD PTR [ecx-0x39],esp
  41a439:	test   eax,0x57c60aa7
  41a43e:	shr    cl,1
  41a440:	push   ds
  41a441:	sub    eax,0x7e4cdcf7
  41a446:	(bad)  
  41a447:	and    eax,0xd5b047ef
  41a44c:	xchg   DWORD PTR [ecx+ebx*8],edx
  41a44f:	test   ecx,edx
  41a451:	sbb    eax,0xe3f20e
  41a456:	add    al,0x1
  41a458:	cmp    eax,0xc2f9b786
  41a45d:	cs cld 
  41a45f:	and    eax,0xe7c5eab6
  41a464:	lods   al,BYTE PTR ds:[esi]
  41a465:	out    0x12,al
  41a467:	xchg   ebx,eax
  41a468:	xor    dl,dl
  41a46a:	or     BYTE PTR [esi+0x1199dcba],dh
  41a470:	add    DWORD PTR [edx],edi
  41a472:	xchg   BYTE PTR [esi+0x39f3cbaa],ch
  41a478:	(bad)  [esi-0x4d133d7e]
  41a47e:	dec    ebp
  41a47f:	int3   
  41a480:	imul   BYTE PTR [edi+0xcf5686f]
  41a486:	jg     0x41a43f
  41a488:	push   cs
  41a489:	in     eax,0x5d
  41a48b:	jg     0x41a461
  41a48d:	imul   DWORD PTR [eax]
  41a48f:	add    al,0xbe
  41a491:	sbb    edi,DWORD PTR [eax+0x456161ab]
  41a497:	into   
  41a498:	sbb    al,0x58
  41a49a:	rcl    DWORD PTR [ebx-0x1059b352],cl
  41a4a0:	push   eax
  41a4a1:	dec    edx
  41a4a2:	mov    esp,0x47ab2bd5
  41a4a7:	pop    eax
  41a4a8:	xchg   BYTE PTR [di],dh
  41a4ab:	or     DWORD PTR [edi-0x45bae6a4],ecx
  41a4b1:	adc    dh,bl
  41a4b3:	callw  0x80b8
  41a4b7:	outs   dx,DWORD PTR ds:[esi]
  41a4b8:	out    0x5d,eax
  41a4ba:	stos   DWORD PTR es:[edi],eax
  41a4bb:	adc    eax,0xd9352a18
  41a4c0:	xor    al,0x1e
  41a4c2:	jge    0x41a4fc
  41a4c4:	sbb    eax,0xda7b16a1
  41a4c9:	ds inc ebx
  41a4cb:	mov    eax,ds:0x20931b45
  41a4d0:	cwde   
  41a4d1:	cmove  edx,edi
  41a4d4:	rcl    BYTE PTR [edx-0x4376468b],cl
  41a4da:	lea    esp,[eax-0x29]
  41a4dd:	pushf  
  41a4de:	pop    esi
  41a4df:	hlt    
  41a4e0:	lea    esi,[edi]
  41a4e2:	push   0x17
  41a4e4:	daa    
  41a4e5:	(bad)  
  41a4e7:	loopne 0x41a4b3
  41a4e9:	pop    ebp
  41a4ea:	test   BYTE PTR [edi+eiz*4],al
  41a4ed:	xor    al,0x40
  41a4ef:	rcl    DWORD PTR [ebx],cl
  41a4f1:	sub    ebp,ecx
  41a4f3:	or     eax,0x5da632ab
  41a4f8:	clc    
  41a4f9:	rcr    DWORD PTR [ebp-0x44],1
  41a4fc:	cmp    edi,DWORD PTR [edx]
  41a4fe:	pop    ss
  41a4ff:	dec    esi
  41a500:	xor    eax,0x730a7c2d
  41a505:	cmp    al,0xc7
  41a507:	jmp    0x15e1:0xe86070ed
  41a50e:	mov    ebp,0x32f6638b
  41a513:	sti    
  41a514:	xchg   esi,eax
  41a515:	push   eax
  41a516:	shl    BYTE PTR [ecx+esi*2+0x57],cl
  41a51a:	les    esp,FWORD PTR [esi-0x6c]
  41a51d:	lods   eax,DWORD PTR ds:[esi]
  41a51e:	jmp    0xc1801989
  41a523:	or     edx,eax
  41a525:	mov    ah,0xcd
  41a527:	pop    es
  41a528:	mov    ch,0x99
  41a52a:	iret   
  41a52b:	xor    BYTE PTR [edi+0x60],dl
  41a52e:	fadd   st(7),st
  41a530:	out    dx,eax
  41a531:	lds    esp,FWORD PTR [ebp-0x21]
  41a534:	cs cmc 
  41a536:	xchg   ebx,eax
  41a537:	jmp    0x68c1:0xc62b9a69
  41a53e:	stos   BYTE PTR es:[edi],al
  41a53f:	mov    ebp,0x33556835
  41a544:	sti    
  41a545:	or     al,BYTE PTR [ecx]
  41a547:	call   0xb584:0xbacd5a39
  41a54e:	xchg   edx,eax
  41a54f:	fild   QWORD PTR [eax-0x101efd89]
  41a555:	cmp    BYTE PTR [ecx-0x63],0xc6
  41a559:	inc    eax
  41a55a:	sbb    eax,0xf7fc887f
  41a55f:	dec    esp
  41a560:	popf   
  41a561:	push   0x6b6f351f
  41a566:	(bad)  
  41a567:	pop    ebp
  41a568:	stos   BYTE PTR es:[edi],al
  41a569:	aam    0x34
  41a56b:	fldenv [ecx]
  41a56d:	aaa    
  41a56e:	or     dh,BYTE PTR [eax+0xe]
  41a571:	adc    DWORD PTR [ecx+0x76351ebd],ecx
  41a577:	not    BYTE PTR [esi-0x656ec72f]
  41a57d:	push   ds
  41a57e:	push   es
  41a57f:	and    eax,0x81e21a40
  41a584:	xchg   edx,eax
  41a585:	fist   DWORD PTR [esi+0x527d677b]
  41a58b:	pushf  
  41a58c:	repnz mov cl,0xd5
  41a58f:	xchg   BYTE PTR [esi-0x1a],bl
  41a592:	clc    
  41a593:	adc    esp,0x72
  41a596:	retf   
  41a597:	add    BYTE PTR [ecx+ecx*4-0x7c],dh
  41a59b:	xor    dl,bh
  41a59d:	xchg   DWORD PTR [esi-0x36f5af43],ebp
  41a5a3:	mov    eax,ds:0xbb1f1fbc
  41a5a8:	ins    BYTE PTR es:[edi],dx
  41a5a9:	mov    WORD PTR [ebx-0x78],fs
  41a5ac:	sbb    al,0x7e
  41a5ae:	aad    0x7c
  41a5b0:	test   ebp,eax
  41a5b2:	sbb    eax,0xf9ad2114
  41a5b7:	repnz mov al,0x2f
  41a5ba:	clc    
  41a5bb:	int    0x5a
  41a5bd:	out    dx,eax
  41a5be:	add    eax,0x318201f2
  41a5c3:	inc    eax
  41a5c4:	lods   al,BYTE PTR ds:[esi]
  41a5c5:	dec    cl
  41a5c7:	out    0x2d,eax
  41a5c9:	fsub   QWORD PTR [ecx-0x1c]
  41a5cc:	fisubr DWORD PTR [ebp+edi*2-0x77]
  41a5d0:	pop    ebx
  41a5d1:	push   edi
  41a5d2:	xchg   BYTE PTR [ebx],ah
  41a5d4:	loope  0x41a625
  41a5d6:	daa    
  41a5d7:	outs   dx,DWORD PTR ds:[esi]
  41a5d8:	adc    al,0xa5
  41a5da:	push   es
  41a5db:	jmp    0xa49c:0xa90a98d2
  41a5e2:	sbb    bl,0x3e
  41a5e5:	dec    ebp
  41a5e6:	mov    ch,0x53
  41a5e8:	arpl   WORD PTR [ebp-0x8],bp
  41a5eb:	les    esi,FWORD PTR [eax-0x49b44e3c]
  41a5f1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a5f2:	add    edx,DWORD PTR ds:0x8162afc4
  41a5f8:	mov    ebp,0x58d5fcbc
  41a5fd:	jg     0x41a66b
  41a5ff:	lods   eax,DWORD PTR ds:[esi]
  41a600:	mov    esi,0xf39b0698
  41a605:	xlat   BYTE PTR ds:[ebx]
  41a606:	dec    ebp
  41a607:	scas   al,BYTE PTR es:[edi]
  41a608:	pop    ds
  41a609:	lahf   
  41a60a:	cmp    ebx,esi
  41a60c:	push   edi
  41a60d:	cwde   
  41a60e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a60f:	test   al,0x39
  41a611:	vpmacsdd ymm6,ymm2,YMMWORD PTR [eax-0x547fd777],ymm3
  41a61b:	icebp  
  41a61c:	push   edx
  41a61d:	mov    bh,0xf5
  41a61f:	shl    DWORD PTR ds:0x2f360080,cl
  41a625:	push   ebx
  41a626:	(bad)  
  41a628:	jae    0x41a5c4
  41a62a:	mov    esi,0xe6f194c2
  41a62f:	scas   al,BYTE PTR es:[edi]
  41a630:	xchg   ecx,eax
  41a631:	cmc    
  41a632:	ins    DWORD PTR es:[edi],dx
  41a633:	pop    ds
  41a634:	aaa    
  41a635:	push   edx
  41a636:	shr    BYTE PTR ds:[edi+0x57],cl
  41a63a:	sub    cl,BYTE PTR [esi+0xf]
  41a63d:	lds    esi,FWORD PTR [ecx+0x2e]
  41a640:	pop    edi
  41a641:	(bad)  
  41a642:	xor    DWORD PTR [esp+eax*2],esp
  41a645:	mov    edx,0x753e84c4
  41a64a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a64b:	cmp    eax,0x6d002160
  41a650:	pusha  
  41a651:	loopne 0x41a61e
  41a653:	iret   
  41a654:	sub    eax,DWORD PTR [ecx+eiz*8+0x55fdf715]
  41a65b:	hlt    
  41a65c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a65d:	shr    BYTE PTR [ebx],cl
  41a65f:	sub    eax,0x5ce5f606
  41a664:	cmp    bl,BYTE PTR ds:0xe99b8644
  41a66a:	sbb    al,BYTE PTR [esi-0x1]
  41a66d:	and    esp,DWORD PTR [esi-0xe]
  41a670:	outs   dx,BYTE PTR ds:[esi]
  41a671:	mov    edi,0x2ec00f6e
  41a676:	inc    ebx
  41a677:	fst    QWORD PTR [eax-0x4b]
  41a67a:	push   ss
  41a67b:	dec    edx
  41a67c:	mov    es,WORD PTR ds:0x32110888
  41a682:	add    DWORD PTR [ebx],ebx
  41a684:	sbb    esp,DWORD PTR [ecx]
  41a686:	scas   eax,DWORD PTR es:[edi]
  41a687:	add    ecx,edi
  41a689:	stos   BYTE PTR es:[edi],al
  41a68a:	pop    ds
  41a68b:	push   0x96f17f38
  41a690:	pop    edx
  41a691:	dec    edi
  41a692:	cmp    BYTE PTR [esi+0x63eb7547],cl
  41a698:	inc    ebx
  41a699:	jae    0x41a644
  41a69b:	mov    ah,0x2c
  41a69d:	push   ecx
  41a69e:	repz jno 0x41a696
  41a6a1:	mov    ecx,0x53ffdd01
  41a6a6:	stos   DWORD PTR es:[edi],eax
  41a6a7:	inc    ecx
  41a6a8:	jecxz  0x41a656
  41a6aa:	data16 jae 0x41a63c
  41a6ad:	adc    ch,dl
  41a6af:	(bad)  
  41a6b1:	in     al,0xc3
  41a6b3:	jg     0x41a6be
  41a6b5:	mov    esi,eax
  41a6b7:	fsubr  QWORD PTR [edi]
  41a6b9:	(bad)  
  41a6ba:	aas    
  41a6bb:	loop   0x41a722
  41a6bd:	ins    BYTE PTR es:[edi],dx
  41a6be:	je     0x41a6d5
  41a6c0:	xor    al,0x15
  41a6c2:	mov    DWORD PTR [esi],edi
  41a6c4:	add    BYTE PTR [edi],al
  41a6c6:	sti    
  41a6c7:	jns    0x41a6af
  41a6c9:	cmp    DWORD PTR [edi+0x67959219],ecx
  41a6cf:	scas   al,BYTE PTR es:[edi]
  41a6d0:	inc    esi
  41a6d1:	icebp  
  41a6d2:	cmp    BYTE PTR ds:0x26b16e8d,0xb6
  41a6d9:	pop    edx
  41a6da:	mov    dh,0x4c
  41a6dc:	push   es
  41a6dd:	xchg   esi,eax
  41a6de:	sar    BYTE PTR [ecx+0x60],cl
  41a6e1:	push   ebx
  41a6e2:	rol    BYTE PTR [ebp-0x264cedff],1
  41a6e8:	outs   dx,DWORD PTR ds:[esi]
  41a6e9:	mov    DWORD PTR [ebx-0x31bc3c9b],edi
  41a6ef:	bound  ebp,QWORD PTR ds:0x427b2cde
  41a6f5:	or     DWORD PTR [edx],eax
  41a6f7:	fs mov ecx,0x15ea4591
  41a6fd:	sbb    BYTE PTR [ebp+0x2586bd30],0xf5
  41a704:	mov    ds:0x296a5f37,al
  41a709:	daa    
  41a70a:	jecxz  0x41a77f
  41a70c:	(bad)  
  41a70d:	retf   0x4695
  41a710:	scas   al,BYTE PTR es:[edi]
  41a711:	jecxz  0x41a69c
  41a713:	(bad)  
  41a714:	(bad)  
  41a715:	sbb    cl,BYTE PTR [ecx-0x2d]
  41a718:	sub    bl,0xa6
  41a71b:	jae    0x41a6e6
  41a71d:	inc    esi
  41a71e:	jmp    0xcab21d8a
  41a723:	repz inc edx
  41a725:	cmp    bh,BYTE PTR [ebp-0x7986671b]
  41a72b:	add    ch,BYTE PTR [eax-0x7fa137ff]
  41a731:	mov    bl,0x55
  41a733:	and    esi,DWORD PTR [edx]
  41a735:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a736:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a737:	mov    esi,0x39316f8a
  41a73c:	inc    esi
  41a73d:	xchg   edi,eax
  41a73e:	imul   edi,DWORD PTR [eax+0x3c],0x2a
  41a742:	enter  0x9a3b,0x50
  41a746:	arpl   WORD PTR [esi+0x64229a7f],si
  41a74c:	int3   
  41a74d:	jmp    0x41a78e
  41a74f:	(bad)  
  41a751:	js     0x41a78c
  41a753:	inc    ebx
  41a754:	push   ebx
  41a755:	and    al,0xbb
  41a757:	xor    DWORD PTR [ecx-0x51],edi
  41a75a:	rol    BYTE PTR [eax],0x92
  41a75d:	mov    al,ds:0x14810858
  41a762:	loop   0x41a765
  41a764:	pop    edx
  41a765:	lahf   
  41a766:	mov    bl,0x1e
  41a768:	jmp    DWORD PTR [edi+0x3501f1db]
  41a76e:	test   al,0x49
  41a770:	mov    edi,0xfd1a1ecf
  41a775:	test   DWORD PTR [esi],eax
  41a777:	pop    esi
  41a778:	mov    bh,0x49
  41a77a:	shl    DWORD PTR [edi],cl
  41a77c:	hlt    
  41a77d:	js     0x41a75e
  41a77f:	sub    dl,BYTE PTR [ebx+0x1c798935]
  41a785:	repz iret 
  41a787:	test   cl,0x86
  41a78a:	pop    ebx
  41a78b:	rcl    BYTE PTR [esi],cl
  41a78d:	stc    
  41a78e:	add    BYTE PTR [edi+0x49],0x6f
  41a792:	fnstenv [ebx]
  41a794:	jns    0x41a762
  41a796:	ftst   
  41a798:	jae    0x41a7fa
  41a79a:	and    BYTE PTR [ecx+0x3d],0x56
  41a79e:	lahf   
  41a79f:	cmp    edx,DWORD PTR [esi]
  41a7a1:	hlt    
  41a7a2:	mov    al,ds:0xdd2406d3
  41a7a7:	and    ebx,ecx
  41a7a9:	(bad)  
  41a7aa:	popf   
  41a7ab:	mov    esi,0x4da44cab
  41a7b0:	lods   eax,DWORD PTR ds:[esi]
  41a7b1:	int    0x35
  41a7b3:	ja     0x41a794
  41a7b5:	and    al,0x5b
  41a7b7:	jae    0x41a7af
  41a7b9:	leave  
  41a7ba:	lods   eax,DWORD PTR ds:[esi]
  41a7bb:	repnz pop ecx
  41a7bd:	dec    ebx
  41a7be:	add    cl,BYTE PTR [esi-0x58d40d98]
  41a7c4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a7c5:	ficom  DWORD PTR [esi]
  41a7c7:	mov    edx,0xde02a34
  41a7cc:	(bad)  
  41a7cd:	sar    DWORD PTR [eax+eiz*2-0x30],1
  41a7d1:	cdq    
  41a7d2:	data16 movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a7d4:	inc    ecx
  41a7d5:	jnp    0x41a81a
  41a7d7:	retf   
  41a7d8:	lods   eax,DWORD PTR ds:[esi]
  41a7d9:	add    edi,eax
  41a7db:	js     0x41a82e
  41a7dd:	adc    ebx,DWORD PTR [eax-0x1]
  41a7e0:	mov    ah,0xa2
  41a7e2:	ins    DWORD PTR es:[edi],dx
  41a7e3:	jnp    0x41a82c
  41a7e5:	cwde   
  41a7e6:	imul   edi,DWORD PTR [eax-0x31],0xe556abca
  41a7ed:	xor    ah,0xef
  41a7f0:	popa   
  41a7f1:	adc    eax,0x8e1ad8c7
  41a7f6:	xchg   esi,eax
  41a7f7:	and    dl,dh
  41a7f9:	neg    DWORD PTR [eax+0x3e]
  41a7fc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a7fd:	int3   
  41a7fe:	out    dx,al
  41a7ff:	test   DWORD PTR gs:[ebp+0x33e3f236],ecx
  41a806:	outs   dx,DWORD PTR ds:[esi]
  41a807:	mov    al,0x21
  41a809:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a80a:	call   0xd412bacd
  41a80f:	jae    0x41a862
  41a811:	out    0x18,al
  41a813:	mov    ds:0xd2c2c6b4,al
  41a818:	jmp    0x41a814
  41a81a:	adc    DWORD PTR [edx-0x69f2d99f],edi
  41a820:	mov    ch,al
  41a822:	xchg   esp,eax
  41a823:	add    ecx,DWORD PTR [ebx-0x7b7771d6]
  41a829:	lods   eax,DWORD PTR ds:[esi]
  41a82a:	hlt    
  41a82b:	mov    eax,ds:0xc99f1c35
  41a830:	jne    0x41a85f
  41a832:	cmp    bh,BYTE PTR [edi]
  41a834:	sub    edi,esp
  41a836:	mov    al,0xe6
  41a838:	jl     0x41a7ec
  41a83a:	into   
  41a83b:	cwde   
  41a83c:	ins    BYTE PTR es:[edi],dx
  41a83d:	cmp    eax,0xe0b2c2b2
  41a842:	gs dec ecx
  41a844:	and    BYTE PTR [edi-0x3d],ch
  41a847:	push   es
  41a848:	retf   0x8f7b
  41a84b:	je     0x41a804
  41a84d:	and    ebp,ebx
  41a84f:	mov    cl,0x4e
  41a851:	aam    0x5e
  41a853:	fisub  WORD PTR [eax-0x1d]
  41a856:	pop    ds
  41a857:	aaa    
  41a858:	fsubr  QWORD PTR ds:[ebx]
  41a85b:	lods   eax,DWORD PTR ds:[esi]
  41a85c:	in     al,dx
  41a85d:	mov    esp,0xbfb9cb2
  41a862:	enter  0x604b,0xef
  41a866:	inc    ebx
  41a867:	in     eax,dx
  41a868:	aad    0xc3
  41a86a:	pop    ebx
  41a86b:	es repnz sbb al,0x4b
  41a86f:	sub    DWORD PTR [ebx+0x49],esp
  41a872:	push   0xef4c4257
  41a877:	pop    edi
  41a878:	sbb    BYTE PTR [edx-0x26],0x29
  41a87c:	mov    edx,0x15be44f2
  41a881:	in     eax,0xb0
  41a883:	adc    DWORD PTR [ebp-0x5b],0x1551c3af
  41a88a:	adc    eax,0x95438560
  41a88f:	mov    eax,0xe7a846f8
  41a894:	lock push ebx
  41a896:	jnp    0x41a87d
  41a898:	xchg   DWORD PTR [edx+0x25],edx
  41a89b:	jmp    0x41a8c0
  41a89d:	rol    DWORD PTR [eax],cl
  41a89f:	mov    edx,0x15faa0cb
  41a8a4:	and    BYTE PTR [eax+0x409a551d],0x6b
  41a8ab:	push   ebp
  41a8ac:	add    cl,BYTE PTR [esi+edi*1-0x71521965]
  41a8b3:	mov    edi,0x7df174e9
  41a8b8:	xchg   ecx,eax
  41a8b9:	(bad)  
  41a8ba:	out    0x92,al
  41a8bc:	xchg   ebx,edx
  41a8be:	(bad)  [eax-0x64]
  41a8c1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a8c2:	dec    esi
  41a8c3:	xchg   DWORD PTR [ecx+0x28],ecx
  41a8c6:	or     BYTE PTR [esi-0x34],0x28
  41a8ca:	adc    DWORD PTR [eax+0x23],ebx
  41a8cd:	jno    0x41a869
  41a8cf:	stc    
  41a8d0:	adc    eax,0xfea626d3
  41a8d5:	mov    eax,0x3c3bb868
  41a8da:	ret    
  41a8db:	call   FWORD PTR [edi-0x5c]
  41a8de:	mov    BYTE PTR [eax+0x57373477],0x97
  41a8e5:	cmp    DWORD PTR [ecx+esi*1-0x7d],edx
  41a8e9:	scas   al,BYTE PTR es:[edi]
  41a8ea:	or     eax,0xfd2a1c47
  41a8ef:	dec    eax
  41a8f0:	add    dl,BYTE PTR [ecx+0x601adff3]
  41a8f6:	jae    0x41a92f
  41a8f8:	int    0x6c
  41a8fa:	jle    0x41a8a0
  41a8fc:	pushf  
  41a8fd:	ins    BYTE PTR es:[edi],dx
  41a8fe:	xchg   ecx,eax
  41a8ff:	pop    ss
  41a900:	pusha  
  41a901:	sub    BYTE PTR [esi+0x7d],0x6a
  41a905:	fisubr WORD PTR [ebx+0x3f0bae5d]
  41a90b:	int    0x1d
  41a90d:	ins    DWORD PTR es:[edi],dx
  41a90e:	aam    0xb5
  41a910:	pop    ebp
  41a911:	xor    al,0x82
  41a913:	mov    edx,0x665a7521
  41a918:	and    DWORD PTR [esi-0x394a1714],eax
  41a91e:	shl    DWORD PTR [eax-0x6cb77b04],0x8a
  41a925:	into   
  41a926:	outs   dx,DWORD PTR ds:[esi]
  41a927:	mov    ds:0x26e1ec57,al
  41a92c:	pop    es
  41a92d:	aad    0x74
  41a92f:	jae    0x41a95e
  41a931:	xor    edi,esp
  41a933:	pop    ds
  41a934:	jnp    0x41a977
  41a936:	mov    WORD PTR [ebx-0x70522e7a],?
  41a93c:	leave  
  41a93d:	push   eax
  41a93e:	das    
  41a93f:	arpl   WORD PTR [esi],ax
  41a941:	popf   
  41a942:	mov    dh,0x48
  41a944:	adc    BYTE PTR [edx+0x3da9755b],dl
  41a94a:	and    eax,ebx
  41a94c:	mov    ah,0xac
  41a94e:	add    DWORD PTR [eax-0x16ead7ea],ebp
  41a954:	xchg   esi,eax
  41a955:	call   0xd621:0x772e7f45
  41a95c:	mov    dh,0x43
  41a95e:	sti    
  41a95f:	pop    edx
  41a960:	enter  0xe9c6,0xfa
  41a964:	out    0x1e,al
  41a966:	mov    edx,0xfd1d008a
  41a96b:	mov    ds,WORD PTR [ebx]
  41a96d:	stc    
  41a96e:	sub    edx,DWORD PTR [eax]
  41a970:	push   edx
  41a971:	inc    edx
  41a972:	std    
  41a973:	or     cl,BYTE PTR [ebx+0x4c]
  41a976:	out    0xa8,al
  41a978:	dec    ebp
  41a979:	int3   
  41a97a:	repnz adc al,0x48
  41a97d:	sub    al,0xaa
  41a97f:	in     eax,dx
  41a980:	call   0x46db:0xe4004059
  41a987:	iret   
  41a988:	sbb    al,0xa3
  41a98a:	cld    
  41a98b:	and    eax,0x4cbff218
  41a990:	pop    eax
  41a991:	add    DWORD PTR [eax+0x6e94692e],edi
  41a997:	mov    bh,0x7b
  41a999:	adc    BYTE PTR [edi],ah
  41a99b:	retf   
  41a99c:	jecxz  0x41a933
  41a99e:	adc    DWORD PTR [esi-0x225cee46],ecx
  41a9a4:	out    dx,al
  41a9a5:	gs stos BYTE PTR es:[edi],al
  41a9a7:	sbb    DWORD PTR [edx-0x2a],esi
  41a9aa:	push   edi
  41a9ab:	lahf   
  41a9ac:	iret   
  41a9ad:	loope  0x41a9ab
  41a9af:	call   0xda5a:0xf188cce9
  41a9b6:	mov    ds:0xa3989c7a,eax
  41a9bb:	adc    esi,esi
  41a9bd:	adc    al,BYTE PTR [edi+ebp*2]
  41a9c0:	js     0x41aa2b
  41a9c2:	js     0x41a985
  41a9c4:	add    BYTE PTR [eax+0x20971659],0xe9
  41a9cb:	push   0xfefadf2c
  41a9d0:	cmp    ebp,0xfffffff4
  41a9d3:	ins    BYTE PTR es:[edi],dx
  41a9d4:	adc    eax,DWORD PTR [edx+0x40a1ddfe]
  41a9da:	out    dx,al
  41a9db:	push   edx
  41a9dc:	int3   
  41a9dd:	pop    ss
  41a9de:	inc    ebx
  41a9df:	mov    edi,0xe8ecc9ed
  41a9e4:	jge    0x41aa08
  41a9e6:	inc    edi
  41a9e7:	mov    ?,ecx
  41a9e9:	push   edx
  41a9ea:	sub    BYTE PTR [edi+0x53],0x99
  41a9ee:	push   0xfffffff2
  41a9f0:	mov    eax,0xfd861234
  41a9f5:	adc    esi,esi
  41a9f7:	shl    BYTE PTR [edx+0x1ea5149a],0x39
  41a9fe:	pop    ecx
  41a9ff:	ret    0x8601
  41aa02:	jl     0x41a9d9
  41aa04:	pop    esi
  41aa05:	in     al,dx
  41aa06:	push   esi
  41aa07:	clc    
  41aa08:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41aa09:	loopne 0x41a9d5
  41aa0b:	pop    ebp
  41aa0c:	sbb    bl,BYTE PTR [edx+0x21]
  41aa0f:	addr16 adc al,0x57
  41aa12:	push   es
  41aa13:	mov    esp,0x91bdadd6
  41aa18:	dec    eax
  41aa19:	mov    ecx,0x375235b2
  41aa1e:	sbb    eax,0xe0329943
  41aa23:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41aa24:	mov    ebx,0xeb8e692b
  41aa29:	mov    ebx,0x4134f114
  41aa2e:	sbb    BYTE PTR [edi-0x54],ah
  41aa31:	mov    eax,0x5a874084
  41aa36:	pop    ecx
  41aa37:	mov    ds:0xa43ce284,eax
  41aa3c:	mov    eax,es:0xfce1360
  41aa42:	and    ch,al
  41aa44:	in     al,dx
  41aa45:	mul    DWORD PTR [edx-0x47]
  41aa48:	fdivr  DWORD PTR [ebp+edx*2-0x62]
  41aa4c:	mov    al,ds:0x39a7be4b
  41aa51:	lods   eax,DWORD PTR ds:[esi]
  41aa52:	add    al,0x69
  41aa54:	push   0xffffff8d
  41aa56:	retf   0xd1d5
  41aa59:	adc    DWORD PTR [ebx+0x36f1b2ca],esi
  41aa5f:	or     esi,DWORD PTR [eax+0x4a]
  41aa62:	jnp    0x41aadf
  41aa64:	mov    edi,0x6a64c0b2
  41aa69:	jae    0x41aa03
  41aa6b:	sbb    esp,DWORD PTR [esi+0x7c38ab4]
  41aa71:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41aa72:	add    esp,DWORD PTR [edi]
  41aa74:	adc    BYTE PTR [ebp+0x65],bh
  41aa77:	pop    ebp
  41aa78:	pop    ebx
  41aa79:	inc    edi
  41aa7a:	mov    ?,eax
  41aa7c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41aa7d:	sar    bl,1
  41aa7f:	dec    eax
  41aa80:	mov    bh,0xb
  41aa82:	(bad)  
  41aa83:	xor    ebx,DWORD PTR [ecx+0x27]
  41aa86:	dec    esp
  41aa87:	pop    ebx
  41aa88:	push   ds
  41aa89:	sbb    DWORD PTR [edx+0x3363bb4f],edi
  41aa8f:	mov    ebx,0x14792689
  41aa94:	(bad)  
  41aa96:	call   0x6450:0x317fef28
  41aa9d:	adc    BYTE PTR [ecx-0x724fd83c],0x1
  41aaa4:	sub    al,0x49
  41aaa6:	call   0x3cf7b484
  41aaab:	scas   eax,DWORD PTR es:[edi]
  41aaac:	and    eax,DWORD PTR [ebx+0x4]
  41aaaf:	xchg   ecx,eax
  41aab0:	cdq    
  41aab1:	test   al,0xbe
  41aab3:	dec    edi
  41aab4:	ret    
  41aab5:	sbb    ecx,DWORD PTR [ebp+0x5be17e85]
  41aabb:	cmp    BYTE PTR ds:0x570dba4c,dl
  41aac1:	ja     0x41aadf
  41aac3:	inc    edi
  41aac4:	lds    eax,FWORD PTR [ecx+0x37d688d9]
  41aaca:	or     dh,cl
  41aacc:	(bad)  
  41aacd:	call   0xf114:0x57db966
  41aad4:	aam    0x7f
  41aad6:	jmp    0x41aacf
  41aad8:	xlat   BYTE PTR ds:[ebx]
  41aad9:	fstp   DWORD PTR [esi]
  41aadb:	sub    DWORD PTR ds:0x411614b9,edx
  41aae1:	inc    ebx
  41aae2:	fchs   
  41aae4:	cmp    DWORD PTR [esi],0x42eb37a8
  41aaea:	fst    st(7)
  41aaec:	push   ebp
  41aaed:	and    bl,ch
  41aaef:	lds    esi,FWORD PTR [ebp-0x6d]
  41aaf2:	inc    esp
  41aaf3:	xlat   BYTE PTR ds:[ebx]
  41aaf4:	xor    BYTE PTR [ebx-0x9d6059a],dl
  41aafa:	cmp    al,0x27
  41aafc:	add    eax,0x4cf5fcce
  41ab01:	push   edx
  41ab02:	das    
  41ab03:	push   eax
  41ab04:	cwde   
  41ab05:	inc    eax
  41ab06:	test   dh,dl
  41ab08:	loopne 0x41aa9a
  41ab0a:	call   0x1642:0x833f3a70
  41ab11:	js     0x41ab6c
  41ab13:	out    0xd7,al
  41ab15:	jns    0x41ab4d
  41ab17:	xor    edx,DWORD PTR [edi]
  41ab19:	out    0x7e,eax
  41ab1b:	sbb    ebp,DWORD PTR [ebx+0x75]
  41ab1e:	sub    al,0xf6
  41ab20:	cmp    ebp,esi
  41ab22:	pop    ecx
  41ab23:	push   ebx
  41ab24:	pop    edx
  41ab25:	neg    ebp
  41ab27:	inc    esp
  41ab28:	sbb    dl,BYTE PTR [edx]
  41ab2a:	femms  
  41ab2c:	mov    ebp,0x718813f2
  41ab31:	fdiv   QWORD PTR gs:[eax+eax*4]
  41ab35:	(bad)  
  41ab36:	mov    ah,0xe7
  41ab38:	pop    ebp
  41ab39:	enter  0x2b08,0x64
  41ab3d:	je     0x41aaea
  41ab3f:	add    BYTE PTR [esi],ch
  41ab41:	popa   
  41ab42:	sti    
  41ab43:	jnp    0x41aac9
  41ab45:	std    
  41ab46:	jnp    0x41ab94
  41ab48:	add    eax,DWORD PTR [ecx+0x4283d972]
  41ab4e:	ins    BYTE PTR es:[edi],dx
  41ab4f:	or     eax,0x2f6ceed3
  41ab54:	mov    eax,0x978ed64d
  41ab59:	cmp    cl,BYTE PTR es:[edi+0x1f88ca4e]
  41ab60:	in     eax,dx
  41ab61:	and    eax,0x1aff5793
  41ab66:	add    ah,BYTE PTR [ebx+0x29]
  41ab69:	or     eax,DWORD PTR [ebx+esi*1]
  41ab6c:	sbb    ecx,DWORD PTR [eax]
  41ab6e:	dec    edi
  41ab6f:	dec    esp
  41ab70:	sti    
  41ab71:	or     eax,DWORD PTR [esp+edx*2]
  41ab74:	sub    edx,DWORD PTR [ebp+ebp*4-0x68fbec75]
  41ab7b:	outs   dx,DWORD PTR ds:[esi]
  41ab7c:	adc    eax,0x726f63f0
  41ab81:	loop   0x41abe2
  41ab83:	aad    0x2
  41ab85:	daa    
  41ab86:	test   DWORD PTR [ecx],esi
  41ab88:	push   ds
  41ab89:	cwde   
  41ab8a:	repz mov ah,0x29
  41ab8d:	ret    
  41ab8e:	or     edi,DWORD PTR [ebx-0x61]
  41ab91:	(bad)  
  41ab92:	cmp    eax,ebx
  41ab94:	and    eax,0x8f08ef
  41ab99:	and    ebp,DWORD PTR [esi+0x2015e709]
  41ab9f:	fs fadd st,st(6)
  41aba2:	jb     0x41ac02
  41aba4:	aad    0xa1
  41aba6:	pop    ss
  41aba7:	mov    WORD PTR [ecx],cs
  41aba9:	aam    0xbb
  41abab:	into   
  41abac:	ror    DWORD PTR [ebx+0x6e],cl
  41abaf:	(bad)  
  41abb0:	lock cmp DWORD PTR [ebx],ecx
  41abb3:	inc    ebp
  41abb4:	in     eax,0x1d
  41abb6:	es jno 0x41ac06
  41abb9:	shr    BYTE PTR [esi-0x41cbc30f],cl
  41abbf:	xchg   edi,eax
  41abc0:	push   ss
  41abc1:	retf   0xac6a
  41abc4:	rol    BYTE PTR [ebx+esi*2+0x4f9d9a5e],0x87
  41abcc:	(bad)  
  41abcd:	cmp    ebp,0xffffffa5
  41abd0:	cmc    
  41abd1:	xchg   edi,eax
  41abd2:	or     al,0x50
  41abd4:	xor    esi,DWORD PTR [edx]
  41abd6:	scas   al,BYTE PTR es:[edi]
  41abd7:	pop    ds
  41abd8:	jecxz  0x41abcf
  41abda:	popa   
  41abdb:	push   ss
  41abdc:	mov    eax,DWORD PTR [ebx-0x43]
  41abdf:	inc    eax
  41abe0:	lods   eax,DWORD PTR ds:[esi]
  41abe1:	aaa    
  41abe2:	nop
  41abe3:	fistp  QWORD PTR [esi-0x5290cc73]
  41abe9:	dec    eax
  41abea:	bound  edi,QWORD PTR [eax+0x1481e062]
  41abf0:	add    edx,ebx
  41abf2:	pop    ebx
  41abf3:	js     0x41ac11
  41abf5:	sbb    bl,BYTE PTR [ebx+eiz*4+0x3f33d4f0]
  41abfc:	inc    esp
  41abfd:	ja     0x41ac74
  41abff:	or     al,0x4e
  41ac01:	pop    ebp
  41ac02:	mov    ah,0xb4
  41ac04:	fs (bad) 
  41ac06:	push   esp
  41ac07:	push   esi
  41ac08:	data16 xor BYTE PTR [ebx+0x18545735],dl
  41ac0f:	add    BYTE PTR [eax],ah
  41ac11:	int3   
  41ac12:	or     bh,bh
  41ac14:	adc    ecx,DWORD PTR [ebp+0xe]
  41ac17:	test   DWORD PTR [esi],ebp
  41ac19:	test   DWORD PTR [ebx-0x5185ea54],0xd2754894
  41ac23:	in     eax,0x37
  41ac25:	jnp    0x41abea
  41ac27:	jecxz  0x41ac08
  41ac29:	xor    al,0xf5
  41ac2b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ac2c:	dec    edi
  41ac2d:	(bad)  
  41ac2e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ac2f:	inc    edi
  41ac30:	in     eax,dx
  41ac31:	mov    ch,0x15
  41ac33:	outs   dx,BYTE PTR ds:[esi]
  41ac34:	xchg   ch,bh
  41ac36:	fadd   DWORD PTR [edi-0x3797a9a4]
  41ac3c:	in     eax,dx
  41ac3d:	ror    bl,0x9f
  41ac40:	inc    eax
  41ac41:	retf   
  41ac42:	xchg   BYTE PTR [ebx-0x35ed9291],dl
  41ac48:	dec    edx
  41ac49:	imul   edi,DWORD PTR [edi+ecx*2],0xffffffc3
  41ac4d:	xchg   ebp,eax
  41ac4e:	in     al,dx
  41ac4f:	jb     0x41ac81
  41ac51:	push   ebp
  41ac52:	in     eax,dx
  41ac53:	adc    BYTE PTR [ecx],dh
  41ac55:	mov    ds:0x74226dd6,al
  41ac5a:	push   edi
  41ac5b:	mov    cl,0xa4
  41ac5d:	add    DWORD PTR [esi+esi*1-0x46],ebx
  41ac61:	(bad)  
  41ac62:	push   ss
  41ac63:	dec    ebx
  41ac64:	icebp  
  41ac65:	data16 sbb cl,ah
  41ac68:	inc    esp
  41ac69:	mov    dh,0x4e
  41ac6b:	jmp    0x87e4:0x4f191017
  41ac72:	out    dx,al
  41ac73:	sub    al,0xf7
  41ac75:	jne    0x41ac7e
  41ac77:	fsub   st,st(6)
  41ac79:	lds    esi,FWORD PTR [ecx-0x2e7c6aee]
  41ac7f:	mov    al,ds:0xeded3c98
  41ac84:	xchg   edi,eax
  41ac85:	repnz mov bh,BYTE PTR [esi-0xf60be5d]
  41ac8c:	iret   
  41ac8d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ac8e:	inc    eax
  41ac8f:	push   ecx
  41ac91:	jge    0x41ace7
  41ac93:	xor    al,0x6f
  41ac95:	fwait
  41ac96:	sahf   
  41ac97:	and    edi,DWORD PTR [ecx+0x29]
  41ac9a:	mov    edx,0xd8ecf7a9
  41ac9f:	pop    eax
  41aca0:	mul    BYTE PTR [ebp-0x4a]
  41aca3:	mov    ch,0x1d
  41aca5:	imul   DWORD PTR [esi]
  41aca7:	ss ss adc cl,cl
  41acab:	cmp    eax,0xc2022d4e
  41acb0:	sbb    DWORD PTR [ecx],ecx
  41acb2:	xchg   edi,eax
  41acb3:	jge    0x41ace4
  41acb5:	retf   0x8f58
  41acb8:	test   DWORD PTR [edi-0x72],esp
  41acbb:	loope  0x41acfc
  41acbd:	jns    0x41acc8
  41acbf:	xor    esp,ebx
  41acc1:	inc    edi
  41acc2:	js     0x41ac88
  41acc4:	lds    edi,FWORD PTR [edi]
  41acc6:	or     eax,0xba809654
  41accb:	mov    ebp,0xf2193a54
  41acd0:	or     BYTE PTR [edx-0x24a57329],cl
  41acd6:	popf   
  41acd7:	mov    edx,0x8af5b24b
  41acdc:	(bad)  
  41acdd:	sti    
  41acde:	mov    ch,0x67
  41ace0:	cmp    al,0x67
  41ace2:	sbb    al,BYTE PTR [ebx]
  41ace4:	sub    edx,0xffffffc7
  41ace7:	push   edi
  41ace8:	ins    BYTE PTR es:[edi],dx
  41ace9:	mov    ah,0x23
  41aceb:	xor    al,0xf9
  41aced:	test   al,0x31
  41acef:	retf   
  41acf0:	adc    dh,BYTE PTR [esi+0x64]
  41acf3:	mov    eax,ds:0xe36fee10
  41acf8:	sub    dl,BYTE PTR [edx-0x7c]
  41acfb:	call   0xbb12:0x492ccecb
  41ad02:	push   esi
  41ad03:	and    bh,BYTE PTR [esi]
  41ad05:	cli    
  41ad06:	sar    al,0xb0
  41ad09:	loop   0x41acbe
  41ad0b:	cmp    ecx,edx
  41ad0d:	mov    al,ds:0x7658f22b
  41ad12:	sbb    BYTE PTR [edx+0x7b],al
  41ad15:	enter  0x671e,0x10
  41ad19:	pop    edx
  41ad1a:	mov    ah,0x19
  41ad1c:	shl    DWORD PTR [edx*1+0x53a85665],0xfe
  41ad24:	idiv   BYTE PTR [ebp-0x23fdf375]
  41ad2a:	out    0xe7,eax
  41ad2c:	push   0x41
  41ad2e:	xchg   BYTE PTR [esi+0x733a7cb],cl
  41ad34:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ad35:	pop    ecx
  41ad36:	push   0x4485e522
  41ad3b:	pop    edi
  41ad3c:	mov    ss,esi
  41ad3e:	pop    edi
  41ad3f:	jmp    0x41ad02
  41ad41:	sbb    ch,BYTE PTR [esi]
  41ad43:	mov    dl,0xba
  41ad45:	mov    eax,ds:0xe3353a9d
  41ad4a:	sti    
  41ad4b:	sub    ebx,ebx
  41ad4d:	bound  eax,QWORD PTR [eax-0x4d843a8a]
  41ad53:	test   ah,dl
  41ad55:	mov    cl,0x65
  41ad57:	scas   al,BYTE PTR es:[edi]
  41ad58:	clc    
  41ad59:	out    dx,eax
  41ad5a:	outs   dx,DWORD PTR ds:[esi]
  41ad5b:	sbb    al,0x72
  41ad5d:	sahf   
  41ad5e:	retf   0xf1d4
  41ad61:	cmp    DWORD PTR [edx+0x2915e327],0x68
  41ad68:	add    edi,DWORD PTR [esi+0x40066712]
  41ad6e:	cmc    
  41ad6f:	sti    
  41ad70:	jp     0x41ad87
  41ad72:	lahf   
  41ad73:	xor    cl,BYTE PTR [edi-0x14]
  41ad76:	or     ecx,DWORD PTR [ebp+0x1a02cae]
  41ad7c:	retf   
  41ad7d:	and    DWORD PTR [edx-0x24],edx
  41ad80:	cmp    BYTE PTR [edi+eiz*8],0x1
  41ad84:	mov    eax,ds:0xe6a7fd54
  41ad89:	pop    ds
  41ad8a:	pushf  
  41ad8b:	add    edx,DWORD PTR [eax+0x4b56cb66]
  41ad91:	or     edi,edi
  41ad93:	xor    eax,0x900997ab
  41ad98:	or     cl,dl
  41ad9a:	mov    ch,0x83
  41ad9c:	add    DWORD PTR [edi+0x3],ecx
  41ad9f:	sahf   
  41ada0:	daa    
  41ada1:	iret   
  41ada2:	mov    ecx,0x7e269a4d
  41ada7:	dec    ecx
  41ada8:	mov    ah,0xa0
  41adaa:	outs   dx,DWORD PTR ds:[esi]
  41adab:	aaa    
  41adac:	push   ebp
  41adad:	mov    bl,0x87
  41adaf:	sub    al,0xf0
  41adb1:	clc    
  41adb2:	push   esi
  41adb3:	cmp    al,0xc
  41adb5:	and    dl,ah
  41adb7:	xlat   BYTE PTR ds:[ebx]
  41adb8:	jge    0x41ad50
  41adba:	or     al,0x3f
  41adbc:	js     0x41ad82
  41adbe:	out    0xc2,eax
  41adc0:	dec    edi
  41adc1:	sub    BYTE PTR [edi],ah
  41adc3:	rol    ebx,cl
  41adc5:	sbb    ah,BYTE PTR [ecx+esi*1-0x7e62ba2c]
  41adcc:	fnstcw WORD PTR [eax]
  41adce:	loopne 0x41ae11
  41add0:	call   0x6d70895c
  41add5:	rcr    DWORD PTR [edx],1
  41add7:	test   DWORD PTR [edi-0x34],ebx
  41adda:	mov    edx,0x8e112296
  41addf:	jno    0x41ade7
  41ade1:	jbe    0x41ae31
  41ade3:	(bad)  
  41ade4:	jnp    0x41ae22
  41ade6:	jmp    0x41ae55
  41ade8:	sbb    BYTE PTR [ecx+0x21],dh
  41adeb:	sub    eax,0x457f5ca2
  41adf0:	push   edi
  41adf1:	mov    bl,bh
  41adf3:	cs cld 
  41adf5:	ss inc esi
  41adf7:	out    0x19,al
  41adf9:	call   0xb9f12890
  41adfe:	jle    0x41ae45
  41ae00:	jl     0x41ae37
  41ae02:	enter  0xd91d,0x63
  41ae06:	cmp    ebx,esp
  41ae08:	mov    eax,0xbf7de9ee
  41ae0d:	mov    al,ds:0xe46125f2
  41ae12:	les    ecx,FWORD PTR [esp-0x1d]
  41ae16:	xchg   esp,eax
  41ae17:	mov    al,ds:0x83177d81
  41ae1c:	jo     0x41adbe
  41ae1e:	adc    bl,dl
  41ae20:	mov    al,0x63
  41ae22:	(bad)
  41ae25:	arpl   WORD PTR [esi+0x731a16b1],bx
  41ae2b:	xchg   esp,eax
  41ae2c:	mov    DWORD PTR [edi-0x10e09514],esp
  41ae32:	mov    eax,ds:0x43e00d29
  41ae37:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ae38:	xchg   edx,eax
  41ae39:	into   
  41ae3a:	adc    ah,BYTE PTR es:[esi+eax*8]
  41ae3e:	jg     0x41ae83
  41ae40:	pop    ebp
  41ae41:	jns    0x41adef
  41ae43:	push   esp
  41ae44:	retf   
  41ae45:	out    0x7f,al
  41ae47:	xchg   esi,eax
  41ae48:	add    eax,0x32120bab
  41ae4d:	add    DWORD PTR [ecx],edx
  41ae4f:	inc    ebp
  41ae50:	dec    ebp
  41ae51:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ae53:	jg     0x41ae85
  41ae55:	push   edx
  41ae56:	cmp    DWORD PTR [edi],edi
  41ae58:	iret   
  41ae59:	mov    ecx,0xf326c1ea
  41ae5e:	cmp    al,0xcf
  41ae60:	fmul   st,st(3)
  41ae62:	test   ebx,0x3dc41bf3
  41ae68:	cwde   
  41ae69:	aad    0x4c
  41ae6b:	test   DWORD PTR [esi],ecx
  41ae6d:	xor    al,0xf8
  41ae6f:	ss jmp 0xa31fefd9
  41ae75:	mov    esp,0x29478f26
  41ae7a:	jmp    0x41ae32
  41ae7c:	mov    bh,0xbe
  41ae7e:	adc    BYTE PTR [eax],ah
  41ae80:	jp     0x41ae35
  41ae82:	mov    ds:0x293df2d4,eax
  41ae87:	adc    DWORD PTR [eax],eax
  41ae89:	push   0x13
  41ae8b:	mov    eax,0x495f455a
  41ae90:	and    BYTE PTR [eax+0x1e90d169],dl
  41ae96:	jo     0x41aedf
  41ae98:	paddusw mm5,QWORD PTR [ecx+0x8]
  41ae9c:	popf   
  41ae9d:	jl     0x41ae73
  41ae9f:	ror    DWORD PTR [edi+0x325d4eb0],1
  41aea5:	and    DWORD PTR [ebx+0x692458f2],ebx
  41aeab:	inc    ebx
  41aeac:	fwait
  41aead:	cmp    DWORD PTR [edx+0x1c],0xffffffe6
  41aeb1:	jo     0x41aee0
  41aeb3:	enter  0xd5e0,0xc9
  41aeb7:	popa   
  41aeb8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41aeb9:	fs mov dl,0x58
  41aebc:	or     cl,BYTE PTR [esi-0x5f]
  41aebf:	and    ebp,esi
  41aec1:	push   ebp
  41aec2:	jnp    0x41ae93
  41aec4:	(bad)  
  41aec5:	cwde   
  41aec6:	clc    
  41aec7:	dec    eax
  41aec8:	aam    0x17
  41aeca:	jmp    0xb778:0x822e78f0
  41aed1:	mov    bh,0x4d
  41aed3:	data16 stos BYTE PTR es:[edi],al
  41aed5:	leave  
  41aed6:	mov    ds:0xe179e6c6,al
  41aedb:	in     al,0x27
  41aedd:	push   0x2a9f0922
  41aee2:	idiv   BYTE PTR [esp+edi*1-0x3d2194c0]
  41aee9:	xchg   edx,eax
  41aeea:	loope  0x41aedf
  41aeec:	jg     0x41aed0
  41aeee:	or     al,0x89
  41aef0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41aef1:	add    al,0x80
  41aef3:	dec    ebx
  41aef4:	push   eax
  41aef5:	fldenv [edi+0x3d078a55]
  41aefb:	and    eax,DWORD PTR [edx+eiz*8]
  41aefe:	idiv   BYTE PTR [edx-0x66]
  41af01:	test   BYTE PTR [ebx],0x7
  41af04:	aaa    
  41af05:	(bad)  
  41af07:	stos   BYTE PTR es:[edi],al
  41af08:	in     al,dx
  41af09:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41af0a:	jp     0x41af42
  41af0c:	dec    ecx
  41af0d:	loop   0x41aeb1
  41af0f:	inc    ecx
  41af10:	inc    ebx
  41af11:	cld    
  41af12:	pop    ebp
  41af13:	jb     0x41af2e
  41af15:	push   ss
  41af16:	ins    DWORD PTR es:[edi],dx
  41af17:	clc    
  41af18:	jnp    0x41af6d
  41af1a:	imul   eax,DWORD PTR [ebx],0xa
  41af1d:	inc    edi
  41af1e:	lea    ebx,[ecx-0x50509a81]
  41af24:	mov    eax,0x2bddd992
  41af29:	cdq    
  41af2a:	cmp    eax,0x5ba28ae4
  41af2f:	dec    ebp
  41af30:	imul   edx,DWORD PTR [ecx],0x10
  41af33:	das    
  41af34:	int3   
  41af35:	or     DWORD PTR [esi-0x4545c579],esi
  41af3b:	inc    esi
  41af3c:	aad    0x8e
  41af3e:	popa   
  41af3f:	nop
  41af40:	test   DWORD PTR [ecx-0x72],esp
  41af43:	sar    DWORD PTR [edi],1
  41af45:	mov    esp,0xa908c839
  41af4a:	add    edi,esp
  41af4c:	test   eax,0x4cc3ce70
  41af51:	imul   ecx,DWORD PTR [edx+0x60],0x5f8cf1b3
  41af58:	fcmovb st,st(2)
  41af5a:	lahf   
  41af5b:	xchg   edx,eax
  41af5c:	jbe    0x41af3d
  41af5e:	(bad)  
  41af5f:	sub    ebp,edx
  41af61:	jl     0x41aeff
  41af63:	aaa    
  41af64:	(bad)  
  41af65:	fdiv   DWORD PTR [ebx]
  41af67:	adc    al,dl
  41af69:	repz in eax,dx
  41af6b:	and    ch,BYTE PTR [ecx+edi*2+0x661d35ba]
  41af72:	push   ebx
  41af73:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41af74:	popa   
  41af75:	push   0xffffffe0
  41af77:	std    
  41af78:	dec    eax
  41af79:	in     al,0xe0
  41af7b:	aam    0xf5
  41af7d:	addr16 mov ecx,0x8083342c
  41af83:	mov    bh,BYTE PTR [ecx]
  41af85:	lock jle 0x41af89
  41af88:	test   BYTE PTR [ecx-0x62],dl
  41af8b:	jmp    0x41afa9
  41af8d:	cwde   
  41af8e:	jp     0x41b007
  41af90:	add    ebp,DWORD PTR [edx+0x64]
  41af93:	and    al,0xa7
  41af95:	push   eax
  41af96:	mov    al,ds:0x6f96ff3c
  41af9b:	sub    dl,bh
  41af9d:	daa    
  41af9e:	lods   eax,DWORD PTR ds:[esi]
  41af9f:	add    eax,0x52d769cc
  41afa4:	bound  ebp,QWORD PTR [edx+edi*1-0x4090a29a]
  41afab:	and    DWORD PTR [esi-0x14b9abbf],0xf2c5f86d
  41afb5:	div    ecx
  41afb7:	pop    ss
  41afb8:	leave  
  41afb9:	inc    bx
  41afbb:	jns    0x41afbe
  41afbd:	bound  edx,QWORD PTR [edx+edx*4]
  41afc0:	cmp    al,0xe3
  41afc2:	popf   
  41afc3:	inc    eax
  41afc4:	xlat   BYTE PTR ds:[ebx]
  41afc5:	(bad)  
  41afc7:	pop    ds
  41afc8:	and    eax,esp
  41afca:	jl     0x41afe0
  41afcc:	lea    esp,[esi]
  41afce:	mov    ecx,0xe381b8f7
  41afd3:	lahf   
  41afd4:	push   ss
  41afd5:	stos   BYTE PTR es:[edi],al
  41afd6:	mov    al,ds:0x3e150e04
  41afdb:	xchg   esi,eax
  41afdc:	push   ebp
  41afdd:	push   ebp
  41afde:	mov    ah,0x1a
  41afe0:	push   ecx
  41afe1:	scas   al,BYTE PTR es:[edi]
  41afe2:	sar    DWORD PTR [ebp+0x77],0xd9
  41afe6:	call   0xba4e06b7
  41afeb:	scas   eax,DWORD PTR es:[edi]
  41afec:	out    dx,al
  41afed:	in     al,dx
  41afee:	popf   
  41afef:	dec    ebp
  41aff0:	or     eax,DWORD PTR [esi-0x127e7faa]
  41aff6:	push   ss
  41aff7:	xchg   esp,eax
  41aff8:	ins    BYTE PTR es:[edi],dx
  41aff9:	fadd   DWORD PTR [ecx-0x1b41ab98]
  41afff:	xchg   esi,eax
  41b000:	xchg   ebx,eax
  41b001:	xchg   esp,eax
  41b002:	dec    ebp
  41b003:	pop    ss
  41b004:	mov    edx,DWORD PTR ds:0x19ae228a
  41b00a:	cmp    BYTE PTR [esi+edx*2-0x5d2e3379],bl
  41b011:	ret    
  41b012:	out    0x65,al
  41b014:	sub    al,0x79
  41b016:	and    dl,cl
  41b018:	jge    0x41af9d
  41b01a:	repnz sbb BYTE PTR [ecx+0x4116d9f3],cl
  41b021:	shl    ecx,cl
  41b023:	sbb    esp,DWORD PTR [ebx+esi*4-0x597ebca9]
  41b02a:	in     al,dx
  41b02b:	or     eax,0xcddef785
  41b030:	xchg   ebx,eax
  41b031:	mov    ds:0x7634098c,eax
  41b036:	cs daa 
  41b038:	sbb    WORD PTR [esi-0x2f669d3],bx
  41b03f:	stc    
  41b040:	cli    
  41b041:	sub    al,0x26
  41b043:	sbb    eax,0xeae1d526
  41b048:	xchg   BYTE PTR [eax+0x2d],cl
  41b04b:	repnz cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b04d:	iret   
  41b04e:	mov    bh,BYTE PTR [edi]
  41b050:	adc    DWORD PTR [edi-0x23378524],ecx
  41b056:	mov    esi,0x6704dbcd
  41b05b:	cld    
  41b05c:	rol    BYTE PTR [ecx-0x80],0xa4
  41b060:	test   BYTE PTR [esi-0x5d],ch
  41b063:	mov    dl,0x69
  41b065:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b066:	pop    ebx
  41b067:	sub    DWORD PTR [edx+ecx*1-0x4bed8d1f],0x8b49a347
  41b072:	aam    0x26
  41b074:	popa   
  41b075:	push   0x62
  41b077:	sub    edi,esp
  41b079:	mov    edx,0xbac8b0b6
  41b07e:	iret   
  41b07f:	cmp    al,0x74
  41b081:	fisub  WORD PTR [esi-0x28]
  41b084:	das    
  41b085:	or     al,0x32
  41b087:	mov    al,0x41
  41b089:	not    BYTE PTR [eax*2+0x1f9d5ea7]
  41b090:	mov    edx,0xbf2525dc
  41b095:	fs aad 0xcd
  41b098:	inc    ebp
  41b099:	leave  
  41b09a:	pop    edi
  41b09b:	jne    0x41b042
  41b09d:	loop   0x41b06d
  41b09f:	pusha  
  41b0a0:	pop    esp
  41b0a1:	or     DWORD PTR [edi],ebp
  41b0a3:	je     0x41b02b
  41b0a5:	xchg   DWORD PTR [ebp+0x59b26cd8],edi
  41b0ab:	lea    edi,[esi]
  41b0ad:	cmp    ch,0x55
  41b0b0:	add    al,0x35
  41b0b2:	loope  0x41b0a3
  41b0b4:	push   edx
  41b0b5:	ins    DWORD PTR es:[edi],dx
  41b0b6:	scas   eax,DWORD PTR es:[edi]
  41b0b7:	inc    ecx
  41b0b8:	cmp    eax,0x8f29c933
  41b0bd:	dec    edi
  41b0be:	mov    bl,0x91
  41b0c0:	jno    0x41b0f7
  41b0c2:	fst    QWORD PTR cs:[edi+esi*2+0x6b00976c]
  41b0ca:	shl    BYTE PTR [edi],0xfa
  41b0cd:	popf   
  41b0ce:	out    dx,eax
  41b0cf:	inc    bp
  41b0d1:	mov    WORD PTR [ebx],?
  41b0d3:	fdivr  st(1),st
  41b0d5:	dec    esi
  41b0d6:	add    BYTE PTR [edx+0x4247b155],0x12
  41b0dd:	cmp    BYTE PTR [edi+eiz*4-0x41],bl
  41b0e1:	cmp    edx,edi
  41b0e3:	sub    dl,BYTE PTR [eax+0x2f826422]
  41b0e9:	into   
  41b0ea:	lods   eax,DWORD PTR ds:[esi]
  41b0eb:	icebp  
  41b0ec:	inc    edi
  41b0ed:	and    DWORD PTR [ebx+ebp*1],ebp
  41b0f0:	arpl   WORD PTR [ebx+ecx*2],bp
  41b0f3:	push   ecx
  41b0f4:	lds    eax,FWORD PTR [edx-0x281198a5]
  41b0fa:	push   0xffffff99
  41b0fc:	mov    bl,0x12
  41b0fe:	fwait
  41b0ff:	dec    esp
  41b100:	ins    BYTE PTR es:[edi],dx
  41b101:	and    esi,DWORD PTR [ecx-0x36ef5a34]
  41b107:	mov    esi,0x364a8990
  41b10c:	repnz mov esi,0xed9ecc6e
  41b112:	loop   0x41b174
  41b114:	mov    al,ds:0xdfe8b3c5
  41b119:	(bad)  [ebx-0x2a00dfa8]
  41b11f:	fs pop eax
  41b121:	add    eax,0x8efd112
  41b126:	adc    al,0x6d
  41b128:	fdivr  QWORD PTR [ecx+0x36]
  41b12b:	pop    ecx
  41b12c:	pop    es
  41b12d:	enter  0x4fd9,0x85
  41b131:	mov    ah,0xbf
  41b133:	cmp    DWORD PTR [edi],eax
  41b135:	(bad)  
  41b136:	cli    
  41b137:	lahf   
  41b138:	sbb    esi,ebx
  41b13a:	pop    edx
  41b13b:	cmp    DWORD PTR [edx],0x7c
  41b13e:	mov    esp,ecx
  41b140:	adc    ah,bl
  41b142:	sbb    BYTE PTR [eax-0x25],0xef
  41b146:	mov    edx,0x981c0ffc
  41b14b:	mov    al,ds:0xd71761e9
  41b150:	dec    edi
  41b151:	ret    0x968
  41b154:	(bad)  
  41b155:	push   ecx
  41b156:	sbb    ecx,esi
  41b158:	mov    eax,ds:0xe30781a7
  41b15d:	pop    ecx
  41b15e:	jp     0x41b175
  41b160:	fistp  WORD PTR [ebx-0x1a]
  41b163:	pop    ebx
  41b164:	idiv   BYTE PTR [ebx]
  41b166:	scas   eax,DWORD PTR es:[edi]
  41b167:	sahf   
  41b168:	push   ecx
  41b169:	sbb    DWORD PTR [ebx+edi*8],ebx
  41b16c:	shl    DWORD PTR [ebp-0x5f],0x6f
  41b170:	mov    ecx,0xd723c5e7
  41b175:	daa    
  41b176:	push   eax
  41b177:	(bad)  
  41b178:	jmp    0xd0fa65d3
  41b17d:	ins    DWORD PTR es:[edi],dx
  41b17e:	daa    
  41b17f:	push   0xffffffcf
  41b181:	pop    edx
  41b182:	cmp    al,0x41
  41b184:	adc    al,0xe4
  41b186:	fsubr  QWORD PTR ds:0xfca11c77
  41b18c:	(bad)  
  41b18d:	into   
  41b18e:	into   
  41b18f:	test   eax,0xc03dd15d
  41b194:	sbb    BYTE PTR [edx],al
  41b196:	fdiv   DWORD PTR [ebx]
  41b198:	pop    ebx
  41b199:	rol    BYTE PTR [ebx+0x2e],0x6b
  41b19d:	mov    eax,ds:0x5668b82c
  41b1a2:	mov    eax,ds:0xfb6bab9
  41b1a7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b1a8:	lahf   
  41b1a9:	inc    ecx
  41b1aa:	leave  
  41b1ab:	jecxz  0x41b1ad
  41b1ad:	mov    ch,0xed
  41b1af:	inc    edi
  41b1b0:	pop    ecx
  41b1b1:	mov    bl,0x84
  41b1b3:	gs lock push ebp
  41b1b6:	ret    
  41b1b7:	popa   
  41b1b8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b1b9:	sbb    ah,cl
  41b1bb:	(bad)  
  41b1bc:	stc    
  41b1bd:	cli    
  41b1be:	(bad)  
  41b1bf:	in     eax,0x6c
  41b1c1:	xor    eax,ebx
  41b1c3:	sbb    al,BYTE PTR [ebx-0x5f]
  41b1c6:	test   esi,edx
  41b1c8:	nop
  41b1c9:	imul   esi,edx,0xffffffbe
  41b1cc:	or     al,0xa1
  41b1ce:	or     al,BYTE PTR [ebp-0x2d959b7f]
  41b1d4:	in     eax,0x57
  41b1d6:	fidivr DWORD PTR [ebx]
  41b1d8:	inc    ebx
  41b1d9:	jne    0x41b23f
  41b1db:	xchg   ch,ch
  41b1dd:	mov    dl,0x2d
  41b1df:	pop    edx
  41b1e0:	punpckhwd mm5,mm5
  41b1e3:	xor    BYTE PTR [esi-0x72],dl
  41b1e6:	jae    0x41b1ca
  41b1e8:	mov    esi,esp
  41b1ea:	and    bl,BYTE PTR [ebp+0x49723787]
  41b1f0:	repz ret 
  41b1f2:	and    DWORD PTR [ebp+0x72],esi
  41b1f5:	cmp    eax,0xdf00cb3e
  41b1fa:	dec    eax
  41b1fb:	ins    BYTE PTR es:[edi],dx
  41b1fc:	jae    0x41b188
  41b1fe:	daa    
  41b1ff:	lahf   
  41b200:	scas   al,BYTE PTR es:[edi]
  41b201:	cmp    eax,0x7431a0ab
  41b206:	mov    edi,0x67e6be8f
  41b20b:	sbb    al,0xfa
  41b20d:	mov    bl,0x4e
  41b20f:	daa    
  41b210:	mov    WORD PTR [edi],es
  41b212:	xchg   edx,eax
  41b213:	ins    DWORD PTR es:[edi],dx
  41b214:	mov    eax,0xc708a6b2
  41b219:	cmp    BYTE PTR [esi+0x7f7c0fc],bl
  41b21f:	(bad)  
  41b220:	clc    
  41b221:	push   ds
  41b222:	sti    
  41b223:	inc    ecx
  41b224:	sbb    DWORD PTR [edi+0x5ba193e7],ecx
  41b22a:	js     0x41b253
  41b22c:	or     edx,DWORD PTR [eax-0x7]
  41b22f:	mov    ds:0x1594b04f,eax
  41b234:	(bad)  
  41b235:	lahf   
  41b236:	nop
  41b237:	jae    0x41b21e
  41b239:	xor    BYTE PTR [edi+ecx*8+0x72],dl
  41b23d:	dec    eax
  41b23e:	es mov edi,0x542c6134
  41b244:	jo     0x41b253
  41b246:	shr    eax,0xca
  41b249:	shl    DWORD PTR [edi+0x44],0x20
  41b24d:	or     al,0xb9
  41b24f:	or     al,0x4f
  41b251:	ficom  DWORD PTR [edx]
  41b253:	popa   
  41b254:	adc    esi,ecx
  41b256:	pop    edi
  41b258:	out    dx,eax
  41b259:	lock mov bh,0xb0
  41b25c:	fwait
  41b25d:	fwait
  41b25e:	mov    ecx,0xaf331bd1
  41b263:	xchg   ebx,eax
  41b264:	dec    esp
  41b265:	ja     0x41b240
  41b267:	inc    edx
  41b268:	(bad)  ds:0x97633656
  41b26e:	int    0x42
  41b270:	jo     0x41b283
  41b272:	cmp    BYTE PTR [edx],bh
  41b274:	or     eax,0x23401316
  41b279:	test   al,0x2a
  41b27b:	inc    esi
  41b27c:	jg     0x41b227
  41b27e:	addr16 or al,0x66
  41b281:	sbb    DWORD PTR ds:0xc0fda56f,ebx
  41b287:	lea    edx,[ebp-0x3b]
  41b28a:	fild   DWORD PTR [eax-0x31]
  41b28d:	jne    0x41b2e2
  41b28f:	pop    ebp
  41b290:	das    
  41b291:	pop    edi
  41b292:	pop    es
  41b293:	mov    bh,0x85
  41b295:	pop    edi
  41b296:	mov    ds:0x8ba50c63,eax
  41b29b:	jne    0x41b24c
  41b29d:	jmp    0x82d1113e
  41b2a2:	mov    ebx,0xb2373458
  41b2a7:	mov    ebx,0x271a8755
  41b2ac:	cmp    dh,0x2e
  41b2af:	inc    edx
  41b2b0:	clc    
  41b2b1:	outs   dx,DWORD PTR ds:[esi]
  41b2b2:	test   DWORD PTR [ecx+0x27dab031],edi
  41b2b8:	inc    edx
  41b2b9:	enter  0xe787,0x35
  41b2bd:	popf   
  41b2be:	imul   eax,DWORD PTR [eax+0x3b88ef12],0x1c7f722f
  41b2c8:	jno    0x41b345
  41b2ca:	jne    0x41b31b
  41b2cc:	data16 loop 0x41b25c
  41b2cf:	iret   
  41b2d0:	xchg   DWORD PTR [eax-0x518e8bb8],esi
  41b2d6:	outs   dx,DWORD PTR ds:[esi]
  41b2d7:	mov    edi,0x315f8c82
  41b2dc:	cdq    
  41b2dd:	jp     0x41b2f3
  41b2df:	mov    ah,0x89
  41b2e1:	test   WORD PTR [edi+0x1c71ef2b],dx
  41b2e8:	xchg   esi,eax
  41b2e9:	into   
  41b2ea:	loopne 0x41b2c5
  41b2ec:	adc    al,0x2
  41b2ee:	add    eax,0x3e652e29
  41b2f3:	arpl   sp,sp
  41b2f5:	popf   
  41b2f6:	jg     0x41b2b0
  41b2f8:	movs   BYTE PTR es:[edi],BYTE PTR es:[esi]
  41b2fa:	(bad)  
  41b2fd:	adc    eax,0xcace502d
  41b302:	jl     0x41b343
  41b304:	loop   0x41b2e0
  41b306:	push   ebp
  41b307:	mov    edi,0xbdd30f23
  41b30c:	ds and eax,0xe7ae9494
  41b312:	or     ah,0x0
  41b315:	jecxz  0x41b35f
  41b317:	loope  0x41b304
  41b319:	lea    edx,[ebx+0x5e]
  41b31c:	cmp    BYTE PTR [ecx-0x7],dh
  41b31f:	in     al,0x9b
  41b321:	inc    ecx
  41b322:	aaa    
  41b323:	lods   al,BYTE PTR ds:[esi]
  41b324:	push   0x1895efce
  41b329:	jl     0x41b2b4
  41b32b:	inc    edi
  41b32c:	xchg   ebx,eax
  41b32d:	xchg   esp,eax
  41b32e:	mov    al,ds:0xa261e40b
  41b333:	xchg   ebp,eax
  41b334:	cs inc esp
  41b336:	loope  0x41b36f
  41b338:	lods   eax,DWORD PTR ds:[esi]
  41b339:	xchg   BYTE PTR [edx],cl
  41b33b:	jns    0x41b384
  41b33d:	mov    ah,0x6f
  41b33f:	retf   0x3388
  41b342:	mov    fs,eax
  41b344:	jl     0x41b321
  41b346:	iret   
  41b347:	div    BYTE PTR [eax]
  41b349:	pop    esi
  41b34a:	mov    eax,0xcc9d3781
  41b34f:	pop    esi
  41b350:	push   edx
  41b351:	sub    edi,edx
  41b353:	imul   edi,ecx,0xffffffc8
  41b356:	pop    ecx
  41b357:	pusha  
  41b358:	je     0x41b3ce
  41b35a:	scas   al,BYTE PTR es:[edi]
  41b35b:	dec    esp
  41b35c:	rol    DWORD PTR [ebp+0x7204680b],1
  41b362:	jge    0x41b33b
  41b364:	or     ebp,ecx
  41b366:	sub    BYTE PTR [ecx],ah
  41b368:	and    al,0xe7
  41b36a:	adc    DWORD PTR [edx+edi*2-0x32296b80],ebp
  41b371:	dec    eax
  41b372:	ss jl  0x41b367
  41b375:	mov    dl,BYTE PTR [ebx-0x3b0b9b13]
  41b37b:	and    BYTE PTR [edx-0xe],ah
  41b37e:	bound  ebp,QWORD PTR [eax-0x57]
  41b381:	xor    bh,BYTE PTR [ebp+0x79]
  41b384:	lock add BYTE PTR [eax+0x1958c2d2],dl
  41b38b:	neg    DWORD PTR [esi-0x56]
  41b38e:	les    ebx,FWORD PTR [ecx-0x78]
  41b391:	lds    edi,FWORD PTR [eax]
  41b393:	push   0xffffffd0
  41b395:	pop    eax
  41b396:	sbb    eax,esp
  41b398:	push   edx
  41b399:	or     bl,0xc6
  41b39c:	and    DWORD PTR ds:0x23f839ab,edx
  41b3a2:	fnstsw WORD PTR [ecx+0x7cc66545]
  41b3a8:	cmp    DWORD PTR [esi-0x56],eax
  41b3ab:	mov    ch,dh
  41b3ad:	mov    eax,ds:0x76a46053
  41b3b2:	adc    cl,BYTE PTR [edx-0x24]
  41b3b5:	sbb    DWORD PTR [eax*4-0x711fad9],ebx
  41b3bc:	aam    0xdb
  41b3be:	cmp    dl,BYTE PTR ds:[ecx-0x63]
  41b3c2:	mov    eax,ds:0x3433df74
  41b3c7:	scas   eax,DWORD PTR es:[edi]
  41b3c8:	jmp    0xfd2e0452
  41b3cd:	test   BYTE PTR [ebp+0x4e977abd],bh
  41b3d3:	push   ebp
  41b3d4:	leave  
  41b3d5:	shr    bh,0xd4
  41b3d8:	cwde   
  41b3d9:	ja     0x41b3a2
  41b3db:	popa   
  41b3dc:	sahf   
  41b3dd:	(bad)  
  41b3de:	fst    DWORD PTR [ebp+0x19e976b5]
  41b3e4:	in     al,dx
  41b3e5:	ja     0x41b3b5
  41b3e7:	lods   al,BYTE PTR ds:[esi]
  41b3e8:	call   0xdc15:0x42859035
  41b3ef:	sub    eax,0xc8623ed5
  41b3f4:	lods   al,BYTE PTR ds:[esi]
  41b3f5:	or     BYTE PTR [edx-0x2041a7f6],ah
  41b3fb:	inc    esi
  41b3fc:	repnz stc 
  41b3fe:	sar    DWORD PTR [esi+edx*8-0x36649aed],cl
  41b405:	aad    0xe2
  41b407:	stos   BYTE PTR es:[edi],al
  41b408:	lea    esp,[eax+0x12]
  41b40b:	or     DWORD PTR [edi-0x71],ebp
  41b40e:	dec    eax
  41b40f:	jl     0x41b3fd
  41b411:	dec    eax
  41b412:	adc    eax,DWORD PTR [esi-0x7b15a54e]
  41b418:	ret    
  41b419:	cwde   
  41b41a:	cmp    BYTE PTR [ecx+0x8],ch
  41b41d:	add    BYTE PTR [edx-0x33fa8703],ch
  41b423:	sub    BYTE PTR [esi+0x2],bh
  41b426:	pusha  
  41b427:	sbb    BYTE PTR [edi+ecx*8-0x7307d673],dl
  41b42e:	pop    eax
  41b42f:	cdq    
  41b430:	mov    bh,0xc7
  41b432:	jg     0x41b3d6
  41b434:	jns    0x41b3cc
  41b436:	aaa    
  41b437:	mov    esp,0x11236b8c
  41b43c:	in     al,dx
  41b43d:	push   esi
  41b43e:	or     al,0x27
  41b440:	pop    ebp
  41b441:	push   es
  41b442:	sub    al,BYTE PTR [ecx-0x39]
  41b445:	imul   esp,DWORD PTR [edi],0xffffffc0
  41b448:	push   0xded14162
  41b44d:	inc    edi
  41b44e:	(bad)  
  41b44f:	loope  0x41b406
  41b451:	repz cmp al,0xec
  41b454:	loope  0x41b49d
  41b456:	out    dx,eax
  41b457:	daa    
  41b458:	iret   
  41b459:	pop    ebx
  41b45a:	jo     0x41b4d8
  41b45c:	mov    al,ds:0x36aa364d
  41b461:	dec    eax
  41b462:	jp     0x41b40f
  41b464:	(bad)  [ebp+0x2bd9ab63]
  41b46a:	rsqrtps xmm0,XMMWORD PTR [ebx+esi*4+0x49686678]
  41b472:	fstp   QWORD PTR [ebp-0x18]
  41b475:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b476:	mov    ebx,0x4f87d7c9
  41b47b:	or     ah,BYTE PTR [esi-0x3]
  41b47e:	repnz movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b480:	jne    0x41b498
  41b482:	mov    eax,0x7d019227
  41b487:	mov    ds,WORD PTR [eax]
  41b489:	ss jmp 0x754:0x3e6298f3
  41b491:	out    dx,eax
  41b492:	mov    dl,0xe5
  41b494:	push   es
  41b495:	jo     0x41b45c
  41b497:	jg     0x41b4ed
  41b499:	outs   dx,WORD PTR ds:[esi]
  41b49b:	mov    edx,0xc8c2d7e0
  41b4a0:	or     BYTE PTR [ecx-0x423d615e],bl
  41b4a6:	inc    ebx
  41b4a7:	iret   
  41b4a8:	or     ah,BYTE PTR [ebx]
  41b4aa:	ret    0x34fe
  41b4ad:	fistp  DWORD PTR [edx+0x552ffde5]
  41b4b3:	leave  
  41b4b4:	and    DWORD PTR ds:[edi+eax*4],esp
  41b4b8:	sub    dl,BYTE PTR [eax]
  41b4ba:	sbb    bh,BYTE PTR [ecx-0x73]
  41b4bd:	fcmovne st,st(6)
  41b4bf:	push   ebp
  41b4c0:	push   ss
  41b4c1:	add    al,0xa7
  41b4c3:	jmp    0x41b509
  41b4c5:	les    eax,FWORD PTR [ebp-0x3a]
  41b4c8:	rol    DWORD PTR [edx],1
  41b4ca:	dec    edx
  41b4cb:	inc    edx
  41b4cc:	ss push ebp
  41b4ce:	imul   ebx,edi,0x7a
  41b4d1:	das    
  41b4d2:	add    BYTE PTR ds:0xd02449a9,ah
  41b4d8:	popa   
  41b4d9:	dec    ebx
  41b4da:	imul   esi,DWORD PTR [esi],0x52
  41b4dd:	test   eax,0x9629c744
  41b4e2:	adc    al,bl
  41b4e4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b4e5:	push   ds
  41b4e6:	and    dl,bh
  41b4e8:	iret   
  41b4e9:	inc    ecx
  41b4ea:	xlat   BYTE PTR ds:[ebx]
  41b4eb:	pop    esi
  41b4ec:	int    0x12
  41b4ee:	nop
  41b4ef:	jge    0x41b53c
  41b4f1:	jbe    0x41b4e2
  41b4f3:	stos   DWORD PTR es:[edi],eax
  41b4f4:	jecxz  0x41b4e3
  41b4f6:	xor    bl,BYTE PTR [ebx-0x1d]
  41b4f9:	sbb    DWORD PTR [ebx-0x1ad2610a],edx
  41b4ff:	sbb    DWORD PTR [eax],edi
  41b501:	or     eax,0x8bb791cb
  41b506:	inc    ebx
  41b507:	fild   WORD PTR [ebp+0x51]
  41b50a:	retf   
  41b50b:	(bad)  
  41b50c:	retf   0xd461
  41b50f:	push   es
  41b510:	and    ch,BYTE PTR [eax+0x761926a8]
  41b516:	mov    al,0xdf
  41b518:	inc    esp
  41b519:	mov    dh,0xe4
  41b51b:	loop   0x41b4be
  41b51d:	outs   dx,DWORD PTR ds:[esi]
  41b51e:	in     al,0x9b
  41b520:	mov    ds:0x2e73e26,al
  41b525:	loopne 0x41b4be
  41b527:	xor    ecx,esp
  41b529:	sub    esi,DWORD PTR [edx+0x41c2603f]
  41b52f:	addr16 sbb al,0xfb
  41b532:	fadd   QWORD PTR [ebp+edx*1-0x7f]
  41b536:	enter  0x44fc,0xba
  41b53a:	lods   eax,DWORD PTR ds:[esi]
  41b53b:	sub    DWORD PTR [ecx],edi
  41b53d:	cmp    ah,ch
  41b53f:	and    al,0xe1
  41b541:	or     al,0xf0
  41b543:	sub    DWORD PTR [ebx],ecx
  41b545:	or     BYTE PTR [eax+0x6d],ch
  41b548:	xchg   ebx,eax
  41b549:	cld    
  41b54a:	in     al,0x9b
  41b54c:	scas   eax,DWORD PTR es:[edi]
  41b54d:	rcl    esi,cl
  41b54f:	pop    ss
  41b550:	mov    al,0x6d
  41b552:	xchg   edx,eax
  41b553:	and    edx,ebx
  41b555:	fldcw  WORD PTR [ebx+0x61]
  41b559:	and    bl,BYTE PTR [eax+0x3a]
  41b55c:	int3   
  41b55d:	sbb    al,0x57
  41b55f:	sub    edx,ebp
  41b561:	je     0x41b557
  41b563:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b564:	outs   dx,BYTE PTR ds:[esi]
  41b565:	in     al,0xcc
  41b567:	dec    ecx
  41b568:	dec    esi
  41b569:	push   edx
  41b56a:	xchg   esi,eax
  41b56b:	cmc    
  41b56c:	repz inc esi
  41b56e:	call   0xa4d5:0xdca59f08
  41b575:	fldenv [edx+0x15]
  41b578:	aaa    
  41b579:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b57a:	jmp    0x41b594
  41b57c:	dec    eax
  41b57d:	inc    ebx
  41b57e:	(bad)
  41b581:	in     eax,dx
  41b582:	(bad)  
  41b583:	cld    
  41b584:	psraw  mm1,QWORD PTR [ebp-0xbdcda58]
  41b58b:	xor    eax,0xa66b9838
  41b590:	push   ebp
  41b591:	fnstenv [edx+0x2cf8b32a]
  41b597:	fiadd  DWORD PTR [esi+0x54]
  41b59a:	mov    ch,0xe9
  41b59c:	push   cs
  41b59d:	adc    eax,0xe1cca88c
  41b5a2:	jb     0x41b570
  41b5a4:	cmp    DWORD PTR [esi],0x52
  41b5a7:	je     0x41b61a
  41b5a9:	test   DWORD PTR [edx+0x31],eax
  41b5ac:	les    edx,FWORD PTR [ebp+0x73]
  41b5af:	and    esi,DWORD PTR ds:0x3344f60a
  41b5b5:	lock jge 0x41b5eb
  41b5b8:	ds inc esi
  41b5ba:	adc    al,0xe7
  41b5bc:	fwait
  41b5bd:	dec    eax
  41b5be:	mov    cs,edi
  41b5c0:	xchg   ebx,eax
  41b5c1:	je     0x41b5c3
  41b5c3:	ja     0x41b5d8
  41b5c5:	shr    ah,cl
  41b5c7:	icebp  
  41b5c8:	and    BYTE PTR [edi],cl
  41b5ca:	retf   
  41b5cb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b5cc:	aas    
  41b5cd:	ficom  DWORD PTR [edi+0x2c74dc81]
  41b5d3:	aad    0xcf
  41b5d5:	sub    eax,0x7a3ab238
  41b5da:	fidivr DWORD PTR [eax-0x6e]
  41b5dd:	outs   dx,DWORD PTR ds:[esi]
  41b5de:	lods   eax,DWORD PTR ds:[esi]
  41b5df:	sbb    eax,0xd15c271a
  41b5e4:	cmp    ebx,esp
  41b5e6:	retf   0x9253
  41b5e9:	aam    0xee
  41b5eb:	pop    esi
  41b5ec:	(bad)  
  41b5ed:	and    DWORD PTR [esi+ecx*4],eax
  41b5f0:	add    BYTE PTR [edx],ah
  41b5f2:	xchg   esp,eax
  41b5f3:	dec    ebp
  41b5f4:	jne    0x41b61a
  41b5f6:	les    ebx,FWORD PTR [ebp-0x76]
  41b5f9:	cld    
  41b5fa:	or     al,0x5b
  41b5fc:	push   edx
  41b5fd:	into   
  41b5fe:	xor    edi,DWORD PTR [eax+0x46]
  41b601:	and    DWORD PTR [esp+ebx*4+0x77],ecx
  41b605:	das    
  41b606:	dec    esi
  41b607:	jge    0x41b646
  41b609:	stos   BYTE PTR es:[edi],al
  41b60a:	push   cs
  41b60b:	cs xchg ebx,eax
  41b60d:	cmp    eax,0xf2849c7a
  41b612:	retf   
  41b613:	(bad)  
  41b614:	mov    dl,0xc6
  41b616:	addr16 ja 0x38dedd97
  41b61d:	cld    
  41b61e:	dec    ebp
  41b61f:	fldenv [ecx]
  41b621:	js     0x41b684
  41b623:	and    eax,0xfdb57a7e
  41b628:	adc    eax,esi
  41b62a:	push   ds
  41b62b:	popa   
  41b62c:	xor    eax,0x85a75c7f
  41b631:	jne    0x41b6b2
  41b633:	inc    esp
  41b634:	(bad)  
  41b635:	pop    eax
  41b636:	mov    esi,0x7c720528
  41b63b:	push   ebx
  41b63c:	jg     0x41b5f0
  41b63e:	mov    bl,dl
  41b640:	jge    0x41b66d
  41b642:	xor    edi,ebp
  41b644:	cld    
  41b645:	dec    esi
  41b646:	ret    
  41b647:	popf   
  41b648:	push   esi
  41b649:	sbb    ebp,edx
  41b64b:	repz cwde 
  41b64d:	clc    
  41b64e:	fidivr DWORD PTR [ebx]
  41b650:	fld    st(6)
  41b652:	pop    ss
  41b653:	cwde   
  41b654:	data16 not BYTE PTR [edi]
  41b657:	mov    al,ds:0x7f4d76e5
  41b65c:	test   BYTE PTR fs:[ebx+ebx*2],cl
  41b660:	and    DWORD PTR [edi],0x9168d4b1
  41b666:	xchg   ebx,eax
  41b667:	push   cs
  41b668:	sti    
  41b669:	fisubr WORD PTR [ecx-0x5d]
  41b66c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b66d:	ds add dl,ch
  41b670:	mov    ds:0x6413f56a,eax
  41b675:	jae    0x41b636
  41b677:	std    
  41b678:	pop    ecx
  41b679:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b67a:	and    cl,bh
  41b67c:	lahf   
  41b67d:	imul   edx,DWORD PTR [edx-0x70],0xe694ad44
  41b684:	cs jp  0x41b664
  41b687:	lock jb 0x41b6f2
  41b68a:	jge    0x41b6a0
  41b68c:	sbb    al,0x34
  41b68e:	pop    ebx
  41b68f:	pop    ss
  41b690:	std    
  41b691:	jmp    0x3a323144
  41b696:	jge    0x41b6af
  41b698:	sbb    BYTE PTR [esi],cl
  41b69a:	xchg   esi,eax
  41b69b:	js     0x41b68b
  41b69d:	not    BYTE PTR [esi+esi*4]
  41b6a0:	out    0x79,eax
  41b6a2:	jae    0x41b70e
  41b6a4:	add    BYTE PTR [edx],bl
  41b6a6:	clc    
  41b6a7:	mov    DWORD PTR [edi-0x51],esi
  41b6aa:	ret    
  41b6ab:	hlt    
  41b6ac:	bound  eax,QWORD PTR [edx+esi*1-0x24]
  41b6b0:	add    eax,0xad3d88c6
  41b6b5:	daa    
  41b6b6:	(bad)  
  41b6b7:	sub    al,BYTE PTR [ebp-0x15]
  41b6ba:	adc    DWORD PTR [eax],0x3f9fddb9
  41b6c0:	ret    
  41b6c1:	mov    edi,0xbdb5ec7f
  41b6c6:	mov    ds:0x205484be,eax
  41b6cb:	mov    esi,ecx
  41b6cd:	or     al,0x65
  41b6cf:	stos   DWORD PTR es:[edi],eax
  41b6d0:	inc    esp
  41b6d1:	jmp    0x7e47ad7e
  41b6d6:	mov    ds:0x56d5b05e,eax
  41b6db:	pop    ebp
  41b6dc:	pop    esi
  41b6dd:	bnd ret 
  41b6df:	sub    cl,BYTE PTR [ebx+0x48]
  41b6e2:	sar    BYTE PTR [ebp-0xe03bdca],0x20
  41b6e9:	mov    eax,ds:0x49c3fc00
  41b6ee:	out    0x49,al
  41b6f0:	rcr    ebx,0x9e
  41b6f3:	psrlq  mm2,mm5
  41b6f6:	inc    edx
  41b6f7:	int3   
  41b6f8:	cdq    
  41b6f9:	sbb    BYTE PTR [eax+ecx*2+0x29],dh
  41b6fd:	inc    esi
  41b6fe:	and    al,0x68
  41b700:	inc    ebp
  41b701:	adc    ch,BYTE PTR [eax]
  41b703:	into   
  41b704:	add    eax,0x3e3ae18d
  41b709:	add    BYTE PTR [eax],ah
  41b70b:	sub    eax,0x9e6ef505
  41b710:	adc    cl,bl
  41b712:	adc    BYTE PTR [eax],dl
  41b714:	jns    0x41b793
  41b716:	fisttp QWORD PTR [esi]
  41b718:	and    ebp,ecx
  41b71a:	lahf   
  41b71b:	neg    DWORD PTR [edi]
  41b71d:	xchg   esp,eax
  41b71e:	adc    BYTE PTR [edi+0x46f2b373],ch
  41b724:	xor    DWORD PTR [ecx+ebx*2+0x34],ebp
  41b728:	pushf  
  41b729:	daa    
  41b72a:	mov    WORD PTR [edx+0x4872bf78],fs
  41b730:	repz sub edx,esi
  41b733:	push   edi
  41b734:	test   DWORD PTR [ebx-0x33686dd5],ebp
  41b73a:	shr    cl,0xba
  41b73d:	xor    bh,0x60
  41b740:	push   0x5b0394de
  41b745:	loope  0x41b75f
  41b747:	sub    ch,BYTE PTR [esi+eiz*8-0x7c3689b]
  41b74e:	xchg   esp,eax
  41b74f:	mov    dh,0xd6
  41b751:	inc    esp
  41b752:	add    DWORD PTR [ecx],0xffffff93
  41b755:	mov    edi,0x24fefe31
  41b75a:	lea    eax,[ecx]
  41b75c:	jle    0x41b726
  41b75e:	pop    ebp
  41b75f:	inc    edi
  41b760:	jmp    0x6188f697
  41b765:	int3   
  41b766:	mov    ch,0x6c
  41b768:	inc    ecx
  41b769:	mov    eax,0x419999b9
  41b76e:	jmp    0x573eb205
  41b773:	popa   
  41b774:	clc    
  41b775:	hlt    
  41b776:	push   edi
  41b777:	xchg   esp,eax
  41b778:	(bad)  
  41b779:	mov    cs,eax
  41b77b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b77c:	push   edx
  41b77d:	outs   dx,DWORD PTR ds:[esi]
  41b77e:	mov    edx,0x3e601697
  41b783:	inc    edi
  41b784:	push   ds
  41b785:	enter  0x1257,0xf4
  41b789:	popa   
  41b78a:	jnp    0x41b795
  41b78c:	or     eax,0x7e135861
  41b791:	sbb    al,BYTE PTR [ecx-0x63]
  41b794:	out    dx,eax
  41b795:	pop    ebx
  41b796:	mov    bl,0xb4
  41b798:	mov    ds:0xebf193d3,al
  41b79d:	xchg   esp,eax
  41b79e:	leave  
  41b79f:	inc    ebp
  41b7a0:	mov    bh,BYTE PTR [ebx]
  41b7a2:	xor    BYTE PTR es:[esi+esi*1],0x9a
  41b7a7:	outs   dx,DWORD PTR ds:[esi]
  41b7a8:	test   eax,0xf83fc17a
  41b7ad:	add    esi,DWORD PTR [edx]
  41b7af:	push   edx
  41b7b0:	push   ecx
  41b7b1:	or     edx,DWORD PTR [ebx]
  41b7b3:	mov    ds:0xc721b18a,al
  41b7b8:	shl    edi,0xe4
  41b7bb:	ret    0x134b
  41b7be:	sub    DWORD PTR [edi-0x49],edx
  41b7c1:	sti    
  41b7c2:	adc    DWORD PTR [edi-0x5c],ebp
  41b7c5:	lods   eax,DWORD PTR ds:[esi]
  41b7c6:	pop    ss
  41b7c7:	stos   BYTE PTR es:[edi],al
  41b7c8:	mov    ds:0xe4938afe,al
  41b7cd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b7ce:	mov    BYTE PTR [esi-0x4],al
  41b7d1:	into   
  41b7d2:	aad    0xf
  41b7d4:	fcomp  DWORD PTR [ebx-0x3a]
  41b7d7:	jbe    0x41b76a
  41b7d9:	add    eax,0xc9e899f8
  41b7de:	mov    DWORD PTR [ebx],edi
  41b7e0:	mov    bh,BYTE PTR [ecx+0x26]
  41b7e3:	cmps   BYTE PTR es:[esi],BYTE PTR es:[edi]
  41b7e5:	fwait
  41b7e6:	and    BYTE PTR ds:0x25b51065,0xdb
  41b7ed:	push   0x47
  41b7ef:	push   0xed9adace
  41b7f4:	lahf   
  41b7f5:	sar    BYTE PTR [edx],cl
  41b7f7:	cwde   
  41b7f8:	mov    ds:0x3533db5d,al
  41b7fd:	mov    edx,0x2ad83961
  41b802:	inc    ebp
  41b803:	mov    ecx,0x83ad5a50
  41b808:	shr    BYTE PTR [esi],1
  41b80a:	xchg   ch,ch
  41b80c:	jb     0x41b806
  41b80e:	into   
  41b80f:	sti    
  41b810:	shl    DWORD PTR [ebx-0x27bbce21],1
  41b816:	xchg   ecx,eax
  41b817:	cmp    DWORD PTR [edx+0x8824172],eax
  41b81d:	rcl    DWORD PTR [eax+0x2087bab],cl
  41b823:	cli    
  41b824:	sbb    eax,0xd7c7dd20
  41b829:	shl    BYTE PTR [ebp+0x79003c77],1
  41b82f:	fsubp  st(7),st
  41b832:	add    cl,BYTE PTR [ecx+0x6]
  41b835:	out    dx,eax
  41b836:	sub    BYTE PTR [edi+0x4ad34189],ch
  41b83c:	out    dx,al
  41b83d:	or     al,0xb3
  41b83f:	sbb    ch,BYTE PTR ds:0xc0f982f1
  41b845:	mov    WORD PTR [ebp+0x2e],?
  41b848:	xor    eax,0xac18658
  41b84d:	mov    ecx,0x43efb236
  41b852:	push   0xfb635e81
  41b857:	xor    BYTE PTR [ecx+0x1e5d5d0e],dh
  41b85d:	pop    es
  41b85e:	scas   eax,DWORD PTR es:[edi]
  41b85f:	or     bl,BYTE PTR [eax+0x22458b91]
  41b865:	fs or  esp,eax
  41b868:	inc    ecx
  41b869:	(bad)  
  41b86a:	cdq    
  41b86b:	ret    
  41b86c:	adc    eax,0xd2de21b6
  41b871:	js     0x41b8e8
  41b873:	mov    WORD PTR [esi-0x3e12c8d6],cs
  41b879:	pop    esi
  41b87a:	test   BYTE PTR [ebp-0x5e2960e6],dl
  41b880:	fstp   QWORD PTR [esi]
  41b882:	jb     0x41b8fb
  41b884:	in     al,0x8c
  41b886:	in     eax,dx
  41b887:	scas   al,BYTE PTR es:[edi]
  41b888:	and    esi,DWORD PTR ds:[ebx]
  41b88b:	cmp    al,0x7b
  41b88d:	inc    ebp
  41b88e:	and    cl,BYTE PTR [ebp-0x76485f91]
  41b894:	inc    ebx
  41b895:	mov    ebx,0xd71dd88b
  41b89a:	fild   DWORD PTR [ecx]
  41b89c:	xor    esi,eax
  41b89e:	mov    ecx,0xeb0cdf1e
  41b8a3:	test   eax,0x3dd48696
  41b8a8:	sub    BYTE PTR [esi+0x45aa9f1e],cl
  41b8ae:	or     ah,0xdb
  41b8b1:	or     al,0x15
  41b8b3:	xchg   ch,ch
  41b8b5:	cwde   
  41b8b6:	cmp    ch,BYTE PTR [edi-0x1e]
  41b8b9:	mov    ch,BYTE PTR [edx*8+0x6ef30a9c]
  41b8c0:	sub    eax,0x1580add2
  41b8c5:	fsubr  st(1),st
  41b8c7:	sbb    dh,dl
  41b8c9:	jb     0x41b8d8
  41b8cb:	das    
  41b8cc:	pop    esi
  41b8cd:	or     eax,0x269a5165
  41b8d2:	mov    eax,ds:0x59353ac5
  41b8d7:	nop
  41b8d8:	mov    ebp,0xbaa4d1ce
  41b8dd:	sub    al,0x2b
  41b8df:	les    edi,FWORD PTR ds:0x9c781847
  41b8e5:	mov    dh,0xa0
  41b8e7:	or     eax,DWORD PTR [ebx]
  41b8e9:	push   0x1c8e99f5
  41b8ee:	scas   eax,DWORD PTR es:[edi]
  41b8ef:	sbb    al,0x27
  41b8f1:	jo     0x41b95e
  41b8f3:	inc    esp
  41b8f4:	int3   
  41b8f5:	fnstcw WORD PTR [edi+0x36c055dd]
  41b8fb:	mov    al,ds:0xa2a3f960
  41b900:	or     ah,BYTE PTR ds:0x8f8524ce
  41b906:	cmp    eax,0x56456451
  41b90b:	popf   
  41b90c:	inc    edx
  41b90d:	lea    esp,[esi+eax*8-0x49]
  41b911:	pusha  
  41b912:	mov    esi,0x4000730e
  41b917:	inc    ebx
  41b918:	mov    ecx,0x85caff7b
  41b91d:	mov    eax,ds:0xdd9adcad
  41b922:	dec    edx
  41b923:	adc    dl,bh
  41b925:	inc    ebx
  41b926:	xchg   ecx,ecx
  41b928:	fwait
  41b929:	jge    0x41b8b8
  41b92b:	(bad)  [esi-0x177013fc]
  41b931:	cmc    
  41b932:	mov    al,ds:0x2f13abac
  41b937:	jo     0x41b945
  41b939:	jp     0x41b8d1
  41b93b:	imul   esp,DWORD PTR [eax-0x70],0x1a633b76
  41b942:	hlt    
  41b943:	dec    edi
  41b944:	xchg   DWORD PTR [esi+ebx*8+0x3a],eax
  41b948:	sub    bx,bx
  41b94b:	xor    al,0xd2
  41b94d:	retf   
  41b94e:	sbb    eax,0x35bbe4c0
  41b953:	dec    ebx
  41b954:	sar    BYTE PTR [ecx-0x2003c616],0xd3
  41b95b:	and    esi,ecx
  41b95d:	and    dh,BYTE PTR [ebx]
  41b95f:	inc    edi
  41b960:	bound  edi,QWORD PTR [esi]
  41b962:	(bad)  
  41b963:	mov    al,ds:0xe055a6b6
  41b968:	outs   dx,BYTE PTR ds:[esi]
  41b969:	invd   
  41b96b:	inc    edi
  41b96c:	xor    eax,0x26d6646
  41b971:	sahf   
  41b972:	pop    DWORD PTR [eax]
  41b974:	out    dx,al
  41b975:	cmp    cl,BYTE PTR [edx+0x5c]
  41b978:	push   ebx
  41b979:	mov    ebp,DWORD PTR [ecx-0x46]
  41b97c:	add    eax,0x85b2006a
  41b981:	cdq    
  41b982:	ret    
  41b983:	pusha  
  41b984:	lock mov cl,0x65
  41b987:	nop
  41b988:	jne    0x41b914
  41b98a:	test   eax,0x9464f764
  41b98f:	push   edx
  41b990:	sbb    eax,0xdbe1ac9
  41b995:	shr    DWORD PTR [edi+0x7550e130],0x6f
  41b99c:	cmp    ch,BYTE PTR [ecx-0x67]
  41b99f:	xchg   ebx,eax
  41b9a0:	rol    BYTE PTR [ebp+0x25],1
  41b9a3:	and    eax,0x8ea5ef5a
  41b9a8:	or     cl,0x60
  41b9ab:	inc    eax
  41b9ac:	xlat   BYTE PTR ds:[ebx]
  41b9ad:	mov    esi,DWORD PTR [edi-0x467322c5]
  41b9b3:	call   0x6159395d
  41b9b8:	cs out 0xeb,eax
  41b9bb:	mov    fs,eax
  41b9bd:	pop    edi
  41b9be:	fild   WORD PTR [eax+0x3c]
  41b9c1:	test   BYTE PTR [esi+0x262ea2b7],0x8c
  41b9c8:	sbb    eax,0xdcee9542
  41b9cd:	ror    BYTE PTR [edi],1
  41b9cf:	inc    ecx
  41b9d0:	aaa    
  41b9d1:	ficomp WORD PTR [edi-0x4a0f85a5]
  41b9d7:	sbb    DWORD PTR [eax+0x8cef428],esi
  41b9dd:	push   esp
  41b9de:	cmp    al,0x49
  41b9e0:	or     bl,BYTE PTR [edx+0x49591d2b]
  41b9e6:	pop    ebp
  41b9e7:	push   eax
  41b9e8:	cmp    DWORD PTR [ecx-0x74],ebp
  41b9eb:	xchg   edi,eax
  41b9ec:	mov    ah,0xac
  41b9ee:	add    esi,DWORD PTR [edi+0x3a]
  41b9f1:	int3   
  41b9f2:	test   al,0x4f
  41b9f5:	mov    ds:0xfd3150b2,eax
  41b9fa:	push   es
  41b9fb:	push   ecx
  41b9fc:	shl    ch,0x43
  41b9ff:	mov    eax,0x9da9f5ef
  41ba04:	jmp    0x41ba5f
  41ba06:	mov    eax,ds:0x3a9c744a
  41ba0b:	lds    edx,FWORD PTR [ecx-0x3a44f9a0]
  41ba11:	adc    DWORD PTR [eax],ebp
  41ba13:	sub    eax,DWORD PTR [edi+0x7f]
  41ba16:	aad    0xdf
  41ba18:	aas    
  41ba19:	lea    edx,[eax+0x3b]
  41ba1c:	pop    edx
  41ba1d:	and    esi,DWORD PTR [esi-0x76]
  41ba20:	sub    eax,0x2b4c1d9
  41ba25:	call   DWORD PTR [eax+0x3e]
  41ba28:	ret    
  41ba29:	rol    DWORD PTR [edx+0x37],cl
  41ba2c:	pop    ebx
  41ba2d:	inc    ebx
  41ba2e:	dec    esi
  41ba2f:	sub    dl,BYTE PTR [edx*2-0x1593a92f]
  41ba36:	pop    esi
  41ba37:	bound  eax,QWORD PTR [edx+0x1d]
  41ba3a:	pop    esi
  41ba3b:	retf   0x7e67
  41ba3e:	addr16 stc 
  41ba40:	sahf   
  41ba41:	rcr    DWORD PTR [edi+eax*8+0x552cd9dd],cl
  41ba48:	mov    ebp,0x4ec4bdb6
  41ba4d:	test   BYTE PTR [edx+edi*8],al
  41ba50:	fcmovb st,st(2)
  41ba52:	out    0x5a,eax
  41ba54:	sbb    DWORD PTR [ebx-0x80],ebp
  41ba57:	push   0x16
  41ba59:	arpl   bx,cx
  41ba5b:	sti    
  41ba5c:	dec    edx
  41ba5d:	xor    eax,0x21eeb772
  41ba63:	adc    eax,0xf840d0e3
  41ba68:	sar    DWORD PTR [ebp+edi*8+0x7d],0xc4
  41ba6d:	push   eax
  41ba6e:	sahf   
  41ba6f:	lahf   
  41ba70:	inc    edi
  41ba71:	cmp    eax,0xc1dc3558
  41ba76:	test   BYTE PTR [edx],ah
  41ba78:	popf   
  41ba79:	pop    ecx
  41ba7b:	out    0x8f,al
  41ba7d:	and    dh,al
  41ba7f:	push   0xffffffd1
  41ba81:	add    bh,BYTE PTR [eax+0x6c]
  41ba84:	ss push esp
  41ba86:	dec    ebp
  41ba87:	sbb    eax,DWORD PTR [edi-0x67d4e725]
  41ba8d:	mov    ds:0x42f85d47,eax
  41ba92:	je     0x41bab9
  41ba94:	out    0x4a,eax
  41ba96:	je     0x41bafc
  41ba98:	sbb    DWORD PTR [esi+ecx*2-0x4a],ebp
  41ba9c:	ja     0x41bab7
  41ba9e:	jns    0x41ba7b
  41baa0:	jge    0x41ba2f
  41baa2:	sbb    bh,BYTE PTR [eax]
  41baa4:	inc    ebx
  41baa5:	push   0x6fb1823a
  41baaa:	imul   edx,DWORD PTR [ebx+0x3b],0x16
  41baae:	pop    esp
  41baaf:	sub    dl,BYTE PTR [ebx]
  41bab1:	sub    cl,bh
  41bab3:	dec    eax
  41bab4:	fcomp  DWORD PTR [edi+0x4b]
  41bab7:	sbb    dl,BYTE PTR [esi]
  41bab9:	loope  0x41bada
  41babb:	mov    edi,0x465d0768
  41bac0:	retf   
  41bac1:	push   edi
  41bac2:	xlat   BYTE PTR ds:[ebx]
  41bac3:	xor    al,ah
  41bac5:	pop    esp
  41bac6:	shl    DWORD PTR [edi+0x46],cl
  41bac9:	xchg   esp,eax
  41baca:	cmp    eax,0xe6335d69
  41bacf:	test   al,0x23
  41bad1:	xor    ebx,DWORD PTR [eax+0x4c]
  41bad4:	jl     0x41baa5
  41bad6:	mov    WORD PTR [ebx],es
  41bad8:	push   eax
  41bad9:	out    0x13,eax
  41badb:	jp     0x41bb32
  41badd:	or     BYTE PTR [ecx-0x2f1109f8],cl
  41bae3:	mov    eax,ds:0x5ca7f1e3
  41bae8:	or     eax,0x22e55182
  41baed:	cmp    ah,bl
  41baef:	std    
  41baf0:	xchg   BYTE PTR [edx-0x27d1d43],dh
  41baf6:	mov    bh,0x84
  41baf8:	xchg   ebp,eax
  41baf9:	pop    ds
  41bafa:	inc    ebp
  41bafb:	mov    ebp,0x5c6fb
  41bb00:	clc    
  41bb01:	test   DWORD PTR ds:0x6d77586c,0x945f5c1c
  41bb0b:	xchg   BYTE PTR [edx+0x62eef5c4],bl
  41bb11:	dec    edi
  41bb12:	lods   al,BYTE PTR ds:[esi]
  41bb13:	call   0xf156:0x8936c187
  41bb1a:	mov    al,0x3e
  41bb1c:	adc    DWORD PTR [edi],ecx
  41bb1e:	imul   ebx,DWORD PTR [ebx+0x6471e512],0x6b93b7e6
  41bb28:	outs   dx,DWORD PTR ds:[esi]
  41bb29:	retf   
  41bb2a:	jge    0x41bb8e
  41bb2c:	mov    eax,ds:0xa8b94737
  41bb31:	add    esp,DWORD PTR [edx+0x28]
  41bb34:	sub    al,0x96
  41bb36:	push   es
  41bb37:	jle    0x41bafc
  41bb39:	cwde   
  41bb3a:	call   0xb00ef697
  41bb3f:	mov    ebp,0xb2b75089
  41bb44:	inc    edi
  41bb45:	mov    WORD PTR [edx],cs
  41bb47:	pop    ss
  41bb48:	test   BYTE PTR [esi],ah
  41bb4a:	sub    eax,0x889ceeb8
  41bb4f:	in     al,dx
  41bb50:	sbb    al,0x2c
  41bb52:	push   edx
  41bb53:	scas   eax,DWORD PTR es:[edi]
  41bb54:	call   0xaad39f0
  41bb59:	jno    0x41bbc5
  41bb5b:	mov    DWORD PTR [edx+0x2a],eax
  41bb5e:	fild   QWORD PTR [edx-0x4b]
  41bb61:	test   DWORD PTR [edi],ebx
  41bb63:	outs   dx,DWORD PTR ds:[esi]
  41bb64:	pop    ds
  41bb65:	mov    ds,WORD PTR [edx+0x67]
  41bb68:	pop    edx
  41bb69:	adc    al,0x47
  41bb6b:	popa   
  41bb6c:	mov    ebp,0x42a5e739
  41bb71:	inc    esi
  41bb72:	push   ss
  41bb73:	pop    ss
  41bb74:	shl    DWORD PTR [ebp-0x4031d4e8],cl
  41bb7a:	pusha  
  41bb7b:	retf   0x50df
  41bb7e:	std    
  41bb7f:	mov    bl,0x84
  41bb81:	add    BYTE PTR [edi+0x850e780],bh
  41bb87:	out    dx,al
  41bb88:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41bb89:	popf   
  41bb8a:	adc    eax,0x1aff3ddb
  41bb8f:	mov    ebx,0xf7656eb9
  41bb94:	add    dl,BYTE PTR es:[edi+0x5a7dddd]
  41bb9b:	rol    BYTE PTR [ecx+0x8],cl
  41bb9e:	pop    edx
  41bb9f:	jmp    0x9523:0xbfa403c2
  41bba6:	into   
  41bba7:	pop    es
  41bba8:	push   ebp
  41bba9:	rcr    BYTE PTR [ecx],1
  41bbab:	xchg   ecx,eax
  41bbac:	ror    bh,0x98
  41bbaf:	popa   
  41bbb0:	pop    edx
  41bbb1:	cwde   
  41bbb2:	sub    bl,BYTE PTR [ecx]
  41bbb4:	inc    edx
  41bbb5:	ror    BYTE PTR [ebx],cl
  41bbb7:	icebp  
  41bbb8:	and    al,BYTE PTR [esi-0x556a46d0]
  41bbbe:	pop    ebx
  41bbbf:	mov    ecx,0xde89b639
  41bbc4:	xor    BYTE PTR [ebp+0x31],dh
  41bbc7:	out    0x91,eax
  41bbc9:	or     eax,0x9ad58b
  41bbce:	cld    
  41bbcf:	ret    0x15f9
  41bbd2:	xchg   ebx,eax
  41bbd3:	ss add eax,0xf0438fcb
  41bbd9:	xor    BYTE PTR [esi-0x71f8ac1e],bh
  41bbdf:	psubusb mm2,mm6
  41bbe2:	lock ins BYTE PTR es:[edi],dx
  41bbe4:	rol    DWORD PTR ds:0xe314fcf8,1
  41bbea:	sub    esi,DWORD PTR [edi+0x7aea6614]
  41bbf0:	adc    BYTE PTR [ecx-0x301c9189],al
  41bbf6:	pop    es
  41bbf7:	push   ss
  41bbf8:	push   ebp
  41bbf9:	sub    al,0x76
  41bbfb:	stos   BYTE PTR es:[edi],al
  41bbfc:	jmp    0x2e86:0xcaca9870
  41bc03:	sub    eax,0x4c9cf999
  41bc08:	mov    bh,0x3d
  41bc0a:	out    0x98,al
  41bc0c:	pop    ebp
  41bc0d:	loop   0x41bc56
  41bc0f:	sub    cl,BYTE PTR [edi+0x42]
  41bc12:	jecxz  0x41bbe0
  41bc14:	mov    al,0x39
  41bc16:	pop    ss
  41bc17:	retf   
  41bc18:	xor    dh,BYTE PTR [edx+esi*2-0x4f]
  41bc1c:	rcl    BYTE PTR [ecx+0x2d],1
  41bc1f:	or     BYTE PTR [ebx+0x5e],al
  41bc22:	add    BYTE PTR [ecx+0x2],dh
  41bc25:	(bad)  
  41bc26:	pop    ebx
  41bc27:	mov    dh,0xdb
  41bc29:	adc    al,0x27
  41bc2b:	arpl   bx,si
  41bc2d:	scas   al,BYTE PTR es:[edi]
  41bc2e:	mov    WORD PTR [esi],?
  41bc30:	ret    
  41bc31:	add    edi,DWORD PTR [edi]
  41bc33:	inc    ebp
  41bc34:	(bad)  
  41bc35:	jecxz  0x41bcb6
  41bc37:	pop    DWORD PTR [esi]
  41bc39:	pop    DWORD PTR [edx-0x7e15a198]
  41bc3f:	dec    ebp
  41bc40:	mov    al,ds:0xee7846d1
  41bc45:	push   edi
  41bc46:	mov    eax,es:0x36d388fd
  41bc4c:	(bad)  
  41bc4d:	(bad)  
  41bc4e:	stos   BYTE PTR es:[edi],al
  41bc4f:	push   eax
  41bc50:	cdq    
  41bc51:	je     0x41bc75
  41bc53:	push   es
  41bc54:	or     cl,al
  41bc56:	jg     0x41bc13
  41bc58:	lods   al,BYTE PTR ds:[esi]
  41bc59:	mov    eax,0xf33eaa8f
  41bc5e:	es loop 0x41bc7a
  41bc61:	bound  ebp,QWORD PTR [eax+esi*2+0x64fd68cf]
  41bc68:	inc    edi
  41bc69:	jae    0x41bc84
  41bc6b:	ret    0x6858
  41bc6e:	or     DWORD PTR [edx*1+0x5a489488],esp
  41bc75:	push   edi
  41bc76:	or     bh,BYTE PTR [esi]
  41bc78:	push   ecx
  41bc79:	add    BYTE PTR [edi-0x80],dh
  41bc7c:	jbe    0x41bcf8
  41bc7e:	hlt    
  41bc7f:	sub    al,0x51
  41bc81:	iretw  
  41bc83:	push   esi
  41bc84:	test   DWORD PTR [ecx+0x76da2ea4],ecx
  41bc8a:	sbb    eax,0x33d20aea
  41bc8f:	xor    esi,ebp
  41bc91:	mov    edx,0xb80d2313
  41bc96:	(bad)  
  41bc97:	in     eax,0xa3
  41bc99:	repnz leave 
  41bc9b:	push   es
  41bc9c:	sbb    edi,ebx
  41bc9e:	pop    ds
  41bc9f:	jno    0x41bd19
  41bca1:	mov    ebp,0x1f31b87c
  41bca6:	mov    ecx,0xed75af3
  41bcab:	mov    ds:0x93559b14,eax
  41bcb0:	jno    0x41bc96
  41bcb2:	scas   al,BYTE PTR es:[edi]
  41bcb3:	inc    ebp
  41bcb4:	push   ebx
  41bcb5:	mov    WORD PTR [edx],gs
  41bcb7:	nop
  41bcb8:	lods   al,BYTE PTR ds:[esi]
  41bcb9:	icebp  
  41bcba:	inc    al
  41bcbc:	jne    0x41bc83
  41bcbe:	dec    esp
  41bcbf:	fist   WORD PTR [edi]
  41bcc1:	and    ch,al
  41bcc3:	clc    
  41bcc4:	sbb    al,0x7e
  41bcc6:	jo     0x41bd44
  41bcc8:	mov    edx,esp
  41bcca:	arpl   WORD PTR [edi+ebp*8],bx
  41bccd:	fsubr  QWORD PTR [eax-0x28]
  41bcd0:	pushf  
  41bcd1:	xor    al,0xe8
  41bcd3:	int3   
  41bcd4:	inc    ebp
  41bcd5:	sbb    ecx,eax
  41bcd7:	adc    al,0xbf
  41bcd9:	aad    0xf9
  41bcdb:	mov    cs,WORD PTR [edx-0x3d]
  41bcde:	ficomp WORD PTR [ebx+0x6807fe2f]
  41bce4:	enter  0x7812,0x9e
  41bce8:	add    BYTE PTR ds:0xcc9ef2d4,cl
  41bcee:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41bcef:	test   al,0x50
  41bcf1:	or     DWORD PTR [edi+0x644ab322],esi
  41bcf7:	cmp    BYTE PTR [edi-0x40bbdc0a],bl
  41bcfd:	outs   dx,BYTE PTR ds:[esi]
  41bcfe:	cdq    
  41bcff:	push   cs
  41bd00:	cmp    edi,esi
  41bd02:	lahf   
  41bd03:	mov    ah,BYTE PTR [ebp+0x44149879]
  41bd09:	xchg   esp,eax
  41bd0a:	into   
  41bd0b:	mov    bh,0x69
  41bd0d:	push   eax
  41bd0e:	pop    ds
  41bd0f:	mov    edi,gs
  41bd11:	stos   DWORD PTR es:[edi],eax
  41bd12:	fcomi  st,st(5)
  41bd14:	retf   
  41bd15:	adc    DWORD PTR [ebp-0x163e92fb],esi
  41bd1b:	add    al,0x1f
  41bd1d:	jmp    0xa396:0x14fd1aad
  41bd24:	push   esp
  41bd25:	and    esi,0x16f5b28
  41bd2b:	in     eax,0xb1
  41bd2d:	aam    0x94
  41bd2f:	cmp    dh,al
  41bd31:	cld    
  41bd32:	shl    BYTE PTR [ecx-0x62],cl
  41bd35:	mov    bh,0xa3
  41bd37:	loope  0x41bd37
  41bd39:	test   al,0xe2
  41bd3b:	add    DWORD PTR [ebx-0x6b9eef0c],edx
  41bd41:	icebp  
  41bd42:	pop    ss
  41bd43:	jg     0x41bccd
  41bd45:	or     al,0xed
  41bd47:	(bad)  [eax+ebp*2-0x2b]
  41bd4b:	pusha  
  41bd4c:	lock fisub DWORD PTR [esi+0xac308f1]
  41bd53:	mov    ds:0x93a4d18,al
  41bd58:	dec    ebx
  41bd59:	xchg   edx,eax
  41bd5a:	(bad)  
  41bd5b:	(bad)  
  41bd5c:	scas   al,BYTE PTR es:[edi]
  41bd5d:	sub    dx,WORD PTR [ecx+eiz*4-0x6a]
  41bd62:	xor    al,0xbb
  41bd64:	rcr    DWORD PTR [edi+0x1191c881],0xde
  41bd6b:	pop    edi
  41bd6c:	les    esp,FWORD PTR [esi-0x6188ce5a]
  41bd72:	out    0x9e,al
  41bd74:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41bd75:	repz mov edx,0x74d95a14
  41bd7b:	hlt    
  41bd7c:	or     al,0x73
  41bd7e:	jb     0x41bd43
  41bd80:	push   ecx
  41bd81:	xchg   ebx,eax
  41bd82:	jns    0x41bdf0
  41bd84:	inc    edx
  41bd85:	pop    esi
  41bd86:	push   ebx
  41bd87:	test   BYTE PTR [ebx],bl
  41bd89:	daa    
  41bd8a:	addr16 pop es
  41bd8c:	xor    cl,bh
  41bd8e:	jle    0x41bd84
  41bd90:	fcos   
  41bd93:	mov    edi,0xcb448095
  41bd98:	jmp    0x900:0x96a72083
  41bd9f:	xor    DWORD PTR [eax+ecx*8-0x69],ecx
  41bda3:	mov    dh,0xcf
  41bda5:	fnstsw WORD PTR [eax+0x312b3015]
  41bdab:	mov    dh,0x65
  41bdad:	xor    al,0xea
  41bdaf:	cmp    al,0xc7
  41bdb1:	out    dx,eax
  41bdb2:	clc    
  41bdb3:	xchg   ebp,eax
  41bdb4:	lahf   
  41bdb5:	outs   dx,DWORD PTR ds:[esi]
  41bdb6:	les    esi,FWORD PTR [ebx]
  41bdb8:	in     eax,dx
  41bdb9:	aas    
  41bdba:	data16 adc BYTE PTR [edi-0x2e],bl
  41bdbe:	(bad)  [eax]
  41bdc0:	rcl    dh,cl
  41bdc2:	inc    ebx
  41bdc3:	scas   eax,DWORD PTR es:[edi]
  41bdc4:	xchg   esp,eax
  41bdc5:	lahf   
  41bdc6:	xchg   ecx,eax
  41bdc7:	dec    esp
  41bdc8:	cwde   
  41bdc9:	stc    
  41bdca:	or     eax,0x37e6f71a
  41bdcf:	inc    esp
  41bdd0:	lods   eax,DWORD PTR ds:[esi]
  41bdd1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41bdd2:	int    0x9e
  41bdd4:	mov    DWORD PTR [eax+0xbeb4fe4],edi
  41bdda:	pop    edi
  41bddb:	sbb    ebp,DWORD PTR [edx+0x16f66502]
  41bde1:	iret   
  41bde2:	jae    0x41be63
  41bde4:	adc    al,0x56
  41bde6:	mov    dh,0x54
  41bde8:	in     al,dx
  41bde9:	sbb    ah,ch
  41bdeb:	xchg   ecx,eax
  41bdec:	jo     0x41bdb3
  41bdee:	xlat   BYTE PTR ds:[ebx]
  41bdef:	mov    ebp,0x226300be
  41bdf4:	lea    edx,[eax+0x25]
  41bdf7:	pop    edi
  41bdf8:	add    ah,ah
  41bdfa:	jecxz  0x41bdbb
  41bdfc:	fcom   QWORD PTR [ebx+0x7aeb2712]
  41be02:	inc    ecx
  41be03:	fisubr WORD PTR [edi-0x1]
  41be06:	mov    edx,0x1c36da1d
  41be0b:	aad    0x13
  41be0d:	inc    edi
  41be0e:	mov    dh,0x4e
  41be10:	xor    eax,0x3ac143
  41be15:	stos   BYTE PTR es:[edi],al
  41be16:	xor    eax,0xd4bd35d3
  41be1b:	xchg   ecx,eax
  41be1c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41be1d:	mov    gs,WORD PTR [edi+0x66d431f9]
  41be23:	loope  0x41bdb6
  41be25:	std    
  41be26:	aaa    
  41be27:	imul   ch
  41be29:	jnp    0x41bdcf
  41be2b:	(bad)  
  41be2c:	push   ebx
  41be2d:	int3   
  41be2e:	js     0x41bdf1
  41be30:	add    bl,ah
  41be32:	ss or  eax,0x191aa3f3
  41be38:	sub    DWORD PTR [ebp-0x31],edx
  41be3b:	pop    ss
  41be3c:	out    0xf0,eax
  41be3e:	cld    
  41be3f:	xor    eax,0xbdab3e59
  41be44:	arpl   si,dx
  41be46:	sbb    DWORD PTR [ecx+ebx*8],0x5d
  41be4a:	push   0x76943186
  41be4f:	mov    ch,0xc0
  41be51:	fs cs scas eax,DWORD PTR es:[edi]
  41be54:	jmp    DWORD PTR ds:0xfb8a13e8
  41be5a:	dec    ebp
  41be5b:	(bad)  
  41be5c:	test   eax,0x958d5298
  41be61:	outs   dx,BYTE PTR ds:[esi]
  41be62:	leave  
  41be63:	mov    eax,ds:0x705c7088
  41be68:	aas    
  41be69:	js     0x41be30
  41be6b:	mov    ebp,DWORD PTR [edx-0x1f6a5ae7]
  41be71:	clc    
  41be72:	stos   BYTE PTR es:[edi],al
  41be73:	sbb    DWORD PTR [ebx+0x50],edi
  41be76:	(bad)  
  41be77:	lock les ebp,FWORD PTR [ebx]
  41be7a:	out    dx,eax
  41be7b:	adc    ebx,eax
  41be7d:	fld    DWORD PTR [ebx+0x716d1590]
  41be83:	add    bl,BYTE PTR [esi-0x14be2e20]
  41be89:	je     0x41be0f
  41be8b:	test   eax,0x5eb2002f
  41be90:	pop    ss
  41be91:	xchg   ecx,eax
  41be92:	pop    ss
  41be93:	hlt    
  41be94:	sbb    DWORD PTR [esi-0x2bac6539],ebp
  41be9a:	out    0xf5,al
  41be9c:	aam    0x5f
  41be9e:	push   edi
  41be9f:	cmp    eax,ebx
  41bea1:	aaa    
  41bea2:	sub    eax,0x646d9ae1
  41bea7:	popf   
  41bea8:	add    esi,DWORD PTR [esp+esi*8-0x2f]
  41beac:	iret   
  41bead:	aad    0x26
  41beaf:	dec    edx
  41beb0:	(bad)  
  41beb2:	out    0x8d,al
  41beb4:	hlt    
  41beb5:	xchg   edx,eax
  41beb6:	jmp    0x471cdc17
  41bebb:	pop    esp
  41bebc:	inc    ebp
  41bebd:	sar    ecx,0xb
  41bec0:	xchg   edx,eax
  41bec1:	mov    ds:0xc67e1fd9,al
  41bec6:	icebp  
  41bec7:	ret    
  41bec8:	adc    ecx,ebp
  41beca:	mov    esp,DWORD PTR [edi]
  41becc:	adc    ebx,DWORD PTR gs:[edx-0x16]
  41bed0:	imul   edx,DWORD PTR [edi-0x6509ccf4],0xb
  41bed7:	ret    
  41bed8:	popf   
  41bed9:	push   0xffffff95
  41bedb:	out    0x8,al
  41bedd:	mov    eax,0x91f12168
  41bee2:	ins    BYTE PTR es:[edi],dx
  41bee3:	jge    0x41bed3
  41bee5:	imul   edi,DWORD PTR [ebx+0x65],0x70
  41bee9:	cwde   
  41beea:	cdq    
  41beeb:	cmp    edi,eax
  41beed:	fidiv  WORD PTR [edi+0x2f35a0cf]
  41bef3:	cmp    al,0xe8
  41bef5:	in     al,dx
  41bef6:	dec    edx
  41bef7:	push   ss
  41bef8:	xchg   ebp,eax
  41bef9:	test   BYTE PTR [edx+0x25],0x6c
  41befd:	push   cs
  41befe:	icebp  
  41beff:	lods   eax,DWORD PTR ds:[esi]
  41bf00:	loope  0x41bf1e
  41bf02:	adc    eax,0x6d7cda64
  41bf07:	dec    ebx
  41bf08:	in     al,0x86
  41bf0a:	mov    eax,ds:0xfcdd452e
  41bf0f:	int    0x9e
  41bf11:	and    edi,esp
  41bf13:	cmp    BYTE PTR [edi],bl
  41bf15:	fnstcw WORD PTR [edi]
  41bf17:	cmp    edi,ecx
  41bf19:	sub    ecx,DWORD PTR [ebx-0x5ff5fe57]
  41bf1f:	or     ch,al
  41bf21:	sub    al,0x83
  41bf23:	popa   
  41bf24:	xchg   BYTE PTR [ecx-0x11],cl
  41bf27:	jmp    0xaf0e:0xbb7d9dd8
  41bf2e:	adc    bl,BYTE PTR [edi+edx*2+0x3f]
  41bf32:	sti    
  41bf33:	rcl    DWORD PTR [ecx-0x1a],cl
  41bf36:	push   ss
  41bf37:	pop    ecx
  41bf38:	dec    ecx
  41bf39:	fs jmp 0x41befe
  41bf3c:	out    dx,al
  41bf3d:	imul   eax,edx,0xffffffb5
  41bf40:	pop    DWORD PTR [ebp+0x14]
  41bf43:	and    ecx,DWORD PTR [edi-0x79]
  41bf46:	xchg   ecx,eax
  41bf47:	(bad)  
  41bf48:	stos   DWORD PTR es:[edi],eax
  41bf49:	daa    
  41bf4a:	xchg   DWORD PTR [edx+ecx*4+0x7f],edx
  41bf4e:	test   al,0xc2
  41bf50:	out    0x52,eax
  41bf52:	jg     0x41bef5
  41bf54:	mov    al,0x58
  41bf56:	add    DWORD PTR [ebp-0x7b],0xffffffcb
  41bf5a:	sub    esp,DWORD PTR [edi-0x34]
  41bf5d:	add    ah,ah
  41bf5f:	addr16 xor al,0x63
  41bf62:	cwde   
  41bf63:	pop    ecx
  41bf64:	hlt    
  41bf65:	xchg   edx,eax
  41bf66:	xchg   BYTE PTR [ebx+0xd28815],bh
  41bf6c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41bf6d:	adc    bl,BYTE PTR [ecx]
  41bf6f:	clc    
  41bf70:	jno    0x41bf45
  41bf72:	cmc    
  41bf73:	outs   dx,BYTE PTR ds:[esi]
  41bf74:	popa   
  41bf75:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41bf76:	jecxz  0x41bf88
  41bf78:	cwde   
  41bf79:	jne    0x41bfad
  41bf7b:	jmp    0xfc845afa
  41bf80:	pushf  
  41bf81:	fist   WORD PTR [edi-0x74]
  41bf84:	add    BYTE PTR [ebx],bl
  41bf86:	jae    0x41bf1d
  41bf88:	xchg   ebp,eax
  41bf89:	rol    bl,cl
  41bf8b:	sub    eax,0x786d67ee
  41bf90:	xchg   esi,eax
  41bf91:	enter  0xc917,0x80
  41bf95:	mov    esi,DWORD PTR [eax+edx*4-0x34]
  41bf99:	lds    ebp,FWORD PTR [ebp*4-0x420ea3c4]
  41bfa0:	(bad)  
  41bfa1:	pop    ds
  41bfa2:	cdq    
  41bfa3:	mov    ecx,0x1afb2ed7
  41bfa8:	js     0x41c016
  41bfaa:	push   ebx
  41bfab:	sub    BYTE PTR [edx],cl
  41bfad:	pop    esp
  41bfae:	scas   eax,DWORD PTR es:[edi]
  41bfaf:	dec    ebx
  41bfb0:	jne    0x41c006
  41bfb2:	add    eax,0x8bf99fdb
  41bfb7:	inc    eax
  41bfb8:	stc    
  41bfb9:	repz in eax,0x72
  41bfbc:	pop    esi
  41bfbd:	rcr    BYTE PTR [ebp-0x529707e],0x87
  41bfc4:	mov    al,ds:0xfc443d36
  41bfc9:	shl    DWORD PTR [edx],0x77
  41bfcc:	fcom   QWORD PTR ds:0x78c7338
  41bfd2:	imul   ebp
  41bfd4:	out    0x8e,eax
  41bfd6:	jb     0x41c034
  41bfd8:	sub    eax,0xf5cd2e26
  41bfdd:	xchg   DWORD PTR [ebx+0x28],edx
  41bfe0:	push   es
  41bfe1:	shl    eax,0x16
  41bfe4:	mov    DWORD PTR [ebp-0xc],edi
  41bfe7:	lods   al,BYTE PTR ds:[esi]
  41bfe8:	push   cs
  41bfe9:	and    DWORD PTR [esi],esi
  41bfeb:	sub    eax,esp
  41bfed:	scas   al,BYTE PTR es:[edi]
  41bfee:	scas   eax,DWORD PTR es:[edi]
  41bfef:	cli    
  41bff0:	adc    DWORD PTR [ebp-0x3d],esi
  41bff3:	lahf   
  41bff4:	dec    eax
  41bff5:	aam    0x15
  41bff7:	xchg   ebx,eax
  41bff8:	mov    eax,ds:0x2ab8fa55
  41bffd:	xchg   ecx,eax
  41bffe:	iret   
  41bfff:	ret    0xa6ad
  41c002:	icebp  
  41c003:	(bad)  
  41c004:	(bad)  
  41c005:	xchg   edx,eax
  41c006:	lds    ebp,FWORD PTR [edi-0x5810acb3]
  41c00c:	(bad)  
  41c00e:	push   edx
  41c00f:	test   BYTE PTR [eax+0x4186fbf0],0x5a
  41c016:	sbb    BYTE PTR cs:[esi+0x4b],bh
  41c01a:	mov    al,0xf2
  41c01c:	sub    dl,BYTE PTR [esi]
  41c01e:	xchg   esi,eax
  41c01f:	out    0xac,eax
  41c021:	cmp    BYTE PTR [edi+0x3683d22a],cl
  41c027:	jle    0x41c016
  41c029:	cmp    dl,BYTE PTR es:[esi]
  41c02c:	sub    ebx,DWORD PTR [ebp+0x2514df9a]
  41c032:	mov    cl,0xa7
  41c034:	xchg   edi,eax
  41c035:	das    
  41c036:	pop    edx
  41c037:	mov    esp,0x1e3604a7
  41c03c:	add    eax,0x32ba351d
  41c041:	sbb    al,0x78
  41c043:	pop    ss
  41c044:	dec    esi
  41c045:	cmp    BYTE PTR [esi+0x13164b7e],0x30
  41c04c:	inc    edx
  41c04d:	push   edi
  41c04e:	stc    
  41c04f:	(bad)  
  41c051:	pop    ebx
  41c052:	mov    ch,0x43
  41c054:	sub    cl,BYTE PTR [eax]
  41c056:	popf   
  41c057:	pop    ecx
  41c058:	pop    ds
  41c059:	fwait
  41c05a:	push   gs
  41c05c:	icebp  
  41c05d:	sar    BYTE PTR [ecx+0x35e71d26],cl
  41c063:	cmp    ecx,0x4b9458b1
  41c069:	and    DWORD PTR [edx],edx
  41c06b:	ins    BYTE PTR es:[edi],dx
  41c06c:	cmp    BYTE PTR [eax],ch
  41c06e:	add    esp,esp
  41c070:	data16 div BYTE PTR [esi+0x37]
  41c074:	jo     0x41c0ce
  41c076:	clc    
  41c077:	outs   dx,BYTE PTR ds:[esi]
  41c078:	adc    eax,0xe4644be6
  41c07d:	xchg   ecx,eax
  41c07e:	leave  
  41c07f:	pop    ebx
  41c080:	push   esp
  41c081:	icebp  
  41c082:	je     0x41c065
  41c084:	or     DWORD PTR [ecx-0x12],esp
  41c087:	lahf   
  41c088:	add    al,0x25
  41c08a:	inc    esi
  41c08b:	mov    cl,0xf
  41c08d:	xchg   ah,ah
  41c08f:	mov    bl,0x87
  41c091:	or     BYTE PTR [ebx-0x79d760c1],ah
  41c097:	dec    esi
  41c098:	jne    0x41c054
  41c09a:	mov    ebx,0x9119a056
  41c09f:	push   ss
  41c0a0:	fldcw  WORD PTR [ebp+0x31]
  41c0a3:	mov    bl,0x88
  41c0a5:	lock lock xchg ebp,eax
  41c0a8:	sbb    eax,DWORD PTR [ebx-0x49]
  41c0ab:	jg     0x41c058
  41c0ad:	push   edi
  41c0ae:	xor    al,0x60
  41c0b0:	add    dl,BYTE PTR [ebx-0x54b575c8]
  41c0b6:	sub    dh,BYTE PTR [ebp+0x7e]
  41c0b9:	or     eax,0xc6495ee8
  41c0be:	inc    eax
  41c0bf:	xchg   edi,eax
  41c0c0:	and    DWORD PTR [esp+ebp*2-0x3ac004c2],0x38b100dc
  41c0cb:	ds aam 0x7a
  41c0ce:	lea    esi,[edx]
  41c0d0:	shl    edx,0xa1
  41c0d3:	sub    eax,0xcd3b8592
  41c0d8:	nop
  41c0d9:	adc    BYTE PTR [ebx+eax*2],dh
  41c0dc:	mov    eax,0x66962bcd
  41c0e1:	lock cdq 
  41c0e3:	sbb    dh,cl
  41c0e5:	xor    eax,0xab30ee0b
  41c0ea:	stos   BYTE PTR es:[edi],al
  41c0eb:	pop    eax
  41c0ec:	mov    bl,0x47
  41c0ee:	and    al,0x7e
  41c0f0:	test   edi,eax
  41c0f2:	out    dx,al
  41c0f3:	sub    DWORD PTR [esi+0x361f0325],esi
  41c0f9:	inc    eax
  41c0fa:	pop    ss
  41c0fb:	xchg   DWORD PTR [edx],ebx
  41c0fd:	test   eax,0x5aefc968
  41c102:	ins    BYTE PTR es:[edi],dx
  41c103:	xchg   esp,eax
  41c104:	ss fcomip st,st(0)
  41c107:	cmp    eax,0xefbb58e2
  41c10c:	pop    ebx
  41c10d:	clc    
  41c10e:	sub    al,0xa4
  41c110:	cmp    ch,BYTE PTR [ecx+esi*4+0x15]
  41c114:	mov    bh,0x17
  41c116:	mov    bh,dh
  41c118:	stc    
  41c119:	or     DWORD PTR [eax+0x1e],eax
  41c11c:	add    ah,BYTE PTR [ebx-0x7]
  41c11f:	dec    ebp
  41c120:	les    ebx,FWORD PTR [ebp-0x76ff6616]
  41c126:	into   
  41c127:	mov    ebp,0x823ae1e1
  41c12c:	xlat   BYTE PTR ds:[ebx]
  41c12d:	jno    0x41c18f
  41c12f:	pop    ds
  41c130:	aad    0xde
  41c132:	pop    edi
  41c133:	(bad)  
  41c134:	xor    ch,BYTE PTR [ecx-0x26]
  41c137:	add    ch,BYTE PTR [edx+0x3a1b457b]
  41c13d:	in     eax,0x22
  41c13f:	jo     0x41c0eb
  41c141:	xchg   esi,eax
  41c142:	mov    edi,0x37c8a9c8
  41c147:	stos   DWORD PTR es:[edi],eax
  41c148:	push   edx
  41c149:	mov    al,ds:0x28213843
  41c14e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c14f:	mov    al,ds:0xbf0f947b
  41c154:	shr    BYTE PTR ds:0x5082df40,cl
  41c15a:	mov    ecx,0xcc01fe29
  41c15f:	xor    DWORD PTR [edi-0x7f68a5ee],ebx
  41c165:	(bad)  
  41c166:	sbb    bh,dh
  41c168:	in     eax,dx
  41c169:	jp     0x41c14c
  41c16b:	adc    al,BYTE PTR [esi+0x46]
  41c16e:	iret   
  41c16f:	jbe    0x41c0fd
  41c171:	xchg   DWORD PTR [ebx+0x2d3bf201],esp
  41c177:	les    esi,FWORD PTR [esp+ecx*1-0x71]
  41c17b:	add    al,0x7
  41c17d:	out    dx,eax
  41c17e:	in     al,0x77
  41c180:	inc    esi
  41c181:	jp     0x41c1ab
  41c183:	fidiv  DWORD PTR [esi+0x3359c071]
  41c189:	pop    edx
  41c18a:	mov    ebp,DWORD PTR [edx+ebx*2-0x5b]
  41c18e:	enter  0x2429,0xb
  41c192:	nop
  41c193:	xor    dl,ch
  41c195:	dec    esp
  41c196:	out    dx,al
  41c197:	shr    edi,cl
  41c199:	cmp    al,0xbe
  41c19b:	test   eax,0x6d2305e
  41c1a0:	mov    dh,0xd0
  41c1a2:	push   esi
  41c1a3:	pop    ds
  41c1a4:	mov    DWORD PTR [ebx+0x4e],ebp
  41c1a7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c1a8:	pop    ds
  41c1a9:	sub    al,0x38
  41c1ab:	push   eax
  41c1ac:	push   edi
  41c1ad:	std    
  41c1ae:	mov    edx,0x97fe67be
  41c1b3:	add    BYTE PTR [ebp+0x5a],dl
  41c1b6:	pushf  
  41c1b7:	int    0x53
  41c1b9:	lods   eax,DWORD PTR ds:[esi]
  41c1ba:	dec    ebx
  41c1bb:	outs   dx,DWORD PTR ds:[esi]
  41c1bc:	or     eax,0xfe3578d1
  41c1c1:	jle    0x41c1d5
  41c1c3:	clc    
  41c1c4:	(bad)  
  41c1c5:	in     eax,dx
  41c1c6:	and    ebp,DWORD PTR [esi]
  41c1c8:	sbb    esi,DWORD PTR [ebp-0x557cb4f8]
  41c1ce:	mov    ?,WORD PTR [edx+0x7c]
  41c1d1:	inc    ebx
  41c1d3:	dec    ebx
  41c1d4:	int3   
  41c1d5:	ret    0x10dc
  41c1d8:	jne    0x41c259
  41c1da:	(bad)  
  41c1db:	xor    eax,DWORD PTR ds:0x3f177858
  41c1e1:	clc    
  41c1e2:	push   edx
  41c1e3:	sbb    al,ah
  41c1e5:	mov    fs,WORD PTR [edi+0x6]
  41c1e8:	stos   BYTE PTR es:[edi],al
  41c1e9:	fs das 
  41c1eb:	jno    0x41c1de
  41c1ed:	lea    ebp,[edx]
  41c1ef:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c1f0:	int3   
  41c1f1:	js     0x41c195
  41c1f3:	fdiv   st,st(0)
  41c1f5:	cmp    eax,0x43273d33
  41c1fa:	addr16 cmp al,0x6
  41c1fd:	mov    edi,0xf755c3c7
  41c202:	dec    BYTE PTR [esp+esi*2-0x35e19a71]
  41c209:	lahf   
  41c20a:	or     ch,cl
  41c20c:	adc    ecx,ebx
  41c20e:	add    eax,0x7940f661
  41c213:	(bad)  
  41c214:	jns    0x41c244
  41c216:	cs loopne 0x41c262
  41c219:	mov    edx,edx
  41c21b:	jbe    0x41c238
  41c21d:	mov    ecx,0xc75a4ea2
  41c222:	dec    edx
  41c223:	add    DWORD PTR [esi],eax
  41c225:	mov    cl,bl
  41c227:	aaa    
  41c228:	jmp    DWORD PTR [ebp-0x6621d856]
  41c22e:	push   ds
  41c22f:	push   ds
  41c230:	fist   DWORD PTR [edx+0x1b]
  41c233:	pop    ecx
  41c234:	gs push esi
  41c236:	(bad)  
  41c238:	fmul   QWORD PTR ds:0xc50566a
  41c23e:	mov    ebx,0x8b916109
  41c243:	xchg   edi,eax
  41c244:	outs   dx,DWORD PTR ds:[esi]
  41c245:	push   esi
  41c246:	nop
  41c247:	frstor [edx+0x26]
  41c24a:	and    BYTE PTR [eax-0x3eb8fcd4],ah
  41c250:	das    
  41c251:	or     ax,0x6880
  41c255:	adc    al,0x87
  41c257:	xor    edi,esp
  41c259:	mov    edx,0x7428cbc1
  41c25e:	pop    ds
  41c25f:	cmp    BYTE PTR [ebx-0x49],dh
  41c262:	aas    
  41c263:	les    ecx,FWORD PTR [edx+ebx*4]
  41c266:	addr16 es mov edi,0xada01a4a
  41c26d:	(bad)  
  41c26e:	cmovl  ebp,ebx
  41c271:	test   DWORD PTR [eax],esi
  41c273:	dec    eax
  41c274:	retf   0xd123
  41c277:	jno    0x41c2b3
  41c279:	js     0x41c205
  41c27b:	daa    
  41c27c:	adc    edx,DWORD PTR [edx+0x2f]
  41c27f:	out    0x26,al
  41c281:	mov    edi,ss
  41c283:	(bad)  
  41c284:	cmp    esi,DWORD PTR [ecx-0x1f]
  41c287:	mov    esi,0x55f9f7c4
  41c28c:	test   BYTE PTR [eax-0x6e1de9df],ah
  41c292:	mov    eax,0xe89d85d6
  41c297:	cli    
  41c298:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c299:	gs or  ecx,0x6f9e790d
  41c2a0:	and    DWORD PTR [esi-0x2c],esi
  41c2a3:	xchg   ebx,eax
  41c2a4:	or     bh,bl
  41c2a6:	sbb    al,al
  41c2a8:	jmp    0x41c2bf
  41c2aa:	push   eax
  41c2ab:	push   ds
  41c2ac:	lods   al,BYTE PTR ds:[esi]
  41c2ad:	mov    ds:0x1ff0ea12,eax
  41c2b2:	cmp    eax,0x47860fa2
  41c2b7:	mov    WORD PTR [ebp-0x42],es
  41c2ba:	xchg   ecx,eax
  41c2bb:	jo     0x41c2e0
  41c2bd:	pop    esp
  41c2be:	push   0xfffffff9
  41c2c0:	sub    dl,bh
  41c2c2:	mov    bl,0xbd
  41c2c4:	(bad)  
  41c2c5:	cli    
  41c2c6:	dec    ebx
  41c2c7:	pop    ss
  41c2c8:	add    BYTE PTR [ebx+0x1e61b12b],0x67
  41c2cf:	sbb    DWORD PTR [ebx-0x2bfbdb95],edx
  41c2d5:	int3   
  41c2d6:	imul   esi,DWORD PTR [edx+0x5c287df0],0x25ea7e03
  41c2e0:	call   0xd368:0xcd68d2d3
  41c2e7:	mov    ebp,0x59b38f90
  41c2ec:	mov    bl,BYTE PTR [ebx+0x17774b50]
  41c2f2:	sbb    eax,0x38af014
  41c2f7:	fsub   DWORD PTR ds:0xd2b53879
  41c2fd:	jb     0x41c324
  41c2ff:	in     eax,dx
  41c300:	addr16 mov cl,0xec
  41c303:	imul   edi,DWORD PTR [edx],0x1ce7e13f
  41c309:	sahf   
  41c30a:	xchg   edi,eax
  41c30b:	fcomp  st(4)
  41c30d:	ret    
  41c30e:	mov    ah,0xe7
  41c310:	or     dl,ch
  41c312:	mov    ah,0xc
  41c314:	push   ds
  41c315:	push   esp
  41c316:	push   es
  41c317:	cmp    al,0xed
  41c319:	shr    DWORD PTR [edx+edi*8],1
  41c31c:	dec    esi
  41c31d:	fbstp  TBYTE PTR [ebp+0x54]
  41c320:	inc    ebx
  41c321:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c322:	and    eax,0xc8068b7f
  41c327:	scas   eax,DWORD PTR es:[edi]
  41c328:	mov    bh,0xc7
  41c32a:	rcr    edi,1
  41c32c:	inc    edx
  41c32d:	jbe    0x41c345
  41c32f:	pusha  
  41c330:	arpl   WORD PTR [edi-0x2603622d],sp
  41c336:	adc    DWORD PTR [edx],0xb1c2d2e
  41c33c:	push   cs
  41c33d:	das    
  41c33e:	loop   0x41c369
  41c340:	and    dh,BYTE PTR [esp+ebp*8]
  41c343:	(bad)  [ebp+0x773bcc67]
  41c349:	fadd   QWORD PTR [ecx-0x71b776c7]
  41c34f:	lea    esi,[ebx+0x1a2619f4]
  41c355:	mov    bl,0xd8
  41c357:	inc    esp
  41c358:	mov    ds:0x3704830f,eax
  41c35d:	sti    
  41c35e:	cmp    BYTE PTR [edi],0x15
  41c361:	nop
  41c362:	pusha  
  41c363:	inc    esp
  41c364:	push   esi
  41c365:	fistp  QWORD PTR [ebp+0x6f34a168]
  41c36b:	push   ebp
  41c36c:	mov    edx,0xdaa8a503
  41c371:	leave  
  41c372:	xor    bl,BYTE PTR ds:0xec0303c0
  41c378:	das    
  41c379:	sbb    al,0x9e
  41c37b:	jmp    0xc0c4a420
  41c380:	int3   
  41c381:	mov    BYTE PTR [edi-0x5e],cl
  41c384:	aaa    
  41c385:	mov    ebp,eax
  41c387:	push   edx
  41c388:	test   al,0xb4
  41c38a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c38b:	jge    0x41c357
  41c38d:	cdq    
  41c38e:	dec    ecx
  41c38f:	shr    DWORD PTR [ecx+ebp*1],1
  41c392:	and    eax,0xb01479bd
  41c397:	push   ss
  41c398:	pop    esi
  41c399:	call   0x54cb:0xf0399fc0
  41c3a0:	(bad)  
  41c3a1:	popf   
  41c3a2:	retf   0x8b42
  41c3a5:	fucomip st,st(7)
  41c3a7:	repz in eax,dx
  41c3a9:	and    al,0xfc
  41c3ab:	pop    ebp
  41c3ac:	not    cl
  41c3ae:	mov    al,0x30
  41c3b0:	addr16 test al,0x25
  41c3b3:	outs   dx,BYTE PTR ds:[esi]
  41c3b4:	xlat   BYTE PTR es:[ebx]
  41c3b6:	inc    ebx
  41c3b7:	pop    eax
  41c3b8:	jno    0x41c37f
  41c3ba:	data16 fild DWORD PTR [edx]
  41c3bd:	xchg   ecx,eax
  41c3be:	sub    eax,0x2ea3afd2
  41c3c3:	sbb    bl,BYTE PTR [ebx+esi*1+0x7fa4613f]
  41c3ca:	cli    
  41c3cb:	push   ebx
  41c3cc:	ja     0x41c358
  41c3ce:	push   0xdb512ee7
  41c3d3:	test   eax,0xdbfb1157
  41c3d8:	fs mov dh,0x4f
  41c3db:	imul   esi,ecx,0x7fd76e3
  41c3e1:	push   ecx
  41c3e2:	push   cs
  41c3e3:	stos   BYTE PTR es:[edi],al
  41c3e4:	in     eax,dx
  41c3e5:	ret    
  41c3e6:	pop    ecx
  41c3e7:	outs   dx,BYTE PTR ds:[esi]
  41c3e8:	inc    edi
  41c3e9:	inc    ecx
  41c3ea:	ins    DWORD PTR es:[edi],dx
  41c3eb:	mov    ebp,0xb5659afe
  41c3f0:	(bad)  
  41c3f1:	outs   dx,BYTE PTR ds:[esi]
  41c3f2:	cli    
  41c3f3:	repnz dec ebp
  41c3f5:	inc    ebp
  41c3f6:	lea    esi,[eax+0x41088708]
  41c3fc:	jecxz  0x41c447
  41c3fe:	les    esp,FWORD PTR [ebx-0x30]
  41c401:	add    DWORD PTR [ebx-0xfe9550],0x82d573c0
  41c40b:	fdiv   DWORD PTR [ecx]
  41c40d:	iret   
  41c40e:	fcom   QWORD PTR [ecx-0x3ca6d1c8]
  41c414:	shl    ebx,1
  41c416:	mov    ebx,db7
  41c419:	mov    ds,WORD PTR [esi+0x135c81ad]
  41c41f:	lea    esi,ds:0xb50ba5fe
  41c425:	call   0xe909:0x46a87941
  41c42c:	cmp    eax,DWORD PTR [edi-0x1cfae820]
  41c432:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c433:	sub    esp,DWORD PTR [eax]
  41c435:	mov    al,ds:0x85e6ac74
  41c43a:	sub    eax,0x8482829a
  41c43f:	xor    bl,bl
  41c441:	fwait
  41c442:	cmc    
  41c443:	daa    
  41c444:	dec    eax
  41c445:	cmp    BYTE PTR [ecx],ch
  41c447:	and    esp,ebp
  41c449:	mov    BYTE PTR [eax-0x600808c3],al
  41c44f:	mov    ebx,0x3a3c743a
  41c454:	ja     0x41c453
  41c456:	lds    esp,FWORD PTR [ebp-0x5fb3b581]
  41c45c:	mov    ds:0xa260c5b0,al
  41c461:	mov    eax,0xba08f797
  41c466:	xchg   DWORD PTR [edx-0x6de73c10],ecx
  41c46c:	push   ebx
  41c46d:	mov    bl,dl
  41c46f:	mov    dh,dh
  41c471:	fwait
  41c472:	sbb    dh,dl
  41c474:	sti    
  41c475:	pop    ebp
  41c476:	adc    DWORD PTR [eax],ecx
  41c478:	adc    DWORD PTR [ebx+0x7759c4f1],ecx
  41c47e:	(bad)  
  41c47f:	shl    BYTE PTR [ebx+0x49304407],cl
  41c485:	leave  
  41c486:	clc    
  41c487:	xor    eax,0x8df5bcb7
  41c48c:	inc    edx
  41c48d:	add    eax,0xadf26aad
  41c492:	mov    ebp,DWORD PTR [edx]
  41c494:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c495:	ins    DWORD PTR es:[edi],dx
  41c496:	bound  edx,QWORD PTR [edx-0x68]
  41c499:	mov    eax,ds:0x3b00dfe0
  41c49e:	rcr    DWORD PTR [ecx+0x5cd9c473],cl
  41c4a4:	jmp    0x41c520
  41c4a6:	in     eax,0xe
  41c4a8:	cdq    
  41c4a9:	rcl    BYTE PTR [ecx+0x5e285d00],0x35
  41c4b0:	dec    ebp
  41c4b1:	add    esp,DWORD PTR [edx-0x18]
  41c4b4:	test   DWORD PTR [ebx-0x25],esi
  41c4b7:	iret   
  41c4b8:	popa   
  41c4b9:	loopne 0x41c4d5
  41c4bb:	push   ebx
  41c4bc:	mov    al,ds:0xdc6024bf
  41c4c1:	mov    eax,0x661dd9a4
  41c4c6:	xor    bl,BYTE PTR ds:0x97cf012f
  41c4cc:	add    ecx,DWORD PTR [edi]
  41c4ce:	out    0x7a,eax
  41c4d0:	aas    
  41c4d1:	mov    BYTE PTR [ecx+0x5f3274b8],dh
  41c4d7:	mul    BYTE PTR [esi-0x4063ab7a]
  41c4dd:	ins    BYTE PTR es:[edi],dx
  41c4de:	lea    ebx,[eax]
  41c4e0:	xchg   BYTE PTR [eax-0x23eef161],al
  41c4e6:	cwde   
  41c4e7:	pop    ebp
  41c4e8:	fnstcw WORD PTR [eax+edx*2-0x13]
  41c4ec:	inc    edi
  41c4ed:	js     0x41c513
  41c4ef:	(bad)  
  41c4f0:	mov    ds:0xc7f7b337,eax
  41c4f5:	icebp  
  41c4f6:	mov    dh,0xb8
  41c4f8:	stos   BYTE PTR es:[edi],al
  41c4f9:	out    dx,eax
  41c4fa:	adc    DWORD PTR [eax-0x47],ebp
  41c4fd:	or     esp,edx
  41c4ff:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c500:	and    DWORD PTR [edx+0x618cabbd],ecx
  41c506:	jp     0x41c4da
  41c508:	mov    ebx,DWORD PTR [ebx+0x66]
  41c50b:	mov    ds:0xa1430a2,al
  41c510:	bound  edx,QWORD PTR [eax-0x51]
  41c513:	mov    WORD PTR ds:[ebx],ds
  41c516:	jno    0x41c4dc
  41c518:	xchg   ebp,eax
  41c519:	push   es
  41c51a:	push   cs
  41c51b:	xchg   edi,eax
  41c51c:	(bad)  
  41c51e:	repz jmp 0x89c0:0x1d6ed9b1
  41c526:	pop    edx
  41c527:	mov    cl,BYTE PTR [edi+ecx*4-0x4e0057ce]
  41c52e:	jp     0x41c4f3
  41c530:	sbb    ch,BYTE PTR [ecx-0xff94ece]
  41c536:	pop    eax
  41c537:	inc    eax
  41c538:	xor    BYTE PTR [ecx+0x880220e],dh
  41c53e:	aaa    
  41c53f:	jnp    0x41c548
  41c541:	retf   0xe7d9
  41c544:	sar    DWORD PTR [edi+eiz*2+0x6c378803],cl
  41c54b:	jno    0x41c525
  41c54d:	(bad)  
  41c54f:	je     0x41c4d3
  41c551:	xor    eax,0xd938c3c0
  41c556:	popf   
  41c557:	mov    cl,0x36
  41c559:	repnz pop ecx
  41c55b:	mov    ch,0xc5
  41c55d:	outs   dx,BYTE PTR ds:[esi]
  41c55e:	xchg   esi,eax
  41c55f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c560:	mov    ecx,0x474adbff
  41c565:	sub    bh,bh
  41c567:	idiv   ebx
  41c569:	fdiv   st(3),st
  41c56b:	inc    esi
  41c56c:	ds fwait
  41c56e:	mov    DWORD PTR [edx+0x65],ebx
  41c571:	cli    
  41c572:	in     al,0x6f
  41c574:	inc    esp
  41c575:	stc    
  41c576:	push   0x75aab57d
  41c57b:	mov    al,0x9f
  41c57d:	lock xchg edx,eax
  41c57f:	mov    edi,0xea8b0601
  41c584:	mov    esp,0xb7dc73e5
  41c589:	mov    al,0x41
  41c58b:	imul   edx,DWORD PTR [edx-0x1c018ce3],0xf17281e4
  41c595:	push   0xfa9d515b
  41c59a:	ja     0x41c538
  41c59c:	push   0xffffffce
  41c59e:	iret   
  41c59f:	outs   dx,DWORD PTR ds:[esi]
  41c5a0:	in     al,dx
  41c5a1:	pusha  
  41c5a2:	aam    0xb8
  41c5a4:	inc    eax
  41c5a5:	add    BYTE PTR [esi],dh
  41c5a7:	push   es
  41c5a8:	pop    es
  41c5a9:	mov    dl,0x7e
  41c5ab:	icebp  
  41c5ac:	imul   BYTE PTR [ebx]
  41c5ae:	jmp    0x41c54d
  41c5b0:	jae    0x41c613
  41c5b2:	or     al,BYTE PTR [ebp-0x67]
  41c5b5:	js     0x41c53d
  41c5b7:	push   edi
  41c5b8:	dec    esi
  41c5b9:	adc    al,0x5c
  41c5bb:	or     eax,0xa36ab404
  41c5c0:	mov    dh,0xe6
  41c5c2:	retf   
  41c5c3:	add    bh,BYTE PTR [edx+0x49dba633]
  41c5c9:	ror    BYTE PTR [ebx+0x4e],cl
  41c5cc:	mov    bl,0xac
  41c5ce:	add    bh,dh
  41c5d0:	mov    cl,0x23
  41c5d2:	jb     0x41c56e
  41c5d4:	sbb    DWORD PTR [edi],esp
  41c5d6:	xchg   esp,eax
  41c5d7:	xchg   DWORD PTR [edx+esi*1],ebp
  41c5da:	call   0x92d191c5
  41c5df:	inc    cx
  41c5e1:	icebp  
  41c5e2:	outs   dx,DWORD PTR ds:[esi]
  41c5e3:	mov    dh,0xef
  41c5e5:	dec    esp
  41c5e6:	mov    bl,0xf1
  41c5e8:	addr16 cli 
  41c5ea:	mov    edi,DWORD PTR [edx-0x6040021c]
  41c5f0:	test   DWORD PTR ds:0x66fe6660,0xa28d7f2d
  41c5fa:	push   eax
  41c5fb:	mov    cs:0x8142087c,eax
  41c601:	jnp    0x41c5c8
  41c603:	and    eax,0x14644c9d
  41c608:	xor    ecx,DWORD PTR [ebp-0x3b]
  41c60b:	les    esi,FWORD PTR [edi-0x3d]
  41c60e:	and    al,cl
  41c610:	sbb    ebp,DWORD PTR [ebp-0x66566c01]
  41c616:	inc    ebp
  41c617:	xchg   ebp,eax
  41c618:	int    0xc
  41c61a:	sub    cl,al
  41c61c:	or     eax,0x35e8a700
  41c621:	(bad)  
  41c622:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c623:	std    
  41c624:	mov    dl,BYTE PTR [edi]
  41c626:	cmc    
  41c627:	(bad)  
  41c628:	dec    ecx
  41c629:	push   ebp
  41c62a:	mov    ah,0x72
  41c62c:	pop    es
  41c62d:	and    edi,DWORD PTR [edi]
  41c62f:	sub    esi,DWORD PTR [ecx+0x633dabce]
  41c635:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c636:	ss mov al,0x2a
  41c639:	fucomp st(4)
  41c63b:	aam    0x44
  41c63d:	pop    ebp
  41c63e:	or     eax,0x46382b6e
  41c643:	add    esp,ecx
  41c645:	or     ecx,ecx
  41c647:	and    BYTE PTR [edx-0x769f252],0x39
  41c64e:	mov    ds:0xe0082382,al
  41c653:	xchg   ebx,eax
  41c654:	in     eax,0xda
  41c656:	inc    ebx
  41c657:	inc    esi
  41c658:	and    DWORD PTR [ecx],edi
  41c65a:	jle    0x41c604
  41c65c:	daa    
  41c65d:	pop    ebx
  41c65e:	xor    al,0xe7
  41c660:	(bad)
  41c663:	clc    
  41c664:	sbb    dh,BYTE PTR [ebx+0x665c3726]
  41c66a:	sub    bh,bh
  41c66c:	icebp  
  41c66d:	push   0x73
  41c66f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c670:	push   ebx
  41c671:	daa    
  41c672:	and    ebx,edx
  41c674:	dec    esi
  41c675:	fbstp  TBYTE PTR ds:0xe3a22465
  41c67b:	mov    dh,0xbd
  41c67d:	popf   
  41c67e:	fdiv   DWORD PTR [esi+0x43adb6ff]
  41c684:	xchg   edi,eax
  41c685:	sub    al,BYTE PTR [ebx+edx*4]
  41c688:	push   esp
  41c689:	out    0xd0,al
  41c68b:	and    al,0x8d
  41c68d:	fwait
  41c68e:	or     al,cl
  41c690:	imul   edi,DWORD PTR [edi+eax*1],0x519ac91e
  41c697:	stc    
  41c698:	mov    esi,0x56cf63b7
  41c69d:	aad    0xf3
  41c69f:	bndldx bnd2,[ecx+0x4c]
  41c6a3:	scas   eax,DWORD PTR es:[edi]
  41c6a4:	jns    0x41c6d8
  41c6a6:	xchg   ebx,eax
  41c6a7:	pop    ecx
  41c6a8:	adc    ebx,esp
  41c6aa:	loope  0x41c71a
  41c6ac:	jg     0x41c670
  41c6ae:	jge    0x41c6e2
  41c6b0:	jne    0x41c72d
  41c6b2:	and    ebp,DWORD PTR [eax]
  41c6b4:	inc    eax
  41c6b5:	ret    0xaf03
  41c6b8:	cmp    ebx,DWORD PTR ds:0x3e480a82
  41c6be:	dec    esp
  41c6bf:	icebp  
  41c6c0:	sub    BYTE PTR [esi-0xe],ah
  41c6c3:	pop    esp
  41c6c4:	pop    eax
  41c6c5:	cmp    BYTE PTR [edi],ah
  41c6c7:	xlat   BYTE PTR ds:[ebx]
  41c6c8:	shl    DWORD PTR [ecx],cl
  41c6ca:	pushaw 
  41c6cc:	mov    dl,0x37
  41c6ce:	into   
  41c6cf:	xor    eax,0x22a86b87
  41c6d4:	lahf   
  41c6d5:	pop    ds
  41c6d6:	clc    
  41c6d7:	(bad)  
  41c6d8:	cmp    DWORD PTR [ebp-0x1d],esi
  41c6db:	and    eax,DWORD PTR [esi]
  41c6dd:	pop    ebx
  41c6de:	jno    0x41c6bb
  41c6e0:	fdivr  DWORD PTR [edx+0x3811efc5]
  41c6e6:	in     al,dx
  41c6e7:	pop    es
  41c6e8:	gs int3 
  41c6ea:	adc    BYTE PTR [ebx],al
  41c6ec:	int3   
  41c6ed:	es push cs
  41c6ef:	les    edi,FWORD PTR [ecx-0x7ecfe69a]
  41c6f5:	mov    dh,0x53
  41c6f7:	cwde   
  41c6f8:	test   bh,ah
  41c6fa:	xchg   edi,eax
  41c6fb:	sahf   
  41c6fc:	jmp    0x383cdca
  41c701:	jg     0x41c6f2
  41c703:	add    DWORD PTR [ecx+0x3c05169b],ebx
  41c709:	pop    ss
  41c70a:	pavgb  mm0,QWORD PTR [esi-0x68b3ca80]
  41c711:	or     eax,0x9ffe0d28
  41c716:	inc    ebp
  41c717:	fistp  WORD PTR ds:0x80a556e0
  41c71d:	fisubr WORD PTR [ebp-0x76]
  41c720:	outs   dx,BYTE PTR ds:[esi]
  41c721:	push   eax
  41c722:	aad    0xd7
  41c724:	mov    WORD PTR ds:0xd475b199,?
  41c72a:	xchg   edi,eax
  41c72b:	jmp    0x41c72e
  41c72d:	jmp    0x8be:0x588b2b88
  41c734:	jns    0x41c719
  41c736:	inc    ecx
  41c737:	add    DWORD PTR [ebx+0x2b],esp
  41c73a:	xor    DWORD PTR [eax+0x2f35ab3c],0x31
  41c741:	push   ds
  41c742:	popa   
  41c743:	pop    esi
  41c744:	sbb    eax,0x20364041
  41c749:	pop    edi
  41c74a:	retf   0x6439
  41c74d:	nop
  41c74e:	xchg   di,ax
  41c750:	or     dl,0x2d
  41c753:	cmp    al,dl
  41c755:	push   0xffffffb4
  41c757:	call   0xc3e2:0x81d54221
  41c75e:	loopne 0x41c753
  41c760:	pop    edi
  41c761:	adc    esi,0x23a27b19
  41c767:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c768:	pop    ss
  41c769:	mov    al,ds:0xfc20b35d
  41c76e:	mov    al,ds:0xcfb71577
  41c773:	dec    ecx
  41c774:	jb     0x41c7e3
  41c776:	hlt    
  41c777:	xchg   edx,eax
  41c778:	dec    ebx
  41c779:	cld    
  41c77a:	and    DWORD PTR [edi-0x6e],edi
  41c77d:	mov    WORD PTR [ecx+esi*4],es
  41c780:	mov    al,0x24
  41c782:	fsubr  DWORD PTR [ecx]
  41c784:	inc    esi
  41c785:	xchg   ebp,eax
  41c786:	jge    0x41c782
  41c788:	bnd jge 0x41c7c1
  41c78b:	jecxz  0x41c70d
  41c78d:	stos   DWORD PTR es:[edi],eax
  41c78e:	sub    BYTE PTR [edx],bh
  41c790:	push   esi
  41c791:	das    
  41c792:	mov    cl,0xf9
  41c794:	push   ss
  41c795:	xchg   esp,eax
  41c796:	sbb    ch,BYTE PTR [esi+edi*1]
  41c799:	cmp    BYTE PTR [edi+0x40],ah
  41c79c:	pop    eax
  41c79d:	call   0x4d30:0x52a5b660
  41c7a4:	mov    edx,0xceeff981
  41c7a9:	ror    DWORD PTR [eax+0x6a],0x68
  41c7ad:	mov    ch,0xed
  41c7af:	test   esi,edi
  41c7b1:	dec    eax
  41c7b2:	loop   0x41c7e7
  41c7b4:	dec    ecx
  41c7b5:	pop    edi
  41c7b6:	dec    ebx
  41c7b7:	fiadd  WORD PTR [eax-0x1ca7787]
  41c7bd:	gs scas eax,DWORD PTR es:[edi]
  41c7bf:	mov    dl,0xfb
  41c7c1:	push   ebp
  41c7c2:	jp     0x41c7f5
  41c7c4:	in     al,0x7
  41c7c6:	and    eax,0x321f0eaf
  41c7cb:	scas   eax,DWORD PTR es:[edi]
  41c7cc:	into   
  41c7cd:	or     DWORD PTR [ebx+0x1e992383],ecx
  41c7d3:	jle    0x41c83e
  41c7d5:	fld    QWORD PTR [esp+ebp*4-0x32]
  41c7d9:	shl    BYTE PTR [ebx+0x34],0xfc
  41c7dd:	mov    edi,0x64e58abe
  41c7e2:	ds pop eax
  41c7e4:	add    eax,0xd9814888
  41c7e9:	lock or eax,0x2968e258
  41c7ef:	pusha  
  41c7f0:	pop    es
  41c7f1:	pop    ebp
  41c7f2:	mov    dl,0x87
  41c7f4:	xchg   ebp,eax
  41c7f5:	ja     0x41c861
  41c7f7:	pop    ds
  41c7f8:	mov    esp,0xcb72aea7
  41c7fd:	int3   
  41c7fe:	jg     0x41c7ba
  41c800:	xchg   edx,eax
  41c801:	sub    al,0xc1
  41c803:	mov    ebp,0x97ab167
  41c808:	add    ebp,esp
  41c80a:	int    0x36
  41c80c:	repnz or eax,0xcac1a692
  41c812:	fcom   DWORD PTR [esi+0x7b]
  41c815:	xchg   ebx,eax
  41c816:	nop
  41c817:	jl     0x41c847
  41c819:	add    DWORD PTR [ecx+0xa1d2a7b],edi
  41c81f:	lea    ebx,gs:[edi]
  41c822:	lea    edx,[ebx+0x77]
  41c825:	out    dx,al
  41c826:	nop
  41c827:	lock mov gs,esi
  41c82a:	lds    edi,FWORD PTR [edi+0x4a2e8103]
  41c830:	push   ebp
  41c831:	mov    esp,0x460e073f
  41c836:	xor    al,0xc8
  41c838:	dec    eax
  41c839:	xor    al,BYTE PTR [edx]
  41c83b:	sbb    dl,BYTE PTR gs:[ecx+ecx*2-0x17310d1b]
  41c843:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c844:	dec    ecx
  41c845:	adc    al,0x2d
  41c847:	rcr    BYTE PTR [edx+edx*4+0x6f],1
  41c84b:	push   ebp
  41c84c:	lock push edx
  41c84e:	sti    
  41c84f:	sbb    eax,0xae8817c1
  41c854:	mov    BYTE PTR [esi-0x66],dh
  41c857:	(bad)  
  41c858:	mov    ch,0xa
  41c85a:	daa    
  41c85b:	mov    edi,esi
  41c85d:	test   DWORD PTR [ebx-0x77],ecx
  41c860:	iret   
  41c861:	fisttp QWORD PTR [edx+esi*8-0x7e72c5cc]
  41c868:	pop    ebp
  41c869:	xor    al,0x4f
  41c86b:	push   esp
  41c86c:	nop
  41c86d:	and    bl,BYTE PTR [edi]
  41c86f:	rcl    DWORD PTR [ebx+0x3b57bd59],0xfa
  41c876:	(bad)  
  41c877:	dec    ebx
  41c878:	dec    eax
  41c879:	inc    ecx
  41c87a:	sub    eax,0xb7719896
  41c87f:	repz mov bl,BYTE PTR [esi-0x32]
  41c883:	pop    ebp
  41c884:	add    esi,esp
  41c886:	lods   eax,DWORD PTR ds:[esi]
  41c887:	retf   0x4ffb
  41c88a:	ret    0x4f78
  41c88d:	loopne 0x41c8f4
  41c88f:	mov    cl,0xef
  41c891:	inc    ebp
  41c892:	test   BYTE PTR [ecx+0x20],dh
  41c895:	add    ecx,DWORD PTR [ecx]
  41c897:	and    eax,0x6a700002
  41c89c:	mov    esp,0xf9a132b3
  41c8a1:	sbb    BYTE PTR [edi+eax*1-0x3f8e7093],bh
  41c8a8:	jbe    0x41c85f
  41c8aa:	repz loopne 0x41c88c
  41c8ad:	les    ecx,FWORD PTR [esi-0x28479a79]
  41c8b3:	mov    al,0x3d
  41c8b5:	mov    ds:0x79596583,al
  41c8ba:	loope  0x41c853
  41c8bc:	leave  
  41c8bd:	call   0xb0f43565
  41c8c2:	jmp    DWORD PTR [esi-0x1e]
  41c8c5:	push   0x7a
  41c8c7:	js     0x41c884
  41c8c9:	test   DWORD PTR [edi],ebx
  41c8cb:	xchg   BYTE PTR [ecx-0x5c],bh
  41c8ce:	pop    edi
  41c8cf:	mov    dl,0x22
  41c8d1:	ror    BYTE PTR [ebp-0x2b],cl
  41c8d4:	lahf   
  41c8d5:	jae    0x41c890
  41c8d7:	pop    ds
  41c8d8:	(bad)  
  41c8d9:	cmp    al,0xc1
  41c8db:	addr16 shl al,0xff
  41c8df:	scas   al,BYTE PTR es:[edi]
  41c8e0:	push   0x6b710b13
  41c8e5:	neg    BYTE PTR [ecx-0x36]
  41c8e8:	cmp    eax,0xbbf06e02
  41c8ed:	outs   dx,BYTE PTR ds:[esi]
  41c8ee:	mov    dl,0xb4
  41c8f0:	inc    ecx
  41c8f1:	out    dx,eax
  41c8f2:	pop    es
  41c8f3:	hlt    
  41c8f4:	pop    esi
  41c8f5:	xor    al,0x46
  41c8f7:	push   es
  41c8f8:	xchg   edi,eax
  41c8f9:	ins    BYTE PTR es:[edi],dx
  41c8fa:	ss pop esi
  41c8fc:	push   DWORD PTR [ebx+0x7a870e17]
  41c902:	leave  
  41c903:	loop   0x41c921
  41c905:	lock les ecx,FWORD PTR [eax-0x7119b68b]
  41c90c:	add    esp,ebp
  41c90e:	mov    BYTE PTR [ebp+0x13],ah
  41c911:	lea    edx,[edx+0x179f5c18]
  41c917:	jne    0x41c988
  41c919:	push   es
  41c91a:	dec    ecx
  41c91b:	mov    esp,0xc7950320
  41c920:	call   0xafd1:0xdb907c5c
  41c927:	jmp    0x41c8f8
  41c929:	sub    DWORD PTR [ecx],ebx
  41c92b:	mov    dh,0xaf
  41c92d:	data16 (bad) 
  41c930:	or     BYTE PTR [edx+0x2f],dl
  41c933:	sbb    edi,edx
  41c935:	push   0xa9f2ab10
  41c93a:	inc    edx
  41c93b:	aaa    
  41c93c:	xchg   ecx,eax
  41c93d:	stos   BYTE PTR es:[edi],al
  41c93e:	test   al,0xf6
  41c940:	gs mov esp,0x8117e80d
  41c946:	jno    0x41c962
  41c948:	int    0xd7
  41c94a:	fist   DWORD PTR [eax]
  41c94c:	fwait
  41c94d:	cdq    
  41c94e:	push   eax
  41c94f:	(bad)  
  41c950:	pop    ebx
  41c951:	std    
  41c952:	mov    edx,0x6793d5d2
  41c957:	push   ecx
  41c958:	sub    eax,0x5e7eacc6
  41c95d:	aad    0x38
  41c95f:	ins    DWORD PTR es:[edi],dx
  41c960:	sub    dl,dh
  41c962:	adc    BYTE PTR [ecx],0x4d
  41c965:	push   0xffffffca
  41c967:	sub    eax,0x55b0c59f
  41c96c:	cmp    dh,BYTE PTR [ebx]
  41c96e:	cwde   
  41c96f:	call   0x5b62:0x58f91390
  41c976:	and    al,0x7b
  41c978:	dec    ecx
  41c979:	(bad)  
  41c97b:	jnp    0x41c9dd
  41c97d:	or     DWORD PTR [ebp+0x3492d9ee],esp
  41c983:	and    eax,0x5b9a992
  41c988:	das    
  41c989:	mov    ecx,0x2de31d88
  41c98e:	pmulhw mm4,QWORD PTR [ebx+0x4a]
  41c992:	xchg   edi,eax
  41c993:	push   es
  41c994:	cmp    al,0x9a
  41c996:	mov    cx,0xc90f
  41c99a:	ret    
  41c99b:	cmp    BYTE PTR [ecx+0x68],0x81
  41c99f:	jecxz  0x41c9a7
  41c9a1:	(bad)  
  41c9a2:	xchg   ebp,eax
  41c9a3:	fld    TBYTE PTR [ebx+0x6193cd8c]
  41c9a9:	jg     0x41c9b8
  41c9ab:	lds    edx,FWORD PTR [eax]
  41c9ad:	pop    edi
  41c9ae:	sbb    eax,DWORD PTR [ecx]
  41c9b0:	mov    dl,0x40
  41c9b2:	sbb    eax,0xc587aff9
  41c9b7:	cmc    
  41c9b8:	mov    bh,BYTE PTR [eax]
  41c9ba:	mov    edi,0x2d0f6259
  41c9bf:	cmc    
  41c9c0:	sbb    eax,0x71ad2a16
  41c9c5:	clc    
  41c9c6:	mov    eax,0xf740b54f
  41c9cb:	dec    esp
  41c9cc:	push   ebp
  41c9cd:	pop    edi
  41c9ce:	dec    ebp
  41c9cf:	arpl   WORD PTR [edi-0xb],dx
  41c9d2:	sub    ebp,DWORD PTR [ebx]
  41c9d4:	cld    
  41c9d5:	and    eax,0x2b4eec39
  41c9da:	iret   
  41c9db:	push   edx
  41c9dc:	out    dx,al
  41c9dd:	pop    ss
  41c9de:	xor    DWORD PTR [ecx-0x2c],ebx
  41c9e1:	js     0x41c9e9
  41c9e3:	lds    edx,FWORD PTR [edx+0x3a]
  41c9e6:	jbe    0x41c973
  41c9e8:	xchg   esi,eax
  41c9e9:	inc    eax
  41c9ea:	xchg   ebp,eax
  41c9eb:	retf   
  41c9ec:	sub    BYTE PTR ds:0x56759162,ah
  41c9f2:	cwde   
  41c9f3:	push   es
  41c9f4:	adc    cl,bl
  41c9f6:	mov    cl,0xc
  41c9f8:	jmp    FWORD PTR [ebx-0x5bbd8013]
  41c9fe:	push   cx
  41ca00:	ret    0xe982
  41ca03:	test   al,0xb7
  41ca05:	jno    0x41ca08
  41ca07:	mov    esi,0xee8b58e0
  41ca0c:	xor    eax,0x288a81e9
  41ca11:	mov    ebp,0x2ecee074
  41ca16:	es call 0x24b042c7
  41ca1c:	loope  0x41ca7f
  41ca1e:	jnp    0x41ca39
  41ca20:	push   edi
  41ca21:	jo     0x41c9cb
  41ca23:	cld    
  41ca24:	stos   DWORD PTR es:[edi],eax
  41ca25:	jnp    0x41c9ff
  41ca27:	repnz add ch,BYTE PTR [ecx-0x4f]
  41ca2b:	cld    
  41ca2c:	sub    eax,0x38dae47a
  41ca31:	cli    
  41ca32:	jmp    0x5e1f:0x405758e0
  41ca39:	in     al,dx
  41ca3a:	in     al,0x7b
  41ca3c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ca3d:	(bad)  [ebx+0x53]
  41ca40:	(bad)  
  41ca41:	xor    dh,BYTE PTR [eax-0x4b]
  41ca44:	jno    0x41ca1c
  41ca46:	pusha  
  41ca47:	ror    ebx,1
  41ca49:	and    al,0x4b
  41ca4b:	xchg   ebx,eax
  41ca4c:	lods   al,BYTE PTR ds:[esi]
  41ca4d:	dec    ebx
  41ca4e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ca4f:	aam    0xf8
  41ca51:	ss jo  0x41ca65
  41ca54:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ca55:	lea    edi,cs:[ebx+ecx*8]
  41ca59:	sub    DWORD PTR [ecx-0x7a],eax
  41ca5c:	xor    BYTE PTR [ecx],al
  41ca5e:	adc    esp,DWORD PTR [edi+eiz*8+0x35ae845c]
  41ca65:	dec    ebp
  41ca66:	mov    cl,0x84
  41ca68:	jbe    0x41cae9
  41ca6a:	xor    esp,ecx
  41ca6c:	cmp    bl,BYTE PTR [edi+eax*8+0x254844c5]
  41ca73:	or     esp,esi
  41ca75:	jmp    0x98ae:0xbc7912dd
  41ca7c:	js     0x41cafd
  41ca7e:	pop    edx
  41ca7f:	add    al,0x11
  41ca81:	addr16 mov bh,0xda
  41ca84:	lds    edx,FWORD PTR [edx]
  41ca86:	repnz or al,0x74
  41ca89:	sub    DWORD PTR [esi],edi
  41ca8b:	push   ebx
  41ca8c:	mov    ebp,DWORD PTR [ecx+0x54]
  41ca8f:	lea    edx,[ecx-0x1151d83d]
  41ca95:	in     eax,0xb0
  41ca97:	jmp    0x16cb:0xa959dd8c
  41ca9e:	sbb    al,0x38
  41caa0:	jp     0x41caff
  41caa2:	pusha  
  41caa3:	lods   eax,DWORD PTR fs:[esi]
  41caa5:	cld    
  41caa6:	mov    al,ds:0x465b3694
  41caab:	shr    DWORD PTR [eax+eax*1+0x5d815da1],cl
  41cab2:	cld    
  41cab3:	fidiv  DWORD PTR [esi]
  41cab5:	and    ebx,DWORD PTR [edi-0x1645da8c]
  41cabb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41cabc:	ss stos DWORD PTR es:[edi],eax
  41cabe:	dec    edi
  41cabf:	jmp    0xcec0686f
  41cac4:	fistp  DWORD PTR ds:0x4520c07e
  41caca:	mov    DWORD PTR [ecx-0x2c],esp
  41cacd:	jno    0x41ca57
  41cacf:	inc    edi
  41cad0:	jae    0x41cad3
  41cad2:	mov    cl,0xdc
  41cad4:	jp     0x41ca68
  41cad6:	into   
  41cad7:	arpl   WORD PTR [edx],bp
  41cad9:	lds    edi,FWORD PTR [esi+0x57]
  41cadc:	mov    dh,0x4
  41cade:	sbb    ebx,DWORD PTR [eax-0x2c]
  41cae1:	imul   ecx,esp,0xb
  41cae4:	int3   
  41cae5:	push   edx
  41cae6:	and    BYTE PTR [ebx],bl
  41cae8:	inc    edi
  41cae9:	dec    esi
  41caea:	in     eax,dx
  41caeb:	mov    ebx,0x27c728d6
  41caf0:	xor    eax,0xe007d791
  41caf5:	xchg   ebx,eax
  41caf6:	jle    0x41cac0
  41caf8:	popa   
  41caf9:	or     eax,0xd5afd50d
  41cafe:	xchg   esi,eax
  41caff:	rcr    BYTE PTR [ecx-0x6f5c6787],1
  41cb05:	add    edi,edx
  41cb07:	mov    eax,0x4f11d4cc
  41cb0c:	sbb    al,0x41
  41cb0e:	mov    ds:0xf5f77f23,al
  41cb13:	shl    DWORD PTR [ebx],0x38
  41cb16:	xchg   DWORD PTR [edi-0x48],esp
  41cb19:	pop    ebp
  41cb1a:	mov    ah,0xf5
  41cb1c:	mov    DWORD PTR [esi+0x1e],ecx
  41cb1f:	cmp    BYTE PTR [ebx],cl
  41cb21:	aam    0xee
  41cb23:	lahf   
  41cb24:	xchg   edx,eax
  41cb25:	cmp    al,0x55
  41cb27:	sub    eax,0x3be5a3af
  41cb2c:	dec    ebx
  41cb2d:	frstor [eax+0x13]
  41cb30:	inc    esp
  41cb31:	mov    eax,ds:0x6c02efd4
  41cb36:	sub    al,0x83
  41cb38:	or     eax,0xb4cfb7a1
  41cb3d:	ja     0x41cacd
  41cb3f:	repnz lock or dh,dl
  41cb43:	es jg  0x41cb3d
  41cb46:	fs pop eax
  41cb48:	and    eax,0xffaa1158
  41cb4d:	iret   
  41cb4e:	ins    BYTE PTR es:[edi],dx
  41cb4f:	popa   
  41cb50:	out    0x69,al
  41cb52:	dec    ebx
  41cb53:	inc    edi
  41cb54:	add    al,0x7f
  41cb56:	pop    eax
  41cb57:	xor    cl,cl
  41cb59:	mov    ebp,0x3e822e6e
  41cb5e:	jp     0x41cb96
  41cb60:	inc    edx
  41cb61:	or     esp,ebx
  41cb63:	push   ebp
  41cb64:	stos   BYTE PTR es:[edi],al
  41cb65:	jg     0x41cb41
  41cb67:	inc    ebp
  41cb68:	or     ah,BYTE PTR [edi-0x5c]
  41cb6b:	out    0x96,al
  41cb6d:	rol    BYTE PTR [edx],0x29
  41cb70:	rcl    ch,0xf
  41cb73:	jb     0x41cbda
  41cb75:	sub    ecx,DWORD PTR [edi+eax*2]
  41cb78:	mov    cl,cl
  41cb7a:	lock adc eax,0xdffb7cc1
  41cb80:	cwde   
  41cb81:	inc    edx
  41cb82:	stos   BYTE PTR es:[edi],al
  41cb83:	inc    ebx
  41cb84:	xchg   edi,eax
  41cb85:	xchg   edi,eax
  41cb86:	pop    es
  41cb87:	push   esi
  41cb88:	and    DWORD PTR [esi],esp
  41cb8a:	cs dec ebx
  41cb8c:	and    BYTE PTR ds:0xaf61eda7,ah
  41cb92:	mov    ebp,0x3683c799
  41cb97:	cmc    
  41cb98:	mov    ds:0xb073f47,al
  41cb9d:	pop    ecx
  41cb9e:	fimul  DWORD PTR [esp+edi*1]
  41cba1:	jmp    0xaad6:0xb5e84a31
  41cba8:	add    al,0x28
  41cbaa:	jge    0x41cc18
  41cbac:	fist   WORD PTR ds:0x61473386
  41cbb2:	dec    ecx
  41cbb3:	inc    esp
  41cbb4:	mov    al,ds:0x9a475bce
  41cbb9:	aam    0xf
  41cbbb:	pop    edi
  41cbbc:	in     eax,dx
  41cbbd:	pop    ds
  41cbbe:	xchg   ebx,eax
  41cbbf:	mov    ebx,ebp
  41cbc1:	fisub  DWORD PTR [edx-0x70]
  41cbc4:	jg     0x41cbae
  41cbc6:	fcmovne st,st(7)
  41cbc8:	adc    eax,0x401531d
  41cbcd:	cdq    
  41cbce:	mov    cl,0xa5
  41cbd0:	ret    
  41cbd1:	mov    al,ds:0x870c36bd
  41cbd6:	(bad)  
  41cbd7:	cld    
  41cbd8:	push   ebx
  41cbd9:	jl     0x41cc17
  41cbdb:	cmp    eax,0x9f68595e
  41cbe0:	cli    
  41cbe1:	mov    edi,0x8c5f5535
  41cbe6:	push   esp
  41cbe7:	lea    eax,[esi+0x2488ddff]
  41cbed:	ret    
  41cbee:	fcomi  st,st(4)
  41cbf0:	mov    edx,0x9304bc17
  41cbf5:	ret    
  41cbf6:	dec    esi
  41cbf7:	sub    DWORD PTR [ecx-0x6563f8b0],esp
  41cbfd:	jge    0x41cc36
  41cbff:	and    esi,0xfffffff6
  41cc02:	add    esp,esi
  41cc04:	lock xchg DWORD PTR [ebx],ecx
  41cc07:	mov    esp,0x3e95be14
  41cc0c:	outs   dx,BYTE PTR ds:[esi]
  41cc0d:	imul   esp,ebp,0x3952bc1
  41cc13:	shr    edi,0x5
  41cc16:	(bad)  [ecx+eax*8+0x50]
  41cc1a:	hlt    
  41cc1b:	pushf  
  41cc1c:	pop    esp
  41cc1d:	mov    dl,0xb1
  41cc1f:	stos   DWORD PTR es:[edi],eax
  41cc20:	(bad)  
  41cc21:	sub    bl,BYTE PTR [ebx-0x4d4c4c7e]
  41cc27:	mov    cl,0x11
  41cc29:	pop    ebp
  41cc2a:	push   esi
  41cc2b:	mov    bl,0xfe
  41cc2d:	push   ss
  41cc2e:	jecxz  0x41cca0
  41cc30:	(bad)  
  41cc31:	jne    0x41cbbc
  41cc33:	rol    DWORD PTR [eax+0x50a16172],1
  41cc39:	pop    es
  41cc3a:	push   esi
  41cc3b:	pop    esi
  41cc3c:	ja     0x41cc24
  41cc3e:	dec    edx
  41cc3f:	xlat   BYTE PTR ds:[ebx]
  41cc40:	jnp    0x41cc9d
  41cc42:	jmp    0x2431:0x780a6cae
  41cc49:	xor    bl,BYTE PTR [edi-0x3d]
  41cc4c:	out    dx,al
  41cc4d:	adc    BYTE PTR [edx-0x7db7fcc4],ah
  41cc53:	inc    eax
  41cc54:	(bad)  
  41cc56:	retf   0xc0aa
  41cc59:	mov    dh,0x59
  41cc5b:	mov    bl,0x2e
  41cc5d:	test   BYTE PTR [eax-0x4e7acbde],ch
  41cc63:	push   ss
  41cc64:	dec    ebp
  41cc65:	lods   al,BYTE PTR ss:[esi]
  41cc67:	fld    QWORD PTR [ebx]
  41cc69:	sar    BYTE PTR [ecx+eiz*8+0x467b5539],1
  41cc70:	mov    ecx,0x6f89ca16
  41cc75:	cwde   
  41cc76:	sbb    DWORD PTR [eax],0xffffffeb
  41cc79:	push   esp
  41cc7a:	adc    BYTE PTR gs:0xe2ad4771,al
  41cc81:	jge    0x41cc88
  41cc83:	test   al,cl
  41cc85:	loope  0x41cc6b
  41cc87:	pop    edi
  41cc88:	xor    cl,BYTE PTR [edx]
  41cc8a:	xor    cl,BYTE PTR [edx+eax*2]
  41cc8d:	mov    edx,0x9054070b
  41cc92:	(bad)  
  41cc93:	mov    ebx,0xc58cb577
  41cc98:	cmp    eax,0x30a48ec0
  41cc9d:	or     bl,dl
  41cc9f:	cdq    
  41cca0:	jnp    0x41cc93
  41cca2:	stos   BYTE PTR es:[edi],al
  41cca3:	in     al,dx
  41cca4:	sub    dh,BYTE PTR [bp+si+0x0]
  41cca8:	dec    edx
  41cca9:	inc    eax
  41ccaa:	xchg   edx,eax
  41ccab:	ret    0xf415
  41ccae:	xchg   ebp,eax
  41ccaf:	inc    edi
  41ccb0:	mov    al,ds:0x17c666e8
  41ccb5:	mov    dl,0x7b
  41ccb7:	sti    
  41ccb8:	mov    BYTE PTR [ebx-0x276dac35],dh
  41ccbe:	lea    ecx,[edi+eiz*8-0x72]
  41ccc2:	je     0x41cc92
  41ccc4:	shl    BYTE PTR [ecx+0x33],1
  41ccc7:	mov    eax,ds:0xd7888147
  41cccc:	retf   
  41cccd:	dec    ecx
  41ccce:	lea    ebx,[edx]
  41ccd0:	mov    edx,DWORD PTR ds:0xface3d20
  41ccd6:	out    dx,al
  41ccd7:	test   bl,ch
  41ccd9:	fcomi  st,st(6)
  41ccdb:	xchg   ebx,eax
  41ccdc:	fldcw  WORD PTR [ebx-0x7bd46088]
  41cce2:	ffreep st(0)
  41cce4:	ret    
  41cce5:	cmp    al,0x46
  41cce7:	xchg   ebp,eax
  41cce8:	add    al,0x4a
  41ccea:	mov    cl,0x18
  41ccec:	ret    0x1070
  41ccef:	fist   DWORD PTR [esi]
  41ccf1:	jns    0x41ccba
  41ccf3:	inc    bl
  41ccf5:	jmp    0xe3ce:0x239968b6
  41ccfc:	adc    eax,0x2c31695e
  41cd01:	int3   
  41cd02:	push   ebp
  41cd03:	loopne 0x41cd6c
  41cd05:	(bad)  
  41cd06:	and    DWORD PTR [ebx-0x69],ebx
  41cd09:	xor    DWORD PTR [esi],ebx
  41cd0b:	jnp    0x41cd08
  41cd0d:	test   al,0x67
  41cd0f:	dec    esi
  41cd10:	je     0x41ccf9
  41cd12:	shl    edi,cl
  41cd14:	mov    WORD PTR [ecx-0x6211e8a4],fs
  41cd1a:	push   ss
  41cd1b:	into   
  41cd1c:	sti    
  41cd1d:	mov    edi,0x4fadb804
  41cd22:	leave  
  41cd23:	pop    edi
  41cd24:	jl     0x41cd45
  41cd26:	sub    BYTE PTR [edi-0x6e],al
  41cd29:	jge    0x41ccd1
  41cd2b:	call   0x7f3fe54f
  41cd30:	mov    bh,0xc7
  41cd32:	add    al,0x4b
  41cd34:	jno    0x41cce8
  41cd36:	push   esp
  41cd37:	popa   
  41cd38:	stos   DWORD PTR es:[edi],eax
  41cd39:	mov    edx,0xd7f69ac0
  41cd3e:	push   esi
  41cd3f:	xor    cl,BYTE PTR [edi+eiz*4+0x31b78eaf]
  41cd46:	sbb    al,0x10
  41cd48:	shl    esi,1
  41cd4a:	(bad)  [ebx+0x251975b9]
  41cd50:	pop    ss
  41cd51:	mov    bl,0xf6
  41cd53:	test   al,0x65
  41cd55:	icebp  
  41cd56:	int    0xed
  41cd58:	inc    ebp
  41cd59:	leave  
  41cd5a:	mov    cl,0x43
  41cd5c:	cmp    DWORD PTR [esi],esi
  41cd5e:	push   ebx
  41cd5f:	sub    eax,0x27c628df
  41cd64:	jns    0x41cdd5
  41cd66:	pop    ebx
  41cd67:	out    0x16,al
  41cd69:	sahf   
  41cd6a:	fmul   st,st(1)
  41cd6c:	mov    DWORD PTR [ecx+0x6820b244],ebx
  41cd72:	test   DWORD PTR [edx],eax
  41cd74:	jno    0x41cd17
  41cd76:	xchg   esp,eax
  41cd77:	dec    eax
  41cd78:	mov    DWORD PTR [esi-0x2b],esi
  41cd7b:	(bad)
  41cd7e:	pop    DWORD PTR [esi]
  41cd80:	mov    edi,0x246ba16f
  41cd85:	mov    cl,0x3f
  41cd87:	bound  ebx,QWORD PTR [eax+ecx*2+0x70f2fe6a]
  41cd8e:	pop    edx
  41cd8f:	dec    ecx
  41cd90:	pop    esp
  41cd91:	mov    ah,0x97
  41cd93:	and    al,0x5d
  41cd95:	jno    0x41cdcb
  41cd97:	sub    DWORD PTR ds:0x8288dafb,ebp
  41cd9d:	arpl   di,ax
  41cd9f:	stos   BYTE PTR es:[edi],al
  41cda0:	leave  
  41cda1:	adc    BYTE PTR [edx],0xd1
  41cda4:	push   0xffffffb9
  41cda6:	rcl    BYTE PTR ds:0x2724f133,0xd9
  41cdad:	pushf  
  41cdae:	int3   
  41cdaf:	sbb    eax,eax
  41cdb1:	xor    BYTE PTR [esi],0xef
  41cdb4:	xor    edx,ebp
  41cdb6:	jge    0x41cdaf
  41cdb8:	stc    
  41cdb9:	mov    ecx,0xf64cb7a5
  41cdbe:	je     0x41cd59
  41cdc0:	jg     0x41cdf2
  41cdc2:	jl     0x41cdc2
  41cdc4:	(bad)  
  41cdc5:	jmp    0xc8c9:0xe36af745
  41cdcc:	fs and cl,0x98
  41cdd0:	xchg   edi,eax
  41cdd1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41cdd2:	mov    esp,0x5ce773ef
  41cdd7:	jl     0x41cd5b
  41cdd9:	sbb    al,0x6
  41cddb:	scas   eax,DWORD PTR es:[edi]
  41cddc:	lahf   
  41cddd:	jae    0x41cd6b
  41cddf:	(bad)  
  41cde0:	in     al,dx
  41cde1:	ror    BYTE PTR [ebx-0x5705943f],1
  41cde7:	fwait
  41cde8:	pop    es
  41cde9:	lds    eax,FWORD PTR [esp+esi*4+0x7]
  41cded:	pop    esi
  41cdee:	mov    ah,0x8
  41cdf0:	pop    ebp
  41cdf1:	js     0x41cdb7
  41cdf3:	xchg   esp,eax
  41cdf4:	sub    eax,0x499ed229
  41cdf9:	ds xchg ebp,edi
  41cdfc:	lods   eax,DWORD PTR ds:[esi]
  41cdfd:	or     DWORD PTR [esi],edx
  41cdff:	xor    ecx,esi
  41ce01:	fild   QWORD PTR [edx]
  41ce03:	or     edi,DWORD PTR [esp+ebx*2]
  41ce06:	sub    eax,0x171c7774
  41ce0b:	mov    bl,0x3b
  41ce0d:	stos   BYTE PTR es:[edi],al
  41ce0e:	cmp    al,0x36
  41ce10:	xlat   BYTE PTR ds:[ebx]
  41ce11:	ins    DWORD PTR es:[edi],dx
  41ce12:	aam    0x28
  41ce14:	ror    DWORD PTR [ecx-0x3a9b1dc5],0x79
  41ce1b:	repnz push ds
  41ce1d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ce1e:	addr16 popa 
  41ce20:	mov    ds:0x50d05c9e,al
  41ce25:	and    al,0x3d
  41ce27:	pop    ebp
  41ce28:	scas   al,BYTE PTR es:[edi]
  41ce29:	pop    ds
  41ce2a:	and    bh,dh
  41ce2c:	stos   BYTE PTR es:[edi],al
  41ce2d:	sub    al,0xac
  41ce2f:	xchg   edx,eax
  41ce30:	mov    cl,0x4
  41ce32:	into   
  41ce33:	xlat   BYTE PTR ds:[ebx]
  41ce34:	daa    
  41ce35:	xchg   DWORD PTR [esi+0x19],esi
  41ce38:	add    bl,BYTE PTR [ecx-0x4c]
  41ce3b:	mov    dl,0xbd
  41ce3d:	into   
  41ce3e:	test   al,0x68
  41ce40:	pop    esi
  41ce41:	outs   dx,BYTE PTR ds:[esi]
  41ce42:	fistp  DWORD PTR [ecx+0x5c38d7d3]
  41ce48:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ce49:	mov    al,ds:0x3e9a714e
  41ce4e:	nop
  41ce4f:	sub    BYTE PTR [edi+ebx*8],bl
  41ce52:	add    dl,BYTE PTR [ebp-0x58]
  41ce55:	enter  0xc024,0xd6
  41ce59:	sub    ch,BYTE PTR [ecx+0x13f2cf7e]
  41ce5f:	sbb    al,0x14
  41ce61:	adc    BYTE PTR [ebx],ch
  41ce63:	jb     0x41cedf
  41ce65:	pusha  
  41ce66:	(bad)  
  41ce67:	pop    ecx
  41ce68:	sbb    al,0x52
  41ce6a:	add    ch,0x52
  41ce6d:	outs   dx,DWORD PTR ds:[esi]
  41ce6e:	sbb    BYTE PTR [edi],dl
  41ce70:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ce71:	ret    0x59a6
  41ce74:	xor    BYTE PTR [ebp-0x5de333e],al
  41ce7a:	jo     0x41cef3
  41ce7c:	cwde   
  41ce7d:	and    ebp,DWORD PTR [ebp-0x26cab703]
  41ce83:	push   edi
  41ce84:	jbe    0x41ce82
  41ce86:	or     al,0xac
  41ce88:	scas   eax,DWORD PTR es:[edi]
  41ce89:	or     BYTE PTR [eax],bl
  41ce8b:	jge    0x41cec6
  41ce8d:	dec    eax
  41ce8f:	mov    WORD PTR [edx-0x15],ss
  41ce92:	adc    eax,0x4f5b8467
  41ce97:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ce98:	jb     0x41ce26
  41ce9a:	fidivr WORD PTR [ebx]
  41ce9c:	jp     0x41ced8
  41ce9e:	je     0x41ceb4
  41cea0:	add    cl,cl
  41cea2:	lahf   
  41cea3:	retf   0x1b0b
  41cea6:	aam    0x51
  41cea8:	adc    ch,bl
  41ceaa:	dec    ebp
  41ceab:	jmp    0xfaed:0x4f005ec3
  41ceb2:	jb     0x41cebf
  41ceb4:	call   0xe0d2:0x59f8b62f
  41cebb:	js     0x41ce61
  41cebd:	xor    BYTE PTR [edx+0x54],ch
  41cec0:	clc    
  41cec1:	fnstsw WORD PTR ds:0xa47bfdae
  41cec7:	ficomp WORD PTR [edx]
  41cec9:	mov    ah,0x9b
  41cecb:	rol    BYTE PTR [edi+0x43],cl
  41cece:	xchg   ebx,eax
  41cecf:	adc    DWORD PTR [ebx],ebx
  41ced1:	adc    DWORD PTR [eax-0x24b93440],eax
  41ced7:	and    dh,bl
  41ced9:	sbb    eax,0x47b710cf
  41cede:	std    
  41cedf:	inc    edi
  41cee0:	out    dx,al
  41cee1:	dec    eax
  41cee2:	jecxz  0x41cefb
  41cee4:	adc    esp,DWORD PTR [edx-0x2c]
  41cee7:	in     al,dx
  41cee8:	pop    esp
  41cee9:	and    BYTE PTR [edi],0xd6
  41ceec:	int3   
  41ceed:	mov    ds:0x82b940ae,al
  41cef2:	icebp  
  41cef3:	cmp    ebp,DWORD PTR [edx]
  41cef5:	and    BYTE PTR [edi+ebp*4-0xd6de57c],0xbb
  41cefd:	mov    eax,0xd4ec6912
  41cf02:	mov    dl,0x13
  41cf04:	cld    
  41cf05:	dec    eax
  41cf06:	jne    0x41cf0b
  41cf08:	not    BYTE PTR [esi-0x18]
  41cf0b:	and    bl,BYTE PTR [edi-0x2e0f127b]
  41cf11:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41cf12:	jo     0x41ced1
  41cf14:	not    BYTE PTR [eax-0x59]
  41cf17:	mov    ds:0x4876eb9b,al
  41cf1c:	call   0xaa17dee6
  41cf21:	test   BYTE PTR [esi],0xdc
  41cf24:	mov    dh,0x61
  41cf26:	ss gs dec edi
  41cf29:	sub    eax,0x64da863e
  41cf2e:	adc    BYTE PTR [ebx+edx*1-0x4a],bh
  41cf32:	add    al,0xe8
  41cf34:	je     0x41cec4
  41cf36:	loopne 0x41cef7
  41cf38:	in     eax,0xbd
  41cf3a:	xor    DWORD PTR [ebx-0x4e8ad091],esi
  41cf40:	cmp    DWORD PTR [eax],eax
  41cf42:	arpl   WORD PTR [edi-0x60b063c7],di
  41cf48:	jecxz  0x41cf21
  41cf4a:	test   esi,esi
  41cf4c:	cmp    al,0xd2
  41cf4e:	add    DWORD PTR [eax-0x33],ebx
  41cf51:	out    0x8f,eax
  41cf53:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41cf54:	jno    0x41cefa
  41cf56:	mov    dh,dh
  41cf58:	and    eax,0x4265420a
  41cf5d:	mov    cl,0x8c
  41cf5f:	cwde   
  41cf60:	into   
  41cf61:	imul   edx,DWORD PTR [eax+ecx*2+0x665f04a8],0xd9ae933
  41cf6c:	xor    edi,ecx
  41cf6e:	mov    ds:0x217f211b,al
  41cf73:	push   esi
  41cf74:	mov    bl,0x43
  41cf76:	mov    cl,0xa5
  41cf78:	imul   esi,edx,0xffffffbf
  41cf7b:	push   ebp
  41cf7c:	ret    
  41cf7d:	pop    edi
  41cf7e:	ffreep st(1)
  41cf80:	add    BYTE PTR ds:0x4afdc9ca,dl
  41cf86:	outs   dx,BYTE PTR ds:[esi]
  41cf87:	ret    
  41cf88:	(bad)  
  41cf8a:	js     0x41cfc6
  41cf8c:	out    dx,eax
  41cf8d:	ins    DWORD PTR es:[edi],dx
  41cf8e:	xor    BYTE PTR [eax+0x38],ah
  41cf91:	fnstcw WORD PTR [ecx]
  41cf93:	mov    ecx,0xad462755
  41cf98:	fs int 0xad
  41cf9b:	(bad)  
  41cf9c:	xor    cl,BYTE PTR [edi]
  41cf9e:	out    0x6f,eax
  41cfa0:	mov    bl,0xd2
  41cfa2:	ret    
  41cfa3:	mov    ecx,eax
  41cfa5:	mov    al,0x55
  41cfa7:	int3   
  41cfa8:	mov    ch,0x75
  41cfaa:	in     eax,dx
  41cfab:	pop    es
  41cfac:	fisubr WORD PTR [edx]
  41cfae:	mov    ah,0x38
  41cfb0:	sahf   
  41cfb1:	loopne 0x41d013
  41cfb3:	xchg   edi,eax
  41cfb4:	inc    edx
  41cfb5:	jmp    0x41d021
  41cfb7:	fwait
  41cfb8:	and    dh,BYTE PTR [ecx+0x54]
  41cfbb:	das    
  41cfbc:	mov    BYTE PTR [ecx],dh
  41cfbe:	pop    esi
  41cfbf:	push   edi
  41cfc0:	retf   0xfc85
  41cfc3:	mov    ds:0x9a5d5c41,eax
  41cfc8:	sbb    al,0xe4
  41cfca:	call   0x19fb:0x7d3b1dec
  41cfd1:	leave  
  41cfd2:	jbe    0x41cf83
  41cfd4:	mov    bl,0x14
  41cfd6:	popf   
  41cfd7:	or     dl,BYTE PTR ds:0x289e77cc
  41cfdd:	aas    
  41cfde:	in     eax,dx
  41cfdf:	ja     0x41cf9e
  41cfe1:	jp     0x41cfe0
  41cfe3:	repz leave 
  41cfe5:	pop    esi
  41cfe6:	add    DWORD PTR [edi-0x7b],esp
  41cfe9:	into   
  41cfea:	mov    esi,0xe2bb9a45
  41cfef:	and    al,ah
  41cff1:	add    DWORD PTR [ecx+0x40317466],esi
  41cff7:	call   0xc5b:0x2e86d0d0
  41cffe:	xchg   ebx,eax
  41cfff:	ins    BYTE PTR es:[edi],dx
  41d000:	jge    0x41cfe5
  41d002:	das    
  41d003:	mov    ds:0x874fe86e,al
  41d008:	push   eax
  41d009:	int    0x28
  41d00b:	cmp    eax,0x544690e2
  41d010:	pop    edi
  41d011:	mov    eax,ds:0xa8caecaa
  41d016:	sub    cl,BYTE PTR [edi+edi*4+0x64862b66]
  41d01d:	es out 0xaf,eax
  41d020:	push   ds
  41d021:	xor    ecx,DWORD PTR [edx+0xc]
  41d024:	scas   al,BYTE PTR es:[edi]
  41d025:	sets   BYTE PTR [edx-0x50b90277]
  41d02c:	push   esp
  41d02d:	mov    WORD PTR [edx],fs
  41d02f:	leave  
  41d030:	push   esp
  41d031:	ins    BYTE PTR es:[edi],dx
  41d032:	add    bl,BYTE PTR [ebx]
  41d034:	mov    esi,0x24945eba
  41d03a:	add    eax,edx
  41d03c:	mov    DWORD PTR [eax],edx
  41d03e:	pop    esi
  41d03f:	adc    BYTE PTR [edi-0x1e],dl
  41d042:	fwait
  41d043:	xor    eax,0x3f240b79
  41d048:	and    ebp,DWORD PTR ds:0x24963598
  41d04e:	mov    ?,WORD PTR ds:0x31ea86ac
  41d054:	mov    edi,0x4eb503ea
  41d059:	lock pop edx
  41d05b:	mov    ah,0x0
  41d05d:	xchg   ebx,eax
  41d05e:	out    0x58,al
  41d060:	pop    eax
  41d061:	pop    esi
  41d062:	icebp  
  41d063:	add    esp,ebp
  41d065:	mov    WORD PTR [ebx-0x5a075922],gs
  41d06b:	and    BYTE PTR [edx-0x6],dh
  41d06e:	dec    esi
  41d06f:	inc    esp
  41d070:	xchg   esi,eax
  41d071:	sub    esp,DWORD PTR ds:0x5bf63ce7
  41d077:	lods   eax,DWORD PTR ds:[esi]
  41d078:	nop
  41d079:	rcl    ebp,cl
  41d07b:	je     0x41d088
  41d07d:	icebp  
  41d07e:	ror    DWORD PTR [ebp+0x52],1
  41d081:	stos   DWORD PTR es:[edi],eax
  41d082:	and    al,ah
  41d084:	imul   ecx,DWORD PTR [edx+0x38],0x56
  41d088:	mov    ecx,0x9116fd5e
  41d08d:	and    ebp,DWORD PTR [esi+esi*2]
  41d090:	sbb    BYTE PTR [ecx-0x31],dh
  41d093:	in     al,0x9a
  41d095:	mov    ecx,0x9cdc2646
  41d09a:	outs   dx,BYTE PTR ds:[esi]
  41d09b:	outs   dx,DWORD PTR ds:[esi]
  41d09c:	push   cs
  41d09d:	mov    ?,WORD PTR [esi-0x341ea951]
  41d0a3:	sub    DWORD PTR [esi],0x8478ae3a
  41d0a9:	push   es
  41d0aa:	pop    ebx
  41d0ab:	adc    DWORD PTR [ecx-0x72],ebx
  41d0ae:	sub    BYTE PTR [eax+0x66b18288],ch
  41d0b4:	arpl   WORD PTR [esi-0x67],si
  41d0b7:	les    ebx,FWORD PTR [edx]
  41d0b9:	nop
  41d0ba:	int3   
  41d0bb:	xchg   ebp,eax
  41d0bc:	inc    ebx
  41d0bd:	rcl    BYTE PTR [eax+0x558d7828],0x17
  41d0c4:	data16 aaa 
  41d0c6:	push   edi
  41d0c7:	mov    esp,DWORD PTR [ebp-0x3c]
  41d0ca:	dec    esp
  41d0cb:	shr    BYTE PTR [edx+0x445f4504],0x75
  41d0d2:	or     eax,0x4412789
  41d0d7:	push   ss
  41d0d8:	mov    ds:0x6d8ba15e,al
  41d0dd:	jle    0x41d0d7
  41d0df:	mov    dl,0xf6
  41d0e1:	mov    ah,BYTE PTR [eax]
  41d0e3:	cdq    
  41d0e4:	xor    ecx,DWORD PTR [ebx-0x705d98b2]
  41d0ea:	(bad)  
  41d0eb:	cmc    
  41d0ec:	(bad)  
  41d0ed:	stos   DWORD PTR es:[edi],eax
  41d0ee:	dec    edx
  41d0ef:	sub    al,BYTE PTR [esi+ebx*2-0x78287b50]
  41d0f6:	pusha  
  41d0f7:	loopne 0x41d15d
  41d0f9:	push   ss
  41d0fa:	addr16 sbb eax,0x268249c1
  41d100:	or     al,0x18
  41d102:	hlt    
  41d103:	push   eax
  41d104:	xor    cl,BYTE PTR [edx]
  41d106:	outs   dx,DWORD PTR ds:[esi]
  41d107:	inc    ebp
  41d108:	out    0x13,al
  41d10a:	(bad)  
  41d10b:	push   edi
  41d10c:	mov    DWORD PTR [edi-0x41],esp
  41d10f:	fdivrp st(4),st
  41d111:	xchg   edi,eax
  41d112:	test   BYTE PTR [eax-0x2178ea2d],ch
  41d118:	fstp   TBYTE PTR [esi]
  41d11a:	out    0x57,eax
  41d11c:	xchg   DWORD PTR [ecx],edx
  41d11e:	xchg   DWORD PTR [esi-0x465b50a4],ecx
  41d124:	and    DWORD PTR [ecx+0x9],0x4
  41d128:	jge    0x41d12b
  41d12a:	add    al,BYTE PTR [ebx*1-0x42b65b46]
  41d131:	sub    ah,bl
  41d133:	test   bh,al
  41d135:	and    al,0x28
  41d137:	mov    BYTE PTR [ecx+ecx*4-0x2c53c423],bh
  41d13e:	cwde   
  41d13f:	jge    0x41d104
  41d141:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d142:	mov    bh,0x56
  41d144:	cmp    al,0xcb
  41d146:	jmp    0x5d97:0x41a5cf95
  41d14d:	inc    esi
  41d14e:	je     0x41d170
  41d150:	mul    BYTE PTR [ebx+edx*2]
  41d153:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d154:	sahf   
  41d155:	xchg   esi,eax
  41d156:	mov    cs,ebx
  41d158:	pop    esp
  41d159:	fdiv   st(3),st
  41d15b:	inc    ebx
  41d15c:	add    eax,0x78615e11
  41d161:	aaa    
  41d162:	mov    bh,0xca
  41d164:	(bad)  
  41d166:	daa    
  41d167:	loopne 0x41d10c
  41d169:	push   ss
  41d16a:	loopne 0x41d139
  41d16c:	jae    0x41d155
  41d16e:	aaa    
  41d16f:	pop    esp
  41d170:	xor    BYTE PTR [eax+0xd],bh
  41d173:	sub    cl,BYTE PTR ds:0x5494b48a
  41d179:	jae    0x41d177
  41d17b:	or     dh,BYTE PTR [ebp+0x75]
  41d17e:	imul   esi,DWORD PTR [esi-0x269413a],0x2dd3c381
  41d188:	call   0xd6246a63
  41d18d:	popa   
  41d18e:	jns    0x41d175
  41d190:	jae    0x41d123
  41d192:	or     eax,0x4349bd91
  41d197:	aaa    
  41d198:	push   es
  41d199:	add    al,0x46
  41d19b:	push   cs
  41d19c:	sub    ah,dl
  41d19e:	stos   BYTE PTR es:[edi],al
  41d19f:	and    esi,eax
  41d1a1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d1a2:	addr16 call 0x9d953136
  41d1a8:	push   ecx
  41d1a9:	(bad)  
  41d1aa:	jne    0x41d1d6
  41d1ac:	mov    esi,0x3607c148
  41d1b1:	dec    ebx
  41d1b2:	push   ss
  41d1b3:	je     0x41d200
  41d1b5:	cwde   
  41d1b6:	dec    eax
  41d1b7:	loope  0x41d207
  41d1b9:	jnp    0x41d22d
  41d1bb:	push   ds
  41d1bc:	adc    DWORD PTR [eax-0x79],0xffffffb9
  41d1c0:	add    bh,BYTE PTR [eax-0x1e]
  41d1c3:	ret    
  41d1c4:	xchg   edx,eax
  41d1c5:	pop    ebx
  41d1c6:	les    ecx,FWORD PTR [edx+0x7aa90691]
  41d1cc:	cmp    ah,dh
  41d1ce:	fadd   QWORD PTR [ebp-0x7c]
  41d1d1:	pop    ss
  41d1d2:	call   DWORD PTR [edi-0x1db9cab1]
  41d1d8:	xchg   edx,eax
  41d1d9:	and    eax,0xdeed3d50
  41d1de:	mov    al,ds:0x82b72ea9
  41d1e3:	xchg   BYTE PTR [ebx+0x2a],bh
  41d1e6:	or     ah,bl
  41d1e8:	mov    bl,0xa1
  41d1ea:	jg     0x41d1a9
  41d1ec:	fistp  WORD PTR [ebp+0x6a]
  41d1ef:	repnz push cs
  41d1f1:	fidiv  DWORD PTR [esi-0x58]
  41d1f5:	jne    0x41d266
  41d1f7:	jae    0x41d183
  41d1f9:	mov    cl,0xad
  41d1fb:	push   es
  41d1fc:	and    cl,BYTE PTR [ecx+0x40]
  41d1ff:	mov    edi,0xb0f8ed15
  41d204:	inc    edi
  41d205:	push   ecx
  41d206:	rcr    DWORD PTR [edx-0x49],0x68
  41d20a:	jno    0x41d21b
  41d20c:	xchg   ebp,eax
  41d20d:	data16 stc 
  41d20f:	test   al,0x10
  41d211:	dec    ebp
  41d213:	sti    
  41d214:	and    eax,ebx
  41d216:	lods   al,BYTE PTR ds:[esi]
  41d217:	mov    BYTE PTR [edx-0x66de9df3],bl
  41d21d:	and    ah,BYTE PTR [esp+ecx*2+0x26]
  41d221:	pop    esi
  41d222:	loop   0x41d23c
  41d224:	jne    0x41d241
  41d226:	or     BYTE PTR [ebx-0x41],0xcc
  41d22a:	adc    edx,DWORD PTR [edx+eax*4+0x5e]
  41d22e:	push   eax
  41d22f:	jnp    0x41d270
  41d231:	xchg   edi,eax
  41d232:	mov    ah,BYTE PTR [ecx]
  41d234:	inc    edi
  41d235:	jmp    0xfb0a3062
  41d23a:	sbb    eax,DWORD PTR [ebx-0x25263181]
  41d240:	sbb    eax,0x4d18dbc9
  41d245:	mov    dl,0x43
  41d247:	mov    ah,0xc5
  41d249:	(bad)  
  41d24a:	in     al,0xf9
  41d24c:	fidivr WORD PTR [ebx+0x7f]
  41d24f:	aad    0xa9
  41d251:	iret   
  41d252:	mov    ?,WORD PTR [esi]
  41d254:	mov    esi,0x2799142b
  41d259:	stos   DWORD PTR es:[edi],eax
  41d25a:	push   0xffffffe6
  41d25c:	lock push ebx
  41d25e:	sbb    cl,BYTE PTR [ecx+0x6c]
  41d261:	jno    0x41d289
  41d263:	(bad)  
  41d264:	(bad)  
  41d265:	std    
  41d266:	xchg   eax,eax
  41d268:	ins    BYTE PTR es:[edi],dx
  41d269:	add    al,0x45
  41d26b:	pop    ss
  41d26c:	xchg   edi,eax
  41d26d:	inc    ecx
  41d26e:	pop    ebp
  41d26f:	mov    al,ds:0x70730123
  41d274:	and    al,al
  41d276:	dec    esp
  41d277:	popf   
  41d278:	lahf   
  41d279:	or     al,0x41
  41d27b:	mov    cl,0x1
  41d27d:	pop    edx
  41d27e:	(bad)  
  41d27f:	push   esi
  41d280:	and    BYTE PTR [ecx-0x2c],ah
  41d283:	test   BYTE PTR ds:0x5db3567,0xbf
  41d28a:	outs   dx,BYTE PTR ds:[esi]
  41d28b:	call   0xcc9bfa3e
  41d290:	cmp    BYTE PTR [ebp+0x71],0x4b
  41d294:	xor    bh,al
  41d296:	cwde   
  41d297:	dec    ebx
  41d298:	add    eax,0x68429ba2
  41d29d:	mov    edi,0xe28b08b7
  41d2a2:	stc    
  41d2a3:	mov    BYTE PTR [ebx],0x5d
  41d2a6:	mov    dh,0xdd
  41d2a8:	(bad)  [edi-0xd]
  41d2ab:	sbb    ecx,edi
  41d2ad:	call   0x5899:0x35489f31
  41d2b4:	inc    ebp
  41d2b5:	dec    eax
  41d2b6:	push   0x7a3cf8bd
  41d2bb:	and    DWORD PTR [ebx+0x2d7db1ab],eax
  41d2c1:	lods   al,BYTE PTR ds:[esi]
  41d2c2:	mov    edi,?
  41d2c4:	or     BYTE PTR [ebp+0x2ce016cd],bh
  41d2ca:	mov    dh,0x9c
  41d2cc:	or     al,0x98
  41d2ce:	sub    edi,DWORD PTR [ecx+0x39]
  41d2d1:	loopne 0x41d2e5
  41d2d3:	ror    BYTE PTR [esi],cl
  41d2d5:	call   ecx
  41d2d7:	hlt    
  41d2d8:	data16 mov bl,0xf
  41d2db:	xor    ch,cl
  41d2dd:	sub    eax,DWORD PTR [ebp-0x3c58d61c]
  41d2e3:	outs   dx,DWORD PTR ds:[esi]
  41d2e4:	push   ebp
  41d2e5:	cmp    eax,0xc91607d2
  41d2ea:	mov    ?,WORD PTR ds:0x647c1ad7
  41d2f0:	loope  0x41d279
  41d2f2:	dec    edx
  41d2f3:	cmc    
  41d2f4:	setnp  BYTE PTR [ebx-0x762abbdf]
  41d2fb:	sar    al,1
  41d2fd:	mov    dh,0x6a
  41d2ff:	inc    DWORD PTR [esi]
  41d301:	xor    DWORD PTR [ebx+0x2a],edi
  41d304:	sub    al,0xde
  41d306:	push   0x82a34710
  41d30b:	xchg   ecx,eax
  41d30c:	add    BYTE PTR [edx],cl
  41d30e:	in     eax,0xa2
  41d310:	sti    
  41d311:	test   al,0x2c
  41d313:	dec    edi
  41d314:	mov    dh,0xce
  41d316:	rol    BYTE PTR [ecx+eax*8+0x798502dc],0x6b
  41d31e:	lahf   
  41d31f:	int3   
  41d320:	hlt    
  41d321:	sbb    eax,0x34c7f7ce
  41d326:	xchg   ebx,eax
  41d327:	xor    ecx,0xffffff85
  41d32a:	sub    BYTE PTR [edi+0x6a081d88],cl
  41d330:	sbb    eax,DWORD PTR [edi-0x3cc6effc]
  41d336:	clc    
  41d337:	cmp    BYTE PTR [esp+edx*2+0x48288405],bl
  41d33e:	mov    cl,0xf8
  41d340:	jbe    0x41d300
  41d342:	sub    eax,0x98169682
  41d347:	xchg   BYTE PTR [ebp-0xe380680],dl
  41d34d:	call   0xa6258fbf
  41d352:	je     0x41d37c
  41d354:	jns    0x41d354
  41d356:	sub    dl,BYTE PTR [ebp-0x156c7627]
  41d35c:	xchg   DWORD PTR [edi+edi*4+0x4248d110],ebp
  41d363:	(bad)  
  41d364:	mov    ds:0x85c59f81,al
  41d369:	sub    al,0x3f
  41d36b:	and    ecx,DWORD PTR [esi-0x491bea77]
  41d371:	cmp    ebx,DWORD PTR [edi-0x6080f218]
  41d377:	repz sbb BYTE PTR [eax+0x13bf202c],0x88
  41d37f:	sub    al,0xde
  41d381:	push   0xed0cb45a
  41d386:	mov    al,ds:0x7cdcb75e
  41d38b:	pop    eax
  41d38c:	pop    ebx
  41d38d:	add    al,0xa7
  41d38f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d390:	je     0x41d3e0
  41d392:	inc    eax
  41d393:	adc    DWORD PTR gs:[eax+0x277ef357],ecx
  41d39a:	xchg   esp,eax
  41d39b:	pop    ds
  41d39c:	fild   WORD PTR ds:0x1c2784a2
  41d3a2:	popa   
  41d3a3:	cmp    eax,0xbd88f56a
  41d3a8:	ja     0x41d3e3
  41d3aa:	xor    bh,BYTE PTR [edx+0x37]
  41d3ad:	push   0x90f42200
  41d3b2:	mov    ebx,0x5865bcde
  41d3b7:	sbb    al,0xab
  41d3b9:	lds    ecx,FWORD PTR [ecx]
  41d3bb:	add    edx,0xb285fb9d
  41d3c1:	xor    DWORD PTR ds:0x753f071f,esi
  41d3c7:	(bad)  
  41d3c8:	jl     0x41d3d5
  41d3ca:	dec    ebx
  41d3cb:	mov    ecx,0xebc9a27c
  41d3d0:	stc    
  41d3d1:	std    
  41d3d2:	jmp    0x41d415
  41d3d4:	push   edi
  41d3d5:	dec    ebp
  41d3d6:	mov    ebx,0x313de0f0
  41d3db:	mov    cl,cl
  41d3dd:	pop    edi
  41d3de:	enter  0xb8a7,0xb8
  41d3e2:	or     DWORD PTR [eax+0x39],edi
  41d3e5:	test   DWORD PTR [esi],eax
  41d3e7:	adc    DWORD PTR [edx+0x6179d453],0x535ac017
  41d3f1:	js     0x41d379
  41d3f3:	sbb    ebp,DWORD PTR ds:0xb26d6459
  41d3f9:	sbb    eax,0x786a1020
  41d3fe:	test   BYTE PTR [ebp-0x1e88c12],ch
  41d404:	dec    ebp
  41d405:	adc    BYTE PTR ds:0x10d0982b,ah
  41d40b:	dec    ebp
  41d40c:	ud0    ebp,DWORD PTR [ecx]
  41d40f:	jle    0x41d412
  41d411:	frstor [ecx-0x54839fec]
  41d417:	and    ebp,DWORD PTR [ecx-0x9850bbb]
  41d41d:	test   BYTE PTR es:[esi+0x73],0xe0
  41d422:	mov    ecx,0xa1bd69ed
  41d427:	mov    esp,0xd59aac27
  41d42c:	sbb    DWORD PTR ss:[edx],edi
  41d42f:	pop    esp
  41d430:	pop    es
  41d431:	ins    DWORD PTR es:[edi],dx
  41d432:	scas   al,BYTE PTR es:[edi]
  41d433:	pusha  
  41d434:	test   BYTE PTR ds:0x9fd7eda9,al
  41d43a:	push   es
  41d43b:	popa   
  41d43c:	mov    ds:0x56134b0a,eax
  41d441:	dec    eax
  41d442:	jecxz  0x41d40b
  41d444:	ja     0x41d44a
  41d446:	(bad)  
  41d447:	fisub  DWORD PTR [esi+0x716912c0]
  41d44d:	push   esp
  41d44e:	xchg   edx,eax
  41d44f:	xchg   edx,eax
  41d450:	outs   dx,BYTE PTR fs:[esi]
  41d452:	fadd   DWORD PTR [ebx+0x7606475]
  41d458:	aad    0x87
  41d45a:	add    al,BYTE PTR [esi]
  41d45c:	xchg   BYTE PTR [ecx-0x4e],bh
  41d45f:	js     0x41d4c1
  41d461:	pop    edx
  41d462:	test   dl,bl
  41d464:	gs xor al,0x26
  41d467:	gs xchg edi,eax
  41d469:	in     al,dx
  41d46a:	pop    edx
  41d46b:	jbe    0x41d4db
  41d46d:	rcr    ecx,cl
  41d46f:	dec    esi
  41d470:	daa    
  41d471:	adc    ebp,esi
  41d473:	aaa    
  41d474:	lods   al,BYTE PTR ds:[esi]
  41d475:	ins    BYTE PTR es:[edi],dx
  41d476:	scas   al,BYTE PTR es:[edi]
  41d477:	std    
  41d478:	inc    ebx
  41d479:	ss and al,0x80
  41d47c:	cmp    BYTE PTR [edi-0x4357425f],0x1c
  41d483:	push   es
  41d484:	mov    esi,edx
  41d486:	hlt    
  41d487:	imul   ebp,DWORD PTR [esp+eax*4-0x6080eb26],0xe56a5b28
  41d492:	mov    ah,0x83
  41d494:	imul   edi,edx,0x37
  41d497:	ins    DWORD PTR es:[edi],dx
  41d498:	call   0x3be9d0dc
  41d49d:	out    0x3f,eax
  41d49f:	xor    al,0x12
  41d4a1:	mov    ds:0xdf873929,al
  41d4a6:	jl     0x41d525
  41d4a8:	sub    eax,0xefe7008c
  41d4ad:	mov    dh,0xba
  41d4af:	leave  
  41d4b0:	mov    ch,0x50
  41d4b2:	mov    ebx,0x48eba292
  41d4b7:	scas   al,BYTE PTR es:[edi]
  41d4b8:	push   esp
  41d4b9:	xor    BYTE PTR [edx],ah
  41d4bb:	push   ds
  41d4bc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d4bd:	mov    ebx,esp
  41d4bf:	adc    BYTE PTR [edx+edi*1+0x207296a8],bl
  41d4c6:	pop    esp
  41d4c7:	test   eax,0x9f7a1c51
  41d4cc:	mov    al,0x4c
  41d4ce:	pushf  
  41d4cf:	nop
  41d4d0:	and    al,0xcb
  41d4d2:	jbe    0x41d54a
  41d4d4:	push   esp
  41d4d5:	pusha  
  41d4d6:	arpl   WORD PTR [edi+0x4b],dx
  41d4d9:	mov    WORD PTR [ecx],?
  41d4db:	push   esp
  41d4dc:	fwait
  41d4dd:	xor    al,0xbc
  41d4df:	in     eax,dx
  41d4e0:	ror    DWORD PTR [ebx],cl
  41d4e2:	ins    DWORD PTR es:[edi],dx
  41d4e3:	and    eax,DWORD PTR [ebx-0x2e157cde]
  41d4e9:	xor    DWORD PTR [ebx+0x7d],eax
  41d4ec:	int3   
  41d4ed:	pop    eax
  41d4ee:	or     edx,ecx
  41d4f0:	mov    dl,0x6a
  41d4f2:	sub    al,0xd6
  41d4f4:	add    al,al
  41d4f6:	cwde   
  41d4f7:	inc    eax
  41d4f8:	mov    esp,0xfa8688ec
  41d4fd:	std    
  41d4fe:	pop    ds
  41d4ff:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d500:	fbstp  TBYTE PTR [ecx]
  41d502:	(bad)  
  41d503:	push   edi
  41d504:	js     0x41d582
  41d506:	ins    BYTE PTR es:[edi],dx
  41d507:	sbb    ah,BYTE PTR [ebx+esi*8]
  41d50a:	fistp  WORD PTR [esi-0x418af911]
  41d510:	test   ebx,esp
  41d512:	mov    al,ds:0x6ccc6723
  41d517:	jns    0x41d4e1
  41d519:	(bad)  
  41d51b:	push   es
  41d51c:	xor    dh,ah
  41d51e:	cli    
  41d51f:	push   ebx
  41d520:	retf   0xe3e
  41d523:	jp     0x41d54c
  41d525:	adc    bl,BYTE PTR [ecx+0x6c]
  41d528:	xchg   ebp,eax
  41d529:	xor    DWORD PTR [ebx],ebp
  41d52b:	add    eax,0x58
  41d52e:	xchg   ecx,eax
  41d52f:	mov    al,0xb7
  41d531:	and    bl,BYTE PTR [edi+0x14bdbbc4]
  41d537:	leave  
  41d538:	mov    ds:0x768e4a2,eax
  41d53d:	test   BYTE PTR [ebx-0x56],al
  41d540:	popa   
  41d541:	mov    eax,ds:0x549eb698
  41d546:	inc    eax
  41d547:	imul   eax,DWORD PTR ds:0x3ff2e709,0xffffffe9
  41d54e:	pushf  
  41d54f:	mov    bh,0x91
  41d551:	jno    0x41d505
  41d553:	pop    ebp
  41d554:	aam    0x6c
  41d556:	mov    al,ds:0x8c8f9e71
  41d55b:	je     0x41d55c
  41d55d:	clc    
  41d55e:	fbld   TBYTE PTR [ebx-0x4d]
  41d561:	push   esp
  41d562:	sub    eax,0x454c1caf
  41d567:	or     bl,bh
  41d569:	jae    0x41d51b
  41d56b:	in     eax,0x64
  41d56d:	fstp   DWORD PTR [ebp+0x32]
  41d570:	aas    
  41d571:	lock jge 0x41d5bc
  41d574:	gs ins DWORD PTR es:[edi],dx
  41d576:	jmp    0x41d567
  41d578:	sub    ebp,ebp
  41d57a:	mov    ebx,0x4b109276
  41d57f:	stc    
  41d580:	sbb    esi,DWORD PTR [esi+0x41ceb253]
  41d586:	outs   dx,BYTE PTR ds:[esi]
  41d587:	not    DWORD PTR [ebx-0x1d]
  41d58a:	test   esp,0xb8351474
  41d590:	pop    esp
  41d591:	mov    ebx,esi
  41d593:	xchg   esi,eax
  41d594:	arpl   WORD PTR [esi-0x32],sp
  41d597:	push   cs
  41d598:	test   DWORD PTR [eax-0x42c84c19],edx
  41d59e:	push   edx
  41d59f:	add    ah,BYTE PTR [ecx+ebp*1]
  41d5a2:	jbe    0x41d5b1
  41d5a4:	mov    bl,0x93
  41d5a6:	jmp    0x14c49360
  41d5ab:	xchg   edx,eax
  41d5ac:	retf   
  41d5ad:	test   esp,0xbd6ed1ab
  41d5b3:	adc    ebp,DWORD PTR [eax+eax*1]
  41d5b6:	std    
  41d5b7:	push   ebx
  41d5b8:	mov    ecx,ebx
  41d5ba:	cmp    ch,BYTE PTR [ebx+0x5c]
  41d5bd:	ficom  DWORD PTR [eax+ebx*4]
  41d5c0:	push   edx
  41d5c1:	sar    DWORD PTR [esi+0x1e],cl
  41d5c4:	sar    al,1
  41d5c6:	cmp    DWORD PTR [ecx-0x1be0c73f],esp
  41d5cc:	adc    BYTE PTR [ebp+0x36140dc8],0xc0
  41d5d3:	sbb    dh,BYTE PTR [edx]
  41d5d5:	pop    ds
  41d5d6:	pusha  
  41d5d7:	xor    al,0xa
  41d5d9:	out    0x6e,eax
  41d5db:	jmp    0x41d5b9
  41d5dd:	ja     0x41d60c
  41d5df:	sub    DWORD PTR [edi],0x2b
  41d5e2:	jne    0x41d600
  41d5e4:	push   esp
  41d5e5:	rol    edx,1
  41d5e7:	jnp    0x41d5bd
  41d5e9:	inc    eax
  41d5ea:	fstp   QWORD PTR [edi+edx*1-0x55b21994]
  41d5f1:	retf   0x3d80
  41d5f4:	sbb    al,0xd4
  41d5f6:	cli    
  41d5f7:	jo     0x41d5f9
  41d5f9:	or     al,0x15
  41d5fb:	data16 outs dx,BYTE PTR ds:[esi]
  41d5fd:	loopne 0x41d5ee
  41d5ff:	cmp    BYTE PTR [edx+0x52],ch
  41d602:	fstp   QWORD PTR fs:[esi-0x2a89033]
  41d609:	call   0xac20957
  41d60e:	mov    DWORD PTR [eax+0xe],esp
  41d611:	cmp    al,0x37
  41d613:	mov    ds:0xb61e4ca2,eax
  41d618:	sbb    DWORD PTR [edx+0x7f],0xa86ab000
  41d61f:	push   ebp
  41d620:	inc    edi
  41d621:	jo     0x41d68c
  41d623:	stos   BYTE PTR es:[edi],al
  41d624:	mov    ?,ebp
  41d626:	out    0x1d,al
  41d628:	xor    al,0x8c
  41d62a:	or     al,al
  41d62c:	cmp    BYTE PTR [ecx+0x22],bl
  41d62f:	xchg   DWORD PTR [ebp-0x5372494a],esp
  41d635:	mov    eax,0x8a344cb0
  41d63a:	fwait
  41d63b:	lods   eax,DWORD PTR ds:[esi]
  41d63c:	aas    
  41d63d:	inc    esp
  41d63e:	mov    esi,edi
  41d640:	shl    BYTE PTR [edi],0x74
  41d643:	std    
  41d644:	inc    esi
  41d645:	xchg   ebx,eax
  41d646:	(bad)  
  41d647:	jne    0x41d5e3
  41d649:	push   eax
  41d64a:	fbld   TBYTE PTR [ecx-0x73]
  41d64d:	ret    
  41d64e:	(bad)  
  41d64f:	and    ah,ch
  41d651:	mov    dl,0x21
  41d653:	in     eax,dx
  41d654:	fld    TBYTE PTR [ebp+0x61]
  41d657:	cmc    
  41d658:	adc    al,0x17
  41d65a:	add    eax,0x177ab254
  41d65f:	pusha  
  41d660:	cli    
  41d661:	cmp    ah,BYTE PTR [ecx]
  41d663:	mov    edx,0x5da8cce3
  41d668:	shl    DWORD PTR [eax-0x33f1a1c2],0xe6
  41d66f:	inc    esp
  41d670:	and    eax,0xaa620cc
  41d675:	add    eax,0xe414bbae
  41d67a:	push   es
  41d67b:	add    ecx,DWORD PTR [ebx+eax*1]
  41d67e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d67f:	mov    BYTE PTR [esi],0xc8
  41d682:	addr16 mov dh,cl
  41d685:	push   edx
  41d686:	sti    
  41d687:	pop    ds
  41d688:	repnz dec edi
  41d68a:	mov    bh,0xdc
  41d68c:	fimul  WORD PTR [ecx+0x78545b47]
  41d692:	pop    esi
  41d693:	lods   al,BYTE PTR ds:[esi]
  41d694:	adc    BYTE PTR [ecx+0x965a81a],ch
  41d69a:	xchg   esp,eax
  41d69b:	retf   0xe4a8
  41d69e:	hlt    
  41d69f:	cmp    edx,edi
  41d6a1:	pop    esi
  41d6a2:	je     0x41d643
  41d6a4:	ret    0x63bc
  41d6a7:	loop   0x41d6d4
  41d6a9:	sub    edi,DWORD PTR [edi-0x7d683a78]
  41d6af:	xor    ch,al
  41d6b1:	jno    0x41d6e2
  41d6b3:	pop    esi
  41d6b4:	leave  
  41d6b5:	shl    DWORD PTR [ebp-0x7c20bb3f],cl
  41d6bb:	(bad)  
  41d6bc:	in     eax,0xd8
  41d6be:	pop    ecx
  41d6bf:	fsub   QWORD PTR [eax]
  41d6c1:	lods   al,BYTE PTR ds:[esi]
  41d6c2:	stos   DWORD PTR es:[edi],eax
  41d6c3:	jmp    0xdd60:0x1dd6f9b7
  41d6ca:	xchg   ebp,eax
  41d6cb:	push   ss
  41d6cc:	add    ebx,DWORD PTR [esi+0x4d763845]
  41d6d2:	push   edx
  41d6d3:	xchg   ebx,eax
  41d6d4:	cmp    eax,0x6dd5464f
  41d6d9:	sahf   
  41d6da:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d6db:	sahf   
  41d6dc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d6dd:	dec    ebx
  41d6de:	pop    edi
  41d6df:	test   eax,0xda0d5e1c
  41d6e4:	cdq    
  41d6e5:	xchg   ebx,eax
  41d6e6:	and    BYTE PTR [eax-0x39b91640],al
  41d6ec:	and    al,0xf9
  41d6ee:	repz loop 0x41d70e
  41d6f1:	adc    BYTE PTR [ebx+0x1bd8eeed],bl
  41d6f7:	and    edx,edi
  41d6f9:	push   0x69a790e8
  41d6fe:	sbb    BYTE PTR [esp+eax*4+0x4a],bh
  41d702:	(bad)
  41d705:	std    
  41d706:	cld    
  41d707:	test   eax,0x5212766a
  41d70c:	ror    BYTE PTR [edi],1
  41d70e:	arpl   ax,si
  41d710:	stos   BYTE PTR es:[edi],al
  41d711:	dec    eax
  41d712:	mov    al,BYTE PTR [eax]
  41d714:	jno    0x41d707
  41d716:	int3   
  41d717:	imul   ebp,DWORD PTR [eax+ebp*1-0x58ca7719],0x55
  41d71f:	shr    DWORD PTR [ebp+0x3a],cl
  41d722:	in     al,dx
  41d723:	dec    ebx
  41d724:	shl    BYTE PTR [ebp-0x1ecb92c2],0x44
  41d72b:	out    0xa6,eax
  41d72d:	mov    dh,0xc3
  41d72f:	jmp    0x4689:0xae0e4e67
  41d736:	or     DWORD PTR [ecx],ebx
  41d738:	jnp    0x41d76e
  41d73a:	mov    ebx,0x8f686287
  41d73f:	jne    0x41d6c3
  41d741:	and    eax,0x5b21ded7
  41d746:	mov    ebx,0x60520897
  41d74b:	stos   BYTE PTR es:[edi],al
  41d74c:	mov    eax,0x1048200c
  41d751:	pop    ds
  41d752:	ret    
  41d753:	arpl   WORD PTR [ebp+0x35],sp
  41d756:	dec    esp
  41d757:	xchg   BYTE PTR [edx-0x2a],al
  41d75a:	add    DWORD PTR [ebx+eax*8+0x1f],edx
  41d75e:	push   0xffffffbb
  41d760:	xor    BYTE PTR [ebx-0x6978f177],0x84
  41d767:	cs fdiv st(6),st
  41d76a:	xor    BYTE PTR [ebp+ecx*2+0x4134a9c0],0xb4
  41d772:	(bad)  [esi]
  41d774:	mov    dh,0xf1
  41d776:	sbb    bl,dh
  41d778:	loop   0x41d75f
  41d77a:	adc    eax,ebp
  41d77c:	push   edx
  41d77d:	push   cs
  41d77e:	mov    bl,0xa4
  41d780:	lods   eax,DWORD PTR ds:[esi]
  41d781:	enter  0x37f3,0x12
  41d785:	cmp    dh,BYTE PTR [ecx-0x6f29a005]
  41d78b:	add    ch,al
  41d78d:	fsub   st(0),st
  41d78f:	add    eax,0xf42f5f96
  41d794:	in     eax,dx
  41d795:	jno    0x41d727
  41d797:	das    
  41d798:	mov    eax,0x6a41366f
  41d79d:	xchg   ecx,eax
  41d79e:	dec    ecx
  41d79f:	push   cs
  41d7a0:	psrad  mm5,QWORD PTR [ecx+0x7a]
  41d7a4:	inc    ebp
  41d7a5:	adc    DWORD PTR [eax],edx
  41d7a7:	inc    esi
  41d7a8:	into   
  41d7a9:	pop    ecx
  41d7aa:	outs   dx,DWORD PTR ds:[si]
  41d7ac:	loop   0x41d763
  41d7ae:	(bad)  
  41d7b0:	cli    
  41d7b1:	sub    esi,esi
  41d7b3:	lods   eax,DWORD PTR ds:[esi]
  41d7b4:	add    bl,BYTE PTR [esi]
  41d7b6:	mov    esp,0xf29bf3ce
  41d7bb:	jl     0x41d756
  41d7bd:	push   esp
  41d7be:	and    ax,0x55ae
  41d7c2:	sub    BYTE PTR [ebx+0x21],al
  41d7c5:	sti    
  41d7c6:	xchg   esi,eax
  41d7c7:	jg     0x41d81d
  41d7c9:	ror    BYTE PTR [esi+0xb],cl
  41d7cc:	pop    esp
  41d7cd:	push   cs
  41d7ce:	xlat   BYTE PTR ds:[ebx]
  41d7cf:	not    BYTE PTR [edi+0x238eee94]
  41d7d5:	das    
  41d7d6:	arpl   WORD PTR [ebx],ax
  41d7d8:	into   
  41d7d9:	xor    esp,DWORD PTR [esi]
  41d7db:	out    dx,eax
  41d7dc:	fadd   QWORD PTR [edx]
  41d7de:	add    eax,0x64eae9d8
  41d7e3:	es (bad) 
  41d7e6:	frstor [esi-0x295318a9]
  41d7ec:	pop    edi
  41d7ed:	repz mov ds:0x3433a87,eax
  41d7f3:	cmp    eax,0x9349fbbf
  41d7f8:	mov    edx,0x435ac9d3
  41d7fd:	scas   eax,DWORD PTR es:[edi]
  41d7fe:	sub    ecx,DWORD PTR [esi]
  41d800:	ret    0xe9a9
  41d803:	hlt    
  41d804:	mov    ah,0x74
  41d806:	retf   0x5bf7
  41d809:	int    0xe6
  41d80b:	ss sub eax,0x5fe29d40
  41d811:	ja     0x41d7ab
  41d813:	rcr    dl,0x79
  41d816:	mov    ebp,0xde5ae795
  41d81b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d81c:	mov    bl,0xaf
  41d81e:	es jg  0x41d7e4
  41d821:	mov    ah,BYTE PTR gs:[edx]
  41d824:	jg     0x41d80a
  41d826:	jae    0x41d7d2
  41d828:	retf   0xc007
  41d82b:	adc    eax,0xb0abf50c
  41d831:	sub    BYTE PTR [ebx-0x7e1fcf52],bl
  41d837:	arpl   di,bx
  41d839:	pop    es
  41d83a:	ret    0x832c
  41d83d:	ret    
  41d83e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d83f:	retf   0x5d4a
  41d842:	jmp    0x41d871
  41d844:	iret   
  41d845:	scas   al,BYTE PTR es:[edi]
  41d846:	leave  
  41d847:	add    DWORD PTR [edi-0xf],ecx
  41d84a:	push   ebx
  41d84b:	ss shl ecx,cl
  41d84e:	xor    edx,esp
  41d850:	gs add al,0x18
  41d853:	loop   0x41d897
  41d855:	dec    esp
  41d856:	cmp    DWORD PTR [ecx-0x1],0x54
  41d85a:	gs aam 0xde
  41d85d:	loopne 0x41d7ff
  41d85f:	and    eax,0xbfdbc37b
  41d864:	(bad)  
  41d865:	retf   0xe29a
  41d868:	dec    edi
  41d869:	cmc    
  41d86a:	inc    ebx
  41d86b:	push   ds
  41d86c:	jae    0x41d892
  41d86e:	jbe    0x41d894
  41d870:	xor    eax,eax
  41d872:	jmp    0xb7b3be8a
  41d877:	add    dh,BYTE PTR [ebp+0x38]
  41d87a:	arpl   WORD PTR [edx+0x4b],bx
  41d87d:	inc    esp
  41d87e:	mov    dh,0x45
  41d880:	cmp    al,0x40
  41d882:	and    eax,0x44dfb768
  41d887:	jl     0x41d87f
  41d889:	dec    ecx
  41d88a:	mov    ebp,DWORD PTR [ebx]
  41d88c:	jge    0x41d8b8
  41d88e:	ins    DWORD PTR es:[edi],dx
  41d88f:	push   ds
  41d890:	aaa    
  41d891:	das    
  41d892:	push   esp
  41d893:	mov    edi,0x4b5caffe
  41d898:	push   edx
  41d899:	enter  0xa85f,0x76
  41d89d:	add    cl,bh
  41d89f:	jo     0x41d840
  41d8a1:	ins    BYTE PTR es:[edi],dx
  41d8a2:	cmp    al,0x64
  41d8a4:	sbb    eax,DWORD PTR [ecx]
  41d8a6:	push   ecx
  41d8a7:	and    dl,BYTE PTR [edi+0x2d654a7]
  41d8ad:	in     al,0x54
  41d8af:	sbb    bl,BYTE PTR [edi]
  41d8b1:	lods   al,BYTE PTR cs:[esi]
  41d8b3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d8b4:	mul    BYTE PTR [ecx]
  41d8b6:	lods   al,BYTE PTR ds:[esi]
  41d8b7:	mov    esp,0x8a0508fe
  41d8bc:	les    ebx,FWORD PTR [ebp+0x6b]
  41d8bf:	into   
  41d8c0:	mov    eax,ds:0x355481f6
  41d8c5:	ficom  DWORD PTR [ecx]
  41d8c7:	mov    ds:0xd06cd5bb,eax
  41d8cc:	add    al,0x44
  41d8ce:	sub    eax,edi
  41d8d0:	jne    0x41d90f
  41d8d2:	jmp    0xaac5a7b6
  41d8d7:	mov    esp,0x44347780
  41d8dc:	and    ecx,DWORD PTR [edx-0x69]
  41d8df:	push   0x70
  41d8e1:	xor    al,0x7d
  41d8e3:	push   ss
  41d8e4:	pusha  
  41d8e5:	inc    esi
  41d8e6:	sbb    esp,DWORD PTR [ebp-0x1f]
  41d8e9:	cmc    
  41d8ea:	push   eax
  41d8eb:	lods   eax,DWORD PTR ss:[esi]
  41d8ed:	jg     0x41d8b5
  41d8ef:	cmp    cl,BYTE PTR [ebp+0x2c]
  41d8f2:	outs   dx,BYTE PTR ds:[esi]
  41d8f3:	xchg   edx,eax
  41d8f4:	sbb    BYTE PTR [ecx+0xd],ch
  41d8f7:	imul   eax,eax,0x61e7ac47
  41d8fd:	xchg   ecx,eax
  41d8fe:	ins    DWORD PTR es:[edi],dx
  41d8ff:	scas   eax,DWORD PTR es:[edi]
  41d900:	sub    al,BYTE PTR [ecx+0x37be17c0]
  41d906:	je     0x41d90a
  41d908:	lahf   
  41d909:	es inc eax
  41d90b:	test   BYTE PTR [ecx+0x65],dh
  41d90e:	inc    ebp
  41d90f:	and    ebp,ecx
  41d911:	shl    ah,0xf8
  41d914:	lock mov ch,0x7e
  41d917:	retf   
  41d918:	in     eax,dx
  41d919:	mov    WORD PTR [eax-0x52],cs
  41d91c:	cld    
  41d91d:	jae    0x41d99b
  41d91f:	and    al,0x11
  41d921:	or     al,BYTE PTR [eax+0x2d]
  41d924:	push   ebp
  41d925:	inc    esp
  41d926:	(bad)  
  41d927:	sbb    al,0xd7
  41d929:	sub    dh,0x62
  41d92c:	push   edx
  41d92d:	ret    0xb3b7
  41d930:	lahf   
  41d931:	ucomiss xmm5,DWORD PTR [esi]
  41d934:	sbb    al,0xb4
  41d936:	sbb    bl,BYTE PTR [ebx+0x67]
  41d939:	bound  edi,QWORD PTR [eax+0x15224431]
  41d93f:	inc    edx
  41d940:	sub    al,0xcb
  41d942:	inc    esi
  41d943:	test   al,0xfe
  41d945:	pop    ds
  41d946:	sub    eax,0xf0d5331f
  41d94b:	mov    ds:0xd870e0ca,al
  41d950:	(bad)  
  41d951:	call   0x74fa:0xa8b296e1
  41d958:	sar    DWORD PTR [edx],0xbb
  41d95b:	or     bh,BYTE PTR [ebp+0x19]
  41d95e:	int3   
  41d95f:	xor    DWORD PTR [eax+edx*2],esi
  41d962:	dec    ecx
  41d963:	stos   BYTE PTR es:[edi],al
  41d964:	inc    ebp
  41d965:	out    0xbd,eax
  41d967:	or     DWORD PTR [edi-0x42d92c48],ebx
  41d96d:	dec    eax
  41d96e:	push   edi
  41d96f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d970:	inc    eax
  41d971:	aas    
  41d972:	or     eax,0x8ca1eaff
  41d977:	xor    DWORD PTR [eax],esp
  41d979:	ror    BYTE PTR [edx+ebp*8-0x3b8628db],1
  41d980:	shl    esp,0x7e
  41d983:	imul   bp,WORD PTR [ecx-0x3d581805],0xaec
  41d98c:	push   esp
  41d98d:	mov    esi,?
  41d98f:	pop    edi
  41d990:	retf   0x6528
  41d993:	or     eax,0xee5730e7
  41d998:	mov    ds:0xd5c24cf6,al
  41d99d:	adc    DWORD PTR [esi],ebx
  41d99f:	jnp    0x41d954
  41d9a1:	sub    eax,0xdae89f03
  41d9a6:	in     al,0x9c
  41d9a8:	add    DWORD PTR [eax+0xb751557],edx
  41d9ae:	dec    eax
  41d9af:	push   esi
  41d9b0:	and    BYTE PTR [ebp-0x77],dh
  41d9b3:	xchg   ebp,eax
  41d9b4:	cli    
  41d9b5:	jecxz  0x41da36
  41d9b7:	push   ebp
  41d9b8:	sub    ch,BYTE PTR [ebp-0x2d]
  41d9bb:	sub    esi,DWORD PTR [eax]
  41d9bd:	xor    cl,BYTE PTR [edi-0x7d]
  41d9c0:	stos   DWORD PTR es:[edi],eax
  41d9c1:	pop    eax
  41d9c2:	jb     0x41d9b6
  41d9c4:	or     ecx,DWORD PTR [ebp-0x39]
  41d9c7:	jmp    0x51c12811
  41d9cc:	ret    0x9780
  41d9cf:	and    al,BYTE PTR [ebx]
  41d9d1:	mov    ebx,DWORD PTR [ecx]
  41d9d3:	inc    ecx
  41d9d4:	in     al,0x78
  41d9d6:	pushf  
  41d9d7:	and    DWORD PTR [edx],0x99857d41
  41d9dd:	sbb    BYTE PTR [eax+ebp*2-0x1a5fc5d0],ch
  41d9e4:	inc    bp
  41d9e6:	fidiv  DWORD PTR [esi+ebp*4]
  41d9e9:	shl    BYTE PTR fs:[esi+esi*1],1
  41d9ed:	mov    ebx,0x860602f0
  41d9f2:	stos   BYTE PTR es:[edi],al
  41d9f3:	pop    esp
  41d9f4:	fist   WORD PTR [edi]
  41d9f6:	clc    
  41d9f7:	aaa    
  41d9f8:	fwait
  41d9f9:	pop    esp
  41d9fa:	mov    ch,0x5f
  41d9fc:	ret    0x453b
  41d9ff:	imul   ecx,DWORD PTR [ebp-0x7],0x4d
  41da03:	(bad)  
  41da04:	frstor [ecx]
  41da06:	sub    DWORD PTR [ebx+edi*1+0x3eb0fa45],esi
  41da0d:	nop
  41da0e:	popf   
  41da0f:	gs aam 0x22
  41da12:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41da13:	mov    WORD PTR [edx+0x798be4bd],cs
  41da19:	mov    edx,0x9dfce18d
  41da1e:	adc    eax,0x8abdba9d
  41da23:	sub    BYTE PTR [ebx+ebp*8-0x33ec1526],0xf0
  41da2b:	pop    es
  41da2c:	sub    al,0xd4
  41da2e:	mov    bh,0xad
  41da30:	std    
  41da31:	outs   dx,DWORD PTR ds:[esi]
  41da32:	push   es
  41da33:	out    0xfe,al
  41da35:	or     al,0xd2
  41da37:	push   cs
  41da38:	ret    0xf7cd
  41da3b:	into   
  41da3c:	pop    ebp
  41da3d:	rcr    DWORD PTR [esi+0x68],cl
  41da40:	fcomp  DWORD PTR [edi-0x6bf65f3e]
  41da46:	cmp    DWORD PTR [edi-0x34],eax
  41da49:	fisub  WORD PTR ds:0x61e10253
  41da4f:	jle    0x41da1e
  41da51:	out    0xcf,eax
  41da53:	adc    edx,eax
  41da55:	(bad)  [esi+eiz*1+0x31e653f7]
  41da5c:	sub    ebx,DWORD PTR [esi]
  41da5e:	xor    bh,ch
  41da60:	xor    edi,DWORD PTR [ebp-0x29]
  41da63:	inc    eax
  41da64:	adc    al,0x2b
  41da66:	mov    edx,0x879cd1b8
  41da6b:	mov    dl,0xa9
  41da6d:	xchg   ecx,eax
  41da6e:	cmp    al,0xd4
  41da70:	and    al,0xcf
  41da72:	pop    edi
  41da73:	xor    edi,DWORD PTR [edx]
  41da75:	call   0xb413:0xda1add4
  41da7c:	inc    edi
  41da7d:	ds and eax,ebp
  41da80:	jne    0x41dac3
  41da82:	(bad)  
  41da83:	loop   0x41dab1
  41da85:	jns    0x41da9f
  41da87:	push   edi
  41da88:	ins    BYTE PTR es:[edi],dx
  41da89:	scas   al,BYTE PTR es:[edi]
  41da8a:	pop    esi
  41da8b:	sub    DWORD PTR [ecx-0x55],ecx
  41da8e:	cs mov eax,eax
  41da91:	sbb    ah,BYTE PTR [esp+esi*1+0x29]
  41da95:	stos   BYTE PTR es:[edi],al
  41da96:	xor    al,0x99
  41da98:	inc    esi
  41da99:	mov    edi,0x7abf053e
  41da9e:	clc    
  41da9f:	jle    0x41da34
  41daa1:	xor    al,dh
  41daa3:	mov    dl,0xa
  41daa5:	in     al,dx
  41daa6:	in     al,0x30
  41daa8:	and    al,BYTE PTR [ecx+0x31]
  41daab:	(bad)  [edi+0x2f]
  41daae:	jmp    0x7cb7:0x8784
  41dab4:	stc    
  41dab5:	mov    eax,ds:0x81c5151f
  41daba:	js     0x41dad3
  41dabc:	sub    eax,edx
  41dabe:	adc    al,0x17
  41dac0:	xor    ecx,0xffffffc3
  41dac3:	mov    esi,0xd2a3f33b
  41dac8:	cmp    al,0x52
  41daca:	sbb    esp,ecx
  41dacc:	dec    edi
  41dacd:	icebp  
  41dace:	pop    ss
  41dacf:	scas   al,BYTE PTR es:[edi]
  41dad0:	mov    ebp,0xdae06679
  41dad5:	jbe    0x41daaa
  41dad7:	dec    ebx
  41dad8:	mov    al,ds:0xc5e75393
  41dadd:	or     eax,esi
  41dadf:	add    al,0xf7
  41dae1:	xchg   edx,eax
  41dae2:	outs   dx,DWORD PTR es:[esi]
  41dae4:	jb     0x41db60
  41dae6:	dec    ebp
  41dae7:	js     0x41da82
  41dae9:	leave  
  41daea:	mov    ebp,ds
  41daec:	xchg   edx,eax
  41daed:	(bad)  
  41daef:	arpl   WORD PTR [edi+0x79bc706],cx
  41daf5:	add    BYTE PTR ds:0x7f5ebde7,ch
  41dafb:	ds xchg ebx,eax
  41dafd:	lods   eax,DWORD PTR ds:[esi]
  41dafe:	push   ebp
  41daff:	adc    DWORD PTR [ebx+0x46e305a9],esi
  41db05:	or     BYTE PTR [ebp+ebp*4+0x50d7a1a3],0x45
  41db0d:	int    0xb7
  41db0f:	repnz adc al,0x56
  41db12:	not    ch
  41db14:	loope  0x41da98
  41db16:	popf   
  41db17:	imul   edi,DWORD PTR [eax-0x790dac1f],0xffffffdf
  41db1e:	or     BYTE PTR [ebp-0x20],al
  41db21:	and    eax,0xe5296dff
  41db26:	mov    bh,0x55
  41db28:	lahf   
  41db29:	ja     0x41db9b
  41db2b:	dec    edi
  41db2c:	mov    ecx,0x972e359
  41db32:	lock xor al,0x71
  41db35:	shl    BYTE PTR [edi+0x7477f55d],cl
  41db3b:	and    DWORD PTR [ebx],0x3e63d2c2
  41db41:	adc    ebx,ecx
  41db43:	adc    al,0xb
  41db45:	and    BYTE PTR [ecx-0x67],dl
  41db48:	dec    esi
  41db49:	call   0xb6d28b73
  41db4e:	or     ch,BYTE PTR [edx+0xcec8731]
  41db54:	stos   DWORD PTR es:[edi],eax
  41db55:	jecxz  0x41db86
  41db57:	and    bl,BYTE PTR [ecx-0x400e9541]
  41db5d:	ins    DWORD PTR es:[edi],dx
  41db5e:	ffree  st(7)
  41db60:	dec    eax
  41db61:	dec    ebx
  41db62:	dec    ebp
  41db63:	ret    0x54ce
  41db66:	xlat   BYTE PTR ds:[ebx]
  41db67:	add    DWORD PTR [ecx],esi
  41db69:	push   ebx
  41db6a:	mov    ds:0x8b9e4f31,eax
  41db6f:	mov    eax,?
  41db71:	rcl    BYTE PTR [edi],0x76
  41db74:	mov    ds:0xe4b8d597,al
  41db79:	inc    edi
  41db7a:	add    BYTE PTR [esi+0x4cbc5807],dh
  41db80:	cmc    
  41db81:	fst    DWORD PTR [edx]
  41db83:	mov    ebx,0xbe850940
  41db88:	cmp    DWORD PTR [edx+0x1b],ebx
  41db8b:	xchg   edi,eax
  41db8c:	ret    
  41db8d:	int    0x34
  41db8f:	xor    ecx,esp
  41db91:	stc    
  41db92:	fcom   DWORD PTR [edx+0x1858b710]
  41db98:	cmp    esp,ecx
  41db9a:	out    dx,al
  41db9b:	outs   dx,DWORD PTR ds:[esi]
  41db9c:	mov    bl,0x93
  41db9e:	add    eax,0x3e
  41dba1:	adc    al,0xb
  41dba3:	push   esi
  41dba4:	repz dec esp
  41dba6:	inc    esp
  41dba7:	test   DWORD PTR [ebp-0x1e],0x47cab87f
  41dbae:	pop    ebp
  41dbaf:	(bad)  
  41dbb0:	xor    eax,0xeace06f0
  41dbb5:	lds    ecx,FWORD PTR [edx+0x1]
  41dbb8:	fistp  QWORD PTR [ecx+0x5e]
  41dbbb:	cmp    al,BYTE PTR [esi]
  41dbbd:	mov    bl,0xbf
  41dbbf:	mov    bl,0xc5
  41dbc1:	popf   
  41dbc2:	sub    al,0xd7
  41dbc4:	inc    ecx
  41dbc5:	pop    ss
  41dbc6:	jmp    0x3c16:0x62b3fcd3
  41dbcd:	or     esi,DWORD PTR [edi-0x5baecaee]
  41dbd3:	mov    ds:0x1b91d7af,eax
  41dbd8:	xchg   BYTE PTR [edx],bl
  41dbda:	ret    0x1e3
  41dbdd:	xchg   BYTE PTR [esi-0x4bcfb2b0],bl
  41dbe3:	push   ss
  41dbe4:	xchg   esi,eax
  41dbe5:	mov    WORD PTR [edx-0x41e10419],es
  41dbeb:	ret    0x3b20
  41dbee:	cmp    bh,BYTE PTR [eax+0x2596e77d]
  41dbf4:	not    BYTE PTR [ebp-0x52]
  41dbf7:	jne    0x41db93
  41dbf9:	push   ebp
  41dbfa:	retf   0x929d
  41dbfd:	cwde   
  41dbfe:	aaa    
  41dbff:	cmc    
  41dc00:	xchg   BYTE PTR [esi+ebp*8+0x597b50f2],ch
  41dc07:	jno    0x41dc59
  41dc09:	jo     0x41dc0f
  41dc0b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41dc0c:	pop    edx
  41dc0d:	mov    al,0x92
  41dc0f:	daa    
  41dc10:	sbb    dl,ah
  41dc12:	jbe    0x41dbe7
  41dc14:	pop    ebp
  41dc15:	cdq    
  41dc16:	imul   ebp,DWORD PTR [ecx],0xffffffb9
  41dc19:	xchg   ebx,eax
  41dc1a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41dc1b:	inc    esi
  41dc1c:	push   0x105b97ad
  41dc21:	stos   BYTE PTR es:[edi],al
  41dc22:	inc    esp
  41dc23:	xchg   edi,eax
  41dc24:	jbe    0x41dc03
  41dc26:	adc    ch,BYTE PTR [ebx-0x1c357ff9]
  41dc2c:	sub    eax,0xfdf3df64
  41dc31:	dec    edi
  41dc32:	stos   BYTE PTR es:[edi],al
  41dc33:	ins    DWORD PTR es:[edi],dx
  41dc34:	je     0x41dc6d
  41dc36:	jmp    0x41dc85
  41dc38:	sahf   
  41dc39:	(bad)  
  41dc3a:	test   DWORD PTR fs:[ebx],edi
  41dc3d:	pop    es
  41dc3e:	sbb    BYTE PTR [edx],al
  41dc40:	jge    0x41dc1a
  41dc42:	sub    BYTE PTR [ebp+edi*4-0xcd8c3a],dl
  41dc49:	imul   ebp,DWORD PTR [edi+ebp*4],0xffffffc6
  41dc4d:	mov    ds:0xb6c5e957,eax
  41dc52:	sub    esi,DWORD PTR [ebx+0x1f2a629a]
  41dc58:	lock loope 0x41dc2b
  41dc5b:	ja     0x41dc1f
  41dc5d:	dec    eax
  41dc5e:	(bad)  
  41dc5f:	pushf  
  41dc60:	jge    0x41dc3d
  41dc62:	bound  edi,QWORD PTR [ecx-0x4c]
  41dc65:	leave  
  41dc66:	mov    eax,ds:0xc551a3ce
  41dc6b:	pop    eax
  41dc6c:	inc    ebp
  41dc6d:	cmc    
  41dc6e:	push   eax
  41dc6f:	fs dec esi
  41dc71:	sub    esi,DWORD PTR [esi]
  41dc73:	pop    esi
  41dc74:	(bad)  
  41dc76:	(bad)  
  41dc77:	pop    edi
  41dc78:	or     DWORD PTR [ebp-0x1816c871],esi
  41dc7e:	xchg   DWORD PTR [edx+0x41f3d156],eax
  41dc84:	push   edx
  41dc85:	ret    0x5329
  41dc88:	loopne 0x41dc9c
  41dc8a:	outs   dx,DWORD PTR ds:[esi]
  41dc8b:	repz fs test eax,0xcd45914f
  41dc92:	sbb    BYTE PTR [eax],ch
  41dc94:	imul   ecx,edx,0xa2bbc48a
  41dc9a:	ins    DWORD PTR es:[edi],dx
  41dc9b:	add    al,dl
  41dc9d:	mov    dl,0x39
  41dca0:	fisttp QWORD PTR [ebx-0x14]
  41dca3:	std    
  41dca4:	add    eax,0x966619a7
  41dca9:	retf   0x2add
  41dcac:	mov    dh,0xd
  41dcae:	adc    cl,ah
  41dcb0:	inc    edi
  41dcb1:	add    eax,0x69d59014
  41dcb6:	adc    eax,0x22aef74a
  41dcbb:	push   es
  41dcbc:	loop   0x41dc6c
  41dcbe:	pop    ds
  41dcbf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41dcc0:	mov    ebp,0xffc1650f
  41dcc5:	in     al,dx
  41dcc6:	adc    eax,0x7ef67e27
  41dccb:	popa   
  41dccc:	push   ecx
  41dccd:	lods   eax,DWORD PTR ds:[esi]
  41dcce:	sahf   
  41dccf:	in     eax,0x76
  41dcd1:	inc    esi
  41dcd2:	in     al,dx
  41dcd3:	sbb    BYTE PTR [ecx-0x33716ec4],dl
  41dcd9:	cmc    
  41dcda:	lds    ecx,FWORD PTR [ecx+0x7d423f]
  41dce0:	lock enter 0x93f3,0xf6
  41dce5:	fcomip st,st(3)
  41dce7:	pop    esp
  41dce8:	and    DWORD PTR [edi],edx
  41dcea:	xchg   ecx,eax
  41dceb:	pop    esi
  41dcec:	aad    0xfc
  41dcee:	lock aaa 
  41dcf0:	inc    edi
  41dcf1:	imul   edx,ebx,0x5c
  41dcf4:	and    BYTE PTR [ebp-0x9],bl
  41dcf7:	sub    al,0x7
  41dcf9:	arpl   WORD PTR [ebp-0x3],di
  41dcfc:	mov    WORD PTR [edx-0x7f64a42],es
  41dd02:	jae    0x41dcc9
  41dd04:	ins    BYTE PTR es:[edi],dx
  41dd05:	(bad)  
  41dd06:	mov    WORD PTR [ebx+eax*8],cs
  41dd09:	add    esi,edi
  41dd0b:	sbb    al,0xe3
  41dd0d:	pop    edi
  41dd0e:	fs and ch,cl
  41dd11:	add    BYTE PTR [ebx+eax*2-0x30af5fbe],dh
  41dd18:	inc    ebx
  41dd19:	test   BYTE PTR cs:[ebx+0x2dad56f7],ah
  41dd20:	mov    BYTE PTR [esi+0x676cec01],bh
  41dd26:	out    dx,al
  41dd27:	loope  0x41dd64
  41dd29:	jae    0x41dd5d
  41dd2b:	jae    0x41dcb0
  41dd2d:	pop    ebp
  41dd2e:	test   al,0xf
  41dd30:	inc    eax
  41dd31:	cli    
  41dd32:	cmc    
  41dd33:	fcomp  DWORD PTR [ebp-0x33f8e3cc]
  41dd39:	test   DWORD PTR [edi+0x68],esi
  41dd3c:	xchg   esp,eax
  41dd3d:	fdivrp st(6),st
  41dd3f:	sahf   
  41dd40:	cwde   
  41dd41:	mov    eax,0x5b19b67a
  41dd46:	cmp    ebp,ecx
  41dd48:	stos   BYTE PTR es:[edi],al
  41dd49:	pop    ds
  41dd4a:	cmp    al,0x17
  41dd4c:	cmp    DWORD PTR [edx-0x52742607],eax
  41dd52:	or     DWORD PTR [ecx+0x26c21f18],ebp
  41dd58:	retf   
  41dd59:	mov    ebx,0xf4d47b9b
  41dd5e:	ins    BYTE PTR es:[edi],dx
  41dd5f:	retf   0x219
  41dd62:	adc    ah,BYTE PTR [edi+0x2d]
  41dd65:	or     BYTE PTR [edx+edx*8],0xad
  41dd69:	sbb    al,0x2
  41dd6b:	adc    DWORD PTR [esi],edi
  41dd6d:	out    0xe,eax
  41dd6f:	jnp    0x41dd50
  41dd71:	inc    esp
  41dd72:	cmp    bh,BYTE PTR [ecx+0x55c3cfb6]
  41dd78:	test   bl,al
  41dd7a:	data16 jnp 0x41dd40
  41dd7d:	fnsave [ecx+0x7b]
  41dd80:	mov    al,ds:0x49631d48
  41dd85:	mov    ds:0x445e0a51,eax
  41dd8a:	pop    eax
  41dd8b:	and    esi,eax
  41dd8d:	(bad)  
  41dd8f:	pop    edi
  41dd90:	pop    esp
  41dd91:	push   es
  41dd92:	retf   
  41dd93:	sbb    DWORD PTR [ebx-0x4c],ebx
  41dd96:	or     eax,0xc8e610ca
  41dd9b:	scas   al,BYTE PTR es:[edi]
  41dd9c:	test   al,0x9f
  41dd9e:	push   ebx
  41dd9f:	xchg   ecx,eax
  41dda0:	jmp    0x9bc75da8
  41dda5:	dec    eax
  41dda6:	(bad)  
  41dda7:	push   esi
  41dda8:	mov    ch,0xcd
  41ddaa:	mov    BYTE PTR [ebp-0x18],al
  41ddad:	hlt    
  41ddae:	mov    al,0x97
  41ddb0:	adc    ah,BYTE PTR [ecx+0x14ab81df]
  41ddb6:	jnp    0x41dd63
  41ddb8:	mov    eax,0xcdefe3c2
  41ddbd:	mov    esp,0xc98e41e1
  41ddc2:	cmp    al,ah
  41ddc4:	(bad)  
  41ddc5:	and    BYTE PTR [ebx+0x209b2e75],cl
  41ddcb:	or     esi,DWORD PTR [edi-0x8]
  41ddce:	inc    ecx
  41ddcf:	inc    eax
  41ddd0:	ror    esp,cl
  41ddd2:	rcr    DWORD PTR [ebx],cl
  41ddd4:	cmp    eax,0x50ed5916
  41ddd9:	add    BYTE PTR [eax-0x1e59f669],al
  41dddf:	das    
  41dde0:	in     al,dx
  41dde1:	pop    ecx
  41dde2:	pop    edi
  41dde3:	mov    ?,WORD PTR [ebp+0x16c94d5f]
  41dde9:	push   esp
  41ddea:	jnp    0x41de36
  41ddec:	sub    cl,dh
  41ddee:	fs (bad) 
  41ddf0:	mov    cl,0x2f
  41ddf2:	dec    esp
  41ddf3:	stos   BYTE PTR es:[edi],al
  41ddf4:	dec    esi
  41ddf5:	inc    edi
  41ddf6:	sbb    bh,BYTE PTR [edi-0x41]
  41ddf9:	popf   
  41ddfa:	mov    bh,0xf1
  41ddfc:	adc    eax,edx
  41ddfe:	push   cs
  41ddff:	out    0xab,al
  41de01:	sub    DWORD PTR [ebx+0x59],edi
  41de04:	jns    0x41de2c
  41de06:	stos   DWORD PTR es:[edi],eax
  41de07:	and    dh,0xdf
  41de0a:	ja     0x41de7b
  41de0c:	inc    esp
  41de0d:	out    dx,eax
  41de0e:	bound  ecx,QWORD PTR [ecx-0x29498362]
  41de14:	jmp    0x41de3b
  41de16:	and    DWORD PTR [edi-0x164108c8],eax
  41de1c:	fisub  DWORD PTR [esi+eax*4+0x52]
  41de20:	mov    ch,0x5c
  41de22:	mov    WORD PTR [ebx-0x3e],fs
  41de25:	jns    0x41de3a
  41de27:	jl     0x41de39
  41de29:	jbe    0x41de22
  41de2b:	ds sub al,0x7a
  41de2e:	lea    ebp,[edi]
  41de30:	popf   
  41de31:	xchg   BYTE PTR [ebp+0x32977d40],ah
  41de37:	popa   
  41de38:	aam    0x32
  41de3a:	inc    edi
  41de3b:	in     al,0xe8
  41de3d:	jmp    0x41a:0x1c900d17
  41de44:	jp     0x41de8d
  41de46:	iret   
  41de47:	outs   dx,BYTE PTR ds:[esi]
  41de48:	mov    cs,WORD PTR [eax-0x45b49a7c]
  41de4e:	adc    DWORD PTR [ebx-0x7d5e24],eax
  41de54:	std    
  41de55:	lods   eax,DWORD PTR ds:[esi]
  41de56:	ds dec ebp
  41de58:	jbe    0x41deb5
  41de5a:	retf   0x490b
  41de5d:	loope  0x41de22
  41de5f:	mov    eax,0x7a0456c9
  41de64:	stos   DWORD PTR es:[edi],eax
  41de65:	enter  0x227,0x32
  41de69:	(bad)  
  41de6a:	jne    0x41ddfa
  41de6c:	neg    dl
  41de6e:	icebp  
  41de6f:	test   DWORD PTR [edx],ecx
  41de71:	call   0xd4d3e110
  41de76:	(bad)  
  41de77:	in     eax,dx
  41de78:	jmp    0x18a28f57
  41de7d:	shl    eax,cl
  41de7f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41de80:	lods   eax,DWORD PTR ds:[esi]
  41de81:	mov    ebx,0x6dfc90ec
  41de86:	leave  
  41de87:	(bad)  
  41de88:	ins    DWORD PTR es:[edi],dx
  41de89:	test   al,0x47
  41de8b:	sub    BYTE PTR [ebx-0x122de68b],cl
  41de91:	mov    ds:0xa3aca9c3,al
  41de96:	fcom   DWORD PTR es:[edi+ebp*1+0x5f075b10]
  41de9e:	cmc    
  41de9f:	jo     0x41dee2
  41dea1:	dec    ebp
  41dea2:	mov    eax,0x5f93a946
  41dea7:	dec    esp
  41dea8:	retf   
  41dea9:	(bad)  
  41deaa:	dec    edx
  41deab:	xchg   ebp,eax
  41deac:	icebp  
  41dead:	iret   
  41deae:	lods   eax,DWORD PTR ds:[esi]
  41deaf:	inc    ebp
  41deb0:	es nop
  41deb2:	cmp    DWORD PTR [eax+ecx*4-0x37b4a8a2],edx
  41deb9:	in     al,dx
  41deba:	test   eax,0xe79e024
  41debf:	imul   esp,DWORD PTR [ebx-0x16],0xc4995d84
  41dec6:	xchg   ebp,eax
  41dec7:	gs call 0x6c8d:0xa45c6c
  41decf:	and    ebp,DWORD PTR [ebx-0x75972a6a]
  41ded5:	loopne 0x41ded2
  41ded7:	je     0x41de8f
  41ded9:	push   ds
  41deda:	mov    esp,0x6f012049
  41dedf:	jg     0x41de63
  41dee1:	and    ebp,DWORD PTR [ebp+0x1113cfcf]
  41dee7:	sub    eax,0xc3b80013
  41deec:	or     al,0x47
  41deee:	mov    ch,0xdc
  41def0:	mov    eax,ds:0x5ac509ad
  41def5:	and    ebp,esi
  41def7:	or     ecx,esi
  41def9:	mov    ah,0x5c
  41defb:	push   0xb5456124
  41df00:	sbb    al,0xe0
  41df02:	out    dx,eax
  41df03:	mov    edi,ecx
  41df05:	inc    edi
  41df06:	es or  bl,al
  41df09:	scas   al,BYTE PTR es:[edi]
  41df0a:	push   0xbdd6880f
  41df0f:	xor    DWORD PTR [edi-0xe],esp
  41df12:	ret    0xf767
  41df15:	loopne 0x41df57
  41df17:	in     al,0x66
  41df19:	imul   edx,DWORD PTR [edi-0x4f],0xffffffa7
  41df1d:	cmp    eax,0x96d0ff77
  41df22:	pushf  
  41df23:	mov    ?,edi
  41df25:	das    
  41df26:	dec    edi
  41df27:	inc    ecx
  41df28:	cmp    bh,BYTE PTR [edi+0x4102c8c8]
  41df2e:	call   0x7ca6:0x67fbc43a
  41df35:	sti    
  41df36:	and    DWORD PTR [esi+0x40],edi
  41df39:	cmp    al,0xfc
  41df3b:	call   0x302e:0x80870799
  41df42:	add    ebp,ecx
  41df44:	cdq    
  41df45:	pop    edx
  41df46:	cdq    
  41df47:	ds ja  0x41df0c
  41df4a:	fs mov dh,0x76
  41df4d:	popf   
  41df4e:	fsub   st,st(4)
  41df50:	cmp    ebx,ebx
  41df52:	fcmovb st,st(6)
  41df54:	cmp    al,0x79
  41df56:	xor    eax,0xc8c0223d
  41df5b:	fld    QWORD PTR [ebx+eiz*2-0xb]
  41df5f:	and    eax,0xbfb5bc0a
  41df64:	shl    esp,1
  41df66:	shr    ebx,0x54
  41df69:	jg     0x41df21
  41df6b:	adc    eax,0xfe584d
  41df70:	sub    DWORD PTR [esi+eax*2-0x42],ecx
  41df74:	popaw  
  41df76:	ja     0x41df66
  41df78:	xchg   dl,dh
  41df7a:	xor    ebx,DWORD PTR [ecx]
  41df7c:	adc    eax,0x83f9fea4
  41df81:	inc    ecx
  41df82:	pop    ebp
  41df83:	or     BYTE PTR ds:0x9ee58acd,0x8f
  41df8a:	loopne 0x41df0d
  41df8c:	dec    ecx
  41df8d:	pop    ecx
  41df8e:	aas    
  41df8f:	and    eax,0x6d0387b7
  41df94:	mov    DWORD PTR [ebx+0x48d4a19e],eax
  41df9a:	cmp    al,0x71
  41df9c:	(bad)  [ebx]
  41df9e:	sbb    BYTE PTR [ebx+eax*2-0x5b050cf7],ch
  41dfa5:	sbb    eax,0xdd2471c2
  41dfaa:	call   0x97e4:0x1cda4167
  41dfb1:	comiss xmm4,DWORD PTR [ebx-0x33]
  41dfb5:	sbb    eax,0xc12e8e8d
  41dfba:	dec    ecx
  41dfbb:	mov    eax,0x433306ed
  41dfc0:	test   BYTE PTR [esi-0x2a],dh
  41dfc3:	xchg   ebp,eax
  41dfc4:	icebp  
  41dfc5:	xchg   ecx,eax
  41dfc6:	xor    dl,0x52
  41dfc9:	stos   BYTE PTR es:[edi],al
  41dfca:	or     ch,al
  41dfcc:	mov    bl,0xe8
  41dfce:	aam    0x94
  41dfd0:	sar    BYTE PTR [ebx],0x8e
  41dfd3:	sti    
  41dfd4:	mov    cl,0x1e
  41dfd6:	sar    bh,0xcb
  41dfd9:	or     eax,0x450d066f
  41dfde:	push   esi
  41dfdf:	mov    esp,0x94a669a9
  41dfe4:	xchg   ebp,eax
  41dfe5:	cld    
  41dfe6:	aad    0xa8
  41dfe8:	push   cs
  41dfe9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41dfea:	inc    eax
  41dfeb:	cmc    
  41dfec:	sbb    al,0xf1
  41dfee:	mov    esp,0xaa5a0b27
  41dff3:	xchg   ecx,eax
  41dff4:	pop    edi
  41dff5:	or     eax,0x1722aaed
  41dffa:	jl     0x41df93
  41dffc:	push   ecx
  41dffd:	in     eax,dx
  41dffe:	outs   dx,BYTE PTR ds:[esi]
  41dfff:	stos   DWORD PTR es:[edi],eax
  41e000:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e001:	test   BYTE PTR [ebx-0x6f],0xc1
  41e005:	add    eax,0x943eb722
  41e00a:	mov    dh,BYTE PTR [eax-0x4b93a847]
  41e010:	sar    BYTE PTR [eax+edi*8+0x2c],1
  41e014:	adc    al,0xa
  41e016:	repnz cmp DWORD PTR [eax-0x63],0x4e
  41e01b:	fwait
  41e01c:	ins    BYTE PTR es:[edi],dx
  41e01d:	pop    edx
  41e01e:	inc    ebx
  41e01f:	aaa    
  41e020:	and    eax,0x59cdeab3
  41e025:	sbb    ah,BYTE PTR [esi]
  41e027:	ja     0x41dfae
  41e029:	push   ebp
  41e02a:	jge    0x41e063
  41e02c:	icebp  
  41e02d:	std    
  41e02e:	mov    ds:0xe2eb0d04,eax
  41e033:	push   eax
  41e034:	jle    0x41e074
  41e036:	add    BYTE PTR [esi+0xb],cl
  41e039:	push   eax
  41e03a:	stos   DWORD PTR es:[edi],eax
  41e03b:	pop    ebp
  41e03c:	in     eax,dx
  41e03d:	xchg   ebx,eax
  41e03e:	mov    cl,0x56
  41e040:	ins    DWORD PTR es:[edi],dx
  41e041:	xor    al,ch
  41e043:	push   esi
  41e044:	sub    DWORD PTR [ecx+eax*8+0x12],ebp
  41e048:	sbb    edx,DWORD PTR [eax-0x1eab3568]
  41e04e:	and    BYTE PTR [ebx+0xa],0x84
  41e052:	test   al,0x89
  41e054:	pop    ss
  41e055:	out    0x8e,al
  41e057:	sbb    eax,0x2cc46630
  41e05c:	sub    esi,DWORD PTR [ebx-0x6a473c97]
  41e062:	shl    DWORD PTR [edx-0x79c23b7f],cl
  41e068:	cmp    DWORD PTR [edx+0x56],edi
  41e06b:	test   DWORD PTR [ebp-0x48],esp
  41e06e:	or     DWORD PTR [edi-0x32b39a86],ecx
  41e074:	out    dx,eax
  41e075:	inc    ebp
  41e076:	in     al,0xcd
  41e078:	or     al,0xd4
  41e07a:	xor    eax,0x2cd09ccd
  41e07f:	int3   
  41e080:	mov    DWORD PTR [eax-0x5e13da78],ebx
  41e086:	call   0x9b63081b
  41e08b:	mov    cl,BYTE PTR ds:0x134e7602
  41e091:	les    ebx,FWORD PTR [ebp-0x1d7f8965]
  41e097:	mov    dh,0xe3
  41e099:	mov    bl,BYTE PTR [eax-0x33]
  41e09c:	xchg   edx,eax
  41e09d:	dec    esp
  41e09e:	cli    
  41e09f:	or     BYTE PTR [esi-0x27],ah
  41e0a2:	mov    esp,0xa85a6ab
  41e0a7:	mov    al,ds:0xc2ca8fd1
  41e0ac:	push   esp
  41e0ad:	mov    cl,0xb5
  41e0af:	push   ebp
  41e0b0:	int3   
  41e0b1:	add    BYTE PTR [esi+0x71],ah
  41e0b4:	lock jne 0x41e0d9
  41e0b7:	jnp    0x41e0bf
  41e0b9:	leave  
  41e0ba:	rol    DWORD PTR [ebx+0x15d59ad4],cl
  41e0c0:	out    dx,al
  41e0c1:	inc    ecx
  41e0c2:	stc    
  41e0c3:	push   ebp
  41e0c4:	mov    ebx,0xf61aaba1
  41e0c9:	sbb    dl,BYTE PTR [ecx+ebx*8+0x15bbcac8]
  41e0d0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e0d1:	jmp    0x41e146
  41e0d3:	and    al,0x31
  41e0d5:	mov    bh,ah
  41e0d7:	fcom   DWORD PTR [edx+ecx*2]
  41e0da:	popf   
  41e0db:	lods   eax,DWORD PTR ds:[esi]
  41e0dc:	(bad)  
  41e0dd:	aaa    
  41e0de:	arpl   bx,cx
  41e0e0:	mov    dh,0x99
  41e0e2:	xchg   ebx,eax
  41e0e3:	sub    DWORD PTR [ecx],edi
  41e0e5:	jns    0x41e0e9
  41e0e7:	lds    esi,FWORD PTR [ebx-0x3451c070]
  41e0ed:	push   0x4e
  41e0ef:	data16 rcl BYTE PTR [ecx+0x4df7410c],cl
  41e0f6:	mov    al,0x5b
  41e0f8:	ret    
  41e0f9:	setns  BYTE PTR [ebx-0x3c43ff93]
  41e100:	leave  
  41e101:	pusha  
  41e102:	mov    ch,0x7e
  41e104:	test   eax,0x54ecfe07
  41e109:	pop    ebp
  41e10a:	inc    edi
  41e10b:	nop
  41e10c:	ins    BYTE PTR es:[edi],dx
  41e10d:	jb     0x41e118
  41e10f:	scas   eax,DWORD PTR es:[edi]
  41e110:	inc    ebx
  41e111:	adc    esp,DWORD PTR [esi-0x51]
  41e114:	cmp    eax,0xe2853a75
  41e119:	arpl   dx,si
  41e11b:	imul   eax,DWORD PTR [ecx+0x52a1b1ac],0x6f
  41e122:	fwait
  41e123:	push   ss
  41e124:	fdiv   DWORD PTR [edi+0x78]
  41e127:	xlat   BYTE PTR ds:[ebx]
  41e128:	ret    0x1b1a
  41e12b:	mov    ds:0xc9dae343,al
  41e130:	or     DWORD PTR [ebp-0x7defb9b8],edx
  41e136:	xor    esp,DWORD PTR [edi]
  41e138:	mov    esp,eax
  41e13a:	das    
  41e13b:	xor    DWORD PTR [ebp+edx*2-0x25],edi
  41e13f:	ret    
  41e140:	cmc    
  41e141:	lock inc ebp
  41e143:	xchg   esp,eax
  41e144:	cdq    
  41e145:	xor    BYTE PTR [esi],bl
  41e147:	jg     0x41e169
  41e149:	push   0xe9c25be0
  41e14e:	(bad)  
  41e14f:	out    0x69,eax
  41e151:	(bad)  
  41e152:	into   
  41e153:	pop    ebx
  41e154:	mov    ecx,DWORD PTR [ebx+0x54e722f]
  41e15a:	hlt    
  41e15b:	mov    ?,WORD PTR [ebx+0x7]
  41e15e:	cmp    BYTE PTR [edi-0x33],ch
  41e161:	xor    ch,BYTE PTR [esi]
  41e163:	pop    edi
  41e164:	test   BYTE PTR [edx+0x779a1e03],ah
  41e16a:	out    dx,eax
  41e16b:	lea    ebp,[ecx]
  41e16d:	sti    
  41e16e:	pop    ss
  41e16f:	ds dec ebx
  41e171:	outs   dx,BYTE PTR ds:[esi]
  41e172:	int    0xea
  41e174:	adc    edi,DWORD PTR [edi]
  41e176:	pop    es
  41e177:	ds xchg cl,ah
  41e17a:	xchg   DWORD PTR [eax],eax
  41e17c:	aam    0x86
  41e17e:	mov    ch,0x83
  41e180:	lahf   
  41e181:	scas   eax,DWORD PTR es:[edi]
  41e182:	push   0x3e
  41e184:	dec    eax
  41e185:	pop    ds
  41e186:	loope  0x41e18e
  41e188:	jg     0x41e13d
  41e18a:	adc    eax,DWORD PTR [esi]
  41e18c:	loop   0x41e173
  41e18e:	js     0x41e176
  41e190:	int    0x95
  41e192:	pop    DWORD PTR cs:[esi]
  41e195:	loope  0x41e19b
  41e197:	je     0x41e209
  41e199:	push   cs
  41e19a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e19b:	or     eax,0x15540aaa
  41e1a0:	xor    esi,edx
  41e1a2:	fcomp  QWORD PTR [eax]
  41e1a4:	cmp    ecx,ebp
  41e1a6:	jne    0x41e1d2
  41e1a8:	icebp  
  41e1a9:	jne    0x41e209
  41e1ab:	and    DWORD PTR [edx],esp
  41e1ad:	into   
  41e1ae:	cmc    
  41e1af:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e1b0:	icebp  
  41e1b1:	repz fisttp WORD PTR [edx+0x3d]
  41e1b5:	loop   0x41e1f4
  41e1b7:	or     dh,BYTE PTR [edi]
  41e1b9:	out    dx,eax
  41e1ba:	push   ecx
  41e1bb:	out    dx,al
  41e1bc:	inc    ecx
  41e1bd:	cs stos DWORD PTR es:[edi],eax
  41e1bf:	push   ds
  41e1c0:	out    dx,al
  41e1c1:	ds aas 
  41e1c3:	or     DWORD PTR [edi+eiz*8+0x282e70f1],ebp
  41e1ca:	dec    ebx
  41e1cb:	fld    QWORD PTR [eax+0x4117a6a8]
  41e1d1:	inc    ebx
  41e1d2:	dec    esi
  41e1d3:	data16 movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e1d5:	mov    DWORD PTR [ebx-0x29dcbb23],esp
  41e1db:	fs push esp
  41e1dd:	aad    0x8
  41e1df:	out    dx,eax
  41e1e0:	fiadd  WORD PTR [esi]
  41e1e2:	xchg   edi,eax
  41e1e3:	sbb    DWORD PTR [edx],esp
  41e1e5:	xchg   esp,eax
  41e1e6:	cmp    eax,0x6ccf7150
  41e1eb:	sti    
  41e1ec:	retf   0x1181
  41e1ef:	sti    
  41e1f0:	cmc    
  41e1f1:	add    esi,DWORD PTR [edx-0x56c11ed5]
  41e1f7:	mov    bl,0x34
  41e1f9:	mov    al,0xa6
  41e1fb:	sbb    eax,0xa9b58740
  41e200:	bswap  ebp
  41e202:	jl     0x41e1c3
  41e204:	mov    eax,ds:0x1f12f874
  41e209:	outs   dx,DWORD PTR ds:[esi]
  41e20a:	out    dx,al
  41e20b:	pop    esi
  41e20c:	inc    esi
  41e20d:	cdq    
  41e20e:	push   edi
  41e20f:	(bad)  
  41e210:	sub    esp,edi
  41e212:	xor    ecx,edx
  41e214:	sbb    DWORD PTR [esi],edi
  41e216:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e217:	iret   
  41e218:	adc    cl,BYTE PTR [ebx]
  41e21a:	and    eax,0x358c91e6
  41e21f:	inc    ebx
  41e220:	outs   dx,DWORD PTR ds:[esi]
  41e221:	js     0x41e1eb
  41e223:	scas   eax,DWORD PTR es:[edi]
  41e224:	leave  
  41e225:	cli    
  41e226:	(bad)  
  41e227:	out    0xe8,al
  41e229:	cmc    
  41e22a:	push   ds
  41e22b:	int    0x97
  41e22d:	adc    eax,0xcc618c2
  41e232:	xor    edi,DWORD PTR ds:0xc705c538
  41e238:	jmp    0xbceeac3c
  41e23d:	pop    esp
  41e23e:	mov    ch,0xac
  41e240:	jmp    0x9cbc:0x42b6efe8
  41e247:	xchg   cl,cl
  41e249:	in     eax,0xd
  41e24b:	push   ebp
  41e24c:	lods   eax,DWORD PTR ds:[esi]
  41e24d:	push   esp
  41e24e:	arpl   di,si
  41e250:	and    al,0xb6
  41e252:	(bad)  
  41e253:	pop    esp
  41e254:	dec    esp
  41e255:	pop    eax
  41e256:	pusha  
  41e257:	mov    WORD PTR [ebp+0x6f],?
  41e25a:	outs   dx,BYTE PTR ds:[esi]
  41e25b:	arpl   WORD PTR [ebx-0x29466dbc],si
  41e261:	fs nop
  41e263:	xchg   ebx,eax
  41e264:	les    ebx,FWORD PTR [edx]
  41e266:	les    eax,FWORD PTR [esi]
  41e268:	jno    0x41e2d9
  41e26a:	xchg   ecx,eax
  41e26b:	aaa    
  41e26c:	ja     0x41e1ff
  41e26e:	rol    DWORD PTR [ebp-0x5d],0x4d
  41e272:	and    edx,DWORD PTR [edx+0x6daf57e2]
  41e278:	add    esi,DWORD PTR [edx]
  41e27a:	adc    al,0xae
  41e27c:	mov    ds:0xba2231c7,al
  41e281:	loope  0x41e263
  41e283:	and    esi,edx
  41e285:	xor    al,0x1f
  41e287:	cmp    BYTE PTR [eax],ah
  41e289:	mov    WORD PTR [si],?
  41e28c:	mov    bl,0x6f
  41e28e:	add    al,0x93
  41e290:	mov    ebx,0x347c38b0
  41e295:	js     0x41e29f
  41e297:	(bad)  
  41e298:	jmp    0x41e26d
  41e29a:	mov    bh,bh
  41e29c:	das    
  41e29d:	nop
  41e29e:	add    eax,0x16a31f52
  41e2a3:	adc    DWORD PTR [ecx-0x34],edx
  41e2a6:	jp     0x41e309
  41e2a8:	(bad)  
  41e2a9:	outs   dx,BYTE PTR ds:[esi]
  41e2aa:	add    eax,0xcafaeaf3
  41e2af:	xchg   BYTE PTR [ebp-0x6a],cl
  41e2b2:	push   0x8e4b8e0e
  41e2b7:	shl    BYTE PTR [esi+0x5a339def],0x98
  41e2be:	jbe    0x41e2ef
  41e2c0:	mov    eax,DWORD PTR [edi-0x146d1977]
  41e2c6:	enter  0x35e1,0x9b
  41e2ca:	bound  edi,QWORD PTR [esi]
  41e2cc:	add    ah,BYTE PTR [ebx+ecx*8]
  41e2cf:	imul   edi,DWORD PTR [edi],0x8
  41e2d2:	shl    BYTE PTR [ecx],1
  41e2d4:	add    ebp,ecx
  41e2d6:	and    BYTE PTR [esp+eax*8+0x6edd783f],bl
  41e2dd:	xor    al,0xbb
  41e2df:	jmp    0x41e274
  41e2e1:	shl    BYTE PTR [ecx],0x8a
  41e2e4:	repz call FWORD PTR [edi+0x18]
  41e2e8:	in     eax,0x67
  41e2ea:	not    BYTE PTR ds:0xd1067868
  41e2f0:	mov    eax,eax
  41e2f2:	fs inc edx
  41e2f4:	adc    eax,esi
  41e2f6:	sahf   
  41e2f7:	xchg   ebp,eax
  41e2f8:	xlat   BYTE PTR ds:[ebx]
  41e2f9:	mov    ds:0x8ed91685,al
  41e2fe:	es pusha 
  41e300:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e301:	mov    ?,esi
  41e303:	mov    ebp,0x7e3e42b3
  41e308:	mov    ah,0x6b
  41e30a:	jnp    0x41e2c8
  41e30c:	add    BYTE PTR [ecx-0x8030a6a],bl
  41e312:	dec    esi
  41e313:	pop    esi
  41e314:	sub    dl,BYTE PTR [ebx+edx*1-0x59]
  41e318:	ret    0xa5b2
  41e31b:	adc    cl,0x4f
  41e31e:	jo     0x41e2c2
  41e320:	mov    DWORD PTR [ebp+eax*8+0x50],ebx
  41e324:	adc    bl,BYTE PTR [ebx+ebx*4-0x62]
  41e328:	inc    esp
  41e329:	aam    0x28
  41e32b:	not    DWORD PTR [ebx+0x1d9234f8]
  41e331:	popf   
  41e332:	rcl    edi,1
  41e334:	pop    ebx
  41e335:	cs cld 
  41e337:	lods   eax,DWORD PTR ds:[esi]
  41e338:	call   0xf22e9a96
  41e33d:	pushf  
  41e33e:	ret    0xbd79
  41e341:	rcr    BYTE PTR [ebx+0x580dc8],0x62
  41e348:	mov    ds:0x85dace1b,eax
  41e34d:	dec    BYTE PTR [eax+0x272e582a]
  41e353:	ins    BYTE PTR es:[edi],dx
  41e354:	fs cli 
  41e356:	(bad)  
  41e357:	call   0x5e03:0x8c00f790
  41e35e:	cwde   
  41e35f:	mov    eax,ds:0xd7f39cb0
  41e364:	aam    0x53
  41e366:	mov    ebx,0x873a43ce
  41e36b:	push   esi
  41e36c:	test   eax,0xae9a4bd8
  41e371:	(bad)  
  41e372:	aas    
  41e373:	repz pop ebp
  41e375:	sub    ebp,DWORD PTR [edx]
  41e377:	mov    ecx,0xe8d8cde9
  41e37c:	sbb    cl,ah
  41e37e:	dec    ecx
  41e37f:	inc    ebx
  41e380:	mov    bh,0x1e
  41e382:	into   
  41e383:	daa    
  41e384:	pop    ecx
  41e385:	xchg   esi,eax
  41e386:	outs   dx,DWORD PTR ds:[esi]
  41e387:	sbb    eax,0xf7cadc84
  41e38c:	add    ecx,esp
  41e38e:	and    al,0x4d
  41e390:	fadd   QWORD PTR [ebx-0x6a5b35ee]
  41e396:	popa   
  41e397:	dec    ecx
  41e398:	dec    ebp
  41e399:	xor    esp,DWORD PTR [edx+0x8]
  41e39c:	mov    ds:0x6da2846c,eax
  41e3a1:	mov    edx,0x7d723159
  41e3a6:	mov    al,0x6
  41e3a8:	jae    0x41e3e2
  41e3aa:	and    eax,0x66eae789
  41e3af:	mov    bl,0x2e
  41e3b1:	mov    dl,0xf5
  41e3b3:	jnp    0x41e344
  41e3b5:	cli    
  41e3b6:	hlt    
  41e3b7:	sbb    al,0xbe
  41e3b9:	xor    eax,0x5581dc84
  41e3be:	push   0x7f
  41e3c0:	pop    ebx
  41e3c1:	jp     0x41e36c
  41e3c3:	shr    BYTE PTR [ebx],0x40
  41e3c6:	and    al,0x4d
  41e3c8:	gs in  al,0x92
  41e3cb:	pop    ecx
  41e3cc:	aaa    
  41e3cd:	add    bl,BYTE PTR [ecx+0x32]
  41e3d0:	cs (bad) 
  41e3d2:	cmp    ch,bh
  41e3d4:	test   eax,0xafda8e7e
  41e3d9:	(bad)
  41e3dc:	mov    edi,0x60d41a07
  41e3e1:	lods   eax,DWORD PTR ds:[esi]
  41e3e2:	mov    esp,0x74321cfe
  41e3e7:	repnz mov WORD PTR [esi-0x19],fs
  41e3eb:	cmovp  ebp,DWORD PTR [edi+0x5a30080e]
  41e3f2:	(bad)  
  41e3f3:	and    al,ch
  41e3f5:	xchg   esi,eax
  41e3f6:	sub    ah,BYTE PTR [edi+0x4f]
  41e3f9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e3fa:	jmp    0x766ebf5a
  41e3ff:	jno    0x41e3fd
  41e401:	adc    al,0x24
  41e403:	jbe    0x41e429
  41e405:	and    esi,DWORD PTR [edi-0x573415ba]
  41e40b:	ins    DWORD PTR es:[edi],dx
  41e40c:	jge    0x41e428
  41e40e:	mov    ebx,0x91c37087
  41e413:	ins    BYTE PTR es:[edi],dx
  41e414:	out    dx,al
  41e415:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e416:	inc    edi
  41e417:	jnp    0x41e433
  41e419:	in     eax,0x90
  41e41b:	lock mov dh,BYTE PTR [eax+0x3a5b1884]
  41e422:	aas    
  41e423:	cmc    
  41e424:	jb     0x41e40e
  41e426:	jns    0x41e405
  41e428:	add    ecx,DWORD PTR [ebx-0x72f40545]
  41e42e:	mov    bl,0xcf
  41e430:	inc    ebp
  41e431:	popa   
  41e432:	stc    
  41e433:	or     eax,0xa579462d
  41e438:	push   edi
  41e439:	(bad)  
  41e43a:	call   FWORD PTR ds:0x2e9fc24
  41e440:	out    dx,eax
  41e441:	xchg   edi,eax
  41e442:	jmp    0x6a12abd2
  41e447:	adc    eax,0x4904a921
  41e44c:	sbb    dl,BYTE PTR [edx+esi*1]
  41e44f:	push   ebx
  41e450:	push   esp
  41e451:	clc    
  41e452:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e453:	daa    
  41e454:	cmc    
  41e455:	aam    0xbd
  41e457:	icebp  
  41e458:	sub    bh,BYTE PTR [edi+ebx*8]
  41e45b:	adc    al,0xea
  41e45d:	fdiv   DWORD PTR [ecx-0x2d63ec9c]
  41e463:	loope  0x41e43e
  41e465:	push   0xab893037
  41e46a:	mov    bh,0x56
  41e46c:	mov    ecx,0x97009d6e
  41e471:	xchg   esp,eax
  41e472:	xlat   BYTE PTR ds:[ebx]
  41e473:	mov    ecx,0xcd0fe604
  41e478:	cdq    
  41e479:	push   ds
  41e47a:	in     eax,dx
  41e47b:	mov    dh,0x67
  41e47d:	and    al,0x99
  41e47f:	sbb    BYTE PTR [ecx+ebx*4+0x60112f95],bl
  41e486:	mov    ebp,DWORD PTR [edi]
  41e488:	test   eax,0x2df63b92
  41e48d:	inc    ebx
  41e48e:	jae    0x41e422
  41e490:	or     ah,BYTE PTR [ecx]
  41e492:	mov    dh,0x66
  41e494:	test   BYTE PTR [ebx+0x4db887a9],ah
  41e49a:	outs   dx,BYTE PTR ds:[esi]
  41e49b:	adc    al,0xb
  41e49d:	mov    bl,0xb
  41e49f:	push   ds
  41e4a0:	mov    al,0x8
  41e4a2:	xor    al,0x47
  41e4a4:	mov    ah,0x7d
  41e4a6:	mov    ds:0xe8669dd6,eax
  41e4ab:	jecxz  0x41e4ca
  41e4ad:	ins    BYTE PTR es:[edi],dx
  41e4ae:	xor    eax,0x2b686e32
  41e4b3:	into   
  41e4b4:	push   0xa53dc40a
  41e4b9:	in     al,dx
  41e4ba:	jno    0x41e45d
  41e4bc:	ss mov eax,0x8803c0d4
  41e4c2:	jp     0x41e4fd
  41e4c4:	xor    DWORD PTR [edx],edx
  41e4c6:	aad    0xe4
  41e4c8:	call   0x4605:0x3e4d5948
  41e4cf:	mov    cl,0xa1
  41e4d1:	sub    eax,0xe821e4e
  41e4d6:	(bad)  [edx+ebp*2-0x46fde076]
  41e4dd:	xor    ch,BYTE PTR [eax-0x3f]
  41e4e0:	ins    DWORD PTR es:[edi],dx
  41e4e1:	repnz or esp,ebp
  41e4e4:	stos   DWORD PTR es:[edi],eax
  41e4e5:	add    edi,DWORD PTR [ebx+0x29ce9437]
  41e4eb:	movq   mm1,mm2
  41e4ee:	adc    BYTE PTR [edx],dh
  41e4f0:	push   ds
  41e4f1:	jmp    0x41e55c
  41e4f3:	aam    0xc3
  41e4f5:	loope  0x41e490
  41e4f7:	les    ebx,FWORD PTR [esi+0xedbbfbe]
  41e4fd:	pop    ss
  41e4fe:	or     edx,esp
  41e500:	adc    esi,ebx
  41e502:	push   0x2b
  41e504:	mov    edi,0x4f38d0f3
  41e509:	in     al,0x2
  41e50b:	js     0x41e4e2
  41e50d:	xor    ecx,ecx
  41e50f:	xchg   esp,eax
  41e510:	stc    
  41e511:	psubd  mm0,QWORD PTR [edi+0x7769dcd8]
  41e518:	leave  
  41e519:	pop    edi
  41e51a:	hlt    
  41e51b:	xor    eax,0xc24efb7c
  41e520:	jo     0x41e56e
  41e522:	shl    bh,cl
  41e524:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e525:	and    eax,0xc0526b4f
  41e52a:	in     eax,0xe9
  41e52c:	scas   eax,DWORD PTR es:[edi]
  41e52d:	pop    ebx
  41e52e:	out    dx,eax
  41e52f:	xchg   ebx,eax
  41e530:	xor    bl,ch
  41e532:	lods   eax,DWORD PTR ds:[esi]
  41e533:	mov    al,0x44
  41e535:	mov    edx,DWORD PTR [esi]
  41e537:	xor    dl,dl
  41e539:	dec    ebp
  41e53a:	jae    0x41e4d7
  41e53c:	ror    ebp,1
  41e53e:	push   edi
  41e53f:	add    eax,0x716df250
  41e544:	lahf   
  41e545:	lods   eax,DWORD PTR ds:[esi]
  41e546:	das    
  41e547:	jmp    0xa2fe:0x16199415
  41e54e:	aad    0x2b
  41e550:	imul   esi,DWORD PTR [edi],0x13
  41e553:	cdq    
  41e554:	neg    esp
  41e556:	bnd jge 0x41e4e1
  41e559:	ins    DWORD PTR es:[edi],dx
  41e55a:	adc    cl,cl
  41e55c:	test   BYTE PTR [eax-0x5f46eb12],bh
  41e562:	jo     0x41e53b
  41e564:	xor    ebx,DWORD PTR [eax-0x4fc4d358]
  41e56a:	add    ebx,ecx
  41e56c:	iret   
  41e56d:	xchg   ecx,eax
  41e56e:	or     ch,BYTE PTR [eax-0x19dd5e55]
  41e574:	adc    al,0xd2
  41e576:	aam    0xad
  41e578:	xchg   edi,eax
  41e579:	ja     0x41e561
  41e57b:	pop    esp
  41e57c:	(bad)  
  41e57d:	in     eax,dx
  41e57e:	dec    ebp
  41e57f:	jnp    0x41e540
  41e581:	add    edi,esp
  41e583:	and    bl,BYTE PTR [edi+ebx*4-0x52]
  41e587:	loopne 0x41e59f
  41e589:	(bad)  
  41e58a:	xlat   BYTE PTR ds:[ebx]
  41e58b:	sub    al,0xd7
  41e58d:	lods   eax,DWORD PTR ds:[esi]
  41e58e:	mov    edi,0x539503ff
  41e593:	aas    
  41e594:	out    0xdb,eax
  41e596:	rol    eax,cl
  41e598:	and    dl,ch
  41e59a:	fst    st(7)
  41e59c:	push   esi
  41e59d:	sbb    BYTE PTR [ebx],al
  41e59f:	push   cs
  41e5a0:	adc    DWORD PTR [esi+0x5],0x17c634e3
  41e5a7:	lds    esi,FWORD PTR [edi]
  41e5a9:	adc    ah,ch
  41e5ab:	into   
  41e5ac:	and    BYTE PTR [esi],0xd6
  41e5af:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e5b0:	shl    DWORD PTR [edi-0x4131b83d],0xde
  41e5b7:	lahf   
  41e5b8:	jmp    0x8351dfa0
  41e5bd:	call   0xa1ba:0xa47e36d4
  41e5c4:	mov    ah,0x60
  41e5c6:	jg     0x41e56b
  41e5c8:	mov    edi,0x93db6e42
  41e5cd:	jae    0x41e61c
  41e5cf:	ins    DWORD PTR es:[edi],dx
  41e5d0:	jo     0x41e5d5
  41e5d2:	cmp    ah,dh
  41e5d4:	jae    0x41e642
  41e5d6:	out    dx,al
  41e5d7:	popf   
  41e5d8:	ret    0xefec
  41e5db:	jnp    0x41e617
  41e5dd:	shl    DWORD PTR [ebx+0x29],0xd7
  41e5e1:	inc    ebp
  41e5e2:	stos   BYTE PTR es:[edi],al
  41e5e3:	sbb    esi,DWORD PTR [eax+ebx*4+0x11151415]
  41e5ea:	sar    BYTE PTR [edx+edi*2],0xed
  41e5ee:	ss in  eax,dx
  41e5f0:	xchg   ebx,eax
  41e5f1:	add    BYTE PTR [esp+ebx*8+0x14c082c7],dl
  41e5f8:	jnp    0x41e5bd
  41e5fa:	not    BYTE PTR [eax+0xe]
  41e5fd:	pusha  
  41e5fe:	int3   
  41e5ff:	fldenv [ecx]
  41e601:	jecxz  0x41e5e4
  41e603:	pop    ss
  41e604:	pushf  
  41e605:	jmp    0xac46:0x75af0ad7
  41e60c:	or     ah,BYTE PTR [edi]
  41e60e:	jge    0x41e629
  41e610:	mov    esp,0xf4f8639d
  41e615:	mov    edx,0x8f768ca3
  41e61a:	fcom   st(3)
  41e61c:	pop    ss
  41e61d:	sub    edx,DWORD PTR [eax-0x1069f983]
  41e623:	xchg   ecx,eax
  41e624:	xchg   esp,eax
  41e625:	pop    ss
  41e626:	fdivrp st(4),st
  41e628:	sub    ah,BYTE PTR [ebx]
  41e62a:	(bad)  
  41e62b:	in     eax,0x41
  41e62d:	fwait
  41e62e:	lea    esi,[ecx]
  41e630:	sub    DWORD PTR [edi],ebx
  41e632:	inc    edi
  41e633:	push   DWORD PTR [edx-0x23]
  41e636:	data16 js 0x41e63d
  41e639:	fcomp  st(2)
  41e63b:	xor    BYTE PTR [edx],al
  41e63d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e63e:	cmp    edi,DWORD PTR [edx]
  41e640:	cld    
  41e641:	(bad)  
  41e642:	sbb    eax,0x7f800cdc
  41e647:	jae    0x41e693
  41e649:	jns    0x41e6ca
  41e64b:	adc    al,0xe7
  41e64d:	sahf   
  41e64e:	dec    esi
  41e64f:	(bad)  
  41e650:	popa   
  41e651:	lods   al,BYTE PTR ds:[esi]
  41e653:	rol    DWORD PTR [edx+0x13],cl
  41e656:	shl    DWORD PTR [eax],0x12
  41e659:	call   FWORD PTR [edi+0x791a6a6f]
  41e65f:	sbb    esp,0xffffffba
  41e662:	fs ins BYTE PTR es:[edi],dx
  41e664:	mov    ds:0xf700861d,eax
  41e669:	jne    0x41e6a3
  41e66b:	sub    eax,0x97d12d20
  41e670:	mov    cl,0x7b
  41e672:	pusha  
  41e673:	gs mov edx,0x7cf88d4
  41e679:	and    eax,DWORD PTR [ecx]
  41e67b:	arpl   WORD PTR [eax],sp
  41e67d:	sub    al,0x97
  41e67f:	adc    BYTE PTR [esp+edi*2-0xd],bl
  41e683:	adc    BYTE PTR [ebx-0x25],al
  41e686:	sbb    dh,ch
  41e688:	push   0x22
  41e68a:	or     eax,0xe273c7de
  41e68f:	pop    ebp
  41e690:	mov    ds:0xf915ca2f,al
  41e695:	fimul  WORD PTR [esp+edi*8]
  41e698:	sbb    DWORD PTR gs:[edi],ebp
  41e69b:	int    0x21
  41e69d:	adc    al,0x49
  41e69f:	xchg   edi,eax
  41e6a0:	lea    ebx,[eax+ebp*1+0x13]
  41e6a4:	sbb    DWORD PTR [edi+0x40],edx
  41e6a7:	shl    DWORD PTR ds:0xa191521b,0x3a
  41e6ae:	stc    
  41e6af:	gs popa 
  41e6b1:	pop    ecx
  41e6b2:	retf   0x5ad9
  41e6b5:	cli    
  41e6b6:	or     eax,0xc67d9ff2
  41e6bb:	ss and eax,0x93b0aac0
  41e6c1:	int    0xb1
  41e6c3:	test   eax,0xbf08df9
  41e6c8:	xchg   ecx,eax
  41e6c9:	in     eax,0x57
  41e6cb:	dec    ebx
  41e6cc:	loope  0x41e68d
  41e6ce:	adc    BYTE PTR [eax],cl
  41e6d0:	fadd   QWORD PTR [edx+ebp*4]
  41e6d3:	loope  0x41e6f5
  41e6d5:	cdq    
  41e6d6:	ficom  DWORD PTR [edi]
  41e6d8:	adc    DWORD PTR [eax-0x45],eax
  41e6db:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e6dc:	sbb    ebp,ebp
  41e6de:	xchg   ebp,eax
  41e6df:	xor    al,0xca
  41e6e1:	stos   BYTE PTR es:[edi],al
  41e6e2:	jg     0x41e6b9
  41e6e4:	xchg   ebp,eax
  41e6e5:	mov    bh,0x4
  41e6e7:	fistp  WORD PTR [edi+0x79af2836]
  41e6ed:	mov    ss,WORD PTR [ecx]
  41e6ef:	push   ebp
  41e6f0:	push   edx
  41e6f2:	jne    0x41e6b8
  41e6f4:	sbb    ecx,ecx
  41e6f6:	enter  0x6492,0x26
  41e6fa:	mov    ah,0xd9
  41e6fc:	das    
  41e6fd:	je     0x41e76a
  41e6ff:	mov    WORD PTR [eax],ds
  41e701:	addr16 pop esi
  41e703:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e704:	dec    esi
  41e705:	in     eax,0x3f
  41e707:	out    dx,eax
  41e708:	mov    esi,0x99a6322e
  41e70d:	(bad)  
  41e70e:	in     al,dx
  41e70f:	bnd jmp 0x41e695
  41e712:	xchg   BYTE PTR [ecx+esi*2+0xba1f3b5],ah
  41e719:	jns    0x41e727
  41e71b:	lods   eax,DWORD PTR ds:[esi]
  41e71c:	jnp    0x41e6f0
  41e71e:	xchg   si,ax
  41e720:	aas    
  41e721:	hlt    
  41e722:	es inc esp
  41e724:	adc    esp,DWORD PTR [ecx-0x3d]
  41e727:	js     0x41e71b
  41e729:	and    eax,0xe530af09
  41e72e:	rcr    BYTE PTR [ecx+0x58bee1c5],0x59
  41e735:	ins    DWORD PTR es:[edi],dx
  41e736:	push   edi
  41e737:	and    al,0x32
  41e739:	icebp  
  41e73a:	call   0x82f4:0x7e50ab8
  41e741:	adc    eax,0xc4bf7520
  41e746:	push   cs
  41e747:	inc    edi
  41e748:	enter  0xac5b,0xad
  41e74c:	sbb    BYTE PTR [eax],cl
  41e74e:	inc    ebx
  41e74f:	mov    al,ds:0xe3d2d6db
  41e754:	inc    esp
  41e755:	and    eax,0xe4c8e1a6
  41e75a:	mov    ds:0x4aeed537,eax
  41e75f:	(bad)  
  41e760:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e761:	cmp    BYTE PTR [ebx+0x20833c17],bl
  41e767:	mov    edi,0xc9fe3ad
  41e76c:	jnp    0x41e79b
  41e76e:	cmp    DWORD PTR [ebx+0x5a],edi
  41e771:	enterw 0x823a,0xd9
  41e776:	aaa    
  41e777:	mov    ch,0xbd
  41e779:	inc    ebx
  41e77a:	cmp    BYTE PTR [edx],ah
  41e77c:	call   DWORD PTR [edx-0x2a78d585]
  41e782:	or     al,0x17
  41e784:	cmp    al,0xcf
  41e786:	mov    eax,0x7124addc
  41e78b:	mov    al,ds:0xb3c2b989
  41e790:	dec    eax
  41e791:	push   ds
  41e792:	add    ebx,esi
  41e794:	inc    esi
  41e795:	push   edx
  41e796:	dec    ebp
  41e797:	fldcw  WORD PTR [edi+ebp*8-0x5a]
  41e79b:	or     edx,DWORD PTR [esi-0x1]
  41e79e:	push   ebx
  41e79f:	dec    eax
  41e7a0:	stos   BYTE PTR es:[edi],al
  41e7a1:	sbb    eax,0xb4e136b8
  41e7a6:	mov    cl,0x7e
  41e7a8:	inc    ecx
  41e7a9:	ins    BYTE PTR es:[edi],dx
  41e7aa:	into   
  41e7ab:	imul   edi,DWORD PTR [eax*2+0x5023c089],0xffffffbd
  41e7b3:	fidivr DWORD PTR [ecx+0x35]
  41e7b6:	test   eax,0xfbcaba83
  41e7bb:	ja     0x41e7bd
  41e7bd:	movs   BYTE PTR es:[edi],BYTE PTR es:[esi]
  41e7bf:	push   gs
  41e7c1:	or     al,0x10
  41e7c3:	mov    eax,ds:0x3404f42a
  41e7c8:	mov    esp,esi
  41e7ca:	mov    al,0xf7
  41e7cc:	lods   al,BYTE PTR ds:[esi]
  41e7cd:	jnp    0x41e7b4
  41e7cf:	xor    bl,BYTE PTR [ebp+0x7b27d22a]
  41e7d5:	push   ds
  41e7d6:	or     eax,0xb617c423
  41e7db:	and    eax,0xd9ad6043
  41e7e0:	jb     0x41e7f2
  41e7e2:	fdivr  QWORD PTR [edx+0x30]
  41e7e5:	bound  esi,QWORD PTR [edi]
  41e7e7:	pop    edi
  41e7e8:	test   DWORD PTR [eax+0x496e5dd3],esp
  41e7ee:	xchg   ecx,eax
  41e7ef:	and    dl,BYTE PTR [edx-0x5c]
  41e7f2:	inc    edx
  41e7f3:	sbb    eax,0xc7a7762a
  41e7f8:	push   0xffffff9b
  41e7fa:	xor    cl,BYTE PTR [eax+0x1a]
  41e7fd:	repz test BYTE PTR [ecx],bl
  41e800:	or     ecx,DWORD PTR [esi]
  41e802:	out    0x14,al
  41e804:	or     al,0x27
  41e806:	ja     0x41e833
  41e808:	adc    eax,0xc35e2e62
  41e80d:	or     al,0x18
  41e80f:	les    ecx,FWORD PTR [ecx+ebp*2+0xe33995a]
  41e816:	fnstsw WORD PTR [edx+ecx*8+0x3c]
  41e81a:	sub    edx,esp
  41e81c:	xchg   edi,eax
  41e81d:	mov    bh,0x56
  41e81f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e820:	lock adc BYTE PTR [edx],bl
  41e823:	adc    ebx,DWORD PTR [ebx]
  41e825:	std    
  41e826:	(bad)  
  41e827:	popa   
  41e828:	ret    
  41e829:	xchg   ecx,eax
  41e82a:	nop
  41e82b:	out    0x39,eax
  41e82d:	sahf   
  41e82e:	dec    ebp
  41e82f:	pop    ecx
  41e830:	retf   
  41e831:	retf   0x31e1
  41e834:	pop    esi
  41e835:	sar    BYTE PTR [eax-0x797c9f6a],0x3d
  41e83c:	xor    ch,cl
  41e83e:	mov    edx,0x64915d1b
  41e843:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e844:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e845:	es xchg edx,eax
  41e847:	xchg   DWORD PTR [ebp-0x7846579c],ecx
  41e84d:	or     BYTE PTR [ecx+0x52],al
  41e850:	mov    ebp,0xde96f4ae
  41e855:	pop    ebp
  41e856:	cmps   BYTE PTR ds:[si],BYTE PTR es:[di]
  41e858:	xor    DWORD PTR [ecx-0x64],ebp
  41e85b:	test   ebp,ebp
  41e85d:	mov    ds:0x9e719080,al
  41e862:	mov    esp,?
  41e864:	dec    edx
  41e865:	ins    BYTE PTR es:[edi],dx
  41e866:	push   0x77
  41e868:	lea    ebx,[ebp+ecx*4+0x17]
  41e86c:	int    0x16
  41e86e:	mov    bl,0xb2
  41e870:	sbb    al,0xce
  41e872:	pop    eax
  41e873:	leave  
  41e874:	add    al,BYTE PTR [esi]
  41e876:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e877:	retf   
  41e878:	fst    DWORD PTR [ecx+0x41000090]
  41e87e:	and    BYTE PTR [ebp+eax*8-0x3b507bd7],bh
  41e885:	ret    
  41e886:	push   edx
  41e887:	lea    ebp,[ebx]
  41e889:	mov    ch,0xc
  41e88b:	or     al,0xc6
  41e88d:	loop   0x41e866
  41e88f:	cmp    al,0xe5
  41e891:	jno    0x41e90f
  41e893:	sbb    DWORD PTR [edx-0x67422c96],ebp
  41e899:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e89a:	push   esi
  41e89b:	or     bl,al
  41e89d:	mov    bh,0x4c
  41e89f:	aaa    
  41e8a0:	icebp  
  41e8a1:	loope  0x41e89e
  41e8a3:	stos   DWORD PTR es:[edi],eax
  41e8a4:	imul   DWORD PTR [ebx+0x4a12f175]
  41e8aa:	adc    eax,0x73ad878d
  41e8af:	inc    ebx
  41e8b0:	add    eax,DWORD PTR [ebp+esi*1+0x69279875]
  41e8b7:	or     cl,ch
  41e8b9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e8ba:	mov    al,0x5c
  41e8bc:	xor    ah,BYTE PTR [edi]
  41e8be:	inc    ebx
  41e8bf:	inc    edx
  41e8c0:	ret    0x2c01
  41e8c3:	out    0x86,al
  41e8c5:	call   0xbf38:0x4cfbc3b1
  41e8cc:	and    al,0xdb
  41e8ce:	xor    ebp,DWORD PTR [ecx-0xda43e0f]
  41e8d4:	js     0x41e8e8
  41e8d6:	stos   DWORD PTR es:[edi],eax
  41e8d7:	mov    ecx,0x68f165fa
  41e8dc:	sbb    eax,0x902af65e
  41e8e1:	fwait
  41e8e2:	cmp    BYTE PTR [ebx+0x4f16fada],ch
  41e8e8:	fwait
  41e8e9:	xchg   ebx,eax
  41e8ea:	and    al,0xaa
  41e8ec:	fcom   DWORD PTR [edx-0x382e2b08]
  41e8f2:	push   esi
  41e8f3:	jg     0x41e8bd
  41e8f5:	adc    DWORD PTR [edx-0x1e],ebp
  41e8f8:	outs   dx,BYTE PTR ds:[esi]
  41e8f9:	dec    ecx
  41e8fa:	(bad)  
  41e8fc:	dec    eax
  41e8fd:	add    eax,0xe7dac944
  41e902:	or     cl,BYTE PTR [esi-0x6be585a7]
  41e908:	add    al,0x1c
  41e90a:	arpl   WORD PTR [eax-0x263869cf],cx
  41e910:	mov    cl,dl
  41e912:	pop    ebp
  41e913:	mov    ecx,0x3bcc3a1c
  41e918:	push   edx
  41e919:	ins    DWORD PTR es:[edi],dx
  41e91a:	inc    esi
  41e91b:	jl     0x41e906
  41e91d:	sbb    BYTE PTR [ecx+0x3c],0x97
  41e921:	xchg   BYTE PTR [edx-0x300ae0b2],bl
  41e927:	adc    bh,BYTE PTR [esi-0x66]
  41e92a:	xchg   esi,eax
  41e92b:	fs enter 0xa2dd,0xe
  41e930:	pop    ds
  41e931:	push   cs
  41e932:	outs   dx,DWORD PTR ds:[esi]
  41e933:	dec    ebx
  41e934:	inc    edi
  41e935:	in     eax,0xab
  41e937:	jno    0x41e8be
  41e939:	push   ecx
  41e93a:	outs   dx,DWORD PTR ds:[esi]
  41e93b:	inc    eax
  41e93c:	repz bnd ret 
  41e93f:	sahf   
  41e940:	pop    ebp
  41e941:	neg    DWORD PTR [ebx]
  41e943:	ins    DWORD PTR es:[edi],dx
  41e944:	in     eax,dx
  41e945:	and    BYTE PTR [eax+0x55],cl
  41e948:	mov    bl,0xe9
  41e94a:	sub    ch,bh
  41e94c:	xor    bl,BYTE PTR [eax+edx*8]
  41e94f:	mov    ebx,0x4aafdcfa
  41e954:	xor    cl,BYTE PTR [ebp+0x663be25d]
  41e95a:	pop    ebp
  41e95b:	mov    WORD PTR [ebx+eax*1+0x36],es
  41e95f:	in     eax,dx
  41e960:	clc    
  41e961:	sub    eax,0x92e9e66f
  41e966:	sahf   
  41e967:	clc    
  41e968:	xor    al,0xbf
  41e96a:	xchg   ecx,eax
  41e96b:	jnp    0x41e984
  41e96d:	shl    dh,0x9d
  41e970:	cmp    BYTE PTR [edi],0x28
  41e973:	sbb    ebp,DWORD PTR [ecx+eax*8-0x7c]
  41e977:	mov    ds:0x696c6234,eax
  41e97c:	xchg   DWORD PTR [ebx+eiz*8],edi
  41e97f:	add    al,0x5d
  41e981:	fwait
  41e982:	loopne 0x41e992
  41e984:	push   ebx
  41e985:	(bad)  
  41e986:	loopne 0x41e985
  41e988:	dec    ecx
  41e989:	mov    al,0x30
  41e98b:	std    
  41e98c:	dec    ebx
  41e98d:	jge    0x41e9d9
  41e98f:	and    eax,0xb70319d4
  41e994:	aas    
  41e995:	hlt    
  41e996:	stc    
  41e997:	lods   al,BYTE PTR ds:[esi]
  41e998:	jno    0x41e9af
  41e99a:	(bad)  
  41e99b:	repnz das 
  41e99d:	mov    WORD PTR [edx+0xe],?
  41e9a0:	mov    edi,0x2a83e29c
  41e9a5:	pop    ebx
  41e9a6:	push   es
  41e9a7:	dec    ecx
  41e9a8:	dec    ecx
  41e9a9:	cmp    DWORD PTR [ebp-0x392ce796],ebx
  41e9af:	in     al,dx
  41e9b0:	xlat   BYTE PTR ds:[ebx]
  41e9b1:	mov    dl,0xd9
  41e9b3:	pop    edi
  41e9b4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e9b5:	imul   ecx,esp,0xffffff9f
  41e9b8:	add    al,0x59
  41e9ba:	or     esi,DWORD PTR [edi]
  41e9bc:	jno    0x41e9ff
  41e9be:	sti    
  41e9bf:	fnclex 
  41e9c1:	cmp    DWORD PTR [ecx+0x16],ebp
  41e9c4:	fcom   QWORD PTR [ecx+ebp*8-0x2a2894e0]
  41e9cb:	dec    ecx
  41e9cc:	or     BYTE PTR ds:0x8279852c,bl
  41e9d2:	and    bl,BYTE PTR [esi]
  41e9d4:	jge    0x41e97b
  41e9d6:	add    DWORD PTR [ecx+0x39],edx
  41e9d9:	out    dx,eax
  41e9da:	bound  esp,QWORD PTR [esi+0x46236e8d]
  41e9e0:	add    cl,dl
  41e9e2:	retfw  
  41e9e4:	jo     0x41e983
  41e9e6:	mov    al,ds:0x335a2765
  41e9eb:	ret    
  41e9ec:	inc    DWORD PTR [ecx]
  41e9ee:	mov    cl,0xd4
  41e9f0:	cmp    al,0x75
  41e9f2:	dec    ebp
  41e9f3:	out    0xcb,al
  41e9f5:	push   ebx
  41e9f6:	xchg   DWORD PTR [eax+0x10],edi
  41e9f9:	pop    esi
  41e9fa:	mov    esp,0xa2a6e766
  41e9ff:	fdiv   DWORD PTR [ebx-0x1d]
  41ea02:	repz out dx,eax
  41ea04:	je     0x41e9c1
  41ea06:	sub    BYTE PTR [ebx],cl
  41ea08:	pusha  
  41ea09:	mov    ds:0xd831552,eax
  41ea0e:	lods   al,BYTE PTR ds:[esi]
  41ea0f:	jle    0x41ea18
  41ea11:	mov    bh,BYTE PTR [eax+0x3e881a01]
  41ea17:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ea18:	mov    ds:0x9bc488c3,eax
  41ea1d:	sbb    eax,0x6825c307
  41ea22:	and    ah,BYTE PTR [edi]
  41ea24:	or     BYTE PTR [edx],0xd5
  41ea27:	scas   al,BYTE PTR es:[edi]
  41ea28:	sub    BYTE PTR [esi+ebx*1+0x6fcb812b],cl
  41ea2f:	into   
  41ea30:	mov    edi,0x3e89ca54
  41ea35:	pop    esi
  41ea36:	pop    ds
  41ea37:	sub    esp,edx
  41ea39:	mov    ebx,DWORD PTR [esi+0x34]
  41ea3c:	(bad)
  41ea3f:	leave  
  41ea40:	jl     0x41ea21
  41ea42:	jl     0x41ea39
  41ea44:	jp     0x41e9c7
  41ea46:	mov    bh,al
  41ea48:	(bad)  
  41ea49:	lahf   
  41ea4a:	dec    esp
  41ea4b:	push   cs
  41ea4c:	fwait
  41ea4d:	leave  
  41ea4e:	jno    0x41eaaf
  41ea50:	jno    0x41e9e7
  41ea52:	inc    esp
  41ea53:	add    BYTE PTR [ecx+0x4a86fdc1],ah
  41ea59:	dec    edx
  41ea5a:	add    esi,eax
  41ea5c:	dec    esp
  41ea5d:	in     eax,dx
  41ea5e:	adc    cl,BYTE PTR [esi-0x78]
  41ea61:	in     eax,dx
  41ea62:	or     DWORD PTR [esi],eax
  41ea64:	push   ebx
  41ea65:	ret    0x3306
  41ea68:	fs mov cl,0x43
  41ea6b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ea6c:	outs   dx,BYTE PTR ds:[esi]
  41ea6d:	jle    0x41ea21
  41ea6f:	xchg   al,dh
  41ea71:	add    DWORD PTR [eax+0x70],edi
  41ea74:	lods   al,BYTE PTR ds:[esi]
  41ea75:	sub    esi,DWORD PTR [eax-0x35]
  41ea78:	mov    al,0xc8
  41ea7a:	das    
  41ea7b:	cmp    al,0x73
  41ea7d:	cdq    
  41ea7e:	cmp    DWORD PTR [edx],eax
  41ea80:	into   
  41ea81:	push   esi
  41ea82:	data16 ror BYTE PTR [esi+0x21],1
  41ea86:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ea87:	xchg   edx,eax
  41ea88:	jp     0x41eaac
  41ea8a:	aad    0xde
  41ea8c:	sub    al,0xf
  41ea8e:	mov    edx,DWORD PTR [ecx+0x3d]
  41ea91:	jmp    0xef24d80b
  41ea96:	out    dx,al
  41ea97:	clc    
  41ea98:	mov    bh,0xae
  41ea9a:	mov    eax,ds:0x705506a0
  41ea9f:	mov    ds:0x3a297245,eax
  41eaa4:	jle    0x41eb1c
  41eaa6:	inc    edi
  41eaa7:	xchg   ebx,eax
  41eaa8:	lods   al,BYTE PTR ds:[esi]
  41eaa9:	mov    esi,DWORD PTR [ebp+0x40]
  41eaac:	dec    edi
  41eaad:	mul    DWORD PTR [ebx-0x7e]
  41eab0:	dec    ebx
  41eab1:	mov    ds:0xde5bb229,eax
  41eab6:	cmc    
  41eab7:	(bad)  
  41eab8:	in     eax,0xb2
  41eaba:	enter  0x393,0xa7
  41eabe:	cdq    
  41eabf:	adc    ch,bh
  41eac1:	add    edx,DWORD PTR [edx-0x56aaaf3b]
  41eac7:	xchg   ebx,eax
  41eac8:	mov    bh,0xf5
  41eaca:	fucom  st(7)
  41eacc:	sbb    DWORD PTR [ebp+0x9],ebx
  41eacf:	fwait
  41ead0:	mov    cl,0x6
  41ead2:	in     eax,0x4c
  41ead4:	rcr    BYTE PTR [eax-0x6f],cl
  41ead7:	or     ebp,DWORD PTR [eax+0x54]
  41eada:	mov    eax,0xe5b6554d
  41eadf:	mov    ecx,0x1d15bc16
  41eae4:	int3   
  41eae5:	rol    DWORD PTR [esi+0x7aea72e0],cl
  41eaeb:	(bad)  
  41eaec:	repz in al,0x82
  41eaef:	jle    0x41eabc
  41eaf1:	out    dx,al
  41eaf2:	push   es
  41eaf3:	xor    ebp,DWORD PTR [esp+edx*1+0x540635d]
  41eafa:	and    eax,0x8a010004
  41eaff:	and    dh,ch
  41eb01:	jmp    0x22745b7
  41eb06:	gs pop ebp
  41eb08:	fisub  WORD PTR [esi+0x4de7adea]
  41eb0e:	outs   dx,DWORD PTR ds:[esi]
  41eb0f:	xor    al,0x30
  41eb11:	mov    BYTE PTR [edx+0x33],ch
  41eb14:	mov    edi,DWORD PTR [edx+eax*2]
  41eb17:	jae    0x41eb3b
  41eb19:	xchg   ebx,eax
  41eb1a:	cmp    dl,cl
  41eb1c:	shl    DWORD PTR [edx+0x11a15dd5],1
  41eb22:	push   ds
  41eb23:	dec    edi
  41eb24:	enter  0x56ed,0xb9
  41eb28:	test   al,0x69
  41eb2a:	jne    0x41eb61
  41eb2c:	jle    0x41eb41
  41eb2e:	mov    eax,ds:0x2257d375
  41eb33:	pop    ebx
  41eb34:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41eb35:	dec    esi
  41eb36:	dec    esi
  41eb37:	pusha  
  41eb38:	pop    es
  41eb39:	iret   
  41eb3a:	btr    edx,ecx
  41eb3d:	repnz sbb ah,dl
  41eb40:	fbstp  TBYTE PTR [ebx+0x2]
  41eb43:	add    eax,0xf8318f16
  41eb48:	pop    ebx
  41eb49:	loop   0x41eb41
  41eb4b:	or     BYTE PTR [eax],dl
  41eb4d:	imul   esp,ecx,0xc664d8db
  41eb53:	sti    
  41eb54:	dec    ebp
  41eb55:	dec    ebp
  41eb56:	lock pop ebp
  41eb58:	(bad)  
  41eb59:	xchg   ebp,eax
  41eb5a:	jecxz  0x41eaf7
  41eb5c:	lea    ebx,[esi+0x493cc9fb]
  41eb62:	mov    bh,0x66
  41eb64:	mov    edx,0xe13c6d5c
  41eb69:	fisttp WORD PTR [ecx+0x588bb1da]
  41eb6f:	mov    esi,DWORD PTR [edx-0x30a5a786]
  41eb75:	or     ch,0xec
  41eb78:	add    al,0xdd
  41eb7a:	retf   
  41eb7b:	jae    0x41ebce
  41eb7d:	shr    BYTE PTR [edi+ebp*8],0xdf
  41eb81:	jle    0x41ebc9
  41eb83:	fcom   QWORD PTR [esi+0x4b40057f]
  41eb89:	es ins BYTE PTR es:[edi],dx
  41eb8b:	sar    BYTE PTR [esi],0x77
  41eb8e:	test   al,0x15
  41eb90:	jl     0x41eb32
  41eb92:	xor    eax,0x934fdf60
  41eb97:	add    esp,esi
  41eb99:	arpl   ax,di
  41eb9b:	mov    dl,BYTE PTR [ebx+0x34]
  41eb9e:	cwde   
  41eb9f:	inc    ebx
  41eba0:	out    dx,eax
  41eba1:	jg     0x41ebfc
  41eba3:	sbb    BYTE PTR [esi-0x6],dl
  41eba6:	mov    ds:0xac591def,al
  41ebab:	cld    
  41ebac:	lea    esp,[ecx]
  41ebae:	mov    edx,0x2ee73933
  41ebb3:	pushf  
  41ebb4:	push   0xffffffa9
  41ebb6:	fidivr WORD PTR [ebx-0x41]
  41ebb9:	fs xchg ebx,eax
  41ebbb:	push   0x9496991
  41ebc0:	gs pop eax
  41ebc2:	lods   eax,DWORD PTR ds:[esi]
  41ebc3:	outs   dx,BYTE PTR ds:[esi]
  41ebc4:	in     al,dx
  41ebc5:	test   ch,ah
  41ebc7:	inc    ebx
  41ebc8:	mov    ds:0x7c9502b9,eax
  41ebcd:	inc    edx
  41ebce:	xchg   DWORD PTR [edx+0x36],ecx
  41ebd1:	dec    edx
  41ebd2:	or     bl,ah
  41ebd4:	and    al,0xbb
  41ebd6:	adc    DWORD PTR ds:0x433b87a,0x24e301a0
  41ebe0:	ss pop ecx
  41ebe2:	xchg   DWORD PTR [ecx+eax*8+0x4d],edi
  41ebe6:	pop    es
  41ebe7:	pushf  
  41ebe8:	sar    DWORD PTR [ebp-0x2e],1
  41ebeb:	xchg   edi,eax
  41ebec:	lods   al,BYTE PTR ds:[esi]
  41ebed:	aam    0x1c
  41ebef:	cmp    cl,0x2d
  41ebf2:	sar    BYTE PTR [ebx],cl
  41ebf4:	push   esi
  41ebf5:	fsub   QWORD PTR [esi-0x26b05d1d]
  41ebfb:	(bad)  
  41ebfd:	retf   
  41ebfe:	mov    BYTE PTR [ebx-0x39],dl
  41ec01:	mov    eax,0xd60ea1cb
  41ec06:	push   ebp
  41ec07:	scas   eax,DWORD PTR es:[edi]
  41ec08:	cmp    al,0xd8
  41ec0a:	retf   0x7f94
  41ec0d:	jo     0x41ec0c
  41ec0f:	hlt    
  41ec10:	outs   dx,DWORD PTR ds:[esi]
  41ec11:	jp     0x41ec8b
  41ec13:	into   
  41ec14:	(bad)  
  41ec15:	lods   eax,DWORD PTR ds:[esi]
  41ec16:	dec    eax
  41ec17:	jmp    0x6de3fa70
  41ec1c:	mov    ah,0x42
  41ec1e:	dec    esi
  41ec1f:	dec    ebp
  41ec20:	cs jg  0x41ec9e
  41ec23:	jmp    0x41ec91
  41ec25:	sti    
  41ec26:	shl    DWORD PTR [ebx+0x327a3c8d],1
  41ec2c:	mov    esi,0x786cdb1a
  41ec31:	jge    0x41ec71
  41ec33:	xor    DWORD PTR [esi-0x693d3462],0xffffff9e
  41ec3a:	scas   al,BYTE PTR es:[di]
  41ec3c:	jge    0x41ec36
  41ec3e:	xor    DWORD PTR [edi+esi*2-0x3b],ebp
  41ec42:	inc    ebp
  41ec43:	cmp    al,ch
  41ec45:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ec46:	sbb    ch,ah
  41ec48:	and    BYTE PTR [eax],bl
  41ec4a:	add    BYTE PTR [edx+ebx*2-0x124b9d93],cl
  41ec51:	cmp    al,0x30
  41ec53:	test   BYTE PTR [ebx-0x2621ddf4],dh
  41ec59:	fnstsw WORD PTR [ecx+0x16]
  41ec5c:	cdq    
  41ec5d:	mov    esi,0xfa9cb6de
  41ec62:	ror    BYTE PTR [esi-0x50b4250b],cl
  41ec68:	call   0xf5981704
  41ec6d:	iret   
  41ec6e:	add    bl,bh
  41ec70:	ror    DWORD PTR [edi],1
  41ec72:	cmp    cl,BYTE PTR [ecx+0x2f]
  41ec75:	cmp    BYTE PTR [edx],bh
  41ec77:	jl     0x41ec01
  41ec79:	gs sbb dh,ah
  41ec7c:	inc    ecx
  41ec7d:	push   edx
  41ec7e:	scas   al,BYTE PTR es:[edi]
  41ec7f:	aaa    
  41ec80:	pop    ebp
  41ec81:	test   DWORD PTR [esi],ecx
  41ec83:	adc    eax,0xf6dd85f6
  41ec88:	xchg   ecx,eax
  41ec89:	rol    edx,1
  41ec8b:	and    BYTE PTR [esp+esi*8],al
  41ec8e:	cwde   
  41ec8f:	retf   
  41ec90:	mov    dh,0x39
  41ec92:	ret    
  41ec93:	add    bl,BYTE PTR [edx-0x34a88505]
  41ec99:	or     BYTE PTR [ebp-0x7d278bb8],0x45
  41eca0:	mov    eax,0x63e9a63a
  41eca5:	add    BYTE PTR ds:0xaef8e4d6,0x9d
  41ecac:	fld    DWORD PTR [edx+0x4e3d75d6]
  41ecb2:	pop    edi
  41ecb3:	lea    esp,[ecx-0x12]
  41ecb6:	outs   dx,DWORD PTR ds:[esi]
  41ecb7:	ret    0x9f5f
  41ecba:	jnp    0x41ed33
  41ecbc:	push   ds
  41ecbd:	cmp    edx,edi
  41ecbf:	lea    edi,[edx+ecx*8]
  41ecc2:	mov    ds:0xe0902ca1,al
  41ecc7:	push   edx
  41ecc8:	mov    ecx,0xd473a366
  41eccd:	adc    BYTE PTR [esi+0x3eab74ea],al
  41ecd3:	iret   
  41ecd4:	push   ebx
  41ecd5:	aas    
  41ecd6:	in     al,dx
  41ecd7:	inc    esp
  41ecd8:	outs   dx,BYTE PTR ds:[esi]
  41ecd9:	loop   0x41ecd3
  41ecdb:	sti    
  41ecdc:	fiadd  DWORD PTR [edi-0x5d7bf92c]
  41ece2:	rol    dh,cl
  41ece4:	cmp    al,0xb9
  41ece6:	sti    
  41ece7:	cwde   
  41ece8:	xchg   edi,eax
  41ece9:	push   edi
  41ecea:	and    al,0x30
  41ecec:	jno    0x41eca8
  41ecee:	popf   
  41ecef:	mov    edx,0xcd4fcf11
  41ecf4:	and    eax,0x7ff163f6
  41ecf9:	pop    edx
  41ecfa:	into   
  41ecfb:	inc    eax
  41ecfc:	les    esp,FWORD PTR [edi]
  41ecfe:	jmp    0x41ecdc
  41ed00:	call   0xa4a560a2
  41ed05:	push   ebx
  41ed06:	test   al,0xd4
  41ed08:	into   
  41ed09:	arpl   bx,bp
  41ed0b:	push   edx
  41ed0c:	not    DWORD PTR [edx-0x1e7aa527]
  41ed12:	loopne 0x41ece5
  41ed14:	imul   eax,DWORD PTR [ebx*8+0xcddd7e4],0xffffffa5
  41ed1c:	jbe    0x41ecf5
  41ed1e:	push   edi
  41ed1f:	push   0xffffffa2
  41ed21:	fidiv  DWORD PTR [edi]
  41ed23:	dec    esi
  41ed24:	xchg   DWORD PTR [edx],esp
  41ed26:	sbb    ch,BYTE PTR [ebp+0x164618d0]
  41ed2c:	cmp    ecx,DWORD PTR [ecx-0x58]
  41ed2f:	cmp    DWORD PTR [edx],ebx
  41ed31:	(bad)  
  41ed32:	pop    ecx
  41ed33:	push   eax
  41ed34:	or     edi,DWORD PTR [ebx]
  41ed36:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ed37:	mov    edx,0xf86c398c
  41ed3c:	xor    ebp,DWORD PTR [esp+eax*2-0x5a]
  41ed40:	xor    al,0x2d
  41ed42:	jb     0x41ed9c
  41ed44:	sub    dh,BYTE PTR [ecx+0x4614b587]
  41ed4a:	ret    0xadf6
  41ed4d:	or     ebp,0x39
  41ed50:	xchg   ecx,eax
  41ed51:	(bad)  
  41ed52:	cmc    
  41ed53:	int    0x87
  41ed55:	pop    DWORD PTR [edx-0x1b]
  41ed58:	sbb    dh,BYTE PTR [ecx]
  41ed5a:	inc    eax
  41ed5b:	popf   
  41ed5c:	mov    DWORD PTR [ebx],ebp
  41ed5e:	mov    dl,0xfb
  41ed60:	push   ebp
  41ed61:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ed62:	mov    ah,0x4e
  41ed64:	bound  edx,QWORD PTR [edx-0xa]
  41ed67:	fcom   QWORD PTR [eax]
  41ed69:	nop
  41ed6a:	in     al,0xaa
  41ed6c:	cmp    DWORD PTR [eax],ebx
  41ed6e:	into   
  41ed6f:	jg     0x41ed06
  41ed71:	xchg   al,cl
  41ed73:	repz jae 0x41ed97
  41ed76:	sbb    edx,DWORD PTR [edx+0x4ed4cad5]
  41ed7c:	fdiv   st(2),st
  41ed7e:	mov    al,0x28
  41ed80:	add    al,0xc4
  41ed82:	test   BYTE PTR [edx],bh
  41ed84:	lds    ebp,FWORD PTR [ecx+0x4c020a0a]
  41ed8a:	ret    
  41ed8b:	icebp  
  41ed8c:	xor    al,0x89
  41ed8e:	sub    eax,0x4def5239
  41ed93:	xor    bl,dh
  41ed95:	retf   
  41ed96:	add    ch,BYTE PTR [edx]
  41ed98:	ds mov edi,0xda845852
  41ed9e:	iret   
  41ed9f:	pop    edi
  41eda0:	mov    ebx,0xe8a3b897
  41eda5:	stc    
  41eda6:	out    dx,al
  41eda7:	loope  0x41ed4e
  41eda9:	adc    DWORD PTR [esi+0x70f3c3d3],ebx
  41edaf:	add    bh,BYTE PTR [edi]
  41edb1:	sbb    BYTE PTR [ecx-0x6f],ah
  41edb4:	add    al,0x7a
  41edb6:	cli    
  41edb7:	call   0x65fd:0x7a5106a4
  41edbe:	call   0x99ca:0xc93ac1b1
  41edc5:	je     0x41edfb
  41edc7:	jno    0x41ee24
  41edc9:	enterw 0x51b2,0x37
  41edce:	inc    ebp
  41edcf:	(bad)  
  41edd0:	into   
  41edd1:	mov    eax,0x444fe0fb
  41edd6:	pop    ecx
  41edd7:	test   eax,0x75c37222
  41eddc:	outs   dx,DWORD PTR ds:[esi]
  41eddd:	movs   DWORD PTR es:[di],DWORD PTR ds:[si]
  41eddf:	or     BYTE PTR [edi],bh
  41ede1:	retf   0x6a71
  41ede4:	push   es
  41ede5:	adc    bl,BYTE PTR [ebx]
  41ede7:	jo     0x41edf1
  41ede9:	arpl   WORD PTR [ebx],cx
  41edeb:	aam    0x41
  41eded:	pusha  
  41edee:	arpl   WORD PTR es:[edx-0x14],di
  41edf2:	pop    ss
  41edf3:	(bad)  
  41edf5:	mul    DWORD PTR ds:0x3c238d23
  41edfb:	mov    al,ds:0xb2783889
  41ee00:	lock pop esp
  41ee02:	retf   
  41ee03:	push   cs
  41ee04:	in     eax,dx
  41ee05:	mov    cl,bh
  41ee07:	push   edx
  41ee08:	sub    ebx,DWORD PTR [esi-0x2f01645]
  41ee0e:	or     esi,DWORD PTR [eax]
  41ee10:	test   eax,0x6b36686e
  41ee15:	jp     0x41edec
  41ee17:	ins    BYTE PTR es:[edi],dx
  41ee18:	into   
  41ee19:	neg    bh
  41ee1b:	lds    ebp,FWORD PTR [ebx-0x15]
  41ee1e:	outs   dx,DWORD PTR ds:[esi]
  41ee1f:	lahf   
  41ee20:	mov    DWORD PTR ds:0x74ef62d4,ebp
  41ee26:	mov    dh,0xc
  41ee28:	out    0x20,eax
  41ee2a:	enter  0xe9a3,0x4e
  41ee2e:	scas   al,BYTE PTR es:[edi]
  41ee2f:	fisttp DWORD PTR [edx-0x341dbfaa]
  41ee35:	fsub   QWORD PTR [edi]
  41ee37:	xchg   BYTE PTR [eax+0x3a80b45b],dl
  41ee3d:	mov    dh,0xa9
  41ee3f:	pop    ebx
  41ee40:	add    bh,0xb8
  41ee43:	shr    DWORD PTR [ebp+0x7803d58f],1
  41ee49:	mov    cx,0x6235
  41ee4d:	mov    bl,0x53
  41ee4f:	and    eax,DWORD PTR [edi]
  41ee51:	sbb    al,0xcd
  41ee53:	nop
  41ee54:	inc    ecx
  41ee55:	xchg   si,ax
  41ee57:	add    DWORD PTR [edx],edi
  41ee59:	clc    
  41ee5a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ee5b:	out    0xa0,eax
  41ee5d:	ret    0x3d99
  41ee60:	inc    eax
  41ee61:	fcom   st(7)
  41ee63:	sub    DWORD PTR [ebx-0x7df5e6bc],ebp
  41ee69:	or     eax,DWORD PTR [ebx-0x54cc9d30]
  41ee6f:	fild   WORD PTR [esi+0x17]
  41ee72:	outs   dx,DWORD PTR ds:[esi]
  41ee73:	pop    ecx
  41ee74:	lock cmp al,0x7b
  41ee77:	pushf  
  41ee78:	pop    ebp
  41ee79:	leave  
  41ee7a:	fs ins DWORD PTR es:[edi],dx
  41ee7c:	in     eax,0x3a
  41ee7e:	sahf   
  41ee7f:	and    al,BYTE PTR [edi]
  41ee81:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ee82:	aas    
  41ee83:	inc    edx
  41ee84:	and    eax,ebx
  41ee86:	daa    
  41ee87:	mov    ebx,ecx
  41ee89:	jae    0x41eeb1
  41ee8b:	scas   al,BYTE PTR es:[edi]
  41ee8c:	and    BYTE PTR [eax-0x56],cl
  41ee8f:	xor    BYTE PTR [edx-0x4535a88d],dh
  41ee95:	inc    ebx
  41ee96:	jmp    0x6c27b3da
  41ee9b:	mov    bl,0xe5
  41ee9d:	pushw  cs
  41ee9f:	shr    ebp,cl
  41eea1:	xor    cl,BYTE PTR [eax]
  41eea3:	cmc    
  41eea4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41eea5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41eea6:	aam    0x28
  41eea8:	mov    ch,0x7b
  41eeaa:	jno    0x41ee9d
  41eeac:	mov    al,0x98
  41eeae:	inc    ebx
  41eeaf:	mul    DWORD PTR [edi]
  41eeb1:	mov    esp,0x4815f1cc
  41eeb6:	xchg   edx,eax
  41eeb7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41eeb8:	js     0x41ef15
  41eeba:	lea    edi,[ebx]
  41eebc:	dec    ebx
  41eebd:	call   0xb4df:0x40277499
  41eec4:	push   esp
  41eec5:	sar    DWORD PTR [ebp+0x7e],cl
  41eec8:	xchg   esi,eax
  41eec9:	inc    ebp
  41eeca:	mov    dh,0x2a
  41eecc:	push   ebp
  41eecd:	jmp    0x389e:0xdfbadc4a
  41eed4:	push   ds
  41eed5:	sbb    ah,dl
  41eed7:	addr16 or al,0xc8
  41eeda:	mov    edi,0x997c2a7b
  41eedf:	sbb    al,0x2e
  41eee1:	repnz cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41eee3:	outs   dx,BYTE PTR ds:[esi]
  41eee4:	mov    cl,0x19
  41eee6:	cmc    
  41eee7:	iret   
  41eee8:	add    al,0x78
  41eeea:	jg     0x41ef65
  41eeec:	jbe    0x41ef56
  41eeee:	push   ebx
  41eeef:	xor    al,bh
  41eef1:	lock xchg ebx,eax
  41eef3:	dec    eax
  41eef4:	dec    ebx
  41eef5:	ds cld 
  41eef7:	out    dx,eax
  41eef8:	aaa    
  41eef9:	clc    
  41eefa:	dec    eax
  41eefb:	xchg   edx,eax
  41eefc:	lahf   
  41eefd:	push   es
  41eefe:	cmp    ch,BYTE PTR [ebp-0x1785d951]
  41ef04:	lea    ebx,[esi+0x6f2bd6cb]
  41ef0a:	mov    BYTE PTR [edi-0x2bd05a58],cl
  41ef10:	out    0x46,al
  41ef12:	pop    edi
  41ef13:	rcr    ecx,0x72
  41ef16:	stos   DWORD PTR es:[di],eax
  41ef18:	in     al,dx
  41ef19:	xor    BYTE PTR [edi+0x4d121e7d],dl
  41ef1f:	cli    
  41ef20:	js     0x41eef1
  41ef22:	outs   dx,DWORD PTR ds:[esi]
  41ef23:	or     al,0x2
  41ef25:	cmc    
  41ef26:	(bad)  [esi-0x62f0b556]
  41ef2c:	fdiv   DWORD PTR [bx+si+0x10]
  41ef30:	dec    eax
  41ef31:	fbstp  TBYTE PTR ds:0xffa12588
  41ef37:	cmp    eax,0xcb4053c5
  41ef3c:	add    eax,0xc6880e5b
  41ef41:	mov    edx,0x871f320a
  41ef46:	std    
  41ef47:	xchg   edx,eax
  41ef48:	xor    DWORD PTR [eax],eax
  41ef4a:	or     bl,bl
  41ef4c:	jecxz  0x41ef87
  41ef4e:	jne    0x41ef5a
  41ef50:	sbb    al,0x18
  41ef52:	xchg   esi,eax
  41ef53:	hlt    
  41ef54:	loope  0x41ef9e
  41ef56:	fisubr WORD PTR [eax-0x7fe06878]
  41ef5c:	test   al,0x2a
  41ef5e:	adc    dh,cl
  41ef60:	xchg   esi,edi
  41ef62:	mov    bh,0xc8
  41ef64:	xchg   edx,eax
  41ef65:	sub    edx,DWORD PTR [ecx]
  41ef67:	pop    ds
  41ef68:	(bad)  
  41ef69:	es gs mov edx,0x3483aa0f
  41ef70:	push   0xffffffe5
  41ef72:	or     eax,DWORD PTR ds:0x158346d
  41ef78:	and    al,0xfa
  41ef7a:	shl    DWORD PTR [edx+0x6f5e0365],1
  41ef80:	(bad)  
  41ef81:	shl    DWORD PTR [edi+edx*8-0x11],1
  41ef85:	and    DWORD PTR [edx+edx*8],ebp
  41ef88:	or     bh,dh
  41ef8a:	and    al,0xe7
  41ef8c:	xor    BYTE PTR [edx],al
  41ef8e:	imul   esi
  41ef90:	xor    esi,DWORD PTR [ebx-0x3147d2c]
  41ef96:	aam    0x80
  41ef98:	leave  
  41ef99:	scas   eax,DWORD PTR es:[edi]
  41ef9a:	xchg   esi,eax
  41ef9b:	in     eax,dx
  41ef9c:	(bad)  
  41ef9d:	push   ebp
  41ef9e:	rcl    esp,1
  41efa0:	mov    bh,0x31
  41efa2:	ja     0x41efb8
  41efa4:	jne    0x41ef83
  41efa6:	mov    bl,dl
  41efa8:	cmp    DWORD PTR [ebx-0x12],edx
  41efab:	push   edx
  41efac:	pop    eax
  41efad:	and    eax,0xcb6b363c
  41efb2:	jno    0x41ef41
  41efb4:	pop    ebp
  41efb5:	sar    BYTE PTR [ecx],cl
  41efb7:	(bad)  
  41efb8:	adc    esp,DWORD PTR [edi+0x6d]
  41efbb:	jns    0x41f026
  41efbd:	dec    eax
  41efbe:	inc    edi
  41efbf:	sbb    al,BYTE PTR [ecx+0x4302dccc]
  41efc5:	cdq    
  41efc6:	inc    esp
  41efc7:	cwde   
  41efc8:	ja     0x41f001
  41efca:	sub    bh,BYTE PTR [eax-0x73]
  41efcd:	jmp    0xade2:0x9145e00e
  41efd4:	xchg   ecx,eax
  41efd5:	sbb    al,0x6f
  41efd7:	push   eax
  41efd8:	lea    edi,[edx+0x36]
  41efdb:	xchg   esi,eax
  41efdc:	popf   
  41efdd:	dec    edi
  41efde:	and    edi,DWORD PTR [ecx-0x2ea5c34a]
  41efe4:	jbe    0x41f029
  41efe6:	es dec edi
  41efe8:	sub    eax,0xba885f75
  41efed:	cmp    BYTE PTR [eax],cl
  41efef:	arpl   WORD PTR [ebp-0x1b],cx
  41eff2:	popa   
  41eff3:	iret   
  41eff4:	mov    ds:0x5a5bc8dc,eax
  41eff9:	call   0x15271377
  41effe:	add    BYTE PTR [edx-0x2b],al
  41f001:	sub    BYTE PTR [ecx+0x4bfe5aac],ah
  41f007:	dec    edi
  41f008:	shl    DWORD PTR [eax],0x6f
  41f00b:	fcomip st,st(6)
  41f00d:	repz out dx,eax
  41f00f:	push   esp
  41f010:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f011:	add    bl,dl
  41f013:	push   es
  41f014:	cdq    
  41f015:	pop    esp
  41f016:	aas    
  41f017:	call   DWORD PTR [ebx]
  41f019:	jmp    0x2627:0xbcf9826
  41f020:	adc    DWORD PTR [ebp-0x29],ebx
  41f023:	lds    ebp,FWORD PTR [ebx]
  41f025:	sbb    ecx,esi
  41f027:	mov    esp,0x42e8c95f
  41f02c:	mov    ecx,0x68a2feae
  41f031:	test   al,0x14
  41f033:	xchg   esi,eax
  41f034:	scas   eax,DWORD PTR es:[edi]
  41f035:	out    dx,eax
  41f036:	lds    ebp,FWORD PTR [edx]
  41f038:	jmp    FWORD PTR [eax+edi*8-0x6796a807]
  41f03f:	xor    eax,DWORD PTR [eax+0x47]
  41f042:	jb     0x41f0a8
  41f044:	xchg   DWORD PTR [eax-0xc0d831d],edi
  41f04a:	mov    al,ds:0xf535ce2a
  41f04f:	add    BYTE PTR [edx+0x3e],dh
  41f052:	jmp    0x41f0d1
  41f054:	push   ss
  41f055:	imul   esp,DWORD PTR [ebx-0x30],0xffffffc9
  41f059:	dec    ebp
  41f05a:	pop    es
  41f05b:	sub    DWORD PTR [ebx],edi
  41f05d:	add    eax,0x9a8712c6
  41f062:	daa    
  41f063:	jmp    0xcf5347af
  41f068:	rol    DWORD PTR [ebx-0x3c12c423],1
  41f06e:	arpl   WORD PTR [edx-0x59cfc185],sp
  41f074:	adc    DWORD PTR [edi-0x498bf766],ecx
  41f07a:	mov    bh,0x2a
  41f07c:	es dec esi
  41f07e:	scas   al,BYTE PTR es:[edi]
  41f07f:	fild   WORD PTR [edx]
  41f081:	int3   
  41f082:	push   0xffffffc4
  41f084:	inc    ebp
  41f085:	pop    edi
  41f086:	cmp    BYTE PTR ds:0x83e4954c,0xde
  41f08d:	pop    es
  41f08e:	and    ch,ah
  41f090:	cwde   
  41f091:	retf   0x8d69
  41f094:	or     eax,0xf0766f13
  41f099:	sbb    eax,0x5488797e
  41f09e:	pop    edi
  41f09f:	fdiv   st,st(3)
  41f0a1:	aaa    
  41f0a2:	xchg   esi,eax
  41f0a3:	fsubp  st(7),st
  41f0a5:	mov    ds:0x966e6895,eax
  41f0aa:	(bad)  
  41f0ab:	inc    ebp
  41f0ac:	pusha  
  41f0ad:	and    eax,DWORD PTR [ebp+eiz*2-0x737e3df0]
  41f0b4:	cmp    edx,0x9de36ded
  41f0ba:	test   eax,0xd269de30
  41f0bf:	ja     0x41f0b4
  41f0c1:	mov    edi,0xf0885a35
  41f0c6:	add    DWORD PTR [ebx+0x7cbc380a],eax
  41f0cc:	cmp    DWORD PTR [eax+esi*1-0x1f],esp
  41f0d0:	cli    
  41f0d1:	xchg   BYTE PTR [edi+0x1c],al
  41f0d4:	xor    eax,0x6f32b610
  41f0d9:	fstp   DWORD PTR [edx+0x7a]
  41f0dc:	retf   
  41f0dd:	sbb    ebx,eax
  41f0df:	bound  edi,QWORD PTR [ecx+edi*8+0x130c008]
  41f0e6:	arpl   WORD PTR [eax],cx
  41f0e8:	sbb    dl,dl
  41f0ea:	mov    ah,0xc4
  41f0ec:	sub    al,0x2a
  41f0ee:	gs jbe 0x41f104
  41f0f1:	fwait
  41f0f2:	xlat   BYTE PTR ds:[ebx]
  41f0f3:	inc    DWORD PTR [edx-0x4eb3efd0]
  41f0f9:	add    DWORD PTR [eax+0x5afc3171],eax
  41f0ff:	mov    ah,0xac
  41f101:	(bad)  
  41f102:	xchg   DWORD PTR [eax],ebx
  41f104:	pop    eax
  41f105:	or     BYTE PTR [eax+0xc9dff28],0xa3
  41f10c:	jp     0x41f0ef
  41f10e:	clc    
  41f10f:	jmp    0xe1fe93a2
  41f114:	adc    BYTE PTR [esi-0x2b],al
  41f117:	repz jge 0x41f0e7
  41f11a:	mov    cl,0x60
  41f11c:	retf   
  41f11d:	push   cs
  41f11e:	jno    0x41f11d
  41f120:	cmp    bl,BYTE PTR [esi]
  41f122:	mov    ch,BYTE PTR [edx-0x2]
  41f125:	lahf   
  41f126:	stc    
  41f127:	xor    DWORD PTR ds:0x7be91ac0,ebp
  41f12d:	xchg   edx,eax
  41f12e:	shl    DWORD PTR [edi-0x7],0x2d
  41f132:	sahf   
  41f133:	push   edx
  41f134:	xor    ecx,DWORD PTR [esp+esi*2]
  41f137:	icebp  
  41f138:	pop    esi
  41f139:	pop    esp
  41f13a:	pop    ebx
  41f13b:	xor    al,0xa6
  41f13d:	int    0x52
  41f13f:	aaa    
  41f140:	fcom   QWORD PTR [ecx-0x5e]
  41f143:	fisttp QWORD PTR [esi-0x40]
  41f146:	mov    esi,0x363a066
  41f14b:	sub    al,0xe
  41f14d:	sub    eax,0x55713c14
  41f152:	test   eax,0x3cb69038
  41f157:	shr    DWORD PTR [ebp-0x3c4729e5],1
  41f15d:	sbb    BYTE PTR [edx],dh
  41f15f:	xchg   edx,ecx
  41f161:	or     DWORD PTR [ecx],ebx
  41f163:	in     eax,dx
  41f164:	push   0xffffffec
  41f166:	ret    
  41f167:	call   0xac60:0x186dda67
  41f16e:	outs   dx,DWORD PTR ds:[esi]
  41f16f:	js     0x41f1a8
  41f171:	test   edx,edx
  41f173:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f174:	mov    eax,0x21eb716f
  41f179:	or     BYTE PTR [esi+0x1],cl
  41f17c:	loopne 0x41f1dc
  41f17e:	jnp    0x41f1e5
  41f180:	lods   eax,DWORD PTR ds:[esi]
  41f181:	in     eax,dx
  41f182:	adc    ecx,0x7b
  41f185:	sahf   
  41f186:	fwait
  41f187:	inc    eax
  41f188:	mov    dh,0xea
  41f18a:	pop    edi
  41f18b:	xchg   esi,eax
  41f18c:	jl     0x41f177
  41f18e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f18f:	jge    0x41f210
  41f191:	sub    BYTE PTR [esi],bh
  41f193:	or     al,BYTE PTR [eax-0x1ff89670]
  41f199:	dec    esi
  41f19a:	mov    esp,0xb629f38c
  41f19f:	pop    ds
  41f1a0:	mov    ch,0x25
  41f1a2:	es jnp 0x41f17d
  41f1a5:	sub    BYTE PTR [ecx-0x19f0a494],ch
  41f1ab:	data16 cmp BYTE PTR [esi+0x2b844e5c],cl
  41f1b2:	std    
  41f1b3:	es adc edx,esp
  41f1b6:	stos   DWORD PTR es:[edi],eax
  41f1b7:	retf   0x7678
  41f1ba:	mov    ch,0x68
  41f1bc:	les    ebp,FWORD PTR [ebp+0x52f2af22]
  41f1c2:	scas   eax,DWORD PTR es:[edi]
  41f1c3:	jg     0x41f1d4
  41f1c5:	repnz outs dx,BYTE PTR ds:[esi]
  41f1c7:	mov    ch,0x72
  41f1c9:	lfs    esi,FWORD PTR [esp+edx*8]
  41f1cd:	fnstcw WORD PTR [ecx+0x6f7ec787]
  41f1d3:	pop    esi
  41f1d4:	stc    
  41f1d5:	out    0xb3,eax
  41f1d7:	les    edi,FWORD PTR [esi+0x4f03233a]
  41f1dd:	cmp    dh,bl
  41f1df:	rcr    DWORD PTR [esi],0xb4
  41f1e2:	xor    eax,0xb9f81f1e
  41f1e7:	js     0x41f1be
  41f1e9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f1ea:	aam    0xaa
  41f1ec:	sar    esi,cl
  41f1ee:	stos   BYTE PTR es:[edi],al
  41f1ef:	dec    esi
  41f1f0:	xchg   esi,eax
  41f1f1:	mov    ch,0x85
  41f1f3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f1f4:	adc    esi,DWORD PTR [eax-0x5f]
  41f1f7:	mov    al,0xc4
  41f1f9:	ret    
  41f1fa:	scas   al,BYTE PTR es:[edi]
  41f1fb:	jae    0x41f1c7
  41f1fd:	ret    0x7a06
  41f200:	mov    ecx,0x6bbabae6
  41f205:	inc    ecx
  41f206:	in     eax,dx
  41f207:	jo     0x41f216
  41f209:	aaa    
  41f20a:	pushf  
  41f20b:	push   0xefe97557
  41f210:	add    al,0x23
  41f212:	loope  0x41f291
  41f214:	mov    BYTE PTR [edx],0x67
  41f217:	rol    DWORD PTR [ecx+0x57ed6fff],1
  41f21d:	jmp    0xacf1b738
  41f222:	inc    edi
  41f223:	jns    0x41f230
  41f225:	leave  
  41f226:	cmp    dl,dl
  41f228:	cmp    edi,DWORD PTR [eax-0x1a4d4add]
  41f22e:	retf   0x759b
  41f231:	mov    ecx,ebx
  41f233:	fimul  WORD PTR [esi]
  41f235:	out    dx,al
  41f236:	icebp  
  41f237:	jmp    0x849:0x7537c422
  41f23e:	mov    dl,0xbd
  41f240:	and    al,0xea
  41f242:	push   edi
  41f243:	push   ss
  41f244:	jle    0x41f2c2
  41f246:	imul   ebx,DWORD PTR [esp+ecx*4-0x3c2d6ccc],0x46
  41f24e:	clc    
  41f24f:	bound  ebx,QWORD PTR [esi-0x53a76f24]
  41f255:	mov    edi,0x37ec1dd5
  41f25a:	(bad)  
  41f25b:	xchg   esp,eax
  41f25c:	xchg   edx,eax
  41f25d:	and    cl,BYTE PTR [ebp+ebp*8+0x1dc6c7a0]
  41f264:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f265:	loop   0x41f2ba
  41f267:	out    dx,eax
  41f268:	js     0x41f222
  41f26a:	icebp  
  41f26b:	test   DWORD PTR [eax+0x57],0xe01ab926
  41f272:	mov    cl,al
  41f274:	fcomp  DWORD PTR [edx+edx*4-0x23]
  41f278:	imul   ebx,esi,0xab881a6e
  41f27e:	push   es
  41f27f:	xchg   ebx,eax
  41f280:	aam    0x2
  41f282:	mov    dh,0xd0
  41f284:	jo     0x41f2cc
  41f286:	shl    ah,cl
  41f288:	lods   eax,DWORD PTR ds:[esi]
  41f289:	cwde   
  41f28a:	int    0xe
  41f28c:	xor    DWORD PTR [ebx+0x31],0xffffffed
  41f290:	aad    0x40
  41f292:	sbb    dl,BYTE PTR [esi-0x196e2fe9]
  41f298:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f299:	add    BYTE PTR [edx-0x9],ch
  41f29c:	jo     0x41f318
  41f29e:	add    al,dl
  41f2a0:	retf   
  41f2a1:	push   esp
  41f2a2:	jp     0x41f2b0
  41f2a4:	and    ebx,DWORD PTR [ebx+0x5a6a5df0]
  41f2aa:	fsubr  QWORD PTR [eax-0x7f888e56]
  41f2b0:	or     al,0x74
  41f2b2:	cmp    BYTE PTR [edx+esi*4],bl
  41f2b5:	mov    eax,ds:0xbf313b06
  41f2ba:	and    DWORD PTR ds:0x101a0064,0x30bbd34
  41f2c4:	mov    ecx,0xc4642e96
  41f2c9:	pop    es
  41f2ca:	jl     0x41f2d6
  41f2cc:	bound  ebx,QWORD PTR [edi]
  41f2ce:	jle    0x41f2b4
  41f2d0:	cmp    al,BYTE PTR [edx-0x76b06846]
  41f2d6:	fst    DWORD PTR [ebx+0x3faad630]
  41f2dc:	inc    edx
  41f2dd:	jmp    0x41f324
  41f2df:	clc    
  41f2e0:	mov    eax,0x3d20a646
  41f2e5:	cmp    DWORD PTR [esi-0x84d0e41],ebp
  41f2eb:	test   eax,0x7935d094
  41f2f0:	stos   DWORD PTR es:[edi],eax
  41f2f1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f2f2:	retf   
  41f2f3:	jo     0x41f300
  41f2f5:	fdiv   st,st(5)
  41f2f7:	fcomp  QWORD PTR [edi]
  41f2f9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f2fa:	inc    ebx
  41f2fb:	lea    esp,[ecx+0x6c]
  41f2fe:	inc    esp
  41f2ff:	repnz inc edi
  41f301:	mov    ebp,0xc6e538f4
  41f306:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f307:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f308:	add    eax,esp
  41f30a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f30b:	bound  edi,QWORD PTR [edx-0x29]
  41f30e:	or     bh,BYTE PTR ds:0x80ad2af2
  41f314:	inc    ebx
  41f315:	and    BYTE PTR [ebp+0x1d],ah
  41f318:	stos   DWORD PTR es:[edi],eax
  41f319:	cvtps2pi mm2,xmm2
  41f31c:	lods   al,BYTE PTR cs:[esi]
  41f31e:	or     eax,0xd740b3b7
  41f323:	cwde   
  41f324:	outs   dx,BYTE PTR ds:[esi]
  41f325:	(bad)  
  41f327:	add    DWORD PTR [esi],esp
  41f329:	pop    es
  41f32a:	js     0x41f2b1
  41f32c:	cmp    edi,ecx
  41f32e:	and    eax,0xf6941e43
  41f333:	(bad)  
  41f334:	popf   
  41f335:	jle    0x41f2c3
  41f337:	jnp    0x41f2f6
  41f339:	(bad)  
  41f33a:	stos   BYTE PTR es:[edi],al
  41f33b:	xchg   ecx,eax
  41f33c:	xor    al,BYTE PTR [ecx+0x6441040b]
  41f342:	call   0xdccc:0x1a98de29
  41f349:	sub    bl,al
  41f34b:	push   ecx
  41f34c:	sti    
  41f34d:	rol    DWORD PTR [esi],1
  41f34f:	adc    bh,dl
  41f351:	test   DWORD PTR [esi+0xb],edx
  41f354:	inc    ecx
  41f355:	cmp    eax,0x571d014e
  41f35a:	mov    ecx,0x2ad7c5be
  41f35f:	ins    BYTE PTR es:[edi],dx
  41f360:	cwde   
  41f361:	mov    esi,0x60c18241
  41f366:	dec    ebp
  41f367:	cmp    eax,0xe6dd4e5e
  41f36c:	pushf  
  41f36d:	das    
  41f36e:	mov    ecx,0x20221bb6
  41f373:	adc    eax,0xa819a40e
  41f378:	pop    edx
  41f379:	lds    esi,FWORD PTR [ecx-0x19baad8d]
  41f37f:	sbb    bh,BYTE PTR [ebx+0x5e]
  41f382:	ret    0xe098
  41f385:	int    0x86
  41f387:	sti    
  41f388:	test   DWORD PTR [edx-0x61],edx
  41f38b:	push   esi
  41f38c:	sbb    dh,BYTE PTR [edx]
  41f38e:	push   ds
  41f38f:	and    dl,BYTE PTR [ebx-0x5c]
  41f392:	bound  ebx,QWORD PTR [ecx+0x22d7baf3]
  41f398:	rcl    DWORD PTR ds:0xa40824ce,0x58
  41f39f:	fisttp QWORD PTR [ebp-0x599977aa]
  41f3a5:	xchg   edi,eax
  41f3a6:	jecxz  0x41f3b7
  41f3a8:	inc    ebp
  41f3a9:	mov    DWORD PTR [esi+ebp*4+0x43],eax
  41f3ad:	daa    
  41f3ae:	xchg   DWORD PTR ss:[ebp+0x1d],esi
  41f3b2:	mov    ecx,0x7e92cb9e
  41f3b7:	xchg   ebp,eax
  41f3b8:	jl     0x41f35c
  41f3ba:	push   ebp
  41f3bb:	push   ecx
  41f3bc:	sbb    eax,DWORD PTR [edx-0x1f73df83]
  41f3c2:	shl    BYTE PTR [ebx-0x56],cl
  41f3c5:	ret    
  41f3c6:	mov    ah,0xf2
  41f3c8:	pop    ds
  41f3c9:	outs   dx,DWORD PTR ds:[esi]
  41f3ca:	jl     0x41f445
  41f3cc:	stc    
  41f3cd:	push   0xffffffeb
  41f3cf:	adc    edi,DWORD PTR [ecx+0x58]
  41f3d2:	bound  ebx,QWORD PTR [edx]
  41f3d4:	icebp  
  41f3d5:	ins    BYTE PTR es:[edi],dx
  41f3d6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f3d7:	mov    ch,0x71
  41f3d9:	sub    eax,DWORD PTR [edx]
  41f3db:	fisttp DWORD PTR [edi+0x58]
  41f3de:	fist   WORD PTR [ecx*1-0xff31ace]
  41f3e5:	cwde   
  41f3e6:	cli    
  41f3e7:	adc    eax,0xd88b724b
  41f3ec:	mov    DWORD PTR [edx+0x70],ebp
  41f3ef:	pusha  
  41f3f0:	or     BYTE PTR [edi-0x25],ch
  41f3f3:	mov    al,ds:0x30bbfdb
  41f3f8:	push   eax
  41f3f9:	icebp  
  41f3fa:	sbb    bh,BYTE PTR [edi-0xc]
  41f3fd:	adc    BYTE PTR [ecx-0x39],bh
  41f400:	adc    ecx,DWORD PTR [edi+0x599efd7e]
  41f406:	push   esi
  41f407:	int    0xf7
  41f409:	out    0x25,eax
  41f40b:	xor    BYTE PTR [ebp+ecx*1+0x7e],ch
  41f40f:	ja     0x41f47e
  41f411:	jge    0x41f43f
  41f413:	sbb    al,BYTE PTR [esi-0x4f65b5d1]
  41f419:	jo     0x41f452
  41f41b:	mov    ebx,0x749df109
  41f420:	aas    
  41f421:	and    ebp,ebx
  41f423:	ss in  eax,dx
  41f425:	icebp  
  41f426:	xchg   edx,eax
  41f427:	out    dx,al
  41f428:	das    
  41f429:	mov    esp,0xadda5fc1
  41f42e:	jl     0x41f448
  41f430:	and    al,cl
  41f432:	cmp    cl,BYTE PTR ds:0x19b7ca00
  41f438:	outs   dx,DWORD PTR ds:[esi]
  41f439:	pushf  
  41f43a:	mov    eax,ds:0xcdadb327
  41f43f:	mov    gs,WORD PTR fs:[esi+edi*4+0x1b8ec9ea]
  41f447:	jae    0x41f470
  41f449:	jmp    0xa01d95f4
  41f44e:	(bad)  
  41f44f:	inc    esi
  41f450:	call   0x7236:0x71e3d417
  41f457:	xchg   ecx,eax
  41f458:	sub    bh,al
  41f45a:	retf   
  41f45b:	pop    ebx
  41f45c:	hlt    
  41f45d:	adc    edi,DWORD PTR [ebp+0x51]
  41f460:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f461:	nop
  41f462:	jb     0x41f495
  41f464:	dec    ebx
  41f465:	cmc    
  41f466:	pop    ss
  41f467:	adc    DWORD PTR [edi],edx
  41f469:	repnz popw ds
  41f46c:	sahf   
  41f46d:	stc    
  41f46e:	mov    dl,0x6c
  41f470:	sbb    BYTE PTR cs:[ebx],0x3d
  41f474:	mov    DWORD PTR es:[ecx-0x6d],ebx
  41f478:	dec    eax
  41f479:	xor    esp,ecx
  41f47b:	ins    BYTE PTR es:[edi],dx
  41f47c:	or     BYTE PTR [esi-0x38],bl
  41f47f:	jl     0x41f4a7
  41f481:	(bad)  
  41f482:	xor    DWORD PTR [ebp-0x6b],ecx
  41f485:	push   eax
  41f486:	je     0x41f4c5
  41f488:	jmp    0xf2126032
  41f48d:	repnz mov bh,0x82
  41f490:	add    ebp,edx
  41f492:	sbb    bh,BYTE PTR [ecx]
  41f494:	(bad)  
  41f495:	std    
  41f496:	pop    edx
  41f497:	into   
  41f498:	dec    edx
  41f499:	sub    esp,DWORD PTR [esi]
  41f49b:	dec    ebx
  41f49c:	sub    esi,DWORD PTR [eax]
  41f49e:	loop   0x41f49a
  41f4a0:	jp     0x41f4de
  41f4a2:	(bad)  
  41f4a3:	mov    bh,0xb5
  41f4a5:	clc    
  41f4a6:	pusha  
  41f4a7:	sub    eax,0x2b9fc3e9
  41f4ac:	push   esp
  41f4ad:	fdiv   st,st(6)
  41f4af:	jne    0x41f469
  41f4b1:	(bad)  
  41f4b2:	sbb    eax,DWORD PTR [edi+0x5371677b]
  41f4b8:	iret   
  41f4b9:	mov    fs,WORD PTR [esi]
  41f4bb:	js     0x41f533
  41f4bd:	addr16 mov ah,0xb
  41f4c0:	in     eax,dx
  41f4c1:	iret   
  41f4c2:	push   ds
  41f4c3:	push   es
  41f4c4:	inc    esi
  41f4c5:	daa    
  41f4c6:	and    eax,0xc927300
  41f4cb:	(bad)  
  41f4cc:	cli    
  41f4cd:	imul   edi,DWORD PTR [ecx],0xffffff9b
  41f4d0:	cmp    DWORD PTR [edi+edx*2-0xe1d4ad4],ecx
  41f4d7:	mov    DWORD PTR [edi-0x4ee21348],ebx
  41f4dd:	push   esi
  41f4de:	and    al,0xc7
  41f4e0:	aas    
  41f4e1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f4e2:	or     al,0x86
  41f4e4:	mov    ebx,0x536839d
  41f4e9:	jmp    0x3070:0xc9f5a190
  41f4f0:	cmp    BYTE PTR [esp+edi*1+0xd5a567f],cl
  41f4f7:	les    esp,FWORD PTR [ebp-0x4475f921]
  41f4fd:	in     al,0x8f
  41f4ff:	push   ecx
  41f500:	push   ebp
  41f501:	xor    BYTE PTR [ecx+0x1551bf32],al
  41f507:	popf   
  41f508:	lahf   
  41f509:	pop    eax
  41f50a:	pop    eax
  41f50b:	sbb    DWORD PTR [eax],0xfffffff5
  41f50e:	inc    esp
  41f50f:	xchg   edi,eax
  41f510:	addr16 push cs
  41f512:	je     0x41f535
  41f514:	xchg   BYTE PTR [ecx+ebp*2+0x1b074e6f],bl
  41f51b:	pop    ecx
  41f51c:	mov    DWORD PTR [ebx+0x4b],edx
  41f51f:	pop    ss
  41f520:	ret    0x6b0d
  41f523:	je     0x41f4f8
  41f525:	add    DWORD PTR [eax-0x4596085a],0xffffffc0
  41f52c:	int3   
  41f52d:	jmp    0x41f4e0
  41f52f:	fadd   st,st(0)
  41f531:	std    
  41f532:	pusha  
  41f533:	inc    ebx
  41f534:	fld    QWORD PTR [edx+0x2c]
  41f537:	push   cs
  41f538:	(bad)  
  41f539:	and    al,0x87
  41f53b:	ror    ch,cl
  41f53d:	fdiv   QWORD PTR [ecx-0x2dff749b]
  41f543:	adc    BYTE PTR [ebx+eiz*4],0xf9
  41f547:	(bad)  
  41f549:	out    0xba,al
  41f54b:	or     al,0x83
  41f54d:	fsubr  DWORD PTR [eax-0x4]
  41f550:	ret    
  41f551:	push   esi
  41f552:	fcom   DWORD PTR [ebx-0x28]
  41f555:	dec    ebp
  41f556:	and    esp,edi
  41f558:	mov    cl,0x98
  41f55a:	scas   eax,DWORD PTR es:[edi]
  41f55b:	dec    esi
  41f55c:	ins    DWORD PTR es:[edi],dx
  41f55d:	inc    ebx
  41f55e:	jmp    0x6c39:0x26c16b2b
  41f565:	int    0x69
  41f567:	or     BYTE PTR [edx+0xf],dl
  41f56a:	jmp    0x16ee444f
  41f56f:	push   edx
  41f570:	in     eax,0xe6
  41f572:	(bad)  
  41f574:	ins    BYTE PTR es:[edi],dx
  41f575:	push   edi
  41f576:	fs mov ebp,0x96b6cbfa
  41f57c:	repnz sub eax,0x159c3b13
  41f582:	push   edx
  41f583:	sbb    al,0xb1
  41f585:	outs   dx,BYTE PTR ds:[esi]
  41f586:	in     al,0x23
  41f588:	les    edi,FWORD PTR ss:[eax+0x7086c606]
  41f58f:	mov    dh,0x46
  41f591:	clc    
  41f592:	xchg   esp,eax
  41f593:	xchg   esi,eax
  41f594:	scas   al,BYTE PTR es:[edi]
  41f595:	loopne 0x41f60e
  41f597:	add    cl,dh
  41f599:	push   esp
  41f59a:	(bad)  
  41f59b:	scas   eax,DWORD PTR es:[edi]
  41f59c:	push   0x23af6efd
  41f5a1:	out    0x77,al
  41f5a3:	dec    esp
  41f5a4:	sub    DWORD PTR [ebx-0x58443146],0xffffffac
  41f5ab:	test   BYTE PTR [ecx+0x2d],ch
  41f5ae:	cmp    al,0xde
  41f5b0:	sar    dl,1
  41f5b2:	xor    BYTE PTR [ecx-0x79],0xc4
  41f5b6:	jge    0x41f60f
  41f5b8:	or     DWORD PTR [eax-0x5c],ecx
  41f5bb:	lods   al,BYTE PTR ds:[esi]
  41f5bc:	iret   
  41f5bd:	sub    esp,DWORD PTR [edx]
  41f5bf:	jne    0x41f613
  41f5c1:	in     eax,dx
  41f5c2:	cmp    BYTE PTR ss:[eax],0xb
  41f5c6:	and    eax,0xdc550460
  41f5cb:	and    cl,BYTE PTR [ecx+0xa]
  41f5ce:	dec    eax
  41f5cf:	cmp    DWORD PTR [edi-0x6026ee94],edi
  41f5d5:	mov    DWORD PTR es:[edx-0x5a287cd],ebp
  41f5dc:	xor    eax,0x1ad9f9fd
  41f5e1:	and    eax,0x98613c8a
  41f5e6:	rol    DWORD PTR ds:0x62d7ab0e,0x10
  41f5ed:	sub    bh,0xa7
  41f5f0:	jle    0x41f58f
  41f5f2:	cmp    DWORD PTR [ebx-0x10],ebx
  41f5f5:	ret    
  41f5f6:	fsub   st(1),st
  41f5f8:	pop    edi
  41f5f9:	xchg   DWORD PTR [eax],ecx
  41f5fb:	scas   al,BYTE PTR es:[edi]
  41f5fc:	gs dec edx
  41f5fe:	std    
  41f5ff:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f600:	push   ss
  41f601:	out    0xa8,eax
  41f603:	xchg   esp,eax
  41f604:	mov    eax,0x43f55606
  41f609:	lods   eax,DWORD PTR ds:[esi]
  41f60a:	iret   
  41f60b:	enter  0xaf3e,0xb4
  41f60f:	and    BYTE PTR [eax],0xac
  41f612:	adc    al,0x76
  41f614:	div    BYTE PTR [eax]
  41f616:	jmp    0xbe6e:0xfedc4e36
  41f61d:	test   al,0x64
  41f61f:	call   0x74e5:0x1a7da85a
  41f626:	nop
  41f627:	icebp  
  41f628:	mov    eax,0xe91efb5a
  41f62d:	cmp    BYTE PTR [ecx+0x7d5af4f5],al
  41f633:	mov    esp,0x3fa34fc6
  41f638:	push   ds
  41f639:	xchg   ecx,eax
  41f63a:	dec    ebx
  41f63b:	test   BYTE PTR ds:0xfffb,ch
  41f640:	ficom  DWORD PTR [ebp+0x32d4762d]
  41f646:	icebp  
  41f647:	in     al,dx
  41f648:	jno    0x41f5ef
  41f64a:	inc    esp
  41f64b:	aad    0xba
  41f64d:	adc    BYTE PTR [eax-0x2fa7605f],0x59
  41f654:	push   ds
  41f655:	sub    bl,BYTE PTR [ebp-0x16]
  41f658:	sar    DWORD PTR [ebx+0x48],1
  41f65b:	stos   BYTE PTR es:[edi],al
  41f65c:	(bad)  
  41f65d:	fs dec ecx
  41f65f:	pop    ebp
  41f660:	mov    dl,0x91
  41f662:	shl    eax,0x2b
  41f665:	inc    edi
  41f666:	ret    0x26ea
  41f669:	(bad)  
  41f66a:	adc    ah,dh
  41f66c:	jns    0x41f622
  41f66e:	repz fnsave [edx]
  41f671:	and    eax,0x861c6c29
  41f676:	not    dl
  41f678:	pop    es
  41f679:	shl    BYTE PTR ds:0xfcfd5a97,0xb1
  41f680:	push   edx
  41f681:	or     DWORD PTR [eax+0x31],0x35337c6a
  41f688:	pop    esp
  41f689:	pop    edx
  41f68a:	mov    ds:0x83597ed0,eax
  41f68f:	and    al,al
  41f691:	cmp    al,0x3e
  41f693:	outs   dx,DWORD PTR ds:[esi]
  41f694:	sub    dl,BYTE PTR [esi+0x37]
  41f697:	xchg   edi,eax
  41f698:	xor    ecx,DWORD PTR [edi-0x67f230a7]
  41f69e:	pop    ebp
  41f69f:	xchg   cl,bh
  41f6a1:	ret    0xc47d
  41f6a4:	loope  0x41f698
  41f6a6:	xor    dh,0xdc
  41f6a9:	or     eax,0x1e88a6c7
  41f6ae:	jns    0x41f6fd
  41f6b0:	dec    eax
  41f6b1:	int    0x1f
  41f6b3:	(bad)  
  41f6b4:	(bad)  
  41f6b5:	mov    ecx,0x487d16dd
  41f6ba:	mov    ah,0xaa
  41f6bc:	inc    esi
  41f6bd:	not    dh
  41f6bf:	aad    0xee
  41f6c1:	add    al,0x35
  41f6c3:	pop    ecx
  41f6c4:	push   0xc7d289bd
  41f6c9:	(bad)  
  41f6ca:	repnz rcl ebp,0x4
  41f6ce:	cs fs sbb eax,0x6c299e0
  41f6d5:	daa    
  41f6d6:	mov    dh,BYTE PTR [ecx]
  41f6d8:	imul   edx,DWORD PTR [eax-0x73],0x6d
  41f6dc:	ins    DWORD PTR es:[edi],dx
  41f6dd:	xchg   edi,eax
  41f6de:	fcmovu st,st(5)
  41f6e0:	aad    0xe7
  41f6e2:	rcl    DWORD PTR [ebp-0x34],0x4f
  41f6e6:	ds mov bl,0x45
  41f6e9:	mov    ecx,0x3276742c
  41f6ee:	push   eax
  41f6ef:	cmc    
  41f6f0:	jmp    0x41f705
  41f6f2:	inc    ebp
  41f6f3:	call   0x87c7be69
  41f6f8:	or     eax,ebx
  41f6fa:	xor    DWORD PTR [esi-0x60],edi
  41f6fd:	ficomp DWORD PTR [edi+edx*4+0x60fdb9d3]
  41f704:	push   ebp
  41f705:	bound  edi,QWORD PTR [ebp+0x552fb85e]
  41f70b:	xor    BYTE PTR [eax],0x95
  41f70e:	jne    0x41f75d
  41f710:	fistp  DWORD PTR [ebp+0x3e]
  41f713:	addr16 dec ebp
  41f715:	sti    
  41f716:	mov    ?,esp
  41f718:	pop    ss
  41f719:	mov    ch,0x61
  41f71b:	test   eax,0x623f4cc5
  41f720:	inc    ecx
  41f721:	aam    0xfd
  41f723:	sub    bl,dl
  41f725:	fcomp  DWORD PTR [ebx]
  41f727:	inc    edi
  41f728:	xchg   ebp,eax
  41f729:	das    
  41f72a:	or     BYTE PTR [ebx],ch
  41f72c:	sub    DWORD PTR [esi],esi
  41f72e:	sbb    dh,BYTE PTR [esi+0x68]
  41f731:	imul   esi,DWORD PTR [ecx],0xbe3d2176
  41f737:	mov    DWORD PTR [esi+0x2a],ebx
  41f73a:	mov    WORD PTR [ebp+0x78],?
  41f73d:	mov    bh,BYTE PTR [ebp+0x3470d81a]
  41f743:	test   ch,dh
  41f745:	sub    al,0xf7
  41f747:	iret   
  41f748:	dec    eax
  41f749:	inc    edi
  41f74a:	fwait
  41f74b:	into   
  41f74c:	mov    edx,0x2b7f3e61
  41f751:	and    dh,BYTE PTR [ebp+0x7e]
  41f754:	retf   
  41f755:	xchg   ebp,eax
  41f756:	test   eax,0xb0a91799
  41f75b:	sbb    BYTE PTR [edi+0x25cd76f0],0x4a
  41f762:	mov    cl,0x99
  41f764:	into   
  41f765:	das    
  41f766:	(bad)  
  41f767:	mov    ebx,DWORD PTR [ebx]
  41f769:	js     0x41f7e2
  41f76b:	pop    edx
  41f76c:	xchg   BYTE PTR [eax-0x41f43d5b],al
  41f772:	pop    ds
  41f773:	je     0x41f777
  41f775:	adc    dh,bl
  41f777:	test   BYTE PTR [eax],0x2f
  41f77a:	repz pop ds
  41f77c:	(bad)
  41f780:	xor    edi,ebp
  41f782:	in     al,dx
  41f783:	clc    
  41f784:	fidivr DWORD PTR [esi-0x7a]
  41f787:	push   0xe103684a
  41f78c:	icebp  
  41f78d:	mov    eax,ds:0x953e8aa0
  41f792:	pop    edx
  41f793:	call   DWORD PTR [eax-0x160723f0]
  41f799:	sbb    BYTE PTR [ecx+0x63],cl
  41f79c:	or     ecx,DWORD PTR [eax+0x35]
  41f79f:	fidiv  WORD PTR [esi-0x4b]
  41f7a2:	out    0xee,al
  41f7a4:	mov    al,0x6e
  41f7a6:	test   eax,0x74823b99
  41f7ab:	xor    eax,0x63740727
  41f7b0:	dec    DWORD PTR [ebp-0x33]
  41f7b3:	test   eax,0x12958ade
  41f7b8:	pop    edi
  41f7b9:	stos   DWORD PTR es:[edi],eax
  41f7ba:	(bad)  
  41f7bb:	and    bh,BYTE PTR [edi+eax*2+0x7797b13]
  41f7c2:	jmp    0x41f80b
  41f7c4:	mov    dh,0x6b
  41f7c6:	push   cs
  41f7c7:	inc    ebp
  41f7c8:	inc    esi
  41f7c9:	or     eax,0x2e8683f1
  41f7ce:	sahf   
  41f7cf:	shl    dh,cl
  41f7d1:	daa    
  41f7d2:	popf   
  41f7d3:	mov    ah,0x53
  41f7d5:	in     eax,0x98
  41f7d7:	or     DWORD PTR [edx+0x47],esi
  41f7da:	mov    cl,0xbf
  41f7dc:	outs   dx,DWORD PTR ds:[esi]
  41f7dd:	out    dx,al
  41f7de:	jp     0x41f78b
  41f7e0:	mov    eax,0xebf2f841
  41f7e5:	xchg   ebx,eax
  41f7e6:	adc    al,0xbe
  41f7e8:	mov    dl,0x84
  41f7ea:	cli    
  41f7eb:	pushf  
  41f7ec:	adc    BYTE PTR ds:0x7024d7c1,bl
  41f7f2:	shl    DWORD PTR [ecx-0x74],cl
  41f7f5:	(bad)  
  41f7f6:	jmp    0x41f7ba
  41f7f8:	bound  esi,QWORD PTR [ebx-0x2c]
  41f7fb:	out    0x18,eax
  41f7fd:	retf   
  41f7fe:	retf   
  41f7ff:	and    bl,dh
  41f801:	xchg   esp,eax
  41f802:	loopne 0x41f785
  41f804:	or     eax,0xabbb1c66
  41f809:	inc    ebx
  41f80a:	sti    
  41f80b:	inc    edx
  41f80c:	in     al,dx
  41f80d:	jo     0x41f806
  41f80f:	pop    eax
  41f810:	dec    ebx
  41f811:	mov    esi,0xf6fa852d
  41f816:	pop    es
  41f817:	jne    0x41f7ad
  41f819:	inc    eax
  41f81a:	jmp    0x7860:0xedd7184
  41f821:	xor    al,0x25
  41f823:	imul   ebp,DWORD PTR [edi-0x2a893586],0xffffffc0
  41f82a:	shl    BYTE PTR [edx],0x12
  41f82d:	pop    ebp
  41f82e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f82f:	xchg   edx,eax
  41f830:	scas   eax,DWORD PTR es:[edi]
  41f831:	popa   
  41f832:	mov    al,0xfe
  41f834:	(bad)  
  41f835:	mov    bl,0x80
  41f837:	pop    edi
  41f838:	dec    edi
  41f839:	xor    eax,DWORD PTR [edi]
  41f83b:	ficom  WORD PTR [esi+0x3d]
  41f83e:	xor    edx,DWORD PTR [ecx+0x54db2344]
  41f844:	pop    ds
  41f845:	(bad)  
  41f847:	add    eax,0xe683c204
  41f84c:	pop    ebx
  41f84d:	add    BYTE PTR [ebx+0x5dc67580],al
  41f853:	xchg   ebp,eax
  41f854:	fcmovbe st,st(5)
  41f856:	or     eax,0x155ceed3
  41f85b:	aas    
  41f85c:	dec    edi
  41f85d:	or     ecx,edi
  41f85f:	xor    eax,0xd3fda142
  41f864:	gs jno 0x41f811
  41f867:	mov    DWORD PTR [eax-0x7770d3fe],ecx
  41f86d:	out    0x39,al
  41f86f:	pop    eax
  41f870:	jge    0x41f880
  41f872:	cmp    eax,DWORD PTR [edx]
  41f874:	je     0x41f840
  41f876:	add    dl,BYTE PTR [ecx+0x78]
  41f879:	lds    ecx,FWORD PTR [eax]
  41f87b:	or     al,0xdd
  41f87d:	fisttp DWORD PTR [edx]
  41f87f:	mov    cl,0xf0
  41f881:	mov    ebp,0x6acf4984
  41f886:	dec    ebx
  41f887:	add    DWORD PTR [edx-0x6f],eax
  41f88a:	loopne 0x41f84c
  41f88c:	sbb    al,0xd9
  41f88e:	sbb    eax,0x7ff38158
  41f893:	enter  0x6e1e,0x74
  41f897:	sar    ebp,cl
  41f899:	loop   0x41f846
  41f89b:	jns    0x41f8d9
  41f89d:	jl     0x41f903
  41f89f:	lods   eax,DWORD PTR ds:[esi]
  41f8a0:	pop    ds
  41f8a1:	sub    esp,DWORD PTR [ebp-0x2c]
  41f8a4:	cmp    BYTE PTR [esi-0x74],ah
  41f8a7:	(bad)  
  41f8a8:	mov    dl,0x87
  41f8aa:	xchg   BYTE PTR [ecx],bl
  41f8ac:	push   esi
  41f8ad:	das    
  41f8ae:	add    BYTE PTR [esi+0x51],ah
  41f8b1:	push   ebp
  41f8b2:	repnz mov dh,0xea
  41f8b5:	outs   dx,BYTE PTR ds:[esi]
  41f8b6:	jae    0x41f85b
  41f8b8:	dec    esp
  41f8b9:	jmp    0x41f871
  41f8bb:	lds    esp,FWORD PTR [ebx+edx*1-0x6436ddef]
  41f8c2:	ins    DWORD PTR es:[edi],dx
  41f8c3:	int3   
  41f8c4:	es dec ebp
  41f8c6:	mov    cl,0xba
  41f8c8:	test   DWORD PTR [edi*2+0x3cd09ba6],edi
  41f8cf:	ret    
  41f8d0:	ret    
  41f8d1:	add    BYTE PTR [edi-0x15],bl
  41f8d4:	icebp  
  41f8d5:	mov    cl,0x9b
  41f8d7:	lds    eax,FWORD PTR [esi+0x1a0b644d]
  41f8dd:	loopne 0x41f85f
  41f8df:	inc    edi
  41f8e0:	mov    ch,0x98
  41f8e2:	mov    ebp,0xdbd2d204
  41f8e7:	sbb    al,0x71
  41f8e9:	xchg   edi,eax
  41f8ea:	fld    TBYTE PTR [ebp+0x41]
  41f8ed:	ins    DWORD PTR es:[edi],dx
  41f8ee:	stc    
  41f8ef:	jp     0xcd986e31
  41f8f5:	fstp   DWORD PTR [edi-0x64d9f98a]
  41f8fb:	cmp    ebx,eax
  41f8fd:	inc    ebp
  41f8fe:	jmp    0xcbc5:0x6ed40379
  41f905:	xlat   BYTE PTR ds:[ebx]
  41f906:	sub    DWORD PTR ds:0xabd35a52,ebx
  41f90c:	inc    ecx
  41f90d:	push   ss
  41f90e:	pop    ecx
  41f90f:	and    bl,BYTE PTR [eax-0x24]
  41f912:	cmp    DWORD PTR [ebx],esp
  41f914:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f915:	xchg   ebx,eax
  41f916:	shl    BYTE PTR [edx],cl
  41f918:	pop    edx
  41f919:	sub    edx,ebx
  41f91b:	mov    dh,0xe6
  41f91d:	ins    BYTE PTR es:[edi],dx
  41f91e:	dec    edi
  41f91f:	(bad)  
  41f920:	mov    DWORD PTR [esi+0x3f574628],edx
  41f926:	bound  esp,QWORD PTR [di-0x6892]
  41f92b:	push   esi
  41f92c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f92d:	sbb    ah,al
  41f92f:	cmp    bh,BYTE PTR [esi-0x73]
  41f932:	adc    edi,DWORD PTR [ebx-0x4e90d9b6]
  41f938:	cmp    al,0xc2
  41f93a:	mov    eax,ds:0x601f4f27
  41f93f:	inc    ecx
  41f940:	les    edi,FWORD PTR [esi]
  41f942:	sub    ebx,esi
  41f944:	add    al,0xe2
  41f946:	sbb    ch,BYTE PTR [ebx+eax*4+0x60]
  41f94a:	xchg   ecx,eax
  41f94b:	jmp    0x41f939
  41f94d:	loopne 0x41f944
  41f94f:	test   eax,0x6d0a188e
  41f954:	cmp    al,0x22
  41f956:	xor    DWORD PTR [edi+0x5e632512],0x1
  41f95d:	jns    0x41f907
  41f95f:	mov    ds:0x82e89cd4,al
  41f964:	fist   WORD PTR [eax]
  41f966:	cmp    cl,BYTE PTR [ecx]
  41f968:	dec    edx
  41f969:	pop    esi
  41f96a:	inc    edx
  41f96b:	out    0x9a,al
  41f96d:	dec    esi
  41f96e:	out    0x3b,al
  41f970:	push   ds
  41f971:	xchg   ebx,eax
  41f972:	or     al,0xa2
  41f974:	push   esp
  41f975:	(bad)  
  41f976:	nop
  41f977:	les    eax,FWORD PTR [esi+0x7]
  41f97a:	jae    0x41f93d
  41f97c:	sbb    ecx,0xffffffcd
  41f97f:	lock dec ecx
  41f981:	pop    esp
  41f982:	retf   0x7a3
  41f985:	clc    
  41f986:	push   0x25
  41f988:	inc    ecx
  41f989:	dec    esi
  41f98a:	enter  0x5da0,0xcb
  41f98e:	retf   
  41f98f:	shr    BYTE PTR [esi+0x4ea9e9c6],0x9d
  41f996:	popf   
  41f997:	add    dl,BYTE PTR [ebx+0x79b62ab1]
  41f99d:	add    BYTE PTR [esi],bh
  41f99f:	pop    ds
  41f9a0:	(bad)  
  41f9a1:	cmp    eax,0x5b4a3df2
  41f9a6:	xchg   ebp,eax
  41f9a7:	ds jbe 0x41f96a
  41f9aa:	xchg   DWORD PTR [ecx+eiz*4-0x19e5788b],ebx
  41f9b1:	lds    esp,FWORD PTR [esp+ebx*1+0x7c5c1021]
  41f9b8:	and    cl,BYTE PTR [edx]
  41f9ba:	retf   
  41f9bb:	lfs    esp,FWORD PTR ds:0x9b80a2dc
  41f9c2:	daa    
  41f9c3:	in     al,0x5f
  41f9c5:	int3   
  41f9c6:	inc    ebx
  41f9c7:	and    DWORD PTR [esi],ebx
  41f9c9:	sub    eax,0xb4df016f
  41f9ce:	dec    esi
  41f9cf:	push   ebx
  41f9d0:	(bad)  
  41f9d2:	inc    esi
  41f9d3:	mov    edi,0x2f9427d1
  41f9d8:	xor    esi,DWORD PTR [edx-0xa10e864]
  41f9de:	js     0x41fa0a
  41f9e0:	mov    eax,0x99e90c8c
  41f9e5:	mov    ds:0x37319c74,al
  41f9ea:	lock pop esp
  41f9ec:	in     eax,dx
  41f9ed:	mov    ds:0xec4c8f4b,al
  41f9f2:	sbb    cl,bh
  41f9f4:	sub    BYTE PTR [ebx],0x77
  41f9f7:	int    0x5d
  41f9f9:	mov    bl,0x18
  41f9fb:	cmc    
  41f9fc:	(bad)  
  41f9fd:	sbb    eax,DWORD PTR [eax-0x6a]
  41fa00:	lds    eax,FWORD PTR ds:0x3498d261
  41fa06:	call   0xc63d:0xf096f0a9
  41fa0d:	dec    esi
  41fa0e:	sbb    eax,0x49daea35
  41fa13:	sbb    dl,BYTE PTR [ebx-0x6c]
  41fa16:	lds    ecx,FWORD PTR [ebx-0x6e6c758]
  41fa1c:	mov    ah,0xee
  41fa1e:	call   0x6b8057f9
  41fa23:	sti    
  41fa24:	shl    ebx,1
  41fa26:	mov    edi,0x73425a11
  41fa2b:	in     eax,0xf
  41fa2d:	mov    cl,0xfc
  41fa2f:	bound  esi,QWORD PTR [esi]
  41fa31:	dec    edx
  41fa32:	cmp    ebx,DWORD PTR [ecx+0x57fef0e5]
  41fa38:	xor    BYTE PTR ds:[ecx+0x48],ah
  41fa3c:	loopne 0x41fab3
  41fa3e:	retf   
  41fa3f:	adc    ch,cl
  41fa41:	jp     0x41fa31
  41fa43:	xchg   esi,eax
  41fa44:	addr16 in eax,dx
  41fa46:	inc    eax
  41fa47:	pop    ebp
  41fa48:	jno    0x41fa78
  41fa4a:	push   ss
  41fa4b:	jne    0x41fa8f
  41fa4d:	push   ss
  41fa4e:	xchg   ebx,eax
  41fa4f:	(bad)  
  41fa50:	adc    ebp,ebp
  41fa52:	push   esp
  41fa53:	and    BYTE PTR [ebp+0x6bffcc04],0xd6
  41fa5a:	push   ebx
  41fa5b:	repnz (bad) 
  41fa5d:	jbe    0x41fad7
  41fa5f:	xchg   edx,eax
  41fa60:	jnp    0x41fac8
  41fa62:	int    0x1d
  41fa64:	push   cs
  41fa65:	lock test eax,0xf1336c0f
  41fa6b:	push   cs
  41fa6c:	and    edi,DWORD PTR [esi-0x2a]
  41fa6f:	xchg   DWORD PTR [ebp+0x187042a6],eax
  41fa75:	mov    ebp,0xf644ef90
  41fa7a:	jle    0x41fa8e
  41fa7c:	or     BYTE PTR [ebp-0x2],ah
  41fa7f:	push   es
  41fa80:	daa    
  41fa81:	sti    
  41fa82:	and    al,BYTE PTR [ecx]
  41fa84:	push   cs
  41fa85:	cmp    BYTE PTR [ebx+0x31],dh
  41fa88:	xor    al,0xee
  41fa8a:	fisttp DWORD PTR [eax+0x66]
  41fa8d:	inc    ebp
  41fa8e:	push   ebx
  41fa8f:	nop
  41fa90:	lods   al,BYTE PTR ds:[esi]
  41fa91:	mov    esp,0x3d03a6ef
  41fa96:	mov    al,dh
  41fa98:	adc    eax,ebx
  41fa9a:	in     eax,0x42
  41fa9c:	xor    eax,DWORD PTR [esi+0x49]
  41fa9f:	cld    
  41faa0:	and    ch,BYTE PTR [edi+0x2b]
  41faa3:	repz shl DWORD PTR [ecx+edi*8-0x59],cl
  41faa8:	cmp    edx,DWORD PTR [esi]
  41faaa:	push   0x7b
  41faac:	call   0x77228275
  41fab1:	xlat   BYTE PTR ds:[ebx]
  41fab2:	xchg   ecx,eax
  41fab3:	push   edx
  41fab4:	mov    DWORD PTR [ebp-0x2f3c8ce0],ecx
  41faba:	jecxz  0x41fab8
  41fabc:	(bad)  
  41fabd:	sbb    al,dl
  41fabf:	inc    eax
  41fac0:	popa   
  41fac1:	mov    eax,ds:0xae44837b
  41fac6:	retf   0x4945
  41fac9:	scas   al,BYTE PTR es:[edi]
  41faca:	or     ebx,edx
  41facc:	xchg   ecx,eax
  41face:	jns    0x41fa69
  41fad0:	cmp    cl,BYTE PTR [edi+0x378b5760]
  41fad6:	or     dl,cl
  41fad8:	mov    al,ds:0x7f5fd1b6
  41fadd:	and    eax,0x663a7e59
  41fae2:	sahf   
  41fae3:	popf   
  41fae4:	fadd   QWORD PTR [edx-0x37]
  41fae7:	add    al,ah
  41fae9:	es rcl cl,0x7
  41faed:	xor    ecx,ebx
  41faef:	sbb    esp,0x70
  41faf2:	in     al,dx
  41faf3:	pop    esp
  41faf4:	lock dec ebp
  41faf6:	xor    dl,BYTE PTR [eax]
  41faf8:	sbb    eax,0xb40119d2
  41fafd:	sar    BYTE PTR [edx+0x50a397fc],0xc7
  41fb04:	jmp    0x41fb0b
  41fb06:	stc    
  41fb07:	sbb    eax,0x53336b3
  41fb0c:	xor    BYTE PTR [ebx],dh
  41fb0e:	ret    0xfe8c
  41fb11:	scas   al,BYTE PTR es:[edi]
  41fb12:	fwait
  41fb13:	cmc    
  41fb14:	loope  0x41fb34
  41fb16:	or     eax,0xa9b493bb
  41fb1b:	fsubr  st,st(3)
  41fb1d:	out    0x91,eax
  41fb1f:	lods   eax,DWORD PTR ds:[esi]
  41fb20:	dec    esi
  41fb21:	inc    eax
  41fb22:	xchg   edx,eax
  41fb23:	int    0x3f
  41fb25:	mov    gs,WORD PTR [esi+0x2]
  41fb28:	jno    0x41fab0
  41fb2a:	jge    0x41fb06
  41fb2c:	mov    bl,0x47
  41fb2e:	aad    0x4a
  41fb30:	(bad)  
  41fb31:	push   edi
  41fb32:	addr16 hlt 
  41fb34:	xor    BYTE PTR [eax+ebp*2+0x23d2b132],0x55
  41fb3c:	sub    al,0x7d
  41fb3e:	jmp    0x41faff
  41fb40:	cmp    ch,dh
  41fb42:	out    dx,al
  41fb43:	(bad)  
  41fb44:	xor    eax,edi
  41fb46:	js     0x41fb24
  41fb48:	jnp    0x41fb1a
  41fb4a:	iret   
  41fb4b:	mov    ebx,0xb0198cd3
  41fb50:	ds xchg edx,eax
  41fb52:	xchg   esp,eax
  41fb53:	mov    dl,BYTE PTR [ebx+0x20]
  41fb56:	jmp    0xaecf4267
  41fb5b:	mov    bl,0xe3
  41fb5d:	lods   eax,DWORD PTR ds:[esi]
  41fb5e:	jp     0x41fb37
  41fb60:	imul   edi,DWORD PTR [ebx-0x168f92e],0x73
  41fb67:	hlt    
  41fb68:	dec    edx
  41fb69:	jae    0x41fbc3
  41fb6b:	jnp    0x41faff
  41fb6d:	stos   BYTE PTR es:[edi],al
  41fb6e:	sahf   
  41fb6f:	repnz pop ebx
  41fb71:	sbb    BYTE PTR [ecx+0xd024e86],bl
  41fb77:	stos   DWORD PTR es:[edi],eax
  41fb78:	fwait
  41fb79:	mov    edx,0x74ff80e0
  41fb7e:	mov    ecx,0xafc28c7a
  41fb83:	mov    esi,DWORD PTR [esi+0x27]
  41fb86:	les    ebp,FWORD PTR [ecx-0xc]
  41fb89:	sbb    DWORD PTR [ebx+0x51417cc7],ebx
  41fb8f:	mov    edx,0x54d890e3
  41fb94:	push   eax
  41fb95:	pop    ebx
  41fb96:	sub    ebx,ebp
  41fb98:	idiv   DWORD PTR [esi+0x4ea06572]
  41fb9e:	pop    ss
  41fb9f:	pop    ebx
  41fba0:	js     0x41fb3e
  41fba2:	rol    bl,cl
  41fba4:	scas   al,BYTE PTR es:[edi]
  41fba5:	retf   0xb4fc
  41fba8:	stos   DWORD PTR es:[edi],eax
  41fba9:	mov    eax,ds:0xece0dbac
  41fbae:	sahf   
  41fbaf:	mov    esi,0x9fb94223
  41fbb4:	cdq    
  41fbb5:	mov    dl,0xaf
  41fbb7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41fbb8:	and    edi,0xffffffb6
  41fbbb:	add    edi,ebx
  41fbbd:	xor    DWORD PTR [ebx-0x477b3f17],ebp
  41fbc3:	push   edx
  41fbc4:	cmp    eax,0xe40adf37
  41fbc9:	retf   0x6a04
  41fbcc:	repz add DWORD PTR [ebp+0x64dbc418],ebx
  41fbd3:	mul    BYTE PTR [eax+0x56297728]
  41fbd9:	mov    eax,0xc0b0cc36
  41fbde:	scas   eax,DWORD PTR es:[edi]
  41fbdf:	mov    eax,0xf0d89c3b
  41fbe4:	push   es
  41fbe5:	jmp    0x41fc4f
  41fbe7:	jge    0x41fb7d
  41fbe9:	mov    ebx,0x9b513e7e
  41fbee:	add    esi,DWORD PTR [ebp+0x16]
  41fbf1:	sub    al,0x9b
  41fbf3:	in     al,dx
  41fbf4:	pop    es
  41fbf5:	xor    cl,BYTE PTR [ecx+0x21038e20]
  41fbfb:	cmp    eax,0xbffc727a
  41fc00:	xchg   DWORD PTR [esi],edi
  41fc02:	dec    ebx
  41fc03:	outs   dx,BYTE PTR ds:[esi]
  41fc04:	repnz in al,dx
  41fc06:	sbb    esi,0xffffff82
  41fc09:	push   ecx
  41fc0a:	stos   BYTE PTR es:[edi],al
  41fc0b:	stos   DWORD PTR es:[edi],eax
  41fc0c:	push   eax
  41fc0d:	inc    ebx
  41fc0e:	inc    ebx
  41fc0f:	addr16 inc esi
  41fc11:	pop    ds
  41fc12:	icebp  
  41fc13:	cs mov ebp,0x3ee4d39b
  41fc19:	pop    edx
  41fc1a:	cmc    
  41fc1b:	rcr    BYTE PTR [ecx+0xc9db3ec],cl
  41fc21:	lods   al,BYTE PTR ds:[esi]
  41fc22:	xchg   esp,eax
  41fc23:	outs   dx,BYTE PTR ds:[esi]
  41fc24:	mov    ah,0x37
  41fc26:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41fc27:	adc    BYTE PTR [eax-0x1f],cl
  41fc2a:	mov    al,cl
  41fc2c:	cmp    ecx,DWORD PTR [esi-0x1c8c5bda]
  41fc32:	rcl    ebx,1
  41fc34:	(bad)  
  41fc35:	popf   
  41fc36:	inc    eax
  41fc37:	sub    DWORD PTR [esi+eiz*4-0x66],esi
  41fc3b:	sbb    eax,DWORD PTR [eax-0x4]
  41fc3e:	mov    ds:0xa1b386c3,eax
  41fc43:	add    cl,BYTE PTR [ecx+0x7]
  41fc46:	pop    ss
  41fc47:	xor    ebx,esi
  41fc49:	push   ecx
  41fc4a:	push   ecx
  41fc4b:	mul    DWORD PTR [ebx+0x6e413004]
  41fc51:	cwde   
  41fc52:	pop    edx
  41fc53:	push   esi
  41fc54:	sub    al,0xa4
  41fc56:	in     eax,dx
  41fc57:	mov    ebp,0xff7c6fc4
  41fc5c:	data16 test BYTE PTR [edi+eiz*2-0x26a692cd],bl
  41fc64:	in     eax,dx
  41fc65:	(bad)  [edx]
  41fc67:	(bad)  
  41fc68:	sbb    al,0x4a
  41fc6a:	push   0xb9bb1ec9
  41fc6f:	jecxz  0x41fc2b
  41fc71:	fdiv   st,st(4)
  41fc73:	adc    eax,0x4eff813a
  41fc78:	pop    ecx
  41fc79:	jb     0x41fc91
  41fc7b:	push   ds
  41fc7c:	mov    edi,DWORD PTR [ecx]
  41fc7e:	push   ebx
  41fc7f:	pop    ebp
  41fc80:	sbb    BYTE PTR [edi-0x45],cl
  41fc83:	rcr    bl,1
  41fc85:	sub    BYTE PTR [eax+0x58cc7693],bh
  41fc8b:	out    dx,eax
  41fc8c:	aad    0xc4
  41fc8e:	clc    
  41fc8f:	lea    edx,[edi]
  41fc91:	pop    ds
  41fc92:	(bad)  [edx]
  41fc94:	mov    ebp,0x7eb2ca39
  41fc99:	mov    ah,0x60
  41fc9b:	sub    BYTE PTR [ebp+0x63],bl
  41fc9e:	sahf   
  41fc9f:	sub    BYTE PTR [ebp+eax*8+0x472195],dh
  41fca6:	hlt    
  41fca7:	mov    ebx,0xfe392e19
  41fcac:	imul   ecx,DWORD PTR [ebp+0x3b0dda66],0xc7ce09ec
  41fcb6:	les    edx,FWORD PTR [ebx+0x7f]
  41fcb9:	rol    BYTE PTR [ebp+0x3414bef7],cl
  41fcbf:	push   esi
  41fcc0:	fs or  al,0x68
  41fcc3:	or     DWORD PTR [edx],ebp
  41fcc5:	into   
  41fcc6:	push   0x4d7edeff
  41fccb:	xor    cl,BYTE PTR [ebp-0x7c12fd80]
  41fcd1:	pop    ebp
  41fcd2:	or     ah,BYTE PTR [ebx+esi*2-0x653dd3d]
  41fcd9:	and    DWORD PTR [eax],ebp
  41fcdb:	(bad)  
  41fcdc:	gs push esp
  41fcde:	in     eax,dx
  41fcdf:	mov    ebx,0x5cc55b28
  41fce4:	push   0x145bddd5
  41fce9:	xor    BYTE PTR [ecx-0x42],ch
  41fcec:	dec    ebx
  41fced:	rcl    DWORD PTR [ecx],0x3
  41fcf0:	push   edi
  41fcf1:	sbb    DWORD PTR ds:0xc0ff79e0,ecx
  41fcf7:	push   edx
  41fcf8:	test   al,0x97
  41fcfa:	lods   eax,DWORD PTR ds:[esi]
  41fcfb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41fcfc:	in     eax,0xa3
  41fcfe:	jb     0x41fd24
  41fd00:	das    
  41fd01:	jo     0x41fcd3
  41fd03:	(bad)  
  41fd04:	adc    ah,BYTE PTR [eax-0x6f]
  41fd07:	or     ebx,DWORD PTR [edx-0x80]
  41fd0a:	imul   ch
  41fd0c:	cmp    BYTE PTR [ecx],dh
  41fd0e:	ret    0xe91
  41fd11:	(bad)  
  41fd12:	(bad)  
  41fd13:	mov    bl,0xec
  41fd15:	jno    0x41fd7b
  41fd17:	mov    dh,BYTE PTR [edi]
  41fd19:	std    
  41fd1a:	sub    al,0x2d
  41fd1c:	cld    
  41fd1d:	(bad)  
  41fd1f:	jge    0x41fcf3
  41fd21:	ins    BYTE PTR es:[edi],dx
  41fd22:	stos   DWORD PTR es:[edi],eax
  41fd23:	fldcw  WORD PTR [edi-0x2]
  41fd26:	mov    ds:0xa7cde895,eax
  41fd2b:	mov    ebx,0x705ab460
  41fd30:	lds    esp,FWORD PTR [edx-0x38faa1f3]
  41fd36:	mov    cl,0xa5
  41fd38:	pop    ecx
  41fd39:	outs   dx,BYTE PTR ds:[esi]
  41fd3a:	fcom   DWORD PTR [edx+0x14150032]
  41fd40:	pushf  
  41fd41:	fdiv   DWORD PTR cs:[ecx]
  41fd44:	mov    cl,0xc1
  41fd46:	test   BYTE PTR [ebp+0x2e],0x8
  41fd4a:	sub    DWORD PTR [esi],eax
  41fd4c:	jp     0x41fd0c
  41fd4e:	bound  esp,QWORD PTR [edx+0x77593fee]
  41fd54:	ja     0x41fd10
  41fd56:	jmp    0x40421919
  41fd5b:	pop    ds
  41fd5c:	inc    edi
  41fd5d:	or     DWORD PTR [edi],eax
  41fd5f:	dec    ebp
  41fd60:	jno    0x41fdc2
  41fd62:	loope  0x41fd7a
  41fd64:	dec    eax
  41fd65:	xor    BYTE PTR [edi-0x31],dh
  41fd68:	out    dx,al
  41fd69:	inc    ecx
  41fd6a:	test   DWORD PTR [ebp+esi*1+0x56],edi
  41fd6e:	or     dl,BYTE PTR [edi]
  41fd70:	and    bh,dh
  41fd72:	mov    cl,0xc5
  41fd74:	into   
  41fd75:	loopne 0x41fdca
  41fd77:	xchg   edi,eax
  41fd78:	ret    0x272
  41fd7b:	add    ah,BYTE PTR [ecx+0x74]
  41fd7e:	sbb    BYTE PTR [eax-0x73e3a9db],ch
  41fd84:	cmp    cl,BYTE PTR [edx+0x2d]
  41fd87:	push   ecx
  41fd88:	shr    DWORD PTR [ecx+0x2],cl
  41fd8b:	pop    es
  41fd8c:	cmp    al,0x1b
  41fd8e:	xor    DWORD PTR [ebx],0xffffffa3
  41fd91:	neg    BYTE PTR [esi-0x4e]
  41fd94:	fsubr  st(1),st
  41fd96:	fstp   DWORD PTR ds:0x8bfcac7f
  41fd9c:	cmp    eax,0x36906be0
  41fda1:	xchg   edi,eax
  41fda2:	cld    
  41fda3:	jb     0x41fe12
  41fda5:	mov    DWORD PTR [ecx+0x65],ecx
  41fda8:	inc    esp
  41fda9:	mov    edi,eax
  41fdab:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41fdac:	pop    ecx
  41fdad:	dec    ecx
  41fdae:	xor    bl,BYTE PTR [edi]
  41fdb0:	mov    ds:0xb9a434f5,al
  41fdb5:	in     al,dx
  41fdb6:	adc    DWORD PTR [edi+0x389a8d0e],eax
  41fdbc:	retf   
  41fdbd:	inc    edx
  41fdbe:	mov    al,ds:0x557a661a
  41fdc3:	fnstenv [edi+edx*4]
  41fdc6:	or     bh,cl
  41fdc8:	fbstp  TBYTE PTR es:[ebx]
  41fdcb:	inc    edx
  41fdcc:	addr16 add al,0xb3
  41fdcf:	push   ecx
  41fdd0:	aas    
  41fdd1:	xchg   edx,eax
  41fdd2:	mov    esi,0x9a953b1d
  41fdd7:	add    BYTE PTR [ebx],ch
  41fdd9:	fidiv  DWORD PTR [ecx+0x370ce968]
  41fddf:	shl    BYTE PTR [edi+eax*4-0x55],0x97
  41fde4:	mov    ds:0x984da947,al
  41fde9:	jecxz  0x41fe39
  41fdeb:	push   ss
  41fdec:	repnz popf 
  41fdee:	mov    edi,0x87320a31
  41fdf3:	and    ebx,DWORD PTR [esp+edx*4+0x6b6c2500]
  41fdfa:	mov    ss,WORD PTR [edx]
  41fdfc:	xchg   esp,eax
  41fdfd:	dec    edi
  41fdfe:	retf   0x50e4
  41fe01:	sub    BYTE PTR [edx],dl
  41fe03:	jo     0x41fe0a
  41fe05:	rcr    DWORD PTR [ecx-0x47],0x5e
  41fe09:	sbb    ecx,DWORD PTR [edi+0x1d]
  41fe0c:	or     eax,0xb45e921a
  41fe11:	mov    WORD PTR [ebx+edx*2+0x3fb77219],?
  41fe18:	xor    cl,BYTE PTR [eax+0x51]
  41fe1b:	jnp    0x41fdaf
  41fe1d:	int    0xc8
  41fe1f:	fisttp WORD PTR [ebx+0x74412828]
  41fe25:	or     DWORD PTR [edi],0x3632cdb2
  41fe2b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41fe2c:	(bad)  
  41fe2d:	(bad)  
  41fe2f:	out    0x5e,eax
  41fe31:	add    eax,0x94262373
  41fe36:	test   BYTE PTR [edx-0x44],0x69
  41fe3a:	ins    BYTE PTR es:[edi],dx
  41fe3b:	fwait
  41fe3c:	aaa    
  41fe3d:	push   eax
  41fe3e:	inc    ebx
  41fe3f:	inc    ebx
  41fe40:	jl     0x41fe69
  41fe42:	not    DWORD PTR [eax+esi*1+0x46]
  41fe46:	jl     0x41fdde
  41fe48:	adc    eax,0xd4ce891e
  41fe4d:	fidiv  DWORD PTR [ecx+edi*8+0x21]
  41fe51:	in     al,0x67
  41fe53:	and    BYTE PTR [eax+0x1b],ah
  41fe56:	dec    edi
  41fe57:	xchg   edi,ebx
  41fe59:	aas    
  41fe5a:	cwde   
  41fe5b:	ret    
  41fe5c:	lods   eax,DWORD PTR ds:[esi]
  41fe5d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41fe5e:	adc    al,0xe3
  41fe60:	ret    0xa05d
  41fe63:	int    0x3c
  41fe65:	mov    bh,0x8b
  41fe67:	push   ecx
  41fe68:	imul   esi,DWORD PTR [edx],0x30
  41fe6b:	or     eax,0xf7403688
  41fe70:	lock outs dx,BYTE PTR fs:[esi]
  41fe73:	cmp    al,0x7
  41fe75:	scas   eax,DWORD PTR es:[edi]
  41fe76:	xor    ecx,DWORD PTR [ecx+0x2d698e5]
  41fe7c:	sbb    DWORD PTR [edi],ebp
  41fe7e:	pusha  
  41fe7f:	fdivrp st(0),st
  41fe81:	pop    ds
  41fe82:	fisubr DWORD PTR [ecx]
  41fe84:	push   ss
  41fe85:	push   es
  41fe86:	lea    ebp,[edx]
  41fe88:	mov    ecx,0xe0d689a6
  41fe8d:	pop    ds
  41fe8e:	dec    ebx
  41fe8f:	inc    edi
  41fe90:	fwait
  41fe91:	and    eax,DWORD PTR [edi-0x42e148f3]
  41fe97:	xor    DWORD PTR [esi+0x66],edx
  41fe9a:	loop   0x41fe40
  41fe9c:	aam    0x1d
  41fe9e:	cmp    al,0xf2
  41fea0:	into   
  41fea1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41fea2:	or     DWORD PTR [edx],ebx
  41fea4:	cmp    esp,DWORD PTR [ecx+0xb5fc579]
  41feaa:	ins    BYTE PTR es:[edi],dx
  41feab:	mov    ebx,0xfcc17968
  41feb0:	push   esi
  41feb1:	test   BYTE PTR [esp+ebp*8-0x18],ch
  41feb5:	sahf   
  41feb6:	pop    ecx
  41feb7:	mov    al,0x75
  41feb9:	in     eax,0x62
  41febb:	fdiv   st,st(5)
  41febd:	imul   edi,DWORD PTR ds:0xab7d91d5,0xffffffd2
  41fec4:	fdivp  st(6),st
  41fec6:	mov    WORD PTR [edx],ds
  41fec8:	pop    ebp
  41fec9:	jne    0x41fe5a
  41fecb:	jle    0x41ff06
  41fecd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41fece:	lds    esp,FWORD PTR [ecx+edi*1]
  41fed1:	imul   ecx,DWORD PTR [ecx],0x18
  41fed4:	sbb    ah,BYTE PTR [ebx-0x7b201038]
  41feda:	mov    ds:0x1e7fdd22,al
  41fedf:	push   eax
  41fee0:	and    BYTE PTR [ecx-0x505b1174],dl
  41fee6:	test   eax,esp
  41fee8:	cs cwde 
  41feea:	dec    ebp
  41feeb:	ins    BYTE PTR es:[edi],dx
  41feec:	add    eax,0xcb33934e
  41fef1:	mov    ds:0x53459a35,al
  41fef7:	lds    eax,FWORD PTR [ecx+0x2283e218]
  41fefd:	shl    BYTE PTR [ebp-0x15],0x47
  41ff01:	cmp    eax,0x66b547e8
  41ff06:	mov    edx,0x7c8ddb1d
  41ff0b:	mov    ds:0x1b906240,al
  41ff10:	into   
  41ff11:	lds    esp,FWORD PTR [ebp+0x5239a856]
  41ff17:	and    al,0x54
  41ff19:	adc    dh,BYTE PTR [edx]
  41ff1b:	and    bh,cl
  41ff1d:	mov    ah,BYTE PTR ds:0xf789305
  41ff23:	cmp    DWORD PTR [eax-0x51],0xf9e5786b
  41ff2a:	enter  0x54d,0xf
  41ff2e:	sub    al,0xa3
  41ff30:	push   eax
  41ff31:	xlat   BYTE PTR ds:[ebx]
  41ff32:	sbb    eax,0xa855fe3d
  41ff37:	mov    esi,0xffa66cf9
  41ff3c:	repz jmp 0xd9626a74
  41ff42:	jns    0x41fef1
  41ff44:	sub    DWORD PTR [edx-0x6e],edi
  41ff47:	and    DWORD PTR [ebp+0x4ca5c8a7],edi
  41ff4d:	push   ebp
  41ff4e:	or     esp,DWORD PTR [edi-0x7309a923]
  41ff54:	sahf   
  41ff55:	shl    DWORD PTR [edx-0x20],1
  41ff58:	and    BYTE PTR [edx],0x8
  41ff5b:	xlat   BYTE PTR ds:[ebx]
  41ff5c:	inc    BYTE PTR [ebx]
  41ff5e:	jmp    0x99c7:0x196af7ed
  41ff65:	arpl   WORD PTR [ecx+0x4e],sp
  41ff68:	push   cs
  41ff69:	cmp    eax,0xefac21ed
  41ff6e:	sub    DWORD PTR [esi],0x35e53ede
  41ff74:	mov    dl,bh
  41ff76:	jp     0x41ff9b
  41ff78:	fadd   QWORD PTR [ecx-0x17]
  41ff7b:	mov    edi,0xcbfe58b8
  41ff80:	sbb    BYTE PTR ds:0x361e75dd,0xc8
  41ff87:	fwait
  41ff88:	into   
  41ff89:	xor    ebp,esi
  41ff8b:	repz gs add al,0x89
  41ff8f:	jno    0x41ff97
  41ff91:	cwde   
  41ff92:	icebp  
  41ff93:	sbb    al,0xc7
  41ff95:	pop    ds
  41ff96:	fucomi st,st(4)
  41ff98:	push   eax
  41ff99:	stos   DWORD PTR es:[edi],eax
  41ff9a:	push   ds
  41ff9b:	add    dh,BYTE PTR [edi+0x75]
  41ff9e:	xor    edi,DWORD PTR ds:0xd5820d1
  41ffa4:	and    ebp,esi
  41ffa6:	add    esi,DWORD PTR [esi-0x189eb06e]
  41ffac:	fmulp  st(3),st
  41ffae:	jo     0x41ffb7
  41ffb0:	shl    BYTE PTR [esp+eiz*8+0x21],cl
  41ffb4:	ins    BYTE PTR es:[edi],dx
  41ffb5:	xchg   esi,eax
  41ffb6:	div    BYTE PTR [eax-0x27c2c908]
  41ffbc:	iret   
  41ffbd:	arpl   ax,di
  41ffbf:	inc    ebx
  41ffc0:	cwde   
  41ffc1:	dec    esi
  41ffc2:	nop
  41ffc3:	icebp  
  41ffc4:	dec    ebx
  41ffc5:	mov    esp,0xaa1e2d41
  41ffca:	scas   eax,DWORD PTR es:[edi]
  41ffcb:	rcr    DWORD PTR [ecx+0x67040570],0xb8
  41ffd2:	push   ss
  41ffd3:	pop    ecx
  41ffd4:	mov    ecx,0xff5f4c76
  41ffd9:	pushf  
  41ffda:	lods   al,BYTE PTR ds:[esi]
  41ffdb:	out    0xc7,eax
  41ffdd:	repnz int3 
  41ffdf:	xchg   esi,eax
  41ffe0:	in     al,0xb0
  41ffe2:	mov    ebp,0x25d9c641
  41ffe7:	mov    esi,DWORD PTR [ecx-0x7110faa6]
  41ffed:	rol    BYTE PTR ds:0xd1e1e904,0xcf
  41fff4:	dec    esp
  41fff5:	ss data16 shl ch,cl
  41fff9:	cmc    
  41fffa:	hlt    
  41fffb:	(bad)  
  41fffc:	retf   0xbc86
  41ffff:	sub    BYTE PTR [ecx+0x279163cc],bh
  420005:	pop    edx
  420006:	out    dx,al
  420007:	aad    0x6
  420009:	lock into 
  42000b:	push   esi
  42000d:	fs ds stc 
  420010:	mov    bh,0xef
  420012:	sub    eax,0x28704f58
  420017:	add    BYTE PTR [ebx+ebx*1-0x45],ah
  42001b:	sub    eax,0xfe260969
  420020:	leave  
  420021:	aam    0x61
  420023:	iret   
  420024:	les    ebp,FWORD PTR [ebx+0x75]
  420027:	stc    
  420028:	mov    bl,0xb6
  42002a:	jno    0x420048
  42002c:	out    dx,eax
  42002d:	sub    eax,0x6ff073c6
  420032:	add    ch,BYTE PTR [ebp+0x2666d33b]
  420038:	test   eax,0x47268fe0
  42003d:	add    bl,cl
  42003f:	lods   al,BYTE PTR ds:[esi]
  420040:	dec    ecx
  420041:	lods   al,BYTE PTR ds:[esi]
  420042:	xchg   ebp,ecx
  420044:	cld    
  420045:	out    dx,al
  420046:	leave  
  420047:	ss xchg esp,eax
  420049:	and    BYTE PTR [edi-0x11],bl
  42004c:	fistp  DWORD PTR [esi+0x363a3512]
  420052:	out    dx,al
  420053:	jne    0x4200cb
  420055:	add    esi,DWORD PTR [ebx-0x18]
  420058:	jno    0x420065
  42005a:	(bad)  
  42005c:	sar    BYTE PTR [eax],cl
  42005e:	pop    DWORD PTR ds:0xc5d63554
  420064:	shr    DWORD PTR [edi+0x4e],1
  420067:	jecxz  0x42007b
  420069:	inc    ebp
  42006a:	xchg   edx,eax
  42006b:	cmp    al,0x42
  42006d:	test   BYTE PTR [edi-0x189df036],ah
  420073:	sahf   
  420074:	(bad)  
  420075:	dec    ebx
  420076:	fidiv  WORD PTR [ebx-0x54cf9611]
  42007c:	lods   eax,DWORD PTR ds:[esi]
  42007d:	mov    ebx,0x9dbb6dee
  420082:	inc    ebp
  420083:	shl    DWORD PTR [ebx],0x8a
  420086:	push   es
  420087:	shr    DWORD PTR [ebx],1
  420089:	hlt    
  42008a:	mov    eax,DWORD PTR [edi+0x48ab202e]
  420090:	or     ch,BYTE PTR [eax-0x189f487d]
  420096:	repnz popa 
  420098:	sbb    ebp,esi
  42009a:	mov    ah,0x44
  42009c:	jle    0x420063
  42009e:	jne    0x4200f7
  4200a0:	outs   dx,DWORD PTR ds:[esi]
  4200a1:	dec    eax
  4200a2:	add    al,0x44
  4200a4:	(bad)  
  4200a5:	inc    esp
  4200a6:	rcr    DWORD PTR [eax],cl
  4200a8:	js     0x420099
  4200aa:	mov    ah,0xac
  4200ac:	push   ecx
  4200ad:	neg    DWORD PTR [ebp+0x5c]
  4200b0:	xchg   edx,eax
  4200b1:	lds    ecx,FWORD PTR [bp+di]
  4200b4:	push   0x1b4701de
  4200b9:	enter  0xeb71,0x61
  4200bd:	test   dl,dh
  4200bf:	push   cs
  4200c0:	retf   0x122b
  4200c3:	arpl   WORD PTR [esi+0x38bb6a8],dx
  4200c9:	xor    eax,0xf4942f2d
  4200ce:	cmp    al,BYTE PTR [edi]
  4200d0:	cmp    BYTE PTR [esp+ebp*4-0x373e41d2],0xc3
  4200d8:	retf   
  4200d9:	jle    0x420062
  4200db:	sbb    edx,DWORD PTR [edx]
  4200dd:	lods   eax,DWORD PTR ds:[esi]
  4200de:	sbb    al,0x1d
  4200e0:	mov    ds,WORD PTR [ebx+0x3624da8e]
  4200e6:	sbb    al,0x3d
  4200e8:	out    dx,eax
  4200e9:	sub    ch,ah
  4200eb:	fiadd  DWORD PTR ss:[edi]
  4200ee:	jle    0x42009a
  4200f0:	mov    eax,0x1a9be5d3
  4200f6:	jl     0x42012d
  4200f8:	retf   0xdccf
  4200fb:	push   es
  4200fc:	push   ebp
  4200fd:	add    al,0x7d
  4200ff:	nop
  420100:	jbe    0x42013e
  420102:	push   esi
  420103:	fistp  QWORD PTR [edx+0x5e]
  420106:	pop    ds
  420107:	mov    edx,0xb0433540
  42010c:	cmc    
  42010d:	test   al,0xe3
  42010f:	mov    esi,DWORD PTR [esi]
  420111:	ret    0xd3cd
  420114:	sub    BYTE PTR [ebp-0x7088b30e],dh
  42011a:	or     DWORD PTR [ebx+0xb786ed4],0x8729af50
  420124:	xor    eax,0xaa9baec6
  420129:	mov    ebp,cs
  42012b:	mov    ds,WORD PTR [edi+0x1aa052f3]
  420131:	and    al,0x67
  420133:	push   DWORD PTR [ecx]
  420135:	enter  0xab3c,0xda
  420139:	adc    eax,0x3ad1d150
  42013e:	call   DWORD PTR [eax+edx*2-0x10]
  420142:	and    esp,DWORD PTR [esi-0x7acd744e]
  420148:	mov    BYTE PTR [ecx-0x1e],0x56
  42014c:	stc    
  42014d:	push   edi
  42014e:	ins    DWORD PTR es:[edi],dx
  42014f:	mov    ah,0xfe
  420151:	int    0xa8
  420153:	fild   QWORD PTR [ecx+0x16]
  420156:	out    dx,eax
  420157:	ins    DWORD PTR es:[edi],dx
  420158:	fnsave [ebx-0xabb960d]
  42015e:	inc    edx
  42015f:	mov    bl,0x20
  420161:	ss mov edi,0x8c798f63
  420167:	jmp    0x91ca:0xc3be677e
  42016e:	and    BYTE PTR [ecx+0x68],bl
  420171:	fstp   DWORD PTR [eax-0x48]
  420174:	mov    al,ds:0xfd1c9bc5
  420179:	xchg   ecx,eax
  42017a:	in     eax,0x4e
  42017c:	arpl   sp,si
  42017e:	nop
  42017f:	out    0x95,al
  420181:	push   eax
  420182:	xchg   edx,eax
  420183:	(bad)  
  420184:	push   ss
  420185:	fstp   st(7)
  420187:	or     DWORD PTR [ebx-0x25d5b542],0x8ca13fc
  420191:	or     edi,ecx
  420193:	xor    ebp,DWORD PTR [esi-0x62f2dbb4]
  420199:	sti    
  42019a:	pop    esp
  42019b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42019c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42019d:	jo     0x420177
  42019f:	aam    0x3
  4201a1:	xchg   esp,eax
  4201a2:	dec    ebp
  4201a3:	mov    ebp,0xce6c60c1
  4201a8:	pop    eax
  4201a9:	jmp    0x2f5:0x3353d1e0
  4201b0:	dec    esp
  4201b1:	cmp    bl,cl
  4201b3:	jmp    0x17c:0x940df4b7
  4201ba:	cmp    al,0x3a
  4201bc:	(bad)  
  4201bd:	cmp    al,0xd0
  4201bf:	cs cwde 
  4201c1:	aas    
  4201c2:	stc    
  4201c3:	lock lea edi,gs:[ecx+edi*8]
  4201c8:	test   DWORD PTR [edx+0x2d452e6c],ebx
  4201ce:	in     al,dx
  4201cf:	stos   DWORD PTR es:[edi],eax
  4201d0:	popf   
  4201d1:	pop    edx
  4201d2:	ss jmp 0x243ba33c
  4201d8:	pop    ecx
  4201d9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4201da:	repnz stc 
  4201dc:	adc    eax,0xd3ca05b7
  4201e1:	es mov eax,ss
  4201e4:	cmp    eax,0x8de4bab
  4201e9:	pop    ss
  4201ea:	push   0xffffffb7
  4201ec:	xor    bh,BYTE PTR [esi-0x51]
  4201ef:	ins    DWORD PTR es:[edi],dx
  4201f0:	test   eax,0x59a2bae9
  4201f5:	mov    DWORD PTR [ecx+0x32cdc857],edx
  4201fb:	(bad)  
  4201fd:	adc    BYTE PTR [ecx-0x4a],al
  420200:	fwait
  420201:	sub    ah,dh
  420203:	xor    al,0x45
  420205:	cmp    ecx,edx
  420207:	and    ah,cl
  420209:	jae    0x420207
  42020b:	enter  0x2969,0xe5
  42020f:	sbb    DWORD PTR gs:[ecx+ebp*2],esi
  420213:	mov    eax,0x1016706c
  420218:	add    al,0x62
  42021a:	dec    edi
  42021b:	cmp    al,al
  42021d:	(bad)  
  42021e:	(bad)  
  42021f:	sbb    DWORD PTR es:[edi],0xffffffad
  420223:	fsub   DWORD PTR [edx]
  420225:	push   esi
  420226:	mov    ebp,0xa9072aea
  42022b:	call   0xc4d172b
  420230:	jg     0x420290
  420232:	div    DWORD PTR [ecx+0x2c6412dd]
  420238:	(bad)  
  420239:	gs jecxz 0x4201db
  42023c:	aam    0x2b
  42023e:	popf   
  42023f:	jns    0x4202a9
  420241:	ror    al,1
  420243:	and    BYTE PTR [esi+0x46],dl
  420246:	mov    dh,0x64
  420248:	push   0x6d95c05d
  42024d:	push   ebp
  42024e:	jns    0x420252
  420250:	scas   al,BYTE PTR es:[edi]
  420251:	inc    esi
  420252:	mov    ebp,0x223432f7
  420257:	(bad)
  42025a:	jbe    0x4202cc
  42025c:	sbb    BYTE PTR [ebp-0x18c7be4a],0x99
  420263:	fsub   st,st(4)
  420265:	cmp    BYTE PTR [edx-0x127b99e5],bh
  42026b:	cmp    bl,BYTE PTR [esi+ebx*1-0x1d9c053f]
  420272:	mov    ds:0x39c48350,al
  420277:	ja     0x42029b
  420279:	int3   
  42027a:	jbe    0x420256
  42027c:	cs mov dh,0xca
  42027f:	mov    esp,0x9d8bb508
  420284:	shl    DWORD PTR [edi-0x49],cl
  420287:	xor    ah,BYTE PTR [ebx+edi*4-0x21]
  42028b:	call   0xe0996965
  420290:	jmp    0x1f9cdbae
  420295:	popa   
  420296:	jecxz  0x42025e
  420298:	imul   eax,DWORD PTR [edx-0x19],0x46
  42029c:	add    esi,DWORD PTR [esi+0x34]
  42029f:	in     eax,0x24
  4202a1:	fist   DWORD PTR [ecx]
  4202a3:	inc    edi
  4202a4:	jl     0x420236
  4202a6:	push   esi
  4202a7:	(bad)  
  4202a9:	jecxz  0x4202ed
  4202ab:	jge    0x42024a
  4202ad:	aaa    
  4202ae:	inc    ebp
  4202af:	push   edi
  4202b0:	add    DWORD PTR [esi-0x12478d64],edx
  4202b6:	inc    esp
  4202b7:	lahf   
  4202b8:	inc    edi
  4202b9:	fimul  DWORD PTR [edx+0x2f]
  4202bc:	cmp    DWORD PTR ds:0xc0342113,esi
  4202c2:	mov    ch,0x38
  4202c4:	ins    DWORD PTR es:[edi],dx
  4202c5:	dec    esi
  4202c6:	jmp    0x5553:0xb9f03f21
  4202cd:	dec    ebx
  4202ce:	jmp    0x906fb9de
  4202d3:	add    eax,0x7d9205bd
  4202d8:	mov    ?,WORD PTR [esi]
  4202da:	dec    ecx
  4202db:	dec    edi
  4202dc:	xor    BYTE PTR [eax+0x44],bl
  4202df:	aas    
  4202e0:	jns    0x420288
  4202e2:	add    ah,BYTE PTR [esi+0x5c11d85]
  4202e8:	cmp    DWORD PTR es:[eax],esp
  4202eb:	jb     0x4202a3
  4202ed:	mov    al,ds:0x6f0e5807
  4202f2:	add    BYTE PTR [ebx-0x2e],cl
  4202f5:	sub    ch,BYTE PTR [edi]
  4202f7:	inc    edx
  4202f8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4202f9:	sub    BYTE PTR [edx-0x2e7ff0d0],bh
  4202ff:	std    
  420300:	(bad)  [ecx]
  420302:	and    ebp,esp
  420304:	in     al,0xe5
  420306:	leave  
  420307:	xor    ch,BYTE PTR [esi+0x7cbe5cf9]
  42030d:	ja     0x42032d
  42030f:	mov    ds,WORD PTR [esp+edx*8+0x366b124f]
  420316:	mov    dh,0xa6
  420318:	sbb    BYTE PTR [edx],ch
  42031a:	sub    bl,BYTE PTR [ebx]
  42031c:	das    
  42031d:	cmp    bl,BYTE PTR [edi+0x43]
  420320:	jp     0x42032b
  420322:	xor    DWORD PTR [edx],eax
  420324:	aas    
  420325:	jp     0x4202c1
  420327:	cld    
  420328:	in     al,0x30
  42032a:	bound  edx,QWORD PTR [esi+0x10bec139]
  420330:	mov    dh,0xcb
  420332:	add    eax,0x50b4865e
  420337:	jl     0x4202c7
  420339:	add    BYTE PTR [edx-0x27b8bf45],cl
  42033f:	scas   al,BYTE PTR es:[edi]
  420340:	or     eax,0xbb101092
  420345:	mov    bl,BYTE PTR [ebx+0x5a]
  420348:	mov    DWORD PTR [esi],edx
  42034a:	nop
  42034b:	push   ss
  42034c:	add    al,0x38
  42034e:	ins    BYTE PTR es:[edi],dx
  42034f:	and    bl,bh
  420351:	mov    al,ds:0x64c3577e
  420356:	rol    BYTE PTR [esp+ebp*2],0xf3
  42035a:	sub    edi,DWORD PTR ds:0xdb0a980f
  420360:	rol    DWORD PTR [edi-0x64],0x6d
  420364:	test   eax,edx
  420366:	mov    ds:0xdcaa775c,al
  42036b:	jmp    0x4203e0
  42036d:	cld    
  42036e:	xchg   ebx,eax
  42036f:	pop    esi
  420370:	test   eax,0x902940cc
  420375:	mov    dh,0xc3
  420377:	ja     0x420332
  420379:	mov    dl,0x69
  42037b:	xchg   BYTE PTR [esi+0x1],cl
  42037e:	add    esi,DWORD PTR ds:0xe5702407
  420384:	jmp    0x42033c
  420386:	push   0xf28a312f
  42038b:	sub    BYTE PTR [edi-0x3e670b1e],bh
  420391:	dec    edi
  420392:	mov    cs,WORD PTR [ebx+edx*8]
  420395:	fadd   st,st(5)
  420397:	adc    cl,BYTE PTR [ecx]
  420399:	loopne 0x42034f
  42039b:	or     DWORD PTR [ecx+0x34],ecx
  42039e:	jo     0x420338
  4203a0:	pop    esp
  4203a1:	es enter 0x8a46,0x9d
  4203a6:	xor    edi,DWORD PTR [ecx-0x32]
  4203a9:	or     DWORD PTR [eax],ebx
  4203ab:	hlt    
  4203ac:	ficom  DWORD PTR [ebp+0x6d]
  4203af:	loop   0x4203d4
  4203b1:	dec    esi
  4203b2:	jbe    0x420404
  4203b4:	jmp    0x4203b4
  4203b6:	adc    ah,bl
  4203b8:	out    0x3e,al
  4203ba:	lea    esi,[ebx+ebp*8-0x43]
  4203be:	mov    BYTE PTR [ecx-0x43887804],cl
  4203c4:	sbb    cl,BYTE PTR [ebp+0x51]
  4203c7:	outs   dx,DWORD PTR ds:[esi]
  4203c8:	mov    DWORD PTR [esi+0x2],edi
  4203cb:	jecxz  0x4203ab
  4203cd:	jmp    0x420372
  4203cf:	inc    ecx
  4203d0:	and    DWORD PTR [ebx-0x7a],0xffffffad
  4203d4:	int    0x2d
  4203d6:	or     BYTE PTR [ecx+edx*1],bl
  4203d9:	mov    al,ds:0x9ddf8a2
  4203de:	mov    al,ds:0x59d4cca
  4203e3:	pop    eax
  4203e4:	mov    ecx,0x92712f01
  4203ea:	jae    0x42040b
  4203ec:	cs push ss
  4203ee:	in     al,0x4
  4203f0:	out    0x25,eax
  4203f2:	push   ds
  4203f3:	mov    edx,0x93c482d6
  4203f8:	sbb    ah,BYTE PTR [ebx]
  4203fa:	push   ebx
  4203fb:	sub    al,0x7d
  4203fd:	sbb    DWORD PTR [edi],esp
  4203ff:	adc    eax,0x69fbfa8c
  420404:	or     edx,ecx
  420406:	out    dx,al
  420407:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420408:	test   dh,bh
  42040a:	sub    edx,edx
  42040c:	and    BYTE PTR [ebx],dl
  42040e:	sub    BYTE PTR [edi-0x34],0x54
  420412:	add    BYTE PTR [esi+eiz*4],dl
  420415:	mov    DWORD PTR [ecx],ebp
  420417:	lods   al,BYTE PTR ds:[esi]
  420418:	mov    ebx,0x4ad2441f
  42041d:	test   al,0x98
  42041f:	jb     0x4203a4
  420421:	or     eax,0x7762d734
  420426:	scas   eax,DWORD PTR es:[edi]
  420427:	push   ebx
  420428:	jbe    0x4203fb
  42042a:	push   edi
  42042b:	mov    ch,0xcb
  42042d:	retf   
  42042e:	ds ja  0x420444
  420431:	sub    eax,0x40f4b1f0
  420436:	hlt    
  420437:	div    bh
  420439:	sbb    DWORD PTR [edi+edx*1],edi
  42043c:	repz push edi
  42043e:	shl    DWORD PTR [eax+0x1788bf35],1
  420444:	test   DWORD PTR [ecx+esi*8-0x634c1e5d],edi
  42044b:	loopne 0x4203f7
  42044d:	inc    ebp
  42044e:	arpl   si,di
  420450:	sub    esp,ebp
  420452:	mov    dh,0xb1
  420454:	push   eax
  420455:	push   ebp
  420456:	pushf  
  420457:	cmp    dl,al
  420459:	sahf   
  42045a:	call   0xe2ca:0xefd5a65f
  420461:	or     eax,0x5f09b6f8
  420466:	sub    BYTE PTR [esi+0x2c],0x82
  42046a:	xor    eax,0x46e5b228
  42046f:	ja     0x4204a4
  420471:	push   edx
  420472:	outs   dx,DWORD PTR ds:[esi]
  420473:	adc    eax,0xa05bf0e7
  420478:	shr    DWORD PTR ds:0xc72c7eee,0x25
  42047f:	xchg   esi,eax
  420480:	inc    ebp
  420481:	ret    
  420482:	cmp    al,0x52
  420484:	jg     0x4204e6
  420486:	inc    eax
  420487:	mov    ecx,0x4d5cf521
  42048c:	mov    ds:0x93d84fd4,al
  420491:	fisub  WORD PTR ds:0x9d6792f7
  420497:	sbb    DWORD PTR [edi-0x74807d70],0x6f
  42049e:	push   cs
  42049f:	dec    edi
  4204a0:	inc    edi
  4204a1:	inc    eax
  4204a2:	rol    BYTE PTR [edi+0x50],1
  4204a5:	mov    dl,0xf7
  4204a7:	out    dx,al
  4204a8:	mov    DWORD PTR [ebx-0x79],edi
  4204ab:	mov    dl,0x8d
  4204ad:	push   0x3cf70883
  4204b2:	adc    edx,DWORD PTR [ebx]
  4204b4:	pop    es
  4204b5:	out    0x80,al
  4204b7:	jge    0x420443
  4204b9:	push   ds
  4204ba:	cs mov al,0x22
  4204bd:	and    eax,0xe209cea4
  4204c2:	icebp  
  4204c3:	hlt    
  4204c4:	aad    0xb4
  4204c6:	lea    esi,[ebp-0x36]
  4204c9:	stos   BYTE PTR es:[edi],al
  4204ca:	jns    0x420466
  4204cc:	sub    eax,0x57e8986f
  4204d1:	push   ds
  4204d2:	mov    bh,0x49
  4204d4:	fistp  QWORD PTR [edi+0x38fd216e]
  4204da:	call   0xff3f:0x9464d776
  4204e1:	mov    eax,ds:0xeee4d8c3
  4204e6:	and    BYTE PTR [eax],bh
  4204e8:	adc    eax,0x186f88da
  4204ed:	xchg   ebp,eax
  4204ee:	dec    edi
  4204ef:	outs   dx,BYTE PTR ds:[esi]
  4204f0:	push   ss
  4204f1:	(bad)  
  4204f2:	jmp    FWORD PTR [ebp+esi*2-0x43]
  4204f6:	test   al,0x73
  4204f8:	call   FWORD PTR [ebx-0x5f78ab87]
  4204fe:	adc    esi,edx
  420500:	shl    DWORD PTR [ebp-0x30],1
  420503:	outs   dx,DWORD PTR ds:[esi]
  420504:	ror    ah,cl
  420506:	pop    esi
  420507:	xchg   ebp,eax
  420508:	fwait
  420509:	mov    ebp,0xd2f6a428
  42050e:	dec    esi
  42050f:	dec    edx
  420510:	mov    eax,ds:0xdf5e39e0
  420515:	test   eax,0x565d61db
  42051a:	shl    esp,0x46
  42051d:	pop    esp
  42051e:	jmp    0xad5e:0x529c5dd0
  420525:	cwde   
  420526:	hlt    
  420527:	gs ret 
  420529:	mov    edx,0xe0717e80
  42052e:	test   al,0x48
  420530:	sahf   
  420531:	xchg   edx,eax
  420532:	sbb    BYTE PTR [eax-0x632431a6],bl
  420538:	jno    0x420596
  42053a:	adc    DWORD PTR [edx-0x70],ecx
  42053d:	pop    ds
  42053e:	sub    eax,DWORD PTR [eax]
  420540:	sub    al,ah
  420542:	rol    DWORD PTR [ecx+0x6fef6c0b],0x5e
  420549:	fadd   QWORD PTR [ecx+ebx*1-0xfc1906b]
  420550:	sar    edx,0x2
  420553:	jle    0x42055d
  420555:	inc    edi
  420556:	call   0xee46:0x14377e29
  42055d:	idiv   BYTE PTR [edi+0x1a21be86]
  420563:	cs test al,0x7b
  420566:	or     DWORD PTR [eax+esi*4],ebx
  420569:	xor    eax,0xf1686d3d
  42056e:	fsubr  DWORD PTR [eax]
  420571:	lods   al,BYTE PTR ds:[esi]
  420572:	and    esp,esi
  420574:	add    DWORD PTR [ecx+eiz*4],esi
  420577:	pusha  
  420578:	xor    al,0x55
  42057a:	shr    BYTE PTR [ebp-0x5186cb8b],1
  420580:	ins    DWORD PTR es:[edi],dx
  420581:	rcr    DWORD PTR [edi+0x247992f4],1
  420587:	jp     0x42056c
  420589:	sbb    al,0xce
  42058b:	jp     0x42057c
  42058d:	std    
  42058e:	mov    ds:0xf5d52b63,eax
  420593:	push   ecx
  420594:	ds jmp 0xca41:0x75b83371
  42059c:	or     BYTE PTR [ecx],bl
  42059e:	push   edx
  42059f:	xor    eax,0x4c9a5c5
  4205a4:	out    0xfa,al
  4205a6:	fisttp QWORD PTR [ebx-0x50fa7541]
  4205ac:	pop    edx
  4205ad:	retf   
  4205ae:	pop    ecx
  4205af:	ins    BYTE PTR es:[edi],dx
  4205b0:	(bad)  
  4205b1:	push   ss
  4205b2:	add    bh,BYTE PTR [ebx+0x48]
  4205b5:	in     al,0x78
  4205b7:	jg     0x420594
  4205b9:	push   ecx
  4205ba:	add    al,BYTE PTR [eax-0x61]
  4205bd:	xor    eax,0x11111a78
  4205c2:	jge    0x4205d7
  4205c4:	(bad)  
  4205c5:	cld    
  4205c6:	cmp    eax,0x534ff08
  4205cb:	in     eax,dx
  4205cc:	and    eax,0x2da09dc3
  4205d1:	repz mov dh,0x7a
  4205d4:	and    eax,eax
  4205d6:	pop    esi
  4205d7:	ror    bh,cl
  4205d9:	pusha  
  4205da:	push   esp
  4205db:	test   cl,ch
  4205dd:	jmp    0x420561
  4205df:	mov    WORD PTR [ecx-0x56],cs
  4205e2:	pushf  
  4205e3:	xlat   BYTE PTR ds:[ebx]
  4205e4:	jg     0x42063f
  4205e6:	mov    al,ds:0xa9adc4d9
  4205eb:	mov    bh,0x8a
  4205ed:	mov    al,0x82
  4205ef:	adc    al,0xc9
  4205f1:	sbb    eax,DWORD PTR [eax]
  4205f3:	jge    0x420613
  4205f5:	mov    al,ds:0x604873de
  4205fa:	sbb    ebx,DWORD PTR [ebx-0x15]
  4205fd:	outs   dx,DWORD PTR ds:[esi]
  4205fe:	test   DWORD PTR [eax],esp
  420600:	stos   DWORD PTR es:[edi],eax
  420601:	ja     0x420604
  420603:	call   0x253fb43b
  420608:	jmp    0x5918bfe1
  42060d:	mov    BYTE PTR [ecx-0x14a8884e],bl
  420613:	xor    BYTE PTR [edx],al
  420615:	and    DWORD PTR [edi+0xf2272fb],esi
  42061b:	(bad)  
  42061c:	call   0x60d6d329
  420621:	lds    ebx,FWORD PTR ds:0x744e46f3
  420627:	outs   dx,BYTE PTR ds:[esi]
  420628:	das    
  420629:	cwde   
  42062a:	mov    cl,0x10
  42062c:	aad    0x3c
  42062e:	adc    esi,DWORD PTR [eax+0x26]
  420631:	scas   al,BYTE PTR es:[edi]
  420632:	cmp    ah,ch
  420634:	sbb    eax,0xc14329e9
  420639:	add    BYTE PTR [edx+ebp*4+0x58],al
  42063d:	inc    BYTE PTR [ecx+0x2597ff3e]
  420643:	cmp    al,0xb3
  420645:	add    cl,al
  420647:	fs jbe 0x420651
  42064a:	push   ds
  42064b:	sbb    ah,al
  42064d:	and    al,0xac
  42064f:	mov    ebx,0x20440270
  420654:	dec    esi
  420655:	pop    ecx
  420656:	inc    esp
  420657:	test   BYTE PTR [eax+0x12e4862c],0xd5
  42065e:	fst    DWORD PTR [ecx+edi*1]
  420661:	leave  
  420662:	xor    ch,BYTE PTR [ebx+0x5e]
  420665:	iret   
  420666:	xchg   ebp,eax
  420667:	je     0x420698
  420669:	vunpcklps ymm4,ymm1,YMMWORD PTR [ebx+0x3e]
  42066e:	retf   0x56c4
  420671:	sbb    esp,DWORD PTR [edx+0x6a]
  420674:	loop   0x4206a3
  420676:	dec    eax
  420677:	sub    ch,bh
  420679:	or     edi,DWORD PTR [edi]
  42067b:	mov    ds:0x682b12fe,eax
  420680:	sbb    DWORD PTR [ecx],edi
  420682:	outs   dx,DWORD PTR ds:[esi]
  420683:	xor    DWORD PTR [ecx+0x5],edi
  420686:	xchg   ebp,eax
  420687:	imul   al
  420689:	dec    edx
  42068a:	(bad)  
  42068b:	arpl   WORD PTR [eax],bp
  42068d:	shl    DWORD PTR [ecx-0x2382d9aa],cl
  420693:	cmp    ebx,DWORD PTR [edx+0x79]
  420696:	in     eax,0xea
  420698:	lods   al,BYTE PTR ds:[esi]
  420699:	ja     0x4206b0
  42069b:	out    dx,eax
  42069c:	pusha  
  42069d:	add    cl,BYTE PTR [ecx]
  42069f:	mov    ebp,0x53a9e3c6
  4206a4:	jmp    0x59f8d513
  4206a9:	lea    ecx,[ebp-0x16]
  4206ac:	aas    
  4206ad:	icebp  
  4206ae:	bound  ebp,QWORD PTR [ecx]
  4206b0:	dec    ebp
  4206b1:	fs or  al,0x5b
  4206b4:	mov    edx,0x7f690d78
  4206b9:	fdivp  st(1),st
  4206bb:	and    ebx,DWORD PTR [ecx+ecx*2]
  4206be:	imul   eax,DWORD PTR [ebx],0x6
  4206c1:	inc    eax
  4206c2:	dec    eax
  4206c3:	xchg   ecx,eax
  4206c4:	cli    
  4206c5:	cld    
  4206c6:	mov    ss,WORD PTR [ebx-0x10]
  4206c9:	push   edi
  4206ca:	ins    BYTE PTR es:[edi],dx
  4206cb:	mov    ah,0xed
  4206cd:	lds    edx,FWORD PTR [ebp+0x2f]
  4206d0:	retf   0xa81c
  4206d3:	lods   eax,DWORD PTR ds:[esi]
  4206d4:	in     eax,0xd5
  4206d6:	jp     0x4206ce
  4206d8:	stos   BYTE PTR es:[edi],al
  4206d9:	mov    edi,0x80b0368e
  4206de:	call   0x486d3dc7
  4206e3:	sbb    dh,BYTE PTR [eax+ecx*1]
  4206e6:	cmp    ecx,eax
  4206e8:	in     eax,0xe2
  4206ea:	(bad)  
  4206eb:	jmp    0x4206d0
  4206ed:	xor    al,BYTE PTR [esi]
  4206ef:	xchg   edi,eax
  4206f0:	ins    BYTE PTR es:[edi],dx
  4206f1:	dec    edx
  4206f2:	jmp    0x42068b
  4206f4:	mov    ch,0x9e
  4206f6:	and    DWORD PTR [ecx+0x8],0x56
  4206fa:	push   edi
  4206fb:	xchg   edi,eax
  4206fc:	fs data16 mov bh,0xa4
  420700:	das    
  420701:	test   DWORD PTR [edx+0x337bcdf1],esp
  420707:	push   ecx
  420708:	sub    BYTE PTR [ebx-0x27c434a4],0xe8
  42070f:	xor    ch,dh
  420711:	jle    0x420724
  420713:	int3   
  420714:	xchg   esi,eax
  420715:	sbb    esi,ebx
  420717:	lds    esi,FWORD PTR [edi]
  420719:	xor    edx,DWORD PTR [edx+0x3f]
  42071c:	sahf   
  42071d:	ret    
  42071e:	dec    edx
  42071f:	cmp    ch,BYTE PTR ds:0xfa65223d
  420725:	sbb    cl,BYTE PTR [edx-0x6c]
  420728:	inc    esi
  420729:	cmp    DWORD PTR [esi+0x5a],edx
  42072c:	cmp    al,BYTE PTR ds:0xe4debceb
  420732:	in     al,dx
  420733:	sub    eax,0xf3ccbb50
  420738:	lods   al,BYTE PTR ds:[esi]
  420739:	xchg   esp,eax
  42073a:	add    ebx,esi
  42073c:	push   ebp
  42073d:	lahf   
  42073e:	inc    ebx
  42073f:	aam    0xf6
  420741:	cmp    DWORD PTR [ecx-0x539fd775],edx
  420747:	pop    esp
  420748:	test   edi,edx
  42074a:	test   eax,0xb50a8442
  42074f:	jmp    0xa5a0eee9
  420754:	iret   
  420755:	shl    edx,0x80
  420758:	cmp    DWORD PTR [ebx],esp
  42075a:	mov    ah,0x60
  42075c:	sbb    ecx,DWORD PTR ds:0xcaa39516
  420762:	adc    DWORD PTR [esi],0xb4c785ad
  420768:	int3   
  420769:	xor    al,0xf
  42076b:	lods   al,BYTE PTR ds:[esi]
  42076c:	sbb    bh,ah
  42076e:	sub    DWORD PTR [ebx+esi*1-0x67],edx
  420772:	shl    BYTE PTR [eax+eax*1-0x5f],1
  420776:	push   ebx
  420777:	add    esp,DWORD PTR [ebp-0x5c]
  42077a:	add    eax,0x64fc519f
  42077f:	enter  0x6b5f,0x85
  420783:	jnp    0x4207ec
  420785:	daa    
  420786:	push   esi
  420787:	ds je  0x42071f
  42078a:	stos   DWORD PTR es:[edi],eax
  42078b:	adc    al,dl
  42078d:	pop    es
  42078e:	pop    ebx
  42078f:	mov    al,0x63
  420791:	xchg   ebp,eax
  420792:	int    0x98
  420794:	adc    eax,0x853d4940
  420799:	mov    ch,0xc5
  42079b:	in     al,dx
  42079c:	mov    al,0xe3
  42079e:	cli    
  42079f:	ret    
  4207a0:	and    BYTE PTR [ebx],dl
  4207a2:	rcl    BYTE PTR [esi-0x1b52fbf8],cl
  4207a8:	popa   
  4207a9:	mov    ebp,0x10738935
  4207ae:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4207af:	fistp  DWORD PTR [eax+0x6a]
  4207b2:	clc    
  4207b3:	fcmovnbe st,st(7)
  4207b5:	push   eax
  4207b6:	retf   
  4207b7:	loop   0x4207c8
  4207b9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4207ba:	scas   eax,DWORD PTR es:[edi]
  4207bb:	push   0x56
  4207bd:	stc    
  4207be:	loope  0x420767
  4207c0:	inc    edx
  4207c1:	mov    cl,0xff
  4207c3:	ins    DWORD PTR es:[edi],dx
  4207c4:	and    ah,BYTE PTR [eax]
  4207c6:	add    eax,0x476ba83
  4207cb:	cdq    
  4207cc:	loop   0x420836
  4207ce:	jns    0x4207b9
  4207d0:	inc    esi
  4207d1:	cmp    eax,0x45769729
  4207d6:	dec    esi
  4207d7:	pop    esi
  4207d8:	adc    al,0x3
  4207da:	mov    al,ds:0x2a54a619
  4207df:	xchg   edx,eax
  4207e0:	mov    cl,0x36
  4207e2:	jmp    0x420766
  4207e4:	fisub  DWORD PTR [edi-0x68c25bc6]
  4207ea:	mov    ds:0xda96f97f,eax
  4207ef:	outs   dx,DWORD PTR ds:[esi]
  4207f0:	mov    al,ds:0xd3e86a20
  4207f5:	mov    dh,0xc8
  4207f7:	inc    ebx
  4207f8:	das    
  4207f9:	inc    ebx
  4207fa:	imul   eax
  4207fc:	and    bl,bh
  4207fe:	add    BYTE PTR [eax+0x5],bh
  420801:	jmp    0xd2b7:0xab1cfbb9
  420808:	test   DWORD PTR [edi],esp
  42080a:	cmp    al,BYTE PTR [esi]
  42080c:	les    ebp,FWORD PTR ds:[ebx]
  42080f:	test   eax,0xd3159f58
  420814:	test   DWORD PTR [ebp-0x711b6bf8],0xd6292eab
  42081e:	aad    0x45
  420820:	mov    ebx,DWORD PTR [esi+0x47]
  420823:	xlat   BYTE PTR ds:[ebx]
  420824:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420825:	into   
  420826:	jmp    0xf065:0x4fe9ebd8
  42082d:	loopne 0x42080a
  42082f:	xchg   esp,edi
  420831:	dec    esi
  420832:	rcl    DWORD PTR [ebx+ecx*4+0x27],1
  420836:	aam    0xb9
  420838:	out    dx,eax
  420839:	mov    BYTE PTR [ebx+edi*8+0x4a2530b7],ah
  420840:	push   cs
  420841:	pop    eax
  420842:	sbb    al,0x24
  420844:	aad    0x76
  420846:	jne    0x4207e6
  420848:	mov    edx,0x3e6b59d1
  42084d:	stos   BYTE PTR es:[edi],al
  42084e:	pop    esp
  42084f:	mov    bl,0xbb
  420851:	mov    ch,0xac
  420853:	cmp    al,0xdc
  420855:	add    esp,esi
  420857:	push   0x2b
  420859:	ins    DWORD PTR es:[edi],dx
  42085a:	std    
  42085b:	jnp    0x420884
  42085d:	xchg   BYTE PTR [ebx],ch
  42085f:	sbb    DWORD PTR [esi],0xe81959ef
  420865:	fisttp WORD PTR ds:0xa7132f59
  42086b:	pushf  
  42086c:	mov    esp,0x809d1ce1
  420871:	mov    ah,0xfc
  420873:	clc    
  420874:	mov    al,0xbb
  420876:	mov    BYTE PTR [esi],0xcf
  420879:	jns    0x420801
  42087b:	es jg  0x420807
  42087e:	cmp    ah,BYTE PTR [esi+eiz*2+0x79985678]
  420885:	add    esi,DWORD PTR gs:[ecx+0xd7ac425]
  42088c:	cmove  eax,DWORD PTR [ebp-0x67]
  420890:	xchg   edi,eax
  420891:	clc    
  420892:	xchg   esi,eax
  420893:	cmp    BYTE PTR [edx-0x12b9b3f5],dl
  420899:	adc    BYTE PTR [esi],ch
  42089b:	mov    dh,cl
  42089d:	fmul   st,st(7)
  42089f:	hlt    
  4208a0:	dec    esp
  4208a1:	dec    edx
  4208a2:	push   esi
  4208a3:	js     0x420870
  4208a5:	cmp    DWORD PTR [ebp+0x68],0xfffffff8
  4208a9:	add    DWORD PTR [ebx-0x79e2df6d],ebp
  4208af:	add    DWORD PTR [edi+esi*4],edx
  4208b2:	xor    eax,0x5fcd970
  4208b7:	fild   WORD PTR [eax+0xe283daa]
  4208bd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4208be:	aam    0x30
  4208c0:	jno    0x420938
  4208c2:	jl     0x4208f6
  4208c4:	imul   ecx,DWORD PTR [edi+0x318273ee],0x7c
  4208cb:	lds    edx,FWORD PTR [ecx-0xcfa45f8]
  4208d1:	push   ecx
  4208d2:	jecxz  0x42092e
  4208d4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4208d5:	out    0x2a,eax
  4208d7:	xchg   ecx,eax
  4208d8:	sub    DWORD PTR [ebx+0x14a317],ebx
  4208de:	pushf  
  4208df:	rcr    ebp,1
  4208e1:	adc    al,0x1c
  4208e3:	stc    
  4208e4:	ds test ebx,ebx
  4208e7:	fs push edx
  4208e9:	in     eax,0xfe
  4208eb:	fs inc edi
  4208ed:	hlt    
  4208ee:	mov    ds:0xcd486a4b,eax
  4208f3:	or     BYTE PTR [esi-0x4d],bh
  4208f6:	push   ecx
  4208f7:	push   ebx
  4208f8:	sbb    esi,ecx
  4208fa:	and    BYTE PTR fs:[edx+0x68cf942c],ah
  420901:	fwait
  420902:	popf   
  420903:	cli    
  420904:	sbb    DWORD PTR [edi],0x24
  420907:	daa    
  420908:	inc    ecx
  420909:	sbb    ebp,DWORD PTR [edi-0x34]
  42090c:	gs sbb al,0x1
  42090f:	mov    cl,0x83
  420911:	in     al,0xa
  420913:	sub    eax,ebp
  420915:	dec    ecx
  420916:	adc    al,0xa2
  420918:	mov    ch,0xea
  42091a:	popf   
  42091b:	inc    ebp
  42091c:	pop    ebx
  42091d:	cli    
  42091e:	pop    esp
  42091f:	jl     0x420936
  420921:	js     0x42096a
  420923:	mov    ecx,0x8c6d31a3
  420928:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420929:	imul   edi,ecx,0x50
  42092c:	int    0xc6
  42092e:	push   ebx
  42092f:	xor    eax,0x536e8149
  420934:	xchg   esi,eax
  420935:	jbe    0x4208fc
  420937:	lock cwde 
  420939:	or     ebx,edx
  42093b:	pop    ebp
  42093c:	pop    es
  42093d:	mov    edi,0x448a5e6e
  420942:	cmp    al,0x68
  420944:	retf   0x31ef
  420947:	push   esp
  420948:	sbb    ebx,DWORD PTR [eax+0x2dd04a88]
  42094e:	jns    0x420904
  420950:	xchg   esi,ebx
  420952:	outs   dx,BYTE PTR ds:[esi]
  420953:	in     eax,0x6b
  420955:	jne    0x42090c
  420957:	aam    0x50
  420959:	pop    esi
  42095a:	test   BYTE PTR [edi],bl
  42095c:	mov    fs,WORD PTR [ecx-0x2f]
  42095f:	xlat   BYTE PTR ds:[ebx]
  420960:	and    DWORD PTR [edi],0x4a7188a0
  420966:	push   ebx
  420967:	and    DWORD PTR [eax-0x7d04ac6d],ebx
  42096d:	jns    0x420934
  42096f:	push   eax
  420970:	int    0x4b
  420972:	dec    ebp
  420973:	fchs   
  420975:	pop    ecx
  420976:	fidivr DWORD PTR [ecx+0x63f14811]
  42097c:	adc    eax,0xf85d3ee8
  420981:	je     0x420918
  420983:	jl     0x4209ae
  420985:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420986:	sbb    eax,0x231bd653
  42098b:	ins    DWORD PTR es:[edi],dx
  42098c:	or     DWORD PTR [eax+0x2845eadf],edi
  420992:	mov    ecx,0x9655dae8
  420997:	xor    cl,dl
  420999:	dec    edx
  42099a:	les    esp,FWORD PTR [eax]
  42099c:	fst    QWORD PTR [ebp+0x656d3e72]
  4209a2:	cwde   
  4209a3:	and    esi,DWORD PTR [ecx+0x0]
  4209a6:	xchg   ebx,eax
  4209a7:	sub    eax,0xe179be7f
  4209ac:	inc    edx
  4209ad:	mov    ah,BYTE PTR [ebx+eiz*2+0x69]
  4209b1:	outs   dx,WORD PTR cs:[esi]
  4209b4:	lahf   
  4209b5:	sub    esp,edi
  4209b7:	mov    ah,BYTE PTR ds:[ebx+0x38]
  4209bb:	(bad)  
  4209bc:	sti    
  4209bd:	addr16 jmp 0x8dc8:0x1c1bbb0
  4209c5:	cmp    bl,al
  4209c7:	outs   dx,DWORD PTR ds:[esi]
  4209c8:	fimul  DWORD PTR [esi+0x9]
  4209cb:	shl    cl,1
  4209cd:	leave  
  4209ce:	dec    esp
  4209cf:	push   edi
  4209d0:	push   edi
  4209d1:	std    
  4209d2:	test   al,0x13
  4209d4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4209d5:	sbb    eax,0xb2789c4a
  4209da:	pop    eax
  4209db:	std    
  4209dc:	add    edx,edx
  4209de:	fwait
  4209df:	ins    DWORD PTR es:[edi],dx
  4209e0:	pusha  
  4209e1:	sti    
  4209e2:	inc    edi
  4209e3:	xchg   BYTE PTR [eax-0x6c],bh
  4209e6:	and    DWORD PTR [edi+0x6c845469],edi
  4209ec:	xchg   esp,eax
  4209ed:	dec    esi
  4209ee:	popf   
  4209ef:	test   BYTE PTR [ecx+0x61c09782],bl
  4209f5:	in     eax,dx
  4209f6:	icebp  
  4209f7:	push   ds
  4209f8:	or     al,0x40
  4209fa:	(bad)  
  4209fb:	into   
  4209fc:	add    cl,ah
  4209fe:	mov    bh,0xa3
  420a00:	mov    edi,0x5999cc02
  420a05:	sub    al,0xb0
  420a07:	fld    QWORD PTR ds:0x37f44b2a
  420a0d:	cmp    esi,DWORD PTR fs:[edx-0x43ebbaee]
  420a14:	jle    0x4209cb
  420a16:	sub    esi,DWORD PTR [esi]
  420a18:	loope  0x4209de
  420a1a:	(bad)  
  420a1b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420a1c:	(bad)  
  420a1d:	jns    0x420a1e
  420a1f:	(bad)  
  420a20:	lea    eax,[edx+0x46]
  420a23:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420a24:	dec    edi
  420a25:	jnp    0x420a60
  420a27:	jo     0x420a27
  420a29:	xor    ecx,DWORD PTR [ecx]
  420a2b:	ret    0x640c
  420a2e:	pop    ebx
  420a2f:	mov    eax,0xa8f16234
  420a34:	push   es
  420a35:	rcl    esp,1
  420a37:	sbb    eax,0x24319028
  420a3c:	shr    BYTE PTR [edi+0x58],0x15
  420a40:	jns    0x420a0d
  420a42:	popa   
  420a43:	xor    al,0x43
  420a45:	pop    eax
  420a46:	xchg   ecx,eax
  420a47:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420a48:	push   0x569ebde8
  420a4d:	shl    BYTE PTR gs:[esi+0x78b3e60],1
  420a54:	stc    
  420a55:	rol    DWORD PTR [esi],1
  420a57:	or     dh,ch
  420a59:	cmp    eax,0xb285c0dd
  420a5e:	scas   al,BYTE PTR es:[edi]
  420a5f:	adc    al,0x47
  420a61:	sub    ah,BYTE PTR [ecx-0x37]
  420a64:	and    BYTE PTR [ebx-0x792eb560],cl
  420a6a:	adc    DWORD PTR [ebx],ebx
  420a6c:	push   esi
  420a6d:	jnp    0x420ad9
  420a6f:	pop    ss
  420a70:	ss adc al,0xe3
  420a73:	loop   0x420a5e
  420a75:	or     DWORD PTR [ebp-0x4e6778e1],ebp
  420a7b:	rol    DWORD PTR [edx+0x57cfcc00],0x7d
  420a82:	les    esp,FWORD PTR [edx+0x10ca9b48]
  420a88:	cmp    DWORD PTR [edi+0x775211c9],ebp
  420a8e:	inc    eax
  420a8f:	fldcw  WORD PTR [ecx+0x6f0197b8]
  420a95:	aam    0xb2
  420a97:	fincstp 
  420a99:	call   0xe4f328c8
  420a9e:	inc    edx
  420a9f:	outs   dx,BYTE PTR ds:[esi]
  420aa0:	and    BYTE PTR [edx],ch
  420aa2:	sbb    DWORD PTR [edi-0x6ecfa8bf],esp
  420aa8:	push   ds
  420aa9:	push   esi
  420aaa:	aas    
  420aab:	push   esp
  420aac:	xchg   edi,eax
  420aad:	lock cmp ebp,ebp
  420ab0:	stos   BYTE PTR es:[edi],al
  420ab1:	jge    0x420a93
  420ab3:	adc    esp,0x5403cef3
  420ab9:	aam    0xf6
  420abb:	sbb    ebx,eax
  420abd:	mov    ebp,0x9cd5edc2
  420ac2:	scas   al,BYTE PTR es:[edi]
  420ac3:	adc    al,0x8d
  420ac5:	adc    BYTE PTR [esi-0x31756eb7],cl
  420acb:	mov    cl,0xb9
  420acd:	xor    BYTE PTR [eax-0x2d26e5c3],al
  420ad3:	inc    esi
  420ad4:	pop    ds
  420ad5:	xor    eax,0x36251b23
  420ada:	in     eax,0x92
  420adc:	(bad)  
  420add:	jmp    0xc5d60f54
  420ae2:	xor    bl,0xe0
  420ae5:	xor    esi,0x68d572fc
  420aeb:	jg     0x420a92
  420aed:	ja     0x420a80
  420aef:	pop    ebx
  420af0:	pop    edi
  420af1:	jle    0x420b4b
  420af3:	mov    ds:0x9ef49c2b,eax
  420af8:	hlt    
  420af9:	or     BYTE PTR [esi-0x38],ch
  420afc:	dec    esi
  420afd:	mov    DWORD PTR [ebx-0x5cbb0e99],esp
  420b03:	or     al,0x42
  420b05:	push   es
  420b06:	sub    eax,0xd727424a
  420b0b:	retf   
  420b0c:	mov    ch,0x5d
  420b0e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420b0f:	xchg   ebx,eax
  420b10:	or     eax,0xf24b24a2
  420b15:	inc    esp
  420b16:	or     cl,BYTE PTR [edx+ecx*1-0x697a8d22]
  420b1d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420b1e:	ror    ah,1
  420b20:	xor    esi,edi
  420b22:	(bad)
  420b26:	mov    ?,WORD PTR [edx-0x411b70ee]
  420b2c:	fs popa 
  420b2e:	out    0x6e,al
  420b30:	out    dx,eax
  420b31:	sahf   
  420b32:	pop    edx
  420b33:	dec    esi
  420b34:	cmp    bl,BYTE PTR [ebp-0x4825f9f2]
  420b3a:	cwde   
  420b3b:	loopne 0x420b9c
  420b3d:	mov    dl,0x93
  420b3f:	push   ebx
  420b40:	in     eax,0xf3
  420b42:	push   edx
  420b43:	ins    DWORD PTR es:[edi],dx
  420b44:	xchg   DWORD PTR [edi+0x4f],edi
  420b47:	les    esp,FWORD PTR [ebx-0x55]
  420b4a:	cs fild WORD PTR ss:[eax-0x246a5e96]
  420b52:	not    DWORD PTR [ebx]
  420b54:	sar    DWORD PTR [ebx-0x512deb25],1
  420b5a:	xchg   ebx,eax
  420b5b:	push   cs
  420b5c:	fbld   TBYTE PTR ds:0xdae6a5f6
  420b62:	lock shr bl,0xce
  420b66:	std    
  420b67:	add    dh,BYTE PTR [eax+0x43]
  420b6a:	and    eax,0xf476ba78
  420b6f:	loope  0x420b41
  420b71:	inc    ebx
  420b72:	xchg   esi,eax
  420b73:	ret    
  420b74:	ss pop esp
  420b76:	adc    ecx,DWORD PTR [ebp+0x363fb552]
  420b7c:	int    0x23
  420b7e:	mov    bl,0x3e
  420b80:	inc    esi
  420b81:	rcl    DWORD PTR [ecx],cl
  420b83:	out    0xe,eax
  420b85:	xchg   ebx,eax
  420b86:	xchg   ebx,eax
  420b87:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420b88:	sti    
  420b89:	or     esp,DWORD PTR [ecx]
  420b8b:	(bad)  
  420b8c:	adc    esp,edx
  420b8e:	nop
  420b8f:	iret   
  420b90:	jle    0x420b3d
  420b92:	aas    
  420b93:	mov    eax,ds:0x266ad268
  420b98:	out    dx,al
  420b99:	and    BYTE PTR [esi-0x1d971e72],bl
  420b9f:	cwde   
  420ba0:	nop
  420ba1:	(bad)  
  420ba2:	out    0x72,eax
  420ba4:	lods   eax,DWORD PTR ds:[esi]
  420ba5:	int    0xc5
  420ba7:	rol    DWORD PTR [ebp-0x44],cl
  420baa:	ss fwait
  420bac:	ins    DWORD PTR es:[edi],dx
  420bad:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420bae:	and    DWORD PTR [esi+0x7228814f],ebx
  420bb4:	sbb    esp,esp
  420bb6:	cmp    esi,DWORD PTR [ecx]
  420bb8:	push   ecx
  420bb9:	cwde   
  420bba:	adc    DWORD PTR ds:0x338e001b,ebx
  420bc0:	sbb    BYTE PTR [esi-0x7e],dh
  420bc3:	xchg   esi,esi
  420bc5:	test   DWORD PTR [ecx],ecx
  420bc7:	or     bl,BYTE PTR [ecx]
  420bc9:	jge    0x420b77
  420bcb:	les    ecx,FWORD PTR [ebp+0x70511351]
  420bd1:	sti    
  420bd2:	or     BYTE PTR [edx+0x16150c04],dh
  420bd8:	jmp    0xd94a:0xc60a7fa7
  420bdf:	in     al,dx
  420be0:	xor    ebp,DWORD PTR [ebx-0x15]
  420be3:	push   ebp
  420be4:	hlt    
  420be5:	rcl    BYTE PTR [ecx-0x4f],cl
  420be8:	inc    eax
  420be9:	inc    esi
  420bea:	retf   0x18cb
  420bed:	cmc    
  420bee:	dec    esp
  420bef:	and    BYTE PTR [edi+0x5c3820ec],ah
  420bf5:	add    al,0xed
  420bf7:	add    bl,BYTE PTR [esi]
  420bf9:	call   0x7928400b
  420bfe:	xchg   ebx,eax
  420bff:	jmp    0x4eca:0xa19034d8
  420c06:	std    
  420c07:	cld    
  420c08:	push   ecx
  420c09:	cmp    al,0xb4
  420c0b:	in     eax,dx
  420c0c:	out    0xb4,eax
  420c0e:	push   eax
  420c0f:	(bad)  
  420c10:	push   eax
  420c11:	scas   eax,DWORD PTR es:[edi]
  420c12:	add    eax,0xc9859be1
  420c17:	sbb    eax,0x52569673
  420c1c:	(bad)  
  420c1d:	scas   al,BYTE PTR es:[edi]
  420c1e:	(bad)  
  420c1f:	or     al,0x41
  420c21:	shl    DWORD PTR [ecx+ebp*1+0x12],0x4f
  420c26:	mov    edx,0x25c20de9
  420c2b:	adc    dh,cl
  420c2d:	mov    ?,WORD PTR [eax]
  420c2f:	ret    0x6ed3
  420c32:	stos   DWORD PTR es:[edi],eax
  420c33:	aam    0x9b
  420c35:	mov    ch,0x7b
  420c37:	jae    0x420c19
  420c39:	ret    0x8fb4
  420c3c:	and    bh,BYTE PTR [ebx+ecx*4+0x15]
  420c40:	xchg   ecx,eax
  420c41:	or     eax,esi
  420c43:	rcl    edi,cl
  420c45:	outs   dx,BYTE PTR ds:[esi]
  420c46:	hlt    
  420c47:	jmp    0xf25:0x6d6fb890
  420c4e:	retf   
  420c4f:	jnp    0x638b0b96
  420c55:	loop   0x420cd5
  420c57:	sbb    esi,esi
  420c59:	xor    eax,0x6ed698d1
  420c5e:	and    dl,ah
  420c60:	mov    edx,0x2fe95a3c
  420c65:	mov    BYTE PTR [esi-0x7f],ch
  420c68:	lock out 0xbf,al
  420c6b:	jb     0x420c7e
  420c6d:	icebp  
  420c6e:	call   0xdea5:0x91a4ce33
  420c75:	mov    ds:0xa6110926,eax
  420c7a:	mov    ecx,0x6fa807e2
  420c7f:	cdq    
  420c80:	lods   eax,DWORD PTR ds:[esi]
  420c81:	add    ecx,DWORD PTR [edi+0x1c]
  420c84:	call   0xaa293e11
  420c89:	jb     0x420cc8
  420c8b:	and    ebp,DWORD PTR [edi+0x744750df]
  420c91:	imul   edx,DWORD PTR [eax],0x9b136bbc
  420c97:	data16 idiv BYTE PTR [eax+ebx*4-0x78d7213e]
  420c9f:	les    esi,FWORD PTR [eax-0x10]
  420ca2:	inc    eax
  420ca3:	out    dx,al
  420ca4:	mov    ebx,0xa7f6218a
  420ca9:	retf   
  420caa:	es lods eax,DWORD PTR gs:[esi]
  420cad:	cmp    DWORD PTR [ebx-0xd],ebx
  420cb0:	add    DWORD PTR [edx+eax*1],edi
  420cb3:	dec    ebp
  420cb4:	lahf   
  420cb5:	data16 cmp al,0x1a
  420cb8:	fnstcw WORD PTR [eax]
  420cba:	sbb    cl,dh
  420cbc:	jb     0x420cb6
  420cbe:	inc    eax
  420cbf:	call   0xde2509a5
  420cc4:	std    
  420cc5:	pop    ebx
  420cc6:	(bad)  
  420cc7:	cdq    
  420cc8:	js     0x420c95
  420cca:	retf   
  420ccb:	stos   DWORD PTR es:[edi],eax
  420ccc:	or     ah,BYTE PTR [ebp+0x5cb75615]
  420cd2:	and    ch,dh
  420cd4:	inc    si
  420cd6:	xchg   ebx,eax
  420cd7:	adc    BYTE PTR [ebx-0x2],bl
  420cda:	outs   dx,BYTE PTR ds:[esi]
  420cdb:	mov    ah,BYTE PTR [ecx+0xe]
  420cde:	sbb    DWORD PTR [edx+0x31],esi
  420ce1:	inc    ebx
  420ce2:	cmp    bl,BYTE PTR [edx+0x8]
  420ce5:	bound  edi,QWORD PTR [edi-0x73]
  420ce8:	std    
  420ce9:	pushf  
  420cea:	pop    ecx
  420ceb:	jb     0x420d08
  420ced:	fs je  0x420c82
  420cf0:	add    al,BYTE PTR [ebx-0x6d5d2611]
  420cf6:	outs   dx,BYTE PTR ds:[esi]
  420cf7:	or     bl,dh
  420cf9:	out    dx,al
  420cfa:	sbb    BYTE PTR [eax],bh
  420cfc:	xchg   ebx,eax
  420cfd:	push   0xd3269384
  420d02:	in     al,0x6a
  420d04:	loopne 0x420cb3
  420d06:	jbe    0x420cf7
  420d08:	mov    edx,0xd58d5fa2
  420d0d:	jp     0x420cb8
  420d0f:	jg     0x420cce
  420d11:	jg     0x266cba70
  420d17:	stos   DWORD PTR es:[edi],eax
  420d18:	or     edi,DWORD PTR [edx-0x56995315]
  420d1e:	mov    al,0x9
  420d20:	cs pop esp
  420d22:	mov    esi,0x87213f89
  420d27:	outs   dx,BYTE PTR ds:[esi]
  420d28:	sub    bh,BYTE PTR [ecx+0xe0292f7]
  420d2e:	nop
  420d2f:	pop    eax
  420d30:	outs   dx,BYTE PTR ds:[esi]
  420d31:	rep lods eax,DWORD PTR ds:[esi]
  420d33:	jmp    0x420ce6
  420d35:	movlps xmm0,QWORD PTR [eax+0x3c3d91f]
  420d3c:	arpl   WORD PTR [esi+eax*4-0x7731f77b],bx
  420d43:	sbb    al,0x6
  420d45:	sbb    edi,DWORD PTR [ecx-0x34]
  420d48:	loope  0x420cf1
  420d4a:	test   DWORD PTR [edx],edx
  420d4c:	retf   
  420d4d:	xchg   edx,eax
  420d4e:	iret   
  420d4f:	hlt    
  420d50:	pop    ds
  420d51:	push   esi
  420d52:	add    BYTE PTR [eax-0x4dad3783],cl
  420d58:	jno    0x420d74
  420d5a:	not    DWORD PTR [ebx+0x75]
  420d5d:	add    al,0x51
  420d5f:	inc    esi
  420d60:	bound  ecx,QWORD PTR [ecx+esi*8-0x54a5c556]
  420d67:	inc    edx
  420d68:	dec    esp
  420d69:	push   edi
  420d6a:	sub    DWORD PTR [esi-0x6b],eax
  420d6d:	cwde   
  420d6e:	retf   0xf9b9
  420d71:	fidivr WORD PTR [edx]
  420d73:	test   al,0xa1
  420d75:	or     DWORD PTR [esi-0x6a],ecx
  420d78:	mov    ah,ch
  420d7a:	pop    ebx
  420d7b:	daa    
  420d7c:	int    0xb8
  420d7e:	xor    DWORD PTR [ebp+esi*8+0x15eeea88],0x24
  420d86:	push   edx
  420d87:	add    eax,0x5ec5450d
  420d8c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420d8d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420d8e:	(bad)  
  420d90:	cmp    DWORD PTR [edi-0x5840282b],ebx
  420d96:	jp     0x420deb
  420d98:	jno    0x420ddc
  420d9a:	shl    BYTE PTR ds:0xf6ee753c,1
  420da0:	sbb    esi,DWORD PTR [esi+eax*8-0x7e]
  420da4:	ja     0x420ded
  420da6:	fwait
  420da7:	push   0xbf41e70e
  420dac:	xor    ch,dl
  420dae:	lock leave 
  420db0:	sub    BYTE PTR [ecx+ebp*8+0x3c],dl
  420db4:	shl    dl,0x46
  420db7:	das    
  420db8:	aam    0x64
  420dba:	mov    eax,ds:0xf82b82d6
  420dbf:	(bad)  ds:0x5fd02c0a
  420dc5:	mov    eax,0x69a1c85c
  420dca:	sub    DWORD PTR [ebx+0x22],eax
  420dcd:	sbb    edi,0xbdcdeadf
  420dd3:	xchg   DWORD PTR [eax-0xc],ebp
  420dd6:	test   al,0xbf
  420dd8:	xchg   esi,eax
  420dd9:	fst    QWORD PTR [eax]
  420ddb:	xor    al,0x9f
  420ddd:	jmp    0x727235e5
  420de2:	mov    ds:0x6bd8959,eax
  420de7:	(bad)  
  420de8:	loopne 0x420dac
  420dea:	mov    ebp,0x7960b9de
  420def:	jno    0x420e66
  420df1:	inc    ebx
  420df2:	mov    edx,0x2467a116
  420df7:	xchg   DWORD PTR [edx-0x652ad623],esi
  420dfd:	xchg   ecx,eax
  420dfe:	mov    ebx,0xe3394ebe
  420e03:	retf   
  420e04:	mov    ebp,0xba72df35
  420e09:	dec    ebp
  420e0a:	sub    BYTE PTR [ecx+0x70],bh
  420e0d:	enter  0x64f4,0xfd
  420e11:	cmp    ebx,DWORD PTR ds:0x813d071e
  420e17:	call   0x745f97d6
  420e1c:	arpl   WORD PTR [edx],si
  420e1e:	and    eax,0x314197d5
  420e23:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420e24:	aas    
  420e25:	mov    eax,ds:0x5bcf501d
  420e2a:	scas   al,BYTE PTR es:[edi]
  420e2b:	retf   
  420e2c:	or     BYTE PTR [ecx-0x67],0xbc
  420e30:	cdq    
  420e31:	add    al,0xa9
  420e33:	cmp    eax,0x9511b236
  420e38:	mov    ah,0xf
  420e3a:	adc    bh,BYTE PTR [esp+edi*2+0x29]
  420e3e:	and    al,BYTE PTR [esi+0x7630ce7f]
  420e44:	pop    ebx
  420e45:	add    DWORD PTR ss:[esi+eax*1-0xd],esp
  420e4a:	jbe    0x420e81
  420e4c:	and    al,0x68
  420e4e:	adc    al,0x2a
  420e50:	push   0x76
  420e52:	dec    edx
  420e53:	jp     0x420eb7
  420e55:	aas    
  420e56:	push   esp
  420e57:	shr    BYTE PTR [edi+ebp*4],0x44
  420e5b:	sub    edx,DWORD PTR [esi]
  420e5d:	cmp    al,0x62
  420e5f:	fstp   QWORD PTR [ebx+0x6f]
  420e62:	mov    esi,0xb20d3208
  420e67:	imul   ecx,DWORD PTR [esi-0x2c06e537],0xab772c6
  420e71:	popf   
  420e72:	cmp    ch,ch
  420e74:	std    
  420e75:	mov    ch,0x28
  420e77:	mov    ds:0x75ddba50,al
  420e7c:	push   ds
  420e7d:	ret    0x9ff1
  420e80:	push   ss
  420e81:	sahf   
  420e82:	shr    BYTE PTR [ecx],0x44
  420e85:	pop    edx
  420e86:	xchg   bh,ch
  420e88:	outs   dx,DWORD PTR ds:[esi]
  420e89:	je     0x420ef3
  420e8b:	imul   ebx,DWORD PTR [edx+0x6c835ff9],0x36
  420e92:	hlt    
  420e93:	push   esi
  420e94:	sbb    eax,0x2f187520
  420e99:	mov    ds:0x15daa1cb,eax
  420e9e:	or     BYTE PTR [esi+ebx*2+0x5ce81448],bl
  420ea5:	(bad)  [edx-0x70c81978]
  420eab:	or     al,0x60
  420ead:	xor    BYTE PTR [eax],0xcc
  420eb0:	(bad)  
  420eb1:	xchg   ecx,eax
  420eb2:	cmp    ecx,esp
  420eb4:	bound  edi,QWORD PTR [ebx]
  420eb6:	cs dec ebx
  420eb8:	stc    
  420eb9:	bound  esi,QWORD PTR [edx-0x70d0f472]
  420ebf:	adc    al,0x38
  420ec1:	adc    bh,BYTE PTR [edx+edx*2-0x5b]
  420ec5:	fidiv  DWORD PTR [ebx-0xda77837]
  420ecb:	adc    eax,0xbd02908e
  420ed0:	cdq    
  420ed1:	sbb    DWORD PTR [edi],edi
  420ed3:	mov    ecx,0x19dfdff6
  420ed8:	gs stos DWORD PTR es:[edi],eax
  420eda:	jl     0x420f14
  420edc:	nop
  420edd:	xor    eax,0x78d34afa
  420ee2:	ins    DWORD PTR es:[edi],dx
  420ee3:	jg     0x420f1a
  420ee5:	cs pusha 
  420ee7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420ee8:	mov    eax,0x5775e606
  420eed:	out    dx,al
  420eee:	or     BYTE PTR [ebx+0x2c5a4982],ah
  420ef4:	pop    ds
  420ef5:	xor    ch,BYTE PTR [esi+esi*2-0x6bf355d6]
  420efc:	(bad)  [eax+0x45]
  420eff:	pop    edi
  420f00:	sbb    eax,0x80591f36
  420f05:	call   0xe32959d5
  420f0a:	ds loope 0x420ec9
  420f0d:	gs popa 
  420f0f:	sti    
  420f10:	outs   dx,DWORD PTR ds:[esi]
  420f11:	loop   0x420ec3
  420f13:	push   0x1e64bec0
  420f18:	(bad)  
  420f19:	dec    ebp
  420f1a:	jge    0x420f42
  420f1c:	add    ch,BYTE PTR [ebx-0x6c280fbb]
  420f22:	xor    dh,BYTE PTR [ecx+0x3d5fec1e]
  420f28:	sbb    DWORD PTR ds:0x80f4854b,edx
  420f2e:	push   ecx
  420f2f:	xlat   BYTE PTR ds:[ebx]
  420f30:	call   0xf15bf10c
  420f35:	xchg   edi,eax
  420f36:	sti    
  420f37:	adc    ebx,DWORD PTR [ebp-0x29c78eb6]
  420f3d:	jno    0x420f4c
  420f3f:	into   
  420f40:	mov    ch,0x3b
  420f42:	sub    al,BYTE PTR [edi+0x10e0d879]
  420f48:	pop    edi
  420f49:	(bad)  [edx]
  420f4b:	(bad)  
  420f4c:	mov    ds:0xd1079b77,al
  420f51:	adc    al,0xa0
  420f53:	pushf  
  420f54:	adc    DWORD PTR [esi],edx
  420f56:	jns    0x420f9b
  420f58:	enter  0xe5f0,0xd3
  420f5c:	xchg   edx,eax
  420f5d:	int3   
  420f5e:	mov    WORD PTR [esi-0x1b],?
  420f61:	or     bl,cl
  420f63:	pop    ds
  420f64:	out    dx,al
  420f65:	push   ss
  420f66:	gs je  0x420f9a
  420f69:	sbb    esp,DWORD PTR [eax+edx*1-0x4831bb06]
  420f70:	(bad)  
  420f71:	xchg   esi,eax
  420f72:	sub    eax,0x460b559d
  420f77:	xchg   edx,eax
  420f78:	inc    esp
  420f79:	daa    
  420f7a:	inc    esi
  420f7b:	dec    esp
  420f7c:	popf   
  420f7d:	enter  0xadc1,0xf4
  420f81:	mov    ebx,0x724117c3
  420f86:	jo     0x420fca
  420f88:	lds    edi,FWORD PTR [ecx-0x177598f8]
  420f8e:	mov    dh,0x9a
  420f90:	jmp    FWORD PTR [eax+0x55ec6ff0]
  420f96:	loop   0x420f4b
  420f98:	in     eax,0x5
  420f9a:	je     0x420fb3
  420f9c:	jns    0x420f8b
  420f9e:	rcl    BYTE PTR [edi-0x1b],cl
  420fa1:	loope  0x420fd1
  420fa3:	xchg   edx,eax
  420fa4:	adc    BYTE PTR [ecx],bl
  420fa6:	xchg   esp,eax
  420fa7:	popf   
  420fa8:	cmc    
  420fa9:	(bad)
  420fac:	push   cs
  420fad:	xchg   esi,eax
  420fae:	int3   
  420faf:	sbb    eax,0x7dc7011a
  420fb4:	cmp    BYTE PTR [edx+0x4d],0xe1
  420fb8:	lds    esi,FWORD PTR [edi+0xf976e87]
  420fbe:	es stos BYTE PTR es:[edi],al
  420fc0:	pop    edx
  420fc1:	sbb    ch,BYTE PTR [edi+0x6ea79c47]
  420fc7:	cmp    edi,DWORD PTR [eax]
  420fc9:	repnz mov dl,0xfa
  420fcc:	lods   al,BYTE PTR ds:[esi]
  420fcd:	or     esp,DWORD PTR [edi+ebx*4-0x4fd52e42]
  420fd4:	push   ebx
  420fd5:	adc    edx,ebx
  420fd7:	in     al,dx
  420fd8:	jb     0x421022
  420fda:	ja     0x420fb4
  420fdc:	inc    esp
  420fdd:	rcr    BYTE PTR [eax],1
  420fdf:	fmul   QWORD PTR [eax]
  420fe1:	inc    eax
  420fe2:	jp     0x420fd0
  420fe4:	push   cs
  420fe5:	loope  0x420f85
  420fe7:	popf   
  420fe8:	cdq    
  420fe9:	cmp    BYTE PTR [esi+0x72],0x5d
  420fed:	dec    eax
  420fee:	jmp    0xf3dc3059
  420ff3:	mov    ebx,0xb44d87dd
  420ff8:	push   0x26
  420ffa:	cs retf 0x452f
  420ffe:	dec    ecx
  420fff:	jle    0x420ffc
  421001:	add    edi,DWORD PTR [ecx]
  421003:	pusha  
  421004:	and    BYTE PTR [ecx-0x8705632],ch
  42100a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42100b:	les    edi,FWORD PTR [edi+0x2d]
  42100e:	sub    al,0x8c
  421010:	jns    0x42103e
  421012:	jnp    0x420fdb
  421014:	pushf  
  421015:	sub    BYTE PTR [eax+0x1126afb2],cl
  42101b:	stos   BYTE PTR es:[edi],al
  42101c:	imul   edx,edx,0x99f83e7d
  421022:	push   cs
  421023:	xchg   DWORD PTR [esp+ecx*1+0xe0e12df],edi
  42102a:	sbb    eax,0xe09ed69e
  42102f:	adc    eax,0xbe921b63
  421034:	repnz aad 0x6c
  421037:	lods   eax,DWORD PTR ds:[esi]
  421038:	hlt    
  421039:	xchg   edx,eax
  42103a:	call   0xb841:0x2b26a1b1
  421041:	aaa    
  421042:	leave  
  421043:	aas    
  421044:	fsubr  QWORD PTR [eax]
  421046:	clc    
  421047:	mov    esp,DWORD PTR [ecx]
  421049:	imul   esp,esp,0x44
  42104c:	fs sbb al,0x28
  42104f:	scas   eax,DWORD PTR es:[edi]
  421050:	cmp    eax,0xa1591294
  421055:	or     esp,DWORD PTR [eax+0x7240e05c]
  42105b:	arpl   WORD PTR [edx+0x509ce213],di
  421061:	sahf   
  421062:	shl    BYTE PTR [bp+di],0x52
  421066:	shl    DWORD PTR [edx],0xe2
  421069:	(bad)  
  42106a:	es xchg ecx,eax
  42106c:	add    ebp,DWORD PTR [esi-0x701c6136]
  421072:	xchg   esp,eax
  421073:	pushf  
  421074:	mov    dh,0x9d
  421076:	stc    
  421077:	sbb    bl,ah
  421079:	or     eax,0xcc690662
  42107e:	std    
  42107f:	mov    ebx,0xc424f669
  421084:	cmp    bh,BYTE PTR [esi]
  421086:	or     BYTE PTR [ecx+0x558a0ead],dh
  42108c:	mov    al,ds:0x4d1fce27
  421091:	inc    edx
  421092:	sub    DWORD PTR [eax-0x1d],esp
  421095:	jmp    0x421049
  421097:	(bad)  
  421098:	push   ds
  421099:	adc    BYTE PTR [ebx+0x111c8648],bh
  42109f:	pop    ecx
  4210a0:	xchg   edi,eax
  4210a1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4210a2:	data16 mov al,ds:0x46087833
  4210a8:	add    DWORD PTR [edi+0x4c],edx
  4210ab:	fwait
  4210ac:	mov    eax,ds:0xca6a0fe
  4210b1:	adc    BYTE PTR [ebp-0x35e85be9],al
  4210b7:	lahf   
  4210b8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4210b9:	sub    BYTE PTR [esi],bl
  4210bb:	fwait
  4210bc:	hlt    
  4210bd:	imul   esp,DWORD PTR [ecx+0x1],0xffffffa9
  4210c1:	into   
  4210c2:	mov    dh,0xf8
  4210c4:	(bad)  
  4210c5:	(bad)  
  4210c6:	in     eax,dx
  4210c7:	inc    ebp
  4210c8:	mov    ds:0x20fb02ab,al
  4210cd:	jne    0x42107e
  4210cf:	mov    al,BYTE PTR [edi]
  4210d1:	push   ss
  4210d2:	mov    ebp,0x606ae458
  4210d7:	pop    ebp
  4210d8:	out    0xde,eax
  4210da:	enter  0xe6e2,0x74
  4210de:	repz and cl,cl
  4210e1:	xor    eax,0xd8ed7058
  4210e6:	in     eax,dx
  4210e7:	or     esi,DWORD PTR [ecx-0x12]
  4210ea:	(bad)  
  4210eb:	retf   0x1564
  4210ee:	(bad)  
  4210ef:	adc    bl,BYTE PTR [edi]
  4210f1:	jecxz  0x421165
  4210f3:	adc    al,0xbf
  4210f5:	push   ss
  4210f6:	lods   eax,DWORD PTR ds:[esi]
  4210f7:	jo     0x4210d6
  4210f9:	pop    edx
  4210fa:	iret   
  4210fb:	lahf   
  4210fc:	adc    al,0x59
  4210fe:	std    
  4210ff:	mov    cl,0xb9
  421101:	inc    edx
  421102:	xchg   edx,eax
  421103:	loop   0x421132
  421105:	(bad)  
  421106:	rol    DWORD PTR [ecx+0x60],cl
  421109:	xchg   ecx,eax
  42110a:	adc    eax,0xd539afdb
  42110f:	and    al,BYTE PTR [ecx]
  421111:	pop    eax
  421112:	add    eax,0x2b883a8d
  421117:	and    DWORD PTR [eax],ecx
  421119:	leave  
  42111a:	pop    edi
  42111b:	mov    ecx,0xd67bd2e6
  421120:	(bad)  
  421121:	cmc    
  421122:	jne    0x42110e
  421124:	(bad)  
  421125:	in     al,dx
  421126:	scas   eax,DWORD PTR es:[edi]
  421127:	inc    eax
  421128:	stc    
  421129:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42112a:	xchg   ecx,eax
  42112b:	cmp    al,0xe9
  42112d:	mov    ds:0x2759759d,al
  421132:	add    ecx,ebx
  421134:	sar    DWORD PTR [edx-0x2872c757],cl
  42113a:	adc    BYTE PTR [ecx-0x63fab638],al
  421140:	mov    dl,0x73
  421142:	pop    eax
  421143:	adc    dh,BYTE PTR [ebx-0x27]
  421146:	imul   ebx,eax,0xd01d8d2a
  42114c:	and    esp,DWORD PTR [ebp-0x4c779702]
  421152:	and    cl,BYTE PTR ds:0xcf30bda2
  421158:	lods   al,BYTE PTR ds:[si]
  42115a:	xor    al,0xac
  42115c:	cmp    al,0xc9
  42115e:	sub    eax,0x5996eb73
  421163:	arpl   WORD PTR [ebp+0x37],bp
  421166:	shl    DWORD PTR [ebx],cl
  421168:	jne    0x4211b9
  42116a:	adc    DWORD PTR [edi-0x3f],esp
  42116d:	icebp  
  42116e:	repz jge 0x42115f
  421171:	push   ebx
  421172:	mov    dh,0xae
  421174:	pop    es
  421175:	push   edx
  421176:	out    dx,al
  421177:	cdq    
  421178:	mov    edx,0xfcb64d56
  42117d:	jmp    0xc90f:0x87a3667e
  421184:	outs   dx,DWORD PTR ds:[esi]
  421185:	adc    DWORD PTR [ecx-0x17],edi
  421188:	and    ch,BYTE PTR [edx+ecx*4-0x5e]
  42118c:	fwait
  42118d:	popa   
  42118e:	stos   BYTE PTR es:[edi],al
  42118f:	ins    BYTE PTR es:[edi],dx
  421190:	mov    ds:0xa04aae06,eax
  421195:	call   0xc2b52388
  42119a:	add    ch,BYTE PTR [esi+0x57311be]
  4211a0:	adc    al,0x30
  4211a2:	fld    DWORD PTR [ebx+0x21f3560f]
  4211a9:	lock and BYTE PTR [edi+0xeaea0c8],0x25
  4211b1:	cwde   
  4211b2:	jecxz  0x4211aa
  4211b4:	sub    al,0xd
  4211b6:	iret   
  4211b7:	sub    eax,0x87cd983
  4211bc:	test   esi,ebp
  4211be:	int    0x55
  4211c0:	mov    dh,0x97
  4211c2:	add    eax,0x2ed8548a
  4211c7:	outs   dx,DWORD PTR ds:[esi]
  4211c8:	adc    edi,DWORD PTR [eax+0x38]
  4211cb:	cmp    al,0x15
  4211cd:	mov    esp,0x8af9c203
  4211d2:	leave  
  4211d3:	cli    
  4211d4:	lahf   
  4211d5:	gs lahf 
  4211d7:	dec    edx
  4211d8:	leave  
  4211d9:	pop    esi
  4211da:	aad    0x9f
  4211dc:	push   ecx
  4211dd:	fistp  DWORD PTR [edi]
  4211df:	seta   BYTE PTR [edi]
  4211e2:	jnp    0x421198
  4211e4:	xchg   BYTE PTR [esi+0x512a19c4],bl
  4211ea:	and    DWORD PTR [ebx],edi
  4211ec:	jecxz  0x42119e
  4211ee:	push   ecx
  4211ef:	(bad)  
  4211f0:	leave  
  4211f1:	shr    ch,cl
  4211f3:	push   ebp
  4211f4:	es sub al,0xaa
  4211f7:	mov    bh,0xdf
  4211f9:	push   ss
  4211fa:	add    ch,al
  4211fc:	sar    DWORD PTR [eax],cl
  4211fe:	(bad)  
  4211ff:	xchg   ebp,eax
  421200:	sbb    DWORD PTR [esp+ecx*4-0x297c42ed],esp
  421207:	cmp    eax,0xb7900e6c
  42120c:	xchg   edx,eax
  42120d:	aas    
  42120e:	xchg   ebp,edi
  421210:	(bad)
  421213:	mov    eax,0xca87a103
  421218:	push   esi
  421219:	jge    0x4211fb
  42121b:	fsubr  st(1),st
  42121d:	and    ecx,DWORD PTR ds:0x67170b82
  421223:	int    0x46
  421225:	ins    BYTE PTR es:[edi],dx
  421226:	mov    esi,0x53831829
  42122b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42122c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42122d:	jo     0x421212
  42122f:	sbb    DWORD PTR [ebp+0x4a],ecx
  421232:	call   0x7df8:0xa0088ebb
  421239:	icebp  
  42123a:	inc    edx
  42123b:	adc    al,0x47
  42123d:	sub    DWORD PTR [ebx],0x58
  421240:	pop    esi
  421241:	addr16 out 0xa0,eax
  421244:	cmp    BYTE PTR [edi],ah
  421246:	ret    
  421247:	xchg   ebx,eax
  421248:	out    0x64,eax
  42124a:	ss js  0x42123c
  42124d:	pop    edi
  42124e:	xchg   esp,eax
  42124f:	pop    esp
  421250:	fcomp  QWORD PTR [esi-0x4ad4152f]
  421256:	scas   al,BYTE PTR es:[edi]
  421257:	and    eax,0xae95ea74
  42125c:	cmp    esi,edx
  42125e:	cdq    
  42125f:	jp     0x42126b
  421261:	jb     0x421255
  421263:	(bad)  
  421264:	pop    ecx
  421265:	fwait
  421266:	mov    al,ds:0xac062480
  42126b:	xor    eax,0xbe1ac4b6
  421270:	add    eax,0xc99b0615
  421275:	div    DWORD PTR [esi]
  421277:	ret    0xdd87
  42127a:	imul   ebx,DWORD PTR [ebx+0x62ea0b90],0xad819d4b
  421284:	xchg   edx,eax
  421285:	imul   edx,DWORD PTR [edx-0x53],0xffffffbe
  421289:	or     eax,0x18f9a575
  42128e:	hlt    
  42128f:	push   edi
  421290:	dec    ecx
  421291:	cmc    
  421292:	jl     0x4212f0
  421294:	inc    edx
  421295:	dec    eax
  421296:	je     0x421286
  421298:	dec    esi
  421299:	jbe    0x42122c
  42129b:	dec    eax
  42129c:	sub    dh,BYTE PTR [edi]
  42129e:	xchg   esi,eax
  42129f:	push   edi
  4212a0:	repz je 0x4212ad
  4212a3:	out    dx,al
  4212a4:	or     ebx,DWORD PTR [ecx]
  4212a6:	inc    ebp
  4212a7:	jl     0x4212bb
  4212a9:	jbe    0x42129d
  4212ab:	dec    ebx
  4212ac:	addr16 in al,dx
  4212ae:	rcl    DWORD PTR [edx],1
  4212b0:	(bad)  
  4212b1:	cmc    
  4212b2:	inc    ebx
  4212b3:	push   es
  4212b4:	mov    cl,al
  4212b6:	ret    
  4212b7:	(bad)  
  4212b8:	mov    bh,0x5d
  4212ba:	sub    BYTE PTR [edi-0x21],dh
  4212bd:	das    
  4212be:	popf   
  4212bf:	fadd   DWORD PTR [ebx-0x51db407d]
  4212c5:	mov    esi,0xfafd519c
  4212ca:	mov    DWORD PTR [ecx+0x63c2f891],0x41941b4c
  4212d4:	loope  0x4212a7
  4212d6:	cs ins BYTE PTR es:[edi],dx
  4212d8:	icebp  
  4212d9:	icebp  
  4212da:	clc    
  4212db:	sub    BYTE PTR [esi+0x35],bl
  4212de:	xor    DWORD PTR [edx+0x39b94759],esi
  4212e4:	cmc    
  4212e5:	in     al,dx
  4212e6:	push   esi
  4212e7:	jae    0x421299
  4212e9:	dec    ebx
  4212ea:	push   ss
  4212eb:	out    dx,eax
  4212ec:	lds    edx,FWORD PTR [edx]
  4212ee:	or     DWORD PTR [edx+0x526a5e35],0xe4fb862d
  4212f8:	adc    DWORD PTR [edi-0x3649c0ef],esp
  4212fe:	inc    edx
  4212ff:	mov    ds:0xf1c8c043,eax
  421304:	adc    BYTE PTR [edx+0x9f9f1cc],cl
  42130a:	mov    esp,0xf1db7113
  42130f:	in     al,dx
  421310:	aas    
  421311:	mov    ebp,0xf92b3e77
  421316:	data16 mov ds:0x7f8b2f57,al
  42131c:	sub    eax,0x9bf0b71e
  421321:	inc    eax
  421322:	push   0xffffffc2
  421324:	aas    
  421325:	push   ebx
  421326:	imul   esp,ecx,0xb62f447e
  42132c:	dec    ebx
  42132d:	sti    
  42132e:	inc    edx
  42132f:	push   edx
  421330:	(bad)  
  421331:	sti    
  421332:	jae    0x42138e
  421334:	cs sub al,0x8f
  421337:	or     eax,0x6f370ddd
  42133c:	popa   
  42133d:	lods   al,BYTE PTR ds:[esi]
  42133e:	test   DWORD PTR [ebx+0x3a508825],esi
  421344:	mov    BYTE PTR [edi+0x45dd5ad8],ch
  42134a:	xor    eax,0x1f5af8c5
  42134f:	push   eax
  421350:	mov    eax,ds:0x204effee
  421355:	jmp    0x1d3e:0x68dbd517
  42135c:	xchg   edx,eax
  42135d:	mov    ds:0x8380354e,al
  421362:	lds    edi,FWORD PTR [edi-0x75]
  421365:	jno    0x42132b
  421367:	push   ebx
  421368:	aaa    
  421369:	xchg   ecx,eax
  42136a:	enter  0xa8d,0xc9
  42136e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42136f:	xchg   ebp,eax
  421370:	xchg   cl,ah
  421372:	pop    esi
  421373:	pop    ss
  421374:	mov    ebx,0x2024416f
  421379:	ins    BYTE PTR es:[edi],dx
  42137a:	jnp    0x4213f0
  42137c:	test   al,0x6e
  42137e:	mov    ch,0xfa
  421380:	push   ebx
  421381:	stc    
  421382:	mov    al,BYTE PTR [edx+edx*8-0x1bc7ad59]
  421389:	push   0x23a0c19f
  42138e:	dec    ebp
  42138f:	add    ch,BYTE PTR [ecx-0x595c49c4]
  421395:	dec    edi
  421396:	ficomp DWORD PTR [ecx-0x3f]
  421399:	jb     0x4213cf
  42139b:	xchg   BYTE PTR [edi-0x70a22d36],ah
  4213a1:	(bad)  
  4213a2:	mov    ?,WORD PTR [esp+eiz*2]
  4213a5:	adc    DWORD PTR [edx-0x305f29d1],edi
  4213ab:	jmp    0x75d48ae6
  4213b0:	push   ds
  4213b1:	mov    ?,WORD PTR [esi-0x29]
  4213b4:	in     eax,dx
  4213b5:	cli    
  4213b6:	fucomip st,st(0)
  4213b8:	jmp    0x4213b5
  4213ba:	ins    DWORD PTR es:[edi],dx
  4213bb:	adc    al,0xb2
  4213bd:	popf   
  4213be:	xor    eax,0xe1ded755
  4213c3:	xchg   ebp,eax
  4213c4:	mov    al,ds:0x1a3d4918
  4213c9:	js     0x42137c
  4213cb:	push   ds
  4213cc:	sbb    DWORD PTR [eax+0x29],edx
  4213cf:	out    dx,eax
  4213d0:	or     edx,DWORD PTR [ebp+0x4b]
  4213d3:	sbb    esp,DWORD PTR [esi-0x6495f45]
  4213d9:	mov    eax,ds:0x39ea98e6
  4213de:	retf   
  4213df:	pop    esi
  4213e0:	(bad)  
  4213e1:	std    
  4213e2:	add    BYTE PTR [edx-0x6],dl
  4213e5:	push   ss
  4213e6:	stc    
  4213e7:	sbb    ah,BYTE PTR [ecx+0x48]
  4213ea:	mov    esi,0x7cda39ef
  4213ef:	inc    esi
  4213f0:	les    eax,FWORD PTR [ebx-0x23319859]
  4213f6:	mov    ebx,0x39861aaf
  4213fb:	int    0x6f
  4213fd:	ds (bad) 
  4213ff:	loope  0x421400
  421401:	retf   
  421402:	mov    ah,0x13
  421404:	add    bh,al
  421406:	pop    ecx
  421407:	mov    ch,BYTE PTR [eiz*4-0x118dba7f]
  42140e:	iret   
  42140f:	fadd   DWORD PTR ds:0x1272de69
  421415:	mov    eax,0x3016c5b7
  42141a:	lahf   
  42141b:	out    0x6a,al
  42141d:	gs xchg esi,eax
  42141f:	dec    esp
  421420:	sub    al,0xc1
  421422:	and    bh,BYTE PTR [edx+0x8]
  421425:	cmp    DWORD PTR [edi-0x597c4642],ecx
  42142b:	sub    al,0x3b
  42142d:	add    eax,esi
  42142f:	je     0x42141f
  421431:	call   FWORD PTR [esi+edx*8]
  421434:	xchg   ebp,eax
  421435:	rcl    bl,cl
  421437:	add    al,0xde
  421439:	add    eax,0xc7a29021
  42143e:	lea    ebp,[ecx-0x2b]
  421441:	xchg   ebp,eax
  421442:	pusha  
  421443:	pop    esi
  421444:	adc    ebp,edx
  421446:	jge    0x421496
  421448:	shl    esi,cl
  42144a:	dec    esi
  42144b:	sbb    bl,BYTE PTR [ebp-0xa2e23c4]
  421451:	ret    0x292d
  421454:	mov    ds:0x745d5544,al
  421459:	push   edx
  42145a:	out    0x83,eax
  42145c:	call   0xdff4fdad
  421461:	ds retf 
  421463:	retf   0xabc
  421466:	or     BYTE PTR [ebx],bl
  421468:	add    eax,0x558a2158
  42146d:	int    0x74
  42146f:	or     ecx,0x94abc0b1
  421475:	mov    WORD PTR ds:0xb20eaf8c,fs
  42147b:	or     al,0xd7
  42147d:	popf   
  42147e:	adc    BYTE PTR [esp+edi*2-0x4852e380],bh
  421485:	loope  0x4214a5
  421487:	sar    bl,1
  421489:	hlt    
  42148a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42148b:	mov    al,0xef
  42148d:	xchg   esp,eax
  42148e:	jmp    0x421414
  421490:	jle    0x42146a
  421492:	out    0xd2,al
  421494:	into   
  421495:	or     eax,0x3952186b
  42149a:	mov    ah,0x5
  42149c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42149d:	cmc    
  42149e:	mov    edi,0x92c793a9
  4214a3:	jle    0x42143a
  4214a5:	daa    
  4214a6:	xor    BYTE PTR [ebx+0x21],al
  4214a9:	and    dl,BYTE PTR [edx+edi*1]
  4214ac:	cmp    dh,bh
  4214ae:	jo     0x4214f6
  4214b0:	test   al,0x4d
  4214b2:	iret   
  4214b3:	aam    0x1b
  4214b5:	mov    esp,0xd87820e7
  4214ba:	or     dl,BYTE PTR [ebx+edx*1-0x29b0e8df]
  4214c1:	cli    
  4214c2:	out    0xd7,al
  4214c4:	mov    dh,0x4e
  4214c6:	and    ah,bh
  4214c8:	jl     0x4214a0
  4214ca:	mov    esi,0x7efc652f
  4214cf:	add    eax,DWORD PTR [eax+0x14]
  4214d2:	pusha  
  4214d3:	test   al,0x8e
  4214d5:	sub    bl,BYTE PTR [ecx]
  4214d7:	mov    WORD PTR [edx+0x2d8af779],ss
  4214dd:	and    eax,0x8d095291
  4214e2:	mov    ecx,0x791d8161
  4214e7:	pop    ds
  4214e8:	adc    ebp,DWORD PTR [eax+0x71]
  4214eb:	aas    
  4214ec:	adc    edx,DWORD PTR [ebx+0x7d35d066]
  4214f2:	in     eax,dx
  4214f3:	add    ebx,DWORD PTR [ebx]
  4214f5:	cli    
  4214f6:	push   esi
  4214f7:	enter  0x59c,0x1c
  4214fb:	fsubp  st(1),st
  4214fd:	std    
  4214fe:	xor    DWORD PTR [edx+0x55],edx
  421501:	psubb  mm7,QWORD PTR [edx+0x1171cbcf]
  421508:	das    
  421509:	cmp    al,0x69
  42150b:	mov    cl,0xe5
  42150d:	(bad)  
  42150f:	xchg   ecx,eax
  421510:	test   BYTE PTR [edi],0x14
  421513:	(bad)  
  421514:	jnp    0x42158b
  421516:	mov    al,0x62
  421518:	dec    ecx
  421519:	out    0xa2,al
  42151b:	pop    ss
  42151c:	adc    BYTE PTR [edx-0x45],dh
  42151f:	mov    bl,0xd8
  421521:	mov    ch,BYTE PTR [esi+0x64aad983]
  421527:	or     dl,BYTE PTR [edi]
  421529:	lods   al,BYTE PTR ds:[esi]
  42152a:	out    dx,eax
  42152b:	add    eax,0x925149ef
  421530:	cmp    DWORD PTR [ebp+ecx*2+0x7dac0ff9],esp
  421537:	xchg   ecx,eax
  421538:	aaa    
  421539:	stc    
  42153a:	mov    ebx,0xfa3e658a
  42153f:	add    edx,DWORD PTR [ecx]
  421541:	mov    dh,0x55
  421543:	inc    esp
  421544:	pop    edx
  421545:	and    dh,0xd6
  421548:	jge    0x4214d9
  42154a:	cld    
  42154b:	dec    edx
  42154c:	jo     0x421537
  42154e:	xchg   DWORD PTR [ecx-0x4f],esi
  421551:	(bad)  
  421552:	iret   
  421553:	adc    eax,0x5145a0fb
  421558:	jg     0x4215c5
  42155a:	sbb    al,0x27
  42155c:	loope  0x4215dc
  42155e:	cli    
  42155f:	imul   edx,esi,0xd82179c
  421565:	ja     0x4214fe
  421567:	sub    ebx,DWORD PTR [edx+0x3f]
  42156a:	xor    al,0xa
  42156c:	stos   DWORD PTR es:[edi],eax
  42156d:	aad    0xfb
  42156f:	mov    eax,edx
  421571:	popf   
  421572:	pusha  
  421573:	sub    DWORD PTR [ebp-0x7b],edi
  421576:	mov    WORD PTR [eax+0x6163f1c2],?
  42157c:	clc    
  42157d:	(bad)  
  42157e:	in     eax,dx
  42157f:	cmc    
  421580:	sub    al,0x9d
  421582:	xchg   DWORD PTR [edi],esp
  421584:	test   al,0xa4
  421586:	xchg   BYTE PTR [edx-0x5a],ah
  421589:	cwde   
  42158a:	fmul   st,st(1)
  42158c:	sbb    dh,dl
  42158e:	xchg   ecx,eax
  42158f:	sahf   
  421590:	(bad)  
  421591:	sbb    DWORD PTR [edx],ebp
  421593:	add    al,0x67
  421595:	inc    ebx
  421596:	and    bh,dl
  421598:	push   esp
  421599:	dec    edi
  42159a:	pop    ss
  42159b:	xchg   ecx,eax
  42159c:	or     al,0xa2
  42159e:	stos   DWORD PTR es:[edi],eax
  42159f:	test   BYTE PTR [esi-0x1fc89c97],dl
  4215a5:	mov    eax,ds:0xaa5ac682
  4215aa:	cs pop eax
  4215ac:	(bad)  
  4215ad:	cwde   
  4215ae:	test   BYTE PTR [edi],bl
  4215b0:	popa   
  4215b1:	ds pop ecx
  4215b3:	clc    
  4215b4:	or     bh,BYTE PTR [ebx+ebx*1+0x616ed783]
  4215bb:	cs scas al,BYTE PTR es:[edi]
  4215bd:	dec    edi
  4215be:	jg     0x421633
  4215c0:	inc    ebx
  4215c1:	hlt    
  4215c2:	test   al,0x57
  4215c4:	icebp  
  4215c5:	pop    ebx
  4215c6:	mov    DWORD PTR [ecx],edi
  4215c8:	ret    
  4215c9:	sbb    DWORD PTR [eax+0x52ef71f],esp
  4215cf:	mov    DWORD PTR ds:0xb6fcd5c9,eax
  4215d5:	fld    QWORD PTR [esi-0x12]
  4215d8:	sbb    al,0xeb
  4215da:	xchg   ecx,eax
  4215db:	push   esi
  4215dc:	mov    eax,ds:0x28466d8f
  4215e1:	fidiv  WORD PTR [ebx+0x6824d2a7]
  4215e7:	mov    WORD PTR [eax],?
  4215e9:	inc    edx
  4215ea:	ret    0x5174
  4215ed:	jnp    0x4215ce
  4215ef:	pop    ebp
  4215f0:	push   esi
  4215f1:	int    0xe1
  4215f3:	dec    esp
  4215f4:	mov    ah,0x2f
  4215f6:	xchg   ebx,eax
  4215f7:	pop    esp
  4215f8:	(bad)  [ecx*1-0x38ac649a]
  4215ff:	mov    ecx,0x80f33d23
  421604:	ss dec ebx
  421606:	cmc    
  421607:	outs   dx,BYTE PTR ds:[esi]
  421608:	pop    ebx
  421609:	mov    bh,0xd2
  42160b:	sub    DWORD PTR [edx-0x1b4c5dcb],ecx
  421611:	xchg   edi,eax
  421612:	adc    eax,0xa590ae96
  421617:	or     BYTE PTR [ebx+0x688c4e7e],bh
  42161d:	out    dx,eax
  42161e:	jp     0x4215e5
  421620:	and    eax,0x7f3fca46
  421625:	push   edi
  421626:	ss cwde 
  421628:	jno    0x421611
  42162a:	repz push esi
  42162c:	lahf   
  42162d:	es cs pop ds
  421630:	mov    eax,ds:0x83f438a4
  421635:	pop    esi
  421636:	adc    cl,bh
  421638:	push   0x5e
  42163a:	sbb    ebx,eax
  42163c:	ins    DWORD PTR es:[edi],dx
  42163d:	ret    0x2df6
  421640:	pop    ecx
  421641:	popa   
  421642:	and    dh,cl
  421644:	mov    BYTE PTR [ecx+0x17],cl
  421647:	test   eax,0xd060c3fc
  42164c:	fmul   QWORD PTR [ebx-0x6d7a8011]
  421652:	jo     0x42165f
  421654:	and    eax,DWORD PTR [ebp-0x1]
  421657:	jae    0x421621
  421659:	push   ds
  42165a:	ret    0xe4cc
  42165d:	push   ecx
  42165e:	inc    eax
  42165f:	push   cs
  421660:	sbb    al,0x17
  421662:	shr    ch,1
  421664:	mov    ch,0x6e
  421666:	test   BYTE PTR [edi-0x12e08ea8],dl
  42166c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42166d:	das    
  42166e:	jne    0x42165f
  421670:	mov    ch,0xc2
  421672:	addr16 (bad) 
  421674:	xor    edi,DWORD PTR [eax+eiz*2+0x5274535d]
  42167b:	mov    ds:0x328e47d3,al
  421680:	mov    DWORD PTR [edi+0x4f],ebp
  421683:	pop    ss
  421684:	adc    BYTE PTR [ecx-0x125f8e4a],0x42
  42168b:	(bad)  
  42168c:	out    0xc1,eax
  42168e:	cmp    eax,0x35a3d343
  421693:	push   ecx
  421694:	mul    DWORD PTR [edi]
  421696:	mov    ah,0x9a
  421698:	mov    dl,0xd4
  42169a:	push   esi
  42169b:	mov    al,0x7f
  42169d:	lds    ebx,FWORD PTR [edx-0x1e]
  4216a0:	(bad)  
  4216a1:	fiadd  WORD PTR [eax+0x706ea506]
  4216a7:	cmp    esi,DWORD PTR [ecx+ebp*4+0x1]
  4216ab:	cmp    al,0x8f
  4216ad:	and    edi,DWORD PTR [esp+edi*1+0x32cd2932]
  4216b4:	jnp    0x42171b
  4216b6:	(bad)  ds:0x948fc0a0
  4216bc:	fisttp QWORD PTR [ebx+ecx*8]
  4216bf:	lock xchg esp,eax
  4216c1:	dec    eax
  4216c2:	sbb    eax,0xdae2c43e
  4216c7:	or     DWORD PTR [ebx+ecx*8+0x38],ebp
  4216cb:	jecxz  0x4216df
  4216cd:	in     al,0xb8
  4216cf:	retf   
  4216d0:	or     BYTE PTR ds:0x9815e1d7,0xbe
  4216d7:	scas   eax,DWORD PTR es:[edi]
  4216d8:	or     eax,0x39943b01
  4216dd:	call   0xdb65:0x86eefd03
  4216e4:	bound  ebp,QWORD PTR [esi-0x5ed2d89a]
  4216ea:	sti    
  4216eb:	sub    eax,0x499b2d5e
  4216f0:	arpl   WORD PTR [eax+ebx*1-0x907608e],di
  4216f7:	dec    ebp
  4216f8:	pop    edi
  4216f9:	jle    0x4216e5
  4216fb:	pusha  
  4216fc:	hlt    
  4216fd:	dec    edi
  4216fe:	mov    ch,0xb7
  421700:	nop
  421701:	je     0x42169f
  421703:	mov    ds:0x81c024d6,eax
  421708:	mov    dl,BYTE PTR [edx-0x44ec914c]
  42170e:	shl    DWORD PTR [edi],cl
  421710:	int    0x75
  421712:	imul   edi,DWORD PTR [esi],0x52277a69
  421718:	xchg   esp,eax
  421719:	sub    esi,DWORD PTR [edx]
  42171b:	pushf  
  42171c:	int3   
  42171d:	in     al,dx
  42171e:	into   
  42171f:	pop    ebp
  421720:	lea    edi,[esi-0x45]
  421723:	retf   
  421724:	mov    ebp,0x15a02fd0
  421729:	push   edi
  42172a:	jbe    0x4216f8
  42172c:	xor    DWORD PTR [eax-0x2ade8b5d],edx
  421732:	push   esp
  421733:	addr16 mov eax,ds:0x595e
  421737:	push   ecx
  421738:	jmp    0xe2348a9b
  42173d:	jmp    0x5eba:0x7ba3ba37
  421744:	xor    BYTE PTR [eax],cl
  421746:	and    dh,bh
  421748:	and    eax,0x6cb6f3a0
  42174d:	arpl   WORD PTR [eax-0x70],ax
  421750:	imul   esp,DWORD PTR [ebp+0x42],0x68239c59
  421757:	aad    0x48
  421759:	pusha  
  42175a:	loop   0x42179b
  42175c:	jge    0x42176b
  42175e:	jg     0x4217a0
  421760:	push   ecx
  421761:	push   esp
  421762:	dec    ecx
  421763:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421764:	pop    ss
  421765:	jge    0x4217ce
  421767:	mov    edi,0xad32635
  42176c:	xchg   edx,eax
  42176d:	repnz and eax,0x595cea5d
  421773:	mov    cl,0x4f
  421775:	pop    es
  421776:	pop    edx
  421777:	sbb    BYTE PTR [edx+ebx*1+0x20fff5c1],0x6c
  42177f:	xchg   ecx,eax
  421780:	sub    al,0xb
  421782:	xchg   esi,eax
  421783:	jb     0x421737
  421785:	mov    bh,ah
  421787:	sub    eax,0x481d2a8e
  42178c:	and    BYTE PTR [edx-0x7e014dec],0x7c
  421793:	enter  0x261,0x7f
  421797:	aas    
  421798:	inc    ebx
  421799:	je     0x421748
  42179b:	ins    DWORD PTR es:[edi],dx
  42179c:	jle    0x4217bd
  42179e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42179f:	jge    0x4217fe
  4217a1:	jo     0x42173c
  4217a3:	fcmovnbe st,st(1)
  4217a5:	pop    esi
  4217a6:	jg     0x42176a
  4217a8:	cmp    esi,DWORD PTR [eax+edx*8]
  4217ab:	mov    edx,DWORD PTR ds:0x242a995e
  4217b1:	das    
  4217b2:	ret    0x98f9
  4217b5:	xchg   edi,eax
  4217b6:	xchg   esp,eax
  4217b7:	cld    
  4217b8:	jecxz  0x4217c0
  4217ba:	jne    0x421750
  4217bc:	mov    al,ah
  4217be:	pop    es
  4217bf:	arpl   WORD PTR ds:0x70d8af60,ax
  4217c5:	test   eax,0x6ba130dd
  4217ca:	inc    ebx
  4217cb:	push   0x78
  4217cd:	loop   0x4217e3
  4217cf:	sub    dh,bh
  4217d1:	js     0x4217a4
  4217d3:	out    dx,al
  4217d4:	mov    ebp,0xcd7d0441
  4217d9:	dec    ebp
  4217da:	sbb    eax,0x1bc86863
  4217df:	or     bl,BYTE PTR [ebp-0x25e5e449]
  4217e5:	sub    DWORD PTR [ecx-0x6530fd39],ebx
  4217eb:	(bad)  
  4217ec:	pop    ds
  4217ed:	in     al,0x2b
  4217ef:	pop    es
  4217f0:	xchg   esp,eax
  4217f1:	test   DWORD PTR [ebx-0x47],ebx
  4217f4:	xchg   DWORD PTR [ebx-0x68],edx
  4217f7:	repnz (bad) 
  4217f9:	jnp    0x421782
  4217fb:	lods   al,BYTE PTR ds:[esi]
  4217fc:	or     eax,0x54
  4217ff:	je     0x421821
  421801:	jmp    0x4217b2
  421803:	gs push edx
  421805:	mov    cl,0xaf
  421807:	js     0x42186c
  421809:	mov    eax,ds:0xce12a76
  42180e:	imul   esp,DWORD PTR [eax+ebx*1-0x7f],0x9b604be9
  421816:	mov    al,ds:0xe75cbd39
  42181b:	dec    eax
  42181c:	scas   eax,DWORD PTR es:[edi]
  42181d:	xchg   ebp,eax
  42181e:	addr16 nop
  421820:	mov    dh,0xa1
  421822:	adc    DWORD PTR [ecx-0x6b5a09f5],ebx
  421828:	jae    0x421811
  42182a:	les    edx,FWORD PTR [ecx-0x75]
  42182d:	adc    al,0x3a
  42182f:	xchg   edx,eax
  421830:	add    al,0xfa
  421832:	cmp    eax,0x872085f3
  421837:	sbb    edx,DWORD PTR [eax+0x40]
  42183a:	out    0x17,al
  42183c:	and    DWORD PTR [ebx+0xc71724a],0xffffff8e
  421843:	xchg   edi,eax
  421844:	or     al,0x38
  421846:	pop    ecx
  421847:	sbb    eax,0x9b66fd19
  42184c:	pop    ebp
  42184d:	xor    eax,0x19fced5
  421852:	in     eax,dx
  421853:	push   cs
  421854:	sub    ebx,DWORD PTR [esi+0x20]
  421857:	in     eax,0xaa
  421859:	xor    BYTE PTR [ecx-0x6b],ch
  42185c:	stos   BYTE PTR es:[edi],al
  42185d:	int3   
  42185e:	cmp    edx,edi
  421860:	(bad)  
  421861:	test   al,0xa4
  421863:	mov    al,ds:0x63472fa2
  421868:	loopne 0x42183a
  42186a:	ins    DWORD PTR es:[edi],dx
  42186b:	loopne 0x421880
  42186d:	imul   edx,DWORD PTR [edi+0x54],0xffffff88
  421871:	dec    si
  421873:	dec    ebp
  421874:	dec    edx
  421875:	popf   
  421876:	imul   ecx,DWORD PTR [ecx],0xdd8567aa
  42187c:	(bad)  
  42187e:	jbe    0x42184f
  421880:	xor    DWORD PTR [edx],0x91771f0a
  421886:	stc    
  421887:	outs   dx,DWORD PTR ds:[esi]
  421888:	aas    
  421889:	js     0x42180e
  42188b:	mov    ecx,0xaa147f6e
  421890:	pop    edx
  421891:	jle    0x421898
  421893:	sub    BYTE PTR ss:[ebp-0x448fb37e],bl
  42189a:	stos   DWORD PTR es:[edi],eax
  42189b:	ins    BYTE PTR es:[edi],dx
  42189c:	outs   dx,DWORD PTR ds:[esi]
  42189d:	lahf   
  42189e:	sub    BYTE PTR [eax+0x3e],ch
  4218a1:	(bad)  
  4218a2:	jmp    0x4218af
  4218a4:	jno    0x421867
  4218a6:	mov    bh,0xe2
  4218a8:	scas   eax,DWORD PTR es:[edi]
  4218a9:	or     eax,0xfc1a8dc9
  4218ae:	out    dx,al
  4218af:	jge    0x421849
  4218b1:	sub    DWORD PTR [ebp+0x1ce4badb],edi
  4218b7:	inc    ecx
  4218b8:	push   0xc579379
  4218bd:	inc    ecx
  4218be:	jbe    0x4218c9
  4218c0:	pop    edx
  4218c1:	loope  0x421884
  4218c3:	jo     0x4218c0
  4218c5:	and    bh,BYTE PTR [ebx]
  4218c7:	cmp    esi,0x45948bca
  4218cd:	daa    
  4218ce:	xor    eax,0x4b98d96e
  4218d3:	shl    BYTE PTR [ebx-0x1a],cl
  4218d6:	sub    DWORD PTR [ecx-0x52],esi
  4218d9:	cwde   
  4218da:	clc    
  4218db:	jno    0x42192c
  4218dd:	das    
  4218de:	in     eax,0x32
  4218e0:	or     DWORD PTR [edi+0xaff3d0e],esi
  4218e6:	test   eax,0xed71fe3d
  4218eb:	addr16 data16 cld 
  4218ee:	jl     0x421966
  4218f0:	or     eax,0x7fddce25
  4218f5:	sub    ah,cl
  4218f7:	and    DWORD PTR [esi-0x41fc0d88],esi
  4218fd:	mov    ebx,0xbf1ce03f
  421902:	sub    DWORD PTR [esi+0x17d9e0d2],edi
  421908:	mov    cl,0x54
  42190a:	add    al,0x20
  42190c:	sti    
  42190d:	fwait
  42190e:	addr16 push es
  421910:	popf   
  421911:	dec    esp
  421912:	test   eax,0x50ba8a7a
  421917:	xchg   BYTE PTR [edx+0x2c],cl
  42191a:	into   
  42191b:	popf   
  42191c:	lods   al,BYTE PTR ds:[esi]
  42191d:	mov    ebx,0xffaa88b6
  421922:	inc    esp
  421923:	xchg   edx,eax
  421924:	inc    ecx
  421925:	add    eax,0x909bff83
  42192a:	rcl    DWORD PTR [eax+0x4fece8df],0x51
  421931:	sbb    ah,BYTE PTR [eax]
  421933:	pop    ebx
  421934:	inc    esi
  421935:	push   cs
  421936:	scas   eax,DWORD PTR es:[edi]
  421937:	js     0x42197b
  421939:	mov    esi,0x801a10a4
  42193e:	adc    al,0x64
  421940:	es mov eax,0x874bc51a
  421946:	retf   0xe23e
  421949:	mov    eax,ds:0xb29dd60d
  42194e:	jmp    0x70ef3f52
  421953:	mov    cl,0x23
  421955:	data16 jne 0x42195f
  421958:	arpl   cx,bp
  42195a:	test   al,0x3e
  42195c:	repz xor al,0x6
  42195f:	rcl    BYTE PTR [eax],cl
  421961:	int3   
  421962:	cmp    DWORD PTR [esi-0x3],0xffffffa3
  421966:	xor    eax,0xa2cb4919
  42196b:	aaa    
  42196c:	pop    edi
  42196d:	jae    0x421919
  42196f:	leave  
  421970:	mov    ds:0xd5de9c85,eax
  421975:	mov    eax,0x867deb09
  42197a:	xchg   ebp,eax
  42197b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42197c:	inc    edx
  42197d:	lods   al,BYTE PTR ds:[esi]
  42197e:	retf   
  42197f:	icebp  
  421980:	test   ah,ch
  421982:	fimul  DWORD PTR [edx+eax*2-0x7910b94]
  421989:	ficomp DWORD PTR [edx-0x6e029aee]
  42198f:	xchg   edi,eax
  421990:	mov    ch,0x4f
  421992:	push   ds
  421993:	aas    
  421994:	fcomip st,st(2)
  421996:	xchg   edi,eax
  421997:	fidiv  DWORD PTR [edx+edi*4-0x48e6a7e1]
  42199e:	aaa    
  42199f:	jb     0x421971
  4219a1:	lahf   
  4219a2:	push   cs
  4219a3:	aaa    
  4219a4:	je     0x421986
  4219a6:	fiadd  DWORD PTR [edi]
  4219a8:	cli    
  4219a9:	dec    ebx
  4219aa:	mov    WORD PTR [ecx+0x13],ss
  4219ad:	or     DWORD PTR [edi+0xde47872],esi
  4219b3:	mov    WORD PTR [ecx],cs
  4219b5:	cli    
  4219b6:	frstor [edx]
  4219b8:	cmp    edi,DWORD PTR [edx-0x73172361]
  4219be:	cld    
  4219bf:	je     0x4219cd
  4219c1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4219c2:	lods   eax,DWORD PTR ds:[esi]
  4219c3:	pop    ecx
  4219c4:	ret    
  4219c5:	jge    0x421a15
  4219c7:	aad    0x9f
  4219c9:	sar    BYTE PTR [ebx],0xbc
  4219cc:	jns    0x421995
  4219ce:	lods   eax,DWORD PTR ds:[esi]
  4219cf:	xor    ebx,DWORD PTR [eax+ebp*2-0xf]
  4219d3:	retf   
  4219d4:	mov    bh,0xa6
  4219d6:	add    cl,BYTE PTR [eax]
  4219d8:	pop    esp
  4219d9:	jnp    0x4219e9
  4219db:	inc    ecx
  4219dc:	int3   
  4219dd:	lods   al,BYTE PTR ds:[esi]
  4219de:	cld    
  4219df:	out    0x66,al
  4219e1:	inc    esp
  4219e2:	and    eax,0x5e4997f9
  4219e7:	push   esi
  4219e8:	fsub   DWORD PTR [ebx+0x6b3a352f]
  4219ee:	into   
  4219ef:	and    al,0xf7
  4219f1:	mov    al,0xb0
  4219f3:	hlt    
  4219f4:	adc    edi,DWORD PTR ds:[ebx-0x6b7305d5]
  4219fb:	cmc    
  4219fc:	push   0xffffffaf
  4219fe:	out    dx,eax
  4219ff:	stos   BYTE PTR es:[edi],al
  421a00:	pop    esi
  421a01:	push   es
  421a02:	dec    edi
  421a03:	outs   dx,DWORD PTR ds:[esi]
  421a04:	test   edx,ecx
  421a06:	jmp    0x421a2b
  421a08:	pop    esi
  421a09:	sub    DWORD PTR ds:0x38ae5ecf,ecx
  421a0f:	(bad)  [ecx+ebx*1]
  421a12:	cmp    DWORD PTR [ecx-0x66aafec1],edi
  421a18:	cld    
  421a19:	frstor [eax+0x30494309]
  421a1f:	sub    ebx,DWORD PTR [edx]
  421a21:	enter  0x8726,0xa0
  421a25:	jmp    0xe106:0x3dff6e20
  421a2c:	fcomp  DWORD PTR [ecx+0x6d]
  421a2f:	enter  0x2ea7,0xd
  421a33:	or     DWORD PTR [ecx],esp
  421a35:	inc    esp
  421a36:	pusha  
  421a37:	lock xchg esp,eax
  421a39:	(bad)  
  421a3a:	rcr    BYTE PTR [edi],cl
  421a3c:	adc    dl,al
  421a3e:	ficomp WORD PTR [eax-0x70]
  421a41:	jbe    0x421a50
  421a43:	lods   al,BYTE PTR ds:[esi]
  421a44:	jmp    0xb71f0c65
  421a49:	test   al,0x3a
  421a4b:	popf   
  421a4c:	arpl   WORD PTR [eax],cx
  421a4e:	xchg   esp,eax
  421a4f:	int3   
  421a50:	inc    ecx
  421a51:	cmp    dl,BYTE PTR [eax+ebx*4+0x2c36414b]
  421a58:	iret   
  421a59:	pop    ecx
  421a5a:	pop    ss
  421a5b:	or     al,0x15
  421a5d:	mov    eax,0xeb92a44
  421a62:	sub    BYTE PTR [ebx-0x41],bh
  421a65:	leave  
  421a66:	fstp   QWORD PTR [ebp+0x2e94019a]
  421a6c:	cmp    al,0xc1
  421a6e:	sub    eax,0x1509c64c
  421a73:	xchg   esp,eax
  421a74:	loope  0x421a2e
  421a76:	jg     0x421a2f
  421a78:	adc    eax,0x3de1d2d5
  421a7d:	cmp    al,0xa
  421a7f:	push   esp
  421a80:	aas    
  421a81:	lods   al,BYTE PTR ds:[esi]
  421a82:	outs   dx,DWORD PTR ds:[esi]
  421a83:	in     al,0x43
  421a85:	cmp    eax,0xd935c94f
  421a8a:	mov    eax,0xc6586dc0
  421a8f:	out    dx,al
  421a90:	xchg   DWORD PTR [eax+edi*8+0x2b],esi
  421a94:	pop    ss
  421a95:	rcl    DWORD PTR [eax+0x7c],cl
  421a98:	adc    BYTE PTR [eax+0x75],cl
  421a9b:	iret   
  421a9c:	(bad)  
  421a9d:	mov    ch,0x39
  421a9f:	ds js  0x421a7b
  421aa2:	mov    dh,0x1f
  421aa4:	mov    al,0x5
  421aa6:	mov    al,ds:0x237f414a
  421aab:	hlt    
  421aac:	or     BYTE PTR [ebp-0x3796c2c9],ah
  421ab2:	pop    eax
  421ab3:	jno    0x421a8b
  421ab5:	aam    0xae
  421ab7:	pop    eax
  421ab8:	aam    0x80
  421aba:	push   0x96802b1a
  421abf:	out    0xe8,al
  421ac1:	xor    BYTE PTR [ecx],al
  421ac3:	and    DWORD PTR [ebx+0x4d],esp
  421ac6:	out    0x89,al
  421ac8:	jmp    0x421af3
  421aca:	lods   al,BYTE PTR ds:[esi]
  421acb:	pushf  
  421acc:	push   edi
  421acd:	adc    eax,0x91a3862b
  421ad2:	lahf   
  421ad3:	mov    ebx,0x338bd74c
  421ad8:	sub    BYTE PTR [ebx+0x1d],0xda
  421adc:	and    BYTE PTR [ecx],bh
  421ade:	out    dx,eax
  421adf:	jne    0x421aa1
  421ae1:	pusha  
  421ae2:	and    dh,BYTE PTR [eax+ebp*4+0x5d]
  421ae6:	fisubr WORD PTR [esi]
  421ae8:	sub    DWORD PTR [esi-0x12f59845],0xda9bd586
  421af2:	mov    dh,0x78
  421af4:	imul   ecx,esi,0x7b
  421af7:	push   0xd3a649ab
  421afc:	mov    bh,0x40
  421afe:	xor    DWORD PTR [ecx+0x48],esi
  421b01:	(bad)  [edx-0x5f]
  421b04:	sub    ch,BYTE PTR [ebx]
  421b06:	retf   
  421b07:	xor    BYTE PTR [eax+eax*1],ch
  421b0a:	pop    esi
  421b0b:	(bad)  
  421b0c:	in     ax,dx
  421b0e:	xchg   esi,eax
  421b0f:	in     al,dx
  421b10:	pop    edx
  421b11:	push   eax
  421b12:	push   cs
  421b13:	dec    edi
  421b14:	pushf  
  421b15:	lods   eax,DWORD PTR ds:[esi]
  421b16:	inc    edi
  421b17:	adc    BYTE PTR [edi],al
  421b19:	xlat   BYTE PTR ds:[ebx]
  421b1a:	jae    0x421b83
  421b1c:	inc    esp
  421b1d:	enter  0x60b,0x9
  421b21:	stos   DWORD PTR es:[di],eax
  421b23:	add    eax,0x7bb1a689
  421b28:	outs   dx,BYTE PTR ds:[esi]
  421b29:	das    
  421b2a:	xor    eax,0xa5337b96
  421b2f:	outs   dx,BYTE PTR ds:[esi]
  421b30:	bound  edx,QWORD PTR [ecx-0x6b2d1891]
  421b36:	call   0xe034:0x2532988c
  421b3d:	mov    edx,0x40544607
  421b42:	cmp    al,0x9a
  421b44:	jne    0x421b97
  421b46:	cmp    BYTE PTR [edx-0x68],bl
  421b49:	xchg   DWORD PTR [eax],ebp
  421b4b:	hlt    
  421b4c:	push   ds
  421b4d:	shl    DWORD PTR [ecx+eiz*8+0x44],cl
  421b51:	push   esi
  421b52:	jnp    0x421b6c
  421b54:	dec    ebx
  421b55:	lods   eax,DWORD PTR ds:[esi]
  421b56:	lahf   
  421b57:	push   edi
  421b58:	ss daa 
  421b5a:	fld    DWORD PTR [edx+0x76]
  421b5d:	ret    0xf8b1
  421b60:	and    DWORD PTR [eax+ebx*2-0x2ac97274],esp
  421b67:	int3   
  421b68:	xchg   ebp,eax
  421b69:	pop    ecx
  421b6a:	cmp    eax,0xdc2a32a8
  421b6f:	loop   0x421b34
  421b71:	jle    0x421b6c
  421b73:	add    cl,ah
  421b75:	pop    ss
  421b76:	sub    eax,0x206251fb
  421b7b:	pop    esp
  421b7c:	pop    ds
  421b7d:	jge    0x421b24
  421b7f:	call   0xacaf30ee
  421b84:	popa   
  421b85:	test   al,0xbd
  421b87:	xor    al,0x64
  421b89:	sbb    al,0x86
  421b8b:	jp     0x421bc5
  421b8d:	lods   eax,DWORD PTR ds:[esi]
  421b8e:	dec    esp
  421b8f:	and    bl,0x8c
  421b92:	bnd jne 0x421b22
  421b95:	inc    esp
  421b96:	jae    0x421bbb
  421b98:	jp     0x421b7c
  421b9a:	mov    esi,gs
  421b9c:	retf   
  421b9d:	xchg   BYTE PTR [eax+0x545c31cf],al
  421ba3:	adc    ebp,DWORD PTR [ebx-0x4f]
  421ba6:	fxch   st(3)
  421ba8:	lods   al,BYTE PTR cs:[esi]
  421baa:	lock retf 
  421bac:	loope  0x421b94
  421bae:	pop    ebp
  421baf:	jge    0x421bcf
  421bb1:	ret    0x6572
  421bb4:	fwait
  421bb5:	sub    dl,0xf7
  421bb8:	test   BYTE PTR [edx-0x13c67c97],dl
  421bbe:	push   es
  421bbf:	and    eax,0x95de37bb
  421bc4:	sbb    BYTE PTR [esi-0x7b56810e],dl
  421bca:	out    0x19,eax
  421bcc:	fsubr  DWORD PTR [edx+0x73]
  421bcf:	js     0x421c41
  421bd1:	jp     0x421b76
  421bd3:	sub    eax,0x1ccb8509
  421bd8:	mov    gs,WORD PTR [edx]
  421bda:	jp     0x421bc2
  421bdc:	mov    bl,0xcb
  421bde:	pop    edi
  421bdf:	mov    cl,0x89
  421be1:	(bad)  
  421be2:	xlat   BYTE PTR ds:[ebx]
  421be3:	or     ch,BYTE PTR [edx+0x68dc138]
  421be9:	jno    0x421bb8
  421beb:	xor    dh,bl
  421bed:	je     0x421c53
  421bef:	jge    0x421c13
  421bf1:	cld    
  421bf2:	in     eax,0xe2
  421bf4:	add    BYTE PTR ds:0x111aba27,ch
  421bfa:	gs jae 0x421bd0
  421bfd:	ds loope 0x421bf5
  421c00:	inc    edi
  421c01:	adc    esp,ecx
  421c03:	sbb    DWORD PTR ds:0x8e4b1497,ebp
  421c09:	push   eax
  421c0a:	jp     0x421c26
  421c0c:	add    edi,esi
  421c0e:	push   0x42
  421c10:	push   esp
  421c11:	enter  0xb95a,0x5f
  421c15:	aaa    
  421c16:	dec    ecx
  421c17:	lock imul edx
  421c1a:	lds    ebp,FWORD PTR [ecx-0xc]
  421c1d:	pop    edx
  421c1e:	cmp    eax,0x2e531636
  421c23:	jae    0x421c3c
  421c25:	fst    DWORD PTR [edi]
  421c27:	jmp    0x421c3f
  421c29:	in     al,0xd2
  421c2b:	xchg   edi,eax
  421c2c:	push   ss
  421c2d:	iret   
  421c2e:	imul   esp,DWORD PTR [esi+0x59895f2b],0x2e
  421c35:	sbb    eax,0xcba77013
  421c3a:	(bad)  
  421c3c:	xchg   ebx,eax
  421c3d:	cmp    esp,DWORD PTR [ebx-0x42fa69a9]
  421c43:	inc    ebx
  421c44:	aad    0x99
  421c46:	dec    ecx
  421c47:	mov    edx,0xe84462fe
  421c4c:	ret    
  421c4d:	mov    dl,BYTE PTR [esi]
  421c4f:	in     eax,dx
  421c50:	pushf  
  421c51:	push   0x45
  421c53:	cdq    
  421c54:	mov    cl,0x43
  421c56:	jnp    0x421c51
  421c58:	aas    
  421c59:	mov    ds:0x9a39edfb,al
  421c5e:	mov    ebp,0x176f4b70
  421c63:	pop    ebp
  421c64:	mov    dl,0x22
  421c66:	popa   
  421c67:	or     DWORD PTR [ebx+eax*8+0x69c1f03f],ebx
  421c6e:	daa    
  421c6f:	lods   al,BYTE PTR ds:[esi]
  421c70:	clc    
  421c71:	sbb    DWORD PTR [edi-0x63],edx
  421c74:	rcr    BYTE PTR [edx-0x2c5cdfea],0x1f
  421c7b:	add    al,0xb6
  421c7d:	push   edx
  421c7e:	mov    eax,ds:0x9bbcca6c
  421c83:	fiadd  WORD PTR [edi+0x78280f72]
  421c89:	cmp    BYTE PTR [edi],0x68
  421c8c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421c8d:	out    0x8d,al
  421c8f:	cmp    DWORD PTR [edx-0x60],esp
  421c92:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421c93:	adc    al,0xbb
  421c95:	mov    al,0x5d
  421c97:	ins    BYTE PTR es:[edi],dx
  421c98:	mov    ds:0x9ebcc42c,eax
  421c9d:	mov    ebx,0x32d3e993
  421ca2:	mov    bh,BYTE PTR [ecx]
  421ca4:	into   
  421ca5:	adc    ebp,edi
  421ca7:	sti    
  421ca8:	jle    0x421cc5
  421caa:	jns    0x421cdc
  421cac:	ss pop edx
  421cae:	scas   eax,DWORD PTR es:[edi]
  421caf:	mov    dh,0x35
  421cb1:	sub    DWORD PTR [edi-0x3f7d3e3e],0x30
  421cb8:	or     DWORD PTR [ecx+0x2e4eb5f],edi
  421cbe:	and    BYTE PTR [edi],0x71
  421cc1:	and    BYTE PTR [eax+0x2119f884],dh
  421cc7:	lods   al,BYTE PTR ds:[esi]
  421cc8:	dec    eax
  421cc9:	ins    DWORD PTR es:[edi],dx
  421cca:	jb     0x421cb2
  421ccc:	loop   0x421c5f
  421cce:	jecxz  0x421c59
  421cd0:	hlt    
  421cd1:	jmp    0x17a3:0x1fae1bd9
  421cd8:	mov    bh,0x36
  421cda:	test   BYTE PTR [eax-0x1a],ch
  421cdd:	push   edx
  421cde:	loope  0x421c82
  421ce0:	cmp    DWORD PTR [edx],0x36551744
  421ce6:	aas    
  421ce7:	test   DWORD PTR [ebp-0x16e64c12],esp
  421ced:	leave  
  421cee:	add    eax,edx
  421cf0:	jns    0x421d21
  421cf2:	jbe    0x421d23
  421cf4:	je     0x421cac
  421cf6:	adc    ch,BYTE PTR [ebx-0x2f]
  421cf9:	xchg   esi,eax
  421cfa:	sub    BYTE PTR [ebx-0x68],al
  421cfd:	pop    ss
  421cfe:	mov    bh,cl
  421d00:	pop    ds
  421d01:	push   cs
  421d02:	pop    esi
  421d03:	add    bh,BYTE PTR [ebx-0x50]
  421d06:	or     BYTE PTR [edi],ah
  421d08:	fnstcw WORD PTR [edi-0x10]
  421d0b:	push   0xc3dba89c
  421d10:	dec    esi
  421d11:	jmp    0x3e76:0x1b592354
  421d18:	xchg   esi,eax
  421d19:	jo     0x421d1c
  421d1b:	push   cs
  421d1c:	jl     0x421d40
  421d1e:	bound  ecx,QWORD PTR [ecx]
  421d20:	fwait
  421d21:	xchg   edi,eax
  421d22:	iret   
  421d23:	xchg   edx,eax
  421d24:	inc    eax
  421d25:	sub    al,0x8a
  421d27:	and    DWORD PTR [ebx],ebx
  421d29:	add    eax,DWORD PTR [esi+0x7b]
  421d2c:	mov    esp,0x245a5430
  421d31:	ficom  DWORD PTR [edx-0x78abd298]
  421d37:	(bad)  
  421d38:	cwde   
  421d39:	mov    BYTE PTR ds:0x9682ef85,al
  421d3f:	pop    eax
  421d40:	sahf   
  421d41:	outs   dx,DWORD PTR ds:[esi]
  421d42:	push   es
  421d43:	or     esp,DWORD PTR [ecx+0x2a605fa1]
  421d49:	and    al,0xc3
  421d4b:	mov    dl,0xb2
  421d4d:	outs   dx,BYTE PTR ds:[esi]
  421d4e:	pop    edi
  421d4f:	enter  0x8944,0xae
  421d53:	jecxz  0x421ced
  421d55:	jae    0x421ce0
  421d57:	jecxz  0x421d94
  421d59:	or     eax,0xd5551ff4
  421d5e:	cdq    
  421d5f:	fsubr  QWORD PTR ds:0x5407ea4e
  421d65:	ss push ebx
  421d67:	ja     0x421d91
  421d69:	outs   dx,BYTE PTR ds:[esi]
  421d6a:	call   0x564:0x98d7ef1
  421d71:	cmp    dl,BYTE PTR [edx+0x7c]
  421d74:	outs   dx,DWORD PTR ds:[esi]
  421d75:	dec    ebx
  421d76:	dec    edx
  421d77:	cmp    DWORD PTR [edx+0x9],ecx
  421d7a:	adc    BYTE PTR [edi+0x79],0xb1
  421d7e:	and    al,0xc6
  421d80:	sbb    edi,DWORD PTR [eax+0x63]
  421d83:	mov    bh,0x6e
  421d85:	push   ebp
  421d86:	xchg   ebp,eax
  421d87:	or     edx,DWORD PTR [esi-0x29290d58]
  421d8d:	xor    BYTE PTR [eax-0x4101773c],cl
  421d93:	jge    0x421d5b
  421d95:	ret    0x6e62
  421d98:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421d99:	pushf  
  421d9a:	sbb    eax,0x9264aa9b
  421d9f:	sbb    al,BYTE PTR [esi]
  421da1:	stos   BYTE PTR es:[edi],al
  421da2:	mov    ds:0x5198c09d,eax
  421da7:	lods   al,BYTE PTR ds:[esi]
  421da8:	(bad)  
  421da9:	stc    
  421daa:	mov    WORD PTR [edi],es
  421dac:	and    esi,DWORD PTR [ebx-0x28]
  421daf:	xor    BYTE PTR [ebp+0x63a8f1ba],al
  421db5:	push   cs
  421db6:	das    
  421db7:	js     0x421e1a
  421db9:	fwait
  421dba:	push   ebp
  421dbb:	push   edi
  421dbc:	mov    DWORD PTR [esi+0x2bc4b713],ecx
  421dc2:	inc    ebx
  421dc3:	inc    esp
  421dc4:	aam    0xea
  421dc6:	shl    BYTE PTR [esi],1
  421dc8:	repnz ficomp DWORD PTR [ecx]
  421dcb:	add    DWORD PTR [esi],ecx
  421dcd:	mov    ds:0x9f8e1f36,al
  421dd2:	dec    edx
  421dd3:	adc    eax,0x82fc3c0c
  421dd8:	call   0x9821f752
  421ddd:	xchg   edi,eax
  421dde:	pop    es
  421ddf:	cwde   
  421de0:	cwde   
  421de1:	sub    eax,0x32041c65
  421de6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421de7:	mov    edx,0xee9e7344
  421dec:	jbe    0x421d9c
  421dee:	(bad)  
  421def:	je     0x421db4
  421df1:	sbb    ch,dh
  421df3:	ja     0x421e57
  421df5:	push   cs
  421df6:	adc    BYTE PTR [ebp-0x324d6b94],dl
  421dfc:	stos   BYTE PTR es:[edi],al
  421dfd:	or     edi,DWORD PTR [edx]
  421dff:	cdq    
  421e00:	nop
  421e01:	dec    ebp
  421e02:	push   esi
  421e03:	les    edx,FWORD PTR [edx+0x30]
  421e06:	cli    
  421e07:	fdiv   DWORD PTR [ecx-0x65]
  421e0a:	dec    edi
  421e0b:	fs or  al,0x37
  421e0e:	popa   
  421e0f:	adc    eax,esi
  421e11:	in     al,0x3b
  421e13:	retf   0xcdbe
  421e16:	and    DWORD PTR [eiz*1-0x5160a4e5],edx
  421e1d:	(bad)  
  421e1e:	fisubr DWORD PTR [ebx+0x31]
  421e21:	pop    ebx
  421e22:	xor    al,0x99
  421e24:	pop    es
  421e25:	lahf   
  421e26:	gs jmp 0x421e05
  421e29:	add    al,0x74
  421e2b:	push   ecx
  421e2c:	xchg   ebp,eax
  421e2d:	mov    al,ds:0xe467c484
  421e32:	mov    ch,0xb7
  421e34:	push   ebx
  421e35:	hlt    
  421e36:	ja     0x421e75
  421e38:	fnstcw WORD PTR [esp+ebx*1+0x47]
  421e3c:	je     0x421e7c
  421e3e:	cwde   
  421e3f:	fistp  QWORD PTR [edi]
  421e41:	dec    esp
  421e42:	xchg   ecx,eax
  421e43:	dec    ebp
  421e44:	mov    eax,ds:0xdbd1d236
  421e49:	dec    esp
  421e4a:	dec    ebx
  421e4b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421e4c:	aaa    
  421e4d:	jp     0x421e2b
  421e4f:	mov    esi,0x9bf5edb1
  421e54:	fisubr WORD PTR [esi]
  421e56:	xchg   esi,eax
  421e57:	movzx  esp,BYTE PTR [eax-0x2e2e779a]
  421e5e:	std    
  421e5f:	cs push eax
  421e61:	dec    edx
  421e62:	adc    eax,0x496c694a
  421e67:	add    BYTE PTR [eax-0x37e1b19a],dl
  421e6d:	rcr    DWORD PTR [esp+ebx*2+0x31ba1470],1
  421e74:	iret   
  421e75:	mov    al,ds:0x54c32ca2
  421e7a:	jo     0x421ed9
  421e7c:	cmp    eax,0x25a40788
  421e81:	dec    esi
  421e82:	sbb    edx,ecx
  421e84:	mov    ebx,0x79a56019
  421e89:	cmp    al,BYTE PTR [ebx-0x68]
  421e8c:	(bad)  
  421e8d:	mov    al,0x1
  421e8f:	mov    al,ds:0x2e9cf8f6
  421e94:	into   
  421e95:	cmp    DWORD PTR [ecx+0x36],edx
  421e98:	xchg   esp,eax
  421e99:	adc    BYTE PTR [ebx],cl
  421e9b:	sti    
  421e9c:	push   ss
  421e9d:	loope  0x421e3b
  421e9f:	push   ebx
  421ea0:	push   ecx
  421ea1:	xor    esp,edi
  421ea3:	cld    
  421ea4:	xchg   ebx,eax
  421ea5:	(bad)  
  421ea6:	or     DWORD PTR [esi],edx
  421ea8:	es and al,cl
  421eab:	sahf   
  421eac:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421ead:	push   ss
  421eae:	fisubr WORD PTR [edi]
  421eb0:	lock test al,0xc1
  421eb3:	xchg   ebx,eax
  421eb4:	xchg   ebp,eax
  421eb5:	retf   
  421eb6:	dec    ecx
  421eb7:	xor    ch,BYTE PTR [ebx+0x32]
  421eba:	cli    
  421ebb:	sbb    BYTE PTR [ebp-0x2d573ab7],0x57
  421ec2:	lahf   
  421ec3:	jecxz  0x421f23
  421ec5:	in     eax,dx
  421ec6:	xchg   esp,eax
  421ec7:	add    BYTE PTR [edx+ebp*1+0x40],cl
  421ecb:	xchg   ebx,eax
  421ecc:	loopne 0x421eec
  421ece:	cs adc al,0xc
  421ed1:	add    edi,edx
  421ed3:	adc    dl,BYTE PTR [ecx]
  421ed5:	cmp    BYTE PTR [eax+0x196fa2e6],dl
  421edb:	xlat   BYTE PTR ds:[ebx]
  421edc:	push   ecx
  421edd:	xor    ecx,DWORD PTR [ebx+0x71]
  421ee0:	fldenv [edx+0x20]
  421ee3:	rcl    DWORD PTR [edx+edx*4+0x6f974a0f],cl
  421eea:	imul   esi,DWORD PTR [ebp+0x48df7840],0xfffffff0
  421ef1:	lea    eax,[edi]
  421ef3:	xchg   esp,eax
  421ef4:	mov    edi,0x3e75c9a
  421ef9:	push   ds
  421efa:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421efb:	jnp    0x421f5b
  421efd:	xchg   esi,eax
  421efe:	test   BYTE PTR [ecx-0x5d],al
  421f01:	imul   eax,DWORD PTR [ebx-0x43],0x18
  421f05:	icebp  
  421f06:	push   esi
  421f07:	lods   eax,DWORD PTR ds:[esi]
  421f08:	sub    al,0x44
  421f0a:	imul   esp,DWORD PTR [eax],0x2d7b1e6d
  421f10:	add    al,0xda
  421f12:	or     DWORD PTR [ecx-0x6e],0xfdaa1c03
  421f19:	sbb    dh,BYTE PTR [edi-0x24]
  421f1c:	xor    DWORD PTR [eax+0x5f2928e8],0x72bc4a2b
  421f26:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421f27:	imul   eax,DWORD PTR [eax],0x11
  421f2a:	lods   eax,DWORD PTR ds:[esi]
  421f2b:	lods   al,BYTE PTR ds:[esi]
  421f2c:	sti    
  421f2d:	pop    ss
  421f2e:	push   cs
  421f2f:	add    DWORD PTR [edi-0x37],ebp
  421f32:	call   0xd753c57b
  421f37:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421f38:	(bad)  
  421f39:	daa    
  421f3a:	sbb    DWORD PTR [esi+0x32],esp
  421f3d:	mov    eax,ds:0xc125a4fb
  421f42:	ds loopne 0x421ecd
  421f45:	in     al,dx
  421f46:	sbb    al,cl
  421f48:	int3   
  421f49:	inc    esi
  421f4a:	pop    ebp
  421f4b:	cld    
  421f4c:	jmp    0x421f4e
  421f4e:	mov    es,WORD PTR [esp+edx*1]
  421f51:	mov    edi,0xd42d2e82
  421f56:	cmp    eax,0x5778e177
  421f5b:	pop    ss
  421f5c:	mov    eax,ds:0x86d73d60
  421f61:	sub    al,0x34
  421f63:	out    0x78,eax
  421f65:	cli    
  421f66:	imul   ebp,DWORD PTR [edx],0x74
  421f69:	xor    BYTE PTR [ebx-0x71a69119],al
  421f6f:	call   0x9eb5:0x4faa3cdf
  421f76:	out    0xc,eax
  421f78:	add    esp,DWORD PTR [esi+edi*4]
  421f7b:	test   al,0xbf
  421f7d:	or     ebp,DWORD PTR [ecx+eax*2+0x784a7c80]
  421f84:	push   es
  421f85:	shl    DWORD PTR [edi-0x44],cl
  421f88:	mov    bh,0x23
  421f8a:	je     0x421fbe
  421f8c:	outs   dx,DWORD PTR ds:[esi]
  421f8d:	adc    DWORD PTR [eax],0x8df2d23e
  421f93:	mov    esi,0xd4556342
  421f98:	pop    esi
  421f99:	std    
  421f9a:	cmp    BYTE PTR [ebp+eax*1-0x27],al
  421f9e:	xchg   ebx,esp
  421fa0:	enter  0x55a1,0xab
  421fa4:	daa    
  421fa5:	movzx  esi,WORD PTR [ecx]
  421fa8:	mov    esp,0x648bcfb0
  421fad:	in     eax,0xa3
  421faf:	xor    eax,0x3acc6e1
  421fb4:	add    BYTE PTR [ecx-0xa],cl
  421fb7:	test   DWORD PTR ss:[edx-0x51febd15],0xed7621ce
  421fc2:	sub    eax,DWORD PTR [edx+0x6feb2aaf]
  421fc8:	mov    ebp,0xd34af821
  421fcd:	inc    ecx
  421fce:	jge    0x421fc9
  421fd0:	xchg   esi,ebx
  421fd2:	inc    edx
  421fd3:	inc    edx
  421fd4:	repnz pop ds
  421fd6:	mov    ch,0xea
  421fd8:	test   eax,0xe6a1f995
  421fdd:	jecxz  0x42203a
  421fdf:	(bad)  
  421fe1:	pop    esp
  421fe2:	(bad)  
  421fe4:	aam    0x76
  421fe6:	sub    al,0x31
  421fe8:	in     al,dx
  421fe9:	pop    ss
  421fea:	aam    0xf5
  421fec:	jp     0x422026
  421fee:	and    eax,0xf5e723a6
  421ff3:	add    ebx,DWORD PTR [edx+eiz*4+0x2c]
  421ff7:	in     eax,0x6
  421ff9:	xor    esp,DWORD PTR [ecx]
  421ffb:	xchg   BYTE PTR [edx+ecx*2-0x7a],cl
  421fff:	les    edx,FWORD PTR [ecx-0x6]
  422002:	or     dl,BYTE PTR [ebx]
  422004:	sbb    ah,BYTE PTR [ecx+eax*4]
  422007:	and    DWORD PTR [edi+ebx*2],ebx
  42200a:	add    eax,0xac5779d4
  42200f:	jbe    0x421f99
  422011:	ins    DWORD PTR es:[edi],dx
  422012:	sub    DWORD PTR [edx-0x64],ebp
  422015:	mov    ebp,0xb307cc06
  42201a:	outs   dx,DWORD PTR ds:[esi]
  42201b:	hlt    
  42201c:	fidivr DWORD PTR [ebx]
  42201e:	xchg   ebx,eax
  42201f:	jmp    DWORD PTR [ecx]
  422021:	retf   
  422022:	cs jmp 0xd725c7b
  422028:	inc    edi
  422029:	repz add ah,BYTE PTR [ecx+0x43ac2c2c]
  422030:	mov    al,ds:0x298cad80
  422035:	imul   eax,ebx,0x41
  422038:	xchg   esp,eax
  422039:	xchg   ebx,eax
  42203a:	enter  0xc285,0x22
  42203e:	ds ret 0xb25a
  422042:	xchg   ebp,eax
  422043:	sysret 
  422045:	pop    edi
  422046:	imul   ebx,DWORD PTR [ebp-0x40],0xffffffce
  42204a:	add    al,0x5c
  42204c:	cdq    
  42204d:	in     eax,dx
  42204e:	lea    eax,[edx+0x715e6f2]
  422054:	stos   BYTE PTR es:[edi],al
  422055:	clc    
  422056:	enter  0x6dd7,0xbb
  42205a:	aaa    
  42205b:	push   esi
  42205c:	aas    
  42205d:	ins    DWORD PTR es:[edi],dx
  42205e:	cmp    al,0x34
  422060:	sbb    al,0xb5
  422062:	xor    eax,0x8df7eeaa
  422067:	scas   al,BYTE PTR es:[edi]
  422068:	mov    dh,0x4e
  42206a:	iret   
  42206b:	adc    bl,BYTE PTR [eax+0xc]
  42206e:	inc    edi
  42206f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422070:	cld    
  422071:	ins    BYTE PTR es:[edi],dx
  422072:	and    eax,0xe1d52e2e
  422077:	pop    esi
  422078:	push   ebp
  422079:	stc    
  42207a:	or     BYTE PTR [ecx-0x43b15c81],0xd5
  422081:	or     dl,BYTE PTR [eax]
  422083:	lahf   
  422084:	or     ah,BYTE PTR [ebp+edx*4-0x7d9b2b42]
  42208b:	mov    dl,0xa7
  42208d:	jno    0x4220ed
  42208f:	mov    cl,0x5f
  422091:	cmc    
  422092:	inc    ebp
  422093:	fbld   TBYTE PTR [edi]
  422095:	push   esi
  422096:	icebp  
  422097:	sti    
  422098:	rol    DWORD PTR [edi+edi*4+0x6cf47d0f],1
  42209f:	mov    esp,0xb18ec4c
  4220a4:	xor    esi,DWORD PTR [eax+0x1c20dcab]
  4220aa:	rol    DWORD PTR [ebp-0x48ecb5a5],1
  4220b0:	sub    ebx,DWORD PTR [eax+edi*2+0x24f0b11f]
  4220b7:	mov    ds:0xe003e998,al
  4220bc:	fld    st(6)
  4220be:	arpl   WORD PTR [edx-0x78ca19c0],dx
  4220c4:	and    BYTE PTR [ecx*4-0x7bc9b653],0x83
  4220cc:	aas    
  4220cd:	sub    esp,eax
  4220cf:	and    BYTE PTR [ecx+0x625a5ecc],0x9
  4220d6:	adc    eax,0x4a06d09f
  4220db:	enter  0x2406,0x13
  4220df:	xchg   edx,eax
  4220e0:	push   edi
  4220e1:	xor    dh,bl
  4220e3:	fild   DWORD PTR [ecx-0x2e0db6d3]
  4220e9:	in     eax,dx
  4220ea:	adc    BYTE PTR [edi+0x73ca86b3],cl
  4220f0:	lea    ebx,[edx-0x16]
  4220f3:	pop    ss
  4220f4:	mov    bl,0x2a
  4220f6:	xor    bh,0x46
  4220f9:	push   ebp
  4220fa:	jbe    0x4220c8
  4220fc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4220fd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4220fe:	fnstcw WORD PTR [ebp+0x3f481fc4]
  422104:	sub    BYTE PTR [edx],dh
  422106:	jg     0x4220da
  422108:	mov    ebx,0xff2d796d
  42210d:	aam    0x61
  42210f:	inc    edx
  422110:	lods   al,BYTE PTR ds:[esi]
  422111:	mov    esp,0x3af8141d
  422116:	inc    ecx
  422117:	adc    eax,DWORD PTR [ebx]
  422119:	push   ds
  42211a:	mov    BYTE PTR [edi+0x34],dh
  42211d:	jp     0x4220f1
  42211f:	xor    al,0xc2
  422121:	sub    al,0x8e
  422123:	in     al,0x63
  422125:	in     al,0x7e
  422127:	dec    ebx
  422128:	mov    ecx,0xfbf9611c
  42212d:	adc    BYTE PTR [edi],dl
  42212f:	mov    ecx,0x80277eee
  422134:	loope  0x422178
  422136:	pop    di
  422138:	repz mov ch,BYTE PTR [edi]
  42213b:	pop    ebx
  42213c:	outs   dx,BYTE PTR ds:[esi]
  42213d:	fs ret 0x9694
  422141:	sbb    dh,cl
  422143:	ds (bad) 
  422146:	jb     0x4220e7
  422148:	shr    DWORD PTR [esi-0x6bb1127],cl
  42214e:	add    cl,bl
  422150:	fisttp WORD PTR [ecx+eiz*4+0x3b]
  422154:	jg     0x4220ef
  422156:	ret    
  422157:	sbb    BYTE PTR fs:[ebx+0x7b],dl
  42215b:	jg     0x4221c1
  42215d:	jg     0x42211c
  42215f:	and    al,0xf9
  422161:	retf   
  422162:	add    esp,DWORD PTR [ecx]
  422164:	push   ecx
  422165:	jnp    0x4221a4
  422167:	or     DWORD PTR [edi+0x5e],ebx
  42216a:	icebp  
  42216b:	adc    eax,0xe8ebe05a
  422170:	jl     0x422163
  422172:	rcl    BYTE PTR [ecx-0x3b],1
  422175:	fldcw  WORD PTR [eax+eax*2]
  422178:	mov    ds:0x31260533,al
  42217d:	pop    ecx
  42217e:	mov    ch,0xbe
  422180:	xchg   ebp,eax
  422181:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422182:	pmuludq mm3,mm2
  422185:	jb     0x422172
  422187:	stos   DWORD PTR es:[edi],eax
  422188:	stc    
  422189:	inc    ebp
  42218a:	sbb    ebx,edi
  42218c:	cmp    eax,0x78a64f26
  422191:	adc    ch,BYTE PTR [ebp-0x5b]
  422194:	or     BYTE PTR [edi+0x57],dl
  422197:	pop    esp
  422198:	ss xor dh,bl
  42219b:	dec    ebx
  42219c:	sar    DWORD PTR [esi],0x98
  42219f:	nop
  4221a0:	mov    ebx,0x8edeb2bc
  4221a5:	cdq    
  4221a6:	outs   dx,DWORD PTR ds:[esi]
  4221a7:	sti    
  4221a8:	dec    edi
  4221a9:	or     ebx,esi
  4221ab:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4221ac:	jmp    0x4221f4
  4221ae:	adc    eax,ebx
  4221b0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4221b1:	ret    
  4221b2:	pop    edi
  4221b3:	mov    ecx,0x4c918369
  4221b8:	lea    eax,[esi+0x7f]
  4221bb:	shl    BYTE PTR [esi+0x2b],0x6
  4221bf:	add    bl,BYTE PTR [ecx]
  4221c1:	and    al,0xe7
  4221c3:	ds pop edi
  4221c5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4221c6:	call   DWORD PTR [ecx-0x574559a2]
  4221cc:	mov    esi,0x62faaa22
  4221d1:	dec    esi
  4221d2:	les    eax,FWORD PTR ds:0xe5ebafd2
  4221d8:	ret    0xe7cb
  4221db:	pop    edx
  4221dc:	arpl   WORD PTR [esi],bp
  4221de:	mov    ds:0xdf046edf,al
  4221e3:	lds    eax,FWORD PTR [ebp-0x33]
  4221e6:	inc    esp
  4221e7:	lds    edx,FWORD PTR [edx]
  4221e9:	loop   0x42224c
  4221eb:	lock in al,dx
  4221ed:	xor    eax,0x239d6988
  4221f2:	mov    ch,0xa
  4221f4:	push   cs
  4221f5:	adc    eax,0xede4296d
  4221fa:	xchg   edi,eax
  4221fb:	pop    edi
  4221fc:	push   esi
  4221fd:	into   
  4221fe:	lock cdq 
  422200:	jmp    0x217d:0xdd0e8fd
  422207:	mov    DWORD PTR [edx],0xd50db6c2
  42220d:	or     eax,0xb9c75dba
  422212:	aad    0x77
  422214:	push   cs
  422215:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422216:	fs xchg ebp,eax
  422218:	mov    ah,0x87
  42221a:	jl     0x4221d6
  42221c:	dec    esi
  42221d:	fucomp st(4)
  42221f:	stos   DWORD PTR es:[edi],eax
  422220:	enter  0xbc49,0xa2
  422224:	adc    al,BYTE PTR [eax-0x71]
  422227:	push   ds
  422228:	lds    esi,FWORD PTR [edx]
  42222a:	dec    ebp
  42222b:	not    esp
  42222d:	pop    es
  42222e:	mov    bl,0x65
  422230:	stos   BYTE PTR es:[edi],al
  422231:	in     al,0xdb
  422233:	xlat   BYTE PTR ds:[ebx]
  422234:	out    0x87,eax
  422236:	cld    
  422237:	dec    eax
  422238:	sbb    BYTE PTR [eax+eiz*1+0x55b42a4a],bl
  42223f:	or     dl,BYTE PTR ds:0x41d94edc
  422245:	hlt    
  422246:	dec    edi
  422247:	jp     0x422236
  422249:	sbb    DWORD PTR [esi-0x3],ebx
  42224c:	sbb    eax,0x7927addb
  422251:	inc    ecx
  422252:	in     eax,dx
  422253:	adc    eax,0xe2c44d01
  422258:	ret    0xc204
  42225b:	mov    eax,ds:0xef281136
  422260:	loopne 0x422245
  422262:	test   DWORD PTR [eax-0x73],ecx
  422265:	int    0xfd
  422267:	and    cl,dh
  422269:	enter  0x10ed,0xf
  42226d:	jb     0x422298
  42226f:	jmp    0x6d1e:0xb0ac83e5
  422276:	ret    
  422277:	pop    es
  422278:	fild   WORD PTR [esi]
  42227a:	lods   eax,DWORD PTR ds:[esi]
  42227b:	mov    bh,0x2b
  42227d:	loopne 0x422269
  42227f:	ins    BYTE PTR es:[edi],dx
  422280:	pop    ecx
  422281:	aam    0xa1
  422283:	jne    0x4222d2
  422285:	mov    cl,0x24
  422287:	jmp    0x4222de
  422289:	xor    DWORD PTR ds:0x57a57756,edx
  42228f:	call   0xf982:0x4d537a4e
  422296:	aaa    
  422297:	add    al,0xe1
  422299:	cmp    dl,BYTE PTR [ebp+0xbe7ca9]
  42229f:	daa    
  4222a0:	lods   eax,DWORD PTR ds:[esi]
  4222a1:	pop    es
  4222a2:	xor    ecx,ebx
  4222a4:	push   0xffffff99
  4222a6:	or     BYTE PTR [esi],bl
  4222a8:	sub    bh,BYTE PTR [ebp-0x6]
  4222ab:	or     al,0xa4
  4222ad:	es out 0x6,eax
  4222b0:	lea    ecx,[eax+0x719010e2]
  4222b6:	mov    dh,0x87
  4222b8:	inc    edx
  4222b9:	sbb    edx,DWORD PTR [esi]
  4222bb:	mov    bh,0x72
  4222bd:	mov    esi,0x3ddf55f0
  4222c2:	cmp    ebx,DWORD PTR [edi]
  4222c4:	xor    al,0x81
  4222c6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4222c7:	stos   DWORD PTR es:[edi],eax
  4222c8:	popf   
  4222c9:	ret    
  4222ca:	out    dx,eax
  4222cb:	and    esp,edi
  4222cd:	jne    0x4222fd
  4222cf:	sti    
  4222d0:	mov    ds:0x82f2a84b,al
  4222d5:	jge    0x42228c
  4222d7:	pop    ds
  4222d8:	sub    eax,0x11e2ca19
  4222dd:	xchg   ecx,eax
  4222de:	mov    bl,0x87
  4222e0:	pop    eax
  4222e1:	or     bl,BYTE PTR [esi-0x51c111c4]
  4222e7:	clc    
  4222e8:	push   edi
  4222e9:	mov    bl,0xab
  4222eb:	push   ss
  4222ec:	(bad)  
  4222ed:	int    0xb4
  4222ef:	imul   sp,WORD PTR [ebx-0x7f],0x27
  4222f4:	in     eax,0x65
  4222f6:	retf   
  4222f7:	xchg   edx,eax
  4222f8:	add    dh,BYTE PTR ds:0x25163544
  4222fe:	ficomp DWORD PTR [edi-0x67]
  422301:	clc    
  422302:	dec    eax
  422303:	xchg   DWORD PTR [ebx],ecx
  422305:	push   edi
  422306:	sbb    ch,BYTE PTR [esi-0x7b]
  422309:	std    
  42230a:	test   BYTE PTR [edi+eax*1+0x3ae18ae2],0x54
  422312:	jb     0x4222f1
  422314:	jne    0x422298
  422316:	in     eax,dx
  422317:	dec    edi
  422318:	sbb    BYTE PTR [edx+0x1a],0x93
  42231c:	aas    
  42231d:	sbb    dl,BYTE PTR [ecx-0x61]
  422320:	inc    eax
  422321:	jge    0x422323
  422323:	hlt    
  422324:	call   DWORD PTR [edi+edx*4]
  422327:	mov    ebx,0xd4fd996e
  42232c:	dec    edx
  42232d:	jle    0x4222e6
  42232f:	stos   BYTE PTR es:[edi],al
  422330:	add    edx,DWORD PTR [ecx-0x4c]
  422333:	pop    ss
  422334:	cmp    eax,0x411efca7
  422339:	mov    ch,0x2c
  42233b:	dec    eax
  42233c:	pushf  
  42233d:	or     BYTE PTR [ebx+0x34c59157],0x34
  422344:	push   ebx
  422345:	jmp    0x4223bc
  422347:	aad    0x74
  422349:	retf   0xd253
  42234c:	mov    bh,0xa6
  42234e:	pop    edi
  42234f:	pop    esp
  422350:	(bad)  
  422351:	mov    ah,0xb5
  422353:	sbb    al,BYTE PTR [edx-0x74]
  422356:	cmc    
  422357:	push   ecx
  422358:	and    edi,esi
  42235a:	icebp  
  42235b:	adc    ch,bl
  42235d:	mov    ecx,0x7bfa6d34
  422362:	test   BYTE PTR [edi+0x782cb1d7],dl
  422368:	add    ecx,esp
  42236a:	mov    DWORD PTR ds:0xa48b0df8,ecx
  422370:	jecxz  0x4223e2
  422372:	fld    st(4)
  422374:	dec    ebx
  422375:	ja     0x42231d
  422377:	pop    es
  422378:	shr    BYTE PTR [edi],1
  42237a:	jnp    0x42232f
  42237c:	call   0x3854:0x357970ab
  422383:	dec    edi
  422384:	xchg   DWORD PTR [edx-0x30052294],eax
  42238a:	fwait
  42238b:	inc    eax
  42238c:	push   edi
  42238d:	inc    eax
  42238e:	xchg   ebx,eax
  42238f:	xchg   edi,eax
  422390:	push   esi
  422391:	xor    cl,BYTE PTR [ebp+0x6f]
  422394:	hlt    
  422395:	ss fs jno 0x4223b7
  422399:	jns    0x422323
  42239b:	in     al,dx
  42239c:	jne    0x42234a
  42239e:	xor    al,dl
  4223a0:	fidiv  WORD PTR ss:[ebx+0x2d]
  4223a4:	retf   0x46a3
  4223a7:	test   DWORD PTR [eax+eax*8-0x61a8495e],edi
  4223ae:	adc    edx,0xd31fded
  4223b4:	cld    
  4223b5:	jo     0x42239c
  4223b7:	cmp    eax,0xd8f62f47
  4223bc:	add    DWORD PTR [eax],0x1c1dae5c
  4223c2:	xchg   edi,eax
  4223c3:	sbb    bl,BYTE PTR [ebx]
  4223c5:	xor    BYTE PTR [ecx+0x6dfc6cdc],al
  4223cb:	adc    ebp,DWORD PTR [ebx-0x737684a9]
  4223d1:	lahf   
  4223d2:	retf   
  4223d3:	fistp  WORD PTR [edi]
  4223d5:	cmp    cl,cl
  4223d7:	push   edi
  4223d8:	and    DWORD PTR [ebx+0x79],eax
  4223db:	scas   al,BYTE PTR es:[edi]
  4223dc:	jne    0x42243d
  4223de:	(bad)  
  4223df:	test   DWORD PTR [ecx+0x4e],0x962aa15e
  4223e6:	(bad)  
  4223e7:	sbb    ch,BYTE PTR [edx]
  4223e9:	nop
  4223ea:	lahf   
  4223eb:	ror    al,cl
  4223ed:	sti    
  4223ee:	add    esi,DWORD PTR [eax]
  4223f0:	fst    st(4)
  4223f2:	dec    eax
  4223f3:	jg     0x422424
  4223f5:	xchg   esp,eax
  4223f6:	lahf   
  4223f7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4223f8:	es es mov esi,0x8d7fe580
  4223ff:	inc    esp
  422400:	and    BYTE PTR [eax+0x7f],0x60
  422404:	adc    DWORD PTR [edi-0x71],ebp
  422407:	shr    ebx,0x5d
  42240a:	leave  
  42240b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42240c:	xor    dh,dh
  42240e:	into   
  42240f:	jecxz  0x422446
  422411:	das    
  422412:	in     eax,0xb9
  422414:	mov    esi,0x36776b8e
  422419:	loopne 0x42241f
  42241b:	mov    al,ds:0xf9b2fe1f
  422420:	scas   eax,DWORD PTR es:[edi]
  422421:	lahf   
  422422:	and    ebp,DWORD PTR [bx+0x4b]
  422426:	fwait
  422427:	mov    ch,ah
  422429:	push   es
  42242a:	scas   al,BYTE PTR es:[edi]
  42242b:	xchg   edi,eax
  42242c:	std    
  42242d:	test   al,0x12
  42242f:	in     eax,0xa3
  422431:	stos   BYTE PTR es:[edi],al
  422432:	mov    bl,0x1
  422434:	fdivr  DWORD PTR [esp+eiz*4-0x14]
  422438:	or     bl,ch
  42243a:	jl     0x422490
  42243c:	data16 jae 0x42249d
  42243f:	add    ah,0x1
  422442:	imul   ebp,edx,0xce541ff7
  422448:	mov    edx,0xff7f0ae9
  42244d:	ficomp DWORD PTR [eiz*4+0x120a7fde]
  422454:	daa    
  422455:	(bad)  
  422457:	js     0x4223da
  422459:	and    al,0xa3
  42245b:	sbb    al,0x8d
  42245d:	stos   DWORD PTR es:[edi],eax
  42245e:	add    al,0xd4
  422460:	mov    al,BYTE PTR ds:0xe7b58ef8
  422466:	jae    0x4224e2
  422468:	inc    esi
  422469:	movaps XMMWORD PTR [eax-0x6cebd35d],xmm2
  422470:	lods   eax,DWORD PTR ds:[esi]
  422471:	les    ebx,FWORD PTR cs:0x80d8abbe
  422478:	fs push esp
  42247a:	je     0x42245c
  42247c:	jp     0x4224af
  42247e:	fisubr WORD PTR [edi]
  422480:	iret   
  422481:	xchg   esp,eax
  422482:	inc    eax
  422483:	pusha  
  422484:	dec    ebp
  422485:	aaa    
  422486:	fst    DWORD PTR [ebx+0x2da71c7e]
  42248c:	fwait
  42248d:	push   esi
  42248e:	iret   
  42248f:	or     esp,esi
  422491:	xchg   edi,eax
  422492:	cmp    eax,0x320463c9
  422497:	inc    ecx
  422498:	aam    0xeb
  42249a:	jae    0x42248a
  42249c:	xchg   esp,esi
  42249e:	sub    BYTE PTR [ecx],cl
  4224a0:	jne    0x422520
  4224a2:	call   0xedf24f1
  4224a7:	push   0xffffffa9
  4224a9:	dec    edx
  4224aa:	dec    esp
  4224ab:	dec    ebp
  4224ac:	rcr    BYTE PTR [esi],cl
  4224ae:	fcmovu st,st(1)
  4224b0:	dec    ebp
  4224b1:	cwde   
  4224b2:	ins    DWORD PTR es:[edi],dx
  4224b3:	xchg   DWORD PTR [edx-0x76],edx
  4224b6:	dec    ecx
  4224b7:	jmp    0x4224a6
  4224b9:	mov    ds,WORD PTR [ecx-0x61d2bacd]
  4224bf:	in     al,dx
  4224c0:	sti    
  4224c1:	adc    DWORD PTR [eax-0x58],eax
  4224c4:	gs js  0x42249c
  4224c7:	pop    ss
  4224c8:	(bad)  
  4224c9:	arpl   bx,bp
  4224cb:	pop    eax
  4224cc:	add    eax,0x7e
  4224cf:	cdq    
  4224d0:	or     DWORD PTR [edx+0x1f777637],0x90e0f651
  4224da:	push   edi
  4224db:	test   eax,0x77098219
  4224e0:	push   esi
  4224e1:	jae    0x4224bc
  4224e3:	add    DWORD PTR [edi-0x1d755be0],ecx
  4224e9:	jo     0x422536
  4224eb:	(bad)  
  4224ec:	lahf   
  4224ed:	and    al,0xf4
  4224ef:	push   edi
  4224f0:	xor    ecx,DWORD PTR [ecx]
  4224f2:	pop    edi
  4224f3:	mov    ebx,DWORD PTR [ebx-0x1476099a]
  4224f9:	(bad)  
  4224fa:	jg     0x4224c8
  4224fc:	sub    DWORD PTR [ebp-0x6291cb1d],esi
  422502:	call   0xcc530b9d
  422507:	fstp   QWORD PTR [ebx+0x4a33687e]
  42250d:	cmp    BYTE PTR [esi-0x6f2e0091],0x5b
  422514:	push   esi
  422515:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422516:	cmp    ch,ch
  422518:	fimul  WORD PTR ds:0xcb5633fb
  42251e:	mov    ebp,0x97293f1
  422523:	imul   ecx,DWORD PTR [eax],0xffffffd1
  422526:	xor    ebx,edx
  422528:	outs   dx,BYTE PTR ds:[esi]
  422529:	inc    esi
  42252a:	push   esp
  42252b:	add    eax,0x3a8514
  422530:	sbb    eax,DWORD PTR [edx+ecx*4+0x62]
  422534:	in     eax,dx
  422535:	push   0x5332136f
  42253a:	scas   al,BYTE PTR es:[edi]
  42253b:	add    eax,0xc57a9c72
  422540:	cmc    
  422541:	add    DWORD PTR [ecx-0x6e93ce7],ebx
  422547:	jae    0x422565
  422549:	daa    
  42254a:	cmp    al,0xa7
  42254c:	retf   
  42254d:	out    0xa8,eax
  42254f:	sbb    bh,BYTE PTR [edx+0x55e87d9b]
  422555:	test   BYTE PTR [eax+0x76f7c564],0x66
  42255c:	inc    ecx
  42255d:	xor    DWORD PTR [edx+0x5586366],ecx
  422563:	loopne 0x422504
  422565:	shr    BYTE PTR [eax+ecx*8-0x50],cl
  422569:	xor    eax,0x131ec6f7
  42256e:	adc    dl,BYTE PTR [edx+0x53556de4]
  422574:	push   DWORD PTR [ebp+0x5]
  422577:	mov    al,0x1d
  422579:	es jl  0x4225e6
  42257c:	mov    ebp,DWORD PTR [esi+0x2b6a8bd4]
  422582:	pop    eax
  422583:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422584:	or     al,0x58
  422586:	jns    0x42255d
  422588:	add    bh,BYTE PTR [edi-0x19]
  42258b:	push   0xffffffa3
  42258d:	out    dx,eax
  42258e:	and    al,0x11
  422590:	sub    ah,bh
  422592:	rcr    DWORD PTR [edx+0x20],0xf5
  422596:	ins    DWORD PTR es:[edi],dx
  422597:	or     eax,DWORD PTR [esi]
  422599:	dec    edi
  42259a:	ins    DWORD PTR es:[edi],dx
  42259b:	push   es
  42259c:	add    ebx,DWORD PTR ds:0x93c3a66f
  4225a2:	retf   
  4225a3:	jnp    0x4225e2
  4225a5:	enter  0x702d,0x91
  4225a9:	mov    eax,ds:0x7b1bdfe3
  4225ae:	test   eax,0xa85578b0
  4225b3:	mov    ds:0x6222350,al
  4225b8:	fcomp  QWORD PTR [edx]
  4225ba:	into   
  4225bb:	xor    cl,ch
  4225bd:	jb     0x42260c
  4225bf:	sub    edx,edi
  4225c1:	mov    cl,0x8f
  4225c3:	sub    BYTE PTR [edx-0x71],0x15
  4225c7:	or     BYTE PTR [eax],al
  4225c9:	nop
  4225ca:	sub    ecx,DWORD PTR [ecx+0x31f23fb2]
  4225d0:	aam    0xd9
  4225d2:	jno    0x422605
  4225d4:	adc    al,0x90
  4225d6:	ficom  WORD PTR [ecx+0x77692fb3]
  4225dc:	push   0x2ac42adc
  4225e1:	cmp    bh,BYTE PTR [eax]
  4225e3:	fwait
  4225e4:	stc    
  4225e5:	jb     0x4225b4
  4225e7:	add    esp,DWORD PTR [ebx-0x62]
  4225ea:	div    BYTE PTR [edi-0x1bb7c9]
  4225f0:	mov    DWORD PTR [edi],esp
  4225f2:	adc    DWORD PTR [edi-0x2bd5f181],edx
  4225f8:	repnz cld 
  4225fa:	mov    esp,ebp
  4225fc:	fs ja  0x422633
  4225ff:	mov    DWORD PTR [edi],edi
  422601:	mov    ds:0x962b0ba9,al
  422606:	cmp    ebp,0xfd6972a4
  42260c:	repz mov ebp,0x2505f56d
  422612:	dec    eax
  422613:	dec    esp
  422614:	les    esp,FWORD PTR [edi+0x4a]
  422617:	ja     0x42268b
  422619:	test   bh,bh
  42261b:	add    al,0xe7
  42261d:	adc    al,0x59
  42261f:	mov    dl,0x7d
  422621:	xchg   BYTE PTR [ecx+ebp*8+0x671ee46d],ah
  422628:	pop    ss
  422629:	adc    al,0x16
  42262b:	add    al,0xcb
  42262d:	inc    edx
  42262e:	and    dh,dl
  422630:	es xchg ebx,eax
  422632:	push   0x5a
  422634:	fwait
  422635:	(bad)  
  422636:	iret   
  422637:	test   al,0xa7
  422639:	mov    ds:0x5b9422d6,eax
  42263e:	cwde   
  42263f:	dec    esi
  422640:	dec    esp
  422641:	lea    ebp,[ecx]
  422643:	pop    ebp
  422644:	jne    0x4226bb
  422646:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422647:	xchg   ecx,eax
  422648:	lahf   
  422649:	jl     0x42266e
  42264b:	mov    ecx,0x4a732403
  422650:	adc    DWORD PTR [ebp+0x4c],eax
  422653:	icebp  
  422654:	fwait
  422655:	inc    esi
  422656:	xchg   bh,ch
  422658:	mov    ebp,0x1a0818af
  42265d:	dec    edx
  42265e:	(bad)  
  42265f:	mov    al,ds:0xa02677fb
  422664:	data16 xor dh,BYTE PTR [esi]
  422667:	push   esi
  422668:	(bad)  
  422669:	mov    cl,0xb2
  42266b:	and    DWORD PTR [esi-0x11],ebx
  42266e:	hlt    
  42266f:	push   ebp
  422670:	inc    ebx
  422671:	inc    ebp
  422672:	add    DWORD PTR [ebx],eax
  422674:	repnz movs BYTE PTR es:[edi],BYTE PTR gs:[esi]
  422677:	and    dh,BYTE PTR [edi+0x29]
  42267a:	inc    ecx
  42267b:	(bad)  
  42267c:	xlat   BYTE PTR ds:[ebx]
  42267d:	je     0x422621
  42267f:	push   edi
  422680:	push   esp
  422681:	jae    0x422650
  422683:	push   0xa6991734
  422688:	aam    0x4
  42268a:	mov    ds:0x9660ffb6,eax
  42268f:	or     bl,BYTE PTR [ecx+ebx*1-0x33]
  422693:	(bad)  
  422695:	das    
  422696:	sbb    eax,0x7843dde7
  42269b:	xchg   edi,eax
  42269c:	xor    eax,0xfffffff7
  42269f:	retf   
  4226a0:	jae    0x42266e
  4226a2:	xchg   ebp,eax
  4226a3:	sti    
  4226a4:	cmp    al,0xd6
  4226a6:	in     al,dx
  4226a7:	lea    ebp,[esi+0x1f46bbab]
  4226ad:	rol    bl,0x45
  4226b0:	jne    0x422653
  4226b2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4226b3:	iret   
  4226b4:	out    dx,al
  4226b5:	jbe    0x4226e6
  4226b7:	nop
  4226b8:	fstp   st(1)
  4226ba:	js     0x422663
  4226bc:	jae    0x422708
  4226be:	pop    edx
  4226bf:	into   
  4226c0:	call   0xbd68:0xe39a832d
  4226c7:	sbb    al,0x7a
  4226c9:	outs   dx,BYTE PTR ds:[esi]
  4226ca:	data16 or al,0x7b
  4226cd:	loop   0x422743
  4226cf:	sub    ecx,edx
  4226d1:	daa    
  4226d2:	xchg   esi,eax
  4226d3:	xchg   esi,eax
  4226d4:	push   es
  4226d5:	je     0x42268e
  4226d7:	jae    0x422681
  4226d9:	adc    al,0x10
  4226db:	or     al,0x18
  4226dd:	clc    
  4226de:	int3   
  4226df:	and    BYTE PTR [ecx],ch
  4226e1:	jl     0x422741
  4226e3:	xor    al,BYTE PTR [esi]
  4226e5:	stc    
  4226e6:	daa    
  4226e7:	sti    
  4226e8:	add    al,0x2e
  4226ea:	lock mov ds:0xa0e095db,al
  4226f0:	(bad)  
  4226f1:	lea    ebp,[edx-0x681fc0e2]
  4226f7:	lods   al,BYTE PTR ds:[esi]
  4226f8:	call   0xbb04:0x4c3aeac1
  4226ff:	add    ah,cl
  422701:	je     0x4226aa
  422703:	adc    DWORD PTR [ecx-0x4],edx
  422706:	xchg   ebx,eax
  422707:	lods   al,BYTE PTR ds:[esi]
  422708:	push   0xffffffe2
  42270a:	mov    cl,0x4f
  42270c:	mov    ecx,0xd2d6c5e9
  422711:	cmp    DWORD PTR [edi-0x471d062e],0xbf795e24
  42271b:	and    DWORD PTR [edi-0x60],ecx
  42271e:	in     al,0x2c
  422720:	fsub   QWORD PTR [ecx+0x3a]
  422723:	rol    BYTE PTR [ebx],0xf5
  422726:	enter  0x5cd4,0x35
  42272a:	nop    DWORD PTR [edx]
  42272d:	in     al,0x6b
  42272f:	inc    ecx
  422730:	xlat   BYTE PTR ds:[ebx]
  422731:	ins    DWORD PTR es:[edi],dx
  422732:	mov    edx,cs
  422734:	inc    esi
  422735:	out    dx,al
  422736:	repnz imul eax,DWORD PTR [eax],0x48c4c772
  42273d:	dec    esi
  42273e:	shl    DWORD PTR [edi+0x5ddc8ce2],1
  422744:	pop    ss
  422745:	sbb    bl,BYTE PTR [edx]
  422747:	call   0x11fb3c4f
  42274c:	pop    ss
  42274d:	mov    dl,0x75
  42274f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422750:	cmp    edi,edi
  422752:	test   DWORD PTR [esi],esp
  422754:	dec    eax
  422755:	out    0x42,al
  422757:	scas   al,BYTE PTR es:[edi]
  422758:	icebp  
  422759:	jmp    0xd1ac6530
  42275e:	jecxz  0x4226ed
  422760:	pop    edi
  422761:	pop    es
  422762:	inc    ecx
  422763:	stc    
  422764:	sbb    DWORD PTR [edx-0x63558c28],0xeae9a94b
  42276e:	mov    fs,WORD PTR [eax+0x7a1c05f4]
  422774:	inc    eax
  422775:	adc    dh,al
  422777:	adc    dh,BYTE PTR [eax+0x7a75b04f]
  42277d:	mov    bl,0x23
  42277f:	test   al,0x41
  422781:	gs mov ecx,0x6df11310
  422787:	sbb    ecx,eax
  422789:	add    DWORD PTR [ecx+ecx*1-0x5f],eax
  42278d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42278e:	in     al,0x3a
  422790:	mov    cl,0x2d
  422792:	xchg   BYTE PTR [ebp+eiz*4-0x48],ch
  422796:	mov    ds:0x803e9e57,eax
  42279b:	retf   
  42279c:	rcl    BYTE PTR [ebx-0x2d],1
  42279f:	ins    BYTE PTR es:[edi],dx
  4227a0:	test   BYTE PTR [edx],ch
  4227a2:	stos   BYTE PTR es:[edi],al
  4227a3:	aas    
  4227a4:	mov    bh,0x9f
  4227a6:	xchg   ecx,eax
  4227a7:	iret   
  4227a8:	xrelease mov DWORD PTR [ebx],eax
  4227ab:	cs dec edx
  4227ad:	adc    BYTE PTR [edi-0x1ed93f9b],dh
  4227b3:	daa    
  4227b4:	jo     0x42279f
  4227b6:	inc    ebx
  4227b7:	jb     0x4227f2
  4227b9:	out    dx,al
  4227ba:	repnz cmc 
  4227bc:	(bad)  
  4227bd:	cld    
  4227be:	push   edx
  4227bf:	ret    
  4227c0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4227c1:	loop   0x422785
  4227c3:	fwait
  4227c4:	aad    0x4e
  4227c6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4227c7:	push   ebp
  4227c8:	fwait
  4227c9:	ins    DWORD PTR es:[edi],dx
  4227ca:	and    eax,0x2b8c50f0
  4227cf:	dec    edi
  4227d0:	or     BYTE PTR [ecx-0x28f6684b],ah
  4227d6:	or     edx,DWORD PTR [edx]
  4227d8:	sub    al,0xf0
  4227da:	lahf   
  4227db:	xchg   esi,eax
  4227dc:	push   ebx
  4227dd:	mov    esi,0x42178b7c
  4227e2:	sub    dh,al
  4227e4:	xor    BYTE PTR [edi-0x6d],ch
  4227e7:	test   eax,0xe845cd54
  4227ec:	inc    edx
  4227ed:	mov    bh,0xff
  4227ef:	repz lock std 
  4227f2:	mov    al,BYTE PTR [ecx+ecx*8]
  4227f5:	shl    BYTE PTR [esi+0x79],1
  4227f8:	cs jp  0x422784
  4227fb:	(bad)  
  4227fd:	repz xor al,0xe6
  422800:	and    al,0x18
  422802:	mov    edi,0x66c5fc5f
  422807:	xchg   ebp,eax
  422808:	push   cs
  422809:	fcom   DWORD PTR [eax-0x33]
  42280c:	adc    al,0x6e
  42280e:	jp     0x4227d7
  422810:	retf   
  422811:	sbb    al,0xb4
  422813:	loopne 0x42288d
  422815:	sbb    dh,BYTE PTR [eax]
  422817:	and    eax,0x91482091
  42281c:	dec    ecx
  42281d:	popf   
  42281e:	mov    ebx,0xd6ea0448
  422823:	fcom   QWORD PTR [ecx]
  422825:	cmc    
  422826:	iret   
  422827:	xchg   ebx,eax
  422828:	mov    WORD PTR [ecx],?
  42282a:	adc    al,cl
  42282c:	mov    ebp,0x98bcb340
  422831:	out    0xe2,eax
  422833:	push   eax
  422834:	jecxz  0x422807
  422836:	cmp    bh,BYTE PTR [eax-0x5b]
  422839:	jns    0x422866
  42283b:	mov    ds:0xe1fd6207,eax
  422840:	add    eax,0x8c7b3ff
  422845:	add    eax,0x8914557d
  42284a:	mov    eax,ds:0x9d71bcc4
  42284f:	ror    WORD PTR [edx+0x7],1
  422853:	or     al,0xe3
  422855:	inc    edi
  422856:	jecxz  0x422864
  422858:	dec    esi
  422859:	add    eax,0x185eb17b
  42285e:	pop    esp
  42285f:	sbb    al,0x7d
  422861:	test   DWORD PTR [esi],esp
  422863:	int3   
  422864:	xor    al,0x19
  422866:	push   edi
  422867:	jge    0x4228d3
  422869:	sub    bl,bl
  42286b:	not    DWORD PTR [edx]
  42286d:	adc    ebp,DWORD PTR [ebx+0x3f]
  422870:	cli    
  422871:	retf   0x73d5
  422874:	(bad)  
  422875:	sbb    al,0x64
  422877:	pop    ds
  422878:	xor    al,0x31
  42287a:	mov    al,0xbc
  42287c:	sbb    eax,0x28f74b13
  422881:	pop    ss
  422882:	mov    ds:0xec60c077,al
  422887:	out    0x34,al
  422889:	ds stos BYTE PTR es:[edi],al
  42288b:	adc    edx,DWORD PTR [ecx-0x55]
  42288e:	dec    ebx
  42288f:	shl    ebp,0x25
  422892:	jo     0x4228ae
  422894:	popf   
  422895:	les    esi,FWORD PTR [esi+edx*4-0x6f538dda]
  42289c:	or     ecx,DWORD PTR [si]
  42289f:	sbb    BYTE PTR [edi],0xb2
  4228a2:	nop
  4228a3:	ins    BYTE PTR es:[edi],dx
  4228a4:	and    DWORD PTR ds:0x3b162592,ebx
  4228aa:	dec    edi
  4228ab:	cmp    DWORD PTR [eax+edx*2+0x28cbf88a],eax
  4228b2:	jecxz  0x4228cf
  4228b4:	add    DWORD PTR [edx-0x73],ecx
  4228b7:	xor    DWORD PTR [ebp+0x41],edi
  4228ba:	cmp    ebp,esi
  4228bc:	frstor [eax-0x762d9e27]
  4228c2:	xchg   BYTE PTR [eax],bl
  4228c4:	call   0x5f10193e
  4228c9:	push   esp
  4228ca:	cld    
  4228cb:	into   
  4228cc:	push   eax
  4228cd:	xor    ah,BYTE PTR ds:0x192b5428
  4228d3:	rol    BYTE PTR [eax-0x29d4134b],1
  4228d9:	(bad)  
  4228da:	fild   WORD PTR [eax+0x10394c2e]
  4228e0:	cmp    ah,BYTE PTR [ecx]
  4228e2:	std    
  4228e3:	addr16 iret 
  4228e5:	mov    al,ds:0x7ccbcef9
  4228ea:	loope  0x4228c0
  4228ec:	or     eax,0xb3558e39
  4228f1:	pavgw  mm4,QWORD PTR [eax*2+0x2e908aa5]
  4228f9:	adc    eax,0xa75fcb4f
  4228fe:	cli    
  4228ff:	and    ebx,DWORD PTR [ecx-0x27]
  422902:	push   ds
  422903:	retf   0x3c4f
  422906:	or     al,0x69
  422908:	xchg   BYTE PTR [edx+0x73968752],bh
  42290e:	push   ss
  42290f:	dec    edi
  422910:	pop    edi
  422911:	sub    DWORD PTR [edi-0x5822a08d],eax
  422917:	imul   ecx,DWORD PTR [esi+0x45],0x99a4c9a
  42291e:	cmp    bl,BYTE PTR [edi]
  422920:	inc    esp
  422921:	adc    BYTE PTR [ebp+0x1b],ah
  422924:	add    eax,0xf106a683
  422929:	pusha  
  42292a:	fist   WORD PTR [esi-0x45ac8334]
  422930:	in     eax,0xad
  422932:	mov    al,0xc7
  422934:	fdivr  DWORD PTR [edi+0x8447226]
  42293a:	push   0x270856c9
  42293f:	mov    cl,0x4b
  422941:	cld    
  422942:	dec    edx
  422943:	imul   DWORD PTR [ebp+0x125a11dc]
  422949:	inc    esp
  42294a:	pop    ebx
  42294b:	test   eax,0xef84183f
  422950:	mov    ah,0xe4
  422952:	fnstenv [eax+0x3a]
  422955:	sub    eax,0x6b98deb0
  42295a:	test   BYTE PTR [edi+0x39],cl
  42295d:	syscall 
  42295f:	xor    DWORD PTR [esi-0x51],esi
  422962:	xlat   BYTE PTR ds:[ebx]
  422963:	fstp   DWORD PTR [esi]
  422965:	dec    BYTE PTR ss:[edi-0x6b7c1f97]
  42296c:	and    ah,BYTE PTR [ebp-0x4d]
  42296f:	push   esp
  422970:	xor    DWORD PTR [ebp*8+0x4ac60eb3],ebp
  422977:	sbb    ecx,DWORD PTR ds:0xeabdb02d
  42297d:	jns    0x422988
  42297f:	cli    
  422980:	sbb    ch,dl
  422982:	test   eax,0xc3c071ca
  422987:	cmp    ch,dh
  422989:	and    edi,esi
  42298b:	jmp    0x42295d
  42298d:	cmp    BYTE PTR [ebx+0x3b0b2bce],ah
  422993:	inc    eax
  422994:	in     al,dx
  422995:	lahf   
  422996:	repnz cmp al,0x29
  422999:	push   es
  42299a:	and    DWORD PTR [ebp+0x21],eax
  42299d:	test   eax,0x639409b7
  4229a2:	push   edi
  4229a3:	push   esp
  4229a4:	and    al,0xdd
  4229a6:	jae    0x422940
  4229a8:	sub    eax,0x7f196161
  4229ad:	dec    edi
  4229ae:	mov    edi,DWORD PTR [ebx]
  4229b0:	imul   esi,DWORD PTR [ecx-0xf],0xffffffd7
  4229b4:	xchg   ebp,eax
  4229b5:	ret    0xc389
  4229b8:	ret    0x3f2b
  4229bb:	xchg   ebx,eax
  4229bc:	cdq    
  4229bd:	fcomp  DWORD PTR [ecx+0x7e]
  4229c0:	ja     0x42296e
  4229c2:	dec    esp
  4229c3:	xchg   edx,eax
  4229c4:	sub    BYTE PTR [edx-0x75],bl
  4229c7:	(bad)  
  4229c8:	jge    0x4229db
  4229ca:	dec    ebx
  4229cb:	mov    esi,0xa148d1a0
  4229d0:	mov    ch,BYTE PTR [ebx]
  4229d2:	out    dx,al
  4229d3:	test   al,0x4e
  4229d5:	xchg   edi,eax
  4229d6:	push   esp
  4229d7:	sub    eax,0xce4fac0b
  4229dc:	pop    ds
  4229dd:	retf   
  4229de:	(bad)  
  4229df:	fadd   DWORD PTR [ecx+0x1d33376]
  4229e5:	inc    ebx
  4229e6:	sub    BYTE PTR [edi-0x3616327d],0xf6
  4229ed:	and    ebp,eax
  4229ef:	in     eax,dx
  4229f0:	fsubr  DWORD PTR [ebp+0x720c3a88]
  4229f6:	cmp    edx,DWORD PTR [ecx-0x2487b2e1]
  4229fc:	inc    edx
  4229fd:	xchg   esp,eax
  4229fe:	jno    0x4229e4
  422a00:	dec    ebx
  422a01:	dec    ebx
  422a02:	mov    bh,0x23
  422a04:	ins    DWORD PTR es:[edi],dx
  422a05:	rcr    DWORD PTR es:[edx-0x56e6cac8],0x4f
  422a0d:	loopne 0x422a89
  422a0f:	outs   dx,BYTE PTR ds:[esi]
  422a10:	in     al,dx
  422a11:	dec    esi
  422a12:	mov    dl,0xd
  422a14:	jmp    0x422a0c
  422a16:	push   es
  422a17:	shr    DWORD PTR [edi+0xcaf2425],1
  422a1d:	ret    
  422a1e:	and    eax,eax
  422a20:	sbb    DWORD PTR [ecx],0xfffffffb
  422a23:	jbe    0x422a21
  422a25:	adc    eax,0xa01cf4a8
  422a2a:	inc    eax
  422a2b:	dec    ebx
  422a2c:	pusha  
  422a2d:	sbb    DWORD PTR [edi+eiz*1+0x14],ebp
  422a31:	ret    
  422a32:	neg    BYTE PTR [ebp+0x3507fa28]
  422a38:	mov    fs,WORD PTR [ecx+0x708a1434]
  422a3e:	xchg   ecx,eax
  422a3f:	stos   BYTE PTR es:[edi],al
  422a40:	add    al,BYTE PTR [eax-0x11]
  422a43:	repnz ins DWORD PTR es:[edi],dx
  422a45:	test   eax,0x4dbbb3c9
  422a4a:	sbb    BYTE PTR [esi-0x3558e201],bl
  422a50:	mov    BYTE PTR [eax+ebp*1-0x6fed6e06],dl
  422a57:	test   BYTE PTR [esi-0x13bbdaba],ch
  422a5d:	ret    0x9c22
  422a60:	cdq    
  422a61:	dec    ecx
  422a62:	xlat   BYTE PTR ds:[ebx]
  422a63:	push   0xffffff92
  422a65:	(bad)  
  422a66:	mov    edi,DWORD PTR [ebx+eiz*8-0x64]
  422a6a:	or     eax,ecx
  422a6c:	push   ebp
  422a6d:	inc    edx
  422a6e:	inc    ebx
  422a6f:	lods   eax,DWORD PTR ds:[esi]
  422a70:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422a71:	or     BYTE PTR [esi],bl
  422a73:	fisubr DWORD PTR [ebx+0x533a572]
  422a79:	mov    esp,DWORD PTR [edi+0x32]
  422a7c:	je     0x422a86
  422a7e:	stc    
  422a7f:	test   cl,bl
  422a81:	push   edx
  422a82:	in     eax,dx
  422a83:	fnsave ds:0x82a809f4
  422a89:	retf   
  422a8a:	jp     0x422a85
  422a8c:	cmp    ebp,DWORD PTR [ecx]
  422a8e:	mov    ?,WORD PTR ds:0xa42c531a
  422a94:	in     al,0xc2
  422a96:	inc    edi
  422a97:	adc    ch,BYTE PTR [edi-0x5]
  422a9a:	fnstcw WORD PTR [ecx-0x1b]
  422a9d:	out    0x89,al
  422a9f:	aad    0x3d
  422aa1:	and    DWORD PTR [edx+0x7e],ebx
  422aa4:	xchg   ecx,eax
  422aa5:	loop   0x422a35
  422aa7:	mul    BYTE PTR [esi+0x4d]
  422aaa:	mov    cl,0xaa
  422aac:	sar    DWORD PTR cs:[bx-0x6f73],0x30
  422ab3:	pushf  
  422ab4:	mov    ds:0x3e457c19,al
  422ab9:	out    0xcd,al
  422abb:	or     al,0x31
  422abd:	xchg   ebx,eax
  422abe:	xchg   esi,eax
  422abf:	inc    edx
  422ac0:	ins    DWORD PTR es:[edi],dx
  422ac1:	jne    0x422a9a
  422ac3:	and    eax,0x8dabc9a5
  422ac8:	jb     0x422a6c
  422aca:	dec    cl
  422acc:	cmp    bh,dl
  422ace:	sbb    al,0xf2
  422ad0:	mov    edi,esp
  422ad2:	ins    DWORD PTR es:[edi],dx
  422ad3:	jp     0x422ac9
  422ad5:	xchg   BYTE PTR [ebx+esi*4-0x3715000c],ch
  422adc:	gs jmp 0x78f3d5f0
  422ae2:	and    dh,bh
  422ae4:	and    ebx,DWORD PTR [esi+0x2321abbe]
  422aea:	dec    si
  422aec:	sub    bh,bh
  422aee:	pop    DWORD PTR [esi]
  422af0:	push   edi
  422af1:	pushf  
  422af2:	sub    ah,dl
  422af4:	xchg   edi,eax
  422af5:	inc    ecx
  422af6:	out    0x51,al
  422af8:	call   FWORD PTR [ebx]
  422afa:	dec    eax
  422afb:	mov    edx,0xe7ab7f6f
  422b00:	shl    DWORD PTR [edx],cl
  422b02:	idiv   DWORD PTR [ecx]
  422b04:	popf   
  422b05:	jo     0x422b20
  422b07:	fild   QWORD PTR [edx]
  422b09:	and    DWORD PTR [esi+0xa],0xfffffff7
  422b0d:	lock mov ebx,0xb5ae8adc
  422b13:	jle    0x422aa7
  422b15:	mov    eax,ds:0xf7af454c
  422b1a:	out    0xaa,al
  422b1c:	fild   DWORD PTR [eax+0x7a]
  422b1f:	lods   al,BYTE PTR ds:[esi]
  422b20:	lock stos BYTE PTR es:[edi],al
  422b22:	js     0x422b1b
  422b24:	ret    
  422b25:	sbb    bh,0xee
  422b28:	leave  
  422b29:	jle    0x422b3b
  422b2b:	cwde   
  422b2c:	inc    ebp
  422b2d:	add    BYTE PTR [ecx],dl
  422b2f:	inc    eax
  422b30:	or     eax,0x9a40350b
  422b35:	lods   al,BYTE PTR ds:[esi]
  422b36:	repz popf 
  422b38:	leave  
  422b39:	xor    ch,BYTE PTR [ebx]
  422b3b:	mov    ds:0x53ae3da5,al
  422b40:	leave  
  422b41:	jbe    0x422b9c
  422b43:	or     DWORD PTR [ebx+esi*4+0x21],edi
  422b47:	retf   
  422b48:	xchg   esp,eax
  422b49:	sahf   
  422b4a:	xchg   esp,eax
  422b4b:	xor    eax,0x6b46a0ad
  422b50:	jl     0x422bcb
  422b52:	mov    ds:0x70446989,al
  422b57:	mov    bh,0xa8
  422b59:	sub    esi,DWORD PTR [ecx-0x668ba4ea]
  422b5f:	daa    
  422b60:	jmp    0x422b05
  422b62:	out    0xdf,eax
  422b64:	pusha  
  422b65:	inc    eax
  422b66:	dec    ebp
  422b67:	jg     0x422bb7
  422b69:	int3   
  422b6a:	leave  
  422b6b:	clc    
  422b6c:	aad    0x6a
  422b6e:	inc    edx
  422b6f:	mov    ch,0x9e
  422b71:	loop   0x422b9e
  422b73:	mov    bl,0x5b
  422b75:	sti    
  422b76:	lock test al,0x63
  422b79:	into   
  422b7a:	mov    esp,0xb83df5cb
  422b7f:	test   al,0xdf
  422b81:	sub    bh,al
  422b83:	scas   eax,DWORD PTR es:[edi]
  422b84:	sub    eax,0xbd52a98c
  422b89:	mov    DWORD PTR [ebp+0x3609aea5],ebp
  422b8f:	clc    
  422b90:	push   edi
  422b91:	push   esi
  422b92:	mov    esi,0xecb1e013
  422b97:	jnp    0x422b28
  422b99:	or     dh,BYTE PTR [ebp+0x3c1837d]
  422b9f:	push   cs
  422ba0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422ba1:	js     0x422b6f
  422ba3:	imul   esp,DWORD PTR [edx+ecx*4-0xf6f07ed],0x77
  422bab:	data16 jb 0x422bfa
  422bae:	lods   al,BYTE PTR ds:[esi]
  422baf:	hlt    
  422bb0:	(bad)  
  422bb1:	push   eax
  422bb2:	lods   eax,DWORD PTR ds:[esi]
  422bb3:	xchg   ecx,edi
  422bb5:	stos   BYTE PTR es:[edi],al
  422bb6:	ja     0x422b6d
  422bb8:	call   0xb163:0xac17ba4e
  422bbf:	xchg   edi,eax
  422bc0:	push   edi
  422bc1:	loope  0x422b76
  422bc3:	lods   al,BYTE PTR ds:[esi]
  422bc4:	and    DWORD PTR [ebp+ebx*2-0x7d],edx
  422bc8:	lods   eax,DWORD PTR ds:[esi]
  422bc9:	xor    cl,bl
  422bcb:	and    bl,bl
  422bcd:	aaa    
  422bce:	imul   ebx,DWORD PTR [ebp+0x7e],0x703b5bcb
  422bd5:	fidivr WORD PTR [edx-0xe]
  422bd8:	or     dl,ch
  422bda:	cmp    al,0x37
  422bdc:	inc    ecx
  422bdd:	cmp    BYTE PTR [ecx-0x3c10ac67],cl
  422be3:	mov    dh,BYTE PTR [eax+0x130bf48b]
  422be9:	pop    ss
  422bea:	loope  0x422bef
  422bec:	jp     0x422c03
  422bee:	cs stos BYTE PTR es:[edi],al
  422bf0:	or     bh,BYTE PTR [edi]
  422bf2:	adc    DWORD PTR [esi],esi
  422bf4:	add    ah,BYTE PTR [ebx]
  422bf6:	add    ch,ch
  422bf8:	sbb    eax,0x274f0140
  422bfd:	ins    BYTE PTR es:[edi],dx
  422bfe:	xor    dh,0x1
  422c01:	pop    ecx
  422c02:	daa    
  422c03:	cmp    edx,DWORD PTR [ebx-0x2f9589bc]
  422c09:	add    ah,BYTE PTR ds:0x4343fac4
  422c0f:	dec    edx
  422c10:	out    0x3a,al
  422c12:	add    BYTE PTR [ebx],cl
  422c14:	inc    ebx
  422c15:	cs jo  0x422c81
  422c18:	stos   DWORD PTR es:[edi],eax
  422c19:	outs   dx,BYTE PTR ds:[esi]
  422c1a:	xchg   ecx,eax
  422c1b:	cmp    al,0x34
  422c1d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422c1e:	and    esi,ebx
  422c20:	(bad)  
  422c21:	and    esi,esp
  422c23:	mov    bh,0x88
  422c25:	loop   0x422c00
  422c27:	arpl   WORD PTR [eax-0xc096680],bx
  422c2d:	inc    ebp
  422c2e:	in     al,dx
  422c2f:	adc    eax,0x5bfed275
  422c35:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422c36:	(bad)  
  422c37:	fmul   QWORD PTR [ebp-0x64]
  422c3a:	push   0xa426bdda
  422c3f:	adc    bl,BYTE PTR [edi+0x75]
  422c42:	and    DWORD PTR [ecx+0x7],0xffffff9c
  422c46:	popf   
  422c47:	or     al,0xb7
  422c49:	pusha  
  422c4a:	bound  esi,QWORD PTR [edx-0x77]
  422c4d:	and    eax,0x8747fafd
  422c52:	mov    al,0xea
  422c54:	sub    BYTE PTR [ecx-0x34a6311e],dh
  422c5a:	dec    esp
  422c5b:	xor    DWORD PTR [edx+0x37],0xb7095db0
  422c62:	int    0x7
  422c64:	js     0x422c79
  422c66:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422c67:	les    eax,FWORD PTR [esi-0x69]
  422c6a:	sti    
  422c6b:	and    cl,ah
  422c6d:	call   0x98a0:0xaf83485b
  422c74:	jae    0x422c80
  422c76:	sahf   
  422c77:	mov    ds:0xe9bc1709,al
  422c7c:	je     0x422c70
  422c7e:	mov    dh,BYTE PTR [ecx-0x1df4f5ff]
  422c84:	mov    ecx,0xc6957e31
  422c89:	ds fldlg2 
  422c8c:	out    dx,al
  422c8d:	fbstp  TBYTE PTR [edx-0x25]
  422c90:	mov    dh,0xfc
  422c92:	aaa    
  422c93:	cmp    BYTE PTR [ebx+0x70fed24c],dl
  422c99:	shr    BYTE PTR [esi+0x4],1
  422c9c:	sahf   
  422c9d:	pop    DWORD PTR [ebx+edx*1+0x3e6c3fd5]
  422ca4:	pop    edx
  422ca5:	out    dx,al
  422ca6:	sub    bh,BYTE PTR [esi-0x63b83e86]
  422cac:	mov    cl,0xbf
  422cae:	pop    ss
  422caf:	xchg   esp,eax
  422cb0:	xchg   ecx,eax
  422cb1:	fadd   DWORD PTR [ebx]
  422cb3:	test   eax,0xaed15e24
  422cb8:	xor    eax,0x86b7670d
  422cbd:	rcr    esp,1
  422cbf:	sub    al,0x95
  422cc1:	lea    esi,[edx]
  422cc3:	mov    fs,WORD PTR [edi]
  422cc5:	popa   
  422cc6:	inc    esi
  422cc7:	(bad)  
  422cc9:	push   0x467a84c9
  422cce:	xor    dh,ch
  422cd0:	ret    
  422cd1:	ds jl  0x422cdb
  422cd4:	add    al,0x91
  422cd6:	or     al,0xfc
  422cd8:	push   ebx
  422cd9:	mov    al,0x5c
  422cdb:	xor    cl,BYTE PTR [eax]
  422cdd:	sbb    dh,ah
  422cdf:	push   esi
  422ce0:	mov    ebx,0xd685a6a3
  422ce5:	lock mov esp,0x7b956c97
  422ceb:	and    cl,ch
  422ced:	dec    ecx
  422cee:	neg    BYTE PTR [edx-0x5b]
  422cf1:	sti    
  422cf2:	mov    ah,0x3d
  422cf4:	jbe    0x422d61
  422cf6:	ds lahf 
  422cf8:	lds    edi,FWORD PTR ds:[ebx]
  422cfb:	push   ebx
  422cfc:	add    DWORD PTR [ecx-0x1c],edi
  422cff:	addr16 dec ecx
  422d01:	or     ch,BYTE PTR [edx]
  422d03:	pop    edx
  422d04:	xchg   ebx,eax
  422d05:	cs gs jmp 0x422d75
  422d09:	jb     0x422d08
  422d0b:	scas   al,BYTE PTR es:[edi]
  422d0c:	jo     0x422d3e
  422d0e:	in     al,dx
  422d0f:	data16 movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422d11:	test   ebx,esi
  422d13:	xchg   edi,eax
  422d14:	or     BYTE PTR ds:0xb7a768d6,bh
  422d1a:	pop    ss
  422d1b:	or     BYTE PTR [edx+0x6d],bl
  422d1e:	sub    ch,BYTE PTR [edx+ebp*8+0x7814b9bd]
  422d25:	or     eax,ecx
  422d27:	ficomp WORD PTR [ecx]
  422d29:	(bad)  [eax-0x5c]
  422d2c:	xchg   ebx,eax
  422d2d:	mov    edx,0x9dcd73c4
  422d32:	mov    ds:0xea303227,al
  422d37:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422d38:	(bad)  
  422d39:	mov    al,0xfe
  422d3b:	pop    ebp
  422d3c:	aas    
  422d3d:	out    0x1d,eax
  422d3f:	loop   0x422db0
  422d41:	mov    ds:0xa73d09f5,eax
  422d46:	fcmove st,st(4)
  422d48:	or     BYTE PTR [eax],ch
  422d4a:	xor    edi,DWORD PTR [ebp-0x58fe2e69]
  422d50:	hlt    
  422d51:	sub    al,0x92
  422d53:	dec    eax
  422d54:	nop
  422d55:	mov    ds:0x4b4d4ef,al
  422d5a:	clc    
  422d5b:	test   BYTE PTR [eax-0x1f],cl
  422d5e:	mov    al,0xac
  422d60:	es das 
  422d62:	dec    edx
  422d63:	sbb    edx,DWORD PTR [edx-0x33ec8552]
  422d69:	arpl   WORD PTR [eax-0x7a149ab3],bp
  422d6f:	add    BYTE PTR [ebp+0x7a853cea],al
  422d75:	les    ax,DWORD PTR [esi]
  422d78:	test   BYTE PTR [esi],0x88
  422d7b:	mov    esp,DWORD PTR [ebx-0x232d2c92]
  422d81:	mov    ds:0x6725b6b2,eax
  422d86:	inc    ebx
  422d87:	icebp  
  422d88:	jae    0x422dc3
  422d8a:	mov    edi,DWORD PTR [esi+0x6217399b]
  422d90:	into   
  422d91:	movntps XMMWORD PTR fs:[edi+0x63],xmm0
  422d96:	inc    eax
  422d97:	aam    0xb5
  422d99:	sti    
  422d9a:	jmp    0x422e16
  422d9c:	adc    eax,0x9d3ee5e4
  422da1:	mov    bh,0x60
  422da3:	xor    ah,0x59
  422da6:	scas   al,BYTE PTR es:[edi]
  422da7:	out    dx,al
  422da8:	push   es
  422da9:	mov    ch,0x39
  422dab:	outs   dx,BYTE PTR ds:[esi]
  422dac:	arpl   WORD PTR [esi+0x3f],bx
  422daf:	xchg   bl,dl
  422db1:	mov    cl,0x38
  422db3:	test   dh,ch
  422db5:	in     eax,dx
  422db6:	dec    eax
  422db7:	dec    edx
  422db8:	jae    0x422e2c
  422dba:	sub    edx,edx
  422dbc:	loopne 0x422d5a
  422dbe:	cmp    BYTE PTR [eax+0x7c],bh
  422dc1:	xchg   esp,eax
  422dc2:	sar    BYTE PTR [edx-0x13d23288],1
  422dc8:	xor    ebx,DWORD PTR ss:[esi]
  422dcb:	push   DWORD PTR [ebp-0x49]
  422dce:	sbb    BYTE PTR [esi-0x7e99b48e],ah
  422dd4:	call   0x2089:0x7c2c67b1
  422ddb:	or     BYTE PTR [ebx],dh
  422ddd:	and    al,0x97
  422ddf:	mov    al,0x7a
  422de1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422de2:	std    
  422de3:	pop    eax
  422de4:	scas   eax,DWORD PTR es:[edi]
  422de5:	scas   al,BYTE PTR es:[edi]
  422de6:	shr    BYTE PTR [eax+0x1c],1
  422de9:	(bad)  
  422deb:	enter  0x5bfe,0x12
  422def:	jecxz  0x422e55
  422df1:	(bad)  
  422df3:	push   eax
  422df4:	jmp    0xada3:0x4d65a574
  422dfb:	mov    cl,0x2b
  422dfd:	repz and esp,DWORD PTR [esi+0x78]
  422e01:	inc    ebx
  422e02:	sbb    DWORD PTR [edx+eiz*2-0x148db5d7],eax
  422e09:	jmp    0x15620d68
  422e0e:	mov    bl,0x4f
  422e10:	sbb    ebp,edx
  422e12:	push   ebp
  422e13:	mov    ah,bl
  422e15:	sbb    al,0xdf
  422e17:	pop    ecx
  422e18:	js     0x422e75
  422e1a:	out    dx,eax
  422e1b:	xchg   BYTE PTR [ebp+0x6a],bh
  422e1e:	adc    cl,BYTE PTR [edi-0x68539f12]
  422e24:	daa    
  422e25:	xor    al,0xda
  422e27:	pop    ss
  422e28:	rol    BYTE PTR [edi-0x73d58d26],cl
  422e2e:	jg     0x422df7
  422e30:	adc    cl,BYTE PTR [eax]
  422e32:	lods   al,BYTE PTR ds:[esi]
  422e33:	lods   eax,DWORD PTR ds:[esi]
  422e34:	(bad)
  422e37:	dec    ebx
  422e38:	imul   DWORD PTR [eax-0x5b6628e7]
  422e3e:	dec    ebx
  422e3f:	push   esp
  422e40:	pop    es
  422e41:	fidiv  WORD PTR [ecx-0x55631f92]
  422e47:	je     0x422e93
  422e49:	add    ch,BYTE PTR [eax]
  422e4b:	inc    esi
  422e4c:	xor    ah,BYTE PTR ds:0xdd33adcd
  422e52:	sub    ah,BYTE PTR [esi-0x7e88b30e]
  422e58:	xchg   edx,eax
  422e59:	in     eax,0xeb
  422e5b:	sub    DWORD PTR [eax],esi
  422e5d:	or     dl,dh
  422e5f:	cmp    al,0xf1
  422e61:	fcomp  DWORD PTR [eax+0x37]
  422e64:	push   0x6277daa9
  422e69:	mov    eax,0xcea5d6fe
  422e6e:	bound  ebx,QWORD PTR [esi+0x29dc41f2]
  422e74:	xor    esp,DWORD PTR [ebx+ebp*1-0x169aeadf]
  422e7b:	out    dx,al
  422e7c:	jb     0x422eaf
  422e7e:	pushf  
  422e7f:	dec    eax
  422e80:	cmp    ah,0xdc
  422e83:	leave  
  422e84:	pop    ebx
  422e85:	shl    BYTE PTR [esi],cl
  422e87:	mov    ah,0x39
  422e89:	or     ch,BYTE PTR [edx+0x5f]
  422e8c:	inc    eax
  422e8d:	sbb    eax,0x837006da
  422e92:	xor    DWORD PTR fs:[eax],esi
  422e95:	push   0xffffffa0
  422e97:	pop    eax
  422e98:	jge    0x422ece
  422e9a:	(bad)  
  422e9b:	int    0x4d
  422e9d:	adc    eax,0x1561d674
  422ea2:	ret    0x6d94
  422ea5:	xor    dh,BYTE PTR [edx]
  422ea7:	xor    esi,eax
  422ea9:	rcr    eax,0xd9
  422eac:	adc    edi,edx
  422eae:	idiv   DWORD PTR [eax-0x28]
  422eb1:	pop    ebx
  422eb2:	lahf   
  422eb3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422eb4:	push   eax
  422eb5:	jmp    0x487d843f
  422eba:	repz add DWORD PTR [ecx-0x6d533171],edx
  422ec1:	jae    0x422e8a
  422ec3:	push   ss
  422ec4:	pop    es
  422ec5:	cs xchg cl,bh
  422ec8:	aas    
  422ec9:	ins    BYTE PTR es:[edi],dx
  422eca:	inc    esp
  422ecb:	in     al,dx
  422ecc:	fdiv   QWORD PTR [edx]
  422ece:	and    eax,0xf2437675
  422ed3:	inc    ecx
  422ed4:	mov    al,ds:0xceec7dab
  422ed9:	jmp    0x422ee7
  422edb:	je     0x422e73
  422edd:	xchg   ebp,eax
  422ede:	push   esi
  422edf:	rol    BYTE PTR [ebx+eax*4],1
  422ee2:	jae    0x422ec2
  422ee4:	data16 (bad) 
  422ee6:	cmp    DWORD PTR [ebx+0xb],eax
  422ee9:	call   0x1c91:0x445354f1
  422ef0:	es enter 0xb248,0x4c
  422ef5:	pop    edi
  422ef6:	cli    
  422ef7:	inc    edi
  422ef8:	ret    
  422ef9:	cmp    eax,0x49fbbbe8
  422efe:	add    eax,0xb00d800
  422f03:	or     ecx,edx
  422f05:	aam    0xc0
  422f07:	fmulp  st(5),st
  422f09:	xchg   DWORD PTR [bp+di+0x1f67],ebx
  422f0e:	mov    cs,esi
  422f10:	jmp    0x422f40
  422f12:	lahf   
  422f13:	cli    
  422f14:	lahf   
  422f15:	cmc    
  422f16:	data16 add ah,ah
  422f19:	push   ds
  422f1a:	rcl    DWORD PTR [ebx-0x5568dc9c],1
  422f20:	(bad)  
  422f21:	out    dx,al
  422f22:	cmp    DWORD PTR [eax],esp
  422f24:	pusha  
  422f25:	cld    
  422f26:	stos   BYTE PTR es:[edi],al
  422f27:	aaa    
  422f28:	cmovne ebp,esi
  422f2b:	sbb    DWORD PTR [ebp-0x6e],edx
  422f2e:	dec    ebx
  422f2f:	add    BYTE PTR [ebp+0x1a62969e],al
  422f35:	mov    ch,BYTE PTR [edi]
  422f37:	xlat   BYTE PTR ds:[ebx]
  422f38:	and    DWORD PTR [edi+0x76],0xaa0c7cb
  422f3f:	xor    al,0xae
  422f41:	sahf   
  422f42:	xchg   edx,eax
  422f43:	cmp    edx,eax
  422f45:	xor    ch,BYTE PTR [ebx-0x18]
  422f48:	cmp    cl,BYTE PTR [edx+edi*8]
  422f4b:	leave  
  422f4c:	sbb    al,0x72
  422f4e:	sbb    bh,cl
  422f50:	jle    0x422f53
  422f52:	out    0xc8,al
  422f54:	test   DWORD PTR [ebx+eiz*1+0x361669f1],eax
  422f5b:	jno    0x422f57
  422f5d:	sbb    cl,al
  422f5f:	lods   al,BYTE PTR ds:[esi]
  422f60:	add    al,BYTE PTR [ecx+eiz*4]
  422f63:	adc    esi,DWORD PTR [esi-0x6c]
  422f66:	adc    al,0xc
  422f68:	das    
  422f69:	xor    DWORD PTR [eax],ecx
  422f6b:	mov    bl,0x63
  422f6d:	mov    ds:0xed45f7a8,al
  422f72:	rol    BYTE PTR [eax-0xb9837fb],cl
  422f78:	xlat   BYTE PTR ds:[ebx]
  422f79:	mov    WORD PTR [ebx],?
  422f7b:	aas    
  422f7c:	sub    bh,BYTE PTR [edi-0x77]
  422f7f:	fs mov ebx,0x250a1593
  422f85:	sbb    eax,0x976e033
  422f8a:	mov    ebp,0x6d60db0f
  422f8f:	pop    ecx
  422f90:	push   ecx
  422f91:	mov    eax,DWORD PTR [edi-0xc]
  422f94:	add    dl,BYTE PTR [ecx+eax*8+0x2e]
  422f98:	repz leave 
  422f9a:	xchg   edi,eax
  422f9b:	pop    ebx
  422f9c:	test   BYTE PTR ds:0xffa36a6d,ah
  422fa2:	stc    
  422fa3:	fcmovb st,st(0)
  422fa5:	add    eax,0xb94a0914
  422faa:	stc    
  422fab:	xchg   ecx,eax
  422fac:	mul    DWORD PTR [edx]
  422fae:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422faf:	dec    ecx
  422fb0:	xchg   BYTE PTR [edx+0x68],bh
  422fb3:	add    bh,ah
  422fb5:	cwde   
  422fb6:	retf   
  422fb7:	(bad)  
  422fb8:	fistp  WORD PTR [edx+0x3a]
  422fbb:	pop    es
  422fbc:	rcr    DWORD PTR [esi],cl
  422fbe:	inc    edi
  422fbf:	cmp    eax,0xd0bc13e8
  422fc4:	cld    
  422fc5:	cmp    dh,BYTE PTR [esi-0x766f40a]
  422fcb:	aam    0x63
  422fcd:	jg     0x422f9d
  422fcf:	inc    ebx
  422fd0:	dec    ebx
  422fd1:	scas   eax,DWORD PTR es:[edi]
  422fd2:	push   ebx
  422fd3:	push   edi
  422fd4:	dec    eax
  422fd5:	mov    ?,WORD PTR [ebx+0x5]
  422fd8:	inc    ecx
  422fd9:	cdq    
  422fda:	adc    al,0x30
  422fdc:	xchg   BYTE PTR [ebp-0x6],bh
  422fdf:	pop    sp
  422fe1:	outs   dx,BYTE PTR ds:[esi]
  422fe2:	shl    BYTE PTR [ebx],cl
  422fe4:	sub    DWORD PTR [ecx],0xa2d860d0
  422fea:	aam    0xb
  422fec:	cld    
  422fed:	sub    al,0x3a
  422fef:	dec    ebx
  422ff0:	sbb    BYTE PTR [esi],bh
  422ff2:	in     al,0x56
  422ff4:	(bad)  
  422ff5:	cld    
  422ff6:	cmp    BYTE PTR [esi+0x25ad1af7],ch
  422ffc:	cmp    ecx,DWORD PTR [edi]
  422ffe:	pop    eax
  422fff:	in     al,dx
  423000:	push   edx
  423001:	loope  0x423027
  423003:	push   edx
  423004:	dec    eax
  423005:	fdivr  QWORD PTR [ebx]
  423007:	dec    edx
  423008:	mov    al,0x3
  42300a:	mov    ebx,0x99a954e6
  42300f:	jp     0x423065
  423011:	sub    al,0xf7
  423013:	add    eax,0x7eb9082f
  423018:	jno    0x58010c62
  42301e:	and    cl,BYTE PTR [ecx]
  423020:	test   BYTE PTR [ebx+0x8],ch
  423023:	loope  0x423099
  423025:	pushf  
  423026:	lahf   
  423027:	arpl   WORD PTR [ecx-0x2a],bp
  42302a:	jne    0x423078
  42302c:	push   ss
  42302d:	pop    esi
  42302e:	ds xchg edx,eax
  423030:	dec    ebx
  423031:	scas   eax,DWORD PTR es:[edi]
  423032:	jnp    0x422ff0
  423034:	es es inc edx
  423037:	mov    cl,0xd9
  423039:	or     bh,BYTE PTR [esi-0x29]
  42303c:	dec    ebx
  42303d:	in     al,0xb9
  42303f:	xor    ebp,ecx
  423041:	adc    DWORD PTR ds:0xed5c7128,eax
  423047:	je     0x4230ac
  423049:	sub    DWORD PTR [ecx],edx
  42304b:	inc    ebx
  42304c:	(bad)  
  42304d:	sbb    eax,0x8efbf143
  423052:	xchg   esi,eax
  423053:	sar    DWORD PTR [edx],cl
  423055:	mov    ah,0x91
  423057:	sbb    esi,DWORD PTR [ebx+ebx*2]
  42305a:	mov    ch,BYTE PTR [ecx+0x40c10c89]
  423060:	data16 fwait
  423062:	lods   al,BYTE PTR ds:[esi]
  423063:	mov    cl,0x7f
  423065:	enter  0x9eda,0x3c
  423069:	jno    0x4230e3
  42306b:	popa   
  42306c:	dec    esp
  42306d:	push   ds
  42306e:	sbb    al,0xd6
  423070:	jno    0x4230ec
  423072:	repz xchg ebx,eax
  423074:	retf   0x334f
  423077:	loopne 0x42308a
  423079:	scas   al,BYTE PTR es:[edi]
  42307a:	jmp    0x87de:0xcf17e1ca
  423081:	scas   eax,DWORD PTR es:[edi]
  423082:	xor    al,0x28
  423084:	stos   DWORD PTR es:[edi],eax
  423085:	lods   eax,DWORD PTR ds:[esi]
  423086:	out    dx,eax
  423087:	mov    bl,0x82
  423089:	jns    0x423065
  42308b:	push   ss
  42308c:	xchg   esp,eax
  42308d:	cmp    ah,BYTE PTR [edi+0x11]
  423090:	mov    bl,0x7d
  423092:	int3   
  423093:	data16 (bad) 
  423095:	mov    esi,DWORD PTR [esi]
  423097:	scas   eax,DWORD PTR es:[edi]
  423098:	hlt    
  423099:	cmp    BYTE PTR [edi+ebx*8-0x1c1004e1],al
  4230a0:	test   DWORD PTR [eax],esp
  4230a2:	ficomp DWORD PTR [ebx-0x5ad9cf32]
  4230a8:	inc    ebx
  4230a9:	nop
  4230aa:	and    bh,ah
  4230ac:	add    BYTE PTR [edi-0x58731720],al
  4230b2:	loope  0x423091
  4230b4:	sub    al,0xac
  4230b6:	and    bh,BYTE PTR [edi+0x3afaae33]
  4230bc:	or     eax,0x6a79099c
  4230c1:	sbb    BYTE PTR [eax+0xfc37132],dh
  4230c7:	push   cs
  4230c8:	dec    eax
  4230c9:	(bad)  [edx-0x6441ad66]
  4230cf:	fistp  QWORD PTR [ecx+0x35e16629]
  4230d5:	xchg   edx,eax
  4230d6:	outs   dx,BYTE PTR ds:[esi]
  4230d7:	mov    ah,0x3c
  4230d9:	(bad)  
  4230da:	into   
  4230db:	adc    BYTE PTR [esi],al
  4230dd:	test   DWORD PTR [edx],esi
  4230df:	mov    dh,0xf1
  4230e1:	jp     0x4230e5
  4230e3:	add    bl,bl
  4230e5:	imul   ebp,DWORD PTR [edi],0xffffffb8
  4230e8:	jecxz  0x4230ef
  4230ea:	or     eax,0xffffffff
  4230ed:	xchg   edx,eax
  4230ee:	int3   
  4230ef:	push   ebx
  4230f0:	mov    eax,ds:0xe68f999c
  4230f5:	or     DWORD PTR [esi+0x42d6d4b5],eax
  4230fb:	push   ebx
  4230fc:	fadd   QWORD PTR [ebp+0x4f18dce3]
  423102:	sbb    eax,DWORD PTR [edi-0x5f]
  423105:	sub    ch,BYTE PTR [ecx]
  423107:	addr16 ds inc edx
  42310a:	add    BYTE PTR [edi+eiz*8-0x7d5bb344],dh
  423111:	in     al,0xef
  423113:	mov    ss,WORD PTR [ebx-0x190ccfd6]
  423119:	xchg   esi,eax
  42311a:	int3   
  42311b:	daa    
  42311c:	sbb    ch,ah
  42311e:	pop    esp
  42311f:	push   ecx
  423120:	bnd jo 0x4230c1
  423123:	lods   eax,DWORD PTR ds:[esi]
  423124:	iret   
  423125:	push   0xffffffaa
  423127:	mul    WORD PTR [ecx]
  42312a:	mov    esp,0xeb974e3c
  42312f:	(bad)  
  423131:	adc    ebp,DWORD PTR [edi+0x58140d9d]
  423137:	push   edi
  423138:	(bad)  
  423139:	and    eax,0xc7e0c283
  42313e:	in     eax,0x29
  423140:	fucompp 
  423142:	jmp    0x423155
  423144:	jnp    0x423149
  423146:	loopne 0x42315b
  423148:	aam    0x7e
  42314a:	outs   dx,DWORD PTR ds:[esi]
  42314b:	mov    al,BYTE PTR [ebp-0x5c]
  42314e:	xchg   DWORD PTR [esi+0x7557f90a],esi
  423154:	push   ds
  423155:	int    0x2e
  423157:	xchg   BYTE PTR [ebp-0x64],ah
  42315a:	adc    BYTE PTR [ecx+0x19],al
  42315d:	ret    
  42315e:	xchg   BYTE PTR es:[edx+eiz*8-0x46],al
  423163:	pop    ss
  423164:	stc    
  423165:	(bad)  
  423166:	jmp    0x37fce3f5
  42316b:	and    BYTE PTR [ecx+0xff3f06f],bh
  423171:	(bad)  
  423172:	in     eax,0xb0
  423174:	pushf  
  423175:	shr    BYTE PTR [ebx+eiz*4],0xb2
  423179:	and    bh,BYTE PTR [edi]
  42317b:	fwait
  42317c:	pop    es
  42317d:	xchg   ebx,eax
  42317e:	add    eax,0xa0aa9393
  423183:	imul   ebx,DWORD PTR [ecx+0x3ce01dc8],0xffffff80
  42318a:	xchg   ebp,eax
  42318b:	and    esi,edx
  42318d:	retf   
  42318e:	test   al,0x49
  423190:	leave  
  423191:	mov    cs,WORD PTR [edi+0x2cf32a7]
  423197:	das    
  423198:	pop    ebx
  423199:	test   DWORD PTR [edx],edx
  42319b:	andnps xmm4,XMMWORD PTR [eax-0x1152ed88]
  4231a2:	push   0xa83906c0
  4231a7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4231a8:	fsubr  DWORD PTR [eax+0x3a5a1b79]
  4231ae:	sahf   
  4231af:	out    dx,al
  4231b0:	stos   DWORD PTR es:[edi],eax
  4231b1:	pop    edi
  4231b2:	popa   
  4231b3:	jl     0x423154
  4231b5:	jne    0x42313e
  4231b7:	push   ecx
  4231b8:	fild   DWORD PTR [ecx+0x3a4c1161]
  4231be:	ins    BYTE PTR es:[edi],dx
  4231bf:	xor    eax,0xff64031b
  4231c4:	cmp    cl,0xdf
  4231c7:	aas    
  4231c8:	pop    esi
  4231c9:	dec    ebx
  4231ca:	hlt    
  4231cb:	loopne 0x42320f
  4231cd:	mov    ds:0xa01087ff,al
  4231d2:	dec    ecx
  4231d3:	cmp    BYTE PTR [edx-0x7ecb4798],0xe8
  4231da:	sub    dl,ah
  4231dc:	fnstenv [eax+0x62ad4798]
  4231e2:	push   ebx
  4231e3:	fwait
  4231e4:	out    0x2d,al
  4231e6:	and    bl,0x7f
  4231e9:	push   ss
  4231ea:	aas    
  4231eb:	fs sbb al,0x58
  4231ee:	inc    esp
  4231ef:	cli    
  4231f0:	xchg   edi,eax
  4231f1:	xchg   ebp,eax
  4231f2:	jne    0x4231d6
  4231f4:	clc    
  4231f5:	popa   
  4231f6:	cli    
  4231f7:	xchg   ebp,eax
  4231f8:	outs   dx,BYTE PTR ds:[esi]
  4231f9:	rcl    bl,0x49
  4231fc:	js     0x42324a
  4231fe:	push   edi
  4231ff:	es pop edi
  423201:	xlat   BYTE PTR ds:[ebx]
  423202:	outs   dx,BYTE PTR ds:[esi]
  423203:	(bad)  
  423205:	pop    ecx
  423206:	dec    edx
  423207:	lods   eax,DWORD PTR ds:[esi]
  423208:	push   0xffffff85
  42320a:	lds    edx,FWORD PTR [ebx-0x5e]
  42320d:	xchg   BYTE PTR [ebp+0x20],ah
  423210:	mov    al,ds:0x6e1d18b7
  423215:	enter  0x1acb,0xb7
  423219:	inc    ebx
  42321a:	clc    
  42321b:	adc    eax,0x4db0251f
  423220:	(bad)  [edx]
  423222:	gs mov dl,0x89
  423225:	mov    al,ds:0xe81d4ad4
  42322a:	icebp  
  42322b:	add    eax,0x9121963a
  423230:	ss mov eax,0x96c7155d
  423236:	(bad)  
  423237:	pop    edx
  423238:	cmp    eax,0xf09c59d9
  42323d:	jo     0x423245
  42323f:	pushf  
  423240:	mov    edi,0xb7fff464
  423245:	(bad)  
  423246:	sbb    edx,edx
  423248:	loop   0x4231dd
  42324a:	cmc    
  42324b:	cmc    
  42324c:	and    eax,esp
  42324e:	imul   edx,DWORD PTR [ecx],0x4c493e39
  423254:	sub    al,0x4e
  423256:	je     0x423275
  423258:	push   edi
  423259:	js     0x423242
  42325b:	call   0x82ed:0x83926a1a
  423262:	cmp    al,0xe5
  423264:	xor    cl,bl
  423266:	ds sbb ebp,esp
  423269:	pop    ebx
  42326a:	push   ebx
  42326c:	mov    ds:0x6b10fa69,eax
  423271:	inc    edx
  423272:	out    0xe6,al
  423274:	(bad)  
  423276:	test   al,0xca
  423278:	or     bl,dh
  42327a:	mov    DWORD PTR [edi-0x65],edi
  42327d:	call   0x7e6c:0x38403312
  423284:	dec    eax
  423285:	mov    DWORD PTR [ecx],ebx
  423287:	dec    edx
  423288:	in     al,dx
  423289:	xchg   edx,eax
  42328a:	jl     0x4232da
  42328c:	xchg   esi,eax
  42328d:	lock adc bh,ah
  423290:	and    BYTE PTR [ebp+0xd835bae],ah
  423296:	mov    bl,0xa6
  423298:	retf   0xc530
  42329b:	add    eax,DWORD PTR [eax+0x67]
  42329e:	jmp    0x939d:0x6c0c7910
  4232a5:	fmul   DWORD PTR [edx+0x2fcb5ec5]
  4232ab:	dec    esi
  4232ac:	jns    0x4232dc
  4232ae:	(bad)  
  4232b0:	push   bx
  4232b2:	jmp    0x42326a
  4232b4:	sti    
  4232b5:	push   edi
  4232b6:	mov    al,0xa1
  4232b8:	adc    BYTE PTR [edi+0x42],bl
  4232bb:	adc    al,0xc6
  4232bd:	jnp    0x423263
  4232bf:	stos   DWORD PTR es:[edi],eax
  4232c0:	retf   
  4232c1:	sub    BYTE PTR [ebp+0x51010ead],bh
  4232c7:	(bad)  
  4232c8:	sub    eax,DWORD PTR [ecx+0x3f7cc029]
  4232ce:	(bad)  
  4232cf:	push   ecx
  4232d0:	mov    edx,DWORD PTR [esi-0x702c9ed2]
  4232d6:	fsubr  QWORD PTR [eax+eax*4]
  4232d9:	or     BYTE PTR [eax+ebp*2-0x33c7201d],bl
  4232e0:	sti    
  4232e1:	and    DWORD PTR [ecx],0xffffffde
  4232e4:	jg     0x42332d
  4232e6:	int3   
  4232e7:	xor    eax,0x94cdd752
  4232ec:	pop    edi
  4232ed:	(bad)  
  4232ee:	arpl   WORD PTR [esi+0x786266a9],ax
  4232f4:	test   DWORD PTR [eax],esp
  4232f6:	test   al,0x52
  4232f8:	cli    
  4232f9:	pop    edx
  4232fa:	pop    esp
  4232fb:	scas   eax,DWORD PTR es:[edi]
  4232fc:	cmp    eax,0x8e1646ad
  423301:	cmp    al,0xb0
  423303:	mov    ebp,0x256cdcb
  423308:	mov    bl,0xd7
  42330a:	int    0xac
  42330c:	std    
  42330d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42330e:	jge    0x4232c6
  423310:	call   0xe43b:0x37473542
  423317:	inc    ebp
  423318:	out    0xec,al
  42331a:	loop   0x423326
  42331c:	sar    DWORD PTR [ecx],1
  42331e:	jo     0x4232c5
  423320:	(bad)  
  423321:	scas   al,BYTE PTR es:[edi]
  423322:	cld    
  423323:	call   0x4253ecb1
  423328:	js     0x4233a0
  42332a:	repnz aas 
  42332c:	sti    
  42332d:	mov    ebp,0xdd688675
  423332:	fistp  QWORD PTR [ebx+ebx*8]
  423335:	mov    edi,0x7f4af12d
  42333a:	out    0xc3,eax
  42333c:	in     al,dx
  42333d:	xor    BYTE PTR [edi],ch
  42333f:	xchg   edi,eax
  423340:	pop    ss
  423341:	jns    0x423327
  423343:	jl     0x42333b
  423345:	xchg   BYTE PTR [ecx+0x18c6a4fa],dh
  42334b:	int    0xb6
  42334d:	cli    
  42334e:	shl    BYTE PTR [ebx-0xb5b9423],1
  423354:	mov    fs:0x64a5097b,al
  42335a:	lahf   
  42335b:	repnz jecxz 0x423360
  42335e:	push   0xdee624ef
  423363:	jns    0x4232f9
  423365:	stos   BYTE PTR es:[edi],al
  423366:	repz cmc 
  423368:	xchg   dh,ah
  42336a:	mov    ebx,0x5fd32863
  42336f:	into   
  423370:	push   edi
  423371:	addr16 inc ebx
  423373:	sub    eax,0xfec98f5
  423378:	and    esi,DWORD PTR [ebp*1-0x4a8e8871]
  42337f:	jns    0x42333d
  423381:	pop    edx
  423382:	outs   dx,BYTE PTR ds:[esi]
  423383:	or     eax,0xfc6605a1
  423388:	add    ch,bh
  42338a:	add    edi,DWORD PTR [ebp+0x59dda500]
  423390:	out    0x70,al
  423392:	and    ecx,DWORD PTR [ebx-0x16]
  423395:	push   ds
  423396:	sub    al,0x90
  423398:	mov    esp,0x27f5be34
  42339d:	push   edx
  42339e:	stos   DWORD PTR es:[edi],eax
  42339f:	jno    0x4233ee
  4233a1:	cwde   
  4233a2:	shr    ah,cl
  4233a4:	imul   esi,eax,0xde27e908
  4233aa:	xchg   esp,eax
  4233ab:	out    dx,al
  4233ac:	into   
  4233ad:	jmp    0xd7cb43c6
  4233b2:	call   0xda28:0xe0ab5194
  4233b9:	mov    dh,BYTE PTR [edx]
  4233bb:	push   0x523da2e7
  4233c0:	sub    ecx,DWORD PTR [edi-0xc]
  4233c3:	scas   eax,DWORD PTR es:[edi]
  4233c4:	out    dx,al
  4233c5:	push   esi
  4233c6:	push   ds
  4233c7:	dec    eax
  4233c8:	fcmovnu st,st(0)
  4233ca:	dec    edx
  4233cb:	(bad)  
  4233cc:	repnz (bad) 
  4233ce:	or     dl,ah
  4233d0:	xchg   ebp,eax
  4233d1:	fnstsw ax
  4233d3:	loopne 0x4233c0
  4233d5:	xchg   edi,eax
  4233d6:	push   ecx
  4233d7:	jecxz  0x42342b
  4233d9:	add    DWORD PTR [ebp+eiz*1+0x37],esi
  4233dd:	imul   eax,esp,0x11
  4233e0:	or     ebx,esp
  4233e2:	adc    DWORD PTR [ecx+ebp*1],ebp
  4233e5:	das    
  4233e6:	mov    ch,0x42
  4233e8:	xchg   edx,esi
  4233ea:	test   BYTE PTR [esi+eiz*1+0x54],bl
  4233ee:	iret   
  4233ef:	xor    bl,BYTE PTR [ebx-0x7223ed1a]
  4233f5:	in     al,dx
  4233f6:	mov    dl,0x6a
  4233f8:	add    eax,0x128855d
  4233fd:	jnp    0x42337f
  4233ff:	push   edx
  423400:	shl    bh,cl
  423402:	cmp    ebx,ebx
  423404:	outs   dx,BYTE PTR ds:[esi]
  423405:	inc    edi
  423406:	dec    ecx
  423407:	test   DWORD PTR [edi],esi
  423409:	xor    BYTE PTR [eax-0x200e8e1c],0x5e
  423410:	ret    
  423411:	into   
  423412:	fisub  WORD PTR [ebx]
  423414:	lock mov cl,0xa2
  423417:	or     esp,ebp
  423419:	jns    0x423424
  42341b:	pop    ebx
  42341c:	shr    DWORD PTR [edx-0x754e3b25],0x2f
  423423:	cmp    DWORD PTR [edx+0x1f],eax
  423426:	outs   dx,DWORD PTR ds:[esi]
  423427:	push   esp
  423428:	lahf   
  423429:	out    dx,al
  42342a:	stos   DWORD PTR es:[edi],eax
  42342b:	repnz movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42342d:	dec    ebp
  42342e:	std    
  42342f:	jmp    0x841089d1
  423434:	mov    ebp,DWORD PTR [edi+0x17faa81f]
  42343a:	jmp    0x4234a3
  42343c:	or     BYTE PTR [ebp-0x781115f5],bh
  423442:	(bad)
  423446:	cdq    
  423447:	test   eax,0xddbe6755
  42344c:	addr16 jp 0x4233f0
  42344f:	shl    BYTE PTR [edx-0x51d65d47],0xb1
  423456:	add    DWORD PTR [edi+0x63115f5e],eax
  42345c:	add    eax,0x2d9db24b
  423461:	stos   DWORD PTR es:[edi],eax
  423462:	cs mov ecx,0x8324554a
  423468:	imul   ebp
  42346a:	popf   
  42346b:	jmp    0x8f85c8c1
  423470:	fdiv   DWORD PTR [ecx]
  423472:	xchg   BYTE PTR [ecx+0x21],ch
  423475:	mov    esp,0x775122c2
  42347a:	jae    0x423488
  42347c:	xor    ecx,ecx
  42347e:	aaa    
  42347f:	mov    edi,0xdbafdda8
  423484:	jle    0x423496
  423486:	mov    esi,0x48cbcfbc
  42348b:	push   0x3547591
  423490:	inc    ebx
  423491:	fisubr WORD PTR [esi-0x4e]
  423494:	lods   eax,DWORD PTR ds:[esi]
  423495:	dec    ecx
  423496:	fwait
  423497:	add    DWORD PTR [edi-0x24],ebx
  42349a:	popf   
  42349b:	int    0x1
  42349d:	aam    0x2c
  42349f:	jbe    0x42349a
  4234a1:	add    eax,0x2fa6c84f
  4234a6:	mov    eax,ds:0x1243dcaa
  4234ab:	push   edx
  4234ac:	test   eax,0x3d46f38c
  4234b1:	dec    ebx
  4234b2:	jge    0x4234b6
  4234b4:	jb     0x423514
  4234b6:	inc    esp
  4234b7:	cmp    ch,al
  4234b9:	mov    dl,0x7d
  4234bb:	imul   esp,ecx,0xefb45c9b
  4234c1:	repz sub al,0xc4
  4234c4:	cmp    al,0xa7
  4234c6:	mov    edi,0xbee0098e
  4234cb:	sub    eax,0xd5a796e
  4234d0:	inc    ebp
  4234d1:	fidivr DWORD PTR [edx-0x10c1a54f]
  4234d7:	sub    al,0xda
  4234d9:	pop    es
  4234da:	cmp    ah,bh
  4234dc:	js     0x4234f0
  4234de:	adc    DWORD PTR [esi+0x5b],0xe
  4234e2:	push   eax
  4234e3:	inc    esi
  4234e4:	sbb    ebx,ebx
  4234e6:	addr16 dec ecx
  4234e8:	and    ecx,ecx
  4234ea:	jns    0x4234d4
  4234ec:	mov    ah,0xe4
  4234ee:	sbb    BYTE PTR [ecx+0x3b],0x9d
  4234f2:	hlt    
  4234f3:	push   eax
  4234f4:	(bad)  
  4234f5:	fchs   
  4234f7:	adc    al,0x98
  4234f9:	cmp    al,0x62
  4234fb:	aad    0x9
  4234fd:	mov    al,ds:0xf92bba0f
  423502:	rol    ch,cl
  423504:	test   DWORD PTR [ebx+0x3f],edx
  423507:	ins    DWORD PTR es:[edi],dx
  423508:	mov    ?,WORD PTR [esi+0x53885840]
  42350e:	and    eax,0x4c1ad812
  423513:	leave  
  423514:	mov    eax,0x7321c7d0
  423519:	pop    DWORD PTR [esi+0x40fbdba2]
  42351f:	idiv   DWORD PTR [ecx+0x5d]
  423522:	fisttp DWORD PTR [edx+0x2d]
  423525:	mov    esp,0xd990824a
  42352a:	adc    DWORD PTR [edx*2-0x15a2ffd],edi
  423531:	cmp    DWORD PTR [eax+0x7cf36c6d],ebp
  423537:	int3   
  423538:	adc    DWORD PTR [eax+0x64],ebx
  42353b:	fisttp DWORD PTR [ebx]
  42353d:	xor    ah,BYTE PTR [ebp+0x4b684622]
  423543:	ret    0x64b3
  423546:	and    DWORD PTR [edx+0x58bd93c1],ecx
  42354c:	inc    eax
  42354d:	into   
  42354e:	jo     0x4235cb
  423550:	sbb    ebx,DWORD PTR [ebp+0x77879555]
  423556:	div    DWORD PTR [ebp+0x7db48b9]
  42355c:	inc    edi
  42355d:	shr    esi,cl
  42355f:	fstp   DWORD PTR [edx+eax*1-0x5d99badf]
  423566:	or     BYTE PTR [eax],dh
  423568:	xchg   ebx,eax
  423569:	mov    ecx,0x145210af
  42356e:	outs   dx,DWORD PTR ds:[esi]
  42356f:	fstp   TBYTE PTR [edx+0x36ca2322]
  423575:	int3   
  423576:	lds    edx,FWORD PTR [edx+0x5b30f7bc]
  42357c:	scas   eax,DWORD PTR es:[edi]
  42357d:	xor    DWORD PTR [ebp-0x3d984472],esi
  423583:	mov    ebp,0x8906fb34
  423588:	pop    esp
  423589:	jb     0x42350f
  42358b:	push   ebx
  42358c:	add    DWORD PTR [eax],ebx
  42358e:	sub    eax,0xbf8d7012
  423593:	add    eax,DWORD PTR [edi+0x4b]
  423596:	xor    esp,DWORD PTR [esi]
  423598:	stos   DWORD PTR es:[edi],eax
  423599:	cld    
  42359a:	xchg   edx,eax
  42359b:	and    BYTE PTR [edx-0xcf73d5b],dh
  4235a1:	icebp  
  4235a2:	xchg   ecx,eax
  4235a3:	cvtps2pi mm6,QWORD PTR [ebp+0x10]
  4235a7:	add    dl,cl
  4235a9:	(bad)  
  4235aa:	mov    edx,0x8e87546b
  4235af:	push   ebp
  4235b0:	mov    DWORD PTR [ebx],ebx
  4235b2:	int3   
  4235b3:	inc    edi
  4235b4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4235b5:	and    BYTE PTR [ebx],ah
  4235b7:	shl    DWORD PTR [eax+0x5921d078],0xfd
  4235be:	and    dh,BYTE PTR [eax+edi*4+0x1f520e3f]
  4235c5:	or     cl,BYTE PTR [eax+0xb18fd61]
  4235cb:	pop    ebx
  4235cc:	ror    BYTE PTR [ebx+0x522c2a78],1
  4235d2:	(bad)  
  4235d3:	mov    al,0x3f
  4235d5:	stc    
  4235d6:	call   0x10780160
  4235db:	push   ss
  4235dc:	dec    esi
  4235dd:	jle    0x423642
  4235df:	add    ecx,DWORD PTR [edi]
  4235e1:	mov    edx,0x2c1a6e80
  4235e6:	push   ebx
  4235e7:	mov    dl,0x60
  4235e9:	ja     0x4235ac
  4235eb:	ror    esi,1
  4235ed:	mov    esp,0x72821eb
  4235f2:	mov    ch,0xe3
  4235f4:	add    eax,0x525ae71f
  4235f9:	pop    edi
  4235fa:	popf   
  4235fb:	out    dx,eax
  4235fc:	add    eax,0xb9c83e18
  423601:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  423602:	jge    0xb587073b
  423608:	test   DWORD PTR [ebp-0x6a],edi
  42360b:	mov    bl,BYTE PTR [edi]
  42360d:	push   es
  42360e:	sub    ecx,DWORD PTR [eax]
  423610:	cmovle esi,DWORD PTR [ebx+0x2c4ee247]
  423617:	or     DWORD PTR ds:0xce9870a6,ecx
  42361d:	mov    ds:0xf7cbf6f4,eax
  423622:	mov    ebp,DWORD PTR [ebp+0x19]
  423625:	inc    ebp
  423626:	enter  0xfdfd,0xac
  42362a:	pushf  
  42362b:	lock pop es
  42362d:	xchg   esp,eax
  42362e:	leave  
  42362f:	rol    DWORD PTR [esi+0x61],0x7
  423633:	sub    DWORD PTR [eax+0xc],0x79
  423637:	mov    WORD PTR [ebx],?
  423639:	inc    edx
  42363a:	dec    edi
  42363b:	add    cl,bl
  42363d:	cdq    
  42363e:	sbb    cl,BYTE PTR [eax-0x17220144]
  423644:	and    ebx,DWORD PTR [ecx+0x73ee98f8]
  42364a:	das    
  42364b:	loop   0x423694
  42364d:	test   DWORD PTR [ebp+edx*1+0x146ce1c3],esp
  423654:	mov    dl,0x53
  423656:	scas   al,BYTE PTR es:[edi]
  423657:	shl    DWORD PTR [edi-0x77],1
  42365a:	fmul   QWORD PTR [edx+0xb]
  42365d:	pop    es
  42365e:	or     bh,ch
  423660:	lods   eax,DWORD PTR ds:[esi]
  423661:	data16 in al,dx
  423663:	hlt    
  423664:	nop
  423665:	outs   dx,DWORD PTR ds:[esi]
  423666:	dec    ecx
  423667:	pop    ebx
  423668:	aam    0xe
  42366a:	ficom  DWORD PTR [edx+0x831db26]
  423670:	inc    ebp
  423671:	xchg   esp,eax
  423672:	xchg   ecx,eax
  423673:	cmp    eax,DWORD PTR [edx+eax*8+0x4a]
  423677:	pop    ebp
  423678:	(bad)  
  423679:	jno    0x423644
  42367b:	pop    eax
  42367c:	je     0x423653
  42367e:	ret    
  42367f:	mov    dh,0xa2
  423681:	sbb    ch,dh
  423683:	arpl   WORD PTR ss:0xebc99eff,di
  42368a:	xchg   esi,eax
  42368b:	mov    ebp,0x5f051fcb
  423690:	pop    ebx
  423691:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  423692:	int3   
  423693:	push   es
  423694:	pop    es
  423695:	dec    ebp
  423696:	popf   
  423697:	pop    eax
  423698:	lds    eax,FWORD PTR [esi+eiz*8]
  42369b:	or     DWORD PTR [esi],esp
  42369d:	adc    eax,0xaaacf160
  4236a2:	(bad)  
  4236a3:	in     eax,0xd0
  4236a5:	dec    ecx
  4236a6:	gs (bad) 
  4236a9:	jnp    0x4236f2
  4236ab:	jp     0x423634
  4236ad:	test   DWORD PTR [edi+0x31],esp
  4236b0:	aad    0xdb
  4236b2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4236b3:	(bad)  
  4236b4:	aam    0x3
  4236b6:	cmp    al,0xbe
  4236b8:	dec    ebp
  4236b9:	push   cs
  4236ba:	pop    ebx
  4236bb:	adc    al,0xe2
  4236bd:	pop    ecx
  4236be:	or     al,0x88
  4236c0:	xchg   bx,ax
  4236c2:	jnp    0x42373f
  4236c4:	and    DWORD PTR [edi-0x491ddf26],eax
  4236ca:	test   al,0x96
  4236cc:	jmp    0xdfff:0xac81a108
  4236d3:	in     al,0x87
  4236d5:	sbb    edx,DWORD PTR [ecx]
  4236d7:	jno    0x423737
  4236d9:	add    al,0x69
  4236db:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4236dc:	push   es
  4236dd:	or     edi,DWORD PTR [ecx]
  4236df:	sbb    edx,DWORD PTR [esi+0x46]
  4236e2:	xchg   bx,ax
  4236e4:	sbb    ebp,edx
  4236e6:	pop    ds
  4236e7:	aam    0x8d
  4236e9:	mov    eax,ds:0x984367af
  4236ee:	cmp    eax,0x34aa6b45
  4236f3:	loopne 0x423684
  4236f5:	or     DWORD PTR ds:0xac8b870a,ebx
  4236fb:	xor    ebx,edi
  4236fd:	cli    
  4236fe:	mov    cl,0x58
  423700:	xchg   edi,eax
  423701:	pop    esp
  423702:	(bad)  
  423703:	cmp    al,0x20
  423705:	(bad)  
  423706:	and    ebx,DWORD PTR [esi-0x22]
  423709:	fdivp  st(1),st
  42370b:	mov    DWORD PTR [edx+edx*2+0x37],esp
  42370f:	int3   
  423710:	stos   BYTE PTR es:[edi],al
  423711:	sbb    ecx,DWORD PTR [ecx-0x26]
  423714:	push   esi
  423715:	jle    0x423795
  423717:	test   BYTE PTR [ebp-0x4a931154],0x6a
  42371e:	and    eax,0xe63bd72b
  423723:	adc    al,0xf0
  423725:	dec    ebp
  423726:	cld    
  423727:	xor    BYTE PTR [ebp+0x6d],ch
  42372a:	pop    es
  42372b:	stc    
  42372c:	stos   DWORD PTR es:[edi],eax
  42372d:	mov    dl,BYTE PTR [ecx+eiz*1]
  423730:	cmp    cl,bl
  423732:	sbb    DWORD PTR [edi],0x233f8cb8
  423738:	mov    eax,0x495b5c35
  42373d:	push   ss
  42373e:	push   esi
  42373f:	mov    ah,0x4a
  423741:	fcom   DWORD PTR [edx]
  423743:	inc    eax
  423744:	out    dx,al
  423745:	ret    0x519e
  423748:	jmp    0x35ea:0xe1f9d004
  42374f:	mov    ebp,0x89b33c26
  423754:	imul   esi,ebp,0xffffffde
  423757:	(bad)  [esi]
  423759:	mov    bx,0x8ecd
  42375d:	fild   DWORD PTR [ebx+edx*2]
  423761:	test   bl,dh
  423763:	cmp    al,0xd4
  423765:	cli    
  423766:	cli    
  423767:	mov    dl,0xfc
  423769:	cwde   
  42376a:	repz call 0x8128:0x8929368a
  423772:	or     DWORD PTR [ecx-0x525e504c],edx
  423778:	mov    ch,0xa0
  42377a:	jmp    0x42372e
  42377c:	sub    eax,0x489220aa
  423781:	and    DWORD PTR [ebx+ecx*1],0xb5d7ab7f
  423788:	dec    esp
  423789:	call   0x4e02:0xaa7fe12c
  423790:	push   edx
  423791:	cmp    DWORD PTR [esi],ebp
  423793:	sbb    DWORD PTR gs:[ebx+0x6],ebx
  423797:	sub    ch,BYTE PTR [eax]
  423799:	mov    dl,0x7b
  42379b:	cmp    cl,BYTE PTR [ebp+0x3e7635ed]
  4237a1:	(bad)  
  4237a2:	shl    esp,0xff
  4237a5:	call   0x3d74209c
  4237aa:	push   edx
  4237ab:	pop    ds
  4237ac:	push   esi
  4237ad:	ficomp DWORD PTR [ebx-0x31822f7e]
  4237b3:	push   ss
  4237b4:	inc    ebx
  4237b5:	fldenv [eax+0x13]
  4237b8:	cmp    BYTE PTR [edi-0x22],0x86
  4237bc:	adc    ebp,DWORD PTR [ebp-0x49ba3c89]
  4237c2:	pop    edx
  4237c3:	ror    BYTE PTR ds:0x534a9a00,1
  4237c9:	stc    
  4237ca:	jns    0x4237c9
  4237cc:	xor    eax,0x9650f233
  4237d1:	dec    ebx
  4237d2:	pop    ds
  4237d3:	nop
  4237d4:	push   edx
  4237d5:	out    dx,eax
  4237d6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4237d7:	add    bl,BYTE PTR [edx]
  4237d9:	xor    DWORD PTR [edx-0x162bba88],eax
  4237df:	and    BYTE PTR [ecx+0x6a],bl
  4237e2:	mov    bh,0x9d
  4237e4:	cwde   
  4237e5:	mov    esp,0x3258c483
  4237ea:	jno    0x423816
  4237ec:	fadd   DWORD PTR [ebx-0x7]
  4237ef:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4237f0:	or     bl,dl
  4237f2:	fdiv   DWORD PTR [esi]
  4237f4:	rcl    ecx,cl
  4237f6:	jge    0x4237fb
  4237f8:	sti    
  4237f9:	jb     0x42380d
  4237fb:	push   ebx
  4237fc:	lock xlat BYTE PTR ds:[ebx]
  4237fe:	sub    al,0xac
  423800:	(bad)  
  423802:	add    bl,dl
  423804:	out    0x30,eax
  423806:	shl    DWORD PTR [edi],1
  423808:	pop    eax
  423809:	outs   dx,BYTE PTR ds:[esi]
  42380a:	mov    ch,0x87
  42380c:	ss es popf 
  42380f:	ins    DWORD PTR es:[edi],dx
  423810:	ds (bad) 
  423812:	sub    DWORD PTR [ecx],edi
  423814:	push   cs
  423815:	nop    DWORD PTR [ecx]
  423818:	(bad)  
  423819:	fst    DWORD PTR [esi-0x70f6c79f]
  42381f:	mov    ebx,0xba1a78fd
  423824:	and    DWORD PTR [edx],ebx
  423826:	and    eax,0x8a278506
  42382b:	pusha  
  42382c:	fs mov esp,0xff7dee20
  423832:	push   es
  423833:	sbb    DWORD PTR [ecx+eiz*8-0x60c7f917],esi
  42383a:	inc    esi
  42383b:	cmp    dl,ah
  42383d:	cmp    cl,BYTE PTR [edx+0x4ea526ee]
  423843:	sbb    BYTE PTR [ebx-0x7c],ch
  423846:	scas   eax,DWORD PTR es:[edi]
  423847:	mov    dh,BYTE PTR [eax]
  423849:	adc    eax,0xaa3700b6
  42384e:	int3   
  42384f:	jge    0x423899
  423851:	dec    ebx
  423852:	xchg   esi,eax
  423853:	lods   al,BYTE PTR ds:[esi]
  423854:	mov    WORD PTR [ecx],ds
  423856:	mov    ds:0x37941cb2,al
  42385b:	xchg   ecx,eax
  42385c:	fstp   DWORD PTR [esi]
  42385e:	addr16 test eax,0x8f491cb7
  423864:	inc    esp
  423865:	fist   DWORD PTR [esi]
  423867:	sub    DWORD PTR [eax-0x6778cd7d],eax
  42386d:	xchg   esp,eax
  42386e:	stos   DWORD PTR es:[edi],eax
  42386f:	add    DWORD PTR [edi-0x60],0xec7d6ccc
  423876:	retf   
  423877:	aad    0x45
  423879:	aaa    
  42387a:	retf   0xc052
  42387d:	stos   BYTE PTR es:[edi],al
  42387e:	in     eax,0xbc
  423880:	add    eax,0x6b7b64eb
  423885:	add    DWORD PTR [edi+eiz*1+0x3163ff15],0x18
  42388d:	sub    ebx,0x57
  423890:	outs   dx,BYTE PTR ds:[esi]
  423891:	xchg   BYTE PTR [ebx-0x4c],dl
  423894:	mov    ebx,0x9fc00377
  423899:	pop    eax
  42389a:	mov    eax,ds:0x32d490f8
  42389f:	jl     0x4238dc
  4238a1:	sar    BYTE PTR [eax-0x11],0xd0
  4238a5:	iret   
  4238a6:	mov    cl,BYTE PTR [ebx*2-0x271c28d0]
  4238ad:	or     DWORD PTR [eax],0x3541f5cc
  4238b3:	into   
  4238b4:	and    eax,0xff90028
  4238b9:	ret    
  4238ba:	lahf   
  4238bb:	inc    ecx
  4238bc:	push   es
  4238bd:	mov    eax,0xaad12f9f
  4238c2:	cmp    eax,0x7498212d
  4238c7:	stos   DWORD PTR es:[edi],eax
  4238c8:	push   ebx
  4238c9:	jmp    0xb077:0xc79138a6
  4238d0:	mov    edi,0x3e267031
  4238d5:	jmp    FWORD PTR [ebx]
  4238d7:	gs inc ebx
  4238d9:	sbb    si,WORD PTR [eax-0x458e07]
  4238e0:	cmp    edi,DWORD PTR [ecx-0x2e178bbb]
  4238e6:	adc    BYTE PTR ds:0x4ccd2aba,bh
  4238ec:	test   eax,0xaf78615d
  4238f1:	arpl   WORD PTR ds:0x99d77ce6,dx
  4238f7:	rcl    cl,cl
  4238f9:	jg     0x4238c6
  4238fb:	fsub   QWORD PTR cs:[eax]
  4238fe:	in     al,0x61
  423900:	rcr    DWORD PTR [ebx+0x381a703c],cl
  423906:	jmp    0x619d:0x205778db
  42390d:	out    dx,al
  42390e:	(bad)  
  42390f:	iret   
  423910:	inc    ebp
  423911:	bound  edx,QWORD PTR [ecx-0x20aa5f4]
  423917:	push   ecx
  423918:	mov    ds:0x278fe3bc,al
  42391d:	adc    al,0x8
  42391f:	inc    esi
  423920:	jl     0x42393f
  423922:	cmpxchg DWORD PTR [esp+ecx*4+0x188ce681],esp
  42392a:	jl     0x42391d
  42392c:	add    esi,DWORD PTR [ecx+0x5b81d95e]
  423932:	in     al,0x6c
  423934:	in     eax,dx
  423935:	(bad)  
  423936:	imul   DWORD PTR [edi-0x4a]
  423939:	ds nop
  42393b:	mov    bh,0xaa
  42393d:	push   0xffffff90
  42393f:	inc    eax
  423940:	add    al,0xd
  423942:	test   al,0xfa
  423944:	ret    
  423945:	mov    eax,DWORD PTR [esi]
  423947:	push   0x64
  423949:	push   ebp
  42394a:	adc    DWORD PTR [esi],esi
  42394c:	fwait
  42394d:	mov    esp,0x5f0dfd6
  423952:	mov    ah,0x77
  423954:	xchg   edx,eax
  423955:	gs pop edi
  423957:	out    0x9,al
  423959:	ja     0x423976
  42395b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42395c:	out    0x3b,eax
  42395e:	data16 mov ds:0xc2d0d79a,al
  423964:	pusha  
  423965:	and    al,0x22
  423967:	xchg   edx,eax
  423968:	daa    
  423969:	arpl   WORD PTR [edx+0x3516987],di
  42396f:	push   ecx
  423970:	test   al,0x1d
  423972:	jmp    0x4554:0x9d652850
  423979:	test   DWORD PTR [esi-0x63833174],esp
  42397f:	test   dh,ch
  423981:	mov    edx,ds
  423983:	fbstp  TBYTE PTR [ecx-0x5b16b19e]
  423989:	mov    BYTE PTR [edx-0x18],bl
  42398c:	pop    esi
  42398d:	jae    0x423920
  42398f:	mov    WORD PTR [edx-0x330dc064],cs
  423995:	jl     0x42396a
  423997:	out    dx,eax
  423998:	dec    ebp
  423999:	dec    eax
  42399a:	jb     0x423a0a
  42399c:	in     eax,dx
  42399d:	mov    eax,0x66ca50ed
  4239a2:	retf   
  4239a3:	push   edi
  4239a4:	leave  
  4239a5:	test   DWORD PTR [esi-0x3b150910],0xdce38d95
  4239af:	xchg   edx,eax
  4239b0:	cdq    
  4239b1:	stos   DWORD PTR es:[edi],eax
  4239b2:	jb     0x4239d5
  4239b4:	popa   
  4239b5:	idiv   DWORD PTR [edx+0x6d]
  4239b8:	sti    
  4239b9:	add    al,0xdc
  4239bb:	cwde   
  4239bc:	test   DWORD PTR [ebp+0x55],esp
  4239bf:	sbb    bl,BYTE PTR [edx+0x5f]
  4239c2:	call   0x6687bdf3
  4239c7:	cmp    eax,DWORD PTR [edx]
  4239c9:	push   esi
  4239ca:	cmc    
  4239cb:	add    DWORD PTR [esi+0x7b],ebx
  4239ce:	in     al,dx
  4239cf:	neg    DWORD PTR [ebp+0x11]
  4239d2:	test   BYTE PTR [esi],al
  4239d4:	xor    al,0x82
  4239d6:	push   esi
  4239d7:	or     bh,BYTE PTR [eax+ebp*2-0x71]
  4239db:	add    ch,bl
  4239dd:	retf   0x631a
  4239e0:	cmp    DWORD PTR [esp+edx*1+0x277964e5],eax
  4239e7:	jo     0x423a4d
  4239e9:	shr    BYTE PTR [ecx],1
  4239eb:	mov    WORD PTR [esi-0x1e29a244],ss
  4239f1:	pop    esi
  4239f2:	stos   DWORD PTR es:[edi],eax
  4239f3:	inc    ecx
  4239f4:	addr16 dec sp
  4239f7:	(bad)  
  4239f8:	sbb    esi,0xd2ebef8
  4239fe:	mul    DWORD PTR [edx+0x70]
  423a01:	gs repz inc edi
  423a04:	scas   al,BYTE PTR es:[edi]
  423a05:	loope  0x4239d0
  423a07:	clc    
  423a08:	mov    ecx,0x9b9fb1a6
  423a0d:	(bad)  
  423a0f:	test   eax,0x1b483cfb
  423a14:	ficom  DWORD PTR [edx+0x4d25c9a5]
  423a1a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  423a1b:	test   eax,0xf1b62f39
  423a20:	shr    DWORD PTR [edi+0xa],1
  423a23:	and    edx,edi
  423a25:	stos   BYTE PTR es:[edi],al
  423a26:	loop   0x4239cf
  423a28:	dec    BYTE PTR [edi]
  423a2a:	pop    ds
  423a2b:	stos   DWORD PTR es:[edi],eax
  423a2c:	gs inc esi
  423a2e:	dec    edi
  423a2f:	jbe    0x423a1e
  423a31:	fsub   QWORD PTR [edi+eax*8+0x7f]
  423a35:	or     DWORD PTR [eax],edi
  423a37:	(bad)  [edi+0x336e4e4b]
  423a3d:	js     0x423a06
  423a3f:	hlt    
  423a40:	lahf   
  423a41:	mov    eax,0x10b1ff44
  423a46:	jg     0x423a37
  423a48:	out    dx,al
  423a49:	repnz push 0x3b
  423a4c:	daa    
  423a4d:	ret    0xc3a3
  423a50:	mov    WORD PTR [edx+0x2c],ds
  423a53:	ror    DWORD PTR [edx],0x1d
  423a56:	jg     0x423a7e
  423a58:	sub    BYTE PTR [edx-0x56],dh
  423a5b:	ss enter 0xdb64,0xab
  423a60:	(bad)  
  423a61:	arpl   WORD PTR [edx],di
  423a63:	in     al,dx
  423a64:	or     edx,ecx
  423a66:	or     BYTE PTR [edi+0x7b4191cf],al
  423a6c:	sub    eax,0x25c0f57c
  423a71:	ret    0x8b4c
  423a74:	(bad)  
  423a76:	cdq    
  423a77:	cwde   
  423a78:	cmp    esp,ecx
  423a7a:	mov    ebp,0x94828b69
  423a7f:	sbb    bl,BYTE PTR [edx]
  423a81:	imul   eax,DWORD PTR [esi+0x6],0xbf22eb8f
  423a88:	stos   BYTE PTR es:[edi],al
  423a89:	mov    dl,BYTE PTR [eax-0x62932329]
  423a8f:	mov    ebx,0x3cb6b2d6
  423a94:	bound  eax,QWORD PTR [esi]
  423a96:	fdivr  QWORD PTR [edx-0x55]
  423a99:	cwde   
  423a9a:	fldcw  WORD PTR [edi+0x3]
  423a9d:	push   ebp
  423a9e:	xor    al,0x4
  423aa0:	(bad)  
  423aa1:	xor    al,0xb9
  423aa3:	adc    ah,BYTE PTR [edi-0x6c8d1883]
  423aa9:	jo     0x423ae6
  423aab:	pusha  
  423aac:	jnp    0x423a8c
  423aae:	sub    BYTE PTR [ecx+0x1770f126],0x7
  423ab5:	in     eax,0x63
  423ab7:	popf   
  423ab8:	jnp    0x423a51
  423aba:	imul   ebp,DWORD PTR [eax+0x56f3e96a],0xffffffa9
  423ac1:	test   al,0xd1
  423ac3:	push   0xffffffb7
  423ac5:	xchg   ecx,eax
  423ac6:	dec    esp
  423ac7:	and    BYTE PTR [edx-0xe8ed189],al
  423acd:	addr16 xchg edi,eax
  423acf:	xor    BYTE PTR [edx],al
  423ad1:	in     al,0x21
  423ad3:	clc    
  423ad4:	jnp    0x423aa8
  423ad6:	sub    eax,0x5b6c6ab1
  423adb:	sub    ebp,DWORD PTR [ebx+0x59a3c849]
  423ae1:	fmul   st(7),st
  423ae3:	sbb    ebp,DWORD PTR [edi+0x3f93dc2f]
  423ae9:	jbe    0x423a83
  423aeb:	arpl   bp,bp
  423aed:	pop    ecx
  423aee:	add    DWORD PTR ds:0x6fd1ffc2,eax
  423af4:	nop
  423af5:	ret    
  423af6:	push   edi
  423af7:	das    
  423af8:	scas   al,BYTE PTR es:[edi]
  423af9:	test   BYTE PTR [ebp-0x61efeb11],dh
  423aff:	imul   esp,DWORD PTR [ebp+0x71],0x5c
  423b03:	fwait
  423b04:	cld    
  423b05:	cli    
  423b06:	arpl   WORD PTR [ecx+0x18],cx
  423b09:	mov    ah,0x33
  423b0b:	bound  esi,QWORD PTR [ebp-0x17]
  423b0e:	aad    0xd9
  423b10:	xor    dl,BYTE PTR [ebx-0x402af9fc]
  423b16:	cmp    ch,BYTE PTR [esi+0x7af7c087]
  423b1c:	xor    esi,edx
  423b1e:	push   cs
  423b1f:	dec    edx
  423b20:	fidiv  WORD PTR [edi-0x7730f22b]
  423b26:	shl    ecx,0xd8
  423b29:	mov    esp,0x66b86fba
  423b2e:	bound  esp,QWORD PTR [edx-0x49]
  423b31:	fisub  DWORD PTR [ecx+edx*4-0x3ce45bb7]
  423b38:	jo     0x423ace
  423b3a:	into   
  423b3b:	xchg   ecx,eax
  423b3c:	mov    al,ds:0x14a364ec
  423b41:	fild   DWORD PTR [esi-0x15]
  423b44:	inc    edx
  423b45:	mov    bl,0xbb
  423b47:	shl    DWORD PTR [edi+0x39],cl
  423b4a:	mov    BYTE PTR [edx+0x4a],dh
  423b4d:	push   eax
  423b4e:	dec    ebx
  423b4f:	in     al,dx
  423b50:	jl     0x423b5f
  423b52:	jae    0x423ae8
  423b54:	sub    BYTE PTR [ebp-0x27],0x3b
  423b58:	imul   ebp,DWORD PTR [ecx+eax*2+0x27],0xffffffd3
  423b5d:	int3   
  423b5e:	aaa    
  423b5f:	imul   ebp,DWORD PTR ds:0x14e3c74e,0xffffff99
  423b66:	inc    ebx
  423b67:	test   BYTE PTR [edi+0x18],bh
  423b6a:	pop    ebp
  423b6b:	stc    
  423b6c:	cmp    al,0x91
  423b6e:	sbb    ch,dh
  423b70:	and    bh,dl
  423b72:	(bad)  
  423b75:	inc    esp
  423b76:	stc    
  423b77:	and    bl,bh
  423b79:	clc    
  423b7a:	inc    DWORD PTR [eax+0x5]
  423b7d:	adc    eax,0x2a17ab26
  423b82:	mov    edi,0xa5bebfcb
  423b87:	js     0x423b11
  423b89:	(bad)  
  423b8a:	cmp    ebx,edx
  423b8c:	lahf   
  423b8d:	fmul   DWORD PTR [ebx+0x49]
  423b90:	nop
  423b91:	pop    ebx
  423b92:	or     cl,BYTE PTR [edi+0x211c9551]
  423b98:	scas   al,BYTE PTR es:[edi]
  423b99:	retf   
  423b9a:	(bad)  
  423b9b:	jo     0x423b80
  423b9d:	fist   DWORD PTR [edx]
  423b9f:	popa   
  423ba0:	daa    
  423ba1:	jo     0x423bfe
  423ba3:	mov    BYTE PTR [edx+0x8],0x1a
  423ba7:	je     0x423bae
  423ba9:	int    0xbf
  423bab:	push   ds
  423bac:	mov    dh,0x4f
  423bae:	in     eax,dx
  423baf:	sub    bh,al
  423bb1:	mov    cl,0x92
  423bb3:	retf   0xe58a
  423bb6:	shl    DWORD PTR [edx-0x6e],cl
  423bb9:	cld    
  423bba:	aaa    
  423bbb:	cwde   
  423bbc:	pop    ebx
  423bbd:	pop    ebp
  423bbe:	in     eax,0x40
  423bc0:	out    0xb,eax
  423bc2:	push   esi
  423bc3:	(bad)  
  423bc4:	cmp    ch,BYTE PTR [esi-0x7e0f442]
  423bca:	push   ss
  423bcb:	test   eax,0x95c3a799
  423bd0:	sbb    al,0xfa
  423bd2:	cli    
  423bd3:	outs   dx,DWORD PTR ds:[esi]
  423bd4:	call   0x590ffa77
  423bd9:	lods   al,BYTE PTR ds:[esi]
  423bda:	fbld   TBYTE PTR [edi+0x4e]
  423bdd:	and    ebx,DWORD PTR [ecx+0x72c25c11]
  423be3:	jg     0x423c00
  423be5:	enter  0x358f,0xcd
  423be9:	cmp    al,0x67
  423beb:	cs jae 0x423c3b
  423bee:	loopne 0x423c0c
  423bf0:	stos   BYTE PTR es:[edi],al
  423bf1:	adc    cl,BYTE PTR [edx+ebx*2-0x329e205b]
  423bf8:	addr16 not cl
  423bfb:	sub    ah,BYTE PTR [esi]
  423bfd:	mov    ds:0x410c7a28,eax
  423c02:	jne    0x423bae
  423c04:	in     al,dx
  423c05:	ins    BYTE PTR es:[edi],dx
  423c06:	xor    eax,0x77dc28c4
  423c0b:	lods   al,BYTE PTR ds:[esi]
  423c0c:	sar    BYTE PTR [eax+0x13],1
  423c0f:	xchg   edx,eax
  423c10:	out    dx,eax
  423c11:	pop    ebx
  423c12:	xchg   ebx,eax
  423c13:	ret    0xff75
  423c16:	hlt    
  423c17:	aam    0x5e
  423c19:	jge    0x423c80
  423c1b:	push   0x43
  423c1d:	popa   
  423c1e:	nop
  423c1f:	push   ss
  423c20:	fs pop edx
  423c22:	cmp    DWORD PTR [ebp-0x38abbe76],esi
  423c28:	or     al,0x6f
  423c2a:	inc    edi
  423c2b:	push   es
  423c2c:	xor    BYTE PTR [edi+0x49ac31b5],dh
  423c32:	repz fnstcw WORD PTR ds:0x30dfb967
  423c39:	xlat   BYTE PTR ds:[ebx]
  423c3a:	retf   
  423c3b:	and    DWORD PTR [edx+0x15af080b],esp
  423c41:	fcmovb st,st(5)
  423c43:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  423c44:	nop
  423c45:	pop    ebp
  423c46:	lahf   
  423c47:	(bad)  
  423c48:	aam    0x23
  423c4a:	xor    DWORD PTR [edx],eax
  423c4c:	ror    DWORD PTR [ebx-0x30c02a8b],0x35
  423c53:	and    ecx,0x60
  423c56:	into   
  423c57:	(bad)  
  423c58:	das    
  423c59:	loop   0x423c4a
  423c5b:	cli    
  423c5c:	rcl    BYTE PTR [edi-0x74],cl
  423c5f:	lods   eax,DWORD PTR ds:[si]
  423c61:	repnz in al,0xd7
  423c64:	bnd jb 0x423bea
  423c67:	in     eax,0x0
  423c69:	shl    ecx,1
  423c6b:	lock repz xchg esi,eax
  423c6e:	xchg   esi,eax
  423c6f:	adc    DWORD PTR [esi+ebx*8-0x65],ecx
  423c73:	adc    eax,DWORD PTR [ecx]
  423c75:	push   cs
  423c76:	xchg   BYTE PTR [esp+edi*4-0x79],ch
  423c7a:	neg    BYTE PTR [edx]
  423c7c:	(bad)  
  423c7d:	sbb    edx,DWORD PTR [edi-0x35]
  423c80:	mov    esi,0x48b5fbe2
  423c85:	lahf   
  423c86:	add    BYTE PTR [edi-0x29befc0c],dh
  423c8c:	mov    esi,0x3fecfc15
  423c91:	inc    ebp
  423c92:	or     al,0x98
  423c94:	scas   al,BYTE PTR es:[edi]
  423c95:	mov    eax,cs:0x814db1c3
  423c9b:	inc    esp
  423c9c:	push   ebp
  423c9d:	mov    ebp,0xf82f2ef9
  423ca2:	shr    BYTE PTR [esp+ebx*1+0x21],cl
  423ca6:	mov    dl,0xe
  423ca8:	mov    bl,BYTE PTR [edi-0x50]
  423cab:	icebp  
  423cac:	test   al,0xc0
  423cae:	popf   
  423caf:	mov    ds:0xa37b964b,eax
  423cb4:	cld    
  423cb5:	cwde   
  423cb6:	sub    DWORD PTR [ebx],ebp
  423cb8:	sbb    esp,DWORD PTR [edx+0x66d30472]
  423cbe:	mov    ah,0xd3
  423cc0:	fnstcw WORD PTR [ebp+0x68]
  423cc3:	out    0x24,al
  423cc5:	jae    0x423c55
  423cc7:	fldcw  WORD PTR [ecx-0x35]
  423cca:	add    DWORD PTR [ecx-0x28],ebp
  423ccd:	out    0xac,eax
  423ccf:	das    
  423cd0:	xchg   ebx,eax
  423cd1:	add    esp,DWORD PTR [edi-0x6d]
  423cd4:	or     eax,0xafca808
  423cd9:	hlt    
  423cda:	mov    al,0xb5
  423cdc:	imul   esp,DWORD PTR [ebp+0x8be69a6],0x5e
  423ce3:	int    0xae
  423ce5:	pop    ds
  423ce6:	mov    bl,0xf8
  423ce8:	mov    ecx,0x19f56448
  423ced:	(bad)  
  423cee:	scas   al,BYTE PTR es:[edi]
  423cef:	pop    ss
  423cf0:	aam    0x6b
  423cf2:	in     eax,0x9b
  423cf4:	mov    esp,0x419c3539
  423cf9:	xchg   ebx,eax
  423cfa:	gs sub eax,0xc58db09
  423d00:	stc    
  423d01:	xor    dh,ch
  423d03:	icebp  
  423d04:	push   ebx
  423d05:	cld    
  423d06:	fwait
  423d07:	adc    BYTE PTR [edi],0x2f
  423d0a:	test   eax,0xf4cb9d1d
  423d0f:	imul   ebp,edx,0xffffff82
  423d12:	imul   edx,DWORD PTR [edx],0x6a
  423d15:	jne    0x423d64
  423d17:	in     al,dx
  423d18:	(bad)  
  423d19:	xchg   esi,eax
  423d1a:	std    
  423d1b:	and    BYTE PTR ss:[ecx+0x1],dl
  423d1f:	pop    ds
  423d20:	adc    al,0x84
  423d22:	test   bh,0x8d
  423d25:	xor    DWORD PTR [ecx+0x27],ebp
  423d28:	mov    ecx,0x9e7439d0
  423d2d:	aas    
  423d2e:	gs push 0xe891b02
  423d34:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  423d35:	and    BYTE PTR [ebp+0x6f883a5f],ch
  423d3b:	cmp    al,0xfb
  423d3d:	imul   BYTE PTR [ebx]
  423d3f:	pushf  
  423d40:	cwde   
  423d41:	mov    al,0xb6
  423d43:	stc    
  423d44:	inc    esp
  423d45:	retf   
  423d46:	rol    BYTE PTR [ecx],1
  423d48:	jmp    0xd66874e0
  423d4d:	xchg   esi,eax
  423d4e:	sbb    dh,BYTE PTR [eax+0x53]
  423d51:	mov    cl,0x16
  423d53:	retf   0xe5d3
  423d56:	test   eax,0xd603214e
  423d5b:	and    eax,0x6caac497
  423d60:	xor    BYTE PTR [esi-0x42a60b9c],0xeb
  423d67:	imul   ebx,DWORD PTR [ebp+0x708f97b6],0x50
  423d6e:	scas   al,BYTE PTR es:[edi]
  423d6f:	mov    ecx,0x660d453a
  423d74:	ins    DWORD PTR es:[edi],dx
  423d75:	les    edx,FWORD PTR [eax+0x3f]
  423d78:	sbb    dl,BYTE PTR [esi-0x9ff6768]
  423d7e:	in     al,0x54
  423d80:	xchg   ebx,eax
  423d81:	pop    esi
  423d82:	jb     0x423d75
  423d84:	lahf   
  423d85:	bound  ebp,QWORD PTR [eax-0x2ae9add9]
  423d8b:	jmp    0x423d6e
  423d8d:	psrld  mm1,QWORD PTR [ebx-0x33]
  423d91:	pop    eax
  423d92:	xor    cl,BYTE PTR [edx+0x9]
  423d95:	mov    esi,0xdeb460a8
  423d9a:	test   BYTE PTR [ebp+edx*4-0x55],ah
  423d9e:	xlat   BYTE PTR ds:[ebx]
  423d9f:	or     eax,0xec402874
  423da4:	add    bl,BYTE PTR [ebx-0x38]
  423da7:	(bad)  
  423da8:	mov    WORD PTR [edi-0x3f],?
  423dab:	ja     0x423df7
  423dad:	add    al,0xcf
  423daf:	xor    eax,0xc6b5ce45
  423db4:	mov    al,0x58
  423db6:	sub    al,0x9d
  423db8:	fild   WORD PTR [ecx*8-0x5c1e2e64]
  423dbf:	dec    esi
  423dc0:	test   al,0x30
  423dc2:	inc    esi
  423dc3:	aam    0xed
  423dc5:	pushf  
  423dc6:	and    BYTE PTR [esi+0x61],ah
  423dc9:	jne    0x423e23
  423dcb:	out    dx,eax
  423dcc:	fld    TBYTE PTR [ebx]
  423dce:	pusha  
  423dcf:	xor    eax,0xecdb2321
  423dd4:	dec    ebp
  423dd5:	retf   
  423dd6:	add    BYTE PTR [edx+eax*2+0x7d654ee5],dl
  423ddd:	and    BYTE PTR [esp+eax*2+0x3ad1e654],ch
  423de4:	xchg   DWORD PTR [ecx],ecx
  423de6:	jo     0x423db0
  423de8:	into   
  423de9:	xchg   esp,eax
  423dea:	adc    al,0xa9
  423dec:	push   ecx
  423ded:	in     al,dx
  423dee:	mov    BYTE PTR [eax-0x22],bh
  423df1:	mov    edi,0x6a8c041c
  423df6:	(bad)  
  423df7:	xlat   BYTE PTR ds:[ebx]
  423df8:	jl     0x423e54
  423dfa:	leave  
  423dfb:	inc    ebx
  423dfc:	mov    dh,0x3e
  423dfe:	xor    edi,DWORD PTR [esp+ecx*8-0x5ae0cb04]
  423e05:	fnstcw WORD PTR [ecx]
  423e07:	and    edi,DWORD PTR [esi-0x5d2e7e86]
  423e0d:	xor    al,0x7f
  423e0f:	nop
  423e10:	cs cmp eax,0xabd7c989
  423e16:	call   0xa404:0x6f36943f
  423e1d:	out    0x7d,al
  423e1f:	retf   
  423e20:	je     0x423daf
  423e22:	cwde   
  423e23:	sbb    DWORD PTR [esp+esi*1+0x72241b1e],eax
  423e2a:	stos   BYTE PTR es:[edi],al
  423e2b:	cmp    BYTE PTR [eax+0x5a],bh
  423e2e:	daa    
  423e2f:	sub    esi,DWORD PTR [eax+0x1f]
  423e32:	ja     0x423e1c
  423e34:	ja     0x423e8e
  423e36:	jae    0x423e4a
  423e38:	std    
  423e39:	jae    0x423e86
  423e3b:	sar    DWORD PTR [esi],cl
  423e3d:	cld    
  423e3e:	and    ebp,DWORD PTR [ecx-0x32]
  423e41:	dec    esp
  423e42:	ret    
  423e43:	out    0x3b,eax
  423e45:	xchg   esp,eax
  423e46:	push   ds
  423e47:	jp     0x423df7
  423e49:	out    dx,eax
  423e4a:	ror    BYTE PTR [edx+0x758b14ba],1
  423e50:	pushf  
  423e51:	sub    al,0xb5
  423e53:	cmp    ah,ch
  423e55:	push   0x1d
  423e57:	mov    al,BYTE PTR [eax]
  423e59:	jne    0x423ec0
  423e5b:	loope  0x423e6d
  423e5d:	pop    ds
  423e5e:	xor    DWORD PTR [eax-0x43],0xf61ca326
  423e65:	sbb    eax,0x38aba126
  423e6a:	std    
  423e6b:	pusha  
  423e6c:	xor    ecx,DWORD PTR [esi-0x53de64e0]
  423e72:	in     al,dx
  423e73:	xlat   BYTE PTR ds:[ebx]
  423e74:	fiadd  DWORD PTR ds:0x6a7637ad
  423e7a:	into   
  423e7b:	rcl    BYTE PTR [eax+edi*8],0x47
  423e7f:	call   DWORD PTR [ebx-0x6d]
  423e82:	mov    ecx,0x2f0cb4ca
  423e87:	loop   0x423e28
  423e89:	cmc    
  423e8a:	aam    0x8c
  423e8c:	aad    0x94
  423e8e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  423e8f:	enter  0xfe0d,0x1a
  423e93:	out    dx,eax
  423e94:	das    
  423e95:	and    al,0x9a
  423e97:	or     ebp,eax
  423e99:	pop    esp
  423e9a:	fldenv [esi-0x2d4ede11]
  423ea0:	rcr    BYTE PTR [edx-0x68],1
  423ea3:	sbb    al,BYTE PTR [edx]
  423ea5:	sbb    BYTE PTR [esi-0x6680f3dc],bh
  423eab:	sti    
  423eac:	mov    al,0xd5
  423eae:	lods   al,BYTE PTR ds:[esi]
  423eaf:	sub    eax,esp
  423eb1:	imul   DWORD PTR ds:0xd656f113
  423eb7:	das    
  423eb8:	mov    ds:0x19dbe256,eax
  423ebd:	in     eax,dx
  423ebe:	and    al,0x29
  423ec0:	mov    bh,0x85
  423ec2:	dec    esp
  423ec3:	mov    eax,0xcb62d90e
  423ec8:	inc    ecx
  423ec9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  423eca:	sbb    esi,DWORD PTR [ebp+0x5ffe276a]
  423ed0:	not    DWORD PTR [edi+0x4d]
  423ed3:	rcr    DWORD PTR [ebp-0x1e],cl
  423ed6:	dec    ecx
  423ed7:	loope  0x423eed
  423ed9:	scas   eax,DWORD PTR es:[edi]
  423eda:	shl    DWORD PTR [ecx],1
  423edc:	cmp    DWORD PTR [edx],0x33
  423edf:	pop    ebp
  423ee0:	push   ecx
  423ee1:	cld    
  423ee2:	sub    al,0xd6
  423ee4:	sub    eax,0xf34425e
  423ee9:	(bad)  
  423eea:	or     dl,ch
  423eec:	in     eax,dx
  423eed:	pop    esp
  423eee:	sub    cl,0xb5
  423ef1:	pop    esp
  423ef2:	shl    BYTE PTR [eax],0xf3
  423ef5:	xchg   edi,eax
  423ef6:	repz sbb edi,ecx
  423ef9:	mov    ebx,0x60d712f5
  423efe:	rol    DWORD PTR [ecx],0xba
  423f01:	xor    al,0xcf
  423f03:	fld    TBYTE PTR ds:[eax+0x62]
  423f07:	lods   al,BYTE PTR ds:[esi]
  423f08:	fimul  DWORD PTR [eax+0x5]
  423f0b:	or     dl,BYTE PTR [ebx-0x3d]
  423f0e:	hlt    
  423f0f:	bnd jo 0x423f78
  423f12:	imul   dl
  423f14:	dec    esp
  423f15:	mov    edx,ecx
  423f17:	imul   eax,DWORD PTR [ebp-0x5a],0xffffffc9
  423f1b:	mov    ebx,0xd1ae6439
  423f20:	sbb    al,0xcc
  423f22:	xchg   edi,eax
  423f23:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  423f24:	fcomp  DWORD PTR [ecx]
  423f26:	cmp    dl,dh
  423f28:	add    ebp,DWORD PTR [ebp-0x3c]
  423f2b:	jb     0x423f39
  423f2d:	test   dh,ah
  423f2f:	cmc    
  423f30:	(bad)  
  423f31:	mov    ebp,0xf15b3362
  423f37:	xchg   ebp,eax
  423f38:	dec    ebx
  423f39:	inc    edi
  423f3a:	js     0x423ef0
  423f3c:	pop    edi
  423f3d:	cmp    BYTE PTR [edx+ebp*8+0x47bf725e],ah
  423f44:	xchg   BYTE PTR [edi-0x1bf950e4],ah
  423f4a:	jl     0x423f10
  423f4c:	pop    ecx
  423f4d:	xor    ch,BYTE PTR [esi+ebp*8-0x6d]
  423f51:	xchg   esi,eax
  423f52:	nop
  423f53:	sahf   
  423f54:	jecxz  0x423f72
  423f56:	stos   DWORD PTR es:[edi],eax
  423f57:	mov    dh,BYTE PTR [ecx+edx*8]
  423f5a:	mov    es,WORD PTR [edi+0x41f6ce1]
  423f60:	push   cs
  423f61:	ds dec ebx
  423f63:	hlt    
  423f64:	xor    dh,BYTE PTR [ebx]
  423f66:	(bad)  
  423f67:	ds dec esi
  423f69:	dec    ebp
  423f6a:	stos   DWORD PTR es:[edi],eax
  423f6b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  423f6c:	repnz test eax,0x7d713914
  423f72:	jmp    0x423f71
  423f74:	jo     0x423fc6
  423f76:	sbb    DWORD PTR [ecx+edx*4-0x65],eax
  423f7a:	dec    edi
  423f7b:	cli    
  423f7c:	mov    esp,0xdd47d585
  423f81:	pop    ebx
  423f82:	push   cs
  423f83:	pushf  
  423f84:	pop    eax
  423f85:	mov    cl,0x9e
  423f87:	and    ah,BYTE PTR [ecx]
  423f89:	sbb    ecx,ebx
  423f8b:	adc    esi,DWORD PTR [ebp-0x50]
  423f8e:	pop    esi
  423f8f:	jnp    0x423f78
  423f91:	xacquire xchg DWORD PTR [ebx+ebp*1+0x7f6b50d7],ebp
  423f99:	rcl    DWORD PTR [ebp+0x4a7d39f6],cl
  423f9f:	jo     0x423f97
  423fa1:	sub    BYTE PTR [eax-0x81f610a],dl
  423fa7:	sbb    bh,BYTE PTR [ebx+0x45420719]
  423fad:	int3   
  423fae:	shr    ebp,1
  423fb0:	xchg   ebx,eax
  423fb1:	sub    al,0xc2
  423fb3:	fmul   st(2),st
  423fb5:	add    eax,0x57b8ee31
  423fba:	inc    ecx
  423fbb:	(bad)  
  423fbc:	clc    
  423fbd:	sub    al,0x95
  423fbf:	mov    ah,0xb4
  423fc1:	adc    dh,BYTE PTR [esi]
  423fc3:	sar    DWORD PTR [esi-0x30726de8],cl
  423fc9:	out    0x66,eax
  423fcb:	(bad)  
  423fcc:	pop    esp
  423fcd:	shr    dl,1
  423fcf:	(bad)  
  423fd0:	sahf   
  423fd1:	jl     0x423f75
  423fd3:	push   cs
  423fd4:	out    dx,al
  423fd5:	lea    edx,[ebx]
  423fd7:	inc    eax
  423fd8:	imul   eax,eax,0x1af9c6ba
  423fde:	xchg   ecx,eax
  423fdf:	mov    ecx,0xba905e14
  423fe4:	cdq    
  423fe5:	pop    ebp
  423fe6:	push   edx
  423fe7:	sbb    DWORD PTR [edx+0x54],eax
  423fea:	out    dx,eax
  423feb:	dec    edx
  423fec:	sub    cl,BYTE PTR [ecx-0x7fa5838a]
  423ff2:	cli    
  423ff3:	push   esi
  423ff4:	dec    edi
  423ff5:	test   eax,0xd546c0ba
  423ffa:	jns    0x423fa6
  423ffc:	add    bh,BYTE PTR [eax+ebx*2-0x14]
  424000:	outs   dx,BYTE PTR ds:[esi]
  424001:	pushf  
  424002:	int3   
  424003:	sar    DWORD PTR [edi*8+0x176236e6],0xc2
  42400b:	xor    al,BYTE PTR [esi-0x51baae01]
  424011:	pop    eax
  424012:	std    
  424013:	mov    esi,0x8106fa63
  424018:	loopne 0x424069
  42401a:	or     bl,BYTE PTR [ecx+0x74]
  42401d:	sbb    DWORD PTR [ecx+0x43b5f7b6],edx
  424023:	jne    0x424065
  424025:	out    0xd0,al
  424027:	push   cs
  424028:	into   
  424029:	xlat   BYTE PTR ds:[ebx]
  42402a:	xchg   edi,eax
  42402b:	push   cs
  42402c:	cmp    al,0xa4
  42402e:	pop    ds
  42402f:	sbb    al,0xab
  424031:	pop    es
  424032:	movnti DWORD PTR [esi],ebp
  424035:	add    ebx,DWORD PTR [ecx]
  424037:	(bad)  
  424038:	and    al,0xf2
  42403a:	cmp    al,BYTE PTR [ebx+0x3a]
  42403d:	sbb    eax,esi
  42403f:	add    al,0x28
  424041:	repz mov edi,0x610a1b7f
  424047:	or     ebx,esi
  424049:	push   esi
  42404a:	out    0x3c,al
  42404c:	push   edi
  42404d:	xchg   edx,eax
  42404e:	sbb    eax,0x60e00ff1
  424053:	test   al,0x8a
  424055:	stos   BYTE PTR es:[edi],al
  424056:	in     eax,dx
  424057:	add    eax,0x73c9774d
  42405c:	sbb    eax,0x2b27bd60
  424061:	repz iret 
  424063:	and    BYTE PTR [ebx+esi*2-0x79ae5d87],cl
  42406a:	(bad)  
  42406b:	sbb    dh,BYTE PTR [esi]
  42406d:	addr16 xor esi,edi
  424070:	(bad)  [ebx]
  424072:	shr    edi,cl
  424074:	cwde   
  424075:	xlat   BYTE PTR ds:[ebx]
  424076:	or     BYTE PTR [ebp+0x42abcdd8],ah
  42407c:	dec    edx
  42407d:	mov    eax,0x7b2e3c28
  424082:	inc    edi
  424083:	cwde   
  424084:	div    esi
  424086:	loope  0x424068
  424088:	in     al,dx
  424089:	dec    edi
  42408a:	mov    ds:0x135c682,eax
  42408f:	add    esp,DWORD PTR [esi]
  424091:	nop
  424092:	pop    ebx
  424093:	sti    
  424094:	mov    eax,ecx
  424096:	and    ebx,esp
  424098:	jg     0x424031
  42409a:	test   al,0x9a
  42409c:	xor    eax,0x9c02bed0
  4240a1:	xchg   esi,eax
  4240a2:	int    0x8e
  4240a4:	daa    
  4240a5:	jae    0x42409c
  4240a7:	xor    eax,0x38c6b511
  4240ac:	repz and ah,BYTE PTR [ecx+0x1ec2ae69]
  4240b3:	retf   0xf06a
  4240b6:	push   eax
  4240b7:	mov    bl,0x9c
  4240b9:	pop    ecx
  4240ba:	push   es
  4240bb:	fisubr DWORD PTR [ebp-0x6d231007]
  4240c1:	pop    ss
  4240c2:	ret    
  4240c3:	mov    dl,0x7b
  4240c5:	jge    0x4240a5
  4240c7:	cs aaa 
  4240c9:	stc    
  4240ca:	arpl   WORD PTR es:[esi+0x2],sp
  4240ce:	lds    esi,FWORD PTR [eax+eax*1]
  4240d1:	retf   0xc9d
  4240d4:	mov    bl,BYTE PTR [edi-0x31]
  4240d7:	push   0xffffff82
  4240d9:	jecxz  0x42405f
  4240db:	xchg   ecx,eax
  4240dc:	mov    edi,0xd84d93ca
  4240e1:	fs jecxz 0x4240e4
  4240e4:	mov    bh,0x5a
  4240e6:	stos   BYTE PTR es:[edi],al
  4240e7:	pusha  
  4240e8:	mov    dh,BYTE PTR [eax]
  4240ea:	scas   al,BYTE PTR es:[edi]
  4240eb:	cmp    eax,0xe9627079
  4240f0:	mov    esp,0x6dea61d8
  4240f5:	mov    edi,DWORD PTR [edi]
  4240f7:	sub    BYTE PTR [eax],cl
  4240f9:	(bad)  
  4240fa:	jbe    0x4240cc
  4240fc:	mov    dh,0xfb
  4240fe:	sub    ebp,esi
  424100:	or     ebx,DWORD PTR ds:0x59c6828b
  424106:	inc    esi
  424107:	fdiv   st,st(6)
  424109:	aaa    
  42410a:	inc    ebx
  42410b:	sub    edx,eax
  42410d:	gs pusha 
  42410f:	mov    ch,BYTE PTR [ebp-0x10]
  424112:	js     0x4240c0
  424114:	pop    edi
  424115:	sbb    BYTE PTR [edi],dh
  424117:	sar    DWORD PTR [edx-0xed2a3da],cl
  42411d:	mov    bl,0x86
  42411f:	jle    0x4240b8
  424121:	pop    ecx
  424122:	add    dl,BYTE PTR [ebx-0x3f085a34]
  424128:	push   0xffffff9f
  42412a:	dec    eax
  42412b:	xchg   ebp,eax
  42412c:	je     0x42417a
  42412e:	dec    esp
  42412f:	(bad)
  424132:	les    esi,FWORD PTR [esi-0x4f]
  424135:	js     0x4241ab
  424137:	outs   dx,BYTE PTR ds:[esi]
  424138:	pop    edi
  424139:	into   
  42413a:	push   edx
  42413b:	imul   DWORD PTR [esi+0x7b]
  42413e:	cmp    DWORD PTR [ecx-0x48],edi
  424141:	pop    ebx
  424142:	xlat   BYTE PTR ds:[ebx]
  424143:	cwde   
  424144:	into   
  424145:	ss cs ins DWORD PTR es:[edi],dx
  424148:	out    0x48,al
  42414a:	(bad)  
  42414b:	jno    0x42413c
  42414d:	pop    DWORD PTR [ebx]
  42414f:	enter  0x757d,0x83
  424153:	push   cs
  424154:	mov    WORD PTR [edx],ss
  424156:	cdq    
  424157:	sbb    BYTE PTR [edx+0x411103d6],al
  42415d:	mov    dl,0x97
  42415f:	push   ss
  424160:	imul   bx,di,0x73f5
  424165:	mov    ds:0x3a6290d3,eax
  42416a:	in     al,0x7c
  42416c:	add    eax,0xbf61c6b7
  424171:	xor    eax,0xfd057e8b
  424176:	dec    eax
  424177:	inc    ebp
  424178:	loope  0x4241c7
  42417a:	mov    bl,0x21
  42417c:	jbe    0x42411b
  42417e:	loop   0x424192
  424180:	dec    edi
  424181:	pop    ecx
  424182:	std    
  424183:	mov    edi,0x4e4e7a0b
  424188:	mov    ebx,0x8123d844
  42418d:	jmp    0x217a:0x145a11fe
  424194:	xor    al,0xc3
  424196:	dec    ebx
  424197:	aam    0xb0
  424199:	dec    esi
  42419a:	shl    BYTE PTR [ebx],0x1a
  42419d:	jnp    0x424202
  42419f:	fisttp QWORD PTR [edx+0x3d]
  4241a2:	test   dl,0x9f
  4241a5:	jmp    0x2c4b5226
  4241aa:	dec    eax
  4241ab:	xchg   edi,eax
  4241ac:	mov    ch,BYTE PTR [ecx-0x5ead1d01]
  4241b2:	add    eax,0x544742dc
  4241b7:	scas   eax,DWORD PTR es:[edi]
  4241b8:	jb     0x4241e3
  4241ba:	mov    ebx,0xafd0d834
  4241bf:	push   ds
  4241c0:	adc    BYTE PTR [ecx-0x6002abdf],dl
  4241c6:	and    bh,0x6f
  4241c9:	retf   
  4241ca:	pop    ebp
  4241cb:	mov    esi,DWORD PTR [edx-0x133460c0]
  4241d1:	loop   0x424188
  4241d3:	fsubrp st(4),st
  4241d5:	adc    eax,0x5124b4eb
  4241da:	mov    dl,0x94
  4241dc:	mov    edi,0xee6294a2
  4241e1:	sbb    eax,0x54887ac3
  4241e6:	lock cmovb esp,DWORD PTR [edx+ecx*8]
  4241eb:	nop
  4241ec:	popa   
  4241ed:	sahf   
  4241ee:	xor    DWORD PTR [edx+edi*2-0x2d],edi
  4241f2:	mov    ch,0xc
  4241f4:	sti    
  4241f5:	mov    esi,0xe28e6bc6
  4241fa:	in     al,0xa6
  4241fc:	lea    ebp,[edi]
  4241fe:	push   ecx
  4241ff:	cmp    eax,0x80e39fe5
  424204:	ror    BYTE PTR ds:0xd4190bb7,0xa4
  42420b:	rcl    DWORD PTR [esi+0x39563483],1
  424211:	pop    ecx
  424212:	pop    eax
  424213:	cdq    
  424214:	mov    al,0x17
  424216:	adc    BYTE PTR [bx],bh
  424219:	and    al,0xe1
  42421b:	mov    edi,0x46cbec90
  424220:	sbb    DWORD PTR [ecx-0x1e813691],edi
  424226:	add    al,0xe6
  424228:	or     eax,0xe34f8a81
  42422d:	popa   
  42422e:	xchg   DWORD PTR ds:0x9fe2e922,edx
  424234:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  424235:	inc    edi
  424236:	mov    WORD PTR [ebx+0x7b],?
  424239:	inc    ebp
  42423a:	nop
  42423b:	add    dl,BYTE PTR [edi+ecx*8+0x3e]
  42423f:	scas   al,BYTE PTR es:[edi]
  424240:	test   al,0x88
  424242:	pop    eax
  424243:	pop    edx
  424244:	lods   eax,DWORD PTR ds:[esi]
  424245:	in     al,0xe8
  424247:	div    BYTE PTR [eax-0x3c]
  42424a:	jb     0x4241d6
  42424c:	xchg   DWORD PTR ds:0x994a0752,ebx
  424252:	push   ss
  424253:	lock mov ebx,0x4631a5a1
  424259:	mov    WORD PTR [ebp-0x65],gs
  42425c:	push   esp
  42425d:	xchg   DWORD PTR [edi],esi
  42425f:	push   ebx
  424260:	retf   0xac18
  424263:	jb     0x4242b7
  424265:	pop    ebp
  424266:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  424267:	cld    
  424268:	xchg   edi,eax
  424269:	xor    eax,0x6f4a5a18
  42426e:	fcomp  DWORD PTR [esi]
  424270:	mov    ecx,eax
  424272:	jno    0x4242e6
  424274:	push   ecx
  424275:	and    al,0x88
  424277:	dec    al
  424279:	hlt    
  42427a:	mov    esp,DWORD PTR [esi-0x2d]
  42427d:	iret   
  42427e:	add    eax,0x11f2d6f1
  424283:	jmp    0x324e:0xe44aa0ed
  42428a:	stc    
  42428b:	fidivr DWORD PTR [ebp+0x4d]
  42428e:	cmp    eax,0x33a945c0
  424293:	cmc    
  424294:	dec    eax
  424295:	mov    dh,0x38
  424297:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  424298:	ror    DWORD PTR [edi],1
  42429a:	or     edi,DWORD PTR [edx+0x6b692336]
  4242a0:	mov    BYTE PTR [edx],0x78
  4242a3:	sbb    dh,ch
  4242a5:	out    dx,al
  4242a6:	add    eax,0xd0660637
  4242ab:	outs   dx,DWORD PTR ds:[esi]
  4242ac:	xchg   BYTE PTR [edi+0x7610f70b],dl
  4242b2:	jbe    0x4242f3
  4242b4:	imul   esi,DWORD PTR [ecx+0x670c25ce],0xffffffa5
  4242bb:	out    dx,eax
  4242bc:	mov    ecx,0x32e07aa5
  4242c1:	push   edx
  4242c2:	mov    esp,0xbb24a250
  4242c7:	shr    BYTE PTR [eax+eax*1-0x3af6b34b],0x5
  4242cf:	cmc    
  4242d0:	mov    eax,ds:0x45433c10
  4242d5:	sub    edx,ecx
  4242d7:	mov    dh,0x43
  4242d9:	adc    ebx,DWORD PTR [ebp-0x1d]
  4242dc:	jae    0x4242f2
  4242de:	stos   BYTE PTR es:[edi],al
  4242df:	imul   ecx,DWORD PTR [edx+0x39],0x92a1e226
  4242e6:	xchg   esp,eax
  4242e7:	push   es
  4242e8:	sbb    al,cl
  4242ea:	sub    BYTE PTR [ebx],dh
  4242ec:	add    BYTE PTR [ecx-0x5256e697],bl
  4242f2:	das    
  4242f3:	(bad)  
  4242f4:	scas   al,BYTE PTR es:[edi]
  4242f5:	jo     0x4242cb
  4242f7:	repz leave 
  4242f9:	sbb    al,0x54
  4242fb:	fsub   DWORD PTR [ebx]
  4242fd:	push   es
  4242fe:	xchg   esi,ebx
  424300:	inc    edx
  424301:	sbb    esp,eax
  424303:	push   esi
  424304:	xor    DWORD PTR [eax],edi
  424306:	push   esi
  424307:	push   0xf1841fcb
  42430c:	ss jnp 0x424302
  42430f:	dec    esi
  424310:	cdq    
  424311:	nop
  424312:	cli    
  424313:	mov    fs,WORD PTR [ecx+eax*4]
  424316:	es cmc 
  424318:	or     BYTE PTR [esi-0x6c22dd3f],0xd6
  42431f:	cmp    BYTE PTR [eax],ah
  424321:	dec    ebx
  424322:	lods   eax,DWORD PTR ds:[esi]
  424323:	sub    eax,0x1a964c33
  424328:	gs or  eax,DWORD PTR ss:[edi+eiz*1-0x76d2bd6b]
  424331:	out    dx,al
  424332:	es stc 
  424334:	daa    
  424335:	jbe    0x42434e
  424337:	in     eax,dx
  424338:	test   BYTE PTR [ebp+esi*2+0x8],al
  42433c:	les    esi,FWORD PTR [eax]
  42433e:	(bad)
  424341:	daa    
  424342:	fisttp QWORD PTR [ecx]
  424344:	hlt    
  424345:	adc    BYTE PTR [eax-0x2d],dl
  424348:	iret   
  424349:	push   esi
  42434a:	data16 sub al,0xc5
  42434d:	push   esp
  42434e:	repnz adc esi,eax
  424351:	repnz into 
  424353:	push   0xfffffff3
  424355:	aas    
  424356:	int    0xfd
  424358:	inc    ebx
  424359:	xchg   esp,eax
  42435a:	lock icebp 
  42435c:	loopne 0x42435d
  42435e:	pop    esi
  42435f:	and    DWORD PTR [ebx],esp
  424361:	mov    bl,0xbf
  424363:	lods   eax,DWORD PTR ds:[esi]
  424364:	js     0x4243af
  424366:	and    BYTE PTR [ebx],0xbc
  424369:	and    eax,0xd6a8aa53
  42436e:	or     eax,0x4ac6719a
  424373:	jne    0x424314
  424375:	mov    DWORD PTR [eax-0x58a3d4e],0x7d7ac32a
  42437f:	push   ds
  424380:	mov    al,ds:0xc75cd654
  424385:	sub    bh,BYTE PTR [ebp+0x4a]
  424388:	in     eax,dx
  424389:	xchg   eax,edi
  42438b:	add    DWORD PTR [ebx+0x9b903b7],edi
  424391:	(bad)  
  424392:	fdivr  DWORD PTR [ebp+0x474e9536]
  424398:	scas   al,BYTE PTR es:[edi]
  424399:	cmp    BYTE PTR [ecx+0x69],0x16
  42439d:	ret    0x759e
  4243a0:	lods   eax,DWORD PTR ds:[esi]
  4243a1:	pop    esi
  4243a2:	into   
  4243a3:	sub    BYTE PTR [ebp+0x35710436],bh
  4243a9:	lods   eax,DWORD PTR ds:[esi]
  4243aa:	mov    eax,0xf604d39
  4243af:	or     BYTE PTR [ecx-0x44e49cd8],dl
  4243b5:	psrlq  mm2,mm1
  4243b8:	(bad)  
  4243b9:	fsubp  st(5),st
  4243bb:	pop    es
  4243bc:	data16 inc cl
  4243bf:	fs pop edi
  4243c1:	xchg   edx,eax
  4243c2:	rol    DWORD PTR [edx-0x52f70bad],1
  4243c8:	add    ebp,DWORD PTR [ebp-0x6e]
  4243cb:	mov    eax,0xc760d5f4
  4243d0:	hlt    
  4243d1:	mov    bl,0x4
  4243d3:	mov    bl,BYTE PTR [esi-0x2fcf0413]
  4243d9:	in     al,0xe7
  4243db:	and    al,0x1d
  4243dd:	nop
  4243de:	daa    
  4243df:	or     al,0xd5
  4243e1:	fwait
  4243e2:	or     al,0x27
  4243e4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4243e5:	popf   
  4243e6:	mov    gs,WORD PTR [ecx+0xe]
  4243e9:	rcl    BYTE PTR [esi+0x64],cl
  4243ec:	call   0x4d73c291
  4243f1:	in     al,dx
  4243f2:	jmp    0x9a9acfc3
  4243f7:	xchg   ch,cl
  4243f9:	cmp    DWORD PTR [ecx],0x40
  4243fc:	pop    bx
  4243fe:	dec    esp
  4243ff:	std    
  424400:	repnz test al,0x54
  424403:	inc    ebp
  424404:	jmp    0xc144:0x47abf763
  42440b:	xor    edx,DWORD PTR [edx+0x6e1b918f]
  424411:	push   ecx
  424412:	xchg   esp,eax
  424413:	jmp    0x42447e
  424415:	mov    ds:0x7929b235,eax
  42441a:	push   ebp
  42441b:	add    eax,0x95e0ba6f
  424420:	inc    edi
  424421:	rol    DWORD PTR [ebp+0x25],1
  424424:	mov    bl,0x56
  424426:	xchg   ebx,eax
  424427:	mov    ss,esp
  424429:	dec    ecx
  42442a:	mov    edx,0x2ee5f256
  42442f:	jo     0x42448c
  424431:	inc    esi
  424432:	aad    0xf8
  424434:	ss sbb eax,0xeb665679
  42443a:	pop    ecx
  42443b:	lock mov ah,0x56
  42443e:	xor    BYTE PTR [edi],0xae
  424441:	sub    al,0x9b
  424443:	push   eax
  424444:	sbb    BYTE PTR [ecx-0x7d],ah
  424447:	sar    BYTE PTR [eax-0x5e],0xd6
  42444b:	jbe    0x424459
  42444d:	inc    ebp
  42444e:	iret   
  42444f:	pop    ebp
  424450:	sbb    al,0x63
  424452:	xor    eax,0x7911713
  424457:	jecxz  0x424490
  424459:	xchg   ebp,eax
  42445a:	sub    ecx,esp
  42445c:	ja     0x4243fb
  42445e:	test   eax,0x586857c0
  424463:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424464:	mov    edx,0xcde30ba8
  424469:	(bad)  
  42446a:	pop    ebp
  42446b:	fadd   DWORD PTR ds:0xc90b6a64
  424471:	jecxz  0x4244bf
  424473:	mov    dl,0x79
  424475:	mov    ebx,0xc4f786e0
  42447a:	(bad)  
  42447c:	mov    ebx,0x1acecd0d
  424481:	nop
  424482:	arpl   WORD PTR [esp+ebp*4-0x2e],cx
  424486:	add    BYTE PTR [edx+ebp*1-0x5a],cl
  42448a:	mov    ecx,0x33901f1e
  42448f:	mov    ebp,0xdd65407f
  424494:	mov    ds:0x6f5a9344,al
  424499:	xchg   ebx,eax
  42449a:	pop    ebx
  42449b:	lea    ebp,[ecx+edx*2+0x53f8958a]
  4244a2:	inc    eax
  4244a3:	idiv   DWORD PTR es:[ecx+0x6b9e42a0]
  4244aa:	jg     0x4244db
  4244ac:	fmul   QWORD PTR [edi+0x36]
  4244af:	or     BYTE PTR [ebx-0x15c126fa],0x5c
  4244b6:	xlat   BYTE PTR ds:[ebx]
  4244b7:	dec    ecx
  4244b8:	jmp    0x3508:0xa89b8e7e
  4244bf:	adc    ecx,DWORD PTR [ecx]
  4244c1:	fnstcw WORD PTR [edx]
  4244c3:	cmp    esp,DWORD PTR [eax+0x4f]
  4244c6:	inc    edi
  4244c7:	push   esi
  4244c8:	jge    0x4244b5
  4244ca:	ss int 0x4a
  4244cd:	je     0x424459
  4244cf:	lds    edx,FWORD PTR [esp+ecx*4-0x66]
  4244d3:	cwde   
  4244d4:	push   cs
  4244d5:	inc    ebx
  4244d6:	shl    DWORD PTR [edx],0xd2
  4244d9:	(bad)  
  4244da:	mov    ecx,0x93fbd8dd
  4244df:	mov    edx,0x9342d7e1
  4244e4:	mov    ds:0x1aeed04e,eax
  4244e9:	fsubr  QWORD PTR [edx+eax*8]
  4244ec:	jle    0x4244e9
  4244ee:	data16 mov bh,0xd8
  4244f1:	xchg   ebx,eax
  4244f2:	in     al,dx
  4244f3:	xchg   bl,ah
  4244f5:	stos   BYTE PTR es:[edi],al
  4244f6:	push   ds
  4244f7:	stos   BYTE PTR es:[edi],al
  4244f8:	sahf   
  4244f9:	inc    esp
  4244fa:	in     al,0x80
  4244fc:	pop    ds
  4244fd:	test   eax,0x31ef67d9
  424502:	xchg   BYTE PTR [edi],ah
  424504:	or     eax,0xe53d84c8
  424509:	aaa    
  42450a:	mov    bh,0x16
  42450c:	popa   
  42450d:	inc    edx
  42450e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42450f:	dec    edi
  424510:	pop    esp
  424511:	div    DWORD PTR [ebp-0x4ca5fc51]
  424517:	nop
  424518:	fbld   TBYTE PTR [ebx-0x37]
  42451b:	out    0x6f,al
  42451d:	or     esp,DWORD PTR [eax]
  42451f:	nop
  424520:	aas    
  424521:	out    0x53,eax
  424523:	add    al,0x4b
  424525:	daa    
  424526:	sub    al,0xbd
  424528:	cmc    
  424529:	loop   0x424559
  42452b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42452c:	in     al,0xc0
  42452e:	inc    esi
  42452f:	pop    esp
  424530:	push   0xffffffab
  424532:	cli    
  424533:	xchg   DWORD PTR [esi],esp
  424535:	daa    
  424536:	cmp    DWORD PTR [eax],edx
  424538:	jecxz  0x424576
  42453a:	data16 sar BYTE PTR [edx-0x6b62c50b],cl
  424541:	gs aaa 
  424543:	inc    ebp
  424544:	(bad)
  424547:	mov    bl,0xb3
  424549:	hlt    
  42454a:	cs jmp 0xe32d:0xc36760d
  424552:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  424553:	add    BYTE PTR [esi],dh
  424555:	jg     0x4245b0
  424557:	sbb    DWORD PTR cs:[ebx+0x22],esp
  42455b:	cmc    
  42455c:	(bad)  
  42455e:	jbe    0x4244e0
  424560:	mov    dh,0x95
  424563:	dec    esi
  424564:	mov    ch,0xee
  424566:	mov    esi,0xb99ae8c1
  42456b:	stos   DWORD PTR es:[edi],eax
  42456c:	pop    ebx
  42456e:	mov    esi,0xb6eaa261
  424573:	ret    0x22d2
  424576:	shl    BYTE PTR [ecx-0x1b],cl
  424579:	sub    BYTE PTR [esi],ch
  42457b:	push   ecx
  42457c:	imul   ecx,DWORD PTR [edx+0x8aa2b9a],0x68153470
  424586:	or     ch,al
  424588:	sub    eax,0xe2ce006d
  42458d:	mov    ebx,0x4f880213
  424592:	test   eax,0x29b847
  424597:	pop    eax
  424598:	add    BYTE PTR [edi+0x250187ce],dh
  42459e:	icebp  
  42459f:	call   0xe0884a8c
  4245a4:	nop
  4245a5:	pushf  
  4245a6:	xlat   BYTE PTR ds:[ebx]
  4245a7:	fidivr WORD PTR [ecx+0x62]
  4245aa:	dec    ebp
  4245ab:	fstp   DWORD PTR [ecx-0x3c64959b]
  4245b1:	xchg   ebp,eax
  4245b2:	xchg   ecx,eax
  4245b3:	push   esi
  4245b4:	jmp    0x424577
  4245b6:	(bad)  
  4245b7:	out    dx,eax
  4245b8:	mov    ds:0xaf016b89,al
  4245bd:	and    ch,BYTE PTR ds:0x95dffe8d
  4245c3:	or     al,0x0
  4245c5:	jge    0x424624
  4245c7:	jbe    0x42455d
  4245c9:	pop    es
  4245ca:	gs pop ebx
  4245cc:	add    esp,esi
  4245ce:	and    BYTE PTR [ebx],ch
  4245d0:	shr    BYTE PTR [eax+0x1ea5077e],0x4b
  4245d7:	fs inc edi
  4245d9:	in     eax,0x40
  4245db:	dec    edi
  4245dc:	adc    dl,al
  4245de:	fld1   
  4245e0:	xchg   esp,eax
  4245e1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4245e2:	aad    0x19
  4245e4:	mov    ds:0x630910e2,al
  4245e9:	cmp    eax,DWORD PTR [edx-0x34]
  4245ec:	out    dx,al
  4245ed:	aad    0x43
  4245ef:	lods   al,BYTE PTR ds:[esi]
  4245f0:	repnz or dl,cl
  4245f3:	imul   esi,DWORD PTR [ecx+0x28],0xa
  4245f7:	sahf   
  4245f8:	mov    ds,WORD PTR [ebp+esi*2-0x5a]
  4245fc:	push   0x6f
  4245fe:	lea    ebp,[eax-0x71b290da]
  424604:	jne    0x42459d
  424606:	jae    0x4245e2
  424608:	add    al,0xbb
  42460a:	in     eax,dx
  42460b:	inc    ecx
  42460c:	out    dx,eax
  42460d:	push   ss
  42460e:	mov    edx,0xa3823663
  424613:	or     ebp,ebp
  424615:	push   edx
  424616:	xchg   edi,eax
  424617:	pusha  
  424618:	fisttp WORD PTR ds:0x3bfbfd60
  42461e:	test   DWORD PTR [edx],esp
  424620:	xchg   ebp,eax
  424621:	pop    ebx
  424622:	pushf  
  424623:	add    DWORD PTR [ecx],0xffffff9c
  424626:	mov    al,ds:0x35aec3bb
  42462b:	mov    edx,0x73c7c2c6
  424630:	mov    bl,BYTE PTR [ebx+eax*8-0x51]
  424634:	enter  0x9b42,0x77
  424638:	test   eax,0x9ad4766d
  42463d:	xor    al,0xf4
  42463f:	out    0xa0,al
  424641:	fisttp DWORD PTR [ebx-0x7e4e0a97]
  424647:	inc    esi
  424648:	loopne 0x424669
  42464a:	push   ecx
  42464b:	outs   dx,BYTE PTR ds:[esi]
  42464c:	jnp    0x424698
  42464e:	mov    eax,ds:0x5edc6cab
  424653:	repz sbb BYTE PTR [edx+ecx*8+0x76654732],bh
  42465b:	jae    0x424614
  42465d:	(bad)  
  42465e:	ret    
  42465f:	loop   0x42465e
  424661:	addr16 test al,0xc3
  424664:	pusha  
  424665:	add    ebp,DWORD PTR [ebp+0x2d]
  424668:	dec    ebx
  424669:	jle    0x424666
  42466b:	ins    DWORD PTR es:[edi],dx
  42466c:	and    BYTE PTR [ebx+0xe],bl
  42466f:	mov    ch,0x72
  424671:	lods   al,BYTE PTR ds:[esi]
  424672:	lds    edx,FWORD PTR [edi]
  424674:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  424675:	xchg   esp,eax
  424676:	jmp    0x42468a
  424678:	cmp    al,0xdb
  42467a:	push   ds
  42467b:	push   0x6e33afe9
  424680:	ret    
  424681:	jg     0x4246a7
  424683:	call   0xf73e:0xd26e4309
  42468a:	and    eax,0xc2bd5811
  42468f:	bound  esi,QWORD PTR [ecx+ebx*1]
  424692:	mov    eax,ds:0x2479f0af
  424697:	hlt    
  424698:	dec    esi
  424699:	and    DWORD PTR [ecx+edi*4+0x3e],0x5b355c8d
  4246a1:	sbb    ah,BYTE PTR [ecx]
  4246a3:	(bad)  
  4246a4:	repz add BYTE PTR [ecx+edi*8-0x46],0xb6
  4246aa:	jecxz  0x424709
  4246ac:	ins    BYTE PTR es:[edi],dx
  4246ad:	(bad)  
  4246ae:	xor    al,0xf6
  4246b0:	push   eax
  4246b1:	sbb    dl,BYTE PTR [edi]
  4246b3:	fadd   DWORD PTR [eax+ecx*8]
  4246b6:	xor    al,cl
  4246b8:	out    dx,al
  4246b9:	enter  0xd8d6,0xc9
  4246bd:	fs push ecx
  4246bf:	lahf   
  4246c0:	ffree  st(6)
  4246c2:	mov    al,0xcc
  4246c4:	inc    eax
  4246c5:	mov    ebp,0x22e202e1
  4246ca:	push   ebp
  4246cb:	push   es
  4246cc:	in     eax,dx
  4246cd:	cmp    BYTE PTR [edi+0x7f],dh
  4246d0:	cmc    
  4246d1:	repnz (bad) 
  4246d3:	loopne 0x424706
  4246d5:	scas   al,BYTE PTR es:[edi]
  4246d6:	add    esp,DWORD PTR [esp+eiz*2]
  4246d9:	and    bh,BYTE PTR [edi+0x5b9f72c9]
  4246df:	adc    eax,0x1397d205
  4246e4:	push   ss
  4246e5:	fdivr  DWORD PTR [edi+0x1cc3ce19]
  4246eb:	push   esp
  4246ec:	dec    ebp
  4246ed:	sbb    al,0x45
  4246ef:	gs inc ebx
  4246f1:	repz push ds
  4246f3:	repnz xor al,BYTE PTR [ebp-0x63]
  4246f7:	jmp    0xa070:0x93a26250
  4246fe:	call   0xb709:0x7a49e85d
  424705:	mov    eax,0x26526428
  42470a:	(bad)  
  42470b:	(bad)  
  42470c:	in     eax,0x9
  42470e:	pop    ss
  42470f:	sub    dh,BYTE PTR [edi-0x48]
  424712:	jae    0x4246f1
  424714:	mov    ch,0xca
  424716:	std    
  424717:	pop    esp
  424718:	icebp  
  424719:	fisttp WORD PTR [eax-0x144b85d8]
  42471f:	xor    al,0x86
  424721:	aas    
  424722:	pop    esp
  424723:	mov    al,ds:0x5374303f
  424728:	or     eax,0x44dec3af
  42472d:	pusha  
  42472e:	sbb    al,BYTE PTR [esi+0x34661bd4]
  424734:	sub    esp,0x63
  424737:	shl    DWORD PTR [esi+0x12],1
  42473a:	daa    
  42473b:	push   ebp
  42473c:	into   
  42473d:	push   esp
  42473e:	scas   eax,DWORD PTR es:[edi]
  42473f:	lods   al,BYTE PTR ds:[esi]
  424740:	imul   ecx,DWORD PTR [ebx+0x79],0x53
  424744:	mov    BYTE PTR ds:[esi+edx*8+0x5554f1aa],ch
  42474c:	lods   eax,DWORD PTR ds:[esi]
  42474d:	sub    al,0xc4
  42474f:	jmp    0xe7eae99a
  424754:	sbb    DWORD PTR [ebx+eiz*1+0x60],eax
  424758:	ficom  WORD PTR [edi+0x2024e99d]
  42475e:	ret    0x405c
  424761:	dec    BYTE PTR [esi-0x12]
  424764:	mov    al,ds:0x3d0a57d8
  424769:	aaa    
  42476a:	xor    DWORD PTR [ecx],edx
  42476c:	sub    BYTE PTR [ecx-0xe],dh
  42476f:	jnp    0x42475d
  424771:	fistp  DWORD PTR [ecx-0x77f5305a]
  424777:	push   eax
  424778:	mov    dl,0x43
  42477a:	push   cs
  42477b:	inc    edx
  42477c:	or     dh,BYTE PTR [esi+0x6a]
  42477f:	jno    0x424714
  424781:	adc    al,0xa0
  424783:	sbb    BYTE PTR [ecx-0x7db5aa65],0x21
  42478a:	int    0x82
  42478c:	mov    BYTE PTR [eax+esi*1+0x5e1ca0f4],al
  424793:	mov    cl,0xdd
  424795:	inc    eax
  424796:	rcr    BYTE PTR [esi],0x71
  424799:	mov    bh,0x42
  42479b:	(bad)  
  42479c:	rol    DWORD PTR [eax+0x16],1
  42479f:	dec    esp
  4247a0:	les    edx,FWORD PTR [edx+0x13801507]
  4247a6:	mov    eax,ds:0x33e8a06
  4247ab:	das    
  4247ac:	dec    ecx
  4247ad:	or     BYTE PTR [edi+edi*2],ch
  4247b0:	cmp    BYTE PTR [esi+0x7],ah
  4247b3:	push   edx
  4247b4:	add    eax,0x7aac1f42
  4247b9:	imul   ebp,esi,0x13ac459e
  4247bf:	in     al,0x15
  4247c1:	jnp    0x424824
  4247c3:	nop
  4247c4:	add    dl,BYTE PTR [esi-0x80]
  4247c7:	repz xor al,0x68
  4247ca:	jno    0x424807
  4247cc:	repnz not BYTE PTR [edi+0x3]
  4247d0:	or     BYTE PTR [edi+0x6b],0x6
  4247d4:	in     eax,dx
  4247d5:	sub    bh,BYTE PTR [edx]
  4247d7:	sub    DWORD PTR [ebp+eiz*1-0x255eeba3],esp
  4247de:	dec    esi
  4247df:	mov    eax,0x7b7abf7b
  4247e4:	inc    ebp
  4247e5:	add    bh,bl
  4247e7:	mov    bl,0xa7
  4247e9:	mov    dl,0x3a
  4247eb:	int    0xb7
  4247ed:	lea    ebx,[edx]
  4247ef:	dec    ebp
  4247f0:	inc    ecx
  4247f1:	lock mov ah,0xcb
  4247f4:	mov    esi,0xc2669f5b
  4247f9:	dec    eax
  4247fa:	jg     0x424822
  4247fc:	scas   eax,DWORD PTR es:[edi]
  4247fd:	add    bl,BYTE PTR ds:0x5f82744
  424803:	addr16 push 0x68
  424806:	fucomi st,st(2)
  424808:	cmp    al,0x21
  42480a:	mov    BYTE PTR [edi],0x94
  42480d:	pop    ebx
  42480e:	add    al,0x0
  424810:	xchg   edi,eax
  424811:	aaa    
  424812:	js     0x4247b2
  424814:	cld    
  424815:	xor    eax,0x29ddd8e7
  42481a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42481b:	clc    
  42481c:	sahf   
  42481d:	adc    BYTE PTR [eax-0x67a91e2b],al
  424823:	mov    WORD PTR ds:0x70c004ef,ss
  424829:	and    eax,0x7e826c31
  42482e:	imul   edi
  424830:	inc    edx
  424831:	cdq    
  424832:	add    dl,BYTE PTR [esi-0x7d]
  424835:	mov    dh,BYTE PTR [ebx+ecx*1-0x45fc5bef]
  42483c:	fsubp  st(3),st
  42483e:	mov    esp,0xb0864ca1
  424843:	int    0x7d
  424845:	push   eax
  424846:	pop    ds
  424847:	ss out 0x63,al
  42484a:	lock pusha 
  42484c:	sbb    DWORD PTR [eax+0x7e5c5f79],ebp
  424852:	mov    ebx,0x4c3a0e54
  424857:	mov    ds:0x6db8eea9,eax
  42485c:	add    edx,DWORD PTR [edi-0x5df0ef26]
  424862:	ret    
  424863:	loop   0x42489a
  424865:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  424866:	loop   0x4248aa
  424868:	outs   dx,DWORD PTR ds:[esi]
  424869:	push   edi
  42486a:	dec    esi
  42486b:	fidivr WORD PTR [ecx]
  42486d:	xor    eax,0xf2a8a24c
  424872:	mov    ecx,0xbb143db3
  424877:	mov    DWORD PTR [esp+eax*4+0x3552e533],esi
  42487e:	mov    al,0xba
  424880:	mov    ch,cl
  424882:	stc    
  424883:	gs repz cmp al,0xc7
  424887:	and    al,0xa6
  424889:	push   0x72
  42488b:	sti    
  42488c:	rol    ebx,1
  42488e:	mov    BYTE PTR [ebp-0x7d4db52],bl
  424894:	cmp    al,0xe0
  424896:	in     eax,dx
  424897:	inc    ebp
  424898:	pmaxsw mm5,mm3
  42489b:	je     0x424898
  42489d:	mov    dh,0x9d
  42489f:	addr16 fwait
  4248a1:	mov    BYTE PTR [ecx+0x59d6330],0x45
  4248a8:	loopne 0x4248f6
  4248aa:	sub    ecx,DWORD PTR [eax]
  4248ac:	and    cl,BYTE PTR [ecx-0x1f]
  4248af:	cmp    dl,al
  4248b1:	xchg   edx,eax
  4248b2:	and    al,ah
  4248b4:	in     al,dx
  4248b5:	mov    WORD PTR [ebx-0x764e88e6],ss
  4248bb:	retf   
  4248bc:	xor    edi,DWORD PTR [edx+ebx*8]
  4248bf:	dec    eax
  4248c0:	or     ah,BYTE PTR [edx+0x55e19d10]
  4248c6:	mov    ebx,0x1cbdb449
  4248cb:	xchg   ebx,eax
  4248cc:	imul   esi,ecx,0xd4f7b181
  4248d2:	addr16 daa 
  4248d4:	shl    BYTE PTR [ebp+eax*8-0x5a32107a],1
  4248db:	inc    ebx
  4248dc:	mov    ecx,0x1380fe07
  4248e1:	loop   0x42488f
  4248e3:	scas   eax,DWORD PTR es:[edi]
  4248e4:	dec    eax
  4248e5:	(bad)  
  4248e7:	xor    al,0x97
  4248e9:	test   al,0x72
  4248eb:	sbb    eax,0xc0a51e0
  4248f0:	push   ebp
  4248f1:	sar    BYTE PTR [edi+0x6d],1
  4248f4:	arpl   WORD PTR [edx+ebx*1+0x27],bx
  4248f8:	cli    
  4248f9:	xchg   ebp,eax
  4248fa:	into   
  4248fb:	pop    esp
  4248fc:	sub    DWORD PTR [ecx-0x3b90e0be],eax
  424902:	fild   QWORD PTR [ebx+0x51]
  424905:	mov    ebx,0xd79c32d3
  42490a:	and    cl,BYTE PTR [ebx-0x13cfd3f3]
  424910:	mov    ebp,0xd6a46c94
  424915:	or     si,cx
  424918:	sahf   
  424919:	xchg   edi,eax
  42491a:	ss (bad) 
  42491c:	cmp    DWORD PTR [ebx-0x15d657c0],ecx
  424922:	scas   al,BYTE PTR es:[edi]
  424923:	xchg   edx,eax
  424924:	jle    0x4248b5
  424926:	(bad)  es:[edx+0x6a]
  42492a:	xor    al,BYTE PTR [ebp-0x4b8a62fe]
  424930:	out    0x5d,al
  424932:	or     BYTE PTR [edx+0x70f6fea7],cl
  424938:	movs   DWORD PTR es:[edi],DWORD PTR gs:[esi]
  42493a:	push   esp
  42493b:	inc    edx
  42493c:	int3   
  42493d:	add    esp,DWORD PTR [edx-0x15f8b760]
  424943:	test   al,0x6c
  424945:	int3   
  424946:	add    al,0xa5
  424948:	test   eax,0x1fb1accb
  42494d:	out    dx,al
  42494e:	sub    BYTE PTR [edi],ah
  424950:	cmc    
  424951:	hlt    
  424952:	and    eax,0x31313167
  424957:	dec    esp
  424958:	repz mov edi,0xb9a93f7e
  42495e:	adc    al,0xce
  424960:	jno    0x42499e
  424962:	sar    BYTE PTR [eax],cl
  424964:	inc    edi
  424965:	xor    BYTE PTR [esi],dh
  424967:	js     0x4248f1
  424969:	repz adc al,0xc9
  42496c:	sub    BYTE PTR [esi-0x29dfab08],0xa9
  424973:	mov    ds:0xf832ec4c,al
  424978:	out    dx,eax
  424979:	fcomp  QWORD PTR [esi-0x1a89e1cd]
  42497f:	bound  esp,QWORD PTR [edi+0x6e06d50]
  424985:	iret   
  424986:	cmp    dl,BYTE PTR [edx+0x23]
  424989:	dec    ecx
  42498a:	inc    ecx
  42498b:	or     ecx,eax
  42498d:	push   edx
  42498e:	test   al,0x9a
  424990:	cld    
  424991:	out    dx,eax
  424992:	jno    0x4249d3
  424994:	lods   al,BYTE PTR ds:[esi]
  424995:	imul   ebx,DWORD PTR [eax-0x6b],0x47
  424999:	xchg   edx,eax
  42499a:	jnp    0x4249a3
  42499c:	lods   eax,DWORD PTR ds:[esi]
  42499d:	scas   eax,DWORD PTR es:[edi]
  42499e:	std    
  42499f:	jnp    0x424952
  4249a1:	mov    al,BYTE PTR [edi]
  4249a3:	or     eax,0xe5553d8a
  4249a8:	pop    edi
  4249a9:	mov    esp,0x79250ea0
  4249ae:	xchg   ebx,eax
  4249af:	push   ds
  4249b0:	add    eax,0x90342eaa
  4249b5:	mov    al,ds:0xe65141b9
  4249ba:	icebp  
  4249bb:	aad    0xac
  4249bd:	push   ebx
  4249be:	ss jle 0x4249c3
  4249c1:	(bad)  
  4249c2:	ror    DWORD PTR [ebp+eax*4+0x47f8b4a5],1
  4249c9:	lods   al,BYTE PTR ds:[esi]
  4249ca:	or     edx,DWORD PTR [ecx+0x1639ab59]
  4249d0:	mov    esi,db6
  4249d3:	in     al,0xfa
  4249d5:	std    
  4249d6:	adc    eax,0xbb579d3e
  4249db:	and    al,0x4b
  4249dd:	xlat   BYTE PTR ds:[ebx]
  4249de:	fisttp QWORD PTR [edx]
  4249e0:	sbb    DWORD PTR [eax+0x35],ebp
  4249e3:	push   ebx
  4249e4:	mov    ah,0xf4
  4249e6:	adc    dl,BYTE PTR [edi]
  4249e8:	sti    
  4249e9:	add    al,0x60
  4249eb:	mov    eax,0x26bbb2d9
  4249f0:	fld    TBYTE PTR [ebx+0x61]
  4249f3:	(bad)  
  4249f4:	cdq    
  4249f5:	pop    ebx
  4249f6:	mov    al,ds:0x983f0474
  4249fb:	xchg   ebp,eax
  4249fc:	sub    al,0x3b
  4249fe:	retf   0x5af3
  424a01:	rcr    ebp,cl
  424a03:	push   0x77
  424a05:	mov    ecx,0xc43a472c
  424a0a:	mov    al,ds:0xc1ad01e8
  424a0f:	add    BYTE PTR [ebx],bl
  424a11:	and    BYTE PTR [ecx],ch
  424a13:	xchg   esi,eax
  424a14:	mov    bh,dl
  424a16:	mov    dh,0xdd
  424a18:	cmp    DWORD PTR [ebx-0x8],ecx
  424a1b:	je     0x4249c0
  424a1d:	add    al,0x4c
  424a1f:	push   ebp
  424a20:	xor    DWORD PTR ds:0xd2fd15c4,esi
  424a26:	cmp    ah,BYTE PTR [eax+0x40]
  424a29:	mov    esp,0x2ceda6e5
  424a2e:	retf   0x8f10
  424a31:	pop    edi
  424a32:	lock cli 
  424a34:	sbb    BYTE PTR [esi+eax*1+0x4cd66e00],0xaa
  424a3c:	or     eax,0xd0b7c924
  424a41:	jmp    0x66911488
  424a46:	pop    ebp
  424a47:	in     eax,dx
  424a48:	sub    esi,DWORD PTR [ebp+0x53c1a5dc]
  424a4e:	(bad)  [ecx]
  424a50:	cmp    al,0xa
  424a52:	xchg   ebp,eax
  424a53:	add    ch,BYTE PTR [ebx+0x46fa5cbc]
  424a59:	cdq    
  424a5a:	jno    0x4249f4
  424a5c:	(bad)  
  424a5d:	pop    esp
  424a5e:	cmp    ah,bl
  424a60:	inc    ecx
  424a61:	jne    0x424a90
  424a63:	outs   dx,DWORD PTR ds:[esi]
  424a64:	add    al,0xbe
  424a66:	outs   dx,BYTE PTR ds:[esi]
  424a67:	xor    eax,0x335945fa
  424a6c:	or     BYTE PTR [ecx-0x65826a87],al
  424a72:	(bad)  [esi]
  424a74:	bnd call 0x2c544f17
  424a7a:	pusha  
  424a7b:	adc    eax,DWORD PTR [edi-0xa]
  424a7e:	sar    DWORD PTR [edi+0x7bc9d1dd],1
  424a84:	rcl    DWORD PTR [edi-0x5fe2ddbd],0xff
  424a8b:	(bad)  
  424a8c:	cdq    
  424a8d:	test   al,0x9
  424a8f:	fist   DWORD PTR [ecx+eax*4]
  424a92:	jmp    0xbf7a:0x1ad6530e
  424a99:	xor    ebp,edx
  424a9b:	or     bh,ah
  424a9d:	xlat   BYTE PTR ds:[ebx]
  424a9e:	inc    ecx
  424a9f:	adc    ch,BYTE PTR [ecx-0x62]
  424aa2:	dec    esi
  424aa3:	add    al,0x40
  424aa5:	sbb    al,ah
  424aa7:	test   eax,ebx
  424aa9:	lock mov al,ds:0x75632295
  424aaf:	jg     0x424aa4
  424ab1:	push   0x67
  424ab3:	push   ecx
  424ab4:	call   0xefa60423
  424ab9:	mov    edx,0xea096b02
  424abe:	and    DWORD PTR [ebx+0x72465ee6],eax
  424ac4:	aam    0x81
  424ac6:	dec    ebp
  424ac7:	mov    ah,0x7a
  424ac9:	sahf   
  424aca:	and    BYTE PTR [edx],ch
  424acc:	add    DWORD PTR [edx-0x50315f19],0xffffffdf
  424ad3:	push   esi
  424ad4:	mov    ds:0x57f4282f,al
  424ad9:	repnz xor BYTE PTR ds:0x57f7475e,bl
  424ae0:	loopne 0x424b3b
  424ae2:	xchg   ebx,eax
  424ae3:	sbb    al,0x74
  424ae5:	int    0xdf
  424ae7:	sub    BYTE PTR [edx],bh
  424ae9:	mov    esi,ebp
  424aeb:	and    al,BYTE PTR ds:0x60ad6ead
  424af1:	mov    DWORD PTR [esi+0x5f],ebp
  424af4:	sahf   
  424af5:	jg     0x424aba
  424af7:	leave  
  424af8:	push   ds
  424af9:	leave  
  424afa:	mov    ecx,0x43486cc6
  424aff:	pop    ecx
  424b00:	call   0xce22b188
  424b05:	mov    BYTE PTR [esi+edx*1+0x1be4c459],al
  424b0c:	bound  ebp,QWORD PTR [ebx+0x1f9c1320]
  424b12:	dec    ebp
  424b13:	jecxz  0x424b85
  424b15:	xlat   BYTE PTR ds:[ebx]
  424b16:	jb     0x424b3f
  424b18:	or     DWORD PTR [eax+esi*1-0x3fd4214c],0xcb07199c
  424b23:	adc    esp,edi
  424b25:	sbb    ch,BYTE PTR [ecx]
  424b27:	pop    ebx
  424b28:	pop    ss
  424b29:	ror    BYTE PTR [eax+0x75],cl
  424b2c:	pop    esp
  424b2d:	xchg   ebp,eax
  424b2e:	mov    ch,0xc0
  424b30:	fstp   DWORD PTR [ebx+0x69dc0e]
  424b36:	sbb    bh,BYTE PTR [esi+0x34]
  424b39:	mov    bh,0xcb
  424b3b:	sub    eax,ebp
  424b3d:	cwde   
  424b3e:	push   esp
  424b3f:	jo     0x424b4a
  424b41:	mov    esi,0x90428439
  424b46:	scas   eax,DWORD PTR es:[edi]
  424b47:	fcomp  QWORD PTR [ebp-0x58]
  424b4a:	adc    BYTE PTR ds:0x6d9d805b,al
  424b50:	push   cs
  424b51:	xor    al,0xad
  424b53:	adc    DWORD PTR [edi+0x38],edi
  424b56:	xor    BYTE PTR ds:0x5bd3310c,bl
  424b5c:	pop    edi
  424b5d:	inc    esp
  424b5e:	dec    esi
  424b5f:	pop    edi
  424b60:	mov    BYTE PTR [esi+0x4b],ch
  424b63:	in     al,dx
  424b64:	mov    esp,0x6ea642a2
  424b69:	pop    ecx
  424b6a:	rcl    BYTE PTR [esp+ecx*8],1
  424b6d:	pop    es
  424b6e:	std    
  424b6f:	loopne 0x424b56
  424b71:	jb     0x424b4d
  424b73:	sub    BYTE PTR [eax-0x1577be73],0xaa
  424b7a:	jae    0x424bc9
  424b7c:	inc    ebx
  424b7d:	mov    ebp,0xb3c297ea
  424b82:	jp     0x424bf4
  424b84:	les    ebp,FWORD PTR [edx+0x4f5a12ca]
  424b8a:	mov    eax,0x70d780c8
  424b8f:	adc    dh,BYTE PTR [edi]
  424b91:	and    eax,0xa804d33c
  424b96:	sub    BYTE PTR [ebx],bl
  424b98:	adc    BYTE PTR [eax],ch
  424b9a:	leave  
  424b9b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  424b9c:	mov    esi,0xec903642
  424ba1:	idiv   DWORD PTR [edx+0x1e500ec2]
  424ba7:	dec    edi
  424ba8:	adc    eax,0xa960c8d
  424bad:	cmp    eax,0x6e3fd89e
  424bb2:	das    
  424bb3:	cmc    
  424bb4:	pop    edi
  424bb5:	mov    DWORD PTR [eax],esp
  424bb7:	enter  0x4688,0x7
  424bbb:	mov    ebp,0xaccd287b
  424bc0:	push   ecx
  424bc1:	ja     0x424bef
  424bc3:	js     0x424bf5
  424bc5:	stc    
  424bc6:	dec    ebx
  424bc7:	in     eax,0x48
  424bc9:	pop    esi
  424bca:	gs push ss
  424bcc:	inc    edi
  424bcd:	js     0x424be3
  424bcf:	adc    DWORD PTR [edx+0x6908ee04],ecx
  424bd5:	fsubr  st(0),st
  424bd7:	jecxz  0x424bc8
  424bd9:	mul    BYTE PTR [ebx-0xa]
  424bdc:	dec    esi
  424bdd:	in     eax,0x2b
  424bdf:	cs jo  0x424b92
  424be2:	dec    esp
  424be3:	leave  
  424be4:	mov    WORD PTR [eax-0x38],es
  424be7:	bound  esi,QWORD PTR [esi+edi*8+0x55]
  424beb:	push   ecx
  424bec:	adc    al,0xfc
  424bee:	push   ebx
  424bef:	dec    ebp
  424bf0:	pop    esi
  424bf1:	stos   BYTE PTR es:[edi],al
  424bf2:	repz clc 
  424bf4:	into   
  424bf5:	lea    edi,[ecx+0x48c4a462]
  424bfb:	ds dec eax
  424bfd:	or     DWORD PTR ds:0x110aa37a,edx
  424c03:	in     al,dx
  424c04:	sar    BYTE PTR [esi-0x2422b1e2],1
  424c0a:	repz push edx
  424c0c:	cmp    bh,BYTE PTR [edi]
  424c0e:	and    bl,ch
  424c10:	mov    ecx,0x9c070c4e
  424c15:	scas   al,BYTE PTR es:[edi]
  424c16:	(bad)  
  424c17:	ins    BYTE PTR es:[edi],dx
  424c18:	fild   DWORD PTR [edx-0x5e]
  424c1b:	mov    esi,0xde6cc568
  424c20:	add    ebx,DWORD PTR [edi]
  424c22:	mov    ebx,0x26ce97a5
  424c27:	in     eax,dx
  424c28:	ret    
  424c29:	cdq    
  424c2a:	and    ebx,DWORD PTR ds:0x18d193f5
  424c30:	addr16 pop edx
  424c32:	cld    
  424c33:	mov    BYTE PTR [ebp-0x2c14f36c],dh
  424c39:	sbb    dl,BYTE PTR ds:0x6b297d54
  424c3f:	mov    ds:0x7ef9cda3,al
  424c44:	fbstp  TBYTE PTR [ebx+eiz*8-0x7b]
  424c48:	pop    esp
  424c49:	lahf   
  424c4a:	adc    cl,BYTE PTR [ebp+0x4c]
  424c4d:	add    edx,DWORD PTR [eax-0x72d0b200]
  424c53:	ficom  DWORD PTR [esi-0x64]
  424c56:	loopne 0x424cc9
  424c58:	fild   WORD PTR [esi+0x69]
  424c5b:	in     al,dx
  424c5c:	cmp    esp,ecx
  424c5e:	push   ebp
  424c5f:	out    dx,al
  424c60:	pop    es
  424c61:	cmp    eax,0xb76fa67e
  424c66:	test   al,0x3f
  424c68:	inc    edx
  424c69:	shl    DWORD PTR [ebx],0x7e
  424c6c:	das    
  424c6d:	mov    edi,DWORD PTR [eax-0x71933dba]
  424c73:	jns    0x424c2f
  424c75:	or     eax,0x31fe9a19
  424c7a:	imul   ecx,DWORD PTR [edx+0x42],0xa6f76c96
  424c81:	call   0x796751a5
  424c86:	pop    edi
  424c87:	clc    
  424c88:	xor    al,0xb8
  424c8a:	loopne 0x424c29
  424c8c:	frndint 
  424c8e:	pop    ebx
  424c8f:	(bad)  
  424c90:	sub    ch,ch
  424c92:	jo     0x424d00
  424c94:	cld    
  424c95:	jecxz  0x424ce5
  424c97:	mov    al,0x3d
  424c99:	inc    edi
  424c9a:	or     DWORD PTR [esi+0x71],0x6e8c9428
  424ca1:	mov    ch,dh
  424ca3:	or     edx,ebx
  424ca5:	dec    esp
  424ca6:	jmp    0x5d199626
  424cab:	int    0x37
  424cad:	inc    esp
  424cae:	pop    esp
  424caf:	shl    DWORD PTR [eax+eiz*2],cl
  424cb2:	mov    esp,0xf49a1b47
  424cb7:	jle    0x424d21
  424cb9:	add    eax,ebp
  424cbb:	mov    bh,0x31
  424cbd:	xor    bh,BYTE PTR [ecx]
  424cbf:	fidiv  WORD PTR [edx-0x1]
  424cc2:	rcl    BYTE PTR [esi],cl
  424cc4:	xchg   ebx,eax
  424cc5:	xchg   DWORD PTR [edx],edx
  424cc7:	test   eax,0x369b9c8b
  424ccc:	dec    edx
  424ccd:	or     eax,0x4a29d672
  424cd2:	fld    TBYTE PTR [edi+0x1f]
  424cd5:	cwde   
  424cd6:	jb     0x424c5e
  424cd8:	faddp  st(7),st
  424cda:	pop    esi
  424cdb:	aam    0xfd
  424cdd:	sub    BYTE PTR [eax+0x1e],cl
  424ce0:	ins    DWORD PTR es:[edi],dx
  424ce1:	and    ah,BYTE PTR [edi+0x127201a1]
  424ce7:	cmp    al,0x21
  424ce9:	test   eax,0xc27e3579
  424cee:	jmp    0x7dbb81fa
  424cf3:	cmp    DWORD PTR [ebx+0x1b],ebp
  424cf6:	inc    ecx
  424cf7:	add    DWORD PTR cs:[esi+esi*2],0x1d
  424cfc:	jne    0x424cdd
  424cfe:	cs inc cx
  424d01:	aam    0xa1
  424d03:	les    ebx,FWORD PTR [ecx+0x7292713]
  424d09:	fs push esp
  424d0b:	and    al,0x11
  424d0d:	pop    ebp
  424d0e:	pop    eax
  424d0f:	sahf   
  424d10:	jmp    0x424d1d
  424d12:	outs   dx,DWORD PTR ds:[esi]
  424d13:	stos   BYTE PTR es:[edi],al
  424d14:	cmp    bh,0xc6
  424d17:	rol    al,1
  424d19:	(bad)  
  424d1a:	sbb    DWORD PTR [ecx],esp
  424d1c:	les    esi,FWORD PTR [edi+0x7a]
  424d1f:	inc    BYTE PTR [ebx-0x1821c078]
  424d25:	jl     0x424d2b
  424d27:	inc    DWORD PTR cs:[esi]
  424d2a:	jo     0x424cef
  424d2c:	adc    cl,bl
  424d2e:	sbb    al,0x3
  424d30:	xchg   esp,eax
  424d31:	call   0x18d46744
  424d36:	neg    BYTE PTR [eax+0x4ed3a86c]
  424d3c:	pop    edi
  424d3d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424d3e:	sub    dl,dh
  424d40:	pop    ss
  424d41:	pop    edx
  424d42:	ror    BYTE PTR [esi+0x789cab36],0xc8
  424d49:	dec    esi
  424d4a:	(bad)  
  424d4b:	hlt    
  424d4c:	(bad)  
  424d4d:	and    BYTE PTR [esi+ebp*1],0xe1
  424d51:	test   bh,bl
  424d53:	sbb    BYTE PTR [ebp-0x71],bh
  424d56:	pop    eax
  424d57:	ror    DWORD PTR [edx+0xc],0x28
  424d5b:	gs call 0x911b:0xb0f0e972
  424d63:	sub    eax,0x4853f64d
  424d68:	pop    ds
  424d69:	mov    ebx,0xc0ba4d64
  424d6e:	sbb    BYTE PTR [edi],ah
  424d70:	ret    
  424d71:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424d72:	aad    0xa6
  424d74:	push   0x7d4fa34b
  424d79:	add    BYTE PTR [ecx+0x762f030e],0xb8
  424d80:	jo     0x424d3f
  424d82:	jno    0x424db1
  424d84:	out    dx,eax
  424d85:	pop    eax
  424d86:	sbb    DWORD PTR [ebx],esp
  424d88:	cmp    BYTE PTR [edx-0x17],dh
  424d8b:	adc    bh,dl
  424d8d:	add    al,0x2f
  424d8f:	xchg   BYTE PTR [ecx+0xb],dl
  424d92:	jecxz  0x424dea
  424d94:	xor    BYTE PTR [edi-0x6eda9bc3],bl
  424d9a:	mov    dl,0x18
  424d9c:	xchg   esp,eax
  424d9d:	or     ch,BYTE PTR [ebx]
  424d9f:	cmp    eax,0x6544afd9
  424da4:	adc    eax,0x10c097cf
  424da9:	push   ecx
  424daa:	ret    0x7f33
  424dad:	dec    ebx
  424dae:	(bad)  
  424daf:	cs stos DWORD PTR es:[edi],eax
  424db1:	mov    esi,0x76a43b2
  424db6:	aas    
  424db7:	div    dl
  424db9:	mov    esi,0x437853c2
  424dbe:	out    0x7e,al
  424dc0:	inc    ecx
  424dc1:	je     0x424dff
  424dc3:	leave  
  424dc4:	rcr    eax,0x39
  424dc7:	or     eax,0x73b97b87
  424dcc:	imul   ebp,DWORD PTR [edi-0x31],0x6410ff84
  424dd3:	dec    edx
  424dd4:	pop    DWORD PTR [ebx-0x3518154d]
  424dda:	out    dx,eax
  424ddb:	jnp    0x424e5a
  424ddd:	retf   0x34a9
  424de0:	(bad)  
  424de1:	fsubp  st(3),st
  424de3:	xchg   ecx,eax
  424de4:	imul   eax,DWORD PTR [esi+0x71],0x6e
  424de8:	inc    ebx
  424de9:	(bad)  
  424dea:	in     al,dx
  424deb:	jg     0x424e05
  424ded:	sbb    eax,DWORD PTR gs:[esi+0x35d6e90d]
  424df4:	mov    bh,al
  424df6:	sbb    edi,edx
  424df8:	loopne 0x424dcb
  424dfa:	cmp    esi,DWORD PTR [edx-0x57]
  424dfd:	and    ecx,DWORD PTR [esp+edi*2-0x12]
  424e01:	adc    DWORD PTR [esi+0x2b4759c9],0xffffffbd
  424e08:	sub    bh,BYTE PTR [ebx]
  424e0a:	dec    ecx
  424e0b:	bound  esi,QWORD PTR [ebx+0x31]
  424e0e:	cs mov ah,0x80
  424e11:	mov    dh,BYTE PTR [edx+0x795f805a]
  424e17:	scas   al,BYTE PTR es:[edi]
  424e18:	sbb    dh,BYTE PTR [eax+0x1140d6e1]
  424e1e:	or     edx,DWORD PTR [ebp+edi*1+0x54f102ff]
  424e25:	xor    al,0xe9
  424e27:	(bad)  
  424e28:	adc    eax,0x79b12647
  424e2d:	mov    ebx,0x7629d8f0
  424e32:	jne    0x424eab
  424e34:	cmp    esp,edi
  424e36:	lahf   
  424e37:	mov    ebx,DWORD PTR [esi-0x3950ddd9]
  424e3d:	outs   dx,BYTE PTR ds:[esi]
  424e3e:	pop    ebx
  424e3f:	scas   eax,DWORD PTR es:[edi]
  424e40:	aam    0x9
  424e42:	push   eax
  424e43:	xchg   ecx,eax
  424e44:	inc    ebx
  424e45:	mov    dh,0x6f
  424e47:	jmp    0x424e57
  424e49:	mov    bl,0xc7
  424e4b:	dec    ebx
  424e4c:	xchg   BYTE PTR [edi-0x59],dl
  424e4f:	popa   
  424e50:	push   es
  424e51:	fidivr DWORD PTR [ebp+0x33]
  424e54:	xchg   edx,eax
  424e55:	xor    DWORD PTR [ebx-0x2],0xf2d1ef93
  424e5c:	add    bh,BYTE PTR [ebp-0x49193844]
  424e62:	aas    
  424e63:	pop    eax
  424e64:	lods   al,BYTE PTR ds:[esi]
  424e65:	adc    al,0xb2
  424e67:	add    bh,BYTE PTR [esp+ecx*2]
  424e6a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424e6b:	dec    ebx
  424e6c:	and    esi,DWORD PTR [ebx-0x40f09c0]
  424e72:	fidivr WORD PTR [edx]
  424e74:	inc    esp
  424e75:	pop    ds
  424e76:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424e77:	imul   ecx,DWORD PTR [edx-0x4e4c35b9],0xfffffff2
  424e7e:	call   0x9922bb74
  424e83:	pop    esp
  424e84:	fidivr WORD PTR [ebx+0x3dbb39e9]
  424e8a:	mov    esp,0xbd524d6f
  424e8f:	sbb    BYTE PTR [ebx+ebp*1],bl
  424e92:	jl     0x424e77
  424e94:	jle    0x424e29
  424e96:	out    dx,eax
  424e97:	daa    
  424e98:	and    BYTE PTR [ecx+0x63],dh
  424e9b:	xor    esp,0xffffff8d
  424e9e:	and    dh,BYTE PTR ds:0xff9615c0
  424ea4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  424ea5:	loope  0x424e98
  424ea7:	push   eax
  424ea8:	mov    ecx,0xc1f6c90d
  424ead:	loop   0x424eee
  424eaf:	xor    al,0x9c
  424eb1:	push   ecx
  424eb2:	jno    0x424e92
  424eb4:	jecxz  0x424ebd
  424eb6:	xchg   edx,eax
  424eb7:	leave  
  424eb8:	push   ds
  424eb9:	test   BYTE PTR [ebp+0x3a],0xef
  424ebd:	stos   DWORD PTR es:[edi],eax
  424ebe:	sub    DWORD PTR [eax],ebp
  424ec0:	jne    0x424eae
  424ec2:	sti    
  424ec3:	xchg   ecx,eax
  424ec4:	inc    ebx
  424ec5:	pop    ss
  424ec6:	add    eax,0xde378ec2
  424ecb:	lock pop esp
  424ecd:	xchg   esi,ecx
  424ecf:	mov    eax,0xdb87a918
  424ed4:	sub    eax,DWORD PTR [eax+0x49a514b5]
  424eda:	cmp    dh,BYTE PTR [eax+0x198335df]
  424ee0:	dec    esp
  424ee1:	fld    QWORD PTR [edi*4-0x4f9f8054]
  424ee8:	mov    al,0xc4
  424eea:	mov    cl,0x83
  424eec:	push   eax
  424eed:	jle    0x424f5c
  424eef:	xor    dl,cl
  424ef1:	jb     0x424f36
  424ef3:	sub    BYTE PTR [eax],ch
  424ef5:	out    0x3f,al
  424ef7:	inc    edi
  424ef8:	adc    dl,al
  424efa:	jmp    0x424f68
  424efc:	ss (bad) 
  424eff:	lahf   
  424f00:	cli    
  424f01:	stos   BYTE PTR es:[edi],al
  424f02:	or     edi,DWORD PTR [eax]
  424f04:	outs   dx,DWORD PTR ds:[esi]
  424f05:	mov    al,0x4d
  424f07:	jae    0x424e8d
  424f09:	dec    edi
  424f0a:	jl     0x424f4b
  424f0c:	nop
  424f0d:	int3   
  424f0e:	lahf   
  424f0f:	or     edx,DWORD PTR [edx]
  424f11:	outs   dx,BYTE PTR ds:[esi]
  424f12:	mov    ebx,0xfa5cf316
  424f17:	sbb    ebx,ebx
  424f19:	in     eax,0x38
  424f1b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  424f1c:	adc    edi,esp
  424f1e:	call   FWORD PTR [esi+0x7b]
  424f21:	mov    ds:0x6f8a0d6c,al
  424f26:	sbb    dl,0xa6
  424f29:	cld    
  424f2a:	scas   eax,DWORD PTR es:[edi]
  424f2b:	(bad)  
  424f2c:	lahf   
  424f2d:	ret    0x778a
  424f30:	aaa    
  424f31:	cmc    
  424f32:	cmp    ebx,esi
  424f34:	mov    al,0xdc
  424f36:	sbb    ebx,DWORD PTR [edi-0x58]
  424f39:	leave  
  424f3a:	sub    BYTE PTR [esi+0x7265cc40],dl
  424f40:	repz cmp eax,0x6df60783
  424f46:	aad    0xd7
  424f48:	ds in  al,dx
  424f4a:	cmp    BYTE PTR [edx],ah
  424f4c:	push   ds
  424f4d:	inc    esp
  424f4e:	mov    edi,0xb6e819b0
  424f53:	inc    ebp
  424f54:	or     BYTE PTR [esi-0x72],0x20
  424f58:	repnz inc edx
  424f5a:	jno    0x424f51
  424f5c:	ficomp WORD PTR [edx+0x62]
  424f5f:	fiadd  DWORD PTR [ebx]
  424f61:	(bad)  
  424f62:	fisttp WORD PTR [ebx+ebx*1-0x1b2e6e04]
  424f69:	cld    
  424f6a:	(bad)  
  424f6b:	mov    edx,0x82fbcf80
  424f70:	mov    dh,0x4d
  424f72:	sbb    BYTE PTR [edi-0x4e],al
  424f75:	int    0xd4
  424f77:	mov    ds:0xb20e50a6,al
  424f7c:	push   eax
  424f7d:	fimul  DWORD PTR [ebx]
  424f7f:	xlat   BYTE PTR ds:[ebx]
  424f80:	jmp    0x6add:0x6458a56c
  424f87:	enter  0xd7c,0x6d
  424f8b:	les    esi,FWORD PTR [ecx+ebp*4-0x5195e626]
  424f92:	sbb    al,0x32
  424f94:	mov    dh,BYTE PTR [ecx-0x304ef799]
  424f9a:	jge    0x425010
  424f9c:	sbb    al,0xf7
  424f9e:	bound  esi,QWORD PTR [esp+ebx*2-0x521fc45]
  424fa5:	je     0x424f37
  424fa7:	mov    ecx,DWORD PTR [eax-0x167dd030]
  424fad:	dec    ebx
  424fae:	imul   eax,DWORD PTR [ebx],0x75
  424fb1:	sahf   
  424fb2:	les    edx,FWORD PTR [ebx+0x18]
  424fb5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  424fb6:	ins    BYTE PTR es:[edi],dx
  424fb7:	cmp    eax,0x8440188b
  424fbc:	test   al,0x65
  424fbe:	in     eax,0xf3
  424fc0:	pop    ecx
  424fc1:	xchg   ecx,eax
  424fc2:	xchg   ebp,eax
  424fc3:	inc    ecx
  424fc4:	jmp    0x424fa8
  424fc6:	sbb    DWORD PTR ss:[eax-0x1b],eax
  424fca:	jge    0x425009
  424fcc:	stos   BYTE PTR es:[edi],al
  424fcd:	adc    bh,BYTE PTR [edx-0x6373026]
  424fd3:	mov    DWORD PTR [esi-0x19532165],eax
  424fd9:	inc    edi
  424fda:	(bad)  
  424fdb:	ret    0x71af
  424fde:	xchg   esp,eax
  424fe0:	das    
  424fe1:	bound  esi,QWORD PTR [ebx-0x68]
  424fe4:	xchg   edx,eax
  424fe5:	jecxz  0x424f94
  424fe7:	fist   WORD PTR [ebp-0x5e]
  424fea:	test   al,0x23
  424fec:	jne    0x425068
  424fee:	adc    BYTE PTR [eax+0x3],0x73
  424ff2:	mov    ah,0x52
  424ff4:	sub    eax,0x28898a1
  424ff9:	cmp    DWORD PTR [edi],0xffffffea
  424ffc:	cmp    dh,bl
  424ffe:	imul   esp,DWORD PTR [edx+0x7357939c],0x79
  425005:	pop    edx
  425006:	inc    edi
  425007:	cmp    dl,BYTE PTR [ecx-0x2dae48c4]
  42500d:	sbb    BYTE PTR [ebx+0x7e],cl
  425010:	daa    
  425011:	sbb    dl,bh
  425013:	jle    0x424fb7
  425015:	mov    eax,DWORD PTR [edi+0x560d3ea9]
  42501b:	dec    ebx
  42501c:	cdq    
  42501d:	stc    
  42501e:	cmp    eax,0x88e8cb13
  425023:	ret    0xe984
  425026:	fisttp DWORD PTR [ebp+eax*2+0x2083a810]
  42502d:	sub    BYTE PTR [esi-0x6212aff2],ah
  425033:	in     al,0x7d
  425035:	test   BYTE PTR [ecx+esi*4],al
  425038:	inc    ebx
  425039:	xlat   BYTE PTR ds:[ebx]
  42503a:	cmp    DWORD PTR [edx+0x2b],0xffffffbd
  42503e:	cld    
  42503f:	into   
  425040:	mov    eax,ds:0xa175ea64
  425045:	in     ax,dx
  425047:	push   es
  425048:	in     al,0xe9
  42504a:	scas   al,BYTE PTR es:[edi]
  42504b:	aam    0xaf
  42504d:	int3   
  42504e:	retf   
  42504f:	xchg   edi,eax
  425050:	cli    
  425051:	jae    0x42501f
  425053:	(bad)  [eax]
  425055:	adc    al,0x86
  425057:	xor    dh,ch
  425059:	test   al,0x15
  42505b:	jne    0x42500c
  42505d:	cdq    
  42505e:	sub    eax,0x441f4dd4
  425063:	cmp    ebp,DWORD PTR [edx]
  425065:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  425066:	inc    ebp
  425067:	mov    dh,BYTE PTR [esi+edi*4-0x7e]
  42506b:	or     ebp,DWORD PTR [edi]
  42506d:	scas   al,BYTE PTR es:[edi]
  42506e:	mov    ds,ebp
  425070:	ficomp WORD PTR [esi+0x9999c03]
  425076:	adc    edi,DWORD PTR [ebx+0x4b]
  425079:	mov    ebp,ebp
  42507b:	dec    ecx
  42507c:	ins    BYTE PTR es:[edi],dx
  42507d:	mov    ebp,0x74b5fe66
  425082:	ficom  WORD PTR [edx-0x48]
  425085:	xchg   esp,eax
  425086:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  425087:	std    
  425088:	dec    ebp
  425089:	test   eax,0x5dd77723
  42508e:	adc    al,0x55
  425090:	data16 shr BYTE PTR [ebx-0x24],1
  425094:	jo     0x425026
  425096:	mov    dl,0x16
  425098:	out    0xaa,al
  42509a:	fs (bad) 
  42509c:	push   edx
  42509d:	pushf  
  42509e:	test   BYTE PTR [eax+edx*4-0x5fc54b03],ch
  4250a5:	push   es
  4250a6:	cmp    DWORD PTR [ebx],esp
  4250a8:	aas    
  4250a9:	pop    ecx
  4250aa:	inc    ecx
  4250ab:	push   ebx
  4250ac:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4250ad:	pop    ss
  4250ae:	sar    BYTE PTR [ebx+0xe],cl
  4250b1:	inc    esi
  4250b2:	cmp    eax,0x2cfc5819
  4250b7:	inc    ebp
  4250b8:	xor    bl,ch
  4250ba:	data16 mov BYTE PTR [edx+0x58],0xb2
  4250bf:	cmp    BYTE PTR [ebp+0x5c2cabd8],cl
  4250c5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4250c6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4250c7:	sub    ecx,ecx
  4250c9:	pushf  
  4250ca:	test   al,0x1
  4250cc:	pop    edi
  4250cd:	sar    bh,1
  4250cf:	push   0x1b
  4250d1:	popa   
  4250d2:	fnstsw WORD PTR ds:0x91fa5bee
  4250d8:	out    0xdd,eax
  4250da:	stc    
  4250db:	mov    ds:0x9f40a38a,al
  4250e0:	fimul  DWORD PTR [ecx]
  4250e2:	div    DWORD PTR [eax+0x4c]
  4250e5:	imul   edi,DWORD PTR [esi],0xffffffff
  4250e8:	cmp    al,BYTE PTR [ecx-0x1b109fbf]
  4250ee:	dec    esi
  4250ef:	test   al,0xe8
  4250f1:	fst    QWORD PTR [edi]
  4250f3:	push   0x826b642e
  4250f8:	cmp    DWORD PTR [ecx],0x1f
  4250fb:	cmp    BYTE PTR [ecx],al
  4250fd:	inc    esp
  4250fe:	xchg   ebx,eax
  4250ff:	push   0x67
  425101:	push   esi
  425102:	rcl    edi,1
  425104:	test   al,0x35
  425106:	or     DWORD PTR [eax+ebx*1+0x41],0x63
  42510b:	hlt    
  42510c:	xor    eax,0xbe387457
  425111:	mov    edx,0x13572b48
  425116:	rcl    DWORD PTR [edi-0x74],cl
  425119:	xlat   BYTE PTR ds:[ebx]
  42511a:	ret    
  42511b:	cdq    
  42511c:	dec    edi
  42511d:	mov    dl,0xf4
  42511f:	mov    BYTE PTR [eax],ch
  425121:	mov    esi,0x9482fbf7
  425126:	hlt    
  425127:	cld    
  425128:	sbb    eax,0x20a5a85a
  42512d:	ins    DWORD PTR es:[edi],dx
  42512e:	daa    
  42512f:	push   0xffffffb6
  425131:	and    ecx,0x8dcb0a26
  425137:	aad    0x80
  425139:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42513a:	jge    0x425161
  42513c:	push   ecx
  42513d:	in     al,dx
  42513e:	ss js  0x425168
  425141:	adc    eax,0x9a51b1c4
  425146:	mov    edi,0xf5557bce
  42514b:	pop    es
  42514c:	ret    0xcdb5
  42514f:	jmp    0xd833:0xcc5f1b17
  425156:	ins    BYTE PTR es:[edi],dx
  425157:	pop    es
  425158:	jle    0x42513b
  42515a:	sbb    ebp,ecx
  42515c:	push   0xffffffee
  42515e:	mov    ?,WORD PTR [ecx-0x27]
  425161:	(bad)  
  425162:	(bad)  
  425163:	mov    ebx,0x9e440944
  425168:	mov    bh,ah
  42516a:	icebp  
  42516b:	jnp    0x4251e4
  42516d:	push   ds
  42516e:	fsub   st(6),st
  425170:	sahf   
  425171:	rcl    DWORD PTR [ebx-0x20],1
  425174:	push   edx
  425175:	(bad)  [edx]
  425177:	xor    al,0xfc
  425179:	les    edx,FWORD PTR [edi+eiz*2]
  42517c:	adc    ebp,DWORD PTR [eax+ebp*4-0x25128dc7]
  425183:	cmp    BYTE PTR [ebx+0x216e86fb],al
  425189:	jge    0x4251fc
  42518b:	inc    ecx
  42518c:	mov    ecx,0x5e218998
  425191:	ret    
  425192:	and    edi,DWORD PTR [ebx+0x1cfda90b]
  425198:	stos   BYTE PTR es:[edi],al
  425199:	cs (bad) 
  42519b:	scas   eax,DWORD PTR es:[edi]
  42519c:	stos   BYTE PTR es:[edi],al
  42519d:	(bad)  
  42519e:	pop    ds
  42519f:	push   cs
  4251a0:	xlat   BYTE PTR ds:[ebx]
  4251a1:	idiv   ah
  4251a3:	dec    edi
  4251a4:	xacquire xchg BYTE PTR [esi],bh
  4251a7:	sub    al,0x47
  4251a9:	test   al,0x14
  4251ab:	out    dx,eax
  4251ac:	popa   
  4251ad:	mov    cl,0x1f
  4251af:	fadd   DWORD PTR [ebx*4+0x643e0d60]
  4251b6:	stos   DWORD PTR es:[edi],eax
  4251b7:	pop    DWORD PTR [edx]
  4251b9:	sub    eax,0xfda1e928
  4251be:	in     eax,dx
  4251bf:	int    0x95
  4251c1:	mov    edi,0x3ddc9b85
  4251c6:	cmp    BYTE PTR [esi+0x3cf24a71],0x32
  4251cd:	pop    eax
  4251ce:	cld    
  4251cf:	sub    al,0xc3
  4251d1:	lods   al,BYTE PTR ds:[esi]
  4251d2:	pop    ds
  4251d3:	or     eax,0x288d5a1b
  4251d8:	cmp    edi,DWORD PTR [ecx+0x41]
  4251db:	dec    ebx
  4251dc:	test   cl,0xd
  4251df:	fmulp  st(2),st
  4251e1:	data16 jg 0x425252
  4251e4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4251e5:	mov    eax,0x39846c61
  4251ea:	ja     0x425191
  4251ec:	iret   
  4251ed:	mov    dh,0xd8
  4251ef:	popf   
  4251f0:	lods   eax,DWORD PTR ds:[esi]
  4251f1:	add    bl,BYTE PTR [esi+edi*2+0x7f]
  4251f5:	loopne 0x425245
  4251f7:	lds    ebx,FWORD PTR ds:0xd0ef5de8
  4251fd:	jg     0x4251aa
  4251ff:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  425200:	push   0x2cd154a6
  425205:	sar    edi,1
  425207:	pop    esp
  425208:	stos   DWORD PTR es:[edi],eax
  425209:	jge    0x4251f7
  42520b:	test   al,dh
  42520d:	addr16 cdq 
  42520f:	cwde   
  425210:	mov    bl,0x13
  425212:	outs   dx,BYTE PTR es:[esi]
  425214:	mov    ah,BYTE PTR [edx]
  425216:	enter  0x2678,0x97
  42521a:	rcl    ebx,1
  42521c:	sbb    esp,DWORD PTR [esi-0x16e72813]
  425222:	retf   0xbfe0
  425225:	loope  0x425215
  425227:	jg     0x4251bc
  425229:	gs das 
  42522b:	lahf   
  42522c:	shr    eax,0xb8
  42522f:	lods   al,BYTE PTR ds:[esi]
  425230:	loop   0x4251ea
  425232:	or     edx,DWORD PTR [ebp+0x3f]
  425235:	fisttp WORD PTR [edi]
  425237:	mov    ch,BYTE PTR [eax+eax*8]
  42523a:	inc    eax
  42523b:	push   ecx
  42523c:	inc    ebp
  42523d:	aam    0x93
  42523f:	daa    
  425240:	add    DWORD PTR [eax],esi
  425242:	arpl   WORD PTR [edi-0x2aee1960],bx
  425248:	dec    edx
  42524a:	jne    0x42522c
  42524c:	add    bh,ch
  42524e:	mov    dh,0xd9
  425250:	ret    0x75e4
  425253:	jb     0x425254
  425255:	xchg   ebx,eax
  425256:	xchg   esi,eax
  425257:	mov    ds,WORD PTR [edx+0x7f2cbbc9]
  42525d:	stos   BYTE PTR es:[edi],al
  42525e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42525f:	push   edi
  425260:	or     al,0x33
  425262:	cld    
  425263:	or     BYTE PTR [eax+0x45766f14],bl
  425269:	repz inc edx
  42526b:	push   es
  42526c:	adc    esi,DWORD PTR [esi-0x7f]
  42526f:	ret    
  425270:	fs nop
  425272:	inc    ebx
  425274:	mov    bh,0x8f
  425276:	loop   0x4252e1
  425278:	and    eax,0xb5d53611
  42527d:	xchg   esi,eax
  42527e:	call   0xfa5bf6ce
  425283:	jne    0x42522a
  425285:	push   ds
  425286:	sti    
  425287:	mov    ebp,0xff906eb6
  42528c:	bound  edi,QWORD PTR [esi-0x6d]
  42528f:	sub    dh,BYTE PTR [ecx]
  425291:	mov    ch,0xb7
  425293:	adc    al,0xb
  425295:	test   eax,0xf00ac64e
  42529a:	inc    esi
  42529b:	cmp    eax,0x5f195de2
  4252a0:	fst    QWORD PTR [ecx]
  4252a2:	or     bl,ch
  4252a4:	aad    0x8d
  4252a6:	cmp    esp,ebp
  4252a8:	ret    
  4252a9:	xchg   esp,eax
  4252aa:	and    al,0xfc
  4252ac:	shr    eax,1
  4252ae:	(bad)  
  4252af:	xor    eax,0xe0ca668d
  4252b4:	nop
  4252b5:	pop    esp
  4252b6:	cli    
  4252b7:	fst    QWORD PTR [ebx]
  4252b9:	idiv   DWORD PTR ds:0xd1c7e40f
  4252bf:	mov    eax,ds:0x7cc5c26
  4252c4:	repz jge 0x425336
  4252c7:	pop    ds
  4252c8:	nop
  4252c9:	pop    eax
  4252ca:	and    al,0x2f
  4252cc:	jmp    0x4252f0
  4252ce:	clc    
  4252cf:	and    eax,0x4241f0bf
  4252d4:	loope  0x425303
  4252d6:	dec    ebx
  4252d7:	sahf   
  4252d8:	and    edx,0xd58cba33
  4252de:	aam    0x7b
  4252e0:	pop    edi
  4252e1:	adc    BYTE PTR [ebp-0x55],bh
  4252e4:	and    DWORD PTR [ebp+ebx*2-0x7],esp
  4252e8:	retf   0xfc7d
  4252eb:	mov    ebp,0x2d27793e
  4252f0:	es sub al,0x20
  4252f3:	mov    eax,0xc2b072c2
  4252f8:	xchg   ebx,eax
  4252f9:	sub    ecx,ebp
  4252fb:	call   0xf72e0253
  425300:	(bad)  
  425301:	call   0x29c9:0x3a7cbafd
  425308:	pop    edx
  425309:	out    0x2c,al
  42530b:	je     0x42528f
  42530d:	test   al,0x79
  42530f:	and    DWORD PTR [edx+esi*4],edx
  425312:	dec    eax
  425313:	cli    
  425314:	push   ss
  425315:	sub    al,BYTE PTR [edx]
  425317:	mov    cl,0xf8
  425319:	mov    al,0x54
  42531b:	test   eax,0x9dca00f2
  425320:	pop    edi
  425321:	fcmovnb st,st(6)
  425323:	dec    ebx
  425324:	fsub   DWORD PTR [edi+edx*8-0x3e]
  425328:	dec    eax
  425329:	xlat   BYTE PTR ds:[ebx]
  42532a:	xchg   ebp,eax
  42532b:	push   cs
  42532c:	pop    cx
  42532e:	jb     0x4252fb
  425330:	push   edx
  425331:	hlt    
  425332:	or     ebp,DWORD PTR [edx]
  425334:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  425335:	inc    edx
  425336:	xor    eax,0xd2003f84
  42533b:	loop   0x425389
  42533d:	sar    DWORD PTR [esi+0x1bcf416c],1
  425343:	jmp    DWORD PTR [ecx+ebx*1]
  425346:	inc    esi
  425347:	xchg   ebx,eax
  425348:	(bad)  
  425349:	mov    al,ds:0x9696bc6c
  42534e:	inc    BYTE PTR [ecx-0x432709cc]
  425354:	jmp    0x1263:0x76823427
  42535b:	push   0x3181fba8
  425360:	sub    DWORD PTR [ebp+0x31],0x6e
  425364:	push   0x8
  425366:	mov    bl,0xbb
  425368:	(bad)  
  425369:	out    0x6a,eax
  42536b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42536c:	pop    ebx
  42536d:	mov    ebx,0xff29f5f5
  425372:	mov    WORD PTR ds:0x7b670ede,gs
  425378:	dec    edx
  425379:	push   edx
  42537a:	cmp    DWORD PTR [eax],edi
  42537c:	cdq    
  42537d:	ds adc eax,0x9ac8b7f7
  425383:	loope  0x42530b
  425385:	sub    edx,DWORD PTR [ebp-0x19]
  425388:	ret    
  425389:	dec    edi
  42538a:	push   cs
  42538b:	mov    eax,ds:0x45ba73ce
  425390:	push   ebx
  425391:	jae    0x425409
  425393:	sahf   
  425394:	add    al,0xa7
  425396:	mov    DWORD PTR [edi],esi
  425398:	xchg   edx,eax
  425399:	pop    esp
  42539a:	jl     0x425358
  42539c:	fsub   st,st(7)
  42539e:	xlat   BYTE PTR ds:[ebx]
  42539f:	pop    edi
  4253a0:	fbld   TBYTE PTR [ebx+0x71316630]
  4253a6:	add    DWORD PTR [esi-0x57],0xbb837aba
  4253ad:	jbe    0x42541a
  4253af:	mov    eax,0x6fe9cc7
  4253b4:	(bad)  
  4253b5:	loope  0x425408
  4253b7:	add    al,0x59
  4253b9:	scas   al,BYTE PTR es:[edi]
  4253ba:	or     DWORD PTR [ebp+0x5a],esp
  4253bd:	test   al,0x2c
  4253bf:	fst    QWORD PTR [esi-0x7]
  4253c2:	cdq    
  4253c3:	or     edx,ecx
  4253c5:	stc    
  4253c6:	push   ss
  4253c7:	es leave 
  4253c9:	bound  ebp,QWORD PTR [ebp-0x67]
  4253cc:	scas   al,BYTE PTR es:[edi]
  4253cd:	lock cld 
  4253cf:	nop
  4253d0:	pop    esp
  4253d1:	dec    ecx
  4253d2:	sub    ah,BYTE PTR cs:[eax]
  4253d5:	mul    DWORD PTR es:[ebp+0x7b]
  4253d9:	push   eax
  4253da:	leave  
  4253db:	stos   BYTE PTR es:[edi],al
  4253dc:	loope  0x425411
  4253de:	test   eax,0x81173a8a
  4253e3:	mov    cs,WORD PTR gs:[ebx-0x78f187d2]
  4253ea:	xchg   esp,eax
  4253eb:	adc    DWORD PTR [edx-0x6eea5fa4],eax
  4253f1:	jmp    ebx
  4253f3:	call   0x6171:0xe0a1821b
  4253fa:	add    ebx,DWORD PTR [bx-0x4b]
  4253fe:	arpl   WORD PTR [ebp-0x4a],di
  425401:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  425402:	jmp    0x42539b
  425404:	daa    
  425405:	das    
  425406:	jge    0x4253cd
  425408:	jns    0x4253e2
  42540a:	and    eax,DWORD PTR [ecx-0x7f]
  42540d:	mov    DWORD PTR [ebx-0x99bf1ba],ecx
  425413:	xor    DWORD PTR [eax],esp
  425415:	and    ch,BYTE PTR [edx]
  425417:	fst    DWORD PTR [ebp-0x17792bd]
  42541d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42541e:	push   cs
  42541f:	sbb    ax,0x9fee
  425423:	adc    DWORD PTR [ecx-0x6],0xffffffd8
  425427:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  425428:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  425429:	mov    cl,0x2f
  42542b:	and    al,0x45
  42542d:	or     BYTE PTR [esi-0x47d5e739],ah
  425433:	jne    0x4253d2
  425435:	cmp    ebx,DWORD PTR [edx-0x54]
  425438:	popa   
  425439:	push   0x68e118c9
  42543e:	dec    ebp
  42543f:	lahf   
  425440:	mov    al,ds:0xb8054704
  425445:	cmp    BYTE PTR [eax+0x36],ah
  425448:	cli    
  425449:	pusha  
  42544a:	in     al,0x29
  42544c:	lea    edx,[edx-0x60088fb1]
  425452:	push   ecx
  425453:	mov    ecx,0xb11188a4
  425458:	mov    BYTE PTR [ebp-0x58b50de9],al
  42545e:	fsubrp st(6),st
  425460:	out    dx,al
  425461:	xchg   ecx,eax
  425462:	mov    ecx,0x7b962985
  425467:	push   ss
  425468:	sbb    bl,0xb6
  42546b:	addr16 mov cl,0xe6
  42546e:	sbb    BYTE PTR [eax-0x7c],al
  425471:	push   es
  425472:	stc    
  425473:	xchg   DWORD PTR [edi+0x121f1976],ebp
  425479:	push   cs
  42547a:	mov    eax,ds:0xa1d2401
  42547f:	out    0x98,al
  425481:	scas   al,BYTE PTR es:[edi]
  425482:	or     al,0x85
  425484:	mov    edx,0xc66f084f
  425489:	out    0xef,eax
  42548b:	sar    BYTE PTR [edx-0x1417af36],cl
  425491:	iret   
  425492:	adc    ebx,DWORD PTR [edx-0x430f9064]
  425498:	stc    
  425499:	xchg   ecx,eax
  42549a:	mov    bl,0x68
  42549c:	xlat   BYTE PTR ds:[ebx]
  42549d:	rol    BYTE PTR [esi*2-0x410aa80b],1
  4254a4:	lea    ebx,[ebx+0x50]
  4254a7:	mov    eax,0x51450ace
  4254ac:	dec    esp
  4254ad:	int    0x31
  4254af:	push   cs
  4254b0:	jno    0x425450
  4254b2:	pop    ebp
  4254b3:	daa    
  4254b4:	adc    dh,BYTE PTR [edi+0x258818cd]
  4254ba:	push   eax
  4254bb:	inc    esp
  4254bc:	and    eax,0x68c59512
  4254c1:	sbb    eax,0xd169b67a
  4254c6:	add    eax,0x6e0677c6
  4254cb:	(bad)  
  4254cc:	jg     0x425464
  4254ce:	adc    dh,cl
  4254d0:	lock pop eax
  4254d2:	pop    ds
  4254d3:	(bad)  
  4254d4:	(bad)  
  4254d5:	fcmovnb st,st(7)
  4254d7:	fldcw  WORD PTR [eax]
  4254d9:	mov    edx,0xc75bfd2c
  4254de:	add    BYTE PTR [edx+edi*1],dh
  4254e1:	sub    eax,0xffb1a13c
  4254e6:	loope  0x42551e
  4254e8:	push   0xffffffbe
  4254ea:	push   ecx
  4254eb:	sbb    BYTE PTR [esi+eax*2],ah
  4254ee:	mov    dl,0xd
  4254f0:	push   ss
  4254f1:	or     DWORD PTR [ecx+0x7],edx
  4254f4:	add    DWORD PTR [ecx],esp
  4254f6:	and    DWORD PTR [eax-0x2600abc2],0xfffffff1
  4254fd:	inc    ebx
  4254fe:	sub    BYTE PTR [ebx],bh
  425500:	mov    BYTE PTR [esi],0xc6
  425503:	jbe    0x425546
  425505:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  425506:	sub    bh,bh
  425508:	jo     0x425492
  42550a:	and    ah,BYTE PTR [eax+0x1ffd261f]
  425510:	jmp    0x9d10:0xc62d14a7
  425517:	mov    ah,0xc7
  425519:	cmp    DWORD PTR [ebx-0x7f],eax
  42551c:	jnp    0x4254ab
  42551e:	fiadd  DWORD PTR [edi-0x3b]
  425521:	inc    edx
  425522:	(bad)  
  425523:	cld    
  425524:	scas   eax,DWORD PTR es:[edi]
  425525:	ror    bl,cl
  425527:	cmp    DWORD PTR [esi],esp
  425529:	mul    BYTE PTR [ebx-0x37385211]
  42552f:	pop    esp
  425530:	imul   edx,DWORD PTR [ecx-0x76b01ec5],0xf3cecb3f
  42553a:	add    dh,BYTE PTR [ecx]
  42553c:	pop    eax
  42553d:	es jo  0x4255b7
  425540:	pop    edx
  425541:	shl    DWORD PTR [edx-0x4a6da131],1
  425547:	mov    cs:0xedb0759,al
  42554d:	mov    ds:0x317321f0,eax
  425552:	xchg   DWORD PTR [edi-0x5ee6bafc],esi
  425558:	or     eax,0x83b3ce60
  42555d:	fidivr WORD PTR [esi-0x1b]
  425560:	in     al,0x4f
  425562:	jo     0x4254fa
  425564:	test   DWORD PTR [edi+0x7e65eed7],esp
  42556a:	xchg   ebp,eax
  42556b:	bnd jmp 0x42556a
  42556e:	xor    BYTE PTR [edi-0xc604a2a],dh
  425574:	test   DWORD PTR [eax+0x46],0x83973d9c
  42557b:	(bad)  
  42557c:	and    ch,ah
  42557e:	or     bl,cl
  425580:	cmovb  ecx,DWORD PTR [esi+0x58]
  425584:	ror    DWORD PTR [ecx+0x5],cl
  425587:	in     al,dx
  425588:	(bad)  
  425589:	jns    0x42554a
  42558b:	dec    edi
  42558c:	or     eax,0x4b9254e6
  425591:	inc    ecx
  425592:	add    esp,esi
  425594:	int    0xbd
  425596:	out    0x1e,al
  425598:	pop    edx
  425599:	dec    ebp
  42559a:	jmp    0x63fb512a
  42559f:	jne    0x425574
  4255a1:	in     al,dx
  4255a2:	jns    0x4255ce
  4255a4:	jmp    0xc509:0x87d2ff42
  4255ab:	imul   DWORD PTR [edi]
  4255ad:	push   ss
  4255ae:	jmp    0xd4202e9a
  4255b3:	imul   edx,DWORD PTR ds:0x33ddde05,0x1f
  4255ba:	aas    
  4255bb:	sub    ebp,ebp
  4255bd:	shl    eax,0xfd
  4255c0:	sub    DWORD PTR [eax-0x4],esi
  4255c3:	les    esp,FWORD PTR [eax]
  4255c5:	bnd jb 0x4255be
  4255c8:	push   es
  4255c9:	cmc    
  4255ca:	adc    al,0x50
  4255cc:	std    
  4255cd:	mov    al,0x7
  4255cf:	pushf  
  4255d0:	loope  0x425576
  4255d2:	and    BYTE PTR [edx-0x21f957c5],cl
  4255d8:	rol    DWORD PTR [edi-0x7b793064],cl
  4255de:	pop    ebx
  4255df:	or     al,0x47
  4255e1:	mov    esp,0xfc5a298f
  4255e6:	pop    ebx
  4255e7:	pusha  
  4255e8:	mov    eax,0xb8c15736
  4255ed:	cmp    esi,DWORD PTR [esi+edi*2-0x63]
  4255f1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4255f2:	mov    edi,0x2b85c570
  4255f7:	fnsave [ecx]
  4255f9:	mov    cl,0x0
  4255fb:	xchg   ebx,eax
  4255fc:	jno    0x4255a6
  4255fe:	xchg   edi,eax
  4255ff:	jg     0x42558f
  425601:	adc    DWORD PTR [edi+0x66c52d0c],edx
  425607:	jg     0x42562e
  425609:	sbb    eax,0xf325716f
  42560e:	sbb    al,0x8e
  425610:	sbb    ecx,DWORD PTR [edx+0x7e78abc9]
  425616:	sti    
  425617:	xchg   edx,eax
  425618:	jb     0x42564a
  42561a:	pop    esi
  42561b:	pop    es
  42561c:	cmp    eax,esp
  42561e:	leave  
  42561f:	mov    bl,0xb1
  425621:	in     al,dx
  425622:	add    ebp,DWORD PTR [esi]
  425624:	mov    ch,0xa7
  425626:	jp     0x425665
  425628:	adc    eax,0x5a0ffc9a
  42562d:	add    DWORD PTR [eax-0x7219f15a],0x740de65e
  425637:	call   0x72d3:0x4f5f09b6
  42563e:	int3   
  42563f:	sar    DWORD PTR gs:0xfd15f057,0xdf
  425647:	jae    0x4255d1
  425649:	ds div esp
  42564c:	lock neg BYTE PTR [edx-0x265d5f3c]
  425653:	xchg   ecx,eax
  425654:	xor    ecx,DWORD PTR [ebp-0x7c343d64]
  42565a:	inc    ebp
  42565b:	in     eax,dx
  42565c:	inc    edx
  42565d:	lea    edx,[ebx+eiz*4-0xa]
  425661:	push   0x20
  425663:	call   0x37a771be
  425668:	call   0xa4aa7015
  42566d:	repnz push edx
  42566f:	test   BYTE PTR [edi],dh
  425671:	imul   BYTE PTR [eax+0x48]
  425674:	mov    ds:0x23e39843,al
  425679:	jo     0x4256c3
  42567b:	and    al,0x85
  42567d:	outs   dx,BYTE PTR ds:[esi]
  42567e:	xor    eax,0x12886de5
  425683:	pop    eax
  425684:	jl     0x4256cd
  425686:	cmp    BYTE PTR [esi],bl
  425688:	jp     0x4256f9
  42568a:	ja     0x425682
  42568c:	dec    BYTE PTR [edx]
  42568e:	loope  0x425685
  425690:	xchg   edi,eax
  425691:	sub    ebx,esi
  425693:	in     al,dx
  425694:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  425695:	sbb    eax,0x1013e29
  42569a:	cmp    ch,ch
  42569c:	lods   eax,DWORD PTR ds:[esi]
  42569d:	hlt    
  42569e:	mov    ecx,0x136b9535
  4256a3:	daa    
  4256a4:	stos   BYTE PTR es:[edi],al
  4256a5:	fisub  DWORD PTR [ebx+0x6f]
  4256a8:	push   cs
  4256a9:	or     DWORD PTR [esp+ebp*8-0x2c],0x2ab898f9
  4256b1:	dec    eax
  4256b2:	test   al,0xaf
  4256b4:	in     eax,dx
  4256b5:	cmp    BYTE PTR [ebx+0x62532638],0x14
  4256bc:	mov    edx,DWORD PTR [ebx-0x693be030]
  4256c2:	std    
  4256c3:	mov    ds:0x31657afe,al
  4256c8:	mov    ebx,0x6d9ffe50
  4256cd:	xor    BYTE PTR [edx],ah
  4256cf:	imul   ebx,DWORD PTR [esi+0x39],0xffffff9a
  4256d3:	popa   
  4256d4:	pusha  
  4256d5:	and    esi,DWORD PTR [esi+0x6b6c9e13]
  4256db:	pop    ecx
  4256dc:	pop    esp
  4256dd:	clc    
  4256de:	or     BYTE PTR [eax-0x42a513cf],al
  4256e4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4256e5:	iret   
  4256e6:	iret   
  4256e7:	push   ebp
  4256e8:	shr    BYTE PTR [ecx-0x4751ab5a],1
  4256ee:	ss add dl,BYTE PTR cs:[esp+ebp*2]
  4256f3:	popa   
  4256f4:	dec    ebx
  4256f5:	push   ebp
  4256f6:	cmp    eax,0x121a3020
  4256fb:	push   0xa421d616
  425700:	adc    ah,BYTE PTR [eax+0x572b6155]
  425706:	aaa    
  425707:	mov    cl,0x2e
  425709:	bound  esp,QWORD PTR [ecx+0x5b3fd8f4]
  42570f:	pusha  
  425710:	aam    0xba
  425712:	push   eax
  425713:	pop    ss
  425714:	ret    
  425715:	ror    esi,1
  425717:	push   ebp
  425718:	adc    edi,DWORD PTR [eax+eax*4-0x66]
  42571c:	cmc    
  42571d:	scas   al,BYTE PTR es:[edi]
  42571e:	dec    esp
  42571f:	rcl    dh,cl
  425721:	lock cmp dh,dh
  425724:	lahf   
  425725:	mov    ch,BYTE PTR [ebp+0x6]
  425728:	fsub   QWORD PTR [ebx+0x78]
  42572b:	ret    
  42572c:	pop    edi
  42572d:	ror    BYTE PTR [ebp+esi*8+0x1bb346b2],cl
  425734:	sahf   
  425735:	cmp    DWORD PTR [ebx-0x2b],esp
  425738:	shr    DWORD PTR [edx+0x7609efc1],0xcc
  42573f:	xchg   ebx,eax
  425740:	pop    ss
  425741:	enter  0xdb4b,0x93
  425745:	xor    bh,BYTE PTR [esi]
  425747:	pop    ds
  425748:	mul    ecx
  42574a:	lods   eax,DWORD PTR ds:[esi]
  42574b:	jecxz  0x425750
  42574d:	adc    BYTE PTR [esi+0x46291915],ah
  425753:	mov    ebx,0xddfa8e82
  425758:	mov    ebp,0xd30d37dd
  42575d:	pop    ds
  42575e:	int    0x71
  425760:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  425761:	retf   
  425762:	aad    0x9e
  425764:	mov    ebx,0xe997c210
  425769:	sbb    eax,0x5d4db88d
  42576e:	mov    ebx,DWORD PTR [esi]
  425770:	adc    bh,BYTE PTR [edi+eax*2-0x692d3b20]
  425777:	in     al,0x90
  425779:	push   esp
  42577a:	xchg   esi,edx
  42577c:	jo     0x425767
  42577e:	xchg   ecx,eax
  42577f:	gs std 
  425781:	mov    cl,0xd2
  425783:	pop    es
  425784:	test   BYTE PTR [eax],bh
  425786:	adc    al,al
  425788:	dec    DWORD PTR [edx+0x4a]
  42578b:	stc    
  42578c:	mov    al,ds:0xe79f8a6a
  425791:	mov    bh,0xa6
  425793:	xchg   ecx,eax
  425794:	cli    
  425795:	iret   
  425796:	cdq    
  425797:	les    esi,FWORD PTR [eax+0x5e44d045]
  42579d:	jae    0x425793
  42579f:	mov    bh,0x85
  4257a1:	and    esi,DWORD PTR ds:0x49e3b2cd
  4257a7:	xor    bh,BYTE PTR [edi+0x17a0a207]
  4257ad:	inc    eax
  4257ae:	pop    es
  4257af:	ins    DWORD PTR es:[edi],dx
  4257b0:	imul   ebp,DWORD PTR [ecx-0x5],0x62
  4257b4:	and    ecx,esi
  4257b6:	jp     0x425738
  4257b8:	mov    gs,WORD PTR [eax+edx*8+0x3b]
  4257bc:	mov    bl,0xea
  4257be:	pop    ss
  4257bf:	xchg   BYTE PTR ds:0x29349826,dl
  4257c5:	ret    
  4257c6:	sub    bh,BYTE PTR [edi+0x38]
  4257c9:	or     al,0x2a
  4257cb:	mov    al,0x62
  4257cd:	js     0x42584a
  4257cf:	pop    esp
  4257d0:	mov    DWORD PTR ds:0x412a84f2,ecx
  4257d6:	xor    dh,al
  4257d8:	pop    edi
  4257d9:	das    
  4257da:	cmp    eax,0x3bd42dac
  4257df:	inc    ecx
  4257e0:	push   0x5f4cddd5
  4257e5:	rol    DWORD PTR [eax],1
  4257e7:	mov    BYTE PTR [edx],al
  4257e9:	ds aas 
  4257eb:	enter  0x207f,0xf5
  4257ef:	retf   0xd097
  4257f2:	dec    esi
  4257f3:	push   ebx
  4257f4:	loop   0x425845
  4257f6:	mov    bh,0xb8
  4257f8:	out    0x5c,eax
  4257fa:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4257fb:	rol    DWORD PTR [ebx+0x3c1e0c66],1
  425801:	lds    esi,FWORD PTR [ecx+0x577f6223]
  425807:	jne    0x425835
  425809:	mov    ebx,0x33a50aee
  42580e:	repnz dec ebp
  425810:	js     0x42584a
  425812:	lods   al,BYTE PTR ds:[esi]
  425813:	aam    0xe6
  425815:	xor    ecx,edx
  425817:	add    eax,0x316ccf95
  42581c:	stc    
  42581d:	jle    0x42585a
  42581f:	xor    ecx,esi
  425821:	cmc    
  425822:	loop   0x425886
  425824:	std    
  425825:	fsub   DWORD PTR [edi+0x2c1e7bfb]
  42582b:	fimul  DWORD PTR [esp+eiz*4-0x2e98364a]
  425832:	xchg   ebp,eax
  425833:	cmp    ch,al
  425835:	int    0xa2
  425837:	scas   al,BYTE PTR es:[edi]
  425838:	inc    esi
  425839:	mov    dh,0x74
  42583b:	dec    ecx
  42583c:	jno    0x4257f3
  42583e:	mov    al,BYTE PTR [ecx-0x625907e7]
  425844:	test   BYTE PTR [esi+0x6d1b210c],bl
  42584a:	push   esp
  42584b:	int3   
  42584c:	mov    ah,0x99
  42584e:	ins    DWORD PTR es:[edi],dx
  42584f:	pop    ss
  425850:	rcr    DWORD PTR [edi],1
  425852:	sti    
  425853:	jecxz  0x42583c
  425855:	ds ins DWORD PTR es:[edi],dx
  425857:	nop
  425858:	jl     0x425895
  42585a:	cmp    al,0x68
  42585c:	cmp    ch,BYTE PTR [ebp+0x0]
  42585f:	jle    0x4258da
  425861:	call   0x5d0a:0x6201a7f0
  425868:	dec    ebx
  425869:	in     al,0xa3
  42586b:	and    al,0x5f
  42586d:	push   edx
  42586e:	mov    al,ds:0xe385c918
  425873:	dec    esi
  425874:	imul   eax,DWORD PTR [ebx+0x79083857],0x799d67dd
  42587e:	pop    esp
  42587f:	aas    
  425880:	mov    cl,0x16
  425882:	pop    edx
  425883:	ins    DWORD PTR es:[edi],dx
  425884:	jle    0x425901
  425886:	cmp    DWORD PTR [edi+0x1d],ecx
  425889:	inc    edx
  42588a:	mov    edi,0xb42ee5de
  42588f:	(bad)
  425892:	leave  
  425893:	jne    0x425890
  425895:	mov    ds:0xe71b5117,eax
  42589a:	rcr    BYTE PTR [edi+edx*1+0x41],1
  42589e:	and    edi,DWORD PTR [eax+0x30]
  4258a1:	mov    edi,0x5496503
  4258a6:	fisttp WORD PTR [eax-0x3f]
  4258a9:	mov    esi,0x7d2b5739
  4258ae:	test   eax,0xda7828ca
  4258b3:	scas   al,BYTE PTR es:[edi]
  4258b4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4258b5:	add    ah,BYTE PTR [ebx+edi*1]
  4258b8:	inc    ebp
  4258b9:	(bad)  
  4258ba:	call   0x2854:0x3292054
  4258c1:	data16 add dh,al
  4258c4:	xchg   BYTE PTR [ebx+0x51],ch
  4258c7:	add    al,0x79
  4258c9:	pop    esp
  4258ca:	leave  
  4258cb:	inc    ebp
  4258cc:	nop
  4258cd:	sar    BYTE PTR [esp+edx*2],0x0
  4258d1:	ds xor ah,dh
  4258d4:	lds    ecx,FWORD PTR [ebx+eiz*1-0x63]
  4258d8:	sbb    BYTE PTR [ebp-0x4a],ah
  4258db:	mov    esi,0xf1b9154f
  4258e0:	push   esp
  4258e1:	pop    eax
  4258e2:	call   0xa5526733
  4258e7:	shl    BYTE PTR [bp+si-0x2e],0x6b
  4258ec:	sub    ebx,edi
  4258ee:	gs aaa 
  4258f0:	fbld   TBYTE PTR [ebx+ebp*1+0x49]
  4258f4:	pop    edx
  4258f5:	cdq    
  4258f6:	stos   BYTE PTR es:[edi],al
  4258f7:	or     BYTE PTR [edi+0xdf4d4a2],0xb
  4258fe:	lock fisub WORD PTR [ebx-0x2d31126a]
  425905:	and    esp,ecx
  425907:	scas   eax,DWORD PTR es:[edi]
  425908:	call   DWORD PTR ds:0x108375e3
  42590e:	sub    edx,DWORD PTR [edx+0x5c]
  425911:	sub    BYTE PTR [ecx-0x9],0x9b
  425915:	int3   
  425916:	popa   
  425917:	rcr    BYTE PTR [ebp-0x1a],1
  42591a:	aas    
  42591b:	adc    dl,BYTE PTR [esi-0x31]
  42591e:	add    bl,al
  425920:	mul    DWORD PTR [edi]
  425922:	pop    ebp
  425923:	mov    al,ds:0x8e324176
  425929:	and    BYTE PTR [ebx+esi*2-0x50],bh
  42592d:	clc    
  42592e:	in     eax,dx
  42592f:	inc    eax
  425930:	fiadd  DWORD PTR [edi+0x7437b42b]
  425936:	xchg   BYTE PTR [edx+0x20],dh
  425939:	div    BYTE PTR ss:[ecx+ecx*4+0x3c588d2c]
  425941:	aas    
  425942:	and    ebx,ecx
  425944:	sub    al,0x13
  425946:	dec    edx
  425947:	dec    ebp
  425948:	jmp    DWORD PTR [edx]
  42594a:	(bad)  
  42594b:	and    eax,0x7323d60b
  425950:	xor    BYTE PTR [ebp+edi*8-0x339c54e8],dl
  425957:	outs   dx,DWORD PTR ds:[esi]
  425958:	fisubr WORD PTR [ebp+0x6d21f5f8]
  42595e:	cmp    ebx,0xc067a07c
  425964:	sahf   
  425965:	daa    
  425966:	(bad)  
  425967:	sbb    dh,ah
  425969:	pop    esp
  42596a:	jno    0x4259e8
  42596c:	adc    bp,WORD PTR [ebp-0x2f13ea60]
  425973:	push   0x3a
  425975:	xchg   DWORD PTR [ebx+0x2979ae3c],ebx
  42597b:	jl     0x4259f4
  42597d:	push   cs
  42597e:	pushf  
  42597f:	mov    ah,0xb1
  425981:	lods   eax,DWORD PTR ds:[esi]
  425982:	dec    edi
  425983:	inc    ebp
  425984:	dec    esi
  425985:	in     eax,0x35
  425987:	mov    ds:0x1aa1eb46,eax
  42598c:	stc    
  42598d:	xchg   ecx,eax
  42598e:	xlat   BYTE PTR ds:[ebx]
  42598f:	hlt    
  425990:	(bad)  
  425991:	cmc    
  425992:	inc    esp
  425993:	ds dec esp
  425995:	and    al,0x4a
  425997:	pusha  
  425998:	sbb    ch,BYTE PTR [ebp-0x7d2a224]
  42599e:	lods   eax,DWORD PTR ds:[esi]
  42599f:	daa    
  4259a0:	jno    0x425923
  4259a2:	dec    edi
  4259a3:	push   0x3327e4a0
  4259a8:	xor    DWORD PTR [eax+0x32],ebx
  4259ab:	(bad)  
  4259ac:	popa   
  4259ad:	pop    ebp
  4259ae:	daa    
  4259af:	mov    edi,0x22b9eaa5
  4259b4:	or     ebp,DWORD PTR [ebx-0x4b2049f]
  4259ba:	int3   
  4259bb:	and    esp,ebx
  4259bd:	rcr    DWORD PTR [esi-0x4a],cl
  4259c0:	aas    
  4259c1:	or     cl,bl
  4259c3:	int3   
  4259c4:	dec    edx
  4259c5:	xor    esi,DWORD PTR ds:0x41081638
  4259cb:	loopne 0x4259f4
  4259cd:	sbb    DWORD PTR [eax-0x71],edx
  4259d0:	lea    ebx,[eax+eax*8+0x12]
  4259d4:	jmp    0x4259cb
  4259d6:	xchg   ebx,eax
  4259d7:	fisubr DWORD PTR [ebx+0x2aab8f12]
  4259dd:	lds    edx,FWORD PTR [edx+edx*4]
  4259e0:	icebp  
  4259e1:	inc    esi
  4259e2:	xchg   BYTE PTR [edx+0x3c539594],ch
  4259e8:	iret   
  4259e9:	bound  ebx,QWORD PTR [edi+0x71]
  4259ec:	call   0x7dd95a68
  4259f1:	jge    0x4259b4
  4259f3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4259f4:	push   ds
  4259f5:	inc    edx
  4259f6:	mov    dl,0x15
  4259f8:	ins    BYTE PTR es:[edi],dx
  4259f9:	mov    edi,0xf441f5af
  4259fe:	mov    eax,?
  425a00:	mov    dl,0xe0
  425a02:	test   al,0xf2
  425a04:	in     al,0xfc
  425a06:	gs cli 
  425a08:	pusha  
  425a09:	iret   
  425a0a:	mov    bh,0xf1
  425a0c:	stos   DWORD PTR es:[edi],eax
  425a0d:	repnz push edx
  425a0f:	mov    ebp,0xa17b6588
  425a14:	iret   
  425a15:	or     DWORD PTR [ebx],0xffffffd0
  425a18:	ret    
  425a19:	leave  
  425a1a:	leave  
  425a1b:	shl    ebx,0x23
  425a1e:	xchg   esi,eax
  425a1f:	sar    BYTE PTR [ecx-0x24d8508d],0x4a
  425a26:	xchg   ecx,eax
  425a27:	out    dx,al
  425a28:	push   ecx
  425a29:	push   0x5e10afe4
  425a2e:	xchg   esp,eax
  425a2f:	push   ecx
  425a30:	test   BYTE PTR [edi+0x36b83e0],cl
  425a36:	dec    edx
  425a37:	fstp   QWORD PTR [bx+si]
  425a3a:	hlt    
  425a3b:	pop    ecx
  425a3c:	xlat   BYTE PTR ds:[ebx]
  425a3d:	xchg   esp,eax
  425a3e:	stos   DWORD PTR es:[edi],eax
  425a3f:	push   dx
  425a41:	fldlg2 
  425a43:	jmp    0x2311:0xd61c5eae
  425a4a:	call   0x9ff91861
  425a4f:	mov    WORD PTR [eax*8+0x5b667165],fs
  425a56:	jns    0x425a42
  425a58:	shl    DWORD PTR [edx-0x2dc9ad1e],0x54
  425a5f:	sbb    eax,0x98b43925
  425a64:	mov    DWORD PTR [eax+0x5aab8352],ebp
  425a6a:	cmp    esp,DWORD PTR [edx+0x78]
  425a6d:	(bad)  
  425a6e:	ss hlt 
  425a70:	pop    ebp
  425a71:	out    dx,eax
  425a72:	cmp    al,BYTE PTR [edx]
  425a74:	test   eax,0xb091132f
  425a79:	iret   
  425a7a:	jg     0x425a2d
  425a7c:	mov    eax,0x871fecfe
  425a81:	sub    DWORD PTR [ecx-0x7e8a5ff7],ebp
  425a87:	mov    al,0xa2
  425a89:	adc    eax,0x11cceba5
  425a8e:	inc    edx
  425a8f:	sbb    DWORD PTR [ebx+0x4f],0x76
  425a93:	or     al,0x7f
  425a95:	cdq    
  425a96:	cwde   
  425a97:	outs   dx,BYTE PTR ds:[esi]
  425a98:	mov    dh,0x5
  425a9a:	retf   
  425a9b:	lahf   
  425a9c:	sub    al,0x3f
  425a9e:	inc    ebx
  425a9f:	xor    BYTE PTR [esi-0x4f],cl
  425aa2:	call   0x8906fcdc
  425aa7:	in     eax,dx
  425aa8:	(bad)  
  425aa9:	fld    st(4)
  425aab:	jp     0x425a78
  425aad:	data16 (bad) 
  425ab1:	sub    cl,BYTE PTR [edx+0x72b92fdb]
  425ab7:	aad    0xa2
  425ab9:	int    0x31
  425abb:	popf   
  425abc:	pop    esi
  425abd:	ds mov dl,bh
  425ac0:	pop    eax
  425ac1:	push   0xbe36df9e
  425ac6:	std    
  425ac7:	dec    esi
  425ac8:	push   ebx
  425ac9:	out    0x33,eax
  425acb:	iret   
  425acc:	mov    bh,0x7e
  425ace:	cmp    cl,dl
  425ad0:	push   0x1e
  425ad2:	sub    DWORD PTR [esi],ebp
  425ad4:	in     eax,0x87
  425ad6:	sub    BYTE PTR [esi-0x31db326e],dh
  425adc:	cmp    esp,DWORD PTR [ebp+0x5059b118]
  425ae2:	and    DWORD PTR [esi-0x7f],0x13
  425ae6:	and    ah,BYTE PTR [eax+ebp*1]
  425ae9:	inc    eax
  425aea:	clc    
  425aeb:	adc    DWORD PTR [edi+0x30],edx
  425aee:	jp     0x425a7f
  425af0:	jb     0x425b59
  425af2:	cld    
  425af3:	xchg   DWORD PTR [esi+eax*8-0x68718d6f],eax
  425afa:	adc    BYTE PTR [ecx-0x67a51e01],bl
  425b00:	and    dl,BYTE PTR [ecx]
  425b02:	xchg   ecx,eax
  425b03:	outs   dx,DWORD PTR ds:[esi]
  425b04:	jb     0x425acd
  425b06:	in     al,0x85
  425b08:	(bad)  
  425b09:	pop    eax
  425b0a:	fcomp  st(1)
  425b0c:	cmp    BYTE PTR [ebx-0x79a55dd5],0xdf
  425b13:	mov    esi,0xa9d61033
  425b18:	cwde   
  425b19:	sbb    al,bh
  425b1b:	cdq    
  425b1c:	adc    DWORD PTR [edi],edi
  425b1e:	add    ebp,edx
  425b20:	mov    bh,0xbe
  425b22:	xor    ebx,DWORD PTR [edi+0x7d4dfdf4]
  425b28:	pusha  
  425b29:	rcl    dl,1
  425b2b:	(bad)  
  425b2c:	xchg   esp,eax
  425b2d:	repnz mov ebp,0x4a72c09a
  425b33:	les    esp,FWORD PTR [esp+ecx*4+0x48]
  425b37:	into   
  425b38:	mov    ebp,edi
  425b3a:	inc    edx
  425b3b:	mov    edx,0x2f332d54
  425b40:	aas    
  425b41:	sti    
  425b42:	leave  
  425b43:	lods   al,BYTE PTR ds:[esi]
  425b44:	ins    DWORD PTR es:[edi],dx
  425b45:	scas   eax,DWORD PTR es:[edi]
  425b46:	and    ebp,DWORD PTR [esi-0x4f]
  425b49:	pop    ss
  425b4a:	or     ebx,DWORD PTR [eax+edx*2]
  425b4d:	retf   0xd792
  425b50:	retf   0xf637
  425b53:	jle    0x425b40
  425b55:	bound  esp,QWORD PTR [ebp+0x18d79af2]
  425b5b:	lods   al,BYTE PTR ds:[esi]
  425b5c:	and    al,0x33
  425b5e:	mov    esp,0x706d759a
  425b63:	mov    cl,0x99
  425b65:	mov    cl,0xb4
  425b67:	pop    DWORD PTR [edi]
  425b69:	push   edx
  425b6a:	sahf   
  425b6b:	cmp    DWORD PTR [ecx+0x508c4dc4],edi
  425b71:	or     al,0x51
  425b73:	pop    ds
  425b74:	xchg   edx,eax
  425b75:	pop    eax
  425b76:	ins    DWORD PTR es:[edi],dx
  425b77:	les    eax,FWORD PTR [eax-0x1f98f71a]
  425b7d:	fs or  bh,0xb6
  425b81:	bound  ecx,QWORD PTR ds:0x8d078e76
  425b87:	xchg   esi,eax
  425b88:	mov    edx,0x7d6299a0
  425b8d:	mov    ds:0x918a6022,al
  425b92:	or     BYTE PTR [edi],dh
  425b94:	xchg   ebp,eax
  425b95:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  425b96:	call   0xaac2:0x6536200b
  425b9d:	jge    0x425c0d
  425b9f:	add    BYTE PTR ds:0x32660194,cl
  425ba5:	dec    ebp
  425ba6:	sbb    BYTE PTR [ebp+0x3ef31ea9],bh
  425bac:	outs   dx,DWORD PTR ds:[esi]
  425bad:	xchg   esp,eax
  425bae:	push   esi
  425baf:	lea    ebx,[esi+0x294fef9e]
  425bb5:	pop    edi
  425bb6:	xchg   ebx,eax
  425bb7:	shl    DWORD PTR [esi-0x31],cl
  425bba:	push   ecx
  425bbb:	mov    dh,ah
  425bbd:	fidiv  DWORD PTR [edx]
  425bbf:	sbb    BYTE PTR [edi-0x18c8cc9a],cl
  425bc5:	mov    ecx,0xaf0e4f1b
  425bca:	dec    edi
  425bcb:	psrld  mm3,QWORD PTR [esp+eax*1+0x70]
  425bd0:	and    edi,DWORD PTR ds:0xf6d2df69
  425bd6:	das    
  425bd7:	pop    ds
  425bd8:	push   ss
  425bd9:	push   edx
  425bda:	sbb    eax,0xc752a860
  425bdf:	xor    dh,0x2d
  425be2:	lahf   
  425be3:	push   ecx
  425be4:	cmp    DWORD PTR [ebx-0x44712b9f],edi
  425bea:	jo     0x425c2e
  425bec:	mov    ebx,0xf7f6abdb
  425bf1:	call   DWORD PTR gs:[eax-0x24]
  425bf5:	and    BYTE PTR [esp+edi*4],cl
  425bf8:	mov    ecx,?
  425bfa:	out    dx,al
  425bfb:	mov    bh,0x89
  425bfd:	(bad)  [edx-0x34ea03e4]
  425c03:	gs xchg ecx,esi
  425c06:	test   al,0x23
  425c08:	and    eax,0x7f216dee
  425c0d:	dec    edx
  425c0e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  425c0f:	mov    al,0x3f
  425c11:	xor    BYTE PTR [esi],bl
  425c13:	cmp    ecx,edx
  425c15:	pop    edi
  425c16:	pusha  
  425c17:	add    DWORD PTR [esi-0x6d56bf4e],esp
  425c1d:	imul   ecx,DWORD PTR [edx-0x63],0xffffffcf
  425c21:	fnsave [eax+0x6b2b7714]
  425c27:	les    ebx,FWORD PTR [ebx+0x278eb40]
  425c2d:	retf   
  425c2e:	sbb    BYTE PTR [edi],ch
  425c30:	and    al,0xc
  425c32:	push   cs
  425c33:	mov    eax,0x9783cad0
  425c38:	push   ss
  425c39:	fild   DWORD PTR ds:0x25bc9014
  425c3f:	inc    esi
  425c40:	lods   al,BYTE PTR ds:[esi]
  425c41:	fstp   TBYTE PTR [eax+0x16ccfaf1]
  425c47:	xor    eax,0x649122b5
  425c4c:	loopne 0x425c96
  425c4e:	mov    es,WORD PTR [edx+0x17]
  425c51:	lods   eax,DWORD PTR ds:[esi]
  425c52:	imul   esp,DWORD PTR [ecx+0x67556a70],0x167c20eb
  425c5c:	xchg   esi,eax
  425c5d:	out    dx,al
  425c5e:	test   DWORD PTR [ecx-0x28165819],0xcd91f273
  425c68:	mov    DWORD PTR [edx+edi*1+0x5ebdd901],esi
  425c6f:	mov    ebx,0xee28d447
  425c74:	ret    0x81a4
  425c77:	inc    edx
  425c78:	fld    DWORD PTR [ecx-0x52]
  425c7b:	daa    
  425c7c:	out    0x9b,al
  425c7e:	mov    bl,0x14
  425c80:	and    al,0x9b
  425c82:	xchg   ecx,eax
  425c83:	jne    0x425cad
  425c85:	dec    DWORD PTR [ebp+0x78]
  425c88:	mov    bl,0xcf
  425c8a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  425c8b:	test   al,0xae
  425c8d:	cdq    
  425c8e:	pop    ecx
  425c8f:	retf   
  425c90:	repz cld 
  425c92:	ds icebp 
  425c94:	mov    cl,0xc4
  425c96:	leave  
  425c97:	jo     0x425c6b
  425c99:	pop    esi
  425c9a:	inc    ebx
  425c9b:	outs   dx,DWORD PTR ds:[esi]
  425c9c:	rol    BYTE PTR [ecx+0x73],cl
  425c9f:	shl    cl,cl
  425ca1:	mov    eax,0x70ca6a9b
  425ca6:	add    esi,ecx
  425ca8:	pop    edi
  425ca9:	icebp  
  425caa:	jmp    0x6d9f:0x312815b5
  425cb1:	xor    dh,BYTE PTR [edx+0x7]
  425cb4:	sbb    bh,cl
  425cb6:	and    al,BYTE PTR [esi]
  425cb8:	push   ebp
  425cb9:	and    eax,0x397083e3
  425cbe:	cmp    BYTE PTR [edx+0xe],al
  425cc1:	ret    0xd892
  425cc4:	jb     0x425cae
  425cc6:	push   edx
  425cc7:	nop
  425cc8:	je     0x425c79
  425cca:	cld    
  425ccb:	jae    0x425d23
  425ccd:	mov    al,ds:0xcea3f522
  425cd2:	std    
  425cd3:	hlt    
  425cd4:	in     al,dx
  425cd5:	xor    cl,BYTE PTR [eax+0x1a]
  425cd8:	iret   
  425cd9:	imul   eax,DWORD PTR ds:0xff378ffa,0x72
  425ce0:	jmp    0x425d2d
  425ce2:	or     edi,DWORD PTR [edx+0x24]
  425ce5:	push   esp
  425ce6:	enter  0x79ad,0xb4
  425cea:	jmp    0x425ce9
  425cec:	sbb    DWORD PTR [ecx],esp
  425cee:	pusha  
  425cef:	or     cl,bl
  425cf1:	xor    BYTE PTR [ebx+0x28],cl
  425cf4:	mov    ah,0x55
  425cf6:	nop
  425cf7:	mov    al,ds:0x4ae569b3
  425cfc:	addr16 out 0xd2,al
  425cff:	xchg   ecx,eax
  425d00:	adc    bl,BYTE PTR [ebx]
  425d02:	sbb    eax,0xc529ab8d
  425d07:	cld    
  425d08:	xchg   BYTE PTR [eax],cl
  425d0a:	or     BYTE PTR [edx-0x80],0x14
  425d0e:	adc    ebx,DWORD PTR [ebx+0x66]
  425d11:	sub    BYTE PTR [ecx+0x3c],0xdf
  425d15:	cdq    
  425d16:	jl     0x425cd0
  425d18:	(bad)  
  425d19:	xor    ecx,DWORD PTR ds:[edi+0x19614a1f]
  425d20:	jno    0x425d1f
  425d22:	add    DWORD PTR [edx+esi*8-0x3a86d49e],esp
  425d29:	sbb    dh,BYTE PTR ds:0xe581d42d
  425d2f:	es inc edi
  425d31:	or     edi,DWORD PTR [eax]
  425d33:	fwait
  425d34:	test   ecx,0xfbc96f01
  425d3a:	out    0x55,al
  425d3c:	cli    
  425d3d:	mov    BYTE PTR [edx-0x31a2cef3],bl
  425d43:	mov    bh,0x60
  425d45:	jbe    0x425d08
  425d47:	lds    ecx,FWORD PTR [eax+0x27]
  425d4a:	pop    esp
  425d4b:	add    al,0x44
  425d4d:	bound  esp,QWORD PTR [esi]
  425d4f:	sar    edx,1
  425d51:	jno    0x425cf1
  425d53:	add    eax,0x99fe0fc0
  425d58:	jns    0x425d42
  425d5a:	xor    edx,esp
  425d5c:	mov    ch,0xae
  425d5e:	pusha  
  425d5f:	push   cs
  425d60:	lods   eax,DWORD PTR ds:[esi]
  425d61:	add    DWORD PTR [edi+edi*4],ebx
  425d64:	mov    dl,0xf9
  425d66:	popf   
  425d67:	loope  0x425dd8
  425d69:	jbe    0x425d6d
  425d6b:	outs   dx,DWORD PTR ds:[esi]
  425d6c:	pop    esi
  425d6d:	mov    ss,edx
  425d6f:	cli    
  425d70:	iret   
  425d71:	call   DWORD PTR [ecx+0x59]
  425d74:	stos   BYTE PTR es:[edi],al
  425d75:	aas    
  425d76:	mul    DWORD PTR [edi]
  425d78:	cmp    BYTE PTR [esi+0x7e],dl
  425d7b:	jecxz  0x425cfe
  425d7d:	es pop esi
  425d7f:	push   ecx
  425d80:	repz or esi,esi
  425d83:	test   DWORD PTR ds:0xa2d845db,edi
  425d89:	sahf   
  425d8a:	scas   al,BYTE PTR es:[edi]
  425d8b:	cs inc edi
  425d8d:	ficom  DWORD PTR [ecx-0x333c0cf7]
  425d93:	sub    al,0xe9
  425d95:	xchg   BYTE PTR [ebx+ebx*8],dh
  425d98:	aad    0xfc
  425d9a:	gs jae 0x425e06
  425d9d:	jnp    0x425d3c
  425d9f:	jno    0x425dac
  425da1:	inc    esi
  425da2:	shl    DWORD PTR [edi-0x63],cl
  425da5:	loope  0x425db0
  425da7:	ror    bh,cl
  425da9:	neg    BYTE PTR [ebp+0x65754b25]
  425daf:	fs scas eax,DWORD PTR es:[edi]
  425db1:	jne    0x425d50
  425db3:	jmp    0x425df7
  425db5:	and    esp,ebx
  425db7:	gs pop esi
  425db9:	jle    0x425d3b
  425dbb:	pop    es
  425dbc:	sub    esi,DWORD PTR [ebp+ebx*8+0x5e]
  425dc0:	xchg   esi,eax
  425dc1:	sti    
  425dc2:	lahf   
  425dc3:	xor    DWORD PTR [edx-0x6b58e31f],esi
  425dc9:	fsub   QWORD PTR es:[ecx]
  425dcc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  425dcd:	in     al,dx
  425dce:	mov    ebx,0x77671f57
  425dd3:	mov    edi,DWORD PTR ds:0xe960f231
  425dd9:	cmp    al,0xb2
  425ddb:	push   esi
  425ddc:	add    bl,bl
  425dde:	jo     0x425d72
  425de0:	mov    ebx,ebp
  425de2:	dec    ebp
  425de3:	not    eax
  425de5:	mov    ?,WORD PTR [esi+edx*1+0x5c]
  425de9:	nop
  425dea:	ins    BYTE PTR es:[edi],dx
  425deb:	sbb    ebp,esi
  425ded:	pop    esi
  425dee:	scas   al,BYTE PTR es:[edi]
  425def:	inc    ebp
  425df0:	jl     0x425d87
  425df2:	bound  edx,QWORD PTR [edi]
  425df4:	ins    DWORD PTR es:[edi],dx
  425df5:	mov    ch,0xb3
  425df7:	in     eax,dx
  425df8:	cld    
  425df9:	push   es
  425dfa:	dec    edx
  425dfb:	sbb    ecx,DWORD PTR ds:0x19d140a0
  425e01:	push   edi
  425e02:	adc    DWORD PTR [eax-0x24200073],0xffffffa1
  425e09:	std    
  425e0a:	jmp    0x9bb5:0xad95788
  425e11:	int3   
  425e12:	into   
  425e13:	xor    DWORD PTR [ebx],edi
  425e15:	cmp    cl,BYTE PTR [ebx]
  425e17:	clc    
  425e18:	push   ss
  425e19:	ret    
  425e1a:	test   BYTE PTR [ecx],dh
  425e1c:	jg     0x425de3
  425e1e:	push   es
  425e1f:	jns    0x425dc0
  425e21:	das    
  425e22:	(bad)  
  425e23:	dec    edx
  425e24:	jo     0x425e93
  425e26:	inc    esi
  425e27:	outs   dx,DWORD PTR ds:[esi]
  425e28:	retf   0xce78
  425e2b:	sbb    al,0xd
  425e2d:	mov    ss,WORD PTR [edx]
  425e2f:	sub    esp,DWORD PTR [eax-0x5b8dc60]
  425e35:	sbb    esi,DWORD PTR ds:0xefb59c22
  425e3b:	mov    cs,WORD PTR [esi+ebp*2-0x421f6cc6]
  425e42:	call   0xf5d3:0x7f6169c8
  425e49:	out    0xf5,al
  425e4b:	sbb    dh,BYTE PTR [ecx+0x566c1c5]
  425e51:	push   ss
  425e52:	retf   0xcf85
  425e55:	mov    al,ds:0xfd145c1f
  425e5a:	cmp    eax,0x3d85c3f
  425e5f:	inc    ebp
  425e60:	fnstenv [edx-0x5965e898]
  425e66:	add    BYTE PTR [eax-0x3b],al
  425e69:	mov    dl,0xc6
  425e6b:	xchg   ebp,eax
  425e6c:	ss mov ch,0x9a
  425e6f:	cmovs  eax,DWORD PTR [eax+0x7f643bc4]
  425e76:	ins    DWORD PTR es:[edi],dx
  425e77:	xchg   edx,eax
  425e78:	neg    DWORD PTR [ebp+eiz*4-0x4a]
  425e7c:	(bad)  
  425e7d:	fld    QWORD PTR [ebx-0x6b]
  425e80:	pop    esp
  425e81:	addr16 mov al,0xd3
  425e84:	dec    esi
  425e85:	push   0x2c93a642
  425e8a:	sub    BYTE PTR [edx],0x44
  425e8d:	into   
  425e8e:	push   ds
  425e8f:	lods   al,BYTE PTR ds:[si]
  425e91:	and    BYTE PTR [ecx],0x9e
  425e94:	repnz rol DWORD PTR [ebx],1
  425e97:	jbe    0x425e81
  425e99:	cmp    ebx,DWORD PTR [ebx-0x7bb8ef01]
  425e9f:	popa   
  425ea0:	(bad)  
  425ea1:	and    eax,0x8f640cdc
  425ea6:	outs   dx,DWORD PTR ds:[esi]
  425ea7:	call   0x252f63e2
  425eac:	fsubr  QWORD PTR es:[ecx+0x16743c33]
  425eb3:	pop    es
  425eb4:	sti    
  425eb5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  425eb6:	es rcr eax,1
  425eb9:	je     0x425e49
  425ebb:	xor    BYTE PTR [esi+0x4df489],0xa1
  425ec2:	stos   DWORD PTR es:[edi],eax
  425ec3:	xchg   ecx,eax
  425ec4:	sbb    eax,0xbc0e149a
  425ec9:	cmp    ecx,DWORD PTR [ebp+0x4b]
  425ecc:	scas   eax,DWORD PTR es:[edi]
  425ecd:	daa    
  425ece:	xor    al,0x2a
  425ed0:	retf   0xec7f
  425ed3:	sub    al,0x82
  425ed5:	lahf   
  425ed6:	jo     0x425ed4
  425ed8:	add    DWORD PTR [edi-0x20ba060c],ebx
  425ede:	(bad)  
  425edf:	(bad)  [edi]
  425ee1:	shl    DWORD PTR [edi-0x55],0xcc
  425ee5:	aas    
  425ee6:	scas   al,BYTE PTR es:[edi]
  425ee7:	push   ebp
  425ee8:	sbb    dh,BYTE PTR [ebp+0x75]
  425eeb:	cdq    
  425eec:	pop    eax
  425eed:	imul   esi,DWORD PTR ds:0x4ef4d2bf,0xffffff96
  425ef4:	push   es
  425ef5:	addr16 stc 
  425ef7:	dec    esi
  425ef8:	rol    BYTE PTR [esp+ebx*2-0x732bf074],1
  425eff:	inc    ecx
  425f00:	lock pop esp
  425f02:	retf   
  425f03:	jno    0x425f03
  425f05:	jg     0x425f01
  425f07:	sbb    al,0xba
  425f09:	xlat   BYTE PTR ds:[ebx]
  425f0a:	adc    al,0x75
  425f0c:	js     0x425f67
  425f0e:	ds pop ebp
  425f10:	sub    cl,BYTE PTR [edx+edi*4-0x60]
  425f14:	(bad)  
  425f16:	neg    BYTE PTR [ebx-0x46]
  425f19:	pop    edi
  425f1a:	icebp  
  425f1b:	xchg   ebp,eax
  425f1c:	test   BYTE PTR [edi],0x5d
  425f1f:	adc    DWORD PTR [esi],0x7fe2e13
  425f25:	mov    cl,0xd0
  425f27:	int3   
  425f28:	hlt    
  425f29:	test   eax,0x4157247d
  425f2e:	outs   dx,DWORD PTR ds:[esi]
  425f2f:	(bad)  
  425f30:	loope  0x425f6d
  425f32:	dec    ebx
  425f33:	mov    DWORD PTR [edx+ecx*2+0x3b],edx
  425f37:	lock ret 0x62ce
  425f3b:	adc    DWORD PTR [ecx-0x717e43e1],edi
  425f41:	or     al,0x2d
  425f43:	dec    edi
  425f44:	xor    eax,0x31c29487
  425f49:	dec    esp
  425f4a:	add    al,0x82
  425f4c:	xor    BYTE PTR [ebx],ah
  425f4e:	sbb    ebp,DWORD PTR [ebx]
  425f50:	sbb    si,WORD PTR [edi+0x28]
  425f54:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  425f55:	scas   eax,DWORD PTR es:[edi]
  425f56:	push   edi
  425f57:	arpl   WORD PTR [ebx],sp
  425f59:	jbe    0x425f67
  425f5b:	push   ss
  425f5c:	add    eax,0xbe91404b
  425f61:	adc    ebp,ecx
  425f63:	and    BYTE PTR [edx+edx*8],dl
  425f66:	ins    DWORD PTR es:[edi],dx
  425f67:	in     eax,0x5f
  425f69:	cld    
  425f6a:	xchg   esi,eax
  425f6b:	cld    
  425f6c:	xchg   ecx,eax
  425f6d:	mov    eax,ds:0xa0ca369c
  425f72:	cld    
  425f73:	xlat   BYTE PTR ds:[ebx]
  425f74:	push   ebx
  425f75:	sub    ch,bl
  425f77:	inc    edi
  425f78:	xchg   edi,edx
  425f7a:	and    al,0xe
  425f7c:	push   esi
  425f7d:	sbb    al,0xa8
  425f7f:	cli    
  425f80:	mov    al,0xd4
  425f82:	cdq    
  425f83:	icebp  
  425f84:	pusha  
  425f85:	data16 test BYTE PTR [eax-0x21],0x7e
  425f8a:	fmul   DWORD PTR [ecx]
  425f8c:	or     BYTE PTR [eax],bl
  425f8e:	and    al,0x42
  425f90:	or     al,0xa1
  425f92:	sbb    al,BYTE PTR [edx]
  425f94:	xor    eax,0x40e4040
  425f99:	jne    0x425fdd
  425f9b:	jge    0x425f1e
  425f9d:	(bad)  
  425f9e:	pop    ecx
  425f9f:	mov    eax,ds:0x6a15f06b
  425fa4:	daa    
  425fa5:	jae    0x426006
  425fa7:	and    cl,BYTE PTR [esi-0x100de1c2]
  425fad:	adc    al,0xff
  425faf:	pusha  
  425fb0:	inc    ebx
  425fb1:	mov    ecx,0x94a92a80
  425fb6:	sbb    ebx,DWORD PTR [esi-0x433df0e4]
  425fbc:	mov    dh,0x62
  425fbe:	loop   0x425f92
  425fc0:	lods   eax,DWORD PTR ds:[esi]
  425fc1:	rcr    bh,0xd9
  425fc4:	call   DWORD PTR [eax-0x7689ad6d]
  425fca:	outs   dx,DWORD PTR ds:[esi]
  425fcb:	ins    DWORD PTR es:[edi],dx
  425fcc:	fst    DWORD PTR [ebx+0x76f18da3]
  425fd2:	jge    0x426044
  425fd4:	out    0xc7,eax
  425fd6:	push   esp
  425fd7:	iret   
  425fd8:	adc    eax,0x2ad5fda
  425fdd:	lahf   
  425fde:	jmp    0x2259:0xcf34fc9
  425fe5:	mov    ebp,0x4f5f30ad
  425fea:	fldenv [ecx]
  425fec:	icebp  
  425fed:	mov    esi,0x7a9f8134
  425ff2:	mov    DWORD PTR [ebp+0x4e],ebp
  425ff5:	pop    ebx
  425ff6:	out    dx,al
  425ff7:	sub    eax,0xb6ec6dcc
  425ffc:	or     BYTE PTR [edx+edx*1],cl
  425fff:	push   ds
  426000:	add    eax,0x10be1b02
  426005:	adc    al,al
  426007:	stos   DWORD PTR es:[edi],eax
  426008:	add    cl,BYTE PTR [ebx]
  42600a:	xchg   BYTE PTR [edx],bl
  42600c:	bound  edi,QWORD PTR [edi]
  42600e:	nop
  42600f:	push   es
  426010:	stos   DWORD PTR es:[edi],eax
  426011:	adc    eax,0xbae79166
  426016:	scas   al,BYTE PTR es:[edi]
  426017:	jecxz  0x426041
  426019:	(bad)  
  42601a:	jmp    FWORD PTR [eax+0x63f2f625]
  426020:	cmp    BYTE PTR [edi],0xa6
  426023:	adc    eax,0xfe486c9
  426028:	jbe    0x425fcf
  42602a:	inc    eax
  42602b:	fld    TBYTE PTR [ebx+0x5025c1a5]
  426031:	ror    DWORD PTR [edx+0x480a2f4c],0x11
  426038:	adc    ecx,DWORD PTR [ecx+0x53]
  42603b:	mov    bl,0x6f
  42603d:	push   esp
  42603e:	ret    
  42603f:	imul   ecx,DWORD PTR [edx-0x2cc54879],0xffffffa8
  426046:	mov    esp,DWORD PTR [ebx+0x31]
  426049:	scas   eax,DWORD PTR es:[edi]
  42604a:	sbb    DWORD PTR [ecx+0x50eaee15],ecx
  426050:	jo     0x42604f
  426052:	fistp  DWORD PTR [eax+0x2]
  426055:	leave  
  426056:	sbb    esp,DWORD PTR [eax+0x7fb4dc83]
  42605c:	test   eax,0xc8275628
  426061:	pushf  
  426062:	out    dx,al
  426063:	shl    DWORD PTR [eax-0x30bbb750],1
  426069:	adc    al,0xed
  42606b:	pop    es
  42606c:	mov    ch,0xb5
  42606e:	(bad)  
  42606f:	adc    BYTE PTR [eax-0x1a],ah
  426072:	pop    edi
  426073:	sub    ebx,DWORD PTR [ecx+eax*4+0x4c]
  426077:	sub    eax,0x19fd254a
  42607c:	(bad)  
  42607e:	mov    cl,BYTE PTR [edi-0x34e81017]
  426084:	add    BYTE PTR [ecx+0x5],0xd5
  426088:	jge    0x426107
  42608a:	div    ecx
  42608c:	xchg   edi,eax
  42608d:	dec    esi
  42608e:	imul   eax,DWORD PTR [ecx-0xd],0xe10bbcad
  426095:	xchg   esp,eax
  426096:	mov    cl,0x2
  426098:	xchg   bl,al
  42609a:	push   ebx
  42609b:	inc    edi
  42609c:	push   ebp
  42609d:	addr16 in eax,dx
  42609f:	xchg   edx,eax
  4260a0:	pop    ecx
  4260a1:	adc    al,0x48
  4260a3:	pop    edx
  4260a4:	arpl   WORD PTR [edi+0x4c],di
  4260a7:	adc    ecx,esi
  4260a9:	sti    
  4260aa:	das    
  4260ab:	lods   al,BYTE PTR ds:[esi]
  4260ac:	lock dec edx
  4260ae:	and    al,0xd9
  4260b0:	xchg   esi,eax
  4260b1:	fsubr  QWORD PTR ss:[ebx+0xc3d7dd8]
  4260b8:	shl    DWORD PTR gs:[ebx+ecx*2+0x43ab5e53],cl
  4260c0:	daa    
  4260c1:	rcl    BYTE PTR ds:[eax],0xf4
  4260c5:	fstp   QWORD PTR [ecx]
  4260c7:	sbb    al,0xc8
  4260c9:	push   ebx
  4260ca:	sub    BYTE PTR [edx+0x290aed97],bh
  4260d0:	iret   
  4260d1:	les    ebx,FWORD PTR [ebx+0x40]
  4260d4:	cmc    
  4260d5:	sub    al,0x42
  4260d7:	ins    BYTE PTR es:[edi],dx
  4260d8:	stc    
  4260d9:	es shl al,0x5a
  4260dd:	mov    edi,0xe3b6ce03
  4260e2:	xchg   ecx,eax
  4260e3:	jbe    0x426090
  4260e5:	sub    eax,DWORD PTR [esi]
  4260e7:	sbb    bh,cl
  4260e9:	rcl    DWORD PTR es:[edi-0x7d],1
  4260ed:	xchg   esp,eax
  4260ee:	mov    dl,0x29
  4260f0:	jg     0x42612a
  4260f2:	(bad)  
  4260f3:	(bad)  
  4260f4:	push   esp
  4260f5:	push   edx
  4260f6:	mov    bh,0x5e
  4260f8:	or     DWORD PTR [ebx+0x1fe26ca5],edx
  4260fe:	inc    ebp
  4260ff:	leave  
  426100:	adc    BYTE PTR [edx],bl
  426102:	xor    ch,BYTE PTR [eax+0x6fe6299a]
  426108:	jnp    0x4260df
  42610a:	mov    bl,0xeb
  42610c:	jns    0x4260e0
  42610e:	std    
  42610f:	pop    ss
  426110:	ret    
  426111:	fmul   DWORD PTR [ecx+esi*8]
  426114:	lock inc ebp
  426116:	mov    ch,0xc7
  426118:	or     DWORD PTR [ecx-0x20688725],eax
  42611e:	int3   
  42611f:	and    al,0xc6
  426121:	adc    esp,0xd3e60647
  426127:	jmp    0xd153d300
  42612c:	inc    ebp
  42612d:	ja     0x42614b
  42612f:	enter  0x45af,0x8e
  426133:	or     eax,0x32411847
  426138:	adc    eax,edx
  42613a:	push   ecx
  42613b:	pop    esi
  42613c:	outs   dx,BYTE PTR ds:[esi]
  42613d:	dec    ebx
  42613e:	push   ds
  42613f:	fwait
  426140:	and    ch,BYTE PTR [edi]
  426142:	cmp    edi,edx
  426144:	call   0xd36b2042
  426149:	or     ch,dh
  42614b:	add    DWORD PTR [ebp-0x59],eax
  42614e:	fild   QWORD PTR [edi]
  426150:	test   BYTE PTR [eax-0x75],bh
  426153:	mov    ebx,0x63a3443c
  426158:	pop    ss
  426159:	xor    ebx,ebp
  42615b:	inc    ebx
  42615c:	fadd   QWORD PTR [ebp+0x1a45a826]
  426162:	jecxz  0x426110
  426164:	cs pop es
  426166:	or     DWORD PTR [ecx],0x96d3ed89
  42616c:	and    al,0x97
  42616e:	push   ebx
  42616f:	or     ebp,DWORD PTR [eax]
  426171:	jo     0x4261f2
  426173:	sbb    DWORD PTR [ecx+esi*4+0x6a23da3c],ecx
  42617a:	jo     0x426111
  42617c:	pop    ss
  42617d:	mov    al,0x47
  42617f:	jnp    0x426190
  426181:	les    esi,FWORD PTR [edx+0x8e89841]
  426187:	pusha  
  426188:	cmp    al,0x90
  42618a:	int3   
  42618b:	mov    ds:0xa4ef5df,al
  426190:	sub    DWORD PTR [eax],ecx
  426192:	test   al,0xd1
  426194:	mov    ebp,0xa10a8776
  426199:	pop    edx
  42619a:	scas   eax,DWORD PTR es:[edi]
  42619b:	cmp    BYTE PTR [esi-0x1e],dl
  42619e:	or     BYTE PTR [ebp+0x46],ch
  4261a1:	jno    0x4261eb
  4261a3:	int    0x17
  4261a5:	jb     0x42612f
  4261a7:	inc    ebp
  4261a8:	push   esp
  4261a9:	nop
  4261aa:	scas   eax,DWORD PTR es:[edi]
  4261ab:	push   esp
  4261ac:	sar    ch,cl
  4261ae:	ss jno 0x4261e4
  4261b1:	lock add BYTE PTR ds:0x5728b657,ch
  4261b8:	shl    bl,1
  4261ba:	arpl   WORD PTR [esi],si
  4261bc:	jg     0x426145
  4261be:	inc    ebx
  4261bf:	cmp    BYTE PTR [ebx+0x77],bl
  4261c2:	sub    ecx,DWORD PTR [eax+0x48]
  4261c5:	inc    esp
  4261c6:	and    ch,bh
  4261c8:	aaa    
  4261c9:	jno    0x426150
  4261cb:	test   DWORD PTR [ebp+ebx*2-0x4],0x2e177c89
  4261d3:	call   0x252e:0x6183d9d
  4261da:	mov    al,0x7d
  4261dc:	inc    edi
  4261dd:	mov    DWORD PTR ds:0xd5664a05,esi
  4261e3:	ffreep st(7)
  4261e5:	rcr    BYTE PTR [ebp-0xc],1
  4261e8:	push   esi
  4261e9:	stc    
  4261ea:	cmp    BYTE PTR [esp+ebx*8],bh
  4261ed:	and    ebp,0x648d85ef
  4261f3:	daa    
  4261f4:	pusha  
  4261f5:	mov    al,gs:0xd8b81e25
  4261fb:	xchg   DWORD PTR [eax-0x5a],edi
  4261fe:	stos   DWORD PTR es:[edi],eax
  4261ff:	jg     0x42626f
  426201:	add    dh,BYTE PTR [ebp+0x765854af]
  426207:	cmp    BYTE PTR [edx],ch
  426209:	cmp    al,dh
  42620b:	mov    edi,0xa5393bcb
  426210:	(bad)  
  426211:	xor    BYTE PTR [ecx+0x6ef5995],al
  426217:	dec    ecx
  426218:	into   
  426219:	bound  eax,QWORD PTR [ebp-0x3e]
  42621c:	inc    edi
  42621d:	push   ebx
  42621e:	sub    DWORD PTR ds:0x8a176ed7,0x9e6f2158
  426228:	dec    eax
  426229:	adc    ecx,DWORD PTR [eax+edx*8-0x7e580248]
  426230:	pushf  
  426231:	xor    edx,esp
  426233:	mov    edi,0x93459399
  426238:	(bad)  
  426239:	pusha  
  42623a:	nop
  42623b:	test   al,0x20
  42623d:	sar    DWORD PTR [esi],0x8a
  426240:	in     al,0x5f
  426242:	jne    0x42625a
  426244:	sub    al,0xb3
  426246:	xchg   edx,eax
  426247:	inc    esi
  426248:	mov    bl,0x1c
  42624a:	daa    
  42624b:	std    
  42624c:	iret   
  42624d:	cmp    al,0xa0
  42624f:	imul   edx,DWORD PTR [ebx+0x5de32be5],0x9234bea9
  426259:	and    BYTE PTR [edx],bl
  42625b:	ins    BYTE PTR es:[edi],dx
  42625c:	retf   0x5a07
  42625f:	aas    
  426260:	add    eax,0x49d5daf8
  426265:	test   eax,0x4bce38e
  42626a:	pop    ds
  42626b:	push   ecx
  42626c:	mov    bh,0xb3
  42626e:	or     al,0x41
  426270:	in     al,0xc0
  426272:	pusha  
  426273:	loope  0x42628e
  426275:	cld    
  426276:	cmp    DWORD PTR [ebx+eiz*2],eax
  426279:	jns    0x4262b2
  42627b:	sub    eax,esi
  42627d:	imul   ecx,DWORD PTR [edx+0x7befe1db],0x61
  426284:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  426285:	xor    BYTE PTR [edx-0x71f85e7c],bh
  42628b:	ss mov edi,ecx
  42628e:	in     eax,dx
  42628f:	sbb    eax,0x262811d5
  426294:	leave  
  426295:	call   0xd988adc2
  42629a:	mov    ebx,0xcce9555d
  42629f:	les    eax,FWORD PTR gs:[ebx+0x6f]
  4262a3:	lock outs dx,DWORD PTR ds:[esi]
  4262a5:	fnstsw WORD PTR [esi-0x11773b96]
  4262ab:	daa    
  4262ac:	test   esi,ebp
  4262ae:	xchg   BYTE PTR ds:0x1be70803,dh
  4262b4:	daa    
  4262b5:	test   eax,0x2886561d
  4262ba:	inc    ebp
  4262bb:	push   esp
  4262bc:	pop    ds
  4262bd:	fcomp  QWORD PTR [eax]
  4262bf:	xor    DWORD PTR [eax-0x8ad3fec],eax
  4262c5:	cwde   
  4262c6:	xlat   BYTE PTR ds:[ebx]
  4262c7:	ror    BYTE PTR [edi+0x1813f523],cl
  4262cd:	xor    edi,esi
  4262cf:	outs   dx,BYTE PTR ds:[esi]
  4262d0:	(bad)  
  4262d1:	xlat   BYTE PTR ds:[ebx]
  4262d2:	adc    ah,ah
  4262d4:	mov    eax,0x9ee0ccde
  4262d9:	and    al,BYTE PTR [edi+edx*2-0x18]
  4262dd:	lods   al,BYTE PTR ds:[esi]
  4262de:	int    0x15
  4262e0:	ins    DWORD PTR es:[edi],dx
  4262e1:	je     0x426331
  4262e3:	jmp    0x4262dc
  4262e5:	imul   edx,DWORD PTR [ebx],0x51021d80
  4262eb:	and    edi,esi
  4262ed:	les    esp,FWORD PTR [ecx]
  4262ef:	push   eax
  4262f0:	mov    ch,BYTE PTR [esi+edx*4]
  4262f3:	stc    
  4262f4:	jge    0x426330
  4262f6:	sbb    eax,0x91f3b24d
  4262fb:	pop    esi
  4262fc:	jg     0x426351
  4262fe:	jbe    0x4262f6
  426300:	fcomp  DWORD PTR [eax+edx*2]
  426303:	mov    cl,0xc5
  426305:	loop   0x4262f7
  426307:	jne    0x4262d0
  426309:	jnp    0x42631a
  42630b:	adc    edx,esp
  42630d:	std    
  42630e:	arpl   cx,ax
  426310:	xor    BYTE PTR [ebp+0x69],dl
  426313:	in     al,dx
  426314:	jbe    0x426336
  426316:	xor    al,BYTE PTR [edi+esi*4-0x68]
  42631a:	mov    bl,0xae
  42631c:	push   eax
  42631d:	mov    dl,0x7f
  42631f:	loopne 0x426370
  426321:	sub    eax,0xb2488199
  426326:	jne    0x426382
  426328:	pop    ecx
  426329:	sahf   
  42632a:	mov    ebp,eax
  42632c:	xchg   esi,eax
  42632d:	sub    eax,0xe1e7e285
  426332:	call   0xa325:0x4bccc9cb
  426339:	mov    al,ds:0x6e7ef879
  42633e:	mov    eax,0xb02ec76e
  426343:	loopne 0x426392
  426345:	ins    DWORD PTR es:[edi],dx
  426346:	mov    eax,0x7c025d74
  42634b:	cmp    al,0xd
  42634d:	cdq    
  42634e:	xchg   ebp,eax
  42634f:	shr    ch,0x5e
  426352:	lods   eax,DWORD PTR ds:[esi]
  426353:	and    ah,0xa2
  426356:	adc    esi,DWORD PTR [ebp-0x66]
  426359:	dec    esp
  42635a:	dec    ebx
  42635b:	and    al,0xc2
  42635d:	rcr    BYTE PTR [edx+edx*2+0x3],0x80
  426362:	cmp    dh,0x44
  426365:	enter  0xf6a3,0x6c
  426369:	add    ebx,DWORD PTR [eax]
  42636b:	adc    ebx,DWORD PTR [ecx-0x4d]
  42636e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42636f:	jl     0x42635c
  426371:	int    0x26
  426373:	fisubr DWORD PTR [edi+0x70e44ce2]
  426379:	sbb    edi,DWORD PTR [ebp+0x630c7174]
  42637f:	mov    ds:0x4df5eff7,al
  426384:	addr16 daa 
  426386:	mov    ds:0xa361449b,eax
  42638b:	add    ecx,DWORD PTR [edi+esi*2+0x28]
  42638f:	lahf   
  426390:	or     BYTE PTR [eax+0x34c1554f],bh
  426396:	stos   BYTE PTR es:[edi],al
  426397:	or     BYTE PTR [eax],0x73
  42639a:	fidivr WORD PTR [edx+0xb]
  42639d:	stos   DWORD PTR es:[edi],eax
  42639e:	enter  0x1cb8,0x99
  4263a2:	rcr    DWORD PTR [esi+0x9a0dc8f],cl
  4263a8:	dec    ebp
  4263a9:	lea    edi,[ecx+0x7]
  4263ac:	jle    0x4263c7
  4263ae:	cmp    ah,BYTE PTR [edi+0x45f21b8c]
  4263b4:	mov    ch,0xdb
  4263b6:	(bad)  
  4263b7:	dec    ebp
  4263b8:	jnp    0x426384
  4263ba:	pushf  
  4263bb:	cmp    dh,0xa1
  4263be:	loop   0x4263fe
  4263c0:	sbb    BYTE PTR [ecx-0x234791ed],cl
  4263c6:	dec    edi
  4263c7:	imul   esi,DWORD PTR [edi-0x7c4a8373],0x32
  4263ce:	adc    eax,0x12adb636
  4263d3:	push   esi
  4263d4:	lea    ebp,ds:0x8e60515f
  4263da:	rcr    BYTE PTR [ecx+0x30],0x2
  4263de:	pop    ecx
  4263df:	in     al,dx
  4263e0:	sub    al,0xda
  4263e2:	fld    st(6)
  4263e4:	sbb    al,0x67
  4263e6:	aaa    
  4263e7:	adc    esi,DWORD PTR [edx]
  4263e9:	inc    esi
  4263ea:	test   eax,0x47fa90d3
  4263ef:	pop    edi
  4263f0:	bswap  edx
  4263f2:	std    
  4263f3:	xor    dl,al
  4263f5:	mov    esp,DWORD PTR ds:0xa44c56c
  4263fb:	pop    esp
  4263fc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4263fd:	lea    edx,[edi]
  4263ff:	adc    edi,ebx
  426401:	and    bl,BYTE PTR [edi+0x2aeb67f1]
  426407:	out    dx,al
  426408:	adc    bh,BYTE PTR [edx]
  42640a:	jecxz  0x4263df
  42640c:	(bad)  
  42640e:	sub    ebx,edx
  426410:	jno    0x426480
  426412:	push   edx
  426413:	xchg   BYTE PTR [ecx],dh
  426415:	fdivr  QWORD PTR [edi+0x2432d927]
  42641b:	fs retf 
  42641d:	out    dx,eax
  42641e:	add    BYTE PTR [ebx-0x43],bh
  426421:	push   esp
  426422:	mov    esi,eax
  426424:	mov    dh,0xdd
  426426:	push   esp
  426427:	xor    edi,ecx
  426429:	hlt    
  42642a:	push   cs
  42642b:	mov    bh,0xb3
  42642d:	scas   eax,DWORD PTR es:[edi]
  42642e:	mov    ds:0xb6b5c60b,eax
  426433:	sbb    eax,0x198c0700
  426438:	imul   ecx,DWORD PTR [edi-0x71e498c4],0x1b647e2b
  426442:	stc    
  426443:	xchg   edx,eax
  426444:	jle    0x426498
  426446:	xor    al,0x2b
  426448:	or     BYTE PTR [ecx+0x433927e6],bh
  42644e:	mov    WORD PTR [eax-0x5a1d4e93],?
  426454:	dec    esp
  426455:	mov    edx,0xb88b59d6
  42645a:	(bad)  
  42645b:	dec    esp
  42645c:	push   ebx
  42645d:	jge    0x4264d4
  42645f:	scas   al,BYTE PTR es:[edi]
  426460:	sub    DWORD PTR [eax-0x6e93b777],ebx
  426466:	inc    ebx
  426467:	sub    ebp,0xa03af542
  42646d:	or     ecx,DWORD PTR [esi]
  42646f:	sbb    eax,0x8aa9eff1
  426474:	inc    edx
  426475:	sbb    esi,ebx
  426477:	add    DWORD PTR [ebp+0x38],ebp
  42647a:	pusha  
  42647b:	and    ch,BYTE PTR [ecx]
  42647d:	test   DWORD PTR [edi-0x6d807db7],edi
  426483:	xchg   esp,eax
  426484:	push   ss
  426485:	stos   DWORD PTR es:[edi],eax
  426486:	xchg   edi,eax
  426487:	shl    DWORD PTR [edx-0x4],cl
  42648a:	adc    DWORD PTR [ebx+0x328efc25],edx
  426490:	mov    ebx,DWORD PTR [esi+0x3af00cb8]
  426496:	loopne 0x426504
  426498:	adc    al,0x86
  42649b:	cmp    ebx,DWORD PTR [edi-0x2dbca16c]
  4264a1:	clc    
  4264a2:	hlt    
  4264a3:	push   eax
  4264a4:	aas    
  4264a5:	call   FWORD PTR [esi-0x98bec44]
  4264ab:	xchg   BYTE PTR [edi],bh
  4264ad:	retf   0x6048
  4264b0:	push   edi
  4264b1:	push   es
  4264b2:	sbb    eax,0xb6e53f50
  4264b7:	or     DWORD PTR [esi+0x5f9a79fd],ebp
  4264bd:	adc    BYTE PTR [edi-0x649728a2],0xa0
  4264c4:	int3   
  4264c5:	in     eax,dx
  4264c6:	mov    ds:0x3fc96d44,al
  4264cb:	int3   
  4264cc:	push   ds
  4264cd:	enter  0x4386,0x5b
  4264d1:	sub    al,0x9c
  4264d3:	inc    ebp
  4264d4:	int    0x23
  4264d6:	sar    DWORD PTR [ebp-0x1187bc8b],cl
  4264dc:	and    BYTE PTR [edi+0x473a8ed],ch
  4264e2:	sti    
  4264e3:	js     0x426516
  4264e5:	inc    edi
  4264e6:	lock ja 0x4264c6
  4264e9:	sbb    ah,cl
  4264eb:	mov    ebp,0x26912d8e
  4264f0:	dec    ebx
  4264f1:	pop    es
  4264f2:	mov    eax,ds:0x480d8d07
  4264f7:	mov    cl,0x4e
  4264f9:	jo     0x426522
  4264fb:	(bad)  
  4264fc:	and    BYTE PTR [ecx+0x4d9d0fe3],ah
  426502:	(bad)  
  426503:	mov    edx,0xabb6651
  426508:	shl    DWORD PTR [esi+ebp*4],0xbb
  42650c:	shl    ch,0xf9
  42650f:	add    cl,BYTE PTR [ecx+0x51]
  426512:	sbb    BYTE PTR [esi],bl
  426514:	iret   
  426515:	call   0xac4b:0x6c70358c
  42651c:	xor    bh,BYTE PTR [edi-0x62]
  42651f:	(bad)  
  426520:	sub    al,0x90
  426522:	das    
  426523:	arpl   WORD PTR [edx+0x69c5ca57],dx
  426529:	and    esi,ecx
  42652b:	shl    DWORD PTR [edx],cl
  42652d:	pusha  
  42652e:	gs out 0x16,al
  426531:	sar    BYTE PTR [ebp+0x61dec0bb],0xb2
  426538:	call   0x920d:0x7b30203f
  42653f:	xchg   esp,eax
  426540:	mov    esi,0xc5d9a2fd
  426545:	sub    dh,BYTE PTR [ebp-0xaa1cc54]
  42654b:	xor    esi,DWORD PTR [ecx+0x6b72a678]
  426551:	add    al,al
  426553:	or     ecx,DWORD PTR [edx+0x367058fa]
  426559:	les    edx,FWORD PTR [ebx-0xb32e2df]
  42655f:	lahf   
  426560:	push   es
  426561:	sbb    DWORD PTR [edi],eax
  426563:	mov    ds:0x98ee9153,al
  426568:	jne    0x4265df
  42656a:	(bad)  
  42656b:	test   al,0x2d
  42656d:	mov    al,ds:0x363356e9
  426572:	mov    eax,ds:0xa7647792
  426577:	ret    0x937e
  42657a:	int3   
  42657b:	mov    cl,BYTE PTR [ecx-0x7]
  42657e:	in     eax,dx
  42657f:	xlat   BYTE PTR ds:[ebx]
  426580:	sti    
  426581:	inc    eax
  426582:	pop    DWORD PTR [esi]
  426584:	sbb    BYTE PTR [ebx-0x5fe61d42],al
  42658a:	nop
  42658b:	sub    al,0xdd
  42658d:	mov    ebx,0x88700973
  426592:	mov    bh,0x58
  426594:	iret   
  426595:	pop    esi
  426596:	outs   dx,BYTE PTR ds:[esi]
  426597:	sbb    BYTE PTR [ebp+0x3905b768],ah
  42659d:	xor    ah,BYTE PTR [edi]
  42659f:	loop   0x4265ba
  4265a1:	test   DWORD PTR [esi+0x7339d1c1],eax
  4265a7:	retf   
  4265a8:	inc    edi
  4265a9:	add    BYTE PTR [edi-0x202dfa45],bl
  4265af:	mov    eax,ds:0xb8f16177
  4265b4:	push   fs
  4265b6:	or     bh,dl
  4265b8:	xchg   esp,eax
  4265b9:	push   edi
  4265ba:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4265bb:	and    DWORD PTR [esi+0x1e],eax
  4265be:	add    al,0x3f
  4265c0:	sbb    eax,0x1a4ea290
  4265c5:	jo     0x4265ba
  4265c7:	inc    ecx
  4265c8:	jbe    0x4265fc
  4265ca:	outs   dx,DWORD PTR ds:[esi]
  4265cb:	sub    DWORD PTR [ebp+0x479d1f45],esp
  4265d1:	xchg   edx,eax
  4265d2:	out    dx,eax
  4265d3:	(bad)  
  4265d4:	xor    eax,0x97ceb65a
  4265d9:	fst    DWORD PTR [ecx+0x68]
  4265dc:	jl     0x4265af
  4265de:	(bad)  
  4265df:	adc    ebx,ebx
  4265e1:	sub    al,0x25
  4265e3:	mov    BYTE PTR [ecx],al
  4265e5:	lds    esp,FWORD PTR [ebp-0x3e087f77]
  4265eb:	xchg   esi,eax
  4265ec:	push   0x17
  4265ee:	adc    edi,DWORD PTR [edi-0x2f260edf]
  4265f4:	add    al,0x10
  4265f6:	adc    al,BYTE PTR [edi+0x390c1eac]
  4265fc:	cmp    BYTE PTR [esi+ebp*8],dl
  4265ff:	jmp    0xd4fe:0xb488e2fd
  426606:	xchg   edi,eax
  426607:	lahf   
  426608:	pop    es
  426609:	cmp    al,0x22
  42660b:	sbb    BYTE PTR [ebp-0x3c],0x9
  42660f:	push   es
  426610:	sbb    esp,DWORD PTR [ebp-0x69]
  426613:	xor    edi,esi
  426615:	ror    BYTE PTR [ebp+0x1e],0x9e
  426619:	xchg   BYTE PTR [esi+0x1f],bl
  42661c:	cld    
  42661d:	jecxz  0x4265d5
  42661f:	jg     0x4265af
  426621:	mov    edx,0x8fc39846
  426626:	adc    al,0x16
  426628:	sub    BYTE PTR ds:[edi-0x7123ca33],dl
  42662f:	jnp    0x426616
  426631:	and    edi,DWORD PTR [eax+0x37]
  426634:	mov    BYTE PTR [eax*8-0x67b4c88a],bh
  42663b:	(bad)  
  42663c:	mov    dh,0x99
  42663e:	push   es
  42663f:	inc    edx
  426640:	repz cmp edi,ecx
  426643:	pusha  
  426644:	test   DWORD PTR [eax+0x23855f9c],ecx
  42664a:	jge    0x4266c7
  42664c:	popf   
  42664d:	fadd   QWORD PTR [bx+di+0x2d1e]
  426652:	sub    al,0xb4
  426654:	cmc    
  426655:	push   esi
  426656:	ins    BYTE PTR es:[edi],dx
  426657:	jne    0x4265e3
  426659:	push   es
  42665a:	add    eax,0xef1b0566
  42665f:	cld    
  426660:	mov    ah,0x78
  426662:	and    al,0x3f
  426664:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  426665:	sub    al,0xb
  426667:	mov    ch,0x93
  426669:	sub    dl,BYTE PTR [esp+ebp*2+0x4d71bf29]
  426670:	sbb    BYTE PTR [esi+0x7c],cl
  426673:	scas   al,BYTE PTR es:[edi]
  426674:	lds    eax,FWORD PTR [ecx+0x619e736e]
  42667a:	jns    0x4265fc
  42667c:	pop    ss
  42667d:	shr    edi,cl
  42667f:	pushf  
  426680:	ins    DWORD PTR es:[edi],dx
  426681:	outs   dx,DWORD PTR ds:[esi]
  426682:	add    cl,al
  426684:	test   DWORD PTR [edi+0x40],esi
  426687:	cwde   
  426688:	mov    dl,0x93
  42668a:	inc    ebp
  42668b:	sbb    al,0x4a
  42668d:	nop
  42668e:	inc    eax
  42668f:	stos   BYTE PTR es:[edi],al
  426690:	(bad)  
  426691:	call   0xecdc1884
  426696:	adc    ecx,ebp
  426698:	pop    edx
  426699:	int3   
  42669a:	inc    ebp
  42669b:	fcmovb st,st(5)
  42669d:	add    al,0xeb
  42669f:	daa    
  4266a0:	pop    esi
  4266a1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4266a2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4266a3:	stos   BYTE PTR es:[edi],al
  4266a4:	dec    ebx
  4266a5:	retf   0x524d
  4266a8:	add    DWORD PTR [edi-0x40e8260a],edx
  4266ae:	cmp    eax,0x1b3fc6e5
  4266b3:	les    esp,FWORD PTR [ebx-0x6f]
  4266b6:	dec    edi
  4266b7:	shl    ah,cl
  4266b9:	mov    ebp,0x7c1d23ff
  4266be:	push   esp
  4266bf:	sub    al,ch
  4266c1:	push   esp
  4266c2:	call   0xd2be3947
  4266c7:	lods   al,BYTE PTR ds:[esi]
  4266c8:	lock pop ecx
  4266ca:	jnp    0x4266d4
  4266cc:	out    dx,eax
  4266cd:	mov    al,ds:0xddc71266
  4266d2:	mov    esp,edx
  4266d4:	adc    BYTE PTR [ecx+edi*1],cl
  4266d7:	mov    ds:0x104a78a5,al
  4266dc:	nop
  4266dd:	adc    BYTE PTR [ecx-0x40],ch
  4266e0:	adc    bh,dl
  4266e2:	clc    
  4266e3:	icebp  
  4266e4:	(bad)  
  4266e5:	dec    eax
  4266e6:	cmp    edx,DWORD PTR [ebx+ebx*2+0x2b]
  4266ea:	jecxz  0x42672e
  4266ec:	out    dx,eax
  4266ed:	sub    al,0xe4
  4266ef:	adc    al,0xab
  4266f1:	repnz sbb DWORD PTR [ecx],0xffffffd9
  4266f5:	xor    BYTE PTR [esi-0x6a161f26],bh
  4266fb:	loop   0x426705
  4266fd:	loop   0x4266c4
  4266ff:	sbb    BYTE PTR [eax+0x5f038e19],al
  426705:	mov    ds:0x7e5c133b,eax
  42670a:	mov    ebp,0x606a13cb
  42670f:	jo     0x42669b
  426711:	fwait
  426712:	cwde   
  426713:	xchg   edi,eax
  426714:	call   0x672282df
  426719:	scas   al,BYTE PTR es:[edi]
  42671a:	mov    ds:0xef0a6591,eax
  42671f:	sbb    eax,0xddd7b1e2
  426724:	repnz dec esp
  426726:	add    al,bl
  426728:	fcomp  QWORD PTR [ecx]
  42672a:	mov    ebx,eax
  42672c:	dec    edx
  42672d:	push   0x3c
  42672f:	retf   
  426730:	out    dx,al
  426731:	mov    ds:0xaaa2fa3,al
  426736:	enter  0x197d,0xae
  42673a:	call   0xe4fd:0x367abe73
  426741:	div    BYTE PTR es:[eax]
  426744:	icebp  
  426745:	adc    ebx,DWORD PTR [ebx]
  426747:	or     al,0x9e
  426749:	xchg   ebp,eax
  42674a:	inc    ebp
  42674b:	rcr    ebx,cl
  42674d:	popf   
  42674e:	mov    cl,BYTE PTR [ebp-0x6997dbee]
  426754:	imul   DWORD PTR [edx+eiz*1]
  426757:	sub    bh,BYTE PTR [ebx]
  426759:	push   esp
  42675a:	push   ebp
  42675b:	lea    ebp,[eax]
  42675d:	popa   
  42675e:	push   esi
  42675f:	jge    0x426774
  426761:	jns    0x4267a3
  426763:	xchg   ebx,eax
  426764:	add    al,0x32
  426766:	icebp  
  426767:	lea    esp,[esi+0x11]
  42676a:	loopne 0x4267e2
  42676c:	rol    DWORD PTR [ebx-0x660de6c8],1
  426772:	pop    edx
  426773:	inc    ebx
  426774:	loop   0x4267b8
  426776:	adc    ah,0xe6
  426779:	ins    BYTE PTR es:[edi],dx
  42677a:	mov    al,ds:0x636538be
  42677f:	xor    eax,0xa1b1d9b6
  426784:	jb     0x4267b8
  426786:	outs   dx,DWORD PTR ds:[esi]
  426787:	jae    0x4267ba
  426789:	sub    esi,eax
  42678b:	in     al,dx
  42678c:	cmp    DWORD PTR [ebp+0x9],edi
  42678f:	or     DWORD PTR [eax-0x5a52ee08],esi
  426795:	mov    eax,db1
  426798:	mov    al,ds:0x3527aeea
  42679d:	mov    edx,0x8edcac38
  4267a2:	jge    0x4267c6
  4267a4:	mov    ch,0x73
  4267a6:	push   ecx
  4267a7:	inc    edi
  4267a8:	repnz adc BYTE PTR [esi-0x6c],ah
  4267ac:	push   edi
  4267ad:	xchg   BYTE PTR [esi+edi*2],bh
  4267b0:	push   0xc6253b05
  4267b5:	cmp    ecx,ebx
  4267b7:	or     eax,0x4e154f11
  4267bc:	addr16 jg 0x4267ea
  4267bf:	ins    BYTE PTR es:[edi],dx
  4267c0:	aam    0x41
  4267c2:	push   es
  4267c3:	pushf  
  4267c4:	sbb    eax,0x932757b
  4267c9:	push   cs
  4267ca:	mov    eax,ds:0x275556ab
  4267cf:	cmp    eax,0x72483783
  4267d4:	not    DWORD PTR [esi+0x316e517c]
  4267da:	call   0xc90aa093
  4267df:	arpl   WORD PTR [ebp+0x3f2ff7e2],sp
  4267e5:	jmp    0x426841
  4267e7:	xchg   DWORD PTR [esi-0x41681f7],edi
  4267ed:	sbb    edi,esi
  4267ef:	cmp    al,0xfa
  4267f1:	pop    edx
  4267f2:	sub    DWORD PTR [ebx],edx
  4267f4:	mov    edi,0xdb0d4941
  4267f9:	stos   DWORD PTR es:[edi],eax
  4267fa:	jle    0x42680f
  4267fc:	sub    eax,0xaa7f78fe
  426801:	mov    ds:0x9e681396,eax
  426806:	nop
  426807:	pop    esi
  426808:	mov    al,ds:0xf5ce829a
  42680d:	cmp    ecx,ebx
  42680f:	add    eax,0xb553e26c
  426814:	stos   BYTE PTR es:[edi],al
  426815:	pop    ecx
  426816:	aad    0xb7
  426818:	and    ah,BYTE PTR [esp+edi*1-0x40]
  42681c:	mov    esp,0x1aa13fc5
  426821:	sbb    esp,DWORD PTR ds:0xd60417f8
  426827:	aaa    
  426828:	iret   
  426829:	push   ds
  42682a:	or     al,0x85
  42682c:	push   edx
  42682d:	and    edx,DWORD PTR [edi+0x28]
  426830:	or     al,0xf7
  426832:	aam    0xe0
  426834:	pop    edx
  426835:	push   DWORD PTR [ebp-0x73]
  426838:	xor    bl,BYTE PTR [ecx-0x4c230fc]
  42683e:	and    edx,ecx
  426840:	dec    ebp
  426841:	rol    DWORD PTR [ecx-0x23],0xfa
  426845:	sar    ebp,1
  426847:	loope  0x426862
  426849:	cmc    
  42684a:	pop    ss
  42684b:	ret    0xf4d9
  42684e:	push   ds
  42684f:	mov    eax,0xe7bfdb5c
  426854:	lods   al,BYTE PTR ds:[esi]
  426855:	aas    
  426856:	jne    0x426877
  426858:	pop    edx
  426859:	jp     0x426873
  42685b:	out    dx,eax
  42685c:	mov    al,ds:0x86e22581
  426861:	pushf  
  426862:	adc    eax,0x8a614003
  426867:	aam    0x50
  426869:	jno    0x426890
  42686b:	add    ch,ah
  42686d:	cmp    dh,BYTE PTR [ebx]
  42686f:	pop    esi
  426870:	push   0x76ea7ef8
  426875:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  426876:	int3   
  426877:	mov    BYTE PTR [esp+ecx*1-0x77966d86],al
  42687e:	mov    bh,BYTE PTR [ecx-0xe]
  426881:	ja     0x426848
  426883:	(bad)  
  426884:	pop    es
  426885:	push   es
  426886:	rcr    BYTE PTR [edx],1
  426888:	iret   
  426889:	sar    ah,0x7f
  42688c:	xchg   DWORD PTR [ebx-0x25],esi
  42688f:	mov    dl,0xd0
  426891:	mov    eax,ds:0xb073790c
  426896:	fisub  WORD PTR [edx+esi*8]
  426899:	data16 int 0xae
  42689c:	dec    ecx
  42689d:	adc    esp,DWORD PTR [edx-0x4cdf81c8]
  4268a3:	iret   
  4268a4:	xor    BYTE PTR [ebx+0x65],0xb4
  4268a8:	out    dx,eax
  4268a9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4268aa:	jle    0x4268d3
  4268ac:	sub    BYTE PTR [esi+0x72],bl
  4268af:	add    edi,DWORD PTR [ebx+ebp*8+0x36]
  4268b3:	int3   
  4268b4:	jmp    0xedfd:0x34efbafa
  4268bb:	mov    ecx,0xb39719de
  4268c0:	pop    ds
  4268c1:	mov    eax,ds:0xd062c6cb
  4268c6:	inc    edi
  4268c7:	fsubp  st(2),st
  4268c9:	std    
  4268ca:	push   ss
  4268cb:	les    eax,FWORD PTR [edx+ecx*4]
  4268ce:	xchg   esi,esi
  4268d0:	imul   esi,DWORD PTR [esi-0x59811899],0xffffffb4
  4268d7:	mov    ds:0x8bb18f9a,eax
  4268dc:	stos   DWORD PTR es:[edi],eax
  4268dd:	icebp  
  4268de:	inc    BYTE PTR [ebx+0x6e]
  4268e1:	int    0x73
  4268e3:	mov    esp,0x615ba296
  4268e8:	and    al,0xda
  4268ea:	clc    
  4268eb:	fidivr DWORD PTR [ebp+0x448a69a2]
  4268f1:	pusha  
  4268f2:	sub    edi,ebx
  4268f4:	and    al,0xe6
  4268f6:	adc    esp,DWORD PTR [ebx]
  4268f8:	xchg   esp,eax
  4268f9:	aad    0xde
  4268fb:	jbe    0x42696e
  4268fd:	pop    edx
  4268fe:	jbe    0x4268d6
  426900:	mov    bl,0x6a
  426902:	cmp    ebp,DWORD PTR [ecx+0x6eb1a8cd]
  426908:	cli    
  426909:	cli    
  42690a:	rcl    DWORD PTR [edx],1
  42690c:	jns    0x426926
  42690e:	cs and al,0x3b
  426911:	xchg   esi,eax
  426912:	jp     0x426926
  426914:	jno    0x426944
  426916:	sahf   
  426917:	fwait
  426918:	aas    
  426919:	cdq    
  42691a:	outs   dx,BYTE PTR ds:[esi]
  42691b:	inc    esi
  42691c:	lea    esp,[ebx+0x2]
  42691f:	(bad)  
  426920:	mov    esp,0xa147a858
  426925:	jae    0x426971
  426927:	js     0x426924
  426929:	cmp    DWORD PTR [eax+0x68],esp
  42692c:	out    dx,al
  42692d:	shl    DWORD PTR [edx+0x6b0fe002],cl
  426933:	(bad)  
  426934:	fsub   QWORD PTR [ecx]
  426936:	lods   eax,DWORD PTR ds:[esi]
  426937:	and    BYTE PTR [ecx-0x5b1af7e9],bl
  42693d:	js     0x42692f
  42693f:	sbb    al,0xd6
  426941:	sub    DWORD PTR [edi-0x79],ebp
  426944:	pop    ds
  426945:	mov    edi,0x70966371
  42694a:	or     esi,DWORD PTR [eax-0x3b]
  42694d:	lods   eax,DWORD PTR ds:[esi]
  42694e:	xlat   BYTE PTR ds:[ebx]
  42694f:	mov    bh,0xe5
  426951:	pop    ebx
  426952:	jg     0x4268f0
  426954:	cdq    
  426955:	xor    ecx,esi
  426957:	sti    
  426958:	xchg   esp,eax
  426959:	mov    al,ds:0x23bf5f6b
  42695e:	cdq    
  42695f:	push   ecx
  426960:	xchg   esi,eax
  426961:	mov    ecx,0xfc36ac58
  426966:	xchg   BYTE PTR [esi+0x56b19209],bh
  42696c:	add    BYTE PTR [eax-0x5fb56b7f],dl
  426972:	mov    ch,0x46
  426974:	pop    esp
  426975:	mov    bh,0xc0
  426977:	xchg   edx,eax
  426978:	mov    fs,WORD PTR [edx+0x60]
  42697b:	adc    BYTE PTR [ecx],dl
  42697d:	jbe    0x426907
  42697f:	xor    DWORD PTR [esi+eax*4+0x31],ecx
  426983:	push   eax
  426984:	xchg   edx,eax
  426985:	add    al,0xab
  426987:	test   DWORD PTR [esi],edx
  426989:	mov    edx,0x7c12d7f5
  42698e:	outs   dx,BYTE PTR ds:[esi]
  42698f:	cwde   
  426990:	lds    ecx,FWORD PTR [eax-0xdb923ff]
  426996:	lea    ebx,[esi+0x29a2583e]
  42699c:	push   eax
  42699d:	pop    ds
  42699e:	(bad)  
  42699f:	jle    0x4269d5
  4269a1:	or     al,0xe2
  4269a3:	int    0xbc
  4269a5:	dec    esp
  4269a6:	jp     0x42698c
  4269a8:	bound  edi,QWORD PTR [edx]
  4269aa:	and    DWORD PTR [ecx+0x1b],edx
  4269ad:	or     ebx,DWORD PTR [eax+edx*1+0x1c]
  4269b1:	daa    
  4269b2:	push   edi
  4269b3:	ja     0x4269ff
  4269b5:	inc    ebp
  4269b6:	mov    al,ds:0x7575eb9
  4269bb:	fild   WORD PTR [ecx+edx*4]
  4269be:	inc    ebp
  4269bf:	adc    ebp,DWORD PTR [ecx+0x2ddc1885]
  4269c5:	std    
  4269c6:	in     eax,dx
  4269c7:	dec    ebx
  4269c8:	or     ecx,DWORD PTR [ebp+ebp*1+0x38c8263b]
  4269cf:	pop    edx
  4269d0:	jb     0x4269ca
  4269d2:	repnz adc BYTE PTR cs:[ebx+0x493d7f23],0x1f
  4269db:	rcr    BYTE PTR [edx],1
  4269dd:	sub    al,0xca
  4269df:	pusha  
  4269e0:	jo     0x4269e4
  4269e2:	xlat   BYTE PTR ds:[ebx]
  4269e3:	adc    eax,0x29616b17
  4269e8:	in     al,0x90
  4269ea:	lock xor ecx,DWORD PTR [esp+edi*1+0x6ef62f9e]
  4269f2:	test   eax,0x84a03b17
  4269f7:	popa   
  4269f8:	push   ebp
  4269f9:	add    edx,DWORD PTR [esi+0x71]
  4269fc:	out    0xfc,al
  4269fe:	icebp  
  4269ff:	pop    esi
  426a00:	dec    eax
  426a01:	inc    eax
  426a02:	ret    0xc69e
  426a05:	or     bh,bh
  426a07:	cmp    dh,0xff
  426a0a:	xor    cl,BYTE PTR [ecx-0x4f179446]
  426a10:	sahf   
  426a11:	or     esi,DWORD PTR [esi+0x47cb4b1a]
  426a17:	shl    DWORD PTR [esi],0x10
  426a1a:	jne    0x4269ac
  426a1c:	int3   
  426a1d:	xchg   edi,eax
  426a1e:	test   al,0xdf
  426a20:	lock push edx
  426a22:	fisttp DWORD PTR [ebp-0x27]
  426a25:	sbb    dl,ch
  426a27:	test   eax,0x3b7a787
  426a2c:	cld    
  426a2d:	in     eax,dx
  426a2e:	test   bh,bl
  426a30:	imul   ebp,DWORD PTR [edi+0x71],0xe7a8cc89
  426a37:	mov    edx,0x2d329487
  426a3c:	pop    edi
  426a3d:	push   ebp
  426a3e:	rol    DWORD PTR [esi+0xe],0x66
  426a42:	jo     0x4269d5
  426a44:	cmp    ebp,0xffffffec
  426a47:	mov    dh,0x47
  426a49:	lods   eax,DWORD PTR ds:[esi]
  426a4a:	test   BYTE PTR [ecx-0x4e],cl
  426a4d:	pop    es
  426a4e:	nop
  426a4f:	into   
  426a50:	repz iret 
  426a52:	push   eax
  426a53:	pop    ebp
  426a54:	push   0x47
  426a56:	sbb    dh,BYTE PTR [ecx+0x3d]
  426a59:	in     al,dx
  426a5a:	add    ecx,eax
  426a5c:	jne    0x426ad6
  426a5e:	sub    edi,DWORD PTR [esi-0x8]
  426a61:	xor    BYTE PTR [edx],bl
  426a63:	rcr    DWORD PTR [ebp+0x70],1
  426a66:	push   ecx
  426a67:	inc    esp
  426a68:	fsubr  st,st(1)
  426a6a:	fild   DWORD PTR [ebp+0x50]
  426a6d:	stos   BYTE PTR es:[edi],al
  426a6e:	je     0x426a95
  426a70:	ret    
  426a71:	lahf   
  426a72:	repz jne 0x426a4b
  426a75:	adc    BYTE PTR [edi-0x8],dh
  426a78:	add    eax,0x3c7468
  426a7d:	xor    al,BYTE PTR [edx+ebx*1+0x561f63e3]
  426a84:	push   edx
  426a85:	lahf   
  426a86:	pop    ebp
  426a87:	cmp    cl,ah
  426a89:	mov    edi,0x50945023
  426a8e:	dec    eax
  426a8f:	stos   BYTE PTR es:[edi],al
  426a90:	(bad)  
  426a91:	fisttp QWORD PTR [ecx-0x30]
  426a94:	retf   
  426a95:	sbb    al,0xfa
  426a97:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  426a98:	add    bl,dl
  426a9a:	bound  ecx,QWORD PTR [ebp-0x36b2e6a6]
  426aa0:	in     al,dx
  426aa1:	int3   
  426aa2:	jnp    0x426a64
  426aa4:	dec    ebp
  426aa5:	mov    edx,0xe043fa0b
  426aaa:	scas   eax,DWORD PTR es:[edi]
  426aab:	mov    DWORD PTR [bx+si],esi
  426aae:	pusha  
  426aaf:	sub    BYTE PTR [edi],al
  426ab1:	out    dx,eax
  426ab2:	test   DWORD PTR [ebx+eiz*4+0x74],edx
  426ab6:	push   edi
  426ab7:	jbe    0x426acb
  426ab9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  426aba:	mov    ?,WORD PTR [ebx+0x504a0858]
  426ac0:	sub    BYTE PTR [esi-0x2b],0x55
  426ac4:	fwait
  426ac5:	dec    ecx
  426ac6:	jle    0x426b13
  426ac8:	jnp    0x426a93
  426aca:	cli    
  426acb:	inc    eax
  426acc:	icebp  
  426acd:	bound  esp,QWORD PTR [esi+0xdaf7667]
  426ad3:	sub    esi,DWORD PTR [eax-0x5e347603]
  426ad9:	out    0xf,eax
  426adb:	push   ebx
  426adc:	mov    bl,0xa3
  426ade:	pop    eax
  426adf:	dec    edi
  426ae0:	push   edx
  426ae1:	inc    edi
  426ae2:	jae    0x426a8c
  426ae4:	mov    ecx,0x7fa4609a
  426ae9:	stos   DWORD PTR es:[edi],eax
  426aea:	rol    dl,cl
  426aec:	xchg   ebp,eax
  426aed:	jb     0x426b62
  426aef:	jp     0x426a8c
  426af1:	sti    
  426af2:	xchg   ebx,eax
  426af3:	(bad)  
  426af5:	dec    edi
  426af6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  426af7:	pop    esp
  426af8:	sub    al,0x3a
  426afa:	lock retf 0xa1f7
  426afe:	adc    eax,0x8152fc8b
  426b03:	retf   0x4579
  426b06:	nop
  426b07:	stos   DWORD PTR es:[edi],eax
  426b08:	pop    esi
  426b09:	dec    edx
  426b0a:	and    esi,DWORD PTR [ebx-0x5649b755]
  426b10:	adc    eax,0xe652f9c1
  426b15:	retf   0xe26a
  426b18:	pop    ecx
  426b19:	scas   eax,DWORD PTR es:[edi]
  426b1a:	xchg   edi,eax
  426b1b:	xchg   ebp,eax
  426b1c:	inc    esp
  426b1d:	sahf   
  426b1e:	(bad)  
  426b1f:	aad    0xad
  426b21:	test   al,0xd4
  426b23:	mov    edi,0xd35250a2
  426b28:	xor    al,0xd2
  426b2a:	inc    edi
  426b2b:	addr16 xchg esp,eax
  426b2d:	jp     0x426adc
  426b2f:	js     0x426b89
  426b31:	test   eax,0xeb5b3641
  426b36:	in     eax,0x5
  426b38:	mov    bl,dl
  426b3a:	jno    0x426bb7
  426b3c:	dec    esp
  426b3d:	jmp    0xe483381e
  426b42:	dec    edi
  426b43:	ds out dx,eax
  426b45:	ja     0x426b88
  426b47:	sub    eax,0x7f5b6903
  426b4c:	sbb    eax,0x322ec066
  426b51:	dec    ebx
  426b52:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426b53:	retf   
  426b54:	pop    ebp
  426b55:	mov    edx,DWORD PTR [ebp-0x27]
  426b58:	imul   ecx,DWORD PTR ds:0x17e95a6e,0x12
  426b5f:	push   ecx
  426b60:	pop    esp
  426b61:	cmp    BYTE PTR [edx-0x7cba7c2b],bh
  426b67:	or     ecx,ebx
  426b69:	jbe    0x426b54
  426b6b:	sbb    DWORD PTR [ebp+0x12481b8e],ebx
  426b71:	clc    
  426b72:	fcomp  QWORD PTR [ecx+0x2474defc]
  426b78:	mov    cl,0x79
  426b7a:	and    al,0x36
  426b7c:	fbld   TBYTE PTR [edi+ebx*4]
  426b7f:	push   ecx
  426b80:	(bad)
  426b83:	cmp    BYTE PTR [edx+0x4b],0x34
  426b87:	jo     0x426b37
  426b89:	lods   al,BYTE PTR ds:[esi]
  426b8a:	fdiv   QWORD PTR [ecx]
  426b8c:	cmp    al,0x40
  426b8e:	jecxz  0x426bbe
  426b90:	cmp    esi,edi
  426b92:	arpl   WORD PTR [ecx*2+0x5fdb246e],cx
  426b99:	out    dx,eax
  426b9a:	aas    
  426b9b:	mov    ds:0x40445d20,al
  426ba0:	cmp    esi,DWORD PTR [ecx+0x4]
  426ba3:	dec    esi
  426ba4:	js     0x426b3b
  426ba6:	not    DWORD PTR [esi+0x127784df]
  426bac:	or     BYTE PTR [ecx],dh
  426bae:	inc    esi
  426baf:	icebp  
  426bb0:	jg     0x426c2b
  426bb2:	jne    0x426c20
  426bb4:	int    0xf4
  426bb6:	outs   dx,BYTE PTR ds:[esi]
  426bb7:	cmp    al,0xcb
  426bb9:	(bad)  
  426bba:	fsubrp st(5),st
  426bbc:	shl    ebp,1
  426bbe:	and    eax,0x88781d90
  426bc3:	out    dx,al
  426bc4:	sbb    eax,0xe02c0f88
  426bc9:	mov    al,0x97
  426bcb:	sbb    al,0xf9
  426bcd:	loope  0x426bc7
  426bcf:	push   ds
  426bd0:	fnsave [ecx+0xb]
  426bd3:	rcl    BYTE PTR [ebp+eax*8-0x7a9e272d],1
  426bda:	mov    eax,?
  426bdc:	sbb    edi,ebp
  426bde:	ins    BYTE PTR es:[edi],dx
  426bdf:	mov    eax,0x474d1ee0
  426be4:	cmp    ch,ch
  426be6:	sahf   
  426be7:	mov    edx,DWORD PTR [ebx-0x1d]
  426bea:	ins    BYTE PTR es:[edi],dx
  426beb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426bec:	(bad)
  426bef:	aaa    
  426bf0:	xchg   DWORD PTR [ecx-0x31],ecx
  426bf3:	cwde   
  426bf4:	jb     0x426c01
  426bf6:	dec    esp
  426bf7:	xchg   ecx,eax
  426bf8:	das    
  426bf9:	rcl    dl,0xf0
  426bfc:	fist   WORD PTR [eax-0x9]
  426bff:	pop    ecx
  426c00:	outs   dx,BYTE PTR ds:[esi]
  426c01:	pushf  
  426c02:	outs   dx,BYTE PTR ds:[esi]
  426c03:	mov    ds:0xe07d47ca,al
  426c08:	mov    ecx,0x2e0ffd9
  426c0d:	inc    ebx
  426c0e:	cmp    ebp,edi
  426c10:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426c11:	lods   al,BYTE PTR ds:[esi]
  426c12:	mov    ds,ecx
  426c14:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  426c15:	dec    ebx
  426c16:	icebp  
  426c17:	loope  0x426bdf
  426c19:	mov    bl,0x17
  426c1b:	push   es
  426c1c:	pusha  
  426c1d:	es push eax
  426c1f:	stc    
  426c20:	add    DWORD PTR [ecx+ebx*8],eax
  426c23:	outs   dx,BYTE PTR ds:[esi]
  426c24:	xchg   esi,eax
  426c25:	repnz mov ds:0xb3b0cbb8,al
  426c2b:	mov    ch,BYTE PTR [eax-0x5d]
  426c2e:	mov    dl,0xa9
  426c30:	push   0xffffffaa
  426c32:	test   DWORD PTR fs:[ecx+0x4ace5150],0x234bb580
  426c3d:	dec    esi
  426c3e:	sbb    al,0x67
  426c40:	rol    DWORD PTR [edx+ebx*1+0x5b56a22b],cl
  426c47:	enter  0xa745,0xe8
  426c4b:	dec    esi
  426c4c:	inc    edx
  426c4d:	loop   0x426c00
  426c4f:	std    
  426c50:	aam    0xc9
  426c52:	jae    0x426c71
  426c54:	sub    eax,0x23cea317
  426c59:	sub    al,0x75
  426c5b:	sub    BYTE PTR [esi-0x458e461b],bh
  426c61:	push   ss
  426c62:	push   edx
  426c63:	xor    eax,0xda5ecde3
  426c68:	push   esi
  426c69:	sbb    dh,BYTE PTR [ecx-0x62]
  426c6c:	mov    dl,0xd7
  426c6e:	outs   dx,DWORD PTR ds:[esi]
  426c6f:	mov    ecx,0x6cb936
  426c74:	mov    ds:0xb79b434f,eax
  426c79:	dec    ebx
  426c7a:	retf   0xfeb0
  426c7d:	jle    0x426c0b
  426c7f:	or     ch,BYTE PTR [ebx]
  426c81:	enter  0xd7de,0x1d
  426c85:	jl     0x426cfa
  426c87:	lea    ebp,gs:0x40a9
  426c8d:	or     al,0x10
  426c8f:	mov    edi,0xfc28fc7d
  426c94:	daa    
  426c95:	retf   0x7bf8
  426c98:	mov    ds:0x15fad50e,al
  426c9d:	jmp    0x5400ffc1
  426ca2:	mov    al,ds:0xf5e0327
  426ca7:	add    BYTE PTR [edx],dh
  426ca9:	fcomi  st,st(0)
  426cab:	les    ecx,FWORD PTR [edx+0x715c14f0]
  426cb1:	aam    0xed
  426cb3:	cdq    
  426cb4:	push   esi
  426cb5:	and    BYTE PTR [ebp+0x18],0x94
  426cb9:	mov    esp,0x1e8a3518
  426cbe:	sub    DWORD PTR [edi-0x395c70bd],edi
  426cc4:	sbb    al,0x2c
  426cc6:	xchg   edi,eax
  426cc7:	and    eax,0xcfc6c37b
  426ccc:	xor    ecx,DWORD PTR [ebp+0x15]
  426ccf:	sar    BYTE PTR [ebp-0x25],cl
  426cd2:	popa   
  426cd3:	rol    BYTE PTR [ebx+0x76],1
  426cd6:	fidivr DWORD PTR [ebp+0x6b]
  426cd9:	inc    edx
  426cda:	dec    ebp
  426cdb:	(bad)  
  426cdc:	mov    dh,BYTE PTR [ecx]
  426cde:	mov    ecx,0x5f62554f
  426ce3:	lds    esp,FWORD PTR [edi]
  426ce5:	retf   
  426ce6:	or     bl,BYTE PTR [ebx]
  426ce8:	jae    0x426c74
  426cea:	adc    DWORD PTR [edi-0x4b],eax
  426ced:	xor    eax,0xc5b8af18
  426cf2:	pop    esi
  426cf3:	je     0x426cb0
  426cf5:	stos   DWORD PTR es:[edi],eax
  426cf6:	jbe    0x426d1b
  426cf8:	or     DWORD PTR [eax+edx*8+0x765bb607],edx
  426cff:	jp     0x426d28
  426d01:	lds    edx,FWORD PTR [ebp-0x11921451]
  426d07:	inc    esi
  426d08:	push   es
  426d09:	cld    
  426d0a:	mov    al,ds:0x2452bbfb
  426d0f:	loope  0x426ccf
  426d11:	retf   0x48c2
  426d14:	bound  eax,QWORD PTR [edx-0x78a37878]
  426d1a:	fisub  WORD PTR [eax+eax*4]
  426d1d:	adc    esp,DWORD PTR [edx+ebx*8]
  426d20:	push   ss
  426d21:	stc    
  426d22:	xrelease xchg BYTE PTR [ebp-0x251bd252],bh
  426d29:	lods   eax,DWORD PTR ds:[esi]
  426d2a:	fadd   DWORD PTR [eax+0xf282231]
  426d30:	xor    dl,BYTE PTR [ebx-0x3e]
  426d33:	scas   al,BYTE PTR es:[edi]
  426d34:	cmp    BYTE PTR [edi+ebx*4+0x4bc245ce],cl
  426d3b:	push   ss
  426d3c:	cld    
  426d3d:	stos   BYTE PTR es:[edi],al
  426d3e:	es (bad) 
  426d40:	sbb    ecx,DWORD PTR [edi-0x2c11a0b9]
  426d46:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  426d47:	test   DWORD PTR [ebp+0x9],ebx
  426d4a:	lods   al,BYTE PTR ds:[esi]
  426d4b:	adc    esp,edx
  426d4d:	mov    WORD PTR [ebx-0x23],fs
  426d50:	pop    esi
  426d51:	dec    ebp
  426d52:	mov    ?,WORD PTR [eax-0x766e712c]
  426d58:	test   eax,0x401a8fee
  426d5d:	ja     0x426dda
  426d5f:	das    
  426d60:	sar    BYTE PTR [edx],0xa
  426d63:	mov    ebp,0xec170f2e
  426d68:	push   esi
  426d69:	mov    ebx,0x42facfde
  426d6e:	clc    
  426d6f:	and    dl,BYTE PTR [edx]
  426d71:	pushf  
  426d72:	jecxz  0x426cf9
  426d74:	stc    
  426d75:	es sbb BYTE PTR gs:[edx-0x77c9d84f],bh
  426d7d:	call   0x54a8:0xef030889
  426d84:	popf   
  426d85:	push   0x1638fdf4
  426d8a:	inc    edx
  426d8b:	into   
  426d8c:	hlt    
  426d8d:	rcr    ecx,1
  426d8f:	mov    eax,0xa4379c
  426d94:	cmp    esp,DWORD PTR ds:0xf9749b19
  426d9a:	aad    0xe0
  426d9c:	add    bh,dl
  426d9e:	scas   eax,DWORD PTR es:[edi]
  426d9f:	stos   DWORD PTR es:[edi],eax
  426da0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  426da1:	setle  BYTE PTR ds:0x853e7cf0
  426da8:	lahf   
  426da9:	sub    eax,0xecedaded
  426dae:	inc    edi
  426daf:	fsub   QWORD PTR [edx+0x73d96d86]
  426db5:	mov    ebx,0x4f25e057
  426dba:	aas    
  426dbb:	daa    
  426dbc:	out    dx,eax
  426dbd:	aas    
  426dbe:	pop    edx
  426dbf:	push   eax
  426dc0:	and    DWORD PTR [eax],eax
  426dc2:	pop    ebp
  426dc3:	sub    al,ch
  426dc5:	sbb    BYTE PTR [eax],bh
  426dc7:	jge    0x426d68
  426dc9:	jne    0x426dbf
  426dcb:	hlt    
  426dcc:	shr    BYTE PTR [ebx+0x33],1
  426dcf:	in     eax,0xca
  426dd1:	push   ecx
  426dd2:	hlt    
  426dd3:	and    dh,dh
  426dd5:	cmp    eax,0x5545f27f
  426dda:	adc    DWORD PTR [ecx],esi
  426ddc:	aaa    
  426ddd:	daa    
  426dde:	cmp    al,0xd9
  426de0:	loop   0x426e20
  426de2:	nop
  426de3:	sbb    dl,cl
  426de5:	sbb    al,0xc
  426de7:	scas   eax,DWORD PTR es:[edi]
  426de8:	cmp    al,0x55
  426dea:	mov    ah,0x5d
  426dec:	push   ecx
  426ded:	les    ebx,FWORD PTR [esi+edx*1-0x25f02f8]
  426df4:	pop    ebp
  426df5:	or     edi,DWORD PTR [ebp+0x77cd57d1]
  426dfb:	dec    edi
  426dfc:	fmulp  st(1),st
  426dfe:	fs popa 
  426e00:	call   0x5408:0x6fab109c
  426e07:	dec    esp
  426e08:	jbe    0x426e7b
  426e0a:	add    DWORD PTR [ebx],esp
  426e0c:	repnz shl DWORD PTR [ebx],1
  426e0f:	jno    0x426e2d
  426e11:	mov    bl,0x52
  426e13:	sbb    bl,ah
  426e15:	or     al,0x71
  426e17:	icebp  
  426e18:	pop    ecx
  426e19:	bound  ebx,QWORD PTR [edx+0x50]
  426e1c:	mov    bl,0xe2
  426e1e:	sti    
  426e1f:	clc    
  426e20:	xor    BYTE PTR [ebp-0x63],al
  426e23:	fwait
  426e24:	lods   eax,DWORD PTR ds:[esi]
  426e25:	cmc    
  426e26:	dec    edx
  426e27:	push   ss
  426e28:	jmp    0xd7fd:0xb709ae56
  426e2f:	movzx  ebp,BYTE PTR [edi+0x77]
  426e33:	jl     0x426e85
  426e35:	ror    BYTE PTR [eax+0x5],cl
  426e38:	sahf   
  426e39:	lods   al,BYTE PTR ds:[esi]
  426e3a:	mov    eax,ds:0x37265c40
  426e3f:	out    0x6a,eax
  426e41:	mov    ebp,0x43a511a2
  426e46:	mov    ecx,0x79830875
  426e4b:	mov    ch,dl
  426e4d:	sub    BYTE PTR [esp+ebx*1],ch
  426e50:	mov    eax,ds:0xcdef2dd9
  426e55:	icebp  
  426e56:	push   ecx
  426e57:	out    dx,al
  426e58:	cmp    BYTE PTR [ebp-0x5feebdb],al
  426e5e:	addr16 (bad) 
  426e60:	push   esp
  426e61:	pop    ds
  426e62:	sbb    BYTE PTR [edi-0x5c],dh
  426e65:	ret    
  426e66:	push   0x3d
  426e68:	inc    eax
  426e69:	aas    
  426e6a:	inc    eax
  426e6b:	xchg   edi,eax
  426e6c:	mov    bh,0x7
  426e6e:	push   ss
  426e6f:	ret    0xb051
  426e72:	xchg   esp,eax
  426e73:	das    
  426e74:	or     edi,DWORD PTR ds:0x5638a2dd
  426e7a:	stos   DWORD PTR es:[edi],eax
  426e7b:	jbe    0x426eb6
  426e7d:	jp     0x426e55
  426e7f:	fs leave 
  426e81:	jmp    0x426ec4
  426e83:	mov    BYTE PTR [edx-0x1f],ch
  426e86:	jmp    0x426f02
  426e88:	in     al,dx
  426e89:	mov    eax,ds:0x33190805
  426e8e:	mov    eax,0xcc6c2b33
  426e93:	jmp    0x39ad:0xf05ef795
  426e9a:	cmp    dh,BYTE PTR [edx+0x6b580cc6]
  426ea0:	xor    eax,0xdc3d41ef
  426ea5:	ret    0x4ed2
  426ea8:	jp     0x426f14
  426eaa:	jnp    0x426e9b
  426eac:	jae    0x426e8a
  426eae:	lock or DWORD PTR [eax],eax
  426eb1:	push   ecx
  426eb2:	jle    0x426e84
  426eb4:	(bad)  [edi+0x78]
  426eb7:	jne    0x426e77
  426eb9:	out    0xa2,al
  426ebb:	push   0x8539256a
  426ec0:	cmp    cl,ah
  426ec2:	sahf   
  426ec3:	sbb    ch,BYTE PTR [edx+0x71]
  426ec6:	pop    es
  426ec7:	sub    ah,BYTE PTR [ecx]
  426ec9:	mov    edx,0x3e5bc582
  426ece:	test   DWORD PTR [ebp+eax*8+0x1d],edi
  426ed2:	loopne 0x426eb4
  426ed4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426ed5:	push   ds
  426ed6:	push   0xfffffff6
  426ed8:	shr    DWORD PTR [edi],0x32
  426edb:	mov    ah,0x1
  426edd:	jg     0x426ecc
  426edf:	mov    esp,0xe3b0a28c
  426ee4:	clc    
  426ee5:	std    
  426ee6:	inc    esi
  426ee7:	pop    edi
  426ee8:	into   
  426ee9:	lea    ebx,[ebx+0x7a]
  426eec:	test   DWORD PTR [esi],ebx
  426eee:	mov    al,ds:0x59d1768
  426ef3:	rcr    ah,0xfb
  426ef6:	jmp    0x426e8a
  426ef8:	stos   BYTE PTR es:[edi],al
  426ef9:	jo     0x426f0b
  426efb:	xor    eax,0x56ad5161
  426f00:	jb     0x426ec1
  426f02:	jae    0x426f7e
  426f04:	xchg   esi,eax
  426f05:	fiadd  WORD PTR [bp+si+0x3784]
  426f0a:	retf   0x29b6
  426f0d:	scas   al,BYTE PTR es:[edi]
  426f0e:	aam    0xb7
  426f10:	loop   0x426ece
  426f12:	out    0xb5,al
  426f14:	mov    ebp,0x17ce674d
  426f19:	mov    esp,0xbe2a3930
  426f1e:	out    dx,al
  426f1f:	popf   
  426f20:	adc    edi,DWORD PTR [ebp+edi*8-0x18ffde4]
  426f27:	sub    bh,bh
  426f29:	pop    es
  426f2a:	xchg   edi,eax
  426f2b:	mov    esp,0xe01e46a5
  426f30:	xchg   ecx,eax
  426f31:	and    al,0xf
  426f33:	dec    esp
  426f34:	int3   
  426f35:	stos   BYTE PTR es:[edi],al
  426f36:	rcpps  xmm5,XMMWORD PTR [ebx-0x71]
  426f3a:	sbb    ebp,esi
  426f3c:	push   edx
  426f3d:	sub    BYTE PTR [esi-0x5d],0x9a
  426f41:	repz aam 0x74
  426f44:	sub    ecx,edx
  426f46:	jae    0x426f0c
  426f48:	or     eax,0xe7513bd5
  426f4d:	xlat   BYTE PTR ds:[ebx]
  426f4e:	cs jmp 0xb1347d8
  426f54:	lahf   
  426f55:	mov    bh,dl
  426f57:	and    dl,cl
  426f59:	test   DWORD PTR [esi],ecx
  426f5b:	push   ecx
  426f5c:	in     eax,0x8
  426f5e:	clc    
  426f5f:	sbb    BYTE PTR [esi-0x1ce07a5],ch
  426f65:	or     eax,0xfcca39
  426f6a:	dec    ebp
  426f6b:	shl    BYTE PTR [edx-0x11af9ed0],0x86
  426f72:	or     eax,0x76b59ef8
  426f77:	pop    edx
  426f78:	cmp    eax,0x636bf696
  426f7d:	pop    esp
  426f7e:	test   DWORD PTR [ecx-0x59e2f5ad],0x9fd23eb2
  426f88:	sub    DWORD PTR [edi+0x25],edi
  426f8b:	stos   DWORD PTR es:[edi],eax
  426f8c:	stos   BYTE PTR es:[edi],al
  426f8d:	adc    DWORD PTR [ecx+ebp*4+0x39],0xba2a20a5
  426f95:	add    edi,eax
  426f97:	and    DWORD PTR [eax-0x5aa5fad5],ecx
  426f9d:	push   es
  426f9e:	in     eax,0x81
  426fa0:	test   esp,ecx
  426fa2:	es nop
  426fa4:	jno    0x426f49
  426fa6:	dec    esp
  426fa7:	pop    edx
  426fa8:	jne    0x426f5d
  426faa:	(bad)  
  426fac:	jg     0x427005
  426fae:	gs scas al,BYTE PTR es:[edi]
  426fb0:	mov    ch,0x90
  426fb2:	add    al,0x82
  426fb4:	or     edi,DWORD PTR [ecx-0x78]
  426fb7:	or     DWORD PTR [edi-0x6c49f13a],ecx
  426fbd:	fadd   DWORD PTR [ebp+0xf]
  426fc0:	xchg   edi,eax
  426fc1:	pop    esp
  426fc2:	mov    cl,0x28
  426fc4:	or     ebp,DWORD PTR [edx]
  426fc6:	cdq    
  426fc7:	add    ecx,0x98c039ca
  426fcd:	mov    dh,0x9d
  426fcf:	add    BYTE PTR [edi-0x1c],bl
  426fd2:	fwait
  426fd3:	aaa    
  426fd4:	fmul   DWORD PTR [edi+0x48fbf4ef]
  426fda:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  426fdb:	ret    
  426fdc:	enter  0x187a,0x72
  426fe0:	pop    ebp
  426fe1:	adc    dh,ch
  426fe3:	inc    edx
  426fe4:	out    dx,al
  426fe5:	push   edi
  426fe6:	out    dx,eax
  426fe7:	in     eax,dx
  426fe8:	addr16 aas 
  426fea:	out    dx,al
  426feb:	cmc    
  426fec:	sub    DWORD PTR [eax+0xb121317],0xffffffb2
  426ff3:	xor    DWORD PTR [ecx+0x5f22236e],eax
  426ff9:	into   
  426ffa:	(bad)  
  426ffb:	pop    ecx
  426ffc:	in     eax,0x64
  426ffe:	mov    ecx,DWORD PTR [ebx+0x47]
  427001:	pop    eax
  427002:	int3   
  427003:	es dec esp
  427005:	push   cs
  427006:	jno    0x427065
  427008:	jmp    0x426fe4
  42700a:	bound  ebx,QWORD PTR es:[ecx]
  42700d:	fst    DWORD PTR [edx-0x6c96c33e]
  427013:	pop    edx
  427014:	lods   al,BYTE PTR ds:[esi]
  427015:	and    al,0x9
  427017:	addr16 inc esp
  427019:	pop    es
  42701a:	push   esp
  42701b:	adc    eax,0x531496a3
  427020:	call   0xd983:0x93dfa251
  427027:	xchg   BYTE PTR [edi-0x1a29c46e],al
  42702d:	clc    
  42702e:	or     esi,DWORD PTR fs:[ebx+0x79]
  427032:	cld    
  427033:	mov    eax,0xb4798bb1
  427038:	xchg   esp,eax
  427039:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42703a:	mov    esi,0xeadce4d5
  42703f:	cld    
  427040:	sub    eax,0xefee082
  427045:	pop    ss
  427046:	daa    
  427047:	sub    al,0x1a
  427049:	enter  0x3b00,0xc8
  42704d:	nop
  42704e:	inc    edx
  42704f:	ds (bad) 
  427052:	pop    DWORD PTR [ebx+0x20]
  427055:	inc    ebx
  427056:	fnstsw WORD PTR [edi+eax*1]
  427059:	(bad)  
  42705a:	pop    ebx
  42705b:	mov    BYTE PTR [eax+edx*4-0x17],dl
  42705f:	mov    ch,0x3d
  427061:	(bad)  
  427062:	pop    edi
  427063:	push   ecx
  427064:	xchg   BYTE PTR [edx+ecx*4],dh
  427067:	or     eax,0x5c372dab
  42706c:	jg     0x42708c
  42706e:	xchg   ebx,eax
  42706f:	(bad)  
  427070:	sbb    eax,0xc32f6323
  427075:	mov    cs,WORD PTR [edx]
  427077:	mov    al,0x73
  427079:	nop
  42707a:	jge    0x4270a4
  42707c:	push   edx
  42707d:	fimul  WORD PTR [ebx+0x68]
  427080:	push   cs
  427081:	fistp  WORD PTR [ebp-0x57]
  427084:	popa   
  427085:	xor    ecx,esi
  427087:	addr16 jbe 0x42705a
  42708a:	and    BYTE PTR [esi-0x43478d09],ch
  427090:	dec    edx
  427091:	nop
  427092:	fnstenv [ecx]
  427094:	sub    bh,dl
  427096:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  427097:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  427098:	js     0x42710b
  42709a:	cmp    eax,0x24ce3552
  42709f:	mov    edx,0xf4245b09
  4270a4:	sub    DWORD PTR [eax+eiz*8-0x365813e9],eax
  4270ab:	(bad)  
  4270ac:	jmp    0xd38f:0x6d788129
  4270b3:	pop    esp
  4270b4:	scas   eax,DWORD PTR es:[edi]
  4270b5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4270b6:	or     edi,esi
  4270b8:	push   edx
  4270b9:	aaa    
  4270ba:	ds dec eax
  4270bc:	shl    cl,0xc
  4270bf:	icebp  
  4270c0:	dec    edx
  4270c1:	pop    es
  4270c2:	cmc    
  4270c3:	pop    es
  4270c4:	mov    ebp,0x9107638e
  4270c9:	stos   BYTE PTR es:[edi],al
  4270ca:	adc    BYTE PTR [edx-0x68c851d9],al
  4270d0:	xor    BYTE PTR [ecx-0x13deafe],0xec
  4270d7:	push   0xa7da4204
  4270dc:	mov    ebx,0xfcf00b8f
  4270e1:	sbb    cl,BYTE PTR [ecx]
  4270e3:	push   0xa0ba868d
  4270e8:	mov    ebp,DWORD PTR [ebp-0x74]
  4270eb:	mov    ds:0x407c6968,al
  4270f0:	(bad)  
  4270f1:	out    0x77,eax
  4270f3:	jns    0x427160
  4270f5:	rcr    edi,cl
  4270f7:	jne    0x42709b
  4270f9:	dec    esi
  4270fa:	(bad)  
  4270fb:	ror    bl,1
  4270fd:	mov    dh,0x61
  4270ff:	in     eax,0xc7
  427101:	inc    esi
  427102:	push   ecx
  427103:	inc    ecx
  427104:	pop    ebp
  427105:	ror    DWORD PTR [eax+0x3b0368be],0x4b
  42710c:	repnz out dx,eax
  42710e:	jmp    0x83abef89
  427113:	mov    al,ds:0xfb1cee07
  427118:	fistp  WORD PTR [esi]
  42711a:	enter  0x3602,0x6c
  42711e:	add    DWORD PTR [ebx-0x2565aac5],esp
  427124:	out    0x66,eax
  427126:	dec    eax
  427127:	inc    ebp
  427128:	jp     0x4270bd
  42712a:	sub    BYTE PTR [edi-0x429d63af],0xb2
  427131:	iret   
  427132:	push   ss
  427133:	inc    eax
  427134:	and    eax,0x285699ce
  427139:	adc    esp,0x58080c57
  42713f:	rol    dl,0xd5
  427142:	outs   dx,DWORD PTR ds:[esi]
  427143:	push   ebx
  427144:	push   edx
  427145:	cwde   
  427146:	dec    eax
  427147:	popa   
  427148:	sahf   
  427149:	jne    0x4271bf
  42714b:	(bad)  
  42714c:	in     eax,0xd
  42714e:	sbb    eax,0x9a4d9fe
  427153:	push   0x27ef4b16
  427158:	pop    ebp
  427159:	ficom  WORD PTR [edx+0x6ec24e89]
  42715f:	mov    eax,ds:0x8ec51128
  427164:	adc    BYTE PTR ds:0x243db692,bh
  42716a:	add    DWORD PTR [ecx+0x23d793af],esi
  427170:	dec    edi
  427171:	jle    0x427196
  427173:	cmp    BYTE PTR ds:0x776561f7,dh
  427179:	mov    al,ds:0x740975a6
  42717e:	nop
  42717f:	outs   dx,DWORD PTR ds:[esi]
  427180:	add    al,0x6a
  427182:	xor    edi,DWORD PTR [ecx-0x27]
  427185:	push   0x14
  427187:	(bad)  
  427188:	ds in  eax,dx
  42718a:	es in  al,0x9f
  42718d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42718e:	cmc    
  42718f:	push   ds
  427190:	mov    DWORD PTR [ebx-0x7d9c0fb4],eax
  427196:	fcomp  DWORD PTR ds:0x74348f4f
  42719c:	pop    edx
  42719d:	mov    ds:0x595ef9cb,al
  4271a2:	mov    ds:0xf3e66c91,eax
  4271a7:	sets   BYTE PTR [ecx-0xa]
  4271ab:	lods   eax,DWORD PTR ds:[esi]
  4271ac:	cwde   
  4271ad:	mov    ecx,0x363df57b
  4271b2:	push   0x3d
  4271b4:	sti    
  4271b5:	ins    BYTE PTR es:[edi],dx
  4271b6:	inc    edx
  4271b7:	cmp    ch,ch
  4271b9:	les    ecx,FWORD PTR [eax]
  4271bb:	add    BYTE PTR ds:0xb777cc7c,cl
  4271c1:	jo     0x42716a
  4271c3:	dec    ebp
  4271c4:	mov    ebp,0x52496e48
  4271c9:	loope  0x42723f
  4271cb:	mov    eax,ds:0x7929b8e0
  4271d0:	cmp    bl,ch
  4271d2:	adc    ecx,ebx
  4271d4:	push   esp
  4271d5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4271d6:	fidivr WORD PTR [edi]
  4271d8:	and    edi,DWORD PTR [ecx-0x22]
  4271db:	pop    ebx
  4271dc:	jmp    0x4271f9
  4271de:	lods   al,BYTE PTR ds:[esi]
  4271df:	test   BYTE PTR [esi],ch
  4271e1:	retf   0xe83f
  4271e4:	fs fucomp st(7)
  4271e7:	retf   
  4271e8:	jmp    0x42724a
  4271ea:	rol    DWORD PTR [ebp-0x6d],cl
  4271ed:	aam    0xaf
  4271ef:	add    edx,DWORD PTR [eax-0x23]
  4271f2:	jb     0x4271c2
  4271f4:	cmp    bl,BYTE PTR [esi]
  4271f6:	lahf   
  4271f7:	cmp    al,BYTE PTR [ebx]
  4271f9:	dec    edi
  4271fa:	into   
  4271fb:	and    eax,DWORD PTR [edx+ecx*4-0x72c34a4b]
  427202:	mov    edi,0xd03d4b08
  427207:	sti    
  427208:	mov    edi,0x626d0783
  42720d:	loop   0x42724d
  42720f:	sbb    eax,0x2992ac8b
  427214:	lock popf 
  427216:	retf   
  427217:	stos   BYTE PTR es:[edi],al
  427218:	xchg   ecx,eax
  427219:	sub    al,ah
  42721b:	fstp   QWORD PTR [edx]
  42721d:	and    eax,0xe34cfecb
  427222:	jns    0x427287
  427224:	sub    BYTE PTR [ebx],al
  427226:	xlat   BYTE PTR ds:[ebx]
  427227:	push   eax
  427228:	xor    ecx,esi
  42722a:	popf   
  42722b:	jmp    0x52a9500d
  427230:	mov    ss,WORD PTR [edx]
  427232:	xchg   ebx,eax
  427233:	inc    esi
  427234:	pop    edx
  427235:	cmp    eax,ecx
  427237:	and    DWORD PTR ds:0xfd5b5cb9,edi
  42723d:	jg     0x4271d9
  42723f:	inc    ecx
  427240:	fcomp  QWORD PTR [edi+0x5a4fe483]
  427246:	xor    al,BYTE PTR [ebx]
  427248:	mov    al,BYTE PTR [ebp+0x2e]
  42724b:	cs jnp 0x427220
  42724e:	data16 xor al,0xe1
  427251:	sub    DWORD PTR [ebx-0x58f5ee0a],ebx
  427257:	jle    0x42728b
  427259:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42725a:	scas   al,BYTE PTR es:[edi]
  42725b:	popaw  
  42725d:	add    eax,0xbf32f9d1
  427262:	xsavec [edi+0x11]
  427266:	adc    esi,eax
  427268:	pusha  
  427269:	iret   
  42726a:	xchg   bl,bh
  42726c:	jl     0x4272b1
  42726e:	pop    ebx
  42726f:	mov    dh,0x14
  427271:	sbb    eax,ebx
  427273:	test   DWORD PTR [edx],ebx
  427275:	mov    cl,0xde
  427277:	js     0x4272b3
  427279:	adc    BYTE PTR [edx],0xd2
  42727c:	lahf   
  42727d:	test   al,0x51
  42727f:	cwde   
  427280:	cmp    esi,ecx
  427282:	aas    
  427283:	cmp    eax,0x3419a1a7
  427288:	ss sub eax,0x9427b0bb
  42728e:	and    ch,BYTE PTR [eax]
  427290:	or     eax,0x85ba0382
  427295:	mov    al,BYTE PTR [ebx+0x4e0aaa4b]
  42729b:	push   es
  42729c:	sar    BYTE PTR [ebx+0x66ee05be],0x8c
  4272a3:	jg     0x4272a6
  4272a5:	jg     0x42725f
  4272a7:	call   0x6b40c468
  4272ac:	cmp    dl,dl
  4272ae:	pop    edx
  4272af:	ja     0x4272b1
  4272b1:	es enter 0x43f5,0xcd
  4272b6:	mov    ch,0x9e
  4272b8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4272b9:	loop   0x42727b
  4272bb:	inc    ebp
  4272bc:	sbb    al,0x63
  4272be:	jnp    0x4272df
  4272c0:	out    dx,eax
  4272c1:	jae    0x4272aa
  4272c3:	(bad)  
  4272c5:	xchg   ebp,eax
  4272c6:	nop
  4272c7:	out    0x3d,eax
  4272c9:	cli    
  4272ca:	pop    esi
  4272cb:	(bad)
  4272ce:	out    0x8a,al
  4272d0:	out    dx,eax
  4272d1:	stos   DWORD PTR es:[edi],eax
  4272d2:	xchg   DWORD PTR [esi+0x3b],esi
  4272d5:	call   0x2192:0xfc592da8
  4272dc:	sar    bl,cl
  4272de:	pop    edx
  4272df:	loop   0x4272d2
  4272e1:	adc    DWORD PTR [ecx+eax*4-0x6c],ebx
  4272e5:	aaa    
  4272e6:	mov    bl,0x63
  4272e8:	xchg   ebx,eax
  4272e9:	adc    al,0x89
  4272eb:	or     DWORD PTR [ecx-0x73e51c4],ebx
  4272f1:	outs   dx,DWORD PTR ds:[esi]
  4272f2:	lods   al,BYTE PTR ds:[esi]
  4272f3:	sbb    al,0xa4
  4272f5:	out    dx,al
  4272f6:	arpl   dx,di
  4272f8:	and    esp,DWORD PTR [edx+0xa]
  4272fb:	pop    edx
  4272fc:	and    al,ch
  4272fe:	out    0x71,al
  427300:	or     cl,bh
  427302:	jno    0x4272dc
  427304:	sub    eax,0x85e63c40
  427309:	(bad)  [eax-0x2f]
  42730c:	lea    ecx,[edx+0x4f]
  42730f:	ret    
  427310:	shr    edx,1
  427312:	adc    BYTE PTR [eax-0x75cd0417],0x35
  427319:	js     0x4272ce
  42731b:	inc    esp
  42731c:	nop
  42731d:	mov    dh,0x1c
  42731f:	sub    BYTE PTR [esi],al
  427321:	sbb    DWORD PTR [ebp-0x4b],edi
  427324:	paddw  mm0,mm4
  427327:	mov    ch,0x1c
  427329:	push   esi
  42732a:	xchg   ebx,eax
  42732b:	adc    BYTE PTR [ecx-0x7f2d7bc2],dh
  427331:	mov    fs,WORD PTR [edx]
  427333:	dec    edx
  427334:	mov    dl,0x9
  427336:	in     eax,0xdd
  427338:	cmp    eax,0x2d6068cc
  42733d:	push   esp
  42733e:	xor    DWORD PTR [ebp+0x58],0xfffffff2
  427342:	pop    ds
  427343:	jecxz  0x427348
  427345:	push   ss
  427346:	sahf   
  427347:	ss lahf 
  427349:	sub    DWORD PTR [edx-0x47],edx
  42734c:	(bad)  
  42734d:	outs   dx,DWORD PTR ds:[esi]
  42734e:	enter  0xa994,0x16
  427352:	(bad)  
  427353:	ror    BYTE PTR [edx+0x50d8b3d7],cl
  427359:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42735a:	dec    esi
  42735b:	mov    ah,BYTE PTR [edi+0x60fa482a]
  427361:	in     eax,0x1f
  427363:	sbb    BYTE PTR [esi-0xc8c0b6b],al
  427369:	cwde   
  42736a:	cmp    BYTE PTR [esi],bl
  42736c:	jbe    0x42730c
  42736e:	or     edi,esp
  427370:	sub    al,0x2
  427372:	dec    edx
  427373:	inc    ebp
  427374:	out    0x58,al
  427376:	xor    DWORD PTR ds:0x7ffa8ce3,ebp
  42737c:	aaa    
  42737d:	bound  ecx,QWORD PTR [edx-0x257c66fc]
  427383:	scas   al,BYTE PTR es:[edi]
  427384:	add    esp,DWORD PTR [ecx+0x47]
  427387:	test   BYTE PTR [edx+0x32],0x17
  42738b:	cmp    eax,DWORD PTR [edx-0x3e]
  42738e:	push   edx
  42738f:	mov    edx,DWORD PTR [edx-0x5192b32b]
  427395:	pop    edx
  427396:	pop    esi
  427397:	sti    
  427398:	bnd jbe 0x4273d9
  42739b:	pop    DWORD PTR [edi+0xb]
  42739e:	sbb    DWORD PTR [esi+0x36],edi
  4273a1:	xlat   BYTE PTR ds:[ebx]
  4273a2:	cs (bad) 
  4273a4:	(bad)
  4273a8:	push   ss
  4273a9:	xchg   edi,eax
  4273aa:	inc    ecx
  4273ab:	hlt    
  4273ac:	pop    esi
  4273ad:	out    0xc9,al
  4273af:	test   dh,ch
  4273b1:	pop    ebx
  4273b2:	push   es
  4273b3:	jp     0x4273c2
  4273b5:	mov    ds:0x43d3fa57,eax
  4273ba:	loopne 0x427384
  4273bc:	in     al,dx
  4273bd:	jo     0x427375
  4273bf:	inc    esp
  4273c0:	lahf   
  4273c1:	mov    ecx,0x27b1ff11
  4273c6:	mov    WORD PTR [ecx+0x67f96498],fs
  4273cc:	into   
  4273cd:	xor    eax,DWORD PTR ds:0x9863fd67
  4273d3:	mov    al,ds:0x519e3794
  4273d8:	nop
  4273d9:	and    al,0x84
  4273db:	mov    ecx,0xfd9ce767
  4273e0:	ror    BYTE PTR [esi+0x27b20360],cl
  4273e6:	pop    es
  4273e7:	add    ecx,ebp
  4273e9:	mov    esi,0x7125e1cf
  4273ee:	lds    ecx,FWORD PTR [edi+0x3e93743d]
  4273f4:	call   0xe61a:0x699a4e56
  4273fb:	hlt    
  4273fc:	jno    0x427382
  4273fe:	int    0x39
  427400:	xor    DWORD PTR [esi-0x78],ebx
  427403:	ja     0x427426
  427405:	dec    ebx
  427406:	lock dec DWORD PTR [eax+0x1d]
  42740a:	xchg   esi,eax
  42740b:	jae    0x4273b6
  42740d:	fst    DWORD PTR [di]
  427410:	adc    DWORD PTR [edi+eax*2],eax
  427413:	sub    DWORD PTR [bp+si+0x57],ebp
  427417:	jne    0x4273e8
  427419:	cwde   
  42741a:	inc    ebx
  42741b:	dec    ebp
  42741c:	dec    BYTE PTR [eax-0x1c]
  42741f:	iret   
  427420:	cmp    DWORD PTR [edi+0x2039118b],0xa0e33bc9
  42742a:	pop    ebp
  42742b:	add    DWORD PTR [ebp+0x46],eax
  42742e:	pop    ss
  42742f:	mov    ecx,0x82edead6
  427434:	dec    ebx
  427435:	pop    es
  427436:	arpl   WORD PTR [edi],di
  427438:	pop    ecx
  427439:	outs   dx,BYTE PTR ds:[esi]
  42743a:	test   al,0xa8
  42743c:	loop   0x427407
  42743e:	inc    edx
  42743f:	test   al,0xbc
  427441:	sub    BYTE PTR [esi+0x2fe4468a],ch
  427447:	push   esi
  427448:	jno    0x4273e5
  42744a:	push   ebp
  42744b:	(bad)  
  42744c:	out    dx,al
  42744d:	add    BYTE PTR [ecx],al
  42744f:	mov    ecx,0x32588a5a
  427454:	mov    ecx,0x65f6c2fb
  427459:	sub    al,0x13
  42745b:	test   al,dl
  42745d:	mov    bh,0x97
  42745f:	dec    ebx
  427460:	mov    DWORD PTR [ebp-0x79],ebx
  427463:	xor    DWORD PTR [edi-0x50],eax
  427466:	xor    ecx,ecx
  427468:	pop    esp
  427469:	and    eax,0x62336cf3
  42746e:	push   ebx
  42746f:	aas    
  427470:	sahf   
  427471:	push   ecx
  427472:	mov    ds:0x69ab8141,al
  427477:	cs add al,bh
  42747a:	jb     0x4274d1
  42747c:	sbb    al,0x9d
  42747e:	fcomp  DWORD PTR [edi-0x275a4dba]
  427484:	rol    al,cl
  427486:	cmc    
  427487:	repz aas 
  427489:	(bad)  
  42748a:	mov    bh,BYTE PTR [ebp+0x1e]
  42748d:	push   esp
  42748e:	add    DWORD PTR [edi],ebx
  427490:	jne    0x42747b
  427492:	call   0xdccea8fa
  427497:	je     0x42745d
  427499:	in     eax,0x2d
  42749b:	test   ecx,edi
  42749d:	cld    
  42749e:	cmp    BYTE PTR [edi+0x519ad3f],dh
  4274a4:	add    DWORD PTR [ebx],ecx
  4274a6:	pop    es
  4274a7:	call   0x4653:0x2b3b917d
  4274ae:	dec    esi
  4274af:	xor    ah,BYTE PTR [ebp-0x1978c04a]
  4274b5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4274b6:	out    dx,al
  4274b7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4274b8:	xchg   edi,eax
  4274b9:	add    dl,BYTE PTR ds:0x38e9a9bf
  4274bf:	sub    al,0x43
  4274c1:	xor    eax,0x46b6ba06
  4274c6:	icebp  
  4274c7:	stos   BYTE PTR es:[edi],al
  4274c8:	mov    edx,0xa58030a1
  4274cd:	mov    cl,BYTE PTR [edx]
  4274cf:	daa    
  4274d0:	jmp    0x42749f
  4274d2:	test   ah,dl
  4274d4:	cmp    bl,dl
  4274d6:	jne    0x427476
  4274d8:	and    ebp,eax
  4274da:	in     al,0xf6
  4274dc:	fidivr WORD PTR [eax-0x3d61ab7e]
  4274e2:	mov    al,BYTE PTR [esi]
  4274e4:	test   DWORD PTR [eax-0x4d],ecx
  4274e7:	movs   BYTE PTR es:[edi],BYTE PTR ss:[esi]
  4274e9:	mov    bl,0x89
  4274eb:	(bad)  
  4274ec:	mov    cl,BYTE PTR [ebx-0x21]
  4274ef:	xor    DWORD PTR [edx-0x702705e2],edx
  4274f5:	icebp  
  4274f6:	cmp    al,0xfd
  4274f8:	stc    
  4274f9:	dec    ecx
  4274fa:	pop    esi
  4274fb:	and    eax,0xfe6e60b9
  427500:	jo     0x427554
  427502:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  427503:	enter  0x72ff,0x38
  427507:	mov    dh,0x1d
  427509:	inc    ebp
  42750a:	in     eax,dx
  42750b:	mov    dh,0x1e
  42750d:	mov    esi,0xbdaa5a88
  427512:	cwde   
  427513:	and    eax,0x4a1d6213
  427518:	loopne 0x427587
  42751a:	rcl    al,1
  42751c:	arpl   WORD PTR [edi-0x179ee959],dx
  427522:	in     eax,dx
  427523:	mov    al,ds:0x7347ff9
  427528:	aaa    
  427529:	xchg   edi,eax
  42752a:	jmp    FWORD PTR [edx+eiz*8]
  42752d:	in     al,0x83
  42752f:	pop    ebx
  427530:	aam    0x52
  427532:	add    bl,BYTE PTR [ebp-0x1c465e33]
  427538:	jb     0x42757b
  42753a:	xchg   DWORD PTR [edi-0x6f9b481f],ecx
  427540:	pop    esi
  427541:	(bad)  
  427542:	xor    eax,DWORD PTR [ebp-0x36]
  427545:	adc    bh,BYTE PTR [ebx]
  427547:	dec    esi
  427548:	je     0x4275aa
  42754a:	cmp    dh,dh
  42754c:	nop
  42754d:	sub    DWORD PTR [eax+0x54],esi
  427550:	xor    al,0xbb
  427552:	inc    eax
  427553:	push   es
  427554:	pop    esp
  427555:	aam    0xbb
  427557:	add    ebx,ebx
  427559:	out    dx,eax
  42755a:	leave  
  42755b:	inc    edi
  42755c:	fst    DWORD PTR [eax+0x1bc88e34]
  427562:	mov    dl,0xc7
  427564:	mov    edi,0x836f07d8
  427569:	aam    0xe8
  42756b:	inc    ebx
  42756c:	test   al,0x8b
  42756e:	mov    dl,0x64
  427570:	dec    ebx
  427571:	(bad)  
  427573:	xchg   edx,eax
  427574:	shl    BYTE PTR [edx-0xc18a8c3],1
  42757a:	push   edx
  42757b:	push   ds
  42757c:	imul   eax,DWORD PTR [ebp+0x1bc8de59],0x529dad5c
  427586:	xor    eax,0x461e29e8
  42758b:	mov    ebp,0x26861308
  427590:	jne    0x427568
  427592:	mov    DWORD PTR [ebx],0x3448efe6
  427598:	adc    DWORD PTR [edx],esi
  42759a:	retf   
  42759b:	mov    eax,0x57d9d018
  4275a0:	push   ebx
  4275a1:	add    BYTE PTR [esp+edi*1],dl
  4275a4:	pop    ecx
  4275a5:	loopne 0x4275d4
  4275a7:	sbb    edi,ebp
  4275a9:	lods   eax,DWORD PTR ds:[esi]
  4275aa:	jo     0x4275fa
  4275ac:	and    eax,0x815ce6da
  4275b1:	fsub   DWORD PTR [esp+esi*8+0x19]
  4275b5:	adc    BYTE PTR [esi-0x63],0xb2
  4275b9:	ins    BYTE PTR es:[edi],dx
  4275ba:	xchg   edi,eax
  4275bb:	or     eax,0xbe4105bb
  4275c0:	fst    st(2)
  4275c2:	popa   
  4275c3:	sub    edi,DWORD PTR [ebp+0x329495a4]
  4275c9:	enter  0x2f67,0xfe
  4275cd:	sahf   
  4275ce:	jecxz  0x427589
  4275d0:	mov    cl,0x50
  4275d2:	add    al,0x6f
  4275d4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4275d5:	pop    ebx
  4275d6:	out    0x52,eax
  4275d8:	inc    ebp
  4275d9:	jle    0x427651
  4275db:	popf   
  4275dc:	icebp  
  4275dd:	xchg   ecx,eax
  4275de:	aad    0xdd
  4275e0:	push   0x29c97657
  4275e5:	add    dh,BYTE PTR [edx+0x21]
  4275e8:	hlt    
  4275e9:	xchg   si,ax
  4275eb:	cli    
  4275ec:	out    0xdb,al
  4275ee:	or     cl,BYTE PTR [ebp-0x6d]
  4275f1:	mov    ds:0x98476345,eax
  4275f6:	inc    edi
  4275f7:	jns    0x427624
  4275f9:	xor    eax,0x5a0ea7a0
  4275fe:	pop    ecx
  4275ff:	(bad)  
  427600:	mov    DWORD PTR [eax+0x3c],ebx
  427603:	inc    ebp
  427604:	(bad)  [ecx]
  427606:	inc    ebp
  427607:	xor    dh,BYTE PTR [ecx+ebp*2+0x61]
  42760b:	adc    ch,0xe1
  42760e:	xchg   ebp,eax
  42760f:	adc    DWORD PTR [esi+0x31d0d2c6],esp
  427615:	mov    edx,0xe516dc28
  42761a:	loopne 0x427615
  42761c:	add    eax,0x2bc6fb6a
  427621:	fwait
  427622:	xor    ah,cl
  427624:	mov    al,0x10
  427626:	pop    esi
  427627:	daa    
  427628:	lahf   
  427629:	mov    cl,0x9b
  42762b:	mov    cl,ch
  42762d:	(bad)  
  42762e:	push   cs
  42762f:	jmp    0xc6e2:0x7705
  427635:	ffreep st(3)
  427637:	push   0xc37897ea
  42763c:	lods   al,BYTE PTR ds:[esi]
  42763d:	fwait
  42763e:	rcr    cl,cl
  427640:	inc    ebp
  427641:	xchg   ecx,eax
  427642:	adc    BYTE PTR [ebx],ah
  427644:	mov    ecx,0x9492edc7
  427649:	inc    eax
  42764a:	imul   edi,DWORD PTR [ecx-0x478abb45],0xc116d5ee
  427654:	sti    
  427655:	popf   
  427656:	jmp    0xff2d:0x5820c99e
  42765d:	mov    ch,0xdb
  42765f:	stos   DWORD PTR es:[edi],eax
  427660:	push   ss
  427661:	fisttp DWORD PTR [edi]
  427663:	push   ebx
  427664:	stos   BYTE PTR es:[edi],al
  427665:	sbb    eax,edi
  427667:	push   esp
  427668:	mov    bl,0x93
  42766a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42766b:	cmc    
  42766c:	lods   eax,DWORD PTR ds:[esi]
  42766d:	cmp    esp,eax
  42766f:	push   ecx
  427670:	pop    edx
  427671:	and    dh,cl
  427673:	jmp    0xdb675185
  427678:	xlat   BYTE PTR ds:[ebx]
  427679:	std    
  42767a:	out    0xbd,ax
  42767d:	out    dx,al
  42767e:	arpl   di,si
  427680:	pop    edx
  427681:	sub    al,0xf9
  427683:	sub    al,0x2c
  427685:	pop    ds
  427686:	sbb    eax,0x1efc90a2
  42768b:	shr    bl,cl
  42768d:	xor    DWORD PTR [eax+esi*4+0x78],edi
  427691:	mov    al,0xb5
  427693:	or     BYTE PTR [ebp+0x34e0d107],ch
  427699:	xchg   esp,eax
  42769a:	push   esi
  42769b:	sbb    BYTE PTR [ecx],0x78
  42769e:	jle    0x42766c
  4276a0:	jns    0x42765b
  4276a2:	int3   
  4276a3:	and    eax,0xd2db1ba9
  4276a8:	mov    dh,BYTE PTR [edx+0x5bf90086]
  4276ae:	dec    edx
  4276af:	sti    
  4276b0:	adc    BYTE PTR [ebx+0x5a],bl
  4276b3:	push   cs
  4276b4:	xor    BYTE PTR [edi+0x32f75d],dl
  4276ba:	sub    eax,DWORD PTR [ebx+0x2d49e7f3]
  4276c0:	pop    edx
  4276c1:	mov    dl,BYTE PTR [eax+edi*2-0x4b]
  4276c5:	(bad)  
  4276c6:	lods   al,BYTE PTR ds:[esi]
  4276c7:	je     0x42764e
  4276c9:	sbb    DWORD PTR [ecx],esp
  4276cb:	neg    BYTE PTR [esi+eax*1+0x6a9d1afb]
  4276d2:	nop
  4276d3:	inc    ebx
  4276d4:	mov    cl,0x9f
  4276d6:	pop    ebx
  4276d7:	fidivr DWORD PTR [esi+0x5590bc34]
  4276dd:	adc    al,0xde
  4276df:	(bad)  
  4276e0:	and    DWORD PTR ds:0x1505b5c7,ebp
  4276e6:	or     BYTE PTR [eax+edi*1+0x656008fd],bh
  4276ed:	mov    ds:0x365427ac,eax
  4276f2:	cs jl  0x4276c9
  4276f5:	jnp    0x427754
  4276f7:	sub    DWORD PTR [ecx],eax
  4276f9:	mov    WORD PTR [edi+0x7],?
  4276fc:	sub    eax,0x416da92d
  427701:	cld    
  427702:	and    eax,0x32562075
  427707:	jo     0x42772d
  427709:	sub    esp,DWORD PTR ds:0xeed48935
  42770f:	fistp  QWORD PTR [ebx]
  427711:	out    0xbf,eax
  427713:	xlat   BYTE PTR ds:[ebx]
  427714:	push   edx
  427715:	jmp    0x5da:0x29ccad5a
  42771c:	ss loop 0x42772b
  42771f:	sbb    dh,BYTE PTR [ecx-0x40]
  427722:	repz in al,0xc2
  427725:	xor    eax,0x1a556a41
  42772a:	gs aaa 
  42772c:	ret    
  42772d:	push   ds
  42772e:	push   ax
  427730:	clc    
  427731:	xchg   BYTE PTR [ebx],ch
  427733:	xor    BYTE PTR [edi+0x5f],cl
  427736:	or     ah,bh
  427738:	add    eax,0xc6840b36
  42773d:	inc    edx
  42773e:	ins    DWORD PTR es:[edi],dx
  42773f:	popf   
  427740:	into   
  427741:	add    al,0x78
  427743:	sub    ecx,DWORD PTR [ebp+0x37c8da8]
  427749:	outs   dx,DWORD PTR ds:[esi]
  42774a:	pop    esi
  42774b:	mov    ecx,0xe0f8caa7
  427750:	pop    ecx
  427751:	in     eax,dx
  427752:	mov    ah,0x40
  427754:	add    edx,DWORD PTR [esi-0x20]
  427757:	add    DWORD PTR [ebx-0x3a52ed8f],esp
  42775d:	data16 add BYTE PTR [esi+0x6d0f4a4f],bl
  427764:	sub    BYTE PTR [ebp+0x36],0x76
  427768:	sub    eax,0x1bb08c09
  42776d:	sbb    DWORD PTR [ecx],ebx
  42776f:	sub    cl,0x46
  427772:	sbb    BYTE PTR gs:[edi+0x6f104f81],ch
  427779:	sbb    ah,BYTE PTR [edx-0x56ffeff4]
  42777f:	jmp    0x600b6b62
  427784:	jmp    0x6387:0x570ac1e1
  42778b:	lods   al,BYTE PTR ds:[esi]
  42778c:	cmc    
  42778d:	mov    edx,0x17bcf265
  427792:	jns    0x427773
  427794:	scas   al,BYTE PTR es:[edi]
  427795:	repnz leave 
  427797:	mov    eax,0xd5044e37
  42779c:	ret    
  42779d:	pop    esp
  42779e:	jmp    DWORD PTR [ebp+0x818b242]
  4277a4:	jp     0x4277ce
  4277a6:	sti    
  4277a7:	push   ebp
  4277a8:	mov    BYTE PTR [ecx+ebp*1],al
  4277ab:	inc    esi
  4277ac:	pusha  
  4277ad:	push   0xfffffff5
  4277af:	mov    bh,0x93
  4277b1:	neg    BYTE PTR [esi-0x1b]
  4277b4:	pop    edx
  4277b5:	jp     0x427804
  4277b7:	pop    eax
  4277b8:	cs aad 0x2e
  4277bb:	pop    ebp
  4277bc:	add    al,0xbd
  4277be:	int3   
  4277bf:	push   ss
  4277c0:	call   0x1295aa04
  4277c5:	adc    eax,0x967ad69
  4277ca:	xor    dl,BYTE PTR [edx-0x73]
  4277cd:	loope  0x4277a8
  4277cf:	sahf   
  4277d0:	fbstp  TBYTE PTR [ecx]
  4277d2:	add    eax,eax
  4277d4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4277d5:	xchg   esi,eax
  4277d6:	xchg   DWORD PTR [eax+0x4c],ecx
  4277d9:	inc    edx
  4277da:	sub    bh,0x11
  4277dd:	or     DWORD PTR [edx-0x40],ebp
  4277e0:	popa   
  4277e1:	int3   
  4277e2:	xor    ecx,esi
  4277e4:	repz pop ecx
  4277e6:	jae    0x4277cd
  4277e8:	jbe    0x4277c8
  4277ea:	les    edx,FWORD PTR ds:0xb8e9dced
  4277f0:	in     al,dx
  4277f1:	aaa    
  4277f2:	pop    edi
  4277f3:	xchg   edi,eax
  4277f4:	sub    al,0x77
  4277f6:	mov    ecx,0x2ed91bf2
  4277fb:	test   al,0x84
  4277fd:	push   edi
  4277fe:	mov    DWORD PTR ds:0x49793b6e,ecx
  427804:	js     0x427831
  427806:	pop    edi
  427807:	jg     0x42780b
  427809:	add    eax,esp
  42780b:	aas    
  42780c:	xor    BYTE PTR [ebx+0x200518bb],cl
  427812:	loope  0x427808
  427814:	jp     0x427869
  427816:	cs jecxz 0x427831
  427819:	call   0xfc51d6e9
  42781e:	jp     0x427879
  427820:	lds    esi,FWORD PTR [ebx]
  427822:	inc    edx
  427823:	xchg   ebx,eax
  427824:	or     dh,cl
  427826:	inc    ebx
  427827:	pop    ds
  427828:	sahf   
  427829:	(bad)  
  42782a:	pop    esi
  42782b:	sub    edx,DWORD PTR [ecx+0x5]
  42782e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42782f:	mov    esi,fs
  427831:	fcom   QWORD PTR [edi*4+0x2c324a5e]
  427838:	add    DWORD PTR [edx+0x5435b878],0xffffff88
  42783f:	inc    esi
  427840:	sub    edi,eax
  427842:	scas   eax,DWORD PTR es:[edi]
  427843:	pop    esp
  427844:	loope  0x42783f
  427846:	or     eax,0x10626f36
  42784b:	std    
  42784c:	into   
  42784d:	fs push eax
  42784f:	cli    
  427850:	sbb    al,BYTE PTR [ebx-0x59]
  427853:	call   0xfef1:0x713e768c
  42785a:	stos   BYTE PTR es:[edi],al
  42785b:	jmp    0x4277de
  42785d:	lahf   
  42785e:	imul   ebp,DWORD PTR [ecx],0xe8b8fa6f
  427864:	mov    ah,0x30
  427866:	jb     0x4277ee
  427868:	inc    eax
  427869:	xor    eax,0xdd796f24
  42786e:	pop    es
  42786f:	sbb    DWORD PTR [ebp-0x1f],0xfffffff3
  427873:	push   eax
  427874:	mov    edx,0x1d1f60ba
  427879:	xchg   ebx,eax
  42787a:	sbb    al,0x7e
  42787c:	push   edi
  42787d:	sti    
  42787e:	mov    edx,0xbe7a04ea
  427883:	cli    
  427884:	mov    al,ds:0x97e77dd0
  427889:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42788a:	mov    ecx,0x67bc1b08
  42788f:	cmp    dh,al
  427891:	inc    BYTE PTR [ebx-0x5b]
  427894:	test   DWORD PTR [ebx],ebx
  427896:	out    0x3b,eax
  427898:	pop    esp
  427899:	shl    BYTE PTR [esi],0x1b
  42789c:	or     dl,BYTE PTR [eax]
  42789e:	cmc    
  42789f:	(bad)  
  4278a0:	mov    bl,0xc5
  4278a2:	mov    ch,0x51
  4278a4:	popf   
  4278a5:	rcl    BYTE PTR [esi-0x7e12d265],cl
  4278ab:	(bad)  
  4278ac:	ins    DWORD PTR es:[edi],dx
  4278ad:	mov    dh,BYTE PTR [ecx]
  4278af:	push   edx
  4278b0:	gs mov dh,0xa2
  4278b3:	add    ch,dl
  4278b5:	push   ds
  4278b6:	add    al,0x42
  4278b8:	fisttp QWORD PTR [edi+0x1a]
  4278bb:	mov    ebp,0x530cfb88
  4278c0:	repnz inc eax
  4278c2:	stc    
  4278c3:	mov    esi,0x85c0fee7
  4278c8:	cs icebp 
  4278ca:	or     al,0x2b
  4278cc:	fstp   QWORD PTR [ecx]
  4278ce:	sub    BYTE PTR [ebx+0x4],dl
  4278d1:	(bad)  
  4278d2:	mov    al,ds:0xca21c841
  4278d7:	les    ebp,FWORD PTR [eax+0x44067747]
  4278dd:	popf   
  4278de:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4278df:	aam    0xac
  4278e1:	push   0x2484ad16
  4278e6:	(bad)  
  4278e8:	repz fidivr DWORD PTR [ecx]
  4278eb:	push   ebp
  4278ec:	sbb    al,0xd0
  4278ee:	jb     0x4278b0
  4278f0:	aaa    
  4278f1:	aaa    
  4278f2:	mov    dl,0x91
  4278f4:	or     BYTE PTR [edx+0x6d],al
  4278f7:	pop    esp
  4278f8:	add    eax,0x3dcf6dff
  4278fd:	fdiv   DWORD PTR [ecx]
  4278ff:	sub    al,0x7d
  427901:	sbb    DWORD PTR [ecx+0x1b190975],ebp
  427907:	xchg   esp,eax
  427908:	je     0x427916
  42790a:	(bad)  [eax]
  42790c:	outs   dx,BYTE PTR ds:[esi]
  42790d:	xchg   ebx,eax
  42790e:	jg     0x4278f8
  427910:	mov    ds:0xd77e3111,eax
  427915:	adc    DWORD PTR [edx+0x3],ecx
  427918:	aam    0xe2
  42791a:	pushf  
  42791b:	hlt    
  42791c:	jo     0x42798e
  42791e:	int    0x83
  427920:	lea    ebx,[edx]
  427922:	not    DWORD PTR [ebp+0x59]
  427925:	cdq    
  427926:	fucomi st,st(0)
  427928:	lods   eax,DWORD PTR ds:[esi]
  427929:	pop    ebx
  42792a:	scas   al,BYTE PTR es:[edi]
  42792b:	(bad)  ds:0xc8574b2c
  427931:	aad    0x20
  427933:	sbb    eax,0xceb740c0
  427938:	xor    edi,DWORD PTR [edi+0x193a0351]
  42793e:	loopne 0x42797f
  427940:	retf   0xed98
  427943:	mov    ds:0xc5f36bad,al
  427948:	repnz adc eax,0xef8ca62f
  42794e:	inc    ebp
  42794f:	and    al,BYTE PTR [esi+0x6a]
  427952:	call   DWORD PTR [ebp-0x6072419d]
  427958:	arpl   ax,si
  42795a:	inc    BYTE PTR [ecx+eax*4]
  42795d:	adc    BYTE PTR [edx+ecx*1-0x3b4d9141],dh
  427964:	inc    edi
  427965:	pop    esp
  427966:	dec    esi
  427967:	mov    esp,ebx
  427969:	fmul   DWORD PTR [ebp+eiz*1+0x34f506ad]
  427970:	cdq    
  427971:	push   0x8456dad6
  427976:	ins    BYTE PTR es:[edi],dx
  427977:	sub    edx,DWORD PTR [edi+edi*1-0x3a]
  42797b:	shr    dl,1
  42797d:	mov    bh,0x64
  42797f:	retf   
  427980:	sbb    DWORD PTR [edi+0x324b5c2b],edx
  427986:	pop    ss
  427987:	sbb    DWORD PTR [esi+0x70],edi
  42798a:	arpl   bp,di
  42798c:	mov    cl,0x8f
  42798e:	mov    WORD PTR [edx],?
  427990:	rcl    BYTE PTR [ebp+edi*1+0x5ad0a1fa],0x99
  427998:	sub    al,0xb8
  42799a:	mov    esp,0xb8415345
  42799f:	cmp    eax,0xe5ec6f32
  4279a4:	ins    DWORD PTR es:[edi],dx
  4279a5:	loopne 0x427959
  4279a7:	mov    bh,BYTE PTR [eax]
  4279a9:	jge    0x427954
  4279ab:	(bad)  
  4279ac:	fnsave [ecx+0x64]
  4279af:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4279b0:	and    BYTE PTR [ebp-0x71],dl
  4279b3:	jl     0x4279ed
  4279b5:	or     eax,0xba64ecd0
  4279ba:	out    0x3d,eax
  4279bc:	cli    
  4279bd:	aas    
  4279be:	or     al,0x8f
  4279c0:	push   ebx
  4279c1:	fimul  WORD PTR [ebx+ebx*8]
  4279c4:	pop    eax
  4279c5:	sub    al,0xa4
  4279c7:	stos   BYTE PTR es:[edi],al
  4279c8:	fsubr  DWORD PTR [edi]
  4279ca:	xor    esi,ecx
  4279cc:	mov    esp,esp
  4279ce:	cmp    DWORD PTR [edx],ebx
  4279d0:	sub    eax,0x6cdcc321
  4279d5:	inc    esi
  4279d6:	mov    ds:0x9901da89,al
  4279db:	sub    eax,0x1632a565
  4279e0:	sti    
  4279e1:	mov    ds,WORD PTR [edx-0x3e]
  4279e4:	pop    esi
  4279e5:	jmp    0x4279d9
  4279e7:	mov    ebp,0xfb7c1d1e
  4279ec:	leave  
  4279ed:	jae    0x427971
  4279ef:	cld    
  4279f0:	mov    bp,0xeee7
  4279f4:	pop    eax
  4279f5:	out    0x9b,eax
  4279f7:	nop
  4279f8:	js     0x427a22
  4279fa:	pop    ebx
  4279fb:	xor    eax,0xc7a491c7
  427a00:	jae    0x427a5d
  427a02:	mov    eax,ds:0x6335c1ac
  427a07:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  427a08:	mov    WORD PTR [esi+ecx*8],fs
  427a0b:	ret    
  427a0c:	or     DWORD PTR [ecx+0x37],ecx
  427a0f:	jns    0x4279ba
  427a11:	push   ss
  427a12:	or     cl,al
  427a14:	and    al,0x60
  427a16:	jbe    0x427a71
  427a18:	jmp    0x6c3f:0x7147
  427a1e:	inc    ebp
  427a1f:	test   BYTE PTR [ebp-0x1e],ch
  427a22:	loop   0x4279d8
  427a24:	outs   dx,DWORD PTR ds:[esi]
  427a25:	mov    cl,0x34
  427a27:	fdiv   QWORD PTR [edi+ecx*4]
  427a2a:	stos   DWORD PTR es:[edi],eax
  427a2b:	stc    
  427a2c:	imul   ecx,DWORD PTR [edx+0x3f],0x38cf47c6
  427a33:	call   0x3b0a:0x670d2c3a
  427a3a:	daa    
  427a3b:	ficom  WORD PTR [ebp+eiz*4-0x12a898aa]
  427a42:	div    DWORD PTR [edi-0x4660fad9]
  427a48:	push   ecx
  427a49:	mov    al,ds:0x24e534ca
  427a4e:	or     eax,ebx
  427a50:	mov    WORD PTR [edx],es
  427a52:	ins    BYTE PTR es:[edi],dx
  427a53:	cmp    edx,esp
  427a55:	aaa    
  427a56:	pop    eax
  427a57:	inc    esi
  427a58:	outs   dx,BYTE PTR ds:[esi]
  427a59:	mov    ebx,0x5ceaf9bb
  427a5e:	mov    al,0xbd
  427a60:	jnp    0x4279ee
  427a62:	mov    dh,0x40
  427a64:	(bad)  
  427a66:	or     eax,0xa9d5ac64
  427a6b:	scas   al,BYTE PTR es:[edi]
  427a6c:	and    eax,0xe34a793e
  427a71:	(bad)  
  427a72:	xchg   ecx,eax
  427a73:	mov    al,BYTE PTR [edx]
  427a75:	ds pop ebp
  427a77:	test   al,0xb6
  427a79:	pop    es
  427a7a:	call   0xb31f74d9
  427a7f:	jno    0x427a20
  427a81:	stc    
  427a82:	jmp    0x8dc5:0x6ec03b21
  427a89:	xchg   ch,dh
  427a8b:	loopne 0x427a68
  427a8d:	in     al,dx
  427a8e:	test   BYTE PTR [esi-0x71],dh
  427a91:	jge    0x427a88
  427a93:	xchg   WORD PTR gs:[ebx-0x111042be],ax
  427a9b:	or     DWORD PTR [edx],esi
  427a9d:	call   0x70633523
  427aa2:	mov    bl,0xb0
  427aa4:	cmp    ebp,eax
  427aa6:	mov    ?,WORD PTR [edx-0x13]
  427aa9:	sbb    bl,BYTE PTR [ecx+0x3f34fd88]
  427aaf:	xlat   BYTE PTR ds:[ebx]
  427ab0:	imul   ecx,DWORD PTR [eax-0x513f156],0xbb43ee52
  427aba:	mov    esi,0xbba8b15b
  427abf:	ins    DWORD PTR es:[edi],dx
  427ac0:	out    0xd2,al
  427ac2:	addr16 xor ch,al
  427ac5:	push   ss
  427ac6:	outs   dx,DWORD PTR ds:[esi]
  427ac7:	hlt    
  427ac8:	or     BYTE PTR [ebx-0x25],0x93
  427acc:	cmp    esp,ebp
  427ace:	repz jecxz 0x427b16
  427ad1:	shr    DWORD PTR [ebp-0x65],0x5c
  427ad5:	sbb    BYTE PTR [ecx],ah
  427ad7:	adc    DWORD PTR [ebp-0x7],0xfffffff7
  427adb:	jg     0x427a7a
  427add:	and    BYTE PTR [eax+0x58],0x6b
  427ae1:	push   ecx
  427ae2:	ins    BYTE PTR es:[edi],dx
  427ae3:	mov    DWORD PTR [ebx-0x6cf2e102],ecx
  427ae9:	fsubrp st(1),st
  427aeb:	and    dl,ah
  427aed:	int    0x6e
  427aef:	jg     0x427ae5
  427af1:	mov    ebx,0x5c07b72a
  427af6:	test   al,0x6b
  427af8:	xor    cl,dh
  427afa:	jbe    0x427b1f
  427afc:	(bad)
  427aff:	sub    DWORD PTR [ebx],esp
  427b01:	out    dx,eax
  427b02:	mov    edi,DWORD PTR ds:0xc0fb934f
  427b08:	mov    WORD PTR [ebp-0x5893012d],?
  427b0e:	jnp    0x427b34
  427b10:	add    bh,BYTE PTR [ecx]
  427b12:	cmp    al,0x50
  427b14:	stc    
  427b15:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  427b16:	dec    esp
  427b17:	cli    
  427b18:	dec    edi
  427b19:	jmp    0x427b29
  427b1b:	popf   
  427b1c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  427b1d:	dec    edx
  427b1e:	ror    BYTE PTR [edx],0x8e
  427b21:	sub    BYTE PTR [esp+eax*8+0x4c],cl
  427b25:	push   esi
  427b26:	inc    eax
  427b27:	jb     0x427ae4
  427b29:	inc    ecx
  427b2a:	pop    es
  427b2b:	rol    edx,0xae
  427b2e:	sbb    al,0x6a
  427b30:	call   FWORD PTR [ecx-0x57dff349]
  427b36:	push   ds
  427b37:	jp     0x427b85
  427b39:	(bad)  [edx+0x28]
  427b3c:	jecxz  0x427af4
  427b3e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  427b3f:	lds    esp,FWORD PTR [ebp-0x396eef27]
  427b45:	out    dx,eax
  427b46:	scas   al,BYTE PTR es:[edi]
  427b47:	push   ebp
  427b48:	outs   dx,BYTE PTR ds:[esi]
  427b49:	sub    DWORD PTR [esi-0x4c],esp
  427b4c:	mov    ds:0x34579edb,al
  427b51:	dec    esp
  427b52:	dec    edi
  427b53:	ret    
  427b54:	outs   dx,DWORD PTR ds:[esi]
  427b55:	add    DWORD PTR [edi+0x2595fa2f],0xffffffb3
  427b5c:	(bad)  
  427b5d:	popf   
  427b5e:	in     eax,dx
  427b5f:	cwde   
  427b60:	daa    
  427b61:	sti    
  427b62:	call   0x57ba57ad
  427b67:	(bad)  
  427b68:	jle    0x427b08
  427b6a:	cmp    eax,0x145a9983
  427b6f:	scas   al,BYTE PTR es:[edi]
  427b70:	mov    edi,0x5b7c7bed
  427b75:	cmp    al,0xda
  427b77:	add    dh,ah
  427b79:	ret    0x2793
  427b7c:	dec    DWORD PTR [esi]
  427b7e:	leave  
  427b7f:	sbb    BYTE PTR [ecx-0x6c],dl
  427b82:	inc    esi
  427b83:	sbb    dh,BYTE PTR [esi]
  427b85:	test   DWORD PTR [edx+0x70],esi
  427b88:	aaa    
  427b89:	sbb    BYTE PTR [edx],0xd6
  427b8c:	test   al,0xc4
  427b8e:	inc    edx
  427b8f:	fiadd  DWORD PTR [ecx]
  427b91:	fldcw  WORD PTR [ebx+0x36]
  427b94:	push   es
  427b95:	es lahf 
  427b97:	aas    
  427b98:	data16 loope 0x427bc8
  427b9b:	hlt    
  427b9c:	int    0x37
  427b9e:	js     0x427b2a
  427ba0:	or     BYTE PTR [edx+ebx*1+0x456c1869],bl
  427ba7:	dec    ecx
  427ba8:	sahf   
  427ba9:	xchg   ebp,eax
  427baa:	push   0xffffffad
  427bac:	mov    eax,0x3e4ee833
  427bb1:	sbb    dl,BYTE PTR [esi-0xc7ba97b]
  427bb7:	fsubr  st,st(1)
  427bb9:	test   al,0xed
  427bbb:	pop    es
  427bbc:	js     0x427bea
  427bbe:	sub    eax,edx
  427bc0:	dec    ebp
  427bc1:	ret    0xc3c3
  427bc4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  427bc5:	enter  0xa7fb,0x68
  427bc9:	inc    edx
  427bca:	(bad)  
  427bcb:	push   edx
  427bcc:	xchg   ecx,eax
  427bcd:	xlat   BYTE PTR ds:[ebx]
  427bce:	and    edx,DWORD PTR ds:0x13cc7516
  427bd4:	jo     0x427b61
  427bd6:	sbb    al,0xf1
  427bd8:	inc    edi
  427bd9:	fcomip st,st(2)
  427bdb:	sub    esp,DWORD PTR [edi]
  427bdd:	aas    
  427bde:	mov    al,0xfa
  427be0:	or     esp,DWORD PTR [edx+0x42]
  427be3:	adc    cl,BYTE PTR [ebp-0x593bde05]
  427be9:	imul   edx,DWORD PTR [edi+0x76],0xdd159953
  427bf0:	(bad)  
  427bf2:	and    al,0xc6
  427bf4:	sub    eax,0xb27bcffd
  427bf9:	pusha  
  427bfa:	fs cmc 
  427bfc:	jb     0x427c2d
  427bfe:	(bad)  
  427bff:	in     al,dx
  427c00:	mov    esi,0xf4e726e5
  427c05:	push   ss
  427c06:	int    0x66
  427c08:	stos   BYTE PTR es:[edi],al
  427c09:	lock scas al,BYTE PTR es:[edi]
  427c0b:	push   ebx
  427c0c:	push   ebx
  427c0d:	pop    ebp
  427c0e:	sub    eax,0x898cbe7d
  427c13:	jns    0x427ba1
  427c15:	and    eax,DWORD PTR [ebp-0xa6ef2f3]
  427c1b:	in     al,dx
  427c1c:	jno    0x427c56
  427c1e:	xchg   DWORD PTR [esi],edx
  427c20:	aas    
  427c21:	int3   
  427c22:	or     BYTE PTR [edi+ebx*1-0x2f],dh
  427c26:	and    BYTE PTR [eax+0x1242f623],al
  427c2c:	inc    ebx
  427c2d:	dec    edi
  427c2e:	xchg   esi,eax
  427c2f:	pop    eax
  427c30:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  427c31:	mov    cl,0x26
  427c33:	dec    ebx
  427c34:	(bad)  
  427c35:	push   ebp
  427c36:	out    0xea,al
  427c38:	or     edx,esp
  427c3a:	pop    ebx
  427c3b:	inc    esi
  427c3c:	ss jo  0x427bff
  427c3f:	cmp    edx,edx
  427c41:	pop    ecx
  427c42:	repz lock int3 
  427c45:	mov    ebp,0xa15acbda
  427c4a:	add    edi,DWORD PTR [ebx-0x24]
  427c4d:	mov    ch,0x4b
  427c4f:	push   esi
  427c50:	mov    bl,0x41
  427c52:	retf   
  427c53:	and    DWORD PTR [eax+0x297309ae],esp
  427c59:	and    ecx,DWORD PTR [eax-0x6a2c15ea]
  427c5f:	jl     0x427c84
  427c61:	add    dh,bh
  427c63:	repz aaa 
  427c65:	fidiv  WORD PTR [eax-0x14]
  427c68:	call   0x267636e
  427c6d:	and    edx,DWORD PTR [ebx]
  427c6f:	fiadd  DWORD PTR [edi]
  427c71:	mov    esi,0x9ea9ae6d
  427c76:	and    BYTE PTR ds:0x6078bdf,ch
  427c7c:	repnz imul esp,ecx,0x15b7802a
  427c83:	inc    ebp
  427c84:	rcr    BYTE PTR [edi+0xdaa8050],cl
  427c8a:	ins    BYTE PTR es:[edi],dx
  427c8b:	jle    0x427c1b
  427c8d:	iret   
  427c8e:	aam    0x13
  427c90:	xchg   esp,eax
  427c91:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  427c92:	mov    ebx,0xa86a183c
  427c97:	jl     0x427cdd
  427c99:	adc    BYTE PTR [ebp-0x6e],al
  427c9c:	xor    ah,BYTE PTR [edi-0x31d08e09]
  427ca2:	out    0xb3,eax
  427ca4:	inc    esi
  427ca5:	push   es
  427ca6:	dec    edx
  427ca7:	xchg   DWORD PTR [eax+edx*8],ecx
  427caa:	rol    BYTE PTR [ebp+0x33e4bdb1],1
  427cb0:	dec    edi
  427cb1:	fadd   DWORD PTR [edi+0x36]
  427cb4:	in     al,0x97
  427cb6:	sbb    BYTE PTR [ecx+0x69],0x68
  427cba:	sub    BYTE PTR ds:[eax],dl
  427cbd:	add    DWORD PTR [edx],ecx
  427cbf:	iret   
  427cc0:	pop    edx
  427cc1:	xlat   BYTE PTR ds:[ebx]
  427cc2:	push   eax
  427cc3:	daa    
  427cc4:	popa   
  427cc5:	dec    edi
  427cc6:	aaa    
  427cc7:	outs   dx,DWORD PTR ds:[esi]
  427cc8:	jle    0x427ca0
  427cca:	jp     0x427d4b
  427ccc:	lods   eax,DWORD PTR ds:[esi]
  427ccd:	jp     0x427cf3
  427ccf:	pop    ebp
  427cd0:	outs   dx,BYTE PTR ds:[esi]
  427cd1:	aad    0x9b
  427cd3:	ins    BYTE PTR es:[edi],dx
  427cd4:	or     eax,0x6d3f9a0
  427cd9:	dec    ebx
  427cda:	sub    esi,ebx
  427cdc:	rol    bl,cl
  427cde:	pop    ebp
  427cdf:	cld    
  427ce0:	mov    ch,0x1f
  427ce2:	push   0x7c
  427ce4:	sbb    cl,dh
  427ce6:	sbb    bh,BYTE PTR [eax-0x677171fa]
  427cec:	or     dl,BYTE PTR [edi+0x6a]
  427cef:	push   es
  427cf0:	cmp    BYTE PTR [ecx-0x3d],ah
  427cf3:	dec    edi
  427cf4:	xchg   ecx,eax
  427cf5:	mov    cl,0xe7
  427cf7:	push   ecx
  427cf8:	repnz sbb BYTE PTR ds:0x3b34d4b6,dh
  427cff:	jmp    0xbe60:0x91e58314
  427d06:	aad    0x14
  427d08:	xchg   ebx,eax
  427d09:	sbb    ah,bh
  427d0b:	mov    DWORD PTR [ebx+0x56],0x629e9726
  427d12:	push   edi
  427d13:	sti    
  427d14:	in     al,0x96
  427d16:	mov    ch,0xe2
  427d18:	mov    bh,0x56
  427d1a:	cmp    ecx,esi
  427d1c:	(bad)  
  427d1d:	and    ebp,esp
  427d1f:	pop    edx
  427d20:	test   eax,0x8fe683a4
  427d25:	cmp    dh,cl
  427d27:	sub    cl,BYTE PTR [ebx]
  427d29:	sub    DWORD PTR [eax+ebx*1-0x47],edx
  427d2d:	clc    
  427d2e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  427d2f:	xor    BYTE PTR [eax],ch
  427d31:	call   0xc5b5:0x91eecf78
  427d38:	push   ebx
  427d39:	xchg   edx,eax
  427d3a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  427d3b:	sub    eax,0x26cb7442
  427d40:	lods   al,BYTE PTR ds:[esi]
  427d41:	pop    ebp
  427d42:	inc    ebp
  427d43:	cmp    BYTE PTR ds:0x54513527,ah
  427d49:	ja     0x427d9c
  427d4b:	and    BYTE PTR [ecx-0x61],0x37
  427d4f:	add    DWORD PTR [ebx],esi
  427d51:	jb     0x427ce9
  427d53:	shl    bl,cl
  427d55:	mov    DWORD PTR [ebp-0xe],ebx
  427d58:	sar    dh,1
  427d5a:	ficomp WORD PTR cs:[esi+0x29424236]
  427d61:	pop    eax
  427d62:	and    eax,0xa8d978c8
  427d67:	hlt    
  427d68:	stos   BYTE PTR es:[edi],al
  427d69:	or     BYTE PTR [esi-0x6645905f],0xc3
  427d70:	or     DWORD PTR [eax],ecx
  427d72:	ret    0x2384
  427d75:	pop    edx
  427d76:	xchg   esp,eax
  427d77:	out    0x17,al
  427d79:	out    0xfc,eax
  427d7b:	xor    DWORD PTR [edi],0xb5a93cc4
  427d81:	adc    DWORD PTR [edx],0xf406a6e8
  427d87:	pop    edx
  427d88:	call   0x3187:0x7a1f9c41
  427d8f:	inc    esi
  427d90:	jae    0x427d3f
  427d92:	and    dh,0x68
  427d95:	xor    DWORD PTR [esi+0x2e],ecx
  427d98:	adc    cl,bh
  427d9a:	aad    0xad
  427d9c:	enter  0xad59,0x69
  427da0:	add    al,BYTE PTR [edi+ebx*1]
  427da3:	adc    dl,BYTE PTR [edx]
  427da5:	pop    ebx
  427da6:	cmp    eax,esi
  427da8:	ja     0x427d46
  427daa:	or     al,0x84
  427dac:	ins    DWORD PTR es:[edi],dx
  427dad:	pop    eax
  427dae:	hlt    
  427daf:	or     BYTE PTR [edx-0x5d],al
  427db2:	cs pop ebp
  427db4:	outs   dx,BYTE PTR ds:[esi]
  427db5:	mov    ss,esi
  427db7:	mov    ch,0x15
  427db9:	inc    esi
  427dba:	retf   
  427dbb:	pop    ebx
  427dbc:	sub    ebx,0x60
  427dbf:	mov    ds:0x232ebb66,eax
  427dc4:	repnz loop 0x427d52
  427dc7:	push   esi
  427dc8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  427dc9:	imul   edi,DWORD PTR [ebx+esi*4+0x36],0x4d
  427dce:	xor    DWORD PTR [edi+0x6e],edx
  427dd1:	mov    ch,bh
  427dd3:	mov    esi,0xfc389b4a
  427dd8:	sbb    BYTE PTR [esi+0x108aea74],bl
  427dde:	sub    BYTE PTR [ebx+0x542731ab],dh
  427de4:	loop   0x427d82
  427de6:	scas   eax,DWORD PTR es:[edi]
  427de7:	mov    ds:0x95749395,eax
  427dec:	test   esp,eax
  427dee:	pop    ebx
  427def:	dec    ebp
  427df0:	sbb    eax,DWORD PTR [edx]
  427df2:	push   ebx
  427df3:	push   ds
  427df4:	call   0xaf9f:0xe4ddc10b
  427dfb:	scas   al,BYTE PTR es:[edi]
  427dfc:	and    bh,cl
  427dfe:	xlat   BYTE PTR ds:[ebx]
  427dff:	shr    BYTE PTR [ecx],1
  427e01:	sub    eax,0x4bb01f2f
  427e06:	in     al,dx
  427e07:	lock out 0x73,al
  427e0a:	mov    esi,0x270c7c63
  427e0f:	sbb    cl,bh
  427e11:	aad    0xca
  427e13:	mov    cl,0x61
  427e15:	adc    BYTE PTR [ebp+eiz*1-0x7],al
  427e19:	js     0x427dfd
  427e1b:	push   ecx
  427e1c:	test   eax,0xe9d98edc
  427e21:	test   al,0xe4
  427e23:	jno    0x427dfd
  427e25:	imul   esi,DWORD PTR [ecx+0x151af6],0xe1e061b0
  427e2f:	rol    BYTE PTR [esi],0xaa
  427e32:	sub    al,0xa0
  427e34:	mul    DWORD PTR [edi]
  427e36:	sbb    al,0xc6
  427e38:	in     al,dx
  427e39:	lds    edi,FWORD PTR [ecx-0x75]
  427e3c:	pop    ecx
  427e3d:	pop    edi
  427e3e:	ficomp DWORD PTR [esi-0x28]
  427e41:	aaa    
  427e42:	leave  
  427e43:	xchg   edx,eax
  427e44:	loope  0x427e27
  427e46:	inc    esi
  427e47:	xor    esp,ecx
  427e49:	jmp    0x427e95
  427e4b:	inc    eax
  427e4c:	std    
  427e4d:	fdiv   DWORD PTR [edx+0x6d]
  427e50:	sub    esi,eax
  427e52:	adc    ah,BYTE PTR [edx]
  427e54:	(bad)  
  427e55:	pop    edi
  427e56:	mov    DWORD PTR [edi],edi
  427e58:	pushf  
  427e59:	push   ebp
  427e5a:	or     eax,0x3e4382c1
  427e5f:	lods   al,BYTE PTR ds:[esi]
  427e60:	jns    0x427ed7
  427e62:	fst    st(6)
  427e64:	je     0x427e69
  427e66:	inc    ebx
  427e67:	add    DWORD PTR [edi],eax
  427e69:	xchg   BYTE PTR [edi+0x6c181c25],dh
  427e6f:	mov    ds:0x3db091a9,eax
  427e74:	bound  eax,QWORD PTR ds:[edx]
  427e77:	in     eax,dx
  427e78:	jge    0x427e38
  427e7a:	and    ah,BYTE PTR [edx]
  427e7c:	mov    ah,0xb9
  427e7e:	scas   eax,DWORD PTR es:[edi]
  427e7f:	scas   eax,DWORD PTR es:[edi]
  427e80:	push   edx
  427e81:	bsr    ebx,DWORD PTR [edx+0x327f30c3]
  427e88:	and    eax,0x1d2d98c8
  427e8d:	and    DWORD PTR [edi],0x9c7f8862
  427e93:	shr    BYTE PTR [eax],0xcf
  427e96:	cmp    eax,edi
  427e98:	cli    
  427e99:	ror    ebx,1
  427e9b:	aas    
  427e9c:	fwait
  427e9d:	mov    WORD PTR [ecx+0x6d],fs
  427ea0:	mov    esp,0x79b0253b
  427ea5:	rcl    BYTE PTR ds:0xa1602c01,cl
  427eab:	mov    edi,0xcd8c8b49
  427eb0:	stc    
  427eb1:	daa    
  427eb2:	push   eax
  427eb3:	mov    ecx,0xf38f80bf
  427eb8:	addr16 aam 0x5a
  427ebb:	lods   al,BYTE PTR ds:[esi]
  427ebc:	clc    
  427ebd:	lahf   
  427ebe:	in     eax,dx
  427ebf:	xchg   edi,eax
  427ec0:	ss loopne 0x427eb6
  427ec3:	fucomip st,st(1)
  427ec5:	sub    eax,0xf2e1a45f
  427eca:	jle    0x427efa
  427ecc:	mov    ds:0x895182d5,al
  427ed1:	test   al,0x47
  427ed3:	cmp    cl,dl
  427ed5:	idiv   bh
  427ed7:	inc    ebx
  427ed8:	or     al,0x4
  427eda:	data16 jg 0x427e89
  427edd:	lahf   
  427ede:	xlat   BYTE PTR ds:[ebx]
  427edf:	cmc    
  427ee0:	sbb    al,0x2e
  427ee2:	icebp  
  427ee3:	call   0xce12:0x3059e340
  427eea:	clc    
  427eeb:	pusha  
  427eec:	hlt    
  427eed:	adc    ch,BYTE PTR [ebx]
  427eef:	mov    BYTE PTR [esi],cl
  427ef1:	stos   BYTE PTR es:[edi],al
  427ef2:	and    al,0x37
  427ef4:	ja     0x427f02
  427ef6:	sti    
  427ef7:	in     eax,dx
  427ef8:	jnp    0x427f62
  427efa:	aas    
  427efb:	ds pop ds
  427efd:	fbstp  TBYTE PTR gs:[edx+ecx*1+0xa]
  427f02:	jecxz  0x427ede
  427f04:	pop    edx
  427f05:	pop    es
  427f06:	shl    BYTE PTR [eax+0x19],cl
  427f09:	loope  0x427ebb
  427f0b:	pop    edx
  427f0c:	and    BYTE PTR [esi],dl
  427f0e:	inc    edx
  427f0f:	sbb    bl,dl
  427f11:	cli    
  427f12:	sbb    ch,BYTE PTR [esi+0x53]
  427f15:	add    dl,bh
  427f17:	fidivr WORD PTR [ecx-0x7b]
  427f1a:	ret    
  427f1b:	pop    ss
  427f1c:	mov    edi,0x90944954
  427f21:	ins    BYTE PTR es:[edi],dx
  427f22:	add    eax,0xfb09e8e0
  427f27:	xor    eax,0x371bc8c0
  427f2c:	cmc    
  427f2d:	out    dx,eax
  427f2e:	pop    ebx
  427f2f:	cmp    ch,0x8
  427f32:	and    ch,dl
  427f34:	lods   eax,DWORD PTR ds:[esi]
  427f35:	adc    BYTE PTR [ebp+eax*2-0x4bc23cad],dl
  427f3c:	xor    al,0x9c
  427f3e:	sar    BYTE PTR [ebp*1+0x1badf52c],cl
  427f45:	add    eax,0xc53ffd9a
  427f4a:	ficom  DWORD PTR [ecx+0x24]
  427f4d:	dec    ebp
  427f4e:	add    al,ah
  427f50:	ror    DWORD PTR ds:0x40a65ab8,0xd9
  427f57:	xor    eax,0x1e09eb18
  427f5c:	aad    0x87
  427f5e:	lds    eax,FWORD PTR [eax]
  427f60:	jne    0x427f18
  427f62:	adc    eax,0x291a6452
  427f67:	(bad)  
  427f68:	leave  
  427f69:	(bad)  
  427f6a:	cli    
  427f6b:	popf   
  427f6c:	int    0x9c
  427f6e:	test   al,0xac
  427f70:	stc    
  427f71:	dec    esp
  427f72:	or     eax,0x76b3766a
  427f77:	push   esp
  427f78:	es loop 0x427fef
  427f7b:	mov    edx,0xcd945c75
  427f80:	mov    edx,0x8e2a3d6e
  427f85:	sahf   
  427f86:	cmp    eax,0x2d27e28e
  427f8b:	and    eax,0x7ad07355
  427f90:	mov    gs,ecx
  427f92:	test   BYTE PTR [eax-0x4d],0xc3
  427f96:	dec    esp
  427f97:	repz push 0x2a7648b0
  427f9d:	in     eax,0xe8
  427f9f:	fisub  WORD PTR [eax]
  427fa1:	jbe    0x427feb
  427fa3:	inc    edi
  427fa4:	sub    ecx,DWORD PTR [ebp+0x4f]
  427fa7:	ds (bad) 
  427fa9:	cmp    al,0x86
  427fab:	mov    ebp,0xd282e2a7
  427fb0:	mov    esi,0x9d224550
  427fb5:	xchg   esp,eax
  427fb6:	fidivr DWORD PTR [eax]
  427fb8:	push   ebx
  427fb9:	adc    DWORD PTR [ebp+0x18ac7376],esi
  427fbf:	fs or  ebp,eax
  427fc2:	mov    dh,0x13
  427fc4:	xor    BYTE PTR [esp+ebp*1-0x492101ca],bh
  427fcb:	shl    BYTE PTR [ebx-0x37],0x40
  427fcf:	and    ah,BYTE PTR [ecx-0x537b9161]
  427fd5:	xor    cl,BYTE PTR [esi+0x61]
  427fd8:	aas    
  427fd9:	xor    edx,0xffffff94
  427fdc:	ins    DWORD PTR es:[edi],dx
  427fdd:	mov    DWORD PTR [eax],esp
  427fdf:	sbb    BYTE PTR ds:0x3fd9741c,bh
  427fe5:	cs push esp
  427fe7:	mov    WORD PTR [ecx+eiz*4],fs
  427fea:	call   0x9cae:0x3dad5b10
  427ff1:	push   ds
  427ff2:	std    
  427ff3:	mov    BYTE PTR [ebx-0x7b525ac],ch
  427ff9:	call   0xa52b178e
  427ffe:	les    esi,FWORD PTR [ebp+esi*1+0xc8225fc]
  428005:	fwait
  428006:	rcr    BYTE PTR [edi-0x6c8b8e02],cl
  42800c:	(bad)  
  42800d:	fwait
  42800e:	mov    edx,0x4892aa26
  428013:	(bad)  
  428014:	stos   BYTE PTR es:[edi],al
  428015:	xor    ch,BYTE PTR [ebx+0x6bddc4ab]
  42801b:	mov    al,ds:0xcbbb1829
  428020:	xor    eax,0x5a8cde89
  428025:	mov    esi,DWORD PTR [edx-0x449a22d2]
  42802b:	scas   eax,DWORD PTR es:[edi]
  42802c:	jp     0x428059
  42802e:	jbe    0x428093
  428030:	pop    edi
  428031:	repz pusha 
  428033:	test   al,0xab
  428035:	dec    ecx
  428036:	outs   dx,BYTE PTR ds:[esi]
  428037:	jp     0x427fdf
  428039:	pop    ebx
  42803a:	pop    ebp
  42803b:	lahf   
  42803c:	in     eax,dx
  42803d:	or     bh,ah
  42803f:	and    dh,BYTE PTR [edx+0x13f74726]
  428045:	mov    dh,0xc8
  428047:	pop    eax
  428048:	sub    al,0xc9
  42804a:	or     DWORD PTR [eax-0x2cf8e59e],esp
  428050:	push   ds
  428051:	xchg   edi,eax
  428052:	jbe    0x42808e
  428054:	mov    WORD PTR [ecx],?
  428056:	out    dx,eax
  428057:	imul   ecx,ecx,0xffffffc4
  42805a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42805b:	xor    eax,0x7e43dd2a
  428060:	pop    ecx
  428061:	arpl   WORD PTR [ebx-0x13],sp
  428064:	or     DWORD PTR [ebp+0x420de8e4],eax
  42806a:	pop    esp
  42806b:	cmp    DWORD PTR [edx+0x7bbc8117],0x2b300d39
  428075:	stos   BYTE PTR es:[edi],al
  428076:	inc    edx
  428077:	jns    0x42802f
  428079:	push   ebx
  42807a:	daa    
  42807b:	mov    ah,0x39
  42807d:	fistp  QWORD PTR [ecx+0xba6c8b0]
  428083:	fwait
  428084:	outs   dx,BYTE PTR ds:[esi]
  428085:	in     eax,0xfa
  428087:	out    dx,al
  428088:	ja     0x4280b9
  42808a:	or     dh,BYTE PTR [ebx-0x14]
  42808d:	push   ebp
  42808e:	dec    edx
  42808f:	xchg   ebx,eax
  428090:	xor    al,0x13
  428092:	sti    
  428093:	nop
  428094:	xor    al,0xe4
  428096:	pop    ss
  428097:	sub    edx,DWORD PTR [esi+esi*1+0x60e0ad92]
  42809e:	mov    DWORD PTR [ebx+0xfc5aa63],edx
  4280a4:	outs   dx,BYTE PTR ds:[esi]
  4280a5:	imul   ebx,esi,0x61
  4280a8:	pop    es
  4280a9:	adc    DWORD PTR [ebx+ebx*4],ecx
  4280ac:	push   0x16
  4280ae:	ins    DWORD PTR es:[edi],dx
  4280af:	loope  0x4280bb
  4280b1:	jecxz  0x4280cd
  4280b3:	mov    cl,0x1d
  4280b5:	mov    bh,0xcb
  4280b7:	adc    ebp,DWORD PTR [esi-0x3c0d5d3f]
  4280bd:	mov    esp,0x26aed322
  4280c2:	push   edx
  4280c3:	xchg   edi,eax
  4280c4:	inc    esp
  4280c5:	mov    ebx,0xe6f08496
  4280ca:	xor    DWORD PTR [edi+0x10],ebx
  4280cd:	fnsave [edx-0x674ed501]
  4280d3:	bound  eax,QWORD PTR [ecx-0x774c9ab3]
  4280d9:	push   es
  4280da:	in     al,dx
  4280db:	daa    
  4280dc:	inc    ebp
  4280dd:	push   ss
  4280de:	jecxz  0x428067
  4280e0:	retf   0xf175
  4280e3:	clc    
  4280e4:	je     0x428156
  4280e6:	mov    ah,0x24
  4280e8:	repnz cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4280ea:	add    BYTE PTR [edi],bl
  4280ec:	jb     0x42806f
  4280ee:	sub    eax,0xecadc849
  4280f3:	ret    
  4280f4:	ret    
  4280f5:	xchg   DWORD PTR [eax-0x2324e34b],ebp
  4280fb:	outs   dx,BYTE PTR ds:[esi]
  4280fc:	adc    dl,dl
  4280fe:	add    esp,eax
  428100:	cmp    al,ah
  428102:	ret    
  428103:	test   al,0x76
  428105:	cdq    
  428106:	jne    0xd8a7e4ce
  42810c:	mov    eax,ds:0xfff12dd4
  428111:	cdq    
  428112:	es jnp 0x42813c
  428115:	adc    BYTE PTR [esi],ah
  428117:	jbe    0x428189
  428119:	jbe    0x42812d
  42811b:	inc    eax
  42811c:	les    ecx,FWORD PTR [eax+ebx*8]
  42811f:	mov    al,ds:0x7454b332
  428124:	jno    0x428164
  428126:	adc    al,0xf3
  428128:	es stos DWORD PTR es:[edi],eax
  42812a:	not    BYTE PTR [ebx]
  42812c:	push   ebp
  42812d:	int    0xdd
  42812f:	into   
  428130:	jmp    0x42814f
  428132:	fcmovne st,st(7)
  428134:	sub    cl,BYTE PTR [ecx+edi*1]
  428137:	adc    eax,0x4eb43fbf
  42813c:	push   esp
  42813d:	mov    bh,BYTE PTR [esi+0x78]
  428140:	popf   
  428141:	ins    DWORD PTR es:[edi],dx
  428142:	or     al,0x59
  428144:	or     DWORD PTR [edx+ebx*8+0x5d6a2c50],ecx
  42814b:	mov    al,0x3a
  42814d:	mov    al,ds:0x1c5a6d81
  428152:	sbb    DWORD PTR [edx+edi*1-0x2e],ecx
  428156:	cmpxchg DWORD PTR [ebx],edi
  428159:	enter  0x3da1,0xa7
  42815d:	in     eax,0xa9
  42815f:	clc    
  428160:	leave  
  428161:	and    DWORD PTR [edx-0x16840e9d],0x36
  428168:	xchg   edi,eax
  428169:	pop    ebp
  42816a:	(bad)  
  42816b:	xor    edi,DWORD PTR [eax+ecx*1-0x63]
  42816f:	cmp    bl,BYTE PTR [ebp+0x66]
  428172:	loopne 0x428195
  428174:	loope  0x428117
  428176:	mov    ds:0xdc639459,al
  42817b:	test   BYTE PTR [eax-0x7c],0x55
  42817f:	outs   dx,DWORD PTR ds:[esi]
  428180:	imul   eax,DWORD PTR [ecx],0x4f20a83f
  428186:	inc    edi
  428187:	xor    esi,ecx
  428189:	out    dx,eax
  42818a:	sbb    eax,0x228a392b
  42818f:	and    ch,BYTE PTR [edx-0x6d]
  428192:	xor    DWORD PTR [edi],ebx
  428194:	es dec edi
  428196:	sbb    DWORD PTR [edi-0x1d],ebx
  428199:	fdivr  st(0),st
  42819b:	pop    es
  42819c:	lea    eax,[eax-0x6d]
  42819f:	in     eax,0x71
  4281a1:	push   ss
  4281a2:	pop    ebx
  4281a3:	lods   eax,DWORD PTR ds:[esi]
  4281a4:	jbe    0x428160
  4281a6:	add    dh,dh
  4281a8:	or     edi,DWORD PTR [esi+0x731735e2]
  4281ae:	pop    edi
  4281af:	in     eax,dx
  4281b0:	jbe    0x42819a
  4281b2:	inc    esp
  4281b3:	mov    al,BYTE PTR [ebx-0x11]
  4281b6:	xchg   BYTE PTR [ecx+0x6c5a7d0a],al
  4281bc:	mov    bh,0x8e
  4281be:	and    ebx,edx
  4281c0:	lahf   
  4281c1:	imul   esi,edi,0xffffffd7
  4281c4:	push   esp
  4281c5:	mov    WORD PTR [edx-0x6ccfae7b],cs
  4281cb:	mov    ebp,0x7a8ea736
  4281d0:	inc    ebp
  4281d1:	pop    ebx
  4281d2:	mov    al,0xb0
  4281d4:	mov    ch,0xe1
  4281d6:	(bad)  
  4281d7:	(bad)  
  4281d8:	jb     0x428176
  4281da:	add    eax,0xd5552899
  4281df:	push   edx
  4281e0:	mov    esp,0x712c64bd
  4281e5:	or     esp,esi
  4281e7:	mov    esi,0xbc12f9ef
  4281ec:	outs   dx,DWORD PTR ds:[esi]
  4281ed:	mov    ch,0x71
  4281ef:	shr    DWORD PTR [eax],0x70
  4281f2:	xchg   edi,eax
  4281f3:	pusha  
  4281f4:	int    0x56
  4281f6:	adc    ebp,DWORD PTR [esi+0x6ea63150]
  4281fc:	inc    ebx
  4281fd:	jns    0x42821f
  4281ff:	push   eax
  428200:	int3   
  428201:	enter  0xa43f,0x72
  428205:	mov    esp,0xb92910f0
  42820a:	mov    eax,ds:0xdc5adb5b
  42820f:	ret    
  428210:	lock pop ebp
  428212:	or     DWORD PTR [eax],esi
  428214:	outs   dx,BYTE PTR ds:[esi]
  428215:	iret   
  428216:	rcr    bh,cl
  428218:	cmp    ecx,DWORD PTR ds:0x134c19ff
  42821e:	ret    0xbed6
  428221:	push   eax
  428222:	push   es
  428223:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  428224:	xor    al,0xc
  428226:	and    dh,BYTE PTR [esi+eax*1-0x3c]
  42822a:	cmp    ah,BYTE PTR [ecx+ebx*8]
  42822d:	sahf   
  42822e:	mov    ebp,ss
  428230:	ret    
  428231:	fldz   
  428233:	push   edi
  428234:	imul   edi,DWORD PTR [ebx-0x5ad43b16],0x23
  42823b:	imul   esi,DWORD PTR [edx+ebp*1+0x33ee4f73],0xafaccdd5
  428246:	mov    cl,0xae
  428248:	sbb    ecx,esi
  42824a:	jb     0x428214
  42824c:	sub    esp,DWORD PTR [ebx+0x3df7eaa7]
  428252:	outs   dx,BYTE PTR ds:[esi]
  428253:	fcmovb st,st(1)
  428255:	ds xchg edi,eax
  428257:	xor    edi,DWORD PTR [esi-0x2b]
  42825a:	imul   dh
  42825c:	out    0x5c,al
  42825e:	sahf   
  42825f:	jge    0x428238
  428261:	dec    esi
  428262:	enter  0x39eb,0x48
  428266:	mov    bh,0xbc
  428268:	shl    DWORD PTR [edi],0x16
  42826b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42826c:	push   ebp
  42826d:	mov    BYTE PTR [esp+ebp*8+0x5466af84],al
  428274:	add    DWORD PTR [eax-0x6e],ebx
  428277:	std    
  428278:	sub    ebp,DWORD PTR [esi+edi*1-0x51b75bed]
  42827f:	mov    cl,0x95
  428281:	data16 xor al,0x20
  428284:	xchg   ecx,eax
  428285:	xor    edi,eax
  428287:	and    esp,edi
  428289:	inc    ebx
  42828a:	ds add bl,dl
  42828d:	lods   eax,DWORD PTR ds:[esi]
  42828e:	cmp    DWORD PTR ds:0x29166662,ebp
  428294:	sub    al,0x38
  428296:	add    dh,BYTE PTR [edx]
  428298:	dec    eax
  428299:	xchg   al,bh
  42829b:	and    BYTE PTR [edx],al
  42829d:	mov    esp,0x5c1cf605
  4282a2:	xor    eax,0x725ce7a
  4282a7:	outs   dx,BYTE PTR ds:[esi]
  4282a8:	and    BYTE PTR [edi+0x2],bh
  4282ab:	aas    
  4282ac:	lahf   
  4282ad:	cmp    eax,0x89e7cd35
  4282b2:	js     0x4282de
  4282b4:	inc    edi
  4282b5:	pop    ds
  4282b6:	xchg   DWORD PTR [ecx+esi*4+0x35a77a20],ebx
  4282bd:	je     0x4282d0
  4282bf:	inc    ebp
  4282c0:	ficom  DWORD PTR [edi+edx*2]
  4282c3:	cmp    bh,ch
  4282c5:	add    bl,al
  4282c7:	cmp    al,0xf2
  4282c9:	test   BYTE PTR ds:0x6900e3d1,bh
  4282cf:	test   al,cl
  4282d1:	fcmovb st,st(7)
  4282d3:	scas   eax,DWORD PTR es:[edi]
  4282d4:	mov    dh,0xf8
  4282d6:	mov    ch,0xaf
  4282d8:	aam    0x37
  4282da:	ds pop eax
  4282dc:	dec    eax
  4282dd:	mov    ecx,0x10cd2acd
  4282e2:	rcl    BYTE PTR ds:0x9c881a4a,0x3e
  4282e9:	(bad)  
  4282ea:	arpl   WORD PTR [edi+edi*2],sp
  4282ed:	xchg   ebx,eax
  4282ee:	xor    bh,ah
  4282f0:	xchg   esp,eax
  4282f1:	test   BYTE PTR [edx],cl
  4282f3:	jae    0x42831d
  4282f5:	adc    eax,0x15650103
  4282fa:	jge    0x4282d5
  4282fc:	icebp  
  4282fd:	scas   al,BYTE PTR es:[edi]
  4282fe:	sub    edx,ecx
  428300:	cmp    eax,0xc868c445
  428305:	and    bh,bh
  428307:	mov    dh,0xec
  428309:	cmp    eax,0xb57e28ab
  42830e:	or     BYTE PTR [edi+ecx*2],0x6d
  428312:	adc    BYTE PTR [eax+0x2ffa6159],0x75
  428319:	jb     0x428399
  42831b:	adc    BYTE PTR [edx+eiz*4-0x6c2f0f99],ah
  428322:	push   edx
  428323:	push   esp
  428324:	stos   DWORD PTR es:[edi],eax
  428325:	iret   
  428326:	inc    esp
  428327:	mov    al,ds:0xee7c67fb
  42832c:	mov    edx,0xbc907837
  428331:	inc    esp
  428332:	jg     0x4282e5
  428334:	data16 mov ch,0xc3
  428337:	in     eax,dx
  428338:	add    DWORD PTR [ebx+0x678fd279],0x1d6b9b8d
  428342:	pushf  
  428343:	jno    0x428315
  428345:	jle    0x42831f
  428347:	(bad)  
  428348:	in     al,dx
  428349:	lds    ebp,FWORD PTR [ecx+0x777bcc92]
  42834f:	inc    edi
  428350:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  428351:	cmp    BYTE PTR [eax],0x68
  428354:	pusha  
  428355:	add    ebp,ebx
  428357:	aas    
  428358:	inc    eax
  428359:	sahf   
  42835a:	or     DWORD PTR [eax],edx
  42835c:	dec    eax
  42835d:	push   edx
  42835e:	xchg   ebp,eax
  42835f:	and    BYTE PTR [esi-0x11],bh
  428362:	xlat   BYTE PTR ds:[ebx]
  428363:	jecxz  0x4283be
  428365:	dec    eax
  428366:	adc    al,0x73
  428368:	addr16 and eax,0x41aa2773
  42836e:	xchg   esp,eax
  42836f:	dec    edi
  428370:	int    0x49
  428372:	push   eax
  428373:	add    BYTE PTR [eax],bl
  428375:	fldcw  WORD PTR [ebp*8-0x507f1357]
  42837c:	mov    ds:0xb0d22983,eax
  428381:	mov    DWORD PTR [edi-0x73],ebx
  428384:	add    edi,DWORD PTR [ebx]
  428386:	mov    BYTE PTR [edx+0x56d0de6d],bl
  42838c:	adc    ch,BYTE PTR [ebx+0x3c19824a]
  428392:	xchg   ebp,eax
  428393:	(bad)  [edx]
  428395:	or     al,0x6
  428397:	(bad)  
  428398:	fistp  QWORD PTR [esi+0x2ab7a967]
  42839e:	aaa    
  42839f:	jecxz  0x4283ff
  4283a1:	bnd jno 0x428339
  4283a4:	sbb    eax,0x93be5c1e
  4283a9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4283aa:	cmp    ch,BYTE PTR [eax]
  4283ac:	and    DWORD PTR [ebx+0x48],edx
  4283af:	es inc ebp
  4283b1:	fadd   QWORD PTR [edi+0x14ba3502]
  4283b7:	push   ds
  4283b8:	push   cs
  4283b9:	leave  
  4283ba:	inc    edx
  4283bb:	popf   
  4283bc:	repz pop edi
  4283be:	imul   eax,DWORD PTR [eax+0x16b065e9],0x49873b8e
  4283c8:	push   ds
  4283c9:	mov    WORD PTR [eax+0x32],fs
  4283cc:	push   esi
  4283cd:	push   0x55406bdb
  4283d2:	lahf   
  4283d3:	mov    bh,0x7
  4283d5:	cmp    eax,0xeffbfba7
  4283da:	fs enter 0x2281,0xeb
  4283df:	test   eax,0xf12eb686
  4283e4:	jg     0x42839d
  4283e6:	push   cs
  4283e7:	arpl   WORD PTR [ebp+0xc],bx
  4283ea:	lahf   
  4283eb:	test   BYTE PTR [ebx-0x25],0x2f
  4283ef:	cmp    al,0xe8
  4283f1:	push   esp
  4283f2:	xchg   edi,eax
  4283f3:	bound  esp,QWORD PTR [ecx+ebx*8+0x5b5cba39]
  4283fa:	jbe    0x4283ff
  4283fc:	mov    WORD PTR [edi+eax*2+0x7fb415d5],es
  428403:	pop    ss
  428404:	stos   DWORD PTR es:[edi],eax
  428405:	cld    
  428406:	dec    ecx
  428407:	dec    esp
  428408:	test   eax,0xbf8c87c5
  42840d:	sbb    al,BYTE PTR [ebx-0x2]
  428410:	fldenv [eax+0x1c]
  428413:	test   BYTE PTR [edi-0x37],al
  428416:	or     eax,0x859e42f
  42841b:	lock adc DWORD PTR [ecx],0x49
  42841f:	adc    ebx,DWORD PTR [eax]
  428421:	arpl   WORD PTR ds:0x60ed54e7,sp
  428427:	dec    ecx
  428428:	aam    0x44
  42842a:	sub    al,0x37
  42842c:	(bad)  
  42842d:	push   ss
  42842e:	call   0x623a4423
  428433:	dec    esi
  428434:	jbe    0x428460
  428436:	icebp  
  428437:	mov    dh,0xe8
  428439:	cmp    DWORD PTR [eax+0x41],esp
  42843c:	hlt    
  42843d:	xchg   ebx,eax
  42843e:	pop    DWORD PTR [edi]
  428440:	in     eax,dx
  428441:	jae    0xeba3969d
  428447:	test   BYTE PTR [esi+0x1896f412],0x3a
  42844e:	xlat   BYTE PTR ds:[ebx]
  42844f:	out    dx,al
  428450:	retf   0xc356
  428453:	dec    ecx
  428454:	push   eax
  428455:	lods   eax,DWORD PTR ds:[esi]
  428456:	sub    DWORD PTR [esi],0xffffffc6
  428459:	adc    al,0xa6
  42845b:	out    dx,al
  42845c:	add    esi,ebp
  42845e:	nop
  42845f:	(bad)  
  428460:	xlat   BYTE PTR ds:[ebx]
  428461:	repz imul ebx,DWORD PTR [ebx],0xffffffe5
  428465:	div    DWORD PTR [edx+eax*2+0x77]
  428469:	pushf  
  42846a:	jb     0x428421
  42846c:	je     0x428476
  42846e:	or     esi,DWORD PTR [esi-0x14]
  428471:	lds    esi,FWORD PTR [edi+0x70]
  428474:	mov    ch,0xa8
  428476:	dec    ebx
  428477:	and    ebp,DWORD PTR [ebx]
  428479:	rcl    DWORD PTR [ebp-0x52],cl
  42847c:	add    BYTE PTR [ecx+0x305bf712],0xdf
  428483:	mov    dl,0x60
  428485:	xor    esp,DWORD PTR [eax-0x3c]
  428488:	imul   eax,DWORD PTR [ecx],0x46df2a67
  42848e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42848f:	adc    eax,0xd8320181
  428494:	cmp    eax,esp
  428496:	lea    esi,ds:0xe90e07f8
  42849c:	aam    0x32
  42849e:	fistp  QWORD PTR [ecx-0x4e]
  4284a1:	fstp   TBYTE PTR [ebx+ebp*1-0x44]
  4284a5:	adc    edi,eax
  4284a7:	lods   al,BYTE PTR ds:[esi]
  4284a8:	scas   eax,DWORD PTR es:[edi]
  4284a9:	and    cl,BYTE PTR ds:0xbaa9fe0c
  4284af:	shr    ecx,cl
  4284b1:	bound  edx,QWORD PTR [ecx+eax*4]
  4284b4:	stc    
  4284b5:	pop    esp
  4284b6:	in     al,dx
  4284b7:	rol    DWORD PTR [ecx+0x15],cl
  4284ba:	rcr    BYTE PTR [edx],cl
  4284bc:	add    al,ch
  4284be:	push   ebx
  4284bf:	in     al,dx
  4284c0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4284c1:	pop    ebx
  4284c2:	pop    esi
  4284c3:	sahf   
  4284c4:	push   ecx
  4284c5:	inc    edi
  4284c6:	jo     0x42848f
  4284c8:	pop    ebp
  4284c9:	push   0x27
  4284cb:	ret    0xaf4c
  4284ce:	or     eax,0xee398451
  4284d3:	addr16 sahf 
  4284d5:	lds    ecx,FWORD PTR [edx+0x71724096]
  4284db:	dec    edx
  4284dc:	out    dx,eax
  4284dd:	pushf  
  4284de:	push   ecx
  4284df:	xlat   BYTE PTR ds:[ebx]
  4284e0:	mov    ebp,ebp
  4284e2:	xor    edx,edx
  4284e4:	xchg   ebx,eax
  4284e5:	push   ds
  4284e6:	nop
  4284e7:	dec    ecx
  4284e8:	xchg   esi,eax
  4284e9:	push   ds
  4284ea:	addr16 iret 
  4284ec:	test   dl,cl
  4284ee:	xchg   esi,edi
  4284f0:	push   0xfa5f487c
  4284f5:	clc    
  4284f6:	inc    eax
  4284f7:	sti    
  4284f8:	test   BYTE PTR [ebx+0xe781fcb],0x6f
  4284ff:	dec    edi
  428500:	fwait
  428501:	mov    eax,0xbf4f1ad0
  428506:	(bad)  
  428508:	in     al,dx
  428509:	jge    0x4284d6
  42850b:	cmc    
  42850c:	push   esi
  42850d:	mov    ecx,eax
  42850f:	jp     0x4284f4
  428511:	cdq    
  428512:	inc    esi
  428513:	mov    gs,ebx
  428515:	pop    ds
  428516:	das    
  428517:	xchg   edx,eax
  428518:	jns    0x4284bc
  42851a:	int    0x6d
  42851c:	mov    ds:0x641c79c,al
  428521:	stc    
  428522:	pop    esi
  428523:	and    ch,BYTE PTR [ebx-0x44b63f52]
  428529:	inc    edi
  42852a:	adc    edx,DWORD PTR [edi]
  42852c:	sub    BYTE PTR [edx-0x54],dh
  42852f:	imul   ecx,DWORD PTR [ebp+0x28],0xc953dcab
  428536:	jno    0x428590
  428538:	adc    al,0x7b
  42853a:	int    0xa1
  42853c:	sbb    BYTE PTR [ecx+0x6c],bh
  42853f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  428540:	push   0x7b
  428542:	xchg   ebp,eax
  428543:	out    0xc1,eax
  428545:	ins    BYTE PTR es:[edi],dx
  428546:	and    dh,BYTE PTR [ebp-0x43]
  428549:	mov    bh,0xa
  42854b:	pusha  
  42854c:	xor    al,0x3f
  42854e:	mov    ebp,0xdf473c62
  428553:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  428554:	lds    esi,FWORD PTR cs:[eax+0x51d7f46e]
  42855b:	pop    eax
  42855c:	add    ecx,DWORD PTR fs:[edx-0x2c747889]
  428563:	dec    eax
  428564:	shr    BYTE PTR [eax],0xcc
  428567:	mov    cl,0x9
  428569:	jnp    0x42851a
  42856b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42856c:	sub    cl,BYTE PTR ds:0x472144bf
  428572:	test   ebp,ecx
  428574:	xchg   DWORD PTR [eax-0xf],ecx
  428577:	lahf   
  428578:	xchg   edi,eax
  428579:	jne    0x4285c5
  42857b:	push   ebx
  42857c:	xor    eax,0x8bfca790
  428581:	or     bh,ah
  428583:	xchg   esi,eax
  428584:	adc    eax,0xf73a5b1b
  428589:	nop
  42858a:	dec    esi
  42858b:	out    0x59,eax
  42858d:	jge    0x428516
  42858f:	xchg   edx,eax
  428590:	imul   ecx,DWORD PTR [edi+0x1b],0x69d21bd7
  428597:	inc    ecx
  428598:	jns    0x428554
  42859a:	mov    ?,WORD PTR [edx]
  42859c:	stos   BYTE PTR es:[edi],al
  42859d:	xchg   ebp,eax
  42859e:	arpl   WORD PTR [esi-0x26],bx
  4285a1:	pusha  
  4285a2:	jg     0x428623
  4285a4:	sub    al,0x20
  4285a6:	adc    al,0x94
  4285a8:	mov    ebx,0xc7b4355b
  4285ad:	adc    eax,0x14985a11
  4285b2:	retf   
  4285b3:	cmp    esi,DWORD PTR [ecx+0x33]
  4285b6:	push   eax
  4285b7:	rcl    BYTE PTR [ebp+ebp*2-0x4e725009],0xc7
  4285bf:	lds    esi,FWORD PTR [ecx]
  4285c1:	or     ch,BYTE PTR [edx-0x659f49a]
  4285c7:	add    BYTE PTR [ecx+eax*4+0x7ca24365],bl
  4285ce:	mov    edi,0x6c973f5c
  4285d3:	mov    cl,0xcf
  4285d5:	pushf  
  4285d6:	fst    DWORD PTR [ecx-0x4b]
  4285d9:	fwait
  4285da:	mov    bh,0xb2
  4285dc:	xor    esi,ecx
  4285de:	pushf  
  4285df:	mov    ah,0xc0
  4285e1:	add    al,0x19
  4285e3:	stc    
  4285e4:	lea    ecx,[ebx+0x7162672]
  4285ea:	(bad)  
  4285eb:	mov    bh,0x53
  4285ed:	pop    esi
  4285ee:	ret    0xd481
  4285f1:	fmul   st(0),st
  4285f3:	shl    BYTE PTR [ecx+0x16e47e7c],1
  4285f9:	loopne 0x428601
  4285fb:	lahf   
  4285fc:	add    DWORD PTR [ebp+edx*8-0x5d],eax
  428600:	fist   WORD PTR [edx+edx*2+0x68bfa378]
  428607:	popf   
  428608:	test   al,0xd3
  42860a:	xchg   ebx,eax
  42860b:	std    
  42860c:	adc    al,BYTE PTR [esi+ecx*4-0x4a]
  428610:	mov    esp,0xcf734bad
  428615:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  428616:	jbe    0x4285ef
  428618:	ret    
  428619:	pop    ss
  42861a:	out    0xa7,eax
  42861c:	add    dl,bh
  42861e:	jge    0x42865e
  428620:	inc    edx
  428621:	sub    bl,BYTE PTR [eax-0x7da2d909]
  428627:	cmp    ebp,DWORD PTR [ebx-0x68db6c56]
  42862d:	jg     0x428685
  42862f:	dec    ebx
  428630:	in     eax,dx
  428631:	scas   al,BYTE PTR es:[edi]
  428632:	ja     0x428652
  428634:	sbb    BYTE PTR [ecx+0x40a020f7],0x37
  42863b:	jns    0x4285da
  42863d:	push   ss
  42863e:	aas    
  42863f:	icebp  
  428640:	xor    eax,esp
  428642:	push   ds
  428643:	pop    esp
  428644:	hlt    
  428645:	clc    
  428646:	aaa    
  428647:	sbb    DWORD PTR [edx+0x3],esi
  42864a:	jmp    0x6cc8c1ed
  42864f:	fst    QWORD PTR [edx-0x2f1c62b9]
  428655:	fs fild WORD PTR ds:[edi-0x7b86bcc8]
  42865d:	ja     0x428662
  42865f:	jnp    0x4286b5
  428661:	daa    
  428662:	shl    DWORD PTR [edx],1
  428664:	bound  esp,QWORD PTR [ebx+0x76]
  428667:	jo     0x428623
  428669:	jno    0x428669
  42866b:	xor    al,0x98
  42866d:	sub    al,0x37
  42866f:	shr    ebp,cl
  428671:	sbb    esp,esi
  428673:	fld    TBYTE PTR ds:0xefeda70e
  428679:	sub    al,0x39
  42867b:	mov    ch,0x64
  42867d:	inc    esi
  42867e:	pop    edi
  42867f:	int    0x77
  428681:	repz push ss
  428683:	jmp    0xd83ed43d
  428688:	mov    ah,0x62
  42868a:	jecxz  0x428630
  42868c:	call   0xf23991ea
  428691:	sub    BYTE PTR [ecx],0x29
  428694:	jo     0x428654
  428696:	clc    
  428697:	loope  0x428704
  428699:	mov    edx,0xa4f1c248
  42869e:	mov    BYTE PTR [edi-0x13],0x46
  4286a2:	iret   
  4286a3:	push   es
  4286a4:	(bad)  
  4286a5:	mov    al,0x7e
  4286a7:	mov    ds:0x43c7816a,al
  4286ac:	mov    dh,0xe6
  4286ae:	inc    esp
  4286af:	sub    eax,0x780b105
  4286b4:	ret    0x5656
  4286b7:	xrelease xchg BYTE PTR [edx+ecx*8+0x5b277b1],cl
  4286bf:	stc    
  4286c0:	mov    WORD PTR [ecx*8+0x1738e120],fs
  4286c7:	lock inc esi
  4286c9:	inc    ecx
  4286ca:	aad    0x17
  4286cc:	inc    esi
  4286cd:	cmp    ebx,ebx
  4286cf:	pop    esp
  4286d0:	jo     0x42873a
  4286d2:	pop    edi
  4286d3:	push   0xffffffc3
  4286d5:	imul   esp,DWORD PTR [ebx-0x24e8c643],0x52
  4286dc:	mov    edx,0x480b7bcb
  4286e1:	sub    BYTE PTR [esi+esi*4],ah
  4286e4:	ins    DWORD PTR es:[edi],dx
  4286e5:	sbb    eax,0xb9fd8a44
  4286ea:	jg     0x4286ff
  4286ec:	jg     0x4286cf
  4286ee:	dec    esp
  4286ef:	sub    BYTE PTR [eax+0x4e82c6bd],cl
  4286f5:	aam    0xa9
  4286f7:	mov    esp,0xe7dcd465
  4286fc:	push   ss
  4286fd:	cmp    DWORD PTR [esi-0x70],ebx
  428700:	ds cmp eax,0xe94080b7
  428706:	ret    0xd8bd
  428709:	add    al,0xf4
  42870b:	cli    
  42870c:	push   ss
  42870d:	push   ds
  42870e:	retf   0xf03e
  428711:	ins    DWORD PTR es:[edi],dx
  428712:	sbb    ah,cl
  428714:	xchg   ebx,eax
  428715:	jne    0x61b1ba17
  42871b:	add    dh,BYTE PTR [ebx-0x53]
  42871e:	or     eax,0xcd2f1aad
  428723:	mov    edi,0x4ece6406
  428728:	sub    BYTE PTR [eax],ah
  42872a:	xchg   esi,eax
  42872b:	xor    DWORD PTR [esi],ebp
  42872d:	jns    0x42877d
  42872f:	in     al,dx
  428730:	call   0xed3c:0x463481eb
  428737:	in     al,0x5f
  428739:	adc    eax,0xf609335c
  42873e:	mov    eax,ds:0x6f6aa1cf
  428743:	lods   al,BYTE PTR ds:[esi]
  428744:	cmp    dl,al
  428746:	or     al,0xe7
  428748:	std    
  428749:	outs   dx,DWORD PTR ds:[esi]
  42874a:	and    al,0x3e
  42874c:	jle    0x428793
  42874e:	icebp  
  42874f:	add    al,0xea
  428751:	sti    
  428752:	pop    ss
  428753:	dec    esp
  428754:	cmp    ah,BYTE PTR [edi+0x32]
  428757:	cdq    
  428758:	adc    esi,DWORD PTR [edi]
  42875a:	int    0x3
  42875c:	out    0xcc,eax
  42875e:	pop    edi
  42875f:	push   esi
  428760:	cli    
  428761:	fs out 0x6a,eax
  428764:	push   ebx
  428765:	xchg   esp,eax
  428766:	and    eax,DWORD PTR [ebx]
  428768:	cmps   BYTE PTR ds:[si],BYTE PTR es:[di]
  42876a:	sub    BYTE PTR [ecx*1+0x5d3bcdb8],cl
  428771:	rcr    BYTE PTR [edi-0x59],0x13
  428775:	inc    DWORD PTR [ebp+0x5]
  428778:	aam    0x58
  42877a:	test   al,0x5f
  42877c:	fs sahf 
  42877e:	jbe    0x4287b2
  428780:	or     dh,BYTE PTR [ecx+0x1076223c]
  428786:	cld    
  428787:	and    BYTE PTR [ebx-0x7d24786f],ch
  42878d:	das    
  42878e:	test   BYTE PTR [esi+0x20],ah
  428791:	xor    ecx,ebx
  428793:	outs   dx,BYTE PTR ds:[esi]
  428794:	mov    ch,0x4f
  428796:	or     dl,dl
  428798:	push   cs
  428799:	enter  0xf2c4,0xbd
  42879d:	pushf  
  42879e:	out    dx,eax
  42879f:	jnp    0x428747
  4287a1:	mov    ds:0xd05dd9f3,eax
  4287a6:	adc    DWORD PTR [ebx],0xf58ff842
  4287ac:	lock sub esi,esi
  4287af:	ret    
  4287b0:	aam    0x53
  4287b2:	aas    
  4287b3:	or     al,0x61
  4287b5:	push   es
  4287b6:	or     edx,DWORD PTR [ebx*1-0x59089033]
  4287bd:	sub    eax,0x882ee084
  4287c2:	push   ebx
  4287c3:	mov    esp,0xcaf6e56b
  4287c8:	dec    ebx
  4287c9:	mov    esi,0x919e6eb5
  4287ce:	aas    
  4287cf:	les    edx,FWORD PTR [esi]
  4287d1:	stos   DWORD PTR es:[edi],eax
  4287d2:	add    eax,0xfe7a1f5c
  4287d7:	sbb    cl,0xe2
  4287da:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4287db:	push   esi
  4287dc:	xor    ecx,DWORD PTR [edi+0x5e]
  4287df:	icebp  
  4287e0:	(bad)  
  4287e1:	push   edx
  4287e2:	shl    eax,0xe5
  4287e5:	lock outs dx,BYTE PTR ds:[esi]
  4287e7:	mov    al,0x72
  4287e9:	jo     0x4287ea
  4287eb:	lahf   
  4287ec:	test   eax,0x756261c1
  4287f1:	enter  0x9b42,0xe5
  4287f5:	push   eax
  4287f6:	dec    ecx
  4287f7:	icebp  
  4287f8:	cmp    esp,DWORD PTR [eax+edi*4+0x78]
  4287fc:	mov    bl,0x8b
  4287fe:	lods   eax,DWORD PTR ds:[esi]
  4287ff:	mov    ebx,eax
  428801:	nop
  428802:	cwde   
  428803:	mov    esi,0xedd4f105
  428808:	test   BYTE PTR [esi-0x73137b9b],bl
  42880e:	add    bh,cl
  428810:	nop
  428811:	sub    al,dh
  428813:	mov    cl,0x7d
  428815:	jnp    0x428895
  428817:	pop    ds
  428818:	pop    esp
  428819:	mov    eax,ds:0xd816c3c2
  42881e:	xor    al,BYTE PTR [eax+esi*1-0x774db721]
  428825:	clc    
  428826:	ja     0x428865
  428828:	repnz scas eax,DWORD PTR es:[edi]
  42882a:	(bad)  
  42882b:	loope  0x428846
  42882d:	mov    esi,0x8ab06b92
  428832:	gs lock sub al,0x8
  428836:	pop    ecx
  428837:	out    0x39,eax
  428839:	dec    esp
  42883a:	aam    0xbc
  42883c:	cmp    esp,DWORD PTR [ebp-0x1]
  42883f:	daa    
  428840:	out    0x10,al
  428842:	or     ah,ah
  428844:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  428846:	sbb    al,BYTE PTR [ecx-0x349eca2c]
  42884c:	std    
  42884d:	adc    eax,0x407bf841
  428852:	cli    
  428853:	std    
  428854:	push   ebx
  428855:	pop    ss
  428856:	test   BYTE PTR [eax],ch
  428858:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  428859:	dec    esi
  42885a:	mov    ch,0x1b
  42885c:	call   0x976078ab
  428861:	mov    BYTE PTR [eax+0x60],al
  428864:	or     ebp,esp
  428866:	mov    edx,0xdb7eb167
  42886b:	sbb    BYTE PTR [eax+ebp*8+0x35],al
  42886f:	add    DWORD PTR [esi-0x4f],ebp
  428872:	mov    ebp,0xd9620b66
  428877:	jp     0x42885d
  428879:	js     0x428822
  42887b:	or     cl,BYTE PTR [ebx+0xd2cc7d1]
  428881:	sbb    edx,DWORD PTR [edx+ebp*2-0x63]
  428885:	stos   DWORD PTR es:[edi],eax
  428886:	mov    bl,0x41
  428888:	or     DWORD PTR [ecx-0x32],ecx
  42888b:	sbb    eax,0x36e7c5eb
  428890:	xchg   ecx,eax
  428891:	rol    BYTE PTR [edi-0x7b3a19bf],0x72
  428898:	xchg   ebp,eax
  428899:	rol    BYTE PTR ds:0xfa878765,cl
  42889f:	mov    ecx,0x7202949e
  4288a4:	jp     0x4288cc
  4288a6:	dec    edx
  4288a7:	jo     0x42891b
  4288a9:	mov    ecx,ecx
  4288ab:	sub    cl,BYTE PTR [edx-0x4e44b446]
  4288b1:	mov    edi,0xa2903f5f
  4288b6:	cmp    al,0x98
  4288b8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4288b9:	les    ecx,FWORD PTR [ebp-0x38]
  4288bc:	mov    dh,0x9e
  4288be:	pop    ebx
  4288bf:	std    
  4288c0:	cmc    
  4288c1:	sahf   
  4288c2:	popa   
  4288c3:	or     DWORD PTR [ebx],0x16
  4288c6:	pop    eax
  4288c7:	test   BYTE PTR [ebx+eax*4-0x6a29afd1],dl
  4288ce:	push   0x47
  4288d0:	pop    edi
  4288d1:	xchg   ebp,eax
  4288d2:	imul   edi,edi,0x2dca0313
  4288d8:	je     0x4288ed
  4288da:	mov    cs:0xc4106e88,al
  4288e0:	inc    ecx
  4288e1:	data16 lahf 
  4288e3:	mov    ds:0x5764fea9,al
  4288e8:	(bad)  
  4288e9:	cmp    ebx,DWORD PTR [ecx+0x7c]
  4288ec:	(bad)  
  4288ed:	mov    dh,0x83
  4288ef:	mov    dl,0xf1
  4288f1:	(bad)  
  4288f2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4288f3:	inc    esp
  4288f4:	mov    ds:0xa3ba8914,eax
  4288f9:	cwde   
  4288fa:	push   eax
  4288fb:	pop    eax
  4288fc:	pushf  
  4288fd:	fmulp  st(7),st
  4288ff:	mov    ecx,0x76943664
  428904:	cmp    eax,0xac378a5b
  428909:	stos   BYTE PTR es:[edi],al
  42890a:	(bad)  
  42890b:	repnz imul esi,ebx,0xffffffd0
  42890f:	popf   
  428910:	je     0x4288f9
  428912:	mov    esp,0xcbb0882c
  428917:	sbb    edi,DWORD PTR [ecx-0xc1fe0b3]
  42891d:	repz sar BYTE PTR ds:0x312658da,cl
  428924:	(bad)  
  428925:	xor    BYTE PTR [edi],bl
  428927:	push   ss
  428928:	pop    ebp
  428929:	add    dl,dh
  42892b:	push   edi
  42892c:	pop    ecx
  42892d:	sbb    eax,0x190cd03
  428932:	add    DWORD PTR [esi],edx
  428934:	or     al,0x90
  428936:	std    
  428937:	jecxz  0x428910
  428939:	(bad)  
  42893a:	test   eax,0xddff831f
  42893f:	push   edx
  428940:	js     0x42896c
  428942:	pushf  
  428943:	sbb    al,0x85
  428945:	dec    ecx
  428946:	aad    0x23
  428948:	es or  al,0x55
  42894b:	mov    al,0x7e
  42894d:	cmp    DWORD PTR [ecx-0x114c4479],eax
  428953:	cld    
  428954:	and    eax,0xa7e038f1
  428959:	enter  0x6bf3,0x8c
  42895d:	pushf  
  42895e:	jg     0x428990
  428960:	dec    ebp
  428961:	mov    ecx,0x4000bbee
  428966:	jb     0x4288fa
  428968:	out    0xeb,eax
  42896a:	dec    edi
  42896b:	bnd cs js 0x428952
  42896f:	sub    al,0xfa
  428971:	dec    ebx
  428972:	inc    cl
  428974:	(bad)  
  428975:	sbb    BYTE PTR [edi+ebp*8-0x46],bl
  428979:	xchg   esp,eax
  42897a:	adc    BYTE PTR [edx+eax*4+0x6c],0x2d
  42897f:	in     al,dx
  428980:	push   ds
  428981:	sbb    DWORD PTR [edx-0x117e41f4],ecx
  428987:	jb     0x4289e1
  428989:	jecxz  0x428977
  42898b:	retf   
  42898c:	sbb    eax,0x60f154c9
  428991:	data16 or dh,BYTE PTR [ebx]
  428994:	outs   dx,DWORD PTR ds:[esi]
  428995:	dec    edx
  428996:	and    eax,0xf9c541bf
  42899b:	pop    ebx
  42899c:	fisub  DWORD PTR [eax+0x1a]
  42899f:	imul   ecx,DWORD PTR [esi+0x75],0xffffff9a
  4289a3:	or     al,0xc1
  4289a5:	cmp    BYTE PTR [ecx+0x1da54cb3],ah
  4289ab:	pushf  
  4289ac:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4289ad:	and    al,0x7
  4289af:	jg     0x4289e6
  4289b1:	test   eax,ecx
  4289b3:	cmp    DWORD PTR [ebx-0xd],ebx
  4289b6:	adc    eax,0xf2129b5f
  4289bb:	fadd   st,st(6)
  4289bd:	xor    BYTE PTR [esi],bl
  4289bf:	mov    eax,ds:0x935cd917
  4289c4:	xchg   DWORD PTR [ebx-0x1c],eax
  4289c7:	push   ds
  4289c8:	push   ebp
  4289c9:	mov    al,0x43
  4289cb:	sub    eax,0x81347909
  4289d0:	mov    ah,0x33
  4289d2:	loope  0x4289ed
  4289d4:	and    ebp,edi
  4289d6:	mov    eax,ds:0x91c37d16
  4289db:	fidiv  WORD PTR [ecx]
  4289dd:	gs dec ebp
  4289df:	hlt    
  4289e0:	sub    al,0xff
  4289e2:	add    ecx,DWORD PTR [edi+ecx*1+0x9]
  4289e6:	mov    ds:0x99cd89d2,eax
  4289eb:	inc    edi
  4289ec:	mov    eax,0xc57cdc00
  4289f1:	enter  0x5b67,0x91
  4289f5:	and    al,0xe2
  4289f7:	icebp  
  4289f8:	daa    
  4289f9:	repz pop cx
  4289fc:	arpl   WORD PTR [ebx],cx
  4289fe:	push   ecx
  4289ff:	test   al,0xbc
  428a01:	mov    ah,0xef
  428a03:	and    BYTE PTR [edx],bl
  428a05:	adc    bl,al
  428a07:	pop    esp
  428a08:	pop    ecx
  428a09:	mov    WORD PTR [ebx-0x2a],?
  428a0c:	and    DWORD PTR [ebp+0x5d56d8d3],edx
  428a12:	div    BYTE PTR [ecx]
  428a14:	xchg   ebp,ebx
  428a16:	outs   dx,BYTE PTR ds:[esi]
  428a17:	inc    ebp
  428a18:	mov    BYTE PTR [ecx+ebx*2-0x6a],ah
  428a1c:	and    eax,0xaeb869d5
  428a21:	lock aam 0x46
  428a24:	cmp    esp,esi
  428a26:	cli    
  428a27:	push   ebx
  428a28:	xor    BYTE PTR [edx-0x55eb63cd],ch
  428a2e:	fsub   DWORD PTR [edi]
  428a30:	sub    BYTE PTR [ebx],dh
  428a32:	aam    0x27
  428a34:	and    DWORD PTR ds:0xef878a46,0x3f
  428a3b:	retf   
  428a3c:	loope  0x428a24
  428a3e:	push   cs
  428a3f:	mov    ebx,0xeca44416
  428a44:	sub    eax,0x6e5cea70
  428a49:	mov    DWORD PTR [edi+0x4],esp
  428a4c:	mov    al,0x46
  428a4e:	mov    ah,0x1b
  428a50:	ror    dl,cl
  428a52:	sti    
  428a53:	jp     0x428ab9
  428a55:	retf   
  428a56:	imul   esi,DWORD PTR [edi-0x72],0x58
  428a5a:	mov    es,WORD PTR [esi+0x71]
  428a5d:	mov    esp,0x769b3a2b
  428a62:	imul   edx,DWORD PTR [edx],0xffffffcc
  428a65:	(bad)  
  428a66:	jmp    DWORD PTR [eax+ecx*2+0x7880d882]
  428a6d:	shl    DWORD PTR [ecx+0x57],cl
  428a70:	jae    0x428a5a
  428a72:	psraw  mm6,QWORD PTR [ebp-0x7b]
  428a76:	sub    ah,ch
  428a78:	ds stos BYTE PTR es:[edi],al
  428a7a:	add    al,0x87
  428a7c:	lods   eax,DWORD PTR ds:[esi]
  428a7d:	mov    eax,ds:0xc01dd493
  428a82:	fiadd  DWORD PTR [edx]
  428a84:	out    dx,al
  428a85:	aad    0xcc
  428a87:	aaa    
  428a88:	loop   0x428a70
  428a8a:	pop    edi
  428a8b:	int3   
  428a8c:	ss cmp al,0x85
  428a8f:	arpl   WORD PTR ds:0x8b5b7061,si
  428a95:	lock jnp 0x428a62
  428a98:	cwde   
  428a99:	jg     0x428ac3
  428a9b:	cmp    ch,BYTE PTR [esi]
  428a9d:	pop    es
  428a9e:	sub    bl,bh
  428aa0:	push   edi
  428aa1:	sub    ch,ah
  428aa3:	or     eax,0x89787bec
  428aa8:	sub    BYTE PTR [ebx-0x2ad8b16c],bl
  428aae:	jno    0x428a8e
  428ab0:	mov    eax,ds:0x9528783a
  428ab5:	mov    WORD PTR [ebx+0x38],cs
  428ab8:	fst    QWORD PTR [esp+eax*4-0x1cfae137]
  428abf:	adc    DWORD PTR [ebx],esp
  428ac1:	loopne 0x428ae8
  428ac3:	jne    0x428ae1
  428ac5:	push   ss
  428ac6:	mov    ds:0x645a651f,eax
  428acb:	jg     0x428ae0
  428acd:	call   0xc041:0x26f48463
  428ad4:	jp     0x428a70
  428ad6:	dec    BYTE PTR ss:[ebp+0x20123b2f]
  428add:	xchg   esp,eax
  428ade:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  428adf:	test   DWORD PTR [ecx-0x3bbcfff4],edi
  428ae5:	adc    DWORD PTR [edx],esp
  428ae7:	(bad)  
  428ae8:	addr16 xor bl,bl
  428aeb:	add    eax,0xb2368f3a
  428af0:	scas   al,BYTE PTR es:[edi]
  428af1:	dec    edi
  428af2:	sti    
  428af3:	jns    0x428ae8
  428af5:	jnp    0x428aab
  428af7:	ins    DWORD PTR es:[edi],dx
  428af8:	xlat   BYTE PTR ds:[ebx]
  428af9:	xlat   BYTE PTR ds:[ebx]
  428afa:	jle    0x428b15
  428afc:	imul   ebx,DWORD PTR [esi],0x37
  428aff:	aad    0xae
  428b01:	and    al,0x5f
  428b03:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  428b04:	fwait
  428b05:	jnp    0x428b49
  428b07:	and    DWORD PTR [ebx+0x79],eax
  428b0a:	xor    cl,BYTE PTR ds:0xe49017d6
  428b10:	scas   eax,DWORD PTR es:[edi]
  428b11:	call   0x9034a65c
  428b16:	rep ins BYTE PTR es:[edi],dx
  428b18:	or     DWORD PTR [ebp+0x2a],ecx
  428b1b:	outs   dx,BYTE PTR ds:[esi]
  428b1c:	push   ss
  428b1d:	retf   
  428b1e:	out    0x55,eax
  428b20:	push   0xffffff91
  428b22:	sbb    al,0x98
  428b24:	add    eax,0x7887ef10
  428b29:	daa    
  428b2a:	adc    BYTE PTR [edx-0x1be528a0],dl
  428b30:	pop    edi
  428b31:	xchg   cl,al
  428b33:	ja     0x428ba3
  428b35:	enter  0x779f,0x32
  428b39:	leave  
  428b3a:	int    0x54
  428b3c:	je     0x428b0a
  428b3e:	retf   0xc5c4
  428b41:	jnp    0x428b7f
  428b43:	out    0xe6,eax
  428b45:	and    al,0x37
  428b47:	pop    ecx
  428b48:	pop    ebx
  428b49:	(bad)  
  428b4a:	fmul   QWORD PTR [ebp+0x1d]
  428b4d:	mov    eax,0x3dd6f01f
  428b52:	sub    eax,0xa82c2a6d
  428b57:	jg     0x428af3
  428b59:	ret    
  428b5a:	cmp    BYTE PTR [edx+0x7e],0x2
  428b5e:	call   0x1265:0x94a65073
  428b65:	fdiv   DWORD PTR [esi+ebx*4]
  428b68:	lods   eax,DWORD PTR ds:[esi]
  428b69:	pusha  
  428b6a:	call   0xb94bc3fe
  428b6f:	push   edx
  428b70:	mov    ch,0xfd
  428b72:	push   0xc
  428b74:	mov    edi,0x878157ae
  428b79:	sub    al,ch
  428b7b:	shl    DWORD PTR ds:0x13c429a1,1
  428b81:	and    ch,BYTE PTR [edx]
  428b83:	xchg   esi,eax
  428b84:	ja     0x428b60
  428b86:	imul   esp,DWORD PTR [eax],0x34
  428b89:	inc    ebp
  428b8a:	sbb    cl,bh
  428b8c:	mov    ebx,0xb9fcabea
  428b91:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  428b92:	ds jbe 0xcfca1922
  428b99:	lods   eax,DWORD PTR ds:[esi]
  428b9a:	inc    edi
  428b9b:	jo     0x428bba
  428b9d:	mov    al,ds:0x607898c5
  428ba2:	lea    edi,[ebp+edi*1-0x16]
  428ba6:	ja     0x428c20
  428ba8:	add    DWORD PTR ds:[ecx-0x6e48579f],esp
  428baf:	cld    
  428bb0:	addr16 fs jne 0x428b9f
  428bb4:	cli    
  428bb5:	cld    
  428bb6:	xor    BYTE PTR [esi],ah
  428bb8:	test   eax,0xb586b872
  428bbd:	jmp    0xaf8a:0xdb17558c
  428bc4:	cli    
  428bc5:	sti    
  428bc6:	sub    ebp,DWORD PTR [ebp+0x74]
  428bc9:	dec    edi
  428bca:	leave  
  428bcb:	mov    es,WORD PTR [ebx+edi*2]
  428bce:	sbb    BYTE PTR [esp+edi*8+0x55],dl
  428bd2:	mov    ah,0x9b
  428bd4:	push   ebx
  428bd5:	and    eax,0xaae8ce93
  428bda:	shl    DWORD PTR [eax+0x1ecde21a],0x1d
  428be1:	mov    ds:0x8de62a7d,eax
  428be6:	cmc    
  428be7:	add    esi,DWORD PTR [edi+0x4c]
  428bea:	popf   
  428beb:	pop    eax
  428bec:	es xchg edx,eax
  428bee:	or     al,0xc3
  428bf0:	mov    bl,0xe6
  428bf2:	clc    
  428bf3:	mov    bh,0x97
  428bf5:	iret   
  428bf6:	dec    ebx
  428bf7:	push   ds
  428bf8:	aas    
  428bf9:	push   ebp
  428bfa:	mov    dl,0x76
  428bfc:	sub    ebx,esi
  428bfe:	xor    eax,0x69f38b85
  428c03:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  428c04:	shl    DWORD PTR ds:0x99b47183,0x73
  428c0b:	xchg   ecx,eax
  428c0c:	fcom   QWORD PTR [esi]
  428c0e:	mov    esi,0x22a248e9
  428c13:	push   edx
  428c15:	inc    ebx
  428c16:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  428c17:	adc    eax,0xca20b2cc
  428c1c:	push   ds
  428c1d:	sbb    eax,0x3fdfa268
  428c22:	lds    esi,FWORD PTR [ebp-0x32310a1]
  428c28:	out    dx,eax
  428c29:	push   es
  428c2a:	shl    BYTE PTR [esi+0x1a],0x7b
  428c2e:	lea    esi,cs:[ecx]
  428c31:	add    al,bl
  428c33:	mov    edi,0x296a8162
  428c38:	add    al,0xbf
  428c3a:	aad    0x90
  428c3c:	retf   
  428c3d:	arpl   WORD PTR [edx-0x5a],bp
  428c40:	shl    BYTE PTR [ebx+ecx*8],cl
  428c43:	or     esp,DWORD PTR [esi+0xcd0cd3c]
  428c49:	pop    eax
  428c4a:	ja     0x428ca1
  428c4c:	jl     0x428ca0
  428c4e:	and    DWORD PTR [esi-0x249674d1],ecx
  428c54:	ret    0x2b66
  428c57:	aad    0xe1
  428c59:	cvtps2pd xmm0,xmm4
  428c5c:	scas   al,BYTE PTR es:[edi]
  428c5d:	lahf   
  428c5e:	std    
  428c5f:	jecxz  0x428c5f
  428c61:	sub    DWORD PTR [ebp-0x73],eax
  428c64:	xor    al,0xe6
  428c66:	sub    ecx,DWORD PTR [esi+edi*8]
  428c69:	add    al,0x74
  428c6b:	xchg   DWORD PTR [esi],edi
  428c6d:	in     al,0x84
  428c6f:	sbb    cl,BYTE PTR [esi]
  428c71:	sbb    BYTE PTR [edx],bh
  428c73:	repnz addr16 aaa 
  428c76:	test   eax,0x252bc829
  428c7b:	xchg   esp,eax
  428c7c:	xchg   ebx,eax
  428c7d:	inc    edi
  428c7e:	shl    bl,cl
  428c80:	jecxz  0x428c4e
  428c82:	stos   BYTE PTR es:[edi],al
  428c83:	jns    0x428c69
  428c85:	vmread DWORD PTR [ebp-0x5eae9a04],ecx
  428c8c:	sbb    dl,BYTE PTR ds:0xc6041aba
  428c92:	ins    BYTE PTR es:[edi],dx
  428c93:	mov    esp,ebp
  428c95:	fsub   DWORD PTR [ecx+0x29]
  428c98:	mov    ecx,DWORD PTR [eax]
  428c9a:	mov    dh,0xd0
  428c9c:	aad    0x1c
  428c9e:	mov    ah,0xf0
  428ca0:	xchg   di,ax
  428ca2:	push   cs
  428ca3:	push   esi
  428ca4:	ins    BYTE PTR es:[edi],dx
  428ca5:	loopne 0x428c33
  428ca7:	fs xchg esi,eax
  428ca9:	aam    0x9d
  428cab:	js     0x428c94
  428cad:	sbb    eax,esi
  428caf:	cmp    DWORD PTR [si],eax
  428cb2:	in     eax,0x2c
  428cb4:	push   ebp
  428cb5:	enter  0x2820,0xcb
  428cb9:	mov    esi,0xa9030ae3
  428cbe:	(bad)  
  428cbf:	dec    ebx
  428cc0:	cdq    
  428cc1:	cmp    al,0x50
  428cc3:	in     eax,dx
  428cc4:	xor    dl,0xa
  428cc7:	jl     0x428d23
  428cc9:	lahf   
  428cca:	jecxz  0x428d41
  428ccc:	icebp  
  428ccd:	xlat   BYTE PTR ds:[ebx]
  428cce:	jno    0x428cf4
  428cd0:	lods   al,BYTE PTR ds:[esi]
  428cd1:	add    al,0xfb
  428cd3:	repz jno 0x428c83
  428cd6:	cmp    ecx,DWORD PTR [edi-0x38e99cf]
  428cdc:	jl     0x428d0c
  428cde:	xchg   dl,ah
  428ce0:	inc    ecx
  428ce1:	cwde   
  428ce2:	push   0x6b
  428ce4:	dec    esp
  428ce5:	repz (bad) [edx+0x5b3e1d11]
  428cec:	int3   
  428ced:	and    BYTE PTR gs:[esi+0x67905feb],dh
  428cf4:	jno    0x428cd8
  428cf6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  428cf7:	jno    0x428d3c
  428cf9:	out    dx,eax
  428cfa:	test   al,0xd4
  428cfc:	push   ebx
  428cfd:	hlt    
  428cfe:	std    
  428cff:	adc    BYTE PTR [ecx+0x199664c8],ah
  428d05:	test   BYTE PTR [ecx+0x45edf26c],ch
  428d0b:	icebp  
  428d0c:	fcmovbe st,st(1)
  428d0e:	mov    bl,0x16
  428d10:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  428d11:	push   edx
  428d12:	mov    BYTE PTR [eax+ebx*1+0x1982fbf4],0x91
  428d1a:	outs   dx,BYTE PTR ds:[esi]
  428d1b:	cdq    
  428d1c:	xchg   DWORD PTR [edi+0x1c],ebx
  428d1f:	push   es
  428d20:	mov    ah,0xe
  428d22:	and    al,bh
  428d24:	sbb    ah,dh
  428d26:	xor    BYTE PTR [edi+edi*4],bh
  428d29:	enter  0x277c,0xf2
  428d2d:	shl    DWORD PTR [esi-0x2e1c6d54],cl
  428d33:	pushf  
  428d34:	shl    cl,cl
  428d36:	jp     0x428d04
  428d38:	in     eax,dx
  428d39:	jp     0x428cc2
  428d3b:	push   edi
  428d3c:	xchg   edx,eax
  428d3d:	test   BYTE PTR [ebx+eiz*2+0x25],cl
  428d41:	icebp  
  428d42:	dec    edi
  428d43:	add    al,0x60
  428d45:	out    dx,al
  428d46:	pushf  
  428d47:	loope  0x428d12
  428d49:	adc    DWORD PTR [esi+0x12],ebp
  428d4c:	add    DWORD PTR [ebp-0x52935b3d],ecx
  428d52:	push   eax
  428d53:	push   esp
  428d54:	jge    0x428d4e
  428d56:	jno    0x428d88
  428d58:	xchg   esp,eax
  428d59:	lahf   
  428d5a:	bound  esi,QWORD PTR [ebp+eax*8-0x73]
  428d5e:	cmp    eax,0xff28cb0c
  428d63:	icebp  
  428d64:	jae    0x428cf1
  428d66:	retf   
  428d67:	dec    esi
  428d68:	fisttp WORD PTR [ebp+eax*1-0x18]
  428d6c:	mov    ah,0x38
  428d6e:	add    BYTE PTR ds:0x2a16afef,dl
  428d74:	scas   al,BYTE PTR es:[edi]
  428d75:	xlat   BYTE PTR ds:[ebx]
  428d76:	push   edi
  428d77:	add    esi,edi
  428d79:	jge    0x428d75
  428d7b:	adc    BYTE PTR [esi-0x51],cl
  428d7e:	mov    DWORD PTR [eax-0x14c3d0ad],edx
  428d84:	push   esi
  428d85:	nop
  428d86:	push   ss
  428d87:	xor    dh,BYTE PTR [ecx+0x75]
  428d8a:	sbb    ah,BYTE PTR [ebp+0x24bc218a]
  428d90:	xor    edi,esi
  428d92:	push   ecx
  428d93:	ins    BYTE PTR es:[edi],dx
  428d94:	inc    eax
  428d95:	mov    cl,0x50
  428d97:	add    ebx,DWORD PTR ds:0x494f097e
  428d9d:	push   ecx
  428d9e:	mov    BYTE PTR [edi+0x62],ah
  428da1:	pop    edx
  428da2:	pop    ecx
  428da3:	jns    0x428dc4
  428da5:	sub    eax,0x94617983
  428daa:	ror    ecx,0x8f
  428dad:	mov    esp,gs
  428daf:	jl     0x428ddb
  428db1:	(bad)  
  428db2:	int    0x90
  428db4:	xor    ebp,DWORD PTR [edi+0x76c16119]
  428dba:	pop    esp
  428dbb:	dec    esi
  428dbc:	add    BYTE PTR [edx+0x5e7cc988],bh
  428dc2:	cli    
  428dc3:	fisub  DWORD PTR [eax-0x6a]
  428dc6:	fiadd  DWORD PTR [ebp+0x112c17d0]
  428dcc:	sub    edx,DWORD PTR [edx+0x6a1f2c81]
  428dd2:	bnd jl 0x428d6f
  428dd5:	or     DWORD PTR ss:[ecx+eiz*8-0x73137ed9],0x61f18d49
  428de1:	dec    ebx
  428de2:	into   
  428de3:	rcl    DWORD PTR [esi+0x5fb74a91],0x6a
  428dea:	and    dh,BYTE PTR [ecx-0x3c494b86]
  428df0:	data16 (bad) cs:[eax]
  428df4:	dec    edx
  428df5:	dec    esp
  428df6:	jns    0x428db3
  428df8:	mov    ds:0xec7ecb3c,al
  428dfd:	fxch   st(2)
  428dff:	add    BYTE PTR [ecx],al
  428e01:	lds    ecx,FWORD PTR [eax]
  428e03:	stc    
  428e04:	repz retf 
  428e06:	addr16 xchg edi,eax
  428e08:	test   DWORD PTR [ebx-0x15c1ac4f],esp
  428e0e:	stos   BYTE PTR es:[edi],al
  428e0f:	hlt    
  428e10:	into   
  428e11:	push   edx
  428e12:	(bad)  
  428e14:	push   esi
  428e15:	push   eax
  428e16:	inc    edx
  428e17:	cmp    DWORD PTR [ecx-0x67af7b65],edi
  428e1d:	sar    edi,cl
  428e1f:	jb     0x428dec
  428e21:	jnp    0x428db2
  428e23:	stos   DWORD PTR es:[edi],eax
  428e24:	push   esp
  428e25:	fwait
  428e26:	sub    bl,dl
  428e28:	mov    BYTE PTR [esi-0x71],bl
  428e2b:	ins    DWORD PTR es:[edi],dx
  428e2c:	cmp    dl,BYTE PTR [edx]
  428e2e:	jae    0x428db6
  428e30:	loope  0x428dfb
  428e32:	sbb    BYTE PTR [ebx-0x29],cl
  428e35:	sbb    al,0x8e
  428e37:	jne    0x428df1
  428e39:	inc    eax
  428e3a:	xor    DWORD PTR [eax],0x9d7ca8fb
  428e40:	icebp  
  428e41:	mov    ebx,0x90dab05c
  428e46:	dec    edx
  428e47:	loop   0x428e23
  428e49:	jmp    0x428e5c
  428e4b:	jp     0x428e97
  428e4d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  428e4e:	add    DWORD PTR ds:0x6ba7e78c,eax
  428e54:	std    
  428e55:	adc    ebx,DWORD PTR [eax-0x68107458]
  428e5b:	std    
  428e5c:	push   0xffffffcc
  428e5e:	and    BYTE PTR [ebx-0x30],ah
  428e61:	lds    ecx,FWORD PTR [esi+0x14]
  428e64:	into   
  428e65:	repz ret 
  428e67:	jecxz  0x428ed7
  428e69:	sbb    BYTE PTR [eax+0x3e77846e],0x22
  428e70:	sbb    edi,DWORD PTR [edi+0x74]
  428e73:	repnz dec edx
  428e75:	aad    0xf4
  428e77:	push   edx
  428e78:	aaa    
  428e79:	arpl   WORD PTR [esi+0x3d7e7926],dx
  428e7f:	inc    ebx
  428e80:	icebp  
  428e81:	mov    ds:0xe4c40b55,al
  428e86:	cwde   
  428e87:	repnz xchg ecx,eax
  428e89:	stos   BYTE PTR es:[edi],al
  428e8a:	push   edx
  428e8b:	retf   0x3849
  428e8e:	push   edx
  428e8f:	jno    0x428efb
  428e91:	out    dx,al
  428e92:	add    edx,DWORD PTR [edi]
  428e94:	inc    esp
  428e95:	push   ds
  428e96:	inc    eax
  428e97:	add    eax,0x44347b67
  428e9c:	or     eax,0x3ed816b5
  428ea1:	jae    0x428ea4
  428ea3:	xchg   edx,eax
  428ea4:	out    0x89,al
  428ea6:	push   0x34
  428ea8:	(bad)  
  428ea9:	test   BYTE PTR [ebx+esi*8+0x4e],al
  428ead:	push   ds
  428eae:	push   ecx
  428eaf:	retf   0xbe66
  428eb2:	dec    edi
  428eb3:	(bad)  
  428eb4:	xchg   ecx,eax
  428eb5:	sub    BYTE PTR [ebx+0x45],bl
  428eb8:	cli    
  428eb9:	retf   0x90c
  428ebc:	shl    BYTE PTR [esi+ebp*2],1
  428ebf:	outs   dx,DWORD PTR ds:[esi]
  428ec0:	hlt    
  428ec1:	mov    bl,0x82
  428ec3:	in     eax,0x42
  428ec5:	js     0x428f0e
  428ec7:	xchg   esp,eax
  428ec8:	cmc    
  428ec9:	pop    edi
  428eca:	ret    0x1412
  428ecd:	int3   
  428ece:	push   edi
  428ecf:	clc    
  428ed0:	dec    ebp
  428ed1:	in     al,0xad
  428ed3:	push   0x2
  428ed5:	push   0x7e0aeb22
  428eda:	xchg   BYTE PTR [eax],dh
  428edc:	inc    edi
  428edd:	cli    
  428ede:	dec    ebp
  428edf:	pop    esi
  428ee0:	(bad)  
  428ee1:	js     0x428f22
  428ee3:	cmp    ebp,edi
  428ee5:	rcr    ebx,0x36
  428ee8:	pop    ebx
  428ee9:	and    DWORD PTR [ebx-0x4612942f],0xfffffffd
  428ef0:	add    BYTE PTR [edi],bh
  428ef2:	push   0x865474d
  428ef7:	inc    ecx
  428ef8:	cmp    al,0x44
  428efa:	pop    ds
  428efb:	popf   
  428efc:	aam    0xb9
  428efe:	and    ebp,DWORD PTR [edi]
  428f00:	cmp    eax,0x63fdfced
  428f05:	aaa    
  428f06:	popf   
  428f07:	out    0x7c,al
  428f09:	dec    ecx
  428f0a:	mov    ecx,0x1e1e67a0
  428f0f:	and    esi,DWORD PTR [edx-0x1c]
  428f12:	sub    eax,0x42cb528a
  428f17:	cdq    
  428f18:	push   esi
  428f19:	stos   DWORD PTR es:[edi],eax
  428f1a:	mov    ebp,0x58b72536
  428f1f:	mov    eax,ds:0x6a941430
  428f24:	cli    
  428f25:	xchg   ebp,eax
  428f26:	xchg   esi,eax
  428f27:	jnp    0x428ef0
  428f29:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  428f2a:	aaa    
  428f2b:	add    eax,0xeb750571
  428f30:	out    dx,al
  428f31:	push   edi
  428f32:	pop    edx
  428f33:	mov    al,ds:0x64c4454e
  428f38:	mov    dl,0xa8
  428f3a:	or     DWORD PTR [edx],edx
  428f3c:	mov    edi,0x4287942d
  428f41:	mov    eax,0x998eeb86
  428f46:	cmp    eax,0x27dbab5d
  428f4b:	xchg   edi,eax
  428f4c:	inc    esp
  428f4d:	inc    edx
  428f4e:	pop    ecx
  428f4f:	in     al,dx
  428f50:	shr    BYTE PTR [edx+0x6aee9ada],1
  428f56:	push   esi
  428f57:	dec    esp
  428f58:	out    dx,al
  428f59:	jo     0x428fa6
  428f5b:	cmp    eax,0xabce82
  428f60:	inc    ebp
  428f61:	mov    eax,ecx
  428f63:	mov    bl,0xb6
  428f65:	jo     0x428f18
  428f67:	jecxz  0x428f22
  428f69:	sbb    ebp,DWORD PTR ds:0xc7054fab
  428f6f:	sbb    eax,esi
  428f71:	push   0xffffffc9
  428f73:	cmp    ah,0xfa
  428f76:	ror    BYTE PTR [ebp+0xb],cl
  428f79:	stos   DWORD PTR es:[edi],eax
  428f7a:	pop    eax
  428f7b:	ja     0x428f57
  428f7d:	out    0xfb,eax
  428f7f:	repnz lea ebx,[esi-0x5]
  428f83:	xor    DWORD PTR [esi+0x7503d5e3],edx
  428f89:	pop    edx
  428f8a:	mov    dl,0x3e
  428f8c:	push   cs
  428f8d:	mov    esp,0xdda6ddcf
  428f92:	mov    esp,esp
  428f94:	loope  0x428f6c
  428f96:	cmp    ebx,ebx
  428f98:	repz aad 0xb0
  428f9b:	add    al,0x8e
  428f9d:	add    DWORD PTR [ecx+0x1d],eax
  428fa0:	mov    bl,0xa3
  428fa2:	test   DWORD PTR [esi],eax
  428fa4:	sbb    al,0xd5
  428fa6:	ins    BYTE PTR es:[di],dx
  428fa8:	shl    DWORD PTR [ecx],cl
  428faa:	in     eax,0x89
  428fac:	gs add eax,0x79960193
  428fb2:	cmp    eax,0xf3fe55fb
  428fb7:	xor    al,bl
  428fb9:	adc    dl,BYTE PTR [eax-0x6d]
  428fbc:	push   ecx
  428fbd:	bound  ebp,QWORD PTR [ebx+0x1ee55645]
  428fc3:	xor    ebp,eax
  428fc5:	dec    edx
  428fc6:	lock xchg ecx,eax
  428fc8:	jg     0x429045
  428fca:	dec    ebx
  428fcb:	mov    cl,BYTE PTR [eax+0x10b9e9f]
  428fd1:	lods   eax,DWORD PTR ds:[esi]
  428fd2:	mov    ebp,DWORD PTR [eax+0x4f]
  428fd5:	cmp    ch,bh
  428fd7:	lods   al,BYTE PTR ds:[esi]
  428fd8:	dec    eax
  428fd9:	pop    ds
  428fda:	inc    esp
  428fdb:	jb     0x428f7a
  428fdd:	xchg   BYTE PTR ds:[edi],al
  428fe0:	mov    esi,0x9abcc8cb
  428fe5:	out    dx,eax
  428fe6:	add    cl,bh
  428fe8:	fsubr  DWORD PTR [esi]
  428fea:	inc    edi
  428feb:	add    ah,ch
  428fed:	mov    DWORD PTR [ecx+eax*2],esi
  428ff0:	mov    dh,0xdc
  428ff2:	imul   BYTE PTR [esi+0x69e1da25]
  428ff8:	nop
  428ff9:	cmp    esp,edx
  428ffb:	cmp    BYTE PTR [esi+0x50],cl
  428ffe:	push   esp
  428fff:	sub    eax,0xe9af0035
  429004:	add    DWORD PTR [ebx],0x6669c610
  42900a:	sahf   
  42900b:	mov    ebx,0x548c6700
  429010:	xor    bl,BYTE PTR [esi+edx*4-0x52af6e39]
  429017:	sub    bl,BYTE PTR [ecx]
  429019:	in     al,0xce
  42901b:	and    ebp,DWORD PTR [eax]
  42901d:	jp     0x42903b
  42901f:	in     al,dx
  429020:	jle    0x429083
  429022:	dec    eax
  429023:	sbb    al,0x24
  429025:	fbstp  TBYTE PTR [ebp+0x7d06f6b1]
  42902b:	pop    ds
  42902c:	cmp    bh,ah
  42902e:	push   ebx
  42902f:	ins    DWORD PTR es:[edi],dx
  429030:	and    eax,0xe5b6e4a3
  429035:	mov    bl,0xda
  429037:	dec    ecx
  429038:	sar    BYTE PTR [eax+eax*2+0x5f04d8fa],cl
  42903f:	cld    
  429040:	cli    
  429041:	arpl   WORD PTR [ebx+0x0],sp
  429044:	mov    edx,0xb785df36
  429049:	sub    eax,0xe9ec5659
  42904e:	adc    eax,0x2c4e1111
  429053:	imul   ecx,DWORD PTR [eax-0x1662b993],0x7c91299
  42905d:	pop    ss
  42905e:	mov    BYTE PTR [eax],ch
  429060:	mov    ecx,eax
  429062:	xlat   BYTE PTR ds:[ebx]
  429063:	in     al,0x4d
  429065:	mov    es,WORD PTR [edx-0x5e]
  429068:	sbb    eax,0x74a1bdd3
  42906d:	push   ebp
  42906e:	(bad)  
  42906f:	std    
  429070:	sbb    esi,DWORD PTR [esi*4-0x221bb085]
  429077:	xchg   ebx,eax
  429078:	or     cl,BYTE PTR [ecx+0x4c3652f4]
  42907e:	in     eax,dx
  42907f:	mov    al,ds:0x8aeda113
  429084:	mov    fs,WORD PTR ds:0x8c76c1c6
  42908a:	mov    DWORD PTR [ecx],ebx
  42908c:	mov    ah,0xee
  42908e:	fst    DWORD PTR ss:[ecx-0x543b9f21]
  429095:	mov    bl,al
  429097:	push   edx
  429098:	cmc    
  429099:	gs jmp 0x4290f8
  42909c:	loop   0x42904c
  42909e:	cli    
  42909f:	sub    al,0x8b
  4290a1:	mov    esi,0x7d70cb27
  4290a6:	test   BYTE PTR [edx+ecx*2],0xdd
  4290aa:	and    al,0x82
  4290ac:	ins    BYTE PTR es:[edi],dx
  4290ad:	fcmovne st,st(3)
  4290af:	pop    es
  4290b0:	push   0xd0a13cb5
  4290b5:	jo     0x4290e8
  4290b7:	mov    ds:0x4644b9f9,al
  4290bc:	cmp    edx,esp
  4290be:	stos   BYTE PTR es:[edi],al
  4290bf:	mov    fs,ebx
  4290c1:	cmp    BYTE PTR [edx+eiz*1],bl
  4290c4:	shl    BYTE PTR [eax-0x4d],0xed
  4290c8:	out    0x4e,al
  4290ca:	test   al,0xf
  4290cc:	int3   
  4290cd:	mov    DWORD PTR ds:0x409dd71a,0x10c4e8af
  4290d7:	push   cs
  4290d8:	dec    BYTE PTR [ecx-0x5c2d17f4]
  4290de:	ins    DWORD PTR es:[edi],dx
  4290df:	nop
  4290e0:	sub    edx,DWORD PTR [ecx-0x4]
  4290e3:	popf   
  4290e4:	mov    al,ds:0xdc3525c9
  4290e9:	in     al,dx
  4290ea:	mov    eax,ds:0x221b7a2
  4290ef:	test   al,0xe8
  4290f1:	xchg   BYTE PTR [edi-0x382685fe],bh
  4290f7:	lahf   
  4290f8:	mov    esi,0x9309034b
  4290fd:	push   edi
  4290fe:	sub    al,0x98
  429100:	xor    ah,bl
  429102:	mov    edx,0xd0919825
  429107:	dec    esp
  429108:	or     al,ah
  42910a:	mov    al,ds:0x478adeb3
  42910f:	lea    ebx,[edi+0x35a5089]
  429115:	push   ds
  429116:	sub    ebp,DWORD PTR [ecx-0x4c]
  429119:	push   cs
  42911a:	cmp    eax,0xfd0a6a5f
  42911f:	pop    ss
  429120:	(bad)  
  429122:	pop    edi
  429123:	ret    
  429124:	cmp    edi,DWORD PTR [ebx]
  429126:	fs pop ss
  429128:	lahf   
  429129:	cmp    DWORD PTR [ebx+0xb],ecx
  42912c:	push   ecx
  42912d:	pop    ss
  42912e:	jle    0x429151
  429130:	idiv   DWORD PTR [edi-0x1a]
  429133:	or     DWORD PTR [edi+0x31c5953b],0xdbc3dea3
  42913d:	pop    ecx
  42913e:	daa    
  42913f:	aam    0x8d
  429141:	jg     0x429159
  429143:	ror    bh,1
  429145:	pop    ss
  429146:	dec    edx
  429147:	ret    
  429148:	inc    edi
  429149:	push   cs
  42914a:	and    BYTE PTR [edx],ch
  42914c:	loop   0x429126
  42914e:	inc    ecx
  42914f:	xchg   esi,eax
  429150:	in     eax,0x37
  429152:	cmp    eax,0x93268b41
  429157:	push   cs
  429158:	bound  ebx,QWORD PTR [edx]
  42915a:	addr16 jns 0x429178
  42915d:	out    0x1a,eax
  42915f:	push   edx
  429160:	sar    DWORD PTR [ebx],cl
  429162:	jno    0x429177
  429164:	cld    
  429165:	test   al,bh
  429167:	lods   al,BYTE PTR ds:[esi]
  429168:	mov    ebx,0xa8d09ca2
  42916d:	cmp    DWORD PTR [ecx+0x21],eax
  429170:	cld    
  429171:	imul   ebp,eax,0x67e558a7
  429177:	adc    DWORD PTR [ebx+0x7de995e0],ecx
  42917d:	rcr    DWORD PTR [ebx],0xe8
  429180:	lods   al,BYTE PTR ds:[esi]
  429181:	adc    al,0xb4
  429183:	sbb    ch,dl
  429185:	call   0xff3e:0xeb7a5a02
  42918c:	dec    ebp
  42918d:	xor    al,ch
  42918f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  429190:	dec    ebp
  429191:	int    0x31
  429193:	in     al,dx
  429194:	pushf  
  429195:	ins    DWORD PTR es:[edi],dx
  429196:	loop   0x429160
  429198:	into   
  429199:	mov    esp,0xbf42c4e
  42919e:	nop
  42919f:	pop    ss
  4291a0:	rcl    ebx,0xc3
  4291a3:	mov    esi,0x3764eb61
  4291a8:	mov    ah,0x42
  4291aa:	adc    ecx,DWORD PTR [eax]
  4291ac:	stos   BYTE PTR es:[edi],al
  4291ad:	xchg   edx,eax
  4291ae:	mov    esp,0x14467149
  4291b3:	cdq    
  4291b4:	(bad)  
  4291b7:	enter  0xe125,0x27
  4291bb:	inc    ebp
  4291bc:	into   
  4291bd:	fiadd  WORD PTR [edx+0x5859da53]
  4291c3:	jl     0x42915f
  4291c5:	ins    DWORD PTR es:[edi],dx
  4291c6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4291c7:	pop    esi
  4291c8:	push   eax
  4291c9:	push   esi
  4291ca:	sbb    eax,0xe4551ea4
  4291cf:	push   cs
  4291d0:	test   eax,0x5a2e9a6a
  4291d5:	outs   dx,DWORD PTR ds:[esi]
  4291d6:	xor    eax,0x226e9331
  4291db:	mov    ds:0x2bf17a4f,eax
  4291e0:	mov    ecx,0x7324f6c5
  4291e5:	test   BYTE PTR [edi],dl
  4291e7:	ror    DWORD PTR fs:[ecx],0x1c
  4291eb:	xchg   ebx,eax
  4291ec:	mov    bh,0xc0
  4291ee:	inc    ecx
  4291ef:	push   esi
  4291f0:	mov    dl,0xfe
  4291f2:	pop    esp
  4291f3:	loop   0x4291a8
  4291f5:	pop    ds
  4291f6:	adc    dh,BYTE PTR [esi]
  4291f8:	mov    esi,0xcb0aac24
  4291fd:	out    0xa8,eax
  4291ff:	jmp    0x3884:0x7602f3d9
  429206:	add    DWORD PTR [esi],esp
  429208:	fild   WORD PTR [eax+0x6dc79a9d]
  42920e:	stos   DWORD PTR es:[edi],eax
  42920f:	adc    dl,al
  429211:	addr16 and bl,0xd3
  429215:	mov    DWORD PTR [ecx-0x5a92ce89],ecx
  42921b:	stc    
  42921c:	icebp  
  42921d:	adc    eax,0x3fc1c84d
  429222:	sub    eax,0xf397855a
  429227:	rcr    ecx,cl
  429229:	ret    0xadd8
  42922c:	mov    dl,0xd0
  42922e:	add    cl,ch
  429230:	lds    edi,FWORD PTR ds:0x89364646
  429236:	lds    eax,FWORD PTR [ebx-0x3]
  429239:	sub    eax,0x2ab88e10
  42923e:	imul   BYTE PTR [eax]
  429240:	pop    eax
  429241:	sbb    bl,BYTE PTR [eax]
  429243:	int    0xa0
  429245:	cld    
  429246:	inc    edi
  429247:	jae    0x4291f8
  429249:	push   cs
  42924a:	pop    ds
  42924b:	adc    eax,ebp
  42924d:	dec    ebp
  42924e:	pop    edx
  42924f:	xchg   esp,eax
  429250:	push   eax
  429251:	aam    0xaf
  429253:	sbb    eax,0xcc683279
  429258:	data16 xor ah,BYTE PTR [ecx-0x10]
  42925c:	fimul  WORD PTR [ebx+0x1e638f78]
  429262:	sub    eax,0x49ccda75
  429267:	rdmsr  
  429269:	mov    eax,ds:0x2824ee3f
  42926e:	push   ecx
  42926f:	ja     0x4292ed
  429271:	sub    BYTE PTR [esi],ch
  429273:	retf   
  429274:	jmp    0x9185:0xdb1720df
  42927b:	popf   
  42927c:	imul   ebx,DWORD PTR [ebp+0x7b],0xf5c4adaf
  429283:	bound  ebx,QWORD PTR [esi]
  429285:	push   eax
  429286:	je     0x42920e
  429288:	fadd   DWORD PTR [eax+0x5f]
  42928b:	inc    eax
  42928c:	popf   
  42928d:	dec    ebx
  42928e:	cld    
  42928f:	or     cl,ch
  429291:	mov    ds:0x144b7f1b,eax
  429296:	or     ch,BYTE PTR [ebx-0x455545d3]
  42929c:	sti    
  42929d:	js     0x429260
  42929f:	mov    eax,ds:0xbcabb1f2
  4292a4:	lock dec edi
  4292a6:	test   eax,ebx
  4292a8:	jb     0x429244
  4292aa:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4292ab:	push   cs
  4292ac:	sbb    cl,BYTE PTR [ebx+0x2ceb947c]
  4292b2:	sbb    al,0x5
  4292b4:	je     0x4292ab
  4292b6:	imul   edi,DWORD PTR [ecx+edi*1],0xa826eed7
  4292bd:	xchg   ebp,eax
  4292be:	xchg   ebx,eax
  4292bf:	(bad)  
  4292c0:	adc    al,bl
  4292c2:	sbb    bl,dh
  4292c4:	cmp    DWORD PTR [esp+ebp*4-0x14bef824],ebx
  4292cb:	jp     0x4292bc
  4292cd:	mov    ebx,0xd49c51f7
  4292d2:	in     al,0x92
  4292d4:	lds    esp,FWORD PTR [eax+ebp*2+0x3ab35d3d]
  4292db:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4292dc:	xor    BYTE PTR [esi],bl
  4292de:	pop    ds
  4292df:	idiv   BYTE PTR [edx+0x7604eb18]
  4292e5:	cmp    al,0x6e
  4292e7:	xchg   dh,ah
  4292e9:	push   esp
  4292ea:	xor    eax,DWORD PTR [ebx+0xddc7a0d]
  4292f0:	test   DWORD PTR [esi-0xe],esi
  4292f3:	(bad)  
  4292f4:	jmp    FWORD PTR [ebp+0x20]
  4292f7:	retf   
  4292f8:	jl     0x429341
  4292fa:	xor    ebp,DWORD PTR ss:[edx]
  4292fd:	pop    ss
  4292fe:	cmp    BYTE PTR [eax-0x5b],cl
  429301:	stos   DWORD PTR es:[edi],eax
  429302:	sub    cl,dh
  429304:	(bad)  
  429305:	into   
  429306:	or     BYTE PTR [eax-0x7efacc06],ch
  42930c:	out    dx,al
  42930d:	mov    al,0xdd
  42930f:	sub    al,0x78
  429311:	call   0xc4da:0x531c8f8f
  429318:	dec    ecx
  429319:	xor    al,0x63
  42931b:	ds jns 0x42935f
  42931e:	pop    edi
  42931f:	inc    edx
  429320:	dec    eax
  429321:	ds (bad) 
  429323:	out    dx,al
  429324:	mov    ds:0xa6cdaebc,al
  429329:	jne    0x42931e
  42932b:	call   0xbebb:0x5acd779
  429332:	mov    ah,0x17
  429334:	shr    DWORD PTR [edx+ecx*1-0x49],cl
  429338:	ins    DWORD PTR es:[edi],dx
  429339:	dec    esi
  42933a:	adc    al,0x74
  42933c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42933d:	xor    esp,DWORD PTR [eax]
  42933f:	inc    BYTE PTR [esi+0x5628648c]
  429345:	push   ebp
  429346:	jmp    0xa02b:0x2e460f75
  42934d:	mov    eax,0xa0ac6aeb
  429352:	inc    esp
  429353:	jmp    0x4293ab
  429355:	aad    0x6b
  429357:	ja     0x4292da
  429359:	mov    esp,0xd44f68c8
  42935e:	jnp    0x429351
  429360:	add    BYTE PTR ss:0x5c3ae59e,ch
  429367:	ja     0x4293de
  429369:	or     al,0x56
  42936b:	and    bh,ah
  42936d:	dec    ecx
  42936e:	add    ebp,DWORD PTR [esi+0x3f742833]
  429374:	fs pop ebx
  429376:	frstor [edx+0x39a75a01]
  42937c:	iret   
  42937d:	in     eax,dx
  42937e:	retf   0xecfe
  429381:	xor    edi,DWORD PTR ss:[esi+0x79]
  429385:	pop    esi
  429386:	int    0xb4
  429388:	xchg   esp,eax
  429389:	call   0x8e0ed498
  42938e:	inc    ecx
  42938f:	xchg   ecx,eax
  429390:	push   0xffffff89
  429392:	(bad)  
  429393:	xlat   BYTE PTR ds:[ebx]
  429394:	mov    edi,0x28cc42d
  429399:	mov    ebx,0x89c07b59
  42939e:	push   ecx
  42939f:	fadd   st,st(7)
  4293a1:	mov    ch,0xe2
  4293a3:	aad    0x3c
  4293a5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4293a6:	(bad)  
  4293a7:	xchg   esi,eax
  4293a8:	jo     0x429395
  4293aa:	jae    0x4293e0
  4293ac:	fld    TBYTE PTR [ebx]
  4293ae:	push   0xb
  4293b0:	outs   dx,DWORD PTR ds:[esi]
  4293b1:	push   0x1e
  4293b3:	cmp    eax,0x11f5eb71
  4293b8:	out    0x3d,eax
  4293ba:	or     edx,esp
  4293bc:	lods   eax,DWORD PTR ds:[esi]
  4293bd:	ret    
  4293be:	xchg   DWORD PTR [esp+edx*2-0x18],edx
  4293c2:	and    ebx,DWORD PTR [edi+ecx*2+0x76]
  4293c6:	iret   
  4293c7:	call   0x70e5:0x465edf14
  4293ce:	lods   al,BYTE PTR ds:[esi]
  4293cf:	jnp    0x42937f
  4293d1:	push   edi
  4293d2:	jl     0x4293db
  4293d4:	lods   eax,DWORD PTR fs:[esi]
  4293d6:	into   
  4293d7:	mov    esi,0x17e4643b
  4293dc:	mov    esi,0x7c375897
  4293e1:	scas   eax,DWORD PTR es:[edi]
  4293e2:	outs   dx,DWORD PTR ds:[esi]
  4293e3:	push   eax
  4293e4:	sbb    dl,BYTE PTR [ebx]
  4293e6:	adc    bh,BYTE PTR [edx+0x24e944aa]
  4293ec:	mov    al,0xf2
  4293ee:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4293ef:	fistp  WORD PTR [ecx+0x65]
  4293f2:	aad    0xd
  4293f4:	lods   eax,DWORD PTR ds:[esi]
  4293f5:	push   0x9e454838
  4293fa:	adc    al,0x50
  4293fc:	mov    eax,ds:0x2f40a108
  429401:	jecxz  0x4293b8
  429403:	cld    
  429404:	inc    edi
  429405:	mov    ch,0x94
  429407:	pop    ebp
  429408:	test   edx,eax
  42940a:	xchg   esi,eax
  42940b:	adc    BYTE PTR [eax+eax*1-0x1c178924],cl
  429412:	in     eax,0x92
  429414:	dec    edx
  429415:	pop    eax
  429416:	aad    0x23
  429418:	in     eax,dx
  429419:	mov    ds:0xf9ec5127,al
  42941e:	sub    BYTE PTR [esi],bl
  429420:	jge    0x429474
  429422:	in     al,0xc4
  429424:	add    dh,BYTE PTR [esi]
  429426:	lds    ebx,FWORD PTR fs:[edx-0x3aea0bb3]
  42942d:	mov    eax,0x3c604645
  429432:	mov    BYTE PTR [esi-0x1a],bl
  429435:	adc    BYTE PTR [esi-0x77],ch
  429438:	addr16 addr16 ja 0x4294a8
  42943c:	pop    ebp
  42943d:	push   es
  42943e:	shl    DWORD PTR [edx],cl
  429440:	xor    ebp,esi
  429442:	lods   eax,DWORD PTR ds:[esi]
  429443:	cmp    DWORD PTR [ebx-0x49],eax
  429446:	sbb    eax,ecx
  429448:	mov    DWORD PTR [ebx],ebx
  42944a:	xor    al,0x76
  42944c:	jo     0x429448
  42944e:	les    ebp,FWORD PTR [esi-0x2c]
  429451:	mov    dh,0xbf
  429453:	imul   ecx,DWORD PTR [ebp+ecx*1-0x5efcf365],0xffffffbc
  42945b:	inc    esp
  42945c:	sbb    cl,BYTE PTR [esi+0x26f71480]
  429462:	jnp    0x42946b
  429464:	xchg   ebp,eax
  429465:	arpl   di,bx
  429467:	(bad)  
  429469:	jp     0x429472
  42946b:	inc    ebp
  42946c:	inc    ebp
  42946d:	inc    eax
  42946e:	call   0x16a73e4b
  429473:	jb     0x4294de
  429475:	xor    BYTE PTR [esi],bh
  429477:	jl     0x429410
  429479:	add    eax,0x360c456c
  42947e:	xchg   ah,ch
  429480:	sbb    bh,BYTE PTR [edi+0x4035d537]
  429486:	or     al,0xb2
  429488:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  429489:	or     eax,0xe62e464
  42948e:	dec    ebx
  42948f:	mov    ah,0x3d
  429491:	in     eax,dx
  429492:	xor    esp,DWORD PTR ds:0xaaca9d8a
  429498:	iret   
  429499:	out    dx,al
  42949a:	jle    0x4294ba
  42949c:	mov    bp,0xd257
  4294a0:	xor    BYTE PTR [eax-0x75a90317],bh
  4294a6:	icebp  
  4294a7:	or     dl,BYTE PTR [ebp+0x65]
  4294aa:	je     0x42944e
  4294ac:	repz in eax,dx
  4294ae:	aaa    
  4294af:	(bad)  
  4294b0:	mov    ds:0x1c851feb,eax
  4294b5:	loop   0x4294d9
  4294b7:	dec    ebx
  4294b8:	mov    al,0x4d
  4294ba:	cmp    ah,BYTE PTR [edi-0x2a]
  4294bd:	pop    ebp
  4294be:	je     0x4294e6
  4294c0:	sub    eax,0xb57d7412
  4294c5:	and    BYTE PTR [ebp+0x7901194],ch
  4294cb:	jl     0x4294ec
  4294cd:	and    eax,0x45dfd913
  4294d2:	mov    bh,0x62
  4294d4:	out    0xc1,eax
  4294d6:	adc    al,0xf2
  4294d8:	push   cs
  4294d9:	fnstenv [esi]
  4294db:	retf   
  4294dc:	and    edi,edi
  4294de:	sbb    BYTE PTR [ecx-0x23c33da3],bh
  4294e4:	(bad)  
  4294e5:	retf   
  4294e6:	aam    0xab
  4294e8:	pop    eax
  4294e9:	or     DWORD PTR ds:0x46236a9f,ecx
  4294ef:	inc    eax
  4294f0:	sbb    dl,ch
  4294f2:	jl     0x429558
  4294f4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4294f5:	or     esp,ecx
  4294f7:	push   ebx
  4294f8:	call   0x1d1c00f
  4294fd:	aas    
  4294fe:	add    al,0xad
  429500:	inc    eax
  429501:	(bad)  
  429502:	call   0xe02ed875
  429507:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  429508:	in     al,dx
  429509:	cmp    DWORD PTR [ecx],edi
  42950b:	cld    
  42950c:	jae    0x4294f4
  42950e:	outs   dx,BYTE PTR ds:[esi]
  42950f:	cmp    al,0xfa
  429511:	push   edi
  429512:	inc    esi
  429513:	cmc    
  429514:	xchg   ebx,eax
  429515:	xor    al,0x60
  429517:	cli    
  429518:	popf   
  429519:	adc    BYTE PTR [ecx+0x79201028],ah
  42951f:	push   ecx
  429520:	ret    0x1aaa
  429523:	fadd   st(0),st
  429525:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  429526:	push   esp
  429527:	cmp    DWORD PTR [ebx],eax
  429529:	xchg   BYTE PTR [ecx+0x4b8ca50d],dl
  42952f:	push   eax
  429530:	xchg   BYTE PTR [edx+0x5],dh
  429533:	and    BYTE PTR [edx-0x185fd569],al
  429539:	ficom  WORD PTR [esi+ebx*1-0x40]
  42953d:	in     eax,dx
  42953e:	jns    0x429595
  429540:	adc    ah,ah
  429542:	mov    bh,0xc6
  429544:	arpl   bx,sp
  429546:	shr    ch,cl
  429548:	dec    esi
  429549:	sbb    eax,ebx
  42954b:	sub    eax,0xf9054b58
  429550:	retf   
  429551:	aas    
  429552:	push   edi
  429553:	pop    ecx
  429554:	aas    
  429555:	enter  0xec99,0x71
  429559:	icebp  
  42955a:	popf   
  42955b:	and    bh,BYTE PTR [edi+0x72cc627d]
  429561:	and    bh,bl
  429563:	pop    esp
  429564:	shr    DWORD PTR [ebx],1
  429566:	sbb    eax,0x25e02693
  42956b:	(bad)  
  42956d:	setno  BYTE PTR [ecx]
  429570:	imul   ecx,DWORD PTR [ebx+ecx*8-0x3c],0xffffff82
  429575:	out    dx,al
  429576:	jne    0x42956b
  429578:	cli    
  429579:	rcr    DWORD PTR [ecx],cl
  42957b:	or     al,0xc5
  42957d:	xor    BYTE PTR [edx+0x41],bh
  429580:	push   ds
  429581:	sbb    ah,BYTE PTR [ecx]
  429583:	cwde   
  429584:	inc    edx
  429585:	mul    BYTE PTR [ebx+0x8]
  429588:	retf   0xfe63
  42958b:	adc    eax,0x53df4912
  429590:	test   eax,0x90884745
  429595:	and    ebp,DWORD PTR [ebp-0x5a]
  429598:	jmp    0xe48d:0x2c922e4b
  42959f:	fwait
  4295a0:	mov    ds:0x92cda26d,al
  4295a5:	inc    esp
  4295a6:	(bad)  
  4295a7:	in     al,0x77
  4295a9:	and    ecx,esp
  4295ab:	clc    
  4295ac:	out    0x75,al
  4295ae:	lea    eax,[ecx+0x2b]
  4295b1:	mov    dh,0xb5
  4295b3:	cmp    DWORD PTR [esi+0xe],edx
  4295b6:	sbb    bl,bl
  4295b8:	popa   
  4295b9:	(bad)  
  4295ba:	call   0x91931679
  4295bf:	fiadd  WORD PTR [esi+eiz*4+0x731972e2]
  4295c6:	sbb    al,0xc7
  4295c9:	dec    ecx
  4295ca:	scas   eax,DWORD PTR es:[edi]
  4295cb:	in     eax,0x65
  4295cd:	jb     0x4295f1
  4295cf:	aam    0x4e
  4295d1:	test   eax,0x483911b0
  4295d6:	push   cs
  4295d7:	jge    0x42963a
  4295d9:	int    0x91
  4295db:	jmp    0x9a20:0xee69e0c9
  4295e2:	ficom  WORD PTR [ebp-0xb]
  4295e5:	mov    eax,0x5e05b56d
  4295ea:	aad    0x33
  4295ec:	adc    bh,cl
  4295ee:	add    eax,0xf94aa14c
  4295f3:	mov    bl,0x6b
  4295f5:	and    DWORD PTR ds:0xf7c7104c,esi
  4295fb:	lahf   
  4295fc:	sbb    al,0x2d
  4295fe:	fisub  WORD PTR [ebx]
  429600:	adc    eax,0xd9964ebd
  429605:	sbb    al,0xe1
  429607:	pop    edi
  429608:	div    BYTE PTR [eax-0x55]
  42960b:	outs   dx,DWORD PTR ds:[esi]
  42960c:	inc    ebx
  42960d:	sub    BYTE PTR [ebx],bh
  42960f:	pop    esp
  429610:	jne    0x4295cf
  429612:	stos   DWORD PTR es:[edi],eax
  429613:	(bad)  
  429614:	jae    0x429692
  429616:	or     BYTE PTR [ebx+0x1a],cl
  429619:	sti    
  42961a:	jbe    0x4295d1
  42961c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42961d:	test   al,0x75
  42961f:	sahf   
  429620:	call   0x962249b9
  429625:	add    BYTE PTR [ebp-0x5777ed0b],bh
  42962b:	clc    
  42962c:	aaa    
  42962d:	pusha  
  42962e:	(bad)  
  42962f:	sbb    eax,0x349953a3
  429634:	out    dx,eax
  429635:	inc    esp
  429636:	adc    ch,BYTE PTR [eax+0x18]
  429639:	out    dx,eax
  42963a:	sbb    al,0xcb
  42963c:	mov    ah,0xe8
  42963e:	cmp    bl,ch
  429640:	cdq    
  429641:	add    DWORD PTR [edx-0x77],0xfd467bba
  429648:	add    DWORD PTR [edi+ebx*1+0x3d25c00f],esp
  42964f:	xor    eax,edi
  429651:	sub    edi,DWORD PTR [ebp+0x2]
  429654:	jl     0x429695
  429656:	jno    0x42966f
  429658:	imul   esi,DWORD PTR [eax],0x6c7824dc
  42965e:	adc    bl,cl
  429660:	fild   DWORD PTR [eax]
  429662:	xor    ebx,ecx
  429664:	loop   0x4296c7
  429666:	add    ch,BYTE PTR [eax]
  429668:	arpl   WORD PTR [esi+0x3e],bx
  42966b:	out    0xbf,al
  42966d:	pop    esp
  42966e:	or     eax,0x1b30929e
  429673:	cmp    dl,BYTE PTR [edx]
  429675:	mov    ds:0xa9cba2b3,eax
  42967a:	or     DWORD PTR [ecx-0x67a9a49e],ebx
  429680:	xchg   esi,eax
  429681:	cmp    BYTE PTR [ebx-0x5aef3fcc],0xe4
  429688:	sbb    al,0x21
  42968a:	xlat   BYTE PTR ds:[ebx]
  42968b:	mov    gs,ecx
  42968d:	sbb    ch,ch
  42968f:	outs   dx,DWORD PTR ds:[esi]
  429690:	mov    bl,dh
  429692:	lods   al,BYTE PTR ds:[esi]
  429693:	jp     0x429619
  429695:	push   ds
  429696:	aad    0x57
  429698:	jbe    0x429686
  42969a:	push   esp
  42969b:	mov    bl,0x5f
  42969d:	xchg   esp,eax
  42969e:	xchg   BYTE PTR [edi-0x56e83b34],ch
  4296a4:	pop    eax
  4296a5:	mov    bh,0x54
  4296a7:	(bad)  [ecx]
  4296a9:	add    al,0x86
  4296ab:	jb     0x429676
  4296ad:	dec    ebx
  4296ae:	add    DWORD PTR [ecx+ebp*4+0x276acab3],ebp
  4296b5:	pop    ebx
  4296b6:	fst    DWORD PTR [ecx-0x67]
  4296b9:	cmp    dl,bl
  4296bb:	pop    esp
  4296bc:	aam    0x8e
  4296be:	adc    DWORD PTR [ebx],0xffffff88
  4296c1:	retf   
  4296c2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4296c3:	xchg   esi,eax
  4296c4:	lock stc 
  4296c6:	mov    edx,DWORD PTR gs:[edi+0x5f7a3fcc]
  4296cd:	xor    edx,DWORD PTR [edi]
  4296cf:	retf   0xbaf5
  4296d2:	fwait
  4296d3:	sub    edx,edx
  4296d5:	add    cl,BYTE PTR [ebx]
  4296d7:	jno    0x4296cf
  4296d9:	div    BYTE PTR [eax-0x2eae0656]
  4296df:	ret    
  4296e0:	mov    ebx,0x22f61c3c
  4296e5:	das    
  4296e6:	in     al,0xce
  4296e8:	stos   DWORD PTR es:[edi],eax
  4296e9:	sbb    al,0x3a
  4296eb:	hlt    
  4296ec:	push   ebp
  4296ed:	mov    ah,0x8
  4296ef:	cmp    BYTE PTR [edx-0x6],bh
  4296f2:	add    DWORD PTR [ebx+0x43c29019],0xffffffab
  4296f9:	or     edi,ecx
  4296fb:	in     eax,0x96
  4296fd:	jno    0x429681
  4296ff:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  429700:	xlat   BYTE PTR ds:[ebx]
  429701:	imul   esi,esp,0x8dda51f7
  429707:	mov    ds:0x3241771d,al
  42970c:	cld    
  42970d:	jmp    0x1b1fd2ad
  429712:	arpl   WORD PTR [esp+edi*1],bp
  429715:	dec    esi
  429716:	sub    DWORD PTR [edx-0x18f84917],edx
  42971c:	fiadd  DWORD PTR [ecx+0x7913b037]
  429722:	mov    esi,0x1d1e7779
  429727:	push   esp
  429728:	aad    0xb9
  42972a:	adc    DWORD PTR [esi+0x2d333174],edi
  429730:	add    ch,bh
  429732:	or     al,0x43
  429734:	or     BYTE PTR [eax+0x5f],ch
  429737:	cwde   
  429738:	add    al,0xc7
  42973a:	mov    ebp,0xbcff5a12
  42973f:	push   esi
  429740:	les    esi,FWORD PTR ds:0x8fb98a9d
  429746:	lock lahf 
  429748:	xchg   DWORD PTR [eax+0x320ce650],esp
  42974e:	rep movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  429750:	fldenv [ecx]
  429752:	(bad)  
  429755:	and    DWORD PTR [esi+0x7192dae2],edx
  42975b:	in     al,dx
  42975c:	xchg   DWORD PTR ss:[ecx-0x1d],edi
  429760:	add    ecx,edi
  429762:	jp     0x42973a
  429764:	je     0x4297d3
  429766:	or     DWORD PTR [ebx-0x34],esi
  429769:	pop    esp
  42976a:	push   esp
  42976b:	cdq    
  42976c:	imul   ebx,eax,0xce22f9b6
  429772:	xor    eax,0xa0975d0a
  429777:	leave  
  429778:	xchg   esi,eax
  429779:	lds    edx,FWORD PTR [ebp+0x29fddc71]
  42977f:	test   DWORD PTR [esi+0x2d],ebp
  429782:	push   esp
  429783:	mov    esp,0x7e5ddc6f
  429788:	sbb    edx,ebx
  42978a:	jbe    0x429778
  42978c:	enter  0x6c37,0x66
  429790:	push   esi
  429791:	cmp    al,0xed
  429793:	dec    ebx
  429794:	pop    ebp
  429795:	mov    bl,0x8f
  429797:	sahf   
  429798:	push   ebp
  429799:	outs   dx,DWORD PTR ds:[esi]
  42979a:	adc    al,0xe9
  42979c:	adc    esi,DWORD PTR [ebx-0x4b0833af]
  4297a2:	pop    ss
  4297a3:	shr    BYTE PTR [esp+esi*8+0x52],1
  4297a7:	push   es
  4297a8:	push   ss
  4297a9:	push   es
  4297aa:	pop    ebp
  4297ab:	pop    ecx
  4297ac:	inc    edi
  4297ad:	pushf  
  4297ae:	es (bad) 
  4297b0:	xchg   ebx,eax
  4297b1:	gs inc esi
  4297b3:	mov    bh,0x26
  4297b5:	adc    BYTE PTR [esi-0x45],0x40
  4297b9:	mov    al,0x4e
  4297bb:	inc    eax
  4297bc:	adc    BYTE PTR [eax],al
  4297be:	aaa    
  4297bf:	push   ds
  4297c0:	dec    ecx
  4297c1:	or     edx,edx
  4297c3:	pushf  
  4297c4:	mov    BYTE PTR [edi+0x7a],bh
  4297c7:	xchg   edx,eax
  4297c8:	mov    dl,0xcd
  4297ca:	fiadd  WORD PTR [ebp-0x75e0a70b]
  4297d0:	sahf   
  4297d1:	pop    ds
  4297d2:	adc    edx,edi
  4297d4:	xchg   ebx,eax
  4297d5:	jmp    0x429846
  4297d7:	fcom   QWORD PTR [esi-0x26954823]
  4297dd:	lahf   
  4297de:	(bad)  
  4297e0:	xor    cx,WORD PTR [ecx+0x6d]
  4297e4:	in     al,0xc0
  4297e6:	and    eax,0xfc5fcf29
  4297eb:	pop    DWORD PTR [edx]
  4297ed:	mov    ah,0x9d
  4297ef:	and    DWORD PTR [ebx],edx
  4297f1:	jmp    0xd7045e3e
  4297f6:	aas    
  4297f7:	jmp    0x449:0x2c3d66c9
  4297fe:	ss ins DWORD PTR es:[edi],dx
  429800:	mov    eax,0x90424856
  429805:	mov    edx,0x35d02c39
  42980a:	outs   dx,BYTE PTR ds:[esi]
  42980b:	fcmove st,st(4)
  42980d:	rol    BYTE PTR [edx+0x6c],1
  429810:	jle    0x429816
  429812:	inc    esi
  429813:	add    DWORD PTR [edi-0x4e],edx
  429816:	(bad)  
  429817:	in     al,0xe0
  429819:	cmp    eax,ebp
  42981b:	add    edi,DWORD PTR [esi-0x7c377bc4]
  429821:	adc    esi,DWORD PTR [esi]
  429823:	stos   DWORD PTR es:[edi],eax
  429824:	jp     0x4297bf
  429826:	js     0x429869
  429828:	clc    
  429829:	sbb    WORD PTR [esi-0x71ffafc4],sp
  429830:	iret   
  429831:	in     eax,dx
  429832:	mov    ecx,0x2cd83525
  429837:	push   es
  429838:	(bad)  
  429839:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42983a:	inc    ebx
  42983b:	cmp    eax,0x33b9da34
  429840:	out    0xaa,eax
  429842:	sub    eax,0x8c7b5631
  429847:	les    esp,FWORD PTR [esi+edx*1]
  42984a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42984b:	xor    dh,BYTE PTR [edi-0x11]
  42984e:	ja     0x42982b
  429850:	mov    esi,0xe1b2d4e5
  429855:	and    DWORD PTR [edi],ecx
  429857:	push   ss
  429858:	in     al,dx
  429859:	mov    fs,WORD PTR [esi+0x43]
  42985c:	mov    bl,BYTE PTR [ebx]
  42985e:	in     eax,0x18
  429860:	or     al,0x5a
  429862:	sub    esi,edi
  429864:	jnp    0x4297ef
  429866:	mov    edi,ecx
  429868:	lock iret 
  42986a:	ins    DWORD PTR es:[edi],dx
  42986b:	nop
  42986c:	std    
  42986d:	push   DWORD PTR [esi]
  42986f:	mov    ebp,0x21c3b7b0
  429874:	pop    eax
  429875:	sahf   
  429876:	push   esi
  429877:	test   al,0x23
  429879:	sub    ecx,DWORD PTR [ecx]
  42987b:	fsub   DWORD PTR [edx+0x58d1a8c6]
  429881:	mov    di,0xa00e
  429885:	push   ecx
  429886:	mov    esi,0x62993abb
  42988b:	je     0x4298f2
  42988d:	sbb    dl,BYTE PTR [esi-0x4907a3f7]
  429893:	jbe    0x4298d0
  429895:	fistp  DWORD PTR [esi-0x731651f3]
  42989b:	or     ebp,ebp
  42989d:	sub    eax,0xbc39e824
  4298a2:	rcr    eax,cl
  4298a4:	pushf  
  4298a5:	mov    ds:0x981be968,al
  4298aa:	sbb    edi,DWORD PTR ss:[edx+0x39]
  4298ae:	cld    
  4298af:	clc    
  4298b0:	js     0x429904
  4298b2:	or     dh,bh
  4298b4:	sbb    edi,DWORD PTR [edi-0x6e07c072]
  4298ba:	sub    dh,BYTE PTR [ebp+0x4487dcce]
  4298c0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4298c1:	div    DWORD PTR [eax]
  4298c3:	out    dx,al
  4298c4:	aam    0xe8
  4298c6:	pop    ebx
  4298c7:	push   edx
  4298c8:	jo     0x429939
  4298ca:	in     al,0x4
  4298cc:	cdq    
  4298cd:	ins    BYTE PTR es:[edi],dx
  4298ce:	fist   WORD PTR [edi-0x57c17c05]
  4298d4:	dec    ebx
  4298d5:	or     esi,edx
  4298d7:	iret   
  4298d8:	cld    
  4298d9:	pop    edx
  4298da:	xor    eax,0xb383f809
  4298df:	fwait
  4298e0:	cmc    
  4298e1:	std    
  4298e2:	or     edi,DWORD PTR [edx-0x6d]
  4298e5:	adc    esp,DWORD PTR [edi-0x62]
  4298e8:	ds or  eax,0xb4f5d32e
  4298ee:	jmp    0x429961
  4298f0:	pop    esp
  4298f1:	cmp    dh,al
  4298f3:	and    al,0xcf
  4298f5:	call   0x79aae248
  4298fa:	or     ebp,DWORD PTR [edi]
  4298fc:	jmp    0xc672633c
  429901:	mov    ch,0x53
  429903:	jmp    FWORD PTR [esi-0xbfa15d0]
  429909:	or     al,0xa0
  42990b:	popf   
  42990c:	cld    
  42990d:	jge    0x4298ac
  42990f:	rcr    BYTE PTR [eax+0x4f3b744d],1
  429915:	add    esi,DWORD PTR [eax+esi*4-0x1364364d]
  42991c:	xlat   BYTE PTR ds:[ebx]
  42991e:	push   eax
  42991f:	test   dh,dh
  429921:	in     eax,0xea
  429923:	je     0x42995d
  429925:	pop    esp
  429926:	jmp    0x42996d
  429928:	or     esp,DWORD PTR [esi+0x2f]
  42992b:	add    DWORD PTR [edx-0x77],ecx
  42992e:	scas   eax,DWORD PTR es:[edi]
  42992f:	ror    dh,cl
  429931:	inc    ebp
  429932:	jmp    0x8ebfcd45
  429937:	test   al,0x8e
  429939:	jo     0x4298cd
  42993b:	mov    al,ds:0x16421256
  429940:	inc    edi
  429941:	push   esp
  429942:	mov    BYTE PTR ds:0xca7bf303,ch
  429948:	adc    dh,ch
  42994a:	xchg   edx,eax
  42994b:	popf   
  42994c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42994d:	pop    DWORD PTR [ecx-0x78df6253]
  429953:	add    DWORD PTR [ebx+0xa560b3b],0xffffff8e
  42995a:	pop    ebx
  42995b:	sub    ah,bh
  42995d:	jle    0x4299cc
  42995f:	bound  ebx,QWORD PTR [edi-0x6cdb6a84]
  429965:	inc    DWORD PTR [eax-0x24b62ac4]
  42996b:	loopne 0x429977
  42996d:	fs out dx,al
  42996f:	int    0x74
  429971:	test   eax,0x8ef565ab
  429976:	bound  edi,QWORD PTR [esi+0x8]
  429979:	dec    esp
  42997a:	mov    ebx,0xb9902e8d
  42997f:	(bad)  
  429980:	add    eax,0x41c688a4
  429985:	push   ecx
  429986:	ins    DWORD PTR es:[edi],dx
  429987:	jnp    0x4299a3
  429989:	jg     0x429959
  42998b:	sbb    eax,0xe31ec720
  429990:	push   ds
  429991:	or     eax,0x3c454157
  429996:	xor    al,0x89
  429998:	inc    eax
  429999:	shr    DWORD PTR [esi-0x2e],cl
  42999c:	pop    ss
  42999d:	imul   eax,DWORD PTR [edi-0x41fc670f],0x19
  4299a4:	mov    BYTE PTR [ebp+0x7d],ch
  4299a7:	mov    ah,0xe
  4299a9:	xor    edx,DWORD PTR [ecx+0x704589a1]
  4299af:	test   al,bh
  4299b1:	test   eax,0xe3893487
  4299b6:	mov    edi,0x7d2b4041
  4299bb:	sbb    BYTE PTR [ebx],0x16
  4299be:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4299bf:	xchg   esp,eax
  4299c0:	out    dx,al
  4299c1:	scas   al,BYTE PTR es:[edi]
  4299c2:	adc    al,0x50
  4299c4:	clc    
  4299c5:	mov    ecx,0x19aa46f3
  4299ca:	inc    ebx
  4299cb:	ret    0xef6e
  4299ce:	inc    ebx
  4299cf:	mov    ds:0xcd5db6b3,eax
  4299d4:	mov    ah,0x77
  4299d6:	push   ecx
  4299d7:	nop
  4299d8:	js     0x4299fe
  4299da:	or     dh,BYTE PTR [edx]
  4299dc:	inc    esi
  4299dd:	sbb    esp,DWORD PTR [edi]
  4299df:	push   esi
  4299e0:	mov    esp,gs
  4299e2:	mov    bl,0x19
  4299e4:	adc    esp,DWORD PTR [edx-0x17]
  4299e7:	mul    DWORD PTR [edi]
  4299e9:	daa    
  4299ea:	sbb    DWORD PTR [ebx-0x5b],ebp
  4299ed:	cli    
  4299ee:	mov    ebx,0xcc4baeaf
  4299f3:	sbb    BYTE PTR [esi+0x4e],bh
  4299f6:	ja     0x4299ac
  4299f8:	jns    0x429994
  4299fa:	out    0xe5,al
  4299fc:	popf   
  4299fd:	stc    
  4299fe:	jno    0x42999a
  429a00:	pop    esi
  429a01:	mov    eax,0x230bd138
  429a06:	repnz mov cl,0x54
  429a09:	push   es
  429a0a:	xchg   ecx,eax
  429a0b:	aam    0x1c
  429a0d:	dec    eax
  429a0e:	retf   
  429a0f:	add    bh,BYTE PTR [edx+edi*2+0x60bb3237]
  429a16:	mov    dl,0xb1
  429a18:	ror    BYTE PTR [edi+eax*1-0x201806ce],cl
  429a1f:	push   eax
  429a20:	dec    ecx
  429a21:	mov    DWORD PTR [esi+ebp*2],ebx
  429a24:	add    eax,0xde082c4c
  429a29:	pushf  
  429a2a:	or     esp,DWORD PTR [edx+0x6e]
  429a2d:	pop    edx
  429a2e:	dec    esp
  429a2f:	pop    ds
  429a30:	pop    ebp
  429a31:	icebp  
  429a32:	enter  0xafea,0xc7
  429a36:	scas   al,BYTE PTR es:[edi]
  429a37:	sar    ebp,cl
  429a39:	push   es
  429a3a:	sbb    esi,DWORD PTR [eax+ebx*2+0x672fa0d7]
  429a41:	push   cs
  429a42:	xchg   BYTE PTR [ebp-0x6b],al
  429a45:	push   DWORD PTR [esi+0x2a1044ac]
  429a4b:	inc    ebp
  429a4c:	cmp    al,0xdd
  429a4e:	push   edi
  429a4f:	in     eax,0xc3
  429a51:	jge    0x429a36
  429a53:	mov    DWORD PTR [edi+0xd],ebx
  429a56:	or     eax,0x7a32fcab
  429a5b:	jle    0x429a49
  429a5d:	mov    bl,0x25
  429a5f:	mov    ah,0x6c
  429a61:	lea    edi,[eax+edi*1-0x7951e544]
  429a68:	sub    BYTE PTR [ebp-0x1ea4ae08],cl
  429a6e:	(bad)  
  429a6f:	aas    
  429a70:	mov    ecx,DWORD PTR [eax+0x0]
  429a73:	add    eax,0x9667adc9
  429a78:	fucom  st(0)
  429a7a:	cdq    
  429a7b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  429a7c:	nop
  429a7d:	outs   dx,DWORD PTR ds:[esi]
  429a7e:	shr    BYTE PTR [esi-0x37b01dac],1
  429a84:	cdq    
  429a85:	adc    eax,0xc629165f
  429a8a:	mov    ebx,0xf3bbff23
  429a8f:	add    DWORD PTR [ecx-0xc1dfa92],edx
  429a95:	sub    ebp,DWORD PTR [ebx]
  429a97:	mov    edx,0xff3bba60
  429a9c:	repnz mov DWORD PTR [ebx-0x3b6bd6ae],ebp
  429aa3:	das    
  429aa4:	pop    ss
  429aa5:	sub    eax,0xc4209107
  429aaa:	lods   al,BYTE PTR ds:[esi]
  429aac:	loop   0x429ac7
  429aae:	arpl   WORD PTR [esi+ebp*1+0x7b],si
  429ab2:	out    dx,eax
  429ab3:	push   0x6cfb9e25
  429ab8:	sbb    DWORD PTR [ebx-0x488b60dd],ebx
  429abe:	cmp    DWORD PTR [edi+eax*8-0x6d],0xcd3ee794
  429ac6:	popf   
  429ac7:	inc    eax
  429ac8:	pop    ds
  429ac9:	adc    al,0x65
  429acb:	test   eax,0x29feb12d
  429ad0:	(bad)  
  429ad1:	bndstx [ebx+ecx*1],(bad)
  429ad5:	xor    DWORD PTR [edx-0x2c],eax
  429ad8:	mov    bl,0x9
  429ada:	ins    DWORD PTR es:[edi],dx
  429adb:	sti    
  429adc:	std    
  429add:	add    BYTE PTR [edx+0x6f],bh
  429ae0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  429ae1:	mov    cs,ebx
  429ae3:	push   ebp
  429ae4:	push   edi
  429ae5:	xchg   edi,eax
  429ae6:	cmp    dh,bh
  429ae8:	push   edi
  429ae9:	and    DWORD PTR [ecx-0x44690483],ebp
  429aef:	lods   eax,DWORD PTR ds:[esi]
  429af0:	fdivr  st(6),st
  429af2:	repnz test edx,ebx
  429af5:	es test al,0x77
  429af8:	mov    dh,0xd0
  429afa:	mov    BYTE PTR [eax],al
  429afc:	int    0x49
  429afe:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  429aff:	mov    edi,ss
  429b01:	lock aas 
  429b03:	jo     0x429acb
  429b05:	inc    ebx
  429b06:	out    0xee,al
  429b08:	push   ds
  429b09:	pop    ebp
  429b0a:	mov    eax,0x8801df16
  429b0f:	dec    edi
  429b10:	cmp    al,0xac
  429b12:	mov    ecx,0xc4840956
  429b17:	or     edi,DWORD PTR [edx+0x5d]
  429b1a:	loope  0x429b42
  429b1c:	sub    esi,edi
  429b1e:	inc    ecx
  429b1f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  429b20:	leave  
  429b21:	xor    eax,0x677f277d
  429b26:	inc    esp
  429b27:	xor    dh,al
  429b29:	imul   esp,DWORD PTR [eax],0xffffff96
  429b2c:	(bad)  [ebx+0x6d065a82]
  429b32:	jg     0x429b5e
  429b34:	sbb    BYTE PTR [ebp-0x6389950c],al
  429b3a:	enter  0x3a53,0x99
  429b3e:	inc    DWORD PTR [esi+eiz*8-0xa]
  429b42:	adc    al,0xe
  429b44:	dec    esi
  429b45:	in     al,0x96
  429b47:	pop    ebp
  429b48:	sbb    dl,BYTE PTR [eax]
  429b4a:	mov    eax,ebp
  429b4c:	jle    0x429b78
  429b4e:	lock mov al,ds:0x41744590
  429b54:	sahf   
  429b55:	and    al,0xc6
  429b57:	push   DWORD PTR [esi+0x237d8ea7]
  429b5d:	inc    eax
  429b5e:	pop    ebx
  429b5f:	dec    ebp
  429b60:	ins    DWORD PTR es:[edi],dx
  429b61:	adc    DWORD PTR [edi+0x3a],eax
  429b64:	inc    ebx
  429b65:	mov    ebp,0x606d964d
  429b6a:	jmp    0x429b33
  429b6c:	lods   al,BYTE PTR ds:[esi]
  429b6d:	and    esp,DWORD PTR [edi-0x3a]
  429b70:	inc    esi
  429b71:	cs aas 
  429b73:	mov    DWORD PTR [eax-0x5f],0x18ddac15
  429b7a:	call   0x2d02:0xb70e12ba
  429b81:	push   ebp
  429b82:	sub    eax,0xcce0b36c
  429b87:	push   ecx
  429b88:	icebp  
  429b89:	int3   
  429b8a:	imul   ecx,DWORD PTR [ebp+0x24],0x785d7f4e
  429b91:	lods   al,BYTE PTR ds:[esi]
  429b92:	out    0x91,eax
  429b94:	lds    edi,FWORD PTR [ecx+0x46]
  429b97:	ret    
  429b98:	cld    
  429b99:	jle    0x429b27
  429b9b:	cmp    BYTE PTR [ebp-0x562ff633],bh
  429ba1:	ja     0x429c11
  429ba3:	cdq    
  429ba4:	sub    DWORD PTR [esi+0x5647b4d6],esp
  429baa:	sub    BYTE PTR [eax+0x158be97d],dl
  429bb0:	push   0x4b1c3cc
  429bb5:	pop    ebp
  429bb6:	lds    ebp,FWORD PTR [eax+0x37]
  429bb9:	jle    0x429bd4
  429bbb:	sbb    edx,ecx
  429bbd:	retf   0x9f1e
  429bc0:	pop    ebx
  429bc1:	cli    
  429bc2:	fisub  DWORD PTR [ecx+0x60]
  429bc5:	ins    BYTE PTR es:[edi],dx
  429bc6:	xor    DWORD PTR [eax+0x484df822],ecx
  429bcc:	jge    0x429c28
  429bce:	jecxz  0x429bff
  429bd0:	pop    es
  429bd1:	mov    esp,0x12f2db7f
  429bd6:	hlt    
  429bd7:	ins    DWORD PTR es:[edi],dx
  429bd8:	jo     0x429b9c
  429bda:	ret    
  429bdb:	jp     0x429b81
  429bdd:	jae    0x429c19
  429bdf:	push   ebx
  429be0:	xchg   esp,eax
  429be1:	pop    esp
  429be2:	fmul   DWORD PTR [ebp-0x6b]
  429be5:	jb     0x429bda
  429be7:	dec    edi
  429be8:	sbb    BYTE PTR [ebp+0x450ca592],bh
  429bee:	push   0xb6d38488
  429bf3:	lock sahf 
  429bf5:	div    DWORD PTR [edi-0xb]
  429bf8:	fist   DWORD PTR [eax-0x5c3c1c7b]
  429bfe:	das    
  429bff:	test   BYTE PTR [ebp+0x6eec1cba],ah
  429c05:	ret    
  429c06:	mov    bh,0x13
  429c08:	div    BYTE PTR [ebx+ecx*4+0x38315e9c]
  429c0f:	add    ah,BYTE PTR [eax]
  429c11:	mov    ebp,0x767f86a9
  429c16:	stos   DWORD PTR es:[edi],eax
  429c17:	test   al,0x48
  429c19:	cmp    al,0xb5
  429c1b:	cmp    eax,0xb700bdd6
  429c20:	and    eax,0xfa788488
  429c25:	(bad)  
  429c26:	cmp    DWORD PTR [ecx+0x497c72f4],esp
  429c2c:	fisubr DWORD PTR [edx-0x1d]
  429c2f:	rcl    DWORD PTR [ecx+0x59a571b5],1
  429c35:	cmp    al,0x28
  429c37:	pop    esi
  429c38:	ja     0x429cad
  429c3a:	and    BYTE PTR [ebx-0x49],ch
  429c3d:	cmp    DWORD PTR [ebx+0x75],esi
  429c40:	mov    DWORD PTR [edx-0x521fa9e1],esi
  429c46:	or     DWORD PTR [eax-0x3849208],ebp
  429c4c:	sbb    ah,BYTE PTR [eax*4-0x532936d]
  429c53:	int3   
  429c54:	cmp    esp,DWORD PTR [edx]
  429c56:	in     al,dx
  429c57:	imul   ebp,DWORD PTR [edx],0x2da80345
  429c5d:	xchg   edx,eax
  429c5e:	dec    ebp
  429c5f:	mov    bh,0x43
  429c61:	dec    ebx
  429c62:	jecxz  0x429c4a
  429c64:	rol    BYTE PTR [eax-0x7b6c7068],cl
  429c6a:	enter  0xfc2e,0xaa
  429c6e:	xchg   esi,eax
  429c6f:	xor    al,0xb6
  429c71:	mov    cs:0xc2a151cb,al
  429c77:	xchg   ebx,esp
  429c79:	cmc    
  429c7a:	sub    al,dl
  429c7c:	xchg   esi,eax
  429c7d:	iret   
  429c7e:	outs   dx,BYTE PTR ds:[esi]
  429c7f:	pop    esp
  429c80:	xchg   edi,eax
  429c81:	add    BYTE PTR [ebp-0x4f],dh
  429c84:	out    dx,eax
  429c85:	push   eax
  429c86:	inc    ecx
  429c87:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  429c88:	imul   ecx,DWORD PTR [ebp+0x48],0x9fd547a0
  429c8f:	psllw  mm6,QWORD PTR [ebx+ecx*2+0xbf9c2fa]
  429c97:	cmp    BYTE PTR ds:0x91c37796,dl
  429c9d:	mov    DWORD PTR [eax+0xae10810],edi
  429ca3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  429ca4:	inc    eax
  429ca5:	pop    ds
  429ca6:	cld    
  429ca7:	adc    ah,BYTE PTR [ebx+0x3c39b537]
  429cad:	push   edi
  429cae:	mov    BYTE PTR [ebx-0x3f],ah
  429cb1:	sti    
  429cb2:	outs   dx,DWORD PTR ds:[esi]
  429cb3:	jmp    0x2059594b
  429cb8:	pop    ss
  429cb9:	lea    ecx,[esi-0x6f5bf9da]
  429cbf:	cs dec edi
  429cc1:	pop    ds
  429cc2:	sub    al,0xe5
  429cc4:	into   
  429cc5:	lea    edi,[edx]
  429cc7:	mov    ebp,0x4d80b081
  429ccc:	ror    BYTE PTR [eax-0x6fdb199d],0x87
  429cd3:	cmp    eax,0x9a7e9260
  429cd8:	cmp    ecx,DWORD PTR [ebx-0x2c]
  429cdb:	(bad)  
  429cdc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  429cdd:	test   al,0xa6
  429cdf:	adc    BYTE PTR [ecx+0x7c],0x90
  429ce3:	out    dx,eax
  429ce4:	dec    eax
  429ce5:	call   0xf191:0xa1ff45e4
  429cec:	ins    BYTE PTR es:[edi],dx
  429ced:	sbb    ah,BYTE PTR [edx+0x41]
  429cf0:	lock push ebp
  429cf2:	loopne 0x429c8c
  429cf4:	mov    dh,0xe9
  429cf6:	jns    0x429c8f
  429cf8:	push   es
  429cf9:	jb     0x429d3b
  429cfb:	sbb    al,0xc5
  429cfd:	mov    edi,DWORD PTR [esi]
  429cff:	fwait
  429d00:	test   BYTE PTR [ecx],bh
  429d02:	push   ebp
  429d03:	ja     0x429c8e
  429d05:	mov    BYTE PTR [edi-0x4e],ah
  429d08:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  429d09:	and    DWORD PTR [ecx+0x3d],ebx
  429d0c:	js     0x429d78
  429d0e:	gs dec ebx
  429d10:	pop    esi
  429d11:	jbe    0x429cc1
  429d13:	mov    dh,0x41
  429d15:	jecxz  0x429d32
  429d17:	aas    
  429d18:	jge    0x429d14
  429d1a:	shl    BYTE PTR [eax+0x44],cl
  429d1d:	mov    edx,0xa0ea56c0
  429d22:	or     cl,bh
  429d24:	lods   al,BYTE PTR ds:[esi]
  429d25:	hlt    
  429d26:	sar    DWORD PTR [ecx-0x31],cl
  429d29:	jle    0x429ceb
  429d2b:	mov    ebp,0x90c27547
  429d30:	jle    0x429cbc
  429d32:	cdq    
  429d33:	xor    eax,0x672c020e
  429d38:	inc    eax
  429d39:	pop    ds
  429d3a:	adc    eax,0x5c7d9e70
  429d3f:	aas    
  429d40:	lahf   
  429d41:	mov    dh,0x50
  429d43:	sbb    eax,0x6979aa49
  429d48:	mov    bl,0xb6
  429d4a:	xor    DWORD PTR [ebx+0x29],ebx
  429d4d:	popa   
  429d4e:	push   ebx
  429d4f:	rcr    DWORD PTR [ecx],cl
  429d51:	out    dx,eax
  429d52:	fild   QWORD PTR [edi-0x28]
  429d55:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  429d56:	in     al,dx
  429d57:	jnp    0x429cf0
  429d59:	jg     0x429ce5
  429d5b:	ret    
  429d5c:	mov    ch,0xed
  429d5e:	xor    DWORD PTR [ecx+0x41],ebp
  429d61:	das    
  429d62:	or     ah,dh
  429d64:	jnp    0x429d97
  429d66:	cld    
  429d67:	fs and ebp,0xfcdeef00
  429d6e:	jp     0x429de9
  429d70:	aas    
  429d71:	es xor eax,0x5a31f8d7
  429d77:	in     al,0x25
  429d79:	dec    esp
  429d7a:	gs add eax,0xe7083ea
  429d80:	mov    ebp,0xff705d70
  429d85:	push   esi
  429d86:	adc    edx,DWORD PTR [esi+0xa]
  429d89:	cmp    ecx,edx
  429d8b:	xor    BYTE PTR [ebp-0x2513ab9b],0x87
  429d92:	sub    BYTE PTR [edx],ch
  429d94:	push   edx
  429d95:	jmp    0x429d83
  429d97:	nop
  429d98:	stos   BYTE PTR es:[edi],al
  429d99:	cmp    BYTE PTR [ebp+0x45],cl
  429d9c:	adc    ebx,DWORD PTR [ebx+0x2]
  429d9f:	mov    al,0x4e
  429da1:	out    0xc7,eax
  429da3:	fild   WORD PTR [edi-0x12]
  429da6:	or     al,0x46
  429da8:	nop
  429da9:	sub    DWORD PTR [esi+0x471bc865],0xdb4be5f1
  429db3:	(bad)  
  429db4:	js     0x429d82
  429db6:	ins    DWORD PTR es:[edi],dx
  429db7:	neg    DWORD PTR [ebx]
  429db9:	sbb    ebp,DWORD PTR [edi-0x475d7391]
  429dbf:	ins    DWORD PTR es:[edi],dx
  429dc0:	cmc    
  429dc1:	popf   
  429dc2:	push   edx
  429dc3:	lds    esp,FWORD PTR [edx]
  429dc5:	not    DWORD PTR [ebp-0x5]
  429dc8:	imul   ebx,DWORD PTR [edx],0x9fc1fb3a
  429dce:	jecxz  0x429e38
  429dd0:	xor    BYTE PTR [ecx-0x2e],bh
  429dd3:	repz mov WORD PTR [ecx+0x2da79d4a],fs
  429dda:	mov    bh,0x85
  429ddc:	in     eax,dx
  429ddd:	cmp    DWORD PTR [edx],esp
  429ddf:	sbb    al,0x74
  429de1:	stc    
  429de2:	xlat   BYTE PTR ds:[ebx]
  429de3:	not    DWORD PTR [ebp-0x45986e64]
  429de9:	xlat   BYTE PTR ds:[ebx]
  429dea:	jecxz  0x429df4
  429dec:	dec    eax
  429ded:	sbb    DWORD PTR [edx+0x240dc269],esp
  429df3:	sub    dl,ch
  429df5:	xchg   ebx,eax
  429df6:	(bad)  
  429df7:	shl    edi,1
  429df9:	lahf   
  429dfa:	cmp    BYTE PTR [ebx-0x681a7352],0xbf
  429e01:	int    0xb3
  429e03:	or     edx,DWORD PTR [esi+0x3e775997]
  429e09:	mov    bh,cl
  429e0b:	pushf  
  429e0c:	aad    0xf0
  429e0e:	or     ah,BYTE PTR [ebx+0x1d1d9edf]
  429e14:	pop    es
  429e15:	inc    ebx
  429e16:	pop    ss
  429e17:	pop    eax
  429e18:	stos   DWORD PTR es:[edi],eax
  429e19:	imul   ebp,DWORD PTR [edx-0xf43e9d4],0x380a3279
  429e23:	fnstcw WORD PTR [esi+0x589a9025]
  429e29:	inc    esp
  429e2a:	imul   BYTE PTR [esi-0x5c58c7c2]
  429e30:	fisub  WORD PTR [ebx+0x37]
  429e33:	mov    al,ds:0xdf23bdfb
  429e38:	or     BYTE PTR [ecx],ch
  429e3a:	jl     0x429e90
  429e3c:	mov    edx,0xba5e16db
  429e41:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  429e42:	sub    DWORD PTR [ebx-0x19],eax
  429e45:	repz adc ecx,DWORD PTR [ecx]
  429e48:	retf   0x4705
  429e4b:	out    dx,eax
  429e4c:	jns    0x429ec0
  429e4e:	xchg   ecx,eax
  429e4f:	pop    esi
  429e50:	pop    edx
  429e51:	sar    ah,0xc3
  429e54:	cli    
  429e55:	retf   0x5fe1
  429e58:	dec    edx
  429e59:	push   eax
  429e5a:	loop   0x429e92
  429e5c:	jle    0x429ece
  429e5e:	sub    ch,BYTE PTR [ecx-0x3d]
  429e61:	pop    ss
  429e62:	fisttp QWORD PTR [edx+0x1f4bbb92]
  429e68:	out    0x74,eax
  429e6a:	fsub   DWORD PTR [edi-0x41486caa]
  429e70:	test   eax,0xe67f15df
  429e75:	jl     0x429e18
  429e77:	enter  0x6107,0xd3
  429e7b:	sub    edx,DWORD PTR [esi]
  429e7d:	in     al,0x6a
  429e7f:	jg     0x429e6a
  429e81:	mov    dh,0x21
  429e83:	jl     0x429ede
  429e85:	xchg   ecx,eax
  429e86:	(bad)
  429e89:	scas   eax,DWORD PTR es:[edi]
  429e8a:	adc    DWORD PTR [edx+0x47],esp
  429e8d:	jno    0x429e51
  429e8f:	jp     0x429ef9
  429e91:	xchg   edi,eax
  429e92:	adc    BYTE PTR [edx+0x10c7298d],dl
  429e98:	add    dh,ch
  429e9a:	inc    ebx
  429e9b:	and    al,0x16
  429e9d:	in     eax,dx
  429e9e:	call   0xab48a735
  429ea3:	push   ebx
  429ea4:	adc    edi,ebp
  429ea6:	push   edi
  429ea7:	jl     0x429e4d
  429ea9:	xor    BYTE PTR [esi-0x6fc2e24d],dh
  429eaf:	or     eax,0x11bce30d
  429eb4:	add    al,0xc1
  429eb6:	cmp    dh,BYTE PTR [edi]
  429eb8:	inc    esp
  429eb9:	or     al,0x17
  429ebb:	sub    edi,DWORD PTR [ebp+edi*2-0x45fcb369]
  429ec2:	xor    eax,0x1c420b71
  429ec7:	cwde   
  429ec8:	fs mov edi,0xf96cc1a8
  429ece:	icebp  
  429ecf:	cmp    edx,DWORD PTR [edx-0x6c]
  429ed2:	mov    BYTE PTR [edx-0x66240c00],dh
  429ed8:	nop
  429ed9:	cdq    
  429eda:	xchg   DWORD PTR [esi+0x5a],ebx
  429edd:	jae    0x429f41
  429edf:	data16 retfw 0xf1c4
  429ee4:	rol    BYTE PTR [esi+0x6c],0x98
  429ee8:	popa   
  429ee9:	jmp    0xc03d3c29
  429eee:	mov    esp,0xe26d24b7
  429ef3:	and    ecx,ebp
  429ef5:	inc    ebp
  429ef6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  429ef7:	jb     0x429f04
  429ef9:	jae    0x429e8b
  429efb:	mov    BYTE PTR [ecx-0x1d192355],cl
  429f01:	add    al,BYTE PTR [eax+esi*2+0x71]
  429f05:	sbb    BYTE PTR [edi+0x2b],0xdc
  429f09:	sbb    eax,0x497239d5
  429f0e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  429f0f:	les    ecx,FWORD PTR [ebx-0x1d9ab37b]
  429f15:	add    DWORD PTR [edx+0x49],esi
  429f18:	fisttp DWORD PTR [ebx]
  429f1a:	outs   dx,DWORD PTR ds:[esi]
  429f1b:	inc    ebx
  429f1c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  429f1d:	mov    bl,dl
  429f1f:	mov    ebp,0x9c9abcd0
  429f24:	sub    BYTE PTR [ebp-0x54],ch
  429f27:	out    dx,eax
  429f28:	sbb    BYTE PTR [ebx-0x7c2d28fb],bh
  429f2e:	adc    BYTE PTR ds:[ebp+0x1a],ch
  429f32:	adc    al,0x7b
  429f34:	dec    esp
  429f35:	add    eax,edi
  429f37:	loope  0x429f33
  429f39:	(bad)
  429f3d:	fs cmp esi,ebx
  429f40:	mov    edx,0x500d5604
  429f45:	loopne 0x429f41
  429f47:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  429f49:	sbb    al,0xfe
  429f4b:	fcom   QWORD PTR [eax-0x55cf0b24]
  429f51:	clc    
  429f52:	mov    ah,BYTE PTR [edi]
  429f54:	int    0x9
  429f56:	sbb    eax,0x753c80dc
  429f5b:	push   ecx
  429f5c:	sub    eax,0x67
  429f5f:	mov    eax,0xaa74ed2b
  429f64:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  429f65:	dec    ebx
  429f66:	arpl   WORD PTR [edi],si
  429f68:	int    0xbe
  429f6a:	add    al,0xeb
  429f6c:	ss jmp 0xafe2:0x63a5aab8
  429f74:	daa    
  429f75:	or     edx,eax
  429f77:	xchg   ebp,eax
  429f78:	and    ah,BYTE PTR [esp+ebx*1]
  429f7b:	inc    edi
  429f7c:	jle    0x429fca
  429f7e:	mov    edi,0x40d85846
  429f83:	xlat   BYTE PTR ds:[ebx]
  429f84:	pop    ebx
  429f85:	push   esi
  429f86:	sar    BYTE PTR [edx+0x44],0xe0
  429f8a:	jecxz  0x429f29
  429f8c:	popf   
  429f8d:	adc    esi,DWORD PTR ds:0xdfb0e3e3
  429f93:	into   
  429f94:	jae    0x429fd7
  429f96:	nop
  429f97:	mov    ch,0xa0
  429f99:	call   0x27a5:0x45b25cbb
  429fa0:	fdiv   QWORD PTR [esi+0x14e9c33b]
  429fa6:	mov    ebx,0xce0e20c6
  429fab:	ds popa 
  429fad:	ins    BYTE PTR es:[edi],dx
  429fae:	jg     0x42a00b
  429fb0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  429fb1:	and    BYTE PTR [ecx+0x5a],dl
  429fb4:	shr    BYTE PTR [edi-0x1e54a3fd],cl
  429fba:	mov    eax,ds:0x6fe63025
  429fbf:	mov    DWORD PTR [ebx-0x6cd7f57f],ebx
  429fc5:	mov    al,ds:0xc654050f
  429fca:	jge    0x429fc2
  429fcc:	hlt    
  429fcd:	push   ebx
  429fce:	dec    eax
  429fcf:	lods   al,BYTE PTR ds:[esi]
  429fd0:	popa   
  429fd1:	std    
  429fd2:	pushf  
  429fd3:	test   DWORD PTR [esi+0x7e],0x69706386
  429fda:	push   0xafc1bfd1
  429fdf:	out    dx,al
  429fe0:	leave  
  429fe1:	sbb    BYTE PTR [eax-0x5],bl
  429fe4:	add    BYTE PTR [ebp+0x61e7e4ce],cl
  429fea:	stos   DWORD PTR es:[edi],eax
  429feb:	mov    ds:0xd1bd35cd,al
  429ff0:	loopne 0x429f8f
  429ff2:	lock add BYTE PTR [ebp-0x1],bh
  429ff6:	jecxz  0x42a056
  429ff8:	push   esp
  429ff9:	(bad)  
  429ffa:	mov    bh,0x9a
  429ffc:	fnstenv [esi]
  429ffe:	cwde   
  429fff:	cmp    bl,bl
  42a001:	out    dx,al
  42a002:	jno    0x429fb6
  42a004:	pop    ebx
  42a005:	popf   
  42a006:	sbb    eax,0xb041f79a
  42a00b:	loopne 0x42a022
  42a00d:	mov    edx,0x49043f4
  42a012:	sub    bl,BYTE PTR [edi-0x66]
  42a015:	in     al,0x93
  42a017:	or     bl,BYTE PTR [ebx]
  42a019:	mov    bh,0xd5
  42a01b:	push   eax
  42a01c:	jb     0x42a076
  42a01e:	xor    BYTE PTR [esi],0x66
  42a021:	push   eax
  42a022:	not    bl
  42a024:	xor    BYTE PTR [eax-0x4a1e000f],dh
  42a02a:	dec    edx
  42a02b:	outs   dx,BYTE PTR ds:[esi]
  42a02c:	xor    al,0xb2
  42a02e:	inc    ebp
  42a02f:	stos   BYTE PTR es:[edi],al
  42a030:	push   edx
  42a031:	pop    ds
  42a032:	pop    ds
  42a033:	mov    WORD PTR [edi+0x74],cs
  42a036:	mov    edx,DWORD PTR [eax+ebp*8]
  42a039:	hlt    
  42a03a:	jno    0x429fc1
  42a03c:	fnsave [ebx+0x78]
  42a03f:	pushf  
  42a040:	out    dx,al
  42a041:	fwait
  42a042:	jg     0x429ff5
  42a044:	shr    dh,1
  42a046:	mov    al,fs:0xbf5b57c3
  42a04c:	sub    dl,BYTE PTR [esi-0x7c]
  42a04f:	pop    esp
  42a050:	xor    eax,0xc3f9a680
  42a055:	mov    cl,0xb8
  42a057:	rol    BYTE PTR [esi-0x3e0ad8b7],0x3b
  42a05e:	fisubr WORD PTR [edx-0x57]
  42a061:	mov    DWORD PTR [ecx+eax*8],0x6f1d34ef
  42a068:	cmp    al,0xe1
  42a06a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42a06b:	icebp  
  42a06c:	lods   eax,DWORD PTR ds:[esi]
  42a06d:	hlt    
  42a06e:	scas   al,BYTE PTR es:[edi]
  42a06f:	sbb    al,0x37
  42a071:	mov    bl,0xb4
  42a073:	dec    edi
  42a074:	fistp  QWORD PTR [ecx*2+0x2ab8cb3a]
  42a07b:	mov    edx,0x180abb0b
  42a080:	call   0x185e:0xaa926d2d
  42a087:	cld    
  42a088:	add    ah,BYTE PTR [edx-0x26857b82]
  42a08e:	inc    ecx
  42a08f:	xchg   ebp,eax
  42a090:	dec    eax
  42a091:	icebp  
  42a092:	lods   eax,DWORD PTR ds:[esi]
  42a093:	jle    0x42a082
  42a095:	jl     0x42a030
  42a097:	xchg   edi,eax
  42a098:	mov    BYTE PTR [ecx+0x17568e43],ah
  42a09e:	push   eax
  42a09f:	test   eax,0xe6fca962
  42a0a4:	cmp    esi,DWORD PTR [edi-0x4571d5bf]
  42a0aa:	aas    
  42a0ab:	dec    eax
  42a0ac:	push   edi
  42a0ad:	pop    ds
  42a0ae:	add    DWORD PTR [edx-0x4c],edi
  42a0b1:	pop    esp
  42a0b2:	jmp    0xc8745f72
  42a0b7:	jp     0x42a06a
  42a0b9:	addr16 sub eax,0xfffffff3
  42a0bd:	out    0x29,al
  42a0bf:	pop    esp
  42a0c0:	xor    DWORD PTR [edx+0x4e],0xffffff8f
  42a0c4:	test   DWORD PTR [ebp-0x1afdd963],edi
  42a0ca:	fistp  WORD PTR [eax+0x6fbd3907]
  42a0d0:	addr16 jle 0x42a131
  42a0d3:	mov    eax,ds:0x2164e944
  42a0d8:	jge    0x42a0c6
  42a0da:	dec    ebp
  42a0db:	jno    0x42a083
  42a0dd:	sub    ch,bh
  42a0df:	mov    eax,DWORD PTR [ebp-0x6c22153b]
  42a0e5:	and    BYTE PTR [esi+edi*2-0x4f],bl
  42a0e9:	adc    bh,BYTE PTR [ebp-0x2b0be5a3]
  42a0ef:	retf   
  42a0f0:	jb     0x42a11e
  42a0f2:	pop    esi
  42a0f3:	or     eax,0x41f482ec
  42a0f8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42a0f9:	push   esp
  42a0fa:	pop    esp
  42a0fb:	inc    esp
  42a0fc:	out    dx,al
  42a0fd:	scas   al,BYTE PTR es:[edi]
  42a0fe:	lock stos BYTE PTR es:[edi],al
  42a100:	jb     0x42a117
  42a102:	aam    0x5b
  42a104:	call   0xb1041fdd
  42a109:	sub    esp,DWORD PTR [ecx]
  42a10b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42a10c:	repnz sbb eax,0xd9bd5c53
  42a112:	pop    DWORD PTR [ebx-0x7d45fbd2]
  42a118:	aas    
  42a119:	push   esi
  42a11a:	pop    edi
  42a11b:	or     esi,0xffffff82
  42a11e:	or     ebp,DWORD PTR [eax]
  42a120:	fist   DWORD PTR [ecx]
  42a122:	out    dx,eax
  42a123:	in     al,dx
  42a124:	int    0xaf
  42a126:	je     0x42a173
  42a128:	test   eax,0x2ccf99c8
  42a12d:	mov    edi,0x86557e3a
  42a132:	leave  
  42a133:	and    eax,0xa6d7f178
  42a138:	mov    esp,0xe95b9a19
  42a13d:	and    eax,DWORD PTR [edi-0x3d]
  42a140:	fisub  WORD PTR [esp+esi*8-0x2b6ad16c]
  42a147:	sbb    eax,0x73
  42a14a:	dec    esp
  42a14b:	xchg   DWORD PTR [edi-0x74],esp
  42a14e:	and    eax,0xb19ba12
  42a153:	sbb    esi,DWORD PTR [eax]
  42a155:	out    0x7,eax
  42a157:	cwde   
  42a158:	pushf  
  42a159:	das    
  42a15a:	add    DWORD PTR [ebp-0x79532df0],esi
  42a160:	(bad)  
  42a161:	retf   
  42a162:	jmp    0xf7e2:0x103fdc90
  42a169:	jo     0x42a190
  42a16b:	fisttp QWORD PTR [eax+esi*2]
  42a16e:	int    0x1b
  42a170:	sbb    BYTE PTR ds:0xf4e22a69,ah
  42a176:	inc    esp
  42a177:	(bad)  
  42a178:	xlat   BYTE PTR ds:[ebx]
  42a179:	in     al,dx
  42a17a:	outs   dx,BYTE PTR ds:[esi]
  42a17b:	mov    WORD PTR [edx+0x5],cs
  42a17e:	xchg   cl,dl
  42a180:	inc    ebx
  42a181:	and    edi,DWORD PTR [ebx+eiz*4+0x1a24d882]
  42a188:	rol    DWORD PTR [eax+esi*8-0x6c],1
  42a18c:	dec    edx
  42a18d:	cmc    
  42a18e:	shl    BYTE PTR [esi+edi*2+0x73b8cf3e],cl
  42a195:	xor    dl,al
  42a197:	xchg   esi,eax
  42a198:	sub    eax,0xbc24a2be
  42a19e:	adc    edi,DWORD PTR [edx-0x711a4850]
  42a1a4:	pop    DWORD PTR [ecx+0x4d]
  42a1a7:	dec    ecx
  42a1a8:	in     eax,dx
  42a1a9:	push   edi
  42a1aa:	add    ch,BYTE PTR [edi+eax*8-0x57]
  42a1ae:	pop    ecx
  42a1af:	mov    eax,ds:0xaa214baf
  42a1b4:	jb     0x42a151
  42a1b6:	pop    ecx
  42a1b7:	ret    0xc860
  42a1ba:	ror    DWORD PTR [ebp-0x717004a4],cl
  42a1c0:	sbb    DWORD PTR [esi-0x1d916682],eax
  42a1c6:	xchg   DWORD PTR [ebp-0x1c295f48],esp
  42a1cc:	or     ah,BYTE PTR [ebx+0x50f8e5a3]
  42a1d2:	or     esi,DWORD PTR [edx]
  42a1d4:	mov    ah,0x19
  42a1d6:	pop    ecx
  42a1d7:	pop    edx
  42a1d8:	mov    bh,ah
  42a1da:	js     0x42a234
  42a1dc:	pop    ebx
  42a1dd:	call   0xa0ff:0x1859e680
  42a1e4:	outs   dx,BYTE PTR ds:[esi]
  42a1e5:	xor    dl,BYTE PTR [edx]
  42a1e7:	rcr    BYTE PTR [esi-0x16ad00f],0xaf
  42a1ee:	outs   dx,DWORD PTR ds:[esi]
  42a1ef:	jmp    0x3b0c4c27
  42a1f4:	push   esi
  42a1f5:	daa    
  42a1f6:	out    0xd0,eax
  42a1f8:	scas   eax,DWORD PTR es:[edi]
  42a1f9:	sub    eax,DWORD PTR [edi-0x66]
  42a1fc:	jg     0x42a20e
  42a1fe:	xlat   BYTE PTR ds:[ebx]
  42a1ff:	fstp   DWORD PTR [ecx+0xc]
  42a202:	ja     0x42a225
  42a204:	into   
  42a205:	mov    al,ds:0x599c7f12
  42a20a:	loop   0x42a1a4
  42a20c:	dec    ebx
  42a20d:	mov    esp,0xc72f3534
  42a212:	loop   0x42a1ca
  42a214:	call   0xddd0:0x883d39d6
  42a21b:	mov    WORD PTR [edx+0x67],ds
  42a21e:	sub    esp,DWORD PTR [edx-0xe]
  42a221:	dec    esi
  42a222:	mov    eax,ds:0x60aaa835
  42a227:	(bad)  [ebx+0x16113a9b]
  42a22d:	jb     0x42a27f
  42a22f:	pop    esi
  42a230:	cmc    
  42a231:	inc    esi
  42a232:	adc    ebx,DWORD PTR [edi+0x5d]
  42a235:	test   al,0x8e
  42a237:	aas    
  42a238:	mov    WORD PTR fs:[edi+0x2c],es
  42a23c:	iret   
  42a23d:	sti    
  42a23e:	mov    edi,0x8e1ad2d0
  42a243:	in     eax,0xbc
  42a245:	test   ebx,esi
  42a247:	mov    cl,0xef
  42a249:	daa    
  42a24a:	cmp    eax,0xb9e6b8c
  42a24f:	mov    dl,0x46
  42a251:	scas   al,BYTE PTR es:[edi]
  42a252:	popf   
  42a253:	cli    
  42a254:	sbb    DWORD PTR [ebp-0x586bd2c6],ebp
  42a25a:	es jmp 0x42a249
  42a25d:	sbb    BYTE PTR [ecx],ah
  42a25f:	adc    BYTE PTR [eax+0x5da4f512],0xc9
  42a266:	call   0xfb1f2180
  42a26b:	pop    ss
  42a26c:	scas   al,BYTE PTR es:[edi]
  42a26d:	mov    dh,0xb5
  42a26f:	pop    edx
  42a270:	retf   
  42a271:	xchg   ebp,eax
  42a272:	mov    ds:0x6f410683,al
  42a277:	repz je 0x42a22b
  42a27a:	repnz ins BYTE PTR es:[edi],dx
  42a27c:	ja     0x42a292
  42a27e:	(bad)  
  42a27f:	ficomp DWORD PTR [esi+0x7a]
  42a282:	js     0x42a22e
  42a284:	lea    esp,[eax+0x3d771adb]
  42a28a:	into   
  42a28b:	and    DWORD PTR [ecx-0x5c],ecx
  42a28e:	(bad)  
  42a28f:	bound  ebp,QWORD PTR [eax+0x4bf30b06]
  42a295:	xchg   esp,eax
  42a296:	dec    eax
  42a297:	clc    
  42a298:	shr    BYTE PTR [ebx+0x42],cl
  42a29b:	push   0xc09de5b5
  42a2a0:	inc    esp
  42a2a1:	retf   
  42a2a2:	push   cs
  42a2a3:	(bad)  
  42a2a4:	mov    ebx,0x90a7c070
  42a2a9:	or     DWORD PTR [ecx],edx
  42a2ab:	fldcw  WORD PTR [eax]
  42a2ad:	(bad)  [esi]
  42a2af:	and    BYTE PTR [edx],al
  42a2b1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42a2b2:	ret    
  42a2b3:	cmp    dh,BYTE PTR [ecx+0x4b521989]
  42a2b9:	mov    dl,ah
  42a2bb:	bnd jb 0x42a255
  42a2be:	pop    edx
  42a2bf:	mov    ebp,DWORD PTR [eax+0x36]
  42a2c2:	sar    DWORD PTR ds:0xf16299d7,cl
  42a2c8:	xor    eax,0x2a529716
  42a2cd:	in     eax,dx
  42a2ce:	jl     0x42a297
  42a2d0:	aam    0x87
  42a2d2:	mov    ebx,0x3337ed5
  42a2d7:	sbb    BYTE PTR [edi+ebp*8],ah
  42a2da:	mov    dh,0x48
  42a2dc:	sti    
  42a2dd:	inc    ebx
  42a2de:	ret    
  42a2df:	gs jnp 0x42a2cc
  42a2e2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42a2e3:	cmp    BYTE PTR [eax-0x3c],cl
  42a2e6:	aas    
  42a2e7:	and    edi,esi
  42a2e9:	call   0xfaad7690
  42a2ee:	pop    eax
  42a2ef:	and    ebp,DWORD PTR [esi-0x50]
  42a2f2:	and    DWORD PTR [eax+0x1d1cf231],esi
  42a2f8:	xchg   edi,eax
  42a2f9:	cmp    DWORD PTR [edx+0x37],edx
  42a2fc:	adc    al,0xca
  42a2fe:	sub    eax,0xa0f2f9c
  42a303:	js     0x42a355
  42a305:	ins    BYTE PTR es:[edi],dx
  42a306:	mov    ebx,0xe24beaf6
  42a30b:	int3   
  42a30c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42a30d:	in     al,0x5e
  42a30f:	aad    0x3b
  42a311:	push   edi
  42a312:	or     ah,ch
  42a314:	jge    0x42a2f4
  42a316:	mov    al,0x17
  42a318:	cld    
  42a319:	(bad)  gs:[edi-0x80]
  42a31d:	add    ecx,ecx
  42a31f:	push   esi
  42a320:	cmc    
  42a321:	(bad)  
  42a323:	mov    bl,0x8d
  42a325:	enter  0x7053,0x63
  42a329:	cmp    DWORD PTR [ebp+0x5066bf18],eax
  42a32f:	cmp    ebp,ecx
  42a331:	mov    cl,0x86
  42a333:	xchg   ebx,eax
  42a334:	or     esp,DWORD PTR [edi+0x2b]
  42a337:	push   0x54188876
  42a33c:	stc    
  42a33d:	cmp    ah,BYTE PTR [eax+0xcd6ec95]
  42a343:	and    al,0xb3
  42a345:	cwde   
  42a346:	sub    BYTE PTR [esi-0x23],ch
  42a349:	jne    0x42a380
  42a34b:	in     eax,dx
  42a34c:	xchg   edi,eax
  42a34d:	out    dx,eax
  42a34e:	test   al,0x93
  42a350:	mov    ss,edi
  42a352:	lods   eax,DWORD PTR ds:[esi]
  42a353:	mov    ah,0x51
  42a355:	retf   
  42a356:	dec    esi
  42a357:	pushf  
  42a358:	cmp    al,0x87
  42a35a:	ins    BYTE PTR es:[edi],dx
  42a35b:	mov    ch,0xfa
  42a35d:	push   eax
  42a35e:	inc    esi
  42a35f:	loop   0x42a317
  42a361:	xor    eax,0x17bb4a60
  42a366:	fcomp  QWORD PTR [edi+0x6c]
  42a369:	test   eax,0xead649a3
  42a36e:	adc    eax,0x68a901e2
  42a373:	je     0x42a33d
  42a375:	clc    
  42a376:	test   al,0x25
  42a378:	dec    ebp
  42a379:	sub    edi,ebp
  42a37b:	sbb    BYTE PTR [ecx+ebp*2+0x5e],0xdf
  42a380:	push   esp
  42a381:	pop    eax
  42a382:	jp     0x42a35e
  42a384:	sahf   
  42a385:	dec    edx
  42a386:	sub    al,0xd6
  42a388:	enter  0x5202,0xf8
  42a38c:	stos   BYTE PTR es:[edi],al
  42a38d:	adc    al,BYTE PTR [eax+0x6a]
  42a390:	jge    0x42a3e7
  42a392:	inc    esi
  42a393:	aas    
  42a394:	xor    BYTE PTR [edx+0x7bd50f47],ah
  42a39a:	call   0x3d102572
  42a39f:	mov    ecx,0x9b668d10
  42a3a4:	push   ss
  42a3a5:	xor    BYTE PTR [edi+0x2027e5a3],ch
  42a3ab:	mov    ch,0xa2
  42a3ad:	add    dl,bl
  42a3af:	into   
  42a3b0:	push   esi
  42a3b1:	std    
  42a3b2:	sbb    eax,0x221a1149
  42a3b7:	cld    
  42a3b8:	and    DWORD PTR ds:0x1252bb6e,edi
  42a3be:	repz pusha 
  42a3c0:	int3   
  42a3c1:	pop    esp
  42a3c2:	pushf  
  42a3c3:	mov    ah,0x58
  42a3c5:	ds xor al,0x97
  42a3c8:	(bad)  
  42a3ca:	popa   
  42a3cb:	cwde   
  42a3cc:	push   0x60
  42a3ce:	mov    ecx,0x406255bd
  42a3d3:	mov    eax,0x20e16ddb
  42a3d8:	inc    edi
  42a3d9:	dec    esi
  42a3da:	call   0xbcc7e11c
  42a3df:	or     BYTE PTR [edx+0x47],cl
  42a3e2:	jne    0x42a3be
  42a3e4:	fdivr  QWORD PTR [ebx+0x86a7975]
  42a3ea:	pop    esi
  42a3eb:	aam    0xd4
  42a3ed:	adc    eax,0xd2cef957
  42a3f2:	push   es
  42a3f3:	mov    edi,0xf93fec99
  42a3f8:	xor    al,0xe5
  42a3fa:	and    BYTE PTR [esi+0x33],0x4b
  42a3fe:	lock ds aad 0x50
  42a402:	or     ah,BYTE PTR [ebp+0x1f]
  42a405:	test   DWORD PTR [edi+0x50918272],ebp
  42a40b:	cmp    ecx,edi
  42a40d:	or     BYTE PTR [esi-0x40],0xcf
  42a411:	fadd   QWORD PTR [ebx-0x64084e07]
  42a417:	jmp    0xeb5817fc
  42a41c:	stos   BYTE PTR es:[edi],al
  42a41d:	and    BYTE PTR es:[edi],ah
  42a420:	test   BYTE PTR [ecx-0x6af32b29],bl
  42a426:	jno    0x42a439
  42a428:	push   ds
  42a429:	sub    cl,BYTE PTR [edi+0x6f]
  42a42c:	mov    ds:0xb738a383,eax
  42a431:	mov    bl,0xe1
  42a433:	push   ds
  42a434:	pop    ecx
  42a435:	stos   DWORD PTR es:[edi],eax
  42a436:	xor    ebx,DWORD PTR [ebp-0x66a5ca35]
  42a43c:	test   BYTE PTR [esi-0x5d],dh
  42a43f:	mov    WORD PTR [ecx+0x41],cx
  42a443:	ins    DWORD PTR es:[edi],dx
  42a444:	cmp    al,0xa2
  42a446:	mov    ecx,0x87a5e544
  42a44b:	or     eax,0x48bccf87
  42a450:	es sub eax,0x7b3a6f1a
  42a456:	jno    0x42a427
  42a458:	stc    
  42a459:	(bad)  
  42a45b:	fcmove st,st(2)
  42a45d:	popf   
  42a45e:	fdiv   st,st(2)
  42a460:	jge    0x42a4c8
  42a462:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42a463:	or     BYTE PTR [ecx+0x689a9a53],ch
  42a469:	cmp    bl,cl
  42a46b:	in     eax,0x1c
  42a46d:	jbe    0x42a405
  42a46f:	jae    0x42a4a9
  42a471:	call   0x8dcb:0x7c83ed8a
  42a478:	out    0xf0,eax
  42a47a:	or     esi,DWORD PTR [ecx+0x8]
  42a47d:	fst    QWORD PTR [ecx+0x714bcfe2]
  42a483:	loopne 0x42a420
  42a485:	mov    ebx,0xd354c7fd
  42a48a:	int3   
  42a48b:	cmp    eax,0x2fce19f1
  42a490:	pop    ebp
  42a491:	xchg   edi,eax
  42a492:	push   0x615aa6c7
  42a497:	daa    
  42a498:	cmp    dl,ah
  42a49a:	push   ds
  42a49b:	mov    ah,0x25
  42a49d:	jmp    0x26a89a44
  42a4a2:	add    al,0xf
  42a4a4:	sbb    eax,0xec8ccd95
  42a4a9:	lods   eax,DWORD PTR ds:[esi]
  42a4aa:	mov    eax,0x462db8
  42a4af:	mov    edx,0x160d5ac2
  42a4b4:	pop    ebp
  42a4b5:	js     0x42a49c
  42a4b7:	cmp    DWORD PTR [ecx+0x2],0x31
  42a4bb:	pop    esi
  42a4bc:	sub    DWORD PTR [ebp+0x6e],0xf2b2a002
  42a4c3:	jns    0x42a484
  42a4c5:	(bad)  
  42a4c6:	leave  
  42a4c7:	mov    edx,0xe2de8919
  42a4cc:	pop    eax
  42a4cd:	popa   
  42a4ce:	(bad)  
  42a4cf:	jmp    0xb2eec8e6
  42a4d4:	cmp    BYTE PTR [ecx-0x22],dl
  42a4d7:	push   ecx
  42a4d8:	add    BYTE PTR [edi+0x6451f82c],0x69
  42a4df:	int    0x2a
  42a4e1:	ins    BYTE PTR es:[edi],dx
  42a4e2:	sbb    eax,0x417bd48f
  42a4e7:	xor    dh,ch
  42a4e9:	xchg   BYTE PTR [ebx],ch
  42a4eb:	inc    eax
  42a4ec:	xchg   ecx,eax
  42a4ed:	jne    0x42a506
  42a4ef:	(bad)  
  42a4f0:	fcom   DWORD PTR [ebx+0x45165635]
  42a4f6:	jmp    0x42a547
  42a4f8:	mov    WORD PTR [eax-0x78],ss
  42a4fb:	out    dx,al
  42a4fc:	fidivr WORD PTR [ecx]
  42a4fe:	(bad)
  42a501:	pop    ebp
  42a502:	push   esi
  42a503:	sbb    BYTE PTR [esi+0x6abae5ef],dh
  42a509:	ror    BYTE PTR [ebp-0x65959f05],0x5e
  42a510:	xchg   ecx,eax
  42a511:	popa   
  42a512:	cmp    BYTE PTR [edx],al
  42a514:	and    DWORD PTR [edi-0x27],ebp
  42a517:	xor    BYTE PTR [edi+ebx*1-0x1],dl
  42a51b:	fbld   TBYTE PTR ds:0xec6d4bc0
  42a521:	pushf  
  42a522:	pop    ss
  42a523:	mov    dh,ah
  42a525:	adc    DWORD PTR ds:0x2091ba90,ebx
  42a52b:	mov    eax,0x4f9ec256
  42a530:	pop    edx
  42a531:	ror    ah,0xc8
  42a534:	or     eax,0x1b08b352
  42a539:	cmp    eax,0xdde575ac
  42a53e:	ins    DWORD PTR es:[edi],dx
  42a53f:	xor    DWORD PTR [ebx-0x7858bd5],edx
  42a545:	div    DWORD PTR [ebx]
  42a547:	or     esp,DWORD PTR [edi+0x42]
  42a54a:	push   ebp
  42a54b:	test   al,0x6b
  42a54d:	push   eax
  42a54e:	mov    dl,BYTE PTR ds:0xc3063965
  42a554:	push   edi
  42a555:	leave  
  42a556:	pop    esp
  42a557:	mov    eax,0x71fd759a
  42a55c:	mov    esp,0xbfcfc204
  42a561:	sar    BYTE PTR [edi-0x6a],1
  42a564:	data16 jno 0x42a54f
  42a567:	sub    cl,BYTE PTR [edx+esi*8]
  42a56a:	in     al,dx
  42a56b:	inc    ebx
  42a56c:	push   cs
  42a56d:	scas   eax,DWORD PTR es:[edi]
  42a56e:	pop    esi
  42a56f:	int3   
  42a570:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42a571:	xor    al,0x16
  42a573:	or     DWORD PTR [ebx],edx
  42a575:	bnd ds jo 0x42a502
  42a579:	rcr    BYTE PTR [edx-0x40cb3b6e],1
  42a57f:	dec    esp
  42a580:	mov    DWORD PTR [edx-0x59],ebp
  42a583:	mov    cs,WORD PTR ds:0x5425201b
  42a589:	(bad)  
  42a58a:	adc    DWORD PTR ds:[eax],0xb
  42a58e:	add    dl,cl
  42a590:	aad    0x8a
  42a592:	sub    eax,0x6ea0fabe
  42a597:	sar    DWORD PTR [ecx-0x6089cd4e],0xc6
  42a59e:	lods   eax,DWORD PTR ds:[esi]
  42a59f:	jle    0x42a55a
  42a5a1:	xor    BYTE PTR [ebx],ch
  42a5a3:	jmp    FWORD PTR [ebx+0x2b4ddb83]
  42a5a9:	push   edx
  42a5aa:	xchg   esp,eax
  42a5ab:	pusha  
  42a5ac:	push   ebx
  42a5ad:	(bad)  
  42a5ae:	sbb    edi,eax
  42a5b0:	xlat   BYTE PTR ds:[ebx]
  42a5b1:	sahf   
  42a5b2:	sub    bh,bh
  42a5b4:	enter  0xdc27,0x83
  42a5b8:	xor    DWORD PTR [edi],0x95e2b0c3
  42a5be:	hlt    
  42a5bf:	mov    gs,ebx
  42a5c1:	(bad)
  42a5c5:	jl     0x42a55b
  42a5c7:	loopne 0x42a630
  42a5c9:	xor    DWORD PTR [ebx+0x119a466],esp
  42a5cf:	mov    WORD PTR ds:[esi-0x3c87e060],?
  42a5d6:	lods   al,BYTE PTR ds:[esi]
  42a5d7:	add    al,0x41
  42a5d9:	add    DWORD PTR [edx-0x56cade5d],esp
  42a5df:	pop    ds
  42a5e0:	cmp    ch,BYTE PTR [ebp+0x6]
  42a5e3:	hlt    
  42a5e4:	add    esi,esp
  42a5e6:	gs xchg esp,eax
  42a5e8:	add    eax,0x24658953
  42a5ed:	and    ecx,edx
  42a5ef:	mov    ebx,0xdfa8f91b
  42a5f4:	int3   
  42a5f5:	adc    DWORD PTR [ecx],eax
  42a5f7:	push   eax
  42a5f8:	dec    edx
  42a5f9:	xchg   ebp,eax
  42a5fa:	mov    DWORD PTR ds:0x1d8f493b,ebx
  42a600:	push   0xfc564fd8
  42a605:	lods   al,BYTE PTR ds:[esi]
  42a606:	xor    eax,0xfb59b1e0
  42a60b:	sbb    bh,0xd4
  42a60e:	ret    
  42a60f:	dec    ebp
  42a610:	js     0x42a5c6
  42a612:	mov    edi,?
  42a614:	push   cs
  42a615:	push   esp
  42a616:	pushf  
  42a617:	dec    edx
  42a618:	push   edx
  42a619:	xor    edi,esi
  42a61b:	and    cl,BYTE PTR [ebx-0xc]
  42a61e:	dec    ecx
  42a61f:	sub    al,0xf
  42a621:	int    0xbc
  42a623:	imul   ebp
  42a625:	outs   dx,BYTE PTR ds:[esi]
  42a626:	pop    ecx
  42a627:	fdiv   st(2),st
  42a629:	call   0xac54fb9
  42a62e:	cmp    cl,BYTE PTR [esi+eax*8-0x357d1d7]
  42a635:	push   ss
  42a636:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42a637:	arpl   WORD PTR [edx-0x5d768a84],dx
  42a63d:	das    
  42a63e:	mov    BYTE PTR [ebx+0x102db153],ch
  42a644:	test   eax,0xaab66651
  42a649:	outs   dx,DWORD PTR ds:[esi]
  42a64a:	nop
  42a64b:	push   ecx
  42a64c:	jns    0x42a692
  42a64e:	in     al,0xaf
  42a650:	ror    DWORD PTR [edx*1+0x6d0d5a10],cl
  42a657:	mov    esp,0x4857b67a
  42a65c:	ret    0x6b75
  42a65f:	mov    eax,ds:0xd0eb238d
  42a664:	add    DWORD PTR [esi+0x10],esp
  42a667:	retf   
  42a668:	leave  
  42a669:	push   cs
  42a66a:	cmp    al,0x6b
  42a66c:	pop    ecx
  42a66d:	fwait
  42a66e:	aas    
  42a66f:	bound  ecx,QWORD PTR [eax]
  42a671:	mov    bl,0x38
  42a673:	mov    dl,0xf7
  42a675:	gs xchg esi,eax
  42a677:	gs mov bh,0x4d
  42a67a:	inc    ebx
  42a67b:	adc    DWORD PTR [esi+0x139a3b7e],eax
  42a681:	jb     0x42a6b1
  42a683:	or     bh,al
  42a685:	int    0x88
  42a687:	mov    cl,0xfa
  42a689:	fs iret 
  42a68b:	inc    eax
  42a68c:	fsubr  QWORD PTR ds:0x79d262c6
  42a692:	addr16 sahf 
  42a694:	sub    eax,DWORD PTR [edx-0x58]
  42a697:	popf   
  42a698:	int    0x97
  42a69a:	mov    ah,0xf4
  42a69c:	or     al,0x6b
  42a69e:	and    eax,0x44c8a949
  42a6a3:	mov    ebx,0xba8a785b
  42a6a8:	jne    0x42a6e4
  42a6aa:	sbb    al,0x4b
  42a6ac:	inc    ebx
  42a6ad:	jbe    0x42a6b6
  42a6af:	gs scas al,BYTE PTR es:[edi]
  42a6b1:	in     al,dx
  42a6b2:	mov    ebp,0x2b35fb41
  42a6b7:	xchg   BYTE PTR [ecx+0x28f5d10f],bl
  42a6bd:	or     DWORD PTR [ebx-0x36],esi
  42a6c0:	push   cs
  42a6c1:	cmp    eax,0xf0d005fe
  42a6c6:	fmul   st,st(1)
  42a6c8:	int    0x9f
  42a6ca:	xchg   esp,eax
  42a6cb:	loopne 0x42a675
  42a6cd:	aad    0xd5
  42a6cf:	fstp   QWORD PTR [esi+0x7645f6ef]
  42a6d5:	test   eax,0x3945a535
  42a6da:	mov    ah,0xfa
  42a6dc:	sahf   
  42a6dd:	fwait
  42a6de:	mov    ah,dl
  42a6e0:	pop    esi
  42a6e1:	mov    dl,0xdc
  42a6e3:	mov    ah,BYTE PTR [edx]
  42a6e5:	mov    ebx,edi
  42a6e7:	std    
  42a6e8:	add    al,0x51
  42a6ea:	adc    al,BYTE PTR [ebx-0x542ad60f]
  42a6f0:	scas   eax,DWORD PTR es:[edi]
  42a6f1:	leave  
  42a6f2:	test   edx,eax
  42a6f4:	sbb    BYTE PTR [edx],ch
  42a6f6:	dec    ebp
  42a6f7:	jge    0x42a6b6
  42a6f9:	leave  
  42a6fa:	fld    TBYTE PTR [esi]
  42a6fc:	mov    eax,0x3bbaf688
  42a701:	shl    BYTE PTR [esi],0xb3
  42a704:	outs   dx,BYTE PTR ds:[esi]
  42a705:	inc    esi
  42a706:	rcr    DWORD PTR [eax],cl
  42a708:	jne    0x42a749
  42a70a:	out    dx,al
  42a70b:	xor    ebx,DWORD PTR [ebp+0xeb55a42]
  42a711:	mov    BYTE PTR [esp],al
  42a714:	xor    ecx,DWORD PTR [eax]
  42a716:	add    eax,0x58a3692
  42a71c:	(bad)  
  42a71d:	push   0xbc898686
  42a722:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42a723:	cwde   
  42a724:	push   ds
  42a725:	adc    ebx,DWORD PTR ds:0x7208e061
  42a72c:	adc    eax,0x3aae98ea
  42a731:	ret    0xcba5
  42a734:	shl    ebp,cl
  42a736:	inc    ebx
  42a737:	lods   al,BYTE PTR ds:[esi]
  42a738:	push   es
  42a739:	pop    eax
  42a73a:	add    BYTE PTR [bx+si],dh
  42a73d:	ds hlt 
  42a73f:	retf   
  42a740:	cwde   
  42a741:	stos   BYTE PTR es:[edi],al
  42a742:	(bad)  
  42a743:	int3   
  42a744:	push   ds
  42a745:	mov    eax,0xb8bccf23
  42a74a:	or     DWORD PTR ds:0x5e39fb18,eax
  42a750:	in     eax,dx
  42a751:	retf   0x1d73
  42a754:	dec    esp
  42a755:	mov    al,BYTE PTR [edi]
  42a757:	or     ebp,DWORD PTR [eax]
  42a759:	and    DWORD PTR [esi],esi
  42a75b:	cmp    bl,dl
  42a75d:	pop    es
  42a75e:	test   eax,0xdb7cd022
  42a763:	mov    ds:0x3a59ecc4,eax
  42a768:	dec    ebp
  42a769:	div    BYTE PTR [ebp+0x3fb69cbe]
  42a76f:	dec    edi
  42a770:	test   eax,0xde25cf30
  42a775:	(bad)  
  42a776:	pop    ss
  42a777:	fsubp  st(5),st
  42a779:	fsubr  QWORD PTR [edx+0x18]
  42a77c:	jl     0x42a78c
  42a77e:	test   eax,0x1437b21
  42a783:	pop    es
  42a784:	div    bh
  42a786:	adc    BYTE PTR [ebx],al
  42a788:	scas   al,BYTE PTR es:[edi]
  42a789:	jmp    0xcbb1:0xa7730f24
  42a790:	in     eax,dx
  42a791:	and    BYTE PTR [edi-0x5d],ch
  42a794:	(bad)  
  42a795:	(bad)  
  42a796:	aad    0xad
  42a798:	inc    esi
  42a799:	scas   al,BYTE PTR es:[edi]
  42a79a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42a79b:	neg    BYTE PTR [ebx]
  42a79d:	and    cl,al
  42a79f:	lds    esi,FWORD PTR [edx]
  42a7a1:	pop    esp
  42a7a2:	fwait
  42a7a3:	mov    dh,0x67
  42a7a5:	les    eax,FWORD PTR [ebx-0x7c]
  42a7a8:	aad    0x59
  42a7aa:	or     al,0xf9
  42a7ac:	push   ss
  42a7ad:	or     DWORD PTR [esi],eax
  42a7af:	cmp    BYTE PTR [esi-0x36],0x11
  42a7b3:	stos   DWORD PTR es:[edi],eax
  42a7b4:	dec    esi
  42a7b5:	(bad)  
  42a7b6:	xchg   edi,eax
  42a7b7:	loop   0x42a800
  42a7b9:	in     eax,0x88
  42a7bb:	dec    eax
  42a7bc:	jl     0x42a76d
  42a7be:	cmp    ecx,eax
  42a7c0:	js     0x42a797
  42a7c2:	mov    dl,0x1b
  42a7c4:	push   0xffffff8a
  42a7c6:	(bad)  
  42a7c9:	jmp    0x42a75a
  42a7cb:	pop    ds
  42a7cc:	cs jno 0x42a791
  42a7cf:	sub    al,0x22
  42a7d1:	rol    BYTE PTR [edx-0x565f32bf],0x6f
  42a7d8:	stos   DWORD PTR es:[edi],eax
  42a7d9:	push   edx
  42a7da:	cli    
  42a7db:	addr16 xchg ecx,eax
  42a7dd:	dec    ecx
  42a7de:	jp     0x42a7d1
  42a7e0:	mov    edx,0x711622fc
  42a7e5:	xchg   DWORD PTR [edx+0x14a8a623],edi
  42a7eb:	neg    DWORD PTR [edi-0x14f0194]
  42a7f1:	xchg   ebx,eax
  42a7f2:	fcmovu st,st(1)
  42a7f4:	lahf   
  42a7f5:	sub    ebx,DWORD PTR [edx]
  42a7f7:	dec    esp
  42a7f8:	jne    0x42a7c9
  42a7fa:	sbb    eax,DWORD PTR [edx+ecx*1+0x7bb3e2f5]
  42a801:	jle    0x42a7a3
  42a803:	pop    edx
  42a804:	mov    ah,0x80
  42a806:	add    ebx,DWORD PTR [eax-0x7380e1d0]
  42a80c:	jle    0x42a84e
  42a80e:	lods   al,BYTE PTR ds:[esi]
  42a80f:	aas    
  42a810:	adc    DWORD PTR [edx-0xded44c7],eax
  42a816:	cs dec ebp
  42a818:	push   edi
  42a819:	lods   al,BYTE PTR ds:[esi]
  42a81a:	push   ecx
  42a81b:	int    0x92
  42a81d:	jge    0x42a880
  42a81f:	mov    esp,0xb7694b1
  42a824:	push   ds
  42a825:	int    0xeb
  42a827:	fist   DWORD PTR [edi+0x14]
  42a82a:	adc    bh,BYTE PTR gs:[ecx+eiz*1-0x8c8ae34]
  42a832:	bound  ebp,QWORD PTR [esi+0x45]
  42a835:	mov    eax,ds:0x68ca2e
  42a83a:	or     eax,0xc37708f5
  42a83f:	jg     0x42a7c1
  42a841:	dec    esp
  42a842:	sbb    al,0x86
  42a844:	sbb    esi,DWORD PTR [esi]
  42a846:	push   esi
  42a847:	ins    BYTE PTR es:[edi],dx
  42a848:	push   ds
  42a849:	mov    ah,0x4b
  42a84b:	mov    edi,0x64473115
  42a850:	nop
  42a851:	icebp  
  42a852:	into   
  42a853:	enterw 0xf2bb,0x58
  42a858:	fsubr  DWORD PTR [eax-0x80]
  42a85b:	mov    esi,esp
  42a85d:	mov    bh,0x49
  42a85f:	jle    0x42a8bd
  42a861:	dec    ebx
  42a862:	xor    DWORD PTR [eax],eax
  42a864:	je     0x42a869
  42a866:	pop    edx
  42a867:	mov    BYTE PTR [edi-0x5af99349],ch
  42a86d:	cld    
  42a86e:	add    edi,ebx
  42a870:	ds pop ss
  42a872:	jmp    0x42a875
  42a874:	cdq    
  42a875:	imul   edi,DWORD PTR [esi+0x7253b8bc],0x41f0e1e5
  42a87f:	jg     0x42a8c1
  42a881:	push   ds
  42a882:	stos   BYTE PTR es:[edi],al
  42a883:	sbb    BYTE PTR [eax-0x7303eafe],bl
  42a889:	and    eax,0x9a86b05
  42a88e:	inc    edi
  42a88f:	shl    BYTE PTR ds:0x820fcb9d,0x46
  42a896:	call   0xbecb06a3
  42a89b:	repnz sbb eax,0xaabf0601
  42a8a1:	jmp    0xcb66:0xd3100394
  42a8a8:	loopne 0x42a85d
  42a8aa:	mov    dh,0xe9
  42a8ac:	cdq    
  42a8ad:	sti    
  42a8ae:	cld    
  42a8af:	cli    
  42a8b0:	jno    0x42a833
  42a8b2:	scas   al,BYTE PTR es:[edi]
  42a8b3:	add    ah,ch
  42a8b5:	pop    edi
  42a8b6:	es push edi
  42a8b8:	inc    ebp
  42a8b9:	add    BYTE PTR [ebx],cl
  42a8bb:	dec    edx
  42a8bc:	sub    al,0x78
  42a8be:	mov    dh,0x21
  42a8c0:	repz mov ds:0xc3ef8a42,al
  42a8c6:	retf   
  42a8c7:	test   al,0x31
  42a8c9:	pop    es
  42a8ca:	in     eax,0x67
  42a8cc:	retf   0x3a98
  42a8cf:	imul   ecx,DWORD PTR [esi+0x6b],0xccd653d0
  42a8d6:	mov    WORD PTR [ecx+0xa],ss
  42a8d9:	xor    al,dl
  42a8db:	dec    edi
  42a8dc:	xor    al,0xbf
  42a8de:	mov    ah,0xa6
  42a8e0:	mov    bl,0x21
  42a8e2:	jno    0x42a93e
  42a8e4:	dec    ebx
  42a8e5:	nop
  42a8e6:	cmp    eax,0x40671be4
  42a8eb:	jmp    0x42a967
  42a8ed:	sbb    eax,0x8dbe7c2a
  42a8f2:	out    dx,al
  42a8f3:	fs jnp 0x42a947
  42a8f6:	and    ecx,eax
  42a8f8:	push   es
  42a8f9:	cmp    dl,BYTE PTR [esi]
  42a8fb:	test   BYTE PTR [esi],bl
  42a8fd:	jmp    0x767b:0xe022899c
  42a904:	ror    BYTE PTR [edi],0xbc
  42a907:	out    dx,eax
  42a908:	ds retf 0x7d1a
  42a90c:	mov    esp,0x1d2e4edf
  42a911:	(bad)  
  42a912:	call   0x449d8311
  42a917:	fstp   st(0)
  42a919:	sbb    ah,BYTE PTR [ecx-0x48]
  42a91c:	adc    DWORD PTR [ebx],eax
  42a91e:	jl     0x42a99d
  42a920:	mov    ebx,ebp
  42a922:	add    eax,esi
  42a924:	and    al,0x2c
  42a926:	outs   dx,BYTE PTR ds:[esi]
  42a927:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42a928:	popa   
  42a929:	fsubp  st(1),st
  42a92b:	mov    ds:0x1a16e06c,al
  42a930:	and    ebx,esp
  42a932:	cmp    eax,0xd33c9566
  42a937:	lock pop eax
  42a939:	sub    al,0x56
  42a93b:	pop    edx
  42a93c:	push   ecx
  42a93d:	jns    0x42a978
  42a93f:	dec    edx
  42a940:	imul   DWORD PTR [esi-0x9bdacf5]
  42a946:	repz mov bh,0xb5
  42a949:	and    BYTE PTR [edi+ebx*1],cl
  42a94c:	nop    DWORD PTR [edx]
  42a94f:	rcl    eax,cl
  42a951:	in     eax,0x1e
  42a953:	or     ecx,ebp
  42a955:	xor    dh,ch
  42a957:	push   cs
  42a958:	je     0x42a92e
  42a95a:	add    ecx,DWORD PTR [ebp-0xd0c9f8b]
  42a960:	repnz not BYTE PTR [edi-0x2]
  42a964:	sar    DWORD PTR [ebp+0x44],0x2
  42a968:	test   eax,0xdffc67dc
  42a96d:	rcl    ecx,1
  42a96f:	mov    al,ds:0xa899b6d2
  42a974:	mov    bl,0x3a
  42a976:	jecxz  0x42a9f5
  42a978:	dec    edi
  42a979:	and    BYTE PTR [ebx-0x142d4d3c],dl
  42a97f:	inc    ebx
  42a980:	and    ecx,edx
  42a982:	nop
  42a983:	retf   
  42a984:	aaa    
  42a985:	movs   BYTE PTR es:[edi],BYTE PTR fs:[esi]
  42a987:	dec    eax
  42a988:	mov    al,ds:0x45af95b7
  42a98d:	shl    BYTE PTR [ebx],0x97
  42a990:	les    ebx,FWORD PTR [ebx-0x55]
  42a993:	aas    
  42a994:	je     0x42a98c
  42a996:	lods   eax,DWORD PTR ds:[esi]
  42a997:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42a998:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42a999:	and    eax,0x3d711772
  42a99e:	inc    ebp
  42a99f:	cmp    BYTE PTR [ecx+0x7a0aacae],dh
  42a9a5:	stc    
  42a9a6:	test   al,0x87
  42a9a8:	pop    edi
  42a9a9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42a9aa:	dec    ebx
  42a9ab:	loopne 0x42a980
  42a9ad:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42a9ae:	scas   al,BYTE PTR es:[edi]
  42a9af:	cdq    
  42a9b0:	mov    ebp,0xee906be3
  42a9b5:	xchg   edx,eax
  42a9b6:	ret    0x5d2a
  42a9b9:	cmp    al,0x10
  42a9bb:	(bad)  
  42a9bc:	(bad)  
  42a9bd:	mov    bh,0x22
  42a9bf:	shl    BYTE PTR [ebx],cl
  42a9c1:	push   ss
  42a9c2:	dec    esi
  42a9c3:	jnp    0x42aa32
  42a9c5:	push   ds
  42a9c6:	mov    dl,0xe
  42a9c8:	call   0x66d2:0xf4f9da61
  42a9cf:	inc    ecx
  42a9d0:	shr    DWORD PTR [ecx+0x630d22e],cl
  42a9d6:	add    edx,DWORD PTR [edi+0x56]
  42a9d9:	xor    al,0x4f
  42a9db:	ins    BYTE PTR es:[edi],dx
  42a9dc:	test   esp,edi
  42a9de:	or     esi,edx
  42a9e0:	ret    
  42a9e1:	xor    ecx,0xcb135ce2
  42a9e7:	pusha  
  42a9e8:	and    ebp,esp
  42a9ea:	rcpps  xmm1,XMMWORD PTR [eax]
  42a9ed:	adc    eax,0x6922e94c
  42a9f2:	pop    edx
  42a9f3:	popf   
  42a9f4:	data16 std 
  42a9f6:	je     0x42a9cd
  42a9f8:	xor    BYTE PTR [eax+0x2cd4e1d3],bl
  42a9fe:	inc    eax
  42a9ff:	enter  0xa156,0x81
  42aa03:	fcmovnu st,st(4)
  42aa05:	dec    ebp
  42aa06:	push   esp
  42aa07:	popf   
  42aa08:	add    al,0x73
  42aa0a:	ins    BYTE PTR es:[edi],dx
  42aa0b:	pop    esp
  42aa0c:	jmp    0x42aa7a
  42aa0e:	dec    esi
  42aa0f:	pusha  
  42aa10:	fwait
  42aa11:	xor    edi,DWORD PTR [esi-0x63]
  42aa14:	ret    
  42aa15:	in     al,dx
  42aa16:	rol    BYTE PTR [edx-0x19],cl
  42aa19:	cli    
  42aa1a:	ss addr16 dec esp
  42aa1d:	out    dx,al
  42aa1e:	cmp    al,BYTE PTR [edx-0x6df64d19]
  42aa24:	call   0x8654a304
  42aa29:	aas    
  42aa2a:	pop    esp
  42aa2b:	adc    al,0xd7
  42aa2d:	lahf   
  42aa2e:	mov    al,ds:0xfd24f18e
  42aa33:	stc    
  42aa34:	cdq    
  42aa35:	outs   dx,BYTE PTR ds:[esi]
  42aa36:	jecxz  0x42aa90
  42aa38:	(bad)  
  42aa39:	pop    esi
  42aa3a:	pusha  
  42aa3b:	sahf   
  42aa3c:	fst    QWORD PTR [esi+eiz*8+0x7a3dde1c]
  42aa43:	fwait
  42aa44:	cmps   DWORD PTR gs:[esi],DWORD PTR es:[edi]
  42aa46:	inc    esp
  42aa47:	nop
  42aa48:	xchg   ebx,edi
  42aa4a:	pop    ebx
  42aa4b:	push   es
  42aa4c:	retf   0xc4e1
  42aa4f:	dec    edi
  42aa50:	daa    
  42aa51:	or     al,0x7a
  42aa53:	push   esi
  42aa54:	ins    BYTE PTR es:[edi],dx
  42aa55:	sub    al,0x49
  42aa57:	and    edx,edi
  42aa59:	pop    ds
  42aa5a:	loopne 0x42aa61
  42aa5c:	lods   al,BYTE PTR ds:[esi]
  42aa5d:	mov    esp,0x7aa7016f
  42aa62:	inc    eax
  42aa63:	push   es
  42aa64:	imul   ecx,DWORD PTR [ebp-0x74],0x25
  42aa68:	fld1   
  42aa6a:	add    al,bl
  42aa6c:	jmp    0x400f:0xe32ac5d8
  42aa73:	xchg   edi,eax
  42aa74:	sar    BYTE PTR [eax+0x4adeae45],1
  42aa7a:	test   eax,0x7bffad6a
  42aa7f:	cmp    DWORD PTR [ebp+0x516bbe3f],ebp
  42aa85:	mov    cl,dh
  42aa87:	or     BYTE PTR [edi],dl
  42aa89:	pop    esi
  42aa8a:	out    0x85,al
  42aa8c:	and    dl,BYTE PTR [esi+0x26]
  42aa8f:	icebp  
  42aa90:	icebp  
  42aa91:	inc    esi
  42aa92:	push   cs
  42aa93:	cmp    BYTE PTR [eax],bh
  42aa95:	and    edi,DWORD PTR [ecx+0x14de4ce6]
  42aa9b:	xchg   BYTE PTR [edi-0x54d2eaeb],dl
  42aaa1:	adc    BYTE PTR [ebx*1-0x66f8d033],dh
  42aaa8:	jg     0x42aa39
  42aaaa:	mov    esp,0xf077caa8
  42aaaf:	xchg   edx,eax
  42aab0:	or     esi,edx
  42aab2:	or     DWORD PTR ds:0x2b85fc58,ecx
  42aab8:	call   0x9be4:0x9646109f
  42aabf:	adc    eax,0xe6601ac5
  42aac4:	shl    eax,1
  42aac6:	pop    es
  42aac7:	xchg   ebp,eax
  42aac8:	test   DWORD PTR [edx+0x6d],edi
  42aacb:	loop   0x42aa5c
  42aacd:	out    dx,eax
  42aace:	js     0x42aa92
  42aad0:	push   cs
  42aad1:	inc    esp
  42aad2:	call   0xe04:0x8836fc84
  42aad9:	inc    ebx
  42aada:	mov    ?,WORD PTR [edi-0x71b043a2]
  42aae0:	inc    ecx
  42aae1:	push   0x66
  42aae3:	cmp    esp,ebp
  42aae5:	lahf   
  42aae6:	cmp    DWORD PTR [ebp-0x948ff27],0x75
  42aaed:	aas    
  42aaee:	(bad)  
  42aaf0:	sub    DWORD PTR [edx],eax
  42aaf2:	sti    
  42aaf3:	xor    BYTE PTR [eax-0x46],0x11
  42aaf7:	adc    al,0x17
  42aaf9:	mov    edx,0xf10b9fd8
  42aafe:	mov    ebp,0x21d06876
  42ab03:	jnp    0x42aac3
  42ab05:	inc    ebp
  42ab06:	(bad)  
  42ab07:	ds sti 
  42ab09:	cmp    esi,DWORD PTR [ebx-0xf]
  42ab0c:	into   
  42ab0d:	int    0x63
  42ab0f:	ds data16 repnz sbb al,0x88
  42ab14:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42ab15:	repz hlt 
  42ab17:	push   esi
  42ab18:	and    DWORD PTR [esi-0x2be62201],0xffffffa2
  42ab1f:	push   eax
  42ab20:	jp     0x42aae2
  42ab22:	hlt    
  42ab23:	cmp    DWORD PTR [ebx],ebp
  42ab25:	cmp    eax,0x18bf4a04
  42ab2a:	adc    esp,DWORD PTR [edx+0x6882067a]
  42ab30:	fbstp  TBYTE PTR [ecx]
  42ab32:	or     BYTE PTR [ebx+0x69],bh
  42ab35:	mov    edx,0x66d141a4
  42ab3a:	retf   0xa268
  42ab3d:	not    DWORD PTR [edx]
  42ab3f:	fistp  WORD PTR [eax-0x7f]
  42ab42:	push   eax
  42ab43:	cmp    DWORD PTR ds:0xbacdb6ab,edi
  42ab49:	retf   
  42ab4a:	add    DWORD PTR [ebx],edi
  42ab4c:	in     al,0x4
  42ab4e:	mov    BYTE PTR [eax-0x1468f93],0x7f
  42ab55:	js     0x42ab26
  42ab57:	in     eax,0xf9
  42ab59:	xchg   esi,eax
  42ab5a:	ins    DWORD PTR es:[edi],dx
  42ab5b:	cmp    al,0xea
  42ab5d:	fmul   DWORD PTR [esi+0x6c061090]
  42ab63:	mov    al,ds:0x697ceaeb
  42ab68:	jne    0x42abcf
  42ab6a:	dec    edi
  42ab6b:	(bad)  [ebx-0x2e]
  42ab6e:	xchg   esi,eax
  42ab6f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42ab70:	jge    0x42ab0d
  42ab72:	dec    ebx
  42ab73:	les    ecx,FWORD PTR [ecx+0x50]
  42ab76:	je     0x42ab1d
  42ab78:	or     esi,edi
  42ab7a:	pop    es
  42ab7b:	mov    dl,0x2e
  42ab7d:	and    al,0xe0
  42ab7f:	cmp    al,BYTE PTR [ecx-0x61]
  42ab82:	xchg   ebx,eax
  42ab83:	cmp    DWORD PTR [esi],edx
  42ab85:	repz inc eax
  42ab87:	(bad)  
  42ab88:	clc    
  42ab89:	pop    es
  42ab8a:	ds push eax
  42ab8c:	ret    
  42ab8d:	aaa    
  42ab8e:	and    al,0x4f
  42ab90:	loop   0x42ab19
  42ab92:	jnp    0x42ab90
  42ab94:	in     eax,0x1d
  42ab96:	popa   
  42ab97:	sub    eax,0x914e2cfa
  42ab9c:	push   eax
  42ab9d:	push   ds
  42ab9e:	in     al,0xc3
  42aba0:	popa   
  42aba1:	iret   
  42aba2:	jecxz  0x42ab39
  42aba4:	xchg   edx,eax
  42aba5:	cmp    ebx,ebp
  42aba7:	retf   0xd7ef
  42abaa:	jno    0x42ac01
  42abac:	push   esp
  42abad:	xchg   BYTE PTR [edi-0x50797833],cl
  42abb3:	add    al,0xcd
  42abb5:	clc    
  42abb6:	aas    
  42abb7:	inc    ecx
  42abb8:	sbb    ah,BYTE PTR [ebp+0x5e]
  42abbb:	push   ecx
  42abbc:	cwde   
  42abbd:	fisub  DWORD PTR ds:0x798612fe
  42abc3:	hlt    
  42abc4:	cmp    al,0xb1
  42abc6:	loopne 0x42abf7
  42abc8:	xchg   edx,eax
  42abc9:	fidiv  DWORD PTR [eax+0x533700c1]
  42abcf:	jmp    0xa394:0x6c343832
  42abd6:	dec    esp
  42abd7:	(bad)  
  42abd8:	xchg   ecx,eax
  42abd9:	cmp    esi,DWORD PTR [edx+0x48634572]
  42abdf:	mov    ecx,0x9f2f60e2
  42abe4:	call   0xdee9:0x8065e5ef
  42abeb:	xor    DWORD PTR [esi+0x5a279682],ebp
  42abf1:	xchg   edi,eax
  42abf2:	dec    ebx
  42abf3:	dec    edi
  42abf4:	fisubr WORD PTR [ecx+0x144fdc55]
  42abfa:	rol    BYTE PTR [ecx],cl
  42abfc:	adc    esp,DWORD PTR [eax+0x6c]
  42abff:	popa   
  42ac00:	hlt    
  42ac01:	cmp    DWORD PTR [eax-0x7b],esp
  42ac04:	fwait
  42ac05:	mov    ebp,0xf35d23e
  42ac0a:	arpl   cx,ax
  42ac0c:	cmp    eax,0xece04868
  42ac11:	dec    esi
  42ac12:	les    esi,FWORD PTR [ecx-0x27]
  42ac15:	aas    
  42ac16:	mov    ds:0x30679ab3,eax
  42ac1b:	push   ecx
  42ac1c:	dec    ebx
  42ac1d:	sbb    ecx,0xcc30977
  42ac23:	xchg   ebx,eax
  42ac24:	fmul   st,st(0)
  42ac26:	addr16 aam 0x50
  42ac29:	mov    DWORD PTR [ebx-0x3e],ebx
  42ac2c:	ret    
  42ac2d:	int    0x2
  42ac2f:	lea    ebx,[eax+0x658ee16c]
  42ac35:	push   ss
  42ac36:	sub    eax,0x2722de8
  42ac3b:	jp     0xa12d8c25
  42ac41:	push   ds
  42ac42:	out    0xd1,eax
  42ac44:	scas   al,BYTE PTR es:[edi]
  42ac45:	shl    edx,1
  42ac47:	in     al,dx
  42ac48:	or     BYTE PTR ds:0xfc2b86ba,bh
  42ac4e:	icebp  
  42ac4f:	(bad)  
  42ac50:	fbstp  TBYTE PTR ds:0x229a03f5
  42ac56:	retf   0xf8c9
  42ac59:	loopne 0x42acc6
  42ac5b:	sub    ebp,DWORD PTR [edi-0x1faeda80]
  42ac61:	mov    ch,ch
  42ac63:	rol    BYTE PTR ss:[edx+0x68d06d58],cl
  42ac6a:	and    al,BYTE PTR [eax-0x4544f723]
  42ac70:	xchg   esi,eax
  42ac71:	(bad)  
  42ac73:	jb     0x42ac6f
  42ac75:	push   edx
  42ac76:	pop    eax
  42ac77:	(bad)  
  42ac78:	adc    cl,BYTE PTR [esi+0x4b6ac13d]
  42ac7e:	ret    
  42ac7f:	pop    ss
  42ac80:	(bad)  
  42ac81:	cs push ss
  42ac83:	dec    ebx
  42ac84:	test   al,0xff
  42ac86:	aam    0x74
  42ac88:	push   esi
  42ac89:	push   0xffffffb5
  42ac8b:	imul   ebx,esp,0xda87812c
  42ac91:	adc    cl,dh
  42ac93:	mov    eax,0xf32cce32
  42ac98:	jmp    0x42acdd
  42ac9a:	mov    esp,ebp
  42ac9c:	ret    0xe469
  42ac9f:	mov    ch,0x7a
  42aca1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42aca2:	js     0x42acd6
  42aca4:	test   al,0xcf
  42aca6:	or     al,0x5
  42aca8:	xor    al,0x4a
  42acaa:	xor    eax,0xcec6f6ad
  42acaf:	jno    0x42ac5e
  42acb1:	xchg   BYTE PTR [ecx],dl
  42acb3:	push   ds
  42acb4:	mov    edi,0x610ddda0
  42acb9:	and    al,0xab
  42acbb:	inc    eax
  42acbc:	jp     0x42aca0
  42acbe:	pop    ss
  42acbf:	jb     0x42ad0f
  42acc1:	int    0x78
  42acc3:	ret    0x5696
  42acc6:	mov    ebx,0xbe092410
  42accb:	aad    0x58
  42accd:	ret    
  42acce:	inc    esp
  42accf:	adc    dh,bl
  42acd1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42acd2:	loope  0x42ac7e
  42acd4:	ja     0x42ad18
  42acd6:	cmp    BYTE PTR [esi-0x560ab52f],bl
  42acdc:	jae    0x42ad4a
  42acde:	fucom  st(0)
  42ace0:	clc    
  42ace1:	loope  0x42ad17
  42ace3:	daa    
  42ace4:	pop    edi
  42ace5:	push   esi
  42ace6:	(bad)  
  42ace7:	lock pop ds
  42ace9:	xchg   edx,eax
  42acea:	xchg   ebp,eax
  42aceb:	mov    ds:0x82d389ad,al
  42acf0:	das    
  42acf1:	jmp    0x42ac80
  42acf3:	sbb    edi,DWORD PTR [ecx]
  42acf5:	inc    edx
  42acf6:	add    edi,DWORD PTR [ecx-0x4ccc4f02]
  42acfc:	loopne 0x42aced
  42acfe:	sub    al,0x28
  42ad00:	inc    ebx
  42ad01:	mov    esp,0x79870d44
  42ad06:	pop    ebp
  42ad07:	inc    esp
  42ad08:	xor    bh,BYTE PTR [ecx-0x14]
  42ad0b:	call   0x20bb58c2
  42ad10:	and    esp,DWORD PTR [ebx+esi*4]
  42ad13:	mov    fs,WORD PTR [esi+0x2b1a3cbe]
  42ad19:	stc    
  42ad1a:	loopne 0x42ad4c
  42ad1c:	fisub  WORD PTR [ebp+eiz*4-0x6f]
  42ad20:	mov    WORD PTR ds:0x39f7c7d9,?
  42ad26:	and    eax,0x5178515a
  42ad2b:	cmp    BYTE PTR ds:0xac17e527,ch
  42ad31:	in     eax,dx
  42ad32:	xlat   BYTE PTR ds:[ebx]
  42ad33:	ret    
  42ad34:	mov    esp,0x4828c1f0
  42ad39:	test   DWORD PTR [edi+0x4d08e195],0x3510e8e0
  42ad43:	fucomip st,st(7)
  42ad45:	dec    ebx
  42ad46:	xor    al,0x9b
  42ad48:	xchg   DWORD PTR [ebx],edx
  42ad4a:	mov    BYTE PTR [esi+0x123c54aa],bl
  42ad50:	pop    ds
  42ad51:	pop    eax
  42ad52:	sahf   
  42ad53:	pusha  
  42ad54:	int3   
  42ad55:	dec    ebp
  42ad56:	jp     0x42ada4
  42ad58:	or     al,0x39
  42ad5a:	mov    bh,bh
  42ad5c:	xchg   edi,eax
  42ad5d:	adc    bh,bl
  42ad5f:	cmp    edx,DWORD PTR [edx]
  42ad61:	iret   
  42ad62:	ins    BYTE PTR es:[edi],dx
  42ad63:	mov    es,esp
  42ad65:	loopne 0x42acea
  42ad67:	out    dx,eax
  42ad68:	and    DWORD PTR [esi+0x60],ecx
  42ad6b:	bound  edi,QWORD PTR [esi]
  42ad6d:	leave  
  42ad6e:	jns    0x42ad68
  42ad70:	rcr    DWORD PTR [edi],1
  42ad72:	cli    
  42ad73:	inc    esi
  42ad74:	sub    BYTE PTR [eax+ebp*2],ah
  42ad77:	sub    eax,DWORD PTR ds:0xeee3558d
  42ad7d:	in     al,dx
  42ad7e:	adc    esp,edx
  42ad80:	repnz cmp al,0xb9
  42ad83:	xchg   ebx,ecx
  42ad85:	inc    eax
  42ad86:	bound  edi,QWORD PTR [ecx+0x2074baaa]
  42ad8c:	xor    eax,0x8836d1f5
  42ad91:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42ad92:	mov    ds:0x7022b37c,eax
  42ad97:	xchg   edi,eax
  42ad98:	lds    ebp,FWORD PTR [edi-0x1]
  42ad9b:	mov    ds:0x76e8192d,al
  42ada0:	out    0x8e,al
  42ada2:	xchg   BYTE PTR [edx+0x232feb2d],dh
  42ada8:	js     0x42ad5d
  42adaa:	xor    ecx,eax
  42adac:	lahf   
  42adad:	out    0x18,eax
  42adaf:	and    DWORD PTR [edi-0x2],eax
  42adb2:	and    al,0x25
  42adb4:	mov    ds:0xd4c49cf2,al
  42adb9:	(bad)  
  42adba:	xor    esi,DWORD PTR [ecx+esi*2-0x6c341e9f]
  42adc1:	ins    BYTE PTR es:[edi],dx
  42adc2:	pop    es
  42adc3:	shr    ah,1
  42adc5:	imul   ebx,DWORD PTR [ebp+0x40],0x23
  42adc9:	cld    
  42adca:	push   ecx
  42adcb:	mov    ebp,0xcd785777
  42add0:	inc    ebp
  42add1:	icebp  
  42add2:	test   BYTE PTR [ebp-0x3d],bl
  42add5:	mov    eax,0xc8c4db5d
  42adda:	outs   dx,BYTE PTR ds:[esi]
  42addb:	es retf 
  42addd:	mov    dh,0x2c
  42addf:	jnp    0x42ae0b
  42ade1:	pop    eax
  42ade2:	adc    al,0x37
  42ade4:	xor    ecx,DWORD PTR [edi-0x4a888d2a]
  42adea:	pop    es
  42adeb:	adc    ebp,DWORD PTR [edi-0xec1d958]
  42adf1:	repz or edx,ebp
  42adf4:	xlat   BYTE PTR ds:[ebx]
  42adf5:	or     dl,ch
  42adf7:	adc    DWORD PTR [esi+0x75a94865],ecx
  42adfd:	ret    
  42adfe:	fsub   DWORD PTR [ebp-0x1fb01401]
  42ae04:	stos   DWORD PTR es:[edi],eax
  42ae05:	sbb    DWORD PTR [esi],0xffffff88
  42ae08:	je     0x42adbc
  42ae0a:	sub    eax,0xff5b9493
  42ae0f:	enter  0x2d26,0x47
  42ae13:	adc    ebx,eax
  42ae15:	ins    DWORD PTR es:[edi],dx
  42ae16:	mov    ds:0x110dc42d,eax
  42ae1b:	retf   
  42ae1c:	lods   ax,WORD PTR ds:[esi]
  42ae1e:	sti    
  42ae1f:	stos   DWORD PTR es:[edi],eax
  42ae20:	mov    bh,0xe0
  42ae22:	aad    0x52
  42ae24:	(bad)  
  42ae26:	and    eax,0x8ea978f6
  42ae2b:	cwde   
  42ae2c:	(bad)  
  42ae2d:	(bad)  
  42ae2e:	sub    al,0x51
  42ae30:	sbb    al,0xf4
  42ae32:	cmp    al,BYTE PTR [esi+0x45b76975]
  42ae38:	ins    BYTE PTR es:[edi],dx
  42ae39:	(bad)  
  42ae3a:	clc    
  42ae3b:	lea    ebp,[edx-0x3]
  42ae3e:	cmp    DWORD PTR [ebx+ebx*2],esp
  42ae41:	dec    ebx
  42ae42:	dec    ebp
  42ae43:	aaa    
  42ae44:	dec    edx
  42ae45:	(bad)  
  42ae46:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42ae47:	add    BYTE PTR [esi],ah
  42ae49:	inc    edx
  42ae4a:	leave  
  42ae4b:	test   eax,0xe5fef880
  42ae50:	dec    edx
  42ae51:	dec    ecx
  42ae52:	outs   dx,DWORD PTR cs:[esi]
  42ae54:	popa   
  42ae55:	sbb    cl,BYTE PTR [esp+ebp*1-0x7]
  42ae59:	dec    ecx
  42ae5a:	pop    esp
  42ae5b:	pop    ebp
  42ae5c:	mov    esi,0xe7a7b75a
  42ae61:	call   0xc60e:0x68787a3c
  42ae68:	push   es
  42ae69:	mov    ds:0x5c029482,eax
  42ae6e:	sub    esp,DWORD PTR [esi]
  42ae70:	arpl   WORD PTR gs:[edi],bx
  42ae73:	xor    al,0x98
  42ae75:	xor    edi,DWORD PTR [ecx-0x52e35db0]
  42ae7b:	jb     0x42ae1a
  42ae7d:	movs   DWORD PTR es:[di],DWORD PTR ds:[si]
  42ae7f:	xor    eax,DWORD PTR [edi+0x54]
  42ae82:	pop    es
  42ae83:	jmp    0x62f6:0x48bce001
  42ae8a:	mov    bl,bh
  42ae8c:	jno    0x42aec1
  42ae8e:	iret   
  42ae8f:	out    0x45,eax
  42ae91:	lods   eax,DWORD PTR es:[esi]
  42ae93:	sub    al,BYTE PTR [esi]
  42ae95:	mov    bh,0xac
  42ae97:	mov    edi,0x33e3f990
  42ae9c:	scas   al,BYTE PTR es:[edi]
  42ae9d:	pop    eax
  42ae9e:	sub    al,0x3d
  42aea0:	mov    edi,edi
  42aea2:	lea    esp,[edx]
  42aea4:	hlt    
  42aea5:	std    
  42aea6:	inc    esp
  42aea7:	js     0x42ae6a
  42aea9:	imul   esi,DWORD PTR [ecx+0x5f9f6daf],0x5a31096e
  42aeb3:	mov    edx,0x1cf22a75
  42aeb8:	iret   
  42aeb9:	jns    0x42aef4
  42aebb:	push   ecx
  42aebc:	inc    esp
  42aebd:	mov    edi,0xe0854875
  42aec2:	xchg   ebx,eax
  42aec3:	fwait
  42aec4:	or     eax,0x1118d2dc
  42aec9:	rcl    BYTE PTR [ecx-0x25],0xb9
  42aecd:	scas   eax,DWORD PTR es:[edi]
  42aece:	xchg   ebx,eax
  42aecf:	push   ds
  42aed0:	dec    eax
  42aed1:	jnp    0x42af4a
  42aed3:	jnp    0x42aece
  42aed5:	cbw    
  42aed7:	in     al,0x89
  42aed9:	aaa    
  42aeda:	or     bh,0xc6
  42aedd:	(bad)  
  42aede:	outs   dx,DWORD PTR ds:[esi]
  42aedf:	sub    edi,esi
  42aee1:	outs   dx,DWORD PTR ds:[esi]
  42aee2:	aam    0x41
  42aee4:	cmc    
  42aee5:	mov    ah,0x31
  42aee7:	int3   
  42aee8:	xchg   esp,eax
  42aee9:	push   cs
  42aeea:	or     bh,BYTE PTR [edi]
  42aeec:	adc    bh,bl
  42aeee:	jmp    0x27bb8cd7
  42aef3:	(bad)  
  42aef4:	enter  0x17d2,0x7e
  42aef8:	cld    
  42aef9:	out    dx,eax
  42aefa:	sbb    eax,0xcdafabb0
  42aeff:	jns    0x42af0b
  42af01:	fsubrp st(0),st
  42af03:	mov    es,WORD PTR ds:0xf94347ec
  42af09:	inc    edi
  42af0b:	or     dl,BYTE PTR [edx-0x465c1124]
  42af11:	mov    edi,0x58de99dd
  42af16:	jmp    0x42aece
  42af18:	push   0x68
  42af1a:	cdq    
  42af1b:	aad    0x48
  42af1d:	fisubr DWORD PTR [ebx]
  42af1f:	ud2    
  42af21:	dec    edx
  42af22:	push   cs
  42af23:	mov    BYTE PTR [edi+0x3e9434f],0x78
  42af2a:	(bad)  
  42af2b:	bound  ebp,QWORD PTR [esp+edi*8-0x2933b729]
  42af32:	pop    esp
  42af33:	adc    bl,BYTE PTR [edi+0x61]
  42af36:	cmp    edx,DWORD PTR [edx-0x402cc1bc]
  42af3c:	lock inc eax
  42af3e:	stc    
  42af3f:	(bad)  
  42af40:	mov    eax,ds:0x901c4ccb
  42af45:	push   ss
  42af46:	xchg   ecx,eax
  42af47:	xchg   ecx,eax
  42af48:	(bad)  
  42af49:	nop
  42af4a:	(bad)  
  42af4b:	xchg   edx,eax
  42af4c:	loope  0x42aed4
  42af4e:	pop    esi
  42af4f:	lock ins DWORD PTR es:[edi],dx
  42af51:	inc    ecx
  42af52:	sbb    dl,ch
  42af54:	in     eax,0xb1
  42af56:	test   DWORD PTR [ecx+0x7d5e05f1],ecx
  42af5c:	push   ecx
  42af5d:	arpl   WORD PTR [ebp-0x8],dx
  42af60:	fistp  QWORD PTR [edi-0x61]
  42af63:	mov    ch,0x72
  42af65:	shr    DWORD PTR [eax+0x37],0x24
  42af69:	je     0x42afbb
  42af6b:	mov    BYTE PTR [edi+0xb6bcf28],0x6e
  42af72:	xchg   ecx,eax
  42af73:	mov    al,ds:0xb60d9470
  42af78:	in     eax,0xbe
  42af7a:	jmp    0xb2ad:0x295fb752
  42af81:	add    eax,0x6f789309
  42af86:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42af87:	hlt    
  42af88:	inc    ebp
  42af89:	mov    al,0x67
  42af8b:	cmp    al,0xd3
  42af8d:	or     al,BYTE PTR [eax+0x23a974ff]
  42af93:	xchg   edx,eax
  42af94:	nop
  42af95:	jae    0x42af35
  42af97:	aas    
  42af98:	fst    DWORD PTR [edx+0x72]
  42af9b:	add    eax,0xcc34e2d4
  42afa0:	test   al,0xa3
  42afa2:	stos   DWORD PTR es:[edi],eax
  42afa3:	sahf   
  42afa4:	int3   
  42afa5:	lods   al,BYTE PTR ds:[esi]
  42afa6:	push   esp
  42afa7:	pop    ecx
  42afa8:	lods   al,BYTE PTR ds:[esi]
  42afa9:	push   cs
  42afaa:	sub    dh,BYTE PTR [edi-0x7f0fb3f1]
  42afb0:	push   edi
  42afb1:	pop    es
  42afb2:	xchg   edi,eax
  42afb3:	jl     0x42af5b
  42afb5:	xchg   ebp,eax
  42afb6:	jle    0x42af73
  42afb8:	inc    ebp
  42afb9:	mov    ss,WORD PTR [edx-0x5c]
  42afbc:	pop    edx
  42afbd:	dec    esi
  42afbe:	(bad)  
  42afbf:	xchg   ebx,eax
  42afc0:	dec    edi
  42afc1:	in     al,0x96
  42afc3:	and    esi,DWORD PTR [edx]
  42afc5:	sbb    BYTE PTR [eax],dl
  42afc7:	xchg   ecx,eax
  42afc8:	jl     0x42af59
  42afca:	mov    bh,0x5b
  42afcc:	test   al,0x99
  42afce:	push   edx
  42afcf:	xlat   BYTE PTR ds:[ebx]
  42afd0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42afd1:	xor    eax,0xddeba4b6
  42afd6:	push   edi
  42afd7:	dec    ecx
  42afd8:	sbb    bh,BYTE PTR [eax+0x7c]
  42afdb:	xchg   edx,eax
  42afdc:	adc    al,BYTE PTR [ebx+0x15]
  42afdf:	dec    edx
  42afe0:	mov    WORD PTR [edx-0x57],es
  42afe3:	out    dx,al
  42afe4:	shl    ah,0x7e
  42afe7:	in     al,dx
  42afe8:	aam    0xfd
  42afea:	shl    DWORD PTR [eax-0x3c],1
  42afed:	adc    DWORD PTR [edi],0x41
  42aff0:	jo     0x42b016
  42aff2:	rcl    eax,0xa7
  42aff5:	and    al,bh
  42aff7:	or     al,0xe9
  42aff9:	sub    BYTE PTR [edi+0x64],0x55
  42affd:	or     DWORD PTR [edi-0x24],ecx
  42b000:	xor    ch,BYTE PTR [ebp+ecx*4+0x2750f969]
  42b007:	xchg   esi,eax
  42b008:	test   eax,0x93602d0d
  42b00d:	std    
  42b00e:	cmp    esi,edi
  42b010:	and    DWORD PTR [eax],edx
  42b012:	popf   
  42b013:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42b014:	dec    esi
  42b015:	imul   ebx,DWORD PTR [esi],0xffffffbb
  42b018:	arpl   WORD PTR [esi+ebp*2],sp
  42b01b:	push   edx
  42b01c:	xchg   edx,eax
  42b01d:	pop    edx
  42b01e:	push   ss
  42b01f:	or     DWORD PTR [edx+0x217bcb6a],eax
  42b025:	jo     0x42afe2
  42b027:	add    al,0xb0
  42b029:	out    dx,eax
  42b02a:	push   edi
  42b02b:	cmp    al,0xcb
  42b02d:	cmp    DWORD PTR [ebx],edi
  42b02f:	jno    0x42b023
  42b031:	mov    ?,WORD PTR [eax+0x79e49da2]
  42b037:	fwait
  42b038:	cld    
  42b039:	sub    dl,BYTE PTR [esi+0x3ca4add]
  42b03f:	mov    dh,0x9c
  42b041:	pop    edx
  42b042:	add    BYTE PTR [ebx+0x1de2a07c],0x30
  42b049:	(bad)  
  42b04a:	js     0x42b025
  42b04c:	mov    dl,0xaf
  42b04e:	mov    bl,0x25
  42b050:	rcr    DWORD PTR [ebx],1
  42b052:	dec    ebx
  42b053:	push   0x4e22b694
  42b058:	or     edx,DWORD PTR [edi+0x71]
  42b05b:	push   ecx
  42b05c:	(bad)  
  42b05d:	jnp    0x42b04d
  42b05f:	cmc    
  42b060:	xchg   ch,al
  42b062:	ret    0xf1f9
  42b065:	add    al,0x1e
  42b067:	arpl   WORD PTR [ebp-0x23],dx
  42b06a:	add    DWORD PTR [ecx-0x702c4e83],ebx
  42b070:	popa   
  42b071:	adc    bh,BYTE PTR [esi+0x19]
  42b074:	es das 
  42b076:	aam    0xa8
  42b078:	jp     0x42b07e
  42b07a:	bound  edx,QWORD PTR [edi-0x20]
  42b07d:	jnp    0x42b047
  42b07f:	mov    al,ds:0xc21ebfe9
  42b084:	test   al,0xf9
  42b086:	sub    eax,0x5c9dc299
  42b08b:	mov    cl,0xdc
  42b08d:	stos   DWORD PTR es:[edi],eax
  42b08e:	pop    edi
  42b08f:	xor    eax,0xfcd09244
  42b094:	mov    eax,0xa7b1a0c7
  42b099:	mov    DWORD PTR [eax-0xe1da72f],edx
  42b09f:	aas    
  42b0a0:	lds    ebp,FWORD PTR [esi+0x2a20fef3]
  42b0a6:	or     ch,bh
  42b0a8:	jmp    0x74c24fab
  42b0ad:	out    0x8f,al
  42b0af:	dec    edx
  42b0b0:	mov    BYTE PTR [ebx-0x62c99ba7],cl
  42b0b6:	xchg   edi,eax
  42b0b7:	mov    cl,0xeb
  42b0b9:	outs   dx,DWORD PTR ds:[esi]
  42b0ba:	shl    DWORD PTR [ecx],cl
  42b0bc:	push   ebp
  42b0bd:	push   esi
  42b0be:	retf   
  42b0bf:	fst    DWORD PTR [edx-0x27b39f82]
  42b0c5:	test   BYTE PTR [edi+0x74107566],0x5e
  42b0cc:	icebp  
  42b0cd:	pop    ecx
  42b0ce:	loopne 0x42b0bf
  42b0d0:	sbb    bl,0xd0
  42b0d3:	push   edx
  42b0d4:	je     0x42b0f0
  42b0d6:	repnz aam 0x18
  42b0d9:	inc    ebp
  42b0da:	jae    0x42b0bc
  42b0dc:	repz bound ebx,QWORD PTR [esi+0x761f9cc3]
  42b0e3:	cmp    DWORD PTR [ebx-0x3],0x5737029b
  42b0ea:	enter  0x247c,0x4a
  42b0ee:	imul   ebp,ebp,0x1f
  42b0f1:	pop    ecx
  42b0f2:	sbb    dl,al
  42b0f4:	adc    al,0xe
  42b0f6:	adc    eax,0x73a06f9d
  42b0fb:	inc    ebp
  42b0fc:	jo     0x42b0a0
  42b0fe:	sbb    eax,0x345f13ea
  42b103:	fmul   QWORD PTR gs:0xeac68980
  42b10a:	push   ecx
  42b10b:	jecxz  0x42b08e
  42b10d:	xchg   ecx,eax
  42b10e:	cmp    DWORD PTR [esi-0x67a9965c],edx
  42b114:	push   ebp
  42b115:	jle    0x42b15d
  42b117:	jl     0x42b102
  42b119:	mov    ecx,0xa7b224b5
  42b11e:	mov    cl,BYTE PTR [ebp+0x13320c82]
  42b124:	leave  
  42b125:	jnp    0x42b181
  42b127:	adc    esi,DWORD PTR [ebx+0x1c273612]
  42b12d:	add    al,0x78
  42b12f:	mov    eax,0x61b86243
  42b134:	fist   WORD PTR [ecx+0x55]
  42b137:	in     al,dx
  42b138:	cdq    
  42b139:	fcom   QWORD PTR [eax+0x1ff971fb]
  42b13f:	mov    gs,WORD PTR [edi]
  42b141:	add    eax,0xb08688d8
  42b146:	sbb    esi,ecx
  42b148:	pop    ebx
  42b149:	jne    0x42b105
  42b14b:	mov    edi,0x21147720
  42b150:	in     al,0x84
  42b152:	cmps   BYTE PTR cs:[esi],BYTE PTR es:[edi]
  42b154:	ins    DWORD PTR es:[edi],dx
  42b155:	pushf  
  42b156:	inc    edx
  42b157:	xor    eax,0xc1a2b1f7
  42b15c:	mov    ebx,0x385993cb
  42b161:	(bad)  
  42b163:	fwait
  42b164:	daa    
  42b165:	outs   dx,DWORD PTR ds:[esi]
  42b166:	ins    DWORD PTR es:[edi],dx
  42b167:	ja     0x42b182
  42b169:	or     dl,BYTE PTR [edx]
  42b16b:	gs mov edi,0xbedb7e3e
  42b171:	dec    edi
  42b172:	push   ecx
  42b173:	push   edx
  42b174:	xlat   BYTE PTR ds:[ebx]
  42b175:	xor    bl,ch
  42b177:	or     BYTE PTR [ebx+0x4f],ch
  42b17a:	cs into 
  42b17c:	xor    eax,0xd2d03c5
  42b181:	nop
  42b182:	or     ecx,ebx
  42b184:	comiss xmm0,DWORD PTR [esi]
  42b187:	inc    edi
  42b188:	js     0x42b14b
  42b18a:	inc    esp
  42b18b:	repz dec ebx
  42b18d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42b18e:	jnp    0x42b1bb
  42b190:	xlat   BYTE PTR ds:[ebx]
  42b191:	jo     0x42b19d
  42b193:	inc    edi
  42b194:	sub    eax,0x27b62aac
  42b199:	or     BYTE PTR [edx+edi*4],0xe2
  42b19d:	sti    
  42b19e:	das    
  42b19f:	cld    
  42b1a0:	cmp    al,0xe9
  42b1a2:	jecxz  0x42b1e1
  42b1a4:	aad    0xb4
  42b1a6:	loope  0x42b16e
  42b1a8:	push   eax
  42b1a9:	(bad)  
  42b1aa:	jmp    FWORD PTR [esi-0x2439e4c9]
  42b1b0:	stos   DWORD PTR es:[edi],eax
  42b1b1:	sahf   
  42b1b2:	pop    edx
  42b1b3:	sub    eax,0x3e59b789
  42b1b8:	push   esi
  42b1b9:	xchg   esp,eax
  42b1ba:	test   DWORD PTR [edi-0x630c7436],esi
  42b1c0:	shl    bh,0xc6
  42b1c3:	push   cs
  42b1c4:	xor    al,0x7
  42b1c6:	icebp  
  42b1c7:	cmp    ah,BYTE PTR [edx+0x6f0c4be2]
  42b1cd:	and    DWORD PTR [ebx-0x5a03472e],ebp
  42b1d3:	adc    bl,BYTE PTR [edx-0x3d9ed711]
  42b1d9:	rcl    BYTE PTR [ebp-0x33ff9a0],1
  42b1df:	mov    ebp,0x10a18434
  42b1e4:	sbb    ebp,ebx
  42b1e6:	xchg   edi,eax
  42b1e7:	stos   DWORD PTR es:[edi],eax
  42b1e8:	cmp    al,0xa7
  42b1ea:	rcl    DWORD PTR [esi-0x72a32554],cl
  42b1f0:	mov    al,ds:0x505a4754
  42b1f5:	fwait
  42b1f6:	test   BYTE PTR [edi],bl
  42b1f8:	jmp    0x97d2:0x77bdb8f9
  42b1ff:	sbb    BYTE PTR [edx-0x46bf0ce9],bl
  42b205:	pop    eax
  42b206:	xor    BYTE PTR [ebx],0x72
  42b209:	outs   dx,BYTE PTR ds:[esi]
  42b20a:	neg    BYTE PTR [ebx+0xc]
  42b20d:	dec    eax
  42b20e:	outs   dx,BYTE PTR ds:[esi]
  42b20f:	out    0xb0,al
  42b211:	sbb    ch,bl
  42b213:	and    al,BYTE PTR [edx]
  42b215:	push   edx
  42b216:	repz shr DWORD PTR [eax-0x5d],1
  42b21a:	fwait
  42b21b:	xchg   DWORD PTR [edi],eax
  42b21d:	cmp    al,0xc9
  42b21f:	or     BYTE PTR [ecx],dh
  42b221:	idiv   dh
  42b223:	push   edi
  42b224:	popf   
  42b225:	iret   
  42b226:	loop   0x42b226
  42b228:	aam    0xa5
  42b22a:	pandn  mm5,QWORD PTR [ebx]
  42b22d:	gs cmp al,0xb3
  42b230:	call   0xa11b6124
  42b235:	cmp    dl,0xe4
  42b238:	jb     0x42b242
  42b23a:	xor    BYTE PTR [edi-0x4c],0x14
  42b23e:	je     0x42b1c8
  42b240:	jbe    0x42b26f
  42b242:	popa   
  42b243:	popf   
  42b244:	fwait
  42b245:	(bad)  
  42b246:	mov    edi,0x38fb2e57
  42b24b:	and    DWORD PTR [ebx+0x33914433],eax
  42b251:	bound  eax,QWORD PTR [edx-0xf1522ac]
  42b257:	out    dx,al
  42b258:	dec    ecx
  42b259:	inc    esp
  42b25a:	pop    es
  42b25b:	ds inc eax
  42b25d:	and    BYTE PTR ds:0x6fd10ea,bl
  42b263:	test   dh,0x4d
  42b266:	cmp    al,0x43
  42b268:	mov    edi,0x114f8f5
  42b26d:	mov    WORD PTR [edi+0x6b275cad],?
  42b273:	test   eax,0xcdff1e47
  42b278:	cmp    eax,esi
  42b27a:	std    
  42b27b:	lds    esi,FWORD PTR [ecx-0x5289bac4]
  42b281:	xchg   ebx,eax
  42b282:	(bad)  
  42b283:	mov    ebx,DWORD PTR [esi+eiz*4-0x4ed96526]
  42b28a:	iret   
  42b28b:	or     ebp,esp
  42b28d:	inc    esi
  42b28e:	imul   ecx,DWORD PTR [esi],0x12
  42b291:	and    DWORD PTR [edx],esp
  42b293:	add    dl,bh
  42b295:	call   0xdcd8:0xc16be1a7
  42b29c:	test   bh,dl
  42b29e:	retf   
  42b29f:	push   es
  42b2a0:	icebp  
  42b2a1:	cmp    ecx,DWORD PTR [esi-0x77a1e959]
  42b2a7:	push   ds
  42b2a8:	jp     0x42b303
  42b2aa:	add    dl,BYTE PTR [ecx]
  42b2ac:	inc    ebp
  42b2ad:	nop
  42b2ae:	loope  0x42b27f
  42b2b0:	xchg   DWORD PTR [eax+0x3e1bec58],edx
  42b2b6:	repz dec eax
  42b2b8:	sahf   
  42b2b9:	xchg   ebx,eax
  42b2ba:	cdq    
  42b2bb:	jl     0x42b311
  42b2bd:	adc    bl,BYTE PTR [ebp-0x1150072f]
  42b2c3:	jge    0x42b25c
  42b2c5:	push   esi
  42b2c6:	xchg   esp,eax
  42b2c7:	jp     0x42b283
  42b2c9:	mov    edx,0x7267b985
  42b2ce:	sbb    al,0x66
  42b2d0:	push   edi
  42b2d1:	fisubr WORD PTR [esi-0x48]
  42b2d4:	mov    ebx,0x1e579e5c
  42b2d9:	push   edx
  42b2da:	jnp    0x42b2c6
  42b2dc:	in     al,dx
  42b2dd:	pop    ebx
  42b2de:	test   al,0xe3
  42b2e0:	push   eax
  42b2e1:	sbb    edi,DWORD PTR [esi-0x7e32f2c1]
  42b2e7:	or     al,0xe3
  42b2e9:	sub    BYTE PTR cs:[ebp-0x5b0b7e39],dh
  42b2f0:	(bad)  
  42b2f1:	jp     0x42b2e1
  42b2f3:	adc    BYTE PTR [esi-0x76036e71],ah
  42b2f9:	addr16 (bad) 
  42b2fb:	dec    ecx
  42b2fc:	pop    ds
  42b2fd:	fstp   st(7)
  42b2ff:	adc    bh,BYTE PTR [ebp-0x16]
  42b302:	test   al,0x6c
  42b304:	inc    esp
  42b305:	mov    edx,esp
  42b307:	dec    edx
  42b308:	fsub   DWORD PTR [esi]
  42b30a:	jecxz  0x42b2ca
  42b30c:	ja     0x42b34d
  42b30e:	mov    eax,ds:0xdd7f4897
  42b313:	(bad)  
  42b314:	mov    esp,0x8aca976b
  42b319:	loopne 0x42b2a9
  42b31b:	and    BYTE PTR [ebp+0x4a6d28eb],bh
  42b321:	ins    DWORD PTR es:[edi],dx
  42b322:	mov    bh,0xfa
  42b324:	or     eax,0x7276db5c
  42b329:	mov    ebx,0xbca4a67a
  42b32e:	retf   0x2807
  42b331:	sbb    al,0xe6
  42b333:	scas   eax,DWORD PTR es:[edi]
  42b334:	repnz and al,0xb5
  42b337:	rcl    DWORD PTR [edx+eax*8+0xc098021],0xde
  42b33f:	fstp   TBYTE PTR [esp+ebx*1]
  42b342:	push   esi
  42b343:	xor    BYTE PTR [edi-0x2e],bh
  42b346:	push   ds
  42b347:	inc    esp
  42b348:	xchg   esp,eax
  42b349:	jl     0x42b370
  42b34b:	add    ecx,0x0
  42b34e:	sub    BYTE PTR [ebx-0x526fc746],ch
  42b354:	das    
  42b355:	outs   dx,DWORD PTR ds:[esi]
  42b356:	rol    DWORD PTR [edx+0x719353b0],cl
  42b35c:	add    ecx,DWORD PTR [edx-0x43e77f8b]
  42b362:	mov    al,ds:0xceda946a
  42b367:	pop    edi
  42b368:	or     eax,0x7237deb8
  42b36d:	leave  
  42b36e:	(bad)  
  42b36f:	pop    edi
  42b370:	xor    BYTE PTR [ebx+0xdf6f046],dl
  42b376:	xchg   DWORD PTR gs:[edx+0xca6daa8],edx
  42b37d:	out    0x3,al
  42b37f:	xor    esi,ecx
  42b381:	adc    esi,eax
  42b383:	popf   
  42b384:	inc    ebp
  42b385:	(bad)  
  42b386:	jp     0x42b3a0
  42b388:	jmp    0x65be:0xbabea710
  42b38f:	frstor [ebx+0x3246303b]
  42b395:	jmp    0x42b36f
  42b397:	inc    esp
  42b398:	scas   eax,DWORD PTR es:[edi]
  42b399:	outs   dx,DWORD PTR ds:[esi]
  42b39a:	int    0x86
  42b39c:	imul   ebx,DWORD PTR [edx-0x1d2ac1e5],0x0
  42b3a3:	lds    eax,FWORD PTR [ebp+0x70c1f9b]
  42b3a9:	pop    ebp
  42b3aa:	mov    WORD PTR [esi],cs
  42b3ac:	jno    0x42b3d4
  42b3ae:	retf   0x8a0f
  42b3b1:	xchg   edx,eax
  42b3b2:	push   edi
  42b3b3:	xchg   esi,eax
  42b3b4:	adc    al,0x1b
  42b3b6:	and    BYTE PTR [edx-0x7f],bl
  42b3b9:	ficom  WORD PTR ds:0x69eaa4e5
  42b3bf:	dec    eax
  42b3c0:	sahf   
  42b3c1:	in     al,dx
  42b3c2:	loope  0x42b3f8
  42b3c4:	cmp    bl,cl
  42b3c6:	dec    ebx
  42b3c7:	ret    0xe7d0
  42b3ca:	jmp    0x587038de
  42b3cf:	(bad)  
  42b3d0:	int3   
  42b3d1:	or     DWORD PTR [edi+esi*8-0x4a],edi
  42b3d5:	sub    edi,DWORD PTR [eax+0x8]
  42b3d8:	mov    al,ds:0x5aeca947
  42b3dd:	outs   dx,DWORD PTR ds:[esi]
  42b3de:	(bad)
  42b3e1:	push   ds
  42b3e2:	pop    edx
  42b3e3:	push   ds
  42b3e4:	fsub   QWORD PTR [esi+edi*1]
  42b3e7:	add    DWORD PTR [ecx],ebp
  42b3e9:	add    al,cl
  42b3eb:	xchg   ecx,eax
  42b3ec:	call   0xa4e:0x545751bb
  42b3f3:	ins    BYTE PTR es:[edi],dx
  42b3f4:	ret    0x171
  42b3f7:	jnp    0x42b3ba
  42b3f9:	xchg   ebp,eax
  42b3fa:	push   ebp
  42b3fb:	mov    eax,ds:0x1f27f750
  42b400:	mov    bl,0xb6
  42b402:	std    
  42b403:	aad    0x1
  42b405:	fisttp WORD PTR [ebx-0x4a]
  42b408:	jle    0x42b3c0
  42b40a:	je     0x42b3d1
  42b40c:	add    ebx,DWORD PTR [ebp+eiz*2-0x32]
  42b410:	aas    
  42b411:	pop    ds
  42b412:	sub    ah,BYTE PTR [esi+0x423cd87d]
  42b418:	sbb    ecx,DWORD PTR [eax-0x666a957]
  42b41e:	add    esp,DWORD PTR [edx-0x687886a9]
  42b424:	inc    ebx
  42b425:	sbb    eax,0xd42f2b76
  42b42a:	inc    dl
  42b42c:	pop    ss
  42b42d:	push   ebx
  42b42e:	retf   0xcfdb
  42b431:	arpl   dx,bx
  42b433:	out    dx,al
  42b434:	jns    0x42b486
  42b436:	mov    al,ds:0x29ba45f0
  42b43b:	int3   
  42b43c:	inc    eax
  42b43d:	fisttp DWORD PTR [edi-0x9]
  42b441:	imul   ebp,ebx,0xa49abe66
  42b447:	(bad)  
  42b448:	nop
  42b449:	xchg   esp,eax
  42b44a:	imul   edx,DWORD PTR [esi+0x2468e418],0x85cfc4f9
  42b454:	mov    ds:0x6a45769a,eax
  42b459:	xlat   BYTE PTR ds:[ebx]
  42b45a:	jle    0x42b405
  42b45c:	sbb    BYTE PTR [ebp+0x5ed99c0],al
  42b462:	sbb    esi,DWORD PTR [edx+0x20]
  42b465:	aam    0x1b
  42b467:	scas   al,BYTE PTR es:[edi]
  42b468:	pusha  
  42b469:	rcr    ch,cl
  42b46b:	xchg   esi,eax
  42b46c:	mov    bl,0xdb
  42b46e:	int    0xe6
  42b470:	xchg   ebx,eax
  42b471:	div    ah
  42b473:	or     al,BYTE PTR [esi]
  42b475:	sub    esp,edi
  42b477:	std    
  42b478:	mov    al,0xeb
  42b47a:	call   0xc6624d05
  42b47f:	mov    ds:0x53f95f75,eax
  42b484:	ds sub eax,0xd07c0d16
  42b48a:	xchg   edi,eax
  42b48b:	das    
  42b48c:	das    
  42b48d:	xor    BYTE PTR [eax],cl
  42b48f:	iret   
  42b490:	or     al,0x7
  42b492:	push   ecx
  42b493:	fnstsw ax
  42b495:	scas   eax,DWORD PTR es:[edi]
  42b496:	jne    0x42b46c
  42b498:	xor    eax,0xd9514529
  42b49d:	scas   al,BYTE PTR es:[edi]
  42b49e:	pop    esp
  42b49f:	dec    ebp
  42b4a0:	jmp    0x42b45a
  42b4a2:	ret    0x5e86
  42b4a5:	and    BYTE PTR [ebp+0x46],dh
  42b4a8:	leave  
  42b4a9:	push   edi
  42b4aa:	mov    bh,0xdc
  42b4ac:	lahf   
  42b4ad:	jo     0x42b4eb
  42b4af:	pop    es
  42b4b0:	dec    ebp
  42b4b1:	sub    eax,0xde042b80
  42b4b6:	scas   al,BYTE PTR es:[edi]
  42b4b7:	jl     0x42b504
  42b4b9:	push   ebx
  42b4ba:	pop    DWORD PTR [edi-0x50]
  42b4bd:	scas   al,BYTE PTR es:[edi]
  42b4be:	xchg   edi,edi
  42b4c0:	mov    ds:0x4389f31b,eax
  42b4c5:	mov    ebx,0xeefa1277
  42b4ca:	ins    BYTE PTR es:[edi],dx
  42b4cb:	dec    edi
  42b4cc:	out    0x1e,al
  42b4ce:	push   es
  42b4cf:	in     eax,dx
  42b4d0:	daa    
  42b4d1:	out    0xcd,al
  42b4d3:	loop   0x42b4a8
  42b4d5:	dec    ebp
  42b4d6:	add    eax,0xebf630ae
  42b4db:	sbb    esi,DWORD PTR ds:0x314f3b1d
  42b4e1:	dec    ecx
  42b4e2:	add    DWORD PTR [eax+0x66],edi
  42b4e5:	fcmovu st,st(7)
  42b4e7:	(bad)  
  42b4e9:	cli    
  42b4ea:	pop    eax
  42b4eb:	inc    edx
  42b4ec:	and    DWORD PTR [ecx-0x74],ebp
  42b4ef:	adc    BYTE PTR [eax+0x10cbb6ff],0xd6
  42b4f6:	push   ebp
  42b4f7:	outs   dx,BYTE PTR ds:[esi]
  42b4f8:	lea    edx,fs:[ebx+0x3f]
  42b4fc:	and    al,0x37
  42b4fe:	push   ebp
  42b4ff:	pop    edi
  42b500:	cmp    edi,DWORD PTR [ecx-0x6a]
  42b503:	mov    WORD PTR [edi+0xa74319],cs
  42b509:	xchg   ebx,eax
  42b50a:	pop    eax
  42b50b:	cwde   
  42b50c:	sahf   
  42b50d:	adc    eax,0x5f6a259c
  42b512:	push   ebp
  42b513:	jmp    0xbd3aa98
  42b518:	sbb    BYTE PTR [esi-0x2e],cl
  42b51b:	pop    ebp
  42b51c:	cmp    edx,edx
  42b51e:	pop    esi
  42b51f:	sbb    eax,0x35ae31d5
  42b524:	mov    dl,0x41
  42b526:	repz sahf 
  42b528:	sbb    eax,0x129b71c7
  42b52d:	adc    cl,0x73
  42b530:	dec    edi
  42b531:	nop
  42b532:	cdq    
  42b533:	cmp    edi,DWORD PTR [eax]
  42b535:	add    al,0x3c
  42b537:	retf   
  42b538:	test   esp,eax
  42b53a:	sahf   
  42b53b:	or     al,0x6c
  42b53d:	lds    esi,FWORD PTR [edi-0x22d24a04]
  42b543:	lds    esi,FWORD PTR [ebp+0x26]
  42b546:	iret   
  42b547:	cli    
  42b548:	mov    bh,0x88
  42b54a:	fdiv   QWORD PTR [edi-0x60]
  42b54d:	std    
  42b54e:	fimul  DWORD PTR [ebx-0x74]
  42b551:	icebp  
  42b552:	jnp    0x42b588
  42b554:	addr16 pop esp
  42b556:	daa    
  42b557:	push   eax
  42b558:	out    0xdd,al
  42b55a:	sub    ebx,edx
  42b55c:	add    DWORD PTR [esp+eax*2],esp
  42b55f:	push   ebx
  42b560:	and    DWORD PTR [esi-0xe2f52ab],edi
  42b566:	jnp    0x42b56c
  42b568:	aas    
  42b569:	cmp    esp,edi
  42b56b:	arpl   WORD PTR [edx-0x3126953c],bp
  42b571:	fucomp st(7)
  42b573:	stc    
  42b574:	pop    esp
  42b575:	into   
  42b576:	ror    DWORD PTR [esi+0xf32f6ef],0x27
  42b57d:	push   eax
  42b57e:	sub    al,BYTE PTR [ebx-0x70b4a7bf]
  42b584:	xchg   esp,eax
  42b585:	xor    DWORD PTR [eax+0x2e],ebx
  42b588:	fcmovbe st,st(4)
  42b58a:	push   ebx
  42b58b:	inc    esp
  42b58c:	and    eax,0x86c70db0
  42b591:	push   ebp
  42b592:	push   cs
  42b593:	or     BYTE PTR [ecx-0x2c1d5874],bl
  42b599:	rol    eax,1
  42b59b:	daa    
  42b59c:	add    BYTE PTR [edi+edx*1-0x8],bh
  42b5a0:	lea    esp,[edx+0x5a]
  42b5a3:	xchg   ecx,eax
  42b5a4:	call   0x30663870
  42b5a9:	jns    0x42b626
  42b5ab:	add    al,0xbc
  42b5ad:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42b5ae:	dec    ecx
  42b5af:	not    DWORD PTR [esi+0x5f]
  42b5b2:	and    bh,BYTE PTR [ecx+0x79]
  42b5b5:	dec    ebp
  42b5b6:	cmp    ch,BYTE PTR [edi-0xe5bd25]
  42b5bc:	cmp    bh,BYTE PTR [esi-0x1c65b6d8]
  42b5c2:	in     al,dx
  42b5c3:	das    
  42b5c4:	cmp    DWORD PTR [esi],edx
  42b5c6:	mov    DWORD PTR [edx-0x2b],esp
  42b5c9:	mov    edx,0x6b39aea2
  42b5ce:	mov    ch,BYTE PTR [eax]
  42b5d0:	stos   DWORD PTR es:[edi],eax
  42b5d1:	mov    bl,0x53
  42b5d3:	or     eax,0x3cb8e2e9
  42b5d8:	inc    ebp
  42b5d9:	lods   eax,DWORD PTR ds:[esi]
  42b5da:	xor    al,0xfb
  42b5dc:	push   esi
  42b5dd:	xor    al,0xb0
  42b5df:	clc    
  42b5e0:	pop    ecx
  42b5e1:	sub    eax,0x5a107d50
  42b5e6:	lods   eax,DWORD PTR ds:[esi]
  42b5e7:	mov    ch,BYTE PTR [esi+0x790b450b]
  42b5ed:	sbb    al,0xdf
  42b5ef:	cdq    
  42b5f0:	xchg   eax,esp
  42b5f2:	mov    ?,WORD PTR [ecx+0x8]
  42b5f5:	jno    0x42b662
  42b5f7:	rol    BYTE PTR [eax+0x6d7980ac],0xb1
  42b5fe:	rcr    BYTE PTR [ecx],0xc7
  42b601:	and    eax,0xb9292ba1
  42b606:	adc    bl,BYTE PTR [ebx]
  42b608:	fsubr  QWORD PTR [ecx-0x410b7218]
  42b60e:	cmp    esi,DWORD PTR [edi]
  42b610:	ss jnp 0x42b5b1
  42b613:	(bad)  
  42b614:	cmp    al,0xce
  42b616:	cmp    eax,DWORD PTR gs:[edi+0x64977500]
  42b61d:	outs   dx,DWORD PTR ds:[esi]
  42b61e:	and    BYTE PTR [edx],al
  42b620:	jmp    FWORD PTR [esi]
  42b622:	xchg   edx,eax
  42b623:	cmp    esi,DWORD PTR ds:0x9a586a86
  42b629:	mov    al,ds:0x722b568c
  42b62e:	mov    dh,0x68
  42b630:	cdq    
  42b631:	jp     0x42b5dd
  42b633:	push   ebp
  42b634:	jecxz  0x42b5e9
  42b636:	jg     0x42b5e1
  42b638:	mov    eax,0x2b076b99
  42b63d:	xor    edi,edx
  42b63f:	ja     0x42b667
  42b641:	cmp    BYTE PTR [edx+0x7b],dh
  42b644:	bound  ebp,QWORD PTR [ecx-0x40]
  42b647:	sbb    BYTE PTR [edx+0x78],cl
  42b64a:	(bad)  
  42b64c:	cmp    bh,BYTE PTR [edx]
  42b64e:	sub    DWORD PTR [eax+0xad11ad3],ebx
  42b654:	xchg   edi,eax
  42b655:	xor    BYTE PTR [ebp-0x46eac1f8],bl
  42b65b:	in     eax,0xc4
  42b65d:	sbb    edi,eax
  42b65f:	bound  ebx,QWORD PTR [edi+eax*4-0x74ec4d89]
  42b666:	jl     0x42b69a
  42b668:	lds    edi,FWORD PTR [ebx+edx*4+0x4090231f]
  42b66f:	and    BYTE PTR [edx-0x66f497f1],cl
  42b675:	in     al,0xcf
  42b677:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42b678:	in     eax,dx
  42b679:	jl     0x42b6c0
  42b67b:	idiv   edx
  42b67d:	ret    0xf64a
  42b680:	mov    WORD PTR [esi-0x21],?
  42b683:	mov    ah,ah
  42b685:	jbe    0x42b62c
  42b687:	js     0x42b683
  42b689:	mov    eax,ecx
  42b68b:	arpl   WORD PTR [ebp+eiz*4-0x5d01a24f],cx
  42b692:	or     bh,dh
  42b694:	ss aam 0x86
  42b697:	shl    BYTE PTR [edi+0x6e3f907c],1
  42b69d:	ja     0x42b6eb
  42b69f:	mov    esi,0x3992bc53
  42b6a4:	sub    bh,BYTE PTR [ecx]
  42b6a6:	cmp    BYTE PTR [edx],cl
  42b6a8:	adc    bh,BYTE PTR [ebx]
  42b6aa:	repz sbb ch,BYTE PTR [esi+0x1f]
  42b6ae:	push   edx
  42b6af:	jmp    0xaa62805
  42b6b4:	ror    DWORD PTR [ebx],0xbf
  42b6b7:	fisubr DWORD PTR [edi+eax*2-0x720f9364]
  42b6be:	mov    ebx,ebx
  42b6c0:	pop    ss
  42b6c1:	je     0x42b71c
  42b6c3:	xor    al,0x6
  42b6c5:	and    ebp,DWORD PTR [edx]
  42b6c7:	icebp  
  42b6c8:	jnp    0x42b6f0
  42b6ca:	xor    eax,0x9575133a
  42b6cf:	(bad)  
  42b6d0:	(bad)
  42b6d3:	inc    esi
  42b6d4:	es call 0xf21423df
  42b6da:	loope  0x42b6b2
  42b6dc:	cs inc ecx
  42b6de:	inc    ebp
  42b6df:	dec    esi
  42b6e0:	xchg   DWORD PTR [edx+ebp*1-0x297f2f71],ebp
  42b6e7:	jge    0x42b6ad
  42b6e9:	rcl    DWORD PTR ds:0xa1f09452,cl
  42b6ef:	ss out 0x72,eax
  42b6f2:	adc    DWORD PTR [esi+0x6d],0x1d
  42b6f6:	dec    esi
  42b6f7:	add    DWORD PTR [eax+edi*8+0x59],esp
  42b6fb:	in     al,dx
  42b6fc:	pop    ebx
  42b6fd:	dec    ebp
  42b6fe:	cld    
  42b6ff:	mov    edi,0x59990f02
  42b704:	fnstsw WORD PTR [ecx]
  42b706:	into   
  42b707:	jo     0x42b74f
  42b709:	(bad)  [eax]
  42b70b:	sbb    esp,DWORD PTR [edx+eiz*8]
  42b70e:	enter  0x278f,0x51
  42b712:	xor    eax,DWORD PTR [esi]
  42b714:	cdq    
  42b715:	ds pop esp
  42b717:	mov    bl,0x4f
  42b719:	mov    ds:0x6da42867,al
  42b71e:	nop
  42b71f:	pop    es
  42b720:	ja     0x42b763
  42b722:	mov    dl,0xa6
  42b724:	xor    al,0x69
  42b726:	call   0x6b72:0x8bdfb11a
  42b72d:	push   0x41
  42b72f:	inc    ebx
  42b730:	inc    ecx
  42b731:	out    0xc9,al
  42b733:	addr16 lock sbb ecx,ecx
  42b737:	jbe    0x42b6e6
  42b739:	lahf   
  42b73a:	jnp    0x42b6e4
  42b73c:	stc    
  42b73d:	stos   DWORD PTR es:[edi],eax
  42b73e:	sbb    eax,0x53502338
  42b743:	push   ss
  42b744:	pushf  
  42b745:	aaa    
  42b746:	mov    DWORD PTR [edx],ecx
  42b748:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42b749:	xchg   ebp,eax
  42b74a:	enter  0x5778,0xfe
  42b74e:	sbb    al,0x21
  42b750:	mov    WORD PTR [esi],fs
  42b752:	xchg   edx,eax
  42b753:	jp     0x42b6de
  42b755:	ins    BYTE PTR es:[edi],dx
  42b756:	sub    eax,DWORD PTR [ebx+0x4a]
  42b759:	and    eax,0xd87ba4dd
  42b75e:	push   ebx
  42b75f:	mov    DWORD PTR [ecx],ebp
  42b761:	fcmovne st,st(5)
  42b763:	xchg   ecx,eax
  42b764:	ja     0x42b737
  42b766:	(bad)  
  42b767:	fisubr DWORD PTR [edx]
  42b769:	loope  0x42b74d
  42b76b:	daa    
  42b76c:	adc    dh,BYTE PTR [ebx+0x71]
  42b76f:	repz or eax,0xcf0b0426
  42b775:	and    DWORD PTR [ebx+0x78],esi
  42b778:	xchg   ebp,eax
  42b779:	or     esp,DWORD PTR [ebp-0x10]
  42b77c:	mov    cl,0xa5
  42b77e:	xchg   BYTE PTR [edi-0x67bffd0e],dh
  42b784:	mov    BYTE PTR [esp+ecx*4],bh
  42b787:	data16 int 0xd9
  42b78a:	cmc    
  42b78b:	dec    ecx
  42b78c:	stos   DWORD PTR es:[edi],eax
  42b78d:	dec    ebp
  42b78e:	inc    ecx
  42b78f:	adc    al,0x50
  42b791:	mov    edi,DWORD PTR [esi-0x39]
  42b794:	sub    DWORD PTR [ebx-0xf1a78bc],edx
  42b79a:	lea    eax,[eax]
  42b79c:	push   es
  42b79d:	push   ss
  42b79e:	inc    esp
  42b79f:	and    ebx,eax
  42b7a1:	adc    al,0xfc
  42b7a3:	in     al,0x32
  42b7a5:	sbb    eax,0xa1b72cf7
  42b7aa:	shl    edx,cl
  42b7ac:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42b7ad:	sub    DWORD PTR [edx+0x6d],eax
  42b7b0:	adc    BYTE PTR [edi],ah
  42b7b2:	push   cs
  42b7b3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42b7b4:	mov    bh,0x9f
  42b7b6:	jp     0x42b7a5
  42b7b8:	adc    bh,cl
  42b7ba:	inc    ebp
  42b7bb:	sub    BYTE PTR [edx],0x19
  42b7be:	es push edi
  42b7c0:	sub    esi,DWORD PTR [eax+edi*8-0x17b8c007]
  42b7c7:	push   0xffffffe9
  42b7c9:	add    esi,DWORD PTR [edx-0x3d]
  42b7cc:	ins    BYTE PTR es:[edi],dx
  42b7cd:	in     eax,0x8
  42b7cf:	mov    ch,al
  42b7d1:	mov    esi,0xc8a72458
  42b7d6:	push   0x7ab988ff
  42b7db:	add    DWORD PTR [esi-0x26142b43],esi
  42b7e1:	dec    ecx
  42b7e2:	mov    dh,BYTE PTR [ecx]
  42b7e4:	fnstcw WORD PTR [ebx+0xf]
  42b7e7:	unpcklps xmm2,xmm3
  42b7ea:	outs   dx,DWORD PTR ds:[esi]
  42b7eb:	mov    bh,BYTE PTR [esi]
  42b7ed:	mov    ch,0x4b
  42b7ef:	lods   al,BYTE PTR ds:[esi]
  42b7f0:	mov    bh,0xfc
  42b7f2:	mov    esi,0xed2ab683
  42b7f7:	out    dx,eax
  42b7f8:	and    eax,0x7b9ec88c
  42b7fd:	mov    BYTE PTR [eax],bl
  42b7ff:	out    dx,al
  42b800:	push   eax
  42b801:	adc    BYTE PTR ss:[ecx+eiz*1],dl
  42b805:	mov    ch,0x79
  42b807:	cwde   
  42b808:	pop    edx
  42b809:	xchg   ebx,eax
  42b80a:	rcl    BYTE PTR [ebx],1
  42b80c:	fwait
  42b80d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42b80e:	mov    esp,0x1011f92c
  42b813:	scas   eax,DWORD PTR es:[edi]
  42b814:	push   esp
  42b815:	dec    esi
  42b816:	clc    
  42b817:	jb     0x42b7e2
  42b819:	adc    edi,DWORD PTR [esi+0x6755417b]
  42b81f:	inc    edx
  42b820:	mov    edi,0x6b68e576
  42b825:	mov    ebp,0xb6041f22
  42b82a:	std    
  42b82b:	retf   
  42b82c:	jle    0x42b83e
  42b82e:	mov    bh,0x6b
  42b830:	pop    eax
  42b831:	mov    esi,0x71877bee
  42b836:	in     eax,0x89
  42b838:	pop    ebx
  42b839:	push   ss
  42b83a:	sub    DWORD PTR [esi],0xc2e16928
  42b840:	push   es
  42b841:	cmp    al,0xd6
  42b843:	loopne 0x42b8c4
  42b845:	pop    eax
  42b846:	repnz xchg ebp,eax
  42b848:	stos   BYTE PTR es:[edi],al
  42b849:	pop    esp
  42b84a:	(bad)  
  42b84b:	hlt    
  42b84c:	and    dh,ah
  42b84e:	pop    es
  42b84f:	mov    DWORD PTR [ebx+0x23],ebx
  42b852:	int3   
  42b853:	cld    
  42b854:	push   ecx
  42b855:	not    BYTE PTR [eax-0x18]
  42b858:	repnz push esi
  42b85a:	push   ebx
  42b85b:	push   cs
  42b85c:	mov    eax,ds:0x7b8ffcc6
  42b861:	ret    0x6771
  42b864:	sbb    dh,BYTE PTR [ebp-0x2d]
  42b867:	sbb    eax,0x3d349653
  42b86c:	test   al,0xcc
  42b86e:	pop    eax
  42b86f:	pop    ecx
  42b870:	fs xor eax,0x54e02734
  42b876:	shr    BYTE PTR [esi],0x1f
  42b879:	js     0x42b88f
  42b87b:	fsubr  DWORD PTR [edi+0x3a0efc41]
  42b881:	sti    
  42b882:	rep movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42b884:	ins    DWORD PTR es:[edi],dx
  42b885:	and    BYTE PTR [ecx],dh
  42b887:	ja     0x42b81a
  42b889:	or     DWORD PTR [esi+edi*1],0x1472d1d1
  42b890:	shl    DWORD PTR [ecx-0x59],1
  42b893:	popf   
  42b894:	ds stos BYTE PTR es:[edi],al
  42b896:	mov    bl,BYTE PTR [edx+0x277f8eb0]
  42b89c:	ds dec edi
  42b89e:	sbb    BYTE PTR [ebx],ah
  42b8a0:	inc    esp
  42b8a1:	sbb    BYTE PTR [edi-0x48],cl
  42b8a4:	(bad)  
  42b8a5:	call   0x51c:0xea5a7961
  42b8ac:	cli    
  42b8ad:	push   cs
  42b8ae:	pushf  
  42b8af:	mov    bh,0xf2
  42b8b1:	mov    cl,BYTE PTR [edx-0x59]
  42b8b4:	dec    esi
  42b8b5:	clc    
  42b8b6:	pop    edx
  42b8b7:	jne    0x42b889
  42b8b9:	cmp    al,0x84
  42b8bb:	jb     0x42b916
  42b8bd:	ror    BYTE PTR [esp+eax*2+0x60de8c0],0x73
  42b8c5:	mov    edx,0xf63edc00
  42b8ca:	and    edx,ebp
  42b8cc:	shl    ah,cl
  42b8ce:	icebp  
  42b8cf:	mov    ebx,0x5c30d12
  42b8d4:	inc    ebp
  42b8d5:	or     BYTE PTR [edx],0x63
  42b8d8:	xchg   edx,eax
  42b8d9:	push   0xc
  42b8db:	push   ebx
  42b8dc:	mov    cl,0x9a
  42b8de:	and    eax,0xf5e496b7
  42b8e3:	cmp    BYTE PTR [ebp+0x747a177e],0x85
  42b8ea:	push   0x8494a9b7
  42b8ef:	add    DWORD PTR [ecx-0x54],edx
  42b8f2:	adc    bl,cl
  42b8f4:	jge    0x42b88b
  42b8f6:	shl    DWORD PTR [ebx],0x8a
  42b8f9:	jle    0x42b8b5
  42b8fb:	int3   
  42b8fc:	push   esi
  42b8fd:	loope  0x42b8f5
  42b8ff:	dec    esi
  42b900:	mov    dl,0x8e
  42b902:	jb     0x42b951
  42b904:	or     eax,0x7061d8bc
  42b909:	lds    esp,FWORD PTR [esi-0x2cd33404]
  42b90f:	sahf   
  42b910:	sbb    esi,DWORD PTR [eax]
  42b912:	pop    eax
  42b913:	loopne 0x42b8fb
  42b915:	xchg   DWORD PTR ds:0x49d8ed53,esp
  42b91b:	scas   al,BYTE PTR es:[edi]
  42b91c:	aad    0x54
  42b91e:	mov    al,ah
  42b920:	mov    edx,es
  42b922:	repz or ebx,ebp
  42b925:	add    al,BYTE PTR [edi]
  42b927:	mov    al,ds:0x8561bb3c
  42b92c:	and    ecx,DWORD PTR [edx+0x20]
  42b92f:	adc    BYTE PTR [edx-0x3aefe968],cl
  42b935:	mov    edi,DWORD PTR [eax+0x75]
  42b938:	dec    ebp
  42b939:	retf   
  42b93a:	dec    edi
  42b93b:	nop
  42b93c:	jmp    0x42b991
  42b93e:	or     eax,0x3a778d25
  42b943:	fs pop ecx
  42b945:	ds jno 0x42b9b0
  42b948:	lods   eax,DWORD PTR ds:[esi]
  42b949:	(bad)  
  42b94a:	push   esi
  42b94b:	adc    BYTE PTR [ecx+eiz*2+0x18c6a623],0xb2
  42b953:	push   0xffffffb7
  42b955:	sbb    ecx,DWORD PTR [eax+0x16]
  42b958:	and    al,ah
  42b95a:	xchg   ecx,eax
  42b95b:	aas    
  42b95c:	and    esp,DWORD PTR [ebx]
  42b95e:	(bad)
  42b962:	aaa    
  42b963:	js     0x42b982
  42b965:	xchg   ebx,eax
  42b966:	jl     0x42b93e
  42b968:	ss ret 
  42b96a:	jp     0x42b94d
  42b96c:	leave  
  42b96d:	sub    ah,0x81
  42b970:	stos   BYTE PTR es:[edi],al
  42b971:	mov    ?,ecx
  42b973:	mov    eax,0x920256fb
  42b978:	std    
  42b979:	push   0x55039fdf
  42b97e:	bound  edi,QWORD PTR [edi-0x70]
  42b981:	scas   eax,DWORD PTR es:[edi]
  42b982:	adc    edx,edx
  42b984:	push   edi
  42b985:	jo     0x42b94f
  42b987:	pop    eax
  42b988:	xchg   BYTE PTR [ecx-0xfd2c208],cl
  42b98e:	jno    0x42b95f
  42b990:	adc    eax,0x873131f
  42b995:	inc    eax
  42b996:	icebp  
  42b997:	stc    
  42b998:	mov    ebx,0x78611980
  42b99d:	jle    0x42b93a
  42b99f:	jo     0x42b9f5
  42b9a1:	adc    al,0x74
  42b9a3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42b9a4:	xor    al,0xf6
  42b9a6:	cmp    DWORD PTR [eax-0x42d0d634],esi
  42b9ac:	pop    edx
  42b9ad:	cmc    
  42b9ae:	das    
  42b9af:	std    
  42b9b0:	ret    0xd9de
  42b9b3:	push   cs
  42b9b4:	jno    0x42b9c4
  42b9b6:	es jmp 0x42b9be
  42b9b9:	les    ebx,FWORD PTR [edx]
  42b9bb:	xor    al,0x3f
  42b9bd:	adc    ebp,DWORD PTR [edi+0x5e320d3a]
  42b9c3:	scas   al,BYTE PTR es:[edi]
  42b9c4:	(bad)  
  42b9c5:	repz push esi
  42b9c7:	mov    bh,0x16
  42b9c9:	adc    eax,0x356fcf0a
  42b9ce:	sti    
  42b9cf:	adc    cl,dh
  42b9d1:	push   cs
  42b9d2:	mov    bh,0x6f
  42b9d4:	inc    esp
  42b9d5:	in     eax,dx
  42b9d6:	dec    edx
  42b9d7:	inc    edi
  42b9d8:	mov    esi,0xe3011ef3
  42b9dd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42b9de:	xchg   esp,ecx
  42b9e0:	jmp    0xf89d2d4d
  42b9e5:	push   es
  42b9e6:	call   edi
  42b9e8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42b9e9:	jmp    0x42b9f0
  42b9eb:	jge    0x42ba11
  42b9ed:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42b9ee:	xchg   ebx,eax
  42b9ef:	inc    eax
  42b9f0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42b9f1:	aam    0x31
  42b9f3:	pop    ebx
  42b9f4:	call   0xecc9726
  42b9f9:	pop    ebp
  42b9fa:	pop    ss
  42b9fb:	sti    
  42b9fc:	dec    esp
  42b9fd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42b9fe:	add    DWORD PTR [esi+ebx*1],0x76320f8f
  42ba05:	inc    edx
  42ba06:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42ba07:	scas   al,BYTE PTR es:[edi]
  42ba08:	mov    edi,DWORD PTR [ebp+0x6e]
  42ba0b:	lods   al,BYTE PTR ds:[esi]
  42ba0c:	in     eax,0x1a
  42ba0e:	inc    ebp
  42ba0f:	enter  0xe060,0x85
  42ba13:	mov    DWORD PTR [ebp+eax*4-0x9],esp
  42ba17:	inc    esp
  42ba18:	fidivr WORD PTR [ecx]
  42ba1a:	cmp    BYTE PTR [edi-0x6b74546c],0xcf
  42ba21:	mov    ebp,0x357288cb
  42ba26:	jg     0x42ba44
  42ba28:	scas   eax,DWORD PTR es:[edi]
  42ba29:	push   edi
  42ba2a:	pop    edx
  42ba2b:	popa   
  42ba2c:	data16 int3 
  42ba2e:	retf   0xc1f6
  42ba31:	lea    ebx,[edx]
  42ba33:	sbb    eax,DWORD PTR [eax-0x2dcd26b2]
  42ba39:	jae    0x42ba96
  42ba3b:	or     DWORD PTR ds:0xe076fce9,ebx
  42ba41:	mov    bl,0x4d
  42ba43:	mov    ch,0xd
  42ba45:	bound  esp,QWORD PTR [esi-0x12ac04fd]
  42ba4b:	shl    cl,0x1
  42ba4e:	jae    0x42ba5f
  42ba50:	sbb    dh,BYTE PTR [ebp+0x749a0b5]
  42ba56:	rcr    esi,0xe9
  42ba59:	rcr    DWORD PTR [esi+0x77],cl
  42ba5c:	ret    
  42ba5d:	mov    ebp,0x324738ae
  42ba62:	sub    eax,0x2d37a228
  42ba67:	push   0x78c80442
  42ba6c:	mov    ebx,0xfdf4bea5
  42ba71:	jbe    0x42ba6e
  42ba73:	stos   DWORD PTR es:[edi],eax
  42ba74:	test   al,0xe
  42ba76:	lods   al,BYTE PTR ds:[esi]
  42ba77:	vpunpcklbw ymm3,ymm1,YMMWORD PTR [edi]
  42ba7b:	cdq    
  42ba7c:	pop    esi
  42ba7d:	mov    esp,0x929cac91
  42ba82:	das    
  42ba83:	stos   BYTE PTR es:[edi],al
  42ba84:	mov    al,0x7
  42ba86:	cmp    ebp,DWORD PTR [edx]
  42ba88:	mov    dh,0xea
  42ba8a:	mov    DWORD PTR [edx+ebp*1-0x38eeb6a6],esp
  42ba91:	jmp    0x42bad6
  42ba93:	cmp    al,0x27
  42ba95:	mov    ds:0xf566f9dd,al
  42ba9a:	pop    ebx
  42ba9b:	fist   WORD PTR [edi-0x4a7c8ba9]
  42baa1:	loop   0x42ba5d
  42baa3:	fwait
  42baa4:	jle    0x42ba91
  42baa6:	rol    DWORD PTR [esi-0x7ed2c82c],cl
  42baac:	jb     0x42ba43
  42baae:	stc    
  42baaf:	cmc    
  42bab0:	mov    bh,cl
  42bab2:	jecxz  0x42bacb
  42bab4:	add    esi,0x891bec81
  42baba:	jbe    0x42bb3b
  42babc:	push   ss
  42babd:	pushf  
  42babe:	jmp    0x42bb26
  42bac0:	test   al,0xb7
  42bac2:	mov    ds:0xe929ce97,eax
  42bac7:	jmp    0x42ba9a
  42bac9:	(bad)  
  42baca:	jecxz  0x42bafd
  42bacc:	sahf   
  42bacd:	or     BYTE PTR [ebp+0x68587d7e],bl
  42bad3:	fwait
  42bad4:	xor    dl,BYTE PTR [ecx-0x62fd6028]
  42bada:	loopne 0x42ba94
  42badc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42badd:	lahf   
  42bade:	lock stc 
  42bae0:	mov    ?,WORD PTR [ecx]
  42bae2:	jae    0x42bb25
  42bae4:	mov    cl,0x59
  42bae6:	adc    BYTE PTR [esi],ch
  42bae8:	cmp    esp,DWORD PTR [ebx+0x2f]
  42baeb:	les    eax,FWORD PTR [ecx]
  42baed:	push   cs
  42baee:	ret    0x5cda
  42baf1:	xor    al,0x17
  42baf3:	mov    dl,0xa3
  42baf5:	outs   dx,DWORD PTR ds:[esi]
  42baf6:	cmp    dh,dl
  42baf8:	mov    eax,0xc120bf04
  42bafd:	in     eax,dx
  42bafe:	push   edi
  42baff:	mov    ecx,0xd74e3c2e
  42bb04:	(bad)  
  42bb05:	clc    
  42bb06:	adc    cl,BYTE PTR [ebp+0x518f8aaf]
  42bb0c:	in     eax,dx
  42bb0d:	push   cs
  42bb0e:	pop    esp
  42bb0f:	scas   eax,DWORD PTR es:[edi]
  42bb10:	test   BYTE PTR [esi],0xa5
  42bb13:	pop    es
  42bb14:	sub    DWORD PTR [edi],0xa0ee7cd7
  42bb1a:	add    DWORD PTR [eax],eax
  42bb1c:	push   eax
  42bb1d:	pop    esi
  42bb1e:	shl    DWORD PTR [ebx+0xe],cl
  42bb21:	add    al,0x5b
  42bb23:	stc    
  42bb24:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42bb25:	outs   dx,DWORD PTR ds:[esi]
  42bb26:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42bb27:	loopne 0x42bb1b
  42bb29:	mov    cl,0x2f
  42bb2b:	push   ebp
  42bb2c:	ss xchg ebp,eax
  42bb2e:	hlt    
  42bb2f:	sbb    al,0x86
  42bb31:	sub    ch,BYTE PTR [ebx]
  42bb33:	rcl    BYTE PTR [edx-0x7f],0x71
  42bb37:	sbb    edi,DWORD PTR [esi]
  42bb39:	push   cs
  42bb3a:	mov    al,0xda
  42bb3c:	xor    BYTE PTR [ebx],ch
  42bb3e:	dec    BYTE PTR ss:[esi+0x3c55e1c7]
  42bb45:	lods   eax,DWORD PTR ds:[esi]
  42bb46:	cmp    al,0xfa
  42bb48:	repnz pop edi
  42bb4a:	out    0x32,eax
  42bb4c:	imul   eax,DWORD PTR [edx+0x7e1f5074],0x74
  42bb53:	ins    DWORD PTR es:[edi],dx
  42bb54:	test   BYTE PTR ds:0x4c860365,cl
  42bb5a:	jmp    0x42bb5c
  42bb5c:	outs   dx,BYTE PTR ds:[esi]
  42bb5d:	mov    al,0xe
  42bb5f:	sub    ebp,DWORD PTR [edi]
  42bb61:	xchg   esp,eax
  42bb62:	xor    dh,ch
  42bb64:	std    
  42bb65:	mov    esp,0x13a87c50
  42bb6a:	mov    esi,esp
  42bb6c:	jbe    0x42bbb0
  42bb6e:	mov    ebp,0x7ee82451
  42bb73:	xor    ebp,ecx
  42bb75:	js     0x42bb25
  42bb77:	test   al,0x6a
  42bb79:	imul   esi,DWORD PTR [esi+ecx*1+0xc],0xb985c14c
  42bb81:	mov    ah,0xd9
  42bb83:	repnz not DWORD PTR [eax+0x56828846]
  42bb8a:	dec    ecx
  42bb8b:	adc    DWORD PTR [esp+edi*2-0x12],0x30cc136e
  42bb93:	cld    
  42bb94:	test   eax,0x36ac5b39
  42bb99:	and    bl,cl
  42bb9b:	clc    
  42bb9c:	cmc    
  42bb9d:	or     BYTE PTR [eax+0x37],al
  42bba0:	xor    al,0x5e
  42bba2:	jp     0x42bb84
  42bba4:	and    DWORD PTR [ecx-0x18e7a3a0],esp
  42bbaa:	push   cs
  42bbab:	mov    ebp,0x53ca2a55
  42bbb0:	sahf   
  42bbb1:	js     0x42bb64
  42bbb3:	adc    esi,DWORD PTR [ebp+0xe82361]
  42bbb9:	lods   eax,DWORD PTR ds:[esi]
  42bbba:	cmp    bh,bl
  42bbbc:	fwait
  42bbbd:	mov    esp,0x4737fa34
  42bbc2:	xchg   DWORD PTR [eax+0x3bbdd60a],esp
  42bbc8:	mov    eax,0xf5bc67e2
  42bbcd:	aaa    
  42bbce:	test   eax,esi
  42bbd0:	add    DWORD PTR [ecx-0x5e],esp
  42bbd3:	cmp    al,0x29
  42bbd5:	out    dx,eax
  42bbd6:	fwait
  42bbd7:	call   0x20741dc2
  42bbdc:	lods   eax,DWORD PTR ds:[esi]
  42bbdd:	adc    DWORD PTR [eax+edi*4-0x2c],edi
  42bbe1:	pusha  
  42bbe2:	jmp    0x6446:0xaff26cd0
  42bbe9:	jbe    0x42bb88
  42bbeb:	add    ebx,DWORD PTR [ebp-0x78c13f9e]
  42bbf1:	jg     0x42bbe0
  42bbf3:	jo     0x42bc22
  42bbf5:	pop    edi
  42bbf6:	mov    al,0xdf
  42bbf8:	sbb    BYTE PTR [eax+edx*8+0x16],0x2
  42bbfd:	xchg   edi,eax
  42bbfe:	sub    ebp,DWORD PTR [edi-0x7a]
  42bc01:	bound  esp,QWORD PTR [esi]
  42bc03:	adc    ecx,eax
  42bc05:	and    dl,BYTE PTR ds:0x200a15e
  42bc0b:	fsub   DWORD PTR [esi]
  42bc0d:	popf   
  42bc0e:	adc    eax,0x4f31dc
  42bc13:	fcmovb st,st(1)
  42bc15:	mov    ah,0x50
  42bc17:	pushw  0x8ad8
  42bc1b:	xor    al,0xf7
  42bc1d:	int3   
  42bc1e:	and    DWORD PTR [esi],edx
  42bc20:	xchg   ecx,eax
  42bc21:	stc    
  42bc22:	sub    BYTE PTR [eax],al
  42bc24:	lea    edi,[edx+0x2b]
  42bc27:	out    0x6f,al
  42bc29:	pushf  
  42bc2a:	push   ss
  42bc2b:	repnz sti 
  42bc2d:	cdq    
  42bc2e:	ins    BYTE PTR es:[edi],dx
  42bc2f:	enter  0x90bc,0x3d
  42bc33:	repz aam 0xaa
  42bc36:	jbe    0x42bcaf
  42bc38:	clc    
  42bc39:	sub    al,0x78
  42bc3b:	push   esp
  42bc3c:	daa    
  42bc3d:	cli    
  42bc3e:	xor    eax,0xdda6abb2
  42bc43:	bound  esp,QWORD PTR [ebp+esi*2-0x6e]
  42bc47:	push   edi
  42bc48:	sbb    dl,cl
  42bc4a:	xchg   esp,eax
  42bc4b:	jnp    0x42bcb4
  42bc4d:	(bad)  
  42bc4e:	and    al,0xc9
  42bc50:	push   0xfffffffc
  42bc52:	rcr    BYTE PTR [ecx-0x25f33ef5],1
  42bc58:	pop    ebp
  42bc59:	push   es
  42bc5a:	adc    ebp,DWORD PTR [ecx-0x36b2f629]
  42bc60:	xchg   esi,eax
  42bc61:	mov    ecx,0x23df02fd
  42bc66:	enter  0xd1fc,0x57
  42bc6a:	cmc    
  42bc6b:	cs pop esp
  42bc6d:	into   
  42bc6e:	stos   DWORD PTR es:[edi],eax
  42bc6f:	mov    dh,0x5e
  42bc71:	jae    0x42bc6a
  42bc73:	mov    bl,0x34
  42bc75:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42bc76:	or     al,0x86
  42bc78:	jne    0x42bca5
  42bc7a:	arpl   WORD PTR [eax-0x31336a6d],di
  42bc80:	test   BYTE PTR [ebx],cl
  42bc82:	sbb    eax,0x26c6ae88
  42bc87:	paddusw mm1,mm7
  42bc8a:	test   eax,0x78ffa324
  42bc8f:	mov    eax,ds:0xa4024c68
  42bc94:	xchg   BYTE PTR [esi+0x4f],dl
  42bc97:	popa   
  42bc98:	icebp  
  42bc99:	icebp  
  42bc9a:	ret    
  42bc9b:	scas   al,BYTE PTR es:[edi]
  42bc9c:	out    0x54,al
  42bc9e:	sbb    al,BYTE PTR [edi+0x3f]
  42bca1:	and    DWORD PTR [esi+0x633f40f0],0xbaa4bff6
  42bcab:	add    edi,DWORD PTR [ecx]
  42bcad:	cs repnz xor eax,0xaefbebf2
  42bcb4:	sbb    cl,0xeb
  42bcb7:	stos   DWORD PTR es:[edi],eax
  42bcb8:	popa   
  42bcb9:	adc    eax,0x9b1b740e
  42bcbe:	mov    ebp,0x8e6ef419
  42bcc3:	enter  0xe15f,0x31
  42bcc7:	aas    
  42bcc8:	rcl    DWORD PTR [ebp-0x1b],1
  42bccb:	aam    0x77
  42bccd:	aaa    
  42bcce:	les    ebp,FWORD PTR [ebp-0x7e8dbf9d]
  42bcd4:	mov    al,ds:0x5c9ea87d
  42bcd9:	into   
  42bcda:	(bad)  
  42bcdb:	xor    al,0x5
  42bcdd:	daa    
  42bcde:	sub    al,0x57
  42bce0:	inc    edx
  42bce1:	pop    eax
  42bce2:	xchg   ecx,eax
  42bce3:	popf   
  42bce4:	sub    BYTE PTR [eax-0x2fcba9c1],0xc7
  42bceb:	push   edx
  42bcec:	mov    edi,?
  42bcee:	rcr    DWORD PTR [ecx],0xe0
  42bcf1:	push   es
  42bcf2:	in     al,dx
  42bcf3:	loope  0x42bd1a
  42bcf5:	jmp    0xce07ca15
  42bcfa:	inc    ebx
  42bcfb:	jge    0x42bd5a
  42bcfd:	jns    0x42bd5d
  42bcff:	sbb    ah,BYTE PTR [edx-0x2a]
  42bd02:	loope  0x42bcef
  42bd04:	push   es
  42bd05:	push   eax
  42bd06:	cmp    al,0x1c
  42bd08:	pop    esp
  42bd09:	neg    DWORD PTR [ecx]
  42bd0b:	push   ebx
  42bd0c:	test   eax,0xb4553681
  42bd11:	imul   DWORD PTR [edx-0x37]
  42bd14:	xchg   DWORD PTR [edx-0x69],esi
  42bd17:	push   esi
  42bd18:	jge    0x42bd85
  42bd1a:	fiadd  WORD PTR [edx-0x7b]
  42bd1d:	pushf  
  42bd1e:	mov    esp,0xf3aca7d5
  42bd23:	sub    eax,0x577da7bf
  42bd28:	ret    
  42bd29:	pop    ebx
  42bd2a:	mov    esi,0x9d0e6440
  42bd2f:	popw   ss
  42bd31:	ror    bl,cl
  42bd33:	mov    BYTE PTR [edi],al
  42bd35:	sti    
  42bd36:	clc    
  42bd37:	leave  
  42bd38:	add    bl,BYTE PTR [ebx+ecx*2+0x28958983]
  42bd3f:	int3   
  42bd40:	imul   eax,DWORD PTR [edx],0xffffff91
  42bd43:	lds    ebp,FWORD PTR [eax-0x31]
  42bd46:	push   0x5
  42bd48:	xchg   ebp,eax
  42bd49:	xchg   BYTE PTR ss:[eax],cl
  42bd4c:	out    0x62,al
  42bd4e:	pop    ebp
  42bd4f:	ja     0x42bd70
  42bd51:	pop    ecx
  42bd52:	xor    edi,DWORD PTR ds:0x1fd886e1
  42bd58:	mov    ecx,DWORD PTR [edx+0x10]
  42bd5b:	out    dx,al
  42bd5c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42bd5d:	in     al,0xc6
  42bd5f:	loop   0x42bce5
  42bd61:	ror    BYTE PTR [ebx+0x4c567276],0xbe
  42bd68:	jb     0x42bdc7
  42bd6a:	sub    BYTE PTR [ebx-0x12095107],al
  42bd70:	aad    0x40
  42bd72:	inc    ebx
  42bd73:	jmp    0xed41:0x170b63bf
  42bd7a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42bd7b:	ins    DWORD PTR es:[edi],dx
  42bd7c:	sub    eax,0xd68c058d
  42bd81:	cmp    DWORD PTR [ebp+0x24],ebp
  42bd84:	adc    al,0x4c
  42bd86:	sbb    eax,0xd8e85ada
  42bd8b:	add    al,0x5
  42bd8d:	inc    ecx
  42bd8e:	inc    edi
  42bd8f:	mov    ebp,0xe9b64414
  42bd94:	call   0x9788:0x28791108
  42bd9b:	xor    dl,BYTE PTR [eax-0x3]
  42bd9e:	mov    dh,0xfb
  42bda0:	std    
  42bda1:	je     0x42bdad
  42bda3:	aam    0x4b
  42bda5:	cwde   
  42bda6:	stc    
  42bda7:	and    DWORD PTR [ecx+0x74],0x75
  42bdab:	and    BYTE PTR [esi],0xb3
  42bdae:	sti    
  42bdaf:	aas    
  42bdb0:	int    0xf8
  42bdb2:	dec    esp
  42bdb3:	xlat   BYTE PTR ds:[ebx]
  42bdb4:	jbe    0x42bd9d
  42bdb6:	mov    ah,0x99
  42bdb8:	jns    0x42bd80
  42bdba:	ret    0xbef7
  42bdbd:	inc    ebp
  42bdbe:	imul   ebx,DWORD PTR [edx+0x34],0xffffffb1
  42bdc2:	(bad)  
  42bdc3:	push   edx
  42bdc4:	xor    DWORD PTR [ebx+edx*1],esi
  42bdc7:	push   cs
  42bdc8:	mov    edi,0xf9e803fb
  42bdcd:	outs   dx,BYTE PTR ds:[esi]
  42bdce:	loop   0x42bdb7
  42bdd0:	xchg   ebx,eax
  42bdd1:	mov    bh,0x43
  42bdd3:	and    dh,bh
  42bdd5:	fucom  st(5)
  42bdd7:	jns    0x42bd94
  42bdd9:	add    ah,0xc9
  42bddc:	push   ecx
  42bddd:	arpl   WORD PTR [eax+ecx*1+0x50],bx
  42bde1:	dec    eax
  42bde2:	xor    al,0x31
  42bde4:	mov    cl,cl
  42bde6:	pop    es
  42bde7:	mov    esp,0xa353924a
  42bdec:	mov    bl,dh
  42bdee:	cmc    
  42bdef:	pusha  
  42bdf0:	xor    DWORD PTR [edi],esi
  42bdf2:	or     BYTE PTR [ecx],0x56
  42bdf5:	push   esi
  42bdf6:	or     BYTE PTR [ebx+0x12],bl
  42bdf9:	xor    cl,0x56
  42bdfc:	jmp    0xea70:0x1c1e608b
  42be03:	xor    DWORD PTR [esi-0x73936170],ecx
  42be09:	cli    
  42be0a:	add    DWORD PTR [edx],esp
  42be0c:	cdq    
  42be0d:	daa    
  42be0e:	push   cs
  42be0f:	pop    edi
  42be10:	sub    dh,dl
  42be12:	(bad)  
  42be13:	cli    
  42be14:	jmp    0xbdf1:0xa50576a5
  42be1b:	cdq    
  42be1c:	inc    edi
  42be1d:	(bad)  
  42be1e:	jmp    0x9a688493
  42be23:	push   0xf1c8a2cc
  42be28:	push   esi
  42be29:	jbe    0x42be5a
  42be2b:	pop    ss
  42be2c:	scas   al,BYTE PTR es:[edi]
  42be2d:	inc    BYTE PTR [esi+edi*8]
  42be30:	push   edi
  42be31:	repnz cdq 
  42be33:	mov    ebp,0x5896960f
  42be38:	and    BYTE PTR [edx],bh
  42be3a:	push   esi
  42be3b:	push   edi
  42be3c:	and    DWORD PTR [eax-0x1a0e2302],0x3d11e368
  42be46:	pop    ss
  42be47:	xchg   esp,eax
  42be48:	dec    eax
  42be49:	js     0x42bdfd
  42be4b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42be4c:	dec    ebx
  42be4d:	int3   
  42be4e:	pop    si
  42be50:	imul   esp,edi,0xa
  42be53:	ja     0x42be69
  42be55:	ja     0x42beb7
  42be57:	pushf  
  42be58:	sub    edi,DWORD PTR [eax-0x40]
  42be5b:	pop    ebp
  42be5c:	popf   
  42be5d:	scas   al,BYTE PTR es:[edi]
  42be5e:	xor    al,0x65
  42be60:	xchg   ebp,eax
  42be61:	or     esp,esi
  42be63:	push   esp
  42be64:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42be65:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42be66:	sbb    DWORD PTR [eax+0x19],0xc92fc68b
  42be6d:	mov    edi,0xeeee9729
  42be72:	inc    edx
  42be73:	leave  
  42be74:	(bad)  
  42be75:	xor    edx,DWORD PTR [ebx+0x6bbf4708]
  42be7b:	call   DWORD PTR [edi+ecx*2-0x6cde468d]
  42be82:	sar    esp,cl
  42be84:	push   ecx
  42be85:	das    
  42be86:	cmp    al,0x8b
  42be88:	cmp    esi,DWORD PTR [ebx-0x220f2162]
  42be8e:	popf   
  42be8f:	mov    bh,0xa5
  42be91:	xchg   DWORD PTR [edi],edi
  42be93:	push   ebx
  42be94:	cmp    dl,dl
  42be96:	add    DWORD PTR [edx],esi
  42be98:	shl    BYTE PTR [esi],1
  42be9a:	mov    eax,DWORD PTR [edi]
  42be9c:	jae    0x42be51
  42be9e:	add    edx,DWORD PTR [edx]
  42bea0:	mov    ds:0x8868718d,al
  42bea5:	add    al,BYTE PTR [eax+0x4e28bb50]
  42beab:	dec    ecx
  42beac:	or     bh,BYTE PTR [ecx-0x12]
  42beaf:	lods   al,BYTE PTR ds:[esi]
  42beb0:	xchg   ebp,eax
  42beb1:	mov    ebp,DWORD PTR [esi-0x7f]
  42beb4:	in     eax,0x95
  42beb6:	out    dx,eax
  42beb7:	sahf   
  42beb8:	adc    BYTE PTR [edi],bh
  42beba:	sub    ah,ch
  42bebc:	lock mov ecx,0x7cbf47e2
  42bec2:	push   ebp
  42bec3:	or     eax,0xb6d78736
  42bec8:	loope  0x42be55
  42beca:	sbb    al,0xd4
  42becc:	ret    0xcc3a
  42becf:	xor    al,0x36
  42bed1:	sub    al,0xdc
  42bed3:	gs xor al,0x7d
  42bed6:	cwde   
  42bed7:	or     BYTE PTR [edx+0x750d2d7b],bh
  42bedd:	and    edi,DWORD PTR [ecx+edi*8-0x1d1f7e71]
  42bee4:	mov    ah,BYTE PTR [eax+0x18]
  42bee7:	jae    0x42bed5
  42bee9:	outs   dx,DWORD PTR ds:[esi]
  42beea:	shl    DWORD PTR [eax-0x30],0x45
  42beee:	and    edx,DWORD PTR [ecx-0x17a7c900]
  42bef4:	xor    al,0xf8
  42bef6:	add    DWORD PTR [ebx+ecx*1-0x39],ebp
  42befa:	mov    edi,0x3fa552c0
  42beff:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42bf00:	(bad)  
  42bf01:	sbb    DWORD PTR [ecx],ecx
  42bf03:	add    DWORD PTR [eax-0x7d55de05],edi
  42bf09:	sub    BYTE PTR [ebp+0x530f9d62],al
  42bf0f:	cmc    
  42bf10:	push   edx
  42bf11:	xchg   ecx,eax
  42bf12:	push   ds
  42bf13:	jo     0x42bf92
  42bf15:	adc    al,0x3c
  42bf17:	in     al,0xbf
  42bf19:	out    dx,eax
  42bf1a:	pop    ebx
  42bf1b:	mov    eax,ds:0xae9e8467
  42bf20:	lods   al,BYTE PTR ds:[esi]
  42bf21:	or     ebx,DWORD PTR [esi]
  42bf23:	inc    ebp
  42bf24:	popf   
  42bf25:	or     al,BYTE PTR [esi]
  42bf27:	and    al,BYTE PTR [ebp-0x3919d5de]
  42bf2d:	xchg   esp,esi
  42bf2f:	js     0x42bf25
  42bf31:	push   ebp
  42bf32:	mov    bh,BYTE PTR [esi+0x3]
  42bf35:	jecxz  0x42bf5f
  42bf37:	xchg   esi,eax
  42bf38:	call   0xa13a7f50
  42bf3d:	jg     0x42bf73
  42bf3f:	(bad)  [eax+edi*8+0xf74f5b7]
  42bf46:	push   0x38fc1f7b
  42bf4b:	dec    DWORD PTR [edx-0x64]
  42bf4e:	pusha  
  42bf4f:	cmp    bl,ah
  42bf51:	imul   eax,DWORD PTR ds:[edx-0x3793170e],0x56
  42bf59:	arpl   WORD PTR [ecx+0x6cd3963],bx
  42bf5f:	fs pop eax
  42bf61:	ds dec esi
  42bf63:	je     0x42bf6d
  42bf65:	comiss xmm7,DWORD PTR [edi-0x39f32da]
  42bf6c:	cmp    ebx,ebp
  42bf6e:	xchg   edx,eax
  42bf6f:	xor    eax,0xe08df924
  42bf74:	ss mov ch,0xfc
  42bf77:	mov    ds:0x51694921,al
  42bf7c:	xor    dh,bl
  42bf7e:	jo     0x42bfbb
  42bf80:	jl     0x42bf7b
  42bf82:	mov    bl,0xa4
  42bf84:	sbb    al,0x35
  42bf86:	dec    esp
  42bf87:	ins    DWORD PTR es:[edi],dx
  42bf88:	adc    eax,0x87d65c69
  42bf8d:	pop    ds
  42bf8e:	int    0xdf
  42bf90:	dec    ebp
  42bf91:	loop   0x42bf76
  42bf93:	gs mov cl,0xeb
  42bf96:	sub    esp,esp
  42bf98:	mov    BYTE PTR [ecx-0x6af92b14],al
  42bf9e:	cwde   
  42bf9f:	bound  edx,QWORD PTR [ebp-0x76050097]
  42bfa5:	cmp    DWORD PTR [ecx-0x107b2a64],0xffffffec
  42bfac:	jb     0x42bf73
  42bfae:	inc    esi
  42bfaf:	or     al,0x18
  42bfb1:	pop    edx
  42bfb2:	ror    WORD PTR [edx+0x1633babc],0x2
  42bfba:	sub    al,0x35
  42bfbc:	call   0x9ed5:0x36664d16
  42bfc3:	mov    eax,ds:0x670b8443
  42bfc8:	dec    edx
  42bfc9:	icebp  
  42bfca:	cdq    
  42bfcb:	pop    esp
  42bfcc:	push   esp
  42bfcd:	ins    BYTE PTR es:[edi],dx
  42bfce:	xor    bh,BYTE PTR [ecx]
  42bfd0:	mov    DWORD PTR [edx],ebx
  42bfd2:	inc    ebx
  42bfd3:	lds    eax,FWORD PTR [ebp+0x62]
  42bfd6:	cli    
  42bfd7:	addr16 (bad) 
  42bfd9:	(bad)  
  42bfda:	push   esp
  42bfdb:	adc    edi,DWORD PTR [edi+0x3d]
  42bfde:	dec    esp
  42bfdf:	test   eax,0x542cf88
  42bfe4:	test   DWORD PTR [edi],eax
  42bfe6:	les    esi,FWORD PTR [edi+0x20890739]
  42bfec:	mov    ah,0x68
  42bfee:	neg    BYTE PTR ds:0xe7a81989
  42bff4:	and    ah,al
  42bff6:	das    
  42bff7:	loope  0x42c023
  42bff9:	aad    0x60
  42bffb:	out    0x1a,al
  42bffd:	inc    ebp
  42bffe:	jmp    0x5f4f:0x6e9e7f5c
  42c005:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42c006:	fwait
  42c007:	mov    BYTE PTR [edx+esi*4],al
  42c00a:	xchg   edx,eax
  42c00b:	adc    edx,DWORD PTR [esi]
  42c00d:	in     eax,0x74
  42c00f:	push   ebx
  42c010:	sub    DWORD PTR [ebx-0x5f],0xfa0a0abf
  42c017:	shl    BYTE PTR [ecx+0x3571ace9],1
  42c01d:	mov    esp,0xb1e4125d
  42c022:	shr    ch,0x3d
  42c025:	pop    esp
  42c026:	dec    edi
  42c027:	jge    0x42c0a6
  42c029:	ss jae 0x42c012
  42c02c:	adc    bh,BYTE PTR [eax+0x52]
  42c02f:	push   0x1f
  42c031:	stc    
  42c032:	cmp    esi,DWORD PTR [ecx-0x2b]
  42c035:	cdq    
  42c036:	cmp    esi,DWORD PTR [esi]
  42c038:	in     eax,dx
  42c039:	dec    eax
  42c03a:	add    DWORD PTR ds:0xb52f05c1,ecx
  42c040:	sbb    BYTE PTR [ebp-0x76],dl
  42c043:	mov    ds:0x76fdcc19,eax
  42c048:	fbstp  TBYTE PTR [edi-0x2d]
  42c04b:	sub    eax,0x4cc0f8c7
  42c050:	mov    edi,0x5ab96b7a
  42c055:	int3   
  42c056:	and    al,0x26
  42c058:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42c059:	js     0x42c0b9
  42c05b:	int    0xf0
  42c05d:	inc    edx
  42c05e:	out    0xe4,eax
  42c060:	leave  
  42c061:	pop    ds
  42c062:	sti    
  42c063:	sub    dh,BYTE PTR [esi-0x42]
  42c066:	int3   
  42c067:	and    BYTE PTR [eax-0x250016f6],0xb
  42c06e:	xchg   edx,eax
  42c06f:	das    
  42c070:	popa   
  42c071:	les    eax,FWORD PTR cs:[ecx-0xd5b8f36]
  42c078:	dec    ecx
  42c079:	mov    esp,0xeb126f6d
  42c07e:	rcr    BYTE PTR [edx+0x62],1
  42c081:	sub    al,0x88
  42c083:	ffree  st(0)
  42c085:	fwait
  42c086:	push   ebp
  42c087:	mul    esp
  42c089:	sbb    al,0xe0
  42c08b:	or     eax,0x6a76d32d
  42c090:	xor    DWORD PTR [eax+ecx*1],0xffffffc9
  42c094:	call   0xe68e:0x6a35e6ae
  42c09b:	cmp    eax,0xe8a400e3
  42c0a0:	lock mov al,0x43
  42c0a3:	imul   edi,DWORD PTR [eax+0x17],0xffffffa3
  42c0a7:	mov    es,WORD PTR [esi+0x143fcb09]
  42c0ad:	jg     0x42c078
  42c0af:	mov    edi,DWORD PTR [ebp-0x529dacf3]
  42c0b5:	mov    ah,0xde
  42c0b7:	cmp    al,0x4
  42c0b9:	(bad)  
  42c0ba:	mov    dh,0x16
  42c0bc:	add    ebx,DWORD PTR [ebp+0x27]
  42c0bf:	outs   dx,BYTE PTR ds:[esi]
  42c0c0:	in     eax,dx
  42c0c1:	sub    al,0x88
  42c0c3:	leave  
  42c0c4:	fbld   TBYTE PTR [ebx-0x5f]
  42c0c7:	mov    DWORD PTR [edx-0x3b],eax
  42c0ca:	xchg   BYTE PTR [ecx-0x6e],dh
  42c0cd:	push   esi
  42c0ce:	iret   
  42c0cf:	(bad)  
  42c0d0:	adc    esi,ebp
  42c0d2:	inc    ecx
  42c0d3:	mov    ah,0x85
  42c0d5:	mov    esp,0x57ffcae0
  42c0da:	dec    eax
  42c0db:	into   
  42c0dc:	pop    ebx
  42c0dd:	dec    esp
  42c0de:	xchg   edi,eax
  42c0df:	ja     0x42c098
  42c0e1:	repnz dec eax
  42c0e3:	hlt    
  42c0e4:	xchg   ebx,eax
  42c0e5:	(bad)  
  42c0e6:	and    eax,0x6ae45f4f
  42c0eb:	popa   
  42c0ec:	leave  
  42c0ed:	adc    eax,0xd2d752b6
  42c0f2:	mov    dh,0x25
  42c0f4:	jp     0x42c111
  42c0f6:	jg     0x42c145
  42c0f8:	enter  0xcd3a,0x4c
  42c0fc:	push   es
  42c0fd:	fdiv   QWORD PTR [ecx-0x2]
  42c100:	push   ebx
  42c101:	mov    cl,0x35
  42c103:	cmp    BYTE PTR [edx],0x48
  42c106:	(bad)  
  42c107:	mov    bh,0x25
  42c109:	rol    BYTE PTR [edx-0x3d6bbd47],1
  42c10f:	push   DWORD PTR [ebx+0x63]
  42c112:	lods   al,BYTE PTR ds:[si]
  42c114:	sub    bl,BYTE PTR [edx+0x7bb457ba]
  42c11a:	call   0xb05c:0x7e5a180c
  42c121:	(bad)  [ebx-0x1cab6093]
  42c127:	cmc    
  42c128:	or     dl,BYTE PTR [eax]
  42c12a:	sub    al,0xe1
  42c12c:	push   es
  42c12d:	nop
  42c12e:	push   edi
  42c12f:	je     0x42c0e9
  42c131:	lods   al,BYTE PTR ds:[esi]
  42c132:	jo     0x42c0e8
  42c134:	test   DWORD PTR [edi+edi*2],edi
  42c137:	mov    al,ds:0xa3ca049d
  42c13c:	aaa    
  42c13d:	mov    ds:0x15a5917a,eax
  42c142:	jbe    0x42c172
  42c144:	lds    esi,FWORD PTR [ebp-0x52]
  42c147:	outs   dx,BYTE PTR ds:[esi]
  42c148:	ret    
  42c149:	or     al,0xbb
  42c14b:	mov    dh,0xb2
  42c14d:	mov    ds:0x68e1f868,eax
  42c152:	mov    ds:0x20afc8a3,al
  42c157:	mov    BYTE PTR [edx],0x25
  42c15a:	gs jb  0x42c172
  42c15d:	mov    esi,0x1b37874
  42c162:	sbb    ah,BYTE PTR ds:0x29b2ae2c
  42c168:	fs lock dec ebx
  42c16b:	cmc    
  42c16c:	push   ecx
  42c16d:	inc    edx
  42c16e:	into   
  42c16f:	adc    dh,BYTE PTR [esi-0x43]
  42c172:	jmp    0x2168e89c
  42c177:	ss out dx,al
  42c179:	lods   eax,DWORD PTR ds:[esi]
  42c17a:	push   ss
  42c17b:	jae    0x42c1a1
  42c17d:	cmc    
  42c17e:	shr    DWORD PTR [ebx],0xef
  42c181:	inc    esp
  42c182:	dec    esp
  42c183:	adc    ebp,DWORD PTR [esi]
  42c185:	ret    
  42c186:	mov    ch,0xe4
  42c188:	and    eax,0xf4c8b949
  42c18d:	je     0x42c168
  42c18f:	add    eax,ecx
  42c191:	dec    esp
  42c192:	pop    edi
  42c193:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42c194:	retf   
  42c195:	jo     0x42c124
  42c197:	in     al,dx
  42c198:	cmps   BYTE PTR fs:[esi],BYTE PTR es:[edi]
  42c19a:	test   esi,0xd1468bbe
  42c1a0:	xor    cl,ah
  42c1a2:	pusha  
  42c1a3:	stos   DWORD PTR es:[edi],eax
  42c1a4:	sub    dh,BYTE PTR [edx]
  42c1a6:	(bad)  
  42c1a7:	stc    
  42c1a8:	mov    edi,0x460f811c
  42c1ad:	call   0xc84ac154
  42c1b2:	mov    ecx,0x43c2ccc
  42c1b7:	not    DWORD PTR [esi-0x2c]
  42c1ba:	lea    ebp,[ebx-0x44]
  42c1bd:	fwait
  42c1be:	or     BYTE PTR [ebx-0x18],al
  42c1c1:	adc    al,0x9c
  42c1c3:	or     dh,BYTE PTR [ebp-0x76]
  42c1c6:	outs   dx,DWORD PTR ds:[esi]
  42c1c7:	repz out dx,al
  42c1c9:	add    eax,0x7b0bb43
  42c1ce:	mov    al,0x7f
  42c1d0:	add    esi,DWORD PTR [ecx-0x16]
  42c1d3:	jae    0x42c1ef
  42c1d5:	pop    esi
  42c1d6:	push   esi
  42c1d7:	scas   eax,DWORD PTR es:[edi]
  42c1d8:	pop    esi
  42c1d9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42c1da:	mov    al,ds:0xf74ce2d2
  42c1df:	xchg   ecx,eax
  42c1e0:	shr    BYTE PTR [edx],cl
  42c1e2:	ficom  WORD PTR [edx+0x148c5e75]
  42c1e8:	jb     0x42c16d
  42c1ea:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42c1eb:	push   cs
  42c1ec:	jmp    0x4c3b:0xbb3f5f4b
  42c1f3:	shl    DWORD PTR [edx-0x51],0xd4
  42c1f7:	pop    edx
  42c1f8:	jl     0x42c249
  42c1fa:	div    DWORD PTR [esi]
  42c1fc:	fstp   DWORD PTR [ecx]
  42c1fe:	inc    edi
  42c1ff:	jno    0x42c1ef
  42c201:	ret    
  42c202:	or     eax,0xa6452355
  42c207:	jo     0x42c1c2
  42c209:	rcl    esi,1
  42c20b:	push   es
  42c20c:	mov    ecx,0x3e01e5bb
  42c211:	push   0x76
  42c213:	cli    
  42c214:	push   0xcd85eb0c
  42c219:	dec    edx
  42c21a:	and    al,BYTE PTR [eax]
  42c21c:	push   edx
  42c21d:	jl     0x42c1ec
  42c21f:	add    ebx,esi
  42c221:	ss mov bl,0x32
  42c224:	popf   
  42c225:	imul   esp,esi,0xffffffbd
  42c228:	lds    eax,FWORD PTR [ebp-0x23fd85f5]
  42c22e:	mov    ds:0x4e2348a6,al
  42c233:	fxam   
  42c235:	push   0x3c
  42c237:	enter  0x8ac4,0x60
  42c23b:	inc    eax
  42c23c:	aaa    
  42c23d:	pop    esp
  42c23e:	sbb    eax,0xc9c44f81
  42c243:	dec    eax
  42c244:	inc    edx
  42c245:	loop   0x42c1f3
  42c247:	call   0xaeb0:0xee473d32
  42c24e:	shl    DWORD PTR [ebp-0x278b065d],cl
  42c254:	faddp  st(2),st
  42c256:	mov    ah,0x7c
  42c258:	mov    ch,0x7c
  42c25a:	and    eax,0x72332052
  42c25f:	pop    ecx
  42c260:	cmp    eax,DWORD PTR [ebp-0x259457ca]
  42c266:	dec    ecx
  42c267:	pop    esi
  42c268:	clc    
  42c269:	loope  0x42c20d
  42c26b:	sub    eax,0xb1395dfd
  42c270:	xchg   esi,eax
  42c271:	mov    ebp,0x9de1499e
  42c276:	stos   DWORD PTR es:[edi],eax
  42c277:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42c278:	xchg   esi,eax
  42c279:	cmp    eax,0x97d5129d
  42c27e:	push   esp
  42c27f:	dec    edx
  42c280:	js     0x42c29d
  42c282:	mov    esp,0xd02b5f4d
  42c287:	cs xchg ebp,eax
  42c289:	out    0x0,eax
  42c28b:	loop   0x42c2da
  42c28d:	xchg   esp,eax
  42c28e:	pop    esp
  42c28f:	adc    DWORD PTR [edi-0x53],ebx
  42c292:	psubusb mm7,mm1
  42c295:	pop    es
  42c296:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42c297:	pop    ebx
  42c298:	int3   
  42c299:	lea    edi,[edi+ebp*4]
  42c29c:	ret    0xf124
  42c29f:	push   cs
  42c2a0:	ret    0x30
  42c2a3:	aas    
  42c2a4:	mov    ds:0x31b430f6,al
  42c2a9:	cli    
  42c2aa:	lods   al,BYTE PTR ds:[esi]
  42c2ab:	cmp    al,ch
  42c2ad:	scas   al,BYTE PTR es:[edi]
  42c2ae:	sub    edi,DWORD PTR [ebp-0x28]
  42c2b1:	xor    DWORD PTR [ecx+0x31],ebx
  42c2b4:	push   eax
  42c2b5:	test   eax,0xf3da5fea
  42c2ba:	mov    ecx,0xa1afcbd0
  42c2bf:	sub    DWORD PTR [edx+0x31315699],0x59901a1c
  42c2c9:	retf   0xdab6
  42c2cc:	push   ebp
  42c2cd:	dec    esp
  42c2ce:	push   ebp
  42c2cf:	shr    bh,cl
  42c2d1:	les    ebx,FWORD PTR [eax+ecx*4-0x1bfadd32]
  42c2d8:	ret    0xa49a
  42c2db:	icebp  
  42c2dc:	sub    ch,BYTE PTR [eax]
  42c2de:	and    DWORD PTR [edx-0x69f8a87c],ecx
  42c2e4:	xor    BYTE PTR ds:0x99b85734,0x5a
  42c2eb:	aaa    
  42c2ec:	cs rol esi,0x4b
  42c2f0:	sub    eax,0xb894bd2e
  42c2f5:	dec    eax
  42c2f6:	loope  0x42c31e
  42c2f8:	div    bh
  42c2fa:	ret    0x6abf
  42c2fd:	mov    bh,0xa7
  42c2ff:	cmp    al,0x54
  42c301:	addr16 in al,0xd7
  42c304:	inc    edi
  42c305:	mov    ebp,0xf92e9e11
  42c30a:	enter  0x9b41,0x6f
  42c30e:	xchg   esi,eax
  42c30f:	pop    esp
  42c310:	cs popa 
  42c312:	retf   0x8360
  42c315:	and    eax,0xc21aa7e6
  42c31a:	popf   
  42c31b:	pop    eax
  42c31c:	popf   
  42c31d:	cwde   
  42c31e:	mov    bl,0x84
  42c320:	cmp    eax,0x5f197089
  42c325:	pop    ds
  42c326:	in     al,dx
  42c327:	xchg   edx,eax
  42c328:	in     al,dx
  42c329:	lods   eax,DWORD PTR ds:[esi]
  42c32a:	push   ds
  42c32b:	lods   al,BYTE PTR ds:[esi]
  42c32c:	mov    ch,0x5
  42c32e:	hlt    
  42c32f:	push   ecx
  42c330:	cmp    edi,eax
  42c332:	jp     0x42c3b3
  42c334:	enter  0x6570,0x5a
  42c338:	leave  
  42c339:	xor    al,0x89
  42c33b:	in     eax,dx
  42c33c:	add    edi,DWORD PTR [ebx]
  42c33e:	(bad)  
  42c33f:	jns    0x42c3a9
  42c341:	and    eax,esp
  42c343:	(bad)  
  42c344:	jp     0x42c3a9
  42c346:	icebp  
  42c347:	pusha  
  42c348:	out    dx,al
  42c349:	jb     0x42c2d3
  42c34b:	mov    ax,0x1606
  42c34f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42c350:	mov    dh,0x9c
  42c352:	pop    esp
  42c353:	jne    0x42c360
  42c355:	outs   dx,BYTE PTR ds:[esi]
  42c356:	pop    ss
  42c357:	or     DWORD PTR [ebp+0x1a],ebx
  42c35a:	ror    dh,0x84
  42c35d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42c35e:	mov    BYTE PTR [eax],ah
  42c360:	cwde   
  42c361:	loopne 0x42c323
  42c363:	mov    al,0xe3
  42c365:	push   eax
  42c366:	xchg   esi,eax
  42c367:	loop   0x42c357
  42c369:	aam    0x18
  42c36b:	rcl    DWORD PTR [edi-0x2e51bab],1
  42c371:	jno    0x42c378
  42c373:	push   esi
  42c374:	xor    BYTE PTR [ebx+0x114dbaa5],bl
  42c37a:	(bad)  
  42c37b:	fld    DWORD PTR [ebx-0x78c90b44]
  42c381:	hlt    
  42c382:	retf   0xa453
  42c385:	scas   al,BYTE PTR es:[edi]
  42c386:	data16 mov ch,0x20
  42c389:	bound  esp,QWORD PTR [eax]
  42c38b:	stc    
  42c38c:	adc    al,BYTE PTR [eax+0x55]
  42c38f:	sub    eax,0xd5961278
  42c394:	or     BYTE PTR [ecx],dh
  42c396:	out    dx,al
  42c397:	dec    esi
  42c398:	xlat   BYTE PTR ds:[ebx]
  42c399:	add    bh,al
  42c39b:	leave  
  42c39c:	pushf  
  42c39d:	scas   eax,DWORD PTR es:[edi]
  42c39e:	test   DWORD PTR [ebx],ecx
  42c3a0:	cmp    cl,ch
  42c3a2:	arpl   WORD PTR [edx+0x67],di
  42c3a5:	leave  
  42c3a6:	inc    esp
  42c3a7:	es in  eax,dx
  42c3a9:	xlat   BYTE PTR ds:[ebx]
  42c3aa:	xchg   esi,eax
  42c3ab:	jmp    0xc2d99903
  42c3b0:	push   edx
  42c3b1:	bound  ecx,QWORD PTR [edi+0xcdcb202]
  42c3b7:	xor    ah,BYTE PTR [ecx+0x5e]
  42c3ba:	push   edi
  42c3bb:	dec    ebp
  42c3bc:	inc    ebx
  42c3bd:	cmp    esp,esi
  42c3bf:	test   cl,dh
  42c3c1:	inc    ecx
  42c3c2:	in     eax,0x64
  42c3c4:	mov    WORD PTR [esi+eiz*8-0x9],cs
  42c3c8:	xor    DWORD PTR [ebp+0x1f245e61],esi
  42c3ce:	sub    al,0x9
  42c3d0:	dec    esp
  42c3d1:	mov    ch,BYTE PTR [esi+0x67]
  42c3d4:	mov    bl,0xe7
  42c3d6:	ins    DWORD PTR es:[edi],dx
  42c3d7:	retf   0xe4f4
  42c3da:	push   ds
  42c3db:	or     edx,DWORD PTR [ebx]
  42c3dd:	lds    ebp,FWORD PTR [ecx+0x75]
  42c3e0:	addr16 or eax,0xc2dd9f6b
  42c3e6:	jno    0x42c3aa
  42c3e8:	adc    dl,BYTE PTR [edx]
  42c3ea:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42c3eb:	inc    ebp
  42c3ec:	mov    esi,0x6c934747
  42c3f1:	sahf   
  42c3f2:	mov    eax,ds:0xbcdb3829
  42c3f7:	hlt    
  42c3f8:	pop    esp
  42c3f9:	push   ecx
  42c3fa:	mov    BYTE PTR [ebx],ch
  42c3fc:	push   ebx
  42c3fd:	fbld   TBYTE PTR [esi+ebp*2-0x53c7e361]
  42c404:	pushf  
  42c405:	mov    ch,0x24
  42c407:	jp     0x42c396
  42c409:	in     al,dx
  42c40a:	cdq    
  42c40b:	and    ah,BYTE PTR [eax+eiz*1]
  42c40e:	push   es
  42c40f:	xor    DWORD PTR [ebx-0x32],ebp
  42c412:	(bad)  
  42c413:	dec    ebx
  42c414:	out    dx,al
  42c415:	jno    0x42c3e7
  42c417:	imul   ecx,DWORD PTR [edi+0x70284f75],0xd
  42c41e:	mov    bl,0x96
  42c420:	cld    
  42c421:	lock lahf 
  42c423:	(bad)  
  42c424:	adc    al,0xb2
  42c426:	pop    esp
  42c427:	iret   
  42c428:	pushf  
  42c429:	adc    al,0xb2
  42c42b:	(bad)
  42c42e:	cs and al,ah
  42c431:	stos   BYTE PTR es:[edi],al
  42c432:	adc    al,0xc8
  42c434:	lea    ecx,[ecx+0x22]
  42c437:	push   ecx
  42c438:	fs inc ebx
  42c43a:	xchg   esi,eax
  42c43b:	in     eax,0x16
  42c43d:	fdiv   st(5),st
  42c43f:	jns    0x42c456
  42c441:	cmp    eax,0xa82346ac
  42c446:	test   cl,dl
  42c448:	int    0x60
  42c44a:	xlat   BYTE PTR ds:[ebx]
  42c44b:	mov    ds:0x567507c9,al
  42c450:	xchg   DWORD PTR [esi],edi
  42c452:	cmp    BYTE PTR [edi-0x61],ah
  42c455:	sbb    DWORD PTR [edi-0x75fb1c0c],eax
  42c45b:	dec    eax
  42c45c:	(bad)  
  42c45d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42c45e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42c45f:	test   eax,0x9b919f5
  42c464:	push   esp
  42c465:	jl     0x42c48f
  42c467:	cmc    
  42c468:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42c469:	push   0xffffffcf
  42c46b:	shl    BYTE PTR [ebx+ebp*8+0x57eed4fa],0x67
  42c473:	pop    esp
  42c474:	jae    0x42c437
  42c476:	scas   eax,DWORD PTR es:[edi]
  42c477:	sub    ebp,ebx
  42c479:	mov    edi,0x8d865b7d
  42c47e:	push   es
  42c47f:	jbe    0x42c45b
  42c481:	or     al,0xe7
  42c483:	shl    DWORD PTR [ebp-0x6f],0x25
  42c487:	rol    ecx,cl
  42c489:	(bad)  
  42c48a:	jmp    0x4534:0x67fa729
  42c491:	aam    0xc5
  42c493:	xchg   esp,eax
  42c494:	repnz cmp DWORD PTR [ebx+0x654445ab],ebp
  42c49b:	xchg   esp,eax
  42c49c:	test   al,0xdf
  42c49e:	mov    edx,0xe0b64cc7
  42c4a3:	pusha  
  42c4a4:	pop    ds
  42c4a5:	sbb    ebp,eax
  42c4a7:	fisttp DWORD PTR [edi-0x2ba0b49e]
  42c4ad:	jno    0x42c500
  42c4af:	sub    edx,DWORD PTR [eax+0x316055cd]
  42c4b5:	cmp    BYTE PTR [bx+di],cl
  42c4b8:	gs push ss
  42c4ba:	adc    esp,ebp
  42c4bc:	jle    0x42c47c
  42c4be:	jmp    0xa5fa090a
  42c4c3:	push   0x6e
  42c4c5:	fidivr WORD PTR [ebp+0x25db8e21]
  42c4cb:	nop
  42c4cc:	mov    esi,0x3039a863
  42c4d1:	fwait
  42c4d2:	mov    edx,0x883b6981
  42c4d7:	or     esi,esi
  42c4d9:	mov    al,0xa6
  42c4db:	fdivp  st(4),st
  42c4dd:	or     DWORD PTR [eax],esi
  42c4df:	mov    al,ds:0x11afe713
  42c4e4:	enter  0xff2c,0x26
  42c4e8:	lods   eax,DWORD PTR ds:[esi]
  42c4e9:	aaa    
  42c4ea:	adc    dl,cl
  42c4ec:	int    0x31
  42c4ee:	xor    al,0x49
  42c4f0:	in     eax,0x9a
  42c4f2:	loop   0x42c549
  42c4f4:	test   DWORD PTR [edi-0x288f83a9],edx
  42c4fa:	fwait
  42c4fb:	mov    eax,ds:0x27d511fd
  42c500:	inc    ecx
  42c501:	pop    ecx
  42c502:	int3   
  42c503:	mov    ah,0xd2
  42c505:	sahf   
  42c506:	lods   eax,DWORD PTR ds:[esi]
  42c507:	sub    eax,DWORD PTR [esi]
  42c509:	aas    
  42c50a:	inc    eax
  42c50b:	arpl   WORD PTR [eax+0x128341f8],dx
  42c511:	clc    
  42c512:	pop    esp
  42c513:	test   BYTE PTR [edi],dh
  42c515:	mov    DWORD PTR [esi+edi*1-0x40],ebp
  42c519:	cmp    esi,DWORD PTR ds:0x8ba764ef
  42c51f:	js     0x42c561
  42c521:	or     al,0x4e
  42c523:	sub    esp,ebx
  42c525:	nop
  42c526:	and    DWORD PTR [eax-0x9],ecx
  42c529:	cmp    DWORD PTR [ecx],ebx
  42c52b:	inc    ebp
  42c52c:	adc    eax,0x717ec6c6
  42c531:	scas   al,BYTE PTR es:[edi]
  42c532:	push   0x9b775451
  42c537:	sti    
  42c538:	sahf   
  42c539:	(bad)  
  42c53b:	push   cs
  42c53c:	dec    ebp
  42c53d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42c53e:	stos   BYTE PTR es:[edi],al
  42c53f:	push   es
  42c540:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42c541:	mov    ds:0x2ffa529f,eax
  42c546:	nop
  42c547:	aam    0xcf
  42c549:	pop    esp
  42c54a:	lods   al,BYTE PTR ds:[esi]
  42c54b:	mov    eax,0xf2231612
  42c550:	adc    eax,0x39752c7f
  42c555:	cmp    DWORD PTR [edx-0x68542be3],edi
  42c55b:	iret   
  42c55c:	(bad)  
  42c55e:	aaa    
  42c55f:	les    esp,FWORD PTR [edi+0x63]
  42c562:	push   cs
  42c563:	pop    ecx
  42c564:	jb     0x42c5a0
  42c566:	stos   BYTE PTR es:[edi],al
  42c567:	push   edi
  42c568:	test   al,0x92
  42c56a:	push   ss
  42c56b:	in     eax,dx
  42c56c:	cmc    
  42c56d:	loope  0x42c5d7
  42c56f:	outs   dx,DWORD PTR ds:[esi]
  42c570:	mov    ds:0x2f688468,eax
  42c575:	aad    0x2e
  42c577:	retf   0x3f96
  42c57a:	out    0x20,eax
  42c57c:	pop    ebx
  42c57d:	aas    
  42c57e:	mov    dh,0xf6
  42c580:	mov    ds:0xe2f0c104,al
  42c585:	xchg   edi,eax
  42c586:	cmp    BYTE PTR ds:0x7cc72cda,al
  42c58c:	iret   
  42c58d:	in     eax,dx
  42c58e:	jle    0x42c560
  42c590:	mov    al,ds:0x651d608a
  42c595:	jp     0x42c52f
  42c597:	jecxz  0x42c593
  42c599:	push   ss
  42c59a:	ror    bl,1
  42c59c:	mov    edx,0xbe2025b8
  42c5a1:	mov    bh,0xd9
  42c5a3:	pop    ds
  42c5a4:	cmp    DWORD PTR [ebp+0x6e1021ce],ebp
  42c5aa:	in     eax,0x89
  42c5ac:	out    dx,eax
  42c5ad:	push   ebp
  42c5ae:	fs push cs
  42c5b0:	fdiv   QWORD PTR [edx-0x20]
  42c5b3:	fdivrp st(3),st
  42c5b5:	cli    
  42c5b6:	sbb    dl,dl
  42c5b8:	cli    
  42c5b9:	repnz aad 0x84
  42c5bc:	sar    DWORD PTR [ecx],1
  42c5be:	pop    es
  42c5bf:	and    dl,dl
  42c5c1:	xor    BYTE PTR [esi+eax*4],0x7c
  42c5c5:	push   ds
  42c5c6:	sub    DWORD PTR [edx],ebp
  42c5c8:	mov    esi,DWORD PTR [edi-0x5f]
  42c5cb:	or     eax,0x986327c5
  42c5d0:	push   edi
  42c5d1:	jg     0x42c5a3
  42c5d3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42c5d4:	in     al,dx
  42c5d5:	add    edx,0xffffffda
  42c5d8:	clc    
  42c5d9:	xchg   BYTE PTR [ebx+0x51],bh
  42c5dc:	repnz xor al,0x14
  42c5df:	ins    DWORD PTR es:[edi],dx
  42c5e0:	adc    al,0xbb
  42c5e2:	rcl    BYTE PTR [edx+0x623b2eb0],1
  42c5e8:	jmp    0xe8887c76
  42c5ed:	cmc    
  42c5ee:	inc    edx
  42c5ef:	loop   0x42c5f2
  42c5f1:	adc    al,0x64
  42c5f3:	add    ah,BYTE PTR [esi+edx*2-0x8]
  42c5f7:	mov    cs,esp
  42c5f9:	inc    ebp
  42c5fa:	in     eax,0x24
  42c5fc:	in     al,dx
  42c5fd:	add    DWORD PTR ds:[eax],0x15
  42c601:	call   0x8144:0x96201beb
  42c608:	and    cl,BYTE PTR [ebx-0x57]
  42c60b:	mov    ebx,0x73111b7a
  42c610:	cmp    eax,0x90fb4774
  42c615:	push   ecx
  42c616:	pop    ds
  42c617:	hlt    
  42c618:	pop    edi
  42c619:	lds    ebx,FWORD PTR [edx]
  42c61b:	ret    0xd159
  42c61e:	inc    eax
  42c61f:	jb     0x42c655
  42c621:	lahf   
  42c622:	lock jecxz 0x42c67a
  42c625:	sbb    BYTE PTR [esi],dl
  42c627:	(bad)  
  42c629:	mov    esp,0x986bd784
  42c62e:	xor    ecx,esi
  42c630:	lods   al,BYTE PTR ds:[esi]
  42c631:	pop    ebp
  42c632:	enter  0x702b,0x5d
  42c636:	rcr    BYTE PTR [esi],1
  42c638:	mov    eax,ds:0x29cbca08
  42c63d:	iret   
  42c63e:	mov    eax,ds:0x2635c62a
  42c643:	inc    ecx
  42c644:	stos   BYTE PTR es:[edi],al
  42c645:	sti    
  42c646:	int3   
  42c647:	loopne 0x42c5df
  42c649:	in     eax,0xf8
  42c64b:	adc    al,0xb5
  42c64d:	xor    DWORD PTR [ebx+edi*4+0xf5427e6],ecx
  42c654:	cwde   
  42c655:	dec    esp
  42c656:	cdq    
  42c657:	sub    al,0xbe
  42c659:	inc    edi
  42c65a:	xchg   ebx,eax
  42c65b:	imul   ebx,DWORD PTR [edi+0x32f1a6d1],0x3b
  42c662:	inc    edi
  42c663:	mov    dl,0x8d
  42c665:	popf   
  42c666:	cmc    
  42c667:	pusha  
  42c668:	enter  0xe18d,0x7d
  42c66c:	aas    
  42c66d:	in     al,dx
  42c66e:	repz ret 
  42c670:	adc    ch,BYTE PTR [ebx]
  42c672:	jmp    0xe35a9697
  42c677:	rcr    cl,cl
  42c679:	xchg   ebx,eax
  42c67a:	mov    esi,0x981b8a04
  42c67f:	call   0x4389:0x1a78d1b4
  42c686:	loopne 0x42c6e1
  42c688:	jae    0x42c68e
  42c68a:	stc    
  42c68b:	adc    ebp,eax
  42c68d:	mov    dl,0x18
  42c68f:	xchg   ebp,eax
  42c690:	in     eax,0x6b
  42c692:	or     eax,0xa45c44e5
  42c697:	ret    
  42c698:	loopne 0x42c647
  42c69a:	pushf  
  42c69b:	xchg   BYTE PTR [esi],cl
  42c69d:	and    BYTE PTR [ebp+0x180ecc1],al
  42c6a3:	dec    eax
  42c6a4:	ja     0x42c688
  42c6a6:	and    eax,0x424173f3
  42c6ab:	stos   DWORD PTR es:[edi],eax
  42c6ac:	jno    0x42c708
  42c6ae:	inc    ebx
  42c6af:	out    0xd8,al
  42c6b1:	cmovge esp,DWORD PTR [ecx]
  42c6b4:	in     al,0xc3
  42c6b6:	retf   0xf496
  42c6b9:	not    DWORD PTR [edx]
  42c6bb:	pusha  
  42c6bc:	xchg   edi,eax
  42c6bd:	sub    esp,DWORD PTR [eax+0x1c]
  42c6c0:	dec    esp
  42c6c1:	and    DWORD PTR fs:[eax+0x2cbe3ac5],ecx
  42c6c8:	jo     0x42c655
  42c6ca:	cmp    al,0xf4
  42c6cc:	push   ebx
  42c6cd:	and    eax,0x91ea9ed1
  42c6d2:	imul   eax,DWORD PTR [eax],0xffffff9b
  42c6d5:	aam    0x24
  42c6d7:	popf   
  42c6d8:	stos   DWORD PTR es:[edi],eax
  42c6d9:	pop    ds
  42c6da:	inc    esi
  42c6db:	dec    ecx
  42c6dc:	repz (bad) 
  42c6de:	aad    0x65
  42c6e0:	pop    es
  42c6e1:	into   
  42c6e2:	xor    DWORD PTR [edx],ecx
  42c6e4:	mov    ah,BYTE PTR [eax]
  42c6e6:	xchg   BYTE PTR [ecx+0x2b4acdc2],al
  42c6ec:	icebp  
  42c6ed:	xor    edx,DWORD PTR [edx+0x7d]
  42c6f0:	mov    al,0x7
  42c6f2:	mov    edi,0x799de7f5
  42c6f7:	pop    ebx
  42c6f8:	sub    eax,0x2b31cf40
  42c6fd:	scas   eax,DWORD PTR es:[edi]
  42c6fe:	push   ebp
  42c6ff:	pop    DWORD PTR [eax-0x16585829]
  42c705:	inc    esi
  42c706:	into   
  42c707:	push   ebx
  42c708:	mov    esi,DWORD PTR [edx]
  42c70a:	test   al,0xc0
  42c70c:	dec    eax
  42c70d:	daa    
  42c70e:	int3   
  42c70f:	push   ebx
  42c710:	mov    edx,0xf3aff423
  42c715:	cs leave 
  42c717:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42c718:	jg     0x42c6fb
  42c71a:	pop    edi
  42c71b:	sub    DWORD PTR [ebp-0x60],ebx
  42c71e:	bound  ecx,QWORD PTR ds:0xf3a4dc7f
  42c724:	cmp    BYTE PTR ds:0xf3b31058,bl
  42c72a:	dec    ecx
  42c72b:	or     eax,0xaa861620
  42c730:	jge    0x42c761
  42c732:	or     BYTE PTR [esi-0x10],dh
  42c735:	and    al,0x73
  42c737:	jmp    0x42c74e
  42c739:	push   ebp
  42c73a:	enter  0x4e6f,0x86
  42c73e:	xor    ebp,esp
  42c740:	mov    ch,0x7d
  42c742:	inc    esi
  42c743:	jns    0x42c781
  42c745:	add    eax,DWORD PTR [ecx+0x63e9ebd3]
  42c74b:	cmp    BYTE PTR [ebx-0x7b],ah
  42c74e:	and    BYTE PTR [ebp+0x550ee1ad],cl
  42c754:	xchg   ecx,eax
  42c755:	lea    ebp,[edx]
  42c757:	sti    
  42c758:	outs   dx,BYTE PTR ds:[esi]
  42c759:	adc    bl,BYTE PTR [esi-0x5f2c1bc3]
  42c75f:	cld    
  42c760:	sbb    BYTE PTR [ecx],bh
  42c762:	out    0x38,al
  42c764:	pop    ebx
  42c765:	dec    esp
  42c766:	xchg   ebx,eax
  42c767:	jmp    0x8fac9129
  42c76c:	inc    esp
  42c76d:	cmp    DWORD PTR [ebx],edx
  42c76f:	lods   eax,DWORD PTR ds:[esi]
  42c770:	lea    esi,[ecx-0x6d6b2111]
  42c776:	imul   edx,DWORD PTR [ecx],0xba1b4ad9
  42c77c:	je     0x42c7af
  42c77e:	mov    WORD PTR es:0xd4440937,?
  42c785:	and    eax,0x54be4f2a
  42c78a:	popa   
  42c78b:	ja     0x42c76f
  42c78d:	les    ecx,FWORD PTR [ebx-0x7178c485]
  42c793:	iret   
  42c794:	test   eax,0x2987c786
  42c799:	sbb    esp,0x7c
  42c79c:	xchg   esp,eax
  42c79d:	shl    DWORD PTR [ebx+0x5f69abad],0x20
  42c7a4:	mov    ch,0x42
  42c7a6:	dec    eax
  42c7a7:	gs xchg esp,eax
  42c7a9:	dec    eax
  42c7aa:	mov    WORD PTR [ebp+0x6dfa0263],gs
  42c7b0:	and    BYTE PTR [ebx],bh
  42c7b2:	iret   
  42c7b3:	cli    
  42c7b4:	gs dec ecx
  42c7b6:	dec    edx
  42c7b7:	pop    esp
  42c7b8:	loopne 0x42c7a0
  42c7ba:	pop    edx
  42c7bb:	push   0xffffffb8
  42c7bd:	in     al,dx
  42c7be:	jnp    0x42c78a
  42c7c0:	inc    ecx
  42c7c1:	jbe    0x42c7aa
  42c7c3:	cmp    ecx,DWORD PTR [edx-0x7d77e3d]
  42c7c9:	sahf   
  42c7ca:	sbb    BYTE PTR [ecx+0x74e95195],cl
  42c7d0:	sub    eax,0x57c5e42e
  42c7d5:	dec    eax
  42c7d6:	cmp    edx,DWORD PTR [ecx-0x59cb111d]
  42c7dc:	mov    esi,0x41ff97e8
  42c7e1:	cmc    
  42c7e2:	jbe    0x42c84f
  42c7e4:	mov    WORD PTR [eax+0x38],ds
  42c7e7:	mov    bh,0x30
  42c7e9:	xchg   ebp,eax
  42c7ea:	inc    ecx
  42c7eb:	mov    ebp,0xecf37043
  42c7f0:	lods   al,BYTE PTR ds:[esi]
  42c7f1:	pop    ebp
  42c7f2:	xchg   dl,cl
  42c7f4:	in     al,dx
  42c7f5:	(bad)  
  42c7f6:	lea    ebp,[ebx+0x52]
  42c7f9:	inc    ebp
  42c7fa:	push   es
  42c7fb:	sbb    ch,BYTE PTR [ebp+0x3a]
  42c7fe:	fst    st(5)
  42c800:	adc    ch,BYTE PTR [ebx+0xd]
  42c803:	xor    BYTE PTR [eax+0x27],bl
  42c806:	pop    DWORD PTR [edi+0x3f]
  42c809:	cmp    al,0xb4
  42c80b:	and    esp,eax
  42c80d:	push   0x751b21c4
  42c812:	loopne 0x42c7e0
  42c814:	mov    esp,0x3c684d0e
  42c819:	lods   al,BYTE PTR ds:[esi]
  42c81a:	sar    BYTE PTR [ebx-0xa49e00],1
  42c820:	je     0x42c80b
  42c822:	stc    
  42c823:	add    ebx,edx
  42c825:	jb     0x42c859
  42c827:	arpl   WORD PTR [bx+si],bp
  42c82a:	and    esi,DWORD PTR [ebx]
  42c82c:	add    ah,dh
  42c82e:	mov    eax,ds:0x6dba22a1
  42c833:	test   BYTE PTR [esi+ebx*4-0x757c3339],0x2f
  42c83b:	and    bl,bh
  42c83d:	test   al,0x76
  42c83f:	add    al,0x5f
  42c841:	push   esi
  42c842:	loopne 0x42c868
  42c844:	dec    edi
  42c845:	jnp    0x42c8a2
  42c847:	inc    edx
  42c848:	scas   al,BYTE PTR es:[edi]
  42c849:	inc    edi
  42c84a:	jb     0x42c831
  42c84c:	adc    bh,BYTE PTR [eax+eiz*4+0x6bd5ac62]
  42c853:	push   0xae667364
  42c858:	mov    al,0xd
  42c85a:	sahf   
  42c85b:	imul   eax,DWORD PTR [ecx+ebp*1],0x5
  42c85f:	dec    edx
  42c860:	sbb    al,BYTE PTR [ecx]
  42c862:	sub    bh,BYTE PTR ds:0xeec4da10
  42c868:	mov    eax,ds:0x38025600
  42c86d:	les    ecx,FWORD PTR [eax-0x2905b98b]
  42c873:	pushf  
  42c874:	and    eax,0xb7b04c12
  42c879:	xchg   esi,eax
  42c87a:	xor    eax,DWORD PTR [edi+0x46]
  42c87d:	xchg   esp,eax
  42c87e:	les    ebp,FWORD PTR [esi+edx*2-0x12]
  42c882:	push   es
  42c883:	div    DWORD PTR [ecx]
  42c885:	sbb    ebp,esp
  42c887:	add    al,0xc3
  42c889:	mov    ebp,0xeb59d88e
  42c88e:	bound  ecx,QWORD PTR [eax+0x7573753f]
  42c894:	xor    al,0xc5
  42c896:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42c897:	scas   al,BYTE PTR es:[edi]
  42c898:	cs in  al,dx
  42c89a:	repz and eax,0x44e8cf1e
  42c8a0:	pop    edx
  42c8a1:	xor    BYTE PTR [esi-0x180136e8],dh
  42c8a7:	push   edi
  42c8a8:	mov    cl,0xe8
  42c8aa:	retf   
  42c8ab:	and    dl,BYTE PTR [ebp-0x15002770]
  42c8b1:	out    dx,eax
  42c8b2:	dec    eax
  42c8b3:	xlat   BYTE PTR ds:[ebx]
  42c8b4:	cmp    eax,esi
  42c8b6:	sub    al,0x11
  42c8b8:	jle    0x42c92f
  42c8ba:	push   esi
  42c8bb:	scas   al,BYTE PTR es:[edi]
  42c8bc:	fldenv [ecx]
  42c8be:	adc    DWORD PTR [edi+eiz*1+0xe],edi
  42c8c2:	xchg   edi,eax
  42c8c3:	adc    ebx,ecx
  42c8c5:	push   ebx
  42c8c6:	lea    ecx,[edx]
  42c8c8:	retf   0x2cd9
  42c8cb:	mov    cl,0xee
  42c8cd:	dec    esp
  42c8ce:	mov    bl,0xdd
  42c8d0:	out    dx,al
  42c8d1:	push   esp
  42c8d2:	mov    ecx,DWORD PTR [edx+0x2f]
  42c8d5:	inc    esp
  42c8d6:	dec    edi
  42c8d7:	pop    ecx
  42c8d8:	pop    eax
  42c8d9:	dec    eax
  42c8da:	jbe    0x42c903
  42c8dc:	ror    ebx,cl
  42c8de:	in     eax,dx
  42c8df:	nop
  42c8e0:	in     eax,0x5d
  42c8e2:	je     0x42c8b1
  42c8e4:	in     eax,dx
  42c8e5:	and    al,0xd8
  42c8e7:	sti    
  42c8e8:	test   eax,0xd8a7006a
  42c8ed:	or     eax,0x9d05a579
  42c8f2:	call   0xa05d:0x91fe18b8
  42c8f9:	push   ebx
  42c8fa:	mov    dl,0xf8
  42c8fc:	cmp    esi,DWORD PTR [eax-0x663049aa]
  42c902:	add    cl,BYTE PTR [eax]
  42c904:	aas    
  42c905:	pop    eax
  42c906:	cmp    ecx,edx
  42c908:	outs   dx,DWORD PTR ds:[esi]
  42c909:	pop    es
  42c90a:	cli    
  42c90b:	jns    0x42c8ab
  42c90d:	(bad)  
  42c90e:	fdivr  st,st(1)
  42c910:	add    al,0x15
  42c912:	mov    ds,ebx
  42c914:	xchg   edx,eax
  42c915:	or     eax,0x7ab6ea59
  42c91a:	and    eax,DWORD PTR [edx]
  42c91c:	jg     0x42c910
  42c91e:	jmp    0x9a55e29
  42c923:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42c924:	mov    ch,0x6d
  42c926:	mov    ah,0xd0
  42c928:	xchg   ebp,eax
  42c929:	xchg   esp,eax
  42c92a:	inc    edi
  42c92b:	sbb    bl,BYTE PTR [edx]
  42c92d:	push   ds
  42c92e:	lea    edx,[ecx]
  42c930:	in     eax,0xe5
  42c932:	xchg   esi,eax
  42c933:	ja     0x42c8df
  42c935:	add    DWORD PTR [esi],ecx
  42c937:	cmp    al,0xef
  42c939:	dec    ecx
  42c93a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42c93b:	mov    ch,0x92
  42c93d:	les    ebp,FWORD PTR [ebp-0x34]
  42c940:	cmp    eax,0x39e95977
  42c945:	inc    eax
  42c946:	add    cl,BYTE PTR [ebx]
  42c948:	mov    dh,0xac
  42c94a:	in     eax,0x5e
  42c94c:	aam    0xa7
  42c94e:	xchg   DWORD PTR [esi+0x11],ebp
  42c951:	arpl   WORD PTR [edi-0x2366a660],ax
  42c957:	ja     0x42c950
  42c959:	jmp    0xf060dde9
  42c95e:	imul   ecx,eax,0xfffffff6
  42c961:	push   ecx
  42c962:	mov    ?,WORD PTR [eax+esi*1]
  42c965:	fist   DWORD PTR [edx]
  42c967:	loop   0x42c937
  42c969:	out    dx,al
  42c96a:	ins    BYTE PTR es:[edi],dx
  42c96b:	icebp  
  42c96c:	add    eax,0xa8582c5c
  42c971:	nop    DWORD PTR [ecx-0x44]
  42c975:	out    dx,al
  42c976:	mov    dh,0xd2
  42c978:	pop    edx
  42c979:	out    dx,eax
  42c97a:	dec    esi
  42c97b:	inc    edi
  42c97c:	cli    
  42c97d:	fnstcw WORD PTR [ebp-0x773d0004]
  42c983:	cmp    eax,0xb9e21942
  42c988:	test   eax,0x4200f9b5
  42c98d:	mov    dl,0xea
  42c98f:	push   ebp
  42c990:	xor    ah,dh
  42c992:	popf   
  42c993:	jle    0x42c993
  42c995:	popa   
  42c996:	xchg   al,ch
  42c998:	cmp    bh,BYTE PTR [ebp+0x5]
  42c99b:	push   edi
  42c99c:	in     al,dx
  42c99d:	push   esi
  42c99e:	cwde   
  42c99f:	sbb    esp,DWORD PTR [eax]
  42c9a1:	sub    al,0xcf
  42c9a3:	ror    DWORD PTR [edx-0x72220f61],cl
  42c9a9:	ins    DWORD PTR es:[edi],dx
  42c9aa:	lea    ecx,[eax+0x40affb92]
  42c9b0:	jge    0x42c94a
  42c9b2:	mov    WORD PTR [ecx-0x778bd97f],gs
  42c9b8:	and    ebp,ecx
  42c9ba:	iret   
  42c9bb:	mov    ecx,0x4585e058
  42c9c0:	rcr    BYTE PTR [esi-0x29baf713],0x15
  42c9c7:	and    eax,0xf4c15fd8
  42c9cc:	fimul  WORD PTR [ebp+0x8]
  42c9cf:	cmp    DWORD PTR [eax],ecx
  42c9d1:	cld    
  42c9d2:	cmp    DWORD PTR [ebx-0x21],0xbd796c20
  42c9d9:	xor    al,0xc7
  42c9db:	jecxz  0x42ca1d
  42c9dd:	cmp    BYTE PTR [eax],cl
  42c9df:	jg     0x42c9fa
  42c9e1:	xchg   edi,eax
  42c9e2:	inc    esp
  42c9e3:	inc    edx
  42c9e4:	cwde   
  42c9e5:	outs   dx,DWORD PTR ds:[esi]
  42c9e6:	push   esp
  42c9e7:	cmp    DWORD PTR [ebx+0x7c],edi
  42c9ea:	inc    ecx
  42c9eb:	sub    BYTE PTR [edx-0x3331d464],bl
  42c9f1:	lods   eax,DWORD PTR ds:[esi]
  42c9f2:	mov    edx,DWORD PTR [eax-0x45]
  42c9f5:	inc    BYTE PTR [edx]
  42c9f7:	test   DWORD PTR [edi],esi
  42c9f9:	dec    ecx
  42c9fa:	sbb    BYTE PTR [esi+edi*1],bl
  42c9fd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42c9fe:	jmp    0x42c9aa
  42ca00:	mov    bl,BYTE PTR ds:0x76064a8c
  42ca06:	pop    ebp
  42ca07:	jnp    0x42c9ab
  42ca09:	sbb    edi,0x4d8b453
  42ca0f:	xchg   ebx,eax
  42ca10:	adc    eax,0xa012609c
  42ca15:	pop    edx
  42ca16:	add    edi,esi
  42ca18:	popf   
  42ca19:	xchg   ecx,eax
  42ca1a:	or     DWORD PTR [edx],0xa6ca9219
  42ca20:	xor    edi,DWORD PTR [ebp+0x18]
  42ca23:	jmp    0x42ca88
  42ca25:	cmp    ecx,DWORD PTR [ecx-0x7323d2ae]
  42ca2b:	jl     0x42caa9
  42ca2d:	enter  0x2c36,0x32
  42ca31:	mov    dl,0x22
  42ca33:	jl     0x42ca39
  42ca35:	adc    al,0xc6
  42ca37:	xor    al,0x30
  42ca39:	xchg   ebp,eax
  42ca3a:	ficom  DWORD PTR [esp+ecx*2]
  42ca3d:	in     al,dx
  42ca3e:	retf   
  42ca3f:	adc    DWORD PTR [ebp-0x6462011a],edi
  42ca45:	mov    edx,0x1bb6aac4
  42ca4a:	sub    dl,BYTE PTR [eax]
  42ca4c:	inc    ebp
  42ca4d:	ds fcmovb st,st(6)
  42ca50:	pop    esp
  42ca51:	adc    BYTE PTR [esi-0x5417498e],dh
  42ca57:	add    al,0x35
  42ca59:	push   edi
  42ca5a:	add    al,0xfd
  42ca5c:	cmp    dl,BYTE PTR [ecx+eax*8]
  42ca5f:	ret    0x9474
  42ca62:	push   esi
  42ca63:	into   
  42ca64:	fadd   DWORD PTR [ecx+0x35]
  42ca67:	sbb    BYTE PTR [esi],cl
  42ca69:	stc    
  42ca6a:	stos   BYTE PTR es:[edi],al
  42ca6b:	int    0xd1
  42ca6d:	fwait
  42ca6e:	loopne 0x42cabb
  42ca70:	cs mov ebp,0x424a0ea2
  42ca76:	jae    0x42cab0
  42ca78:	mov    BYTE PTR [ecx],ch
  42ca7a:	pop    edi
  42ca7b:	mov    esi,0x12cd8098
  42ca80:	push   edx
  42ca81:	(bad)  
  42ca82:	int    0xa0
  42ca84:	ret    0x2e4c
  42ca87:	or     bh,BYTE PTR [ebx]
  42ca89:	fwait
  42ca8a:	sbb    eax,0x2b5ff484
  42ca8f:	push   es
  42ca90:	nop
  42ca91:	xor    DWORD PTR [ecx+0x76e3d74b],ebp
  42ca97:	idiv   BYTE PTR [ebp+0x63]
  42ca9a:	or     cl,BYTE PTR [ecx+0x592d6aa7]
  42caa0:	add    BYTE PTR [ebx],ah
  42caa2:	shl    al,cl
  42caa4:	xrelease xchg DWORD PTR [edx+eax*2],eax
  42caa8:	pop    ebx
  42caa9:	mov    ebx,DWORD PTR [ebp+0x3086e860]
  42caaf:	outs   dx,DWORD PTR ds:[esi]
  42cab0:	cld    
  42cab1:	mov    WORD PTR [ebx+0x49],?
  42cab4:	xchg   ebx,ecx
  42cab6:	outs   dx,BYTE PTR ds:[esi]
  42cab7:	inc    esp
  42cab8:	(bad)  
  42cab9:	cld    
  42caba:	fdiv   QWORD PTR [ebx+0x32]
  42cabd:	shr    DWORD PTR [esi-0x62bd646b],0x2e
  42cac4:	mov    ebx,DWORD PTR [edx]
  42cac6:	xchg   edx,eax
  42cac7:	jmp    0x3608:0xc06cd058
  42cace:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42cacf:	xchg   edx,eax
  42cad0:	mov    ebp,0x20a94f63
  42cad5:	dec    ebx
  42cad6:	stc    
  42cad7:	loopne 0x42cae4
  42cad9:	lahf   
  42cada:	clc    
  42cadb:	or     BYTE PTR [ebx-0x1c],0x79
  42cadf:	push   edi
  42cae0:	sub    BYTE PTR [ebp+0x530fb3cc],al
  42cae6:	lahf   
  42cae7:	leave  
  42cae8:	sub    DWORD PTR [ecx+ecx*4-0x76],edx
  42caec:	dec    esp
  42caed:	ret    0x9714
  42caf0:	jecxz  0x42ca7f
  42caf2:	test   al,0xd6
  42caf4:	push   eax
  42caf5:	popf   
  42caf6:	xor    bh,cl
  42caf8:	sbb    dh,al
  42cafa:	in     al,dx
  42cafb:	int3   
  42cafc:	daa    
  42cafd:	sbb    BYTE PTR [ebx+0x2b],bl
  42cb00:	std    
  42cb01:	cmp    DWORD PTR [edi+0x36],ebx
  42cb04:	sbb    al,0x97
  42cb06:	dec    edx
  42cb07:	push   esi
  42cb08:	ficomp DWORD PTR [edx]
  42cb0a:	js     0x42cab0
  42cb0c:	pushf  
  42cb0d:	mov    cl,0xc
  42cb0f:	sbb    eax,0x708e9fd7
  42cb14:	mov    dl,BYTE PTR [edx+0x61]
  42cb17:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42cb18:	pop    esi
  42cb19:	and    dl,BYTE PTR [edi+0x3ce200df]
  42cb1f:	xchg   esi,eax
  42cb20:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42cb21:	int    0x89
  42cb23:	mov    ecx,0x412e4ac1
  42cb28:	inc    edx
  42cb29:	lea    edi,[eax+0x10412d38]
  42cb2f:	mov    dh,0x6f
  42cb31:	fst    QWORD PTR [ecx]
  42cb33:	ins    DWORD PTR es:[edi],dx
  42cb34:	ret    
  42cb35:	retf   0x4a7
  42cb38:	xchg   ebp,eax
  42cb39:	imul   ebp,DWORD PTR [ebx],0xb98bda63
  42cb3f:	hlt    
  42cb40:	and    BYTE PTR [eax+edi*1-0x13c6bce0],dl
  42cb47:	jmp    0x9dee:0xbe5284bb
  42cb4e:	jne    0x42cb02
  42cb50:	push   edx
  42cb51:	push   ds
  42cb52:	mov    ebp,0x2f5a0fd3
  42cb57:	loopne 0x42cb36
  42cb59:	mov    edi,0x814b5958
  42cb5e:	pop    eax
  42cb5f:	mov    ds:0xbabceae0,al
  42cb64:	pop    esi
  42cb65:	stc    
  42cb66:	pop    eax
  42cb67:	(bad)  
  42cb68:	popf   
  42cb69:	in     al,dx
  42cb6a:	repz dec ebx
  42cb6c:	imul   dh
  42cb6e:	mov    dl,0x75
  42cb70:	in     al,dx
  42cb71:	jecxz  0x42cbce
  42cb73:	mov    ss,WORD PTR [ecx-0x1f]
  42cb76:	les    edi,FWORD PTR cs:[edi]
  42cb79:	jle    0x42cbc4
  42cb7b:	fsub   QWORD PTR [ebp+0x29102a23]
  42cb81:	sti    
  42cb82:	rcr    BYTE PTR ss:[esi+edi*4+0x445968b],1
  42cb8a:	test   DWORD PTR [ecx+0x67],ebx
  42cb8d:	pop    ss
  42cb8e:	mov    ebp,0x62a89c1f
  42cb93:	test   DWORD PTR [edx+edi*4+0x2de069ad],ebx
  42cb9a:	addr16 inc esp
  42cb9c:	pop    ds
  42cb9d:	ins    BYTE PTR es:[edi],dx
  42cb9e:	popa   
  42cb9f:	xchg   edi,eax
  42cba0:	push   ebx
  42cba1:	add    BYTE PTR [ecx+0x34],ch
  42cba4:	outs   dx,DWORD PTR ds:[esi]
  42cba5:	les    ebx,FWORD PTR [ecx+eax*1-0x399c0165]
  42cbac:	pop    esi
  42cbad:	ret    
  42cbae:	fwait
  42cbaf:	mov    esp,DWORD PTR [ebp-0x4552b93e]
  42cbb5:	add    DWORD PTR [edi+0x79],eax
  42cbb8:	stos   DWORD PTR es:[edi],eax
  42cbb9:	jno    0x42cb7a
  42cbbb:	cs jg  0x42cc2d
  42cbbe:	lods   al,BYTE PTR ds:[esi]
  42cbbf:	mov    DWORD PTR [ecx-0x6bf2767b],0x294c56cb
  42cbc9:	ficom  WORD PTR [ecx+ecx*8+0x57ed2972]
  42cbd0:	adc    al,0x8a
  42cbd2:	jmp    0x41a1:0xde0dc15
  42cbd9:	cld    
  42cbda:	sub    DWORD PTR [edi-0x495aa003],ecx
  42cbe0:	rcr    BYTE PTR [ebp-0x29],1
  42cbe3:	fwait
  42cbe4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42cbe5:	popa   
  42cbe6:	(bad)  
  42cbe7:	and    eax,DWORD PTR [eax-0x70]
  42cbea:	cmp    al,0x11
  42cbec:	and    BYTE PTR [ebp+0x7277d8a9],dh
  42cbf2:	cld    
  42cbf3:	mov    al,BYTE PTR [ecx-0x2b3e8b1]
  42cbf9:	mov    ecx,0xafef170d
  42cbfe:	sar    DWORD PTR ds:[ebx+0x4359bfc6],0x1f
  42cc06:	sbb    BYTE PTR [eax-0x4d],al
  42cc09:	cli    
  42cc0a:	(bad)  
  42cc0b:	mov    edi,0x927a4a8d
  42cc10:	clc    
  42cc11:	(bad)  
  42cc12:	ror    DWORD PTR [esi+0x7000dfee],cl
  42cc18:	inc    edi
  42cc19:	jnp    0x42cbf3
  42cc1b:	ficom  WORD PTR [edi+0x67d6ac94]
  42cc21:	int3   
  42cc22:	or     BYTE PTR [esi-0x2af275ad],bl
  42cc28:	fisttp WORD PTR [ebx-0xe1c92ce]
  42cc2e:	cdq    
  42cc2f:	je     0x42cc7d
  42cc31:	call   0xd008:0x34b241c4
  42cc38:	jmp    0x42cbcd
  42cc3a:	inc    ebx
  42cc3b:	repnz sbb BYTE PTR [edx-0x4e],bh
  42cc3f:	pop    ebx
  42cc40:	cmp    eax,0xac19f181
  42cc45:	inc    esi
  42cc46:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42cc47:	mov    ds:0xf16b56eb,al
  42cc4c:	mov    bl,bh
  42cc4e:	in     eax,0xef
  42cc50:	mov    WORD PTR [edi+0x61367751],ss
  42cc56:	dec    ecx
  42cc57:	mov    cl,0x40
  42cc59:	sub    DWORD PTR [ecx+0x6d],eax
  42cc5c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42cc5d:	adc    al,0xe8
  42cc5f:	loopne 0x42cbfd
  42cc61:	in     eax,0x94
  42cc63:	std    
  42cc64:	and    al,0x4b
  42cc66:	jmp    0x9072:0x51889ba4
  42cc6d:	add    BYTE PTR [ebx],dh
  42cc6f:	iret   
  42cc70:	pop    ss
  42cc71:	retf   0x2e9d
  42cc74:	and    esp,DWORD PTR [edx+0xd]
  42cc77:	push   0x1773b178
  42cc7c:	pop    eax
  42cc7d:	jbe    0x42cc36
  42cc7f:	push   ss
  42cc80:	xchg   ebp,eax
  42cc81:	mov    bh,0x92
  42cc83:	fsub   DWORD PTR [ebp+0x62de7262]
  42cc89:	jb     0x42ccf8
  42cc8b:	jb     0x42ccbf
  42cc8d:	dec    eax
  42cc8e:	inc    ebx
  42cc8f:	mov    DWORD PTR [edx],ebp
  42cc91:	sar    DWORD PTR [edi-0x54],1
  42cc94:	inc    ecx
  42cc95:	xor    DWORD PTR [esi-0x1c8bffba],esp
  42cc9b:	mov    al,ds:0x84df4f3b
  42cca0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42cca1:	sub    edx,esp
  42cca3:	in     eax,0x37
  42cca5:	inc    esi
  42cca6:	jbe    0x42ccda
  42cca8:	cli    
  42cca9:	pop    edx
  42ccaa:	fs ret 0xc680
  42ccae:	inc    eax
  42ccaf:	jae    0x42ccdd
  42ccb1:	mov    ah,0x4c
  42ccb3:	(bad)  
  42ccb4:	jae    0x42cd14
  42ccb6:	pop    ds
  42ccb7:	sub    eax,0x22e78372
  42ccbc:	lods   eax,DWORD PTR ds:[esi]
  42ccbd:	hlt    
  42ccbe:	imul   ebp,esp,0xed93d054
  42ccc4:	lds    edx,FWORD PTR [ecx+0x3]
  42ccc7:	enter  0x30f3,0xc7
  42cccb:	jl     0x42cd25
  42cccd:	dec    esp
  42ccce:	add    ecx,DWORD PTR [ebp-0x57]
  42ccd1:	adc    ebp,eax
  42ccd3:	test   al,0xe8
  42ccd5:	xchg   esp,eax
  42ccd6:	xor    eax,0xb808123f
  42ccdb:	cmp    ebp,DWORD PTR [edi+0xf]
  42ccde:	mov    cl,0x65
  42cce0:	fwait
  42cce1:	dec    ebx
  42cce2:	xlat   BYTE PTR ds:[ebx]
  42cce3:	dec    ecx
  42cce4:	push   edi
  42cce5:	call   0x2421:0x43d7223a
  42ccec:	jb     0x42cc88
  42ccee:	cmc    
  42ccef:	arpl   dx,sp
  42ccf1:	pop    esi
  42ccf2:	adc    ax,0x908c
  42ccf6:	and    ecx,DWORD PTR [edx+0x10]
  42ccf9:	inc    ebx
  42ccfa:	push   es
  42ccfb:	stos   BYTE PTR es:[edi],al
  42ccfc:	int3   
  42ccfd:	std    
  42ccfe:	mov    bh,0x0
  42cd00:	inc    edx
  42cd01:	cmp    DWORD PTR [ebp-0xc],edi
  42cd04:	mov    BYTE PTR [ecx],0x17
  42cd07:	add    esi,DWORD PTR [ebp+0x304d0e6f]
  42cd0d:	add    BYTE PTR [edi-0x2a],al
  42cd10:	or     ebp,edi
  42cd12:	aam    0xa2
  42cd14:	inc    ebp
  42cd15:	xor    DWORD PTR [ebx-0x76106281],esp
  42cd1b:	add    al,0xea
  42cd1d:	ins    DWORD PTR es:[edi],dx
  42cd1e:	and    eax,0x4216f601
  42cd23:	and    al,0xc4
  42cd25:	inc    eax
  42cd26:	inc    esi
  42cd27:	fsubr  DWORD PTR [esi]
  42cd29:	xor    BYTE PTR ds:0xfe83c0b3,cl
  42cd2f:	pop    edx
  42cd30:	jo     0x42cd8d
  42cd32:	jns    0x42cd1a
  42cd34:	sbb    edx,DWORD PTR [edi]
  42cd36:	scas   al,BYTE PTR es:[edi]
  42cd37:	psrlw  mm1,mm5
  42cd3a:	or     ebx,DWORD PTR [ebx+0x22]
  42cd3d:	sbb    BYTE PTR [ecx+eiz*1],al
  42cd40:	fisubr DWORD PTR [ecx-0x174a0ab9]
  42cd46:	(bad)  
  42cd48:	sbb    al,0x4b
  42cd4a:	push   edi
  42cd4b:	test   DWORD PTR ds:0x2ad86503,eax
  42cd51:	mov    ecx,DWORD PTR [eax+0x30]
  42cd54:	lahf   
  42cd55:	xor    DWORD PTR [eax],eax
  42cd57:	mov    esp,0x96298f76
  42cd5c:	cmp    edi,DWORD PTR [eax-0x20315ce6]
  42cd62:	or     edx,DWORD PTR [ecx+0x3e4f0258]
  42cd68:	jge    0x42cd1c
  42cd6a:	gs cld 
  42cd6c:	jb     0x42cd40
  42cd6e:	sbb    ebx,DWORD PTR [ecx-0x36]
  42cd71:	loop   0x42cdd8
  42cd73:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42cd74:	in     eax,0xef
  42cd76:	pop    esi
  42cd77:	in     al,dx
  42cd78:	sub    al,0xab
  42cd7a:	std    
  42cd7b:	adc    cl,BYTE PTR [ebx-0x43712209]
  42cd81:	retf   
  42cd82:	push   0x9d0641ae
  42cd87:	mov    edx,DWORD PTR [edx+0x6d]
  42cd8a:	stos   DWORD PTR es:[edi],eax
  42cd8b:	cmp    dh,BYTE PTR ds:[edx-0x1dc2fd6b]
  42cd92:	fmul   st(1),st
  42cd94:	pop    edi
  42cd95:	call   0xe177:0xd877c94e
  42cd9c:	xor    ch,bl
  42cd9e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42cd9f:	mov    ah,0xf4
  42cda1:	adc    eax,0x34e1bcd6
  42cda6:	mov    fs,WORD PTR [esi-0x42156c2d]
  42cdac:	mov    bl,0x7f
  42cdae:	sti    
  42cdaf:	pop    ebx
  42cdb0:	repnz ins BYTE PTR es:[edi],dx
  42cdb2:	sahf   
  42cdb3:	fs inc eax
  42cdb5:	lahf   
  42cdb6:	pop    edx
  42cdb7:	sub    al,BYTE PTR [eax-0x7049c821]
  42cdbd:	retf   0x6800
  42cdc0:	mov    bl,0xd3
  42cdc2:	sbb    DWORD PTR [edi-0x7be204d4],esi
  42cdc8:	ja     0x42cd87
  42cdca:	sti    
  42cdcb:	cld    
  42cdcc:	jl     0x42cdd9
  42cdce:	fdivrp st(1),st
  42cdd0:	neg    DWORD PTR [esi]
  42cdd2:	ret    
  42cdd3:	pop    ss
  42cdd4:	leave  
  42cdd5:	xor    BYTE PTR [edx],bl
  42cdd7:	ret    
  42cdd8:	dec    ecx
  42cdd9:	enter  0xdd7d,0x91
  42cddd:	xlat   BYTE PTR ds:[ebx]
  42cdde:	pop    esp
  42cddf:	aas    
  42cde0:	xchg   ebx,eax
  42cde1:	jecxz  0x42cd73
  42cde3:	xor    ebp,DWORD PTR [ebx]
  42cde5:	scas   eax,DWORD PTR es:[edi]
  42cde6:	jbe    0x42cd6c
  42cde8:	xchg   DWORD PTR [edi+0x5719a6a9],eax
  42cdee:	fwait
  42cdef:	and    bl,BYTE PTR [ecx]
  42cdf1:	and    esp,DWORD PTR [eax+esi*2]
  42cdf4:	push   esi
  42cdf5:	add    dl,BYTE PTR [eax]
  42cdf7:	jmp    0x42cdc5
  42cdf9:	inc    BYTE PTR [esi-0x7a]
  42cdfc:	jbe    0x42ce2d
  42cdfe:	jno    0x42ce69
  42ce00:	lea    edx,[esi+0x70]
  42ce03:	push   0xffffff96
  42ce05:	mov    ebx,0x4cb906f6
  42ce0a:	pop    esi
  42ce0b:	xchg   ch,dh
  42ce0d:	pop    ds
  42ce0e:	cmp    cl,BYTE PTR [edx]
  42ce10:	(bad)  
  42ce11:	jno    0x42ce3c
  42ce13:	mov    eax,0xb816ca51
  42ce18:	out    0x3b,al
  42ce1a:	inc    ebx
  42ce1b:	add    esp,esi
  42ce1d:	pop    eax
  42ce1e:	imul   esp,ebx,0xe3dc8b83
  42ce24:	fst    DWORD PTR [esi+0x58f268ba]
  42ce2a:	sub    eax,0x790ba683
  42ce2f:	adc    DWORD PTR [edx-0x54013391],ecx
  42ce35:	inc    edx
  42ce36:	and    eax,0x98575bac
  42ce3b:	sahf   
  42ce3c:	or     bl,dl
  42ce3e:	mov    dl,BYTE PTR [ebx-0x3fa47414]
  42ce44:	sub    DWORD PTR [ebx],edx
  42ce46:	inc    edi
  42ce47:	pop    ecx
  42ce48:	enter  0xfaa8,0xfb
  42ce4c:	popa   
  42ce4d:	push   edx
  42ce4e:	lods   al,BYTE PTR ds:[esi]
  42ce4f:	inc    BYTE PTR [eax-0x585cc377]
  42ce55:	adc    eax,0x6b31b0e5
  42ce5a:	int3   
  42ce5b:	and    BYTE PTR [edx],bh
  42ce5d:	retf   0x4fe8
  42ce60:	mov    al,ds:0x1fc8a488
  42ce65:	pop    esp
  42ce66:	jg     0x42ce92
  42ce68:	mov    bl,0x78
  42ce6a:	jns    0x42ce38
  42ce6c:	mov    dl,0xe2
  42ce6e:	push   es
  42ce6f:	dec    ebp
  42ce70:	repnz hlt 
  42ce72:	adc    BYTE PTR [ebx],ch
  42ce74:	inc    ecx
  42ce75:	jne    0x42ce42
  42ce77:	or     BYTE PTR [edx+0x2adff430],bl
  42ce7d:	sbb    esp,DWORD PTR [edx-0x53129686]
  42ce83:	lods   al,BYTE PTR ds:[esi]
  42ce84:	retf   
  42ce85:	jmp    0x42ce6d
  42ce87:	jno    0x42ce14
  42ce89:	sbb    BYTE PTR [esi+0x6458e662],ah
  42ce8f:	shl    DWORD PTR [esi+0x4c3e211a],1
  42ce95:	addr16 popa 
  42ce97:	idiv   DWORD PTR [edx+0x30]
  42ce9a:	jle    0x42cf00
  42ce9c:	adc    cl,dl
  42ce9e:	fadd   st(1),st
  42cea0:	sbb    DWORD PTR [esi-0x5a],edx
  42cea3:	dec    ebx
  42cea4:	rcr    esi,1
  42cea6:	pushf  
  42cea7:	pop    eax
  42cea8:	cld    
  42cea9:	test   eax,esi
  42ceab:	jns    0x42cf2a
  42cead:	xor    al,0xbb
  42ceaf:	dec    eax
  42ceb0:	push   es
  42ceb1:	mov    esp,0xd3ae752
  42ceb6:	adc    eax,0x3731fce7
  42cebb:	shl    BYTE PTR [edx],0x13
  42cebe:	add    esi,DWORD PTR [ebp+0x2920d899]
  42cec4:	adc    al,0x9d
  42cec6:	and    BYTE PTR [edi+0x5d],cl
  42cec9:	mov    ebx,0x9ffbab59
  42cece:	xor    DWORD PTR [esi+0x12],ebp
  42ced1:	push   edi
  42ced2:	into   
  42ced3:	daa    
  42ced4:	mov    dh,0x44
  42ced6:	xchg   DWORD PTR [ebp+0x48558565],ebp
  42cedc:	je     0x42cf2d
  42cede:	add    BYTE PTR [edx+0x2],bl
  42cee1:	mov    esp,0xd8aa11de
  42cee6:	sub    ebp,DWORD PTR [esi+0xf]
  42cee9:	mov    WORD PTR gs:0xfddceff,ss
  42cef0:	rcl    dl,0xb6
  42cef3:	ret    
  42cef4:	add    DWORD PTR [ecx+0x4a],edx
  42cef7:	test   BYTE PTR ds:0x2fc8e476,bh
  42cefd:	jae    0x42cf63
  42ceff:	mov    edi,0xbb7ddb10
  42cf04:	loop   0x42cf75
  42cf06:	nop
  42cf07:	dec    esp
  42cf08:	mov    cl,0xc1
  42cf0a:	test   al,0x6e
  42cf0c:	test   eax,0x33e994f6
  42cf11:	jp     0x42ceff
  42cf13:	push   ebp
  42cf14:	in     al,0x8b
  42cf16:	or     eax,DWORD PTR [esi]
  42cf18:	jns    0x42cebe
  42cf1a:	sti    
  42cf1b:	mov    esi,0x72e12165
  42cf20:	and    eax,DWORD PTR [esi+eiz*4-0x6]
  42cf24:	xor    dl,0x46
  42cf27:	mov    ch,0x60
  42cf29:	call   0x1ee:0x159c26b3
  42cf30:	es mov dl,0x7d
  42cf33:	mov    cl,0x4c
  42cf35:	iret   
  42cf36:	xchg   ecx,eax
  42cf37:	scas   eax,DWORD PTR es:[edi]
  42cf38:	cmp    eax,0x69ca7794
  42cf3d:	loope  0x42cf74
  42cf3f:	pop    ss
  42cf40:	xchg   ecx,eax
  42cf41:	inc    eax
  42cf42:	pop    edi
  42cf43:	ret    
  42cf44:	fist   WORD PTR [ebx+0x657a73a4]
  42cf4a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42cf4b:	xor    eax,0x90a1d818
  42cf50:	sub    DWORD PTR gs:[ecx-0x70f44568],0x947bbc47
  42cf5b:	iret   
  42cf5c:	mov    bh,0x87
  42cf5e:	sti    
  42cf5f:	xchg   ebx,eax
  42cf60:	pop    ecx
  42cf61:	fcompp 
  42cf63:	mov    ebp,0xb77abf57
  42cf68:	(bad)  [edx-0x35b460bb]
  42cf6e:	push   ebp
  42cf6f:	ror    BYTE PTR [ebp+0x54],1
  42cf72:	or     al,0xc0
  42cf74:	dec    esp
  42cf75:	pop    ds
  42cf76:	jg     0x42cf8d
  42cf78:	xor    BYTE PTR [esi+0x2e],cl
  42cf7b:	aad    0x62
  42cf7d:	sbb    ebx,esi
  42cf7f:	lods   eax,DWORD PTR ds:[esi]
  42cf80:	xor    DWORD PTR [esi],esp
  42cf82:	cmp    eax,0x7a793a19
  42cf87:	and    ch,BYTE PTR [ebx+0x29]
  42cf8a:	int3   
  42cf8b:	div    DWORD PTR [ebp-0x24]
  42cf8e:	sbb    DWORD PTR [edx+0x4b32623f],edi
  42cf94:	jmp    0xc298:0x76e144f2
  42cf9b:	stos   DWORD PTR es:[edi],eax
  42cf9c:	imul   ecx,DWORD PTR [eax-0x6d0ace1c],0xf66b1ae1
  42cfa6:	cld    
  42cfa7:	shr    BYTE PTR [ebx+0x667c1d21],cl
  42cfad:	jne    0x42cf6c
  42cfaf:	push   es
  42cfb0:	inc    ebp
  42cfb1:	js     0x42cfa2
  42cfb3:	and    al,BYTE PTR [eax+0x11]
  42cfb6:	add    edx,ecx
  42cfb8:	mov    esi,0xb28670d6
  42cfbd:	je     0x42cfb7
  42cfbf:	mov    bl,0x44
  42cfc1:	rol    BYTE PTR [eax-0x396b3205],1
  42cfc7:	neg    cl
  42cfc9:	mov    ch,cl
  42cfcb:	mov    edx,0x95b0c68
  42cfd0:	rol    DWORD PTR [eax],0xab
  42cfd3:	xchg   edx,eax
  42cfd4:	into   
  42cfd5:	inc    ebp
  42cfd6:	(bad)  
  42cfd7:	cli    
  42cfd8:	mov    fs,edi
  42cfda:	add    edi,DWORD PTR [eax-0x2b56574]
  42cfe0:	lock ret 0xeb9
  42cfe4:	(bad)  [eax+0x7cada281]
  42cfea:	xchg   edx,eax
  42cfeb:	jnp    0x42d017
  42cfed:	dec    edi
  42cfee:	ja     0x42cff7
  42cff0:	push   esp
  42cff1:	mov    edx,0xdcccb89f
  42cff6:	pop    ss
  42cff7:	js     0x42d022
  42cff9:	xchg   esi,eax
  42cffa:	stc    
  42cffb:	shl    BYTE PTR [esi-0x8ef38e3],1
  42d001:	adc    DWORD PTR [ecx-0x15f3003e],ecx
  42d007:	mov    eax,ds:0x7e82a3a3
  42d00c:	pop    ds
  42d00d:	(bad)  
  42d00e:	mov    dh,0xdd
  42d010:	(bad)  
  42d011:	data16 sar BYTE PTR [eax-0x17a7f421],cl
  42d018:	mov    al,ds:0x878a4484
  42d01d:	shl    edi,cl
  42d01f:	xchg   esp,eax
  42d020:	gs lahf 
  42d022:	xchg   esi,eax
  42d023:	mov    ebp,0x125d65aa
  42d028:	xor    al,0x7e
  42d02a:	shl    dh,1
  42d02c:	lahf   
  42d02d:	pop    ds
  42d02e:	mov    ds:0xd6f3d8a9,al
  42d033:	or     DWORD PTR [ecx+0x2ed0d3e3],0xd46ec120
  42d03d:	mov    esp,0xcfb674c3
  42d042:	jecxz  0x42cfc4
  42d044:	xchg   esi,eax
  42d045:	dec    ecx
  42d046:	mov    dl,0x52
  42d048:	outs   dx,BYTE PTR ds:[esi]
  42d049:	xor    bl,BYTE PTR [ebp+0x45]
  42d04c:	add    eax,edx
  42d04e:	mov    ebp,0x20723d06
  42d053:	sub    cl,BYTE PTR [eax+0x7ca72d20]
  42d059:	cli    
  42d05a:	sub    al,BYTE PTR [ebx-0x42]
  42d05d:	test   bh,ah
  42d05f:	dec    esp
  42d060:	mov    edi,0x2bdbd096
  42d065:	mov    esi,0x97399c9c
  42d06a:	lods   eax,DWORD PTR ds:[esi]
  42d06b:	jmp    0x880a625a
  42d070:	out    0xe8,al
  42d072:	je     0x42d0be
  42d074:	ror    bh,1
  42d076:	push   cs
  42d077:	or     DWORD PTR [edx-0x3e],ebp
  42d07a:	xor    bl,dh
  42d07c:	push   ebp
  42d07d:	adc    BYTE PTR [edx],dl
  42d07f:	push   es
  42d080:	shl    BYTE PTR [ebx-0x39],0xbe
  42d084:	xor    eax,0x7c58ddaf
  42d089:	push   cs
  42d08a:	xchg   esp,eax
  42d08b:	pop    ss
  42d08c:	aam    0xc2
  42d08e:	(bad)  
  42d08f:	nop
  42d090:	jns    0x42d097
  42d092:	push   edx
  42d093:	imul   edi,DWORD PTR [ebp-0x73],0x72
  42d097:	mov    bh,0x51
  42d099:	hlt    
  42d09a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42d09b:	jno    0x42d0d6
  42d09d:	cli    
  42d09e:	xchg   ebp,eax
  42d09f:	inc    esp
  42d0a0:	icebp  
  42d0a1:	push   ecx
  42d0a2:	sbb    edx,DWORD PTR ds:[eax]
  42d0a5:	cld    
  42d0a6:	xchg   ecx,eax
  42d0a7:	loop   0x42d02f
  42d0a9:	lods   eax,DWORD PTR ds:[esi]
  42d0aa:	adc    eax,0xf91b335a
  42d0af:	loope  0x42d0a8
  42d0b1:	fwait
  42d0b2:	out    0xfa,eax
  42d0b4:	push   ebp
  42d0b5:	dec    edx
  42d0b6:	in     al,dx
  42d0b7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42d0b8:	xor    BYTE PTR [ecx+ebx*2],0xc7
  42d0bc:	add    al,0x41
  42d0be:	retf   0xc003
  42d0c1:	mov    esp,DWORD PTR cs:[eax+0x52]
  42d0c5:	sbb    eax,0x81ad0c7
  42d0ca:	sbb    BYTE PTR [ecx],0x4d
  42d0cd:	arpl   WORD PTR [edx+0xa72a9ee],si
  42d0d3:	or     al,0x9a
  42d0d5:	inc    ebp
  42d0d6:	jae    0x42d0fc
  42d0d8:	pop    ss
  42d0d9:	imul   esp,DWORD PTR [eax+0x7d],0x5d
  42d0dd:	xor    eax,0x9c0782a2
  42d0e2:	jo     0x42d15e
  42d0e4:	jecxz  0x42d108
  42d0e6:	jle    0x42d092
  42d0e8:	lods   al,BYTE PTR ds:[esi]
  42d0e9:	mov    WORD PTR [edx-0x16],es
  42d0ec:	cmp    esp,DWORD PTR [eax-0x3e006fb6]
  42d0f2:	sub    BYTE PTR [ecx],cl
  42d0f4:	sbb    ch,BYTE PTR [ebx+0x7]
  42d0f7:	out    0x4,al
  42d0f9:	es add al,0xd5
  42d0fc:	ins    BYTE PTR es:[edi],dx
  42d0fd:	ins    BYTE PTR es:[edi],dx
  42d0fe:	fyl2x  
  42d100:	jns    0x42d0b3
  42d102:	xchg   ecx,eax
  42d103:	aad    0xed
  42d105:	test   eax,0x684307d5
  42d10a:	jle    0x42d180
  42d10c:	jle    0x42d10a
  42d10e:	jbe    0x42d12d
  42d110:	push   edi
  42d111:	test   BYTE PTR [edi],cl
  42d113:	push   ecx
  42d114:	aas    
  42d115:	pushf  
  42d116:	dec    eax
  42d117:	mov    ebx,ebp
  42d119:	(bad)  
  42d11b:	dec    edi
  42d11c:	xchg   ebp,eax
  42d11d:	loope  0x42d18a
  42d11f:	xchg   ebp,eax
  42d120:	ror    BYTE PTR [esi],1
  42d122:	or     al,BYTE PTR [eax-0x1874b249]
  42d128:	sbb    BYTE PTR [ebp+0x18],bl
  42d12b:	xchg   edx,eax
  42d12c:	mov    BYTE PTR [ebp-0x172c9530],al
  42d132:	in     eax,dx
  42d133:	sub    al,0xdc
  42d135:	scas   eax,DWORD PTR es:[edi]
  42d136:	popf   
  42d137:	xchg   esp,eax
  42d138:	jp     0x42d174
  42d13a:	xchg   BYTE PTR ds:0x6cdb2ca0,al
  42d140:	aad    0x57
  42d142:	adc    DWORD PTR [ebx+0x30],ebp
  42d145:	cwde   
  42d146:	test   BYTE PTR [edi],ch
  42d148:	jecxz  0x42d107
  42d14a:	jp     0x42d11c
  42d14c:	sbb    ebx,DWORD PTR [edx-0x74eb9c03]
  42d152:	dec    esp
  42d153:	retf   0xaa15
  42d156:	adc    DWORD PTR [ecx+0x30],0xdbae0881
  42d15d:	mov    edx,DWORD PTR [ebx+0x4d]
  42d160:	inc    eax
  42d161:	sub    BYTE PTR [edx],ah
  42d163:	sahf   
  42d164:	test   DWORD PTR [edx],ecx
  42d166:	out    0xa2,al
  42d168:	shr    DWORD PTR [edx],1
  42d16a:	mov    edi,0x4f929577
  42d16f:	loope  0x42d18c
  42d171:	call   0x6dc:0xd2b69eee
  42d178:	dec    ecx
  42d179:	shl    DWORD PTR [eax],0x2e
  42d17c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42d17d:	mov    dl,0x6f
  42d17f:	loop   0x42d1e2
  42d181:	inc    BYTE PTR [edx]
  42d183:	(bad)  
  42d184:	mov    dl,0x93
  42d186:	dec    ebx
  42d187:	xchg   ecx,eax
  42d188:	cmp    edi,DWORD PTR [ebx-0x26f395dd]
  42d18e:	(bad)
  42d191:	and    BYTE PTR [edi+eiz*1],0x0
  42d195:	cmp    BYTE PTR [ebx+0x15],dh
  42d198:	mov    al,0x2e
  42d19a:	hlt    
  42d19b:	sub    edi,DWORD PTR [ebp-0x62]
  42d19e:	fiadd  WORD PTR [ebx+0x522742fa]
  42d1a4:	or     ah,BYTE PTR [ebx]
  42d1a6:	(bad)  
  42d1a7:	jno    0x42d225
  42d1a9:	and    eax,0x65e7e8a2
  42d1ae:	bound  ebx,QWORD PTR [ebp+0x71ae9de1]
  42d1b4:	mov    ds:0xbe4beee9,al
  42d1b9:	push   ebx
  42d1ba:	jmp    0x49e799b0
  42d1bf:	xor    ebp,DWORD PTR [esi]
  42d1c1:	inc    edi
  42d1c3:	and    esp,DWORD PTR [ebx]
  42d1c5:	inc    edx
  42d1c6:	les    esp,FWORD PTR [ebx+0x75]
  42d1c9:	loopne 0x42d16d
  42d1cb:	int3   
  42d1cc:	or     al,0xa0
  42d1ce:	jbe    0x42d1de
  42d1d0:	xor    DWORD PTR [eax+0x77ee3564],esi
  42d1d6:	pop    ecx
  42d1d7:	push   0x46e09171
  42d1dc:	push   0xffffffeb
  42d1de:	(bad)  
  42d1df:	ror    bl,cl
  42d1e1:	sete   BYTE PTR [edx]
  42d1e4:	inc    edi
  42d1e5:	pop    eax
  42d1e6:	test   BYTE PTR [edi-0x4b],0x94
  42d1ea:	push   esi
  42d1eb:	(bad)  
  42d1ed:	mov    al,ds:0xbfa8587a
  42d1f2:	jne    0x42d1db
  42d1f4:	cmc    
  42d1f5:	stc    
  42d1f6:	ins    BYTE PTR es:[edi],dx
  42d1f7:	mov    eax,0x7208e78d
  42d1fc:	into   
  42d1fd:	repz jnp 0x42d25a
  42d200:	out    dx,eax
  42d201:	out    dx,al
  42d202:	jecxz  0x42d263
  42d204:	dec    ecx
  42d205:	mov    ebp,0x9884af91
  42d20a:	cmp    edx,DWORD PTR [ebx+0x51ec4129]
  42d210:	aas    
  42d211:	inc    esp
  42d212:	jne    0x42d1c0
  42d214:	jmp    0x42d1d4
  42d216:	dec    esi
  42d217:	out    dx,al
  42d218:	clc    
  42d219:	fwait
  42d21a:	add    DWORD PTR [edi+ecx*8],0x4beb33f5
  42d221:	pop    eax
  42d222:	inc    ecx
  42d223:	aad    0xd6
  42d225:	jns    0x42d203
  42d227:	je     0x42d2a2
  42d229:	in     eax,0xf4
  42d22b:	and    BYTE PTR [ebx+ecx*8+0x5fc00a63],ah
  42d232:	pop    ds
  42d233:	test   dl,bh
  42d235:	icebp  
  42d236:	test   BYTE PTR [edi],dl
  42d238:	mov    ebx,0x2eb35365
  42d23d:	out    dx,eax
  42d23e:	jb     0x42d28f
  42d240:	out    0xfa,al
  42d242:	sbb    ah,0xcf
  42d245:	push   es
  42d246:	cld    
  42d247:	addr16 jmp 0x62474794
  42d24d:	push   cs
  42d24e:	out    dx,eax
  42d24f:	and    eax,0x669de52c
  42d254:	popa   
  42d255:	xor    al,0x2b
  42d257:	jns    0x42d1eb
  42d259:	lahf   
  42d25a:	je     0x42d257
  42d25c:	sub    al,0x7c
  42d25e:	mov    al,0xb9
  42d260:	sub    BYTE PTR [ebp-0x68c2053b],cl
  42d266:	es in  al,0xa2
  42d269:	cmc    
  42d26a:	repz iret 
  42d26c:	lea    ebp,[ecx+edx*8]
  42d26f:	inc    eax
  42d270:	sub    BYTE PTR [ebp*2+0x2cafdb2],bh
  42d277:	mov    esi,0x96a8cc23
  42d27c:	mov    ebp,0xa99fe35
  42d281:	cmc    
  42d282:	push   cs
  42d283:	cli    
  42d284:	mov    esi,0xd750ef80
  42d289:	push   0x87bd08e8
  42d28e:	mov    dl,0x6e
  42d290:	stos   DWORD PTR es:[edi],eax
  42d291:	rol    BYTE PTR [eax-0x2de426ca],1
  42d297:	cmp    al,bl
  42d299:	rol    DWORD PTR [ebp+eiz*2+0x531b8d82],cl
  42d2a0:	pop    edi
  42d2a1:	test   al,0xb9
  42d2a3:	adc    DWORD PTR [ebx],eax
  42d2a5:	repnz sahf 
  42d2a7:	mov    BYTE PTR [esi+0x29],bh
  42d2aa:	dec    edi
  42d2ab:	push   eax
  42d2ac:	push   ss
  42d2ad:	dec    edx
  42d2ae:	jg     0x42d2f4
  42d2b0:	ins    DWORD PTR es:[edi],dx
  42d2b1:	xor    al,0x16
  42d2b3:	stc    
  42d2b4:	pop    edx
  42d2b5:	mov    edi,0xff5305ac
  42d2ba:	retf   
  42d2bb:	push   ebx
  42d2bc:	ins    BYTE PTR es:[edi],dx
  42d2bd:	stc    
  42d2be:	test   eax,0x616e923e
  42d2c3:	imul   BYTE PTR [ebx+ebx*4]
  42d2c6:	pop    ebx
  42d2c7:	jo     0x42d2c7
  42d2c9:	and    al,BYTE PTR [edi]
  42d2cb:	xor    BYTE PTR [esi+0x423cc4e5],dl
  42d2d1:	test   eax,0xa173d7c5
  42d2d6:	out    dx,eax
  42d2d7:	lods   eax,DWORD PTR ds:[esi]
  42d2d8:	das    
  42d2d9:	push   edi
  42d2da:	mov    ds:0x877bd1d1,eax
  42d2df:	fs push 0x12
  42d2e2:	lods   al,BYTE PTR ds:[esi]
  42d2e3:	ror    WORD PTR [esi+esi*4+0x382649b5],0x85
  42d2ec:	in     eax,dx
  42d2ed:	(bad)  
  42d2ee:	and    dh,BYTE PTR [eax+ecx*2-0x9c8112f]
  42d2f5:	push   ebx
  42d2f6:	jnp    0x42d2ec
  42d2f8:	adc    al,0x9
  42d2fa:	xchg   esi,eax
  42d2fb:	mov    al,0x2a
  42d2fd:	and    al,0x6b
  42d2ff:	adc    ch,BYTE PTR [edi-0x9]
  42d302:	repz inc ebp
  42d304:	pop    esp
  42d305:	call   0xde0a7501
  42d30a:	adc    ebp,eax
  42d30c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42d30d:	xchg   esp,eax
  42d30e:	sbb    BYTE PTR [ecx+0x1169f347],ah
  42d314:	dec    edi
  42d315:	push   ds
  42d316:	sbb    edi,eax
  42d318:	pusha  
  42d319:	inc    esi
  42d31a:	cmp    DWORD PTR [eax],edx
  42d31c:	lock push esp
  42d31e:	or     al,0x3
  42d320:	clc    
  42d321:	mov    bl,0x69
  42d323:	cmc    
  42d324:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42d325:	or     ah,bl
  42d327:	das    
  42d328:	(bad)  
  42d32a:	data16 in al,dx
  42d32c:	adc    BYTE PTR [ebp+0x2f6b0d85],ah
  42d332:	mov    bh,0x7e
  42d334:	add    al,0xcd
  42d336:	lods   eax,DWORD PTR ds:[esi]
  42d337:	jne    0x42d2c1
  42d339:	cmp    cl,BYTE PTR [esi+edi*2+0x24]
  42d33d:	arpl   WORD PTR [ebp+0x3e],cx
  42d340:	pop    ds
  42d341:	adc    BYTE PTR [ecx],dh
  42d343:	mov    dl,0x21
  42d345:	jae    0x42d2e0
  42d347:	inc    ebx
  42d348:	je     0x42d32d
  42d34a:	xchg   esp,eax
  42d34b:	xchg   edi,eax
  42d34c:	(bad)  
  42d34d:	shl    BYTE PTR [ebp-0x397e7278],1
  42d353:	pop    ebp
  42d354:	arpl   WORD PTR ds:0xaebaa88d,di
  42d35a:	lea    edi,[esi]
  42d35c:	int    0xf5
  42d35e:	mov    bh,0x25
  42d360:	stos   BYTE PTR es:[edi],al
  42d361:	fidivr WORD PTR [edi+eiz*4]
  42d364:	(bad)  
  42d365:	stos   DWORD PTR es:[edi],eax
  42d366:	out    0xc9,al
  42d368:	cs cli 
  42d36a:	cmp    BYTE PTR [ebx],ah
  42d36c:	iret   
  42d36d:	popa   
  42d36e:	sar    BYTE PTR [ecx+eax*1+0x3575823b],0x5f
  42d376:	push   ds
  42d377:	cmc    
  42d378:	repz icebp 
  42d37a:	jb     0x42d39b
  42d37c:	sbb    al,0x49
  42d37e:	es hlt 
  42d380:	sub    ecx,DWORD PTR [edx+edx*8]
  42d383:	cmp    eax,0x3cdceeff
  42d388:	dec    ebx
  42d389:	out    dx,al
  42d38a:	push   ss
  42d38b:	push   0xea2c023
  42d390:	adc    ch,dh
  42d392:	js     0x42d35e
  42d394:	addr16 dec esi
  42d396:	popa   
  42d397:	mov    WORD PTR [eax-0x72662e1b],?
  42d39d:	mov    ebp,cs
  42d39f:	mov    al,0x91
  42d3a1:	gs inc ebp
  42d3a3:	nop
  42d3a4:	cmp    esp,ecx
  42d3a6:	add    al,0xa6
  42d3a8:	xor    al,0xf2
  42d3aa:	push   0x43faaa06
  42d3af:	data16 cmp al,0x98
  42d3b2:	dec    eax
  42d3b3:	jecxz  0x42d34e
  42d3b5:	jge    0x42d348
  42d3b7:	inc    ecx
  42d3b8:	fsub   QWORD PTR [edx]
  42d3ba:	sbb    bh,BYTE PTR [eax]
  42d3bc:	(bad)  
  42d3bd:	out    0x2d,al
  42d3bf:	jno    0x42d417
  42d3c1:	jle    0x42d387
  42d3c3:	dec    ecx
  42d3c4:	and    eax,0xc95189a9
  42d3c9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42d3cb:	rcr    dh,1
  42d3cd:	sub    al,BYTE PTR [eax-0x608e257d]
  42d3d3:	mov    ds:0x929e9dc5,eax
  42d3d8:	inc    eax
  42d3d9:	push   edx
  42d3da:	(bad)  
  42d3db:	and    al,0x16
  42d3dd:	push   edx
  42d3de:	add    al,0xa3
  42d3e0:	inc    ecx
  42d3e1:	adc    eax,0xc38361fd
  42d3e6:	pop    es
  42d3e7:	and    bh,BYTE PTR [ebp+0x54]
  42d3ea:	je     0x42d450
  42d3ec:	cmc    
  42d3ed:	and    esi,DWORD PTR [ebx+0x7f]
  42d3f0:	sti    
  42d3f1:	cmp    cl,ch
  42d3f3:	out    0x7d,al
  42d3f5:	push   ecx
  42d3f6:	fidiv  WORD PTR [esi-0x22]
  42d3f9:	dec    ebp
  42d3fa:	fcomp  DWORD PTR [ecx+0x43]
  42d3fd:	jl     0x42d435
  42d3ff:	sahf   
  42d400:	xchg   BYTE PTR [edi-0x7b],ch
  42d403:	xchg   ecx,eax
  42d404:	jl     0x42d3d5
  42d406:	ins    BYTE PTR es:[edi],dx
  42d407:	add    DWORD PTR [edx+0x61],edi
  42d40a:	push   ecx
  42d40b:	stc    
  42d40c:	fist   DWORD PTR [eax+0x2f2c43fd]
  42d412:	aaa    
  42d413:	cli    
  42d414:	mov    al,ds:0x9c51410b
  42d419:	popa   
  42d41a:	pop    es
  42d41b:	add    al,0x7b
  42d41d:	jl     0x42d3c8
  42d41f:	ret    0x52e3
  42d422:	add    BYTE PTR [edi+0x31],0xb0
  42d426:	dec    ebp
  42d427:	cmp    al,0x62
  42d429:	sti    
  42d42a:	push   cs
  42d42b:	int    0x75
  42d42d:	or     ecx,DWORD PTR [esp+edi*2+0x6a]
  42d431:	retf   0xca2b
  42d434:	pop    esi
  42d435:	mov    ebp,0xb10c743d
  42d43a:	jnp    0x42d464
  42d43c:	or     eax,0xdd128444
  42d441:	int3   
  42d442:	in     eax,0xe8
  42d444:	cmp    ebx,DWORD PTR [esi]
  42d446:	mov    ah,0xb2
  42d448:	dec    edx
  42d449:	test   BYTE PTR ds:0xb557a907,ah
  42d44f:	lods   eax,DWORD PTR ds:[esi]
  42d450:	popa   
  42d451:	icebp  
  42d452:	cmp    eax,0x62e302f0
  42d457:	pop    ebp
  42d458:	inc    edx
  42d459:	dec    ebp
  42d45a:	imul   eax,DWORD PTR ds:0xd426f70b,0xffffff96
  42d461:	sub    BYTE PTR [ebp+0x48b457c6],0x9d
  42d468:	jmp    0xcd0d:0x1f48d56
  42d46f:	adc    al,0x5b
  42d471:	push   edx
  42d472:	push   edi
  42d473:	fiadd  WORD PTR ds:0x5a585bf1
  42d479:	je     0x42d468
  42d47b:	add    ah,BYTE PTR [eax+0x3a7dddc7]
  42d481:	mov    ecx,0xf9c1c434
  42d486:	inc    ebx
  42d487:	imul   esi,ecx,0xafea6a32
  42d48d:	fs test al,0x50
  42d490:	or     al,0xd
  42d492:	mov    al,0xd
  42d494:	xchg   ecx,eax
  42d495:	inc    edi
  42d496:	sbb    eax,ebp
  42d498:	add    bh,ah
  42d49a:	imul   edi,ecx,0x57
  42d49d:	pop    esi
  42d49e:	or     BYTE PTR [edi-0x36],dh
  42d4a1:	mov    ds:0x594d46b7,eax
  42d4a6:	jbe    0x42d45e
  42d4a8:	mov    eax,0xa7b6b96d
  42d4ad:	mov    bh,0x2b
  42d4af:	dec    ebx
  42d4b0:	ret    0x187c
  42d4b3:	aas    
  42d4b4:	cmc    
  42d4b5:	(bad)  
  42d4b6:	mov    al,0xc4
  42d4b8:	inc    ebx
  42d4b9:	ror    DWORD PTR [ebx+eiz*4-0x4ae38a9e],0xed
  42d4c1:	mov    esp,0x6e8b9b9d
  42d4c6:	inc    ecx
  42d4c7:	sbb    BYTE PTR [eax],dh
  42d4c9:	scas   eax,DWORD PTR es:[edi]
  42d4ca:	mov    ds:0x4775bd81,al
  42d4cf:	xchg   ebp,eax
  42d4d0:	add    bl,BYTE PTR [ebp+0x498e1a0d]
  42d4d6:	daa    
  42d4d7:	scas   al,BYTE PTR es:[edi]
  42d4d8:	jne    0x42d4a7
  42d4da:	sub    ah,bl
  42d4dc:	inc    eax
  42d4dd:	scas   al,BYTE PTR es:[edi]
  42d4de:	imul   eax,eax,0xffffffc5
  42d4e1:	dec    eax
  42d4e2:	cld    
  42d4e3:	fwait
  42d4e4:	mul    BYTE PTR [esp+edi*1]
  42d4e7:	xor    BYTE PTR [eax+0x17fee554],ch
  42d4ed:	(bad)  
  42d4ee:	std    
  42d4ef:	fs inc edi
  42d4f1:	dec    ebp
  42d4f2:	inc    ecx
  42d4f3:	loop   0x42d53c
  42d4f5:	loop   0x42d4ce
  42d4f7:	call   0x449749a3
  42d4fc:	je     0x42d49f
  42d4fe:	int3   
  42d4ff:	(bad)  
  42d500:	int    0x97
  42d502:	imul   ecx,DWORD PTR ds:0xb3cf6997,0x5221a796
  42d50c:	or     ebp,DWORD PTR [edi]
  42d50e:	jae    0x42d4cb
  42d510:	fild   WORD PTR [ecx+0x6b]
  42d513:	push   0x7f
  42d515:	repnz push cs
  42d517:	mov    cl,0xe7
  42d519:	adc    DWORD PTR [ecx+edx*4-0x3e],ebp
  42d51d:	pusha  
  42d51e:	pop    ecx
  42d51f:	xchg   esi,eax
  42d520:	jno    0x42d524
  42d522:	fwait
  42d523:	not    DWORD PTR [ecx+ebp*8]
  42d526:	sbb    DWORD PTR [edx+edi*1],ebx
  42d529:	(bad)  
  42d52a:	jp     0x42d4b5
  42d52c:	daa    
  42d52d:	shr    WORD PTR [esi+esi*4],0xbf
  42d532:	xchg   ebp,eax
  42d533:	test   al,dh
  42d535:	outs   dx,BYTE PTR ds:[esi]
  42d536:	or     dh,bh
  42d538:	(bad)
  42d53b:	adc    al,0xcb
  42d53d:	fdivp  st(4),st
  42d53f:	sub    ah,BYTE PTR [edx+0x36]
  42d542:	cld    
  42d543:	mov    ds:0x6eb7b377,eax
  42d548:	mov    al,BYTE PTR [edi+0x5b38d0]
  42d54e:	(bad)  
  42d54f:	cli    
  42d550:	dec    eax
  42d551:	cmp    cl,BYTE PTR [ebx+0x6]
  42d554:	mov    esi,0x202b2fc
  42d559:	in     eax,dx
  42d55a:	mov    bl,0xa3
  42d55c:	test   DWORD PTR [ebx-0x7f],esi
  42d55f:	jp     0x42d5da
  42d561:	mov    dl,0x7b
  42d563:	into   
  42d564:	push   esp
  42d565:	sub    esi,eax
  42d567:	inc    eax
  42d568:	mov    dl,0xe7
  42d56a:	test   al,0x75
  42d56c:	ror    esp,0x74
  42d56f:	add    eax,0xd6853bc1
  42d574:	lds    esp,FWORD PTR [ebx+0x39]
  42d577:	rcl    DWORD PTR [ecx],1
  42d579:	xchg   ecx,eax
  42d57a:	xchg   dh,bh
  42d57c:	mov    bh,0x6b
  42d57e:	push   cs
  42d57f:	hlt    
  42d580:	aad    0xcc
  42d582:	ficom  WORD PTR [edx]
  42d584:	in     eax,dx
  42d585:	aas    
  42d586:	push   eax
  42d587:	adc    cl,BYTE PTR [ebp-0x7f17d0f5]
  42d58d:	jmp    0x7bc6570d
  42d592:	and    eax,0x81014e1a
  42d597:	fist   DWORD PTR [ecx+0x50]
  42d59a:	mov    dh,BYTE PTR [ecx]
  42d59c:	cmp    edx,DWORD PTR [ebx-0x43fff880]
  42d5a2:	and    BYTE PTR [edx+0xcd130d4],al
  42d5a8:	(bad)  
  42d5a9:	and    eax,0x9f11f9c
  42d5ae:	inc    edx
  42d5af:	popf   
  42d5b0:	dec    esi
  42d5b1:	pop    esi
  42d5b2:	push   ebx
  42d5b3:	jo     0x42d585
  42d5b5:	xchg   DWORD PTR ss:[edx+0x47],eax
  42d5b9:	xor    eax,0x428a045b
  42d5be:	sub    al,0x52
  42d5c0:	add    dh,BYTE PTR [ebx-0x7d]
  42d5c3:	pop    ebx
  42d5c4:	mov    ecx,0x3ff9f91
  42d5c9:	sub    eax,0xa43f818d
  42d5ce:	push   edx
  42d5cf:	test   DWORD PTR [eax+0x606e766c],ecx
  42d5d5:	mov    ds:0xf2bb8b11,al
  42d5da:	mov    ebx,0x40c7ded9
  42d5df:	mov    ds:0xef472c52,eax
  42d5e4:	cmp    ch,BYTE PTR [eax-0x437419ef]
  42d5ea:	xor    bh,bl
  42d5ec:	idiv   dh
  42d5ee:	hlt    
  42d5ef:	mov    edx,0xa33f49dd
  42d5f4:	fwait
  42d5f5:	jne    0x42d5f9
  42d5f7:	pop    ebp
  42d5f8:	adc    al,0x80
  42d5fa:	aaa    
  42d5fb:	nop
  42d5fc:	dec    edi
  42d5fd:	sbb    BYTE PTR [ebp+0x7d387656],0x5a
  42d604:	xlat   BYTE PTR ds:[ebx]
  42d605:	sub    al,0x38
  42d607:	and    ecx,ebp
  42d609:	mov    ebp,0x7b3551a0
  42d60e:	xlat   BYTE PTR ds:[ebx]
  42d60f:	cmp    eax,0x9e11277
  42d614:	inc    ebp
  42d615:	and    ah,0x20
  42d618:	push   eax
  42d619:	adc    al,0xa9
  42d61b:	cmp    eax,0x8518b407
  42d620:	fs leave 
  42d622:	std    
  42d623:	mov    esi,0x67c36885
  42d628:	pop    es
  42d629:	mov    ?,WORD PTR [eax+0x28378d0e]
  42d62f:	push   ecx
  42d630:	scas   eax,DWORD PTR es:[edi]
  42d631:	pop    edx
  42d632:	xchg   DWORD PTR [ebx+0x40],edx
  42d635:	inc    esi
  42d636:	addr16 xchg esi,eax
  42d638:	xchg   esi,eax
  42d639:	add    BYTE PTR [ecx+0x3ca39017],cl
  42d63f:	xor    cl,dh
  42d641:	ret    
  42d642:	repnz mov WORD PTR [edi-0x5be1f653],es
  42d649:	jo     0x42d697
  42d64b:	test   al,0x4b
  42d64d:	sbb    DWORD PTR [ebp+ebp*8-0x5d6510d0],ebx
  42d654:	xchg   BYTE PTR [edx],ch
  42d656:	sbb    al,0x98
  42d658:	mov    eax,0x4667922
  42d65d:	sbb    eax,0xb43062de
  42d662:	gs inc ebp
  42d664:	jb     0x42d6b1
  42d666:	inc    BYTE PTR [edx+0x4fdb4514]
  42d66c:	aas    
  42d66d:	pop    ebp
  42d66e:	adc    cl,bl
  42d670:	loopne 0x42d64e
  42d672:	or     DWORD PTR [ecx+0x25d164ad],esi
  42d678:	and    ah,BYTE PTR [edi+0x58]
  42d67b:	(bad)  
  42d67c:	out    dx,eax
  42d67d:	push   0xa10d3900
  42d682:	xchg   DWORD PTR [eax-0x6ebfa322],eax
  42d688:	adc    esp,DWORD PTR [ecx]
  42d68a:	out    0xe4,eax
  42d68c:	jge    0x42d61c
  42d68e:	add    al,0x70
  42d690:	enter  0xe2be,0x44
  42d694:	iret   
  42d695:	jmp    0x42d705
  42d697:	cmp    eax,0x10fe8125
  42d69c:	jge    0x42d642
  42d69e:	pop    ebp
  42d69f:	xchg   ebx,eax
  42d6a0:	and    esp,eax
  42d6a2:	jno    0x42d6cc
  42d6a4:	(bad)  [ebp+0x223a6288]
  42d6aa:	sbb    BYTE PTR gs:[eax-0x7],0xf6
  42d6af:	call   0x24b0139a
  42d6b4:	xor    dh,bl
  42d6b6:	data16 jne 0x42d71d
  42d6b9:	and    esi,DWORD PTR [edx+0x11]
  42d6bc:	jne    0x42d69f
  42d6be:	or     DWORD PTR [ebx-0x56e314bc],0x34
  42d6c5:	cdq    
  42d6c6:	jge    0x42d6df
  42d6c8:	scas   eax,DWORD PTR es:[edi]
  42d6c9:	jo     0x42d6be
  42d6cb:	outs   dx,DWORD PTR ds:[esi]
  42d6cc:	jg     0x42d6ec
  42d6ce:	pusha  
  42d6cf:	mov    edi,0xa93e80e2
  42d6d4:	popa   
  42d6d5:	push   es
  42d6d6:	mov    ebx,edx
  42d6d8:	sar    bh,0xda
  42d6db:	jg     0x42d73d
  42d6dd:	in     eax,dx
  42d6de:	jnp    0x42d691
  42d6e0:	icebp  
  42d6e1:	mov    al,ds:0x497ac7e9
  42d6e6:	in     eax,dx
  42d6e7:	test   DWORD PTR [edx+0x52],esi
  42d6ea:	and    ch,BYTE PTR [edx+edx*4]
  42d6ed:	out    dx,eax
  42d6ee:	push   edi
  42d6ef:	ins    DWORD PTR es:[edi],dx
  42d6f0:	je     0x42d6c8
  42d6f2:	and    al,0xb1
  42d6f4:	pop    es
  42d6f5:	cmp    al,BYTE PTR [ecx-0x7c066a6c]
  42d6fb:	leave  
  42d6fc:	dec    esp
  42d6fd:	call   edx
  42d6ff:	push   ebp
  42d700:	ja     0x42d6a5
  42d702:	sub    eax,esi
  42d704:	mov    ecx,0x697e68d8
  42d709:	stos   DWORD PTR es:[edi],eax
  42d70a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42d70b:	lds    ebp,FWORD PTR [esp+esi*2-0x4]
  42d70f:	ds xchg edx,eax
  42d711:	clc    
  42d712:	mov    cl,0x25
  42d714:	arpl   WORD PTR [edi],ax
  42d716:	imul   DWORD PTR [edx+edx*1-0x16]
  42d71a:	ds into 
  42d71c:	sbb    al,0x99
  42d71e:	dec    edx
  42d71f:	push   edi
  42d720:	add    DWORD PTR [edi-0x304273c2],ebx
  42d726:	jle    0x42d78a
  42d728:	mov    al,ds:0xc5c6c809
  42d72d:	popa   
  42d72e:	(bad)  [edi+esi*4-0x69973b4f]
  42d735:	dec    ecx
  42d736:	or     BYTE PTR [edx-0x69],0xd6
  42d73a:	cmp    al,0x41
  42d73c:	pushf  
  42d73d:	bound  esi,QWORD PTR [esi]
  42d73f:	pop    es
  42d740:	pop    ebx
  42d741:	out    0x68,al
  42d743:	retf   0x235b
  42d746:	inc    edi
  42d747:	pop    es
  42d748:	inc    edx
  42d749:	jg     0x42d74a
  42d74b:	fwait
  42d74c:	pop    ss
  42d74d:	mov    cl,0x2a
  42d74f:	mov    ds:0x2f4f7cc7,al
  42d754:	sub    DWORD PTR [edi-0x57],ebx
  42d757:	sbb    al,0x54
  42d759:	and    eax,esi
  42d75b:	lods   al,BYTE PTR ds:[esi]
  42d75c:	sbb    BYTE PTR [ebx+0x214759f6],cl
  42d762:	dec    esp
  42d763:	stos   BYTE PTR es:[edi],al
  42d764:	sbb    al,0x89
  42d766:	cmp    bh,BYTE PTR [edx-0x48cf411e]
  42d76c:	cmp    al,0x14
  42d76e:	outs   dx,DWORD PTR ds:[esi]
  42d76f:	push   ebp
  42d770:	and    DWORD PTR [edx-0x4a],esp
  42d773:	(bad)  
  42d774:	xor    eax,0xa8b7eeb2
  42d779:	push   ecx
  42d77a:	push   edi
  42d77b:	ja     0x42d7d2
  42d77d:	or     al,BYTE PTR [ebp-0x5a]
  42d780:	dec    ecx
  42d781:	sbb    eax,0x96b39d5d
  42d786:	cwde   
  42d787:	stos   DWORD PTR es:[edi],eax
  42d788:	ror    BYTE PTR [edx],1
  42d78a:	add    eax,0x55330fb3
  42d78f:	adc    ebx,DWORD PTR [edx+0x15758553]
  42d795:	scas   eax,DWORD PTR es:[edi]
  42d796:	inc    ebx
  42d797:	push   edi
  42d798:	lahf   
  42d799:	(bad)  
  42d79a:	cs leave 
  42d79c:	mov    ebx,0x2eed6e51
  42d7a1:	adc    DWORD PTR [ecx+0x5f9517a3],ecx
  42d7a7:	mov    edi,fs
  42d7a9:	les    eax,FWORD PTR [edx+0x6fb2a2b]
  42d7af:	sbb    BYTE PTR [ecx+0x27fca8c8],cl
  42d7b5:	xor    BYTE PTR [edx],dl
  42d7b7:	in     eax,dx
  42d7b8:	je     0x42d7e0
  42d7ba:	dec    edi
  42d7bb:	mov    fs,WORD PTR [esi+0x6b]
  42d7be:	in     eax,dx
  42d7bf:	aad    0x8c
  42d7c1:	mov    ebx,0xcde3d489
  42d7c6:	push   ds
  42d7c7:	mov    al,ss:0xfd7af57b
  42d7cd:	cwde   
  42d7ce:	jmp    0x5259:0x7274ea68
  42d7d5:	mov    DWORD PTR [eax],esi
  42d7d7:	sbb    ecx,esp
  42d7d9:	jno    0x42d7b7
  42d7db:	xlat   BYTE PTR ds:[ebx]
  42d7dc:	mov    ah,0x6e
  42d7de:	adc    cl,BYTE PTR [edi+0x62b6ae29]
  42d7e4:	repnz bound ebx,QWORD PTR [ecx+edx*4]
  42d7e8:	pushf  
  42d7e9:	addr16 in eax,dx
  42d7eb:	push   esp
  42d7ec:	xchg   BYTE PTR [ebx+edi*2-0x35d3a37a],al
  42d7f3:	adc    BYTE PTR [edi],dl
  42d7f5:	pop    es
  42d7f6:	inc    ecx
  42d7f7:	mov    dl,0xbd
  42d7f9:	imul   esi,DWORD PTR [edi],0xffffff8d
  42d7fc:	lods   al,BYTE PTR ds:[esi]
  42d7fd:	jmp    0x42d7a1
  42d7ff:	jl     0x42d841
  42d801:	mov    edi,0x7f81f980
  42d806:	and    DWORD PTR [ebx-0x3c214dcc],ebx
  42d80c:	mov    ds:0x18da3aec,eax
  42d811:	retf   0xbe01
  42d814:	mov    al,ds:0x2ac561ec
  42d819:	ss mov esp,0x636ef00a
  42d81f:	repnz or dh,BYTE PTR [ebx+0x1]
  42d823:	or     al,0x99
  42d825:	dec    ebp
  42d826:	cmc    
  42d827:	es jae 0x42d866
  42d82a:	shr    BYTE PTR [eax+eax*8],1
  42d82d:	or     DWORD PTR [ecx+0x3dfd8979],edi
  42d833:	xor    eax,esp
  42d835:	xor    esi,DWORD PTR [eax+0x22af2b7]
  42d83b:	mov    ch,0x31
  42d83d:	imul   edi,DWORD PTR [ecx-0x2fb3cda2],0x667bdc5d
  42d847:	test   DWORD PTR [ebx-0xc],eax
  42d84a:	mov    BYTE PTR [esi-0x6e],bl
  42d84d:	inc    esp
  42d84e:	in     eax,0x4a
  42d850:	mov    al,ds:0x2f9fe968
  42d855:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42d856:	daa    
  42d857:	loopne 0x42d7f7
  42d859:	push   ebp
  42d85a:	frstor [ebp-0x36]
  42d85d:	jo     0x42d8d8
  42d85f:	and    DWORD PTR [esi-0x33],0x35
  42d863:	add    DWORD PTR [ebp-0x64],eax
  42d866:	or     BYTE PTR ds:0xac6312e8,al
  42d86c:	push   ebx
  42d86d:	cmp    BYTE PTR [eax+0x19],bh
  42d870:	mov    ds:0xbf88081e,al
  42d875:	rol    BYTE PTR [ecx-0x71dda8bb],1
  42d87b:	push   esp
  42d87c:	sub    edx,DWORD PTR [ebx]
  42d87e:	inc    ecx
  42d87f:	(bad)  
  42d880:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42d881:	std    
  42d882:	stc    
  42d883:	sbb    dl,dl
  42d885:	es nop
  42d887:	lods   eax,DWORD PTR ds:[esi]
  42d888:	icebp  
  42d889:	int3   
  42d88a:	push   eax
  42d88b:	lock dec ebx
  42d88d:	mov    ah,bh
  42d88f:	pop    ebx
  42d890:	xor    ch,BYTE PTR [ebx+0xe]
  42d893:	repnz hlt 
  42d895:	jle    0x42d820
  42d897:	xlat   BYTE PTR ds:[ebx]
  42d898:	cmp    edi,DWORD PTR [ebx+0x61a0ed8f]
  42d89e:	bound  ebx,QWORD PTR [ebx+ebx*1]
  42d8a1:	retf   0xc629
  42d8a4:	mov    bl,0xbd
  42d8a6:	mov    dl,0x35
  42d8a8:	mov    eax,ds:0xec4038d0
  42d8ad:	mov    edx,0xcdf4b13b
  42d8b2:	ja     0x42d8f4
  42d8b4:	into   
  42d8b5:	mov    eax,0x1eb1c9f0
  42d8ba:	adc    cl,0x3
  42d8bd:	push   ds
  42d8be:	call   0xd7e8:0xaf008cbe
  42d8c5:	mov    esp,0xbcfff5f4
  42d8ca:	js     0x42d913
  42d8cc:	ss sbb al,0xf3
  42d8cf:	mov    al,0x60
  42d8d1:	test   al,0x8b
  42d8d3:	mov    dh,0xf5
  42d8d5:	add    BYTE PTR [esi+0x475ff5e4],al
  42d8db:	inc    edx
  42d8dc:	mov    cs,eax
  42d8de:	repnz in eax,0xfc
  42d8e1:	add    ah,BYTE PTR ds:0xba692aa9
  42d8e7:	xor    al,0x1b
  42d8e9:	mov    ds:0x3f9f7b2f,eax
  42d8ee:	push   bx
  42d8f0:	mov    al,0xa7
  42d8f2:	cmp    cl,BYTE PTR [ecx+0x5d297bbe]
  42d8f8:	xchg   BYTE PTR [eax+0x26db7eb5],ch
  42d8fe:	(bad)  
  42d8ff:	leave  
  42d900:	mov    WORD PTR [ebx],cs
  42d902:	pop    ebx
  42d903:	sti    
  42d904:	(bad)  
  42d906:	mov    esp,esi
  42d908:	mov    dl,0xa6
  42d90a:	mov    ds:0x389b52d7,al
  42d90f:	jp     0x42d921
  42d911:	mov    ecx,0x6c31d055
  42d916:	add    DWORD PTR [esi+ebx*2-0x70],edx
  42d91a:	jecxz  0x42d999
  42d91c:	dec    edi
  42d91d:	std    
  42d91e:	xor    BYTE PTR [edi],bh
  42d920:	aad    0x4d
  42d922:	mov    DWORD PTR [eax],edx
  42d924:	mov    al,0x1b
  42d926:	inc    edx
  42d927:	mov    edi,DWORD PTR [edx]
  42d929:	mov    al,ds:0x9cceca6c
  42d92e:	popa   
  42d92f:	xchg   edx,eax
  42d930:	add    dl,bl
  42d932:	jmp    0x42d966
  42d934:	add    edi,DWORD PTR [ecx-0xd]
  42d937:	retf   
  42d938:	clc    
  42d939:	ror    DWORD PTR [edx+ecx*1+0x1f86d050],1
  42d940:	mov    bh,0xcd
  42d942:	jl     0x42d986
  42d944:	rol    BYTE PTR [ecx-0x13],0x6c
  42d948:	ret    0xcda
  42d94b:	push   eax
  42d94c:	enter  0xb98d,0xed
  42d950:	push   0x90c69b2a
  42d955:	adc    eax,0x8f861fc
  42d95a:	inc    esi
  42d95b:	push   ebx
  42d95c:	rcl    BYTE PTR [ecx],cl
  42d95e:	and    eax,0x2c667e04
  42d963:	jl     0x42d912
  42d965:	ftst   
  42d967:	retf   0xa89a
  42d96a:	arpl   cx,bp
  42d96c:	adc    BYTE PTR [edi-0x72074913],bl
  42d972:	adc    esi,ebp
  42d974:	push   esp
  42d975:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42d976:	int    0xf3
  42d978:	mov    cl,0xfe
  42d97a:	test   eax,0xc30a38e1
  42d97f:	lahf   
  42d980:	inc    eax
  42d981:	cmp    DWORD PTR [ebx+0x19],edx
  42d984:	or     al,0x8b
  42d986:	pop    eax
  42d987:	leave  
  42d988:	pusha  
  42d989:	fnstcw WORD PTR [edx]
  42d98b:	out    dx,eax
  42d98c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42d98d:	in     eax,dx
  42d98e:	xlat   BYTE PTR ds:[ebx]
  42d98f:	or     bl,BYTE PTR [ebp+0x3cafa44e]
  42d995:	pop    esi
  42d996:	test   eax,0xd4f70b70
  42d99b:	das    
  42d99c:	out    dx,al
  42d99d:	dec    esi
  42d99e:	xor    BYTE PTR [ecx+0x43],ch
  42d9a1:	push   ss
  42d9a2:	out    0x48,eax
  42d9a4:	jecxz  0x42d9b4
  42d9a6:	xor    ah,ch
  42d9a8:	test   eax,0x5673b3e0
  42d9ad:	adc    bl,BYTE PTR [ebx-0x62f8cb30]
  42d9b3:	dec    eax
  42d9b4:	mov    al,ds:0xdfa6ecbf
  42d9b9:	or     eax,0xed66e4fe
  42d9be:	aas    
  42d9bf:	shl    DWORD PTR [edx],1
  42d9c1:	in     al,0x3d
  42d9c3:	adc    DWORD PTR [eax-0x66af9719],edx
  42d9c9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42d9ca:	test   BYTE PTR [esi],0x9f
  42d9cd:	and    al,0xd1
  42d9cf:	push   0x400ab376
  42d9d4:	xchg   bl,bl
  42d9d6:	les    edx,FWORD PTR [edx-0x57]
  42d9d9:	sti    
  42d9da:	sub    ebp,ecx
  42d9dc:	mov    al,0xdd
  42d9de:	out    0xf8,al
  42d9e0:	cmp    DWORD PTR [ebp+0x6316a8a8],edi
  42d9e6:	push   edx
  42d9e7:	dec    ecx
  42d9e8:	sbb    al,0xb3
  42d9ea:	imul   edx,DWORD PTR [edi-0x52],0x48a9b5de
  42d9f1:	adc    eax,0x90a7825b
  42d9f6:	pop    ss
  42d9f7:	dec    ebx
  42d9f8:	and    ch,BYTE PTR cs:[ebx-0x14bfef91]
  42d9ff:	mov    ds:0xe586e951,al
  42da04:	ins    BYTE PTR es:[edi],dx
  42da05:	jge    0x42da6b
  42da07:	out    dx,eax
  42da08:	push   edi
  42da09:	mov    eax,0x19e10400
  42da0e:	sub    dl,BYTE PTR [edi]
  42da10:	xchg   DWORD PTR [edx+0x3cd50566],eax
  42da16:	pop    es
  42da17:	jmp    0x42da52
  42da19:	shl    DWORD PTR [ebx-0x21],0xf4
  42da1d:	ja     0x42da5a
  42da1f:	int3   
  42da20:	fnstsw WORD PTR [ebx-0x66601c3f]
  42da26:	push   ebp
  42da27:	popa   
  42da28:	push   cs
  42da29:	inc    ebp
  42da2a:	sbb    DWORD PTR [ecx],0x29ea2ebf
  42da30:	scas   al,BYTE PTR es:[edi]
  42da31:	(bad)  
  42da32:	jno    0x42da5f
  42da34:	dec    ecx
  42da35:	mov    al,ds:0x49d975b7
  42da3a:	adc    bh,BYTE PTR [ecx]
  42da3c:	add    BYTE PTR [esi],dh
  42da3e:	iret   
  42da3f:	xchg   ecx,eax
  42da40:	push   ebp
  42da41:	test   ch,bl
  42da43:	or     esp,ecx
  42da45:	dec    esp
  42da46:	push   edx
  42da47:	and    eax,0x87d328b5
  42da4c:	jecxz  0x42d9e7
  42da4e:	xor    BYTE PTR [ebp-0x7e6920d7],ch
  42da54:	imul   ecx,eax,0xffffff83
  42da57:	pop    ss
  42da58:	shr    BYTE PTR [edi+0x369465a5],0x85
  42da5f:	aaa    
  42da60:	adc    eax,0x622e7cdb
  42da65:	ja     0x42daa8
  42da67:	out    dx,eax
  42da68:	ins    BYTE PTR es:[edi],dx
  42da69:	les    esp,FWORD PTR [edi-0x65]
  42da6c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42da6d:	and    edx,edi
  42da6f:	pop    esp
  42da70:	xchg   ebp,eax
  42da71:	dec    edx
  42da72:	jbe    0x42dacb
  42da74:	inc    esi
  42da75:	or     al,0x41
  42da77:	les    ebx,FWORD PTR [ebp-0x39]
  42da7a:	jae    0x42daa5
  42da7c:	jb     0x42da60
  42da7e:	fisubr DWORD PTR [esi-0x3]
  42da81:	xor    DWORD PTR [ebx+0x33],eax
  42da84:	rcr    BYTE PTR [edx+0x15914d48],0xfa
  42da8b:	ins    BYTE PTR es:[edi],dx
  42da8c:	in     eax,0xe9
  42da8e:	rcr    DWORD PTR [ecx+0x78],0x97
  42da92:	leave  
  42da93:	xchg   ebx,eax
  42da94:	pop    es
  42da95:	inc    ebp
  42da96:	and    eax,0x55589d8a
  42da9b:	mov    esp,0xefb283f4
  42daa0:	pop    eax
  42daa1:	repz repz add ebx,ebp
  42daa5:	lods   al,BYTE PTR ds:[esi]
  42daa6:	sub    bh,BYTE PTR [ecx-0x6]
  42daa9:	lods   eax,DWORD PTR ds:[esi]
  42daaa:	fiadd  DWORD PTR [ebp+0xef9de3c]
  42dab0:	xor    eax,0x11d2f18
  42dab5:	adc    edx,edx
  42dab7:	rol    cl,1
  42dab9:	add    DWORD PTR [edi],esi
  42dabb:	inc    ebp
  42dabc:	aas    
  42dabd:	and    ch,dh
  42dabf:	pop    edi
  42dac0:	(bad)  
  42dac1:	and    bh,cl
  42dac3:	retf   0xc684
  42dac6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42dac7:	les    eax,FWORD PTR [ecx+0x71f9adbe]
  42dacd:	mul    DWORD PTR cs:[ecx-0x26c2f339]
  42dad4:	shl    DWORD PTR [ecx],cl
  42dad6:	mov    eax,ds:0xa8040c40
  42dadb:	jmp    0x42db06
  42dadd:	fnstenv [ebp*8+0x60e29c0b]
  42dae4:	sbb    eax,0xde7e0e35
  42dae9:	xor    DWORD PTR [esi-0x798ccdde],ebx
  42daef:	and    DWORD PTR [ecx],ecx
  42daf1:	rcr    BYTE PTR [ecx],0xa4
  42daf4:	out    dx,al
  42daf5:	repnz mov BYTE PTR [ebp+0x6dd4e2e9],bl
  42dafc:	into   
  42dafd:	xor    bl,BYTE PTR [esi+0x5d4a0300]
  42db03:	out    0x82,al
  42db05:	mov    al,BYTE PTR [ebp-0x4ae727a9]
  42db0b:	test   al,0x52
  42db0d:	shr    BYTE PTR [ecx],1
  42db0f:	mov    ch,BYTE PTR [edi-0x3e]
  42db12:	inc    ebp
  42db13:	mov    ebp,0xd79dc098
  42db18:	xor    al,0x4e
  42db1a:	xchg   esi,eax
  42db1b:	dec    ecx
  42db1c:	mov    eax,ds:0xb5377ae
  42db21:	sbb    eax,0x8270242b
  42db26:	inc    esi
  42db27:	dec    esi
  42db28:	jle    0x42db4b
  42db2a:	bound  ebp,QWORD PTR [ecx]
  42db2c:	leave  
  42db2d:	mov    ds:0x9ffc9802,eax
  42db32:	jne    0x42db92
  42db34:	inc    ebx
  42db35:	repz mov eax,0x6fdc9e38
  42db3b:	call   0xd15f378a
  42db40:	sti    
  42db41:	inc    esp
  42db42:	xor    eax,0x1d2679ad
  42db47:	icebp  
  42db48:	push   cs
  42db49:	test   DWORD PTR [eax+ebp*4],0x44116c3a
  42db50:	add    al,0x4f
  42db52:	loope  0x42dad7
  42db54:	into   
  42db55:	cmp    al,0x95
  42db57:	cmp    al,0x21
  42db59:	inc    ebp
  42db5a:	pop    ebp
  42db5b:	retf   0x3048
  42db5e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42db5f:	mov    fs,WORD PTR [ecx+edi*8+0x6c3f483d]
  42db66:	push   0x5d
  42db68:	xchg   ebp,eax
  42db69:	inc    eax
  42db6a:	xchg   esi,eax
  42db6b:	add    eax,0x639e7c17
  42db70:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42db71:	dec    edi
  42db72:	sti    
  42db73:	pop    ss
  42db74:	xor    eax,0x9cf209f7
  42db79:	neg    DWORD PTR [eax-0x4168118d]
  42db7f:	push   eax
  42db80:	sbb    ch,BYTE PTR [ebx+0x33]
  42db83:	xor    eax,0x9f18b7a
  42db88:	fbstp  TBYTE PTR [ebx-0x73]
  42db8b:	jle    0x42db9a
  42db8d:	jb     0x42db1b
  42db8f:	add    al,BYTE PTR [eax-0x25]
  42db92:	adc    BYTE PTR [edx+0x21],0x54
  42db96:	push   edx
  42db97:	pop    ebx
  42db98:	xor    al,BYTE PTR [edx]
  42db9a:	mov    ebp,0x2a51d724
  42db9f:	cmp    al,cl
  42dba1:	push   ebx
  42dba2:	mov    ecx,DWORD PTR [ebp+0x59016a8b]
  42dba8:	jp     0x42dc26
  42dbaa:	ds xor al,0x75
  42dbad:	sar    BYTE PTR [edi-0x64759098],1
  42dbb3:	xchg   BYTE PTR [eax-0x52],ch
  42dbb6:	dec    edi
  42dbb7:	xchg   ecx,eax
  42dbb8:	xlat   BYTE PTR ds:[ebx]
  42dbb9:	ja     0x42db47
  42dbbb:	mov    esi,0x4833769f
  42dbc0:	sbb    al,0xfd
  42dbc2:	cs sbb al,0x3f
  42dbc5:	ficom  DWORD PTR [edx]
  42dbc7:	inc    ebx
  42dbc8:	sbb    BYTE PTR [ebp+0x41],dl
  42dbcb:	idiv   eax
  42dbcd:	pop    es
  42dbce:	enter  0x4ecd,0x34
  42dbd2:	mov    ds:0x57006675,eax
  42dbd7:	push   esp
  42dbd8:	js     0x42db99
  42dbda:	dec    ecx
  42dbdb:	sub    al,0xa4
  42dbdd:	loop   0x42dc10
  42dbdf:	jo     0x42db98
  42dbe1:	jle    0x42db9c
  42dbe3:	leave  
  42dbe4:	pop    ecx
  42dbe5:	mov    edi,0x94ae5e4e
  42dbea:	ret    
  42dbeb:	mov    ss,WORD PTR [eax-0x7d5ac5d3]
  42dbf1:	dec    ebp
  42dbf2:	ins    BYTE PTR es:[edi],dx
  42dbf3:	adc    eax,0x2d658663
  42dbf8:	in     eax,0x41
  42dbfa:	and    eax,0x4710c608
  42dbff:	fist   DWORD PTR [ecx+0x6fe6cd31]
  42dc05:	add    BYTE PTR [ebp-0x10],0xc6
  42dc09:	cmp    DWORD PTR [ebx-0x4e],ebp
  42dc0c:	add    al,0xa2
  42dc0e:	sbb    BYTE PTR [edx],al
  42dc10:	stc    
  42dc11:	outs   dx,BYTE PTR ds:[esi]
  42dc12:	mov    al,ds:0x3b271a85
  42dc17:	int    0x53
  42dc19:	das    
  42dc1a:	inc    esp
  42dc1b:	inc    ecx
  42dc1c:	or     BYTE PTR [esi-0x5],bh
  42dc1f:	mov    esi,0x17b50500
  42dc24:	shl    DWORD PTR [ecx],cl
  42dc26:	loopne 0x42dbcb
  42dc28:	lods   al,BYTE PTR ds:[esi]
  42dc29:	mov    ecx,ecx
  42dc2b:	jae    0x42dbf8
  42dc2d:	sbb    DWORD PTR [eax],0xffffffc5
  42dc30:	lds    eax,FWORD PTR [edx+0x2be87e54]
  42dc36:	test   DWORD PTR [eax],esi
  42dc38:	scas   al,BYTE PTR es:[edi]
  42dc39:	mov    bh,BYTE PTR [ebx+0x4a]
  42dc3c:	mov    gs,edx
  42dc3e:	inc    esi
  42dc3f:	mov    al,0xa3
  42dc41:	(bad)  
  42dc42:	jne    0x42dc15
  42dc44:	jne    0x42dcc2
  42dc46:	ins    DWORD PTR es:[edi],dx
  42dc47:	sti    
  42dc48:	int    0xc7
  42dc4a:	xchg   BYTE PTR [eax-0x2b],bh
  42dc4d:	lds    edx,FWORD PTR [edi]
  42dc4f:	inc    edi
  42dc50:	cmp    BYTE PTR [edi-0x29cd6399],ah
  42dc56:	jl     0x42dcba
  42dc58:	sti    
  42dc59:	sub    al,0xbd
  42dc5b:	stos   BYTE PTR es:[edi],al
  42dc5c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42dc5d:	fsubr  DWORD PTR [edi-0x6b7d5bd9]
  42dc63:	imul   eax,DWORD PTR ds:0x35085ee9,0xffffff98
  42dc6a:	icebp  
  42dc6b:	nop
  42dc6c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42dc6d:	mov    ch,BYTE PTR [esi+0x58a4467b]
  42dc73:	(bad)  
  42dc74:	and    esi,DWORD PTR [eax]
  42dc76:	sbb    eax,0x17e9d444
  42dc7b:	clc    
  42dc7c:	inc    ecx
  42dc7d:	dec    esi
  42dc7e:	sub    ebp,DWORD PTR [ebp+ecx*4+0x32]
  42dc82:	inc    ebp
  42dc83:	pushf  
  42dc84:	lahf   
  42dc85:	inc    eax
  42dc86:	dec    ebp
  42dc87:	iret   
  42dc88:	shl    dl,1
  42dc8a:	(bad)  
  42dc8b:	call   DWORD PTR [ebx-0x12a95ef7]
  42dc91:	mov    al,ds:0xc9a4641f
  42dc96:	pop    esp
  42dc97:	fnstenv [esi+0x3]
  42dc9a:	and    DWORD PTR [ecx],ebx
  42dc9c:	or     ebp,DWORD PTR [esi+eiz*1-0x2e15261a]
  42dca3:	jle    0x42dc77
  42dca5:	daa    
  42dca6:	add    cl,BYTE PTR [ebx-0x7ac3b6ab]
  42dcac:	gs inc ebp
  42dcae:	and    ebx,DWORD PTR [edi+0x1eaa6a2b]
  42dcb4:	mov    eax,ds:0xef7cf5f4
  42dcb9:	push   eax
  42dcba:	cmp    al,0x79
  42dcbc:	pop    ds
  42dcbd:	aam    0xab
  42dcbf:	or     eax,0x8b1f14e4
  42dcc4:	sbb    ah,BYTE PTR ss:[ebp-0x787e4efa]
  42dccb:	mov    ebp,0xcba2c7cf
  42dcd0:	out    0xd8,eax
  42dcd2:	outs   dx,BYTE PTR ds:[esi]
  42dcd3:	mov    ebx,DWORD PTR [edx]
  42dcd5:	jl     0x42dcd0
  42dcd7:	(bad)  
  42dcd8:	xor    al,0x1e
  42dcda:	imul   ecx,DWORD PTR [ebp+0x66],0xfbeffa6c
  42dce1:	push   cs
  42dce2:	inc    esi
  42dce3:	imul   edi,DWORD PTR [edi+edx*1-0x1],0x892316d6
  42dceb:	mov    ds:0x3623350c,eax
  42dcf0:	jecxz  0x42dcde
  42dcf2:	lods   eax,DWORD PTR ds:[esi]
  42dcf3:	ss aas 
  42dcf5:	push   ss
  42dcf6:	ins    DWORD PTR es:[edi],dx
  42dcf7:	sbb    ebp,DWORD PTR [edx+ebx*1]
  42dcfa:	jecxz  0x42dd4e
  42dcfc:	call   0xaf678a8c
  42dd01:	fcmovb st,st(5)
  42dd03:	loope  0x42dd08
  42dd05:	xor    eax,0xe097b4b5
  42dd0a:	mov    eax,DWORD PTR [esi+0x34]
  42dd0d:	(bad)  
  42dd0e:	outs   dx,DWORD PTR ds:[si]
  42dd10:	pop    esp
  42dd11:	push   0x6c7c8d09
  42dd16:	out    0x98,eax
  42dd18:	add    eax,0x909d0e25
  42dd1d:	xor    DWORD PTR [edx+0x2b85f170],0xffffffd9
  42dd24:	xchg   edx,eax
  42dd25:	pop    ds
  42dd26:	sbb    DWORD PTR [esi-0x49e150c3],esp
  42dd2c:	(bad)  
  42dd2d:	or     eax,0x38fee17b
  42dd32:	jge    0x42dd79
  42dd34:	mov    bh,0xa7
  42dd36:	adc    ah,BYTE PTR [ebp+ebx*8+0x30]
  42dd3a:	mov    edi,0x3f050fe3
  42dd3f:	retf   
  42dd40:	fcomi  st,st(7)
  42dd42:	jae    0x42dccc
  42dd44:	aas    
  42dd45:	out    dx,eax
  42dd46:	mov    ebx,0x2ef51e1e
  42dd4b:	push   edx
  42dd4c:	outs   dx,BYTE PTR ds:[esi]
  42dd4d:	(bad)  
  42dd4e:	push   ds
  42dd4f:	loopne 0x42dd0f
  42dd51:	adc    DWORD PTR [edx],ebp
  42dd53:	xchg   ebp,eax
  42dd54:	and    edx,DWORD PTR [esi-0x22bee793]
  42dd5a:	aas    
  42dd5b:	enter  0x59d2,0x6d
  42dd5f:	cmp    DWORD PTR [edx+0x2c],ebx
  42dd62:	xchg   ebx,eax
  42dd63:	out    0xd1,eax
  42dd65:	mov    ds:0x10cce5e,al
  42dd6a:	push   0xfd32e4ec
  42dd6f:	cs sbb al,0xe2
  42dd72:	cdq    
  42dd73:	jmp    0x8382395f
  42dd78:	in     eax,dx
  42dd79:	rcl    BYTE PTR [edx+0x3d775c10],1
  42dd7f:	pop    ecx
  42dd80:	mov    fs,WORD PTR [ebx+0x50]
  42dd83:	pop    esp
  42dd84:	aam    0x27
  42dd86:	adc    cl,BYTE PTR [ecx+0x30]
  42dd89:	rol    DWORD PTR [ecx],0x87
  42dd8c:	in     al,0xd1
  42dd8e:	cli    
  42dd8f:	or     DWORD PTR [edi+0x68be6e5a],esp
  42dd95:	pop    esp
  42dd96:	adc    BYTE PTR ds:0x106c0c53,ah
  42dd9c:	(bad)  [edi+ebp*8+0x7f4b1dd8]
  42dda3:	cwde   
  42dda4:	sbb    eax,0x1b6567ad
  42dda9:	xor    al,0xf6
  42ddab:	dec    edi
  42ddac:	aam    0xca
  42ddae:	outs   dx,BYTE PTR ds:[esi]
  42ddaf:	lea    ebp,[esi]
  42ddb1:	(bad)  [ebp-0x62f87c87]
  42ddb7:	mov    dl,0x35
  42ddb9:	push   esi
  42ddba:	xlat   BYTE PTR ds:[ebx]
  42ddbb:	mov    eax,edx
  42ddbd:	mov    ch,0xc9
  42ddbf:	xchg   ebp,eax
  42ddc0:	inc    ebx
  42ddc1:	inc    esp
  42ddc2:	in     al,dx
  42ddc3:	mov    bl,0x3c
  42ddc5:	xchg   edi,eax
  42ddc6:	loop   0x42de22
  42ddc8:	mov    al,ds:0xa33ec191
  42ddcd:	pop    ss
  42ddce:	xchg   ebx,eax
  42ddcf:	icebp  
  42ddd0:	xor    DWORD PTR [edx+0x2d],ecx
  42ddd3:	mov    ds:0x647877c1,eax
  42ddd8:	xor    esp,edx
  42ddda:	jge    0x42de04
  42dddc:	sub    al,0xb3
  42ddde:	daa    
  42dddf:	popa   
  42dde0:	mov    bl,0x8b
  42dde2:	dec    ecx
  42dde3:	cdq    
  42dde4:	push   cs
  42dde5:	pop    ss
  42dde6:	call   0x6ea1287a
  42ddeb:	jmp    0x4d1b:0xe89f0de
  42ddf2:	dec    esi
  42ddf3:	daa    
  42ddf4:	test   eax,0x6c748125
  42ddf9:	push   cs
  42ddfa:	rcl    DWORD PTR [edx],cl
  42ddfc:	sub    BYTE PTR [edx+edi*1],dl
  42ddff:	and    edi,DWORD PTR [esi-0xdfd56f4]
  42de05:	jnp    0x42de04
  42de07:	cmp    edi,eax
  42de09:	jl     0x42de34
  42de0b:	jmp    0x42de67
  42de0d:	inc    edx
  42de0e:	and    eax,0x25d41e11
  42de13:	mov    WORD PTR [ebx-0x19],cs
  42de16:	cdq    
  42de17:	jmp    0xf76b:0x6070a56a
  42de1e:	pop    esp
  42de1f:	aaa    
  42de20:	push   ebp
  42de21:	sbb    BYTE PTR [ebp+eiz*2-0x3d],ah
  42de25:	outs   dx,BYTE PTR ds:[esi]
  42de26:	jle    0x42ddb9
  42de28:	sbb    eax,0x2189ecf9
  42de2d:	hlt    
  42de2e:	or     eax,0x4408552b
  42de33:	mov    al,0x70
  42de35:	repz cmp esp,DWORD PTR [ebp+eiz*1+0x5e]
  42de3a:	mov    ch,0x5
  42de3c:	jecxz  0x42de7f
  42de3e:	adc    ch,BYTE PTR [eax]
  42de40:	retf   
  42de41:	cld    
  42de42:	out    dx,eax
  42de43:	inc    ecx
  42de44:	nop
  42de45:	mov    ds:0x47ba9d88,al
  42de4a:	daa    
  42de4b:	push   ebp
  42de4c:	push   edi
  42de4d:	jmp    0x42de47
  42de4f:	sahf   
  42de50:	out    0x9c,eax
  42de52:	les    esp,FWORD PTR [edi-0x19]
  42de55:	out    dx,al
  42de56:	xor    bl,BYTE PTR [ecx-0x24cf13bd]
  42de5c:	xor    eax,0x329b1643
  42de61:	loop   0x42debd
  42de63:	xor    cl,BYTE PTR [eax]
  42de65:	stc    
  42de66:	xor    DWORD PTR [esi],0xbe05e809
  42de6c:	ret    0x33a3
  42de6f:	xor    BYTE PTR ds:[edi],ah
  42de72:	ror    bl,0x1d
  42de75:	pop    es
  42de76:	outs   dx,BYTE PTR ds:[esi]
  42de77:	fst    DWORD PTR [edi]
  42de79:	mov    dl,BYTE PTR [ecx]
  42de7b:	and    edi,eax
  42de7d:	jg     0x42defc
  42de7f:	add    cl,BYTE PTR [esi]
  42de81:	je     0x42de42
  42de83:	rcr    BYTE PTR [ebx],1
  42de85:	out    0xac,eax
  42de87:	cmc    
  42de88:	jecxz  0x42de4b
  42de8a:	jno    0x42de58
  42de8c:	in     eax,0x2e
  42de8e:	imul   esp,edx,0x3
  42de91:	lahf   
  42de92:	in     eax,0x20
  42de94:	jmp    0x112e:0xea58d143
  42de9b:	xchg   ebx,eax
  42de9c:	into   
  42de9d:	scas   eax,DWORD PTR es:[edi]
  42de9e:	mov    eax,0x963ce0d3
  42dea3:	fst    st(5)
  42dea5:	xor    bh,BYTE PTR [ecx+0x1cb647b9]
  42deab:	cs sbb al,0xe2
  42deae:	and    al,0xde
  42deb0:	fxch   st(4)
  42deb2:	mov    dl,0x6d
  42deb4:	inc    esi
  42deb5:	inc    edx
  42deb6:	das    
  42deb7:	xor    DWORD PTR [ecx],ecx
  42deb9:	mov    cl,0xed
  42debb:	retf   0xe9ea
  42debe:	inc    eax
  42debf:	out    dx,al
  42dec0:	or     edi,ecx
  42dec2:	push   edi
  42dec3:	dec    edi
  42dec4:	push   eax
  42dec5:	xchg   edx,eax
  42dec6:	ret    
  42dec7:	pop    ds
  42dec8:	mov    al,0x65
  42deca:	es or  eax,0x4ac973e6
  42ded0:	xchg   esi,eax
  42ded1:	inc    esp
  42ded2:	inc    esi
  42ded3:	fwait
  42ded4:	add    ch,cl
  42ded6:	fwait
  42ded7:	xor    al,0x6d
  42ded9:	and    DWORD PTR [ebp+0x76619852],ebx
  42dedf:	lea    eax,[ebx]
  42dee1:	mov    dl,0x70
  42dee3:	out    dx,al
  42dee4:	add    DWORD PTR [edi+edx*1+0x739bc604],esp
  42deeb:	dec    edi
  42deec:	shr    BYTE PTR [eax+0x66ca9bc1],1
  42def2:	cdq    
  42def3:	(bad)  
  42def4:	push   ecx
  42def5:	xbegin 0xb8dea678
  42defb:	test   dl,dl
  42defd:	iret   
  42defe:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42deff:	inc    BYTE PTR [esi]
  42df01:	cmp    DWORD PTR [edx],edi
  42df03:	mov    DWORD PTR [esi+0x22599049],0x3fc8bdbf
  42df0d:	cmp    eax,0xbc77ab59
  42df12:	ins    DWORD PTR es:[edi],dx
  42df13:	pop    ebx
  42df14:	xor    al,0x5d
  42df16:	inc    edi
  42df17:	jp     0x42df68
  42df19:	es cmp eax,0xcc04acac
  42df1f:	rcr    DWORD PTR [edi+0x2404e37],cl
  42df25:	ins    BYTE PTR es:[edi],dx
  42df26:	int3   
  42df27:	pushf  
  42df28:	cmp    DWORD PTR [ecx+0x6b95bbaf],ebp
  42df2e:	addr16 dec esp
  42df30:	retf   
  42df31:	fidiv  WORD PTR [ecx+eiz*1]
  42df34:	cmp    eax,0x460c0c0d
  42df39:	push   ds
  42df3a:	jno    0x42dee4
  42df3c:	ret    
  42df3d:	and    eax,esp
  42df3f:	ficom  DWORD PTR [edi+0x3a123ad4]
  42df45:	gs mov esi,0xf4e0c11a
  42df4b:	test   ah,0xdf
  42df4e:	sbb    ecx,DWORD PTR [ebx]
  42df50:	inc    esp
  42df51:	lods   al,BYTE PTR ds:[esi]
  42df52:	aad    0x62
  42df54:	pusha  
  42df55:	jnp    0x42df44
  42df57:	add    DWORD PTR [esi-0x434ec1e7],esp
  42df5d:	push   DWORD PTR [edx]
  42df5f:	mov    ebx,0x8157e275
  42df64:	jp     0x42df10
  42df66:	popf   
  42df67:	sub    BYTE PTR ds:0x322e3422,bl
  42df6d:	aam    0xaa
  42df6f:	pop    ds
  42df70:	fcom   QWORD PTR [ebx]
  42df72:	in     eax,dx
  42df73:	aaa    
  42df74:	sbb    bl,ah
  42df76:	and    DWORD PTR [ebx-0x27d35883],edi
  42df7c:	dec    esp
  42df7d:	aas    
  42df7e:	xor    edx,edx
  42df80:	xchg   DWORD PTR [ecx-0x7c],esi
  42df83:	dec    ebx
  42df84:	jmp    0x496f:0x1b1764b0
  42df8b:	shr    DWORD PTR [eax-0x1329bfe5],1
  42df91:	data16 sub dh,ah
  42df94:	dec    edi
  42df95:	mov    esi,0x66b3f22c
  42df9a:	out    dx,al
  42df9b:	jle    0x42df57
  42df9d:	fsubrp st(7),st
  42df9f:	dec    ebx
  42dfa0:	shl    DWORD PTR [ebx-0x17667e42],0x9
  42dfa7:	ror    DWORD PTR [ebp-0x47],0x71
  42dfab:	jmp    0x42dfe9
  42dfad:	enter  0xc6b3,0xb1
  42dfb1:	les    ebx,FWORD PTR [eax]
  42dfb3:	call   esi
  42dfb5:	mov    edx,0x53c3ca01
  42dfba:	jecxz  0x42dfa5
  42dfbc:	loopne 0x42dfac
  42dfbe:	ret    
  42dfbf:	xlat   BYTE PTR ds:[ebx]
  42dfc0:	dec    esp
  42dfc1:	fstp   DWORD PTR [ebp+0x4faff1e5]
  42dfc7:	add    DWORD PTR [edi],edi
  42dfc9:	aad    0xc2
  42dfcb:	leave  
  42dfcc:	add    BYTE PTR ds:0x5be31c23,dh
  42dfd2:	nop
  42dfd3:	call   0x4ae3:0xcd890808
  42dfda:	imul   esi,ecx,0xd
  42dfdd:	dec    esp
  42dfde:	adc    edx,ebx
  42dfe0:	push   ecx
  42dfe1:	pmaxsw mm2,QWORD PTR [esi+0x17eca953]
  42dfe8:	into   
  42dfe9:	pop    es
  42dfea:	cmp    DWORD PTR [esi+ecx*8-0x2],0x3f2a03a1
  42dff2:	loop   0x42e003
  42dff4:	pop    es
  42dff5:	xchg   edx,eax
  42dff6:	js     0x42e074
  42dff8:	sub    al,0xed
  42dffa:	ins    DWORD PTR es:[edi],dx
  42dffb:	iret   
  42dffc:	sbb    eax,0xf7c97ce4
  42e001:	retf   
  42e002:	call   0xec1da7e2
  42e007:	xor    al,BYTE PTR [esi]
  42e009:	fld    DWORD PTR [edi+0x79]
  42e00c:	jp     0x42dfea
  42e00e:	add    BYTE PTR [esp+ecx*8-0x10],0x80
  42e013:	aad    0xf8
  42e015:	out    dx,eax
  42e016:	mov    eax,0x5a693f76
  42e01c:	loopne 0x42e08d
  42e01e:	cmp    edi,esi
  42e020:	shl    BYTE PTR [edi-0x2f],1
  42e023:	adc    dh,BYTE PTR [edi+0x70]
  42e026:	ja     0x42dfd3
  42e028:	add    esi,edx
  42e02a:	and    eax,0x383f4a6
  42e02f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42e030:	mov    ch,0x53
  42e032:	rcr    esp,0xdc
  42e035:	inc    ebx
  42e036:	or     al,BYTE PTR [ecx]
  42e038:	mov    DWORD PTR [edx+0x364a39cf],edx
  42e03e:	xchg   edi,eax
  42e03f:	out    0xaf,al
  42e041:	push   ecx
  42e042:	jbe    0x42e022
  42e044:	and    eax,0xe2c49a94
  42e049:	dec    esp
  42e04a:	adc    DWORD PTR [edi],eax
  42e04c:	cmp    dl,BYTE PTR [eax+0x3c]
  42e04f:	lods   al,BYTE PTR ds:[esi]
  42e050:	inc    ecx
  42e051:	jne    0x42e088
  42e053:	mov    al,ds:0xd7074488
  42e058:	mov    edx,0xe6a3debe
  42e05d:	aaa    
  42e05e:	ffreep st(5)
  42e060:	cwde   
  42e061:	and    al,ch
  42e063:	xchg   esi,ecx
  42e065:	dec    eax
  42e066:	retf   
  42e067:	call   0x83d17261
  42e06c:	and    BYTE PTR [ecx+0x1e],0x65
  42e070:	jmp    0x42e09e
  42e072:	mov    al,0xa4
  42e074:	mov    ebx,0x8be87872
  42e079:	into   
  42e07a:	jp     0x42e00b
  42e07c:	imul   ebp,edi,0x24
  42e07f:	packsswb mm1,QWORD PTR [eax+0xb10d4b0]
  42e086:	pop    ds
  42e087:	or     al,0xd0
  42e089:	fcom   DWORD PTR [esi+0x26]
  42e08c:	lods   eax,DWORD PTR ds:[esi]
  42e08d:	repz push eax
  42e08f:	mov    DWORD PTR [ebp+edi*2-0x4e],ebx
  42e093:	iret   
  42e094:	add    BYTE PTR [ecx-0x2d],0xd1
  42e098:	rcl    BYTE PTR [ecx-0xd],0x2d
  42e09c:	jmp    0x9e9a:0x1da68bcb
  42e0a3:	daa    
  42e0a4:	and    al,0x4
  42e0a6:	loop   0x42e07e
  42e0a8:	test   DWORD PTR [ecx-0x80],ebp
  42e0ab:	dec    esi
  42e0ac:	add    ebp,ebx
  42e0ae:	fstp   QWORD PTR [edx]
  42e0b0:	dec    esp
  42e0b1:	lock and ch,BYTE PTR [eax+0x6e]
  42e0b5:	pop    ebp
  42e0b6:	aam    0x2c
  42e0b8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42e0b9:	cmp    eax,0xe491f113
  42e0be:	mov    esi,0x91bc356d
  42e0c3:	cwde   
  42e0c4:	push   ecx
  42e0c5:	ja     0x42e0f9
  42e0c7:	leave  
  42e0c8:	cmc    
  42e0c9:	mov    ds:0xfdb69a97,eax
  42e0ce:	daa    
  42e0cf:	jne    0x42e10f
  42e0d1:	in     eax,0x98
  42e0d3:	push   cs
  42e0d4:	out    0xd3,eax
  42e0d6:	test   BYTE PTR [edx],0xe5
  42e0d9:	inc    ecx
  42e0da:	mov    ds:0x5a8efe2f,al
  42e0df:	dec    ecx
  42e0e0:	dec    eax
  42e0e1:	mov    al,0x81
  42e0e3:	std    
  42e0e4:	pop    edx
  42e0e5:	inc    ebx
  42e0e6:	lea    edx,[eax+0x74]
  42e0e9:	scas   eax,DWORD PTR es:[edi]
  42e0ea:	or     al,0x85
  42e0ec:	mov    bl,0xc5
  42e0ee:	sbb    esi,DWORD PTR [ebx]
  42e0f0:	or     DWORD PTR [ecx+0x20cf94cf],esi
  42e0f6:	test   BYTE PTR [ebp-0x2e],bl
  42e0f9:	shl    DWORD PTR [ebx-0xd],0x64
  42e0fd:	sub    BYTE PTR [edi-0x7ca72b0e],bl
  42e103:	fwait
  42e104:	jmp    0xbe90d49
  42e109:	jns    0x42e126
  42e10b:	mov    dl,dh
  42e10d:	or     eax,0x6b0dd0e5
  42e112:	jne    0x42e153
  42e114:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42e115:	in     al,0x28
  42e117:	cmp    esp,DWORD PTR [ebp+0x36]
  42e11a:	ficomp WORD PTR [edx-0x5b1076eb]
  42e120:	jmp    0x42e0d5
  42e122:	mov    ecx,0x13aebaad
  42e127:	imul   edx,DWORD PTR [ebx-0x15],0xf37ad079
  42e12e:	loop   0x42e134
  42e130:	and    edi,DWORD PTR [esi+0x12f138df]
  42e136:	lods   eax,DWORD PTR ds:[esi]
  42e137:	xchg   ebp,eax
  42e138:	cmp    eax,0xfd95fd2c
  42e13d:	mov    eax,0xd51d90f9
  42e142:	xchg   ebx,eax
  42e143:	fcom   st(3)
  42e145:	sbb    eax,ebx
  42e147:	jns    0x42e17b
  42e149:	cwde   
  42e14a:	lods   eax,DWORD PTR ds:[esi]
  42e14b:	adc    DWORD PTR [edx],0xffffff9f
  42e14e:	pop    ebp
  42e14f:	add    DWORD PTR [ebp+edx*8+0x7e],esi
  42e153:	cld    
  42e154:	adc    bh,BYTE PTR [edi-0x4e]
  42e157:	mov    esi,0x7ac8748b
  42e15c:	xor    BYTE PTR [edx],al
  42e15e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42e15f:	call   0x5a5b:0x6c1e08a4
  42e166:	inc    ebx
  42e167:	(bad)  
  42e168:	(bad)  
  42e169:	(bad)  
  42e16a:	cwde   
  42e16b:	fst    QWORD PTR [esi]
  42e16d:	xchg   edi,eax
  42e16e:	mov    bl,0xc0
  42e170:	(bad)  
  42e172:	inc    ebx
  42e173:	sbb    DWORD PTR [edx+0x65ecc04a],eax
  42e179:	xchg   ebp,eax
  42e17a:	mov    ecx,0x1c532e4d
  42e17f:	cmp    eax,0x95e46723
  42e184:	test   DWORD PTR [eax+0x17],edi
  42e187:	pop    ds
  42e188:	mov    ebx,ecx
  42e18a:	pushf  
  42e18b:	jge    0x42e1f6
  42e18d:	push   edi
  42e18e:	dec    ecx
  42e18f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42e190:	sbb    edx,DWORD PTR [edi-0xc]
  42e193:	xlat   BYTE PTR ds:[ebx]
  42e194:	fsubr  QWORD PTR [ebx+eiz*2]
  42e197:	xor    al,bh
  42e199:	mov    ebx,ecx
  42e19b:	aas    
  42e19c:	loopne 0x42e215
  42e19e:	bound  edi,QWORD PTR [edx-0x4a]
  42e1a1:	inc    esp
  42e1a2:	lock dec ebp
  42e1a4:	add    bl,dh
  42e1a6:	pop    ebx
  42e1a7:	fsave  [esi+0x79113de7]
  42e1ae:	or     BYTE PTR [edi+0x3c3931d9],dl
  42e1b4:	popa   
  42e1b5:	out    0x92,al
  42e1b7:	sbb    ch,dl
  42e1b9:	or     esp,DWORD PTR [edi+edi*8+0x35f715d0]
  42e1c0:	inc    ecx
  42e1c1:	push   esi
  42e1c2:	mov    ebp,ebp
  42e1c4:	jmp    0x9195:0xf23cae19
  42e1cb:	mov    eax,ds:0xc38305c6
  42e1d0:	mov    WORD PTR [esi+0x60],ss
  42e1d3:	mov    edi,0x6222c765
  42e1d8:	jge    0x42e16d
  42e1da:	add    esp,edi
  42e1dc:	mov    bl,BYTE PTR [eax-0x7241a560]
  42e1e2:	push   0xffffff99
  42e1e4:	sahf   
  42e1e5:	jmp    0xd0afce62
  42e1ea:	or     al,0xec
  42e1ec:	push   eax
  42e1ed:	popa   
  42e1ee:	and    al,0x2d
  42e1f0:	pop    edx
  42e1f1:	xchg   DWORD PTR [edx+ebx*8-0x7f5ed48a],ecx
  42e1f8:	mov    al,0xf5
  42e1fa:	ret    0x4b46
  42e1fd:	push   0xffffffc3
  42e1ff:	or     bl,BYTE PTR [esi+esi*1-0x440e09a2]
  42e206:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42e207:	jmp    0x42e196
  42e209:	xchg   esp,eax
  42e20a:	mov    eax,ds:0xab98fc57
  42e20f:	jbe    0x42e262
  42e211:	jbe    0x42e223
  42e213:	push   esi
  42e214:	cwde   
  42e215:	test   BYTE PTR [ecx+0x29],ch
  42e218:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42e219:	push   edi
  42e21a:	out    0x66,eax
  42e21c:	cmp    al,0x5b
  42e21e:	dec    ecx
  42e21f:	mov    esp,0x69e1520c
  42e224:	jnp    0x42e1cb
  42e226:	cli    
  42e227:	sti    
  42e228:	fs aad 0x55
  42e22b:	adc    DWORD PTR [ebp+0x7d],ebx
  42e22e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42e22f:	jle    0x42e21c
  42e231:	mov    DWORD PTR [ebx+edi*2-0x2b],ebx
  42e235:	mov    ecx,0x6b3e015c
  42e23a:	mov    cl,0xfe
  42e23c:	mov    ds:0x56ec5f29,al
  42e241:	pop    ecx
  42e242:	push   esp
  42e243:	mov    DWORD PTR [eax+0x71f97ca5],ecx
  42e249:	scas   al,BYTE PTR es:[edi]
  42e24a:	outs   dx,DWORD PTR ds:[esi]
  42e24b:	sbb    BYTE PTR [edx],bh
  42e24d:	inc    eax
  42e24e:	popa   
  42e24f:	imul   BYTE PTR [eax+0x24a24040]
  42e255:	fmulp  st(5),st
  42e257:	loopne 0x42e1e3
  42e259:	es add ah,cl
  42e25c:	add    al,BYTE PTR [esp+ebp*1+0x13]
  42e260:	mov    dl,0x3
  42e262:	int3   
  42e263:	pop    esi
  42e264:	icebp  
  42e265:	dec    ebp
  42e266:	arpl   ax,sp
  42e268:	sbb    ebx,edx
  42e26a:	cmp    eax,0x42a19112
  42e26f:	sbb    BYTE PTR [eax+ecx*1-0x4e],bh
  42e273:	imul   ecx,DWORD PTR [edi],0x3c22910e
  42e279:	push   eax
  42e27a:	pusha  
  42e27b:	fsub   QWORD PTR [eax+0x7e]
  42e27e:	das    
  42e27f:	jmp    0x42e2a0
  42e281:	es cs test eax,edx
  42e285:	mov    ch,0xaa
  42e287:	jae    0x42e258
  42e289:	(bad)  
  42e28a:	inc    DWORD PTR [edx]
  42e28c:	clc    
  42e28d:	das    
  42e28e:	call   0xfb30:0x486816f2
  42e295:	xchg   edx,eax
  42e296:	cmp    ebp,DWORD PTR [ebx+0x4654936e]
  42e29c:	and    ah,BYTE PTR [ecx-0x529e8bd0]
  42e2a2:	cmp    eax,0x7289594f
  42e2a7:	or     eax,0x9d5553ff
  42e2ac:	ror    BYTE PTR [edi+eax*1+0x16],1
  42e2b0:	adc    al,0xc1
  42e2b2:	rcl    DWORD PTR [ebx],0xb9
  42e2b5:	jbe    0x42e273
  42e2b7:	nop
  42e2b8:	push   edx
  42e2b9:	xor    BYTE PTR ds:0xb34a5475,cl
  42e2bf:	inc    ebp
  42e2c0:	arpl   dx,bx
  42e2c2:	add    DWORD PTR [edx],esi
  42e2c4:	cmp    al,0xd8
  42e2c6:	xchg   ebx,eax
  42e2c7:	add    BYTE PTR [edi+edi*1+0x108bb30c],bh
  42e2ce:	push   ss
  42e2cf:	aad    0xf2
  42e2d1:	dec    ecx
  42e2d2:	sbb    BYTE PTR [esi],bl
  42e2d4:	cs out 0x0,al
  42e2d7:	loop   0x42e328
  42e2d9:	and    al,0x14
  42e2db:	fmul   QWORD PTR [edx+0x24]
  42e2de:	cmp    al,0x8d
  42e2e0:	mov    eax,0xa8b3ea3d
  42e2e5:	(bad)  
  42e2e6:	ficomp DWORD PTR [esi-0x5f]
  42e2e9:	jb     0x42e346
  42e2eb:	hlt    
  42e2ec:	mov    BYTE PTR ds:0x46465144,bh
  42e2f2:	test   eax,0x89488d78
  42e2f7:	jl     0x42e369
  42e2f9:	jg     0x42e2af
  42e2fb:	pop    eax
  42e2fc:	fldenv [esi-0x41e96410]
  42e302:	dec    esi
  42e303:	loope  0x42e35f
  42e305:	fs push ebp
  42e307:	cmc    
  42e308:	xor    DWORD PTR [edx+0xb],ebp
  42e30b:	mov    al,ds:0x2c28d679
  42e310:	loopne 0x42e2e2
  42e312:	je     0x42e2ac
  42e314:	xlat   BYTE PTR ds:[ebx]
  42e315:	je     0x42e306
  42e317:	loope  0x42e30b
  42e319:	or     ch,bh
  42e31b:	inc    eax
  42e31c:	repz jb 0x42e309
  42e31f:	mov    DWORD PTR [ebp-0x527eb753],eax
  42e325:	push   esp
  42e326:	sbb    eax,0x7afcf99b
  42e32b:	lods   al,BYTE PTR ds:[esi]
  42e32c:	xor    ebp,esi
  42e32e:	cdq    
  42e32f:	xchg   edx,eax
  42e330:	pop    ds
  42e331:	xchg   di,ax
  42e333:	xor    esi,DWORD PTR [edi+0x7f]
  42e336:	jge    0x42e390
  42e338:	jno    0x42e2c3
  42e33a:	ds sbb bh,al
  42e33d:	jne    0x42e2f4
  42e33f:	sub    cl,cl
  42e341:	xor    DWORD PTR [ebx],edx
  42e343:	shl    BYTE PTR [esi+0x52],0x67
  42e347:	into   
  42e348:	sub    al,0xff
  42e34a:	dec    esi
  42e34b:	inc    edi
  42e34c:	mov    al,ds:0x401a3478
  42e351:	xchg   edi,eax
  42e352:	add    BYTE PTR [ecx-0x64],cl
  42e355:	lock movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42e357:	xchg   ecx,eax
  42e358:	iret   
  42e359:	loop   0x42e3d5
  42e35b:	sbb    ebx,DWORD PTR [edi+0x35]
  42e35e:	inc    esp
  42e35f:	xor    edi,DWORD PTR [esi-0x5ff1df0b]
  42e365:	adc    al,0x77
  42e367:	xchg   ebp,eax
  42e368:	jg     0x42e3e9
  42e36a:	in     al,0xf
  42e36c:	aad    0x2b
  42e36e:	push   ebp
  42e36f:	out    dx,al
  42e370:	enter  0x64f8,0x1b
  42e374:	shr    BYTE PTR [eax],0x2b
  42e377:	mov    dl,0xe1
  42e379:	test   BYTE PTR [ecx-0x17c6f211],dh
  42e37f:	(bad)  
  42e380:	push   cs
  42e381:	xor    ecx,DWORD PTR [edx]
  42e383:	xchg   esi,eax
  42e384:	test   DWORD PTR [edi-0x42a10b1],0xe4d227f2
  42e38e:	mov    esi,0xf3ea1519
  42e393:	into   
  42e394:	call   0xe38f:0xc27df5aa
  42e39b:	mov    bh,0x2e
  42e39d:	ret    
  42e39e:	pop    ss
  42e39f:	xor    eax,0x7377ae72
  42e3a4:	jne    0x42e3b4
  42e3a6:	and    BYTE PTR ds:0x35679df5,0x65
  42e3ad:	cmp    DWORD PTR [ebp-0x10d18be7],eax
  42e3b3:	pushf  
  42e3b4:	pop    esp
  42e3b5:	es mov bl,0x6e
  42e3b8:	iret   
  42e3b9:	sbb    cl,dl
  42e3bb:	in     al,0x7c
  42e3bd:	jge    0x42e37a
  42e3bf:	test   eax,0x9c3c8773
  42e3c4:	add    DWORD PTR [esi-0x6],ebx
  42e3c7:	outs   dx,BYTE PTR ds:[esi]
  42e3c8:	fwait
  42e3c9:	int    0x48
  42e3cb:	leave  
  42e3cc:	xchg   esi,eax
  42e3cd:	pop    es
  42e3ce:	jne    0x42e3f4
  42e3d0:	repnz and esp,esp
  42e3d3:	and    al,0xc1
  42e3d5:	test   ebx,eax
  42e3d7:	repnz add dl,BYTE PTR [edi]
  42e3da:	retf   0xc7d8
  42e3dd:	add    ch,BYTE PTR ds:0xfde4ee02
  42e3e3:	mov    esi,0x28bdaada
  42e3e8:	mov    edx,0x4d249004
  42e3ed:	mov    ch,0x1f
  42e3ef:	push   esp
  42e3f0:	push   edi
  42e3f1:	sub    ebx,edx
  42e3f3:	inc    esi
  42e3f4:	mov    ebp,0x874b6931
  42e3f9:	es pop ebx
  42e3fb:	push   edx
  42e3fc:	ds test eax,0xd2b41b21
  42e402:	mov    cl,0xd9
  42e404:	loope  0x42e425
  42e406:	test   BYTE PTR [esi+0x464ae209],dh
  42e40c:	push   0xffffffaf
  42e40e:	imul   ebp,DWORD PTR [edx+0x4a0f354e],0xdb0fe690
  42e418:	sub    DWORD PTR [ebx-0x10acf4e1],edi
  42e41e:	bound  ebx,QWORD PTR [eax+edi*4+0x2a5e6b43]
  42e425:	fistp  QWORD PTR [ecx]
  42e427:	adc    BYTE PTR [ecx],dl
  42e429:	clc    
  42e42a:	or     edx,0x2a
  42e42d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42e42e:	loope  0x42e485
  42e430:	ja     0x42e463
  42e432:	rcr    dl,0xff
  42e435:	and    eax,0x527a9a64
  42e43a:	into   
  42e43b:	repnz dec edx
  42e43d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42e43e:	outs   dx,DWORD PTR ds:[esi]
  42e43f:	addr16 pop ds
  42e441:	retf   
  42e442:	call   0xb1a1:0xf19dc0cf
  42e449:	sar    DWORD PTR [edx+ebp*2-0x34],cl
  42e44d:	xchg   BYTE PTR [ecx+eiz*4-0x36],ah
  42e451:	enter  0x5652,0xbb
  42e455:	sbb    cl,cl
  42e457:	neg    esp
  42e459:	sbb    eax,0x7947ae48
  42e45e:	sub    eax,0xc754beaa
  42e463:	jmp    0xacb4cee6
  42e468:	sbb    ebp,DWORD PTR [edx+0x5eda201b]
  42e46e:	fstp   TBYTE PTR [eax]
  42e470:	test   al,0xc8
  42e472:	arpl   WORD PTR [ebx-0x30],bx
  42e475:	jbe    0x42e465
  42e477:	je     0x42e46a
  42e479:	out    0x8f,al
  42e47b:	dec    esi
  42e47c:	pop    ecx
  42e47d:	idiv   BYTE PTR [edx-0x39a0d47e]
  42e483:	push   0x5f5402ce
  42e488:	add    ebp,0x8d8a1320
  42e48e:	cld    
  42e48f:	pushf  
  42e490:	bound  ebp,QWORD PTR [edx-0x53]
  42e493:	lock xor eax,0x8ddf5955
  42e499:	push   es
  42e49a:	jmp    0x1e92f9a4
  42e49f:	pusha  
  42e4a0:	rol    al,1
  42e4a2:	jae    0x42e492
  42e4a4:	dec    ecx
  42e4a5:	fwait
  42e4a6:	adc    BYTE PTR [eax],al
  42e4a8:	inc    ecx
  42e4a9:	bnd jle 0x42e4c9
  42e4ac:	xlat   BYTE PTR ds:[ebx]
  42e4ad:	pop    esi
  42e4ae:	ins    DWORD PTR es:[edi],dx
  42e4af:	popa   
  42e4b0:	dec    esi
  42e4b1:	pop    ecx
  42e4b2:	out    dx,al
  42e4b3:	adc    ah,BYTE PTR [ebx+eax*4]
  42e4b6:	je     0x42e4e3
  42e4b8:	push   ds
  42e4b9:	iret   
  42e4ba:	(bad)  [eax+0x654794e8]
  42e4c0:	aam    0x41
  42e4c2:	mov    ecx,0xfed5db2b
  42e4c7:	add    eax,0xa4064748
  42e4cc:	mov    ch,0xc2
  42e4ce:	pop    ecx
  42e4cf:	jno    0x42e475
  42e4d1:	push   esp
  42e4d2:	inc    ebx
  42e4d3:	rcr    BYTE PTR [esp+ebp*2+0x1],1
  42e4d7:	daa    
  42e4d8:	pop    ss
  42e4d9:	int    0xa6
  42e4db:	into   
  42e4dc:	xor    DWORD PTR [esi+0x79e12903],ebx
  42e4e2:	mov    ecx,0x9bdbb454
  42e4e7:	inc    ebp
  42e4e8:	in     al,dx
  42e4e9:	imul   ebp,eax,0x8cf4a4e6
  42e4ef:	fiadd  DWORD PTR [esi]
  42e4f1:	adc    BYTE PTR [eax],dh
  42e4f3:	imul   eax,DWORD PTR [ebx+0x45371d4b],0x78
  42e4fa:	rol    DWORD PTR [ecx+edx*1+0x72590ece],1
  42e501:	or     edx,DWORD PTR [edi]
  42e503:	mov    DWORD PTR [ecx-0x6137b65e],edi
  42e509:	test   DWORD PTR [edx+0x16c73515],ecx
  42e50f:	push   edi
  42e510:	jae    0x42e4d9
  42e512:	xlat   BYTE PTR ds:[ebx]
  42e513:	and    cl,BYTE PTR [esi+0x2bac7404]
  42e519:	lock cwde 
  42e51b:	popf   
  42e51c:	pop    ebp
  42e51d:	sti    
  42e51e:	in     al,dx
  42e51f:	push   ecx
  42e520:	dec    eax
  42e521:	jecxz  0x42e53b
  42e523:	add    eax,0x80100e18
  42e528:	jp     0x42e504
  42e52a:	mov    bh,0x52
  42e52c:	push   cs
  42e52d:	mov    DWORD PTR [eax+ecx*8-0x2bdd8361],ebp
  42e534:	xor    al,bh
  42e536:	sub    edi,DWORD PTR [ebx]
  42e538:	mov    edx,0x28777519
  42e53d:	(bad)  
  42e53e:	(bad)  
  42e540:	and    BYTE PTR [ebx+0x8f02db9],ch
  42e546:	addr16 clc 
  42e548:	cld    
  42e549:	or     eax,0x87bcc3d8
  42e54e:	pop    eax
  42e54f:	push   esi
  42e550:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42e551:	test   BYTE PTR [edi],bh
  42e553:	sbb    eax,0x85bf4922
  42e558:	ret    
  42e559:	and    DWORD PTR [eax+esi*8-0x69],ecx
  42e55d:	ss cmp eax,0x4d992676
  42e563:	call   0x5027:0x6cc97ac6
  42e56a:	and    edi,edi
  42e56c:	retf   
  42e56d:	in     al,0x75
  42e56f:	lahf   
  42e570:	inc    ecx
  42e571:	sahf   
  42e572:	mov    BYTE PTR [edx+eiz*8-0x22fe8624],bh
  42e579:	jle    0x42e53f
  42e57b:	daa    
  42e57c:	jns    0x42e5eb
  42e57e:	jmp    0xf0648f9e
  42e583:	pop    es
  42e584:	inc    edx
  42e585:	sub    bl,BYTE PTR ds:0xcfeea5cc
  42e58b:	jle    0x42e5da
  42e58d:	push   ds
  42e58e:	or     BYTE PTR [edi],0x5b
  42e591:	pushw  ss
  42e593:	jno    0x42e58f
  42e595:	out    dx,eax
  42e596:	push   eax
  42e597:	xchg   esi,eax
  42e598:	sahf   
  42e599:	iret   
  42e59a:	xchg   edi,eax
  42e59b:	(bad)  
  42e59c:	mov    ds:0xc2ed0eb9,eax
  42e5a1:	xlat   BYTE PTR ds:[ebx]
  42e5a2:	fbld   TBYTE PTR [ebx+edx*8]
  42e5a5:	mov    ?,ecx
  42e5a7:	ret    0x1064
  42e5aa:	mov    esi,0xfb772594
  42e5af:	and    BYTE PTR [eax-0x1e6daacf],dl
  42e5b5:	loope  0x42e537
  42e5b7:	mov    edi,DWORD PTR [edi-0x11]
  42e5ba:	repnz fld DWORD PTR ds:0xd4c3ab85
  42e5c1:	dec    ecx
  42e5c2:	inc    ebx
  42e5c3:	xor    al,0x36
  42e5c5:	add    cl,ah
  42e5c7:	daa    
  42e5c8:	fldcw  WORD PTR [ebp-0x534c168d]
  42e5ce:	sub    eax,0x21530087
  42e5d3:	inc    esi
  42e5d4:	sbb    bl,BYTE PTR [ecx+0x420ec908]
  42e5da:	jle    0x42e611
  42e5dc:	les    edx,FWORD PTR [edx]
  42e5de:	mov    eax,0x5fb5d5ec
  42e5e3:	adc    ebp,DWORD PTR [edx-0x22]
  42e5e6:	xchg   ebp,eax
  42e5e7:	rcl    BYTE PTR [edi+edx*8+0x64],0xc9
  42e5ec:	xor    BYTE PTR [ebp+0x48],0x98
  42e5f0:	cmp    ebx,DWORD PTR [ecx]
  42e5f2:	xor    eax,0xc7df9c4d
  42e5f7:	mov    bh,0xfa
  42e5f9:	mov    eax,DWORD PTR [esi+edx*1+0x6f]
  42e5fd:	aaa    
  42e5fe:	sbb    eax,0xba7a121d
  42e603:	or     al,0xff
  42e605:	in     eax,dx
  42e606:	add    ecx,DWORD PTR [eax-0x1c]
  42e609:	dec    eax
  42e60a:	ret    
  42e60b:	mov    eax,DWORD PTR [edi+ebp*1+0x50fcc18a]
  42e612:	(bad)  
  42e613:	mov    ah,0x27
  42e615:	xrelease mov DWORD PTR [ebp+0x6c],edx
  42e619:	(bad)  
  42e61a:	bound  esp,QWORD PTR [ebp+0x8bb3f35]
  42e620:	stos   DWORD PTR es:[edi],eax
  42e621:	stos   DWORD PTR es:[edi],eax
  42e622:	outs   dx,BYTE PTR ds:[esi]
  42e623:	into   
  42e624:	push   0xf831cf1d
  42e629:	rol    DWORD PTR [ecx+0x3b],0x3a
  42e62d:	int    0x72
  42e62f:	pop    ss
  42e630:	hlt    
  42e631:	nop
  42e632:	dec    edx
  42e633:	ret    
  42e634:	cld    
  42e635:	jecxz  0x42e600
  42e637:	dec    ecx
  42e638:	aaa    
  42e639:	sysexit 
  42e63b:	and    al,0xbd
  42e63d:	ss xchg edi,eax
  42e63f:	pop    eax
  42e640:	inc    edx
  42e641:	xor    ah,ah
  42e643:	shl    BYTE PTR [esi-0x33],1
  42e646:	es dec ebx
  42e648:	sbb    al,0x81
  42e64a:	add    al,0x16
  42e64c:	pop    eax
  42e64d:	cmp    BYTE PTR [ecx-0x49f7b02],bh
  42e653:	ret    
  42e654:	mov    dh,0xee
  42e656:	jg     0x42e617
  42e658:	aas    
  42e659:	mov    ecx,0x76ce28c8
  42e65e:	jnp    0x42e679
  42e660:	mov    ecx,0x601b46c7
  42e665:	adc    al,0xd2
  42e667:	idiv   BYTE PTR [edx-0x474f220b]
  42e66d:	sub    esp,edi
  42e66f:	pop    edx
  42e670:	aam    0x45
  42e672:	in     al,dx
  42e673:	test   al,dl
  42e675:	add    al,0x35
  42e677:	les    edx,FWORD PTR [eax-0x2d]
  42e67a:	in     al,dx
  42e67b:	cmc    
  42e67c:	dec    ebx
  42e67d:	cmp    al,0x8e
  42e67f:	add    ch,BYTE PTR [edx+edx*1+0x4e]
  42e683:	shr    DWORD PTR [ebx+0x48],0x40
  42e687:	jle    0x42e689
  42e689:	ins    DWORD PTR es:[edi],dx
  42e68a:	push   ds
  42e68b:	jo     0x42e670
  42e68d:	push   ax
  42e68f:	mov    dl,0x26
  42e691:	pop    esp
  42e692:	scas   al,BYTE PTR es:[edi]
  42e693:	push   ds
  42e694:	neg    al
  42e696:	and    esp,DWORD PTR ss:[eax]
  42e699:	sub    eax,0x3abbc45
  42e69e:	out    0xdb,eax
  42e6a0:	outs   dx,BYTE PTR ds:[esi]
  42e6a1:	mov    dh,BYTE PTR [ebx+0x69]
  42e6a4:	xor    ch,BYTE PTR [esi]
  42e6a6:	dec    eax
  42e6a7:	jne    0x42e65a
  42e6a9:	sub    eax,0x46312a41
  42e6ae:	or     ecx,DWORD PTR [edi]
  42e6b0:	lds    ebx,FWORD PTR [ebp-0x3d7561c0]
  42e6b6:	mov    cl,0x19
  42e6b8:	mov    eax,ds:0xae49a18d
  42e6bd:	and    al,0x1a
  42e6bf:	das    
  42e6c0:	(bad)  
  42e6c1:	daa    
  42e6c2:	not    BYTE PTR [ebp+0x142edf89]
  42e6c8:	ds std 
  42e6ca:	push   0x4a
  42e6cc:	stos   BYTE PTR es:[edi],al
  42e6cd:	leave  
  42e6ce:	in     eax,dx
  42e6cf:	je     0x42e66d
  42e6d1:	(bad)  
  42e6d2:	jg     0x42e6c2
  42e6d4:	test   al,0xee
  42e6d6:	push   eax
  42e6d7:	sbb    ah,BYTE PTR [esi]
  42e6d9:	mov    edx,0x7f38d8c1
  42e6de:	lods   al,BYTE PTR ds:[esi]
  42e6df:	iret   
  42e6e0:	jecxz  0x42e669
  42e6e2:	bound  ebx,QWORD PTR [ebx+0x758ca27]
  42e6e8:	adc    BYTE PTR [ecx-0x1],dl
  42e6eb:	xchg   DWORD PTR [ebx+edi*2-0x30],edx
  42e6ef:	cmp    DWORD PTR [ecx],0xc8b46a77
  42e6f5:	jge    0x42e70b
  42e6f7:	ins    BYTE PTR es:[edi],dx
  42e6f8:	cmovns ecx,DWORD PTR [ebp+0x6b937521]
  42e6ff:	or     eax,0x3d23ece
  42e704:	outs   dx,DWORD PTR ds:[esi]
  42e705:	stos   DWORD PTR es:[edi],eax
  42e706:	fsubr  QWORD PTR [esi]
  42e708:	push   esp
  42e709:	test   BYTE PTR [ebx],bl
  42e70b:	jns    0x42e746
  42e70d:	mov    ecx,ecx
  42e70f:	mov    bl,0x47
  42e711:	(bad)  
  42e712:	in     eax,dx
  42e713:	inc    ebp
  42e714:	adc    al,0x9f
  42e716:	mov    esi,0x9ae6a210
  42e71b:	xor    ah,BYTE PTR [ebp-0x7d]
  42e71e:	lods   al,BYTE PTR ds:[esi]
  42e71f:	lahf   
  42e720:	stos   BYTE PTR es:[edi],al
  42e721:	rcr    BYTE PTR [ebx+0x5c],cl
  42e724:	xor    esi,esi
  42e726:	test   ax,0xdecb
  42e72a:	(bad)
  42e72d:	sbb    eax,0xae1a12e5
  42e733:	or     al,0x5c
  42e735:	or     ah,BYTE PTR [ebx+0x7721a5c9]
  42e73b:	gs in  al,dx
  42e73d:	pop    esp
  42e73e:	bnd es jbe 0x42e7bb
  42e742:	test   eax,0x974ba161
  42e747:	sbb    eax,0xcbba9e83
  42e74c:	sub    ecx,DWORD PTR [eax]
  42e74e:	imul   eax,DWORD PTR [esp+edi*1-0x77],0xe94a3c32
  42e756:	rcl    al,cl
  42e758:	iret   
  42e759:	push   eax
  42e75a:	rcr    DWORD PTR gs:[ebx-0x17],cl
  42e75e:	jnp    0x42e7df
  42e760:	loop   0x42e73a
  42e762:	push   es
  42e763:	mov    bl,0x7d
  42e765:	retf   
  42e766:	into   
  42e767:	hlt    
  42e768:	outs   dx,DWORD PTR ds:[esi]
  42e769:	xor    bh,BYTE PTR [edx+0x38e9ad41]
  42e76f:	test   eax,0xfcf0655e
  42e774:	adc    al,0x2b
  42e776:	in     eax,dx
  42e777:	cld    
  42e778:	jp     0x42e7f9
  42e77a:	mov    eax,0x7b800e7c
  42e77f:	add    dl,BYTE PTR [esi-0xe]
  42e782:	pop    ecx
  42e783:	cwde   
  42e784:	nop
  42e785:	push   esp
  42e786:	ret    0x4e11
  42e789:	test   BYTE PTR [ebx+0x6f6aeb29],bh
  42e78f:	cmc    
  42e790:	push   ebx
  42e791:	aaa    
  42e792:	pop    edi
  42e793:	add    ch,bh
  42e795:	push   ss
  42e796:	jl     0x42e749
  42e798:	jl     0x42e7dc
  42e79a:	aas    
  42e79b:	int3   
  42e79c:	test   DWORD PTR [ebp-0x2c],ebp
  42e79f:	(bad)  
  42e7a0:	cmp    eax,0x794a359d
  42e7a5:	mov    esp,0xf0b59989
  42e7aa:	fmul   st(4),st
  42e7ac:	inc    DWORD PTR [edx+0x2e]
  42e7af:	scas   eax,DWORD PTR es:[edi]
  42e7b0:	fwait
  42e7b1:	jge    0x42e7f4
  42e7b3:	mov    dh,0xdf
  42e7b5:	adc    ebx,edx
  42e7b7:	popa   
  42e7b8:	popf   
  42e7b9:	cld    
  42e7ba:	pop    ss
  42e7bb:	test   cl,bh
  42e7bd:	pop    esp
  42e7be:	dec    ebx
  42e7bf:	sub    al,0x1f
  42e7c1:	jmp    0x42e755
  42e7c3:	(bad)  
  42e7c4:	dec    ebp
  42e7c5:	sti    
  42e7c6:	adc    BYTE PTR [ebp-0x1f2658b4],ah
  42e7cc:	and    edx,DWORD PTR [edi+0x23b8350c]
  42e7d2:	xchg   BYTE PTR [ebp-0x5e],bh
  42e7d5:	jge    0x42e82b
  42e7d7:	cmp    bl,al
  42e7d9:	mov    edi,0xf2da4776
  42e7de:	mov    esi,0xaa41ec24
  42e7e3:	not    BYTE PTR [ebx]
  42e7e5:	and    DWORD PTR [ecx],edi
  42e7e7:	cmp    edx,DWORD PTR [ebp-0x3f3a51f6]
  42e7ed:	dec    BYTE PTR [esi+0x3a050df2]
  42e7f3:	aad    0x50
  42e7f5:	call   0x8d00ee87
  42e7fa:	mov    esp,0x92f5e00a
  42e7ff:	sti    
  42e800:	ds ss jp 0x42e7cb
  42e804:	or     ch,BYTE PTR [edi+ebp*8+0x71fdd52a]
  42e80b:	mov    dh,0x4e
  42e80d:	jg     0x42e800
  42e80f:	gs mov bh,0xb5
  42e812:	push   0x59
  42e814:	xor    BYTE PTR [edx],0x5
  42e817:	lds    ecx,FWORD PTR ds:0x6e0de22f
  42e81d:	aad    0xbb
  42e81f:	in     al,0xf1
  42e821:	or     DWORD PTR [ebx-0x37],eax
  42e824:	addr16 pop edi
  42e826:	ins    BYTE PTR es:[edi],dx
  42e827:	pop    edi
  42e828:	mov    ds:0xf11117,al
  42e82d:	pop    edi
  42e82e:	cmp    ah,BYTE PTR [ebp+0x781b72e0]
  42e834:	pushf  
  42e835:	push   0x2bf6016f
  42e83a:	mov    ah,0xe2
  42e83c:	adc    dh,cl
  42e83e:	and    eax,0xfa1b0705
  42e843:	std    
  42e844:	cmc    
  42e845:	gs or  al,0xca
  42e848:	in     eax,0xfb
  42e84a:	dec    edi
  42e84b:	repz cmc 
  42e84d:	sbb    eax,0x81bc6333
  42e852:	sub    DWORD PTR [ebp+0x30],ecx
  42e855:	mov    bh,0x77
  42e857:	outs   dx,BYTE PTR ds:[esi]
  42e858:	sub    ch,cl
  42e85a:	lods   eax,DWORD PTR ds:[esi]
  42e85b:	std    
  42e85c:	(bad)  
  42e85d:	push   esi
  42e85e:	test   al,0x5
  42e860:	loop   0x42e851
  42e862:	push   ecx
  42e863:	cli    
  42e864:	jecxz  0x42e857
  42e866:	push   ecx
  42e867:	jns    0x42e821
  42e869:	inc    esi
  42e86a:	cld    
  42e86b:	out    0x4d,eax
  42e86d:	fwait
  42e86e:	sahf   
  42e86f:	sar    al,0x27
  42e872:	jle    0x42e8a7
  42e874:	mov    edi,0x5823fa56
  42e879:	pop    edx
  42e87a:	arpl   WORD PTR [edx+0x18],bx
  42e87d:	adc    al,0x20
  42e87f:	stos   BYTE PTR es:[edi],al
  42e880:	mov    ds:0x6bc56af5,eax
  42e885:	out    0x8f,al
  42e887:	and    esp,DWORD PTR [ecx+0x7e]
  42e88a:	stos   DWORD PTR es:[edi],eax
  42e88b:	sbb    ebx,DWORD PTR ss:[ecx+0x4]
  42e88f:	das    
  42e890:	mov    ecx,0x65f70668
  42e895:	lahf   
  42e896:	(bad)  
  42e897:	adc    edi,DWORD PTR [esi]
  42e899:	pop    ss
  42e89a:	pop    es
  42e89b:	mov    bh,0xd6
  42e89d:	es xchg ecx,eax
  42e89f:	sub    DWORD PTR [ebp-0x6acafdfe],esp
  42e8a5:	push   esi
  42e8a6:	ficomp DWORD PTR [ecx]
  42e8a8:	jno    0x42e901
  42e8aa:	sbb    ah,BYTE PTR [edx]
  42e8ac:	push   edi
  42e8ad:	out    dx,al
  42e8ae:	pop    esp
  42e8af:	sub    esp,edx
  42e8b1:	sbb    esp,eax
  42e8b3:	retf   0x90ed
  42e8b6:	pop    es
  42e8b7:	lea    eax,es:[edx+0x1a3b1c1b]
  42e8be:	popf   
  42e8bf:	mov    DWORD PTR [ebp-0x3],ecx
  42e8c2:	in     al,0x29
  42e8c4:	rol    DWORD PTR [edi+ebp*4+0x29],cl
  42e8c8:	ret    
  42e8c9:	inc    ecx
  42e8ca:	ror    cl,cl
  42e8cc:	call   0xf28c:0xa16915a1
  42e8d3:	leave  
  42e8d4:	mov    WORD PTR [edx],es
  42e8d6:	(bad)  
  42e8d8:	or     bl,al
  42e8da:	fnstsw WORD PTR [edx+0x3f]
  42e8dd:	fiadd  WORD PTR [esi-0x18d46bf9]
  42e8e3:	pop    edi
  42e8e4:	das    
  42e8e5:	pop    ss
  42e8e6:	fldenv ds:0xccb6924
  42e8ec:	rcr    BYTE PTR [eax+0x13],cl
  42e8ef:	into   
  42e8f0:	push   ds
  42e8f1:	scas   eax,DWORD PTR es:[edi]
  42e8f2:	scas   al,BYTE PTR es:[edi]
  42e8f3:	loop   0x42e941
  42e8f5:	cmp    DWORD PTR [edx-0x52926a6f],edi
  42e8fb:	popf   
  42e8fc:	inc    esp
  42e8fd:	das    
  42e8fe:	dec    edx
  42e8ff:	pop    esi
  42e900:	cmp    BYTE PTR [edi+0x3c0caaf4],ah
  42e906:	pop    esp
  42e907:	inc    esp
  42e908:	or     ecx,ebp
  42e90a:	cmc    
  42e90b:	mov    ebp,0x571edbf4
  42e910:	in     eax,0x43
  42e912:	imul   ebx,DWORD PTR [edi-0x6d44ff50],0xffffffbe
  42e919:	pushf  
  42e91a:	in     eax,0x1d
  42e91c:	cmp    ebp,DWORD PTR [eax+0x6fdba5ca]
  42e922:	push   ebp
  42e923:	stc    
  42e924:	jne    0x42e978
  42e926:	push   ebx
  42e927:	jbe    0x42e978
  42e929:	xor    DWORD PTR [ebp+0xab03de2],ecx
  42e92f:	div    DWORD PTR [ecx+eiz*1+0x65f6cc50]
  42e936:	mov    ds:0x2132f495,eax
  42e93b:	mov    esp,0xaaf933bf
  42e940:	mov    edx,0x177afd56
  42e945:	cmp    esi,DWORD PTR [ecx-0x1e]
  42e948:	dec    edi
  42e949:	or     eax,0x3686d599
  42e94e:	sbb    dl,BYTE PTR ds:0xadb64a5c
  42e954:	jo     0x42e9b6
  42e956:	or     bh,dl
  42e958:	xor    BYTE PTR [esi-0x7f31f8d5],ch
  42e95e:	add    edx,DWORD PTR [edi+eax*1]
  42e961:	push   ebx
  42e962:	or     bh,BYTE PTR [edi-0x776a5fe8]
  42e968:	adc    cl,BYTE PTR [ecx+0x1f]
  42e96b:	cvtpi2ps xmm5,QWORD PTR [edi]
  42e96e:	add    ecx,DWORD PTR [esi-0x6f]
  42e971:	cmp    ebx,DWORD PTR [esi]
  42e973:	cwde   
  42e974:	pop    esp
  42e975:	jecxz  0x42e9b2
  42e977:	push   DWORD PTR [ebp+0x57]
  42e97a:	mov    fs,ebp
  42e97c:	jle    0x42e9c0
  42e97e:	(bad)  [edx-0x17]
  42e981:	in     eax,0xad
  42e983:	enter  0x4048,0xa3
  42e987:	cld    
  42e988:	fiadd  DWORD PTR [ebx-0x70c008cc]
  42e98e:	and    cl,bh
  42e990:	outs   dx,DWORD PTR ds:[esi]
  42e991:	test   eax,0xa5fccab7
  42e996:	inc    esp
  42e997:	(bad)  
  42e998:	xor    al,0xe0
  42e99a:	mov    esp,0x6c0e75f9
  42e99f:	mov    eax,ds:0x1cc393
  42e9a4:	shr    DWORD PTR [eax],0x3f
  42e9a7:	or     cl,ah
  42e9a9:	add    al,0xd
  42e9ab:	add    bl,BYTE PTR [ecx+0x4ae14e33]
  42e9b1:	xchg   DWORD PTR [ecx-0x43e0b128],esp
  42e9b7:	stos   BYTE PTR es:[edi],al
  42e9b8:	(bad)  
  42e9b9:	ins    DWORD PTR es:[edi],dx
  42e9ba:	popa   
  42e9bb:	sub    BYTE PTR [eax+esi*4-0x7c],dh
  42e9bf:	(bad)  
  42e9c0:	jnp    0x42e97f
  42e9c2:	xor    al,0xb6
  42e9c4:	mov    BYTE PTR [edi],bl
  42e9c6:	sbb    cl,BYTE PTR [ecx-0x68]
  42e9c9:	push   0xffffffda
  42e9cb:	jae    0x42e9b4
  42e9cd:	in     al,dx
  42e9ce:	mov    al,0x94
  42e9d0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42e9d1:	mov    eax,?
  42e9d3:	push   ecx
  42e9d4:	jmp    0x42ea49
  42e9d6:	retf   
  42e9d7:	test   dh,0x92
  42e9da:	ret    
  42e9db:	dec    ebx
  42e9dc:	int3   
  42e9dd:	addr16 xchg edi,eax
  42e9df:	push   cs
  42e9e0:	lahf   
  42e9e1:	jg     0x42e9e8
  42e9e3:	in     al,dx
  42e9e4:	sub    BYTE PTR [ebp-0x718557c4],bh
  42e9ea:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42e9eb:	jno    0x42e9a6
  42e9ed:	mov    ecx,0xd4408028
  42e9f2:	lods   al,BYTE PTR ds:[esi]
  42e9f3:	jg     0x42ea37
  42e9f5:	push   ecx
  42e9f6:	mov    esp,0xb0ff935c
  42e9fb:	sbb    BYTE PTR [eax-0x3483d1eb],0x83
  42ea02:	cli    
  42ea03:	dec    ebx
  42ea04:	outs   dx,DWORD PTR ds:[esi]
  42ea05:	cmp    DWORD PTR [ecx+0x28],eax
  42ea08:	retf   0x8876
  42ea0b:	fistp  WORD PTR [ebp-0x66]
  42ea0e:	(bad)  
  42ea0f:	dec    edx
  42ea10:	inc    ebx
  42ea11:	daa    
  42ea12:	dec    eax
  42ea13:	dec    edi
  42ea14:	mov    ecx,0x75dc08c5
  42ea19:	lea    ebx,[edx+0x57]
  42ea1c:	lea    esi,[ebx+ecx*8]
  42ea1f:	sar    DWORD PTR [esi],cl
  42ea21:	in     eax,0x1d
  42ea23:	call   0x2a9d5bf3
  42ea28:	bound  esp,QWORD PTR [eax+ebx*2-0x117ee337]
  42ea2f:	jle    0x42e9d9
  42ea31:	lods   eax,DWORD PTR ss:[esi]
  42ea33:	xchg   BYTE PTR [eax*4+0x24e2e8cf],dl
  42ea3a:	inc    esp
  42ea3b:	les    ebp,FWORD PTR [ebp-0x26aa85f1]
  42ea41:	iret   
  42ea42:	mov    esp,0x99197ff1
  42ea47:	mov    ds:0x6ecfded2,al
  42ea4c:	jb     0x42eaa2
  42ea4e:	in     al,dx
  42ea4f:	lods   al,BYTE PTR ds:[esi]
  42ea50:	mov    DWORD PTR [edi+0x59],esp
  42ea53:	pop    ss
  42ea54:	sub    eax,0xff4647df
  42ea59:	sbb    ebx,edi
  42ea5b:	call   DWORD PTR [ecx]
  42ea5d:	cmc    
  42ea5e:	dec    ebp
  42ea5f:	mov    DWORD PTR [ecx-0x5a],ebp
  42ea62:	xor    al,0x48
  42ea64:	outs   dx,BYTE PTR ds:[esi]
  42ea65:	loope  0x42ea80
  42ea67:	mov    ch,0x4
  42ea69:	aaa    
  42ea6a:	out    dx,al
  42ea6b:	stos   BYTE PTR es:[edi],al
  42ea6c:	pop    esp
  42ea6d:	or     bl,BYTE PTR [eax]
  42ea6f:	mov    edi,0x549401aa
  42ea74:	fwait
  42ea75:	sbb    BYTE PTR [esi-0x64e1acf9],0x53
  42ea7c:	cmp    DWORD PTR [eax+0x15],ebx
  42ea7f:	xchg   esi,eax
  42ea80:	pop    ebx
  42ea81:	stos   DWORD PTR es:[edi],eax
  42ea82:	mov    al,0x1d
  42ea84:	inc    BYTE PTR [eax-0x2b331506]
  42ea8a:	inc    BYTE PTR [ebx+eiz*1]
  42ea8d:	cmp    eax,edi
  42ea8f:	xchg   edx,eax
  42ea90:	sbb    eax,0xfc66e426
  42ea95:	enter  0x1bc6,0x70
  42ea99:	pop    es
  42ea9a:	or     DWORD PTR ds:0x4790bc7c,ebp
  42eaa0:	es ss mov ebx,0xba255fb6
  42eaa7:	repz adc BYTE PTR [ebx],0xef
  42eaab:	push   ss
  42eaac:	add    esi,DWORD PTR [edi]
  42eaae:	out    0xdc,eax
  42eab0:	xlat   BYTE PTR ds:[ebx]
  42eab1:	dec    esi
  42eab2:	cmp    al,0xfa
  42eab4:	mov    ds:0x1d2c0ce5,al
  42eab9:	xchg   esi,eax
  42eaba:	inc    edi
  42eabb:	loope  0x42eb23
  42eabd:	test   BYTE PTR [edx+0x60],bl
  42eac0:	adc    BYTE PTR [ebx],cl
  42eac2:	ins    DWORD PTR es:[edi],dx
  42eac3:	jb     0x42eaa9
  42eac5:	mov    ch,0x72
  42eac7:	jmp    0x919b:0xe89
  42eacd:	dec    edi
  42eace:	pop    ebx
  42eacf:	es mov ebp,0xd096b3de
  42ead5:	dec    esp
  42ead6:	lods   eax,DWORD PTR ds:[esi]
  42ead7:	js     0x42eae5
  42ead9:	pop    esp
  42eada:	xor    al,BYTE PTR ds:[eax+0x5d]
  42eade:	lock cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42eae0:	jno    0x42ea81
  42eae2:	mov    BYTE PTR [edi+esi*2+0xcebbfd6],cl
  42eae9:	mov    esp,0x2565530e
  42eaee:	xor    DWORD PTR [eax-0xd],esi
  42eaf1:	fs std 
  42eaf3:	cmp    eax,0x52a740e7
  42eaf8:	es loop 0x42eaf6
  42eafb:	outs   dx,BYTE PTR ds:[esi]
  42eafc:	outs   dx,BYTE PTR ds:[esi]
  42eafd:	cmp    BYTE PTR [ecx-0xed61d0],cl
  42eb03:	shl    edx,cl
  42eb05:	sbb    eax,0xeab0ced6
  42eb0a:	jle    0x42ea9d
  42eb0c:	push   es
  42eb0d:	gs sub al,0xaf
  42eb10:	and    eax,0x392027f4
  42eb15:	mov    edx,0x4900e5f0
  42eb1a:	out    0x53,al
  42eb1c:	ficom  DWORD PTR [edi+ebx*2]
  42eb1f:	jae    0x42eabc
  42eb21:	sub    al,ah
  42eb23:	mov    ds:0xd8a1882,eax
  42eb28:	jmp    0x1056:0x9a8bc77a
  42eb2f:	jns    0x42eb9b
  42eb31:	lea    edi,[ebx]
  42eb33:	push   cs
  42eb34:	cld    
  42eb35:	sbb    al,dh
  42eb37:	repnz imul edx,DWORD PTR [ecx+eax*8],0x4632029c
  42eb3f:	cs push esi
  42eb41:	push   esi
  42eb42:	pop    ebp
  42eb43:	aas    
  42eb44:	push   ebp
  42eb45:	enter  0xd373,0xe8
  42eb49:	(bad)  
  42eb4a:	mov    ecx,DWORD PTR [edi]
  42eb4c:	rcr    BYTE PTR [ebx],cl
  42eb4e:	(bad)  
  42eb4f:	scas   al,BYTE PTR es:[edi]
  42eb50:	scas   al,BYTE PTR es:[edi]
  42eb51:	and    eax,0x9715b41
  42eb56:	jae    0x42eb4e
  42eb58:	(bad)  
  42eb59:	fisttp QWORD PTR [eax-0x223201ad]
  42eb5f:	sub    al,0x4a
  42eb61:	rol    BYTE PTR [ebp+0x5bea152a],0xa2
  42eb68:	add    eax,0xe0232c49
  42eb6d:	sub    al,BYTE PTR [edx-0x12d1667f]
  42eb73:	rcr    ah,cl
  42eb75:	xchg   ebp,eax
  42eb76:	lods   eax,DWORD PTR ds:[esi]
  42eb77:	jle    0x42ebb1
  42eb79:	imul   DWORD PTR [esi-0x7e]
  42eb7c:	clc    
  42eb7d:	inc    ebp
  42eb7e:	retf   0x6b38
  42eb81:	in     al,dx
  42eb82:	mov    dh,0x8c
  42eb84:	cmp    al,0xec
  42eb86:	adc    esp,esi
  42eb88:	(bad)  
  42eb89:	ffreep st(1)
  42eb8b:	fnsave ds:0x95190b5a
  42eb91:	test   BYTE PTR [edi+0x12],ch
  42eb94:	pop    es
  42eb95:	loopne 0x42eb8a
  42eb97:	mov    al,0x6b
  42eb99:	test   DWORD PTR [ecx+0x77],esp
  42eb9c:	sbb    al,0xa2
  42eb9e:	adc    ecx,DWORD PTR [eax+0x17]
  42eba1:	call   0xd0aa0f4b
  42eba6:	pusha  
  42eba7:	push   eax
  42eba8:	mov    dh,0x40
  42ebaa:	inc    edx
  42ebab:	pop    ebp
  42ebac:	push   ecx
  42ebad:	ret    0x13a4
  42ebb0:	lock xchg ebp,eax
  42ebb2:	pushf  
  42ebb3:	ror    ecx,0x67
  42ebb6:	add    eax,0x26072a6
  42ebbb:	cld    
  42ebbc:	push   ss
  42ebbd:	inc    edx
  42ebbe:	sbb    esp,ebx
  42ebc0:	jo     0x42ebc9
  42ebc2:	outs   dx,BYTE PTR ds:[esi]
  42ebc3:	sbb    eax,0xb6fc2d71
  42ebc8:	fidiv  WORD PTR [ecx-0x18]
  42ebcb:	in     eax,0x98
  42ebcd:	mov    esp,0x638f91ef
  42ebd2:	xchg   esp,eax
  42ebd3:	xchg   edi,eax
  42ebd4:	push   0x4bb85667
  42ebd9:	mov    dl,0x7a
  42ebdb:	loop   0x42ec56
  42ebdd:	in     al,0x97
  42ebdf:	xlat   BYTE PTR ds:[ebx]
  42ebe0:	jo     0x42ec4d
  42ebe2:	sub    al,0x21
  42ebe4:	push   ebp
  42ebe5:	mov    ecx,0x361c9165
  42ebea:	cli    
  42ebeb:	test   DWORD PTR [ebp-0x75],edi
  42ebee:	repz sar BYTE PTR [esi],0xaf
  42ebf2:	mov    dh,0x1d
  42ebf4:	push   0x87991c1e
  42ebf9:	add    BYTE PTR [edx+edi*1+0x4053b2f9],bl
  42ec00:	shl    BYTE PTR [ecx-0xbdca625],1
  42ec06:	xor    BYTE PTR [ecx+ebp*2+0x76],dh
  42ec0a:	loop   0x42eb97
  42ec0c:	mov    eax,0x57bbbf20
  42ec11:	mov    ch,0x38
  42ec13:	inc    ebp
  42ec14:	xor    cl,BYTE PTR [eax]
  42ec16:	(bad)  
  42ec17:	mov    ch,0x93
  42ec19:	jnp    0x42ebda
  42ec1b:	jns    0x42ebd2
  42ec1d:	(bad)
  42ec21:	into   
  42ec22:	mov    ah,0xf4
  42ec24:	fwait
  42ec25:	aad    0xf
  42ec27:	dec    ebp
  42ec28:	xchg   ebp,eax
  42ec29:	sahf   
  42ec2a:	pop    edi
  42ec2b:	ftst   
  42ec2d:	fistp  DWORD PTR [esi+0x55d113ad]
  42ec33:	mov    ebp,0xa2908a4a
  42ec38:	xchg   edx,eax
  42ec39:	(bad)  
  42ec3a:	jmp    0xa5bae4fd
  42ec3f:	and    edx,DWORD PTR [edi-0x7916acf6]
  42ec45:	popf   
  42ec46:	retf   
  42ec47:	lds    edx,FWORD PTR [esp+ebp*8]
  42ec4a:	push   cs
  42ec4b:	pop    es
  42ec4c:	mov    ch,0x9f
  42ec4e:	pop    ecx
  42ec4f:	ja     0x42ec50
  42ec51:	aam    0xff
  42ec53:	or     BYTE PTR [edx],ch
  42ec55:	xor    DWORD PTR [eax-0x31105bc2],edi
  42ec5b:	inc    ebp
  42ec5c:	mov    al,ds:0x64e858b4
  42ec61:	sbb    esi,0x2639c366
  42ec67:	int    0xee
  42ec69:	or     dh,BYTE PTR [edx]
  42ec6b:	(bad)  
  42ec6c:	mov    eax,ds:0xbb2c7286
  42ec71:	mov    dl,0xf2
  42ec73:	rcl    BYTE PTR [edx+0x25d7f29a],0xc3
  42ec7a:	or     bl,BYTE PTR [edi-0x48111d3d]
  42ec80:	adc    eax,0xe58b9c13
  42ec85:	push   ds
  42ec86:	or     al,0x45
  42ec88:	push   cs
  42ec89:	and    eax,DWORD PTR [ebx]
  42ec8b:	mov    DWORD PTR [ebx],esp
  42ec8d:	xchg   esi,eax
  42ec8e:	mov    cl,0xb3
  42ec90:	mov    ds:0x1bd345,al
  42ec95:	es mov eax,0xa0ca07f9
  42ec9b:	mov    eax,0xe05cb1d
  42eca0:	sub    edi,eax
  42eca2:	je     0x42ed00
  42eca4:	add    ecx,DWORD PTR [ebp+0x90d54d0]
  42ecaa:	fisttp DWORD PTR [edx-0x1d]
  42ecad:	sbb    DWORD PTR [esi+0x67],0xf20d4094
  42ecb4:	clc    
  42ecb5:	add    eax,0xffffffe5
  42ecb8:	gs out 0xc5,eax
  42ecbb:	lea    ebx,[esp+ecx*2]
  42ecbe:	add    ah,BYTE PTR [esi+edx*2]
  42ecc1:	dec    ebx
  42ecc2:	xor    bh,dh
  42ecc4:	pop    ecx
  42ecc5:	jecxz  0x42ecfd
  42ecc7:	lahf   
  42ecc8:	call   0x9f5f:0xb3ec6319
  42eccf:	mov    dh,0x46
  42ecd1:	sahf   
  42ecd2:	test   eax,0xaab5a8bc
  42ecd7:	pop    es
  42ecd8:	(bad)  
  42ecd9:	mov    edi,0x40068d45
  42ecde:	retf   0x81d5
  42ece1:	mov    edx,0x704b2ba2
  42ece6:	lods   al,BYTE PTR ds:[esi]
  42ece7:	call   0x7d9c618
  42ecec:	gs pop edi
  42ecee:	and    al,0xd0
  42ecf0:	xchg   ebx,eax
  42ecf1:	pop    ebx
  42ecf2:	inc    edx
  42ecf3:	push   ss
  42ecf4:	div    DWORD PTR [eax]
  42ecf6:	out    dx,eax
  42ecf7:	xchg   esi,eax
  42ecf8:	fdivrp st(6),st
  42ecfa:	mov    al,ds:0xc5ce68ae
  42ecff:	adc    al,0x89
  42ed01:	mov    ebx,0x457eb5b2
  42ed06:	dec    eax
  42ed07:	or     eax,0xe99cab65
  42ed0c:	cmovge edi,DWORD PTR [eax+0x68]
  42ed10:	inc    esp
  42ed11:	cmp    eax,0x96615b20
  42ed16:	push   ds
  42ed17:	push   ss
  42ed18:	dec    esi
  42ed19:	dec    ebx
  42ed1a:	xlat   BYTE PTR ds:[ebx]
  42ed1b:	xor    al,bl
  42ed1d:	adc    eax,0x37cb60f4
  42ed22:	dec    ecx
  42ed23:	lahf   
  42ed24:	(bad)  
  42ed25:	mov    bl,0x5b
  42ed27:	cwde   
  42ed28:	jp     0x42ecfe
  42ed2a:	std    
  42ed2b:	js     0x42ed74
  42ed2d:	mov    bl,0x99
  42ed2f:	test   DWORD PTR [ebx+edx*1+0x655bcbdb],0xd2236d4
  42ed3a:	test   ebx,esp
  42ed3c:	and    DWORD PTR [eax+0x27493780],eax
  42ed42:	sbb    DWORD PTR [edi],ebx
  42ed44:	or     BYTE PTR [eax+0x39],ch
  42ed47:	mov    ah,0x49
  42ed49:	pop    ecx
  42ed4a:	lods   al,BYTE PTR fs:[esi]
  42ed4c:	cmp    al,0xf4
  42ed4e:	push   edx
  42ed4f:	inc    eax
  42ed50:	in     al,dx
  42ed51:	add    al,0x78
  42ed53:	pop    esi
  42ed54:	into   
  42ed55:	imul   esp,esi,0xffffffb0
  42ed58:	mov    bh,0xef
  42ed5a:	loope  0x42edbb
  42ed5c:	or     eax,0x6782589a
  42ed61:	mov    bl,BYTE PTR ds:0x86e71d7f
  42ed67:	je     0x42edce
  42ed69:	mov    ?,WORD PTR [esi+0x5c]
  42ed6c:	adc    BYTE PTR [edx+0x1c],0x1a
  42ed70:	or     al,0xf2
  42ed72:	mov    edx,0x310f6b85
  42ed77:	jns    0x42edcf
  42ed79:	cmp    DWORD PTR [eax+0x47],edx
  42ed7c:	xchg   esp,eax
  42ed7d:	mov    BYTE PTR [ebx+edi*2+0x2f],cl
  42ed81:	bound  ebp,QWORD PTR [esi]
  42ed83:	outs   dx,DWORD PTR ds:[esi]
  42ed84:	pop    esi
  42ed85:	pop    esp
  42ed86:	sub    al,0x18
  42ed88:	test   BYTE PTR [esp+ebx*2-0x5ce871f4],0x3
  42ed90:	mov    esp,0x1053a4bb
  42ed95:	or     ecx,DWORD PTR ds:[edi-0x1b08de27]
  42ed9c:	mov    ah,bh
  42ed9e:	add    DWORD PTR [edi],ecx
  42eda0:	ins    DWORD PTR es:[edi],dx
  42eda1:	sahf   
  42eda2:	(bad)  
  42eda3:	mov    esi,0xc4739022
  42eda8:	nop
  42eda9:	das    
  42edaa:	sub    eax,0xb765ede4
  42edaf:	pop    edi
  42edb0:	fdiv   st(1),st
  42edb2:	adc    BYTE PTR [ebx-0x22],bh
  42edb5:	out    0xf9,eax
  42edb7:	imul   edx,edi,0xb93754e9
  42edbd:	and    BYTE PTR [ecx],dh
  42edbf:	mov    BYTE PTR [esi+0x53],ah
  42edc2:	arpl   WORD PTR [edx-0x24b88746],cx
  42edc8:	adc    eax,DWORD PTR [ebx+edx*1+0x5749646b]
  42edcf:	or     esp,esi
  42edd1:	jmp    0x42ee3d
  42edd3:	mov    bh,0x2e
  42edd5:	push   edi
  42edd6:	mov    dl,0xb6
  42edd8:	(bad)  
  42edda:	or     eax,0xb51afd10
  42eddf:	jp     0x42edc6
  42ede1:	sub    ebx,0x3f10c163
  42ede7:	fadd   QWORD PTR [eax+0x53]
  42edea:	sbb    esp,ebp
  42edec:	stc    
  42eded:	sbb    al,0x75
  42edef:	outs   dx,DWORD PTR ds:[esi]
  42edf0:	add    eax,0xea1f711a
  42edf5:	retf   0xbc7
  42edf8:	setne  cl
  42edfb:	mov    ds:0x357624ea,eax
  42ee00:	push   esi
  42ee01:	mov    DWORD PTR [eax-0x2e72c3b4],ebp
  42ee07:	popf   
  42ee08:	xor    ebx,DWORD PTR [esi]
  42ee0a:	leave  
  42ee0b:	sub    eax,0x4c4f663
  42ee10:	mov    ss,WORD PTR [ecx]
  42ee12:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42ee13:	aam    0x13
  42ee15:	pusha  
  42ee16:	fstp   TBYTE PTR [edi-0x21]
  42ee19:	fcomip st,st(4)
  42ee1b:	mov    al,0x44
  42ee1d:	inc    esp
  42ee1e:	push   edx
  42ee1f:	jle    0x42edaf
  42ee21:	and    dl,bl
  42ee23:	in     al,dx
  42ee24:	mov    DWORD PTR [edx+0x6948c8fe],ecx
  42ee2a:	and    DWORD PTR [edx+0x691dca68],edx
  42ee30:	jb     0x42edef
  42ee32:	xchg   di,ax
  42ee34:	(bad)  
  42ee36:	shl    DWORD PTR [eax],0x4b
  42ee39:	mov    al,0x97
  42ee3b:	push   edi
  42ee3c:	dec    esp
  42ee3d:	jmp    0x8aad:0x5e89de79
  42ee44:	aas    
  42ee45:	mov    DWORD PTR [edi-0x652c1bce],ebp
  42ee4b:	and    al,0x6a
  42ee4d:	jp     0x42ee77
  42ee4f:	mov    cl,0x3a
  42ee51:	mov    esi,0x235301dc
  42ee56:	into   
  42ee57:	cmp    eax,0x829a2feb
  42ee5c:	jmp    0x971d:0xd894a709
  42ee63:	sub    dh,BYTE PTR [eax]
  42ee65:	repz pop es
  42ee67:	cli    
  42ee68:	mov    ebx,0xc4b416f3
  42ee6d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42ee6e:	jg     0x42ee28
  42ee70:	mov    eax,0x140e1c26
  42ee75:	lahf   
  42ee76:	cmp    BYTE PTR [edi-0x57523469],dh
  42ee7c:	dec    ebx
  42ee7d:	cmc    
  42ee7e:	dec    edi
  42ee7f:	in     eax,0xc6
  42ee81:	mov    dl,0x65
  42ee83:	cmp    ah,ah
  42ee85:	pop    ebx
  42ee86:	mov    dh,0x59
  42ee88:	cmp    ebx,DWORD PTR [edx+0x62]
  42ee8b:	push   ecx
  42ee8c:	adc    DWORD PTR [esi+0x2c],ebx
  42ee8f:	sub    eax,0x82d23611
  42ee94:	imul   dh
  42ee96:	and    cl,BYTE PTR [edi-0x6234bc57]
  42ee9c:	cld    
  42ee9d:	pop    ss
  42ee9e:	repz js 0x42ef17
  42eea1:	rcr    DWORD PTR ds:[edi-0x4f466874],cl
  42eea8:	in     al,0x9
  42eeaa:	cld    
  42eeab:	xchg   esi,eax
  42eeac:	add    edx,0x210fbf86
  42eeb2:	test   al,0xda
  42eeb4:	(bad)  
  42eeb5:	jle    0x42eee4
  42eeb7:	mov    eax,0x9b0f4610
  42eebc:	xor    al,0x62
  42eebe:	dec    esi
  42eebf:	ja     0x42ee8f
  42eec1:	jae    0x42eeaa
  42eec3:	push   es
  42eec4:	or     eax,0x4531a80b
  42eec9:	push   esp
  42eeca:	pop    es
  42eecb:	cdq    
  42eecc:	pop    ebx
  42eecd:	or     DWORD PTR [edi+eax*2],ecx
  42eed0:	cwde   
  42eed1:	push   esi
  42eed2:	push   0xfffffff5
  42eed4:	inc    eax
  42eed5:	arpl   WORD PTR [eax],cx
  42eed7:	cmp    DWORD PTR [edi-0x16616087],0x5e
  42eede:	outs   dx,BYTE PTR ds:[esi]
  42eedf:	clc    
  42eee0:	iret   
  42eee1:	not    esp
  42eee3:	add    esp,DWORD PTR [edx]
  42eee5:	xlat   BYTE PTR ds:[ebx]
  42eee6:	test   DWORD PTR [edx],edx
  42eee8:	xchg   esp,eax
  42eee9:	add    DWORD PTR [ebp+0x66],ebp
  42eeec:	sbb    eax,0xe9496ea8
  42eef1:	or     bl,BYTE PTR [esi+0x7e818cc7]
  42eef7:	scas   al,BYTE PTR es:[edi]
  42eef8:	pop    ebx
  42eef9:	inc    esp
  42eefa:	sub    al,ch
  42eefc:	cmp    al,bh
  42eefe:	and    al,dh
  42ef00:	add    DWORD PTR [edx],eax
  42ef02:	test   al,0x34
  42ef04:	jmp    0x42ef7a
  42ef06:	push   esp
  42ef07:	xor    DWORD PTR [ecx-0x6338accb],ecx
  42ef0d:	push   ebp
  42ef0e:	test   eax,0x163284bc
  42ef13:	(bad)  
  42ef14:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42ef15:	out    dx,al
  42ef16:	or     BYTE PTR [eax+0xeaab55],bh
  42ef1c:	shl    DWORD PTR [ebx],1
  42ef1e:	fcom   QWORD PTR [ebp-0x7c]
  42ef21:	and    eax,0x46824e95
  42ef26:	scas   al,BYTE PTR es:[edi]
  42ef27:	sbb    al,0x99
  42ef29:	add    al,0xef
  42ef2b:	adc    DWORD PTR [ebx],edx
  42ef2d:	popa   
  42ef2e:	popf   
  42ef2f:	ins    DWORD PTR es:[edi],dx
  42ef30:	daa    
  42ef31:	xor    BYTE PTR [esi+ecx*4-0x24],al
  42ef35:	popa   
  42ef36:	cmp    BYTE PTR [ebx+0x2b],0x59
  42ef3a:	xchg   DWORD PTR ds:0xb7ffaaf6,esi
  42ef40:	and    dh,BYTE PTR [ecx-0x3f954351]
  42ef46:	xchg   DWORD PTR [ebx+0x25],esp
  42ef49:	pop    ebx
  42ef4a:	cmp    dh,BYTE PTR [eax+0x39]
  42ef4d:	dec    ecx
  42ef4e:	fild   WORD PTR [ebx]
  42ef50:	jnp    0x42ef30
  42ef52:	add    DWORD PTR [ecx-0x5d115963],0x4d
  42ef59:	loope  0x42ef4b
  42ef5b:	mov    edx,DWORD PTR [edi-0x44]
  42ef5e:	lods   eax,DWORD PTR ds:[esi]
  42ef5f:	das    
  42ef60:	shr    DWORD PTR [edi+eiz*4+0x67c39baa],cl
  42ef67:	inc    edi
  42ef68:	mov    al,ds:0x36542038
  42ef6d:	push   es
  42ef6e:	mov    ds,WORD PTR [eax]
  42ef70:	out    dx,al
  42ef71:	sti    
  42ef72:	sub    BYTE PTR [ebx-0x49],al
  42ef75:	inc    esi
  42ef76:	jmp    FWORD PTR [ebx]
  42ef78:	retf   
  42ef79:	xchg   esi,eax
  42ef7a:	test   DWORD PTR [ebp-0x59],eax
  42ef7d:	retf   
  42ef7e:	test   DWORD PTR [eax+0x17890de2],ebx
  42ef84:	fcmovb st,st(3)
  42ef86:	mov    ebp,0xa788e4a5
  42ef8b:	push   ds
  42ef8c:	cwde   
  42ef8d:	iret   
  42ef8e:	mov    ds:0x9322a3e8,al
  42ef93:	popa   
  42ef94:	cmp    bh,bh
  42ef96:	mov    cl,0xee
  42ef98:	int    0x88
  42ef9a:	mov    ebx,0x7d591e89
  42ef9f:	inc    edi
  42efa0:	mov    esi,0x463ce53f
  42efa5:	cmp    BYTE PTR [ecx+ebp*4],cl
  42efa8:	jle    0x42efb3
  42efaa:	scas   eax,DWORD PTR es:[edi]
  42efab:	jb     0x42ef4c
  42efad:	sub    BYTE PTR [ebx-0x1469145b],al
  42efb3:	xchg   esp,eax
  42efb4:	cdq    
  42efb5:	xor    al,0xa
  42efb7:	pop    ss
  42efb8:	sbb    ecx,ebp
  42efba:	and    DWORD PTR [ebx-0x6fbf2b8],ebp
  42efc0:	mov    edi,0x7a607066
  42efc5:	xchg   ebp,eax
  42efc6:	fst    DWORD PTR [edi-0x27]
  42efc9:	call   0x27e6:0xfff8de93
  42efd0:	cmc    
  42efd1:	jo     0x42efc2
  42efd3:	shr    BYTE PTR [ebx+0x1047a8ca],0x88
  42efda:	int3   
  42efdb:	enter  0x27b5,0xf9
  42efdf:	sahf   
  42efe0:	fs stc 
  42efe2:	adc    ch,dh
  42efe4:	mov    ebx,0x43b6f62b
  42efe9:	(bad)  
  42efea:	lock fsub QWORD PTR ds:0x83e08d99
  42eff1:	push   ebx
  42eff2:	(bad)  
  42eff3:	mov    ebx,0x63c2072b
  42eff8:	jno    0x42f02e
  42effa:	int3   
  42effb:	gs es cmp al,0x33
  42efff:	pop    eax
  42f000:	push   edi
  42f001:	call   0xf533e232
  42f006:	in     eax,0x30
  42f008:	jmp    0xabe7:0x7e322c2d
  42f00f:	jmp    0x42efda
  42f011:	clc    
  42f012:	daa    
  42f013:	cld    
  42f014:	jg     0x42f053
  42f016:	add    eax,0xe1dffddb
  42f01b:	je     0x42efd5
  42f01d:	fwait
  42f01e:	adc    DWORD PTR [eax-0x161df823],0x833afe63
  42f028:	ror    al,cl
  42f02a:	dec    eax
  42f02b:	mov    ds:0xf63f52ff,eax
  42f030:	cmp    ah,cl
  42f032:	add    eax,0x57a0807b
  42f037:	test   BYTE PTR [edx+eax*8-0x3cccea44],bh
  42f03e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42f03f:	dec    esp
  42f040:	push   ebx
  42f041:	pop    esi
  42f042:	les    eax,FWORD PTR [eax-0x2a74d61]
  42f048:	outs   dx,DWORD PTR ds:[esi]
  42f049:	and    al,0xfc
  42f04b:	jne    0x42f069
  42f04d:	add    ebx,DWORD PTR [ebx]
  42f04f:	mov    eax,ds:0x747c28c4
  42f054:	in     al,dx
  42f055:	cli    
  42f056:	dec    esi
  42f057:	inc    eax
  42f058:	loop   0x42f02d
  42f05a:	pop    ebx
  42f05b:	and    al,0x42
  42f05d:	ins    BYTE PTR es:[edi],dx
  42f05e:	lahf   
  42f05f:	in     al,0x16
  42f061:	mov    al,0x78
  42f063:	sub    cl,BYTE PTR [ecx]
  42f065:	mov    cl,0xd0
  42f067:	cld    
  42f068:	retf   0xc173
  42f06b:	stc    
  42f06c:	inc    esi
  42f06d:	adc    BYTE PTR [ecx-0xe8ae13d],ch
  42f073:	or     eax,0xd864a77e
  42f078:	sub    BYTE PTR [edx],al
  42f07a:	rcl    edx,cl
  42f07c:	test   BYTE PTR [eax],0xe3
  42f07f:	jecxz  0x42f0e8
  42f081:	mov    ?,WORD PTR [ebp-0x11]
  42f084:	or     eax,0xaec10b9
  42f089:	leave  
  42f08a:	and    ebx,DWORD PTR ss:[edi+0x2d]
  42f08e:	in     eax,0x19
  42f090:	jg     0x42f0f3
  42f092:	dec    ebx
  42f093:	pop    ds
  42f094:	loope  0x42f111
  42f096:	popa   
  42f097:	imul   ecx,DWORD PTR [ebx+0x55],0xc0027bfc
  42f09e:	ins    DWORD PTR es:[edi],dx
  42f09f:	sbb    al,0x94
  42f0a1:	aaa    
  42f0a2:	cmp    DWORD PTR [ebx-0x12663694],eax
  42f0a8:	jmp    0x3662:0x69bf4fed
  42f0af:	ret    
  42f0b0:	or     DWORD PTR [ebx+ebx*4+0x28aab01f],eax
  42f0b7:	outs   dx,DWORD PTR ds:[esi]
  42f0b8:	test   DWORD PTR [eax],0x4ddc2eaf
  42f0be:	idiv   ch
  42f0c0:	push   es
  42f0c1:	jecxz  0x42f0a5
  42f0c3:	jbe    0x42f11d
  42f0c5:	xor    eax,0x6b7b221f
  42f0ca:	ror    bl,cl
  42f0cc:	xchg   ecx,eax
  42f0cd:	lock sub BYTE PTR fs:[edi+0x28bda0cf],dh
  42f0d5:	add    ebx,DWORD PTR [esi-0x7b9b005d]
  42f0db:	sbb    BYTE PTR [esi-0x34],bl
  42f0de:	xor    edx,DWORD PTR ds:0xa058c9a4
  42f0e4:	cmp    eax,0xc2a299ad
  42f0e9:	popf   
  42f0ea:	(bad)  
  42f0eb:	mov    eax,0xcea04684
  42f0f0:	push   ebx
  42f0f1:	shl    DWORD PTR [esp+ebx*2+0x65],cl
  42f0f5:	icebp  
  42f0f6:	retf   0x2fa9
  42f0f9:	push   ecx
  42f0fa:	xchg   ebp,eax
  42f0fb:	cmc    
  42f0fc:	fcom   QWORD PTR [edi+0x5e706f1a]
  42f102:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42f103:	nop
  42f104:	(bad)  
  42f105:	shr    BYTE PTR [ebx+0x4c74a61],1
  42f10b:	inc    ebp
  42f10c:	and    ah,0xa3
  42f10f:	fst    QWORD PTR [esi-0xd]
  42f112:	jnp    0x42f169
  42f114:	lock dec edi
  42f116:	icebp  
  42f117:	jmp    0x42f167
  42f119:	test   ecx,esi
  42f11b:	dec    edx
  42f11c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42f11d:	bound  ebp,QWORD PTR [ecx+0x575f37d7]
  42f123:	xor    eax,0xd5253f9c
  42f128:	jae    0x42f111
  42f12a:	add    eax,0xa0571156
  42f12f:	jnp    0x42f18a
  42f131:	cs or  eax,0xac4dbbd3
  42f137:	sbb    al,0x4d
  42f139:	dec    esi
  42f13a:	(bad)  
  42f13b:	(bad)  
  42f13c:	xor    DWORD PTR ds:0xcdb5603b,eax
  42f142:	call   0x80f3:0x9115905d
  42f149:	fwait
  42f14a:	call   0xb18960ce
  42f14f:	ins    DWORD PTR es:[edi],dx
  42f150:	into   
  42f151:	sbb    eax,0xb90b6da3
  42f156:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42f157:	pop    eax
  42f158:	cwde   
  42f159:	pop    ebp
  42f15a:	adc    esi,DWORD PTR [eax+ebx*4-0x59]
  42f15e:	cmp    esp,DWORD PTR [eax+0x21c20fef]
  42f164:	in     eax,dx
  42f165:	or     BYTE PTR [edi-0x5b],bl
  42f168:	popf   
  42f169:	adc    bl,BYTE PTR [edi-0x3d]
  42f16c:	and    eax,0x892df9e0
  42f171:	jns    0x42f138
  42f173:	loop   0x42f171
  42f175:	inc    ebx
  42f176:	xor    DWORD PTR [edx+0x2],eax
  42f179:	sbb    al,0x26
  42f17b:	adc    BYTE PTR [ebp-0x24],bh
  42f17e:	pushf  
  42f17f:	mov    ah,0x90
  42f181:	imul   esi,ebx,0x439de060
  42f187:	mov    ebp,?
  42f189:	ret    
  42f18a:	test   eax,esi
  42f18c:	aas    
  42f18d:	xor    edi,esp
  42f18f:	or     esi,DWORD PTR [ebx]
  42f191:	fs xchg esi,eax
  42f193:	and    dh,cl
  42f195:	mov    edi,0x1ac88f92
  42f19a:	mov    ebp,0xd6bb3e76
  42f19f:	xor    edx,DWORD PTR [esp+edx*2]
  42f1a2:	pop    eax
  42f1a3:	pop    DWORD PTR [ecx+0x2c27147a]
  42f1a9:	push   ebx
  42f1aa:	fdiv   st(3),st
  42f1ac:	std    
  42f1ad:	fs inc ebx
  42f1af:	cmp    esi,ebp
  42f1b1:	rol    edi,1
  42f1b3:	add    DWORD PTR [esi-0x65],esi
  42f1b6:	mov    ds:0xbc0f159f,eax
  42f1bb:	xchg   esi,eax
  42f1bc:	jo     0x42f238
  42f1be:	(bad)  
  42f1bf:	sbb    al,BYTE PTR [eax*4-0x790dbe1f]
  42f1c6:	push   eax
  42f1c7:	adc    DWORD PTR [ecx+0xb7cfde0],ebx
  42f1cd:	adc    al,0x7a
  42f1cf:	cmc    
  42f1d0:	jnp    0x42f1be
  42f1d2:	inc    edx
  42f1d3:	mov    DWORD PTR [edi],ecx
  42f1d5:	adc    eax,0x4a45c3dc
  42f1da:	push   es
  42f1db:	and    BYTE PTR [edi+eiz*8+0x43b1ba62],dl
  42f1e2:	push   ss
  42f1e3:	fnsave [eax-0x80]
  42f1e6:	retf   0x4e50
  42f1e9:	ror    BYTE PTR es:[eax],0xc8
  42f1ed:	jo     0x42f1be
  42f1ef:	inc    eax
  42f1f0:	dec    ecx
  42f1f1:	iret   
  42f1f2:	fisttp QWORD PTR [ecx-0x5da7e852]
  42f1f8:	aaa    
  42f1f9:	test   dl,bh
  42f1fb:	mov    esp,0x6224f10a
  42f200:	mov    dl,0x8f
  42f202:	sub    eax,0x2f8a0eaa
  42f207:	ror    BYTE PTR [ebp-0x2346dc79],0x23
  42f20e:	loopne 0x42f24f
  42f210:	adc    BYTE PTR [eax+0x6be5db5a],ch
  42f216:	lea    edi,[esi]
  42f218:	sub    eax,0x7f4d4431
  42f21d:	and    esp,ebp
  42f21f:	loope  0x42f1fd
  42f221:	push   esi
  42f222:	mov    ebp,0x8422ee45
  42f227:	test   BYTE PTR [edi],al
  42f229:	rcl    BYTE PTR [ebx],cl
  42f22b:	cld    
  42f22c:	cmp    eax,0x5d20852
  42f231:	mov    eax,0xc3f5c9e2
  42f236:	pop    esi
  42f237:	or     ah,BYTE PTR [ebx]
  42f239:	push   ds
  42f23a:	test   al,0x81
  42f23c:	push   eax
  42f23d:	inc    ecx
  42f23e:	mov    edx,DWORD PTR [ebp-0x140b1939]
  42f244:	mov    ah,0x7
  42f246:	sub    BYTE PTR [ebp+eiz*4-0x67],bl
  42f24a:	sub    eax,edx
  42f24c:	sbb    eax,0x839a2b5c
  42f251:	xor    edi,DWORD PTR [edx]
  42f253:	lahf   
  42f254:	inc    esi
  42f255:	cmp    ah,BYTE PTR [ebx+0x19189a6d]
  42f25b:	iret   
  42f25c:	mul    dl
  42f25e:	xor    eax,0x2ffa8ad1
  42f263:	sub    eax,0xb93d3256
  42f268:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42f269:	scas   eax,DWORD PTR es:[edi]
  42f26a:	adc    bh,al
  42f26c:	scas   eax,DWORD PTR es:[edi]
  42f26d:	xor    bh,BYTE PTR [eax]
  42f26f:	imul   BYTE PTR [ecx-0x5b]
  42f272:	or     al,0xbb
  42f274:	inc    ecx
  42f275:	rcr    DWORD PTR [ebx-0x2],0x8
  42f279:	jbe    0x42f24f
  42f27b:	push   esp
  42f27c:	sub    al,0x2b
  42f27e:	fist   DWORD PTR [ecx+ebx*2]
  42f281:	fs mov ch,0xdc
  42f284:	adc    BYTE PTR [eax+0x14],dh
  42f287:	cmp    BYTE PTR [edi],0x1a
  42f28a:	add    DWORD PTR [edi+0x33155c2a],ecx
  42f290:	pusha  
  42f291:	outs   dx,DWORD PTR ds:[esi]
  42f292:	call   0x249:0xf694f8f7
  42f299:	jmp    0x35a0:0x8b4d0970
  42f2a0:	sbb    eax,0x25ba201f
  42f2a5:	jp     0x42f296
  42f2a7:	cmc    
  42f2a8:	sub    al,BYTE PTR [eax-0x68]
  42f2ab:	mov    ds:0x18fc3a2a,eax
  42f2b0:	and    DWORD PTR [ecx],0x30d01996
  42f2b6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42f2b7:	daa    
  42f2b8:	fnstenv [esi-0x2648f98d]
  42f2be:	and    DWORD PTR [eax],esi
  42f2c0:	lds    edi,FWORD PTR [edi+0xce1ef9e]
  42f2c6:	xchg   ecx,eax
  42f2c7:	jecxz  0x42f2ca
  42f2c9:	push   0xa7578f20
  42f2ce:	in     al,dx
  42f2cf:	xrelease mov BYTE PTR [ebx],al
  42f2d2:	sbb    al,0xdd
  42f2d4:	into   
  42f2d5:	cmovns edx,DWORD PTR [ebx-0x198beb19]
  42f2dc:	mov    esi,fs
  42f2de:	loop   0x42f2fa
  42f2e0:	or     eax,0xd74549ff
  42f2e5:	mov    esi,0xd7e84ba1
  42f2ea:	and    bl,0x31
  42f2ed:	(bad)  
  42f2ef:	scas   al,BYTE PTR es:[edi]
  42f2f0:	lods   al,BYTE PTR ds:[esi]
  42f2f1:	sub    BYTE PTR [eax+0x6],bl
  42f2f4:	call   0xc9e9:0x1d67752b
  42f2fb:	mov    ?,eax
  42f2fd:	test   BYTE PTR [ebx-0x6c],bh
  42f300:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42f301:	sub    BYTE PTR [ecx-0x17],0x83
  42f305:	out    0xa9,eax
  42f307:	mov    al,0xf
  42f309:	inc    edx
  42f30a:	xchg   DWORD PTR [edx+0x4c],ecx
  42f30d:	xchg   esp,eax
  42f30e:	addr16 popf 
  42f310:	push   eax
  42f311:	pop    edx
  42f312:	and    BYTE PTR [edi-0x80],bl
  42f315:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42f316:	mov    fs,esi
  42f318:	xchg   edx,eax
  42f319:	jae    0x42f36d
  42f31b:	dec    esp
  42f31c:	push   DWORD PTR [eax-0x72]
  42f31f:	jle    0x42f2fd
  42f321:	add    DWORD PTR [ebp+esi*1+0x39],0xffffff8d
  42f326:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42f327:	mov    esp,es
  42f329:	aam    0x5e
  42f32b:	cwde   
  42f32c:	inc    esp
  42f32d:	cwde   
  42f32e:	sbb    BYTE PTR [edi-0x15509673],ch
  42f334:	xor    DWORD PTR [edi+0x56],esp
  42f337:	push   0xffffffc1
  42f339:	loopne 0x42f36b
  42f33b:	rep stos DWORD PTR es:[edi],eax
  42f33d:	dec    esi
  42f33e:	cli    
  42f33f:	aam    0xaf
  42f341:	in     eax,0x58
  42f343:	fldcw  WORD PTR [eax+0x3f]
  42f346:	fstp   TBYTE PTR [ebx]
  42f348:	mov    edi,edi
  42f34a:	imul   ecx,DWORD PTR [ebx+0x6a6f3d49],0x149eca93
  42f354:	pop    ss
  42f355:	test   al,0x69
  42f357:	inc    esp
  42f358:	jns    0x42f37b
  42f35a:	sbb    BYTE PTR [esi-0x6b],0x5e
  42f35e:	loop   0x42f379
  42f360:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42f361:	in     eax,0xd2
  42f363:	in     eax,0x92
  42f365:	jb     0x42f3ae
  42f367:	push   ss
  42f368:	fist   WORD PTR [eax+0x6f]
  42f36b:	adc    eax,0x26137ba0
  42f370:	adc    cl,bl
  42f372:	inc    ebp
  42f373:	mov    bh,BYTE PTR [ebp-0x17]
  42f376:	add    BYTE PTR [esp+ebx*4-0x23],bh
  42f37a:	or     al,0xd9
  42f37c:	retf   
  42f37d:	pusha  
  42f37e:	mov    ecx,0x261a758e
  42f383:	dec    ecx
  42f384:	cmp    DWORD PTR [ecx],ebp
  42f386:	retf   0x5f5a
  42f389:	jp     0x42f39a
  42f38b:	cmp    ebx,DWORD PTR [edx+0x4d054082]
  42f391:	jmp    0x7a24:0x7d873246
  42f398:	and    DWORD PTR [edi-0x256ac492],esp
  42f39e:	ins    BYTE PTR es:[edi],dx
  42f39f:	add    ebx,esi
  42f3a1:	xchg   esi,eax
  42f3a2:	in     al,0x27
  42f3a4:	stos   DWORD PTR es:[edi],eax
  42f3a5:	cdq    
  42f3a6:	cs in  eax,0x10
  42f3a9:	das    
  42f3aa:	(bad)  [edi]
  42f3ac:	clc    
  42f3ad:	pop    es
  42f3ae:	les    ebx,FWORD PTR [ebp+0xc]
  42f3b1:	and    BYTE PTR [edi+ebp*1+0x65],cl
  42f3b5:	pop    esp
  42f3b6:	jecxz  0x42f34c
  42f3b8:	mov    al,ds:0x7327c90
  42f3bd:	in     eax,0x1d
  42f3bf:	push   ecx
  42f3c0:	mov    dh,0x5f
  42f3c2:	data16 scas al,BYTE PTR es:[edi]
  42f3c4:	or     al,0x24
  42f3c6:	(bad)  
  42f3c7:	(bad)  
  42f3c9:	aaa    
  42f3ca:	xor    eax,0x79601d27
  42f3cf:	and    edi,eax
  42f3d1:	mov    ch,0x46
  42f3d3:	lock addr16 add eax,0x7b40ab39
  42f3da:	imul   eax,ecx,0x36753423
  42f3e0:	mov    al,0xf4
  42f3e2:	mov    ds:0x4a204d18,al
  42f3e7:	dec    edi
  42f3e8:	cmp    edi,edi
  42f3ea:	and    al,0xe8
  42f3ec:	mov    al,0x1a
  42f3ee:	adc    DWORD PTR [edi-0x46],esp
  42f3f1:	ret    
  42f3f2:	mul    BYTE PTR [ecx]
  42f3f4:	mov    edx,0x96b8fefa
  42f3f9:	(bad)  
  42f3fa:	sub    ecx,DWORD PTR [esi+0x2c66b382]
  42f400:	loopne 0x42f3e2
  42f402:	and    DWORD PTR [esi],ecx
  42f404:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42f405:	(bad)  
  42f406:	scas   al,BYTE PTR es:[edi]
  42f407:	test   eax,0x7e682e19
  42f40c:	sub    BYTE PTR [edx],bl
  42f40e:	mov    bl,0xa2
  42f410:	cmp    DWORD PTR [ecx],0xffffffab
  42f413:	jecxz  0x42f431
  42f415:	(bad)  
  42f416:	shr    DWORD PTR [ecx+0x3544665b],cl
  42f41c:	gs jle 0x42f3f5
  42f41f:	daa    
  42f420:	scas   al,BYTE PTR es:[edi]
  42f421:	or     bl,BYTE PTR [ecx-0x7]
  42f424:	lods   al,BYTE PTR ds:[esi]
  42f425:	aaa    
  42f426:	xor    DWORD PTR [edx+ebx*4-0x1e868a7f],edx
  42f42d:	shl    edx,cl
  42f42f:	and    BYTE PTR [ebp+0x45],0xa2
  42f433:	in     eax,dx
  42f434:	xchg   edi,eax
  42f435:	fild   WORD PTR [esi]
  42f437:	dec    edx
  42f438:	arpl   WORD PTR [edx],di
  42f43a:	into   
  42f43b:	inc    eax
  42f43c:	cld    
  42f43d:	clc    
  42f43e:	and    dl,BYTE PTR [edi]
  42f440:	push   edx
  42f441:	sbb    DWORD PTR [edx+0x3c],edx
  42f444:	mov    ch,0xf0
  42f446:	push   ebx
  42f447:	pusha  
  42f448:	imul   ecx,DWORD PTR [ebx+eiz*4-0x1f],0xffffffaa
  42f44d:	dec    edi
  42f44e:	adc    DWORD PTR [edx+ebx*1],ecx
  42f451:	mov    esp,0xbd216c71
  42f456:	mov    bh,0x23
  42f458:	ror    DWORD PTR [edx+0x33f27ee4],0x17
  42f45f:	sub    al,BYTE PTR [eax+0xc]
  42f462:	cmp    al,0x26
  42f464:	dec    esi
  42f465:	sub    DWORD PTR [ecx],ebp
  42f467:	imul   esp,DWORD PTR [eax*8+0x43b3b7c0],0xffffff89
  42f46f:	mov    ss,ebp
  42f471:	jmp    0x42f429
  42f473:	outs   dx,BYTE PTR ds:[esi]
  42f474:	test   eax,0x303a119f
  42f479:	dec    edi
  42f47a:	loop   0x42f4a7
  42f47c:	add    esi,0xeb7eee87
  42f482:	rol    BYTE PTR [eax+eax*2],cl
  42f485:	mov    ds:0xec5b4fda,al
  42f48a:	ja     0x42f430
  42f48c:	lods   al,BYTE PTR ds:[esi]
  42f48d:	cmp    al,0x7e
  42f48f:	jge    0x42f47d
  42f491:	sub    BYTE PTR [edi],dl
  42f493:	jle    0x42f42a
  42f495:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42f496:	retf   0x20bd
  42f499:	pop    edx
  42f49a:	mov    esp,0x5e555562
  42f49f:	mov    ebx,0x6b79055a
  42f4a4:	inc    BYTE PTR [ebp-0x1585ba55]
  42f4aa:	movs   BYTE PTR es:[edi],BYTE PTR fs:[esi]
  42f4ac:	sub    DWORD PTR [edx+0x3d9ce39f],eax
  42f4b2:	std    
  42f4b3:	xlat   BYTE PTR ds:[ebx]
  42f4b4:	scas   al,BYTE PTR es:[edi]
  42f4b5:	jl     0x42f505
  42f4b7:	adc    edx,esp
  42f4b9:	cld    
  42f4ba:	iret   
  42f4bb:	dec    edx
  42f4bc:	xchg   ebx,eax
  42f4bd:	mov    al,ds:0x1e04f8ef
  42f4c2:	add    edi,DWORD PTR [eax]
  42f4c4:	push   es
  42f4c5:	out    0xed,eax
  42f4c7:	ds dec esi
  42f4c9:	popa   
  42f4ca:	add    ebx,ebx
  42f4cc:	jmp    0x42f51d
  42f4ce:	and    BYTE PTR [esi-0x44],al
  42f4d1:	pop    ss
  42f4d2:	addr16 std 
  42f4d4:	clc    
  42f4d5:	pshufw mm4,QWORD PTR ds:0xab432329,0x36
  42f4dd:	pushf  
  42f4de:	add    BYTE PTR [edi],cl
  42f4e0:	cmp    ebp,esi
  42f4e2:	add    DWORD PTR [edi+0x5d1d103],ecx
  42f4e8:	sub    esp,DWORD PTR [edi]
  42f4ea:	add    al,0x38
  42f4ec:	dec    edx
  42f4ed:	adc    bl,BYTE PTR [ebp-0xa]
  42f4f0:	mov    eax,0x24e04c8c
  42f4f5:	enter  0x3bfc,0xdd
  42f4f9:	pop    edi
  42f4fa:	aas    
  42f4fb:	(bad)  
  42f4fc:	jecxz  0x42f540
  42f4fe:	or     edx,DWORD PTR [ecx]
  42f500:	ror    DWORD PTR [ebx+0x3c7d8f8f],1
  42f506:	fisttp QWORD PTR [ecx+0x2]
  42f509:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42f50a:	dec    ebx
  42f50b:	(bad)  
  42f50c:	sbb    eax,0x1d26d023
  42f511:	push   es
  42f512:	jecxz  0x42f49d
  42f514:	fwait
  42f515:	sbb    bl,BYTE PTR [ebx+0xad0a0c7]
  42f51b:	inc    edx
  42f51c:	das    
  42f51d:	pop    esi
  42f51e:	push   cs
  42f51f:	cdq    
  42f520:	sub    esi,DWORD PTR [ebx-0x589f7da6]
  42f526:	sbb    al,0x9e
  42f528:	in     al,0x27
  42f52a:	imul   esp,DWORD PTR [ebp-0x7e],0x72
  42f52e:	sub    al,0x3a
  42f530:	jle    0x42f591
  42f532:	push   ebx
  42f533:	aas    
  42f534:	retf   0x3f34
  42f537:	sbb    al,0x16
  42f539:	push   ss
  42f53a:	jmp    0x42f543
  42f53c:	sbb    BYTE PTR ds:0x77a3373f,ah
  42f542:	and    edx,DWORD PTR [ecx+edi*8]
  42f545:	inc    esp
  42f546:	adc    ah,cl
  42f548:	sbb    DWORD PTR [ecx],0xfffffff8
  42f54b:	addr16 mov ds:0x9922,eax
  42f54f:	xchg   BYTE PTR [edx+0x71ec3e1f],ah
  42f555:	inc    eax
  42f556:	out    0x24,al
  42f558:	dec    ebp
  42f559:	sahf   
  42f55a:	mov    ch,0x53
  42f55c:	ja     0x42f5c3
  42f55e:	mov    dh,0x32
  42f560:	push   edi
  42f561:	std    
  42f562:	js     0x42f594
  42f564:	imul   eax,DWORD PTR [esi],0xffffff9e
  42f567:	ins    DWORD PTR es:[edi],dx
  42f568:	jmp    0x42f591
  42f56a:	push   ecx
  42f56b:	test   esi,ebx
  42f56d:	lea    esi,[edx+ecx*4]
  42f570:	xor    al,al
  42f572:	div    esp
  42f574:	push   edx
  42f575:	xor    BYTE PTR [ecx-0x55],bh
  42f578:	jl     0x42f50e
  42f57a:	push   ss
  42f57b:	sub    eax,DWORD PTR [ecx]
  42f57d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42f57e:	dec    ebx
  42f57f:	dec    ebx
  42f580:	jnp    0x42f599
  42f582:	push   0x51902ad4
  42f587:	scas   al,BYTE PTR es:[edi]
  42f588:	add    ah,BYTE PTR [ebp+0x5f]
  42f58b:	(bad)  
  42f58c:	(bad)  
  42f58d:	daa    
  42f58e:	mov    DWORD PTR [ecx],ebx
  42f590:	lock std 
  42f592:	or     ebp,DWORD PTR [edx]
  42f594:	shl    DWORD PTR [edi+0x3b],0xab
  42f598:	inc    eax
  42f599:	lahf   
  42f59a:	mov    ds:0x92ebf30a,eax
  42f59f:	loope  0x42f581
  42f5a1:	xchg   ecx,eax
  42f5a2:	xlat   BYTE PTR ds:[ebx]
  42f5a3:	test   DWORD PTR [ebx-0x38],0x9b81c48d
  42f5aa:	bound  ebp,QWORD PTR [ecx+0x77]
  42f5ad:	dec    edx
  42f5ae:	sbb    DWORD PTR [ebp-0x48f10ed4],0x6
  42f5b5:	pop    edx
  42f5b6:	loop   0x42f5ef
  42f5b8:	push   0xb949f533
  42f5bd:	shl    BYTE PTR cs:[edi-0x75],0xfb
  42f5c2:	xor    esp,ebx
  42f5c4:	pop    esp
  42f5c5:	cmp    eax,0x1336c10a
  42f5ca:	jmp    0xc4e58c20
  42f5cf:	push   0xffffffde
  42f5d1:	jae    0x42f5c9
  42f5d3:	cmp    eax,0xaeb33032
  42f5d8:	ficomp WORD PTR es:[eax]
  42f5db:	sub    ebp,edi
  42f5dd:	sbb    al,0x65
  42f5df:	cwde   
  42f5e0:	xchg   ebp,ecx
  42f5e2:	rol    DWORD PTR ds:0xe158ac42,0x15
  42f5e9:	daa    
  42f5ea:	icebp  
  42f5eb:	dec    esp
  42f5ec:	sbb    ebp,edx
  42f5ee:	mov    ss,eax
  42f5f0:	mov    esi,0xfd8f91f2
  42f5f5:	add    al,0x26
  42f5f7:	mov    dl,0xbe
  42f5f9:	mov    ebp,0xc7043d61
  42f5fe:	mov    esi,0x9b826aec
  42f603:	and    cl,al
  42f605:	aaa    
  42f606:	xor    eax,0x826846b8
  42f60b:	add    BYTE PTR [edi],bh
  42f60d:	popa   
  42f60e:	ins    BYTE PTR es:[edi],dx
  42f60f:	xchg   BYTE PTR [edx],bl
  42f611:	xor    BYTE PTR [edi-0x43],0x68
  42f615:	inc    ecx
  42f616:	mov    al,ds:0x5a5294de
  42f61b:	mov    ch,0xc2
  42f61d:	jmp    0x66be1c7e
  42f622:	mov    ebx,0xe2878370
  42f627:	dec    esp
  42f628:	(bad)  
  42f62a:	out    0x6b,eax
  42f62c:	mul    DWORD PTR [ebp+0x33]
  42f62f:	pop    ebx
  42f630:	adc    eax,0xad3f3902
  42f635:	sbb    DWORD PTR [ecx],edx
  42f637:	int    0x0
  42f639:	das    
  42f63a:	push   esi
  42f63b:	jb     0x42f654
  42f63d:	inc    ecx
  42f63e:	dec    ebx
  42f63f:	mov    cl,0x9c
  42f641:	dec    ecx
  42f642:	push   cs
  42f643:	das    
  42f644:	mov    ecx,0x67adfaf8
  42f649:	call   0x1dc8:0x2075b5fc
  42f650:	das    
  42f651:	add    al,0x5
  42f653:	mov    eax,ds:0xca15000d
  42f658:	jo     0x42f6ce
  42f65a:	cdq    
  42f65b:	sbb    edx,edx
  42f65d:	jle    0x42f5eb
  42f65f:	gs dec eax
  42f661:	push   ds
  42f662:	(bad)  
  42f663:	in     al,dx
  42f664:	adc    eax,esi
  42f666:	test   al,0x8f
  42f668:	les    ebx,FWORD PTR [esp+ebx*2+0x6bb596b6]
  42f66f:	jge    0x42f61d
  42f671:	sub    eax,0x1d1cff53
  42f676:	lods   eax,DWORD PTR cs:[esi]
  42f678:	sbb    DWORD PTR [ecx-0x78],ecx
  42f67b:	sub    ebx,ebx
  42f67d:	mov    dl,ah
  42f67f:	cmp    ecx,DWORD PTR [ebx+0x17]
  42f682:	mov    al,ds:0x5d56ba2
  42f687:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42f688:	leave  
  42f689:	mov    ds:0xb11be704,al
  42f68e:	xor    ch,ah
  42f690:	xor    BYTE PTR [ebp+0x3d],ch
  42f693:	jno    0x42f68f
  42f695:	cmp    BYTE PTR [ebp-0x44],al
  42f698:	cmp    cl,BYTE PTR [esi-0x6984dceb]
  42f69e:	cmp    eax,0x7b9ba8fa
  42f6a3:	cmp    BYTE PTR [ecx-0xf],bh
  42f6a6:	inc    esi
  42f6a7:	xchg   DWORD PTR [edx-0x43c52e77],ecx
  42f6ad:	pop    ecx
  42f6ae:	in     al,0xe5
  42f6b0:	cmp    eax,0x9bea444b
  42f6b5:	sbb    BYTE PTR [ecx],cl
  42f6b7:	ret    
  42f6b8:	cmc    
  42f6b9:	or     al,cl
  42f6bb:	sub    bh,bh
  42f6bd:	xor    esi,edx
  42f6bf:	or     al,ah
  42f6c1:	out    dx,eax
  42f6c2:	repnz (bad) [ebx-0x18]
  42f6c6:	mov    ch,0xa8
  42f6c8:	fdivr  st(2),st
  42f6ca:	adc    eax,0xaf28816e
  42f6cf:	out    dx,eax
  42f6d0:	xchg   esp,eax
  42f6d1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42f6d2:	mov    edi,0xb227c7a3
  42f6d7:	add    eax,0xd6f558bd
  42f6dc:	cmp    ah,BYTE PTR [ebp+0x4057879c]
  42f6e2:	inc    esi
  42f6e3:	adc    DWORD PTR [esi+eiz*8+0x68],eax
  42f6e7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42f6e8:	enter  0xe966,0x59
  42f6ec:	xchg   ecx,eax
  42f6ed:	pop    edx
  42f6ee:	pop    edi
  42f6ef:	(bad)  
  42f6f0:	mov    ebx,0x3a0ecf4c
  42f6f5:	or     eax,0xbcdf37e4
  42f6fa:	sub    bl,bl
  42f6fc:	sub    eax,0x1a74d823
  42f701:	dec    ecx
  42f702:	stos   BYTE PTR es:[edi],al
  42f703:	outs   dx,DWORD PTR ds:[esi]
  42f704:	inc    ecx
  42f705:	ret    0x5dff
  42f708:	mov    ebp,0x116850e9
  42f70d:	inc    eax
  42f70e:	add    ebx,DWORD PTR [edx+ecx*2+0x791af803]
  42f715:	or     dl,BYTE PTR [eax+0x73]
  42f718:	shl    BYTE PTR [eax],1
  42f71a:	loope  0x42f75d
  42f71c:	xchg   DWORD PTR [ebx-0xf],ebp
  42f71f:	clc    
  42f720:	cld    
  42f721:	and    al,0x97
  42f723:	mov    ah,0xc8
  42f725:	jle    0x42f76d
  42f727:	mov    ah,BYTE PTR [edx+0x10890463]
  42f72d:	pop    es
  42f72e:	inc    DWORD PTR [eax]
  42f730:	hlt    
  42f731:	std    
  42f732:	shl    BYTE PTR fs:[ebp-0xf],cl
  42f736:	mov    BYTE PTR [edi-0x54e11746],bl
  42f73c:	inc    ebp
  42f73d:	retf   
  42f73e:	mov    bl,BYTE PTR [ebx]
  42f740:	icebp  
  42f741:	rcl    ebx,0x98
  42f744:	loopne 0x42f7b1
  42f746:	mul    ch
  42f748:	or     DWORD PTR [ebx-0x379abb96],edi
  42f74e:	push   ss
  42f74f:	mov    ds:0x79963303,eax
  42f754:	xor    eax,0xccca6603
  42f759:	lods   eax,DWORD PTR ds:[esi]
  42f75a:	sub    al,0xd8
  42f75c:	cdq    
  42f75d:	sub    al,0x9d
  42f75f:	jmp    0x46981ebb
  42f764:	test   eax,0x50355f6f
  42f769:	pop    ecx
  42f76a:	sbb    al,0xd9
  42f76c:	std    
  42f76d:	ins    BYTE PTR es:[edi],dx
  42f76e:	aaa    
  42f76f:	cmp    eax,0x4a7fba0e
  42f774:	or     DWORD PTR [ebx-0x44],ecx
  42f777:	(bad)  
  42f778:	shld   edx,ecx,cl
  42f77b:	aad    0x1b
  42f77d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42f77e:	(bad)  
  42f780:	push   esp
  42f781:	inc    ebx
  42f782:	fidivr WORD PTR [ecx-0x2d]
  42f785:	jno    0x42f70f
  42f787:	mov    ebx,0x2779712f
  42f78c:	jns    0x42f730
  42f78e:	and    BYTE PTR [edi*2-0x14f5073a],0xc4
  42f796:	cwde   
  42f797:	sbb    bl,dh
  42f799:	test   eax,0xda70beed
  42f79e:	retf   
  42f79f:	xchg   esp,eax
  42f7a0:	pop    ss
  42f7a1:	sbb    ecx,DWORD PTR [esi]
  42f7a3:	es pop ecx
  42f7a5:	std    
  42f7a6:	fidiv  WORD PTR [eax+eiz*4]
  42f7a9:	and    BYTE PTR [eax+ecx*8],bl
  42f7ac:	jg     0x42f754
  42f7ae:	imul   eax,DWORD PTR [eax-0x3b],0x5099a31b
  42f7b5:	push   eax
  42f7b6:	or     DWORD PTR [esp+edx*1],0x42ef540
  42f7bd:	inc    eax
  42f7be:	or     ecx,edi
  42f7c0:	xchg   ebp,eax
  42f7c1:	push   ebx
  42f7c2:	or     DWORD PTR [eax-0x32],ebp
  42f7c5:	and    BYTE PTR [eax-0x6c71b65e],cl
  42f7cb:	lods   eax,DWORD PTR ds:[esi]
  42f7cc:	lds    ecx,FWORD PTR [eax+0x3]
  42f7cf:	adc    dh,BYTE PTR [eax-0x78]
  42f7d2:	mov    ds:0x451d7374,eax
  42f7d7:	fnsave [edi]
  42f7d9:	test   eax,0x7676a019
  42f7de:	daa    
  42f7df:	and    eax,0xe0495224
  42f7e4:	sbb    eax,0x9a087a0
  42f7e9:	cmp    dl,BYTE PTR [edx+ecx*1]
  42f7ec:	lock in eax,0x57
  42f7ef:	scas   eax,DWORD PTR es:[edi]
  42f7f0:	add    al,BYTE PTR [edx+0x62]
  42f7f3:	repz in al,dx
  42f7f5:	sbb    BYTE PTR [edx-0x4a],cl
  42f7f8:	add    edx,DWORD PTR [edi+0xd]
  42f7fb:	(bad)  
  42f7fc:	mov    esp,0x60efb0c9
  42f801:	push   esp
  42f802:	pop    ebp
  42f803:	jbe    0x42f805
  42f805:	ficomp WORD PTR [esi+edi*1-0x5e]
  42f809:	ja     0x42f7bc
  42f80b:	fistp  WORD PTR [ecx]
  42f80d:	test   BYTE PTR [edx+0x18],dl
  42f810:	aaa    
  42f811:	sbb    eax,0x78eb6b85
  42f816:	dec    edx
  42f817:	jmp    0xbf09:0xcd77fd52
  42f81e:	jmp    0xc26986fe
  42f823:	popa   
  42f824:	pop    esp
  42f825:	jae    0x42f84b
  42f827:	and    ch,dh
  42f829:	push   cs
  42f82a:	rcl    DWORD PTR [edi-0x3f],cl
  42f82d:	in     al,0xe2
  42f82f:	push   ebx
  42f830:	retf   0x36c9
  42f833:	in     eax,dx
  42f834:	push   cs
  42f835:	sub    eax,0x2057db06
  42f83a:	ins    DWORD PTR es:[edi],dx
  42f83b:	jb     0x42f88e
  42f83d:	(bad)  
  42f83e:	and    dh,BYTE PTR [ebp+0x477cc95e]
  42f844:	popa   
  42f845:	leave  
  42f846:	into   
  42f847:	dec    ebx
  42f848:	sbb    eax,0xa49dd740
  42f84d:	inc    ebx
  42f84e:	or     cl,bl
  42f850:	xor    BYTE PTR [ecx+0x2d],dl
  42f853:	xchg   DWORD PTR [esi],edi
  42f855:	lock clc 
  42f857:	cld    
  42f858:	mov    dh,0x98
  42f85a:	xor    DWORD PTR [ecx],edx
  42f85c:	dec    ecx
  42f85d:	lock call 0xea6c:0x8775e066
  42f865:	adc    bh,ch
  42f867:	jns    0x42f88f
  42f869:	and    eax,0xaf963dc6
  42f86e:	enter  0xb756,0x6a
  42f872:	sbb    al,0x6
  42f874:	dec    ebp
  42f875:	jp     0x42f82a
  42f877:	adc    eax,0xd0938e3c
  42f87c:	pop    ebp
  42f87d:	hlt    
  42f87e:	std    
  42f87f:	rcr    dh,0xbf
  42f882:	jl     0x42f813
  42f884:	aas    
  42f885:	jae    0x42f8a7
  42f887:	mov    ecx,0x614a73bb
  42f88c:	(bad)  [esi]
  42f88e:	sti    
  42f88f:	pop    ecx
  42f890:	sbb    eax,esp
  42f892:	and    ebx,DWORD PTR [ebx]
  42f894:	jae    0x42f83c
  42f896:	mov    ds:0x3194c6ee,al
  42f89b:	adc    eax,0x6fa1b1f1
  42f8a0:	push   ss
  42f8a1:	test   eax,0x7977b785
  42f8a6:	lea    esi,[ebx]
  42f8a8:	dec    ecx
  42f8a9:	push   esi
  42f8aa:	imul   eax,eax,0xffffff8d
  42f8ad:	sub    dl,al
  42f8af:	cmp    ebp,ecx
  42f8b1:	shl    DWORD PTR [esi+0x6a],0x98
  42f8b5:	ret    0x8d6
  42f8b8:	sti    
  42f8b9:	sbb    al,0x51
  42f8bb:	scas   al,BYTE PTR es:[edi]
  42f8bc:	and    ebp,DWORD PTR [ebp+0x39]
  42f8bf:	popf   
  42f8c0:	or     al,0x1
  42f8c2:	mov    ecx,0x85416d7d
  42f8c7:	test   BYTE PTR [esi-0x596dc5be],bl
  42f8cd:	ror    DWORD PTR [edi-0x12],0xe7
  42f8d1:	hlt    
  42f8d2:	outs   dx,DWORD PTR ds:[esi]
  42f8d3:	sbb    BYTE PTR [ebp+0x2d],cl
  42f8d6:	push   esp
  42f8d7:	inc    eax
  42f8d8:	adc    al,0xec
  42f8da:	ins    DWORD PTR es:[edi],dx
  42f8db:	or     DWORD PTR [edx],0xffffffad
  42f8de:	mov    eax,0xa0dcd026
  42f8e3:	xchg   esi,eax
  42f8e4:	cld    
  42f8e5:	out    dx,al
  42f8e6:	inc    ecx
  42f8e7:	repnz mov edi,0xf34df7b3
  42f8ed:	ret    
  42f8ee:	lods   eax,DWORD PTR ds:[esi]
  42f8ef:	mov    al,0x35
  42f8f1:	mov    eax,0x27458cbe
  42f8f6:	adc    DWORD PTR [esi],esi
  42f8f8:	int3   
  42f8f9:	rcl    BYTE PTR ds:0x194ba9ae,1
  42f8ff:	jae    0x42f937
  42f901:	sahf   
  42f902:	xor    cl,BYTE PTR [esi]
  42f904:	cmc    
  42f905:	jmp    0x42f8de
  42f907:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42f908:	sub    BYTE PTR [esi+edx*4-0x4fe519e],ah
  42f90f:	icebp  
  42f910:	jne    0x42f958
  42f912:	inc    esp
  42f913:	mov    ch,0xdd
  42f915:	mov    bh,0x48
  42f917:	adc    eax,0xbb5f1283
  42f91c:	add    cl,BYTE PTR [esi]
  42f91e:	pop    edi
  42f91f:	fnsave [ecx]
  42f921:	and    DWORD PTR [ebx-0x787d5090],esp
  42f927:	mov    cl,0x92
  42f929:	(bad)  
  42f92a:	xor    esp,DWORD PTR [eax-0xe268ac0]
  42f930:	mov    ebp,0xb805805b
  42f936:	mov    bh,0xb7
  42f938:	test   BYTE PTR [edi+esi*4],bl
  42f93b:	ret    
  42f93c:	mov    cl,0xef
  42f93e:	jbe    0x42f926
  42f940:	mov    dh,0xb5
  42f942:	adc    al,0x3c
  42f944:	imul   DWORD PTR [edx-0x73]
  42f947:	fcomp  DWORD PTR ds:0x85d1e567
  42f94d:	out    dx,al
  42f94e:	add    eax,0xc486c404
  42f953:	pop    ebp
  42f954:	pop    ebp
  42f955:	cmp    al,0x92
  42f957:	xor    dl,BYTE PTR [eax+0x7e]
  42f95a:	fwait
  42f95b:	fwait
  42f95c:	in     eax,dx
  42f95d:	mov    ebp,0x63ea534b
  42f962:	ins    DWORD PTR es:[edi],dx
  42f963:	retf   0xe9a3
  42f966:	mov    bh,0xb8
  42f968:	cmc    
  42f969:	mov    esi,DWORD PTR [ebx]
  42f96b:	sbb    al,0xa9
  42f96d:	fidiv  DWORD PTR [ebx-0x276107fd]
  42f973:	xor    ecx,DWORD PTR [ecx]
  42f975:	xor    ecx,DWORD PTR [ecx+0x66444426]
  42f97b:	mov    ecx,0x7576f356
  42f980:	stos   BYTE PTR es:[edi],al
  42f981:	inc    esi
  42f982:	test   al,0x9e
  42f984:	or     BYTE PTR [ebx-0x4919d658],ah
  42f98a:	xchg   ebx,eax
  42f98b:	cs out dx,eax
  42f98d:	mov    dl,0x28
  42f98f:	jmp    0x42f9ea
  42f991:	pop    esi
  42f992:	mov    ecx,0x3ca79375
  42f997:	sahf   
  42f998:	dec    eax
  42f999:	xor    BYTE PTR fs:[ecx+0x78737505],bl
  42f9a0:	or     DWORD PTR [edx-0x51],ebp
  42f9a3:	mov    edi,0xb0ff281f
  42f9a8:	mov    esi,0x3aa9a6e8
  42f9ad:	scas   al,BYTE PTR es:[edi]
  42f9ae:	sahf   
  42f9af:	sub    al,0x5e
  42f9b1:	pop    edi
  42f9b2:	cld    
  42f9b3:	xor    dh,al
  42f9b5:	test   DWORD PTR [ebx-0x52],ebp
  42f9b8:	mov    eax,0xe893620e
  42f9bd:	bnd jb 0x42f958
  42f9c0:	pop    esi
  42f9c1:	jle    0x42f964
  42f9c3:	aas    
  42f9c4:	sbb    eax,0x74d911e3
  42f9c9:	sub    ah,cl
  42f9cb:	pop    esp
  42f9cc:	add    bh,BYTE PTR [ecx+0xdfd321c]
  42f9d2:	imul   ecx,ecx,0xe643ad94
  42f9d8:	adc    eax,ebp
  42f9da:	daa    
  42f9db:	xor    al,0xa3
  42f9dd:	fist   DWORD PTR [ebp+0x61]
  42f9e0:	or     bl,BYTE PTR [ecx+0x4c]
  42f9e3:	jno    0x42f992
  42f9e5:	mov    eax,ds:0xd543dc69
  42f9ea:	outs   dx,BYTE PTR ds:[esi]
  42f9eb:	test   cl,al
  42f9ed:	mov    ch,al
  42f9ef:	jbe    0x42f990
  42f9f1:	leave  
  42f9f2:	pop    ss
  42f9f3:	push   eax
  42f9f4:	ret    0x1e5
  42f9f7:	int    0x1e
  42f9f9:	cli    
  42f9fa:	xchg   bh,ah
  42f9fc:	xor    dl,0xda
  42f9ff:	cmp    BYTE PTR [edi-0x717c0a35],cl
  42fa05:	or     al,0xea
  42fa07:	sub    BYTE PTR [esp+eax*2],ah
  42fa0a:	fstp   st(1)
  42fa0c:	mov    edi,0x1282aa72
  42fa11:	int    0xa3
  42fa13:	sbb    al,0xdc
  42fa15:	push   eax
  42fa16:	push   es
  42fa17:	jbe    0x42fa50
  42fa19:	push   ebp
  42fa1a:	pop    edi
  42fa1b:	imul   edi,DWORD PTR [ebp+0x0],0x73d1342a
  42fa22:	pop    edx
  42fa23:	jle    0x42fa10
  42fa25:	sub    eax,0x18133bb0
  42fa2a:	dec    ebp
  42fa2b:	pushf  
  42fa2c:	cli    
  42fa2d:	mov    ebx,DWORD PTR [edi+0x14]
  42fa30:	pusha  
  42fa31:	out    0x1e,eax
  42fa33:	sub    eax,0xc97d67f0
  42fa38:	leave  
  42fa39:	pop    ebp
  42fa3a:	jmp    0x494:0x81566f80
  42fa41:	lock mov ebp,0x24284a25
  42fa47:	xchg   ebp,eax
  42fa48:	jmp    0xc757655a
  42fa4d:	pop    esi
  42fa4e:	mov    cl,0xbe
  42fa50:	daa    
  42fa51:	and    ch,BYTE PTR [edx-0x13]
  42fa54:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42fa55:	adc    al,0x48
  42fa57:	(bad)  
  42fa58:	aas    
  42fa59:	frstor [ebx+ecx*4+0x7a473ee5]
  42fa60:	push   ebp
  42fa61:	sbb    ebp,eax
  42fa63:	adc    DWORD PTR [ebp+0x586d84ea],ecx
  42fa69:	inc    eax
  42fa6a:	xor    ch,0x5e
  42fa6d:	mov    edx,0x6a13217b
  42fa72:	popf   
  42fa73:	or     cl,dh
  42fa75:	(bad)  
  42fa76:	xchg   esp,eax
  42fa77:	es adc al,0x99
  42fa7a:	repz jnp 0x42fabf
  42fa7d:	mov    cl,0xbb
  42fa7f:	push   esp
  42fa80:	cmc    
  42fa81:	punpckhdq mm6,QWORD PTR [ebp+0x18aeff52]
  42fa88:	pop    eax
  42fa89:	mov    ah,0x2d
  42fa8b:	xchg   ecx,eax
  42fa8c:	push   esp
  42fa8d:	mov    ?,ebp
  42fa8f:	dec    esi
  42fa90:	dec    esp
  42fa91:	push   edx
  42fa92:	dec    edx
  42fa93:	jecxz  0x42faae
  42fa95:	mov    ds:0x75c82ca4,eax
  42fa9a:	or     eax,0xcae70d7c
  42fa9f:	in     eax,dx
  42faa0:	faddp  st(3),st
  42faa2:	mov    bh,0xc3
  42faa4:	mul    DWORD PTR [ecx+0x2b]
  42faa7:	and    DWORD PTR [ebx+0x41ba8502],ebx
  42faad:	leave  
  42faae:	fild   QWORD PTR [esi+edx*8]
  42fab1:	mov    WORD PTR [esi],ds
  42fab3:	aaa    
  42fab4:	push   edi
  42fab5:	xchg   ebp,eax
  42fab6:	mov    dh,bh
  42fab8:	mov    esi,0x5d616de5
  42fabd:	jge    0x42fa8f
  42fabf:	mov    bh,0x91
  42fac1:	jl     0x42faa8
  42fac3:	cdq    
  42fac4:	(bad)  
  42fac6:	outs   dx,DWORD PTR ds:[esi]
  42fac7:	sub    BYTE PTR [ebx+0x25],ch
  42faca:	xchg   esp,eax
  42facb:	pop    ecx
  42facc:	(bad)  
  42facd:	jnp    0x42fae6
  42facf:	xor    DWORD PTR [ebp+ebp*1-0x48],ebp
  42fad3:	mov    ds:0xbb4c9b91,eax
  42fad8:	push   cs
  42fad9:	pop    ebx
  42fada:	(bad)  
  42fadb:	mov    edx,DWORD PTR ds:0xc1f0ea80
  42fae1:	jle    0x42fa9b
  42fae3:	adc    dl,BYTE PTR [edi+eax*1+0x7c]
  42fae7:	sub    al,0x83
  42fae9:	(bad)  
  42faeb:	bound  esp,QWORD PTR [esi]
  42faed:	icebp  
  42faee:	leave  
  42faef:	inc    ecx
  42faf0:	pop    esp
  42faf1:	inc    esp
  42faf2:	and    BYTE PTR [esi+0x2d],ah
  42faf5:	jb     0x42fa8c
  42faf7:	(bad)  
  42faf9:	or     BYTE PTR [esi],al
  42fafb:	in     al,dx
  42fafc:	mov    ch,0x9c
  42fafe:	retf   0x9872
  42fb01:	clc    
  42fb02:	mov    esi,0x7fd7e2e3
  42fb07:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42fb08:	ret    
  42fb09:	xchg   ecx,eax
  42fb0a:	mov    al,0x44
  42fb0c:	fs in  al,dx
  42fb0e:	cli    
  42fb0f:	adc    ebx,DWORD PTR [edx-0x245bd7f8]
  42fb15:	jo     0x42facc
  42fb17:	mov    dh,0x96
  42fb19:	lods   al,BYTE PTR ds:[esi]
  42fb1a:	sbb    cl,BYTE PTR [esi+ebx*4-0x3]
  42fb1e:	xchg   esi,eax
  42fb1f:	jae    0x42fb56
  42fb21:	bswap  esp
  42fb23:	in     eax,0xd1
  42fb25:	psadbw mm0,QWORD PTR [edx]
  42fb28:	in     al,0x78
  42fb2a:	or     ch,BYTE PTR [eax+edi*4]
  42fb2d:	(bad)
  42fb30:	jmp    0x42fb90
  42fb32:	scas   al,BYTE PTR es:[edi]
  42fb33:	inc    edx
  42fb34:	push   eax
  42fb35:	js     0x42fb43
  42fb37:	xchg   esp,eax
  42fb38:	jbe    0x42fb22
  42fb3a:	adc    DWORD PTR [eax-0x2b],0x55
  42fb3e:	push   0x564b0625
  42fb43:	or     al,0x59
  42fb45:	fcom   QWORD PTR [ecx+0x1c00881f]
  42fb4b:	xor    eax,0xde5923e7
  42fb50:	int3   
  42fb51:	jbe    0x42fb35
  42fb53:	rcr    eax,cl
  42fb55:	and    al,0x66
  42fb57:	test   eax,0xc87d99b3
  42fb5c:	mov    bh,0x9
  42fb5e:	pop    edi
  42fb5f:	xchg   ebp,esp
  42fb61:	and    al,0x9b
  42fb63:	cmc    
  42fb64:	div    BYTE PTR [ecx-0x39]
  42fb67:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42fb68:	int3   
  42fb69:	add    DWORD PTR [edi],ebx
  42fb6b:	cwde   
  42fb6c:	je     0x42fb70
  42fb6e:	inc    ebx
  42fb6f:	std    
  42fb70:	jne    0x42fb86
  42fb72:	gs and al,al
  42fb75:	fidivr DWORD PTR [ecx-0x22e2191c]
  42fb7b:	mov    esp,0xb9518526
  42fb80:	sbb    bl,ch
  42fb82:	add    eax,0xd5d5d655
  42fb87:	imul   esp,DWORD PTR [edi-0x2a],0x47
  42fb8b:	sub    esp,DWORD PTR [edx+0x65d308b5]
  42fb91:	push   edi
  42fb92:	xchg   ecx,eax
  42fb93:	xchg   ecx,eax
  42fb94:	int    0x4
  42fb96:	out    0x81,al
  42fb98:	mov    cl,0x73
  42fb9a:	xor    al,0x54
  42fb9c:	jnp    0x42fb6b
  42fb9e:	dec    esp
  42fb9f:	pop    ebp
  42fba0:	pop    es
  42fba1:	dec    ebx
  42fba2:	clc    
  42fba3:	fidiv  WORD PTR [ecx]
  42fba5:	iret   
  42fba6:	dec    ebx
  42fba7:	add    ch,BYTE PTR [edi+0x1c4bf979]
  42fbad:	cmc    
  42fbae:	pop    edx
  42fbaf:	inc    esi
  42fbb0:	and    esi,edi
  42fbb2:	neg    BYTE PTR [edx]
  42fbb4:	cli    
  42fbb5:	(bad)  [ebx]
  42fbb7:	push   0x6d
  42fbb9:	hlt    
  42fbba:	or     DWORD PTR [eax+0x14],edx
  42fbbd:	std    
  42fbbe:	shl    BYTE PTR [eax],cl
  42fbc0:	dec    edx
  42fbc1:	mov    ecx,0xf620f7d8
  42fbc6:	mov    eax,ds:0x849e0653
  42fbcb:	mov    ebx,0x8adbf4ef
  42fbd0:	fdivr  st(7),st
  42fbd2:	dec    ebp
  42fbd3:	rcr    ecx,0xf4
  42fbd6:	push   eax
  42fbd7:	js     0x42fbb4
  42fbd9:	pop    ss
  42fbda:	stc    
  42fbdb:	stos   BYTE PTR es:[edi],al
  42fbdc:	jo     0x42fc56
  42fbde:	inc    edx
  42fbdf:	xlat   BYTE PTR ds:[ebx]
  42fbe0:	iret   
  42fbe1:	shl    DWORD PTR [eax+0x3a],1
  42fbe4:	std    
  42fbe5:	pop    ds
  42fbe6:	mov    ch,0xc5
  42fbe8:	or     al,BYTE PTR [eax+0x3e21dab1]
  42fbee:	mov    ebx,0xdd13e571
  42fbf3:	inc    esp
  42fbf4:	cmp    DWORD PTR [edi-0x61],ecx
  42fbf7:	les    ebp,FWORD PTR [ebx]
  42fbf9:	pop    ebp
  42fbfa:	(bad)  
  42fbfb:	rcl    bh,cl
  42fbfd:	push   ebx
  42fbfe:	lds    edi,FWORD PTR [ebx-0x2]
  42fc01:	sub    dh,BYTE PTR [ebp-0x2f25dff2]
  42fc07:	xor    BYTE PTR [edx],bh
  42fc09:	inc    edx
  42fc0a:	rol    al,cl
  42fc0c:	mov    edx,fs
  42fc0e:	push   esi
  42fc0f:	inc    edx
  42fc10:	fbld   TBYTE PTR [ebx-0x27]
  42fc13:	xchg   edx,eax
  42fc14:	fcomp  st(7)
  42fc16:	mov    edx,0x2bb004b1
  42fc1b:	std    
  42fc1c:	sbb    ebx,DWORD PTR [edx+0x40]
  42fc1f:	es cmc 
  42fc21:	add    eax,0x7207b19
  42fc26:	daa    
  42fc27:	cmp    dl,al
  42fc29:	push   ss
  42fc2a:	clc    
  42fc2b:	jl     0x42fbe6
  42fc2d:	mov    al,0x93
  42fc2f:	inc    ebx
  42fc30:	inc    ebx
  42fc31:	inc    esp
  42fc32:	icebp  
  42fc33:	cmp    al,0x8f
  42fc35:	mov    ah,0x4a
  42fc37:	dec    edi
  42fc38:	xor    eax,0x53a41b00
  42fc3d:	sub    cl,BYTE PTR [eax-0x53e486c5]
  42fc43:	dec    eax
  42fc44:	or     ecx,DWORD PTR [ebx-0x4626116f]
  42fc4a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42fc4b:	pusha  
  42fc4c:	mov    eax,ds:0x3ab08720
  42fc51:	cmp    ebp,DWORD PTR [esi]
  42fc53:	sbb    ebx,ebp
  42fc55:	aas    
  42fc56:	hlt    
  42fc57:	(bad)  
  42fc58:	sub    eax,0x3c702a45
  42fc5d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42fc5e:	fild   WORD PTR ss:[ecx+0x7a6f6cf6]
  42fc65:	adc    eax,0xea6929d8
  42fc6a:	leave  
  42fc6b:	dec    ebp
  42fc6c:	ror    BYTE PTR [esi],1
  42fc6e:	mov    edx,0x97de9e8f
  42fc73:	and    ch,0x1d
  42fc76:	pop    ebx
  42fc77:	ins    DWORD PTR es:[edi],dx
  42fc78:	mov    esp,0xe1bca874
  42fc7d:	or     cl,BYTE PTR [esi]
  42fc7f:	push   edx
  42fc80:	jb     0x42fcb6
  42fc82:	pop    ebp
  42fc83:	iret   
  42fc84:	adc    ebp,esp
  42fc86:	or     eax,DWORD PTR [ebx+0x4c9dc9c]
  42fc8c:	(bad)  
  42fc8d:	push   edi
  42fc8e:	cdq    
  42fc8f:	add    esi,DWORD PTR [eax+0x7be47a0a]
  42fc95:	jecxz  0x42fcbc
  42fc97:	scas   eax,DWORD PTR es:[edi]
  42fc98:	inc    ebx
  42fc99:	jg     0xf4b159ac
  42fc9f:	adc    al,0x40
  42fca1:	cld    
  42fca2:	out    0xf8,al
  42fca4:	into   
  42fca5:	xchg   edx,esp
  42fca7:	jnp    0x42fd18
  42fca9:	ins    BYTE PTR es:[edi],dx
  42fcaa:	shr    DWORD PTR [eax-0x32],0xf7
  42fcae:	imul   edx,DWORD PTR [ebp-0x3a5ea324],0x15789165
  42fcb8:	mov    bl,0xfb
  42fcba:	mov    esp,0xe67eff5f
  42fcbf:	xchg   edi,eax
  42fcc0:	aam    0xbb
  42fcc2:	mov    ah,0xbb
  42fcc4:	xchg   BYTE PTR [edi-0x62],al
  42fcc7:	dec    edx
  42fcc8:	push   esp
  42fcc9:	fs jmp 0xfdbd:0xc9b0fdb7
  42fcd1:	add    esp,DWORD PTR [eax-0x3]
  42fcd4:	mov    cs,WORD PTR [edi]
  42fcd6:	fisttp WORD PTR [ebx]
  42fcd8:	add    eax,0xba66dec1
  42fcdd:	pop    ss
  42fcde:	repnz test eax,0xd0c1af46
  42fce4:	xor    esp,DWORD PTR [eax]
  42fce6:	out    0xd7,al
  42fce8:	(bad)
  42fced:	inc    ecx
  42fcee:	or     bl,BYTE PTR [ebp+0x45]
  42fcf1:	(bad)  
  42fcf2:	xchg   esp,eax
  42fcf3:	jno    0x42fd01
  42fcf5:	fbld   TBYTE PTR [ecx+0x77]
  42fcf8:	sbb    al,0x39
  42fcfa:	mov    bl,0xb1
  42fcfc:	int3   
  42fcfd:	sub    ebp,DWORD PTR [edi+0x4bbae38f]
  42fd03:	fcmovbe st,st(1)
  42fd05:	gs push es
  42fd07:	xor    edi,ebx
  42fd09:	cdq    
  42fd0a:	sar    dl,cl
  42fd0c:	pop    esp
  42fd0d:	sti    
  42fd0e:	addr16 cmc 
  42fd10:	jbe    0x42fd55
  42fd12:	lds    edx,FWORD PTR [ecx+0x5a]
  42fd15:	clc    
  42fd16:	repnz xchg esp,eax
  42fd18:	ret    0xbfaa
  42fd1b:	dec    eax
  42fd1c:	push   0xffffffd2
  42fd1e:	lods   al,BYTE PTR ds:[esi]
  42fd1f:	jmp    0x30093121
  42fd24:	mov    al,BYTE PTR [edx-0x19]
  42fd27:	sub    DWORD PTR [edi+0x74],ebp
  42fd2a:	inc    ecx
  42fd2b:	out    0xc0,al
  42fd2d:	mov    cl,0x10
  42fd2f:	sub    al,0x9f
  42fd31:	pop    edx
  42fd32:	stos   BYTE PTR es:[edi],al
  42fd33:	out    0xe7,eax
  42fd35:	fcmovu st,st(3)
  42fd37:	call   0x3ced:0x17f58f16
  42fd3e:	push   ss
  42fd3f:	pusha  
  42fd40:	cld    
  42fd41:	pop    ecx
  42fd42:	call   0xa4e5cbf5
  42fd47:	ins    DWORD PTR es:[edi],dx
  42fd48:	mov    BYTE PTR [ecx-0x1c8a21b3],bh
  42fd4e:	cld    
  42fd4f:	aad    0x7c
  42fd51:	adc    esi,DWORD PTR [eax]
  42fd53:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42fd54:	add    eax,0x60b2d0f6
  42fd59:	xchg   esp,eax
  42fd5a:	mov    edi,0xd7b522d6
  42fd5f:	mov    ebp,0xe620e06e
  42fd64:	fisub  WORD PTR [esp+esi*4-0x558ef373]
  42fd6b:	or     DWORD PTR [esi+ebp*4],0x7d408e6e
  42fd72:	aas    
  42fd73:	test   BYTE PTR [ebx],ch
  42fd75:	cmp    ebx,DWORD PTR [edx+eiz*2-0xd]
  42fd79:	mov    bl,dl
  42fd7b:	xor    ecx,0xcb067a17
  42fd81:	gs and al,0x4b
  42fd84:	add    DWORD PTR [edx-0x7d],0xc00347ca
  42fd8b:	enter  0x1a38,0xad
  42fd8f:	pop    ebx
  42fd90:	mov    ds:0x8ae7a7f7,al
  42fd95:	push   0x4120cb83
  42fd9a:	cmp    ebp,edx
  42fd9c:	adc    bl,BYTE PTR [edx+eiz*8-0x23]
  42fda0:	cdq    
  42fda1:	mov    DWORD PTR [ebx+0x26dcec16],0x42b010c1
  42fdab:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42fdac:	nop
  42fdad:	jne    0x42fd3b
  42fdaf:	inc    ebx
  42fdb0:	(bad)  
  42fdb1:	icebp  
  42fdb2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42fdb3:	out    0xb6,eax
  42fdb5:	stos   BYTE PTR es:[edi],al
  42fdb6:	mov    cl,0xde
  42fdb8:	push   esp
  42fdb9:	lods   al,BYTE PTR ds:[esi]
  42fdba:	clc    
  42fdbb:	rol    BYTE PTR [esp+ebp*8],cl
  42fdbe:	cli    
  42fdbf:	data16 mov ?,WORD PTR gs:[ecx+0x69]
  42fdc4:	retf   0xd266
  42fdc7:	jb     0x42fd83
  42fdc9:	mov    bl,0x93
  42fdcb:	inc    edx
  42fdcc:	and    esi,DWORD PTR [ebx]
  42fdce:	int    0xa7
  42fdd0:	sbb    DWORD PTR [esi],ecx
  42fdd2:	and    DWORD PTR [ebp-0x56],edx
  42fdd5:	icebp  
  42fdd6:	mov    BYTE PTR [ebx-0x50],dh
  42fdd9:	std    
  42fdda:	dec    edx
  42fddc:	cmp    BYTE PTR [ecx-0xa124c4],ch
  42fde2:	sub    DWORD PTR [esi],ecx
  42fde4:	inc    edi
  42fde5:	pop    esp
  42fde6:	dec    edi
  42fde7:	cmp    eax,0xd75b498b
  42fdec:	dec    edi
  42fded:	loope  0x42fd88
  42fdef:	push   esi
  42fdf0:	adc    DWORD PTR [edi],0xbc1f1a43
  42fdf6:	mov    fs,WORD PTR ds:0xced2dbfa
  42fdfc:	xor    dh,bh
  42fdfe:	imul   eax,DWORD PTR ds:0xf4e6178d,0x4c
  42fe05:	mov    ch,0x74
  42fe07:	jle    0x42fe7b
  42fe09:	sti    
  42fe0a:	sub    eax,0x377f3775
  42fe0f:	xor    dl,BYTE PTR [edi+0x6b]
  42fe12:	ror    DWORD PTR [ecx],1
  42fe14:	fnsave [eax+0x37]
  42fe17:	xchg   edi,eax
  42fe18:	out    dx,eax
  42fe19:	sub    al,0x97
  42fe1b:	mov    al,ds:0x88f18b15
  42fe20:	addr16 pusha 
  42fe22:	push   0x4
  42fe24:	jmp    0x5835:0xd2309fb8
  42fe2b:	push   eax
  42fe2c:	add    al,BYTE PTR [ecx]
  42fe2e:	jmp    0x42fe81
  42fe30:	sub    BYTE PTR [eax-0x24],dl
  42fe33:	xor    ebx,edi
  42fe35:	or     dh,BYTE PTR [ebp-0x6bd8cec4]
  42fe3b:	aaa    
  42fe3c:	add    edi,DWORD PTR [ecx-0x342ab14d]
  42fe42:	std    
  42fe43:	ds popa 
  42fe45:	gs mov ah,0x3c
  42fe48:	gs clc 
  42fe4a:	call   0xe698ea12
  42fe4f:	jno    0x42fddd
  42fe51:	pinsrw mm6,WORD PTR [ecx],0x61
  42fe55:	xor    ebx,DWORD PTR [ecx-0x1b584d24]
  42fe5b:	daa    
  42fe5c:	icebp  
  42fe5d:	inc    ebx
  42fe5e:	mov    bh,0x5c
  42fe60:	or     al,dl
  42fe62:	jnp    0x42fe84
  42fe64:	imul   eax,DWORD PTR [edi],0xffffff95
  42fe67:	neg    BYTE PTR [esi+0x6a]
  42fe6a:	mov    dl,0x7d
  42fe6c:	ds sahf 
  42fe6e:	mov    cl,0xbb
  42fe70:	fdiv   DWORD PTR [ecx]
  42fe72:	sbb    eax,0x12addf38
  42fe77:	cmp    dh,dh
  42fe79:	js     0x42fe91
  42fe7b:	out    dx,al
  42fe7c:	jo     0x42fe2d
  42fe7e:	clc    
  42fe7f:	fsub   DWORD PTR [esi+ebp*1+0x43140ae0]
  42fe86:	aam    0xa1
  42fe88:	popf   
  42fe89:	jp     0x42fe44
  42fe8b:	mov    ds:0x86e25ef,eax
  42fe90:	lds    edi,FWORD PTR [esi-0x7e]
  42fe93:	idiv   BYTE PTR [edi]
  42fe95:	pop    ecx
  42fe96:	pop    ecx
  42fe97:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42fe98:	dec    esi
  42fe99:	push   0x8b84c53
  42fe9e:	pushf  
  42fe9f:	and    al,0x16
  42fea1:	(bad)  
  42fea2:	mov    dh,0x80
  42fea4:	pop    esi
  42fea5:	xchg   esp,eax
  42fea6:	(bad)  
  42fea7:	mov    ebp,0x1b9d0469
  42feac:	(bad)  
  42fead:	push   0xa9dcac72
  42feb2:	mov    ecx,0x5dafe33b
  42feb7:	sar    dh,cl
  42feb9:	jno    0x42feca
  42febb:	aas    
  42febc:	mov    ah,0x9b
  42febe:	and    al,0x73
  42fec0:	mov    ch,0xcb
  42fec2:	mov    dh,0xf8
  42fec4:	xchg   esp,eax
  42fec5:	gs push ebx
  42fec7:	sub    BYTE PTR [edx],dl
  42fec9:	and    ah,BYTE PTR [ebp+0x14]
  42fecc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42fecd:	aaa    
  42fece:	call   0x20fe1fa3
  42fed3:	ds sti 
  42fed5:	data16 xlat BYTE PTR ds:[ebx]
  42fed7:	xlat   BYTE PTR ds:[ebx]
  42fed8:	cdq    
  42fed9:	and    edx,ebp
  42fedb:	mov    bh,0xd1
  42fedd:	pop    ebx
  42fede:	and    bl,ch
  42fee0:	int    0x3c
  42fee2:	(bad)  
  42fee3:	(bad)  
  42fee4:	push   ecx
  42fee5:	lahf   
  42fee6:	xchg   al,ch
  42fee8:	fwait
  42fee9:	push   ecx
  42feea:	fldcw  WORD PTR ds:0xf420b2ec
  42fef0:	inc    esp
  42fef1:	dec    edi
  42fef2:	(bad)  
  42fef3:	dec    esp
  42fef4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42fef5:	lds    ecx,FWORD PTR [edx+0x21]
  42fef8:	jbe    0x42fec2
  42fefa:	repnz mov ecx,0x99d36af2
  42ff00:	sub    BYTE PTR [ecx],dh
  42ff02:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42ff03:	loope  0x42ff71
  42ff05:	dec    esi
  42ff06:	dec    ebx
  42ff07:	jae    0x42fefc
  42ff09:	icebp  
  42ff0a:	(bad)
  42ff0d:	cmp    esp,DWORD PTR [edi]
  42ff0f:	popa   
  42ff10:	add    DWORD PTR [edx-0x10],ebp
  42ff13:	push   edi
  42ff14:	pop    edx
  42ff15:	push   edx
  42ff16:	in     al,dx
  42ff17:	cwde   
  42ff18:	pop    ss
  42ff19:	fmulp  st(1),st
  42ff1b:	sub    al,0xbf
  42ff1d:	cmp    al,0xc2
  42ff1f:	je     0x42feb4
  42ff21:	sub    eax,0xcf99a7a6
  42ff26:	or     BYTE PTR [ebp+ebp*1-0x7f1f5782],ch
  42ff2d:	jp     0x42ff54
  42ff2f:	ficom  DWORD PTR [eax-0x23]
  42ff32:	js     0x42fef3
  42ff34:	and    eax,0xe88af662
  42ff39:	fwait
  42ff3a:	inc    ecx
  42ff3b:	push   ss
  42ff3c:	imul   ebx,edi,0x33
  42ff3f:	jno    0x42ffbc
  42ff41:	stc    
  42ff42:	cli    
  42ff43:	lods   al,BYTE PTR ds:[esi]
  42ff44:	call   0xc07c:0xc7dadc88
  42ff4b:	adc    al,0x0
  42ff4d:	cmp    DWORD PTR [edi],esi
  42ff4f:	sbb    ecx,DWORD PTR [ebx+ebx*4+0x432759b2]
  42ff56:	and    ecx,DWORD PTR ds:0x7b011ffd
  42ff5c:	or     al,0x2d
  42ff5e:	sub    ebx,DWORD PTR [edx-0x2ef2b717]
  42ff64:	and    cl,dh
  42ff66:	pop    esi
  42ff67:	dec    esi
  42ff68:	lds    ebx,FWORD PTR [ebx+0x6f]
  42ff6b:	add    edi,DWORD PTR [eax-0x1641cb18]
  42ff71:	add    eax,eax
  42ff73:	adc    DWORD PTR [eax],0x26678a36
  42ff79:	and    BYTE PTR [ecx-0x241633b5],al
  42ff7f:	into   
  42ff80:	cwde   
  42ff81:	pop    ss
  42ff82:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42ff83:	cdq    
  42ff84:	jne    0x42ff6d
  42ff86:	push   eax
  42ff87:	and    BYTE PTR [ecx-0x69c55fed],0x5c
  42ff8e:	aam    0x32
  42ff90:	xor    ebx,ebp
  42ff92:	cwde   
  42ff93:	mov    ds:0x5f74ce5e,al
  42ff98:	pop    eax
  42ff99:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42ff9a:	dec    ecx
  42ff9b:	pop    edx
  42ff9c:	pop    ecx
  42ff9d:	cdq    
  42ff9e:	lahf   
  42ff9f:	sbb    dl,BYTE PTR [ecx+0x74decfc]
  42ffa5:	mov    DWORD PTR [esi],edi
  42ffa7:	mov    dl,0xd8
  42ffa9:	mov    ecx,0xf1722049
  42ffae:	or     BYTE PTR [edi+0x7f],bh
  42ffb1:	out    0xc6,al
  42ffb3:	shr    DWORD PTR [ecx],0xe3
  42ffb6:	ins    DWORD PTR es:[edi],dx
  42ffb7:	mov    eax,ds:0x4a4d7696
  42ffbc:	(bad)  
  42ffbd:	out    dx,eax
  42ffbe:	addr16 (bad) 
  42ffc1:	div    BYTE PTR [edx-0x35]
  42ffc4:	add    esp,ebx
  42ffc6:	dec    ebp
  42ffc7:	(bad)  
  42ffc8:	sub    BYTE PTR [ebp+0x75442ff1],dl
  42ffce:	push   ds
  42ffcf:	fidiv  WORD PTR [ebx+eax*2+0x18]
  42ffd3:	jbe    0x42ffca
  42ffd5:	jo     0x42ff6b
  42ffd7:	sbb    eax,0xeaae5f44
  42ffdc:	daa    
  42ffdd:	lahf   
  42ffde:	mov    ecx,0xc9885233
  42ffe3:	test   ebx,ebx
  42ffe5:	leave  
  42ffe6:	inc    eax
  42ffe7:	fcomi  st,st(1)
  42ffe9:	xchg   edi,eax
  42ffea:	test   eax,0x78203724
  42ffef:	je     0x43002b
  42fff1:	lahf   
  42fff2:	(bad)  
  42fff3:	or     al,0x60
  42fff5:	or     al,0x53
  42fff7:	cmp    esi,DWORD PTR [ebx]
  42fff9:	imul   ebx,DWORD PTR [eiz*1+0x910cec9],0xffffff9e
  430001:	sbb    al,0x9d
  430003:	ret    
  430004:	mov    dh,0x25
  430006:	mov    ah,0x4b
  430008:	out    0xd9,eax
  43000a:	xchg   edx,eax
  43000b:	repnz push esi
  43000d:	push   eax
  43000e:	repnz into 
  430010:	lds    esp,FWORD PTR ds:0xe7e7a896
  430016:	mov    al,0xbd
  430018:	ins    BYTE PTR es:[edi],dx
  430019:	loope  0x42fff9
  43001b:	fstp   QWORD PTR [edx+0x46]
  43001e:	sbb    al,0x78
  430020:	popf   
  430021:	adc    DWORD PTR [ecx-0x7a],0x4d
  430025:	mov    bh,0xbf
  430027:	sbb    eax,0xfff7e61b
  43002c:	xor    eax,0x5d491542
  430031:	mov    al,0xbc
  430033:	and    esi,DWORD PTR [eax+0x28af21fb]
  430039:	js     0x430011
  43003b:	adc    al,0xe6
  43003d:	bound  ecx,QWORD PTR [eax+0x139582f0]
  430043:	jecxz  0x43008d
  430045:	in     eax,0x86
  430047:	inc    ebx
  430048:	xchg   edi,eax
  430049:	aad    0xbf
  43004b:	in     eax,0x29
  43004d:	sbb    DWORD PTR [eax],edx
  43004f:	and    ebx,DWORD PTR [eax+0xa]
  430052:	ins    BYTE PTR es:[edi],dx
  430053:	fsubrp st(7),st
  430055:	int3   
  430056:	push   0xf523f4f6
  43005b:	(bad)  
  43005c:	outs   dx,DWORD PTR ds:[esi]
  43005d:	nop
  43005e:	cwde   
  43005f:	les    ecx,FWORD PTR [ebx-0xc]
  430062:	pusha  
  430063:	pop    eax
  430064:	inc    ebp
  430065:	ds cmp al,0xed
  430068:	adc    eax,0x74054335
  43006d:	jecxz  0x430040
  43006f:	adc    edx,ecx
  430071:	loop   0x4300cb
  430073:	or     cl,ah
  430075:	rcl    BYTE PTR [esp+ebp*1+0x54ce],0xcc
  43007d:	xchg   edx,eax
  43007e:	mov    ah,0x44
  430080:	mov    eax,0xbb238d89
  430085:	ss jne 0x4300e7
  430088:	xchg   ebp,eax
  430089:	xchg   edx,eax
  43008a:	cmp    ecx,DWORD PTR ds:0xe4324dc5
  430090:	arpl   WORD PTR [esi-0x57],si
  430093:	push   0x22
  430095:	mov    dl,0xd1
  430097:	stc    
  430098:	cmp    ebx,DWORD PTR [ebx+0x56]
  43009b:	cmp    dl,BYTE PTR [edi]
  43009d:	rcl    BYTE PTR [ebp+0x3f2f0c61],1
  4300a3:	or     BYTE PTR [esi+0x14a57b84],cl
  4300a9:	test   eax,0x2941e059
  4300ae:	mov    esp,DWORD PTR [ebp+0x21c1d39]
  4300b4:	cmp    cl,ch
  4300b6:	mov    ebp,0xf0f028bc
  4300bb:	stc    
  4300bc:	dec    edx
  4300bd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4300be:	dec    ebx
  4300bf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4300c0:	mov    ebp,DWORD PTR [edx+0x4f]
  4300c3:	test   eax,0x2d1a621e
  4300c8:	arpl   dx,di
  4300ca:	or     ebp,0xddd84a80
  4300d0:	ins    DWORD PTR es:[edi],dx
  4300d1:	mul    dl
  4300d3:	adc    BYTE PTR [ebp-0x78c5c2db],0xf4
  4300da:	iret   
  4300db:	cs (bad) 
  4300de:	mov    eax,DWORD PTR [ebx]
  4300e0:	(bad)  
  4300e1:	xor    DWORD PTR [ebp+0x5048bf9d],0x10
  4300e8:	mov    DWORD PTR [edi+0x59],edx
  4300eb:	jb     0x430133
  4300ed:	pop    esi
  4300ee:	xchg   ebp,eax
  4300ef:	mov    ecx,0x5e7a471a
  4300f4:	dec    edi
  4300f5:	jge    0x430171
  4300f7:	in     eax,dx
  4300f8:	lock xor DWORD PTR [edx],eax
  4300fb:	push   edi
  4300fc:	jae    0x430109
  4300fe:	les    ebp,FWORD PTR [edi]
  430100:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  430101:	enter  0xca8e,0x42
  430105:	inc    ecx
  430106:	xlat   BYTE PTR ds:[ebx]
  430107:	jbe    0x430093
  430109:	mov    esi,0x3a24a646
  43010e:	and    eax,0x66331f60
  430113:	adc    DWORD PTR [ecx],ebx
  430115:	and    esp,DWORD PTR fs:[edx+0x3b0bf1d0]
  43011c:	xchg   ecx,eax
  43011d:	out    dx,al
  43011e:	jle    0x4300ac
  430120:	dec    edx
  430121:	fcomp  QWORD PTR [esi]
  430123:	pusha  
  430124:	in     al,0x82
  430126:	inc    esp
  430127:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  430128:	int    0x6
  43012a:	(bad)  
  43012b:	sub    al,0x56
  43012d:	pop    ds
  43012e:	push   ds
  43012f:	(bad)  
  430130:	aad    0x33
  430132:	dec    esi
  430133:	and    esi,ecx
  430135:	ror    DWORD PTR [esi+0x1fef0b7a],1
  43013b:	add    al,0x18
  43013d:	mov    eax,ds:0x5a5dd345
  430142:	jl     0x430129
  430144:	in     eax,dx
  430145:	leave  
  430146:	adc    ch,BYTE PTR [esi-0x62]
  430149:	cmp    DWORD PTR [esi],eax
  43014b:	fidivr WORD PTR [ebx+eax*8+0x36b4824a]
  430152:	mov    ebp,0x112356cf
  430157:	dec    ebx
  430158:	mov    BYTE PTR [ebx],ch
  43015a:	push   0x3d
  43015c:	and    bh,BYTE PTR [eax+0x1c29a6d1]
  430162:	sub    eax,0x7998903
  430167:	loope  0x4301d9
  430169:	loop   0x430159
  43016b:	out    dx,al
  43016c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43016d:	enter  0x1c62,0x9b
  430171:	mov    edx,0x3ecfa70c
  430176:	popf   
  430177:	cmp    DWORD PTR [ecx],ebp
  430179:	cmp    esi,esi
  43017b:	rcr    DWORD PTR [ebx+ebp*2-0x32],0xe2
  430180:	xor    DWORD PTR [ebx-0x6ac367f8],0x3249b963
  43018a:	sbb    eax,DWORD PTR [ecx-0x6dc05fa]
  430190:	push   esi
  430191:	(bad)  
  430192:	leave  
  430193:	inc    ebp
  430194:	fwait
  430195:	mov    ecx,0xababebc5
  43019a:	scas   eax,DWORD PTR es:[edi]
  43019b:	pusha  
  43019c:	cld    
  43019d:	imul   ecx,DWORD PTR [esi-0xcfadb67],0x7e
  4301a4:	out    0xf7,eax
  4301a6:	or     eax,0xb7f1a597
  4301ab:	ins    DWORD PTR es:[edi],dx
  4301ac:	adc    al,0x6
  4301ae:	lahf   
  4301af:	mov    ah,dl
  4301b1:	sti    
  4301b2:	and    eax,0xb1560c48
  4301b7:	int    0x7f
  4301b9:	and    eax,0xeac8a3d3
  4301be:	dec    eax
  4301bf:	fs mov edi,0xb0c08d00
  4301c5:	cld    
  4301c6:	es pop edi
  4301c8:	jmp    0xba0e:0xaf93b38f
  4301cf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4301d0:	jno    0x4301ff
  4301d2:	add    BYTE PTR [esi+eiz*8-0x22290b9c],cl
  4301d9:	dec    ebp
  4301da:	test   DWORD PTR [ebx-0x14],0x198dd997
  4301e1:	sub    dh,cl
  4301e3:	dec    esp
  4301e4:	sbb    esp,ecx
  4301e6:	(bad)  
  4301e7:	hlt    
  4301e8:	jne    0x430258
  4301ea:	push   cs
  4301eb:	or     eax,0xf963a687
  4301f0:	and    BYTE PTR [ebx],ah
  4301f2:	add    esi,DWORD PTR [eax+eiz*4]
  4301f5:	mov    al,ds:0x4b99d8d3
  4301fa:	out    0x48,eax
  4301fc:	jg     0x4301fe
  4301fe:	xchg   ebp,eax
  4301ff:	and    al,0x17
  430201:	pop    edi
  430202:	pop    edi
  430203:	mov    dh,ah
  430205:	lock sbb dl,BYTE PTR [ebx+0x1657f10a]
  43020c:	sub    BYTE PTR [esi-0x5],ah
  43020f:	std    
  430210:	dec    eax
  430211:	xchg   esp,eax
  430212:	sub    eax,esp
  430214:	push   ebp
  430215:	mov    ecx,ebx
  430217:	push   edi
  430218:	in     eax,dx
  430219:	sbb    DWORD PTR ds:[ebp-0x7f1a655e],ecx
  430220:	push   cs
  430221:	dec    edi
  430222:	les    edi,FWORD PTR [edi-0x7efb9d71]
  430228:	push   eax
  430229:	test   ecx,edx
  43022b:	hlt    
  43022c:	jb     0x4301db
  43022e:	das    
  43022f:	push   ebp
  430230:	push   0x0
  430232:	cs jae 0x4302ae
  430235:	adc    al,0xe6
  430237:	lahf   
  430238:	(bad)  
  430239:	fld    QWORD PTR [esi+0x4fba642c]
  43023f:	pop    eax
  430240:	aam    0xdd
  430242:	add    BYTE PTR [edx],bh
  430244:	inc    eax
  430245:	inc    esi
  430246:	fild   DWORD PTR [ecx+0x4d490080]
  43024c:	sti    
  43024d:	sub    DWORD PTR [esi],edi
  43024f:	(bad)  
  430250:	cmc    
  430251:	jae    0x430271
  430253:	adc    al,BYTE PTR [edx+eax*4]
  430256:	aam    0x4f
  430258:	push   edi
  430259:	arpl   WORD PTR [eax],bp
  43025b:	pop    ecx
  43025c:	ins    DWORD PTR es:[edi],dx
  43025d:	pop    edi
  43025e:	inc    ebp
  43025f:	jle    0x43024c
  430261:	adc    esp,DWORD PTR [edx]
  430263:	add    al,BYTE PTR ds:0xc38d210
  430269:	sti    
  43026a:	jmp    0x25fe62ed
  43026f:	cmp    edi,edi
  430271:	mov    edx,0x173aee46
  430276:	addr16 hlt 
  430278:	pop    es
  430279:	call   0x80f6548
  43027e:	pop    edi
  43027f:	(bad)  
  430281:	in     al,dx
  430282:	test   eax,0xdc2ee678
  430287:	dec    edx
  430288:	fiadd  WORD PTR [ecx]
  43028a:	cdq    
  43028b:	lods   eax,DWORD PTR ds:[esi]
  43028c:	jmp    0x430286
  43028e:	inc    ebp
  43028f:	adc    DWORD PTR [ecx+esi*8],ecx
  430292:	popf   
  430293:	jnp    0x4302c4
  430295:	rcr    ch,cl
  430297:	mov    ah,0x6b
  430299:	pop    esi
  43029a:	mov    ebx,0xc1565a93
  43029f:	popa   
  4302a0:	mov    DWORD PTR [ecx],esi
  4302a2:	dec    ebx
  4302a3:	push   edi
  4302a4:	ret    
  4302a5:	cs push cs
  4302a7:	ficomp DWORD PTR [ebp+0x3f928f3f]
  4302ad:	push   ebp
  4302ae:	nop
  4302af:	ins    DWORD PTR es:[edi],dx
  4302b0:	daa    
  4302b1:	push   0xb24e45ed
  4302b6:	popa   
  4302b7:	ja     0x430293
  4302b9:	ins    DWORD PTR es:[edi],dx
  4302ba:	test   DWORD PTR [edi+eiz*1-0xae60ee4],edi
  4302c1:	iret   
  4302c2:	cmp    DWORD PTR [edi+0x2760646b],ecx
  4302c8:	xor    cl,0x54
  4302cb:	push   edx
  4302cc:	pop    esp
  4302cd:	retf   0xe396
  4302d0:	add    DWORD PTR [edi+0x5c39b737],ecx
  4302d6:	das    
  4302d7:	mov    dh,0x5
  4302d9:	ret    
  4302da:	out    0xe3,eax
  4302dc:	sahf   
  4302dd:	mov    edx,0xc1523f5b
  4302e2:	pop    es
  4302e3:	sub    BYTE PTR [edx+eax*8],dl
  4302e6:	pushf  
  4302e7:	jo     0x430352
  4302e9:	xchg   ecx,eax
  4302ea:	jns    0x43032a
  4302ec:	push   cs
  4302ed:	xor    al,0x3
  4302ef:	or     DWORD PTR [eax+0x4080ab5a],edi
  4302f5:	push   ss
  4302f6:	dec    esp
  4302f7:	mov    dl,0x29
  4302f9:	xchg   esi,eax
  4302fa:	sbb    esp,DWORD PTR [edi]
  4302fc:	nop
  4302fd:	cmp    esi,esi
  4302ff:	js     0x43035f
  430301:	add    edi,DWORD PTR [ebx-0x3]
  430304:	popf   
  430305:	or     ecx,DWORD PTR ss:[ebx+edx*4]
  430309:	les    ebp,FWORD PTR [eax-0x4da0daec]
  43030f:	imul   ebp,edi,0x7d8915a
  430315:	xor    bl,BYTE PTR [edx-0x4a]
  430318:	pushf  
  430319:	stos   DWORD PTR es:[edi],eax
  43031a:	mov    eax,0xf548432a
  43031f:	cmp    ebp,DWORD PTR [ebp+0x30]
  430322:	int    0x3c
  430324:	mov    ebx,ebp
  430326:	pop    es
  430327:	fmul   st,st(6)
  430329:	lods   eax,DWORD PTR ds:[esi]
  43032a:	jge    0x430368
  43032c:	add    DWORD PTR [edx-0x30],esi
  43032f:	fdivr  DWORD PTR [esi+ebx*1-0x35]
  430333:	push   ebp
  430334:	icebp  
  430335:	mov    ds:0x4e119833,eax
  43033a:	fsub   st(1),st
  43033c:	push   esi
  43033d:	(bad)
  430340:	fistp  WORD PTR [ebx-0x7b]
  430343:	push   ebx
  430344:	cmp    al,0x9b
  430346:	test   eax,0x47936d2a
  43034b:	fisttp DWORD PTR [edi+0x33]
  43034e:	inc    eax
  43034f:	sti    
  430350:	add    dl,dh
  430352:	fs mov al,0x70
  430355:	xor    eax,0x713aec7
  43035a:	retf   0x8a23
  43035d:	xchg   ebx,eax
  43035e:	jmp    0xc35e4353
  430363:	and    DWORD PTR [ebx+ebp*8],ebp
  430366:	jmp    0xed75b0f0
  43036b:	shr    BYTE PTR [esi+ebp*4+0x68],cl
  43036f:	add    edi,DWORD PTR [eax]
  430371:	aam    0x6f
  430373:	jecxz  0x43036d
  430375:	in     al,0x8c
  430377:	xchg   esi,eax
  430378:	arpl   WORD PTR [esi-0x69e0696a],si
  43037e:	sbb    al,0x1d
  430380:	and    al,0xcd
  430382:	(bad)  
  430383:	cmp    ecx,DWORD PTR [eax]
  430385:	gs pop edx
  430387:	pop    ss
  430388:	jb     0x43031e
  43038a:	mov    esi,0xd94c94d2
  43038f:	add    edi,DWORD PTR [ebp+0x3632df27]
  430395:	push   0xba7854f8
  43039a:	jnp    0x4303fd
  43039c:	inc    ebp
  43039d:	aad    0xa
  43039f:	pop    eax
  4303a0:	arpl   WORD PTR [ebx-0x7c],ax
  4303a3:	ins    DWORD PTR es:[edi],dx
  4303a4:	out    dx,al
  4303a5:	test   al,0x3f
  4303a7:	cmc    
  4303a8:	in     al,dx
  4303a9:	call   0xd203:0x4bdb59e3
  4303b0:	fldcw  WORD PTR [esi-0x46]
  4303b3:	adc    al,0x32
  4303b5:	sbb    BYTE PTR [esi],dh
  4303b7:	sbb    al,0xf8
  4303b9:	into   
  4303ba:	bound  edx,QWORD PTR [ebx]
  4303bc:	or     bl,dh
  4303be:	mov    ecx,0xaaab4624
  4303c3:	gs jp  0x430425
  4303c6:	lods   eax,DWORD PTR ds:[esi]
  4303c7:	js     0x430351
  4303c9:	jno    0x430362
  4303cb:	pop    ebp
  4303cc:	in     al,dx
  4303cd:	sub    BYTE PTR [edx-0x523f79e3],ch
  4303d3:	outs   dx,DWORD PTR ds:[esi]
  4303d4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4303d5:	jg     0x430374
  4303d7:	mov    edx,0x2699ff24
  4303dc:	jmp    0x4ca038f
  4303e1:	xchg   edx,eax
  4303e2:	loopne 0x4303a6
  4303e4:	jg     0x430420
  4303e6:	outs   dx,BYTE PTR ds:[esi]
  4303e7:	jo     0x43045f
  4303e9:	xchg   ebx,eax
  4303ea:	cmp    al,0x83
  4303ec:	jns    0x43042a
  4303ee:	lock dec ebx
  4303f0:	sub    BYTE PTR [edx+ebx*4],cl
  4303f3:	push   ecx
  4303f4:	pop    esp
  4303f5:	add    DWORD PTR [edi*8+0x790a9349],eax
  4303fc:	adc    edi,DWORD PTR [ecx-0x58922a51]
  430402:	ja     0x430482
  430404:	(bad)  
  430406:	sahf   
  430407:	jo     0x43043c
  430409:	in     eax,0x24
  43040b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43040c:	push   ebx
  43040d:	jb     0x430428
  43040f:	fs fwait
  430411:	les    esi,FWORD PTR [edx]
  430413:	gs add eax,0xabe42261
  430419:	mov    DWORD PTR [eax],edx
  43041b:	push   ax
  43041d:	sub    ebx,DWORD PTR [ecx+0x48]
  430420:	mov    ecx,0x53c47afb
  430425:	lock and dh,BYTE PTR [eax+0x41]
  430429:	mov    ds:0xc4080bfc,eax
  43042e:	divps  xmm5,XMMWORD PTR [edx-0x1f6f6ece]
  430435:	inc    edx
  430436:	cmp    al,0x72
  430438:	into   
  430439:	div    BYTE PTR [esi-0x6666cbab]
  43043f:	mov    BYTE PTR [eax-0x57],dl
  430442:	cmp    al,BYTE PTR [esi-0x4a012c51]
  430448:	adc    DWORD PTR [esi+0x7d],esp
  43044b:	test   eax,0x9b3dfb23
  430450:	(bad)  
  430451:	sbb    eax,0xfc3920b9
  430456:	mov    esi,0xeeea0123
  43045b:	loope  0x43048e
  43045d:	loope  0x430452
  43045f:	and    DWORD PTR [ebp+0x27],edx
  430462:	xchg   edi,eax
  430463:	mov    cs,ebp
  430465:	push   edx
  430466:	cmp    ebp,edi
  430468:	mov    bh,0xce
  43046a:	in     al,0x6d
  43046c:	jl     0x43047b
  43046e:	jg     0x4303ff
  430470:	push   ebx
  430471:	sbb    DWORD PTR [eax-0x515ecc80],esi
  430477:	jge    0x4304f7
  430479:	pop    edi
  43047a:	sub    cl,BYTE PTR [ebx-0x71]
  43047d:	xchg   ebx,eax
  43047e:	add    ebp,DWORD PTR [ecx+0x27]
  430481:	adc    al,0x5d
  430483:	adc    eax,0x3bbae4a8
  430488:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  430489:	push   edi
  43048a:	cmc    
  43048b:	mov    esp,0xd1482f53
  430490:	es hlt 
  430492:	inc    ecx
  430493:	sub    al,0x7f
  430495:	push   esi
  430496:	dec    ecx
  430497:	adc    al,dl
  430499:	sub    ebp,DWORD PTR [edi]
  43049b:	inc    eax
  43049c:	sahf   
  43049d:	repz pushf 
  43049f:	jmp    0x430477
  4304a1:	add    eax,0xa7b23fcd
  4304a6:	call   0x6862:0x8205acdc
  4304ad:	loop   0x43051c
  4304af:	pop    esi
  4304b0:	sbb    ebp,edx
  4304b2:	sbb    ebx,DWORD PTR [edx]
  4304b4:	xchg   ebx,eax
  4304b5:	ror    BYTE PTR [edi+0x1],0x3b
  4304b9:	das    
  4304ba:	mov    ecx,0xcf22d49f
  4304bf:	cwde   
  4304c0:	shl    DWORD PTR [edi+0x60c92c98],1
  4304c6:	sbb    dl,0x32
  4304c9:	out    0x56,al
  4304cb:	mov    bl,0x97
  4304cd:	cdq    
  4304ce:	jb     0x430486
  4304d0:	fcmovne st,st(5)
  4304d2:	add    DWORD PTR [ecx+ebp*1-0x683aef93],edx
  4304d9:	sbb    al,0x95
  4304db:	sub    cl,ah
  4304dd:	mov    edi,0x6679149c
  4304e2:	mov    ch,0xde
  4304e4:	mov    ebp,ebp
  4304e6:	cmp    BYTE PTR [ecx],al
  4304e8:	jns    0x430531
  4304ea:	(bad)  
  4304eb:	sub    dl,BYTE PTR [edi]
  4304ed:	outs   dx,BYTE PTR ds:[esi]
  4304ee:	mov    al,0xc
  4304f0:	jle    0x4304e5
  4304f2:	(bad)  
  4304f4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4304f5:	shl    BYTE PTR [eax],0x25
  4304f8:	fdivr  QWORD PTR es:[esi]
  4304fb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4304fc:	xchg   ebx,eax
  4304fd:	sub    eax,0xd834ff89
  430502:	in     eax,0x28
  430504:	neg    DWORD PTR ds:0xa7784ce8
  43050a:	(bad)  
  43050b:	xor    bl,BYTE PTR [ecx+0x40]
  43050e:	sbb    BYTE PTR [eax-0x4b],bh
  430511:	call   0x74fdba63
  430516:	jae    0x4304e3
  430518:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  430519:	pop    sp
  43051b:	aam    0x53
  43051d:	mov    eax,ds:0x20faa51
  430522:	dec    ecx
  430523:	push   ecx
  430524:	xchg   BYTE PTR [edi+0x747f5467],dh
  43052a:	scas   eax,DWORD PTR es:[edi]
  43052b:	inc    edx
  43052c:	mov    BYTE PTR [edx-0x54],bl
  43052f:	mov    cl,0x2
  430531:	jle    0x4304cc
  430533:	push   edx
  430534:	sbb    edi,eax
  430536:	in     eax,dx
  430537:	jbe    0x430536
  430539:	mov    al,ds:0x53362118
  43053e:	sbb    cl,BYTE PTR [edi]
  430540:	jmp    0x3a5be795
  430545:	mov    ds:0x1b192fac,eax
  43054a:	inc    ebp
  43054b:	add    ecx,eax
  43054d:	pop    edi
  43054e:	mov    ecx,DWORD PTR [esi+edx*4]
  430551:	pop    ebp
  430552:	push   ebp
  430553:	out    0xac,eax
  430555:	(bad)  
  430556:	hlt    
  430557:	cmc    
  430558:	lods   eax,DWORD PTR ds:[esi]
  430559:	lea    esp,[ecx-0x57]
  43055c:	repz jp 0x4305b8
  43055f:	es aad 0xee
  430562:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  430563:	push   esp
  430564:	cwde   
  430565:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  430566:	adc    al,0x88
  430568:	xchg   DWORD PTR [ecx+0x3d920c85],esi
  43056e:	pop    ds
  43056f:	push   0x5a
  430571:	shl    DWORD PTR [edi+0x49ed726b],0x8
  430578:	adc    BYTE PTR [edi+0x41cae648],al
  43057e:	xchg   ecx,eax
  43057f:	scas   eax,DWORD PTR es:[edi]
  430580:	sub    al,0x3e
  430582:	mov    eax,ds:0xc4491479
  430587:	popa   
  430588:	jns    0x4305cd
  43058a:	xchg   ebx,eax
  43058b:	cmp    BYTE PTR [ebp-0x41],bh
  43058e:	mov    ebp,0x931f541a
  430593:	enter  0x649c,0xd4
  430597:	and    BYTE PTR [ebp-0x12fe3992],dh
  43059d:	mov    ds:0xf93b4fde,al
  4305a3:	push   es
  4305a4:	outs   dx,DWORD PTR ds:[esi]
  4305a5:	pop    ebp
  4305a6:	cli    
  4305a7:	adc    ecx,edi
  4305a9:	xlat   BYTE PTR ds:[ebx]
  4305aa:	adc    ebx,esp
  4305ac:	ret    
  4305ad:	fld    TBYTE PTR [esi-0x6]
  4305b0:	xchg   ebp,eax
  4305b1:	std    
  4305b2:	fimul  WORD PTR [edx+0x29bbb0ca]
  4305b8:	shr    DWORD PTR [esi],1
  4305ba:	jp     0x430601
  4305bc:	in     eax,dx
  4305bd:	jb     0x4305ee
  4305bf:	sti    
  4305c0:	imul   ebx,DWORD PTR [esi+eax*1-0x22],0x58424a50
  4305c8:	and    edx,DWORD PTR [ecx-0x2d]
  4305cb:	push   edx
  4305cc:	or     BYTE PTR [ebp+0x63],bh
  4305cf:	mov    ch,0x41
  4305d1:	or     eax,0xca97c10f
  4305d6:	dec    esi
  4305d7:	dec    esi
  4305d8:	cmp    edi,DWORD PTR [ebp+0x52630179]
  4305de:	ja     0x430657
  4305e0:	or     ch,BYTE PTR [esp+ebx*1+0x61a4d71e]
  4305e7:	xchg   ebx,ebx
  4305e9:	retf   0x3b69
  4305ec:	outs   dx,BYTE PTR es:[esi]
  4305ee:	inc    ebx
  4305ef:	mov    bl,0x35
  4305f1:	and    DWORD PTR [ebx+0x72],esp
  4305f4:	sub    DWORD PTR [eax-0x49],ebx
  4305f7:	hlt    
  4305f8:	push   ebp
  4305f9:	dec    edx
  4305fa:	add    ebp,DWORD PTR [esp+edx*4-0x1d98088d]
  430601:	jge    0x43064b
  430603:	arpl   WORD PTR [esi+0x18],di
  430606:	mul    BYTE PTR [edx+0x4b]
  430609:	add    BYTE PTR [edx],0xf9
  43060c:	mov    edx,0x5718a29e
  430611:	push   ds
  430612:	mov    ch,0xcd
  430614:	xlat   BYTE PTR ds:[ebx]
  430615:	shl    BYTE PTR es:[esi+0x60c7a26b],0x74
  43061d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43061e:	loopne 0x430666
  430620:	mov    ebx,0x1dae81f3
  430625:	sbb    eax,0x881b66de
  43062a:	je     0x4305cc
  43062c:	sub    al,0xd1
  43062e:	add    al,BYTE PTR [eax+0x380583f7]
  430634:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  430635:	sub    al,0x5c
  430637:	mov    eax,0x4cae388a
  43063c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43063d:	das    
  43063e:	add    DWORD PTR [ebx],ebp
  430640:	sbb    ch,bl
  430642:	call   0x4f99d116
  430647:	test   bh,bl
  430649:	mov    esp,0x1fb3367c
  43064e:	es push cs
  430650:	das    
  430651:	addr16 hlt 
  430653:	xor    esp,DWORD PTR [esi]
  430655:	mov    gs,WORD PTR [eax]
  430657:	adc    ah,al
  430659:	inc    esp
  43065a:	leave  
  43065b:	std    
  43065c:	or     BYTE PTR [ecx+0x39],cl
  43065f:	xchg   edi,eax
  430660:	mov    ebx,DWORD PTR [ebx-0x22]
  430663:	pop    edx
  430664:	xor    eax,0x484c923a
  430669:	xchg   esi,eax
  43066a:	mov    ecx,0xa49c734
  43066f:	xlat   BYTE PTR ds:[ebx]
  430670:	sbb    al,0xb6
  430672:	pop    ebp
  430673:	lea    esp,ss:[edi]
  430676:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  430677:	adc    al,0x87
  430679:	push   0xa0855d64
  43067e:	js     0x430607
  430680:	imul   ecx,DWORD PTR ds:0x13cc9c9,0xffffffd9
  430687:	cdq    
  430688:	in     al,dx
  430689:	dec    edx
  43068a:	bsf    esi,DWORD PTR [eax+0x0]
  43068e:	jae    0x4306f6
  430690:	cld    
  430691:	sub    al,0x7
  430693:	jl     0x430693
  430695:	shl    DWORD PTR [edi-0x28],1
  430698:	ja     0x43069c
  43069a:	fdiv   DWORD PTR [ebx-0x53]
  43069d:	sbb    DWORD PTR [eax+edx*1],ecx
  4306a0:	imul   ebp,DWORD PTR ds:0x496b60d7,0x8ba96e68
  4306aa:	and    al,0x7a
  4306ac:	sbb    ebx,DWORD PTR [edi+0x13]
  4306af:	loopne 0x4306e9
  4306b1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4306b2:	ret    0xf6ce
  4306b5:	push   es
  4306b6:	ins    BYTE PTR es:[edi],dx
  4306b7:	test   BYTE PTR [ecx+0x25b3b336],bl
  4306bd:	in     eax,dx
  4306be:	fnstenv [ebp-0xa]
  4306c1:	dec    ebp
  4306c2:	sbb    DWORD PTR [ebx],0xd
  4306c5:	xor    BYTE PTR [eax+0x2a],ah
  4306c8:	mov    eax,ds:0x3ed27a23
  4306cd:	push   0x49
  4306cf:	push   esp
  4306d0:	lods   al,BYTE PTR ds:[esi]
  4306d1:	mov    dh,0xe8
  4306d3:	ja     0x430738
  4306d5:	stos   BYTE PTR es:[edi],al
  4306d6:	mov    ebp,0xadd97e0
  4306db:	scas   eax,DWORD PTR es:[edi]
  4306dc:	pop    ss
  4306dd:	idiv   cl
  4306df:	rol    DWORD PTR [ecx+0x36],0xb4
  4306e3:	outs   dx,DWORD PTR ds:[esi]
  4306e4:	stc    
  4306e5:	(bad)  
  4306e6:	mov    dl,0x46
  4306e8:	sbb    eax,0x22f6f0d0
  4306ee:	cmp    dh,BYTE PTR [edx-0x68d67549]
  4306f4:	jmp    0xe4165124
  4306f9:	adc    edx,eax
  4306fb:	sbb    al,0x1f
  4306fd:	inc    esp
  4306fe:	or     al,0xa2
  430700:	popf   
  430701:	lea    ecx,[eax+ebp*1]
  430704:	or     bl,BYTE PTR [edi+ebp*2]
  430707:	inc    esp
  430708:	add    eax,0x266fffac
  43070d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43070e:	je     0x4306b5
  430710:	jl     0x43078b
  430712:	sar    BYTE PTR [ecx-0x11],0xbc
  430716:	jmp    FWORD PTR [eax]
  430718:	shr    esi,cl
  43071a:	xor    BYTE PTR [ebx],al
  43071c:	and    eax,0x2462dffd
  430721:	mov    eax,ds:0x77358e38
  430726:	dec    esp
  430727:	adc    cl,cl
  430729:	adc    eax,0x7e34ee82
  43072e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  43072f:	adc    eax,0xf0dc5ff8
  430734:	xor    ecx,esp
  430736:	ja     0x4306fb
  430738:	dec    ebx
  430739:	sar    BYTE PTR [ecx-0x64],1
  43073c:	and    bh,BYTE PTR [edi]
  43073e:	inc    ebx
  43073f:	lods   al,BYTE PTR ds:[esi]
  430740:	push   ebx
  430741:	mov    al,BYTE PTR [ebp-0xe]
  430744:	or     cl,BYTE PTR [edi-0x76]
  430747:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  430748:	loopne 0x4307ab
  43074a:	dec    edi
  43074b:	xchg   ebx,eax
  43074c:	imul   ecx,edi,0x2d
  43074f:	ret    0x21be
  430752:	cmc    
  430753:	or     esp,DWORD PTR [ecx-0x3f]
  430756:	ins    BYTE PTR es:[edi],dx
  430757:	bound  ecx,QWORD PTR [edx+0xf3834e5]
  43075d:	into   
  43075e:	out    dx,eax
  43075f:	mov    ecx,0xb092171f
  430764:	jbe    0x430706
  430766:	aam    0x16
  430768:	xor    DWORD PTR [ebp+ebp*2+0x18b693e1],edx
  43076f:	pop    edi
  430770:	mov    ch,BYTE PTR [edx]
  430772:	dec    ecx
  430773:	sar    BYTE PTR [esi+0x3ea2946d],cl
  430779:	in     al,0x29
  43077b:	xor    BYTE PTR [ebx+0x29],dh
  43077e:	cmp    BYTE PTR [ebx-0x2a],bl
  430781:	(bad)  
  430782:	ret    0xa063
  430785:	mov    eax,DWORD PTR [ebp-0x75]
  430788:	pop    ebp
  430789:	mov    WORD PTR [ebx],cs
  43078b:	mov    edi,0xd19b41e2
  430790:	pop    es
  430791:	inc    esi
  430792:	inc    esi
  430794:	in     eax,dx
  430795:	int3   
  430796:	mov    DWORD PTR [esi+0x370fbc8f],eax
  43079c:	cmp    DWORD PTR [ecx+0xf],ebx
  43079f:	or     eax,0x9e9f29ef
  4307a4:	fmul   QWORD PTR [ecx-0x6340982e]
  4307aa:	ja     0x4307fb
  4307ac:	lea    eax,[edi+0x33ca8c0a]
  4307b2:	dec    ebp
  4307b3:	mov    cl,0x8c
  4307b5:	adc    al,0x48
  4307b7:	mov    dh,BYTE PTR [esi-0x49c02a5e]
  4307bd:	shl    BYTE PTR [eax+0x7a],cl
  4307c0:	push   esi
  4307c1:	mov    bh,0x3f
  4307c3:	dec    ebp
  4307c4:	push   ss
  4307c5:	mov    eax,0x27d52a10
  4307ca:	ins    DWORD PTR es:[edi],dx
  4307cb:	rcl    DWORD PTR [eax-0x6884214],cl
  4307d1:	rol    BYTE PTR [ecx],0x38
  4307d4:	dec    esi
  4307d5:	lock xlat BYTE PTR ds:[ebx]
  4307d7:	test   DWORD PTR [ecx+0x74],eax
  4307da:	and    al,0xf9
  4307dd:	mov    al,BYTE PTR [edx]
  4307df:	lods   eax,DWORD PTR ds:[esi]
  4307e0:	cmp    cl,dh
  4307e2:	xchg   edi,eax
  4307e3:	jp     0x4307b9
  4307e5:	push   ss
  4307e6:	push   eax
  4307e7:	mov    esi,0xb194d014
  4307ec:	pop    ebp
  4307ed:	repnz hlt 
  4307ef:	into   
  4307f0:	fbld   TBYTE PTR [eax+0x2473230d]
  4307f6:	sar    DWORD PTR [eax-0x44],0x86
  4307fa:	sub    ah,dh
  4307fc:	pop    ebx
  4307fd:	sar    DWORD PTR ds:0x5c79ea5c,0x9b
  430804:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  430805:	pusha  
  430806:	add    edi,esi
  430808:	sbb    dl,BYTE PTR [edx-0x7a]
  43080b:	mov    ds:0x33bec72f,eax
  430810:	int3   
  430811:	or     eax,0x217a037
  430816:	xlat   BYTE PTR ds:[ebx]
  430817:	add    DWORD PTR [edi+0x18],0x3c65b3c3
  43081e:	mov    BYTE PTR [edx],al
  430820:	cmp    dh,dl
  430822:	cmp    eax,0x75644773
  430827:	data16 (bad) 
  430829:	retf   
  43082a:	(bad)  
  43082b:	test   eax,0xfd309cb7
  430830:	pop    ebx
  430831:	ja     0x43087c
  430833:	loopne 0x430827
  430835:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  430836:	inc    ebx
  430837:	mov    bh,0x2
  430839:	adc    eax,0x364b68f5
  43083e:	ins    DWORD PTR es:[edi],dx
  43083f:	jg     0x430813
  430841:	mov    eax,ds:0x7097f4df
  430846:	sub    ecx,DWORD PTR [ebp-0x67]
  430849:	mov    dh,0x65
  43084b:	xchg   DWORD PTR [ebp+0x3b],edi
  43084e:	es xchg edx,eax
  430850:	push   esi
  430851:	push   eax
  430852:	loop   0x4308b5
  430854:	adc    eax,0x62040f7c
  430859:	push   0x788acd4c
  43085e:	xorps  xmm1,XMMWORD PTR [edx]
  430861:	or     eax,0x60b280a7
  430866:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  430867:	pusha  
  430868:	mov    eax,0xc368a11c
  43086d:	mov    ah,0xd4
  43086f:	dec    ebp
  430870:	sar    DWORD PTR [esi-0x78a094ff],cl
  430876:	and    BYTE PTR [edx-0x5],cl
  430879:	dec    ebp
  43087a:	and    bh,BYTE PTR [esi+eax*1+0x24019d6a]
  430881:	xor    al,0xfc
  430883:	sahf   
  430884:	fcmove st,st(4)
  430886:	mov    dl,0xe5
  430888:	jne    0x4308be
  43088a:	sbb    BYTE PTR ds:0xee9d48d8,ah
  430890:	inc    edx
  430891:	in     al,dx
  430892:	xor    ebx,DWORD PTR [esi]
  430894:	pop    edi
  430895:	push   eax
  430896:	call   FWORD PTR [eax]
  430898:	mov    dl,0xe7
  43089a:	ret    0x15e2
  43089d:	push   es
  43089e:	pop    edi
  43089f:	xchg   esp,eax
  4308a0:	mov    esi,0xd851041
  4308a5:	fcomp  DWORD PTR [edx+0x7e90f29b]
  4308ab:	icebp  
  4308ac:	rep lods eax,DWORD PTR ds:[esi]
  4308ae:	xlat   BYTE PTR ds:[ebx]
  4308af:	shl    BYTE PTR [ecx],1
  4308b1:	jae    0x43088e
  4308b3:	mov    al,0xae
  4308b5:	(bad)  
  4308b6:	jg     0x43089e
  4308b8:	adc    DWORD PTR ds:0xf8f60bfe,ecx
  4308be:	and    edi,DWORD PTR [eax]
  4308c0:	fimul  WORD PTR [ebp+0x57]
  4308c3:	inc    edi
  4308c4:	or     edx,ebp
  4308c6:	inc    esp
  4308c7:	push   eax
  4308c8:	pop    ds
  4308c9:	xchg   edi,eax
  4308ca:	jg     0x4308c8
  4308cc:	shl    BYTE PTR [esi],cl
  4308ce:	inc    ecx
  4308cf:	mov    al,ds:0x124f2194
  4308d4:	out    0x74,al
  4308d6:	leave  
  4308d7:	loop   0x430950
  4308d9:	popa   
  4308da:	inc    ebx
  4308db:	sub    eax,0x8a259b6a
  4308e0:	dec    esi
  4308e1:	outs   dx,DWORD PTR ds:[esi]
  4308e2:	stos   DWORD PTR es:[edi],eax
  4308e3:	jno    0x43093f
  4308e5:	(bad)  
  4308e6:	mov    eax,0x651db083
  4308eb:	int3   
  4308ec:	sbb    eax,0x546395b8
  4308f1:	mov    eax,DWORD PTR [edi]
  4308f3:	rcl    DWORD PTR [ebx+0x45a40f1f],1
  4308f9:	xor    ch,BYTE PTR [edx+0x37006d2]
  4308ff:	call   0xdbc1:0x699abe58
  430906:	sub    ecx,DWORD PTR [ecx]
  430908:	lea    esi,[esi]
  43090a:	jo     0x4308f0
  43090c:	loope  0x4308d3
  43090e:	(bad)  
  43090f:	adc    eax,0x969ae7fa
  430914:	leave  
  430915:	int3   
  430916:	mov    bh,0xbb
  430918:	or     DWORD PTR ds:0x453afe4b,edx
  43091e:	mov    BYTE PTR [ecx-0x5faa6848],al
  430924:	mov    ah,0xab
  430926:	call   0xfac9:0x8ab6db98
  43092d:	es push esp
  43092f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  430930:	xchg   esp,eax
  430931:	mov    ah,0x4d
  430933:	jmp    0x4309a7
  430935:	in     al,dx
  430936:	rcl    BYTE PTR [eax],0xd0
  430939:	mov    bh,0xc
  43093b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43093c:	jne    0x4309b3
  43093e:	cmp    dh,bh
  430940:	adc    BYTE PTR [esi],ah
  430942:	and    BYTE PTR [ebx+edi*4+0x25ea6f5c],dh
  430949:	enter  0xa63a,0x60
  43094d:	pop    edx
  43094e:	cmp    bl,bl
  430950:	mov    ds:0xf2b67b60,eax
  430955:	jp     0x43093a
  430957:	sub    BYTE PTR [ebp-0x43],0x19
  43095b:	out    0x9c,al
  43095d:	mov    ebx,0x66282ee0
  430962:	jbe    0x430913
  430964:	xor    esp,DWORD PTR [ecx]
  430966:	(bad)  
  430967:	adc    edi,ebx
  430969:	sbb    BYTE PTR [eax],0x8f
  43096c:	pushf  
  43096d:	jecxz  0x430976
  43096f:	in     ax,0x9c
  430972:	pop    esp
  430973:	loopne 0x430906
  430975:	push   ds
  430976:	arpl   WORD PTR [ecx-0x16],bx
  430979:	(bad)  
  43097a:	sub    al,0x0
  43097c:	mov    ebp,0x99325956
  430981:	sub    DWORD PTR [eax],ebx
  430983:	xchg   edi,eax
  430984:	(bad)  
  430985:	mov    al,0x49
  430987:	sub    bl,BYTE PTR [eax+0x20]
  43098a:	std    
  43098b:	retf   
  43098c:	adc    eax,0x84a0ca54
  430991:	fwait
  430992:	imul   edx,DWORD PTR [ecx-0x20],0xe2b13622
  430999:	xor    BYTE PTR [ecx-0x51],al
  43099c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43099d:	popa   
  43099e:	pop    ebx
  43099f:	xchg   BYTE PTR [eax],dh
  4309a1:	jg     0x430955
  4309a3:	jecxz  0x4309c4
  4309a5:	enter  0x6cc,0x4f
  4309a9:	push   eax
  4309aa:	imul   edx,ecx,0xda5946bc
  4309b0:	jecxz  0x4309ac
  4309b2:	outs   dx,DWORD PTR ds:[esi]
  4309b3:	push   ss
  4309b4:	mov    al,ds:0x2f9096bc
  4309b9:	dec    esi
  4309ba:	stos   DWORD PTR es:[edi],eax
  4309bb:	fstp   QWORD PTR [ebx]
  4309bd:	fdiv   DWORD PTR [esi-0x21b1386]
  4309c3:	mov    ds:0x5bed8d3d,eax
  4309c8:	xchg   esi,eax
  4309c9:	shl    DWORD PTR [ebx-0x5b74a26e],1
  4309cf:	(bad)  
  4309d1:	pop    edi
  4309d2:	inc    edi
  4309d3:	cmp    bl,BYTE PTR [edi+0xb]
  4309d6:	aad    0x14
  4309d8:	mov    eax,0x9cd5dbec
  4309dd:	cmp    eax,0x6be9adb4
  4309e2:	retf   0x461b
  4309e5:	leave  
  4309e6:	cmp    al,0x32
  4309e8:	lds    esi,FWORD PTR [ebp-0x76533b7d]
  4309ee:	sub    DWORD PTR [ecx],0x70
  4309f1:	lods   al,BYTE PTR ds:[esi]
  4309f2:	dec    eax
  4309f3:	lods   al,BYTE PTR ds:[esi]
  4309f4:	pop    edx
  4309f5:	xor    ebx,DWORD PTR [ecx+edi*8+0xd9e8440]
  4309fc:	push   esi
  4309fd:	sub    eax,0x73749f5e
  430a02:	mov    dh,BYTE PTR [edi-0x1c579307]
  430a08:	or     al,0x7a
  430a0a:	mov    ah,0xad
  430a0c:	fmul   DWORD PTR [edx-0x401d2681]
  430a12:	cld    
  430a13:	mov    dl,0xb1
  430a15:	test   BYTE PTR [edx],dl
  430a17:	inc    edi
  430a18:	sub    BYTE PTR [ecx+ebp*1+0x6e],dh
  430a1c:	test   ch,cl
  430a1e:	push   eax
  430a1f:	adc    DWORD PTR [edi-0x36a6ddee],edx
  430a25:	cmp    DWORD PTR [esi],esi
  430a27:	jecxz  0x4309bd
  430a29:	arpl   WORD PTR [eax],bp
  430a2b:	pop    di
  430a2d:	icebp  
  430a2e:	xchg   edi,eax
  430a2f:	sbb    eax,0x224858ea
  430a34:	mov    dh,0xcd
  430a36:	sbb    bh,0x17
  430a39:	adc    DWORD PTR [ebx],ebp
  430a3b:	push   ds
  430a3c:	sub    al,0xaa
  430a3e:	pop    edi
  430a3f:	cmc    
  430a40:	and    DWORD PTR [esi+0x19],esp
  430a43:	std    
  430a44:	xchg   ecx,eax
  430a45:	nop
  430a46:	aam    0x8a
  430a48:	daa    
  430a49:	adc    DWORD PTR [esi-0x25],0x30b1d84e
  430a50:	outs   dx,BYTE PTR ds:[esi]
  430a51:	mov    ecx,0x4b20ad54
  430a56:	not    BYTE PTR [edx-0x10]
  430a59:	xchg   edx,eax
  430a5a:	or     BYTE PTR [edi],dh
  430a5c:	sbb    al,0x20
  430a5e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  430a5f:	out    0xb1,al
  430a61:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  430a62:	mov    dh,0x3b
  430a64:	jo     0x430a59
  430a66:	sar    BYTE PTR [edi],1
  430a68:	inc    esi
  430a69:	and    esi,DWORD PTR [esi+0x69]
  430a6c:	imul   edx,edi,0x909ccf84
  430a72:	cmp    eax,0x7c9e42a4
  430a77:	iret   
  430a78:	retf   
  430a79:	push   0xe
  430a7b:	jne    0x430a03
  430a7d:	cld    
  430a7e:	xchg   ebp,eax
  430a7f:	sub    eax,0xf1cdf61a
  430a85:	(bad)  
  430a87:	retf   
  430a88:	mov    bh,0xd8
  430a8a:	bound  ecx,QWORD PTR [edi-0x7ea996a4]
  430a90:	push   ebp
  430a91:	push   esi
  430a92:	test   eax,0xa840ab3c
  430a97:	test   eax,0x74ed2a24
  430a9c:	sbb    al,0x12
  430a9e:	xor    BYTE PTR ds:0x710b65ff,0xe9
  430aa5:	cmp    bl,BYTE PTR [edx]
  430aa7:	mov    edx,0xa56aa751
  430aac:	cmc    
  430aad:	ja     0x430ac2
  430aaf:	cs leave 
  430ab1:	pushf  
  430ab2:	mov    ebx,0xf6c9b2e2
  430ab7:	inc    esi
  430ab8:	inc    eax
  430ab9:	mov    ebx,0xd1c31554
  430abe:	cld    
  430abf:	ins    DWORD PTR es:[edi],dx
  430ac0:	add    eax,0x61fd39d4
  430ac5:	cmp    BYTE PTR [ecx+0xc],cl
  430ac8:	imul   ebx,esi,0xffffffc3
  430acb:	pop    ds
  430acc:	aam    0x92
  430ace:	sbb    al,0x8
  430ad0:	sub    eax,0x22484455
  430ad5:	ins    BYTE PTR es:[edi],dx
  430ad6:	retf   
  430ad7:	icebp  
  430ad8:	xchg   ebp,eax
  430ad9:	retf   0x5725
  430adc:	stc    
  430add:	adc    al,0x52
  430adf:	fsub   QWORD PTR [esi-0x3b]
  430ae2:	adc    ebp,ebx
  430ae4:	jmp    0x1150f99d
  430ae9:	fisub  DWORD PTR [edi-0x2e]
  430aec:	inc    ecx
  430aed:	adc    eax,0x6f
  430af2:	add    BYTE PTR [eax],al
  430af4:	sbb    bl,BYTE PTR [ebp-0x20]
  430af7:	push   ebx
  430af8:	add    BYTE PTR [eax],al
  430afa:	add    BYTE PTR [eax],al
  430afc:	add    al,BYTE PTR [eax]
  430afe:	add    BYTE PTR [eax],al
  430b00:	jnp    0x430b02
  430b02:	add    BYTE PTR [eax],al
  430b04:	or     al,0xb
  430b06:	add    eax,DWORD PTR [eax]
  430b08:	or     al,0xed
  430b0a:	add    al,BYTE PTR [eax]
  430b0c:	push   edx
  430b0d:	push   ebx
  430b0e:	inc    esp
  430b0f:	push   ebx
  430b10:	stos   DWORD PTR es:[edi],eax
  430b11:	(bad)  
  430b12:	nop
  430b13:	sub    dl,BYTE PTR [ebx-0x7f]
  430b16:	and    eax,DWORD PTR [edi-0x73]
  430b19:	scas   eax,DWORD PTR es:[edi]
  430b1a:	loop   0x430b78
  430b1c:	cmp    BYTE PTR [esi+0x2b],dl
  430b1f:	jmp    0x430b22
  430b21:	add    BYTE PTR [eax],al
  430b23:	add    BYTE PTR [ebx+0x3a],al
  430b26:	pop    esp
  430b27:	push   ebp
  430b28:	jae    0x430b8f
  430b2a:	jb     0x430b9f
  430b2c:	pop    esp
  430b2d:	inc    edi
  430b2e:	outs   dx,DWORD PTR gs:[esi]
  430b30:	jb     0x430b99
  430b32:	gs pop esp
  430b34:	inc    esp
  430b35:	gs jae 0x430ba3
  430b38:	je     0x430ba9
  430b3a:	jo     0x430b98
  430b3c:	push   eax
  430b3d:	jb     0x430bae
  430b3f:	push   0x65
  430b41:	arpl   WORD PTR [ebx+esi*2+0x5c],si
  430b45:	pop    edx
  430b46:	gs jb  0x430bb8
  430b49:	dec    esp
  430b4a:	outs   dx,DWORD PTR ds:[esi]
  430b4b:	arpl   WORD PTR [ebx+0x65],bp
  430b4e:	jb     0x430bac
  430b50:	push   esp
  430b51:	gs jae 0x430bc8
  430b54:	imul   ebp,DWORD PTR [esi+0x67],0x75745320
  430b5b:	data16 pop sp
  430b5e:	push   esp
  430b5f:	gs jae 0x430bd6
  430b62:	imul   ebp,DWORD PTR [esi+0x67],0x75745320
  430b69:	data16 pop sp
  430b6c:	outs   dx,DWORD PTR ds:[esi]
  430b6d:	bound  ebp,QWORD PTR [edx+0x5c]
  430b70:	inc    esp
  430b71:	bound  esi,QWORD PTR gs:[ebp+0x67]
  430b75:	pop    esp
  430b76:	push   esp
  430b77:	popa   
  430b78:	jae    0x430be5
  430b7a:	and    BYTE PTR [ebp+0x61],cl
  430b7d:	outs   dx,BYTE PTR ds:[esi]
  430b7e:	popa   
  430b7f:	addr16 gs jb 0x430bb1
  430b83:	jo     0x430be9
  430b85:	bound  eax,QWORD PTR [eax]
  430b87:	add    BYTE PTR [edx+0x53],al
  430b8a:	dec    edx
  430b8b:	inc    edx
  430b8c:	add    DWORD PTR [eax],eax
  430b8e:	add    DWORD PTR [eax],eax
  430b90:	add    BYTE PTR [eax],al
  430b92:	add    BYTE PTR [eax],al
  430b94:	or     al,0x0
  430b96:	add    BYTE PTR [eax],al
  430b98:	jbe    0x430bcc
  430b9a:	xor    BYTE PTR cs:[esi],ch
  430b9d:	xor    eax,0x37323730
  430ba2:	add    BYTE PTR [eax],al
  430ba4:	add    BYTE PTR [eax],al
  430ba6:	add    eax,0x6c00
  430bab:	add    BYTE PTR [eax+0x1d],cl
  430bae:	add    BYTE PTR [eax],al
  430bb0:	and    edi,DWORD PTR [esi+0x0]
  430bb3:	add    BYTE PTR [ebp+ebx*1+0x1aa00000],dh
  430bba:	add    BYTE PTR [eax],al
  430bbc:	and    edx,DWORD PTR [ebx+0x74]
  430bbf:	jb     0x430c2a
  430bc1:	outs   dx,BYTE PTR ds:[esi]
  430bc2:	addr16 jae 0x430bc5
  430bc5:	add    BYTE PTR [eax],al
  430bc7:	add    BYTE PTR [eax+edi*1+0x0],dl
  430bcb:	add    BYTE PTR [eax],dl
  430bcd:	add    BYTE PTR [eax],al
  430bcf:	add    BYTE PTR [ebx],ah
  430bd1:	inc    edi
  430bd2:	push   ebp
  430bd3:	dec    ecx
  430bd4:	inc    esp
  430bd5:	add    BYTE PTR [eax],al
  430bd7:	add    BYTE PTR [eax+edi*1+0x0],ah
  430bdb:	add    BYTE PTR [eax+0x2300000d],bl
  430be1:	inc    edx
  430be2:	ins    BYTE PTR es:[edi],dx
  430be3:	outs   dx,DWORD PTR ds:[esi]
  430be4:	bound  eax,QWORD PTR [eax]
  430be6:	add    BYTE PTR [eax],al
  430be8:	cld    
  430be9:	inc    ebp
  430bea:	add    BYTE PTR [eax],al
  430bec:	les    eax,FWORD PTR [ecx]
  430bee:	add    BYTE PTR [eax],al
  430bf0:	and    edx,DWORD PTR [ebp+0x53]
  430bf3:	add    BYTE PTR [eax],al
  430bf5:	add    BYTE PTR [eax],al
  430bf7:	add    BYTE PTR [edx],al
  430bf9:	add    BYTE PTR [eax],al
  430bfb:	add    DWORD PTR [edi+0x1d],edx
  430bfe:	mov    ds:0x1f0909,al
  430c03:	add    BYTE PTR [eax],al
  430c05:	cli    
  430c06:	add    DWORD PTR [ebx],esi
  430c08:	add    BYTE PTR [edx],al
  430c0a:	add    BYTE PTR [eax],al
  430c0c:	add    DWORD PTR [eax],eax
  430c0e:	add    BYTE PTR [eax],al
  430c10:	mov    eax,0x14000000
  430c15:	add    BYTE PTR [eax],al
  430c17:	add    BYTE PTR [ecx],bh
  430c19:	add    BYTE PTR [eax],al
  430c1b:	add    BYTE PTR [edi+0x0],bh
  430c1e:	add    BYTE PTR [eax],al
  430c20:	push   ebp
  430c21:	add    BYTE PTR [eax],al
  430c23:	add    BYTE PTR [ebp+0x1],dl
  430c26:	add    BYTE PTR [eax],al
  430c28:	add    al,BYTE PTR [eax]
  430c2a:	add    BYTE PTR [eax],al
  430c2c:	xchg   DWORD PTR [eax],eax
  430c2e:	add    BYTE PTR [eax],al
  430c30:	cmp    eax,DWORD PTR [eax]
  430c32:	add    BYTE PTR [eax],al
  430c34:	add    al,0x0
  430c36:	add    BYTE PTR [eax],al
  430c38:	or     DWORD PTR [eax],eax
  430c3a:	add    BYTE PTR [eax],al
  430c3c:	or     al,BYTE PTR [eax]
  430c3e:	add    BYTE PTR [eax],al
  430c40:	or     al,0x0
  430c42:	add    BYTE PTR [eax],al
  430c44:	add    DWORD PTR [eax],eax
  430c46:	add    BYTE PTR [eax],al
  430c48:	add    eax,0x1000000
  430c4d:	add    BYTE PTR [eax],al
  430c4f:	add    BYTE PTR [esi],al
  430c51:	add    BYTE PTR [eax],al
  430c53:	add    BYTE PTR ds:0x4000000,al
  430c59:	add    BYTE PTR [eax],al
  430c5b:	add    BYTE PTR [edx],al
  430c5d:	add    BYTE PTR [eax],al
  430c5f:	add    BYTE PTR [eax],al
  430c61:	add    BYTE PTR [esi],cl
  430c63:	add    BYTE PTR [ecx],al
  430c65:	add    BYTE PTR [eax],al
  430c67:	add    BYTE PTR [eax],al
  430c69:	add    BYTE PTR [edx],cl
  430c6b:	add    BYTE PTR [edi+0x0],dh
  430c6e:	mov    al,BYTE PTR [eax]
  430c70:	or     al,BYTE PTR [eax]
  430c72:	mov    ah,0x0
  430c74:	mov    al,BYTE PTR [eax]
  430c76:	or     al,BYTE PTR [eax]
  430c78:	leave  
  430c79:	add    BYTE PTR [edx-0x29fff600],cl
  430c7f:	add    BYTE PTR [edx-0x24fff600],cl
  430c85:	add    BYTE PTR [edx-0x8fff600],cl
  430c8b:	add    BYTE PTR [eax],ch
  430c8d:	add    BYTE PTR [edx],cl
  430c8f:	add    BYTE PTR ds:0xa011101,al
  430c95:	add    BYTE PTR [eax],bh
  430c97:	add    DWORD PTR [ecx],edx
  430c99:	add    DWORD PTR [edx],ecx
  430c9b:	add    BYTE PTR [ebx+0x1],dl
  430c9e:	adc    DWORD PTR [ecx],eax
  430ca0:	or     al,BYTE PTR [eax]
  430ca2:	bound  eax,QWORD PTR [ecx]
  430ca4:	adc    DWORD PTR [ecx],eax
  430ca6:	or     al,BYTE PTR [eax]
  430ca8:	je     0x430cab
  430caa:	adc    DWORD PTR [ecx],eax
  430cac:	or     al,BYTE PTR [eax]
  430cae:	add    BYTE PTR [ecx],0x11
  430cb1:	add    DWORD PTR [edx],ecx
  430cb3:	add    BYTE PTR [eax+0xa011101],bl
  430cb9:	add    BYTE PTR [esi+0xa01a701],bl
  430cbf:	add    ch,al
  430cc1:	add    DWORD PTR [edi-0x2bfff5ff],esp
  430cc7:	add    DWORD PTR [eax],ebp
  430cc9:	add    BYTE PTR [edx],cl
  430ccb:	add    ah,ch
  430ccd:	add    DWORD PTR [eax],ebp
  430ccf:	add    BYTE PTR [edx],cl
  430cd1:	add    BYTE PTR [edi],al
  430cd3:	add    dl,BYTE PTR [edi]
  430cd5:	add    cl,BYTE PTR [edx]
  430cd7:	add    BYTE PTR [eax],bh
  430cd9:	add    dl,BYTE PTR [edi]
  430cdb:	add    cl,BYTE PTR [edx]
  430cdd:	add    BYTE PTR [esi+0x2],al
  430ce0:	sub    BYTE PTR [eax],al
  430ce2:	push   es
  430ce3:	add    BYTE PTR [esi+0x2],cl
  430ce6:	push   ebx
  430ce7:	add    BYTE PTR [esi],al
  430ce9:	add    BYTE PTR [eax+0x2],bl
  430cec:	push   ebx
  430ced:	add    BYTE PTR [esi],al
  430cef:	add    BYTE PTR [edx+0x2],ah
  430cf2:	push   ebx
  430cf3:	add    BYTE PTR [esi],al
  430cf5:	add    BYTE PTR [edx+eax*1+0x53],dh
  430cf9:	add    BYTE PTR [esi],al
  430cfb:	add    BYTE PTR [edx+0x2],bh
  430cfe:	push   ebx
  430cff:	add    BYTE PTR [esi],al
  430d01:	add    BYTE PTR [edx+eax*1+0x60053],al
  430d08:	pushf  
  430d09:	add    dl,BYTE PTR [ebx+0x0]
  430d0c:	push   es
  430d0d:	add    BYTE PTR [ecx+0x6005302],ch
  430d13:	add    BYTE PTR [ecx+0x6005302],dh
  430d19:	add    BYTE PTR [eax+0x6005302],bh
  430d1f:	add    BYTE PTR [ebp+0x12005302],bh
  430d25:	add    dl,al
  430d27:	add    bl,cl
  430d29:	add    al,BYTE PTR [esi]
  430d2b:	add    cl,dh
  430d2d:	add    bh,dh
  430d2f:	add    al,BYTE PTR [esi]
  430d31:	add    BYTE PTR [ecx],bl
  430d33:	add    edi,esi
  430d35:	add    al,BYTE PTR [esi]
  430d37:	add    BYTE PTR [edi],ah
  430d39:	add    edi,esi
  430d3b:	add    al,BYTE PTR [esi]
  430d3d:	add    BYTE PTR ds:0x602fe03,dh
  430d43:	add    BYTE PTR ds:0x602fe03,bh
  430d49:	add    BYTE PTR [ebx+eax*1+0x4e],al
  430d4d:	add    eax,DWORD PTR [esi]
  430d4f:	add    BYTE PTR [ecx+0x3],ah
  430d52:	dec    esi
  430d53:	add    edx,DWORD PTR [edx]
  430d55:	add    BYTE PTR [ebp+0x3],ch
  430d58:	ja     0x430d5d
  430d5a:	adc    al,BYTE PTR [eax]
  430d5c:	lea    eax,[ebx]
  430d5e:	ja     0x430d63
  430d60:	adc    al,BYTE PTR [eax]
  430d62:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  430d63:	add    edi,DWORD PTR [ebx-0x27ffedfd]
  430d69:	add    esi,DWORD PTR [edi+0x3]
  430d6c:	adc    al,BYTE PTR [eax]
  430d6e:	icebp  
  430d6f:	add    esi,DWORD PTR [edi+0x3]
  430d72:	adc    al,BYTE PTR [eax]
  430d74:	push   es
  430d75:	add    al,0x77
  430d77:	add    edx,DWORD PTR [edx]
  430d79:	add    BYTE PTR [ecx],dl
  430d7b:	add    al,0x77
  430d7d:	add    edx,DWORD PTR [edx]
  430d7f:	add    BYTE PTR [esp+eax*1],ah
  430d82:	cmp    al,0x4
  430d84:	adc    al,BYTE PTR [eax]
  430d86:	push   ecx
  430d87:	add    al,0x3c
  430d89:	add    al,0x6
  430d8b:	add    BYTE PTR [esi+0x4],bl
  430d8e:	push   ebx
  430d8f:	add    BYTE PTR [esi],al
  430d91:	add    BYTE PTR [esi+0x4],ah
  430d94:	push   ebx
  430d95:	add    BYTE PTR [esi],al
  430d97:	add    BYTE PTR [edi+0x4],ch
  430d9a:	add    DWORD PTR [edi+ecx*8],0x0
  430d9e:	xchg   esi,eax
  430d9f:	add    al,0x0
  430da1:	add    BYTE PTR [esi],al
  430da3:	add    BYTE PTR [ebp+0x6048304],ah
  430da9:	add    BYTE PTR [ebp+0x6048304],bh
  430daf:	add    dl,bl
  430db1:	add    al,0x83
  430db3:	add    al,0x12
  430db5:	add    bh,dh
  430db7:	add    al,0x83
  430db9:	add    al,0x12
  430dbb:	add    bh,bh
  430dbd:	add    al,0x83
  430dbf:	add    al,0x12
  430dc1:	add    BYTE PTR [eax],dl
  430dc3:	add    eax,0x60483
  430dc8:	and    eax,DWORD PTR ds:0x160053
  430dce:	sub    al,BYTE PTR ds:0x16005a
  430dd4:	xor    BYTE PTR ds:0x16005a,al
  430dda:	xor    eax,0x16005a05
  430ddf:	add    BYTE PTR [edi],bh
  430de1:	add    eax,0x16005a
  430de6:	dec    esp
  430de7:	add    eax,0x16005a
  430dec:	push   ecx
  430ded:	add    eax,0x16005a
  430df2:	push   edi
  430df3:	add    eax,0x16005a
  430df8:	pop    ebp
  430df9:	add    eax,0x16005a
  430dfe:	bound  eax,QWORD PTR ds:0x16005a
  430e04:	push   0x6005a05
  430e09:	add    BYTE PTR [ebp+0x5],dh
  430e0c:	push   ebx
  430e0d:	add    BYTE PTR [esi],al
  430e0f:	add    BYTE PTR [edx+0x5],bh
  430e12:	push   ebx
  430e13:	add    BYTE PTR [edi],bl
  430e15:	add    DWORD PTR [esi+0x6000005],eax
  430e1b:	add    BYTE PTR [ebp+eax*1+0x60053],dl
  430e22:	sahf   
  430e23:	add    eax,0x60053
  430e28:	stos   DWORD PTR es:[edi],eax
  430e29:	add    eax,0x60053
  430e2e:	mov    ch,0x5
  430e30:	rol    DWORD PTR ds:0x5d60006,0xc1
  430e37:	add    eax,0x5e30006
  430e3c:	push   ebx
  430e3d:	add    BYTE PTR [esi],al
  430e3f:	add    bh,ch
  430e41:	add    eax,0x60053
  430e46:	cmc    
  430e47:	add    eax,0x60053
  430e4c:	sti    
  430e4d:	add    eax,0x60053
  430e52:	add    DWORD PTR [esi],eax
  430e54:	push   ebx
  430e55:	add    BYTE PTR [esi],al
  430e57:	add    BYTE PTR [eax],cl
  430e59:	push   es
  430e5a:	push   ebx
  430e5b:	add    BYTE PTR [esi],al
  430e5d:	add    BYTE PTR [edx],ah
  430e5f:	push   es
  430e60:	das    
  430e61:	push   es
  430e62:	adc    al,BYTE PTR [eax]
  430e64:	cmp    DWORD PTR [esi],eax
  430e66:	dec    ecx
  430e67:	push   es
  430e68:	adc    al,BYTE PTR [eax]
  430e6a:	pop    edi
  430e6b:	push   es
  430e6c:	dec    ecx
  430e6d:	push   es
  430e6e:	push   es
  430e6f:	add    BYTE PTR [ebp+0x6],ch
  430e72:	das    
  430e73:	push   es
  430e74:	push   es
  430e75:	add    BYTE PTR [edi+0x6],dh
  430e78:	das    
  430e79:	push   es
  430e7a:	push   es
  430e7b:	add    BYTE PTR [ebp+0x6062f06],al
  430e81:	add    BYTE PTR [edx+0x6062f06],cl
  430e87:	add    BYTE PTR [ebp+0x6062f06],dl
  430e8d:	add    BYTE PTR [esi+0x6062f06],bl
  430e93:	add    BYTE PTR [edi+0x6062f06],ah
  430e99:	add    BYTE PTR [edx+0x6062f06],dh
  430e9f:	add    cl,al
  430ea1:	push   es
  430ea2:	das    
  430ea3:	push   es
  430ea4:	push   es
  430ea5:	add    dh,cl
  430ea7:	push   es
  430ea8:	das    
  430ea9:	push   es
  430eaa:	push   es
  430eab:	add    ch,dl
  430ead:	push   es
  430eae:	das    
  430eaf:	push   es
  430eb0:	push   es
  430eb1:	add    dl,ah
  430eb3:	push   es
  430eb4:	das    
  430eb5:	push   es
  430eb6:	push   es
  430eb7:	add    ch,ch
  430eb9:	push   es
  430eba:	push   ebx
  430ebb:	add    BYTE PTR [esi],al
  430ebd:	add    dl,bh
  430ebf:	push   es
  430ec0:	push   ebx
  430ec1:	add    BYTE PTR [edx],dl
  430ec3:	add    BYTE PTR [edi+eax*1],cl
  430ec6:	sbb    eax,0x3b001207
  430ecb:	pop    es
  430ecc:	sbb    eax,0x4b001207
  430ed1:	pop    es
  430ed2:	push   ebp
  430ed3:	pop    es
  430ed4:	push   es
  430ed5:	add    BYTE PTR [eax+0x7],ah
  430ed8:	push   ebx
  430ed9:	add    BYTE PTR [esi],al
  430edb:	add    BYTE PTR [esi+0x7],dh
  430ede:	push   ebx
  430edf:	add    BYTE PTR [esi],al
  430ee1:	add    BYTE PTR [ebp+0x7],bh
  430ee4:	push   ebx
  430ee5:	add    BYTE PTR [esi],al
  430ee7:	add    BYTE PTR [edi+eax*1+0x6078d],al
  430eee:	lahf   
  430eef:	pop    es
  430ef0:	lea    eax,[edi]
  430ef2:	push   es
  430ef3:	add    BYTE PTR [eax+0x6078d07],bh
  430ef9:	add    bl,dl
  430efb:	pop    es
  430efc:	lea    eax,[edi]
  430efe:	push   es
  430eff:	add    al,dh
  430f01:	pop    es
  430f02:	lea    eax,[edi]
  430f04:	push   es
  430f05:	add    BYTE PTR ds:0x6078d08,cl
  430f0b:	add    BYTE PTR [esi],ah
  430f0d:	or     BYTE PTR [ebp+0x3d000607],cl
  430f13:	or     BYTE PTR [ebp+0x58000607],cl
  430f19:	or     BYTE PTR [ebp+0x65000607],cl
  430f1f:	or     BYTE PTR [ebp+0x75000607],cl
  430f25:	or     BYTE PTR [ebx-0x65fff9f8],al
  430f2b:	or     BYTE PTR [ebx-0x57fff9f8],al
  430f31:	or     BYTE PTR [ebx-0x50fff9f8],al
  430f37:	or     BYTE PTR [ebx-0x48fff9f8],al
  430f3d:	or     BYTE PTR [ebx-0x3cfff9f8],al
  430f43:	or     BYTE PTR [ebx-0x2cfff9f8],al
  430f49:	or     BYTE PTR [ebp-0xdfff9f9],cl
  430f4f:	or     BYTE PTR [ebp-0x3fff9f9],cl
  430f55:	or     BYTE PTR [ebp+0xe000607],cl
  430f5b:	or     DWORD PTR [ebp+0x19000607],ecx
  430f61:	or     DWORD PTR [ebp+0x25000607],ecx
  430f67:	or     DWORD PTR [ebp+0x30000607],ecx
  430f6d:	or     DWORD PTR [ebp+0x3b000607],ecx
  430f73:	or     DWORD PTR [ebp+0x46000607],ecx
  430f79:	or     DWORD PTR [ebp+0x4d000607],ecx
  430f7f:	or     DWORD PTR [ebp+0x5b000607],ecx
  430f85:	or     DWORD PTR [ebp+0x75000607],ecx
  430f8b:	or     DWORD PTR [ebx+0x0],edx
  430f8e:	push   es
  430f8f:	add    BYTE PTR [esi+0x6005309],al
  430f95:	add    BYTE PTR [edx+0x609aa09],bl
  430f9b:	add    BYTE PTR [ebx+0x609dc09],bh
  430fa1:	add    ah,bh
  430fa3:	or     esp,ebx
  430fa5:	or     DWORD PTR [esi],eax
  430fa7:	add    BYTE PTR [edx+ecx*1],bl
  430faa:	fmul   QWORD PTR [ecx]
  430fac:	push   es
  430fad:	add    BYTE PTR [edi],dh
  430faf:	or     bl,ah
  430fb1:	or     DWORD PTR [esi],eax
  430fb3:	add    BYTE PTR [ebp+0xa],dl
  430fb6:	fmul   QWORD PTR [ecx]
  430fb8:	push   es
  430fb9:	add    BYTE PTR [edx+ecx*1+0x78],ah
  430fbd:	or     al,BYTE PTR [esi]
  430fbf:	add    BYTE PTR [edi+0x60a780a],dl
  430fc5:	add    BYTE PTR [ebp+0x600530a],ah
  430fcb:	add    BYTE PTR [eax+0x600530a],bh
  430fd1:	add    ah,cl
  430fd3:	or     dl,BYTE PTR [ebx+0x0]
  430fd6:	push   es
  430fd7:	add    dh,bl
  430fd9:	or     ch,bl
  430fdb:	or     al,BYTE PTR [esi]
  430fdd:	add    BYTE PTR [eax],cl
  430fdf:	or     ebp,ebx
  430fe1:	or     al,BYTE PTR [esi]
  430fe3:	add    BYTE PTR [ecx],bl
  430fe5:	or     ebp,ebx
  430fe7:	or     al,BYTE PTR [esi]
  430fe9:	add    BYTE PTR [edx],dh
  430feb:	or     ebp,ebx
  430fed:	or     al,BYTE PTR [esi]
  430fef:	add    BYTE PTR [eax+0xb],al
  430ff2:	jmp    0x430ffe
  430ff4:	push   es
  430ff5:	add    BYTE PTR [ecx+0xb],dl
  430ff8:	jmp    0x431004
  430ffa:	push   es
  430ffb:	add    BYTE PTR [ecx+0xb],ah
  430ffe:	jmp    0x43100a
  431000:	push   es
  431001:	add    BYTE PTR [edi+0xb],ch
  431004:	jmp    0x431010
  431006:	push   es
  431007:	add    BYTE PTR [edx+0x60b9a0b],al
  43100d:	add    BYTE PTR [edx+0x600530b],ch
  431013:	add    BYTE PTR [ecx+0x600530b],dh
  431019:	add    ah,al
  43101b:	or     edx,DWORD PTR [ebx+0x0]
  43101e:	push   es
  43101f:	add    bl,cl
  431021:	or     edx,esp
  431023:	or     eax,DWORD PTR [esi]
  431025:	add    al,ah
  431027:	or     edx,esp
  431029:	or     eax,DWORD PTR [esi]
  43102b:	add    dh,ch
  43102d:	or     esi,esi
  43102f:	or     eax,DWORD PTR [esi]
  431031:	add    BYTE PTR [edi],al
  431033:	or     al,0xf6
  431035:	or     eax,DWORD PTR [esi]
  431037:	add    BYTE PTR [esi],cl
  431039:	or     al,0x53
  43103b:	add    BYTE PTR [esi],al
  43103d:	add    BYTE PTR [esp+ecx*1],ah
  431040:	push   ebx
  431041:	add    BYTE PTR [esi],al
  431043:	add    BYTE PTR [ecx],ch
  431045:	or     al,0x53
  431047:	add    BYTE PTR [esi],al
  431049:	add    BYTE PTR [eax],dh
  43104b:	or     al,0x53
  43104d:	add    BYTE PTR [esi],al
  43104f:	add    BYTE PTR [edi],dh
  431051:	or     al,0x53
  431053:	add    BYTE PTR [esi],al
  431055:	add    BYTE PTR [esp+ecx*1],bh
  431058:	push   ebx
  431059:	add    BYTE PTR [esi],cl
  43105b:	add    BYTE PTR [edx+0xc],cl
  43105e:	add    BYTE PTR ds:[esi],cl
  431061:	add    BYTE PTR [esi+0xc],dl
  431064:	add    BYTE PTR ds:[esi],cl
  431067:	add    BYTE PTR [esp+ecx*1+0x3e],ah
  43106b:	add    BYTE PTR [esi],cl
  43106d:	add    BYTE PTR [eax+0xc],dh
  431070:	add    BYTE PTR ds:[esi],cl
  431073:	add    BYTE PTR [edi+0xc],dh
  431076:	add    BYTE PTR ds:[esi],cl
  431079:	add    BYTE PTR [edx+0xe003e0c],al
  43107f:	add    BYTE PTR [ebx-0x40ffc1f4],dl
  431085:	add    bl,BYTE PTR [ebx+0xe00000c]
  43108b:	add    BYTE PTR [ebp+0xe003e0c],ch
  431091:	add    BYTE PTR [edx+0xe003e0c],bh
  431097:	add    BYTE PTR [edi+0xe003e0c],bh
  43109d:	add    ch,al
  43109f:	or     al,0x3e
  4310a1:	add    BYTE PTR [esi],cl
  4310a3:	add    al,dl
  4310a5:	or     al,0x3e
  4310a7:	add    BYTE PTR [esi],cl
  4310a9:	add    bl,bl
  4310ab:	or     al,0x3e
  4310ad:	add    BYTE PTR [esi],cl
  4310af:	add    dh,ch
  4310b1:	or     al,0x3e
  4310b3:	add    BYTE PTR [esi],cl
  4310b5:	add    dh,dh
  4310b7:	or     al,0x3e
  4310b9:	add    BYTE PTR [eax],al
  4310bb:	add    BYTE PTR [eax],al
  4310bd:	add    BYTE PTR [edx],al
  4310bf:	or     eax,0x0
  4310c4:	add    DWORD PTR [eax],eax
  4310c6:	add    DWORD PTR [eax],eax
  4310c8:	add    BYTE PTR [eax],al
  4310ca:	adc    BYTE PTR [eax],al
  4310cc:	or     ecx,DWORD PTR ds:0x150d0d
  4310d2:	add    DWORD PTR [eax],eax
  4310d4:	add    al,BYTE PTR [eax]
  4310d6:	add    BYTE PTR [eax],al
  4310d8:	adc    BYTE PTR [eax],al
  4310da:	prefetchw BYTE PTR ds:0x200650d
  4310e1:	add    BYTE PTR [edi],al
  4310e3:	add    BYTE PTR [eax],al
  4310e5:	add    BYTE PTR [eax],al
  4310e7:	add    BYTE PTR ds:0x390d0d0d,ah
  4310ed:	add    BYTE PTR [edx],al
  4310ef:	add    BYTE PTR [eax],cl
  4310f1:	add    BYTE PTR [eax],al
  4310f3:	add    BYTE PTR [eax],al
  4310f5:	add    BYTE PTR [edi],ah
  4310f7:	or     eax,0x1a50d0d
  4310fc:	add    al,BYTE PTR [eax]
  4310fe:	or     DWORD PTR [eax],eax
  431100:	add    BYTE PTR [ecx],al
  431102:	adc    BYTE PTR [eax],al
  431104:	sub    DWORD PTR ds:0x1a50d0d,ecx
  43110a:	add    eax,DWORD PTR [eax]
  43110c:	sldt   WORD PTR ds:0x2b000001
  431113:	or     eax,0x1a50000
  431118:	or     BYTE PTR [eax],al
  43111a:	adc    eax,0x10500
  43111f:	add    BYTE PTR ds:0xa500000d,ch
  431125:	add    DWORD PTR [edx],ecx
  431127:	add    BYTE PTR [esi],bl
  431129:	add    BYTE PTR ds:0x2f000001,al
  43112f:	or     eax,0x1a50000
  431134:	or     al,BYTE PTR [eax]
  431136:	and    eax,0x10000100
  43113b:	add    BYTE PTR [ebx],dh
  43113d:	or     eax,0x2c90d39
  431142:	or     eax,DWORD PTR [eax]
  431144:	daa    
  431145:	add    BYTE PTR [ebx],al
  431147:	add    DWORD PTR [eax],eax
  431149:	add    BYTE PTR [ebp+0xd],al
  43114c:	add    BYTE PTR [eax],al
  43114e:	sbb    DWORD PTR [ecx],eax
  431150:	sbb    eax,0x2005300
  431155:	add    BYTE PTR [eax],al
  431157:	add    BYTE PTR [edi+0xd],al
  43115a:	add    BYTE PTR [eax],al
  43115c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  43115d:	add    DWORD PTR [eax],esp
  43115f:	add    BYTE PTR [ebx+0x0],dl
  431162:	add    BYTE PTR [ecx],al
  431164:	add    BYTE PTR [eax],al
  431166:	dec    ebp
  431167:	or     eax,0x1a50d0d
  43116c:	and    DWORD PTR [eax],eax
  43116e:	push   edi
  43116f:	add    BYTE PTR [eax],al
  431171:	add    DWORD PTR [eax],edx
  431173:	add    BYTE PTR [edi+0xd],cl
  431176:	pop    edx
  431177:	or     eax,0x2300bd
  43117c:	pop    edx
  43117d:	add    BYTE PTR [eax],al
  43117f:	add    BYTE PTR [eax],al
  431181:	add    BYTE PTR [ecx+0xd],ch
  431184:	or     eax,0x2601a50d
  431189:	add    BYTE PTR [esi+0x0],bl
  43118c:	add    BYTE PTR [ecx],al
  43118e:	add    BYTE PTR [eax],al
  431190:	imul   ecx,DWORD PTR ds:0x1a50d0d,0x28
  431197:	add    BYTE PTR [ebp+0x0],ah
  43119a:	add    BYTE PTR [eax],al
  43119c:	add    BYTE PTR [eax],al
  43119e:	ins    DWORD PTR es:[edi],dx
  43119f:	or     eax,0x1a50d0d
  4311a4:	sub    BYTE PTR [eax],al
  4311a6:	data16 add BYTE PTR [eax],al
  4311a9:	add    BYTE PTR [eax],al
  4311ab:	add    BYTE PTR [edi+0xd],ch
  4311ae:	or     eax,0x2901a50d
  4311b3:	add    BYTE PTR [ecx+0x0],ch
  4311b6:	add    BYTE PTR [eax],al
  4311b8:	add    BYTE PTR [eax],al
  4311ba:	jno    0x4311c9
  4311bc:	or     eax,0x2f01a50d
  4311c1:	add    BYTE PTR [eax+0x0],dh
  4311c4:	add    al,BYTE PTR [ecx]
  4311c6:	add    BYTE PTR [eax],al
  4311c8:	jae    0x4311d7
  4311ca:	add    BYTE PTR [eax],al
  4311cc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4311cd:	add    DWORD PTR [edx],esi
  4311cf:	add    BYTE PTR [eax+0x0],bh
  4311d2:	adc    DWORD PTR [eax],eax
  4311d4:	or     ecx,DWORD PTR ds:0x310017
  4311da:	or     ecx,DWORD PTR ds:0x310035
  4311e0:	or     ecx,DWORD PTR ds:0x31004b
  4311e6:	and    eax,0x3100530d
  4311eb:	add    BYTE PTR [ebx],ch
  4311ed:	or     eax,0x11005b
  4311f2:	sub    eax,0x3100630d
  4311f7:	add    BYTE PTR [edi+0x6006b0d],dl
  4311fd:	add    BYTE PTR [ebx],cl
  4311ff:	or     eax,0x11008c
  431204:	and    eax,0x1100900d
  431209:	add    BYTE PTR [ebx],cl
  43120b:	or     eax,0x1100c3
  431210:	or     ecx,DWORD PTR ds:0x10017
  431216:	and    eax,0x100cc0d
  43121b:	add    BYTE PTR [ebx],ch
  43121d:	or     eax,0x100d1
  431222:	sub    eax,0x100d10d
  431227:	add    BYTE PTR [edi+0x100d60d],dl
  43122d:	add    BYTE PTR [ecx],ch
  43122f:	or     eax,0x100db
  431234:	inc    ebp
  431235:	or     eax,0x100e0
  43123a:	dec    ebp
  43123b:	or     eax,0x100db
  431240:	imul   ecx,DWORD PTR ds:0x100d6,0x6f
  431247:	or     eax,0x100db
  43124c:	ins    DWORD PTR es:[edi],dx
  43124d:	or     eax,0x100db
  431252:	imul   ecx,DWORD PTR ds:0x100db,0xdb0d27
  43125c:	add    DWORD PTR [eax],eax
  43125e:	jae    0x43126d
  431260:	fild   DWORD PTR [eax]
  431262:	add    DWORD PTR [eax],eax
  431264:	jno    0x431273
  431266:	in     eax,0x0
  431268:	add    DWORD PTR [eax],eax
  43126a:	out    0xd,eax
  43126c:	in     eax,0x0
  43126e:	add    DWORD PTR [eax],eax
  431270:	jmp    0x143fa82
  431275:	add    bl,ch
  431277:	or     eax,0x60600e8
  43127c:	cmp    BYTE PTR [edi],cl
  43127e:	dec    edx
  43127f:	add    DWORD PTR [esi-0x80],edx
  431282:	or     ecx,DWORD PTR ds:0x8056014d
  431288:	and    eax,0x11014d0d
  43128d:	add    BYTE PTR [ebx],cl
  43128f:	or     eax,0x11015b
  431294:	or     ecx,DWORD PTR ds:0x11016a
  43129a:	and    eax,0x11016f0d
  43129f:	add    BYTE PTR [edi+ecx*1+0x110187],cl
  4312a6:	pushf  
  4312a7:	jnp    0xa94323ae
  4312ad:	jle    0xb4345b4
  4312b3:	or     eax,0x23019e
  4312b8:	and    eax,0x33014a0d
  4312bd:	add    BYTE PTR [ebx],cl
  4312bf:	or     eax,0x31019e
  4312c4:	or     ecx,DWORD PTR ds:0x31018e
  4312ca:	and    eax,0x31014a0d
  4312cf:	add    BYTE PTR [ebx],ch
  4312d1:	or     eax,0x31014a
  4312d6:	sub    eax,0x3101c20d
  4312db:	add    BYTE PTR [edi+0x3101c20d],dl
  4312e1:	add    BYTE PTR [ecx],ch
  4312e3:	or     eax,0x3301c7
  4312e8:	or     ecx,DWORD PTR ds:0x33019e
  4312ee:	and    eax,0x3101e30d
  4312f3:	add    BYTE PTR [ebx],ch
  4312f5:	or     eax,0x1101ec
  4312fa:	or     ecx,DWORD PTR ds:0x110229
  431300:	and    eax,0x102290d
  431305:	add    BYTE PTR [ebx],ch
  431307:	or     eax,0x1014a
  43130c:	sub    eax,0x1019e0d
  431311:	add    BYTE PTR [edi+0x1022f0d],dl
  431317:	add    BYTE PTR [ecx],ch
  431319:	or     eax,0x10234
  43131e:	inc    ebp
  43131f:	or     eax,0x10239
  431324:	dec    ebp
  431325:	or     eax,0x20500239
  43132a:	add    BYTE PTR [eax],al
  43132c:	add    BYTE PTR [eax],al
  43132e:	adc    BYTE PTR [eax],bl
  431330:	jne    0x43133f
  431332:	adc    eax,DWORD PTR [eax]
  431334:	add    DWORD PTR [eax],eax
  431336:	pop    esp
  431337:	and    BYTE PTR [eax],al
  431339:	add    BYTE PTR [eax],al
  43133b:	add    BYTE PTR [ecx],dl
  43133d:	sbb    BYTE PTR [ebp+0xd],dh
  431340:	adc    eax,DWORD PTR [eax]
  431342:	add    DWORD PTR [eax],eax
  431344:	je     0x431366
  431346:	add    BYTE PTR [eax],al
  431348:	add    BYTE PTR [eax],al
  43134a:	push   es
  43134b:	sbb    BYTE PTR [ebp+ecx*1+0x21],bh
  43134f:	add    BYTE PTR [ecx],al
  431351:	add    al,dl
  431353:	and    BYTE PTR [eax],al
  431355:	add    BYTE PTR [eax],al
  431357:	add    BYTE PTR [ecx],dl
  431359:	add    BYTE PTR ds:0x100250d,ah
  43135f:	add    BYTE PTR [eax],bh
  431361:	and    al,BYTE PTR [eax]
  431363:	add    BYTE PTR [eax+0x0],cl
  431366:	adc    eax,DWORD PTR [eax]
  431368:	sub    ecx,DWORD PTR ds:0x2002a
  43136e:	js     0x431392
  431370:	add    BYTE PTR [eax],al
  431372:	add    BYTE PTR [eax],al
  431374:	inc    esp
  431375:	add    al,BYTE PTR [edx+0x300210d]
  43137b:	add    BYTE PTR [edx+eiz*1+0x0],bl
  431382:	xchg   BYTE PTR [eax],bl
  431384:	jl     0x431393
  431386:	xor    BYTE PTR [eax],al
  431388:	add    eax,DWORD PTR [eax]
  43138a:	mov    al,0x22
  43138c:	add    BYTE PTR [eax],al
  43138e:	add    BYTE PTR [eax],al
  431390:	push   es
  431391:	sbb    BYTE PTR [ebp+ecx*1+0x21],bh
  431395:	add    BYTE PTR [eax+eax*1],al
  431398:	enter  0x22,0x0
  43139c:	add    BYTE PTR [eax],al
  43139e:	xchg   ecx,eax
  43139f:	sbb    BYTE PTR [ebp+0xd],dh
  4313a2:	adc    eax,DWORD PTR [eax]
  4313a4:	add    al,0x0
  4313a6:	and    al,0x23
  4313a8:	add    BYTE PTR [eax],al
  4313aa:	add    BYTE PTR [eax],al
  4313ac:	xchg   BYTE PTR [eax],bl
  4313ae:	jl     0x4313bd
  4313b0:	and    DWORD PTR [eax],eax
  4313b2:	add    al,0x0
  4313b4:	cmp    BYTE PTR [ebx],ah
  4313b6:	add    BYTE PTR [eax],al
  4313b8:	add    BYTE PTR [eax],al
  4313ba:	xchg   ebx,eax
  4313bb:	add    BYTE PTR ds:0x400130d,ah
  4313c1:	add    BYTE PTR [eax+0x23],cl
  4313c4:	add    BYTE PTR [eax],al
  4313c6:	add    BYTE PTR [eax],al
  4313c8:	xchg   ecx,eax
  4313c9:	add    BYTE PTR [ebx],ch
  4313cb:	or     eax,0x4003a
  4313d0:	nop
  4313d1:	and    eax,DWORD PTR [eax]
  4313d3:	add    BYTE PTR [eax],al
  4313d5:	add    BYTE PTR [ecx+0x440d2d00],dl
  4313db:	add    BYTE PTR [esi],al
  4313dd:	add    al,ah
  4313df:	and    eax,DWORD PTR [eax]
  4313e1:	add    BYTE PTR [eax],al
  4313e3:	add    BYTE PTR [ecx+0x3a0d9700],dl
  4313e9:	add    BYTE PTR [edi],al
  4313eb:	add    BYTE PTR [esp+0x0],bl
  4313ef:	add    BYTE PTR [eax],al
  4313f1:	add    BYTE PTR [ecx],dl
  4313f3:	sbb    BYTE PTR [ebp+0xd],dh
  4313f6:	adc    eax,DWORD PTR [eax]
  4313f8:	or     DWORD PTR [eax],eax
  4313fa:	pushf  
  4313fb:	and    al,0x0
  4313fd:	add    BYTE PTR [eax],al
  4313ff:	add    BYTE PTR [ebx],dl
  431401:	or     BYTE PTR [ecx+0x900730d],bl
  431407:	add    BYTE PTR [eax+0x24],bh
  43140d:	add    BYTE PTR [ebx],dl
  43140f:	or     BYTE PTR [edi+0x900780d],bl
  431415:	add    al,bl
  431417:	and    al,0x0
  431419:	add    BYTE PTR [eax],al
  43141b:	add    BYTE PTR [ebx],dl
  43141d:	or     BYTE PTR [ebp+0x9007d0d],ah
  431423:	add    al,bh
  431425:	and    al,0x0
  431427:	add    BYTE PTR [eax],al
  431429:	add    BYTE PTR [ebx],dl
  43142b:	or     BYTE PTR [ebx+0x900820d],ch
  431431:	add    BYTE PTR [eax],bl
  431433:	and    eax,0x0
  431438:	adc    ecx,DWORD PTR [eax]
  43143a:	mov    cl,0xd
  43143c:	xchg   DWORD PTR [eax],eax
  43143e:	or     DWORD PTR [eax],eax
  431440:	xor    al,0x25
  431442:	add    BYTE PTR [eax],al
  431444:	add    BYTE PTR [eax],al
  431446:	push   es
  431447:	sbb    BYTE PTR [ebp+ecx*1+0x21],bh
  43144b:	add    BYTE PTR [ecx],cl
  43144d:	add    BYTE PTR [ebp+eiz*1+0x0],cl
  431451:	add    BYTE PTR [eax],al
  431453:	add    BYTE PTR [esi],al
  431455:	or     BYTE PTR [edi+0x900950d],dh
  43145b:	add    BYTE PTR [eax+0x25],bh
  43145e:	add    BYTE PTR [eax],al
  431460:	add    BYTE PTR [eax],al
  431462:	push   es
  431463:	or     BYTE PTR [ebp+0x9009a0d],bh
  431469:	add    al,bl
  43146b:	and    eax,0x0
  431470:	adc    DWORD PTR [eax],eax
  431472:	sub    eax,0xa00a00d
  431477:	add    BYTE PTR [edi+eiz*1+0x0],bl
  43147e:	add    DWORD PTR [eax],eax
  431480:	xchg   edi,eax
  431481:	or     eax,0xb00a8
  431486:	enter  0x27,0x0
  43148a:	add    BYTE PTR [eax],al
  43148c:	inc    esi
  43148d:	add    al,bl
  43148f:	or     eax,0xc00b0
  431494:	call   0x4314c0
  431499:	add    BYTE PTR [esi+0x2],al
  43149c:	int3   
  43149d:	or     eax,0xd00b5
  4314a2:	add    BYTE PTR [eax],ch
  4314a4:	add    BYTE PTR [eax],al
  4314a6:	add    BYTE PTR [eax],al
  4314a8:	add    DWORD PTR [eax],0x29
  4314ab:	or     eax,0xd00b9
  4314b0:	and    BYTE PTR [eax],ch
  4314b2:	add    BYTE PTR [eax],al
  4314b4:	add    BYTE PTR [eax],al
  4314b6:	inc    esi
  4314b7:	add    bl,al
  4314b9:	or     eax,0xd00bf
  4314be:	cmp    BYTE PTR [eax],ch
  4314c0:	add    BYTE PTR [eax],al
  4314c2:	add    BYTE PTR [eax],al
  4314c4:	push   es
  4314c5:	sbb    BYTE PTR [ebp+ecx*1+0x21],bh
  4314c9:	add    BYTE PTR ds:0x285000,cl
  4314cf:	add    BYTE PTR [eax],al
  4314d1:	add    BYTE PTR [esi+0x2],al
  4314d4:	ret    
  4314d5:	or     eax,0xd00b0
  4314da:	je     0x431504
  4314dc:	add    BYTE PTR [eax],al
  4314de:	add    BYTE PTR [eax],al
  4314e0:	inc    esi
  4314e1:	add    cl,ah
  4314e3:	or     eax,0xe00b5
  4314e8:	nop
  4314e9:	sub    BYTE PTR [eax],al
  4314eb:	add    BYTE PTR [eax],al
  4314ed:	add    BYTE PTR [ebx-0x46f2f500],al
  4314f3:	add    BYTE PTR [esi],cl
  4314f5:	add    BYTE PTR [eax+0x28],dh
  4314fb:	add    BYTE PTR [esi+0x2],al
  4314fe:	fmul   DWORD PTR ds:0xe00bf
  431504:	int3   
  431505:	sub    BYTE PTR [eax],al
  431507:	add    BYTE PTR [eax],al
  431509:	add    BYTE PTR [ecx],dl
  43150b:	add    BYTE PTR ds:0xe00a00d,ah
  431511:	add    BYTE PTR [eax],dl
  431513:	sub    DWORD PTR [eax],eax
  431515:	add    BYTE PTR [eax],al
  431517:	add    BYTE PTR [ecx],al
  431519:	add    BYTE PTR [ebx],ch
  43151b:	or     eax,0xf00a8
  431520:	xor    BYTE PTR [ecx],ch
  431522:	add    BYTE PTR [eax],al
  431524:	add    BYTE PTR [eax],al
  431526:	push   es
  431527:	sbb    BYTE PTR [ebp+ecx*1+0x21],bh
  43152b:	add    BYTE PTR [eax],dl
  43152d:	add    BYTE PTR [eax+0x29],cl
  431530:	add    BYTE PTR [eax],al
  431532:	add    BYTE PTR [eax],al
  431534:	add    ecx,DWORD PTR [eax]
  431536:	loope  0x431545
  431538:	mov    DWORD PTR [eax],0x297c0010
  43153e:	add    BYTE PTR [eax],al
  431540:	add    BYTE PTR [eax],al
  431542:	adc    DWORD PTR [eax],ebx
  431544:	jne    0x431553
  431546:	adc    eax,DWORD PTR [eax]
  431548:	adc    BYTE PTR [eax],al
  43154a:	xchg   esp,eax
  43154b:	sub    DWORD PTR [eax],eax
  43154d:	add    BYTE PTR [eax],al
  43154f:	add    BYTE PTR [esi],al
  431551:	sbb    BYTE PTR [ebp+ecx*1+0x21],bh
  431555:	add    BYTE PTR [eax],dl
  431557:	add    ah,cl
  431559:	sub    DWORD PTR [eax],eax
  43155b:	add    BYTE PTR [eax],al
  43155d:	add    BYTE PTR [ecx],dl
  43155f:	add    ch,ch
  431561:	or     eax,0x100025
  431566:	xor    al,0x2b
  431568:	add    BYTE PTR [eax],al
  43156a:	add    BYTE PTR [eax],al
  43156c:	inc    esp
  43156d:	add    ch,bh
  43156f:	or     eax,0x1100ed
  431574:	lods   al,BYTE PTR ds:[esi]
  431575:	sub    eax,DWORD PTR [eax]
  431577:	add    BYTE PTR [eax],al
  431579:	add    BYTE PTR [ecx],al
  43157b:	add    BYTE PTR [ecx],al
  43157d:	push   cs
  43157e:	and    DWORD PTR [eax],eax
  431580:	adc    al,BYTE PTR [eax]
  431582:	les    edi,FWORD PTR [ebx]
  431584:	add    BYTE PTR [eax],al
  431586:	add    BYTE PTR [eax],al
  431588:	inc    ebx
  431589:	or     eax,DWORD PTR [ebx]
  43158b:	push   cs
  43158c:	repnz add BYTE PTR [edx],dl
  43158f:	add    ah,bl
  431591:	cmp    eax,DWORD PTR [eax]
  431593:	add    BYTE PTR [eax],ah
  431595:	add    BYTE PTR [ebx+0xb],al
  431598:	or     DWORD PTR [esi],ecx
  43159a:	clc    
  43159b:	add    BYTE PTR [edx],dl
  43159d:	add    BYTE PTR [esp+edi*1+0x0],ch
  4315a1:	add    BYTE PTR [eax],al
  4315a3:	add    BYTE PTR [ebx+0xb],al
  4315a6:	femms  
  4315a8:	repnz add BYTE PTR [ebx],dl
  4315ab:	add    BYTE PTR [esp+edi*1+0x200000],al
  4315b2:	inc    ebx
  4315b3:	or     edx,DWORD PTR ds:0x1300f80e
  4315b9:	add    BYTE PTR [edi*1+0x0],dl
  4315c0:	inc    ebx
  4315c1:	or     ebx,DWORD PTR [ebx]
  4315c3:	push   cs
  4315c4:	inc    DWORD PTR [eax]
  4315c6:	adc    al,0x0
  4315c8:	sub    al,0x3d
  4315ca:	add    BYTE PTR [eax],al
  4315cc:	and    BYTE PTR [eax],al
  4315ce:	inc    ebx
  4315cf:	or     esp,DWORD PTR [ecx]
  4315d1:	push   cs
  4315d2:	add    eax,0x44001401
  4315d7:	cmp    eax,0x0
  4315dc:	inc    ebx
  4315dd:	or     esp,DWORD PTR [edi]
  4315df:	push   cs
  4315e0:	or     al,0x1
  4315e2:	adc    eax,0x3d5c00
  4315e7:	add    BYTE PTR [eax],ah
  4315e9:	add    BYTE PTR [ebx+0xb],al
  4315ec:	sub    eax,0x1501120e
  4315f1:	add    BYTE PTR [ebp+edi*1+0x0],dh
  4315f5:	add    BYTE PTR [eax],al
  4315f7:	add    BYTE PTR [ebx+0xb],al
  4315fa:	xor    ecx,DWORD PTR [esi]
  4315fc:	sbb    DWORD PTR [ecx],eax
  4315fe:	push   ss
  4315ff:	add    BYTE PTR [ebp+edi*1+0x200000],cl
  431606:	inc    ebx
  431607:	or     edi,DWORD PTR [ecx]
  431609:	push   cs
  43160a:	pop    ds
  43160b:	add    DWORD PTR [esi],edx
  43160d:	add    BYTE PTR [ebp+edi*1+0x0],ah
  431614:	inc    ebx
  431615:	or     edi,DWORD PTR [edi]
  431617:	push   cs
  431618:	or     al,0x1
  43161a:	pop    ss
  43161b:	add    BYTE PTR [ebp+edi*1+0x200000],bh
  431622:	inc    ebx
  431623:	or     eax,DWORD PTR [ebp+0xe]
  431626:	adc    al,BYTE PTR [ecx]
  431628:	pop    ss
  431629:	add    ah,dl
  43162b:	cmp    eax,0x0
  431630:	inc    ebx
  431631:	or     ecx,DWORD PTR [ebx+0xe]
  431634:	inc    DWORD PTR [eax]
  431636:	sbb    BYTE PTR [eax],al
  431638:	in     al,dx
  431639:	cmp    eax,0x200000
  43163e:	inc    ebx
  43163f:	or     edx,DWORD PTR [ecx+0xe]
  431642:	add    eax,0x4001801
  431647:	add    BYTE PTR ds:[eax],al
  43164a:	add    BYTE PTR [eax],al
  43164c:	inc    ebx
  43164d:	or     edx,DWORD PTR [edi+0xe]
  431650:	or     al,0x1
  431652:	sbb    DWORD PTR [eax],eax
  431654:	sbb    al,0x3e
  431656:	add    BYTE PTR [eax],al
  431658:	and    BYTE PTR [eax],al
  43165a:	inc    ebx
  43165b:	or     ebx,DWORD PTR [ebp+0xe]
  43165e:	adc    al,BYTE PTR [ecx]
  431660:	sbb    DWORD PTR [eax],eax
  431662:	xor    al,0x3e
  431664:	add    BYTE PTR [eax],al
  431666:	add    BYTE PTR [eax],al
  431668:	inc    ebx
  431669:	or     esp,DWORD PTR [ebx+0xe]
  43166c:	or     al,0x1
  43166e:	sbb    al,BYTE PTR [eax]
  431670:	dec    esp
  431671:	add    BYTE PTR ds:[eax],al
  431674:	and    BYTE PTR [eax],al
  431676:	inc    ebx
  431677:	or     ebp,DWORD PTR [ecx+0xe]
  43167a:	adc    al,BYTE PTR [ecx]
  43167c:	sbb    al,BYTE PTR [eax]
  43167e:	fs add BYTE PTR ds:[eax],al
  431682:	add    BYTE PTR [eax],al
  431684:	inc    ebx
  431685:	or     ebp,DWORD PTR [edi+0xe]
  431688:	or     al,0x1
  43168a:	sbb    eax,DWORD PTR [eax]
  43168c:	jl     0x4316cc
  43168e:	add    BYTE PTR [eax],al
  431690:	and    BYTE PTR [eax],al
  431692:	inc    ebx
  431693:	or     esi,DWORD PTR [ebp+0xe]
  431696:	adc    al,BYTE PTR [ecx]
  431698:	sbb    eax,DWORD PTR [eax]
  43169a:	xchg   esp,eax
  43169b:	add    BYTE PTR ds:[eax],al
  43169e:	add    BYTE PTR [eax],al
  4316a0:	inc    ebx
  4316a1:	or     edi,DWORD PTR [ebx+0xe]
  4316a4:	or     al,0x1
  4316a6:	sbb    al,0x0
  4316a8:	lods   al,BYTE PTR ds:[esi]
  4316a9:	add    BYTE PTR ds:[eax],al
  4316ac:	and    BYTE PTR [eax],al
  4316ae:	inc    ebx
  4316af:	or     eax,DWORD PTR [ecx+0x1c01120e]
  4316b5:	add    ah,al
  4316b7:	add    BYTE PTR ds:[eax],al
  4316ba:	add    BYTE PTR [eax],al
  4316bc:	inc    ebx
  4316bd:	or     eax,DWORD PTR [edi+0x1d010c0e]
  4316c3:	add    ah,bl
  4316c5:	add    BYTE PTR ds:[eax],al
  4316c8:	and    BYTE PTR [eax],al
  4316ca:	inc    ebx
  4316cb:	or     ecx,DWORD PTR [ebp+0x1d01120e]
  4316d1:	add    ah,dh
  4316d3:	add    BYTE PTR ds:[eax],al
  4316d6:	add    BYTE PTR [eax],al
  4316d8:	add    DWORD PTR [eax],eax
  4316da:	xchg   ebx,eax
  4316db:	push   cs
  4316dc:	add    DWORD PTR es:[esi],ebx
  4316df:	add    BYTE PTR [esi+eax*2+0x0],bl
  4316e3:	add    BYTE PTR [eax],al
  4316e5:	add    BYTE PTR [esi],al
  4316e7:	add    BYTE PTR [esi+0x20012e0e],dl
  4316ed:	add    ah,ch
  4316ef:	inc    edi
  4316f0:	add    BYTE PTR [eax],al
  4316f2:	add    BYTE PTR [eax],al
  4316f4:	push   es
  4316f5:	add    BYTE PTR [esi+ecx*1+0x20012e],ah
  4316fc:	enter  0x49,0x0
  431700:	add    BYTE PTR [eax],al
  431702:	push   es
  431703:	add    BYTE PTR [edi+0x2000bf0e],ch
  431709:	add    BYTE PTR [eax+0x4b],dl
  43170c:	add    BYTE PTR [eax],al
  43170e:	add    BYTE PTR [eax],al
  431710:	push   es
  431711:	add    BYTE PTR [esi+0x20012e0e],dh
  431717:	add    al,bh
  431719:	dec    esp
  43171a:	add    BYTE PTR [eax],al
  43171c:	add    BYTE PTR [eax],al
  43171e:	push   es
  43171f:	add    al,cl
  431721:	push   cs
  431722:	add    DWORD PTR cs:[eax],esp
  431725:	add    BYTE PTR [eax+0x50],dl
  431728:	add    BYTE PTR [eax],al
  43172a:	add    BYTE PTR [eax],al
  43172c:	push   es
  43172d:	add    dl,bl
  43172f:	push   cs
  431730:	add    DWORD PTR cs:[eax],esp
  431733:	add    BYTE PTR [eax+0x52],ch
  431736:	add    BYTE PTR [eax],al
  431738:	add    BYTE PTR [eax],al
  43173a:	push   es
  43173b:	add    dh,ah
  43173d:	push   cs
  43173e:	xor    al,BYTE PTR [ecx]
  431740:	and    BYTE PTR [eax],al
  431742:	add    al,0x57
  431744:	add    BYTE PTR [eax],al
  431746:	add    BYTE PTR [eax],al
  431748:	push   es
  431749:	add    BYTE PTR [edx],cl
  43174b:	rdmsr  
  43174d:	add    DWORD PTR [edx],esp
  43174f:	add    BYTE PTR [edx+ebx*2+0x0],dh
  431756:	add    DWORD PTR [eax],eax
  431758:	and    cl,BYTE PTR [edi]
  43175a:	cmp    BYTE PTR [ecx],al
  43175c:	and    al,0x0
  43175e:	jl     0x4317bd
  431760:	add    BYTE PTR [eax],al
  431762:	add    BYTE PTR [eax],al
  431764:	add    DWORD PTR [eax],eax
  431766:	and    eax,0x2501380f
  43176b:	add    BYTE PTR [eax+0x60],al
  43176e:	add    BYTE PTR [eax],al
  431770:	add    BYTE PTR [eax],al
  431772:	add    DWORD PTR [eax],eax
  431774:	sub    BYTE PTR [edi],cl
  431776:	add    DWORD PTR ds:[esi],esp
  431779:	add    al,bl
  43177b:	add    BYTE PTR fs:[eax],al
  43177e:	add    BYTE PTR [eax],al
  431780:	push   es
  431781:	add    BYTE PTR [ebx],ch
  431783:	ucomiss xmm0,DWORD PTR [ecx]
  431786:	sub    eax,DWORD PTR [eax]
  431788:	adc    BYTE PTR [esi+0x0],ah
  43178b:	add    BYTE PTR [eax],al
  43178d:	add    BYTE PTR [ecx],al
  43178f:	add    BYTE PTR [edx],dh
  431791:	(bad)  
  431793:	add    DWORD PTR [ebx],ebp
  431795:	add    BYTE PTR [eax+ebp*2+0x0],dl
  431799:	add    BYTE PTR [eax],al
  43179b:	add    BYTE PTR [ecx],al
  43179d:	add    BYTE PTR ds:0x2d01260f,dh
  4317a3:	add    BYTE PTR [eax+ebp*2+0x0],ch
  4317a7:	add    BYTE PTR [eax],al
  4317a9:	add    BYTE PTR [esi],al
  4317ab:	sbb    BYTE PTR [ebp+ecx*1+0x21],bh
  4317af:	add    BYTE PTR [edi],ch
  4317b1:	add    BYTE PTR [eax+ebp*2+0x0],al
  4317b8:	adc    DWORD PTR [eax],ebx
  4317ba:	jne    0x4317c9
  4317bc:	adc    eax,DWORD PTR [eax]
  4317be:	das    
  4317bf:	add    BYTE PTR [eax+0x6b],ah
  4317c2:	add    BYTE PTR [eax],al
  4317c4:	add    BYTE PTR [eax],al
  4317c6:	push   ss
  4317c7:	add    BYTE PTR [eax+0xf],al
  4317ca:	pop    edi
  4317cb:	add    DWORD PTR [edi],ebp
  4317cd:	add    BYTE PTR [eax+0x6d],cl
  4317d0:	add    BYTE PTR [eax],al
  4317d2:	add    BYTE PTR [eax],al
  4317d4:	push   ss
  4317d5:	add    BYTE PTR [eax+0xf],al
  4317d8:	add    DWORD PTR gs:[eax],esi
  4317db:	add    BYTE PTR [eax+0x6f],cl
  4317de:	add    BYTE PTR [eax],al
  4317e0:	add    BYTE PTR [eax],al
  4317e2:	adc    ecx,DWORD PTR [eax]
  4317e4:	pop    edx
  4317e5:	pcmpeqb mm0,QWORD PTR [ecx]
  4317e8:	xor    DWORD PTR [eax],eax
  4317ea:	mov    al,0x6f
  4317ec:	add    BYTE PTR [eax],al
  4317ee:	add    BYTE PTR [eax],al
  4317f0:	adc    ecx,DWORD PTR [eax]
  4317f2:	outs   dx,BYTE PTR ds:[esi]
  4317f3:	(bad)  
  4317f5:	add    DWORD PTR [ecx],esi
  4317f7:	add    al,cl
  4317f9:	outs   dx,DWORD PTR ds:[esi]
  4317fa:	add    BYTE PTR [eax],al
  4317fc:	add    BYTE PTR [eax],al
  4317fe:	adc    ecx,DWORD PTR [eax]
  431800:	jp     0x431811
  431802:	add    BYTE PTR [ecx],0x31
  431805:	add    al,ah
  431807:	outs   dx,DWORD PTR ds:[esi]
  431808:	add    BYTE PTR [eax],al
  43180a:	add    BYTE PTR [eax],al
  43180c:	adc    DWORD PTR [eax],ebx
  43180e:	jne    0x43181d
  431810:	adc    eax,DWORD PTR [eax]
  431812:	xor    al,BYTE PTR [eax]
  431814:	adc    al,0x70
  431816:	add    BYTE PTR [eax],al
  431818:	add    BYTE PTR [eax],al
  43181a:	push   es
  43181b:	sbb    BYTE PTR [ebp+ecx*1+0x21],bh
  43181f:	add    BYTE PTR [edx],dh
  431821:	add    BYTE PTR [eax+esi*2],ch
  431824:	add    BYTE PTR [eax],al
  431826:	add    BYTE PTR [eax],al
  431828:	adc    DWORD PTR [eax],eax
  43182a:	ror    BYTE PTR [edi],0x91
  43182d:	add    DWORD PTR [edx],esi
  43182f:	add    BYTE PTR [eax+esi*2+0x0],ch
  431833:	add    BYTE PTR [eax],al
  431835:	add    BYTE PTR [esi],dl
  431837:	or     dl,bl
  431839:	setns  BYTE PTR [ecx]
  43183c:	xor    al,0x0
  43183e:	sub    al,0x71
  431840:	add    BYTE PTR [eax],al
  431842:	add    BYTE PTR [eax],al
  431844:	xchg   ecx,eax
  431845:	sbb    BYTE PTR [ebp+0xd],dh
  431848:	adc    eax,DWORD PTR [eax]
  43184a:	xor    al,0x0
  43184c:	cwde   
  43184d:	jno    0x43184f
  43184f:	add    BYTE PTR [eax],al
  431851:	add    BYTE PTR [esi+0x210d7c18],al
  431857:	add    BYTE PTR [eax+eax*1],dh
  43185a:	lods   al,BYTE PTR ds:[esi]
  43185b:	jno    0x43185d
  43185d:	add    BYTE PTR [eax],al
  43185f:	add    BYTE PTR [ebx-0x5df2d500],dl
  431865:	add    DWORD PTR [eax+eax*1],esi
  431868:	enter  0x71,0x0
  43186c:	add    BYTE PTR [eax],al
  43186e:	xchg   ebx,eax
  43186f:	add    BYTE PTR ds:0x3501a70d,ch
  431875:	add    al,ah
  431877:	jno    0x431879
  431879:	add    BYTE PTR [eax],al
  43187b:	add    BYTE PTR [ebx-0x53f26900],dl
  431881:	add    DWORD PTR [esi],esi
  431883:	add    ah,bh
  431885:	jno    0x431887
  431887:	add    BYTE PTR [eax],al
  431889:	add    BYTE PTR [ebx-0x4ef2d700],dl
  43188f:	add    DWORD PTR [edi],esi
  431891:	add    BYTE PTR [eax],bl
  431893:	jb     0x431895
  431895:	add    BYTE PTR [eax],al
  431897:	add    BYTE PTR [ebx-0x49f2bb00],dl
  43189d:	add    DWORD PTR [eax],edi
  43189f:	add    al,bh
  4318a1:	jb     0x4318a3
  4318a3:	add    BYTE PTR [eax],al
  4318a5:	add    BYTE PTR [ebx],dl
  4318a7:	or     dh,ah
  4318a9:	setns  BYTE PTR [ecx]
  4318ac:	cmp    al,BYTE PTR [eax]
  4318ae:	adc    BYTE PTR [ebx+0x0],dh
  4318b1:	add    BYTE PTR [eax],al
  4318b3:	add    BYTE PTR [ecx+0x130d7518],dl
  4318b9:	add    BYTE PTR [edx],bh
  4318bb:	add    BYTE PTR [ebx+esi*2+0x0],ah
  4318bf:	add    BYTE PTR [eax],al
  4318c1:	add    BYTE PTR [esi+0x210d7c18],al
  4318c7:	add    BYTE PTR [edx],bh
  4318c9:	add    BYTE PTR [eax+0x73],bh
  4318cc:	add    BYTE PTR [eax],al
  4318ce:	add    BYTE PTR [eax],al
  4318d0:	xchg   ebx,eax
  4318d1:	add    BYTE PTR ds:0x3a01bd0d,ah
  4318d7:	add    BYTE PTR [eax+0x74],ch
  4318da:	add    BYTE PTR [eax],al
  4318dc:	add    BYTE PTR [eax],al
  4318de:	xchg   ecx,eax
  4318df:	sbb    BYTE PTR [ebp+0xd],dh
  4318e2:	adc    eax,DWORD PTR [eax]
  4318e4:	cmp    eax,DWORD PTR [eax]
  4318e6:	mov    eax,0x74
  4318eb:	add    BYTE PTR [esi+0x210d7c18],al
  4318f1:	add    BYTE PTR [ebx],bh
  4318f3:	add    ah,cl
  4318f5:	je     0x4318f7
  4318f7:	add    BYTE PTR [eax],al
  4318f9:	add    BYTE PTR [ecx+0x440d4500],dl
  4318ff:	add    BYTE PTR [ebx],bh
  431901:	add    BYTE PTR [esi*2+0x0],cl
  431908:	xchg   ecx,eax
  431909:	add    BYTE PTR [ebp+0xd],cl
  43190c:	retf   0x3c01
  43190f:	add    al,dl
  431911:	jne    0x431913
  431913:	add    BYTE PTR [eax],al
  431915:	add    BYTE PTR [ebx-0x2df29500],dl
  43191b:	add    DWORD PTR ds:0x761000,edi
  431921:	add    BYTE PTR [eax],al
  431923:	add    BYTE PTR [ebx-0x25f29100],dl
  431929:	add    DWORD PTR [esi],edi
  43192b:	add    BYTE PTR [eax+0x76],cl
  43192e:	add    BYTE PTR [eax],al
  431930:	add    BYTE PTR [eax],al
  431932:	xchg   ebx,eax
  431933:	add    BYTE PTR [ebp+0xd],ch
  431936:	fiadd  DWORD PTR [ecx]
  431938:	inc    eax
  431939:	add    BYTE PTR [eax+0x79],al
  43193f:	add    BYTE PTR [ecx+0x130d7518],dl
  431945:	add    BYTE PTR [edx+0x0],al
  431948:	pushf  
  431949:	jp     0x43194b
  43194b:	add    BYTE PTR [eax],al
  43194d:	add    BYTE PTR [esi+0x210d7c18],al
  431953:	add    BYTE PTR [edx+0x0],al
  431956:	mov    al,0x7a
  431958:	add    BYTE PTR [eax],al
  43195a:	add    BYTE PTR [eax],al
  43195c:	xchg   ebx,eax
  43195d:	add    BYTE PTR ds:0x4201f10d,ch
  431963:	add    BYTE PTR [esp+edi*2],ah
  431966:	add    BYTE PTR [eax],al
  431968:	add    BYTE PTR [eax],al
  43196a:	xchg   ecx,eax
  43196b:	add    BYTE PTR [edi+0x4501f80d],dl
  431971:	add    BYTE PTR [eax+0x7c],dl
  431977:	add    BYTE PTR [ecx+0x40d2900],dl
  43197d:	add    cl,BYTE PTR [eax+0x0]
  431980:	and    BYTE PTR [ebp+0x0],bh
  431983:	add    BYTE PTR [eax],al
  431985:	add    BYTE PTR [ecx+0xe0d4500],dl
  43198b:	add    cl,BYTE PTR [edx+0x0]
  43198e:	or     BYTE PTR [esi+0x0],bh
  431991:	add    BYTE PTR [eax],al
  431993:	add    BYTE PTR [esi+0x170d4d00],dl
  431999:	add    cl,BYTE PTR [eax+eax*1+0x50]
  43199d:	jle    0x43199f
  43199f:	add    BYTE PTR [eax],al
  4319a1:	add    BYTE PTR [ecx+0x1f0d6b00],dl
  4319a7:	add    cl,BYTE PTR [edi+0x0]
  4319aa:	adc    al,0x7f
  4319ac:	add    BYTE PTR [eax],al
  4319ae:	add    BYTE PTR [eax],al
  4319b0:	xchg   ecx,eax
  4319b1:	sbb    BYTE PTR [ebp+0xd],dh
  4319b4:	adc    eax,DWORD PTR [eax]
  4319b6:	push   eax
  4319b7:	add    al,ch
  4319b9:	jg     0x4319bb
  4319bb:	add    BYTE PTR [eax],al
  4319bd:	add    BYTE PTR [esi+0x3f0d7c18],al
  4319c3:	add    dl,BYTE PTR [eax+0x0]
  4319c6:	pop    eax
  4319c7:	add    BYTE PTR [eax],0x0
  4319ca:	add    BYTE PTR [eax],al
  4319cc:	add    DWORD PTR [eax],0x6b
  4319cf:	or     eax,0x530021
  4319d4:	add    BYTE PTR [eax+0x0],0x81
  4319db:	add    BYTE PTR [edi+0xd],ch
  4319de:	add    DWORD PTR cs:[ebx+0x0],edx
  4319e2:	cmp    BYTE PTR [eax+eax*1-0x7f000000],al
  4319e9:	add    BYTE PTR [ebp+0xd],ch
  4319ec:	dec    ebx
  4319ed:	add    dl,BYTE PTR [ebx+0x0]
  4319f0:	push   esp
  4319f1:	test   BYTE PTR [eax],al
  4319f3:	add    BYTE PTR [eax],al
  4319f5:	add    BYTE PTR [ecx+0x500d6900],al
  4319fb:	add    dl,BYTE PTR [eax+eax*1+0x7c]
  4319ff:	test   BYTE PTR [eax],al
  431a01:	add    BYTE PTR [eax],al
  431a03:	add    BYTE PTR [ecx-0x4af2d900],al
  431a09:	add    BYTE PTR [eax+eax*1-0x54],dl
  431a0d:	test   BYTE PTR [eax],al
  431a0f:	add    BYTE PTR [eax],al
  431a11:	add    BYTE PTR [ecx+0x540d7300],al
  431a17:	add    dl,BYTE PTR [eax+eax*1+0x0]
  431a1b:	add    BYTE PTR [ecx],al
  431a1d:	add    BYTE PTR [eax],al
  431a1f:	add    BYTE PTR [eax],al
  431a21:	add    BYTE PTR [ecx],al
  431a23:	add    BYTE PTR [eax],al
  431a25:	add    BYTE PTR [eax],al
  431a27:	add    BYTE PTR [ecx],al
  431a29:	add    BYTE PTR [ebx+0x100000d],dl
  431a2f:	add    BYTE PTR [eax],al
  431a31:	add    BYTE PTR [eax],al
  431a33:	add    BYTE PTR [edx],al
  431a35:	add    BYTE PTR [eax],al
  431a37:	add    BYTE PTR [eax],al
  431a39:	add    BYTE PTR [ecx],al
  431a3b:	add    BYTE PTR [eax],al
  431a3d:	add    BYTE PTR [eax],al
  431a3f:	add    BYTE PTR [ecx],al
  431a41:	add    BYTE PTR [eax],al
  431a43:	add    BYTE PTR [eax],al
  431a45:	add    BYTE PTR [edx],al
  431a47:	add    BYTE PTR [eax],al
  431a49:	add    BYTE PTR [eax],al
  431a4b:	add    BYTE PTR [ecx],al
  431a4d:	add    BYTE PTR [eax],al
  431a4f:	add    BYTE PTR [eax],al
  431a51:	add    BYTE PTR [ecx],al
  431a53:	add    BYTE PTR [eax],al
  431a55:	add    BYTE PTR [eax],al
  431a57:	add    BYTE PTR [ecx],al
  431a59:	add    BYTE PTR [eax],al
  431a5b:	add    BYTE PTR [eax],al
  431a5d:	add    BYTE PTR [ecx],al
  431a5f:	add    dl,cl
  431a61:	or     eax,0x10000
  431a66:	retf   0xd
  431a69:	add    BYTE PTR [ecx],al
  431a6b:	add    BYTE PTR [eax],al
  431a6d:	add    BYTE PTR [eax],al
  431a6f:	add    BYTE PTR [ecx],al
  431a71:	add    BYTE PTR [eax],al
  431a73:	add    BYTE PTR [eax],al
  431a75:	add    BYTE PTR [ecx],al
  431a77:	add    BYTE PTR [eax],al
  431a79:	add    BYTE PTR [eax],al
  431a7b:	add    BYTE PTR [ecx],al
  431a7d:	add    bh,dh
  431a7f:	or     eax,0x10000
  431a84:	add    BYTE PTR [eax],al
  431a86:	add    BYTE PTR [eax],al
  431a88:	add    DWORD PTR [eax],eax
  431a8a:	add    BYTE PTR [eax],al
  431a8c:	add    BYTE PTR [eax],al
  431a8e:	add    DWORD PTR [eax],eax
  431a90:	add    BYTE PTR [eax],al
  431a92:	add    BYTE PTR [eax],al
  431a94:	add    DWORD PTR [eax],eax
  431a96:	add    BYTE PTR [eax],al
  431a98:	add    BYTE PTR [eax],al
  431a9a:	add    DWORD PTR [eax],eax
  431a9c:	add    BYTE PTR [eax],al
  431a9e:	add    BYTE PTR [eax],al
  431aa0:	add    DWORD PTR [eax],eax
  431aa2:	add    BYTE PTR [eax],al
  431aa4:	add    BYTE PTR [eax],al
  431aa6:	add    DWORD PTR [eax],eax
  431aa8:	add    BYTE PTR [eax],al
  431aaa:	add    BYTE PTR [eax],al
  431aac:	add    DWORD PTR [eax],eax
  431aae:	add    BYTE PTR [eax],al
  431ab0:	add    BYTE PTR [eax],al
  431ab2:	add    DWORD PTR [eax],eax
  431ab4:	add    BYTE PTR [eax],al
  431ab6:	add    BYTE PTR [eax],al
  431ab8:	add    DWORD PTR [eax],eax
  431aba:	add    BYTE PTR [eax],al
  431abc:	add    BYTE PTR [eax],al
  431abe:	add    DWORD PTR [eax],eax
  431ac0:	add    BYTE PTR [eax],al
  431ac2:	add    BYTE PTR [eax],al
  431ac4:	add    DWORD PTR [eax],eax
  431ac6:	add    BYTE PTR [eax],al
  431ac8:	add    BYTE PTR [eax],al
  431aca:	add    DWORD PTR [eax],eax
  431acc:	add    BYTE PTR [eax],al
  431ace:	add    BYTE PTR [eax],al
  431ad0:	add    al,BYTE PTR [eax]
  431ad2:	add    BYTE PTR [eax],al
  431ad4:	add    BYTE PTR [eax],al
  431ad6:	add    DWORD PTR [eax],eax
  431ad8:	repz push cs
  431ada:	add    BYTE PTR [eax],al
  431adc:	add    al,BYTE PTR [eax]
  431ade:	clc    
  431adf:	push   cs
  431ae0:	add    BYTE PTR [eax],al
  431ae2:	add    DWORD PTR [eax],eax
  431ae4:	repz push cs
  431ae6:	add    BYTE PTR [eax],al
  431ae8:	add    al,BYTE PTR [eax]
  431aea:	pop    ss
  431aeb:	sldt   WORD PTR [eax]
  431aee:	add    DWORD PTR [eax],eax
  431af0:	add    BYTE PTR [eax],al
  431af2:	add    BYTE PTR [eax],al
  431af4:	add    DWORD PTR [eax],eax
  431af6:	add    BYTE PTR [eax],al
  431af8:	add    BYTE PTR [eax],al
  431afa:	add    DWORD PTR [eax],eax
  431afc:	add    BYTE PTR [eax],al
  431afe:	add    BYTE PTR [eax],al
  431b00:	add    al,BYTE PTR [eax]
  431b02:	add    BYTE PTR [eax],al
  431b04:	add    BYTE PTR [eax],al
  431b06:	add    eax,DWORD PTR [eax]
  431b08:	add    BYTE PTR [eax],al
  431b0a:	add    BYTE PTR [eax],al
  431b0c:	add    al,0x0
  431b0e:	add    BYTE PTR [eax],al
  431b10:	add    BYTE PTR [eax],al
  431b12:	add    eax,0x0
  431b17:	add    BYTE PTR [ecx],al
  431b19:	add    BYTE PTR [eax],al
  431b1b:	add    BYTE PTR [eax],al
  431b1d:	add    BYTE PTR [edx],al
  431b1f:	add    BYTE PTR [eax],al
  431b21:	add    BYTE PTR [eax],al
  431b23:	add    BYTE PTR [ecx],al
  431b25:	add    BYTE PTR [eax],al
  431b27:	add    BYTE PTR [eax],al
  431b29:	add    BYTE PTR [edx],al
  431b2b:	add    BYTE PTR [eax],al
  431b2d:	add    BYTE PTR [eax],al
  431b2f:	add    BYTE PTR [ecx],al
  431b31:	add    BYTE PTR [eax+0xf],dl
  431b34:	add    BYTE PTR [eax],al
  431b36:	add    DWORD PTR [eax],eax
  431b38:	push   esi
  431b39:	sldt   WORD PTR [eax]
  431b3c:	add    DWORD PTR [eax],eax
  431b3e:	xchg   BYTE PTR [edi],cl
  431b40:	add    BYTE PTR [eax],al
  431b42:	add    DWORD PTR [eax],eax
  431b44:	ror    DWORD PTR [edi],1
  431b46:	add    BYTE PTR [eax],al
  431b48:	add    al,BYTE PTR [eax]
  431b4a:	fmul   DWORD PTR [edi]
  431b4c:	add    BYTE PTR [eax],al
  431b4e:	add    DWORD PTR [eax],eax
  431b50:	add    BYTE PTR [eax],al
  431b52:	add    BYTE PTR [eax],al
  431b54:	add    DWORD PTR [eax],eax
  431b56:	add    BYTE PTR [eax],al
  431b58:	add    BYTE PTR [eax],al
  431b5a:	add    DWORD PTR [eax],eax
  431b5c:	add    BYTE PTR [eax],al
  431b5e:	add    BYTE PTR [eax],al
  431b60:	add    DWORD PTR [eax],eax
  431b62:	add    BYTE PTR [eax],al
  431b64:	add    BYTE PTR [eax],al
  431b66:	add    DWORD PTR [eax],eax
  431b68:	add    BYTE PTR [eax],al
  431b6a:	add    BYTE PTR [eax],al
  431b6c:	add    al,BYTE PTR [eax]
  431b6e:	add    BYTE PTR [eax],al
  431b70:	add    BYTE PTR [eax],al
  431b72:	add    DWORD PTR [eax],eax
  431b74:	add    BYTE PTR [eax],al
  431b76:	add    BYTE PTR [eax],al
  431b78:	add    DWORD PTR [eax],eax
  431b7a:	add    BYTE PTR [eax],al
  431b7c:	add    BYTE PTR [eax],al
  431b7e:	add    DWORD PTR [eax],eax
  431b80:	add    BYTE PTR [eax],al
  431b82:	add    BYTE PTR [eax],al
  431b84:	add    DWORD PTR [eax],eax
  431b86:	add    BYTE PTR [eax],al
  431b88:	add    BYTE PTR [eax],al
  431b8a:	add    DWORD PTR [eax],eax
  431b8c:	add    BYTE PTR [eax],al
  431b8e:	add    BYTE PTR [eax],al
  431b90:	add    al,BYTE PTR [eax]
  431b92:	add    BYTE PTR [eax],al
  431b94:	add    BYTE PTR [eax],al
  431b96:	add    DWORD PTR [eax],eax
  431b98:	add    BYTE PTR [eax],al
  431b9a:	add    BYTE PTR [eax],al
  431b9c:	add    al,BYTE PTR [eax]
  431b9e:	add    BYTE PTR [eax],al
  431ba0:	add    BYTE PTR [eax],al
  431ba2:	add    DWORD PTR [eax],eax
  431ba4:	add    BYTE PTR [eax],al
  431ba6:	add    BYTE PTR [eax],al
  431ba8:	add    al,BYTE PTR [eax]
  431baa:	add    BYTE PTR [eax],al
  431bac:	add    BYTE PTR [eax],al
  431bae:	add    eax,DWORD PTR [eax]
  431bb0:	add    BYTE PTR [eax],al
  431bb2:	add    BYTE PTR [eax],al
  431bb4:	add    DWORD PTR [eax],eax
  431bb6:	add    BYTE PTR [eax],al
  431bb8:	add    BYTE PTR [eax],al
  431bba:	add    al,BYTE PTR [eax]
  431bbc:	add    BYTE PTR [eax],al
  431bbe:	add    BYTE PTR [eax],al
  431bc0:	add    eax,DWORD PTR [eax]
  431bc2:	add    BYTE PTR [eax],al
  431bc4:	add    BYTE PTR [eax],al
  431bc6:	add    DWORD PTR [eax],eax
  431bc8:	add    BYTE PTR [eax],al
  431bca:	add    BYTE PTR [eax],al
  431bcc:	add    al,BYTE PTR [eax]
  431bce:	add    BYTE PTR [eax],al
  431bd0:	add    BYTE PTR [eax],al
  431bd2:	add    DWORD PTR [eax],eax
  431bd4:	add    BYTE PTR [eax],al
  431bd6:	add    BYTE PTR [eax],al
  431bd8:	add    al,BYTE PTR [eax]
  431bda:	add    BYTE PTR [eax],al
  431bdc:	add    BYTE PTR [eax],al
  431bde:	add    DWORD PTR [eax],eax
  431be0:	add    BYTE PTR [eax],al
  431be2:	add    BYTE PTR [eax],al
  431be4:	add    al,BYTE PTR [eax]
  431be6:	add    BYTE PTR [eax],al
  431be8:	add    BYTE PTR [eax],al
  431bea:	add    eax,DWORD PTR [eax]
  431bec:	add    BYTE PTR [eax],al
  431bee:	add    BYTE PTR [eax],al
  431bf0:	add    DWORD PTR [eax],eax
  431bf2:	add    BYTE PTR [eax],al
  431bf4:	add    BYTE PTR [eax],al
  431bf6:	add    DWORD PTR [eax],eax
  431bf8:	add    BYTE PTR [eax],al
  431bfa:	add    BYTE PTR [eax],al
  431bfc:	add    al,BYTE PTR [eax]
  431bfe:	add    BYTE PTR [eax],al
  431c00:	add    BYTE PTR [eax],al
  431c02:	add    eax,DWORD PTR [eax]
  431c04:	add    BYTE PTR [eax],al
  431c06:	add    BYTE PTR [eax],al
  431c08:	add    DWORD PTR [eax],eax
  431c0a:	add    BYTE PTR [eax],al
  431c0c:	add    BYTE PTR [eax],al
  431c0e:	add    DWORD PTR [eax],eax
  431c10:	add    BYTE PTR [eax],al
  431c12:	add    BYTE PTR [eax],al
  431c14:	add    al,BYTE PTR [eax]
  431c16:	add    BYTE PTR [eax],al
  431c18:	sbb    DWORD PTR ds:0x210d7c,eax
  431c1e:	pop    ecx
  431c1f:	add    al,0x7c
  431c21:	or     eax,0x4490021
  431c26:	jl     0x431c35
  431c28:	xor    BYTE PTR [eax],al
  431c2a:	mov    cl,0x1
  431c2c:	jl     0x431c3b
  431c2e:	and    DWORD PTR [eax],eax
  431c30:	mov    ecx,0x210d7c01
  431c35:	add    BYTE PTR [ecx+0x1],bl
  431c38:	jl     0x431c47
  431c3a:	or     eax,0x7c04e903
  431c3f:	or     eax,0x1a90021
  431c44:	jl     0x431c53
  431c46:	and    DWORD PTR [eax],eax
  431c48:	add    DWORD PTR [ecx],eax
  431c4a:	jl     0x431c59
  431c4c:	xor    eax,0x7c015103
  431c51:	or     eax,0x610030
  431c56:	jl     0x431c65
  431c58:	and    DWORD PTR [eax],eax
  431c5a:	add    DWORD PTR [eax],0x210d7c
  431c60:	mov    DWORD PTR [eax],eax
  431c62:	jl     0x431c71
  431c64:	add    DWORD PTR [ecx+esi*2],eax
  431c67:	add    al,0x7c
  431c69:	or     eax,0x4100ed
  431c6e:	jl     0x431c7d
  431c70:	and    DWORD PTR [eax],eax
  431c72:	jno    0x431c77
  431c74:	jl     0x431c83
  431c76:	xor    BYTE PTR [eax],al
  431c78:	add    DWORD PTR [ebx],0x300d7c
  431c7e:	popa   
  431c7f:	add    al,0x7c
  431c81:	or     eax,0x3690021
  431c86:	jl     0x431c95
  431c88:	xor    BYTE PTR [eax],al
  431c8a:	mov    DWORD PTR [ebx],eax
  431c8c:	jl     0x431c9b
  431c8e:	xor    BYTE PTR [eax],al
  431c90:	cdq    
  431c91:	add    DWORD PTR [ebp+ecx*1-0x80],edi
  431c95:	add    eax,0xd7c0451
  431c9a:	dec    ebx
  431c9b:	add    ah,BYTE PTR [ecx+0x3]
  431c9e:	jl     0x431cad
  431ca0:	xor    BYTE PTR [eax],al
  431ca2:	jns    0x431ca7
  431ca4:	jl     0x431cb3
  431ca6:	xor    BYTE PTR [eax],al
  431ca8:	jns    0x431cae
  431caa:	jl     0x431cb9
  431cac:	xor    BYTE PTR [eax],al
  431cae:	xchg   ecx,eax
  431caf:	add    edi,DWORD PTR [ebp+ecx*1+0x30]
  431cb3:	add    BYTE PTR [eax+eax*1],cl
  431cb6:	jl     0x431cc5
  431cb8:	and    DWORD PTR [eax],eax
  431cba:	sub    DWORD PTR [eax],eax
  431cbc:	jl     0x431ccb
  431cbe:	rol    DWORD PTR ds:0x100c0029,cl
  431cc4:	in     eax,dx
  431cc5:	add    BYTE PTR [ecx],ch
  431cc7:	add    BYTE PTR [ecx],ah
  431cc9:	adc    ch,ch
  431ccb:	add    BYTE PTR [ecx],ch
  431ccd:	add    BYTE PTR [eax],bh
  431ccf:	adc    ch,ch
  431cd1:	add    BYTE PTR [ecx],ch
  431cd3:	add    BYTE PTR [ecx+0x10],dl
  431cd6:	fld    DWORD PTR ds:0x10630509
  431cdc:	and    eax,0x69000c00
  431ce1:	adc    BYTE PTR [ebp+0x73000c00],dh
  431ce7:	adc    BYTE PTR [ebp-0x7ffff400],dh
  431ced:	adc    bl,dh
  431cef:	add    eax,0x10890541
  431cf4:	stc    
  431cf5:	add    eax,0x1095000c
  431cfa:	std    
  431cfb:	add    eax,0x109e000c
  431d00:	push   esp
  431d01:	add    cl,BYTE PTR [eax+eax*1]
  431d04:	stos   BYTE PTR es:[edi],al
  431d05:	adc    BYTE PTR [ebx+0x2],cl
  431d08:	imul   eax,DWORD PTR [edi+esi*4],0x41060410
  431d0f:	add    eax,0x6090d7c
  431d14:	or     al,0x0
  431d16:	(bad)  
  431d17:	adc    BYTE PTR [esi],cl
  431d19:	push   es
  431d1a:	or     DWORD PTR ds:0x2510ca,eax
  431d20:	sub    DWORD PTR [eax],eax
  431d22:	iret   
  431d23:	adc    BYTE PTR [esi+eax*1],dl
  431d26:	dec    ecx
  431d27:	add    eax,0x61810ee
  431d2c:	sub    DWORD PTR [eax],eax
  431d2e:	adc    BYTE PTR [ecx],dl
  431d30:	sbb    eax,0x14002906
  431d35:	adc    DWORD PTR [ebx],esp
  431d37:	push   es
  431d38:	leave  
  431d39:	add    BYTE PTR [ebp+ecx*1+0x21],bh
  431d3d:	add    BYTE PTR [ecx+0x0],dh
  431d40:	jl     0x431d4f
  431d42:	and    DWORD PTR [eax],eax
  431d44:	mov    cl,0x0
  431d46:	and    DWORD PTR [ecx],edx
  431d48:	xor    DWORD PTR [esi],eax
  431d4a:	cmp    DWORD PTR [esp+edi*2],eax
  431d4d:	or     eax,0xb10636
  431d52:	xor    edx,DWORD PTR [ecx]
  431d54:	cmp    al,0x6
  431d56:	mov    cl,0x0
  431d58:	inc    edi
  431d59:	adc    DWORD PTR [esi+eax*1],edi
  431d5c:	pop    ecx
  431d5d:	add    ebx,DWORD PTR [ebx+0x11]
  431d60:	inc    ebx
  431d61:	push   es
  431d62:	pop    ecx
  431d63:	add    esi,DWORD PTR [eax+0x11]
  431d66:	dec    ecx
  431d67:	push   es
  431d68:	dec    ecx
  431d69:	add    edi,DWORD PTR [ebp+ecx*1+0x21]
  431d6d:	add    BYTE PTR [ecx],dh
  431d6f:	add    al,0x75
  431d71:	adc    DWORD PTR [edi+0x7e04f100],edi
  431d77:	adc    DWORD PTR [esi+eax*1+0x59],ebx
  431d7b:	add    ecx,DWORD PTR [ecx+0x59066111]
  431d81:	add    esi,DWORD PTR [eax+0x11]
  431d84:	push   0xa3035906
  431d89:	adc    DWORD PTR [edi-0x4ffb0f00],edi
  431d8f:	adc    DWORD PTR [ebp+0x6],esi
  431d92:	icebp  
  431d93:	add    al,0xb8
  431d95:	adc    DWORD PTR [edx+0x6],edi
  431d98:	icebp  
  431d99:	add    al,0xc2
  431d9b:	adc    DWORD PTR [eax-0x36fca6fa],eax
  431da1:	adc    DWORD PTR [eax-0x1dfb0efa],edx
  431da7:	adc    DWORD PTR [ebp+0x7c001406],edx
  431dad:	or     eax,0x1c0021
  431db2:	jl     0x431dc1
  431db4:	and    DWORD PTR [eax],eax
  431db6:	and    al,0x0
  431db8:	jl     0x431dc7
  431dba:	and    DWORD PTR [eax],eax
  431dbc:	sub    al,0x0
  431dbe:	jl     0x431dcd
  431dc0:	and    DWORD PTR [eax],eax
  431dc2:	xor    al,0x0
  431dc4:	jl     0x431dd3
  431dc6:	and    DWORD PTR [eax],eax
  431dc8:	adc    al,0x0
  431dca:	loope  0x431dd9
  431dcc:	mov    DWORD PTR [eax],0xde1001c
  431dd2:	mov    DWORD PTR [eax],0xde10024
  431dd8:	mov    DWORD PTR [eax],0xde1002c
  431dde:	mov    DWORD PTR [eax],0xde10034
  431de4:	mov    DWORD PTR [eax],0xd7c00b9
  431dea:	xor    BYTE PTR [eax],al
  431dec:	jns    0x431df3
  431dee:	out    dx,al
  431def:	adc    ecx,edi
  431df1:	add    eax,0x11fd0521
  431df6:	test   BYTE PTR [esi],0x31
  431df9:	add    DWORD PTR [edi],ecx
  431dfb:	adc    dh,BYTE PTR [eax+0x1b006900]
  431e01:	adc    bh,bh
  431e03:	push   es
  431e04:	cdq    
  431e05:	add    bh,BYTE PTR [ebp+ecx*1+0x30]
  431e09:	add    BYTE PTR [ecx],dh
  431e0b:	add    DWORD PTR [ebp+ecx*1+0x21],edi
  431e0f:	add    BYTE PTR [ecx],dh
  431e11:	add    esi,eax
  431e13:	adc    BYTE PTR [esi],al
  431e15:	pop    es
  431e16:	test   eax,0x11122d00
  431e1b:	pop    es
  431e1c:	pop    ecx
  431e1d:	add    BYTE PTR [edx+edx*1],bh
  431e20:	pop    ss
  431e21:	pop    es
  431e22:	pop    ecx
  431e23:	add    cl,BYTE PTR [edx+edx*1+0x1e]
  431e27:	pop    es
  431e28:	pop    ecx
  431e29:	add    bl,BYTE PTR [edi+0x12]
  431e2c:	mov    edi,0x7c029900
  431e31:	or     eax,0x590724
  431e36:	imul   edx,DWORD PTR [edx],0x13
  431e39:	add    BYTE PTR [ecx],dh
  431e3b:	add    DWORD PTR [ebp+0x12],edi
  431e3e:	or     DWORD PTR [esi],eax
  431e40:	inc    ecx
  431e41:	add    edi,ebp
  431e43:	or     eax,0x3490021
  431e48:	ret    
  431e49:	or     eax,0x34900b0
  431e4e:	int3   
  431e4f:	or     eax,0x34900b5
  431e54:	fmul   DWORD PTR ds:0x4400bf
  431e5a:	or     ecx,DWORD PTR ds:0x59100c3
  431e60:	jl     0x431e6f
  431e62:	and    DWORD PTR [eax],eax
  431e64:	push   ecx
  431e65:	add    bh,BYTE PTR [ebp+ecx*1+0x36]
  431e69:	push   es
  431e6a:	xchg   ecx,eax
  431e6b:	add    eax,0x75a1284
  431e70:	jno    0x431e74
  431e72:	out    dx,eax
  431e73:	or     eax,0x5910021
  431e78:	out    dx,eax
  431e79:	or     eax,0x14900ed
  431e7e:	jl     0x431e8d
  431e80:	jl     0x431e89
  431e82:	popa   
  431e83:	add    eax,0x210d7c
  431e88:	test   eax,0x210d7c05
  431e8d:	add    BYTE PTR [ecx+0x210d7c05],bh
  431e93:	add    BYTE PTR [ecx+0x210d7c05],bl
  431e99:	add    BYTE PTR [ecx+0x1],dh
  431e9c:	lea    edx,[edx]
  431e9e:	and    DWORD PTR [eax],eax
  431ea0:	jns    0x431ea7
  431ea2:	xchg   edi,eax
  431ea3:	adc    ah,BYTE PTR [ecx]
  431ea5:	add    cl,ah
  431ea7:	add    DWORD PTR [ebp+0x69078312],esp
  431ead:	add    eax,0x78912b3
  431eb2:	jmp    0x90509ab8
  431eb7:	pop    es
  431eb8:	jns    0x431ebf
  431eba:	rcl    DWORD PTR [edx],0x9d
  431ebd:	pop    es
  431ebe:	adc    DWORD PTR [edx],eax
  431ec0:	jl     0x431ecf
  431ec2:	push   esp
  431ec3:	add    bh,BYTE PTR [ecx+0x5]
  431ec6:	retf   0xa412
  431ec9:	pop    es
  431eca:	jns    0x431ed1
  431ecc:	xlat   BYTE PTR ds:[ebx]
  431ecd:	adc    dh,BYTE PTR [eax]
  431ecf:	add    BYTE PTR [ecx],bl
  431ed1:	add    bh,BYTE PTR [ebp+ecx*1+0x54]
  431ed5:	add    bh,BYTE PTR [ecx+0x5]
  431ed8:	loopne 0x431eec
  431eda:	stos   DWORD PTR es:[edi],eax
  431edb:	pop    es
  431edc:	jns    0x431ee3
  431ede:	jmp    0x694569f5
  431ee3:	add    eax,0x3012f6
  431ee8:	imul   eax,DWORD PTR ds:0xed12ff,0x131b01e1
  431ef2:	add    DWORD PTR [edi],0x41
  431ef5:	add    al,0x29
  431ef7:	adc    esi,DWORD PTR [edx+0x3305a907]
  431efd:	adc    esi,DWORD PTR [edi+0x3d05a907]
  431f03:	adc    edi,DWORD PTR [esi-0x16fa56f9]
  431f09:	adc    cl,BYTE PTR [ebx+0x2]
  431f0c:	test   eax,0xed134a05
  431f11:	add    BYTE PTR [ecx-0x12eca9fb],bl
  431f17:	add    cl,ah
  431f19:	add    DWORD PTR [ebx+0x13],esp
  431f1c:	add    DWORD PTR [edi],0x79
  431f1f:	add    eax,0x789136b
  431f24:	cdq    
  431f25:	add    eax,0x3012f6
  431f2a:	loope  0x431f2d
  431f2c:	jns    0x431f41
  431f2e:	add    DWORD PTR [edi],0xffffffc1
  431f31:	add    eax,0x78912b3
  431f36:	rol    DWORD PTR ds:0x7c51383,0xb9
  431f3d:	add    eax,0xed1393
  431f42:	rol    DWORD PTR ds:0xed13a1,0x41
  431f49:	add    al,0xae
  431f4b:	adc    ecx,esp
  431f4d:	pop    es
  431f4e:	mov    ecx,0x3012f605
  431f53:	add    cl,ah
  431f55:	add    DWORD PTR [eax-0x3ef82eed],edi
  431f5b:	add    eax,0x789136b
  431f60:	sub    DWORD PTR [edx],eax
  431f62:	rcl    DWORD PTR [ebx],0x83
  431f65:	pop    es
  431f66:	loope  0x431f69
  431f68:	rcl    DWORD PTR [ebx],cl
  431f6a:	add    DWORD PTR [edi],0x21
  431f6d:	add    bh,BYTE PTR [ebp+ecx*1-0x26]
  431f71:	pop    es
  431f72:	jno    0x431f79
  431f74:	fst    QWORD PTR [ebx]
  431f76:	loopne 0x431f7f
  431f78:	jno    0x431f7f
  431f7a:	cmc    
  431f7b:	adc    esp,edi
  431f7d:	pop    es
  431f7e:	xchg   ecx,eax
  431f7f:	add    eax,0xed1407
  431f84:	xchg   ecx,eax
  431f85:	add    eax,0x78912b3
  431f8a:	xchg   ecx,eax
  431f8b:	add    eax,0x7ab1416
  431f90:	jns    0x431f97
  431f92:	and    eax,0x8107ee14
  431f97:	add    eax,0x7f410c6
  431f9c:	xchg   ecx,eax
  431f9d:	add    eax,0x7fb1432
  431fa2:	xchg   ecx,eax
  431fa3:	add    eax,0x3012f6
  431fa8:	jno    0x431fab
  431faa:	cmp    edx,DWORD PTR [ecx+eiz*1]
  431fad:	add    BYTE PTR [ecx+0x5],bh
  431fb0:	inc    ebx
  431fb1:	adc    al,0xed
  431fb3:	add    BYTE PTR [ecx+0x5],bh
  431fb6:	push   eax
  431fb7:	adc    al,0x21
  431fb9:	add    BYTE PTR [ecx+0x5],bh
  431fbc:	pop    esi
  431fbd:	adc    al,0x5a
  431fbf:	pop    es
  431fc0:	jns    0x431fc7
  431fc2:	imul   edx,DWORD PTR [edx+ebx*2],0x7
  431fc6:	adc    DWORD PTR ds:0x8491475,eax
  431fcc:	dec    ecx
  431fcd:	add    eax,0x13147b
  431fd2:	leave  
  431fd3:	add    al,BYTE PTR [esp+edx*1+0x309084e]
  431fda:	jl     0x431fe9
  431fdc:	xor    BYTE PTR [eax],al
  431fde:	adc    DWORD PTR [ebx],eax
  431fe0:	mov    edx,DWORD PTR [edi+edi*4]
  431fe3:	add    BYTE PTR [ecx+0x53149500],ah
  431fe9:	or     cl,dh
  431feb:	add    al,0xd8
  431fed:	or     eax,0x23900bf
  431ff2:	popf   
  431ff3:	adc    al,0x5e
  431ff5:	or     cl,dh
  431ff7:	add    al,0xc2
  431ff9:	adc    DWORD PTR [ebp+0x8],esp
  431ffc:	jns    0x431ffe
  431ffe:	stos   DWORD PTR es:[edi],eax
  431fff:	adc    al,0x6b
  432001:	or     BYTE PTR [ecx+0x7014b800],bl
  432007:	or     BYTE PTR [ecx],bh
  432009:	add    al,bl
  43200b:	or     eax,0x4f10877
  432010:	ret    0x7c11
  432013:	or     BYTE PTR [ecx],bh
  432015:	add    edi,DWORD PTR [ebp+ecx*1+0x21]
  432019:	add    BYTE PTR [ecx],bh
  43201b:	add    eax,ecx
  43201d:	adc    al,0x35
  43201f:	add    eax,ecx
  432021:	add    DWORD PTR [ebp+ecx*1+0x21],edi
  432025:	add    cl,cl
  432027:	add    DWORD PTR [ebp+ecx*1+0x21],edi
  43202b:	add    cl,al
  43202d:	add    esi,ecx
  43202f:	adc    al,0x82
  432031:	or     BYTE PTR [ecx],cl
  432033:	add    ecx,DWORD PTR [ebx-0x36ff40ec]
  432039:	add    ecx,esp
  43203b:	adc    al,0x30
  43203d:	add    cl,cl
  43203f:	add    edi,ebp
  432041:	adc    al,0x30
  432043:	add    cl,cl
  432045:	add    esp,edi
  432047:	adc    al,0xed
  432049:	add    cl,cl
  43204b:	add    DWORD PTR [eax],edx
  43204d:	adc    eax,0x1c900ed
  432052:	and    edx,DWORD PTR ds:0x1c10888
  432058:	xor    edx,DWORD PTR ds:0x1c1088f
  43205e:	inc    ecx
  43205f:	adc    eax,0x1c105f9
  432064:	inc    edi
  432065:	adc    eax,0x1c10021
  43206a:	inc    ecx
  43206b:	adc    eax,0x590896
  432070:	push   ebx
  432071:	adc    eax,0x2b9089e
  432076:	test   BYTE PTR [esi+ecx*2],dl
  432079:	or     BYTE PTR [ecx-0x41ea99fe],bh
  43207f:	or     BYTE PTR [ecx+0x0],cl
  432082:	jbe    0x432099
  432084:	iret   
  432085:	or     BYTE PTR [ecx+0x3],dl
  432088:	jl     0x432097
  43208a:	and    DWORD PTR [eax],eax
  43208c:	push   ecx
  43208d:	add    edi,DWORD PTR [esi+0x15]
  432090:	icebp  
  432091:	or     BYTE PTR [ecx],bh
  432093:	add    al,bl
  432095:	or     eax,0x33901bd
  43209a:	adc    DWORD PTR ds:0x7907cc,0xffffff92
  4320a1:	adc    eax,0x910905
  4320a6:	mov    eax,ds:0x1090a15
  4320ab:	add    eax,0x210d7c
  4320b0:	add    DWORD PTR ds:0x92215ae,eax
  4320b6:	add    DWORD PTR ds:0xbf0dd8,eax
  4320bc:	rol    DWORD PTR [edx],0x7c
  4320bf:	or     eax,0x2c10030
  4320c4:	mov    ch,0x15
  4320c6:	dec    ebp
  4320c7:	or     ecx,eax
  4320c9:	add    al,ah
  4320cb:	adc    eax,0x2d90954
  4320d0:	jne    0x4320e3
  4320d2:	mov    edi,0xcd04f100
  4320d7:	adc    eax,0x2d9065c
  4320dc:	(bad)  
  4320dd:	adc    eax,0x39095b
  4320e2:	fmul   DWORD PTR ds:0x39095f
  4320e8:	loope  0x4320ff
  4320ea:	fs or  ecx,esi
  4320ed:	add    ah,BYTE PTR [ebx-0xeff40ef]
  4320f3:	add    al,0xea
  4320f5:	adc    eax,0x4f1065c
  4320fa:	(bad)  
  4320fb:	adc    eax,0x4f100b5
  432100:	repz adc eax,0xc109a6
  432106:	call   DWORD PTR ds:0xa109ab
  43210c:	or     eax,0xc909b016
  432111:	add    al,0x7c
  432113:	or     eax,0x4b10021
  432118:	adc    DWORD PTR [esi],edx
  43211a:	mov    ch,0x9
  43211c:	jmp    0xd7509d23
  432121:	or     ecx,ebp
  432123:	add    bl,BYTE PTR ds:0xe909e216
  432129:	add    dl,dh
  43212b:	adc    eax,0x4c1095b
  432130:	jl     0x43213f
  432132:	and    DWORD PTR [eax],eax
  432134:	rol    DWORD PTR [edi+eiz*1],0x16
  432138:	out    0x9,eax
  43213a:	cdq    
  43213b:	add    al,0x7c
  43213d:	or     eax,0x4c109f1
  432142:	aaa    
  432143:	push   ss
  432144:	out    0x9,eax
  432146:	jmp    0xfe59684d
  43214b:	or     DWORD PTR [ecx+0x6164c04],ebx
  432151:	or     al,BYTE PTR [ecx]
  432153:	add    edx,DWORD PTR [edx+0x16]
  432156:	and    DWORD PTR [eax],eax
  432158:	fld    DWORD PTR [edx]
  43215a:	jl     0x432169
  43215c:	xor    BYTE PTR [eax],al
  43215e:	fld    DWORD PTR [edx]
  432160:	pop    eax
  432161:	push   ss
  432162:	and    DWORD PTR [eax],eax
  432164:	sub    DWORD PTR [ebx],eax
  432166:	pop    edi
  432167:	push   ss
  432168:	sbb    DWORD PTR [edx],ecx
  43216a:	sub    DWORD PTR [ebx],eax
  43216c:	ja     0x432184
  43216e:	and    BYTE PTR [edx],cl
  432170:	xor    DWORD PTR [ebx],eax
  432172:	fmul   DWORD PTR ds:0x4f100bf
  432178:	ret    0x3311
  43217b:	or     ah,BYTE PTR [ecx+0x3a168a05]
  432181:	or     cl,BYTE PTR [ecx+0x5]
  432184:	retf   0x1310
  432187:	add    cl,bh
  432189:	add    al,0x8f
  43218b:	push   ss
  43218c:	imul   ecx,DWORD PTR [edx],0x169804f9
  432192:	cmp    BYTE PTR [ecx],al
  432194:	dec    ecx
  432195:	add    esp,DWORD PTR [ecx+0x210a7916]
  43219b:	add    eax,0xa7f16b1
  4321a0:	inc    ecx
  4321a1:	add    al,0x7c
  4321a3:	or     eax,0x1810a85
  4321a8:	mov    esi,0x790a9316
  4321ad:	add    DWORD PTR [ebp+ecx*1+0x21],edi
  4321b1:	add    BYTE PTR [ecx],ch
  4321b3:	add    bl,cl
  4321b5:	push   ss
  4321b6:	stc    
  4321b7:	add    eax,0x16e40179
  4321bc:	and    DWORD PTR [eax],eax
  4321be:	push   ecx
  4321bf:	add    cl,ch
  4321c1:	push   ss
  4321c2:	and    eax,0x7c001100
  4321c7:	or     eax,0x290636
  4321cc:	add    eax,0x890aa317
  4321d1:	add    DWORD PTR [edx],edx
  4321d3:	pop    ss
  4321d4:	mov    dl,0xa
  4321d6:	stc    
  4321d7:	add    al,0xae
  4321d9:	adc    edi,DWORD PTR [eax+0x2300d90a]
  4321df:	pop    ss
  4321e0:	ror    BYTE PTR [edx],0xd9
  4321e3:	add    BYTE PTR [ebx],ch
  4321e5:	pop    ss
  4321e6:	(bad)  
  4321e7:	or     bl,cl
  4321e9:	add    BYTE PTR [ebx],dh
  4321eb:	pop    ss
  4321ec:	into   
  4321ed:	or     bl,cl
  4321ef:	add    cl,ah
  4321f1:	adc    eax,0xe90ad5
  4321f6:	cmp    al,0x17
  4321f8:	fmul   QWORD PTR [edx]
  4321fa:	icebp  
  4321fb:	add    al,0x46
  4321fd:	pop    ss
  4321fe:	in     eax,0x0
  432200:	stc    
  432201:	add    al,0x4c
  432203:	pop    ss
  432204:	imul   ecx,DWORD PTR [edx],0x175804f1
  43220a:	icebp  
  43220b:	or     bh,cl
  43220d:	add    bh,BYTE PTR [ebp+ecx*1+0x4b]
  432211:	add    dh,cl
  432213:	add    al,0xb0
  432215:	adc    DWORD PTR [ecx],eax
  432217:	or     esi,ecx
  432219:	add    al,0x5f
  43221b:	pop    ss
  43221c:	push   es
  43221d:	or     ecx,DWORD PTR [ecx+0xb176902]
  432223:	or     ebx,ecx
  432225:	add    BYTE PTR [eax-0x3ef4ecea],bl
  43222b:	add    BYTE PTR [edi+0x17],ch
  43222e:	sbb    DWORD PTR [ebx],ecx
  432230:	add    DWORD PTR [ebx],eax
  432232:	ja     0x43224b
  432234:	mov    ch,0x0
  432236:	test   eax,0x210d7c04
  43223b:	add    BYTE PTR [ecx],al
  43223d:	add    eax,DWORD PTR [edi+0x16]
  432240:	dec    BYTE PTR [ecx]
  432242:	rol    DWORD PTR [eax+eax*4],1
  432245:	pop    ss
  432246:	push   esi
  432247:	or     edx,ecx
  432249:	add    al,0x87
  43224b:	pop    ss
  43224c:	push   esi
  43224d:	or     eax,DWORD PTR [ecx]
  43224f:	add    edx,esi
  432251:	adc    eax,0x2f9095b
  432256:	stos   BYTE PTR es:[edi],al
  432257:	adc    BYTE PTR [ebx+0x2],cl
  43225a:	add    DWORD PTR [ebx],eax
  43225c:	(bad)  
  43225d:	pop    ss
  43225e:	loop   0x432269
  432260:	rol    DWORD PTR [edi+esi*1],1
  432263:	push   ss
  432264:	pop    esp
  432265:	or     edi,DWORD PTR [ecx-0x4ae863fc]
  43226b:	add    BYTE PTR [ecx-0x4ae850fc],bh
  432271:	add    BYTE PTR [ecx],al
  432273:	add    eax,ebx
  432275:	pop    ss
  432276:	pop    ebx
  432277:	or     DWORD PTR [ecx+0x6217d004],edi
  43227d:	or     eax,DWORD PTR [ecx]
  43227f:	add    ecx,DWORD PTR [esi+edx*1+0x6]
  432283:	or     bh,BYTE PTR [ecx+0x6d17df04]
  432289:	or     esi,DWORD PTR [ecx+0x760d7c02]
  43228f:	or     edi,ecx
  432291:	add    dh,bl
  432293:	pop    ss
  432294:	or     BYTE PTR [ebx],0x54
  432297:	add    BYTE PTR [ebp+ecx*1+0x21],bh
  43229b:	add    cl,bh
  43229d:	add    bh,BYTE PTR [ebp+ecx*1-0x63]
  4322a1:	or     esp,DWORD PTR [ecx-0x5bf283fe]
  4322a7:	or     esp,DWORD PTR [ecx-0x4ae804fe]
  4322ad:	add    BYTE PTR [eax+eax*1-0x6b],dl
  4322b1:	adc    BYTE PTR [ebx+0x503590b],ch
  4322b7:	sbb    BYTE PTR [ebx+0x1004190b],dh
  4322bd:	sbb    BYTE PTR [edx+0x2103190b],bh
  4322c3:	sbb    ah,ch
  4322c5:	or     ebx,DWORD PTR [ecx]
  4322c7:	add    esi,DWORD PTR [ebx]
  4322c9:	sbb    bl,dh
  4322cb:	or     eax,DWORD PTR [ecx]
  4322cd:	add    al,0x47
  4322cf:	sbb    dl,bh
  4322d1:	or     esp,DWORD PTR [ecx]
  4322d3:	add    eax,0xc06185b
  4322d8:	add    DWORD PTR [eiz*2-0xef3efe8],eax
  4322df:	add    esi,DWORD PTR [ebx+0x18]
  4322e2:	mov    ecx,0xa3052100
  4322e7:	adc    DWORD PTR [edi+0x7503f100],edi
  4322ed:	adc    DWORD PTR [edi-0x3dfb0f00],edi
  4322f3:	adc    DWORD PTR [esi],edx
  4322f5:	or     al,0x11
  4322f7:	add    al,0x85
  4322f9:	sbb    BYTE PTR [ecx+0x7c03b100],bh
  4322ff:	or     eax,0x540c1e
  432304:	xchg   esp,eax
  432305:	sbb    BYTE PTR [esi],ch
  432307:	or     al,0xb1
  432309:	add    esp,DWORD PTR [eax-0x4ef3c8e8]
  43230f:	add    esi,DWORD PTR [ecx-0x1ef3c2e8]
  432315:	add    edi,DWORD PTR [eax-0x56f8f9ec]
  43231b:	add    eax,eax
  43231d:	sbb    BYTE PTR [edi+0xc],cl
  432320:	rol    DWORD PTR [ebx],1
  432322:	enter  0x6718,0xc
  432326:	or     DWORD PTR [ebx*8+0x5c0c6d18],eax
  43232d:	add    al,dh
  43232f:	sbb    BYTE PTR [eax+0xc],bh
  432332:	fs add dh,bh
  432335:	sbb    bh,al
  432337:	add    cl,ch
  432339:	add    ecx,DWORD PTR [edx]
  43233b:	sbb    DWORD PTR [ecx+0x1803e900],edi
  432341:	sbb    ecx,edi
  432343:	add    eax,0x192503d1
  432348:	xchg   esp,eax
  432349:	or     al,0x39
  43234b:	add    DWORD PTR [ecx],esi
  43234d:	sbb    ecx,edi
  43234f:	add    eax,0x193a03d1
  432354:	or     BYTE PTR [ebx],0xa9
  432357:	add    eax,DWORD PTR [edi+0x19]
  43235a:	push   esi
  43235b:	or     ebp,DWORD PTR [ecx-0x4de6a6fd]
  432361:	or     al,0x41
  432363:	add    edi,DWORD PTR [ebp+ecx*1+0x30]
  432367:	add    BYTE PTR [ecx+0x56196503],ch
  43236d:	or     eax,DWORD PTR [ecx]
  43236f:	add    al,0x73
  432371:	sbb    edi,eax
  432373:	or     al,0x1
  432375:	add    al,0x81
  432377:	sbb    ecx,edi
  432379:	add    eax,0x198e0521
  43237e:	stc    
  43237f:	add    eax,0x199e0521
  432384:	mov    ecx,0xac042100
  432389:	sbb    DWORD PTR [ecx-0x41fc1f00],edi
  43238f:	sbb    ebp,ebx
  432391:	or     al,0xb9
  432393:	add    eax,edi
  432395:	sbb    edx,esp
  432397:	or     al,0xf1
  432399:	add    edx,ecx
  43239b:	sbb    esi,esp
  43239d:	or     al,0x1
  43239f:	add    al,0xdc
  4323a1:	sbb    esp,ebp
  4323a3:	or     al,0x21
  4323a5:	add    eax,0xcec19dc
  4323aa:	rol    DWORD PTR [ebx],0xf0
  4323ad:	sbb    DWORD PTR ds:0xf403b90d,edx
  4323b3:	sbb    DWORD PTR [edx],ebx
  4323b5:	or     eax,0x1a040419
  4323ba:	and    BYTE PTR ds:0x195903a9,cl
  4323c0:	add    DWORD PTR [ebx],ecx
  4323c2:	mov    ecx,0xb51a1203
  4323c7:	add    BYTE PTR [ecx],bl
  4323c9:	add    al,0x1b
  4323cb:	sbb    ah,BYTE PTR ds:0x5903a90d
  4323d1:	sbb    DWORD PTR [ebx],ebp
  4323d3:	or     eax,0x1a2c0419
  4323d8:	xor    DWORD PTR ds:0x1a3a0401,ecx
  4323de:	inc    eax
  4323df:	or     eax,0x1a4b0521
  4323e4:	inc    esi
  4323e5:	or     eax,0x195903a9
  4323ea:	dec    esp
  4323eb:	or     eax,0x1a5a0419
  4323f0:	push   esi
  4323f1:	or     eax,0x1a6703e1
  4323f6:	gs or  eax,0x195903a9
  4323fc:	imul   ecx,DWORD PTR ds:0x1a770419,0x72
  432403:	or     eax,0x1a830419
  432408:	or     DWORD PTR ds:0x1a9103f1,0xd10d90
  432412:	jl     0x432421
  432414:	xor    BYTE PTR [eax],al
  432416:	or     BYTE PTR [eax],al
  432418:	js     0x43241a
  43241a:	push   ecx
  43241b:	add    DWORD PTR [eax],ecx
  43241d:	add    BYTE PTR [eax+eax*1+0x56],bh
  432421:	add    DWORD PTR [ecx],ebp
  432423:	add    BYTE PTR [ebx+0x0],dl
  432426:	inc    eax
  432427:	add    ebp,DWORD PTR [esi]
  432429:	add    BYTE PTR [ebx+0x2e055f00],bl
  43242f:	add    BYTE PTR [ebx+0x2e052e00],ah
  432435:	add    BYTE PTR [ebx+0x2e057700],ch
  43243b:	add    BYTE PTR [ebx+0x2e046b00],al
  432441:	add    BYTE PTR [ebx+0x2e052e00],cl
  432447:	add    BYTE PTR [ebx+0x2e054000],dl
  43244d:	add    BYTE PTR [ebx+0x0],dh
  432450:	imul   eax,DWORD PTR [esi+ebp*1],0x0
  432454:	rol    DWORD PTR [eax],cl
  432456:	imul   eax,DWORD PTR [esi+ebp*1],0x0
  43245a:	cmp    al,BYTE PTR [eax]
  43245c:	imul   eax,DWORD PTR [esi+ebp*1],0x0
  432460:	retf   
  432461:	add    BYTE PTR [eax-0x4cffd1fb],ah
  432467:	add    BYTE PTR [edi-0x44ffd1fb],al
  43246d:	add    BYTE PTR [ebx+0x4],ch
  432470:	cs add bl,al
  432473:	add    BYTE PTR [eax+0x23004005],dl
  432479:	add    BYTE PTR [ecx+0x1],dl
  43247c:	inc    ebx
  43247d:	add    BYTE PTR [ebx+0x0],cl
  432480:	sbb    eax,0x33004303
  432485:	add    BYTE PTR [ebx+eax*1],dl
  432488:	dec    ecx
  432489:	add    BYTE PTR [ebx+0x0],dl
  43248c:	push   esi
  43248d:	add    esp,DWORD PTR [eax+0x0]
  432490:	sub    eax,DWORD PTR [eax]
  432492:	push   ecx
  432493:	add    DWORD PTR [ecx+0x0],ebp
  432496:	push   ebx
  432497:	add    BYTE PTR [edi+0x3],ch
  43249a:	add    BYTE PTR [eax],0x23
  43249d:	add    BYTE PTR [ecx+0x1],dl
  4324a0:	add    DWORD PTR [eax],0x4b
  4324a3:	add    BYTE PTR ds:0x33008303,bl
  4324a9:	add    BYTE PTR [ebx+eax*1],dl
  4324ac:	mov    DWORD PTR [eax],eax
  4324ae:	push   ebx
  4324af:	add    BYTE PTR [ecx+0x4300a003],al
  4324b5:	add    BYTE PTR [ecx+0x1],dl
  4324b8:	mov    al,ds:0x51003b00
  4324bd:	add    DWORD PTR [eax+0x4003300],esp
  4324c3:	add    ebp,DWORD PTR [ecx-0x6bffad00]
  4324c9:	add    eax,eax
  4324cb:	add    BYTE PTR [ebx],ch
  4324cd:	add    BYTE PTR [ecx+0x1],dl
  4324d0:	ret    
  4324d1:	add    BYTE PTR [ebx+0x0],bl
  4324d4:	push   ecx
  4324d5:	add    ebx,eax
  4324d7:	add    BYTE PTR [ebx+0x0],ah
  4324da:	push   ecx
  4324db:	add    ebx,eax
  4324dd:	add    BYTE PTR [ebx+0x0],cl
  4324e0:	sbb    eax,0x3300c903
  4324e5:	add    BYTE PTR [ebx+eax*1],al
  4324e8:	jecxz  0x4324ea
  4324ea:	imul   eax,DWORD PTR [eax],0xffffffa8
  4324ed:	add    esp,ebx
  4324ef:	add    BYTE PTR [ebx],dh
  4324f1:	add    BYTE PTR [ebx+eax*1],dl
  4324f4:	jmp    0x44357f9
  4324f9:	add    eax,DWORD PTR [eax]
  4324fb:	add    DWORD PTR [ebx+0x0],eax
  4324fe:	push   ecx
  4324ff:	add    DWORD PTR [eax],eax
  432501:	add    DWORD PTR [ebx],esi
  432503:	add    BYTE PTR [ebx+eax*1],dl
  432506:	add    eax,DWORD PTR [ecx]
  432508:	xor    eax,DWORD PTR [eax]
  43250a:	adc    al,0x3
  43250c:	add    eax,DWORD PTR [ecx]
  43250e:	imul   eax,DWORD PTR [eax],0x9
  432511:	add    al,0x21
  432513:	add    DWORD PTR [ebx],ecx
  432515:	add    BYTE PTR [ecx+0x1],dl
  432518:	and    eax,DWORD PTR [ecx]
  43251a:	jae    0x43251c
  43251c:	imul   eax,DWORD PTR [ebx+eiz*1],0x1
  432520:	xor    eax,DWORD PTR [eax]
  432522:	adc    al,0x3
  432524:	sub    DWORD PTR [ecx],eax
  432526:	push   ebx
  432527:	add    BYTE PTR ds:0x13014105,bl
  43252d:	add    BYTE PTR [ecx+0x1],dl
  432530:	inc    ecx
  432531:	add    DWORD PTR [ebx],ecx
  432533:	add    BYTE PTR [ecx+0x1],dl
  432536:	inc    ebx
  432537:	add    DWORD PTR [ebx+0x0],edi
  43253a:	push   ecx
  43253b:	add    DWORD PTR [ecx+0x5a001b01],esp
  432541:	add    ah,BYTE PTR [ebx+0x51002301]
  432547:	add    DWORD PTR [ebx+0x51005b01],esp
  43254d:	add    DWORD PTR [ebx+0x51001301],esp
  432553:	add    DWORD PTR [ebx+0x51006301],esp
  432559:	add    DWORD PTR [ebx+0x7d004b01],esp
  43255f:	add    al,0xc1
  432561:	add    DWORD PTR [ebx],ebx
  432563:	add    BYTE PTR [edi+0x2],ah
  432566:	ret    
  432567:	add    DWORD PTR [ebx],edx
  432569:	add    BYTE PTR [ecx+0x1],dl
  43256c:	ret    
  43256d:	add    DWORD PTR [ebx],esi
  43256f:	add    BYTE PTR [ebx+eax*1],al
  432572:	ret    
  432573:	add    DWORD PTR [ebx+0x0],ecx
  432576:	ret    
  432577:	add    al,0xe0
  432579:	add    DWORD PTR [ebx],esp
  43257b:	add    BYTE PTR [ecx+0x1],dl
  43257e:	loope  0x432581
  432580:	sbb    eax,DWORD PTR [eax]
  432582:	je     0x432586
  432584:	add    BYTE PTR [edx],al
  432586:	inc    ebx
  432587:	add    BYTE PTR [ecx+0x1],dl
  43258a:	add    DWORD PTR [edx],eax
  43258c:	sbb    eax,DWORD PTR [eax]
  43258e:	test   DWORD PTR [edx],eax
  432590:	add    eax,DWORD PTR [edx]
  432592:	arpl   WORD PTR [eax],ax
  432594:	push   ecx
  432595:	add    DWORD PTR [ebx],eax
  432597:	add    ah,BYTE PTR [ebx]
  432599:	add    BYTE PTR [ecx+0x1],dl
  43259c:	add    eax,DWORD PTR [edx]
  43259e:	pop    ebx
  43259f:	add    BYTE PTR [ecx+0x1],dl
  4325a2:	add    eax,DWORD PTR [edx]
  4325a4:	adc    eax,DWORD PTR [eax]
  4325a6:	push   ecx
  4325a7:	add    DWORD PTR [eax],esp
  4325a9:	add    al,BYTE PTR [ebx+0x0]
  4325ac:	push   ecx
  4325ad:	add    DWORD PTR [ecx],esp
  4325af:	add    bl,BYTE PTR [ebx]
  4325b1:	add    BYTE PTR [ebx+0x43024002],dl
  4325b7:	add    BYTE PTR [ecx+0x1],dl
  4325ba:	inc    ecx
  4325bb:	add    bl,BYTE PTR [ebx]
  4325bd:	add    BYTE PTR [edi+0x43026002],bl
  4325c3:	add    BYTE PTR [ecx+0x1],dl
  4325c6:	popa   
  4325c7:	add    bl,BYTE PTR [ebx]
  4325c9:	add    BYTE PTR [ebp+0x43028002],ch
  4325cf:	add    BYTE PTR [ecx+0x1],dl
  4325d2:	add    DWORD PTR [edx],0x2be001b
  4325d8:	mov    al,ds:0x51004302
  4325dd:	add    DWORD PTR [eax+0x14003302],esp
  4325e3:	add    esp,DWORD PTR [ecx-0x33ffe4fe]
  4325e9:	add    al,al
  4325eb:	add    ah,BYTE PTR [ebx]
  4325ed:	add    BYTE PTR [ecx+0x1],dl
  4325f0:	rol    DWORD PTR [edx],0x1b
  4325f3:	add    dl,bl
  4325f5:	add    ah,al
  4325f7:	add    ah,BYTE PTR [ebx]
  4325f9:	add    BYTE PTR [ecx+0x1],dl
  4325fc:	loope  0x432600
  4325fe:	sbb    eax,DWORD PTR [eax]
  432600:	call   0x43462607
  432605:	add    BYTE PTR [ecx+0x1],dl
  432608:	add    DWORD PTR [ebx],eax
  43260a:	sbb    eax,DWORD PTR [eax]
  43260c:	test   BYTE PTR [edx],0x20
  43260f:	add    eax,DWORD PTR [ebx+0x0]
  432612:	push   ecx
  432613:	add    DWORD PTR [eax+0x3],eax
  432616:	xor    eax,DWORD PTR [eax]
  432618:	adc    al,0x3
  43261a:	pusha  
  43261b:	add    esi,DWORD PTR [ebx]
  43261d:	add    BYTE PTR [ebx+eax*1],dl
  432620:	add    BYTE PTR [ebx],0x33
  432623:	add    BYTE PTR [ebx+eax*1],dl
  432626:	mov    al,ds:0x14003303
  43262b:	add    eax,eax
  43262d:	add    eax,DWORD PTR [ebx+0x0]
  432630:	push   ecx
  432631:	add    eax,eax
  432633:	add    esi,DWORD PTR [ebx]
  432635:	add    BYTE PTR [ebx+eax*1],dl
  432638:	loopne 0x43263d
  43263a:	xor    eax,DWORD PTR [eax]
  43263c:	adc    al,0x3
  43263e:	loopne 0x432643
  432640:	inc    ebx
  432641:	add    BYTE PTR [ecx+0x1],dl
  432644:	add    BYTE PTR [ebx+esi*1],al
  432647:	add    BYTE PTR [ebx+eax*1],dl
  43264a:	add    BYTE PTR [ebx+eax*2],al
  43264d:	add    BYTE PTR [ecx+0x1],dl
  432650:	and    BYTE PTR [ebx+esi*1],al
  432653:	add    BYTE PTR [ebx+eax*1],dl
  432656:	and    BYTE PTR [ebx+eax*2],al
  432659:	add    BYTE PTR [ecx+0x1],dl
  43265c:	inc    eax
  43265d:	add    al,0x33
  43265f:	add    BYTE PTR [ebx+eax*1],dl
  432662:	inc    eax
  432663:	add    al,0x43
  432665:	add    BYTE PTR [ecx+0x1],dl
  432668:	pusha  
  432669:	add    al,0x43
  43266b:	add    BYTE PTR [ecx+0x1],dl
  43266e:	add    BYTE PTR [ebx+eax*2],0x0
  432672:	push   ecx
  432673:	add    DWORD PTR [eax+0x14003304],esp
  432679:	add    esp,DWORD PTR [eax+0x51004304]
  43267f:	add    eax,eax
  432681:	add    al,0x43
  432683:	add    BYTE PTR [ecx+0x1],dl
  432686:	loopne 0x43268c
  432688:	and    eax,DWORD PTR [eax]
  43268a:	push   ecx
  43268b:	add    DWORD PTR [eax],eax
  43268d:	add    eax,0x1510023
  432692:	and    BYTE PTR ds:0x1510023,al
  432698:	inc    eax
  432699:	add    eax,0x1510023
  43269e:	pusha  
  43269f:	add    eax,0x151002b
  4326a4:	add    BYTE PTR ds:0x1510023,0xa0
  4326ab:	add    eax,0x1510023
  4326b0:	rol    BYTE PTR ds:0x1510023,0xe0
  4326b7:	add    eax,0x1510023
  4326bc:	add    BYTE PTR [esi],al
  4326be:	and    eax,DWORD PTR [eax]
  4326c0:	push   ecx
  4326c1:	add    DWORD PTR [eax],esp
  4326c3:	push   es
  4326c4:	and    eax,DWORD PTR [eax]
  4326c6:	push   ecx
  4326c7:	add    DWORD PTR [eax+0x6],eax
  4326ca:	and    eax,DWORD PTR [eax]
  4326cc:	push   ecx
  4326cd:	add    DWORD PTR [eax+0x6],esp
  4326d0:	and    eax,DWORD PTR [eax]
  4326d2:	push   ecx
  4326d3:	add    DWORD PTR [eax+0x51002306],eax
  4326d9:	add    DWORD PTR [eax+0x51002306],esp
  4326df:	add    eax,eax
  4326e1:	push   es
  4326e2:	and    eax,DWORD PTR [eax]
  4326e4:	push   ecx
  4326e5:	add    eax,esp
  4326e7:	push   es
  4326e8:	and    eax,DWORD PTR [eax]
  4326ea:	push   ecx
  4326eb:	add    DWORD PTR [eax],eax
  4326ed:	pop    es
  4326ee:	and    eax,DWORD PTR [eax]
  4326f0:	push   ecx
  4326f1:	add    DWORD PTR [eax],esp
  4326f3:	pop    es
  4326f4:	and    eax,DWORD PTR [eax]
  4326f6:	push   ecx
  4326f7:	add    DWORD PTR [eax+0x7],eax
  4326fa:	and    eax,DWORD PTR [eax]
  4326fc:	push   ecx
  4326fd:	add    DWORD PTR [eax+0x7],esp
  432700:	and    eax,DWORD PTR [eax]
  432702:	push   ecx
  432703:	add    DWORD PTR [eax+0x51002307],eax
  432709:	add    DWORD PTR [eax+0x51002307],esp
  43270f:	add    eax,eax
  432711:	pop    es
  432712:	and    eax,DWORD PTR [eax]
  432714:	push   ecx
  432715:	add    eax,esp
  432717:	pop    es
  432718:	and    eax,DWORD PTR [eax]
  43271a:	push   ecx
  43271b:	add    DWORD PTR [eax],eax
  43271d:	or     BYTE PTR [ebx],ah
  43271f:	add    BYTE PTR [ecx+0x1],dl
  432722:	and    BYTE PTR [eax],cl
  432724:	and    eax,DWORD PTR [eax]
  432726:	push   ecx
  432727:	add    DWORD PTR [eax+0x8],eax
  43272a:	and    eax,DWORD PTR [eax]
  43272c:	push   ecx
  43272d:	add    DWORD PTR [eax+0x8],esp
  432730:	and    eax,DWORD PTR [eax]
  432732:	push   ecx
  432733:	add    DWORD PTR [eax+0xa],esp
  432736:	and    eax,DWORD PTR [eax]
  432738:	push   ecx
  432739:	add    DWORD PTR [eax+0xb],esp
  43273c:	and    eax,DWORD PTR [eax]
  43273e:	push   ecx
  43273f:	add    DWORD PTR [eax+0x5100230b],eax
  432745:	add    DWORD PTR [eax+0x400330b],eax
  43274b:	add    ebx,edi
  43274d:	add    eax,0x650062a
  432752:	jo     0x43275a
  432754:	xchg   BYTE PTR [esi],al
  432756:	mov    esi,0xc806c306
  43275b:	push   es
  43275c:	int    0x6
  43275e:	rol    BYTE PTR [esi],cl
  432760:	xlat   BYTE PTR ds:[ebx]
  432761:	push   es
  432762:	loope  0x43276a
  432764:	in     eax,0x6
  432766:	sub    al,0x7
  432768:	xor    DWORD PTR [edi],eax
  43276a:	xor    eax,0x3f073b07
  43276f:	pop    es
  432770:	inc    ebp
  432771:	pop    es
  432772:	popa   
  432773:	pop    es
  432774:	add    cl,BYTE PTR [eax]
  432776:	or     BYTE PTR [eax],cl
  432778:	invd   
  43277a:	adc    eax,0x21081b08
  43277f:	or     BYTE PTR [ebp-0x3af74ef8],ah
  432785:	or     dl,ah
  432787:	or     bh,dh
  432789:	or     BYTE PTR [ecx],dl
  43278b:	or     DWORD PTR [ecx],ebp
  43278d:	or     DWORD PTR [ecx+0x9],ebp
  432790:	mov    cs,WORD PTR [ecx]
  432792:	mov    esp,0x260a0e09
  432797:	or     al,BYTE PTR [ecx+0xa]
  43279a:	dec    edi
  43279b:	or     bl,BYTE PTR [ebx+0xa]
  43279e:	outs   dx,DWORD PTR ds:[esi]
  43279f:	or     cl,BYTE PTR [ebp-0x56f563f6]
  4327a5:	or     ah,bh
  4327a7:	or     ch,ah
  4327a9:	or     dh,dh
  4327ab:	or     bl,BYTE PTR [edi]
  4327ad:	or     esp,DWORD PTR ds:0x850b2a0b
  4327b3:	or     eax,eax
  4327b5:	or     eax,DWORD PTR [esi+0xc]
  4327b8:	push   esi
  4327b9:	or     al,0x9c
  4327bb:	or     al,0xb9
  4327bd:	or     al,0xce
  4327bf:	or     al,0xf3
  4327c1:	or     al,0x6
  4327c3:	add    BYTE PTR [ecx],al
  4327c5:	add    BYTE PTR ds:0xe000600,cl
  4327cb:	add    BYTE PTR [eax],cl
  4327cd:	add    BYTE PTR [eax],dl
  4327cf:	add    BYTE PTR [ecx],cl
  4327d1:	add    BYTE PTR [eax],al
  4327d3:	add    BYTE PTR [ecx],ch
  4327d5:	or     eax,0x33b
  4327da:	inc    ebp
  4327db:	or     eax,0x351
  4327e0:	dec    ebp
  4327e1:	or     eax,0x36a
  4327e6:	imul   ecx,DWORD PTR ds:0x37c,0x6f
  4327ed:	or     eax,0x38f
  4327f2:	call   0xf300:0x47109
  4327f9:	emms   
  4327fb:	add    al,0x0
  4327fd:	add    bl,bh
  4327ff:	movsx  eax,BYTE PTR [eax+eax*1]
  432803:	add    BYTE PTR [ebx],al
  432805:	adc    BYTE PTR [esi+0x10000204],bh
  43280b:	add    BYTE PTR [ebx],al
  43280d:	add    BYTE PTR [edx],al
  43280f:	add    BYTE PTR [ecx],dl
  432811:	add    BYTE PTR ds:0x12000200,al
  432817:	add    BYTE PTR [edi],al
  432819:	add    BYTE PTR [edx],al
  43281b:	add    BYTE PTR [ebx],dl
  43281d:	add    BYTE PTR [ecx],cl
  43281f:	add    BYTE PTR [edx],al
  432821:	add    BYTE PTR [eax+eax*1],dl
  432824:	or     eax,DWORD PTR [eax]
  432826:	add    al,BYTE PTR [eax]
  432828:	push   edi
  432829:	add    BYTE PTR ds:0x59000100,cl
  43282f:	add    BYTE PTR [edi],cl
  432831:	add    BYTE PTR [edx],al
  432833:	add    BYTE PTR [eax+0x0],bl
  432836:	sldt   WORD PTR [edx]
  432839:	add    BYTE PTR [ebp+0x0],bl
  43283c:	adc    DWORD PTR [eax],eax
  43283e:	add    al,BYTE PTR [eax]
  432840:	add    BYTE PTR gs:[ebx],dl
  432843:	add    dl,cl
  432845:	add    eax,0x6a2069b
  43284a:	test   eax,0xb706b006
  43284f:	push   es
  432850:	repz push es
  432852:	dec    ebx
  432853:	pop    es
  432854:	push   edx
  432855:	pop    es
  432856:	xchg   ebp,eax
  432857:	or     eax,DWORD PTR [edx+0x40c8b0c]
  43285d:	add    BYTE PTR [eax],0x0
  432860:	add    eax,DWORD PTR [eax]
  432862:	pop    ss
  432863:	add    BYTE PTR [eax+eax*1],cl
  432866:	or     al,0x0
  432868:	add    BYTE PTR [eax],al
  43286a:	add    BYTE PTR [eax],al
  43286c:	add    BYTE PTR [eax],al
  43286e:	add    DWORD PTR [eax],eax
  432870:	add    BYTE PTR [eax],al
  432872:	add    al,BYTE PTR [eax]
	...
  43287c:	add    BYTE PTR [eax],al
  43287e:	add    DWORD PTR [eax],eax
  432880:	pop    ds
  432881:	add    BYTE PTR [eax],al
  432883:	add    BYTE PTR [eax],al
  432885:	add    BYTE PTR [eax],cl
	...
  43288f:	add    BYTE PTR [eax],al
  432891:	add    BYTE PTR [edx],cl
  432893:	add    BYTE PTR [eax],ch
  432895:	add    BYTE PTR [eax],al
  432897:	add    BYTE PTR [eax],al
  432899:	add    BYTE PTR [edx],al
	...
  4328a3:	add    BYTE PTR [eax],al
  4328a5:	add    BYTE PTR [ecx],al
  4328a7:	add    BYTE PTR [esi],bh
  4328a9:	add    BYTE PTR [eax],al
  4328ab:	add    BYTE PTR [eax],al
  4328ad:	add    BYTE PTR [edx],al
	...
  4328b7:	add    BYTE PTR [eax],al
  4328b9:	add    BYTE PTR [ecx],al
  4328bb:	add    BYTE PTR [ebx+0x0],dl
  4328be:	add    BYTE PTR [eax],al
  4328c0:	add    BYTE PTR [eax],al
  4328c2:	add    al,BYTE PTR [eax]
	...
  4328cc:	add    BYTE PTR [eax],al
  4328ce:	or     al,BYTE PTR [eax]
  4328d0:	pop    edx
	...
  4328d9:	add    BYTE PTR [ecx],al
  4328db:	add    BYTE PTR [eax],al
  4328dd:	add    BYTE PTR [ecx+0x0],ch
  4328e0:	add    BYTE PTR [eax],al
  4328e2:	pop    es
  4328e3:	add    BYTE PTR [esi],al
  4328e5:	add    BYTE PTR [eax],cl
  4328e7:	add    BYTE PTR [esi],al
  4328e9:	add    BYTE PTR [ecx],cl
  4328eb:	add    BYTE PTR [esi],al
  4328ed:	add    BYTE PTR [ebx],cl
  4328ef:	add    BYTE PTR [edx],cl
  4328f1:	add    BYTE PTR [eax+eax*1],cl
  4328f4:	or     al,BYTE PTR [eax]
  4328f6:	adc    al,0x0
  4328f8:	adc    eax,DWORD PTR [eax]
  4328fa:	add    BYTE PTR [eax],al
  4328fc:	adc    BYTE PTR [eax],al
  4328fe:	adc    al,BYTE PTR [eax]
  432900:	or     eax,0x1000000d
  432905:	add    BYTE PTR [ecx],dh
  432907:	add    BYTE PTR ds:0xd,cl
  43290d:	add    BYTE PTR [ebx],dh
  43290f:	add    BYTE PTR ds:0x1000000d,cl
  432915:	add    BYTE PTR [edi+0x0],al
  432918:	or     eax,0xd
  43291d:	add    BYTE PTR [ecx+0x0],cl
  432920:	or     eax,0xdc00300d
  432925:	push   es
  432926:	xor    al,BYTE PTR [eax]
  432928:	fadd   QWORD PTR [esi]
  43292a:	lods   eax,DWORD PTR ds:[esi]
  43292b:	add    BYTE PTR [edi+eax*1],cl
  43292e:	lods   eax,DWORD PTR ds:[esi]
  43292f:	add    BYTE PTR [ebp+0x7],dl
  432932:	add    al,BYTE PTR [eax]
  432934:	leave  
  432935:	add    al,BYTE PTR [ebx]
  432937:	add    cl,cl
  432939:	add    al,BYTE PTR [eax]
  43293b:	add    BYTE PTR [eax],al
  43293d:	push   esp
  43293e:	popa   
  43293f:	jae    0x4329ac
  432941:	and    BYTE PTR [ebp+0x61],cl
  432944:	outs   dx,BYTE PTR ds:[esi]
  432945:	popa   
  432946:	addr16 gs jb 0x43294a
  43294a:	push   esp
  43294b:	popa   
  43294c:	jae    0x4329b9
  43294e:	and    BYTE PTR [ebp+0x61],cl
  432951:	outs   dx,BYTE PTR ds:[esi]
  432952:	popa   
  432953:	addr16 gs jb 0x432985
  432957:	gs js  0x4329bf
  43295a:	add    BYTE PTR [ebp+0x73],ch
  43295d:	arpl   WORD PTR [edi+0x72],bp
  432960:	ins    BYTE PTR es:[edi],dx
  432961:	imul   esp,DWORD PTR [edx+0x0],0x7263694d
  432968:	outs   dx,DWORD PTR ds:[esi]
  432969:	jae    0x4329da
  43296b:	data16 je 0x43299c
  43296e:	push   esi
  43296f:	imul   esi,DWORD PTR [ebx+0x75],0x61426c61
  432976:	jae    0x4329e1
  432978:	arpl   WORD PTR [eax],ax
  43297a:	push   ebx
  43297b:	jns    0x4329f0
  43297d:	je     0x4329e4
  43297f:	ins    DWORD PTR es:[edi],dx
  432980:	cs push edi
  432982:	imul   ebp,DWORD PTR [esi+0x64],0x2e73776f
  432989:	inc    esi
  43298a:	outs   dx,DWORD PTR ds:[esi]
  43298b:	jb     0x4329fa
  43298d:	jae    0x43298f
  43298f:	push   ebx
  432990:	jns    0x432a05
  432992:	je     0x4329f9
  432994:	ins    DWORD PTR es:[edi],dx
  432995:	add    BYTE PTR [ebx+0x79],dl
  432998:	jae    0x432a0e
  43299a:	gs ins DWORD PTR es:[edi],dx
  43299c:	cs inc esp
  43299e:	jb     0x432a01
  4329a0:	ja     0x432a0b
  4329a2:	outs   dx,BYTE PTR ds:[esi]
  4329a3:	add    BYTE PTR [si+0x61],dl
  4329a7:	jae    0x432a14
  4329a9:	and    BYTE PTR [ebp+0x61],cl
  4329ac:	outs   dx,BYTE PTR ds:[esi]
  4329ad:	popa   
  4329ae:	addr16 gs jb 0x4329d8
  4329b2:	add    BYTE PTR [ecx+0x75],al
  4329b5:	je     0x432a1f
  4329b7:	outs   dx,BYTE PTR gs:[esi]
  4329b9:	je     0x432a24
  4329bb:	arpl   WORD PTR [ecx+0x74],sp
  4329be:	imul   ebp,DWORD PTR [edi+0x6e],0x65646f4d
  4329c5:	add    BYTE PTR [ebp+0x69],cl
  4329c8:	arpl   WORD PTR [edx+0x6f],si
  4329cb:	jae    0x432a3c
  4329cd:	data16 je 0x4329fe
  4329d0:	push   esi
  4329d1:	imul   esi,DWORD PTR [ebx+0x75],0x61426c61
  4329d8:	jae    0x432a43
  4329da:	arpl   WORD PTR [esi],bp
  4329dc:	inc    ecx
  4329dd:	jo     0x432a4f
  4329df:	ins    BYTE PTR es:[edi],dx
  4329e0:	imul   esp,DWORD PTR [ebx+0x61],0x6e6f6974
  4329e7:	push   ebx
  4329e8:	gs jb  0x432a61
  4329eb:	imul   esp,DWORD PTR [ebx+0x65],0x68530073
  4329f2:	jne    0x432a68
  4329f4:	outs   dx,DWORD PTR fs:[esi]
  4329f6:	ja     0x432a66
  4329f8:	inc    ebp
  4329f9:	jbe    0x432a60
  4329fb:	outs   dx,BYTE PTR ds:[esi]
  4329fc:	je     0x432a46
  4329fe:	popa   
  4329ff:	outs   dx,BYTE PTR ds:[esi]
  432a00:	fs ins BYTE PTR es:[edi],dx
  432a02:	gs jb  0x432a05
  432a05:	push   ebx
  432a06:	push   0x6f647475
  432a0b:	ja     0x432a7b
  432a0d:	dec    ebp
  432a0e:	outs   dx,DWORD PTR ds:[esi]
  432a0f:	fs add BYTE PTR gs:[ebp+0x73],dl
  432a14:	gs jb  0x432a17
  432a17:	push   edi
  432a18:	imul   ebp,DWORD PTR [esi+0x64],0x4673776f
  432a1f:	outs   dx,DWORD PTR ds:[esi]
  432a20:	jb     0x432a8f
  432a22:	jae    0x432a65
  432a24:	jo     0x432a96
  432a26:	ins    BYTE PTR es:[edi],dx
  432a27:	imul   esp,DWORD PTR [ebx+0x61],0x6e6f6974
  432a2e:	inc    edx
  432a2f:	popa   
  432a30:	jae    0x432a97
  432a32:	add    BYTE PTR [ebx+0x6f],al
  432a35:	ins    DWORD PTR es:[edi],dx
  432a36:	jo     0x432a99
  432a38:	jb     0x432a9f
  432a3a:	dec    ebp
  432a3b:	gs je  0x432aa6
  432a3e:	outs   dx,DWORD PTR ds:[esi]
  432a3f:	add    BYTE PTR fs:[ebx+0x6f],al
  432a43:	outs   dx,BYTE PTR ds:[esi]
  432a44:	jbe    0x432aab
  432a46:	jb     0x432abb
  432a48:	imul   ebp,DWORD PTR [edi+0x6e],0x694d0073
  432a4f:	arpl   WORD PTR [edx+0x6f],si
  432a52:	jae    0x432ac3
  432a54:	data16 je 0x432a85
  432a57:	push   esi
  432a58:	imul   esi,DWORD PTR [ebx+0x75],0x61426c61
  432a5f:	jae    0x432aca
  432a61:	arpl   WORD PTR [esi],bp
  432a63:	inc    ebx
  432a64:	outs   dx,DWORD PTR ds:[esi]
  432a65:	ins    DWORD PTR es:[edi],dx
  432a66:	jo     0x432ad1
  432a68:	ins    BYTE PTR es:[edi],dx
  432a69:	gs jb  0x432abf
  432a6c:	gs jb  0x432ae5
  432a6f:	imul   esp,DWORD PTR [ebx+0x65],0x65440073
  432a76:	jae    0x432ae1
  432a78:	outs   dx,BYTE PTR ds:[si]
  432a7a:	gs jb  0x432ac4
  432a7d:	outs   dx,BYTE PTR gs:[esi]
  432a7f:	gs jb  0x432ae3
  432a82:	je     0x432ae9
  432a84:	fs inc ecx
  432a86:	je     0x432afc
  432a88:	jb     0x432af3
  432a8a:	bound  esi,QWORD PTR [ebp+0x74]
  432a8d:	add    BYTE PTR gs:[esi+0x65],cl
  432a91:	ja     0x432adf
  432a93:	popa   
  432a94:	je     0x432afb
  432a96:	inc    edx
  432a97:	imul   ebp,DWORD PTR [esi+0x64],0x676e69
  432a9e:	dec    edi
  432a9f:	bound  ebp,QWORD PTR [edx+0x65]
  432aa2:	arpl   WORD PTR [esi+eax*2+0x6c],si
  432aa6:	outs   dx,DWORD PTR ds:[esi]
  432aa7:	ja     0x432aec
  432aa9:	outs   dx,DWORD PTR ds:[esi]
  432aaa:	outs   dx,BYTE PTR ds:[esi]
  432aab:	je     0x432b1f
  432aad:	outs   dx,DWORD PTR ds:[esi]
  432aae:	ins    BYTE PTR es:[edi],dx
  432aaf:	add    BYTE PTR [eax+0x72],dl
  432ab2:	outs   dx,DWORD PTR ds:[esi]
  432ab3:	push   0x65
  432ab5:	arpl   WORD PTR [esp+eax*2+0x61],si
  432ab9:	je     0x432b1c
  432abb:	add    BYTE PTR [ebx+0x74],dl
  432abe:	popa   
  432abf:	outs   dx,BYTE PTR ds:[esi]
  432ac0:	fs popa 
  432ac2:	jb     0x432b28
  432ac4:	dec    ebp
  432ac5:	outs   dx,DWORD PTR ds:[esi]
  432ac6:	fs jne 0x432b35
  432ac9:	gs inc ecx
  432acb:	je     0x432b41
  432acd:	jb     0x432b38
  432acf:	bound  esi,QWORD PTR [ebp+0x74]
  432ad2:	add    BYTE PTR gs:[ebp+0x74],dl
  432ad6:	imul   ebp,DWORD PTR [ebx+esi*2+0x0],0x706d6f43
  432ade:	jne    0x432b54
  432ae0:	gs jb  0x432ae3
  432ae3:	dec    ebp
  432ae4:	imul   esp,DWORD PTR [ebx+0x72],0x666f736f
  432aeb:	je     0x432b1b
  432aed:	push   esi
  432aee:	imul   esi,DWORD PTR [ebx+0x75],0x61426c61
  432af5:	jae    0x432b60
  432af7:	arpl   WORD PTR [esi],bp
  432af9:	inc    esp
  432afa:	gs jbe 0x432b66
  432afd:	arpl   WORD PTR [ebp+0x73],sp
  432b00:	add    BYTE PTR [ebx+0x65],dl
  432b03:	jb     0x432b7b
  432b05:	gs jb  0x432b4b
  432b08:	outs   dx,DWORD PTR ds:[esi]
  432b09:	ins    DWORD PTR es:[edi],dx
  432b0a:	jo     0x432b81
  432b0c:	je     0x432b73
  432b0e:	jb     0x432b10
  432b10:	dec    eax
  432b11:	imul   esp,DWORD PTR [ebp+eiz*2+0x4d],0x6c75646f
  432b19:	gs dec esi
  432b1b:	popa   
  432b1c:	ins    DWORD PTR es:[edi],dx
  432b1d:	gs inc ecx
  432b1f:	je     0x432b95
  432b21:	jb     0x432b8c
  432b23:	bound  esi,QWORD PTR [ebp+0x74]
  432b26:	add    BYTE PTR gs:[ebp+0x79],cl
  432b2a:	inc    edi
  432b2b:	jb     0x432b9c
  432b2d:	jne    0x432b9f
  432b2f:	inc    ebx
  432b30:	outs   dx,DWORD PTR ds:[esi]
  432b31:	ins    BYTE PTR es:[edi],dx
  432b32:	ins    BYTE PTR es:[edi],dx
  432b33:	arpl   WORD PTR gs:[ecx+ebp*2+0x6f],si
  432b38:	outs   dx,BYTE PTR ds:[esi]
  432b39:	inc    ecx
  432b3a:	je     0x432bb0
  432b3c:	jb     0x432ba7
  432b3e:	bound  esi,QWORD PTR [ebp+0x74]
  432b41:	add    BYTE PTR gs:[esi+0x69],al
  432b45:	ins    BYTE PTR es:[edi],dx
  432b46:	gs push ebx
  432b48:	jns    0x432bbd
  432b4a:	je     0x432bb1
  432b4c:	ins    DWORD PTR es:[edi],dx
  432b4d:	push   eax
  432b4e:	jb     0x432bbf
  432b50:	js     0x432bcb
  432b52:	add    BYTE PTR [ebp+0x69],cl
  432b55:	arpl   WORD PTR [edx+0x6f],si
  432b58:	jae    0x432bc9
  432b5a:	data16 je 0x432b8b
  432b5d:	push   esi
  432b5e:	imul   esi,DWORD PTR [ebx+0x75],0x61426c61
  432b65:	jae    0x432bd0
  432b67:	arpl   WORD PTR [esi],bp
  432b69:	dec    ebp
  432b6a:	jns    0x432bbf
  432b6c:	gs jb  0x432be5
  432b6f:	imul   esp,DWORD PTR [ebx+0x65],0x65520073
  432b76:	imul   esi,DWORD PTR [bp+di+0x74],0x72507972
  432b7e:	outs   dx,DWORD PTR ds:[esi]
  432b7f:	js     0x432bfa
  432b81:	add    BYTE PTR [ebx+0x74],dl
  432b84:	jb     0x432bef
  432b86:	outs   dx,BYTE PTR ds:[esi]
  432b87:	addr16 jae 0x432b8a
  432b8a:	inc    ecx
  432b8b:	arpl   WORD PTR [ecx+ebp*2+0x76],si
  432b8f:	popa   
  432b90:	je     0x432c01
  432b92:	jb     0x432b94
  432b94:	inc    ecx
  432b95:	jo     0x432c07
  432b97:	inc    esp
  432b98:	outs   dx,DWORD PTR ds:[esi]
  432b99:	ins    DWORD PTR es:[edi],dx
  432b9a:	popa   
  432b9b:	imul   ebp,DWORD PTR [esi+0x0],0x75677241
  432ba2:	ins    DWORD PTR es:[edi],dx
  432ba3:	outs   dx,BYTE PTR gs:[esi]
  432ba5:	je     0x432bec
  432ba7:	js     0x432c0c
  432ba9:	gs jo  0x432c20
  432bac:	imul   ebp,DWORD PTR [edi+0x6e],0x72724100
  432bb3:	popa   
  432bb4:	jns    0x432bb6
  432bb6:	inc    ecx
  432bb7:	je     0x432c2d
  432bb9:	jb     0x432c24
  432bbb:	bound  esi,QWORD PTR [ebp+0x74]
  432bbe:	add    BYTE PTR gs:[edx+0x61],al
  432bc2:	fs dec ecx
  432bc4:	ins    DWORD PTR es:[edi],dx
  432bc5:	popa   
  432bc6:	addr16 gs inc esi
  432bc9:	outs   dx,DWORD PTR ds:[esi]
  432bca:	jb     0x432c39
  432bcc:	popa   
  432bcd:	je     0x432c14
  432bcf:	js     0x432c34
  432bd1:	gs jo  0x432c48
  432bd4:	imul   ebp,DWORD PTR [edi+0x6e],0x74694200
  432bdb:	inc    ebx
  432bdc:	outs   dx,DWORD PTR ds:[esi]
  432bdd:	outs   dx,BYTE PTR ds:[esi]
  432bde:	jbe    0x432c45
  432be0:	jb     0x432c56
  432be2:	gs jb  0x432be5
  432be5:	inc    edx
  432be6:	outs   dx,DWORD PTR ds:[esi]
  432be7:	outs   dx,DWORD PTR ds:[esi]
  432be8:	ins    BYTE PTR es:[edi],dx
  432be9:	gs popa 
  432beb:	outs   dx,BYTE PTR ds:[esi]
  432bec:	add    BYTE PTR [edx+0x75],al
  432bef:	data16 data16 gs jb 0x432bf4
  432bf4:	inc    edx
  432bf5:	jns    0x432c6b
  432bf7:	add    BYTE PTR gs:[ebx+0x68],al
  432bfb:	popa   
  432bfc:	jb     0x432bfe
  432bfe:	inc    edi
  432bff:	outs   dx,BYTE PTR gs:[esi]
  432c01:	gs jb  0x432c65
  432c04:	je     0x432c6b
  432c06:	fs inc ebx
  432c08:	outs   dx,DWORD PTR ds:[esi]
  432c09:	fs gs inc ecx
  432c0c:	je     0x432c82
  432c0e:	jb     0x432c79
  432c10:	bound  esi,QWORD PTR [ebp+0x74]
  432c13:	add    BYTE PTR gs:[ebx+0x79],dl
  432c17:	jae    0x432c8d
  432c19:	gs ins DWORD PTR es:[edi],dx
  432c1b:	cs inc ebx
  432c1d:	outs   dx,DWORD PTR ds:[esi]
  432c1e:	fs gs inc esp
  432c21:	outs   dx,DWORD PTR ds:[esi]
  432c22:	ins    DWORD PTR es:[edi],dx
  432c23:	cs inc ebx
  432c25:	outs   dx,DWORD PTR ds:[esi]
  432c26:	ins    DWORD PTR es:[edi],dx
  432c27:	jo     0x432c92
  432c29:	ins    BYTE PTR es:[edi],dx
  432c2a:	gs jb  0x432c2d
  432c2d:	inc    esp
  432c2e:	imul   esp,DWORD PTR [ebx+0x74],0x616e6f69
  432c35:	jb     0x432cb0
  432c37:	pusha  
  432c38:	xor    al,BYTE PTR [eax]
  432c3a:	push   ebx
  432c3b:	jns    0x432cb0
  432c3d:	je     0x432ca4
  432c3f:	ins    DWORD PTR es:[edi],dx
  432c40:	cs inc ebx
  432c42:	outs   dx,DWORD PTR ds:[esi]
  432c43:	ins    BYTE PTR es:[edi],dx
  432c44:	ins    BYTE PTR es:[edi],dx
  432c45:	arpl   WORD PTR gs:[ecx+ebp*2+0x6f],si
  432c4a:	outs   dx,BYTE PTR ds:[esi]
  432c4b:	jae    0x432c7b
  432c4d:	inc    edi
  432c4e:	outs   dx,BYTE PTR gs:[esi]
  432c50:	gs jb  0x432cbc
  432c53:	arpl   WORD PTR [eax],ax
  432c55:	dec    ecx
  432c56:	inc    ebp
  432c57:	outs   dx,BYTE PTR ds:[esi]
  432c58:	jne    0x432cc7
  432c5a:	gs jb  0x432cbe
  432c5d:	bound  ebp,QWORD PTR [ebp+eiz*2+0x60]
  432c61:	xor    DWORD PTR [eax],eax
  432c63:	dec    ecx
  432c64:	inc    ebp
  432c65:	outs   dx,BYTE PTR ds:[esi]
  432c66:	jne    0x432cd5
  432c68:	gs jb  0x432ccc
  432c6b:	je     0x432cdc
  432c6d:	jb     0x432ccf
  432c6f:	xor    DWORD PTR [eax],eax
  432c71:	dec    ecx
  432c72:	dec    esp
  432c73:	imul   esi,DWORD PTR [ebx+0x74],0x4c003160
  432c7a:	imul   esi,DWORD PTR [ebx+0x74],0x48003160
  432c81:	popa   
  432c82:	jae    0x432cec
  432c84:	je     0x432ce7
  432c86:	bound  ebp,QWORD PTR [ebp+eiz*2+0x0]
  432c8a:	push   ebx
  432c8b:	jns    0x432d00
  432c8d:	je     0x432cf4
  432c8f:	ins    DWORD PTR es:[edi],dx
  432c90:	cs inc ebx
  432c92:	outs   dx,DWORD PTR ds:[esi]
  432c93:	ins    BYTE PTR es:[edi],dx
  432c94:	ins    BYTE PTR es:[edi],dx
  432c95:	arpl   WORD PTR gs:[ecx+ebp*2+0x6f],si
  432c9a:	outs   dx,BYTE PTR ds:[esi]
  432c9b:	jae    0x432c9d
  432c9d:	dec    ecx
  432c9e:	inc    ebp
  432c9f:	outs   dx,BYTE PTR ds:[esi]
  432ca0:	jne    0x432d0f
  432ca2:	gs jb  0x432d06
  432ca5:	je     0x432d16
  432ca7:	jb     0x432ca9
  432ca9:	inc    ebx
  432caa:	outs   dx,DWORD PTR ds:[esi]
  432cab:	ins    DWORD PTR es:[edi],dx
  432cac:	jo     0x432d1d
  432cae:	outs   dx,BYTE PTR ds:[esi]
  432caf:	outs   dx,BYTE PTR gs:[esi]
  432cb1:	je     0x432cb3
  432cb3:	push   ebx
  432cb4:	jns    0x432d29
  432cb6:	je     0x432d1d
  432cb8:	ins    DWORD PTR es:[edi],dx
  432cb9:	cs inc ebx
  432cbb:	outs   dx,DWORD PTR ds:[esi]
  432cbc:	ins    DWORD PTR es:[edi],dx
  432cbd:	jo     0x432d2e
  432cbf:	outs   dx,BYTE PTR ds:[esi]
  432cc0:	outs   dx,BYTE PTR gs:[esi]
  432cc2:	je     0x432d11
  432cc4:	outs   dx,DWORD PTR ds:[esi]
  432cc5:	fs gs ins BYTE PTR es:[edi],dx
  432cc8:	add    BYTE PTR [ebx+0x6f],al
  432ccb:	ins    DWORD PTR es:[edi],dx
  432ccc:	jo     0x432d3d
  432cce:	outs   dx,BYTE PTR ds:[esi]
  432ccf:	outs   dx,BYTE PTR gs:[esi]
  432cd1:	je     0x432d25
  432cd3:	gs jae 0x432d45
  432cd6:	jne    0x432d4a
  432cd8:	arpl   WORD PTR [ebp+0x4d],sp
  432cdb:	popa   
  432cdc:	outs   dx,BYTE PTR ds:[esi]
  432cdd:	popa   
  432cde:	addr16 gs jb 0x432ce2
  432ce2:	dec    eax
  432ce3:	gs ins BYTE PTR es:[edi],dx
  432ce5:	jo     0x432d32
  432ce7:	gs jns 0x432d61
  432cea:	outs   dx,DWORD PTR ds:[esi]
  432ceb:	jb     0x432d51
  432ced:	inc    ecx
  432cee:	je     0x432d64
  432cf0:	jb     0x432d5b
  432cf2:	bound  esi,QWORD PTR [ebp+0x74]
  432cf5:	add    BYTE PTR gs:[ebx+0x79],dl
  432cf9:	jae    0x432d6f
  432cfb:	gs ins DWORD PTR es:[edi],dx
  432cfd:	cs inc ebx
  432cff:	outs   dx,DWORD PTR ds:[esi]
  432d00:	ins    DWORD PTR es:[edi],dx
  432d01:	jo     0x432d72
  432d03:	outs   dx,BYTE PTR ds:[esi]
  432d04:	outs   dx,BYTE PTR gs:[esi]
  432d06:	je     0x432d55
  432d08:	outs   dx,DWORD PTR ds:[esi]
  432d09:	fs gs ins BYTE PTR es:[edi],dx
  432d0c:	cs inc esp
  432d0e:	gs jae 0x432d7a
  432d11:	outs   dx,BYTE PTR ds:[si]
  432d13:	add    BYTE PTR [ebp+0x64],al
  432d16:	imul   esi,DWORD PTR [edi+ebp*2+0x72],0x776f7242
  432d1e:	jae    0x432d81
  432d20:	bound  ebp,QWORD PTR [ebp+eiz*2+0x41]
  432d24:	je     0x432d9a
  432d26:	jb     0x432d91
  432d28:	bound  esi,QWORD PTR [ebp+0x74]
  432d2b:	add    BYTE PTR gs:[ebp+0x64],al
  432d2f:	imul   esi,DWORD PTR [edi+ebp*2+0x72],0x776f7242
  432d37:	jae    0x432d9a
  432d39:	bound  ebp,QWORD PTR [ebp+eiz*2+0x53]
  432d3d:	je     0x432da0
  432d3f:	je     0x432da6
  432d41:	add    BYTE PTR [ecx+0x43],cl
  432d44:	outs   dx,DWORD PTR ds:[esi]
  432d45:	outs   dx,BYTE PTR ds:[esi]
  432d46:	je     0x432da9
  432d48:	imul   ebp,DWORD PTR [esi+0x65],0x53490072
  432d4f:	jne    0x432dc1
  432d51:	jo     0x432dc2
  432d53:	jb     0x432dc9
  432d55:	dec    ecx
  432d56:	outs   dx,BYTE PTR ds:[esi]
  432d57:	imul   esi,DWORD PTR [ecx+ebp*2+0x61],0x657a696c
  432d5f:	add    BYTE PTR [ecx+0x70],al
  432d62:	jo     0x432dd0
  432d64:	imul   esp,DWORD PTR [ebx+0x61],0x6e6f6974
  432d6b:	push   ebx
  432d6c:	gs je  0x432de3
  432d6f:	imul   ebp,DWORD PTR [esi+0x67],0x73614273
  432d76:	add    BYTE PTR gs:[ebx+0x79],dl
  432d7a:	jae    0x432df0
  432d7c:	gs ins DWORD PTR es:[edi],dx
  432d7e:	cs inc ebx
  432d80:	outs   dx,DWORD PTR ds:[esi]
  432d81:	outs   dx,BYTE PTR ds:[esi]
  432d82:	imul   sp,WORD PTR [edi+0x75],0x6172
  432d88:	je     0x432df3
  432d8a:	outs   dx,DWORD PTR ds:[esi]
  432d8b:	outs   dx,BYTE PTR ds:[esi]
  432d8c:	add    BYTE PTR [ebx+0x65],dl
  432d8f:	je     0x432e05
  432d91:	imul   ebp,DWORD PTR [esi+0x67],0x73614273
  432d98:	add    BYTE PTR gs:[ebx+0x6f],al
  432d9c:	outs   dx,BYTE PTR ds:[esi]
  432d9d:	jbe    0x432e04
  432d9f:	jb     0x432e15
  432da1:	add    BYTE PTR [ebp+eiz*2+0x6c],al
  432da5:	gs addr16 popa 
  432da8:	je     0x432e0f
  432daa:	add    BYTE PTR [ebp+eiz*2+0x62],al
  432dae:	jne    0x432e17
  432db0:	addr16 popa 
  432db2:	bound  ebp,QWORD PTR [ebp+eiz*2+0x41]
  432db6:	je     0x432e2c
  432db8:	jb     0x432e23
  432dba:	bound  esi,QWORD PTR [ebp+0x74]
  432dbd:	add    BYTE PTR gs:[ebx+0x79],dl
  432dc1:	jae    0x432e37
  432dc3:	gs ins DWORD PTR es:[edi],dx
  432dc5:	cs inc esp
  432dc7:	imul   esp,DWORD PTR [ecx+0x67],0x74736f6e
  432dce:	imul   esp,DWORD PTR [ebx+0x73],0x62654400
  432dd5:	jne    0x432e3e
  432dd7:	imul   ebp,DWORD PTR [bp+0x67],0x65646f4d
  432ddf:	jae    0x432de1
  432de1:	inc    esp
  432de2:	bound  esi,QWORD PTR gs:[ebp+0x67]
  432de6:	addr16 gs jb 0x432e32
  432dea:	imul   esp,DWORD PTR [esp+eiz*2+0x65],0x7474416e
  432df2:	jb     0x432e5d
  432df4:	bound  esi,QWORD PTR [ebp+0x74]
  432df7:	add    BYTE PTR gs:[ebp+eiz*2+0x62],al
  432dfc:	jne    0x432e65
  432dfe:	addr16 gs jb 0x432e50
  432e02:	outs   dx,DWORD PTR ds:[esi]
  432e03:	outs   dx,BYTE PTR ds:[esi]
  432e04:	push   ebp
  432e05:	jae    0x432e6c
  432e07:	jb     0x432e4c
  432e09:	outs   dx,DWORD PTR ds:[esi]
  432e0a:	fs gs inc ecx
  432e0d:	je     0x432e83
  432e0f:	jb     0x432e7a
  432e11:	bound  esi,QWORD PTR [ebp+0x74]
  432e14:	add    BYTE PTR gs:[ebp+eiz*2+0x62],al
  432e19:	jne    0x432e82
  432e1b:	addr16 gs jb 0x432e72
  432e1f:	je     0x432e86
  432e21:	jo     0x432e77
  432e23:	push   0x67756f72
  432e28:	push   0x72747441
  432e2d:	imul   esp,DWORD PTR [edx+0x75],0x50006574
  432e34:	jb     0x432ea5
  432e36:	arpl   WORD PTR [ebp+0x73],sp
  432e39:	jae    0x432e3b
  432e3b:	push   eax
  432e3c:	jb     0x432ead
  432e3e:	arpl   WORD PTR [ebp+0x73],sp
  432e41:	jae    0x432e96
  432e43:	je     0x432ea6
  432e45:	jb     0x432ebb
  432e47:	dec    ecx
  432e48:	outs   dx,BYTE PTR ds:[esi]
  432e49:	outs   dx,WORD PTR ds:[esi]
  432e4b:	add    BYTE PTR [eax+0x72],dl
  432e4e:	outs   dx,DWORD PTR ds:[esi]
  432e4f:	arpl   WORD PTR [ebp+0x73],sp
  432e52:	jae    0x432eab
  432e54:	imul   ebp,DWORD PTR [esi+0x64],0x7453776f
  432e5b:	jns    0x432ec9
  432e5d:	add    BYTE PTR gs:[edi+ebp*2+0x75],al
  432e62:	bound  ebp,QWORD PTR [ebp+eiz*2+0x0]
  432e66:	inc    ebx
  432e67:	outs   dx,DWORD PTR ds:[esi]
  432e68:	ins    BYTE PTR es:[edi],dx
  432e69:	outs   dx,DWORD PTR ds:[esi]
  432e6a:	jb     0x432e6c
  432e6c:	inc    esi
  432e6d:	outs   dx,DWORD PTR ds:[esi]
  432e6e:	outs   dx,BYTE PTR ds:[esi]
  432e6f:	je     0x432e71
  432e71:	inc    esi
  432e72:	outs   dx,DWORD PTR ds:[esi]
  432e73:	outs   dx,BYTE PTR ds:[esi]
  432e74:	je     0x432ec9
  432e76:	je     0x432ef1
  432e78:	ins    BYTE PTR es:[edi],dx
  432e79:	add    BYTE PTR gs:[edi+0x72],al
  432e7d:	popa   
  432e7e:	jo     0x432ee8
  432e80:	imul   esp,DWORD PTR [ebx+0x73],0x74696e55
  432e87:	add    BYTE PTR [ecx+0x63],cl
  432e8a:	outs   dx,DWORD PTR ds:[esi]
  432e8b:	outs   dx,BYTE PTR ds:[esi]
  432e8c:	add    BYTE PTR [ecx+0x6d],cl
  432e8f:	popa   
  432e90:	add    BYTE PTR gs:[bx+si+0x6f],dl
  432e95:	imul   ebp,DWORD PTR [esi+0x74],0x7a695300
  432e9c:	add    BYTE PTR gs:[ebx+0x69],dl
  432ea0:	jp     0x432f07
  432ea2:	inc    esi
  432ea3:	add    BYTE PTR [ebx+0x79],dl
  432ea6:	jae    0x432f1c
  432ea8:	gs ins DWORD PTR es:[edi],dx
  432eaa:	inc    ebx
  432eab:	outs   dx,DWORD PTR ds:[esi]
  432eac:	ins    BYTE PTR es:[edi],dx
  432ead:	outs   dx,DWORD PTR ds:[esi]
  432eae:	jb     0x432f23
  432eb0:	add    BYTE PTR [ebp+0x6e],al
  432eb3:	jne    0x432f22
  432eb5:	add    BYTE PTR [ebp+0x6e],al
  432eb8:	jbe    0x432f23
  432eba:	jb     0x432f2b
  432ebc:	outs   dx,BYTE PTR ds:[esi]
  432ebd:	ins    DWORD PTR es:[edi],dx
  432ebe:	outs   dx,BYTE PTR gs:[esi]
  432ec0:	je     0x432ec2
  432ec2:	push   ebx
  432ec3:	jo     0x432f2a
  432ec5:	arpl   WORD PTR [ecx+0x61],bp
  432ec8:	ins    BYTE PTR es:[edi],dx
  432ec9:	inc    esi
  432eca:	outs   dx,DWORD PTR ds:[esi]
  432ecb:	ins    BYTE PTR es:[edi],dx
  432ecc:	fs gs jb 0x432ed0
  432ed0:	inc    ebp
  432ed1:	jbe    0x432f38
  432ed3:	outs   dx,BYTE PTR ds:[esi]
  432ed4:	je     0x432f17
  432ed6:	jb     0x432f3f
  432ed8:	jae    0x432eda
  432eda:	inc    ebp
  432edb:	jbe    0x432f42
  432edd:	outs   dx,BYTE PTR ds:[esi]
  432ede:	je     0x432f28
  432ee0:	popa   
  432ee1:	outs   dx,BYTE PTR ds:[esi]
  432ee2:	fs ins BYTE PTR es:[edi],dx
  432ee4:	gs jb  0x432ee7
  432ee7:	inc    ebp
  432ee8:	js     0x432f4d
  432eea:	gs jo  0x432f61
  432eed:	imul   ebp,DWORD PTR [edi+0x6e],0x6c754300
  432ef4:	je     0x432f6b
  432ef6:	jb     0x432f5d
  432ef8:	dec    ecx
  432ef9:	outs   dx,BYTE PTR ds:[esi]
  432efa:	outs   dx,WORD PTR ds:[esi]
  432efc:	add    BYTE PTR [ebx+0x79],dl
  432eff:	jae    0x432f75
  432f01:	gs ins DWORD PTR es:[edi],dx
  432f03:	cs inc edi
  432f05:	ins    BYTE PTR es:[edi],dx
  432f06:	outs   dx,DWORD PTR ds:[esi]
  432f07:	bound  esp,QWORD PTR [ecx+0x6c]
  432f0a:	imul   edi,DWORD PTR [edx+0x61],0x6e6f6974
  432f11:	add    BYTE PTR [esi+0x75],cl
  432f14:	ins    DWORD PTR es:[edi],dx
  432f15:	bound  esp,QWORD PTR [ebp+0x72]
  432f18:	push   ebx
  432f19:	je     0x432f94
  432f1b:	ins    BYTE PTR es:[edi],dx
  432f1c:	gs jae 0x432f1f
  432f1f:	dec    ecx
  432f20:	inc    esp
  432f21:	imul   esi,DWORD PTR [ebx+0x70],0x6261736f
  432f28:	ins    BYTE PTR es:[edi],dx
  432f29:	add    BYTE PTR gs:[ecx+0x6e],cl
  432f2d:	je     0x432f60
  432f2f:	add    BYTE PTR ss:[ecx+0x6e],cl
  432f33:	je     0x432f68
  432f35:	xor    al,BYTE PTR [eax]
  432f37:	dec    ecx
  432f38:	outs   dx,BYTE PTR ds:[esi]
  432f39:	je     0x432f71
  432f3b:	xor    al,0x0
  432f3d:	dec    ecx
  432f3e:	outs   dx,BYTE PTR ds:[esi]
  432f3f:	je     0x432f91
  432f41:	je     0x432fb5
  432f43:	add    BYTE PTR [ecx+0x6e],cl
  432f46:	jbe    0x432fa9
  432f48:	ins    BYTE PTR es:[edi],dx
  432f49:	imul   esp,DWORD PTR [edi+ecx*2+0x70],0x74617265
  432f51:	imul   ebp,DWORD PTR [edi+0x6e],0x65637845
  432f58:	jo     0x432fce
  432f5a:	imul   ebp,DWORD PTR [edi+0x6e],0x6e694200
  432f61:	popa   
  432f62:	jb     0x432fdd
  432f64:	push   edx
  432f65:	gs popa 
  432f67:	fs gs jb 0x432f6b
  432f6b:	push   ebx
  432f6c:	jns    0x432fe1
  432f6e:	je     0x432fd5
  432f70:	ins    DWORD PTR es:[edi],dx
  432f71:	cs dec ecx
  432f73:	dec    edi
  432f74:	add    BYTE PTR [ebx+0x6f],al
  432f77:	ins    DWORD PTR es:[edi],dx
  432f78:	jo     0x432fec
  432f7a:	gs jae 0x432ff0
  432f7d:	imul   ebp,DWORD PTR [edi+0x6e],0x65646f4d
  432f84:	add    BYTE PTR [ebx+0x79],dl
  432f87:	jae    0x432ffd
  432f89:	gs ins DWORD PTR es:[edi],dx
  432f8b:	cs dec ecx
  432f8d:	dec    edi
  432f8e:	cs inc ebx
  432f90:	outs   dx,DWORD PTR ds:[esi]
  432f91:	ins    DWORD PTR es:[edi],dx
  432f92:	jo     0x433006
  432f94:	gs jae 0x43300a
  432f97:	imul   ebp,DWORD PTR [edi+0x6e],0x66654400
  432f9e:	ins    BYTE PTR es:[edi],dx
  432f9f:	popa   
  432fa0:	je     0x433007
  432fa2:	push   ebx
  432fa3:	je     0x433017
  432fa5:	gs popa 
  432fa7:	ins    DWORD PTR es:[edi],dx
  432fa8:	add    BYTE PTR [ecx+ebp*2+0x72],al
  432fac:	arpl   WORD PTR gs:[edi+ebp*2+0x72],si
  432fb1:	jns    0x432fb3
  432fb3:	inc    esp
  432fb4:	imul   esi,DWORD PTR [edx+0x65],0x726f7463
  432fbb:	jns    0x433006
  432fbd:	outs   dx,BYTE PTR ds:[esi]
  432fbe:	outs   dx,WORD PTR ds:[esi]
  432fc0:	add    BYTE PTR [esi+0x69],al
  432fc3:	ins    BYTE PTR es:[edi],dx
  432fc4:	add    BYTE PTR gs:[esi+0x69],al
  432fc8:	ins    BYTE PTR es:[edi],dx
  432fc9:	gs inc ecx
  432fcb:	arpl   WORD PTR [ebx+0x65],sp
  432fce:	jae    0x433043
  432fd0:	add    BYTE PTR [esi+0x69],al
  432fd3:	ins    BYTE PTR es:[edi],dx
  432fd4:	gs dec ecx
  432fd6:	outs   dx,BYTE PTR ds:[esi]
  432fd7:	outs   dx,WORD PTR ds:[esi]
  432fd9:	add    BYTE PTR [esi+0x69],al
  432fdc:	ins    BYTE PTR es:[edi],dx
  432fdd:	gs dec ebp
  432fdf:	outs   dx,DWORD PTR ds:[esi]
  432fe0:	fs add BYTE PTR gs:[esi+0x69],al
  432fe5:	ins    BYTE PTR es:[edi],dx
  432fe6:	gs push ebx
  432fe8:	je     0x43305c
  432fea:	gs popa 
  432fec:	ins    DWORD PTR es:[edi],dx
  432fed:	add    BYTE PTR [esi+0x69],al
  432ff0:	ins    BYTE PTR es:[edi],dx
  432ff1:	gs push ebx
  432ff3:	jns    0x433068
  432ff5:	je     0x43305c
  432ff7:	ins    DWORD PTR es:[edi],dx
  432ff8:	dec    ecx
  432ff9:	outs   dx,BYTE PTR ds:[esi]
  432ffa:	outs   dx,WORD PTR ds:[esi]
  432ffc:	add    BYTE PTR [ebp+0x65],cl
  432fff:	ins    DWORD PTR es:[edi],dx
  433000:	outs   dx,DWORD PTR ds:[esi]
  433001:	jb     0x43307c
  433003:	push   ebx
  433004:	je     0x433078
  433006:	gs popa 
  433008:	ins    DWORD PTR es:[edi],dx
  433009:	add    BYTE PTR [ebx+0x74],dl
  43300c:	jb     0x433073
  43300e:	popa   
  43300f:	ins    DWORD PTR es:[edi],dx
  433010:	add    BYTE PTR [ebx+0x74],dl
  433013:	jb     0x43307a
  433015:	popa   
  433016:	ins    DWORD PTR es:[edi],dx
  433017:	push   edx
  433018:	gs popa 
  43301a:	fs gs jb 0x43301e
  43301e:	push   esp
  43301f:	gs js  0x433096
  433022:	push   edx
  433023:	gs popa 
  433025:	fs gs jb 0x433029
  433029:	dec    ebp
  43302a:	outs   dx,DWORD PTR ds:[esi]
  43302b:	fs jne 0x43309a
  43302e:	gs dec eax
  433030:	popa   
  433031:	outs   dx,BYTE PTR ds:[esi]
  433032:	fs ins BYTE PTR es:[edi],dx
  433034:	add    BYTE PTR gs:[ebp+0x75],cl
  433038:	ins    BYTE PTR es:[edi],dx
  433039:	je     0x4330a4
  43303b:	arpl   WORD PTR [ecx+0x73],sp
  43303e:	je     0x433084
  433040:	gs ins BYTE PTR es:[edi],dx
  433042:	gs addr16 popa 
  433045:	je     0x4330ac
  433047:	add    BYTE PTR [esi+0x65],cl
  43304a:	je     0x4330c3
  43304c:	outs   dx,DWORD PTR ds:[esi]
  43304d:	jb     0x4330ba
  43304f:	dec    ecx
  433050:	outs   dx,BYTE PTR ds:[esi]
  433051:	je     0x4330b8
  433053:	jb     0x4330bb
  433055:	popa   
  433056:	arpl   WORD PTR [ebp+0x0],sp
  433059:	push   ebx
  43305a:	jns    0x4330cf
  43305c:	je     0x4330c3
  43305e:	ins    DWORD PTR es:[edi],dx
  43305f:	cs dec esi
  433061:	gs je  0x433092
  433064:	dec    esi
  433065:	gs je  0x4330df
  433068:	outs   dx,DWORD PTR ds:[esi]
  433069:	jb     0x4330d6
  43306b:	dec    ecx
  43306c:	outs   dx,BYTE PTR ds:[esi]
  43306d:	outs   dx,WORD PTR ds:[esi]
  43306f:	jb     0x4330de
  433071:	popa   
  433072:	je     0x4330dd
  433074:	outs   dx,DWORD PTR ds:[esi]
  433075:	outs   dx,BYTE PTR ds:[esi]
  433076:	add    BYTE PTR [eax+0x68],dl
  433079:	jns    0x4330ee
  43307b:	imul   esp,DWORD PTR [ebx+0x61],0x6464416c
  433082:	jb     0x4330e9
  433084:	jae    0x4330f9
  433086:	add    BYTE PTR [edi+0x65],dl
  433089:	bound  eax,QWORD PTR [ebx+0x6c]
  43308c:	imul   esp,DWORD PTR [ebp+0x6e],0x79530074
  433093:	jae    0x433109
  433095:	gs ins DWORD PTR es:[edi],dx
  433097:	cs dec esi
  433099:	gs je  0x43309c
  43309c:	dec    esi
  43309d:	outs   dx,DWORD PTR ds:[esi]
  43309e:	je     0x4330f3
  4330a0:	jne    0x433112
  4330a2:	jo     0x433113
  4330a4:	jb     0x43311a
  4330a6:	gs fs inc ebp
  4330a9:	js     0x43310e
  4330ab:	gs jo  0x433122
  4330ae:	imul   ebp,DWORD PTR [edi+0x6e],0x6a624f00
  4330b5:	arpl   WORD PTR gs:[eax+eax*1+0x52],si
  4330ba:	popa   
  4330bb:	outs   dx,BYTE PTR ds:[esi]
  4330bc:	outs   dx,DWORD PTR fs:[esi]
  4330be:	ins    DWORD PTR es:[edi],dx
  4330bf:	add    BYTE PTR [ecx+0x73],al
  4330c2:	jae    0x433129
  4330c4:	ins    DWORD PTR es:[edi],dx
  4330c5:	bound  ebp,QWORD PTR [ecx+edi*2+0x0]
  4330c9:	push   ebx
  4330ca:	jns    0x43313f
  4330cc:	je     0x433133
  4330ce:	ins    DWORD PTR es:[edi],dx
  4330cf:	cs push edx
  4330d1:	gs data16 ins BYTE PTR es:[edi],dx
  4330d4:	arpl   WORD PTR gs:[ecx+ebp*2+0x6f],si
  4330d9:	outs   dx,BYTE PTR ds:[esi]
  4330da:	add    BYTE PTR [ecx+0x73],al
  4330dd:	jae    0x433144
  4330df:	ins    DWORD PTR es:[edi],dx
  4330e0:	bound  ebp,QWORD PTR [ecx+edi*2+0x43]
  4330e4:	outs   dx,DWORD PTR ds:[esi]
  4330e5:	ins    DWORD PTR es:[edi],dx
  4330e6:	jo     0x433149
  4330e8:	outs   dx,BYTE PTR ds:[esi]
  4330e9:	jns    0x43312c
  4330eb:	je     0x433161
  4330ed:	jb     0x433158
  4330ef:	bound  esi,QWORD PTR [ebp+0x74]
  4330f2:	add    BYTE PTR gs:[ecx+0x73],al
  4330f6:	jae    0x43315d
  4330f8:	ins    DWORD PTR es:[edi],dx
  4330f9:	bound  ebp,QWORD PTR [ecx+edi*2+0x43]
  4330fd:	outs   dx,DWORD PTR ds:[esi]
  4330fe:	jo     0x433179
  433100:	jb     0x43316b
  433102:	addr16 push 0x74744174
  433108:	jb     0x433173
  43310a:	bound  esi,QWORD PTR [ebp+0x74]
  43310d:	add    BYTE PTR gs:[ecx+0x73],al
  433111:	jae    0x433178
  433113:	ins    DWORD PTR es:[edi],dx
  433114:	bound  ebp,QWORD PTR [ecx+edi*2+0x44]
  433118:	gs jae 0x43317e
  43311b:	jb     0x433186
  43311d:	jo     0x433193
  43311f:	imul   ebp,DWORD PTR [edi+0x6e],0x72747441
  433126:	imul   esp,DWORD PTR [edx+0x75],0x41006574
  43312d:	jae    0x4331a2
  43312f:	gs ins DWORD PTR es:[edi],dx
  433131:	bound  ebp,QWORD PTR [ecx+edi*2+0x46]
  433135:	imul   ebp,DWORD PTR [ebp+eiz*2+0x56],0x69737265
  43313d:	outs   dx,DWORD PTR ds:[esi]
  43313e:	outs   dx,BYTE PTR ds:[esi]
  43313f:	inc    ecx
  433140:	je     0x4331b6
  433142:	jb     0x4331ad
  433144:	bound  esi,QWORD PTR [ebp+0x74]
  433147:	add    BYTE PTR gs:[ecx+0x73],al
  43314b:	jae    0x4331b2
  43314d:	ins    DWORD PTR es:[edi],dx
  43314e:	bound  ebp,QWORD PTR [ecx+edi*2+0x50]
  433152:	jb     0x4331c3
  433154:	fs jne 0x4331ba
  433157:	je     0x43319a
  433159:	je     0x4331cf
  43315b:	jb     0x4331c6
  43315d:	bound  esi,QWORD PTR [ebp+0x74]
  433160:	add    BYTE PTR gs:[ecx+0x73],al
  433164:	jae    0x4331cb
  433166:	ins    DWORD PTR es:[edi],dx
  433167:	bound  ebp,QWORD PTR [ecx+edi*2+0x54]
  43316b:	imul   esi,DWORD PTR [esp+ebp*2+0x65],0x72747441
  433173:	imul   esp,DWORD PTR [edx+0x75],0x41006574
  43317a:	jae    0x4331ef
  43317c:	gs ins DWORD PTR es:[edi],dx
  43317e:	bound  ebp,QWORD PTR [ecx+edi*2+0x54]
  433182:	jb     0x4331e5
  433184:	fs gs ins DWORD PTR es:[edi],dx
  433187:	popa   
  433188:	jb     0x4331f5
  43318a:	inc    ecx
  43318b:	je     0x433201
  43318d:	jb     0x4331f8
  43318f:	bound  esi,QWORD PTR [ebp+0x74]
  433192:	add    BYTE PTR gs:[edx+0x69],al
  433196:	outs   dx,BYTE PTR ds:[esi]
  433197:	imul   ebp,DWORD PTR fs:[esi+0x67],0x67616c46
  43319f:	jae    0x4331a1
  4331a1:	inc    ebx
  4331a2:	outs   dx,DWORD PTR ds:[esi]
  4331a3:	outs   dx,BYTE PTR ds:[esi]
  4331a4:	jae    0x43321a
  4331a6:	jb     0x43321d
  4331a8:	arpl   WORD PTR [edi+ebp*2+0x72],si
  4331ac:	dec    ecx
  4331ad:	outs   dx,BYTE PTR ds:[esi]
  4331ae:	outs   dx,WORD PTR ds:[esi]
  4331b0:	add    BYTE PTR [ecx+edi*2+0x6e],al
  4331b4:	popa   
  4331b5:	ins    DWORD PTR es:[edi],dx
  4331b6:	imul   esp,DWORD PTR [ebx+0x49],0x666e494c
  4331bd:	outs   dx,DWORD PTR ds:[esi]
  4331be:	add    BYTE PTR [ebx+0x79],dl
  4331c1:	jae    0x433237
  4331c3:	gs ins DWORD PTR es:[edi],dx
  4331c5:	cs push edx
  4331c7:	gs data16 ins BYTE PTR es:[edi],dx
  4331ca:	arpl   WORD PTR gs:[ecx+ebp*2+0x6f],si
  4331cf:	outs   dx,BYTE PTR ds:[esi]
  4331d0:	cs inc ebp
  4331d2:	ins    DWORD PTR es:[edi],dx
  4331d3:	imul   esi,DWORD PTR [eax+eax*1+0x44],0x6d616e79
  4331db:	imul   esp,DWORD PTR [ebx+0x4d],0x6f687465
  4331e2:	add    BYTE PTR fs:[edi+0x70],cl
  4331e6:	inc    ebx
  4331e7:	outs   dx,DWORD PTR ds:[esi]
  4331e8:	fs add BYTE PTR gs:[edi+0x70],cl
  4331ed:	inc    ebx
  4331ee:	outs   dx,DWORD PTR ds:[esi]
  4331ef:	fs gs jae 0x4331f3
  4331f3:	dec    edi
  4331f4:	jo     0x43325b
  4331f6:	jb     0x433259
  4331f8:	outs   dx,BYTE PTR ds:[esi]
  4331f9:	fs push esp
  4331fb:	jns    0x43326d
  4331fd:	add    BYTE PTR gs:[ebx+0x69],dl
  433201:	outs   dx,BYTE PTR ds:[si]
  433203:	popa   
  433204:	je     0x43327b
  433206:	jb     0x43326d
  433208:	dec    eax
  433209:	gs ins BYTE PTR es:[edi],dx
  43320b:	jo     0x433272
  43320d:	jb     0x43320f
  43320f:	inc    ebp
  433210:	js     0x433275
  433212:	gs jo  0x433289
  433215:	imul   ebp,DWORD PTR [edi+0x6e],0x646e6148
  43321c:	ins    BYTE PTR es:[edi],dx
  43321d:	imul   ebp,DWORD PTR [esi+0x67],0x75616c43
  433224:	jae    0x43328b
  433226:	dec    edi
  433227:	jo     0x43329d
  433229:	imul   ebp,DWORD PTR [edi+0x6e],0x69460073
  433230:	gs ins BYTE PTR es:[edi],dx
  433232:	fs dec ecx
  433234:	outs   dx,BYTE PTR ds:[esi]
  433235:	outs   dx,WORD PTR ds:[esi]
  433237:	add    BYTE PTR [edi+ebp*2+0x63],cl
  43323b:	popa   
  43323c:	ins    BYTE PTR es:[edi],dx
  43323d:	push   esi
  43323e:	popa   
  43323f:	jb     0x4332aa
  433241:	popa   
  433242:	bound  ebp,QWORD PTR [ebp+eiz*2+0x49]
  433246:	outs   dx,BYTE PTR ds:[esi]
  433247:	outs   dx,WORD PTR ds:[esi]
  433249:	add    BYTE PTR [ebp+0x65],cl
  43324c:	ins    DWORD PTR es:[edi],dx
  43324d:	bound  esp,QWORD PTR [ebp+0x72]
  433250:	dec    ecx
  433251:	outs   dx,BYTE PTR ds:[esi]
  433252:	outs   dx,WORD PTR ds:[esi]
  433254:	add    BYTE PTR [ebp+0x65],cl
  433257:	ins    DWORD PTR es:[edi],dx
  433258:	bound  esp,QWORD PTR [ebp+0x72]
  43325b:	push   esp
  43325c:	jns    0x4332ce
  43325e:	gs jae 0x433261
  433261:	dec    ebp
  433262:	gs je  0x4332cd
  433265:	outs   dx,DWORD PTR ds:[esi]
  433266:	fs inc edx
  433268:	popa   
  433269:	jae    0x4332d0
  43326b:	add    BYTE PTR [ebp+0x65],cl
  43326e:	je     0x4332d8
  433270:	outs   dx,DWORD PTR ds:[esi]
  433271:	fs inc edx
  433273:	outs   dx,DWORD PTR ds:[esi]
  433274:	fs jns 0x433277
  433277:	dec    ebp
  433278:	gs je  0x4332e3
  43327b:	outs   dx,DWORD PTR ds:[esi]
  43327c:	fs dec ecx
  43327e:	outs   dx,BYTE PTR ds:[esi]
  43327f:	outs   dx,WORD PTR ds:[esi]
  433281:	add    BYTE PTR [ebp+0x6f],cl
  433284:	fs jne 0x4332f3
  433287:	add    BYTE PTR gs:[eax+0x61],dl
  43328b:	jb     0x4332ee
  43328d:	ins    DWORD PTR es:[edi],dx
  43328e:	gs je  0x4332f6
  433291:	jb     0x4332dc
  433293:	outs   dx,BYTE PTR ds:[esi]
  433294:	outs   dx,WORD PTR ds:[esi]
  433296:	add    BYTE PTR [ecx+eiz*2+0x72],dl
  43329a:	addr16 gs je 0x4332e7
  43329e:	outs   dx,BYTE PTR ds:[esi]
  43329f:	jbe    0x433310
  4332a1:	arpl   WORD PTR [ecx+0x74],sp
  4332a4:	imul   ebp,DWORD PTR [edi+0x6e],0x65637845
  4332ab:	jo     0x433321
  4332ad:	imul   ebp,DWORD PTR [edi+0x6e],0x73655200
  4332b4:	outs   dx,DWORD PTR ds:[esi]
  4332b5:	ins    BYTE PTR es:[edi],dx
  4332b6:	jbe    0x43331d
  4332b8:	inc    ebp
  4332b9:	jbe    0x433320
  4332bb:	outs   dx,BYTE PTR ds:[esi]
  4332bc:	je     0x4332ff
  4332be:	jb     0x433327
  4332c0:	jae    0x4332c2
  4332c2:	push   edx
  4332c3:	gs jae 0x433335
  4332c6:	ins    BYTE PTR es:[edi],dx
  4332c7:	jbe    0x43332e
  4332c9:	inc    ebp
  4332ca:	jbe    0x433331
  4332cc:	outs   dx,BYTE PTR ds:[esi]
  4332cd:	je     0x433317
  4332cf:	popa   
  4332d0:	outs   dx,BYTE PTR ds:[esi]
  4332d1:	fs ins BYTE PTR es:[edi],dx
  4332d3:	gs jb  0x4332d6
  4332d6:	push   edx
  4332d7:	gs jae 0x433349
  4332da:	jne    0x43334e
  4332dc:	arpl   WORD PTR [ebp+0x4d],sp
  4332df:	popa   
  4332e0:	outs   dx,BYTE PTR ds:[esi]
  4332e1:	popa   
  4332e2:	addr16 gs jb 0x4332e6
  4332e6:	push   ebx
  4332e7:	jns    0x43335c
  4332e9:	je     0x433350
  4332eb:	ins    DWORD PTR es:[edi],dx
  4332ec:	cs push edx
  4332ee:	gs jae 0x433360
  4332f1:	jne    0x433365
  4332f3:	arpl   WORD PTR [ebp+0x73],sp
  4332f6:	add    BYTE PTR [ecx+0x63],al
  4332f9:	arpl   WORD PTR [ebp+0x73],sp
  4332fc:	jae    0x433363
  4332fe:	fs push esp
  433300:	push   0x67756f72
  433305:	push   0x706f7250
  43330a:	gs jb  0x433381
  43330d:	jns    0x433350
  43330f:	je     0x433385
  433311:	jb     0x43337c
  433313:	bound  esi,QWORD PTR [ebp+0x74]
  433316:	add    BYTE PTR gs:[ebx+0x79],dl
  43331a:	jae    0x433390
  43331c:	gs ins DWORD PTR es:[edi],dx
  43331e:	cs push edx
  433320:	jne    0x433390
  433322:	je     0x43338d
  433324:	ins    DWORD PTR es:[edi],dx
  433325:	gs cs inc ebx
  433328:	outs   dx,DWORD PTR ds:[esi]
  433329:	ins    DWORD PTR es:[edi],dx
  43332a:	jo     0x433395
  43332c:	ins    BYTE PTR es:[edi],dx
  43332d:	gs jb  0x433383
  433330:	gs jb  0x4333a9
  433333:	imul   esp,DWORD PTR [ebx+0x65],0x6f430073
  43333a:	ins    DWORD PTR es:[edi],dx
  43333b:	jo     0x4333a6
  43333d:	ins    BYTE PTR es:[edi],dx
  43333e:	popa   
  43333f:	je     0x4333aa
  433341:	outs   dx,DWORD PTR ds:[esi]
  433342:	outs   dx,BYTE PTR ds:[esi]
  433343:	push   edx
  433344:	gs ins BYTE PTR es:[edi],dx
  433346:	popa   
  433347:	js     0x4333aa
  433349:	je     0x4333b4
  43334b:	outs   dx,DWORD PTR ds:[esi]
  43334c:	outs   dx,BYTE PTR ds:[esi]
  43334d:	jae    0x433390
  43334f:	je     0x4333c5
  433351:	jb     0x4333bc
  433353:	bound  esi,QWORD PTR [ebp+0x74]
  433356:	add    BYTE PTR gs:[ebx+0x6f],al
  43335a:	ins    DWORD PTR es:[edi],dx
  43335b:	jo     0x4333c6
  43335d:	ins    BYTE PTR es:[edi],dx
  43335e:	gs jb  0x4333a8
  433361:	outs   dx,BYTE PTR gs:[esi]
  433363:	gs jb  0x4333c7
  433366:	je     0x4333cd
  433368:	fs inc ecx
  43336a:	je     0x4333e0
  43336c:	jb     0x4333d7
  43336e:	bound  esi,QWORD PTR [ebp+0x74]
  433371:	add    BYTE PTR gs:[edx+0x75],dl
  433375:	outs   dx,BYTE PTR ds:[esi]
  433376:	je     0x4333e1
  433378:	ins    DWORD PTR es:[edi],dx
  433379:	gs inc ebx
  43337b:	outs   dx,DWORD PTR ds:[esi]
  43337c:	ins    DWORD PTR es:[edi],dx
  43337d:	jo     0x4333e0
  43337f:	je     0x4333ea
  433381:	bound  ebp,QWORD PTR [ecx+0x6c]
  433384:	imul   esi,DWORD PTR [ecx+edi*2+0x41],0x69727474
  43338c:	bound  esi,QWORD PTR [ebp+0x74]
  43338f:	add    BYTE PTR gs:[edx+0x75],dl
  433393:	outs   dx,BYTE PTR ds:[esi]
  433394:	je     0x4333ff
  433396:	ins    DWORD PTR es:[edi],dx
  433397:	gs dec eax
  433399:	gs ins BYTE PTR es:[edi],dx
  43339b:	jo     0x433402
  43339d:	jb     0x433412
  43339f:	add    BYTE PTR [ebx+0x6f],al
  4333a2:	ins    DWORD PTR es:[edi],dx
  4333a3:	push   esi
  4333a4:	imul   esi,DWORD PTR [ebx+0x69],0x41656c62
  4333ab:	je     0x433421
  4333ad:	jb     0x433418
  4333af:	bound  esi,QWORD PTR [ebp+0x74]
  4333b2:	add    BYTE PTR gs:[ebx+0x79],dl
  4333b6:	jae    0x43342c
  4333b8:	gs ins DWORD PTR es:[edi],dx
  4333ba:	cs push edx
  4333bc:	jne    0x43342c
  4333be:	je     0x433429
  4333c0:	ins    DWORD PTR es:[edi],dx
  4333c1:	gs cs dec ecx
  4333c4:	outs   dx,BYTE PTR ds:[esi]
  4333c5:	je     0x43342c
  4333c7:	jb     0x433438
  4333c9:	jo     0x43341e
  4333cb:	gs jb  0x433444
  4333ce:	imul   esp,DWORD PTR [ebx+0x65],0x75470073
  4333d5:	imul   esp,DWORD PTR [ecx+eax*2+0x74],0x62697274
  4333dd:	jne    0x433453
  4333df:	add    BYTE PTR gs:[edx+0x75],dl
  4333e3:	outs   dx,BYTE PTR ds:[esi]
  4333e4:	je     0x43344f
  4333e6:	ins    DWORD PTR es:[edi],dx
  4333e7:	gs inc esi
  4333e9:	imul   esp,DWORD PTR [ebp+0x6c],0x6e614864
  4333f0:	fs ins BYTE PTR es:[edi],dx
  4333f2:	add    BYTE PTR gs:[edx+0x75],dl
  4333f6:	outs   dx,BYTE PTR ds:[esi]
  4333f7:	je     0x433462
  4333f9:	ins    DWORD PTR es:[edi],dx
  4333fa:	gs dec ebp
  4333fc:	gs je  0x433467
  4333ff:	outs   dx,DWORD PTR ds:[esi]
  433400:	fs dec eax
  433402:	popa   
  433403:	outs   dx,BYTE PTR ds:[esi]
  433404:	fs ins BYTE PTR es:[edi],dx
  433406:	add    BYTE PTR gs:[edx+0x75],dl
  43340a:	outs   dx,BYTE PTR ds:[esi]
  43340b:	je     0x433476
  43340d:	ins    DWORD PTR es:[edi],dx
  43340e:	gs push esp
  433410:	jns    0x433482
  433412:	gs dec eax
  433414:	popa   
  433415:	outs   dx,BYTE PTR ds:[esi]
  433416:	fs ins BYTE PTR es:[edi],dx
  433418:	add    BYTE PTR gs:[ebx+0x72],al
  43341c:	jns    0x43348e
  43341e:	je     0x43348f
  433420:	push   ebx
  433421:	je     0x433495
  433423:	gs popa 
  433425:	ins    DWORD PTR es:[edi],dx
  433426:	add    BYTE PTR [ebx+0x79],dl
  433429:	jae    0x43349f
  43342b:	gs ins DWORD PTR es:[edi],dx
  43342d:	cs push ebx
  43342f:	arpl   WORD PTR gs:[ebp+0x72],si
  433433:	imul   esi,DWORD PTR [ecx+edi*2+0x2e],0x70797243
  43343b:	je     0x4334ac
  43343d:	addr16 jb 0x4334a1
  433440:	jo     0x4334aa
  433442:	jns    0x433444
  433444:	inc    ebx
  433445:	jb     0x4334c0
  433447:	jo     0x4334bd
  433449:	outs   dx,DWORD PTR ds:[esi]
  43344a:	push   ebx
  43344b:	je     0x4334bf
  43344d:	gs popa 
  43344f:	ins    DWORD PTR es:[edi],dx
  433450:	dec    ebp
  433451:	outs   dx,DWORD PTR ds:[esi]
  433452:	fs add BYTE PTR gs:[ebp+eax*2+0x53],al
  433458:	inc    ebx
  433459:	jb     0x4334d4
  43345b:	jo     0x4334d1
  43345d:	outs   dx,DWORD PTR ds:[esi]
  43345e:	push   ebx
  43345f:	gs jb  0x4334d8
  433462:	imul   esp,DWORD PTR [ebx+0x65],0x766f7250
  433469:	imul   esp,DWORD PTR [ebp+eiz*2+0x72],0x73614800
  433471:	push   0x6f676c41
  433476:	jb     0x4334e1
  433478:	je     0x4334e2
  43347a:	ins    DWORD PTR es:[edi],dx
  43347b:	add    BYTE PTR [ecx+0x43],cl
  43347e:	jb     0x4334f9
  433480:	jo     0x4334f6
  433482:	outs   dx,DWORD PTR ds:[esi]
  433483:	push   esp
  433484:	jb     0x4334e7
  433486:	outs   dx,BYTE PTR ds:[esi]
  433487:	jae    0x4334ef
  433489:	outs   dx,DWORD PTR ds:[esi]
  43348a:	jb     0x4334f9
  43348c:	add    BYTE PTR [edx+0x69],dl
  43348f:	push   0x6e
  433491:	fs popa 
  433493:	gs ins BYTE PTR es:[edi],dx
  433495:	dec    ebp
  433496:	popa   
  433497:	outs   dx,BYTE PTR ds:[esi]
  433498:	popa   
  433499:	gs add BYTE PTR fs:[bp+di+0x48],dl
  43349f:	inc    ecx
  4334a0:	xor    eax,0x614d3231
  4334a5:	outs   dx,BYTE PTR ds:[esi]
  4334a6:	popa   
  4334a7:	gs add BYTE PTR fs:[bp+di+0x79],dl
  4334ad:	ins    DWORD PTR es:[edi],dx
  4334ae:	ins    DWORD PTR es:[edi],dx
  4334af:	gs je  0x433524
  4334b2:	imul   esp,DWORD PTR [ebx+0x41],0x726f676c
  4334b9:	imul   esi,DWORD PTR [eax+ebp*2+0x6d],0x736f4800
  4334c1:	je     0x433513
  4334c3:	jb     0x433534
  4334c5:	je     0x43352c
  4334c7:	arpl   WORD PTR [ecx+ebp*2+0x6f],si
  4334cb:	outs   dx,BYTE PTR ds:[esi]
  4334cc:	inc    ebp
  4334cd:	js     0x433532
  4334cf:	gs jo  0x433546
  4334d2:	imul   ebp,DWORD PTR [edi+0x6e],0x73795300
  4334d9:	je     0x433540
  4334db:	ins    DWORD PTR es:[edi],dx
  4334dc:	cs push ebx
  4334de:	arpl   WORD PTR gs:[ebp+0x72],si
  4334e2:	imul   esi,DWORD PTR [ecx+edi*2+0x0],0x676e6953
  4334ea:	ins    BYTE PTR es:[edi],dx
  4334eb:	add    BYTE PTR gs:[ebx+0x54],dl
  4334ef:	inc    ecx
  4334f0:	push   esp
  4334f1:	push   0x64616572
  4334f6:	inc    ecx
  4334f7:	je     0x43356d
  4334f9:	jb     0x433564
  4334fb:	bound  esi,QWORD PTR [ebp+0x74]
  4334fe:	add    BYTE PTR gs:[ebx+0x74],dl
  433502:	jb     0x43356d
  433504:	outs   dx,BYTE PTR ds:[esi]
  433505:	add    BYTE PTR [di+0x6e],al
  433509:	arpl   WORD PTR [edi+0x64],bp
  43350c:	imul   ebp,DWORD PTR [esi+0x67],0x73795300
  433513:	je     0x43357a
  433515:	ins    DWORD PTR es:[edi],dx
  433516:	cs push esp
  433518:	gs js  0x43358f
  43351b:	add    BYTE PTR [ebx+0x74],dl
  43351e:	jb     0x433589
  433520:	outs   dx,BYTE PTR ds:[esi]
  433521:	addr16 inc edx
  433523:	jne    0x43358e
  433525:	ins    BYTE PTR es:[edi],dx
  433526:	fs gs jb 0x43352a
  43352a:	dec    ebp
  43352b:	outs   dx,DWORD PTR ds:[esi]
  43352c:	outs   dx,BYTE PTR ds:[esi]
  43352d:	imul   esi,DWORD PTR [edi+ebp*2+0x72],0x73795300
  433535:	je     0x43359c
  433537:	ins    DWORD PTR es:[edi],dx
  433538:	cs push esp
  43353a:	push   0x64616572
  43353f:	imul   ebp,DWORD PTR [esi+0x67],0x72685400
  433546:	gs popa 
  433548:	add    BYTE PTR fs:[eax+ebp*2+0x72],dl
  43354d:	gs popa 
  43354f:	fs push ebx
  433551:	je     0x4335b4
  433553:	je     0x4335be
  433555:	arpl   WORD PTR [ecx+0x74],ax
  433558:	je     0x4335cc
  43355a:	imul   esp,DWORD PTR [edx+0x75],0x54006574
  433561:	jns    0x4335d3
  433563:	add    BYTE PTR gs:[ebp+0x49],dl
  433567:	outs   dx,BYTE PTR ds:[esi]
  433568:	je     0x43359b
  43356a:	add    BYTE PTR ss:[ebp+0x49],dl
  43356e:	outs   dx,BYTE PTR ds:[esi]
  43356f:	je     0x4335a4
  433571:	xor    al,BYTE PTR [eax]
  433573:	push   esi
  433574:	outs   dx,DWORD PTR ds:[esi]
  433575:	imul   esp,DWORD PTR [eax+eax*1+0x57],0x526b6165
  43357d:	gs data16 gs jb 0x4335e7
  433582:	outs   dx,BYTE PTR ds:[esi]
  433583:	arpl   WORD PTR [ebp+0x0],sp
  433586:	inc    ecx
  433587:	jo     0x4335f9
  433589:	ins    BYTE PTR es:[edi],dx
  43358a:	imul   esp,DWORD PTR [ebx+0x61],0x6e6f6974
  433591:	add    BYTE PTR [ecx+0x75],al
  433594:	je     0x433605
  433596:	push   ebx
  433597:	arpl   WORD PTR [ecx+0x6c],sp
  43359a:	gs dec ebp
  43359c:	outs   dx,DWORD PTR ds:[esi]
  43359d:	fs add BYTE PTR gs:[edx+0x6f],al
  4335a2:	jb     0x433608
  4335a4:	gs jb  0x4335fa
  4335a7:	je     0x433622
  4335a9:	ins    BYTE PTR es:[edi],dx
  4335aa:	add    BYTE PTR gs:[edx+0x75],al
  4335ae:	je     0x433624
  4335b0:	outs   dx,DWORD PTR ds:[esi]
  4335b1:	outs   dx,BYTE PTR ds:[esi]
  4335b2:	add    BYTE PTR [edx+0x75],al
  4335b5:	je     0x43362b
  4335b7:	outs   dx,DWORD PTR ds:[esi]
  4335b8:	outs   dx,BYTE PTR ds:[esi]
  4335b9:	inc    edx
  4335ba:	popa   
  4335bb:	jae    0x433622
  4335bd:	add    BYTE PTR [ebx+0x6f],al
  4335c0:	outs   dx,BYTE PTR ds:[esi]
  4335c1:	je     0x433624
  4335c3:	imul   ebp,DWORD PTR [esi+0x65],0x6e6f4372
  4335ca:	je     0x43363e
  4335cc:	outs   dx,DWORD PTR ds:[esi]
  4335cd:	ins    BYTE PTR es:[edi],dx
  4335ce:	add    BYTE PTR [ebx+0x6f],al
  4335d1:	outs   dx,BYTE PTR ds:[esi]
  4335d2:	je     0x433646
  4335d4:	outs   dx,DWORD PTR ds:[esi]
  4335d5:	ins    BYTE PTR es:[edi],dx
  4335d6:	add    BYTE PTR [ebx+0x6f],al
  4335d9:	outs   dx,BYTE PTR ds:[esi]
  4335da:	je     0x43364e
  4335dc:	outs   dx,DWORD PTR ds:[esi]
  4335dd:	ins    BYTE PTR es:[edi],dx
  4335de:	inc    ebx
  4335df:	outs   dx,DWORD PTR ds:[esi]
  4335e0:	ins    BYTE PTR es:[edi],dx
  4335e1:	ins    BYTE PTR es:[edi],dx
  4335e2:	arpl   WORD PTR gs:[ecx+ebp*2+0x6f],si
  4335e7:	outs   dx,BYTE PTR ds:[esi]
  4335e8:	add    BYTE PTR [ecx+ebp*2+0x61],al
  4335ec:	ins    BYTE PTR es:[edi],dx
  4335ed:	outs   dx,DWORD PTR ds:[esi]
  4335ee:	addr16 push edx
  4335f0:	gs jae 0x433668
  4335f3:	ins    BYTE PTR es:[edi],dx
  4335f4:	je     0x4335f6
  4335f6:	inc    esi
  4335f7:	outs   dx,DWORD PTR ds:[esi]
  4335f8:	jb     0x433667
  4335fa:	add    BYTE PTR [ecx+eiz*2+0x62],cl
  4335fe:	gs ins BYTE PTR es:[edi],dx
  433600:	add    BYTE PTR [ebp+0x65],cl
  433603:	jae    0x433678
  433605:	popa   
  433606:	addr16 gs inc edx
  433609:	outs   dx,DWORD PTR ds:[esi]
  43360a:	js     0x43360c
  43360c:	push   eax
  43360d:	imul   esp,DWORD PTR [ebx+0x74],0x42657275
  433614:	outs   dx,DWORD PTR ds:[esi]
  433615:	js     0x433617
  433617:	push   eax
  433618:	imul   esp,DWORD PTR [ebx+0x74],0x42657275
  43361f:	outs   dx,DWORD PTR ds:[esi]
  433620:	js     0x433675
  433622:	imul   edi,DWORD PTR [edx+0x65],0x65646f4d
  433629:	add    BYTE PTR [ebp+eiz*2+0x78],dl
  43362d:	je     0x433671
  43362f:	outs   dx,DWORD PTR ds:[esi]
  433630:	js     0x433632
  433632:	push   esp
  433633:	gs js  0x4336aa
  433636:	inc    edx
  433637:	outs   dx,DWORD PTR ds:[esi]
  433638:	js     0x43367c
  43363a:	popa   
  43363b:	jae    0x4336a2
  43363d:	add    BYTE PTR [ecx*2+0x6c75646f],bh
  433644:	gs add BYTE PTR ds:[ecx],al
  433648:	add    BYTE PTR [ecx+0x0],al
  43364b:	inc    ecx
  43364c:	jae    0x4336c1
  43364e:	gs ins DWORD PTR es:[edi],dx
  433650:	bound  ebp,QWORD PTR [ecx+edi*2+0x49]
  433654:	outs   dx,BYTE PTR ds:[esi]
  433655:	outs   dx,WORD PTR ds:[esi]
  433657:	inc    ecx
  433658:	je     0x4336ce
  43365a:	jb     0x4336c5
  43365c:	bound  esi,QWORD PTR [ebp+0x74]
  43365f:	add    BYTE PTR gs:[edx],al
  433662:	add    BYTE PTR ds:0x3000600,cl
  433668:	add    BYTE PTR [eax+eax*1],al
  43366b:	add    eax,0x46003160
  433670:	outs   dx,DWORD PTR ds:[esi]
  433671:	jb     0x4336e0
  433673:	xor    DWORD PTR [eax],eax
  433675:	push   esp
  433676:	popa   
  433677:	jae    0x4336e4
  433679:	dec    ebp
  43367a:	popa   
  43367b:	outs   dx,BYTE PTR ds:[esi]
  43367c:	popa   
  43367d:	addr16 gs jb 0x433681
  433681:	pop    es
  433682:	add    BYTE PTR [ebx+0x72],al
  433685:	arpl   WORD PTR [ebx],si
  433687:	xor    al,BYTE PTR [eax]
  433689:	or     BYTE PTR [eax],al
  43368b:	dec    ebp
  43368c:	jns    0x4336e1
  43368e:	gs je  0x433705
  433691:	imul   ebp,DWORD PTR [esi+0x67],0x61540073
  433698:	jae    0x433705
  43369a:	dec    ebp
  43369b:	popa   
  43369c:	outs   dx,BYTE PTR ds:[esi]
  43369d:	popa   
  43369e:	addr16 gs jb 0x4336d0
  4336a2:	dec    ebp
  4336a3:	jns    0x4336a5
  4336a5:	or     al,0x0
  4336a7:	or     DWORD PTR [eax],eax
  4336a9:	or     eax,DWORD PTR [eax]
  4336ab:	or     al,BYTE PTR [eax]
  4336ad:	str    WORD PTR [esi]
  4336b0:	add    BYTE PTR [esi],ch
  4336b2:	arpl   WORD PTR [ebx+0x74],sp
  4336b5:	outs   dx,DWORD PTR ds:[esi]
  4336b6:	jb     0x4336b8
  4336b8:	arpl   WORD PTR cs:[edi+ebp*2+0x72],si
  4336bd:	add    BYTE PTR [edi+0x6e],cl
  4336c0:	inc    ebx
  4336c1:	jb     0x433728
  4336c3:	popa   
  4336c4:	je     0x43372b
  4336c6:	dec    ebp
  4336c7:	popa   
  4336c8:	imul   ebp,DWORD PTR [esi+0x46],0x6d726f
  4336cf:	jae    0x433745
  4336d1:	jb     0x4336d3
  4336d3:	add    eax,0x74656700
  4336d8:	pop    edi
  4336d9:	push   es
  4336da:	add    BYTE PTR [edi+0x65],ah
  4336dd:	je     0x43373e
  4336df:	pop    es
  4336e0:	add    BYTE PTR [edi+0x65],ah
  4336e3:	je     0x433744
  4336e5:	or     BYTE PTR [eax],al
  4336e7:	addr16 gs je 0x43374a
  4336eb:	or     DWORD PTR [eax],eax
  4336ed:	addr16 gs je 0x433750
  4336f1:	or     al,BYTE PTR [eax]
  4336f3:	addr16 gs je 0x433756
  4336f7:	add    eax,DWORD PTR [eax]
  4336f9:	jae    0x433760
  4336fb:	je     0x43375c
  4336fd:	add    eax,DWORD PTR [eax]
  4336ff:	inc    ebp
  433700:	jno    0x433777
  433702:	popa   
  433703:	ins    BYTE PTR es:[edi],dx
  433704:	jae    0x433706
  433706:	outs   dx,DWORD PTR ds:[esi]
  433707:	add    BYTE PTR [edi+0x65],al
  43370a:	je     0x433754
  43370c:	popa   
  43370d:	jae    0x433777
  43370f:	inc    ebx
  433710:	outs   dx,DWORD PTR ds:[esi]
  433711:	fs add BYTE PTR gs:[edi+ebp*2+0x53],dl
  433717:	je     0x43378b
  433719:	imul   ebp,DWORD PTR [esi+0x67],0x74656700
  433720:	pop    edi
  433721:	add    al,BYTE PTR [eax]
  433723:	adc    BYTE PTR [eax],al
  433725:	adc    DWORD PTR [eax],eax
  433727:	adc    al,BYTE PTR [eax]
  433729:	pop    ds
  43372a:	add    BYTE PTR [ecx+ebp*2+0x73],al
  43372e:	jo     0x43379f
  433730:	jae    0x433797
  433732:	add    BYTE PTR [ecx+ebp*2+0x73],ah
  433736:	jo     0x4337a7
  433738:	jae    0x4337a3
  43373a:	outs   dx,BYTE PTR ds:[esi]
  43373b:	add    BYTE PTR [bx+si],ah
  43373e:	add    BYTE PTR [edi+0x65],ah
  433741:	je     0x4337a2
  433743:	adc    eax,DWORD PTR [eax]
  433745:	jae    0x4337ac
  433747:	je     0x4337a8
  433749:	adc    eax,DWORD PTR [eax]
  43374b:	addr16 gs je 0x4337ae
  43374f:	adc    al,0x0
  433751:	jae    0x4337b8
  433753:	je     0x4337b4
  433755:	adc    al,0x0
  433757:	addr16 gs je 0x4337ba
  43375b:	adc    eax,0x74657300
  433760:	pop    edi
  433761:	adc    eax,0x74656700
  433766:	pop    edi
  433767:	push   ss
  433768:	add    BYTE PTR [ebx+0x65],dh
  43376b:	je     0x4337cc
  43376d:	push   ss
  43376e:	add    BYTE PTR [edi+0x65],ah
  433771:	je     0x4337d2
  433773:	pop    ss
  433774:	add    BYTE PTR [ebx+0x65],dh
  433777:	je     0x4337d8
  433779:	pop    ss
  43377a:	add    BYTE PTR [edi+0x65],ah
  43377d:	je     0x4337de
  43377f:	sbb    BYTE PTR [eax],al
  433781:	jae    0x4337e8
  433783:	je     0x4337e4
  433785:	sbb    BYTE PTR [eax],al
  433787:	addr16 gs je 0x4337ea
  43378b:	sbb    DWORD PTR [eax],eax
  43378d:	jae    0x4337f4
  43378f:	je     0x4337f0
  433791:	sbb    DWORD PTR [eax],eax
  433793:	addr16 gs je 0x4337f6
  433797:	sbb    al,BYTE PTR [eax]
  433799:	jae    0x433800
  43379b:	je     0x4337fc
  43379d:	sbb    al,BYTE PTR [eax]
  43379f:	addr16 gs je 0x433802
  4337a3:	sbb    eax,DWORD PTR [eax]
  4337a5:	jae    0x43380c
  4337a7:	je     0x433808
  4337a9:	sbb    eax,DWORD PTR [eax]
  4337ab:	addr16 gs je 0x43380e
  4337af:	sbb    al,0x0
  4337b1:	jae    0x433818
  4337b3:	je     0x433814
  4337b5:	sbb    al,0x0
  4337b7:	addr16 gs je 0x43381a
  4337bb:	sbb    eax,0x74657300
  4337c0:	pop    edi
  4337c1:	sbb    eax,0x74656700
  4337c6:	pop    edi
  4337c7:	push   ds
  4337c8:	add    BYTE PTR [ebx+0x65],dh
  4337cb:	je     0x43382c
  4337cd:	push   ds
  4337ce:	add    BYTE PTR [ecx],al
  4337d0:	add    al,BYTE PTR [eax]
  4337d2:	fs ins BYTE PTR es:[edi],dx
  4337d4:	inc    esp
  4337d5:	gs jae 0x433843
  4337d8:	je     0x433849
  4337da:	jo     0x433822
  4337dc:	imul   ebp,DWORD PTR [ebp+eiz*2+0x0],0x614d6c64
  4337e4:	imul   ebp,DWORD PTR [esi+0x46],0x656c69
  4337eb:	inc    edi
  4337ec:	gs je  0x433864
  4337ef:	dec    ecx
  4337f0:	inc    esp
  4337f1:	add    BYTE PTR [edi+0x65],al
  4337f4:	je     0x433838
  4337f6:	imul   esi,DWORD PTR [ebx+eiz*2+0x6f],0x64416e69
  4337fe:	fs jb  0x433866
  433801:	jae    0x433876
  433803:	add    BYTE PTR [ebp+0x73],dl
  433806:	gs inc edx
  433808:	imul   esi,DWORD PTR [ebx+eiz*2+0x6f],0x64416e69
  433810:	fs jb  0x433878
  433813:	jae    0x433888
  433815:	add    BYTE PTR [edi+0x65],ah
  433818:	je     0x43386a
  43381a:	popa   
  43381b:	jae    0x433890
  43381d:	ja     0x43388e
  43381f:	jb     0x433885
  433821:	add    BYTE PTR [ebp+0x6e],al
  433824:	arpl   WORD PTR [edx+0x79],si
  433827:	jo     0x43389d
  433829:	inc    esi
  43382a:	imul   ebp,DWORD PTR [ebp+eiz*2+0x73],0x74615000
  433832:	push   0x74787400
  433837:	push   eax
  433838:	popa   
  433839:	jae    0x4338ae
  43383b:	inc    ebp
  43383c:	outs   dx,BYTE PTR ds:[esi]
  43383d:	arpl   WORD PTR [edx+0x79],si
  433840:	jo     0x4338b6
  433842:	push   edx
  433843:	popa   
  433844:	ja     0x433846
  433846:	inc    esp
  433847:	arpl   WORD PTR gs:[edx+0x79],si
  43384b:	jo     0x4338c1
  43384d:	inc    esi
  43384e:	imul   ebp,DWORD PTR [ebp+eiz*2+0x73],0x63654400
  433856:	jb     0x4338d1
  433858:	jo     0x4338ce
  43385a:	dec    ebx
  43385b:	gs jns 0x43385e
  43385e:	add    al,BYTE PTR [edx]
  433860:	add    BYTE PTR [ebx],al
  433862:	add    al,BYTE PTR [eax]
  433864:	add    al,0x2
  433866:	add    BYTE PTR [edi+0x65],al
  433869:	je     0x4338b8
  43386b:	inc    ecx
  43386c:	inc    ebx
  43386d:	add    BYTE PTR ds:0x2060002,al
  433873:	add    BYTE PTR [esi+0x61],dh
  433876:	ins    BYTE PTR es:[edi],dx
  433877:	jne    0x4338de
  433879:	pop    edi
  43387a:	pop    edi
  43387b:	add    BYTE PTR [ebx+0x6f],al
  43387e:	ins    DWORD PTR es:[edi],dx
  43387f:	jo     0x4338f6
  433881:	je     0x4338e8
  433883:	inc    ebx
  433884:	push   0x736b6365
  433889:	jne    0x4338f8
  43388b:	add    BYTE PTR [edx+0x79],ah
  43388e:	je     0x4338f5
  433890:	jae    0x433892
  433892:	push   ebx
  433893:	je     0x433907
  433895:	add    BYTE PTR [edi+0x65],ah
  433898:	je     0x4338f9
  43389a:	push   edx
  43389b:	gs jae 0x43390d
  43389e:	jne    0x433912
  4338a0:	arpl   WORD PTR [ebp+0x4d],sp
  4338a3:	popa   
  4338a4:	outs   dx,BYTE PTR ds:[esi]
  4338a5:	popa   
  4338a6:	addr16 gs jb 0x4338aa
  4338aa:	addr16 gs je 0x43390d
  4338ae:	inc    ebx
  4338af:	jne    0x43391d
  4338b1:	je     0x433928
  4338b3:	jb     0x43391a
  4338b5:	add    BYTE PTR [ebx+0x65],dh
  4338b8:	je     0x433919
  4338ba:	inc    ebx
  4338bb:	jne    0x433929
  4338bd:	je     0x433934
  4338bf:	jb     0x433926
  4338c1:	add    BYTE PTR [esi+0x61],dl
  4338c4:	ins    BYTE PTR es:[edi],dx
  4338c5:	jne    0x43392c
  4338c7:	add    BYTE PTR [ebp+eiz*2+0x66],ah
  4338cb:	popa   
  4338cc:	jne    0x43393a
  4338ce:	je     0x433919
  4338d0:	outs   dx,BYTE PTR ds:[esi]
  4338d1:	jae    0x433947
  4338d3:	popa   
  4338d4:	outs   dx,BYTE PTR ds:[esi]
  4338d5:	arpl   WORD PTR [ebp+0x0],sp
  4338d8:	popa   
  4338d9:	fs fs gs fs dec eax
  4338de:	popa   
  4338df:	outs   dx,BYTE PTR ds:[esi]
  4338e0:	fs ins BYTE PTR es:[edi],dx
  4338e2:	gs jb  0x4338e5
  4338e5:	popa   
  4338e6:	fs fs gs fs dec eax
  4338eb:	popa   
  4338ec:	outs   dx,BYTE PTR ds:[esi]
  4338ed:	fs ins BYTE PTR es:[edi],dx
  4338ef:	gs jb  0x43393e
  4338f2:	outs   dx,DWORD PTR ds:[esi]
  4338f3:	arpl   WORD PTR [ebx+0x4f],bp
  4338f6:	bound  ebp,QWORD PTR [edx+0x65]
  4338f9:	arpl   WORD PTR [eax+eax*1+0x41],si
  4338fd:	jne    0x433973
  4338ff:	outs   dx,DWORD PTR ds:[esi]
  433900:	push   ebx
  433901:	popa   
  433902:	jbe    0x433969
  433904:	push   ebx
  433905:	gs je  0x43397c
  433908:	imul   ebp,DWORD PTR [esi+0x67],0x65730073
  43390f:	outs   dx,BYTE PTR ds:[esi]
  433910:	fs gs jb 0x433914
  433914:	add    BYTE PTR gs:[edi+0x65],ah
  433918:	je     0x433979
  43391a:	inc    esp
  43391b:	gs popaw 
  43391e:	jne    0x43398c
  433920:	je     0x433922
  433922:	addr16 gs je 0x433985
  433926:	push   ebx
  433927:	gs je  0x43399e
  43392a:	imul   ebp,DWORD PTR [esi+0x67],0x75430073
  433931:	ins    BYTE PTR es:[edi],dx
  433932:	je     0x4339a9
  433934:	jb     0x43399b
  433936:	add    BYTE PTR [ebp+eiz*2+0x66],al
  43393a:	popa   
  43393b:	jne    0x4339a9
  43393d:	je     0x43393f
  43393f:	push   ebx
  433940:	gs je  0x4339b7
  433943:	imul   ebp,DWORD PTR [esi+0x67],0x65730073
  43394a:	je     0x4339ab
  43394c:	dec    ecx
  43394d:	jae    0x4339a2
  43394f:	imul   ebp,DWORD PTR [esi+0x67],0x6e49656c
  433956:	jae    0x4339cc
  433958:	popa   
  433959:	outs   dx,BYTE PTR ds:[esi]
  43395a:	arpl   WORD PTR [ebp+0x0],sp
  43395d:	jae    0x4339c4
  43395f:	je     0x4339c0
  433961:	inc    ebp
  433962:	outs   dx,BYTE PTR ds:[esi]
  433963:	popa   
  433964:	bound  ebp,QWORD PTR [ebp+eiz*2+0x56]
  433968:	imul   esi,DWORD PTR [ebx+0x75],0x74536c61
  43396f:	jns    0x4339dd
  433971:	gs jae 0x433974
  433974:	jae    0x4339db
  433976:	je     0x4339d7
  433978:	push   ebx
  433979:	popa   
  43397a:	jbe    0x4339e1
  43397c:	dec    ebp
  43397d:	jns    0x4339d2
  43397f:	gs je  0x4339f6
  433982:	imul   ebp,DWORD PTR [esi+0x67],0x456e4f73
  433989:	js     0x4339f4
  43398b:	je     0x43398d
  43398d:	jae    0x4339f4
  43398f:	je     0x4339f0
  433991:	push   ebx
  433992:	push   0x6f647475
  433997:	ja     0x433a07
  433999:	push   ebx
  43399a:	je     0x433a15
  43399c:	ins    BYTE PTR es:[edi],dx
  43399d:	add    BYTE PTR gs:[ebp+0x6e],al
  4339a1:	je     0x433a08
  4339a3:	jb     0x4339a5
  4339a5:	addr16 gs je 0x433a08
  4339a9:	inc    ebx
  4339aa:	outs   dx,DWORD PTR ds:[esi]
  4339ab:	jne    0x433a1b
  4339ad:	je     0x4339af
  4339af:	addr16 gs je 0x433a12
  4339b3:	inc    ebx
  4339b4:	popa   
  4339b5:	jo     0x433a18
  4339b7:	arpl   WORD PTR [ecx+0x74],bp
  4339ba:	jns    0x4339bc
  4339bc:	addr16 gs je 0x433a1f
  4339c0:	dec    ecx
  4339c1:	je     0x433a28
  4339c3:	ins    DWORD PTR es:[edi],dx
  4339c4:	add    BYTE PTR [edi+0x65],ah
  4339c7:	je     0x433a28
  4339c9:	dec    ecx
  4339ca:	jae    0x433a0d
  4339cc:	ins    BYTE PTR es:[edi],dx
  4339cd:	imul   esi,DWORD PTR [esi+0x65],0x74657300
  4339d4:	pop    edi
  4339d5:	dec    ecx
  4339d6:	je     0x433a3d
  4339d8:	ins    DWORD PTR es:[edi],dx
  4339d9:	add    BYTE PTR [edx+0x65],dl
  4339dc:	ins    DWORD PTR es:[edi],dx
  4339dd:	outs   dx,DWORD PTR ds:[esi]
  4339de:	jbe    0x433a45
  4339e0:	push   edx
  4339e1:	popa   
  4339e2:	outs   dx,BYTE PTR ds:[esi]
  4339e3:	add    BYTE PTR gs:[bp+di+0x65],dh
  4339e8:	je     0x433a49
  4339ea:	inc    ebx
  4339eb:	popa   
  4339ec:	jo     0x433a4f
  4339ee:	arpl   WORD PTR [ecx+0x74],bp
  4339f1:	jns    0x4339f3
  4339f3:	inc    edi
  4339f4:	gs je  0x433a46
  4339f7:	bound  ebp,QWORD PTR [edx+0x65]
  4339fa:	arpl   WORD PTR [esi+edx*2+0x61],si
  4339fe:	ins    BYTE PTR es:[edi],dx
  4339ff:	jne    0x433a66
  433a01:	add    BYTE PTR [ecx+0x64],al
  433a04:	add    BYTE PTR fs:[ebp+0x78],al
  433a08:	imul   esi,DWORD PTR [eax+eax*1+0x67],0x555f7465
  433a10:	jae    0x433a77
  433a12:	inc    ebx
  433a13:	outs   dx,DWORD PTR ds:[esi]
  433a14:	ins    DWORD PTR es:[edi],dx
  433a15:	jo     0x433a78
  433a17:	je     0x433a82
  433a19:	bound  ebp,QWORD PTR [ebp+eiz*2+0x54]
  433a1d:	gs js  0x433a94
  433a20:	push   edx
  433a21:	outs   dx,BYTE PTR gs:[esi]
  433a23:	fs gs jb 0x433a90
  433a27:	outs   dx,BYTE PTR ds:[esi]
  433a28:	add    BYTE PTR [bp+di+0x65],dl
  433a2c:	je     0x433a71
  433a2e:	outs   dx,DWORD PTR ds:[esi]
  433a2f:	ins    DWORD PTR es:[edi],dx
  433a30:	jo     0x433a93
  433a32:	je     0x433a9d
  433a34:	bound  ebp,QWORD PTR [ebp+eiz*2+0x54]
  433a38:	gs js  0x433aaf
  433a3b:	push   edx
  433a3c:	outs   dx,BYTE PTR gs:[esi]
  433a3e:	fs gs jb 0x433aab
  433a42:	outs   dx,BYTE PTR ds:[esi]
  433a43:	addr16 inc esp
  433a45:	gs popaw 
  433a48:	jne    0x433ab6
  433a4a:	je     0x433a4c
  433a4c:	push   edx
  433a4d:	jne    0x433abd
  433a4f:	add    BYTE PTR [ebx+0x65],dh
  433a52:	je     0x433ab3
  433a54:	dec    ebp
  433a55:	popa   
  433a56:	imul   ebp,DWORD PTR [esi+0x46],0x6d726f
  433a5d:	addr16 gs je 0x433ac0
  433a61:	inc    ebx
  433a62:	jne    0x433ad6
  433a64:	jb     0x433acb
  433a66:	outs   dx,BYTE PTR ds:[esi]
  433a67:	je     0x433aad
  433a69:	outs   dx,DWORD PTR ds:[esi]
  433a6a:	ins    DWORD PTR es:[edi],dx
  433a6b:	popa   
  433a6c:	imul   ebp,DWORD PTR [esi+0x0],0x5f646461
  433a73:	push   edx
  433a74:	gs jae 0x433ae6
  433a77:	jne    0x433aeb
  433a79:	arpl   WORD PTR [ebp+0x52],sp
  433a7c:	gs jae 0x433aee
  433a7f:	ins    BYTE PTR es:[edi],dx
  433a80:	jbe    0x433ae7
  433a82:	add    BYTE PTR [ecx+0x64],ah
  433a85:	fs pop edi
  433a87:	inc    ecx
  433a88:	jae    0x433afd
  433a8a:	gs ins DWORD PTR es:[edi],dx
  433a8c:	bound  ebp,QWORD PTR [ecx+edi*2+0x52]
  433a90:	gs jae 0x433b02
  433a93:	ins    BYTE PTR es:[edi],dx
  433a94:	jbe    0x433afb
  433a96:	add    BYTE PTR [edi+0x65],al
  433a99:	je     0x433ae0
  433a9b:	js     0x433b02
  433a9d:	arpl   WORD PTR [ebp+0x74],si
  433aa0:	imul   ebp,DWORD PTR [esi+0x67],0x65737341
  433aa7:	ins    DWORD PTR es:[edi],dx
  433aa8:	bound  ebp,QWORD PTR [ecx+edi*2+0x0]
  433aac:	dec    esp
  433aad:	outs   dx,DWORD PTR ds:[esi]
  433aae:	popa   
  433aaf:	add    BYTE PTR fs:[edi+0x65],ah
  433ab3:	je     0x433b14
  433ab5:	dec    esi
  433ab6:	popa   
  433ab7:	ins    DWORD PTR es:[edi],dx
  433ab8:	add    BYTE PTR gs:[ebx+0x74],dl
  433abc:	popa   
  433abd:	jb     0x433b33
  433abf:	jae    0x433b18
  433ac1:	imul   esi,DWORD PTR [eax+ebp*2+0x0],0x4d746547
  433ac9:	popa   
  433aca:	outs   dx,BYTE PTR ds:[esi]
  433acb:	imul   esp,DWORD PTR [esi+0x65],0x65527473
  433ad2:	jae    0x433b43
  433ad4:	jne    0x433b48
  433ad6:	arpl   WORD PTR [ebp+0x53],sp
  433ad9:	je     0x433b4d
  433adb:	gs popa 
  433add:	ins    DWORD PTR es:[edi],dx
  433ade:	add    BYTE PTR [edi+0x65],ah
  433ae1:	je     0x433b42
  433ae3:	inc    esi
  433ae4:	jne    0x433b52
  433ae6:	ins    BYTE PTR es:[edi],dx
  433ae7:	dec    esi
  433ae8:	popa   
  433ae9:	ins    DWORD PTR es:[edi],dx
  433aea:	add    BYTE PTR gs:[ecx+0x6e],cl
  433aee:	fs gs js 0x433b41
  433af2:	data16 add BYTE PTR [ebx+0x75],dl
  433af6:	bound  esi,QWORD PTR [ebx+0x74]
  433af9:	jb     0x433b64
  433afb:	outs   dx,BYTE PTR ds:[esi]
  433afc:	add    BYTE PTR [bp+di+0x6f],al
  433b00:	outs   dx,BYTE PTR ds:[esi]
  433b01:	arpl   WORD PTR [ecx+0x74],sp
  433b04:	add    BYTE PTR [edi+0x65],al
  433b07:	je     0x433b56
  433b09:	popa   
  433b0a:	outs   dx,BYTE PTR ds:[esi]
  433b0b:	imul   esp,DWORD PTR [esi+0x65],0x65527473
  433b12:	jae    0x433b83
  433b14:	jne    0x433b88
  433b16:	arpl   WORD PTR [ebp+0x4e],sp
  433b19:	popa   
  433b1a:	ins    DWORD PTR es:[edi],dx
  433b1b:	gs jae 0x433b1e
  433b1e:	outs   dx,DWORD PTR ds:[esi]
  433b1f:	jo     0x433b80
  433b21:	inc    ebp
  433b22:	jno    0x433b99
  433b24:	popa   
  433b25:	ins    BYTE PTR es:[edi],dx
  433b26:	imul   esi,DWORD PTR [ecx+edi*2+0x0],0x5f746567
  433b2e:	dec    ecx
  433b2f:	jae    0x433b75
  433b31:	imul   esi,DWORD PTR [ebx+0x70],0x6465736f
  433b38:	add    BYTE PTR [edi+0x65],al
  433b3b:	je     0x433b91
  433b3d:	jns    0x433baf
  433b3f:	gs inc esi
  433b41:	jb     0x433bb2
  433b43:	ins    DWORD PTR es:[edi],dx
  433b44:	dec    eax
  433b45:	popa   
  433b46:	outs   dx,BYTE PTR ds:[esi]
  433b47:	fs ins BYTE PTR es:[edi],dx
  433b49:	add    BYTE PTR gs:[ebx+0x6f],al
  433b4d:	outs   dx,BYTE PTR ds:[esi]
  433b4e:	je     0x433bb1
  433b50:	imul   ebp,DWORD PTR [esi+0x73],0x79654b
  433b57:	inc    edi
  433b58:	gs je  0x433bad
  433b5b:	gs jae 0x433bcd
  433b5e:	jne    0x433bd2
  433b60:	arpl   WORD PTR [ebp+0x53],sp
  433b63:	je     0x433bd7
  433b65:	imul   ebp,DWORD PTR [esi+0x67],0x65724300
  433b6c:	popa   
  433b6d:	je     0x433bd4
  433b6f:	dec    ecx
  433b70:	outs   dx,BYTE PTR ds:[esi]
  433b71:	jae    0x433be7
  433b73:	popa   
  433b74:	outs   dx,BYTE PTR ds:[esi]
  433b75:	arpl   WORD PTR [ebp+0x0],sp
  433b78:	push   ebx
  433b79:	gs je  0x433bcc
  433b7c:	jb     0x433bed
  433b7e:	push   0x65
  433b80:	arpl   WORD PTR [ebp+eax*2+0x72],si
  433b84:	jb     0x433bf5
  433b86:	jb     0x433b88
  433b88:	addr16 gs je 0x433beb
  433b8c:	dec    ecx
  433b8d:	outs   dx,BYTE PTR ds:[esi]
  433b8e:	outs   dx,BYTE PTR ds:[esi]
  433b8f:	gs jb  0x433bd7
  433b92:	js     0x433bf7
  433b94:	gs jo  0x433c0b
  433b97:	imul   ebp,DWORD PTR [edi+0x6e],0x74656700
  433b9e:	pop    edi
  433b9f:	dec    ebp
  433ba0:	gs jae 0x433c16
  433ba3:	popa   
  433ba4:	add    BYTE PTR gs:[bp+di+0x6c],al
  433ba9:	gs popa 
  433bab:	jb     0x433bfd
  433bad:	jb     0x433c1e
  433baf:	push   0x65
  433bb1:	arpl   WORD PTR [ebp+eax*2+0x72],si
  433bb5:	jb     0x433c26
  433bb7:	jb     0x433bb9
  433bb9:	push   edx
  433bba:	gs ins DWORD PTR es:[edi],dx
  433bbc:	outs   dx,DWORD PTR ds:[esi]
  433bbd:	jbe    0x433c24
  433bbf:	add    BYTE PTR [ecx+0x64],ah
  433bc2:	fs pop edi
  433bc4:	dec    esp
  433bc5:	outs   dx,DWORD PTR ds:[esi]
  433bc6:	popa   
  433bc7:	add    BYTE PTR fs:[edx+0x65],al
  433bcb:	imul   ebp,DWORD PTR [bp+0x49],0x74696e
  433bd3:	push   ebx
  433bd4:	jne    0x433c49
  433bd6:	jo     0x433c3d
  433bd8:	outs   dx,BYTE PTR ds:[esi]
  433bd9:	fs dec esp
  433bdb:	popa   
  433bdc:	jns    0x433c4d
  433bde:	jne    0x433c54
  433be0:	add    BYTE PTR [edi+0x65],ah
  433be3:	je     0x433c44
  433be5:	push   eax
  433be6:	popa   
  433be7:	ins    BYTE PTR es:[edi],dx
  433be8:	gs inc edi
  433bea:	jb     0x433c51
  433bec:	outs   dx,BYTE PTR gs:[esi]
  433bee:	add    BYTE PTR [ebx+0x65],dh
  433bf1:	je     0x433c52
  433bf3:	inc    edx
  433bf4:	popa   
  433bf5:	arpl   WORD PTR [ebx+0x43],bp
  433bf8:	outs   dx,DWORD PTR ds:[esi]
  433bf9:	ins    BYTE PTR es:[edi],dx
  433bfa:	outs   dx,DWORD PTR ds:[esi]
  433bfb:	jb     0x433bfd
  433bfd:	jae    0x433c64
  433bff:	je     0x433c60
  433c01:	inc    esi
  433c02:	outs   dx,DWORD PTR ds:[esi]
  433c03:	outs   dx,BYTE PTR ds:[esi]
  433c04:	je     0x433c06
  433c06:	jae    0x433c6d
  433c08:	je     0x433c69
  433c0a:	dec    esp
  433c0b:	outs   dx,DWORD PTR ds:[esi]
  433c0c:	arpl   WORD PTR [ecx+0x74],sp
  433c0f:	imul   ebp,DWORD PTR [edi+0x6e],0x74657300
  433c16:	pop    edi
  433c17:	dec    esi
  433c18:	popa   
  433c19:	ins    DWORD PTR es:[edi],dx
  433c1a:	add    BYTE PTR gs:[ebx+0x65],dh
  433c1e:	je     0x433c7f
  433c20:	push   ebx
  433c21:	imul   edi,DWORD PTR [edx+0x65],0x74657300
  433c28:	pop    edi
  433c29:	push   esp
  433c2a:	popa   
  433c2b:	bound  ecx,QWORD PTR [ecx+0x6e]
  433c2e:	fs gs js 0x433c32
  433c32:	jae    0x433c99
  433c34:	je     0x433c95
  433c36:	push   esp
  433c37:	gs js  0x433cae
  433c3a:	add    BYTE PTR [ebx+0x65],dh
  433c3d:	je     0x433c9e
  433c3f:	push   ebp
  433c40:	jae    0x433ca7
  433c42:	push   esi
  433c43:	imul   esi,DWORD PTR [ebx+0x75],0x74536c61
  433c4a:	jns    0x433cb8
  433c4c:	gs inc edx
  433c4e:	popa   
  433c4f:	arpl   WORD PTR [ebx+0x43],bp
  433c52:	outs   dx,DWORD PTR ds:[esi]
  433c53:	ins    BYTE PTR es:[edi],dx
  433c54:	outs   dx,DWORD PTR ds:[esi]
  433c55:	jb     0x433c57
  433c57:	addr16 gs je 0x433cba
  433c5b:	inc    edi
  433c5c:	popa   
  433c5d:	imul   ebp,DWORD PTR [esi+0x73],0x6f726f62
  433c64:	add    BYTE PTR [edi+0x65],al
  433c67:	je     0x433cb8
  433c69:	bound  ebp,QWORD PTR [edx+0x65]
  433c6c:	arpl   WORD PTR [eax+eax*1+0x73],si
  433c70:	gs je  0x433cd2
  433c73:	dec    ecx
  433c74:	ins    DWORD PTR es:[edi],dx
  433c75:	popa   
  433c76:	add    BYTE PTR gs:[bp+di+0x65],dh
  433c7b:	je     0x433cdc
  433c7d:	push   ebx
  433c7e:	imul   edi,DWORD PTR [edx+0x65],0x65646f4d
  433c85:	add    BYTE PTR [ebx+0x65],dh
  433c88:	je     0x433ce9
  433c8a:	push   esp
  433c8b:	popa   
  433c8c:	bound  edx,QWORD PTR [ebx+0x74]
  433c8f:	outs   dx,DWORD PTR ds:[esi]
  433c90:	jo     0x433c92
  433c92:	jae    0x433cf9
  433c94:	je     0x433cf5
  433c96:	inc    ecx
  433c97:	jne    0x433d0d
  433c99:	outs   dx,DWORD PTR ds:[esi]
  433c9a:	push   ebx
  433c9b:	imul   edi,DWORD PTR [edx+0x65],0x74656700
  433ca2:	pop    edi
  433ca3:	push   edx
  433ca4:	gs add BYTE PTR fs:[ebx+0x65],dh
  433ca9:	je     0x433d0a
  433cab:	inc    esi
  433cac:	outs   dx,DWORD PTR ds:[esi]
  433cad:	jb     0x433d14
  433caf:	inc    ebx
  433cb0:	outs   dx,DWORD PTR ds:[esi]
  433cb1:	ins    BYTE PTR es:[edi],dx
  433cb2:	outs   dx,DWORD PTR ds:[esi]
  433cb3:	jb     0x433cb5
  433cb5:	addr16 gs je 0x433d18
  433cb9:	push   edi
  433cba:	push   0x657469
  433cbf:	jae    0x433d26
  433cc1:	je     0x433d22
  433cc3:	inc    edx
  433cc4:	outs   dx,DWORD PTR ds:[esi]
  433cc5:	jb     0x433d2b
  433cc7:	gs jb  0x433d1d
  433cca:	je     0x433d45
  433ccc:	ins    BYTE PTR es:[edi],dx
  433ccd:	add    BYTE PTR gs:[ebx+0x65],dh
  433cd1:	je     0x433d32
  433cd3:	dec    ebp
  433cd4:	jne    0x433d42
  433cd6:	je     0x433d41
  433cd8:	ins    BYTE PTR es:[edi],dx
  433cd9:	imul   ebp,DWORD PTR [esi+0x65],0x74657300
  433ce0:	pop    edi
  433ce1:	push   edx
  433ce2:	gs popa 
  433ce4:	fs dec edi
  433ce6:	outs   dx,BYTE PTR ds:[esi]
  433ce7:	ins    BYTE PTR es:[edi],dx
  433ce8:	jns    0x433cea
  433cea:	inc    edi
  433ceb:	gs je  0x433d41
  433cee:	je     0x433d62
  433cf0:	imul   ebp,DWORD PTR [esi+0x67],0x6f724600
  433cf7:	ins    DWORD PTR es:[edi],dx
  433cf8:	inc    ecx
  433cf9:	jb     0x433d62
  433cfb:	bound  eax,QWORD PTR [eax]
  433cfd:	addr16 gs je 0x433d60
  433d01:	dec    ebp
  433d02:	outs   dx,BYTE PTR gs:[esi]
  433d04:	jne    0x433d4e
  433d06:	imul   esp,DWORD PTR [edi+0x68],0x6867696c
  433d0d:	je     0x433d0f
  433d0f:	addr16 gs je 0x433d72
  433d13:	inc    edx
  433d14:	ins    BYTE PTR es:[edi],dx
  433d15:	popa   
  433d16:	arpl   WORD PTR [ebx+0x0],bp
  433d19:	jae    0x433d80
  433d1b:	je     0x433d7c
  433d1d:	inc    ecx
  433d1e:	jne    0x433d94
  433d20:	outs   dx,DWORD PTR ds:[esi]
  433d21:	push   ebx
  433d22:	arpl   WORD PTR [ecx+0x6c],sp
  433d25:	gs inc esp
  433d27:	imul   ebp,DWORD PTR [ebp+0x65],0x6f69736e
  433d2e:	outs   dx,BYTE PTR ds:[esi]
  433d2f:	jae    0x433d31
  433d31:	jae    0x433d98
  433d33:	je     0x433d94
  433d35:	inc    ecx
  433d36:	jne    0x433dac
  433d38:	outs   dx,DWORD PTR ds:[esi]
  433d39:	push   ebx
  433d3a:	arpl   WORD PTR [ecx+0x6c],sp
  433d3d:	gs dec ebp
  433d3f:	outs   dx,DWORD PTR ds:[esi]
  433d40:	fs add BYTE PTR gs:[ebx+0x65],dh
  433d45:	je     0x433da6
  433d47:	inc    ecx
  433d48:	jne    0x433dbe
  433d4a:	outs   dx,DWORD PTR ds:[esi]
  433d4b:	push   ebx
  433d4c:	arpl   WORD PTR [edx+0x6f],si
  433d4f:	ins    BYTE PTR es:[edi],dx
  433d50:	ins    BYTE PTR es:[edi],dx
  433d51:	add    BYTE PTR [ebx+0x65],dh
  433d54:	je     0x433db5
  433d56:	inc    ebx
  433d57:	ins    BYTE PTR es:[edi],dx
  433d58:	imul   esp,DWORD PTR [ebp+0x6e],0x7a695374
  433d5f:	add    BYTE PTR gs:[edi+0x65],ah
  433d63:	je     0x433dc4
  433d65:	inc    ebx
  433d66:	outs   dx,DWORD PTR ds:[esi]
  433d67:	outs   dx,BYTE PTR ds:[esi]
  433d68:	je     0x433ddc
  433d6a:	outs   dx,DWORD PTR ds:[esi]
  433d6b:	ins    BYTE PTR es:[edi],dx
  433d6c:	jae    0x433d6e
  433d6e:	jae    0x433dd5
  433d70:	je     0x433dd1
  433d72:	dec    ecx
  433d73:	arpl   WORD PTR [edi+0x6e],bp
  433d76:	add    BYTE PTR [ebp+0x6e],al
  433d79:	fs dec ecx
  433d7b:	outs   dx,BYTE PTR ds:[esi]
  433d7c:	imul   esi,DWORD PTR [eax+eax*1+0x52],0x6d757365
  433d84:	gs dec esp
  433d86:	popa   
  433d87:	jns    0x433df8
  433d89:	jne    0x433dff
  433d8b:	add    BYTE PTR [eax+0x65],dl
  433d8e:	jb     0x433df6
  433d90:	outs   dx,DWORD PTR ds:[esi]
  433d91:	jb     0x433e00
  433d93:	dec    esp
  433d94:	popa   
  433d95:	jns    0x433e06
  433d97:	jne    0x433e0d
  433d99:	add    BYTE PTR [edx+0x65],dh
  433d9c:	ins    DWORD PTR es:[edi],dx
  433d9d:	outs   dx,DWORD PTR ds:[esi]
  433d9e:	jbe    0x433e05
  433da0:	pop    edi
  433da1:	inc    ebx
  433da2:	ins    BYTE PTR es:[edi],dx
  433da3:	imul   esp,DWORD PTR [ebx+0x6b],0x64646100
  433daa:	pop    edi
  433dab:	inc    ebx
  433dac:	ins    BYTE PTR es:[edi],dx
  433dad:	imul   esp,DWORD PTR [ebx+0x6b],0x656c5300
  433db4:	gs jo  0x433db7
  433db7:	inc    esp
  433db8:	outs   dx,DWORD PTR ds:[esi]
  433db9:	inc    ebp
  433dba:	jbe    0x433e21
  433dbc:	outs   dx,BYTE PTR ds:[esi]
  433dbd:	je     0x433e32
  433dbf:	add    BYTE PTR [ebp+0x78],al
  433dc2:	imul   esi,DWORD PTR [ebx+0x74],0x65520073
  433dc9:	popa   
  433dca:	fs push esp
  433dcc:	outs   dx,DWORD PTR ds:[esi]
  433dcd:	inc    ebp
  433dce:	outs   dx,BYTE PTR ds:[esi]
  433dcf:	add    BYTE PTR fs:[edx+0x65],dl
  433dd3:	jo     0x433e41
  433dd5:	popa   
  433dd6:	arpl   WORD PTR [ebp+0x0],sp
  433dd9:	inc    edi
  433dda:	gs je  0x433e23
  433ddd:	outs   dx,DWORD PTR ds:[esi]
  433dde:	ins    BYTE PTR es:[edi],dx
  433ddf:	fs gs jb 0x433e33
  433de3:	popa   
  433de4:	je     0x433e4e
  433de6:	add    BYTE PTR [edi+0x65],ah
  433de9:	je     0x433e4a
  433deb:	push   edx
  433dec:	imul   esi,DWORD PTR gs:[bp+di+0x74],0x53007972
  433df5:	gs je  0x433e4e
  433df8:	popa   
  433df9:	ins    BYTE PTR es:[edi],dx
  433dfa:	jne    0x433e61
  433dfc:	add    BYTE PTR [edi+ebp*2+0x77],al
  433e00:	outs   dx,BYTE PTR ds:[esi]
  433e01:	ins    BYTE PTR es:[edi],dx
  433e02:	outs   dx,DWORD PTR ds:[esi]
  433e03:	popa   
  433e04:	fs inc esi
  433e06:	imul   ebp,DWORD PTR [ebp+eiz*2+0x0],0x5f746567
  433e0e:	push   ebx
  433e0f:	je     0x433e72
  433e11:	outs   dx,BYTE PTR ds:[esi]
  433e12:	fs popa 
  433e14:	jb     0x433e7a
  433e16:	dec    edi
  433e17:	jne    0x433e8d
  433e19:	jo     0x433e90
  433e1b:	je     0x433e1d
  433e1d:	jae    0x433e84
  433e1f:	je     0x433e80
  433e21:	inc    ecx
  433e22:	jb     0x433e8b
  433e24:	jne    0x433e93
  433e26:	outs   dx,BYTE PTR gs:[esi]
  433e28:	je     0x433e9d
  433e2a:	add    BYTE PTR [ebx+0x65],dh
  433e2d:	je     0x433e8e
  433e2f:	inc    esi
  433e30:	imul   ebp,DWORD PTR [ebp+eiz*2+0x4e],0x656d61
  433e38:	jae    0x433e9f
  433e3a:	je     0x433e9b
  433e3c:	push   ebp
  433e3d:	jae    0x433ea4
  433e3f:	push   ebx
  433e40:	push   0x456c6c65
  433e45:	js     0x433eac
  433e47:	arpl   WORD PTR [ebp+0x74],si
  433e4a:	add    BYTE PTR gs:[ebx+0x65],dh
  433e4e:	je     0x433eaf
  433e50:	inc    ebx
  433e51:	jb     0x433eb8
  433e53:	popa   
  433e54:	je     0x433ebb
  433e56:	dec    esi
  433e57:	outs   dx,DWORD PTR ds:[esi]
  433e58:	push   edi
  433e59:	imul   ebp,DWORD PTR [esi+0x64],0x7300776f
  433e60:	gs je  0x433ec2
  433e63:	push   edi
  433e64:	imul   ebp,DWORD PTR [esi+0x64],0x7453776f
  433e6b:	jns    0x433ed9
  433e6d:	add    BYTE PTR gs:[ebx+0x65],dh
  433e71:	je     0x433ed2
  433e73:	push   ebx
  433e74:	je     0x433ed7
  433e76:	jb     0x433eec
  433e78:	dec    ecx
  433e79:	outs   dx,BYTE PTR ds:[esi]
  433e7a:	outs   dx,WORD PTR ds:[esi]
  433e7c:	add    BYTE PTR [ebx+0x74],dl
  433e7f:	popa   
  433e80:	jb     0x433ef6
  433e82:	add    BYTE PTR [edi+0x61],dl
  433e85:	imul   esi,DWORD PTR [esi+eax*2+0x6f],0x69784572
  433e8d:	je     0x433e8f
  433e8f:	inc    ebx
  433e90:	jb     0x433ef7
  433e92:	popa   
  433e93:	je     0x433efa
  433e95:	push   eax
  433e96:	jb     0x433f07
  433e98:	push   0x65
  433e9a:	arpl   WORD PTR [ebp+eax*2+0x72],si
  433e9e:	jb     0x433f0f
  433ea0:	jb     0x433ea2
  433ea2:	inc    ebx
  433ea3:	jb     0x433f0a
  433ea5:	popa   
  433ea6:	je     0x433f0d
  433ea8:	inc    esp
  433ea9:	imul   esi,DWORD PTR [edx+0x65],0x726f7463
  433eb0:	jns    0x433eb2
  433eb2:	dec    esp
  433eb3:	popa   
  433eb4:	je     0x433f1b
  433eb6:	inc    edi
  433eb7:	gs je  0x433eba
  433eba:	dec    esi
  433ebb:	gs js  0x433f32
  433ebe:	add    BYTE PTR [edi+ebp*2+0x77],al
  433ec2:	outs   dx,BYTE PTR ds:[esi]
  433ec3:	ins    BYTE PTR es:[edi],dx
  433ec4:	outs   dx,DWORD PTR ds:[esi]
  433ec5:	popa   
  433ec6:	fs push ebx
  433ec8:	je     0x433f3c
  433eca:	imul   ebp,DWORD PTR [esi+0x67],0x74656700
  433ed1:	pop    edi
  433ed2:	inc    esi
  433ed3:	imul   ebp,DWORD PTR [ebp+eiz*2+0x53],0x65747379
  433edb:	ins    DWORD PTR es:[edi],dx
  433edc:	add    BYTE PTR [edi+0x72],dl
  433edf:	imul   esi,DWORD PTR [ebp+eiz*2+0x41],0x65546c6c
  433ee7:	js     0x433f5d
  433ee9:	add    BYTE PTR [ecx+0x70],al
  433eec:	jo     0x433f53
  433eee:	outs   dx,BYTE PTR ds:[esi]
  433eef:	add    BYTE PTR fs:[edi+0x65],al
  433ef3:	je     0x433f39
  433ef5:	imul   esi,DWORD PTR [edx+0x65],0x726f7463
  433efc:	imul   esp,DWORD PTR [ebp+0x73],0x74654700
  433f03:	inc    esi
  433f04:	imul   ebp,DWORD PTR [ebp+eiz*2+0x73],0x646e4500
  433f0c:	jae    0x433f65
  433f0e:	imul   esi,DWORD PTR [eax+ebp*2+0x0],0x5f746567
  433f16:	dec    esp
  433f17:	outs   dx,BYTE PTR gs:[esi]
  433f19:	addr16 je 0x433f84
  433f1c:	add    BYTE PTR [edi+ebp*2+0x44],dl
  433f20:	outs   dx,DWORD PTR ds:[esi]
  433f21:	jne    0x433f85
  433f23:	ins    BYTE PTR es:[edi],dx
  433f24:	add    BYTE PTR gs:[ebx+0x6f],al
  433f28:	outs   dx,BYTE PTR ds:[esi]
  433f29:	je     0x433f8c
  433f2b:	imul   ebp,DWORD PTR [esi+0x73],0x436f5400
  433f32:	push   0x72417261
  433f37:	jb     0x433f9a
  433f39:	jns    0x433f3b
  433f3b:	inc    edi
  433f3c:	gs je  0x433f94
  433f3f:	jo     0x433fb1
  433f41:	gs jb  0x433f86
  433f44:	outs   dx,DWORD PTR ds:[esi]
  433f45:	jne    0x433fb5
  433f47:	add    BYTE PTR fs:[ecx+0x73],al
  433f4b:	arpl   WORD PTR [eax],ax
  433f4d:	inc    ebx
  433f4e:	outs   dx,DWORD PTR ds:[esi]
  433f4f:	ins    DWORD PTR es:[edi],dx
  433f50:	jo     0x433fc7
  433f52:	je     0x433fb9
  433f54:	dec    eax
  433f55:	popa   
  433f56:	jae    0x433fc0
  433f58:	add    BYTE PTR [ebx+0x65],dl
  433f5b:	je     0x433fa9
  433f5d:	outs   dx,BYTE PTR gs:[esi]
  433f5f:	addr16 je 0x433fca
  433f62:	add    BYTE PTR [ebx+0x72],al
  433f65:	gs popa 
  433f67:	je     0x433fce
  433f69:	inc    ebp
  433f6a:	outs   dx,BYTE PTR ds:[esi]
  433f6b:	arpl   WORD PTR [edx+0x79],si
  433f6e:	jo     0x433fe4
  433f70:	outs   dx,DWORD PTR ds:[esi]
  433f71:	jb     0x433f73
  433f73:	inc    ebx
  433f74:	jb     0x433fdb
  433f76:	popa   
  433f77:	je     0x433fde
  433f79:	inc    esp
  433f7a:	arpl   WORD PTR gs:[edx+0x79],si
  433f7e:	jo     0x433ff4
  433f80:	outs   dx,DWORD PTR ds:[esi]
  433f81:	jb     0x433f83
  433f83:	push   edx
  433f84:	gs popa 
  433f86:	add    BYTE PTR fs:[edi+0x72],dl
  433f8a:	imul   esi,DWORD PTR [ebp+eiz*2+0x0],0x736f6c43
  433f92:	add    BYTE PTR gs:[ebp+eiz*2+0x6c],al
  433f97:	gs je  0x433fff
  433f9a:	add    BYTE PTR [edi+0x65],al
  433f9d:	je     0x433fe0
  433f9f:	ins    BYTE PTR es:[edi],dx
  433fa0:	ins    BYTE PTR es:[edi],dx
  433fa1:	dec    esi
  433fa2:	gs je  0x43401c
  433fa5:	outs   dx,DWORD PTR ds:[esi]
  433fa6:	jb     0x434013
  433fa8:	dec    ecx
  433fa9:	outs   dx,BYTE PTR ds:[esi]
  433faa:	je     0x434011
  433fac:	jb     0x434014
  433fae:	popa   
  433faf:	arpl   WORD PTR [ebp+0x73],sp
  433fb2:	add    BYTE PTR [edi+0x65],al
  433fb5:	je     0x434007
  433fb7:	push   0x63697379
  433fbc:	popa   
  433fbd:	ins    BYTE PTR es:[edi],dx
  433fbe:	inc    ecx
  433fbf:	fs fs jb 0x434028
  433fc3:	jae    0x434038
  433fc5:	add    BYTE PTR [ebx+0x68],dl
  433fc8:	outs   dx,DWORD PTR ds:[esi]
  433fc9:	ja     0x433fcb
  433fcb:	addr16 gs je 0x43402e
  433fcf:	push   ebp
  433fd0:	push   esp
  433fd1:	inc    esi
  433fd2:	cmp    BYTE PTR [eax],al
  433fd4:	inc    edi
  433fd5:	gs je  0x43401a
  433fd8:	jns    0x43404e
  433fda:	gs jae 0x433fdd
  433fdd:	push   edx
  433fde:	gs data16 gs jb 0x434048
  433fe3:	outs   dx,BYTE PTR ds:[esi]
  433fe4:	arpl   WORD PTR [ebp+0x45],sp
  433fe7:	jno    0x43405e
  433fe9:	popa   
  433fea:	ins    BYTE PTR es:[edi],dx
  433feb:	jae    0x433fed
  433fed:	addr16 gs je 0x434050
  433ff1:	inc    ecx
  433ff2:	jae    0x434067
  433ff4:	gs ins DWORD PTR es:[edi],dx
  433ff6:	bound  ebp,QWORD PTR [ecx+edi*2+0x0]
  433ffa:	push   ebx
  433ffb:	jns    0x43406b
  433ffd:	arpl   WORD PTR [eax+0x72],bp
  434000:	outs   dx,DWORD PTR ds:[esi]
  434001:	outs   dx,BYTE PTR ds:[esi]
  434002:	imul   edi,DWORD PTR [edx+0x65],0x65670064
  434009:	je     0x43406a
  43400b:	push   ebx
  43400c:	popa   
  43400d:	jbe    0x434074
  43400f:	dec    ebp
  434010:	jns    0x434065
  434012:	gs je  0x434089
  434015:	imul   ebp,DWORD PTR [esi+0x67],0x456e4f73
  43401c:	js     0x434087
  43401e:	je     0x434020
  434020:	push   ebx
  434021:	popa   
  434022:	jbe    0x434089
  434024:	add    BYTE PTR [ebx+0x68],al
  434027:	arpl   WORD PTR gs:[ebx+0x46],bp
  43402b:	outs   dx,DWORD PTR ds:[esi]
  43402c:	jb     0x434081
  43402e:	jns    0x43409e
  434030:	arpl   WORD PTR [edi+ebp*2+0x63],cx
  434034:	imul   ecx,DWORD PTR [edi+0x6e],0x56
  434038:	popa   
  434039:	ins    BYTE PTR es:[edi],dx
  43403a:	jne    0x4340a1
  43403c:	push   esp
  43403d:	jns    0x4340af
  43403f:	add    BYTE PTR gs:[ecx+0x64],ah
  434043:	fs pop edi
  434045:	push   ebx
  434046:	push   0x6f647475
  43404b:	ja     0x4340bb
  43404d:	add    BYTE PTR [esi+0x72],al
  434050:	outs   dx,DWORD PTR ds:[esi]
  434051:	ins    DWORD PTR es:[edi],dx
  434052:	inc    edx
  434053:	popa   
  434054:	jae    0x4340bb
  434056:	ss xor al,0x53
  434059:	je     0x4340cd
  43405b:	imul   ebp,DWORD PTR [esi+0x67],0x496f5400
  434062:	outs   dx,BYTE PTR ds:[esi]
  434063:	je     0x434098
  434065:	xor    al,BYTE PTR [eax]
  434067:	push   esp
  434068:	outs   dx,DWORD PTR ds:[esi]
  434069:	dec    ecx
  43406a:	outs   dx,BYTE PTR ds:[esi]
  43406b:	je     0x4340a3
  43406d:	xor    al,0x0
  43406f:	push   esp
  434070:	outs   dx,DWORD PTR ds:[esi]
  434071:	push   ebx
  434072:	imul   ebp,DWORD PTR [esi+0x67],0x4200656c
  434079:	ins    BYTE PTR es:[edi],dx
  43407a:	outs   dx,DWORD PTR ds:[esi]
  43407b:	arpl   WORD PTR [ebx+0x43],bp
  43407e:	outs   dx,DWORD PTR ds:[esi]
  43407f:	jo     0x4340fa
  434081:	add    BYTE PTR [ebp+0x6d],al
  434084:	jo     0x4340fa
  434086:	jns    0x434088
  434088:	addr16 gs je 0x4340eb
  43408c:	push   ebp
  43408d:	outs   dx,BYTE PTR ds:[esi]
  43408e:	imul   esp,DWORD PTR [ebx+0x6f],0x49006564
  434095:	outs   dx,BYTE PTR ds:[esi]
  434096:	je     0x4340fd
  434098:	jb     0x434108
  43409a:	add    BYTE PTR [edi+0x65],ah
  43409d:	je     0x4340fe
  43409f:	inc    ebx
  4340a0:	push   0x737261
  4340a5:	push   eax
  4340a6:	popa   
  4340a7:	jb     0x43411c
  4340a9:	add    BYTE PTR gs:[edx+0x65],dl
  4340ad:	jbe    0x434114
  4340af:	jb     0x434124
  4340b1:	add    BYTE PTR gs:[edx+0x65],dl
  4340b5:	popa   
  4340b6:	fs inc edx
  4340b8:	jns    0x43412e
  4340ba:	add    BYTE PTR gs:[ebx+0x65],dh
  4340be:	je     0x43411f
  4340c0:	dec    ecx
  4340c1:	push   esi
  4340c2:	add    BYTE PTR [ebx+0x65],dh
  4340c5:	je     0x434126
  4340c7:	dec    ebx
  4340c8:	gs jns 0x4340cb
  4340cb:	jae    0x434132
  4340cd:	je     0x43412e
  4340cf:	push   eax
  4340d0:	outs   dx,DWORD PTR ds:[esi]
  4340d1:	jae    0x43413c
  4340d3:	je     0x43413e
  4340d5:	outs   dx,DWORD PTR ds:[esi]
  4340d6:	outs   dx,BYTE PTR ds:[esi]
  4340d7:	add    BYTE PTR [edi+0x65],ah
  4340da:	je     0x43413b
  4340dc:	dec    ecx
  4340dd:	outs   dx,BYTE PTR ds:[esi]
  4340de:	jo     0x434155
  4340e0:	je     0x434124
  4340e2:	ins    BYTE PTR es:[edi],dx
  4340e3:	outs   dx,DWORD PTR ds:[esi]
  4340e4:	arpl   WORD PTR [ebx+0x53],bp
  4340e7:	imul   edi,DWORD PTR [edx+0x65],0x74656700
  4340ee:	pop    edi
  4340ef:	dec    edi
  4340f0:	jne    0x434166
  4340f2:	jo     0x434169
  4340f4:	je     0x434138
  4340f6:	ins    BYTE PTR es:[edi],dx
  4340f7:	outs   dx,DWORD PTR ds:[esi]
  4340f8:	arpl   WORD PTR [ebx+0x53],bp
  4340fb:	imul   edi,DWORD PTR [edx+0x65],0x74656700
  434102:	pop    edi
  434103:	push   eax
  434104:	outs   dx,DWORD PTR ds:[esi]
  434105:	jae    0x434170
  434107:	je     0x434172
  434109:	outs   dx,DWORD PTR ds:[esi]
  43410a:	outs   dx,BYTE PTR ds:[esi]
  43410b:	add    BYTE PTR [edx+esi*2+0x61],dl
  43410f:	outs   dx,BYTE PTR ds:[esi]
  434110:	jae    0x434178
  434112:	outs   dx,DWORD PTR ds:[esi]
  434113:	jb     0x434182
  434115:	inc    edx
  434116:	ins    BYTE PTR es:[edi],dx
  434117:	outs   dx,DWORD PTR ds:[esi]
  434118:	arpl   WORD PTR [ebx+0x0],bp
  43411b:	push   esp
  43411c:	jb     0x43417f
  43411e:	outs   dx,BYTE PTR ds:[esi]
  43411f:	jae    0x434187
  434121:	outs   dx,DWORD PTR ds:[esi]
  434122:	jb     0x434191
  434124:	inc    esi
  434125:	imul   ebp,DWORD PTR [esi+0x61],0x6f6c426c
  43412c:	arpl   WORD PTR [ebx+0x0],bp
  43412f:	push   esp
  434130:	outs   dx,DWORD PTR ds:[esi]
  434131:	inc    ecx
  434132:	jb     0x4341a6
  434134:	popa   
  434135:	jns    0x434137
  434137:	push   edx
  434138:	gs popa 
  43413a:	fs dec ecx
  43413c:	outs   dx,BYTE PTR ds:[esi]
  43413d:	je     0x434172
  43413f:	xor    al,BYTE PTR [eax]
  434141:	inc    edi
  434142:	gs je  0x434192
  434145:	outs   dx,DWORD PTR ds:[esi]
  434146:	fs jne 0x4341b5
  434149:	gs jae 0x43414c
  43414c:	addr16 gs je 0x4341af
  434150:	dec    ebp
  434151:	outs   dx,DWORD PTR ds:[esi]
  434152:	fs jne 0x4341c1
  434155:	gs dec eax
  434157:	popa   
  434158:	outs   dx,BYTE PTR ds:[esi]
  434159:	fs ins BYTE PTR es:[edi],dx
  43415b:	add    BYTE PTR gs:[edx+0x65],dl
  43415f:	jae    0x4341d0
  434161:	ins    BYTE PTR es:[edi],dx
  434162:	jbe    0x4341c9
  434164:	push   esp
  434165:	jns    0x4341d7
  434167:	gs dec eax
  434169:	popa   
  43416a:	outs   dx,BYTE PTR ds:[esi]
  43416b:	fs ins BYTE PTR es:[edi],dx
  43416d:	add    BYTE PTR gs:[edx+0x65],dl
  434171:	jae    0x4341e2
  434173:	ins    BYTE PTR es:[edi],dx
  434174:	jbe    0x4341db
  434176:	dec    ebp
  434177:	gs je  0x4341e2
  43417a:	outs   dx,DWORD PTR ds:[esi]
  43417b:	fs dec eax
  43417d:	popa   
  43417e:	outs   dx,BYTE PTR ds:[esi]
  43417f:	fs ins BYTE PTR es:[edi],dx
  434181:	add    BYTE PTR gs:[edi+0x65],al
  434185:	je     0x4341d4
  434187:	gs je  0x4341f2
  43418a:	outs   dx,DWORD PTR ds:[esi]
  43418b:	fs inc esi
  43418d:	jb     0x4341fe
  43418f:	ins    DWORD PTR es:[edi],dx
  434190:	dec    eax
  434191:	popa   
  434192:	outs   dx,BYTE PTR ds:[esi]
  434193:	fs ins BYTE PTR es:[edi],dx
  434195:	add    BYTE PTR gs:[edi+0x65],al
  434199:	je     0x4341e1
  43419b:	imul   esp,DWORD PTR [ebp+0x6c],0x47007364
  4341a2:	gs je  0x4341f2
  4341a5:	gs je  0x434210
  4341a8:	outs   dx,DWORD PTR ds:[esi]
  4341a9:	fs inc edx
  4341ab:	outs   dx,DWORD PTR ds:[esi]
  4341ac:	fs jns 0x4341af
  4341af:	addr16 gs je 0x434212
  4341b3:	inc    esp
  4341b4:	arpl   WORD PTR gs:[ecx+eiz*2+0x72],bp
  4341b9:	imul   ebp,DWORD PTR [esi+0x67],0x65707954
  4341c0:	add    BYTE PTR [edi+0x65],ah
  4341c3:	je     0x434224
  4341c5:	push   edx
  4341c6:	gs je  0x43423e
  4341c9:	jb     0x434239
  4341cb:	push   esp
  4341cc:	jns    0x43423e
  4341ce:	add    BYTE PTR gs:[edx+esi*2+0x79],dl
  4341d3:	inc    edi
  4341d4:	gs je  0x43422d
  4341d7:	popa   
  4341d8:	ins    BYTE PTR es:[edi],dx
  4341d9:	jne    0x434240
  4341db:	add    BYTE PTR [edi+0x65],al
  4341de:	je     0x434224
  4341e0:	jns    0x434250
  4341e2:	popa   
  4341e3:	ins    DWORD PTR es:[edi],dx
  4341e4:	imul   esp,DWORD PTR [ebx+0x49],0x666e494c
  4341eb:	outs   dx,DWORD PTR ds:[esi]
  4341ec:	add    BYTE PTR [ebx+0x72],al
  4341ef:	gs popa 
  4341f1:	je     0x434258
  4341f3:	inc    esp
  4341f4:	gs ins BYTE PTR es:[edi],dx
  4341f6:	gs addr16 popa 
  4341f9:	je     0x434260
  4341fb:	add    BYTE PTR [ebx+0x65],dl
  4341fe:	je     0x434243
  434200:	outs   dx,DWORD PTR ds:[esi]
  434201:	fs add BYTE PTR gs:[edi+0x65],al
  434206:	je     0x434254
  434208:	outs   dx,DWORD PTR ds:[esi]
  434209:	arpl   WORD PTR [ecx+0x6c],sp
  43420c:	push   esi
  43420d:	popa   
  43420e:	jb     0x434263
  434210:	imul   esp,DWORD PTR [edi+0x48],0x65706c65
  434217:	jb     0x434219
  434219:	addr16 gs je 0x43427c
  43421d:	dec    esp
  43421e:	outs   dx,DWORD PTR ds:[esi]
  43421f:	arpl   WORD PTR [ecx+0x6c],sp
  434222:	push   esi
  434223:	popa   
  434224:	jb     0x43428f
  434226:	popa   
  434227:	bound  ebp,QWORD PTR [ebp+eiz*2+0x73]
  43422b:	add    BYTE PTR [edi+0x65],al
  43422e:	je     0x434275
  434230:	outs   dx,BYTE PTR ds:[esi]
  434231:	jne    0x4342a0
  434233:	gs jb  0x434297
  434236:	je     0x4342a7
  434238:	jb     0x43423a
  43423a:	addr16 gs je 0x43429d
  43423e:	inc    ebx
  43423f:	jne    0x4342b3
  434241:	jb     0x4342a8
  434243:	outs   dx,BYTE PTR ds:[esi]
  434244:	je     0x434246
  434246:	addr16 gs je 0x4342a9
  43424a:	dec    esp
  43424b:	outs   dx,DWORD PTR ds:[esi]
  43424c:	arpl   WORD PTR [ecx+0x6c],sp
  43424f:	push   esp
  434250:	jns    0x4342c2
  434252:	add    BYTE PTR gs:[edi+0x65],ah
  434256:	je     0x4342b7
  434258:	dec    ecx
  434259:	jae    0x4342ab
  43425b:	imul   ebp,DWORD PTR [esi+0x6e],0x41006465
  434262:	fs fs inc ecx
  434265:	jb     0x4342ce
  434267:	jne    0x4342d6
  434269:	outs   dx,BYTE PTR gs:[esi]
  43426b:	je     0x43426d
  43426d:	dec    ebp
  43426e:	outs   dx,DWORD PTR ds:[esi]
  43426f:	jbe    0x4342d6
  434271:	dec    esi
  434272:	gs js  0x4342e9
  434275:	add    BYTE PTR [edi+0x65],al
  434278:	je     0x4342cd
  43427a:	imul   esp,DWORD PTR [edi+0x6e],0x72757461
  434281:	add    BYTE PTR gs:[ebx+0x65],dl
  434285:	je     0x4342d3
  434287:	outs   dx,DWORD PTR ds:[esi]
  434288:	arpl   WORD PTR [ecx+0x6c],sp
  43428b:	push   ebx
  43428c:	imul   esp,DWORD PTR [edi+0x6e],0x72757461
  434293:	add    BYTE PTR gs:[edi+0x65],al
  434297:	je     0x4342ed
  434299:	outs   dx,DWORD PTR ds:[esi]
  43429a:	imul   esp,DWORD PTR [ebp+0x6e],0x46
  43429e:	outs   dx,DWORD PTR ds:[esi]
  43429f:	jb     0x4342a1
  4342a1:	push   ebx
  4342a2:	gs je  0x4342ea
  4342a5:	js     0x43430a
  4342a7:	gs jo  0x43431e
  4342aa:	imul   ebp,DWORD PTR [edi+0x6e],0x65470073
  4342b1:	je     0x434303
  4342b3:	popa   
  4342b4:	jb     0x434317
  4342b6:	ins    DWORD PTR es:[edi],dx
  4342b7:	gs je  0x43431f
  4342ba:	jb     0x43432f
  4342bc:	add    BYTE PTR [edi+0x65],ah
  4342bf:	je     0x434320
  4342c1:	dec    ecx
  4342c2:	jae    0x434317
  4342c4:	je     0x434327
  4342c6:	je     0x434331
  4342c8:	arpl   WORD PTR [eax],ax
  4342ca:	addr16 gs je 0x43432d
  4342ce:	dec    ecx
  4342cf:	jae    0x434327
  4342d1:	popa   
  4342d2:	ins    BYTE PTR es:[edi],dx
  4342d3:	jne    0x43433a
  4342d5:	push   esp
  4342d6:	jns    0x434348
  4342d8:	add    BYTE PTR gs:[ebp+0x61],cl
  4342dc:	imul   esp,DWORD PTR [ebp+0x42],0x79
  4342e0:	push   edx
  4342e1:	gs push sp
  4342e4:	jns    0x434356
  4342e6:	add    BYTE PTR gs:[edi+0x65],ah
  4342ea:	je     0x43434b
  4342ec:	push   eax
  4342ed:	popa   
  4342ee:	jb     0x434351
  4342f0:	ins    DWORD PTR es:[edi],dx
  4342f1:	gs je  0x434359
  4342f4:	jb     0x43434a
  4342f6:	jns    0x434368
  4342f8:	add    BYTE PTR gs:[edi+0x65],al
  4342fc:	je     0x434354
  4342fe:	popa   
  4342ff:	ins    BYTE PTR es:[edi],dx
  434300:	jne    0x434367
  434302:	add    BYTE PTR [edi+0x65],ah
  434305:	je     0x434366
  434307:	push   esi
  434308:	popa   
  434309:	ins    BYTE PTR es:[edi],dx
  43430a:	jne    0x434371
  43430c:	add    BYTE PTR [edi+0x65],ah
  43430f:	je     0x434370
  434311:	dec    ebp
  434312:	outs   dx,DWORD PTR ds:[esi]
  434313:	fs jne 0x434382
  434316:	add    BYTE PTR gs:[edi+0x65],al
  43431a:	je     0x434363
  43431c:	outs   dx,BYTE PTR gs:[esi]
  43431e:	gs jb  0x43438a
  434321:	arpl   WORD PTR [ecx+0x72],ax
  434324:	addr16 jne 0x434394
  434327:	outs   dx,BYTE PTR gs:[esi]
  434329:	je     0x43439e
  43432b:	add    BYTE PTR [esi+0x6f],cl
  43432e:	jo     0x434330
  434330:	addr16 gs je 0x434393
  434334:	dec    edi
  434335:	jo     0x43439c
  434337:	jb     0x43439a
  434339:	outs   dx,BYTE PTR ds:[esi]
  43433a:	fs push esp
  43433c:	jns    0x4343ae
  43433e:	add    BYTE PTR gs:[edx+0x65],dl
  434342:	jae    0x4343b3
  434344:	ins    BYTE PTR es:[edi],dx
  434345:	jbe    0x4343ac
  434347:	push   ebx
  434348:	je     0x4343bc
  43434a:	imul   ebp,DWORD PTR [esi+0x67],0x74656700
  434351:	pop    edi
  434352:	push   ebx
  434353:	imul   edi,DWORD PTR [edx+0x65],0x73655200
  43435a:	outs   dx,DWORD PTR ds:[esi]
  43435b:	ins    BYTE PTR es:[edi],dx
  43435c:	jbe    0x4343c3
  43435e:	push   ebx
  43435f:	imul   esp,DWORD PTR [edi+0x6e],0x72757461
  434366:	add    BYTE PTR gs:[edx+0x65],dl
  43436a:	jae    0x4343db
  43436c:	ins    BYTE PTR es:[edi],dx
  43436d:	jbe    0x4343d4
  43436f:	dec    ebp
  434370:	gs je  0x4343db
  434373:	outs   dx,DWORD PTR ds:[esi]
  434374:	add    BYTE PTR fs:[edi+0x65],ah
  434378:	je     0x4343d9
  43437a:	dec    ebp
  43437b:	gs je  0x4343e6
  43437e:	outs   dx,DWORD PTR ds:[esi]
  43437f:	fs dec eax
  434381:	popa   
  434382:	outs   dx,BYTE PTR ds:[esi]
  434383:	fs ins BYTE PTR es:[edi],dx
  434385:	add    BYTE PTR gs:[edi+0x65],ah
  434389:	je     0x4343ea
  43438b:	push   esp
  43438c:	jns    0x4343fe
  43438e:	gs dec eax
  434390:	popa   
  434391:	outs   dx,BYTE PTR ds:[esi]
  434392:	fs ins BYTE PTR es:[edi],dx
  434394:	add    BYTE PTR gs:[edx+0x65],dl
  434398:	jae    0x434409
  43439a:	ins    BYTE PTR es:[edi],dx
  43439b:	jbe    0x434402
  43439d:	inc    esi
  43439e:	imul   esp,DWORD PTR [ebp+0x6c],0x65670064
  4343a5:	je     0x434406
  4343a7:	inc    esi
  4343a8:	imul   esp,DWORD PTR [ebp+0x6c],0x6e614864
  4343af:	fs ins BYTE PTR es:[edi],dx
  4343b1:	add    BYTE PTR gs:[edx+0x65],dl
  4343b5:	jae    0x434426
  4343b7:	ins    BYTE PTR es:[edi],dx
  4343b8:	jbe    0x43441f
  4343ba:	push   esp
  4343bb:	jns    0x43442d
  4343bd:	add    BYTE PTR gs:[edx+0x65],dl
  4343c1:	jae    0x434432
  4343c3:	ins    BYTE PTR es:[edi],dx
  4343c4:	jbe    0x43442b
  4343c6:	dec    ebp
  4343c7:	gs ins DWORD PTR es:[edi],dx
  4343c9:	bound  esp,QWORD PTR [ebp+0x72]
  4343cc:	add    BYTE PTR [edi+0x65],ah
  4343cf:	je     0x434430
  4343d1:	dec    ebp
  4343d2:	gs ins DWORD PTR es:[edi],dx
  4343d4:	bound  esp,QWORD PTR [ebp+0x72]
  4343d7:	push   esp
  4343d8:	jns    0x43444a
  4343da:	add    BYTE PTR gs:[edi],bh
  4343dd:	cwde   
  4343de:	cmp    esp,0x4cbb8f4b
  4343e4:	mov    cl,0xf9
  4343e6:	dec    edi
  4343e7:	nop
  4343e8:	cwde   
  4343e9:	inc    esp
  4343ea:	rcr    DWORD PTR [ebp+0x7ab70800],1
  4343f0:	pop    esp
  4343f1:	push   esi
  4343f2:	sbb    DWORD PTR [eax+eiz*8],esi
  4343f5:	mov    DWORD PTR [eax],ecx
  4343f7:	mov    al,0x3f
  4343f9:	pop    edi
  4343fa:	jg     0x43440d
  4343fc:	aad    0xa
  4343fe:	cmp    al,BYTE PTR [ebx]
  434400:	add    BYTE PTR [eax],al
  434402:	add    DWORD PTR [ecx],ecx
  434404:	push   es
  434405:	adc    eax,0x1958012
  43440a:	adc    al,BYTE PTR [edx+0x2003a1]
  434410:	add    DWORD PTR [eax+eax*1],eax
  434413:	add    DWORD PTR [ecx],eax
  434415:	sbb    al,0x5
  434417:	add    BYTE PTR [ecx],al
  434419:	add    DWORD PTR ds:0x120040e,ebx
  43441f:	add    DWORD PTR [esi],ecx
  434421:	add    al,0x6
  434423:	adc    al,BYTE PTR [ecx+0x20009ad]
  434429:	adc    al,BYTE PTR [ecx-0x7dede353]
  43442f:	sbb    DWORD PTR [esi],eax
  434431:	add    BYTE PTR [ecx],al
  434433:	push   cs
  434434:	adc    al,BYTE PTR [ecx+0x150607ad]
  43443a:	adc    ah,BYTE PTR [ecx+eax*1]
  43443d:	adc    dl,BYTE PTR [eax]
  43443f:	pop    es
  434440:	push   es
  434441:	adc    eax,0x12012412
  434446:	or     BYTE PTR [edi],al
  434448:	push   es
  434449:	adc    eax,0x12012412
  43444e:	adc    DWORD PTR [edi],eax
  434450:	push   es
  434451:	adc    eax,0x12012412
  434456:	sbb    al,0x7
  434458:	push   es
  434459:	adc    eax,0x12012412
  43445e:	and    BYTE PTR [eax+eax*1],al
  434461:	add    BYTE PTR [edx],dl
  434463:	adc    BYTE PTR [eax+eax*1],al
  434466:	add    BYTE PTR [edx],dl
  434468:	or     BYTE PTR [eax+eax*1],al
  43446b:	add    BYTE PTR [edx],dl
  43446d:	adc    DWORD PTR [eax+eax*1],eax
  434470:	add    BYTE PTR [edx],dl
  434472:	sbb    al,0x4
  434474:	add    BYTE PTR [eax],al
  434476:	adc    ah,BYTE PTR [eax]
  434478:	add    eax,DWORD PTR [esi]
  43447a:	adc    ch,BYTE PTR [eax]
  43447c:	add    al,0x6
  43447e:	adc    al,BYTE PTR [eax+0x200499]
  434484:	adc    ch,BYTE PTR [eax]
  434486:	add    eax,0x12010120
  43448b:	sub    BYTE PTR [edi],al
  43448d:	adc    BYTE PTR [ecx],al
  43448f:	add    DWORD PTR [esi],ebx
  434491:	add    BYTE PTR [esi],bl
  434493:	add    BYTE PTR [edi],al
  434495:	xor    BYTE PTR [ecx],al
  434497:	add    DWORD PTR [ecx],eax
  434499:	adc    BYTE PTR [esi],bl
  43449b:	add    BYTE PTR [eax+eiz*1],al
  43449e:	add    DWORD PTR [edx],eax
  4344a0:	sbb    al,0x3
  4344a2:	and    BYTE PTR [eax],al
  4344a4:	or     BYTE PTR ds:0x82120020,al
  4344aa:	xchg   ecx,eax
  4344ab:	add    esp,DWORD PTR [eax]
  4344ad:	add    BYTE PTR [esi],cl
  4344af:	add    eax,DWORD PTR [esi]
  4344b1:	adc    eax,DWORD PTR [eax]
  4344b3:	add    al,0x20
  4344b5:	add    BYTE PTR [ebx],dl
  4344b7:	add    BYTE PTR [esi+eax*1],al
  4344ba:	adc    al,BYTE PTR [eax+0x120604b5]
  4344c0:	xor    BYTE PTR [ecx-0x7dedf9fc],0xd5
  4344c7:	add    al,0x6
  4344c9:	adc    al,BYTE PTR [edx+0x120604dd]
  4344cf:	or     ch,0x2
  4344d2:	push   es
  4344d3:	push   cs
  4344d4:	add    al,0x6
  4344d6:	adc    al,BYTE PTR [ecx+0x1200475]
  4344dc:	add    DWORD PTR [edx],eax
  4344de:	add    eax,0x82120020
  4344e3:	mov    cl,0x6
  4344e5:	and    BYTE PTR [ecx],al
  4344e7:	add    DWORD PTR [edx],edx
  4344e9:	xor    BYTE PTR [ecx+0x12002005],0x82
  4344f0:	aad    0x6
  4344f2:	and    BYTE PTR [ecx],al
  4344f4:	add    DWORD PTR [edx],edx
  4344f6:	adc    ch,0x5
  4344f9:	and    BYTE PTR [eax],al
  4344fb:	adc    al,BYTE PTR [edx+0x12006dd]
  434501:	add    DWORD PTR [edx],edx
  434503:	sbb    ch,0x5
  434506:	and    BYTE PTR [eax],al
  434508:	adc    al,BYTE PTR [edx+0x12006cd]
  43450e:	add    DWORD PTR [edx],edx
  434510:	or     ch,0x7
  434513:	and    BYTE PTR [edx],al
  434515:	add    DWORD PTR [edx+edx*1],ebx
  434518:	and    DWORD PTR ds:0x1c002003,0x2022005
  434522:	push   cs
  434523:	push   cs
  434524:	add    eax,0x51d0120
  434529:	push   cs
  43452a:	or     esp,DWORD PTR [eax]
  43452c:	add    eax,0x1d0e0e01
  434531:	add    eax,0x2c11051d
  434536:	add    al,BYTE PTR [esi]
  434538:	or     BYTE PTR [ebx],al
  43453a:	push   es
  43453b:	adc    DWORD PTR [esp+eax*1],ebp
  43453e:	add    DWORD PTR [eax],eax
  434540:	add    BYTE PTR [eax],al
  434542:	add    al,0x2
  434544:	add    BYTE PTR [eax],al
  434546:	add    BYTE PTR [ebx],al
  434548:	push   es
  434549:	sbb    eax,0x1000509
  43454e:	or     DWORD PTR ds:0x1000405,ebx
  434554:	or     DWORD PTR [esi],ecx
  434556:	add    al,0x6
  434558:	adc    al,BYTE PTR [edx+0x12060421]
  43455e:	xor    DWORD PTR [ecx],0x12000005
  434564:	and    BYTE PTR [ecx],0x5
  434567:	add    BYTE PTR [eax],al
  434569:	adc    al,BYTE PTR [ecx+0x1000631]
  43456f:	add    DWORD PTR [edx],edx
  434571:	xor    DWORD PTR [ecx],0x38120603
  434577:	add    al,BYTE PTR [esi]
  434579:	add    al,BYTE PTR [edx]
  43457b:	push   es
  43457c:	sbb    al,0x7
  43457e:	add    BYTE PTR [edx],al
  434580:	add    DWORD PTR [edx+edx*1],ebx
  434583:	and    DWORD PTR ds:0x12000004,0x1d060338
  43458d:	add    eax,0x8010004
  434592:	or     BYTE PTR [eax+eax*1],al
  434595:	add    DWORD PTR [edx],ecx
  434597:	or     BYTE PTR [eax+eax*1],al
  43459a:	add    DWORD PTR [eax+ecx*1],ecx
  43459d:	add    al,0x0
  43459f:	add    DWORD PTR ds:0x2000608,ecx
  4345a5:	add    DWORD PTR [edx],edx
  4345a7:	popa   
  4345a8:	or     BYTE PTR [eax+eax*1],al
  4345ab:	add    DWORD PTR [esi],ecx
  4345ad:	or     BYTE PTR [esi+eax*1],al
  4345b0:	adc    al,BYTE PTR [ecx+0x506027d]
  4345b6:	pop    es
  4345b7:	add    BYTE PTR [ecx],al
  4345b9:	sbb    eax,0xad811205
  4345be:	pop    es
  4345bf:	add    BYTE PTR [ecx],al
  4345c1:	sbb    eax,0x81811205
  4345c6:	or     BYTE PTR [eax],al
  4345c8:	add    bl,BYTE PTR ds:0x81120a05
  4345ce:	or     DWORD PTR [eax],0x80121506
  4345d4:	test   DWORD PTR [edx],eax
  4345d6:	or     BYTE PTR [eax],cl
  4345d8:	add    al,0x6
  4345da:	adc    DWORD PTR [ecx+0x300068d],eax
  4345e0:	add    DWORD PTR [eax],ecx
  4345e2:	or     BYTE PTR [eax],cl
  4345e4:	or     eax,DWORD PTR [eax]
  4345e6:	add    eax,DWORD PTR [ecx]
  4345e8:	adc    BYTE PTR [eax],cl
  4345ea:	adc    al,BYTE PTR [edx-0x2a7eedff]
  4345f0:	or     DWORD PTR [eax],eax
  4345f2:	add    al,BYTE PTR [ecx]
  4345f4:	adc    al,BYTE PTR [edx-0x2a7eedfb]
  4345fa:	or     BYTE PTR [eax],al
  4345fc:	add    al,BYTE PTR [ecx]
  4345fe:	adc    BYTE PTR [eax],cl
  434600:	adc    al,BYTE PTR [ecx+0x30007d5]
  434606:	add    DWORD PTR [eax],ecx
  434608:	or     BYTE PTR ds:0x1000905,bl
  43460e:	sbb    eax,0x12918212
  434613:	add    BYTE PTR [ecx],0x5
  434616:	push   es
  434617:	sbb    eax,0x4dd8111
  43461c:	push   es
  43461d:	adc    al,BYTE PTR [ecx+0x120604d5]
  434623:	or     BYTE PTR ds:0x121d0605,0x82
  43462a:	xchg   ecx,eax
  43462b:	or     esp,DWORD PTR [eax]
  43462d:	add    eax,DWORD PTR [ecx]
  43462f:	adc    al,BYTE PTR [edx+0x12051d01]
  434635:	adc    ebp,0x1012004
  43463b:	or     BYTE PTR [ebx],al
  43463d:	and    BYTE PTR [eax],al
  43463f:	add    eax,0x1022005
  434644:	or     BYTE PTR [eax],cl
  434646:	or     al,0x1
  434648:	add    BYTE PTR [edi],al
  43464a:	inc    edx
  43464b:	jne    0x4346c1
  43464d:	je     0x4346be
  43464f:	outs   dx,BYTE PTR ds:[esi]
  434650:	xor    DWORD PTR [eax],eax
  434652:	add    BYTE PTR [ecx+eax*1],cl
  434655:	add    BYTE PTR [edi],al
  434657:	inc    edx
  434658:	jne    0x4346ce
  43465a:	je     0x4346cb
  43465c:	outs   dx,BYTE PTR ds:[esi]
  43465d:	xor    al,BYTE PTR [eax]
  43465f:	add    BYTE PTR [eax],dl
  434661:	add    DWORD PTR [eax],eax
  434663:	or     edx,DWORD PTR [eax+0x69]
  434666:	arpl   WORD PTR [ebp+esi*2+0x72],si
  43466a:	gs inc edx
  43466c:	outs   dx,DWORD PTR ds:[esi]
  43466d:	js     0x4346a0
  43466f:	add    BYTE PTR [eax],al
  434671:	or     eax,0x54080001
  434676:	gs js  0x4346ed
  434679:	inc    edx
  43467a:	outs   dx,DWORD PTR ds:[esi]
  43467b:	js     0x4346ae
  43467d:	add    BYTE PTR [eax],al
  43467f:	or     eax,DWORD PTR [ecx]
  434681:	add    BYTE PTR [esi],al
  434683:	dec    esp
  434684:	popa   
  434685:	bound  esp,QWORD PTR [ebp+0x6c]
  434688:	xor    DWORD PTR [eax],eax
  43468a:	add    BYTE PTR ds:0x54080001,cl
  434690:	gs js  0x434707
  434693:	inc    edx
  434694:	outs   dx,DWORD PTR ds:[esi]
  434695:	js     0x4346c9
  434697:	add    BYTE PTR [eax],al
  434699:	adc    BYTE PTR [ecx],al
  43469b:	add    BYTE PTR [ebx],cl
  43469d:	push   eax
  43469e:	imul   esp,DWORD PTR [ebx+0x74],0x42657275
  4346a5:	outs   dx,DWORD PTR ds:[esi]
  4346a6:	js     0x4346da
  4346a8:	add    BYTE PTR [eax],al
  4346aa:	or     eax,0x54080001
  4346af:	gs js  0x434726
  4346b2:	inc    edx
  4346b3:	outs   dx,DWORD PTR ds:[esi]
  4346b4:	js     0x4346e9
  4346b6:	add    BYTE PTR [eax],al
  4346b8:	or     eax,0x54080001
  4346bd:	gs js  0x434734
  4346c0:	inc    edx
  4346c1:	outs   dx,DWORD PTR ds:[esi]
  4346c2:	js     0x4346f8
  4346c4:	add    BYTE PTR [eax],al
  4346c6:	or     eax,0x54080001
  4346cb:	gs js  0x434742
  4346ce:	inc    edx
  4346cf:	outs   dx,DWORD PTR ds:[esi]
  4346d0:	js     0x434707
  4346d2:	add    BYTE PTR [eax],al
  4346d4:	or     eax,0x54080001
  4346d9:	gs js  0x434750
  4346dc:	inc    edx
  4346dd:	outs   dx,DWORD PTR ds:[esi]
  4346de:	js     0x434716
  4346e0:	add    BYTE PTR [eax],al
  4346e2:	or     eax,0x54080001
  4346e7:	gs js  0x43475e
  4346ea:	inc    edx
  4346eb:	outs   dx,DWORD PTR ds:[esi]
  4346ec:	js     0x434725
  4346ee:	add    BYTE PTR [eax],al
  4346f0:	or     BYTE PTR [ecx],al
  4346f2:	add    BYTE PTR [edx],al
  4346f4:	add    BYTE PTR [eax],al
  4346f6:	add    BYTE PTR [eax],al
  4346f8:	add    BYTE PTR [esi],al
  4346fa:	and    BYTE PTR [ecx],al
  4346fc:	add    DWORD PTR [ecx],edx
  4346fe:	xor    BYTE PTR [ecx+0x1000108],0x0
  434705:	add    BYTE PTR [eax],al
  434707:	add    BYTE PTR [eax],al
  434709:	pop    ss
  43470a:	add    DWORD PTR [eax],eax
  43470c:	or     cl,BYTE PTR [ebp+0x79]
  43470f:	push   esp
  434710:	gs ins DWORD PTR es:[edi],dx
  434712:	jo     0x434780
  434714:	popa   
  434715:	je     0x43477c
  434717:	pop    es
  434718:	cmp    BYTE PTR [esi],ch
  43471a:	xor    BYTE PTR [esi],ch
  43471c:	xor    BYTE PTR [esi],ch
  43471e:	xor    BYTE PTR [eax],al
  434720:	add    BYTE PTR ds:0xe010220,al
  434726:	push   cs
  434727:	add    al,0x8
  434729:	add    BYTE PTR [edx],dl
  43472b:	adc    BYTE PTR [eax],dl
  43472d:	add    DWORD PTR [eax],eax
  43472f:	or     ecx,DWORD PTR [ebp+0x79]
  434732:	cs inc ebx
  434734:	outs   dx,DWORD PTR ds:[esi]
  434735:	ins    DWORD PTR es:[edi],dx
  434736:	jo     0x4347ad
  434738:	je     0x43479f
  43473a:	jb     0x43473c
  43473c:	add    BYTE PTR [eax+ecx*1],al
  43473f:	add    BYTE PTR [edx],dl
  434741:	or     BYTE PTR [ebx],dl
  434743:	add    DWORD PTR [eax],eax
  434745:	push   cs
  434746:	dec    ebp
  434747:	jns    0x434777
  434749:	inc    ecx
  43474a:	jo     0x4347bc
  43474c:	ins    BYTE PTR es:[edi],dx
  43474d:	imul   esp,DWORD PTR [ebx+0x61],0x6e6f6974
  434754:	add    BYTE PTR [eax],al
  434756:	add    al,0x8
  434758:	add    BYTE PTR [edx],dl
  43475a:	adc    DWORD PTR [ecx+eax*1],ecx
  43475d:	add    BYTE PTR [edi],al
  43475f:	dec    ebp
  434760:	jns    0x434790
  434762:	push   ebp
  434763:	jae    0x4347ca
  434765:	jb     0x434767
  434767:	add    BYTE PTR [eax+ecx*1],al
  43476a:	add    BYTE PTR [edx],dl
  43476c:	sbb    al,0xd
  43476e:	add    DWORD PTR [eax],eax
  434770:	or     BYTE PTR [ebp+0x79],cl
  434773:	cs inc esi
  434775:	outs   dx,DWORD PTR ds:[esi]
  434776:	jb     0x4347e5
  434778:	jae    0x43477a
  43477a:	add    BYTE PTR [eax+ecx*1],al
  43477d:	add    BYTE PTR [edx],dl
  43477f:	and    BYTE PTR [ebx],dl
  434781:	add    DWORD PTR [eax],eax
  434783:	push   cs
  434784:	dec    ebp
  434785:	jns    0x4347b5
  434787:	push   edi
  434788:	bound  edx,QWORD PTR gs:[ebx+0x65]
  43478c:	jb     0x434804
  43478e:	imul   esp,DWORD PTR [ebx+0x65],0x58000073
  434795:	add    DWORD PTR [eax],eax
  434797:	sbb    DWORD PTR [ebx+0x79],edx
  43479a:	jae    0x434810
  43479c:	gs ins DWORD PTR es:[edi],dx
  43479e:	cs push edi
  4347a0:	imul   ebp,DWORD PTR [esi+0x64],0x2e73776f
  4347a7:	inc    esi
  4347a8:	outs   dx,DWORD PTR ds:[esi]
  4347a9:	jb     0x434818
  4347ab:	jae    0x4347db
  4347ad:	inc    esi
  4347ae:	outs   dx,DWORD PTR ds:[esi]
  4347af:	jb     0x43481e
  4347b1:	adc    al,BYTE PTR [ebx+0x72]
  4347b4:	gs popa 
  4347b6:	je     0x43481d
  4347b8:	pop    edi
  4347b9:	pop    edi
  4347ba:	dec    ecx
  4347bb:	outs   dx,BYTE PTR ds:[esi]
  4347bc:	jae    0x434832
  4347be:	popa   
  4347bf:	outs   dx,BYTE PTR ds:[esi]
  4347c0:	arpl   WORD PTR [ebp+0x5f],sp
  4347c3:	pop    edi
  4347c4:	adc    eax,DWORD PTR [ecx+ebp*2+0x73]
  4347c8:	jo     0x434839
  4347ca:	jae    0x434831
  4347cc:	pop    edi
  4347cd:	pop    edi
  4347ce:	dec    ecx
  4347cf:	outs   dx,BYTE PTR ds:[esi]
  4347d0:	jae    0x434846
  4347d2:	popa   
  4347d3:	outs   dx,BYTE PTR ds:[esi]
  4347d4:	arpl   WORD PTR [ebp+0x5f],sp
  4347d7:	pop    edi
  4347d8:	adc    cl,BYTE PTR [ebp+0x79]
  4347db:	cs dec ebp
  4347dd:	jns    0x43482f
  4347df:	jb     0x434850
  4347e1:	push   0x65
  4347e3:	arpl   WORD PTR [esi+ebp*1+0x46],si
  4347e7:	outs   dx,DWORD PTR ds:[esi]
  4347e8:	jb     0x434857
  4347ea:	jae    0x4347ec
  4347ec:	add    BYTE PTR [edi],al
  4347ee:	and    BYTE PTR [ecx+eax*1],al
  4347f1:	push   cs
  4347f2:	push   cs
  4347f3:	push   cs
  4347f4:	push   cs
  4347f5:	popa   
  4347f6:	add    DWORD PTR [eax],eax
  4347f8:	xor    al,0x53
  4347fa:	jns    0x43486f
  4347fc:	je     0x434863
  4347fe:	ins    DWORD PTR es:[edi],dx
  4347ff:	cs push edi
  434801:	bound  ebp,QWORD PTR gs:[esi]
  434804:	push   ebx
  434805:	gs jb  0x43487e
  434808:	imul   esp,DWORD PTR [ebx+0x65],0x72502e73
  43480f:	outs   dx,DWORD PTR ds:[esi]
  434810:	je     0x434881
  434812:	arpl   WORD PTR [edi+0x6c],bp
  434815:	jae    0x434845
  434817:	push   ebx
  434818:	outs   dx,DWORD PTR ds:[esi]
  434819:	popa   
  43481a:	jo     0x434864
  43481c:	je     0x434892
  43481e:	jo     0x434863
  434820:	ins    BYTE PTR es:[edi],dx
  434821:	imul   esp,DWORD PTR [ebp+0x6e],0x6f725074
  434828:	je     0x434899
  43482a:	arpl   WORD PTR [edi+0x6c],bp
  43482d:	adc    al,BYTE PTR [ebx+0x72]
  434830:	gs popa 
  434832:	je     0x434899
  434834:	pop    edi
  434835:	pop    edi
  434836:	dec    ecx
  434837:	outs   dx,BYTE PTR ds:[esi]
  434838:	jae    0x4348ae
  43483a:	popa   
  43483b:	outs   dx,BYTE PTR ds:[esi]
  43483c:	arpl   WORD PTR [ebp+0x5f],sp
  43483f:	pop    edi
  434840:	adc    eax,DWORD PTR [ecx+ebp*2+0x73]
  434844:	jo     0x4348b5
  434846:	jae    0x4348ad
  434848:	pop    edi
  434849:	pop    edi
  43484a:	dec    ecx
  43484b:	outs   dx,BYTE PTR ds:[esi]
  43484c:	jae    0x4348c2
  43484e:	popa   
  43484f:	outs   dx,BYTE PTR ds:[esi]
  434850:	arpl   WORD PTR [ebp+0x5f],sp
  434853:	pop    edi
  434854:	add    BYTE PTR [eax],al
  434856:	add    BYTE PTR ds:0x1,al
  43485c:	add    BYTE PTR ds:0x82120008,al
  434862:	and    DWORD PTR ds:0x81120008,eax
  434868:	xor    DWORD PTR [eax+0x1],eax
  43486b:	add    BYTE PTR [ebx],dh
  43486d:	push   ebx
  43486e:	jns    0x4348e3
  434870:	je     0x4348d7
  434872:	ins    DWORD PTR es:[edi],dx
  434873:	cs push edx
  434875:	gs jae 0x4348e7
  434878:	jne    0x4348ec
  43487a:	arpl   WORD PTR [ebp+0x73],sp
  43487d:	cs push esp
  43487f:	outs   dx,DWORD PTR ds:[esi]
  434880:	outs   dx,DWORD PTR ds:[esi]
  434881:	ins    BYTE PTR es:[edi],dx
  434882:	jae    0x4348b2
  434884:	push   ebx
  434885:	je     0x4348f9
  434887:	outs   dx,DWORD PTR ds:[esi]
  434888:	outs   dx,BYTE PTR ds:[esi]
  434889:	ins    BYTE PTR es:[di],dx
  43488b:	jns    0x4348e1
  43488d:	jns    0x4348ff
  43488f:	gs fs push edx
  434892:	gs jae 0x434904
  434895:	jne    0x434909
  434897:	arpl   WORD PTR [ebp+0x42],sp
  43489a:	jne    0x434905
  43489c:	ins    BYTE PTR es:[edi],dx
  43489d:	fs gs jb 0x4348a8
  4348a1:	xor    al,0x2e
  4348a3:	xor    BYTE PTR [esi],ch
  4348a5:	xor    BYTE PTR [esi],ch
  4348a7:	xor    BYTE PTR [eax],al
  4348a9:	add    BYTE PTR [eax+ecx*1],al
  4348ac:	add    BYTE PTR [edx],dl
  4348ae:	cmp    BYTE PTR [ecx+0x1],bl
  4348b1:	add    BYTE PTR [ebx+0x4d],cl
  4348b4:	imul   esp,DWORD PTR [ebx+0x72],0x666f736f
  4348bb:	je     0x4348eb
  4348bd:	push   esi
  4348be:	imul   esi,DWORD PTR [ebx+0x75],0x74536c61
  4348c5:	jne    0x43492b
  4348c7:	imul   ebp,DWORD PTR [edi+0x2e],0x74696445
  4348ce:	outs   dx,DWORD PTR ds:[esi]
  4348cf:	jb     0x434944
  4348d1:	cs push ebx
  4348d3:	gs je  0x43494a
  4348d6:	imul   ebp,DWORD PTR [esi+0x67],0x73654473
  4348dd:	imul   esp,DWORD PTR [edi+0x6e],0x532e7265
  4348e4:	gs je  0x43495b
  4348e7:	imul   ebp,DWORD PTR [esi+0x67],0x6e695373
  4348ee:	ins    BYTE PTR es:[di],dx
  4348f0:	gs inc esi
  4348f2:	imul   ebp,DWORD PTR [ebp+eiz*2+0x47],0x72656e65
  4348fa:	popa   
  4348fb:	je     0x43496c
  4348fd:	jb     0x434907
  4348ff:	xor    DWORD PTR [edx],esi
  434901:	xor    BYTE PTR cs:[esi],ch
  434904:	xor    BYTE PTR [esi],ch
  434906:	xor    BYTE PTR [eax],al
  434908:	add    BYTE PTR [eax],dl
  43490a:	add    DWORD PTR [eax],eax
  43490c:	or     ecx,DWORD PTR [ebp+0x79]
  43490f:	cs push ebx
  434911:	gs je  0x434988
  434914:	imul   ebp,DWORD PTR [esi+0x67],0x11000073
  43491b:	add    DWORD PTR [eax],eax
  43491d:	or     al,0x54
  43491f:	popa   
  434920:	jae    0x43498d
  434922:	and    BYTE PTR [ebp+0x61],cl
  434925:	outs   dx,BYTE PTR ds:[esi]
  434926:	popa   
  434927:	addr16 gs jb 0x43492b
  43492b:	add    BYTE PTR [esi],bl
  43492d:	add    DWORD PTR [eax],eax
  43492f:	add    DWORD PTR [eax],eax
  434931:	push   esp
  434932:	add    dl,BYTE PTR [esi]
  434934:	push   edi
  434935:	jb     0x434998
  434937:	jo     0x434987
  434939:	outs   dx,DWORD PTR ds:[esi]
  43493a:	outs   dx,BYTE PTR ds:[esi]
  43493b:	inc    ebp
  43493c:	js     0x4349a1
  43493e:	gs jo  0x4349b5
  434941:	imul   ebp,DWORD PTR [edi+0x6e],0x6f726854
  434948:	ja     0x4349bd
  43494a:	add    DWORD PTR [edi],edx
  43494c:	add    DWORD PTR [eax],eax
  43494e:	adc    al,BYTE PTR [ebx+0x6f]
  434951:	jo     0x4349cc
  434953:	jb     0x4349be
  434955:	addr16 push 0xa9c22074
  43495b:	and    BYTE PTR [eax],ah
  43495d:	xor    dh,BYTE PTR [eax]
  43495f:	xor    DWORD PTR [eax+eax*1],esi
  434962:	add    BYTE PTR [eax],cl
  434964:	add    DWORD PTR [eax],eax
  434966:	pop    es
  434967:	add    DWORD PTR [eax],eax
  434969:	add    BYTE PTR [eax],al
  43496b:	add    BYTE PTR [esi],al
  43496d:	and    BYTE PTR [ecx],al
  43496f:	add    DWORD PTR [ecx],edx
  434971:	adc    cl,0x8
  434974:	add    DWORD PTR [eax],eax
  434976:	or     BYTE PTR [eax],al
  434978:	add    BYTE PTR [eax],al
  43497a:	add    BYTE PTR [eax],al
  43497c:	sgdtd  [eax]
  43497f:	or     dh,BYTE PTR [ebx]
  434981:	xor    dh,BYTE PTR cs:[ebx]
  434984:	xor    DWORD PTR cs:[edx],esi
  434987:	xor    DWORD PTR cs:[edx],esi
  43498a:	add    BYTE PTR [eax],al
  43498c:	sub    DWORD PTR [ecx],eax
  43498e:	add    BYTE PTR [edi+esi*1],ah
  434991:	popaw  
  434993:	xor    eax,0x35383836
  434998:	sub    eax,0x62346365
  43499d:	sub    eax,0x63333934
  4349a2:	sub    eax,0x63613762
  4349a7:	sub    eax,0x66313863
  4349ac:	xor    BYTE PTR fs:[ebx],dh
  4349af:	cmp    BYTE PTR [edx+esi*1],dh
  4349b2:	arpl   WORD PTR [ebp+0x0],sp
  4349b5:	add    BYTE PTR [eax],cl
  4349b7:	adc    eax,0x1958012
  4349bc:	adc    al,BYTE PTR [edx+0x12005a1]
  4349c2:	add    DWORD PTR [ecx],edx
  4349c4:	add    eax,0x1012005
  4349c9:	adc    DWORD PTR ds:0x8080713,ecx
  4349cf:	or     BYTE PTR [edx],dl
  4349d1:	and    BYTE PTR [ecx-0x6a7fedeb],0x1
  4349d8:	adc    al,BYTE PTR [edx+0x20208a1]
  4349de:	or     BYTE PTR ds:0x130120,al
  4349e4:	or     BYTE PTR [ebx],al
  4349e6:	and    BYTE PTR [eax],al
  4349e8:	add    al,BYTE PTR [esi]
  4349ea:	and    BYTE PTR [edx],al
  4349ec:	add    DWORD PTR [eax],ecx
  4349ee:	adc    eax,DWORD PTR [eax]
  4349f0:	add    al,0x0
  4349f2:	add    DWORD PTR [esp+ebx*1],ebx
  4349f5:	add    al,0x20
  4349f7:	add    DWORD PTR [ecx],eax
  4349f9:	sbb    al,0x5
  4349fb:	and    BYTE PTR [ecx],al
  4349fd:	add    DWORD PTR [ebx],edx
  4349ff:	add    BYTE PTR [ebx],al
  434a01:	add    BYTE PTR [eax],al
  434a03:	add    al,BYTE PTR [eax+eax*1]
  434a06:	add    DWORD PTR [ecx],eax
  434a08:	add    al,BYTE PTR ds:0x1d010120
  434a0e:	push   cs
  434a0f:	push   es
  434a10:	and    BYTE PTR [ecx],al
  434a12:	add    DWORD PTR [edx],edx
  434a14:	or     cl,0x6
  434a17:	pop    es
  434a18:	add    dl,BYTE PTR [edx]
  434a1a:	sub    DWORD PTR [ebp+0x40e],0x20055912
  434a24:	add    al,BYTE PTR [ecx]
  434a26:	sbb    al,0x18
  434a28:	push   es
  434a29:	and    BYTE PTR [ecx],al
  434a2b:	add    DWORD PTR [edx],edx
  434a2d:	sbb    BYTE PTR ds:0x12000005,0x81
  434a34:	lods   eax,DWORD PTR ds:[esi]
  434a35:	push   es
  434a36:	add    BYTE PTR [ecx],al
  434a38:	adc    al,BYTE PTR [ecx+0x70b0ead]
  434a3e:	add    al,0x12
  434a40:	sub    DWORD PTR [ebp-0x7e7eedf2],0x2004051d
  434a4a:	add    DWORD PTR [edx],eax
  434a4c:	push   cs
  434a4d:	push   es
  434a4e:	and    BYTE PTR [ecx],al
  434a50:	adc    al,BYTE PTR [ecx+0x70e81]
  434a56:	add    DWORD PTR [edx],edx
  434a58:	sub    DWORD PTR [ebp+0x704051d],0x4080e02
  434a62:	and    BYTE PTR [ecx],al
  434a64:	or     BYTE PTR [ebx],al
  434a66:	add    eax,0x80e0220
  434a6b:	or     BYTE PTR ds:0x1c0e0200,al
  434a71:	sbb    al,0x9
  434a73:	pop    es
  434a74:	add    al,0xe
  434a76:	adc    al,BYTE PTR [ecx+0x80e1dad]
  434a7c:	add    al,0x20
  434a7e:	add    BYTE PTR ds:0x200050e,bl
  434a84:	add    cl,BYTE PTR [esi]
  434a86:	push   cs
  434a87:	push   es
  434a88:	adc    eax,0x12012412
  434a8d:	adc    BYTE PTR [esi],al
  434a8f:	adc    eax,0x12012412
  434a94:	or     BYTE PTR [esi],al
  434a96:	adc    eax,0x12012412
  434a9b:	adc    DWORD PTR [esi],eax
  434a9d:	adc    eax,0x12012412
  434aa2:	sbb    al,0x6
  434aa4:	adc    eax,0x12012412
  434aa9:	and    BYTE PTR [edi+eax*1],al
  434aac:	add    DWORD PTR [edx],edx
  434aae:	adc    BYTE PTR [edi+eax*1],al
  434ab1:	add    DWORD PTR [edx],edx
  434ab3:	or     BYTE PTR [edi+eax*1],al
  434ab6:	add    DWORD PTR [edx],edx
  434ab8:	adc    DWORD PTR [edi+eax*1],eax
  434abb:	add    DWORD PTR [edx],edx
  434abd:	sbb    al,0x4
  434abf:	pop    es
  434ac0:	add    DWORD PTR [edx],edx
  434ac2:	and    BYTE PTR [edi+eax*1],al
  434ac5:	add    DWORD PTR [edx],edx
  434ac7:	sub    BYTE PTR [edx+ecx*1],al
  434aca:	add    DWORD PTR [edx],edx
  434acc:	sub    BYTE PTR [ebx],al
  434ace:	pop    es
  434acf:	add    DWORD PTR [edx],eax
  434ad1:	or     eax,0x1e0707
  434ad6:	push   cs
  434ad7:	adc    al,BYTE PTR [edx+0x20e1d15]
  434add:	add    al,BYTE PTR [edx]
  434adf:	add    bl,BYTE PTR [esi]
  434ae1:	add    BYTE PTR [eax],cl
  434ae3:	add    BYTE PTR [ecx],al
  434ae5:	adc    al,BYTE PTR [edx+0x49821191]
  434aeb:	push   es
  434aec:	add    BYTE PTR [edx],al
  434aee:	push   cs
  434aef:	push   cs
  434af0:	sbb    eax,0x220050e
  434af5:	add    DWORD PTR [esp+ebx*1],ebx
  434af8:	add    al,0xa
  434afa:	add    DWORD PTR [esi],ebx
  434afc:	add    BYTE PTR ds:0x1e000110,al
  434b02:	add    BYTE PTR [esi],al
  434b04:	add    BYTE PTR [ecx],al
  434b06:	add    DWORD PTR [edx],edx
  434b08:	sub    DWORD PTR ds:0x12002005,0x20072d81
  434b12:	add    al,BYTE PTR [ecx]
  434b14:	push   cs
  434b15:	adc    al,BYTE PTR [ecx+0x107042d]
  434b1b:	push   ds
  434b1c:	add    BYTE PTR [ebx],al
  434b1e:	pop    es
  434b1f:	add    DWORD PTR [eax],ecx
  434b21:	add    eax,0x82120107
  434b26:	xchg   ecx,eax
  434b27:	add    eax,DWORD PTR [edi]
  434b29:	add    DWORD PTR [esi],ecx
  434b2b:	add    eax,0x1e0207
  434b30:	add    al,BYTE PTR ds:0x130207
  434b36:	add    al,BYTE PTR [esi]
  434b38:	adc    eax,0x13012412
  434b3d:	add    BYTE PTR [edx],al
  434b3f:	adc    eax,DWORD PTR [eax]
  434b41:	add    al,0xa
  434b43:	add    DWORD PTR [ebx],edx
  434b45:	add    BYTE PTR [esi],al
  434b47:	and    BYTE PTR [ecx],al
  434b49:	add    DWORD PTR [edx],edx
  434b4b:	sub    DWORD PTR [ecx],0x1208071a
  434b51:	and    BYTE PTR [ebp+0x11f18011],0x81
  434b58:	or     DWORD PTR [ecx],edx
  434b5a:	or     DWORD PTR [ecx],0x110d8111
  434b60:	or     DWORD PTR ds:0x11118111,0x20061181
  434b6a:	add    DWORD PTR [ecx],eax
  434b6c:	adc    al,BYTE PTR [edx+0x591]
  434b72:	adc    DWORD PTR [eax+0x12006f1],eax
  434b78:	add    DWORD PTR [ecx],edx
  434b7a:	xor    cl,0xc
  434b7d:	and    BYTE PTR ds:0x110c0e01,al
  434b83:	cmp    cl,0x11
  434b86:	cmp    ch,0x5
  434b89:	push   es
  434b8a:	and    BYTE PTR [ecx],al
  434b8c:	add    DWORD PTR [edx],edx
  434b8e:	xor    ch,0x6
  434b91:	and    BYTE PTR [ecx],al
  434b93:	add    DWORD PTR [ecx],edx
  434b95:	or     DWORD PTR [ecx],0x1012006
  434b9b:	adc    DWORD PTR [ecx+0x120040d],eax
  434ba1:	sbb    al,0xe
  434ba3:	push   es
  434ba4:	and    BYTE PTR [ecx],al
  434ba6:	add    DWORD PTR [edx],edx
  434ba8:	add    DWORD PTR ds:0x1012006,0x6d98211
  434bb2:	and    BYTE PTR [ecx],al
  434bb4:	add    DWORD PTR [ecx],edx
  434bb6:	sub    BYTE PTR [ebp+0xe012004],0xe
  434bbd:	or     BYTE PTR [eax],al
  434bbf:	add    edx,DWORD PTR [ecx]
  434bc1:	xor    cl,0x8
  434bc4:	or     BYTE PTR [eax],cl
  434bc6:	add    eax,0xc010220
  434bcb:	or     al,0x6
  434bcd:	and    BYTE PTR [ecx],al
  434bcf:	add    DWORD PTR [ecx],edx
  434bd1:	adc    DWORD PTR [ecx],0x1012006
  434bd7:	adc    DWORD PTR [edx+0x2005a9],eax
  434bdd:	adc    al,BYTE PTR [edx+0x12006c1]
  434be3:	add    DWORD PTR [edx],edx
  434be5:	cmp    BYTE PTR [ebp+0x1012006],0x12
  434bec:	add    DWORD PTR [ecx],0x12010705
  434bf2:	xor    BYTE PTR [ecx+0x12020706],0x81
  434bf9:	sub    DWORD PTR [edx],eax
  434bfb:	add    eax,0x82120107
  434c00:	aad    0x5
  434c02:	pop    es
  434c03:	add    DWORD PTR [edx],edx
  434c05:	sbb    ch,0x5
  434c08:	pop    es
  434c09:	add    DWORD PTR [edx],edx
  434c0b:	or     ch,0x27
  434c0e:	pop    es
  434c0f:	sbb    BYTE PTR [esi],cl
  434c11:	push   cs
  434c12:	adc    al,BYTE PTR [ecx+0xe0e0e89]
  434c18:	push   cs
  434c19:	push   cs
  434c1a:	push   cs
  434c1b:	push   cs
  434c1c:	push   cs
  434c1d:	adc    al,BYTE PTR [eax-0x1a7fed1f]
  434c23:	push   cs
  434c24:	push   cs
  434c25:	push   cs
  434c26:	adc    al,BYTE PTR [ecx-0x627eed63]
  434c2c:	adc    al,BYTE PTR [ecx+0x80e1d9d]
  434c32:	or     BYTE PTR [eax],cl
  434c34:	add    al,BYTE PTR [eax+eax*1]
  434c37:	add    DWORD PTR [ecx],eax
  434c39:	or     BYTE PTR [eax+eax*1],al
  434c3c:	add    DWORD PTR [edx],eax
  434c3e:	push   cs
  434c3f:	or     al,BYTE PTR [eax]
  434c41:	push   es
  434c42:	push   cs
  434c43:	push   cs
  434c44:	push   cs
  434c45:	push   cs
  434c46:	or     BYTE PTR [eax],cl
  434c48:	adc    DWORD PTR [ecx],ebx
  434c4a:	push   es
  434c4b:	add    BYTE PTR [ecx],al
  434c4d:	push   cs
  434c4e:	adc    DWORD PTR [ecx+0x2000521],eax
  434c54:	push   cs
  434c55:	push   cs
  434c56:	push   cs
  434c57:	add    al,0x20
  434c59:	add    BYTE PTR [edx],dl
  434c5b:	dec    ebp
  434c5c:	push   es
  434c5d:	and    BYTE PTR [ebx],al
  434c5f:	add    DWORD PTR [esi],ecx
  434c61:	push   cs
  434c62:	sbb    al,0x4
  434c64:	add    BYTE PTR [ecx],al
  434c66:	push   cs
  434c67:	sbb    al,0x5
  434c69:	add    BYTE PTR [ecx],al
  434c6b:	push   cs
  434c6c:	sbb    eax,0x20050e
  434c71:	adc    al,BYTE PTR [ecx+0x1200685]
  434c77:	add    DWORD PTR [ecx],edx
  434c79:	sub    cl,0x6
  434c7c:	and    BYTE PTR [ecx],al
  434c7e:	add    DWORD PTR [edx],edx
  434c80:	and    ch,0x7
  434c83:	add    BYTE PTR [edx],al
  434c85:	adc    al,BYTE PTR [eax+0x60e0ee1]
  434c8b:	add    BYTE PTR [ecx],al
  434c8d:	adc    al,BYTE PTR [ecx+0x70b082d]
  434c93:	pop    es
  434c94:	sbb    al,0xe
  434c96:	push   cs
  434c97:	adc    al,BYTE PTR [ecx+0x808089d]
  434c9d:	or     al,0x7
  434c9f:	or     BYTE PTR [esi+ecx*1],bl
  434ca2:	push   cs
  434ca3:	adc    al,BYTE PTR [ecx+0x808089d]
  434ca9:	add    al,BYTE PTR [esi]
  434cab:	add    BYTE PTR [ecx],al
  434cad:	adc    al,BYTE PTR [ecx+0x7090e61]
  434cb3:	push   es
  434cb4:	push   cs
  434cb5:	push   cs
  434cb6:	sbb    eax,0x808081c
  434cbb:	adc    al,BYTE PTR [eax]
  434cbd:	pop    es
  434cbe:	sbb    al,0x1c
  434cc0:	adc    al,BYTE PTR [edx+0x1c1d0e91]
  434cc6:	sbb    eax,0x82121d0e
  434ccb:	xchg   ecx,eax
  434ccc:	sbb    eax,0x8070e02
  434cd1:	push   cs
  434cd2:	sbb    al,0x12
  434cd4:	sbb    DWORD PTR [ebp+0x8a98112],0x5080808
  434cde:	and    BYTE PTR [edx],al
  434ce0:	or     BYTE PTR [eax],cl
  434ce2:	or     BYTE PTR ds:0x1c0e0907,cl
  434ce8:	push   cs
  434ce9:	push   cs
  434cea:	adc    al,BYTE PTR [ecx+0x8080889]
  434cf0:	add    al,BYTE PTR [eax+eiz*1]
  434cf3:	add    BYTE PTR [edx],dl
  434cf5:	dec    ecx
  434cf6:	push   es
  434cf7:	and    BYTE PTR [ebx],al
  434cf9:	add    DWORD PTR [esi],ecx
  434cfb:	push   cs
  434cfc:	add    dl,BYTE PTR [eax]
  434cfe:	pop    es
  434cff:	or     bl,BYTE PTR [edx+edx*1]
  434d02:	sub    DWORD PTR [ecx-0x7e7dedf2],0x8080808
  434d0c:	or     BYTE PTR [eax],cl
  434d0e:	push   es
  434d0f:	and    BYTE PTR [ecx],al
  434d11:	adc    al,BYTE PTR [edx+0x7230e81]
  434d17:	adc    edx,DWORD PTR [edx]
  434d19:	and    DWORD PTR [ecx+0x12],0x12026181
  434d20:	sub    DWORD PTR [ebp+0xe],0x1d051d0e
  434d27:	add    eax,0x80e0e0e
  434d2c:	sbb    eax,0x8618112
  434d31:	sbb    eax,0x86d8112
  434d36:	or     BYTE PTR [eax],cl
  434d38:	add    al,BYTE PTR [esi]
  434d3a:	and    BYTE PTR [eax],al
  434d3c:	sbb    eax,0x6618112
  434d41:	and    BYTE PTR [eax],al
  434d43:	sbb    eax,0x36d8112
  434d48:	and    BYTE PTR [eax],al
  434d4a:	or     al,BYTE PTR [eax+eax*1]
  434d4d:	add    DWORD PTR [esi],ecx
  434d4f:	or     al,BYTE PTR [eax+eax*1]
  434d52:	add    DWORD PTR ds:0x1407240e,ecx
  434d58:	add    dl,BYTE PTR [edx]
  434d5a:	and    DWORD PTR [ecx+0x12],0x81126181
  434d61:	ins    DWORD PTR es:[edi],dx
  434d62:	push   cs
  434d63:	sbb    eax,0xe051d05
  434d68:	push   cs
  434d69:	push   cs
  434d6a:	push   cs
  434d6b:	push   cs
  434d6c:	or     BYTE PTR ds:0x8618112,bl
  434d72:	sbb    eax,0x86d8112
  434d77:	or     BYTE PTR [eax],cl
  434d79:	add    dl,BYTE PTR [edi]
  434d7b:	pop    es
  434d7c:	push   cs
  434d7d:	sbb    eax,0x1d051d05
  434d82:	add    eax,0x51d031d
  434d87:	or     BYTE PTR [edx],dl
  434d89:	and    BYTE PTR [ebp+0x8],0x8
  434d8d:	or     BYTE PTR [eax],cl
  434d8f:	or     BYTE PTR [eax],cl
  434d91:	or     BYTE PTR [eax+eiz*1],al
  434d94:	add    BYTE PTR ds:0x1200403,bl
  434d9a:	or     BYTE PTR [eax],cl
  434d9c:	add    al,0x0
  434d9e:	add    DWORD PTR [eax],ecx
  434da0:	add    eax,DWORD PTR [esi]
  434da2:	and    BYTE PTR [ecx],al
  434da4:	sbb    eax,0x1a051d05
  434da9:	pop    es
  434daa:	push   cs
  434dab:	sbb    eax,0x4d821205
  434db0:	adc    al,BYTE PTR [edx+0xa0a0861]
  434db6:	adc    al,BYTE PTR [ecx+0x6d81126d]
  434dbc:	adc    DWORD PTR [eax+ecx*1],ebp
  434dbf:	or     BYTE PTR [eax],cl
  434dc1:	or     BYTE PTR [edx],al
  434dc3:	or     ah,BYTE PTR [eax]
  434dc5:	add    eax,DWORD PTR [ecx]
  434dc7:	push   cs
  434dc8:	adc    DWORD PTR [ecx+0x69811171],eax
  434dce:	add    al,0x20
  434dd0:	add    DWORD PTR [ecx],eax
  434dd2:	or     cl,BYTE PTR [ecx]
  434dd4:	and    BYTE PTR [edx],al
  434dd6:	adc    al,BYTE PTR [edx+0x1d051d5d]
  434ddc:	add    eax,0x103200c
  434de1:	adc    al,BYTE PTR [ecx+0x5d821281]
  434de7:	adc    DWORD PTR [edx+0x3200751],eax
  434ded:	or     BYTE PTR ds:0x7080805,bl
  434df3:	and    BYTE PTR [ebx],al
  434df5:	add    DWORD PTR ds:0xa080805,ebx
  434dfb:	pop    es
  434dfc:	add    eax,0x81121d1c
  434e01:	xchg   ebp,eax
  434e02:	or     BYTE PTR [eax],cl
  434e04:	or     BYTE PTR [esi],al
  434e06:	add    BYTE PTR [eax],al
  434e08:	sbb    eax,0x5958112
  434e0d:	and    BYTE PTR [eax],al
  434e0f:	adc    al,BYTE PTR [ecx+0x8070c99]
  434e15:	push   cs
  434e16:	adc    al,BYTE PTR [ecx+0x80e0e9d]
  434e1c:	or     BYTE PTR [eax],cl
  434e1e:	add    al,BYTE PTR [esi]
  434e20:	add    BYTE PTR [ebx],al
  434e22:	push   cs
  434e23:	push   cs
  434e24:	push   cs
  434e25:	push   cs
  434e26:	push   es
  434e27:	add    BYTE PTR [ecx],al
  434e29:	adc    DWORD PTR [edx+0x70d0ec5],eax
  434e2f:	or     ecx,DWORD PTR [ecx]
  434e31:	or     DWORD PTR [ecx],ecx
  434e33:	or     BYTE PTR [ecx],cl
  434e35:	or     BYTE PTR [eax],cl
  434e37:	or     BYTE PTR [edx],al
  434e39:	or     BYTE PTR [ecx],cl
  434e3b:	or     eax,DWORD PTR [edi]
  434e3d:	or     DWORD PTR [ecx],ecx
  434e3f:	or     DWORD PTR [eax],ecx
  434e41:	add    eax,0x8080808
  434e46:	or     BYTE PTR ds:0x51d0a07,cl
  434e4c:	or     DWORD PTR [ecx],ecx
  434e4e:	or     BYTE PTR ds:0x8080808,al
  434e54:	or     BYTE PTR ds:0x82120000,al
  434e5a:	jge    0x434e65
  434e5c:	pop    es
  434e5d:	add    edx,DWORD PTR [edx]
  434e5f:	and    BYTE PTR [ecx],0x12
  434e62:	and    BYTE PTR [ecx],0x2
  434e65:	add    eax,0x1c020200
  434e6a:	sbb    al,0x5
  434e6c:	and    BYTE PTR [eax],al
  434e6e:	adc    al,BYTE PTR [ecx+0x22007ad]
  434e74:	add    DWORD PTR [esi],ecx
  434e76:	adc    al,BYTE PTR [ecx+0x10705ad]
  434e7c:	adc    al,BYTE PTR [ecx+0x1000831]
  434e82:	adc    al,BYTE PTR [eax-0x3e7fed3f]
  434e88:	push   es
  434e89:	pop    es
  434e8a:	add    edx,DWORD PTR [edx]
  434e8c:	cmp    BYTE PTR [edx+eax*1],bl
  434e8f:	add    eax,0x12010120
  434e94:	or     DWORD PTR [eax],ecx
  434e96:	pop    es
  434e97:	add    ecx,DWORD PTR [esi]
  434e99:	sbb    eax,0x81811205
  434e9e:	add    eax,0x51d0100
  434ea3:	push   cs
  434ea4:	pop    es
  434ea5:	and    BYTE PTR [ebx],al
  434ea7:	push   cs
  434ea8:	sbb    eax,0x6080805
  434ead:	add    BYTE PTR [edx],al
  434eaf:	or     BYTE PTR ds:0x60805,bl
  434eb5:	add    cl,BYTE PTR [edx]
  434eb7:	sbb    eax,0x60805
  434ebc:	add    cl,BYTE PTR [ebx*1+0x60805]
  434ec3:	add    cl,BYTE PTR ds:0xa08051d
  434ec9:	add    BYTE PTR ds:0x8611201,al
  434ecf:	adc    ah,BYTE PTR [ecx+0x8]
  434ed2:	or     BYTE PTR [edi+eax*1],al
  434ed5:	add    DWORD PTR [edx],edx
  434ed7:	cmp    BYTE PTR [edi+eax*1],al
  434eda:	add    cl,BYTE PTR [eax]
  434edc:	push   cs
  434edd:	add    al,0x0
  434edf:	add    DWORD PTR [esi],ecx
  434ee1:	push   cs
  434ee2:	or     al,BYTE PTR [edi]
  434ee4:	push   es
  434ee5:	push   cs
  434ee6:	or     BYTE PTR [esi],cl
  434ee8:	or     bl,BYTE PTR ds:0x4051d05
  434eee:	and    BYTE PTR [ecx],al
  434ef0:	or     BYTE PTR [esi],cl
  434ef2:	add    al,0x20
  434ef4:	add    DWORD PTR [ebx],eax
  434ef6:	or     BYTE PTR [edi],al
  434ef8:	add    BYTE PTR [edx],al
  434efa:	or     cl,BYTE PTR [esi]
  434efc:	adc    DWORD PTR [ecx+0x1000535],eax
  434f02:	sbb    eax,0x50a05
  434f07:	add    DWORD PTR [ecx],eax
  434f09:	adc    ah,BYTE PTR [ecx+0x5]
  434f0c:	pop    es
  434f0d:	add    bl,BYTE PTR ds:0x7041c05
  434f13:	add    DWORD PTR ds:0x17072b05,ebx
  434f19:	adc    al,BYTE PTR [ecx+0x7d811281]
  434f1f:	pop    es
  434f20:	or     BYTE PTR [edx],dl
  434f22:	adc    BYTE PTR [ebp+0x1d],0x5
  434f26:	sbb    eax,0x12050205
  434f2b:	sbb    BYTE PTR [ebp+0x8],0x1d
  434f2f:	add    eax,0x808051d
  434f34:	sbb    eax,0x59811205
  434f39:	or     BYTE PTR [eax],cl
  434f3b:	sbb    eax,0x1d051d05
  434f40:	add    eax,0x1200508
  434f45:	add    DWORD PTR ds:0x200505,ebx
  434f4b:	adc    al,BYTE PTR [edx+0x5200a5d]
  434f51:	or     BYTE PTR ds:0x1d080805,bl
  434f57:	add    eax,0x3200808
  434f5c:	sbb    eax,0x8051d05
  434f61:	or     BYTE PTR [ecx],cl
  434f63:	and    BYTE PTR [edx],al
  434f65:	add    DWORD PTR [edx],edx
  434f67:	add    DWORD PTR [ecx+0x4558111],0x51d0020
  434f71:	sysret 
  434f73:	or     BYTE PTR [esi],cl
  434f75:	sbb    eax,0x81811205
  434f7a:	adc    al,BYTE PTR [ecx+0x8080851]
  434f80:	or     BYTE PTR [edi],al
  434f82:	adc    eax,0x2858012
  434f87:	or     BYTE PTR [eax],cl
  434f89:	push   es
  434f8a:	and    BYTE PTR [edx],al
  434f8c:	add    DWORD PTR ds:0x20060205,ebx
  434f92:	add    DWORD PTR [ecx],eax
  434f94:	adc    al,BYTE PTR [ecx+0x2200781]
  434f9a:	add    DWORD PTR [ebx],edx
  434f9c:	add    BYTE PTR [ebx],dl
  434f9e:	add    DWORD PTR [esi],eax
  434fa0:	and    BYTE PTR [eax],al
  434fa2:	sbb    eax,0x50d8212
  434fa7:	and    BYTE PTR [eax],al
  434fa9:	adc    DWORD PTR [ecx+0xf072b8d],eax
  434faf:	adc    al,BYTE PTR [edx+0x1821291]
  434fb5:	sbb    al,0x12
  434fb7:	xor    ecx,0x12c98012
  434fbd:	sbb    ecx,0x1d058212
  434fc3:	adc    al,BYTE PTR [edx-0x7eedf76f]
  434fc9:	aad    0x11
  434fcb:	or     DWORD PTR [ebp+0x118d8111],0x121d8d81
  434fd5:	xor    ecx,0x1200608
  434fdb:	adc    DWORD PTR [edx+0x20060849],eax
  434fe1:	add    DWORD PTR [ecx],edx
  434fe3:	add    BYTE PTR [ebp+0x8],0xb
  434fe7:	add    BYTE PTR [edx],al
  434fe9:	adc    al,BYTE PTR [edx+0x45821101]
  434fef:	adc    DWORD PTR [edx+0x1200949],eax
  434ff5:	sbb    eax,0x11f18112
  434ffa:	or     ebp,0x12002005
  435000:	add    BYTE PTR ds:0xe040007,0xe
  435007:	push   cs
  435008:	push   cs
  435009:	push   cs
  43500a:	mov    ebp,cr0
  43500d:	add    DWORD PTR [esi],ecx
  43500f:	adc    al,BYTE PTR [edx-0x7dede26f]
  435015:	xchg   ecx,eax
  435016:	adc    al,BYTE PTR [edx+0x20080291]
  43501c:	add    al,BYTE PTR [edx]
  43501e:	adc    eax,DWORD PTR [eax]
  435020:	adc    BYTE PTR [ebx],dl
  435022:	add    DWORD PTR ds:0x81120020,eax
  435028:	aad    0x8
  43502a:	and    BYTE PTR [ecx],al
  43502c:	adc    al,BYTE PTR [eax-0x6e7ded37]
  435032:	or     BYTE PTR [edi],al
  435034:	add    al,0x8
  435036:	or     BYTE PTR ds:0x6501205,bl
  43503c:	and    BYTE PTR [edx],al
  43503e:	add    DWORD PTR ds:0x7100805,ebx
  435044:	add    edx,DWORD PTR [edx]
  435046:	sub    ecx,0x15f58112
  43504c:	adc    al,BYTE PTR [eax-0x7eedfe73]
  435052:	cmc    
  435053:	add    eax,0x81120000
  435058:	jmp    0x15437067
  43505d:	adc    al,BYTE PTR [eax-0x7eedfe6f]
  435063:	cmc    
  435064:	or     DWORD PTR [eax],esp
  435066:	add    BYTE PTR ds:0x18d8012,dl
  43506c:	adc    eax,DWORD PTR [eax]
  43506e:	or     BYTE PTR ds:0x1898012,dl
  435074:	adc    al,BYTE PTR [ecx+0x121508f5]
  43507a:	or     BYTE PTR [ebp-0xa7eedff],0x7
  435081:	and    BYTE PTR [edx],al
  435083:	add    DWORD PTR [edx],edx
  435085:	adc    BYTE PTR [ecx+0xa071502],0x8
  43508c:	sbb    eax,0x8080805
  435091:	adc    DWORD PTR [ecx+0x498211ed],eax
  435097:	or     BYTE PTR [ecx],dl
  435099:	sub    ebp,0x68d8111
  43509f:	and    BYTE PTR [ecx],al
  4350a1:	or     BYTE PTR [ecx],dl
  4350a3:	or     BYTE PTR [ecx+0xd],0x7
  4350a7:	add    eax,0x1182121d
  4350ac:	or     BYTE PTR ds:0x8918212,bl
  4350b2:	or     BYTE PTR [esi],al
  4350b4:	and    BYTE PTR [eax],al
  4350b6:	sbb    eax,0xe118212
  4350bb:	pop    es
  4350bc:	add    eax,0x11f18112
  4350c1:	sbb    ebp,0x81121d07
  4350c7:	icebp  
  4350c8:	or     BYTE PTR [eax+eiz*1],al
  4350cb:	add    DWORD PTR [esp+ebx*1],ebx
  4350ce:	add    esp,DWORD PTR [eax]
  4350d0:	add    BYTE PTR [esi],al
  4350d2:	add    eax,0x82120020
  4350d7:	or     eax,0x1d002006
  4350dc:	adc    al,BYTE PTR [edx+0xd072191]
  4350e2:	or     BYTE PTR [ecx],dl
  4350e4:	sbb    ebp,0x82120508
  4350ea:	add    DWORD PTR [edx],edx
  4350ec:	xor    ecx,0x12918212
  4350f2:	cmp    ecx,0x12918212
  4350f8:	add    BYTE PTR [ecx],0x12
  4350fb:	xor    ecx,0xe5811108
  435101:	add    al,0x6
  435103:	adc    DWORD PTR [ecx+0x2005dd],eax
  435109:	adc    DWORD PTR [ecx+0x12004e5],eax
  43510f:	push   cs
  435110:	or     BYTE PTR ds:0x51d0120,al
  435116:	or     BYTE PTR ds:0x1d080120,al
  43511c:	add    eax,0x1203200e
  435121:	add    BYTE PTR [ecx],0x8
  435124:	sbb    eax,0x1d918212
  435129:	adc    al,BYTE PTR [edx+0x200591]
  43512f:	adc    DWORD PTR [edx+0x200545],eax
  435135:	adc    DWORD PTR [edx+0x2200949],eax
  43513b:	or     BYTE PTR [ecx],dl
  43513d:	add    BYTE PTR [ebp+0x11],0x82
  435141:	dec    ecx
  435142:	push   cs
  435143:	and    BYTE PTR [ebx],al
  435145:	adc    al,BYTE PTR [ecx+0x121d08f1]
  43514b:	adc    BYTE PTR [ecx-0x6e7dede3],0x5
  435152:	and    BYTE PTR [eax],al
  435154:	adc    DWORD PTR [edx+0x1200641],eax
  43515a:	or     BYTE PTR [ecx],dl
  43515c:	add    BYTE PTR [ecx+0xe],0x20
  435160:	add    edx,DWORD PTR [edx]
  435162:	adc    BYTE PTR [ecx-0x7dede2f8],0x91
  435169:	sbb    eax,0xe918212
  43516e:	and    BYTE PTR [ebx],al
  435170:	adc    al,BYTE PTR [ecx+0x121d08f9]
  435176:	adc    BYTE PTR [ecx-0x6e7dede3],0x5
  43517d:	and    BYTE PTR [eax],al
  43517f:	adc    DWORD PTR [ecx+0xfd],eax
  435185:	pop    ecx
  435186:	adc    DWORD PTR [eax],eax
  435188:	and    al,BYTE PTR [eax]
  43518a:	xor    eax,DWORD PTR [eax]
  43518c:	inc    esp
  43518d:	add    BYTE PTR [ecx],bh
  43518f:	add    BYTE PTR [edx+0x0],al
  435192:	cmp    DWORD PTR [eax],eax
  435194:	xor    al,0x0
  435196:	inc    ecx
  435197:	add    BYTE PTR [ecx],bh
  435199:	add    BYTE PTR [eax],bh
  43519b:	add    BYTE PTR [edx+0x0],al
  43519e:	sub    eax,0x36003700
  4351a3:	add    BYTE PTR [ecx+0x0],al
  4351a6:	cmp    BYTE PTR [eax],al
  4351a8:	sub    eax,0x38003400
  4351ad:	add    BYTE PTR [ecx],dh
  4351af:	add    BYTE PTR [eax],dh
  4351b1:	add    BYTE PTR ds:0x31004200,ch
  4351b7:	add    BYTE PTR [ecx+0x0],al
  4351ba:	xor    BYTE PTR [eax],al
  4351bc:	sub    eax,0x42003400
  4351c1:	add    BYTE PTR [ebp+0x0],al
  4351c4:	aaa    
  4351c5:	add    BYTE PTR [ebx+0x0],al
  4351c8:	xor    al,0x0
  4351ca:	inc    esi
  4351cb:	add    BYTE PTR [ecx],bh
  4351cd:	add    BYTE PTR [ebx+0x0],al
  4351d0:	cmp    DWORD PTR [eax],eax
  4351d2:	cmp    BYTE PTR [eax],al
  4351d4:	inc    esp
  4351d5:	add    BYTE PTR [ecx+0x0],al
  4351d8:	xor    al,BYTE PTR [eax]
  4351da:	and    eax,DWORD PTR [eax]
  4351dc:	adc    al,0x0
  4351de:	add    DWORD PTR [ecx],eax
  4351e0:	add    BYTE PTR [ecx],ch
  4351e2:	push   esi
  4351e3:	add    BYTE PTR [edi+0x0],al
  4351e6:	inc    esi
  4351e7:	add    BYTE PTR [edx+0x0],bh
  4351ea:	popa   
  4351eb:	add    BYTE PTR [ecx+0x0],bh
  4351ee:	inc    edx
  4351ef:	add    BYTE PTR [esi+0x0],cl
  4351f2:	pop    ecx
  4351f3:	add    BYTE PTR [edi+0x0],dl
  4351f6:	xor    eax,0x5a006800
  4351fb:	add    BYTE PTR [edx],dh
  4351fd:	add    BYTE PTR [esi+0x0],dl
  435200:	jns    0x435202
  435202:	dec    edx
  435203:	add    BYTE PTR [ecx+0x0],dl
  435206:	cmp    eax,0x3d00
  43520b:	sub    DWORD PTR [esi+0x0],edx
  43520e:	inc    edi
  43520f:	add    BYTE PTR [esi+0x0],al
  435212:	jp     0x435214
  435214:	popa   
  435215:	add    BYTE PTR [ecx+0x0],bh
  435218:	inc    edx
  435219:	add    BYTE PTR [esi+0x0],cl
  43521c:	pop    ecx
  43521d:	add    BYTE PTR [edi+0x0],dl
  435220:	xor    eax,0x5a006800
  435225:	add    BYTE PTR [edx],dh
  435227:	add    BYTE PTR [esi+0x0],dl
  43522a:	jns    0x43522c
  43522c:	dec    edx
  43522d:	add    BYTE PTR [ecx+0x0],al
  435230:	cmp    eax,0x3d00
  435235:	pop    ds
  435236:	push   eax
  435237:	add    BYTE PTR [ebp+0x0],dh
  43523a:	bound  eax,QWORD PTR [eax]
  43523c:	ins    BYTE PTR es:[edi],dx
  43523d:	add    BYTE PTR [ecx+0x0],ch
  435240:	arpl   WORD PTR [eax],ax
  435242:	dec    ebx
  435243:	add    BYTE PTR [ebp+0x0],ah
  435246:	jns    0x435248
  435248:	push   esp
  435249:	add    BYTE PTR [edi+0x0],ch
  43524c:	imul   eax,DWORD PTR [eax],0x65
  43524f:	add    BYTE PTR [esi+0x0],ch
  435252:	cmp    eax,0x701f0000
  435257:	add    BYTE PTR [ebp+0x0],dh
  43525a:	bound  eax,QWORD PTR [eax]
  43525c:	ins    BYTE PTR es:[edi],dx
  43525d:	add    BYTE PTR [ecx+0x0],ch
  435260:	arpl   WORD PTR [eax],ax
  435262:	imul   eax,DWORD PTR [eax],0x65
  435265:	add    BYTE PTR [ecx+0x0],bh
  435268:	je     0x43526a
  43526a:	outs   dx,DWORD PTR ds:[esi]
  43526b:	add    BYTE PTR [ebx+0x0],ch
  43526e:	add    BYTE PTR gs:[esi+0x0],ch
  435272:	cmp    eax,0x56290000
  435277:	add    BYTE PTR [edi+0x0],al
  43527a:	inc    esi
  43527b:	add    BYTE PTR [edx+0x0],bh
  43527e:	popa   
  43527f:	add    BYTE PTR [ecx+0x0],bh
  435282:	inc    edx
  435283:	add    BYTE PTR [esi+0x0],cl
  435286:	pop    ecx
  435287:	add    BYTE PTR [edi+0x0],dl
  43528a:	xor    eax,0x5a006800
  43528f:	add    BYTE PTR [edx],dh
  435291:	add    BYTE PTR [esi+0x0],dl
  435294:	jns    0x435296
  435296:	dec    ebx
  435297:	add    BYTE PTR [edi+0x0],ah
  43529a:	cmp    eax,0x3d00
  43529f:	add    ebp,DWORD PTR [esi]
  4352a1:	add    BYTE PTR [eax],al
  4352a3:	pop    ss
  4352a4:	pop    edi
  4352a5:	add    BYTE PTR [ebp+0x0],al
  4352a8:	outs   dx,BYTE PTR ds:[esi]
  4352a9:	add    BYTE PTR [ebx+0x0],ah
  4352ac:	jb     0x4352ae
  4352ae:	jns    0x4352b0
  4352b0:	jo     0x4352b2
  4352b2:	je     0x4352b4
  4352b4:	add    BYTE PTR gs:[eax+eax*1+0x24],ah
  4352b9:	add    BYTE PTR [eax],al
  4352bb:	pop    ecx
  4352bc:	add    BYTE PTR fs:[ecx+0x0],bh
  4352c0:	outs   dx,BYTE PTR ds:[esi]
  4352c1:	add    BYTE PTR [ecx+0x0],ah
  4352c4:	ins    DWORD PTR es:[edi],dx
  4352c5:	add    BYTE PTR [ecx+0x0],ch
  4352c8:	arpl   WORD PTR [eax],ax
  4352ca:	and    BYTE PTR [eax],al
  4352cc:	ins    DWORD PTR es:[edi],dx
  4352cd:	add    BYTE PTR [ebp+0x0],ah
  4352d0:	je     0x4352d2
  4352d2:	push   0x64006f00
  4352d7:	add    BYTE PTR [eax],ah
  4352d9:	add    BYTE PTR [eax+eax*1+0x6f],ah
  4352dd:	add    BYTE PTR [ebp+0x0],ah
  4352e0:	jae    0x4352e2
  4352e2:	and    BYTE PTR [eax],al
  4352e4:	outs   dx,BYTE PTR ds:[esi]
  4352e5:	add    BYTE PTR [edi+0x0],ch
  4352e8:	je     0x4352ea
  4352ea:	and    BYTE PTR [eax],al
  4352ec:	jae    0x4352ee
  4352ee:	jne    0x4352f0
  4352f0:	jo     0x4352f2
  4352f2:	jo     0x4352f4
  4352f4:	outs   dx,DWORD PTR ds:[esi]
  4352f5:	add    BYTE PTR [edx+0x0],dh
  4352f8:	je     0x4352fa
  4352fa:	and    BYTE PTR [eax],al
  4352fc:	data16 add BYTE PTR [ecx+0x0],ah
  435300:	jne    0x435302
  435302:	ins    BYTE PTR es:[edi],dx
  435303:	add    BYTE PTR [eax+eax*1+0x20],dh
  435307:	add    BYTE PTR [ebx+0x0],ah
  43530a:	ins    BYTE PTR es:[edi],dx
  43530b:	add    BYTE PTR [ecx+0x0],ah
  43530e:	jne    0x435310
  435310:	jae    0x435312
  435312:	add    BYTE PTR gs:[eax],al
  435315:	das    
  435316:	jne    0x435318
  435318:	outs   dx,BYTE PTR ds:[esi]
  435319:	add    BYTE PTR [ebp+0x0],ah
  43531c:	js     0x43531e
  43531e:	jo     0x435320
  435320:	add    BYTE PTR gs:[ebx+0x0],ah
  435324:	je     0x435326
  435326:	add    BYTE PTR gs:[eax+eax*1+0x20],ah
  43532b:	add    BYTE PTR [edi+0x0],cl
  43532e:	jo     0x435330
  435330:	add    BYTE PTR gs:[edx+0x0],dh
  435334:	popa   
  435335:	add    BYTE PTR [esi+0x0],ch
  435338:	add    BYTE PTR fs:[eax+eax*1+0x79],dl
  43533d:	add    BYTE PTR [eax+0x0],dh
  435340:	add    BYTE PTR gs:[eax],ah
  435343:	add    BYTE PTR [eax],al
  435345:	add    BYTE PTR [eax],al
  435347:	add    BYTE PTR [eax+0x53],dh
  43534a:	add    eax,DWORD PTR [eax]
	...
  435354:	xchg   edx,eax
  435355:	push   ebx
  435356:	add    eax,DWORD PTR [eax]
  435358:	add    BYTE PTR [eax],ah
	...
  43536e:	add    BYTE PTR [eax],al
  435370:	test   BYTE PTR [ebx+0x3],dl
	...
  435383:	add    BYTE PTR [eax],al
  435385:	add    BYTE PTR [edi+0x43],bl
  435388:	outs   dx,DWORD PTR ds:[esi]
  435389:	jb     0x4353d0
  43538b:	js     0x4353f2
  43538d:	dec    ebp
  43538e:	popa   
  43538f:	imul   ebp,DWORD PTR [esi+0x0],0x6f63736d
  435396:	jb     0x4353fd
  435398:	gs cs fs ins BYTE PTR es:[edi],dx
  43539c:	ins    BYTE PTR es:[edi],dx
  43539d:	add    BYTE PTR [eax],al
  43539f:	add    BYTE PTR [eax],al
  4353a1:	add    bh,bh
  4353a3:	and    eax,0x402000
