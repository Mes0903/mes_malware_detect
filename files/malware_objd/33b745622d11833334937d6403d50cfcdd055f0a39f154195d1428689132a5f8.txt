
33b745622d11833334937d6403d50cfcdd055f0a39f154195d1428689132a5f8.exe:     file format pei-i386


Disassembly of section .text:

64001000 <.text>:
64001000:	push   esi
64001001:	mov    esi,DWORD PTR [esp+0x8]
64001005:	test   esi,esi
64001007:	je     0x64001036
64001009:	mov    eax,DWORD PTR [esp+0xc]
6400100d:	test   eax,eax
6400100f:	je     0x64001036
64001011:	mov    ecx,DWORD PTR [esp+0x10]
64001015:	mov    edx,DWORD PTR [esp+0x14]
64001019:	push   ecx
6400101a:	push   esi
6400101b:	push   0xffffffff
6400101d:	push   eax
6400101e:	push   0x0
64001020:	push   edx
64001021:	mov    WORD PTR [esi],0x0
64001026:	call   DWORD PTR ds:0x6402c02c
6400102c:	neg    eax
6400102e:	sbb    eax,eax
64001030:	and    eax,esi
64001032:	pop    esi
64001033:	ret    0x10
64001036:	xor    eax,eax
64001038:	pop    esi
64001039:	ret    0x10
6400103c:	int3   
6400103d:	int3   
6400103e:	int3   
6400103f:	int3   
64001040:	push   esi
64001041:	mov    esi,DWORD PTR [esp+0x8]
64001045:	test   esi,esi
64001047:	je     0x64001078
64001049:	mov    eax,DWORD PTR [esp+0xc]
6400104d:	test   eax,eax
6400104f:	je     0x64001078
64001051:	mov    ecx,DWORD PTR [esp+0x10]
64001055:	mov    edx,DWORD PTR [esp+0x14]
64001059:	push   0x0
6400105b:	push   0x0
6400105d:	push   ecx
6400105e:	push   esi
6400105f:	push   0xffffffff
64001061:	push   eax
64001062:	push   0x0
64001064:	push   edx
64001065:	mov    BYTE PTR [esi],0x0
64001068:	call   DWORD PTR ds:0x6402c014
6400106e:	neg    eax
64001070:	sbb    eax,eax
64001072:	and    eax,esi
64001074:	pop    esi
64001075:	ret    0x10
64001078:	xor    eax,eax
6400107a:	pop    esi
6400107b:	ret    0x10
6400107e:	int3   
6400107f:	int3   
64001080:	mov    eax,DWORD PTR [esp+0x4]
64001084:	push   0x640440ac
64001089:	lea    ecx,[esp+0x8]
6400108d:	push   ecx
6400108e:	mov    DWORD PTR [esp+0xc],eax
64001092:	call   0x64013884
64001097:	int3   
64001098:	int3   
64001099:	int3   
6400109a:	int3   
6400109b:	int3   
6400109c:	int3   
6400109d:	int3   
6400109e:	int3   
6400109f:	int3   
640010a0:	mov    eax,DWORD PTR [esp+0x4]
640010a4:	cmp    eax,0x50
640010a7:	ja     0x640010cb
640010a9:	movzx  ecx,BYTE PTR [eax+0x640010e8]
640010b0:	jmp    DWORD PTR [ecx*4+0x640010d8]
640010b7:	push   0x8007000e
640010bc:	call   0x64001080
640010c1:	push   0x80070057
640010c6:	call   0x64001080
640010cb:	push   0x80004005
640010d0:	call   0x64001080
640010d5:	ret    
640010d6:	mov    edi,edi
640010d8:	aad    0x10
640010da:	add    BYTE PTR [edi+esi*4+0x10],ah
640010de:	add    BYTE PTR [ecx+eax*8+0x10],ah
640010e2:	add    BYTE PTR [ebx+ecx*8+0x10],ah
640010e6:	add    BYTE PTR [eax+eax*1+0x3],ah
640010ea:	add    eax,DWORD PTR [ebx]
640010ec:	add    eax,DWORD PTR [ebx]
640010ee:	add    eax,DWORD PTR [ebx]
640010f0:	add    eax,DWORD PTR [ebx]
640010f2:	add    eax,DWORD PTR [ebx]
640010f4:	add    DWORD PTR [ebx],eax
640010f6:	add    eax,DWORD PTR [ebx]
640010f8:	add    eax,DWORD PTR [ebx]
640010fa:	add    eax,DWORD PTR [ebx]
640010fc:	add    eax,DWORD PTR [ebx]
640010fe:	add    al,BYTE PTR [ebx]
64001100:	add    eax,DWORD PTR [ebx]
64001102:	add    eax,DWORD PTR [ebx]
64001104:	add    eax,DWORD PTR [ebx]
64001106:	add    eax,DWORD PTR [ebx]
64001108:	add    eax,DWORD PTR [ebx]
6400110a:	add    al,BYTE PTR [ebx]
6400110c:	add    eax,DWORD PTR [ebx]
6400110e:	add    eax,DWORD PTR [ebx]
64001110:	add    eax,DWORD PTR [ebx]
64001112:	add    eax,DWORD PTR [ebx]
64001114:	add    eax,DWORD PTR [ebx]
64001116:	add    eax,DWORD PTR [ebx]
64001118:	add    eax,DWORD PTR [ebx]
6400111a:	add    eax,DWORD PTR [ebx]
6400111c:	add    eax,DWORD PTR [ebx]
6400111e:	add    eax,DWORD PTR [ebx]
64001120:	add    eax,DWORD PTR [ebx]
64001122:	add    eax,DWORD PTR [ebx]
64001124:	add    eax,DWORD PTR [ebx]
64001126:	add    eax,DWORD PTR [ebx]
64001128:	add    eax,DWORD PTR [ebx]
6400112a:	add    eax,DWORD PTR [ebx]
6400112c:	add    eax,DWORD PTR [ebx]
6400112e:	add    eax,DWORD PTR [ebx]
64001130:	add    eax,DWORD PTR [ebx]
64001132:	add    eax,DWORD PTR [ebx]
64001134:	add    eax,DWORD PTR [ebx]
64001136:	add    eax,DWORD PTR [ebx]
64001138:	add    ah,cl
6400113a:	int3   
6400113b:	int3   
6400113c:	int3   
6400113d:	int3   
6400113e:	int3   
6400113f:	int3   
64001140:	push   ebx
64001141:	mov    ebx,DWORD PTR [esp+0x8]
64001145:	push   edi
64001146:	mov    edi,DWORD PTR [esp+0x10]
6400114a:	push   edi
6400114b:	push   ebx
6400114c:	call   DWORD PTR ds:0x6402c020
64001152:	test   eax,eax
64001154:	jne    0x64001159
64001156:	pop    edi
64001157:	pop    ebx
64001158:	ret    
64001159:	push   esi
6400115a:	push   eax
6400115b:	call   DWORD PTR ds:0x6402c01c
64001161:	mov    esi,eax
64001163:	test   esi,esi
64001165:	je     0x64001194
64001167:	push   edi
64001168:	push   ebx
64001169:	call   DWORD PTR ds:0x6402c018
6400116f:	mov    ecx,DWORD PTR [esp+0x18]
64001173:	add    eax,esi
64001175:	and    ecx,0xf
64001178:	jbe    0x64001190
6400117a:	lea    ebx,[ebx+0x0]
64001180:	cmp    esi,eax
64001182:	jae    0x64001194
64001184:	sub    ecx,0x1
64001187:	movzx  edx,WORD PTR [esi]
6400118a:	lea    esi,[esi+edx*2+0x2]
6400118e:	jne    0x64001180
64001190:	cmp    esi,eax
64001192:	jb     0x6400119a
64001194:	pop    esi
64001195:	pop    edi
64001196:	xor    eax,eax
64001198:	pop    ebx
64001199:	ret    
6400119a:	mov    ax,WORD PTR [esi]
6400119d:	neg    ax
640011a0:	sbb    eax,eax
640011a2:	and    eax,esi
640011a4:	pop    esi
640011a5:	pop    edi
640011a6:	pop    ebx
640011a7:	ret    
640011a8:	int3   
640011a9:	int3   
640011aa:	int3   
640011ab:	int3   
640011ac:	int3   
640011ad:	int3   
640011ae:	int3   
640011af:	int3   
640011b0:	push   ebx
640011b1:	push   ebp
640011b2:	push   esi
640011b3:	push   edi
640011b4:	xor    edi,edi
640011b6:	push   edi
640011b7:	mov    ecx,0x64053970
640011bc:	call   0x64013308
640011c1:	mov    esi,eax
640011c3:	test   esi,esi
640011c5:	lea    ebp,[edi+0x1]
640011c8:	je     0x64001217
640011ca:	mov    ebx,DWORD PTR [esp+0x14]
640011ce:	mov    edi,edi
640011d0:	test   edi,edi
640011d2:	jne    0x64001217
640011d4:	mov    eax,DWORD PTR [esp+0x18]
640011d8:	mov    ecx,ebx
640011da:	shr    ecx,0x4
640011dd:	add    ecx,0x1
640011e0:	push   eax
640011e1:	movzx  edx,cx
640011e4:	push   edx
640011e5:	push   0x6
640011e7:	push   esi
640011e8:	call   DWORD PTR ds:0x6402c028
640011ee:	test   eax,eax
640011f0:	je     0x64001203
640011f2:	push   ebx
640011f3:	push   eax
640011f4:	push   esi
640011f5:	call   0x64001140
640011fa:	mov    edi,eax
640011fc:	add    esp,0xc
640011ff:	test   edi,edi
64001201:	jne    0x6400121e
64001203:	push   ebp
64001204:	mov    ecx,0x64053970
64001209:	call   0x64013308
6400120e:	mov    esi,eax
64001210:	add    ebp,0x1
64001213:	test   esi,esi
64001215:	jne    0x640011d0
64001217:	pop    edi
64001218:	pop    esi
64001219:	pop    ebp
6400121a:	xor    eax,eax
6400121c:	pop    ebx
6400121d:	ret    
6400121e:	pop    edi
6400121f:	mov    eax,esi
64001221:	pop    esi
64001222:	pop    ebp
64001223:	pop    ebx
64001224:	ret    
64001225:	int3   
64001226:	int3   
64001227:	int3   
64001228:	int3   
64001229:	int3   
6400122a:	int3   
6400122b:	int3   
6400122c:	int3   
6400122d:	int3   
6400122e:	int3   
6400122f:	int3   
64001230:	mov    eax,DWORD PTR [esp+0x8]
64001234:	ret    
64001235:	int3   
64001236:	int3   
64001237:	int3   
64001238:	int3   
64001239:	int3   
6400123a:	int3   
6400123b:	int3   
6400123c:	int3   
6400123d:	int3   
6400123e:	int3   
6400123f:	int3   
64001240:	ret    
64001241:	int3   
64001242:	int3   
64001243:	int3   
64001244:	int3   
64001245:	int3   
64001246:	int3   
64001247:	int3   
64001248:	int3   
64001249:	int3   
6400124a:	int3   
6400124b:	int3   
6400124c:	int3   
6400124d:	int3   
6400124e:	int3   
6400124f:	int3   
64001250:	push   esi
64001251:	lea    eax,[esp+0x8]
64001255:	push   eax
64001256:	mov    esi,ecx
64001258:	call   0x6401366c
6400125d:	mov    DWORD PTR [esi],0x6402c2ac
64001263:	mov    eax,esi
64001265:	pop    esi
64001266:	ret    0x4
64001269:	int3   
6400126a:	int3   
6400126b:	int3   
6400126c:	int3   
6400126d:	int3   
6400126e:	int3   
6400126f:	int3   
64001270:	mov    DWORD PTR [ecx],0x6402c2ac
64001276:	jmp    0x6401372a
6400127b:	int3   
6400127c:	int3   
6400127d:	int3   
6400127e:	int3   
6400127f:	int3   
64001280:	push   esi
64001281:	mov    esi,ecx
64001283:	mov    DWORD PTR [esi],0x6402c2ac
64001289:	call   0x6401372a
6400128e:	test   BYTE PTR [esp+0x8],0x1
64001293:	je     0x6400129e
64001295:	push   esi
64001296:	call   0x64013656
6400129b:	add    esp,0x4
6400129e:	mov    eax,esi
640012a0:	pop    esi
640012a1:	ret    0x4
640012a4:	int3   
640012a5:	int3   
640012a6:	int3   
640012a7:	int3   
640012a8:	int3   
640012a9:	int3   
640012aa:	int3   
640012ab:	int3   
640012ac:	int3   
640012ad:	int3   
640012ae:	int3   
640012af:	int3   
640012b0:	mov    eax,DWORD PTR [esp+0xc]
640012b4:	cmp    eax,0x4
640012b7:	mov    ecx,DWORD PTR [esp+0x8]
640012bb:	mov    edx,DWORD PTR [esp+0x4]
640012bf:	push   esi
640012c0:	push   edi
640012c1:	jb     0x640012d7
640012c3:	mov    esi,DWORD PTR [edx]
640012c5:	cmp    esi,DWORD PTR [ecx]
640012c7:	jne    0x640012db
640012c9:	sub    eax,0x4
640012cc:	add    ecx,0x4
640012cf:	add    edx,0x4
640012d2:	cmp    eax,0x4
640012d5:	jae    0x640012c3
640012d7:	test   eax,eax
640012d9:	je     0x64001339
640012db:	movzx  esi,BYTE PTR [edx]
640012de:	movzx  edi,BYTE PTR [ecx]
640012e1:	sub    esi,edi
640012e3:	jne    0x6400132a
640012e5:	sub    eax,0x1
640012e8:	add    ecx,0x1
640012eb:	add    edx,0x1
640012ee:	test   eax,eax
640012f0:	je     0x64001339
640012f2:	movzx  esi,BYTE PTR [edx]
640012f5:	movzx  edi,BYTE PTR [ecx]
640012f8:	sub    esi,edi
640012fa:	jne    0x6400132a
640012fc:	sub    eax,0x1
640012ff:	add    ecx,0x1
64001302:	add    edx,0x1
64001305:	test   eax,eax
64001307:	je     0x64001339
64001309:	movzx  esi,BYTE PTR [edx]
6400130c:	movzx  edi,BYTE PTR [ecx]
6400130f:	sub    esi,edi
64001311:	jne    0x6400132a
64001313:	sub    eax,0x1
64001316:	add    ecx,0x1
64001319:	add    edx,0x1
6400131c:	test   eax,eax
6400131e:	je     0x64001339
64001320:	movzx  esi,BYTE PTR [edx]
64001323:	movzx  eax,BYTE PTR [ecx]
64001326:	sub    esi,eax
64001328:	je     0x64001339
6400132a:	test   esi,esi
6400132c:	mov    eax,0x1
64001331:	jg     0x6400133b
64001333:	pop    edi
64001334:	or     eax,0xffffffff
64001337:	pop    esi
64001338:	ret    
64001339:	xor    eax,eax
6400133b:	pop    edi
6400133c:	pop    esi
6400133d:	ret    
6400133e:	int3   
6400133f:	int3   
64001340:	mov    eax,ecx
64001342:	mov    DWORD PTR [eax],0x0
64001348:	ret    
64001349:	int3   
6400134a:	int3   
6400134b:	int3   
6400134c:	int3   
6400134d:	int3   
6400134e:	int3   
6400134f:	int3   
64001350:	push   0xffffffff
64001352:	push   0x64023138
64001357:	mov    eax,fs:0x0
6400135d:	push   eax
6400135e:	push   ecx
6400135f:	push   esi
64001360:	mov    eax,ds:0x640521ac
64001365:	xor    eax,esp
64001367:	push   eax
64001368:	lea    eax,[esp+0xc]
6400136c:	mov    fs:0x0,eax
64001372:	mov    esi,ecx
64001374:	mov    DWORD PTR [esp+0x8],esi
64001378:	call   0x6401365b
6400137d:	xor    eax,eax
6400137f:	mov    DWORD PTR [esp+0x14],eax
64001383:	lea    ecx,[esi+0xc]
64001386:	mov    DWORD PTR [esi],0x6402c2dc
6400138c:	push   0xffffffff
6400138e:	mov    DWORD PTR [ecx+0x14],eax
64001391:	mov    DWORD PTR [ecx+0x18],0xf
64001398:	push   eax
64001399:	mov    BYTE PTR [ecx+0x4],al
6400139c:	mov    eax,DWORD PTR [esp+0x24]
640013a0:	push   eax
640013a1:	call   0x64003330
640013a6:	mov    eax,esi
640013a8:	mov    ecx,DWORD PTR [esp+0xc]
640013ac:	mov    DWORD PTR fs:0x0,ecx
640013b3:	pop    ecx
640013b4:	pop    esi
640013b5:	add    esp,0x10
640013b8:	ret    0x4
640013bb:	int3   
640013bc:	int3   
640013bd:	int3   
640013be:	int3   
640013bf:	int3   
640013c0:	push   esi
640013c1:	mov    esi,ecx
640013c3:	mov    DWORD PTR [esi],0x6402c2dc
640013c9:	cmp    DWORD PTR [esi+0x24],0x10
640013cd:	jb     0x640013db
640013cf:	mov    eax,DWORD PTR [esi+0x10]
640013d2:	push   eax
640013d3:	call   0x64013656
640013d8:	add    esp,0x4
640013db:	xor    eax,eax
640013dd:	mov    DWORD PTR [esi+0x24],0xf
640013e4:	mov    DWORD PTR [esi+0x20],eax
640013e7:	mov    ecx,esi
640013e9:	mov    BYTE PTR [esi+0x10],al
640013ec:	call   0x6401372a
640013f1:	test   BYTE PTR [esp+0x8],0x1
640013f6:	je     0x64001401
640013f8:	push   esi
640013f9:	call   0x64013656
640013fe:	add    esp,0x4
64001401:	mov    eax,esi
64001403:	pop    esi
64001404:	ret    0x4
64001407:	int3   
64001408:	int3   
64001409:	int3   
6400140a:	int3   
6400140b:	int3   
6400140c:	int3   
6400140d:	int3   
6400140e:	int3   
6400140f:	int3   
64001410:	mov    eax,DWORD PTR [esp+0x4]
64001414:	push   esi
64001415:	push   eax
64001416:	mov    esi,ecx
64001418:	call   0x64001350
6400141d:	mov    DWORD PTR [esi],0x6402c2e8
64001423:	mov    eax,esi
64001425:	pop    esi
64001426:	ret    0x4
64001429:	int3   
6400142a:	int3   
6400142b:	int3   
6400142c:	int3   
6400142d:	int3   
6400142e:	int3   
6400142f:	int3   
64001430:	push   esi
64001431:	mov    esi,ecx
64001433:	mov    DWORD PTR [esi],0x6402c2dc
64001439:	cmp    DWORD PTR [esi+0x24],0x10
6400143d:	jb     0x6400144b
6400143f:	mov    eax,DWORD PTR [esi+0x10]
64001442:	push   eax
64001443:	call   0x64013656
64001448:	add    esp,0x4
6400144b:	xor    eax,eax
6400144d:	mov    DWORD PTR [esi+0x24],0xf
64001454:	mov    DWORD PTR [esi+0x20],eax
64001457:	mov    BYTE PTR [esi+0x10],al
6400145a:	mov    ecx,esi
6400145c:	pop    esi
6400145d:	jmp    0x6401372a
64001462:	int3   
64001463:	int3   
64001464:	int3   
64001465:	int3   
64001466:	int3   
64001467:	int3   
64001468:	int3   
64001469:	int3   
6400146a:	int3   
6400146b:	int3   
6400146c:	int3   
6400146d:	int3   
6400146e:	int3   
6400146f:	int3   
64001470:	push   0xffffffff
64001472:	push   0x64023108
64001477:	mov    eax,fs:0x0
6400147d:	push   eax
6400147e:	push   esi
6400147f:	mov    eax,ds:0x640521ac
64001484:	xor    eax,esp
64001486:	push   eax
64001487:	lea    eax,[esp+0x8]
6400148b:	mov    fs:0x0,eax
64001491:	mov    esi,DWORD PTR [esp+0x18]
64001495:	mov    ecx,esi
64001497:	call   0x6401365b
6400149c:	xor    eax,eax
6400149e:	mov    DWORD PTR [esp+0x10],eax
640014a2:	lea    ecx,[esi+0xc]
640014a5:	mov    DWORD PTR [esi],0x64041dac
640014ab:	push   0xffffffff
640014ad:	mov    DWORD PTR [ecx+0x14],eax
640014b0:	mov    DWORD PTR [ecx+0x18],0xf
640014b7:	push   eax
640014b8:	mov    BYTE PTR [ecx+0x4],al
640014bb:	mov    eax,DWORD PTR [esp+0x24]
640014bf:	push   eax
640014c0:	call   0x64003330
640014c5:	mov    eax,esi
640014c7:	mov    ecx,DWORD PTR [esp+0x8]
640014cb:	mov    DWORD PTR fs:0x0,ecx
640014d2:	pop    ecx
640014d3:	pop    esi
640014d4:	add    esp,0xc
640014d7:	ret    0x8
640014da:	int3   
640014db:	int3   
640014dc:	int3   
640014dd:	int3   
640014de:	int3   
640014df:	int3   
640014e0:	push   esi
640014e1:	mov    esi,ecx
640014e3:	mov    DWORD PTR [esi],0x64041dac
640014e9:	cmp    DWORD PTR [esi+0x24],0x10
640014ed:	jb     0x640014fb
640014ef:	mov    eax,DWORD PTR [esi+0x10]
640014f2:	push   eax
640014f3:	call   0x64013656
640014f8:	add    esp,0x4
640014fb:	xor    eax,eax
640014fd:	mov    DWORD PTR [esi+0x24],0xf
64001504:	mov    DWORD PTR [esi+0x20],eax
64001507:	mov    BYTE PTR [esi+0x10],al
6400150a:	mov    ecx,esi
6400150c:	pop    esi
6400150d:	jmp    0x6401372a
64001512:	int3   
64001513:	int3   
64001514:	int3   
64001515:	int3   
64001516:	int3   
64001517:	int3   
64001518:	int3   
64001519:	int3   
6400151a:	int3   
6400151b:	int3   
6400151c:	int3   
6400151d:	int3   
6400151e:	int3   
6400151f:	int3   
64001520:	cmp    DWORD PTR [ecx+0x24],0x10
64001524:	jb     0x6400152a
64001526:	mov    eax,DWORD PTR [ecx+0x10]
64001529:	ret    
6400152a:	lea    eax,[ecx+0x10]
6400152d:	ret    
6400152e:	int3   
6400152f:	int3   
64001530:	push   0xffffffff
64001532:	push   0x640230d8
64001537:	mov    eax,fs:0x0
6400153d:	push   eax
6400153e:	push   ecx
6400153f:	push   esi
64001540:	push   edi
64001541:	mov    eax,ds:0x640521ac
64001546:	xor    eax,esp
64001548:	push   eax
64001549:	lea    eax,[esp+0x10]
6400154d:	mov    fs:0x0,eax
64001553:	mov    esi,ecx
64001555:	mov    DWORD PTR [esp+0xc],esi
64001559:	mov    edi,DWORD PTR [esp+0x20]
6400155d:	push   edi
6400155e:	call   0x640136d2
64001563:	xor    edx,edx
64001565:	mov    DWORD PTR [esp+0x18],edx
64001569:	push   0xffffffff
6400156b:	lea    ecx,[esi+0xc]
6400156e:	mov    DWORD PTR [esi],0x64041dac
64001574:	lea    eax,[edi+0xc]
64001577:	push   edx
64001578:	mov    DWORD PTR [ecx+0x18],0xf
6400157f:	mov    DWORD PTR [ecx+0x14],edx
64001582:	push   eax
64001583:	mov    BYTE PTR [ecx+0x4],dl
64001586:	call   0x64003330
6400158b:	mov    eax,esi
6400158d:	mov    ecx,DWORD PTR [esp+0x10]
64001591:	mov    DWORD PTR fs:0x0,ecx
64001598:	pop    ecx
64001599:	pop    edi
6400159a:	pop    esi
6400159b:	add    esp,0x10
6400159e:	ret    0x4
640015a1:	int3   
640015a2:	int3   
640015a3:	int3   
640015a4:	int3   
640015a5:	int3   
640015a6:	int3   
640015a7:	int3   
640015a8:	int3   
640015a9:	int3   
640015aa:	int3   
640015ab:	int3   
640015ac:	int3   
640015ad:	int3   
640015ae:	int3   
640015af:	int3   
640015b0:	push   ecx
640015b1:	push   edi
640015b2:	mov    edi,DWORD PTR [ecx]
640015b4:	test   edi,edi
640015b6:	je     0x640015f9
640015b8:	push   0x0
640015ba:	lea    ecx,[esp+0x8]
640015be:	call   0x64013009
640015c3:	mov    eax,DWORD PTR [edi+0x4]
640015c6:	test   eax,eax
640015c8:	jbe    0x640015d5
640015ca:	cmp    eax,0xffffffff
640015cd:	jae    0x640015d5
640015cf:	add    eax,0xffffffff
640015d2:	mov    DWORD PTR [edi+0x4],eax
640015d5:	push   esi
640015d6:	mov    esi,DWORD PTR [edi+0x4]
640015d9:	neg    esi
640015db:	sbb    esi,esi
640015dd:	not    esi
640015df:	lea    ecx,[esp+0x8]
640015e3:	and    esi,edi
640015e5:	call   0x6401302a
640015ea:	test   esi,esi
640015ec:	je     0x640015f8
640015ee:	mov    eax,DWORD PTR [esi]
640015f0:	mov    edx,DWORD PTR [eax]
640015f2:	push   0x1
640015f4:	mov    ecx,esi
640015f6:	call   edx
640015f8:	pop    esi
640015f9:	pop    edi
640015fa:	pop    ecx
640015fb:	ret    
640015fc:	int3   
640015fd:	int3   
640015fe:	int3   
640015ff:	int3   
64001600:	mov    eax,DWORD PTR [esp+0x4]
64001604:	push   esi
64001605:	push   eax
64001606:	mov    esi,ecx
64001608:	call   0x64001620
6400160d:	mov    DWORD PTR [esi],0x6402c2f4
64001613:	mov    eax,esi
64001615:	pop    esi
64001616:	ret    0x4
64001619:	int3   
6400161a:	int3   
6400161b:	int3   
6400161c:	int3   
6400161d:	int3   
6400161e:	int3   
6400161f:	int3   
64001620:	push   0xffffffff
64001622:	push   0x640230a8
64001627:	mov    eax,fs:0x0
6400162d:	push   eax
6400162e:	push   ecx
6400162f:	push   esi
64001630:	push   edi
64001631:	mov    eax,ds:0x640521ac
64001636:	xor    eax,esp
64001638:	push   eax
64001639:	lea    eax,[esp+0x10]
6400163d:	mov    fs:0x0,eax
64001643:	mov    esi,ecx
64001645:	mov    DWORD PTR [esp+0xc],esi
64001649:	mov    edi,DWORD PTR [esp+0x20]
6400164d:	push   edi
6400164e:	call   0x640136d2
64001653:	xor    edx,edx
64001655:	mov    DWORD PTR [esp+0x18],edx
64001659:	push   0xffffffff
6400165b:	lea    ecx,[esi+0xc]
6400165e:	mov    DWORD PTR [esi],0x6402c2dc
64001664:	lea    eax,[edi+0xc]
64001667:	push   edx
64001668:	mov    DWORD PTR [ecx+0x18],0xf
6400166f:	mov    DWORD PTR [ecx+0x14],edx
64001672:	push   eax
64001673:	mov    BYTE PTR [ecx+0x4],dl
64001676:	call   0x64003330
6400167b:	mov    eax,esi
6400167d:	mov    ecx,DWORD PTR [esp+0x10]
64001681:	mov    DWORD PTR fs:0x0,ecx
64001688:	pop    ecx
64001689:	pop    edi
6400168a:	pop    esi
6400168b:	add    esp,0x10
6400168e:	ret    0x4
64001691:	int3   
64001692:	int3   
64001693:	int3   
64001694:	int3   
64001695:	int3   
64001696:	int3   
64001697:	int3   
64001698:	int3   
64001699:	int3   
6400169a:	int3   
6400169b:	int3   
6400169c:	int3   
6400169d:	int3   
6400169e:	int3   
6400169f:	int3   
640016a0:	mov    eax,esi
640016a2:	mov    edx,0xe3
640016a7:	push   edi
640016a8:	mov    ecx,DWORD PTR [eax+0x4]
640016ab:	mov    edi,DWORD PTR [eax]
640016ad:	xor    edi,ecx
640016af:	and    edi,0x7ffffffe
640016b5:	xor    edi,DWORD PTR [eax]
640016b7:	and    cl,0x1
640016ba:	shr    edi,1
640016bc:	sub    edx,0x1
640016bf:	neg    cl
640016c1:	sbb    ecx,ecx
640016c3:	and    ecx,0x9908b0df
640016c9:	xor    edi,ecx
640016cb:	xor    edi,DWORD PTR [eax+0x634]
640016d1:	add    eax,0x4
640016d4:	test   edx,edx
640016d6:	mov    DWORD PTR [eax-0x4],edi
640016d9:	jne    0x640016a8
640016db:	mov    edx,0x18c
640016e0:	mov    ecx,DWORD PTR [eax+0x4]
640016e3:	mov    edi,DWORD PTR [eax]
640016e5:	xor    edi,ecx
640016e7:	and    edi,0x7ffffffe
640016ed:	xor    edi,DWORD PTR [eax]
640016ef:	and    cl,0x1
640016f2:	shr    edi,1
640016f4:	neg    cl
640016f6:	sbb    ecx,ecx
640016f8:	and    ecx,0x9908b0df
640016fe:	xor    edi,ecx
64001700:	xor    edi,DWORD PTR [eax-0x38c]
64001706:	add    eax,0x4
64001709:	sub    edx,0x1
6400170c:	mov    DWORD PTR [eax-0x4],edi
6400170f:	jne    0x640016e0
64001711:	mov    ecx,DWORD PTR [esi]
64001713:	mov    edx,DWORD PTR [eax]
64001715:	xor    edx,ecx
64001717:	and    edx,0x7ffffffe
6400171d:	xor    edx,DWORD PTR [eax]
6400171f:	and    cl,0x1
64001722:	shr    edx,1
64001724:	neg    cl
64001726:	pop    edi
64001727:	sbb    ecx,ecx
64001729:	and    ecx,0x9908b0df
6400172f:	xor    edx,ecx
64001731:	xor    edx,DWORD PTR [eax-0x38c]
64001737:	mov    DWORD PTR [eax],edx
64001739:	mov    DWORD PTR [esi+0x9c4],0x270
64001743:	mov    DWORD PTR [esi+0x9c0],esi
64001749:	ret    
6400174a:	int3   
6400174b:	int3   
6400174c:	int3   
6400174d:	int3   
6400174e:	int3   
6400174f:	int3   
64001750:	push   esi
64001751:	mov    esi,eax
64001753:	push   edi
64001754:	mov    ecx,0x1
64001759:	mov    DWORD PTR [esi],edx
6400175b:	jmp    0x64001760
6400175d:	lea    ecx,[ecx+0x0]
64001760:	mov    edx,DWORD PTR [eax]
64001762:	mov    edi,edx
64001764:	shr    edi,0x1e
64001767:	xor    edi,edx
64001769:	imul   edi,edi,0x6c078965
6400176f:	add    edi,ecx
64001771:	mov    DWORD PTR [eax+0x4],edi
64001774:	add    ecx,0x1
64001777:	add    eax,0x4
6400177a:	cmp    ecx,0x270
64001780:	jl     0x64001760
64001782:	call   0x640016a0
64001787:	pop    edi
64001788:	pop    esi
64001789:	ret    
6400178a:	int3   
6400178b:	int3   
6400178c:	int3   
6400178d:	int3   
6400178e:	int3   
6400178f:	int3   
64001790:	push   esi
64001791:	push   edi
64001792:	mov    edi,ebx
64001794:	shr    edi,1
64001796:	or     edi,ebx
64001798:	mov    esi,eax
6400179a:	mov    eax,edi
6400179c:	shr    eax,0x2
6400179f:	or     edi,eax
640017a1:	mov    ecx,edi
640017a3:	shr    ecx,0x4
640017a6:	or     edi,ecx
640017a8:	mov    edx,edi
640017aa:	shr    edx,0x8
640017ad:	or     edi,edx
640017af:	mov    eax,edi
640017b1:	shr    eax,0x10
640017b4:	or     edi,eax
640017b6:	cmp    DWORD PTR [esi+0x9c4],0x0
640017bd:	jne    0x640017c4
640017bf:	call   0x640016a0
640017c4:	mov    eax,DWORD PTR [esi+0x9c0]
640017ca:	add    DWORD PTR [esi+0x9c4],0xffffffff
640017d1:	mov    ecx,DWORD PTR [eax]
640017d3:	add    eax,0x4
640017d6:	mov    edx,ecx
640017d8:	shr    edx,0xb
640017db:	xor    ecx,edx
640017dd:	mov    DWORD PTR [esi+0x9c0],eax
640017e3:	mov    eax,ecx
640017e5:	and    eax,0xff3a58ad
640017ea:	shl    eax,0x7
640017ed:	xor    ecx,eax
640017ef:	mov    edx,ecx
640017f1:	and    edx,0xffffdf8c
640017f7:	shl    edx,0xf
640017fa:	xor    ecx,edx
640017fc:	mov    eax,ecx
640017fe:	shr    eax,0x12
64001801:	xor    eax,ecx
64001803:	and    eax,edi
64001805:	cmp    eax,ebx
64001807:	ja     0x640017b6
64001809:	pop    edi
6400180a:	pop    esi
6400180b:	ret    
6400180c:	int3   
6400180d:	int3   
6400180e:	int3   
6400180f:	int3   
64001810:	cmp    DWORD PTR ds:0x64054558,0x0
64001817:	jne    0x64001898
64001819:	push   esi
6400181a:	push   0x11c
6400181f:	push   0x0
64001821:	push   0x64054560
64001826:	mov    DWORD PTR ds:0x6405455c,0x0
64001830:	call   0x64015170
64001835:	mov    esi,DWORD PTR ds:0x6402c0fc
6400183b:	add    esp,0xc
6400183e:	push   0x64054560
64001843:	mov    DWORD PTR ds:0x64054560,0x114
6400184d:	call   esi
6400184f:	test   eax,eax
64001851:	je     0x64001894
64001853:	cmp    DWORD PTR ds:0x64054570,0x2
6400185a:	mov    DWORD PTR ds:0x64054558,0x1
64001864:	jne    0x64001894
64001866:	cmp    DWORD PTR ds:0x64054564,0x5
6400186d:	jb     0x64001894
6400186f:	push   0x11c
64001874:	push   0x0
64001876:	push   0x64054560
6400187b:	call   0x64015170
64001880:	add    esp,0xc
64001883:	push   0x64054560
64001888:	mov    DWORD PTR ds:0x64054560,0x11c
64001892:	call   esi
64001894:	mov    eax,edi
64001896:	pop    esi
64001897:	ret    
64001898:	mov    eax,edi
6400189a:	ret    
6400189b:	int3   
6400189c:	int3   
6400189d:	int3   
6400189e:	int3   
6400189f:	int3   
640018a0:	push   ebp
640018a1:	mov    ebp,esp
640018a3:	and    esp,0xfffffff8
640018a6:	push   0xffffffff
640018a8:	push   0x64022f90
640018ad:	mov    eax,fs:0x0
640018b3:	push   eax
640018b4:	sub    esp,0x50
640018b7:	push   ebx
640018b8:	push   esi
640018b9:	push   edi
640018ba:	mov    eax,ds:0x640521ac
640018bf:	xor    eax,esp
640018c1:	push   eax
640018c2:	lea    eax,[esp+0x60]
640018c6:	mov    fs:0x0,eax
640018cc:	xor    ebx,ebx
640018ce:	push   0x4000
640018d3:	mov    DWORD PTR [esp+0x18],ebx
640018d7:	call   0x64012faa
640018dc:	mov    edi,eax
640018de:	push   0x38
640018e0:	mov    DWORD PTR [esp+0x70],ebx
640018e4:	push   0x64041a38
640018e9:	lea    eax,[esp+0x30]
640018ed:	push   0x2f
640018ef:	push   eax
640018f0:	mov    DWORD PTR [esp+0x58],ebx
640018f4:	mov    DWORD PTR [esp+0x5c],ebx
640018f8:	mov    DWORD PTR [esp+0x60],ebx
640018fc:	mov    DWORD PTR [esp+0x3c],ebx
64001900:	mov    DWORD PTR [esp+0x38],ebx
64001904:	call   0x6400f000
64001909:	add    esp,0x14
6400190c:	test   eax,eax
6400190e:	je     0x6400193d
64001910:	mov    esi,DWORD PTR [ebp+0x8]
64001913:	push   ebx
64001914:	mov    DWORD PTR [esp+0x1c],ebx
64001918:	mov    DWORD PTR [esi],ebx
6400191a:	call   0x64013656
6400191f:	push   edi
64001920:	call   0x64013656
64001925:	add    esp,0x8
64001928:	mov    eax,esi
6400192a:	mov    ecx,DWORD PTR [esp+0x60]
6400192e:	mov    DWORD PTR fs:0x0,ecx
64001935:	pop    ecx
64001936:	pop    edi
64001937:	pop    esi
64001938:	pop    ebx
64001939:	mov    esp,ebp
6400193b:	pop    ebp
6400193c:	ret    
6400193d:	mov    ecx,DWORD PTR [ebp+0x10]
64001940:	mov    edx,DWORD PTR [ebp+0xc]
64001943:	mov    DWORD PTR [esp+0x28],ecx
64001947:	mov    DWORD PTR [esp+0x24],edx
6400194b:	jmp    0x64001950
6400194d:	lea    ecx,[ecx+0x0]
64001950:	lea    ecx,[esp+0x24]
64001954:	lea    eax,[ebx+edi*1]
64001957:	push   0x4
64001959:	push   ecx
6400195a:	mov    DWORD PTR [esp+0x3c],0x4000
64001962:	mov    DWORD PTR [esp+0x38],eax
64001966:	call   0x6400f1e0
6400196b:	mov    esi,eax
6400196d:	add    esp,0x8
64001970:	cmp    esi,0xfffffffc
64001973:	mov    DWORD PTR [esp+0x18],esi
64001977:	jl     0x6400198b
64001979:	cmp    esi,0xfffffffd
6400197c:	jle    0x64001a22
64001982:	cmp    esi,0x2
64001985:	je     0x64001a22
6400198b:	mov    ecx,DWORD PTR [esp+0x34]
6400198f:	mov    eax,0x4000
64001994:	sub    eax,ecx
64001996:	add    ebx,eax
64001998:	test   ecx,ecx
6400199a:	mov    DWORD PTR [esp+0x14],ebx
6400199e:	jne    0x64001a09
640019a0:	mov    esi,edi
640019a2:	mov    DWORD PTR [esp+0x1c],ecx
640019a6:	mov    DWORD PTR [esp+0x20],esi
640019aa:	add    ebx,0x4000
640019b0:	push   ebx
640019b1:	mov    BYTE PTR [esp+0x6c],0x1
640019b6:	call   0x64012faa
640019bb:	mov    edi,eax
640019bd:	add    esp,0x4
640019c0:	test   edi,edi
640019c2:	mov    DWORD PTR [esp+0x10],0x0
640019ca:	je     0x640019d6
640019cc:	push   0x0
640019ce:	call   0x64013656
640019d3:	add    esp,0x4
640019d6:	mov    edx,DWORD PTR [esp+0x10]
640019da:	push   edx
640019db:	call   0x64013656
640019e0:	mov    ebx,DWORD PTR [esp+0x18]
640019e4:	push   ebx
640019e5:	push   esi
640019e6:	push   edi
640019e7:	call   0x640151f0
640019ec:	push   esi
640019ed:	mov    BYTE PTR [esp+0x7c],0x0
640019f2:	call   0x64013656
640019f7:	add    esp,0x14
640019fa:	cmp    DWORD PTR [esp+0x34],0x0
640019ff:	je     0x64001950
64001a05:	mov    esi,DWORD PTR [esp+0x18]
64001a09:	lea    ecx,[esp+0x24]
64001a0d:	push   ecx
64001a0e:	call   0x640107d0
64001a13:	add    esp,0x4
64001a16:	cmp    esi,0x1
64001a19:	jne    0x64001a62
64001a1b:	mov    edx,DWORD PTR [ebp+0x14]
64001a1e:	mov    DWORD PTR [edx],ebx
64001a20:	jmp    0x64001a86
64001a22:	lea    eax,[esp+0x24]
64001a26:	push   eax
64001a27:	call   0x640107d0
64001a2c:	mov    esi,DWORD PTR [ebp+0x8]
64001a2f:	push   0x0
64001a31:	mov    DWORD PTR [esp+0x28],0x0
64001a39:	mov    DWORD PTR [esi],0x0
64001a3f:	call   0x64013656
64001a44:	push   edi
64001a45:	call   0x64013656
64001a4a:	add    esp,0xc
64001a4d:	mov    eax,esi
64001a4f:	mov    ecx,DWORD PTR [esp+0x60]
64001a53:	mov    DWORD PTR fs:0x0,ecx
64001a5a:	pop    ecx
64001a5b:	pop    edi
64001a5c:	pop    esi
64001a5d:	pop    ebx
64001a5e:	mov    esp,ebp
64001a60:	pop    ebp
64001a61:	ret    
64001a62:	test   edi,edi
64001a64:	mov    DWORD PTR [esp+0x18],0x0
64001a6c:	je     0x64001a77
64001a6e:	push   edi
64001a6f:	call   0x64013656
64001a74:	add    esp,0x4
64001a77:	mov    eax,DWORD PTR [esp+0x18]
64001a7b:	push   eax
64001a7c:	xor    edi,edi
64001a7e:	call   0x64013656
64001a83:	add    esp,0x4
64001a86:	mov    esi,DWORD PTR [ebp+0x8]
64001a89:	push   0x0
64001a8b:	mov    DWORD PTR [esi],edi
64001a8d:	call   0x64013656
64001a92:	add    esp,0x4
64001a95:	mov    eax,esi
64001a97:	mov    ecx,DWORD PTR [esp+0x60]
64001a9b:	mov    DWORD PTR fs:0x0,ecx
64001aa2:	pop    ecx
64001aa3:	pop    edi
64001aa4:	pop    esi
64001aa5:	pop    ebx
64001aa6:	mov    esp,ebp
64001aa8:	pop    ebp
64001aa9:	ret    
64001aaa:	int3   
64001aab:	int3   
64001aac:	int3   
64001aad:	int3   
64001aae:	int3   
64001aaf:	int3   
64001ab0:	sub    esp,0x74
64001ab3:	mov    eax,ds:0x640521ac
64001ab8:	xor    eax,esp
64001aba:	mov    DWORD PTR [esp+0x70],eax
64001abe:	mov    eax,DWORD PTR [esp+0x78]
64001ac2:	movzx  ecx,BYTE PTR [eax+0xf]
64001ac6:	movzx  edx,BYTE PTR [eax+0xe]
64001aca:	push   ecx
64001acb:	movzx  ecx,BYTE PTR [eax+0xd]
64001acf:	push   edx
64001ad0:	movzx  edx,BYTE PTR [eax+0xc]
64001ad4:	push   ecx
64001ad5:	movzx  ecx,BYTE PTR [eax+0xb]
64001ad9:	push   edx
64001ada:	movzx  edx,BYTE PTR [eax+0xa]
64001ade:	push   ecx
64001adf:	movzx  ecx,BYTE PTR [eax+0x9]
64001ae3:	push   edx
64001ae4:	movzx  edx,BYTE PTR [eax+0x8]
64001ae8:	push   ecx
64001ae9:	movzx  ecx,WORD PTR [eax+0x6]
64001aed:	push   edx
64001aee:	movzx  edx,WORD PTR [eax+0x4]
64001af2:	mov    eax,DWORD PTR [eax]
64001af4:	push   ecx
64001af5:	push   edx
64001af6:	push   eax
64001af7:	push   0x64041a58
64001afc:	push   0x32
64001afe:	push   0x64041a8c
64001b03:	mov    DWORD PTR [esp+0x38],0x0
64001b0b:	call   0x64002e50
64001b10:	add    esp,0xc
64001b13:	push   eax
64001b14:	lea    ecx,[esp+0x34]
64001b18:	push   ecx
64001b19:	call   0x640146dc
64001b1e:	lea    eax,[esp+0x38]
64001b22:	mov    DWORD PTR [esi+0x18],0xf
64001b29:	mov    DWORD PTR [esi+0x14],0x0
64001b30:	add    esp,0x34
64001b33:	mov    BYTE PTR [esi+0x4],0x0
64001b37:	lea    edx,[eax+0x1]
64001b3a:	lea    ebx,[ebx+0x0]
64001b40:	mov    cl,BYTE PTR [eax]
64001b42:	add    eax,0x1
64001b45:	test   cl,cl
64001b47:	jne    0x64001b40
64001b49:	sub    eax,edx
64001b4b:	push   eax
64001b4c:	lea    edx,[esp+0x8]
64001b50:	push   edx
64001b51:	mov    ecx,esi
64001b53:	call   0x64003410
64001b58:	mov    ecx,DWORD PTR [esp+0x70]
64001b5c:	xor    ecx,esp
64001b5e:	mov    eax,esi
64001b60:	call   0x64013d18
64001b65:	add    esp,0x74
64001b68:	ret    
64001b69:	int3   
64001b6a:	int3   
64001b6b:	int3   
64001b6c:	int3   
64001b6d:	int3   
64001b6e:	int3   
64001b6f:	int3   
64001b70:	push   ebp
64001b71:	mov    ebp,esp
64001b73:	sub    esp,0x8
64001b76:	mov    eax,ds:0x640521ac
64001b7b:	xor    eax,ebp
64001b7d:	mov    DWORD PTR [ebp-0x4],eax
64001b80:	push   ebx
64001b81:	push   esi
64001b82:	mov    esi,DWORD PTR [ebp+0xc]
64001b85:	push   edi
64001b86:	call   DWORD PTR ds:0x64052184
64001b8c:	mov    edi,DWORD PTR [ebp+0x8]
64001b8f:	mov    DWORD PTR [edi],0x0
64001b95:	mov    DWORD PTR [ebp-0x8],eax
64001b98:	xor    eax,eax
64001b9a:	mov    DWORD PTR [edi+0x4],eax
64001b9d:	mov    DWORD PTR [edi+0x8],eax
64001ba0:	mov    DWORD PTR [edi+0xc],eax
64001ba3:	cmp    DWORD PTR [esi+0x18],0x10
64001ba7:	jb     0x64001bae
64001ba9:	mov    ebx,DWORD PTR [esi+0x4]
64001bac:	jmp    0x64001bb1
64001bae:	lea    ebx,[esi+0x4]
64001bb1:	test   ebx,ebx
64001bb3:	jne    0x64001bb9
64001bb5:	xor    eax,eax
64001bb7:	jmp    0x64001bfe
64001bb9:	push   ebx
64001bba:	call   DWORD PTR ds:0x6402c070
64001bc0:	mov    edi,eax
64001bc2:	add    edi,0x1
64001bc5:	cmp    edi,0x3fffffff
64001bcb:	jg     0x64001bf9
64001bcd:	lea    eax,[edi+edi*1]
64001bd0:	call   0x64013d30
64001bd5:	mov    esi,esp
64001bd7:	test   esi,esi
64001bd9:	je     0x64001bf9
64001bdb:	mov    eax,DWORD PTR [ebp-0x8]
64001bde:	push   edi
64001bdf:	push   esi
64001be0:	push   0xffffffff
64001be2:	push   ebx
64001be3:	push   0x0
64001be5:	push   eax
64001be6:	mov    WORD PTR [esi],0x0
64001beb:	call   DWORD PTR ds:0x6402c02c
64001bf1:	neg    eax
64001bf3:	sbb    eax,eax
64001bf5:	and    eax,esi
64001bf7:	jmp    0x64001bfb
64001bf9:	xor    eax,eax
64001bfb:	mov    edi,DWORD PTR [ebp+0x8]
64001bfe:	push   edi
64001bff:	push   eax
64001c00:	call   DWORD PTR ds:0x6402c200
64001c06:	mov    eax,edi
64001c08:	lea    esp,[ebp-0x14]
64001c0b:	pop    edi
64001c0c:	pop    esi
64001c0d:	pop    ebx
64001c0e:	mov    ecx,DWORD PTR [ebp-0x4]
64001c11:	xor    ecx,ebp
64001c13:	call   0x64013d18
64001c18:	mov    esp,ebp
64001c1a:	pop    ebp
64001c1b:	ret    
64001c1c:	int3   
64001c1d:	int3   
64001c1e:	int3   
64001c1f:	int3   
64001c20:	push   0xffffffff
64001c22:	push   0x64023771
64001c27:	mov    eax,fs:0x0
64001c2d:	push   eax
64001c2e:	sub    esp,0x4c
64001c31:	push   ebx
64001c32:	push   esi
64001c33:	push   edi
64001c34:	mov    eax,ds:0x640521ac
64001c39:	xor    eax,esp
64001c3b:	push   eax
64001c3c:	lea    eax,[esp+0x5c]
64001c40:	mov    fs:0x0,eax
64001c46:	mov    edi,DWORD PTR [esp+0x6c]
64001c4a:	xor    ebx,ebx
64001c4c:	mov    DWORD PTR [esp+0x64],ebx
64001c50:	mov    DWORD PTR [esp+0x10],ebx
64001c54:	mov    eax,ds:0x640539e4
64001c59:	mov    edx,DWORD PTR [eax+0xc]
64001c5c:	mov    ecx,0x640539e4
64001c61:	call   edx
64001c63:	add    eax,0x10
64001c66:	mov    DWORD PTR [edi],eax
64001c68:	mov    DWORD PTR [esp+0x64],ebx
64001c6c:	mov    ecx,0x1
64001c71:	sub    ecx,DWORD PTR [eax-0x4]
64001c74:	mov    eax,DWORD PTR [eax-0x8]
64001c77:	sub    eax,0x800
64001c7c:	or     eax,ecx
64001c7e:	mov    DWORD PTR [esp+0x10],0x1
64001c86:	jge    0x64001c94
64001c88:	push   0x800
64001c8d:	mov    ecx,edi
64001c8f:	call   0x64004380
64001c94:	mov    eax,DWORD PTR [edi]
64001c96:	push   0x800
64001c9b:	push   eax
64001c9c:	call   DWORD PTR ds:0x6402c060
64001ca2:	test   eax,eax
64001ca4:	jne    0x64001d0c
64001ca6:	push   0x64041acc
64001cab:	push   0x1c
64001cad:	push   0x64041b00
64001cb2:	call   0x64002e50
64001cb7:	mov    ecx,eax
64001cb9:	add    esp,0xc
64001cbc:	mov    DWORD PTR [esp+0x2c],0xf
64001cc4:	mov    DWORD PTR [esp+0x28],ebx
64001cc8:	mov    BYTE PTR [esp+0x18],bl
64001ccc:	lea    esi,[ecx+0x1]
64001ccf:	nop
64001cd0:	mov    dl,BYTE PTR [ecx]
64001cd2:	add    ecx,0x1
64001cd5:	cmp    dl,bl
64001cd7:	jne    0x64001cd0
64001cd9:	sub    ecx,esi
64001cdb:	push   ecx
64001cdc:	push   eax
64001cdd:	lea    ecx,[esp+0x1c]
64001ce1:	call   0x64003410
64001ce6:	lea    eax,[esp+0x14]
64001cea:	push   eax
64001ceb:	lea    ecx,[esp+0x34]
64001cef:	push   ecx
64001cf0:	mov    DWORD PTR [esp+0x6c],0x1
64001cf8:	call   0x64001470
64001cfd:	push   0x64044100
64001d02:	lea    edx,[esp+0x34]
64001d06:	push   edx
64001d07:	call   0x64013884
64001d0c:	mov    edx,DWORD PTR [edi]
64001d0e:	cmp    edx,ebx
64001d10:	jne    0x64001d16
64001d12:	xor    eax,eax
64001d14:	jmp    0x64001d31
64001d16:	mov    eax,edx
64001d18:	lea    esi,[eax+0x2]
64001d1b:	jmp    0x64001d20
64001d1d:	lea    ecx,[ecx+0x0]
64001d20:	mov    cx,WORD PTR [eax]
64001d23:	add    eax,0x2
64001d26:	cmp    cx,bx
64001d29:	jne    0x64001d20
64001d2b:	sub    eax,esi
64001d2d:	sar    eax,1
64001d2f:	js     0x64001d75
64001d31:	cmp    eax,DWORD PTR [edx-0x8]
64001d34:	jg     0x64001d75
64001d36:	mov    DWORD PTR [edx-0xc],eax
64001d39:	mov    ecx,DWORD PTR [edi]
64001d3b:	mov    WORD PTR [ecx+eax*2],bx
64001d3f:	mov    ecx,DWORD PTR [edi]
64001d41:	mov    edx,DWORD PTR [ecx-0xc]
64001d44:	lea    eax,[edx-0x1]
64001d47:	cmp    eax,ebx
64001d49:	jl     0x64001d75
64001d4b:	cmp    eax,edx
64001d4d:	jg     0x64001d75
64001d4f:	movzx  eax,WORD PTR [ecx+eax*2]
64001d53:	cmp    ax,0x5c
64001d57:	je     0x64001d60
64001d59:	push   0x5c
64001d5b:	call   0x64002bc0
64001d60:	mov    eax,edi
64001d62:	mov    ecx,DWORD PTR [esp+0x5c]
64001d66:	mov    DWORD PTR fs:0x0,ecx
64001d6d:	pop    ecx
64001d6e:	pop    edi
64001d6f:	pop    esi
64001d70:	pop    ebx
64001d71:	add    esp,0x58
64001d74:	ret    
64001d75:	push   0x80070057
64001d7a:	call   0x64001080
64001d7f:	int3   
64001d80:	push   0xffffffff
64001d82:	push   0x64023af1
64001d87:	mov    eax,fs:0x0
64001d8d:	push   eax
64001d8e:	sub    esp,0x50
64001d91:	push   ebx
64001d92:	push   ebp
64001d93:	push   esi
64001d94:	push   edi
64001d95:	mov    eax,ds:0x640521ac
64001d9a:	xor    eax,esp
64001d9c:	push   eax
64001d9d:	lea    eax,[esp+0x64]
64001da1:	mov    fs:0x0,eax
64001da7:	mov    esi,DWORD PTR [esp+0x74]
64001dab:	xor    ebx,ebx
64001dad:	mov    DWORD PTR [esp+0x6c],ebx
64001db1:	push   esi
64001db2:	mov    DWORD PTR [esp+0x1c],ebx
64001db6:	call   0x64001c20
64001dbb:	add    esp,0x4
64001dbe:	mov    DWORD PTR [esp+0x6c],ebx
64001dc2:	mov    eax,DWORD PTR [esi]
64001dc4:	mov    ebp,0x1
64001dc9:	sub    eax,0x10
64001dcc:	cmp    DWORD PTR [eax+0xc],ebp
64001dcf:	mov    DWORD PTR [esp+0x18],ebp
64001dd3:	jle    0x64001de0
64001dd5:	mov    eax,DWORD PTR [eax+0x4]
64001dd8:	push   eax
64001dd9:	mov    ecx,esi
64001ddb:	call   0x640037c0
64001de0:	mov    eax,DWORD PTR [esi]
64001de2:	push   0x5c
64001de4:	push   eax
64001de5:	call   0x6401485d
64001dea:	mov    edi,eax
64001dec:	add    esp,0x8
64001def:	cmp    edi,ebx
64001df1:	jne    0x64001e57
64001df3:	push   0x64041b20
64001df8:	push   0x18
64001dfa:	push   0x64041b5c
64001dff:	call   0x64002e50
64001e04:	mov    ecx,eax
64001e06:	add    esp,0xc
64001e09:	mov    DWORD PTR [esp+0x34],0xf
64001e11:	mov    DWORD PTR [esp+0x30],ebx
64001e15:	mov    BYTE PTR [esp+0x20],bl
64001e19:	lea    esi,[ecx+0x1]
64001e1c:	lea    esp,[esp+0x0]
64001e20:	mov    dl,BYTE PTR [ecx]
64001e22:	add    ecx,ebp
64001e24:	cmp    dl,bl
64001e26:	jne    0x64001e20
64001e28:	sub    ecx,esi
64001e2a:	push   ecx
64001e2b:	push   eax
64001e2c:	lea    ecx,[esp+0x24]
64001e30:	call   0x64003410
64001e35:	lea    ecx,[esp+0x1c]
64001e39:	push   ecx
64001e3a:	lea    edx,[esp+0x3c]
64001e3e:	push   edx
64001e3f:	mov    DWORD PTR [esp+0x74],ebp
64001e43:	call   0x64001470
64001e48:	push   0x64044100
64001e4d:	lea    eax,[esp+0x3c]
64001e51:	push   eax
64001e52:	call   0x64013884
64001e57:	mov    eax,DWORD PTR [esi]
64001e59:	sub    eax,0x10
64001e5c:	cmp    DWORD PTR [eax+0xc],ebp
64001e5f:	jle    0x64001e6c
64001e61:	mov    ecx,DWORD PTR [eax+0x4]
64001e64:	push   ecx
64001e65:	mov    ecx,esi
64001e67:	call   0x640037c0
64001e6c:	mov    ecx,DWORD PTR [esi]
64001e6e:	sub    edi,ecx
64001e70:	sar    edi,1
64001e72:	add    edi,ebp
64001e74:	cmp    ecx,ebx
64001e76:	jne    0x64001e7c
64001e78:	xor    eax,eax
64001e7a:	jmp    0x64001e97
64001e7c:	mov    eax,ecx
64001e7e:	lea    ebp,[eax+0x2]
64001e81:	mov    dx,WORD PTR [eax]
64001e84:	add    eax,0x2
64001e87:	cmp    dx,bx
64001e8a:	jne    0x64001e81
64001e8c:	sub    eax,ebp
64001e8e:	sar    eax,1
64001e90:	js     0x64001eea
64001e92:	mov    ebp,0x1
64001e97:	cmp    eax,DWORD PTR [ecx-0x8]
64001e9a:	jg     0x64001eea
64001e9c:	mov    DWORD PTR [ecx-0xc],eax
64001e9f:	mov    edx,DWORD PTR [esi]
64001ea1:	mov    WORD PTR [edx+eax*2],bx
64001ea5:	mov    eax,DWORD PTR [esi]
64001ea7:	sub    eax,0x10
64001eaa:	mov    ecx,ebp
64001eac:	sub    ecx,DWORD PTR [eax+0xc]
64001eaf:	mov    eax,DWORD PTR [eax+0x8]
64001eb2:	sub    eax,edi
64001eb4:	or     eax,ecx
64001eb6:	jge    0x64001ec0
64001eb8:	push   edi
64001eb9:	mov    ecx,esi
64001ebb:	call   0x64004380
64001ec0:	cmp    edi,ebx
64001ec2:	jl     0x64001eea
64001ec4:	mov    eax,DWORD PTR [esi]
64001ec6:	cmp    edi,DWORD PTR [eax-0x8]
64001ec9:	jg     0x64001eea
64001ecb:	mov    DWORD PTR [eax-0xc],edi
64001ece:	mov    eax,DWORD PTR [esi]
64001ed0:	mov    WORD PTR [eax+edi*2],bx
64001ed4:	mov    eax,esi
64001ed6:	mov    ecx,DWORD PTR [esp+0x64]
64001eda:	mov    DWORD PTR fs:0x0,ecx
64001ee1:	pop    ecx
64001ee2:	pop    edi
64001ee3:	pop    esi
64001ee4:	pop    ebp
64001ee5:	pop    ebx
64001ee6:	add    esp,0x5c
64001ee9:	ret    
64001eea:	push   0x80070057
64001eef:	call   0x64001080
64001ef4:	int3   
64001ef5:	int3   
64001ef6:	int3   
64001ef7:	int3   
64001ef8:	int3   
64001ef9:	int3   
64001efa:	int3   
64001efb:	int3   
64001efc:	int3   
64001efd:	int3   
64001efe:	int3   
64001eff:	int3   
64001f00:	push   ebp
64001f01:	mov    ebp,esp
64001f03:	push   0xffffffff
64001f05:	push   0x64023bbf
64001f0a:	mov    eax,fs:0x0
64001f10:	push   eax
64001f11:	sub    esp,0x134
64001f17:	mov    eax,ds:0x640521ac
64001f1c:	xor    eax,ebp
64001f1e:	mov    DWORD PTR [ebp-0x10],eax
64001f21:	push   ebx
64001f22:	push   esi
64001f23:	push   edi
64001f24:	push   eax
64001f25:	lea    eax,[ebp-0xc]
64001f28:	mov    fs:0x0,eax
64001f2e:	call   DWORD PTR ds:0x64052184
64001f34:	mov    ebx,eax
64001f36:	lea    eax,[ebp-0x7c]
64001f39:	push   eax
64001f3a:	call   0x64001d80
64001f3f:	add    esp,0x4
64001f42:	push   0x0
64001f44:	push   0x0
64001f46:	lea    ecx,[ebp-0x88]
64001f4c:	push   ecx
64001f4d:	lea    edx,[ebp-0x84]
64001f53:	push   edx
64001f54:	lea    eax,[ebp-0x80]
64001f57:	push   eax
64001f58:	push   0x0
64001f5a:	mov    DWORD PTR [ebp-0x4],0x0
64001f61:	mov    ecx,DWORD PTR [ebp-0x7c]
64001f64:	push   0x0
64001f66:	push   ecx
64001f67:	call   DWORD PTR ds:0x6402c064
64001f6d:	test   eax,eax
64001f6f:	jne    0x6400209f
64001f75:	call   DWORD PTR ds:0x6402c06c
64001f7b:	push   0xa
64001f7d:	lea    edx,[ebp-0x78]
64001f80:	push   edx
64001f81:	push   eax
64001f82:	call   0x640145c9
64001f87:	mov    eax,DWORD PTR [ebp-0x7c]
64001f8a:	add    esp,0xc
64001f8d:	test   eax,eax
64001f8f:	mov    edi,eax
64001f91:	je     0x64001fbf
64001f93:	push   eax
64001f94:	call   DWORD PTR ds:0x6402c034
64001f9a:	add    eax,0x1
64001f9d:	cmp    eax,0x3fffffff
64001fa2:	jle    0x64001fa8
64001fa4:	xor    edi,edi
64001fa6:	jmp    0x64001fbf
64001fa8:	lea    esi,[eax+eax*1]
64001fab:	mov    eax,esi
64001fad:	call   0x64013d30
64001fb2:	mov    eax,esp
64001fb4:	push   ebx
64001fb5:	push   esi
64001fb6:	push   edi
64001fb7:	push   eax
64001fb8:	call   0x64001040
64001fbd:	mov    edi,eax
64001fbf:	push   0x64041bb4
64001fc4:	push   0x21
64001fc6:	push   0x64041be4
64001fcb:	call   0x64002e50
64001fd0:	mov    ecx,eax
64001fd2:	add    esp,0xc
64001fd5:	mov    DWORD PTR [ebp-0x8c],0xf
64001fdf:	mov    DWORD PTR [ebp-0x90],0x0
64001fe9:	mov    BYTE PTR [ebp-0xa0],0x0
64001ff0:	lea    esi,[ecx+0x1]
64001ff3:	mov    dl,BYTE PTR [ecx]
64001ff5:	add    ecx,0x1
64001ff8:	test   dl,dl
64001ffa:	jne    0x64001ff3
64001ffc:	sub    ecx,esi
64001ffe:	push   ecx
64001fff:	push   eax
64002000:	lea    ecx,[ebp-0xa4]
64002006:	call   0x64003410
6400200b:	lea    eax,[ebp-0xa4]
64002011:	push   eax
64002012:	lea    esi,[ebp-0xe8]
64002018:	mov    BYTE PTR [ebp-0x4],0x1
6400201c:	call   0x64006860
64002021:	add    esp,0x4
64002024:	mov    esi,eax
64002026:	push   0x64041b7c
6400202b:	push   0x7
6400202d:	push   0x64041bac
64002032:	mov    BYTE PTR [ebp-0x4],0x2
64002036:	call   0x64002e50
6400203b:	add    esp,0xc
6400203e:	push   esi
6400203f:	mov    edi,eax
64002041:	lea    esi,[ebp-0x104]
64002047:	call   0x64006860
6400204c:	add    esp,0x4
6400204f:	push   eax
64002050:	lea    edi,[ebp-0x78]
64002053:	lea    esi,[ebp-0x13c]
64002059:	mov    BYTE PTR [ebp-0x4],0x3
6400205d:	call   0x64006860
64002062:	add    esp,0x4
64002065:	push   eax
64002066:	mov    edi,0x64041b78
6400206b:	lea    esi,[ebp-0x120]
64002071:	mov    BYTE PTR [ebp-0x4],0x4
64002075:	call   0x64006860
6400207a:	add    esp,0x4
6400207d:	push   eax
6400207e:	lea    ecx,[ebp-0xcc]
64002084:	push   ecx
64002085:	mov    BYTE PTR [ebp-0x4],0x5
64002089:	call   0x64001470
6400208e:	push   0x64044100
64002093:	lea    edx,[ebp-0xcc]
64002099:	push   edx
6400209a:	call   0x64013884
6400209f:	mov    esi,DWORD PTR [ebp-0x80]
640020a2:	mov    DWORD PTR [ebp-0x4],0xffffffff
640020a9:	mov    eax,DWORD PTR [ebp-0x7c]
640020ac:	add    eax,0xfffffff0
640020af:	lea    ecx,[eax+0xc]
640020b2:	or     edx,0xffffffff
640020b5:	lock xadd DWORD PTR [ecx],edx
640020b9:	dec    edx
640020ba:	test   edx,edx
640020bc:	jg     0x640020c8
640020be:	mov    ecx,DWORD PTR [eax]
640020c0:	mov    edx,DWORD PTR [ecx]
640020c2:	push   eax
640020c3:	mov    eax,DWORD PTR [edx+0x4]
640020c6:	call   eax
640020c8:	mov    eax,esi
640020ca:	lea    esp,[ebp-0x150]
640020d0:	mov    ecx,DWORD PTR [ebp-0xc]
640020d3:	mov    DWORD PTR fs:0x0,ecx
640020da:	pop    ecx
640020db:	pop    edi
640020dc:	pop    esi
640020dd:	pop    ebx
640020de:	mov    ecx,DWORD PTR [ebp-0x10]
640020e1:	xor    ecx,ebp
640020e3:	call   0x64013d18
640020e8:	mov    esp,ebp
640020ea:	pop    ebp
640020eb:	ret    
640020ec:	int3   
640020ed:	int3   
640020ee:	int3   
640020ef:	int3   
640020f0:	push   ebp
640020f1:	mov    ebp,esp
640020f3:	and    esp,0xfffffff8
640020f6:	push   ecx
640020f7:	push   esi
640020f8:	mov    DWORD PTR [esp+0x4],0x0
64002100:	call   0x64001f00
64002105:	mov    ecx,DWORD PTR [ebp+0x10]
64002108:	mov    edx,DWORD PTR [ebp+0xc]
6400210b:	mov    esi,DWORD PTR [ebp+0x8]
6400210e:	push   ecx
6400210f:	push   edx
64002110:	push   eax
64002111:	push   esi
64002112:	call   0x640022e0
64002117:	add    esp,0x10
6400211a:	mov    eax,esi
6400211c:	pop    esi
6400211d:	mov    esp,ebp
6400211f:	pop    ebp
64002120:	ret    
64002121:	int3   
64002122:	int3   
64002123:	int3   
64002124:	int3   
64002125:	int3   
64002126:	int3   
64002127:	int3   
64002128:	int3   
64002129:	int3   
6400212a:	int3   
6400212b:	int3   
6400212c:	int3   
6400212d:	int3   
6400212e:	int3   
6400212f:	int3   
64002130:	mov    eax,0x64000000
64002135:	ret    
64002136:	int3   
64002137:	int3   
64002138:	int3   
64002139:	int3   
6400213a:	int3   
6400213b:	int3   
6400213c:	int3   
6400213d:	int3   
6400213e:	int3   
6400213f:	int3   
64002140:	push   ecx
64002141:	mov    eax,DWORD PTR [esp+0xc]
64002145:	push   esi
64002146:	mov    esi,DWORD PTR [esp+0xc]
6400214a:	push   eax
6400214b:	push   esi
6400214c:	mov    DWORD PTR [esp+0xc],0x0
64002154:	call   0x64002170
64002159:	add    esp,0x8
6400215c:	mov    eax,esi
6400215e:	pop    esi
6400215f:	pop    ecx
64002160:	ret    
64002161:	int3   
64002162:	int3   
64002163:	int3   
64002164:	int3   
64002165:	int3   
64002166:	int3   
64002167:	int3   
64002168:	int3   
64002169:	int3   
6400216a:	int3   
6400216b:	int3   
6400216c:	int3   
6400216d:	int3   
6400216e:	int3   
6400216f:	int3   
64002170:	push   0xffffffff
64002172:	push   0x64023328
64002177:	mov    eax,fs:0x0
6400217d:	push   eax
6400217e:	push   ecx
6400217f:	push   ebp
64002180:	push   esi
64002181:	mov    eax,ds:0x640521ac
64002186:	xor    eax,esp
64002188:	push   eax
64002189:	lea    eax,[esp+0x10]
6400218d:	mov    fs:0x0,eax
64002193:	mov    ebp,DWORD PTR [esp+0x20]
64002197:	mov    DWORD PTR [esp+0xc],0x0
6400219f:	mov    eax,ds:0x640539e4
640021a4:	mov    edx,DWORD PTR [eax+0xc]
640021a7:	mov    ecx,0x640539e4
640021ac:	call   edx
640021ae:	lea    esi,[eax+0x10]
640021b1:	mov    DWORD PTR [esp+0xc],esi
640021b5:	mov    DWORD PTR [esp+0x18],0x0
640021bd:	mov    eax,DWORD PTR [esi-0x8]
640021c0:	mov    ecx,0x1
640021c5:	sub    ecx,DWORD PTR [esi-0x4]
640021c8:	sub    eax,0x104
640021cd:	or     eax,ecx
640021cf:	jge    0x640021e3
640021d1:	push   0x104
640021d6:	lea    ecx,[esp+0x10]
640021da:	call   0x64004380
640021df:	mov    esi,DWORD PTR [esp+0xc]
640021e3:	cmp    DWORD PTR [esi-0x8],0x104
640021ea:	jge    0x640021f6
640021ec:	push   0x80070057
640021f1:	call   0x64001080
640021f6:	push   0x104
640021fb:	push   esi
640021fc:	mov    DWORD PTR [esi-0xc],0x104
64002203:	push   0x64000000
64002208:	mov    WORD PTR [esi+0x208],0x0
64002211:	call   DWORD PTR ds:0x6402c058
64002217:	mov    eax,esi
64002219:	lea    edx,[eax+0x2]
6400221c:	lea    esp,[esp+0x0]
64002220:	mov    cx,WORD PTR [eax]
64002223:	add    eax,0x2
64002226:	test   cx,cx
64002229:	jne    0x64002220
6400222b:	sub    eax,edx
6400222d:	sar    eax,1
6400222f:	js     0x640021ec
64002231:	cmp    eax,DWORD PTR [esi-0x8]
64002234:	jg     0x640021ec
64002236:	cmp    BYTE PTR [esp+0x24],cl
6400223a:	mov    DWORD PTR [esi-0xc],eax
6400223d:	mov    WORD PTR [esi+eax*2],cx
64002241:	je     0x6400226f
64002243:	add    esi,0xfffffff0
64002246:	mov    eax,esi
64002248:	call   0x640043d0
6400224d:	add    eax,0x10
64002250:	mov    DWORD PTR [ebp+0x0],eax
64002253:	mov    DWORD PTR [esp+0x18],0xffffffff
6400225b:	lea    eax,[esi+0xc]
6400225e:	or     ecx,0xffffffff
64002261:	lock xadd DWORD PTR [eax],ecx
64002265:	dec    ecx
64002266:	test   ecx,ecx
64002268:	jg     0x640022c5
6400226a:	mov    ecx,DWORD PTR [esi]
6400226c:	push   esi
6400226d:	jmp    0x640022be
6400226f:	push   0x5c
64002271:	push   esi
64002272:	call   0x64014b31
64002277:	add    esp,0x8
6400227a:	test   eax,eax
6400227c:	je     0x64002289
6400227e:	sub    eax,esi
64002280:	sar    eax,1
64002282:	mov    ecx,eax
64002284:	cmp    ecx,0xffffffff
64002287:	jne    0x6400228d
64002289:	xor    ecx,ecx
6400228b:	jmp    0x64002290
6400228d:	add    ecx,0x1
64002290:	mov    eax,DWORD PTR [esi-0xc]
64002293:	sub    eax,ecx
64002295:	lea    ecx,[esp+0xc]
64002299:	push   ecx
6400229a:	mov    ecx,ebp
6400229c:	call   0x64002c20
640022a1:	lea    eax,[esi-0x10]
640022a4:	mov    DWORD PTR [esp+0x18],0xffffffff
640022ac:	lea    edx,[eax+0xc]
640022af:	or     ecx,0xffffffff
640022b2:	lock xadd DWORD PTR [edx],ecx
640022b6:	dec    ecx
640022b7:	test   ecx,ecx
640022b9:	jg     0x640022c5
640022bb:	mov    ecx,DWORD PTR [eax]
640022bd:	push   eax
640022be:	mov    edx,DWORD PTR [ecx]
640022c0:	mov    eax,DWORD PTR [edx+0x4]
640022c3:	call   eax
640022c5:	mov    eax,ebp
640022c7:	mov    ecx,DWORD PTR [esp+0x10]
640022cb:	mov    DWORD PTR fs:0x0,ecx
640022d2:	pop    ecx
640022d3:	pop    esi
640022d4:	pop    ebp
640022d5:	add    esp,0x10
640022d8:	ret    
640022d9:	int3   
640022da:	int3   
640022db:	int3   
640022dc:	int3   
640022dd:	int3   
640022de:	int3   
640022df:	int3   
640022e0:	push   ebp
640022e1:	mov    ebp,esp
640022e3:	push   0xffffffff
640022e5:	push   0x64023a9f
640022ea:	mov    eax,fs:0x0
640022f0:	push   eax
640022f1:	sub    esp,0xa0c
640022f7:	mov    eax,ds:0x640521ac
640022fc:	xor    eax,ebp
640022fe:	mov    DWORD PTR [ebp-0x10],eax
64002301:	push   ebx
64002302:	push   esi
64002303:	push   edi
64002304:	push   eax
64002305:	lea    eax,[ebp-0xc]
64002308:	mov    fs:0x0,eax
6400230e:	mov    esi,DWORD PTR [ebp+0x14]
64002311:	mov    ecx,DWORD PTR [ebp+0x10]
64002314:	mov    edx,DWORD PTR [ebp+0xc]
64002317:	mov    edi,DWORD PTR [ebp+0x8]
6400231a:	xor    eax,eax
6400231c:	mov    DWORD PTR [ebp-0x4],eax
6400231f:	mov    DWORD PTR [ebp-0x2c],eax
64002322:	lea    eax,[esi+esi*4]
64002325:	lea    eax,[ecx+eax*2]
64002328:	add    edx,eax
6400232a:	lea    eax,[ebp-0xa18]
64002330:	mov    DWORD PTR [ebp-0x30],edi
64002333:	call   0x64001750
64002338:	mov    ebx,0x1
6400233d:	test   BYTE PTR ds:0x64054690,bl
64002343:	jne    0x640023f9
64002349:	or     DWORD PTR ds:0x64054690,ebx
6400234f:	push   0x64041d04
64002354:	push   0x3
64002356:	mov    ecx,0x64041cfc
6400235b:	mov    DWORD PTR [ebp-0x4],ebx
6400235e:	call   0x64003050
64002363:	push   0x64041cbc
64002368:	push   0x3
6400236a:	mov    ecx,0x64041cb4
6400236f:	mov    ds:0x64054514,eax
64002374:	mov    DWORD PTR ds:0x64054518,ebx
6400237a:	call   0x64003050
6400237f:	push   0x64041c88
64002384:	push   0x0
64002386:	mov    ecx,0x64041a34
6400238b:	mov    ds:0x6405451c,eax
64002390:	mov    DWORD PTR ds:0x64054520,ebx
64002396:	call   0x64003050
6400239b:	push   0x64041c48
640023a0:	push   0x0
640023a2:	mov    ecx,0x64041a34
640023a7:	mov    ds:0x64054524,eax
640023ac:	mov    DWORD PTR ds:0x64054528,ebx
640023b2:	call   0x64003050
640023b7:	push   0x64041c14
640023bc:	push   0x4
640023be:	mov    ecx,0x64041c08
640023c3:	mov    ds:0x6405452c,eax
640023c8:	mov    DWORD PTR ds:0x64054530,ebx
640023ce:	call   0x64003050
640023d3:	add    esp,0x28
640023d6:	mov    ds:0x64054534,eax
640023db:	mov    DWORD PTR ds:0x64054538,ebx
640023e1:	mov    DWORD PTR ds:0x6405453c,0x64041a34
640023eb:	mov    DWORD PTR ds:0x64054540,0x2
640023f5:	mov    BYTE PTR [ebp-0x4],0x0
640023f9:	lea    ecx,[esi-0x1]
640023fc:	cmp    ecx,0x5
640023ff:	ja     0x6400241a
64002401:	mov    eax,DWORD PTR [ebp+0x10]
64002404:	lea    edx,[esi+esi*2]
64002407:	lea    eax,[eax+edx*2]
6400240a:	mov    ecx,DWORD PTR [eax*8+0x640544e4]
64002411:	mov    esi,DWORD PTR [eax*8+0x640544e8]
64002418:	jmp    0x64002421
6400241a:	mov    ecx,0x64041a34
6400241f:	xor    esi,esi
64002421:	push   edi
64002422:	call   0x64002a80
64002427:	xor    ecx,ecx
64002429:	mov    eax,esi
6400242b:	sub    eax,ebx
6400242d:	mov    DWORD PTR [ebp-0x4],ecx
64002430:	mov    DWORD PTR [ebp-0x2c],ebx
64002433:	je     0x6400254f
64002439:	sub    eax,ebx
6400243b:	jne    0x6400252b
64002441:	mov    DWORD PTR [ebp-0x1c],eax
64002444:	mov    DWORD PTR [ebp-0x18],eax
64002447:	mov    DWORD PTR [ebp-0x14],eax
6400244a:	or     ebx,0xffffffff
6400244d:	lea    eax,[ebp-0xa18]
64002453:	call   0x64001790
64002458:	mov    DWORD PTR [ebp-0x20],eax
6400245b:	or     ebx,0xffffffff
6400245e:	lea    eax,[ebp-0xa18]
64002464:	call   0x64001790
64002469:	mov    DWORD PTR [ebp-0x1c],eax
6400246c:	or     ebx,0xffffffff
6400246f:	lea    eax,[ebp-0xa18]
64002475:	call   0x64001790
6400247a:	mov    DWORD PTR [ebp-0x18],eax
6400247d:	or     ebx,0xffffffff
64002480:	lea    eax,[ebp-0xa18]
64002486:	call   0x64001790
6400248b:	mov    DWORD PTR [ebp-0x14],eax
6400248e:	call   DWORD PTR ds:0x64052184
64002494:	lea    ecx,[ebp-0x20]
64002497:	push   ecx
64002498:	lea    esi,[ebp-0x4c]
6400249b:	mov    DWORD PTR [ebp-0x24],eax
6400249e:	call   0x64001ab0
640024a3:	add    esp,0x4
640024a6:	mov    DWORD PTR [ebp-0x4],0x2
640024ad:	cmp    DWORD PTR [eax+0x18],0x10
640024b1:	jb     0x640024b8
640024b3:	mov    ebx,DWORD PTR [eax+0x4]
640024b6:	jmp    0x640024bb
640024b8:	lea    ebx,[eax+0x4]
640024bb:	test   ebx,ebx
640024bd:	jne    0x640024c5
640024bf:	xor    eax,eax
640024c1:	xor    ecx,ecx
640024c3:	jmp    0x64002511
640024c5:	push   ebx
640024c6:	call   DWORD PTR ds:0x6402c070
640024cc:	mov    esi,eax
640024ce:	add    esi,0x1
640024d1:	cmp    esi,0x3fffffff
640024d7:	jle    0x640024df
640024d9:	xor    eax,eax
640024db:	xor    ecx,ecx
640024dd:	jmp    0x64002511
640024df:	lea    eax,[esi+esi*1]
640024e2:	call   0x64013d30
640024e7:	mov    edx,DWORD PTR [ebp-0x24]
640024ea:	mov    eax,esp
640024ec:	push   edx
640024ed:	push   esi
640024ee:	push   ebx
640024ef:	push   eax
640024f0:	call   0x64001000
640024f5:	test   eax,eax
640024f7:	jne    0x640024fd
640024f9:	xor    ecx,ecx
640024fb:	jmp    0x64002511
640024fd:	mov    ecx,eax
640024ff:	lea    esi,[ecx+0x2]
64002502:	mov    dx,WORD PTR [ecx]
64002505:	add    ecx,0x2
64002508:	test   dx,dx
6400250b:	jne    0x64002502
6400250d:	sub    ecx,esi
6400250f:	sar    ecx,1
64002511:	push   ecx
64002512:	push   eax
64002513:	push   edi
64002514:	call   0x64003670
64002519:	cmp    DWORD PTR [ebp-0x34],0x10
6400251d:	jb     0x6400252b
6400251f:	mov    eax,DWORD PTR [ebp-0x48]
64002522:	push   eax
64002523:	call   0x64013656
64002528:	add    esp,0x4
6400252b:	mov    eax,edi
6400252d:	lea    esp,[ebp-0xa28]
64002533:	mov    ecx,DWORD PTR [ebp-0xc]
64002536:	mov    DWORD PTR fs:0x0,ecx
6400253d:	pop    ecx
6400253e:	pop    edi
6400253f:	pop    esi
64002540:	pop    ebx
64002541:	mov    ecx,DWORD PTR [ebp-0x10]
64002544:	xor    ecx,ebp
64002546:	call   0x64013d18
6400254b:	mov    esp,ebp
6400254d:	pop    ebp
6400254e:	ret    
6400254f:	mov    DWORD PTR [ebp-0x24],ecx
64002552:	jmp    0x64002560
64002554:	lea    esp,[esp+0x0]
6400255b:	jmp    0x64002560
6400255d:	lea    ecx,[ecx+0x0]
64002560:	mov    ebx,0x23
64002565:	lea    eax,[ebp-0xa18]
6400256b:	call   0x64001790
64002570:	cmp    eax,0xa
64002573:	jae    0x64002580
64002575:	add    eax,0x30
64002578:	movzx  ecx,ax
6400257b:	mov    DWORD PTR [ebp-0x28],ecx
6400257e:	jmp    0x64002589
64002580:	add    eax,0x57
64002583:	movzx  edx,ax
64002586:	mov    DWORD PTR [ebp-0x28],edx
64002589:	mov    eax,DWORD PTR [edi]
6400258b:	mov    ebx,DWORD PTR [eax-0xc]
6400258e:	mov    ecx,0x1
64002593:	sub    ecx,DWORD PTR [eax-0x4]
64002596:	mov    eax,DWORD PTR [eax-0x8]
64002599:	lea    esi,[ebx+0x1]
6400259c:	sub    eax,esi
6400259e:	or     eax,ecx
640025a0:	jge    0x640025aa
640025a2:	push   esi
640025a3:	mov    ecx,edi
640025a5:	call   0x64004380
640025aa:	test   esi,esi
640025ac:	mov    eax,DWORD PTR [edi]
640025ae:	mov    cx,WORD PTR [ebp-0x28]
640025b2:	mov    WORD PTR [eax+ebx*2],cx
640025b6:	jl     0x640025dd
640025b8:	mov    eax,DWORD PTR [edi]
640025ba:	cmp    esi,DWORD PTR [eax-0x8]
640025bd:	jg     0x640025dd
640025bf:	mov    DWORD PTR [eax-0xc],esi
640025c2:	mov    eax,DWORD PTR [ebp-0x24]
640025c5:	mov    edx,DWORD PTR [edi]
640025c7:	add    eax,0x1
640025ca:	cmp    eax,0x5
640025cd:	mov    WORD PTR [edx+esi*2],0x0
640025d3:	mov    DWORD PTR [ebp-0x24],eax
640025d6:	jl     0x64002560
640025d8:	jmp    0x6400252b
640025dd:	push   0x80070057
640025e2:	call   0x64001080
640025e7:	int3   
640025e8:	int3   
640025e9:	int3   
640025ea:	int3   
640025eb:	int3   
640025ec:	int3   
640025ed:	int3   
640025ee:	int3   
640025ef:	int3   
640025f0:	push   0xffffffff
640025f2:	push   0x64023cf1
640025f7:	mov    eax,fs:0x0
640025fd:	push   eax
640025fe:	sub    esp,0xc
64002601:	push   ebx
64002602:	push   esi
64002603:	push   edi
64002604:	mov    eax,ds:0x640521ac
64002609:	xor    eax,esp
6400260b:	push   eax
6400260c:	lea    eax,[esp+0x1c]
64002610:	mov    fs:0x0,eax
64002616:	xor    ebx,ebx
64002618:	mov    DWORD PTR [esp+0x24],ebx
6400261c:	mov    DWORD PTR [esp+0x10],ebx
64002620:	mov    eax,ds:0x640539e4
64002625:	mov    edx,DWORD PTR [eax+0xc]
64002628:	mov    ecx,0x640539e4
6400262d:	call   edx
6400262f:	mov    esi,DWORD PTR [esp+0x2c]
64002633:	add    eax,0x10
64002636:	mov    DWORD PTR [esi],eax
64002638:	cmp    BYTE PTR [esp+0x30],bl
6400263c:	mov    edi,0x1
64002641:	mov    DWORD PTR [esp+0x24],ebx
64002645:	mov    DWORD PTR [esp+0x10],edi
64002649:	je     0x6400268d
6400264b:	lea    eax,[esp+0x14]
6400264f:	push   eax
64002650:	call   0x64001c20
64002655:	add    esp,0x4
64002658:	mov    DWORD PTR [esp+0x24],edi
6400265c:	mov    eax,DWORD PTR [eax]
6400265e:	mov    ecx,DWORD PTR [eax-0xc]
64002661:	push   ecx
64002662:	push   eax
64002663:	push   esi
64002664:	call   0x64003670
64002669:	mov    BYTE PTR [esp+0x24],bl
6400266d:	mov    eax,DWORD PTR [esp+0x14]
64002671:	add    eax,0xfffffff0
64002674:	lea    ecx,[eax+0xc]
64002677:	or     edx,0xffffffff
6400267a:	lock xadd DWORD PTR [ecx],edx
6400267e:	dec    edx
6400267f:	test   edx,edx
64002681:	jg     0x6400268d
64002683:	mov    ecx,DWORD PTR [eax]
64002685:	mov    edx,DWORD PTR [ecx]
64002687:	push   eax
64002688:	mov    eax,DWORD PTR [edx+0x4]
6400268b:	call   eax
6400268d:	push   edi
6400268e:	lea    ecx,[esp+0x1c]
64002692:	push   0x2
64002694:	push   ecx
64002695:	call   0x640020f0
6400269a:	mov    edi,eax
6400269c:	push   0x64041d40
640026a1:	push   0x4
640026a3:	mov    ecx,0x64041d6c
640026a8:	mov    DWORD PTR [esp+0x38],0x2
640026b0:	call   0x64003050
640026b5:	lea    edx,[esp+0x28]
640026b9:	push   edi
640026ba:	push   edx
640026bb:	mov    ebx,eax
640026bd:	call   0x64002ca0
640026c2:	add    esp,0x1c
640026c5:	mov    BYTE PTR [esp+0x24],0x3
640026ca:	mov    eax,DWORD PTR [eax]
640026cc:	mov    ecx,DWORD PTR [eax-0xc]
640026cf:	push   ecx
640026d0:	push   eax
640026d1:	push   esi
640026d2:	call   0x64003670
640026d7:	mov    BYTE PTR [esp+0x24],0x2
640026dc:	mov    eax,DWORD PTR [esp+0x14]
640026e0:	add    eax,0xfffffff0
640026e3:	lea    ecx,[eax+0xc]
640026e6:	or     edx,0xffffffff
640026e9:	lock xadd DWORD PTR [ecx],edx
640026ed:	dec    edx
640026ee:	test   edx,edx
640026f0:	jg     0x640026fc
640026f2:	mov    ecx,DWORD PTR [eax]
640026f4:	mov    edx,DWORD PTR [ecx]
640026f6:	push   eax
640026f7:	mov    eax,DWORD PTR [edx+0x4]
640026fa:	call   eax
640026fc:	mov    BYTE PTR [esp+0x24],0x0
64002701:	mov    eax,DWORD PTR [esp+0x18]
64002705:	add    eax,0xfffffff0
64002708:	lea    ecx,[eax+0xc]
6400270b:	or     edx,0xffffffff
6400270e:	lock xadd DWORD PTR [ecx],edx
64002712:	dec    edx
64002713:	test   edx,edx
64002715:	jg     0x64002721
64002717:	mov    ecx,DWORD PTR [eax]
64002719:	mov    edx,DWORD PTR [ecx]
6400271b:	push   eax
6400271c:	mov    eax,DWORD PTR [edx+0x4]
6400271f:	call   eax
64002721:	mov    eax,esi
64002723:	mov    ecx,DWORD PTR [esp+0x1c]
64002727:	mov    DWORD PTR fs:0x0,ecx
6400272e:	pop    ecx
6400272f:	pop    edi
64002730:	pop    esi
64002731:	pop    ebx
64002732:	add    esp,0x18
64002735:	ret    
64002736:	int3   
64002737:	int3   
64002738:	int3   
64002739:	int3   
6400273a:	int3   
6400273b:	int3   
6400273c:	int3   
6400273d:	int3   
6400273e:	int3   
6400273f:	int3   
64002740:	push   0xffffffff
64002742:	push   0x64022ff3
64002747:	mov    eax,fs:0x0
6400274d:	push   eax
6400274e:	sub    esp,0x434
64002754:	mov    eax,ds:0x640521ac
64002759:	xor    eax,esp
6400275b:	mov    DWORD PTR [esp+0x430],eax
64002762:	push   ebx
64002763:	push   ebp
64002764:	push   esi
64002765:	push   edi
64002766:	mov    eax,ds:0x640521ac
6400276b:	xor    eax,esp
6400276d:	push   eax
6400276e:	lea    eax,[esp+0x448]
64002775:	mov    fs:0x0,eax
6400277b:	mov    eax,DWORD PTR [esp+0x458]
64002782:	push   eax
64002783:	push   0x18
64002785:	mov    DWORD PTR [esp+0x458],0x0
64002790:	call   0x64012f0e
64002795:	mov    esi,eax
64002797:	mov    DWORD PTR [esp+0x18],esi
6400279b:	or     ebp,0xffffffff
6400279e:	cmp    esi,ebp
640027a0:	mov    BYTE PTR [esp+0x450],0x1
640027a8:	jne    0x640027d6
640027aa:	call   DWORD PTR ds:0x6402c06c
640027b0:	push   ebp
640027b1:	mov    esi,eax
640027b3:	call   DWORD PTR ds:0x6402c078
640027b9:	push   esi
640027ba:	call   DWORD PTR ds:0x6402c074
640027c0:	mov    DWORD PTR [esp+0x450],ebp
640027c7:	mov    eax,DWORD PTR [esp+0x45c]
640027ce:	add    eax,0xfffffff0
640027d1:	jmp    0x64002892
640027d6:	lea    ecx,[esp+0x1c]
640027da:	push   ecx
640027db:	push   esi
640027dc:	mov    DWORD PTR [esp+0x24],0x428
640027e4:	call   0x64012f14
640027e9:	test   eax,eax
640027eb:	jne    0x64002822
640027ed:	test   esi,esi
640027ef:	je     0x64002807
640027f1:	call   DWORD PTR ds:0x6402c06c
640027f7:	push   esi
640027f8:	mov    edi,eax
640027fa:	call   DWORD PTR ds:0x6402c078
64002800:	push   edi
64002801:	call   DWORD PTR ds:0x6402c074
64002807:	mov    DWORD PTR [esp+0x450],ebp
6400280e:	mov    eax,DWORD PTR [esp+0x45c]
64002815:	add    eax,0xfffffff0
64002818:	lea    edx,[eax+0xc]
6400281b:	lock xadd DWORD PTR [edx],ebp
6400281f:	dec    ebp
64002820:	jmp    0x6400289a
64002822:	mov    edi,DWORD PTR [esp+0x45c]
64002829:	lea    esp,[esp+0x0]
64002830:	cmp    DWORD PTR [edi-0x4],0x1
64002834:	jle    0x6400284d
64002836:	mov    ecx,DWORD PTR [edi-0xc]
64002839:	push   ecx
6400283a:	lea    ecx,[esp+0x460]
64002841:	call   0x640037c0
64002846:	mov    edi,DWORD PTR [esp+0x45c]
6400284d:	lea    edx,[esp+0x3c]
64002851:	push   edi
64002852:	push   edx
64002853:	call   0x64014aa0
64002858:	add    esp,0x8
6400285b:	test   eax,eax
6400285d:	je     0x640028d2
6400285f:	lea    eax,[esp+0x1c]
64002863:	push   eax
64002864:	push   esi
64002865:	call   0x64012f1a
6400286a:	test   eax,eax
6400286c:	jne    0x64002830
6400286e:	test   esi,esi
64002870:	je     0x64002888
64002872:	call   DWORD PTR ds:0x6402c06c
64002878:	push   esi
64002879:	mov    ebx,eax
6400287b:	call   DWORD PTR ds:0x6402c078
64002881:	push   ebx
64002882:	call   DWORD PTR ds:0x6402c074
64002888:	mov    DWORD PTR [esp+0x450],ebp
6400288f:	lea    eax,[edi-0x10]
64002892:	lea    ecx,[eax+0xc]
64002895:	lock xadd DWORD PTR [ecx],ebp
64002899:	dec    ebp
6400289a:	test   ebp,ebp
6400289c:	jg     0x640028a8
6400289e:	mov    ecx,DWORD PTR [eax]
640028a0:	mov    edx,DWORD PTR [ecx]
640028a2:	push   eax
640028a3:	mov    eax,DWORD PTR [edx+0x4]
640028a6:	call   eax
640028a8:	xor    al,al
640028aa:	mov    ecx,DWORD PTR [esp+0x448]
640028b1:	mov    DWORD PTR fs:0x0,ecx
640028b8:	pop    ecx
640028b9:	pop    edi
640028ba:	pop    esi
640028bb:	pop    ebp
640028bc:	pop    ebx
640028bd:	mov    ecx,DWORD PTR [esp+0x430]
640028c4:	xor    ecx,esp
640028c6:	call   0x64013d18
640028cb:	add    esp,0x440
640028d1:	ret    
640028d2:	test   esi,esi
640028d4:	je     0x640028ec
640028d6:	call   DWORD PTR ds:0x6402c06c
640028dc:	push   esi
640028dd:	mov    ebx,eax
640028df:	call   DWORD PTR ds:0x6402c078
640028e5:	push   ebx
640028e6:	call   DWORD PTR ds:0x6402c074
640028ec:	lea    eax,[edi-0x10]
640028ef:	mov    DWORD PTR [esp+0x450],ebp
640028f6:	lea    ecx,[eax+0xc]
640028f9:	lock xadd DWORD PTR [ecx],ebp
640028fd:	dec    ebp
640028fe:	test   ebp,ebp
64002900:	jg     0x6400290c
64002902:	mov    ecx,DWORD PTR [eax]
64002904:	mov    edx,DWORD PTR [ecx]
64002906:	push   eax
64002907:	mov    eax,DWORD PTR [edx+0x4]
6400290a:	call   eax
6400290c:	mov    al,0x1
6400290e:	jmp    0x640028aa
64002910:	xor    ax,ax
64002913:	ret    
64002914:	int3   
64002915:	int3   
64002916:	int3   
64002917:	int3   
64002918:	int3   
64002919:	int3   
6400291a:	int3   
6400291b:	int3   
6400291c:	int3   
6400291d:	int3   
6400291e:	int3   
6400291f:	int3   
64002920:	mov    edx,DWORD PTR [esp+0x4]
64002924:	push   esi
64002925:	mov    esi,ecx
64002927:	mov    eax,edx
64002929:	push   edi
6400292a:	mov    DWORD PTR [esi+0x18],0xf
64002931:	mov    DWORD PTR [esi+0x14],0x0
64002938:	mov    BYTE PTR [esi+0x4],0x0
6400293c:	lea    edi,[eax+0x1]
6400293f:	nop
64002940:	mov    cl,BYTE PTR [eax]
64002942:	add    eax,0x1
64002945:	test   cl,cl
64002947:	jne    0x64002940
64002949:	sub    eax,edi
6400294b:	push   eax
6400294c:	push   edx
6400294d:	mov    ecx,esi
6400294f:	call   0x64003410
64002954:	pop    edi
64002955:	mov    eax,esi
64002957:	pop    esi
64002958:	ret    0x4
6400295b:	int3   
6400295c:	int3   
6400295d:	int3   
6400295e:	int3   
6400295f:	int3   
64002960:	push   esi
64002961:	mov    esi,ecx
64002963:	cmp    DWORD PTR [esi+0x18],0x10
64002967:	jb     0x64002975
64002969:	mov    eax,DWORD PTR [esi+0x4]
6400296c:	push   eax
6400296d:	call   0x64013656
64002972:	add    esp,0x4
64002975:	xor    eax,eax
64002977:	mov    DWORD PTR [esi+0x18],0xf
6400297e:	mov    DWORD PTR [esi+0x14],eax
64002981:	mov    BYTE PTR [esi+0x4],al
64002984:	pop    esi
64002985:	ret    
64002986:	int3   
64002987:	int3   
64002988:	int3   
64002989:	int3   
6400298a:	int3   
6400298b:	int3   
6400298c:	int3   
6400298d:	int3   
6400298e:	int3   
6400298f:	int3   
64002990:	mov    ecx,DWORD PTR [esp+0x4]
64002994:	push   ebx
64002995:	push   ebp
64002996:	mov    ebp,DWORD PTR [esp+0x10]
6400299a:	push   esi
6400299b:	mov    esi,eax
6400299d:	mov    edx,DWORD PTR [esi+0x18]
640029a0:	cmp    edx,0x10
640029a3:	push   edi
640029a4:	lea    ebx,[esi+0x4]
640029a7:	jb     0x640029ad
640029a9:	mov    eax,DWORD PTR [ebx]
640029ab:	jmp    0x640029af
640029ad:	mov    eax,ebx
640029af:	cmp    ecx,eax
640029b1:	jb     0x640029e0
640029b3:	cmp    edx,0x10
640029b6:	jb     0x640029bc
640029b8:	mov    eax,DWORD PTR [ebx]
640029ba:	jmp    0x640029be
640029bc:	mov    eax,ebx
640029be:	mov    edi,DWORD PTR [esi+0x14]
640029c1:	add    edi,eax
640029c3:	cmp    edi,ecx
640029c5:	jbe    0x640029e0
640029c7:	cmp    edx,0x10
640029ca:	jb     0x640029ce
640029cc:	mov    ebx,DWORD PTR [ebx]
640029ce:	sub    ecx,ebx
640029d0:	push   ecx
640029d1:	push   esi
640029d2:	mov    eax,ebp
640029d4:	call   0x64003240
640029d9:	pop    edi
640029da:	pop    esi
640029db:	pop    ebp
640029dc:	pop    ebx
640029dd:	ret    0x8
640029e0:	mov    eax,DWORD PTR [esi+0x14]
640029e3:	or     ecx,0xffffffff
640029e6:	sub    ecx,eax
640029e8:	cmp    ecx,ebp
640029ea:	jbe    0x640029f3
640029ec:	lea    edx,[eax+ebp*1]
640029ef:	cmp    edx,eax
640029f1:	jae    0x640029f8
640029f3:	call   0x64012f2c
640029f8:	test   ebp,ebp
640029fa:	jbe    0x64002a70
640029fc:	mov    edi,DWORD PTR [esi+0x14]
640029ff:	add    edi,ebp
64002a01:	cmp    edi,0xfffffffe
64002a04:	jbe    0x64002a0b
64002a06:	call   0x64012f2c
64002a0b:	mov    eax,DWORD PTR [esi+0x18]
64002a0e:	cmp    eax,edi
64002a10:	jae    0x64002a2e
64002a12:	mov    eax,DWORD PTR [esi+0x14]
64002a15:	push   eax
64002a16:	push   edi
64002a17:	mov    ecx,esi
64002a19:	call   0x64004080
64002a1e:	test   edi,edi
64002a20:	jbe    0x64002a70
64002a22:	mov    eax,DWORD PTR [esi+0x18]
64002a25:	cmp    eax,0x10
64002a28:	jb     0x64002a48
64002a2a:	mov    edx,DWORD PTR [ebx]
64002a2c:	jmp    0x64002a4a
64002a2e:	test   edi,edi
64002a30:	jne    0x64002a20
64002a32:	cmp    eax,0x10
64002a35:	mov    DWORD PTR [esi+0x14],edi
64002a38:	jb     0x64002a3c
64002a3a:	mov    ebx,DWORD PTR [ebx]
64002a3c:	pop    edi
64002a3d:	mov    eax,esi
64002a3f:	pop    esi
64002a40:	pop    ebp
64002a41:	mov    BYTE PTR [ebx],0x0
64002a44:	pop    ebx
64002a45:	ret    0x8
64002a48:	mov    edx,ebx
64002a4a:	mov    ecx,DWORD PTR [esi+0x14]
64002a4d:	push   ebp
64002a4e:	mov    ebp,DWORD PTR [esp+0x18]
64002a52:	sub    eax,ecx
64002a54:	push   ebp
64002a55:	push   eax
64002a56:	add    ecx,edx
64002a58:	push   ecx
64002a59:	call   0x640137ae
64002a5e:	add    esp,0x10
64002a61:	cmp    DWORD PTR [esi+0x18],0x10
64002a65:	mov    DWORD PTR [esi+0x14],edi
64002a68:	jb     0x64002a6c
64002a6a:	mov    ebx,DWORD PTR [ebx]
64002a6c:	mov    BYTE PTR [ebx+edi*1],0x0
64002a70:	pop    edi
64002a71:	mov    eax,esi
64002a73:	pop    esi
64002a74:	pop    ebp
64002a75:	pop    ebx
64002a76:	ret    0x8
64002a79:	int3   
64002a7a:	int3   
64002a7b:	int3   
64002a7c:	int3   
64002a7d:	int3   
64002a7e:	int3   
64002a7f:	int3   
64002a80:	push   0xffffffff
64002a82:	push   0x64023458
64002a87:	mov    eax,fs:0x0
64002a8d:	push   eax
64002a8e:	push   ebx
64002a8f:	push   esi
64002a90:	push   edi
64002a91:	mov    eax,ds:0x640521ac
64002a96:	xor    eax,esp
64002a98:	push   eax
64002a99:	lea    eax,[esp+0x10]
64002a9d:	mov    fs:0x0,eax
64002aa3:	mov    esi,ecx
64002aa5:	mov    ebx,DWORD PTR [esp+0x20]
64002aa9:	mov    eax,ds:0x640539e4
64002aae:	mov    edx,DWORD PTR [eax+0xc]
64002ab1:	mov    ecx,0x640539e4
64002ab6:	call   edx
64002ab8:	add    eax,0x10
64002abb:	mov    DWORD PTR [ebx],eax
64002abd:	test   esi,esi
64002abf:	mov    DWORD PTR [esp+0x18],0x0
64002ac7:	je     0x64002aee
64002ac9:	test   esi,0xffff0000
64002acf:	jne    0x64002af2
64002ad1:	movzx  esi,si
64002ad4:	push   0x0
64002ad6:	push   esi
64002ad7:	call   0x640011b0
64002adc:	add    esp,0x8
64002adf:	test   eax,eax
64002ae1:	je     0x64002b0f
64002ae3:	push   esi
64002ae4:	push   eax
64002ae5:	mov    ecx,ebx
64002ae7:	call   0x64004b30
64002aec:	jmp    0x64002b0f
64002aee:	xor    eax,eax
64002af0:	jmp    0x64002b06
64002af2:	mov    eax,esi
64002af4:	lea    edx,[eax+0x2]
64002af7:	mov    cx,WORD PTR [eax]
64002afa:	add    eax,0x2
64002afd:	test   cx,cx
64002b00:	jne    0x64002af7
64002b02:	sub    eax,edx
64002b04:	sar    eax,1
64002b06:	push   esi
64002b07:	push   ebx
64002b08:	mov    edi,eax
64002b0a:	call   0x640042d0
64002b0f:	mov    eax,ebx
64002b11:	mov    ecx,DWORD PTR [esp+0x10]
64002b15:	mov    DWORD PTR fs:0x0,ecx
64002b1c:	pop    ecx
64002b1d:	pop    edi
64002b1e:	pop    esi
64002b1f:	pop    ebx
64002b20:	add    esp,0xc
64002b23:	ret    0x4
64002b26:	int3   
64002b27:	int3   
64002b28:	int3   
64002b29:	int3   
64002b2a:	int3   
64002b2b:	int3   
64002b2c:	int3   
64002b2d:	int3   
64002b2e:	int3   
64002b2f:	int3   
64002b30:	push   0xffffffff
64002b32:	push   0x64023428
64002b37:	mov    eax,fs:0x0
64002b3d:	push   eax
64002b3e:	push   ecx
64002b3f:	push   esi
64002b40:	push   edi
64002b41:	mov    eax,ds:0x640521ac
64002b46:	xor    eax,esp
64002b48:	push   eax
64002b49:	lea    eax,[esp+0x10]
64002b4d:	mov    fs:0x0,eax
64002b53:	mov    esi,ecx
64002b55:	mov    DWORD PTR [esp+0xc],esi
64002b59:	mov    eax,ds:0x640539e4
64002b5e:	mov    edx,DWORD PTR [eax+0xc]
64002b61:	mov    ecx,0x640539e4
64002b66:	call   edx
64002b68:	add    eax,0x10
64002b6b:	mov    DWORD PTR [esi],eax
64002b6d:	mov    eax,DWORD PTR [esp+0x20]
64002b71:	test   eax,eax
64002b73:	mov    DWORD PTR [esp+0x18],0x0
64002b7b:	je     0x64002ba1
64002b7d:	test   eax,0xffff0000
64002b82:	jne    0x64002ba1
64002b84:	movzx  edi,ax
64002b87:	push   0x0
64002b89:	push   edi
64002b8a:	call   0x640011b0
64002b8f:	add    esp,0x8
64002b92:	test   eax,eax
64002b94:	je     0x64002ba9
64002b96:	push   edi
64002b97:	push   eax
64002b98:	mov    ecx,esi
64002b9a:	call   0x64004b30
64002b9f:	jmp    0x64002ba9
64002ba1:	push   eax
64002ba2:	mov    ecx,esi
64002ba4:	call   0x640035b0
64002ba9:	mov    eax,esi
64002bab:	mov    ecx,DWORD PTR [esp+0x10]
64002baf:	mov    DWORD PTR fs:0x0,ecx
64002bb6:	pop    ecx
64002bb7:	pop    edi
64002bb8:	pop    esi
64002bb9:	add    esp,0x10
64002bbc:	ret    0x4
64002bbf:	int3   
64002bc0:	mov    eax,DWORD PTR [edi]
64002bc2:	mov    edx,DWORD PTR [eax-0x8]
64002bc5:	push   ebx
64002bc6:	mov    ebx,DWORD PTR [eax-0xc]
64002bc9:	push   esi
64002bca:	mov    ecx,0x1
64002bcf:	sub    ecx,DWORD PTR [eax-0x4]
64002bd2:	lea    esi,[ebx+0x1]
64002bd5:	sub    edx,esi
64002bd7:	or     ecx,edx
64002bd9:	jge    0x64002be3
64002bdb:	push   esi
64002bdc:	mov    ecx,edi
64002bde:	call   0x64004380
64002be3:	test   esi,esi
64002be5:	mov    eax,DWORD PTR [edi]
64002be7:	mov    cx,WORD PTR [esp+0xc]
64002bec:	mov    WORD PTR [eax+ebx*2],cx
64002bf0:	jl     0x64002c0b
64002bf2:	mov    eax,DWORD PTR [edi]
64002bf4:	cmp    esi,DWORD PTR [eax-0x8]
64002bf7:	jg     0x64002c0b
64002bf9:	mov    DWORD PTR [eax-0xc],esi
64002bfc:	mov    edx,DWORD PTR [edi]
64002bfe:	mov    WORD PTR [edx+esi*2],0x0
64002c04:	pop    esi
64002c05:	mov    eax,edi
64002c07:	pop    ebx
64002c08:	ret    0x4
64002c0b:	push   0x80070057
64002c10:	call   0x64001080
64002c15:	int3   
64002c16:	int3   
64002c17:	int3   
64002c18:	int3   
64002c19:	int3   
64002c1a:	int3   
64002c1b:	int3   
64002c1c:	int3   
64002c1d:	int3   
64002c1e:	int3   
64002c1f:	int3   
64002c20:	push   ebx
64002c21:	push   ebp
64002c22:	mov    ebp,DWORD PTR [esp+0xc]
64002c26:	push   esi
64002c27:	mov    esi,eax
64002c29:	test   esi,esi
64002c2b:	push   edi
64002c2c:	mov    edi,ecx
64002c2e:	mov    DWORD PTR [esp+0x14],0x0
64002c36:	jge    0x64002c3a
64002c38:	xor    esi,esi
64002c3a:	mov    eax,DWORD PTR [ebp+0x0]
64002c3d:	mov    ebx,DWORD PTR [eax-0xc]
64002c40:	cmp    esi,ebx
64002c42:	jl     0x64002c5a
64002c44:	add    eax,0xfffffff0
64002c47:	call   0x640043d0
64002c4c:	add    eax,0x10
64002c4f:	mov    DWORD PTR [edi],eax
64002c51:	mov    eax,edi
64002c53:	pop    edi
64002c54:	pop    esi
64002c55:	pop    ebp
64002c56:	pop    ebx
64002c57:	ret    0x4
64002c5a:	mov    eax,DWORD PTR [eax-0x10]
64002c5d:	test   eax,eax
64002c5f:	je     0x64002c6e
64002c61:	mov    edx,DWORD PTR [eax]
64002c63:	mov    ecx,eax
64002c65:	mov    eax,DWORD PTR [edx+0x10]
64002c68:	call   eax
64002c6a:	test   eax,eax
64002c6c:	jne    0x64002c7e
64002c6e:	mov    edx,DWORD PTR ds:0x640539e4
64002c74:	mov    eax,DWORD PTR [edx+0x10]
64002c77:	mov    ecx,0x640539e4
64002c7c:	call   eax
64002c7e:	mov    ecx,DWORD PTR [ebp+0x0]
64002c81:	sub    ebx,esi
64002c83:	lea    ebx,[ecx+ebx*2]
64002c86:	mov    ecx,eax
64002c88:	call   0x64004200
64002c8d:	mov    eax,edi
64002c8f:	pop    edi
64002c90:	pop    esi
64002c91:	pop    ebp
64002c92:	pop    ebx
64002c93:	ret    0x4
64002c96:	int3   
64002c97:	int3   
64002c98:	int3   
64002c99:	int3   
64002c9a:	int3   
64002c9b:	int3   
64002c9c:	int3   
64002c9d:	int3   
64002c9e:	int3   
64002c9f:	int3   
64002ca0:	push   0xffffffff
64002ca2:	push   0x640232f9
64002ca7:	mov    eax,fs:0x0
64002cad:	push   eax
64002cae:	push   ebp
64002caf:	push   esi
64002cb0:	mov    eax,ds:0x640521ac
64002cb5:	xor    eax,esp
64002cb7:	push   eax
64002cb8:	lea    eax,[esp+0xc]
64002cbc:	mov    fs:0x0,eax
64002cc2:	mov    ebp,DWORD PTR [esp+0x20]
64002cc6:	mov    esi,DWORD PTR [esp+0x1c]
64002cca:	mov    DWORD PTR [esp+0x14],0x0
64002cd2:	mov    DWORD PTR [esp+0x20],0x0
64002cda:	mov    eax,DWORD PTR [ebp+0x0]
64002cdd:	mov    ecx,DWORD PTR [eax-0x10]
64002ce0:	test   ecx,ecx
64002ce2:	je     0x64002cef
64002ce4:	mov    edx,DWORD PTR [ecx]
64002ce6:	mov    eax,DWORD PTR [edx+0x10]
64002ce9:	call   eax
64002ceb:	test   eax,eax
64002ced:	jne    0x64002cff
64002cef:	mov    edx,DWORD PTR ds:0x640539e4
64002cf5:	mov    eax,DWORD PTR [edx+0x10]
64002cf8:	mov    ecx,0x640539e4
64002cfd:	call   eax
64002cff:	xor    ecx,ecx
64002d01:	test   eax,eax
64002d03:	setne  cl
64002d06:	test   ecx,ecx
64002d08:	jne    0x64002d14
64002d0a:	push   0x80004005
64002d0f:	call   0x64001080
64002d14:	mov    edx,DWORD PTR [eax]
64002d16:	mov    ecx,eax
64002d18:	mov    eax,DWORD PTR [edx+0xc]
64002d1b:	call   eax
64002d1d:	add    eax,0x10
64002d20:	mov    DWORD PTR [esi],eax
64002d22:	test   ebx,ebx
64002d24:	mov    DWORD PTR [esp+0x14],0x0
64002d2c:	mov    DWORD PTR [esp+0x20],0x1
64002d34:	jne    0x64002d3a
64002d36:	xor    edx,edx
64002d38:	jmp    0x64002d51
64002d3a:	mov    eax,ebx
64002d3c:	lea    edx,[eax+0x2]
64002d3f:	nop
64002d40:	mov    cx,WORD PTR [eax]
64002d43:	add    eax,0x2
64002d46:	test   cx,cx
64002d49:	jne    0x64002d40
64002d4b:	sub    eax,edx
64002d4d:	sar    eax,1
64002d4f:	mov    edx,eax
64002d51:	mov    ecx,DWORD PTR [ebp+0x0]
64002d54:	mov    eax,DWORD PTR [ecx-0xc]
64002d57:	push   edx
64002d58:	push   ebx
64002d59:	push   ecx
64002d5a:	push   esi
64002d5b:	call   0x64003730
64002d60:	add    esp,0x10
64002d63:	mov    eax,esi
64002d65:	mov    ecx,DWORD PTR [esp+0xc]
64002d69:	mov    DWORD PTR fs:0x0,ecx
64002d70:	pop    ecx
64002d71:	pop    esi
64002d72:	pop    ebp
64002d73:	add    esp,0xc
64002d76:	ret    
64002d77:	int3   
64002d78:	int3   
64002d79:	int3   
64002d7a:	int3   
64002d7b:	int3   
64002d7c:	int3   
64002d7d:	int3   
64002d7e:	int3   
64002d7f:	int3   
64002d80:	mov    ecx,DWORD PTR [esp+0x8]
64002d84:	test   ecx,ecx
64002d86:	jne    0x64002d92
64002d88:	push   0x80004005
64002d8d:	call   0x64001080
64002d92:	mov    eax,DWORD PTR [esp+0x4]
64002d96:	mov    eax,DWORD PTR [eax]
64002d98:	mov    dx,WORD PTR [eax]
64002d9b:	cmp    dx,WORD PTR [ecx]
64002d9e:	jne    0x64002dc6
64002da0:	test   dx,dx
64002da3:	je     0x64002dba
64002da5:	mov    dx,WORD PTR [eax+0x2]
64002da9:	cmp    dx,WORD PTR [ecx+0x2]
64002dad:	jne    0x64002dc6
64002daf:	add    eax,0x4
64002db2:	add    ecx,0x4
64002db5:	test   dx,dx
64002db8:	jne    0x64002d98
64002dba:	xor    eax,eax
64002dbc:	xor    ecx,ecx
64002dbe:	test   eax,eax
64002dc0:	sete   cl
64002dc3:	mov    al,cl
64002dc5:	ret    
64002dc6:	sbb    eax,eax
64002dc8:	sbb    eax,0xffffffff
64002dcb:	xor    ecx,ecx
64002dcd:	test   eax,eax
64002dcf:	sete   cl
64002dd2:	mov    al,cl
64002dd4:	ret    
64002dd5:	int3   
64002dd6:	int3   
64002dd7:	int3   
64002dd8:	int3   
64002dd9:	int3   
64002dda:	int3   
64002ddb:	int3   
64002ddc:	int3   
64002ddd:	int3   
64002dde:	int3   
64002ddf:	int3   
64002de0:	push   esi
64002de1:	mov    esi,ecx
64002de3:	mov    eax,DWORD PTR [esi]
64002de5:	mov    edx,DWORD PTR [eax-0x8]
64002de8:	sub    eax,0x10
64002deb:	mov    ecx,0x1
64002df0:	sub    ecx,DWORD PTR [eax+0xc]
64002df3:	mov    eax,DWORD PTR [esp+0x8]
64002df7:	sub    edx,eax
64002df9:	or     ecx,edx
64002dfb:	jge    0x64002e05
64002dfd:	push   eax
64002dfe:	mov    ecx,esi
64002e00:	call   0x64004380
64002e05:	mov    eax,DWORD PTR [esi]
64002e07:	pop    esi
64002e08:	ret    0x4
64002e0b:	int3   
64002e0c:	int3   
64002e0d:	int3   
64002e0e:	int3   
64002e0f:	int3   
64002e10:	push   esi
64002e11:	mov    esi,ecx
64002e13:	push   edi
64002e14:	mov    edi,DWORD PTR [esi]
64002e16:	test   edi,edi
64002e18:	je     0x64002e32
64002e1a:	push   ebx
64002e1b:	call   DWORD PTR ds:0x6402c06c
64002e21:	push   edi
64002e22:	mov    ebx,eax
64002e24:	call   DWORD PTR ds:0x6402c078
64002e2a:	push   ebx
64002e2b:	call   DWORD PTR ds:0x6402c074
64002e31:	pop    ebx
64002e32:	pop    edi
64002e33:	mov    DWORD PTR [esi],0x0
64002e39:	pop    esi
64002e3a:	ret    
64002e3b:	int3   
64002e3c:	int3   
64002e3d:	int3   
64002e3e:	int3   
64002e3f:	int3   
64002e40:	int3   
64002e41:	int3   
64002e42:	int3   
64002e43:	int3   
64002e44:	int3   
64002e45:	int3   
64002e46:	int3   
64002e47:	int3   
64002e48:	int3   
64002e49:	int3   
64002e4a:	int3   
64002e4b:	int3   
64002e4c:	int3   
64002e4d:	int3   
64002e4e:	int3   
64002e4f:	int3   
64002e50:	push   ebp
64002e51:	mov    ebp,esp
64002e53:	and    esp,0xfffffff8
64002e56:	push   0xffffffff
64002e58:	push   0x64023720
64002e5d:	mov    eax,fs:0x0
64002e63:	push   eax
64002e64:	sub    esp,0x50
64002e67:	mov    eax,ds:0x640521ac
64002e6c:	xor    eax,esp
64002e6e:	mov    DWORD PTR [esp+0x48],eax
64002e72:	push   ebx
64002e73:	push   esi
64002e74:	push   edi
64002e75:	mov    eax,ds:0x640521ac
64002e7a:	xor    eax,esp
64002e7c:	push   eax
64002e7d:	lea    eax,[esp+0x60]
64002e81:	mov    fs:0x0,eax
64002e87:	mov    eax,ds:0x64054548
64002e8c:	mov    esi,DWORD PTR [ebp+0x8]
64002e8f:	xor    edi,edi
64002e91:	cmp    eax,edi
64002e93:	mov    DWORD PTR [esp+0x1c],esi
64002e97:	jne    0x64002ea7
64002e99:	push   edi
64002e9a:	push   edi
64002e9b:	push   edi
64002e9c:	call   DWORD PTR ds:0x6402c098
64002ea2:	mov    ds:0x64054548,eax
64002ea7:	push   0xffffffff
64002ea9:	push   eax
64002eaa:	call   DWORD PTR ds:0x6402c05c
64002eb0:	test   eax,eax
64002eb2:	je     0x64002ebb
64002eb4:	mov    eax,esi
64002eb6:	jmp    0x64003027
64002ebb:	mov    eax,DWORD PTR [ebp+0xc]
64002ebe:	push   eax
64002ebf:	push   esi
64002ec0:	lea    ecx,[esp+0x28]
64002ec4:	mov    DWORD PTR [esp+0x40],0xf
64002ecc:	mov    DWORD PTR [esp+0x3c],edi
64002ed0:	mov    BYTE PTR [esp+0x2c],0x0
64002ed5:	call   0x64003410
64002eda:	lea    ecx,[esp+0x20]
64002ede:	push   ecx
64002edf:	lea    edx,[esp+0x18]
64002ee3:	push   edx
64002ee4:	mov    DWORD PTR [esp+0x70],edi
64002ee8:	call   0x64003840
64002eed:	mov    ecx,eax
64002eef:	call   0x64003c60
64002ef4:	call   0x64003840
64002ef9:	mov    esi,DWORD PTR [esp+0x14]
64002efd:	cmp    esi,edi
64002eff:	mov    ebx,DWORD PTR [eax+0x4]
64002f02:	je     0x64002f08
64002f04:	cmp    esi,eax
64002f06:	je     0x64002f0d
64002f08:	call   0x64013e86
64002f0d:	mov    edi,DWORD PTR [esp+0x18]
64002f11:	cmp    edi,ebx
64002f13:	jne    0x64002f8a
64002f15:	sub    esp,0x1c
64002f18:	mov    ecx,esp
64002f1a:	mov    DWORD PTR [esp+0x30],esp
64002f1e:	push   0xffffffff
64002f20:	push   0x0
64002f22:	lea    eax,[esp+0x44]
64002f26:	mov    DWORD PTR [ecx+0x18],0xf
64002f2d:	mov    DWORD PTR [ecx+0x14],0x0
64002f34:	push   eax
64002f35:	mov    BYTE PTR [ecx+0x4],0x0
64002f39:	call   0x64003330
64002f3e:	lea    ecx,[esp+0x58]
64002f42:	push   ecx
64002f43:	call   0x640038d0
64002f48:	add    esp,0x20
64002f4b:	lea    edx,[esp+0x20]
64002f4f:	push   edx
64002f50:	mov    BYTE PTR [esp+0x6c],0x1
64002f55:	call   0x64003840
64002f5a:	mov    ecx,eax
64002f5c:	call   0x64003b00
64002f61:	push   0xffffffff
64002f63:	push   0x0
64002f65:	lea    ecx,[esp+0x44]
64002f69:	push   ecx
64002f6a:	mov    ecx,eax
64002f6c:	call   0x64003330
64002f71:	mov    BYTE PTR [esp+0x68],0x0
64002f76:	cmp    DWORD PTR [esp+0x54],0x10
64002f7b:	jb     0x64002f8a
64002f7d:	mov    edx,DWORD PTR [esp+0x40]
64002f81:	push   edx
64002f82:	call   0x64013656
64002f87:	add    esp,0x4
64002f8a:	mov    eax,DWORD PTR [ebp+0x10]
64002f8d:	movzx  ecx,BYTE PTR [eax]
64002f90:	cmp    ecx,0x100
64002f96:	jge    0x64002fb3
64002f98:	lea    edx,[esp+0x20]
64002f9c:	push   edx
64002f9d:	lea    eax,[esp+0x18]
64002fa1:	push   eax
64002fa2:	call   0x64003840
64002fa7:	mov    ecx,eax
64002fa9:	call   0x64003c60
64002fae:	mov    esi,DWORD PTR [eax]
64002fb0:	mov    edi,DWORD PTR [eax+0x4]
64002fb3:	call   0x64003840
64002fb8:	test   esi,esi
64002fba:	mov    ebx,DWORD PTR [eax+0x4]
64002fbd:	je     0x64002fc3
64002fbf:	cmp    esi,eax
64002fc1:	je     0x64002fc8
64002fc3:	call   0x64013e86
64002fc8:	cmp    edi,ebx
64002fca:	je     0x64002fef
64002fcc:	test   esi,esi
64002fce:	jne    0x64002fd5
64002fd0:	call   0x64013e86
64002fd5:	cmp    edi,DWORD PTR [esi+0x4]
64002fd8:	jne    0x64002fdf
64002fda:	call   0x64013e86
64002fdf:	cmp    DWORD PTR [edi+0x40],0x10
64002fe3:	jb     0x64002fea
64002fe5:	mov    edi,DWORD PTR [edi+0x2c]
64002fe8:	jmp    0x64002ff3
64002fea:	add    edi,0x2c
64002fed:	jmp    0x64002ff3
64002fef:	mov    edi,DWORD PTR [esp+0x1c]
64002ff3:	mov    eax,ds:0x64054548
64002ff8:	test   eax,eax
64002ffa:	jne    0x6400300a
64002ffc:	push   eax
64002ffd:	push   eax
64002ffe:	push   eax
64002fff:	call   DWORD PTR ds:0x6402c098
64003005:	mov    ds:0x64054548,eax
6400300a:	push   eax
6400300b:	call   DWORD PTR ds:0x6402c09c
64003011:	cmp    DWORD PTR [esp+0x38],0x10
64003016:	jb     0x64003025
64003018:	mov    ecx,DWORD PTR [esp+0x24]
6400301c:	push   ecx
6400301d:	call   0x64013656
64003022:	add    esp,0x4
64003025:	mov    eax,edi
64003027:	mov    ecx,DWORD PTR [esp+0x60]
6400302b:	mov    DWORD PTR fs:0x0,ecx
64003032:	pop    ecx
64003033:	pop    edi
64003034:	pop    esi
64003035:	pop    ebx
64003036:	mov    ecx,DWORD PTR [esp+0x48]
6400303a:	xor    ecx,esp
6400303c:	call   0x64013d18
64003041:	mov    esp,ebp
64003043:	pop    ebp
64003044:	ret    
64003045:	int3   
64003046:	int3   
64003047:	int3   
64003048:	int3   
64003049:	int3   
6400304a:	int3   
6400304b:	int3   
6400304c:	int3   
6400304d:	int3   
6400304e:	int3   
6400304f:	int3   
64003050:	push   ebp
64003051:	mov    ebp,esp
64003053:	and    esp,0xfffffff8
64003056:	push   0xffffffff
64003058:	push   0x640236e0
6400305d:	mov    eax,fs:0x0
64003063:	push   eax
64003064:	sub    esp,0x50
64003067:	mov    eax,ds:0x640521ac
6400306c:	xor    eax,esp
6400306e:	mov    DWORD PTR [esp+0x48],eax
64003072:	push   ebx
64003073:	push   esi
64003074:	push   edi
64003075:	mov    eax,ds:0x640521ac
6400307a:	xor    eax,esp
6400307c:	push   eax
6400307d:	lea    eax,[esp+0x60]
64003081:	mov    fs:0x0,eax
64003087:	mov    eax,ds:0x64054548
6400308c:	xor    ebx,ebx
6400308e:	cmp    eax,ebx
64003090:	mov    esi,ecx
64003092:	mov    DWORD PTR [esp+0x1c],esi
64003096:	jne    0x640030a6
64003098:	push   ebx
64003099:	push   ebx
6400309a:	push   ebx
6400309b:	call   DWORD PTR ds:0x6402c098
640030a1:	mov    ds:0x64054548,eax
640030a6:	push   0xffffffff
640030a8:	push   eax
640030a9:	call   DWORD PTR ds:0x6402c05c
640030af:	test   eax,eax
640030b1:	je     0x640030ba
640030b3:	mov    eax,esi
640030b5:	jmp    0x6400321b
640030ba:	mov    eax,DWORD PTR [ebp+0x8]
640030bd:	push   eax
640030be:	push   esi
640030bf:	lea    esi,[esp+0x28]
640030c3:	mov    DWORD PTR [esp+0x40],0x7
640030cb:	mov    DWORD PTR [esp+0x3c],ebx
640030cf:	mov    WORD PTR [esp+0x2c],bx
640030d4:	call   0x640047c0
640030d9:	mov    ecx,esi
640030db:	push   ecx
640030dc:	lea    edx,[esp+0x18]
640030e0:	push   edx
640030e1:	mov    DWORD PTR [esp+0x70],ebx
640030e5:	call   0x640039a0
640030ea:	mov    ebx,eax
640030ec:	call   0x64003e90
640030f1:	call   0x640039a0
640030f6:	mov    ebx,DWORD PTR [esp+0x14]
640030fa:	test   ebx,ebx
640030fc:	mov    esi,DWORD PTR [eax+0x4]
640030ff:	je     0x64003105
64003101:	cmp    ebx,eax
64003103:	je     0x6400310a
64003105:	call   0x64013e86
6400310a:	mov    edi,DWORD PTR [esp+0x18]
6400310e:	cmp    edi,esi
64003110:	jne    0x6400317f
64003112:	sub    esp,0x1c
64003115:	mov    ecx,esp
64003117:	xor    eax,eax
64003119:	mov    DWORD PTR [esp+0x30],esp
6400311d:	mov    DWORD PTR [ecx+0x14],eax
64003120:	push   0xffffffff
64003122:	mov    DWORD PTR [ecx+0x18],0x7
64003129:	mov    WORD PTR [ecx+0x4],ax
6400312d:	push   eax
6400312e:	lea    eax,[esp+0x44]
64003132:	call   0x64004710
64003137:	lea    esi,[esp+0x58]
6400313b:	call   0x64003a30
64003140:	add    esp,0x1c
64003143:	lea    eax,[esp+0x20]
64003147:	push   eax
64003148:	mov    BYTE PTR [esp+0x6c],0x1
6400314d:	call   0x640039a0
64003152:	mov    ecx,eax
64003154:	call   0x64003d40
64003159:	push   0xffffffff
6400315b:	mov    ecx,eax
6400315d:	push   0x0
6400315f:	mov    eax,esi
64003161:	call   0x64004710
64003166:	mov    BYTE PTR [esp+0x68],0x0
6400316b:	cmp    DWORD PTR [esp+0x54],0x8
64003170:	jb     0x6400317f
64003172:	mov    ecx,DWORD PTR [esp+0x40]
64003176:	push   ecx
64003177:	call   0x64013656
6400317c:	add    esp,0x4
6400317f:	mov    edx,DWORD PTR [ebp+0xc]
64003182:	movzx  eax,BYTE PTR [edx]
64003185:	cmp    eax,0x100
6400318a:	jge    0x640031a7
6400318c:	lea    ecx,[esp+0x20]
64003190:	push   ecx
64003191:	lea    edx,[esp+0x18]
64003195:	push   edx
64003196:	call   0x640039a0
6400319b:	mov    ebx,eax
6400319d:	call   0x64003e90
640031a2:	mov    ebx,DWORD PTR [eax]
640031a4:	mov    edi,DWORD PTR [eax+0x4]
640031a7:	call   0x640039a0
640031ac:	test   ebx,ebx
640031ae:	mov    esi,DWORD PTR [eax+0x4]
640031b1:	je     0x640031b7
640031b3:	cmp    ebx,eax
640031b5:	je     0x640031bc
640031b7:	call   0x64013e86
640031bc:	cmp    edi,esi
640031be:	je     0x640031e3
640031c0:	test   ebx,ebx
640031c2:	jne    0x640031c9
640031c4:	call   0x64013e86
640031c9:	cmp    edi,DWORD PTR [ebx+0x4]
640031cc:	jne    0x640031d3
640031ce:	call   0x64013e86
640031d3:	cmp    DWORD PTR [edi+0x40],0x8
640031d7:	jb     0x640031de
640031d9:	mov    edi,DWORD PTR [edi+0x2c]
640031dc:	jmp    0x640031e7
640031de:	add    edi,0x2c
640031e1:	jmp    0x640031e7
640031e3:	mov    edi,DWORD PTR [esp+0x1c]
640031e7:	mov    eax,ds:0x64054548
640031ec:	test   eax,eax
640031ee:	jne    0x640031fe
640031f0:	push   eax
640031f1:	push   eax
640031f2:	push   eax
640031f3:	call   DWORD PTR ds:0x6402c098
640031f9:	mov    ds:0x64054548,eax
640031fe:	push   eax
640031ff:	call   DWORD PTR ds:0x6402c09c
64003205:	cmp    DWORD PTR [esp+0x38],0x8
6400320a:	jb     0x64003219
6400320c:	mov    eax,DWORD PTR [esp+0x24]
64003210:	push   eax
64003211:	call   0x64013656
64003216:	add    esp,0x4
64003219:	mov    eax,edi
6400321b:	mov    ecx,DWORD PTR [esp+0x60]
6400321f:	mov    DWORD PTR fs:0x0,ecx
64003226:	pop    ecx
64003227:	pop    edi
64003228:	pop    esi
64003229:	pop    ebx
6400322a:	mov    ecx,DWORD PTR [esp+0x48]
6400322e:	xor    ecx,esp
64003230:	call   0x64013d18
64003235:	mov    esp,ebp
64003237:	pop    ebp
64003238:	ret    
64003239:	int3   
6400323a:	int3   
6400323b:	int3   
6400323c:	int3   
6400323d:	int3   
6400323e:	int3   
6400323f:	int3   
64003240:	push   ebx
64003241:	push   ebp
64003242:	mov    ebp,DWORD PTR [esp+0xc]
64003246:	push   edi
64003247:	mov    edi,DWORD PTR [esp+0x14]
6400324b:	cmp    DWORD PTR [ebp+0x14],edi
6400324e:	mov    ebx,eax
64003250:	jae    0x64003257
64003252:	call   0x64012f6b
64003257:	mov    eax,DWORD PTR [ebp+0x14]
6400325a:	sub    eax,edi
6400325c:	cmp    eax,ebx
6400325e:	jae    0x64003262
64003260:	mov    ebx,eax
64003262:	mov    eax,DWORD PTR [esi+0x14]
64003265:	or     ecx,0xffffffff
64003268:	sub    ecx,eax
6400326a:	cmp    ecx,ebx
6400326c:	jbe    0x64003275
6400326e:	lea    edx,[eax+ebx*1]
64003271:	cmp    edx,eax
64003273:	jae    0x6400327a
64003275:	call   0x64012f2c
6400327a:	test   ebx,ebx
6400327c:	jbe    0x64003326
64003282:	mov    edi,DWORD PTR [esi+0x14]
64003285:	add    edi,ebx
64003287:	cmp    edi,0xfffffffe
6400328a:	jbe    0x64003291
6400328c:	call   0x64012f2c
64003291:	mov    eax,DWORD PTR [esi+0x18]
64003294:	cmp    eax,edi
64003296:	jae    0x640032b3
64003298:	mov    eax,DWORD PTR [esi+0x14]
6400329b:	push   eax
6400329c:	push   edi
6400329d:	mov    ecx,esi
6400329f:	call   0x64004080
640032a4:	test   edi,edi
640032a6:	jbe    0x64003326
640032a8:	cmp    DWORD PTR [ebp+0x18],0x10
640032ac:	jb     0x640032db
640032ae:	mov    ebp,DWORD PTR [ebp+0x4]
640032b1:	jmp    0x640032de
640032b3:	test   edi,edi
640032b5:	jne    0x640032a6
640032b7:	cmp    eax,0x10
640032ba:	mov    DWORD PTR [esi+0x14],edi
640032bd:	jb     0x640032cd
640032bf:	mov    eax,DWORD PTR [esi+0x4]
640032c2:	pop    edi
640032c3:	pop    ebp
640032c4:	mov    BYTE PTR [eax],0x0
640032c7:	mov    eax,esi
640032c9:	pop    ebx
640032ca:	ret    0x8
640032cd:	pop    edi
640032ce:	lea    eax,[esi+0x4]
640032d1:	pop    ebp
640032d2:	mov    BYTE PTR [eax],0x0
640032d5:	mov    eax,esi
640032d7:	pop    ebx
640032d8:	ret    0x8
640032db:	add    ebp,0x4
640032de:	mov    eax,DWORD PTR [esi+0x18]
640032e1:	cmp    eax,0x10
640032e4:	jb     0x640032eb
640032e6:	mov    edx,DWORD PTR [esi+0x4]
640032e9:	jmp    0x640032ee
640032eb:	lea    edx,[esi+0x4]
640032ee:	mov    ecx,DWORD PTR [esi+0x14]
640032f1:	push   ebx
640032f2:	mov    ebx,DWORD PTR [esp+0x18]
640032f6:	add    ebp,ebx
640032f8:	sub    eax,ecx
640032fa:	push   ebp
640032fb:	push   eax
640032fc:	add    ecx,edx
640032fe:	push   ecx
640032ff:	call   0x640137ae
64003304:	add    esp,0x10
64003307:	cmp    DWORD PTR [esi+0x18],0x10
6400330b:	mov    DWORD PTR [esi+0x14],edi
6400330e:	jb     0x6400331f
64003310:	mov    eax,DWORD PTR [esi+0x4]
64003313:	mov    BYTE PTR [eax+edi*1],0x0
64003317:	pop    edi
64003318:	pop    ebp
64003319:	mov    eax,esi
6400331b:	pop    ebx
6400331c:	ret    0x8
6400331f:	lea    eax,[esi+0x4]
64003322:	mov    BYTE PTR [eax+edi*1],0x0
64003326:	pop    edi
64003327:	pop    ebp
64003328:	mov    eax,esi
6400332a:	pop    ebx
6400332b:	ret    0x8
6400332e:	int3   
6400332f:	int3   
64003330:	push   ebx
64003331:	mov    ebx,DWORD PTR [esp+0x8]
64003335:	push   ebp
64003336:	mov    ebp,DWORD PTR [esp+0x10]
6400333a:	cmp    DWORD PTR [ebx+0x14],ebp
6400333d:	push   esi
6400333e:	push   edi
6400333f:	mov    esi,ecx
64003341:	jae    0x64003348
64003343:	call   0x64012f6b
64003348:	mov    edi,DWORD PTR [ebx+0x14]
6400334b:	mov    eax,DWORD PTR [esp+0x1c]
6400334f:	sub    edi,ebp
64003351:	cmp    eax,edi
64003353:	jae    0x64003357
64003355:	mov    edi,eax
64003357:	cmp    esi,ebx
64003359:	jne    0x6400337a
6400335b:	push   0xffffffff
6400335d:	add    edi,ebp
6400335f:	push   edi
64003360:	mov    ecx,esi
64003362:	call   0x64003ff0
64003367:	push   ebp
64003368:	push   0x0
6400336a:	mov    ecx,esi
6400336c:	call   0x64003ff0
64003371:	pop    edi
64003372:	mov    eax,esi
64003374:	pop    esi
64003375:	pop    ebp
64003376:	pop    ebx
64003377:	ret    0xc
6400337a:	cmp    edi,0xfffffffe
6400337d:	jbe    0x64003384
6400337f:	call   0x64012f2c
64003384:	mov    eax,DWORD PTR [esi+0x18]
64003387:	cmp    eax,edi
64003389:	jae    0x640033a6
6400338b:	mov    eax,DWORD PTR [esi+0x14]
6400338e:	push   eax
6400338f:	push   edi
64003390:	mov    ecx,esi
64003392:	call   0x64004080
64003397:	test   edi,edi
64003399:	jbe    0x64003401
6400339b:	cmp    DWORD PTR [ebx+0x18],0x10
6400339f:	jb     0x640033d0
640033a1:	mov    edx,DWORD PTR [ebx+0x4]
640033a4:	jmp    0x640033d3
640033a6:	test   edi,edi
640033a8:	jne    0x64003399
640033aa:	cmp    eax,0x10
640033ad:	mov    DWORD PTR [esi+0x14],edi
640033b0:	jb     0x640033c1
640033b2:	mov    eax,DWORD PTR [esi+0x4]
640033b5:	pop    edi
640033b6:	mov    BYTE PTR [eax],0x0
640033b9:	mov    eax,esi
640033bb:	pop    esi
640033bc:	pop    ebp
640033bd:	pop    ebx
640033be:	ret    0xc
640033c1:	lea    eax,[esi+0x4]
640033c4:	pop    edi
640033c5:	mov    BYTE PTR [eax],0x0
640033c8:	mov    eax,esi
640033ca:	pop    esi
640033cb:	pop    ebp
640033cc:	pop    ebx
640033cd:	ret    0xc
640033d0:	lea    edx,[ebx+0x4]
640033d3:	mov    ecx,DWORD PTR [esi+0x18]
640033d6:	cmp    ecx,0x10
640033d9:	lea    ebx,[esi+0x4]
640033dc:	jb     0x640033e2
640033de:	mov    eax,DWORD PTR [ebx]
640033e0:	jmp    0x640033e4
640033e2:	mov    eax,ebx
640033e4:	push   edi
640033e5:	add    edx,ebp
640033e7:	push   edx
640033e8:	push   ecx
640033e9:	push   eax
640033ea:	call   0x640137ae
640033ef:	add    esp,0x10
640033f2:	cmp    DWORD PTR [esi+0x18],0x10
640033f6:	mov    DWORD PTR [esi+0x14],edi
640033f9:	jb     0x640033fd
640033fb:	mov    ebx,DWORD PTR [ebx]
640033fd:	mov    BYTE PTR [ebx+edi*1],0x0
64003401:	pop    edi
64003402:	mov    eax,esi
64003404:	pop    esi
64003405:	pop    ebp
64003406:	pop    ebx
64003407:	ret    0xc
6400340a:	int3   
6400340b:	int3   
6400340c:	int3   
6400340d:	int3   
6400340e:	int3   
6400340f:	int3   
64003410:	push   ebx
64003411:	push   ebp
64003412:	push   esi
64003413:	mov    esi,ecx
64003415:	mov    ecx,DWORD PTR [esi+0x18]
64003418:	cmp    ecx,0x10
6400341b:	lea    ebx,[esi+0x4]
6400341e:	jb     0x64003424
64003420:	mov    eax,DWORD PTR [ebx]
64003422:	jmp    0x64003426
64003424:	mov    eax,ebx
64003426:	mov    ebp,DWORD PTR [esp+0x10]
6400342a:	cmp    ebp,eax
6400342c:	jb     0x6400345f
6400342e:	cmp    ecx,0x10
64003431:	jb     0x64003437
64003433:	mov    eax,DWORD PTR [ebx]
64003435:	jmp    0x64003439
64003437:	mov    eax,ebx
64003439:	mov    edx,DWORD PTR [esi+0x14]
6400343c:	add    edx,eax
6400343e:	cmp    edx,ebp
64003440:	jbe    0x6400345f
64003442:	cmp    ecx,0x10
64003445:	jb     0x64003449
64003447:	mov    ebx,DWORD PTR [ebx]
64003449:	mov    eax,DWORD PTR [esp+0x14]
6400344d:	push   eax
6400344e:	sub    ebp,ebx
64003450:	push   ebp
64003451:	push   esi
64003452:	mov    ecx,esi
64003454:	call   0x64003330
64003459:	pop    esi
6400345a:	pop    ebp
6400345b:	pop    ebx
6400345c:	ret    0x8
6400345f:	push   edi
64003460:	mov    edi,DWORD PTR [esp+0x18]
64003464:	cmp    edi,0xfffffffe
64003467:	jbe    0x6400346e
64003469:	call   0x64012f2c
6400346e:	mov    eax,DWORD PTR [esi+0x18]
64003471:	cmp    eax,edi
64003473:	jae    0x64003491
64003475:	mov    ecx,DWORD PTR [esi+0x14]
64003478:	push   ecx
64003479:	push   edi
6400347a:	mov    ecx,esi
6400347c:	call   0x64004080
64003481:	test   edi,edi
64003483:	jbe    0x640034c8
64003485:	mov    ecx,DWORD PTR [esi+0x18]
64003488:	cmp    ecx,0x10
6400348b:	jb     0x640034ab
6400348d:	mov    eax,DWORD PTR [ebx]
6400348f:	jmp    0x640034ad
64003491:	test   edi,edi
64003493:	jne    0x64003483
64003495:	cmp    eax,0x10
64003498:	mov    DWORD PTR [esi+0x14],edi
6400349b:	jb     0x6400349f
6400349d:	mov    ebx,DWORD PTR [ebx]
6400349f:	pop    edi
640034a0:	mov    eax,esi
640034a2:	pop    esi
640034a3:	pop    ebp
640034a4:	mov    BYTE PTR [ebx],0x0
640034a7:	pop    ebx
640034a8:	ret    0x8
640034ab:	mov    eax,ebx
640034ad:	push   edi
640034ae:	push   ebp
640034af:	push   ecx
640034b0:	push   eax
640034b1:	call   0x640137ae
640034b6:	add    esp,0x10
640034b9:	cmp    DWORD PTR [esi+0x18],0x10
640034bd:	mov    DWORD PTR [esi+0x14],edi
640034c0:	jb     0x640034c4
640034c2:	mov    ebx,DWORD PTR [ebx]
640034c4:	mov    BYTE PTR [ebx+edi*1],0x0
640034c8:	pop    edi
640034c9:	mov    eax,esi
640034cb:	pop    esi
640034cc:	pop    ebp
640034cd:	pop    ebx
640034ce:	ret    0x8
640034d1:	int3   
640034d2:	int3   
640034d3:	int3   
640034d4:	int3   
640034d5:	int3   
640034d6:	int3   
640034d7:	int3   
640034d8:	int3   
640034d9:	int3   
640034da:	int3   
640034db:	int3   
640034dc:	int3   
640034dd:	int3   
640034de:	int3   
640034df:	int3   
640034e0:	push   ebx
640034e1:	push   ebp
640034e2:	mov    ebp,DWORD PTR [esp+0xc]
640034e6:	push   esi
640034e7:	push   edi
640034e8:	mov    edi,ecx
640034ea:	cmp    DWORD PTR [edi+0x14],ebp
640034ed:	jae    0x640034f4
640034ef:	call   0x64012f6b
640034f4:	mov    eax,DWORD PTR [edi+0x14]
640034f7:	mov    esi,DWORD PTR [esp+0x18]
640034fb:	sub    eax,ebp
640034fd:	cmp    eax,esi
640034ff:	jae    0x64003503
64003501:	mov    esi,eax
64003503:	mov    ebx,DWORD PTR [esp+0x20]
64003507:	cmp    esi,ebx
64003509:	mov    eax,esi
6400350b:	jb     0x6400350f
6400350d:	mov    eax,ebx
6400350f:	cmp    DWORD PTR [edi+0x18],0x10
64003513:	jb     0x6400351a
64003515:	mov    edi,DWORD PTR [edi+0x4]
64003518:	jmp    0x6400351d
6400351a:	add    edi,0x4
6400351d:	push   eax
6400351e:	mov    eax,DWORD PTR [esp+0x20]
64003522:	push   eax
64003523:	add    edi,ebp
64003525:	push   edi
64003526:	call   0x640012b0
6400352b:	add    esp,0xc
6400352e:	test   eax,eax
64003530:	jne    0x64003547
64003532:	cmp    esi,ebx
64003534:	jae    0x64003540
64003536:	pop    edi
64003537:	pop    esi
64003538:	pop    ebp
64003539:	or     eax,0xffffffff
6400353c:	pop    ebx
6400353d:	ret    0x10
64003540:	xor    eax,eax
64003542:	cmp    esi,ebx
64003544:	setne  al
64003547:	pop    edi
64003548:	pop    esi
64003549:	pop    ebp
6400354a:	pop    ebx
6400354b:	ret    0x10
6400354e:	int3   
6400354f:	int3   
64003550:	mov    ecx,DWORD PTR [esp+0x4]
64003554:	sub    esp,0xc
64003557:	test   ecx,ecx
64003559:	ja     0x6400356c
6400355b:	xor    ecx,ecx
6400355d:	push   ecx
6400355e:	call   0x640138e7
64003563:	add    esp,0x4
64003566:	add    esp,0xc
64003569:	ret    0x4
6400356c:	or     eax,0xffffffff
6400356f:	xor    edx,edx
64003571:	div    ecx
64003573:	cmp    eax,0x1
64003576:	jae    0x6400355d
64003578:	lea    eax,[esp+0x10]
6400357c:	push   eax
6400357d:	lea    ecx,[esp+0x4]
64003581:	mov    DWORD PTR [esp+0x14],0x0
64003589:	call   0x6401366c
6400358e:	push   0x640441cc
64003593:	lea    ecx,[esp+0x4]
64003597:	push   ecx
64003598:	mov    DWORD PTR [esp+0x8],0x6402c2ac
640035a0:	call   0x64013884
640035a5:	int3   
640035a6:	int3   
640035a7:	int3   
640035a8:	int3   
640035a9:	int3   
640035aa:	int3   
640035ab:	int3   
640035ac:	int3   
640035ad:	int3   
640035ae:	int3   
640035af:	int3   
640035b0:	push   ebx
640035b1:	mov    ebx,DWORD PTR [esp+0x8]
640035b5:	test   ebx,ebx
640035b7:	push   ebp
640035b8:	push   esi
640035b9:	push   edi
640035ba:	mov    edi,ecx
640035bc:	je     0x64003634
640035be:	call   DWORD PTR ds:0x64052184
640035c4:	mov    ebp,DWORD PTR ds:0x6402c02c
640035ca:	push   0x0
640035cc:	push   0x0
640035ce:	push   0xffffffff
640035d0:	push   ebx
640035d1:	push   0x0
640035d3:	push   eax
640035d4:	call   ebp
640035d6:	mov    esi,eax
640035d8:	sub    esi,0x1
640035db:	test   esi,esi
640035dd:	jle    0x64003634
640035df:	mov    eax,DWORD PTR [edi]
640035e1:	mov    edx,DWORD PTR [eax-0x8]
640035e4:	sub    eax,0x10
640035e7:	mov    ecx,0x1
640035ec:	sub    ecx,DWORD PTR [eax+0xc]
640035ef:	sub    edx,esi
640035f1:	or     ecx,edx
640035f3:	jge    0x640035fd
640035f5:	push   esi
640035f6:	mov    ecx,edi
640035f8:	call   0x64004380
640035fd:	mov    eax,DWORD PTR [edi]
640035ff:	push   esi
64003600:	push   eax
64003601:	push   0xffffffff
64003603:	push   ebx
64003604:	push   0x0
64003606:	call   DWORD PTR ds:0x64052184
6400360c:	push   eax
6400360d:	call   ebp
6400360f:	mov    eax,DWORD PTR [edi]
64003611:	cmp    esi,DWORD PTR [eax-0x8]
64003614:	jg     0x6400362a
64003616:	mov    DWORD PTR [eax-0xc],esi
64003619:	mov    eax,DWORD PTR [edi]
6400361b:	mov    WORD PTR [eax+esi*2],0x0
64003621:	mov    eax,edi
64003623:	pop    edi
64003624:	pop    esi
64003625:	pop    ebp
64003626:	pop    ebx
64003627:	ret    0x4
6400362a:	push   0x80070057
6400362f:	call   0x64001080
64003634:	mov    ecx,edi
64003636:	call   0x64004260
6400363b:	mov    eax,edi
6400363d:	pop    edi
6400363e:	pop    esi
6400363f:	pop    ebp
64003640:	pop    ebx
64003641:	ret    0x4
64003644:	int3   
64003645:	int3   
64003646:	int3   
64003647:	int3   
64003648:	int3   
64003649:	int3   
6400364a:	int3   
6400364b:	int3   
6400364c:	int3   
6400364d:	int3   
6400364e:	int3   
6400364f:	int3   
64003650:	mov    eax,DWORD PTR [ecx]
64003652:	sub    eax,0x10
64003655:	lea    ecx,[eax+0xc]
64003658:	or     edx,0xffffffff
6400365b:	lock xadd DWORD PTR [ecx],edx
6400365f:	dec    edx
64003660:	test   edx,edx
64003662:	jg     0x6400366e
64003664:	mov    ecx,DWORD PTR [eax]
64003666:	mov    edx,DWORD PTR [ecx]
64003668:	push   eax
64003669:	mov    eax,DWORD PTR [edx+0x4]
6400366c:	call   eax
6400366e:	ret    
6400366f:	int3   
64003670:	mov    ecx,DWORD PTR [esp+0xc]
64003674:	push   ebx
64003675:	push   ebp
64003676:	mov    ebp,DWORD PTR [esp+0xc]
6400367a:	mov    eax,DWORD PTR [ebp+0x0]
6400367d:	mov    ebx,DWORD PTR [eax-0xc]
64003680:	push   esi
64003681:	mov    esi,DWORD PTR [esp+0x14]
64003685:	sub    esi,eax
64003687:	mov    edx,0x1
6400368c:	sub    edx,DWORD PTR [eax-0x4]
6400368f:	mov    eax,DWORD PTR [eax-0x8]
64003692:	push   edi
64003693:	lea    edi,[ebx+ecx*1]
64003696:	sub    eax,edi
64003698:	sar    esi,1
6400369a:	or     edx,eax
6400369c:	jge    0x640036a6
6400369e:	push   edi
6400369f:	mov    ecx,ebp
640036a1:	call   0x64004380
640036a6:	cmp    esi,ebx
640036a8:	mov    ecx,DWORD PTR [ebp+0x0]
640036ab:	ja     0x640036b4
640036ad:	lea    edx,[ecx+esi*2]
640036b0:	mov    DWORD PTR [esp+0x18],edx
640036b4:	mov    eax,DWORD PTR [esp+0x1c]
640036b8:	mov    edx,DWORD PTR [esp+0x18]
640036bc:	add    eax,eax
640036be:	push   eax
640036bf:	push   edx
640036c0:	push   eax
640036c1:	lea    eax,[ecx+ebx*2]
640036c4:	push   eax
640036c5:	call   0x640137ae
640036ca:	add    esp,0x10
640036cd:	test   edi,edi
640036cf:	jl     0x640036ec
640036d1:	mov    eax,DWORD PTR [ebp+0x0]
640036d4:	cmp    edi,DWORD PTR [eax-0x8]
640036d7:	jg     0x640036ec
640036d9:	mov    DWORD PTR [eax-0xc],edi
640036dc:	mov    ecx,DWORD PTR [ebp+0x0]
640036df:	mov    WORD PTR [ecx+edi*2],0x0
640036e5:	pop    edi
640036e6:	pop    esi
640036e7:	pop    ebp
640036e8:	pop    ebx
640036e9:	ret    0xc
640036ec:	push   0x80070057
640036f1:	call   0x64001080
640036f6:	int3   
640036f7:	int3   
640036f8:	int3   
640036f9:	int3   
640036fa:	int3   
640036fb:	int3   
640036fc:	int3   
640036fd:	int3   
640036fe:	int3   
640036ff:	int3   
64003700:	mov    eax,DWORD PTR [esp+0x4]
64003704:	test   eax,eax
64003706:	jl     0x6400371d
64003708:	mov    edx,DWORD PTR [ecx]
6400370a:	cmp    eax,DWORD PTR [edx-0x8]
6400370d:	jg     0x6400371d
6400370f:	mov    DWORD PTR [edx-0xc],eax
64003712:	mov    ecx,DWORD PTR [ecx]
64003714:	mov    WORD PTR [ecx+eax*2],0x0
6400371a:	ret    0x4
6400371d:	push   0x80070057
64003722:	call   0x64001080
64003727:	int3   
64003728:	int3   
64003729:	int3   
6400372a:	int3   
6400372b:	int3   
6400372c:	int3   
6400372d:	int3   
6400372e:	int3   
6400372f:	int3   
64003730:	push   ebp
64003731:	mov    ebp,DWORD PTR [esp+0x8]
64003735:	push   esi
64003736:	mov    esi,eax
64003738:	mov    eax,DWORD PTR [esp+0x18]
6400373c:	push   edi
6400373d:	lea    edi,[esi+eax*1]
64003740:	mov    eax,DWORD PTR [ebp+0x0]
64003743:	mov    edx,DWORD PTR [eax-0x8]
64003746:	sub    eax,0x10
64003749:	mov    ecx,0x1
6400374e:	sub    ecx,DWORD PTR [eax+0xc]
64003751:	sub    edx,edi
64003753:	or     ecx,edx
64003755:	jge    0x6400375f
64003757:	push   edi
64003758:	mov    ecx,ebp
6400375a:	call   0x64004380
6400375f:	mov    eax,DWORD PTR [esp+0x14]
64003763:	push   ebx
64003764:	mov    ebx,DWORD PTR [ebp+0x0]
64003767:	add    esi,esi
64003769:	push   esi
6400376a:	push   eax
6400376b:	push   esi
6400376c:	push   ebx
6400376d:	call   0x640137ae
64003772:	mov    eax,DWORD PTR [esp+0x30]
64003776:	mov    ecx,DWORD PTR [esp+0x2c]
6400377a:	add    eax,eax
6400377c:	push   eax
6400377d:	push   ecx
6400377e:	push   eax
6400377f:	add    esi,ebx
64003781:	push   esi
64003782:	call   0x640137ae
64003787:	add    esp,0x20
6400378a:	test   edi,edi
6400378c:	pop    ebx
6400378d:	jl     0x640037a7
6400378f:	mov    eax,DWORD PTR [ebp+0x0]
64003792:	cmp    edi,DWORD PTR [eax-0x8]
64003795:	jg     0x640037a7
64003797:	mov    DWORD PTR [eax-0xc],edi
6400379a:	mov    edx,DWORD PTR [ebp+0x0]
6400379d:	mov    WORD PTR [edx+edi*2],0x0
640037a3:	pop    edi
640037a4:	pop    esi
640037a5:	pop    ebp
640037a6:	ret    
640037a7:	push   0x80070057
640037ac:	call   0x64001080
640037b1:	int3   
640037b2:	int3   
640037b3:	int3   
640037b4:	int3   
640037b5:	int3   
640037b6:	int3   
640037b7:	int3   
640037b8:	int3   
640037b9:	int3   
640037ba:	int3   
640037bb:	int3   
640037bc:	int3   
640037bd:	int3   
640037be:	int3   
640037bf:	int3   
640037c0:	push   ecx
640037c1:	push   ebx
640037c2:	push   ebp
640037c3:	push   esi
640037c4:	mov    esi,DWORD PTR [ecx]
640037c6:	mov    ebx,DWORD PTR [esi-0xc]
640037c9:	sub    esi,0x10
640037cc:	mov    DWORD PTR [esp+0xc],ecx
640037d0:	mov    ecx,DWORD PTR [esi]
640037d2:	mov    eax,DWORD PTR [ecx]
640037d4:	mov    edx,DWORD PTR [eax+0x10]
640037d7:	push   edi
640037d8:	call   edx
640037da:	mov    edx,DWORD PTR [eax]
640037dc:	mov    ebp,DWORD PTR [esp+0x18]
640037e0:	push   0x2
640037e2:	mov    ecx,eax
640037e4:	mov    eax,DWORD PTR [edx]
640037e6:	push   ebp
640037e7:	call   eax
640037e9:	mov    edi,eax
640037eb:	test   edi,edi
640037ed:	jne    0x640037f4
640037ef:	call   0x64004370
640037f4:	cmp    ebx,ebp
640037f6:	jge    0x640037fa
640037f8:	mov    ebp,ebx
640037fa:	lea    eax,[ebp+ebp*1+0x2]
640037fe:	push   eax
640037ff:	lea    ecx,[esi+0x10]
64003802:	push   ecx
64003803:	push   eax
64003804:	lea    ebp,[edi+0x10]
64003807:	push   ebp
64003808:	call   0x640137ae
6400380d:	add    esp,0x10
64003810:	mov    DWORD PTR [edi+0x4],ebx
64003813:	lea    edx,[esi+0xc]
64003816:	or     eax,0xffffffff
64003819:	lock xadd DWORD PTR [edx],eax
6400381d:	dec    eax
6400381e:	test   eax,eax
64003820:	jg     0x6400382c
64003822:	mov    ecx,DWORD PTR [esi]
64003824:	mov    edx,DWORD PTR [ecx]
64003826:	mov    eax,DWORD PTR [edx+0x4]
64003829:	push   esi
6400382a:	call   eax
6400382c:	mov    ecx,DWORD PTR [esp+0x10]
64003830:	pop    edi
64003831:	pop    esi
64003832:	mov    DWORD PTR [ecx],ebp
64003834:	pop    ebp
64003835:	pop    ebx
64003836:	pop    ecx
64003837:	ret    0x4
6400383a:	int3   
6400383b:	int3   
6400383c:	int3   
6400383d:	int3   
6400383e:	int3   
6400383f:	int3   
64003840:	push   0xffffffff
64003842:	push   0x640236ae
64003847:	mov    eax,fs:0x0
6400384d:	push   eax
6400384e:	mov    eax,ds:0x640521ac
64003853:	xor    eax,esp
64003855:	push   eax
64003856:	lea    eax,[esp+0x4]
6400385a:	mov    fs:0x0,eax
64003860:	test   BYTE PTR ds:0x6405450c,0x1
64003867:	jne    0x640038b9
64003869:	or     DWORD PTR ds:0x6405450c,0x1
64003870:	mov    ecx,0x640544f0
64003875:	mov    DWORD PTR [esp+0xc],0x0
6400387d:	call   0x640064a0
64003882:	mov    ds:0x640544f4,eax
64003887:	mov    BYTE PTR [eax+0x45],0x1
6400388b:	mov    eax,ds:0x640544f4
64003890:	mov    DWORD PTR [eax+0x4],eax
64003893:	mov    eax,ds:0x640544f4
64003898:	mov    DWORD PTR [eax],eax
6400389a:	mov    eax,ds:0x640544f4
6400389f:	mov    DWORD PTR [eax+0x8],eax
640038a2:	push   0x6402be40
640038a7:	mov    DWORD PTR ds:0x640544f8,0x0
640038b1:	call   0x64013fba
640038b6:	add    esp,0x4
640038b9:	mov    eax,0x640544f0
640038be:	mov    ecx,DWORD PTR [esp+0x4]
640038c2:	mov    DWORD PTR fs:0x0,ecx
640038c9:	pop    ecx
640038ca:	add    esp,0xc
640038cd:	ret    
640038ce:	int3   
640038cf:	int3   
640038d0:	push   0xffffffff
640038d2:	push   0x640232b8
640038d7:	mov    eax,fs:0x0
640038dd:	push   eax
640038de:	push   ecx
640038df:	push   ebx
640038e0:	push   ebp
640038e1:	push   esi
640038e2:	push   edi
640038e3:	mov    eax,ds:0x640521ac
640038e8:	xor    eax,esp
640038ea:	push   eax
640038eb:	lea    eax,[esp+0x18]
640038ef:	mov    fs:0x0,eax
640038f5:	mov    esi,DWORD PTR [esp+0x28]
640038f9:	xor    eax,eax
640038fb:	mov    DWORD PTR [esp+0x14],eax
640038ff:	mov    DWORD PTR [esp+0x20],eax
64003903:	push   0xffffffff
64003905:	mov    DWORD PTR [esi+0x14],eax
64003908:	mov    DWORD PTR [esi+0x18],0xf
6400390f:	lea    ebp,[esi+0x4]
64003912:	push   eax
64003913:	mov    BYTE PTR [ebp+0x0],al
64003916:	lea    eax,[esp+0x34]
6400391a:	push   eax
6400391b:	mov    ecx,esi
6400391d:	call   0x64003330
64003922:	mov    eax,DWORD PTR [esi+0x14]
64003925:	mov    edi,0x1
6400392a:	cmp    eax,edi
6400392c:	jbe    0x6400396d
6400392e:	cmp    edi,eax
64003930:	jbe    0x64003937
64003932:	call   0x64013e86
64003937:	cmp    DWORD PTR [esi+0x18],0x10
6400393b:	jb     0x64003942
6400393d:	mov    ebx,DWORD PTR [ebp+0x0]
64003940:	jmp    0x64003944
64003942:	mov    ebx,ebp
64003944:	lea    ecx,[edi-0x1]
64003947:	cmp    ecx,DWORD PTR [esi+0x14]
6400394a:	jbe    0x64003951
6400394c:	call   0x64013e86
64003951:	cmp    DWORD PTR [esi+0x18],0x10
64003955:	jb     0x6400395c
64003957:	mov    eax,DWORD PTR [ebp+0x0]
6400395a:	jmp    0x6400395e
6400395c:	mov    eax,ebp
6400395e:	mov    dl,BYTE PTR [eax+edi*1-0x1]
64003962:	xor    BYTE PTR [ebx+edi*1],dl
64003965:	add    edi,0x1
64003968:	cmp    edi,DWORD PTR [esi+0x14]
6400396b:	jb     0x64003937
6400396d:	cmp    DWORD PTR [esp+0x44],0x10
64003972:	jb     0x64003981
64003974:	mov    eax,DWORD PTR [esp+0x30]
64003978:	push   eax
64003979:	call   0x64013656
6400397e:	add    esp,0x4
64003981:	mov    eax,esi
64003983:	mov    ecx,DWORD PTR [esp+0x18]
64003987:	mov    DWORD PTR fs:0x0,ecx
6400398e:	pop    ecx
6400398f:	pop    edi
64003990:	pop    esi
64003991:	pop    ebp
64003992:	pop    ebx
64003993:	add    esp,0x10
64003996:	ret    
64003997:	int3   
64003998:	int3   
64003999:	int3   
6400399a:	int3   
6400399b:	int3   
6400399c:	int3   
6400399d:	int3   
6400399e:	int3   
6400399f:	int3   
640039a0:	push   0xffffffff
640039a2:	push   0x6402367e
640039a7:	mov    eax,fs:0x0
640039ad:	push   eax
640039ae:	mov    eax,ds:0x640521ac
640039b3:	xor    eax,esp
640039b5:	push   eax
640039b6:	lea    eax,[esp+0x4]
640039ba:	mov    fs:0x0,eax
640039c0:	test   BYTE PTR ds:0x64054508,0x1
640039c7:	jne    0x64003a14
640039c9:	or     DWORD PTR ds:0x64054508,0x1
640039d0:	mov    DWORD PTR [esp+0xc],0x0
640039d8:	call   0x640064a0
640039dd:	mov    ds:0x64054500,eax
640039e2:	mov    BYTE PTR [eax+0x45],0x1
640039e6:	mov    eax,ds:0x64054500
640039eb:	mov    DWORD PTR [eax+0x4],eax
640039ee:	mov    eax,ds:0x64054500
640039f3:	mov    DWORD PTR [eax],eax
640039f5:	mov    eax,ds:0x64054500
640039fa:	mov    DWORD PTR [eax+0x8],eax
640039fd:	push   0x6402bdf0
64003a02:	mov    DWORD PTR ds:0x64054504,0x0
64003a0c:	call   0x64013fba
64003a11:	add    esp,0x4
64003a14:	mov    eax,0x640544fc
64003a19:	mov    ecx,DWORD PTR [esp+0x4]
64003a1d:	mov    DWORD PTR fs:0x0,ecx
64003a24:	pop    ecx
64003a25:	add    esp,0xc
64003a28:	ret    
64003a29:	int3   
64003a2a:	int3   
64003a2b:	int3   
64003a2c:	int3   
64003a2d:	int3   
64003a2e:	int3   
64003a2f:	int3   
64003a30:	push   0xffffffff
64003a32:	push   0x64023078
64003a37:	mov    eax,fs:0x0
64003a3d:	push   eax
64003a3e:	push   ecx
64003a3f:	push   ebx
64003a40:	push   ebp
64003a41:	push   edi
64003a42:	mov    eax,ds:0x640521ac
64003a47:	xor    eax,esp
64003a49:	push   eax
64003a4a:	lea    eax,[esp+0x14]
64003a4e:	mov    fs:0x0,eax
64003a54:	xor    eax,eax
64003a56:	mov    DWORD PTR [esp+0x10],eax
64003a5a:	mov    DWORD PTR [esp+0x1c],eax
64003a5e:	mov    DWORD PTR [esi+0x14],eax
64003a61:	push   0xffffffff
64003a63:	mov    DWORD PTR [esi+0x18],0x7
64003a6a:	lea    ebp,[esi+0x4]
64003a6d:	mov    WORD PTR [ebp+0x0],ax
64003a71:	push   eax
64003a72:	lea    eax,[esp+0x2c]
64003a76:	mov    ecx,esi
64003a78:	call   0x64004710
64003a7d:	mov    eax,DWORD PTR [esi+0x14]
64003a80:	mov    edi,0x1
64003a85:	cmp    eax,edi
64003a87:	jbe    0x64003aca
64003a89:	cmp    edi,eax
64003a8b:	jbe    0x64003a92
64003a8d:	call   0x64013e86
64003a92:	cmp    DWORD PTR [esi+0x18],0x8
64003a96:	jb     0x64003a9d
64003a98:	mov    ebx,DWORD PTR [ebp+0x0]
64003a9b:	jmp    0x64003a9f
64003a9d:	mov    ebx,ebp
64003a9f:	lea    eax,[edi-0x1]
64003aa2:	cmp    eax,DWORD PTR [esi+0x14]
64003aa5:	jbe    0x64003aac
64003aa7:	call   0x64013e86
64003aac:	cmp    DWORD PTR [esi+0x18],0x8
64003ab0:	jb     0x64003ab7
64003ab2:	mov    eax,DWORD PTR [ebp+0x0]
64003ab5:	jmp    0x64003ab9
64003ab7:	mov    eax,ebp
64003ab9:	mov    cx,WORD PTR [eax+edi*2-0x2]
64003abe:	xor    WORD PTR [ebx+edi*2],cx
64003ac2:	add    edi,0x1
64003ac5:	cmp    edi,DWORD PTR [esi+0x14]
64003ac8:	jb     0x64003a92
64003aca:	cmp    DWORD PTR [esp+0x3c],0x8
64003acf:	jb     0x64003ade
64003ad1:	mov    edx,DWORD PTR [esp+0x28]
64003ad5:	push   edx
64003ad6:	call   0x64013656
64003adb:	add    esp,0x4
64003ade:	mov    eax,esi
64003ae0:	mov    ecx,DWORD PTR [esp+0x14]
64003ae4:	mov    DWORD PTR fs:0x0,ecx
64003aeb:	pop    ecx
64003aec:	pop    edi
64003aed:	pop    ebp
64003aee:	pop    ebx
64003aef:	add    esp,0x10
64003af2:	ret    
64003af3:	int3   
64003af4:	int3   
64003af5:	int3   
64003af6:	int3   
64003af7:	int3   
64003af8:	int3   
64003af9:	int3   
64003afa:	int3   
64003afb:	int3   
64003afc:	int3   
64003afd:	int3   
64003afe:	int3   
64003aff:	int3   
64003b00:	push   ebp
64003b01:	mov    ebp,esp
64003b03:	and    esp,0xfffffff8
64003b06:	push   0xffffffff
64003b08:	push   0x64023650
64003b0d:	mov    eax,fs:0x0
64003b13:	push   eax
64003b14:	sub    esp,0x60
64003b17:	push   ebx
64003b18:	push   esi
64003b19:	push   edi
64003b1a:	mov    eax,ds:0x640521ac
64003b1f:	xor    eax,esp
64003b21:	push   eax
64003b22:	lea    eax,[esp+0x70]
64003b26:	mov    fs:0x0,eax
64003b2c:	mov    edi,ecx
64003b2e:	mov    ebx,DWORD PTR [ebp+0x8]
64003b31:	push   ebx
64003b32:	call   0x64005020
64003b37:	test   edi,edi
64003b39:	mov    esi,eax
64003b3b:	jne    0x64003b42
64003b3d:	call   0x64013e86
64003b42:	mov    eax,DWORD PTR [edi+0x4]
64003b45:	cmp    esi,eax
64003b47:	je     0x64003b71
64003b49:	cmp    DWORD PTR [esi+0x24],0x10
64003b4d:	mov    ecx,DWORD PTR [esi+0x20]
64003b50:	jb     0x64003b57
64003b52:	mov    eax,DWORD PTR [esi+0x10]
64003b55:	jmp    0x64003b5a
64003b57:	lea    eax,[esi+0x10]
64003b5a:	push   ecx
64003b5b:	push   eax
64003b5c:	mov    eax,DWORD PTR [ebx+0x14]
64003b5f:	push   eax
64003b60:	push   0x0
64003b62:	mov    ecx,ebx
64003b64:	call   0x640034e0
64003b69:	test   eax,eax
64003b6b:	jge    0x64003c25
64003b71:	xor    eax,eax
64003b73:	mov    DWORD PTR [esp+0x30],0xf
64003b7b:	mov    DWORD PTR [esp+0x2c],eax
64003b7f:	mov    BYTE PTR [esp+0x1c],al
64003b83:	lea    ecx,[esp+0x18]
64003b87:	push   ecx
64003b88:	push   ebx
64003b89:	lea    ecx,[esp+0x3c]
64003b8d:	mov    DWORD PTR [esp+0x80],eax
64003b94:	call   0x64004690
64003b99:	push   eax
64003b9a:	push   esi
64003b9b:	push   edi
64003b9c:	lea    edx,[esp+0x1c]
64003ba0:	push   edx
64003ba1:	mov    ecx,edi
64003ba3:	mov    BYTE PTR [esp+0x88],0x1
64003bab:	call   0x64004440
64003bb0:	cmp    DWORD PTR [esp+0x68],0x10
64003bb5:	mov    edi,DWORD PTR [eax]
64003bb7:	mov    esi,DWORD PTR [eax+0x4]
64003bba:	jb     0x64003bc9
64003bbc:	mov    eax,DWORD PTR [esp+0x54]
64003bc0:	push   eax
64003bc1:	call   0x64013656
64003bc6:	add    esp,0x4
64003bc9:	xor    ebx,ebx
64003bcb:	cmp    DWORD PTR [esp+0x4c],0x10
64003bd0:	mov    DWORD PTR [esp+0x68],0xf
64003bd8:	mov    DWORD PTR [esp+0x64],ebx
64003bdc:	mov    BYTE PTR [esp+0x54],bl
64003be0:	jb     0x64003bef
64003be2:	mov    ecx,DWORD PTR [esp+0x38]
64003be6:	push   ecx
64003be7:	call   0x64013656
64003bec:	add    esp,0x4
64003bef:	cmp    DWORD PTR [esp+0x30],0x10
64003bf4:	mov    DWORD PTR [esp+0x4c],0xf
64003bfc:	mov    DWORD PTR [esp+0x48],ebx
64003c00:	mov    BYTE PTR [esp+0x38],bl
64003c04:	jb     0x64003c13
64003c06:	mov    edx,DWORD PTR [esp+0x1c]
64003c0a:	push   edx
64003c0b:	call   0x64013656
64003c10:	add    esp,0x4
64003c13:	mov    DWORD PTR [esp+0x30],0xf
64003c1b:	mov    DWORD PTR [esp+0x2c],ebx
64003c1f:	mov    BYTE PTR [esp+0x1c],bl
64003c23:	jmp    0x64003c27
64003c25:	xor    ebx,ebx
64003c27:	cmp    edi,ebx
64003c29:	jne    0x64003c30
64003c2b:	call   0x64013e86
64003c30:	cmp    esi,DWORD PTR [edi+0x4]
64003c33:	jne    0x64003c3a
64003c35:	call   0x64013e86
64003c3a:	lea    eax,[esi+0x28]
64003c3d:	mov    ecx,DWORD PTR [esp+0x70]
64003c41:	mov    DWORD PTR fs:0x0,ecx
64003c48:	pop    ecx
64003c49:	pop    edi
64003c4a:	pop    esi
64003c4b:	pop    ebx
64003c4c:	mov    esp,ebp
64003c4e:	pop    ebp
64003c4f:	ret    0x4
64003c52:	int3   
64003c53:	int3   
64003c54:	int3   
64003c55:	int3   
64003c56:	int3   
64003c57:	int3   
64003c58:	int3   
64003c59:	int3   
64003c5a:	int3   
64003c5b:	int3   
64003c5c:	int3   
64003c5d:	int3   
64003c5e:	int3   
64003c5f:	int3   
64003c60:	sub    esp,0x18
64003c63:	push   ebx
64003c64:	mov    ebx,DWORD PTR [esp+0x24]
64003c68:	push   esi
64003c69:	push   edi
64003c6a:	push   ebx
64003c6b:	mov    esi,ecx
64003c6d:	call   0x64005020
64003c72:	test   esi,esi
64003c74:	mov    edi,eax
64003c76:	mov    DWORD PTR [esp+0x14],edi
64003c7a:	jne    0x64003c81
64003c7c:	call   0x64013e86
64003c81:	cmp    edi,DWORD PTR [esi+0x4]
64003c84:	mov    DWORD PTR [esp+0x10],esi
64003c88:	je     0x64003cb4
64003c8a:	cmp    DWORD PTR [edi+0x24],0x10
64003c8e:	mov    eax,DWORD PTR [edi+0x20]
64003c91:	jb     0x64003c98
64003c93:	mov    edi,DWORD PTR [edi+0x10]
64003c96:	jmp    0x64003c9b
64003c98:	add    edi,0x10
64003c9b:	push   eax
64003c9c:	mov    eax,DWORD PTR [ebx+0x14]
64003c9f:	push   edi
64003ca0:	push   eax
64003ca1:	push   0x0
64003ca3:	mov    ecx,ebx
64003ca5:	call   0x640034e0
64003caa:	test   eax,eax
64003cac:	jl     0x64003cb4
64003cae:	lea    ecx,[esp+0x10]
64003cb2:	jmp    0x64003cc3
64003cb4:	mov    ecx,DWORD PTR [esi+0x4]
64003cb7:	mov    DWORD PTR [esp+0x1c],ecx
64003cbb:	mov    DWORD PTR [esp+0x18],esi
64003cbf:	lea    ecx,[esp+0x18]
64003cc3:	mov    edx,DWORD PTR [ecx]
64003cc5:	mov    eax,DWORD PTR [esp+0x28]
64003cc9:	mov    ecx,DWORD PTR [ecx+0x4]
64003ccc:	pop    edi
64003ccd:	pop    esi
64003cce:	mov    DWORD PTR [eax],edx
64003cd0:	mov    DWORD PTR [eax+0x4],ecx
64003cd3:	pop    ebx
64003cd4:	add    esp,0x18
64003cd7:	ret    0x8
64003cda:	int3   
64003cdb:	int3   
64003cdc:	int3   
64003cdd:	int3   
64003cde:	int3   
64003cdf:	int3   
64003ce0:	push   esi
64003ce1:	mov    esi,ecx
64003ce3:	mov    eax,DWORD PTR [esi]
64003ce5:	test   eax,eax
64003ce7:	push   edi
64003ce8:	mov    edi,DWORD PTR [esp+0xc]
64003cec:	je     0x64003cf2
64003cee:	cmp    eax,DWORD PTR [edi]
64003cf0:	je     0x64003cf7
64003cf2:	call   0x64013e86
64003cf7:	mov    eax,DWORD PTR [esi+0x4]
64003cfa:	xor    ecx,ecx
64003cfc:	cmp    eax,DWORD PTR [edi+0x4]
64003cff:	pop    edi
64003d00:	sete   cl
64003d03:	mov    al,cl
64003d05:	pop    esi
64003d06:	ret    0x4
64003d09:	int3   
64003d0a:	int3   
64003d0b:	int3   
64003d0c:	int3   
64003d0d:	int3   
64003d0e:	int3   
64003d0f:	int3   
64003d10:	cmp    DWORD PTR [esi+0x18],0x8
64003d14:	jb     0x64003d22
64003d16:	mov    eax,DWORD PTR [esi+0x4]
64003d19:	push   eax
64003d1a:	call   0x64013656
64003d1f:	add    esp,0x4
64003d22:	xor    eax,eax
64003d24:	mov    DWORD PTR [esi+0x18],0x7
64003d2b:	mov    DWORD PTR [esi+0x14],eax
64003d2e:	mov    WORD PTR [esi+0x4],ax
64003d32:	ret    
64003d33:	int3   
64003d34:	int3   
64003d35:	int3   
64003d36:	int3   
64003d37:	int3   
64003d38:	int3   
64003d39:	int3   
64003d3a:	int3   
64003d3b:	int3   
64003d3c:	int3   
64003d3d:	int3   
64003d3e:	int3   
64003d3f:	int3   
64003d40:	push   0xffffffff
64003d42:	push   0x64023620
64003d47:	mov    eax,fs:0x0
64003d4d:	push   eax
64003d4e:	sub    esp,0x60
64003d51:	push   ebx
64003d52:	push   ebp
64003d53:	push   esi
64003d54:	push   edi
64003d55:	mov    eax,ds:0x640521ac
64003d5a:	xor    eax,esp
64003d5c:	push   eax
64003d5d:	lea    eax,[esp+0x74]
64003d61:	mov    fs:0x0,eax
64003d67:	mov    ebx,ecx
64003d69:	mov    ecx,DWORD PTR [esp+0x84]
64003d70:	mov    eax,ebx
64003d72:	call   0x640055c0
64003d77:	xor    ebp,ebp
64003d79:	cmp    ebx,ebp
64003d7b:	mov    esi,eax
64003d7d:	jne    0x64003d84
64003d7f:	call   0x64013e86
64003d84:	mov    eax,DWORD PTR [ebx+0x4]
64003d87:	cmp    esi,eax
64003d89:	je     0x64003db4
64003d8b:	cmp    DWORD PTR [esi+0x24],0x8
64003d8f:	mov    edi,DWORD PTR [esi+0x20]
64003d92:	jb     0x64003d99
64003d94:	mov    eax,DWORD PTR [esi+0x10]
64003d97:	jmp    0x64003d9c
64003d99:	lea    eax,[esi+0x10]
64003d9c:	mov    ecx,DWORD PTR [esp+0x84]
64003da3:	push   eax
64003da4:	mov    eax,DWORD PTR [ecx+0x14]
64003da7:	call   0x64006930
64003dac:	test   eax,eax
64003dae:	jge    0x64003e61
64003db4:	mov    edi,0x7
64003db9:	mov    DWORD PTR [esp+0x34],edi
64003dbd:	mov    DWORD PTR [esp+0x30],ebp
64003dc1:	mov    WORD PTR [esp+0x20],bp
64003dc6:	mov    ecx,DWORD PTR [esp+0x84]
64003dcd:	lea    eax,[esp+0x1c]
64003dd1:	push   eax
64003dd2:	push   ecx
64003dd3:	lea    edx,[esp+0x40]
64003dd7:	push   edx
64003dd8:	mov    DWORD PTR [esp+0x88],ebp
64003ddf:	call   0x64004ab0
64003de4:	push   esi
64003de5:	push   ebx
64003de6:	push   eax
64003de7:	lea    eax,[esp+0x20]
64003deb:	push   eax
64003dec:	mov    BYTE PTR [esp+0x8c],0x1
64003df4:	call   0x64004860
64003df9:	cmp    DWORD PTR [esp+0x6c],0x8
64003dfe:	mov    ebx,DWORD PTR [eax]
64003e00:	mov    esi,DWORD PTR [eax+0x4]
64003e03:	jb     0x64003e12
64003e05:	mov    ecx,DWORD PTR [esp+0x58]
64003e09:	push   ecx
64003e0a:	call   0x64013656
64003e0f:	add    esp,0x4
64003e12:	cmp    DWORD PTR [esp+0x50],0x8
64003e17:	mov    DWORD PTR [esp+0x6c],edi
64003e1b:	mov    DWORD PTR [esp+0x68],ebp
64003e1f:	mov    WORD PTR [esp+0x58],bp
64003e24:	jb     0x64003e33
64003e26:	mov    edx,DWORD PTR [esp+0x3c]
64003e2a:	push   edx
64003e2b:	call   0x64013656
64003e30:	add    esp,0x4
64003e33:	cmp    DWORD PTR [esp+0x34],0x8
64003e38:	mov    DWORD PTR [esp+0x50],edi
64003e3c:	mov    DWORD PTR [esp+0x4c],ebp
64003e40:	mov    WORD PTR [esp+0x3c],bp
64003e45:	jb     0x64003e54
64003e47:	mov    eax,DWORD PTR [esp+0x20]
64003e4b:	push   eax
64003e4c:	call   0x64013656
64003e51:	add    esp,0x4
64003e54:	mov    DWORD PTR [esp+0x34],edi
64003e58:	mov    DWORD PTR [esp+0x30],ebp
64003e5c:	mov    WORD PTR [esp+0x20],bp
64003e61:	cmp    ebx,ebp
64003e63:	jne    0x64003e6a
64003e65:	call   0x64013e86
64003e6a:	cmp    esi,DWORD PTR [ebx+0x4]
64003e6d:	jne    0x64003e74
64003e6f:	call   0x64013e86
64003e74:	lea    eax,[esi+0x28]
64003e77:	mov    ecx,DWORD PTR [esp+0x74]
64003e7b:	mov    DWORD PTR fs:0x0,ecx
64003e82:	pop    ecx
64003e83:	pop    edi
64003e84:	pop    esi
64003e85:	pop    ebp
64003e86:	pop    ebx
64003e87:	add    esp,0x6c
64003e8a:	ret    0x4
64003e8d:	int3   
64003e8e:	int3   
64003e8f:	int3   
64003e90:	sub    esp,0x18
64003e93:	push   ebp
64003e94:	mov    ebp,DWORD PTR [esp+0x24]
64003e98:	push   esi
64003e99:	push   edi
64003e9a:	mov    ecx,ebp
64003e9c:	mov    eax,ebx
64003e9e:	call   0x640055c0
64003ea3:	test   ebx,ebx
64003ea5:	mov    esi,eax
64003ea7:	mov    DWORD PTR [esp+0x14],esi
64003eab:	jne    0x64003eb2
64003ead:	call   0x64013e86
64003eb2:	cmp    esi,DWORD PTR [ebx+0x4]
64003eb5:	mov    DWORD PTR [esp+0x10],ebx
64003eb9:	je     0x64003ee1
64003ebb:	cmp    DWORD PTR [esi+0x24],0x8
64003ebf:	mov    edi,DWORD PTR [esi+0x20]
64003ec2:	jb     0x64003ec9
64003ec4:	mov    esi,DWORD PTR [esi+0x10]
64003ec7:	jmp    0x64003ecc
64003ec9:	add    esi,0x10
64003ecc:	mov    eax,DWORD PTR [ebp+0x14]
64003ecf:	push   esi
64003ed0:	mov    ecx,ebp
64003ed2:	call   0x64006930
64003ed7:	test   eax,eax
64003ed9:	jl     0x64003ee1
64003edb:	lea    eax,[esp+0x10]
64003edf:	jmp    0x64003ef0
64003ee1:	mov    eax,DWORD PTR [ebx+0x4]
64003ee4:	mov    DWORD PTR [esp+0x1c],eax
64003ee8:	mov    DWORD PTR [esp+0x18],ebx
64003eec:	lea    eax,[esp+0x18]
64003ef0:	mov    edx,DWORD PTR [eax]
64003ef2:	mov    ecx,DWORD PTR [esp+0x28]
64003ef6:	mov    eax,DWORD PTR [eax+0x4]
64003ef9:	pop    edi
64003efa:	pop    esi
64003efb:	mov    DWORD PTR [ecx+0x4],eax
64003efe:	mov    DWORD PTR [ecx],edx
64003f00:	mov    eax,ecx
64003f02:	pop    ebp
64003f03:	add    esp,0x18
64003f06:	ret    0x8
64003f09:	int3   
64003f0a:	int3   
64003f0b:	int3   
64003f0c:	int3   
64003f0d:	int3   
64003f0e:	int3   
64003f0f:	int3   
64003f10:	mov    eax,DWORD PTR [edi]
64003f12:	test   eax,eax
64003f14:	je     0x64003f1a
64003f16:	cmp    eax,DWORD PTR [esi]
64003f18:	je     0x64003f1f
64003f1a:	call   0x64013e86
64003f1f:	mov    eax,DWORD PTR [edi+0x4]
64003f22:	xor    ecx,ecx
64003f24:	cmp    eax,DWORD PTR [esi+0x4]
64003f27:	sete   cl
64003f2a:	mov    al,cl
64003f2c:	ret    
64003f2d:	int3   
64003f2e:	int3   
64003f2f:	int3   
64003f30:	mov    eax,DWORD PTR [esp+0x4]
64003f34:	push   esi
64003f35:	push   eax
64003f36:	mov    esi,ecx
64003f38:	call   0x64001620
64003f3d:	mov    DWORD PTR [esi],0x6402c2e8
64003f43:	mov    eax,esi
64003f45:	pop    esi
64003f46:	ret    0x4
64003f49:	int3   
64003f4a:	int3   
64003f4b:	int3   
64003f4c:	int3   
64003f4d:	int3   
64003f4e:	int3   
64003f4f:	int3   
64003f50:	push   ebx
64003f51:	push   esi
64003f52:	mov    esi,ecx
64003f54:	cmp    DWORD PTR [esi+0x34],0x10
64003f58:	jb     0x64003f66
64003f5a:	mov    eax,DWORD PTR [esi+0x20]
64003f5d:	push   eax
64003f5e:	call   0x64013656
64003f63:	add    esp,0x4
64003f66:	xor    ebx,ebx
64003f68:	mov    DWORD PTR [esi+0x34],0xf
64003f6f:	mov    DWORD PTR [esi+0x30],ebx
64003f72:	mov    BYTE PTR [esi+0x20],bl
64003f75:	cmp    DWORD PTR [esi+0x18],0x10
64003f79:	jb     0x64003f87
64003f7b:	mov    ecx,DWORD PTR [esi+0x4]
64003f7e:	push   ecx
64003f7f:	call   0x64013656
64003f84:	add    esp,0x4
64003f87:	mov    DWORD PTR [esi+0x14],ebx
64003f8a:	mov    DWORD PTR [esi+0x18],0xf
64003f91:	mov    BYTE PTR [esi+0x4],bl
64003f94:	pop    esi
64003f95:	pop    ebx
64003f96:	ret    
64003f97:	int3   
64003f98:	int3   
64003f99:	int3   
64003f9a:	int3   
64003f9b:	int3   
64003f9c:	int3   
64003f9d:	int3   
64003f9e:	int3   
64003f9f:	int3   
64003fa0:	cmp    DWORD PTR [esi+0x34],0x8
64003fa4:	jb     0x64003fb2
64003fa6:	mov    eax,DWORD PTR [esi+0x20]
64003fa9:	push   eax
64003faa:	call   0x64013656
64003faf:	add    esp,0x4
64003fb2:	push   edi
64003fb3:	xor    edi,edi
64003fb5:	mov    DWORD PTR [esi+0x34],0x7
64003fbc:	mov    DWORD PTR [esi+0x30],edi
64003fbf:	mov    WORD PTR [esi+0x20],di
64003fc3:	cmp    DWORD PTR [esi+0x18],0x8
64003fc7:	jb     0x64003fd5
64003fc9:	mov    ecx,DWORD PTR [esi+0x4]
64003fcc:	push   ecx
64003fcd:	call   0x64013656
64003fd2:	add    esp,0x4
64003fd5:	mov    DWORD PTR [esi+0x14],edi
64003fd8:	mov    DWORD PTR [esi+0x18],0x7
64003fdf:	mov    WORD PTR [esi+0x4],di
64003fe3:	pop    edi
64003fe4:	ret    
64003fe5:	int3   
64003fe6:	int3   
64003fe7:	int3   
64003fe8:	int3   
64003fe9:	int3   
64003fea:	int3   
64003feb:	int3   
64003fec:	int3   
64003fed:	int3   
64003fee:	int3   
64003fef:	int3   
64003ff0:	push   ebx
64003ff1:	mov    ebx,DWORD PTR [esp+0x8]
64003ff5:	push   esi
64003ff6:	mov    esi,ecx
64003ff8:	cmp    DWORD PTR [esi+0x14],ebx
64003ffb:	push   edi
64003ffc:	jae    0x64004003
64003ffe:	call   0x64012f6b
64004003:	mov    eax,DWORD PTR [esi+0x14]
64004006:	mov    edi,DWORD PTR [esp+0x14]
6400400a:	sub    eax,ebx
6400400c:	cmp    eax,edi
6400400e:	jae    0x64004012
64004010:	mov    edi,eax
64004012:	test   edi,edi
64004014:	jbe    0x6400406b
64004016:	mov    ecx,DWORD PTR [esi+0x18]
64004019:	cmp    ecx,0x10
6400401c:	push   ebp
6400401d:	lea    ebp,[esi+0x4]
64004020:	jb     0x6400402b
64004022:	mov    edx,DWORD PTR [ebp+0x0]
64004025:	mov    DWORD PTR [esp+0x14],edx
64004029:	jmp    0x6400402f
6400402b:	mov    DWORD PTR [esp+0x14],ebp
6400402f:	cmp    ecx,0x10
64004032:	jb     0x64004039
64004034:	mov    edx,DWORD PTR [ebp+0x0]
64004037:	jmp    0x6400403b
64004039:	mov    edx,ebp
6400403b:	sub    eax,edi
6400403d:	push   eax
6400403e:	mov    eax,DWORD PTR [esp+0x18]
64004042:	add    eax,ebx
64004044:	add    eax,edi
64004046:	push   eax
64004047:	sub    ecx,ebx
64004049:	push   ecx
6400404a:	add    edx,ebx
6400404c:	push   edx
6400404d:	call   0x64013829
64004052:	mov    eax,DWORD PTR [esi+0x14]
64004055:	sub    eax,edi
64004057:	add    esp,0x10
6400405a:	cmp    DWORD PTR [esi+0x18],0x10
6400405e:	mov    DWORD PTR [esi+0x14],eax
64004061:	jb     0x64004066
64004063:	mov    ebp,DWORD PTR [ebp+0x0]
64004066:	mov    BYTE PTR [eax+ebp*1],0x0
6400406a:	pop    ebp
6400406b:	pop    edi
6400406c:	mov    eax,esi
6400406e:	pop    esi
6400406f:	pop    ebx
64004070:	ret    0x8
64004073:	int3   
64004074:	int3   
64004075:	int3   
64004076:	int3   
64004077:	int3   
64004078:	int3   
64004079:	int3   
6400407a:	int3   
6400407b:	int3   
6400407c:	int3   
6400407d:	int3   
6400407e:	int3   
6400407f:	int3   
64004080:	push   ebp
64004081:	mov    ebp,esp
64004083:	push   0xffffffff
64004085:	push   0x64023050
6400408a:	mov    eax,fs:0x0
64004090:	push   eax
64004091:	sub    esp,0x1c
64004094:	push   ebx
64004095:	push   esi
64004096:	push   edi
64004097:	mov    eax,ds:0x640521ac
6400409c:	xor    eax,ebp
6400409e:	push   eax
6400409f:	lea    eax,[ebp-0xc]
640040a2:	mov    fs:0x0,eax
640040a8:	mov    DWORD PTR [ebp-0x10],esp
640040ab:	mov    edi,ecx
640040ad:	mov    DWORD PTR [ebp-0x14],edi
640040b0:	mov    eax,DWORD PTR [ebp+0x8]
640040b3:	mov    esi,eax
640040b5:	or     esi,0xf
640040b8:	cmp    esi,0xfffffffe
640040bb:	jbe    0x640040c1
640040bd:	mov    esi,eax
640040bf:	jmp    0x640040e3
640040c1:	mov    ebx,DWORD PTR [edi+0x18]
640040c4:	mov    eax,0xaaaaaaab
640040c9:	mul    esi
640040cb:	mov    ecx,ebx
640040cd:	shr    ecx,1
640040cf:	shr    edx,1
640040d1:	cmp    edx,ecx
640040d3:	jae    0x640040e3
640040d5:	mov    eax,0xfffffffe
640040da:	sub    eax,ecx
640040dc:	cmp    ebx,eax
640040de:	ja     0x640040e3
640040e0:	lea    esi,[ecx+ebx*1]
640040e3:	xor    ebx,ebx
640040e5:	lea    ecx,[esi+0x1]
640040e8:	cmp    ecx,ebx
640040ea:	mov    DWORD PTR [ebp-0x4],ebx
640040ed:	ja     0x640040ff
640040ef:	xor    ecx,ecx
640040f1:	push   ecx
640040f2:	call   0x640138e7
640040f7:	add    esp,0x4
640040fa:	mov    DWORD PTR [ebp+0x8],eax
640040fd:	jmp    0x64004157
640040ff:	or     eax,0xffffffff
64004102:	xor    edx,edx
64004104:	div    ecx
64004106:	cmp    eax,0x1
64004109:	jae    0x640040f1
6400410b:	lea    ecx,[ebp-0x18]
6400410e:	push   ecx
6400410f:	lea    ecx,[ebp-0x28]
64004112:	mov    DWORD PTR [ebp-0x18],ebx
64004115:	call   0x6401366c
6400411a:	push   0x640441cc
6400411f:	lea    edx,[ebp-0x28]
64004122:	push   edx
64004123:	mov    DWORD PTR [ebp-0x28],0x6402c2ac
6400412a:	call   0x64013884
6400412f:	mov    eax,DWORD PTR [ebp+0x8]
64004132:	mov    ecx,DWORD PTR [ebp-0x14]
64004135:	mov    DWORD PTR [ebp-0x1c],eax
64004138:	add    eax,0x1
6400413b:	mov    DWORD PTR [ebp-0x10],esp
6400413e:	push   eax
6400413f:	mov    BYTE PTR [ebp-0x4],0x2
64004143:	call   0x64003550
64004148:	mov    DWORD PTR [ebp+0x8],eax
6400414b:	mov    eax,0x64004151
64004150:	ret    
64004151:	mov    edi,DWORD PTR [ebp-0x14]
64004154:	mov    esi,DWORD PTR [ebp-0x1c]
64004157:	mov    ebx,DWORD PTR [ebp+0xc]
6400415a:	test   ebx,ebx
6400415c:	jbe    0x6400417e
6400415e:	cmp    DWORD PTR [edi+0x18],0x10
64004162:	jb     0x64004169
64004164:	mov    eax,DWORD PTR [edi+0x4]
64004167:	jmp    0x6400416c
64004169:	lea    eax,[edi+0x4]
6400416c:	mov    ecx,DWORD PTR [ebp+0x8]
6400416f:	push   ebx
64004170:	push   eax
64004171:	lea    eax,[esi+0x1]
64004174:	push   eax
64004175:	push   ecx
64004176:	call   0x640137ae
6400417b:	add    esp,0x10
6400417e:	cmp    DWORD PTR [edi+0x18],0x10
64004182:	jb     0x64004190
64004184:	mov    edx,DWORD PTR [edi+0x4]
64004187:	push   edx
64004188:	call   0x64013656
6400418d:	add    esp,0x4
64004190:	cmp    esi,0x10
64004193:	mov    ecx,DWORD PTR [ebp+0x8]
64004196:	lea    eax,[edi+0x4]
64004199:	mov    BYTE PTR [eax],0x0
6400419c:	mov    DWORD PTR [eax],ecx
6400419e:	mov    DWORD PTR [edi+0x18],esi
640041a1:	mov    DWORD PTR [edi+0x14],ebx
640041a4:	jb     0x640041a8
640041a6:	mov    eax,ecx
640041a8:	mov    BYTE PTR [eax+ebx*1],0x0
640041ac:	mov    ecx,DWORD PTR [ebp-0xc]
640041af:	mov    DWORD PTR fs:0x0,ecx
640041b6:	pop    ecx
640041b7:	pop    edi
640041b8:	pop    esi
640041b9:	pop    ebx
640041ba:	mov    esp,ebp
640041bc:	pop    ebp
640041bd:	ret    0x8
640041c0:	mov    esi,DWORD PTR [ebp-0x14]
640041c3:	cmp    DWORD PTR [esi+0x18],0x10
640041c7:	jb     0x640041d5
640041c9:	mov    eax,DWORD PTR [esi+0x4]
640041cc:	push   eax
640041cd:	call   0x64013656
640041d2:	add    esp,0x4
640041d5:	push   0x0
640041d7:	mov    DWORD PTR [esi+0x18],0xf
640041de:	mov    DWORD PTR [esi+0x14],0x0
640041e5:	push   0x0
640041e7:	mov    BYTE PTR [esi+0x4],0x0
640041eb:	call   0x64013884
640041f0:	int3   
640041f1:	int3   
640041f2:	int3   
640041f3:	int3   
640041f4:	int3   
640041f5:	int3   
640041f6:	int3   
640041f7:	int3   
640041f8:	int3   
640041f9:	int3   
640041fa:	int3   
640041fb:	int3   
640041fc:	int3   
640041fd:	int3   
640041fe:	int3   
640041ff:	int3   
64004200:	test   ecx,ecx
64004202:	jne    0x6400420e
64004204:	push   0x80004005
64004209:	call   0x64001080
6400420e:	test   ebx,ebx
64004210:	jne    0x64004220
64004212:	test   esi,esi
64004214:	je     0x64004220
64004216:	push   0x80070057
6400421b:	call   0x64001080
64004220:	mov    eax,DWORD PTR [ecx]
64004222:	mov    edx,DWORD PTR [eax]
64004224:	push   0x2
64004226:	push   esi
64004227:	call   edx
64004229:	test   eax,eax
6400422b:	jne    0x64004232
6400422d:	jmp    0x64004370
64004232:	add    eax,0x10
64004235:	test   esi,esi
64004237:	mov    DWORD PTR [edi],eax
64004239:	jl     0x64004216
6400423b:	cmp    esi,DWORD PTR [eax-0x8]
6400423e:	jg     0x64004216
64004240:	mov    DWORD PTR [eax-0xc],esi
64004243:	mov    ecx,DWORD PTR [edi]
64004245:	lea    eax,[esi+esi*1]
64004248:	push   eax
64004249:	push   ebx
6400424a:	mov    WORD PTR [eax+ecx*1],0x0
64004250:	mov    edx,DWORD PTR [edi]
64004252:	push   eax
64004253:	push   edx
64004254:	call   0x640137ae
64004259:	add    esp,0x10
6400425c:	mov    eax,edi
6400425e:	ret    
6400425f:	int3   
64004260:	push   esi
64004261:	mov    esi,ecx
64004263:	mov    ecx,DWORD PTR [esi]
64004265:	cmp    DWORD PTR [ecx-0xc],0x0
64004269:	lea    eax,[ecx-0x10]
6400426c:	push   edi
6400426d:	mov    edi,DWORD PTR [eax]
6400426f:	je     0x640042bf
64004271:	cmp    DWORD PTR [eax+0xc],0x0
64004275:	lea    edx,[eax+0xc]
64004278:	jge    0x6400429b
6400427a:	cmp    DWORD PTR [ecx-0x8],0x0
6400427e:	jge    0x6400428a
64004280:	push   0x80070057
64004285:	call   0x64001080
6400428a:	mov    DWORD PTR [ecx-0xc],0x0
64004291:	mov    eax,DWORD PTR [esi]
64004293:	pop    edi
64004294:	mov    WORD PTR [eax],0x0
64004299:	pop    esi
6400429a:	ret    
6400429b:	or     ecx,0xffffffff
6400429e:	lock xadd DWORD PTR [edx],ecx
640042a2:	dec    ecx
640042a3:	test   ecx,ecx
640042a5:	jg     0x640042b1
640042a7:	mov    ecx,DWORD PTR [eax]
640042a9:	mov    edx,DWORD PTR [ecx]
640042ab:	push   eax
640042ac:	mov    eax,DWORD PTR [edx+0x4]
640042af:	call   eax
640042b1:	mov    edx,DWORD PTR [edi]
640042b3:	mov    eax,DWORD PTR [edx+0xc]
640042b6:	mov    ecx,edi
640042b8:	call   eax
640042ba:	add    eax,0x10
640042bd:	mov    DWORD PTR [esi],eax
640042bf:	pop    edi
640042c0:	pop    esi
640042c1:	ret    
640042c2:	int3   
640042c3:	int3   
640042c4:	int3   
640042c5:	int3   
640042c6:	int3   
640042c7:	int3   
640042c8:	int3   
640042c9:	int3   
640042ca:	int3   
640042cb:	int3   
640042cc:	int3   
640042cd:	int3   
640042ce:	int3   
640042cf:	int3   
640042d0:	test   edi,edi
640042d2:	push   ebp
640042d3:	mov    ebp,DWORD PTR [esp+0x8]
640042d7:	jne    0x640042e4
640042d9:	mov    ecx,ebp
640042db:	call   0x64004260
640042e0:	pop    ebp
640042e1:	ret    0x8
640042e4:	push   esi
640042e5:	mov    esi,DWORD PTR [esp+0x10]
640042e9:	test   esi,esi
640042eb:	jne    0x640042f7
640042ed:	push   0x80070057
640042f2:	call   0x64001080
640042f7:	mov    eax,DWORD PTR [ebp+0x0]
640042fa:	mov    edx,DWORD PTR [eax-0x8]
640042fd:	mov    ecx,0x1
64004302:	sub    ecx,DWORD PTR [eax-0x4]
64004305:	sub    esi,eax
64004307:	sub    edx,edi
64004309:	sar    esi,1
6400430b:	or     ecx,edx
6400430d:	push   ebx
6400430e:	mov    ebx,DWORD PTR [eax-0xc]
64004311:	jge    0x6400431b
64004313:	push   edi
64004314:	mov    ecx,ebp
64004316:	call   0x64004380
6400431b:	mov    eax,DWORD PTR [ebp+0x0]
6400431e:	cmp    esi,ebx
64004320:	lea    ebx,[edi+edi*1]
64004323:	push   ebx
64004324:	ja     0x64004333
64004326:	lea    ecx,[eax+esi*2]
64004329:	push   ecx
6400432a:	push   ebx
6400432b:	push   eax
6400432c:	call   0x64013829
64004331:	jmp    0x6400433f
64004333:	mov    edx,DWORD PTR [esp+0x18]
64004337:	push   edx
64004338:	push   ebx
64004339:	push   eax
6400433a:	call   0x640137ae
6400433f:	add    esp,0x10
64004342:	test   edi,edi
64004344:	jl     0x64004360
64004346:	mov    eax,DWORD PTR [ebp+0x0]
64004349:	cmp    edi,DWORD PTR [eax-0x8]
6400434c:	jg     0x64004360
6400434e:	mov    DWORD PTR [eax-0xc],edi
64004351:	mov    eax,DWORD PTR [ebp+0x0]
64004354:	mov    WORD PTR [ebx+eax*1],0x0
6400435a:	pop    ebx
6400435b:	pop    esi
6400435c:	pop    ebp
6400435d:	ret    0x8
64004360:	push   0x80070057
64004365:	call   0x64001080
6400436a:	int3   
6400436b:	int3   
6400436c:	int3   
6400436d:	int3   
6400436e:	int3   
6400436f:	int3   
64004370:	push   0x8007000e
64004375:	call   0x64001080
6400437a:	int3   
6400437b:	int3   
6400437c:	int3   
6400437d:	int3   
6400437e:	int3   
6400437f:	int3   
64004380:	mov    eax,DWORD PTR [ecx]
64004382:	mov    edx,DWORD PTR [esp+0x4]
64004386:	sub    eax,0x10
64004389:	push   esi
6400438a:	mov    esi,DWORD PTR [eax+0x4]
6400438d:	cmp    esi,edx
6400438f:	jle    0x64004393
64004391:	mov    edx,esi
64004393:	cmp    DWORD PTR [eax+0xc],0x1
64004397:	pop    esi
64004398:	jle    0x640043a3
6400439a:	mov    DWORD PTR [esp+0x4],edx
6400439e:	jmp    0x640037c0
640043a3:	mov    eax,DWORD PTR [eax+0x8]
640043a6:	cmp    eax,edx
640043a8:	jge    0x640043c9
640043aa:	cmp    eax,0x400
640043af:	jle    0x640043b8
640043b1:	add    eax,0x400
640043b6:	jmp    0x640043ba
640043b8:	add    eax,eax
640043ba:	cmp    eax,edx
640043bc:	jge    0x640043c0
640043be:	mov    eax,edx
640043c0:	mov    DWORD PTR [esp+0x4],eax
640043c4:	jmp    0x64004c00
640043c9:	ret    0x4
640043cc:	int3   
640043cd:	int3   
640043ce:	int3   
640043cf:	int3   
640043d0:	push   esi
640043d1:	mov    esi,eax
640043d3:	mov    ecx,DWORD PTR [esi]
640043d5:	mov    eax,DWORD PTR [ecx]
640043d7:	mov    edx,DWORD PTR [eax+0x10]
640043da:	push   edi
640043db:	call   edx
640043dd:	cmp    DWORD PTR [esi+0xc],0x0
640043e1:	lea    ecx,[esi+0xc]
640043e4:	jl     0x640043fa
640043e6:	cmp    eax,DWORD PTR [esi]
640043e8:	jne    0x640043fa
640043ea:	mov    edi,esi
640043ec:	mov    eax,0x1
640043f1:	lock xadd DWORD PTR [ecx],eax
640043f5:	mov    eax,edi
640043f7:	pop    edi
640043f8:	pop    esi
640043f9:	ret    
640043fa:	mov    ecx,DWORD PTR [esi+0x4]
640043fd:	mov    edx,DWORD PTR [eax]
640043ff:	mov    edx,DWORD PTR [edx]
64004401:	push   0x2
64004403:	push   ecx
64004404:	mov    ecx,eax
64004406:	call   edx
64004408:	mov    edi,eax
6400440a:	test   edi,edi
6400440c:	jne    0x64004413
6400440e:	jmp    0x64004370
64004413:	mov    eax,DWORD PTR [esi+0x4]
64004416:	mov    DWORD PTR [edi+0x4],eax
64004419:	mov    eax,DWORD PTR [esi+0x4]
6400441c:	lea    eax,[eax+eax*1+0x2]
64004420:	push   eax
64004421:	add    esi,0x10
64004424:	push   esi
64004425:	push   eax
64004426:	lea    ecx,[edi+0x10]
64004429:	push   ecx
6400442a:	call   0x640137ae
6400442f:	add    esp,0x10
64004432:	mov    eax,edi
64004434:	pop    edi
64004435:	pop    esi
64004436:	ret    
64004437:	int3   
64004438:	int3   
64004439:	int3   
6400443a:	int3   
6400443b:	int3   
6400443c:	int3   
6400443d:	int3   
6400443e:	int3   
6400443f:	int3   
64004440:	push   ebp
64004441:	mov    ebp,esp
64004443:	and    esp,0xfffffff8
64004446:	sub    esp,0x14
64004449:	push   ebx
6400444a:	push   esi
6400444b:	mov    esi,ecx
6400444d:	cmp    DWORD PTR [esi+0x8],0x0
64004451:	push   edi
64004452:	jne    0x64004474
64004454:	mov    eax,DWORD PTR [ebp+0x14]
64004457:	mov    ecx,DWORD PTR [esi+0x4]
6400445a:	mov    edi,DWORD PTR [ebp+0x8]
6400445d:	push   eax
6400445e:	push   ecx
6400445f:	push   0x1
64004461:	push   edi
64004462:	mov    ecx,esi
64004464:	call   0x64004dd0
64004469:	mov    eax,edi
6400446b:	pop    edi
6400446c:	pop    esi
6400446d:	pop    ebx
6400446e:	mov    esp,ebp
64004470:	pop    ebp
64004471:	ret    0x10
64004474:	mov    edx,DWORD PTR [esi+0x4]
64004477:	mov    edi,DWORD PTR [ebp+0xc]
6400447a:	test   edi,edi
6400447c:	mov    eax,DWORD PTR [edx]
6400447e:	mov    DWORD PTR [esp+0x18],eax
64004482:	je     0x64004488
64004484:	cmp    edi,esi
64004486:	je     0x6400448d
64004488:	call   0x64013e86
6400448d:	mov    ebx,DWORD PTR [ebp+0x10]
64004490:	cmp    ebx,DWORD PTR [esp+0x18]
64004494:	jne    0x640044c7
64004496:	mov    edi,DWORD PTR [ebp+0x14]
64004499:	lea    ecx,[ebx+0xc]
6400449c:	push   ecx
6400449d:	push   edi
6400449e:	mov    ecx,esi
640044a0:	call   0x64004650
640044a5:	test   al,al
640044a7:	je     0x64004623
640044ad:	push   edi
640044ae:	mov    edi,DWORD PTR [ebp+0x8]
640044b1:	push   ebx
640044b2:	push   0x1
640044b4:	push   edi
640044b5:	mov    ecx,esi
640044b7:	call   0x64004dd0
640044bc:	mov    eax,edi
640044be:	pop    edi
640044bf:	pop    esi
640044c0:	pop    ebx
640044c1:	mov    esp,ebp
640044c3:	pop    ebp
640044c4:	ret    0x10
640044c7:	test   edi,edi
640044c9:	mov    edx,DWORD PTR [esi+0x4]
640044cc:	mov    DWORD PTR [esp+0x18],edx
640044d0:	je     0x640044d6
640044d2:	cmp    edi,esi
640044d4:	je     0x640044db
640044d6:	call   0x64013e86
640044db:	cmp    ebx,DWORD PTR [esp+0x18]
640044df:	mov    edi,DWORD PTR [ebp+0x14]
640044e2:	mov    ecx,esi
640044e4:	jne    0x6400451e
640044e6:	mov    eax,DWORD PTR [esi+0x4]
640044e9:	mov    eax,DWORD PTR [eax+0x8]
640044ec:	add    eax,0xc
640044ef:	push   edi
640044f0:	push   eax
640044f1:	call   0x64004650
640044f6:	test   al,al
640044f8:	je     0x64004623
640044fe:	mov    ecx,DWORD PTR [esi+0x4]
64004501:	mov    edx,DWORD PTR [ecx+0x8]
64004504:	push   edi
64004505:	mov    edi,DWORD PTR [ebp+0x8]
64004508:	push   edx
64004509:	push   0x0
6400450b:	push   edi
6400450c:	mov    ecx,esi
6400450e:	call   0x64004dd0
64004513:	mov    eax,edi
64004515:	pop    edi
64004516:	pop    esi
64004517:	pop    ebx
64004518:	mov    esp,ebp
6400451a:	pop    ebp
6400451b:	ret    0x10
6400451e:	lea    eax,[ebx+0xc]
64004521:	push   eax
64004522:	push   edi
64004523:	call   0x64004650
64004528:	test   al,al
6400452a:	je     0x6400458f
6400452c:	mov    eax,DWORD PTR [ebp+0xc]
6400452f:	lea    ecx,[esp+0xc]
64004533:	mov    DWORD PTR [esp+0xc],eax
64004537:	mov    DWORD PTR [esp+0x10],ebx
6400453b:	call   0x64006010
64004540:	mov    ecx,DWORD PTR [esp+0x10]
64004544:	add    ecx,0xc
64004547:	push   edi
64004548:	push   ecx
64004549:	mov    ecx,esi
6400454b:	call   0x64004650
64004550:	test   al,al
64004552:	je     0x6400458f
64004554:	mov    eax,DWORD PTR [esp+0x10]
64004558:	mov    edx,DWORD PTR [eax+0x8]
6400455b:	cmp    BYTE PTR [edx+0x45],0x0
6400455f:	push   edi
64004560:	mov    edi,DWORD PTR [ebp+0x8]
64004563:	mov    ecx,esi
64004565:	je     0x6400457b
64004567:	push   eax
64004568:	push   0x0
6400456a:	push   edi
6400456b:	call   0x64004dd0
64004570:	mov    eax,edi
64004572:	pop    edi
64004573:	pop    esi
64004574:	pop    ebx
64004575:	mov    esp,ebp
64004577:	pop    ebp
64004578:	ret    0x10
6400457b:	push   ebx
6400457c:	push   0x1
6400457e:	push   edi
6400457f:	call   0x64004dd0
64004584:	mov    eax,edi
64004586:	pop    edi
64004587:	pop    esi
64004588:	pop    ebx
64004589:	mov    esp,ebp
6400458b:	pop    ebp
6400458c:	ret    0x10
6400458f:	push   edi
64004590:	lea    eax,[ebx+0xc]
64004593:	push   eax
64004594:	mov    ecx,esi
64004596:	call   0x64004650
6400459b:	test   al,al
6400459d:	je     0x64004623
640045a3:	mov    ecx,DWORD PTR [esi+0x4]
640045a6:	mov    eax,DWORD PTR [ebp+0xc]
640045a9:	mov    DWORD PTR [esp+0x18],ecx
640045ad:	lea    ecx,[esp+0xc]
640045b1:	mov    DWORD PTR [esp+0xc],eax
640045b5:	mov    DWORD PTR [esp+0x10],ebx
640045b9:	mov    DWORD PTR [esp+0x14],esi
640045bd:	call   0x640060a0
640045c2:	lea    edx,[esp+0x14]
640045c6:	push   edx
640045c7:	lea    ecx,[esp+0x10]
640045cb:	call   0x64003ce0
640045d0:	test   al,al
640045d2:	jne    0x640045e8
640045d4:	mov    eax,DWORD PTR [esp+0x10]
640045d8:	add    eax,0xc
640045db:	push   eax
640045dc:	push   edi
640045dd:	mov    ecx,esi
640045df:	call   0x64004650
640045e4:	test   al,al
640045e6:	je     0x64004623
640045e8:	mov    ecx,DWORD PTR [ebx+0x8]
640045eb:	cmp    BYTE PTR [ecx+0x45],0x0
640045ef:	push   edi
640045f0:	mov    edi,DWORD PTR [ebp+0x8]
640045f3:	mov    ecx,esi
640045f5:	je     0x6400460b
640045f7:	push   ebx
640045f8:	push   0x0
640045fa:	push   edi
640045fb:	call   0x64004dd0
64004600:	mov    eax,edi
64004602:	pop    edi
64004603:	pop    esi
64004604:	pop    ebx
64004605:	mov    esp,ebp
64004607:	pop    ebp
64004608:	ret    0x10
6400460b:	mov    edx,DWORD PTR [esp+0x14]
6400460f:	push   edx
64004610:	push   0x1
64004612:	push   edi
64004613:	call   0x64004dd0
64004618:	mov    eax,edi
6400461a:	pop    edi
6400461b:	pop    esi
6400461c:	pop    ebx
6400461d:	mov    esp,ebp
6400461f:	pop    ebp
64004620:	ret    0x10
64004623:	push   edi
64004624:	lea    eax,[esp+0x18]
64004628:	push   eax
64004629:	mov    ecx,esi
6400462b:	call   0x64004c40
64004630:	mov    edx,DWORD PTR [eax]
64004632:	mov    ecx,DWORD PTR [ebp+0x8]
64004635:	pop    edi
64004636:	mov    DWORD PTR [ecx],edx
64004638:	mov    eax,DWORD PTR [eax+0x4]
6400463b:	pop    esi
6400463c:	mov    DWORD PTR [ecx+0x4],eax
6400463f:	mov    eax,ecx
64004641:	pop    ebx
64004642:	mov    esp,ebp
64004644:	pop    ebp
64004645:	ret    0x10
64004648:	int3   
64004649:	int3   
6400464a:	int3   
6400464b:	int3   
6400464c:	int3   
6400464d:	int3   
6400464e:	int3   
6400464f:	int3   
64004650:	mov    eax,DWORD PTR [esp+0x8]
64004654:	cmp    DWORD PTR [eax+0x18],0x10
64004658:	mov    ecx,DWORD PTR [eax+0x14]
6400465b:	jb     0x64004662
6400465d:	mov    eax,DWORD PTR [eax+0x4]
64004660:	jmp    0x64004665
64004662:	add    eax,0x4
64004665:	push   ecx
64004666:	mov    ecx,DWORD PTR [esp+0x8]
6400466a:	push   eax
6400466b:	mov    eax,DWORD PTR [ecx+0x14]
6400466e:	push   eax
6400466f:	push   0x0
64004671:	call   0x640034e0
64004676:	xor    ecx,ecx
64004678:	test   eax,eax
6400467a:	setl   cl
6400467d:	mov    al,cl
6400467f:	ret    0x8
64004682:	int3   
64004683:	int3   
64004684:	int3   
64004685:	int3   
64004686:	int3   
64004687:	int3   
64004688:	int3   
64004689:	int3   
6400468a:	int3   
6400468b:	int3   
6400468c:	int3   
6400468d:	int3   
6400468e:	int3   
6400468f:	int3   
64004690:	push   0xffffffff
64004692:	push   0x64023288
64004697:	mov    eax,fs:0x0
6400469d:	push   eax
6400469e:	push   ecx
6400469f:	push   ebx
640046a0:	push   esi
640046a1:	mov    eax,ds:0x640521ac
640046a6:	xor    eax,esp
640046a8:	push   eax
640046a9:	lea    eax,[esp+0x10]
640046ad:	mov    fs:0x0,eax
640046b3:	mov    esi,ecx
640046b5:	mov    DWORD PTR [esp+0xc],esi
640046b9:	mov    eax,DWORD PTR [esp+0x20]
640046bd:	xor    ebx,ebx
640046bf:	push   0xffffffff
640046c1:	push   ebx
640046c2:	mov    DWORD PTR [esi+0x18],0xf
640046c9:	mov    DWORD PTR [esi+0x14],ebx
640046cc:	push   eax
640046cd:	mov    BYTE PTR [esi+0x4],bl
640046d0:	call   0x64003330
640046d5:	mov    edx,DWORD PTR [esp+0x24]
640046d9:	push   0xffffffff
640046db:	lea    ecx,[esi+0x1c]
640046de:	mov    DWORD PTR [esp+0x1c],ebx
640046e2:	push   ebx
640046e3:	mov    DWORD PTR [ecx+0x18],0xf
640046ea:	mov    DWORD PTR [ecx+0x14],ebx
640046ed:	push   edx
640046ee:	mov    BYTE PTR [ecx+0x4],bl
640046f1:	call   0x64003330
640046f6:	mov    eax,esi
640046f8:	mov    ecx,DWORD PTR [esp+0x10]
640046fc:	mov    DWORD PTR fs:0x0,ecx
64004703:	pop    ecx
64004704:	pop    esi
64004705:	pop    ebx
64004706:	add    esp,0x10
64004709:	ret    0x8
6400470c:	int3   
6400470d:	int3   
6400470e:	int3   
6400470f:	int3   
64004710:	push   ebx
64004711:	push   ebp
64004712:	mov    ebp,DWORD PTR [esp+0xc]
64004716:	push   esi
64004717:	mov    ebx,eax
64004719:	cmp    DWORD PTR [ebx+0x14],ebp
6400471c:	push   edi
6400471d:	mov    esi,ecx
6400471f:	jae    0x64004726
64004721:	call   0x64012f6b
64004726:	mov    edi,DWORD PTR [ebx+0x14]
64004729:	mov    eax,DWORD PTR [esp+0x18]
6400472d:	sub    edi,ebp
6400472f:	cmp    eax,edi
64004731:	jae    0x64004735
64004733:	mov    edi,eax
64004735:	cmp    esi,ebx
64004737:	jne    0x64004756
64004739:	lea    ebx,[edi+ebp*1]
6400473c:	or     eax,0xffffffff
6400473f:	call   0x640050b0
64004744:	mov    eax,ebp
64004746:	xor    ebx,ebx
64004748:	call   0x640050b0
6400474d:	pop    edi
6400474e:	mov    eax,esi
64004750:	pop    esi
64004751:	pop    ebp
64004752:	pop    ebx
64004753:	ret    0x8
64004756:	mov    eax,esi
64004758:	call   0x64005140
6400475d:	test   al,al
6400475f:	je     0x640047ad
64004761:	cmp    DWORD PTR [ebx+0x18],0x8
64004765:	jb     0x6400476c
64004767:	mov    ecx,DWORD PTR [ebx+0x4]
6400476a:	jmp    0x6400476f
6400476c:	lea    ecx,[ebx+0x4]
6400476f:	cmp    DWORD PTR [esi+0x18],0x8
64004773:	lea    ebp,[esi+0x4]
64004776:	jb     0x6400477d
64004778:	mov    eax,DWORD PTR [ebp+0x0]
6400477b:	jmp    0x6400477f
6400477d:	mov    eax,ebp
6400477f:	mov    edx,DWORD PTR [esp+0x14]
64004783:	lea    ecx,[ecx+edx*2]
64004786:	lea    ebx,[edi+edi*1]
64004789:	push   ebx
6400478a:	push   ecx
6400478b:	mov    ecx,DWORD PTR [esi+0x18]
6400478e:	lea    edx,[ecx+ecx*1]
64004791:	push   edx
64004792:	push   eax
64004793:	call   0x640137ae
64004798:	add    esp,0x10
6400479b:	cmp    DWORD PTR [esi+0x18],0x8
6400479f:	mov    DWORD PTR [esi+0x14],edi
640047a2:	jb     0x640047a7
640047a4:	mov    ebp,DWORD PTR [ebp+0x0]
640047a7:	mov    WORD PTR [ebx+ebp*1],0x0
640047ad:	pop    edi
640047ae:	mov    eax,esi
640047b0:	pop    esi
640047b1:	pop    ebp
640047b2:	pop    ebx
640047b3:	ret    0x8
640047b6:	int3   
640047b7:	int3   
640047b8:	int3   
640047b9:	int3   
640047ba:	int3   
640047bb:	int3   
640047bc:	int3   
640047bd:	int3   
640047be:	int3   
640047bf:	int3   
640047c0:	mov    ecx,DWORD PTR [esi+0x18]
640047c3:	cmp    ecx,0x8
640047c6:	push   ebx
640047c7:	push   ebp
640047c8:	mov    ebp,DWORD PTR [esp+0xc]
640047cc:	lea    ebx,[esi+0x4]
640047cf:	jb     0x640047d5
640047d1:	mov    eax,DWORD PTR [ebx]
640047d3:	jmp    0x640047d7
640047d5:	mov    eax,ebx
640047d7:	cmp    ebp,eax
640047d9:	jb     0x6400480f
640047db:	cmp    ecx,0x8
640047de:	jb     0x640047e4
640047e0:	mov    eax,DWORD PTR [ebx]
640047e2:	jmp    0x640047e6
640047e4:	mov    eax,ebx
640047e6:	mov    edx,DWORD PTR [esi+0x14]
640047e9:	lea    eax,[eax+edx*2]
640047ec:	cmp    eax,ebp
640047ee:	jbe    0x6400480f
640047f0:	cmp    ecx,0x8
640047f3:	jb     0x640047f7
640047f5:	mov    ebx,DWORD PTR [ebx]
640047f7:	mov    ecx,DWORD PTR [esp+0x10]
640047fb:	sub    ebp,ebx
640047fd:	push   ecx
640047fe:	sar    ebp,1
64004800:	push   ebp
64004801:	mov    eax,esi
64004803:	mov    ecx,esi
64004805:	call   0x64004710
6400480a:	pop    ebp
6400480b:	pop    ebx
6400480c:	ret    0x8
6400480f:	push   edi
64004810:	mov    edi,DWORD PTR [esp+0x14]
64004814:	mov    eax,esi
64004816:	call   0x64005140
6400481b:	test   al,al
6400481d:	je     0x64004853
6400481f:	mov    ecx,DWORD PTR [esi+0x18]
64004822:	cmp    ecx,0x8
64004825:	jb     0x6400482b
64004827:	mov    eax,DWORD PTR [ebx]
64004829:	jmp    0x6400482d
6400482b:	mov    eax,ebx
6400482d:	add    edi,edi
6400482f:	push   edi
64004830:	push   ebp
64004831:	lea    edx,[ecx+ecx*1]
64004834:	push   edx
64004835:	push   eax
64004836:	call   0x640137ae
6400483b:	mov    eax,DWORD PTR [esp+0x24]
6400483f:	add    esp,0x10
64004842:	cmp    DWORD PTR [esi+0x18],0x8
64004846:	mov    DWORD PTR [esi+0x14],eax
64004849:	jb     0x6400484d
6400484b:	mov    ebx,DWORD PTR [ebx]
6400484d:	mov    WORD PTR [edi+ebx*1],0x0
64004853:	pop    edi
64004854:	pop    ebp
64004855:	mov    eax,esi
64004857:	pop    ebx
64004858:	ret    0x8
6400485b:	int3   
6400485c:	int3   
6400485d:	int3   
6400485e:	int3   
6400485f:	int3   
64004860:	mov    ecx,DWORD PTR [ebx+0x4]
64004863:	sub    esp,0x18
64004866:	cmp    DWORD PTR [ebx+0x8],0x0
6400486a:	push   ebp
6400486b:	mov    ebp,DWORD PTR [esp+0x20]
6400486f:	push   esi
64004870:	push   edi
64004871:	jne    0x6400488c
64004873:	mov    eax,DWORD PTR [esp+0x2c]
64004877:	push   eax
64004878:	push   0x1
6400487a:	push   ebp
6400487b:	push   ebx
6400487c:	call   0x64005330
64004881:	mov    eax,ebp
64004883:	pop    edi
64004884:	pop    esi
64004885:	pop    ebp
64004886:	add    esp,0x18
64004889:	ret    0x10
6400488c:	mov    esi,DWORD PTR [esp+0x30]
64004890:	test   esi,esi
64004892:	mov    edx,DWORD PTR [ecx]
64004894:	mov    DWORD PTR [esp+0x18],edx
64004898:	je     0x6400489e
6400489a:	cmp    esi,ebx
6400489c:	je     0x640048a3
6400489e:	call   0x64013e86
640048a3:	mov    edi,DWORD PTR [esp+0x34]
640048a7:	cmp    edi,DWORD PTR [esp+0x18]
640048ab:	jne    0x640048da
640048ad:	mov    esi,DWORD PTR [esp+0x2c]
640048b1:	lea    eax,[edi+0xc]
640048b4:	mov    ecx,esi
640048b6:	call   0x64004a70
640048bb:	test   al,al
640048bd:	je     0x64004a3f
640048c3:	push   esi
640048c4:	push   0x1
640048c6:	push   ebp
640048c7:	push   ebx
640048c8:	mov    ecx,edi
640048ca:	call   0x64005330
640048cf:	mov    eax,ebp
640048d1:	pop    edi
640048d2:	pop    esi
640048d3:	pop    ebp
640048d4:	add    esp,0x18
640048d7:	ret    0x10
640048da:	test   esi,esi
640048dc:	mov    eax,DWORD PTR [ebx+0x4]
640048df:	mov    DWORD PTR [esp+0x18],eax
640048e3:	je     0x640048e9
640048e5:	cmp    esi,ebx
640048e7:	je     0x640048ee
640048e9:	call   0x64013e86
640048ee:	cmp    edi,DWORD PTR [esp+0x18]
640048f2:	jne    0x6400492d
640048f4:	mov    ecx,DWORD PTR [ebx+0x4]
640048f7:	mov    ecx,DWORD PTR [ecx+0x8]
640048fa:	mov    eax,DWORD PTR [esp+0x2c]
640048fe:	add    ecx,0xc
64004901:	call   0x64004a70
64004906:	test   al,al
64004908:	je     0x64004a3b
6400490e:	mov    edx,DWORD PTR [esp+0x2c]
64004912:	mov    eax,DWORD PTR [ebx+0x4]
64004915:	mov    ecx,DWORD PTR [eax+0x8]
64004918:	push   edx
64004919:	push   0x0
6400491b:	push   ebp
6400491c:	push   ebx
6400491d:	call   0x64005330
64004922:	mov    eax,ebp
64004924:	pop    edi
64004925:	pop    esi
64004926:	pop    ebp
64004927:	add    esp,0x18
6400492a:	ret    0x10
6400492d:	mov    ecx,DWORD PTR [esp+0x2c]
64004931:	lea    eax,[edi+0xc]
64004934:	call   0x64004a70
64004939:	test   al,al
6400493b:	je     0x640049a5
6400493d:	mov    DWORD PTR [esp+0xc],esi
64004941:	lea    esi,[esp+0xc]
64004945:	mov    DWORD PTR [esp+0x10],edi
64004949:	call   0x640064e0
6400494e:	mov    esi,DWORD PTR [esp+0x10]
64004952:	mov    eax,DWORD PTR [esp+0x2c]
64004956:	lea    ecx,[esi+0xc]
64004959:	call   0x64004a70
6400495e:	test   al,al
64004960:	je     0x640049a1
64004962:	mov    ecx,DWORD PTR [esi+0x8]
64004965:	cmp    BYTE PTR [ecx+0x45],0x0
64004969:	je     0x64004986
6400496b:	mov    edx,DWORD PTR [esp+0x2c]
6400496f:	push   edx
64004970:	push   0x0
64004972:	push   ebp
64004973:	push   ebx
64004974:	mov    ecx,esi
64004976:	call   0x64005330
6400497b:	mov    eax,ebp
6400497d:	pop    edi
6400497e:	pop    esi
6400497f:	pop    ebp
64004980:	add    esp,0x18
64004983:	ret    0x10
64004986:	mov    eax,DWORD PTR [esp+0x2c]
6400498a:	push   eax
6400498b:	push   0x1
6400498d:	push   ebp
6400498e:	push   ebx
6400498f:	mov    ecx,edi
64004991:	call   0x64005330
64004996:	mov    eax,ebp
64004998:	pop    edi
64004999:	pop    esi
6400499a:	pop    ebp
6400499b:	add    esp,0x18
6400499e:	ret    0x10
640049a1:	mov    esi,DWORD PTR [esp+0x30]
640049a5:	mov    eax,DWORD PTR [esp+0x2c]
640049a9:	lea    ecx,[edi+0xc]
640049ac:	call   0x64004a70
640049b1:	test   al,al
640049b3:	je     0x64004a3b
640049b9:	mov    ecx,DWORD PTR [ebx+0x4]
640049bc:	mov    DWORD PTR [esp+0xc],esi
640049c0:	lea    esi,[esp+0xc]
640049c4:	mov    DWORD PTR [esp+0x10],edi
640049c8:	mov    DWORD PTR [esp+0x18],ecx
640049cc:	mov    DWORD PTR [esp+0x14],ebx
640049d0:	call   0x64006560
640049d5:	lea    esi,[esp+0x14]
640049d9:	lea    edi,[esp+0xc]
640049dd:	call   0x64003f10
640049e2:	test   al,al
640049e4:	mov    esi,DWORD PTR [esp+0x10]
640049e8:	jne    0x640049fa
640049ea:	mov    ecx,DWORD PTR [esp+0x2c]
640049ee:	lea    eax,[esi+0xc]
640049f1:	call   0x64004a70
640049f6:	test   al,al
640049f8:	je     0x64004a3b
640049fa:	mov    ecx,DWORD PTR [esp+0x34]
640049fe:	mov    edx,DWORD PTR [ecx+0x8]
64004a01:	cmp    BYTE PTR [edx+0x45],0x0
64004a05:	je     0x64004a20
64004a07:	mov    eax,DWORD PTR [esp+0x2c]
64004a0b:	push   eax
64004a0c:	push   0x0
64004a0e:	push   ebp
64004a0f:	push   ebx
64004a10:	call   0x64005330
64004a15:	mov    eax,ebp
64004a17:	pop    edi
64004a18:	pop    esi
64004a19:	pop    ebp
64004a1a:	add    esp,0x18
64004a1d:	ret    0x10
64004a20:	mov    ecx,DWORD PTR [esp+0x2c]
64004a24:	push   ecx
64004a25:	push   0x1
64004a27:	push   ebp
64004a28:	push   ebx
64004a29:	mov    ecx,esi
64004a2b:	call   0x64005330
64004a30:	mov    eax,ebp
64004a32:	pop    edi
64004a33:	pop    esi
64004a34:	pop    ebp
64004a35:	add    esp,0x18
64004a38:	ret    0x10
64004a3b:	mov    esi,DWORD PTR [esp+0x2c]
64004a3f:	push   esi
64004a40:	lea    edx,[esp+0x18]
64004a44:	push   edx
64004a45:	push   ebx
64004a46:	call   0x640051a0
64004a4b:	mov    ecx,DWORD PTR [eax]
64004a4d:	mov    DWORD PTR [ebp+0x0],ecx
64004a50:	mov    edx,DWORD PTR [eax+0x4]
64004a53:	pop    edi
64004a54:	pop    esi
64004a55:	mov    DWORD PTR [ebp+0x4],edx
64004a58:	mov    eax,ebp
64004a5a:	pop    ebp
64004a5b:	add    esp,0x18
64004a5e:	ret    0x10
64004a61:	int3   
64004a62:	int3   
64004a63:	int3   
64004a64:	int3   
64004a65:	int3   
64004a66:	int3   
64004a67:	int3   
64004a68:	int3   
64004a69:	int3   
64004a6a:	int3   
64004a6b:	int3   
64004a6c:	int3   
64004a6d:	int3   
64004a6e:	int3   
64004a6f:	int3   
64004a70:	cmp    DWORD PTR [eax+0x18],0x8
64004a74:	push   edi
64004a75:	mov    edi,DWORD PTR [eax+0x14]
64004a78:	jb     0x64004a91
64004a7a:	mov    eax,DWORD PTR [eax+0x4]
64004a7d:	push   eax
64004a7e:	mov    eax,DWORD PTR [ecx+0x14]
64004a81:	call   0x64006930
64004a86:	xor    ecx,ecx
64004a88:	test   eax,eax
64004a8a:	setl   cl
64004a8d:	mov    al,cl
64004a8f:	pop    edi
64004a90:	ret    
64004a91:	add    eax,0x4
64004a94:	push   eax
64004a95:	mov    eax,DWORD PTR [ecx+0x14]
64004a98:	call   0x64006930
64004a9d:	xor    ecx,ecx
64004a9f:	test   eax,eax
64004aa1:	setl   cl
64004aa4:	mov    al,cl
64004aa6:	pop    edi
64004aa7:	ret    
64004aa8:	int3   
64004aa9:	int3   
64004aaa:	int3   
64004aab:	int3   
64004aac:	int3   
64004aad:	int3   
64004aae:	int3   
64004aaf:	int3   
64004ab0:	push   0xffffffff
64004ab2:	push   0x64023258
64004ab7:	mov    eax,fs:0x0
64004abd:	push   eax
64004abe:	push   esi
64004abf:	push   edi
64004ac0:	mov    eax,ds:0x640521ac
64004ac5:	xor    eax,esp
64004ac7:	push   eax
64004ac8:	lea    eax,[esp+0xc]
64004acc:	mov    fs:0x0,eax
64004ad2:	mov    esi,DWORD PTR [esp+0x1c]
64004ad6:	mov    eax,DWORD PTR [esp+0x20]
64004ada:	xor    edi,edi
64004adc:	push   0xffffffff
64004ade:	mov    DWORD PTR [esi+0x18],0x7
64004ae5:	mov    DWORD PTR [esi+0x14],edi
64004ae8:	push   edi
64004ae9:	mov    ecx,esi
64004aeb:	mov    WORD PTR [esi+0x4],di
64004aef:	call   0x64004710
64004af4:	mov    eax,DWORD PTR [esp+0x24]
64004af8:	lea    ecx,[esi+0x1c]
64004afb:	mov    DWORD PTR [esp+0x14],edi
64004aff:	push   0xffffffff
64004b01:	mov    DWORD PTR [ecx+0x18],0x7
64004b08:	mov    DWORD PTR [ecx+0x14],edi
64004b0b:	push   edi
64004b0c:	mov    WORD PTR [ecx+0x4],di
64004b10:	call   0x64004710
64004b15:	mov    eax,esi
64004b17:	mov    ecx,DWORD PTR [esp+0xc]
64004b1b:	mov    DWORD PTR fs:0x0,ecx
64004b22:	pop    ecx
64004b23:	pop    edi
64004b24:	pop    esi
64004b25:	add    esp,0xc
64004b28:	ret    0xc
64004b2b:	int3   
64004b2c:	int3   
64004b2d:	int3   
64004b2e:	int3   
64004b2f:	int3   
64004b30:	push   ebx
64004b31:	push   esi
64004b32:	mov    esi,DWORD PTR [esp+0x10]
64004b36:	mov    eax,esi
64004b38:	shr    eax,0x4
64004b3b:	push   edi
64004b3c:	mov    edi,DWORD PTR [esp+0x10]
64004b40:	add    eax,0x1
64004b43:	mov    ebx,ecx
64004b45:	movzx  ecx,ax
64004b48:	push   0x6
64004b4a:	push   ecx
64004b4b:	push   edi
64004b4c:	call   DWORD PTR ds:0x6402c024
64004b52:	test   eax,eax
64004b54:	je     0x64004b67
64004b56:	push   esi
64004b57:	push   eax
64004b58:	push   edi
64004b59:	call   0x64001140
64004b5e:	mov    esi,eax
64004b60:	add    esp,0xc
64004b63:	test   esi,esi
64004b65:	jne    0x64004b6f
64004b67:	pop    edi
64004b68:	pop    esi
64004b69:	xor    eax,eax
64004b6b:	pop    ebx
64004b6c:	ret    0x8
64004b6f:	mov    eax,DWORD PTR [ebx]
64004b71:	movzx  edi,WORD PTR [esi]
64004b74:	sub    eax,0x10
64004b77:	mov    edx,0x1
64004b7c:	sub    edx,DWORD PTR [eax+0xc]
64004b7f:	mov    eax,DWORD PTR [eax+0x8]
64004b82:	sub    eax,edi
64004b84:	or     edx,eax
64004b86:	jge    0x64004b90
64004b88:	push   edi
64004b89:	mov    ecx,ebx
64004b8b:	call   0x64004380
64004b90:	movzx  eax,WORD PTR [esi]
64004b93:	cmp    eax,0xffffffff
64004b96:	push   ebp
64004b97:	mov    ebp,DWORD PTR [ebx]
64004b99:	lea    edx,[esi+0x2]
64004b9c:	jne    0x64004bb5
64004b9e:	mov    eax,edx
64004ba0:	lea    esi,[eax+0x2]
64004ba3:	mov    cx,WORD PTR [eax]
64004ba6:	add    eax,0x2
64004ba9:	test   cx,cx
64004bac:	jne    0x64004ba3
64004bae:	sub    eax,esi
64004bb0:	sar    eax,1
64004bb2:	add    eax,0x1
64004bb5:	lea    ecx,[eax+eax*1]
64004bb8:	push   ecx
64004bb9:	push   edx
64004bba:	lea    esi,[edi+edi*1]
64004bbd:	push   esi
64004bbe:	push   ebp
64004bbf:	call   0x640137ae
64004bc4:	push   eax
64004bc5:	call   0x640010a0
64004bca:	add    esp,0x14
64004bcd:	test   edi,edi
64004bcf:	pop    ebp
64004bd0:	jl     0x64004bef
64004bd2:	mov    eax,DWORD PTR [ebx]
64004bd4:	cmp    edi,DWORD PTR [eax-0x8]
64004bd7:	jg     0x64004bef
64004bd9:	mov    DWORD PTR [eax-0xc],edi
64004bdc:	mov    edx,DWORD PTR [ebx]
64004bde:	pop    edi
64004bdf:	mov    WORD PTR [esi+edx*1],0x0
64004be5:	pop    esi
64004be6:	mov    eax,0x1
64004beb:	pop    ebx
64004bec:	ret    0x8
64004bef:	push   0x80070057
64004bf4:	call   0x64001080
64004bf9:	int3   
64004bfa:	int3   
64004bfb:	int3   
64004bfc:	int3   
64004bfd:	int3   
64004bfe:	int3   
64004bff:	int3   
64004c00:	mov    edx,DWORD PTR [esp+0x4]
64004c04:	push   esi
64004c05:	mov    esi,ecx
64004c07:	mov    eax,DWORD PTR [esi]
64004c09:	mov    ecx,DWORD PTR [eax-0x10]
64004c0c:	sub    eax,0x10
64004c0f:	cmp    DWORD PTR [eax+0x8],edx
64004c12:	jge    0x64004c29
64004c14:	test   edx,edx
64004c16:	jle    0x64004c29
64004c18:	push   edi
64004c19:	mov    edi,DWORD PTR [ecx]
64004c1b:	push   0x2
64004c1d:	push   edx
64004c1e:	push   eax
64004c1f:	mov    eax,DWORD PTR [edi+0x8]
64004c22:	call   eax
64004c24:	test   eax,eax
64004c26:	pop    edi
64004c27:	jne    0x64004c2e
64004c29:	call   0x64004370
64004c2e:	add    eax,0x10
64004c31:	mov    DWORD PTR [esi],eax
64004c33:	pop    esi
64004c34:	ret    0x4
64004c37:	int3   
64004c38:	int3   
64004c39:	int3   
64004c3a:	int3   
64004c3b:	int3   
64004c3c:	int3   
64004c3d:	int3   
64004c3e:	int3   
64004c3f:	int3   
64004c40:	push   ebp
64004c41:	mov    ebp,esp
64004c43:	and    esp,0xfffffff8
64004c46:	sub    esp,0x24
64004c49:	push   ebx
64004c4a:	push   esi
64004c4b:	push   edi
64004c4c:	mov    edi,ecx
64004c4e:	mov    eax,DWORD PTR [edi+0x4]
64004c51:	mov    esi,DWORD PTR [eax+0x4]
64004c54:	cmp    BYTE PTR [esi+0x45],0x0
64004c58:	mov    ecx,eax
64004c5a:	mov    al,0x1
64004c5c:	mov    DWORD PTR [esp+0x28],edi
64004c60:	mov    DWORD PTR [esp+0x10],ecx
64004c64:	mov    BYTE PTR [esp+0x18],al
64004c68:	jne    0x64004d08
64004c6e:	mov    edx,DWORD PTR [ebp+0xc]
64004c71:	mov    eax,DWORD PTR [edx+0x14]
64004c74:	mov    ecx,DWORD PTR [edx+0x18]
64004c77:	mov    DWORD PTR [esp+0x20],eax
64004c7b:	mov    DWORD PTR [esp+0x1c],eax
64004c7f:	mov    DWORD PTR [esp+0x24],ecx
64004c83:	jmp    0x64004c8c
64004c85:	mov    edx,DWORD PTR [ebp+0xc]
64004c88:	mov    eax,DWORD PTR [esp+0x1c]
64004c8c:	cmp    DWORD PTR [esi+0x24],0x10
64004c90:	mov    ebx,DWORD PTR [esi+0x20]
64004c93:	mov    DWORD PTR [esp+0x10],esi
64004c97:	jb     0x64004c9e
64004c99:	mov    ecx,DWORD PTR [esi+0x10]
64004c9c:	jmp    0x64004ca1
64004c9e:	lea    ecx,[esi+0x10]
64004ca1:	mov    edi,DWORD PTR [esp+0x20]
64004ca5:	cmp    eax,edi
64004ca7:	mov    DWORD PTR [esp+0x14],ecx
64004cab:	jae    0x64004caf
64004cad:	mov    edi,eax
64004caf:	cmp    edi,ebx
64004cb1:	mov    ecx,edi
64004cb3:	jb     0x64004cb7
64004cb5:	mov    ecx,ebx
64004cb7:	cmp    DWORD PTR [esp+0x24],0x10
64004cbc:	lea    eax,[edx+0x4]
64004cbf:	jb     0x64004cc3
64004cc1:	mov    eax,DWORD PTR [eax]
64004cc3:	mov    edx,DWORD PTR [esp+0x14]
64004cc7:	push   ecx
64004cc8:	push   edx
64004cc9:	push   eax
64004cca:	call   0x640012b0
64004ccf:	add    esp,0xc
64004cd2:	test   eax,eax
64004cd4:	jne    0x64004ce8
64004cd6:	cmp    edi,ebx
64004cd8:	jae    0x64004cdf
64004cda:	or     eax,0xffffffff
64004cdd:	jmp    0x64004ce6
64004cdf:	xor    eax,eax
64004ce1:	cmp    edi,ebx
64004ce3:	setne  al
64004ce6:	test   eax,eax
64004ce8:	setl   al
64004ceb:	test   al,al
64004ced:	mov    BYTE PTR [esp+0x18],al
64004cf1:	je     0x64004cf7
64004cf3:	mov    esi,DWORD PTR [esi]
64004cf5:	jmp    0x64004cfa
64004cf7:	mov    esi,DWORD PTR [esi+0x8]
64004cfa:	cmp    BYTE PTR [esi+0x45],0x0
64004cfe:	je     0x64004c85
64004d00:	mov    edi,DWORD PTR [esp+0x28]
64004d04:	mov    ecx,DWORD PTR [esp+0x10]
64004d08:	test   al,al
64004d0a:	mov    esi,ecx
64004d0c:	mov    DWORD PTR [esp+0x2c],esi
64004d10:	mov    DWORD PTR [esp+0x28],edi
64004d14:	je     0x64004d59
64004d16:	mov    eax,DWORD PTR [edi+0x4]
64004d19:	cmp    ecx,DWORD PTR [eax]
64004d1b:	jne    0x64004d4c
64004d1d:	mov    edx,DWORD PTR [ebp+0xc]
64004d20:	push   edx
64004d21:	push   ecx
64004d22:	push   0x1
64004d24:	lea    eax,[esp+0x34]
64004d28:	push   eax
64004d29:	mov    ecx,edi
64004d2b:	call   0x64004dd0
64004d30:	mov    ecx,eax
64004d32:	mov    edx,DWORD PTR [ecx]
64004d34:	mov    eax,DWORD PTR [ebp+0x8]
64004d37:	mov    ecx,DWORD PTR [ecx+0x4]
64004d3a:	mov    DWORD PTR [eax+0x4],ecx
64004d3d:	mov    BYTE PTR [eax+0x8],0x1
64004d41:	mov    DWORD PTR [eax],edx
64004d43:	pop    edi
64004d44:	pop    esi
64004d45:	pop    ebx
64004d46:	mov    esp,ebp
64004d48:	pop    ebp
64004d49:	ret    0x8
64004d4c:	lea    ecx,[esp+0x28]
64004d50:	call   0x64006010
64004d55:	mov    esi,DWORD PTR [esp+0x2c]
64004d59:	mov    ebx,DWORD PTR [ebp+0xc]
64004d5c:	cmp    DWORD PTR [ebx+0x18],0x10
64004d60:	mov    edx,DWORD PTR [ebx+0x14]
64004d63:	lea    ecx,[esi+0xc]
64004d66:	jb     0x64004d6d
64004d68:	mov    eax,DWORD PTR [ebx+0x4]
64004d6b:	jmp    0x64004d70
64004d6d:	lea    eax,[ebx+0x4]
64004d70:	push   edx
64004d71:	mov    edx,DWORD PTR [ecx+0x14]
64004d74:	push   eax
64004d75:	push   edx
64004d76:	push   0x0
64004d78:	call   0x640034e0
64004d7d:	test   eax,eax
64004d7f:	jge    0x64004db4
64004d81:	mov    eax,DWORD PTR [esp+0x10]
64004d85:	mov    ecx,DWORD PTR [esp+0x18]
64004d89:	push   ebx
64004d8a:	push   eax
64004d8b:	push   ecx
64004d8c:	lea    edx,[esp+0x34]
64004d90:	push   edx
64004d91:	mov    ecx,edi
64004d93:	call   0x64004dd0
64004d98:	mov    ecx,eax
64004d9a:	mov    edx,DWORD PTR [ecx]
64004d9c:	mov    eax,DWORD PTR [ebp+0x8]
64004d9f:	mov    ecx,DWORD PTR [ecx+0x4]
64004da2:	mov    DWORD PTR [eax+0x4],ecx
64004da5:	mov    BYTE PTR [eax+0x8],0x1
64004da9:	mov    DWORD PTR [eax],edx
64004dab:	pop    edi
64004dac:	pop    esi
64004dad:	pop    ebx
64004dae:	mov    esp,ebp
64004db0:	pop    ebp
64004db1:	ret    0x8
64004db4:	mov    eax,DWORD PTR [ebp+0x8]
64004db7:	mov    edx,DWORD PTR [esp+0x28]
64004dbb:	pop    edi
64004dbc:	mov    DWORD PTR [eax+0x4],esi
64004dbf:	pop    esi
64004dc0:	mov    BYTE PTR [eax+0x8],0x0
64004dc4:	mov    DWORD PTR [eax],edx
64004dc6:	pop    ebx
64004dc7:	mov    esp,ebp
64004dc9:	pop    ebp
64004dca:	ret    0x8
64004dcd:	int3   
64004dce:	int3   
64004dcf:	int3   
64004dd0:	push   ebp
64004dd1:	mov    ebp,esp
64004dd3:	and    esp,0xfffffff8
64004dd6:	push   0xffffffff
64004dd8:	push   0x640235e8
64004ddd:	mov    eax,fs:0x0
64004de3:	push   eax
64004de4:	sub    esp,0x50
64004de7:	push   ebx
64004de8:	push   esi
64004de9:	push   edi
64004dea:	mov    eax,ds:0x640521ac
64004def:	xor    eax,esp
64004df1:	push   eax
64004df2:	lea    eax,[esp+0x60]
64004df6:	mov    fs:0x0,eax
64004dfc:	mov    edi,ecx
64004dfe:	xor    ebx,ebx
64004e00:	cmp    DWORD PTR [edi+0x8],0x4924923
64004e07:	jb     0x64004e52
64004e09:	push   0x13
64004e0b:	push   0x64041d78
64004e10:	lea    ecx,[esp+0x20]
64004e14:	mov    DWORD PTR [esp+0x38],0xf
64004e1c:	mov    DWORD PTR [esp+0x34],ebx
64004e20:	mov    BYTE PTR [esp+0x24],bl
64004e24:	call   0x64003410
64004e29:	lea    eax,[esp+0x18]
64004e2d:	push   eax
64004e2e:	lea    ecx,[esp+0x38]
64004e32:	mov    DWORD PTR [esp+0x6c],ebx
64004e36:	call   0x64001350
64004e3b:	push   0x64044194
64004e40:	lea    ecx,[esp+0x38]
64004e44:	push   ecx
64004e45:	mov    DWORD PTR [esp+0x3c],0x6402c2e8
64004e4d:	call   0x64013884
64004e52:	mov    edx,DWORD PTR [ebp+0x14]
64004e55:	mov    eax,DWORD PTR [edi+0x4]
64004e58:	mov    esi,DWORD PTR [ebp+0x10]
64004e5b:	push   ebx
64004e5c:	push   edx
64004e5d:	push   eax
64004e5e:	push   esi
64004e5f:	push   eax
64004e60:	call   0x64005840
64004e65:	add    DWORD PTR [edi+0x8],0x1
64004e69:	mov    ecx,eax
64004e6b:	mov    eax,DWORD PTR [edi+0x4]
64004e6e:	cmp    esi,eax
64004e70:	mov    DWORD PTR [esp+0x14],ecx
64004e74:	jne    0x64004e86
64004e76:	mov    DWORD PTR [eax+0x4],ecx
64004e79:	mov    eax,DWORD PTR [edi+0x4]
64004e7c:	mov    DWORD PTR [eax],ecx
64004e7e:	mov    edx,DWORD PTR [edi+0x4]
64004e81:	mov    DWORD PTR [edx+0x8],ecx
64004e84:	jmp    0x64004ea6
64004e86:	cmp    BYTE PTR [ebp+0xc],bl
64004e89:	je     0x64004e98
64004e8b:	mov    DWORD PTR [esi],ecx
64004e8d:	mov    eax,DWORD PTR [edi+0x4]
64004e90:	cmp    esi,DWORD PTR [eax]
64004e92:	jne    0x64004ea6
64004e94:	mov    DWORD PTR [eax],ecx
64004e96:	jmp    0x64004ea6
64004e98:	mov    DWORD PTR [esi+0x8],ecx
64004e9b:	mov    eax,DWORD PTR [edi+0x4]
64004e9e:	cmp    esi,DWORD PTR [eax+0x8]
64004ea1:	jne    0x64004ea6
64004ea3:	mov    DWORD PTR [eax+0x8],ecx
64004ea6:	mov    edx,DWORD PTR [ecx+0x4]
64004ea9:	cmp    BYTE PTR [edx+0x44],bl
64004eac:	lea    eax,[ecx+0x4]
64004eaf:	mov    esi,ecx
64004eb1:	jne    0x64004ff2
64004eb7:	mov    ecx,DWORD PTR [eax]
64004eb9:	mov    edx,DWORD PTR [ecx+0x4]
64004ebc:	cmp    ecx,DWORD PTR [edx]
64004ebe:	jne    0x64004f65
64004ec4:	mov    edx,DWORD PTR [edx+0x8]
64004ec7:	cmp    BYTE PTR [edx+0x44],bl
64004eca:	je     0x64004f6c
64004ed0:	cmp    esi,DWORD PTR [ecx+0x8]
64004ed3:	jne    0x64004f10
64004ed5:	mov    esi,ecx
64004ed7:	mov    ecx,DWORD PTR [esi+0x8]
64004eda:	mov    eax,DWORD PTR [ecx]
64004edc:	mov    DWORD PTR [esi+0x8],eax
64004edf:	mov    eax,DWORD PTR [ecx]
64004ee1:	cmp    BYTE PTR [eax+0x45],bl
64004ee4:	jne    0x64004ee9
64004ee6:	mov    DWORD PTR [eax+0x4],esi
64004ee9:	mov    edx,DWORD PTR [esi+0x4]
64004eec:	lea    eax,[esi+0x4]
64004eef:	mov    DWORD PTR [ecx+0x4],edx
64004ef2:	mov    edx,DWORD PTR [edi+0x4]
64004ef5:	cmp    esi,DWORD PTR [edx+0x4]
64004ef8:	jne    0x64004eff
64004efa:	mov    DWORD PTR [edx+0x4],ecx
64004efd:	jmp    0x64004f0c
64004eff:	mov    edx,DWORD PTR [eax]
64004f01:	cmp    esi,DWORD PTR [edx]
64004f03:	jne    0x64004f09
64004f05:	mov    DWORD PTR [edx],ecx
64004f07:	jmp    0x64004f0c
64004f09:	mov    DWORD PTR [edx+0x8],ecx
64004f0c:	mov    DWORD PTR [ecx],esi
64004f0e:	mov    DWORD PTR [eax],ecx
64004f10:	mov    ecx,DWORD PTR [eax]
64004f12:	mov    BYTE PTR [ecx+0x44],0x1
64004f16:	mov    edx,DWORD PTR [eax]
64004f18:	mov    ecx,DWORD PTR [edx+0x4]
64004f1b:	mov    BYTE PTR [ecx+0x44],bl
64004f1e:	mov    edx,DWORD PTR [eax]
64004f20:	mov    eax,DWORD PTR [edx+0x4]
64004f23:	mov    ecx,DWORD PTR [eax]
64004f25:	mov    edx,DWORD PTR [ecx+0x8]
64004f28:	mov    DWORD PTR [eax],edx
64004f2a:	mov    edx,DWORD PTR [ecx+0x8]
64004f2d:	cmp    BYTE PTR [edx+0x45],bl
64004f30:	jne    0x64004f35
64004f32:	mov    DWORD PTR [edx+0x4],eax
64004f35:	mov    edx,DWORD PTR [eax+0x4]
64004f38:	mov    DWORD PTR [ecx+0x4],edx
64004f3b:	mov    edx,DWORD PTR [edi+0x4]
64004f3e:	cmp    eax,DWORD PTR [edx+0x4]
64004f41:	jne    0x64004f4e
64004f43:	mov    DWORD PTR [edx+0x4],ecx
64004f46:	mov    DWORD PTR [ecx+0x8],eax
64004f49:	jmp    0x64004fdc
64004f4e:	mov    edx,DWORD PTR [eax+0x4]
64004f51:	cmp    eax,DWORD PTR [edx+0x8]
64004f54:	jne    0x64004f5e
64004f56:	mov    DWORD PTR [edx+0x8],ecx
64004f59:	mov    DWORD PTR [ecx+0x8],eax
64004f5c:	jmp    0x64004fdc
64004f5e:	mov    DWORD PTR [edx],ecx
64004f60:	mov    DWORD PTR [ecx+0x8],eax
64004f63:	jmp    0x64004fdc
64004f65:	mov    edx,DWORD PTR [edx]
64004f67:	cmp    BYTE PTR [edx+0x44],bl
64004f6a:	jne    0x64004f83
64004f6c:	mov    BYTE PTR [ecx+0x44],0x1
64004f70:	mov    BYTE PTR [edx+0x44],0x1
64004f74:	mov    edx,DWORD PTR [eax]
64004f76:	mov    ecx,DWORD PTR [edx+0x4]
64004f79:	mov    BYTE PTR [ecx+0x44],bl
64004f7c:	mov    edx,DWORD PTR [eax]
64004f7e:	mov    esi,DWORD PTR [edx+0x4]
64004f81:	jmp    0x64004fdf
64004f83:	cmp    esi,DWORD PTR [ecx]
64004f85:	jne    0x64004f91
64004f87:	mov    esi,ecx
64004f89:	push   esi
64004f8a:	mov    ecx,edi
64004f8c:	call   0x640057e0
64004f91:	mov    eax,DWORD PTR [esi+0x4]
64004f94:	mov    BYTE PTR [eax+0x44],0x1
64004f98:	mov    ecx,DWORD PTR [esi+0x4]
64004f9b:	mov    edx,DWORD PTR [ecx+0x4]
64004f9e:	mov    BYTE PTR [edx+0x44],bl
64004fa1:	mov    eax,DWORD PTR [esi+0x4]
64004fa4:	mov    eax,DWORD PTR [eax+0x4]
64004fa7:	mov    ecx,DWORD PTR [eax+0x8]
64004faa:	mov    edx,DWORD PTR [ecx]
64004fac:	mov    DWORD PTR [eax+0x8],edx
64004faf:	mov    edx,DWORD PTR [ecx]
64004fb1:	cmp    BYTE PTR [edx+0x45],bl
64004fb4:	jne    0x64004fb9
64004fb6:	mov    DWORD PTR [edx+0x4],eax
64004fb9:	mov    edx,DWORD PTR [eax+0x4]
64004fbc:	mov    DWORD PTR [ecx+0x4],edx
64004fbf:	mov    edx,DWORD PTR [edi+0x4]
64004fc2:	cmp    eax,DWORD PTR [edx+0x4]
64004fc5:	jne    0x64004fcc
64004fc7:	mov    DWORD PTR [edx+0x4],ecx
64004fca:	jmp    0x64004fda
64004fcc:	mov    edx,DWORD PTR [eax+0x4]
64004fcf:	cmp    eax,DWORD PTR [edx]
64004fd1:	jne    0x64004fd7
64004fd3:	mov    DWORD PTR [edx],ecx
64004fd5:	jmp    0x64004fda
64004fd7:	mov    DWORD PTR [edx+0x8],ecx
64004fda:	mov    DWORD PTR [ecx],eax
64004fdc:	mov    DWORD PTR [eax+0x4],ecx
64004fdf:	mov    ecx,DWORD PTR [esi+0x4]
64004fe2:	cmp    BYTE PTR [ecx+0x44],bl
64004fe5:	lea    eax,[esi+0x4]
64004fe8:	je     0x64004eb7
64004fee:	mov    ecx,DWORD PTR [esp+0x14]
64004ff2:	mov    edx,DWORD PTR [edi+0x4]
64004ff5:	mov    eax,DWORD PTR [edx+0x4]
64004ff8:	mov    BYTE PTR [eax+0x44],0x1
64004ffc:	mov    eax,DWORD PTR [ebp+0x8]
64004fff:	mov    DWORD PTR [eax+0x4],ecx
64005002:	mov    DWORD PTR [eax],edi
64005004:	mov    ecx,DWORD PTR [esp+0x60]
64005008:	mov    DWORD PTR fs:0x0,ecx
6400500f:	pop    ecx
64005010:	pop    edi
64005011:	pop    esi
64005012:	pop    ebx
64005013:	mov    esp,ebp
64005015:	pop    ebp
64005016:	ret    0x10
64005019:	int3   
6400501a:	int3   
6400501b:	int3   
6400501c:	int3   
6400501d:	int3   
6400501e:	int3   
6400501f:	int3   
64005020:	push   ecx
64005021:	mov    eax,DWORD PTR [ecx+0x4]
64005024:	push   esi
64005025:	mov    esi,DWORD PTR [eax+0x4]
64005028:	cmp    BYTE PTR [esi+0x45],0x0
6400502c:	mov    DWORD PTR [esp+0x4],eax
64005030:	jne    0x640050a7
64005032:	mov    eax,DWORD PTR [esp+0xc]
64005036:	mov    ecx,DWORD PTR [eax+0x18]
64005039:	push   ebx
6400503a:	mov    ebx,DWORD PTR [eax+0x14]
6400503d:	push   ebp
6400503e:	push   edi
6400503f:	mov    DWORD PTR [esp+0x18],ecx
64005043:	lea    ebp,[eax+0x4]
64005046:	cmp    DWORD PTR [esp+0x18],0x10
6400504b:	jb     0x64005052
6400504d:	mov    edx,DWORD PTR [ebp+0x0]
64005050:	jmp    0x64005054
64005052:	mov    edx,ebp
64005054:	mov    edi,DWORD PTR [esi+0x20]
64005057:	mov    eax,edi
64005059:	cmp    eax,edi
6400505b:	jae    0x6400505d
6400505d:	cmp    edi,ebx
6400505f:	mov    ecx,edi
64005061:	jb     0x64005065
64005063:	mov    ecx,ebx
64005065:	cmp    DWORD PTR [esi+0x24],0x10
64005069:	jb     0x64005070
6400506b:	mov    eax,DWORD PTR [esi+0x10]
6400506e:	jmp    0x64005073
64005070:	lea    eax,[esi+0x10]
64005073:	push   ecx
64005074:	push   edx
64005075:	push   eax
64005076:	call   0x640012b0
6400507b:	add    esp,0xc
6400507e:	test   eax,eax
64005080:	jne    0x6400508d
64005082:	cmp    edi,ebx
64005084:	jb     0x6400508f
64005086:	cmp    edi,ebx
64005088:	setne  al
6400508b:	test   eax,eax
6400508d:	jge    0x64005094
6400508f:	mov    esi,DWORD PTR [esi+0x8]
64005092:	jmp    0x6400509a
64005094:	mov    DWORD PTR [esp+0x10],esi
64005098:	mov    esi,DWORD PTR [esi]
6400509a:	cmp    BYTE PTR [esi+0x45],0x0
6400509e:	je     0x64005046
640050a0:	mov    eax,DWORD PTR [esp+0x10]
640050a4:	pop    edi
640050a5:	pop    ebp
640050a6:	pop    ebx
640050a7:	pop    esi
640050a8:	pop    ecx
640050a9:	ret    0x4
640050ac:	int3   
640050ad:	int3   
640050ae:	int3   
640050af:	int3   
640050b0:	sub    esp,0x8
640050b3:	cmp    DWORD PTR [esi+0x14],ebx
640050b6:	push   edi
640050b7:	mov    edi,eax
640050b9:	jae    0x640050c0
640050bb:	call   0x64012f6b
640050c0:	mov    eax,DWORD PTR [esi+0x14]
640050c3:	sub    eax,ebx
640050c5:	cmp    eax,edi
640050c7:	jae    0x640050cb
640050c9:	mov    edi,eax
640050cb:	test   edi,edi
640050cd:	jbe    0x64005138
640050cf:	mov    ecx,DWORD PTR [esi+0x18]
640050d2:	cmp    ecx,0x8
640050d5:	push   ebp
640050d6:	lea    ebp,[esi+0x4]
640050d9:	jb     0x640050e4
640050db:	mov    edx,DWORD PTR [ebp+0x0]
640050de:	mov    DWORD PTR [esp+0x8],edx
640050e2:	jmp    0x640050e8
640050e4:	mov    DWORD PTR [esp+0x8],ebp
640050e8:	cmp    ecx,0x8
640050eb:	jb     0x640050f6
640050ed:	mov    edx,DWORD PTR [ebp+0x0]
640050f0:	mov    DWORD PTR [esp+0xc],edx
640050f4:	jmp    0x640050fa
640050f6:	mov    DWORD PTR [esp+0xc],ebp
640050fa:	mov    edx,DWORD PTR [esp+0x8]
640050fe:	sub    eax,edi
64005100:	add    eax,eax
64005102:	push   eax
64005103:	lea    eax,[ebx+edi*1]
64005106:	lea    eax,[edx+eax*2]
64005109:	sub    ecx,ebx
6400510b:	push   eax
6400510c:	add    ecx,ecx
6400510e:	push   ecx
6400510f:	mov    ecx,DWORD PTR [esp+0x18]
64005113:	lea    edx,[ecx+ebx*2]
64005116:	push   edx
64005117:	call   0x64013829
6400511c:	mov    eax,DWORD PTR [esi+0x14]
6400511f:	sub    eax,edi
64005121:	add    esp,0x10
64005124:	cmp    DWORD PTR [esi+0x18],0x8
64005128:	mov    DWORD PTR [esi+0x14],eax
6400512b:	jb     0x64005130
6400512d:	mov    ebp,DWORD PTR [ebp+0x0]
64005130:	mov    WORD PTR [ebp+eax*2+0x0],0x0
64005137:	pop    ebp
64005138:	mov    eax,esi
6400513a:	pop    edi
6400513b:	add    esp,0x8
6400513e:	ret    
6400513f:	int3   
64005140:	cmp    edi,0x7ffffffe
64005146:	push   esi
64005147:	mov    esi,eax
64005149:	jbe    0x64005150
6400514b:	call   0x64012f2c
64005150:	mov    eax,DWORD PTR [esi+0x18]
64005153:	cmp    eax,edi
64005155:	jae    0x6400516c
64005157:	mov    eax,DWORD PTR [esi+0x14]
6400515a:	push   eax
6400515b:	push   edi
6400515c:	push   esi
6400515d:	call   0x640058e0
64005162:	xor    ecx,ecx
64005164:	cmp    ecx,edi
64005166:	sbb    eax,eax
64005168:	neg    eax
6400516a:	pop    esi
6400516b:	ret    
6400516c:	test   edi,edi
6400516e:	jne    0x64005190
64005170:	cmp    eax,0x8
64005173:	mov    DWORD PTR [esi+0x14],edi
64005176:	jb     0x64005188
64005178:	mov    esi,DWORD PTR [esi+0x4]
6400517b:	xor    ecx,ecx
6400517d:	cmp    ecx,edi
6400517f:	sbb    eax,eax
64005181:	mov    WORD PTR [esi],di
64005184:	neg    eax
64005186:	pop    esi
64005187:	ret    
64005188:	add    esi,0x4
6400518b:	mov    WORD PTR [esi],0x0
64005190:	xor    ecx,ecx
64005192:	cmp    ecx,edi
64005194:	sbb    eax,eax
64005196:	neg    eax
64005198:	pop    esi
64005199:	ret    
6400519a:	int3   
6400519b:	int3   
6400519c:	int3   
6400519d:	int3   
6400519e:	int3   
6400519f:	int3   
640051a0:	sub    esp,0x18
640051a3:	mov    ecx,DWORD PTR [esp+0x1c]
640051a7:	mov    eax,DWORD PTR [ecx+0x4]
640051aa:	push   ebx
640051ab:	mov    ebx,DWORD PTR [esp+0x24]
640051af:	push   ebp
640051b0:	push   esi
640051b1:	mov    esi,DWORD PTR [eax+0x4]
640051b4:	cmp    BYTE PTR [esi+0x45],0x0
640051b8:	mov    ebp,eax
640051ba:	mov    al,0x1
640051bc:	push   edi
640051bd:	mov    BYTE PTR [esp+0x10],al
640051c1:	jne    0x64005283
640051c7:	mov    eax,DWORD PTR [esp+0x34]
640051cb:	mov    ecx,DWORD PTR [eax+0x14]
640051ce:	mov    edx,DWORD PTR [eax+0x18]
640051d1:	mov    DWORD PTR [esp+0x18],ecx
640051d5:	mov    DWORD PTR [esp+0x14],ecx
640051d9:	mov    DWORD PTR [esp+0x1c],edx
640051dd:	jmp    0x640051e4
640051df:	nop
640051e0:	mov    ecx,DWORD PTR [esp+0x14]
640051e4:	cmp    DWORD PTR [esi+0x24],0x8
640051e8:	mov    ebp,DWORD PTR [esi+0x20]
640051eb:	mov    DWORD PTR [esp+0x20],esi
640051ef:	jb     0x640051f6
640051f1:	mov    eax,DWORD PTR [esi+0x10]
640051f4:	jmp    0x640051f9
640051f6:	lea    eax,[esi+0x10]
640051f9:	mov    edi,DWORD PTR [esp+0x18]
640051fd:	cmp    ecx,edi
640051ff:	jae    0x64005203
64005201:	mov    edi,ecx
64005203:	cmp    edi,ebp
64005205:	mov    edx,edi
64005207:	jb     0x6400520b
64005209:	mov    edx,ebp
6400520b:	mov    ecx,DWORD PTR [esp+0x34]
6400520f:	add    ecx,0x4
64005212:	cmp    DWORD PTR [esp+0x1c],0x8
64005217:	jb     0x6400521b
64005219:	mov    ecx,DWORD PTR [ecx]
6400521b:	test   edx,edx
6400521d:	jbe    0x64005237
6400521f:	nop
64005220:	mov    bx,WORD PTR [ecx]
64005223:	cmp    bx,WORD PTR [eax]
64005226:	jne    0x64005240
64005228:	add    ecx,0x2
6400522b:	add    eax,0x2
6400522e:	sub    edx,0x1
64005231:	jne    0x64005220
64005233:	mov    ebx,DWORD PTR [esp+0x30]
64005237:	cmp    edi,ebp
64005239:	jae    0x64005256
6400523b:	or     eax,0xffffffff
6400523e:	jmp    0x6400525d
64005240:	mov    cx,bx
64005243:	cmp    cx,WORD PTR [eax]
64005246:	sbb    eax,eax
64005248:	and    eax,0xfffffffe
6400524b:	add    eax,0x1
6400524e:	je     0x64005233
64005250:	mov    ebx,DWORD PTR [esp+0x30]
64005254:	jmp    0x6400525d
64005256:	xor    eax,eax
64005258:	cmp    edi,ebp
6400525a:	setne  al
6400525d:	test   eax,eax
6400525f:	setl   al
64005262:	test   al,al
64005264:	mov    BYTE PTR [esp+0x10],al
64005268:	je     0x6400526e
6400526a:	mov    esi,DWORD PTR [esi]
6400526c:	jmp    0x64005271
6400526e:	mov    esi,DWORD PTR [esi+0x8]
64005271:	cmp    BYTE PTR [esi+0x45],0x0
64005275:	je     0x640051e0
6400527b:	mov    ebp,DWORD PTR [esp+0x20]
6400527f:	mov    ecx,DWORD PTR [esp+0x2c]
64005283:	test   al,al
64005285:	mov    esi,ebp
64005287:	mov    DWORD PTR [esp+0x24],esi
6400528b:	mov    DWORD PTR [esp+0x20],ecx
6400528f:	je     0x640052d3
64005291:	mov    edx,DWORD PTR [ecx+0x4]
64005294:	cmp    ebp,DWORD PTR [edx]
64005296:	jne    0x640052c6
64005298:	mov    eax,DWORD PTR [esp+0x34]
6400529c:	push   eax
6400529d:	push   0x1
6400529f:	lea    edx,[esp+0x28]
640052a3:	push   edx
640052a4:	push   ecx
640052a5:	mov    ecx,ebp
640052a7:	call   0x64005330
640052ac:	mov    ecx,DWORD PTR [eax]
640052ae:	mov    edx,DWORD PTR [eax+0x4]
640052b1:	mov    DWORD PTR [ebx],ecx
640052b3:	mov    DWORD PTR [ebx+0x4],edx
640052b6:	mov    BYTE PTR [ebx+0x8],0x1
640052ba:	mov    eax,ebx
640052bc:	pop    edi
640052bd:	pop    esi
640052be:	pop    ebp
640052bf:	pop    ebx
640052c0:	add    esp,0x18
640052c3:	ret    0xc
640052c6:	lea    esi,[esp+0x20]
640052ca:	call   0x640064e0
640052cf:	mov    esi,DWORD PTR [esp+0x24]
640052d3:	mov    eax,DWORD PTR [esp+0x34]
640052d7:	cmp    DWORD PTR [eax+0x18],0x8
640052db:	mov    edi,DWORD PTR [eax+0x14]
640052de:	lea    ecx,[esi+0xc]
640052e1:	jb     0x640052e8
640052e3:	mov    eax,DWORD PTR [eax+0x4]
640052e6:	jmp    0x640052eb
640052e8:	add    eax,0x4
640052eb:	push   eax
640052ec:	mov    eax,DWORD PTR [ecx+0x14]
640052ef:	call   0x64006930
640052f4:	test   eax,eax
640052f6:	jge    0x6400530e
640052f8:	mov    eax,DWORD PTR [esp+0x34]
640052fc:	mov    ecx,DWORD PTR [esp+0x10]
64005300:	push   eax
64005301:	mov    eax,DWORD PTR [esp+0x30]
64005305:	push   ecx
64005306:	lea    edx,[esp+0x28]
6400530a:	push   edx
6400530b:	push   eax
6400530c:	jmp    0x640052a5
6400530e:	mov    eax,DWORD PTR [esp+0x20]
64005312:	pop    edi
64005313:	mov    DWORD PTR [ebx+0x4],esi
64005316:	pop    esi
64005317:	mov    DWORD PTR [ebx],eax
64005319:	pop    ebp
6400531a:	mov    BYTE PTR [ebx+0x8],0x0
6400531e:	mov    eax,ebx
64005320:	pop    ebx
64005321:	add    esp,0x18
64005324:	ret    0xc
64005327:	int3   
64005328:	int3   
64005329:	int3   
6400532a:	int3   
6400532b:	int3   
6400532c:	int3   
6400532d:	int3   
6400532e:	int3   
6400532f:	int3   
64005330:	push   0xffffffff
64005332:	push   0x640235b8
64005337:	mov    eax,fs:0x0
6400533d:	push   eax
6400533e:	sub    esp,0x44
64005341:	push   ebx
64005342:	push   ebp
64005343:	push   esi
64005344:	push   edi
64005345:	mov    eax,ds:0x640521ac
6400534a:	xor    eax,esp
6400534c:	push   eax
6400534d:	lea    eax,[esp+0x58]
64005351:	mov    fs:0x0,eax
64005357:	mov    esi,ecx
64005359:	mov    ebp,DWORD PTR [esp+0x68]
6400535d:	cmp    DWORD PTR [ebp+0x8],0x4924923
64005364:	jb     0x640053b1
64005366:	push   0x13
64005368:	xor    ebx,ebx
6400536a:	push   0x64041d78
6400536f:	lea    ecx,[esp+0x1c]
64005373:	mov    DWORD PTR [esp+0x34],0xf
6400537b:	mov    DWORD PTR [esp+0x30],ebx
6400537f:	mov    BYTE PTR [esp+0x20],bl
64005383:	call   0x64003410
64005388:	lea    eax,[esp+0x14]
6400538c:	push   eax
6400538d:	lea    ecx,[esp+0x34]
64005391:	mov    DWORD PTR [esp+0x64],ebx
64005395:	call   0x64001350
6400539a:	push   0x64044194
6400539f:	lea    ecx,[esp+0x34]
640053a3:	push   ecx
640053a4:	mov    DWORD PTR [esp+0x38],0x6402c2e8
640053ac:	call   0x64013884
640053b1:	mov    edx,DWORD PTR [esp+0x74]
640053b5:	mov    eax,DWORD PTR [ebp+0x4]
640053b8:	push   edx
640053b9:	push   eax
640053ba:	push   esi
640053bb:	push   eax
640053bc:	call   0x64005c50
640053c1:	mov    ecx,DWORD PTR [ebp+0x4]
640053c4:	mov    edx,eax
640053c6:	mov    eax,0x1
640053cb:	add    DWORD PTR [ebp+0x8],eax
640053ce:	xor    ebx,ebx
640053d0:	cmp    esi,ecx
640053d2:	mov    DWORD PTR [esp+0x68],edx
640053d6:	jne    0x640053e5
640053d8:	mov    DWORD PTR [ecx+0x4],edx
640053db:	mov    ecx,DWORD PTR [ebp+0x4]
640053de:	mov    DWORD PTR [ecx],edx
640053e0:	mov    ecx,DWORD PTR [ebp+0x4]
640053e3:	jmp    0x64005403
640053e5:	cmp    BYTE PTR [esp+0x70],bl
640053e9:	je     0x640053f8
640053eb:	mov    DWORD PTR [esi],edx
640053ed:	mov    ecx,DWORD PTR [ebp+0x4]
640053f0:	cmp    esi,DWORD PTR [ecx]
640053f2:	jne    0x64005406
640053f4:	mov    DWORD PTR [ecx],edx
640053f6:	jmp    0x64005406
640053f8:	mov    DWORD PTR [esi+0x8],edx
640053fb:	mov    ecx,DWORD PTR [ebp+0x4]
640053fe:	cmp    esi,DWORD PTR [ecx+0x8]
64005401:	jne    0x64005406
64005403:	mov    DWORD PTR [ecx+0x8],edx
64005406:	mov    esi,DWORD PTR [edx+0x4]
64005409:	cmp    BYTE PTR [esi+0x44],bl
6400540c:	lea    ecx,[edx+0x4]
6400540f:	jne    0x64005587
64005415:	mov    esi,DWORD PTR [ecx]
64005417:	mov    edi,DWORD PTR [esi+0x4]
6400541a:	cmp    esi,DWORD PTR [edi]
6400541c:	jne    0x640054c8
64005422:	mov    edi,DWORD PTR [edi+0x8]
64005425:	cmp    BYTE PTR [edi+0x44],bl
64005428:	je     0x640054cf
6400542e:	cmp    edx,DWORD PTR [esi+0x8]
64005431:	jne    0x6400546e
64005433:	mov    edx,esi
64005435:	mov    esi,DWORD PTR [edx+0x8]
64005438:	mov    ecx,DWORD PTR [esi]
6400543a:	mov    DWORD PTR [edx+0x8],ecx
6400543d:	mov    ecx,DWORD PTR [esi]
6400543f:	cmp    BYTE PTR [ecx+0x45],bl
64005442:	jne    0x64005447
64005444:	mov    DWORD PTR [ecx+0x4],edx
64005447:	mov    edi,DWORD PTR [edx+0x4]
6400544a:	lea    ecx,[edx+0x4]
6400544d:	mov    DWORD PTR [esi+0x4],edi
64005450:	mov    edi,DWORD PTR [ebp+0x4]
64005453:	cmp    edx,DWORD PTR [edi+0x4]
64005456:	jne    0x6400545d
64005458:	mov    DWORD PTR [edi+0x4],esi
6400545b:	jmp    0x6400546a
6400545d:	mov    edi,DWORD PTR [ecx]
6400545f:	cmp    edx,DWORD PTR [edi]
64005461:	jne    0x64005467
64005463:	mov    DWORD PTR [edi],esi
64005465:	jmp    0x6400546a
64005467:	mov    DWORD PTR [edi+0x8],esi
6400546a:	mov    DWORD PTR [esi],edx
6400546c:	mov    DWORD PTR [ecx],esi
6400546e:	mov    esi,DWORD PTR [ecx]
64005470:	mov    BYTE PTR [esi+0x44],al
64005473:	mov    esi,DWORD PTR [ecx]
64005475:	mov    esi,DWORD PTR [esi+0x4]
64005478:	mov    BYTE PTR [esi+0x44],bl
6400547b:	mov    ecx,DWORD PTR [ecx]
6400547d:	mov    ecx,DWORD PTR [ecx+0x4]
64005480:	mov    esi,DWORD PTR [ecx]
64005482:	mov    edi,DWORD PTR [esi+0x8]
64005485:	mov    DWORD PTR [ecx],edi
64005487:	mov    edi,DWORD PTR [esi+0x8]
6400548a:	cmp    BYTE PTR [edi+0x45],bl
6400548d:	jne    0x64005492
6400548f:	mov    DWORD PTR [edi+0x4],ecx
64005492:	mov    edi,DWORD PTR [ecx+0x4]
64005495:	mov    DWORD PTR [esi+0x4],edi
64005498:	mov    edi,DWORD PTR [ebp+0x4]
6400549b:	cmp    ecx,DWORD PTR [edi+0x4]
6400549e:	jne    0x640054ab
640054a0:	mov    DWORD PTR [edi+0x4],esi
640054a3:	mov    DWORD PTR [esi+0x8],ecx
640054a6:	jmp    0x64005571
640054ab:	mov    edi,DWORD PTR [ecx+0x4]
640054ae:	cmp    ecx,DWORD PTR [edi+0x8]
640054b1:	jne    0x640054be
640054b3:	mov    DWORD PTR [edi+0x8],esi
640054b6:	mov    DWORD PTR [esi+0x8],ecx
640054b9:	jmp    0x64005571
640054be:	mov    DWORD PTR [edi],esi
640054c0:	mov    DWORD PTR [esi+0x8],ecx
640054c3:	jmp    0x64005571
640054c8:	mov    edi,DWORD PTR [edi]
640054ca:	cmp    BYTE PTR [edi+0x44],bl
640054cd:	jne    0x640054e9
640054cf:	mov    edx,esi
640054d1:	mov    BYTE PTR [edx+0x44],al
640054d4:	mov    BYTE PTR [edi+0x44],al
640054d7:	mov    edx,DWORD PTR [ecx]
640054d9:	mov    edx,DWORD PTR [edx+0x4]
640054dc:	mov    BYTE PTR [edx+0x44],bl
640054df:	mov    ecx,DWORD PTR [ecx]
640054e1:	mov    edx,DWORD PTR [ecx+0x4]
640054e4:	jmp    0x64005574
640054e9:	cmp    edx,DWORD PTR [esi]
640054eb:	jne    0x6400552a
640054ed:	mov    edx,esi
640054ef:	mov    esi,DWORD PTR [edx]
640054f1:	mov    ecx,DWORD PTR [esi+0x8]
640054f4:	mov    DWORD PTR [edx],ecx
640054f6:	mov    ecx,DWORD PTR [esi+0x8]
640054f9:	cmp    BYTE PTR [ecx+0x45],bl
640054fc:	jne    0x64005501
640054fe:	mov    DWORD PTR [ecx+0x4],edx
64005501:	mov    edi,DWORD PTR [edx+0x4]
64005504:	lea    ecx,[edx+0x4]
64005507:	mov    DWORD PTR [esi+0x4],edi
6400550a:	mov    edi,DWORD PTR [ebp+0x4]
6400550d:	cmp    edx,DWORD PTR [edi+0x4]
64005510:	jne    0x64005517
64005512:	mov    DWORD PTR [edi+0x4],esi
64005515:	jmp    0x64005525
64005517:	mov    edi,DWORD PTR [ecx]
64005519:	cmp    edx,DWORD PTR [edi+0x8]
6400551c:	jne    0x64005523
6400551e:	mov    DWORD PTR [edi+0x8],esi
64005521:	jmp    0x64005525
64005523:	mov    DWORD PTR [edi],esi
64005525:	mov    DWORD PTR [esi+0x8],edx
64005528:	mov    DWORD PTR [ecx],esi
6400552a:	mov    esi,DWORD PTR [ecx]
6400552c:	mov    BYTE PTR [esi+0x44],al
6400552f:	mov    esi,DWORD PTR [ecx]
64005531:	mov    esi,DWORD PTR [esi+0x4]
64005534:	mov    BYTE PTR [esi+0x44],bl
64005537:	mov    ecx,DWORD PTR [ecx]
64005539:	mov    ecx,DWORD PTR [ecx+0x4]
6400553c:	mov    esi,DWORD PTR [ecx+0x8]
6400553f:	mov    edi,DWORD PTR [esi]
64005541:	mov    DWORD PTR [ecx+0x8],edi
64005544:	mov    edi,DWORD PTR [esi]
64005546:	cmp    BYTE PTR [edi+0x45],bl
64005549:	jne    0x6400554e
6400554b:	mov    DWORD PTR [edi+0x4],ecx
6400554e:	mov    edi,DWORD PTR [ecx+0x4]
64005551:	mov    DWORD PTR [esi+0x4],edi
64005554:	mov    edi,DWORD PTR [ebp+0x4]
64005557:	cmp    ecx,DWORD PTR [edi+0x4]
6400555a:	jne    0x64005561
6400555c:	mov    DWORD PTR [edi+0x4],esi
6400555f:	jmp    0x6400556f
64005561:	mov    edi,DWORD PTR [ecx+0x4]
64005564:	cmp    ecx,DWORD PTR [edi]
64005566:	jne    0x6400556c
64005568:	mov    DWORD PTR [edi],esi
6400556a:	jmp    0x6400556f
6400556c:	mov    DWORD PTR [edi+0x8],esi
6400556f:	mov    DWORD PTR [esi],ecx
64005571:	mov    DWORD PTR [ecx+0x4],esi
64005574:	mov    esi,DWORD PTR [edx+0x4]
64005577:	cmp    BYTE PTR [esi+0x44],bl
6400557a:	lea    ecx,[edx+0x4]
6400557d:	je     0x64005415
64005583:	mov    edx,DWORD PTR [esp+0x68]
64005587:	mov    ecx,DWORD PTR [ebp+0x4]
6400558a:	mov    ecx,DWORD PTR [ecx+0x4]
6400558d:	mov    BYTE PTR [ecx+0x44],al
64005590:	mov    ecx,DWORD PTR [esp+0x6c]
64005594:	mov    DWORD PTR [ecx+0x4],edx
64005597:	mov    DWORD PTR [ecx],ebp
64005599:	mov    eax,ecx
6400559b:	mov    ecx,DWORD PTR [esp+0x58]
6400559f:	mov    DWORD PTR fs:0x0,ecx
640055a6:	pop    ecx
640055a7:	pop    edi
640055a8:	pop    esi
640055a9:	pop    ebp
640055aa:	pop    ebx
640055ab:	add    esp,0x50
640055ae:	ret    0x10
640055b1:	int3   
640055b2:	int3   
640055b3:	int3   
640055b4:	int3   
640055b5:	int3   
640055b6:	int3   
640055b7:	int3   
640055b8:	int3   
640055b9:	int3   
640055ba:	int3   
640055bb:	int3   
640055bc:	int3   
640055bd:	int3   
640055be:	int3   
640055bf:	int3   
640055c0:	sub    esp,0xc
640055c3:	mov    eax,DWORD PTR [eax+0x4]
640055c6:	push   edi
640055c7:	mov    edi,DWORD PTR [eax+0x4]
640055ca:	cmp    BYTE PTR [edi+0x45],0x0
640055ce:	mov    DWORD PTR [esp+0x4],eax
640055d2:	jne    0x6400566f
640055d8:	mov    edx,DWORD PTR [ecx+0x18]
640055db:	push   ebx
640055dc:	push   ebp
640055dd:	mov    ebp,DWORD PTR [ecx+0x14]
640055e0:	add    ecx,0x4
640055e3:	push   esi
640055e4:	mov    DWORD PTR [esp+0x18],edx
640055e8:	mov    DWORD PTR [esp+0x14],ecx
640055ec:	jmp    0x640055f4
640055ee:	mov    edi,edi
640055f0:	mov    ecx,DWORD PTR [esp+0x14]
640055f4:	mov    eax,0x8
640055f9:	cmp    DWORD PTR [esp+0x18],eax
640055fd:	jb     0x64005601
640055ff:	mov    ecx,DWORD PTR [ecx]
64005601:	mov    ebx,DWORD PTR [edi+0x20]
64005604:	mov    edx,ebx
64005606:	cmp    edx,ebx
64005608:	jae    0x6400560a
6400560a:	cmp    ebx,ebp
6400560c:	mov    esi,ebx
6400560e:	jb     0x64005612
64005610:	mov    esi,ebp
64005612:	cmp    DWORD PTR [edi+0x24],eax
64005615:	jb     0x6400561c
64005617:	mov    edx,DWORD PTR [edi+0x10]
6400561a:	jmp    0x6400561f
6400561c:	lea    edx,[edi+0x10]
6400561f:	test   esi,esi
64005621:	jbe    0x64005648
64005623:	mov    ax,WORD PTR [edx]
64005626:	cmp    ax,WORD PTR [ecx]
64005629:	jne    0x64005638
6400562b:	add    edx,0x2
6400562e:	add    ecx,0x2
64005631:	sub    esi,0x1
64005634:	jne    0x64005623
64005636:	jmp    0x64005648
64005638:	mov    dx,ax
6400563b:	cmp    dx,WORD PTR [ecx]
6400563e:	sbb    ecx,ecx
64005640:	and    ecx,0xfffffffe
64005643:	add    ecx,0x1
64005646:	jne    0x64005653
64005648:	cmp    ebx,ebp
6400564a:	jb     0x64005657
6400564c:	xor    ecx,ecx
6400564e:	cmp    ebx,ebp
64005650:	setne  cl
64005653:	test   ecx,ecx
64005655:	jge    0x6400565c
64005657:	mov    edi,DWORD PTR [edi+0x8]
6400565a:	jmp    0x64005662
6400565c:	mov    DWORD PTR [esp+0x10],edi
64005660:	mov    edi,DWORD PTR [edi]
64005662:	cmp    BYTE PTR [edi+0x45],0x0
64005666:	je     0x640055f0
64005668:	mov    eax,DWORD PTR [esp+0x10]
6400566c:	pop    esi
6400566d:	pop    ebp
6400566e:	pop    ebx
6400566f:	pop    edi
64005670:	add    esp,0xc
64005673:	ret    
64005674:	int3   
64005675:	int3   
64005676:	int3   
64005677:	int3   
64005678:	int3   
64005679:	int3   
6400567a:	int3   
6400567b:	int3   
6400567c:	int3   
6400567d:	int3   
6400567e:	int3   
6400567f:	int3   
64005680:	push   ebp
64005681:	mov    ebp,esp
64005683:	and    esp,0xfffffff8
64005686:	sub    esp,0x14
64005689:	push   ebx
6400568a:	push   esi
6400568b:	push   edi
6400568c:	mov    edi,ecx
6400568e:	mov    eax,DWORD PTR [edi+0x4]
64005691:	mov    ebx,DWORD PTR [eax]
64005693:	mov    eax,DWORD PTR [ebp+0xc]
64005696:	test   eax,eax
64005698:	je     0x6400569e
6400569a:	cmp    eax,edi
6400569c:	je     0x640056a3
6400569e:	call   0x64013e86
640056a3:	mov    esi,DWORD PTR [ebp+0x10]
640056a6:	cmp    esi,ebx
640056a8:	jne    0x64005700
640056aa:	mov    eax,DWORD PTR [ebp+0x14]
640056ad:	test   eax,eax
640056af:	mov    ebx,DWORD PTR [edi+0x4]
640056b2:	je     0x640056b8
640056b4:	cmp    eax,edi
640056b6:	je     0x640056bd
640056b8:	call   0x64013e86
640056bd:	cmp    DWORD PTR [ebp+0x18],ebx
640056c0:	jne    0x64005700
640056c2:	mov    ecx,DWORD PTR [edi+0x4]
640056c5:	mov    edx,DWORD PTR [ecx+0x4]
640056c8:	push   edx
640056c9:	mov    ecx,edi
640056cb:	call   0x640066d0
640056d0:	mov    eax,DWORD PTR [edi+0x4]
640056d3:	mov    DWORD PTR [eax+0x4],eax
640056d6:	mov    eax,DWORD PTR [edi+0x4]
640056d9:	mov    DWORD PTR [edi+0x8],0x0
640056e0:	mov    DWORD PTR [eax],eax
640056e2:	mov    eax,DWORD PTR [edi+0x4]
640056e5:	mov    DWORD PTR [eax+0x8],eax
640056e8:	mov    eax,DWORD PTR [edi+0x4]
640056eb:	mov    ecx,DWORD PTR [eax]
640056ed:	mov    eax,DWORD PTR [ebp+0x8]
640056f0:	mov    DWORD PTR [eax+0x4],ecx
640056f3:	mov    DWORD PTR [eax],edi
640056f5:	pop    edi
640056f6:	pop    esi
640056f7:	pop    ebx
640056f8:	mov    esp,ebp
640056fa:	pop    ebp
640056fb:	ret    0x14
640056fe:	mov    edi,edi
64005700:	mov    ebx,DWORD PTR [ebp+0xc]
64005703:	test   ebx,ebx
64005705:	je     0x6400570c
64005707:	cmp    ebx,DWORD PTR [ebp+0x14]
6400570a:	je     0x64005711
6400570c:	call   0x64013e86
64005711:	cmp    esi,DWORD PTR [ebp+0x18]
64005714:	je     0x6400577e
64005716:	test   ebx,ebx
64005718:	mov    DWORD PTR [esp+0x14],esi
6400571c:	jne    0x64005723
6400571e:	call   0x64013e86
64005723:	cmp    BYTE PTR [esi+0x45],0x0
64005727:	je     0x64005730
64005729:	call   0x64013e86
6400572e:	jmp    0x6400576a
64005730:	mov    eax,DWORD PTR [esi+0x8]
64005733:	cmp    BYTE PTR [eax+0x45],0x0
64005737:	jne    0x6400574f
64005739:	mov    esi,eax
6400573b:	mov    eax,DWORD PTR [esi]
6400573d:	cmp    BYTE PTR [eax+0x45],0x0
64005741:	jne    0x6400576a
64005743:	mov    esi,eax
64005745:	mov    eax,DWORD PTR [esi]
64005747:	cmp    BYTE PTR [eax+0x45],0x0
6400574b:	je     0x64005743
6400574d:	jmp    0x6400576a
6400574f:	mov    eax,DWORD PTR [esi+0x4]
64005752:	cmp    BYTE PTR [eax+0x45],0x0
64005756:	jne    0x64005768
64005758:	cmp    esi,DWORD PTR [eax+0x8]
6400575b:	jne    0x64005768
6400575d:	mov    esi,eax
6400575f:	mov    eax,DWORD PTR [eax+0x4]
64005762:	cmp    BYTE PTR [eax+0x45],0x0
64005766:	je     0x64005758
64005768:	mov    esi,eax
6400576a:	mov    edx,DWORD PTR [esp+0x14]
6400576e:	push   edx
6400576f:	push   ebx
64005770:	lea    eax,[esp+0x20]
64005774:	push   eax
64005775:	mov    ecx,edi
64005777:	call   0x64005cf0
6400577c:	jmp    0x64005700
6400577e:	mov    eax,DWORD PTR [ebp+0x8]
64005781:	pop    edi
64005782:	mov    DWORD PTR [eax+0x4],esi
64005785:	pop    esi
64005786:	mov    DWORD PTR [eax],ebx
64005788:	pop    ebx
64005789:	mov    esp,ebp
6400578b:	pop    ebp
6400578c:	ret    0x14
6400578f:	int3   
64005790:	mov    edx,DWORD PTR [esp+0x4]
64005794:	mov    eax,DWORD PTR [edx+0x8]
64005797:	push   esi
64005798:	mov    esi,DWORD PTR [eax]
6400579a:	mov    DWORD PTR [edx+0x8],esi
6400579d:	mov    esi,DWORD PTR [eax]
6400579f:	cmp    BYTE PTR [esi+0x45],0x0
640057a3:	jne    0x640057a8
640057a5:	mov    DWORD PTR [esi+0x4],edx
640057a8:	mov    esi,DWORD PTR [edx+0x4]
640057ab:	mov    DWORD PTR [eax+0x4],esi
640057ae:	mov    ecx,DWORD PTR [ecx+0x4]
640057b1:	cmp    edx,DWORD PTR [ecx+0x4]
640057b4:	pop    esi
640057b5:	jne    0x640057c2
640057b7:	mov    DWORD PTR [ecx+0x4],eax
640057ba:	mov    DWORD PTR [eax],edx
640057bc:	mov    DWORD PTR [edx+0x4],eax
640057bf:	ret    0x4
640057c2:	mov    ecx,DWORD PTR [edx+0x4]
640057c5:	cmp    edx,DWORD PTR [ecx]
640057c7:	jne    0x640057d3
640057c9:	mov    DWORD PTR [ecx],eax
640057cb:	mov    DWORD PTR [eax],edx
640057cd:	mov    DWORD PTR [edx+0x4],eax
640057d0:	ret    0x4
640057d3:	mov    DWORD PTR [ecx+0x8],eax
640057d6:	mov    DWORD PTR [eax],edx
640057d8:	mov    DWORD PTR [edx+0x4],eax
640057db:	ret    0x4
640057de:	int3   
640057df:	int3   
640057e0:	mov    edx,DWORD PTR [esp+0x4]
640057e4:	mov    eax,DWORD PTR [edx]
640057e6:	push   esi
640057e7:	mov    esi,DWORD PTR [eax+0x8]
640057ea:	mov    DWORD PTR [edx],esi
640057ec:	mov    esi,DWORD PTR [eax+0x8]
640057ef:	cmp    BYTE PTR [esi+0x45],0x0
640057f3:	jne    0x640057f8
640057f5:	mov    DWORD PTR [esi+0x4],edx
640057f8:	mov    esi,DWORD PTR [edx+0x4]
640057fb:	mov    DWORD PTR [eax+0x4],esi
640057fe:	mov    ecx,DWORD PTR [ecx+0x4]
64005801:	cmp    edx,DWORD PTR [ecx+0x4]
64005804:	pop    esi
64005805:	jne    0x64005813
64005807:	mov    DWORD PTR [ecx+0x4],eax
6400580a:	mov    DWORD PTR [eax+0x8],edx
6400580d:	mov    DWORD PTR [edx+0x4],eax
64005810:	ret    0x4
64005813:	mov    ecx,DWORD PTR [edx+0x4]
64005816:	cmp    edx,DWORD PTR [ecx+0x8]
64005819:	jne    0x64005827
6400581b:	mov    DWORD PTR [ecx+0x8],eax
6400581e:	mov    DWORD PTR [eax+0x8],edx
64005821:	mov    DWORD PTR [edx+0x4],eax
64005824:	ret    0x4
64005827:	mov    DWORD PTR [ecx],eax
64005829:	mov    DWORD PTR [eax+0x8],edx
6400582c:	mov    DWORD PTR [edx+0x4],eax
6400582f:	ret    0x4
64005832:	int3   
64005833:	int3   
64005834:	int3   
64005835:	int3   
64005836:	int3   
64005837:	int3   
64005838:	int3   
64005839:	int3   
6400583a:	int3   
6400583b:	int3   
6400583c:	int3   
6400583d:	int3   
6400583e:	int3   
6400583f:	int3   
64005840:	push   ebp
64005841:	mov    ebp,esp
64005843:	push   0xffffffff
64005845:	push   0x64023231
6400584a:	mov    eax,fs:0x0
64005850:	push   eax
64005851:	sub    esp,0xc
64005854:	push   ebx
64005855:	push   esi
64005856:	push   edi
64005857:	mov    eax,ds:0x640521ac
6400585c:	xor    eax,ebp
6400585e:	push   eax
6400585f:	lea    eax,[ebp-0xc]
64005862:	mov    fs:0x0,eax
64005868:	mov    DWORD PTR [ebp-0x10],esp
6400586b:	push   0x48
6400586d:	call   0x640138e7
64005872:	mov    esi,eax
64005874:	mov    DWORD PTR [ebp-0x4],0x0
6400587b:	add    esp,0x4
6400587e:	mov    DWORD PTR [ebp-0x14],esi
64005881:	mov    DWORD PTR [ebp-0x18],esi
64005884:	test   esi,esi
64005886:	mov    BYTE PTR [ebp-0x4],0x1
6400588a:	je     0x640058b3
6400588c:	mov    eax,DWORD PTR [ebp+0x8]
6400588f:	mov    ecx,DWORD PTR [ebp+0xc]
64005892:	mov    edx,DWORD PTR [ebp+0x10]
64005895:	mov    DWORD PTR [esi],eax
64005897:	mov    eax,DWORD PTR [ebp+0x14]
6400589a:	mov    DWORD PTR [esi+0x4],ecx
6400589d:	push   eax
6400589e:	lea    ecx,[esi+0xc]
640058a1:	mov    DWORD PTR [esi+0x8],edx
640058a4:	call   0x640065d0
640058a9:	mov    cl,BYTE PTR [ebp+0x18]
640058ac:	mov    BYTE PTR [esi+0x44],cl
640058af:	mov    BYTE PTR [esi+0x45],0x0
640058b3:	mov    eax,esi
640058b5:	mov    ecx,DWORD PTR [ebp-0xc]
640058b8:	mov    DWORD PTR fs:0x0,ecx
640058bf:	pop    ecx
640058c0:	pop    edi
640058c1:	pop    esi
640058c2:	pop    ebx
640058c3:	mov    esp,ebp
640058c5:	pop    ebp
640058c6:	ret    0x14
640058c9:	mov    edx,DWORD PTR [ebp-0x14]
640058cc:	push   edx
640058cd:	call   0x64013656
640058d2:	add    esp,0x4
640058d5:	push   0x0
640058d7:	push   0x0
640058d9:	call   0x64013884
640058de:	int3   
640058df:	int3   
640058e0:	push   ebp
640058e1:	mov    ebp,esp
640058e3:	push   0xffffffff
640058e5:	push   0x64023030
640058ea:	mov    eax,fs:0x0
640058f0:	push   eax
640058f1:	sub    esp,0x18
640058f4:	push   ebx
640058f5:	push   esi
640058f6:	push   edi
640058f7:	mov    eax,ds:0x640521ac
640058fc:	xor    eax,ebp
640058fe:	push   eax
640058ff:	lea    eax,[ebp-0xc]
64005902:	mov    fs:0x0,eax
64005908:	mov    DWORD PTR [ebp-0x10],esp
6400590b:	mov    eax,DWORD PTR [ebp+0xc]
6400590e:	mov    edi,DWORD PTR [ebp+0x8]
64005911:	mov    esi,eax
64005913:	or     esi,0x7
64005916:	cmp    esi,0x7ffffffe
6400591c:	jbe    0x64005922
6400591e:	mov    esi,eax
64005920:	jmp    0x64005944
64005922:	mov    ebx,DWORD PTR [edi+0x18]
64005925:	mov    eax,0xaaaaaaab
6400592a:	mul    esi
6400592c:	mov    ecx,ebx
6400592e:	shr    ecx,1
64005930:	shr    edx,1
64005932:	cmp    edx,ecx
64005934:	jae    0x64005944
64005936:	mov    eax,0x7ffffffe
6400593b:	sub    eax,ecx
6400593d:	cmp    ebx,eax
6400593f:	ja     0x64005944
64005941:	lea    esi,[ecx+ebx*1]
64005944:	xor    ebx,ebx
64005946:	lea    ecx,[esi+0x1]
64005949:	cmp    ecx,ebx
6400594b:	mov    DWORD PTR [ebp-0x4],ebx
6400594e:	ja     0x64005963
64005950:	xor    ecx,ecx
64005952:	lea    eax,[ecx+ecx*1]
64005955:	push   eax
64005956:	call   0x640138e7
6400595b:	add    esp,0x4
6400595e:	mov    DWORD PTR [ebp+0xc],eax
64005961:	jmp    0x640059b7
64005963:	or     eax,0xffffffff
64005966:	xor    edx,edx
64005968:	div    ecx
6400596a:	cmp    eax,0x2
6400596d:	jae    0x64005952
6400596f:	lea    ecx,[ebp-0x14]
64005972:	push   ecx
64005973:	lea    ecx,[ebp-0x24]
64005976:	mov    DWORD PTR [ebp-0x14],ebx
64005979:	call   0x6401366c
6400597e:	push   0x640441cc
64005983:	lea    edx,[ebp-0x24]
64005986:	push   edx
64005987:	mov    DWORD PTR [ebp-0x24],0x6402c2ac
6400598e:	call   0x64013884
64005993:	mov    eax,DWORD PTR [ebp+0xc]
64005996:	lea    ecx,[eax+0x1]
64005999:	mov    DWORD PTR [ebp-0x10],esp
6400599c:	mov    DWORD PTR [ebp-0x18],eax
6400599f:	mov    BYTE PTR [ebp-0x4],0x2
640059a3:	call   0x64006110
640059a8:	mov    DWORD PTR [ebp+0xc],eax
640059ab:	mov    eax,0x640059b1
640059b0:	ret    
640059b1:	mov    edi,DWORD PTR [ebp+0x8]
640059b4:	mov    esi,DWORD PTR [ebp-0x18]
640059b7:	mov    ebx,DWORD PTR [ebp+0x10]
640059ba:	test   ebx,ebx
640059bc:	jbe    0x640059e2
640059be:	cmp    DWORD PTR [edi+0x18],0x8
640059c2:	jb     0x640059c9
640059c4:	mov    eax,DWORD PTR [edi+0x4]
640059c7:	jmp    0x640059cc
640059c9:	lea    eax,[edi+0x4]
640059cc:	lea    ecx,[ebx+ebx*1]
640059cf:	push   ecx
640059d0:	push   eax
640059d1:	mov    eax,DWORD PTR [ebp+0xc]
640059d4:	lea    edx,[esi+esi*1+0x2]
640059d8:	push   edx
640059d9:	push   eax
640059da:	call   0x640137ae
640059df:	add    esp,0x10
640059e2:	cmp    DWORD PTR [edi+0x18],0x8
640059e6:	jb     0x640059f4
640059e8:	mov    ecx,DWORD PTR [edi+0x4]
640059eb:	push   ecx
640059ec:	call   0x64013656
640059f1:	add    esp,0x4
640059f4:	cmp    esi,0x8
640059f7:	mov    ecx,DWORD PTR [ebp+0xc]
640059fa:	lea    eax,[edi+0x4]
640059fd:	mov    WORD PTR [eax],0x0
64005a02:	mov    DWORD PTR [eax],ecx
64005a04:	mov    DWORD PTR [edi+0x18],esi
64005a07:	mov    DWORD PTR [edi+0x14],ebx
64005a0a:	jb     0x64005a0e
64005a0c:	mov    eax,ecx
64005a0e:	mov    WORD PTR [eax+ebx*2],0x0
64005a14:	mov    ecx,DWORD PTR [ebp-0xc]
64005a17:	mov    DWORD PTR fs:0x0,ecx
64005a1e:	pop    ecx
64005a1f:	pop    edi
64005a20:	pop    esi
64005a21:	pop    ebx
64005a22:	mov    esp,ebp
64005a24:	pop    ebp
64005a25:	ret    0xc
64005a28:	mov    esi,DWORD PTR [ebp+0x8]
64005a2b:	cmp    DWORD PTR [esi+0x18],0x8
64005a2f:	jb     0x64005a3d
64005a31:	mov    edx,DWORD PTR [esi+0x4]
64005a34:	push   edx
64005a35:	call   0x64013656
64005a3a:	add    esp,0x4
64005a3d:	xor    eax,eax
64005a3f:	push   eax
64005a40:	mov    DWORD PTR [esi+0x18],0x7
64005a47:	mov    DWORD PTR [esi+0x14],eax
64005a4a:	push   eax
64005a4b:	mov    WORD PTR [esi+0x4],ax
64005a4f:	call   0x64013884
64005a54:	int3   
64005a55:	int3   
64005a56:	int3   
64005a57:	int3   
64005a58:	int3   
64005a59:	int3   
64005a5a:	int3   
64005a5b:	int3   
64005a5c:	int3   
64005a5d:	int3   
64005a5e:	int3   
64005a5f:	int3   
64005a60:	mov    eax,ds:0x64054500
64005a65:	push   ebx
64005a66:	mov    ebx,DWORD PTR [esp+0xc]
64005a6a:	test   ebx,ebx
64005a6c:	push   ebp
64005a6d:	mov    ebp,DWORD PTR [esp+0xc]
64005a71:	push   esi
64005a72:	push   edi
64005a73:	mov    edi,DWORD PTR [eax]
64005a75:	je     0x64005a7f
64005a77:	cmp    ebx,0x640544fc
64005a7d:	je     0x64005a84
64005a7f:	call   0x64013e86
64005a84:	mov    esi,DWORD PTR [esp+0x1c]
64005a88:	cmp    esi,edi
64005a8a:	jne    0x64005b00
64005a8c:	mov    eax,DWORD PTR [esp+0x20]
64005a90:	test   eax,eax
64005a92:	mov    edi,DWORD PTR ds:0x64054500
64005a98:	je     0x64005aa1
64005a9a:	cmp    eax,0x640544fc
64005a9f:	je     0x64005aa6
64005aa1:	call   0x64013e86
64005aa6:	cmp    DWORD PTR [esp+0x24],edi
64005aaa:	jne    0x64005b00
64005aac:	mov    ecx,DWORD PTR ds:0x64054500
64005ab2:	mov    edx,DWORD PTR [ecx+0x4]
64005ab5:	push   edx
64005ab6:	mov    ecx,0x640544fc
64005abb:	call   0x64006790
64005ac0:	mov    eax,ds:0x64054500
64005ac5:	mov    DWORD PTR [eax+0x4],eax
64005ac8:	mov    eax,ds:0x64054500
64005acd:	mov    DWORD PTR ds:0x64054504,0x0
64005ad7:	mov    DWORD PTR [eax],eax
64005ad9:	mov    eax,ds:0x64054500
64005ade:	mov    DWORD PTR [eax+0x8],eax
64005ae1:	mov    eax,ds:0x64054500
64005ae6:	mov    ecx,DWORD PTR [eax]
64005ae8:	mov    DWORD PTR [ebp+0x4],ecx
64005aeb:	mov    DWORD PTR [ebp+0x0],0x640544fc
64005af2:	mov    eax,ebp
64005af4:	pop    edi
64005af5:	pop    esi
64005af6:	pop    ebp
64005af7:	pop    ebx
64005af8:	ret    0x14
64005afb:	jmp    0x64005b00
64005afd:	lea    ecx,[ecx+0x0]
64005b00:	test   ebx,ebx
64005b02:	je     0x64005b0a
64005b04:	cmp    ebx,DWORD PTR [esp+0x20]
64005b08:	je     0x64005b0f
64005b0a:	call   0x64013e86
64005b0f:	cmp    esi,DWORD PTR [esp+0x24]
64005b13:	je     0x64005b94
64005b15:	test   ebx,ebx
64005b17:	mov    edi,esi
64005b19:	jne    0x64005b20
64005b1b:	call   0x64013e86
64005b20:	cmp    BYTE PTR [esi+0x45],0x0
64005b24:	je     0x64005b39
64005b26:	call   0x64013e86
64005b2b:	push   edi
64005b2c:	push   ebx
64005b2d:	lea    edx,[esp+0x20]
64005b31:	push   edx
64005b32:	call   0x64006170
64005b37:	jmp    0x64005b00
64005b39:	mov    eax,DWORD PTR [esi+0x8]
64005b3c:	cmp    BYTE PTR [eax+0x45],0x0
64005b40:	jne    0x64005b68
64005b42:	mov    esi,eax
64005b44:	mov    eax,DWORD PTR [esi]
64005b46:	cmp    BYTE PTR [eax+0x45],0x0
64005b4a:	jne    0x64005b83
64005b4c:	lea    esp,[esp+0x0]
64005b50:	mov    esi,eax
64005b52:	mov    eax,DWORD PTR [esi]
64005b54:	cmp    BYTE PTR [eax+0x45],0x0
64005b58:	je     0x64005b50
64005b5a:	push   edi
64005b5b:	push   ebx
64005b5c:	lea    edx,[esp+0x20]
64005b60:	push   edx
64005b61:	call   0x64006170
64005b66:	jmp    0x64005b00
64005b68:	mov    eax,DWORD PTR [esi+0x4]
64005b6b:	cmp    BYTE PTR [eax+0x45],0x0
64005b6f:	jne    0x64005b81
64005b71:	cmp    esi,DWORD PTR [eax+0x8]
64005b74:	jne    0x64005b81
64005b76:	mov    esi,eax
64005b78:	mov    eax,DWORD PTR [eax+0x4]
64005b7b:	cmp    BYTE PTR [eax+0x45],0x0
64005b7f:	je     0x64005b71
64005b81:	mov    esi,eax
64005b83:	push   edi
64005b84:	push   ebx
64005b85:	lea    edx,[esp+0x20]
64005b89:	push   edx
64005b8a:	call   0x64006170
64005b8f:	jmp    0x64005b00
64005b94:	pop    edi
64005b95:	mov    DWORD PTR [ebp+0x4],esi
64005b98:	pop    esi
64005b99:	mov    DWORD PTR [ebp+0x0],ebx
64005b9c:	mov    eax,ebp
64005b9e:	pop    ebp
64005b9f:	pop    ebx
64005ba0:	ret    0x14
64005ba3:	int3   
64005ba4:	int3   
64005ba5:	int3   
64005ba6:	int3   
64005ba7:	int3   
64005ba8:	int3   
64005ba9:	int3   
64005baa:	int3   
64005bab:	int3   
64005bac:	int3   
64005bad:	int3   
64005bae:	int3   
64005baf:	int3   
64005bb0:	mov    eax,DWORD PTR [ecx+0x8]
64005bb3:	mov    edx,DWORD PTR [eax]
64005bb5:	mov    DWORD PTR [ecx+0x8],edx
64005bb8:	mov    edx,DWORD PTR [eax]
64005bba:	cmp    BYTE PTR [edx+0x45],0x0
64005bbe:	jne    0x64005bc3
64005bc0:	mov    DWORD PTR [edx+0x4],ecx
64005bc3:	mov    edx,DWORD PTR [ecx+0x4]
64005bc6:	mov    DWORD PTR [eax+0x4],edx
64005bc9:	mov    edx,DWORD PTR [esp+0x4]
64005bcd:	mov    edx,DWORD PTR [edx+0x4]
64005bd0:	cmp    ecx,DWORD PTR [edx+0x4]
64005bd3:	jne    0x64005be0
64005bd5:	mov    DWORD PTR [edx+0x4],eax
64005bd8:	mov    DWORD PTR [eax],ecx
64005bda:	mov    DWORD PTR [ecx+0x4],eax
64005bdd:	ret    0x4
64005be0:	mov    edx,DWORD PTR [ecx+0x4]
64005be3:	cmp    ecx,DWORD PTR [edx]
64005be5:	jne    0x64005bf1
64005be7:	mov    DWORD PTR [edx],eax
64005be9:	mov    DWORD PTR [eax],ecx
64005beb:	mov    DWORD PTR [ecx+0x4],eax
64005bee:	ret    0x4
64005bf1:	mov    DWORD PTR [edx+0x8],eax
64005bf4:	mov    DWORD PTR [eax],ecx
64005bf6:	mov    DWORD PTR [ecx+0x4],eax
64005bf9:	ret    0x4
64005bfc:	int3   
64005bfd:	int3   
64005bfe:	int3   
64005bff:	int3   
64005c00:	mov    eax,DWORD PTR [ecx]
64005c02:	mov    edx,DWORD PTR [eax+0x8]
64005c05:	mov    DWORD PTR [ecx],edx
64005c07:	mov    edx,DWORD PTR [eax+0x8]
64005c0a:	cmp    BYTE PTR [edx+0x45],0x0
64005c0e:	jne    0x64005c13
64005c10:	mov    DWORD PTR [edx+0x4],ecx
64005c13:	mov    edx,DWORD PTR [ecx+0x4]
64005c16:	mov    DWORD PTR [eax+0x4],edx
64005c19:	mov    edx,DWORD PTR [esp+0x4]
64005c1d:	mov    edx,DWORD PTR [edx+0x4]
64005c20:	cmp    ecx,DWORD PTR [edx+0x4]
64005c23:	jne    0x64005c31
64005c25:	mov    DWORD PTR [edx+0x4],eax
64005c28:	mov    DWORD PTR [eax+0x8],ecx
64005c2b:	mov    DWORD PTR [ecx+0x4],eax
64005c2e:	ret    0x4
64005c31:	mov    edx,DWORD PTR [ecx+0x4]
64005c34:	cmp    ecx,DWORD PTR [edx+0x8]
64005c37:	jne    0x64005c45
64005c39:	mov    DWORD PTR [edx+0x8],eax
64005c3c:	mov    DWORD PTR [eax+0x8],ecx
64005c3f:	mov    DWORD PTR [ecx+0x4],eax
64005c42:	ret    0x4
64005c45:	mov    DWORD PTR [edx],eax
64005c47:	mov    DWORD PTR [eax+0x8],ecx
64005c4a:	mov    DWORD PTR [ecx+0x4],eax
64005c4d:	ret    0x4
64005c50:	push   ebp
64005c51:	mov    ebp,esp
64005c53:	push   0xffffffff
64005c55:	push   0x64023201
64005c5a:	mov    eax,fs:0x0
64005c60:	push   eax
64005c61:	sub    esp,0xc
64005c64:	push   ebx
64005c65:	push   esi
64005c66:	push   edi
64005c67:	mov    eax,ds:0x640521ac
64005c6c:	xor    eax,ebp
64005c6e:	push   eax
64005c6f:	lea    eax,[ebp-0xc]
64005c72:	mov    fs:0x0,eax
64005c78:	mov    DWORD PTR [ebp-0x10],esp
64005c7b:	push   0x48
64005c7d:	call   0x640138e7
64005c82:	mov    esi,eax
64005c84:	mov    DWORD PTR [ebp-0x4],0x0
64005c8b:	add    esp,0x4
64005c8e:	mov    DWORD PTR [ebp-0x14],esi
64005c91:	mov    DWORD PTR [ebp-0x18],esi
64005c94:	test   esi,esi
64005c96:	mov    BYTE PTR [ebp-0x4],0x1
64005c9a:	je     0x64005cc1
64005c9c:	mov    eax,DWORD PTR [ebp+0x8]
64005c9f:	mov    ecx,DWORD PTR [ebp+0xc]
64005ca2:	mov    edx,DWORD PTR [ebp+0x10]
64005ca5:	mov    ebx,DWORD PTR [ebp+0x14]
64005ca8:	mov    DWORD PTR [esi],eax
64005caa:	lea    eax,[esi+0xc]
64005cad:	push   eax
64005cae:	mov    DWORD PTR [esi+0x4],ecx
64005cb1:	mov    DWORD PTR [esi+0x8],edx
64005cb4:	call   0x64006650
64005cb9:	xor    al,al
64005cbb:	mov    BYTE PTR [esi+0x44],al
64005cbe:	mov    BYTE PTR [esi+0x45],al
64005cc1:	mov    eax,esi
64005cc3:	mov    ecx,DWORD PTR [ebp-0xc]
64005cc6:	mov    DWORD PTR fs:0x0,ecx
64005ccd:	pop    ecx
64005cce:	pop    edi
64005ccf:	pop    esi
64005cd0:	pop    ebx
64005cd1:	mov    esp,ebp
64005cd3:	pop    ebp
64005cd4:	ret    0x10
64005cd7:	mov    ecx,DWORD PTR [ebp-0x14]
64005cda:	push   ecx
64005cdb:	call   0x64013656
64005ce0:	add    esp,0x4
64005ce3:	push   0x0
64005ce5:	push   0x0
64005ce7:	call   0x64013884
64005cec:	int3   
64005ced:	int3   
64005cee:	int3   
64005cef:	int3   
64005cf0:	push   ebp
64005cf1:	mov    ebp,esp
64005cf3:	and    esp,0xfffffff8
64005cf6:	push   0xffffffff
64005cf8:	push   0x64023588
64005cfd:	mov    eax,fs:0x0
64005d03:	push   eax
64005d04:	sub    esp,0x50
64005d07:	push   ebx
64005d08:	push   esi
64005d09:	push   edi
64005d0a:	mov    eax,ds:0x640521ac
64005d0f:	xor    eax,esp
64005d11:	push   eax
64005d12:	lea    eax,[esp+0x60]
64005d16:	mov    fs:0x0,eax
64005d1c:	mov    DWORD PTR [esp+0x14],ecx
64005d20:	mov    edi,DWORD PTR [ebp+0x10]
64005d23:	cmp    BYTE PTR [edi+0x45],0x0
64005d27:	je     0x64005d75
64005d29:	push   0x1b
64005d2b:	xor    esi,esi
64005d2d:	push   0x64041d8c
64005d32:	lea    ecx,[esp+0x20]
64005d36:	mov    DWORD PTR [esp+0x38],0xf
64005d3e:	mov    DWORD PTR [esp+0x34],esi
64005d42:	mov    BYTE PTR [esp+0x24],0x0
64005d47:	call   0x64003410
64005d4c:	lea    eax,[esp+0x18]
64005d50:	push   eax
64005d51:	lea    ecx,[esp+0x38]
64005d55:	mov    DWORD PTR [esp+0x6c],esi
64005d59:	call   0x64001350
64005d5e:	push   0x64044158
64005d63:	lea    ecx,[esp+0x38]
64005d67:	push   ecx
64005d68:	mov    DWORD PTR [esp+0x3c],0x6402c2f4
64005d70:	call   0x64013884
64005d75:	lea    ecx,[ebp+0xc]
64005d78:	call   0x640060a0
64005d7d:	mov    ecx,DWORD PTR [edi]
64005d7f:	cmp    BYTE PTR [ecx+0x45],0x0
64005d83:	je     0x64005d8a
64005d85:	mov    ebx,DWORD PTR [edi+0x8]
64005d88:	jmp    0x64005da1
64005d8a:	mov    edx,DWORD PTR [edi+0x8]
64005d8d:	cmp    BYTE PTR [edx+0x45],0x0
64005d91:	je     0x64005d97
64005d93:	mov    ebx,ecx
64005d95:	jmp    0x64005da1
64005d97:	mov    eax,DWORD PTR [ebp+0x10]
64005d9a:	cmp    eax,edi
64005d9c:	mov    ebx,DWORD PTR [eax+0x8]
64005d9f:	jne    0x64005e1d
64005da1:	cmp    BYTE PTR [ebx+0x45],0x0
64005da5:	mov    esi,DWORD PTR [edi+0x4]
64005da8:	jne    0x64005dad
64005daa:	mov    DWORD PTR [ebx+0x4],esi
64005dad:	mov    ecx,DWORD PTR [esp+0x14]
64005db1:	mov    eax,DWORD PTR [ecx+0x4]
64005db4:	cmp    DWORD PTR [eax+0x4],edi
64005db7:	jne    0x64005dbe
64005db9:	mov    DWORD PTR [eax+0x4],ebx
64005dbc:	jmp    0x64005dc9
64005dbe:	cmp    DWORD PTR [esi],edi
64005dc0:	jne    0x64005dc6
64005dc2:	mov    DWORD PTR [esi],ebx
64005dc4:	jmp    0x64005dc9
64005dc6:	mov    DWORD PTR [esi+0x8],ebx
64005dc9:	mov    eax,DWORD PTR [ecx+0x4]
64005dcc:	cmp    DWORD PTR [eax],edi
64005dce:	jne    0x64005dec
64005dd0:	cmp    BYTE PTR [ebx+0x45],0x0
64005dd4:	je     0x64005dda
64005dd6:	mov    eax,esi
64005dd8:	jmp    0x64005de7
64005dda:	push   ebx
64005ddb:	call   0x64006770
64005de0:	mov    ecx,DWORD PTR [esp+0x18]
64005de4:	add    esp,0x4
64005de7:	mov    edx,DWORD PTR [ecx+0x4]
64005dea:	mov    DWORD PTR [edx],eax
64005dec:	mov    eax,DWORD PTR [ecx+0x4]
64005def:	cmp    DWORD PTR [eax+0x8],edi
64005df2:	jne    0x64005e7c
64005df8:	cmp    BYTE PTR [ebx+0x45],0x0
64005dfc:	je     0x64005e08
64005dfe:	mov    edx,DWORD PTR [ecx+0x4]
64005e01:	mov    eax,esi
64005e03:	mov    DWORD PTR [edx+0x8],eax
64005e06:	jmp    0x64005e7c
64005e08:	push   ebx
64005e09:	call   0x64006750
64005e0e:	mov    ecx,DWORD PTR [esp+0x18]
64005e12:	mov    edx,DWORD PTR [ecx+0x4]
64005e15:	add    esp,0x4
64005e18:	mov    DWORD PTR [edx+0x8],eax
64005e1b:	jmp    0x64005e7c
64005e1d:	mov    DWORD PTR [ecx+0x4],eax
64005e20:	mov    ecx,DWORD PTR [edi]
64005e22:	mov    DWORD PTR [eax],ecx
64005e24:	cmp    eax,DWORD PTR [edi+0x8]
64005e27:	jne    0x64005e2d
64005e29:	mov    esi,eax
64005e2b:	jmp    0x64005e47
64005e2d:	cmp    BYTE PTR [ebx+0x45],0x0
64005e31:	mov    esi,DWORD PTR [eax+0x4]
64005e34:	jne    0x64005e39
64005e36:	mov    DWORD PTR [ebx+0x4],esi
64005e39:	mov    DWORD PTR [esi],ebx
64005e3b:	mov    edx,DWORD PTR [edi+0x8]
64005e3e:	mov    DWORD PTR [eax+0x8],edx
64005e41:	mov    ecx,DWORD PTR [edi+0x8]
64005e44:	mov    DWORD PTR [ecx+0x4],eax
64005e47:	mov    edx,DWORD PTR [esp+0x14]
64005e4b:	mov    ecx,DWORD PTR [edx+0x4]
64005e4e:	cmp    DWORD PTR [ecx+0x4],edi
64005e51:	jne    0x64005e58
64005e53:	mov    DWORD PTR [ecx+0x4],eax
64005e56:	jmp    0x64005e66
64005e58:	mov    ecx,DWORD PTR [edi+0x4]
64005e5b:	cmp    DWORD PTR [ecx],edi
64005e5d:	jne    0x64005e63
64005e5f:	mov    DWORD PTR [ecx],eax
64005e61:	jmp    0x64005e66
64005e63:	mov    DWORD PTR [ecx+0x8],eax
64005e66:	mov    ecx,DWORD PTR [edi+0x4]
64005e69:	mov    DWORD PTR [eax+0x4],ecx
64005e6c:	mov    cl,BYTE PTR [eax+0x44]
64005e6f:	mov    dl,BYTE PTR [edi+0x44]
64005e72:	mov    BYTE PTR [eax+0x44],dl
64005e75:	mov    BYTE PTR [edi+0x44],cl
64005e78:	mov    ecx,DWORD PTR [esp+0x14]
64005e7c:	cmp    BYTE PTR [edi+0x44],0x1
64005e80:	jne    0x64005f91
64005e86:	mov    eax,DWORD PTR [ecx+0x4]
64005e89:	cmp    ebx,DWORD PTR [eax+0x4]
64005e8c:	je     0x64005f8d
64005e92:	cmp    BYTE PTR [ebx+0x44],0x1
64005e96:	jne    0x64005f8d
64005e9c:	mov    eax,DWORD PTR [esi]
64005e9e:	cmp    ebx,eax
64005ea0:	jne    0x64005f10
64005ea2:	mov    eax,DWORD PTR [esi+0x8]
64005ea5:	cmp    BYTE PTR [eax+0x44],0x0
64005ea9:	jne    0x64005ec0
64005eab:	mov    BYTE PTR [eax+0x44],0x1
64005eaf:	push   esi
64005eb0:	mov    BYTE PTR [esi+0x44],0x0
64005eb4:	call   0x64005790
64005eb9:	mov    eax,DWORD PTR [esi+0x8]
64005ebc:	mov    ecx,DWORD PTR [esp+0x14]
64005ec0:	cmp    BYTE PTR [eax+0x45],0x0
64005ec4:	jne    0x64005f45
64005ec6:	mov    edx,DWORD PTR [eax]
64005ec8:	cmp    BYTE PTR [edx+0x44],0x1
64005ecc:	jne    0x64005ed7
64005ece:	mov    edx,DWORD PTR [eax+0x8]
64005ed1:	cmp    BYTE PTR [edx+0x44],0x1
64005ed5:	je     0x64005f41
64005ed7:	mov    edx,DWORD PTR [eax+0x8]
64005eda:	cmp    BYTE PTR [edx+0x44],0x1
64005ede:	jne    0x64005ef7
64005ee0:	mov    edx,DWORD PTR [eax]
64005ee2:	mov    BYTE PTR [edx+0x44],0x1
64005ee6:	push   eax
64005ee7:	mov    BYTE PTR [eax+0x44],0x0
64005eeb:	call   0x640057e0
64005ef0:	mov    eax,DWORD PTR [esi+0x8]
64005ef3:	mov    ecx,DWORD PTR [esp+0x14]
64005ef7:	mov    dl,BYTE PTR [esi+0x44]
64005efa:	mov    BYTE PTR [eax+0x44],dl
64005efd:	mov    BYTE PTR [esi+0x44],0x1
64005f01:	mov    eax,DWORD PTR [eax+0x8]
64005f04:	push   esi
64005f05:	mov    BYTE PTR [eax+0x44],0x1
64005f09:	call   0x64005790
64005f0e:	jmp    0x64005f8d
64005f10:	cmp    BYTE PTR [eax+0x44],0x0
64005f14:	jne    0x64005f2a
64005f16:	mov    BYTE PTR [eax+0x44],0x1
64005f1a:	push   esi
64005f1b:	mov    BYTE PTR [esi+0x44],0x0
64005f1f:	call   0x640057e0
64005f24:	mov    eax,DWORD PTR [esi]
64005f26:	mov    ecx,DWORD PTR [esp+0x14]
64005f2a:	cmp    BYTE PTR [eax+0x45],0x0
64005f2e:	jne    0x64005f45
64005f30:	mov    edx,DWORD PTR [eax+0x8]
64005f33:	cmp    BYTE PTR [edx+0x44],0x1
64005f37:	jne    0x64005f58
64005f39:	mov    edx,DWORD PTR [eax]
64005f3b:	cmp    BYTE PTR [edx+0x44],0x1
64005f3f:	jne    0x64005f58
64005f41:	mov    BYTE PTR [eax+0x44],0x0
64005f45:	mov    eax,DWORD PTR [ecx+0x4]
64005f48:	mov    ebx,esi
64005f4a:	cmp    ebx,DWORD PTR [eax+0x4]
64005f4d:	mov    esi,DWORD PTR [esi+0x4]
64005f50:	jne    0x64005e92
64005f56:	jmp    0x64005f8d
64005f58:	mov    edx,DWORD PTR [eax]
64005f5a:	cmp    BYTE PTR [edx+0x44],0x1
64005f5e:	jne    0x64005f77
64005f60:	mov    edx,DWORD PTR [eax+0x8]
64005f63:	mov    BYTE PTR [edx+0x44],0x1
64005f67:	push   eax
64005f68:	mov    BYTE PTR [eax+0x44],0x0
64005f6c:	call   0x64005790
64005f71:	mov    eax,DWORD PTR [esi]
64005f73:	mov    ecx,DWORD PTR [esp+0x14]
64005f77:	mov    dl,BYTE PTR [esi+0x44]
64005f7a:	mov    BYTE PTR [eax+0x44],dl
64005f7d:	mov    BYTE PTR [esi+0x44],0x1
64005f81:	mov    eax,DWORD PTR [eax]
64005f83:	push   esi
64005f84:	mov    BYTE PTR [eax+0x44],0x1
64005f88:	call   0x640057e0
64005f8d:	mov    BYTE PTR [ebx+0x44],0x1
64005f91:	cmp    DWORD PTR [edi+0x40],0x10
64005f95:	jb     0x64005fa3
64005f97:	mov    ecx,DWORD PTR [edi+0x2c]
64005f9a:	push   ecx
64005f9b:	call   0x64013656
64005fa0:	add    esp,0x4
64005fa3:	xor    esi,esi
64005fa5:	mov    ebx,0xf
64005faa:	mov    DWORD PTR [edi+0x40],ebx
64005fad:	mov    DWORD PTR [edi+0x3c],esi
64005fb0:	mov    BYTE PTR [edi+0x2c],0x0
64005fb4:	cmp    DWORD PTR [edi+0x24],0x10
64005fb8:	jb     0x64005fc6
64005fba:	mov    edx,DWORD PTR [edi+0x10]
64005fbd:	push   edx
64005fbe:	call   0x64013656
64005fc3:	add    esp,0x4
64005fc6:	mov    DWORD PTR [edi+0x24],ebx
64005fc9:	mov    DWORD PTR [edi+0x20],esi
64005fcc:	push   edi
64005fcd:	mov    BYTE PTR [edi+0x10],0x0
64005fd1:	call   0x64013656
64005fd6:	mov    ecx,DWORD PTR [esp+0x18]
64005fda:	mov    eax,DWORD PTR [ecx+0x8]
64005fdd:	add    esp,0x4
64005fe0:	cmp    eax,esi
64005fe2:	jbe    0x64005fea
64005fe4:	add    eax,0xffffffff
64005fe7:	mov    DWORD PTR [ecx+0x8],eax
64005fea:	mov    eax,DWORD PTR [ebp+0x8]
64005fed:	mov    ecx,DWORD PTR [ebp+0xc]
64005ff0:	mov    edx,DWORD PTR [ebp+0x10]
64005ff3:	mov    DWORD PTR [eax],ecx
64005ff5:	mov    DWORD PTR [eax+0x4],edx
64005ff8:	mov    ecx,DWORD PTR [esp+0x60]
64005ffc:	mov    DWORD PTR fs:0x0,ecx
64006003:	pop    ecx
64006004:	pop    edi
64006005:	pop    esi
64006006:	pop    ebx
64006007:	mov    esp,ebp
64006009:	pop    ebp
6400600a:	ret    0xc
6400600d:	int3   
6400600e:	int3   
6400600f:	int3   
64006010:	push   esi
64006011:	mov    esi,ecx
64006013:	cmp    DWORD PTR [esi],0x0
64006016:	jne    0x6400601d
64006018:	call   0x64013e86
6400601d:	mov    eax,DWORD PTR [esi+0x4]
64006020:	cmp    BYTE PTR [eax+0x45],0x0
64006024:	je     0x64006038
64006026:	mov    eax,DWORD PTR [eax+0x8]
64006029:	mov    DWORD PTR [esi+0x4],eax
6400602c:	cmp    BYTE PTR [eax+0x45],0x0
64006030:	je     0x64006097
64006032:	pop    esi
64006033:	jmp    0x64013e86
64006038:	mov    ecx,DWORD PTR [eax]
6400603a:	cmp    BYTE PTR [ecx+0x45],0x0
6400603e:	jne    0x64006060
64006040:	mov    eax,DWORD PTR [ecx+0x8]
64006043:	cmp    BYTE PTR [eax+0x45],0x0
64006047:	jne    0x6400605b
64006049:	lea    esp,[esp+0x0]
64006050:	mov    ecx,eax
64006052:	mov    eax,DWORD PTR [ecx+0x8]
64006055:	cmp    BYTE PTR [eax+0x45],0x0
64006059:	je     0x64006050
6400605b:	mov    DWORD PTR [esi+0x4],ecx
6400605e:	pop    esi
6400605f:	ret    
64006060:	mov    eax,DWORD PTR [eax+0x4]
64006063:	cmp    BYTE PTR [eax+0x45],0x0
64006067:	jne    0x64006085
64006069:	lea    esp,[esp+0x0]
64006070:	mov    ecx,DWORD PTR [esi+0x4]
64006073:	cmp    ecx,DWORD PTR [eax]
64006075:	jne    0x64006085
64006077:	mov    DWORD PTR [esi+0x4],eax
6400607a:	mov    edx,eax
6400607c:	mov    eax,DWORD PTR [edx+0x4]
6400607f:	cmp    BYTE PTR [eax+0x45],0x0
64006083:	je     0x64006070
64006085:	mov    ecx,DWORD PTR [esi+0x4]
64006088:	cmp    BYTE PTR [ecx+0x45],0x0
6400608c:	je     0x64006094
6400608e:	pop    esi
6400608f:	jmp    0x64013e86
64006094:	mov    DWORD PTR [esi+0x4],eax
64006097:	pop    esi
64006098:	ret    
64006099:	int3   
6400609a:	int3   
6400609b:	int3   
6400609c:	int3   
6400609d:	int3   
6400609e:	int3   
6400609f:	int3   
640060a0:	push   esi
640060a1:	mov    esi,ecx
640060a3:	cmp    DWORD PTR [esi],0x0
640060a6:	jne    0x640060ad
640060a8:	call   0x64013e86
640060ad:	mov    eax,DWORD PTR [esi+0x4]
640060b0:	cmp    BYTE PTR [eax+0x45],0x0
640060b4:	je     0x640060bc
640060b6:	pop    esi
640060b7:	jmp    0x64013e86
640060bc:	mov    ecx,DWORD PTR [eax+0x8]
640060bf:	cmp    BYTE PTR [ecx+0x45],0x0
640060c3:	jne    0x640060df
640060c5:	mov    eax,DWORD PTR [ecx]
640060c7:	cmp    BYTE PTR [eax+0x45],0x0
640060cb:	jne    0x640060da
640060cd:	lea    ecx,[ecx+0x0]
640060d0:	mov    ecx,eax
640060d2:	mov    eax,DWORD PTR [ecx]
640060d4:	cmp    BYTE PTR [eax+0x45],0x0
640060d8:	je     0x640060d0
640060da:	mov    DWORD PTR [esi+0x4],ecx
640060dd:	pop    esi
640060de:	ret    
640060df:	mov    eax,DWORD PTR [eax+0x4]
640060e2:	cmp    BYTE PTR [eax+0x45],0x0
640060e6:	jne    0x640060fe
640060e8:	mov    ecx,DWORD PTR [esi+0x4]
640060eb:	cmp    ecx,DWORD PTR [eax+0x8]
640060ee:	jne    0x640060fe
640060f0:	mov    DWORD PTR [esi+0x4],eax
640060f3:	mov    edx,eax
640060f5:	mov    eax,DWORD PTR [edx+0x4]
640060f8:	cmp    BYTE PTR [eax+0x45],0x0
640060fc:	je     0x640060e8
640060fe:	mov    DWORD PTR [esi+0x4],eax
64006101:	pop    esi
64006102:	ret    
64006103:	int3   
64006104:	int3   
64006105:	int3   
64006106:	int3   
64006107:	int3   
64006108:	int3   
64006109:	int3   
6400610a:	int3   
6400610b:	int3   
6400610c:	int3   
6400610d:	int3   
6400610e:	int3   
6400610f:	int3   
64006110:	sub    esp,0x10
64006113:	test   ecx,ecx
64006115:	ja     0x64006129
64006117:	xor    ecx,ecx
64006119:	lea    edx,[ecx+ecx*1]
6400611c:	push   edx
6400611d:	call   0x640138e7
64006122:	add    esp,0x4
64006125:	add    esp,0x10
64006128:	ret    
64006129:	or     eax,0xffffffff
6400612c:	xor    edx,edx
6400612e:	div    ecx
64006130:	cmp    eax,0x2
64006133:	jae    0x64006119
64006135:	lea    eax,[esp]
64006138:	push   eax
64006139:	lea    ecx,[esp+0x8]
6400613d:	mov    DWORD PTR [esp+0x4],0x0
64006145:	call   0x6401366c
6400614a:	push   0x640441cc
6400614f:	lea    ecx,[esp+0x8]
64006153:	push   ecx
64006154:	mov    DWORD PTR [esp+0xc],0x6402c2ac
6400615c:	call   0x64013884
64006161:	int3   
64006162:	int3   
64006163:	int3   
64006164:	int3   
64006165:	int3   
64006166:	int3   
64006167:	int3   
64006168:	int3   
64006169:	int3   
6400616a:	int3   
6400616b:	int3   
6400616c:	int3   
6400616d:	int3   
6400616e:	int3   
6400616f:	int3   
64006170:	push   0xffffffff
64006172:	push   0x64023558
64006177:	mov    eax,fs:0x0
6400617d:	push   eax
6400617e:	sub    esp,0x48
64006181:	push   ebx
64006182:	push   ebp
64006183:	push   esi
64006184:	push   edi
64006185:	mov    eax,ds:0x640521ac
6400618a:	xor    eax,esp
6400618c:	push   eax
6400618d:	lea    eax,[esp+0x5c]
64006191:	mov    fs:0x0,eax
64006197:	mov    eax,DWORD PTR [esp+0x74]
6400619b:	cmp    BYTE PTR [eax+0x45],0x0
6400619f:	je     0x640061ed
640061a1:	push   0x1b
640061a3:	xor    esi,esi
640061a5:	push   0x64041d8c
640061aa:	lea    ecx,[esp+0x1c]
640061ae:	mov    DWORD PTR [esp+0x34],0xf
640061b6:	mov    DWORD PTR [esp+0x30],esi
640061ba:	mov    BYTE PTR [esp+0x20],0x0
640061bf:	call   0x64003410
640061c4:	lea    eax,[esp+0x14]
640061c8:	push   eax
640061c9:	lea    ecx,[esp+0x34]
640061cd:	mov    DWORD PTR [esp+0x68],esi
640061d1:	call   0x64001350
640061d6:	push   0x64044158
640061db:	lea    ecx,[esp+0x34]
640061df:	push   ecx
640061e0:	mov    DWORD PTR [esp+0x38],0x6402c2f4
640061e8:	call   0x64013884
640061ed:	lea    esi,[esp+0x70]
640061f1:	mov    ebp,eax
640061f3:	call   0x64006560
640061f8:	mov    eax,DWORD PTR [ebp+0x0]
640061fb:	cmp    BYTE PTR [eax+0x45],0x0
640061ff:	je     0x64006206
64006201:	mov    edi,DWORD PTR [ebp+0x8]
64006204:	jmp    0x6400621e
64006206:	mov    edx,DWORD PTR [ebp+0x8]
64006209:	cmp    BYTE PTR [edx+0x45],0x0
6400620d:	je     0x64006213
6400620f:	mov    edi,eax
64006211:	jmp    0x6400621e
64006213:	mov    ecx,DWORD PTR [esp+0x74]
64006217:	cmp    ecx,ebp
64006219:	mov    edi,DWORD PTR [ecx+0x8]
6400621c:	jne    0x6400629d
6400621e:	cmp    BYTE PTR [edi+0x45],0x0
64006222:	mov    esi,DWORD PTR [ebp+0x4]
64006225:	jne    0x6400622a
64006227:	mov    DWORD PTR [edi+0x4],esi
6400622a:	mov    eax,ds:0x64054500
6400622f:	cmp    DWORD PTR [eax+0x4],ebp
64006232:	jne    0x64006239
64006234:	mov    DWORD PTR [eax+0x4],edi
64006237:	jmp    0x64006244
64006239:	cmp    DWORD PTR [esi],ebp
6400623b:	jne    0x64006241
6400623d:	mov    DWORD PTR [esi],edi
6400623f:	jmp    0x64006244
64006241:	mov    DWORD PTR [esi+0x8],edi
64006244:	mov    edx,DWORD PTR ds:0x64054500
6400624a:	cmp    DWORD PTR [edx],ebp
6400624c:	jne    0x6400626e
6400624e:	cmp    BYTE PTR [edi+0x45],0x0
64006252:	je     0x64006258
64006254:	mov    ecx,esi
64006256:	jmp    0x6400626c
64006258:	mov    eax,DWORD PTR [edi]
6400625a:	cmp    BYTE PTR [eax+0x45],0x0
6400625e:	mov    ecx,edi
64006260:	jne    0x6400626c
64006262:	mov    ecx,eax
64006264:	mov    eax,DWORD PTR [ecx]
64006266:	cmp    BYTE PTR [eax+0x45],0x0
6400626a:	je     0x64006262
6400626c:	mov    DWORD PTR [edx],ecx
6400626e:	mov    eax,ds:0x64054500
64006273:	cmp    DWORD PTR [eax+0x8],ebp
64006276:	jne    0x640062f7
64006278:	cmp    BYTE PTR [edi+0x45],0x0
6400627c:	je     0x6400628b
6400627e:	mov    ecx,DWORD PTR ds:0x64054500
64006284:	mov    eax,esi
64006286:	mov    DWORD PTR [ecx+0x8],eax
64006289:	jmp    0x640062f7
6400628b:	mov    eax,edi
6400628d:	call   0x64006810
64006292:	mov    ecx,DWORD PTR ds:0x64054500
64006298:	mov    DWORD PTR [ecx+0x8],eax
6400629b:	jmp    0x640062f7
6400629d:	mov    DWORD PTR [eax+0x4],ecx
640062a0:	mov    edx,DWORD PTR [ebp+0x0]
640062a3:	mov    DWORD PTR [ecx],edx
640062a5:	cmp    ecx,DWORD PTR [ebp+0x8]
640062a8:	jne    0x640062ae
640062aa:	mov    esi,ecx
640062ac:	jmp    0x640062c8
640062ae:	cmp    BYTE PTR [edi+0x45],0x0
640062b2:	mov    esi,DWORD PTR [ecx+0x4]
640062b5:	jne    0x640062ba
640062b7:	mov    DWORD PTR [edi+0x4],esi
640062ba:	mov    DWORD PTR [esi],edi
640062bc:	mov    eax,DWORD PTR [ebp+0x8]
640062bf:	mov    DWORD PTR [ecx+0x8],eax
640062c2:	mov    edx,DWORD PTR [ebp+0x8]
640062c5:	mov    DWORD PTR [edx+0x4],ecx
640062c8:	mov    eax,ds:0x64054500
640062cd:	cmp    DWORD PTR [eax+0x4],ebp
640062d0:	jne    0x640062d7
640062d2:	mov    DWORD PTR [eax+0x4],ecx
640062d5:	jmp    0x640062e5
640062d7:	mov    eax,DWORD PTR [ebp+0x4]
640062da:	cmp    DWORD PTR [eax],ebp
640062dc:	jne    0x640062e2
640062de:	mov    DWORD PTR [eax],ecx
640062e0:	jmp    0x640062e5
640062e2:	mov    DWORD PTR [eax+0x8],ecx
640062e5:	mov    eax,DWORD PTR [ebp+0x4]
640062e8:	mov    DWORD PTR [ecx+0x4],eax
640062eb:	mov    dl,BYTE PTR [ebp+0x44]
640062ee:	mov    al,BYTE PTR [ecx+0x44]
640062f1:	mov    BYTE PTR [ecx+0x44],dl
640062f4:	mov    BYTE PTR [ebp+0x44],al
640062f7:	mov    ebx,0x1
640062fc:	cmp    BYTE PTR [ebp+0x44],bl
640062ff:	jne    0x6400641c
64006305:	mov    eax,ds:0x64054500
6400630a:	cmp    edi,DWORD PTR [eax+0x4]
6400630d:	je     0x64006419
64006313:	cmp    BYTE PTR [edi+0x44],bl
64006316:	jne    0x64006419
6400631c:	mov    ecx,DWORD PTR [esi]
6400631e:	cmp    edi,ecx
64006320:	jne    0x64006398
64006322:	mov    ecx,DWORD PTR [esi+0x8]
64006325:	cmp    BYTE PTR [ecx+0x44],0x0
64006329:	jne    0x64006341
6400632b:	mov    BYTE PTR [ecx+0x44],bl
6400632e:	push   0x640544fc
64006333:	mov    ecx,esi
64006335:	mov    BYTE PTR [esi+0x44],0x0
64006339:	call   0x64005bb0
6400633e:	mov    ecx,DWORD PTR [esi+0x8]
64006341:	cmp    BYTE PTR [ecx+0x45],0x0
64006345:	jne    0x640063cc
6400634b:	mov    edx,DWORD PTR [ecx]
6400634d:	cmp    BYTE PTR [edx+0x44],bl
64006350:	jne    0x6400635a
64006352:	mov    eax,DWORD PTR [ecx+0x8]
64006355:	cmp    BYTE PTR [eax+0x44],bl
64006358:	je     0x640063c8
6400635a:	mov    edx,DWORD PTR [ecx+0x8]
6400635d:	cmp    BYTE PTR [edx+0x44],bl
64006360:	jne    0x64006378
64006362:	mov    eax,DWORD PTR [ecx]
64006364:	mov    BYTE PTR [eax+0x44],bl
64006367:	push   0x640544fc
6400636c:	mov    BYTE PTR [ecx+0x44],0x0
64006370:	call   0x64005c00
64006375:	mov    ecx,DWORD PTR [esi+0x8]
64006378:	mov    dl,BYTE PTR [esi+0x44]
6400637b:	mov    BYTE PTR [ecx+0x44],dl
6400637e:	mov    BYTE PTR [esi+0x44],bl
64006381:	mov    eax,DWORD PTR [ecx+0x8]
64006384:	push   0x640544fc
64006389:	mov    ecx,esi
6400638b:	mov    BYTE PTR [eax+0x44],bl
6400638e:	call   0x64005bb0
64006393:	jmp    0x64006419
64006398:	cmp    BYTE PTR [ecx+0x44],0x0
6400639c:	jne    0x640063b3
6400639e:	mov    BYTE PTR [ecx+0x44],bl
640063a1:	push   0x640544fc
640063a6:	mov    ecx,esi
640063a8:	mov    BYTE PTR [esi+0x44],0x0
640063ac:	call   0x64005c00
640063b1:	mov    ecx,DWORD PTR [esi]
640063b3:	cmp    BYTE PTR [ecx+0x45],0x0
640063b7:	jne    0x640063cc
640063b9:	mov    edx,DWORD PTR [ecx+0x8]
640063bc:	cmp    BYTE PTR [edx+0x44],bl
640063bf:	jne    0x640063e2
640063c1:	mov    eax,DWORD PTR [ecx]
640063c3:	cmp    BYTE PTR [eax+0x44],bl
640063c6:	jne    0x640063e2
640063c8:	mov    BYTE PTR [ecx+0x44],0x0
640063cc:	mov    ecx,DWORD PTR ds:0x64054500
640063d2:	mov    edi,esi
640063d4:	cmp    edi,DWORD PTR [ecx+0x4]
640063d7:	mov    esi,DWORD PTR [esi+0x4]
640063da:	jne    0x64006313
640063e0:	jmp    0x64006419
640063e2:	mov    edx,DWORD PTR [ecx]
640063e4:	cmp    BYTE PTR [edx+0x44],bl
640063e7:	jne    0x640063ff
640063e9:	mov    eax,DWORD PTR [ecx+0x8]
640063ec:	mov    BYTE PTR [eax+0x44],bl
640063ef:	push   0x640544fc
640063f4:	mov    BYTE PTR [ecx+0x44],0x0
640063f8:	call   0x64005bb0
640063fd:	mov    ecx,DWORD PTR [esi]
640063ff:	mov    dl,BYTE PTR [esi+0x44]
64006402:	mov    BYTE PTR [ecx+0x44],dl
64006405:	mov    BYTE PTR [esi+0x44],bl
64006408:	mov    eax,DWORD PTR [ecx]
6400640a:	push   0x640544fc
6400640f:	mov    ecx,esi
64006411:	mov    BYTE PTR [eax+0x44],bl
64006414:	call   0x64005c00
64006419:	mov    BYTE PTR [edi+0x44],bl
6400641c:	mov    edi,0x8
64006421:	cmp    DWORD PTR [ebp+0x40],edi
64006424:	jb     0x64006432
64006426:	mov    ecx,DWORD PTR [ebp+0x2c]
64006429:	push   ecx
6400642a:	call   0x64013656
6400642f:	add    esp,0x4
64006432:	xor    eax,eax
64006434:	mov    esi,0x7
64006439:	mov    DWORD PTR [ebp+0x40],esi
6400643c:	mov    DWORD PTR [ebp+0x3c],eax
6400643f:	mov    WORD PTR [ebp+0x2c],ax
64006443:	cmp    DWORD PTR [ebp+0x24],edi
64006446:	jb     0x64006456
64006448:	mov    edx,DWORD PTR [ebp+0x10]
6400644b:	push   edx
6400644c:	call   0x64013656
64006451:	add    esp,0x4
64006454:	xor    eax,eax
64006456:	mov    DWORD PTR [ebp+0x24],esi
64006459:	mov    DWORD PTR [ebp+0x20],eax
6400645c:	push   ebp
6400645d:	mov    WORD PTR [ebp+0x10],ax
64006461:	call   0x64013656
64006466:	add    esp,0x4
64006469:	cmp    DWORD PTR ds:0x64054504,0x0
64006470:	jbe    0x64006478
64006472:	sub    DWORD PTR ds:0x64054504,ebx
64006478:	mov    eax,DWORD PTR [esp+0x6c]
6400647c:	mov    ecx,DWORD PTR [esp+0x70]
64006480:	mov    edx,DWORD PTR [esp+0x74]
64006484:	mov    DWORD PTR [eax],ecx
64006486:	mov    DWORD PTR [eax+0x4],edx
64006489:	mov    ecx,DWORD PTR [esp+0x5c]
6400648d:	mov    DWORD PTR fs:0x0,ecx
64006494:	pop    ecx
64006495:	pop    edi
64006496:	pop    esi
64006497:	pop    ebp
64006498:	pop    ebx
64006499:	add    esp,0x54
6400649c:	ret    0xc
6400649f:	int3   
640064a0:	push   0x48
640064a2:	call   0x640138e7
640064a7:	add    esp,0x4
640064aa:	test   eax,eax
640064ac:	je     0x640064b4
640064ae:	mov    DWORD PTR [eax],0x0
640064b4:	lea    ecx,[eax+0x4]
640064b7:	test   ecx,ecx
640064b9:	je     0x640064c1
640064bb:	mov    DWORD PTR [ecx],0x0
640064c1:	lea    ecx,[eax+0x8]
640064c4:	test   ecx,ecx
640064c6:	je     0x640064ce
640064c8:	mov    DWORD PTR [ecx],0x0
640064ce:	mov    BYTE PTR [eax+0x44],0x1
640064d2:	mov    BYTE PTR [eax+0x45],0x0
640064d6:	ret    
640064d7:	int3   
640064d8:	int3   
640064d9:	int3   
640064da:	int3   
640064db:	int3   
640064dc:	int3   
640064dd:	int3   
640064de:	int3   
640064df:	int3   
640064e0:	cmp    DWORD PTR [esi],0x0
640064e3:	jne    0x640064ea
640064e5:	call   0x64013e86
640064ea:	mov    eax,DWORD PTR [esi+0x4]
640064ed:	cmp    BYTE PTR [eax+0x45],0x0
640064f1:	je     0x64006504
640064f3:	mov    eax,DWORD PTR [eax+0x8]
640064f6:	mov    DWORD PTR [esi+0x4],eax
640064f9:	cmp    BYTE PTR [eax+0x45],0x0
640064fd:	je     0x64006556
640064ff:	jmp    0x64013e86
64006504:	mov    ecx,DWORD PTR [eax]
64006506:	cmp    BYTE PTR [ecx+0x45],0x0
6400650a:	jne    0x64006524
6400650c:	mov    eax,DWORD PTR [ecx+0x8]
6400650f:	cmp    BYTE PTR [eax+0x45],0x0
64006513:	jne    0x64006520
64006515:	mov    ecx,eax
64006517:	mov    eax,DWORD PTR [ecx+0x8]
6400651a:	cmp    BYTE PTR [eax+0x45],0x0
6400651e:	je     0x64006515
64006520:	mov    DWORD PTR [esi+0x4],ecx
64006523:	ret    
64006524:	mov    eax,DWORD PTR [eax+0x4]
64006527:	cmp    BYTE PTR [eax+0x45],0x0
6400652b:	jne    0x64006545
6400652d:	lea    ecx,[ecx+0x0]
64006530:	mov    ecx,DWORD PTR [esi+0x4]
64006533:	cmp    ecx,DWORD PTR [eax]
64006535:	jne    0x64006545
64006537:	mov    DWORD PTR [esi+0x4],eax
6400653a:	mov    edx,eax
6400653c:	mov    eax,DWORD PTR [edx+0x4]
6400653f:	cmp    BYTE PTR [eax+0x45],0x0
64006543:	je     0x64006530
64006545:	mov    ecx,DWORD PTR [esi+0x4]
64006548:	cmp    BYTE PTR [ecx+0x45],0x0
6400654c:	je     0x64006553
6400654e:	jmp    0x64013e86
64006553:	mov    DWORD PTR [esi+0x4],eax
64006556:	ret    
64006557:	int3   
64006558:	int3   
64006559:	int3   
6400655a:	int3   
6400655b:	int3   
6400655c:	int3   
6400655d:	int3   
6400655e:	int3   
6400655f:	int3   
64006560:	cmp    DWORD PTR [esi],0x0
64006563:	jne    0x6400656a
64006565:	call   0x64013e86
6400656a:	mov    eax,DWORD PTR [esi+0x4]
6400656d:	cmp    BYTE PTR [eax+0x45],0x0
64006571:	je     0x64006578
64006573:	jmp    0x64013e86
64006578:	mov    ecx,DWORD PTR [eax+0x8]
6400657b:	cmp    BYTE PTR [ecx+0x45],0x0
6400657f:	jne    0x6400659e
64006581:	mov    eax,DWORD PTR [ecx]
64006583:	cmp    BYTE PTR [eax+0x45],0x0
64006587:	jne    0x6400659a
64006589:	lea    esp,[esp+0x0]
64006590:	mov    ecx,eax
64006592:	mov    eax,DWORD PTR [ecx]
64006594:	cmp    BYTE PTR [eax+0x45],0x0
64006598:	je     0x64006590
6400659a:	mov    DWORD PTR [esi+0x4],ecx
6400659d:	ret    
6400659e:	mov    eax,DWORD PTR [eax+0x4]
640065a1:	cmp    BYTE PTR [eax+0x45],0x0
640065a5:	jne    0x640065bd
640065a7:	mov    ecx,DWORD PTR [esi+0x4]
640065aa:	cmp    ecx,DWORD PTR [eax+0x8]
640065ad:	jne    0x640065bd
640065af:	mov    DWORD PTR [esi+0x4],eax
640065b2:	mov    edx,eax
640065b4:	mov    eax,DWORD PTR [edx+0x4]
640065b7:	cmp    BYTE PTR [eax+0x45],0x0
640065bb:	je     0x640065a7
640065bd:	mov    DWORD PTR [esi+0x4],eax
640065c0:	ret    
640065c1:	int3   
640065c2:	int3   
640065c3:	int3   
640065c4:	int3   
640065c5:	int3   
640065c6:	int3   
640065c7:	int3   
640065c8:	int3   
640065c9:	int3   
640065ca:	int3   
640065cb:	int3   
640065cc:	int3   
640065cd:	int3   
640065ce:	int3   
640065cf:	int3   
640065d0:	push   0xffffffff
640065d2:	push   0x640231c8
640065d7:	mov    eax,fs:0x0
640065dd:	push   eax
640065de:	push   ecx
640065df:	push   ebx
640065e0:	push   esi
640065e1:	push   edi
640065e2:	mov    eax,ds:0x640521ac
640065e7:	xor    eax,esp
640065e9:	push   eax
640065ea:	lea    eax,[esp+0x14]
640065ee:	mov    fs:0x0,eax
640065f4:	mov    esi,ecx
640065f6:	mov    DWORD PTR [esp+0x10],esi
640065fa:	mov    edi,DWORD PTR [esp+0x24]
640065fe:	xor    ebx,ebx
64006600:	push   0xffffffff
64006602:	push   ebx
64006603:	mov    DWORD PTR [esi+0x18],0xf
6400660a:	mov    DWORD PTR [esi+0x14],ebx
6400660d:	push   edi
6400660e:	mov    BYTE PTR [esi+0x4],bl
64006611:	call   0x64003330
64006616:	push   0xffffffff
64006618:	lea    ecx,[esi+0x1c]
6400661b:	mov    DWORD PTR [esp+0x20],ebx
6400661f:	lea    eax,[edi+0x1c]
64006622:	push   ebx
64006623:	mov    DWORD PTR [ecx+0x18],0xf
6400662a:	mov    DWORD PTR [ecx+0x14],ebx
6400662d:	push   eax
6400662e:	mov    BYTE PTR [ecx+0x4],bl
64006631:	call   0x64003330
64006636:	mov    eax,esi
64006638:	mov    ecx,DWORD PTR [esp+0x14]
6400663c:	mov    DWORD PTR fs:0x0,ecx
64006643:	pop    ecx
64006644:	pop    edi
64006645:	pop    esi
64006646:	pop    ebx
64006647:	add    esp,0x10
6400664a:	ret    0x4
6400664d:	int3   
6400664e:	int3   
6400664f:	int3   
64006650:	push   0xffffffff
64006652:	push   0x64023198
64006657:	mov    eax,fs:0x0
6400665d:	push   eax
6400665e:	push   esi
6400665f:	push   edi
64006660:	mov    eax,ds:0x640521ac
64006665:	xor    eax,esp
64006667:	push   eax
64006668:	lea    eax,[esp+0xc]
6400666c:	mov    fs:0x0,eax
64006672:	mov    esi,DWORD PTR [esp+0x1c]
64006676:	xor    edi,edi
64006678:	push   0xffffffff
6400667a:	mov    DWORD PTR [esi+0x18],0x7
64006681:	mov    DWORD PTR [esi+0x14],edi
64006684:	push   edi
64006685:	mov    eax,ebx
64006687:	mov    ecx,esi
64006689:	mov    WORD PTR [esi+0x4],di
6400668d:	call   0x64004710
64006692:	lea    ecx,[esi+0x1c]
64006695:	mov    DWORD PTR [esp+0x14],edi
64006699:	push   0xffffffff
6400669b:	mov    DWORD PTR [ecx+0x18],0x7
640066a2:	mov    DWORD PTR [ecx+0x14],edi
640066a5:	lea    eax,[ebx+0x1c]
640066a8:	push   edi
640066a9:	mov    WORD PTR [ecx+0x4],di
640066ad:	call   0x64004710
640066b2:	mov    eax,esi
640066b4:	mov    ecx,DWORD PTR [esp+0xc]
640066b8:	mov    DWORD PTR fs:0x0,ecx
640066bf:	pop    ecx
640066c0:	pop    edi
640066c1:	pop    esi
640066c2:	add    esp,0xc
640066c5:	ret    0x4
640066c8:	int3   
640066c9:	int3   
640066ca:	int3   
640066cb:	int3   
640066cc:	int3   
640066cd:	int3   
640066ce:	int3   
640066cf:	int3   
640066d0:	push   ecx
640066d1:	push   ebx
640066d2:	push   esi
640066d3:	mov    esi,DWORD PTR [esp+0x10]
640066d7:	xor    ebx,ebx
640066d9:	cmp    BYTE PTR [esi+0x45],bl
640066dc:	push   edi
640066dd:	mov    DWORD PTR [esp+0xc],ecx
640066e1:	mov    edi,esi
640066e3:	jne    0x64006746
640066e5:	push   ebp
640066e6:	lea    ebp,[ebx+0xf]
640066e9:	lea    esp,[esp+0x0]
640066f0:	mov    eax,DWORD PTR [edi+0x8]
640066f3:	mov    ecx,DWORD PTR [esp+0x10]
640066f7:	push   eax
640066f8:	call   0x640066d0
640066fd:	cmp    DWORD PTR [esi+0x40],0x10
64006701:	mov    edi,DWORD PTR [edi]
64006703:	jb     0x64006711
64006705:	mov    ecx,DWORD PTR [esi+0x2c]
64006708:	push   ecx
64006709:	call   0x64013656
6400670e:	add    esp,0x4
64006711:	mov    DWORD PTR [esi+0x40],ebp
64006714:	mov    DWORD PTR [esi+0x3c],ebx
64006717:	mov    BYTE PTR [esi+0x2c],bl
6400671a:	cmp    DWORD PTR [esi+0x24],0x10
6400671e:	jb     0x6400672c
64006720:	mov    edx,DWORD PTR [esi+0x10]
64006723:	push   edx
64006724:	call   0x64013656
64006729:	add    esp,0x4
6400672c:	mov    DWORD PTR [esi+0x24],ebp
6400672f:	mov    DWORD PTR [esi+0x20],ebx
64006732:	push   esi
64006733:	mov    BYTE PTR [esi+0x10],bl
64006736:	call   0x64013656
6400673b:	add    esp,0x4
6400673e:	cmp    BYTE PTR [edi+0x45],bl
64006741:	mov    esi,edi
64006743:	je     0x640066f0
64006745:	pop    ebp
64006746:	pop    edi
64006747:	pop    esi
64006748:	pop    ebx
64006749:	pop    ecx
6400674a:	ret    0x4
6400674d:	int3   
6400674e:	int3   
6400674f:	int3   
64006750:	mov    eax,DWORD PTR [esp+0x4]
64006754:	mov    ecx,DWORD PTR [eax+0x8]
64006757:	cmp    BYTE PTR [ecx+0x45],0x0
6400675b:	jne    0x6400676b
6400675d:	lea    ecx,[ecx+0x0]
64006760:	mov    eax,ecx
64006762:	mov    ecx,DWORD PTR [eax+0x8]
64006765:	cmp    BYTE PTR [ecx+0x45],0x0
64006769:	je     0x64006760
6400676b:	ret    
6400676c:	int3   
6400676d:	int3   
6400676e:	int3   
6400676f:	int3   
64006770:	mov    eax,DWORD PTR [esp+0x4]
64006774:	mov    ecx,DWORD PTR [eax]
64006776:	cmp    BYTE PTR [ecx+0x45],0x0
6400677a:	jne    0x6400678a
6400677c:	lea    esp,[esp+0x0]
64006780:	mov    eax,ecx
64006782:	mov    ecx,DWORD PTR [eax]
64006784:	cmp    BYTE PTR [ecx+0x45],0x0
64006788:	je     0x64006780
6400678a:	ret    
6400678b:	int3   
6400678c:	int3   
6400678d:	int3   
6400678e:	int3   
6400678f:	int3   
64006790:	push   ecx
64006791:	push   ebx
64006792:	push   esi
64006793:	mov    esi,DWORD PTR [esp+0x10]
64006797:	xor    ebx,ebx
64006799:	cmp    BYTE PTR [esi+0x45],bl
6400679c:	push   edi
6400679d:	mov    DWORD PTR [esp+0xc],ecx
640067a1:	mov    edi,esi
640067a3:	jne    0x64006808
640067a5:	push   ebp
640067a6:	lea    ebp,[ebx+0x7]
640067a9:	lea    esp,[esp+0x0]
640067b0:	mov    eax,DWORD PTR [edi+0x8]
640067b3:	mov    ecx,DWORD PTR [esp+0x10]
640067b7:	push   eax
640067b8:	call   0x64006790
640067bd:	cmp    DWORD PTR [esi+0x40],0x8
640067c1:	mov    edi,DWORD PTR [edi]
640067c3:	jb     0x640067d1
640067c5:	mov    ecx,DWORD PTR [esi+0x2c]
640067c8:	push   ecx
640067c9:	call   0x64013656
640067ce:	add    esp,0x4
640067d1:	mov    DWORD PTR [esi+0x40],ebp
640067d4:	mov    DWORD PTR [esi+0x3c],ebx
640067d7:	mov    WORD PTR [esi+0x2c],bx
640067db:	cmp    DWORD PTR [esi+0x24],0x8
640067df:	jb     0x640067ed
640067e1:	mov    edx,DWORD PTR [esi+0x10]
640067e4:	push   edx
640067e5:	call   0x64013656
640067ea:	add    esp,0x4
640067ed:	mov    DWORD PTR [esi+0x24],ebp
640067f0:	mov    DWORD PTR [esi+0x20],ebx
640067f3:	push   esi
640067f4:	mov    WORD PTR [esi+0x10],bx
640067f8:	call   0x64013656
640067fd:	add    esp,0x4
64006800:	cmp    BYTE PTR [edi+0x45],bl
64006803:	mov    esi,edi
64006805:	je     0x640067b0
64006807:	pop    ebp
64006808:	pop    edi
64006809:	pop    esi
6400680a:	pop    ebx
6400680b:	pop    ecx
6400680c:	ret    0x4
6400680f:	int3   
64006810:	mov    ecx,DWORD PTR [eax+0x8]
64006813:	cmp    BYTE PTR [ecx+0x45],0x0
64006817:	jne    0x6400682b
64006819:	lea    esp,[esp+0x0]
64006820:	mov    eax,ecx
64006822:	mov    ecx,DWORD PTR [eax+0x8]
64006825:	cmp    BYTE PTR [ecx+0x45],0x0
64006829:	je     0x64006820
6400682b:	ret    
6400682c:	int3   
6400682d:	int3   
6400682e:	int3   
6400682f:	int3   
64006830:	mov    eax,DWORD PTR [esp+0x8]
64006834:	mov    ecx,DWORD PTR [esp+0xc]
64006838:	or     edx,0xffffffff
6400683b:	sub    edx,eax
6400683d:	cmp    edx,ecx
6400683f:	jae    0x64006847
64006841:	mov    eax,0x80070057
64006846:	ret    
64006847:	add    eax,ecx
64006849:	mov    ecx,DWORD PTR [esp+0x4]
6400684d:	mov    DWORD PTR [ecx],eax
6400684f:	xor    eax,eax
64006851:	ret    
64006852:	int3   
64006853:	int3   
64006854:	int3   
64006855:	int3   
64006856:	int3   
64006857:	int3   
64006858:	int3   
64006859:	int3   
6400685a:	int3   
6400685b:	int3   
6400685c:	int3   
6400685d:	int3   
6400685e:	int3   
6400685f:	int3   
64006860:	push   0xffffffff
64006862:	push   0x640233f8
64006867:	mov    eax,fs:0x0
6400686d:	push   eax
6400686e:	sub    esp,0x20
64006871:	push   ebx
64006872:	push   ebp
64006873:	mov    eax,ds:0x640521ac
64006878:	xor    eax,esp
6400687a:	push   eax
6400687b:	lea    eax,[esp+0x2c]
6400687f:	mov    fs:0x0,eax
64006885:	mov    eax,DWORD PTR [esp+0x3c]
64006889:	xor    ebx,ebx
6400688b:	push   0xffffffff
6400688d:	push   ebx
6400688e:	push   eax
6400688f:	lea    ecx,[esp+0x1c]
64006893:	mov    DWORD PTR [esp+0x18],ebx
64006897:	mov    DWORD PTR [esp+0x34],0xf
6400689f:	mov    DWORD PTR [esp+0x30],ebx
640068a3:	mov    BYTE PTR [esp+0x20],bl
640068a7:	call   0x64003330
640068ac:	mov    eax,edi
640068ae:	mov    DWORD PTR [esp+0x34],ebx
640068b2:	lea    ebp,[eax+0x1]
640068b5:	mov    cl,BYTE PTR [eax]
640068b7:	add    eax,0x1
640068ba:	cmp    cl,bl
640068bc:	jne    0x640068b5
640068be:	sub    eax,ebp
640068c0:	push   eax
640068c1:	push   edi
640068c2:	lea    eax,[esp+0x18]
640068c6:	call   0x64002990
640068cb:	push   0xffffffff
640068cd:	push   ebx
640068ce:	mov    DWORD PTR [esi+0x18],0xf
640068d5:	mov    DWORD PTR [esi+0x14],ebx
640068d8:	push   eax
640068d9:	mov    ecx,esi
640068db:	mov    BYTE PTR [esi+0x4],bl
640068de:	call   0x64003330
640068e3:	cmp    DWORD PTR [esp+0x28],0x10
640068e8:	jb     0x640068f7
640068ea:	mov    ecx,DWORD PTR [esp+0x14]
640068ee:	push   ecx
640068ef:	call   0x64013656
640068f4:	add    esp,0x4
640068f7:	mov    eax,esi
640068f9:	mov    ecx,DWORD PTR [esp+0x2c]
640068fd:	mov    DWORD PTR fs:0x0,ecx
64006904:	pop    ecx
64006905:	pop    ebp
64006906:	pop    ebx
64006907:	add    esp,0x2c
6400690a:	ret    
6400690b:	int3   
6400690c:	int3   
6400690d:	int3   
6400690e:	int3   
6400690f:	int3   
64006910:	mov    eax,DWORD PTR [esp+0x4]
64006914:	push   esi
64006915:	push   eax
64006916:	mov    esi,ecx
64006918:	call   0x640136d2
6400691d:	mov    DWORD PTR [esi],0x6402c2ac
64006923:	mov    eax,esi
64006925:	pop    esi
64006926:	ret    0x4
64006929:	int3   
6400692a:	int3   
6400692b:	int3   
6400692c:	int3   
6400692d:	int3   
6400692e:	int3   
6400692f:	int3   
64006930:	push   ebx
64006931:	push   esi
64006932:	mov    esi,eax
64006934:	mov    eax,DWORD PTR [ecx+0x14]
64006937:	cmp    eax,esi
64006939:	jae    0x6400693d
6400693b:	mov    esi,eax
6400693d:	cmp    esi,edi
6400693f:	mov    edx,esi
64006941:	jb     0x64006945
64006943:	mov    edx,edi
64006945:	cmp    DWORD PTR [ecx+0x18],0x8
64006949:	jb     0x64006950
6400694b:	mov    eax,DWORD PTR [ecx+0x4]
6400694e:	jmp    0x64006953
64006950:	lea    eax,[ecx+0x4]
64006953:	test   edx,edx
64006955:	mov    ecx,DWORD PTR [esp+0xc]
64006959:	jbe    0x64006985
6400695b:	jmp    0x64006960
6400695d:	lea    ecx,[ecx+0x0]
64006960:	mov    bx,WORD PTR [eax]
64006963:	cmp    bx,WORD PTR [ecx]
64006966:	jne    0x64006975
64006968:	add    eax,0x2
6400696b:	add    ecx,0x2
6400696e:	sub    edx,0x1
64006971:	jne    0x64006960
64006973:	jmp    0x64006985
64006975:	movzx  eax,WORD PTR [eax]
64006978:	cmp    ax,WORD PTR [ecx]
6400697b:	sbb    eax,eax
6400697d:	and    eax,0xfffffffe
64006980:	add    eax,0x1
64006983:	jne    0x64006998
64006985:	cmp    esi,edi
64006987:	jae    0x64006991
64006989:	pop    esi
6400698a:	or     eax,0xffffffff
6400698d:	pop    ebx
6400698e:	ret    0x4
64006991:	xor    eax,eax
64006993:	cmp    esi,edi
64006995:	setne  al
64006998:	pop    esi
64006999:	pop    ebx
6400699a:	ret    0x4
6400699d:	int3   
6400699e:	int3   
6400699f:	int3   
640069a0:	push   ebp
640069a1:	mov    ebp,esp
640069a3:	and    esp,0xfffffff8
640069a6:	push   0xffffffff
640069a8:	push   0x64023c98
640069ad:	mov    eax,fs:0x0
640069b3:	push   eax
640069b4:	sub    esp,0x14
640069b7:	push   ebx
640069b8:	push   esi
640069b9:	mov    eax,ds:0x640521ac
640069be:	xor    eax,esp
640069c0:	push   eax
640069c1:	lea    eax,[esp+0x20]
640069c5:	mov    fs:0x0,eax
640069cb:	mov    eax,DWORD PTR [ebp+0xc]
640069ce:	push   eax
640069cf:	lea    ecx,[esp+0x14]
640069d3:	push   0x4
640069d5:	xor    esi,esi
640069d7:	push   ecx
640069d8:	mov    DWORD PTR [esp+0x1c],esi
640069dc:	call   0x640020f0
640069e1:	add    esp,0xc
640069e4:	lea    edx,[esp+0x18]
640069e8:	push   edx
640069e9:	mov    DWORD PTR [esp+0x2c],esi
640069ed:	call   0x64001c20
640069f2:	add    esp,0x4
640069f5:	lea    ecx,[esp+0x10]
640069f9:	push   ecx
640069fa:	lea    edx,[esp+0x18]
640069fe:	push   edx
640069ff:	mov    ebx,eax
64006a01:	mov    BYTE PTR [esp+0x30],0x1
64006a06:	call   0x64006bb0
64006a0b:	mov    esi,eax
64006a0d:	push   0x64041db4
64006a12:	push   0x4
64006a14:	mov    ecx,0x64041d6c
64006a19:	mov    BYTE PTR [esp+0x38],0x2
64006a1e:	call   0x64003050
64006a23:	push   esi
64006a24:	mov    esi,DWORD PTR [ebp+0x8]
64006a27:	push   esi
64006a28:	mov    ebx,eax
64006a2a:	call   0x64002ca0
64006a2f:	mov    BYTE PTR [esp+0x40],0x1
64006a34:	mov    eax,DWORD PTR [esp+0x2c]
64006a38:	add    eax,0xfffffff0
64006a3b:	add    esp,0x18
64006a3e:	lea    ecx,[eax+0xc]
64006a41:	or     edx,0xffffffff
64006a44:	lock xadd DWORD PTR [ecx],edx
64006a48:	dec    edx
64006a49:	test   edx,edx
64006a4b:	jg     0x64006a57
64006a4d:	mov    ecx,DWORD PTR [eax]
64006a4f:	mov    edx,DWORD PTR [ecx]
64006a51:	push   eax
64006a52:	mov    eax,DWORD PTR [edx+0x4]
64006a55:	call   eax
64006a57:	mov    BYTE PTR [esp+0x28],0x0
64006a5c:	mov    eax,DWORD PTR [esp+0x18]
64006a60:	add    eax,0xfffffff0
64006a63:	lea    ecx,[eax+0xc]
64006a66:	or     edx,0xffffffff
64006a69:	lock xadd DWORD PTR [ecx],edx
64006a6d:	dec    edx
64006a6e:	test   edx,edx
64006a70:	jg     0x64006a7c
64006a72:	mov    ecx,DWORD PTR [eax]
64006a74:	mov    edx,DWORD PTR [ecx]
64006a76:	push   eax
64006a77:	mov    eax,DWORD PTR [edx+0x4]
64006a7a:	call   eax
64006a7c:	mov    DWORD PTR [esp+0x28],0xffffffff
64006a84:	mov    eax,DWORD PTR [esp+0x10]
64006a88:	add    eax,0xfffffff0
64006a8b:	lea    ecx,[eax+0xc]
64006a8e:	or     edx,0xffffffff
64006a91:	lock xadd DWORD PTR [ecx],edx
64006a95:	dec    edx
64006a96:	test   edx,edx
64006a98:	jg     0x64006aa4
64006a9a:	mov    ecx,DWORD PTR [eax]
64006a9c:	mov    edx,DWORD PTR [ecx]
64006a9e:	push   eax
64006a9f:	mov    eax,DWORD PTR [edx+0x4]
64006aa2:	call   eax
64006aa4:	mov    eax,esi
64006aa6:	mov    ecx,DWORD PTR [esp+0x20]
64006aaa:	mov    DWORD PTR fs:0x0,ecx
64006ab1:	pop    ecx
64006ab2:	pop    esi
64006ab3:	pop    ebx
64006ab4:	mov    esp,ebp
64006ab6:	pop    ebp
64006ab7:	ret    
64006ab8:	int3   
64006ab9:	int3   
64006aba:	int3   
64006abb:	int3   
64006abc:	int3   
64006abd:	int3   
64006abe:	int3   
64006abf:	int3   
64006ac0:	push   0xffffffff
64006ac2:	push   0x640233d0
64006ac7:	mov    eax,fs:0x0
64006acd:	push   eax
64006ace:	sub    esp,0xc
64006ad1:	push   ebx
64006ad2:	push   ebp
64006ad3:	push   esi
64006ad4:	push   edi
64006ad5:	mov    eax,ds:0x640521ac
64006ada:	xor    eax,esp
64006adc:	push   eax
64006add:	lea    eax,[esp+0x20]
64006ae1:	mov    fs:0x0,eax
64006ae7:	mov    edi,ecx
64006ae9:	mov    ebp,DWORD PTR [esp+0x30]
64006aed:	xor    ebx,ebx
64006aef:	push   edi
64006af0:	mov    DWORD PTR [esp+0x34],ebx
64006af4:	call   0x64012faa
64006af9:	mov    esi,eax
64006afb:	mov    DWORD PTR [esp+0x1c],esi
64006aff:	mov    eax,DWORD PTR [esp+0x38]
64006b03:	push   edi
64006b04:	push   eax
64006b05:	push   esi
64006b06:	mov    DWORD PTR [esp+0x38],ebx
64006b0a:	call   0x640151f0
64006b0f:	add    esp,0x10
64006b12:	xor    ecx,ecx
64006b14:	xor    edx,edx
64006b16:	cmp    edi,ebx
64006b18:	je     0x64006b39
64006b1a:	mov    eax,DWORD PTR [esp+0x38]
64006b1e:	mov    al,BYTE PTR [edx+eax*1]
64006b21:	xor    BYTE PTR [ecx+esi*1],al
64006b24:	lea    eax,[edx+0x1]
64006b27:	xor    edx,edx
64006b29:	mov    ebx,0x25
64006b2e:	add    ecx,0x1
64006b31:	div    ebx
64006b33:	cmp    ecx,edi
64006b35:	jne    0x64006b1a
64006b37:	xor    ebx,ebx
64006b39:	lea    ecx,[esp+0x14]
64006b3d:	push   ecx
64006b3e:	push   edi
64006b3f:	lea    edx,[esp+0x38]
64006b43:	push   esi
64006b44:	push   edx
64006b45:	call   0x640018a0
64006b4a:	mov    ecx,DWORD PTR [eax]
64006b4c:	mov    edi,ecx
64006b4e:	mov    DWORD PTR [eax],ebx
64006b50:	mov    DWORD PTR [esp+0x2c],edi
64006b54:	mov    BYTE PTR [esp+0x38],0x1
64006b59:	mov    edx,DWORD PTR [esp+0x40]
64006b5d:	push   edx
64006b5e:	call   0x64013656
64006b63:	mov    eax,DWORD PTR [esp+0x28]
64006b67:	add    esp,0x14
64006b6a:	push   eax
64006b6b:	mov    DWORD PTR [ebp+0x18],0xf
64006b72:	mov    DWORD PTR [ebp+0x14],ebx
64006b75:	push   edi
64006b76:	mov    ecx,ebp
64006b78:	mov    BYTE PTR [ebp+0x4],bl
64006b7b:	call   0x64003410
64006b80:	push   edi
64006b81:	call   0x64013656
64006b86:	push   esi
64006b87:	call   0x64013656
64006b8c:	add    esp,0x8
64006b8f:	mov    eax,ebp
64006b91:	mov    ecx,DWORD PTR [esp+0x20]
64006b95:	mov    DWORD PTR fs:0x0,ecx
64006b9c:	pop    ecx
64006b9d:	pop    edi
64006b9e:	pop    esi
64006b9f:	pop    ebp
64006ba0:	pop    ebx
64006ba1:	add    esp,0x18
64006ba4:	ret    
64006ba5:	int3   
64006ba6:	int3   
64006ba7:	int3   
64006ba8:	int3   
64006ba9:	int3   
64006baa:	int3   
64006bab:	int3   
64006bac:	int3   
64006bad:	int3   
64006bae:	int3   
64006baf:	int3   
64006bb0:	push   0xffffffff
64006bb2:	push   0x64023399
64006bb7:	mov    eax,fs:0x0
64006bbd:	push   eax
64006bbe:	push   ecx
64006bbf:	push   esi
64006bc0:	push   edi
64006bc1:	mov    eax,ds:0x640521ac
64006bc6:	xor    eax,esp
64006bc8:	push   eax
64006bc9:	lea    eax,[esp+0x10]
64006bcd:	mov    fs:0x0,eax
64006bd3:	mov    esi,DWORD PTR [esp+0x20]
64006bd7:	xor    edi,edi
64006bd9:	mov    DWORD PTR [esp+0x18],edi
64006bdd:	mov    DWORD PTR [esp+0xc],edi
64006be1:	mov    eax,DWORD PTR [ebx]
64006be3:	mov    ecx,DWORD PTR [eax-0x10]
64006be6:	cmp    ecx,edi
64006be8:	je     0x64006bf5
64006bea:	mov    edx,DWORD PTR [ecx]
64006bec:	mov    eax,DWORD PTR [edx+0x10]
64006bef:	call   eax
64006bf1:	cmp    eax,edi
64006bf3:	jne    0x64006c05
64006bf5:	mov    edx,DWORD PTR ds:0x640539e4
64006bfb:	mov    eax,DWORD PTR [edx+0x10]
64006bfe:	mov    ecx,0x640539e4
64006c03:	call   eax
64006c05:	xor    ecx,ecx
64006c07:	cmp    eax,edi
64006c09:	setne  cl
64006c0c:	cmp    ecx,edi
64006c0e:	jne    0x64006c1a
64006c10:	push   0x80004005
64006c15:	call   0x64001080
64006c1a:	mov    edx,DWORD PTR [eax]
64006c1c:	mov    ecx,eax
64006c1e:	mov    eax,DWORD PTR [edx+0xc]
64006c21:	call   eax
64006c23:	add    eax,0x10
64006c26:	mov    DWORD PTR [esi],eax
64006c28:	mov    ecx,DWORD PTR [esp+0x24]
64006c2c:	mov    DWORD PTR [esp+0x18],edi
64006c30:	mov    ecx,DWORD PTR [ecx]
64006c32:	mov    edi,DWORD PTR [ecx-0xc]
64006c35:	mov    edx,DWORD PTR [ebx]
64006c37:	mov    eax,DWORD PTR [edx-0xc]
64006c3a:	push   edi
64006c3b:	push   ecx
64006c3c:	push   edx
64006c3d:	push   esi
64006c3e:	mov    DWORD PTR [esp+0x1c],0x1
64006c46:	call   0x64003730
64006c4b:	add    esp,0x10
64006c4e:	mov    eax,esi
64006c50:	mov    ecx,DWORD PTR [esp+0x10]
64006c54:	mov    DWORD PTR fs:0x0,ecx
64006c5b:	pop    ecx
64006c5c:	pop    edi
64006c5d:	pop    esi
64006c5e:	add    esp,0x10
64006c61:	ret    
64006c62:	int3   
64006c63:	int3   
64006c64:	int3   
64006c65:	int3   
64006c66:	int3   
64006c67:	int3   
64006c68:	int3   
64006c69:	int3   
64006c6a:	int3   
64006c6b:	int3   
64006c6c:	int3   
64006c6d:	int3   
64006c6e:	int3   
64006c6f:	int3   
64006c70:	push   ebp
64006c71:	mov    ebp,esp
64006c73:	and    esp,0xfffffff8
64006c76:	sub    esp,0x34
64006c79:	xor    eax,eax
64006c7b:	push   ebx
64006c7c:	mov    DWORD PTR [esp+0x24],eax
64006c80:	mov    DWORD PTR [esp+0x28],eax
64006c84:	mov    DWORD PTR [esp+0x2c],eax
64006c88:	mov    DWORD PTR [esp+0x30],eax
64006c8c:	mov    DWORD PTR [esp+0x34],eax
64006c90:	mov    eax,DWORD PTR [ebp+0xc]
64006c93:	push   esi
64006c94:	push   edi
64006c95:	mov    edi,DWORD PTR [ebp+0x8]
64006c98:	add    eax,0xc
64006c9b:	mov    DWORD PTR [esp+0xc],edi
64006c9f:	mov    DWORD PTR [esp+0x18],eax
64006ca3:	mov    eax,0x14
64006ca8:	lea    ecx,[esp+0x2c]
64006cac:	mov    edx,edi
64006cae:	mov    edi,edi
64006cb0:	mov    esi,DWORD PTR [edx]
64006cb2:	cmp    esi,DWORD PTR [ecx]
64006cb4:	jne    0x64006cc8
64006cb6:	sub    eax,0x4
64006cb9:	add    ecx,0x4
64006cbc:	add    edx,0x4
64006cbf:	cmp    eax,0x4
64006cc2:	jae    0x64006cb0
64006cc4:	test   eax,eax
64006cc6:	je     0x64006d25
64006cc8:	movzx  esi,BYTE PTR [edx]
64006ccb:	movzx  ebx,BYTE PTR [ecx]
64006cce:	sub    esi,ebx
64006cd0:	jne    0x64006d17
64006cd2:	sub    eax,0x1
64006cd5:	add    ecx,0x1
64006cd8:	add    edx,0x1
64006cdb:	test   eax,eax
64006cdd:	je     0x64006d25
64006cdf:	movzx  esi,BYTE PTR [edx]
64006ce2:	movzx  ebx,BYTE PTR [ecx]
64006ce5:	sub    esi,ebx
64006ce7:	jne    0x64006d17
64006ce9:	sub    eax,0x1
64006cec:	add    ecx,0x1
64006cef:	add    edx,0x1
64006cf2:	test   eax,eax
64006cf4:	je     0x64006d25
64006cf6:	movzx  esi,BYTE PTR [edx]
64006cf9:	movzx  ebx,BYTE PTR [ecx]
64006cfc:	sub    esi,ebx
64006cfe:	jne    0x64006d17
64006d00:	sub    eax,0x1
64006d03:	add    ecx,0x1
64006d06:	add    edx,0x1
64006d09:	test   eax,eax
64006d0b:	je     0x64006d25
64006d0d:	movzx  esi,BYTE PTR [edx]
64006d10:	movzx  ecx,BYTE PTR [ecx]
64006d13:	sub    esi,ecx
64006d15:	je     0x64006d25
64006d17:	test   esi,esi
64006d19:	mov    eax,0x1
64006d1e:	jg     0x64006d27
64006d20:	or     eax,0xffffffff
64006d23:	jmp    0x64006d27
64006d25:	xor    eax,eax
64006d27:	test   eax,eax
64006d29:	je     0x64006e0d
64006d2f:	mov    eax,DWORD PTR [ebp+0xc]
64006d32:	sub    eax,DWORD PTR [ebp+0x8]
64006d35:	cdq    
64006d36:	mov    ebx,eax
64006d38:	mov    DWORD PTR [esp+0x24],edx
64006d3c:	mov    edx,DWORD PTR [esp+0x18]
64006d40:	mov    eax,DWORD PTR [edx]
64006d42:	lea    esi,[eax+ebx*1+0x64000000]
64006d49:	push   esi
64006d4a:	mov    DWORD PTR [esp+0x24],ebx
64006d4e:	call   DWORD PTR ds:0x6402c0a4
64006d54:	test   eax,eax
64006d56:	mov    DWORD PTR [esp+0x1c],eax
64006d5a:	jne    0x64006d67
64006d5c:	push   esi
64006d5d:	call   DWORD PTR ds:0x6402c0a8
64006d63:	mov    DWORD PTR [esp+0x1c],eax
64006d67:	mov    edi,DWORD PTR [edi]
64006d69:	mov    ecx,DWORD PTR [esp+0xc]
64006d6d:	mov    esi,DWORD PTR [ecx+0x10]
64006d70:	add    edi,0x64000000
64006d76:	add    esi,0x64000000
64006d7c:	cmp    DWORD PTR [edi],0x0
64006d7f:	lea    edx,[ebx+edi*1]
64006d82:	mov    DWORD PTR [esp+0x14],edx
64006d86:	je     0x64006dee
64006d88:	mov    eax,DWORD PTR [esp+0x14]
64006d8c:	mov    eax,DWORD PTR [eax]
64006d8e:	test   eax,eax
64006d90:	je     0x64006dde
64006d92:	js     0x64006dde
64006d94:	mov    edx,DWORD PTR [esp+0x1c]
64006d98:	lea    ecx,[eax+ebx*1+0x64000002]
64006d9f:	push   ecx
64006da0:	push   edx
64006da1:	call   DWORD PTR ds:0x6402c0a0
64006da7:	mov    ebx,eax
64006da9:	xor    eax,eax
64006dab:	mov    ecx,ebx
64006dad:	or     ecx,eax
64006daf:	je     0x64006e04
64006db1:	lea    edx,[esp+0x10]
64006db5:	push   edx
64006db6:	push   0x40
64006db8:	push   0x4
64006dba:	push   esi
64006dbb:	mov    DWORD PTR [esp+0x20],eax
64006dbf:	call   DWORD PTR ds:0x6405454c
64006dc5:	mov    ecx,DWORD PTR [esp+0x10]
64006dc9:	lea    eax,[esp+0x10]
64006dcd:	push   eax
64006dce:	push   ecx
64006dcf:	push   0x4
64006dd1:	push   esi
64006dd2:	mov    DWORD PTR [esi],ebx
64006dd4:	call   DWORD PTR ds:0x6405454c
64006dda:	mov    ebx,DWORD PTR [esp+0x20]
64006dde:	add    DWORD PTR [esp+0x14],0x4
64006de3:	add    edi,0x4
64006de6:	add    esi,0x4
64006de9:	cmp    DWORD PTR [edi],0x0
64006dec:	jne    0x64006d88
64006dee:	mov    eax,0x14
64006df3:	add    DWORD PTR [esp+0xc],eax
64006df7:	add    DWORD PTR [esp+0x18],eax
64006dfb:	mov    edi,DWORD PTR [esp+0xc]
64006dff:	jmp    0x64006ca3
64006e04:	xor    al,al
64006e06:	pop    edi
64006e07:	pop    esi
64006e08:	pop    ebx
64006e09:	mov    esp,ebp
64006e0b:	pop    ebp
64006e0c:	ret    
64006e0d:	pop    edi
64006e0e:	pop    esi
64006e0f:	mov    al,0x1
64006e11:	pop    ebx
64006e12:	mov    esp,ebp
64006e14:	pop    ebp
64006e15:	ret    
64006e16:	int3   
64006e17:	int3   
64006e18:	int3   
64006e19:	int3   
64006e1a:	int3   
64006e1b:	int3   
64006e1c:	int3   
64006e1d:	int3   
64006e1e:	int3   
64006e1f:	int3   
64006e20:	mov    eax,0x853c
64006e25:	call   0x64017f50
64006e2a:	mov    eax,ds:0x640521ac
64006e2f:	xor    eax,esp
64006e31:	mov    DWORD PTR [esp+0x8538],eax
64006e38:	push   ebx
64006e39:	push   esi
64006e3a:	push   edi
64006e3b:	mov    edi,DWORD PTR [esp+0x854c]
64006e42:	push   0x64042b64
64006e47:	push   0x64042b74
64006e4c:	call   DWORD PTR ds:0x6402c0a4
64006e52:	push   eax
64006e53:	call   DWORD PTR ds:0x6402c0a0
64006e59:	mov    ds:0x6405454c,eax
64006e5e:	mov    eax,ds:0x6400003c
64006e63:	mov    eax,DWORD PTR [eax+0x64000080]
64006e69:	test   eax,eax
64006e6b:	je     0x64006e79
64006e6d:	lea    ecx,[eax+0x64000000]
64006e73:	mov    DWORD PTR [esp+0x10],ecx
64006e77:	jmp    0x64006e81
64006e79:	mov    DWORD PTR [esp+0x10],0x0
64006e81:	push   0x64041dfc
64006e86:	push   0x2711
64006e8b:	push   edi
64006e8c:	call   DWORD PTR ds:0x6402c024
64006e92:	mov    esi,eax
64006e94:	test   esi,esi
64006e96:	je     0x64006f45
64006e9c:	push   esi
64006e9d:	push   edi
64006e9e:	call   DWORD PTR ds:0x6402c020
64006ea4:	mov    ebx,eax
64006ea6:	test   ebx,ebx
64006ea8:	je     0x64006f45
64006eae:	push   esi
64006eaf:	push   edi
64006eb0:	call   DWORD PTR ds:0x6402c018
64006eb6:	push   ebx
64006eb7:	mov    esi,eax
64006eb9:	call   DWORD PTR ds:0x6402c01c
64006ebf:	mov    ebx,eax
64006ec1:	mov    eax,0x4
64006ec6:	mov    ecx,0x64042b60
64006ecb:	mov    edx,ebx
64006ecd:	push   ebp
64006ece:	mov    edi,edi
64006ed0:	mov    edi,DWORD PTR [edx]
64006ed2:	cmp    edi,DWORD PTR [ecx]
64006ed4:	jne    0x64006ee8
64006ed6:	sub    eax,0x4
64006ed9:	add    ecx,0x4
64006edc:	add    edx,0x4
64006edf:	cmp    eax,0x4
64006ee2:	jae    0x64006ed0
64006ee4:	test   eax,eax
64006ee6:	je     0x64006f5f
64006ee8:	movzx  edi,BYTE PTR [edx]
64006eeb:	movzx  ebp,BYTE PTR [ecx]
64006eee:	sub    edi,ebp
64006ef0:	jne    0x64006f37
64006ef2:	sub    eax,0x1
64006ef5:	add    ecx,0x1
64006ef8:	add    edx,0x1
64006efb:	test   eax,eax
64006efd:	je     0x64006f5f
64006eff:	movzx  edi,BYTE PTR [edx]
64006f02:	movzx  ebp,BYTE PTR [ecx]
64006f05:	sub    edi,ebp
64006f07:	jne    0x64006f37
64006f09:	sub    eax,0x1
64006f0c:	add    ecx,0x1
64006f0f:	add    edx,0x1
64006f12:	test   eax,eax
64006f14:	je     0x64006f5f
64006f16:	movzx  edi,BYTE PTR [edx]
64006f19:	movzx  ebp,BYTE PTR [ecx]
64006f1c:	sub    edi,ebp
64006f1e:	jne    0x64006f37
64006f20:	sub    eax,0x1
64006f23:	add    ecx,0x1
64006f26:	add    edx,0x1
64006f29:	test   eax,eax
64006f2b:	je     0x64006f5f
64006f2d:	movzx  edi,BYTE PTR [edx]
64006f30:	movzx  edx,BYTE PTR [ecx]
64006f33:	sub    edi,edx
64006f35:	je     0x64006f5f
64006f37:	test   edi,edi
64006f39:	mov    eax,0x1
64006f3e:	jg     0x64006f61
64006f40:	or     eax,0xffffffff
64006f43:	jmp    0x64006f61
64006f45:	pop    edi
64006f46:	pop    esi
64006f47:	xor    al,al
64006f49:	pop    ebx
64006f4a:	mov    ecx,DWORD PTR [esp+0x8538]
64006f51:	xor    ecx,esp
64006f53:	call   0x64013d18
64006f58:	add    esp,0x853c
64006f5e:	ret    
64006f5f:	xor    eax,eax
64006f61:	test   eax,eax
64006f63:	pop    ebp
64006f64:	jne    0x64006f45
64006f66:	mov    edi,DWORD PTR [ebx+0x4]
64006f69:	push   edi
64006f6a:	lea    eax,[ebx+0x8]
64006f6d:	push   eax
64006f6e:	lea    ecx,[esp+0x1c]
64006f72:	push   ecx
64006f73:	call   0x640151f0
64006f78:	sub    esi,edi
64006f7a:	sub    esi,0x8
64006f7d:	push   esi
64006f7e:	lea    edx,[edi+ebx*1+0x8]
64006f82:	push   edx
64006f83:	lea    eax,[esp+0x1028]
64006f8a:	push   eax
64006f8b:	call   0x640151f0
64006f90:	add    esp,0x18
64006f93:	xor    ecx,ecx
64006f95:	xor    edx,edx
64006f97:	test   esi,esi
64006f99:	je     0x64006fb9
64006f9b:	jmp    0x64006fa0
64006f9d:	lea    ecx,[ecx+0x0]
64006fa0:	mov    al,BYTE PTR [esp+edx*1+0x14]
64006fa4:	xor    BYTE PTR [esp+ecx*1+0x1014],al
64006fab:	lea    eax,[edx+0x1]
64006fae:	xor    edx,edx
64006fb0:	add    ecx,0x1
64006fb3:	div    edi
64006fb5:	cmp    ecx,esi
64006fb7:	jne    0x64006fa0
64006fb9:	mov    edi,DWORD PTR [esp+0x10]
64006fbd:	lea    ecx,[esp+0xc]
64006fc1:	push   ecx
64006fc2:	push   0x40
64006fc4:	push   esi
64006fc5:	push   edi
64006fc6:	mov    DWORD PTR [esp+0x1c],0x0
64006fce:	call   DWORD PTR ds:0x6405454c
64006fd4:	lea    edx,[esp+0x1014]
64006fdb:	push   edx
64006fdc:	push   edi
64006fdd:	call   0x64006c70
64006fe2:	mov    ecx,DWORD PTR [esp+0x14]
64006fe6:	add    esp,0x8
64006fe9:	mov    bl,al
64006feb:	lea    eax,[esp+0xc]
64006fef:	push   eax
64006ff0:	push   ecx
64006ff1:	push   esi
64006ff2:	push   edi
64006ff3:	call   DWORD PTR ds:0x6405454c
64006ff9:	mov    ecx,DWORD PTR [esp+0x8544]
64007000:	pop    edi
64007001:	pop    esi
64007002:	mov    al,bl
64007004:	pop    ebx
64007005:	xor    ecx,esp
64007007:	call   0x64013d18
6400700c:	add    esp,0x853c
64007012:	ret    
64007013:	int3   
64007014:	int3   
64007015:	int3   
64007016:	int3   
64007017:	int3   
64007018:	int3   
64007019:	int3   
6400701a:	int3   
6400701b:	int3   
6400701c:	int3   
6400701d:	int3   
6400701e:	int3   
6400701f:	int3   
64007020:	mov    eax,ecx
64007022:	mov    cl,BYTE PTR [esp+0x8]
64007026:	mov    BYTE PTR [eax],cl
64007028:	mov    DWORD PTR [eax+0x4],0xffffffff
6400702f:	mov    BYTE PTR [eax+0x8],0x1
64007033:	ret    0x8
64007036:	int3   
64007037:	int3   
64007038:	int3   
64007039:	int3   
6400703a:	int3   
6400703b:	int3   
6400703c:	int3   
6400703d:	int3   
6400703e:	int3   
6400703f:	int3   
64007040:	push   esi
64007041:	mov    esi,ecx
64007043:	push   edi
64007044:	mov    edi,DWORD PTR [esi+0x4]
64007047:	test   edi,edi
64007049:	je     0x64007063
6400704b:	push   ebx
6400704c:	call   DWORD PTR ds:0x6402c06c
64007052:	push   edi
64007053:	mov    ebx,eax
64007055:	call   DWORD PTR ds:0x6402c078
6400705b:	push   ebx
6400705c:	call   DWORD PTR ds:0x6402c074
64007062:	pop    ebx
64007063:	pop    edi
64007064:	mov    DWORD PTR [esi+0x4],0x0
6400706b:	pop    esi
6400706c:	ret    
6400706d:	int3   
6400706e:	int3   
6400706f:	int3   
64007070:	push   ebp
64007071:	mov    ebp,esp
64007073:	and    esp,0xfffffff8
64007076:	push   0xffffffff
64007078:	push   0x64023a48
6400707d:	mov    eax,fs:0x0
64007083:	push   eax
64007084:	sub    esp,0x50
64007087:	push   ebx
64007088:	push   esi
64007089:	push   edi
6400708a:	mov    eax,ds:0x640521ac
6400708f:	xor    eax,esp
64007091:	push   eax
64007092:	lea    eax,[esp+0x60]
64007096:	mov    fs:0x0,eax
6400709c:	xor    ebx,ebx
6400709e:	mov    DWORD PTR [esp+0x10],ebx
640070a2:	mov    DWORD PTR [esp+0x14],ebx
640070a6:	push   0xa
640070a8:	mov    DWORD PTR [esp+0x6c],ebx
640070ac:	call   0x64012faa
640070b1:	mov    edi,eax
640070b3:	add    esp,0x4
640070b6:	mov    DWORD PTR [esp+0x10],edi
640070ba:	mov    eax,DWORD PTR [ebp+0x10]
640070bd:	cmp    eax,ebx
640070bf:	mov    BYTE PTR [esp+0x68],0x1
640070c4:	mov    DWORD PTR [edi+0x4],0x2
640070cb:	je     0x640070d4
640070cd:	mov    ax,WORD PTR [eax]
640070d0:	mov    WORD PTR [edi+0x8],ax
640070d4:	mov    eax,DWORD PTR [edi+0x4]
640070d7:	mov    ecx,DWORD PTR [ebp+0x8]
640070da:	add    eax,0x8
640070dd:	push   eax
640070de:	push   edi
640070df:	push   eax
640070e0:	push   edi
640070e1:	push   0x3
640070e3:	call   0x640072e0
640070e8:	test   eax,eax
640070ea:	jne    0x6400714f
640070ec:	push   0x64042b84
640070f1:	push   0x19
640070f3:	push   0x64042bc0
640070f8:	call   0x64002e50
640070fd:	mov    ecx,eax
640070ff:	add    esp,0xc
64007102:	mov    DWORD PTR [esp+0x30],0xf
6400710a:	mov    DWORD PTR [esp+0x2c],ebx
6400710e:	mov    BYTE PTR [esp+0x1c],0x0
64007113:	lea    esi,[ecx+0x1]
64007116:	mov    dl,BYTE PTR [ecx]
64007118:	add    ecx,0x1
6400711b:	test   dl,dl
6400711d:	jne    0x64007116
6400711f:	sub    ecx,esi
64007121:	push   ecx
64007122:	push   eax
64007123:	lea    ecx,[esp+0x20]
64007127:	call   0x64003410
6400712c:	lea    ecx,[esp+0x18]
64007130:	push   ecx
64007131:	lea    edx,[esp+0x38]
64007135:	push   edx
64007136:	mov    BYTE PTR [esp+0x70],0x2
6400713b:	call   0x64001470
64007140:	push   0x64044100
64007145:	lea    eax,[esp+0x38]
64007149:	push   eax
6400714a:	call   0x64013884
6400714f:	cmp    DWORD PTR [edi],0x1
64007152:	jne    0x640071a8
64007154:	mov    ebx,DWORD PTR [edi+0x4]
64007157:	lea    ecx,[ebx+0x8]
6400715a:	push   ecx
6400715b:	call   0x64012faa
64007160:	mov    esi,eax
64007162:	add    esp,0x4
64007165:	cmp    esi,edi
64007167:	je     0x64007172
64007169:	push   edi
6400716a:	call   0x64013656
6400716f:	add    esp,0x4
64007172:	mov    eax,DWORD PTR [ebp+0x10]
64007175:	test   eax,eax
64007177:	mov    edi,esi
64007179:	mov    DWORD PTR [esp+0x10],edi
6400717d:	mov    DWORD PTR [esi+0x4],ebx
64007180:	je     0x64007189
64007182:	mov    dx,WORD PTR [eax]
64007185:	mov    WORD PTR [esi+0x8],dx
64007189:	mov    eax,DWORD PTR [esi+0x4]
6400718c:	mov    ecx,DWORD PTR [ebp+0x8]
6400718f:	add    eax,0x8
64007192:	push   eax
64007193:	push   esi
64007194:	push   eax
64007195:	push   esi
64007196:	push   0x3
64007198:	call   0x640072e0
6400719d:	test   eax,eax
6400719f:	je     0x640071f1
640071a1:	cmp    DWORD PTR [esi],0x1
640071a4:	je     0x64007154
640071a6:	xor    ebx,ebx
640071a8:	cmp    DWORD PTR [edi],ebx
640071aa:	je     0x64007259
640071b0:	push   0x64042c14
640071b5:	push   0x19
640071b7:	push   0x64042bc0
640071bc:	call   0x64002e50
640071c1:	add    esp,0xc
640071c4:	push   eax
640071c5:	lea    ecx,[esp+0x1c]
640071c9:	call   0x64002920
640071ce:	lea    eax,[esp+0x18]
640071d2:	push   eax
640071d3:	lea    ecx,[esp+0x38]
640071d7:	push   ecx
640071d8:	mov    BYTE PTR [esp+0x70],0x4
640071dd:	call   0x64001470
640071e2:	push   0x64044100
640071e7:	lea    edx,[esp+0x38]
640071eb:	push   edx
640071ec:	call   0x64013884
640071f1:	push   0x64042bdc
640071f6:	push   0x19
640071f8:	push   0x64042bc0
640071fd:	call   0x64002e50
64007202:	mov    ecx,eax
64007204:	add    esp,0xc
64007207:	mov    DWORD PTR [esp+0x30],0xf
6400720f:	mov    DWORD PTR [esp+0x2c],0x0
64007217:	mov    BYTE PTR [esp+0x1c],0x0
6400721c:	lea    esi,[ecx+0x1]
6400721f:	nop
64007220:	mov    dl,BYTE PTR [ecx]
64007222:	add    ecx,0x1
64007225:	test   dl,dl
64007227:	jne    0x64007220
64007229:	sub    ecx,esi
6400722b:	push   ecx
6400722c:	push   eax
6400722d:	lea    ecx,[esp+0x20]
64007231:	call   0x64003410
64007236:	lea    eax,[esp+0x18]
6400723a:	push   eax
6400723b:	lea    ecx,[esp+0x38]
6400723f:	push   ecx
64007240:	mov    BYTE PTR [esp+0x70],0x3
64007245:	call   0x64001470
6400724a:	push   0x64044100
6400724f:	lea    edx,[esp+0x38]
64007253:	push   edx
64007254:	call   0x64013884
64007259:	mov    eax,DWORD PTR [edi+0x4]
6400725c:	mov    esi,DWORD PTR [ebp+0xc]
6400725f:	push   eax
64007260:	lea    eax,[edi+0x8]
64007263:	mov    DWORD PTR [esi+0x18],0xf
6400726a:	mov    DWORD PTR [esi+0x14],ebx
6400726d:	push   eax
6400726e:	mov    ecx,esi
64007270:	mov    BYTE PTR [esi+0x4],0x0
64007274:	call   0x64003410
64007279:	push   edi
6400727a:	call   0x64013656
6400727f:	add    esp,0x4
64007282:	push   ebx
64007283:	call   0x64013656
64007288:	add    esp,0x4
6400728b:	mov    eax,esi
6400728d:	mov    ecx,DWORD PTR [esp+0x60]
64007291:	mov    DWORD PTR fs:0x0,ecx
64007298:	pop    ecx
64007299:	pop    edi
6400729a:	pop    esi
6400729b:	pop    ebx
6400729c:	mov    esp,ebp
6400729e:	pop    ebp
6400729f:	ret    0xc
640072a2:	int3   
640072a3:	int3   
640072a4:	int3   
640072a5:	int3   
640072a6:	int3   
640072a7:	int3   
640072a8:	int3   
640072a9:	int3   
640072aa:	int3   
640072ab:	int3   
640072ac:	int3   
640072ad:	int3   
640072ae:	int3   
640072af:	int3   
640072b0:	push   ecx
640072b1:	push   esi
640072b2:	mov    esi,DWORD PTR [esp+0xc]
640072b6:	lea    eax,[esp+0x10]
640072ba:	push   eax
640072bb:	push   esi
640072bc:	push   ecx
640072bd:	mov    DWORD PTR [esp+0x10],0x0
640072c5:	call   0x64007070
640072ca:	mov    eax,esi
640072cc:	pop    esi
640072cd:	pop    ecx
640072ce:	ret    0x8
640072d1:	int3   
640072d2:	int3   
640072d3:	int3   
640072d4:	int3   
640072d5:	int3   
640072d6:	int3   
640072d7:	int3   
640072d8:	int3   
640072d9:	int3   
640072da:	int3   
640072db:	int3   
640072dc:	int3   
640072dd:	int3   
640072de:	int3   
640072df:	int3   
640072e0:	push   0xffffffff
640072e2:	push   0x640239f8
640072e7:	mov    eax,fs:0x0
640072ed:	push   eax
640072ee:	push   ecx
640072ef:	push   ebx
640072f0:	push   ebp
640072f1:	push   esi
640072f2:	push   edi
640072f3:	mov    eax,ds:0x640521ac
640072f8:	xor    eax,esp
640072fa:	push   eax
640072fb:	lea    eax,[esp+0x18]
640072ff:	mov    fs:0x0,eax
64007305:	mov    esi,ecx
64007307:	xor    ebp,ebp
64007309:	mov    DWORD PTR [esp+0x14],ebp
6400730d:	mov    DWORD PTR [esp+0x20],ebp
64007311:	cmp    BYTE PTR [esi],0x0
64007314:	jne    0x64007321
64007316:	call   0x64007400
6400731b:	mov    ebp,eax
6400731d:	mov    ebx,ebp
6400731f:	jmp    0x64007357
64007321:	cmp    DWORD PTR [esi+0x4],0xffffffff
64007325:	jne    0x64007354
64007327:	call   0x64007400
6400732c:	mov    edi,DWORD PTR [esi+0x4]
6400732f:	test   edi,edi
64007331:	mov    DWORD PTR [esp+0x14],eax
64007335:	je     0x6400734d
64007337:	call   DWORD PTR ds:0x6402c06c
6400733d:	push   edi
6400733e:	mov    ebx,eax
64007340:	call   DWORD PTR ds:0x6402c078
64007346:	push   ebx
64007347:	call   DWORD PTR ds:0x6402c074
6400734d:	mov    eax,DWORD PTR [esp+0x14]
64007351:	mov    DWORD PTR [esi+0x4],eax
64007354:	mov    ebx,DWORD PTR [esi+0x4]
64007357:	cmp    ebx,0xffffffff
6400735a:	jne    0x6400737a
6400735c:	test   ebp,ebp
6400735e:	je     0x64007376
64007360:	call   DWORD PTR ds:0x6402c06c
64007366:	push   ebp
64007367:	mov    esi,eax
64007369:	call   DWORD PTR ds:0x6402c078
6400736f:	push   esi
64007370:	call   DWORD PTR ds:0x6402c074
64007376:	xor    eax,eax
64007378:	jmp    0x640073e8
6400737a:	mov    ecx,DWORD PTR [esp+0x38]
6400737e:	mov    edx,DWORD PTR [esp+0x30]
64007382:	mov    edi,DWORD PTR [esp+0x34]
64007386:	push   ecx
64007387:	mov    ecx,DWORD PTR [esp+0x2c]
6400738b:	push   edx
6400738c:	mov    edx,DWORD PTR [esp+0x34]
64007390:	push   esi
64007391:	call   0x64007610
64007396:	mov    ebx,eax
64007398:	test   ebx,ebx
6400739a:	mov    DWORD PTR [esp+0x38],ebx
6400739e:	jne    0x640073cc
640073a0:	cmp    BYTE PTR [esi],al
640073a2:	je     0x640073cc
640073a4:	mov    edi,DWORD PTR [esi+0x4]
640073a7:	test   edi,edi
640073a9:	je     0x640073c5
640073ab:	call   DWORD PTR ds:0x6402c06c
640073b1:	push   edi
640073b2:	mov    ebx,eax
640073b4:	call   DWORD PTR ds:0x6402c078
640073ba:	push   ebx
640073bb:	call   DWORD PTR ds:0x6402c074
640073c1:	mov    ebx,DWORD PTR [esp+0x38]
640073c5:	mov    DWORD PTR [esi+0x4],0x0
640073cc:	test   ebp,ebp
640073ce:	je     0x640073e6
640073d0:	call   DWORD PTR ds:0x6402c06c
640073d6:	push   ebp
640073d7:	mov    esi,eax
640073d9:	call   DWORD PTR ds:0x6402c078
640073df:	push   esi
640073e0:	call   DWORD PTR ds:0x6402c074
640073e6:	mov    eax,ebx
640073e8:	mov    ecx,DWORD PTR [esp+0x18]
640073ec:	mov    DWORD PTR fs:0x0,ecx
640073f3:	pop    ecx
640073f4:	pop    edi
640073f5:	pop    esi
640073f6:	pop    ebp
640073f7:	pop    ebx
640073f8:	add    esp,0x10
640073fb:	ret    0x14
640073fe:	int3   
640073ff:	int3   
64007400:	push   ebp
64007401:	mov    ebp,esp
64007403:	and    esp,0xfffffff8
64007406:	push   0xffffffff
64007408:	push   0x640239ce
6400740d:	mov    eax,fs:0x0
64007413:	push   eax
64007414:	sub    esp,0x14
64007417:	push   ebx
64007418:	push   ebp
64007419:	push   esi
6400741a:	push   edi
6400741b:	mov    eax,ds:0x640521ac
64007420:	xor    eax,esp
64007422:	push   eax
64007423:	lea    eax,[esp+0x28]
64007427:	mov    fs:0x0,eax
6400742d:	xor    edi,edi
6400742f:	mov    DWORD PTR [esp+0x1c],edi
64007433:	lea    eax,[esp+0x18]
64007437:	mov    DWORD PTR [esp+0x30],edi
6400743b:	mov    ecx,DWORD PTR ds:0x64054684
64007441:	push   eax
64007442:	call   0x64002a80
64007447:	mov    ebx,0x1
6400744c:	mov    BYTE PTR [esp+0x30],bl
64007450:	test   BYTE PTR ds:0x6405468c,bl
64007456:	jne    0x640074a3
64007458:	or     DWORD PTR ds:0x6405468c,ebx
6400745e:	push   0x64042c4c
64007463:	push   0xb
64007465:	push   0x64042c80
6400746a:	mov    BYTE PTR [esp+0x3c],0x2
6400746f:	call   0x64002e50
64007474:	add    esp,0xc
64007477:	push   eax
64007478:	push   0x64042c8c
6400747d:	push   0xc
6400747f:	push   0x64042ccc
64007484:	call   0x64002e50
64007489:	add    esp,0xc
6400748c:	push   eax
6400748d:	call   DWORD PTR ds:0x6402c0a4
64007493:	push   eax
64007494:	call   DWORD PTR ds:0x6402c0a0
6400749a:	mov    ds:0x64054688,eax
6400749f:	mov    BYTE PTR [esp+0x30],bl
640074a3:	mov    ebx,DWORD PTR ds:0x6402c06c
640074a9:	lea    esp,[esp+0x0]
640074b0:	mov    ecx,DWORD PTR [esp+0x18]
640074b4:	push   0x0
640074b6:	push   0x0
640074b8:	push   0x3
640074ba:	push   0x0
640074bc:	push   0x0
640074be:	push   0xc0000000
640074c3:	push   ecx
640074c4:	call   DWORD PTR ds:0x64054688
640074ca:	test   edi,edi
640074cc:	mov    esi,eax
640074ce:	je     0x640074e6
640074d0:	call   ebx
640074d2:	push   edi
640074d3:	mov    ebp,eax
640074d5:	call   DWORD PTR ds:0x6402c078
640074db:	push   ebp
640074dc:	mov    ebp,DWORD PTR ds:0x6402c074
640074e2:	call   ebp
640074e4:	jmp    0x640074ec
640074e6:	mov    ebp,DWORD PTR ds:0x6402c074
640074ec:	cmp    esi,0xffffffff
640074ef:	mov    edi,esi
640074f1:	mov    DWORD PTR [esp+0x1c],edi
640074f5:	jne    0x6400751d
640074f7:	call   ebx
640074f9:	cmp    eax,0xe7
640074fe:	jne    0x640075b9
64007504:	mov    edx,DWORD PTR [esp+0x18]
64007508:	push   0x1f4
6400750d:	push   edx
6400750e:	call   DWORD PTR ds:0x6402c0ac
64007514:	test   eax,eax
64007516:	jne    0x640074b0
64007518:	jmp    0x640075bb
6400751d:	push   0x0
6400751f:	push   0x0
64007521:	lea    eax,[esp+0x28]
64007525:	push   eax
64007526:	push   esi
64007527:	mov    DWORD PTR [esp+0x30],0x2
6400752f:	call   DWORD PTR ds:0x6402c0b0
64007535:	test   eax,eax
64007537:	jne    0x64007576
64007539:	call   ebx
6400753b:	mov    BYTE PTR [esp+0x30],0x0
64007540:	mov    eax,DWORD PTR [esp+0x18]
64007544:	add    eax,0xfffffff0
64007547:	lea    ecx,[eax+0xc]
6400754a:	or     edx,0xffffffff
6400754d:	lock xadd DWORD PTR [ecx],edx
64007551:	dec    edx
64007552:	test   edx,edx
64007554:	jg     0x64007560
64007556:	mov    ecx,DWORD PTR [eax]
64007558:	mov    edx,DWORD PTR [ecx]
6400755a:	push   eax
6400755b:	mov    eax,DWORD PTR [edx+0x4]
6400755e:	call   eax
64007560:	test   esi,esi
64007562:	je     0x640075ef
64007568:	call   ebx
6400756a:	push   esi
6400756b:	mov    edi,eax
6400756d:	call   DWORD PTR ds:0x6402c078
64007573:	push   edi
64007574:	jmp    0x640075ed
64007576:	mov    BYTE PTR [esp+0x30],0x0
6400757b:	mov    eax,DWORD PTR [esp+0x18]
6400757f:	add    eax,0xfffffff0
64007582:	mov    DWORD PTR [esp+0x1c],0x0
6400758a:	lea    ecx,[eax+0xc]
6400758d:	or     edx,0xffffffff
64007590:	lock xadd DWORD PTR [ecx],edx
64007594:	dec    edx
64007595:	test   edx,edx
64007597:	jg     0x640075a3
64007599:	mov    ecx,DWORD PTR [eax]
6400759b:	mov    edx,DWORD PTR [ecx]
6400759d:	push   eax
6400759e:	mov    eax,DWORD PTR [edx+0x4]
640075a1:	call   eax
640075a3:	mov    eax,esi
640075a5:	mov    ecx,DWORD PTR [esp+0x28]
640075a9:	mov    DWORD PTR fs:0x0,ecx
640075b0:	pop    ecx
640075b1:	pop    edi
640075b2:	pop    esi
640075b3:	pop    ebp
640075b4:	pop    ebx
640075b5:	mov    esp,ebp
640075b7:	pop    ebp
640075b8:	ret    
640075b9:	call   ebx
640075bb:	mov    BYTE PTR [esp+0x30],0x0
640075c0:	mov    eax,DWORD PTR [esp+0x18]
640075c4:	add    eax,0xfffffff0
640075c7:	or     edx,0xffffffff
640075ca:	lea    ecx,[eax+0xc]
640075cd:	lock xadd DWORD PTR [ecx],edx
640075d1:	dec    edx
640075d2:	test   edx,edx
640075d4:	jg     0x640075e0
640075d6:	mov    ecx,DWORD PTR [eax]
640075d8:	mov    edx,DWORD PTR [ecx]
640075da:	push   eax
640075db:	mov    eax,DWORD PTR [edx+0x4]
640075de:	call   eax
640075e0:	call   ebx
640075e2:	push   0xffffffff
640075e4:	mov    esi,eax
640075e6:	call   DWORD PTR ds:0x6402c078
640075ec:	push   esi
640075ed:	call   ebp
640075ef:	or     eax,0xffffffff
640075f2:	mov    ecx,DWORD PTR [esp+0x28]
640075f6:	mov    DWORD PTR fs:0x0,ecx
640075fd:	pop    ecx
640075fe:	pop    edi
640075ff:	pop    esi
64007600:	pop    ebp
64007601:	pop    ebx
64007602:	mov    esp,ebp
64007604:	pop    ebp
64007605:	ret    
64007606:	int3   
64007607:	int3   
64007608:	int3   
64007609:	int3   
6400760a:	int3   
6400760b:	int3   
6400760c:	int3   
6400760d:	int3   
6400760e:	int3   
6400760f:	int3   
64007610:	push   ebp
64007611:	mov    ebp,esp
64007613:	and    esp,0xfffffff8
64007616:	sub    esp,0x5c
64007619:	mov    eax,ds:0x640521ac
6400761e:	xor    eax,esp
64007620:	mov    DWORD PTR [esp+0x58],eax
64007624:	xor    eax,eax
64007626:	cmp    BYTE PTR ds:0x64054550,al
6400762c:	push   esi
6400762d:	mov    esi,edx
6400762f:	mov    WORD PTR [esp+0x18],ax
64007634:	mov    DWORD PTR [esp+0x1a],eax
64007638:	mov    DWORD PTR [esp+0x1e],eax
6400763c:	mov    DWORD PTR [esp+0x22],eax
64007640:	mov    WORD PTR [esp+0x26],ax
64007645:	mov    DWORD PTR [esp+0x28],eax
64007649:	mov    DWORD PTR [esp+0x2c],eax
6400764d:	mov    DWORD PTR [esp+0x30],eax
64007651:	mov    DWORD PTR [esp+0x34],eax
64007655:	mov    DWORD PTR [esp+0x38],eax
64007659:	mov    WORD PTR [esp+0x3c],ax
6400765e:	mov    DWORD PTR [esp+0x3e],eax
64007662:	mov    DWORD PTR [esp+0x42],eax
64007666:	mov    DWORD PTR [esp+0x46],eax
6400766a:	mov    WORD PTR [esp+0x4a],ax
6400766f:	mov    DWORD PTR [esp+0x4c],eax
64007673:	mov    DWORD PTR [esp+0x50],eax
64007677:	mov    DWORD PTR [esp+0x54],eax
6400767b:	mov    DWORD PTR [esp+0x58],eax
6400767f:	jne    0x640076ce
64007681:	mov    DWORD PTR [esp+0x28],ecx
64007685:	call   DWORD PTR ds:0x6402c03c
6400768b:	mov    ecx,DWORD PTR [ebp+0x10]
6400768e:	mov    DWORD PTR [esp+0x2c],eax
64007692:	mov    eax,DWORD PTR [ebp+0xc]
64007695:	cmp    esi,edi
64007697:	mov    DWORD PTR [esp+0x30],eax
6400769b:	mov    eax,DWORD PTR [ebp+0x8]
6400769e:	sete   dl
640076a1:	cmp    BYTE PTR [eax+0x8],0x0
640076a5:	mov    DWORD PTR [esp+0x34],ecx
640076a9:	mov    BYTE PTR [esp+0x38],dl
640076ad:	je     0x640076c3
640076af:	push   0x8
640076b1:	lea    ecx,[esp+0x1c]
640076b5:	push   0x64041a40
640076ba:	push   ecx
640076bb:	call   0x64014e03
640076c0:	add    esp,0xc
640076c3:	mov    eax,0x24
640076c8:	lea    ecx,[esp+0x18]
640076cc:	jmp    0x6400770f
640076ce:	mov    edx,DWORD PTR [ebp+0xc]
640076d1:	mov    eax,DWORD PTR [ebp+0x10]
640076d4:	cmp    esi,edi
640076d6:	mov    DWORD PTR [esp+0x50],edx
640076da:	mov    edx,DWORD PTR [ebp+0x8]
640076dd:	mov    DWORD PTR [esp+0x4c],ecx
640076e1:	sete   cl
640076e4:	cmp    BYTE PTR [edx+0x8],0x0
640076e8:	mov    DWORD PTR [esp+0x54],eax
640076ec:	mov    BYTE PTR [esp+0x58],cl
640076f0:	je     0x64007706
640076f2:	push   0x8
640076f4:	lea    eax,[esp+0x40]
640076f8:	push   0x64041a40
640076fd:	push   eax
640076fe:	call   0x64014e03
64007703:	add    esp,0xc
64007706:	mov    eax,0x20
6400770b:	lea    ecx,[esp+0x3c]
6400770f:	push   0x0
64007711:	lea    edx,[esp+0x14]
64007715:	push   edx
64007716:	push   eax
64007717:	push   ecx
64007718:	push   ebx
64007719:	call   DWORD PTR ds:0x6402c094
6400771f:	test   eax,eax
64007721:	jne    0x64007737
64007723:	xor    eax,eax
64007725:	pop    esi
64007726:	mov    ecx,DWORD PTR [esp+0x58]
6400772a:	xor    ecx,esp
6400772c:	call   0x64013d18
64007731:	mov    esp,ebp
64007733:	pop    ebp
64007734:	ret    0xc
64007737:	mov    ecx,DWORD PTR [ebp+0xc]
6400773a:	push   0x0
6400773c:	lea    eax,[esp+0x14]
64007740:	push   eax
64007741:	push   ecx
64007742:	push   esi
64007743:	push   ebx
64007744:	call   DWORD PTR ds:0x6402c094
6400774a:	test   eax,eax
6400774c:	je     0x64007723
6400774e:	mov    esi,DWORD PTR ds:0x6402c090
64007754:	xor    eax,eax
64007756:	push   eax
64007757:	lea    edx,[esp+0x18]
6400775b:	push   edx
6400775c:	mov    DWORD PTR [esp+0x10],eax
64007760:	mov    DWORD PTR [esp+0x14],eax
64007764:	push   0x8
64007766:	lea    eax,[esp+0x14]
6400776a:	push   eax
6400776b:	push   ebx
6400776c:	call   esi
6400776e:	test   eax,eax
64007770:	je     0x64007723
64007772:	cmp    DWORD PTR [esp+0x8],0x0
64007777:	je     0x64007723
64007779:	mov    eax,DWORD PTR [esp+0xc]
6400777d:	cmp    eax,DWORD PTR [ebp+0x10]
64007780:	ja     0x64007723
64007782:	test   eax,eax
64007784:	je     0x64007796
64007786:	push   0x0
64007788:	lea    ecx,[esp+0x18]
6400778c:	push   ecx
6400778d:	push   eax
6400778e:	push   edi
6400778f:	push   ebx
64007790:	call   esi
64007792:	test   eax,eax
64007794:	je     0x64007723
64007796:	mov    ecx,DWORD PTR [esp+0x5c]
6400779a:	pop    esi
6400779b:	xor    ecx,esp
6400779d:	mov    eax,0x1
640077a2:	call   0x64013d18
640077a7:	mov    esp,ebp
640077a9:	pop    ebp
640077aa:	ret    0xc
640077ad:	int3   
640077ae:	int3   
640077af:	int3   
640077b0:	push   esi
640077b1:	mov    esi,ecx
640077b3:	mov    DWORD PTR [esi],0x64041dac
640077b9:	cmp    DWORD PTR [esi+0x24],0x10
640077bd:	jb     0x640077cb
640077bf:	mov    eax,DWORD PTR [esi+0x10]
640077c2:	push   eax
640077c3:	call   0x64013656
640077c8:	add    esp,0x4
640077cb:	xor    eax,eax
640077cd:	mov    DWORD PTR [esi+0x24],0xf
640077d4:	mov    DWORD PTR [esi+0x20],eax
640077d7:	mov    ecx,esi
640077d9:	mov    BYTE PTR [esi+0x10],al
640077dc:	call   0x6401372a
640077e1:	test   BYTE PTR [esp+0x8],0x1
640077e6:	je     0x640077f1
640077e8:	push   esi
640077e9:	call   0x64013656
640077ee:	add    esp,0x4
640077f1:	mov    eax,esi
640077f3:	pop    esi
640077f4:	ret    0x4
640077f7:	int3   
640077f8:	int3   
640077f9:	int3   
640077fa:	int3   
640077fb:	int3   
640077fc:	int3   
640077fd:	int3   
640077fe:	int3   
640077ff:	int3   
64007800:	push   eax
64007801:	push   ecx
64007802:	call   0x64014f3c
64007807:	add    esp,0x8
6400780a:	ret    
6400780b:	int3   
6400780c:	int3   
6400780d:	int3   
6400780e:	int3   
6400780f:	int3   
64007810:	push   eax
64007811:	mov    eax,DWORD PTR [esp+0x8]
64007815:	push   ecx
64007816:	push   edx
64007817:	push   eax
64007818:	call   0x640150d1
6400781d:	add    esp,0x10
64007820:	ret    
64007821:	int3   
64007822:	int3   
64007823:	int3   
64007824:	int3   
64007825:	int3   
64007826:	int3   
64007827:	int3   
64007828:	int3   
64007829:	int3   
6400782a:	int3   
6400782b:	int3   
6400782c:	int3   
6400782d:	int3   
6400782e:	int3   
6400782f:	int3   
64007830:	push   ecx
64007831:	xor    eax,eax
64007833:	cmp    WORD PTR [esp+0x8],ax
64007838:	mov    DWORD PTR [esp],eax
6400783b:	je     0x64007850
6400783d:	mov    DWORD PTR [esp+0x8],eax
64007841:	push   0x64044200
64007846:	lea    eax,[esp+0xc]
6400784a:	push   eax
6400784b:	call   0x64013884
64007850:	push   0x640429fc
64007855:	push   0x64041e08
6400785a:	push   esi
6400785b:	mov    ecx,0xbf4
64007860:	call   0x64006ac0
64007865:	add    esp,0xc
64007868:	mov    eax,esi
6400786a:	pop    ecx
6400786b:	ret    
6400786c:	int3   
6400786d:	int3   
6400786e:	int3   
6400786f:	int3   
64007870:	push   ecx
64007871:	xor    eax,eax
64007873:	cmp    WORD PTR [esp+0x8],ax
64007878:	mov    DWORD PTR [esp],eax
6400787b:	je     0x64007890
6400787d:	mov    DWORD PTR [esp+0x8],eax
64007881:	push   0x64044200
64007886:	lea    eax,[esp+0xc]
6400788a:	push   eax
6400788b:	call   0x64013884
64007890:	push   0x64042a7c
64007895:	push   0x64042a28
6400789a:	push   esi
6400789b:	mov    ecx,0x53
640078a0:	call   0x64006ac0
640078a5:	add    esp,0xc
640078a8:	mov    eax,esi
640078aa:	pop    ecx
640078ab:	ret    
640078ac:	int3   
640078ad:	int3   
640078ae:	int3   
640078af:	int3   
640078b0:	sub    esp,0x8
640078b3:	xor    eax,eax
640078b5:	cmp    WORD PTR [esp+0xc],ax
640078ba:	mov    DWORD PTR [esp+0x4],eax
640078be:	je     0x640078d3
640078c0:	mov    DWORD PTR [esp+0xc],eax
640078c4:	push   0x64044200
640078c9:	lea    eax,[esp+0x10]
640078cd:	push   eax
640078ce:	call   0x64013884
640078d3:	push   0x64042b38
640078d8:	push   0x64042aa8
640078dd:	push   esi
640078de:	mov    ecx,0x8e
640078e3:	call   0x64006ac0
640078e8:	add    esp,0xc
640078eb:	mov    eax,esi
640078ed:	add    esp,0x8
640078f0:	ret    
640078f1:	int3   
640078f2:	int3   
640078f3:	int3   
640078f4:	int3   
640078f5:	int3   
640078f6:	int3   
640078f7:	int3   
640078f8:	int3   
640078f9:	int3   
640078fa:	int3   
640078fb:	int3   
640078fc:	int3   
640078fd:	int3   
640078fe:	int3   
640078ff:	int3   
64007900:	mov    DWORD PTR [ecx],0x64043498
64007906:	ret    
64007907:	int3   
64007908:	int3   
64007909:	int3   
6400790a:	int3   
6400790b:	int3   
6400790c:	int3   
6400790d:	int3   
6400790e:	int3   
6400790f:	int3   
64007910:	test   BYTE PTR [esp+0x4],0x1
64007915:	push   esi
64007916:	mov    esi,ecx
64007918:	mov    DWORD PTR [esi],0x64043498
6400791e:	je     0x64007929
64007920:	push   esi
64007921:	call   0x64013656
64007926:	add    esp,0x4
64007929:	mov    eax,esi
6400792b:	pop    esi
6400792c:	ret    0x4
6400792f:	int3   
64007930:	push   0xffffffff
64007932:	push   0x64023168
64007937:	mov    eax,fs:0x0
6400793d:	push   eax
6400793e:	push   esi
6400793f:	mov    eax,ds:0x640521ac
64007944:	xor    eax,esp
64007946:	push   eax
64007947:	lea    eax,[esp+0x8]
6400794b:	mov    fs:0x0,eax
64007951:	mov    esi,DWORD PTR [esp+0x18]
64007955:	mov    eax,DWORD PTR [esp+0x1c]
64007959:	mov    DWORD PTR [esp+0x10],0x0
64007961:	mov    DWORD PTR [esi],0x640434a4
64007967:	mov    eax,DWORD PTR [eax]
64007969:	sub    eax,0x10
6400796c:	call   0x640043d0
64007971:	add    eax,0x10
64007974:	mov    DWORD PTR [esi+0x4],eax
64007977:	mov    eax,esi
64007979:	mov    ecx,DWORD PTR [esp+0x8]
6400797d:	mov    DWORD PTR fs:0x0,ecx
64007984:	pop    ecx
64007985:	pop    esi
64007986:	add    esp,0xc
64007989:	ret    0x8
6400798c:	int3   
6400798d:	int3   
6400798e:	int3   
6400798f:	int3   
64007990:	mov    ecx,DWORD PTR [ecx+0x4]
64007993:	push   ecx
64007994:	call   DWORD PTR ds:0x6402c0e0
6400799a:	test   eax,eax
6400799c:	jne    0x640079a3
6400799e:	xor    edx,edx
640079a0:	ret    0x4
640079a3:	mov    ecx,DWORD PTR [esp+0x4]
640079a7:	push   ecx
640079a8:	push   eax
640079a9:	call   DWORD PTR ds:0x6402c0a0
640079af:	xor    edx,edx
640079b1:	ret    0x4
640079b4:	int3   
640079b5:	int3   
640079b6:	int3   
640079b7:	int3   
640079b8:	int3   
640079b9:	int3   
640079ba:	int3   
640079bb:	int3   
640079bc:	int3   
640079bd:	int3   
640079be:	int3   
640079bf:	int3   
640079c0:	push   esi
640079c1:	mov    esi,ecx
640079c3:	mov    eax,DWORD PTR [esi+0x4]
640079c6:	sub    eax,0x10
640079c9:	lea    ecx,[eax+0xc]
640079cc:	or     edx,0xffffffff
640079cf:	lock xadd DWORD PTR [ecx],edx
640079d3:	dec    edx
640079d4:	test   edx,edx
640079d6:	jg     0x640079e2
640079d8:	mov    ecx,DWORD PTR [eax]
640079da:	mov    edx,DWORD PTR [ecx]
640079dc:	push   eax
640079dd:	mov    eax,DWORD PTR [edx+0x4]
640079e0:	call   eax
640079e2:	test   BYTE PTR [esp+0x8],0x1
640079e7:	mov    DWORD PTR [esi],0x64043498
640079ed:	je     0x640079f8
640079ef:	push   esi
640079f0:	call   0x64013656
640079f5:	add    esp,0x4
640079f8:	mov    eax,esi
640079fa:	pop    esi
640079fb:	ret    0x4
640079fe:	int3   
640079ff:	int3   
64007a00:	push   0xffffffff
64007a02:	push   0x64023363
64007a07:	mov    eax,fs:0x0
64007a0d:	push   eax
64007a0e:	push   ecx
64007a0f:	push   esi
64007a10:	mov    eax,ds:0x640521ac
64007a15:	xor    eax,esp
64007a17:	push   eax
64007a18:	lea    eax,[esp+0xc]
64007a1c:	mov    fs:0x0,eax
64007a22:	xor    esi,esi
64007a24:	push   0x8
64007a26:	mov    DWORD PTR [esp+0x18],esi
64007a2a:	call   0x640138e7
64007a2f:	add    esp,0x4
64007a32:	mov    DWORD PTR [esp+0x8],eax
64007a36:	cmp    eax,esi
64007a38:	mov    BYTE PTR [esp+0x14],0x1
64007a3d:	je     0x64007a4c
64007a3f:	lea    ecx,[esp+0x1c]
64007a43:	push   ecx
64007a44:	push   eax
64007a45:	call   0x64007930
64007a4a:	mov    esi,eax
64007a4c:	mov    DWORD PTR [esp+0x14],0xffffffff
64007a54:	mov    eax,DWORD PTR [esp+0x1c]
64007a58:	add    eax,0xfffffff0
64007a5b:	lea    edx,[eax+0xc]
64007a5e:	or     ecx,0xffffffff
64007a61:	lock xadd DWORD PTR [edx],ecx
64007a65:	dec    ecx
64007a66:	test   ecx,ecx
64007a68:	jg     0x64007a74
64007a6a:	mov    ecx,DWORD PTR [eax]
64007a6c:	mov    edx,DWORD PTR [ecx]
64007a6e:	push   eax
64007a6f:	mov    eax,DWORD PTR [edx+0x4]
64007a72:	call   eax
64007a74:	mov    eax,esi
64007a76:	mov    ecx,DWORD PTR [esp+0xc]
64007a7a:	mov    DWORD PTR fs:0x0,ecx
64007a81:	pop    ecx
64007a82:	pop    esi
64007a83:	add    esp,0x10
64007a86:	ret    
64007a87:	int3   
64007a88:	int3   
64007a89:	int3   
64007a8a:	int3   
64007a8b:	int3   
64007a8c:	int3   
64007a8d:	int3   
64007a8e:	int3   
64007a8f:	int3   
64007a90:	push   esi
64007a91:	mov    esi,eax
64007a93:	call   0x64007ba0
64007a98:	mov    ecx,esi
64007a9a:	pop    esi
64007a9b:	jmp    0x64009c70
64007aa0:	push   0xffffffff
64007aa2:	push   0x64023528
64007aa7:	mov    eax,fs:0x0
64007aad:	push   eax
64007aae:	sub    esp,0x28
64007ab1:	push   ebx
64007ab2:	push   ebp
64007ab3:	push   esi
64007ab4:	push   edi
64007ab5:	mov    eax,ds:0x640521ac
64007aba:	xor    eax,esp
64007abc:	push   eax
64007abd:	lea    eax,[esp+0x3c]
64007ac1:	mov    fs:0x0,eax
64007ac7:	mov    esi,ecx
64007ac9:	call   DWORD PTR ds:0x6402c0f0
64007acf:	mov    DWORD PTR [esp+0x18],eax
64007ad3:	call   0x64007ba0
64007ad8:	push   0x0
64007ada:	push   0x4
64007adc:	call   0x64012f0e
64007ae1:	mov    edi,eax
64007ae3:	mov    DWORD PTR [esp+0x1c],edi
64007ae7:	cmp    edi,0xffffffff
64007aea:	mov    DWORD PTR [esp+0x44],0x0
64007af2:	jne    0x64007afd
64007af4:	call   DWORD PTR ds:0x6402c06c
64007afa:	push   edi
64007afb:	jmp    0x64007b6c
64007afd:	lea    eax,[esp+0x20]
64007b01:	push   eax
64007b02:	push   edi
64007b03:	mov    DWORD PTR [esp+0x28],0x1c
64007b0b:	call   0x64012f20
64007b10:	test   eax,eax
64007b12:	je     0x64007b61
64007b14:	mov    ebx,DWORD PTR ds:0x6402c0cc
64007b1a:	mov    ebp,DWORD PTR ds:0x6402c0e8
64007b20:	mov    ecx,DWORD PTR [esp+0x4c]
64007b24:	cmp    DWORD PTR [esp+0x2c],ecx
64007b28:	jne    0x64007b52
64007b2a:	mov    eax,DWORD PTR [esp+0x28]
64007b2e:	cmp    DWORD PTR [esp+0x18],eax
64007b32:	je     0x64007b52
64007b34:	push   eax
64007b35:	push   0x0
64007b37:	push   0x2
64007b39:	call   ebx
64007b3b:	lea    edx,[esp+0x14]
64007b3f:	push   edx
64007b40:	mov    ecx,esi
64007b42:	mov    DWORD PTR [esp+0x18],eax
64007b46:	call   0x64009c20
64007b4b:	mov    eax,DWORD PTR [esp+0x14]
64007b4f:	push   eax
64007b50:	call   ebp
64007b52:	lea    ecx,[esp+0x20]
64007b56:	push   ecx
64007b57:	push   edi
64007b58:	call   0x64012f26
64007b5d:	test   eax,eax
64007b5f:	jne    0x64007b20
64007b61:	test   edi,edi
64007b63:	je     0x64007b7b
64007b65:	call   DWORD PTR ds:0x6402c06c
64007b6b:	push   edi
64007b6c:	mov    esi,eax
64007b6e:	call   DWORD PTR ds:0x6402c078
64007b74:	push   esi
64007b75:	call   DWORD PTR ds:0x6402c074
64007b7b:	mov    ecx,DWORD PTR [esp+0x3c]
64007b7f:	mov    DWORD PTR fs:0x0,ecx
64007b86:	pop    ecx
64007b87:	pop    edi
64007b88:	pop    esi
64007b89:	pop    ebp
64007b8a:	pop    ebx
64007b8b:	add    esp,0x34
64007b8e:	ret    0x4
64007b91:	int3   
64007b92:	int3   
64007b93:	int3   
64007b94:	int3   
64007b95:	int3   
64007b96:	int3   
64007b97:	int3   
64007b98:	int3   
64007b99:	int3   
64007b9a:	int3   
64007b9b:	int3   
64007b9c:	int3   
64007b9d:	int3   
64007b9e:	int3   
64007b9f:	int3   
64007ba0:	mov    ecx,esi
64007ba2:	call   0x64009bd0
64007ba7:	test   eax,eax
64007ba9:	je     0x64007bec
64007bab:	push   ebx
64007bac:	mov    ebx,DWORD PTR ds:0x6402c078
64007bb2:	push   edi
64007bb3:	mov    edi,DWORD PTR ds:0x6402c0ec
64007bb9:	lea    esp,[esp+0x0]
64007bc0:	mov    ecx,esi
64007bc2:	call   0x64009bf0
64007bc7:	mov    eax,DWORD PTR [eax]
64007bc9:	push   eax
64007bca:	call   edi
64007bcc:	mov    ecx,esi
64007bce:	call   0x64009bf0
64007bd3:	mov    ecx,DWORD PTR [eax]
64007bd5:	push   ecx
64007bd6:	call   ebx
64007bd8:	mov    ecx,esi
64007bda:	call   0x64009c50
64007bdf:	mov    ecx,esi
64007be1:	call   0x64009bd0
64007be6:	test   eax,eax
64007be8:	jne    0x64007bc0
64007bea:	pop    edi
64007beb:	pop    ebx
64007bec:	ret    
64007bed:	int3   
64007bee:	int3   
64007bef:	int3   
64007bf0:	push   0xffffffff
64007bf2:	push   0x6402398a
64007bf7:	mov    eax,fs:0x0
64007bfd:	push   eax
64007bfe:	sub    esp,0x24
64007c01:	push   ebx
64007c02:	push   ebp
64007c03:	push   esi
64007c04:	push   edi
64007c05:	mov    eax,ds:0x640521ac
64007c0a:	xor    eax,esp
64007c0c:	push   eax
64007c0d:	lea    eax,[esp+0x38]
64007c11:	mov    fs:0x0,eax
64007c17:	mov    esi,ecx
64007c19:	mov    edi,DWORD PTR [esp+0x48]
64007c1d:	xor    ebx,ebx
64007c1f:	mov    DWORD PTR [esp+0x14],ebx
64007c23:	mov    DWORD PTR [edi],ebx
64007c25:	mov    DWORD PTR [esp+0x40],ebx
64007c29:	lea    ecx,[edi+0x894]
64007c2f:	push   ebx
64007c30:	mov    DWORD PTR [edi+0x4],esi
64007c33:	mov    DWORD PTR [edi+0x888],ebx
64007c39:	mov    BYTE PTR [edi+0x890],bl
64007c3f:	call   0x64009c90
64007c44:	push   esi
64007c45:	push   ebx
64007c46:	push   0x1f0fff
64007c4b:	mov    BYTE PTR [esp+0x4c],0x1
64007c50:	call   DWORD PTR ds:0x6402c0d0
64007c56:	mov    esi,DWORD PTR [edi]
64007c58:	test   esi,esi
64007c5a:	mov    ebp,eax
64007c5c:	je     0x64007c7a
64007c5e:	call   DWORD PTR ds:0x6402c06c
64007c64:	push   esi
64007c65:	mov    DWORD PTR [esp+0x18],eax
64007c69:	call   DWORD PTR ds:0x6402c078
64007c6f:	mov    eax,DWORD PTR [esp+0x14]
64007c73:	push   eax
64007c74:	call   DWORD PTR ds:0x6402c074
64007c7a:	push   0x8
64007c7c:	mov    DWORD PTR [edi],ebp
64007c7e:	call   0x640138e7
64007c83:	mov    ebp,eax
64007c85:	add    esp,0x4
64007c88:	mov    DWORD PTR [esp+0x18],ebp
64007c8c:	test   ebp,ebp
64007c8e:	mov    BYTE PTR [esp+0x40],0x2
64007c93:	je     0x64007cbb
64007c95:	push   0x0
64007c97:	lea    esi,[esp+0x20]
64007c9b:	call   0x64007830
64007ca0:	add    esp,0x4
64007ca3:	mov    BYTE PTR [esp+0x40],0x3
64007ca8:	mov    ebx,0x1
64007cad:	push   ebp
64007cae:	mov    ecx,eax
64007cb0:	mov    DWORD PTR [esp+0x18],ebx
64007cb4:	call   0x6400a890
64007cb9:	jmp    0x64007cbd
64007cbb:	xor    eax,eax
64007cbd:	push   eax
64007cbe:	lea    ecx,[edi+0x894]
64007cc4:	call   0x64009b10
64007cc9:	test   bl,0x1
64007ccc:	je     0x64007ce2
64007cce:	cmp    DWORD PTR [esp+0x34],0x10
64007cd3:	jb     0x64007ce2
64007cd5:	mov    ecx,DWORD PTR [esp+0x20]
64007cd9:	push   ecx
64007cda:	call   0x64013656
64007cdf:	add    esp,0x4
64007ce2:	mov    eax,edi
64007ce4:	mov    ecx,DWORD PTR [esp+0x38]
64007ce8:	mov    DWORD PTR fs:0x0,ecx
64007cef:	pop    ecx
64007cf0:	pop    edi
64007cf1:	pop    esi
64007cf2:	pop    ebp
64007cf3:	pop    ebx
64007cf4:	add    esp,0x30
64007cf7:	ret    0x4
64007cfa:	int3   
64007cfb:	int3   
64007cfc:	int3   
64007cfd:	int3   
64007cfe:	int3   
64007cff:	int3   
64007d00:	push   0xffffffff
64007d02:	push   0x640234fe
64007d07:	mov    eax,fs:0x0
64007d0d:	push   eax
64007d0e:	sub    esp,0x98
64007d14:	push   ebx
64007d15:	push   ebp
64007d16:	push   esi
64007d17:	push   edi
64007d18:	mov    eax,ds:0x640521ac
64007d1d:	xor    eax,esp
64007d1f:	push   eax
64007d20:	lea    eax,[esp+0xac]
64007d27:	mov    fs:0x0,eax
64007d2d:	mov    ebx,ecx
64007d2f:	mov    ebp,DWORD PTR [esp+0xbc]
64007d36:	mov    esi,DWORD PTR [ebp+0x3c]
64007d39:	mov    ecx,DWORD PTR [esi+ebp*1+0x50]
64007d3d:	mov    edx,DWORD PTR [esi+ebp*1+0x34]
64007d41:	mov    eax,DWORD PTR [ebx]
64007d43:	push   0x40
64007d45:	add    esi,ebp
64007d47:	push   0x3000
64007d4c:	push   ecx
64007d4d:	push   edx
64007d4e:	push   eax
64007d4f:	call   DWORD PTR ds:0x6402c0c4
64007d55:	mov    edi,eax
64007d57:	test   edi,edi
64007d59:	jne    0x64007dc5
64007d5b:	mov    ecx,DWORD PTR [esi+0x50]
64007d5e:	mov    eax,DWORD PTR [ebx]
64007d60:	push   0x40
64007d62:	push   0x3000
64007d67:	push   ecx
64007d68:	push   edi
64007d69:	push   eax
64007d6a:	call   DWORD PTR ds:0x6402c0c4
64007d70:	mov    edi,eax
64007d72:	test   edi,edi
64007d74:	jne    0x64007dc5
64007d76:	xor    esi,esi
64007d78:	push   esi
64007d79:	push   0x64041a56
64007d7e:	lea    ecx,[esp+0x28]
64007d82:	mov    DWORD PTR [esp+0x40],0xf
64007d8a:	mov    DWORD PTR [esp+0x3c],esi
64007d8e:	mov    BYTE PTR [esp+0x2c],0x0
64007d93:	call   0x64003410
64007d98:	lea    edx,[esp+0x20]
64007d9c:	push   edx
64007d9d:	lea    eax,[esp+0x5c]
64007da1:	push   eax
64007da2:	mov    DWORD PTR [esp+0xbc],esi
64007da9:	call   0x64001470
64007dae:	push   0x6404423c
64007db3:	lea    ecx,[esp+0x5c]
64007db7:	push   ecx
64007db8:	mov    DWORD PTR [esp+0x60],0x6404348c
64007dc0:	call   0x64013884
64007dc5:	mov    eax,DWORD PTR [ebx]
64007dc7:	lea    edx,[esp+0x1c]
64007dcb:	push   edx
64007dcc:	mov    DWORD PTR [esp+0x20],0x0
64007dd4:	mov    ecx,DWORD PTR [esi+0x54]
64007dd7:	push   ecx
64007dd8:	push   ebp
64007dd9:	push   edi
64007dda:	push   eax
64007ddb:	call   DWORD PTR ds:0x6402c0d8
64007de1:	test   eax,eax
64007de3:	jne    0x64007e41
64007de5:	call   DWORD PTR ds:0x6402c06c
64007deb:	push   0x0
64007ded:	push   0x64041a56
64007df2:	lea    ecx,[esp+0x28]
64007df6:	mov    DWORD PTR [esp+0x40],0xf
64007dfe:	mov    DWORD PTR [esp+0x3c],0x0
64007e06:	mov    BYTE PTR [esp+0x2c],0x0
64007e0b:	call   0x64003410
64007e10:	lea    edx,[esp+0x20]
64007e14:	push   edx
64007e15:	lea    eax,[esp+0x5c]
64007e19:	push   eax
64007e1a:	mov    DWORD PTR [esp+0xbc],0x1
64007e25:	call   0x64001470
64007e2a:	push   0x6404423c
64007e2f:	lea    ecx,[esp+0x5c]
64007e33:	push   ecx
64007e34:	mov    DWORD PTR [esp+0x60],0x6404348c
64007e3c:	call   0x64013884
64007e41:	movzx  eax,WORD PTR [esi+0x6]
64007e45:	sub    eax,0x1
64007e48:	movzx  edx,WORD PTR [esi+0x14]
64007e4c:	lea    ebp,[edx+esi*1+0x18]
64007e50:	mov    DWORD PTR [esp+0x18],0x0
64007e58:	js     0x64007ea1
64007e5a:	add    ebp,0x10
64007e5d:	lea    ecx,[ecx+0x0]
64007e60:	mov    ecx,DWORD PTR [ebp+0x0]
64007e63:	test   ecx,ecx
64007e65:	je     0x64007e88
64007e67:	mov    edx,DWORD PTR [ebp-0x4]
64007e6a:	mov    eax,DWORD PTR [ebx]
64007e6c:	push   0x0
64007e6e:	push   ecx
64007e6f:	mov    ecx,DWORD PTR [ebp+0x4]
64007e72:	add    ecx,DWORD PTR [esp+0xc4]
64007e79:	add    edx,edi
64007e7b:	push   ecx
64007e7c:	push   edx
64007e7d:	push   eax
64007e7e:	call   DWORD PTR ds:0x6402c0d8
64007e84:	test   eax,eax
64007e86:	je     0x64007ecc
64007e88:	movzx  ecx,WORD PTR [esi+0x6]
64007e8c:	mov    eax,DWORD PTR [esp+0x18]
64007e90:	add    eax,0x1
64007e93:	sub    ecx,0x1
64007e96:	add    ebp,0x28
64007e99:	cmp    eax,ecx
64007e9b:	mov    DWORD PTR [esp+0x18],eax
64007e9f:	jle    0x64007e60
64007ea1:	mov    eax,edi
64007ea3:	cdq    
64007ea4:	mov    DWORD PTR [ebx+0x70],eax
64007ea7:	mov    DWORD PTR [ebx+0x74],edx
64007eaa:	mov    edx,DWORD PTR [esi+0x50]
64007ead:	mov    DWORD PTR [ebx+0x78],edx
64007eb0:	mov    ecx,DWORD PTR [esp+0xac]
64007eb7:	mov    DWORD PTR fs:0x0,ecx
64007ebe:	pop    ecx
64007ebf:	pop    edi
64007ec0:	pop    esi
64007ec1:	pop    ebp
64007ec2:	pop    ebx
64007ec3:	add    esp,0xa4
64007ec9:	ret    0x4
64007ecc:	call   DWORD PTR ds:0x6402c06c
64007ed2:	mov    ebx,DWORD PTR [ebx]
64007ed4:	push   0x8000
64007ed9:	push   0x0
64007edb:	push   edi
64007edc:	push   ebx
64007edd:	call   DWORD PTR ds:0x6402c0b4
64007ee3:	push   0x0
64007ee5:	push   0x64041a56
64007eea:	lea    ecx,[esp+0x44]
64007eee:	mov    DWORD PTR [esp+0x5c],0xf
64007ef6:	mov    DWORD PTR [esp+0x58],0x0
64007efe:	mov    BYTE PTR [esp+0x48],0x0
64007f03:	call   0x64003410
64007f08:	lea    edx,[esp+0x3c]
64007f0c:	push   edx
64007f0d:	lea    eax,[esp+0x84]
64007f14:	push   eax
64007f15:	mov    DWORD PTR [esp+0xbc],0x2
64007f20:	call   0x64001470
64007f25:	push   0x6404423c
64007f2a:	lea    ecx,[esp+0x84]
64007f31:	push   ecx
64007f32:	mov    DWORD PTR [esp+0x88],0x6404348c
64007f3d:	call   0x64013884
64007f42:	int3   
64007f43:	int3   
64007f44:	int3   
64007f45:	int3   
64007f46:	int3   
64007f47:	int3   
64007f48:	int3   
64007f49:	int3   
64007f4a:	int3   
64007f4b:	int3   
64007f4c:	int3   
64007f4d:	int3   
64007f4e:	int3   
64007f4f:	int3   
64007f50:	mov    eax,DWORD PTR [esp+0x4]
64007f54:	push   esi
64007f55:	push   eax
64007f56:	mov    esi,ecx
64007f58:	call   0x64001530
64007f5d:	mov    DWORD PTR [esi],0x6404348c
64007f63:	mov    eax,esi
64007f65:	pop    esi
64007f66:	ret    0x4
64007f69:	int3   
64007f6a:	int3   
64007f6b:	int3   
64007f6c:	int3   
64007f6d:	int3   
64007f6e:	int3   
64007f6f:	int3   
64007f70:	push   0xffffffff
64007f72:	push   0x6402392e
64007f77:	mov    eax,fs:0x0
64007f7d:	push   eax
64007f7e:	sub    esp,0xa8
64007f84:	push   ebx
64007f85:	push   ebp
64007f86:	push   esi
64007f87:	mov    eax,ds:0x640521ac
64007f8c:	xor    eax,esp
64007f8e:	push   eax
64007f8f:	lea    eax,[esp+0xb8]
64007f96:	mov    fs:0x0,eax
64007f9c:	lea    eax,[esp+0x18]
64007fa0:	push   eax
64007fa1:	call   DWORD PTR ds:0x6402c08c
64007fa7:	lea    ecx,[esp+0x38]
64007fab:	push   ecx
64007fac:	lea    edx,[esp+0x1c]
64007fb0:	push   edx
64007fb1:	call   DWORD PTR ds:0x6402c068
64007fb7:	mov    ecx,DWORD PTR [esp+0x38]
64007fbb:	mov    eax,DWORD PTR [esp+0x3c]
64007fbf:	sub    ecx,0x2a69c000
64007fc5:	push   0x2
64007fc7:	sbb    eax,0xc9
64007fcc:	xor    ebx,ebx
64007fce:	push   ebx
64007fcf:	push   ebx
64007fd0:	mov    DWORD PTR [edi+0x80],ecx
64007fd6:	lea    ecx,[esp+0x40]
64007fda:	mov    DWORD PTR [edi+0x84],eax
64007fe0:	mov    eax,DWORD PTR [edi]
64007fe2:	push   ecx
64007fe3:	push   eax
64007fe4:	push   eax
64007fe5:	mov    DWORD PTR [esp+0x4c],ebx
64007fe9:	call   DWORD PTR ds:0x6402c040
64007fef:	push   eax
64007ff0:	call   DWORD PTR ds:0x6402c0f4
64007ff6:	mov    eax,DWORD PTR [esp+0x34]
64007ffa:	cdq    
64007ffb:	push   0x64042cdc
64008000:	push   0x9
64008002:	mov    ecx,0x64041de8
64008007:	mov    DWORD PTR [edi+0x68],eax
6400800a:	mov    DWORD PTR [edi+0x6c],edx
6400800d:	call   0x64003050
64008012:	add    esp,0x4
64008015:	mov    edx,esp
64008017:	mov    DWORD PTR [esp+0x3c],esp
6400801b:	push   edx
6400801c:	mov    ecx,eax
6400801e:	call   0x64002a80
64008023:	call   0x64007a00
64008028:	add    esp,0x4
6400802b:	push   eax
6400802c:	lea    ecx,[esp+0x18]
64008030:	call   0x64009c90
64008035:	lea    ecx,[esp+0x14]
64008039:	mov    DWORD PTR [esp+0xc0],ebx
64008040:	call   0x64009cf0
64008045:	push   0x64042d10
6400804a:	mov    esi,eax
6400804c:	mov    ebp,DWORD PTR [esi]
6400804e:	push   0xd
64008050:	push   0x64042d34
64008055:	call   0x64002e50
6400805a:	add    esp,0xc
6400805d:	push   eax
6400805e:	mov    eax,DWORD PTR [ebp+0x0]
64008061:	mov    ecx,esi
64008063:	call   eax
64008065:	lea    ecx,[esp+0x14]
64008069:	mov    DWORD PTR [esp+0x58],eax
6400806d:	call   0x64009cf0
64008072:	push   0x64042d44
64008077:	mov    esi,eax
64008079:	mov    ebp,DWORD PTR [esi]
6400807b:	push   0xf
6400807d:	push   0x64042d68
64008082:	call   0x64002e50
64008087:	mov    edx,DWORD PTR [ebp+0x0]
6400808a:	add    esp,0xc
6400808d:	push   eax
6400808e:	mov    ecx,esi
64008090:	call   edx
64008092:	lea    ecx,[esp+0x14]
64008096:	mov    DWORD PTR [esp+0x48],eax
6400809a:	call   0x64009cf0
6400809f:	mov    esi,eax
640080a1:	mov    ebp,DWORD PTR [esi]
640080a3:	push   0x64042d78
640080a8:	push   0xe
640080aa:	push   0x64042dac
640080af:	call   0x64002e50
640080b4:	add    esp,0xc
640080b7:	push   eax
640080b8:	mov    eax,DWORD PTR [ebp+0x0]
640080bb:	mov    ecx,esi
640080bd:	call   eax
640080bf:	lea    ecx,[esp+0x14]
640080c3:	mov    DWORD PTR [esp+0x50],eax
640080c7:	call   0x64009cf0
640080cc:	push   0x64042dbc
640080d1:	mov    esi,eax
640080d3:	mov    ebp,DWORD PTR [esi]
640080d5:	push   0x12
640080d7:	push   0x64042de0
640080dc:	call   0x64002e50
640080e1:	mov    edx,DWORD PTR [ebp+0x0]
640080e4:	add    esp,0xc
640080e7:	push   eax
640080e8:	mov    ecx,esi
640080ea:	call   edx
640080ec:	lea    ecx,[esp+0x14]
640080f0:	mov    DWORD PTR [esp+0x5c],eax
640080f4:	call   0x64009cf0
640080f9:	push   0x64042df4
640080fe:	mov    esi,eax
64008100:	mov    ebp,DWORD PTR [esi]
64008102:	push   0x14
64008104:	push   0x64042e28
64008109:	call   0x64002e50
6400810e:	add    esp,0xc
64008111:	push   eax
64008112:	mov    eax,DWORD PTR [ebp+0x0]
64008115:	mov    ecx,esi
64008117:	call   eax
64008119:	lea    ecx,[esp+0x14]
6400811d:	mov    DWORD PTR [esp+0x4c],eax
64008121:	call   0x64009cf0
64008126:	push   0x64042e40
6400812b:	mov    esi,eax
6400812d:	mov    ebp,DWORD PTR [esi]
6400812f:	push   0xa
64008131:	push   0x64042e78
64008136:	call   0x64002e50
6400813b:	mov    edx,DWORD PTR [ebp+0x0]
6400813e:	add    esp,0xc
64008141:	push   eax
64008142:	mov    ecx,esi
64008144:	call   edx
64008146:	lea    ecx,[esp+0x14]
6400814a:	mov    DWORD PTR [esp+0x54],eax
6400814e:	call   0x64009cf0
64008153:	push   0x64042e84
64008158:	mov    esi,eax
6400815a:	mov    ebp,DWORD PTR [esi]
6400815c:	push   0x15
6400815e:	push   0x64042ec0
64008163:	call   0x64002e50
64008168:	add    esp,0xc
6400816b:	push   eax
6400816c:	mov    eax,DWORD PTR [ebp+0x0]
6400816f:	mov    ecx,esi
64008171:	call   eax
64008173:	lea    ecx,[esp+0x14]
64008177:	mov    DWORD PTR [esp+0x40],eax
6400817b:	call   0x64009cf0
64008180:	push   0x64042ed8
64008185:	mov    esi,eax
64008187:	mov    ebp,DWORD PTR [esi]
64008189:	push   0x7
6400818b:	push   0x64042f08
64008190:	call   0x64002e50
64008195:	mov    edx,DWORD PTR [ebp+0x0]
64008198:	add    esp,0xc
6400819b:	push   eax
6400819c:	mov    ecx,esi
6400819e:	call   edx
640081a0:	lea    ecx,[esp+0x14]
640081a4:	mov    DWORD PTR [esp+0x44],eax
640081a8:	call   0x64009cf0
640081ad:	push   0x64042f10
640081b2:	mov    esi,eax
640081b4:	mov    ebp,DWORD PTR [esi]
640081b6:	push   0x14
640081b8:	push   0x64042f34
640081bd:	call   0x64002e50
640081c2:	add    esp,0xc
640081c5:	push   eax
640081c6:	mov    eax,DWORD PTR [ebp+0x0]
640081c9:	mov    ecx,esi
640081cb:	call   eax
640081cd:	lea    ecx,[esp+0x60]
640081d1:	mov    DWORD PTR [esp+0x38],eax
640081d5:	call   0x64009b80
640081da:	mov    BYTE PTR [esp+0xc0],0x1
640081e2:	mov    ecx,DWORD PTR [edi+0x4]
640081e5:	push   ecx
640081e6:	lea    ecx,[esp+0x64]
640081ea:	call   0x64007aa0
640081ef:	push   0x64042f4c
640081f4:	push   0xf
640081f6:	push   0x64042f84
640081fb:	call   0x64002e50
64008200:	mov    ecx,eax
64008202:	add    esp,0xc
64008205:	mov    DWORD PTR [esp+0x30],0xf
6400820d:	mov    DWORD PTR [esp+0x2c],ebx
64008211:	mov    BYTE PTR [esp+0x1c],bl
64008215:	lea    esi,[ecx+0x1]
64008218:	mov    dl,BYTE PTR [ecx]
6400821a:	add    ecx,0x1
6400821d:	cmp    dl,bl
6400821f:	jne    0x64008218
64008221:	sub    ecx,esi
64008223:	push   ecx
64008224:	push   eax
64008225:	lea    ecx,[esp+0x20]
64008229:	call   0x64003410
6400822e:	lea    edx,[esp+0x18]
64008232:	lea    ebp,[edi+0x894]
64008238:	mov    BYTE PTR [esp+0xc0],0x2
64008240:	mov    esi,DWORD PTR [edi]
64008242:	push   edx
64008243:	mov    ecx,ebp
64008245:	call   0x64009cf0
6400824a:	call   0x6400a920
6400824f:	add    eax,DWORD PTR [edi+0x88c]
64008255:	push   eax
64008256:	mov    eax,DWORD PTR [esp+0x5c]
6400825a:	push   eax
6400825b:	call   0x6400ad50
64008260:	cdq    
64008261:	add    esp,0x8
64008264:	mov    BYTE PTR [esp+0xc0],0x1
6400826c:	cmp    DWORD PTR [esp+0x30],0x10
64008271:	mov    DWORD PTR [edi+0x8],eax
64008274:	mov    DWORD PTR [edi+0xc],edx
64008277:	jb     0x64008286
64008279:	mov    ecx,DWORD PTR [esp+0x1c]
6400827d:	push   ecx
6400827e:	call   0x64013656
64008283:	add    esp,0x4
64008286:	push   0x64042f94
6400828b:	push   0x11
6400828d:	push   0x64042fbc
64008292:	call   0x64002e50
64008297:	mov    esi,eax
64008299:	mov    ecx,esi
6400829b:	add    esp,0xc
6400829e:	mov    DWORD PTR [esp+0x30],0xf
640082a6:	mov    DWORD PTR [esp+0x2c],ebx
640082aa:	mov    BYTE PTR [esp+0x1c],bl
640082ae:	lea    edx,[ecx+0x1]
640082b1:	mov    al,BYTE PTR [ecx]
640082b3:	add    ecx,0x1
640082b6:	cmp    al,bl
640082b8:	jne    0x640082b1
640082ba:	sub    ecx,edx
640082bc:	push   ecx
640082bd:	push   esi
640082be:	lea    ecx,[esp+0x20]
640082c2:	call   0x64003410
640082c7:	lea    edx,[esp+0x18]
640082cb:	mov    BYTE PTR [esp+0xc0],0x3
640082d3:	mov    esi,DWORD PTR [edi]
640082d5:	push   edx
640082d6:	mov    ecx,ebp
640082d8:	call   0x64009cf0
640082dd:	call   0x6400a920
640082e2:	add    eax,DWORD PTR [edi+0x88c]
640082e8:	push   eax
640082e9:	mov    eax,DWORD PTR [esp+0x4c]
640082ed:	push   eax
640082ee:	call   0x6400ad50
640082f3:	cdq    
640082f4:	add    esp,0x8
640082f7:	mov    BYTE PTR [esp+0xc0],0x1
640082ff:	cmp    DWORD PTR [esp+0x30],0x10
64008304:	mov    DWORD PTR [edi+0x10],eax
64008307:	mov    DWORD PTR [edi+0x14],edx
6400830a:	jb     0x64008319
6400830c:	mov    ecx,DWORD PTR [esp+0x1c]
64008310:	push   ecx
64008311:	call   0x64013656
64008316:	add    esp,0x4
64008319:	push   0x64042fd0
6400831e:	push   0x10
64008320:	push   0x64042ff8
64008325:	call   0x64002e50
6400832a:	mov    esi,eax
6400832c:	mov    ecx,esi
6400832e:	add    esp,0xc
64008331:	mov    DWORD PTR [esp+0x30],0xf
64008339:	mov    DWORD PTR [esp+0x2c],ebx
6400833d:	mov    BYTE PTR [esp+0x1c],bl
64008341:	lea    eax,[ecx+0x1]
64008344:	mov    dl,BYTE PTR [ecx]
64008346:	add    ecx,0x1
64008349:	cmp    dl,bl
6400834b:	jne    0x64008344
6400834d:	sub    ecx,eax
6400834f:	push   ecx
64008350:	push   esi
64008351:	lea    ecx,[esp+0x20]
64008355:	call   0x64003410
6400835a:	lea    edx,[esp+0x18]
6400835e:	mov    BYTE PTR [esp+0xc0],0x4
64008366:	mov    esi,DWORD PTR [edi]
64008368:	push   edx
64008369:	mov    ecx,ebp
6400836b:	call   0x64009cf0
64008370:	call   0x6400a920
64008375:	add    eax,DWORD PTR [edi+0x88c]
6400837b:	push   eax
6400837c:	mov    eax,DWORD PTR [esp+0x54]
64008380:	push   eax
64008381:	call   0x6400ad50
64008386:	cdq    
64008387:	add    esp,0x8
6400838a:	mov    BYTE PTR [esp+0xc0],0x1
64008392:	cmp    DWORD PTR [esp+0x30],0x10
64008397:	mov    DWORD PTR [edi+0x28],eax
6400839a:	mov    DWORD PTR [edi+0x2c],edx
6400839d:	jb     0x640083ac
6400839f:	mov    ecx,DWORD PTR [esp+0x1c]
640083a3:	push   ecx
640083a4:	call   0x64013656
640083a9:	add    esp,0x4
640083ac:	push   0x6404300c
640083b1:	push   0x14
640083b3:	push   0x64043048
640083b8:	call   0x64002e50
640083bd:	mov    esi,eax
640083bf:	mov    ecx,esi
640083c1:	add    esp,0xc
640083c4:	mov    DWORD PTR [esp+0x30],0xf
640083cc:	mov    DWORD PTR [esp+0x2c],ebx
640083d0:	mov    BYTE PTR [esp+0x1c],bl
640083d4:	lea    eax,[ecx+0x1]
640083d7:	mov    dl,BYTE PTR [ecx]
640083d9:	add    ecx,0x1
640083dc:	cmp    dl,bl
640083de:	jne    0x640083d7
640083e0:	sub    ecx,eax
640083e2:	push   ecx
640083e3:	push   esi
640083e4:	lea    ecx,[esp+0x20]
640083e8:	call   0x64003410
640083ed:	lea    edx,[esp+0x18]
640083f1:	mov    BYTE PTR [esp+0xc0],0x5
640083f9:	mov    esi,DWORD PTR [edi]
640083fb:	push   edx
640083fc:	mov    ecx,ebp
640083fe:	call   0x64009cf0
64008403:	call   0x6400a920
64008408:	add    eax,DWORD PTR [edi+0x88c]
6400840e:	push   eax
6400840f:	mov    eax,DWORD PTR [esp+0x60]
64008413:	push   eax
64008414:	call   0x6400ad50
64008419:	cdq    
6400841a:	add    esp,0x8
6400841d:	mov    BYTE PTR [esp+0xc0],0x1
64008425:	cmp    DWORD PTR [esp+0x30],0x10
6400842a:	mov    DWORD PTR [edi+0x18],eax
6400842d:	mov    DWORD PTR [edi+0x1c],edx
64008430:	jb     0x6400843f
64008432:	mov    ecx,DWORD PTR [esp+0x1c]
64008436:	push   ecx
64008437:	call   0x64013656
6400843c:	add    esp,0x4
6400843f:	push   0x64043060
64008444:	push   0x16
64008446:	push   0x64043094
6400844b:	call   0x64002e50
64008450:	mov    esi,eax
64008452:	mov    ecx,esi
64008454:	add    esp,0xc
64008457:	mov    DWORD PTR [esp+0x30],0xf
6400845f:	mov    DWORD PTR [esp+0x2c],ebx
64008463:	mov    BYTE PTR [esp+0x1c],bl
64008467:	lea    eax,[ecx+0x1]
6400846a:	lea    ebx,[ebx+0x0]
64008470:	mov    dl,BYTE PTR [ecx]
64008472:	add    ecx,0x1
64008475:	cmp    dl,bl
64008477:	jne    0x64008470
64008479:	sub    ecx,eax
6400847b:	push   ecx
6400847c:	push   esi
6400847d:	lea    ecx,[esp+0x20]
64008481:	call   0x64003410
64008486:	lea    edx,[esp+0x18]
6400848a:	mov    BYTE PTR [esp+0xc0],0x6
64008492:	mov    esi,DWORD PTR [edi]
64008494:	push   edx
64008495:	mov    ecx,ebp
64008497:	call   0x64009cf0
6400849c:	call   0x6400a920
640084a1:	add    eax,DWORD PTR [edi+0x88c]
640084a7:	push   eax
640084a8:	mov    eax,DWORD PTR [esp+0x50]
640084ac:	push   eax
640084ad:	call   0x6400ad50
640084b2:	cdq    
640084b3:	add    esp,0x8
640084b6:	mov    BYTE PTR [esp+0xc0],0x1
640084be:	cmp    DWORD PTR [esp+0x30],0x10
640084c3:	mov    DWORD PTR [edi+0x20],eax
640084c6:	mov    DWORD PTR [edi+0x24],edx
640084c9:	jb     0x640084d8
640084cb:	mov    ecx,DWORD PTR [esp+0x1c]
640084cf:	push   ecx
640084d0:	call   0x64013656
640084d5:	add    esp,0x4
640084d8:	push   0x640430ac
640084dd:	push   0x17
640084df:	push   0x640430e8
640084e4:	call   0x64002e50
640084e9:	mov    esi,eax
640084eb:	mov    ecx,esi
640084ed:	add    esp,0xc
640084f0:	mov    DWORD PTR [esp+0x30],0xf
640084f8:	mov    DWORD PTR [esp+0x2c],ebx
640084fc:	mov    BYTE PTR [esp+0x1c],bl
64008500:	lea    eax,[ecx+0x1]
64008503:	mov    dl,BYTE PTR [ecx]
64008505:	add    ecx,0x1
64008508:	cmp    dl,bl
6400850a:	jne    0x64008503
6400850c:	sub    ecx,eax
6400850e:	push   ecx
6400850f:	push   esi
64008510:	lea    ecx,[esp+0x20]
64008514:	call   0x64003410
64008519:	lea    edx,[esp+0x18]
6400851d:	mov    BYTE PTR [esp+0xc0],0x7
64008525:	mov    esi,DWORD PTR [edi]
64008527:	push   edx
64008528:	mov    ecx,ebp
6400852a:	call   0x64009cf0
6400852f:	call   0x6400a920
64008534:	add    eax,DWORD PTR [edi+0x88c]
6400853a:	push   eax
6400853b:	mov    eax,DWORD PTR [esp+0x44]
6400853f:	push   eax
64008540:	call   0x6400ad50
64008545:	cdq    
64008546:	add    esp,0x8
64008549:	mov    BYTE PTR [esp+0xc0],0x1
64008551:	cmp    DWORD PTR [esp+0x30],0x10
64008556:	mov    DWORD PTR [edi+0x30],eax
64008559:	mov    DWORD PTR [edi+0x34],edx
6400855c:	jb     0x6400856b
6400855e:	mov    ecx,DWORD PTR [esp+0x1c]
64008562:	push   ecx
64008563:	call   0x64013656
64008568:	add    esp,0x4
6400856b:	push   0x64043100
64008570:	push   0xc
64008572:	push   0x6404313c
64008577:	call   0x64002e50
6400857c:	mov    esi,eax
6400857e:	mov    ecx,esi
64008580:	add    esp,0xc
64008583:	mov    DWORD PTR [esp+0x30],0xf
6400858b:	mov    DWORD PTR [esp+0x2c],ebx
6400858f:	mov    BYTE PTR [esp+0x1c],bl
64008593:	lea    edx,[ecx+0x1]
64008596:	mov    al,BYTE PTR [ecx]
64008598:	add    ecx,0x1
6400859b:	cmp    al,bl
6400859d:	jne    0x64008596
6400859f:	sub    ecx,edx
640085a1:	push   ecx
640085a2:	push   esi
640085a3:	lea    ecx,[esp+0x20]
640085a7:	call   0x64003410
640085ac:	lea    edx,[esp+0x18]
640085b0:	mov    BYTE PTR [esp+0xc0],0x8
640085b8:	mov    esi,DWORD PTR [edi]
640085ba:	push   edx
640085bb:	mov    ecx,ebp
640085bd:	call   0x64009cf0
640085c2:	call   0x6400a920
640085c7:	add    eax,DWORD PTR [edi+0x88c]
640085cd:	push   eax
640085ce:	mov    eax,DWORD PTR [esp+0x58]
640085d2:	push   eax
640085d3:	call   0x6400ad50
640085d8:	cdq    
640085d9:	add    esp,0x8
640085dc:	mov    BYTE PTR [esp+0xc0],0x1
640085e4:	cmp    DWORD PTR [esp+0x30],0x10
640085e9:	mov    DWORD PTR [edi+0x38],eax
640085ec:	mov    DWORD PTR [edi+0x3c],edx
640085ef:	jb     0x640085fe
640085f1:	mov    ecx,DWORD PTR [esp+0x1c]
640085f5:	push   ecx
640085f6:	call   0x64013656
640085fb:	add    esp,0x4
640085fe:	push   0x6404314c
64008603:	push   0x9
64008605:	push   0x6404317c
6400860a:	call   0x64002e50
6400860f:	mov    esi,eax
64008611:	mov    ecx,esi
64008613:	add    esp,0xc
64008616:	mov    DWORD PTR [esp+0x30],0xf
6400861e:	mov    DWORD PTR [esp+0x2c],ebx
64008622:	mov    BYTE PTR [esp+0x1c],bl
64008626:	lea    eax,[ecx+0x1]
64008629:	lea    esp,[esp+0x0]
64008630:	mov    dl,BYTE PTR [ecx]
64008632:	add    ecx,0x1
64008635:	cmp    dl,bl
64008637:	jne    0x64008630
64008639:	sub    ecx,eax
6400863b:	push   ecx
6400863c:	push   esi
6400863d:	lea    ecx,[esp+0x20]
64008641:	call   0x64003410
64008646:	lea    edx,[esp+0x18]
6400864a:	mov    BYTE PTR [esp+0xc0],0x9
64008652:	mov    esi,DWORD PTR [edi]
64008654:	push   edx
64008655:	mov    ecx,ebp
64008657:	call   0x64009cf0
6400865c:	call   0x6400a920
64008661:	add    eax,DWORD PTR [edi+0x88c]
64008667:	push   eax
64008668:	mov    eax,DWORD PTR [esp+0x48]
6400866c:	push   eax
6400866d:	call   0x6400ad50
64008672:	cdq    
64008673:	add    esp,0x8
64008676:	mov    BYTE PTR [esp+0xc0],0x1
6400867e:	cmp    DWORD PTR [esp+0x30],0x10
64008683:	mov    DWORD PTR [edi+0x40],eax
64008686:	mov    DWORD PTR [edi+0x44],edx
64008689:	jb     0x64008698
6400868b:	mov    ecx,DWORD PTR [esp+0x1c]
6400868f:	push   ecx
64008690:	call   0x64013656
64008695:	add    esp,0x4
64008698:	push   0x64043188
6400869d:	push   0x16
6400869f:	push   0x640431bc
640086a4:	call   0x64002e50
640086a9:	mov    esi,eax
640086ab:	mov    ecx,esi
640086ad:	add    esp,0xc
640086b0:	mov    DWORD PTR [esp+0x30],0xf
640086b8:	mov    DWORD PTR [esp+0x2c],ebx
640086bc:	mov    BYTE PTR [esp+0x1c],bl
640086c0:	lea    eax,[ecx+0x1]
640086c3:	mov    dl,BYTE PTR [ecx]
640086c5:	add    ecx,0x1
640086c8:	cmp    dl,bl
640086ca:	jne    0x640086c3
640086cc:	sub    ecx,eax
640086ce:	push   ecx
640086cf:	push   esi
640086d0:	lea    ecx,[esp+0x20]
640086d4:	call   0x64003410
640086d9:	lea    edx,[esp+0x18]
640086dd:	mov    BYTE PTR [esp+0xc0],0xa
640086e5:	mov    esi,DWORD PTR [edi]
640086e7:	push   edx
640086e8:	mov    ecx,ebp
640086ea:	call   0x64009cf0
640086ef:	call   0x6400a920
640086f4:	add    eax,DWORD PTR [edi+0x88c]
640086fa:	push   eax
640086fb:	mov    eax,DWORD PTR [esp+0x3c]
640086ff:	push   eax
64008700:	call   0x6400ad50
64008705:	cdq    
64008706:	add    esp,0x8
64008709:	mov    BYTE PTR [esp+0xc0],0x1
64008711:	cmp    DWORD PTR [esp+0x30],0x10
64008716:	mov    DWORD PTR [edi+0x48],eax
64008719:	mov    DWORD PTR [edi+0x4c],edx
6400871c:	jb     0x6400872b
6400871e:	mov    ecx,DWORD PTR [esp+0x1c]
64008722:	push   ecx
64008723:	call   0x64013656
64008728:	add    esp,0x4
6400872b:	mov    edx,DWORD PTR [edi+0x8]
6400872e:	or     edx,DWORD PTR [edi+0xc]
64008731:	je     0x640087c4
64008737:	mov    eax,DWORD PTR [edi+0x10]
6400873a:	or     eax,DWORD PTR [edi+0x14]
6400873d:	je     0x640087c4
64008743:	mov    ecx,DWORD PTR [edi+0x28]
64008746:	or     ecx,DWORD PTR [edi+0x2c]
64008749:	je     0x640087c4
6400874b:	mov    edx,DWORD PTR [edi+0x18]
6400874e:	or     edx,DWORD PTR [edi+0x1c]
64008751:	je     0x640087c4
64008753:	mov    eax,DWORD PTR [edi+0x20]
64008756:	or     eax,DWORD PTR [edi+0x24]
64008759:	je     0x640087c4
6400875b:	mov    ecx,DWORD PTR [edi+0x30]
6400875e:	or     ecx,DWORD PTR [edi+0x34]
64008761:	je     0x640087c4
64008763:	mov    edx,DWORD PTR [edi+0x38]
64008766:	or     edx,DWORD PTR [edi+0x3c]
64008769:	je     0x640087c4
6400876b:	mov    eax,DWORD PTR [edi+0x40]
6400876e:	or     eax,DWORD PTR [edi+0x44]
64008771:	je     0x640087c4
64008773:	mov    ecx,DWORD PTR [edi+0x48]
64008776:	or     ecx,DWORD PTR [edi+0x4c]
64008779:	je     0x640087c4
6400877b:	push   edi
6400877c:	call   0x64008980
64008781:	lea    esi,[esp+0x60]
64008785:	call   0x64007ba0
6400878a:	mov    ecx,esi
6400878c:	call   0x64009c70
64008791:	call   DWORD PTR ds:0x6402c03c
64008797:	lea    ecx,[esp+0x14]
6400879b:	mov    DWORD PTR [esp+0xc0],0xffffffff
640087a6:	call   0x64009cb0
640087ab:	mov    ecx,DWORD PTR [esp+0xb8]
640087b2:	mov    DWORD PTR fs:0x0,ecx
640087b9:	pop    ecx
640087ba:	pop    esi
640087bb:	pop    ebp
640087bc:	pop    ebx
640087bd:	add    esp,0xb4
640087c3:	ret    
640087c4:	push   ebx
640087c5:	push   0x64041a56
640087ca:	lea    ecx,[esp+0x7c]
640087ce:	mov    DWORD PTR [esp+0x94],0xf
640087d9:	mov    DWORD PTR [esp+0x90],ebx
640087e0:	mov    BYTE PTR [esp+0x80],bl
640087e7:	call   0x64003410
640087ec:	lea    edx,[esp+0x74]
640087f0:	push   edx
640087f1:	lea    eax,[esp+0x94]
640087f8:	push   eax
640087f9:	mov    BYTE PTR [esp+0xc8],0xb
64008801:	call   0x64001470
64008806:	push   0x64044100
6400880b:	lea    ecx,[esp+0x94]
64008812:	push   ecx
64008813:	call   0x64013884
64008818:	int3   
64008819:	int3   
6400881a:	int3   
6400881b:	int3   
6400881c:	int3   
6400881d:	int3   
6400881e:	int3   
6400881f:	int3   
64008820:	push   0xffffffff
64008822:	push   0x64023888
64008827:	mov    eax,fs:0x0
6400882d:	push   eax
6400882e:	sub    esp,0x1c
64008831:	push   ebx
64008832:	push   ebp
64008833:	push   edi
64008834:	mov    eax,ds:0x640521ac
64008839:	xor    eax,esp
6400883b:	push   eax
6400883c:	lea    eax,[esp+0x2c]
64008840:	mov    fs:0x0,eax
64008846:	mov    eax,DWORD PTR [esi]
64008848:	mov    ebx,DWORD PTR ds:0x6402c0c4
6400884e:	push   0x4
64008850:	push   0x3000
64008855:	push   0x880
6400885a:	push   0x0
6400885c:	push   eax
6400885d:	call   ebx
6400885f:	lea    edi,[esi+0x894]
64008865:	mov    ecx,edi
64008867:	mov    DWORD PTR [esi+0x888],eax
6400886d:	call   0x64009cf0
64008872:	mov    eax,DWORD PTR [eax]
64008874:	mov    ebp,DWORD PTR [eax+0x6]
64008877:	mov    eax,DWORD PTR [esi]
64008879:	push   0x40
6400887b:	push   0x3000
64008880:	push   ebp
64008881:	push   0x0
64008883:	push   eax
64008884:	call   ebx
64008886:	push   eax
64008887:	mov    ecx,edi
64008889:	mov    DWORD PTR [esi+0x88c],eax
6400888f:	call   0x64009cf0
64008894:	call   0x6400aa10
64008899:	mov    ecx,edi
6400889b:	call   0x64009cf0
640088a0:	mov    eax,DWORD PTR [eax]
640088a2:	mov    ecx,DWORD PTR [esi]
640088a4:	push   0x0
640088a6:	push   ebp
640088a7:	mov    ebp,DWORD PTR ds:0x6402c0d8
640088ad:	add    eax,0x12
640088b0:	push   eax
640088b1:	mov    eax,DWORD PTR [esi+0x88c]
640088b7:	push   eax
640088b8:	push   ecx
640088b9:	call   ebp
640088bb:	test   eax,eax
640088bd:	jne    0x640088c5
640088bf:	call   DWORD PTR ds:0x6402c06c
640088c5:	push   0x640431d4
640088ca:	push   0xe
640088cc:	push   0x640431fc
640088d1:	call   0x64002e50
640088d6:	mov    ecx,eax
640088d8:	add    esp,0xc
640088db:	mov    DWORD PTR [esp+0x28],0xf
640088e3:	mov    DWORD PTR [esp+0x24],0x0
640088eb:	mov    BYTE PTR [esp+0x14],0x0
640088f0:	lea    ebx,[ecx+0x1]
640088f3:	mov    dl,BYTE PTR [ecx]
640088f5:	add    ecx,0x1
640088f8:	test   dl,dl
640088fa:	jne    0x640088f3
640088fc:	sub    ecx,ebx
640088fe:	push   ecx
640088ff:	push   eax
64008900:	lea    ecx,[esp+0x18]
64008904:	call   0x64003410
64008909:	lea    ecx,[esp+0x10]
6400890d:	push   ecx
6400890e:	xor    ebx,ebx
64008910:	mov    ecx,edi
64008912:	mov    DWORD PTR [esp+0x38],ebx
64008916:	call   0x64009cf0
6400891b:	call   0x6400a920
64008920:	cmp    DWORD PTR [esp+0x28],0x10
64008925:	mov    edi,eax
64008927:	jb     0x64008936
64008929:	mov    edx,DWORD PTR [esp+0x14]
6400892d:	push   edx
6400892e:	call   0x64013656
64008933:	add    esp,0x4
64008936:	mov    eax,DWORD PTR [esi]
64008938:	push   ebx
64008939:	push   0x4
6400893b:	lea    ecx,[esi+0x888]
64008941:	push   ecx
64008942:	mov    ecx,DWORD PTR [esi+0x88c]
64008948:	add    ecx,edi
6400894a:	push   ecx
6400894b:	push   eax
6400894c:	mov    DWORD PTR [esp+0x3c],0xf
64008954:	mov    DWORD PTR [esp+0x38],ebx
64008958:	mov    BYTE PTR [esp+0x28],0x0
6400895d:	call   ebp
6400895f:	test   eax,eax
64008961:	jne    0x64008969
64008963:	call   DWORD PTR ds:0x6402c06c
64008969:	mov    ecx,DWORD PTR [esp+0x2c]
6400896d:	mov    DWORD PTR fs:0x0,ecx
64008974:	pop    ecx
64008975:	pop    edi
64008976:	pop    ebp
64008977:	pop    ebx
64008978:	add    esp,0x28
6400897b:	ret    
6400897c:	int3   
6400897d:	int3   
6400897e:	int3   
6400897f:	int3   
64008980:	push   0xffffffff
64008982:	push   0x640234b8
64008987:	mov    eax,fs:0x0
6400898d:	push   eax
6400898e:	sub    esp,0x48
64008991:	mov    eax,ds:0x640521ac
64008996:	xor    eax,esp
64008998:	push   eax
64008999:	lea    eax,[esp+0x4c]
6400899d:	mov    fs:0x0,eax
640089a3:	mov    eax,DWORD PTR [esp+0x5c]
640089a7:	mov    ecx,DWORD PTR [eax]
640089a9:	push   0x0
640089ab:	push   0x880
640089b0:	lea    edx,[eax+0x8]
640089b3:	mov    eax,DWORD PTR [eax+0x888]
640089b9:	push   edx
640089ba:	push   eax
640089bb:	push   ecx
640089bc:	call   DWORD PTR ds:0x6402c0d8
640089c2:	test   eax,eax
640089c4:	jne    0x64008a0b
640089c6:	push   eax
640089c7:	push   0x64041a56
640089cc:	lea    ecx,[esp+0xc]
640089d0:	mov    DWORD PTR [esp+0x24],0xf
640089d8:	mov    DWORD PTR [esp+0x20],eax
640089dc:	mov    BYTE PTR [esp+0x10],al
640089e0:	call   0x64003410
640089e5:	lea    ecx,[esp+0x4]
640089e9:	push   ecx
640089ea:	lea    edx,[esp+0x24]
640089ee:	push   edx
640089ef:	mov    DWORD PTR [esp+0x5c],0x0
640089f7:	call   0x64001470
640089fc:	push   0x64044100
64008a01:	lea    eax,[esp+0x24]
64008a05:	push   eax
64008a06:	call   0x64013884
64008a0b:	mov    ecx,DWORD PTR [esp+0x4c]
64008a0f:	mov    DWORD PTR fs:0x0,ecx
64008a16:	pop    ecx
64008a17:	add    esp,0x54
64008a1a:	ret    0x4
64008a1d:	int3   
64008a1e:	int3   
64008a1f:	int3   
64008a20:	push   ebp
64008a21:	mov    ebp,esp
64008a23:	push   0xfffffffe
64008a25:	push   0x64044250
64008a2a:	push   0x64015930
64008a2f:	mov    eax,fs:0x0
64008a35:	push   eax
64008a36:	sub    esp,0x28
64008a39:	push   ebx
64008a3a:	push   esi
64008a3b:	push   edi
64008a3c:	mov    eax,ds:0x640521ac
64008a41:	xor    DWORD PTR [ebp-0x8],eax
64008a44:	xor    eax,ebp
64008a46:	push   eax
64008a47:	lea    eax,[ebp-0x10]
64008a4a:	mov    fs:0x0,eax
64008a50:	mov    esi,DWORD PTR [ebp+0x8]
64008a53:	xor    ebx,ebx
64008a55:	mov    DWORD PTR [ebp-0x2c],ebx
64008a58:	mov    DWORD PTR [ebp-0x30],ebx
64008a5b:	mov    DWORD PTR [ebp-0x20],ebx
64008a5e:	mov    DWORD PTR [ebp-0x34],ebx
64008a61:	mov    DWORD PTR [ebp-0x38],ebx
64008a64:	mov    DWORD PTR [ebp-0x24],ebx
64008a67:	mov    BYTE PTR [ebp-0x19],bl
64008a6a:	mov    DWORD PTR [ebp-0x4],ebx
64008a6d:	push   0x4
64008a6f:	push   0x3000
64008a74:	push   0x1020
64008a79:	push   ebx
64008a7a:	push   esi
64008a7b:	call   DWORD PTR ds:0x6402c0c4
64008a81:	mov    edi,eax
64008a83:	mov    DWORD PTR [ebp-0x2c],edi
64008a86:	test   edi,edi
64008a88:	jne    0x64008a95
64008a8a:	call   DWORD PTR ds:0x6402c06c
64008a90:	jmp    0x64008b5d
64008a95:	lea    eax,[ebp-0x24]
64008a98:	push   eax
64008a99:	push   0x1020
64008a9e:	mov    ecx,DWORD PTR [ebp+0x14]
64008aa1:	push   ecx
64008aa2:	push   edi
64008aa3:	push   esi
64008aa4:	call   DWORD PTR ds:0x6402c0d8
64008aaa:	test   eax,eax
64008aac:	je     0x64008b5d
64008ab2:	push   0x40
64008ab4:	push   0x3000
64008ab9:	mov    edx,DWORD PTR [ebp+0x10]
64008abc:	push   edx
64008abd:	push   0x0
64008abf:	push   esi
64008ac0:	call   DWORD PTR ds:0x6402c0c4
64008ac6:	mov    ebx,eax
64008ac8:	mov    DWORD PTR [ebp-0x30],ebx
64008acb:	test   ebx,ebx
64008acd:	je     0x64008b5d
64008ad3:	lea    eax,[ebp-0x24]
64008ad6:	push   eax
64008ad7:	mov    ecx,DWORD PTR [ebp+0x10]
64008ada:	push   ecx
64008adb:	mov    edx,DWORD PTR [ebp+0xc]
64008ade:	push   edx
64008adf:	push   ebx
64008ae0:	push   esi
64008ae1:	call   DWORD PTR ds:0x6402c0d8
64008ae7:	test   eax,eax
64008ae9:	je     0x64008b5d
64008aeb:	mov    DWORD PTR [ebp-0x28],0x0
64008af2:	lea    eax,[ebp-0x28]
64008af5:	push   eax
64008af6:	push   0xf01ff
64008afb:	push   esi
64008afc:	call   DWORD PTR ds:0x6402c008
64008b02:	test   eax,eax
64008b04:	je     0x64008b5d
64008b06:	mov    ecx,DWORD PTR [ebp-0x28]
64008b09:	push   ecx
64008b0a:	call   DWORD PTR ds:0x6402c004
64008b10:	test   eax,eax
64008b12:	je     0x64008b5d
64008b14:	lea    edx,[ebp-0x34]
64008b17:	push   edx
64008b18:	push   0x0
64008b1a:	push   edi
64008b1b:	push   ebx
64008b1c:	push   0x0
64008b1e:	push   0x0
64008b20:	push   esi
64008b21:	call   DWORD PTR ds:0x6402c0bc
64008b27:	mov    DWORD PTR [ebp-0x20],eax
64008b2a:	test   eax,eax
64008b2c:	je     0x64008b5d
64008b2e:	call   DWORD PTR ds:0x6402c000
64008b34:	push   0xffffffff
64008b36:	mov    eax,DWORD PTR [ebp-0x20]
64008b39:	push   eax
64008b3a:	call   DWORD PTR ds:0x6402c05c
64008b40:	lea    ecx,[ebp-0x24]
64008b43:	push   ecx
64008b44:	push   0x1020
64008b49:	mov    edx,DWORD PTR [ebp+0x14]
64008b4c:	push   edx
64008b4d:	push   edi
64008b4e:	push   esi
64008b4f:	call   DWORD PTR ds:0x6402c0c8
64008b55:	test   eax,eax
64008b57:	je     0x64008b5d
64008b59:	mov    BYTE PTR [ebp-0x19],0x1
64008b5d:	mov    DWORD PTR [ebp-0x4],0xfffffffe
64008b64:	call   0x64008b87
64008b69:	mov    al,BYTE PTR [ebp-0x19]
64008b6c:	mov    ecx,DWORD PTR [ebp-0x10]
64008b6f:	mov    DWORD PTR fs:0x0,ecx
64008b76:	pop    ecx
64008b77:	pop    edi
64008b78:	pop    esi
64008b79:	pop    ebx
64008b7a:	mov    esp,ebp
64008b7c:	pop    ebp
64008b7d:	ret    
64008b7e:	mov    esi,DWORD PTR [ebp+0x8]
64008b81:	mov    edi,DWORD PTR [ebp-0x2c]
64008b84:	mov    ebx,DWORD PTR [ebp-0x30]
64008b87:	test   edi,edi
64008b89:	je     0x64008b9a
64008b8b:	push   0x8000
64008b90:	push   0x0
64008b92:	push   edi
64008b93:	push   esi
64008b94:	call   DWORD PTR ds:0x6402c0b4
64008b9a:	test   ebx,ebx
64008b9c:	je     0x64008bad
64008b9e:	push   0x8000
64008ba3:	push   0x0
64008ba5:	push   ebx
64008ba6:	push   esi
64008ba7:	call   DWORD PTR ds:0x6402c0b4
64008bad:	mov    eax,DWORD PTR [ebp-0x20]
64008bb0:	test   eax,eax
64008bb2:	je     0x64008bc9
64008bb4:	lea    ecx,[ebp-0x38]
64008bb7:	push   ecx
64008bb8:	push   eax
64008bb9:	call   DWORD PTR ds:0x6402c0c0
64008bbf:	mov    edx,DWORD PTR [ebp-0x20]
64008bc2:	push   edx
64008bc3:	call   DWORD PTR ds:0x6402c078
64008bc9:	ret    
64008bca:	int3   
64008bcb:	int3   
64008bcc:	int3   
64008bcd:	int3   
64008bce:	int3   
64008bcf:	int3   
64008bd0:	push   ebp
64008bd1:	mov    ebp,esp
64008bd3:	push   0xffffffff
64008bd5:	push   0x64023851
64008bda:	mov    eax,fs:0x0
64008be0:	push   eax
64008be1:	push   ecx
64008be2:	mov    eax,0x1060
64008be7:	call   0x64017f50
64008bec:	mov    eax,ds:0x640521ac
64008bf1:	xor    eax,ebp
64008bf3:	mov    DWORD PTR [ebp-0x14],eax
64008bf6:	push   ebx
64008bf7:	push   esi
64008bf8:	push   edi
64008bf9:	push   eax
64008bfa:	lea    eax,[ebp-0xc]
64008bfd:	mov    fs:0x0,eax
64008c03:	mov    DWORD PTR [ebp-0x10],esp
64008c06:	mov    ebx,DWORD PTR [ebp+0xc]
64008c09:	mov    eax,DWORD PTR [ebp+0x8]
64008c0c:	push   0x1018
64008c11:	xor    edi,edi
64008c13:	lea    edx,[ebp-0x1030]
64008c19:	push   edi
64008c1a:	push   edx
64008c1b:	mov    DWORD PTR [ebp-0x104c],eax
64008c21:	mov    DWORD PTR [ebp-0x1048],ecx
64008c27:	mov    BYTE PTR [ebp-0x1038],0x0
64008c2e:	call   0x64015170
64008c33:	mov    eax,ebx
64008c35:	add    esp,0xc
64008c38:	lea    edx,[eax+0x2]
64008c3b:	jmp    0x64008c40
64008c3d:	lea    ecx,[ecx+0x0]
64008c40:	mov    cx,WORD PTR [eax]
64008c43:	add    eax,0x2
64008c46:	cmp    cx,di
64008c49:	jne    0x64008c40
64008c4b:	sub    eax,edx
64008c4d:	sar    eax,1
64008c4f:	cmp    eax,0x400
64008c54:	ja     0x64008e00
64008c5a:	push   edi
64008c5b:	lea    ecx,[ebp-0x103c]
64008c61:	call   0x64009c90
64008c66:	push   0x6404320c
64008c6b:	mov    DWORD PTR [ebp-0x4],edi
64008c6e:	push   0xc
64008c70:	mov    ecx,0x64043248
64008c75:	mov    BYTE PTR [ebp-0x4],0x1
64008c79:	call   0x64003050
64008c7e:	add    esp,0x8
64008c81:	push   ecx
64008c82:	mov    ecx,esp
64008c84:	mov    DWORD PTR [ebp-0x1050],esp
64008c8a:	push   ecx
64008c8b:	mov    ecx,eax
64008c8d:	call   0x64002a80
64008c92:	call   0x64007a00
64008c97:	add    esp,0x4
64008c9a:	push   eax
64008c9b:	lea    ecx,[ebp-0x103c]
64008ca1:	call   0x64009d20
64008ca6:	mov    DWORD PTR [ebp-0x4],edi
64008ca9:	jmp    0x64008cbd
64008cab:	mov    DWORD PTR [ebp-0x4],0x0
64008cb2:	mov    eax,0x64008cb8
64008cb7:	ret    
64008cb8:	mov    ebx,DWORD PTR [ebp+0xc]
64008cbb:	xor    edi,edi
64008cbd:	lea    ecx,[ebp-0x103c]
64008cc3:	call   0x64009d10
64008cc8:	test   eax,eax
64008cca:	je     0x64008dee
64008cd0:	push   edi
64008cd1:	lea    esi,[ebp-0x106c]
64008cd7:	call   0x640078b0
64008cdc:	add    esp,0x4
64008cdf:	lea    edx,[ebp-0x1044]
64008ce5:	push   edx
64008ce6:	mov    ecx,eax
64008ce8:	mov    BYTE PTR [ebp-0x4],0x3
64008cec:	call   0x6400a890
64008cf1:	mov    BYTE PTR [ebp-0x4],0x5
64008cf5:	cmp    DWORD PTR [ebp-0x1054],0x10
64008cfc:	jb     0x64008d0d
64008cfe:	mov    eax,DWORD PTR [ebp-0x1068]
64008d04:	push   eax
64008d05:	call   0x64013656
64008d0a:	add    esp,0x4
64008d0d:	lea    ecx,[ebp-0x103c]
64008d13:	mov    DWORD PTR [ebp-0x1054],0xf
64008d1d:	mov    DWORD PTR [ebp-0x1058],edi
64008d23:	mov    BYTE PTR [ebp-0x1068],0x0
64008d2a:	mov    BYTE PTR [ebp-0x1038],0x0
64008d31:	call   0x64009cf0
64008d36:	push   0x64043264
64008d3b:	mov    esi,eax
64008d3d:	mov    edi,DWORD PTR [esi]
64008d3f:	push   0x17
64008d41:	push   0x64043298
64008d46:	call   0x64002e50
64008d4b:	mov    edx,DWORD PTR [edi]
64008d4d:	add    esp,0xc
64008d50:	push   eax
64008d51:	mov    ecx,esi
64008d53:	call   edx
64008d55:	lea    ecx,[ebp-0x103c]
64008d5b:	mov    DWORD PTR [ebp-0x1030],eax
64008d61:	mov    DWORD PTR [ebp-0x102c],edx
64008d67:	call   0x64009cf0
64008d6c:	push   0x640432b0
64008d71:	mov    esi,eax
64008d73:	mov    edi,DWORD PTR [esi]
64008d75:	push   0x17
64008d77:	push   0x640432dc
64008d7c:	call   0x64002e50
64008d81:	add    esp,0xc
64008d84:	push   eax
64008d85:	mov    eax,DWORD PTR [edi]
64008d87:	mov    ecx,esi
64008d89:	call   eax
64008d8b:	mov    DWORD PTR [ebp-0x1024],edx
64008d91:	lea    edx,[ebp-0x1020]
64008d97:	mov    DWORD PTR [ebp-0x1028],eax
64008d9d:	mov    eax,ebx
64008d9f:	sub    edx,ebx
64008da1:	movzx  ecx,WORD PTR [eax]
64008da4:	mov    WORD PTR [edx+eax*1],cx
64008da8:	add    eax,0x2
64008dab:	test   cx,cx
64008dae:	jne    0x64008da1
64008db0:	mov    eax,DWORD PTR [ebp-0x1044]
64008db6:	lea    edx,[ebp-0x1038]
64008dbc:	push   edx
64008dbd:	mov    DWORD PTR [ebp-0x20],0x40
64008dc4:	mov    ecx,DWORD PTR [eax+0x6]
64008dc7:	push   ecx
64008dc8:	add    eax,0x12
64008dcb:	push   eax
64008dcc:	mov    eax,DWORD PTR [ebp-0x104c]
64008dd2:	push   eax
64008dd3:	call   0x64008a20
64008dd8:	add    esp,0x10
64008ddb:	test   al,al
64008ddd:	jne    0x64008e04
64008ddf:	mov    ecx,DWORD PTR [ebp-0x1044]
64008de5:	push   ecx
64008de6:	call   0x64013656
64008deb:	add    esp,0x4
64008dee:	lea    ecx,[ebp-0x103c]
64008df4:	mov    DWORD PTR [ebp-0x4],0xffffffff
64008dfb:	call   0x64009cb0
64008e00:	xor    eax,eax
64008e02:	jmp    0x64008e52
64008e04:	mov    esi,DWORD PTR [ebp-0x20]
64008e07:	cmp    esi,0x40
64008e0a:	jae    0x64008e2f
64008e0c:	mov    edx,DWORD PTR [ebp-0x1048]
64008e12:	lea    eax,[ebp-0x820]
64008e18:	mov    ecx,eax
64008e1a:	sub    edx,ecx
64008e1c:	lea    esp,[esp+0x0]
64008e20:	movzx  ecx,WORD PTR [eax]
64008e23:	mov    WORD PTR [edx+eax*1],cx
64008e27:	add    eax,0x2
64008e2a:	test   cx,cx
64008e2d:	jne    0x64008e20
64008e2f:	mov    edx,DWORD PTR [ebp-0x1044]
64008e35:	push   edx
64008e36:	call   0x64013656
64008e3b:	add    esp,0x4
64008e3e:	lea    ecx,[ebp-0x103c]
64008e44:	mov    DWORD PTR [ebp-0x4],0xffffffff
64008e4b:	call   0x64009cb0
64008e50:	mov    eax,esi
64008e52:	mov    ecx,DWORD PTR [ebp-0xc]
64008e55:	mov    DWORD PTR fs:0x0,ecx
64008e5c:	pop    ecx
64008e5d:	pop    edi
64008e5e:	pop    esi
64008e5f:	pop    ebx
64008e60:	mov    ecx,DWORD PTR [ebp-0x14]
64008e63:	xor    ecx,ebp
64008e65:	call   0x64013d18
64008e6a:	mov    esp,ebp
64008e6c:	pop    ebp
64008e6d:	ret    
64008e6e:	int3   
64008e6f:	int3   
64008e70:	mov    ecx,DWORD PTR [eax]
64008e72:	push   ecx
64008e73:	call   0x64013656
64008e78:	pop    ecx
64008e79:	ret    
64008e7a:	int3   
64008e7b:	int3   
64008e7c:	int3   
64008e7d:	int3   
64008e7e:	int3   
64008e7f:	int3   
64008e80:	push   ebp
64008e81:	mov    ebp,esp
64008e83:	push   0xffffffff
64008e85:	push   0x64023801
64008e8a:	mov    eax,fs:0x0
64008e90:	push   eax
64008e91:	push   ecx
64008e92:	mov    eax,0x105c
64008e97:	call   0x64017f50
64008e9c:	mov    eax,ds:0x640521ac
64008ea1:	xor    eax,ebp
64008ea3:	mov    DWORD PTR [ebp-0x18],eax
64008ea6:	push   ebx
64008ea7:	push   esi
64008ea8:	push   edi
64008ea9:	push   eax
64008eaa:	lea    eax,[ebp-0xc]
64008ead:	mov    fs:0x0,eax
64008eb3:	mov    DWORD PTR [ebp-0x10],esp
64008eb6:	mov    ebx,DWORD PTR [ebp+0xc]
64008eb9:	mov    eax,DWORD PTR [ebp+0x8]
64008ebc:	push   0x1018
64008ec1:	xor    edi,edi
64008ec3:	lea    ecx,[ebp-0x1034]
64008ec9:	push   edi
64008eca:	push   ecx
64008ecb:	mov    DWORD PTR [ebp-0x1044],eax
64008ed1:	mov    BYTE PTR [ebp-0x103c],0x0
64008ed8:	call   0x64015170
64008edd:	mov    eax,ebx
64008edf:	add    esp,0xc
64008ee2:	lea    edx,[eax+0x2]
64008ee5:	mov    cx,WORD PTR [eax]
64008ee8:	add    eax,0x2
64008eeb:	cmp    cx,di
64008eee:	jne    0x64008ee5
64008ef0:	sub    eax,edx
64008ef2:	sar    eax,1
64008ef4:	cmp    eax,0x400
64008ef9:	ja     0x640090d8
64008eff:	mov    eax,DWORD PTR [ebp+0x10]
64008f02:	lea    edx,[eax+0x2]
64008f05:	mov    cx,WORD PTR [eax]
64008f08:	add    eax,0x2
64008f0b:	cmp    cx,di
64008f0e:	jne    0x64008f05
64008f10:	sub    eax,edx
64008f12:	sar    eax,1
64008f14:	cmp    eax,0x400
64008f19:	ja     0x640090d8
64008f1f:	push   edi
64008f20:	lea    ecx,[ebp-0x1040]
64008f26:	call   0x64009c90
64008f2b:	push   0x640432f4
64008f30:	mov    DWORD PTR [ebp-0x4],edi
64008f33:	push   0xc
64008f35:	mov    ecx,0x64043248
64008f3a:	mov    BYTE PTR [ebp-0x4],0x1
64008f3e:	call   0x64003050
64008f43:	add    esp,0x8
64008f46:	push   ecx
64008f47:	mov    edx,esp
64008f49:	mov    DWORD PTR [ebp-0x1050],esp
64008f4f:	push   edx
64008f50:	mov    ecx,eax
64008f52:	call   0x64002a80
64008f57:	call   0x64007a00
64008f5c:	add    esp,0x4
64008f5f:	push   eax
64008f60:	lea    ecx,[ebp-0x1040]
64008f66:	call   0x64009d20
64008f6b:	mov    DWORD PTR [ebp-0x4],edi
64008f6e:	jmp    0x64008f82
64008f70:	mov    DWORD PTR [ebp-0x4],0x0
64008f77:	mov    eax,0x64008f7d
64008f7c:	ret    
64008f7d:	mov    ebx,DWORD PTR [ebp+0xc]
64008f80:	xor    edi,edi
64008f82:	lea    ecx,[ebp-0x1040]
64008f88:	call   0x64009d10
64008f8d:	test   eax,eax
64008f8f:	je     0x640090c6
64008f95:	push   edi
64008f96:	lea    esi,[ebp-0x106c]
64008f9c:	call   0x640078b0
64008fa1:	add    esp,0x4
64008fa4:	lea    ecx,[ebp-0x104c]
64008faa:	push   ecx
64008fab:	mov    ecx,eax
64008fad:	mov    BYTE PTR [ebp-0x4],0x3
64008fb1:	call   0x6400a890
64008fb6:	mov    BYTE PTR [ebp-0x4],0x5
64008fba:	cmp    DWORD PTR [ebp-0x1054],0x10
64008fc1:	jb     0x64008fd2
64008fc3:	mov    edx,DWORD PTR [ebp-0x1068]
64008fc9:	push   edx
64008fca:	call   0x64013656
64008fcf:	add    esp,0x4
64008fd2:	lea    ecx,[ebp-0x1040]
64008fd8:	mov    DWORD PTR [ebp-0x1054],0xf
64008fe2:	mov    DWORD PTR [ebp-0x1058],edi
64008fe8:	mov    BYTE PTR [ebp-0x1068],0x0
64008fef:	mov    BYTE PTR [ebp-0x103c],0x1
64008ff6:	call   0x64009cf0
64008ffb:	push   0x64043318
64009000:	mov    esi,eax
64009002:	mov    edi,DWORD PTR [esi]
64009004:	push   0x17
64009006:	push   0x64043298
6400900b:	call   0x64002e50
64009010:	add    esp,0xc
64009013:	push   eax
64009014:	mov    eax,DWORD PTR [edi]
64009016:	mov    ecx,esi
64009018:	call   eax
6400901a:	lea    ecx,[ebp-0x1040]
64009020:	mov    DWORD PTR [ebp-0x1034],eax
64009026:	mov    DWORD PTR [ebp-0x1030],edx
6400902c:	call   0x64009cf0
64009031:	push   0x64043350
64009036:	mov    esi,eax
64009038:	mov    edi,DWORD PTR [esi]
6400903a:	push   0x17
6400903c:	push   0x640432dc
64009041:	call   0x64002e50
64009046:	mov    edx,DWORD PTR [edi]
64009048:	add    esp,0xc
6400904b:	push   eax
6400904c:	mov    ecx,esi
6400904e:	call   edx
64009050:	mov    DWORD PTR [ebp-0x1028],edx
64009056:	lea    edx,[ebp-0x1024]
6400905c:	mov    DWORD PTR [ebp-0x102c],eax
64009062:	mov    eax,ebx
64009064:	sub    edx,ebx
64009066:	movzx  ecx,WORD PTR [eax]
64009069:	mov    WORD PTR [edx+eax*1],cx
6400906d:	add    eax,0x2
64009070:	test   cx,cx
64009073:	jne    0x64009066
64009075:	mov    eax,DWORD PTR [ebp+0x10]
64009078:	lea    edx,[ebp-0x824]
6400907e:	sub    edx,eax
64009080:	movzx  ecx,WORD PTR [eax]
64009083:	mov    WORD PTR [edx+eax*1],cx
64009087:	add    eax,0x2
6400908a:	test   cx,cx
6400908d:	jne    0x64009080
6400908f:	mov    eax,DWORD PTR [ebp-0x104c]
64009095:	mov    ecx,DWORD PTR [eax+0x6]
64009098:	lea    edx,[ebp-0x103c]
6400909e:	push   edx
6400909f:	push   ecx
640090a0:	add    eax,0x12
640090a3:	push   eax
640090a4:	mov    eax,DWORD PTR [ebp-0x1044]
640090aa:	push   eax
640090ab:	call   0x64008a20
640090b0:	add    esp,0x10
640090b3:	test   al,al
640090b5:	jne    0x640090dc
640090b7:	mov    ecx,DWORD PTR [ebp-0x104c]
640090bd:	push   ecx
640090be:	call   0x64013656
640090c3:	add    esp,0x4
640090c6:	lea    ecx,[ebp-0x1040]
640090cc:	mov    DWORD PTR [ebp-0x4],0xffffffff
640090d3:	call   0x64009cb0
640090d8:	xor    eax,eax
640090da:	jmp    0x64009102
640090dc:	mov    edx,DWORD PTR [ebp-0x104c]
640090e2:	push   edx
640090e3:	call   0x64013656
640090e8:	add    esp,0x4
640090eb:	lea    ecx,[ebp-0x1040]
640090f1:	mov    DWORD PTR [ebp-0x4],0xffffffff
640090f8:	call   0x64009cb0
640090fd:	mov    eax,0x1
64009102:	mov    ecx,DWORD PTR [ebp-0xc]
64009105:	mov    DWORD PTR fs:0x0,ecx
6400910c:	pop    ecx
6400910d:	pop    edi
6400910e:	pop    esi
6400910f:	pop    ebx
64009110:	mov    ecx,DWORD PTR [ebp-0x18]
64009113:	xor    ecx,ebp
64009115:	call   0x64013d18
6400911a:	mov    esp,ebp
6400911c:	pop    ebp
6400911d:	ret    
6400911e:	int3   
6400911f:	int3   
64009120:	push   0xffffffff
64009122:	push   0x64023b4b
64009127:	mov    eax,fs:0x0
6400912d:	push   eax
6400912e:	sub    esp,0x88
64009134:	mov    eax,ds:0x640521ac
64009139:	xor    eax,esp
6400913b:	mov    DWORD PTR [esp+0x84],eax
64009142:	push   edi
64009143:	mov    eax,ds:0x640521ac
64009148:	xor    eax,esp
6400914a:	push   eax
6400914b:	lea    eax,[esp+0x90]
64009152:	mov    fs:0x0,eax
64009158:	mov    BYTE PTR [esi+0x890],0x0
6400915f:	mov    eax,ds:0x640539e4
64009164:	mov    edx,DWORD PTR [eax+0xc]
64009167:	mov    ecx,0x640539e4
6400916c:	call   edx
6400916e:	add    eax,0x10
64009171:	mov    DWORD PTR [esp+0x8],eax
64009175:	mov    DWORD PTR [esp+0x98],0x0
64009180:	mov    eax,DWORD PTR [esi+0x4]
64009183:	push   eax
64009184:	push   0x64043390
64009189:	push   0x10
6400918b:	mov    ecx,0x640433bc
64009190:	call   0x64003050
64009195:	add    esp,0x8
64009198:	push   eax
64009199:	lea    ecx,[esp+0x10]
6400919d:	push   ecx
6400919e:	call   0x6400a5d0
640091a3:	mov    edx,DWORD PTR [esp+0x14]
640091a7:	mov    eax,DWORD PTR [esi]
640091a9:	add    esp,0xc
640091ac:	push   edx
640091ad:	push   eax
640091ae:	lea    ecx,[esp+0x14]
640091b2:	call   0x64008bd0
640091b7:	add    esp,0x8
640091ba:	test   eax,eax
640091bc:	je     0x64009218
640091be:	lea    eax,[esp+0xc]
640091c2:	push   eax
640091c3:	call   0x640150ec
640091c8:	mov    edi,eax
640091ca:	add    esp,0x4
640091cd:	test   edi,edi
640091cf:	je     0x64009218
640091d1:	mov    eax,DWORD PTR [esi]
640091d3:	push   0x0
640091d5:	push   0x880
640091da:	lea    ecx,[esi+0x8]
640091dd:	push   ecx
640091de:	push   edi
640091df:	push   eax
640091e0:	call   DWORD PTR ds:0x6402c0c8
640091e6:	test   eax,eax
640091e8:	jne    0x6400920b
640091ea:	mov    DWORD PTR [esp+0x98],0xffffffff
640091f5:	mov    eax,DWORD PTR [esp+0x8]
640091f9:	add    eax,0xfffffff0
640091fc:	lea    edx,[eax+0xc]
640091ff:	or     ecx,0xffffffff
64009202:	lock xadd DWORD PTR [edx],ecx
64009206:	dec    ecx
64009207:	test   ecx,ecx
64009209:	jmp    0x64009237
6400920b:	mov    DWORD PTR [esi+0x888],edi
64009211:	mov    BYTE PTR [esi+0x890],0x1
64009218:	mov    DWORD PTR [esp+0x98],0xffffffff
64009223:	mov    eax,DWORD PTR [esp+0x8]
64009227:	add    eax,0xfffffff0
6400922a:	or     edx,0xffffffff
6400922d:	lea    ecx,[eax+0xc]
64009230:	lock xadd DWORD PTR [ecx],edx
64009234:	dec    edx
64009235:	test   edx,edx
64009237:	jg     0x64009243
64009239:	mov    ecx,DWORD PTR [eax]
6400923b:	mov    edx,DWORD PTR [ecx]
6400923d:	push   eax
6400923e:	mov    eax,DWORD PTR [edx+0x4]
64009241:	call   eax
64009243:	mov    ecx,DWORD PTR [esp+0x90]
6400924a:	mov    DWORD PTR fs:0x0,ecx
64009251:	pop    ecx
64009252:	pop    edi
64009253:	mov    ecx,DWORD PTR [esp+0x84]
6400925a:	xor    ecx,esp
6400925c:	call   0x64013d18
64009261:	add    esp,0x94
64009267:	ret    
64009268:	int3   
64009269:	int3   
6400926a:	int3   
6400926b:	int3   
6400926c:	int3   
6400926d:	int3   
6400926e:	int3   
6400926f:	int3   
64009270:	push   ebp
64009271:	mov    ebp,esp
64009273:	and    esp,0xfffffff8
64009276:	push   0xffffffff
64009278:	push   0x64023c11
6400927d:	mov    eax,fs:0x0
64009283:	push   eax
64009284:	sub    esp,0x874
6400928a:	mov    eax,ds:0x640521ac
6400928f:	xor    eax,esp
64009291:	mov    DWORD PTR [esp+0x86c],eax
64009298:	push   esi
64009299:	push   edi
6400929a:	mov    eax,ds:0x640521ac
6400929f:	xor    eax,esp
640092a1:	push   eax
640092a2:	lea    eax,[esp+0x880]
640092a9:	mov    fs:0x0,eax
640092af:	mov    eax,DWORD PTR [ebp+0x8]
640092b2:	mov    edi,ecx
640092b4:	mov    esi,edi
640092b6:	mov    DWORD PTR [esp+0x14],eax
640092ba:	call   0x64009120
640092bf:	cmp    BYTE PTR [edi+0x890],0x0
640092c6:	je     0x640093bd
640092cc:	push   ecx
640092cd:	mov    ecx,esp
640092cf:	mov    DWORD PTR [esp+0x1c],esp
640092d3:	lea    esi,[edi+0x88]
640092d9:	push   ecx
640092da:	mov    ecx,esi
640092dc:	call   0x64002a80
640092e1:	mov    edx,DWORD PTR [edi+0x4]
640092e4:	push   edx
640092e5:	call   0x64002740
640092ea:	add    esp,0x8
640092ed:	test   al,al
640092ef:	je     0x64009338
640092f1:	xor    esi,esi
640092f3:	push   esi
640092f4:	push   0x64041a56
640092f9:	lea    ecx,[esp+0x38]
640092fd:	mov    DWORD PTR [esp+0x50],0xf
64009305:	mov    DWORD PTR [esp+0x4c],esi
64009309:	mov    BYTE PTR [esp+0x3c],0x0
6400930e:	call   0x64003410
64009313:	lea    eax,[esp+0x30]
64009317:	push   eax
64009318:	lea    ecx,[esp+0x50]
6400931c:	push   ecx
6400931d:	mov    DWORD PTR [esp+0x890],esi
64009324:	call   0x64001470
64009329:	push   0x64044100
6400932e:	lea    edx,[esp+0x50]
64009332:	push   edx
64009333:	call   0x64013884
64009338:	mov    edx,esi
6400933a:	mov    eax,ebx
6400933c:	sub    edx,ebx
6400933e:	mov    edi,edi
64009340:	movzx  ecx,WORD PTR [eax]
64009343:	mov    WORD PTR [edx+eax*1],cx
64009347:	add    eax,0x2
6400934a:	test   cx,cx
6400934d:	jne    0x64009340
6400934f:	lea    ecx,[esp+0x1c]
64009353:	call   0x64009b80
64009358:	mov    DWORD PTR [esp+0x888],0x1
64009363:	mov    eax,DWORD PTR [edi+0x4]
64009366:	push   eax
64009367:	lea    ecx,[esp+0x20]
6400936b:	call   0x64007aa0
64009370:	mov    eax,DWORD PTR [edi+0x70]
64009373:	mov    ecx,DWORD PTR [edi]
64009375:	xor    edx,edx
64009377:	push   0x8000
6400937c:	push   edx
6400937d:	push   eax
6400937e:	push   ecx
6400937f:	mov    DWORD PTR [edi+0x70],edx
64009382:	mov    DWORD PTR [edi+0x74],edx
64009385:	mov    DWORD PTR [edi+0x78],edx
64009388:	call   DWORD PTR ds:0x6402c0b4
6400938e:	mov    ecx,DWORD PTR [esp+0x14]
64009392:	push   ecx
64009393:	mov    ecx,edi
64009395:	call   0x64007d00
6400939a:	push   edi
6400939b:	call   0x64008980
640093a0:	lea    esi,[esp+0x1c]
640093a4:	mov    DWORD PTR [esp+0x888],0xffffffff
640093af:	call   0x64007ba0
640093b4:	mov    ecx,esi
640093b6:	call   0x64009c70
640093bb:	jmp    0x640093f5
640093bd:	lea    edx,[edi+0x88]
640093c3:	mov    eax,ebx
640093c5:	sub    edx,ebx
640093c7:	jmp    0x640093d0
640093c9:	lea    esp,[esp+0x0]
640093d0:	movzx  ecx,WORD PTR [eax]
640093d3:	mov    WORD PTR [edx+eax*1],cx
640093d7:	add    eax,0x2
640093da:	test   cx,cx
640093dd:	jne    0x640093d0
640093df:	call   0x64008820
640093e4:	mov    edx,DWORD PTR [esp+0x14]
640093e8:	push   edx
640093e9:	mov    ecx,edi
640093eb:	call   0x64007d00
640093f0:	call   0x64007f70
640093f5:	push   0xa
640093f7:	lea    eax,[esp+0x78]
640093fb:	push   eax
640093fc:	mov    eax,DWORD PTR [edi+0x888]
64009402:	cdq    
64009403:	push   edx
64009404:	push   eax
64009405:	call   0x64014eb6
6400940a:	mov    edx,DWORD PTR ds:0x640539e4
64009410:	mov    eax,DWORD PTR [edx+0xc]
64009413:	add    esp,0x10
64009416:	mov    ecx,0x640539e4
6400941b:	call   eax
6400941d:	add    eax,0x10
64009420:	mov    DWORD PTR [esp+0x10],eax
64009424:	mov    DWORD PTR [esp+0x888],0x2
6400942f:	mov    ecx,DWORD PTR [edi+0x4]
64009432:	push   ecx
64009433:	push   0x640433e0
64009438:	push   0x10
6400943a:	mov    ecx,0x640433bc
6400943f:	call   0x64003050
64009444:	add    esp,0x8
64009447:	push   eax
64009448:	lea    edx,[esp+0x18]
6400944c:	push   edx
6400944d:	call   0x6400a5d0
64009452:	mov    ecx,DWORD PTR [esp+0x1c]
64009456:	mov    edi,DWORD PTR [edi]
64009458:	add    esp,0xc
6400945b:	lea    eax,[esp+0x74]
6400945f:	push   eax
64009460:	push   ecx
64009461:	push   edi
64009462:	call   0x64008e80
64009467:	mov    DWORD PTR [esp+0x894],0xffffffff
64009472:	mov    eax,DWORD PTR [esp+0x1c]
64009476:	add    eax,0xfffffff0
64009479:	add    esp,0xc
6400947c:	lea    edx,[eax+0xc]
6400947f:	or     ecx,0xffffffff
64009482:	lock xadd DWORD PTR [edx],ecx
64009486:	dec    ecx
64009487:	test   ecx,ecx
64009489:	jg     0x64009495
6400948b:	mov    ecx,DWORD PTR [eax]
6400948d:	mov    edx,DWORD PTR [ecx]
6400948f:	push   eax
64009490:	mov    eax,DWORD PTR [edx+0x4]
64009493:	call   eax
64009495:	mov    ecx,DWORD PTR [esp+0x880]
6400949c:	mov    DWORD PTR fs:0x0,ecx
640094a3:	pop    ecx
640094a4:	pop    edi
640094a5:	pop    esi
640094a6:	mov    ecx,DWORD PTR [esp+0x86c]
640094ad:	xor    ecx,esp
640094af:	call   0x64013d18
640094b4:	mov    esp,ebp
640094b6:	pop    ebp
640094b7:	ret    0x4
640094ba:	int3   
640094bb:	int3   
640094bc:	int3   
640094bd:	int3   
640094be:	int3   
640094bf:	int3   
640094c0:	push   ebp
640094c1:	mov    ebp,esp
640094c3:	push   0xffffffff
640094c5:	push   0x64023c56
640094ca:	mov    eax,fs:0x0
640094d0:	push   eax
640094d1:	sub    esp,0x8bc
640094d7:	mov    eax,ds:0x640521ac
640094dc:	xor    eax,ebp
640094de:	mov    DWORD PTR [ebp-0x14],eax
640094e1:	push   ebx
640094e2:	push   esi
640094e3:	push   edi
640094e4:	push   eax
640094e5:	lea    eax,[ebp-0xc]
640094e8:	mov    fs:0x0,eax
640094ee:	mov    DWORD PTR [ebp-0x10],esp
640094f1:	mov    esi,DWORD PTR [ebp+0x8]
640094f4:	mov    edi,DWORD PTR [ebp+0xc]
640094f7:	mov    ebx,DWORD PTR [ebp+0x10]
640094fa:	lea    eax,[ebp-0x8ac]
64009500:	push   eax
64009501:	mov    ecx,esi
64009503:	mov    DWORD PTR [ebp-0x4],0x0
6400950a:	call   0x64007bf0
6400950f:	push   edi
64009510:	lea    ecx,[ebp-0x8ac]
64009516:	mov    BYTE PTR [ebp-0x4],0x1
6400951a:	call   0x64009270
6400951f:	call   DWORD PTR ds:0x64052184
64009525:	mov    edi,eax
64009527:	call   DWORD PTR ds:0x6402c03c
6400952d:	cmp    esi,eax
6400952f:	je     0x64009598
64009531:	test   ebx,ebx
64009533:	jne    0x64009549
64009535:	mov    ecx,DWORD PTR [ebp-0x8ac]
6400953b:	xor    eax,eax
6400953d:	push   eax
6400953e:	push   ecx
6400953f:	call   0x64009660
64009544:	add    esp,0x8
64009547:	jmp    0x6400959f
64009549:	push   ebx
6400954a:	call   DWORD PTR ds:0x6402c034
64009550:	add    eax,0x1
64009553:	cmp    eax,0x3fffffff
64009558:	jle    0x6400956e
6400955a:	mov    ecx,DWORD PTR [ebp-0x8ac]
64009560:	xor    eax,eax
64009562:	push   eax
64009563:	push   ecx
64009564:	call   0x64009660
64009569:	add    esp,0x8
6400956c:	jmp    0x6400959f
6400956e:	lea    esi,[eax+eax*1]
64009571:	mov    eax,esi
64009573:	call   0x64013d30
64009578:	mov    DWORD PTR [ebp-0x10],esp
6400957b:	mov    eax,esp
6400957d:	push   edi
6400957e:	push   esi
6400957f:	push   ebx
64009580:	push   eax
64009581:	call   0x64001040
64009586:	mov    ecx,DWORD PTR [ebp-0x8ac]
6400958c:	push   eax
6400958d:	push   ecx
6400958e:	call   0x64009660
64009593:	add    esp,0x8
64009596:	jmp    0x6400959f
64009598:	push   ebx
64009599:	call   DWORD PTR ds:0x6402c0b8
6400959f:	lea    ecx,[ebp-0x18]
640095a2:	call   0x64009ac0
640095a7:	mov    esi,DWORD PTR [ebp-0x8ac]
640095ad:	test   esi,esi
640095af:	je     0x640095c7
640095b1:	call   DWORD PTR ds:0x6402c06c
640095b7:	push   esi
640095b8:	mov    edi,eax
640095ba:	call   DWORD PTR ds:0x6402c078
640095c0:	push   edi
640095c1:	call   DWORD PTR ds:0x6402c074
640095c7:	lea    esp,[ebp-0x8d8]
640095cd:	mov    ecx,DWORD PTR [ebp-0xc]
640095d0:	mov    DWORD PTR fs:0x0,ecx
640095d7:	pop    ecx
640095d8:	pop    edi
640095d9:	pop    esi
640095da:	pop    ebx
640095db:	mov    ecx,DWORD PTR [ebp-0x14]
640095de:	xor    ecx,ebp
640095e0:	call   0x64013d18
640095e5:	mov    esp,ebp
640095e7:	pop    ebp
640095e8:	ret    
640095e9:	push   0x64041a56
640095ee:	lea    ecx,[ebp-0x8c8]
640095f4:	call   0x64002920
640095f9:	mov    BYTE PTR [ebp-0x4],0x3
640095fd:	call   0x6400a7f0
64009602:	lea    ecx,[ebp-0x8c8]
64009608:	call   0x64002960
6400960d:	mov    eax,0x640095c7
64009612:	ret    
64009613:	int3   
64009614:	int3   
64009615:	int3   
64009616:	int3   
64009617:	int3   
64009618:	int3   
64009619:	int3   
6400961a:	int3   
6400961b:	int3   
6400961c:	int3   
6400961d:	int3   
6400961e:	int3   
6400961f:	int3   
64009620:	push   edi
64009621:	lea    ecx,[esi+0x894]
64009627:	call   0x64009ac0
6400962c:	mov    edi,DWORD PTR [esi]
6400962e:	test   edi,edi
64009630:	je     0x6400964a
64009632:	push   ebx
64009633:	call   DWORD PTR ds:0x6402c06c
64009639:	push   edi
6400963a:	mov    ebx,eax
6400963c:	call   DWORD PTR ds:0x6402c078
64009642:	push   ebx
64009643:	call   DWORD PTR ds:0x6402c074
64009649:	pop    ebx
6400964a:	mov    DWORD PTR [esi],0x0
64009650:	pop    edi
64009651:	ret    
64009652:	int3   
64009653:	int3   
64009654:	int3   
64009655:	int3   
64009656:	int3   
64009657:	int3   
64009658:	int3   
64009659:	int3   
6400965a:	int3   
6400965b:	int3   
6400965c:	int3   
6400965d:	int3   
6400965e:	int3   
6400965f:	int3   
64009660:	push   ebp
64009661:	mov    ebp,esp
64009663:	push   0xffffffff
64009665:	push   0x640237ab
6400966a:	mov    eax,fs:0x0
64009670:	push   eax
64009671:	push   ecx
64009672:	sub    esp,0x220
64009678:	mov    eax,ds:0x640521ac
6400967d:	xor    eax,ebp
6400967f:	mov    DWORD PTR [ebp-0x3c],eax
64009682:	push   ebx
64009683:	push   esi
64009684:	push   edi
64009685:	push   eax
64009686:	lea    eax,[ebp-0xc]
64009689:	mov    fs:0x0,eax
6400968f:	mov    DWORD PTR [ebp-0x10],esp
64009692:	push   0x64043408
64009697:	push   0xc
64009699:	mov    ecx,0x64043248
6400969e:	call   0x64003050
640096a3:	add    esp,0x4
640096a6:	mov    ecx,esp
640096a8:	mov    DWORD PTR [ebp-0xd8],esp
640096ae:	push   ecx
640096af:	mov    ecx,eax
640096b1:	call   0x64002a80
640096b6:	mov    DWORD PTR [ebp-0x200],eax
640096bc:	call   0x64007a00
640096c1:	add    esp,0x4
640096c4:	mov    DWORD PTR [ebp-0x174],eax
640096ca:	mov    edx,DWORD PTR [ebp-0x174]
640096d0:	mov    DWORD PTR [ebp-0x28],edx
640096d3:	mov    DWORD PTR [ebp-0x4],0x0
640096da:	cmp    DWORD PTR [ebp-0x28],0x0
640096de:	jne    0x6400973e
640096e0:	mov    BYTE PTR [ebp-0xd9],0x0
640096e7:	mov    DWORD PTR [ebp-0x4],0xffffffff
640096ee:	mov    eax,DWORD PTR [ebp-0x28]
640096f1:	mov    DWORD PTR [ebp-0x17c],eax
640096f7:	mov    ecx,DWORD PTR [ebp-0x17c]
640096fd:	mov    DWORD PTR [ebp-0x178],ecx
64009703:	cmp    DWORD PTR [ebp-0x178],0x0
6400970a:	je     0x64009729
6400970c:	push   0x1
6400970e:	mov    edx,DWORD PTR [ebp-0x178]
64009714:	mov    eax,DWORD PTR [edx]
64009716:	mov    ecx,DWORD PTR [ebp-0x178]
6400971c:	mov    edx,DWORD PTR [eax+0x4]
6400971f:	call   edx
64009721:	mov    DWORD PTR [ebp-0x204],eax
64009727:	jmp    0x64009733
64009729:	mov    DWORD PTR [ebp-0x204],0x0
64009733:	mov    al,BYTE PTR [ebp-0xd9]
64009739:	jmp    0x64009aa2
6400973e:	mov    eax,DWORD PTR [ebp+0x8]
64009741:	push   eax
64009742:	call   0x64002910
64009747:	add    esp,0x4
6400974a:	push   eax
6400974b:	lea    esi,[ebp-0xf8]
64009751:	call   0x64007870
64009756:	add    esp,0x4
64009759:	mov    DWORD PTR [ebp-0x208],eax
6400975f:	mov    ecx,DWORD PTR [ebp-0x208]
64009765:	mov    DWORD PTR [ebp-0x20c],ecx
6400976b:	mov    BYTE PTR [ebp-0x4],0x1
6400976f:	lea    edx,[ebp-0x38]
64009772:	push   edx
64009773:	mov    ecx,DWORD PTR [ebp-0x20c]
64009779:	call   0x6400a890
6400977e:	mov    BYTE PTR [ebp-0x4],0x3
64009782:	lea    ecx,[ebp-0xf8]
64009788:	call   0x64002960
6400978d:	mov    BYTE PTR [ebp-0x11],0x0
64009791:	mov    DWORD PTR [ebp-0x18],0x0
64009798:	mov    DWORD PTR [ebp-0x30],0x0
6400979f:	mov    DWORD PTR [ebp-0x24],0x0
640097a6:	mov    DWORD PTR [ebp-0x2c],0x0
640097ad:	mov    DWORD PTR [ebp-0x1c],0x0
640097b4:	mov    DWORD PTR [ebp-0x20],0x0
640097bb:	mov    BYTE PTR [ebp-0x4],0x4
640097bf:	mov    eax,DWORD PTR [ebp-0x28]
640097c2:	mov    DWORD PTR [ebp-0x210],eax
640097c8:	push   0x6404342c
640097cd:	push   0xc
640097cf:	push   0x64043464
640097d4:	call   0x64002e50
640097d9:	add    esp,0xc
640097dc:	mov    DWORD PTR [ebp-0x214],eax
640097e2:	mov    ecx,DWORD PTR [ebp-0x214]
640097e8:	push   ecx
640097e9:	mov    edx,DWORD PTR [ebp-0x210]
640097ef:	mov    eax,DWORD PTR [edx]
640097f1:	mov    ecx,DWORD PTR [ebp-0x210]
640097f7:	mov    edx,DWORD PTR [eax]
640097f9:	call   edx
640097fb:	mov    DWORD PTR [ebp-0x21c],eax
64009801:	mov    DWORD PTR [ebp-0x218],edx
64009807:	mov    eax,DWORD PTR [ebp-0x21c]
6400980d:	mov    DWORD PTR [ebp-0xc8],eax
64009813:	mov    ecx,DWORD PTR [ebp-0x218]
64009819:	mov    DWORD PTR [ebp-0xc4],ecx
6400981f:	push   0x80
64009824:	push   0x0
64009826:	lea    edx,[ebp-0xc0]
6400982c:	push   edx
6400982d:	call   0x64015170
64009832:	add    esp,0xc
64009835:	mov    eax,DWORD PTR [ebp+0xc]
64009838:	mov    DWORD PTR [ebp-0x220],eax
6400983e:	lea    ecx,[ebp-0xc0]
64009844:	mov    DWORD PTR [ebp-0x224],ecx
6400984a:	mov    edx,DWORD PTR [ebp-0x224]
64009850:	mov    DWORD PTR [ebp-0x228],edx
64009856:	mov    eax,DWORD PTR [ebp-0x220]
6400985c:	mov    cl,BYTE PTR [eax]
6400985e:	mov    BYTE PTR [ebp-0x229],cl
64009864:	mov    edx,DWORD PTR [ebp-0x224]
6400986a:	mov    al,BYTE PTR [ebp-0x229]
64009870:	mov    BYTE PTR [edx],al
64009872:	mov    ecx,DWORD PTR [ebp-0x220]
64009878:	add    ecx,0x1
6400987b:	mov    DWORD PTR [ebp-0x220],ecx
64009881:	mov    edx,DWORD PTR [ebp-0x224]
64009887:	add    edx,0x1
6400988a:	mov    DWORD PTR [ebp-0x224],edx
64009890:	cmp    BYTE PTR [ebp-0x229],0x0
64009897:	jne    0x64009856
64009899:	mov    eax,DWORD PTR [ebp-0xc8]
6400989f:	or     eax,DWORD PTR [ebp-0xc4]
640098a5:	jne    0x640098ac
640098a7:	jmp    0x640099d1
640098ac:	push   0x4
640098ae:	push   0x3000
640098b3:	push   0x88
640098b8:	push   0x0
640098ba:	mov    ecx,DWORD PTR [ebp+0x8]
640098bd:	push   ecx
640098be:	call   DWORD PTR ds:0x6402c0c4
640098c4:	mov    DWORD PTR [ebp-0x18],eax
640098c7:	cmp    DWORD PTR [ebp-0x18],0x0
640098cb:	jne    0x640098de
640098cd:	call   DWORD PTR ds:0x6402c06c
640098d3:	mov    DWORD PTR [ebp-0xd4],eax
640098d9:	jmp    0x640099d1
640098de:	lea    edx,[ebp-0x20]
640098e1:	push   edx
640098e2:	push   0x88
640098e7:	lea    eax,[ebp-0xc8]
640098ed:	push   eax
640098ee:	mov    ecx,DWORD PTR [ebp-0x18]
640098f1:	push   ecx
640098f2:	mov    edx,DWORD PTR [ebp+0x8]
640098f5:	push   edx
640098f6:	call   DWORD PTR ds:0x6402c0d8
640098fc:	lea    eax,[ebp-0x38]
640098ff:	call   0x6400aa00
64009904:	mov    DWORD PTR [ebp-0xcc],eax
6400990a:	push   0x40
6400990c:	push   0x3000
64009911:	mov    eax,DWORD PTR [ebp-0xcc]
64009917:	push   eax
64009918:	push   0x0
6400991a:	mov    ecx,DWORD PTR [ebp+0x8]
6400991d:	push   ecx
6400991e:	call   DWORD PTR ds:0x6402c0c4
64009924:	mov    DWORD PTR [ebp-0x30],eax
64009927:	mov    edx,DWORD PTR [ebp-0x30]
6400992a:	push   edx
6400992b:	lea    eax,[ebp-0x38]
6400992e:	call   0x6400aa10
64009933:	cmp    DWORD PTR [ebp-0x30],0x0
64009937:	jne    0x6400993e
64009939:	jmp    0x640099d1
6400993e:	lea    eax,[ebp-0x20]
64009941:	push   eax
64009942:	mov    ecx,DWORD PTR [ebp-0xcc]
64009948:	push   ecx
64009949:	lea    eax,[ebp-0x38]
6400994c:	call   0x6400a9f0
64009951:	push   eax
64009952:	mov    edx,DWORD PTR [ebp-0x30]
64009955:	push   edx
64009956:	mov    eax,DWORD PTR [ebp+0x8]
64009959:	push   eax
6400995a:	call   DWORD PTR ds:0x6402c0d8
64009960:	mov    DWORD PTR [ebp-0xd0],0x0
6400996a:	lea    ecx,[ebp-0xd0]
64009970:	push   ecx
64009971:	push   0xf01ff
64009976:	mov    edx,DWORD PTR [ebp+0x8]
64009979:	push   edx
6400997a:	call   DWORD PTR ds:0x6402c008
64009980:	mov    eax,DWORD PTR [ebp-0xd0]
64009986:	push   eax
64009987:	call   DWORD PTR ds:0x6402c004
6400998d:	lea    ecx,[ebp-0x2c]
64009990:	push   ecx
64009991:	push   0x0
64009993:	mov    edx,DWORD PTR [ebp-0x18]
64009996:	push   edx
64009997:	mov    eax,DWORD PTR [ebp-0x30]
6400999a:	push   eax
6400999b:	push   0x0
6400999d:	push   0x0
6400999f:	mov    ecx,DWORD PTR [ebp+0x8]
640099a2:	push   ecx
640099a3:	call   DWORD PTR ds:0x6402c0bc
640099a9:	mov    DWORD PTR [ebp-0x24],eax
640099ac:	cmp    DWORD PTR [ebp-0x24],0x0
640099b0:	jne    0x640099b4
640099b2:	jmp    0x640099d1
640099b4:	call   DWORD PTR ds:0x6402c000
640099ba:	push   0xffffffff
640099bc:	mov    edx,DWORD PTR [ebp-0x24]
640099bf:	push   edx
640099c0:	call   DWORD PTR ds:0x6402c05c
640099c6:	mov    BYTE PTR [ebp-0x11],0x1
640099ca:	jmp    0x640099d1
640099cc:	jmp    0x640097bf
640099d1:	jmp    0x640099e0
640099d3:	mov    DWORD PTR [ebp-0x4],0x3
640099da:	mov    eax,0x640099e7
640099df:	ret    
640099e0:	mov    DWORD PTR [ebp-0x4],0x3
640099e7:	cmp    DWORD PTR [ebp-0x18],0x0
640099eb:	je     0x64009a02
640099ed:	push   0x8000
640099f2:	push   0x0
640099f4:	mov    eax,DWORD PTR [ebp-0x18]
640099f7:	push   eax
640099f8:	mov    ecx,DWORD PTR [ebp+0x8]
640099fb:	push   ecx
640099fc:	call   DWORD PTR ds:0x6402c0b4
64009a02:	cmp    DWORD PTR [ebp-0x30],0x0
64009a06:	je     0x64009a1d
64009a08:	push   0x8000
64009a0d:	push   0x0
64009a0f:	mov    edx,DWORD PTR [ebp-0x30]
64009a12:	push   edx
64009a13:	mov    eax,DWORD PTR [ebp+0x8]
64009a16:	push   eax
64009a17:	call   DWORD PTR ds:0x6402c0b4
64009a1d:	cmp    DWORD PTR [ebp-0x24],0x0
64009a21:	je     0x64009a3b
64009a23:	lea    ecx,[ebp-0x1c]
64009a26:	push   ecx
64009a27:	mov    edx,DWORD PTR [ebp-0x24]
64009a2a:	push   edx
64009a2b:	call   DWORD PTR ds:0x6402c0c0
64009a31:	mov    eax,DWORD PTR [ebp-0x24]
64009a34:	push   eax
64009a35:	call   DWORD PTR ds:0x6402c078
64009a3b:	mov    cl,BYTE PTR [ebp-0x11]
64009a3e:	mov    BYTE PTR [ebp-0xf9],cl
64009a44:	mov    BYTE PTR [ebp-0x4],0x0
64009a48:	lea    eax,[ebp-0x38]
64009a4b:	call   0x64008e70
64009a50:	mov    DWORD PTR [ebp-0x4],0xffffffff
64009a57:	mov    edx,DWORD PTR [ebp-0x28]
64009a5a:	mov    DWORD PTR [ebp-0x1fc],edx
64009a60:	mov    eax,DWORD PTR [ebp-0x1fc]
64009a66:	mov    DWORD PTR [ebp-0x1f8],eax
64009a6c:	cmp    DWORD PTR [ebp-0x1f8],0x0
64009a73:	je     0x64009a92
64009a75:	push   0x1
64009a77:	mov    ecx,DWORD PTR [ebp-0x1f8]
64009a7d:	mov    edx,DWORD PTR [ecx]
64009a7f:	mov    ecx,DWORD PTR [ebp-0x1f8]
64009a85:	mov    eax,DWORD PTR [edx+0x4]
64009a88:	call   eax
64009a8a:	mov    DWORD PTR [ebp-0x230],eax
64009a90:	jmp    0x64009a9c
64009a92:	mov    DWORD PTR [ebp-0x230],0x0
64009a9c:	mov    al,BYTE PTR [ebp-0xf9]
64009aa2:	mov    ecx,DWORD PTR [ebp-0xc]
64009aa5:	mov    DWORD PTR fs:0x0,ecx
64009aac:	pop    ecx
64009aad:	pop    edi
64009aae:	pop    esi
64009aaf:	pop    ebx
64009ab0:	mov    ecx,DWORD PTR [ebp-0x3c]
64009ab3:	xor    ecx,ebp
64009ab5:	call   0x64013d18
64009aba:	mov    esp,ebp
64009abc:	pop    ebp
64009abd:	ret    
64009abe:	int3   
64009abf:	int3   
64009ac0:	push   ebp
64009ac1:	mov    ebp,esp
64009ac3:	sub    esp,0x14
64009ac6:	mov    DWORD PTR [ebp-0x10],ecx
64009ac9:	mov    eax,DWORD PTR [ebp-0x10]
64009acc:	mov    ecx,DWORD PTR [eax]
64009ace:	mov    DWORD PTR [ebp-0x8],ecx
64009ad1:	mov    edx,DWORD PTR [ebp-0x8]
64009ad4:	mov    DWORD PTR [ebp-0x4],edx
64009ad7:	cmp    DWORD PTR [ebp-0x4],0x0
64009adb:	je     0x64009b03
64009add:	mov    eax,DWORD PTR [ebp-0x4]
64009ae0:	call   0x64008e70
64009ae5:	mov    eax,0x1
64009aea:	and    eax,0x1
64009aed:	je     0x64009afb
64009aef:	mov    ecx,DWORD PTR [ebp-0x4]
64009af2:	push   ecx
64009af3:	call   0x64013656
64009af8:	add    esp,0x4
64009afb:	mov    edx,DWORD PTR [ebp-0x4]
64009afe:	mov    DWORD PTR [ebp-0x14],edx
64009b01:	jmp    0x64009b0a
64009b03:	mov    DWORD PTR [ebp-0x14],0x0
64009b0a:	mov    esp,ebp
64009b0c:	pop    ebp
64009b0d:	ret    
64009b0e:	int3   
64009b0f:	int3   
64009b10:	push   ebp
64009b11:	mov    ebp,esp
64009b13:	sub    esp,0x14
64009b16:	mov    DWORD PTR [ebp-0x10],ecx
64009b19:	mov    eax,DWORD PTR [ebp-0x10]
64009b1c:	mov    ecx,DWORD PTR [ebp+0x8]
64009b1f:	cmp    ecx,DWORD PTR [eax]
64009b21:	je     0x64009b64
64009b23:	mov    edx,DWORD PTR [ebp-0x10]
64009b26:	mov    eax,DWORD PTR [edx]
64009b28:	mov    DWORD PTR [ebp-0x8],eax
64009b2b:	mov    ecx,DWORD PTR [ebp-0x8]
64009b2e:	mov    DWORD PTR [ebp-0x4],ecx
64009b31:	cmp    DWORD PTR [ebp-0x4],0x0
64009b35:	je     0x64009b5d
64009b37:	mov    eax,DWORD PTR [ebp-0x4]
64009b3a:	call   0x64008e70
64009b3f:	mov    edx,0x1
64009b44:	and    edx,0x1
64009b47:	je     0x64009b55
64009b49:	mov    eax,DWORD PTR [ebp-0x4]
64009b4c:	push   eax
64009b4d:	call   0x64013656
64009b52:	add    esp,0x4
64009b55:	mov    ecx,DWORD PTR [ebp-0x4]
64009b58:	mov    DWORD PTR [ebp-0x14],ecx
64009b5b:	jmp    0x64009b64
64009b5d:	mov    DWORD PTR [ebp-0x14],0x0
64009b64:	mov    edx,DWORD PTR [ebp-0x10]
64009b67:	mov    eax,DWORD PTR [ebp+0x8]
64009b6a:	mov    DWORD PTR [edx],eax
64009b6c:	mov    esp,ebp
64009b6e:	pop    ebp
64009b6f:	ret    0x4
64009b72:	int3   
64009b73:	int3   
64009b74:	int3   
64009b75:	int3   
64009b76:	int3   
64009b77:	int3   
64009b78:	int3   
64009b79:	int3   
64009b7a:	int3   
64009b7b:	int3   
64009b7c:	int3   
64009b7d:	int3   
64009b7e:	int3   
64009b7f:	int3   
64009b80:	push   ebp
64009b81:	mov    ebp,esp
64009b83:	sub    esp,0x18
64009b86:	mov    DWORD PTR [ebp-0x18],ecx
64009b89:	lea    eax,[ebp-0x12]
64009b8c:	mov    DWORD PTR [ebp-0x8],eax
64009b8f:	lea    ecx,[ebp-0x11]
64009b92:	mov    DWORD PTR [ebp-0x10],ecx
64009b95:	mov    edx,DWORD PTR [ebp-0x18]
64009b98:	mov    DWORD PTR [edx+0x4],0x0
64009b9f:	mov    eax,DWORD PTR [ebp-0x18]
64009ba2:	mov    DWORD PTR [eax+0x8],0x0
64009ba9:	mov    ecx,DWORD PTR [ebp-0x18]
64009bac:	mov    DWORD PTR [ecx+0xc],0x0
64009bb3:	mov    edx,DWORD PTR [ebp-0x18]
64009bb6:	mov    DWORD PTR [edx+0x10],0x0
64009bbd:	mov    eax,DWORD PTR [ebp-0x18]
64009bc0:	mov    esp,ebp
64009bc2:	pop    ebp
64009bc3:	ret    
64009bc4:	int3   
64009bc5:	int3   
64009bc6:	int3   
64009bc7:	int3   
64009bc8:	int3   
64009bc9:	int3   
64009bca:	int3   
64009bcb:	int3   
64009bcc:	int3   
64009bcd:	int3   
64009bce:	int3   
64009bcf:	int3   
64009bd0:	push   ebp
64009bd1:	mov    ebp,esp
64009bd3:	sub    esp,0x8
64009bd6:	mov    DWORD PTR [ebp-0x8],ecx
64009bd9:	mov    eax,DWORD PTR [ebp-0x8]
64009bdc:	mov    ecx,DWORD PTR [eax+0x10]
64009bdf:	mov    DWORD PTR [ebp-0x4],ecx
64009be2:	mov    eax,DWORD PTR [ebp-0x4]
64009be5:	mov    esp,ebp
64009be7:	pop    ebp
64009be8:	ret    
64009be9:	int3   
64009bea:	int3   
64009beb:	int3   
64009bec:	int3   
64009bed:	int3   
64009bee:	int3   
64009bef:	int3   
64009bf0:	push   ebp
64009bf1:	mov    ebp,esp
64009bf3:	sub    esp,0x20
64009bf6:	mov    DWORD PTR [ebp-0x20],ecx
64009bf9:	lea    eax,[ebp-0xc]
64009bfc:	push   eax
64009bfd:	mov    ecx,DWORD PTR [ebp-0x20]
64009c00:	call   0x6400a000
64009c05:	mov    DWORD PTR [ebp-0x1c],eax
64009c08:	mov    ecx,DWORD PTR [ebp-0x1c]
64009c0b:	call   0x6400a540
64009c10:	mov    esp,ebp
64009c12:	pop    ebp
64009c13:	ret    
64009c14:	int3   
64009c15:	int3   
64009c16:	int3   
64009c17:	int3   
64009c18:	int3   
64009c19:	int3   
64009c1a:	int3   
64009c1b:	int3   
64009c1c:	int3   
64009c1d:	int3   
64009c1e:	int3   
64009c1f:	int3   
64009c20:	push   ebp
64009c21:	mov    ebp,esp
64009c23:	sub    esp,0xc8
64009c29:	mov    DWORD PTR [ebp-0xc8],ecx
64009c2f:	mov    eax,DWORD PTR [ebp+0x8]
64009c32:	push   eax
64009c33:	mov    ecx,DWORD PTR [ebp-0xc8]
64009c39:	call   0x64009df0
64009c3e:	mov    esp,ebp
64009c40:	pop    ebp
64009c41:	ret    0x4
64009c44:	int3   
64009c45:	int3   
64009c46:	int3   
64009c47:	int3   
64009c48:	int3   
64009c49:	int3   
64009c4a:	int3   
64009c4b:	int3   
64009c4c:	int3   
64009c4d:	int3   
64009c4e:	int3   
64009c4f:	int3   
64009c50:	push   ebp
64009c51:	mov    ebp,esp
64009c53:	sub    esp,0x8
64009c56:	mov    DWORD PTR [ebp-0x8],ecx
64009c59:	mov    ecx,DWORD PTR [ebp-0x8]
64009c5c:	call   0x64009d70
64009c61:	mov    esp,ebp
64009c63:	pop    ebp
64009c64:	ret    
64009c65:	int3   
64009c66:	int3   
64009c67:	int3   
64009c68:	int3   
64009c69:	int3   
64009c6a:	int3   
64009c6b:	int3   
64009c6c:	int3   
64009c6d:	int3   
64009c6e:	int3   
64009c6f:	int3   
64009c70:	push   ebp
64009c71:	mov    ebp,esp
64009c73:	sub    esp,0x1c
64009c76:	mov    DWORD PTR [ebp-0x1c],ecx
64009c79:	mov    ecx,DWORD PTR [ebp-0x1c]
64009c7c:	call   0x64009f50
64009c81:	mov    esp,ebp
64009c83:	pop    ebp
64009c84:	ret    
64009c85:	int3   
64009c86:	int3   
64009c87:	int3   
64009c88:	int3   
64009c89:	int3   
64009c8a:	int3   
64009c8b:	int3   
64009c8c:	int3   
64009c8d:	int3   
64009c8e:	int3   
64009c8f:	int3   
64009c90:	push   ebp
64009c91:	mov    ebp,esp
64009c93:	push   ecx
64009c94:	mov    DWORD PTR [ebp-0x4],ecx
64009c97:	mov    eax,DWORD PTR [ebp-0x4]
64009c9a:	mov    ecx,DWORD PTR [ebp+0x8]
64009c9d:	mov    DWORD PTR [eax],ecx
64009c9f:	mov    eax,DWORD PTR [ebp-0x4]
64009ca2:	mov    esp,ebp
64009ca4:	pop    ebp
64009ca5:	ret    0x4
64009ca8:	int3   
64009ca9:	int3   
64009caa:	int3   
64009cab:	int3   
64009cac:	int3   
64009cad:	int3   
64009cae:	int3   
64009caf:	int3   
64009cb0:	push   ebp
64009cb1:	mov    ebp,esp
64009cb3:	sub    esp,0x10
64009cb6:	mov    DWORD PTR [ebp-0xc],ecx
64009cb9:	mov    eax,DWORD PTR [ebp-0xc]
64009cbc:	mov    ecx,DWORD PTR [eax]
64009cbe:	mov    DWORD PTR [ebp-0x8],ecx
64009cc1:	mov    edx,DWORD PTR [ebp-0x8]
64009cc4:	mov    DWORD PTR [ebp-0x4],edx
64009cc7:	cmp    DWORD PTR [ebp-0x4],0x0
64009ccb:	je     0x64009ce1
64009ccd:	push   0x1
64009ccf:	mov    eax,DWORD PTR [ebp-0x4]
64009cd2:	mov    edx,DWORD PTR [eax]
64009cd4:	mov    ecx,DWORD PTR [ebp-0x4]
64009cd7:	mov    eax,DWORD PTR [edx+0x4]
64009cda:	call   eax
64009cdc:	mov    DWORD PTR [ebp-0x10],eax
64009cdf:	jmp    0x64009ce8
64009ce1:	mov    DWORD PTR [ebp-0x10],0x0
64009ce8:	mov    esp,ebp
64009cea:	pop    ebp
64009ceb:	ret    
64009cec:	int3   
64009ced:	int3   
64009cee:	int3   
64009cef:	int3   
64009cf0:	push   ebp
64009cf1:	mov    ebp,esp
64009cf3:	sub    esp,0x8
64009cf6:	mov    DWORD PTR [ebp-0x8],ecx
64009cf9:	mov    eax,DWORD PTR [ebp-0x8]
64009cfc:	mov    ecx,DWORD PTR [eax]
64009cfe:	mov    DWORD PTR [ebp-0x4],ecx
64009d01:	mov    eax,DWORD PTR [ebp-0x4]
64009d04:	mov    esp,ebp
64009d06:	pop    ebp
64009d07:	ret    
64009d08:	int3   
64009d09:	int3   
64009d0a:	int3   
64009d0b:	int3   
64009d0c:	int3   
64009d0d:	int3   
64009d0e:	int3   
64009d0f:	int3   
64009d10:	push   ebp
64009d11:	mov    ebp,esp
64009d13:	push   ecx
64009d14:	mov    DWORD PTR [ebp-0x4],ecx
64009d17:	mov    eax,DWORD PTR [ebp-0x4]
64009d1a:	mov    eax,DWORD PTR [eax]
64009d1c:	mov    esp,ebp
64009d1e:	pop    ebp
64009d1f:	ret    
64009d20:	push   ebp
64009d21:	mov    ebp,esp
64009d23:	sub    esp,0x10
64009d26:	mov    DWORD PTR [ebp-0xc],ecx
64009d29:	mov    eax,DWORD PTR [ebp-0xc]
64009d2c:	mov    ecx,DWORD PTR [ebp+0x8]
64009d2f:	cmp    ecx,DWORD PTR [eax]
64009d31:	je     0x64009d62
64009d33:	mov    edx,DWORD PTR [ebp-0xc]
64009d36:	mov    eax,DWORD PTR [edx]
64009d38:	mov    DWORD PTR [ebp-0x8],eax
64009d3b:	mov    ecx,DWORD PTR [ebp-0x8]
64009d3e:	mov    DWORD PTR [ebp-0x4],ecx
64009d41:	cmp    DWORD PTR [ebp-0x4],0x0
64009d45:	je     0x64009d5b
64009d47:	push   0x1
64009d49:	mov    edx,DWORD PTR [ebp-0x4]
64009d4c:	mov    eax,DWORD PTR [edx]
64009d4e:	mov    ecx,DWORD PTR [ebp-0x4]
64009d51:	mov    edx,DWORD PTR [eax+0x4]
64009d54:	call   edx
64009d56:	mov    DWORD PTR [ebp-0x10],eax
64009d59:	jmp    0x64009d62
64009d5b:	mov    DWORD PTR [ebp-0x10],0x0
64009d62:	mov    eax,DWORD PTR [ebp-0xc]
64009d65:	mov    ecx,DWORD PTR [ebp+0x8]
64009d68:	mov    DWORD PTR [eax],ecx
64009d6a:	mov    esp,ebp
64009d6c:	pop    ebp
64009d6d:	ret    0x4
64009d70:	push   ebp
64009d71:	mov    ebp,esp
64009d73:	sub    esp,0x8
64009d76:	mov    DWORD PTR [ebp-0x8],ecx
64009d79:	mov    eax,DWORD PTR [ebp-0x8]
64009d7c:	xor    ecx,ecx
64009d7e:	cmp    DWORD PTR [eax+0x10],0x0
64009d82:	sete   cl
64009d85:	movzx  edx,cl
64009d88:	test   edx,edx
64009d8a:	jne    0x64009de4
64009d8c:	mov    eax,DWORD PTR [ebp-0x8]
64009d8f:	mov    ecx,DWORD PTR [eax+0xc]
64009d92:	shr    ecx,0x2
64009d95:	mov    DWORD PTR [ebp-0x4],ecx
64009d98:	mov    edx,DWORD PTR [ebp-0x8]
64009d9b:	mov    eax,DWORD PTR [edx+0xc]
64009d9e:	add    eax,0x1
64009da1:	mov    ecx,DWORD PTR [ebp-0x8]
64009da4:	mov    DWORD PTR [ecx+0xc],eax
64009da7:	mov    edx,DWORD PTR [ebp-0x8]
64009daa:	mov    eax,DWORD PTR [edx+0x8]
64009dad:	shl    eax,0x2
64009db0:	mov    ecx,DWORD PTR [ebp-0x8]
64009db3:	cmp    eax,DWORD PTR [ecx+0xc]
64009db6:	ja     0x64009dc2
64009db8:	mov    edx,DWORD PTR [ebp-0x8]
64009dbb:	mov    DWORD PTR [edx+0xc],0x0
64009dc2:	mov    eax,DWORD PTR [ebp-0x8]
64009dc5:	mov    ecx,DWORD PTR [eax+0x10]
64009dc8:	sub    ecx,0x1
64009dcb:	mov    edx,DWORD PTR [ebp-0x8]
64009dce:	mov    DWORD PTR [edx+0x10],ecx
64009dd1:	mov    eax,DWORD PTR [ebp-0x8]
64009dd4:	cmp    DWORD PTR [eax+0x10],0x0
64009dd8:	jne    0x64009de4
64009dda:	mov    ecx,DWORD PTR [ebp-0x8]
64009ddd:	mov    DWORD PTR [ecx+0xc],0x0
64009de4:	mov    esp,ebp
64009de6:	pop    ebp
64009de7:	ret    
64009de8:	int3   
64009de9:	int3   
64009dea:	int3   
64009deb:	int3   
64009dec:	int3   
64009ded:	int3   
64009dee:	int3   
64009def:	int3   
64009df0:	push   ebp
64009df1:	mov    ebp,esp
64009df3:	sub    esp,0xe8
64009df9:	push   esi
64009dfa:	mov    DWORD PTR [ebp-0xe4],ecx
64009e00:	mov    eax,DWORD PTR [ebp-0xe4]
64009e06:	mov    eax,DWORD PTR [eax+0xc]
64009e09:	mov    ecx,DWORD PTR [ebp-0xe4]
64009e0f:	add    eax,DWORD PTR [ecx+0x10]
64009e12:	xor    edx,edx
64009e14:	mov    ecx,0x4
64009e19:	div    ecx
64009e1b:	test   edx,edx
64009e1d:	jne    0x64009e46
64009e1f:	mov    edx,DWORD PTR [ebp-0xe4]
64009e25:	mov    eax,DWORD PTR [edx+0x10]
64009e28:	add    eax,0x4
64009e2b:	shr    eax,0x2
64009e2e:	mov    ecx,DWORD PTR [ebp-0xe4]
64009e34:	cmp    DWORD PTR [ecx+0x8],eax
64009e37:	ja     0x64009e46
64009e39:	push   0x1
64009e3b:	mov    ecx,DWORD PTR [ebp-0xe4]
64009e41:	call   0x6400a0f0
64009e46:	mov    edx,DWORD PTR [ebp-0xe4]
64009e4c:	mov    eax,DWORD PTR [edx+0xc]
64009e4f:	mov    ecx,DWORD PTR [ebp-0xe4]
64009e55:	add    eax,DWORD PTR [ecx+0x10]
64009e58:	mov    DWORD PTR [ebp-0x4],eax
64009e5b:	mov    edx,DWORD PTR [ebp-0x4]
64009e5e:	shr    edx,0x2
64009e61:	mov    DWORD PTR [ebp-0x8],edx
64009e64:	mov    eax,DWORD PTR [ebp-0xe4]
64009e6a:	mov    ecx,DWORD PTR [eax+0x8]
64009e6d:	cmp    ecx,DWORD PTR [ebp-0x8]
64009e70:	ja     0x64009e81
64009e72:	mov    edx,DWORD PTR [ebp-0xe4]
64009e78:	mov    eax,DWORD PTR [ebp-0x8]
64009e7b:	sub    eax,DWORD PTR [edx+0x8]
64009e7e:	mov    DWORD PTR [ebp-0x8],eax
64009e81:	mov    ecx,DWORD PTR [ebp-0xe4]
64009e87:	mov    edx,DWORD PTR [ecx+0x4]
64009e8a:	mov    eax,DWORD PTR [ebp-0x8]
64009e8d:	cmp    DWORD PTR [edx+eax*4],0x0
64009e91:	jne    0x64009eb2
64009e93:	push   0x4
64009e95:	mov    ecx,DWORD PTR [ebp-0xe4]
64009e9b:	add    ecx,0x1
64009e9e:	call   0x6400a4a0
64009ea3:	mov    ecx,DWORD PTR [ebp-0xe4]
64009ea9:	mov    edx,DWORD PTR [ecx+0x4]
64009eac:	mov    ecx,DWORD PTR [ebp-0x8]
64009eaf:	mov    DWORD PTR [edx+ecx*4],eax
64009eb2:	mov    edx,DWORD PTR [ebp-0xe4]
64009eb8:	mov    ecx,DWORD PTR [edx+0x4]
64009ebb:	mov    eax,DWORD PTR [ebp-0x4]
64009ebe:	xor    edx,edx
64009ec0:	mov    esi,0x4
64009ec5:	div    esi
64009ec7:	mov    eax,DWORD PTR [ebp-0x8]
64009eca:	mov    ecx,DWORD PTR [ecx+eax*4]
64009ecd:	lea    edx,[ecx+edx*4]
64009ed0:	mov    DWORD PTR [ebp-0xe0],edx
64009ed6:	mov    eax,DWORD PTR [ebp-0xe0]
64009edc:	mov    DWORD PTR [ebp-0xd8],eax
64009ee2:	mov    ecx,DWORD PTR [ebp-0xd8]
64009ee8:	push   ecx
64009ee9:	push   0x4
64009eeb:	call   0x64001230
64009ef0:	add    esp,0x8
64009ef3:	mov    DWORD PTR [ebp-0xdc],eax
64009ef9:	cmp    DWORD PTR [ebp-0xdc],0x0
64009f00:	je     0x64009f1d
64009f02:	mov    edx,DWORD PTR [ebp-0xdc]
64009f08:	mov    eax,DWORD PTR [ebp+0x8]
64009f0b:	mov    ecx,DWORD PTR [eax]
64009f0d:	mov    DWORD PTR [edx],ecx
64009f0f:	mov    edx,DWORD PTR [ebp-0xdc]
64009f15:	mov    DWORD PTR [ebp-0xe8],edx
64009f1b:	jmp    0x64009f27
64009f1d:	mov    DWORD PTR [ebp-0xe8],0x0
64009f27:	mov    eax,DWORD PTR [ebp-0xe4]
64009f2d:	mov    ecx,DWORD PTR [eax+0x10]
64009f30:	add    ecx,0x1
64009f33:	mov    edx,DWORD PTR [ebp-0xe4]
64009f39:	mov    DWORD PTR [edx+0x10],ecx
64009f3c:	pop    esi
64009f3d:	mov    esp,ebp
64009f3f:	pop    ebp
64009f40:	ret    0x4
64009f43:	int3   
64009f44:	int3   
64009f45:	int3   
64009f46:	int3   
64009f47:	int3   
64009f48:	int3   
64009f49:	int3   
64009f4a:	int3   
64009f4b:	int3   
64009f4c:	int3   
64009f4d:	int3   
64009f4e:	int3   
64009f4f:	int3   
64009f50:	push   ebp
64009f51:	mov    ebp,esp
64009f53:	sub    esp,0x1c
64009f56:	mov    DWORD PTR [ebp-0x1c],ecx
64009f59:	mov    eax,DWORD PTR [ebp-0x1c]
64009f5c:	xor    ecx,ecx
64009f5e:	cmp    DWORD PTR [eax+0x10],0x0
64009f62:	sete   cl
64009f65:	movzx  edx,cl
64009f68:	test   edx,edx
64009f6a:	jne    0x64009f76
64009f6c:	mov    ecx,DWORD PTR [ebp-0x1c]
64009f6f:	call   0x6400a070
64009f74:	jmp    0x64009f59
64009f76:	mov    eax,DWORD PTR [ebp-0x1c]
64009f79:	mov    ecx,DWORD PTR [eax+0x8]
64009f7c:	mov    DWORD PTR [ebp-0x4],ecx
64009f7f:	cmp    DWORD PTR [ebp-0x4],0x0
64009f83:	jbe    0x64009fba
64009f85:	mov    edx,DWORD PTR [ebp-0x4]
64009f88:	sub    edx,0x1
64009f8b:	mov    DWORD PTR [ebp-0x4],edx
64009f8e:	mov    eax,DWORD PTR [ebp-0x1c]
64009f91:	mov    ecx,DWORD PTR [eax+0x4]
64009f94:	mov    edx,DWORD PTR [ebp-0x4]
64009f97:	cmp    DWORD PTR [ecx+edx*4],0x0
64009f9b:	je     0x64009fb8
64009f9d:	mov    eax,DWORD PTR [ebp-0x1c]
64009fa0:	mov    ecx,DWORD PTR [eax+0x4]
64009fa3:	mov    edx,DWORD PTR [ebp-0x4]
64009fa6:	mov    eax,DWORD PTR [ecx+edx*4]
64009fa9:	mov    DWORD PTR [ebp-0x10],eax
64009fac:	mov    ecx,DWORD PTR [ebp-0x10]
64009faf:	push   ecx
64009fb0:	call   0x64013656
64009fb5:	add    esp,0x4
64009fb8:	jmp    0x64009f7f
64009fba:	mov    edx,DWORD PTR [ebp-0x1c]
64009fbd:	cmp    DWORD PTR [edx+0x4],0x0
64009fc1:	je     0x64009fe1
64009fc3:	mov    eax,DWORD PTR [ebp-0x1c]
64009fc6:	mov    ecx,DWORD PTR [eax+0x8]
64009fc9:	mov    DWORD PTR [ebp-0x18],ecx
64009fcc:	mov    edx,DWORD PTR [ebp-0x1c]
64009fcf:	mov    eax,DWORD PTR [edx+0x4]
64009fd2:	mov    DWORD PTR [ebp-0x14],eax
64009fd5:	mov    ecx,DWORD PTR [ebp-0x14]
64009fd8:	push   ecx
64009fd9:	call   0x64013656
64009fde:	add    esp,0x4
64009fe1:	mov    edx,DWORD PTR [ebp-0x1c]
64009fe4:	mov    DWORD PTR [edx+0x8],0x0
64009feb:	mov    eax,DWORD PTR [ebp-0x1c]
64009fee:	mov    DWORD PTR [eax+0x4],0x0
64009ff5:	mov    esp,ebp
64009ff7:	pop    ebp
64009ff8:	ret    
64009ff9:	int3   
64009ffa:	int3   
64009ffb:	int3   
64009ffc:	int3   
64009ffd:	int3   
64009ffe:	int3   
64009fff:	int3   
6400a000:	push   ebp
6400a001:	mov    ebp,esp
6400a003:	sub    esp,0x8
6400a006:	mov    DWORD PTR [ebp-0x8],ecx
6400a009:	mov    eax,DWORD PTR [ebp-0x8]
6400a00c:	mov    ecx,DWORD PTR [eax+0xc]
6400a00f:	mov    DWORD PTR [ebp-0x4],ecx
6400a012:	mov    ecx,DWORD PTR [ebp+0x8]
6400a015:	call   0x64001340
6400a01a:	mov    edx,0x1
6400a01f:	test   edx,edx
6400a021:	je     0x6400a04a
6400a023:	cmp    DWORD PTR [ebp-0x8],0x0
6400a027:	je     0x6400a045
6400a029:	mov    eax,DWORD PTR [ebp-0x8]
6400a02c:	mov    ecx,DWORD PTR [eax+0xc]
6400a02f:	cmp    ecx,DWORD PTR [ebp-0x4]
6400a032:	ja     0x6400a045
6400a034:	mov    edx,DWORD PTR [ebp-0x8]
6400a037:	mov    eax,DWORD PTR [edx+0xc]
6400a03a:	mov    ecx,DWORD PTR [ebp-0x8]
6400a03d:	add    eax,DWORD PTR [ecx+0x10]
6400a040:	cmp    DWORD PTR [ebp-0x4],eax
6400a043:	jbe    0x6400a04a
6400a045:	call   0x64013e86
6400a04a:	mov    edx,DWORD PTR [ebp+0x8]
6400a04d:	mov    eax,DWORD PTR [ebp-0x8]
6400a050:	mov    DWORD PTR [edx+0x4],eax
6400a053:	mov    ecx,DWORD PTR [ebp+0x8]
6400a056:	mov    edx,DWORD PTR [ebp-0x4]
6400a059:	mov    DWORD PTR [ecx+0x8],edx
6400a05c:	mov    eax,DWORD PTR [ebp+0x8]
6400a05f:	mov    esp,ebp
6400a061:	pop    ebp
6400a062:	ret    0x4
6400a065:	int3   
6400a066:	int3   
6400a067:	int3   
6400a068:	int3   
6400a069:	int3   
6400a06a:	int3   
6400a06b:	int3   
6400a06c:	int3   
6400a06d:	int3   
6400a06e:	int3   
6400a06f:	int3   
6400a070:	push   ebp
6400a071:	mov    ebp,esp
6400a073:	sub    esp,0xc
6400a076:	mov    DWORD PTR [ebp-0xc],ecx
6400a079:	mov    eax,DWORD PTR [ebp-0xc]
6400a07c:	xor    ecx,ecx
6400a07e:	cmp    DWORD PTR [eax+0x10],0x0
6400a082:	sete   cl
6400a085:	movzx  edx,cl
6400a088:	test   edx,edx
6400a08a:	jne    0x6400a0e1
6400a08c:	mov    eax,DWORD PTR [ebp-0xc]
6400a08f:	mov    ecx,DWORD PTR [eax+0x10]
6400a092:	mov    edx,DWORD PTR [ebp-0xc]
6400a095:	mov    eax,DWORD PTR [edx+0xc]
6400a098:	lea    ecx,[ecx+eax*1-0x1]
6400a09c:	mov    DWORD PTR [ebp-0x4],ecx
6400a09f:	mov    edx,DWORD PTR [ebp-0x4]
6400a0a2:	shr    edx,0x2
6400a0a5:	mov    DWORD PTR [ebp-0x8],edx
6400a0a8:	mov    eax,DWORD PTR [ebp-0xc]
6400a0ab:	mov    ecx,DWORD PTR [eax+0x8]
6400a0ae:	cmp    ecx,DWORD PTR [ebp-0x8]
6400a0b1:	ja     0x6400a0bf
6400a0b3:	mov    edx,DWORD PTR [ebp-0xc]
6400a0b6:	mov    eax,DWORD PTR [ebp-0x8]
6400a0b9:	sub    eax,DWORD PTR [edx+0x8]
6400a0bc:	mov    DWORD PTR [ebp-0x8],eax
6400a0bf:	mov    ecx,DWORD PTR [ebp-0xc]
6400a0c2:	mov    edx,DWORD PTR [ecx+0x10]
6400a0c5:	sub    edx,0x1
6400a0c8:	mov    eax,DWORD PTR [ebp-0xc]
6400a0cb:	mov    DWORD PTR [eax+0x10],edx
6400a0ce:	mov    ecx,DWORD PTR [ebp-0xc]
6400a0d1:	cmp    DWORD PTR [ecx+0x10],0x0
6400a0d5:	jne    0x6400a0e1
6400a0d7:	mov    edx,DWORD PTR [ebp-0xc]
6400a0da:	mov    DWORD PTR [edx+0xc],0x0
6400a0e1:	mov    esp,ebp
6400a0e3:	pop    ebp
6400a0e4:	ret    
6400a0e5:	int3   
6400a0e6:	int3   
6400a0e7:	int3   
6400a0e8:	int3   
6400a0e9:	int3   
6400a0ea:	int3   
6400a0eb:	int3   
6400a0ec:	int3   
6400a0ed:	int3   
6400a0ee:	int3   
6400a0ef:	int3   
6400a0f0:	push   ebp
6400a0f1:	mov    ebp,esp
6400a0f3:	sub    esp,0x168
6400a0f9:	mov    DWORD PTR [ebp-0x160],ecx
6400a0ff:	mov    DWORD PTR [ebp-0x20],0x3fffffff
6400a106:	cmp    DWORD PTR [ebp-0x20],0x0
6400a10a:	jbe    0x6400a117
6400a10c:	mov    eax,DWORD PTR [ebp-0x20]
6400a10f:	mov    DWORD PTR [ebp-0x164],eax
6400a115:	jmp    0x6400a121
6400a117:	mov    DWORD PTR [ebp-0x164],0x1
6400a121:	mov    ecx,DWORD PTR [ebp-0x164]
6400a127:	shr    ecx,0x2
6400a12a:	mov    edx,DWORD PTR [ebp-0x160]
6400a130:	sub    ecx,DWORD PTR [edx+0x8]
6400a133:	cmp    ecx,DWORD PTR [ebp+0x8]
6400a136:	jae    0x6400a13d
6400a138:	call   0x6400a4c0
6400a13d:	mov    eax,DWORD PTR [ebp-0x160]
6400a143:	mov    ecx,DWORD PTR [eax+0x8]
6400a146:	shr    ecx,1
6400a148:	mov    DWORD PTR [ebp-0x8],ecx
6400a14b:	cmp    DWORD PTR [ebp-0x8],0x8
6400a14f:	jae    0x6400a158
6400a151:	mov    DWORD PTR [ebp-0x8],0x8
6400a158:	mov    edx,DWORD PTR [ebp+0x8]
6400a15b:	cmp    edx,DWORD PTR [ebp-0x8]
6400a15e:	jae    0x6400a19f
6400a160:	mov    DWORD PTR [ebp-0x6c],0x3fffffff
6400a167:	cmp    DWORD PTR [ebp-0x6c],0x0
6400a16b:	jbe    0x6400a178
6400a16d:	mov    eax,DWORD PTR [ebp-0x6c]
6400a170:	mov    DWORD PTR [ebp-0x168],eax
6400a176:	jmp    0x6400a182
6400a178:	mov    DWORD PTR [ebp-0x168],0x1
6400a182:	mov    ecx,DWORD PTR [ebp-0x168]
6400a188:	shr    ecx,0x2
6400a18b:	sub    ecx,DWORD PTR [ebp-0x8]
6400a18e:	mov    edx,DWORD PTR [ebp-0x160]
6400a194:	cmp    DWORD PTR [edx+0x8],ecx
6400a197:	ja     0x6400a19f
6400a199:	mov    eax,DWORD PTR [ebp-0x8]
6400a19c:	mov    DWORD PTR [ebp+0x8],eax
6400a19f:	mov    ecx,DWORD PTR [ebp-0x160]
6400a1a5:	mov    edx,DWORD PTR [ecx+0xc]
6400a1a8:	shr    edx,0x2
6400a1ab:	mov    DWORD PTR [ebp-0x4],edx
6400a1ae:	mov    eax,DWORD PTR [ebp-0x160]
6400a1b4:	mov    ecx,DWORD PTR [eax+0x8]
6400a1b7:	add    ecx,DWORD PTR [ebp+0x8]
6400a1ba:	mov    DWORD PTR [ebp-0x7c],ecx
6400a1bd:	push   0x0
6400a1bf:	mov    edx,DWORD PTR [ebp-0x7c]
6400a1c2:	push   edx
6400a1c3:	call   0x6400a670
6400a1c8:	add    esp,0x8
6400a1cb:	mov    DWORD PTR [ebp-0x10],eax
6400a1ce:	mov    eax,DWORD PTR [ebp-0x4]
6400a1d1:	mov    ecx,DWORD PTR [ebp-0x10]
6400a1d4:	lea    edx,[ecx+eax*4]
6400a1d7:	mov    DWORD PTR [ebp-0xc],edx
6400a1da:	mov    eax,DWORD PTR [ebp-0x160]
6400a1e0:	push   eax
6400a1e1:	mov    ecx,DWORD PTR [ebp-0xc]
6400a1e4:	push   ecx
6400a1e5:	mov    edx,DWORD PTR [ebp-0x160]
6400a1eb:	mov    eax,DWORD PTR [edx+0x8]
6400a1ee:	mov    ecx,DWORD PTR [ebp-0x160]
6400a1f4:	mov    edx,DWORD PTR [ecx+0x4]
6400a1f7:	lea    eax,[edx+eax*4]
6400a1fa:	push   eax
6400a1fb:	mov    ecx,DWORD PTR [ebp-0x160]
6400a201:	mov    edx,DWORD PTR [ecx+0x4]
6400a204:	mov    eax,DWORD PTR [ebp-0x4]
6400a207:	lea    ecx,[edx+eax*4]
6400a20a:	push   ecx
6400a20b:	call   0x6400a600
6400a210:	add    esp,0x10
6400a213:	mov    DWORD PTR [ebp-0xc],eax
6400a216:	mov    edx,DWORD PTR [ebp-0x4]
6400a219:	cmp    edx,DWORD PTR [ebp+0x8]
6400a21c:	ja     0x6400a344
6400a222:	mov    eax,DWORD PTR [ebp-0x160]
6400a228:	push   eax
6400a229:	mov    ecx,DWORD PTR [ebp-0xc]
6400a22c:	push   ecx
6400a22d:	mov    edx,DWORD PTR [ebp-0x160]
6400a233:	mov    eax,DWORD PTR [edx+0x4]
6400a236:	mov    ecx,DWORD PTR [ebp-0x4]
6400a239:	lea    edx,[eax+ecx*4]
6400a23c:	push   edx
6400a23d:	mov    eax,DWORD PTR [ebp-0x160]
6400a243:	mov    ecx,DWORD PTR [eax+0x4]
6400a246:	push   ecx
6400a247:	call   0x6400a600
6400a24c:	add    esp,0x10
6400a24f:	mov    DWORD PTR [ebp-0xc],eax
6400a252:	mov    DWORD PTR [ebp-0x14],0x0
6400a259:	mov    edx,DWORD PTR [ebp-0xc]
6400a25c:	mov    DWORD PTR [ebp-0xd0],edx
6400a262:	xor    eax,eax
6400a264:	mov    BYTE PTR [ebp-0xba],al
6400a26a:	mov    cl,BYTE PTR [ebp-0xbc]
6400a270:	mov    BYTE PTR [ebp-0xbb],cl
6400a276:	mov    dl,BYTE PTR [ebp-0xba]
6400a27c:	mov    BYTE PTR [ebp-0xc9],dl
6400a282:	mov    eax,DWORD PTR [ebp-0xd0]
6400a288:	mov    DWORD PTR [ebp-0xc8],eax
6400a28e:	mov    ecx,DWORD PTR [ebp-0xc8]
6400a294:	mov    DWORD PTR [ebp-0xc4],ecx
6400a29a:	xor    edx,edx
6400a29c:	mov    BYTE PTR [ebp-0xbd],dl
6400a2a2:	mov    al,BYTE PTR [ebp-0xbd]
6400a2a8:	push   eax
6400a2a9:	mov    cl,BYTE PTR [ebp-0xbe]
6400a2af:	push   ecx
6400a2b0:	lea    edx,[ebp-0x14]
6400a2b3:	push   edx
6400a2b4:	mov    eax,DWORD PTR [ebp+0x8]
6400a2b7:	sub    eax,DWORD PTR [ebp-0x4]
6400a2ba:	push   eax
6400a2bb:	mov    ecx,DWORD PTR [ebp-0xc4]
6400a2c1:	push   ecx
6400a2c2:	call   0x6400a790
6400a2c7:	add    esp,0x14
6400a2ca:	mov    DWORD PTR [ebp-0x18],0x0
6400a2d1:	mov    edx,DWORD PTR [ebp-0x10]
6400a2d4:	mov    DWORD PTR [ebp-0xe8],edx
6400a2da:	xor    eax,eax
6400a2dc:	mov    BYTE PTR [ebp-0xd1],al
6400a2e2:	mov    cl,BYTE PTR [ebp-0xd3]
6400a2e8:	mov    BYTE PTR [ebp-0xd2],cl
6400a2ee:	mov    dl,BYTE PTR [ebp-0xd1]
6400a2f4:	mov    BYTE PTR [ebp-0xe1],dl
6400a2fa:	mov    eax,DWORD PTR [ebp-0xe8]
6400a300:	mov    DWORD PTR [ebp-0xe0],eax
6400a306:	mov    ecx,DWORD PTR [ebp-0xe0]
6400a30c:	mov    DWORD PTR [ebp-0xdc],ecx
6400a312:	xor    edx,edx
6400a314:	mov    BYTE PTR [ebp-0xd4],dl
6400a31a:	mov    al,BYTE PTR [ebp-0xd4]
6400a320:	push   eax
6400a321:	mov    cl,BYTE PTR [ebp-0xd5]
6400a327:	push   ecx
6400a328:	lea    edx,[ebp-0x18]
6400a32b:	push   edx
6400a32c:	mov    eax,DWORD PTR [ebp-0x4]
6400a32f:	push   eax
6400a330:	mov    ecx,DWORD PTR [ebp-0xdc]
6400a336:	push   ecx
6400a337:	call   0x6400a790
6400a33c:	add    esp,0x14
6400a33f:	jmp    0x6400a3fa
6400a344:	mov    edx,DWORD PTR [ebp-0x160]
6400a34a:	push   edx
6400a34b:	mov    eax,DWORD PTR [ebp-0xc]
6400a34e:	push   eax
6400a34f:	mov    ecx,DWORD PTR [ebp-0x160]
6400a355:	mov    edx,DWORD PTR [ecx+0x4]
6400a358:	mov    eax,DWORD PTR [ebp+0x8]
6400a35b:	lea    ecx,[edx+eax*4]
6400a35e:	push   ecx
6400a35f:	mov    edx,DWORD PTR [ebp-0x160]
6400a365:	mov    eax,DWORD PTR [edx+0x4]
6400a368:	push   eax
6400a369:	call   0x6400a600
6400a36e:	add    esp,0x10
6400a371:	mov    ecx,DWORD PTR [ebp-0x160]
6400a377:	push   ecx
6400a378:	mov    edx,DWORD PTR [ebp-0x10]
6400a37b:	push   edx
6400a37c:	mov    eax,DWORD PTR [ebp-0x160]
6400a382:	mov    ecx,DWORD PTR [eax+0x4]
6400a385:	mov    edx,DWORD PTR [ebp-0x4]
6400a388:	lea    eax,[ecx+edx*4]
6400a38b:	push   eax
6400a38c:	mov    ecx,DWORD PTR [ebp-0x160]
6400a392:	mov    edx,DWORD PTR [ecx+0x4]
6400a395:	mov    eax,DWORD PTR [ebp+0x8]
6400a398:	lea    ecx,[edx+eax*4]
6400a39b:	push   ecx
6400a39c:	call   0x6400a600
6400a3a1:	add    esp,0x10
6400a3a4:	mov    DWORD PTR [ebp-0xc],eax
6400a3a7:	mov    DWORD PTR [ebp-0x1c],0x0
6400a3ae:	mov    edx,DWORD PTR [ebp-0xc]
6400a3b1:	mov    DWORD PTR [ebp-0x148],edx
6400a3b7:	xor    eax,eax
6400a3b9:	mov    BYTE PTR [ebp-0x126],al
6400a3bf:	mov    cl,BYTE PTR [ebp-0x128]
6400a3c5:	mov    BYTE PTR [ebp-0x127],cl
6400a3cb:	mov    dl,BYTE PTR [ebp-0x126]
6400a3d1:	mov    BYTE PTR [ebp-0x141],dl
6400a3d7:	mov    eax,DWORD PTR [ebp-0x148]
6400a3dd:	mov    DWORD PTR [ebp-0x140],eax
6400a3e3:	lea    ecx,[ebp-0x1c]
6400a3e6:	push   ecx
6400a3e7:	mov    edx,DWORD PTR [ebp+0x8]
6400a3ea:	push   edx
6400a3eb:	mov    eax,DWORD PTR [ebp-0x140]
6400a3f1:	push   eax
6400a3f2:	call   0x6400a720
6400a3f7:	add    esp,0xc
6400a3fa:	mov    ecx,DWORD PTR [ebp-0x160]
6400a400:	mov    edx,DWORD PTR [ecx+0x8]
6400a403:	mov    eax,DWORD PTR [ebp-0x160]
6400a409:	mov    ecx,DWORD PTR [eax+0x4]
6400a40c:	lea    edx,[ecx+edx*4]
6400a40f:	mov    DWORD PTR [ebp-0x154],edx
6400a415:	mov    eax,DWORD PTR [ebp-0x160]
6400a41b:	mov    ecx,DWORD PTR [eax+0x4]
6400a41e:	mov    edx,DWORD PTR [ebp-0x4]
6400a421:	lea    eax,[ecx+edx*4]
6400a424:	mov    DWORD PTR [ebp-0x150],eax
6400a42a:	mov    cl,BYTE PTR [ebp-0x14a]
6400a430:	mov    BYTE PTR [ebp-0x149],cl
6400a436:	mov    edx,DWORD PTR [ebp-0x160]
6400a43c:	cmp    DWORD PTR [edx+0x4],0x0
6400a440:	je     0x6400a46f
6400a442:	mov    eax,DWORD PTR [ebp-0x160]
6400a448:	mov    ecx,DWORD PTR [eax+0x8]
6400a44b:	mov    DWORD PTR [ebp-0x15c],ecx
6400a451:	mov    edx,DWORD PTR [ebp-0x160]
6400a457:	mov    eax,DWORD PTR [edx+0x4]
6400a45a:	mov    DWORD PTR [ebp-0x158],eax
6400a460:	mov    ecx,DWORD PTR [ebp-0x158]
6400a466:	push   ecx
6400a467:	call   0x64013656
6400a46c:	add    esp,0x4
6400a46f:	mov    edx,DWORD PTR [ebp-0x160]
6400a475:	mov    eax,DWORD PTR [ebp-0x10]
6400a478:	mov    DWORD PTR [edx+0x4],eax
6400a47b:	mov    ecx,DWORD PTR [ebp-0x160]
6400a481:	mov    edx,DWORD PTR [ecx+0x8]
6400a484:	add    edx,DWORD PTR [ebp+0x8]
6400a487:	mov    eax,DWORD PTR [ebp-0x160]
6400a48d:	mov    DWORD PTR [eax+0x8],edx
6400a490:	mov    esp,ebp
6400a492:	pop    ebp
6400a493:	ret    0x4
6400a496:	int3   
6400a497:	int3   
6400a498:	int3   
6400a499:	int3   
6400a49a:	int3   
6400a49b:	int3   
6400a49c:	int3   
6400a49d:	int3   
6400a49e:	int3   
6400a49f:	int3   
6400a4a0:	push   ebp
6400a4a1:	mov    ebp,esp
6400a4a3:	sub    esp,0x10
6400a4a6:	mov    DWORD PTR [ebp-0x10],ecx
6400a4a9:	push   0x0
6400a4ab:	mov    eax,DWORD PTR [ebp+0x8]
6400a4ae:	push   eax
6400a4af:	call   0x6400a670
6400a4b4:	add    esp,0x8
6400a4b7:	mov    esp,ebp
6400a4b9:	pop    ebp
6400a4ba:	ret    0x4
6400a4bd:	int3   
6400a4be:	int3   
6400a4bf:	int3   
6400a4c0:	push   ebp
6400a4c1:	mov    ebp,esp
6400a4c3:	push   0xffffffff
6400a4c5:	push   0x64023488
6400a4ca:	mov    eax,fs:0x0
6400a4d0:	push   eax
6400a4d1:	sub    esp,0x6c
6400a4d4:	mov    eax,ds:0x640521ac
6400a4d9:	xor    eax,ebp
6400a4db:	push   eax
6400a4dc:	lea    eax,[ebp-0xc]
6400a4df:	mov    fs:0x0,eax
6400a4e5:	push   0x64043474
6400a4ea:	lea    ecx,[ebp-0x50]
6400a4ed:	call   0x64002920
6400a4f2:	mov    DWORD PTR [ebp-0x4],0x0
6400a4f9:	lea    eax,[ebp-0x50]
6400a4fc:	push   eax
6400a4fd:	lea    ecx,[ebp-0x34]
6400a500:	call   0x64001410
6400a505:	push   0x64044194
6400a50a:	lea    ecx,[ebp-0x34]
6400a50d:	push   ecx
6400a50e:	call   0x64013884
6400a513:	mov    DWORD PTR [ebp-0x4],0xffffffff
6400a51a:	lea    ecx,[ebp-0x50]
6400a51d:	call   0x64002960
6400a522:	mov    ecx,DWORD PTR [ebp-0xc]
6400a525:	mov    DWORD PTR fs:0x0,ecx
6400a52c:	pop    ecx
6400a52d:	mov    esp,ebp
6400a52f:	pop    ebp
6400a530:	ret    
6400a531:	int3   
6400a532:	int3   
6400a533:	int3   
6400a534:	int3   
6400a535:	int3   
6400a536:	int3   
6400a537:	int3   
6400a538:	int3   
6400a539:	int3   
6400a53a:	int3   
6400a53b:	int3   
6400a53c:	int3   
6400a53d:	int3   
6400a53e:	int3   
6400a53f:	int3   
6400a540:	push   ebp
6400a541:	mov    ebp,esp
6400a543:	sub    esp,0xc
6400a546:	mov    DWORD PTR [ebp-0xc],ecx
6400a549:	mov    eax,DWORD PTR [ebp-0xc]
6400a54c:	mov    ecx,DWORD PTR [eax+0x8]
6400a54f:	shr    ecx,0x2
6400a552:	mov    DWORD PTR [ebp-0x4],ecx
6400a555:	mov    edx,DWORD PTR [ebp-0xc]
6400a558:	mov    eax,DWORD PTR [edx+0x8]
6400a55b:	and    eax,0x3
6400a55e:	mov    DWORD PTR [ebp-0x8],eax
6400a561:	mov    ecx,DWORD PTR [ebp-0xc]
6400a564:	cmp    DWORD PTR [ecx+0x4],0x0
6400a568:	jne    0x6400a56f
6400a56a:	call   0x64013e86
6400a56f:	mov    edx,DWORD PTR [ebp-0xc]
6400a572:	mov    eax,DWORD PTR [edx+0x4]
6400a575:	mov    ecx,DWORD PTR [ebp-0xc]
6400a578:	mov    edx,DWORD PTR [ecx+0x4]
6400a57b:	mov    eax,DWORD PTR [eax+0xc]
6400a57e:	add    eax,DWORD PTR [edx+0x10]
6400a581:	mov    ecx,DWORD PTR [ebp-0xc]
6400a584:	cmp    DWORD PTR [ecx+0x8],eax
6400a587:	jb     0x6400a58e
6400a589:	call   0x64013e86
6400a58e:	mov    edx,DWORD PTR [ebp-0xc]
6400a591:	mov    eax,DWORD PTR [edx+0x4]
6400a594:	mov    ecx,DWORD PTR [eax+0x8]
6400a597:	cmp    ecx,DWORD PTR [ebp-0x4]
6400a59a:	ja     0x6400a5ab
6400a59c:	mov    edx,DWORD PTR [ebp-0xc]
6400a59f:	mov    eax,DWORD PTR [edx+0x4]
6400a5a2:	mov    ecx,DWORD PTR [ebp-0x4]
6400a5a5:	sub    ecx,DWORD PTR [eax+0x8]
6400a5a8:	mov    DWORD PTR [ebp-0x4],ecx
6400a5ab:	mov    edx,DWORD PTR [ebp-0xc]
6400a5ae:	mov    eax,DWORD PTR [edx+0x4]
6400a5b1:	mov    ecx,DWORD PTR [eax+0x4]
6400a5b4:	mov    edx,DWORD PTR [ebp-0x4]
6400a5b7:	mov    eax,DWORD PTR [ecx+edx*4]
6400a5ba:	mov    ecx,DWORD PTR [ebp-0x8]
6400a5bd:	lea    eax,[eax+ecx*4]
6400a5c0:	mov    esp,ebp
6400a5c2:	pop    ebp
6400a5c3:	ret    
6400a5c4:	int3   
6400a5c5:	int3   
6400a5c6:	int3   
6400a5c7:	int3   
6400a5c8:	int3   
6400a5c9:	int3   
6400a5ca:	int3   
6400a5cb:	int3   
6400a5cc:	int3   
6400a5cd:	int3   
6400a5ce:	int3   
6400a5cf:	int3   
6400a5d0:	push   ebp
6400a5d1:	mov    ebp,esp
6400a5d3:	sub    esp,0x18
6400a5d6:	lea    eax,[ebp+0x10]
6400a5d9:	mov    DWORD PTR [ebp-0x4],eax
6400a5dc:	mov    ecx,DWORD PTR [ebp-0x4]
6400a5df:	push   ecx
6400a5e0:	mov    edx,DWORD PTR [ebp+0xc]
6400a5e3:	push   edx
6400a5e4:	mov    ecx,DWORD PTR [ebp+0x8]
6400a5e7:	call   0x6400a6c0
6400a5ec:	mov    DWORD PTR [ebp-0x4],0x0
6400a5f3:	mov    esp,ebp
6400a5f5:	pop    ebp
6400a5f6:	ret    
6400a5f7:	int3   
6400a5f8:	int3   
6400a5f9:	int3   
6400a5fa:	int3   
6400a5fb:	int3   
6400a5fc:	int3   
6400a5fd:	int3   
6400a5fe:	int3   
6400a5ff:	int3   
6400a600:	push   ebp
6400a601:	mov    ebp,esp
6400a603:	sub    esp,0x20
6400a606:	xor    eax,eax
6400a608:	mov    BYTE PTR [ebp-0x1],al
6400a60b:	mov    cl,BYTE PTR [ebp-0x3]
6400a60e:	mov    BYTE PTR [ebp-0x2],cl
6400a611:	mov    edx,DWORD PTR [ebp+0xc]
6400a614:	mov    DWORD PTR [ebp-0x8],edx
6400a617:	mov    eax,DWORD PTR [ebp+0x8]
6400a61a:	mov    DWORD PTR [ebp-0x10],eax
6400a61d:	mov    cl,BYTE PTR [ebp-0x1]
6400a620:	mov    BYTE PTR [ebp-0x1d],cl
6400a623:	mov    edx,DWORD PTR [ebp+0x10]
6400a626:	mov    DWORD PTR [ebp-0x1c],edx
6400a629:	mov    eax,DWORD PTR [ebp-0x8]
6400a62c:	sub    eax,DWORD PTR [ebp-0x10]
6400a62f:	sar    eax,0x2
6400a632:	mov    DWORD PTR [ebp-0x14],eax
6400a635:	mov    ecx,DWORD PTR [ebp-0x14]
6400a638:	mov    edx,DWORD PTR [ebp-0x1c]
6400a63b:	lea    eax,[edx+ecx*4]
6400a63e:	mov    DWORD PTR [ebp-0x18],eax
6400a641:	je     0x6400a661
6400a643:	mov    ecx,DWORD PTR [ebp-0x14]
6400a646:	shl    ecx,0x2
6400a649:	push   ecx
6400a64a:	mov    edx,DWORD PTR [ebp-0x10]
6400a64d:	push   edx
6400a64e:	mov    eax,DWORD PTR [ebp-0x14]
6400a651:	shl    eax,0x2
6400a654:	push   eax
6400a655:	mov    ecx,DWORD PTR [ebp-0x1c]
6400a658:	push   ecx
6400a659:	call   0x64013829
6400a65e:	add    esp,0x10
6400a661:	mov    eax,DWORD PTR [ebp-0x18]
6400a664:	mov    esp,ebp
6400a666:	pop    ebp
6400a667:	ret    
6400a668:	int3   
6400a669:	int3   
6400a66a:	int3   
6400a66b:	int3   
6400a66c:	int3   
6400a66d:	int3   
6400a66e:	int3   
6400a66f:	int3   
6400a670:	push   ebp
6400a671:	mov    ebp,esp
6400a673:	sub    esp,0xc
6400a676:	cmp    DWORD PTR [ebp+0x8],0x0
6400a67a:	ja     0x6400a685
6400a67c:	mov    DWORD PTR [ebp+0x8],0x0
6400a683:	jmp    0x6400a6aa
6400a685:	or     eax,0xffffffff
6400a688:	xor    edx,edx
6400a68a:	div    DWORD PTR [ebp+0x8]
6400a68d:	cmp    eax,0x4
6400a690:	jae    0x6400a6aa
6400a692:	push   0x0
6400a694:	lea    ecx,[ebp-0xc]
6400a697:	call   0x64001250
6400a69c:	push   0x640441cc
6400a6a1:	lea    eax,[ebp-0xc]
6400a6a4:	push   eax
6400a6a5:	call   0x64013884
6400a6aa:	mov    ecx,DWORD PTR [ebp+0x8]
6400a6ad:	shl    ecx,0x2
6400a6b0:	push   ecx
6400a6b1:	call   0x640138e7
6400a6b6:	add    esp,0x4
6400a6b9:	mov    esp,ebp
6400a6bb:	pop    ebp
6400a6bc:	ret    
6400a6bd:	int3   
6400a6be:	int3   
6400a6bf:	int3   
6400a6c0:	push   ebp
6400a6c1:	mov    ebp,esp
6400a6c3:	sub    esp,0x18
6400a6c6:	mov    DWORD PTR [ebp-0x18],ecx
6400a6c9:	cmp    DWORD PTR [ebp+0x8],0x0
6400a6cd:	jne    0x6400a6d9
6400a6cf:	push   0x80070057
6400a6d4:	call   0x64001080
6400a6d9:	mov    eax,DWORD PTR [ebp+0xc]
6400a6dc:	mov    ecx,DWORD PTR [ebp+0x8]
6400a6df:	call   0x64007800
6400a6e4:	mov    DWORD PTR [ebp-0x8],eax
6400a6e7:	mov    eax,DWORD PTR [ebp-0x8]
6400a6ea:	push   eax
6400a6eb:	mov    ecx,DWORD PTR [ebp-0x18]
6400a6ee:	call   0x64002de0
6400a6f3:	mov    DWORD PTR [ebp-0x4],eax
6400a6f6:	mov    edx,DWORD PTR [ebp-0x8]
6400a6f9:	add    edx,0x1
6400a6fc:	mov    ecx,DWORD PTR [ebp-0x4]
6400a6ff:	push   ecx
6400a700:	mov    eax,DWORD PTR [ebp+0xc]
6400a703:	mov    ecx,DWORD PTR [ebp+0x8]
6400a706:	call   0x64007810
6400a70b:	add    esp,0x4
6400a70e:	mov    edx,DWORD PTR [ebp-0x8]
6400a711:	push   edx
6400a712:	mov    ecx,DWORD PTR [ebp-0x18]
6400a715:	call   0x64003700
6400a71a:	mov    esp,ebp
6400a71c:	pop    ebp
6400a71d:	ret    0x8
6400a720:	push   ebp
6400a721:	mov    ebp,esp
6400a723:	sub    esp,0x20
6400a726:	xor    eax,eax
6400a728:	mov    BYTE PTR [ebp-0x1],al
6400a72b:	mov    cl,BYTE PTR [ebp-0x1]
6400a72e:	mov    BYTE PTR [ebp-0x1e],cl
6400a731:	mov    dl,BYTE PTR [ebp-0x2]
6400a734:	mov    BYTE PTR [ebp-0x1d],dl
6400a737:	mov    eax,DWORD PTR [ebp+0x8]
6400a73a:	mov    DWORD PTR [ebp-0x1c],eax
6400a73d:	mov    ecx,DWORD PTR [ebp+0xc]
6400a740:	mov    edx,DWORD PTR [ebp-0x1c]
6400a743:	lea    eax,[edx+ecx*4]
6400a746:	mov    DWORD PTR [ebp-0x8],eax
6400a749:	xor    ecx,ecx
6400a74b:	mov    BYTE PTR [ebp-0x9],cl
6400a74e:	mov    dl,BYTE PTR [ebp-0x9]
6400a751:	mov    BYTE PTR [ebp-0x15],dl
6400a754:	mov    eax,DWORD PTR [ebp+0xc]
6400a757:	mov    DWORD PTR [ebp-0x14],eax
6400a75a:	mov    ecx,DWORD PTR [ebp-0x1c]
6400a75d:	mov    DWORD PTR [ebp-0x10],ecx
6400a760:	jmp    0x6400a774
6400a762:	mov    edx,DWORD PTR [ebp-0x14]
6400a765:	sub    edx,0x1
6400a768:	mov    DWORD PTR [ebp-0x14],edx
6400a76b:	mov    eax,DWORD PTR [ebp-0x10]
6400a76e:	add    eax,0x4
6400a771:	mov    DWORD PTR [ebp-0x10],eax
6400a774:	cmp    DWORD PTR [ebp-0x14],0x0
6400a778:	jbe    0x6400a786
6400a77a:	mov    ecx,DWORD PTR [ebp-0x10]
6400a77d:	mov    edx,DWORD PTR [ebp+0x10]
6400a780:	mov    eax,DWORD PTR [edx]
6400a782:	mov    DWORD PTR [ecx],eax
6400a784:	jmp    0x6400a762
6400a786:	mov    esp,ebp
6400a788:	pop    ebp
6400a789:	ret    
6400a78a:	int3   
6400a78b:	int3   
6400a78c:	int3   
6400a78d:	int3   
6400a78e:	int3   
6400a78f:	int3   
6400a790:	push   ebp
6400a791:	mov    ebp,esp
6400a793:	sub    esp,0x14
6400a796:	mov    eax,DWORD PTR [ebp+0xc]
6400a799:	mov    ecx,DWORD PTR [ebp+0x8]
6400a79c:	lea    edx,[ecx+eax*4]
6400a79f:	mov    DWORD PTR [ebp-0x4],edx
6400a7a2:	xor    eax,eax
6400a7a4:	mov    BYTE PTR [ebp-0x5],al
6400a7a7:	mov    cl,BYTE PTR [ebp-0x5]
6400a7aa:	mov    BYTE PTR [ebp-0x11],cl
6400a7ad:	mov    edx,DWORD PTR [ebp+0xc]
6400a7b0:	mov    DWORD PTR [ebp-0x10],edx
6400a7b3:	mov    eax,DWORD PTR [ebp+0x8]
6400a7b6:	mov    DWORD PTR [ebp-0xc],eax
6400a7b9:	jmp    0x6400a7cd
6400a7bb:	mov    ecx,DWORD PTR [ebp-0x10]
6400a7be:	sub    ecx,0x1
6400a7c1:	mov    DWORD PTR [ebp-0x10],ecx
6400a7c4:	mov    edx,DWORD PTR [ebp-0xc]
6400a7c7:	add    edx,0x4
6400a7ca:	mov    DWORD PTR [ebp-0xc],edx
6400a7cd:	cmp    DWORD PTR [ebp-0x10],0x0
6400a7d1:	jbe    0x6400a7df
6400a7d3:	mov    eax,DWORD PTR [ebp-0xc]
6400a7d6:	mov    ecx,DWORD PTR [ebp+0x10]
6400a7d9:	mov    edx,DWORD PTR [ecx]
6400a7db:	mov    DWORD PTR [eax],edx
6400a7dd:	jmp    0x6400a7bb
6400a7df:	mov    esp,ebp
6400a7e1:	pop    ebp
6400a7e2:	ret    
6400a7e3:	int3   
6400a7e4:	int3   
6400a7e5:	int3   
6400a7e6:	int3   
6400a7e7:	int3   
6400a7e8:	int3   
6400a7e9:	int3   
6400a7ea:	int3   
6400a7eb:	int3   
6400a7ec:	int3   
6400a7ed:	int3   
6400a7ee:	int3   
6400a7ef:	int3   
6400a7f0:	push   ebp
6400a7f1:	mov    ebp,esp
6400a7f3:	push   0xffffffff
6400a7f5:	push   0x64023b18
6400a7fa:	mov    eax,fs:0x0
6400a800:	push   eax
6400a801:	sub    esp,0x14
6400a804:	push   ebx
6400a805:	push   esi
6400a806:	push   edi
6400a807:	mov    eax,ds:0x640521ac
6400a80c:	xor    eax,ebp
6400a80e:	push   eax
6400a80f:	lea    eax,[ebp-0xc]
6400a812:	mov    fs:0x0,eax
6400a818:	mov    DWORD PTR [ebp-0x10],esp
6400a81b:	mov    DWORD PTR [ebp-0x4],0x0
6400a822:	mov    al,0x1
6400a824:	mov    BYTE PTR [ebp-0x20],al
6400a827:	mov    DWORD PTR [ebp-0x1c],0xffffffff
6400a82e:	mov    BYTE PTR [ebp-0x18],al
6400a831:	push   0x4
6400a833:	mov    BYTE PTR [ebp-0x4],al
6400a836:	lea    eax,[ebp-0x14]
6400a839:	push   eax
6400a83a:	push   0x4
6400a83c:	mov    ecx,eax
6400a83e:	push   ecx
6400a83f:	push   0x7
6400a841:	lea    ecx,[ebp-0x20]
6400a844:	mov    DWORD PTR [ebp-0x14],0x4
6400a84b:	call   0x640072e0
6400a850:	mov    edi,DWORD PTR [ebp-0x1c]
6400a853:	test   edi,edi
6400a855:	je     0x6400a86d
6400a857:	call   DWORD PTR ds:0x6402c06c
6400a85d:	push   edi
6400a85e:	mov    esi,eax
6400a860:	call   DWORD PTR ds:0x6402c078
6400a866:	push   esi
6400a867:	call   DWORD PTR ds:0x6402c074
6400a86d:	mov    ecx,DWORD PTR [ebp-0xc]
6400a870:	mov    DWORD PTR fs:0x0,ecx
6400a877:	pop    ecx
6400a878:	pop    edi
6400a879:	pop    esi
6400a87a:	pop    ebx
6400a87b:	mov    esp,ebp
6400a87d:	pop    ebp
6400a87e:	ret    
6400a87f:	mov    eax,0x6400a86d
6400a884:	ret    
6400a885:	int3   
6400a886:	int3   
6400a887:	int3   
6400a888:	int3   
6400a889:	int3   
6400a88a:	int3   
6400a88b:	int3   
6400a88c:	int3   
6400a88d:	int3   
6400a88e:	int3   
6400a88f:	int3   
6400a890:	push   0xffffffff
6400a892:	push   0x64022fb8
6400a897:	mov    eax,fs:0x0
6400a89d:	push   eax
6400a89e:	push   ebx
6400a89f:	push   esi
6400a8a0:	push   edi
6400a8a1:	mov    eax,ds:0x640521ac
6400a8a6:	xor    eax,esp
6400a8a8:	push   eax
6400a8a9:	lea    eax,[esp+0x10]
6400a8ad:	mov    fs:0x0,eax
6400a8b3:	mov    esi,ecx
6400a8b5:	mov    edi,DWORD PTR [esp+0x20]
6400a8b9:	mov    DWORD PTR [edi],0x0
6400a8bf:	mov    DWORD PTR [esp+0x18],0x0
6400a8c7:	mov    eax,DWORD PTR [esi+0x14]
6400a8ca:	mov    DWORD PTR [edi+0x4],eax
6400a8cd:	mov    eax,DWORD PTR [esi+0x14]
6400a8d0:	push   eax
6400a8d1:	call   0x64012faa
6400a8d6:	mov    ebx,eax
6400a8d8:	mov    eax,DWORD PTR [edi]
6400a8da:	add    esp,0x4
6400a8dd:	cmp    ebx,eax
6400a8df:	je     0x6400a8ea
6400a8e1:	push   eax
6400a8e2:	call   0x64013656
6400a8e7:	add    esp,0x4
6400a8ea:	mov    DWORD PTR [edi],ebx
6400a8ec:	cmp    DWORD PTR [esi+0x18],0x10
6400a8f0:	mov    eax,DWORD PTR [esi+0x14]
6400a8f3:	jb     0x6400a8fa
6400a8f5:	mov    esi,DWORD PTR [esi+0x4]
6400a8f8:	jmp    0x6400a8fd
6400a8fa:	add    esi,0x4
6400a8fd:	push   eax
6400a8fe:	push   esi
6400a8ff:	push   ebx
6400a900:	call   0x640151f0
6400a905:	add    esp,0xc
6400a908:	mov    eax,edi
6400a90a:	mov    ecx,DWORD PTR [esp+0x10]
6400a90e:	mov    DWORD PTR fs:0x0,ecx
6400a915:	pop    ecx
6400a916:	pop    edi
6400a917:	pop    esi
6400a918:	pop    ebx
6400a919:	add    esp,0xc
6400a91c:	ret    0x4
6400a91f:	int3   
6400a920:	sub    esp,0x14
6400a923:	mov    eax,DWORD PTR [eax]
6400a925:	mov    ecx,DWORD PTR [eax+0xa]
6400a928:	imul   ecx,ecx,0xd
6400a92b:	add    ecx,DWORD PTR [eax+0x6]
6400a92e:	push   ebx
6400a92f:	push   ebp
6400a930:	lea    ebp,[ecx+eax*1+0x12]
6400a934:	mov    eax,DWORD PTR [eax+0xe]
6400a937:	test   eax,eax
6400a939:	push   esi
6400a93a:	push   edi
6400a93b:	mov    DWORD PTR [esp+0x10],0x0
6400a943:	mov    DWORD PTR [esp+0x20],eax
6400a947:	je     0x6400a9c9
6400a94d:	mov    eax,DWORD PTR [esp+0x28]
6400a951:	mov    edx,DWORD PTR [eax+0x14]
6400a954:	mov    DWORD PTR [esp+0x14],edx
6400a958:	mov    edx,DWORD PTR [eax+0x18]
6400a95b:	mov    DWORD PTR [esp+0x1c],edx
6400a95f:	nop
6400a960:	lea    ebx,[ebp+0x6]
6400a963:	mov    eax,ebx
6400a965:	lea    edx,[eax+0x1]
6400a968:	mov    cl,BYTE PTR [eax]
6400a96a:	add    eax,0x1
6400a96d:	test   cl,cl
6400a96f:	jne    0x6400a968
6400a971:	mov    esi,DWORD PTR [esp+0x14]
6400a975:	sub    eax,edx
6400a977:	mov    edi,eax
6400a979:	cmp    esi,edi
6400a97b:	mov    eax,esi
6400a97d:	mov    ecx,esi
6400a97f:	jb     0x6400a983
6400a981:	mov    ecx,edi
6400a983:	cmp    DWORD PTR [esp+0x1c],0x10
6400a988:	mov    eax,DWORD PTR [esp+0x28]
6400a98c:	jb     0x6400a993
6400a98e:	mov    eax,DWORD PTR [eax+0x4]
6400a991:	jmp    0x6400a996
6400a993:	add    eax,0x4
6400a996:	push   ecx
6400a997:	push   ebx
6400a998:	push   eax
6400a999:	call   0x640012b0
6400a99e:	add    esp,0xc
6400a9a1:	test   eax,eax
6400a9a3:	jne    0x6400a9b2
6400a9a5:	cmp    esi,edi
6400a9a7:	jb     0x6400a9b2
6400a9a9:	cmp    esi,edi
6400a9ab:	setne  al
6400a9ae:	test   eax,eax
6400a9b0:	je     0x6400a9d6
6400a9b2:	movzx  ecx,WORD PTR [ebp+0x0]
6400a9b6:	mov    eax,DWORD PTR [esp+0x10]
6400a9ba:	add    eax,0x1
6400a9bd:	add    ebp,ecx
6400a9bf:	cmp    eax,DWORD PTR [esp+0x20]
6400a9c3:	mov    DWORD PTR [esp+0x10],eax
6400a9c7:	jne    0x6400a960
6400a9c9:	pop    edi
6400a9ca:	pop    esi
6400a9cb:	pop    ebp
6400a9cc:	or     eax,0xffffffff
6400a9cf:	pop    ebx
6400a9d0:	add    esp,0x14
6400a9d3:	ret    0x4
6400a9d6:	mov    eax,DWORD PTR [ebp+0x2]
6400a9d9:	pop    edi
6400a9da:	pop    esi
6400a9db:	pop    ebp
6400a9dc:	pop    ebx
6400a9dd:	add    esp,0x14
6400a9e0:	ret    0x4
6400a9e3:	int3   
6400a9e4:	int3   
6400a9e5:	int3   
6400a9e6:	int3   
6400a9e7:	int3   
6400a9e8:	int3   
6400a9e9:	int3   
6400a9ea:	int3   
6400a9eb:	int3   
6400a9ec:	int3   
6400a9ed:	int3   
6400a9ee:	int3   
6400a9ef:	int3   
6400a9f0:	mov    eax,DWORD PTR [eax]
6400a9f2:	add    eax,0x12
6400a9f5:	ret    
6400a9f6:	int3   
6400a9f7:	int3   
6400a9f8:	int3   
6400a9f9:	int3   
6400a9fa:	int3   
6400a9fb:	int3   
6400a9fc:	int3   
6400a9fd:	int3   
6400a9fe:	int3   
6400a9ff:	int3   
6400aa00:	mov    ecx,DWORD PTR [eax]
6400aa02:	mov    eax,DWORD PTR [ecx+0x6]
6400aa05:	ret    
6400aa06:	int3   
6400aa07:	int3   
6400aa08:	int3   
6400aa09:	int3   
6400aa0a:	int3   
6400aa0b:	int3   
6400aa0c:	int3   
6400aa0d:	int3   
6400aa0e:	int3   
6400aa0f:	int3   
6400aa10:	push   ebp
6400aa11:	push   esi
6400aa12:	mov    esi,DWORD PTR [eax]
6400aa14:	mov    ecx,DWORD PTR [esi+0x6]
6400aa17:	push   edi
6400aa18:	lea    edi,[esi+0x12]
6400aa1b:	xor    ebp,ebp
6400aa1d:	add    ecx,edi
6400aa1f:	cmp    DWORD PTR [esi+0xa],ebp
6400aa22:	je     0x6400aa56
6400aa24:	push   ebx
6400aa25:	cmp    BYTE PTR [ecx+0x4],0x0
6400aa29:	jne    0x6400aa39
6400aa2b:	mov    edx,DWORD PTR [ecx+0x5]
6400aa2e:	add    edx,DWORD PTR [esp+0x14]
6400aa32:	mov    eax,DWORD PTR [ecx]
6400aa34:	mov    DWORD PTR [edi+eax*1],edx
6400aa37:	jmp    0x6400aa4a
6400aa39:	mov    eax,DWORD PTR [ecx+0x5]
6400aa3c:	add    eax,DWORD PTR [esp+0x14]
6400aa40:	mov    ebx,DWORD PTR [ecx]
6400aa42:	cdq    
6400aa43:	mov    DWORD PTR [edi+ebx*1],eax
6400aa46:	mov    DWORD PTR [edi+ebx*1+0x4],edx
6400aa4a:	add    ebp,0x1
6400aa4d:	add    ecx,0xd
6400aa50:	cmp    ebp,DWORD PTR [esi+0xa]
6400aa53:	jne    0x6400aa25
6400aa55:	pop    ebx
6400aa56:	pop    edi
6400aa57:	pop    esi
6400aa58:	pop    ebp
6400aa59:	ret    0x4
6400aa5c:	int3   
6400aa5d:	int3   
6400aa5e:	int3   
6400aa5f:	int3   
6400aa60:	sub    esp,0x8
6400aa63:	push   edi
6400aa64:	mov    edi,DWORD PTR ds:0x6402c108
6400aa6a:	lea    eax,[esp+0x4]
6400aa6e:	push   eax
6400aa6f:	mov    eax,ds:0x640535a4
6400aa74:	lea    ecx,[eax+eax*2]
6400aa77:	push   0x40
6400aa79:	add    ecx,ecx
6400aa7b:	push   ecx
6400aa7c:	push   esi
6400aa7d:	mov    DWORD PTR [esp+0x14],0x0
6400aa85:	call   edi
6400aa87:	mov    edx,DWORD PTR [esp+0x14]
6400aa8b:	sub    edx,DWORD PTR [esp+0x1c]
6400aa8f:	mov    ecx,DWORD PTR [esp+0x10]
6400aa93:	lea    eax,[esi+0x1]
6400aa96:	sub    edx,eax
6400aa98:	lea    edx,[edx+ecx*1-0x4]
6400aa9c:	mov    ecx,DWORD PTR [esp+0x4]
6400aaa0:	mov    BYTE PTR [esi],0xe9
6400aaa3:	mov    DWORD PTR [eax],edx
6400aaa5:	lea    eax,[esp+0x8]
6400aaa9:	push   eax
6400aaaa:	push   ecx
6400aaab:	push   0x5
6400aaad:	push   esi
6400aaae:	mov    DWORD PTR [esp+0x18],0x0
6400aab6:	call   edi
6400aab8:	pop    edi
6400aab9:	add    esp,0x8
6400aabc:	ret    
6400aabd:	int3   
6400aabe:	int3   
6400aabf:	int3   
6400aac0:	mov    eax,0x193c
6400aac5:	call   0x64017f50
6400aaca:	push   ebx
6400aacb:	xor    eax,eax
6400aacd:	push   ebp
6400aace:	push   esi
6400aacf:	push   edi
6400aad0:	mov    DWORD PTR [esp+0x38],eax
6400aad4:	mov    DWORD PTR [esp+0x3c],eax
6400aad8:	mov    DWORD PTR [esp+0x40],eax
6400aadc:	mov    DWORD PTR [esp+0x30],eax
6400aae0:	mov    DWORD PTR [esp+0x34],eax
6400aae4:	mov    DWORD PTR [esp+0x44],eax
6400aae8:	mov    eax,DWORD PTR [esp+0x1950]
6400aaef:	lea    edx,[esp+0x20]
6400aaf3:	push   edx
6400aaf4:	mov    ebx,ecx
6400aaf6:	mov    ecx,DWORD PTR ds:0x640535a8
6400aafc:	mov    DWORD PTR [esp+0x3c],eax
6400ab00:	push   0x64
6400ab02:	lea    eax,[esp+0x50]
6400ab06:	mov    DWORD PTR [esp+0x48],ecx
6400ab0a:	xor    esi,esi
6400ab0c:	push   eax
6400ab0d:	lea    ecx,[esp+0x34]
6400ab11:	push   ecx
6400ab12:	mov    DWORD PTR [esp+0x30],esi
6400ab16:	mov    DWORD PTR [esp+0x38],esi
6400ab1a:	mov    DWORD PTR [esp+0x3c],esi
6400ab1e:	mov    DWORD PTR [esp+0x4c],0x1e
6400ab26:	call   0x6400b4d0
6400ab2b:	add    esp,0x10
6400ab2e:	cmp    eax,0x3
6400ab31:	jne    0x6400ab40
6400ab33:	xor    eax,eax
6400ab35:	pop    edi
6400ab36:	pop    esi
6400ab37:	pop    ebp
6400ab38:	pop    ebx
6400ab39:	add    esp,0x193c
6400ab3f:	ret    
6400ab40:	xor    edi,edi
6400ab42:	xor    ebp,ebp
6400ab44:	cmp    DWORD PTR [esp+0x20],esi
6400ab48:	mov    DWORD PTR [esp+0x14],edi
6400ab4c:	mov    DWORD PTR [esp+0x10],esi
6400ab50:	jbe    0x6400ac82
6400ab56:	lea    edx,[esp+0x50]
6400ab5a:	mov    DWORD PTR [esp+0x18],edx
6400ab5e:	jmp    0x6400ab64
6400ab60:	mov    edx,DWORD PTR [esp+0x18]
6400ab64:	cmp    edi,DWORD PTR [esp+0x1954]
6400ab6b:	jae    0x6400ac82
6400ab71:	mov    eax,DWORD PTR [esp+0x1950]
6400ab78:	add    edi,eax
6400ab7a:	mov    DWORD PTR [esp+0x1c],0xffffffff
6400ab82:	lea    eax,[edx+0xa]
6400ab85:	mov    cl,BYTE PTR [eax]
6400ab87:	test   cl,cl
6400ab89:	je     0x6400ab9f
6400ab8b:	cmp    cl,0x8
6400ab8e:	jne    0x6400ab94
6400ab90:	mov    DWORD PTR [esp+0x1c],esi
6400ab94:	add    esi,0x1
6400ab97:	add    eax,0x4
6400ab9a:	cmp    esi,0x4
6400ab9d:	jne    0x6400ab85
6400ab9f:	mov    DWORD PTR [esp+0x24],esi
6400aba3:	movzx  esi,BYTE PTR [edx]
6400aba6:	push   esi
6400aba7:	lea    ecx,[ebx+ebp*1]
6400abaa:	push   edi
6400abab:	push   ecx
6400abac:	call   0x640151f0
6400abb1:	add    esp,0xc
6400abb4:	cmp    DWORD PTR [esp+0x24],0x1
6400abb9:	jne    0x6400ac53
6400abbf:	cmp    DWORD PTR [esp+0x1c],0x0
6400abc4:	jne    0x6400ac53
6400abca:	mov    edx,DWORD PTR [esp+0x18]
6400abce:	movzx  ecx,WORD PTR [edx+0xc]
6400abd2:	movzx  eax,cx
6400abd5:	shr    eax,0x3
6400abd8:	cmp    cx,0x10
6400abdc:	jne    0x6400abfb
6400abde:	sub    edi,ebx
6400abe0:	sub    edi,ebp
6400abe2:	sub    edi,DWORD PTR [esp+0x1960]
6400abe9:	sub    esi,eax
6400abeb:	add    edi,DWORD PTR [esp+0x1958]
6400abf2:	add    esi,ebp
6400abf4:	add    esi,ebx
6400abf6:	add    WORD PTR [esi],di
6400abf9:	jmp    0x6400ac53
6400abfb:	cmp    cx,0x20
6400abff:	jne    0x6400ac1f
6400ac01:	sub    esi,eax
6400ac03:	mov    eax,DWORD PTR [esp+0x1958]
6400ac0a:	sub    eax,DWORD PTR [esp+0x1960]
6400ac11:	add    esi,ebp
6400ac13:	sub    eax,ebp
6400ac15:	sub    eax,ebx
6400ac17:	add    esi,ebx
6400ac19:	add    eax,edi
6400ac1b:	add    DWORD PTR [esi],eax
6400ac1d:	jmp    0x6400ac53
6400ac1f:	cmp    cx,0x40
6400ac23:	jne    0x6400ac53
6400ac25:	sub    esi,eax
6400ac27:	mov    eax,edi
6400ac29:	sub    eax,ebp
6400ac2b:	sub    eax,ebx
6400ac2d:	add    esi,ebp
6400ac2f:	cdq    
6400ac30:	add    esi,ebx
6400ac32:	sub    eax,DWORD PTR [esp+0x1960]
6400ac39:	sbb    edx,DWORD PTR [esp+0x1964]
6400ac40:	add    eax,DWORD PTR [esp+0x1958]
6400ac47:	adc    edx,DWORD PTR [esp+0x195c]
6400ac4e:	add    DWORD PTR [esi],eax
6400ac50:	adc    DWORD PTR [esi+0x4],edx
6400ac53:	mov    ecx,DWORD PTR [esp+0x18]
6400ac57:	movzx  eax,BYTE PTR [ecx]
6400ac5a:	add    DWORD PTR [esp+0x14],eax
6400ac5e:	mov    edi,DWORD PTR [esp+0x14]
6400ac62:	add    ebp,eax
6400ac64:	mov    eax,DWORD PTR [esp+0x10]
6400ac68:	add    eax,0x1
6400ac6b:	add    ecx,0x40
6400ac6e:	xor    esi,esi
6400ac70:	cmp    eax,DWORD PTR [esp+0x20]
6400ac74:	mov    DWORD PTR [esp+0x10],eax
6400ac78:	mov    DWORD PTR [esp+0x18],ecx
6400ac7c:	jb     0x6400ab60
6400ac82:	mov    eax,ds:0x640535a4
6400ac87:	mov    ecx,DWORD PTR [esp+0x1950]
6400ac8e:	lea    edx,[esp+0x10]
6400ac92:	push   edx
6400ac93:	lea    eax,[eax+eax*2]
6400ac96:	push   0x40
6400ac98:	add    eax,eax
6400ac9a:	add    ebx,ebp
6400ac9c:	mov    ebp,DWORD PTR ds:0x6402c108
6400aca2:	push   eax
6400aca3:	push   ebx
6400aca4:	add    edi,ecx
6400aca6:	mov    DWORD PTR [esp+0x20],esi
6400acaa:	call   ebp
6400acac:	mov    eax,DWORD PTR [esp+0x1958]
6400acb3:	sub    eax,DWORD PTR [esp+0x1960]
6400acba:	lea    ecx,[ebx+0x1]
6400acbd:	sub    eax,ecx
6400acbf:	lea    edx,[eax+edi*1-0x4]
6400acc3:	mov    BYTE PTR [ebx],0xe9
6400acc6:	lea    eax,[esp+0x1c]
6400acca:	push   eax
6400accb:	mov    DWORD PTR [ecx],edx
6400accd:	mov    ecx,DWORD PTR [esp+0x14]
6400acd1:	push   ecx
6400acd2:	push   0x5
6400acd4:	push   ebx
6400acd5:	mov    DWORD PTR [esp+0x2c],esi
6400acd9:	call   ebp
6400acdb:	pop    edi
6400acdc:	pop    esi
6400acdd:	pop    ebp
6400acde:	mov    eax,0x1
6400ace3:	pop    ebx
6400ace4:	add    esp,0x193c
6400acea:	ret    
6400aceb:	int3   
6400acec:	int3   
6400aced:	int3   
6400acee:	int3   
6400acef:	int3   
6400acf0:	mov    ecx,DWORD PTR [esp+0x1c]
6400acf4:	mov    edx,DWORD PTR ds:0x640535a4
6400acfa:	push   ebx
6400acfb:	mov    ebx,DWORD PTR [esp+0x10]
6400acff:	push   esi
6400ad00:	push   edi
6400ad01:	mov    edi,DWORD PTR [esp+0x1c]
6400ad05:	mov    esi,eax
6400ad07:	mov    eax,DWORD PTR [esp+0x2c]
6400ad0b:	push   eax
6400ad0c:	push   ecx
6400ad0d:	mov    ecx,DWORD PTR [esp+0x18]
6400ad11:	push   edi
6400ad12:	push   ebx
6400ad13:	push   edx
6400ad14:	push   esi
6400ad15:	call   0x6400aac0
6400ad1a:	add    esp,0x18
6400ad1d:	test   eax,eax
6400ad1f:	jne    0x6400ad25
6400ad21:	pop    edi
6400ad22:	pop    esi
6400ad23:	pop    ebx
6400ad24:	ret    
6400ad25:	mov    eax,DWORD PTR [esp+0x24]
6400ad29:	mov    ecx,DWORD PTR [esp+0x20]
6400ad2d:	mov    edx,DWORD PTR [esp+0x14]
6400ad31:	push   edi
6400ad32:	push   ebx
6400ad33:	push   eax
6400ad34:	push   ecx
6400ad35:	push   edx
6400ad36:	call   0x6400aa60
6400ad3b:	add    esp,0x14
6400ad3e:	pop    edi
6400ad3f:	pop    esi
6400ad40:	mov    eax,0x1
6400ad45:	pop    ebx
6400ad46:	ret    
6400ad47:	int3   
6400ad48:	int3   
6400ad49:	int3   
6400ad4a:	int3   
6400ad4b:	int3   
6400ad4c:	int3   
6400ad4d:	int3   
6400ad4e:	int3   
6400ad4f:	int3   
6400ad50:	sub    esp,0x8
6400ad53:	push   ebx
6400ad54:	push   ebp
6400ad55:	push   edi
6400ad56:	push   0x20
6400ad58:	mov    DWORD PTR [esp+0x14],0x0
6400ad60:	call   0x64012faa
6400ad65:	add    esp,0x4
6400ad68:	push   0x20
6400ad6a:	mov    ebx,eax
6400ad6c:	call   0x64012faa
6400ad71:	mov    ebp,eax
6400ad73:	mov    eax,ds:0x640535a4
6400ad78:	lea    eax,[eax+eax*2]
6400ad7b:	add    eax,eax
6400ad7d:	add    esp,0x4
6400ad80:	push   eax
6400ad81:	call   0x64012faa
6400ad86:	add    esp,0x4
6400ad89:	mov    DWORD PTR [esp+0xc],eax
6400ad8d:	mov    eax,ds:0x640535a4
6400ad92:	push   0x40
6400ad94:	lea    eax,[eax+eax*2]
6400ad97:	push   0x3000
6400ad9c:	add    eax,eax
6400ad9e:	push   eax
6400ad9f:	push   0x0
6400ada1:	push   esi
6400ada2:	call   DWORD PTR ds:0x6402c0c4
6400ada8:	mov    edi,eax
6400adaa:	test   edi,edi
6400adac:	je     0x6400ae5e
6400adb2:	mov    eax,DWORD PTR [esp+0x18]
6400adb6:	push   0x0
6400adb8:	push   0x20
6400adba:	push   ebx
6400adbb:	push   eax
6400adbc:	push   esi
6400adbd:	call   DWORD PTR ds:0x6402c0c8
6400adc3:	test   eax,eax
6400adc5:	je     0x6400ae4f
6400adcb:	mov    ecx,DWORD PTR [esp+0x1c]
6400adcf:	push   0x0
6400add1:	push   0x20
6400add3:	push   ebp
6400add4:	push   ecx
6400add5:	push   esi
6400add6:	call   DWORD PTR ds:0x6402c0c8
6400addc:	test   eax,eax
6400adde:	je     0x6400ae4f
6400ade0:	mov    ecx,DWORD PTR [esp+0xc]
6400ade4:	mov    eax,edi
6400ade6:	sub    eax,ecx
6400ade8:	cdq    
6400ade9:	push   edx
6400adea:	push   eax
6400adeb:	mov    eax,DWORD PTR [esp+0x24]
6400adef:	sub    eax,ebp
6400adf1:	cdq    
6400adf2:	push   edx
6400adf3:	push   eax
6400adf4:	mov    eax,DWORD PTR [esp+0x28]
6400adf8:	sub    eax,ebx
6400adfa:	cdq    
6400adfb:	push   edx
6400adfc:	push   eax
6400adfd:	push   ebp
6400adfe:	push   ecx
6400adff:	mov    eax,ebx
6400ae01:	call   0x6400acf0
6400ae06:	add    esp,0x20
6400ae09:	test   eax,eax
6400ae0b:	je     0x6400ae4f
6400ae0d:	mov    eax,ds:0x640535a4
6400ae12:	push   0x0
6400ae14:	lea    edx,[eax+eax*2]
6400ae17:	mov    eax,DWORD PTR [esp+0x10]
6400ae1b:	add    edx,edx
6400ae1d:	push   edx
6400ae1e:	push   eax
6400ae1f:	push   edi
6400ae20:	push   esi
6400ae21:	call   DWORD PTR ds:0x6402c0d8
6400ae27:	mov    ecx,DWORD PTR [esp+0x18]
6400ae2b:	push   0x0
6400ae2d:	push   0x20
6400ae2f:	push   ebx
6400ae30:	push   ecx
6400ae31:	push   esi
6400ae32:	call   DWORD PTR ds:0x6402c0d8
6400ae38:	mov    edx,DWORD PTR [esp+0x1c]
6400ae3c:	push   0x0
6400ae3e:	push   0x20
6400ae40:	push   ebp
6400ae41:	push   edx
6400ae42:	push   esi
6400ae43:	call   DWORD PTR ds:0x6402c0d8
6400ae49:	mov    DWORD PTR [esp+0x10],edi
6400ae4d:	jmp    0x6400ae5e
6400ae4f:	push   0x8000
6400ae54:	push   0x0
6400ae56:	push   edi
6400ae57:	push   esi
6400ae58:	call   DWORD PTR ds:0x6402c0b4
6400ae5e:	push   ebx
6400ae5f:	call   0x64014584
6400ae64:	add    esp,0x4
6400ae67:	push   ebp
6400ae68:	call   0x64014584
6400ae6d:	mov    eax,DWORD PTR [esp+0x10]
6400ae71:	add    esp,0x4
6400ae74:	push   eax
6400ae75:	call   0x64014584
6400ae7a:	mov    eax,DWORD PTR [esp+0x14]
6400ae7e:	add    esp,0x4
6400ae81:	pop    edi
6400ae82:	pop    ebp
6400ae83:	pop    ebx
6400ae84:	add    esp,0x8
6400ae87:	ret    
6400ae88:	int3   
6400ae89:	int3   
6400ae8a:	int3   
6400ae8b:	int3   
6400ae8c:	int3   
6400ae8d:	int3   
6400ae8e:	int3   
6400ae8f:	int3   
6400ae90:	mov    eax,DWORD PTR [esp+0x8]
6400ae94:	sub    eax,0x1
6400ae97:	jne    0x6400aea2
6400ae99:	mov    eax,DWORD PTR [esp+0x4]
6400ae9d:	mov    ds:0x64053840,eax
6400aea2:	mov    eax,0x1
6400aea7:	ret    0xc
6400aeaa:	int3   
6400aeab:	int3   
6400aeac:	int3   
6400aead:	int3   
6400aeae:	int3   
6400aeaf:	int3   
6400aeb0:	push   0x64053844
6400aeb5:	call   DWORD PTR ds:0x6402c030
6400aebb:	cmp    eax,0x1
6400aebe:	jne    0x6400aec5
6400aec0:	call   0x6400b3e0
6400aec5:	or     eax,0xffffffff
6400aec8:	ret    0x8
6400aecb:	int3   
6400aecc:	int3   
6400aecd:	int3   
6400aece:	int3   
6400aecf:	int3   
6400aed0:	or     eax,0xffffffff
6400aed3:	ret    0x4
6400aed6:	int3   
6400aed7:	int3   
6400aed8:	int3   
6400aed9:	int3   
6400aeda:	int3   
6400aedb:	int3   
6400aedc:	int3   
6400aedd:	int3   
6400aede:	int3   
6400aedf:	int3   
6400aee0:	push   ecx
6400aee1:	push   esi
6400aee2:	push   0x1
6400aee4:	push   0x4
6400aee6:	mov    DWORD PTR [esp+0xc],0x0
6400aeee:	call   0x64001f00
6400aef3:	mov    esi,DWORD PTR [esp+0x14]
6400aef7:	push   eax
6400aef8:	push   esi
6400aef9:	call   0x640022e0
6400aefe:	add    esp,0x10
6400af01:	mov    eax,esi
6400af03:	pop    esi
6400af04:	pop    ecx
6400af05:	ret    
6400af06:	int3   
6400af07:	int3   
6400af08:	int3   
6400af09:	int3   
6400af0a:	int3   
6400af0b:	int3   
6400af0c:	int3   
6400af0d:	int3   
6400af0e:	int3   
6400af0f:	int3   
6400af10:	push   ebp
6400af11:	mov    ebp,esp
6400af13:	push   0xffffffff
6400af15:	push   0x64022eb0
6400af1a:	mov    eax,fs:0x0
6400af20:	push   eax
6400af21:	sub    esp,0x34
6400af24:	mov    eax,ds:0x640521ac
6400af29:	xor    eax,ebp
6400af2b:	mov    DWORD PTR [ebp-0x10],eax
6400af2e:	push   ebx
6400af2f:	push   esi
6400af30:	push   edi
6400af31:	push   eax
6400af32:	lea    eax,[ebp-0xc]
6400af35:	mov    fs:0x0,eax
6400af3b:	call   DWORD PTR ds:0x64052184
6400af41:	push   0x1
6400af43:	mov    ebx,eax
6400af45:	lea    eax,[ebp-0x14]
6400af48:	push   0x5
6400af4a:	push   eax
6400af4b:	call   0x640020f0
6400af50:	add    esp,0xc
6400af53:	mov    esi,DWORD PTR [eax]
6400af55:	xor    edi,edi
6400af57:	cmp    esi,edi
6400af59:	mov    DWORD PTR [ebp-0x4],edi
6400af5c:	jne    0x6400af62
6400af5e:	xor    eax,eax
6400af60:	jmp    0x6400af8e
6400af62:	push   esi
6400af63:	call   DWORD PTR ds:0x6402c034
6400af69:	add    eax,0x1
6400af6c:	cmp    eax,0x3fffffff
6400af71:	jle    0x6400af77
6400af73:	xor    eax,eax
6400af75:	jmp    0x6400af8e
6400af77:	lea    edi,[eax+eax*1]
6400af7a:	mov    eax,edi
6400af7c:	call   0x64013d30
6400af81:	mov    eax,esp
6400af83:	push   ebx
6400af84:	push   edi
6400af85:	push   esi
6400af86:	push   eax
6400af87:	call   0x64001040
6400af8c:	xor    edi,edi
6400af8e:	mov    ebx,0xf
6400af93:	mov    ecx,eax
6400af95:	mov    DWORD PTR [ebp-0x18],ebx
6400af98:	mov    DWORD PTR [ebp-0x1c],edi
6400af9b:	mov    BYTE PTR [ebp-0x2c],0x0
6400af9f:	lea    esi,[ecx+0x1]
6400afa2:	mov    dl,BYTE PTR [ecx]
6400afa4:	add    ecx,0x1
6400afa7:	test   dl,dl
6400afa9:	jne    0x6400afa2
6400afab:	sub    ecx,esi
6400afad:	push   ecx
6400afae:	push   eax
6400afaf:	lea    ecx,[ebp-0x30]
6400afb2:	call   0x64003410
6400afb7:	lea    ecx,[ebp-0x30]
6400afba:	push   ecx
6400afbb:	lea    edx,[ebp-0x40]
6400afbe:	push   edx
6400afbf:	mov    BYTE PTR [ebp-0x4],0x1
6400afc3:	call   0x64001b70
6400afc8:	mov    esi,DWORD PTR [ebp+0x8]
6400afcb:	mov    ecx,DWORD PTR [eax]
6400afcd:	mov    edx,DWORD PTR [eax+0x4]
6400afd0:	mov    DWORD PTR [esi],ecx
6400afd2:	mov    ecx,DWORD PTR [eax+0x8]
6400afd5:	mov    DWORD PTR [esi+0x4],edx
6400afd8:	mov    edx,DWORD PTR [eax+0xc]
6400afdb:	add    esp,0x8
6400afde:	cmp    DWORD PTR [ebp-0x18],0x10
6400afe2:	mov    DWORD PTR [esi+0x8],ecx
6400afe5:	mov    DWORD PTR [esi+0xc],edx
6400afe8:	jb     0x6400aff6
6400afea:	mov    eax,DWORD PTR [ebp-0x2c]
6400afed:	push   eax
6400afee:	call   0x64013656
6400aff3:	add    esp,0x4
6400aff6:	mov    eax,DWORD PTR [ebp-0x14]
6400aff9:	add    eax,0xfffffff0
6400affc:	mov    DWORD PTR [ebp-0x18],ebx
6400afff:	mov    DWORD PTR [ebp-0x1c],edi
6400b002:	mov    BYTE PTR [ebp-0x2c],0x0
6400b006:	mov    DWORD PTR [ebp-0x4],0xffffffff
6400b00d:	lea    ecx,[eax+0xc]
6400b010:	or     edx,0xffffffff
6400b013:	lock xadd DWORD PTR [ecx],edx
6400b017:	dec    edx
6400b018:	test   edx,edx
6400b01a:	jg     0x6400b026
6400b01c:	mov    ecx,DWORD PTR [eax]
6400b01e:	mov    edx,DWORD PTR [ecx]
6400b020:	push   eax
6400b021:	mov    eax,DWORD PTR [edx+0x4]
6400b024:	call   eax
6400b026:	mov    eax,esi
6400b028:	lea    esp,[ebp-0x50]
6400b02b:	mov    ecx,DWORD PTR [ebp-0xc]
6400b02e:	mov    DWORD PTR fs:0x0,ecx
6400b035:	pop    ecx
6400b036:	pop    edi
6400b037:	pop    esi
6400b038:	pop    ebx
6400b039:	mov    ecx,DWORD PTR [ebp-0x10]
6400b03c:	xor    ecx,ebp
6400b03e:	call   0x64013d18
6400b043:	mov    esp,ebp
6400b045:	pop    ebp
6400b046:	ret    
6400b047:	int3   
6400b048:	int3   
6400b049:	int3   
6400b04a:	int3   
6400b04b:	int3   
6400b04c:	int3   
6400b04d:	int3   
6400b04e:	int3   
6400b04f:	int3   
6400b050:	sub    esp,0x1bc
6400b056:	mov    eax,ds:0x640521ac
6400b05b:	xor    eax,esp
6400b05d:	mov    DWORD PTR [esp+0x1b8],eax
6400b064:	push   esi
6400b065:	lea    eax,[esp+0x2c]
6400b069:	push   eax
6400b06a:	push   0x202
6400b06f:	call   DWORD PTR ds:0x6402c1f4
6400b075:	lea    ecx,[esp+0xc]
6400b079:	push   ecx
6400b07a:	call   0x6400af10
6400b07f:	mov    edx,DWORD PTR [eax]
6400b081:	mov    DWORD PTR [esp+0x20],edx
6400b085:	mov    ecx,DWORD PTR [eax+0x4]
6400b088:	mov    DWORD PTR [esp+0x24],ecx
6400b08c:	mov    edx,DWORD PTR [eax+0x8]
6400b08f:	add    esp,0x4
6400b092:	mov    DWORD PTR [esp+0x24],edx
6400b096:	mov    eax,DWORD PTR [eax+0xc]
6400b099:	lea    ecx,[esp+0x1c]
6400b09d:	push   ecx
6400b09e:	mov    DWORD PTR [esp+0x2c],eax
6400b0a2:	call   0x6400b4c8
6400b0a7:	lea    edx,[esp+0x4]
6400b0ab:	push   edx
6400b0ac:	call   0x6400aee0
6400b0b1:	push   0x0
6400b0b3:	lea    eax,[esp+0x10]
6400b0b7:	push   0x1
6400b0b9:	push   eax
6400b0ba:	call   0x640069a0
6400b0bf:	mov    esi,DWORD PTR [esp+0x18]
6400b0c3:	add    esp,0x10
6400b0c6:	cmp    DWORD PTR [esi-0x4],0x1
6400b0ca:	jle    0x6400b0dd
6400b0cc:	mov    ecx,DWORD PTR [esi-0xc]
6400b0cf:	push   ecx
6400b0d0:	lea    ecx,[esp+0xc]
6400b0d4:	call   0x640037c0
6400b0d9:	mov    esi,DWORD PTR [esp+0x8]
6400b0dd:	mov    eax,DWORD PTR [esp+0x4]
6400b0e1:	cmp    DWORD PTR [eax-0x4],0x1
6400b0e5:	jle    0x6400b0f8
6400b0e7:	mov    edx,DWORD PTR [eax-0xc]
6400b0ea:	push   edx
6400b0eb:	lea    ecx,[esp+0x8]
6400b0ef:	call   0x640037c0
6400b0f4:	mov    eax,DWORD PTR [esp+0x4]
6400b0f8:	lea    ecx,[esp+0x1c]
6400b0fc:	push   ecx
6400b0fd:	push   0x1
6400b0ff:	push   0xc
6400b101:	push   esi
6400b102:	push   eax
6400b103:	call   0x6400b4c2
6400b108:	mov    esi,eax
6400b10a:	call   DWORD PTR ds:0x6402c1f8
6400b110:	mov    eax,DWORD PTR [esp+0x8]
6400b114:	add    eax,0xfffffff0
6400b117:	lea    edx,[eax+0xc]
6400b11a:	or     ecx,0xffffffff
6400b11d:	lock xadd DWORD PTR [edx],ecx
6400b121:	dec    ecx
6400b122:	test   ecx,ecx
6400b124:	jg     0x6400b130
6400b126:	mov    ecx,DWORD PTR [eax]
6400b128:	mov    edx,DWORD PTR [ecx]
6400b12a:	push   eax
6400b12b:	mov    eax,DWORD PTR [edx+0x4]
6400b12e:	call   eax
6400b130:	mov    eax,DWORD PTR [esp+0x4]
6400b134:	add    eax,0xfffffff0
6400b137:	lea    ecx,[eax+0xc]
6400b13a:	or     edx,0xffffffff
6400b13d:	lock xadd DWORD PTR [ecx],edx
6400b141:	dec    edx
6400b142:	test   edx,edx
6400b144:	jg     0x6400b150
6400b146:	mov    ecx,DWORD PTR [eax]
6400b148:	mov    edx,DWORD PTR [ecx]
6400b14a:	push   eax
6400b14b:	mov    eax,DWORD PTR [edx+0x4]
6400b14e:	call   eax
6400b150:	mov    ecx,DWORD PTR [esp+0x1bc]
6400b157:	mov    eax,esi
6400b159:	pop    esi
6400b15a:	xor    ecx,esp
6400b15c:	call   0x64013d18
6400b161:	add    esp,0x1bc
6400b167:	ret    
6400b168:	int3   
6400b169:	int3   
6400b16a:	int3   
6400b16b:	int3   
6400b16c:	int3   
6400b16d:	int3   
6400b16e:	int3   
6400b16f:	int3   
6400b170:	sub    esp,0x1b4
6400b176:	mov    eax,ds:0x640521ac
6400b17b:	xor    eax,esp
6400b17d:	mov    DWORD PTR [esp+0x1b0],eax
6400b184:	push   esi
6400b185:	lea    eax,[esp+0x24]
6400b189:	push   eax
6400b18a:	push   0x202
6400b18f:	call   DWORD PTR ds:0x6402c1f4
6400b195:	lea    ecx,[esp+0x4]
6400b199:	push   ecx
6400b19a:	call   0x6400af10
6400b19f:	mov    edx,DWORD PTR [eax]
6400b1a1:	mov    DWORD PTR [esp+0x18],edx
6400b1a5:	mov    ecx,DWORD PTR [eax+0x4]
6400b1a8:	mov    DWORD PTR [esp+0x1c],ecx
6400b1ac:	mov    edx,DWORD PTR [eax+0x8]
6400b1af:	add    esp,0x4
6400b1b2:	mov    DWORD PTR [esp+0x1c],edx
6400b1b6:	mov    eax,DWORD PTR [eax+0xc]
6400b1b9:	lea    ecx,[esp+0x14]
6400b1bd:	push   ecx
6400b1be:	mov    DWORD PTR [esp+0x24],eax
6400b1c2:	call   0x6400b4c8
6400b1c7:	mov    esi,eax
6400b1c9:	call   DWORD PTR ds:0x6402c1f8
6400b1cf:	mov    ecx,DWORD PTR [esp+0x1b4]
6400b1d6:	mov    eax,esi
6400b1d8:	pop    esi
6400b1d9:	xor    ecx,esp
6400b1db:	call   0x64013d18
6400b1e0:	add    esp,0x1b4
6400b1e6:	ret    
6400b1e7:	int3   
6400b1e8:	int3   
6400b1e9:	int3   
6400b1ea:	int3   
6400b1eb:	int3   
6400b1ec:	int3   
6400b1ed:	int3   
6400b1ee:	int3   
6400b1ef:	int3   
6400b1f0:	mov    eax,DWORD PTR [esp+0xc]
6400b1f4:	push   eax
6400b1f5:	lea    ecx,[esp+0x10]
6400b1f9:	call   0x64002b30
6400b1fe:	lea    ecx,[esp+0xc]
6400b202:	push   0x6402c2b4
6400b207:	push   ecx
6400b208:	call   0x64002d80
6400b20d:	add    esp,0x8
6400b210:	test   al,al
6400b212:	je     0x6400b21b
6400b214:	call   0x6400b170
6400b219:	jmp    0x6400b220
6400b21b:	call   0x6400b050
6400b220:	push   0x0
6400b222:	call   DWORD PTR ds:0x6402c038
6400b228:	int3   
6400b229:	int3   
6400b22a:	int3   
6400b22b:	int3   
6400b22c:	int3   
6400b22d:	int3   
6400b22e:	int3   
6400b22f:	int3   
6400b230:	cmp    BYTE PTR ds:0x64053854,0x0
6400b237:	jne    0x6400b257
6400b239:	mov    BYTE PTR ds:0x64053854,0x1
6400b240:	call   0x64002130
6400b245:	push   eax
6400b246:	call   0x64006e20
6400b24b:	add    esp,0x4
6400b24e:	test   al,al
6400b250:	jne    0x6400b257
6400b252:	xor    eax,eax
6400b254:	ret    0xc
6400b257:	jmp    0x640142f9
6400b25c:	int3   
6400b25d:	int3   
6400b25e:	int3   
6400b25f:	int3   
6400b260:	push   ebp
6400b261:	mov    ebp,esp
6400b263:	push   0xffffffff
6400b265:	push   0x64022ef8
6400b26a:	mov    eax,fs:0x0
6400b270:	push   eax
6400b271:	sub    esp,0x38
6400b274:	mov    eax,ds:0x640521ac
6400b279:	xor    eax,ebp
6400b27b:	mov    DWORD PTR [ebp-0x14],eax
6400b27e:	push   ebx
6400b27f:	push   esi
6400b280:	push   edi
6400b281:	push   eax
6400b282:	lea    eax,[ebp-0xc]
6400b285:	mov    fs:0x0,eax
6400b28b:	mov    DWORD PTR [ebp-0x10],esp
6400b28e:	push   0x1
6400b290:	xor    esi,esi
6400b292:	push   0x1
6400b294:	lea    ecx,[ebp-0x44]
6400b297:	mov    DWORD PTR [ebp-0x4],esi
6400b29a:	call   0x64007020
6400b29f:	mov    BYTE PTR [ebp-0x4],0x1
6400b2a3:	call   DWORD PTR ds:0x6402c040
6400b2a9:	push   eax
6400b2aa:	call   0x64002910
6400b2af:	movzx  eax,ax
6400b2b2:	add    esp,0x4
6400b2b5:	push   eax
6400b2b6:	lea    eax,[ebp-0x30]
6400b2b9:	push   eax
6400b2ba:	lea    ecx,[ebp-0x44]
6400b2bd:	call   0x640072b0
6400b2c2:	cmp    DWORD PTR [ebp-0x1c],esi
6400b2c5:	mov    bl,0x2
6400b2c7:	mov    BYTE PTR [ebp-0x4],bl
6400b2ca:	jne    0x6400b2dd
6400b2cc:	push   0x64044200
6400b2d1:	lea    ecx,[ebp-0x38]
6400b2d4:	push   ecx
6400b2d5:	mov    DWORD PTR [ebp-0x38],esi
6400b2d8:	call   0x64013884
6400b2dd:	call   DWORD PTR ds:0x64052184
6400b2e3:	lea    edx,[ebp-0x34]
6400b2e6:	push   0x1
6400b2e8:	push   edx
6400b2e9:	call   0x640025f0
6400b2ee:	add    esp,0x8
6400b2f1:	mov    esi,eax
6400b2f3:	mov    eax,DWORD PTR [esi]
6400b2f5:	mov    edi,0x10
6400b2fa:	sub    eax,edi
6400b2fc:	cmp    DWORD PTR [eax+0xc],0x1
6400b300:	mov    BYTE PTR [ebp-0x4],0x3
6400b304:	jle    0x6400b311
6400b306:	mov    eax,DWORD PTR [eax+0x4]
6400b309:	push   eax
6400b30a:	mov    ecx,esi
6400b30c:	call   0x640037c0
6400b311:	cmp    DWORD PTR [ebp-0x18],edi
6400b314:	mov    esi,DWORD PTR [esi]
6400b316:	mov    eax,DWORD PTR [ebp-0x2c]
6400b319:	jae    0x6400b31e
6400b31b:	lea    eax,[ebp-0x2c]
6400b31e:	push   esi
6400b31f:	push   eax
6400b320:	call   DWORD PTR ds:0x6402c03c
6400b326:	push   eax
6400b327:	call   0x640094c0
6400b32c:	mov    eax,DWORD PTR [ebp-0x34]
6400b32f:	add    eax,0xfffffff0
6400b332:	add    esp,0xc
6400b335:	mov    BYTE PTR [ebp-0x4],bl
6400b338:	lea    ecx,[eax+0xc]
6400b33b:	or     edx,0xffffffff
6400b33e:	lock xadd DWORD PTR [ecx],edx
6400b342:	dec    edx
6400b343:	test   edx,edx
6400b345:	jg     0x6400b351
6400b347:	mov    ecx,DWORD PTR [eax]
6400b349:	mov    edx,DWORD PTR [ecx]
6400b34b:	push   eax
6400b34c:	mov    eax,DWORD PTR [edx+0x4]
6400b34f:	call   eax
6400b351:	cmp    DWORD PTR [ebp-0x18],edi
6400b354:	jb     0x6400b362
6400b356:	mov    ecx,DWORD PTR [ebp-0x2c]
6400b359:	push   ecx
6400b35a:	call   0x64013656
6400b35f:	add    esp,0x4
6400b362:	lea    ecx,[ebp-0x44]
6400b365:	mov    DWORD PTR [ebp-0x18],0xf
6400b36c:	mov    DWORD PTR [ebp-0x1c],0x0
6400b373:	mov    BYTE PTR [ebp-0x2c],0x0
6400b377:	mov    BYTE PTR [ebp-0x4],0x0
6400b37b:	call   0x64007040
6400b380:	mov    al,0x1
6400b382:	jmp    0x6400b38c
6400b384:	mov    eax,0x6400b38a
6400b389:	ret    
6400b38a:	xor    al,al
6400b38c:	mov    ecx,DWORD PTR [ebp-0xc]
6400b38f:	mov    DWORD PTR fs:0x0,ecx
6400b396:	pop    ecx
6400b397:	pop    edi
6400b398:	pop    esi
6400b399:	pop    ebx
6400b39a:	mov    ecx,DWORD PTR [ebp-0x14]
6400b39d:	xor    ecx,ebp
6400b39f:	call   0x64013d18
6400b3a4:	mov    esp,ebp
6400b3a6:	pop    ebp
6400b3a7:	ret    
6400b3a8:	int3   
6400b3a9:	int3   
6400b3aa:	int3   
6400b3ab:	int3   
6400b3ac:	int3   
6400b3ad:	int3   
6400b3ae:	int3   
6400b3af:	int3   
6400b3b0:	push   esi
6400b3b1:	push   edi
6400b3b2:	mov    edi,DWORD PTR ds:0x6402c044
6400b3b8:	xor    esi,esi
6400b3ba:	lea    ebx,[ebx+0x0]
6400b3c0:	call   0x6400b260
6400b3c5:	test   al,al
6400b3c7:	jne    0x6400b3d8
6400b3c9:	push   0xbb8
6400b3ce:	call   edi
6400b3d0:	add    esi,0x1
6400b3d3:	cmp    esi,0x32
6400b3d6:	jne    0x6400b3c0
6400b3d8:	pop    edi
6400b3d9:	xor    eax,eax
6400b3db:	pop    esi
6400b3dc:	ret    0x4
6400b3df:	int3   
6400b3e0:	sub    esp,0x214
6400b3e6:	mov    eax,ds:0x640521ac
6400b3eb:	xor    eax,esp
6400b3ed:	mov    DWORD PTR [esp+0x210],eax
6400b3f4:	push   0x208
6400b3f9:	lea    eax,[esp+0xc]
6400b3fd:	push   eax
6400b3fe:	push   0x0
6400b400:	call   DWORD PTR ds:0x6402c058
6400b406:	test   eax,eax
6400b408:	je     0x6400b4ad
6400b40e:	lea    ecx,[esp+0x8]
6400b412:	push   0x104
6400b417:	push   ecx
6400b418:	call   0x64014571
6400b41d:	lea    edx,[esp+0x10]
6400b421:	push   0x6402c400
6400b426:	push   edx
6400b427:	call   0x64013fcc
6400b42c:	add    esp,0x10
6400b42f:	test   eax,eax
6400b431:	jne    0x6400b449
6400b433:	lea    eax,[esp+0x8]
6400b437:	push   0x6402c3e8
6400b43c:	push   eax
6400b43d:	call   0x64013fcc
6400b442:	add    esp,0x8
6400b445:	test   eax,eax
6400b447:	je     0x6400b4ad
6400b449:	lea    ecx,[esp]
6400b44c:	push   0x1
6400b44e:	push   ecx
6400b44f:	call   0x64002140
6400b454:	mov    eax,DWORD PTR [eax]
6400b456:	add    esp,0x8
6400b459:	lea    edx,[esp+0x4]
6400b45d:	push   edx
6400b45e:	push   eax
6400b45f:	push   0x0
6400b461:	call   DWORD PTR ds:0x6402c054
6400b467:	mov    eax,DWORD PTR [esp]
6400b46a:	add    eax,0xfffffff0
6400b46d:	lea    ecx,[eax+0xc]
6400b470:	or     edx,0xffffffff
6400b473:	lock xadd DWORD PTR [ecx],edx
6400b477:	dec    edx
6400b478:	test   edx,edx
6400b47a:	jg     0x6400b486
6400b47c:	mov    ecx,DWORD PTR [eax]
6400b47e:	mov    edx,DWORD PTR [ecx]
6400b480:	push   eax
6400b481:	mov    eax,DWORD PTR [edx+0x4]
6400b484:	call   eax
6400b486:	lea    ecx,[esp+0x8]
6400b48a:	push   ecx
6400b48b:	call   DWORD PTR ds:0x6402c050
6400b491:	push   eax
6400b492:	call   DWORD PTR ds:0x6402c04c
6400b498:	push   0x0
6400b49a:	push   0x0
6400b49c:	push   0x0
6400b49e:	push   0x6400b3b0
6400b4a3:	push   0x0
6400b4a5:	push   0x0
6400b4a7:	call   DWORD PTR ds:0x6402c048
6400b4ad:	mov    ecx,DWORD PTR [esp+0x210]
6400b4b4:	xor    ecx,esp
6400b4b6:	call   0x64013d18
6400b4bb:	add    esp,0x214
6400b4c1:	ret    
6400b4c2:	jmp    DWORD PTR ds:0x6402c1f0
6400b4c8:	jmp    DWORD PTR ds:0x6402c1ec
6400b4ce:	int3   
6400b4cf:	int3   
6400b4d0:	push   edi
6400b4d1:	mov    edi,DWORD PTR [esp+0x14]
6400b4d5:	test   edi,edi
6400b4d7:	jne    0x6400b4de
6400b4d9:	lea    eax,[edi+0x1]
6400b4dc:	pop    edi
6400b4dd:	ret    
6400b4de:	mov    eax,DWORD PTR [esp+0x8]
6400b4e2:	test   eax,eax
6400b4e4:	push   esi
6400b4e5:	mov    DWORD PTR [edi],0x0
6400b4eb:	je     0x6400b53d
6400b4ed:	mov    esi,DWORD PTR [eax+0x14]
6400b4f0:	test   esi,esi
6400b4f2:	jl     0x6400b53d
6400b4f4:	mov    ecx,DWORD PTR [eax+0x18]
6400b4f7:	test   ecx,ecx
6400b4f9:	je     0x6400b505
6400b4fb:	cmp    ecx,0x1
6400b4fe:	je     0x6400b505
6400b500:	cmp    ecx,0x2
6400b503:	jne    0x6400b53d
6400b505:	cmp    DWORD PTR [eax+0x10],0x0
6400b509:	je     0x6400b53d
6400b50b:	mov    ecx,DWORD PTR [esp+0x10]
6400b50f:	test   ecx,ecx
6400b511:	je     0x6400b53d
6400b513:	mov    edx,DWORD PTR [eax+0x1c]
6400b516:	and    edx,0x3
6400b519:	cmp    dl,0x3
6400b51c:	je     0x6400b53d
6400b51e:	test   esi,esi
6400b520:	jne    0x6400b528
6400b522:	lea    eax,[esi+0x1]
6400b525:	pop    esi
6400b526:	pop    edi
6400b527:	ret    
6400b528:	mov    edx,DWORD PTR [esp+0x14]
6400b52c:	push   edi
6400b52d:	push   edx
6400b52e:	push   ecx
6400b52f:	push   0x0
6400b531:	push   eax
6400b532:	call   0x6400ba40
6400b537:	add    esp,0x14
6400b53a:	pop    esi
6400b53b:	pop    edi
6400b53c:	ret    
6400b53d:	pop    esi
6400b53e:	mov    eax,0x3
6400b543:	pop    edi
6400b544:	ret    
6400b545:	int3   
6400b546:	int3   
6400b547:	int3   
6400b548:	int3   
6400b549:	int3   
6400b54a:	int3   
6400b54b:	int3   
6400b54c:	int3   
6400b54d:	int3   
6400b54e:	int3   
6400b54f:	int3   
6400b550:	test   DWORD PTR [esp+0x4],0x4000
6400b558:	je     0x6400b561
6400b55a:	mov    eax,DWORD PTR [eax*4+0x6404600c]
6400b561:	ret    
6400b562:	int3   
6400b563:	int3   
6400b564:	int3   
6400b565:	int3   
6400b566:	int3   
6400b567:	int3   
6400b568:	int3   
6400b569:	int3   
6400b56a:	int3   
6400b56b:	int3   
6400b56c:	int3   
6400b56d:	int3   
6400b56e:	int3   
6400b56f:	int3   
6400b570:	test   ecx,0x2000
6400b576:	je     0x6400b580
6400b578:	mov    eax,DWORD PTR [eax*4+0x64046018]
6400b57f:	ret    
6400b580:	cmp    eax,0x2
6400b583:	jne    0x6400b5ad
6400b585:	and    edx,0x3000000
6400b58b:	cmp    edx,0x1000000
6400b591:	je     0x6400b5a8
6400b593:	test   ecx,0x2000000
6400b599:	je     0x6400b5a2
6400b59b:	test   BYTE PTR [esp+0x4],0x8
6400b5a0:	jne    0x6400b5a8
6400b5a2:	mov    eax,0x1
6400b5a7:	ret    
6400b5a8:	mov    eax,0x2
6400b5ad:	ret    
6400b5ae:	int3   
6400b5af:	int3   
6400b5b0:	sub    esp,0x18
6400b5b3:	mov    edx,DWORD PTR [ebx+0x10]
6400b5b6:	push   ebp
6400b5b7:	mov    ebp,DWORD PTR [esp+0x20]
6400b5bb:	mov    ecx,DWORD PTR [ebp+0x28]
6400b5be:	push   esi
6400b5bf:	xor    eax,eax
6400b5c1:	push   ebp
6400b5c2:	push   ebx
6400b5c3:	mov    DWORD PTR [esp+0x10],eax
6400b5c7:	mov    DWORD PTR [esp+0x1c],ecx
6400b5cb:	mov    DWORD PTR [esp+0x24],edx
6400b5cf:	mov    BYTE PTR [esp+0x2c],al
6400b5d3:	mov    DWORD PTR [esp+0x20],eax
6400b5d7:	call   0x6400e020
6400b5dc:	mov    esi,eax
6400b5de:	add    esp,0x8
6400b5e1:	test   esi,esi
6400b5e3:	je     0x6400b7e0
6400b5e9:	cmp    DWORD PTR [ebp+0x18],0x1
6400b5ed:	jne    0x6400b619
6400b5ef:	mov    eax,DWORD PTR [ebp+0x0]
6400b5f2:	test   eax,0x2000
6400b5f7:	je     0x6400b619
6400b5f9:	cmp    DWORD PTR [ebp+0x20],0x0
6400b5fd:	jne    0x6400b619
6400b5ff:	test   BYTE PTR [esp+0x14],0x8
6400b604:	je     0x6400b619
6400b606:	and    eax,0xffffdfff
6400b60b:	push   0x3
6400b60d:	push   ebp
6400b60e:	mov    DWORD PTR [ebp+0x0],eax
6400b611:	call   0x6400d970
6400b616:	add    esp,0x8
6400b619:	mov    eax,DWORD PTR [ebx+0x18]
6400b61c:	cmp    eax,0x2
6400b61f:	jne    0x6400b632
6400b621:	test   DWORD PTR [esi+0x8],0x800000
6400b628:	jne    0x6400b7e0
6400b62e:	cmp    eax,eax
6400b630:	je     0x6400b63f
6400b632:	test   DWORD PTR [esi+0x8],0x8000000
6400b639:	jne    0x6400b7e0
6400b63f:	mov    ecx,DWORD PTR [esi+0x8]
6400b642:	test   cl,0x1
6400b645:	je     0x6400b691
6400b647:	not    ecx
6400b649:	test   ecx,0x40000000
6400b64f:	je     0x6400b65f
6400b651:	add    DWORD PTR [ebx+0x10],0x1
6400b655:	add    DWORD PTR [ebx+0x14],0xffffffff
6400b659:	js     0x6400b7e0
6400b65f:	mov    ecx,DWORD PTR [ebx+0x10]
6400b662:	movzx  edx,BYTE PTR [ecx]
6400b665:	mov    ecx,DWORD PTR [esi+0x8]
6400b668:	test   ecx,0x10000000
6400b66e:	mov    DWORD PTR [esp+0x8],edx
6400b672:	je     0x6400b67d
6400b674:	test   dl,0x38
6400b677:	jne    0x6400b7e0
6400b67d:	test   ecx,0x100000
6400b683:	je     0x6400b691
6400b685:	cmp    edx,0xc0
6400b68b:	jb     0x6400b7e0
6400b691:	mov    edx,DWORD PTR [esp+0x14]
6400b695:	add    DWORD PTR [ebx+0x10],0x1
6400b699:	mov    ecx,DWORD PTR [ebp+0x0]
6400b69c:	push   edx
6400b69d:	mov    edx,DWORD PTR [esi+0x8]
6400b6a0:	call   0x6400b570
6400b6a5:	mov    DWORD PTR [esp+0x14],eax
6400b6a9:	mov    eax,ecx
6400b6ab:	push   eax
6400b6ac:	mov    eax,DWORD PTR [ebx+0x18]
6400b6af:	call   0x6400b550
6400b6b4:	push   0x40
6400b6b6:	push   0x0
6400b6b8:	push   edi
6400b6b9:	mov    DWORD PTR [esp+0x20],eax
6400b6bd:	call   0x64015170
6400b6c2:	mov    BYTE PTR [edi+0xd],0xff
6400b6c6:	mov    al,BYTE PTR [esi+0x3]
6400b6c9:	add    esp,0x14
6400b6cc:	test   al,al
6400b6ce:	je     0x6400b79a
6400b6d4:	mov    edx,DWORD PTR [esp+0xc]
6400b6d8:	lea    ecx,[esp+0x18]
6400b6dc:	push   ecx
6400b6dd:	mov    ecx,DWORD PTR [esp+0x14]
6400b6e1:	push   edx
6400b6e2:	mov    edx,DWORD PTR [esp+0x10]
6400b6e6:	push   ecx
6400b6e7:	push   ebp
6400b6e8:	push   edx
6400b6e9:	push   0x0
6400b6eb:	movzx  eax,al
6400b6ee:	push   eax
6400b6ef:	push   esi
6400b6f0:	push   edi
6400b6f1:	push   ebx
6400b6f2:	call   0x6400c780
6400b6f7:	add    esp,0x28
6400b6fa:	test   eax,eax
6400b6fc:	je     0x6400b7e0
6400b702:	mov    al,BYTE PTR [esi+0x2]
6400b705:	test   al,al
6400b707:	je     0x6400b79a
6400b70d:	mov    ecx,DWORD PTR [esp+0xc]
6400b711:	mov    edx,DWORD PTR [esp+0x10]
6400b715:	push   0x0
6400b717:	push   ecx
6400b718:	mov    ecx,DWORD PTR [esp+0x10]
6400b71c:	push   edx
6400b71d:	push   ebp
6400b71e:	push   ecx
6400b71f:	push   0x1
6400b721:	movzx  edx,al
6400b724:	push   edx
6400b725:	push   esi
6400b726:	push   edi
6400b727:	push   ebx
6400b728:	call   0x6400c780
6400b72d:	add    esp,0x28
6400b730:	test   eax,eax
6400b732:	je     0x6400b7e0
6400b738:	test   DWORD PTR [esi+0x8],0x20000
6400b73f:	je     0x6400b79a
6400b741:	mov    eax,DWORD PTR [esp+0xc]
6400b745:	mov    ecx,DWORD PTR [esp+0x10]
6400b749:	mov    edx,DWORD PTR [esp+0x8]
6400b74d:	push   0x0
6400b74f:	push   eax
6400b750:	movzx  eax,BYTE PTR [esi+0x10]
6400b754:	push   ecx
6400b755:	push   ebp
6400b756:	push   edx
6400b757:	push   0x2
6400b759:	push   eax
6400b75a:	push   esi
6400b75b:	push   edi
6400b75c:	push   ebx
6400b75d:	call   0x6400c780
6400b762:	add    esp,0x28
6400b765:	test   eax,eax
6400b767:	je     0x6400b7e0
6400b769:	test   DWORD PTR [esi+0x8],0x40000
6400b770:	je     0x6400b79a
6400b772:	mov    ecx,DWORD PTR [esp+0xc]
6400b776:	mov    edx,DWORD PTR [esp+0x10]
6400b77a:	mov    eax,DWORD PTR [esp+0x8]
6400b77e:	push   0x0
6400b780:	push   ecx
6400b781:	movzx  ecx,BYTE PTR [esi+0x11]
6400b785:	push   edx
6400b786:	push   ebp
6400b787:	push   eax
6400b788:	push   0x3
6400b78a:	push   ecx
6400b78b:	push   esi
6400b78c:	push   edi
6400b78d:	push   ebx
6400b78e:	call   0x6400c780
6400b793:	add    esp,0x28
6400b796:	test   eax,eax
6400b798:	je     0x6400b7e0
6400b79a:	test   DWORD PTR [esi+0x8],0x200000
6400b7a1:	je     0x6400b7b2
6400b7a3:	push   ebx
6400b7a4:	call   0x6400e310
6400b7a9:	mov    esi,eax
6400b7ab:	add    esp,0x4
6400b7ae:	test   esi,esi
6400b7b0:	je     0x6400b7e0
6400b7b2:	test   DWORD PTR [esi+0x8],0x400000
6400b7b9:	je     0x6400b7d5
6400b7bb:	add    DWORD PTR [ebx+0x14],0xffffffff
6400b7bf:	js     0x6400b7e0
6400b7c1:	mov    eax,DWORD PTR [ebx+0x10]
6400b7c4:	mov    cl,BYTE PTR [eax]
6400b7c6:	add    eax,0x1
6400b7c9:	cmp    cl,0x8
6400b7cc:	mov    BYTE PTR [esp+0x24],cl
6400b7d0:	mov    DWORD PTR [ebx+0x10],eax
6400b7d3:	jae    0x6400b7e0
6400b7d5:	mov    edx,DWORD PTR [ebx+0x10]
6400b7d8:	sub    edx,DWORD PTR [ebp+0x8]
6400b7db:	cmp    edx,0xf
6400b7de:	jle    0x6400b825
6400b7e0:	push   0x40
6400b7e2:	push   0x0
6400b7e4:	push   edi
6400b7e5:	call   0x64015170
6400b7ea:	mov    eax,DWORD PTR [esp+0x28]
6400b7ee:	mov    BYTE PTR [edi+0xd],0xff
6400b7f2:	mov    BYTE PTR [edi+0x8],0x1
6400b7f6:	add    esp,0xc
6400b7f9:	mov    DWORD PTR [ebp+0x4],0x0
6400b800:	cmp    BYTE PTR [eax],0x9b
6400b803:	jne    0x6400b81a
6400b805:	or     BYTE PTR [edi+0x3a],0x8
6400b809:	pop    esi
6400b80a:	mov    WORD PTR [edi+0x10],0x3db
6400b810:	mov    eax,0x1
6400b815:	pop    ebp
6400b816:	add    esp,0x18
6400b819:	ret    
6400b81a:	pop    esi
6400b81b:	mov    eax,0x3
6400b820:	pop    ebp
6400b821:	add    esp,0x18
6400b824:	ret    
6400b825:	mov    edx,0x1
6400b82a:	cmp    DWORD PTR [esp+0x18],edx
6400b82e:	jne    0x6400b840
6400b830:	test   BYTE PTR [esi+0x8],0x10
6400b834:	je     0x6400b840
6400b836:	or     DWORD PTR [ebp+0x4],0x10
6400b83a:	or     WORD PTR [edi+0xa],dx
6400b83e:	jmp    0x6400b86b
6400b840:	mov    eax,DWORD PTR [esi+0x8]
6400b843:	test   al,0x20
6400b845:	je     0x6400b858
6400b847:	test   BYTE PTR [ebp+0x0],0x20
6400b84b:	je     0x6400b858
6400b84d:	or     DWORD PTR [ebp+0x4],0x20
6400b851:	or     WORD PTR [edi+0xa],0x2
6400b856:	jmp    0x6400b86b
6400b858:	test   al,0x40
6400b85a:	je     0x6400b86b
6400b85c:	test   BYTE PTR [ebp+0x0],0x40
6400b860:	je     0x6400b86b
6400b862:	or     DWORD PTR [ebp+0x4],0x40
6400b866:	or     WORD PTR [edi+0xa],0x4
6400b86b:	mov    eax,DWORD PTR [esi+0x8]
6400b86e:	mov    ecx,eax
6400b870:	and    ecx,0x14000
6400b876:	cmp    ecx,0x14000
6400b87c:	jne    0x6400b8af
6400b87e:	mov    eax,DWORD PTR [esp+0xc]
6400b882:	or     DWORD PTR [ebp+0x4],0x4000
6400b889:	test   eax,eax
6400b88b:	je     0x6400b98b
6400b891:	cmp    eax,edx
6400b893:	jne    0x6400b8a2
6400b895:	mov    ax,WORD PTR [esi+0x12]
6400b899:	mov    WORD PTR [edi+0x10],ax
6400b89d:	jmp    0x6400b993
6400b8a2:	mov    cx,WORD PTR [esi+0x14]
6400b8a6:	mov    WORD PTR [edi+0x10],cx
6400b8aa:	jmp    0x6400b993
6400b8af:	mov    ecx,eax
6400b8b1:	and    ecx,0xc000
6400b8b7:	cmp    ecx,0xc000
6400b8bd:	jne    0x6400b8d3
6400b8bf:	mov    dx,WORD PTR [esi+0x4]
6400b8c3:	mov    WORD PTR [edi+0x10],dx
6400b8c7:	or     DWORD PTR [ebp+0x4],0x4000
6400b8ce:	jmp    0x6400b993
6400b8d3:	mov    ecx,DWORD PTR [esp+0x10]
6400b8d7:	test   ecx,ecx
6400b8d9:	jne    0x6400b8fd
6400b8db:	test   eax,0x10000
6400b8e0:	je     0x6400b8f0
6400b8e2:	test   eax,0x1000008
6400b8e7:	jne    0x6400b8f0
6400b8e9:	or     DWORD PTR [ebp+0x4],0x2000
6400b8f0:	mov    ax,WORD PTR [esi+0x4]
6400b8f4:	mov    WORD PTR [edi+0x10],ax
6400b8f8:	jmp    0x6400b993
6400b8fd:	cmp    ecx,edx
6400b8ff:	jne    0x6400b952
6400b901:	or     WORD PTR [edi+0xa],0x100
6400b907:	test   DWORD PTR [esi+0x8],0x10000
6400b90e:	je     0x6400b98b
6400b910:	or     DWORD PTR [ebp+0x4],0x2000
6400b917:	mov    eax,DWORD PTR [esi+0x8]
6400b91a:	test   eax,0x80000
6400b91f:	je     0x6400b93b
6400b921:	cmp    DWORD PTR [esp+0x8],0xc0
6400b929:	jb     0x6400b935
6400b92b:	mov    cx,WORD PTR [esi+0x4]
6400b92f:	mov    WORD PTR [edi+0x10],cx
6400b933:	jmp    0x6400b993
6400b935:	mov    dx,WORD PTR [esi+0x12]
6400b939:	jmp    0x6400b98f
6400b93b:	test   eax,0x400000
6400b940:	je     0x6400b981
6400b942:	movzx  ax,BYTE PTR [esp+0x24]
6400b948:	add    ax,WORD PTR [esi+0x4]
6400b94c:	mov    WORD PTR [edi+0x10],ax
6400b950:	jmp    0x6400b993
6400b952:	or     WORD PTR [edi+0xa],0x200
6400b958:	mov    eax,DWORD PTR [esi+0x8]
6400b95b:	test   eax,0x4010000
6400b960:	je     0x6400b98b
6400b962:	test   eax,0x4000000
6400b967:	je     0x6400b981
6400b969:	test   BYTE PTR [esp+0x14],0x8
6400b96e:	je     0x6400b981
6400b970:	or     DWORD PTR [ebp+0x4],0x2000000
6400b977:	mov    ax,WORD PTR [esi+0x14]
6400b97b:	mov    WORD PTR [edi+0x10],ax
6400b97f:	jmp    0x6400b993
6400b981:	mov    cx,WORD PTR [esi+0x12]
6400b985:	mov    WORD PTR [edi+0x10],cx
6400b989:	jmp    0x6400b993
6400b98b:	mov    dx,WORD PTR [esi+0x4]
6400b98f:	mov    WORD PTR [edi+0x10],dx
6400b993:	test   DWORD PTR [esi+0x8],0x8000
6400b99a:	je     0x6400b9ac
6400b99c:	test   DWORD PTR [ebp+0x0],0x2000
6400b9a3:	je     0x6400b9ac
6400b9a5:	or     DWORD PTR [ebp+0x4],0x2000
6400b9ac:	test   DWORD PTR [esi+0x8],0x20000000
6400b9b3:	je     0x6400b9d6
6400b9b5:	mov    eax,DWORD PTR [esi+0xc]
6400b9b8:	test   al,0x4
6400b9ba:	je     0x6400b9c3
6400b9bc:	test   BYTE PTR [esp+0x14],0x8
6400b9c1:	jne    0x6400b9ce
6400b9c3:	test   al,0x8
6400b9c5:	je     0x6400b9d6
6400b9c7:	test   BYTE PTR [esp+0x14],0x10
6400b9cc:	je     0x6400b9d6
6400b9ce:	mov    ax,WORD PTR [esi+0x12]
6400b9d2:	mov    WORD PTR [edi+0x10],ax
6400b9d6:	mov    eax,DWORD PTR [esp+0xc]
6400b9da:	and    eax,0x3
6400b9dd:	shl    eax,0xa
6400b9e0:	or     WORD PTR [edi+0xa],ax
6400b9e4:	test   DWORD PTR [esi+0x8],0x80000000
6400b9eb:	movzx  eax,WORD PTR [edi+0xa]
6400b9ef:	je     0x6400b9f8
6400b9f1:	or     eax,0x40
6400b9f4:	mov    WORD PTR [edi+0xa],ax
6400b9f8:	push   ebp
6400b9f9:	call   0x6400d9b0
6400b9fe:	mov    WORD PTR [edi+0x38],ax
6400ba02:	mov    cl,BYTE PTR [esi+0x1]
6400ba05:	add    esp,0x4
6400ba08:	cmp    BYTE PTR [edi+0xc],0x0
6400ba0c:	mov    BYTE PTR [edi+0x3a],cl
6400ba0f:	jne    0x6400ba15
6400ba11:	mov    BYTE PTR [edi+0xc],0xff
6400ba15:	mov    al,BYTE PTR [edi+0xd]
6400ba18:	cmp    al,0xff
6400ba1a:	je     0x6400ba2b
6400ba1c:	movzx  edx,al
6400ba1f:	mov    ax,WORD PTR [edx*2+0x64048b90]
6400ba27:	or     WORD PTR [edi+0x3c],ax
6400ba2b:	mov    cl,BYTE PTR [ebx+0x10]
6400ba2e:	sub    cl,BYTE PTR [esp+0x1c]
6400ba32:	pop    esi
6400ba33:	mov    BYTE PTR [edi+0x8],cl
6400ba36:	mov    eax,0x1
6400ba3b:	pop    ebp
6400ba3c:	add    esp,0x18
6400ba3f:	ret    
6400ba40:	sub    esp,0x90
6400ba46:	push   ebx
6400ba47:	push   ebp
6400ba48:	push   esi
6400ba49:	or     eax,0xffffffff
6400ba4c:	push   edi
6400ba4d:	mov    edi,DWORD PTR [esp+0xa4]
6400ba54:	mov    ebp,DWORD PTR [edi]
6400ba56:	mov    ecx,DWORD PTR [edi+0x4]
6400ba59:	mov    ebx,DWORD PTR [edi+0x10]
6400ba5c:	mov    edx,DWORD PTR [edi+0x14]
6400ba5f:	mov    DWORD PTR [esp+0x2c],eax
6400ba63:	mov    DWORD PTR [esp+0x30],eax
6400ba67:	mov    eax,DWORD PTR [edi+0x1c]
6400ba6a:	xor    esi,esi
6400ba6c:	test   al,0x2
6400ba6e:	mov    DWORD PTR [esp+0x1c],ebp
6400ba72:	mov    DWORD PTR [esp+0x20],ecx
6400ba76:	mov    DWORD PTR [esp+0x18],ebx
6400ba7a:	mov    DWORD PTR [esp+0x14],edx
6400ba7e:	je     0x6400ba8a
6400ba80:	mov    DWORD PTR [esp+0x2c],0xffffffff
6400ba88:	jmp    0x6400ba96
6400ba8a:	test   al,0x1
6400ba8c:	je     0x6400ba9a
6400ba8e:	mov    DWORD PTR [esp+0x2c],0xffff
6400ba96:	mov    DWORD PTR [esp+0x30],esi
6400ba9a:	test   edx,edx
6400ba9c:	mov    eax,DWORD PTR [esp+0xb4]
6400baa3:	mov    DWORD PTR [eax],esi
6400baa5:	mov    eax,DWORD PTR [edi+0x18]
6400baa8:	mov    DWORD PTR [esp+0x98],eax
6400baaf:	mov    DWORD PTR [edi+0x8],ebp
6400bab2:	mov    DWORD PTR [edi+0xc],ecx
6400bab5:	jg     0x6400bad8
6400bab7:	pop    edi
6400bab8:	pop    esi
6400bab9:	pop    ebp
6400baba:	mov    eax,0x1
6400babf:	pop    ebx
6400bac0:	add    esp,0x90
6400bac6:	ret    
6400bac7:	jmp    0x6400bad0
6400bac9:	lea    esp,[esp+0x0]
6400bad0:	mov    ecx,DWORD PTR [esp+0x20]
6400bad4:	mov    ebp,DWORD PTR [esp+0x1c]
6400bad8:	push   0x2c
6400bada:	mov    DWORD PTR [esp+0x3c],ecx
6400bade:	lea    ecx,[esp+0x44]
6400bae2:	push   0x0
6400bae4:	push   ecx
6400bae5:	call   0x64015170
6400baea:	mov    edx,DWORD PTR [esp+0xa4]
6400baf1:	or     eax,0xffffffff
6400baf4:	mov    DWORD PTR [esp+0x78],eax
6400baf8:	mov    DWORD PTR [esp+0x7c],eax
6400bafc:	mov    DWORD PTR [esp+0x80],eax
6400bb03:	mov    DWORD PTR [esp+0x84],eax
6400bb0a:	mov    DWORD PTR [esp+0x88],eax
6400bb11:	mov    DWORD PTR [esp+0x54],ebx
6400bb15:	mov    DWORD PTR [esp+0x58],ebx
6400bb19:	movzx  eax,BYTE PTR [ebx]
6400bb1c:	push   edx
6400bb1d:	push   eax
6400bb1e:	mov    DWORD PTR [esp+0x38],0x0
6400bb26:	call   0x6400d860
6400bb2b:	add    esp,0x14
6400bb2e:	test   eax,eax
6400bb30:	je     0x6400bc5e
6400bb36:	mov    ecx,DWORD PTR [esp+0x98]
6400bb3d:	mov    eax,DWORD PTR [esp+0x14]
6400bb41:	push   ecx
6400bb42:	lea    edx,[esp+0x44]
6400bb46:	push   edx
6400bb47:	push   eax
6400bb48:	push   ebx
6400bb49:	call   0x6400da40
6400bb4e:	mov    ecx,DWORD PTR [esp+0x5c]
6400bb52:	mov    eax,ecx
6400bb54:	sub    eax,DWORD PTR [esp+0x58]
6400bb58:	add    esp,0x10
6400bb5b:	sub    DWORD PTR [esp+0x14],eax
6400bb5f:	mov    DWORD PTR [esp+0x24],eax
6400bb63:	je     0x6400bb6e
6400bb65:	cmp    eax,0xf
6400bb68:	jne    0x6400bc46
6400bb6e:	mov    edx,DWORD PTR [edi+0x1c]
6400bb71:	not    edx
6400bb73:	test   dl,0x4
6400bb76:	je     0x6400bc3b
6400bb7c:	sub    ecx,ebx
6400bb7e:	lea    edx,[ecx+esi*1]
6400bb81:	cmp    edx,DWORD PTR [esp+0xb0]
6400bb88:	ja     0x6400bf61
6400bb8e:	cmp    ebx,DWORD PTR [esp+0x4c]
6400bb92:	jae    0x6400bc32
6400bb98:	mov    edx,DWORD PTR [esp+0xac]
6400bb9f:	mov    edi,esi
6400bba1:	imul   edi,edi,0xa8
6400bba7:	mov    eax,esi
6400bba9:	shl    eax,0x6
6400bbac:	add    eax,edx
6400bbae:	add    edi,edx
6400bbb0:	add    esi,ecx
6400bbb2:	mov    DWORD PTR [esp+0x10],esi
6400bbb6:	jmp    0x6400bbc4
6400bbb8:	jmp    0x6400bbc0
6400bbba:	lea    ebx,[ebx+0x0]
6400bbc0:	mov    eax,DWORD PTR [esp+0x28]
6400bbc4:	cmp    DWORD PTR [esp+0xa8],0x0
6400bbcc:	mov    esi,edi
6400bbce:	jne    0x6400bbd2
6400bbd0:	mov    esi,eax
6400bbd2:	push   0x40
6400bbd4:	add    eax,0x40
6400bbd7:	push   0x0
6400bbd9:	push   esi
6400bbda:	add    edi,0xa8
6400bbe0:	mov    DWORD PTR [esp+0x34],eax
6400bbe4:	call   0x64015170
6400bbe9:	mov    ecx,DWORD PTR [esp+0x38]
6400bbed:	mov    edx,DWORD PTR [esp+0x3c]
6400bbf1:	and    edx,DWORD PTR [esp+0x44]
6400bbf5:	mov    WORD PTR [esi+0xa],0xffff
6400bbfb:	mov    al,BYTE PTR [ebx]
6400bbfd:	and    ecx,ebp
6400bbff:	add    esp,0xc
6400bc02:	add    ebx,0x1
6400bc05:	add    ebp,0x1
6400bc08:	adc    DWORD PTR [esp+0x38],0x0
6400bc0d:	cmp    ebx,DWORD PTR [esp+0x4c]
6400bc11:	mov    BYTE PTR [esi+0x30],al
6400bc14:	mov    BYTE PTR [esi+0x8],0x1
6400bc18:	mov    DWORD PTR [esi],ecx
6400bc1a:	mov    DWORD PTR [esi+0x4],edx
6400bc1d:	jb     0x6400bbc0
6400bc1f:	mov    eax,DWORD PTR [esp+0x24]
6400bc23:	mov    esi,DWORD PTR [esp+0x10]
6400bc27:	mov    ebx,DWORD PTR [esp+0x18]
6400bc2b:	mov    edi,DWORD PTR [esp+0xa4]
6400bc32:	mov    ecx,DWORD PTR [esp+0xb4]
6400bc39:	mov    DWORD PTR [ecx],esi
6400bc3b:	cmp    DWORD PTR [esp+0x14],0x0
6400bc40:	je     0x6400bab7
6400bc46:	add    ebx,eax
6400bc48:	add    DWORD PTR [esp+0x1c],eax
6400bc4c:	mov    DWORD PTR [esp+0x18],ebx
6400bc50:	adc    DWORD PTR [esp+0x20],0x0
6400bc55:	cmp    eax,0xf
6400bc58:	je     0x6400bf46
6400bc5e:	cmp    DWORD PTR [esp+0x98],0x2
6400bc66:	jne    0x6400bcbb
6400bc68:	test   DWORD PTR [esp+0x40],0x2000000
6400bc70:	je     0x6400bc9a
6400bc72:	add    ebx,0xffffffff
6400bc75:	cmp    DWORD PTR [esp+0x54],ebx
6400bc79:	je     0x6400bc9a
6400bc7b:	and    DWORD PTR [esp+0x40],0xfdffffff
6400bc83:	lea    edx,[esp+0x40]
6400bc87:	push   0x0
6400bc89:	push   edx
6400bc8a:	mov    DWORD PTR [esp+0x60],0x0
6400bc92:	call   0x6400d970
6400bc97:	add    esp,0x8
6400bc9a:	test   DWORD PTR [esp+0x40],0x780
6400bca2:	je     0x6400bcbb
6400bca4:	and    DWORD PTR [esp+0x40],0xfffff87f
6400bcac:	lea    eax,[esp+0x40]
6400bcb0:	push   0x2
6400bcb2:	push   eax
6400bcb3:	call   0x6400d970
6400bcb8:	add    esp,0x8
6400bcbb:	lea    eax,[esi+0x1]
6400bcbe:	cmp    eax,DWORD PTR [esp+0xb0]
6400bcc5:	ja     0x6400bf61
6400bccb:	cmp    DWORD PTR [esp+0xa8],0x0
6400bcd3:	je     0x6400bcdd
6400bcd5:	imul   esi,esi,0xa8
6400bcdb:	jmp    0x6400bce0
6400bcdd:	shl    esi,0x6
6400bce0:	add    esi,DWORD PTR [esp+0xac]
6400bce7:	mov    ecx,DWORD PTR [esp+0x18]
6400bceb:	mov    edx,DWORD PTR [esp+0x14]
6400bcef:	mov    DWORD PTR [esp+0x10],eax
6400bcf3:	lea    eax,[esp+0x40]
6400bcf7:	mov    edi,esi
6400bcf9:	push   eax
6400bcfa:	lea    ebx,[esp+0x84]
6400bd01:	mov    DWORD PTR [esp+0x94],ecx
6400bd08:	mov    DWORD PTR [esp+0x98],edx
6400bd0f:	call   0x6400b5b0
6400bd14:	mov    ecx,DWORD PTR [esp+0xa8]
6400bd1b:	add    esp,0x4
6400bd1e:	test   BYTE PTR [ecx+0x1c],0x4
6400bd22:	mov    DWORD PTR [esp+0x28],eax
6400bd26:	je     0x6400bd36
6400bd28:	test   BYTE PTR [edi+0x3a],0x7
6400bd2c:	jne    0x6400bd36
6400bd2e:	mov    DWORD PTR [esp+0x28],0x4
6400bd36:	mov    ecx,DWORD PTR [esp+0x30]
6400bd3a:	and    DWORD PTR [edi+0x2c],ecx
6400bd3d:	mov    eax,DWORD PTR [esp+0x2c]
6400bd41:	and    DWORD PTR [edi+0x28],eax
6400bd44:	mov    esi,ecx
6400bd46:	mov    cl,BYTE PTR [edi+0x8]
6400bd49:	and    esi,DWORD PTR [esp+0x38]
6400bd4d:	movzx  ebx,cl
6400bd50:	sub    DWORD PTR [esp+0x14],ebx
6400bd54:	mov    edx,eax
6400bd56:	and    edx,ebp
6400bd58:	mov    DWORD PTR [edi],edx
6400bd5a:	mov    eax,ebx
6400bd5c:	cdq    
6400bd5d:	add    DWORD PTR [esp+0x1c],eax
6400bd61:	mov    eax,DWORD PTR [esp+0x24]
6400bd65:	mov    DWORD PTR [edi+0x4],esi
6400bd68:	adc    DWORD PTR [esp+0x20],edx
6400bd6c:	mov    edx,DWORD PTR [esp+0x28]
6400bd70:	add    DWORD PTR [esp+0x18],ebx
6400bd74:	add    cl,al
6400bd76:	cmp    edx,0x3
6400bd79:	mov    BYTE PTR [edi+0x8],cl
6400bd7c:	jne    0x6400be69
6400bd82:	mov    ecx,DWORD PTR [esp+0xa4]
6400bd89:	mov    ecx,DWORD PTR [ecx+0x1c]
6400bd8c:	not    ecx
6400bd8e:	test   cl,0x4
6400bd91:	je     0x6400be73
6400bd97:	mov    esi,DWORD PTR [esp+0x10]
6400bd9b:	sub    esi,0x1
6400bd9e:	lea    ecx,[eax+0x1]
6400bda1:	test   ecx,ecx
6400bda3:	mov    DWORD PTR [esp+0x10],esi
6400bda7:	jbe    0x6400be73
6400bdad:	lea    eax,[eax+esi*1+0x1]
6400bdb1:	cmp    eax,DWORD PTR [esp+0xb0]
6400bdb8:	ja     0x6400bf61
6400bdbe:	mov    ecx,DWORD PTR [esp+0x4c]
6400bdc2:	mov    ebx,DWORD PTR [esp+0x48]
6400bdc6:	add    ecx,0x1
6400bdc9:	cmp    ebx,ecx
6400bdcb:	mov    DWORD PTR [esp+0x3c],ecx
6400bdcf:	jae    0x6400be73
6400bdd5:	mov    edx,DWORD PTR [esp+0xac]
6400bddc:	mov    eax,esi
6400bdde:	imul   esi,esi,0xa8
6400bde4:	shl    eax,0x6
6400bde7:	sub    ecx,ebx
6400bde9:	add    eax,edx
6400bdeb:	add    esi,edx
6400bded:	add    DWORD PTR [esp+0x10],ecx
6400bdf1:	jmp    0x6400be04
6400bdf3:	jmp    0x6400be00
6400bdf5:	lea    esp,[esp+0x0]
6400bdfc:	lea    esp,[esp+0x0]
6400be00:	mov    eax,DWORD PTR [esp+0x24]
6400be04:	cmp    DWORD PTR [esp+0xa8],0x0
6400be0c:	mov    edi,esi
6400be0e:	jne    0x6400be12
6400be10:	mov    edi,eax
6400be12:	push   0x40
6400be14:	add    eax,0x40
6400be17:	push   0x0
6400be19:	push   edi
6400be1a:	add    esi,0xa8
6400be20:	mov    DWORD PTR [esp+0x30],eax
6400be24:	call   0x64015170
6400be29:	mov    eax,DWORD PTR [esp+0x44]
6400be2d:	mov    edx,DWORD PTR [esp+0x38]
6400be31:	mov    WORD PTR [edi+0xa],0xffff
6400be37:	mov    cl,BYTE PTR [ebx]
6400be39:	mov    BYTE PTR [edi+0x30],cl
6400be3c:	mov    ecx,DWORD PTR [esp+0x3c]
6400be40:	and    ecx,eax
6400be42:	and    edx,ebp
6400be44:	add    esp,0xc
6400be47:	add    ebx,0x1
6400be4a:	add    ebp,0x1
6400be4d:	adc    eax,0x0
6400be50:	cmp    ebx,DWORD PTR [esp+0x3c]
6400be54:	mov    BYTE PTR [edi+0x8],0x1
6400be58:	mov    DWORD PTR [edi],edx
6400be5a:	mov    DWORD PTR [edi+0x4],ecx
6400be5d:	mov    DWORD PTR [esp+0x38],eax
6400be61:	jb     0x6400be00
6400be63:	mov    edx,DWORD PTR [esp+0x28]
6400be67:	jmp    0x6400be73
6400be69:	cmp    edx,0x4
6400be6c:	jne    0x6400be73
6400be6e:	sub    DWORD PTR [esp+0x10],0x1
6400be73:	cmp    edx,0x1
6400be76:	mov    eax,DWORD PTR [esp+0xb4]
6400be7d:	mov    ecx,DWORD PTR [esp+0x10]
6400be81:	mov    DWORD PTR [eax],ecx
6400be83:	mov    ecx,DWORD PTR [esp+0x1c]
6400be87:	mov    eax,DWORD PTR [esp+0xa4]
6400be8e:	mov    DWORD PTR [eax+0x8],ecx
6400be91:	mov    ecx,DWORD PTR [esp+0x20]
6400be95:	mov    DWORD PTR [eax+0xc],ecx
6400be98:	jne    0x6400bf37
6400be9e:	mov    eax,DWORD PTR [eax+0x1c]
6400bea1:	test   eax,0x3f8
6400bea6:	je     0x6400bf37
6400beac:	test   al,0x8
6400beae:	je     0x6400bebf
6400beb0:	mov    dl,BYTE PTR [edi+0x3a]
6400beb3:	and    dl,0x7
6400beb6:	cmp    dl,0x1
6400beb9:	je     0x6400bab7
6400bebf:	test   al,0x10
6400bec1:	je     0x6400bed2
6400bec3:	mov    cl,BYTE PTR [edi+0x3a]
6400bec6:	and    cl,0x7
6400bec9:	cmp    cl,0x2
6400becc:	je     0x6400bab7
6400bed2:	test   al,0x20
6400bed4:	je     0x6400bee5
6400bed6:	mov    dl,BYTE PTR [edi+0x3a]
6400bed9:	and    dl,0x7
6400bedc:	cmp    dl,0x3
6400bedf:	je     0x6400bab7
6400bee5:	test   al,0x40
6400bee7:	je     0x6400bef8
6400bee9:	mov    cl,BYTE PTR [edi+0x3a]
6400beec:	and    cl,0x7
6400beef:	cmp    cl,0x4
6400bef2:	je     0x6400bab7
6400bef8:	test   al,al
6400befa:	jns    0x6400bf0b
6400befc:	mov    dl,BYTE PTR [edi+0x3a]
6400beff:	and    dl,0x7
6400bf02:	cmp    dl,0x5
6400bf05:	je     0x6400bab7
6400bf0b:	test   eax,0x100
6400bf10:	je     0x6400bf21
6400bf12:	mov    cl,BYTE PTR [edi+0x3a]
6400bf15:	and    cl,0x7
6400bf18:	cmp    cl,0x6
6400bf1b:	je     0x6400bab7
6400bf21:	test   eax,0x200
6400bf26:	je     0x6400bf37
6400bf28:	mov    dl,BYTE PTR [edi+0x3a]
6400bf2b:	and    dl,0x7
6400bf2e:	cmp    dl,0x7
6400bf31:	je     0x6400bab7
6400bf37:	mov    esi,DWORD PTR [esp+0x10]
6400bf3b:	mov    ebx,DWORD PTR [esp+0x18]
6400bf3f:	mov    edi,DWORD PTR [esp+0xa4]
6400bf46:	cmp    DWORD PTR [esp+0x14],0x0
6400bf4b:	jg     0x6400bad0
6400bf51:	pop    edi
6400bf52:	pop    esi
6400bf53:	pop    ebp
6400bf54:	mov    eax,0x1
6400bf59:	pop    ebx
6400bf5a:	add    esp,0x90
6400bf60:	ret    
6400bf61:	pop    edi
6400bf62:	pop    esi
6400bf63:	pop    ebp
6400bf64:	mov    eax,0x2
6400bf69:	pop    ebx
6400bf6a:	add    esp,0x90
6400bf70:	ret    
6400bf71:	int3   
6400bf72:	int3   
6400bf73:	int3   
6400bf74:	int3   
6400bf75:	int3   
6400bf76:	int3   
6400bf77:	int3   
6400bf78:	int3   
6400bf79:	int3   
6400bf7a:	int3   
6400bf7b:	int3   
6400bf7c:	int3   
6400bf7d:	int3   
6400bf7e:	int3   
6400bf7f:	int3   
6400bf80:	mov    eax,DWORD PTR [esp+0x8]
6400bf84:	mul    DWORD PTR [esp+0xc]
6400bf88:	test   edx,edx
6400bf8a:	ja     0x6400bf91
6400bf8c:	cmp    eax,0xffffffff
6400bf8f:	jbe    0x6400bf97
6400bf91:	mov    eax,0x80070057
6400bf96:	ret    
6400bf97:	mov    ecx,DWORD PTR [esp+0x4]
6400bf9b:	mov    DWORD PTR [ecx],eax
6400bf9d:	xor    eax,eax
6400bf9f:	ret    
6400bfa0:	lea    ecx,[eax-0x4]
6400bfa3:	cmp    ecx,0x3
6400bfa6:	ja     0x6400bfac
6400bfa8:	add    eax,0x3c
6400bfab:	ret    
6400bfac:	add    eax,0x30
6400bfaf:	ret    
6400bfb0:	mov    cl,BYTE PTR [esp+0x4]
6400bfb4:	mov    BYTE PTR [eax],cl
6400bfb6:	mov    WORD PTR [eax+0x2],dx
6400bfba:	ret    0x4
6400bfbd:	int3   
6400bfbe:	int3   
6400bfbf:	int3   
6400bfc0:	mov    cl,BYTE PTR [esp+0x4]
6400bfc4:	mov    dl,BYTE PTR [esp+0xc]
6400bfc8:	mov    BYTE PTR [eax],cl
6400bfca:	mov    cx,WORD PTR [esp+0x8]
6400bfcf:	mov    BYTE PTR [eax+0x1],dl
6400bfd2:	mov    WORD PTR [eax+0x2],cx
6400bfd6:	ret    0xc
6400bfd9:	int3   
6400bfda:	int3   
6400bfdb:	int3   
6400bfdc:	int3   
6400bfdd:	int3   
6400bfde:	int3   
6400bfdf:	int3   
6400bfe0:	sub    DWORD PTR [eax+0x14],esi
6400bfe3:	jns    0x6400bfe8
6400bfe5:	xor    eax,eax
6400bfe7:	ret    
6400bfe8:	lea    edx,[esi-0x1]
6400bfeb:	cmp    edx,0x7
6400bfee:	ja     0x6400c038
6400bff0:	jmp    DWORD PTR [edx*4+0x6400c044]
6400bff7:	mov    edx,DWORD PTR [eax+0x10]
6400bffa:	mov    dl,BYTE PTR [edx]
6400bffc:	mov    BYTE PTR [ecx],dl
6400bffe:	add    DWORD PTR [eax+0x10],esi
6400c001:	mov    eax,0x1
6400c006:	ret    
6400c007:	mov    edx,DWORD PTR [eax+0x10]
6400c00a:	mov    dx,WORD PTR [edx]
6400c00d:	mov    WORD PTR [ecx],dx
6400c010:	add    DWORD PTR [eax+0x10],esi
6400c013:	mov    eax,0x1
6400c018:	ret    
6400c019:	mov    edx,DWORD PTR [eax+0x10]
6400c01c:	mov    edx,DWORD PTR [edx]
6400c01e:	mov    DWORD PTR [ecx],edx
6400c020:	add    DWORD PTR [eax+0x10],esi
6400c023:	mov    eax,0x1
6400c028:	ret    
6400c029:	mov    edx,DWORD PTR [eax+0x10]
6400c02c:	push   edi
6400c02d:	mov    edi,DWORD PTR [edx]
6400c02f:	mov    DWORD PTR [ecx],edi
6400c031:	mov    edx,DWORD PTR [edx+0x4]
6400c034:	mov    DWORD PTR [ecx+0x4],edx
6400c037:	pop    edi
6400c038:	add    DWORD PTR [eax+0x10],esi
6400c03b:	mov    eax,0x1
6400c040:	ret    
6400c041:	lea    ecx,[ecx+0x0]
6400c044:	idiv   DWORD PTR [edi-0x3ff89c00]
6400c04a:	add    BYTE PTR [eax+edi*1-0x40],ah
6400c04e:	add    BYTE PTR [ecx+ebx*1-0x40],ah
6400c052:	add    BYTE PTR [eax+edi*1-0x40],ah
6400c056:	add    BYTE PTR [eax+edi*1-0x40],ah
6400c05a:	add    BYTE PTR [eax+edi*1-0x40],ah
6400c05e:	add    BYTE PTR [ecx+ebp*1-0x40],ah
6400c062:	add    BYTE PTR [esp+ecx*8-0x34],ah
6400c066:	int3   
6400c067:	int3   
6400c068:	int3   
6400c069:	int3   
6400c06a:	int3   
6400c06b:	int3   
6400c06c:	int3   
6400c06d:	int3   
6400c06e:	int3   
6400c06f:	int3   
6400c070:	sub    DWORD PTR [ecx+0x14],edi
6400c073:	jns    0x6400c078
6400c075:	xor    eax,eax
6400c077:	ret    
6400c078:	lea    eax,[edi-0x1]
6400c07b:	cmp    eax,0x7
6400c07e:	ja     0x6400c0d2
6400c080:	jmp    DWORD PTR [eax*4+0x6400c0dc]
6400c087:	mov    eax,DWORD PTR [ecx+0x10]
6400c08a:	movsx  eax,BYTE PTR [eax]
6400c08d:	cdq    
6400c08e:	mov    DWORD PTR [esi],eax
6400c090:	mov    DWORD PTR [esi+0x4],edx
6400c093:	add    DWORD PTR [ecx+0x10],edi
6400c096:	mov    eax,0x1
6400c09b:	ret    
6400c09c:	mov    edx,DWORD PTR [ecx+0x10]
6400c09f:	movsx  eax,WORD PTR [edx]
6400c0a2:	cdq    
6400c0a3:	mov    DWORD PTR [esi],eax
6400c0a5:	mov    DWORD PTR [esi+0x4],edx
6400c0a8:	add    DWORD PTR [ecx+0x10],edi
6400c0ab:	mov    eax,0x1
6400c0b0:	ret    
6400c0b1:	mov    eax,DWORD PTR [ecx+0x10]
6400c0b4:	mov    eax,DWORD PTR [eax]
6400c0b6:	cdq    
6400c0b7:	mov    DWORD PTR [esi],eax
6400c0b9:	mov    DWORD PTR [esi+0x4],edx
6400c0bc:	add    DWORD PTR [ecx+0x10],edi
6400c0bf:	mov    eax,0x1
6400c0c4:	ret    
6400c0c5:	mov    eax,DWORD PTR [ecx+0x10]
6400c0c8:	mov    edx,DWORD PTR [eax]
6400c0ca:	mov    DWORD PTR [esi],edx
6400c0cc:	mov    eax,DWORD PTR [eax+0x4]
6400c0cf:	mov    DWORD PTR [esi+0x4],eax
6400c0d2:	add    DWORD PTR [ecx+0x10],edi
6400c0d5:	mov    eax,0x1
6400c0da:	ret    
6400c0db:	nop
6400c0dc:	xchg   eax,eax
6400c0de:	add    BYTE PTR [esp+ebx*4-0x40],ah
6400c0e2:	add    BYTE PTR [edx+edx*8-0x40],ah
6400c0e6:	add    BYTE PTR [ecx+esi*4-0x40],ah
6400c0ea:	add    BYTE PTR [edx+edx*8-0x40],ah
6400c0ee:	add    BYTE PTR [edx+edx*8-0x40],ah
6400c0f2:	add    BYTE PTR [edx+edx*8-0x40],ah
6400c0f6:	add    BYTE PTR [ebp+eax*8-0x40],ah
6400c0fa:	add    BYTE PTR [esp+ecx*8-0x34],ah
6400c0fe:	int3   
6400c0ff:	int3   
6400c100:	mov    eax,DWORD PTR [edi+0x28]
6400c103:	push   ebx
6400c104:	push   ebp
6400c105:	push   esi
6400c106:	mov    esi,edx
6400c108:	mov    ebx,edx
6400c10a:	shr    esi,0x6
6400c10d:	shr    ebx,0x3
6400c110:	and    esi,0x3
6400c113:	and    ebx,0x7
6400c116:	and    edx,0x7
6400c119:	test   al,0x2
6400c11b:	je     0x6400c127
6400c11d:	or     DWORD PTR [edi+0x4],0x2000000
6400c124:	add    ebx,0x8
6400c127:	cmp    ebx,0x4
6400c12a:	jne    0x6400c13f
6400c12c:	mov    ecx,DWORD PTR [esp+0x10]
6400c130:	mov    ebp,DWORD PTR [esp+0x14]
6400c134:	mov    BYTE PTR [ecx+ebp*4+0x12],0x6
6400c139:	lea    ebp,[ecx+ebp*4+0x13]
6400c13d:	jmp    0x6400c153
6400c13f:	mov    ebp,DWORD PTR [esp+0x10]
6400c143:	mov    ecx,DWORD PTR [esp+0x14]
6400c147:	mov    BYTE PTR [ebp+ecx*4+0x12],0x7
6400c14c:	mov    ecx,DWORD PTR [esp+0x10]
6400c150:	add    ebp,0xd
6400c153:	cmp    edx,0x5
6400c156:	je     0x6400c19a
6400c158:	test   al,0x1
6400c15a:	je     0x6400c163
6400c15c:	or     DWORD PTR [edi+0x4],0x2000000
6400c163:	and    al,0x1
6400c165:	add    al,al
6400c167:	add    al,al
6400c169:	add    al,al
6400c16b:	cmp    DWORD PTR [esp+0x18],0x2
6400c170:	sete   cl
6400c173:	sub    cl,0x1
6400c176:	and    ecx,0x10
6400c179:	add    al,cl
6400c17b:	mov    ecx,DWORD PTR [esp+0x10]
6400c17f:	add    al,dl
6400c181:	cmp    ebx,0x4
6400c184:	mov    BYTE PTR [ebp+0x0],al
6400c187:	je     0x6400c1fd
6400c189:	cmp    DWORD PTR [esp+0x18],0x2
6400c18e:	jne    0x6400c1d5
6400c190:	mov    eax,DWORD PTR [esp+0x14]
6400c194:	mov    BYTE PTR [ecx+eax*4+0x13],bl
6400c198:	jmp    0x6400c1e0
6400c19a:	cmp    DWORD PTR [esp+0x1c],0x0
6400c19f:	je     0x6400c1c3
6400c1a1:	test   al,0x1
6400c1a3:	je     0x6400c1ac
6400c1a5:	or     DWORD PTR [edi+0x4],0x2000000
6400c1ac:	and    al,0x1
6400c1ae:	add    al,al
6400c1b0:	add    al,al
6400c1b2:	add    al,al
6400c1b4:	cmp    DWORD PTR [esp+0x18],0x2
6400c1b9:	jne    0x6400c1bf
6400c1bb:	add    al,0x5
6400c1bd:	jmp    0x6400c181
6400c1bf:	add    al,0x15
6400c1c1:	jmp    0x6400c181
6400c1c3:	cmp    ebx,0x4
6400c1c6:	jne    0x6400c189
6400c1c8:	mov    edx,DWORD PTR [esp+0x14]
6400c1cc:	pop    esi
6400c1cd:	pop    ebp
6400c1ce:	mov    BYTE PTR [ecx+edx*4+0x12],0x5
6400c1d3:	pop    ebx
6400c1d4:	ret    
6400c1d5:	mov    edx,DWORD PTR [esp+0x14]
6400c1d9:	add    bl,0x10
6400c1dc:	mov    BYTE PTR [ecx+edx*4+0x13],bl
6400c1e0:	test   esi,esi
6400c1e2:	je     0x6400c1f8
6400c1e4:	mov    ecx,esi
6400c1e6:	mov    eax,0x1
6400c1eb:	shl    eax,cl
6400c1ed:	mov    ecx,DWORD PTR [esp+0x10]
6400c1f1:	pop    esi
6400c1f2:	pop    ebp
6400c1f3:	mov    BYTE PTR [ecx+0xe],al
6400c1f6:	pop    ebx
6400c1f7:	ret    
6400c1f8:	xor    eax,eax
6400c1fa:	mov    BYTE PTR [ecx+0xe],al
6400c1fd:	pop    esi
6400c1fe:	pop    ebp
6400c1ff:	pop    ebx
6400c200:	ret    
6400c201:	int3   
6400c202:	int3   
6400c203:	int3   
6400c204:	int3   
6400c205:	int3   
6400c206:	int3   
6400c207:	int3   
6400c208:	int3   
6400c209:	int3   
6400c20a:	int3   
6400c20b:	int3   
6400c20c:	int3   
6400c20d:	int3   
6400c20e:	int3   
6400c20f:	int3   
6400c210:	mov    edx,DWORD PTR [esp+0x20]
6400c214:	push   ebx
6400c215:	push   ebp
6400c216:	mov    ebp,DWORD PTR [esp+0x1c]
6400c21a:	push   esi
6400c21b:	xor    esi,esi
6400c21d:	cmp    edx,0x3
6400c220:	push   edi
6400c221:	mov    edi,DWORD PTR [esp+0x1c]
6400c225:	mov    ebx,ecx
6400c227:	mov    ecx,DWORD PTR [ebp+0x28]
6400c22a:	mov    DWORD PTR [esp+0x24],esi
6400c22e:	jne    0x6400c449
6400c234:	mov    edx,DWORD PTR [esp+0x18]
6400c238:	mov    eax,DWORD PTR [esp+0x20]
6400c23c:	mov    BYTE PTR [edx+eax*4+0x12],0x1
6400c241:	lea    eax,[edx+eax*4+0x14]
6400c245:	movzx  edx,WORD PTR [eax]
6400c248:	lea    esi,[edi-0xf]
6400c24b:	cmp    esi,0x4c
6400c24e:	mov    DWORD PTR [esp+0x30],eax
6400c252:	ja     0x6400c49b
6400c258:	movzx  eax,BYTE PTR [esi+0x6400c730]
6400c25f:	jmp    DWORD PTR [eax*4+0x6400c6fc]
6400c266:	mov    eax,DWORD PTR [esp+0x28]
6400c26a:	sub    eax,0x0
6400c26d:	je     0x6400c2e0
6400c26f:	sub    eax,0x1
6400c272:	je     0x6400c2a1
6400c274:	sub    eax,0x1
6400c277:	jne    0x6400c2c3
6400c279:	cmp    edi,0x1c
6400c27c:	mov    eax,0x2000000
6400c281:	jne    0x6400c286
6400c283:	or     DWORD PTR [ebp+0x4],eax
6400c286:	test   DWORD PTR [esp+0x34],eax
6400c28a:	je     0x6400c28f
6400c28c:	or     DWORD PTR [ebp+0x4],eax
6400c28f:	test   cl,0x1
6400c292:	je     0x6400c29a
6400c294:	or     DWORD PTR [ebp+0x4],eax
6400c297:	add    ebx,0x8
6400c29a:	mov    edx,0x40
6400c29f:	jmp    0x6400c2c3
6400c2a1:	or     DWORD PTR [ebp+0x4],0x2000
6400c2a8:	test   cl,0x1
6400c2ab:	mov    eax,DWORD PTR [ebp+0x4]
6400c2ae:	je     0x6400c2bb
6400c2b0:	or     eax,0x2000000
6400c2b5:	mov    DWORD PTR [ebp+0x4],eax
6400c2b8:	add    ebx,0x8
6400c2bb:	mov    edx,0x20
6400c2c0:	add    ebx,0x10
6400c2c3:	mov    eax,DWORD PTR [esp+0x30]
6400c2c7:	mov    ecx,DWORD PTR [esp+0x18]
6400c2cb:	pop    edi
6400c2cc:	mov    WORD PTR [eax],dx
6400c2cf:	mov    edx,DWORD PTR [esp+0x1c]
6400c2d3:	pop    esi
6400c2d4:	pop    ebp
6400c2d5:	mov    BYTE PTR [ecx+edx*4+0x13],bl
6400c2d9:	mov    eax,0x1
6400c2de:	pop    ebx
6400c2df:	ret    
6400c2e0:	or     DWORD PTR [ebp+0x4],0x2000
6400c2e7:	test   cl,0x1
6400c2ea:	mov    eax,DWORD PTR [ebp+0x4]
6400c2ed:	je     0x6400c2fa
6400c2ef:	or     eax,0x2000000
6400c2f4:	mov    DWORD PTR [ebp+0x4],eax
6400c2f7:	add    ebx,0x8
6400c2fa:	mov    edx,0x10
6400c2ff:	add    ebx,0x20
6400c302:	jmp    0x6400c2c3
6400c304:	test   cl,0x1
6400c307:	mov    eax,0x2000000
6400c30c:	je     0x6400c314
6400c30e:	or     DWORD PTR [ebp+0x4],eax
6400c311:	add    ebx,0x8
6400c314:	mov    edx,DWORD PTR [esp+0x14]
6400c318:	cmp    DWORD PTR [edx+0x18],0x2
6400c31c:	jne    0x6400c334
6400c31e:	mov    edx,DWORD PTR [esp+0x34]
6400c322:	and    edx,0x3000000
6400c328:	cmp    edx,0x1000000
6400c32e:	je     0x6400c43f
6400c334:	test   cl,0x8
6400c337:	je     0x6400c2bb
6400c339:	or     DWORD PTR [ebp+0x4],eax
6400c33c:	mov    edx,0x40
6400c341:	jmp    0x6400c2c3
6400c343:	test   cl,0x1
6400c346:	je     0x6400c352
6400c348:	or     DWORD PTR [ebp+0x4],0x2000000
6400c34f:	add    ebx,0x8
6400c352:	test   DWORD PTR [ebp+0x0],0x2000
6400c359:	je     0x6400c2bb
6400c35f:	or     DWORD PTR [ebp+0x4],0x2000
6400c366:	mov    edx,0x10
6400c36b:	add    ebx,0x20
6400c36e:	jmp    0x6400c2c3
6400c373:	test   cl,0x1
6400c376:	je     0x6400c382
6400c378:	or     DWORD PTR [ebp+0x4],0x2000000
6400c37f:	add    ebx,0x8
6400c382:	add    ebx,0x20
6400c385:	jmp    0x6400c2c3
6400c38a:	cmp    DWORD PTR [ebp+0x18],0x1
6400c38e:	jne    0x6400c3a9
6400c390:	or     DWORD PTR [ebp+0x4],0x2000000
6400c397:	and    ecx,0x1
6400c39a:	lea    eax,[ebx+ecx*8]
6400c39d:	call   0x6400bfa0
6400c3a2:	mov    ebx,eax
6400c3a4:	jmp    0x6400c2c3
6400c3a9:	add    ebx,0x30
6400c3ac:	jmp    0x6400c2c3
6400c3b1:	mov    edx,0x40
6400c3b6:	add    ebx,0x53
6400c3b9:	jmp    0x6400c2c3
6400c3be:	test   cl,0x1
6400c3c1:	je     0x6400c3cd
6400c3c3:	or     DWORD PTR [ebp+0x4],0x2000000
6400c3ca:	add    ebx,0x8
6400c3cd:	mov    edx,0x80
6400c3d2:	add    ebx,0x5b
6400c3d5:	jmp    0x6400c2c3
6400c3da:	test   cl,0x1
6400c3dd:	je     0x6400c2bb
6400c3e3:	or     DWORD PTR [ebp+0x4],0x2000000
6400c3ea:	jmp    0x6400c2b8
6400c3ef:	test   cl,0x1
6400c3f2:	je     0x6400c3f7
6400c3f4:	add    ebx,0x8
6400c3f7:	add    ebx,0x6b
6400c3fa:	jmp    0x6400c2c3
6400c3ff:	test   cl,0x1
6400c402:	je     0x6400c407
6400c404:	add    ebx,0x8
6400c407:	test   cl,0x10
6400c40a:	je     0x6400c3cd
6400c40c:	mov    edx,0x100
6400c411:	add    ebx,0x6b
6400c414:	jmp    0x6400c2c3
6400c419:	test   cl,0x1
6400c41c:	je     0x6400c3cd
6400c41e:	add    ebx,0x8
6400c421:	mov    edx,0x80
6400c426:	add    ebx,0x5b
6400c429:	jmp    0x6400c2c3
6400c42e:	test   cl,0x1
6400c431:	je     0x6400c436
6400c433:	add    ebx,0x8
6400c436:	test   cl,0x8
6400c439:	je     0x6400c2bb
6400c43f:	mov    edx,0x40
6400c444:	jmp    0x6400c2c3
6400c449:	or     DWORD PTR [ebp+0x4],0x4000
6400c450:	test   eax,eax
6400c452:	je     0x6400c460
6400c454:	test   BYTE PTR [ebp+0x0],0x10
6400c458:	je     0x6400c460
6400c45a:	mov    DWORD PTR [eax],0x1
6400c460:	cmp    DWORD PTR [esp+0x2c],esi
6400c464:	jne    0x6400c575
6400c46a:	test   edx,edx
6400c46c:	jne    0x6400c4a2
6400c46e:	cmp    ebx,0x6
6400c471:	jne    0x6400c4a2
6400c473:	mov    eax,DWORD PTR [esp+0x18]
6400c477:	mov    ecx,DWORD PTR [esp+0x20]
6400c47b:	mov    BYTE PTR [eax+ecx*4+0x12],0x5
6400c480:	mov    ecx,DWORD PTR [esp+0x14]
6400c484:	lea    esi,[eax+0x28]
6400c487:	lea    edi,[edx+0x2]
6400c48a:	mov    BYTE PTR [eax+0xf],0x10
6400c48e:	call   0x6400c070
6400c493:	test   eax,eax
6400c495:	jne    0x6400c53e
6400c49b:	pop    edi
6400c49c:	pop    esi
6400c49d:	pop    ebp
6400c49e:	xor    eax,eax
6400c4a0:	pop    ebx
6400c4a1:	ret    
6400c4a2:	cmp    ebx,0x4
6400c4a5:	jae    0x6400c4c9
6400c4a7:	mov    esi,DWORD PTR [esp+0x18]
6400c4ab:	mov    edi,DWORD PTR [esp+0x20]
6400c4af:	mov    BYTE PTR [esi+edi*4+0x12],0x7
6400c4b4:	mov    al,BYTE PTR [ebx+0x64048cb8]
6400c4ba:	mov    BYTE PTR [esi+0xd],al
6400c4bd:	mov    cl,BYTE PTR [ebx+0x64048cc0]
6400c4c3:	mov    BYTE PTR [esi+edi*4+0x13],cl
6400c4c7:	jmp    0x6400c4e0
6400c4c9:	mov    edi,DWORD PTR [esp+0x18]
6400c4cd:	mov    esi,DWORD PTR [esp+0x20]
6400c4d1:	mov    BYTE PTR [edi+esi*4+0x12],0x6
6400c4d6:	mov    al,BYTE PTR [ebx+0x64048cb8]
6400c4dc:	mov    BYTE PTR [edi+esi*4+0x13],al
6400c4e0:	cmp    edx,0x1
6400c4e3:	jne    0x6400c504
6400c4e5:	mov    eax,DWORD PTR [esp+0x18]
6400c4e9:	mov    ecx,DWORD PTR [esp+0x14]
6400c4ed:	lea    esi,[eax+0x28]
6400c4f0:	mov    edi,edx
6400c4f2:	mov    BYTE PTR [eax+0xf],0x8
6400c4f6:	call   0x6400c070
6400c4fb:	test   eax,eax
6400c4fd:	jne    0x6400c527
6400c4ff:	pop    edi
6400c500:	pop    esi
6400c501:	pop    ebp
6400c502:	pop    ebx
6400c503:	ret    
6400c504:	cmp    edx,0x2
6400c507:	jne    0x6400c52b
6400c509:	mov    eax,DWORD PTR [esp+0x18]
6400c50d:	mov    ecx,DWORD PTR [esp+0x14]
6400c511:	lea    esi,[eax+0x28]
6400c514:	mov    edi,edx
6400c516:	mov    BYTE PTR [eax+0xf],0x10
6400c51a:	call   0x6400c070
6400c51f:	test   eax,eax
6400c521:	je     0x6400c49b
6400c527:	mov    edx,DWORD PTR [esp+0x30]
6400c52b:	cmp    ebx,0x2
6400c52e:	je     0x6400c563
6400c530:	cmp    ebx,0x3
6400c533:	je     0x6400c563
6400c535:	cmp    ebx,0x6
6400c538:	jne    0x6400c53e
6400c53a:	test   edx,edx
6400c53c:	jne    0x6400c563
6400c53e:	mov    ecx,DWORD PTR [esp+0x18]
6400c542:	mov    edx,DWORD PTR [esp+0x14]
6400c546:	mov    eax,DWORD PTR [edx+0x18]
6400c549:	push   ecx
6400c54a:	push   eax
6400c54b:	push   ebp
6400c54c:	push   0x200
6400c551:	call   0x6400dd90
6400c556:	add    esp,0x10
6400c559:	pop    edi
6400c55a:	pop    esi
6400c55b:	pop    ebp
6400c55c:	mov    eax,0x1
6400c561:	pop    ebx
6400c562:	ret    
6400c563:	mov    ecx,DWORD PTR [esp+0x18]
6400c567:	mov    edx,DWORD PTR [esp+0x14]
6400c56b:	mov    eax,DWORD PTR [edx+0x18]
6400c56e:	push   ecx
6400c56f:	push   eax
6400c570:	jmp    0x6400c6e2
6400c575:	test   edx,edx
6400c577:	jne    0x6400c5ca
6400c579:	cmp    ebx,0x5
6400c57c:	jne    0x6400c5ca
6400c57e:	mov    ebx,DWORD PTR [esp+0x18]
6400c582:	mov    ecx,DWORD PTR [esp+0x14]
6400c586:	lea    esi,[ebx+0x28]
6400c589:	lea    edi,[edx+0x4]
6400c58c:	mov    BYTE PTR [ebx+0xf],0x20
6400c590:	call   0x6400c070
6400c595:	test   eax,eax
6400c597:	je     0x6400c49b
6400c59d:	cmp    DWORD PTR [ecx+0x18],0x2
6400c5a1:	jne    0x6400c5bc
6400c5a3:	mov    eax,DWORD PTR [esp+0x20]
6400c5a7:	mov    BYTE PTR [ebx+eax*4+0x12],0x6
6400c5ac:	mov    BYTE PTR [ebx+eax*4+0x13],0x4a
6400c5b1:	or     WORD PTR [ebx+0xa],0x80
6400c5b7:	jmp    0x6400c693
6400c5bc:	mov    ecx,DWORD PTR [esp+0x20]
6400c5c0:	mov    BYTE PTR [ebx+ecx*4+0x12],0x5
6400c5c5:	jmp    0x6400c693
6400c5ca:	cmp    ebx,0x4
6400c5cd:	jne    0x6400c611
6400c5cf:	mov    eax,DWORD PTR [esp+0x14]
6400c5d3:	lea    esi,[ebx-0x3]
6400c5d6:	lea    ecx,[esp+0x24]
6400c5da:	call   0x6400bfe0
6400c5df:	test   eax,eax
6400c5e1:	je     0x6400c49b
6400c5e7:	mov    edx,DWORD PTR [esp+0x30]
6400c5eb:	mov    eax,DWORD PTR [esp+0x2c]
6400c5ef:	mov    ecx,DWORD PTR [esp+0x20]
6400c5f3:	mov    esi,DWORD PTR [esp+0x24]
6400c5f7:	push   edx
6400c5f8:	mov    edx,DWORD PTR [esp+0x1c]
6400c5fc:	push   eax
6400c5fd:	push   ecx
6400c5fe:	push   edx
6400c5ff:	mov    edx,esi
6400c601:	mov    edi,ebp
6400c603:	call   0x6400c100
6400c608:	mov    edx,DWORD PTR [esp+0x40]
6400c60c:	add    esp,0x10
6400c60f:	jmp    0x6400c63b
6400c611:	test   cl,0x1
6400c614:	mov    edi,DWORD PTR [esp+0x18]
6400c618:	mov    eax,DWORD PTR [esp+0x20]
6400c61c:	mov    BYTE PTR [edi+eax*4+0x12],0x6
6400c621:	je     0x6400c62d
6400c623:	or     DWORD PTR [ebp+0x4],0x2000000
6400c62a:	add    ebx,0x8
6400c62d:	cmp    DWORD PTR [esp+0x2c],0x2
6400c632:	je     0x6400c637
6400c634:	add    bl,0x10
6400c637:	mov    BYTE PTR [edi+eax*4+0x13],bl
6400c63b:	cmp    edx,0x1
6400c63e:	jne    0x6400c65f
6400c640:	mov    eax,DWORD PTR [esp+0x18]
6400c644:	mov    ecx,DWORD PTR [esp+0x14]
6400c648:	lea    esi,[eax+0x28]
6400c64b:	mov    edi,edx
6400c64d:	mov    BYTE PTR [eax+0xf],0x8
6400c651:	call   0x6400c070
6400c656:	test   eax,eax
6400c658:	jne    0x6400c68f
6400c65a:	pop    edi
6400c65b:	pop    esi
6400c65c:	pop    ebp
6400c65d:	pop    ebx
6400c65e:	ret    
6400c65f:	cmp    edx,0x2
6400c662:	je     0x6400c66d
6400c664:	mov    eax,esi
6400c666:	and    eax,0x7
6400c669:	cmp    al,0x5
6400c66b:	jne    0x6400c68f
6400c66d:	mov    ebx,DWORD PTR [esp+0x18]
6400c671:	mov    ecx,DWORD PTR [esp+0x14]
6400c675:	lea    esi,[ebx+0x28]
6400c678:	mov    edi,0x4
6400c67d:	mov    BYTE PTR [ebx+0xf],0x20
6400c681:	call   0x6400c070
6400c686:	test   eax,eax
6400c688:	jne    0x6400c693
6400c68a:	pop    edi
6400c68b:	pop    esi
6400c68c:	pop    ebp
6400c68d:	pop    ebx
6400c68e:	ret    
6400c68f:	mov    ebx,DWORD PTR [esp+0x18]
6400c693:	mov    al,BYTE PTR [ebx+0xd]
6400c696:	cmp    al,0xff
6400c698:	mov    ecx,DWORD PTR [esp+0x20]
6400c69c:	movzx  ecx,BYTE PTR [ebx+ecx*4+0x13]
6400c6a1:	je     0x6400c6a8
6400c6a3:	movzx  ecx,al
6400c6a6:	jmp    0x6400c6ae
6400c6a8:	cmp    BYTE PTR [ebx+0xe],0x2
6400c6ac:	jae    0x6400c6b8
6400c6ae:	cmp    ecx,0x15
6400c6b1:	je     0x6400c6d9
6400c6b3:	cmp    ecx,0x14
6400c6b6:	je     0x6400c6d9
6400c6b8:	mov    edx,DWORD PTR [esp+0x14]
6400c6bc:	mov    eax,DWORD PTR [edx+0x18]
6400c6bf:	push   ebx
6400c6c0:	push   eax
6400c6c1:	push   ebp
6400c6c2:	push   0x200
6400c6c7:	call   0x6400dd90
6400c6cc:	add    esp,0x10
6400c6cf:	pop    edi
6400c6d0:	pop    esi
6400c6d1:	pop    ebp
6400c6d2:	mov    eax,0x1
6400c6d7:	pop    ebx
6400c6d8:	ret    
6400c6d9:	mov    ecx,DWORD PTR [esp+0x14]
6400c6dd:	mov    edx,DWORD PTR [ecx+0x18]
6400c6e0:	push   ebx
6400c6e1:	push   edx
6400c6e2:	push   ebp
6400c6e3:	push   0x100
6400c6e8:	call   0x6400dd90
6400c6ed:	add    esp,0x10
6400c6f0:	pop    edi
6400c6f1:	pop    esi
6400c6f2:	pop    ebp
6400c6f3:	mov    eax,0x1
6400c6f8:	pop    ebx
6400c6f9:	ret    
6400c6fa:	mov    edi,edi
6400c6fc:	mov    al,bl
6400c6fe:	add    BYTE PTR [ebx+esi*2-0x3d],ah
6400c702:	add    BYTE PTR [esi+eiz*2-0x3e],ah
6400c706:	add    BYTE PTR [esp+eax*1-0x3d],ah
6400c70a:	add    BYTE PTR [ebx+eax*2-0x3d],ah
6400c70e:	add    BYTE PTR [edx+ebx*8-0x3d],ah
6400c712:	add    BYTE PTR [ecx+esi*4-0x3d],ah
6400c716:	add    BYTE PTR [esi+edi*4-0x3d],ah
6400c71a:	add    BYTE PTR [esi+ebp*1-0x3c],ah
6400c71e:	add    BYTE PTR [ecx+ebx*1-0x3c],ah
6400c722:	add    BYTE PTR [edi+ebp*8-0x3d],ah
6400c726:	add    BYTE PTR [edi+edi*8-0x3d],ah
6400c72a:	add    BYTE PTR [ebx+ebx*4-0x3c],ah
6400c72e:	add    BYTE PTR [eax+eax*1+0x1],ah
6400c732:	add    al,BYTE PTR [ebx]
6400c734:	add    al,0xc
6400c736:	or     al,0xc
6400c738:	or     al,0x5
6400c73a:	add    eax,0xc020303
6400c73f:	or     al,0xc
6400c741:	or     al,0xc
6400c743:	or     al,0xc
6400c745:	or     al,0xc
6400c747:	or     al,0xc
6400c749:	or     al,0xc
6400c74b:	or     al,0xc
6400c74d:	or     al,0xc
6400c74f:	or     al,0xc
6400c751:	or     al,0xc
6400c753:	or     al,0xc
6400c755:	or     al,0xc
6400c757:	or     al,0xc
6400c759:	or     al,0xc
6400c75b:	or     al,0xc
6400c75d:	or     al,0xc
6400c75f:	or     al,0xc
6400c761:	or     al,0xc
6400c763:	push   es
6400c764:	push   es
6400c765:	or     al,0xc
6400c767:	pop    es
6400c768:	pop    es
6400c769:	pop    es
6400c76a:	pop    es
6400c76b:	or     al,0x5
6400c76d:	or     BYTE PTR [eax],cl
6400c76f:	or     al,0x8
6400c771:	or     DWORD PTR [esp+ecx*1],ecx
6400c774:	or     al,0xc
6400c776:	or     al,0xa
6400c778:	or     al,0xc
6400c77a:	or     ecx,DWORD PTR [ebx]
6400c77c:	or     esp,ecx
6400c77e:	int3   
6400c77f:	int3   
6400c780:	sub    esp,0xc
6400c783:	mov    ecx,DWORD PTR [esp+0x18]
6400c787:	mov    edx,DWORD PTR [ecx+0x8]
6400c78a:	mov    ecx,DWORD PTR [esp+0x14]
6400c78e:	push   ebx
6400c78f:	push   ebp
6400c790:	mov    ebp,DWORD PTR [esp+0x30]
6400c794:	mov    eax,DWORD PTR [ebp+0x24]
6400c797:	push   esi
6400c798:	mov    esi,DWORD PTR [esp+0x30]
6400c79c:	mov    DWORD PTR [esp+0x34],edx
6400c7a0:	mov    edx,DWORD PTR [esp+0x2c]
6400c7a4:	lea    ebx,[ecx+edx*4+0x12]
6400c7a8:	push   edi
6400c7a9:	mov    edi,esi
6400c7ab:	mov    edx,esi
6400c7ad:	and    esi,0x7
6400c7b0:	mov    DWORD PTR [esp+0x34],esi
6400c7b4:	mov    esi,DWORD PTR [esp+0x2c]
6400c7b8:	shr    edi,0x6
6400c7bb:	shr    edx,0x3
6400c7be:	mov    DWORD PTR [esp+0x18],eax
6400c7c2:	mov    eax,DWORD PTR [ebp+0x28]
6400c7c5:	and    edx,0x7
6400c7c8:	add    esi,0xffffffec
6400c7cb:	xor    ecx,ecx
6400c7cd:	and    edi,0x3
6400c7d0:	cmp    esi,0x48
6400c7d3:	mov    DWORD PTR [esp+0x14],eax
6400c7d7:	mov    DWORD PTR [esp+0x10],edx
6400c7db:	ja     0x6400c93c
6400c7e1:	movzx  esi,BYTE PTR [esi+0x6400d650]
6400c7e8:	jmp    DWORD PTR [esi*4+0x6400d61c]
6400c7ef:	mov    eax,DWORD PTR [esp+0x44]
6400c7f3:	test   eax,eax
6400c7f5:	je     0x6400c803
6400c7f7:	test   BYTE PTR [ebp+0x0],0x10
6400c7fb:	je     0x6400c803
6400c7fd:	mov    DWORD PTR [eax],0x1
6400c803:	cmp    DWORD PTR [esp+0x3c],0x2
6400c808:	jne    0x6400c829
6400c80a:	or     DWORD PTR [ebp+0x4],0x2000000
6400c811:	mov    ecx,0x6
6400c816:	jmp    0x6400c8b5
6400c81b:	cmp    DWORD PTR [esp+0x3c],0x2
6400c820:	jne    0x6400c86b
6400c822:	or     DWORD PTR [ebp+0x4],0x2000000
6400c829:	mov    ecx,0x4
6400c82e:	jmp    0x6400c8b5
6400c833:	mov    eax,DWORD PTR [esp+0x3c]
6400c837:	sub    eax,0x0
6400c83a:	je     0x6400c872
6400c83c:	sub    eax,0x1
6400c83f:	je     0x6400c864
6400c841:	sub    eax,0x1
6400c844:	jne    0x6400c8b5
6400c846:	mov    eax,DWORD PTR [esp+0x38]
6400c84a:	and    eax,0x3000000
6400c84f:	cmp    eax,0x3000000
6400c854:	jne    0x6400c829
6400c856:	or     DWORD PTR [ebp+0x4],0x2000000
6400c85d:	mov    ecx,0x4
6400c862:	jmp    0x6400c8b5
6400c864:	or     DWORD PTR [ebp+0x4],0x2000
6400c86b:	mov    ecx,0x3
6400c870:	jmp    0x6400c8b5
6400c872:	or     DWORD PTR [ebp+0x4],0x2000
6400c879:	mov    ecx,0x2
6400c87e:	jmp    0x6400c8b5
6400c880:	mov    edx,DWORD PTR [esp+0x20]
6400c884:	xor    ecx,ecx
6400c886:	cmp    DWORD PTR [edx+0x18],0x2
6400c88a:	sete   cl
6400c88d:	add    ecx,0x3
6400c890:	jmp    0x6400c8b5
6400c892:	cmp    edi,0x3
6400c895:	jne    0x6400c8d2
6400c897:	lea    eax,[edi-0x2]
6400c89a:	pop    edi
6400c89b:	pop    esi
6400c89c:	pop    ebp
6400c89d:	pop    ebx
6400c89e:	add    esp,0xc
6400c8a1:	ret    
6400c8a2:	mov    ecx,0x5
6400c8a7:	jmp    0x6400c8b5
6400c8a9:	movzx  ecx,al
6400c8ac:	and    ecx,0x10
6400c8af:	or     ecx,0x60
6400c8b2:	shr    ecx,0x4
6400c8b5:	cmp    edi,0x3
6400c8b8:	jne    0x6400c8d2
6400c8ba:	mov    eax,DWORD PTR [esp+0x44]
6400c8be:	test   eax,eax
6400c8c0:	je     0x6400c8c8
6400c8c2:	mov    DWORD PTR [eax],0x0
6400c8c8:	xor    eax,eax
6400c8ca:	pop    edi
6400c8cb:	pop    esi
6400c8cc:	pop    ebp
6400c8cd:	pop    ebx
6400c8ce:	add    esp,0xc
6400c8d1:	ret    
6400c8d2:	mov    ax,WORD PTR [ecx*2+0x64048ca8]
6400c8da:	mov    ecx,DWORD PTR [esp+0x38]
6400c8de:	mov    edx,DWORD PTR [esp+0x40]
6400c8e2:	mov    esi,DWORD PTR [esp+0x24]
6400c8e6:	push   ecx
6400c8e7:	mov    ecx,DWORD PTR [esp+0x34]
6400c8eb:	push   edi
6400c8ec:	push   edx
6400c8ed:	mov    edx,DWORD PTR [esp+0x38]
6400c8f1:	mov    WORD PTR [ebx+0x2],ax
6400c8f5:	mov    eax,DWORD PTR [esp+0x48]
6400c8f9:	push   eax
6400c8fa:	mov    eax,DWORD PTR [esp+0x30]
6400c8fe:	push   ebp
6400c8ff:	push   ecx
6400c900:	mov    ecx,DWORD PTR [esp+0x4c]
6400c904:	push   edx
6400c905:	push   esi
6400c906:	push   eax
6400c907:	mov    eax,DWORD PTR [esp+0x68]
6400c90b:	call   0x6400c210
6400c910:	mov    cl,BYTE PTR [ebx]
6400c912:	add    esp,0x24
6400c915:	cmp    cl,0x1
6400c918:	je     0x6400c924
6400c91a:	cmp    cl,0x6
6400c91d:	je     0x6400c924
6400c91f:	cmp    cl,0x7
6400c922:	jne    0x6400c8ca
6400c924:	movzx  ecx,BYTE PTR [ebx+0x1]
6400c928:	mov    dx,WORD PTR [ecx*2+0x64048b90]
6400c930:	or     WORD PTR [esi+0x3c],dx
6400c934:	pop    edi
6400c935:	pop    esi
6400c936:	pop    ebp
6400c937:	pop    ebx
6400c938:	add    esp,0xc
6400c93b:	ret    
6400c93c:	mov    esi,DWORD PTR [esp+0x2c]
6400c940:	lea    ecx,[esi-0xf]
6400c943:	cmp    ecx,0x4c
6400c946:	ja     0x6400cab6
6400c94c:	movzx  ecx,BYTE PTR [ecx+0x6400d6dc]
6400c953:	mov    esi,0x2000
6400c958:	jmp    DWORD PTR [ecx*4+0x6400d69c]
6400c95f:	or     DWORD PTR [ebp+0x4],esi
6400c962:	mov    ecx,DWORD PTR [esp+0x3c]
6400c966:	cmp    ecx,0x1
6400c969:	mov    eax,DWORD PTR [ebp+0x4]
6400c96c:	jne    0x6400c980
6400c96e:	mov    eax,0x3
6400c973:	mov    ax,WORD PTR [eax*2+0x64048ca8]
6400c97b:	jmp    0x6400c8da
6400c980:	cmp    ecx,0x2
6400c983:	jne    0x6400c9a9
6400c985:	test   DWORD PTR [esp+0x38],0x1000000
6400c98d:	jne    0x6400c997
6400c98f:	or     eax,0x2000000
6400c994:	mov    DWORD PTR [ebp+0x4],eax
6400c997:	mov    eax,0x4
6400c99c:	mov    ax,WORD PTR [eax*2+0x64048ca8]
6400c9a4:	jmp    0x6400c8da
6400c9a9:	cmp    DWORD PTR [esp+0x2c],0x10
6400c9ae:	je     0x6400c9b3
6400c9b0:	or     DWORD PTR [ebp+0x4],esi
6400c9b3:	mov    eax,0x2
6400c9b8:	mov    ax,WORD PTR [eax*2+0x64048ca8]
6400c9c0:	jmp    0x6400c8da
6400c9c5:	cmp    DWORD PTR [esp+0x3c],0x2
6400c9ca:	jne    0x6400c96e
6400c9cc:	mov    edx,DWORD PTR [esp+0x38]
6400c9d0:	and    edx,0x3000000
6400c9d6:	cmp    edx,0x3000000
6400c9dc:	mov    eax,0x4
6400c9e1:	jne    0x6400caa5
6400c9e7:	or     DWORD PTR [ebp+0x4],0x2000000
6400c9ee:	mov    ax,WORD PTR [eax*2+0x64048ca8]
6400c9f6:	jmp    0x6400c8da
6400c9fb:	test   DWORD PTR [ebp+0x0],esi
6400c9fe:	je     0x6400c96e
6400ca04:	or     DWORD PTR [ebp+0x4],esi
6400ca07:	mov    eax,0x2
6400ca0c:	mov    ax,WORD PTR [eax*2+0x64048ca8]
6400ca14:	jmp    0x6400c8da
6400ca19:	and    al,0x8
6400ca1b:	neg    al
6400ca1d:	sbb    eax,eax
6400ca1f:	neg    eax
6400ca21:	add    eax,0x3
6400ca24:	mov    ax,WORD PTR [eax*2+0x64048ca8]
6400ca2c:	jmp    0x6400c8da
6400ca31:	and    al,0x10
6400ca33:	neg    al
6400ca35:	sbb    eax,eax
6400ca37:	and    eax,0x3
6400ca3a:	add    eax,0x4
6400ca3d:	mov    ax,WORD PTR [eax*2+0x64048ca8]
6400ca45:	jmp    0x6400c8da
6400ca4a:	movzx  eax,al
6400ca4d:	and    eax,0x10
6400ca50:	or     eax,0x60
6400ca53:	shr    eax,0x4
6400ca56:	mov    ax,WORD PTR [eax*2+0x64048ca8]
6400ca5e:	jmp    0x6400c8da
6400ca63:	movzx  eax,al
6400ca66:	and    eax,0x10
6400ca69:	or     eax,0x20
6400ca6c:	shr    eax,0x3
6400ca6f:	mov    ax,WORD PTR [eax*2+0x64048ca8]
6400ca77:	jmp    0x6400c8da
6400ca7c:	mov    eax,0x1
6400ca81:	mov    ax,WORD PTR [eax*2+0x64048ca8]
6400ca89:	jmp    0x6400c8da
6400ca8e:	mov    eax,0x6
6400ca93:	mov    ax,WORD PTR [eax*2+0x64048ca8]
6400ca9b:	jmp    0x6400c8da
6400caa0:	mov    eax,0x7
6400caa5:	mov    ax,WORD PTR [eax*2+0x64048ca8]
6400caad:	jmp    0x6400c8da
6400cab2:	mov    esi,DWORD PTR [esp+0x2c]
6400cab6:	lea    ecx,[esi-0x1]
6400cab9:	cmp    ecx,0x57
6400cabc:	ja     0x6400c8c8
6400cac2:	movzx  ecx,BYTE PTR [ecx+0x6400d7fc]
6400cac9:	jmp    DWORD PTR [ecx*4+0x6400d72c]
6400cad0:	push   0x2
6400cad2:	mov    edx,0x8
6400cad7:	mov    eax,ebx
6400cad9:	call   0x6400bfb0
6400cade:	mov    ecx,DWORD PTR [esp+0x24]
6400cae2:	add    ecx,0x30
6400cae5:	mov    esi,0x1
6400caea:	mov    eax,DWORD PTR [esp+0x20]
6400caee:	call   0x6400bfe0
6400caf3:	test   eax,eax
6400caf5:	jne    0x6400ccdd
6400cafb:	pop    edi
6400cafc:	pop    esi
6400cafd:	pop    ebp
6400cafe:	pop    ebx
6400caff:	add    esp,0xc
6400cb02:	ret    
6400cb03:	mov    eax,DWORD PTR [esp+0x3c]
6400cb07:	test   eax,eax
6400cb09:	jne    0x6400cb2c
6400cb0b:	or     DWORD PTR [ebp+0x4],0x2000
6400cb12:	push   0x2
6400cb14:	mov    edx,0x10
6400cb19:	mov    eax,ebx
6400cb1b:	call   0x6400bfb0
6400cb20:	mov    ecx,DWORD PTR [esp+0x24]
6400cb24:	add    ecx,0x30
6400cb27:	lea    esi,[edx-0xe]
6400cb2a:	jmp    0x6400caea
6400cb2c:	cmp    eax,0x2
6400cb2f:	jne    0x6400cb62
6400cb31:	mov    eax,DWORD PTR [esp+0x38]
6400cb35:	and    eax,0x3000000
6400cb3a:	cmp    eax,0x3000000
6400cb3f:	jne    0x6400cb62
6400cb41:	or     DWORD PTR [ebp+0x4],0x2000000
6400cb48:	push   0x2
6400cb4a:	mov    edx,0x40
6400cb4f:	mov    eax,ebx
6400cb51:	call   0x6400bfb0
6400cb56:	mov    ecx,DWORD PTR [esp+0x24]
6400cb5a:	add    ecx,0x30
6400cb5d:	lea    esi,[edx-0x38]
6400cb60:	jmp    0x6400caea
6400cb62:	or     DWORD PTR [ebp+0x4],0x2000
6400cb69:	mov    eax,DWORD PTR [esp+0x20]
6400cb6d:	mov    ecx,DWORD PTR [esp+0x24]
6400cb71:	mov    BYTE PTR [ebx],0x2
6400cb74:	cmp    DWORD PTR [eax+0x18],0x2
6400cb78:	jne    0x6400cb99
6400cb7a:	mov    edx,0x20
6400cb7f:	mov    WORD PTR [ebx+0x2],dx
6400cb83:	or     WORD PTR [ecx+0xa],dx
6400cb87:	lea    esi,[ecx+0x30]
6400cb8a:	lea    edi,[edx-0x1c]
6400cb8d:	mov    ecx,eax
6400cb8f:	call   0x6400c070
6400cb94:	jmp    0x6400caf3
6400cb99:	mov    WORD PTR [ebx+0x2],0x20
6400cb9f:	add    ecx,0x30
6400cba2:	mov    esi,0x4
6400cba7:	jmp    0x6400caee
6400cbac:	mov    ecx,DWORD PTR [esp+0x20]
6400cbb0:	mov    esi,0x2000
6400cbb5:	test   DWORD PTR [esp+0x38],esi
6400cbb9:	mov    BYTE PTR [ebx],0x2
6400cbbc:	je     0x6400cbe5
6400cbbe:	test   DWORD PTR [ebp+0x0],esi
6400cbc1:	je     0x6400cbe5
6400cbc3:	or     DWORD PTR [ebp+0x4],esi
6400cbc6:	mov    eax,DWORD PTR [ecx+0x18]
6400cbc9:	test   eax,eax
6400cbcb:	je     0x6400cbdd
6400cbcd:	add    eax,0xffffffff
6400cbd0:	cmp    eax,0x1
6400cbd3:	ja     0x6400cbeb
6400cbd5:	mov    WORD PTR [ebx+0x2],0x10
6400cbdb:	jmp    0x6400cbeb
6400cbdd:	mov    WORD PTR [ebx+0x2],0x20
6400cbe3:	jmp    0x6400cbeb
6400cbe5:	mov    WORD PTR [ebx+0x2],0x8
6400cbeb:	mov    eax,DWORD PTR [esp+0x24]
6400cbef:	or     WORD PTR [eax+0xa],0x20
6400cbf4:	lea    esi,[eax+0x30]
6400cbf7:	mov    edi,0x1
6400cbfc:	call   0x6400c070
6400cc01:	jmp    0x6400caf3
6400cc06:	push   0x3
6400cc08:	jmp    0x6400cb14
6400cc0d:	push   0x3
6400cc0f:	jmp    0x6400cad2
6400cc14:	push   0x4
6400cc16:	mov    edx,0x8
6400cc1b:	mov    eax,ebx
6400cc1d:	call   0x6400bfb0
6400cc22:	mov    ecx,DWORD PTR [esp+0x24]
6400cc26:	add    ecx,0x34
6400cc29:	jmp    0x6400cae5
6400cc2e:	push   0x1
6400cc30:	mov    edx,0x8
6400cc35:	mov    eax,ebx
6400cc37:	call   0x6400bfb0
6400cc3c:	cmp    DWORD PTR [ebp+0x18],0x0
6400cc40:	je     0x6400cc61
6400cc42:	mov    eax,DWORD PTR [esp+0x14]
6400cc46:	mov    edx,DWORD PTR [esp+0x10]
6400cc4a:	or     DWORD PTR [ebp+0x4],0x2000000
6400cc51:	and    eax,0x4
6400cc54:	lea    eax,[edx+eax*2]
6400cc57:	call   0x6400bfa0
6400cc5c:	mov    BYTE PTR [ebx+0x1],al
6400cc5f:	jmp    0x6400ccdd
6400cc61:	mov    al,BYTE PTR [esp+0x10]
6400cc65:	add    al,0x30
6400cc67:	mov    BYTE PTR [ebx+0x1],al
6400cc6a:	jmp    0x6400ccdd
6400cc6c:	mov    ecx,DWORD PTR [esp+0x3c]
6400cc70:	sub    ecx,0x0
6400cc73:	je     0x6400cc9e
6400cc75:	sub    ecx,0x1
6400cc78:	je     0x6400cc91
6400cc7a:	sub    ecx,0x1
6400cc7d:	jne    0x6400ccdd
6400cc7f:	or     DWORD PTR [ebp+0x4],0x2000000
6400cc86:	and    eax,0x4
6400cc89:	lea    eax,[edx+eax*2]
6400cc8c:	push   eax
6400cc8d:	push   0x40
6400cc8f:	jmp    0x6400ccd4
6400cc91:	test   al,0x4
6400cc93:	jne    0x6400ccc4
6400cc95:	or     DWORD PTR [ebp+0x4],0x2000
6400cc9c:	jmp    0x6400ccce
6400cc9e:	or     DWORD PTR [ebp+0x4],0x2000
6400cca5:	test   al,0x4
6400cca7:	mov    ecx,DWORD PTR [ebp+0x4]
6400ccaa:	je     0x6400ccb8
6400ccac:	or     ecx,0x2000000
6400ccb2:	mov    DWORD PTR [ebp+0x4],ecx
6400ccb5:	add    edx,0x8
6400ccb8:	add    edx,0x20
6400ccbb:	push   edx
6400ccbc:	push   0x10
6400ccbe:	jmp    0x6400ccd4
6400ccc0:	test   al,0x4
6400ccc2:	je     0x6400ccce
6400ccc4:	or     DWORD PTR [ebp+0x4],0x2000000
6400cccb:	add    edx,0x8
6400ccce:	add    edx,0x10
6400ccd1:	push   edx
6400ccd2:	push   0x20
6400ccd4:	mov    eax,ebx
6400ccd6:	push   0x1
6400ccd8:	call   0x6400bfc0
6400ccdd:	mov    al,BYTE PTR [ebx]
6400ccdf:	cmp    al,0x1
6400cce1:	je     0x6400cceb
6400cce3:	cmp    al,0x6
6400cce5:	je     0x6400cceb
6400cce7:	cmp    al,0x7
6400cce9:	jne    0x6400ccff
6400cceb:	movzx  ecx,BYTE PTR [ebx+0x1]
6400ccef:	mov    dx,WORD PTR [ecx*2+0x64048b90]
6400ccf7:	mov    eax,DWORD PTR [esp+0x24]
6400ccfb:	or     WORD PTR [eax+0x3c],dx
6400ccff:	pop    edi
6400cd00:	pop    esi
6400cd01:	pop    ebp
6400cd02:	mov    eax,0x1
6400cd07:	pop    ebx
6400cd08:	add    esp,0xc
6400cd0b:	ret    
6400cd0c:	test   al,0x4
6400cd0e:	mov    edi,0x2000000
6400cd13:	je     0x6400cd1b
6400cd15:	or     DWORD PTR [ebp+0x4],edi
6400cd18:	add    edx,0x8
6400cd1b:	mov    ecx,DWORD PTR [esp+0x20]
6400cd1f:	cmp    DWORD PTR [ecx+0x18],0x2
6400cd23:	jne    0x6400cd3c
6400cd25:	mov    esi,DWORD PTR [esp+0x38]
6400cd29:	and    esi,0x3000000
6400cd2f:	cmp    esi,0x1000000
6400cd35:	jne    0x6400cd3c
6400cd37:	push   edx
6400cd38:	push   0x40
6400cd3a:	jmp    0x6400ccd4
6400cd3c:	test   al,0x8
6400cd3e:	mov    eax,ebx
6400cd40:	je     0x6400cd4a
6400cd42:	or     DWORD PTR [ebp+0x4],edi
6400cd45:	push   edx
6400cd46:	push   0x40
6400cd48:	jmp    0x6400ccd6
6400cd4a:	add    edx,0x10
6400cd4d:	push   edx
6400cd4e:	push   0x20
6400cd50:	jmp    0x6400ccd6
6400cd52:	test   al,0x1
6400cd54:	mov    eax,DWORD PTR [esp+0x34]
6400cd58:	je     0x6400cd64
6400cd5a:	or     DWORD PTR [ebp+0x4],0x2000000
6400cd61:	add    eax,0x8
6400cd64:	mov    edx,DWORD PTR [esp+0x20]
6400cd68:	cmp    DWORD PTR [edx+0x18],0x2
6400cd6c:	jne    0x6400cd76
6400cd6e:	push   eax
6400cd6f:	push   0x40
6400cd71:	jmp    0x6400ccd4
6400cd76:	add    eax,0x10
6400cd79:	push   eax
6400cd7a:	jmp    0x6400ccd2
6400cd7f:	add    edx,0x53
6400cd82:	push   edx
6400cd83:	push   0x40
6400cd85:	jmp    0x6400ccd4
6400cd8a:	mov    eax,DWORD PTR [esp+0x34]
6400cd8e:	add    eax,0x53
6400cd91:	push   eax
6400cd92:	push   0x40
6400cd94:	jmp    0x6400ccd4
6400cd99:	xor    eax,eax
6400cd9b:	mov    DWORD PTR [esp+0x10],eax
6400cd9f:	mov    DWORD PTR [esp+0x14],eax
6400cda3:	mov    edx,eax
6400cda5:	test   al,0x4
6400cda7:	je     0x6400cdb3
6400cda9:	or     DWORD PTR [ebp+0x4],0x2000000
6400cdb0:	add    edx,0x8
6400cdb3:	add    edx,0x5b
6400cdb6:	push   edx
6400cdb7:	push   0x80
6400cdbc:	jmp    0x6400ccd4
6400cdc1:	test   al,0x1
6400cdc3:	je     0x6400cdd1
6400cdc5:	or     DWORD PTR [ebp+0x4],0x2000000
6400cdcc:	add    DWORD PTR [esp+0x34],0x8
6400cdd1:	mov    ecx,DWORD PTR [esp+0x34]
6400cdd5:	add    ecx,0x5b
6400cdd8:	push   ecx
6400cdd9:	push   0x80
6400cdde:	jmp    0x6400ccd4
6400cde3:	test   al,0x4
6400cde5:	mov    eax,DWORD PTR [esp+0x20]
6400cde9:	je     0x6400cdf7
6400cdeb:	or     DWORD PTR [ebp+0x4],0x2000000
6400cdf2:	add    edx,0x8
6400cdf5:	jmp    0x6400ce0a
6400cdf7:	cmp    DWORD PTR [eax+0x18],0x1
6400cdfb:	jne    0x6400ce0a
6400cdfd:	test   BYTE PTR [ebp+0x0],0x10
6400ce01:	je     0x6400ce0a
6400ce03:	add    edx,0x8
6400ce06:	or     DWORD PTR [ebp+0x4],0x10
6400ce0a:	cmp    edx,0x9
6400ce0d:	jae    0x6400c8c8
6400ce13:	cmp    edx,0x1
6400ce16:	je     0x6400c8c8
6400ce1c:	cmp    edx,0x5
6400ce1f:	jb     0x6400ce2a
6400ce21:	cmp    edx,0x7
6400ce24:	jbe    0x6400c8c8
6400ce2a:	mov    BYTE PTR [ebx],0x1
6400ce2d:	mov    eax,DWORD PTR [eax+0x18]
6400ce30:	sub    eax,0x2
6400ce33:	neg    eax
6400ce35:	sbb    eax,eax
6400ce37:	and    eax,0xffffffe0
6400ce3a:	add    eax,0x40
6400ce3d:	add    dl,0x7b
6400ce40:	mov    WORD PTR [ebx+0x2],ax
6400ce44:	mov    BYTE PTR [ebx+0x1],dl
6400ce47:	jmp    0x6400cceb
6400ce4c:	cmp    edx,0x4
6400ce4f:	je     0x6400c8c8
6400ce55:	cmp    edx,0x5
6400ce58:	je     0x6400c8c8
6400ce5e:	test   al,0x4
6400ce60:	jne    0x6400c8c8
6400ce66:	mov    ecx,DWORD PTR [esp+0x20]
6400ce6a:	mov    BYTE PTR [ebx],0x1
6400ce6d:	mov    eax,DWORD PTR [ecx+0x18]
6400ce70:	sub    eax,0x2
6400ce73:	neg    eax
6400ce75:	sbb    eax,eax
6400ce77:	and    eax,0xffffffe0
6400ce7a:	add    eax,0x40
6400ce7d:	sub    dl,0x7c
6400ce80:	mov    WORD PTR [ebx+0x2],ax
6400ce84:	mov    BYTE PTR [ebx+0x1],dl
6400ce87:	jmp    0x6400cceb
6400ce8c:	cmp    DWORD PTR [esp+0x44],0x0
6400ce91:	je     0x6400ce9c
6400ce93:	cmp    edx,0x1
6400ce96:	je     0x6400c8c8
6400ce9c:	cmp    edx,0x5
6400ce9f:	ja     0x6400c8c8
6400cea5:	add    edx,0x44
6400cea8:	push   edx
6400cea9:	push   0x10
6400ceab:	jmp    0x6400ccd4
6400ceb0:	mov    eax,DWORD PTR [esp+0x38]
6400ceb4:	mov    BYTE PTR [ebx],0x1
6400ceb7:	mov    WORD PTR [ebx+0x2],0x10
6400cebd:	or     DWORD PTR [ebp+0x4],0x2000
6400cec4:	and    eax,0x1f80
6400cec9:	cmp    eax,0x400
6400cece:	ja     0x6400cf0f
6400ced0:	je     0x6400cf06
6400ced2:	cmp    eax,0x80
6400ced7:	je     0x6400cefd
6400ced9:	cmp    eax,0x100
6400cede:	je     0x6400cef4
6400cee0:	cmp    eax,0x200
6400cee5:	jne    0x6400ccdd
6400ceeb:	mov    BYTE PTR [ebx+0x1],0x47
6400ceef:	jmp    0x6400ccdd
6400cef4:	mov    BYTE PTR [ebx+0x1],0x46
6400cef8:	jmp    0x6400ccdd
6400cefd:	mov    BYTE PTR [ebx+0x1],0x45
6400cf01:	jmp    0x6400ccdd
6400cf06:	mov    BYTE PTR [ebx+0x1],0x44
6400cf0a:	jmp    0x6400ccdd
6400cf0f:	cmp    eax,0x800
6400cf14:	je     0x6400cf2a
6400cf16:	cmp    eax,0x1000
6400cf1b:	jne    0x6400ccdd
6400cf21:	mov    BYTE PTR [ebx+0x1],0x49
6400cf25:	jmp    0x6400ccdd
6400cf2a:	mov    BYTE PTR [ebx+0x1],0x48
6400cf2e:	jmp    0x6400ccdd
6400cf33:	push   0x30
6400cf35:	push   0x8
6400cf37:	jmp    0x6400ccd4
6400cf3c:	mov    eax,DWORD PTR [esp+0x3c]
6400cf40:	test   eax,eax
6400cf42:	jne    0x6400cf54
6400cf44:	or     DWORD PTR [ebp+0x4],0x2000
6400cf4b:	push   0x20
6400cf4d:	push   0x10
6400cf4f:	jmp    0x6400ccd4
6400cf54:	cmp    eax,0x1
6400cf57:	jne    0x6400cf67
6400cf59:	or     DWORD PTR [ebp+0x4],0x2000
6400cf60:	push   0x10
6400cf62:	jmp    0x6400ccd2
6400cf67:	mov    eax,DWORD PTR [esp+0x38]
6400cf6b:	not    eax
6400cf6d:	test   eax,0x1000000
6400cf72:	je     0x6400cf7b
6400cf74:	or     DWORD PTR [ebp+0x4],0x2000000
6400cf7b:	push   0x0
6400cf7d:	push   0x40
6400cf7f:	jmp    0x6400ccd4
6400cf84:	or     DWORD PTR [ebp+0x4],0x2000
6400cf8b:	cmp    DWORD PTR [esp+0x3c],0x0
6400cf90:	mov    esi,DWORD PTR [esp+0x20]
6400cf94:	jne    0x6400cfcf
6400cf96:	add    DWORD PTR [esi+0x14],0xfffffffc
6400cf9a:	js     0x6400c8c8
6400cfa0:	push   0x9
6400cfa2:	mov    edx,0x10
6400cfa7:	mov    eax,ebx
6400cfa9:	call   0x6400bfb0
6400cfae:	mov    ecx,DWORD PTR [esi+0x10]
6400cfb1:	movzx  edx,WORD PTR [ecx]
6400cfb4:	mov    eax,DWORD PTR [esp+0x24]
6400cfb8:	mov    DWORD PTR [eax+0x34],edx
6400cfbb:	mov    ecx,DWORD PTR [esi+0x10]
6400cfbe:	mov    dx,WORD PTR [ecx+0x2]
6400cfc2:	mov    WORD PTR [eax+0x30],dx
6400cfc6:	add    DWORD PTR [esi+0x10],0x4
6400cfca:	jmp    0x6400ccdd
6400cfcf:	add    DWORD PTR [esi+0x14],0xfffffffa
6400cfd3:	js     0x6400c8c8
6400cfd9:	push   0x9
6400cfdb:	mov    edx,0x20
6400cfe0:	mov    eax,ebx
6400cfe2:	call   0x6400bfb0
6400cfe7:	mov    eax,DWORD PTR [esi+0x10]
6400cfea:	mov    ecx,DWORD PTR [eax]
6400cfec:	mov    eax,DWORD PTR [esp+0x24]
6400cff0:	mov    DWORD PTR [eax+0x34],ecx
6400cff3:	mov    edx,DWORD PTR [esi+0x10]
6400cff6:	mov    cx,WORD PTR [edx+0x4]
6400cffa:	mov    WORD PTR [eax+0x30],cx
6400cffe:	add    DWORD PTR [esi+0x10],0x6
6400d002:	jmp    0x6400ccdd
6400d007:	cmp    esi,0x28
6400d00a:	push   0x8
6400d00c:	mov    eax,ebx
6400d00e:	jne    0x6400d037
6400d010:	lea    edx,[esi-0x20]
6400d013:	call   0x6400bfb0
6400d018:	lea    edi,[esi-0x27]
6400d01b:	mov    esi,DWORD PTR [esp+0x24]
6400d01f:	mov    ecx,DWORD PTR [esp+0x20]
6400d023:	add    esi,0x30
6400d026:	call   0x6400c070
6400d02b:	test   eax,eax
6400d02d:	jne    0x6400d079
6400d02f:	pop    edi
6400d030:	pop    esi
6400d031:	pop    ebp
6400d032:	pop    ebx
6400d033:	add    esp,0xc
6400d036:	ret    
6400d037:	or     DWORD PTR [ebp+0x4],0x2000
6400d03e:	cmp    DWORD PTR [esp+0x40],0x0
6400d043:	jne    0x6400d054
6400d045:	mov    edx,0x10
6400d04a:	call   0x6400bfb0
6400d04f:	lea    edi,[edx-0xe]
6400d052:	jmp    0x6400d01b
6400d054:	mov    edx,0x20
6400d059:	call   0x6400bfb0
6400d05e:	mov    esi,DWORD PTR [esp+0x24]
6400d062:	mov    ecx,DWORD PTR [esp+0x20]
6400d066:	add    esi,0x30
6400d069:	lea    edi,[edx-0x1c]
6400d06c:	call   0x6400c070
6400d071:	test   eax,eax
6400d073:	je     0x6400c8c8
6400d079:	mov    edx,DWORD PTR [esp+0x28]
6400d07d:	movzx  eax,WORD PTR [edx+0x4]
6400d081:	cmp    ax,0x18
6400d085:	jb     0x6400ccdd
6400d08b:	cmp    ax,0x27
6400d08f:	ja     0x6400ccdd
6400d095:	mov    eax,DWORD PTR [ebp+0x0]
6400d098:	test   al,al
6400d09a:	jns    0x6400d0b1
6400d09c:	mov    eax,DWORD PTR [esp+0x24]
6400d0a0:	or     DWORD PTR [ebp+0x4],0x80
6400d0a7:	or     WORD PTR [eax+0xa],0x10
6400d0ac:	jmp    0x6400ccdd
6400d0b1:	test   eax,0x200
6400d0b6:	je     0x6400ccdd
6400d0bc:	mov    eax,DWORD PTR [esp+0x24]
6400d0c0:	or     DWORD PTR [ebp+0x4],0x200
6400d0c7:	or     WORD PTR [eax+0xa],0x8
6400d0cc:	jmp    0x6400ccdd
6400d0d1:	mov    WORD PTR [ebx+0x2],0x8
6400d0d7:	cmp    WORD PTR [ebx+0x2],0x0
6400d0dc:	mov    BYTE PTR [ebx],0x5
6400d0df:	jne    0x6400d10a
6400d0e1:	mov    eax,DWORD PTR [esp+0x3c]
6400d0e5:	sub    eax,0x0
6400d0e8:	je     0x6400d104
6400d0ea:	sub    eax,0x1
6400d0ed:	je     0x6400d0fc
6400d0ef:	sub    eax,0x1
6400d0f2:	jne    0x6400d10a
6400d0f4:	mov    WORD PTR [ebx+0x2],0x40
6400d0fa:	jmp    0x6400d10a
6400d0fc:	mov    WORD PTR [ebx+0x2],0x20
6400d102:	jmp    0x6400d10a
6400d104:	mov    WORD PTR [ebx+0x2],0x10
6400d10a:	mov    eax,DWORD PTR [esp+0x24]
6400d10e:	mov    edi,DWORD PTR [esp+0x20]
6400d112:	mov    ecx,DWORD PTR [edi+0x18]
6400d115:	push   eax
6400d116:	push   ecx
6400d117:	push   ebp
6400d118:	push   0x200
6400d11d:	call   0x6400dd90
6400d122:	mov    eax,DWORD PTR [esp+0x50]
6400d126:	add    esp,0x10
6400d129:	test   eax,eax
6400d12b:	jne    0x6400d14b
6400d12d:	mov    eax,DWORD PTR [esp+0x24]
6400d131:	or     DWORD PTR [ebp+0x4],0x4000
6400d138:	mov    BYTE PTR [eax+0xf],0x10
6400d13c:	lea    ecx,[eax+0x28]
6400d13f:	mov    esi,0x2
6400d144:	mov    eax,edi
6400d146:	jmp    0x6400caee
6400d14b:	cmp    eax,0x1
6400d14e:	mov    eax,DWORD PTR [esp+0x24]
6400d152:	lea    ecx,[eax+0x28]
6400d155:	jne    0x6400d16e
6400d157:	or     DWORD PTR [ebp+0x4],0x4000
6400d15e:	mov    BYTE PTR [eax+0xf],0x20
6400d162:	mov    esi,0x4
6400d167:	mov    eax,edi
6400d169:	jmp    0x6400caee
6400d16e:	mov    BYTE PTR [eax+0xf],0x40
6400d172:	mov    esi,0x8
6400d177:	mov    eax,edi
6400d179:	jmp    0x6400caee
6400d17e:	push   0x2
6400d180:	mov    edx,0x8
6400d185:	mov    eax,ebx
6400d187:	call   0x6400bfb0
6400d18c:	mov    edx,DWORD PTR [esp+0x24]
6400d190:	mov    BYTE PTR [edx+0x30],0x1
6400d194:	jmp    0x6400ccdd
6400d199:	push   0x31
6400d19b:	push   0x8
6400d19d:	jmp    0x6400ccd4
6400d1a2:	mov    eax,DWORD PTR [esp+0x20]
6400d1a6:	mov    ecx,DWORD PTR [eax+0x10]
6400d1a9:	movzx  edx,BYTE PTR [ecx-0x1]
6400d1ad:	and    edx,0x7
6400d1b0:	add    edx,0x4b
6400d1b3:	jmp    0x6400ccd1
6400d1b8:	push   0x4b
6400d1ba:	push   0x20
6400d1bc:	push   0x1
6400d1be:	mov    eax,ebx
6400d1c0:	call   0x6400bfc0
6400d1c5:	mov    eax,DWORD PTR [esp+0x20]
6400d1c9:	mov    ecx,DWORD PTR [eax+0x10]
6400d1cc:	movzx  edx,BYTE PTR [ecx-0x1]
6400d1d0:	and    edx,0x7
6400d1d3:	add    edx,0x4b
6400d1d6:	push   edx
6400d1d7:	push   0x20
6400d1d9:	lea    eax,[ebx+0x4]
6400d1dc:	jmp    0x6400ccd6
6400d1e1:	mov    eax,DWORD PTR [esp+0x20]
6400d1e5:	mov    ecx,DWORD PTR [eax+0x10]
6400d1e8:	movzx  edx,BYTE PTR [ecx-0x1]
6400d1ec:	and    edx,0x7
6400d1ef:	add    edx,0x4b
6400d1f2:	push   edx
6400d1f3:	push   0x20
6400d1f5:	push   0x1
6400d1f7:	mov    eax,ebx
6400d1f9:	call   0x6400bfc0
6400d1fe:	push   0x4b
6400d200:	push   0x20
6400d202:	lea    eax,[ebx+0x4]
6400d205:	jmp    0x6400ccd6
6400d20a:	push   0x1
6400d20c:	mov    edx,0x8
6400d211:	mov    eax,ebx
6400d213:	call   0x6400bfb0
6400d218:	mov    eax,DWORD PTR [esp+0x20]
6400d21c:	mov    ecx,DWORD PTR [eax+0x10]
6400d21f:	movzx  eax,BYTE PTR [ecx-0x1]
6400d223:	and    eax,0x7
6400d226:	test   BYTE PTR [esp+0x14],0x1
6400d22b:	je     0x6400d243
6400d22d:	or     DWORD PTR [ebp+0x4],0x2000000
6400d234:	add    eax,edx
6400d236:	call   0x6400bfa0
6400d23b:	mov    BYTE PTR [ebx+0x1],al
6400d23e:	jmp    0x6400ccdd
6400d243:	cmp    DWORD PTR [ebp+0x18],0x1
6400d247:	jne    0x6400cc65
6400d24d:	or     DWORD PTR [ebp+0x4],0x2000000
6400d254:	call   0x6400bfa0
6400d259:	mov    BYTE PTR [ebx+0x1],al
6400d25c:	jmp    0x6400ccdd
6400d261:	mov    edx,DWORD PTR [esp+0x20]
6400d265:	mov    ecx,DWORD PTR [edx+0x10]
6400d268:	movzx  ecx,BYTE PTR [ecx-0x1]
6400d26c:	mov    edx,DWORD PTR [esp+0x3c]
6400d270:	and    ecx,0x7
6400d273:	sub    edx,0x0
6400d276:	je     0x6400d2e5
6400d278:	sub    edx,0x1
6400d27b:	je     0x6400d2be
6400d27d:	sub    edx,0x1
6400d280:	jne    0x6400ccdd
6400d286:	mov    edx,DWORD PTR [esp+0x38]
6400d28a:	test   edx,0x1000000
6400d290:	mov    edi,0x2000000
6400d295:	je     0x6400d2ad
6400d297:	test   edi,edx
6400d299:	jne    0x6400d2ad
6400d29b:	test   al,0x1
6400d29d:	je     0x6400d2b6
6400d29f:	or     DWORD PTR [ebp+0x4],edi
6400d2a2:	add    ecx,0x8
6400d2a5:	push   ecx
6400d2a6:	push   0x40
6400d2a8:	jmp    0x6400ccd4
6400d2ad:	or     DWORD PTR [ebp+0x4],edi
6400d2b0:	and    eax,0x1
6400d2b3:	lea    ecx,[ecx+eax*8]
6400d2b6:	push   ecx
6400d2b7:	push   0x40
6400d2b9:	jmp    0x6400ccd4
6400d2be:	test   al,0x1
6400d2c0:	je     0x6400d2d5
6400d2c2:	or     DWORD PTR [ebp+0x4],0x2000000
6400d2c9:	add    ecx,0x8
6400d2cc:	add    ecx,0x10
6400d2cf:	push   ecx
6400d2d0:	jmp    0x6400ccd2
6400d2d5:	or     DWORD PTR [ebp+0x4],0x2000
6400d2dc:	add    ecx,0x10
6400d2df:	push   ecx
6400d2e0:	jmp    0x6400ccd2
6400d2e5:	or     DWORD PTR [ebp+0x4],0x2000
6400d2ec:	test   al,0x1
6400d2ee:	mov    edx,DWORD PTR [ebp+0x4]
6400d2f1:	je     0x6400d2ff
6400d2f3:	or     edx,0x2000000
6400d2f9:	mov    DWORD PTR [ebp+0x4],edx
6400d2fc:	add    ecx,0x8
6400d2ff:	add    ecx,0x20
6400d302:	push   ecx
6400d303:	push   0x10
6400d305:	jmp    0x6400ccd4
6400d30a:	or     DWORD PTR [ebp+0x4],0x4000
6400d311:	mov    edx,DWORD PTR [esp+0x38]
6400d315:	test   dl,0x4
6400d318:	mov    BYTE PTR [ebx],0x6
6400d31b:	je     0x6400d35c
6400d31d:	or     DWORD PTR [ebp+0x4],0x2000
6400d324:	mov    ecx,DWORD PTR [esp+0x3c]
6400d328:	test   ecx,ecx
6400d32a:	mov    eax,DWORD PTR [ebp+0x4]
6400d32d:	jne    0x6400d337
6400d32f:	mov    WORD PTR [ebx+0x2],0x10
6400d335:	jmp    0x6400d362
6400d337:	cmp    ecx,0x2
6400d33a:	jne    0x6400d354
6400d33c:	test   edx,0x1000000
6400d342:	je     0x6400d354
6400d344:	or     eax,0x2000000
6400d349:	mov    DWORD PTR [ebp+0x4],eax
6400d34c:	mov    WORD PTR [ebx+0x2],0x40
6400d352:	jmp    0x6400d362
6400d354:	mov    WORD PTR [ebx+0x2],0x20
6400d35a:	jmp    0x6400d362
6400d35c:	mov    WORD PTR [ebx+0x2],0x8
6400d362:	mov    eax,DWORD PTR [esp+0x24]
6400d366:	mov    edx,DWORD PTR [esp+0x20]
6400d36a:	push   eax
6400d36b:	mov    BYTE PTR [eax+0xc],0x0
6400d36f:	mov    eax,DWORD PTR [edx+0x18]
6400d372:	push   eax
6400d373:	push   ebp
6400d374:	push   0x200
6400d379:	call   0x6400dd90
6400d37e:	mov    eax,DWORD PTR [esp+0x50]
6400d382:	add    esp,0x10
6400d385:	test   eax,eax
6400d387:	jne    0x6400d392
6400d389:	mov    BYTE PTR [ebx+0x1],0x26
6400d38d:	jmp    0x6400ccdd
6400d392:	sub    eax,0x1
6400d395:	neg    eax
6400d397:	sbb    al,al
6400d399:	and    al,0xf0
6400d39b:	add    al,0x16
6400d39d:	mov    BYTE PTR [ebx+0x1],al
6400d3a0:	jmp    0x6400ccdd
6400d3a5:	or     DWORD PTR [ebp+0x4],0x4000
6400d3ac:	mov    edx,DWORD PTR [esp+0x38]
6400d3b0:	test   dl,0x4
6400d3b3:	mov    BYTE PTR [ebx],0x6
6400d3b6:	je     0x6400d3f7
6400d3b8:	or     DWORD PTR [ebp+0x4],0x2000
6400d3bf:	mov    ecx,DWORD PTR [esp+0x3c]
6400d3c3:	test   ecx,ecx
6400d3c5:	mov    eax,DWORD PTR [ebp+0x4]
6400d3c8:	jne    0x6400d3d2
6400d3ca:	mov    WORD PTR [ebx+0x2],0x10
6400d3d0:	jmp    0x6400d3fd
6400d3d2:	cmp    ecx,0x2
6400d3d5:	jne    0x6400d3ef
6400d3d7:	test   edx,0x1000000
6400d3dd:	je     0x6400d3ef
6400d3df:	or     eax,0x2000000
6400d3e4:	mov    DWORD PTR [ebp+0x4],eax
6400d3e7:	mov    WORD PTR [ebx+0x2],0x40
6400d3ed:	jmp    0x6400d3fd
6400d3ef:	mov    WORD PTR [ebx+0x2],0x20
6400d3f5:	jmp    0x6400d3fd
6400d3f7:	mov    WORD PTR [ebx+0x2],0x8
6400d3fd:	cmp    DWORD PTR [esp+0x30],0x0
6400d402:	jne    0x6400d416
6400d404:	mov    ecx,DWORD PTR [esp+0x20]
6400d408:	cmp    DWORD PTR [ecx+0x18],0x2
6400d40c:	je     0x6400d416
6400d40e:	mov    edx,DWORD PTR [esp+0x24]
6400d412:	mov    BYTE PTR [edx+0xc],0xc4
6400d416:	mov    eax,DWORD PTR [esp+0x40]
6400d41a:	test   eax,eax
6400d41c:	jne    0x6400d427
6400d41e:	mov    BYTE PTR [ebx+0x1],0x27
6400d422:	jmp    0x6400ccdd
6400d427:	sub    eax,0x1
6400d42a:	neg    eax
6400d42c:	sbb    al,al
6400d42e:	and    al,0xf0
6400d430:	add    al,0x17
6400d432:	mov    BYTE PTR [ebx+0x1],al
6400d435:	jmp    0x6400ccdd
6400d43a:	push   0x22
6400d43c:	push   0x10
6400d43e:	jmp    0x6400ccd4
6400d443:	push   0x11
6400d445:	jmp    0x6400ccd2
6400d44a:	mov    eax,DWORD PTR [esp+0x20]
6400d44e:	or     DWORD PTR [ebp+0x4],0x4000
6400d455:	mov    edi,DWORD PTR [esp+0x24]
6400d459:	mov    ecx,DWORD PTR [eax+0x18]
6400d45c:	push   edi
6400d45d:	push   ecx
6400d45e:	push   ebp
6400d45f:	push   0x200
6400d464:	call   0x6400dd90
6400d469:	add    esp,0x10
6400d46c:	push   0x30
6400d46e:	push   0x8
6400d470:	push   0x7
6400d472:	mov    eax,ebx
6400d474:	call   0x6400bfc0
6400d479:	mov    eax,DWORD PTR [esp+0x40]
6400d47d:	test   eax,eax
6400d47f:	jne    0x6400d48a
6400d481:	mov    BYTE PTR [edi+0xd],0x23
6400d485:	jmp    0x6400ccdd
6400d48a:	cmp    eax,0x1
6400d48d:	jne    0x6400d498
6400d48f:	mov    BYTE PTR [edi+0xd],0x13
6400d493:	jmp    0x6400ccdd
6400d498:	or     DWORD PTR [ebp+0x4],0x2000000
6400d49f:	mov    BYTE PTR [edi+0xd],0x3
6400d4a3:	jmp    0x6400ccdd
6400d4a8:	mov    eax,DWORD PTR [esp+0x40]
6400d4ac:	cmp    eax,0x2
6400d4af:	jne    0x6400d4be
6400d4b1:	push   0x0
6400d4b3:	push   0x40
6400d4b5:	push   0x6
6400d4b7:	mov    eax,ebx
6400d4b9:	jmp    0x6400ccd8
6400d4be:	or     DWORD PTR [ebp+0x4],0x4000
6400d4c5:	cmp    eax,0x1
6400d4c8:	mov    eax,ebx
6400d4ca:	jne    0x6400d4d7
6400d4cc:	push   0x10
6400d4ce:	push   0x20
6400d4d0:	push   0x6
6400d4d2:	jmp    0x6400ccd8
6400d4d7:	push   0x20
6400d4d9:	push   0x10
6400d4db:	push   0x6
6400d4dd:	jmp    0x6400ccd8
6400d4e2:	mov    edx,DWORD PTR [esp+0x18]
6400d4e6:	add    edx,0x5b
6400d4e9:	push   edx
6400d4ea:	push   0x80
6400d4ef:	jmp    0x6400ccd4
6400d4f4:	mov    edi,DWORD PTR [esp+0x20]
6400d4f8:	add    DWORD PTR [edi+0x14],0xffffffff
6400d4fc:	js     0x6400c8c8
6400d502:	mov    esi,0x1
6400d507:	cmp    DWORD PTR [edi+0x18],esi
6400d50a:	jne    0x6400d51a
6400d50c:	mov    eax,DWORD PTR [edi+0x10]
6400d50f:	movzx  eax,BYTE PTR [eax]
6400d512:	shr    eax,0x4
6400d515:	and    eax,0x7
6400d518:	jmp    0x6400d523
6400d51a:	mov    ecx,DWORD PTR [edi+0x10]
6400d51d:	movzx  eax,BYTE PTR [ecx]
6400d520:	shr    eax,0x4
6400d523:	add    eax,0x5b
6400d526:	push   eax
6400d527:	push   0x80
6400d52c:	push   esi
6400d52d:	mov    eax,ebx
6400d52f:	call   0x6400bfc0
6400d534:	add    DWORD PTR [edi+0x10],esi
6400d537:	jmp    0x6400ccdd
6400d53c:	test   al,0x4
6400d53e:	je     0x6400d543
6400d540:	add    edx,0x8
6400d543:	test   al,0x10
6400d545:	mov    eax,ebx
6400d547:	je     0x6400d557
6400d549:	add    edx,0x6b
6400d54c:	push   edx
6400d54d:	push   0x100
6400d552:	jmp    0x6400ccd6
6400d557:	add    edx,0x5b
6400d55a:	push   edx
6400d55b:	push   0x80
6400d560:	jmp    0x6400ccd6
6400d565:	mov    edi,DWORD PTR [esp+0x20]
6400d569:	add    DWORD PTR [edi+0x14],0xffffffff
6400d56d:	js     0x6400c8c8
6400d573:	mov    esi,0x1
6400d578:	cmp    DWORD PTR [edi+0x18],esi
6400d57b:	jne    0x6400d58b
6400d57d:	mov    edx,DWORD PTR [edi+0x10]
6400d580:	movzx  eax,BYTE PTR [edx]
6400d583:	shr    eax,0x4
6400d586:	and    eax,0x7
6400d589:	jmp    0x6400d594
6400d58b:	mov    eax,DWORD PTR [edi+0x10]
6400d58e:	movzx  eax,BYTE PTR [eax]
6400d591:	shr    eax,0x4
6400d594:	test   BYTE PTR [ebp+0x28],0x10
6400d598:	je     0x6400d523
6400d59a:	add    eax,0x6b
6400d59d:	push   eax
6400d59e:	push   0x100
6400d5a3:	push   esi
6400d5a4:	mov    eax,ebx
6400d5a6:	call   0x6400bfc0
6400d5ab:	add    DWORD PTR [edi+0x10],esi
6400d5ae:	jmp    0x6400ccdd
6400d5b3:	test   al,0x4
6400d5b5:	je     0x6400d5ba
6400d5b7:	add    edx,0x8
6400d5ba:	add    edx,0x6b
6400d5bd:	push   edx
6400d5be:	push   0x100
6400d5c3:	jmp    0x6400ccd4
6400d5c8:	mov    ecx,DWORD PTR [esp+0x18]
6400d5cc:	add    ecx,0x6b
6400d5cf:	push   ecx
6400d5d0:	push   0x100
6400d5d5:	jmp    0x6400ccd4
6400d5da:	test   al,0x10
6400d5dc:	je     0x6400d5f0
6400d5de:	mov    edx,DWORD PTR [esp+0x18]
6400d5e2:	add    edx,0x6b
6400d5e5:	push   edx
6400d5e6:	push   0x100
6400d5eb:	jmp    0x6400ccd4
6400d5f0:	mov    eax,DWORD PTR [esp+0x18]
6400d5f4:	add    eax,0x5b
6400d5f7:	push   eax
6400d5f8:	push   0x80
6400d5fd:	jmp    0x6400ccd4
6400d602:	test   al,0x4
6400d604:	je     0x6400d609
6400d606:	add    edx,0x8
6400d609:	test   al,0x8
6400d60b:	je     0x6400ccce
6400d611:	push   edx
6400d612:	push   0x40
6400d614:	jmp    0x6400ccd4
6400d619:	lea    ecx,[ecx+0x0]
6400d61c:	jns    0x6400d5e6
6400d61e:	add    BYTE PTR [ebx+ebp*2-0x38],ah
6400d622:	add    BYTE PTR [ecx+ebp*1-0x38],ah
6400d626:	add    BYTE PTR [edx+eiz*4-0x38],ah
6400d62a:	add    BYTE PTR [ebx+esi*1-0x38],ah
6400d62e:	add    BYTE PTR [eax+eax*4-0x38],ah
6400d632:	add    BYTE PTR [ebp+esi*4-0x38],ah
6400d636:	add    BYTE PTR [edx+edx*4-0x38],ah
6400d63a:	add    BYTE PTR [ebx+ebx*1-0x38],ah
6400d63e:	add    BYTE PTR [ecx+edx*1-0x38],ah
6400d642:	add    BYTE PTR [edi+ebp*8-0x39],ah
6400d646:	add    BYTE PTR [ecx+ebp*4-0x38],ah
6400d64a:	add    BYTE PTR [esp+edi*1-0x37],ah
6400d64e:	add    BYTE PTR [eax+eax*1+0x1],ah
6400d652:	add    al,BYTE PTR [ebx]
6400d654:	or     al,0xc
6400d656:	or     al,0xc
6400d658:	or     al,0xc
6400d65a:	or     al,0xc
6400d65c:	or     al,0xc
6400d65e:	or     al,0xc
6400d660:	or     al,0x4
6400d662:	or     al,0x5
6400d664:	or     al,0xc
6400d666:	push   es
6400d667:	pop    es
6400d668:	add    DWORD PTR [eax],ecx
6400d66a:	add    cl,BYTE PTR [ecx]
6400d66c:	or     cl,BYTE PTR [esp+ecx*1]
6400d66f:	or     al,0xc
6400d671:	or     al,0xc
6400d673:	or     al,0xc
6400d675:	or     al,0xc
6400d677:	or     al,0xc
6400d679:	or     al,0xc
6400d67b:	or     al,0xc
6400d67d:	or     al,0xc
6400d67f:	or     al,0xc
6400d681:	or     al,0xc
6400d683:	or     al,0xc
6400d685:	or     al,0xc
6400d687:	or     al,0xc
6400d689:	or     al,0xc
6400d68b:	or     al,0xc
6400d68d:	or     al,0xc
6400d68f:	or     al,0xc
6400d691:	or     al,0xc
6400d693:	or     al,0xc
6400d695:	or     al,0xc
6400d697:	or     al,0xb
6400d699:	lea    ecx,[ecx+0x0]
6400d69c:	jl     0x6400d668
6400d69e:	add    BYTE PTR [ecx+ebp*4-0x37],ah
6400d6a2:	add    BYTE PTR [edi+ebx*2-0x37],ah
6400d6a6:	add    BYTE PTR [ebp+eax*8-0x37],ah
6400d6aa:	add    BYTE PTR [ebx+edi*8-0x37],ah
6400d6ae:	add    BYTE PTR [ebx+esi*4-0x37],ah
6400d6b2:	add    BYTE PTR [eax+esi*4-0x37],ah
6400d6b6:	add    BYTE PTR [esi+ebp*2-0x37],ah
6400d6ba:	add    BYTE PTR [edi+edx*4-0x37],ah
6400d6be:	add    BYTE PTR [esi+ecx*4-0x36],ah
6400d6c2:	add    BYTE PTR [ecx+ebx*1-0x36],ah
6400d6c6:	add    BYTE PTR [eax+eiz*4-0x36],ah
6400d6ca:	add    BYTE PTR [ecx+esi*1-0x36],ah
6400d6ce:	add    BYTE PTR [edx+ecx*2-0x36],ah
6400d6d2:	add    BYTE PTR [ebx+eiz*2-0x36],ah
6400d6d6:	add    BYTE PTR [edx+esi*4-0x36],ah
6400d6da:	add    BYTE PTR [eax+eax*1+0x1],ah
6400d6de:	add    al,BYTE PTR [ebx]
6400d6e0:	add    al,0xf
6400d6e2:	(bad)  
6400d6e3:	(bad)  
6400d6e4:	sldt   WORD PTR ds:0xf060500
6400d6eb:	(bad)  
6400d6ec:	(bad)  
6400d6ed:	(bad)  
6400d6ee:	(bad)  
6400d6ef:	(bad)  
6400d6f0:	(bad)  
6400d6f1:	(bad)  
6400d6f2:	(bad)  
6400d6f3:	(bad)  
6400d6f4:	(bad)  
6400d6f5:	(bad)  
6400d6f6:	(bad)  
6400d6f7:	(bad)  
6400d6f8:	(bad)  
6400d6f9:	(bad)  
6400d6fa:	(bad)  
6400d6fb:	(bad)  
6400d6fc:	(bad)  
6400d6fd:	(bad)  
6400d6fe:	(bad)  
6400d6ff:	(bad)  
6400d700:	(bad)  
6400d701:	(bad)  
6400d702:	(bad)  
6400d703:	(bad)  
6400d704:	(bad)  
6400d705:	(bad)  
6400d706:	(bad)  
6400d707:	(bad)  
6400d708:	(bad)  
6400d709:	(bad)  
6400d70a:	(bad)  
6400d70b:	(bad)  
6400d70c:	(bad)  
6400d70d:	(bad)  
6400d70e:	sysret 
6400d710:	or     BYTE PTR [edi],cl
6400d712:	syscall 
6400d714:	pop    es
6400d715:	or     BYTE PTR [ecx],cl
6400d717:	sysret 
6400d719:	add    BYTE PTR ds:0xf0a0a0f,al
6400d71f:	(bad)  
6400d720:	(bad)  
6400d721:	(bad)  
6400d722:	ud2    
6400d724:	(bad)  
6400d725:	(bad)  
6400d727:	or     eax,0x498d0e
6400d72c:	ror    dl,1
6400d72e:	add    BYTE PTR [edx+edx*1-0x35],ah
6400d732:	add    BYTE PTR [ebx+eax*1-0x35],ah
6400d736:	add    BYTE PTR [ecx+ebp*2-0x35],ah
6400d73a:	add    BYTE PTR [esp+ebp*4-0x35],ah
6400d73e:	add    BYTE PTR [esi+eax*1-0x34],ah
6400d742:	add    BYTE PTR [ebp+ecx*1-0x34],ah
6400d746:	add    BYTE PTR [esp+edx*1-0x34],ah
6400d74a:	add    BYTE PTR [esi+ebp*1-0x34],ah
6400d74e:	add    BYTE PTR [eax+edi*4-0x34],ah
6400d752:	add    BYTE PTR [esp+ebp*2-0x34],ah
6400d756:	add    BYTE PTR [eax+eax*8-0x34],ah
6400d75a:	add    BYTE PTR [esp+ecx*1-0x33],ah
6400d75e:	add    BYTE PTR [edx+edx*2-0x33],ah
6400d762:	add    BYTE PTR [ebx+eiz*8-0x33],ah
6400d766:	add    BYTE PTR [esp+ecx*2-0x32],ah
6400d76a:	add    BYTE PTR [esp+ecx*4-0x32],ah
6400d76e:	add    BYTE PTR [eax+esi*4-0x32],ah
6400d772:	add    BYTE PTR [ebx+esi*1-0x31],ah
6400d776:	add    BYTE PTR [ebx+ecx*2-0x31],ah
6400d77a:	add    BYTE PTR [esp+edi*1-0x31],ah
6400d77e:	add    BYTE PTR [esp+eax*4-0x31],ah
6400d782:	add    BYTE PTR [edi+eax*1-0x30],ah
6400d786:	add    BYTE PTR [ecx+edx*8-0x30],ah
6400d78a:	add    BYTE PTR [edi+edx*8-0x30],ah
6400d78e:	add    BYTE PTR [esi+edi*2-0x2f],ah
6400d792:	add    BYTE PTR [ecx+ebx*4-0x2f],ah
6400d796:	add    BYTE PTR [edx+ecx*1-0x2e],ah
6400d79a:	add    BYTE PTR [ecx+eiz*2-0x2e],ah
6400d79e:	add    BYTE PTR [edx+ecx*1-0x2d],ah
6400d7a2:	add    BYTE PTR [ebp+eiz*4-0x2d],ah
6400d7a6:	add    BYTE PTR [edx+ecx*2-0x2c],ah
6400d7aa:	add    BYTE PTR [eax+ebp*4-0x2c],ah
6400d7ae:	add    BYTE PTR [edx+edi*1-0x2c],ah
6400d7b2:	add    BYTE PTR [ebx+eax*2-0x2c],ah
6400d7b6:	add    BYTE PTR [edx+eiz*4-0x2f],ah
6400d7ba:	add    BYTE PTR [eax+edi*4-0x2f],ah
6400d7be:	add    BYTE PTR [ecx+eiz*8-0x2f],ah
6400d7c2:	add    BYTE PTR [edi+edi*2-0x33],ah
6400d7c6:	add    BYTE PTR [edx+ecx*4-0x33],ah
6400d7ca:	add    BYTE PTR [ebp+eiz*4-0x33],ah
6400d7ce:	add    BYTE PTR [ecx+eax*8-0x33],ah
6400d7d2:	add    BYTE PTR [ecx+ebx*4-0x33],ah
6400d7d6:	add    BYTE PTR [edx+eax*1-0x2a],ah
6400d7da:	add    BYTE PTR [edx+eiz*8-0x2c],ah
6400d7de:	add    BYTE PTR [esp+esi*8-0x2c],ah
6400d7e2:	add    BYTE PTR [esp+edi*1-0x2b],ah
6400d7e6:	add    BYTE PTR [ebp+eiz*2-0x2b],ah
6400d7ea:	add    BYTE PTR [ebx+esi*4-0x2b],ah
6400d7ee:	add    BYTE PTR [eax+ecx*8-0x2b],ah
6400d7f2:	add    BYTE PTR [edx+ebx*8-0x2b],ah
6400d7f6:	add    BYTE PTR [eax+ecx*8-0x38],ah
6400d7fa:	add    BYTE PTR [eax+eax*1+0x1],ah
6400d7fe:	add    al,BYTE PTR [ebx]
6400d800:	add    al,0x5
6400d802:	push   es
6400d803:	pop    es
6400d804:	or     BYTE PTR [ecx],cl
6400d806:	or     cl,BYTE PTR [ebx]
6400d808:	or     al,0xd
6400d80a:	xor    esi,DWORD PTR [ebx]
6400d80c:	xor    esi,DWORD PTR [ebx]
6400d80e:	xor    esi,DWORD PTR [ebx]
6400d810:	xor    esi,DWORD PTR [ebx]
6400d812:	xor    esi,DWORD PTR [ebx]
6400d814:	xor    esi,DWORD PTR [ebx]
6400d816:	xor    esi,DWORD PTR [ebx]
6400d818:	push   cs
6400d819:	movups xmm2,XMMWORD PTR [ecx]
6400d81c:	adc    dl,BYTE PTR [ebx]
6400d81e:	adc    al,0x14
6400d820:	xor    edx,DWORD PTR ds:0x33161633
6400d826:	xor    esi,DWORD PTR [ebx]
6400d828:	xor    esi,DWORD PTR [ebx]
6400d82a:	xor    esi,DWORD PTR [ebx]
6400d82c:	pop    ss
6400d82d:	sbb    BYTE PTR [ecx],bl
6400d82f:	sbb    bl,BYTE PTR [ebx]
6400d831:	sbb    al,0x1d
6400d833:	push   ds
6400d834:	pop    ds
6400d835:	and    BYTE PTR [ecx],ah
6400d837:	and    ah,BYTE PTR [ebx]
6400d839:	and    al,0x25
6400d83b:	es daa 
6400d83d:	xor    esi,DWORD PTR [ebx]
6400d83f:	sub    BYTE PTR [ecx],ch
6400d841:	xor    esi,DWORD PTR [ebx]
6400d843:	xor    esi,DWORD PTR [ebx]
6400d845:	sub    dh,BYTE PTR [ebx]
6400d847:	xor    esi,DWORD PTR [ebx]
6400d849:	sub    esi,DWORD PTR [ebx]
6400d84b:	xor    ebp,DWORD PTR [ebp*1+0x33302f2e]
6400d852:	xor    DWORD PTR [edx],esi
6400d854:	int3   
6400d855:	int3   
6400d856:	int3   
6400d857:	int3   
6400d858:	int3   
6400d859:	int3   
6400d85a:	int3   
6400d85b:	int3   
6400d85c:	int3   
6400d85d:	int3   
6400d85e:	int3   
6400d85f:	int3   
6400d860:	mov    eax,DWORD PTR [esp+0x4]
6400d864:	add    eax,0xffffffda
6400d867:	cmp    eax,0xcd
6400d86c:	ja     0x6400d88d
6400d86e:	movzx  eax,BYTE PTR [eax+0x6400d89c]
6400d875:	jmp    DWORD PTR [eax*4+0x6400d890]
6400d87c:	xor    eax,eax
6400d87e:	cmp    DWORD PTR [esp+0x8],0x2
6400d883:	sete   al
6400d886:	ret    
6400d887:	mov    eax,0x1
6400d88c:	ret    
6400d88d:	xor    eax,eax
6400d88f:	ret    
6400d890:	xchg   eax,ebx
6400d892:	add    BYTE PTR [esp+edi*2-0x28],ah
6400d896:	add    BYTE PTR [ebp+ecx*4-0x28],ah
6400d89a:	add    BYTE PTR [eax+eax*1+0x2],ah
6400d89e:	add    al,BYTE PTR [edx]
6400d8a0:	add    al,BYTE PTR [edx]
6400d8a2:	add    al,BYTE PTR [edx]
6400d8a4:	add    BYTE PTR [edx],al
6400d8a6:	add    al,BYTE PTR [edx]
6400d8a8:	add    al,BYTE PTR [edx]
6400d8aa:	add    al,BYTE PTR [edx]
6400d8ac:	add    BYTE PTR [edx],al
6400d8ae:	add    al,BYTE PTR [edx]
6400d8b0:	add    al,BYTE PTR [edx]
6400d8b2:	add    al,BYTE PTR [edx]
6400d8b4:	add    BYTE PTR [edx],al
6400d8b6:	add    DWORD PTR [ecx],eax
6400d8b8:	add    DWORD PTR [ecx],eax
6400d8ba:	add    DWORD PTR [ecx],eax
6400d8bc:	add    DWORD PTR [ecx],eax
6400d8be:	add    DWORD PTR [ecx],eax
6400d8c0:	add    DWORD PTR [ecx],eax
6400d8c2:	add    DWORD PTR [ecx],eax
6400d8c4:	add    DWORD PTR [ecx],eax
6400d8c6:	add    al,BYTE PTR [edx]
6400d8c8:	add    al,BYTE PTR [edx]
6400d8ca:	add    al,BYTE PTR [edx]
6400d8cc:	add    al,BYTE PTR [edx]
6400d8ce:	add    al,BYTE PTR [edx]
6400d8d0:	add    al,BYTE PTR [edx]
6400d8d2:	add    al,BYTE PTR [edx]
6400d8d4:	add    al,BYTE PTR [edx]
6400d8d6:	add    al,BYTE PTR [edx]
6400d8d8:	add    al,BYTE PTR [edx]
6400d8da:	add    BYTE PTR [eax],al
6400d8dc:	add    BYTE PTR [eax],al
6400d8de:	add    al,BYTE PTR [edx]
6400d8e0:	add    al,BYTE PTR [edx]
6400d8e2:	add    al,BYTE PTR [edx]
6400d8e4:	add    al,BYTE PTR [edx]
6400d8e6:	add    al,BYTE PTR [edx]
6400d8e8:	add    al,BYTE PTR [edx]
6400d8ea:	add    al,BYTE PTR [edx]
6400d8ec:	add    al,BYTE PTR [edx]
6400d8ee:	add    al,BYTE PTR [edx]
6400d8f0:	add    al,BYTE PTR [edx]
6400d8f2:	add    al,BYTE PTR [edx]
6400d8f4:	add    al,BYTE PTR [edx]
6400d8f6:	add    al,BYTE PTR [edx]
6400d8f8:	add    al,BYTE PTR [edx]
6400d8fa:	add    al,BYTE PTR [edx]
6400d8fc:	add    al,BYTE PTR [edx]
6400d8fe:	add    al,BYTE PTR [edx]
6400d900:	add    al,BYTE PTR [edx]
6400d902:	add    al,BYTE PTR [edx]
6400d904:	add    al,BYTE PTR [edx]
6400d906:	add    al,BYTE PTR [edx]
6400d908:	add    al,BYTE PTR [edx]
6400d90a:	add    al,BYTE PTR [edx]
6400d90c:	add    al,BYTE PTR [edx]
6400d90e:	add    al,BYTE PTR [edx]
6400d910:	add    al,BYTE PTR [edx]
6400d912:	add    al,BYTE PTR [edx]
6400d914:	add    al,BYTE PTR [edx]
6400d916:	add    al,BYTE PTR [edx]
6400d918:	add    al,BYTE PTR [edx]
6400d91a:	add    al,BYTE PTR [edx]
6400d91c:	add    al,BYTE PTR [edx]
6400d91e:	add    al,BYTE PTR [edx]
6400d920:	add    al,BYTE PTR [edx]
6400d922:	add    al,BYTE PTR [edx]
6400d924:	add    al,BYTE PTR [edx]
6400d926:	add    al,BYTE PTR [edx]
6400d928:	add    al,BYTE PTR [edx]
6400d92a:	add    al,BYTE PTR [edx]
6400d92c:	add    al,BYTE PTR [edx]
6400d92e:	add    al,BYTE PTR [edx]
6400d930:	add    al,BYTE PTR [edx]
6400d932:	add    al,BYTE PTR [edx]
6400d934:	add    al,BYTE PTR [edx]
6400d936:	add    al,BYTE PTR [edx]
6400d938:	add    al,BYTE PTR [edx]
6400d93a:	add    BYTE PTR [eax],al
6400d93c:	add    al,BYTE PTR [edx]
6400d93e:	add    al,BYTE PTR [edx]
6400d940:	add    al,BYTE PTR [edx]
6400d942:	add    al,BYTE PTR [edx]
6400d944:	add    al,BYTE PTR [edx]
6400d946:	add    al,BYTE PTR [edx]
6400d948:	add    al,BYTE PTR [edx]
6400d94a:	add    al,BYTE PTR [edx]
6400d94c:	add    al,BYTE PTR [edx]
6400d94e:	add    al,BYTE PTR [edx]
6400d950:	add    al,BYTE PTR [edx]
6400d952:	add    al,BYTE PTR [edx]
6400d954:	add    al,BYTE PTR [edx]
6400d956:	add    al,BYTE PTR [edx]
6400d958:	add    al,BYTE PTR [edx]
6400d95a:	add    al,BYTE PTR [edx]
6400d95c:	add    al,BYTE PTR [edx]
6400d95e:	add    al,BYTE PTR [edx]
6400d960:	add    al,BYTE PTR [edx]
6400d962:	add    al,BYTE PTR [edx]
6400d964:	add    al,BYTE PTR [edx]
6400d966:	add    BYTE PTR [edx],al
6400d968:	add    BYTE PTR [eax],al
6400d96a:	int3   
6400d96b:	int3   
6400d96c:	int3   
6400d96d:	int3   
6400d96e:	int3   
6400d96f:	int3   
6400d970:	mov    eax,DWORD PTR [esp+0x4]
6400d974:	mov    ecx,DWORD PTR [esp+0x8]
6400d978:	mov    ecx,DWORD PTR [eax+ecx*4+0x2c]
6400d97c:	cmp    ecx,0xffffffff
6400d97f:	je     0x6400d98c
6400d981:	mov    edx,0x1
6400d986:	shl    edx,cl
6400d988:	or     WORD PTR [eax+0x1c],dx
6400d98c:	ret    
6400d98d:	int3   
6400d98e:	int3   
6400d98f:	int3   
6400d990:	push   esi
6400d991:	push   edi
6400d992:	mov    edi,DWORD PTR [esp+0xc]
6400d996:	xor    esi,esi
6400d998:	push   esi
6400d999:	push   edi
6400d99a:	call   0x6400d970
6400d99f:	add    esi,0x1
6400d9a2:	add    esp,0x8
6400d9a5:	cmp    esi,0x5
6400d9a8:	jl     0x6400d998
6400d9aa:	pop    edi
6400d9ab:	pop    esi
6400d9ac:	ret    
6400d9ad:	int3   
6400d9ae:	int3   
6400d9af:	int3   
6400d9b0:	push   ebx
6400d9b1:	push   esi
6400d9b2:	mov    esi,DWORD PTR [esp+0xc]
6400d9b6:	mov    ebx,DWORD PTR [esi+0x4]
6400d9b9:	xor    ebx,DWORD PTR [esi]
6400d9bb:	test   ebx,0x2000000
6400d9c1:	je     0x6400d9ce
6400d9c3:	push   0x0
6400d9c5:	push   esi
6400d9c6:	call   0x6400d970
6400d9cb:	add    esp,0x8
6400d9ce:	test   ebx,0x1f80
6400d9d4:	je     0x6400d9e1
6400d9d6:	push   0x2
6400d9d8:	push   esi
6400d9d9:	call   0x6400d970
6400d9de:	add    esp,0x8
6400d9e1:	test   bl,0x70
6400d9e4:	je     0x6400d9f1
6400d9e6:	push   0x1
6400d9e8:	push   esi
6400d9e9:	call   0x6400d970
6400d9ee:	add    esp,0x8
6400d9f1:	test   ebx,0x2000
6400d9f7:	je     0x6400da04
6400d9f9:	push   0x3
6400d9fb:	push   esi
6400d9fc:	call   0x6400d970
6400da01:	add    esp,0x8
6400da04:	test   ebx,0x4000
6400da0a:	je     0x6400da17
6400da0c:	push   0x4
6400da0e:	push   esi
6400da0f:	call   0x6400d970
6400da14:	add    esp,0x8
6400da17:	mov    ax,WORD PTR [esi+0x1c]
6400da1b:	pop    esi
6400da1c:	pop    ebx
6400da1d:	ret    
6400da1e:	int3   
6400da1f:	int3   
6400da20:	push   esi
6400da21:	mov    esi,DWORD PTR [esp+0x10]
6400da25:	push   edi
6400da26:	mov    edi,DWORD PTR [esp+0xc]
6400da2a:	push   esi
6400da2b:	push   edi
6400da2c:	call   0x6400d970
6400da31:	mov    eax,DWORD PTR [esp+0x18]
6400da35:	add    esp,0x8
6400da38:	mov    DWORD PTR [edi+esi*4+0x2c],eax
6400da3c:	pop    edi
6400da3d:	pop    esi
6400da3e:	ret    
6400da3f:	int3   
6400da40:	push   ebx
6400da41:	mov    ebx,DWORD PTR [esp+0x8]
6400da45:	push   esi
6400da46:	mov    esi,DWORD PTR [esp+0x14]
6400da4a:	push   edi
6400da4b:	xor    edi,edi
6400da4d:	cmp    DWORD PTR [esp+0x14],edi
6400da51:	jle    0x6400dba7
6400da57:	mov    eax,ebx
6400da59:	sub    eax,DWORD PTR [esi+0x8]
6400da5c:	cmp    eax,0xf
6400da5f:	jge    0x6400dba7
6400da65:	movzx  eax,BYTE PTR [ebx]
6400da68:	add    eax,0xffffffda
6400da6b:	cmp    eax,0xcd
6400da70:	ja     0x6400dba7
6400da76:	movzx  ecx,BYTE PTR [eax+0x6400dcb4]
6400da7d:	jmp    DWORD PTR [ecx*4+0x6400dc80]
6400da84:	cmp    DWORD PTR [esp+0x1c],0x2
6400da89:	jne    0x6400dba7
6400da8f:	or     DWORD PTR [esi],0x2000000
6400da95:	movzx  edx,BYTE PTR [ebx]
6400da98:	push   0x0
6400da9a:	and    edx,0xf
6400da9d:	push   edi
6400da9e:	push   esi
6400da9f:	mov    DWORD PTR [esi+0x28],edx
6400daa2:	mov    DWORD PTR [esi+0x14],ebx
6400daa5:	mov    DWORD PTR [esi+0x18],0x1
6400daac:	call   0x6400da20
6400dab1:	add    esp,0xc
6400dab4:	jmp    0x6400db8e
6400dab9:	or     DWORD PTR [esi],0x10
6400dabc:	push   0x1
6400dabe:	push   esi
6400dabf:	call   0x6400d970
6400dac4:	mov    DWORD PTR [esi+0x30],edi
6400dac7:	jmp    0x6400db8b
6400dacc:	or     DWORD PTR [esi],0x20
6400dacf:	push   0x1
6400dad1:	push   esi
6400dad2:	call   0x6400d970
6400dad7:	mov    DWORD PTR [esi+0x30],edi
6400dada:	jmp    0x6400db8b
6400dadf:	or     DWORD PTR [esi],0x40
6400dae2:	push   0x1
6400dae4:	push   esi
6400dae5:	call   0x6400d970
6400daea:	mov    DWORD PTR [esi+0x30],edi
6400daed:	jmp    0x6400db8b
6400daf2:	or     DWORD PTR [esi],0x80
6400daf8:	push   0x2
6400dafa:	push   esi
6400dafb:	call   0x6400d970
6400db00:	mov    DWORD PTR [esi+0x34],edi
6400db03:	jmp    0x6400db8b
6400db08:	or     DWORD PTR [esi],0x100
6400db0e:	push   0x2
6400db10:	push   esi
6400db11:	call   0x6400d970
6400db16:	mov    DWORD PTR [esi+0x34],edi
6400db19:	jmp    0x6400db8b
6400db1b:	or     DWORD PTR [esi],0x200
6400db21:	push   0x2
6400db23:	push   esi
6400db24:	call   0x6400d970
6400db29:	mov    DWORD PTR [esi+0x34],edi
6400db2c:	jmp    0x6400db8b
6400db2e:	or     DWORD PTR [esi],0x400
6400db34:	push   0x2
6400db36:	push   esi
6400db37:	call   0x6400d970
6400db3c:	mov    DWORD PTR [esi+0x34],edi
6400db3f:	jmp    0x6400db8b
6400db41:	or     DWORD PTR [esi],0x800
6400db47:	push   0x2
6400db49:	push   esi
6400db4a:	call   0x6400d970
6400db4f:	mov    DWORD PTR [esi+0x34],edi
6400db52:	jmp    0x6400db8b
6400db54:	or     DWORD PTR [esi],0x1000
6400db5a:	push   0x2
6400db5c:	push   esi
6400db5d:	call   0x6400d970
6400db62:	mov    DWORD PTR [esi+0x34],edi
6400db65:	jmp    0x6400db8b
6400db67:	or     DWORD PTR [esi],0x2000
6400db6d:	push   0x3
6400db6f:	push   esi
6400db70:	call   0x6400d970
6400db75:	mov    DWORD PTR [esi+0x38],edi
6400db78:	jmp    0x6400db8b
6400db7a:	or     DWORD PTR [esi],0x4000
6400db80:	push   0x4
6400db82:	push   esi
6400db83:	call   0x6400d970
6400db88:	mov    DWORD PTR [esi+0x3c],edi
6400db8b:	add    esp,0x8
6400db8e:	mov    eax,DWORD PTR [esp+0x14]
6400db92:	sub    eax,0x1
6400db95:	add    ebx,0x1
6400db98:	add    edi,0x1
6400db9b:	test   eax,eax
6400db9d:	mov    DWORD PTR [esp+0x14],eax
6400dba1:	jg     0x6400da57
6400dba7:	mov    eax,0x2
6400dbac:	cmp    DWORD PTR [esp+0x14],eax
6400dbb0:	mov    dl,0xc0
6400dbb2:	jl     0x6400dc01
6400dbb4:	cmp    BYTE PTR [ebx],0xc5
6400dbb7:	jne    0x6400dc01
6400dbb9:	mov    ecx,ebx
6400dbbb:	sub    ecx,DWORD PTR [esi+0x8]
6400dbbe:	cmp    ecx,0xd
6400dbc1:	jg     0x6400dc01
6400dbc3:	cmp    DWORD PTR [esp+0x1c],eax
6400dbc7:	je     0x6400dbce
6400dbc9:	cmp    BYTE PTR [ebx+0x1],dl
6400dbcc:	jb     0x6400dc01
6400dbce:	or     DWORD PTR [esi],0x20000000
6400dbd4:	lea    eax,[ebx+0x1]
6400dbd7:	mov    edi,0x2
6400dbdc:	mov    DWORD PTR [esi+0x10],eax
6400dbdf:	mov    DWORD PTR [esi+0x18],edi
6400dbe2:	mov    al,BYTE PTR [eax]
6400dbe4:	movzx  ecx,al
6400dbe7:	not    ecx
6400dbe9:	test   cl,cl
6400dbeb:	jns    0x6400dbf7
6400dbed:	cmp    DWORD PTR [esp+0x1c],edi
6400dbf1:	jne    0x6400dbf7
6400dbf3:	or     DWORD PTR [esi+0x28],0x4
6400dbf7:	test   al,0x4
6400dbf9:	je     0x6400dbff
6400dbfb:	or     DWORD PTR [esi+0x28],0x10
6400dbff:	add    ebx,edi
6400dc01:	mov    edi,0x3
6400dc06:	cmp    DWORD PTR [esp+0x14],edi
6400dc0a:	jl     0x6400dc78
6400dc0c:	cmp    BYTE PTR [ebx],0xc4
6400dc0f:	jne    0x6400dc78
6400dc11:	mov    eax,ebx
6400dc13:	sub    eax,DWORD PTR [esi+0x8]
6400dc16:	cmp    eax,0xc
6400dc19:	jg     0x6400dc78
6400dc1b:	mov    ecx,DWORD PTR [esi]
6400dc1d:	mov    eax,ecx
6400dc1f:	not    eax
6400dc21:	test   eax,0x20000000
6400dc26:	je     0x6400dc78
6400dc28:	cmp    DWORD PTR [esp+0x1c],0x2
6400dc2d:	je     0x6400dc34
6400dc2f:	cmp    BYTE PTR [ebx+0x1],dl
6400dc32:	jb     0x6400dc78
6400dc34:	or     ecx,0x20000000
6400dc3a:	lea    eax,[ebx+0x1]
6400dc3d:	mov    DWORD PTR [esi],ecx
6400dc3f:	mov    DWORD PTR [esi+0x10],eax
6400dc42:	mov    DWORD PTR [esi+0x18],edi
6400dc45:	movzx  ecx,BYTE PTR [eax]
6400dc48:	not    ecx
6400dc4a:	sar    ecx,0x5
6400dc4d:	and    ecx,0x7
6400dc50:	or     DWORD PTR [esi+0x28],ecx
6400dc53:	mov    al,BYTE PTR [eax+0x1]
6400dc56:	test   al,0x4
6400dc58:	mov    ecx,DWORD PTR [esi+0x28]
6400dc5b:	je     0x6400dc63
6400dc5d:	or     ecx,0x10
6400dc60:	mov    DWORD PTR [esi+0x28],ecx
6400dc63:	test   al,al
6400dc65:	jns    0x6400dc6b
6400dc67:	or     DWORD PTR [esi+0x28],0x8
6400dc6b:	cmp    DWORD PTR [esp+0x1c],0x2
6400dc70:	je     0x6400dc76
6400dc72:	and    DWORD PTR [esi+0x28],0xfffffff0
6400dc76:	add    ebx,edi
6400dc78:	pop    edi
6400dc79:	mov    DWORD PTR [esi+0xc],ebx
6400dc7c:	pop    esi
6400dc7d:	pop    ebx
6400dc7e:	ret    
6400dc7f:	nop
6400dc80:	fild   DWORD PTR cs:[eax]
6400dc83:	repnz fiadd DWORD PTR fs:[eax]
6400dc87:	fs or  bl,bl
6400dc8a:	add    BYTE PTR [ebx+ebx*1-0x25],ah
6400dc8e:	add    BYTE PTR [esp+eax*4-0x26],ah
6400dc92:	add    BYTE PTR [ecx+eax*2-0x25],ah
6400dc96:	add    BYTE PTR [esp+edx*2-0x25],ah
6400dc9a:	add    BYTE PTR [edi+eiz*2-0x25],ah
6400dc9e:	add    BYTE PTR [edx+edi*2-0x25],ah
6400dca2:	add    BYTE PTR [ecx+edi*4-0x26],ah
6400dca6:	add    BYTE PTR [esp+ecx*8-0x26],ah
6400dcaa:	add    BYTE PTR [edi+ebx*8-0x26],ah
6400dcae:	add    BYTE PTR [edi+eiz*4-0x25],ah
6400dcb2:	add    BYTE PTR [eax+eax*1+0xc],ah
6400dcb6:	or     al,0xc
6400dcb8:	or     al,0xc
6400dcba:	or     al,0xc
6400dcbc:	add    DWORD PTR [esp+ecx*1],ecx
6400dcbf:	or     al,0xc
6400dcc1:	or     al,0xc
6400dcc3:	or     al,0x2
6400dcc5:	or     al,0xc
6400dcc7:	or     al,0xc
6400dcc9:	or     al,0xc
6400dccb:	or     al,0x3
6400dccd:	or     al,0x4
6400dccf:	add    al,0x4
6400dcd1:	add    al,0x4
6400dcd3:	add    al,0x4
6400dcd5:	add    al,0x4
6400dcd7:	add    al,0x4
6400dcd9:	add    al,0x4
6400dcdb:	add    al,0x4
6400dcdd:	add    al,0xc
6400dcdf:	or     al,0xc
6400dce1:	or     al,0xc
6400dce3:	or     al,0xc
6400dce5:	or     al,0xc
6400dce7:	or     al,0xc
6400dce9:	or     al,0xc
6400dceb:	or     al,0xc
6400dced:	or     al,0xc
6400dcef:	or     al,0xc
6400dcf1:	or     al,0x5
6400dcf3:	push   es
6400dcf4:	pop    es
6400dcf5:	or     BYTE PTR [esp+ecx*1],cl
6400dcf8:	or     al,0xc
6400dcfa:	or     al,0xc
6400dcfc:	or     al,0xc
6400dcfe:	or     al,0xc
6400dd00:	or     al,0xc
6400dd02:	or     al,0xc
6400dd04:	or     al,0xc
6400dd06:	or     al,0xc
6400dd08:	or     al,0xc
6400dd0a:	or     al,0xc
6400dd0c:	or     al,0xc
6400dd0e:	or     al,0xc
6400dd10:	or     al,0xc
6400dd12:	or     al,0xc
6400dd14:	or     al,0xc
6400dd16:	or     al,0xc
6400dd18:	or     al,0xc
6400dd1a:	or     al,0xc
6400dd1c:	or     al,0xc
6400dd1e:	or     al,0xc
6400dd20:	or     al,0xc
6400dd22:	or     al,0xc
6400dd24:	or     al,0xc
6400dd26:	or     al,0xc
6400dd28:	or     al,0xc
6400dd2a:	or     al,0xc
6400dd2c:	or     al,0xc
6400dd2e:	or     al,0xc
6400dd30:	or     al,0xc
6400dd32:	or     al,0xc
6400dd34:	or     al,0xc
6400dd36:	or     al,0xc
6400dd38:	or     al,0xc
6400dd3a:	or     al,0xc
6400dd3c:	or     al,0xc
6400dd3e:	or     al,0xc
6400dd40:	or     al,0xc
6400dd42:	or     al,0xc
6400dd44:	or     al,0xc
6400dd46:	or     al,0xc
6400dd48:	or     al,0xc
6400dd4a:	or     al,0xc
6400dd4c:	or     al,0xc
6400dd4e:	or     al,0xc
6400dd50:	or     al,0xc
6400dd52:	or     al,0xc
6400dd54:	or     al,0xc
6400dd56:	or     al,0xc
6400dd58:	or     al,0xc
6400dd5a:	or     al,0xc
6400dd5c:	or     al,0xc
6400dd5e:	or     al,0xc
6400dd60:	or     al,0xc
6400dd62:	or     al,0xc
6400dd64:	or     al,0xc
6400dd66:	or     al,0xc
6400dd68:	or     al,0xc
6400dd6a:	or     al,0xc
6400dd6c:	or     al,0xc
6400dd6e:	or     al,0xc
6400dd70:	or     al,0xc
6400dd72:	or     al,0xc
6400dd74:	or     al,0xc
6400dd76:	or     al,0xc
6400dd78:	or     al,0xc
6400dd7a:	or     al,0xc
6400dd7c:	or     al,0xc
6400dd7e:	or     DWORD PTR [edx+ecx*1],ecx
6400dd81:	or     ecx,esp
6400dd83:	int3   
6400dd84:	int3   
6400dd85:	int3   
6400dd86:	int3   
6400dd87:	int3   
6400dd88:	int3   
6400dd89:	int3   
6400dd8a:	int3   
6400dd8b:	int3   
6400dd8c:	int3   
6400dd8d:	int3   
6400dd8e:	int3   
6400dd8f:	int3   
6400dd90:	push   esi
6400dd91:	mov    esi,DWORD PTR [esp+0xc]
6400dd95:	mov    eax,DWORD PTR [esi]
6400dd97:	push   edi
6400dd98:	mov    edi,DWORD PTR [esp+0x14]
6400dd9c:	cmp    edi,0x2
6400dd9f:	jne    0x6400dda8
6400dda1:	and    eax,0x1800
6400dda6:	jmp    0x6400ddad
6400dda8:	and    eax,0x1f80
6400ddad:	test   eax,eax
6400ddaf:	mov    ecx,DWORD PTR [esp+0x18]
6400ddb3:	mov    edx,DWORD PTR [esp+0xc]
6400ddb7:	je     0x6400ddc2
6400ddb9:	cmp    eax,edx
6400ddbb:	je     0x6400ddc2
6400ddbd:	or     DWORD PTR [esi+0x4],eax
6400ddc0:	jmp    0x6400ddc8
6400ddc2:	or     BYTE PTR [ecx+0xc],0x80
6400ddc6:	mov    eax,edx
6400ddc8:	cmp    eax,0x400
6400ddcd:	ja     0x6400ddfe
6400ddcf:	je     0x6400ddf8
6400ddd1:	cmp    eax,0x80
6400ddd6:	je     0x6400ddf2
6400ddd8:	cmp    eax,0x100
6400dddd:	je     0x6400ddec
6400dddf:	cmp    eax,0x200
6400dde4:	jne    0x6400de16
6400dde6:	or     BYTE PTR [ecx+0xc],0x47
6400ddea:	jmp    0x6400de16
6400ddec:	or     BYTE PTR [ecx+0xc],0x46
6400ddf0:	jmp    0x6400de16
6400ddf2:	or     BYTE PTR [ecx+0xc],0x45
6400ddf6:	jmp    0x6400de16
6400ddf8:	or     BYTE PTR [ecx+0xc],0x44
6400ddfc:	jmp    0x6400de16
6400ddfe:	cmp    eax,0x800
6400de03:	je     0x6400de12
6400de05:	cmp    eax,0x1000
6400de0a:	jne    0x6400de16
6400de0c:	or     BYTE PTR [ecx+0xc],0x49
6400de10:	jmp    0x6400de16
6400de12:	or     BYTE PTR [ecx+0xc],0x48
6400de16:	cmp    edi,0x2
6400de19:	pop    edi
6400de1a:	pop    esi
6400de1b:	jne    0x6400de28
6400de1d:	test   eax,0x780
6400de22:	je     0x6400de28
6400de24:	mov    BYTE PTR [ecx+0xc],0xff
6400de28:	ret    
6400de29:	int3   
6400de2a:	int3   
6400de2b:	int3   
6400de2c:	int3   
6400de2d:	int3   
6400de2e:	int3   
6400de2f:	int3   
6400de30:	mov    ecx,DWORD PTR [esi]
6400de32:	mov    eax,ecx
6400de34:	and    eax,0x2060
6400de39:	cmp    eax,0x40
6400de3c:	push   edi
6400de3d:	ja     0x6400de7f
6400de3f:	je     0x6400de6d
6400de41:	test   eax,eax
6400de43:	je     0x6400de5f
6400de45:	cmp    eax,0x20
6400de48:	jne    0x6400de86
6400de4a:	mov    eax,DWORD PTR [edx+0x4]
6400de4d:	movzx  eax,BYTE PTR [eax+0x3]
6400de51:	mov    edi,DWORD PTR [edx+0x8]
6400de54:	mov    eax,DWORD PTR [edi+eax*4]
6400de57:	and    ecx,0xffffffdf
6400de5a:	jmp    0x6400dee6
6400de5f:	mov    ecx,DWORD PTR [edx+0x4]
6400de62:	movzx  eax,BYTE PTR [ecx]
6400de65:	mov    ecx,DWORD PTR [edx+0x8]
6400de68:	mov    eax,DWORD PTR [ecx+eax*4]
6400de6b:	jmp    0x6400dee8
6400de6d:	mov    eax,DWORD PTR [edx+0x4]
6400de70:	movzx  eax,BYTE PTR [eax+0x2]
6400de74:	mov    edi,DWORD PTR [edx+0x8]
6400de77:	mov    eax,DWORD PTR [edi+eax*4]
6400de7a:	and    ecx,0xffffffbf
6400de7d:	jmp    0x6400dee6
6400de7f:	cmp    eax,0x2000
6400de84:	je     0x6400decc
6400de86:	mov    eax,ecx
6400de88:	and    eax,0x60
6400de8b:	cmp    al,0x60
6400de8d:	je     0x6400dec8
6400de8f:	test   cl,0x20
6400de92:	je     0x6400dea0
6400de94:	mov    eax,DWORD PTR [edx+0x4]
6400de97:	movzx  eax,BYTE PTR [eax+0x3]
6400de9b:	and    ecx,0xffffffdf
6400de9e:	jmp    0x6400deaf
6400dea0:	test   cl,0x40
6400dea3:	je     0x6400dec8
6400dea5:	mov    eax,DWORD PTR [edx+0x4]
6400dea8:	movzx  eax,BYTE PTR [eax+0x2]
6400deac:	and    ecx,0xffffffbf
6400deaf:	mov    edi,DWORD PTR [edx+0x8]
6400deb2:	mov    eax,DWORD PTR [edi+eax*4]
6400deb5:	test   eax,eax
6400deb7:	mov    DWORD PTR [esi],ecx
6400deb9:	je     0x6400dec8
6400debb:	mov    ecx,DWORD PTR [eax+0x8]
6400debe:	not    ecx
6400dec0:	test   ecx,0x2000
6400dec6:	je     0x6400dee8
6400dec8:	xor    eax,eax
6400deca:	pop    edi
6400decb:	ret    
6400decc:	mov    eax,DWORD PTR [edx+0x4]
6400decf:	movzx  eax,BYTE PTR [eax+0x1]
6400ded3:	mov    edi,DWORD PTR [edx+0x8]
6400ded6:	mov    eax,DWORD PTR [edi+eax*4]
6400ded9:	mov    DWORD PTR [esi+0x20],0x1
6400dee0:	and    ecx,0xffffdfff
6400dee6:	mov    DWORD PTR [esi],ecx
6400dee8:	test   eax,eax
6400deea:	jne    0x6400def8
6400deec:	mov    ecx,DWORD PTR [edx+0x4]
6400deef:	movzx  eax,BYTE PTR [ecx]
6400def2:	mov    ecx,DWORD PTR [edx+0x8]
6400def5:	mov    eax,DWORD PTR [ecx+eax*4]
6400def8:	pop    edi
6400def9:	ret    
6400defa:	int3   
6400defb:	int3   
6400defc:	int3   
6400defd:	int3   
6400defe:	int3   
6400deff:	int3   
6400df00:	test   DWORD PTR [edx],0x2002070
6400df06:	mov    ecx,DWORD PTR [edx+0x10]
6400df09:	mov    al,BYTE PTR [ecx]
6400df0b:	push   ebx
6400df0c:	mov    ebx,0x4
6400df11:	je     0x6400df17
6400df13:	xor    eax,eax
6400df15:	pop    ebx
6400df16:	ret    
6400df17:	cmp    DWORD PTR [edx+0x18],0x2
6400df1b:	push   ebp
6400df1c:	push   esi
6400df1d:	jne    0x6400df38
6400df1f:	movzx  ecx,al
6400df22:	mov    eax,ecx
6400df24:	not    eax
6400df26:	sar    eax,0x3
6400df29:	and    al,0xf
6400df2b:	movzx  esi,al
6400df2e:	mov    DWORD PTR [edx+0x24],esi
6400df31:	mov    esi,0x1
6400df36:	jmp    0x6400df50
6400df38:	movzx  ecx,BYTE PTR [ecx+0x1]
6400df3c:	and    eax,0x1f
6400df3f:	mov    esi,eax
6400df41:	mov    eax,ecx
6400df43:	not    eax
6400df45:	sar    eax,0x3
6400df48:	and    al,0xf
6400df4a:	movzx  ebp,al
6400df4d:	mov    DWORD PTR [edx+0x24],ebp
6400df50:	and    ecx,0x3
6400df53:	sub    esi,0x1
6400df56:	je     0x6400df74
6400df58:	sub    esi,0x1
6400df5b:	je     0x6400df6d
6400df5d:	sub    esi,0x1
6400df60:	jne    0x6400e011
6400df66:	mov    edx,0x6404df3c
6400df6b:	jmp    0x6400df79
6400df6d:	mov    edx,0x6404faac
6400df72:	jmp    0x6400df79
6400df74:	mov    edx,0x64051328
6400df79:	test   al,al
6400df7b:	jne    0x6400df82
6400df7d:	mov    ebx,0x8
6400df82:	add    ebx,ecx
6400df84:	add    DWORD PTR [edi+0x14],0xffffffff
6400df88:	mov    esi,DWORD PTR [edi+0x14]
6400df8b:	js     0x6400e011
6400df91:	mov    ecx,DWORD PTR [edi+0x10]
6400df94:	movzx  eax,BYTE PTR [ecx]
6400df97:	mov    ebp,DWORD PTR [edx+0x4]
6400df9a:	movzx  eax,BYTE PTR [eax+ebp*1]
6400df9e:	mov    edx,DWORD PTR [edx+0x8]
6400dfa1:	mov    eax,DWORD PTR [edx+eax*4]
6400dfa4:	test   eax,eax
6400dfa6:	je     0x6400e011
6400dfa8:	mov    dl,BYTE PTR [eax]
6400dfaa:	cmp    dl,0x5
6400dfad:	je     0x6400e000
6400dfaf:	cmp    dl,0x1
6400dfb2:	je     0x6400e011
6400dfb4:	cmp    dl,0x4
6400dfb7:	je     0x6400e011
6400dfb9:	lea    edx,[ecx+0x1]
6400dfbc:	lea    ecx,[esi-0x1]
6400dfbf:	test   ecx,ecx
6400dfc1:	mov    DWORD PTR [edi+0x10],edx
6400dfc4:	mov    DWORD PTR [edi+0x14],ecx
6400dfc7:	jl     0x6400e011
6400dfc9:	mov    cl,BYTE PTR [eax]
6400dfcb:	cmp    cl,0x2
6400dfce:	jne    0x6400dfe2
6400dfd0:	movzx  ecx,BYTE PTR [edx]
6400dfd3:	mov    edx,DWORD PTR [eax+0x4]
6400dfd6:	shr    ecx,0x3
6400dfd9:	and    ecx,0x7
6400dfdc:	movzx  ecx,BYTE PTR [ecx+edx*1]
6400dfe0:	jmp    0x6400dff1
6400dfe2:	cmp    cl,0x3
6400dfe5:	jne    0x6400e011
6400dfe7:	movzx  ecx,BYTE PTR [edx]
6400dfea:	mov    edx,DWORD PTR [eax+0x4]
6400dfed:	movzx  ecx,BYTE PTR [edx+ecx*1]
6400dff1:	mov    edx,DWORD PTR [eax+0x8]
6400dff4:	mov    eax,DWORD PTR [edx+ecx*4]
6400dff7:	test   eax,eax
6400dff9:	je     0x6400e011
6400dffb:	cmp    BYTE PTR [eax],0x5
6400dffe:	jne    0x6400e011
6400e000:	mov    ecx,DWORD PTR [eax+0x4]
6400e003:	movzx  edx,BYTE PTR [ecx+ebx*1]
6400e007:	mov    eax,DWORD PTR [eax+0x8]
6400e00a:	mov    eax,DWORD PTR [eax+edx*4]
6400e00d:	pop    esi
6400e00e:	pop    ebp
6400e00f:	pop    ebx
6400e010:	ret    
6400e011:	pop    esi
6400e012:	pop    ebp
6400e013:	xor    eax,eax
6400e015:	pop    ebx
6400e016:	ret    
6400e017:	int3   
6400e018:	int3   
6400e019:	int3   
6400e01a:	int3   
6400e01b:	int3   
6400e01c:	int3   
6400e01d:	int3   
6400e01e:	int3   
6400e01f:	int3   
6400e020:	sub    esp,0x8
6400e023:	push   ebx
6400e024:	push   esi
6400e025:	mov    esi,DWORD PTR [esp+0x18]
6400e029:	mov    eax,DWORD PTR [esi+0x28]
6400e02c:	xor    ebx,ebx
6400e02e:	test   DWORD PTR [esi],0x20000000
6400e034:	push   edi
6400e035:	mov    edi,DWORD PTR [esp+0x18]
6400e039:	mov    DWORD PTR [esp+0x10],eax
6400e03d:	je     0x6400e06f
6400e03f:	mov    edx,esi
6400e041:	call   0x6400df00
6400e046:	test   eax,eax
6400e048:	je     0x6400e308
6400e04e:	test   BYTE PTR [eax+0xc],0x10
6400e052:	je     0x6400e308
6400e058:	mov    ecx,DWORD PTR [esi+0x28]
6400e05b:	not    ecx
6400e05d:	test   cl,0x10
6400e060:	je     0x6400e308
6400e066:	pop    edi
6400e067:	pop    esi
6400e068:	xor    eax,eax
6400e06a:	pop    ebx
6400e06b:	add    esp,0x8
6400e06e:	ret    
6400e06f:	push   ebp
6400e070:	or     ebp,0xffffffff
6400e073:	add    DWORD PTR [edi+0x14],ebp
6400e076:	mov    eax,DWORD PTR [edi+0x14]
6400e079:	js     0x6400e305
6400e07f:	mov    edx,DWORD PTR [edi+0x10]
6400e082:	movzx  ecx,BYTE PTR [edx]
6400e085:	cmp    ecx,0x9b
6400e08b:	mov    DWORD PTR [esp+0x10],ecx
6400e08f:	jne    0x6400e0b6
6400e091:	push   esi
6400e092:	lea    ebx,[ebp+0x2]
6400e095:	call   0x6400d990
6400e09a:	add    DWORD PTR [edi+0x10],ebx
6400e09d:	mov    ecx,DWORD PTR [edi+0x10]
6400e0a0:	add    esp,0x4
6400e0a3:	add    DWORD PTR [edi+0x14],ebp
6400e0a6:	mov    eax,DWORD PTR [edi+0x14]
6400e0a9:	js     0x6400e305
6400e0af:	movzx  ecx,BYTE PTR [ecx]
6400e0b2:	mov    DWORD PTR [esp+0x10],ecx
6400e0b6:	mov    edx,DWORD PTR ds:0x64052088
6400e0bc:	movzx  edx,BYTE PTR [edx+ecx*1]
6400e0c0:	mov    ebp,DWORD PTR ds:0x6405208c
6400e0c6:	mov    ebp,DWORD PTR [ebp+edx*4+0x0]
6400e0ca:	test   ebp,ebp
6400e0cc:	je     0x6400e305
6400e0d2:	cmp    BYTE PTR [ebp+0x0],0x1
6400e0d6:	jne    0x6400e16a
6400e0dc:	test   ebx,ebx
6400e0de:	jne    0x6400e16a
6400e0e4:	mov    eax,ecx
6400e0e6:	sub    eax,0x63
6400e0e9:	je     0x6400e14e
6400e0eb:	sub    eax,0x2a
6400e0ee:	je     0x6400e133
6400e0f0:	sub    eax,0x3
6400e0f3:	jne    0x6400e144
6400e0f5:	test   BYTE PTR [esi],0x40
6400e0f8:	je     0x6400e10b
6400e0fa:	or     DWORD PTR [esi+0x4],0x40
6400e0fe:	pop    ebp
6400e0ff:	pop    edi
6400e100:	pop    esi
6400e101:	mov    eax,0x640520c0
6400e106:	pop    ebx
6400e107:	add    esp,0x8
6400e10a:	ret    
6400e10b:	mov    eax,DWORD PTR [esp+0x14]
6400e10f:	test   al,0x8
6400e111:	je     0x6400e11a
6400e113:	or     DWORD PTR [esi+0x4],0x2000000
6400e11a:	cmp    DWORD PTR [edi+0x18],0x2
6400e11e:	jne    0x6400e126
6400e120:	not    eax
6400e122:	test   al,0x1
6400e124:	je     0x6400e144
6400e126:	pop    ebp
6400e127:	pop    edi
6400e128:	pop    esi
6400e129:	mov    eax,0x640520b4
6400e12e:	pop    ebx
6400e12f:	add    esp,0x8
6400e132:	ret    
6400e133:	and    DWORD PTR [esi],0xffffe07f
6400e139:	push   0x2
6400e13b:	push   esi
6400e13c:	call   0x6400d970
6400e141:	add    esp,0x8
6400e144:	mov    eax,ebp
6400e146:	pop    ebp
6400e147:	pop    edi
6400e148:	pop    esi
6400e149:	pop    ebx
6400e14a:	add    esp,0x8
6400e14d:	ret    
6400e14e:	cmp    DWORD PTR [edi+0x18],0x2
6400e152:	mov    eax,0x6405209c
6400e157:	je     0x6400e307
6400e15d:	pop    ebp
6400e15e:	pop    edi
6400e15f:	pop    esi
6400e160:	mov    eax,0x64052090
6400e165:	pop    ebx
6400e166:	add    esp,0x8
6400e169:	ret    
6400e16a:	add    DWORD PTR [edi+0x10],0x1
6400e16e:	mov    esi,DWORD PTR [edi+0x10]
6400e171:	lea    edx,[eax-0x1]
6400e174:	test   edx,edx
6400e176:	mov    DWORD PTR [edi+0x14],edx
6400e179:	jl     0x6400e305
6400e17f:	mov    cl,BYTE PTR [ebp+0x0]
6400e182:	cmp    cl,0x2
6400e185:	movzx  eax,BYTE PTR [esi]
6400e188:	jne    0x6400e1a9
6400e18a:	test   ebx,ebx
6400e18c:	jne    0x6400e1a9
6400e18e:	mov    ecx,DWORD PTR [ebp+0x4]
6400e191:	shr    eax,0x3
6400e194:	and    eax,0x7
6400e197:	movzx  edx,BYTE PTR [eax+ecx*1]
6400e19b:	mov    eax,DWORD PTR [ebp+0x8]
6400e19e:	mov    eax,DWORD PTR [eax+edx*4]
6400e1a1:	pop    ebp
6400e1a2:	pop    edi
6400e1a3:	pop    esi
6400e1a4:	pop    ebx
6400e1a5:	add    esp,0x8
6400e1a8:	ret    
6400e1a9:	cmp    cl,0x4
6400e1ac:	jne    0x6400e212
6400e1ae:	cmp    eax,0xc0
6400e1b3:	jae    0x6400e1bd
6400e1b5:	shr    eax,0x3
6400e1b8:	and    eax,0x7
6400e1bb:	jmp    0x6400e1c2
6400e1bd:	sub    eax,0xb8
6400e1c2:	mov    ecx,DWORD PTR [ebp+0x4]
6400e1c5:	movzx  edx,BYTE PTR [ecx+eax*1]
6400e1c9:	mov    eax,DWORD PTR [ebp+0x8]
6400e1cc:	mov    eax,DWORD PTR [eax+edx*4]
6400e1cf:	test   eax,eax
6400e1d1:	je     0x6400e305
6400e1d7:	cmp    BYTE PTR [eax],0x1
6400e1da:	jne    0x6400e1fd
6400e1dc:	mov    ecx,DWORD PTR [eax+0x8]
6400e1df:	not    ecx
6400e1e1:	test   ecx,0x2000
6400e1e7:	je     0x6400e307
6400e1ed:	test   ebx,ebx
6400e1ef:	jne    0x6400e305
6400e1f5:	pop    ebp
6400e1f6:	pop    edi
6400e1f7:	pop    esi
6400e1f8:	pop    ebx
6400e1f9:	add    esp,0x8
6400e1fc:	ret    
6400e1fd:	mov    edx,DWORD PTR [eax+0x4]
6400e200:	movzx  ecx,BYTE PTR [edx+ebx*1]
6400e204:	mov    edx,DWORD PTR [eax+0x8]
6400e207:	mov    eax,DWORD PTR [edx+ecx*4]
6400e20a:	pop    ebp
6400e20b:	pop    edi
6400e20c:	pop    esi
6400e20d:	pop    ebx
6400e20e:	add    esp,0x8
6400e211:	ret    
6400e212:	test   ebx,ebx
6400e214:	jne    0x6400e305
6400e21a:	cmp    cl,0x3
6400e21d:	jne    0x6400e26f
6400e21f:	mov    ecx,DWORD PTR [ebp+0x4]
6400e222:	movzx  ecx,BYTE PTR [ecx+eax*1]
6400e226:	mov    ebx,DWORD PTR [ebp+0x8]
6400e229:	mov    ebp,DWORD PTR [ebx+ecx*4]
6400e22c:	test   ebp,ebp
6400e22e:	je     0x6400e305
6400e234:	cmp    DWORD PTR [esp+0x10],0xf
6400e239:	jne    0x6400e24d
6400e23b:	cmp    eax,0xf
6400e23e:	jne    0x6400e24d
6400e240:	pop    ebp
6400e241:	pop    edi
6400e242:	pop    esi
6400e243:	mov    eax,0x64048cc4
6400e248:	pop    ebx
6400e249:	add    esp,0x8
6400e24c:	ret    
6400e24d:	mov    al,BYTE PTR [ebp+0x0]
6400e250:	cmp    al,0x1
6400e252:	je     0x6400e144
6400e258:	cmp    al,0x5
6400e25a:	jne    0x6400e26f
6400e25c:	mov    esi,DWORD PTR [esp+0x20]
6400e260:	mov    edx,ebp
6400e262:	call   0x6400de30
6400e267:	pop    ebp
6400e268:	pop    edi
6400e269:	pop    esi
6400e26a:	pop    ebx
6400e26b:	add    esp,0x8
6400e26e:	ret    
6400e26f:	lea    ecx,[edx-0x1]
6400e272:	test   ecx,ecx
6400e274:	lea    eax,[esi+0x1]
6400e277:	mov    DWORD PTR [edi+0x10],eax
6400e27a:	mov    DWORD PTR [edi+0x14],ecx
6400e27d:	jl     0x6400e305
6400e283:	movzx  ecx,BYTE PTR [eax]
6400e286:	mov    edi,DWORD PTR [ebp+0x4]
6400e289:	mov    esi,DWORD PTR [ebp+0x8]
6400e28c:	mov    edx,ecx
6400e28e:	shr    edx,0x3
6400e291:	and    edx,0x7
6400e294:	movzx  eax,BYTE PTR [edx+edi*1]
6400e298:	mov    dl,BYTE PTR [ebp+0x0]
6400e29b:	cmp    dl,0x2
6400e29e:	mov    eax,DWORD PTR [esi+eax*4]
6400e2a1:	jne    0x6400e2bf
6400e2a3:	test   eax,eax
6400e2a5:	je     0x6400e305
6400e2a7:	cmp    BYTE PTR [eax],0x1
6400e2aa:	je     0x6400e307
6400e2ac:	mov    esi,DWORD PTR [esp+0x20]
6400e2b0:	mov    edx,eax
6400e2b2:	call   0x6400de30
6400e2b7:	pop    ebp
6400e2b8:	pop    edi
6400e2b9:	pop    esi
6400e2ba:	pop    ebx
6400e2bb:	add    esp,0x8
6400e2be:	ret    
6400e2bf:	cmp    dl,0x4
6400e2c2:	jne    0x6400e2e9
6400e2c4:	test   eax,eax
6400e2c6:	je     0x6400e2ce
6400e2c8:	test   BYTE PTR [eax+0x8],0x2
6400e2cc:	jne    0x6400e307
6400e2ce:	cmp    ecx,0xc0
6400e2d4:	jb     0x6400e307
6400e2d6:	movzx  ecx,BYTE PTR [edi+ecx*1-0xb8]
6400e2de:	mov    eax,DWORD PTR [esi+ecx*4]
6400e2e1:	pop    ebp
6400e2e2:	pop    edi
6400e2e3:	pop    esi
6400e2e4:	pop    ebx
6400e2e5:	add    esp,0x8
6400e2e8:	ret    
6400e2e9:	cmp    dl,0x3
6400e2ec:	jne    0x6400e305
6400e2ee:	movzx  edx,BYTE PTR [edi+ecx*1]
6400e2f2:	mov    eax,DWORD PTR [esi+edx*4]
6400e2f5:	test   eax,eax
6400e2f7:	je     0x6400e305
6400e2f9:	mov    cl,BYTE PTR [eax]
6400e2fb:	cmp    cl,0x1
6400e2fe:	je     0x6400e307
6400e300:	cmp    cl,0x5
6400e303:	je     0x6400e2ac
6400e305:	xor    eax,eax
6400e307:	pop    ebp
6400e308:	pop    edi
6400e309:	pop    esi
6400e30a:	pop    ebx
6400e30b:	add    esp,0x8
6400e30e:	ret    
6400e30f:	int3   
6400e310:	mov    ecx,DWORD PTR [esp+0x4]
6400e314:	push   esi
6400e315:	mov    esi,DWORD PTR [ecx+0x14]
6400e318:	cmp    esi,0x1
6400e31b:	jl     0x6400e34f
6400e31d:	mov    edx,DWORD PTR [ecx+0x10]
6400e320:	movzx  eax,BYTE PTR [edx]
6400e323:	push   edi
6400e324:	mov    edi,DWORD PTR ds:0x640505b0
6400e32a:	movzx  eax,BYTE PTR [eax+edi*1]
6400e32e:	mov    edi,DWORD PTR ds:0x640505b4
6400e334:	mov    eax,DWORD PTR [edi+eax*4]
6400e337:	test   eax,eax
6400e339:	pop    edi
6400e33a:	je     0x6400e34f
6400e33c:	cmp    BYTE PTR [eax],0x1
6400e33f:	jne    0x6400e34f
6400e341:	add    esi,0xffffffff
6400e344:	add    edx,0x1
6400e347:	mov    DWORD PTR [ecx+0x14],esi
6400e34a:	mov    DWORD PTR [ecx+0x10],edx
6400e34d:	pop    esi
6400e34e:	ret    
6400e34f:	xor    eax,eax
6400e351:	pop    esi
6400e352:	ret    
6400e353:	int3   
6400e354:	int3   
6400e355:	int3   
6400e356:	int3   
6400e357:	int3   
6400e358:	int3   
6400e359:	int3   
6400e35a:	int3   
6400e35b:	int3   
6400e35c:	int3   
6400e35d:	int3   
6400e35e:	int3   
6400e35f:	int3   
6400e360:	push   esi
6400e361:	mov    esi,eax
6400e363:	mov    eax,DWORD PTR [esi+0x1c]
6400e366:	mov    ecx,DWORD PTR [esi+0x10]
6400e369:	push   edi
6400e36a:	mov    edi,DWORD PTR [eax+0x14]
6400e36d:	cmp    edi,ecx
6400e36f:	jbe    0x6400e373
6400e371:	mov    edi,ecx
6400e373:	test   edi,edi
6400e375:	je     0x6400e3ac
6400e377:	mov    eax,DWORD PTR [eax+0x10]
6400e37a:	mov    ecx,DWORD PTR [esi+0xc]
6400e37d:	push   edi
6400e37e:	push   eax
6400e37f:	push   ecx
6400e380:	call   0x640151f0
6400e385:	mov    eax,DWORD PTR [esi+0x1c]
6400e388:	add    DWORD PTR [esi+0xc],edi
6400e38b:	add    DWORD PTR [eax+0x10],edi
6400e38e:	add    DWORD PTR [esi+0x14],edi
6400e391:	sub    DWORD PTR [esi+0x10],edi
6400e394:	mov    eax,DWORD PTR [esi+0x1c]
6400e397:	sub    DWORD PTR [eax+0x14],edi
6400e39a:	mov    esi,DWORD PTR [esi+0x1c]
6400e39d:	add    esp,0xc
6400e3a0:	cmp    DWORD PTR [esi+0x14],0x0
6400e3a4:	jne    0x6400e3ac
6400e3a6:	mov    edx,DWORD PTR [esi+0x8]
6400e3a9:	mov    DWORD PTR [esi+0x10],edx
6400e3ac:	pop    edi
6400e3ad:	pop    esi
6400e3ae:	ret    
6400e3af:	int3   
6400e3b0:	mov    eax,DWORD PTR [esi+0x4]
6400e3b3:	push   edi
6400e3b4:	mov    edi,eax
6400e3b6:	cmp    edi,ecx
6400e3b8:	jbe    0x6400e3bc
6400e3ba:	mov    edi,ecx
6400e3bc:	test   edi,edi
6400e3be:	jne    0x6400e3c4
6400e3c0:	xor    eax,eax
6400e3c2:	pop    edi
6400e3c3:	ret    
6400e3c4:	sub    eax,edi
6400e3c6:	mov    DWORD PTR [esi+0x4],eax
6400e3c9:	mov    eax,DWORD PTR [esi+0x1c]
6400e3cc:	mov    eax,DWORD PTR [eax+0x18]
6400e3cf:	cmp    eax,0x1
6400e3d2:	jne    0x6400e3e3
6400e3d4:	mov    ecx,DWORD PTR [esi]
6400e3d6:	mov    edx,DWORD PTR [esi+0x30]
6400e3d9:	push   edi
6400e3da:	push   ecx
6400e3db:	push   edx
6400e3dc:	call   0x64010820
6400e3e1:	jmp    0x6400e3f5
6400e3e3:	cmp    eax,0x2
6400e3e6:	jne    0x6400e3fb
6400e3e8:	mov    eax,DWORD PTR [esi]
6400e3ea:	mov    ecx,DWORD PTR [esi+0x30]
6400e3ed:	push   edi
6400e3ee:	push   eax
6400e3ef:	push   ecx
6400e3f0:	call   0x64012510
6400e3f5:	mov    DWORD PTR [esi+0x30],eax
6400e3f8:	add    esp,0xc
6400e3fb:	mov    edx,DWORD PTR [esi]
6400e3fd:	mov    eax,DWORD PTR [esp+0x8]
6400e401:	push   edi
6400e402:	push   edx
6400e403:	push   eax
6400e404:	call   0x640151f0
6400e409:	add    DWORD PTR [esi],edi
6400e40b:	add    DWORD PTR [esi+0x8],edi
6400e40e:	add    esp,0xc
6400e411:	mov    eax,edi
6400e413:	pop    edi
6400e414:	ret    
6400e415:	int3   
6400e416:	int3   
6400e417:	int3   
6400e418:	int3   
6400e419:	int3   
6400e41a:	int3   
6400e41b:	int3   
6400e41c:	int3   
6400e41d:	int3   
6400e41e:	int3   
6400e41f:	int3   
6400e420:	sub    esp,0x14
6400e423:	mov    ecx,DWORD PTR [edi+0x7c]
6400e426:	mov    edx,DWORD PTR [edi+0x6c]
6400e429:	push   ebx
6400e42a:	push   ebp
6400e42b:	mov    ebp,DWORD PTR [edi+0x78]
6400e42e:	push   esi
6400e42f:	mov    esi,DWORD PTR [edi+0x90]
6400e435:	mov    DWORD PTR [esp+0x10],ecx
6400e439:	mov    ecx,DWORD PTR [edi+0x38]
6400e43c:	mov    DWORD PTR [esp+0x14],esi
6400e440:	mov    esi,DWORD PTR [edi+0x2c]
6400e443:	lea    ebx,[esi-0x106]
6400e449:	add    ecx,edx
6400e44b:	cmp    edx,ebx
6400e44d:	jbe    0x6400e45d
6400e44f:	sub    edx,esi
6400e451:	add    edx,0x106
6400e457:	mov    DWORD PTR [esp+0x18],edx
6400e45b:	jmp    0x6400e465
6400e45d:	mov    DWORD PTR [esp+0x18],0x0
6400e465:	cmp    ebp,DWORD PTR [edi+0x8c]
6400e46b:	movzx  edx,BYTE PTR [ecx+ebp*1-0x1]
6400e470:	mov    BYTE PTR [esp+0xe],dl
6400e474:	movzx  edx,BYTE PTR [ecx+ebp*1]
6400e478:	lea    esi,[ecx+0x102]
6400e47e:	mov    BYTE PTR [esp+0xf],dl
6400e482:	jb     0x6400e489
6400e484:	shr    DWORD PTR [esp+0x10],0x2
6400e489:	mov    edx,DWORD PTR [edi+0x74]
6400e48c:	cmp    DWORD PTR [esp+0x14],edx
6400e490:	jbe    0x6400e496
6400e492:	mov    DWORD PTR [esp+0x14],edx
6400e496:	mov    edx,DWORD PTR [edi+0x38]
6400e499:	mov    bl,BYTE PTR [esp+0xf]
6400e49d:	add    edx,eax
6400e49f:	cmp    BYTE PTR [edx+ebp*1],bl
6400e4a2:	jne    0x6400e56f
6400e4a8:	mov    bl,BYTE PTR [esp+0xe]
6400e4ac:	cmp    BYTE PTR [edx+ebp*1-0x1],bl
6400e4b0:	jne    0x6400e56f
6400e4b6:	mov    bl,BYTE PTR [edx]
6400e4b8:	cmp    bl,BYTE PTR [ecx]
6400e4ba:	jne    0x6400e56f
6400e4c0:	mov    bl,BYTE PTR [edx+0x1]
6400e4c3:	add    edx,0x1
6400e4c6:	cmp    bl,BYTE PTR [ecx+0x1]
6400e4c9:	jne    0x6400e56f
6400e4cf:	add    ecx,0x2
6400e4d2:	add    edx,0x1
6400e4d5:	mov    bl,BYTE PTR [ecx+0x1]
6400e4d8:	add    ecx,0x1
6400e4db:	add    edx,0x1
6400e4de:	cmp    bl,BYTE PTR [edx]
6400e4e0:	jne    0x6400e541
6400e4e2:	mov    bl,BYTE PTR [ecx+0x1]
6400e4e5:	add    ecx,0x1
6400e4e8:	add    edx,0x1
6400e4eb:	cmp    bl,BYTE PTR [edx]
6400e4ed:	jne    0x6400e541
6400e4ef:	mov    bl,BYTE PTR [ecx+0x1]
6400e4f2:	add    ecx,0x1
6400e4f5:	add    edx,0x1
6400e4f8:	cmp    bl,BYTE PTR [edx]
6400e4fa:	jne    0x6400e541
6400e4fc:	mov    bl,BYTE PTR [ecx+0x1]
6400e4ff:	add    ecx,0x1
6400e502:	add    edx,0x1
6400e505:	cmp    bl,BYTE PTR [edx]
6400e507:	jne    0x6400e541
6400e509:	mov    bl,BYTE PTR [ecx+0x1]
6400e50c:	add    ecx,0x1
6400e50f:	add    edx,0x1
6400e512:	cmp    bl,BYTE PTR [edx]
6400e514:	jne    0x6400e541
6400e516:	mov    bl,BYTE PTR [ecx+0x1]
6400e519:	add    ecx,0x1
6400e51c:	add    edx,0x1
6400e51f:	cmp    bl,BYTE PTR [edx]
6400e521:	jne    0x6400e541
6400e523:	mov    bl,BYTE PTR [ecx+0x1]
6400e526:	add    ecx,0x1
6400e529:	add    edx,0x1
6400e52c:	cmp    bl,BYTE PTR [edx]
6400e52e:	jne    0x6400e541
6400e530:	mov    bl,BYTE PTR [ecx+0x1]
6400e533:	add    ecx,0x1
6400e536:	add    edx,0x1
6400e539:	cmp    bl,BYTE PTR [edx]
6400e53b:	jne    0x6400e541
6400e53d:	cmp    ecx,esi
6400e53f:	jb     0x6400e4d5
6400e541:	mov    edx,ecx
6400e543:	sub    edx,esi
6400e545:	add    edx,0x102
6400e54b:	cmp    edx,ebp
6400e54d:	lea    ecx,[esi-0x102]
6400e553:	jle    0x6400e56f
6400e555:	cmp    edx,DWORD PTR [esp+0x14]
6400e559:	mov    DWORD PTR [edi+0x70],eax
6400e55c:	mov    ebp,edx
6400e55e:	jge    0x6400e58c
6400e560:	mov    bl,BYTE PTR [edx+ecx*1-0x1]
6400e564:	mov    dl,BYTE PTR [edx+ecx*1]
6400e567:	mov    BYTE PTR [esp+0xe],bl
6400e56b:	mov    BYTE PTR [esp+0xf],dl
6400e56f:	mov    edx,DWORD PTR [edi+0x34]
6400e572:	and    edx,eax
6400e574:	mov    eax,DWORD PTR [edi+0x40]
6400e577:	movzx  eax,WORD PTR [eax+edx*2]
6400e57b:	cmp    eax,DWORD PTR [esp+0x18]
6400e57f:	jbe    0x6400e58c
6400e581:	sub    DWORD PTR [esp+0x10],0x1
6400e586:	jne    0x6400e496
6400e58c:	mov    eax,DWORD PTR [edi+0x74]
6400e58f:	cmp    ebp,eax
6400e591:	ja     0x6400e595
6400e593:	mov    eax,ebp
6400e595:	pop    esi
6400e596:	pop    ebp
6400e597:	pop    ebx
6400e598:	add    esp,0x14
6400e59b:	ret    
6400e59c:	int3   
6400e59d:	int3   
6400e59e:	int3   
6400e59f:	int3   
6400e5a0:	mov    ecx,DWORD PTR [esi+0x38]
6400e5a3:	mov    eax,DWORD PTR [esi+0x6c]
6400e5a6:	push   ebp
6400e5a7:	mov    ebp,DWORD PTR [esp+0x8]
6400e5ab:	mov    dl,BYTE PTR [ecx+ebp*1]
6400e5ae:	add    eax,ecx
6400e5b0:	add    ecx,ebp
6400e5b2:	cmp    dl,BYTE PTR [eax]
6400e5b4:	push   edi
6400e5b5:	lea    edi,[eax+0x102]
6400e5bb:	jne    0x6400e65a
6400e5c1:	mov    dl,BYTE PTR [ecx+0x1]
6400e5c4:	cmp    dl,BYTE PTR [eax+0x1]
6400e5c7:	jne    0x6400e65a
6400e5cd:	add    eax,0x2
6400e5d0:	add    ecx,0x2
6400e5d3:	mov    dl,BYTE PTR [eax+0x1]
6400e5d6:	add    eax,0x1
6400e5d9:	add    ecx,0x1
6400e5dc:	cmp    dl,BYTE PTR [ecx]
6400e5de:	jne    0x6400e63f
6400e5e0:	mov    dl,BYTE PTR [eax+0x1]
6400e5e3:	add    eax,0x1
6400e5e6:	add    ecx,0x1
6400e5e9:	cmp    dl,BYTE PTR [ecx]
6400e5eb:	jne    0x6400e63f
6400e5ed:	mov    dl,BYTE PTR [eax+0x1]
6400e5f0:	add    eax,0x1
6400e5f3:	add    ecx,0x1
6400e5f6:	cmp    dl,BYTE PTR [ecx]
6400e5f8:	jne    0x6400e63f
6400e5fa:	mov    dl,BYTE PTR [eax+0x1]
6400e5fd:	add    eax,0x1
6400e600:	add    ecx,0x1
6400e603:	cmp    dl,BYTE PTR [ecx]
6400e605:	jne    0x6400e63f
6400e607:	mov    dl,BYTE PTR [eax+0x1]
6400e60a:	add    eax,0x1
6400e60d:	add    ecx,0x1
6400e610:	cmp    dl,BYTE PTR [ecx]
6400e612:	jne    0x6400e63f
6400e614:	mov    dl,BYTE PTR [eax+0x1]
6400e617:	add    eax,0x1
6400e61a:	add    ecx,0x1
6400e61d:	cmp    dl,BYTE PTR [ecx]
6400e61f:	jne    0x6400e63f
6400e621:	mov    dl,BYTE PTR [eax+0x1]
6400e624:	add    eax,0x1
6400e627:	add    ecx,0x1
6400e62a:	cmp    dl,BYTE PTR [ecx]
6400e62c:	jne    0x6400e63f
6400e62e:	mov    dl,BYTE PTR [eax+0x1]
6400e631:	add    eax,0x1
6400e634:	add    ecx,0x1
6400e637:	cmp    dl,BYTE PTR [ecx]
6400e639:	jne    0x6400e63f
6400e63b:	cmp    eax,edi
6400e63d:	jb     0x6400e5d3
6400e63f:	sub    eax,edi
6400e641:	add    eax,0x102
6400e646:	cmp    eax,0x3
6400e649:	jl     0x6400e65a
6400e64b:	mov    ecx,DWORD PTR [esi+0x74]
6400e64e:	cmp    eax,ecx
6400e650:	mov    DWORD PTR [esi+0x70],ebp
6400e653:	jbe    0x6400e65f
6400e655:	pop    edi
6400e656:	mov    eax,ecx
6400e658:	pop    ebp
6400e659:	ret    
6400e65a:	mov    eax,0x2
6400e65f:	pop    edi
6400e660:	pop    ebp
6400e661:	ret    
6400e662:	int3   
6400e663:	int3   
6400e664:	int3   
6400e665:	int3   
6400e666:	int3   
6400e667:	int3   
6400e668:	int3   
6400e669:	int3   
6400e66a:	int3   
6400e66b:	int3   
6400e66c:	int3   
6400e66d:	int3   
6400e66e:	int3   
6400e66f:	int3   
6400e670:	push   ebx
6400e671:	mov    ebx,DWORD PTR [edi+0x2c]
6400e674:	push   ebp
6400e675:	push   esi
6400e676:	mov    ebp,DWORD PTR [edi+0x3c]
6400e679:	sub    ebp,DWORD PTR [edi+0x74]
6400e67c:	mov    eax,DWORD PTR [edi+0x6c]
6400e67f:	mov    ecx,DWORD PTR [edi+0x2c]
6400e682:	lea    edx,[ebx+ecx*1-0x106]
6400e689:	sub    ebp,eax
6400e68b:	cmp    eax,edx
6400e68d:	jb     0x6400e6ee
6400e68f:	mov    eax,DWORD PTR [edi+0x38]
6400e692:	push   ebx
6400e693:	lea    ecx,[eax+ebx*1]
6400e696:	push   ecx
6400e697:	push   eax
6400e698:	call   0x640151f0
6400e69d:	mov    edx,DWORD PTR [edi+0x4c]
6400e6a0:	mov    eax,DWORD PTR [edi+0x44]
6400e6a3:	sub    DWORD PTR [edi+0x70],ebx
6400e6a6:	sub    DWORD PTR [edi+0x6c],ebx
6400e6a9:	add    esp,0xc
6400e6ac:	sub    DWORD PTR [edi+0x5c],ebx
6400e6af:	lea    ecx,[eax+edx*2]
6400e6b2:	movzx  eax,WORD PTR [ecx-0x2]
6400e6b6:	sub    ecx,0x2
6400e6b9:	cmp    eax,ebx
6400e6bb:	jb     0x6400e6c1
6400e6bd:	sub    eax,ebx
6400e6bf:	jmp    0x6400e6c3
6400e6c1:	xor    eax,eax
6400e6c3:	sub    edx,0x1
6400e6c6:	mov    WORD PTR [ecx],ax
6400e6c9:	jne    0x6400e6b2
6400e6cb:	mov    ecx,DWORD PTR [edi+0x40]
6400e6ce:	mov    edx,ebx
6400e6d0:	lea    ecx,[ecx+ebx*2]
6400e6d3:	movzx  eax,WORD PTR [ecx-0x2]
6400e6d7:	sub    ecx,0x2
6400e6da:	cmp    eax,ebx
6400e6dc:	jb     0x6400e6e2
6400e6de:	sub    eax,ebx
6400e6e0:	jmp    0x6400e6e4
6400e6e2:	xor    eax,eax
6400e6e4:	sub    edx,0x1
6400e6e7:	mov    WORD PTR [ecx],ax
6400e6ea:	jne    0x6400e6d3
6400e6ec:	add    ebp,ebx
6400e6ee:	mov    esi,DWORD PTR [edi]
6400e6f0:	cmp    DWORD PTR [esi+0x4],0x0
6400e6f4:	je     0x6400e749
6400e6f6:	mov    edx,DWORD PTR [edi+0x74]
6400e6f9:	add    edx,DWORD PTR [edi+0x6c]
6400e6fc:	mov    ecx,ebp
6400e6fe:	add    edx,DWORD PTR [edi+0x38]
6400e701:	push   edx
6400e702:	call   0x6400e3b0
6400e707:	add    DWORD PTR [edi+0x74],eax
6400e70a:	mov    edx,DWORD PTR [edi+0x74]
6400e70d:	add    esp,0x4
6400e710:	cmp    edx,0x3
6400e713:	jb     0x6400e735
6400e715:	mov    eax,DWORD PTR [edi+0x6c]
6400e718:	mov    ecx,DWORD PTR [edi+0x38]
6400e71b:	lea    esi,[eax+ecx*1]
6400e71e:	movzx  eax,BYTE PTR [esi]
6400e721:	mov    ecx,DWORD PTR [edi+0x58]
6400e724:	mov    DWORD PTR [edi+0x48],eax
6400e727:	shl    eax,cl
6400e729:	movzx  ecx,BYTE PTR [esi+0x1]
6400e72d:	xor    eax,ecx
6400e72f:	and    eax,DWORD PTR [edi+0x54]
6400e732:	mov    DWORD PTR [edi+0x48],eax
6400e735:	cmp    edx,0x106
6400e73b:	jae    0x6400e749
6400e73d:	mov    edx,DWORD PTR [edi]
6400e73f:	cmp    DWORD PTR [edx+0x4],0x0
6400e743:	jne    0x6400e676
6400e749:	pop    esi
6400e74a:	pop    ebp
6400e74b:	pop    ebx
6400e74c:	ret    
6400e74d:	int3   
6400e74e:	int3   
6400e74f:	int3   
6400e750:	push   esi
6400e751:	push   edi
6400e752:	mov    edi,DWORD PTR [esp+0xc]
6400e756:	mov    eax,DWORD PTR [edi+0xc]
6400e759:	mov    esi,0xffff
6400e75e:	add    eax,0xfffffffb
6400e761:	cmp    eax,esi
6400e763:	jae    0x6400e767
6400e765:	mov    esi,eax
6400e767:	mov    eax,DWORD PTR [edi+0x74]
6400e76a:	cmp    eax,0x1
6400e76d:	ja     0x6400e77f
6400e76f:	call   0x6400e670
6400e774:	mov    eax,DWORD PTR [edi+0x74]
6400e777:	test   eax,eax
6400e779:	je     0x6400e81d
6400e77f:	add    DWORD PTR [edi+0x6c],eax
6400e782:	mov    ecx,DWORD PTR [edi+0x5c]
6400e785:	mov    edx,DWORD PTR [edi+0x6c]
6400e788:	mov    DWORD PTR [edi+0x74],0x0
6400e78f:	lea    eax,[ecx+esi*1]
6400e792:	je     0x6400e798
6400e794:	cmp    edx,eax
6400e796:	jb     0x6400e7d1
6400e798:	sub    edx,eax
6400e79a:	test   ecx,ecx
6400e79c:	mov    DWORD PTR [edi+0x74],edx
6400e79f:	mov    DWORD PTR [edi+0x6c],eax
6400e7a2:	jl     0x6400e7ab
6400e7a4:	mov    edx,DWORD PTR [edi+0x38]
6400e7a7:	add    edx,ecx
6400e7a9:	jmp    0x6400e7ad
6400e7ab:	xor    edx,edx
6400e7ad:	push   0x0
6400e7af:	sub    eax,ecx
6400e7b1:	push   eax
6400e7b2:	push   edx
6400e7b3:	push   edi
6400e7b4:	call   0x64012060
6400e7b9:	mov    eax,DWORD PTR [edi+0x6c]
6400e7bc:	mov    DWORD PTR [edi+0x5c],eax
6400e7bf:	mov    eax,DWORD PTR [edi]
6400e7c1:	add    esp,0x10
6400e7c4:	call   0x6400e360
6400e7c9:	mov    ecx,DWORD PTR [edi]
6400e7cb:	cmp    DWORD PTR [ecx+0x10],0x0
6400e7cf:	je     0x6400e818
6400e7d1:	mov    ecx,DWORD PTR [edi+0x5c]
6400e7d4:	mov    edx,DWORD PTR [edi+0x6c]
6400e7d7:	mov    eax,DWORD PTR [edi+0x2c]
6400e7da:	sub    edx,ecx
6400e7dc:	sub    eax,0x106
6400e7e1:	cmp    edx,eax
6400e7e3:	jb     0x6400e767
6400e7e5:	test   ecx,ecx
6400e7e7:	jl     0x6400e7f0
6400e7e9:	mov    eax,DWORD PTR [edi+0x38]
6400e7ec:	add    eax,ecx
6400e7ee:	jmp    0x6400e7f2
6400e7f0:	xor    eax,eax
6400e7f2:	push   0x0
6400e7f4:	push   edx
6400e7f5:	push   eax
6400e7f6:	push   edi
6400e7f7:	call   0x64012060
6400e7fc:	mov    ecx,DWORD PTR [edi+0x6c]
6400e7ff:	mov    eax,DWORD PTR [edi]
6400e801:	add    esp,0x10
6400e804:	mov    DWORD PTR [edi+0x5c],ecx
6400e807:	call   0x6400e360
6400e80c:	mov    edx,DWORD PTR [edi]
6400e80e:	cmp    DWORD PTR [edx+0x10],0x0
6400e812:	jne    0x6400e767
6400e818:	pop    edi
6400e819:	xor    eax,eax
6400e81b:	pop    esi
6400e81c:	ret    
6400e81d:	mov    esi,DWORD PTR [esp+0x10]
6400e821:	test   esi,esi
6400e823:	je     0x6400e818
6400e825:	mov    ecx,DWORD PTR [edi+0x5c]
6400e828:	test   ecx,ecx
6400e82a:	jl     0x6400e833
6400e82c:	mov    eax,DWORD PTR [edi+0x38]
6400e82f:	add    eax,ecx
6400e831:	jmp    0x6400e835
6400e833:	xor    eax,eax
6400e835:	xor    edx,edx
6400e837:	cmp    esi,0x4
6400e83a:	sete   dl
6400e83d:	push   edx
6400e83e:	mov    edx,DWORD PTR [edi+0x6c]
6400e841:	sub    edx,ecx
6400e843:	push   edx
6400e844:	push   eax
6400e845:	push   edi
6400e846:	call   0x64012060
6400e84b:	mov    eax,DWORD PTR [edi+0x6c]
6400e84e:	mov    DWORD PTR [edi+0x5c],eax
6400e851:	mov    eax,DWORD PTR [edi]
6400e853:	add    esp,0x10
6400e856:	call   0x6400e360
6400e85b:	mov    ecx,DWORD PTR [edi]
6400e85d:	xor    eax,eax
6400e85f:	cmp    DWORD PTR [ecx+0x10],eax
6400e862:	jne    0x6400e873
6400e864:	cmp    esi,0x4
6400e867:	setne  al
6400e86a:	pop    edi
6400e86b:	pop    esi
6400e86c:	sub    eax,0x1
6400e86f:	and    eax,0x2
6400e872:	ret    
6400e873:	cmp    esi,0x4
6400e876:	sete   al
6400e879:	pop    edi
6400e87a:	pop    esi
6400e87b:	lea    eax,[eax+eax*1+0x1]
6400e87f:	ret    
6400e880:	push   ebx
6400e881:	push   ebp
6400e882:	push   esi
6400e883:	xor    ebp,ebp
6400e885:	push   edi
6400e886:	mov    edi,DWORD PTR [esp+0x14]
6400e88a:	lea    ebx,[ebp+0x1]
6400e88d:	lea    ecx,[ecx+0x0]
6400e890:	mov    eax,DWORD PTR [edi+0x74]
6400e893:	cmp    eax,0x106
6400e898:	jae    0x6400e8bd
6400e89a:	call   0x6400e670
6400e89f:	mov    eax,DWORD PTR [edi+0x74]
6400e8a2:	cmp    eax,0x106
6400e8a7:	mov    esi,DWORD PTR [esp+0x18]
6400e8ab:	jae    0x6400e8b5
6400e8ad:	test   esi,esi
6400e8af:	je     0x6400eb34
6400e8b5:	test   eax,eax
6400e8b7:	je     0x6400eb3b
6400e8bd:	cmp    eax,0x3
6400e8c0:	jb     0x6400e90b
6400e8c2:	mov    eax,DWORD PTR [edi+0x48]
6400e8c5:	mov    ecx,DWORD PTR [edi+0x58]
6400e8c8:	mov    edx,DWORD PTR [edi+0x6c]
6400e8cb:	mov    esi,DWORD PTR [edi+0x34]
6400e8ce:	shl    eax,cl
6400e8d0:	mov    ecx,DWORD PTR [edi+0x38]
6400e8d3:	movzx  ecx,BYTE PTR [ecx+edx*1+0x2]
6400e8d8:	xor    eax,ecx
6400e8da:	and    eax,DWORD PTR [edi+0x54]
6400e8dd:	mov    ecx,DWORD PTR [edi+0x44]
6400e8e0:	mov    DWORD PTR [edi+0x48],eax
6400e8e3:	mov    ax,WORD PTR [ecx+eax*2]
6400e8e7:	and    esi,edx
6400e8e9:	mov    edx,DWORD PTR [edi+0x40]
6400e8ec:	mov    WORD PTR [edx+esi*2],ax
6400e8f0:	mov    ecx,DWORD PTR [edi+0x6c]
6400e8f3:	and    ecx,DWORD PTR [edi+0x34]
6400e8f6:	mov    edx,DWORD PTR [edi+0x40]
6400e8f9:	movzx  ebp,WORD PTR [edx+ecx*2]
6400e8fd:	mov    eax,DWORD PTR [edi+0x48]
6400e900:	mov    ecx,DWORD PTR [edi+0x44]
6400e903:	mov    dx,WORD PTR [edi+0x6c]
6400e907:	mov    WORD PTR [ecx+eax*2],dx
6400e90b:	test   ebp,ebp
6400e90d:	je     0x6400e951
6400e90f:	mov    eax,DWORD PTR [edi+0x6c]
6400e912:	mov    ecx,DWORD PTR [edi+0x2c]
6400e915:	sub    eax,ebp
6400e917:	sub    ecx,0x106
6400e91d:	cmp    eax,ecx
6400e91f:	ja     0x6400e951
6400e921:	mov    ecx,DWORD PTR [edi+0x88]
6400e927:	cmp    ecx,0x2
6400e92a:	je     0x6400e93a
6400e92c:	cmp    ecx,0x3
6400e92f:	je     0x6400e93f
6400e931:	mov    eax,ebp
6400e933:	call   0x6400e420
6400e938:	jmp    0x6400e94e
6400e93a:	cmp    ecx,0x3
6400e93d:	jne    0x6400e951
6400e93f:	cmp    eax,ebx
6400e941:	jne    0x6400e951
6400e943:	push   ebp
6400e944:	mov    esi,edi
6400e946:	call   0x6400e5a0
6400e94b:	add    esp,0x4
6400e94e:	mov    DWORD PTR [edi+0x60],eax
6400e951:	cmp    DWORD PTR [edi+0x60],0x3
6400e955:	jb     0x6400ea93
6400e95b:	mov    dx,WORD PTR [edi+0x6c]
6400e95f:	sub    dx,WORD PTR [edi+0x70]
6400e963:	mov    al,BYTE PTR [edi+0x60]
6400e966:	mov    esi,DWORD PTR [edi+0x16a4]
6400e96c:	movzx  ecx,dx
6400e96f:	mov    edx,DWORD PTR [edi+0x16a0]
6400e975:	mov    WORD PTR [esi+edx*2],cx
6400e979:	mov    edx,DWORD PTR [edi+0x1698]
6400e97f:	mov    esi,DWORD PTR [edi+0x16a0]
6400e985:	sub    al,0x3
6400e987:	mov    BYTE PTR [edx+esi*1],al
6400e98a:	add    DWORD PTR [edi+0x16a0],ebx
6400e990:	movzx  eax,al
6400e993:	movzx  edx,BYTE PTR [eax+0x6403dbb8]
6400e99a:	add    WORD PTR [edi+edx*4+0x498],bx
6400e9a2:	lea    eax,[edi+edx*4+0x498]
6400e9a9:	add    ecx,0xffff
6400e9af:	cmp    cx,0x100
6400e9b4:	jae    0x6400e9c2
6400e9b6:	movzx  eax,cx
6400e9b9:	movzx  eax,BYTE PTR [eax+0x6403d9b8]
6400e9c0:	jmp    0x6400e9cf
6400e9c2:	movzx  ecx,cx
6400e9c5:	shr    ecx,0x7
6400e9c8:	movzx  eax,BYTE PTR [ecx+0x6403dab8]
6400e9cf:	add    WORD PTR [edi+eax*4+0x988],bx
6400e9d7:	mov    edx,DWORD PTR [edi+0x169c]
6400e9dd:	xor    eax,eax
6400e9df:	sub    edx,ebx
6400e9e1:	cmp    DWORD PTR [edi+0x16a0],edx
6400e9e7:	sete   al
6400e9ea:	mov    esi,eax
6400e9ec:	mov    eax,DWORD PTR [edi+0x60]
6400e9ef:	sub    DWORD PTR [edi+0x74],eax
6400e9f2:	cmp    eax,DWORD PTR [edi+0x80]
6400e9f8:	mov    ecx,DWORD PTR [edi+0x74]
6400e9fb:	ja     0x6400ea67
6400e9fd:	cmp    ecx,0x3
6400ea00:	jb     0x6400ea67
6400ea02:	add    eax,0xffffffff
6400ea05:	mov    DWORD PTR [edi+0x60],eax
6400ea08:	jmp    0x6400ea10
6400ea0a:	lea    ebx,[ebx+0x0]
6400ea10:	add    DWORD PTR [edi+0x6c],ebx
6400ea13:	mov    edx,DWORD PTR [edi+0x6c]
6400ea16:	mov    ecx,DWORD PTR [edi+0x38]
6400ea19:	movzx  eax,BYTE PTR [edx+ecx*1+0x2]
6400ea1e:	mov    ebp,DWORD PTR [edi+0x48]
6400ea21:	mov    ecx,DWORD PTR [edi+0x58]
6400ea24:	shl    ebp,cl
6400ea26:	mov    ecx,DWORD PTR [edi+0x44]
6400ea29:	xor    eax,ebp
6400ea2b:	and    eax,DWORD PTR [edi+0x54]
6400ea2e:	mov    ebp,DWORD PTR [edi+0x34]
6400ea31:	and    ebp,edx
6400ea33:	mov    edx,DWORD PTR [edi+0x40]
6400ea36:	mov    DWORD PTR [edi+0x48],eax
6400ea39:	mov    ax,WORD PTR [ecx+eax*2]
6400ea3d:	mov    WORD PTR [edx+ebp*2],ax
6400ea41:	mov    ecx,DWORD PTR [edi+0x6c]
6400ea44:	and    ecx,DWORD PTR [edi+0x34]
6400ea47:	mov    edx,DWORD PTR [edi+0x40]
6400ea4a:	movzx  ebp,WORD PTR [edx+ecx*2]
6400ea4e:	mov    eax,DWORD PTR [edi+0x48]
6400ea51:	mov    ecx,DWORD PTR [edi+0x44]
6400ea54:	mov    dx,WORD PTR [edi+0x6c]
6400ea58:	mov    WORD PTR [ecx+eax*2],dx
6400ea5c:	add    DWORD PTR [edi+0x60],0xffffffff
6400ea60:	jne    0x6400ea10
6400ea62:	jmp    0x6400eaee
6400ea67:	add    DWORD PTR [edi+0x6c],eax
6400ea6a:	mov    eax,DWORD PTR [edi+0x6c]
6400ea6d:	mov    ecx,DWORD PTR [edi+0x38]
6400ea70:	lea    edx,[eax+ecx*1]
6400ea73:	mov    ecx,DWORD PTR [edi+0x58]
6400ea76:	mov    DWORD PTR [edi+0x60],0x0
6400ea7d:	movzx  eax,BYTE PTR [edx]
6400ea80:	mov    DWORD PTR [edi+0x48],eax
6400ea83:	movzx  edx,BYTE PTR [edx+0x1]
6400ea87:	shl    eax,cl
6400ea89:	xor    eax,edx
6400ea8b:	and    eax,DWORD PTR [edi+0x54]
6400ea8e:	mov    DWORD PTR [edi+0x48],eax
6400ea91:	jmp    0x6400eaf1
6400ea93:	mov    eax,DWORD PTR [edi+0x6c]
6400ea96:	mov    ecx,DWORD PTR [edi+0x38]
6400ea99:	mov    al,BYTE PTR [eax+ecx*1]
6400ea9c:	mov    edx,DWORD PTR [edi+0x16a0]
6400eaa2:	mov    ecx,DWORD PTR [edi+0x16a4]
6400eaa8:	mov    WORD PTR [ecx+edx*2],0x0
6400eaae:	mov    ecx,DWORD PTR [edi+0x16a0]
6400eab4:	mov    edx,DWORD PTR [edi+0x1698]
6400eaba:	mov    BYTE PTR [edx+ecx*1],al
6400eabd:	add    DWORD PTR [edi+0x16a0],ebx
6400eac3:	movzx  edx,al
6400eac6:	add    WORD PTR [edi+edx*4+0x94],bx
6400eace:	lea    eax,[edi+edx*4+0x94]
6400ead5:	mov    eax,DWORD PTR [edi+0x169c]
6400eadb:	xor    ecx,ecx
6400eadd:	sub    eax,ebx
6400eadf:	cmp    DWORD PTR [edi+0x16a0],eax
6400eae5:	sete   cl
6400eae8:	add    DWORD PTR [edi+0x74],0xffffffff
6400eaec:	mov    esi,ecx
6400eaee:	add    DWORD PTR [edi+0x6c],ebx
6400eaf1:	test   esi,esi
6400eaf3:	je     0x6400e890
6400eaf9:	mov    ecx,DWORD PTR [edi+0x5c]
6400eafc:	test   ecx,ecx
6400eafe:	jl     0x6400eb07
6400eb00:	mov    eax,DWORD PTR [edi+0x38]
6400eb03:	add    eax,ecx
6400eb05:	jmp    0x6400eb09
6400eb07:	xor    eax,eax
6400eb09:	mov    edx,DWORD PTR [edi+0x6c]
6400eb0c:	push   0x0
6400eb0e:	sub    edx,ecx
6400eb10:	push   edx
6400eb11:	push   eax
6400eb12:	push   edi
6400eb13:	call   0x64012060
6400eb18:	mov    eax,DWORD PTR [edi+0x6c]
6400eb1b:	mov    DWORD PTR [edi+0x5c],eax
6400eb1e:	mov    eax,DWORD PTR [edi]
6400eb20:	add    esp,0x10
6400eb23:	call   0x6400e360
6400eb28:	mov    ecx,DWORD PTR [edi]
6400eb2a:	cmp    DWORD PTR [ecx+0x10],0x0
6400eb2e:	jne    0x6400e890
6400eb34:	pop    edi
6400eb35:	pop    esi
6400eb36:	pop    ebp
6400eb37:	xor    eax,eax
6400eb39:	pop    ebx
6400eb3a:	ret    
6400eb3b:	mov    ecx,DWORD PTR [edi+0x5c]
6400eb3e:	test   ecx,ecx
6400eb40:	jl     0x6400eb49
6400eb42:	mov    eax,DWORD PTR [edi+0x38]
6400eb45:	add    eax,ecx
6400eb47:	jmp    0x6400eb4b
6400eb49:	xor    eax,eax
6400eb4b:	xor    edx,edx
6400eb4d:	cmp    esi,0x4
6400eb50:	sete   dl
6400eb53:	push   edx
6400eb54:	mov    edx,DWORD PTR [edi+0x6c]
6400eb57:	sub    edx,ecx
6400eb59:	push   edx
6400eb5a:	push   eax
6400eb5b:	push   edi
6400eb5c:	call   0x64012060
6400eb61:	mov    eax,DWORD PTR [edi+0x6c]
6400eb64:	mov    DWORD PTR [edi+0x5c],eax
6400eb67:	mov    eax,DWORD PTR [edi]
6400eb69:	add    esp,0x10
6400eb6c:	call   0x6400e360
6400eb71:	mov    ecx,DWORD PTR [edi]
6400eb73:	xor    eax,eax
6400eb75:	cmp    DWORD PTR [ecx+0x10],eax
6400eb78:	jne    0x6400eb8b
6400eb7a:	cmp    esi,0x4
6400eb7d:	setne  al
6400eb80:	pop    edi
6400eb81:	pop    esi
6400eb82:	pop    ebp
6400eb83:	pop    ebx
6400eb84:	sub    eax,0x1
6400eb87:	and    eax,0x2
6400eb8a:	ret    
6400eb8b:	cmp    esi,0x4
6400eb8e:	sete   al
6400eb91:	pop    edi
6400eb92:	pop    esi
6400eb93:	pop    ebp
6400eb94:	pop    ebx
6400eb95:	lea    eax,[eax+eax*1+0x1]
6400eb99:	ret    
6400eb9a:	int3   
6400eb9b:	int3   
6400eb9c:	int3   
6400eb9d:	int3   
6400eb9e:	int3   
6400eb9f:	int3   
6400eba0:	push   ecx
6400eba1:	push   ebx
6400eba2:	push   ebp
6400eba3:	push   esi
6400eba4:	push   edi
6400eba5:	mov    edi,DWORD PTR [esp+0x18]
6400eba9:	mov    DWORD PTR [esp+0x10],0x0
6400ebb1:	mov    ebp,0x1
6400ebb6:	mov    eax,DWORD PTR [edi+0x74]
6400ebb9:	cmp    eax,0x106
6400ebbe:	jae    0x6400ebe3
6400ebc0:	call   0x6400e670
6400ebc5:	mov    eax,DWORD PTR [edi+0x74]
6400ebc8:	cmp    eax,0x106
6400ebcd:	mov    esi,DWORD PTR [esp+0x1c]
6400ebd1:	jae    0x6400ebdb
6400ebd3:	test   esi,esi
6400ebd5:	je     0x6400ee36
6400ebdb:	test   eax,eax
6400ebdd:	je     0x6400eeeb
6400ebe3:	cmp    eax,0x3
6400ebe6:	jb     0x6400ec35
6400ebe8:	mov    eax,DWORD PTR [edi+0x48]
6400ebeb:	mov    ecx,DWORD PTR [edi+0x58]
6400ebee:	mov    edx,DWORD PTR [edi+0x6c]
6400ebf1:	mov    esi,DWORD PTR [edi+0x34]
6400ebf4:	shl    eax,cl
6400ebf6:	mov    ecx,DWORD PTR [edi+0x38]
6400ebf9:	movzx  ecx,BYTE PTR [ecx+edx*1+0x2]
6400ebfe:	xor    eax,ecx
6400ec00:	and    eax,DWORD PTR [edi+0x54]
6400ec03:	mov    ecx,DWORD PTR [edi+0x44]
6400ec06:	mov    DWORD PTR [edi+0x48],eax
6400ec09:	movzx  eax,WORD PTR [ecx+eax*2]
6400ec0d:	and    esi,edx
6400ec0f:	mov    edx,DWORD PTR [edi+0x40]
6400ec12:	mov    WORD PTR [edx+esi*2],ax
6400ec16:	mov    ecx,DWORD PTR [edi+0x6c]
6400ec19:	and    ecx,DWORD PTR [edi+0x34]
6400ec1c:	mov    edx,DWORD PTR [edi+0x40]
6400ec1f:	movzx  eax,WORD PTR [edx+ecx*2]
6400ec23:	mov    ecx,DWORD PTR [edi+0x48]
6400ec26:	mov    edx,DWORD PTR [edi+0x44]
6400ec29:	mov    DWORD PTR [esp+0x10],eax
6400ec2d:	movzx  eax,WORD PTR [edi+0x6c]
6400ec31:	mov    WORD PTR [edx+ecx*2],ax
6400ec35:	mov    edx,DWORD PTR [edi+0x70]
6400ec38:	mov    ecx,DWORD PTR [edi+0x60]
6400ec3b:	mov    DWORD PTR [edi+0x64],edx
6400ec3e:	mov    edx,DWORD PTR [esp+0x10]
6400ec42:	test   edx,edx
6400ec44:	mov    ebx,0x2
6400ec49:	mov    DWORD PTR [edi+0x78],ecx
6400ec4c:	mov    DWORD PTR [edi+0x60],ebx
6400ec4f:	je     0x6400ecc2
6400ec51:	mov    eax,ecx
6400ec53:	cmp    eax,DWORD PTR [edi+0x80]
6400ec59:	jae    0x6400ecc2
6400ec5b:	mov    eax,DWORD PTR [edi+0x6c]
6400ec5e:	mov    ecx,DWORD PTR [edi+0x2c]
6400ec61:	sub    eax,edx
6400ec63:	sub    ecx,0x106
6400ec69:	cmp    eax,ecx
6400ec6b:	ja     0x6400ecc2
6400ec6d:	mov    ecx,DWORD PTR [edi+0x88]
6400ec73:	cmp    ecx,ebx
6400ec75:	je     0x6400ec85
6400ec77:	cmp    ecx,0x3
6400ec7a:	je     0x6400ec8a
6400ec7c:	mov    eax,edx
6400ec7e:	call   0x6400e420
6400ec83:	jmp    0x6400ec99
6400ec85:	cmp    ecx,0x3
6400ec88:	jne    0x6400ec9c
6400ec8a:	cmp    eax,ebp
6400ec8c:	jne    0x6400ec9c
6400ec8e:	push   edx
6400ec8f:	mov    esi,edi
6400ec91:	call   0x6400e5a0
6400ec96:	add    esp,0x4
6400ec99:	mov    DWORD PTR [edi+0x60],eax
6400ec9c:	mov    eax,DWORD PTR [edi+0x60]
6400ec9f:	cmp    eax,0x5
6400eca2:	ja     0x6400ecc2
6400eca4:	cmp    DWORD PTR [edi+0x88],ebp
6400ecaa:	je     0x6400ecbf
6400ecac:	cmp    eax,0x3
6400ecaf:	jne    0x6400ecc2
6400ecb1:	mov    edx,DWORD PTR [edi+0x6c]
6400ecb4:	sub    edx,DWORD PTR [edi+0x70]
6400ecb7:	cmp    edx,0x1000
6400ecbd:	jbe    0x6400ecc2
6400ecbf:	mov    DWORD PTR [edi+0x60],ebx
6400ecc2:	mov    eax,DWORD PTR [edi+0x78]
6400ecc5:	cmp    eax,0x3
6400ecc8:	jb     0x6400ee3e
6400ecce:	cmp    DWORD PTR [edi+0x60],eax
6400ecd1:	ja     0x6400ee3e
6400ecd7:	mov    dx,WORD PTR [edi+0x6c]
6400ecdb:	sub    dx,WORD PTR [edi+0x64]
6400ecdf:	mov    eax,DWORD PTR [edi+0x6c]
6400ece2:	mov    ecx,DWORD PTR [edi+0x74]
6400ece5:	mov    ebx,DWORD PTR [edi+0x16a4]
6400eceb:	lea    esi,[eax+ecx*1-0x3]
6400ecef:	mov    al,BYTE PTR [edi+0x78]
6400ecf2:	sub    dx,bp
6400ecf5:	movzx  ecx,dx
6400ecf8:	mov    edx,DWORD PTR [edi+0x16a0]
6400ecfe:	mov    WORD PTR [ebx+edx*2],cx
6400ed02:	mov    edx,DWORD PTR [edi+0x1698]
6400ed08:	mov    ebx,DWORD PTR [edi+0x16a0]
6400ed0e:	sub    al,0x3
6400ed10:	mov    BYTE PTR [edx+ebx*1],al
6400ed13:	add    DWORD PTR [edi+0x16a0],ebp
6400ed19:	movzx  eax,al
6400ed1c:	movzx  edx,BYTE PTR [eax+0x6403dbb8]
6400ed23:	add    WORD PTR [edi+edx*4+0x498],bp
6400ed2b:	lea    eax,[edi+edx*4+0x498]
6400ed32:	add    ecx,0xffff
6400ed38:	cmp    cx,0x100
6400ed3d:	jae    0x6400ed4b
6400ed3f:	movzx  eax,cx
6400ed42:	movzx  eax,BYTE PTR [eax+0x6403d9b8]
6400ed49:	jmp    0x6400ed58
6400ed4b:	movzx  ecx,cx
6400ed4e:	shr    ecx,0x7
6400ed51:	movzx  eax,BYTE PTR [ecx+0x6403dab8]
6400ed58:	add    WORD PTR [edi+eax*4+0x988],bp
6400ed60:	mov    edx,DWORD PTR [edi+0x169c]
6400ed66:	mov    eax,DWORD PTR [edi+0x78]
6400ed69:	sub    edx,ebp
6400ed6b:	xor    ebx,ebx
6400ed6d:	cmp    DWORD PTR [edi+0x16a0],edx
6400ed73:	mov    ecx,ebp
6400ed75:	sete   bl
6400ed78:	sub    ecx,eax
6400ed7a:	add    DWORD PTR [edi+0x74],ecx
6400ed7d:	add    eax,0xfffffffe
6400ed80:	mov    DWORD PTR [edi+0x78],eax
6400ed83:	add    DWORD PTR [edi+0x6c],ebp
6400ed86:	mov    edx,DWORD PTR [edi+0x6c]
6400ed89:	cmp    edx,esi
6400ed8b:	ja     0x6400eddc
6400ed8d:	mov    eax,DWORD PTR [edi+0x48]
6400ed90:	mov    ecx,DWORD PTR [edi+0x58]
6400ed93:	mov    ebp,DWORD PTR [edi+0x34]
6400ed96:	shl    eax,cl
6400ed98:	mov    ecx,DWORD PTR [edi+0x38]
6400ed9b:	movzx  ecx,BYTE PTR [ecx+edx*1+0x2]
6400eda0:	xor    eax,ecx
6400eda2:	and    eax,DWORD PTR [edi+0x54]
6400eda5:	mov    ecx,DWORD PTR [edi+0x44]
6400eda8:	mov    DWORD PTR [edi+0x48],eax
6400edab:	movzx  eax,WORD PTR [ecx+eax*2]
6400edaf:	and    ebp,edx
6400edb1:	mov    edx,DWORD PTR [edi+0x40]
6400edb4:	mov    WORD PTR [edx+ebp*2],ax
6400edb8:	mov    ecx,DWORD PTR [edi+0x6c]
6400edbb:	and    ecx,DWORD PTR [edi+0x34]
6400edbe:	mov    edx,DWORD PTR [edi+0x40]
6400edc1:	movzx  eax,WORD PTR [edx+ecx*2]
6400edc5:	mov    ecx,DWORD PTR [edi+0x48]
6400edc8:	mov    edx,DWORD PTR [edi+0x44]
6400edcb:	mov    DWORD PTR [esp+0x10],eax
6400edcf:	movzx  eax,WORD PTR [edi+0x6c]
6400edd3:	mov    WORD PTR [edx+ecx*2],ax
6400edd7:	mov    ebp,0x1
6400eddc:	add    DWORD PTR [edi+0x78],0xffffffff
6400ede0:	jne    0x6400ed83
6400ede2:	add    DWORD PTR [edi+0x6c],ebp
6400ede5:	test   ebx,ebx
6400ede7:	mov    eax,DWORD PTR [edi+0x6c]
6400edea:	mov    DWORD PTR [edi+0x68],0x0
6400edf1:	mov    DWORD PTR [edi+0x60],0x2
6400edf8:	je     0x6400ebb6
6400edfe:	mov    edx,DWORD PTR [edi+0x5c]
6400ee01:	test   edx,edx
6400ee03:	jl     0x6400ee0c
6400ee05:	mov    ecx,DWORD PTR [edi+0x38]
6400ee08:	add    ecx,edx
6400ee0a:	jmp    0x6400ee0e
6400ee0c:	xor    ecx,ecx
6400ee0e:	push   0x0
6400ee10:	sub    eax,edx
6400ee12:	push   eax
6400ee13:	push   ecx
6400ee14:	push   edi
6400ee15:	call   0x64012060
6400ee1a:	mov    ecx,DWORD PTR [edi+0x6c]
6400ee1d:	mov    eax,DWORD PTR [edi]
6400ee1f:	add    esp,0x10
6400ee22:	mov    DWORD PTR [edi+0x5c],ecx
6400ee25:	call   0x6400e360
6400ee2a:	mov    edx,DWORD PTR [edi]
6400ee2c:	cmp    DWORD PTR [edx+0x10],0x0
6400ee30:	jne    0x6400ebb6
6400ee36:	pop    edi
6400ee37:	pop    esi
6400ee38:	pop    ebp
6400ee39:	xor    eax,eax
6400ee3b:	pop    ebx
6400ee3c:	pop    ecx
6400ee3d:	ret    
6400ee3e:	cmp    DWORD PTR [edi+0x68],0x0
6400ee42:	je     0x6400eedc
6400ee48:	mov    eax,DWORD PTR [edi+0x6c]
6400ee4b:	mov    ecx,DWORD PTR [edi+0x38]
6400ee4e:	mov    al,BYTE PTR [eax+ecx*1-0x1]
6400ee52:	mov    edx,DWORD PTR [edi+0x16a0]
6400ee58:	mov    ecx,DWORD PTR [edi+0x16a4]
6400ee5e:	mov    WORD PTR [ecx+edx*2],0x0
6400ee64:	mov    edx,DWORD PTR [edi+0x1698]
6400ee6a:	mov    ecx,DWORD PTR [edi+0x16a0]
6400ee70:	mov    BYTE PTR [edx+ecx*1],al
6400ee73:	add    DWORD PTR [edi+0x16a0],ebp
6400ee79:	movzx  edx,al
6400ee7c:	add    WORD PTR [edi+edx*4+0x94],bp
6400ee84:	lea    eax,[edi+edx*4+0x94]
6400ee8b:	mov    eax,DWORD PTR [edi+0x169c]
6400ee91:	sub    eax,ebp
6400ee93:	cmp    DWORD PTR [edi+0x16a0],eax
6400ee99:	jne    0x6400eeca
6400ee9b:	mov    ecx,DWORD PTR [edi+0x5c]
6400ee9e:	test   ecx,ecx
6400eea0:	jl     0x6400eea9
6400eea2:	mov    eax,DWORD PTR [edi+0x38]
6400eea5:	add    eax,ecx
6400eea7:	jmp    0x6400eeab
6400eea9:	xor    eax,eax
6400eeab:	mov    edx,DWORD PTR [edi+0x6c]
6400eeae:	push   0x0
6400eeb0:	sub    edx,ecx
6400eeb2:	push   edx
6400eeb3:	push   eax
6400eeb4:	push   edi
6400eeb5:	call   0x64012060
6400eeba:	mov    eax,DWORD PTR [edi+0x6c]
6400eebd:	mov    DWORD PTR [edi+0x5c],eax
6400eec0:	mov    eax,DWORD PTR [edi]
6400eec2:	add    esp,0x10
6400eec5:	call   0x6400e360
6400eeca:	mov    ecx,DWORD PTR [edi]
6400eecc:	add    DWORD PTR [edi+0x6c],ebp
6400eecf:	add    DWORD PTR [edi+0x74],0xffffffff
6400eed3:	cmp    DWORD PTR [ecx+0x10],0x0
6400eed7:	jmp    0x6400ee30
6400eedc:	add    DWORD PTR [edi+0x6c],ebp
6400eedf:	add    DWORD PTR [edi+0x74],0xffffffff
6400eee3:	mov    DWORD PTR [edi+0x68],ebp
6400eee6:	jmp    0x6400ebb6
6400eeeb:	cmp    DWORD PTR [edi+0x68],0x0
6400eeef:	je     0x6400ef3b
6400eef1:	mov    edx,DWORD PTR [edi+0x6c]
6400eef4:	mov    eax,DWORD PTR [edi+0x38]
6400eef7:	mov    al,BYTE PTR [edx+eax*1-0x1]
6400eefb:	mov    ecx,DWORD PTR [edi+0x16a0]
6400ef01:	mov    edx,DWORD PTR [edi+0x16a4]
6400ef07:	mov    WORD PTR [edx+ecx*2],0x0
6400ef0d:	mov    edx,DWORD PTR [edi+0x16a0]
6400ef13:	mov    ecx,DWORD PTR [edi+0x1698]
6400ef19:	mov    BYTE PTR [ecx+edx*1],al
6400ef1c:	add    DWORD PTR [edi+0x16a0],ebp
6400ef22:	movzx  eax,al
6400ef25:	add    WORD PTR [edi+eax*4+0x94],bp
6400ef2d:	lea    eax,[edi+eax*4+0x94]
6400ef34:	mov    DWORD PTR [edi+0x68],0x0
6400ef3b:	mov    ecx,DWORD PTR [edi+0x5c]
6400ef3e:	test   ecx,ecx
6400ef40:	jl     0x6400ef49
6400ef42:	mov    eax,DWORD PTR [edi+0x38]
6400ef45:	add    eax,ecx
6400ef47:	jmp    0x6400ef4b
6400ef49:	xor    eax,eax
6400ef4b:	xor    edx,edx
6400ef4d:	cmp    esi,0x4
6400ef50:	sete   dl
6400ef53:	push   edx
6400ef54:	mov    edx,DWORD PTR [edi+0x6c]
6400ef57:	sub    edx,ecx
6400ef59:	push   edx
6400ef5a:	push   eax
6400ef5b:	push   edi
6400ef5c:	call   0x64012060
6400ef61:	mov    eax,DWORD PTR [edi+0x6c]
6400ef64:	mov    DWORD PTR [edi+0x5c],eax
6400ef67:	mov    eax,DWORD PTR [edi]
6400ef69:	add    esp,0x10
6400ef6c:	call   0x6400e360
6400ef71:	mov    ecx,DWORD PTR [edi]
6400ef73:	xor    eax,eax
6400ef75:	cmp    DWORD PTR [ecx+0x10],eax
6400ef78:	jne    0x6400ef8c
6400ef7a:	cmp    esi,0x4
6400ef7d:	setne  al
6400ef80:	pop    edi
6400ef81:	pop    esi
6400ef82:	pop    ebp
6400ef83:	pop    ebx
6400ef84:	sub    eax,0x1
6400ef87:	and    eax,0x2
6400ef8a:	pop    ecx
6400ef8b:	ret    
6400ef8c:	cmp    esi,0x4
6400ef8f:	sete   al
6400ef92:	pop    edi
6400ef93:	pop    esi
6400ef94:	pop    ebp
6400ef95:	pop    ebx
6400ef96:	lea    eax,[eax+eax*1+0x1]
6400ef9a:	pop    ecx
6400ef9b:	ret    
6400ef9c:	int3   
6400ef9d:	int3   
6400ef9e:	int3   
6400ef9f:	int3   
6400efa0:	mov    edx,DWORD PTR [esp+0x4]
6400efa4:	xor    ecx,ecx
6400efa6:	cmp    edx,ecx
6400efa8:	je     0x6400eff7
6400efaa:	mov    eax,DWORD PTR [edx+0x1c]
6400efad:	cmp    eax,ecx
6400efaf:	je     0x6400eff7
6400efb1:	mov    DWORD PTR [eax+0x1c],ecx
6400efb4:	mov    DWORD PTR [edx+0x14],ecx
6400efb7:	mov    DWORD PTR [edx+0x8],ecx
6400efba:	mov    DWORD PTR [edx+0x18],ecx
6400efbd:	mov    DWORD PTR [edx+0x30],0x1
6400efc4:	mov    DWORD PTR [eax],ecx
6400efc6:	mov    DWORD PTR [eax+0x4],ecx
6400efc9:	mov    DWORD PTR [eax+0xc],ecx
6400efcc:	mov    DWORD PTR [eax+0x20],ecx
6400efcf:	mov    DWORD PTR [eax+0x28],ecx
6400efd2:	mov    DWORD PTR [eax+0x2c],ecx
6400efd5:	mov    DWORD PTR [eax+0x30],ecx
6400efd8:	mov    DWORD PTR [eax+0x38],ecx
6400efdb:	mov    DWORD PTR [eax+0x3c],ecx
6400efde:	lea    ecx,[eax+0x530]
6400efe4:	mov    DWORD PTR [eax+0x14],0x8000
6400efeb:	mov    DWORD PTR [eax+0x6c],ecx
6400efee:	mov    DWORD PTR [eax+0x50],ecx
6400eff1:	mov    DWORD PTR [eax+0x4c],ecx
6400eff4:	xor    eax,eax
6400eff6:	ret    
6400eff7:	mov    eax,0xfffffffe
6400effc:	ret    
6400effd:	int3   
6400effe:	int3   
6400efff:	int3   
6400f000:	mov    eax,DWORD PTR [esp+0xc]
6400f004:	push   edi
6400f005:	xor    edi,edi
6400f007:	cmp    eax,edi
6400f009:	je     0x6400f0c4
6400f00f:	cmp    BYTE PTR [eax],0x31
6400f012:	jne    0x6400f0c4
6400f018:	cmp    DWORD PTR [esp+0x14],0x38
6400f01d:	jne    0x6400f0c4
6400f023:	push   esi
6400f024:	mov    esi,DWORD PTR [esp+0xc]
6400f028:	cmp    esi,edi
6400f02a:	je     0x6400f0bc
6400f030:	cmp    DWORD PTR [esi+0x20],edi
6400f033:	mov    DWORD PTR [esi+0x18],edi
6400f036:	jne    0x6400f042
6400f038:	mov    DWORD PTR [esi+0x20],0x64012530
6400f03f:	mov    DWORD PTR [esi+0x28],edi
6400f042:	cmp    DWORD PTR [esi+0x24],edi
6400f045:	jne    0x6400f04e
6400f047:	mov    DWORD PTR [esi+0x24],0x64012550
6400f04e:	mov    eax,DWORD PTR [esi+0x28]
6400f051:	mov    ecx,DWORD PTR [esi+0x20]
6400f054:	push   0x2530
6400f059:	push   0x1
6400f05b:	push   eax
6400f05c:	call   ecx
6400f05e:	add    esp,0xc
6400f061:	cmp    eax,edi
6400f063:	jne    0x6400f06d
6400f065:	pop    esi
6400f066:	mov    eax,0xfffffffc
6400f06b:	pop    edi
6400f06c:	ret    
6400f06d:	mov    ecx,DWORD PTR [esp+0x10]
6400f071:	cmp    ecx,edi
6400f073:	mov    DWORD PTR [esi+0x1c],eax
6400f076:	jge    0x6400f07f
6400f078:	mov    DWORD PTR [eax+0x8],edi
6400f07b:	neg    ecx
6400f07d:	jmp    0x6400f092
6400f07f:	mov    edx,ecx
6400f081:	sar    edx,0x4
6400f084:	add    edx,0x1
6400f087:	cmp    ecx,0x30
6400f08a:	mov    DWORD PTR [eax+0x8],edx
6400f08d:	jge    0x6400f092
6400f08f:	and    ecx,0xf
6400f092:	lea    edx,[ecx-0x8]
6400f095:	cmp    edx,0x7
6400f098:	ja     0x6400f0ac
6400f09a:	push   esi
6400f09b:	mov    DWORD PTR [eax+0x24],ecx
6400f09e:	mov    DWORD PTR [eax+0x34],edi
6400f0a1:	call   0x6400efa0
6400f0a6:	add    esp,0x4
6400f0a9:	pop    esi
6400f0aa:	pop    edi
6400f0ab:	ret    
6400f0ac:	mov    ecx,DWORD PTR [esi+0x24]
6400f0af:	push   eax
6400f0b0:	mov    eax,DWORD PTR [esi+0x28]
6400f0b3:	push   eax
6400f0b4:	call   ecx
6400f0b6:	add    esp,0x8
6400f0b9:	mov    DWORD PTR [esi+0x1c],edi
6400f0bc:	pop    esi
6400f0bd:	mov    eax,0xfffffffe
6400f0c2:	pop    edi
6400f0c3:	ret    
6400f0c4:	mov    eax,0xfffffffa
6400f0c9:	pop    edi
6400f0ca:	ret    
6400f0cb:	int3   
6400f0cc:	int3   
6400f0cd:	int3   
6400f0ce:	int3   
6400f0cf:	int3   
6400f0d0:	mov    DWORD PTR [eax+0x4c],0x6403c908
6400f0d7:	mov    DWORD PTR [eax+0x54],0x9
6400f0de:	mov    DWORD PTR [eax+0x50],0x6403d108
6400f0e5:	mov    DWORD PTR [eax+0x58],0x5
6400f0ec:	ret    
6400f0ed:	int3   
6400f0ee:	int3   
6400f0ef:	int3   
6400f0f0:	push   ebp
6400f0f1:	push   esi
6400f0f2:	mov    esi,DWORD PTR [ebx+0x1c]
6400f0f5:	xor    ebp,ebp
6400f0f7:	cmp    DWORD PTR [esi+0x34],ebp
6400f0fa:	push   edi
6400f0fb:	mov    edi,eax
6400f0fd:	jne    0x6400f126
6400f0ff:	mov    ecx,DWORD PTR [esi+0x24]
6400f102:	mov    edx,DWORD PTR [ebx+0x20]
6400f105:	mov    eax,0x1
6400f10a:	shl    eax,cl
6400f10c:	mov    ecx,DWORD PTR [ebx+0x28]
6400f10f:	push   0x1
6400f111:	push   eax
6400f112:	push   ecx
6400f113:	call   edx
6400f115:	add    esp,0xc
6400f118:	cmp    eax,ebp
6400f11a:	mov    DWORD PTR [esi+0x34],eax
6400f11d:	jne    0x6400f126
6400f11f:	pop    edi
6400f120:	pop    esi
6400f121:	lea    eax,[ebp+0x1]
6400f124:	pop    ebp
6400f125:	ret    
6400f126:	cmp    DWORD PTR [esi+0x28],ebp
6400f129:	jne    0x6400f13e
6400f12b:	mov    ecx,DWORD PTR [esi+0x24]
6400f12e:	mov    eax,0x1
6400f133:	shl    eax,cl
6400f135:	mov    DWORD PTR [esi+0x30],ebp
6400f138:	mov    DWORD PTR [esi+0x2c],ebp
6400f13b:	mov    DWORD PTR [esi+0x28],eax
6400f13e:	sub    edi,DWORD PTR [ebx+0x10]
6400f141:	mov    eax,DWORD PTR [esi+0x28]
6400f144:	cmp    edi,eax
6400f146:	jb     0x6400f16a
6400f148:	mov    ecx,DWORD PTR [ebx+0xc]
6400f14b:	mov    edx,DWORD PTR [esi+0x34]
6400f14e:	push   eax
6400f14f:	sub    ecx,eax
6400f151:	push   ecx
6400f152:	push   edx
6400f153:	call   0x640151f0
6400f158:	mov    eax,DWORD PTR [esi+0x28]
6400f15b:	add    esp,0xc
6400f15e:	pop    edi
6400f15f:	mov    DWORD PTR [esi+0x30],ebp
6400f162:	mov    DWORD PTR [esi+0x2c],eax
6400f165:	pop    esi
6400f166:	xor    eax,eax
6400f168:	pop    ebp
6400f169:	ret    
6400f16a:	sub    eax,DWORD PTR [esi+0x30]
6400f16d:	mov    ebp,eax
6400f16f:	cmp    ebp,edi
6400f171:	jbe    0x6400f175
6400f173:	mov    ebp,edi
6400f175:	mov    ecx,DWORD PTR [ebx+0xc]
6400f178:	mov    edx,DWORD PTR [esi+0x34]
6400f17b:	add    edx,DWORD PTR [esi+0x30]
6400f17e:	push   ebp
6400f17f:	sub    ecx,edi
6400f181:	push   ecx
6400f182:	push   edx
6400f183:	call   0x640151f0
6400f188:	add    esp,0xc
6400f18b:	sub    edi,ebp
6400f18d:	je     0x6400f1b1
6400f18f:	mov    eax,DWORD PTR [ebx+0xc]
6400f192:	mov    ecx,DWORD PTR [esi+0x34]
6400f195:	push   edi
6400f196:	sub    eax,edi
6400f198:	push   eax
6400f199:	push   ecx
6400f19a:	call   0x640151f0
6400f19f:	mov    edx,DWORD PTR [esi+0x28]
6400f1a2:	add    esp,0xc
6400f1a5:	mov    DWORD PTR [esi+0x30],edi
6400f1a8:	pop    edi
6400f1a9:	mov    DWORD PTR [esi+0x2c],edx
6400f1ac:	pop    esi
6400f1ad:	xor    eax,eax
6400f1af:	pop    ebp
6400f1b0:	ret    
6400f1b1:	add    DWORD PTR [esi+0x30],ebp
6400f1b4:	mov    ecx,DWORD PTR [esi+0x30]
6400f1b7:	mov    eax,DWORD PTR [esi+0x28]
6400f1ba:	cmp    ecx,eax
6400f1bc:	jne    0x6400f1c5
6400f1be:	mov    DWORD PTR [esi+0x30],0x0
6400f1c5:	mov    ecx,DWORD PTR [esi+0x2c]
6400f1c8:	cmp    ecx,eax
6400f1ca:	jae    0x6400f1d1
6400f1cc:	add    ecx,ebp
6400f1ce:	mov    DWORD PTR [esi+0x2c],ecx
6400f1d1:	pop    edi
6400f1d2:	pop    esi
6400f1d3:	xor    eax,eax
6400f1d5:	pop    ebp
6400f1d6:	ret    
6400f1d7:	int3   
6400f1d8:	int3   
6400f1d9:	int3   
6400f1da:	int3   
6400f1db:	int3   
6400f1dc:	int3   
6400f1dd:	int3   
6400f1de:	int3   
6400f1df:	int3   
6400f1e0:	mov    eax,DWORD PTR [esp+0x4]
6400f1e4:	sub    esp,0x2c
6400f1e7:	test   eax,eax
6400f1e9:	push   edi
6400f1ea:	je     0x6401073c
6400f1f0:	mov    edi,DWORD PTR [eax+0x1c]
6400f1f3:	test   edi,edi
6400f1f5:	je     0x6401073c
6400f1fb:	cmp    DWORD PTR [eax+0xc],0x0
6400f1ff:	je     0x6401073c
6400f205:	cmp    DWORD PTR [eax],0x0
6400f208:	jne    0x6400f214
6400f20a:	cmp    DWORD PTR [eax+0x4],0x0
6400f20e:	jne    0x6401073c
6400f214:	cmp    DWORD PTR [edi],0xb
6400f217:	jne    0x6400f21f
6400f219:	mov    DWORD PTR [edi],0xc
6400f21f:	mov    ecx,DWORD PTR [eax+0xc]
6400f222:	mov    edx,DWORD PTR [eax+0x4]
6400f225:	push   ebx
6400f226:	mov    ebx,DWORD PTR [edi+0x38]
6400f229:	push   ebp
6400f22a:	mov    ebp,DWORD PTR [eax]
6400f22c:	mov    DWORD PTR [esp+0x24],ecx
6400f230:	mov    ecx,DWORD PTR [eax+0x10]
6400f233:	mov    eax,DWORD PTR [edi]
6400f235:	cmp    eax,0x1c
6400f238:	push   esi
6400f239:	mov    esi,DWORD PTR [edi+0x3c]
6400f23c:	mov    DWORD PTR [esp+0x1c],ecx
6400f240:	mov    DWORD PTR [esp+0x10],edx
6400f244:	mov    DWORD PTR [esp+0x18],ebx
6400f248:	mov    DWORD PTR [esp+0x38],edx
6400f24c:	mov    DWORD PTR [esp+0x2c],ecx
6400f250:	mov    DWORD PTR [esp+0x30],0x0
6400f258:	ja     0x640105e9
6400f25e:	mov    edi,edi
6400f260:	jmp    DWORD PTR [eax*4+0x64010748]
6400f267:	cmp    DWORD PTR [edi+0x8],0x0
6400f26b:	jne    0x6400f278
6400f26d:	mov    DWORD PTR [edi],0xc
6400f273:	jmp    0x640105de
6400f278:	cmp    esi,0x10
6400f27b:	jae    0x6400f2a8
6400f27d:	lea    ecx,[ecx+0x0]
6400f280:	test   edx,edx
6400f282:	je     0x6401063c
6400f288:	movzx  eax,BYTE PTR [ebp+0x0]
6400f28c:	mov    ecx,esi
6400f28e:	shl    eax,cl
6400f290:	sub    edx,0x1
6400f293:	add    esi,0x8
6400f296:	add    ebp,0x1
6400f299:	add    ebx,eax
6400f29b:	cmp    esi,0x10
6400f29e:	mov    DWORD PTR [esp+0x10],edx
6400f2a2:	mov    DWORD PTR [esp+0x18],ebx
6400f2a6:	jb     0x6400f280
6400f2a8:	test   BYTE PTR [edi+0x8],0x2
6400f2ac:	je     0x6400f2fb
6400f2ae:	cmp    ebx,0x8b1f
6400f2b4:	jne    0x6400f2fb
6400f2b6:	push   0x0
6400f2b8:	push   0x0
6400f2ba:	push   0x0
6400f2bc:	call   0x64012510
6400f2c1:	mov    DWORD PTR [edi+0x18],eax
6400f2c4:	push   0x2
6400f2c6:	lea    ecx,[esp+0x30]
6400f2ca:	mov    BYTE PTR [esp+0x30],0x1f
6400f2cf:	mov    BYTE PTR [esp+0x31],0x8b
6400f2d4:	mov    edx,DWORD PTR [edi+0x18]
6400f2d7:	push   ecx
6400f2d8:	push   edx
6400f2d9:	call   0x64012510
6400f2de:	mov    edx,DWORD PTR [esp+0x28]
6400f2e2:	xor    ebx,ebx
6400f2e4:	add    esp,0x18
6400f2e7:	mov    DWORD PTR [edi+0x18],eax
6400f2ea:	mov    DWORD PTR [esp+0x18],ebx
6400f2ee:	xor    esi,esi
6400f2f0:	mov    DWORD PTR [edi],0x1
6400f2f6:	jmp    0x640105de
6400f2fb:	mov    eax,DWORD PTR [edi+0x20]
6400f2fe:	test   eax,eax
6400f300:	mov    DWORD PTR [edi+0x10],0x0
6400f307:	je     0x6400f310
6400f309:	mov    DWORD PTR [eax+0x30],0xffffffff
6400f310:	test   BYTE PTR [edi+0x8],0x1
6400f314:	je     0x6400f3c1
6400f31a:	movzx  eax,bl
6400f31d:	shl    eax,0x8
6400f320:	mov    ecx,ebx
6400f322:	shr    ecx,0x8
6400f325:	add    eax,ecx
6400f327:	xor    edx,edx
6400f329:	mov    ecx,0x1f
6400f32e:	div    ecx
6400f330:	test   edx,edx
6400f332:	jne    0x6400f3c1
6400f338:	mov    edx,ebx
6400f33a:	and    dl,0xf
6400f33d:	cmp    dl,0x8
6400f340:	je     0x6400f356
6400f342:	mov    eax,DWORD PTR [esp+0x40]
6400f346:	mov    edx,DWORD PTR [esp+0x10]
6400f34a:	mov    DWORD PTR [eax+0x18],0x6403d354
6400f351:	jmp    0x640105d8
6400f356:	shr    ebx,0x4
6400f359:	mov    ecx,ebx
6400f35b:	and    ecx,0xf
6400f35e:	add    ecx,0x8
6400f361:	sub    esi,0x4
6400f364:	cmp    ecx,DWORD PTR [edi+0x24]
6400f367:	mov    DWORD PTR [esp+0x18],ebx
6400f36b:	jbe    0x6400f381
6400f36d:	mov    ecx,DWORD PTR [esp+0x40]
6400f371:	mov    edx,DWORD PTR [esp+0x10]
6400f375:	mov    DWORD PTR [ecx+0x18],0x6403d340
6400f37c:	jmp    0x640105d8
6400f381:	mov    edx,0x1
6400f386:	shl    edx,cl
6400f388:	push   0x0
6400f38a:	push   0x0
6400f38c:	push   0x0
6400f38e:	mov    DWORD PTR [edi+0x14],edx
6400f391:	call   0x64010820
6400f396:	mov    ecx,DWORD PTR [esp+0x4c]
6400f39a:	mov    edx,DWORD PTR [esp+0x1c]
6400f39e:	shr    ebx,0x8
6400f3a1:	not    ebx
6400f3a3:	and    ebx,0x2
6400f3a6:	or     ebx,0x9
6400f3a9:	mov    DWORD PTR [edi+0x18],eax
6400f3ac:	mov    DWORD PTR [ecx+0x30],eax
6400f3af:	mov    DWORD PTR [edi],ebx
6400f3b1:	xor    ebx,ebx
6400f3b3:	add    esp,0xc
6400f3b6:	mov    DWORD PTR [esp+0x18],ebx
6400f3ba:	xor    esi,esi
6400f3bc:	jmp    0x640105de
6400f3c1:	mov    edx,DWORD PTR [esp+0x40]
6400f3c5:	mov    DWORD PTR [edx+0x18],0x6403d328
6400f3cc:	mov    edx,DWORD PTR [esp+0x10]
6400f3d0:	jmp    0x640105d8
6400f3d5:	cmp    esi,0x10
6400f3d8:	jae    0x6400f408
6400f3da:	lea    ebx,[ebx+0x0]
6400f3e0:	test   edx,edx
6400f3e2:	je     0x6401063c
6400f3e8:	movzx  eax,BYTE PTR [ebp+0x0]
6400f3ec:	mov    ecx,esi
6400f3ee:	shl    eax,cl
6400f3f0:	sub    edx,0x1
6400f3f3:	add    esi,0x8
6400f3f6:	add    ebp,0x1
6400f3f9:	add    ebx,eax
6400f3fb:	cmp    esi,0x10
6400f3fe:	mov    DWORD PTR [esp+0x10],edx
6400f402:	mov    DWORD PTR [esp+0x18],ebx
6400f406:	jb     0x6400f3e0
6400f408:	cmp    bl,0x8
6400f40b:	mov    DWORD PTR [edi+0x10],ebx
6400f40e:	je     0x6400f420
6400f410:	mov    ecx,DWORD PTR [esp+0x40]
6400f414:	mov    DWORD PTR [ecx+0x18],0x6403d354
6400f41b:	jmp    0x640105d8
6400f420:	test   ebx,0xe000
6400f426:	je     0x6400f438
6400f428:	mov    eax,DWORD PTR [esp+0x40]
6400f42c:	mov    DWORD PTR [eax+0x18],0x6403d30c
6400f433:	jmp    0x640105d8
6400f438:	mov    eax,DWORD PTR [edi+0x20]
6400f43b:	test   eax,eax
6400f43d:	je     0x6400f449
6400f43f:	mov    ecx,ebx
6400f441:	shr    ecx,0x8
6400f444:	and    ecx,0x1
6400f447:	mov    DWORD PTR [eax],ecx
6400f449:	test   DWORD PTR [edi+0x10],0x200
6400f450:	je     0x6400f477
6400f452:	mov    BYTE PTR [esp+0x20],bl
6400f456:	shr    ebx,0x8
6400f459:	push   0x2
6400f45b:	lea    edx,[esp+0x24]
6400f45f:	mov    BYTE PTR [esp+0x25],bl
6400f463:	mov    eax,DWORD PTR [edi+0x18]
6400f466:	push   edx
6400f467:	push   eax
6400f468:	call   0x64012510
6400f46d:	mov    edx,DWORD PTR [esp+0x1c]
6400f471:	add    esp,0xc
6400f474:	mov    DWORD PTR [edi+0x18],eax
6400f477:	xor    ebx,ebx
6400f479:	xor    esi,esi
6400f47b:	mov    DWORD PTR [edi],0x2
6400f481:	jmp    0x6400f488
6400f483:	cmp    esi,0x20
6400f486:	jae    0x6400f4ac
6400f488:	test   edx,edx
6400f48a:	je     0x6401063c
6400f490:	movzx  eax,BYTE PTR [ebp+0x0]
6400f494:	mov    ecx,esi
6400f496:	shl    eax,cl
6400f498:	sub    edx,0x1
6400f49b:	add    esi,0x8
6400f49e:	add    ebp,0x1
6400f4a1:	add    ebx,eax
6400f4a3:	cmp    esi,0x20
6400f4a6:	mov    DWORD PTR [esp+0x10],edx
6400f4aa:	jb     0x6400f488
6400f4ac:	mov    eax,DWORD PTR [edi+0x20]
6400f4af:	test   eax,eax
6400f4b1:	je     0x6400f4b6
6400f4b3:	mov    DWORD PTR [eax+0x4],ebx
6400f4b6:	test   DWORD PTR [edi+0x10],0x200
6400f4bd:	je     0x6400f4f6
6400f4bf:	mov    BYTE PTR [esp+0x20],bl
6400f4c3:	mov    ecx,ebx
6400f4c5:	mov    edx,ebx
6400f4c7:	shr    ecx,0x8
6400f4ca:	shr    edx,0x10
6400f4cd:	shr    ebx,0x18
6400f4d0:	push   0x4
6400f4d2:	lea    eax,[esp+0x24]
6400f4d6:	mov    BYTE PTR [esp+0x25],cl
6400f4da:	mov    BYTE PTR [esp+0x26],dl
6400f4de:	mov    BYTE PTR [esp+0x27],bl
6400f4e2:	mov    ecx,DWORD PTR [edi+0x18]
6400f4e5:	push   eax
6400f4e6:	push   ecx
6400f4e7:	call   0x64012510
6400f4ec:	mov    edx,DWORD PTR [esp+0x1c]
6400f4f0:	add    esp,0xc
6400f4f3:	mov    DWORD PTR [edi+0x18],eax
6400f4f6:	xor    ebx,ebx
6400f4f8:	xor    esi,esi
6400f4fa:	mov    DWORD PTR [edi],0x3
6400f500:	jmp    0x6400f507
6400f502:	cmp    esi,0x10
6400f505:	jae    0x6400f52b
6400f507:	test   edx,edx
6400f509:	je     0x6401063c
6400f50f:	movzx  eax,BYTE PTR [ebp+0x0]
6400f513:	mov    ecx,esi
6400f515:	shl    eax,cl
6400f517:	sub    edx,0x1
6400f51a:	add    esi,0x8
6400f51d:	add    ebp,0x1
6400f520:	add    ebx,eax
6400f522:	cmp    esi,0x10
6400f525:	mov    DWORD PTR [esp+0x10],edx
6400f529:	jb     0x6400f507
6400f52b:	mov    eax,DWORD PTR [edi+0x20]
6400f52e:	test   eax,eax
6400f530:	je     0x6400f548
6400f532:	mov    ecx,ebx
6400f534:	and    ecx,0xff
6400f53a:	mov    DWORD PTR [eax+0x8],ecx
6400f53d:	mov    ecx,DWORD PTR [edi+0x20]
6400f540:	mov    eax,ebx
6400f542:	shr    eax,0x8
6400f545:	mov    DWORD PTR [ecx+0xc],eax
6400f548:	test   DWORD PTR [edi+0x10],0x200
6400f54f:	je     0x6400f576
6400f551:	mov    BYTE PTR [esp+0x20],bl
6400f555:	shr    ebx,0x8
6400f558:	push   0x2
6400f55a:	lea    edx,[esp+0x24]
6400f55e:	mov    BYTE PTR [esp+0x25],bl
6400f562:	mov    eax,DWORD PTR [edi+0x18]
6400f565:	push   edx
6400f566:	push   eax
6400f567:	call   0x64012510
6400f56c:	mov    edx,DWORD PTR [esp+0x1c]
6400f570:	add    esp,0xc
6400f573:	mov    DWORD PTR [edi+0x18],eax
6400f576:	xor    ebx,ebx
6400f578:	mov    DWORD PTR [esp+0x18],ebx
6400f57c:	xor    esi,esi
6400f57e:	mov    DWORD PTR [edi],0x4
6400f584:	test   DWORD PTR [edi+0x10],0x400
6400f58b:	je     0x6400f5fb
6400f58d:	cmp    esi,0x10
6400f590:	jae    0x6400f5b6
6400f592:	test   edx,edx
6400f594:	je     0x6401063c
6400f59a:	movzx  eax,BYTE PTR [ebp+0x0]
6400f59e:	mov    ecx,esi
6400f5a0:	shl    eax,cl
6400f5a2:	sub    edx,0x1
6400f5a5:	add    esi,0x8
6400f5a8:	add    ebp,0x1
6400f5ab:	add    ebx,eax
6400f5ad:	cmp    esi,0x10
6400f5b0:	mov    DWORD PTR [esp+0x10],edx
6400f5b4:	jb     0x6400f592
6400f5b6:	mov    eax,DWORD PTR [edi+0x20]
6400f5b9:	test   eax,eax
6400f5bb:	mov    DWORD PTR [edi+0x40],ebx
6400f5be:	je     0x6400f5c3
6400f5c0:	mov    DWORD PTR [eax+0x14],ebx
6400f5c3:	test   DWORD PTR [edi+0x10],0x200
6400f5ca:	je     0x6400f5f1
6400f5cc:	mov    BYTE PTR [esp+0x20],bl
6400f5d0:	shr    ebx,0x8
6400f5d3:	push   0x2
6400f5d5:	lea    ecx,[esp+0x24]
6400f5d9:	mov    BYTE PTR [esp+0x25],bl
6400f5dd:	mov    edx,DWORD PTR [edi+0x18]
6400f5e0:	push   ecx
6400f5e1:	push   edx
6400f5e2:	call   0x64012510
6400f5e7:	mov    edx,DWORD PTR [esp+0x1c]
6400f5eb:	add    esp,0xc
6400f5ee:	mov    DWORD PTR [edi+0x18],eax
6400f5f1:	xor    ebx,ebx
6400f5f3:	mov    DWORD PTR [esp+0x18],ebx
6400f5f7:	xor    esi,esi
6400f5f9:	jmp    0x6400f609
6400f5fb:	mov    eax,DWORD PTR [edi+0x20]
6400f5fe:	test   eax,eax
6400f600:	je     0x6400f609
6400f602:	mov    DWORD PTR [eax+0x10],0x0
6400f609:	mov    DWORD PTR [edi],0x5
6400f60f:	test   DWORD PTR [edi+0x10],0x400
6400f616:	je     0x6400f6be
6400f61c:	mov    eax,DWORD PTR [edi+0x40]
6400f61f:	cmp    eax,edx
6400f621:	mov    DWORD PTR [esp+0x14],eax
6400f625:	jbe    0x6400f62d
6400f627:	mov    eax,edx
6400f629:	mov    DWORD PTR [esp+0x14],edx
6400f62d:	test   eax,eax
6400f62f:	je     0x6400f6b4
6400f635:	mov    ecx,DWORD PTR [edi+0x20]
6400f638:	test   ecx,ecx
6400f63a:	je     0x6400f683
6400f63c:	mov    ecx,DWORD PTR [ecx+0x10]
6400f63f:	test   ecx,ecx
6400f641:	mov    DWORD PTR [esp+0x34],ecx
6400f645:	je     0x6400f683
6400f647:	mov    ecx,DWORD PTR [edi+0x20]
6400f64a:	mov    ecx,DWORD PTR [ecx+0x14]
6400f64d:	sub    ecx,DWORD PTR [edi+0x40]
6400f650:	mov    edx,DWORD PTR [edi+0x20]
6400f653:	mov    edx,DWORD PTR [edx+0x18]
6400f656:	mov    DWORD PTR [esp+0x24],ecx
6400f65a:	add    ecx,eax
6400f65c:	cmp    ecx,edx
6400f65e:	jbe    0x6400f666
6400f660:	sub    edx,DWORD PTR [esp+0x24]
6400f664:	mov    eax,edx
6400f666:	mov    edx,DWORD PTR [esp+0x34]
6400f66a:	push   eax
6400f66b:	mov    eax,DWORD PTR [esp+0x28]
6400f66f:	add    edx,eax
6400f671:	push   ebp
6400f672:	push   edx
6400f673:	call   0x640151f0
6400f678:	mov    eax,DWORD PTR [esp+0x20]
6400f67c:	mov    edx,DWORD PTR [esp+0x1c]
6400f680:	add    esp,0xc
6400f683:	test   DWORD PTR [edi+0x10],0x200
6400f68a:	je     0x6400f6a9
6400f68c:	mov    ecx,DWORD PTR [esp+0x14]
6400f690:	mov    edx,DWORD PTR [edi+0x18]
6400f693:	push   ecx
6400f694:	push   ebp
6400f695:	push   edx
6400f696:	call   0x64012510
6400f69b:	mov    edx,DWORD PTR [esp+0x1c]
6400f69f:	mov    DWORD PTR [edi+0x18],eax
6400f6a2:	mov    eax,DWORD PTR [esp+0x20]
6400f6a6:	add    esp,0xc
6400f6a9:	sub    edx,eax
6400f6ab:	add    ebp,eax
6400f6ad:	sub    DWORD PTR [edi+0x40],eax
6400f6b0:	mov    DWORD PTR [esp+0x10],edx
6400f6b4:	cmp    DWORD PTR [edi+0x40],0x0
6400f6b8:	jne    0x6401063c
6400f6be:	mov    DWORD PTR [edi+0x40],0x0
6400f6c5:	mov    DWORD PTR [edi],0x6
6400f6cb:	test   DWORD PTR [edi+0x10],0x800
6400f6d2:	je     0x6400f768
6400f6d8:	test   edx,edx
6400f6da:	je     0x6401063c
6400f6e0:	xor    eax,eax
6400f6e2:	movzx  ecx,BYTE PTR [eax+ebp*1]
6400f6e6:	add    eax,0x1
6400f6e9:	mov    DWORD PTR [esp+0x14],eax
6400f6ed:	mov    eax,DWORD PTR [edi+0x20]
6400f6f0:	test   eax,eax
6400f6f2:	mov    DWORD PTR [esp+0x24],ecx
6400f6f6:	je     0x6400f71e
6400f6f8:	mov    ecx,DWORD PTR [eax+0x1c]
6400f6fb:	test   ecx,ecx
6400f6fd:	mov    DWORD PTR [esp+0x34],ecx
6400f701:	je     0x6400f71e
6400f703:	mov    ecx,DWORD PTR [edi+0x40]
6400f706:	cmp    ecx,DWORD PTR [eax+0x20]
6400f709:	jae    0x6400f71e
6400f70b:	mov    edx,DWORD PTR [esp+0x34]
6400f70f:	mov    al,BYTE PTR [esp+0x24]
6400f713:	mov    BYTE PTR [edx+ecx*1],al
6400f716:	add    DWORD PTR [edi+0x40],0x1
6400f71a:	mov    edx,DWORD PTR [esp+0x10]
6400f71e:	cmp    DWORD PTR [esp+0x24],0x0
6400f723:	je     0x6400f72d
6400f725:	mov    eax,DWORD PTR [esp+0x14]
6400f729:	cmp    eax,edx
6400f72b:	jb     0x6400f6e2
6400f72d:	test   DWORD PTR [edi+0x10],0x200
6400f734:	je     0x6400f74f
6400f736:	mov    ecx,DWORD PTR [esp+0x14]
6400f73a:	mov    edx,DWORD PTR [edi+0x18]
6400f73d:	push   ecx
6400f73e:	push   ebp
6400f73f:	push   edx
6400f740:	call   0x64012510
6400f745:	mov    edx,DWORD PTR [esp+0x1c]
6400f749:	add    esp,0xc
6400f74c:	mov    DWORD PTR [edi+0x18],eax
6400f74f:	mov    eax,DWORD PTR [esp+0x14]
6400f753:	sub    edx,eax
6400f755:	add    ebp,eax
6400f757:	cmp    DWORD PTR [esp+0x24],0x0
6400f75c:	mov    DWORD PTR [esp+0x10],edx
6400f760:	jne    0x6401063c
6400f766:	jmp    0x6400f776
6400f768:	mov    eax,DWORD PTR [edi+0x20]
6400f76b:	test   eax,eax
6400f76d:	je     0x6400f776
6400f76f:	mov    DWORD PTR [eax+0x1c],0x0
6400f776:	mov    DWORD PTR [edi+0x40],0x0
6400f77d:	mov    DWORD PTR [edi],0x7
6400f783:	test   DWORD PTR [edi+0x10],0x1000
6400f78a:	je     0x6400f826
6400f790:	test   edx,edx
6400f792:	je     0x6401063c
6400f798:	xor    eax,eax
6400f79a:	lea    ebx,[ebx+0x0]
6400f7a0:	movzx  ecx,BYTE PTR [eax+ebp*1]
6400f7a4:	add    eax,0x1
6400f7a7:	mov    DWORD PTR [esp+0x14],eax
6400f7ab:	mov    eax,DWORD PTR [edi+0x20]
6400f7ae:	test   eax,eax
6400f7b0:	mov    DWORD PTR [esp+0x24],ecx
6400f7b4:	je     0x6400f7dc
6400f7b6:	mov    ecx,DWORD PTR [eax+0x24]
6400f7b9:	test   ecx,ecx
6400f7bb:	mov    DWORD PTR [esp+0x34],ecx
6400f7bf:	je     0x6400f7dc
6400f7c1:	mov    ecx,DWORD PTR [edi+0x40]
6400f7c4:	cmp    ecx,DWORD PTR [eax+0x28]
6400f7c7:	jae    0x6400f7dc
6400f7c9:	mov    edx,DWORD PTR [esp+0x34]
6400f7cd:	mov    al,BYTE PTR [esp+0x24]
6400f7d1:	mov    BYTE PTR [edx+ecx*1],al
6400f7d4:	add    DWORD PTR [edi+0x40],0x1
6400f7d8:	mov    edx,DWORD PTR [esp+0x10]
6400f7dc:	cmp    DWORD PTR [esp+0x24],0x0
6400f7e1:	je     0x6400f7eb
6400f7e3:	mov    eax,DWORD PTR [esp+0x14]
6400f7e7:	cmp    eax,edx
6400f7e9:	jb     0x6400f7a0
6400f7eb:	test   DWORD PTR [edi+0x10],0x200
6400f7f2:	je     0x6400f80d
6400f7f4:	mov    ecx,DWORD PTR [esp+0x14]
6400f7f8:	mov    edx,DWORD PTR [edi+0x18]
6400f7fb:	push   ecx
6400f7fc:	push   ebp
6400f7fd:	push   edx
6400f7fe:	call   0x64012510
6400f803:	mov    edx,DWORD PTR [esp+0x1c]
6400f807:	add    esp,0xc
6400f80a:	mov    DWORD PTR [edi+0x18],eax
6400f80d:	mov    eax,DWORD PTR [esp+0x14]
6400f811:	sub    edx,eax
6400f813:	add    ebp,eax
6400f815:	cmp    DWORD PTR [esp+0x24],0x0
6400f81a:	mov    DWORD PTR [esp+0x10],edx
6400f81e:	jne    0x6401063c
6400f824:	jmp    0x6400f834
6400f826:	mov    eax,DWORD PTR [edi+0x20]
6400f829:	test   eax,eax
6400f82b:	je     0x6400f834
6400f82d:	mov    DWORD PTR [eax+0x24],0x0
6400f834:	mov    DWORD PTR [edi],0x8
6400f83a:	test   DWORD PTR [edi+0x10],0x200
6400f841:	je     0x6400f890
6400f843:	cmp    esi,0x10
6400f846:	jae    0x6400f870
6400f848:	test   edx,edx
6400f84a:	je     0x6401063c
6400f850:	movzx  eax,BYTE PTR [ebp+0x0]
6400f854:	mov    ecx,esi
6400f856:	shl    eax,cl
6400f858:	sub    edx,0x1
6400f85b:	add    esi,0x8
6400f85e:	add    ebp,0x1
6400f861:	add    ebx,eax
6400f863:	cmp    esi,0x10
6400f866:	mov    DWORD PTR [esp+0x10],edx
6400f86a:	mov    DWORD PTR [esp+0x18],ebx
6400f86e:	jb     0x6400f848
6400f870:	movzx  ecx,WORD PTR [edi+0x18]
6400f874:	cmp    ebx,ecx
6400f876:	je     0x6400f888
6400f878:	mov    eax,DWORD PTR [esp+0x40]
6400f87c:	mov    DWORD PTR [eax+0x18],0x6403d2f8
6400f883:	jmp    0x640105d8
6400f888:	xor    ebx,ebx
6400f88a:	mov    DWORD PTR [esp+0x18],ebx
6400f88e:	xor    esi,esi
6400f890:	mov    eax,DWORD PTR [edi+0x20]
6400f893:	test   eax,eax
6400f895:	je     0x6400f8ad
6400f897:	mov    ecx,DWORD PTR [edi+0x10]
6400f89a:	sar    ecx,0x9
6400f89d:	and    ecx,0x1
6400f8a0:	mov    DWORD PTR [eax+0x2c],ecx
6400f8a3:	mov    edx,DWORD PTR [edi+0x20]
6400f8a6:	mov    DWORD PTR [edx+0x30],0x1
6400f8ad:	push   0x0
6400f8af:	push   0x0
6400f8b1:	push   0x0
6400f8b3:	call   0x64012510
6400f8b8:	mov    ecx,DWORD PTR [esp+0x4c]
6400f8bc:	mov    edx,DWORD PTR [esp+0x1c]
6400f8c0:	mov    DWORD PTR [edi+0x18],eax
6400f8c3:	mov    DWORD PTR [ecx+0x30],eax
6400f8c6:	add    esp,0xc
6400f8c9:	mov    DWORD PTR [edi],0xb
6400f8cf:	jmp    0x640105de
6400f8d4:	cmp    esi,0x20
6400f8d7:	jae    0x6400f908
6400f8d9:	lea    esp,[esp+0x0]
6400f8e0:	test   edx,edx
6400f8e2:	je     0x6401063c
6400f8e8:	movzx  eax,BYTE PTR [ebp+0x0]
6400f8ec:	mov    ecx,esi
6400f8ee:	shl    eax,cl
6400f8f0:	sub    edx,0x1
6400f8f3:	add    esi,0x8
6400f8f6:	add    ebp,0x1
6400f8f9:	add    ebx,eax
6400f8fb:	cmp    esi,0x20
6400f8fe:	mov    DWORD PTR [esp+0x10],edx
6400f902:	mov    DWORD PTR [esp+0x18],ebx
6400f906:	jb     0x6400f8e0
6400f908:	mov    ecx,ebx
6400f90a:	and    ecx,0xff00
6400f910:	mov    eax,ebx
6400f912:	shl    eax,0x10
6400f915:	add    ecx,eax
6400f917:	xor    eax,eax
6400f919:	mov    ah,BYTE PTR [esp+0x1a]
6400f91d:	shl    ecx,0x8
6400f920:	shr    ebx,0x18
6400f923:	add    ecx,eax
6400f925:	lea    eax,[ecx+ebx*1]
6400f928:	mov    ecx,DWORD PTR [esp+0x40]
6400f92c:	mov    DWORD PTR [edi+0x18],eax
6400f92f:	mov    DWORD PTR [ecx+0x30],eax
6400f932:	xor    ebx,ebx
6400f934:	xor    esi,esi
6400f936:	mov    DWORD PTR [edi],0xa
6400f93c:	cmp    DWORD PTR [edi+0xc],0x0
6400f940:	je     0x640105f6
6400f946:	push   0x0
6400f948:	push   0x0
6400f94a:	push   0x0
6400f94c:	call   0x64010820
6400f951:	mov    edx,DWORD PTR [esp+0x4c]
6400f955:	mov    DWORD PTR [edi+0x18],eax
6400f958:	mov    DWORD PTR [edx+0x30],eax
6400f95b:	mov    edx,DWORD PTR [esp+0x1c]
6400f95f:	add    esp,0xc
6400f962:	mov    DWORD PTR [edi],0xb
6400f968:	cmp    DWORD PTR [esp+0x44],0x5
6400f96d:	je     0x6401063c
6400f973:	cmp    DWORD PTR [edi+0x4],0x0
6400f977:	je     0x6400f991
6400f979:	mov    ecx,esi
6400f97b:	and    ecx,0x7
6400f97e:	shr    ebx,cl
6400f980:	sub    esi,ecx
6400f982:	mov    DWORD PTR [edi],0x18
6400f988:	mov    DWORD PTR [esp+0x18],ebx
6400f98c:	jmp    0x640105de
6400f991:	cmp    esi,0x3
6400f994:	jae    0x6400f9ba
6400f996:	test   edx,edx
6400f998:	je     0x6401063c
6400f99e:	movzx  eax,BYTE PTR [ebp+0x0]
6400f9a2:	mov    ecx,esi
6400f9a4:	shl    eax,cl
6400f9a6:	sub    edx,0x1
6400f9a9:	add    esi,0x8
6400f9ac:	add    ebp,0x1
6400f9af:	add    ebx,eax
6400f9b1:	cmp    esi,0x3
6400f9b4:	mov    DWORD PTR [esp+0x10],edx
6400f9b8:	jb     0x6400f996
6400f9ba:	mov    ecx,ebx
6400f9bc:	shr    ebx,1
6400f9be:	mov    eax,ebx
6400f9c0:	and    ecx,0x1
6400f9c3:	and    eax,0x3
6400f9c6:	sub    esi,0x1
6400f9c9:	cmp    eax,0x3
6400f9cc:	mov    DWORD PTR [edi+0x4],ecx
6400f9cf:	ja     0x6400fa2f
6400f9d1:	jmp    DWORD PTR [eax*4+0x640107bc]
6400f9d8:	shr    ebx,0x2
6400f9db:	mov    DWORD PTR [edi],0xd
6400f9e1:	mov    DWORD PTR [esp+0x18],ebx
6400f9e5:	sub    esi,0x2
6400f9e8:	jmp    0x640105de
6400f9ed:	mov    eax,edi
6400f9ef:	call   0x6400f0d0
6400f9f4:	shr    ebx,0x2
6400f9f7:	mov    DWORD PTR [edi],0x12
6400f9fd:	mov    DWORD PTR [esp+0x18],ebx
6400fa01:	sub    esi,0x2
6400fa04:	jmp    0x640105de
6400fa09:	shr    ebx,0x2
6400fa0c:	mov    DWORD PTR [edi],0xf
6400fa12:	mov    DWORD PTR [esp+0x18],ebx
6400fa16:	sub    esi,0x2
6400fa19:	jmp    0x640105de
6400fa1e:	mov    eax,DWORD PTR [esp+0x40]
6400fa22:	mov    DWORD PTR [eax+0x18],0x6403d2e4
6400fa29:	mov    DWORD PTR [edi],0x1b
6400fa2f:	shr    ebx,0x2
6400fa32:	mov    DWORD PTR [esp+0x18],ebx
6400fa36:	sub    esi,0x2
6400fa39:	jmp    0x640105de
6400fa3e:	mov    ecx,esi
6400fa40:	and    ecx,0x7
6400fa43:	shr    ebx,cl
6400fa45:	sub    esi,ecx
6400fa47:	cmp    esi,0x20
6400fa4a:	mov    DWORD PTR [esp+0x18],ebx
6400fa4e:	jae    0x6400fa78
6400fa50:	test   edx,edx
6400fa52:	je     0x6401063c
6400fa58:	movzx  eax,BYTE PTR [ebp+0x0]
6400fa5c:	mov    ecx,esi
6400fa5e:	shl    eax,cl
6400fa60:	sub    edx,0x1
6400fa63:	add    esi,0x8
6400fa66:	add    ebp,0x1
6400fa69:	add    ebx,eax
6400fa6b:	cmp    esi,0x20
6400fa6e:	mov    DWORD PTR [esp+0x10],edx
6400fa72:	mov    DWORD PTR [esp+0x18],ebx
6400fa76:	jb     0x6400fa50
6400fa78:	mov    ecx,ebx
6400fa7a:	mov    eax,ebx
6400fa7c:	not    ecx
6400fa7e:	and    eax,0xffff
6400fa83:	shr    ecx,0x10
6400fa86:	cmp    eax,ecx
6400fa88:	je     0x6400fa9a
6400fa8a:	mov    eax,DWORD PTR [esp+0x40]
6400fa8e:	mov    DWORD PTR [eax+0x18],0x6403d2c4
6400fa95:	jmp    0x640105d8
6400fa9a:	xor    ebx,ebx
6400fa9c:	mov    DWORD PTR [edi+0x40],eax
6400fa9f:	mov    DWORD PTR [esp+0x18],ebx
6400faa3:	xor    esi,esi
6400faa5:	mov    DWORD PTR [edi],0xe
6400faab:	mov    eax,DWORD PTR [edi+0x40]
6400faae:	test   eax,eax
6400fab0:	mov    DWORD PTR [esp+0x14],eax
6400fab4:	je     0x6401016c
6400faba:	cmp    eax,edx
6400fabc:	jbe    0x6400fac4
6400fabe:	mov    eax,edx
6400fac0:	mov    DWORD PTR [esp+0x14],edx
6400fac4:	mov    ecx,DWORD PTR [esp+0x1c]
6400fac8:	cmp    eax,ecx
6400faca:	jbe    0x6400fad2
6400facc:	mov    eax,ecx
6400face:	mov    DWORD PTR [esp+0x14],eax
6400fad2:	test   eax,eax
6400fad4:	je     0x6401063c
6400fada:	mov    ecx,DWORD PTR [esp+0x14]
6400fade:	mov    edx,DWORD PTR [esp+0x28]
6400fae2:	push   ecx
6400fae3:	push   ebp
6400fae4:	push   edx
6400fae5:	call   0x640151f0
6400faea:	mov    eax,DWORD PTR [esp+0x20]
6400faee:	sub    DWORD PTR [esp+0x1c],eax
6400faf2:	sub    DWORD PTR [esp+0x28],eax
6400faf6:	add    DWORD PTR [esp+0x34],eax
6400fafa:	mov    edx,DWORD PTR [esp+0x1c]
6400fafe:	add    esp,0xc
6400fb01:	add    ebp,eax
6400fb03:	sub    DWORD PTR [edi+0x40],eax
6400fb06:	jmp    0x640105de
6400fb0b:	cmp    esi,0xe
6400fb0e:	jae    0x6400fb34
6400fb10:	test   edx,edx
6400fb12:	je     0x6401063c
6400fb18:	movzx  eax,BYTE PTR [ebp+0x0]
6400fb1c:	mov    ecx,esi
6400fb1e:	shl    eax,cl
6400fb20:	sub    edx,0x1
6400fb23:	add    esi,0x8
6400fb26:	add    ebp,0x1
6400fb29:	add    ebx,eax
6400fb2b:	cmp    esi,0xe
6400fb2e:	mov    DWORD PTR [esp+0x10],edx
6400fb32:	jb     0x6400fb10
6400fb34:	mov    ecx,ebx
6400fb36:	and    ecx,0x1f
6400fb39:	shr    ebx,0x5
6400fb3c:	add    ecx,0x101
6400fb42:	mov    eax,ebx
6400fb44:	mov    DWORD PTR [edi+0x60],ecx
6400fb47:	shr    ebx,0x5
6400fb4a:	mov    ecx,ebx
6400fb4c:	and    eax,0x1f
6400fb4f:	and    ecx,0xf
6400fb52:	add    eax,0x1
6400fb55:	add    ecx,0x4
6400fb58:	shr    ebx,0x4
6400fb5b:	sub    esi,0xe
6400fb5e:	cmp    DWORD PTR [edi+0x60],0x11e
6400fb65:	mov    DWORD PTR [edi+0x64],eax
6400fb68:	mov    DWORD PTR [edi+0x5c],ecx
6400fb6b:	mov    DWORD PTR [esp+0x18],ebx
6400fb6f:	ja     0x6400fc65
6400fb75:	cmp    eax,0x1e
6400fb78:	ja     0x6400fc65
6400fb7e:	mov    DWORD PTR [edi+0x68],0x0
6400fb85:	mov    DWORD PTR [edi],0x10
6400fb8b:	mov    ecx,DWORD PTR [edi+0x68]
6400fb8e:	cmp    ecx,DWORD PTR [edi+0x5c]
6400fb91:	jae    0x6400fbe8
6400fb93:	cmp    esi,0x3
6400fb96:	jae    0x6400fbbc
6400fb98:	test   edx,edx
6400fb9a:	je     0x6401063c
6400fba0:	movzx  eax,BYTE PTR [ebp+0x0]
6400fba4:	mov    ecx,esi
6400fba6:	shl    eax,cl
6400fba8:	sub    edx,0x1
6400fbab:	add    esi,0x8
6400fbae:	add    ebp,0x1
6400fbb1:	add    ebx,eax
6400fbb3:	cmp    esi,0x3
6400fbb6:	mov    DWORD PTR [esp+0x10],edx
6400fbba:	jb     0x6400fb98
6400fbbc:	mov    eax,DWORD PTR [edi+0x68]
6400fbbf:	movzx  eax,WORD PTR [eax*2+0x6403d188]
6400fbc7:	movzx  ecx,bl
6400fbca:	and    ecx,0x7
6400fbcd:	mov    WORD PTR [edi+eax*2+0x70],cx
6400fbd2:	add    DWORD PTR [edi+0x68],0x1
6400fbd6:	mov    ecx,DWORD PTR [edi+0x68]
6400fbd9:	shr    ebx,0x3
6400fbdc:	sub    esi,0x3
6400fbdf:	cmp    ecx,DWORD PTR [edi+0x5c]
6400fbe2:	mov    DWORD PTR [esp+0x18],ebx
6400fbe6:	jb     0x6400fb93
6400fbe8:	cmp    DWORD PTR [edi+0x68],0x13
6400fbec:	jae    0x6400fc19
6400fbee:	mov    ecx,0x1
6400fbf3:	xor    eax,eax
6400fbf5:	jmp    0x6400fc00
6400fbf7:	lea    esp,[esp+0x0]
6400fbfe:	mov    edi,edi
6400fc00:	mov    edx,DWORD PTR [edi+0x68]
6400fc03:	movzx  edx,WORD PTR [edx*2+0x6403d188]
6400fc0b:	mov    WORD PTR [edi+edx*2+0x70],ax
6400fc10:	add    DWORD PTR [edi+0x68],ecx
6400fc13:	cmp    DWORD PTR [edi+0x68],0x13
6400fc17:	jb     0x6400fc00
6400fc19:	lea    eax,[edi+0x530]
6400fc1f:	lea    ecx,[edi+0x6c]
6400fc22:	mov    DWORD PTR [ecx],eax
6400fc24:	mov    DWORD PTR [edi+0x4c],eax
6400fc27:	lea    edx,[edi+0x2f0]
6400fc2d:	push   edx
6400fc2e:	lea    eax,[edi+0x54]
6400fc31:	push   eax
6400fc32:	push   ecx
6400fc33:	mov    DWORD PTR [eax],0x7
6400fc39:	push   0x13
6400fc3b:	lea    eax,[edi+0x70]
6400fc3e:	push   eax
6400fc3f:	push   0x0
6400fc41:	call   0x64012a20
6400fc46:	mov    edx,DWORD PTR [esp+0x28]
6400fc4a:	add    esp,0x18
6400fc4d:	test   eax,eax
6400fc4f:	mov    DWORD PTR [esp+0x30],eax
6400fc53:	je     0x6400fc75
6400fc55:	mov    ecx,DWORD PTR [esp+0x40]
6400fc59:	mov    DWORD PTR [ecx+0x18],0x6403d2a8
6400fc60:	jmp    0x640105d8
6400fc65:	mov    eax,DWORD PTR [esp+0x40]
6400fc69:	mov    DWORD PTR [eax+0x18],0x6403d284
6400fc70:	jmp    0x640105d8
6400fc75:	mov    DWORD PTR [edi+0x68],0x0
6400fc7c:	mov    DWORD PTR [edi],0x11
6400fc82:	mov    eax,DWORD PTR [edi+0x64]
6400fc85:	add    eax,DWORD PTR [edi+0x60]
6400fc88:	cmp    DWORD PTR [edi+0x68],eax
6400fc8b:	jae    0x6400fec9
6400fc91:	mov    ecx,DWORD PTR [edi+0x54]
6400fc94:	mov    eax,0x1
6400fc99:	shl    eax,cl
6400fc9b:	mov    ecx,DWORD PTR [edi+0x4c]
6400fc9e:	sub    eax,0x1
6400fca1:	and    eax,ebx
6400fca3:	mov    eax,DWORD PTR [ecx+eax*4]
6400fca6:	mov    ecx,eax
6400fca8:	shr    ecx,0x8
6400fcab:	movzx  ecx,cl
6400fcae:	cmp    ecx,esi
6400fcb0:	mov    DWORD PTR [esp+0x14],eax
6400fcb4:	jbe    0x6400fcfa
6400fcb6:	test   edx,edx
6400fcb8:	je     0x6401063c
6400fcbe:	movzx  eax,BYTE PTR [ebp+0x0]
6400fcc2:	mov    ecx,esi
6400fcc4:	shl    eax,cl
6400fcc6:	mov    ecx,DWORD PTR [edi+0x54]
6400fcc9:	sub    edx,0x1
6400fccc:	add    esi,0x8
6400fccf:	add    ebx,eax
6400fcd1:	mov    eax,0x1
6400fcd6:	shl    eax,cl
6400fcd8:	mov    ecx,DWORD PTR [edi+0x4c]
6400fcdb:	add    ebp,0x1
6400fcde:	mov    DWORD PTR [esp+0x10],edx
6400fce2:	sub    eax,0x1
6400fce5:	and    eax,ebx
6400fce7:	mov    eax,DWORD PTR [ecx+eax*4]
6400fcea:	mov    ecx,eax
6400fcec:	shr    ecx,0x8
6400fcef:	movzx  ecx,cl
6400fcf2:	cmp    ecx,esi
6400fcf4:	mov    DWORD PTR [esp+0x14],eax
6400fcf8:	ja     0x6400fcb6
6400fcfa:	mov    ecx,eax
6400fcfc:	shr    ecx,0x10
6400fcff:	cmp    ecx,0x10
6400fd02:	jae    0x6400fd5b
6400fd04:	mov    ecx,eax
6400fd06:	shr    ecx,0x8
6400fd09:	movzx  ecx,cl
6400fd0c:	cmp    esi,ecx
6400fd0e:	jae    0x6400fd3a
6400fd10:	test   edx,edx
6400fd12:	je     0x6401063c
6400fd18:	movzx  eax,BYTE PTR [ebp+0x0]
6400fd1c:	mov    ecx,esi
6400fd1e:	shl    eax,cl
6400fd20:	sub    edx,0x1
6400fd23:	add    esi,0x8
6400fd26:	add    ebp,0x1
6400fd29:	add    ebx,eax
6400fd2b:	mov    eax,DWORD PTR [esp+0x14]
6400fd2f:	movzx  ecx,ah
6400fd32:	cmp    esi,ecx
6400fd34:	mov    DWORD PTR [esp+0x10],edx
6400fd38:	jb     0x6400fd10
6400fd3a:	movzx  ecx,ah
6400fd3d:	mov    eax,DWORD PTR [edi+0x68]
6400fd40:	shr    ebx,cl
6400fd42:	sub    esi,ecx
6400fd44:	mov    cx,WORD PTR [esp+0x16]
6400fd49:	mov    WORD PTR [edi+eax*2+0x70],cx
6400fd4e:	add    DWORD PTR [edi+0x68],0x1
6400fd52:	mov    DWORD PTR [esp+0x18],ebx
6400fd56:	jmp    0x6400feba
6400fd5b:	mov    cx,WORD PTR [esp+0x16]
6400fd60:	cmp    cx,0x10
6400fd64:	jne    0x6400fdd1
6400fd66:	movzx  ecx,ah
6400fd69:	lea    eax,[ecx+0x2]
6400fd6c:	cmp    esi,eax
6400fd6e:	mov    DWORD PTR [esp+0x24],ecx
6400fd72:	jae    0x6400fd9e
6400fd74:	test   edx,edx
6400fd76:	je     0x6401063c
6400fd7c:	movzx  eax,BYTE PTR [ebp+0x0]
6400fd80:	mov    ecx,esi
6400fd82:	shl    eax,cl
6400fd84:	mov    ecx,DWORD PTR [esp+0x24]
6400fd88:	sub    edx,0x1
6400fd8b:	add    esi,0x8
6400fd8e:	add    ebx,eax
6400fd90:	lea    eax,[ecx+0x2]
6400fd93:	add    ebp,0x1
6400fd96:	cmp    esi,eax
6400fd98:	mov    DWORD PTR [esp+0x10],edx
6400fd9c:	jb     0x6400fd74
6400fd9e:	mov    eax,DWORD PTR [edi+0x68]
6400fda1:	shr    ebx,cl
6400fda3:	sub    esi,ecx
6400fda5:	test   eax,eax
6400fda7:	mov    DWORD PTR [esp+0x18],ebx
6400fdab:	je     0x6400ff20
6400fdb1:	movzx  ecx,WORD PTR [edi+eax*2+0x6e]
6400fdb6:	mov    eax,ebx
6400fdb8:	and    eax,0x3
6400fdbb:	add    eax,0x3
6400fdbe:	shr    ebx,0x2
6400fdc1:	mov    DWORD PTR [esp+0x24],ecx
6400fdc5:	mov    DWORD PTR [esp+0x14],eax
6400fdc9:	sub    esi,0x2
6400fdcc:	jmp    0x6400fe80
6400fdd1:	cmp    cx,0x11
6400fdd5:	movzx  ecx,ah
6400fdd8:	mov    DWORD PTR [esp+0x24],ecx
6400fddc:	jne    0x6400fe27
6400fdde:	lea    eax,[ecx+0x3]
6400fde1:	cmp    esi,eax
6400fde3:	jae    0x6400fe0f
6400fde5:	test   edx,edx
6400fde7:	je     0x6401063c
6400fded:	movzx  eax,BYTE PTR [ebp+0x0]
6400fdf1:	mov    ecx,esi
6400fdf3:	shl    eax,cl
6400fdf5:	mov    ecx,DWORD PTR [esp+0x24]
6400fdf9:	sub    edx,0x1
6400fdfc:	add    esi,0x8
6400fdff:	add    ebx,eax
6400fe01:	lea    eax,[ecx+0x3]
6400fe04:	add    ebp,0x1
6400fe07:	cmp    esi,eax
6400fe09:	mov    DWORD PTR [esp+0x10],edx
6400fe0d:	jb     0x6400fde5
6400fe0f:	shr    ebx,cl
6400fe11:	mov    eax,ebx
6400fe13:	and    eax,0x7
6400fe16:	add    eax,0x3
6400fe19:	mov    DWORD PTR [esp+0x14],eax
6400fe1d:	shr    ebx,0x3
6400fe20:	mov    eax,0xfffffffd
6400fe25:	jmp    0x6400fe70
6400fe27:	lea    eax,[ecx+0x7]
6400fe2a:	cmp    esi,eax
6400fe2c:	jae    0x6400fe5a
6400fe2e:	mov    edi,edi
6400fe30:	test   edx,edx
6400fe32:	je     0x6401063c
6400fe38:	movzx  eax,BYTE PTR [ebp+0x0]
6400fe3c:	mov    ecx,esi
6400fe3e:	shl    eax,cl
6400fe40:	mov    ecx,DWORD PTR [esp+0x24]
6400fe44:	sub    edx,0x1
6400fe47:	add    esi,0x8
6400fe4a:	add    ebx,eax
6400fe4c:	lea    eax,[ecx+0x7]
6400fe4f:	add    ebp,0x1
6400fe52:	cmp    esi,eax
6400fe54:	mov    DWORD PTR [esp+0x10],edx
6400fe58:	jb     0x6400fe30
6400fe5a:	shr    ebx,cl
6400fe5c:	mov    eax,ebx
6400fe5e:	and    eax,0x7f
6400fe61:	add    eax,0xb
6400fe64:	mov    DWORD PTR [esp+0x14],eax
6400fe68:	shr    ebx,0x7
6400fe6b:	mov    eax,0xfffffff9
6400fe70:	sub    eax,ecx
6400fe72:	add    esi,eax
6400fe74:	mov    eax,DWORD PTR [esp+0x14]
6400fe78:	mov    DWORD PTR [esp+0x24],0x0
6400fe80:	mov    ecx,DWORD PTR [edi+0x68]
6400fe83:	add    ecx,eax
6400fe85:	mov    eax,DWORD PTR [edi+0x64]
6400fe88:	add    eax,DWORD PTR [edi+0x60]
6400fe8b:	mov    DWORD PTR [esp+0x18],ebx
6400fe8f:	cmp    ecx,eax
6400fe91:	ja     0x6400ff30
6400fe97:	cmp    DWORD PTR [esp+0x14],0x0
6400fe9c:	je     0x6400feba
6400fe9e:	mov    eax,DWORD PTR [esp+0x24]
6400fea2:	mov    ecx,DWORD PTR [edi+0x68]
6400fea5:	sub    DWORD PTR [esp+0x14],0x1
6400feaa:	mov    WORD PTR [edi+ecx*2+0x70],ax
6400feaf:	add    DWORD PTR [edi+0x68],0x1
6400feb3:	cmp    DWORD PTR [esp+0x14],0x0
6400feb8:	jne    0x6400fea2
6400feba:	mov    eax,DWORD PTR [edi+0x64]
6400febd:	add    eax,DWORD PTR [edi+0x60]
6400fec0:	cmp    DWORD PTR [edi+0x68],eax
6400fec3:	jb     0x6400fc91
6400fec9:	cmp    DWORD PTR [edi],0x1b
6400fecc:	je     0x640105de
6400fed2:	lea    eax,[edi+0x530]
6400fed8:	lea    ecx,[edi+0x6c]
6400fedb:	mov    DWORD PTR [ecx],eax
6400fedd:	lea    edx,[edi+0x2f0]
6400fee3:	push   edx
6400fee4:	mov    DWORD PTR [edi+0x4c],eax
6400fee7:	lea    eax,[edi+0x54]
6400feea:	push   eax
6400feeb:	push   ecx
6400feec:	mov    ecx,DWORD PTR [edi+0x60]
6400feef:	push   ecx
6400fef0:	lea    edx,[edi+0x70]
6400fef3:	push   edx
6400fef4:	push   0x1
6400fef6:	mov    DWORD PTR [eax],0x9
6400fefc:	call   0x64012a20
6400ff01:	add    esp,0x18
6400ff04:	test   eax,eax
6400ff06:	mov    DWORD PTR [esp+0x30],eax
6400ff0a:	je     0x6400ff40
6400ff0c:	mov    eax,DWORD PTR [esp+0x40]
6400ff10:	mov    edx,DWORD PTR [esp+0x10]
6400ff14:	mov    DWORD PTR [eax+0x18],0x6403d268
6400ff1b:	jmp    0x640105d8
6400ff20:	mov    ecx,DWORD PTR [esp+0x40]
6400ff24:	mov    DWORD PTR [ecx+0x18],0x6403d24c
6400ff2b:	jmp    0x640105d8
6400ff30:	mov    eax,DWORD PTR [esp+0x40]
6400ff34:	mov    DWORD PTR [eax+0x18],0x6403d24c
6400ff3b:	jmp    0x640105d8
6400ff40:	mov    edx,DWORD PTR [edi+0x6c]
6400ff43:	lea    ecx,[edi+0x6c]
6400ff46:	mov    DWORD PTR [edi+0x50],edx
6400ff49:	lea    edx,[edi+0x2f0]
6400ff4f:	push   edx
6400ff50:	lea    eax,[edi+0x58]
6400ff53:	push   eax
6400ff54:	push   ecx
6400ff55:	mov    ecx,DWORD PTR [edi+0x60]
6400ff58:	mov    DWORD PTR [eax],0x6
6400ff5e:	mov    eax,DWORD PTR [edi+0x64]
6400ff61:	push   eax
6400ff62:	lea    edx,[edi+ecx*2+0x70]
6400ff66:	push   edx
6400ff67:	push   0x2
6400ff69:	call   0x64012a20
6400ff6e:	mov    edx,DWORD PTR [esp+0x28]
6400ff72:	add    esp,0x18
6400ff75:	test   eax,eax
6400ff77:	mov    DWORD PTR [esp+0x30],eax
6400ff7b:	je     0x6400ff8d
6400ff7d:	mov    eax,DWORD PTR [esp+0x40]
6400ff81:	mov    DWORD PTR [eax+0x18],0x6403d234
6400ff88:	jmp    0x640105d8
6400ff8d:	mov    DWORD PTR [edi],0x12
6400ff93:	cmp    edx,0x6
6400ff96:	jb     0x64010001
6400ff9c:	cmp    DWORD PTR [esp+0x1c],0x102
6400ffa4:	jb     0x64010001
6400ffa6:	mov    eax,DWORD PTR [esp+0x40]
6400ffaa:	mov    edx,DWORD PTR [esp+0x1c]
6400ffae:	mov    ecx,DWORD PTR [esp+0x28]
6400ffb2:	mov    DWORD PTR [eax+0x10],edx
6400ffb5:	mov    edx,DWORD PTR [esp+0x2c]
6400ffb9:	mov    DWORD PTR [eax+0xc],ecx
6400ffbc:	mov    ecx,DWORD PTR [esp+0x10]
6400ffc0:	push   edx
6400ffc1:	mov    DWORD PTR [eax],ebp
6400ffc3:	mov    DWORD PTR [eax+0x4],ecx
6400ffc6:	push   eax
6400ffc7:	mov    DWORD PTR [edi+0x38],ebx
6400ffca:	mov    DWORD PTR [edi+0x3c],esi
6400ffcd:	call   0x64012560
6400ffd2:	mov    eax,DWORD PTR [esp+0x48]
6400ffd6:	mov    edx,DWORD PTR [eax+0x10]
6400ffd9:	mov    ecx,DWORD PTR [eax+0xc]
6400ffdc:	mov    ebp,DWORD PTR [eax]
6400ffde:	mov    eax,DWORD PTR [eax+0x4]
6400ffe1:	mov    ebx,DWORD PTR [edi+0x38]
6400ffe4:	mov    esi,DWORD PTR [edi+0x3c]
6400ffe7:	mov    DWORD PTR [esp+0x24],edx
6400ffeb:	add    esp,0x8
6400ffee:	mov    DWORD PTR [esp+0x28],ecx
6400fff2:	mov    DWORD PTR [esp+0x10],eax
6400fff6:	mov    DWORD PTR [esp+0x18],ebx
6400fffa:	mov    edx,eax
6400fffc:	jmp    0x640105de
64010001:	mov    ecx,DWORD PTR [edi+0x54]
64010004:	mov    eax,0x1
64010009:	shl    eax,cl
6401000b:	sub    eax,0x1
6401000e:	and    eax,ebx
64010010:	mov    ecx,eax
64010012:	mov    eax,DWORD PTR [edi+0x4c]
64010015:	mov    eax,DWORD PTR [eax+ecx*4]
64010018:	mov    ecx,eax
6401001a:	shr    ecx,0x8
6401001d:	movzx  ecx,cl
64010020:	cmp    ecx,esi
64010022:	mov    DWORD PTR [esp+0x14],eax
64010026:	jbe    0x6401006c
64010028:	test   edx,edx
6401002a:	je     0x6401063c
64010030:	movzx  eax,BYTE PTR [ebp+0x0]
64010034:	mov    ecx,esi
64010036:	shl    eax,cl
64010038:	mov    ecx,DWORD PTR [edi+0x54]
6401003b:	sub    edx,0x1
6401003e:	add    esi,0x8
64010041:	add    ebx,eax
64010043:	mov    eax,0x1
64010048:	shl    eax,cl
6401004a:	mov    ecx,DWORD PTR [edi+0x4c]
6401004d:	add    ebp,0x1
64010050:	mov    DWORD PTR [esp+0x10],edx
64010054:	sub    eax,0x1
64010057:	and    eax,ebx
64010059:	mov    eax,DWORD PTR [ecx+eax*4]
6401005c:	mov    ecx,eax
6401005e:	shr    ecx,0x8
64010061:	movzx  ecx,cl
64010064:	cmp    ecx,esi
64010066:	mov    DWORD PTR [esp+0x14],eax
6401006a:	ja     0x64010028
6401006c:	test   al,al
6401006e:	je     0x6401013d
64010074:	test   al,0xf0
64010076:	jne    0x6401013d
6401007c:	mov    ecx,eax
6401007e:	shr    ecx,0x8
64010081:	mov    DWORD PTR [esp+0x34],ecx
64010085:	movzx  ecx,cl
64010088:	mov    DWORD PTR [esp+0x24],ecx
6401008c:	movzx  ecx,al
6401008f:	add    ecx,DWORD PTR [esp+0x24]
64010093:	mov    DWORD PTR [esp+0x18],eax
64010097:	mov    eax,0x1
6401009c:	shl    eax,cl
6401009e:	mov    ecx,DWORD PTR [esp+0x24]
640100a2:	sub    eax,0x1
640100a5:	and    eax,ebx
640100a7:	shr    eax,cl
640100a9:	mov    ecx,DWORD PTR [esp+0x14]
640100ad:	shr    ecx,0x10
640100b0:	add    eax,ecx
640100b2:	mov    ecx,eax
640100b4:	mov    eax,DWORD PTR [edi+0x4c]
640100b7:	mov    eax,DWORD PTR [eax+ecx*4]
640100ba:	movzx  ecx,BYTE PTR [esp+0x34]
640100bf:	mov    DWORD PTR [esp+0x14],eax
640100c3:	shr    eax,0x8
640100c6:	movzx  eax,al
640100c9:	add    eax,ecx
640100cb:	cmp    eax,esi
640100cd:	jbe    0x64010130
640100d3:	test   edx,edx
640100d5:	je     0x6401063c
640100db:	movzx  eax,BYTE PTR [ebp+0x0]
640100df:	mov    ecx,esi
640100e1:	shl    eax,cl
640100e3:	mov    ecx,DWORD PTR [esp+0x18]
640100e7:	sub    edx,0x1
640100ea:	add    esi,0x8
640100ed:	add    ebx,eax
640100ef:	movzx  eax,ch
640100f2:	add    ecx,eax
640100f4:	mov    DWORD PTR [esp+0x24],eax
640100f8:	mov    eax,0x1
640100fd:	shl    eax,cl
640100ff:	mov    ecx,DWORD PTR [esp+0x24]
64010103:	add    ebp,0x1
64010106:	mov    DWORD PTR [esp+0x10],edx
6401010a:	sub    eax,0x1
6401010d:	and    eax,ebx
6401010f:	shr    eax,cl
64010111:	movzx  ecx,WORD PTR [esp+0x1a]
64010116:	add    eax,ecx
64010118:	mov    ecx,DWORD PTR [edi+0x4c]
6401011b:	mov    eax,DWORD PTR [ecx+eax*4]
6401011e:	mov    DWORD PTR [esp+0x14],eax
64010122:	shr    eax,0x8
64010125:	movzx  eax,al
64010128:	add    eax,DWORD PTR [esp+0x24]
6401012c:	cmp    eax,esi
6401012e:	ja     0x640100d3
64010130:	movzx  ecx,BYTE PTR [esp+0x19]
64010135:	mov    eax,DWORD PTR [esp+0x14]
64010139:	shr    ebx,cl
6401013b:	sub    esi,ecx
6401013d:	mov    ecx,eax
6401013f:	shr    ecx,0x8
64010142:	movzx  ecx,cl
64010145:	shr    ebx,cl
64010147:	sub    esi,ecx
64010149:	mov    DWORD PTR [esp+0x24],ecx
6401014d:	mov    ecx,eax
6401014f:	shr    ecx,0x10
64010152:	test   al,al
64010154:	mov    DWORD PTR [esp+0x18],ebx
64010158:	mov    DWORD PTR [edi+0x40],ecx
6401015b:	jne    0x64010168
6401015d:	mov    DWORD PTR [edi],0x17
64010163:	jmp    0x640105de
64010168:	test   al,0x20
6401016a:	je     0x64010177
6401016c:	mov    DWORD PTR [edi],0xb
64010172:	jmp    0x640105de
64010177:	test   al,0x40
64010179:	je     0x6401018b
6401017b:	mov    eax,DWORD PTR [esp+0x40]
6401017f:	mov    DWORD PTR [eax+0x18],0x6403d218
64010186:	jmp    0x640105d8
6401018b:	and    eax,0xf
6401018e:	mov    DWORD PTR [edi+0x48],eax
64010191:	mov    DWORD PTR [edi],0x13
64010197:	mov    eax,DWORD PTR [edi+0x48]
6401019a:	test   eax,eax
6401019c:	je     0x640101dc
6401019e:	cmp    esi,eax
640101a0:	jae    0x640101c6
640101a2:	test   edx,edx
640101a4:	je     0x6401063c
640101aa:	movzx  eax,BYTE PTR [ebp+0x0]
640101ae:	mov    ecx,esi
640101b0:	shl    eax,cl
640101b2:	sub    edx,0x1
640101b5:	add    esi,0x8
640101b8:	add    ebp,0x1
640101bb:	add    ebx,eax
640101bd:	cmp    esi,DWORD PTR [edi+0x48]
640101c0:	mov    DWORD PTR [esp+0x10],edx
640101c4:	jb     0x640101a2
640101c6:	mov    ecx,DWORD PTR [edi+0x48]
640101c9:	mov    eax,0x1
640101ce:	shl    eax,cl
640101d0:	sub    eax,0x1
640101d3:	and    eax,ebx
640101d5:	add    DWORD PTR [edi+0x40],eax
640101d8:	shr    ebx,cl
640101da:	sub    esi,ecx
640101dc:	mov    DWORD PTR [edi],0x14
640101e2:	mov    ecx,DWORD PTR [edi+0x58]
640101e5:	mov    eax,0x1
640101ea:	shl    eax,cl
640101ec:	sub    eax,0x1
640101ef:	and    eax,ebx
640101f1:	mov    ecx,eax
640101f3:	mov    eax,DWORD PTR [edi+0x50]
640101f6:	mov    eax,DWORD PTR [eax+ecx*4]
640101f9:	mov    ecx,eax
640101fb:	shr    ecx,0x8
640101fe:	movzx  ecx,cl
64010201:	cmp    ecx,esi
64010203:	mov    DWORD PTR [esp+0x14],eax
64010207:	jbe    0x64010254
64010209:	lea    esp,[esp+0x0]
64010210:	test   edx,edx
64010212:	je     0x6401063c
64010218:	movzx  eax,BYTE PTR [ebp+0x0]
6401021c:	mov    ecx,esi
6401021e:	shl    eax,cl
64010220:	mov    ecx,DWORD PTR [edi+0x58]
64010223:	sub    edx,0x1
64010226:	add    esi,0x8
64010229:	add    ebx,eax
6401022b:	mov    eax,0x1
64010230:	shl    eax,cl
64010232:	mov    ecx,DWORD PTR [edi+0x50]
64010235:	add    ebp,0x1
64010238:	mov    DWORD PTR [esp+0x10],edx
6401023c:	sub    eax,0x1
6401023f:	and    eax,ebx
64010241:	mov    eax,DWORD PTR [ecx+eax*4]
64010244:	mov    ecx,eax
64010246:	shr    ecx,0x8
64010249:	movzx  ecx,cl
6401024c:	cmp    ecx,esi
6401024e:	mov    DWORD PTR [esp+0x14],eax
64010252:	ja     0x64010210
64010254:	test   al,0xf0
64010256:	jne    0x6401031d
6401025c:	mov    ecx,eax
6401025e:	shr    ecx,0x8
64010261:	mov    DWORD PTR [esp+0x34],ecx
64010265:	movzx  ecx,cl
64010268:	mov    DWORD PTR [esp+0x24],ecx
6401026c:	movzx  ecx,al
6401026f:	add    ecx,DWORD PTR [esp+0x24]
64010273:	mov    DWORD PTR [esp+0x18],eax
64010277:	mov    eax,0x1
6401027c:	shl    eax,cl
6401027e:	mov    ecx,DWORD PTR [esp+0x24]
64010282:	sub    eax,0x1
64010285:	and    eax,ebx
64010287:	shr    eax,cl
64010289:	mov    ecx,DWORD PTR [esp+0x14]
6401028d:	shr    ecx,0x10
64010290:	add    eax,ecx
64010292:	mov    ecx,eax
64010294:	mov    eax,DWORD PTR [edi+0x50]
64010297:	mov    eax,DWORD PTR [eax+ecx*4]
6401029a:	movzx  ecx,BYTE PTR [esp+0x34]
6401029f:	mov    DWORD PTR [esp+0x14],eax
640102a3:	shr    eax,0x8
640102a6:	movzx  eax,al
640102a9:	add    eax,ecx
640102ab:	cmp    eax,esi
640102ad:	jbe    0x64010310
640102b3:	test   edx,edx
640102b5:	je     0x6401063c
640102bb:	movzx  eax,BYTE PTR [ebp+0x0]
640102bf:	mov    ecx,esi
640102c1:	shl    eax,cl
640102c3:	mov    ecx,DWORD PTR [esp+0x18]
640102c7:	sub    edx,0x1
640102ca:	add    esi,0x8
640102cd:	add    ebx,eax
640102cf:	movzx  eax,ch
640102d2:	add    ecx,eax
640102d4:	mov    DWORD PTR [esp+0x24],eax
640102d8:	mov    eax,0x1
640102dd:	shl    eax,cl
640102df:	mov    ecx,DWORD PTR [esp+0x24]
640102e3:	add    ebp,0x1
640102e6:	mov    DWORD PTR [esp+0x10],edx
640102ea:	sub    eax,0x1
640102ed:	and    eax,ebx
640102ef:	shr    eax,cl
640102f1:	movzx  ecx,WORD PTR [esp+0x1a]
640102f6:	add    eax,ecx
640102f8:	mov    ecx,DWORD PTR [edi+0x50]
640102fb:	mov    eax,DWORD PTR [ecx+eax*4]
640102fe:	mov    DWORD PTR [esp+0x14],eax
64010302:	shr    eax,0x8
64010305:	movzx  eax,al
64010308:	add    eax,DWORD PTR [esp+0x24]
6401030c:	cmp    eax,esi
6401030e:	ja     0x640102b3
64010310:	movzx  ecx,BYTE PTR [esp+0x19]
64010315:	mov    eax,DWORD PTR [esp+0x14]
64010319:	shr    ebx,cl
6401031b:	sub    esi,ecx
6401031d:	mov    ecx,eax
6401031f:	shr    ecx,0x8
64010322:	movzx  ecx,cl
64010325:	shr    ebx,cl
64010327:	sub    esi,ecx
64010329:	test   al,0x40
6401032b:	mov    DWORD PTR [esp+0x24],ecx
6401032f:	mov    DWORD PTR [esp+0x18],ebx
64010333:	je     0x64010345
64010335:	mov    eax,DWORD PTR [esp+0x40]
64010339:	mov    DWORD PTR [eax+0x18],0x6403d200
64010340:	jmp    0x640105d8
64010345:	mov    ecx,eax
64010347:	shr    ecx,0x10
6401034a:	and    eax,0xf
6401034d:	mov    DWORD PTR [edi+0x44],ecx
64010350:	mov    DWORD PTR [edi+0x48],eax
64010353:	mov    DWORD PTR [edi],0x15
64010359:	mov    eax,DWORD PTR [edi+0x48]
6401035c:	test   eax,eax
6401035e:	je     0x640103a2
64010360:	cmp    esi,eax
64010362:	jae    0x64010388
64010364:	test   edx,edx
64010366:	je     0x6401063c
6401036c:	movzx  eax,BYTE PTR [ebp+0x0]
64010370:	mov    ecx,esi
64010372:	shl    eax,cl
64010374:	sub    edx,0x1
64010377:	add    esi,0x8
6401037a:	add    ebp,0x1
6401037d:	add    ebx,eax
6401037f:	cmp    esi,DWORD PTR [edi+0x48]
64010382:	mov    DWORD PTR [esp+0x10],edx
64010386:	jb     0x64010364
64010388:	mov    ecx,DWORD PTR [edi+0x48]
6401038b:	mov    eax,0x1
64010390:	shl    eax,cl
64010392:	sub    eax,0x1
64010395:	and    eax,ebx
64010397:	add    DWORD PTR [edi+0x44],eax
6401039a:	shr    ebx,cl
6401039c:	sub    esi,ecx
6401039e:	mov    DWORD PTR [esp+0x18],ebx
640103a2:	mov    ecx,DWORD PTR [edi+0x2c]
640103a5:	sub    ecx,DWORD PTR [esp+0x1c]
640103a9:	add    ecx,DWORD PTR [esp+0x2c]
640103ad:	cmp    DWORD PTR [edi+0x44],ecx
640103b0:	jbe    0x640103c2
640103b2:	mov    eax,DWORD PTR [esp+0x40]
640103b6:	mov    DWORD PTR [eax+0x18],0x6403d1e0
640103bd:	jmp    0x640105d8
640103c2:	mov    DWORD PTR [edi],0x16
640103c8:	cmp    DWORD PTR [esp+0x1c],0x0
640103cd:	je     0x6401063c
640103d3:	mov    ecx,DWORD PTR [esp+0x2c]
640103d7:	sub    ecx,DWORD PTR [esp+0x1c]
640103db:	mov    eax,DWORD PTR [edi+0x44]
640103de:	cmp    eax,ecx
640103e0:	jbe    0x6401041e
640103e2:	sub    eax,ecx
640103e4:	mov    ecx,DWORD PTR [edi+0x30]
640103e7:	cmp    eax,ecx
640103e9:	mov    DWORD PTR [esp+0x14],eax
640103ed:	jbe    0x640103ff
640103ef:	sub    eax,ecx
640103f1:	mov    ecx,DWORD PTR [edi+0x34]
640103f4:	add    ecx,DWORD PTR [edi+0x28]
640103f7:	mov    DWORD PTR [esp+0x14],eax
640103fb:	sub    ecx,eax
640103fd:	jmp    0x6401040b
640103ff:	mov    ecx,DWORD PTR [edi+0x34]
64010402:	sub    ecx,eax
64010404:	add    ecx,DWORD PTR [edi+0x30]
64010407:	mov    eax,DWORD PTR [esp+0x14]
6401040b:	mov    DWORD PTR [esp+0x24],ecx
6401040f:	mov    ecx,DWORD PTR [edi+0x40]
64010412:	cmp    eax,ecx
64010414:	mov    DWORD PTR [esp+0x34],ecx
64010418:	jbe    0x64010433
6401041a:	mov    eax,ecx
6401041c:	jmp    0x6401042f
6401041e:	mov    ecx,DWORD PTR [esp+0x28]
64010422:	sub    ecx,eax
64010424:	mov    eax,DWORD PTR [edi+0x40]
64010427:	mov    DWORD PTR [esp+0x24],ecx
6401042b:	mov    DWORD PTR [esp+0x34],eax
6401042f:	mov    DWORD PTR [esp+0x14],eax
64010433:	mov    ecx,DWORD PTR [esp+0x1c]
64010437:	cmp    eax,ecx
64010439:	jbe    0x64010441
6401043b:	mov    eax,ecx
6401043d:	mov    DWORD PTR [esp+0x14],eax
64010441:	sub    ecx,eax
64010443:	mov    DWORD PTR [esp+0x1c],ecx
64010447:	mov    ecx,DWORD PTR [esp+0x34]
6401044b:	sub    ecx,eax
6401044d:	mov    eax,DWORD PTR [esp+0x28]
64010451:	mov    DWORD PTR [edi+0x40],ecx
64010454:	mov    ecx,DWORD PTR [esp+0x24]
64010458:	mov    cl,BYTE PTR [ecx]
6401045a:	add    DWORD PTR [esp+0x24],0x1
6401045f:	mov    BYTE PTR [eax],cl
64010461:	add    eax,0x1
64010464:	sub    DWORD PTR [esp+0x14],0x1
64010469:	jne    0x64010454
6401046b:	cmp    DWORD PTR [edi+0x40],0x0
6401046f:	mov    DWORD PTR [esp+0x28],eax
64010473:	jne    0x640105de
64010479:	mov    DWORD PTR [edi],0x12
6401047f:	jmp    0x640105de
64010484:	cmp    DWORD PTR [esp+0x1c],0x0
64010489:	je     0x6401063c
6401048f:	mov    eax,DWORD PTR [esp+0x28]
64010493:	mov    cl,BYTE PTR [edi+0x40]
64010496:	mov    BYTE PTR [eax],cl
64010498:	add    eax,0x1
6401049b:	sub    DWORD PTR [esp+0x1c],0x1
640104a0:	mov    DWORD PTR [esp+0x28],eax
640104a4:	mov    DWORD PTR [edi],0x12
640104aa:	jmp    0x640105de
640104af:	cmp    DWORD PTR [edi+0x8],0x0
640104b3:	je     0x6401057c
640104b9:	cmp    esi,0x20
640104bc:	jae    0x640104e8
640104be:	mov    edi,edi
640104c0:	test   edx,edx
640104c2:	je     0x6401063c
640104c8:	movzx  eax,BYTE PTR [ebp+0x0]
640104cc:	mov    ecx,esi
640104ce:	shl    eax,cl
640104d0:	sub    edx,0x1
640104d3:	add    esi,0x8
640104d6:	add    ebp,0x1
640104d9:	add    ebx,eax
640104db:	cmp    esi,0x20
640104de:	mov    DWORD PTR [esp+0x10],edx
640104e2:	mov    DWORD PTR [esp+0x18],ebx
640104e6:	jb     0x640104c0
640104e8:	mov    eax,DWORD PTR [esp+0x2c]
640104ec:	sub    eax,DWORD PTR [esp+0x1c]
640104f0:	mov    ecx,DWORD PTR [esp+0x40]
640104f4:	add    DWORD PTR [ecx+0x14],eax
640104f7:	add    DWORD PTR [edi+0x1c],eax
640104fa:	test   eax,eax
640104fc:	mov    DWORD PTR [esp+0x2c],eax
64010500:	je     0x64010531
64010502:	mov    ecx,DWORD PTR [esp+0x28]
64010506:	mov    edx,DWORD PTR [edi+0x18]
64010509:	push   eax
6401050a:	sub    ecx,eax
6401050c:	cmp    DWORD PTR [edi+0x10],0x0
64010510:	push   ecx
64010511:	push   edx
64010512:	je     0x6401051b
64010514:	call   0x64012510
64010519:	jmp    0x64010520
6401051b:	call   0x64010820
64010520:	mov    ecx,DWORD PTR [esp+0x4c]
64010524:	mov    edx,DWORD PTR [esp+0x1c]
64010528:	mov    DWORD PTR [edi+0x18],eax
6401052b:	add    esp,0xc
6401052e:	mov    DWORD PTR [ecx+0x30],eax
64010531:	cmp    DWORD PTR [edi+0x10],0x0
64010535:	mov    eax,DWORD PTR [esp+0x1c]
64010539:	mov    DWORD PTR [esp+0x2c],eax
6401053d:	mov    eax,ebx
6401053f:	jne    0x6401055f
64010541:	and    eax,0xff00
64010546:	mov    ecx,ebx
64010548:	shl    ecx,0x10
6401054b:	add    eax,ecx
6401054d:	xor    ecx,ecx
6401054f:	mov    ch,BYTE PTR [esp+0x1a]
64010553:	shl    eax,0x8
64010556:	add    eax,ecx
64010558:	mov    ecx,ebx
6401055a:	shr    ecx,0x18
6401055d:	add    eax,ecx
6401055f:	cmp    eax,DWORD PTR [edi+0x18]
64010562:	je     0x64010574
64010564:	mov    eax,DWORD PTR [esp+0x40]
64010568:	mov    DWORD PTR [eax+0x18],0x6403d1c8
6401056f:	jmp    0x640105d8
64010574:	xor    ebx,ebx
64010576:	mov    DWORD PTR [esp+0x18],ebx
6401057a:	xor    esi,esi
6401057c:	mov    DWORD PTR [edi],0x19
64010582:	cmp    DWORD PTR [edi+0x8],0x0
64010586:	je     0x64010624
6401058c:	cmp    DWORD PTR [edi+0x10],0x0
64010590:	je     0x64010624
64010596:	cmp    esi,0x20
64010599:	jae    0x640105c8
6401059b:	jmp    0x640105a0
6401059d:	lea    ecx,[ecx+0x0]
640105a0:	test   edx,edx
640105a2:	je     0x6401063c
640105a8:	movzx  eax,BYTE PTR [ebp+0x0]
640105ac:	mov    ecx,esi
640105ae:	shl    eax,cl
640105b0:	sub    edx,0x1
640105b3:	add    esi,0x8
640105b6:	add    ebp,0x1
640105b9:	add    ebx,eax
640105bb:	cmp    esi,0x20
640105be:	mov    DWORD PTR [esp+0x10],edx
640105c2:	mov    DWORD PTR [esp+0x18],ebx
640105c6:	jb     0x640105a0
640105c8:	cmp    ebx,DWORD PTR [edi+0x1c]
640105cb:	je     0x64010620
640105cd:	mov    ecx,DWORD PTR [esp+0x40]
640105d1:	mov    DWORD PTR [ecx+0x18],0x6403d1b0
640105d8:	mov    DWORD PTR [edi],0x1b
640105de:	mov    eax,DWORD PTR [edi]
640105e0:	cmp    eax,0x1c
640105e3:	jbe    0x6400f260
640105e9:	mov    eax,0xfffffffe
640105ee:	pop    esi
640105ef:	pop    ebp
640105f0:	pop    ebx
640105f1:	pop    edi
640105f2:	add    esp,0x2c
640105f5:	ret    
640105f6:	mov    eax,DWORD PTR [esp+0x40]
640105fa:	mov    ecx,DWORD PTR [esp+0x28]
640105fe:	mov    DWORD PTR [eax+0xc],ecx
64010601:	mov    ecx,DWORD PTR [esp+0x1c]
64010605:	mov    DWORD PTR [eax],ebp
64010607:	mov    DWORD PTR [eax+0x10],ecx
6401060a:	mov    DWORD PTR [eax+0x4],edx
6401060d:	mov    DWORD PTR [edi+0x3c],esi
64010610:	pop    esi
64010611:	pop    ebp
64010612:	mov    DWORD PTR [edi+0x38],ebx
64010615:	pop    ebx
64010616:	mov    eax,0x2
6401061b:	pop    edi
6401061c:	add    esp,0x2c
6401061f:	ret    
64010620:	xor    ebx,ebx
64010622:	xor    esi,esi
64010624:	mov    DWORD PTR [edi],0x1a
6401062a:	mov    DWORD PTR [esp+0x30],0x1
64010632:	jmp    0x6401063c
64010634:	mov    DWORD PTR [esp+0x30],0xfffffffd
6401063c:	mov    eax,DWORD PTR [esp+0x40]
64010640:	mov    ecx,DWORD PTR [esp+0x28]
64010644:	mov    DWORD PTR [eax+0xc],ecx
64010647:	mov    ecx,DWORD PTR [esp+0x1c]
6401064b:	mov    DWORD PTR [eax+0x10],ecx
6401064e:	mov    DWORD PTR [eax],ebp
64010650:	mov    DWORD PTR [eax+0x4],edx
64010653:	cmp    DWORD PTR [edi+0x28],0x0
64010657:	mov    DWORD PTR [edi+0x38],ebx
6401065a:	mov    DWORD PTR [edi+0x3c],esi
6401065d:	jne    0x6401066d
6401065f:	cmp    DWORD PTR [edi],0x18
64010662:	jge    0x64010691
64010664:	mov    edx,DWORD PTR [esp+0x2c]
64010668:	cmp    edx,DWORD PTR [eax+0x10]
6401066b:	je     0x64010691
6401066d:	mov    eax,DWORD PTR [esp+0x2c]
64010671:	mov    ebx,DWORD PTR [esp+0x40]
64010675:	call   0x6400f0f0
6401067a:	test   eax,eax
6401067c:	je     0x64010691
6401067e:	mov    DWORD PTR [edi],0x1c
64010684:	pop    esi
64010685:	pop    ebp
64010686:	pop    ebx
64010687:	mov    eax,0xfffffffc
6401068c:	pop    edi
6401068d:	add    esp,0x2c
64010690:	ret    
64010691:	mov    esi,DWORD PTR [esp+0x40]
64010695:	mov    ebp,DWORD PTR [esp+0x38]
64010699:	sub    ebp,DWORD PTR [esi+0x4]
6401069c:	mov    ebx,DWORD PTR [esp+0x2c]
640106a0:	sub    ebx,DWORD PTR [esi+0x10]
640106a3:	add    DWORD PTR [esi+0x8],ebp
640106a6:	add    DWORD PTR [esi+0x14],ebx
640106a9:	add    DWORD PTR [edi+0x1c],ebx
640106ac:	cmp    DWORD PTR [edi+0x8],0x0
640106b0:	je     0x640106e6
640106b2:	test   ebx,ebx
640106b4:	je     0x640106e6
640106b6:	cmp    DWORD PTR [edi+0x10],0x0
640106ba:	push   ebx
640106bb:	je     0x640106ce
640106bd:	mov    ecx,DWORD PTR [esi+0xc]
640106c0:	mov    edx,DWORD PTR [edi+0x18]
640106c3:	sub    ecx,ebx
640106c5:	push   ecx
640106c6:	push   edx
640106c7:	call   0x64012510
640106cc:	jmp    0x640106dd
640106ce:	mov    eax,DWORD PTR [esi+0xc]
640106d1:	mov    ecx,DWORD PTR [edi+0x18]
640106d4:	sub    eax,ebx
640106d6:	push   eax
640106d7:	push   ecx
640106d8:	call   0x64010820
640106dd:	mov    DWORD PTR [edi+0x18],eax
640106e0:	add    esp,0xc
640106e3:	mov    DWORD PTR [esi+0x30],eax
640106e6:	mov    edx,DWORD PTR [edi+0x4]
640106e9:	neg    edx
640106eb:	sbb    edx,edx
640106ed:	and    edx,0x40
640106f0:	xor    eax,eax
640106f2:	cmp    DWORD PTR [edi],0xb
640106f5:	setne  al
640106f8:	sub    eax,0x1
640106fb:	and    eax,0x80
64010700:	add    edx,eax
64010702:	add    edx,DWORD PTR [edi+0x3c]
64010705:	test   ebp,ebp
64010707:	mov    DWORD PTR [esi+0x2c],edx
6401070a:	jne    0x64010710
6401070c:	test   ebx,ebx
6401070e:	je     0x64010717
64010710:	cmp    DWORD PTR [esp+0x44],0x4
64010715:	jne    0x64010730
64010717:	mov    eax,DWORD PTR [esp+0x30]
6401071b:	test   eax,eax
6401071d:	jne    0x640105ee
64010723:	pop    esi
64010724:	pop    ebp
64010725:	pop    ebx
64010726:	mov    eax,0xfffffffb
6401072b:	pop    edi
6401072c:	add    esp,0x2c
6401072f:	ret    
64010730:	mov    eax,DWORD PTR [esp+0x30]
64010734:	pop    esi
64010735:	pop    ebp
64010736:	pop    ebx
64010737:	pop    edi
64010738:	add    esp,0x2c
6401073b:	ret    
6401073c:	mov    eax,0xfffffffe
64010741:	pop    edi
64010742:	add    esp,0x2c
64010745:	ret    
64010746:	mov    edi,edi
64010748:	repnz add BYTE PTR [si-0x2b],ah
6401074d:	repz add BYTE PTR [ebx+eax*4-0xc],ah
64010752:	add    BYTE PTR [edx+eax*1-0xb],ah
64010756:	add    BYTE PTR [esp+eax*4-0xb],ah
6401075a:	add    BYTE PTR [edi+ecx*1-0xa],ah
6401075e:	add    BYTE PTR [ebx+ecx*8-0xa],ah
64010762:	add    BYTE PTR [ebx+eax*4-0x9],ah
64010766:	add    BYTE PTR [edx+edi*1-0x8],ah
6401076a:	add    BYTE PTR [esp+edx*8-0x8],ah
6401076e:	add    BYTE PTR [esp+edi*1-0x7],ah
64010772:	add    BYTE PTR [eax+ebp*2-0x7],ah
64010776:	add    BYTE PTR [ebx+esi*2-0x7],ah
6401077a:	add    BYTE PTR [esi+edi*1-0x6],ah
6401077e:	add    BYTE PTR [ebx+ebp*4-0x6],ah
64010782:	add    BYTE PTR [ebx+ecx*1-0x5],ah
64010786:	add    BYTE PTR [ebx+ecx*4-0x5],ah
6401078a:	add    BYTE PTR [edx+eax*4-0x4],ah
6401078e:	add    BYTE PTR [ebx+edx*4-0x1],ah
64010792:	add    BYTE PTR [edi+edx*4+0x1],ah
64010796:	add    DWORD PTR [edx+eiz*8+0x1],esp
6401079a:	add    DWORD PTR [ecx+ebx*2+0x3],esp
6401079e:	add    DWORD PTR [eax+ecx*8+0x3],esp
640107a2:	add    DWORD PTR [esp+eax*4+0x4],esp
640107a6:	add    DWORD PTR [edi+ebp*4+0x4],esp
640107aa:	add    DWORD PTR [edx+eax*4+0x5],esp
640107ae:	add    DWORD PTR [edx+ebp*1+0x6],esp
640107b2:	add    DWORD PTR [esp+esi*1+0x6],esp
640107b6:	add    DWORD PTR [esp+eax*4+0x6],esp
640107ba:	add    DWORD PTR [eax+ebx*8-0x7],esp
640107be:	add    BYTE PTR [ebp+ebp*8-0x7],ah
640107c2:	add    BYTE PTR [ecx+ecx*1-0x6],ah
640107c6:	add    BYTE PTR [esi+ebx*1-0x6],ah
640107ca:	add    BYTE PTR [esp+ecx*8-0x34],ah
640107ce:	int3   
640107cf:	int3   
640107d0:	push   esi
640107d1:	mov    esi,DWORD PTR [esp+0x8]
640107d5:	test   esi,esi
640107d7:	je     0x64010813
640107d9:	mov    eax,DWORD PTR [esi+0x1c]
640107dc:	test   eax,eax
640107de:	je     0x64010813
640107e0:	mov    ecx,DWORD PTR [esi+0x24]
640107e3:	test   ecx,ecx
640107e5:	je     0x64010813
640107e7:	mov    eax,DWORD PTR [eax+0x34]
640107ea:	test   eax,eax
640107ec:	je     0x640107f8
640107ee:	push   eax
640107ef:	mov    eax,DWORD PTR [esi+0x28]
640107f2:	push   eax
640107f3:	call   ecx
640107f5:	add    esp,0x8
640107f8:	mov    ecx,DWORD PTR [esi+0x1c]
640107fb:	mov    edx,DWORD PTR [esi+0x28]
640107fe:	mov    eax,DWORD PTR [esi+0x24]
64010801:	push   ecx
64010802:	push   edx
64010803:	call   eax
64010805:	add    esp,0x8
64010808:	mov    DWORD PTR [esi+0x1c],0x0
6401080f:	xor    eax,eax
64010811:	pop    esi
64010812:	ret    
64010813:	mov    eax,0xfffffffe
64010818:	pop    esi
64010819:	ret    
6401081a:	int3   
6401081b:	int3   
6401081c:	int3   
6401081d:	int3   
6401081e:	int3   
6401081f:	int3   
64010820:	mov    ecx,DWORD PTR [esp+0x4]
64010824:	push   ebx
64010825:	mov    ebx,DWORD PTR [esp+0x10]
64010829:	push   edi
6401082a:	mov    edi,ecx
6401082c:	shr    edi,0x10
6401082f:	and    ecx,0xffff
64010835:	cmp    ebx,0x1
64010838:	jne    0x6401086b
6401083a:	mov    eax,DWORD PTR [esp+0x10]
6401083e:	movzx  edx,BYTE PTR [eax]
64010841:	add    ecx,edx
64010843:	cmp    ecx,0xfff1
64010849:	jb     0x64010851
6401084b:	sub    ecx,0xfff1
64010851:	add    edi,ecx
64010853:	cmp    edi,0xfff1
64010859:	jb     0x64010861
6401085b:	sub    edi,0xfff1
64010861:	mov    eax,edi
64010863:	shl    eax,0x10
64010866:	pop    edi
64010867:	or     eax,ecx
64010869:	pop    ebx
6401086a:	ret    
6401086b:	push   esi
6401086c:	mov    esi,DWORD PTR [esp+0x14]
64010870:	test   esi,esi
64010872:	jne    0x6401087b
64010874:	lea    eax,[esi+0x1]
64010877:	pop    esi
64010878:	pop    edi
64010879:	pop    ebx
6401087a:	ret    
6401087b:	cmp    ebx,0x10
6401087e:	jae    0x640108bf
64010880:	test   ebx,ebx
64010882:	je     0x64010895
64010884:	movzx  eax,BYTE PTR [esi]
64010887:	add    ecx,eax
64010889:	sub    ebx,0x1
6401088c:	add    esi,0x1
6401088f:	add    edi,ecx
64010891:	test   ebx,ebx
64010893:	jne    0x64010884
64010895:	cmp    ecx,0xfff1
6401089b:	jb     0x640108a3
6401089d:	sub    ecx,0xfff1
640108a3:	mov    eax,0x80078071
640108a8:	mul    edi
640108aa:	shr    edx,0xf
640108ad:	mov    eax,edx
640108af:	shl    eax,0x4
640108b2:	sub    eax,edx
640108b4:	add    eax,edi
640108b6:	pop    esi
640108b7:	shl    eax,0x10
640108ba:	pop    edi
640108bb:	or     eax,ecx
640108bd:	pop    ebx
640108be:	ret    
640108bf:	cmp    ebx,0x15b0
640108c5:	jb     0x640109a9
640108cb:	mov    eax,0x5e6ea9af
640108d0:	mul    ebx
640108d2:	push   ebp
640108d3:	mov    ebp,edx
640108d5:	shr    ebp,0xb
640108d8:	jmp    0x640108e0
640108da:	lea    ebx,[ebx+0x0]
640108e0:	sub    ebx,0x15b0
640108e6:	mov    eax,0x15b
640108eb:	jmp    0x640108f0
640108ed:	lea    ecx,[ecx+0x0]
640108f0:	movzx  edx,BYTE PTR [esi]
640108f3:	add    ecx,edx
640108f5:	movzx  edx,BYTE PTR [esi+0x1]
640108f9:	add    edi,ecx
640108fb:	add    ecx,edx
640108fd:	movzx  edx,BYTE PTR [esi+0x2]
64010901:	add    edi,ecx
64010903:	add    ecx,edx
64010905:	movzx  edx,BYTE PTR [esi+0x3]
64010909:	add    edi,ecx
6401090b:	add    ecx,edx
6401090d:	movzx  edx,BYTE PTR [esi+0x4]
64010911:	add    edi,ecx
64010913:	add    ecx,edx
64010915:	movzx  edx,BYTE PTR [esi+0x5]
64010919:	add    edi,ecx
6401091b:	add    ecx,edx
6401091d:	movzx  edx,BYTE PTR [esi+0x6]
64010921:	add    edi,ecx
64010923:	add    ecx,edx
64010925:	movzx  edx,BYTE PTR [esi+0x7]
64010929:	add    edi,ecx
6401092b:	add    ecx,edx
6401092d:	movzx  edx,BYTE PTR [esi+0x8]
64010931:	add    edi,ecx
64010933:	add    ecx,edx
64010935:	movzx  edx,BYTE PTR [esi+0x9]
64010939:	add    edi,ecx
6401093b:	add    ecx,edx
6401093d:	movzx  edx,BYTE PTR [esi+0xa]
64010941:	add    edi,ecx
64010943:	add    ecx,edx
64010945:	movzx  edx,BYTE PTR [esi+0xb]
64010949:	add    edi,ecx
6401094b:	add    ecx,edx
6401094d:	movzx  edx,BYTE PTR [esi+0xc]
64010951:	add    edi,ecx
64010953:	add    ecx,edx
64010955:	movzx  edx,BYTE PTR [esi+0xd]
64010959:	add    edi,ecx
6401095b:	add    ecx,edx
6401095d:	movzx  edx,BYTE PTR [esi+0xe]
64010961:	add    edi,ecx
64010963:	add    ecx,edx
64010965:	movzx  edx,BYTE PTR [esi+0xf]
64010969:	add    edi,ecx
6401096b:	add    ecx,edx
6401096d:	add    edi,ecx
6401096f:	add    esi,0x10
64010972:	sub    eax,0x1
64010975:	jne    0x640108f0
6401097b:	mov    eax,0x80078071
64010980:	mul    ecx
64010982:	shr    edx,0xf
64010985:	imul   edx,edx,0xffff000f
6401098b:	add    ecx,edx
6401098d:	mov    eax,0x80078071
64010992:	mul    edi
64010994:	shr    edx,0xf
64010997:	imul   edx,edx,0xffff000f
6401099d:	add    edi,edx
6401099f:	sub    ebp,0x1
640109a2:	jne    0x640108e0
640109a8:	pop    ebp
640109a9:	test   ebx,ebx
640109ab:	je     0x64010a87
640109b1:	cmp    ebx,0x10
640109b4:	jb     0x64010a4e
640109ba:	mov    eax,ebx
640109bc:	shr    eax,0x4
640109bf:	nop
640109c0:	movzx  edx,BYTE PTR [esi]
640109c3:	add    ecx,edx
640109c5:	movzx  edx,BYTE PTR [esi+0x1]
640109c9:	add    edi,ecx
640109cb:	add    ecx,edx
640109cd:	movzx  edx,BYTE PTR [esi+0x2]
640109d1:	add    edi,ecx
640109d3:	add    ecx,edx
640109d5:	movzx  edx,BYTE PTR [esi+0x3]
640109d9:	add    edi,ecx
640109db:	add    ecx,edx
640109dd:	movzx  edx,BYTE PTR [esi+0x4]
640109e1:	add    edi,ecx
640109e3:	add    ecx,edx
640109e5:	movzx  edx,BYTE PTR [esi+0x5]
640109e9:	add    edi,ecx
640109eb:	add    ecx,edx
640109ed:	movzx  edx,BYTE PTR [esi+0x6]
640109f1:	add    edi,ecx
640109f3:	add    ecx,edx
640109f5:	movzx  edx,BYTE PTR [esi+0x7]
640109f9:	add    edi,ecx
640109fb:	add    ecx,edx
640109fd:	movzx  edx,BYTE PTR [esi+0x8]
64010a01:	add    edi,ecx
64010a03:	add    ecx,edx
64010a05:	movzx  edx,BYTE PTR [esi+0x9]
64010a09:	add    edi,ecx
64010a0b:	add    ecx,edx
64010a0d:	movzx  edx,BYTE PTR [esi+0xa]
64010a11:	add    edi,ecx
64010a13:	add    ecx,edx
64010a15:	movzx  edx,BYTE PTR [esi+0xb]
64010a19:	add    edi,ecx
64010a1b:	add    ecx,edx
64010a1d:	movzx  edx,BYTE PTR [esi+0xc]
64010a21:	add    edi,ecx
64010a23:	add    ecx,edx
64010a25:	movzx  edx,BYTE PTR [esi+0xd]
64010a29:	add    edi,ecx
64010a2b:	add    ecx,edx
64010a2d:	movzx  edx,BYTE PTR [esi+0xe]
64010a31:	add    edi,ecx
64010a33:	add    ecx,edx
64010a35:	movzx  edx,BYTE PTR [esi+0xf]
64010a39:	add    edi,ecx
64010a3b:	add    ecx,edx
64010a3d:	sub    ebx,0x10
64010a40:	add    edi,ecx
64010a42:	add    esi,0x10
64010a45:	sub    eax,0x1
64010a48:	jne    0x640109c0
64010a4e:	test   ebx,ebx
64010a50:	je     0x64010a63
64010a52:	movzx  eax,BYTE PTR [esi]
64010a55:	add    ecx,eax
64010a57:	sub    ebx,0x1
64010a5a:	add    esi,0x1
64010a5d:	add    edi,ecx
64010a5f:	test   ebx,ebx
64010a61:	jne    0x64010a52
64010a63:	mov    eax,0x80078071
64010a68:	mul    ecx
64010a6a:	shr    edx,0xf
64010a6d:	imul   edx,edx,0xffff000f
64010a73:	add    ecx,edx
64010a75:	mov    eax,0x80078071
64010a7a:	mul    edi
64010a7c:	shr    edx,0xf
64010a7f:	imul   edx,edx,0xffff000f
64010a85:	add    edi,edx
64010a87:	mov    eax,edi
64010a89:	pop    esi
64010a8a:	shl    eax,0x10
64010a8d:	pop    edi
64010a8e:	or     eax,ecx
64010a90:	pop    ebx
64010a91:	ret    
64010a92:	int3   
64010a93:	int3   
64010a94:	int3   
64010a95:	int3   
64010a96:	int3   
64010a97:	int3   
64010a98:	int3   
64010a99:	int3   
64010a9a:	int3   
64010a9b:	int3   
64010a9c:	int3   
64010a9d:	int3   
64010a9e:	int3   
64010a9f:	int3   
64010aa0:	push   esi
64010aa1:	lea    eax,[edx+0x94]
64010aa7:	mov    ecx,0x11e
64010aac:	xor    esi,esi
64010aae:	mov    edi,edi
64010ab0:	mov    WORD PTR [eax],si
64010ab3:	add    eax,0x4
64010ab6:	sub    ecx,0x1
64010ab9:	jne    0x64010ab0
64010abb:	lea    eax,[edx+0x988]
64010ac1:	mov    ecx,0x1e
64010ac6:	mov    WORD PTR [eax],si
64010ac9:	add    eax,0x4
64010acc:	sub    ecx,0x1
64010acf:	jne    0x64010ac6
64010ad1:	lea    eax,[edx+0xa7c]
64010ad7:	mov    ecx,0x13
64010adc:	lea    esp,[esp+0x0]
64010ae0:	mov    WORD PTR [eax],si
64010ae3:	add    eax,0x4
64010ae6:	sub    ecx,0x1
64010ae9:	jne    0x64010ae0
64010aeb:	mov    DWORD PTR [edx+0x16ac],esi
64010af1:	mov    DWORD PTR [edx+0x16a8],esi
64010af7:	mov    DWORD PTR [edx+0x16b0],esi
64010afd:	mov    DWORD PTR [edx+0x16a0],esi
64010b03:	mov    WORD PTR [edx+0x494],0x1
64010b0c:	pop    esi
64010b0d:	ret    
64010b0e:	int3   
64010b0f:	int3   
64010b10:	push   ecx
64010b11:	mov    edx,DWORD PTR [eax+0x1450]
64010b17:	push   ebp
64010b18:	push   esi
64010b19:	mov    esi,DWORD PTR [esp+0x10]
64010b1d:	mov    ebp,DWORD PTR [eax+esi*4+0xb5c]
64010b24:	lea    ecx,[esi+esi*1]
64010b27:	cmp    ecx,edx
64010b29:	mov    DWORD PTR [esp+0x8],ebp
64010b2d:	jg     0x64010bcb
64010b33:	push   ebx
64010b34:	jge    0x64010b6a
64010b36:	mov    esi,DWORD PTR [eax+ecx*4+0xb60]
64010b3d:	mov    ebp,DWORD PTR [eax+ecx*4+0xb5c]
64010b44:	movzx  edx,WORD PTR [edi+esi*4]
64010b48:	movzx  ebx,WORD PTR [edi+ebp*4]
64010b4c:	cmp    dx,bx
64010b4f:	jb     0x64010b63
64010b51:	jne    0x64010b66
64010b53:	mov    dl,BYTE PTR [esi+eax*1+0x1458]
64010b5a:	cmp    dl,BYTE PTR [eax+ebp*1+0x1458]
64010b61:	ja     0x64010b66
64010b63:	add    ecx,0x1
64010b66:	mov    ebp,DWORD PTR [esp+0xc]
64010b6a:	mov    esi,DWORD PTR [eax+ecx*4+0xb5c]
64010b71:	movzx  edx,WORD PTR [edi+ebp*4]
64010b75:	movzx  ebx,WORD PTR [edi+esi*4]
64010b79:	cmp    dx,bx
64010b7c:	jb     0x64010bab
64010b7e:	jne    0x64010b90
64010b80:	mov    dl,BYTE PTR [eax+ebp*1+0x1458]
64010b87:	cmp    dl,BYTE PTR [esi+eax*1+0x1458]
64010b8e:	jbe    0x64010bbb
64010b90:	mov    edx,DWORD PTR [esp+0x14]
64010b94:	mov    DWORD PTR [eax+edx*4+0xb5c],esi
64010b9b:	mov    edx,DWORD PTR [eax+0x1450]
64010ba1:	mov    DWORD PTR [esp+0x14],ecx
64010ba5:	add    ecx,ecx
64010ba7:	cmp    ecx,edx
64010ba9:	jle    0x64010b34
64010bab:	mov    ecx,DWORD PTR [esp+0x14]
64010baf:	pop    ebx
64010bb0:	pop    esi
64010bb1:	mov    DWORD PTR [eax+ecx*4+0xb5c],ebp
64010bb8:	pop    ebp
64010bb9:	pop    ecx
64010bba:	ret    
64010bbb:	mov    edx,DWORD PTR [esp+0x14]
64010bbf:	pop    ebx
64010bc0:	pop    esi
64010bc1:	mov    DWORD PTR [eax+edx*4+0xb5c],ebp
64010bc8:	pop    ebp
64010bc9:	pop    ecx
64010bca:	ret    
64010bcb:	mov    DWORD PTR [eax+esi*4+0xb5c],ebp
64010bd2:	pop    esi
64010bd3:	pop    ebp
64010bd4:	pop    ecx
64010bd5:	ret    
64010bd6:	int3   
64010bd7:	int3   
64010bd8:	int3   
64010bd9:	int3   
64010bda:	int3   
64010bdb:	int3   
64010bdc:	int3   
64010bdd:	int3   
64010bde:	int3   
64010bdf:	int3   
64010be0:	sub    esp,0x20
64010be3:	mov    edx,DWORD PTR [ecx+0x4]
64010be6:	push   ebx
64010be7:	mov    ebx,DWORD PTR [ecx]
64010be9:	mov    ecx,DWORD PTR [ecx+0x8]
64010bec:	mov    DWORD PTR [esp+0x18],edx
64010bf0:	mov    edx,DWORD PTR [ecx+0x4]
64010bf3:	push   ebp
64010bf4:	mov    ebp,DWORD PTR [ecx]
64010bf6:	mov    DWORD PTR [esp+0x24],edx
64010bfa:	mov    edx,DWORD PTR [ecx+0x8]
64010bfd:	push   esi
64010bfe:	mov    esi,DWORD PTR [ecx+0x10]
64010c01:	xor    ecx,ecx
64010c03:	mov    DWORD PTR [eax+0xb3c],ecx
64010c09:	mov    DWORD PTR [eax+0xb40],ecx
64010c0f:	mov    DWORD PTR [eax+0xb44],ecx
64010c15:	mov    DWORD PTR [eax+0xb48],ecx
64010c1b:	mov    DWORD PTR [eax+0xb4c],ecx
64010c21:	mov    DWORD PTR [eax+0xb50],ecx
64010c27:	mov    DWORD PTR [eax+0xb54],ecx
64010c2d:	mov    DWORD PTR [eax+0xb58],ecx
64010c33:	mov    DWORD PTR [esp+0x24],edx
64010c37:	mov    edx,DWORD PTR [eax+0x1454]
64010c3d:	mov    edx,DWORD PTR [eax+edx*4+0xb5c]
64010c44:	push   edi
64010c45:	mov    WORD PTR [ebx+edx*4+0x2],cx
64010c4a:	mov    edi,DWORD PTR [eax+0x1454]
64010c50:	add    edi,0x1
64010c53:	cmp    edi,0x23d
64010c59:	mov    DWORD PTR [esp+0x1c],esi
64010c5d:	mov    DWORD PTR [esp+0x18],ecx
64010c61:	jge    0x64010def
64010c67:	lea    ecx,[eax+edi*4+0xb5c]
64010c6e:	mov    DWORD PTR [esp+0x14],ecx
64010c72:	mov    ecx,0x23d
64010c77:	sub    ecx,edi
64010c79:	add    edi,ecx
64010c7b:	mov    DWORD PTR [esp+0x20],ecx
64010c7f:	mov    DWORD PTR [esp+0x10],edi
64010c83:	jmp    0x64010c89
64010c85:	mov    esi,DWORD PTR [esp+0x1c]
64010c89:	mov    edx,DWORD PTR [esp+0x14]
64010c8d:	mov    edx,DWORD PTR [edx]
64010c8f:	movzx  ecx,WORD PTR [ebx+edx*4+0x2]
64010c94:	movzx  ecx,WORD PTR [ebx+ecx*4+0x2]
64010c99:	add    ecx,0x1
64010c9c:	cmp    ecx,esi
64010c9e:	jle    0x64010ca7
64010ca0:	add    DWORD PTR [esp+0x18],0x1
64010ca5:	mov    ecx,esi
64010ca7:	cmp    edx,DWORD PTR [esp+0x24]
64010cab:	mov    WORD PTR [ebx+edx*4+0x2],cx
64010cb0:	jg     0x64010cfa
64010cb2:	mov    edi,DWORD PTR [esp+0x28]
64010cb6:	add    WORD PTR [eax+ecx*2+0xb3c],0x1
64010cbf:	xor    esi,esi
64010cc1:	cmp    edx,edi
64010cc3:	jl     0x64010cd0
64010cc5:	mov    esi,edx
64010cc7:	sub    esi,edi
64010cc9:	mov    edi,DWORD PTR [esp+0x2c]
64010ccd:	mov    esi,DWORD PTR [edi+esi*4]
64010cd0:	movzx  edi,WORD PTR [ebx+edx*4]
64010cd4:	movzx  edi,di
64010cd7:	add    ecx,esi
64010cd9:	imul   ecx,edi
64010cdc:	add    DWORD PTR [eax+0x16a8],ecx
64010ce2:	test   ebp,ebp
64010ce4:	je     0x64010cf6
64010ce6:	movzx  edx,WORD PTR [ebp+edx*4+0x2]
64010ceb:	add    edx,esi
64010ced:	imul   edx,edi
64010cf0:	add    DWORD PTR [eax+0x16ac],edx
64010cf6:	mov    edi,DWORD PTR [esp+0x10]
64010cfa:	add    DWORD PTR [esp+0x14],0x4
64010cff:	sub    DWORD PTR [esp+0x20],0x1
64010d04:	jne    0x64010c85
64010d0a:	mov    ebp,DWORD PTR [esp+0x18]
64010d0e:	test   ebp,ebp
64010d10:	je     0x64010def
64010d16:	mov    ecx,DWORD PTR [esp+0x1c]
64010d1a:	lea    edx,[ecx-0x1]
64010d1d:	mov    DWORD PTR [esp+0x2c],edx
64010d21:	lea    esi,[eax+ecx*2+0xb3c]
64010d28:	jmp    0x64010d30
64010d2a:	lea    ebx,[ebx+0x0]
64010d30:	mov    ecx,DWORD PTR [esp+0x2c]
64010d34:	cmp    WORD PTR [eax+ecx*2+0xb3c],0x0
64010d3d:	lea    edx,[eax+ecx*2+0xb3c]
64010d44:	jne    0x64010d52
64010d46:	sub    edx,0x2
64010d49:	sub    ecx,0x1
64010d4c:	cmp    WORD PTR [edx],0x0
64010d50:	je     0x64010d46
64010d52:	add    WORD PTR [eax+ecx*2+0xb3c],0xffff
64010d5c:	add    WORD PTR [eax+ecx*2+0xb3e],0x2
64010d65:	add    WORD PTR [esi],0xffff
64010d6a:	sub    ebp,0x2
64010d6d:	test   ebp,ebp
64010d6f:	jg     0x64010d30
64010d71:	mov    edx,DWORD PTR [esp+0x1c]
64010d75:	test   edx,edx
64010d77:	je     0x64010def
64010d79:	mov    DWORD PTR [esp+0x20],esi
64010d7d:	lea    ecx,[ecx+0x0]
64010d80:	movzx  esi,WORD PTR [esi]
64010d83:	test   esi,esi
64010d85:	mov    DWORD PTR [esp+0x1c],esi
64010d89:	je     0x64010ddd
64010d8b:	lea    ebp,[eax+edi*4+0xb5c]
64010d92:	mov    ecx,DWORD PTR [ebp-0x4]
64010d95:	sub    DWORD PTR [esp+0x10],0x1
64010d9a:	sub    ebp,0x4
64010d9d:	cmp    ecx,DWORD PTR [esp+0x24]
64010da1:	mov    DWORD PTR [esp+0x2c],ebp
64010da5:	jg     0x64010dd5
64010da7:	movzx  edi,WORD PTR [ebx+ecx*4+0x2]
64010dac:	cmp    edi,edx
64010dae:	lea    esi,[ebx+ecx*4+0x2]
64010db2:	je     0x64010dcc
64010db4:	movzx  ecx,WORD PTR [ebx+ecx*4]
64010db8:	mov    ebp,edx
64010dba:	sub    ebp,edi
64010dbc:	imul   ebp,ecx
64010dbf:	add    DWORD PTR [eax+0x16a8],ebp
64010dc5:	mov    ebp,DWORD PTR [esp+0x2c]
64010dc9:	mov    WORD PTR [esi],dx
64010dcc:	sub    DWORD PTR [esp+0x1c],0x1
64010dd1:	mov    esi,DWORD PTR [esp+0x1c]
64010dd5:	test   esi,esi
64010dd7:	jne    0x64010d92
64010dd9:	mov    edi,DWORD PTR [esp+0x10]
64010ddd:	mov    esi,DWORD PTR [esp+0x20]
64010de1:	sub    edx,0x1
64010de4:	sub    esi,0x2
64010de7:	test   edx,edx
64010de9:	mov    DWORD PTR [esp+0x20],esi
64010ded:	jne    0x64010d80
64010def:	pop    edi
64010df0:	pop    esi
64010df1:	pop    ebp
64010df2:	pop    ebx
64010df3:	add    esp,0x20
64010df6:	ret    
64010df7:	int3   
64010df8:	int3   
64010df9:	int3   
64010dfa:	int3   
64010dfb:	int3   
64010dfc:	int3   
64010dfd:	int3   
64010dfe:	int3   
64010dff:	int3   
64010e00:	sub    esp,0xc
64010e03:	push   ebx
64010e04:	push   ebp
64010e05:	mov    ebp,DWORD PTR [esp+0x18]
64010e09:	push   esi
64010e0a:	push   edi
64010e0b:	movzx  edi,WORD PTR [eax+0x2]
64010e0f:	xor    edx,edx
64010e11:	test   edi,edi
64010e13:	mov    ebx,ecx
64010e15:	mov    DWORD PTR [esp+0x14],0xffffffff
64010e1d:	lea    ecx,[edx+0x7]
64010e20:	lea    esi,[edx+0x4]
64010e23:	jne    0x64010e2d
64010e25:	mov    ecx,0x8a
64010e2a:	lea    esi,[edx+0x3]
64010e2d:	test   ebx,ebx
64010e2f:	mov    WORD PTR [eax+ebx*4+0x6],0xffff
64010e36:	jl     0x64010eda
64010e3c:	add    eax,0x6
64010e3f:	add    ebx,0x1
64010e42:	mov    DWORD PTR [esp+0x18],ebx
64010e46:	mov    DWORD PTR [esp+0x10],eax
64010e4a:	mov    ebx,0x1
64010e4f:	nop
64010e50:	mov    eax,edi
64010e52:	mov    edi,DWORD PTR [esp+0x10]
64010e56:	movzx  edi,WORD PTR [edi]
64010e59:	add    edx,ebx
64010e5b:	cmp    edx,ecx
64010e5d:	jge    0x64010e63
64010e5f:	cmp    eax,edi
64010e61:	je     0x64010ecb
64010e63:	cmp    edx,esi
64010e65:	jge    0x64010e71
64010e67:	add    WORD PTR [ebp+eax*4+0xa7c],dx
64010e6f:	jmp    0x64010ea1
64010e71:	test   eax,eax
64010e73:	je     0x64010e8c
64010e75:	cmp    eax,DWORD PTR [esp+0x14]
64010e79:	je     0x64010e83
64010e7b:	add    WORD PTR [ebp+eax*4+0xa7c],bx
64010e83:	add    WORD PTR [ebp+0xabc],bx
64010e8a:	jmp    0x64010ea1
64010e8c:	cmp    edx,0xa
64010e8f:	jg     0x64010e9a
64010e91:	add    WORD PTR [ebp+0xac0],bx
64010e98:	jmp    0x64010ea1
64010e9a:	add    WORD PTR [ebp+0xac4],bx
64010ea1:	xor    edx,edx
64010ea3:	test   edi,edi
64010ea5:	mov    DWORD PTR [esp+0x14],eax
64010ea9:	jne    0x64010eb5
64010eab:	mov    ecx,0x8a
64010eb0:	lea    esi,[edx+0x3]
64010eb3:	jmp    0x64010ecb
64010eb5:	cmp    eax,edi
64010eb7:	jne    0x64010ec3
64010eb9:	mov    ecx,0x6
64010ebe:	lea    esi,[ecx-0x3]
64010ec1:	jmp    0x64010ecb
64010ec3:	mov    ecx,0x7
64010ec8:	lea    esi,[ecx-0x3]
64010ecb:	add    DWORD PTR [esp+0x10],0x4
64010ed0:	sub    DWORD PTR [esp+0x18],ebx
64010ed4:	jne    0x64010e50
64010eda:	pop    edi
64010edb:	pop    esi
64010edc:	pop    ebp
64010edd:	pop    ebx
64010ede:	add    esp,0xc
64010ee1:	ret    
64010ee2:	int3   
64010ee3:	int3   
64010ee4:	int3   
64010ee5:	int3   
64010ee6:	int3   
64010ee7:	int3   
64010ee8:	int3   
64010ee9:	int3   
64010eea:	int3   
64010eeb:	int3   
64010eec:	int3   
64010eed:	int3   
64010eee:	int3   
64010eef:	int3   
64010ef0:	sub    esp,0x18
64010ef3:	push   ebx
64010ef4:	push   ebp
64010ef5:	movzx  ebp,WORD PTR [edx+0x2]
64010ef9:	push   esi
64010efa:	xor    esi,esi
64010efc:	test   ebp,ebp
64010efe:	push   edi
64010eff:	mov    ebx,ecx
64010f01:	mov    DWORD PTR [esp+0x1c],0xffffffff
64010f09:	mov    DWORD PTR [esp+0x14],ebp
64010f0d:	lea    ecx,[esi+0x7]
64010f10:	lea    edi,[esi+0x4]
64010f13:	jne    0x64010f1d
64010f15:	mov    ecx,0x8a
64010f1a:	lea    edi,[ebp+0x3]
64010f1d:	test   ebx,ebx
64010f1f:	jl     0x640113f3
64010f25:	add    edx,0x6
64010f28:	add    ebx,0x1
64010f2b:	mov    DWORD PTR [esp+0x18],edx
64010f2f:	mov    DWORD PTR [esp+0x20],ebx
64010f33:	mov    ebp,0x1
64010f38:	jmp    0x64010f40
64010f3a:	lea    ebx,[ebx+0x0]
64010f40:	mov    ebx,DWORD PTR [esp+0x18]
64010f44:	movzx  ebx,WORD PTR [ebx]
64010f47:	mov    edx,DWORD PTR [esp+0x14]
64010f4b:	add    esi,ebp
64010f4d:	cmp    esi,ecx
64010f4f:	mov    DWORD PTR [esp+0x24],edx
64010f53:	mov    DWORD PTR [esp+0x14],ebx
64010f57:	mov    DWORD PTR [esp+0x10],esi
64010f5b:	jge    0x64010f65
64010f5d:	cmp    edx,ebx
64010f5f:	je     0x640113e4
64010f65:	cmp    esi,edi
64010f67:	jge    0x6401100f
64010f6d:	lea    ecx,[ecx+0x0]
64010f70:	movzx  edi,WORD PTR [eax+edx*4+0xa7e]
64010f78:	mov    ecx,DWORD PTR [eax+0x16bc]
64010f7e:	mov    ebx,0x10
64010f83:	sub    ebx,edi
64010f85:	cmp    ecx,ebx
64010f87:	jle    0x64010fe4
64010f89:	movzx  esi,WORD PTR [eax+edx*4+0xa7c]
64010f91:	mov    edx,esi
64010f93:	shl    edx,cl
64010f95:	mov    ecx,DWORD PTR [eax+0x8]
64010f98:	or     WORD PTR [eax+0x16b8],dx
64010f9f:	movzx  ebx,BYTE PTR [eax+0x16b8]
64010fa6:	mov    edx,DWORD PTR [eax+0x14]
64010fa9:	mov    BYTE PTR [ecx+edx*1],bl
64010fac:	add    DWORD PTR [eax+0x14],ebp
64010faf:	mov    ecx,DWORD PTR [eax+0x14]
64010fb2:	movzx  ebx,BYTE PTR [eax+0x16b9]
64010fb9:	mov    edx,DWORD PTR [eax+0x8]
64010fbc:	mov    BYTE PTR [ecx+edx*1],bl
64010fbf:	mov    edx,DWORD PTR [eax+0x16bc]
64010fc5:	add    DWORD PTR [eax+0x14],ebp
64010fc8:	mov    cl,0x10
64010fca:	sub    cl,dl
64010fcc:	shr    si,cl
64010fcf:	lea    ecx,[edx+edi*1-0x10]
64010fd3:	mov    edx,DWORD PTR [esp+0x24]
64010fd7:	mov    WORD PTR [eax+0x16b8],si
64010fde:	mov    esi,DWORD PTR [esp+0x10]
64010fe2:	jmp    0x64010ff8
64010fe4:	mov    bx,WORD PTR [eax+edx*4+0xa7c]
64010fec:	shl    bx,cl
64010fef:	or     WORD PTR [eax+0x16b8],bx
64010ff6:	add    ecx,edi
64010ff8:	sub    esi,ebp
64010ffa:	mov    DWORD PTR [eax+0x16bc],ecx
64011000:	mov    DWORD PTR [esp+0x10],esi
64011004:	jne    0x64010f70
6401100a:	jmp    0x640113b6
6401100f:	test   edx,edx
64011011:	je     0x640111bc
64011017:	cmp    edx,DWORD PTR [esp+0x1c]
6401101b:	je     0x640110bd
64011021:	movzx  edi,WORD PTR [eax+edx*4+0xa7e]
64011029:	mov    ecx,DWORD PTR [eax+0x16bc]
6401102f:	mov    ebx,0x10
64011034:	sub    ebx,edi
64011036:	cmp    ecx,ebx
64011038:	mov    DWORD PTR [esp+0x1c],edi
6401103c:	jle    0x64011099
6401103e:	movzx  esi,WORD PTR [eax+edx*4+0xa7c]
64011046:	mov    edi,esi
64011048:	shl    edi,cl
6401104a:	mov    ecx,DWORD PTR [eax+0x8]
6401104d:	or     WORD PTR [eax+0x16b8],di
64011054:	movzx  ebx,BYTE PTR [eax+0x16b8]
6401105b:	mov    edi,DWORD PTR [eax+0x14]
6401105e:	mov    BYTE PTR [ecx+edi*1],bl
64011061:	add    DWORD PTR [eax+0x14],ebp
64011064:	movzx  ebx,BYTE PTR [eax+0x16b9]
6401106b:	mov    ecx,DWORD PTR [eax+0x8]
6401106e:	mov    edi,DWORD PTR [eax+0x14]
64011071:	mov    BYTE PTR [edi+ecx*1],bl
64011074:	mov    ebx,DWORD PTR [eax+0x16bc]
6401107a:	add    DWORD PTR [eax+0x14],ebp
6401107d:	mov    cl,0x10
6401107f:	sub    cl,bl
64011081:	shr    si,cl
64011084:	mov    ecx,DWORD PTR [esp+0x1c]
64011088:	lea    ecx,[ebx+ecx*1-0x10]
6401108c:	mov    WORD PTR [eax+0x16b8],si
64011093:	mov    esi,DWORD PTR [esp+0x10]
64011097:	jmp    0x640110b1
64011099:	mov    di,WORD PTR [eax+edx*4+0xa7c]
640110a1:	shl    di,cl
640110a4:	or     WORD PTR [eax+0x16b8],di
640110ab:	mov    edi,DWORD PTR [esp+0x1c]
640110af:	add    ecx,edi
640110b1:	sub    esi,ebp
640110b3:	mov    DWORD PTR [eax+0x16bc],ecx
640110b9:	mov    DWORD PTR [esp+0x10],esi
640110bd:	movzx  edi,WORD PTR [eax+0xabe]
640110c4:	mov    ecx,DWORD PTR [eax+0x16bc]
640110ca:	mov    ebx,0x10
640110cf:	sub    ebx,edi
640110d1:	cmp    ecx,ebx
640110d3:	mov    DWORD PTR [esp+0x1c],edi
640110d7:	jle    0x64011133
640110d9:	movzx  esi,WORD PTR [eax+0xabc]
640110e0:	mov    edi,esi
640110e2:	shl    edi,cl
640110e4:	mov    ecx,DWORD PTR [eax+0x8]
640110e7:	or     WORD PTR [eax+0x16b8],di
640110ee:	movzx  ebx,BYTE PTR [eax+0x16b8]
640110f5:	mov    edi,DWORD PTR [eax+0x14]
640110f8:	mov    BYTE PTR [ecx+edi*1],bl
640110fb:	add    DWORD PTR [eax+0x14],ebp
640110fe:	movzx  ebx,BYTE PTR [eax+0x16b9]
64011105:	mov    ecx,DWORD PTR [eax+0x8]
64011108:	mov    edi,DWORD PTR [eax+0x14]
6401110b:	mov    BYTE PTR [edi+ecx*1],bl
6401110e:	mov    ebx,DWORD PTR [eax+0x16bc]
64011114:	add    DWORD PTR [eax+0x14],ebp
64011117:	mov    cl,0x10
64011119:	sub    cl,bl
6401111b:	shr    si,cl
6401111e:	mov    ecx,DWORD PTR [esp+0x1c]
64011122:	lea    ecx,[ebx+ecx*1-0x10]
64011126:	mov    WORD PTR [eax+0x16b8],si
6401112d:	mov    esi,DWORD PTR [esp+0x10]
64011131:	jmp    0x6401114a
64011133:	mov    di,WORD PTR [eax+0xabc]
6401113a:	shl    di,cl
6401113d:	or     WORD PTR [eax+0x16b8],di
64011144:	mov    edi,DWORD PTR [esp+0x1c]
64011148:	add    ecx,edi
6401114a:	add    esi,0xfffffffd
6401114d:	cmp    ecx,0xe
64011150:	mov    DWORD PTR [eax+0x16bc],ecx
64011156:	jle    0x640111ab
64011158:	mov    edi,esi
6401115a:	shl    edi,cl
6401115c:	mov    ecx,DWORD PTR [eax+0x8]
6401115f:	or     WORD PTR [eax+0x16b8],di
64011166:	movzx  ebx,BYTE PTR [eax+0x16b8]
6401116d:	mov    edi,DWORD PTR [eax+0x14]
64011170:	mov    BYTE PTR [ecx+edi*1],bl
64011173:	add    DWORD PTR [eax+0x14],ebp
64011176:	movzx  ebx,BYTE PTR [eax+0x16b9]
6401117d:	mov    edi,DWORD PTR [eax+0x14]
64011180:	mov    ecx,DWORD PTR [eax+0x8]
64011183:	mov    BYTE PTR [edi+ecx*1],bl
64011186:	mov    ebx,DWORD PTR [eax+0x16bc]
6401118c:	add    DWORD PTR [eax+0x14],ebp
6401118f:	mov    cl,0x10
64011191:	sub    cl,bl
64011193:	shr    si,cl
64011196:	add    ebx,0xfffffff2
64011199:	mov    DWORD PTR [eax+0x16bc],ebx
6401119f:	mov    WORD PTR [eax+0x16b8],si
640111a6:	jmp    0x640113b6
640111ab:	shl    esi,cl
640111ad:	or     WORD PTR [eax+0x16b8],si
640111b4:	add    ecx,0x2
640111b7:	jmp    0x640113b0
640111bc:	cmp    esi,0xa
640111bf:	mov    ecx,DWORD PTR [eax+0x16bc]
640111c5:	mov    ebx,0x10
640111ca:	jg     0x640112c4
640111d0:	movzx  edi,WORD PTR [eax+0xac2]
640111d7:	sub    ebx,edi
640111d9:	cmp    ecx,ebx
640111db:	mov    DWORD PTR [esp+0x1c],edi
640111df:	jle    0x6401123b
640111e1:	movzx  esi,WORD PTR [eax+0xac0]
640111e8:	mov    edi,esi
640111ea:	shl    edi,cl
640111ec:	mov    ecx,DWORD PTR [eax+0x8]
640111ef:	or     WORD PTR [eax+0x16b8],di
640111f6:	movzx  ebx,BYTE PTR [eax+0x16b8]
640111fd:	mov    edi,DWORD PTR [eax+0x14]
64011200:	mov    BYTE PTR [ecx+edi*1],bl
64011203:	add    DWORD PTR [eax+0x14],ebp
64011206:	movzx  ebx,BYTE PTR [eax+0x16b9]
6401120d:	mov    ecx,DWORD PTR [eax+0x8]
64011210:	mov    edi,DWORD PTR [eax+0x14]
64011213:	mov    BYTE PTR [edi+ecx*1],bl
64011216:	mov    ebx,DWORD PTR [eax+0x16bc]
6401121c:	add    DWORD PTR [eax+0x14],ebp
6401121f:	mov    cl,0x10
64011221:	sub    cl,bl
64011223:	shr    si,cl
64011226:	mov    ecx,DWORD PTR [esp+0x1c]
6401122a:	lea    ecx,[ebx+ecx*1-0x10]
6401122e:	mov    WORD PTR [eax+0x16b8],si
64011235:	mov    esi,DWORD PTR [esp+0x10]
64011239:	jmp    0x64011252
6401123b:	mov    di,WORD PTR [eax+0xac0]
64011242:	shl    di,cl
64011245:	or     WORD PTR [eax+0x16b8],di
6401124c:	mov    edi,DWORD PTR [esp+0x1c]
64011250:	add    ecx,edi
64011252:	add    esi,0xfffffffd
64011255:	cmp    ecx,0xd
64011258:	mov    DWORD PTR [eax+0x16bc],ecx
6401125e:	jle    0x640112b3
64011260:	mov    edi,esi
64011262:	shl    edi,cl
64011264:	mov    ecx,DWORD PTR [eax+0x8]
64011267:	or     WORD PTR [eax+0x16b8],di
6401126e:	movzx  ebx,BYTE PTR [eax+0x16b8]
64011275:	mov    edi,DWORD PTR [eax+0x14]
64011278:	mov    BYTE PTR [ecx+edi*1],bl
6401127b:	add    DWORD PTR [eax+0x14],ebp
6401127e:	movzx  ebx,BYTE PTR [eax+0x16b9]
64011285:	mov    edi,DWORD PTR [eax+0x14]
64011288:	mov    ecx,DWORD PTR [eax+0x8]
6401128b:	mov    BYTE PTR [edi+ecx*1],bl
6401128e:	mov    ebx,DWORD PTR [eax+0x16bc]
64011294:	add    DWORD PTR [eax+0x14],ebp
64011297:	mov    cl,0x10
64011299:	sub    cl,bl
6401129b:	shr    si,cl
6401129e:	add    ebx,0xfffffff3
640112a1:	mov    DWORD PTR [eax+0x16bc],ebx
640112a7:	mov    WORD PTR [eax+0x16b8],si
640112ae:	jmp    0x640113b6
640112b3:	shl    esi,cl
640112b5:	or     WORD PTR [eax+0x16b8],si
640112bc:	add    ecx,0x3
640112bf:	jmp    0x640113b0
640112c4:	movzx  edi,WORD PTR [eax+0xac6]
640112cb:	sub    ebx,edi
640112cd:	cmp    ecx,ebx
640112cf:	mov    DWORD PTR [esp+0x1c],edi
640112d3:	jle    0x6401132f
640112d5:	movzx  esi,WORD PTR [eax+0xac4]
640112dc:	mov    edi,esi
640112de:	shl    edi,cl
640112e0:	mov    ecx,DWORD PTR [eax+0x8]
640112e3:	or     WORD PTR [eax+0x16b8],di
640112ea:	movzx  ebx,BYTE PTR [eax+0x16b8]
640112f1:	mov    edi,DWORD PTR [eax+0x14]
640112f4:	mov    BYTE PTR [ecx+edi*1],bl
640112f7:	add    DWORD PTR [eax+0x14],ebp
640112fa:	movzx  ebx,BYTE PTR [eax+0x16b9]
64011301:	mov    ecx,DWORD PTR [eax+0x8]
64011304:	mov    edi,DWORD PTR [eax+0x14]
64011307:	mov    BYTE PTR [edi+ecx*1],bl
6401130a:	mov    ebx,DWORD PTR [eax+0x16bc]
64011310:	add    DWORD PTR [eax+0x14],ebp
64011313:	mov    cl,0x10
64011315:	sub    cl,bl
64011317:	shr    si,cl
6401131a:	mov    ecx,DWORD PTR [esp+0x1c]
6401131e:	lea    ecx,[ebx+ecx*1-0x10]
64011322:	mov    WORD PTR [eax+0x16b8],si
64011329:	mov    esi,DWORD PTR [esp+0x10]
6401132d:	jmp    0x64011346
6401132f:	mov    di,WORD PTR [eax+0xac4]
64011336:	shl    di,cl
64011339:	or     WORD PTR [eax+0x16b8],di
64011340:	mov    edi,DWORD PTR [esp+0x1c]
64011344:	add    ecx,edi
64011346:	add    esi,0xfffffff5
64011349:	cmp    ecx,0x9
6401134c:	mov    DWORD PTR [eax+0x16bc],ecx
64011352:	jle    0x640113a4
64011354:	mov    edi,esi
64011356:	shl    edi,cl
64011358:	mov    ecx,DWORD PTR [eax+0x8]
6401135b:	or     WORD PTR [eax+0x16b8],di
64011362:	movzx  ebx,BYTE PTR [eax+0x16b8]
64011369:	mov    edi,DWORD PTR [eax+0x14]
6401136c:	mov    BYTE PTR [ecx+edi*1],bl
6401136f:	add    DWORD PTR [eax+0x14],ebp
64011372:	movzx  ebx,BYTE PTR [eax+0x16b9]
64011379:	mov    edi,DWORD PTR [eax+0x14]
6401137c:	mov    ecx,DWORD PTR [eax+0x8]
6401137f:	mov    BYTE PTR [edi+ecx*1],bl
64011382:	mov    ebx,DWORD PTR [eax+0x16bc]
64011388:	add    DWORD PTR [eax+0x14],ebp
6401138b:	mov    cl,0x10
6401138d:	sub    cl,bl
6401138f:	shr    si,cl
64011392:	add    ebx,0xfffffff7
64011395:	mov    DWORD PTR [eax+0x16bc],ebx
6401139b:	mov    WORD PTR [eax+0x16b8],si
640113a2:	jmp    0x640113b6
640113a4:	shl    esi,cl
640113a6:	or     WORD PTR [eax+0x16b8],si
640113ad:	add    ecx,0x7
640113b0:	mov    DWORD PTR [eax+0x16bc],ecx
640113b6:	mov    ecx,DWORD PTR [esp+0x14]
640113ba:	xor    esi,esi
640113bc:	test   ecx,ecx
640113be:	mov    DWORD PTR [esp+0x1c],edx
640113c2:	jne    0x640113ce
640113c4:	mov    ecx,0x8a
640113c9:	lea    edi,[esi+0x3]
640113cc:	jmp    0x640113e4
640113ce:	cmp    edx,ecx
640113d0:	jne    0x640113dc
640113d2:	mov    ecx,0x6
640113d7:	lea    edi,[ecx-0x3]
640113da:	jmp    0x640113e4
640113dc:	mov    ecx,0x7
640113e1:	lea    edi,[ecx-0x3]
640113e4:	add    DWORD PTR [esp+0x18],0x4
640113e9:	sub    DWORD PTR [esp+0x20],ebp
640113ed:	jne    0x64010f40
640113f3:	pop    edi
640113f4:	pop    esi
640113f5:	pop    ebp
640113f6:	pop    ebx
640113f7:	add    esp,0x18
640113fa:	ret    
640113fb:	int3   
640113fc:	int3   
640113fd:	int3   
640113fe:	int3   
640113ff:	int3   
64011400:	push   ecx
64011401:	mov    ecx,DWORD PTR [eax+0x16bc]
64011407:	cmp    ecx,0xb
6401140a:	push   ebx
6401140b:	mov    ebx,DWORD PTR [esp+0x14]
6401140f:	push   ebp
64011410:	push   esi
64011411:	push   edi
64011412:	mov    ebp,0x1
64011417:	jle    0x64011477
64011419:	mov    esi,DWORD PTR [esp+0x18]
6401141d:	add    esi,0xfffffeff
64011423:	mov    edx,esi
64011425:	shl    edx,cl
64011427:	mov    ecx,DWORD PTR [eax+0x14]
6401142a:	or     WORD PTR [eax+0x16b8],dx
64011431:	movzx  ebx,BYTE PTR [eax+0x16b8]
64011438:	mov    edx,DWORD PTR [eax+0x8]
6401143b:	mov    BYTE PTR [ecx+edx*1],bl
6401143e:	add    DWORD PTR [eax+0x14],ebp
64011441:	movzx  ebx,BYTE PTR [eax+0x16b9]
64011448:	mov    ecx,DWORD PTR [eax+0x14]
6401144b:	mov    edx,DWORD PTR [eax+0x8]
6401144e:	mov    BYTE PTR [ecx+edx*1],bl
64011451:	mov    edx,DWORD PTR [eax+0x16bc]
64011457:	add    DWORD PTR [eax+0x14],ebp
6401145a:	mov    ebx,DWORD PTR [esp+0x20]
6401145e:	mov    cl,0x10
64011460:	sub    cl,dl
64011462:	shr    si,cl
64011465:	add    edx,0xfffffff5
64011468:	mov    DWORD PTR [eax+0x16bc],edx
6401146e:	mov    WORD PTR [eax+0x16b8],si
64011475:	jmp    0x64011493
64011477:	mov    edx,DWORD PTR [esp+0x18]
6401147b:	add    edx,0xfffffeff
64011481:	shl    edx,cl
64011483:	or     WORD PTR [eax+0x16b8],dx
6401148a:	add    ecx,0x5
6401148d:	mov    DWORD PTR [eax+0x16bc],ecx
64011493:	mov    ecx,DWORD PTR [eax+0x16bc]
64011499:	cmp    ecx,0xb
6401149c:	jle    0x640114fd
6401149e:	mov    esi,DWORD PTR [esp+0x1c]
640114a2:	add    esi,0xffffffff
640114a5:	mov    edx,esi
640114a7:	shl    edx,cl
640114a9:	mov    ecx,DWORD PTR [eax+0x14]
640114ac:	mov    DWORD PTR [esp+0x10],ebx
640114b0:	or     WORD PTR [eax+0x16b8],dx
640114b7:	movzx  ebx,BYTE PTR [eax+0x16b8]
640114be:	mov    edx,DWORD PTR [eax+0x8]
640114c1:	mov    BYTE PTR [ecx+edx*1],bl
640114c4:	add    DWORD PTR [eax+0x14],ebp
640114c7:	movzx  ebx,BYTE PTR [eax+0x16b9]
640114ce:	mov    ecx,DWORD PTR [eax+0x14]
640114d1:	mov    edx,DWORD PTR [eax+0x8]
640114d4:	mov    BYTE PTR [ecx+edx*1],bl
640114d7:	mov    edx,DWORD PTR [eax+0x16bc]
640114dd:	add    DWORD PTR [eax+0x14],ebp
640114e0:	mov    ebx,DWORD PTR [esp+0x10]
640114e4:	mov    cl,0x10
640114e6:	sub    cl,dl
640114e8:	shr    si,cl
640114eb:	add    edx,0xfffffff5
640114ee:	mov    DWORD PTR [eax+0x16bc],edx
640114f4:	mov    WORD PTR [eax+0x16b8],si
640114fb:	jmp    0x64011516
640114fd:	mov    edx,DWORD PTR [esp+0x1c]
64011501:	add    edx,0xffffffff
64011504:	shl    edx,cl
64011506:	or     WORD PTR [eax+0x16b8],dx
6401150d:	add    ecx,0x5
64011510:	mov    DWORD PTR [eax+0x16bc],ecx
64011516:	mov    ecx,DWORD PTR [eax+0x16bc]
6401151c:	cmp    ecx,0xc
6401151f:	jle    0x6401157c
64011521:	lea    esi,[ebx-0x4]
64011524:	mov    edx,esi
64011526:	shl    edx,cl
64011528:	mov    ecx,DWORD PTR [eax+0x14]
6401152b:	mov    DWORD PTR [esp+0x10],ebx
6401152f:	or     WORD PTR [eax+0x16b8],dx
64011536:	movzx  ebx,BYTE PTR [eax+0x16b8]
6401153d:	mov    edx,DWORD PTR [eax+0x8]
64011540:	mov    BYTE PTR [ecx+edx*1],bl
64011543:	add    DWORD PTR [eax+0x14],ebp
64011546:	movzx  ebx,BYTE PTR [eax+0x16b9]
6401154d:	mov    ecx,DWORD PTR [eax+0x14]
64011550:	mov    edx,DWORD PTR [eax+0x8]
64011553:	mov    BYTE PTR [ecx+edx*1],bl
64011556:	mov    edx,DWORD PTR [eax+0x16bc]
6401155c:	add    DWORD PTR [eax+0x14],ebp
6401155f:	mov    ebx,DWORD PTR [esp+0x10]
64011563:	mov    cl,0x10
64011565:	sub    cl,dl
64011567:	shr    si,cl
6401156a:	add    edx,0xfffffff4
6401156d:	mov    DWORD PTR [eax+0x16bc],edx
64011573:	mov    WORD PTR [eax+0x16b8],si
6401157a:	jmp    0x64011591
6401157c:	lea    edx,[ebx-0x4]
6401157f:	shl    edx,cl
64011581:	or     WORD PTR [eax+0x16b8],dx
64011588:	add    ecx,0x4
6401158b:	mov    DWORD PTR [eax+0x16bc],ecx
64011591:	xor    edi,edi
64011593:	test   ebx,ebx
64011595:	jle    0x64011633
6401159b:	jmp    0x640115a0
6401159d:	lea    ecx,[ecx+0x0]
640115a0:	mov    ecx,DWORD PTR [eax+0x16bc]
640115a6:	cmp    ecx,0xd
640115a9:	movzx  edx,BYTE PTR [edi+0x6403d3e4]
640115b0:	jle    0x6401160e
640115b2:	movzx  esi,WORD PTR [eax+edx*4+0xa7e]
640115ba:	mov    edx,esi
640115bc:	shl    edx,cl
640115be:	mov    ecx,DWORD PTR [eax+0x14]
640115c1:	or     WORD PTR [eax+0x16b8],dx
640115c8:	movzx  ebx,BYTE PTR [eax+0x16b8]
640115cf:	mov    edx,DWORD PTR [eax+0x8]
640115d2:	mov    BYTE PTR [ecx+edx*1],bl
640115d5:	add    DWORD PTR [eax+0x14],ebp
640115d8:	movzx  ebx,BYTE PTR [eax+0x16b9]
640115df:	mov    ecx,DWORD PTR [eax+0x14]
640115e2:	mov    edx,DWORD PTR [eax+0x8]
640115e5:	mov    BYTE PTR [ecx+edx*1],bl
640115e8:	mov    edx,DWORD PTR [eax+0x16bc]
640115ee:	add    DWORD PTR [eax+0x14],ebp
640115f1:	mov    ebx,DWORD PTR [esp+0x20]
640115f5:	mov    cl,0x10
640115f7:	sub    cl,dl
640115f9:	shr    si,cl
640115fc:	add    edx,0xfffffff3
640115ff:	mov    DWORD PTR [eax+0x16bc],edx
64011605:	mov    WORD PTR [eax+0x16b8],si
6401160c:	jmp    0x64011629
6401160e:	mov    dx,WORD PTR [eax+edx*4+0xa7e]
64011616:	shl    dx,cl
64011619:	or     WORD PTR [eax+0x16b8],dx
64011620:	add    ecx,0x3
64011623:	mov    DWORD PTR [eax+0x16bc],ecx
64011629:	add    edi,ebp
6401162b:	cmp    edi,ebx
6401162d:	jl     0x640115a0
64011633:	mov    ecx,DWORD PTR [esp+0x18]
64011637:	add    ecx,0xffffffff
6401163a:	lea    edx,[eax+0x94]
64011640:	call   0x64010ef0
64011645:	mov    ecx,DWORD PTR [esp+0x1c]
64011649:	pop    edi
6401164a:	pop    esi
6401164b:	pop    ebp
6401164c:	add    ecx,0xffffffff
6401164f:	lea    edx,[eax+0x988]
64011655:	pop    ebx
64011656:	add    esp,0x4
64011659:	jmp    0x64010ef0
6401165e:	int3   
6401165f:	int3   
64011660:	sub    esp,0xc
64011663:	push   ebx
64011664:	mov    ebx,DWORD PTR [esp+0x14]
64011668:	push   ebp
64011669:	xor    ecx,ecx
6401166b:	cmp    DWORD PTR [eax+0x16a0],ecx
64011671:	push   esi
64011672:	push   edi
64011673:	je     0x640119b2
64011679:	lea    esp,[esp+0x0]
64011680:	mov    edx,DWORD PTR [eax+0x16a4]
64011686:	movzx  ebp,WORD PTR [edx+ecx*2]
6401168a:	mov    edx,DWORD PTR [eax+0x1698]
64011690:	movzx  esi,BYTE PTR [ecx+edx*1]
64011694:	add    ecx,0x1
64011697:	test   ebp,ebp
64011699:	mov    DWORD PTR [esp+0x18],ecx
6401169d:	mov    ecx,DWORD PTR [eax+0x16bc]
640116a3:	jne    0x6401172a
640116a9:	movzx  edi,WORD PTR [ebx+esi*4+0x2]
640116ae:	mov    edx,0x10
640116b3:	sub    edx,edi
640116b5:	cmp    ecx,edx
640116b7:	jle    0x64011715
640116b9:	movzx  esi,WORD PTR [ebx+esi*4]
640116bd:	mov    edx,esi
640116bf:	shl    edx,cl
640116c1:	mov    ecx,DWORD PTR [eax+0x8]
640116c4:	mov    DWORD PTR [esp+0x10],ebx
640116c8:	or     WORD PTR [eax+0x16b8],dx
640116cf:	movzx  ebx,BYTE PTR [eax+0x16b8]
640116d6:	mov    edx,DWORD PTR [eax+0x14]
640116d9:	mov    BYTE PTR [ecx+edx*1],bl
640116dc:	add    DWORD PTR [eax+0x14],0x1
640116e0:	movzx  ebx,BYTE PTR [eax+0x16b9]
640116e7:	mov    ecx,DWORD PTR [eax+0x14]
640116ea:	mov    edx,DWORD PTR [eax+0x8]
640116ed:	mov    BYTE PTR [ecx+edx*1],bl
640116f0:	mov    edx,DWORD PTR [eax+0x16bc]
640116f6:	add    DWORD PTR [eax+0x14],0x1
640116fa:	mov    ebx,DWORD PTR [esp+0x10]
640116fe:	mov    cl,0x10
64011700:	sub    cl,dl
64011702:	shr    si,cl
64011705:	lea    ecx,[edx+edi*1-0x10]
64011709:	mov    WORD PTR [eax+0x16b8],si
64011710:	jmp    0x6401199c
64011715:	mov    dx,WORD PTR [ebx+esi*4]
64011719:	shl    dx,cl
6401171c:	or     WORD PTR [eax+0x16b8],dx
64011723:	add    ecx,edi
64011725:	jmp    0x6401199c
6401172a:	movzx  edx,BYTE PTR [esi+0x6403dbb8]
64011731:	movzx  edi,WORD PTR [ebx+edx*4+0x406]
64011739:	mov    ebx,0x10
6401173e:	sub    ebx,edi
64011740:	cmp    ecx,ebx
64011742:	mov    DWORD PTR [esp+0x10],edi
64011746:	mov    edi,DWORD PTR [esp+0x20]
6401174a:	mov    DWORD PTR [esp+0x14],edx
6401174e:	jle    0x640117b3
64011750:	movzx  edi,WORD PTR [edi+edx*4+0x404]
64011758:	mov    edx,edi
6401175a:	shl    edx,cl
6401175c:	mov    ecx,DWORD PTR [eax+0x8]
6401175f:	or     WORD PTR [eax+0x16b8],dx
64011766:	movzx  ebx,BYTE PTR [eax+0x16b8]
6401176d:	mov    edx,DWORD PTR [eax+0x14]
64011770:	mov    BYTE PTR [ecx+edx*1],bl
64011773:	add    DWORD PTR [eax+0x14],0x1
64011777:	mov    ecx,DWORD PTR [eax+0x14]
6401177a:	movzx  ebx,BYTE PTR [eax+0x16b9]
64011781:	mov    edx,DWORD PTR [eax+0x8]
64011784:	mov    BYTE PTR [ecx+edx*1],bl
64011787:	mov    edx,DWORD PTR [eax+0x16bc]
6401178d:	add    DWORD PTR [eax+0x14],0x1
64011791:	mov    cl,0x10
64011793:	sub    cl,dl
64011795:	shr    di,cl
64011798:	mov    ecx,DWORD PTR [esp+0x10]
6401179c:	lea    edx,[edx+ecx*1-0x10]
640117a0:	mov    DWORD PTR [eax+0x16bc],edx
640117a6:	mov    edx,DWORD PTR [esp+0x14]
640117aa:	mov    WORD PTR [eax+0x16b8],di
640117b1:	jmp    0x640117d1
640117b3:	mov    di,WORD PTR [edi+edx*4+0x404]
640117bb:	shl    di,cl
640117be:	or     WORD PTR [eax+0x16b8],di
640117c5:	mov    edi,DWORD PTR [esp+0x10]
640117c9:	add    ecx,edi
640117cb:	mov    DWORD PTR [eax+0x16bc],ecx
640117d1:	mov    edi,DWORD PTR [edx*4+0x6403d370]
640117d8:	test   edi,edi
640117da:	mov    ebx,DWORD PTR [esp+0x20]
640117de:	je     0x6401185a
640117e0:	sub    esi,DWORD PTR [edx*4+0x6403dcb8]
640117e7:	mov    ecx,DWORD PTR [eax+0x16bc]
640117ed:	mov    edx,0x10
640117f2:	sub    edx,edi
640117f4:	cmp    ecx,edx
640117f6:	jle    0x64011849
640117f8:	mov    edx,esi
640117fa:	shl    edx,cl
640117fc:	mov    ecx,DWORD PTR [eax+0x8]
640117ff:	or     WORD PTR [eax+0x16b8],dx
64011806:	movzx  ebx,BYTE PTR [eax+0x16b8]
6401180d:	mov    edx,DWORD PTR [eax+0x14]
64011810:	mov    BYTE PTR [ecx+edx*1],bl
64011813:	add    DWORD PTR [eax+0x14],0x1
64011817:	movzx  ebx,BYTE PTR [eax+0x16b9]
6401181e:	mov    ecx,DWORD PTR [eax+0x14]
64011821:	mov    edx,DWORD PTR [eax+0x8]
64011824:	mov    BYTE PTR [ecx+edx*1],bl
64011827:	mov    edx,DWORD PTR [eax+0x16bc]
6401182d:	add    DWORD PTR [eax+0x14],0x1
64011831:	mov    ebx,DWORD PTR [esp+0x20]
64011835:	mov    cl,0x10
64011837:	sub    cl,dl
64011839:	shr    si,cl
6401183c:	lea    ecx,[edx+edi*1-0x10]
64011840:	mov    WORD PTR [eax+0x16b8],si
64011847:	jmp    0x64011854
64011849:	shl    esi,cl
6401184b:	or     WORD PTR [eax+0x16b8],si
64011852:	add    ecx,edi
64011854:	mov    DWORD PTR [eax+0x16bc],ecx
6401185a:	sub    ebp,0x1
6401185d:	cmp    ebp,0x100
64011863:	jae    0x6401186e
64011865:	movzx  edi,BYTE PTR [ebp+0x6403d9b8]
6401186c:	jmp    0x6401187a
6401186e:	mov    edx,ebp
64011870:	shr    edx,0x7
64011873:	movzx  edi,BYTE PTR [edx+0x6403dab8]
6401187a:	mov    ecx,DWORD PTR [esp+0x24]
6401187e:	movzx  edx,WORD PTR [ecx+edi*4+0x2]
64011883:	mov    ecx,DWORD PTR [eax+0x16bc]
64011889:	mov    esi,0x10
6401188e:	sub    esi,edx
64011890:	cmp    ecx,esi
64011892:	mov    DWORD PTR [esp+0x14],edx
64011896:	jle    0x640118fb
64011898:	mov    edx,DWORD PTR [esp+0x24]
6401189c:	movzx  esi,WORD PTR [edx+edi*4]
640118a0:	mov    edx,esi
640118a2:	shl    edx,cl
640118a4:	mov    ecx,DWORD PTR [eax+0x8]
640118a7:	or     WORD PTR [eax+0x16b8],dx
640118ae:	movzx  ebx,BYTE PTR [eax+0x16b8]
640118b5:	mov    edx,DWORD PTR [eax+0x14]
640118b8:	mov    BYTE PTR [ecx+edx*1],bl
640118bb:	add    DWORD PTR [eax+0x14],0x1
640118bf:	movzx  ebx,BYTE PTR [eax+0x16b9]
640118c6:	mov    ecx,DWORD PTR [eax+0x14]
640118c9:	mov    edx,DWORD PTR [eax+0x8]
640118cc:	mov    BYTE PTR [ecx+edx*1],bl
640118cf:	mov    edx,DWORD PTR [eax+0x16bc]
640118d5:	add    DWORD PTR [eax+0x14],0x1
640118d9:	mov    ebx,DWORD PTR [esp+0x20]
640118dd:	mov    cl,0x10
640118df:	sub    cl,dl
640118e1:	shr    si,cl
640118e4:	mov    ecx,DWORD PTR [esp+0x14]
640118e8:	lea    edx,[edx+ecx*1-0x10]
640118ec:	mov    DWORD PTR [eax+0x16bc],edx
640118f2:	mov    WORD PTR [eax+0x16b8],si
640118f9:	jmp    0x64011915
640118fb:	mov    esi,DWORD PTR [esp+0x24]
640118ff:	mov    si,WORD PTR [esi+edi*4]
64011903:	shl    si,cl
64011906:	or     WORD PTR [eax+0x16b8],si
6401190d:	add    ecx,edx
6401190f:	mov    DWORD PTR [eax+0x16bc],ecx
64011915:	mov    esi,DWORD PTR [edi*4+0x6403d3f8]
6401191c:	test   esi,esi
6401191e:	je     0x640119a2
64011924:	mov    ecx,DWORD PTR [eax+0x16bc]
6401192a:	sub    ebp,DWORD PTR [edi*4+0x6403dd30]
64011931:	mov    edx,0x10
64011936:	sub    edx,esi
64011938:	cmp    ecx,edx
6401193a:	jle    0x64011991
6401193c:	mov    edx,ebp
6401193e:	shl    edx,cl
64011940:	mov    ecx,DWORD PTR [eax+0x8]
64011943:	mov    DWORD PTR [esp+0x14],ebx
64011947:	or     WORD PTR [eax+0x16b8],dx
6401194e:	movzx  ebx,BYTE PTR [eax+0x16b8]
64011955:	mov    edx,DWORD PTR [eax+0x14]
64011958:	mov    BYTE PTR [ecx+edx*1],bl
6401195b:	add    DWORD PTR [eax+0x14],0x1
6401195f:	movzx  ebx,BYTE PTR [eax+0x16b9]
64011966:	mov    ecx,DWORD PTR [eax+0x14]
64011969:	mov    edx,DWORD PTR [eax+0x8]
6401196c:	mov    BYTE PTR [ecx+edx*1],bl
6401196f:	mov    edx,DWORD PTR [eax+0x16bc]
64011975:	add    DWORD PTR [eax+0x14],0x1
64011979:	mov    ebx,DWORD PTR [esp+0x14]
6401197d:	mov    cl,0x10
6401197f:	sub    cl,dl
64011981:	shr    bp,cl
64011984:	lea    ecx,[edx+esi*1-0x10]
64011988:	mov    WORD PTR [eax+0x16b8],bp
6401198f:	jmp    0x6401199c
64011991:	shl    ebp,cl
64011993:	or     WORD PTR [eax+0x16b8],bp
6401199a:	add    ecx,esi
6401199c:	mov    DWORD PTR [eax+0x16bc],ecx
640119a2:	mov    ecx,DWORD PTR [esp+0x18]
640119a6:	cmp    ecx,DWORD PTR [eax+0x16a0]
640119ac:	jb     0x64011680
640119b2:	movzx  edi,WORD PTR [ebx+0x402]
640119b9:	mov    ecx,DWORD PTR [eax+0x16bc]
640119bf:	mov    edx,0x10
640119c4:	sub    edx,edi
640119c6:	cmp    ecx,edx
640119c8:	jle    0x64011a3d
640119ca:	movzx  esi,WORD PTR [ebx+0x400]
640119d1:	mov    edx,esi
640119d3:	shl    edx,cl
640119d5:	mov    ecx,DWORD PTR [eax+0x8]
640119d8:	mov    DWORD PTR [esp+0x20],ebx
640119dc:	or     WORD PTR [eax+0x16b8],dx
640119e3:	mov    edx,DWORD PTR [eax+0x14]
640119e6:	mov    bl,BYTE PTR [eax+0x16b8]
640119ec:	mov    BYTE PTR [ecx+edx*1],bl
640119ef:	add    DWORD PTR [eax+0x14],0x1
640119f3:	mov    ebp,DWORD PTR [eax+0x14]
640119f6:	mov    ecx,DWORD PTR [eax+0x8]
640119f9:	mov    dl,BYTE PTR [eax+0x16b9]
640119ff:	mov    ebx,DWORD PTR [esp+0x20]
64011a03:	mov    BYTE PTR [ecx+ebp*1],dl
64011a06:	mov    edx,DWORD PTR [eax+0x16bc]
64011a0c:	add    DWORD PTR [eax+0x14],0x1
64011a10:	mov    cl,0x10
64011a12:	sub    cl,dl
64011a14:	shr    si,cl
64011a17:	lea    ecx,[edx+edi*1-0x10]
64011a1b:	pop    edi
64011a1c:	mov    DWORD PTR [eax+0x16bc],ecx
64011a22:	mov    WORD PTR [eax+0x16b8],si
64011a29:	movzx  edx,WORD PTR [ebx+0x402]
64011a30:	pop    esi
64011a31:	pop    ebp
64011a32:	mov    DWORD PTR [eax+0x16b4],edx
64011a38:	pop    ebx
64011a39:	add    esp,0xc
64011a3c:	ret    
64011a3d:	mov    dx,WORD PTR [ebx+0x400]
64011a44:	shl    dx,cl
64011a47:	or     WORD PTR [eax+0x16b8],dx
64011a4e:	add    ecx,edi
64011a50:	pop    edi
64011a51:	mov    DWORD PTR [eax+0x16bc],ecx
64011a57:	movzx  ecx,WORD PTR [ebx+0x402]
64011a5e:	pop    esi
64011a5f:	pop    ebp
64011a60:	mov    DWORD PTR [eax+0x16b4],ecx
64011a66:	pop    ebx
64011a67:	add    esp,0xc
64011a6a:	ret    
64011a6b:	int3   
64011a6c:	int3   
64011a6d:	int3   
64011a6e:	int3   
64011a6f:	int3   
64011a70:	xor    eax,eax
64011a72:	lea    ecx,[edx+0x94]
64011a78:	cmp    WORD PTR [ecx],0x0
64011a7c:	jne    0x64011a89
64011a7e:	add    eax,0x1
64011a81:	add    ecx,0x4
64011a84:	cmp    eax,0x9
64011a87:	jl     0x64011a78
64011a89:	cmp    eax,0x9
64011a8c:	jne    0x64011b2d
64011a92:	mov    eax,0xe
64011a97:	lea    ecx,[edx+0xd0]
64011a9d:	lea    ecx,[ecx+0x0]
64011aa0:	cmp    WORD PTR [ecx-0x4],0x0
64011aa5:	jne    0x64011b2d
64011aab:	cmp    WORD PTR [ecx],0x0
64011aaf:	jne    0x64011ae6
64011ab1:	cmp    WORD PTR [ecx+0x4],0x0
64011ab6:	jne    0x64011af7
64011ab8:	cmp    WORD PTR [ecx+0x8],0x0
64011abd:	jne    0x64011b08
64011abf:	cmp    WORD PTR [ecx+0xc],0x0
64011ac4:	jne    0x64011b19
64011ac6:	cmp    WORD PTR [ecx+0x10],0x0
64011acb:	jne    0x64011b2a
64011acd:	add    eax,0x6
64011ad0:	add    ecx,0x18
64011ad3:	cmp    eax,0x20
64011ad6:	jl     0x64011aa0
64011ad8:	mov    edx,DWORD PTR [edx]
64011ada:	xor    ecx,ecx
64011adc:	cmp    eax,0x20
64011adf:	sete   cl
64011ae2:	mov    DWORD PTR [edx+0x2c],ecx
64011ae5:	ret    
64011ae6:	mov    edx,DWORD PTR [edx]
64011ae8:	xor    ecx,ecx
64011aea:	add    eax,0x1
64011aed:	cmp    eax,0x20
64011af0:	sete   cl
64011af3:	mov    DWORD PTR [edx+0x2c],ecx
64011af6:	ret    
64011af7:	mov    edx,DWORD PTR [edx]
64011af9:	xor    ecx,ecx
64011afb:	add    eax,0x2
64011afe:	cmp    eax,0x20
64011b01:	sete   cl
64011b04:	mov    DWORD PTR [edx+0x2c],ecx
64011b07:	ret    
64011b08:	mov    edx,DWORD PTR [edx]
64011b0a:	xor    ecx,ecx
64011b0c:	add    eax,0x3
64011b0f:	cmp    eax,0x20
64011b12:	sete   cl
64011b15:	mov    DWORD PTR [edx+0x2c],ecx
64011b18:	ret    
64011b19:	mov    edx,DWORD PTR [edx]
64011b1b:	xor    ecx,ecx
64011b1d:	add    eax,0x4
64011b20:	cmp    eax,0x20
64011b23:	sete   cl
64011b26:	mov    DWORD PTR [edx+0x2c],ecx
64011b29:	ret    
64011b2a:	add    eax,0x5
64011b2d:	mov    edx,DWORD PTR [edx]
64011b2f:	xor    ecx,ecx
64011b31:	cmp    eax,0x20
64011b34:	sete   cl
64011b37:	mov    DWORD PTR [edx+0x2c],ecx
64011b3a:	ret    
64011b3b:	int3   
64011b3c:	int3   
64011b3d:	int3   
64011b3e:	int3   
64011b3f:	int3   
64011b40:	xor    eax,eax
64011b42:	push   esi
64011b43:	mov    esi,ecx
64011b45:	and    esi,0x1
64011b48:	or     eax,esi
64011b4a:	sub    edx,0x1
64011b4d:	shr    ecx,1
64011b4f:	add    eax,eax
64011b51:	test   edx,edx
64011b53:	jg     0x64011b43
64011b55:	shr    eax,1
64011b57:	pop    esi
64011b58:	ret    
64011b59:	int3   
64011b5a:	int3   
64011b5b:	int3   
64011b5c:	int3   
64011b5d:	int3   
64011b5e:	int3   
64011b5f:	int3   
64011b60:	mov    edx,DWORD PTR [eax+0x16bc]
64011b66:	cmp    edx,0x8
64011b69:	push   ebx
64011b6a:	push   esi
64011b6b:	jle    0x64011baa
64011b6d:	movzx  ebx,BYTE PTR [eax+0x16b8]
64011b74:	mov    edx,DWORD PTR [eax+0x14]
64011b77:	mov    ecx,DWORD PTR [eax+0x8]
64011b7a:	mov    BYTE PTR [ecx+edx*1],bl
64011b7d:	movzx  ebx,BYTE PTR [eax+0x16b9]
64011b84:	mov    edx,DWORD PTR [eax+0x8]
64011b87:	mov    esi,0x1
64011b8c:	add    DWORD PTR [eax+0x14],esi
64011b8f:	mov    ecx,DWORD PTR [eax+0x14]
64011b92:	mov    BYTE PTR [ecx+edx*1],bl
64011b95:	add    DWORD PTR [eax+0x14],esi
64011b98:	xor    ecx,ecx
64011b9a:	pop    esi
64011b9b:	mov    WORD PTR [eax+0x16b8],cx
64011ba2:	mov    DWORD PTR [eax+0x16bc],ecx
64011ba8:	pop    ebx
64011ba9:	ret    
64011baa:	xor    ecx,ecx
64011bac:	cmp    edx,ecx
64011bae:	jle    0x64011bc3
64011bb0:	mov    esi,DWORD PTR [eax+0x14]
64011bb3:	mov    edx,DWORD PTR [eax+0x8]
64011bb6:	mov    bl,BYTE PTR [eax+0x16b8]
64011bbc:	mov    BYTE PTR [edx+esi*1],bl
64011bbf:	add    DWORD PTR [eax+0x14],0x1
64011bc3:	pop    esi
64011bc4:	mov    WORD PTR [eax+0x16b8],cx
64011bcb:	mov    DWORD PTR [eax+0x16bc],ecx
64011bd1:	pop    ebx
64011bd2:	ret    
64011bd3:	int3   
64011bd4:	int3   
64011bd5:	int3   
64011bd6:	int3   
64011bd7:	int3   
64011bd8:	int3   
64011bd9:	int3   
64011bda:	int3   
64011bdb:	int3   
64011bdc:	int3   
64011bdd:	int3   
64011bde:	int3   
64011bdf:	int3   
64011be0:	push   ebx
64011be1:	push   esi
64011be2:	push   edi
64011be3:	mov    ebx,ecx
64011be5:	mov    esi,edx
64011be7:	call   0x64011b60
64011bec:	cmp    DWORD PTR [esp+0x10],0x0
64011bf1:	mov    DWORD PTR [eax+0x16b4],0x8
64011bfb:	mov    edi,0x1
64011c00:	je     0x64011c3c
64011c02:	mov    ecx,DWORD PTR [eax+0x14]
64011c05:	mov    edx,DWORD PTR [eax+0x8]
64011c08:	mov    BYTE PTR [ecx+edx*1],bl
64011c0b:	add    DWORD PTR [eax+0x14],edi
64011c0e:	mov    ecx,DWORD PTR [eax+0x14]
64011c11:	mov    edx,DWORD PTR [eax+0x8]
64011c14:	mov    BYTE PTR [ecx+edx*1],bh
64011c17:	add    DWORD PTR [eax+0x14],edi
64011c1a:	mov    edx,DWORD PTR [eax+0x8]
64011c1d:	push   ebp
64011c1e:	mov    ebp,DWORD PTR [eax+0x14]
64011c21:	mov    cl,bl
64011c23:	not    cl
64011c25:	mov    BYTE PTR [edx+ebp*1],cl
64011c28:	add    DWORD PTR [eax+0x14],edi
64011c2b:	mov    ebp,DWORD PTR [eax+0x14]
64011c2e:	mov    edx,DWORD PTR [eax+0x8]
64011c31:	mov    ecx,ebx
64011c33:	not    ecx
64011c35:	mov    BYTE PTR [edx+ebp*1],ch
64011c38:	add    DWORD PTR [eax+0x14],edi
64011c3b:	pop    ebp
64011c3c:	test   ebx,ebx
64011c3e:	je     0x64011c5e
64011c40:	mov    ecx,DWORD PTR [eax+0x14]
64011c43:	mov    edx,DWORD PTR [eax+0x8]
64011c46:	sub    ebx,edi
64011c48:	mov    DWORD PTR [esp+0x10],ebx
64011c4c:	mov    bl,BYTE PTR [esi]
64011c4e:	mov    BYTE PTR [ecx+edx*1],bl
64011c51:	mov    ebx,DWORD PTR [esp+0x10]
64011c55:	add    DWORD PTR [eax+0x14],edi
64011c58:	add    esi,edi
64011c5a:	test   ebx,ebx
64011c5c:	jne    0x64011c40
64011c5e:	pop    edi
64011c5f:	pop    esi
64011c60:	pop    ebx
64011c61:	ret    
64011c62:	int3   
64011c63:	int3   
64011c64:	int3   
64011c65:	int3   
64011c66:	int3   
64011c67:	int3   
64011c68:	int3   
64011c69:	int3   
64011c6a:	int3   
64011c6b:	int3   
64011c6c:	int3   
64011c6d:	int3   
64011c6e:	int3   
64011c6f:	int3   
64011c70:	sub    esp,0x24
64011c73:	mov    eax,ds:0x640521ac
64011c78:	xor    eax,esp
64011c7a:	mov    DWORD PTR [esp+0x20],eax
64011c7e:	push   esi
64011c7f:	lea    esi,[esp+0x6]
64011c83:	xor    ecx,ecx
64011c85:	mov    eax,0x1
64011c8a:	sub    edx,esi
64011c8c:	lea    esp,[esp+0x0]
64011c90:	lea    esi,[edx+eax*2]
64011c93:	mov    si,WORD PTR [esp+esi*1+0x4]
64011c98:	add    si,cx
64011c9b:	add    si,si
64011c9e:	movzx  ecx,si
64011ca1:	mov    WORD PTR [esp+eax*2+0x4],cx
64011ca6:	add    eax,0x1
64011ca9:	cmp    eax,0xf
64011cac:	jle    0x64011c90
64011cae:	xor    esi,esi
64011cb0:	test   ebx,ebx
64011cb2:	jl     0x64011cdd
64011cb4:	movzx  edx,WORD PTR [edi+esi*4+0x2]
64011cb9:	test   edx,edx
64011cbb:	je     0x64011cd6
64011cbd:	movzx  eax,WORD PTR [esp+edx*2+0x4]
64011cc2:	movzx  ecx,ax
64011cc5:	add    eax,0x1
64011cc8:	mov    WORD PTR [esp+edx*2+0x4],ax
64011ccd:	call   0x64011b40
64011cd2:	mov    WORD PTR [edi+esi*4],ax
64011cd6:	add    esi,0x1
64011cd9:	cmp    esi,ebx
64011cdb:	jle    0x64011cb4
64011cdd:	mov    ecx,DWORD PTR [esp+0x24]
64011ce1:	pop    esi
64011ce2:	xor    ecx,esp
64011ce4:	call   0x64013d18
64011ce9:	add    esp,0x24
64011cec:	ret    
64011ced:	int3   
64011cee:	int3   
64011cef:	int3   
64011cf0:	sub    esp,0x8
64011cf3:	mov    eax,DWORD PTR [esp+0xc]
64011cf7:	push   ebx
64011cf8:	push   ebp
64011cf9:	push   edi
64011cfa:	mov    edi,DWORD PTR [eax]
64011cfc:	mov    eax,DWORD PTR [eax+0x8]
64011cff:	mov    ecx,DWORD PTR [eax+0xc]
64011d02:	mov    ebp,DWORD PTR [eax]
64011d04:	xor    edx,edx
64011d06:	or     ebx,0xffffffff
64011d09:	xor    eax,eax
64011d0b:	cmp    ecx,edx
64011d0d:	mov    DWORD PTR [esp+0x10],ecx
64011d11:	mov    DWORD PTR [esp+0xc],ebx
64011d15:	mov    DWORD PTR [esi+0x1450],edx
64011d1b:	mov    DWORD PTR [esi+0x1454],0x23d
64011d25:	jle    0x64011d5e
64011d27:	cmp    WORD PTR [edi+eax*4],dx
64011d2b:	je     0x64011d50
64011d2d:	add    DWORD PTR [esi+0x1450],0x1
64011d34:	mov    ecx,DWORD PTR [esi+0x1450]
64011d3a:	mov    DWORD PTR [esi+ecx*4+0xb5c],eax
64011d41:	mov    DWORD PTR [esp+0xc],eax
64011d45:	mov    BYTE PTR [eax+esi*1+0x1458],dl
64011d4c:	mov    ebx,eax
64011d4e:	jmp    0x64011d55
64011d50:	mov    WORD PTR [edi+eax*4+0x2],dx
64011d55:	add    eax,0x1
64011d58:	cmp    eax,DWORD PTR [esp+0x10]
64011d5c:	jl     0x64011d27
64011d5e:	cmp    DWORD PTR [esi+0x1450],0x2
64011d65:	jge    0x64011db9
64011d67:	cmp    ebx,0x2
64011d6a:	jge    0x64011d73
64011d6c:	add    ebx,0x1
64011d6f:	mov    eax,ebx
64011d71:	jmp    0x64011d75
64011d73:	xor    eax,eax
64011d75:	add    DWORD PTR [esi+0x1450],0x1
64011d7c:	mov    ecx,DWORD PTR [esi+0x1450]
64011d82:	mov    DWORD PTR [esi+ecx*4+0xb5c],eax
64011d89:	mov    WORD PTR [edi+eax*4],0x1
64011d8f:	mov    BYTE PTR [esi+eax*1+0x1458],dl
64011d96:	add    DWORD PTR [esi+0x16a8],0xffffffff
64011d9d:	cmp    ebp,edx
64011d9f:	je     0x64011dac
64011da1:	movzx  eax,WORD PTR [ebp+eax*4+0x2]
64011da6:	sub    DWORD PTR [esi+0x16ac],eax
64011dac:	cmp    DWORD PTR [esi+0x1450],0x2
64011db3:	jl     0x64011d67
64011db5:	mov    DWORD PTR [esp+0xc],ebx
64011db9:	mov    ecx,DWORD PTR [esp+0x18]
64011dbd:	mov    DWORD PTR [ecx+0x4],ebx
64011dc0:	mov    eax,DWORD PTR [esi+0x1450]
64011dc6:	cdq    
64011dc7:	sub    eax,edx
64011dc9:	mov    ebp,eax
64011dcb:	sar    ebp,1
64011dcd:	cmp    ebp,0x1
64011dd0:	jl     0x64011de5
64011dd2:	push   ebp
64011dd3:	mov    eax,esi
64011dd5:	call   0x64010b10
64011dda:	sub    ebp,0x1
64011ddd:	add    esp,0x4
64011de0:	cmp    ebp,0x1
64011de3:	jge    0x64011dd2
64011de5:	mov    ebx,DWORD PTR [esp+0x10]
64011de9:	lea    esp,[esp+0x0]
64011df0:	mov    eax,DWORD PTR [esi+0x1450]
64011df6:	mov    edx,DWORD PTR [esi+eax*4+0xb5c]
64011dfd:	mov    ebp,DWORD PTR [esi+0xb60]
64011e03:	add    eax,0xffffffff
64011e06:	mov    DWORD PTR [esi+0x1450],eax
64011e0c:	push   0x1
64011e0e:	mov    eax,esi
64011e10:	mov    DWORD PTR [esi+0xb60],edx
64011e16:	call   0x64010b10
64011e1b:	mov    eax,DWORD PTR [esi+0xb60]
64011e21:	or     edx,0xffffffff
64011e24:	add    DWORD PTR [esi+0x1454],edx
64011e2a:	mov    ecx,DWORD PTR [esi+0x1454]
64011e30:	mov    DWORD PTR [esi+ecx*4+0xb5c],ebp
64011e37:	add    DWORD PTR [esi+0x1454],edx
64011e3d:	mov    ecx,DWORD PTR [esi+0x1454]
64011e43:	mov    DWORD PTR [esi+ecx*4+0xb5c],eax
64011e4a:	mov    cx,WORD PTR [edi+eax*4]
64011e4e:	add    cx,WORD PTR [edi+ebp*4]
64011e52:	add    esp,0x4
64011e55:	mov    WORD PTR [edi+ebx*4],cx
64011e59:	mov    cl,BYTE PTR [esi+eax*1+0x1458]
64011e60:	mov    dl,BYTE PTR [esi+ebp*1+0x1458]
64011e67:	cmp    dl,cl
64011e69:	jb     0x64011e70
64011e6b:	movzx  ecx,dl
64011e6e:	jmp    0x64011e73
64011e70:	movzx  ecx,cl
64011e73:	add    cl,0x1
64011e76:	mov    BYTE PTR [esi+ebx*1+0x1458],cl
64011e7d:	movzx  ecx,bx
64011e80:	mov    WORD PTR [edi+eax*4+0x2],cx
64011e85:	mov    WORD PTR [edi+ebp*4+0x2],cx
64011e8a:	mov    DWORD PTR [esi+0xb60],ebx
64011e90:	push   0x1
64011e92:	mov    eax,esi
64011e94:	add    ebx,0x1
64011e97:	call   0x64010b10
64011e9c:	add    esp,0x4
64011e9f:	cmp    DWORD PTR [esi+0x1450],0x2
64011ea6:	jge    0x64011df0
64011eac:	add    DWORD PTR [esi+0x1454],0xffffffff
64011eb3:	mov    eax,DWORD PTR [esi+0x1454]
64011eb9:	mov    edx,DWORD PTR [esi+0xb60]
64011ebf:	mov    ecx,DWORD PTR [esp+0x18]
64011ec3:	mov    DWORD PTR [esi+eax*4+0xb5c],edx
64011eca:	mov    eax,esi
64011ecc:	call   0x64010be0
64011ed1:	mov    ebx,DWORD PTR [esp+0xc]
64011ed5:	lea    edx,[esi+0xb3c]
64011edb:	call   0x64011c70
64011ee0:	pop    edi
64011ee1:	pop    ebp
64011ee2:	pop    ebx
64011ee3:	add    esp,0x8
64011ee6:	ret    
64011ee7:	int3   
64011ee8:	int3   
64011ee9:	int3   
64011eea:	int3   
64011eeb:	int3   
64011eec:	int3   
64011eed:	int3   
64011eee:	int3   
64011eef:	int3   
64011ef0:	push   esi
64011ef1:	mov    esi,eax
64011ef3:	mov    ecx,DWORD PTR [esi+0xb1c]
64011ef9:	lea    eax,[esi+0x94]
64011eff:	push   esi
64011f00:	call   0x64010e00
64011f05:	mov    ecx,DWORD PTR [esi+0xb28]
64011f0b:	lea    eax,[esi+0x988]
64011f11:	push   esi
64011f12:	call   0x64010e00
64011f17:	lea    eax,[esi+0xb30]
64011f1d:	push   eax
64011f1e:	call   0x64011cf0
64011f23:	add    esp,0xc
64011f26:	mov    eax,0x12
64011f2b:	jmp    0x64011f30
64011f2d:	lea    ecx,[ecx+0x0]
64011f30:	movzx  ecx,BYTE PTR [eax+0x6403d3e4]
64011f37:	cmp    WORD PTR [esi+ecx*4+0xa7e],0x0
64011f40:	jne    0x64011fad
64011f42:	movzx  edx,BYTE PTR [eax+0x6403d3e3]
64011f49:	cmp    WORD PTR [esi+edx*4+0xa7e],0x0
64011f52:	jne    0x64011f8c
64011f54:	movzx  ecx,BYTE PTR [eax+0x6403d3e2]
64011f5b:	cmp    WORD PTR [esi+ecx*4+0xa7e],0x0
64011f64:	jne    0x64011f9b
64011f66:	movzx  edx,BYTE PTR [eax+0x6403d3e1]
64011f6d:	cmp    WORD PTR [esi+edx*4+0xa7e],0x0
64011f76:	jne    0x64011faa
64011f78:	sub    eax,0x4
64011f7b:	cmp    eax,0x3
64011f7e:	jge    0x64011f30
64011f80:	lea    ecx,[eax+eax*2+0x11]
64011f84:	add    DWORD PTR [esi+0x16a8],ecx
64011f8a:	pop    esi
64011f8b:	ret    
64011f8c:	sub    eax,0x1
64011f8f:	lea    ecx,[eax+eax*2+0x11]
64011f93:	add    DWORD PTR [esi+0x16a8],ecx
64011f99:	pop    esi
64011f9a:	ret    
64011f9b:	sub    eax,0x2
64011f9e:	lea    ecx,[eax+eax*2+0x11]
64011fa2:	add    DWORD PTR [esi+0x16a8],ecx
64011fa8:	pop    esi
64011fa9:	ret    
64011faa:	sub    eax,0x3
64011fad:	lea    ecx,[eax+eax*2+0x11]
64011fb1:	add    DWORD PTR [esi+0x16a8],ecx
64011fb7:	pop    esi
64011fb8:	ret    
64011fb9:	int3   
64011fba:	int3   
64011fbb:	int3   
64011fbc:	int3   
64011fbd:	int3   
64011fbe:	int3   
64011fbf:	int3   
64011fc0:	mov    eax,DWORD PTR [esp+0x4]
64011fc4:	mov    ecx,DWORD PTR [eax+0x16bc]
64011fca:	cmp    ecx,0xd
64011fcd:	jle    0x64012038
64011fcf:	push   ebx
64011fd0:	push   esi
64011fd1:	mov    esi,DWORD PTR [esp+0x18]
64011fd5:	mov    edx,esi
64011fd7:	shl    edx,cl
64011fd9:	mov    ecx,DWORD PTR [eax+0x8]
64011fdc:	or     WORD PTR [eax+0x16b8],dx
64011fe3:	movzx  ebx,BYTE PTR [eax+0x16b8]
64011fea:	mov    edx,DWORD PTR [eax+0x14]
64011fed:	mov    BYTE PTR [ecx+edx*1],bl
64011ff0:	movzx  ebx,BYTE PTR [eax+0x16b9]
64011ff7:	add    DWORD PTR [eax+0x14],0x1
64011ffb:	mov    ecx,DWORD PTR [eax+0x14]
64011ffe:	mov    edx,DWORD PTR [eax+0x8]
64012001:	mov    BYTE PTR [ecx+edx*1],bl
64012004:	mov    edx,DWORD PTR [eax+0x16bc]
6401200a:	add    DWORD PTR [eax+0x14],0x1
6401200e:	mov    cl,0x10
64012010:	sub    cl,dl
64012012:	shr    si,cl
64012015:	mov    ecx,DWORD PTR [esp+0x14]
64012019:	add    edx,0xfffffff3
6401201c:	mov    DWORD PTR [eax+0x16bc],edx
64012022:	mov    edx,DWORD PTR [esp+0x10]
64012026:	mov    WORD PTR [eax+0x16b8],si
6401202d:	pop    esi
6401202e:	pop    ebx
6401202f:	push   0x1
64012031:	call   0x64011be0
64012036:	pop    ecx
64012037:	ret    
64012038:	mov    edx,DWORD PTR [esp+0x10]
6401203c:	shl    edx,cl
6401203e:	add    ecx,0x3
64012041:	mov    DWORD PTR [eax+0x16bc],ecx
64012047:	mov    ecx,DWORD PTR [esp+0xc]
6401204b:	or     WORD PTR [eax+0x16b8],dx
64012052:	mov    edx,DWORD PTR [esp+0x8]
64012056:	push   0x1
64012058:	call   0x64011be0
6401205d:	pop    ecx
6401205e:	ret    
6401205f:	int3   
64012060:	push   ecx
64012061:	push   ebx
64012062:	mov    ebx,DWORD PTR [esp+0x14]
64012066:	push   esi
64012067:	mov    esi,DWORD PTR [esp+0x10]
6401206b:	cmp    DWORD PTR [esi+0x84],0x0
64012072:	push   edi
64012073:	mov    DWORD PTR [esp+0xc],0x0
6401207b:	jle    0x640120d4
6401207d:	test   ebx,ebx
6401207f:	jbe    0x64012090
64012081:	mov    eax,DWORD PTR [esi]
64012083:	cmp    DWORD PTR [eax+0x2c],0x2
64012087:	jne    0x64012090
64012089:	mov    edx,esi
6401208b:	call   0x64011a70
64012090:	lea    ecx,[esi+0xb18]
64012096:	push   ecx
64012097:	call   0x64011cf0
6401209c:	lea    edx,[esi+0xb24]
640120a2:	push   edx
640120a3:	call   0x64011cf0
640120a8:	add    esp,0x8
640120ab:	mov    eax,esi
640120ad:	call   0x64011ef0
640120b2:	mov    edx,DWORD PTR [esi+0x16a8]
640120b8:	mov    ecx,DWORD PTR [esi+0x16ac]
640120be:	add    edx,0xa
640120c1:	add    ecx,0xa
640120c4:	shr    edx,0x3
640120c7:	shr    ecx,0x3
640120ca:	cmp    ecx,edx
640120cc:	mov    DWORD PTR [esp+0xc],eax
640120d0:	ja     0x640120d9
640120d2:	jmp    0x640120d7
640120d4:	lea    ecx,[ebx+0x5]
640120d7:	mov    edx,ecx
640120d9:	lea    eax,[ebx+0x4]
640120dc:	cmp    eax,edx
640120de:	ja     0x640120fd
640120e0:	mov    eax,DWORD PTR [esp+0x18]
640120e4:	test   eax,eax
640120e6:	je     0x640120fd
640120e8:	mov    edi,DWORD PTR [esp+0x20]
640120ec:	push   edi
640120ed:	push   ebx
640120ee:	push   eax
640120ef:	push   esi
640120f0:	call   0x64011fc0
640120f5:	add    esp,0x10
640120f8:	jmp    0x64012252
640120fd:	cmp    DWORD PTR [esi+0x88],0x4
64012104:	je     0x640121c8
6401210a:	cmp    ecx,edx
6401210c:	je     0x640121c8
64012112:	mov    ecx,DWORD PTR [esi+0x16bc]
64012118:	cmp    ecx,0xd
6401211b:	mov    edi,DWORD PTR [esp+0x20]
6401211f:	lea    edx,[edi+0x4]
64012122:	jle    0x64012176
64012124:	mov    eax,edx
64012126:	shl    eax,cl
64012128:	mov    ecx,DWORD PTR [esi+0x8]
6401212b:	or     WORD PTR [esi+0x16b8],ax
64012132:	movzx  ebx,BYTE PTR [esi+0x16b8]
64012139:	mov    eax,DWORD PTR [esi+0x14]
6401213c:	mov    BYTE PTR [ecx+eax*1],bl
6401213f:	add    DWORD PTR [esi+0x14],0x1
64012143:	movzx  ebx,BYTE PTR [esi+0x16b9]
6401214a:	mov    ecx,DWORD PTR [esi+0x14]
6401214d:	mov    eax,DWORD PTR [esi+0x8]
64012150:	mov    BYTE PTR [ecx+eax*1],bl
64012153:	mov    ebx,DWORD PTR [esi+0x16bc]
64012159:	add    DWORD PTR [esi+0x14],0x1
6401215d:	mov    cl,0x10
6401215f:	sub    cl,bl
64012161:	shr    dx,cl
64012164:	add    ebx,0xfffffff3
64012167:	mov    DWORD PTR [esi+0x16bc],ebx
6401216d:	mov    WORD PTR [esi+0x16b8],dx
64012174:	jmp    0x64012188
64012176:	shl    edx,cl
64012178:	or     WORD PTR [esi+0x16b8],dx
6401217f:	add    ecx,0x3
64012182:	mov    DWORD PTR [esi+0x16bc],ecx
64012188:	mov    eax,DWORD PTR [esp+0xc]
6401218c:	mov    ecx,DWORD PTR [esi+0xb28]
64012192:	mov    edx,DWORD PTR [esi+0xb1c]
64012198:	add    eax,0x1
6401219b:	push   eax
6401219c:	add    ecx,0x1
6401219f:	push   ecx
640121a0:	add    edx,0x1
640121a3:	push   edx
640121a4:	mov    eax,esi
640121a6:	call   0x64011400
640121ab:	lea    eax,[esi+0x988]
640121b1:	push   eax
640121b2:	lea    ecx,[esi+0x94]
640121b8:	push   ecx
640121b9:	mov    eax,esi
640121bb:	call   0x64011660
640121c0:	add    esp,0x14
640121c3:	jmp    0x64012252
640121c8:	mov    ecx,DWORD PTR [esi+0x16bc]
640121ce:	cmp    ecx,0xd
640121d1:	mov    edi,DWORD PTR [esp+0x20]
640121d5:	lea    eax,[edi+0x2]
640121d8:	jle    0x6401222c
640121da:	mov    edx,eax
640121dc:	shl    edx,cl
640121de:	mov    ecx,DWORD PTR [esi+0x8]
640121e1:	or     WORD PTR [esi+0x16b8],dx
640121e8:	movzx  ebx,BYTE PTR [esi+0x16b8]
640121ef:	mov    edx,DWORD PTR [esi+0x14]
640121f2:	mov    BYTE PTR [ecx+edx*1],bl
640121f5:	add    DWORD PTR [esi+0x14],0x1
640121f9:	movzx  ebx,BYTE PTR [esi+0x16b9]
64012200:	mov    ecx,DWORD PTR [esi+0x14]
64012203:	mov    edx,DWORD PTR [esi+0x8]
64012206:	mov    BYTE PTR [ecx+edx*1],bl
64012209:	mov    edx,DWORD PTR [esi+0x16bc]
6401220f:	add    DWORD PTR [esi+0x14],0x1
64012213:	mov    cl,0x10
64012215:	sub    cl,dl
64012217:	shr    ax,cl
6401221a:	add    edx,0xfffffff3
6401221d:	mov    DWORD PTR [esi+0x16bc],edx
64012223:	mov    WORD PTR [esi+0x16b8],ax
6401222a:	jmp    0x6401223e
6401222c:	shl    eax,cl
6401222e:	or     WORD PTR [esi+0x16b8],ax
64012235:	add    ecx,0x3
64012238:	mov    DWORD PTR [esi+0x16bc],ecx
6401223e:	push   0x6403d940
64012243:	push   0x6403d4c0
64012248:	mov    eax,esi
6401224a:	call   0x64011660
6401224f:	add    esp,0x8
64012252:	mov    edx,esi
64012254:	call   0x64010aa0
64012259:	test   edi,edi
6401225b:	pop    edi
6401225c:	je     0x6401226a
6401225e:	mov    eax,esi
64012260:	pop    esi
64012261:	pop    ebx
64012262:	add    esp,0x4
64012265:	jmp    0x64011b60
6401226a:	pop    esi
6401226b:	pop    ebx
6401226c:	pop    ecx
6401226d:	ret    
6401226e:	int3   
6401226f:	int3   
64012270:	push   esi
64012271:	mov    esi,edx
64012273:	test   esi,esi
64012275:	not    eax
64012277:	je     0x640122a2
64012279:	lea    esp,[esp+0x0]
64012280:	test   cl,0x3
64012283:	je     0x640122a2
64012285:	movzx  edx,BYTE PTR [ecx]
64012288:	xor    edx,eax
6401228a:	and    edx,0xff
64012290:	shr    eax,0x8
64012293:	xor    eax,DWORD PTR [edx*4+0x6403dda8]
6401229a:	add    ecx,0x1
6401229d:	sub    esi,0x1
640122a0:	jne    0x64012280
640122a2:	cmp    esi,0x20
640122a5:	push   ebx
640122a6:	push   edi
640122a7:	jb     0x6401248c
640122ad:	mov    edi,esi
640122af:	shr    edi,0x5
640122b2:	xor    eax,DWORD PTR [ecx]
640122b4:	add    ecx,0x4
640122b7:	mov    edx,eax
640122b9:	shr    edx,0x10
640122bc:	movzx  ebx,ah
640122bf:	and    edx,0xff
640122c5:	mov    edx,DWORD PTR [edx*4+0x6403e1a8]
640122cc:	xor    edx,DWORD PTR [ebx*4+0x6403e5a8]
640122d3:	mov    ebx,eax
640122d5:	and    eax,0xff
640122da:	shr    ebx,0x18
640122dd:	xor    edx,DWORD PTR [ebx*4+0x6403dda8]
640122e4:	add    ecx,0x4
640122e7:	xor    edx,DWORD PTR [eax*4+0x6403e9a8]
640122ee:	add    ecx,0x4
640122f1:	xor    edx,DWORD PTR [ecx-0x8]
640122f4:	add    ecx,0x4
640122f7:	mov    eax,edx
640122f9:	shr    eax,0x10
640122fc:	and    eax,0xff
64012301:	mov    eax,DWORD PTR [eax*4+0x6403e1a8]
64012308:	movzx  ebx,dh
6401230b:	xor    eax,DWORD PTR [ebx*4+0x6403e5a8]
64012312:	mov    ebx,edx
64012314:	and    edx,0xff
6401231a:	shr    ebx,0x18
6401231d:	xor    eax,DWORD PTR [ebx*4+0x6403dda8]
64012324:	add    ecx,0x4
64012327:	xor    eax,DWORD PTR [edx*4+0x6403e9a8]
6401232e:	add    ecx,0x4
64012331:	xor    eax,DWORD PTR [ecx-0x10]
64012334:	mov    edx,eax
64012336:	shr    edx,0x10
64012339:	movzx  ebx,ah
6401233c:	and    edx,0xff
64012342:	mov    edx,DWORD PTR [edx*4+0x6403e1a8]
64012349:	xor    edx,DWORD PTR [ebx*4+0x6403e5a8]
64012350:	mov    ebx,eax
64012352:	and    eax,0xff
64012357:	shr    ebx,0x18
6401235a:	xor    edx,DWORD PTR [ebx*4+0x6403dda8]
64012361:	xor    edx,DWORD PTR [eax*4+0x6403e9a8]
64012368:	xor    edx,DWORD PTR [ecx-0xc]
6401236b:	mov    eax,edx
6401236d:	shr    eax,0x10
64012370:	and    eax,0xff
64012375:	mov    eax,DWORD PTR [eax*4+0x6403e1a8]
6401237c:	movzx  ebx,dh
6401237f:	xor    eax,DWORD PTR [ebx*4+0x6403e5a8]
64012386:	mov    ebx,edx
64012388:	and    edx,0xff
6401238e:	shr    ebx,0x18
64012391:	xor    eax,DWORD PTR [ebx*4+0x6403dda8]
64012398:	xor    eax,DWORD PTR [edx*4+0x6403e9a8]
6401239f:	xor    eax,DWORD PTR [ecx-0x8]
640123a2:	mov    edx,eax
640123a4:	shr    edx,0x10
640123a7:	movzx  ebx,ah
640123aa:	and    edx,0xff
640123b0:	mov    edx,DWORD PTR [edx*4+0x6403e1a8]
640123b7:	xor    edx,DWORD PTR [ebx*4+0x6403e5a8]
640123be:	mov    ebx,eax
640123c0:	and    eax,0xff
640123c5:	shr    ebx,0x18
640123c8:	xor    edx,DWORD PTR [ebx*4+0x6403dda8]
640123cf:	xor    edx,DWORD PTR [eax*4+0x6403e9a8]
640123d6:	xor    edx,DWORD PTR [ecx-0x4]
640123d9:	mov    eax,edx
640123db:	shr    eax,0x10
640123de:	and    eax,0xff
640123e3:	mov    eax,DWORD PTR [eax*4+0x6403e1a8]
640123ea:	movzx  ebx,dh
640123ed:	xor    eax,DWORD PTR [ebx*4+0x6403e5a8]
640123f4:	mov    ebx,edx
640123f6:	shr    ebx,0x18
640123f9:	xor    eax,DWORD PTR [ebx*4+0x6403dda8]
64012400:	and    edx,0xff
64012406:	xor    eax,DWORD PTR [edx*4+0x6403e9a8]
6401240d:	xor    eax,DWORD PTR [ecx]
6401240f:	add    ecx,0x4
64012412:	mov    edx,eax
64012414:	shr    edx,0x10
64012417:	movzx  ebx,ah
6401241a:	and    edx,0xff
64012420:	mov    edx,DWORD PTR [edx*4+0x6403e1a8]
64012427:	xor    edx,DWORD PTR [ebx*4+0x6403e5a8]
6401242e:	mov    ebx,eax
64012430:	and    eax,0xff
64012435:	shr    ebx,0x18
64012438:	xor    edx,DWORD PTR [ebx*4+0x6403dda8]
6401243f:	add    ecx,0x4
64012442:	xor    edx,DWORD PTR [eax*4+0x6403e9a8]
64012449:	sub    esi,0x20
6401244c:	xor    edx,DWORD PTR [ecx-0x4]
6401244f:	mov    eax,edx
64012451:	shr    eax,0x10
64012454:	and    eax,0xff
64012459:	mov    eax,DWORD PTR [eax*4+0x6403e1a8]
64012460:	movzx  ebx,dh
64012463:	xor    eax,DWORD PTR [ebx*4+0x6403e5a8]
6401246a:	mov    ebx,edx
6401246c:	shr    ebx,0x18
6401246f:	xor    eax,DWORD PTR [ebx*4+0x6403dda8]
64012476:	and    edx,0xff
6401247c:	xor    eax,DWORD PTR [edx*4+0x6403e9a8]
64012483:	sub    edi,0x1
64012486:	jne    0x640122b2
6401248c:	cmp    esi,0x4
6401248f:	jb     0x640124d9
64012491:	mov    edx,esi
64012493:	shr    edx,0x2
64012496:	xor    eax,DWORD PTR [ecx]
64012498:	add    ecx,0x4
6401249b:	mov    edi,eax
6401249d:	shr    edi,0x10
640124a0:	and    edi,0xff
640124a6:	mov    edi,DWORD PTR [edi*4+0x6403e1a8]
640124ad:	movzx  ebx,ah
640124b0:	xor    edi,DWORD PTR [ebx*4+0x6403e5a8]
640124b7:	mov    ebx,eax
640124b9:	shr    ebx,0x18
640124bc:	xor    edi,DWORD PTR [ebx*4+0x6403dda8]
640124c3:	and    eax,0xff
640124c8:	xor    edi,DWORD PTR [eax*4+0x6403e9a8]
640124cf:	sub    esi,0x4
640124d2:	sub    edx,0x1
640124d5:	mov    eax,edi
640124d7:	jne    0x64012496
640124d9:	test   esi,esi
640124db:	pop    edi
640124dc:	pop    ebx
640124dd:	je     0x640124fd
640124df:	nop
640124e0:	movzx  edx,BYTE PTR [ecx]
640124e3:	xor    edx,eax
640124e5:	and    edx,0xff
640124eb:	shr    eax,0x8
640124ee:	xor    eax,DWORD PTR [edx*4+0x6403dda8]
640124f5:	add    ecx,0x1
640124f8:	sub    esi,0x1
640124fb:	jne    0x640124e0
640124fd:	not    eax
640124ff:	pop    esi
64012500:	ret    
64012501:	int3   
64012502:	int3   
64012503:	int3   
64012504:	int3   
64012505:	int3   
64012506:	int3   
64012507:	int3   
64012508:	int3   
64012509:	int3   
6401250a:	int3   
6401250b:	int3   
6401250c:	int3   
6401250d:	int3   
6401250e:	int3   
6401250f:	int3   
64012510:	mov    ecx,DWORD PTR [esp+0x8]
64012514:	test   ecx,ecx
64012516:	jne    0x6401251b
64012518:	xor    eax,eax
6401251a:	ret    
6401251b:	mov    edx,DWORD PTR [esp+0xc]
6401251f:	mov    eax,DWORD PTR [esp+0x4]
64012523:	jmp    0x64012270
64012528:	int3   
64012529:	int3   
6401252a:	int3   
6401252b:	int3   
6401252c:	int3   
6401252d:	int3   
6401252e:	int3   
6401252f:	int3   
64012530:	mov    eax,DWORD PTR [esp+0x8]
64012534:	imul   eax,DWORD PTR [esp+0xc]
64012539:	push   eax
6401253a:	call   0x640148ce
6401253f:	add    esp,0x4
64012542:	ret    
64012543:	int3   
64012544:	int3   
64012545:	int3   
64012546:	int3   
64012547:	int3   
64012548:	int3   
64012549:	int3   
6401254a:	int3   
6401254b:	int3   
6401254c:	int3   
6401254d:	int3   
6401254e:	int3   
6401254f:	int3   
64012550:	mov    eax,DWORD PTR [esp+0x8]
64012554:	push   eax
64012555:	call   0x640147cf
6401255a:	pop    ecx
6401255b:	ret    
6401255c:	int3   
6401255d:	int3   
6401255e:	int3   
6401255f:	int3   
64012560:	sub    esp,0x3c
64012563:	push   ebx
64012564:	push   ebp
64012565:	push   esi
64012566:	push   edi
64012567:	mov    ecx,DWORD PTR [esp+0x50]
6401256b:	mov    eax,DWORD PTR [ecx+0x1c]
6401256e:	mov    edx,DWORD PTR [ecx+0x4]
64012571:	mov    ebx,DWORD PTR [eax+0x38]
64012574:	mov    ebp,DWORD PTR [ecx]
64012576:	sub    ebp,0x1
64012579:	lea    edx,[edx+ebp*1-0x5]
6401257d:	mov    DWORD PTR [esp+0x14],edx
64012581:	mov    esi,DWORD PTR [ecx+0xc]
64012584:	mov    ecx,DWORD PTR [ecx+0x10]
64012587:	mov    edx,ecx
64012589:	sub    edx,DWORD PTR [esp+0x54]
6401258d:	sub    esi,0x1
64012590:	add    edx,esi
64012592:	lea    ecx,[ecx+esi*1-0x101]
64012599:	mov    DWORD PTR [esp+0x38],edx
6401259d:	mov    edx,DWORD PTR [eax+0x28]
640125a0:	mov    DWORD PTR [esp+0x2c],ecx
640125a4:	mov    ecx,DWORD PTR [eax+0x2c]
640125a7:	mov    DWORD PTR [esp+0x28],edx
640125ab:	mov    edx,DWORD PTR [eax+0x30]
640125ae:	mov    DWORD PTR [esp+0x3c],ecx
640125b2:	mov    ecx,DWORD PTR [eax+0x34]
640125b5:	mov    DWORD PTR [esp+0x44],edx
640125b9:	mov    edx,DWORD PTR [eax+0x4c]
640125bc:	mov    DWORD PTR [esp+0x40],ecx
640125c0:	mov    ecx,DWORD PTR [eax+0x50]
640125c3:	mov    DWORD PTR [esp+0x20],edx
640125c7:	mov    DWORD PTR [esp+0x24],ecx
640125cb:	mov    ecx,DWORD PTR [eax+0x54]
640125ce:	mov    edx,0x1
640125d3:	shl    edx,cl
640125d5:	mov    ecx,DWORD PTR [eax+0x58]
640125d8:	mov    DWORD PTR [esp+0x18],eax
640125dc:	mov    edi,DWORD PTR [eax+0x3c]
640125df:	mov    DWORD PTR [esp+0x54],0x1
640125e7:	mov    eax,DWORD PTR [esp+0x54]
640125eb:	shl    eax,cl
640125ed:	sub    edx,0x1
640125f0:	mov    DWORD PTR [esp+0x10],ebp
640125f4:	mov    DWORD PTR [esp+0x48],edx
640125f8:	sub    eax,0x1
640125fb:	mov    DWORD PTR [esp+0x30],eax
640125ff:	nop
64012600:	cmp    edi,0xf
64012603:	jae    0x64012629
64012605:	movzx  eax,BYTE PTR [ebp+0x1]
64012609:	add    ebp,0x1
6401260c:	mov    ecx,edi
6401260e:	shl    eax,cl
64012610:	add    ebp,0x1
64012613:	add    edi,0x8
64012616:	mov    ecx,edi
64012618:	add    ebx,eax
6401261a:	movzx  eax,BYTE PTR [ebp+0x0]
6401261e:	shl    eax,cl
64012620:	mov    DWORD PTR [esp+0x10],ebp
64012624:	add    ebx,eax
64012626:	add    edi,0x8
64012629:	mov    ecx,DWORD PTR [esp+0x20]
6401262d:	and    edx,ebx
6401262f:	mov    eax,DWORD PTR [ecx+edx*4]
64012632:	mov    edx,eax
64012634:	shr    edx,0x8
64012637:	movzx  ecx,dl
6401263a:	movzx  edx,al
6401263d:	shr    ebx,cl
6401263f:	sub    edi,ecx
64012641:	test   edx,edx
64012643:	je     0x64012688
64012645:	test   dl,0x10
64012648:	jne    0x64012695
6401264a:	test   dl,0x40
6401264d:	jne    0x6401299a
64012653:	mov    ecx,0x1
64012658:	mov    DWORD PTR [esp+0x54],ecx
6401265c:	mov    ecx,edx
6401265e:	mov    edx,DWORD PTR [esp+0x54]
64012662:	shl    edx,cl
64012664:	shr    eax,0x10
64012667:	sub    edx,0x1
6401266a:	and    edx,ebx
6401266c:	add    edx,eax
6401266e:	mov    eax,DWORD PTR [esp+0x20]
64012672:	mov    eax,DWORD PTR [eax+edx*4]
64012675:	mov    ecx,eax
64012677:	shr    ecx,0x8
6401267a:	movzx  ecx,cl
6401267d:	movzx  edx,al
64012680:	shr    ebx,cl
64012682:	sub    edi,ecx
64012684:	test   edx,edx
64012686:	jne    0x64012645
64012688:	add    esi,0x1
6401268b:	shr    eax,0x10
6401268e:	mov    BYTE PTR [esi],al
64012690:	jmp    0x640128f5
64012695:	shr    eax,0x10
64012698:	and    edx,0xf
6401269b:	mov    DWORD PTR [esp+0x54],eax
6401269f:	je     0x640126cf
640126a1:	cmp    edi,edx
640126a3:	jae    0x640126b9
640126a5:	movzx  eax,BYTE PTR [ebp+0x1]
640126a9:	add    ebp,0x1
640126ac:	mov    ecx,edi
640126ae:	shl    eax,cl
640126b0:	mov    DWORD PTR [esp+0x10],ebp
640126b4:	add    ebx,eax
640126b6:	add    edi,0x8
640126b9:	mov    ecx,edx
640126bb:	mov    eax,0x1
640126c0:	shl    eax,cl
640126c2:	sub    eax,0x1
640126c5:	and    eax,ebx
640126c7:	add    DWORD PTR [esp+0x54],eax
640126cb:	shr    ebx,cl
640126cd:	sub    edi,edx
640126cf:	cmp    edi,0xf
640126d2:	jae    0x640126f8
640126d4:	movzx  edx,BYTE PTR [ebp+0x1]
640126d8:	add    ebp,0x1
640126db:	movzx  eax,BYTE PTR [ebp+0x1]
640126df:	mov    ecx,edi
640126e1:	add    ebp,0x1
640126e4:	shl    edx,cl
640126e6:	add    edi,0x8
640126e9:	mov    ecx,edi
640126eb:	shl    eax,cl
640126ed:	add    ebx,edx
640126ef:	mov    DWORD PTR [esp+0x10],ebp
640126f3:	add    ebx,eax
640126f5:	add    edi,0x8
640126f8:	mov    ecx,DWORD PTR [esp+0x30]
640126fc:	mov    edx,DWORD PTR [esp+0x24]
64012700:	and    ecx,ebx
64012702:	mov    edx,DWORD PTR [edx+ecx*4]
64012705:	mov    eax,edx
64012707:	shr    eax,0x8
6401270a:	movzx  ecx,al
6401270d:	movzx  eax,dl
64012710:	shr    ebx,cl
64012712:	sub    edi,ecx
64012714:	test   al,0x10
64012716:	mov    DWORD PTR [esp+0x1c],edx
6401271a:	jne    0x6401275b
6401271c:	lea    esp,[esp+0x0]
64012720:	test   al,0x40
64012722:	jne    0x6401298d
64012728:	mov    ecx,eax
6401272a:	movzx  eax,WORD PTR [esp+0x1e]
6401272f:	mov    edx,0x1
64012734:	shl    edx,cl
64012736:	mov    ecx,DWORD PTR [esp+0x24]
6401273a:	sub    edx,0x1
6401273d:	and    edx,ebx
6401273f:	add    edx,eax
64012741:	mov    edx,DWORD PTR [ecx+edx*4]
64012744:	mov    eax,edx
64012746:	shr    eax,0x8
64012749:	movzx  ecx,al
6401274c:	movzx  eax,dl
6401274f:	shr    ebx,cl
64012751:	sub    edi,ecx
64012753:	test   al,0x10
64012755:	mov    DWORD PTR [esp+0x1c],edx
64012759:	je     0x64012720
6401275b:	shr    edx,0x10
6401275e:	and    eax,0xf
64012761:	cmp    edi,eax
64012763:	mov    DWORD PTR [esp+0x1c],edx
64012767:	jae    0x64012795
64012769:	movzx  edx,BYTE PTR [ebp+0x1]
6401276d:	add    ebp,0x1
64012770:	mov    ecx,edi
64012772:	shl    edx,cl
64012774:	add    edi,0x8
64012777:	mov    DWORD PTR [esp+0x10],ebp
6401277b:	add    ebx,edx
6401277d:	cmp    edi,eax
6401277f:	jae    0x64012795
64012781:	movzx  edx,BYTE PTR [ebp+0x1]
64012785:	add    ebp,0x1
64012788:	mov    ecx,edi
6401278a:	shl    edx,cl
6401278c:	mov    DWORD PTR [esp+0x10],ebp
64012790:	add    ebx,edx
64012792:	add    edi,0x8
64012795:	mov    ecx,0x1
6401279a:	mov    edx,ecx
6401279c:	mov    ecx,eax
6401279e:	shl    edx,cl
640127a0:	sub    edi,eax
640127a2:	sub    edx,0x1
640127a5:	and    edx,ebx
640127a7:	mov    ecx,edx
640127a9:	mov    edx,DWORD PTR [esp+0x1c]
640127ad:	add    edx,ecx
640127af:	mov    ecx,eax
640127b1:	mov    eax,esi
640127b3:	sub    eax,DWORD PTR [esp+0x38]
640127b7:	shr    ebx,cl
640127b9:	cmp    edx,eax
640127bb:	mov    DWORD PTR [esp+0x1c],edx
640127bf:	jbe    0x64012914
640127c5:	mov    ebp,edx
640127c7:	sub    ebp,eax
640127c9:	cmp    ebp,DWORD PTR [esp+0x3c]
640127cd:	ja     0x64012972
640127d3:	mov    ecx,DWORD PTR [esp+0x40]
640127d7:	mov    eax,DWORD PTR [esp+0x44]
640127db:	add    ecx,0xffffffff
640127de:	test   eax,eax
640127e0:	mov    DWORD PTR [esp+0x34],ecx
640127e4:	jne    0x64012812
640127e6:	mov    eax,DWORD PTR [esp+0x28]
640127ea:	sub    eax,ebp
640127ec:	add    ecx,eax
640127ee:	cmp    ebp,DWORD PTR [esp+0x54]
640127f2:	jae    0x6401288a
640127f8:	sub    DWORD PTR [esp+0x54],ebp
640127fc:	lea    esp,[esp+0x0]
64012800:	mov    al,BYTE PTR [ecx+0x1]
64012803:	add    ecx,0x1
64012806:	add    esi,0x1
64012809:	sub    ebp,0x1
6401280c:	mov    BYTE PTR [esi],al
6401280e:	jne    0x64012800
64012810:	jmp    0x64012886
64012812:	cmp    eax,ebp
64012814:	jae    0x64012868
64012816:	mov    edx,eax
64012818:	sub    edx,ebp
6401281a:	add    edx,DWORD PTR [esp+0x28]
6401281e:	sub    ebp,eax
64012820:	add    ecx,edx
64012822:	cmp    ebp,DWORD PTR [esp+0x54]
64012826:	jae    0x6401288a
64012828:	sub    DWORD PTR [esp+0x54],ebp
6401282c:	lea    esp,[esp+0x0]
64012830:	mov    dl,BYTE PTR [ecx+0x1]
64012833:	add    ecx,0x1
64012836:	add    esi,0x1
64012839:	sub    ebp,0x1
6401283c:	mov    BYTE PTR [esi],dl
6401283e:	jne    0x64012830
64012840:	cmp    eax,DWORD PTR [esp+0x54]
64012844:	mov    ecx,DWORD PTR [esp+0x34]
64012848:	jae    0x6401288a
6401284a:	sub    DWORD PTR [esp+0x54],eax
6401284e:	mov    ebp,eax
64012850:	mov    al,BYTE PTR [ecx+0x1]
64012853:	add    ecx,0x1
64012856:	add    esi,0x1
64012859:	sub    ebp,0x1
6401285c:	mov    BYTE PTR [esi],al
6401285e:	jne    0x64012850
64012860:	mov    ecx,esi
64012862:	sub    ecx,DWORD PTR [esp+0x1c]
64012866:	jmp    0x6401288a
64012868:	sub    eax,ebp
6401286a:	add    ecx,eax
6401286c:	cmp    ebp,DWORD PTR [esp+0x54]
64012870:	jae    0x6401288a
64012872:	sub    DWORD PTR [esp+0x54],ebp
64012876:	mov    al,BYTE PTR [ecx+0x1]
64012879:	add    ecx,0x1
6401287c:	add    esi,0x1
6401287f:	sub    ebp,0x1
64012882:	mov    BYTE PTR [esi],al
64012884:	jne    0x64012876
64012886:	mov    ecx,esi
64012888:	sub    ecx,edx
6401288a:	mov    eax,DWORD PTR [esp+0x54]
6401288e:	cmp    eax,0x2
64012891:	jbe    0x640128d1
64012893:	lea    edx,[eax-0x3]
64012896:	mov    eax,0xaaaaaaab
6401289b:	mul    edx
6401289d:	mov    ebp,edx
6401289f:	shr    ebp,1
640128a1:	add    ebp,0x1
640128a4:	movzx  eax,BYTE PTR [ecx+0x1]
640128a8:	sub    DWORD PTR [esp+0x54],0x3
640128ad:	add    ecx,0x1
640128b0:	add    esi,0x1
640128b3:	mov    BYTE PTR [esi],al
640128b5:	mov    dl,BYTE PTR [ecx+0x1]
640128b8:	add    ecx,0x1
640128bb:	add    esi,0x1
640128be:	mov    BYTE PTR [esi],dl
640128c0:	movzx  eax,BYTE PTR [ecx+0x1]
640128c4:	add    ecx,0x1
640128c7:	add    esi,0x1
640128ca:	sub    ebp,0x1
640128cd:	mov    BYTE PTR [esi],al
640128cf:	jne    0x640128a4
640128d1:	mov    ebp,DWORD PTR [esp+0x54]
640128d5:	test   ebp,ebp
640128d7:	je     0x640128f1
640128d9:	mov    dl,BYTE PTR [ecx+0x1]
640128dc:	add    ecx,0x1
640128df:	add    esi,0x1
640128e2:	cmp    ebp,0x1
640128e5:	mov    BYTE PTR [esi],dl
640128e7:	jbe    0x640128f1
640128e9:	mov    al,BYTE PTR [ecx+0x1]
640128ec:	add    esi,0x1
640128ef:	mov    BYTE PTR [esi],al
640128f1:	mov    ebp,DWORD PTR [esp+0x10]
640128f5:	mov    edx,DWORD PTR [esp+0x14]
640128f9:	cmp    ebp,edx
640128fb:	jae    0x640129c4
64012901:	cmp    esi,DWORD PTR [esp+0x2c]
64012905:	jae    0x640129c4
6401290b:	mov    edx,DWORD PTR [esp+0x48]
6401290f:	jmp    0x64012600
64012914:	mov    eax,esi
64012916:	sub    eax,edx
64012918:	jmp    0x64012920
6401291a:	lea    ebx,[ebx+0x0]
64012920:	movzx  ecx,BYTE PTR [eax+0x1]
64012924:	add    eax,0x1
64012927:	mov    BYTE PTR [esi+0x1],cl
6401292a:	mov    dl,BYTE PTR [eax+0x1]
6401292d:	add    esi,0x1
64012930:	add    eax,0x1
64012933:	add    esi,0x1
64012936:	mov    BYTE PTR [esi],dl
64012938:	movzx  ecx,BYTE PTR [eax+0x1]
6401293c:	add    eax,0x1
6401293f:	add    esi,0x1
64012942:	mov    BYTE PTR [esi],cl
64012944:	mov    ecx,DWORD PTR [esp+0x54]
64012948:	sub    ecx,0x3
6401294b:	cmp    ecx,0x2
6401294e:	mov    DWORD PTR [esp+0x54],ecx
64012952:	ja     0x64012920
64012954:	test   ecx,ecx
64012956:	je     0x640128f5
64012958:	mov    dl,BYTE PTR [eax+0x1]
6401295b:	add    eax,0x1
6401295e:	add    esi,0x1
64012961:	cmp    ecx,0x1
64012964:	mov    BYTE PTR [esi],dl
64012966:	jbe    0x640128f5
64012968:	mov    al,BYTE PTR [eax+0x1]
6401296b:	add    esi,0x1
6401296e:	mov    BYTE PTR [esi],al
64012970:	jmp    0x640128f5
64012972:	mov    ecx,DWORD PTR [esp+0x50]
64012976:	mov    edx,DWORD PTR [esp+0x18]
6401297a:	mov    ebp,DWORD PTR [esp+0x10]
6401297e:	mov    DWORD PTR [ecx+0x18],0x6403d1e0
64012985:	mov    DWORD PTR [edx],0x1b
6401298b:	jmp    0x640129c0
6401298d:	mov    eax,DWORD PTR [esp+0x50]
64012991:	mov    DWORD PTR [eax+0x18],0x6403d200
64012998:	jmp    0x640129b6
6401299a:	test   dl,0x20
6401299d:	je     0x640129ab
6401299f:	mov    edx,DWORD PTR [esp+0x18]
640129a3:	mov    DWORD PTR [edx],0xb
640129a9:	jmp    0x640129c0
640129ab:	mov    eax,DWORD PTR [esp+0x50]
640129af:	mov    DWORD PTR [eax+0x18],0x6403d218
640129b6:	mov    ecx,DWORD PTR [esp+0x18]
640129ba:	mov    DWORD PTR [ecx],0x1b
640129c0:	mov    edx,DWORD PTR [esp+0x14]
640129c4:	mov    eax,edi
640129c6:	shr    eax,0x3
640129c9:	sub    ebp,eax
640129cb:	add    eax,eax
640129cd:	add    eax,eax
640129cf:	add    eax,eax
640129d1:	sub    edi,eax
640129d3:	mov    ecx,edi
640129d5:	mov    eax,0x1
640129da:	shl    eax,cl
640129dc:	mov    ecx,DWORD PTR [esp+0x50]
640129e0:	sub    edx,ebp
640129e2:	add    edx,0x5
640129e5:	sub    eax,0x1
640129e8:	and    ebx,eax
640129ea:	lea    eax,[ebp+0x1]
640129ed:	mov    DWORD PTR [ecx],eax
640129ef:	lea    eax,[esi+0x1]
640129f2:	mov    DWORD PTR [ecx+0xc],eax
640129f5:	mov    eax,DWORD PTR [esp+0x2c]
640129f9:	sub    eax,esi
640129fb:	add    eax,0x101
64012a00:	mov    DWORD PTR [ecx+0x10],eax
64012a03:	mov    eax,DWORD PTR [esp+0x18]
64012a07:	mov    DWORD PTR [ecx+0x4],edx
64012a0a:	mov    DWORD PTR [eax+0x3c],edi
64012a0d:	pop    edi
64012a0e:	pop    esi
64012a0f:	pop    ebp
64012a10:	mov    DWORD PTR [eax+0x38],ebx
64012a13:	pop    ebx
64012a14:	add    esp,0x3c
64012a17:	ret    
64012a18:	int3   
64012a19:	int3   
64012a1a:	int3   
64012a1b:	int3   
64012a1c:	int3   
64012a1d:	int3   
64012a1e:	int3   
64012a1f:	int3   
64012a20:	sub    esp,0x8c
64012a26:	mov    eax,ds:0x640521ac
64012a2b:	xor    eax,esp
64012a2d:	mov    DWORD PTR [esp+0x88],eax
64012a34:	mov    eax,DWORD PTR [esp+0xa4]
64012a3b:	mov    edx,DWORD PTR [esp+0xa0]
64012a42:	push   ebx
64012a43:	mov    ebx,DWORD PTR [esp+0xa0]
64012a4a:	push   ebp
64012a4b:	mov    ebp,DWORD PTR [esp+0x9c]
64012a52:	push   esi
64012a53:	mov    esi,DWORD PTR [esp+0xa4]
64012a5a:	mov    DWORD PTR [esp+0x18],eax
64012a5e:	xor    eax,eax
64012a60:	test   esi,esi
64012a62:	mov    DWORD PTR [esp+0x50],ebp
64012a66:	mov    DWORD PTR [esp+0x38],ebx
64012a6a:	mov    DWORD PTR [esp+0x48],edx
64012a6e:	mov    DWORD PTR [esp+0x54],eax
64012a72:	mov    DWORD PTR [esp+0x58],eax
64012a76:	mov    DWORD PTR [esp+0x5c],eax
64012a7a:	mov    DWORD PTR [esp+0x60],eax
64012a7e:	mov    DWORD PTR [esp+0x64],eax
64012a82:	mov    DWORD PTR [esp+0x68],eax
64012a86:	mov    DWORD PTR [esp+0x6c],eax
64012a8a:	mov    DWORD PTR [esp+0x70],eax
64012a8e:	jbe    0x64012aa6
64012a90:	movzx  ecx,WORD PTR [ebp+eax*2+0x0]
64012a95:	add    WORD PTR [esp+ecx*2+0x54],0x1
64012a9b:	lea    ecx,[esp+ecx*2+0x54]
64012a9f:	add    eax,0x1
64012aa2:	cmp    eax,esi
64012aa4:	jb     0x64012a90
64012aa6:	mov    eax,DWORD PTR [edx]
64012aa8:	mov    DWORD PTR [esp+0x10],eax
64012aac:	mov    ecx,0xf
64012ab1:	cmp    WORD PTR [esp+ecx*2+0x54],0x0
64012ab7:	jne    0x64012ac1
64012ab9:	sub    ecx,0x1
64012abc:	cmp    ecx,0x1
64012abf:	jae    0x64012ab1
64012ac1:	cmp    eax,ecx
64012ac3:	mov    DWORD PTR [esp+0x1c],ecx
64012ac7:	jbe    0x64012acf
64012ac9:	mov    DWORD PTR [esp+0x10],ecx
64012acd:	mov    eax,ecx
64012acf:	test   ecx,ecx
64012ad1:	jne    0x64012b14
64012ad3:	mov    WORD PTR [esp+0xe],cx
64012ad8:	mov    ecx,DWORD PTR [ebx]
64012ada:	mov    BYTE PTR [esp+0xc],0x40
64012adf:	mov    BYTE PTR [esp+0xd],0x1
64012ae4:	mov    eax,DWORD PTR [esp+0xc]
64012ae8:	mov    DWORD PTR [ecx],eax
64012aea:	add    DWORD PTR [ebx],0x4
64012aed:	mov    ecx,DWORD PTR [ebx]
64012aef:	pop    esi
64012af0:	mov    DWORD PTR [ecx],eax
64012af2:	add    DWORD PTR [ebx],0x4
64012af5:	pop    ebp
64012af6:	mov    DWORD PTR [edx],0x1
64012afc:	xor    eax,eax
64012afe:	pop    ebx
64012aff:	mov    ecx,DWORD PTR [esp+0x88]
64012b06:	xor    ecx,esp
64012b08:	call   0x64013d18
64012b0d:	add    esp,0x8c
64012b13:	ret    
64012b14:	mov    esi,0x1
64012b19:	lea    esp,[esp+0x0]
64012b20:	cmp    WORD PTR [esp+esi*2+0x54],0x0
64012b26:	jne    0x64012b64
64012b28:	cmp    WORD PTR [esp+esi*2+0x56],0x0
64012b2e:	jne    0x64012b52
64012b30:	cmp    WORD PTR [esp+esi*2+0x58],0x0
64012b36:	jne    0x64012b57
64012b38:	cmp    WORD PTR [esp+esi*2+0x5a],0x0
64012b3e:	jne    0x64012b5c
64012b40:	cmp    WORD PTR [esp+esi*2+0x5c],0x0
64012b46:	jne    0x64012b61
64012b48:	add    esi,0x5
64012b4b:	cmp    esi,0xf
64012b4e:	jbe    0x64012b20
64012b50:	jmp    0x64012b64
64012b52:	add    esi,0x1
64012b55:	jmp    0x64012b64
64012b57:	add    esi,0x2
64012b5a:	jmp    0x64012b64
64012b5c:	add    esi,0x3
64012b5f:	jmp    0x64012b64
64012b61:	add    esi,0x4
64012b64:	cmp    eax,esi
64012b66:	jae    0x64012b6c
64012b68:	mov    DWORD PTR [esp+0x10],esi
64012b6c:	mov    edx,0x1
64012b71:	mov    eax,edx
64012b73:	push   edi
64012b74:	movzx  edi,WORD PTR [esp+eax*2+0x58]
64012b79:	add    edx,edx
64012b7b:	sub    edx,edi
64012b7d:	js     0x64012b9b
64012b7f:	add    eax,0x1
64012b82:	cmp    eax,0xf
64012b85:	jbe    0x64012b74
64012b87:	test   edx,edx
64012b89:	mov    edi,DWORD PTR [esp+0xa0]
64012b90:	jle    0x64012ba3
64012b92:	test   edi,edi
64012b94:	je     0x64012b9b
64012b96:	cmp    ecx,0x1
64012b99:	je     0x64012ba3
64012b9b:	or     eax,0xffffffff
64012b9e:	jmp    0x64012ef5
64012ba3:	mov    WORD PTR [esp+0x7a],0x0
64012baa:	mov    eax,0x2
64012baf:	nop
64012bb0:	mov    cx,WORD PTR [esp+eax*1+0x78]
64012bb5:	add    cx,WORD PTR [esp+eax*1+0x58]
64012bba:	add    eax,0x2
64012bbd:	cmp    eax,0x1e
64012bc0:	mov    WORD PTR [esp+eax*1+0x78],cx
64012bc5:	jb     0x64012bb0
64012bc7:	mov    ecx,DWORD PTR [esp+0x1c]
64012bcb:	xor    eax,eax
64012bcd:	cmp    DWORD PTR [esp+0xa8],eax
64012bd4:	jbe    0x64012c07
64012bd6:	cmp    WORD PTR [ebp+eax*2+0x0],0x0
64012bdc:	je     0x64012bfb
64012bde:	movzx  edx,WORD PTR [ebp+eax*2+0x0]
64012be3:	movzx  edx,WORD PTR [esp+edx*2+0x78]
64012be8:	mov    WORD PTR [ecx+edx*2],ax
64012bec:	movzx  edx,WORD PTR [ebp+eax*2+0x0]
64012bf1:	add    WORD PTR [esp+edx*2+0x78],0x1
64012bf7:	lea    edx,[esp+edx*2+0x78]
64012bfb:	add    eax,0x1
64012bfe:	cmp    eax,DWORD PTR [esp+0xa8]
64012c05:	jb     0x64012bd6
64012c07:	mov    eax,edi
64012c09:	sub    eax,0x0
64012c0c:	mov    edx,0xffffffff
64012c11:	je     0x64012c54
64012c13:	sub    eax,0x1
64012c16:	je     0x64012c2e
64012c18:	mov    DWORD PTR [esp+0x2c],0x6403ff00
64012c20:	mov    DWORD PTR [esp+0x38],0x6403ff40
64012c28:	mov    DWORD PTR [esp+0x30],edx
64012c2c:	jmp    0x64012c64
64012c2e:	mov    eax,0x6403fe80
64012c33:	sub    eax,0x202
64012c38:	mov    DWORD PTR [esp+0x2c],eax
64012c3c:	mov    eax,0x6403fec0
64012c41:	sub    eax,0x202
64012c46:	mov    DWORD PTR [esp+0x38],eax
64012c4a:	mov    DWORD PTR [esp+0x30],0x100
64012c52:	jmp    0x64012c64
64012c54:	mov    DWORD PTR [esp+0x38],ecx
64012c58:	mov    DWORD PTR [esp+0x2c],ecx
64012c5c:	mov    DWORD PTR [esp+0x30],0x13
64012c64:	mov    eax,DWORD PTR [ebx]
64012c66:	mov    ecx,DWORD PTR [esp+0x14]
64012c6a:	mov    DWORD PTR [esp+0x24],eax
64012c6e:	mov    eax,0x1
64012c73:	shl    eax,cl
64012c75:	xor    ebp,ebp
64012c77:	xor    ebx,ebx
64012c79:	cmp    edi,0x1
64012c7c:	lea    ecx,[eax-0x1]
64012c7f:	mov    DWORD PTR [esp+0x18],esi
64012c83:	mov    DWORD PTR [esp+0x34],edx
64012c87:	mov    DWORD PTR [esp+0x44],eax
64012c8b:	mov    DWORD PTR [esp+0x28],eax
64012c8f:	mov    DWORD PTR [esp+0x40],ecx
64012c93:	jne    0x64012ca0
64012c95:	cmp    eax,0x5b0
64012c9a:	jae    0x64012ef0
64012ca0:	mov    edx,DWORD PTR [esp+0x1c]
64012ca4:	mov    DWORD PTR [esp+0x1c],edx
64012ca8:	jmp    0x64012cb0
64012caa:	lea    ebx,[ebx+0x0]
64012cb0:	mov    al,BYTE PTR [esp+0x18]
64012cb4:	mov    esi,DWORD PTR [esp+0x1c]
64012cb8:	mov    edx,DWORD PTR [esp+0x30]
64012cbc:	sub    al,bl
64012cbe:	mov    BYTE PTR [esp+0x11],al
64012cc2:	movzx  eax,WORD PTR [esi]
64012cc5:	movzx  ecx,ax
64012cc8:	cmp    ecx,edx
64012cca:	jge    0x64012cd8
64012ccc:	mov    BYTE PTR [esp+0x10],0x0
64012cd1:	mov    WORD PTR [esp+0x12],ax
64012cd6:	jmp    0x64012d05
64012cd8:	jle    0x64012cf9
64012cda:	movzx  eax,WORD PTR [esi]
64012cdd:	mov    ecx,DWORD PTR [esp+0x38]
64012ce1:	add    eax,eax
64012ce3:	mov    dl,BYTE PTR [eax+ecx*1]
64012ce6:	mov    ecx,DWORD PTR [esp+0x2c]
64012cea:	mov    BYTE PTR [esp+0x10],dl
64012cee:	mov    dx,WORD PTR [eax+ecx*1]
64012cf2:	mov    WORD PTR [esp+0x12],dx
64012cf7:	jmp    0x64012d05
64012cf9:	mov    BYTE PTR [esp+0x10],0x60
64012cfe:	mov    WORD PTR [esp+0x12],0x0
64012d05:	mov    ecx,DWORD PTR [esp+0x18]
64012d09:	mov    eax,DWORD PTR [esp+0x44]
64012d0d:	sub    ecx,ebx
64012d0f:	mov    edx,0x1
64012d14:	shl    edx,cl
64012d16:	mov    ecx,ebx
64012d18:	mov    edi,ebp
64012d1a:	shr    edi,cl
64012d1c:	mov    ecx,DWORD PTR [esp+0x24]
64012d20:	mov    DWORD PTR [esp+0x50],eax
64012d24:	lea    esi,[edx*4+0x0]
64012d2b:	add    edi,eax
64012d2d:	lea    ecx,[ecx+edi*4]
64012d30:	mov    edi,DWORD PTR [esp+0x10]
64012d34:	sub    eax,edx
64012d36:	sub    ecx,esi
64012d38:	test   eax,eax
64012d3a:	mov    DWORD PTR [ecx],edi
64012d3c:	jne    0x64012d34
64012d3e:	mov    edx,DWORD PTR [esp+0x18]
64012d42:	lea    ecx,[edx-0x1]
64012d45:	mov    eax,0x1
64012d4a:	shl    eax,cl
64012d4c:	test   ebp,eax
64012d4e:	je     0x64012d56
64012d50:	shr    eax,1
64012d52:	test   ebp,eax
64012d54:	jne    0x64012d50
64012d56:	test   eax,eax
64012d58:	je     0x64012d65
64012d5a:	lea    ecx,[eax-0x1]
64012d5d:	and    ecx,ebp
64012d5f:	add    ecx,eax
64012d61:	mov    ebp,ecx
64012d63:	jmp    0x64012d67
64012d65:	xor    ebp,ebp
64012d67:	add    WORD PTR [esp+edx*2+0x58],0xffff
64012d6e:	movzx  eax,WORD PTR [esp+edx*2+0x58]
64012d73:	add    DWORD PTR [esp+0x1c],0x2
64012d78:	test   ax,ax
64012d7b:	jne    0x64012d9a
64012d7d:	cmp    edx,DWORD PTR [esp+0x20]
64012d81:	je     0x64012e63
64012d87:	mov    edx,DWORD PTR [esp+0x1c]
64012d8b:	movzx  eax,WORD PTR [edx]
64012d8e:	mov    ecx,DWORD PTR [esp+0x54]
64012d92:	movzx  edx,WORD PTR [ecx+eax*2]
64012d96:	mov    DWORD PTR [esp+0x18],edx
64012d9a:	cmp    edx,DWORD PTR [esp+0x14]
64012d9e:	jbe    0x64012cb0
64012da4:	mov    esi,DWORD PTR [esp+0x40]
64012da8:	and    esi,ebp
64012daa:	cmp    esi,DWORD PTR [esp+0x34]
64012dae:	mov    DWORD PTR [esp+0x48],esi
64012db2:	je     0x64012cb0
64012db8:	test   ebx,ebx
64012dba:	jne    0x64012dc0
64012dbc:	mov    ebx,DWORD PTR [esp+0x14]
64012dc0:	mov    eax,DWORD PTR [esp+0x24]
64012dc4:	mov    ecx,DWORD PTR [esp+0x50]
64012dc8:	lea    edx,[eax+ecx*4]
64012dcb:	mov    ecx,DWORD PTR [esp+0x18]
64012dcf:	sub    ecx,ebx
64012dd1:	mov    DWORD PTR [esp+0x24],edx
64012dd5:	mov    eax,0x1
64012dda:	lea    edx,[ebx+ecx*1]
64012ddd:	shl    eax,cl
64012ddf:	cmp    edx,DWORD PTR [esp+0x20]
64012de3:	jae    0x64012e0e
64012de5:	lea    esi,[esp+edx*2+0x58]
64012de9:	lea    esp,[esp+0x0]
64012df0:	movzx  edi,WORD PTR [esi]
64012df3:	sub    eax,edi
64012df5:	test   eax,eax
64012df7:	jle    0x64012e0a
64012df9:	add    edx,0x1
64012dfc:	add    ecx,0x1
64012dff:	add    esi,0x2
64012e02:	add    eax,eax
64012e04:	cmp    edx,DWORD PTR [esp+0x20]
64012e08:	jb     0x64012df0
64012e0a:	mov    esi,DWORD PTR [esp+0x48]
64012e0e:	mov    eax,0x1
64012e13:	shl    eax,cl
64012e15:	add    DWORD PTR [esp+0x28],eax
64012e19:	cmp    DWORD PTR [esp+0xa0],0x1
64012e21:	mov    DWORD PTR [esp+0x44],eax
64012e25:	jne    0x64012e35
64012e27:	cmp    DWORD PTR [esp+0x28],0x5b0
64012e2f:	jae    0x64012ef0
64012e35:	mov    edx,esi
64012e37:	mov    esi,DWORD PTR [esp+0x3c]
64012e3b:	mov    eax,DWORD PTR [esi]
64012e3d:	mov    BYTE PTR [eax+edx*4],cl
64012e40:	mov    ecx,DWORD PTR [esi]
64012e42:	mov    al,BYTE PTR [esp+0x14]
64012e46:	mov    BYTE PTR [ecx+edx*4+0x1],al
64012e4a:	mov    eax,DWORD PTR [esi]
64012e4c:	mov    ecx,DWORD PTR [esp+0x24]
64012e50:	sub    ecx,eax
64012e52:	sar    ecx,0x2
64012e55:	mov    DWORD PTR [esp+0x34],edx
64012e59:	mov    WORD PTR [eax+edx*4+0x2],cx
64012e5e:	jmp    0x64012cb0
64012e63:	mov    edi,DWORD PTR [esp+0x3c]
64012e67:	mov    al,dl
64012e69:	sub    al,bl
64012e6b:	test   ebp,ebp
64012e6d:	mov    BYTE PTR [esp+0x10],0x40
64012e72:	mov    BYTE PTR [esp+0x11],al
64012e76:	mov    WORD PTR [esp+0x12],0x0
64012e7d:	je     0x64012ed5
64012e7f:	mov    esi,DWORD PTR [esp+0x24]
64012e83:	test   ebx,ebx
64012e85:	je     0x64012ea5
64012e87:	mov    ecx,DWORD PTR [esp+0x40]
64012e8b:	and    ecx,ebp
64012e8d:	cmp    ecx,DWORD PTR [esp+0x34]
64012e91:	je     0x64012ea5
64012e93:	mov    eax,DWORD PTR [esp+0x14]
64012e97:	mov    esi,DWORD PTR [edi]
64012e99:	xor    ebx,ebx
64012e9b:	mov    DWORD PTR [esp+0x18],eax
64012e9f:	mov    BYTE PTR [esp+0x11],al
64012ea3:	mov    edx,eax
64012ea5:	mov    ecx,ebx
64012ea7:	mov    eax,ebp
64012ea9:	shr    eax,cl
64012eab:	mov    ecx,DWORD PTR [esp+0x10]
64012eaf:	mov    DWORD PTR [esi+eax*4],ecx
64012eb2:	lea    ecx,[edx-0x1]
64012eb5:	mov    eax,0x1
64012eba:	shl    eax,cl
64012ebc:	test   ebp,eax
64012ebe:	je     0x64012ec6
64012ec0:	shr    eax,1
64012ec2:	test   ebp,eax
64012ec4:	jne    0x64012ec0
64012ec6:	test   eax,eax
64012ec8:	je     0x64012ed5
64012eca:	lea    ecx,[eax-0x1]
64012ecd:	and    ecx,ebp
64012ecf:	add    ecx,eax
64012ed1:	mov    ebp,ecx
64012ed3:	jne    0x64012e83
64012ed5:	mov    edx,DWORD PTR [esp+0x28]
64012ed9:	mov    ecx,DWORD PTR [esp+0x4c]
64012edd:	lea    eax,[edx*4+0x0]
64012ee4:	add    DWORD PTR [edi],eax
64012ee6:	mov    edx,DWORD PTR [esp+0x14]
64012eea:	mov    DWORD PTR [ecx],edx
64012eec:	xor    eax,eax
64012eee:	jmp    0x64012ef5
64012ef0:	mov    eax,0x1
64012ef5:	mov    ecx,DWORD PTR [esp+0x98]
64012efc:	pop    edi
64012efd:	pop    esi
64012efe:	pop    ebp
64012eff:	pop    ebx
64012f00:	xor    ecx,esp
64012f02:	call   0x64013d18
64012f07:	add    esp,0x8c
64012f0d:	ret    
64012f0e:	jmp    DWORD PTR ds:0x6402c080
64012f14:	jmp    DWORD PTR ds:0x6402c084
64012f1a:	jmp    DWORD PTR ds:0x6402c088
64012f20:	jmp    DWORD PTR ds:0x6402c0dc
64012f26:	jmp    DWORD PTR ds:0x6402c0e4
64012f2c:	push   0x44
64012f2e:	mov    eax,0x64022f25
64012f33:	call   0x64015b9b
64012f38:	push   0x6403ff80
64012f3d:	lea    ecx,[ebp-0x28]
64012f40:	call   0x64002920
64012f45:	and    DWORD PTR [ebp-0x4],0x0
64012f49:	lea    eax,[ebp-0x28]
64012f4c:	push   eax
64012f4d:	lea    ecx,[ebp-0x50]
64012f50:	call   0x64001350
64012f55:	push   0x64044194
64012f5a:	lea    eax,[ebp-0x50]
64012f5d:	push   eax
64012f5e:	mov    DWORD PTR [ebp-0x50],0x6402c2e8
64012f65:	call   0x64013884
64012f6a:	int3   
64012f6b:	push   0x44
64012f6d:	mov    eax,0x64022f48
64012f72:	call   0x64015b9b
64012f77:	push   0x6403ff90
64012f7c:	lea    ecx,[ebp-0x28]
64012f7f:	call   0x64002920
64012f84:	and    DWORD PTR [ebp-0x4],0x0
64012f88:	lea    eax,[ebp-0x28]
64012f8b:	push   eax
64012f8c:	lea    ecx,[ebp-0x50]
64012f8f:	call   0x64001350
64012f94:	push   0x64044158
64012f99:	lea    eax,[ebp-0x50]
64012f9c:	push   eax
64012f9d:	mov    DWORD PTR [ebp-0x50],0x6402c2f4
64012fa4:	call   0x64013884
64012fa9:	int3   
64012faa:	jmp    0x640138e7
64012faf:	push   edi
64012fb0:	push   0x6405211c
64012fb5:	mov    edi,ecx
64012fb7:	call   DWORD PTR ds:0x6402c030
64012fbd:	test   eax,eax
64012fbf:	jne    0x64012fda
64012fc1:	push   esi
64012fc2:	mov    esi,0x640538c0
64012fc7:	push   esi
64012fc8:	call   0x64013061
64012fcd:	add    esi,0x18
64012fd0:	cmp    esi,0x64053920
64012fd6:	pop    ecx
64012fd7:	jl     0x64012fc7
64012fd9:	pop    esi
64012fda:	mov    eax,edi
64012fdc:	pop    edi
64012fdd:	ret    
64012fde:	int3   
64012fdf:	int3   
64012fe0:	push   0x6405211c
64012fe5:	call   DWORD PTR ds:0x6402c07c
64012feb:	test   eax,eax
64012fed:	jge    0x64013008
64012fef:	push   esi
64012ff0:	mov    esi,0x640538c0
64012ff5:	push   esi
64012ff6:	call   0x6401306c
64012ffb:	add    esi,0x18
64012ffe:	cmp    esi,0x64053920
64013004:	pop    ecx
64013005:	jl     0x64012ff5
64013007:	pop    esi
64013008:	ret    
64013009:	mov    eax,DWORD PTR [esp+0x4]
6401300d:	and    eax,0x3
64013010:	push   esi
64013011:	mov    esi,ecx
64013013:	mov    DWORD PTR [esi],eax
64013015:	imul   eax,eax,0x18
64013018:	add    eax,0x640538c0
6401301d:	push   eax
6401301e:	call   0x64013077
64013023:	pop    ecx
64013024:	mov    eax,esi
64013026:	pop    esi
64013027:	ret    0x4
6401302a:	mov    eax,DWORD PTR [ecx]
6401302c:	imul   eax,eax,0x18
6401302f:	add    eax,0x640538c0
64013034:	push   eax
64013035:	call   0x64013082
6401303a:	pop    ecx
6401303b:	ret    
6401303c:	jmp    0x64013056
6401303e:	mov    ecx,DWORD PTR [eax*4+0x64053944]
64013045:	inc    eax
64013046:	test   ecx,ecx
64013048:	mov    ds:0x64052124,eax
6401304d:	je     0x6401305b
6401304f:	call   DWORD PTR [eax*4+0x64053940]
64013056:	mov    eax,ds:0x64052124
6401305b:	cmp    eax,0xa
6401305e:	jb     0x6401303e
64013060:	ret    
64013061:	push   DWORD PTR [esp+0x4]
64013065:	call   DWORD PTR ds:0x6402c16c
6401306b:	ret    
6401306c:	push   DWORD PTR [esp+0x4]
64013070:	call   DWORD PTR ds:0x6402c170
64013076:	ret    
64013077:	push   DWORD PTR [esp+0x4]
6401307b:	call   DWORD PTR ds:0x6402c174
64013081:	ret    
64013082:	push   DWORD PTR [esp+0x4]
64013086:	call   DWORD PTR ds:0x6402c178
6401308c:	ret    
6401308d:	push   ebp
6401308e:	mov    ebp,esp
64013090:	sub    esp,0xc
64013093:	mov    eax,ds:0x640521ac
64013098:	xor    eax,ebp
6401309a:	mov    DWORD PTR [ebp-0x4],eax
6401309d:	push   esi
6401309e:	xor    esi,esi
640130a0:	call   DWORD PTR ds:0x6402c184
640130a6:	push   0x7
640130a8:	lea    ecx,[ebp-0xc]
640130ab:	push   ecx
640130ac:	push   0x1004
640130b1:	push   eax
640130b2:	call   DWORD PTR ds:0x6402c180
640130b8:	test   eax,eax
640130ba:	je     0x640130db
640130bc:	mov    cl,BYTE PTR [ebp-0xc]
640130bf:	test   cl,cl
640130c1:	lea    eax,[ebp-0xc]
640130c4:	je     0x640130db
640130c6:	imul   esi,esi,0xa
640130c9:	movsx  ecx,cl
640130cc:	inc    eax
640130cd:	lea    esi,[esi+ecx*1-0x30]
640130d1:	mov    cl,BYTE PTR [eax]
640130d3:	test   cl,cl
640130d5:	jne    0x640130c6
640130d7:	test   esi,esi
640130d9:	jne    0x640130e3
640130db:	call   DWORD PTR ds:0x6402c17c
640130e1:	mov    esi,eax
640130e3:	mov    ecx,DWORD PTR [ebp-0x4]
640130e6:	mov    eax,esi
640130e8:	xor    ecx,ebp
640130ea:	pop    esi
640130eb:	call   0x64013d18
640130f0:	leave  
640130f1:	ret    
640130f2:	push   0x3
640130f4:	pop    eax
640130f5:	ret    
640130f6:	push   ebp
640130f7:	mov    ebp,esp
640130f9:	sub    esp,0x98
640130ff:	mov    eax,ds:0x640521ac
64013104:	xor    eax,ebp
64013106:	mov    DWORD PTR [ebp-0x4],eax
64013109:	lea    eax,[ebp-0x98]
6401310f:	push   eax
64013110:	mov    DWORD PTR [ebp-0x98],0x94
6401311a:	call   DWORD PTR ds:0x6402c188
64013120:	cmp    DWORD PTR [ebp-0x88],0x2
64013127:	jne    0x64013137
64013129:	cmp    DWORD PTR [ebp-0x94],0x5
64013130:	mov    eax,0x640130f2
64013135:	jae    0x6401313c
64013137:	mov    eax,0x6401308d
6401313c:	push   eax
6401313d:	push   0x64052184
64013142:	call   DWORD PTR ds:0x6402c10c
64013148:	call   DWORD PTR ds:0x64052184
6401314e:	mov    ecx,DWORD PTR [ebp-0x4]
64013151:	xor    ecx,ebp
64013153:	call   0x64013d18
64013158:	leave  
64013159:	ret    
6401315a:	push   esi
6401315b:	mov    esi,ecx
6401315d:	mov    eax,DWORD PTR [esi]
6401315f:	test   eax,eax
64013161:	je     0x6401316d
64013163:	push   eax
64013164:	call   0x640147cf
64013169:	and    DWORD PTR [esi],0x0
6401316c:	pop    ecx
6401316d:	and    DWORD PTR [esi+0x4],0x0
64013171:	and    DWORD PTR [esi+0x8],0x0
64013175:	pop    esi
64013176:	ret    
64013177:	push   esi
64013178:	push   0x18
6401317a:	mov    esi,ecx
6401317c:	push   0x0
6401317e:	push   esi
6401317f:	call   0x64015170
64013184:	add    esp,0xc
64013187:	mov    eax,esi
64013189:	pop    esi
6401318a:	ret    
6401318b:	push   0xc
6401318d:	push   0x64043b08
64013192:	call   0x640164d4
64013197:	and    DWORD PTR [ebp-0x4],0x0
6401319b:	push   ecx
6401319c:	call   DWORD PTR ds:0x6402c16c
640131a2:	and    DWORD PTR [ebp-0x1c],0x0
640131a6:	jmp    0x640131c6
640131a8:	mov    eax,DWORD PTR [ebp-0x14]
640131ab:	mov    eax,DWORD PTR [eax]
640131ad:	mov    eax,DWORD PTR [eax]
640131af:	xor    ecx,ecx
640131b1:	cmp    eax,0xc0000017
640131b6:	sete   cl
640131b9:	mov    eax,ecx
640131bb:	ret    
640131bc:	mov    esp,DWORD PTR [ebp-0x18]
640131bf:	mov    DWORD PTR [ebp-0x1c],0x8007000e
640131c6:	mov    DWORD PTR [ebp-0x4],0xfffffffe
640131cd:	mov    eax,DWORD PTR [ebp-0x1c]
640131d0:	call   0x64016519
640131d5:	ret    
640131d6:	mov    eax,DWORD PTR [esp+0x4]
640131da:	test   eax,eax
640131dc:	jne    0x640131e5
640131de:	mov    eax,0x80070057
640131e3:	jmp    0x640131f6
640131e5:	cmp    DWORD PTR [eax],0x2c
640131e8:	jne    0x640131de
640131ea:	and    DWORD PTR [eax+0x1c],0x0
640131ee:	lea    ecx,[eax+0x4]
640131f1:	call   0x6401318b
640131f6:	ret    0x4
640131f9:	mov    eax,DWORD PTR [esp+0x4]
640131fd:	test   eax,eax
640131ff:	jl     0x6401320e
64013201:	cmp    eax,DWORD PTR [ecx+0x4]
64013204:	jge    0x6401320e
64013206:	mov    ecx,DWORD PTR [ecx]
64013208:	lea    eax,[ecx+eax*2]
6401320b:	ret    0x4
6401320e:	push   0x0
64013210:	push   0x0
64013212:	push   0x1
64013214:	push   0xc000008c
64013219:	call   DWORD PTR ds:0x6402c18c
6401321f:	int3   
64013220:	mov    eax,DWORD PTR [esp+0x4]
64013224:	test   eax,eax
64013226:	jl     0x64013235
64013228:	cmp    eax,DWORD PTR [ecx+0x4]
6401322b:	jge    0x64013235
6401322d:	mov    ecx,DWORD PTR [ecx]
6401322f:	lea    eax,[ecx+eax*4]
64013232:	ret    0x4
64013235:	push   0x0
64013237:	push   0x0
64013239:	push   0x1
6401323b:	push   0xc000008c
64013240:	call   DWORD PTR ds:0x6402c18c
64013246:	int3   
64013247:	push   esi
64013248:	mov    esi,ecx
6401324a:	lea    ecx,[esi+0x4]
6401324d:	call   0x64013177
64013252:	xor    eax,eax
64013254:	mov    DWORD PTR [esi+0x20],eax
64013257:	mov    DWORD PTR [esi+0x24],eax
6401325a:	mov    DWORD PTR [esi+0x28],eax
6401325d:	mov    eax,esi
6401325f:	pop    esi
64013260:	ret    
64013261:	push   esi
64013262:	mov    esi,DWORD PTR [esp+0x8]
64013266:	test   esi,esi
64013268:	jne    0x64013271
6401326a:	mov    eax,0x80070057
6401326f:	jmp    0x640132bd
64013271:	mov    eax,DWORD PTR [esi]
64013273:	test   eax,eax
64013275:	je     0x640132bb
64013277:	cmp    eax,0x2c
6401327a:	jne    0x6401326a
6401327c:	push   edi
6401327d:	xor    edi,edi
6401327f:	cmp    DWORD PTR [esi+0x24],edi
64013282:	jle    0x640132a5
64013284:	push   ebx
64013285:	lea    ebx,[esi+0x20]
64013288:	push   edi
64013289:	mov    ecx,ebx
6401328b:	call   0x640131f9
64013290:	movzx  eax,WORD PTR [eax]
64013293:	push   DWORD PTR [esp+0x14]
64013297:	push   eax
64013298:	call   DWORD PTR ds:0x6402c1e4
6401329e:	inc    edi
6401329f:	cmp    edi,DWORD PTR [esi+0x24]
640132a2:	jl     0x64013288
640132a4:	pop    ebx
640132a5:	lea    ecx,[esi+0x20]
640132a8:	call   0x6401315a
640132ad:	lea    eax,[esi+0x4]
640132b0:	push   eax
640132b1:	call   DWORD PTR ds:0x6402c170
640132b7:	and    DWORD PTR [esi],0x0
640132ba:	pop    edi
640132bb:	xor    eax,eax
640132bd:	pop    esi
640132be:	ret    0x8
640132c1:	push   esi
640132c2:	mov    esi,ecx
640132c4:	cmp    BYTE PTR [esi+0x4],0x0
640132c8:	je     0x640132d6
640132ca:	push   DWORD PTR [esi]
640132cc:	call   DWORD PTR ds:0x6402c178
640132d2:	mov    BYTE PTR [esi+0x4],0x0
640132d6:	pop    esi
640132d7:	ret    
640132d8:	push   esi
640132d9:	mov    esi,ecx
640132db:	lea    ecx,[esi+0x18]
640132de:	call   0x64013177
640132e3:	xor    eax,eax
640132e5:	mov    DWORD PTR [esi+0x30],eax
640132e8:	mov    DWORD PTR [esi+0x34],eax
640132eb:	mov    DWORD PTR [esi+0x38],eax
640132ee:	mov    eax,esi
640132f0:	pop    esi
640132f1:	ret    
640132f2:	push   esi
640132f3:	mov    esi,ecx
640132f5:	lea    eax,[esi+0x18]
640132f8:	push   eax
640132f9:	call   DWORD PTR ds:0x6402c170
640132ff:	lea    ecx,[esi+0x30]
64013302:	pop    esi
64013303:	jmp    0x6401315a
64013308:	push   ebp
64013309:	mov    ebp,esp
6401330b:	push   ecx
6401330c:	push   ecx
6401330d:	push   esi
6401330e:	mov    esi,ecx
64013310:	lea    eax,[esi+0x18]
64013313:	push   eax
64013314:	mov    DWORD PTR [ebp-0x8],eax
64013317:	call   DWORD PTR ds:0x6402c174
6401331d:	mov    eax,DWORD PTR [esi+0x34]
64013320:	mov    ecx,DWORD PTR [ebp+0x8]
64013323:	cmp    ecx,eax
64013325:	mov    BYTE PTR [ebp-0x4],0x1
64013329:	jg     0x6401334f
6401332b:	test   ecx,ecx
6401332d:	jl     0x6401334f
6401332f:	cmp    ecx,eax
64013331:	jne    0x64013342
64013333:	mov    esi,DWORD PTR [esi+0x8]
64013336:	lea    ecx,[ebp-0x8]
64013339:	call   0x640132c1
6401333e:	mov    eax,esi
64013340:	jmp    0x64013359
64013342:	push   ecx
64013343:	lea    ecx,[esi+0x30]
64013346:	call   0x64013220
6401334b:	mov    esi,DWORD PTR [eax]
6401334d:	jmp    0x64013336
6401334f:	lea    ecx,[ebp-0x8]
64013352:	call   0x640132c1
64013357:	xor    eax,eax
64013359:	pop    esi
6401335a:	leave  
6401335b:	ret    0x4
6401335e:	push   esi
6401335f:	mov    esi,ecx
64013361:	call   0x64013247
64013366:	push   esi
64013367:	mov    DWORD PTR [esi],0x2c
6401336d:	call   0x640131d6
64013372:	test   eax,eax
64013374:	jge    0x64013380
64013376:	mov    BYTE PTR ds:0x64054510,0x1
6401337d:	and    DWORD PTR [esi],0x0
64013380:	mov    eax,esi
64013382:	pop    esi
64013383:	ret    
64013384:	push   ebp
64013385:	lea    ebp,[esp-0x78]
64013389:	sub    esp,0x98
6401338f:	mov    eax,ds:0x640521ac
64013394:	xor    eax,ebp
64013396:	mov    DWORD PTR [ebp+0x74],eax
64013399:	push   esi
6401339a:	mov    esi,ecx
6401339c:	call   0x640132d8
640133a1:	mov    eax,0x64000000
640133a6:	push   0x94
640133ab:	mov    DWORD PTR [esi+0x8],eax
640133ae:	mov    DWORD PTR [esi+0x4],eax
640133b1:	lea    eax,[ebp-0x20]
640133b4:	push   0x0
640133b6:	push   eax
640133b7:	mov    DWORD PTR [esi],0x3c
640133bd:	mov    BYTE PTR [esi+0xc],0x0
640133c1:	call   0x64015170
640133c6:	add    esp,0xc
640133c9:	lea    eax,[ebp-0x20]
640133cc:	push   eax
640133cd:	mov    DWORD PTR [ebp-0x20],0x94
640133d4:	call   DWORD PTR ds:0x6402c188
640133da:	cmp    DWORD PTR [ebp-0x10],0x2
640133de:	jne    0x640133e8
640133e0:	cmp    DWORD PTR [ebp-0x1c],0x5
640133e4:	jb     0x64013400
640133e6:	jmp    0x640133fc
640133e8:	cmp    DWORD PTR [ebp-0x10],0x1
640133ec:	jne    0x64013400
640133ee:	cmp    DWORD PTR [ebp-0x1c],0x4
640133f2:	ja     0x640133fc
640133f4:	jne    0x64013400
640133f6:	cmp    DWORD PTR [ebp-0x18],0x0
640133fa:	jbe    0x64013400
640133fc:	mov    BYTE PTR [esi+0xc],0x1
64013400:	lea    ecx,[esi+0x18]
64013403:	mov    DWORD PTR [esi+0x10],0x800
6401340a:	mov    DWORD PTR [esi+0x14],0x6403ffc0
64013411:	call   0x6401318b
64013416:	test   eax,eax
64013418:	jge    0x64013421
6401341a:	mov    BYTE PTR ds:0x64054510,0x1
64013421:	mov    ecx,DWORD PTR [ebp+0x74]
64013424:	mov    eax,esi
64013426:	xor    ecx,ebp
64013428:	pop    esi
64013429:	call   0x64013d18
6401342e:	add    ebp,0x78
64013431:	leave  
64013432:	ret    
64013433:	push   esi
64013434:	push   DWORD PTR ds:0x64053974
6401343a:	mov    esi,ecx
6401343c:	push   esi
6401343d:	call   0x64013261
64013442:	lea    ecx,[esi+0x20]
64013445:	pop    esi
64013446:	jmp    0x6401315a
6401344b:	cmp    BYTE PTR [ecx+0x8],0x0
6401344f:	mov    DWORD PTR [ecx],0x6403ffd0
64013455:	je     0x64013465
64013457:	mov    ecx,DWORD PTR [ecx+0x4]
6401345a:	test   ecx,ecx
6401345c:	je     0x64013465
6401345e:	push   ecx
6401345f:	call   DWORD PTR ds:0x6402c190
64013465:	ret    
64013466:	push   DWORD PTR [esp+0x4]
6401346a:	push   0x0
6401346c:	push   DWORD PTR [ecx+0x4]
6401346f:	call   DWORD PTR ds:0x6402c194
64013475:	ret    0x4
64013478:	cmp    DWORD PTR [esp+0x4],0x0
6401347d:	je     0x6401348e
6401347f:	push   DWORD PTR [esp+0x4]
64013483:	push   0x0
64013485:	push   DWORD PTR [ecx+0x4]
64013488:	call   DWORD PTR ds:0x6402c198
6401348e:	ret    0x4
64013491:	push   ebp
64013492:	mov    ebp,esp
64013494:	xor    eax,eax
64013496:	cmp    DWORD PTR [ebp+0x8],eax
64013499:	jne    0x640134a4
6401349b:	push   DWORD PTR [ebp+0xc]
6401349e:	mov    eax,DWORD PTR [ecx]
640134a0:	call   DWORD PTR [eax]
640134a2:	jmp    0x640134c5
640134a4:	cmp    DWORD PTR [ebp+0xc],eax
640134a7:	jne    0x640134b5
640134a9:	push   DWORD PTR [ebp+0x8]
640134ac:	mov    eax,DWORD PTR [ecx]
640134ae:	call   DWORD PTR [eax+0x4]
640134b1:	xor    eax,eax
640134b3:	jmp    0x640134c5
640134b5:	push   DWORD PTR [ebp+0xc]
640134b8:	push   DWORD PTR [ebp+0x8]
640134bb:	push   eax
640134bc:	push   DWORD PTR [ecx+0x4]
640134bf:	call   DWORD PTR ds:0x6402c19c
640134c5:	pop    ebp
640134c6:	ret    0x8
640134c9:	push   DWORD PTR [esp+0x4]
640134cd:	push   0x0
640134cf:	push   DWORD PTR [ecx+0x4]
640134d2:	call   DWORD PTR ds:0x6402c1a0
640134d8:	ret    0x4
640134db:	push   esi
640134dc:	mov    esi,ecx
640134de:	call   0x6401344b
640134e3:	test   BYTE PTR [esp+0x8],0x1
640134e8:	je     0x640134f1
640134ea:	push   esi
640134eb:	call   0x64013656
640134f0:	pop    ecx
640134f1:	mov    eax,esi
640134f3:	pop    esi
640134f4:	ret    0x4
640134f7:	mov    eax,ecx
640134f9:	mov    ecx,DWORD PTR [esp+0x4]
640134fd:	mov    DWORD PTR [eax+0x4],ecx
64013500:	mov    DWORD PTR [eax],0x6403ffe4
64013506:	xor    ecx,ecx
64013508:	mov    DWORD PTR [eax+0x14],0x2
6401350f:	mov    DWORD PTR [eax+0xc],ecx
64013512:	mov    DWORD PTR [eax+0x10],ecx
64013515:	mov    WORD PTR [eax+0x18],cx
64013519:	mov    WORD PTR [eax+0x1a],cx
6401351d:	mov    DWORD PTR [eax+0x8],eax
64013520:	ret    0x4
64013523:	mov    eax,DWORD PTR [esp+0x8]
64013527:	mul    DWORD PTR [esp+0xc]
6401352b:	test   edx,edx
6401352d:	ja     0x64013534
6401352f:	cmp    eax,0xffffffff
64013532:	jbe    0x6401353a
64013534:	mov    eax,0x80070057
64013539:	ret    
6401353a:	mov    ecx,DWORD PTR [esp+0x4]
6401353e:	mov    DWORD PTR [ecx],eax
64013540:	xor    eax,eax
64013542:	ret    
64013543:	mov    ecx,DWORD PTR [ecx+0x4]
64013546:	mov    eax,DWORD PTR [ecx]
64013548:	jmp    DWORD PTR [eax+0x4]
6401354b:	xor    edx,edx
6401354d:	lea    eax,[ecx+0x14]
64013550:	inc    edx
64013551:	lock xadd DWORD PTR [eax],edx
64013555:	lea    eax,[ecx+0x8]
64013558:	ret    
64013559:	mov    eax,ecx
6401355b:	ret    
6401355c:	test   BYTE PTR [esp+0x4],0x1
64013561:	push   esi
64013562:	mov    esi,ecx
64013564:	mov    DWORD PTR [esi],0x6403ffe4
6401356a:	je     0x64013573
6401356c:	push   esi
6401356d:	call   0x64013656
64013572:	pop    ecx
64013573:	mov    eax,esi
64013575:	pop    esi
64013576:	ret    0x4
64013579:	mov    eax,DWORD PTR [esp+0x8]
6401357d:	mov    ecx,DWORD PTR [esp+0xc]
64013581:	or     edx,0xffffffff
64013584:	sub    edx,eax
64013586:	cmp    edx,ecx
64013588:	jae    0x64013590
6401358a:	mov    eax,0x80070057
6401358f:	ret    
64013590:	add    eax,ecx
64013592:	mov    ecx,DWORD PTR [esp+0x4]
64013596:	mov    DWORD PTR [ecx],eax
64013598:	xor    eax,eax
6401359a:	ret    
6401359b:	push   ebp
6401359c:	mov    ebp,esp
6401359e:	push   esi
6401359f:	mov    esi,DWORD PTR [ebp+0x8]
640135a2:	push   edi
640135a3:	push   DWORD PTR [ebp+0xc]
640135a6:	add    esi,0x8
640135a9:	and    esi,0xfffffff8
640135ac:	lea    eax,[ebp+0x8]
640135af:	push   esi
640135b0:	push   eax
640135b1:	mov    edi,ecx
640135b3:	call   0x6400bf80
640135b8:	add    esp,0xc
640135bb:	test   eax,eax
640135bd:	jl     0x640135f5
640135bf:	push   DWORD PTR [ebp+0x8]
640135c2:	lea    eax,[ebp+0x8]
640135c5:	push   0x10
640135c7:	push   eax
640135c8:	call   0x64013579
640135cd:	add    esp,0xc
640135d0:	test   eax,eax
640135d2:	jl     0x640135f5
640135d4:	mov    ecx,DWORD PTR [edi+0x4]
640135d7:	push   DWORD PTR [ebp+0x8]
640135da:	mov    eax,DWORD PTR [ecx]
640135dc:	call   DWORD PTR [eax]
640135de:	test   eax,eax
640135e0:	je     0x640135f5
640135e2:	dec    esi
640135e3:	and    DWORD PTR [eax+0x4],0x0
640135e7:	mov    DWORD PTR [eax],edi
640135e9:	mov    DWORD PTR [eax+0xc],0x1
640135f0:	mov    DWORD PTR [eax+0x8],esi
640135f3:	jmp    0x640135f7
640135f5:	xor    eax,eax
640135f7:	pop    edi
640135f8:	pop    esi
640135f9:	pop    ebp
640135fa:	ret    0x8
640135fd:	push   ebp
640135fe:	mov    ebp,esp
64013600:	push   esi
64013601:	mov    esi,DWORD PTR [ebp+0xc]
64013604:	push   edi
64013605:	push   DWORD PTR [ebp+0x10]
64013608:	add    esi,0x8
6401360b:	and    esi,0xfffffff8
6401360e:	lea    eax,[ebp+0xc]
64013611:	push   esi
64013612:	push   eax
64013613:	mov    edi,ecx
64013615:	call   0x64013523
6401361a:	add    esp,0xc
6401361d:	test   eax,eax
6401361f:	jl     0x6401364e
64013621:	push   DWORD PTR [ebp+0xc]
64013624:	lea    eax,[ebp+0xc]
64013627:	push   0x10
64013629:	push   eax
6401362a:	call   0x64006830
6401362f:	add    esp,0xc
64013632:	test   eax,eax
64013634:	jl     0x6401364e
64013636:	push   DWORD PTR [ebp+0xc]
64013639:	mov    ecx,DWORD PTR [edi+0x4]
6401363c:	push   DWORD PTR [ebp+0x8]
6401363f:	mov    eax,DWORD PTR [ecx]
64013641:	call   DWORD PTR [eax+0x8]
64013644:	test   eax,eax
64013646:	je     0x6401364e
64013648:	dec    esi
64013649:	mov    DWORD PTR [eax+0x8],esi
6401364c:	jmp    0x64013650
6401364e:	xor    eax,eax
64013650:	pop    edi
64013651:	pop    esi
64013652:	pop    ebp
64013653:	ret    0xc
64013656:	jmp    0x640147cf
6401365b:	mov    eax,ecx
6401365d:	and    DWORD PTR [eax+0x4],0x0
64013661:	and    DWORD PTR [eax+0x8],0x0
64013665:	mov    DWORD PTR [eax],0x64040000
6401366b:	ret    
6401366c:	push   ebx
6401366d:	mov    ebx,DWORD PTR [esp+0x8]
64013671:	push   esi
64013672:	push   edi
64013673:	mov    edi,ecx
64013675:	mov    DWORD PTR [edi],0x64040000
6401367b:	mov    eax,DWORD PTR [ebx]
6401367d:	test   eax,eax
6401367f:	je     0x640136a7
64013681:	push   eax
64013682:	call   0x64015b10
64013687:	mov    esi,eax
64013689:	inc    esi
6401368a:	push   esi
6401368b:	call   0x640148ce
64013690:	test   eax,eax
64013692:	pop    ecx
64013693:	pop    ecx
64013694:	mov    DWORD PTR [edi+0x4],eax
64013697:	je     0x640136ab
64013699:	push   DWORD PTR [ebx]
6401369b:	push   esi
6401369c:	push   eax
6401369d:	call   0x6401652d
640136a2:	add    esp,0xc
640136a5:	jmp    0x640136ab
640136a7:	and    DWORD PTR [edi+0x4],0x0
640136ab:	mov    DWORD PTR [edi+0x8],0x1
640136b2:	mov    eax,edi
640136b4:	pop    edi
640136b5:	pop    esi
640136b6:	pop    ebx
640136b7:	ret    0x4
640136ba:	mov    eax,ecx
640136bc:	mov    ecx,DWORD PTR [esp+0x4]
640136c0:	mov    DWORD PTR [eax],0x64040000
640136c6:	mov    ecx,DWORD PTR [ecx]
640136c8:	and    DWORD PTR [eax+0x8],0x0
640136cc:	mov    DWORD PTR [eax+0x4],ecx
640136cf:	ret    0x8
640136d2:	push   ebx
640136d3:	mov    ebx,DWORD PTR [esp+0x8]
640136d7:	push   esi
640136d8:	mov    esi,ecx
640136da:	mov    DWORD PTR [esi],0x64040000
640136e0:	mov    eax,DWORD PTR [ebx+0x8]
640136e3:	mov    DWORD PTR [esi+0x8],eax
640136e6:	test   eax,eax
640136e8:	mov    eax,DWORD PTR [ebx+0x4]
640136eb:	push   edi
640136ec:	je     0x6401371f
640136ee:	test   eax,eax
640136f0:	je     0x64013719
640136f2:	push   eax
640136f3:	call   0x64015b10
640136f8:	mov    edi,eax
640136fa:	inc    edi
640136fb:	push   edi
640136fc:	call   0x640148ce
64013701:	test   eax,eax
64013703:	pop    ecx
64013704:	pop    ecx
64013705:	mov    DWORD PTR [esi+0x4],eax
64013708:	je     0x64013722
6401370a:	push   DWORD PTR [ebx+0x4]
6401370d:	push   edi
6401370e:	push   eax
6401370f:	call   0x6401652d
64013714:	add    esp,0xc
64013717:	jmp    0x64013722
64013719:	and    DWORD PTR [esi+0x4],0x0
6401371d:	jmp    0x64013722
6401371f:	mov    DWORD PTR [esi+0x4],eax
64013722:	pop    edi
64013723:	mov    eax,esi
64013725:	pop    esi
64013726:	pop    ebx
64013727:	ret    0x4
6401372a:	cmp    DWORD PTR [ecx+0x8],0x0
6401372e:	mov    DWORD PTR [ecx],0x64040000
64013734:	je     0x6401373f
64013736:	push   DWORD PTR [ecx+0x4]
64013739:	call   0x640147cf
6401373e:	pop    ecx
6401373f:	ret    
64013740:	mov    eax,DWORD PTR [ecx+0x4]
64013743:	test   eax,eax
64013745:	jne    0x6401374c
64013747:	mov    eax,0x64040008
6401374c:	ret    
6401374d:	push   esi
6401374e:	mov    esi,ecx
64013750:	call   0x6401372a
64013755:	test   BYTE PTR [esp+0x8],0x1
6401375a:	je     0x64013763
6401375c:	push   esi
6401375d:	call   0x64013656
64013762:	pop    ecx
64013763:	mov    eax,esi
64013765:	pop    esi
64013766:	ret    0x4
64013769:	push   ecx
6401376a:	mov    DWORD PTR [ecx],0x64040020
64013770:	call   0x64016592
64013775:	pop    ecx
64013776:	ret    
64013777:	push   esi
64013778:	mov    esi,ecx
6401377a:	call   0x64013769
6401377f:	test   BYTE PTR [esp+0x8],0x1
64013784:	je     0x6401378d
64013786:	push   esi
64013787:	call   0x64013656
6401378c:	pop    ecx
6401378d:	mov    eax,esi
6401378f:	pop    esi
64013790:	ret    0x4
64013793:	mov    eax,DWORD PTR [esp+0x4]
64013797:	add    ecx,0x9
6401379a:	push   ecx
6401379b:	add    eax,0x9
6401379e:	push   eax
6401379f:	call   0x64016610
640137a4:	neg    eax
640137a6:	pop    ecx
640137a7:	sbb    eax,eax
640137a9:	pop    ecx
640137aa:	inc    eax
640137ab:	ret    0x4
640137ae:	push   ebp
640137af:	mov    ebp,esp
640137b1:	push   esi
640137b2:	mov    esi,DWORD PTR [ebp+0x14]
640137b5:	push   edi
640137b6:	xor    edi,edi
640137b8:	cmp    esi,edi
640137ba:	jne    0x640137c0
640137bc:	xor    eax,eax
640137be:	jmp    0x64013825
640137c0:	cmp    DWORD PTR [ebp+0x8],edi
640137c3:	jne    0x640137e0
640137c5:	call   0x640166d3
640137ca:	push   0x16
640137cc:	pop    esi
640137cd:	mov    DWORD PTR [eax],esi
640137cf:	push   edi
640137d0:	push   edi
640137d1:	push   edi
640137d2:	push   edi
640137d3:	push   edi
640137d4:	call   0x64013e62
640137d9:	add    esp,0x14
640137dc:	mov    eax,esi
640137de:	jmp    0x64013825
640137e0:	cmp    DWORD PTR [ebp+0x10],edi
640137e3:	je     0x640137fb
640137e5:	cmp    DWORD PTR [ebp+0xc],esi
640137e8:	jb     0x640137fb
640137ea:	push   esi
640137eb:	push   DWORD PTR [ebp+0x10]
640137ee:	push   DWORD PTR [ebp+0x8]
640137f1:	call   0x640151f0
640137f6:	add    esp,0xc
640137f9:	jmp    0x640137bc
640137fb:	push   DWORD PTR [ebp+0xc]
640137fe:	push   edi
640137ff:	push   DWORD PTR [ebp+0x8]
64013802:	call   0x64015170
64013807:	add    esp,0xc
6401380a:	cmp    DWORD PTR [ebp+0x10],edi
6401380d:	je     0x640137c5
6401380f:	cmp    DWORD PTR [ebp+0xc],esi
64013812:	jae    0x64013822
64013814:	call   0x640166d3
64013819:	push   0x22
6401381b:	pop    ecx
6401381c:	mov    DWORD PTR [eax],ecx
6401381e:	mov    esi,ecx
64013820:	jmp    0x640137cf
64013822:	push   0x16
64013824:	pop    eax
64013825:	pop    edi
64013826:	pop    esi
64013827:	pop    ebp
64013828:	ret    
64013829:	push   ebp
6401382a:	mov    ebp,esp
6401382c:	mov    eax,DWORD PTR [ebp+0x14]
6401382f:	push   esi
64013830:	push   edi
64013831:	xor    edi,edi
64013833:	cmp    eax,edi
64013835:	je     0x6401387e
64013837:	cmp    DWORD PTR [ebp+0x8],edi
6401383a:	jne    0x64013857
6401383c:	call   0x640166d3
64013841:	push   0x16
64013843:	pop    esi
64013844:	mov    DWORD PTR [eax],esi
64013846:	push   edi
64013847:	push   edi
64013848:	push   edi
64013849:	push   edi
6401384a:	push   edi
6401384b:	call   0x64013e62
64013850:	add    esp,0x14
64013853:	mov    eax,esi
64013855:	jmp    0x64013880
64013857:	cmp    DWORD PTR [ebp+0x10],edi
6401385a:	je     0x6401383c
6401385c:	cmp    DWORD PTR [ebp+0xc],eax
6401385f:	jae    0x6401386f
64013861:	call   0x640166d3
64013866:	push   0x22
64013868:	pop    ecx
64013869:	mov    DWORD PTR [eax],ecx
6401386b:	mov    esi,ecx
6401386d:	jmp    0x64013846
6401386f:	push   eax
64013870:	push   DWORD PTR [ebp+0x10]
64013873:	push   DWORD PTR [ebp+0x8]
64013876:	call   0x64016720
6401387b:	add    esp,0xc
6401387e:	xor    eax,eax
64013880:	pop    edi
64013881:	pop    esi
64013882:	pop    ebp
64013883:	ret    
64013884:	push   ebp
64013885:	mov    ebp,esp
64013887:	sub    esp,0x20
6401388a:	mov    eax,DWORD PTR [ebp+0x8]
6401388d:	push   esi
6401388e:	push   edi
6401388f:	push   0x8
64013891:	pop    ecx
64013892:	mov    esi,0x64040024
64013897:	lea    edi,[ebp-0x20]
6401389a:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
6401389c:	mov    DWORD PTR [ebp-0x8],eax
6401389f:	mov    eax,DWORD PTR [ebp+0xc]
640138a2:	test   eax,eax
640138a4:	pop    edi
640138a5:	mov    DWORD PTR [ebp-0x4],eax
640138a8:	pop    esi
640138a9:	je     0x640138b7
640138ab:	test   BYTE PTR [eax],0x8
640138ae:	je     0x640138b7
640138b0:	mov    DWORD PTR [ebp-0xc],0x1994000
640138b7:	lea    eax,[ebp-0xc]
640138ba:	push   eax
640138bb:	push   DWORD PTR [ebp-0x10]
640138be:	push   DWORD PTR [ebp-0x1c]
640138c1:	push   DWORD PTR [ebp-0x20]
640138c4:	call   DWORD PTR ds:0x6402c18c
640138ca:	leave  
640138cb:	ret    0x8
640138ce:	push   esi
640138cf:	push   0x1
640138d1:	push   0x640521a8
640138d6:	mov    esi,ecx
640138d8:	call   0x640136ba
640138dd:	mov    DWORD PTR [esi],0x6402c2ac
640138e3:	mov    eax,esi
640138e5:	pop    esi
640138e6:	ret    
640138e7:	push   ebp
640138e8:	mov    ebp,esp
640138ea:	sub    esp,0xc
640138ed:	jmp    0x640138fc
640138ef:	push   DWORD PTR [ebp+0x8]
640138f2:	call   0x64016a8f
640138f7:	test   eax,eax
640138f9:	pop    ecx
640138fa:	je     0x6401390b
640138fc:	push   DWORD PTR [ebp+0x8]
640138ff:	call   0x640148ce
64013904:	test   eax,eax
64013906:	pop    ecx
64013907:	je     0x640138ef
64013909:	leave  
6401390a:	ret    
6401390b:	test   BYTE PTR ds:0x64053a0c,0x1
64013912:	mov    esi,0x64053a00
64013917:	jne    0x64013932
64013919:	or     DWORD PTR ds:0x64053a0c,0x1
64013920:	mov    ecx,esi
64013922:	call   0x640138ce
64013927:	push   0x6402bed7
6401392c:	call   0x64013fba
64013931:	pop    ecx
64013932:	push   esi
64013933:	lea    ecx,[ebp-0xc]
64013936:	call   0x640136d2
6401393b:	push   0x640441cc
64013940:	lea    eax,[ebp-0xc]
64013943:	push   eax
64013944:	mov    DWORD PTR [ebp-0xc],0x6402c2ac
6401394b:	call   0x64013884
64013950:	int3   
64013951:	push   ebp
64013952:	mov    ebp,esp
64013954:	push   ecx
64013955:	push   ebx
64013956:	mov    eax,DWORD PTR [ebp+0xc]
64013959:	add    eax,0xc
6401395c:	mov    DWORD PTR [ebp-0x4],eax
6401395f:	mov    ebx,DWORD PTR fs:0x0
64013966:	mov    eax,DWORD PTR [ebx]
64013968:	mov    fs:0x0,eax
6401396e:	mov    eax,DWORD PTR [ebp+0x8]
64013971:	mov    ebx,DWORD PTR [ebp+0xc]
64013974:	mov    ebp,DWORD PTR [ebp-0x4]
64013977:	mov    esp,DWORD PTR [ebx-0x4]
6401397a:	jmp    eax
6401397c:	pop    ebx
6401397d:	leave  
6401397e:	ret    0x8
64013981:	pop    eax
64013982:	pop    ecx
64013983:	xchg   DWORD PTR [esp],eax
64013986:	jmp    eax
64013988:	push   ebp
64013989:	mov    ebp,esp
6401398b:	push   ecx
6401398c:	push   ecx
6401398d:	push   ebx
6401398e:	push   esi
6401398f:	push   edi
64013990:	mov    esi,DWORD PTR fs:0x0
64013997:	mov    DWORD PTR [ebp-0x4],esi
6401399a:	mov    DWORD PTR [ebp-0x8],0x640139b1
640139a1:	push   0x0
640139a3:	push   DWORD PTR [ebp+0xc]
640139a6:	push   DWORD PTR [ebp-0x8]
640139a9:	push   DWORD PTR [ebp+0x8]
640139ac:	call   0x64022e8c
640139b1:	mov    eax,DWORD PTR [ebp+0xc]
640139b4:	mov    eax,DWORD PTR [eax+0x4]
640139b7:	and    eax,0xfffffffd
640139ba:	mov    ecx,DWORD PTR [ebp+0xc]
640139bd:	mov    DWORD PTR [ecx+0x4],eax
640139c0:	mov    edi,DWORD PTR fs:0x0
640139c7:	mov    ebx,DWORD PTR [ebp-0x4]
640139ca:	mov    DWORD PTR [ebx],edi
640139cc:	mov    DWORD PTR fs:0x0,ebx
640139d3:	pop    edi
640139d4:	pop    esi
640139d5:	pop    ebx
640139d6:	leave  
640139d7:	ret    0x8
640139da:	push   ebp
640139db:	mov    ebp,esp
640139dd:	sub    esp,0x8
640139e0:	push   ebx
640139e1:	push   esi
640139e2:	push   edi
640139e3:	cld    
640139e4:	mov    DWORD PTR [ebp-0x4],eax
640139e7:	xor    eax,eax
640139e9:	push   eax
640139ea:	push   eax
640139eb:	push   eax
640139ec:	push   DWORD PTR [ebp-0x4]
640139ef:	push   DWORD PTR [ebp+0x14]
640139f2:	push   DWORD PTR [ebp+0x10]
640139f5:	push   DWORD PTR [ebp+0xc]
640139f8:	push   DWORD PTR [ebp+0x8]
640139fb:	call   0x64017657
64013a00:	add    esp,0x20
64013a03:	mov    DWORD PTR [ebp-0x8],eax
64013a06:	pop    edi
64013a07:	pop    esi
64013a08:	pop    ebx
64013a09:	mov    eax,DWORD PTR [ebp-0x8]
64013a0c:	mov    esp,ebp
64013a0e:	pop    ebp
64013a0f:	ret    
64013a10:	push   esi
64013a11:	cld    
64013a12:	mov    esi,DWORD PTR [esp+0xc]
64013a16:	mov    ecx,DWORD PTR [esi+0x8]
64013a19:	xor    ecx,esi
64013a1b:	call   0x64013d18
64013a20:	push   0x0
64013a22:	push   esi
64013a23:	push   DWORD PTR [esi+0x14]
64013a26:	push   DWORD PTR [esi+0xc]
64013a29:	push   0x0
64013a2b:	push   DWORD PTR [esp+0x24]
64013a2f:	push   DWORD PTR [esi+0x10]
64013a32:	push   DWORD PTR [esp+0x24]
64013a36:	call   0x64017657
64013a3b:	add    esp,0x20
64013a3e:	pop    esi
64013a3f:	ret    
64013a40:	push   ebp
64013a41:	mov    ebp,esp
64013a43:	sub    esp,0x38
64013a46:	push   ebx
64013a47:	cmp    DWORD PTR [ebp+0x8],0x123
64013a4e:	jne    0x64013a62
64013a50:	mov    eax,0x64013ae9
64013a55:	mov    ecx,DWORD PTR [ebp+0xc]
64013a58:	mov    DWORD PTR [ecx],eax
64013a5a:	xor    eax,eax
64013a5c:	inc    eax
64013a5d:	jmp    0x64013b12
64013a62:	and    DWORD PTR [ebp-0x28],0x0
64013a66:	mov    DWORD PTR [ebp-0x24],0x64013b15
64013a6d:	mov    eax,ds:0x640521ac
64013a72:	lea    ecx,[ebp-0x28]
64013a75:	xor    eax,ecx
64013a77:	mov    DWORD PTR [ebp-0x20],eax
64013a7a:	mov    eax,DWORD PTR [ebp+0x18]
64013a7d:	mov    DWORD PTR [ebp-0x1c],eax
64013a80:	mov    eax,DWORD PTR [ebp+0xc]
64013a83:	mov    DWORD PTR [ebp-0x18],eax
64013a86:	mov    eax,DWORD PTR [ebp+0x1c]
64013a89:	mov    DWORD PTR [ebp-0x14],eax
64013a8c:	mov    eax,DWORD PTR [ebp+0x20]
64013a8f:	mov    DWORD PTR [ebp-0x10],eax
64013a92:	and    DWORD PTR [ebp-0xc],0x0
64013a96:	and    DWORD PTR [ebp-0x8],0x0
64013a9a:	and    DWORD PTR [ebp-0x4],0x0
64013a9e:	mov    DWORD PTR [ebp-0xc],esp
64013aa1:	mov    DWORD PTR [ebp-0x8],ebp
64013aa4:	mov    eax,fs:0x0
64013aaa:	mov    DWORD PTR [ebp-0x28],eax
64013aad:	lea    eax,[ebp-0x28]
64013ab0:	mov    fs:0x0,eax
64013ab6:	mov    DWORD PTR [ebp-0x38],0x1
64013abd:	mov    eax,DWORD PTR [ebp+0x8]
64013ac0:	mov    DWORD PTR [ebp-0x34],eax
64013ac3:	mov    eax,DWORD PTR [ebp+0x10]
64013ac6:	mov    DWORD PTR [ebp-0x30],eax
64013ac9:	call   0x64017a3a
64013ace:	mov    eax,DWORD PTR [eax+0x80]
64013ad4:	mov    DWORD PTR [ebp-0x2c],eax
64013ad7:	lea    eax,[ebp-0x34]
64013ada:	push   eax
64013adb:	mov    eax,DWORD PTR [ebp+0x8]
64013ade:	push   DWORD PTR [eax]
64013ae0:	call   DWORD PTR [ebp-0x2c]
64013ae3:	pop    ecx
64013ae4:	pop    ecx
64013ae5:	and    DWORD PTR [ebp-0x38],0x0
64013ae9:	cmp    DWORD PTR [ebp-0x4],0x0
64013aed:	je     0x64013b06
64013aef:	mov    ebx,DWORD PTR fs:0x0
64013af6:	mov    eax,DWORD PTR [ebx]
64013af8:	mov    ebx,DWORD PTR [ebp-0x28]
64013afb:	mov    DWORD PTR [ebx],eax
64013afd:	mov    DWORD PTR fs:0x0,ebx
64013b04:	jmp    0x64013b0f
64013b06:	mov    eax,DWORD PTR [ebp-0x28]
64013b09:	mov    fs:0x0,eax
64013b0f:	mov    eax,DWORD PTR [ebp-0x38]
64013b12:	pop    ebx
64013b13:	leave  
64013b14:	ret    
64013b15:	push   ebp
64013b16:	mov    ebp,esp
64013b18:	push   ecx
64013b19:	push   ebx
64013b1a:	cld    
64013b1b:	mov    eax,DWORD PTR [ebp+0xc]
64013b1e:	mov    ecx,DWORD PTR [eax+0x8]
64013b21:	xor    ecx,DWORD PTR [ebp+0xc]
64013b24:	call   0x64013d18
64013b29:	mov    eax,DWORD PTR [ebp+0x8]
64013b2c:	mov    eax,DWORD PTR [eax+0x4]
64013b2f:	and    eax,0x66
64013b32:	je     0x64013b45
64013b34:	mov    eax,DWORD PTR [ebp+0xc]
64013b37:	mov    DWORD PTR [eax+0x24],0x1
64013b3e:	xor    eax,eax
64013b40:	inc    eax
64013b41:	jmp    0x64013baf
64013b43:	jmp    0x64013baf
64013b45:	push   0x1
64013b47:	mov    eax,DWORD PTR [ebp+0xc]
64013b4a:	push   DWORD PTR [eax+0x18]
64013b4d:	mov    eax,DWORD PTR [ebp+0xc]
64013b50:	push   DWORD PTR [eax+0x14]
64013b53:	mov    eax,DWORD PTR [ebp+0xc]
64013b56:	push   DWORD PTR [eax+0xc]
64013b59:	push   0x0
64013b5b:	push   DWORD PTR [ebp+0x10]
64013b5e:	mov    eax,DWORD PTR [ebp+0xc]
64013b61:	push   DWORD PTR [eax+0x10]
64013b64:	push   DWORD PTR [ebp+0x8]
64013b67:	call   0x64017657
64013b6c:	add    esp,0x20
64013b6f:	mov    eax,DWORD PTR [ebp+0xc]
64013b72:	cmp    DWORD PTR [eax+0x24],0x0
64013b76:	jne    0x64013b83
64013b78:	push   DWORD PTR [ebp+0x8]
64013b7b:	push   DWORD PTR [ebp+0xc]
64013b7e:	call   0x64013988
64013b83:	push   0x0
64013b85:	push   0x0
64013b87:	push   0x0
64013b89:	push   0x0
64013b8b:	push   0x0
64013b8d:	lea    eax,[ebp-0x4]
64013b90:	push   eax
64013b91:	push   0x123
64013b96:	call   0x64013a40
64013b9b:	add    esp,0x1c
64013b9e:	mov    eax,DWORD PTR [ebp-0x4]
64013ba1:	mov    ebx,DWORD PTR [ebp+0xc]
64013ba4:	mov    esp,DWORD PTR [ebx+0x1c]
64013ba7:	mov    ebp,DWORD PTR [ebx+0x20]
64013baa:	jmp    eax
64013bac:	xor    eax,eax
64013bae:	inc    eax
64013baf:	pop    ebx
64013bb0:	leave  
64013bb1:	ret    
64013bb2:	push   ebp
64013bb3:	mov    ebp,esp
64013bb5:	push   ecx
64013bb6:	push   ebx
64013bb7:	push   esi
64013bb8:	push   edi
64013bb9:	mov    edi,DWORD PTR [ebp+0x8]
64013bbc:	mov    eax,DWORD PTR [edi+0x10]
64013bbf:	mov    esi,DWORD PTR [edi+0xc]
64013bc2:	mov    DWORD PTR [ebp-0x4],eax
64013bc5:	mov    ebx,esi
64013bc7:	jmp    0x64013bf6
64013bc9:	cmp    esi,0xffffffff
64013bcc:	jne    0x64013bd3
64013bce:	call   0x64017dac
64013bd3:	mov    ecx,DWORD PTR [ebp-0x4]
64013bd6:	dec    esi
64013bd7:	mov    eax,esi
64013bd9:	imul   eax,eax,0x14
64013bdc:	add    eax,ecx
64013bde:	mov    ecx,DWORD PTR [ebp+0x10]
64013be1:	cmp    DWORD PTR [eax+0x4],ecx
64013be4:	jge    0x64013beb
64013be6:	cmp    ecx,DWORD PTR [eax+0x8]
64013be9:	jle    0x64013bf0
64013beb:	cmp    esi,0xffffffff
64013bee:	jne    0x64013bf9
64013bf0:	dec    DWORD PTR [ebp+0xc]
64013bf3:	mov    ebx,DWORD PTR [ebp+0x8]
64013bf6:	mov    DWORD PTR [ebp+0x8],esi
64013bf9:	cmp    DWORD PTR [ebp+0xc],0x0
64013bfd:	jge    0x64013bc9
64013bff:	mov    eax,DWORD PTR [ebp+0x14]
64013c02:	inc    esi
64013c03:	mov    DWORD PTR [eax],esi
64013c05:	mov    eax,DWORD PTR [ebp+0x18]
64013c08:	mov    DWORD PTR [eax],ebx
64013c0a:	cmp    ebx,DWORD PTR [edi+0xc]
64013c0d:	ja     0x64013c13
64013c0f:	cmp    esi,ebx
64013c11:	jbe    0x64013c18
64013c13:	call   0x64017dac
64013c18:	mov    eax,esi
64013c1a:	imul   eax,eax,0x14
64013c1d:	add    eax,DWORD PTR [ebp-0x4]
64013c20:	pop    edi
64013c21:	pop    esi
64013c22:	pop    ebx
64013c23:	leave  
64013c24:	ret    
64013c25:	mov    eax,DWORD PTR [esp+0x8]
64013c29:	push   esi
64013c2a:	mov    esi,DWORD PTR [esp+0x8]
64013c2e:	mov    DWORD PTR [esi],eax
64013c30:	call   0x64017a3a
64013c35:	mov    eax,DWORD PTR [eax+0x98]
64013c3b:	mov    DWORD PTR [esi+0x4],eax
64013c3e:	call   0x64017a3a
64013c43:	mov    DWORD PTR [eax+0x98],esi
64013c49:	mov    eax,esi
64013c4b:	pop    esi
64013c4c:	ret    
64013c4d:	call   0x64017a3a
64013c52:	mov    eax,DWORD PTR [eax+0x98]
64013c58:	jmp    0x64013c65
64013c5a:	mov    ecx,DWORD PTR [eax]
64013c5c:	cmp    ecx,DWORD PTR [esp+0x4]
64013c60:	je     0x64013c6b
64013c62:	mov    eax,DWORD PTR [eax+0x4]
64013c65:	test   eax,eax
64013c67:	jne    0x64013c5a
64013c69:	inc    eax
64013c6a:	ret    
64013c6b:	xor    eax,eax
64013c6d:	ret    
64013c6e:	push   esi
64013c6f:	call   0x64017a3a
64013c74:	mov    esi,DWORD PTR [esp+0x8]
64013c78:	cmp    esi,DWORD PTR [eax+0x98]
64013c7e:	jne    0x64013c90
64013c80:	call   0x64017a3a
64013c85:	mov    ecx,DWORD PTR [esi+0x4]
64013c88:	mov    DWORD PTR [eax+0x98],ecx
64013c8e:	pop    esi
64013c8f:	ret    
64013c90:	call   0x64017a3a
64013c95:	mov    eax,DWORD PTR [eax+0x98]
64013c9b:	jmp    0x64013ca6
64013c9d:	mov    ecx,DWORD PTR [eax+0x4]
64013ca0:	cmp    esi,ecx
64013ca2:	je     0x64013cb2
64013ca4:	mov    eax,ecx
64013ca6:	cmp    DWORD PTR [eax+0x4],0x0
64013caa:	jne    0x64013c9d
64013cac:	pop    esi
64013cad:	jmp    0x64017dac
64013cb2:	mov    ecx,DWORD PTR [esi+0x4]
64013cb5:	mov    DWORD PTR [eax+0x4],ecx
64013cb8:	pop    esi
64013cb9:	ret    
64013cba:	push   ebp
64013cbb:	mov    ebp,esp
64013cbd:	sub    esp,0x18
64013cc0:	mov    eax,ds:0x640521ac
64013cc5:	and    DWORD PTR [ebp-0x18],0x0
64013cc9:	lea    ecx,[ebp-0x18]
64013ccc:	xor    eax,ecx
64013cce:	mov    ecx,DWORD PTR [ebp+0x8]
64013cd1:	mov    DWORD PTR [ebp-0x10],eax
64013cd4:	mov    eax,DWORD PTR [ebp+0xc]
64013cd7:	mov    DWORD PTR [ebp-0xc],eax
64013cda:	mov    eax,DWORD PTR [ebp+0x14]
64013cdd:	inc    eax
64013cde:	mov    DWORD PTR [ebp-0x14],0x64013a10
64013ce5:	mov    DWORD PTR [ebp-0x8],ecx
64013ce8:	mov    DWORD PTR [ebp-0x4],eax
64013ceb:	mov    eax,fs:0x0
64013cf1:	mov    DWORD PTR [ebp-0x18],eax
64013cf4:	lea    eax,[ebp-0x18]
64013cf7:	mov    fs:0x0,eax
64013cfd:	push   DWORD PTR [ebp+0x18]
64013d00:	push   ecx
64013d01:	push   DWORD PTR [ebp+0x10]
64013d04:	call   0x64017e00
64013d09:	mov    ecx,eax
64013d0b:	mov    eax,DWORD PTR [ebp-0x18]
64013d0e:	mov    fs:0x0,eax
64013d14:	mov    eax,ecx
64013d16:	leave  
64013d17:	ret    
64013d18:	cmp    ecx,DWORD PTR ds:0x640521ac
64013d1e:	jne    0x64013d22
64013d20:	repz ret 
64013d22:	jmp    0x64017e4c
64013d27:	int3   
64013d28:	int3   
64013d29:	int3   
64013d2a:	int3   
64013d2b:	int3   
64013d2c:	int3   
64013d2d:	int3   
64013d2e:	int3   
64013d2f:	int3   
64013d30:	push   ecx
64013d31:	lea    ecx,[esp+0x8]
64013d35:	sub    ecx,eax
64013d37:	and    ecx,0xf
64013d3a:	add    eax,ecx
64013d3c:	sbb    ecx,ecx
64013d3e:	or     eax,ecx
64013d40:	pop    ecx
64013d41:	jmp    0x64017f50
64013d46:	push   ecx
64013d47:	lea    ecx,[esp+0x8]
64013d4b:	sub    ecx,eax
64013d4d:	and    ecx,0x7
64013d50:	add    eax,ecx
64013d52:	sbb    ecx,ecx
64013d54:	or     eax,ecx
64013d56:	pop    ecx
64013d57:	jmp    0x64017f50
64013d5c:	mov    eax,DWORD PTR [esp+0x4]
64013d60:	mov    ds:0x64053a10,eax
64013d65:	ret    
64013d66:	push   ebp
64013d67:	lea    ebp,[esp-0x2a8]
64013d6e:	sub    esp,0x328
64013d74:	mov    eax,ds:0x640521ac
64013d79:	xor    eax,ebp
64013d7b:	mov    DWORD PTR [ebp+0x2a4],eax
64013d81:	push   esi
64013d82:	mov    DWORD PTR [ebp+0x88],eax
64013d88:	mov    DWORD PTR [ebp+0x84],ecx
64013d8e:	mov    DWORD PTR [ebp+0x80],edx
64013d94:	mov    DWORD PTR [ebp+0x7c],ebx
64013d97:	mov    DWORD PTR [ebp+0x78],esi
64013d9a:	mov    DWORD PTR [ebp+0x74],edi
64013d9d:	data16 mov WORD PTR [ebp+0xa0],ss
64013da4:	data16 mov WORD PTR [ebp+0x94],cs
64013dab:	data16 mov WORD PTR [ebp+0x70],ds
64013daf:	data16 mov WORD PTR [ebp+0x6c],es
64013db3:	data16 mov WORD PTR [ebp+0x68],fs
64013db7:	data16 mov WORD PTR [ebp+0x64],gs
64013dbb:	pushf  
64013dbc:	pop    DWORD PTR [ebp+0x98]
64013dc2:	mov    esi,DWORD PTR [ebp+0x2ac]
64013dc8:	lea    eax,[ebp+0x2ac]
64013dce:	mov    DWORD PTR [ebp+0x9c],eax
64013dd4:	mov    DWORD PTR [ebp-0x28],0x10001
64013ddb:	mov    DWORD PTR [ebp+0x90],esi
64013de1:	mov    eax,DWORD PTR [eax-0x4]
64013de4:	push   0x50
64013de6:	mov    DWORD PTR [ebp+0x8c],eax
64013dec:	lea    eax,[ebp-0x80]
64013def:	push   0x0
64013df1:	push   eax
64013df2:	call   0x64015170
64013df7:	lea    eax,[ebp-0x80]
64013dfa:	mov    DWORD PTR [ebp-0x30],eax
64013dfd:	lea    eax,[ebp-0x28]
64013e00:	add    esp,0xc
64013e03:	mov    DWORD PTR [ebp-0x80],0xc000000d
64013e0a:	mov    DWORD PTR [ebp-0x74],esi
64013e0d:	mov    DWORD PTR [ebp-0x2c],eax
64013e10:	call   DWORD PTR ds:0x6402c1b4
64013e16:	push   0x0
64013e18:	mov    esi,eax
64013e1a:	call   DWORD PTR ds:0x6402c1b0
64013e20:	lea    eax,[ebp-0x30]
64013e23:	push   eax
64013e24:	call   DWORD PTR ds:0x6402c1ac
64013e2a:	test   eax,eax
64013e2c:	jne    0x64013e3a
64013e2e:	test   esi,esi
64013e30:	jne    0x64013e3a
64013e32:	push   0x2
64013e34:	call   0x64017f7b
64013e39:	pop    ecx
64013e3a:	push   0xc000000d
64013e3f:	call   DWORD PTR ds:0x6402c040
64013e45:	push   eax
64013e46:	call   DWORD PTR ds:0x6402c0d4
64013e4c:	mov    ecx,DWORD PTR [ebp+0x2a4]
64013e52:	xor    ecx,ebp
64013e54:	pop    esi
64013e55:	call   0x64013d18
64013e5a:	add    ebp,0x2a8
64013e60:	leave  
64013e61:	ret    
64013e62:	push   ebp
64013e63:	mov    ebp,esp
64013e65:	push   DWORD PTR ds:0x64053a10
64013e6b:	call   0x6401781e
64013e70:	test   eax,eax
64013e72:	pop    ecx
64013e73:	je     0x64013e78
64013e75:	pop    ebp
64013e76:	jmp    eax
64013e78:	push   0x2
64013e7a:	call   0x64017f7b
64013e7f:	pop    ecx
64013e80:	pop    ebp
64013e81:	jmp    0x64013d66
64013e86:	xor    eax,eax
64013e88:	push   eax
64013e89:	push   eax
64013e8a:	push   eax
64013e8b:	push   eax
64013e8c:	push   eax
64013e8d:	call   0x64013e62
64013e92:	add    esp,0x14
64013e95:	ret    
64013e96:	push   ecx
64013e97:	push   ebx
64013e98:	push   ebp
64013e99:	push   esi
64013e9a:	push   edi
64013e9b:	push   DWORD PTR ds:0x640557e8
64013ea1:	call   0x6401781e
64013ea6:	push   DWORD PTR ds:0x640557e4
64013eac:	mov    esi,eax
64013eae:	mov    DWORD PTR [esp+0x18],esi
64013eb2:	call   0x6401781e
64013eb7:	mov    edi,eax
64013eb9:	cmp    edi,esi
64013ebb:	pop    ecx
64013ebc:	pop    ecx
64013ebd:	jb     0x64013f47
64013ec3:	mov    ebx,edi
64013ec5:	sub    ebx,esi
64013ec7:	lea    ebp,[ebx+0x4]
64013eca:	cmp    ebp,0x4
64013ecd:	jb     0x64013f47
64013ecf:	push   esi
64013ed0:	call   0x64017f83
64013ed5:	mov    esi,eax
64013ed7:	cmp    esi,ebp
64013ed9:	pop    ecx
64013eda:	jae    0x64013f26
64013edc:	mov    eax,0x800
64013ee1:	cmp    esi,eax
64013ee3:	jae    0x64013ee7
64013ee5:	mov    eax,esi
64013ee7:	add    eax,esi
64013ee9:	cmp    eax,esi
64013eeb:	jb     0x64013efd
64013eed:	push   eax
64013eee:	push   DWORD PTR [esp+0x14]
64013ef2:	call   0x64016377
64013ef7:	test   eax,eax
64013ef9:	pop    ecx
64013efa:	pop    ecx
64013efb:	jne    0x64013f14
64013efd:	lea    eax,[esi+0x10]
64013f00:	cmp    eax,esi
64013f02:	jb     0x64013f47
64013f04:	push   eax
64013f05:	push   DWORD PTR [esp+0x14]
64013f09:	call   0x64016377
64013f0e:	test   eax,eax
64013f10:	pop    ecx
64013f11:	pop    ecx
64013f12:	je     0x64013f47
64013f14:	sar    ebx,0x2
64013f17:	push   eax
64013f18:	lea    edi,[eax+ebx*4]
64013f1b:	call   0x640177a7
64013f20:	pop    ecx
64013f21:	mov    ds:0x640557e8,eax
64013f26:	push   DWORD PTR [esp+0x18]
64013f2a:	call   0x640177a7
64013f2f:	mov    DWORD PTR [edi],eax
64013f31:	add    edi,0x4
64013f34:	push   edi
64013f35:	call   0x640177a7
64013f3a:	pop    ecx
64013f3b:	mov    ds:0x640557e4,eax
64013f40:	mov    eax,DWORD PTR [esp+0x1c]
64013f44:	pop    ecx
64013f45:	jmp    0x64013f49
64013f47:	xor    eax,eax
64013f49:	pop    edi
64013f4a:	pop    esi
64013f4b:	pop    ebp
64013f4c:	pop    ebx
64013f4d:	pop    ecx
64013f4e:	ret    
64013f4f:	push   esi
64013f50:	push   0x4
64013f52:	push   0x20
64013f54:	call   0x6401632f
64013f59:	mov    esi,eax
64013f5b:	push   esi
64013f5c:	call   0x640177a7
64013f61:	add    esp,0xc
64013f64:	test   esi,esi
64013f66:	mov    ds:0x640557e8,eax
64013f6b:	mov    ds:0x640557e4,eax
64013f70:	jne    0x64013f77
64013f72:	push   0x18
64013f74:	pop    eax
64013f75:	pop    esi
64013f76:	ret    
64013f77:	and    DWORD PTR [esi],0x0
64013f7a:	xor    eax,eax
64013f7c:	pop    esi
64013f7d:	ret    
64013f7e:	push   0xc
64013f80:	push   0x64043b28
64013f85:	call   0x640164d4
64013f8a:	call   0x64018085
64013f8f:	and    DWORD PTR [ebp-0x4],0x0
64013f93:	push   DWORD PTR [ebp+0x8]
64013f96:	call   0x64013e96
64013f9b:	pop    ecx
64013f9c:	mov    DWORD PTR [ebp-0x1c],eax
64013f9f:	mov    DWORD PTR [ebp-0x4],0xfffffffe
64013fa6:	call   0x64013fb4
64013fab:	mov    eax,DWORD PTR [ebp-0x1c]
64013fae:	call   0x64016519
64013fb3:	ret    
64013fb4:	call   0x6401808e
64013fb9:	ret    
64013fba:	push   DWORD PTR [esp+0x4]
64013fbe:	call   0x64013f7e
64013fc3:	neg    eax
64013fc5:	sbb    eax,eax
64013fc7:	neg    eax
64013fc9:	pop    ecx
64013fca:	dec    eax
64013fcb:	ret    
64013fcc:	mov    eax,DWORD PTR [esp+0x4]
64013fd0:	push   ebx
64013fd1:	mov    ebx,DWORD PTR [esp+0xc]
64013fd5:	cmp    WORD PTR [ebx],0x0
64013fd9:	push   edi
64013fda:	mov    edi,eax
64013fdc:	je     0x64014023
64013fde:	movzx  ecx,WORD PTR [eax]
64013fe1:	test   cx,cx
64013fe4:	je     0x64014021
64013fe6:	movzx  edx,cx
64013fe9:	sub    eax,ebx
64013feb:	test   dx,dx
64013fee:	mov    ecx,DWORD PTR [esp+0x10]
64013ff2:	je     0x6401400f
64013ff4:	movzx  edx,WORD PTR [ecx]
64013ff7:	test   dx,dx
64013ffa:	je     0x64014026
64013ffc:	movzx  ebx,WORD PTR [eax+ecx*1]
64014000:	movzx  edx,dx
64014003:	sub    ebx,edx
64014005:	jne    0x6401400f
64014007:	inc    ecx
64014008:	inc    ecx
64014009:	cmp    WORD PTR [eax+ecx*1],bx
6401400d:	jne    0x64013ff4
6401400f:	cmp    WORD PTR [ecx],0x0
64014013:	je     0x64014026
64014015:	inc    edi
64014016:	inc    edi
64014017:	movzx  edx,WORD PTR [edi]
6401401a:	inc    eax
6401401b:	inc    eax
6401401c:	test   dx,dx
6401401f:	jne    0x64013feb
64014021:	xor    eax,eax
64014023:	pop    edi
64014024:	pop    ebx
64014025:	ret    
64014026:	mov    eax,edi
64014028:	jmp    0x64014023
6401402a:	push   ebp
6401402b:	mov    ebp,esp
6401402d:	push   ecx
6401402e:	mov    eax,DWORD PTR [ebp+0xc]
64014031:	cmp    eax,0x1
64014034:	push   ebx
64014035:	push   esi
64014036:	push   edi
64014037:	jne    0x64014154
6401403d:	mov    ebx,DWORD PTR ds:0x6402c1a4
64014043:	mov    edi,0x94
64014048:	push   edi
64014049:	push   0x0
6401404b:	call   ebx
6401404d:	push   eax
6401404e:	call   DWORD PTR ds:0x6402c194
64014054:	mov    esi,eax
64014056:	test   esi,esi
64014058:	jne    0x64014061
6401405a:	xor    eax,eax
6401405c:	jmp    0x640141fc
64014061:	push   esi
64014062:	mov    DWORD PTR [esi],edi
64014064:	call   DWORD PTR ds:0x6402c188
6401406a:	test   eax,eax
6401406c:	push   esi
6401406d:	push   0x0
6401406f:	jne    0x6401407c
64014071:	call   ebx
64014073:	push   eax
64014074:	call   DWORD PTR ds:0x6402c198
6401407a:	jmp    0x6401405a
6401407c:	mov    eax,DWORD PTR [esi+0x10]
6401407f:	mov    edi,DWORD PTR [esi+0xc]
64014082:	mov    DWORD PTR [ebp+0xc],eax
64014085:	mov    eax,DWORD PTR [esi+0x4]
64014088:	mov    DWORD PTR [ebp+0x10],eax
6401408b:	mov    eax,DWORD PTR [esi+0x8]
6401408e:	mov    DWORD PTR [ebp-0x4],eax
64014091:	and    edi,0x7fff
64014097:	call   ebx
64014099:	push   eax
6401409a:	call   DWORD PTR ds:0x6402c198
640140a0:	mov    eax,DWORD PTR [ebp+0xc]
640140a3:	cmp    eax,0x2
640140a6:	je     0x640140ae
640140a8:	or     edi,0x8000
640140ae:	mov    ecx,DWORD PTR [ebp-0x4]
640140b1:	mov    ds:0x64053d80,eax
640140b6:	mov    eax,DWORD PTR [ebp+0x10]
640140b9:	mov    edx,eax
640140bb:	shl    edx,0x8
640140be:	add    edx,ecx
640140c0:	push   0x1
640140c2:	mov    DWORD PTR ds:0x64053d88,edx
640140c8:	mov    ds:0x64053d8c,eax
640140cd:	mov    DWORD PTR ds:0x64053d90,ecx
640140d3:	mov    DWORD PTR ds:0x64053d84,edi
640140d9:	call   0x64018ac6
640140de:	test   eax,eax
640140e0:	pop    ecx
640140e1:	je     0x6401405a
640140e7:	call   0x64017bdc
640140ec:	test   eax,eax
640140ee:	jne    0x640140fa
640140f0:	call   0x64018b20
640140f5:	jmp    0x6401405a
640140fa:	call   0x64018a23
640140ff:	call   DWORD PTR ds:0x6402c1b8
64014105:	mov    ds:0x640557f8,eax
6401410a:	call   0x640188ee
6401410f:	mov    ds:0x64053a18,eax
64014114:	call   0x64018322
64014119:	test   eax,eax
6401411b:	jge    0x64014124
6401411d:	call   0x640178c7
64014122:	jmp    0x640140f0
64014124:	call   0x64018835
64014129:	test   eax,eax
6401412b:	jl     0x6401414d
6401412d:	call   0x640185c2
64014132:	test   eax,eax
64014134:	jl     0x6401414d
64014136:	push   0x0
64014138:	call   0x64018142
6401413d:	test   eax,eax
6401413f:	pop    ecx
64014140:	jne    0x6401414d
64014142:	inc    DWORD PTR ds:0x64053a14
64014148:	jmp    0x640141f9
6401414d:	call   0x64018576
64014152:	jmp    0x6401411d
64014154:	xor    edi,edi
64014156:	cmp    eax,edi
64014158:	jne    0x6401418f
6401415a:	cmp    DWORD PTR ds:0x64053a14,edi
64014160:	jle    0x6401405a
64014166:	dec    DWORD PTR ds:0x64053a14
6401416c:	cmp    DWORD PTR ds:0x64053dbc,edi
64014172:	jne    0x64014179
64014174:	call   0x640182c7
64014179:	cmp    DWORD PTR [ebp+0x10],edi
6401417c:	jne    0x640141f9
6401417e:	call   0x64018576
64014183:	call   0x640178c7
64014188:	call   0x64018b20
6401418d:	jmp    0x640141f9
6401418f:	cmp    eax,0x2
64014192:	jne    0x640141ed
64014194:	call   0x64017895
64014199:	push   0x214
6401419e:	push   0x1
640141a0:	call   0x6401632f
640141a5:	mov    esi,eax
640141a7:	cmp    esi,edi
640141a9:	pop    ecx
640141aa:	pop    ecx
640141ab:	je     0x6401405a
640141b1:	push   esi
640141b2:	push   DWORD PTR ds:0x64052474
640141b8:	push   DWORD PTR ds:0x64053a48
640141be:	call   0x6401781e
640141c3:	pop    ecx
640141c4:	call   eax
640141c6:	test   eax,eax
640141c8:	je     0x640141e1
640141ca:	push   edi
640141cb:	push   esi
640141cc:	call   0x64017904
640141d1:	pop    ecx
640141d2:	pop    ecx
640141d3:	call   DWORD PTR ds:0x6402c0f0
640141d9:	or     DWORD PTR [esi+0x4],0xffffffff
640141dd:	mov    DWORD PTR [esi],eax
640141df:	jmp    0x640141f9
640141e1:	push   esi
640141e2:	call   0x640147cf
640141e7:	pop    ecx
640141e8:	jmp    0x6401405a
640141ed:	cmp    eax,0x3
640141f0:	jne    0x640141f9
640141f2:	push   edi
640141f3:	call   0x64017b73
640141f8:	pop    ecx
640141f9:	xor    eax,eax
640141fb:	inc    eax
640141fc:	pop    edi
640141fd:	pop    esi
640141fe:	pop    ebx
640141ff:	leave  
64014200:	ret    0xc
64014203:	push   0xc
64014205:	push   0x64043b48
6401420a:	call   0x640164d4
6401420f:	mov    edi,ecx
64014211:	mov    esi,edx
64014213:	mov    ebx,DWORD PTR [ebp+0x8]
64014216:	xor    eax,eax
64014218:	inc    eax
64014219:	mov    DWORD PTR [ebp-0x1c],eax
6401421c:	test   esi,esi
6401421e:	jne    0x6401422c
64014220:	cmp    DWORD PTR ds:0x64053a14,edx
64014226:	je     0x640142f1
6401422c:	and    DWORD PTR [ebp-0x4],0x0
64014230:	cmp    esi,eax
64014232:	je     0x64014239
64014234:	cmp    esi,0x2
64014237:	jne    0x64014267
64014239:	mov    eax,ds:0x64040044
6401423e:	test   eax,eax
64014240:	je     0x6401424a
64014242:	push   edi
64014243:	push   esi
64014244:	push   ebx
64014245:	call   eax
64014247:	mov    DWORD PTR [ebp-0x1c],eax
6401424a:	cmp    DWORD PTR [ebp-0x1c],0x0
6401424e:	je     0x640142ea
64014254:	push   edi
64014255:	push   esi
64014256:	push   ebx
64014257:	call   0x6401402a
6401425c:	mov    DWORD PTR [ebp-0x1c],eax
6401425f:	test   eax,eax
64014261:	je     0x640142ea
64014267:	push   edi
64014268:	push   esi
64014269:	push   ebx
6401426a:	call   0x6400ae90
6401426f:	mov    DWORD PTR [ebp-0x1c],eax
64014272:	cmp    esi,0x1
64014275:	jne    0x6401429b
64014277:	test   eax,eax
64014279:	jne    0x6401429b
6401427b:	push   edi
6401427c:	push   eax
6401427d:	push   ebx
6401427e:	call   0x6400ae90
64014283:	push   edi
64014284:	push   0x0
64014286:	push   ebx
64014287:	call   0x6401402a
6401428c:	mov    eax,ds:0x64040044
64014291:	test   eax,eax
64014293:	je     0x6401429b
64014295:	push   edi
64014296:	push   0x0
64014298:	push   ebx
64014299:	call   eax
6401429b:	test   esi,esi
6401429d:	je     0x640142a4
6401429f:	cmp    esi,0x3
640142a2:	jne    0x640142ca
640142a4:	push   edi
640142a5:	push   esi
640142a6:	push   ebx
640142a7:	call   0x6401402a
640142ac:	test   eax,eax
640142ae:	jne    0x640142b3
640142b0:	and    DWORD PTR [ebp-0x1c],eax
640142b3:	cmp    DWORD PTR [ebp-0x1c],0x0
640142b7:	je     0x640142ca
640142b9:	mov    eax,ds:0x64040044
640142be:	test   eax,eax
640142c0:	je     0x640142ca
640142c2:	push   edi
640142c3:	push   esi
640142c4:	push   ebx
640142c5:	call   eax
640142c7:	mov    DWORD PTR [ebp-0x1c],eax
640142ca:	mov    DWORD PTR [ebp-0x4],0xfffffffe
640142d1:	mov    eax,DWORD PTR [ebp-0x1c]
640142d4:	jmp    0x640142f3
640142d6:	mov    eax,DWORD PTR [ebp-0x14]
640142d9:	mov    ecx,DWORD PTR [eax]
640142db:	mov    ecx,DWORD PTR [ecx]
640142dd:	push   eax
640142de:	push   ecx
640142df:	call   0x64018cf2
640142e4:	pop    ecx
640142e5:	pop    ecx
640142e6:	ret    
640142e7:	mov    esp,DWORD PTR [ebp-0x18]
640142ea:	mov    DWORD PTR [ebp-0x4],0xfffffffe
640142f1:	xor    eax,eax
640142f3:	call   0x64016519
640142f8:	ret    
640142f9:	cmp    DWORD PTR [esp+0x8],0x1
640142fe:	jne    0x64014305
64014300:	call   0x64018d0d
64014305:	push   DWORD PTR [esp+0x4]
64014309:	mov    ecx,DWORD PTR [esp+0x10]
6401430d:	mov    edx,DWORD PTR [esp+0xc]
64014311:	call   0x64014203
64014316:	pop    ecx
64014317:	ret    0xc
6401431a:	mov    eax,DWORD PTR [esp+0x4]
6401431e:	test   eax,eax
64014320:	je     0x64014334
64014322:	sub    eax,0x8
64014325:	cmp    DWORD PTR [eax],0xdddd
6401432b:	jne    0x64014334
6401432d:	push   eax
6401432e:	call   0x640147cf
64014333:	pop    ecx
64014334:	ret    
64014335:	mov    eax,DWORD PTR [esp+0x4]
64014339:	test   eax,eax
6401433b:	push   esi
6401433c:	mov    esi,ecx
6401433e:	mov    BYTE PTR [esi+0xc],0x0
64014342:	jne    0x640143a7
64014344:	call   0x64017a3a
64014349:	mov    DWORD PTR [esi+0x8],eax
6401434c:	mov    ecx,DWORD PTR [eax+0x6c]
6401434f:	mov    DWORD PTR [esi],ecx
64014351:	mov    ecx,DWORD PTR [eax+0x68]
64014354:	mov    DWORD PTR [esi+0x4],ecx
64014357:	mov    ecx,DWORD PTR [esi]
64014359:	cmp    ecx,DWORD PTR ds:0x64052b60
6401435f:	je     0x64014373
64014361:	mov    ecx,DWORD PTR ds:0x64052a78
64014367:	test   DWORD PTR [eax+0x70],ecx
6401436a:	jne    0x64014373
6401436c:	call   0x64015e94
64014371:	mov    DWORD PTR [esi],eax
64014373:	mov    eax,DWORD PTR [esi+0x4]
64014376:	cmp    eax,DWORD PTR ds:0x64052980
6401437c:	je     0x64014394
6401437e:	mov    eax,DWORD PTR [esi+0x8]
64014381:	mov    ecx,DWORD PTR ds:0x64052a78
64014387:	test   DWORD PTR [eax+0x70],ecx
6401438a:	jne    0x64014394
6401438c:	call   0x64018fb2
64014391:	mov    DWORD PTR [esi+0x4],eax
64014394:	mov    eax,DWORD PTR [esi+0x8]
64014397:	test   BYTE PTR [eax+0x70],0x2
6401439b:	jne    0x640143b1
6401439d:	or     DWORD PTR [eax+0x70],0x2
640143a1:	mov    BYTE PTR [esi+0xc],0x1
640143a5:	jmp    0x640143b1
640143a7:	mov    ecx,DWORD PTR [eax]
640143a9:	mov    DWORD PTR [esi],ecx
640143ab:	mov    eax,DWORD PTR [eax+0x4]
640143ae:	mov    DWORD PTR [esi+0x4],eax
640143b1:	mov    eax,esi
640143b3:	pop    esi
640143b4:	ret    0x4
640143b7:	push   ebp
640143b8:	mov    ebp,esp
640143ba:	sub    esp,0xc
640143bd:	mov    eax,ds:0x640521ac
640143c2:	xor    eax,ebp
640143c4:	mov    DWORD PTR [ebp-0x4],eax
640143c7:	push   esi
640143c8:	xor    esi,esi
640143ca:	cmp    ebx,esi
640143cc:	push   edi
640143cd:	jne    0x640143ed
640143cf:	call   0x640166d3
640143d4:	push   0x16
640143d6:	pop    edi
640143d7:	push   esi
640143d8:	push   esi
640143d9:	push   esi
640143da:	push   esi
640143db:	push   esi
640143dc:	mov    DWORD PTR [eax],edi
640143de:	call   0x64013e62
640143e3:	add    esp,0x14
640143e6:	mov    eax,edi
640143e8:	jmp    0x6401452d
640143ed:	push   DWORD PTR [ebp+0x8]
640143f0:	push   ebx
640143f1:	call   0x64019702
640143f6:	cmp    eax,DWORD PTR [ebp+0x8]
640143f9:	pop    ecx
640143fa:	pop    ecx
640143fb:	jb     0x64014402
640143fd:	mov    WORD PTR [ebx],si
64014400:	jmp    0x640143cf
64014402:	mov    edx,DWORD PTR [ebp+0xc]
64014405:	mov    eax,DWORD PTR [edx]
64014407:	mov    ecx,DWORD PTR [eax+0x14]
6401440a:	cmp    ecx,esi
6401440c:	jne    0x64014438
6401440e:	cmp    WORD PTR [ebx],si
64014411:	mov    eax,ebx
64014413:	je     0x64014431
64014415:	movzx  ecx,WORD PTR [eax]
64014418:	cmp    cx,0x41
6401441c:	jb     0x6401442a
6401441e:	cmp    cx,0x5a
64014422:	ja     0x6401442a
64014424:	add    ecx,0x20
64014427:	mov    WORD PTR [eax],cx
6401442a:	inc    eax
6401442b:	inc    eax
6401442c:	cmp    WORD PTR [eax],si
6401442f:	jne    0x64014415
64014431:	xor    eax,eax
64014433:	jmp    0x6401452d
64014438:	push   DWORD PTR [eax+0x4]
6401443b:	mov    edi,0x100
64014440:	push   esi
64014441:	push   esi
64014442:	push   0xffffffff
64014444:	push   ebx
64014445:	push   edi
64014446:	push   ecx
64014447:	push   edx
64014448:	call   0x640196c2
6401444d:	mov    ecx,eax
6401444f:	add    esp,0x20
64014452:	cmp    ecx,esi
64014454:	mov    DWORD PTR [ebp-0xc],ecx
64014457:	jne    0x64014470
64014459:	call   0x640166d3
6401445e:	mov    DWORD PTR [eax],0x2a
64014464:	call   0x640166d3
64014469:	mov    eax,DWORD PTR [eax]
6401446b:	jmp    0x6401452d
64014470:	cmp    DWORD PTR [ebp+0x8],ecx
64014473:	jae    0x64014484
64014475:	mov    WORD PTR [ebx],si
64014478:	call   0x640166d3
6401447d:	push   0x22
6401447f:	jmp    0x640143d6
64014484:	cmp    ecx,esi
64014486:	jle    0x640144ce
64014488:	push   0xffffffe0
6401448a:	xor    edx,edx
6401448c:	pop    eax
6401448d:	div    ecx
6401448f:	cmp    eax,0x2
64014492:	jb     0x640144ce
64014494:	lea    eax,[ecx+ecx*1+0x8]
64014498:	cmp    eax,0x400
6401449d:	ja     0x640144b2
6401449f:	call   0x64013d30
640144a4:	mov    eax,esp
640144a6:	cmp    eax,esi
640144a8:	je     0x640144c6
640144aa:	mov    DWORD PTR [eax],0xcccc
640144b0:	jmp    0x640144c3
640144b2:	push   eax
640144b3:	call   0x640148ce
640144b8:	cmp    eax,esi
640144ba:	pop    ecx
640144bb:	je     0x640144c6
640144bd:	mov    DWORD PTR [eax],0xdddd
640144c3:	add    eax,0x8
640144c6:	mov    ecx,DWORD PTR [ebp-0xc]
640144c9:	mov    DWORD PTR [ebp-0x8],eax
640144cc:	jmp    0x640144d1
640144ce:	mov    DWORD PTR [ebp-0x8],esi
640144d1:	cmp    DWORD PTR [ebp-0x8],esi
640144d4:	jne    0x640144e3
640144d6:	call   0x640166d3
640144db:	mov    DWORD PTR [eax],0xc
640144e1:	jmp    0x64014464
640144e3:	mov    edx,DWORD PTR [ebp+0xc]
640144e6:	mov    eax,DWORD PTR [edx]
640144e8:	push   DWORD PTR [eax+0x4]
640144eb:	push   ecx
640144ec:	push   DWORD PTR [ebp-0x8]
640144ef:	push   0xffffffff
640144f1:	push   ebx
640144f2:	push   edi
640144f3:	push   DWORD PTR [eax+0x14]
640144f6:	push   edx
640144f7:	call   0x640196c2
640144fc:	add    esp,0x20
640144ff:	test   eax,eax
64014501:	je     0x64014516
64014503:	push   DWORD PTR [ebp-0x8]
64014506:	push   DWORD PTR [ebp+0x8]
64014509:	push   ebx
6401450a:	call   0x6401557f
6401450f:	add    esp,0xc
64014512:	mov    esi,eax
64014514:	jmp    0x64014522
64014516:	call   0x640166d3
6401451b:	push   0x2a
6401451d:	pop    ecx
6401451e:	mov    DWORD PTR [eax],ecx
64014520:	mov    esi,ecx
64014522:	push   DWORD PTR [ebp-0x8]
64014525:	call   0x6401431a
6401452a:	pop    ecx
6401452b:	mov    eax,esi
6401452d:	lea    esp,[ebp-0x14]
64014530:	pop    edi
64014531:	pop    esi
64014532:	mov    ecx,DWORD PTR [ebp-0x4]
64014535:	xor    ecx,ebp
64014537:	call   0x64013d18
6401453c:	leave  
6401453d:	ret    
6401453e:	push   ebp
6401453f:	mov    ebp,esp
64014541:	sub    esp,0x10
64014544:	push   ebx
64014545:	push   DWORD PTR [ebp+0x10]
64014548:	lea    ecx,[ebp-0x10]
6401454b:	call   0x64014335
64014550:	mov    ebx,DWORD PTR [ebp+0x8]
64014553:	lea    eax,[ebp-0x10]
64014556:	push   eax
64014557:	push   DWORD PTR [ebp+0xc]
6401455a:	call   0x640143b7
6401455f:	cmp    BYTE PTR [ebp-0x4],0x0
64014563:	pop    ecx
64014564:	pop    ecx
64014565:	pop    ebx
64014566:	je     0x6401456f
64014568:	mov    ecx,DWORD PTR [ebp-0x8]
6401456b:	and    DWORD PTR [ecx+0x70],0xfffffffd
6401456f:	leave  
64014570:	ret    
64014571:	push   0x0
64014573:	push   DWORD PTR [esp+0xc]
64014577:	push   DWORD PTR [esp+0xc]
6401457b:	call   0x6401453e
64014580:	add    esp,0xc
64014583:	ret    
64014584:	jmp    0x64013656
64014589:	cmp    DWORD PTR [esp+0x8],0x0
6401458e:	je     0x64014596
64014590:	mov    BYTE PTR [ecx],0x2d
64014593:	inc    ecx
64014594:	neg    eax
64014596:	push   esi
64014597:	mov    esi,ecx
64014599:	xor    edx,edx
6401459b:	div    DWORD PTR [esp+0x8]
6401459f:	cmp    edx,0x9
640145a2:	jbe    0x640145a9
640145a4:	add    dl,0x57
640145a7:	jmp    0x640145ac
640145a9:	add    dl,0x30
640145ac:	mov    BYTE PTR [ecx],dl
640145ae:	inc    ecx
640145af:	test   eax,eax
640145b1:	ja     0x64014599
640145b3:	mov    BYTE PTR [ecx],0x0
640145b6:	dec    ecx
640145b7:	mov    dl,BYTE PTR [esi]
640145b9:	mov    al,BYTE PTR [ecx]
640145bb:	mov    BYTE PTR [ecx],dl
640145bd:	dec    ecx
640145be:	mov    BYTE PTR [esi],al
640145c0:	inc    esi
640145c1:	cmp    esi,ecx
640145c3:	jb     0x640145b7
640145c5:	pop    esi
640145c6:	ret    0x8
640145c9:	push   ebp
640145ca:	mov    ebp,esp
640145cc:	xor    eax,eax
640145ce:	cmp    DWORD PTR [ebp+0x10],0xa
640145d2:	jne    0x640145da
640145d4:	cmp    DWORD PTR [ebp+0x8],eax
640145d7:	jge    0x640145da
640145d9:	inc    eax
640145da:	mov    ecx,DWORD PTR [ebp+0xc]
640145dd:	push   eax
640145de:	push   DWORD PTR [ebp+0x10]
640145e1:	mov    eax,DWORD PTR [ebp+0x8]
640145e4:	call   0x64014589
640145e9:	mov    eax,DWORD PTR [ebp+0xc]
640145ec:	pop    ebp
640145ed:	ret    
640145ee:	push   ebx
640145ef:	push   esi
640145f0:	mov    esi,DWORD PTR [esp+0xc]
640145f4:	push   edi
640145f5:	xor    edi,edi
640145f7:	or     ebx,0xffffffff
640145fa:	cmp    esi,edi
640145fc:	jne    0x6401461a
640145fe:	call   0x640166d3
64014603:	push   edi
64014604:	push   edi
64014605:	push   edi
64014606:	push   edi
64014607:	push   edi
64014608:	mov    DWORD PTR [eax],0x16
6401460e:	call   0x64013e62
64014613:	add    esp,0x14
64014616:	or     eax,ebx
64014618:	jmp    0x6401465c
6401461a:	test   BYTE PTR [esi+0xc],0x83
6401461e:	je     0x64014657
64014620:	push   esi
64014621:	call   0x64019e54
64014626:	push   esi
64014627:	mov    ebx,eax
64014629:	call   0x64019e28
6401462e:	push   esi
6401462f:	call   0x64019dfb
64014634:	push   eax
64014635:	call   0x64014bf8
6401463a:	add    esp,0x10
6401463d:	test   eax,eax
6401463f:	jge    0x64014646
64014641:	or     ebx,0xffffffff
64014644:	jmp    0x64014657
64014646:	mov    eax,DWORD PTR [esi+0x1c]
64014649:	cmp    eax,edi
6401464b:	je     0x64014657
6401464d:	push   eax
6401464e:	call   0x640147cf
64014653:	pop    ecx
64014654:	mov    DWORD PTR [esi+0x1c],edi
64014657:	mov    DWORD PTR [esi+0xc],edi
6401465a:	mov    eax,ebx
6401465c:	pop    edi
6401465d:	pop    esi
6401465e:	pop    ebx
6401465f:	ret    
64014660:	push   0xc
64014662:	push   0x64043b68
64014667:	call   0x640164d4
6401466c:	or     DWORD PTR [ebp-0x1c],0xffffffff
64014670:	xor    eax,eax
64014672:	mov    esi,DWORD PTR [ebp+0x8]
64014675:	xor    edi,edi
64014677:	cmp    esi,edi
64014679:	setne  al
6401467c:	cmp    eax,edi
6401467e:	jne    0x6401469d
64014680:	call   0x640166d3
64014685:	mov    DWORD PTR [eax],0x16
6401468b:	push   edi
6401468c:	push   edi
6401468d:	push   edi
6401468e:	push   edi
6401468f:	push   edi
64014690:	call   0x64013e62
64014695:	add    esp,0x14
64014698:	or     eax,0xffffffff
6401469b:	jmp    0x640146a9
6401469d:	test   BYTE PTR [esi+0xc],0x40
640146a1:	je     0x640146af
640146a3:	mov    DWORD PTR [esi+0xc],edi
640146a6:	mov    eax,DWORD PTR [ebp-0x1c]
640146a9:	call   0x64016519
640146ae:	ret    
640146af:	push   esi
640146b0:	call   0x64019bdc
640146b5:	pop    ecx
640146b6:	mov    DWORD PTR [ebp-0x4],edi
640146b9:	push   esi
640146ba:	call   0x640145ee
640146bf:	pop    ecx
640146c0:	mov    DWORD PTR [ebp-0x1c],eax
640146c3:	mov    DWORD PTR [ebp-0x4],0xfffffffe
640146ca:	call   0x640146d4
640146cf:	jmp    0x640146a6
640146d1:	mov    esi,DWORD PTR [ebp+0x8]
640146d4:	push   esi
640146d5:	call   0x64019c46
640146da:	pop    ecx
640146db:	ret    
640146dc:	push   ebp
640146dd:	mov    ebp,esp
640146df:	sub    esp,0x20
640146e2:	push   ebx
640146e3:	xor    ebx,ebx
640146e5:	cmp    DWORD PTR [ebp+0xc],ebx
640146e8:	jne    0x64014707
640146ea:	call   0x640166d3
640146ef:	push   ebx
640146f0:	push   ebx
640146f1:	push   ebx
640146f2:	push   ebx
640146f3:	push   ebx
640146f4:	mov    DWORD PTR [eax],0x16
640146fa:	call   0x64013e62
640146ff:	add    esp,0x14
64014702:	or     eax,0xffffffff
64014705:	jmp    0x64014754
64014707:	mov    eax,DWORD PTR [ebp+0x8]
6401470a:	cmp    eax,ebx
6401470c:	je     0x640146ea
6401470e:	push   esi
6401470f:	mov    DWORD PTR [ebp-0x18],eax
64014712:	mov    DWORD PTR [ebp-0x20],eax
64014715:	lea    eax,[ebp+0x10]
64014718:	push   eax
64014719:	push   ebx
6401471a:	push   DWORD PTR [ebp+0xc]
6401471d:	lea    eax,[ebp-0x20]
64014720:	push   eax
64014721:	mov    DWORD PTR [ebp-0x1c],0x7fffffff
64014728:	mov    DWORD PTR [ebp-0x14],0x42
6401472f:	call   0x6401a1dc
64014734:	add    esp,0x10
64014737:	dec    DWORD PTR [ebp-0x1c]
6401473a:	mov    esi,eax
6401473c:	js     0x64014745
6401473e:	mov    eax,DWORD PTR [ebp-0x20]
64014741:	mov    BYTE PTR [eax],bl
64014743:	jmp    0x64014751
64014745:	lea    eax,[ebp-0x20]
64014748:	push   eax
64014749:	push   ebx
6401474a:	call   0x64019fdb
6401474f:	pop    ecx
64014750:	pop    ecx
64014751:	mov    eax,esi
64014753:	pop    esi
64014754:	pop    ebx
64014755:	leave  
64014756:	ret    
64014757:	push   ebp
64014758:	mov    ebp,esp
6401475a:	sub    esp,0x10
6401475d:	push   DWORD PTR [ebp+0xc]
64014760:	lea    ecx,[ebp-0x10]
64014763:	call   0x64014335
64014768:	mov    eax,DWORD PTR [ebp-0x10]
6401476b:	cmp    DWORD PTR [eax+0xac],0x1
64014772:	jle    0x64014787
64014774:	lea    eax,[ebp-0x10]
64014777:	push   eax
64014778:	push   0x4
6401477a:	push   DWORD PTR [ebp+0x8]
6401477d:	call   0x6401ab70
64014782:	add    esp,0xc
64014785:	jmp    0x64014797
64014787:	mov    eax,DWORD PTR [eax+0xc8]
6401478d:	mov    ecx,DWORD PTR [ebp+0x8]
64014790:	movzx  eax,BYTE PTR [eax+ecx*2]
64014794:	and    eax,0x4
64014797:	cmp    BYTE PTR [ebp-0x4],0x0
6401479b:	je     0x640147a4
6401479d:	mov    ecx,DWORD PTR [ebp-0x8]
640147a0:	and    DWORD PTR [ecx+0x70],0xfffffffd
640147a4:	leave  
640147a5:	ret    
640147a6:	cmp    DWORD PTR ds:0x64053a28,0x0
640147ad:	jne    0x640147c1
640147af:	mov    eax,DWORD PTR [esp+0x4]
640147b3:	mov    ecx,DWORD PTR ds:0x64052b50
640147b9:	movzx  eax,BYTE PTR [ecx+eax*2]
640147bd:	and    eax,0x4
640147c0:	ret    
640147c1:	push   0x0
640147c3:	push   DWORD PTR [esp+0x8]
640147c7:	call   0x64014757
640147cc:	pop    ecx
640147cd:	pop    ecx
640147ce:	ret    
640147cf:	push   0xc
640147d1:	push   0x64043b88
640147d6:	call   0x640164d4
640147db:	mov    esi,DWORD PTR [ebp+0x8]
640147de:	test   esi,esi
640147e0:	je     0x64014857
640147e2:	cmp    DWORD PTR ds:0x640556c4,0x3
640147e9:	jne    0x6401482e
640147eb:	push   0x4
640147ed:	call   0x6401b49a
640147f2:	pop    ecx
640147f3:	and    DWORD PTR [ebp-0x4],0x0
640147f7:	push   esi
640147f8:	call   0x6401b513
640147fd:	pop    ecx
640147fe:	mov    DWORD PTR [ebp-0x1c],eax
64014801:	test   eax,eax
64014803:	je     0x6401480e
64014805:	push   esi
64014806:	push   eax
64014807:	call   0x6401b53e
6401480c:	pop    ecx
6401480d:	pop    ecx
6401480e:	mov    DWORD PTR [ebp-0x4],0xfffffffe
64014815:	call   0x64014825
6401481a:	cmp    DWORD PTR [ebp-0x1c],0x0
6401481e:	jne    0x64014857
64014820:	push   DWORD PTR [ebp+0x8]
64014823:	jmp    0x6401482f
64014825:	push   0x4
64014827:	call   0x6401b3c2
6401482c:	pop    ecx
6401482d:	ret    
6401482e:	push   esi
6401482f:	push   0x0
64014831:	push   DWORD PTR ds:0x64053ed4
64014837:	call   DWORD PTR ds:0x6402c198
6401483d:	test   eax,eax
6401483f:	jne    0x64014857
64014841:	call   0x640166d3
64014846:	mov    esi,eax
64014848:	call   DWORD PTR ds:0x6402c06c
6401484e:	push   eax
6401484f:	call   0x64016698
64014854:	mov    DWORD PTR [esi],eax
64014856:	pop    ecx
64014857:	call   0x64016519
6401485c:	ret    
6401485d:	mov    eax,DWORD PTR [esp+0x4]
64014861:	mov    dx,WORD PTR [esp+0x8]
64014866:	jmp    0x6401486f
64014868:	cmp    cx,dx
6401486b:	je     0x6401487e
6401486d:	inc    eax
6401486e:	inc    eax
6401486f:	movzx  ecx,WORD PTR [eax]
64014872:	test   cx,cx
64014875:	jne    0x64014868
64014877:	cmp    WORD PTR [eax],dx
6401487a:	je     0x6401487e
6401487c:	xor    eax,eax
6401487e:	ret    
6401487f:	push   0xc
64014881:	push   0x64043ba8
64014886:	call   0x640164d4
6401488b:	and    DWORD PTR [ebp-0x1c],0x0
6401488f:	mov    esi,DWORD PTR [ebp+0x8]
64014892:	cmp    esi,DWORD PTR ds:0x640546a4
64014898:	ja     0x640148bc
6401489a:	push   0x4
6401489c:	call   0x6401b49a
640148a1:	pop    ecx
640148a2:	and    DWORD PTR [ebp-0x4],0x0
640148a6:	push   esi
640148a7:	call   0x6401bce7
640148ac:	pop    ecx
640148ad:	mov    DWORD PTR [ebp-0x1c],eax
640148b0:	mov    DWORD PTR [ebp-0x4],0xfffffffe
640148b7:	call   0x640148c5
640148bc:	mov    eax,DWORD PTR [ebp-0x1c]
640148bf:	call   0x64016519
640148c4:	ret    
640148c5:	push   0x4
640148c7:	call   0x6401b3c2
640148cc:	pop    ecx
640148cd:	ret    
640148ce:	push   ebp
640148cf:	mov    ebp,DWORD PTR [esp+0x8]
640148d3:	cmp    ebp,0xffffffe0
640148d6:	ja     0x6401497b
640148dc:	push   ebx
640148dd:	mov    ebx,DWORD PTR ds:0x6402c194
640148e3:	push   esi
640148e4:	push   edi
640148e5:	xor    esi,esi
640148e7:	cmp    DWORD PTR ds:0x64053ed4,esi
640148ed:	mov    edi,ebp
640148ef:	jne    0x64014909
640148f1:	call   0x6401c19d
640148f6:	push   0x1e
640148f8:	call   0x6401bffd
640148fd:	push   0xff
64014902:	call   0x64018070
64014907:	pop    ecx
64014908:	pop    ecx
64014909:	mov    eax,ds:0x640556c4
6401490e:	cmp    eax,0x1
64014911:	jne    0x64014921
64014913:	cmp    ebp,esi
64014915:	je     0x6401491b
64014917:	mov    eax,ebp
64014919:	jmp    0x6401491e
6401491b:	xor    eax,eax
6401491d:	inc    eax
6401491e:	push   eax
6401491f:	jmp    0x6401493f
64014921:	cmp    eax,0x3
64014924:	jne    0x64014931
64014926:	push   ebp
64014927:	call   0x6401487f
6401492c:	cmp    eax,esi
6401492e:	pop    ecx
6401492f:	jne    0x64014948
64014931:	cmp    ebp,esi
64014933:	jne    0x64014938
64014935:	xor    edi,edi
64014937:	inc    edi
64014938:	add    edi,0xf
6401493b:	and    edi,0xfffffff0
6401493e:	push   edi
6401493f:	push   esi
64014940:	push   DWORD PTR ds:0x64053ed4
64014946:	call   ebx
64014948:	mov    esi,eax
6401494a:	test   esi,esi
6401494c:	jne    0x64014974
6401494e:	cmp    DWORD PTR ds:0x6405438c,eax
64014954:	push   0xc
64014956:	pop    edi
64014957:	je     0x64014966
64014959:	push   ebp
6401495a:	call   0x64016a8f
6401495f:	test   eax,eax
64014961:	pop    ecx
64014962:	jne    0x640148e5
64014964:	jmp    0x6401496d
64014966:	call   0x640166d3
6401496b:	mov    DWORD PTR [eax],edi
6401496d:	call   0x640166d3
64014972:	mov    DWORD PTR [eax],edi
64014974:	pop    edi
64014975:	mov    eax,esi
64014977:	pop    esi
64014978:	pop    ebx
64014979:	pop    ebp
6401497a:	ret    
6401497b:	push   ebp
6401497c:	call   0x64016a8f
64014981:	pop    ecx
64014982:	call   0x640166d3
64014987:	mov    DWORD PTR [eax],0xc
6401498d:	xor    eax,eax
6401498f:	pop    ebp
64014990:	ret    
64014991:	push   ebp
64014992:	mov    ebp,esp
64014994:	sub    esp,0x10
64014997:	push   ebx
64014998:	push   esi
64014999:	push   DWORD PTR [ebp+0x10]
6401499c:	lea    ecx,[ebp-0x10]
6401499f:	call   0x64014335
640149a4:	mov    ebx,DWORD PTR [ebp+0x8]
640149a7:	xor    esi,esi
640149a9:	cmp    ebx,esi
640149ab:	jne    0x640149dc
640149ad:	call   0x640166d3
640149b2:	push   esi
640149b3:	push   esi
640149b4:	push   esi
640149b5:	push   esi
640149b6:	push   esi
640149b7:	mov    DWORD PTR [eax],0x16
640149bd:	call   0x64013e62
640149c2:	add    esp,0x14
640149c5:	cmp    BYTE PTR [ebp-0x4],0x0
640149c9:	je     0x640149d2
640149cb:	mov    eax,DWORD PTR [ebp-0x8]
640149ce:	and    DWORD PTR [eax+0x70],0xfffffffd
640149d2:	mov    eax,0x7fffffff
640149d7:	jmp    0x64014a9c
640149dc:	push   edi
640149dd:	mov    edi,DWORD PTR [ebp+0xc]
640149e0:	cmp    edi,esi
640149e2:	jne    0x64014a13
640149e4:	call   0x640166d3
640149e9:	push   esi
640149ea:	push   esi
640149eb:	push   esi
640149ec:	push   esi
640149ed:	push   esi
640149ee:	mov    DWORD PTR [eax],0x16
640149f4:	call   0x64013e62
640149f9:	add    esp,0x14
640149fc:	cmp    BYTE PTR [ebp-0x4],0x0
64014a00:	je     0x64014a09
64014a02:	mov    eax,DWORD PTR [ebp-0x8]
64014a05:	and    DWORD PTR [eax+0x70],0xfffffffd
64014a09:	mov    eax,0x7fffffff
64014a0e:	jmp    0x64014a9b
64014a13:	mov    eax,DWORD PTR [ebp-0x10]
64014a16:	cmp    DWORD PTR [eax+0x14],esi
64014a19:	jne    0x64014a55
64014a1b:	movzx  eax,WORD PTR [ebx]
64014a1e:	cmp    ax,0x41
64014a22:	jb     0x64014a2d
64014a24:	cmp    ax,0x5a
64014a28:	ja     0x64014a2d
64014a2a:	add    eax,0x20
64014a2d:	movzx  esi,ax
64014a30:	movzx  eax,WORD PTR [edi]
64014a33:	cmp    ax,0x41
64014a37:	jb     0x64014a42
64014a39:	cmp    ax,0x5a
64014a3d:	ja     0x64014a42
64014a3f:	add    eax,0x20
64014a42:	inc    ebx
64014a43:	inc    ebx
64014a44:	inc    edi
64014a45:	inc    edi
64014a46:	test   si,si
64014a49:	movzx  eax,ax
64014a4c:	je     0x64014a86
64014a4e:	cmp    si,ax
64014a51:	je     0x64014a1b
64014a53:	jmp    0x64014a86
64014a55:	movzx  eax,WORD PTR [ebx]
64014a58:	lea    ecx,[ebp-0x10]
64014a5b:	push   ecx
64014a5c:	push   eax
64014a5d:	call   0x6401c1d6
64014a62:	movzx  esi,ax
64014a65:	movzx  eax,WORD PTR [edi]
64014a68:	lea    ecx,[ebp-0x10]
64014a6b:	push   ecx
64014a6c:	inc    ebx
64014a6d:	push   eax
64014a6e:	inc    ebx
64014a6f:	call   0x6401c1d6
64014a74:	add    esp,0x10
64014a77:	inc    edi
64014a78:	inc    edi
64014a79:	test   si,si
64014a7c:	movzx  eax,ax
64014a7f:	je     0x64014a86
64014a81:	cmp    si,ax
64014a84:	je     0x64014a55
64014a86:	movzx  ecx,ax
64014a89:	movzx  eax,si
64014a8c:	sub    eax,ecx
64014a8e:	cmp    BYTE PTR [ebp-0x4],0x0
64014a92:	je     0x64014a9b
64014a94:	mov    ecx,DWORD PTR [ebp-0x8]
64014a97:	and    DWORD PTR [ecx+0x70],0xfffffffd
64014a9b:	pop    edi
64014a9c:	pop    esi
64014a9d:	pop    ebx
64014a9e:	leave  
64014a9f:	ret    
64014aa0:	push   esi
64014aa1:	xor    esi,esi
64014aa3:	cmp    DWORD PTR ds:0x64053a28,esi
64014aa9:	push   edi
64014aaa:	jne    0x64014b1d
64014aac:	mov    edi,DWORD PTR [esp+0xc]
64014ab0:	cmp    edi,esi
64014ab2:	jne    0x64014ad3
64014ab4:	call   0x640166d3
64014ab9:	push   esi
64014aba:	push   esi
64014abb:	push   esi
64014abc:	push   esi
64014abd:	push   esi
64014abe:	mov    DWORD PTR [eax],0x16
64014ac4:	call   0x64013e62
64014ac9:	add    esp,0x14
64014acc:	mov    eax,0x7fffffff
64014ad1:	jmp    0x64014b2e
64014ad3:	mov    edx,DWORD PTR [esp+0x10]
64014ad7:	cmp    edx,esi
64014ad9:	je     0x64014ab4
64014adb:	movzx  eax,WORD PTR [edi]
64014ade:	cmp    ax,0x41
64014ae2:	jb     0x64014aed
64014ae4:	cmp    ax,0x5a
64014ae8:	ja     0x64014aed
64014aea:	add    eax,0x20
64014aed:	movzx  ecx,ax
64014af0:	movzx  eax,WORD PTR [edx]
64014af3:	cmp    ax,0x41
64014af7:	jb     0x64014b02
64014af9:	cmp    ax,0x5a
64014afd:	ja     0x64014b02
64014aff:	add    eax,0x20
64014b02:	inc    edi
64014b03:	inc    edi
64014b04:	inc    edx
64014b05:	inc    edx
64014b06:	cmp    cx,si
64014b09:	movzx  eax,ax
64014b0c:	je     0x64014b13
64014b0e:	cmp    cx,ax
64014b11:	je     0x64014adb
64014b13:	movzx  edx,ax
64014b16:	movzx  eax,cx
64014b19:	sub    eax,edx
64014b1b:	jmp    0x64014b2e
64014b1d:	push   esi
64014b1e:	push   DWORD PTR [esp+0x14]
64014b22:	push   DWORD PTR [esp+0x14]
64014b26:	call   0x64014991
64014b2b:	add    esp,0xc
64014b2e:	pop    edi
64014b2f:	pop    esi
64014b30:	ret    
64014b31:	mov    eax,DWORD PTR [esp+0x4]
64014b35:	mov    edx,eax
64014b37:	mov    cx,WORD PTR [eax]
64014b3a:	inc    eax
64014b3b:	inc    eax
64014b3c:	test   cx,cx
64014b3f:	jne    0x64014b37
64014b41:	mov    cx,WORD PTR [esp+0x8]
64014b46:	dec    eax
64014b47:	dec    eax
64014b48:	cmp    eax,edx
64014b4a:	je     0x64014b51
64014b4c:	cmp    WORD PTR [eax],cx
64014b4f:	jne    0x64014b46
64014b51:	mov    dx,WORD PTR [eax]
64014b54:	sub    dx,cx
64014b57:	neg    dx
64014b5a:	sbb    edx,edx
64014b5c:	not    edx
64014b5e:	and    eax,edx
64014b60:	ret    
64014b61:	push   esi
64014b62:	mov    esi,DWORD PTR [esp+0x8]
64014b66:	push   edi
64014b67:	push   esi
64014b68:	call   0x6401993b
64014b6d:	cmp    eax,0xffffffff
64014b70:	pop    ecx
64014b71:	je     0x64014bc3
64014b73:	cmp    esi,0x1
64014b76:	mov    eax,ds:0x640556e0
64014b7b:	jne    0x64014b86
64014b7d:	test   BYTE PTR [eax+0x84],0x1
64014b84:	jne    0x64014b91
64014b86:	cmp    esi,0x2
64014b89:	jne    0x64014ba7
64014b8b:	test   BYTE PTR [eax+0x44],0x1
64014b8f:	je     0x64014ba7
64014b91:	push   0x2
64014b93:	call   0x6401993b
64014b98:	push   0x1
64014b9a:	mov    edi,eax
64014b9c:	call   0x6401993b
64014ba1:	cmp    eax,edi
64014ba3:	pop    ecx
64014ba4:	pop    ecx
64014ba5:	je     0x64014bc3
64014ba7:	push   esi
64014ba8:	call   0x6401993b
64014bad:	pop    ecx
64014bae:	push   eax
64014baf:	call   DWORD PTR ds:0x6402c078
64014bb5:	test   eax,eax
64014bb7:	jne    0x64014bc3
64014bb9:	call   DWORD PTR ds:0x6402c06c
64014bbf:	mov    edi,eax
64014bc1:	jmp    0x64014bc5
64014bc3:	xor    edi,edi
64014bc5:	push   esi
64014bc6:	call   0x640198ba
64014bcb:	mov    eax,esi
64014bcd:	sar    eax,0x5
64014bd0:	mov    eax,DWORD PTR [eax*4+0x640556e0]
64014bd7:	and    esi,0x1f
64014bda:	shl    esi,0x6
64014bdd:	test   edi,edi
64014bdf:	pop    ecx
64014be0:	mov    BYTE PTR [eax+esi*1+0x4],0x0
64014be5:	je     0x64014bf3
64014be7:	push   edi
64014be8:	call   0x640166f9
64014bed:	pop    ecx
64014bee:	or     eax,0xffffffff
64014bf1:	jmp    0x64014bf5
64014bf3:	xor    eax,eax
64014bf5:	pop    edi
64014bf6:	pop    esi
64014bf7:	ret    
64014bf8:	push   0x10
64014bfa:	push   0x64043bc8
64014bff:	call   0x640164d4
64014c04:	mov    eax,DWORD PTR [ebp+0x8]
64014c07:	cmp    eax,0xfffffffe
64014c0a:	jne    0x64014c27
64014c0c:	call   0x640166e6
64014c11:	and    DWORD PTR [eax],0x0
64014c14:	call   0x640166d3
64014c19:	mov    DWORD PTR [eax],0x9
64014c1f:	or     eax,0xffffffff
64014c22:	jmp    0x64014cb5
64014c27:	xor    edi,edi
64014c29:	cmp    eax,edi
64014c2b:	jl     0x64014c35
64014c2d:	cmp    eax,DWORD PTR ds:0x640556c8
64014c33:	jb     0x64014c56
64014c35:	call   0x640166e6
64014c3a:	mov    DWORD PTR [eax],edi
64014c3c:	call   0x640166d3
64014c41:	mov    DWORD PTR [eax],0x9
64014c47:	push   edi
64014c48:	push   edi
64014c49:	push   edi
64014c4a:	push   edi
64014c4b:	push   edi
64014c4c:	call   0x64013e62
64014c51:	add    esp,0x14
64014c54:	jmp    0x64014c1f
64014c56:	mov    ecx,eax
64014c58:	sar    ecx,0x5
64014c5b:	lea    ebx,[ecx*4+0x640556e0]
64014c62:	mov    esi,eax
64014c64:	and    esi,0x1f
64014c67:	shl    esi,0x6
64014c6a:	mov    ecx,DWORD PTR [ebx]
64014c6c:	movzx  ecx,BYTE PTR [ecx+esi*1+0x4]
64014c71:	and    ecx,0x1
64014c74:	je     0x64014c35
64014c76:	push   eax
64014c77:	call   0x640199ac
64014c7c:	pop    ecx
64014c7d:	mov    DWORD PTR [ebp-0x4],edi
64014c80:	mov    eax,DWORD PTR [ebx]
64014c82:	test   BYTE PTR [eax+esi*1+0x4],0x1
64014c87:	je     0x64014c97
64014c89:	push   DWORD PTR [ebp+0x8]
64014c8c:	call   0x64014b61
64014c91:	pop    ecx
64014c92:	mov    DWORD PTR [ebp-0x1c],eax
64014c95:	jmp    0x64014ca6
64014c97:	call   0x640166d3
64014c9c:	mov    DWORD PTR [eax],0x9
64014ca2:	or     DWORD PTR [ebp-0x1c],0xffffffff
64014ca6:	mov    DWORD PTR [ebp-0x4],0xfffffffe
64014cad:	call   0x64014cbb
64014cb2:	mov    eax,DWORD PTR [ebp-0x1c]
64014cb5:	call   0x64016519
64014cba:	ret    
64014cbb:	push   DWORD PTR [ebp+0x8]
64014cbe:	call   0x64019a4c
64014cc3:	pop    ecx
64014cc4:	ret    
64014cc5:	push   ebp
64014cc6:	mov    ebp,esp
64014cc8:	sub    esp,0x18
64014ccb:	push   ebx
64014ccc:	push   esi
64014ccd:	push   DWORD PTR [ebp+0xc]
64014cd0:	lea    ecx,[ebp-0x18]
64014cd3:	call   0x64014335
64014cd8:	mov    ebx,DWORD PTR [ebp+0x8]
64014cdb:	mov    esi,0x100
64014ce0:	cmp    ebx,esi
64014ce2:	jae    0x64014d38
64014ce4:	mov    ecx,DWORD PTR [ebp-0x18]
64014ce7:	cmp    DWORD PTR [ecx+0xac],0x1
64014cee:	jle    0x64014d04
64014cf0:	lea    eax,[ebp-0x18]
64014cf3:	push   eax
64014cf4:	push   0x1
64014cf6:	push   ebx
64014cf7:	call   0x6401ab70
64014cfc:	mov    ecx,DWORD PTR [ebp-0x18]
64014cff:	add    esp,0xc
64014d02:	jmp    0x64014d11
64014d04:	mov    eax,DWORD PTR [ecx+0xc8]
64014d0a:	movzx  eax,BYTE PTR [eax+ebx*2]
64014d0e:	and    eax,0x1
64014d11:	test   eax,eax
64014d13:	je     0x64014d24
64014d15:	mov    eax,DWORD PTR [ecx+0xcc]
64014d1b:	movzx  eax,BYTE PTR [eax+ebx*1]
64014d1f:	jmp    0x64014dcb
64014d24:	cmp    BYTE PTR [ebp-0xc],0x0
64014d28:	je     0x64014d31
64014d2a:	mov    eax,DWORD PTR [ebp-0x10]
64014d2d:	and    DWORD PTR [eax+0x70],0xfffffffd
64014d31:	mov    eax,ebx
64014d33:	jmp    0x64014dd8
64014d38:	mov    eax,DWORD PTR [ebp-0x18]
64014d3b:	cmp    DWORD PTR [eax+0xac],0x1
64014d42:	jle    0x64014d75
64014d44:	mov    DWORD PTR [ebp+0x8],ebx
64014d47:	sar    DWORD PTR [ebp+0x8],0x8
64014d4b:	lea    eax,[ebp-0x18]
64014d4e:	push   eax
64014d4f:	mov    eax,DWORD PTR [ebp+0x8]
64014d52:	and    eax,0xff
64014d57:	push   eax
64014d58:	call   0x64015127
64014d5d:	test   eax,eax
64014d5f:	pop    ecx
64014d60:	pop    ecx
64014d61:	je     0x64014d75
64014d63:	mov    al,BYTE PTR [ebp+0x8]
64014d66:	push   0x2
64014d68:	mov    BYTE PTR [ebp-0x4],al
64014d6b:	mov    BYTE PTR [ebp-0x3],bl
64014d6e:	mov    BYTE PTR [ebp-0x2],0x0
64014d72:	pop    ecx
64014d73:	jmp    0x64014d8a
64014d75:	call   0x640166d3
64014d7a:	mov    DWORD PTR [eax],0x2a
64014d80:	xor    ecx,ecx
64014d82:	mov    BYTE PTR [ebp-0x4],bl
64014d85:	mov    BYTE PTR [ebp-0x3],0x0
64014d89:	inc    ecx
64014d8a:	mov    eax,DWORD PTR [ebp-0x18]
64014d8d:	push   0x1
64014d8f:	push   DWORD PTR [eax+0x4]
64014d92:	lea    edx,[ebp-0x8]
64014d95:	push   0x3
64014d97:	push   edx
64014d98:	push   ecx
64014d99:	lea    ecx,[ebp-0x4]
64014d9c:	push   ecx
64014d9d:	push   esi
64014d9e:	push   DWORD PTR [eax+0x14]
64014da1:	lea    eax,[ebp-0x18]
64014da4:	push   eax
64014da5:	call   0x640162ac
64014daa:	add    esp,0x24
64014dad:	test   eax,eax
64014daf:	je     0x64014d24
64014db5:	cmp    eax,0x1
64014db8:	jne    0x64014dc0
64014dba:	movzx  eax,BYTE PTR [ebp-0x8]
64014dbe:	jmp    0x64014dcb
64014dc0:	movzx  ecx,BYTE PTR [ebp-0x7]
64014dc4:	xor    eax,eax
64014dc6:	mov    ah,BYTE PTR [ebp-0x8]
64014dc9:	or     eax,ecx
64014dcb:	cmp    BYTE PTR [ebp-0xc],0x0
64014dcf:	je     0x64014dd8
64014dd1:	mov    ecx,DWORD PTR [ebp-0x10]
64014dd4:	and    DWORD PTR [ecx+0x70],0xfffffffd
64014dd8:	pop    esi
64014dd9:	pop    ebx
64014dda:	leave  
64014ddb:	ret    
64014ddc:	cmp    DWORD PTR ds:0x64053a28,0x0
64014de3:	jne    0x64014df5
64014de5:	mov    eax,DWORD PTR [esp+0x4]
64014de9:	lea    ecx,[eax-0x41]
64014dec:	cmp    ecx,0x19
64014def:	ja     0x64014e02
64014df1:	add    eax,0x20
64014df4:	ret    
64014df5:	push   0x0
64014df7:	push   DWORD PTR [esp+0x8]
64014dfb:	call   0x64014cc5
64014e00:	pop    ecx
64014e01:	pop    ecx
64014e02:	ret    
64014e03:	mov    ecx,DWORD PTR [esp+0xc]
64014e07:	test   ecx,ecx
64014e09:	push   esi
64014e0a:	push   edi
64014e0b:	mov    edi,DWORD PTR [esp+0xc]
64014e0f:	mov    esi,edi
64014e11:	je     0x64014e3b
64014e13:	mov    edx,DWORD PTR [esp+0x10]
64014e17:	movzx  eax,WORD PTR [edx]
64014e1a:	mov    WORD PTR [edi],ax
64014e1d:	inc    edi
64014e1e:	inc    edi
64014e1f:	inc    edx
64014e20:	inc    edx
64014e21:	test   ax,ax
64014e24:	je     0x64014e29
64014e26:	dec    ecx
64014e27:	jne    0x64014e17
64014e29:	test   ecx,ecx
64014e2b:	je     0x64014e3b
64014e2d:	dec    ecx
64014e2e:	je     0x64014e3b
64014e30:	xor    eax,eax
64014e32:	shr    ecx,1
64014e34:	rep stos DWORD PTR es:[edi],eax
64014e36:	adc    ecx,ecx
64014e38:	rep stos WORD PTR es:[edi],ax
64014e3b:	pop    edi
64014e3c:	mov    eax,esi
64014e3e:	pop    esi
64014e3f:	ret    
64014e40:	push   ebp
64014e41:	mov    ebp,esp
64014e43:	cmp    DWORD PTR [ebp+0x14],0x0
64014e47:	push   ebx
64014e48:	mov    ebx,DWORD PTR [ebp+0x8]
64014e4b:	push   esi
64014e4c:	mov    esi,eax
64014e4e:	mov    eax,DWORD PTR [ebp+0xc]
64014e51:	push   edi
64014e52:	je     0x64014e63
64014e54:	mov    WORD PTR [esi],0x2d
64014e59:	add    esi,0x2
64014e5c:	neg    ebx
64014e5e:	adc    eax,0x0
64014e61:	neg    eax
64014e63:	mov    edi,esi
64014e65:	xor    ecx,ecx
64014e67:	push   ecx
64014e68:	push   DWORD PTR [ebp+0x10]
64014e6b:	push   eax
64014e6c:	push   ebx
64014e6d:	call   0x64019a70
64014e72:	cmp    ecx,0x9
64014e75:	mov    DWORD PTR [ebp+0xc],ebx
64014e78:	mov    ebx,eax
64014e7a:	mov    eax,edx
64014e7c:	jbe    0x64014e83
64014e7e:	add    ecx,0x57
64014e81:	jmp    0x64014e86
64014e83:	add    ecx,0x30
64014e86:	mov    WORD PTR [esi],cx
64014e89:	inc    esi
64014e8a:	inc    esi
64014e8b:	test   eax,eax
64014e8d:	ja     0x64014e65
64014e8f:	jb     0x64014e95
64014e91:	test   ebx,ebx
64014e93:	ja     0x64014e65
64014e95:	and    WORD PTR [esi],0x0
64014e99:	dec    esi
64014e9a:	dec    esi
64014e9b:	mov    cx,WORD PTR [edi]
64014e9e:	movzx  eax,WORD PTR [esi]
64014ea1:	mov    WORD PTR [esi],cx
64014ea4:	dec    esi
64014ea5:	mov    WORD PTR [edi],ax
64014ea8:	dec    esi
64014ea9:	inc    edi
64014eaa:	inc    edi
64014eab:	cmp    edi,esi
64014ead:	jb     0x64014e9b
64014eaf:	pop    edi
64014eb0:	pop    esi
64014eb1:	pop    ebx
64014eb2:	pop    ebp
64014eb3:	ret    0x10
64014eb6:	push   ebp
64014eb7:	mov    ebp,esp
64014eb9:	xor    eax,eax
64014ebb:	cmp    DWORD PTR [ebp+0x14],0xa
64014ebf:	jne    0x64014ed0
64014ec1:	cmp    DWORD PTR [ebp+0xc],eax
64014ec4:	jg     0x64014ed0
64014ec6:	jl     0x64014ecd
64014ec8:	cmp    DWORD PTR [ebp+0x8],eax
64014ecb:	jae    0x64014ed0
64014ecd:	xor    eax,eax
64014ecf:	inc    eax
64014ed0:	push   eax
64014ed1:	push   DWORD PTR [ebp+0x14]
64014ed4:	mov    eax,DWORD PTR [ebp+0x10]
64014ed7:	push   DWORD PTR [ebp+0xc]
64014eda:	push   DWORD PTR [ebp+0x8]
64014edd:	call   0x64014e40
64014ee2:	mov    eax,DWORD PTR [ebp+0x10]
64014ee5:	pop    ebp
64014ee6:	ret    
64014ee7:	push   ebp
64014ee8:	mov    ebp,esp
64014eea:	sub    esp,0x20
64014eed:	push   esi
64014eee:	xor    esi,esi
64014ef0:	cmp    DWORD PTR [ebp+0xc],esi
64014ef3:	jne    0x64014f12
64014ef5:	call   0x640166d3
64014efa:	push   esi
64014efb:	push   esi
64014efc:	push   esi
64014efd:	push   esi
64014efe:	push   esi
64014eff:	mov    DWORD PTR [eax],0x16
64014f05:	call   0x64013e62
64014f0a:	add    esp,0x14
64014f0d:	or     eax,0xffffffff
64014f10:	jmp    0x64014f39
64014f12:	push   DWORD PTR [ebp+0x14]
64014f15:	lea    eax,[ebp-0x20]
64014f18:	push   DWORD PTR [ebp+0x10]
64014f1b:	mov    DWORD PTR [ebp-0x1c],0x7fffffff
64014f22:	push   DWORD PTR [ebp+0xc]
64014f25:	mov    DWORD PTR [ebp-0x14],0x42
64014f2c:	push   eax
64014f2d:	mov    DWORD PTR [ebp-0x18],esi
64014f30:	mov    DWORD PTR [ebp-0x20],esi
64014f33:	call   DWORD PTR [ebp+0x8]
64014f36:	add    esp,0x10
64014f39:	pop    esi
64014f3a:	leave  
64014f3b:	ret    
64014f3c:	push   DWORD PTR [esp+0x8]
64014f40:	push   0x0
64014f42:	push   DWORD PTR [esp+0xc]
64014f46:	push   0x6401c3f8
64014f4b:	call   0x64014ee7
64014f50:	add    esp,0x10
64014f53:	ret    
64014f54:	push   ebp
64014f55:	mov    ebp,esp
64014f57:	sub    esp,0x20
64014f5a:	push   ebx
64014f5b:	xor    ebx,ebx
64014f5d:	cmp    DWORD PTR [ebp+0x14],ebx
64014f60:	jne    0x64014f82
64014f62:	call   0x640166d3
64014f67:	push   ebx
64014f68:	push   ebx
64014f69:	push   ebx
64014f6a:	push   ebx
64014f6b:	push   ebx
64014f6c:	mov    DWORD PTR [eax],0x16
64014f72:	call   0x64013e62
64014f77:	add    esp,0x14
64014f7a:	or     eax,0xffffffff
64014f7d:	jmp    0x64015047
64014f82:	push   esi
64014f83:	mov    esi,DWORD PTR [ebp+0xc]
64014f86:	push   edi
64014f87:	mov    edi,DWORD PTR [ebp+0x10]
64014f8a:	cmp    edi,ebx
64014f8c:	je     0x64014fb2
64014f8e:	cmp    esi,ebx
64014f90:	jne    0x64014fb2
64014f92:	call   0x640166d3
64014f97:	push   ebx
64014f98:	push   ebx
64014f99:	push   ebx
64014f9a:	push   ebx
64014f9b:	push   ebx
64014f9c:	mov    DWORD PTR [eax],0x16
64014fa2:	call   0x64013e62
64014fa7:	add    esp,0x14
64014faa:	or     eax,0xffffffff
64014fad:	jmp    0x64015045
64014fb2:	cmp    edi,0x3fffffff
64014fb8:	mov    DWORD PTR [ebp-0x14],0x42
64014fbf:	mov    DWORD PTR [ebp-0x18],esi
64014fc2:	mov    DWORD PTR [ebp-0x20],esi
64014fc5:	jbe    0x64014fd0
64014fc7:	mov    DWORD PTR [ebp-0x1c],0x7fffffff
64014fce:	jmp    0x64014fd6
64014fd0:	lea    eax,[edi+edi*1]
64014fd3:	mov    DWORD PTR [ebp-0x1c],eax
64014fd6:	push   DWORD PTR [ebp+0x1c]
64014fd9:	lea    eax,[ebp-0x20]
64014fdc:	push   DWORD PTR [ebp+0x18]
64014fdf:	push   DWORD PTR [ebp+0x14]
64014fe2:	push   eax
64014fe3:	call   DWORD PTR [ebp+0x8]
64014fe6:	add    esp,0x10
64014fe9:	cmp    esi,ebx
64014feb:	mov    DWORD PTR [ebp+0x14],eax
64014fee:	je     0x64015045
64014ff0:	cmp    eax,ebx
64014ff2:	jl     0x64015036
64014ff4:	dec    DWORD PTR [ebp-0x1c]
64014ff7:	js     0x64015003
64014ff9:	mov    eax,DWORD PTR [ebp-0x20]
64014ffc:	mov    BYTE PTR [eax],bl
64014ffe:	inc    DWORD PTR [ebp-0x20]
64015001:	jmp    0x64015014
64015003:	lea    eax,[ebp-0x20]
64015006:	push   eax
64015007:	push   ebx
64015008:	call   0x64019fdb
6401500d:	cmp    eax,0xffffffff
64015010:	pop    ecx
64015011:	pop    ecx
64015012:	je     0x64015036
64015014:	dec    DWORD PTR [ebp-0x1c]
64015017:	js     0x64015020
64015019:	mov    eax,DWORD PTR [ebp-0x20]
6401501c:	mov    BYTE PTR [eax],bl
6401501e:	jmp    0x64015031
64015020:	lea    eax,[ebp-0x20]
64015023:	push   eax
64015024:	push   ebx
64015025:	call   0x64019fdb
6401502a:	cmp    eax,0xffffffff
6401502d:	pop    ecx
6401502e:	pop    ecx
6401502f:	je     0x64015036
64015031:	mov    eax,DWORD PTR [ebp+0x14]
64015034:	jmp    0x64015045
64015036:	xor    eax,eax
64015038:	cmp    DWORD PTR [ebp-0x1c],ebx
6401503b:	mov    WORD PTR [esi+edi*2-0x2],bx
64015040:	setge  al
64015043:	dec    eax
64015044:	dec    eax
64015045:	pop    edi
64015046:	pop    esi
64015047:	pop    ebx
64015048:	leave  
64015049:	ret    
6401504a:	push   ebp
6401504b:	mov    ebp,esp
6401504d:	push   esi
6401504e:	xor    esi,esi
64015050:	cmp    DWORD PTR [ebp+0x10],esi
64015053:	jne    0x64015072
64015055:	call   0x640166d3
6401505a:	push   esi
6401505b:	push   esi
6401505c:	push   esi
6401505d:	push   esi
6401505e:	push   esi
6401505f:	mov    DWORD PTR [eax],0x16
64015065:	call   0x64013e62
6401506a:	add    esp,0x14
6401506d:	or     eax,0xffffffff
64015070:	jmp    0x640150ce
64015072:	push   edi
64015073:	mov    edi,DWORD PTR [ebp+0x8]
64015076:	cmp    edi,esi
64015078:	je     0x6401507f
6401507a:	cmp    DWORD PTR [ebp+0xc],esi
6401507d:	ja     0x6401508c
6401507f:	call   0x640166d3
64015084:	mov    DWORD PTR [eax],0x16
6401508a:	jmp    0x640150bd
6401508c:	push   DWORD PTR [ebp+0x18]
6401508f:	push   DWORD PTR [ebp+0x14]
64015092:	push   DWORD PTR [ebp+0x10]
64015095:	push   DWORD PTR [ebp+0xc]
64015098:	push   edi
64015099:	push   0x6401cd2d
6401509e:	call   0x64014f54
640150a3:	add    esp,0x18
640150a6:	cmp    eax,esi
640150a8:	jge    0x640150ad
640150aa:	mov    WORD PTR [edi],si
640150ad:	cmp    eax,0xfffffffe
640150b0:	jne    0x640150cd
640150b2:	call   0x640166d3
640150b7:	mov    DWORD PTR [eax],0x22
640150bd:	push   esi
640150be:	push   esi
640150bf:	push   esi
640150c0:	push   esi
640150c1:	push   esi
640150c2:	call   0x64013e62
640150c7:	add    esp,0x14
640150ca:	or     eax,0xffffffff
640150cd:	pop    edi
640150ce:	pop    esi
640150cf:	pop    ebp
640150d0:	ret    
640150d1:	push   DWORD PTR [esp+0x10]
640150d5:	push   0x0
640150d7:	push   DWORD PTR [esp+0x14]
640150db:	push   DWORD PTR [esp+0x14]
640150df:	push   DWORD PTR [esp+0x14]
640150e3:	call   0x6401504a
640150e8:	add    esp,0x14
640150eb:	ret    
640150ec:	push   0xa
640150ee:	push   0x0
640150f0:	push   DWORD PTR [esp+0xc]
640150f4:	call   0x6401d8f9
640150f9:	add    esp,0xc
640150fc:	ret    
640150fd:	push   DWORD PTR ds:0x640543a0
64015103:	call   0x6401781e
64015108:	test   eax,eax
6401510a:	pop    ecx
6401510b:	je     0x6401510f
6401510d:	call   eax
6401510f:	push   0x19
64015111:	call   0x6401bffd
64015116:	push   0x1
64015118:	push   0x0
6401511a:	call   0x640164b5
6401511f:	add    esp,0xc
64015122:	jmp    0x640163c2
64015127:	push   ebp
64015128:	mov    ebp,esp
6401512a:	sub    esp,0x10
6401512d:	push   DWORD PTR [ebp+0xc]
64015130:	lea    ecx,[ebp-0x10]
64015133:	call   0x64014335
64015138:	movzx  eax,BYTE PTR [ebp+0x8]
6401513c:	mov    ecx,DWORD PTR [ebp-0x10]
6401513f:	mov    ecx,DWORD PTR [ecx+0xc8]
64015145:	movzx  eax,WORD PTR [ecx+eax*2]
64015149:	and    eax,0x8000
6401514e:	cmp    BYTE PTR [ebp-0x4],0x0
64015152:	je     0x6401515b
64015154:	mov    ecx,DWORD PTR [ebp-0x8]
64015157:	and    DWORD PTR [ecx+0x70],0xfffffffd
6401515b:	leave  
6401515c:	ret    
6401515d:	push   0x0
6401515f:	push   DWORD PTR [esp+0x8]
64015163:	call   0x64015127
64015168:	pop    ecx
64015169:	pop    ecx
6401516a:	ret    
6401516b:	int3   
6401516c:	int3   
6401516d:	int3   
6401516e:	int3   
6401516f:	int3   
64015170:	mov    edx,DWORD PTR [esp+0xc]
64015174:	mov    ecx,DWORD PTR [esp+0x4]
64015178:	test   edx,edx
6401517a:	je     0x640151e5
6401517c:	xor    eax,eax
6401517e:	mov    al,BYTE PTR [esp+0x8]
64015182:	test   al,al
64015184:	jne    0x6401519c
64015186:	cmp    edx,0x100
6401518c:	jb     0x6401519c
6401518e:	cmp    DWORD PTR ds:0x64054698,0x0
64015195:	je     0x6401519c
64015197:	jmp    0x6401d9e7
6401519c:	push   edi
6401519d:	mov    edi,ecx
6401519f:	cmp    edx,0x4
640151a2:	jb     0x640151d5
640151a4:	neg    ecx
640151a6:	and    ecx,0x3
640151a9:	je     0x640151b7
640151ab:	sub    edx,ecx
640151ad:	mov    BYTE PTR [edi],al
640151af:	add    edi,0x1
640151b2:	sub    ecx,0x1
640151b5:	jne    0x640151ad
640151b7:	mov    ecx,eax
640151b9:	shl    eax,0x8
640151bc:	add    eax,ecx
640151be:	mov    ecx,eax
640151c0:	shl    eax,0x10
640151c3:	add    eax,ecx
640151c5:	mov    ecx,edx
640151c7:	and    edx,0x3
640151ca:	shr    ecx,0x2
640151cd:	je     0x640151d5
640151cf:	rep stos DWORD PTR es:[edi],eax
640151d1:	test   edx,edx
640151d3:	je     0x640151df
640151d5:	mov    BYTE PTR [edi],al
640151d7:	add    edi,0x1
640151da:	sub    edx,0x1
640151dd:	jne    0x640151d5
640151df:	mov    eax,DWORD PTR [esp+0x8]
640151e3:	pop    edi
640151e4:	ret    
640151e5:	mov    eax,DWORD PTR [esp+0x4]
640151e9:	ret    
640151ea:	int3   
640151eb:	int3   
640151ec:	int3   
640151ed:	int3   
640151ee:	int3   
640151ef:	int3   
640151f0:	push   ebp
640151f1:	mov    ebp,esp
640151f3:	push   edi
640151f4:	push   esi
640151f5:	mov    esi,DWORD PTR [ebp+0xc]
640151f8:	mov    ecx,DWORD PTR [ebp+0x10]
640151fb:	mov    edi,DWORD PTR [ebp+0x8]
640151fe:	mov    eax,ecx
64015200:	mov    edx,ecx
64015202:	add    eax,esi
64015204:	cmp    edi,esi
64015206:	jbe    0x64015210
64015208:	cmp    edi,eax
6401520a:	jb     0x640153b4
64015210:	cmp    ecx,0x100
64015216:	jb     0x64015237
64015218:	cmp    DWORD PTR ds:0x64054698,0x0
6401521f:	je     0x64015237
64015221:	push   edi
64015222:	push   esi
64015223:	and    edi,0xf
64015226:	and    esi,0xf
64015229:	cmp    edi,esi
6401522b:	pop    esi
6401522c:	pop    edi
6401522d:	jne    0x64015237
6401522f:	pop    esi
64015230:	pop    edi
64015231:	pop    ebp
64015232:	jmp    0x6401db11
64015237:	test   edi,0x3
6401523d:	jne    0x64015254
6401523f:	shr    ecx,0x2
64015242:	and    edx,0x3
64015245:	cmp    ecx,0x8
64015248:	jb     0x64015274
6401524a:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
6401524c:	jmp    DWORD PTR [edx*4+0x64015364]
64015253:	nop
64015254:	mov    eax,edi
64015256:	mov    edx,0x3
6401525b:	sub    ecx,0x4
6401525e:	jb     0x6401526c
64015260:	and    eax,0x3
64015263:	add    ecx,eax
64015265:	jmp    DWORD PTR [eax*4+0x64015278]
6401526c:	jmp    DWORD PTR [ecx*4+0x64015374]
64015273:	nop
64015274:	jmp    DWORD PTR [ecx*4+0x640152f8]
6401527b:	nop
6401527c:	mov    BYTE PTR [edx+0x1],dl
6401527f:	fs mov ah,0x52
64015282:	add    DWORD PTR [eax+ebx*8+0x52],esp
64015286:	add    DWORD PTR [ebx+eiz*1-0x2f],esp
6401528a:	mov    al,BYTE PTR [esi]
6401528c:	mov    BYTE PTR [edi],al
6401528e:	mov    al,BYTE PTR [esi+0x1]
64015291:	mov    BYTE PTR [edi+0x1],al
64015294:	mov    al,BYTE PTR [esi+0x2]
64015297:	shr    ecx,0x2
6401529a:	mov    BYTE PTR [edi+0x2],al
6401529d:	add    esi,0x3
640152a0:	add    edi,0x3
640152a3:	cmp    ecx,0x8
640152a6:	jb     0x64015274
640152a8:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
640152aa:	jmp    DWORD PTR [edx*4+0x64015364]
640152b1:	lea    ecx,[ecx+0x0]
640152b4:	and    edx,ecx
640152b6:	mov    al,BYTE PTR [esi]
640152b8:	mov    BYTE PTR [edi],al
640152ba:	mov    al,BYTE PTR [esi+0x1]
640152bd:	shr    ecx,0x2
640152c0:	mov    BYTE PTR [edi+0x1],al
640152c3:	add    esi,0x2
640152c6:	add    edi,0x2
640152c9:	cmp    ecx,0x8
640152cc:	jb     0x64015274
640152ce:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
640152d0:	jmp    DWORD PTR [edx*4+0x64015364]
640152d7:	nop
640152d8:	and    edx,ecx
640152da:	mov    al,BYTE PTR [esi]
640152dc:	mov    BYTE PTR [edi],al
640152de:	add    esi,0x1
640152e1:	shr    ecx,0x2
640152e4:	add    edi,0x1
640152e7:	cmp    ecx,0x8
640152ea:	jb     0x64015274
640152ec:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
640152ee:	jmp    DWORD PTR [edx*4+0x64015364]
640152f5:	lea    ecx,[ecx+0x0]
640152f8:	pop    ebx
640152f9:	push   ebx
640152fa:	add    DWORD PTR [eax+ecx*2+0x53],esp
640152fe:	add    DWORD PTR [eax+eax*2+0x53],esp
64015302:	add    DWORD PTR [eax+edi*1+0x53],esp
64015306:	add    DWORD PTR [eax+esi*1+0x53],esp
6401530a:	add    DWORD PTR [eax+ebp*1+0x53],esp
6401530e:	add    DWORD PTR [eax+eiz*1+0x53],esp
64015312:	add    DWORD PTR [eax+ebx*1+0x53],esp
64015316:	add    DWORD PTR [ebx+ecx*4+0x44],esp
6401531a:	mov    fs,esp
6401531c:	mov    DWORD PTR [edi+ecx*4-0x1c],eax
64015320:	mov    eax,DWORD PTR [esi+ecx*4-0x18]
64015324:	mov    DWORD PTR [edi+ecx*4-0x18],eax
64015328:	mov    eax,DWORD PTR [esi+ecx*4-0x14]
6401532c:	mov    DWORD PTR [edi+ecx*4-0x14],eax
64015330:	mov    eax,DWORD PTR [esi+ecx*4-0x10]
64015334:	mov    DWORD PTR [edi+ecx*4-0x10],eax
64015338:	mov    eax,DWORD PTR [esi+ecx*4-0xc]
6401533c:	mov    DWORD PTR [edi+ecx*4-0xc],eax
64015340:	mov    eax,DWORD PTR [esi+ecx*4-0x8]
64015344:	mov    DWORD PTR [edi+ecx*4-0x8],eax
64015348:	mov    eax,DWORD PTR [esi+ecx*4-0x4]
6401534c:	mov    DWORD PTR [edi+ecx*4-0x4],eax
64015350:	lea    eax,[ecx*4+0x0]
64015357:	add    esi,eax
64015359:	add    edi,eax
6401535b:	jmp    DWORD PTR [edx*4+0x64015364]
64015362:	mov    edi,edi
64015364:	je     0x640153b9
64015366:	add    DWORD PTR [esp+edi*2+0x53],esp
6401536a:	add    DWORD PTR [eax+ecx*4+0x53],esp
6401536e:	add    DWORD PTR [esp+ebx*4+0x53],esp
64015372:	add    DWORD PTR [ebx+ecx*4+0x45],esp
64015376:	or     BYTE PTR [esi+0x5f],bl
64015379:	leave  
6401537a:	ret    
6401537b:	nop
6401537c:	mov    al,BYTE PTR [esi]
6401537e:	mov    BYTE PTR [edi],al
64015380:	mov    eax,DWORD PTR [ebp+0x8]
64015383:	pop    esi
64015384:	pop    edi
64015385:	leave  
64015386:	ret    
64015387:	nop
64015388:	mov    al,BYTE PTR [esi]
6401538a:	mov    BYTE PTR [edi],al
6401538c:	mov    al,BYTE PTR [esi+0x1]
6401538f:	mov    BYTE PTR [edi+0x1],al
64015392:	mov    eax,DWORD PTR [ebp+0x8]
64015395:	pop    esi
64015396:	pop    edi
64015397:	leave  
64015398:	ret    
64015399:	lea    ecx,[ecx+0x0]
6401539c:	mov    al,BYTE PTR [esi]
6401539e:	mov    BYTE PTR [edi],al
640153a0:	mov    al,BYTE PTR [esi+0x1]
640153a3:	mov    BYTE PTR [edi+0x1],al
640153a6:	mov    al,BYTE PTR [esi+0x2]
640153a9:	mov    BYTE PTR [edi+0x2],al
640153ac:	mov    eax,DWORD PTR [ebp+0x8]
640153af:	pop    esi
640153b0:	pop    edi
640153b1:	leave  
640153b2:	ret    
640153b3:	nop
640153b4:	lea    esi,[ecx+esi*1-0x4]
640153b8:	lea    edi,[ecx+edi*1-0x4]
640153bc:	test   edi,0x3
640153c2:	jne    0x640153e8
640153c4:	shr    ecx,0x2
640153c7:	and    edx,0x3
640153ca:	cmp    ecx,0x8
640153cd:	jb     0x640153dc
640153cf:	std    
640153d0:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
640153d2:	cld    
640153d3:	jmp    DWORD PTR [edx*4+0x64015500]
640153da:	mov    edi,edi
640153dc:	neg    ecx
640153de:	jmp    DWORD PTR [ecx*4+0x640154b0]
640153e5:	lea    ecx,[ecx+0x0]
640153e8:	mov    eax,edi
640153ea:	mov    edx,0x3
640153ef:	cmp    ecx,0x4
640153f2:	jb     0x64015400
640153f4:	and    eax,0x3
640153f7:	sub    ecx,eax
640153f9:	jmp    DWORD PTR [eax*4+0x64015404]
64015400:	jmp    DWORD PTR [ecx*4+0x64015500]
64015407:	nop
64015408:	adc    al,0x54
6401540a:	add    DWORD PTR [eax+edi*1+0x54],esp
6401540e:	add    DWORD PTR [eax+eiz*2+0x54],esp
64015412:	add    DWORD PTR [edx+ecx*4+0x46],esp
64015416:	add    esp,DWORD PTR [ebx]
64015418:	ror    DWORD PTR [eax-0x117cfcb9],1
6401541e:	add    ecx,eax
64015420:	jmp    0x65f0d727
64015425:	cmp    ecx,0x8
64015428:	jb     0x640153dc
6401542a:	std    
6401542b:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
6401542d:	cld    
6401542e:	jmp    DWORD PTR [edx*4+0x64015500]
64015435:	lea    ecx,[ecx+0x0]
64015438:	mov    al,BYTE PTR [esi+0x3]
6401543b:	and    edx,ecx
6401543d:	mov    BYTE PTR [edi+0x3],al
64015440:	mov    al,BYTE PTR [esi+0x2]
64015443:	shr    ecx,0x2
64015446:	mov    BYTE PTR [edi+0x2],al
64015449:	sub    esi,0x2
6401544c:	sub    edi,0x2
6401544f:	cmp    ecx,0x8
64015452:	jb     0x640153dc
64015454:	std    
64015455:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
64015457:	cld    
64015458:	jmp    DWORD PTR [edx*4+0x64015500]
6401545f:	nop
64015460:	mov    al,BYTE PTR [esi+0x3]
64015463:	and    edx,ecx
64015465:	mov    BYTE PTR [edi+0x3],al
64015468:	mov    al,BYTE PTR [esi+0x2]
6401546b:	mov    BYTE PTR [edi+0x2],al
6401546e:	mov    al,BYTE PTR [esi+0x1]
64015471:	shr    ecx,0x2
64015474:	mov    BYTE PTR [edi+0x1],al
64015477:	sub    esi,0x3
6401547a:	sub    edi,0x3
6401547d:	cmp    ecx,0x8
64015480:	jb     0x640153dc
64015486:	std    
64015487:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
64015489:	cld    
6401548a:	jmp    DWORD PTR [edx*4+0x64015500]
64015491:	lea    ecx,[ecx+0x0]
64015494:	mov    ah,0x54
64015496:	add    DWORD PTR [esp+edi*4+0x54],esp
6401549a:	add    DWORD PTR [esp+eax*8+0x54],esp
6401549e:	add    DWORD PTR [esp+ecx*8+0x54],esp
640154a2:	add    DWORD PTR [esp+edx*8+0x54],esp
640154a6:	add    DWORD PTR [esp+ebx*8+0x54],esp
640154aa:	add    DWORD PTR [esp+eiz*8+0x54],esp
640154ae:	add    DWORD PTR [edi+esi*8+0x54],esp
640154b2:	add    DWORD PTR [ebx+ecx*4+0x44],esp
640154b6:	mov    ds,WORD PTR [ecx+ecx*4]
640154b9:	inc    esp
640154ba:	(bad)  
640154bb:	sbb    al,0x8b
640154bd:	inc    esp
640154be:	mov    ds,WORD PTR [eax]
640154c0:	mov    DWORD PTR [edi+ecx*4+0x18],eax
640154c4:	mov    eax,DWORD PTR [esi+ecx*4+0x14]
640154c8:	mov    DWORD PTR [edi+ecx*4+0x14],eax
640154cc:	mov    eax,DWORD PTR [esi+ecx*4+0x10]
640154d0:	mov    DWORD PTR [edi+ecx*4+0x10],eax
640154d4:	mov    eax,DWORD PTR [esi+ecx*4+0xc]
640154d8:	mov    DWORD PTR [edi+ecx*4+0xc],eax
640154dc:	mov    eax,DWORD PTR [esi+ecx*4+0x8]
640154e0:	mov    DWORD PTR [edi+ecx*4+0x8],eax
640154e4:	mov    eax,DWORD PTR [esi+ecx*4+0x4]
640154e8:	mov    DWORD PTR [edi+ecx*4+0x4],eax
640154ec:	lea    eax,[ecx*4+0x0]
640154f3:	add    esi,eax
640154f5:	add    edi,eax
640154f7:	jmp    DWORD PTR [edx*4+0x64015500]
640154fe:	mov    edi,edi
64015500:	adc    BYTE PTR [ebp+0x1],dl
64015503:	sbb    BYTE PTR fs:[ebp+0x1],dl
64015507:	sub    BYTE PTR fs:[ebp+0x1],dl
6401550b:	fs cmp al,0x55
6401550e:	add    DWORD PTR [ebx+ecx*4+0x45],esp
64015512:	or     BYTE PTR [esi+0x5f],bl
64015515:	leave  
64015516:	ret    
64015517:	nop
64015518:	mov    al,BYTE PTR [esi+0x3]
6401551b:	mov    BYTE PTR [edi+0x3],al
6401551e:	mov    eax,DWORD PTR [ebp+0x8]
64015521:	pop    esi
64015522:	pop    edi
64015523:	leave  
64015524:	ret    
64015525:	lea    ecx,[ecx+0x0]
64015528:	mov    al,BYTE PTR [esi+0x3]
6401552b:	mov    BYTE PTR [edi+0x3],al
6401552e:	mov    al,BYTE PTR [esi+0x2]
64015531:	mov    BYTE PTR [edi+0x2],al
64015534:	mov    eax,DWORD PTR [ebp+0x8]
64015537:	pop    esi
64015538:	pop    edi
64015539:	leave  
6401553a:	ret    
6401553b:	nop
6401553c:	mov    al,BYTE PTR [esi+0x3]
6401553f:	mov    BYTE PTR [edi+0x3],al
64015542:	mov    al,BYTE PTR [esi+0x2]
64015545:	mov    BYTE PTR [edi+0x2],al
64015548:	mov    al,BYTE PTR [esi+0x1]
6401554b:	mov    BYTE PTR [edi+0x1],al
6401554e:	mov    eax,DWORD PTR [ebp+0x8]
64015551:	pop    esi
64015552:	pop    edi
64015553:	leave  
64015554:	ret    
64015555:	int3   
64015556:	int3   
64015557:	int3   
64015558:	int3   
64015559:	int3   
6401555a:	int3   
6401555b:	int3   
6401555c:	int3   
6401555d:	int3   
6401555e:	int3   
6401555f:	int3   
64015560:	cmp    cl,0x40
64015563:	jae    0x6401557a
64015565:	cmp    cl,0x20
64015568:	jae    0x64015570
6401556a:	shrd   eax,edx,cl
6401556d:	shr    edx,cl
6401556f:	ret    
64015570:	mov    eax,edx
64015572:	xor    edx,edx
64015574:	and    cl,0x1f
64015577:	shr    eax,cl
64015579:	ret    
6401557a:	xor    eax,eax
6401557c:	xor    edx,edx
6401557e:	ret    
6401557f:	mov    ecx,DWORD PTR [esp+0x4]
64015583:	push   ebx
64015584:	push   esi
64015585:	push   edi
64015586:	xor    edi,edi
64015588:	cmp    ecx,edi
6401558a:	je     0x64015594
6401558c:	mov    ebx,DWORD PTR [esp+0x14]
64015590:	cmp    ebx,edi
64015592:	ja     0x640155af
64015594:	call   0x640166d3
64015599:	push   0x16
6401559b:	pop    esi
6401559c:	mov    DWORD PTR [eax],esi
6401559e:	push   edi
6401559f:	push   edi
640155a0:	push   edi
640155a1:	push   edi
640155a2:	push   edi
640155a3:	call   0x64013e62
640155a8:	add    esp,0x14
640155ab:	mov    eax,esi
640155ad:	jmp    0x640155e7
640155af:	mov    esi,DWORD PTR [esp+0x18]
640155b3:	cmp    esi,edi
640155b5:	jne    0x640155bc
640155b7:	mov    WORD PTR [ecx],di
640155ba:	jmp    0x64015594
640155bc:	mov    edx,ecx
640155be:	movzx  eax,WORD PTR [esi]
640155c1:	mov    WORD PTR [edx],ax
640155c4:	inc    edx
640155c5:	inc    edx
640155c6:	inc    esi
640155c7:	inc    esi
640155c8:	cmp    ax,di
640155cb:	je     0x640155d0
640155cd:	dec    ebx
640155ce:	jne    0x640155be
640155d0:	cmp    ebx,edi
640155d2:	jne    0x640155e5
640155d4:	mov    WORD PTR [ecx],di
640155d7:	call   0x640166d3
640155dc:	push   0x22
640155de:	pop    ecx
640155df:	mov    DWORD PTR [eax],ecx
640155e1:	mov    esi,ecx
640155e3:	jmp    0x6401559e
640155e5:	xor    eax,eax
640155e7:	pop    edi
640155e8:	pop    esi
640155e9:	pop    ebx
640155ea:	ret    
640155eb:	push   0xc
640155ed:	push   0x64043be8
640155f2:	call   0x640164d4
640155f7:	mov    ecx,DWORD PTR [ebp+0x8]
640155fa:	xor    edi,edi
640155fc:	cmp    ecx,edi
640155fe:	jbe    0x6401562e
64015600:	push   0xffffffe0
64015602:	pop    eax
64015603:	xor    edx,edx
64015605:	div    ecx
64015607:	cmp    eax,DWORD PTR [ebp+0xc]
6401560a:	sbb    eax,eax
6401560c:	inc    eax
6401560d:	jne    0x6401562e
6401560f:	call   0x640166d3
64015614:	mov    DWORD PTR [eax],0xc
6401561a:	push   edi
6401561b:	push   edi
6401561c:	push   edi
6401561d:	push   edi
6401561e:	push   edi
6401561f:	call   0x64013e62
64015624:	add    esp,0x14
64015627:	xor    eax,eax
64015629:	jmp    0x64015703
6401562e:	imul   ecx,DWORD PTR [ebp+0xc]
64015632:	mov    esi,ecx
64015634:	mov    DWORD PTR [ebp+0x8],esi
64015637:	cmp    esi,edi
64015639:	jne    0x6401563e
6401563b:	xor    esi,esi
6401563d:	inc    esi
6401563e:	xor    ebx,ebx
64015640:	mov    DWORD PTR [ebp-0x1c],ebx
64015643:	cmp    esi,0xffffffe0
64015646:	ja     0x640156b1
64015648:	cmp    DWORD PTR ds:0x640556c4,0x3
6401564f:	jne    0x6401569c
64015651:	add    esi,0xf
64015654:	and    esi,0xfffffff0
64015657:	mov    DWORD PTR [ebp+0xc],esi
6401565a:	mov    eax,DWORD PTR [ebp+0x8]
6401565d:	cmp    eax,DWORD PTR ds:0x640546a4
64015663:	ja     0x6401569c
64015665:	push   0x4
64015667:	call   0x6401b49a
6401566c:	pop    ecx
6401566d:	mov    DWORD PTR [ebp-0x4],edi
64015670:	push   DWORD PTR [ebp+0x8]
64015673:	call   0x6401bce7
64015678:	pop    ecx
64015679:	mov    DWORD PTR [ebp-0x1c],eax
6401567c:	mov    DWORD PTR [ebp-0x4],0xfffffffe
64015683:	call   0x640156e7
64015688:	mov    ebx,DWORD PTR [ebp-0x1c]
6401568b:	cmp    ebx,edi
6401568d:	je     0x640156a0
6401568f:	push   DWORD PTR [ebp+0x8]
64015692:	push   edi
64015693:	push   ebx
64015694:	call   0x64015170
64015699:	add    esp,0xc
6401569c:	cmp    ebx,edi
6401569e:	jne    0x64015701
640156a0:	push   esi
640156a1:	push   0x8
640156a3:	push   DWORD PTR ds:0x64053ed4
640156a9:	call   DWORD PTR ds:0x6402c194
640156af:	mov    ebx,eax
640156b1:	cmp    ebx,edi
640156b3:	jne    0x64015701
640156b5:	cmp    DWORD PTR ds:0x6405438c,edi
640156bb:	je     0x640156f0
640156bd:	push   esi
640156be:	call   0x64016a8f
640156c3:	pop    ecx
640156c4:	test   eax,eax
640156c6:	jne    0x6401563e
640156cc:	mov    eax,DWORD PTR [ebp+0x10]
640156cf:	cmp    eax,edi
640156d1:	je     0x64015627
640156d7:	mov    DWORD PTR [eax],0xc
640156dd:	jmp    0x64015627
640156e2:	xor    edi,edi
640156e4:	mov    esi,DWORD PTR [ebp+0xc]
640156e7:	push   0x4
640156e9:	call   0x6401b3c2
640156ee:	pop    ecx
640156ef:	ret    
640156f0:	cmp    ebx,edi
640156f2:	jne    0x64015701
640156f4:	mov    eax,DWORD PTR [ebp+0x10]
640156f7:	cmp    eax,edi
640156f9:	je     0x64015701
640156fb:	mov    DWORD PTR [eax],0xc
64015701:	mov    eax,ebx
64015703:	call   0x64016519
64015708:	ret    
64015709:	push   0x10
6401570b:	push   0x64043c08
64015710:	call   0x640164d4
64015715:	mov    ebx,DWORD PTR [ebp+0x8]
64015718:	test   ebx,ebx
6401571a:	jne    0x6401572a
6401571c:	push   DWORD PTR [ebp+0xc]
6401571f:	call   0x640148ce
64015724:	pop    ecx
64015725:	jmp    0x640158f6
6401572a:	mov    esi,DWORD PTR [ebp+0xc]
6401572d:	test   esi,esi
6401572f:	jne    0x6401573d
64015731:	push   ebx
64015732:	call   0x640147cf
64015737:	pop    ecx
64015738:	jmp    0x640158f4
6401573d:	cmp    DWORD PTR ds:0x640556c4,0x3
64015744:	jne    0x640158dd
6401574a:	xor    edi,edi
6401574c:	mov    DWORD PTR [ebp-0x1c],edi
6401574f:	cmp    esi,0xffffffe0
64015752:	ja     0x640158e2
64015758:	push   0x4
6401575a:	call   0x6401b49a
6401575f:	pop    ecx
64015760:	mov    DWORD PTR [ebp-0x4],edi
64015763:	push   ebx
64015764:	call   0x6401b513
64015769:	pop    ecx
6401576a:	mov    DWORD PTR [ebp-0x20],eax
6401576d:	cmp    eax,edi
6401576f:	je     0x64015813
64015775:	cmp    esi,DWORD PTR ds:0x640546a4
6401577b:	ja     0x640157c6
6401577d:	push   esi
6401577e:	push   ebx
6401577f:	push   eax
64015780:	call   0x6401ba08
64015785:	add    esp,0xc
64015788:	test   eax,eax
6401578a:	je     0x64015791
6401578c:	mov    DWORD PTR [ebp-0x1c],ebx
6401578f:	jmp    0x640157c6
64015791:	push   esi
64015792:	call   0x6401bce7
64015797:	pop    ecx
64015798:	mov    DWORD PTR [ebp-0x1c],eax
6401579b:	cmp    eax,edi
6401579d:	je     0x640157c6
6401579f:	mov    eax,DWORD PTR [ebx-0x4]
640157a2:	dec    eax
640157a3:	cmp    eax,esi
640157a5:	jb     0x640157a9
640157a7:	mov    eax,esi
640157a9:	push   eax
640157aa:	push   ebx
640157ab:	push   DWORD PTR [ebp-0x1c]
640157ae:	call   0x640151f0
640157b3:	push   ebx
640157b4:	call   0x6401b513
640157b9:	mov    DWORD PTR [ebp-0x20],eax
640157bc:	push   ebx
640157bd:	push   eax
640157be:	call   0x6401b53e
640157c3:	add    esp,0x18
640157c6:	cmp    DWORD PTR [ebp-0x1c],edi
640157c9:	jne    0x64015813
640157cb:	cmp    esi,edi
640157cd:	jne    0x640157d5
640157cf:	xor    esi,esi
640157d1:	inc    esi
640157d2:	mov    DWORD PTR [ebp+0xc],esi
640157d5:	add    esi,0xf
640157d8:	and    esi,0xfffffff0
640157db:	mov    DWORD PTR [ebp+0xc],esi
640157de:	push   esi
640157df:	push   edi
640157e0:	push   DWORD PTR ds:0x64053ed4
640157e6:	call   DWORD PTR ds:0x6402c194
640157ec:	mov    DWORD PTR [ebp-0x1c],eax
640157ef:	cmp    eax,edi
640157f1:	je     0x64015813
640157f3:	mov    eax,DWORD PTR [ebx-0x4]
640157f6:	dec    eax
640157f7:	cmp    eax,esi
640157f9:	jb     0x640157fd
640157fb:	mov    eax,esi
640157fd:	push   eax
640157fe:	push   ebx
640157ff:	push   DWORD PTR [ebp-0x1c]
64015802:	call   0x640151f0
64015807:	push   ebx
64015808:	push   DWORD PTR [ebp-0x20]
6401580b:	call   0x6401b53e
64015810:	add    esp,0x14
64015813:	mov    DWORD PTR [ebp-0x4],0xfffffffe
6401581a:	call   0x6401584d
6401581f:	cmp    DWORD PTR [ebp-0x20],0x0
64015823:	jne    0x64015856
64015825:	test   esi,esi
64015827:	jne    0x6401582a
64015829:	inc    esi
6401582a:	add    esi,0xf
6401582d:	and    esi,0xfffffff0
64015830:	mov    DWORD PTR [ebp+0xc],esi
64015833:	push   esi
64015834:	push   ebx
64015835:	push   0x0
64015837:	push   DWORD PTR ds:0x64053ed4
6401583d:	call   DWORD PTR ds:0x6402c19c
64015843:	mov    edi,eax
64015845:	jmp    0x64015859
64015847:	mov    esi,DWORD PTR [ebp+0xc]
6401584a:	mov    ebx,DWORD PTR [ebp+0x8]
6401584d:	push   0x4
6401584f:	call   0x6401b3c2
64015854:	pop    ecx
64015855:	ret    
64015856:	mov    edi,DWORD PTR [ebp-0x1c]
64015859:	test   edi,edi
6401585b:	jne    0x64015920
64015861:	cmp    DWORD PTR ds:0x6405438c,edi
64015867:	je     0x64015895
64015869:	push   esi
6401586a:	call   0x64016a8f
6401586f:	pop    ecx
64015870:	test   eax,eax
64015872:	jne    0x6401574a
64015878:	call   0x640166d3
6401587d:	cmp    DWORD PTR [ebp-0x20],edi
64015880:	jne    0x640158ee
64015882:	mov    esi,eax
64015884:	call   DWORD PTR ds:0x6402c06c
6401588a:	push   eax
6401588b:	call   0x64016698
64015890:	pop    ecx
64015891:	mov    DWORD PTR [esi],eax
64015893:	jmp    0x640158f4
64015895:	test   edi,edi
64015897:	jne    0x64015920
6401589d:	call   0x640166d3
640158a2:	cmp    DWORD PTR [ebp-0x20],edi
640158a5:	je     0x6401590f
640158a7:	mov    DWORD PTR [eax],0xc
640158ad:	jmp    0x64015920
640158af:	test   esi,esi
640158b1:	jne    0x640158b4
640158b3:	inc    esi
640158b4:	push   esi
640158b5:	push   ebx
640158b6:	push   0x0
640158b8:	push   DWORD PTR ds:0x64053ed4
640158be:	call   DWORD PTR ds:0x6402c19c
640158c4:	mov    edi,eax
640158c6:	test   edi,edi
640158c8:	jne    0x64015920
640158ca:	cmp    DWORD PTR ds:0x6405438c,eax
640158d0:	je     0x64015906
640158d2:	push   esi
640158d3:	call   0x64016a8f
640158d8:	pop    ecx
640158d9:	test   eax,eax
640158db:	je     0x640158fc
640158dd:	cmp    esi,0xffffffe0
640158e0:	jbe    0x640158af
640158e2:	push   esi
640158e3:	call   0x64016a8f
640158e8:	pop    ecx
640158e9:	call   0x640166d3
640158ee:	mov    DWORD PTR [eax],0xc
640158f4:	xor    eax,eax
640158f6:	call   0x64016519
640158fb:	ret    
640158fc:	call   0x640166d3
64015901:	jmp    0x64015882
64015906:	test   edi,edi
64015908:	jne    0x64015920
6401590a:	call   0x640166d3
6401590f:	mov    esi,eax
64015911:	call   DWORD PTR ds:0x6402c06c
64015917:	push   eax
64015918:	call   0x64016698
6401591d:	mov    DWORD PTR [esi],eax
6401591f:	pop    ecx
64015920:	mov    eax,edi
64015922:	jmp    0x640158f6
64015924:	int3   
64015925:	int3   
64015926:	int3   
64015927:	int3   
64015928:	int3   
64015929:	int3   
6401592a:	int3   
6401592b:	int3   
6401592c:	int3   
6401592d:	int3   
6401592e:	int3   
6401592f:	int3   
64015930:	sub    esp,0x14
64015933:	push   ebx
64015934:	mov    ebx,DWORD PTR [esp+0x20]
64015938:	push   ebp
64015939:	push   esi
6401593a:	mov    esi,DWORD PTR [ebx+0x8]
6401593d:	xor    esi,DWORD PTR ds:0x640521ac
64015943:	push   edi
64015944:	mov    eax,DWORD PTR [esi]
64015946:	cmp    eax,0xfffffffe
64015949:	mov    BYTE PTR [esp+0x13],0x0
6401594e:	mov    DWORD PTR [esp+0x18],0x1
64015956:	lea    edi,[ebx+0x10]
64015959:	je     0x64015968
6401595b:	mov    ecx,DWORD PTR [esi+0x4]
6401595e:	add    ecx,edi
64015960:	xor    ecx,DWORD PTR [eax+edi*1]
64015963:	call   0x64013d18
64015968:	mov    ecx,DWORD PTR [esi+0xc]
6401596b:	mov    eax,DWORD PTR [esi+0x8]
6401596e:	add    ecx,edi
64015970:	xor    ecx,DWORD PTR [eax+edi*1]
64015973:	call   0x64013d18
64015978:	mov    eax,DWORD PTR [esp+0x28]
6401597c:	test   BYTE PTR [eax+0x4],0x66
64015980:	jne    0x64015aa5
64015986:	mov    ebp,DWORD PTR [ebx+0xc]
64015989:	cmp    ebp,0xfffffffe
6401598c:	mov    ecx,DWORD PTR [esp+0x30]
64015990:	lea    edx,[esp+0x1c]
64015994:	mov    DWORD PTR [esp+0x1c],eax
64015998:	mov    DWORD PTR [esp+0x20],ecx
6401599c:	mov    DWORD PTR [ebx-0x4],edx
6401599f:	je     0x640159ff
640159a1:	lea    eax,[ebp+ebp*2+0x0]
640159a5:	mov    ecx,DWORD PTR [esi+eax*4+0x14]
640159a9:	test   ecx,ecx
640159ab:	lea    ebx,[esi+eax*4+0x10]
640159af:	mov    eax,DWORD PTR [ebx]
640159b1:	mov    DWORD PTR [esp+0x14],eax
640159b5:	je     0x640159cd
640159b7:	mov    edx,edi
640159b9:	call   0x64019d9a
640159be:	test   eax,eax
640159c0:	mov    BYTE PTR [esp+0x13],0x1
640159c5:	jl     0x64015a0b
640159c7:	jg     0x64015a15
640159c9:	mov    eax,DWORD PTR [esp+0x14]
640159cd:	cmp    eax,0xfffffffe
640159d0:	mov    ebp,eax
640159d2:	jne    0x640159a1
640159d4:	cmp    BYTE PTR [esp+0x13],0x0
640159d9:	je     0x640159ff
640159db:	mov    eax,DWORD PTR [esi]
640159dd:	cmp    eax,0xfffffffe
640159e0:	je     0x640159ef
640159e2:	mov    ecx,DWORD PTR [esi+0x4]
640159e5:	add    ecx,edi
640159e7:	xor    ecx,DWORD PTR [eax+edi*1]
640159ea:	call   0x64013d18
640159ef:	mov    ecx,DWORD PTR [esi+0xc]
640159f2:	mov    eax,DWORD PTR [esi+0x8]
640159f5:	add    ecx,edi
640159f7:	xor    ecx,DWORD PTR [eax+edi*1]
640159fa:	call   0x64013d18
640159ff:	mov    eax,DWORD PTR [esp+0x18]
64015a03:	pop    edi
64015a04:	pop    esi
64015a05:	pop    ebp
64015a06:	pop    ebx
64015a07:	add    esp,0x14
64015a0a:	ret    
64015a0b:	mov    DWORD PTR [esp+0x18],0x0
64015a13:	jmp    0x640159db
64015a15:	mov    ecx,DWORD PTR [esp+0x28]
64015a19:	cmp    DWORD PTR [ecx],0xe06d7363
64015a1f:	jne    0x64015a4b
64015a21:	cmp    DWORD PTR ds:0x640408e0,0x0
64015a28:	je     0x64015a4b
64015a2a:	push   0x640408e0
64015a2f:	call   0x6401dc80
64015a34:	add    esp,0x4
64015a37:	test   eax,eax
64015a39:	je     0x64015a4b
64015a3b:	mov    edx,DWORD PTR [esp+0x28]
64015a3f:	push   0x1
64015a41:	push   edx
64015a42:	call   DWORD PTR ds:0x640408e0
64015a48:	add    esp,0x8
64015a4b:	mov    ecx,DWORD PTR [esp+0x2c]
64015a4f:	call   0x64019dca
64015a54:	mov    eax,DWORD PTR [esp+0x2c]
64015a58:	cmp    DWORD PTR [eax+0xc],ebp
64015a5b:	je     0x64015a70
64015a5d:	push   0x640521ac
64015a62:	push   edi
64015a63:	mov    edx,ebp
64015a65:	mov    ecx,eax
64015a67:	call   0x64019de4
64015a6c:	mov    eax,DWORD PTR [esp+0x2c]
64015a70:	mov    ecx,DWORD PTR [esp+0x14]
64015a74:	mov    DWORD PTR [eax+0xc],ecx
64015a77:	mov    eax,DWORD PTR [esi]
64015a79:	cmp    eax,0xfffffffe
64015a7c:	je     0x64015a8b
64015a7e:	mov    ecx,DWORD PTR [esi+0x4]
64015a81:	add    ecx,edi
64015a83:	xor    ecx,DWORD PTR [eax+edi*1]
64015a86:	call   0x64013d18
64015a8b:	mov    ecx,DWORD PTR [esi+0xc]
64015a8e:	mov    edx,DWORD PTR [esi+0x8]
64015a91:	add    ecx,edi
64015a93:	xor    ecx,DWORD PTR [edx+edi*1]
64015a96:	call   0x64013d18
64015a9b:	mov    ecx,DWORD PTR [ebx+0x8]
64015a9e:	mov    edx,edi
64015aa0:	jmp    0x64019db1
64015aa5:	cmp    DWORD PTR [ebx+0xc],0xfffffffe
64015aa9:	je     0x640159ff
64015aaf:	push   0x640521ac
64015ab4:	push   edi
64015ab5:	mov    ecx,ebx
64015ab7:	mov    edx,0xfffffffe
64015abc:	call   0x64019de4
64015ac1:	jmp    0x640159db
64015ac6:	int3   
64015ac7:	int3   
64015ac8:	int3   
64015ac9:	int3   
64015aca:	int3   
64015acb:	int3   
64015acc:	int3   
64015acd:	int3   
64015ace:	int3   
64015acf:	int3   
64015ad0:	mov    eax,DWORD PTR [esp+0x8]
64015ad4:	mov    ecx,DWORD PTR [esp+0x10]
64015ad8:	or     ecx,eax
64015ada:	mov    ecx,DWORD PTR [esp+0xc]
64015ade:	jne    0x64015ae9
64015ae0:	mov    eax,DWORD PTR [esp+0x4]
64015ae4:	mul    ecx
64015ae6:	ret    0x10
64015ae9:	push   ebx
64015aea:	mul    ecx
64015aec:	mov    ebx,eax
64015aee:	mov    eax,DWORD PTR [esp+0x8]
64015af2:	mul    DWORD PTR [esp+0x14]
64015af6:	add    ebx,eax
64015af8:	mov    eax,DWORD PTR [esp+0x8]
64015afc:	mul    ecx
64015afe:	add    edx,ebx
64015b00:	pop    ebx
64015b01:	ret    0x10
64015b04:	int3   
64015b05:	int3   
64015b06:	int3   
64015b07:	int3   
64015b08:	int3   
64015b09:	int3   
64015b0a:	int3   
64015b0b:	int3   
64015b0c:	int3   
64015b0d:	int3   
64015b0e:	int3   
64015b0f:	int3   
64015b10:	mov    ecx,DWORD PTR [esp+0x4]
64015b14:	test   ecx,0x3
64015b1a:	je     0x64015b40
64015b1c:	mov    al,BYTE PTR [ecx]
64015b1e:	add    ecx,0x1
64015b21:	test   al,al
64015b23:	je     0x64015b73
64015b25:	test   ecx,0x3
64015b2b:	jne    0x64015b1c
64015b2d:	add    eax,0x0
64015b32:	lea    esp,[esp+0x0]
64015b39:	lea    esp,[esp+0x0]
64015b40:	mov    eax,DWORD PTR [ecx]
64015b42:	mov    edx,0x7efefeff
64015b47:	add    edx,eax
64015b49:	xor    eax,0xffffffff
64015b4c:	xor    eax,edx
64015b4e:	add    ecx,0x4
64015b51:	test   eax,0x81010100
64015b56:	je     0x64015b40
64015b58:	mov    eax,DWORD PTR [ecx-0x4]
64015b5b:	test   al,al
64015b5d:	je     0x64015b91
64015b5f:	test   ah,ah
64015b61:	je     0x64015b87
64015b63:	test   eax,0xff0000
64015b68:	je     0x64015b7d
64015b6a:	test   eax,0xff000000
64015b6f:	je     0x64015b73
64015b71:	jmp    0x64015b40
64015b73:	lea    eax,[ecx-0x1]
64015b76:	mov    ecx,DWORD PTR [esp+0x4]
64015b7a:	sub    eax,ecx
64015b7c:	ret    
64015b7d:	lea    eax,[ecx-0x2]
64015b80:	mov    ecx,DWORD PTR [esp+0x4]
64015b84:	sub    eax,ecx
64015b86:	ret    
64015b87:	lea    eax,[ecx-0x3]
64015b8a:	mov    ecx,DWORD PTR [esp+0x4]
64015b8e:	sub    eax,ecx
64015b90:	ret    
64015b91:	lea    eax,[ecx-0x4]
64015b94:	mov    ecx,DWORD PTR [esp+0x4]
64015b98:	sub    eax,ecx
64015b9a:	ret    
64015b9b:	push   eax
64015b9c:	push   DWORD PTR fs:0x0
64015ba3:	lea    eax,[esp+0xc]
64015ba7:	sub    esp,DWORD PTR [esp+0xc]
64015bab:	push   ebx
64015bac:	push   esi
64015bad:	push   edi
64015bae:	mov    DWORD PTR [eax],ebp
64015bb0:	mov    ebp,eax
64015bb2:	mov    eax,ds:0x640521ac
64015bb7:	xor    eax,ebp
64015bb9:	push   eax
64015bba:	push   DWORD PTR [ebp-0x4]
64015bbd:	mov    DWORD PTR [ebp-0x4],0xffffffff
64015bc4:	lea    eax,[ebp-0xc]
64015bc7:	mov    fs:0x0,eax
64015bcd:	ret    
64015bce:	push   eax
64015bcf:	push   DWORD PTR fs:0x0
64015bd6:	lea    eax,[esp+0xc]
64015bda:	sub    esp,DWORD PTR [esp+0xc]
64015bde:	push   ebx
64015bdf:	push   esi
64015be0:	push   edi
64015be1:	mov    DWORD PTR [eax],ebp
64015be3:	mov    ebp,eax
64015be5:	mov    eax,ds:0x640521ac
64015bea:	xor    eax,ebp
64015bec:	push   eax
64015bed:	mov    DWORD PTR [ebp-0x10],esp
64015bf0:	push   DWORD PTR [ebp-0x4]
64015bf3:	mov    DWORD PTR [ebp-0x4],0xffffffff
64015bfa:	lea    eax,[ebp-0xc]
64015bfd:	mov    fs:0x0,eax
64015c03:	ret    
64015c04:	push   ebx
64015c05:	push   ebp
64015c06:	push   esi
64015c07:	mov    esi,DWORD PTR [esp+0x10]
64015c0b:	mov    eax,DWORD PTR [esi+0xbc]
64015c11:	xor    ebp,ebp
64015c13:	cmp    eax,ebp
64015c15:	push   edi
64015c16:	je     0x64015c87
64015c18:	cmp    eax,0x640530a0
64015c1d:	je     0x64015c87
64015c1f:	mov    eax,DWORD PTR [esi+0xb0]
64015c25:	cmp    eax,ebp
64015c27:	je     0x64015c87
64015c29:	cmp    DWORD PTR [eax],ebp
64015c2b:	jne    0x64015c87
64015c2d:	mov    eax,DWORD PTR [esi+0xb8]
64015c33:	cmp    eax,ebp
64015c35:	je     0x64015c4e
64015c37:	cmp    DWORD PTR [eax],ebp
64015c39:	jne    0x64015c4e
64015c3b:	push   eax
64015c3c:	call   0x640147cf
64015c41:	push   DWORD PTR [esi+0xbc]
64015c47:	call   0x6401df0b
64015c4c:	pop    ecx
64015c4d:	pop    ecx
64015c4e:	mov    eax,DWORD PTR [esi+0xb4]
64015c54:	cmp    eax,ebp
64015c56:	je     0x64015c6f
64015c58:	cmp    DWORD PTR [eax],ebp
64015c5a:	jne    0x64015c6f
64015c5c:	push   eax
64015c5d:	call   0x640147cf
64015c62:	push   DWORD PTR [esi+0xbc]
64015c68:	call   0x6401decb
64015c6d:	pop    ecx
64015c6e:	pop    ecx
64015c6f:	push   DWORD PTR [esi+0xb0]
64015c75:	call   0x640147cf
64015c7a:	push   DWORD PTR [esi+0xbc]
64015c80:	call   0x640147cf
64015c85:	pop    ecx
64015c86:	pop    ecx
64015c87:	mov    eax,DWORD PTR [esi+0xc0]
64015c8d:	cmp    eax,ebp
64015c8f:	je     0x64015cd5
64015c91:	cmp    DWORD PTR [eax],ebp
64015c93:	jne    0x64015cd5
64015c95:	mov    eax,DWORD PTR [esi+0xc4]
64015c9b:	sub    eax,0xfe
64015ca0:	push   eax
64015ca1:	call   0x640147cf
64015ca6:	mov    eax,DWORD PTR [esi+0xcc]
64015cac:	mov    edi,0x80
64015cb1:	sub    eax,edi
64015cb3:	push   eax
64015cb4:	call   0x640147cf
64015cb9:	mov    eax,DWORD PTR [esi+0xd0]
64015cbf:	sub    eax,edi
64015cc1:	push   eax
64015cc2:	call   0x640147cf
64015cc7:	push   DWORD PTR [esi+0xc0]
64015ccd:	call   0x640147cf
64015cd2:	add    esp,0x10
64015cd5:	lea    edi,[esi+0xd4]
64015cdb:	mov    eax,DWORD PTR [edi]
64015cdd:	cmp    eax,0x64052fe0
64015ce2:	je     0x64015cfb
64015ce4:	cmp    DWORD PTR [eax+0xb4],ebp
64015cea:	jne    0x64015cfb
64015cec:	push   eax
64015ced:	call   0x6401dd3b
64015cf2:	push   DWORD PTR [edi]
64015cf4:	call   0x640147cf
64015cf9:	pop    ecx
64015cfa:	pop    ecx
64015cfb:	push   0x6
64015cfd:	lea    edi,[esi+0x50]
64015d00:	pop    ebx
64015d01:	cmp    DWORD PTR [edi-0x8],0x64052a80
64015d08:	je     0x64015d1b
64015d0a:	mov    eax,DWORD PTR [edi]
64015d0c:	cmp    eax,ebp
64015d0e:	je     0x64015d1b
64015d10:	cmp    DWORD PTR [eax],ebp
64015d12:	jne    0x64015d1b
64015d14:	push   eax
64015d15:	call   0x640147cf
64015d1a:	pop    ecx
64015d1b:	cmp    DWORD PTR [edi-0x4],ebp
64015d1e:	je     0x64015d32
64015d20:	mov    eax,DWORD PTR [edi+0x4]
64015d23:	cmp    eax,ebp
64015d25:	je     0x64015d32
64015d27:	cmp    DWORD PTR [eax],ebp
64015d29:	jne    0x64015d32
64015d2b:	push   eax
64015d2c:	call   0x640147cf
64015d31:	pop    ecx
64015d32:	add    edi,0x10
64015d35:	dec    ebx
64015d36:	jne    0x64015d01
64015d38:	push   esi
64015d39:	call   0x640147cf
64015d3e:	pop    ecx
64015d3f:	pop    edi
64015d40:	pop    esi
64015d41:	pop    ebp
64015d42:	pop    ebx
64015d43:	ret    
64015d44:	push   ebx
64015d45:	push   ebp
64015d46:	push   esi
64015d47:	mov    esi,DWORD PTR [esp+0x10]
64015d4b:	push   edi
64015d4c:	mov    edi,DWORD PTR ds:0x6402c030
64015d52:	push   esi
64015d53:	call   edi
64015d55:	mov    eax,DWORD PTR [esi+0xb0]
64015d5b:	test   eax,eax
64015d5d:	je     0x64015d62
64015d5f:	push   eax
64015d60:	call   edi
64015d62:	mov    eax,DWORD PTR [esi+0xb8]
64015d68:	test   eax,eax
64015d6a:	je     0x64015d6f
64015d6c:	push   eax
64015d6d:	call   edi
64015d6f:	mov    eax,DWORD PTR [esi+0xb4]
64015d75:	test   eax,eax
64015d77:	je     0x64015d7c
64015d79:	push   eax
64015d7a:	call   edi
64015d7c:	mov    eax,DWORD PTR [esi+0xc0]
64015d82:	test   eax,eax
64015d84:	je     0x64015d89
64015d86:	push   eax
64015d87:	call   edi
64015d89:	push   0x6
64015d8b:	lea    ebx,[esi+0x50]
64015d8e:	pop    ebp
64015d8f:	cmp    DWORD PTR [ebx-0x8],0x64052a80
64015d96:	je     0x64015da1
64015d98:	mov    eax,DWORD PTR [ebx]
64015d9a:	test   eax,eax
64015d9c:	je     0x64015da1
64015d9e:	push   eax
64015d9f:	call   edi
64015da1:	cmp    DWORD PTR [ebx-0x4],0x0
64015da5:	je     0x64015db1
64015da7:	mov    eax,DWORD PTR [ebx+0x4]
64015daa:	test   eax,eax
64015dac:	je     0x64015db1
64015dae:	push   eax
64015daf:	call   edi
64015db1:	add    ebx,0x10
64015db4:	dec    ebp
64015db5:	jne    0x64015d8f
64015db7:	mov    eax,DWORD PTR [esi+0xd4]
64015dbd:	add    eax,0xb4
64015dc2:	push   eax
64015dc3:	call   edi
64015dc5:	pop    edi
64015dc6:	pop    esi
64015dc7:	pop    ebp
64015dc8:	pop    ebx
64015dc9:	ret    
64015dca:	push   esi
64015dcb:	mov    esi,DWORD PTR [esp+0x8]
64015dcf:	test   esi,esi
64015dd1:	je     0x64015e52
64015dd3:	push   ebx
64015dd4:	push   ebp
64015dd5:	push   edi
64015dd6:	mov    edi,DWORD PTR ds:0x6402c07c
64015ddc:	push   esi
64015ddd:	call   edi
64015ddf:	mov    eax,DWORD PTR [esi+0xb0]
64015de5:	test   eax,eax
64015de7:	je     0x64015dec
64015de9:	push   eax
64015dea:	call   edi
64015dec:	mov    eax,DWORD PTR [esi+0xb8]
64015df2:	test   eax,eax
64015df4:	je     0x64015df9
64015df6:	push   eax
64015df7:	call   edi
64015df9:	mov    eax,DWORD PTR [esi+0xb4]
64015dff:	test   eax,eax
64015e01:	je     0x64015e06
64015e03:	push   eax
64015e04:	call   edi
64015e06:	mov    eax,DWORD PTR [esi+0xc0]
64015e0c:	test   eax,eax
64015e0e:	je     0x64015e13
64015e10:	push   eax
64015e11:	call   edi
64015e13:	push   0x6
64015e15:	lea    ebx,[esi+0x50]
64015e18:	pop    ebp
64015e19:	cmp    DWORD PTR [ebx-0x8],0x64052a80
64015e20:	je     0x64015e2b
64015e22:	mov    eax,DWORD PTR [ebx]
64015e24:	test   eax,eax
64015e26:	je     0x64015e2b
64015e28:	push   eax
64015e29:	call   edi
64015e2b:	cmp    DWORD PTR [ebx-0x4],0x0
64015e2f:	je     0x64015e3b
64015e31:	mov    eax,DWORD PTR [ebx+0x4]
64015e34:	test   eax,eax
64015e36:	je     0x64015e3b
64015e38:	push   eax
64015e39:	call   edi
64015e3b:	add    ebx,0x10
64015e3e:	dec    ebp
64015e3f:	jne    0x64015e19
64015e41:	mov    eax,DWORD PTR [esi+0xd4]
64015e47:	add    eax,0xb4
64015e4c:	push   eax
64015e4d:	call   edi
64015e4f:	pop    edi
64015e50:	pop    ebp
64015e51:	pop    ebx
64015e52:	mov    eax,esi
64015e54:	pop    esi
64015e55:	ret    
64015e56:	test   edi,edi
64015e58:	je     0x64015e91
64015e5a:	test   eax,eax
64015e5c:	je     0x64015e91
64015e5e:	push   esi
64015e5f:	mov    esi,DWORD PTR [eax]
64015e61:	cmp    esi,edi
64015e63:	je     0x64015e8d
64015e65:	push   edi
64015e66:	mov    DWORD PTR [eax],edi
64015e68:	call   0x64015d44
64015e6d:	test   esi,esi
64015e6f:	pop    ecx
64015e70:	je     0x64015e8d
64015e72:	push   esi
64015e73:	call   0x64015dca
64015e78:	cmp    DWORD PTR [esi],0x0
64015e7b:	pop    ecx
64015e7c:	jne    0x64015e8d
64015e7e:	cmp    esi,0x64052a88
64015e84:	je     0x64015e8d
64015e86:	push   esi
64015e87:	call   0x64015c04
64015e8c:	pop    ecx
64015e8d:	mov    eax,edi
64015e8f:	pop    esi
64015e90:	ret    
64015e91:	xor    eax,eax
64015e93:	ret    
64015e94:	push   0xc
64015e96:	push   0x64043c28
64015e9b:	call   0x640164d4
64015ea0:	call   0x64017a3a
64015ea5:	mov    esi,eax
64015ea7:	mov    eax,ds:0x64052a78
64015eac:	test   DWORD PTR [esi+0x70],eax
64015eaf:	je     0x64015ed3
64015eb1:	cmp    DWORD PTR [esi+0x6c],0x0
64015eb5:	je     0x64015ed3
64015eb7:	call   0x64017a3a
64015ebc:	mov    esi,DWORD PTR [eax+0x6c]
64015ebf:	test   esi,esi
64015ec1:	jne    0x64015ecb
64015ec3:	push   0x20
64015ec5:	call   0x64018026
64015eca:	pop    ecx
64015ecb:	mov    eax,esi
64015ecd:	call   0x64016519
64015ed2:	ret    
64015ed3:	push   0xc
64015ed5:	call   0x6401b49a
64015eda:	pop    ecx
64015edb:	and    DWORD PTR [ebp-0x4],0x0
64015edf:	lea    eax,[esi+0x6c]
64015ee2:	mov    edi,DWORD PTR ds:0x64052b60
64015ee8:	call   0x64015e56
64015eed:	mov    DWORD PTR [ebp-0x1c],eax
64015ef0:	mov    DWORD PTR [ebp-0x4],0xfffffffe
64015ef7:	call   0x64015efe
64015efc:	jmp    0x64015ebf
64015efe:	push   0xc
64015f00:	call   0x6401b3c2
64015f05:	pop    ecx
64015f06:	mov    esi,DWORD PTR [ebp-0x1c]
64015f09:	ret    
64015f0a:	push   ebp
64015f0b:	mov    ebp,esp
64015f0d:	sub    esp,0x14
64015f10:	mov    eax,ds:0x640521ac
64015f15:	xor    eax,ebp
64015f17:	mov    DWORD PTR [ebp-0x4],eax
64015f1a:	push   ebx
64015f1b:	push   esi
64015f1c:	xor    ebx,ebx
64015f1e:	cmp    DWORD PTR ds:0x64053a2c,ebx
64015f24:	push   edi
64015f25:	mov    esi,ecx
64015f27:	jne    0x64015f61
64015f29:	push   ebx
64015f2a:	push   ebx
64015f2b:	xor    edi,edi
64015f2d:	inc    edi
64015f2e:	push   edi
64015f2f:	push   0x64041de4
64015f34:	push   0x100
64015f39:	push   ebx
64015f3a:	call   DWORD PTR ds:0x6402c1c8
64015f40:	test   eax,eax
64015f42:	je     0x64015f4c
64015f44:	mov    DWORD PTR ds:0x64053a2c,edi
64015f4a:	jmp    0x64015f61
64015f4c:	call   DWORD PTR ds:0x6402c06c
64015f52:	cmp    eax,0x78
64015f55:	jne    0x64015f61
64015f57:	mov    DWORD PTR ds:0x64053a2c,0x2
64015f61:	cmp    DWORD PTR [ebp+0x14],ebx
64015f64:	jle    0x64015f88
64015f66:	mov    ecx,DWORD PTR [ebp+0x14]
64015f69:	mov    eax,DWORD PTR [ebp+0x10]
64015f6c:	dec    ecx
64015f6d:	cmp    BYTE PTR [eax],bl
64015f6f:	je     0x64015f79
64015f71:	inc    eax
64015f72:	cmp    ecx,ebx
64015f74:	jne    0x64015f6c
64015f76:	or     ecx,0xffffffff
64015f79:	mov    eax,DWORD PTR [ebp+0x14]
64015f7c:	sub    eax,ecx
64015f7e:	dec    eax
64015f7f:	cmp    eax,DWORD PTR [ebp+0x14]
64015f82:	jge    0x64015f85
64015f84:	inc    eax
64015f85:	mov    DWORD PTR [ebp+0x14],eax
64015f88:	mov    eax,ds:0x64053a2c
64015f8d:	cmp    eax,0x2
64015f90:	je     0x64016141
64015f96:	cmp    eax,ebx
64015f98:	je     0x64016141
64015f9e:	cmp    eax,0x1
64015fa1:	jne    0x64016172
64015fa7:	cmp    DWORD PTR [ebp+0x20],ebx
64015faa:	mov    DWORD PTR [ebp-0x8],ebx
64015fad:	jne    0x64015fb7
64015faf:	mov    eax,DWORD PTR [esi]
64015fb1:	mov    eax,DWORD PTR [eax+0x4]
64015fb4:	mov    DWORD PTR [ebp+0x20],eax
64015fb7:	mov    esi,DWORD PTR ds:0x6402c02c
64015fbd:	xor    eax,eax
64015fbf:	cmp    DWORD PTR [ebp+0x24],ebx
64015fc2:	push   ebx
64015fc3:	push   ebx
64015fc4:	push   DWORD PTR [ebp+0x14]
64015fc7:	setne  al
64015fca:	push   DWORD PTR [ebp+0x10]
64015fcd:	lea    eax,[eax*8+0x1]
64015fd4:	push   eax
64015fd5:	push   DWORD PTR [ebp+0x20]
64015fd8:	call   esi
64015fda:	mov    edi,eax
64015fdc:	cmp    edi,ebx
64015fde:	je     0x64016172
64015fe4:	jle    0x64016029
64015fe6:	push   0xffffffe0
64015fe8:	xor    edx,edx
64015fea:	pop    eax
64015feb:	div    edi
64015fed:	cmp    eax,0x2
64015ff0:	jb     0x64016029
64015ff2:	lea    eax,[edi+edi*1+0x8]
64015ff6:	cmp    eax,0x400
64015ffb:	ja     0x64016010
64015ffd:	call   0x64013d30
64016002:	mov    eax,esp
64016004:	cmp    eax,ebx
64016006:	je     0x64016024
64016008:	mov    DWORD PTR [eax],0xcccc
6401600e:	jmp    0x64016021
64016010:	push   eax
64016011:	call   0x640148ce
64016016:	cmp    eax,ebx
64016018:	pop    ecx
64016019:	je     0x64016024
6401601b:	mov    DWORD PTR [eax],0xdddd
64016021:	add    eax,0x8
64016024:	mov    DWORD PTR [ebp-0xc],eax
64016027:	jmp    0x6401602c
64016029:	mov    DWORD PTR [ebp-0xc],ebx
6401602c:	cmp    DWORD PTR [ebp-0xc],ebx
6401602f:	je     0x64016172
64016035:	push   edi
64016036:	push   DWORD PTR [ebp-0xc]
64016039:	push   DWORD PTR [ebp+0x14]
6401603c:	push   DWORD PTR [ebp+0x10]
6401603f:	push   0x1
64016041:	push   DWORD PTR [ebp+0x20]
64016044:	call   esi
64016046:	test   eax,eax
64016048:	je     0x64016130
6401604e:	mov    esi,DWORD PTR ds:0x6402c1c8
64016054:	push   ebx
64016055:	push   ebx
64016056:	push   edi
64016057:	push   DWORD PTR [ebp-0xc]
6401605a:	push   DWORD PTR [ebp+0xc]
6401605d:	push   DWORD PTR [ebp+0x8]
64016060:	call   esi
64016062:	mov    ecx,eax
64016064:	cmp    ecx,ebx
64016066:	mov    DWORD PTR [ebp-0x8],ecx
64016069:	je     0x64016130
6401606f:	test   WORD PTR [ebp+0xc],0x400
64016075:	je     0x640160a0
64016077:	cmp    DWORD PTR [ebp+0x1c],ebx
6401607a:	je     0x64016130
64016080:	cmp    ecx,DWORD PTR [ebp+0x1c]
64016083:	jg     0x64016130
64016089:	push   DWORD PTR [ebp+0x1c]
6401608c:	push   DWORD PTR [ebp+0x18]
6401608f:	push   edi
64016090:	push   DWORD PTR [ebp-0xc]
64016093:	push   DWORD PTR [ebp+0xc]
64016096:	push   DWORD PTR [ebp+0x8]
64016099:	call   esi
6401609b:	jmp    0x64016130
640160a0:	cmp    ecx,ebx
640160a2:	jle    0x640160e9
640160a4:	push   0xffffffe0
640160a6:	xor    edx,edx
640160a8:	pop    eax
640160a9:	div    ecx
640160ab:	cmp    eax,0x2
640160ae:	jb     0x640160e9
640160b0:	lea    eax,[ecx+ecx*1+0x8]
640160b4:	cmp    eax,0x400
640160b9:	ja     0x640160d1
640160bb:	call   0x64013d30
640160c0:	mov    esi,esp
640160c2:	cmp    esi,ebx
640160c4:	je     0x64016130
640160c6:	mov    DWORD PTR [esi],0xcccc
640160cc:	add    esi,0x8
640160cf:	jmp    0x640160eb
640160d1:	push   eax
640160d2:	call   0x640148ce
640160d7:	cmp    eax,ebx
640160d9:	pop    ecx
640160da:	je     0x640160e5
640160dc:	mov    DWORD PTR [eax],0xdddd
640160e2:	add    eax,0x8
640160e5:	mov    esi,eax
640160e7:	jmp    0x640160eb
640160e9:	xor    esi,esi
640160eb:	cmp    esi,ebx
640160ed:	je     0x64016130
640160ef:	push   DWORD PTR [ebp-0x8]
640160f2:	push   esi
640160f3:	push   edi
640160f4:	push   DWORD PTR [ebp-0xc]
640160f7:	push   DWORD PTR [ebp+0xc]
640160fa:	push   DWORD PTR [ebp+0x8]
640160fd:	call   DWORD PTR ds:0x6402c1c8
64016103:	test   eax,eax
64016105:	je     0x64016129
64016107:	cmp    DWORD PTR [ebp+0x1c],ebx
6401610a:	push   ebx
6401610b:	push   ebx
6401610c:	jne    0x64016112
6401610e:	push   ebx
6401610f:	push   ebx
64016110:	jmp    0x64016118
64016112:	push   DWORD PTR [ebp+0x1c]
64016115:	push   DWORD PTR [ebp+0x18]
64016118:	push   DWORD PTR [ebp-0x8]
6401611b:	push   esi
6401611c:	push   ebx
6401611d:	push   DWORD PTR [ebp+0x20]
64016120:	call   DWORD PTR ds:0x6402c014
64016126:	mov    DWORD PTR [ebp-0x8],eax
64016129:	push   esi
6401612a:	call   0x6401431a
6401612f:	pop    ecx
64016130:	push   DWORD PTR [ebp-0xc]
64016133:	call   0x6401431a
64016138:	mov    eax,DWORD PTR [ebp-0x8]
6401613b:	pop    ecx
6401613c:	jmp    0x6401629a
64016141:	cmp    DWORD PTR [ebp+0x8],ebx
64016144:	mov    DWORD PTR [ebp-0xc],ebx
64016147:	mov    DWORD PTR [ebp-0x10],ebx
6401614a:	jne    0x64016154
6401614c:	mov    eax,DWORD PTR [esi]
6401614e:	mov    eax,DWORD PTR [eax+0x14]
64016151:	mov    DWORD PTR [ebp+0x8],eax
64016154:	cmp    DWORD PTR [ebp+0x20],ebx
64016157:	jne    0x64016161
64016159:	mov    eax,DWORD PTR [esi]
6401615b:	mov    eax,DWORD PTR [eax+0x4]
6401615e:	mov    DWORD PTR [ebp+0x20],eax
64016161:	push   DWORD PTR [ebp+0x8]
64016164:	call   0x6401e350
64016169:	cmp    eax,0xffffffff
6401616c:	pop    ecx
6401616d:	mov    DWORD PTR [ebp-0x14],eax
64016170:	jne    0x64016179
64016172:	xor    eax,eax
64016174:	jmp    0x6401629a
64016179:	cmp    eax,DWORD PTR [ebp+0x20]
6401617c:	je     0x6401625d
64016182:	push   ebx
64016183:	push   ebx
64016184:	lea    ecx,[ebp+0x14]
64016187:	push   ecx
64016188:	push   DWORD PTR [ebp+0x10]
6401618b:	push   eax
6401618c:	push   DWORD PTR [ebp+0x20]
6401618f:	call   0x6401e397
64016194:	add    esp,0x18
64016197:	cmp    eax,ebx
64016199:	mov    DWORD PTR [ebp-0xc],eax
6401619c:	je     0x64016172
6401619e:	mov    esi,DWORD PTR ds:0x6402c1c4
640161a4:	push   ebx
640161a5:	push   ebx
640161a6:	push   DWORD PTR [ebp+0x14]
640161a9:	push   eax
640161aa:	push   DWORD PTR [ebp+0xc]
640161ad:	push   DWORD PTR [ebp+0x8]
640161b0:	call   esi
640161b2:	cmp    eax,ebx
640161b4:	mov    DWORD PTR [ebp-0x8],eax
640161b7:	jne    0x640161c0
640161b9:	xor    esi,esi
640161bb:	jmp    0x64016277
640161c0:	jle    0x640161ff
640161c2:	cmp    eax,0xffffffe0
640161c5:	ja     0x640161ff
640161c7:	add    eax,0x8
640161ca:	cmp    eax,0x400
640161cf:	ja     0x640161e7
640161d1:	call   0x64013d30
640161d6:	mov    edi,esp
640161d8:	cmp    edi,ebx
640161da:	je     0x640161b9
640161dc:	mov    DWORD PTR [edi],0xcccc
640161e2:	add    edi,0x8
640161e5:	jmp    0x64016201
640161e7:	push   eax
640161e8:	call   0x640148ce
640161ed:	cmp    eax,ebx
640161ef:	pop    ecx
640161f0:	je     0x640161fb
640161f2:	mov    DWORD PTR [eax],0xdddd
640161f8:	add    eax,0x8
640161fb:	mov    edi,eax
640161fd:	jmp    0x64016201
640161ff:	xor    edi,edi
64016201:	cmp    edi,ebx
64016203:	je     0x640161b9
64016205:	push   DWORD PTR [ebp-0x8]
64016208:	push   ebx
64016209:	push   edi
6401620a:	call   0x64015170
6401620f:	add    esp,0xc
64016212:	push   DWORD PTR [ebp-0x8]
64016215:	push   edi
64016216:	push   DWORD PTR [ebp+0x14]
64016219:	push   DWORD PTR [ebp-0xc]
6401621c:	push   DWORD PTR [ebp+0xc]
6401621f:	push   DWORD PTR [ebp+0x8]
64016222:	call   esi
64016224:	cmp    eax,ebx
64016226:	mov    DWORD PTR [ebp-0x8],eax
64016229:	jne    0x6401622f
6401622b:	xor    esi,esi
6401622d:	jmp    0x64016254
6401622f:	push   DWORD PTR [ebp+0x1c]
64016232:	lea    eax,[ebp-0x8]
64016235:	push   DWORD PTR [ebp+0x18]
64016238:	push   eax
64016239:	push   edi
6401623a:	push   DWORD PTR [ebp+0x20]
6401623d:	push   DWORD PTR [ebp-0x14]
64016240:	call   0x6401e397
64016245:	mov    esi,eax
64016247:	mov    DWORD PTR [ebp-0x10],esi
6401624a:	add    esp,0x18
6401624d:	neg    esi
6401624f:	sbb    esi,esi
64016251:	and    esi,DWORD PTR [ebp-0x8]
64016254:	push   edi
64016255:	call   0x6401431a
6401625a:	pop    ecx
6401625b:	jmp    0x64016277
6401625d:	push   DWORD PTR [ebp+0x1c]
64016260:	push   DWORD PTR [ebp+0x18]
64016263:	push   DWORD PTR [ebp+0x14]
64016266:	push   DWORD PTR [ebp+0x10]
64016269:	push   DWORD PTR [ebp+0xc]
6401626c:	push   DWORD PTR [ebp+0x8]
6401626f:	call   DWORD PTR ds:0x6402c1c4
64016275:	mov    esi,eax
64016277:	cmp    DWORD PTR [ebp-0xc],ebx
6401627a:	je     0x64016285
6401627c:	push   DWORD PTR [ebp-0xc]
6401627f:	call   0x640147cf
64016284:	pop    ecx
64016285:	mov    eax,DWORD PTR [ebp-0x10]
64016288:	cmp    eax,ebx
6401628a:	je     0x64016298
6401628c:	cmp    DWORD PTR [ebp+0x18],eax
6401628f:	je     0x64016298
64016291:	push   eax
64016292:	call   0x640147cf
64016297:	pop    ecx
64016298:	mov    eax,esi
6401629a:	lea    esp,[ebp-0x20]
6401629d:	pop    edi
6401629e:	pop    esi
6401629f:	pop    ebx
640162a0:	mov    ecx,DWORD PTR [ebp-0x4]
640162a3:	xor    ecx,ebp
640162a5:	call   0x64013d18
640162aa:	leave  
640162ab:	ret    
640162ac:	push   ebp
640162ad:	mov    ebp,esp
640162af:	sub    esp,0x10
640162b2:	push   DWORD PTR [ebp+0x8]
640162b5:	lea    ecx,[ebp-0x10]
640162b8:	call   0x64014335
640162bd:	push   DWORD PTR [ebp+0x28]
640162c0:	lea    ecx,[ebp-0x10]
640162c3:	push   DWORD PTR [ebp+0x24]
640162c6:	push   DWORD PTR [ebp+0x20]
640162c9:	push   DWORD PTR [ebp+0x1c]
640162cc:	push   DWORD PTR [ebp+0x18]
640162cf:	push   DWORD PTR [ebp+0x14]
640162d2:	push   DWORD PTR [ebp+0x10]
640162d5:	push   DWORD PTR [ebp+0xc]
640162d8:	call   0x64015f0a
640162dd:	add    esp,0x20
640162e0:	cmp    BYTE PTR [ebp-0x4],0x0
640162e4:	je     0x640162ed
640162e6:	mov    ecx,DWORD PTR [ebp-0x8]
640162e9:	and    DWORD PTR [ecx+0x70],0xfffffffd
640162ed:	leave  
640162ee:	ret    
640162ef:	push   esi
640162f0:	push   edi
640162f1:	xor    esi,esi
640162f3:	push   DWORD PTR [esp+0xc]
640162f7:	call   0x640148ce
640162fc:	mov    edi,eax
640162fe:	test   edi,edi
64016300:	pop    ecx
64016301:	jne    0x6401632a
64016303:	cmp    DWORD PTR ds:0x64053a30,eax
64016309:	jbe    0x6401632a
6401630b:	push   esi
6401630c:	call   DWORD PTR ds:0x6402c044
64016312:	lea    eax,[esi+0x3e8]
64016318:	cmp    eax,DWORD PTR ds:0x64053a30
6401631e:	jbe    0x64016323
64016320:	or     eax,0xffffffff
64016323:	cmp    eax,0xffffffff
64016326:	mov    esi,eax
64016328:	jne    0x640162f3
6401632a:	mov    eax,edi
6401632c:	pop    edi
6401632d:	pop    esi
6401632e:	ret    
6401632f:	push   esi
64016330:	push   edi
64016331:	xor    esi,esi
64016333:	push   0x0
64016335:	push   DWORD PTR [esp+0x14]
64016339:	push   DWORD PTR [esp+0x14]
6401633d:	call   0x640155eb
64016342:	mov    edi,eax
64016344:	add    esp,0xc
64016347:	test   edi,edi
64016349:	jne    0x64016372
6401634b:	cmp    DWORD PTR ds:0x64053a30,eax
64016351:	jbe    0x64016372
64016353:	push   esi
64016354:	call   DWORD PTR ds:0x6402c044
6401635a:	lea    eax,[esi+0x3e8]
64016360:	cmp    eax,DWORD PTR ds:0x64053a30
64016366:	jbe    0x6401636b
64016368:	or     eax,0xffffffff
6401636b:	cmp    eax,0xffffffff
6401636e:	mov    esi,eax
64016370:	jne    0x64016333
64016372:	mov    eax,edi
64016374:	pop    edi
64016375:	pop    esi
64016376:	ret    
64016377:	push   esi
64016378:	push   edi
64016379:	xor    esi,esi
6401637b:	push   DWORD PTR [esp+0x10]
6401637f:	push   DWORD PTR [esp+0x10]
64016383:	call   0x64015709
64016388:	mov    edi,eax
6401638a:	test   edi,edi
6401638c:	pop    ecx
6401638d:	pop    ecx
6401638e:	jne    0x640163bd
64016390:	cmp    DWORD PTR [esp+0x10],eax
64016394:	je     0x640163bd
64016396:	cmp    DWORD PTR ds:0x64053a30,eax
6401639c:	jbe    0x640163bd
6401639e:	push   esi
6401639f:	call   DWORD PTR ds:0x6402c044
640163a5:	lea    eax,[esi+0x3e8]
640163ab:	cmp    eax,DWORD PTR ds:0x64053a30
640163b1:	jbe    0x640163b6
640163b3:	or     eax,0xffffffff
640163b6:	cmp    eax,0xffffffff
640163b9:	mov    esi,eax
640163bb:	jne    0x6401637b
640163bd:	mov    eax,edi
640163bf:	pop    edi
640163c0:	pop    esi
640163c1:	ret    
640163c2:	push   ebp
640163c3:	lea    ebp,[esp-0x2a8]
640163ca:	sub    esp,0x328
640163d0:	mov    eax,ds:0x640521ac
640163d5:	xor    eax,ebp
640163d7:	mov    DWORD PTR [ebp+0x2a4],eax
640163dd:	test   BYTE PTR ds:0x640522cc,0x1
640163e4:	push   esi
640163e5:	je     0x640163ef
640163e7:	push   0xa
640163e9:	call   0x6401bffd
640163ee:	pop    ecx
640163ef:	call   0x6401e596
640163f4:	test   eax,eax
640163f6:	je     0x64016400
640163f8:	push   0x16
640163fa:	call   0x6401e5a3
640163ff:	pop    ecx
64016400:	test   BYTE PTR ds:0x640522cc,0x2
64016407:	je     0x640164ad
6401640d:	mov    DWORD PTR [ebp+0x88],eax
64016413:	mov    DWORD PTR [ebp+0x84],ecx
64016419:	mov    DWORD PTR [ebp+0x80],edx
6401641f:	mov    DWORD PTR [ebp+0x7c],ebx
64016422:	mov    DWORD PTR [ebp+0x78],esi
64016425:	mov    DWORD PTR [ebp+0x74],edi
64016428:	data16 mov WORD PTR [ebp+0xa0],ss
6401642f:	data16 mov WORD PTR [ebp+0x94],cs
64016436:	data16 mov WORD PTR [ebp+0x70],ds
6401643a:	data16 mov WORD PTR [ebp+0x6c],es
6401643e:	data16 mov WORD PTR [ebp+0x68],fs
64016442:	data16 mov WORD PTR [ebp+0x64],gs
64016446:	pushf  
64016447:	pop    DWORD PTR [ebp+0x98]
6401644d:	mov    esi,DWORD PTR [ebp+0x2ac]
64016453:	lea    eax,[ebp+0x2ac]
64016459:	mov    DWORD PTR [ebp+0x9c],eax
6401645f:	mov    DWORD PTR [ebp-0x28],0x10001
64016466:	mov    DWORD PTR [ebp+0x90],esi
6401646c:	mov    eax,DWORD PTR [eax-0x4]
6401646f:	push   0x50
64016471:	mov    DWORD PTR [ebp+0x8c],eax
64016477:	lea    eax,[ebp-0x80]
6401647a:	push   0x0
6401647c:	push   eax
6401647d:	call   0x64015170
64016482:	lea    eax,[ebp-0x80]
64016485:	add    esp,0xc
64016488:	mov    DWORD PTR [ebp-0x30],eax
6401648b:	lea    eax,[ebp-0x28]
6401648e:	push   0x0
64016490:	mov    DWORD PTR [ebp-0x80],0x40000015
64016497:	mov    DWORD PTR [ebp-0x74],esi
6401649a:	mov    DWORD PTR [ebp-0x2c],eax
6401649d:	call   DWORD PTR ds:0x6402c1b0
640164a3:	lea    eax,[ebp-0x30]
640164a6:	push   eax
640164a7:	call   DWORD PTR ds:0x6402c1ac
640164ad:	push   0x3
640164af:	call   0x640182b6
640164b4:	int3   
640164b5:	mov    ecx,DWORD PTR [esp+0x8]
640164b9:	mov    eax,ds:0x640522cc
640164be:	mov    edx,DWORD PTR [esp+0x4]
640164c2:	and    edx,DWORD PTR [esp+0x8]
640164c6:	not    ecx
640164c8:	and    ecx,eax
640164ca:	or     ecx,edx
640164cc:	mov    DWORD PTR ds:0x640522cc,ecx
640164d2:	ret    
640164d3:	int3   
640164d4:	push   0x64015930
640164d9:	push   DWORD PTR fs:0x0
640164e0:	mov    eax,DWORD PTR [esp+0x10]
640164e4:	mov    DWORD PTR [esp+0x10],ebp
640164e8:	lea    ebp,[esp+0x10]
640164ec:	sub    esp,eax
640164ee:	push   ebx
640164ef:	push   esi
640164f0:	push   edi
640164f1:	mov    eax,ds:0x640521ac
640164f6:	xor    DWORD PTR [ebp-0x4],eax
640164f9:	xor    eax,ebp
640164fb:	push   eax
640164fc:	mov    DWORD PTR [ebp-0x18],esp
640164ff:	push   DWORD PTR [ebp-0x8]
64016502:	mov    eax,DWORD PTR [ebp-0x4]
64016505:	mov    DWORD PTR [ebp-0x4],0xfffffffe
6401650c:	mov    DWORD PTR [ebp-0x8],eax
6401650f:	lea    eax,[ebp-0x10]
64016512:	mov    fs:0x0,eax
64016518:	ret    
64016519:	mov    ecx,DWORD PTR [ebp-0x10]
6401651c:	mov    DWORD PTR fs:0x0,ecx
64016523:	pop    ecx
64016524:	pop    edi
64016525:	pop    edi
64016526:	pop    esi
64016527:	pop    ebx
64016528:	mov    esp,ebp
6401652a:	pop    ebp
6401652b:	push   ecx
6401652c:	ret    
6401652d:	mov    ecx,DWORD PTR [esp+0x4]
64016531:	push   ebx
64016532:	xor    ebx,ebx
64016534:	cmp    ecx,ebx
64016536:	push   esi
64016537:	push   edi
64016538:	je     0x64016542
6401653a:	mov    edi,DWORD PTR [esp+0x14]
6401653e:	cmp    edi,ebx
64016540:	ja     0x6401655d
64016542:	call   0x640166d3
64016547:	push   0x16
64016549:	pop    esi
6401654a:	mov    DWORD PTR [eax],esi
6401654c:	push   ebx
6401654d:	push   ebx
6401654e:	push   ebx
6401654f:	push   ebx
64016550:	push   ebx
64016551:	call   0x64013e62
64016556:	add    esp,0x14
64016559:	mov    eax,esi
6401655b:	jmp    0x6401658e
6401655d:	mov    esi,DWORD PTR [esp+0x18]
64016561:	cmp    esi,ebx
64016563:	jne    0x64016569
64016565:	mov    BYTE PTR [ecx],bl
64016567:	jmp    0x64016542
64016569:	mov    edx,ecx
6401656b:	mov    al,BYTE PTR [esi]
6401656d:	mov    BYTE PTR [edx],al
6401656f:	inc    edx
64016570:	inc    esi
64016571:	cmp    al,bl
64016573:	je     0x64016578
64016575:	dec    edi
64016576:	jne    0x6401656b
64016578:	cmp    edi,ebx
6401657a:	jne    0x6401658c
6401657c:	mov    BYTE PTR [ecx],bl
6401657e:	call   0x640166d3
64016583:	push   0x22
64016585:	pop    ecx
64016586:	mov    DWORD PTR [eax],ecx
64016588:	mov    esi,ecx
6401658a:	jmp    0x6401654c
6401658c:	xor    eax,eax
6401658e:	pop    edi
6401658f:	pop    esi
64016590:	pop    ebx
64016591:	ret    
64016592:	push   0xc
64016594:	push   0x64043c48
64016599:	call   0x640164d4
6401659e:	push   0xe
640165a0:	call   0x6401b49a
640165a5:	pop    ecx
640165a6:	and    DWORD PTR [ebp-0x4],0x0
640165aa:	mov    esi,DWORD PTR [ebp+0x8]
640165ad:	mov    ecx,DWORD PTR [esi+0x4]
640165b0:	test   ecx,ecx
640165b2:	je     0x640165e3
640165b4:	mov    eax,ds:0x64053a38
640165b9:	mov    edx,0x64053a34
640165be:	mov    DWORD PTR [ebp-0x1c],eax
640165c1:	test   eax,eax
640165c3:	je     0x640165d6
640165c5:	cmp    DWORD PTR [eax],ecx
640165c7:	jne    0x640165f5
640165c9:	mov    ecx,DWORD PTR [eax+0x4]
640165cc:	mov    DWORD PTR [edx+0x4],ecx
640165cf:	push   eax
640165d0:	call   0x640147cf
640165d5:	pop    ecx
640165d6:	push   DWORD PTR [esi+0x4]
640165d9:	call   0x640147cf
640165de:	pop    ecx
640165df:	and    DWORD PTR [esi+0x4],0x0
640165e3:	mov    DWORD PTR [ebp-0x4],0xfffffffe
640165ea:	call   0x640165f9
640165ef:	call   0x64016519
640165f4:	ret    
640165f5:	mov    edx,eax
640165f7:	jmp    0x640165be
640165f9:	push   0xe
640165fb:	call   0x6401b3c2
64016600:	pop    ecx
64016601:	ret    
64016602:	int3   
64016603:	int3   
64016604:	int3   
64016605:	int3   
64016606:	int3   
64016607:	int3   
64016608:	int3   
64016609:	int3   
6401660a:	int3   
6401660b:	int3   
6401660c:	int3   
6401660d:	int3   
6401660e:	int3   
6401660f:	int3   
64016610:	mov    edx,DWORD PTR [esp+0x4]
64016614:	mov    ecx,DWORD PTR [esp+0x8]
64016618:	test   edx,0x3
6401661e:	jne    0x6401665c
64016620:	mov    eax,DWORD PTR [edx]
64016622:	cmp    al,BYTE PTR [ecx]
64016624:	jne    0x64016654
64016626:	or     al,al
64016628:	je     0x64016650
6401662a:	cmp    ah,BYTE PTR [ecx+0x1]
6401662d:	jne    0x64016654
6401662f:	or     ah,ah
64016631:	je     0x64016650
64016633:	shr    eax,0x10
64016636:	cmp    al,BYTE PTR [ecx+0x2]
64016639:	jne    0x64016654
6401663b:	or     al,al
6401663d:	je     0x64016650
6401663f:	cmp    ah,BYTE PTR [ecx+0x3]
64016642:	jne    0x64016654
64016644:	add    ecx,0x4
64016647:	add    edx,0x4
6401664a:	or     ah,ah
6401664c:	jne    0x64016620
6401664e:	mov    edi,edi
64016650:	xor    eax,eax
64016652:	ret    
64016653:	nop
64016654:	sbb    eax,eax
64016656:	shl    eax,1
64016658:	add    eax,0x1
6401665b:	ret    
6401665c:	test   edx,0x1
64016662:	je     0x6401667c
64016664:	mov    al,BYTE PTR [edx]
64016666:	add    edx,0x1
64016669:	cmp    al,BYTE PTR [ecx]
6401666b:	jne    0x64016654
6401666d:	add    ecx,0x1
64016670:	or     al,al
64016672:	je     0x64016650
64016674:	test   edx,0x2
6401667a:	je     0x64016620
6401667c:	mov    ax,WORD PTR [edx]
6401667f:	add    edx,0x2
64016682:	cmp    al,BYTE PTR [ecx]
64016684:	jne    0x64016654
64016686:	or     al,al
64016688:	je     0x64016650
6401668a:	cmp    ah,BYTE PTR [ecx+0x1]
6401668d:	jne    0x64016654
6401668f:	or     ah,ah
64016691:	je     0x64016650
64016693:	add    ecx,0x2
64016696:	jmp    0x64016620
64016698:	mov    eax,DWORD PTR [esp+0x4]
6401669c:	xor    ecx,ecx
6401669e:	cmp    eax,DWORD PTR [ecx*8+0x640522e0]
640166a5:	je     0x640166b9
640166a7:	inc    ecx
640166a8:	cmp    ecx,0x2d
640166ab:	jb     0x6401669e
640166ad:	lea    ecx,[eax-0x13]
640166b0:	cmp    ecx,0x11
640166b3:	ja     0x640166c1
640166b5:	push   0xd
640166b7:	pop    eax
640166b8:	ret    
640166b9:	mov    eax,DWORD PTR [ecx*8+0x640522e4]
640166c0:	ret    
640166c1:	add    eax,0xffffff44
640166c6:	push   0xe
640166c8:	pop    ecx
640166c9:	cmp    ecx,eax
640166cb:	sbb    eax,eax
640166cd:	and    eax,ecx
640166cf:	add    eax,0x8
640166d2:	ret    
640166d3:	call   0x640179c3
640166d8:	test   eax,eax
640166da:	jne    0x640166e2
640166dc:	mov    eax,0x64052448
640166e1:	ret    
640166e2:	add    eax,0x8
640166e5:	ret    
640166e6:	call   0x640179c3
640166eb:	test   eax,eax
640166ed:	jne    0x640166f5
640166ef:	mov    eax,0x6405244c
640166f4:	ret    
640166f5:	add    eax,0xc
640166f8:	ret    
640166f9:	push   esi
640166fa:	call   0x640166e6
640166ff:	mov    ecx,DWORD PTR [esp+0x8]
64016703:	push   ecx
64016704:	mov    DWORD PTR [eax],ecx
64016706:	call   0x64016698
6401670b:	pop    ecx
6401670c:	mov    esi,eax
6401670e:	call   0x640166d3
64016713:	mov    DWORD PTR [eax],esi
64016715:	pop    esi
64016716:	ret    
64016717:	int3   
64016718:	int3   
64016719:	int3   
6401671a:	int3   
6401671b:	int3   
6401671c:	int3   
6401671d:	int3   
6401671e:	int3   
6401671f:	int3   
64016720:	push   ebp
64016721:	mov    ebp,esp
64016723:	push   edi
64016724:	push   esi
64016725:	mov    esi,DWORD PTR [ebp+0xc]
64016728:	mov    ecx,DWORD PTR [ebp+0x10]
6401672b:	mov    edi,DWORD PTR [ebp+0x8]
6401672e:	mov    eax,ecx
64016730:	mov    edx,ecx
64016732:	add    eax,esi
64016734:	cmp    edi,esi
64016736:	jbe    0x64016740
64016738:	cmp    edi,eax
6401673a:	jb     0x640168e4
64016740:	cmp    ecx,0x100
64016746:	jb     0x64016767
64016748:	cmp    DWORD PTR ds:0x64054698,0x0
6401674f:	je     0x64016767
64016751:	push   edi
64016752:	push   esi
64016753:	and    edi,0xf
64016756:	and    esi,0xf
64016759:	cmp    edi,esi
6401675b:	pop    esi
6401675c:	pop    edi
6401675d:	jne    0x64016767
6401675f:	pop    esi
64016760:	pop    edi
64016761:	pop    ebp
64016762:	jmp    0x6401db11
64016767:	test   edi,0x3
6401676d:	jne    0x64016784
6401676f:	shr    ecx,0x2
64016772:	and    edx,0x3
64016775:	cmp    ecx,0x8
64016778:	jb     0x640167a4
6401677a:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
6401677c:	jmp    DWORD PTR [edx*4+0x64016894]
64016783:	nop
64016784:	mov    eax,edi
64016786:	mov    edx,0x3
6401678b:	sub    ecx,0x4
6401678e:	jb     0x6401679c
64016790:	and    eax,0x3
64016793:	add    ecx,eax
64016795:	jmp    DWORD PTR [eax*4+0x640167a8]
6401679c:	jmp    DWORD PTR [ecx*4+0x640168a4]
640167a3:	nop
640167a4:	jmp    DWORD PTR [ecx*4+0x64016828]
640167ab:	nop
640167ac:	mov    eax,0xe4640167
640167b1:	add    DWORD PTR [si+0x8],esp
640167b5:	push   0xd1236401
640167ba:	mov    al,BYTE PTR [esi]
640167bc:	mov    BYTE PTR [edi],al
640167be:	mov    al,BYTE PTR [esi+0x1]
640167c1:	mov    BYTE PTR [edi+0x1],al
640167c4:	mov    al,BYTE PTR [esi+0x2]
640167c7:	shr    ecx,0x2
640167ca:	mov    BYTE PTR [edi+0x2],al
640167cd:	add    esi,0x3
640167d0:	add    edi,0x3
640167d3:	cmp    ecx,0x8
640167d6:	jb     0x640167a4
640167d8:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
640167da:	jmp    DWORD PTR [edx*4+0x64016894]
640167e1:	lea    ecx,[ecx+0x0]
640167e4:	and    edx,ecx
640167e6:	mov    al,BYTE PTR [esi]
640167e8:	mov    BYTE PTR [edi],al
640167ea:	mov    al,BYTE PTR [esi+0x1]
640167ed:	shr    ecx,0x2
640167f0:	mov    BYTE PTR [edi+0x1],al
640167f3:	add    esi,0x2
640167f6:	add    edi,0x2
640167f9:	cmp    ecx,0x8
640167fc:	jb     0x640167a4
640167fe:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
64016800:	jmp    DWORD PTR [edx*4+0x64016894]
64016807:	nop
64016808:	and    edx,ecx
6401680a:	mov    al,BYTE PTR [esi]
6401680c:	mov    BYTE PTR [edi],al
6401680e:	add    esi,0x1
64016811:	shr    ecx,0x2
64016814:	add    edi,0x1
64016817:	cmp    ecx,0x8
6401681a:	jb     0x640167a4
6401681c:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
6401681e:	jmp    DWORD PTR [edx*4+0x64016894]
64016825:	lea    ecx,[ecx+0x0]
64016828:	mov    ebp,DWORD PTR [eax+0x1]
6401682b:	fs js  0x64016896
6401682e:	add    DWORD PTR [eax+esi*2+0x68],esp
64016832:	add    DWORD PTR [eax+ebp*2+0x68],esp
64016836:	add    DWORD PTR [eax+eiz*2+0x68],esp
6401683a:	add    DWORD PTR [eax+ebx*2+0x68],esp
6401683e:	add    DWORD PTR [eax+edx*2+0x68],esp
64016842:	add    DWORD PTR [eax+ecx*2+0x68],esp
64016846:	add    DWORD PTR [ebx+ecx*4+0x44],esp
6401684a:	mov    fs,esp
6401684c:	mov    DWORD PTR [edi+ecx*4-0x1c],eax
64016850:	mov    eax,DWORD PTR [esi+ecx*4-0x18]
64016854:	mov    DWORD PTR [edi+ecx*4-0x18],eax
64016858:	mov    eax,DWORD PTR [esi+ecx*4-0x14]
6401685c:	mov    DWORD PTR [edi+ecx*4-0x14],eax
64016860:	mov    eax,DWORD PTR [esi+ecx*4-0x10]
64016864:	mov    DWORD PTR [edi+ecx*4-0x10],eax
64016868:	mov    eax,DWORD PTR [esi+ecx*4-0xc]
6401686c:	mov    DWORD PTR [edi+ecx*4-0xc],eax
64016870:	mov    eax,DWORD PTR [esi+ecx*4-0x8]
64016874:	mov    DWORD PTR [edi+ecx*4-0x8],eax
64016878:	mov    eax,DWORD PTR [esi+ecx*4-0x4]
6401687c:	mov    DWORD PTR [edi+ecx*4-0x4],eax
64016880:	lea    eax,[ecx*4+0x0]
64016887:	add    esi,eax
64016889:	add    edi,eax
6401688b:	jmp    DWORD PTR [edx*4+0x64016894]
64016892:	mov    edi,edi
64016894:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
64016895:	push   0x68ac6401
6401689a:	add    DWORD PTR [eax+edi*4+0x68],esp
6401689e:	add    DWORD PTR [esp+ecx*8+0x68],esp
640168a2:	add    DWORD PTR [ebx+ecx*4+0x45],esp
640168a6:	or     BYTE PTR [esi+0x5f],bl
640168a9:	leave  
640168aa:	ret    
640168ab:	nop
640168ac:	mov    al,BYTE PTR [esi]
640168ae:	mov    BYTE PTR [edi],al
640168b0:	mov    eax,DWORD PTR [ebp+0x8]
640168b3:	pop    esi
640168b4:	pop    edi
640168b5:	leave  
640168b6:	ret    
640168b7:	nop
640168b8:	mov    al,BYTE PTR [esi]
640168ba:	mov    BYTE PTR [edi],al
640168bc:	mov    al,BYTE PTR [esi+0x1]
640168bf:	mov    BYTE PTR [edi+0x1],al
640168c2:	mov    eax,DWORD PTR [ebp+0x8]
640168c5:	pop    esi
640168c6:	pop    edi
640168c7:	leave  
640168c8:	ret    
640168c9:	lea    ecx,[ecx+0x0]
640168cc:	mov    al,BYTE PTR [esi]
640168ce:	mov    BYTE PTR [edi],al
640168d0:	mov    al,BYTE PTR [esi+0x1]
640168d3:	mov    BYTE PTR [edi+0x1],al
640168d6:	mov    al,BYTE PTR [esi+0x2]
640168d9:	mov    BYTE PTR [edi+0x2],al
640168dc:	mov    eax,DWORD PTR [ebp+0x8]
640168df:	pop    esi
640168e0:	pop    edi
640168e1:	leave  
640168e2:	ret    
640168e3:	nop
640168e4:	lea    esi,[ecx+esi*1-0x4]
640168e8:	lea    edi,[ecx+edi*1-0x4]
640168ec:	test   edi,0x3
640168f2:	jne    0x64016918
640168f4:	shr    ecx,0x2
640168f7:	and    edx,0x3
640168fa:	cmp    ecx,0x8
640168fd:	jb     0x6401690c
640168ff:	std    
64016900:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
64016902:	cld    
64016903:	jmp    DWORD PTR [edx*4+0x64016a30]
6401690a:	mov    edi,edi
6401690c:	neg    ecx
6401690e:	jmp    DWORD PTR [ecx*4+0x640169e0]
64016915:	lea    ecx,[ecx+0x0]
64016918:	mov    eax,edi
6401691a:	mov    edx,0x3
6401691f:	cmp    ecx,0x4
64016922:	jb     0x64016930
64016924:	and    eax,0x3
64016927:	sub    ecx,eax
64016929:	jmp    DWORD PTR [eax*4+0x64016934]
64016930:	jmp    DWORD PTR [ecx*4+0x64016a30]
64016937:	nop
64016938:	inc    esp
64016939:	imul   eax,DWORD PTR [ecx],0x1696864
6401693f:	fs nop
64016941:	imul   eax,DWORD PTR [ecx],0x3468a64
64016947:	and    edx,ecx
64016949:	mov    BYTE PTR [edi+0x3],al
6401694c:	sub    esi,0x1
6401694f:	shr    ecx,0x2
64016952:	sub    edi,0x1
64016955:	cmp    ecx,0x8
64016958:	jb     0x6401690c
6401695a:	std    
6401695b:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
6401695d:	cld    
6401695e:	jmp    DWORD PTR [edx*4+0x64016a30]
64016965:	lea    ecx,[ecx+0x0]
64016968:	mov    al,BYTE PTR [esi+0x3]
6401696b:	and    edx,ecx
6401696d:	mov    BYTE PTR [edi+0x3],al
64016970:	mov    al,BYTE PTR [esi+0x2]
64016973:	shr    ecx,0x2
64016976:	mov    BYTE PTR [edi+0x2],al
64016979:	sub    esi,0x2
6401697c:	sub    edi,0x2
6401697f:	cmp    ecx,0x8
64016982:	jb     0x6401690c
64016984:	std    
64016985:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
64016987:	cld    
64016988:	jmp    DWORD PTR [edx*4+0x64016a30]
6401698f:	nop
64016990:	mov    al,BYTE PTR [esi+0x3]
64016993:	and    edx,ecx
64016995:	mov    BYTE PTR [edi+0x3],al
64016998:	mov    al,BYTE PTR [esi+0x2]
6401699b:	mov    BYTE PTR [edi+0x2],al
6401699e:	mov    al,BYTE PTR [esi+0x1]
640169a1:	shr    ecx,0x2
640169a4:	mov    BYTE PTR [edi+0x1],al
640169a7:	sub    esi,0x3
640169aa:	sub    edi,0x3
640169ad:	cmp    ecx,0x8
640169b0:	jb     0x6401690c
640169b6:	std    
640169b7:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
640169b9:	cld    
640169ba:	jmp    DWORD PTR [edx*4+0x64016a30]
640169c1:	lea    ecx,[ecx+0x0]
640169c4:	in     al,0x69
640169c6:	add    DWORD PTR [esp+ebp*8+0x69],esp
640169ca:	add    DWORD PTR [esp+esi*8+0x69],esp
640169ce:	add    DWORD PTR [esp+edi*8+0x69],esp
640169d2:	add    DWORD PTR [esp+eax*1+0x6a],esp
640169d6:	add    DWORD PTR [esp+ecx*1+0x6a],esp
640169da:	add    DWORD PTR [esp+edx*1+0x6a],esp
640169de:	add    DWORD PTR [edi+eiz*1+0x6a],esp
640169e2:	add    DWORD PTR [ebx+ecx*4+0x44],esp
640169e6:	mov    ds,WORD PTR [ecx+ecx*4]
640169e9:	inc    esp
640169ea:	(bad)  
640169eb:	sbb    al,0x8b
640169ed:	inc    esp
640169ee:	mov    ds,WORD PTR [eax]
640169f0:	mov    DWORD PTR [edi+ecx*4+0x18],eax
640169f4:	mov    eax,DWORD PTR [esi+ecx*4+0x14]
640169f8:	mov    DWORD PTR [edi+ecx*4+0x14],eax
640169fc:	mov    eax,DWORD PTR [esi+ecx*4+0x10]
64016a00:	mov    DWORD PTR [edi+ecx*4+0x10],eax
64016a04:	mov    eax,DWORD PTR [esi+ecx*4+0xc]
64016a08:	mov    DWORD PTR [edi+ecx*4+0xc],eax
64016a0c:	mov    eax,DWORD PTR [esi+ecx*4+0x8]
64016a10:	mov    DWORD PTR [edi+ecx*4+0x8],eax
64016a14:	mov    eax,DWORD PTR [esi+ecx*4+0x4]
64016a18:	mov    DWORD PTR [edi+ecx*4+0x4],eax
64016a1c:	lea    eax,[ecx*4+0x0]
64016a23:	add    esi,eax
64016a25:	add    edi,eax
64016a27:	jmp    DWORD PTR [edx*4+0x64016a30]
64016a2e:	mov    edi,edi
64016a30:	inc    eax
64016a31:	push   0x1
64016a33:	fs dec eax
64016a35:	push   0x1
64016a37:	fs pop eax
64016a39:	push   0x1
64016a3b:	fs ins BYTE PTR es:[edi],dx
64016a3d:	push   0x1
64016a3f:	mov    eax,DWORD PTR fs:[ebp+0x8]
64016a43:	pop    esi
64016a44:	pop    edi
64016a45:	leave  
64016a46:	ret    
64016a47:	nop
64016a48:	mov    al,BYTE PTR [esi+0x3]
64016a4b:	mov    BYTE PTR [edi+0x3],al
64016a4e:	mov    eax,DWORD PTR [ebp+0x8]
64016a51:	pop    esi
64016a52:	pop    edi
64016a53:	leave  
64016a54:	ret    
64016a55:	lea    ecx,[ecx+0x0]
64016a58:	mov    al,BYTE PTR [esi+0x3]
64016a5b:	mov    BYTE PTR [edi+0x3],al
64016a5e:	mov    al,BYTE PTR [esi+0x2]
64016a61:	mov    BYTE PTR [edi+0x2],al
64016a64:	mov    eax,DWORD PTR [ebp+0x8]
64016a67:	pop    esi
64016a68:	pop    edi
64016a69:	leave  
64016a6a:	ret    
64016a6b:	nop
64016a6c:	mov    al,BYTE PTR [esi+0x3]
64016a6f:	mov    BYTE PTR [edi+0x3],al
64016a72:	mov    al,BYTE PTR [esi+0x2]
64016a75:	mov    BYTE PTR [edi+0x2],al
64016a78:	mov    al,BYTE PTR [esi+0x1]
64016a7b:	mov    BYTE PTR [edi+0x1],al
64016a7e:	mov    eax,DWORD PTR [ebp+0x8]
64016a81:	pop    esi
64016a82:	pop    edi
64016a83:	leave  
64016a84:	ret    
64016a85:	mov    eax,DWORD PTR [esp+0x4]
64016a89:	mov    ds:0x64053a3c,eax
64016a8e:	ret    
64016a8f:	push   DWORD PTR ds:0x64053a3c
64016a95:	call   0x6401781e
64016a9a:	test   eax,eax
64016a9c:	pop    ecx
64016a9d:	je     0x64016aae
64016a9f:	push   DWORD PTR [esp+0x4]
64016aa3:	call   eax
64016aa5:	test   eax,eax
64016aa7:	pop    ecx
64016aa8:	je     0x64016aae
64016aaa:	xor    eax,eax
64016aac:	inc    eax
64016aad:	ret    
64016aae:	xor    eax,eax
64016ab0:	ret    
64016ab1:	mov    DWORD PTR [ecx],0x640408e8
64016ab7:	jmp    0x6401372a
64016abc:	push   esi
64016abd:	mov    esi,ecx
64016abf:	mov    DWORD PTR [esi],0x640408e8
64016ac5:	call   0x6401372a
64016aca:	test   BYTE PTR [esp+0x8],0x1
64016acf:	je     0x64016ad8
64016ad1:	push   esi
64016ad2:	call   0x64013656
64016ad7:	pop    ecx
64016ad8:	mov    eax,esi
64016ada:	pop    esi
64016adb:	ret    0x4
64016ade:	push   esi
64016adf:	push   edi
64016ae0:	mov    edi,DWORD PTR [esp+0xc]
64016ae4:	mov    eax,DWORD PTR [edi+0x4]
64016ae7:	test   eax,eax
64016ae9:	je     0x64016b34
64016aeb:	lea    edx,[eax+0x8]
64016aee:	cmp    BYTE PTR [edx],0x0
64016af1:	je     0x64016b34
64016af3:	mov    esi,DWORD PTR [esp+0x10]
64016af7:	mov    ecx,DWORD PTR [esi+0x4]
64016afa:	cmp    eax,ecx
64016afc:	je     0x64016b12
64016afe:	add    ecx,0x8
64016b01:	push   ecx
64016b02:	push   edx
64016b03:	call   0x64016610
64016b08:	test   eax,eax
64016b0a:	pop    ecx
64016b0b:	pop    ecx
64016b0c:	je     0x64016b12
64016b0e:	xor    eax,eax
64016b10:	jmp    0x64016b37
64016b12:	test   BYTE PTR [esi],0x2
64016b15:	je     0x64016b1c
64016b17:	test   BYTE PTR [edi],0x8
64016b1a:	je     0x64016b0e
64016b1c:	mov    eax,DWORD PTR [esp+0x14]
64016b20:	mov    eax,DWORD PTR [eax]
64016b22:	test   al,0x1
64016b24:	je     0x64016b2b
64016b26:	test   BYTE PTR [edi],0x1
64016b29:	je     0x64016b0e
64016b2b:	test   al,0x2
64016b2d:	je     0x64016b34
64016b2f:	test   BYTE PTR [edi],0x2
64016b32:	je     0x64016b0e
64016b34:	xor    eax,eax
64016b36:	inc    eax
64016b37:	pop    edi
64016b38:	pop    esi
64016b39:	ret    
64016b3a:	mov    eax,DWORD PTR [esp+0x4]
64016b3e:	mov    eax,DWORD PTR [eax]
64016b40:	mov    eax,DWORD PTR [eax]
64016b42:	cmp    eax,0xe0434f4d
64016b47:	je     0x64016b61
64016b49:	cmp    eax,0xe06d7363
64016b4e:	jne    0x64016b7b
64016b50:	call   0x64017a3a
64016b55:	and    DWORD PTR [eax+0x90],0x0
64016b5c:	jmp    0x64017d60
64016b61:	call   0x64017a3a
64016b66:	cmp    DWORD PTR [eax+0x90],0x0
64016b6d:	jle    0x64016b7b
64016b6f:	call   0x64017a3a
64016b74:	add    eax,0x90
64016b79:	dec    DWORD PTR [eax]
64016b7b:	xor    eax,eax
64016b7d:	ret    
64016b7e:	push   0x10
64016b80:	push   0x64043c68
64016b85:	call   0x640164d4
64016b8a:	mov    edi,DWORD PTR [ebp+0x10]
64016b8d:	mov    ebx,DWORD PTR [ebp+0x8]
64016b90:	cmp    DWORD PTR [edi+0x4],0x80
64016b97:	jg     0x64016b9f
64016b99:	movsx  esi,BYTE PTR [ebx+0x8]
64016b9d:	jmp    0x64016ba2
64016b9f:	mov    esi,DWORD PTR [ebx+0x8]
64016ba2:	mov    DWORD PTR [ebp-0x1c],esi
64016ba5:	call   0x64017a3a
64016baa:	add    eax,0x90
64016baf:	inc    DWORD PTR [eax]
64016bb1:	and    DWORD PTR [ebp-0x4],0x0
64016bb5:	cmp    esi,DWORD PTR [ebp+0x14]
64016bb8:	je     0x64016c1f
64016bba:	cmp    esi,0xffffffff
64016bbd:	jle    0x64016bc4
64016bbf:	cmp    esi,DWORD PTR [edi+0x4]
64016bc2:	jl     0x64016bc9
64016bc4:	call   0x64017dac
64016bc9:	mov    eax,esi
64016bcb:	shl    eax,0x3
64016bce:	mov    ecx,DWORD PTR [edi+0x8]
64016bd1:	add    ecx,eax
64016bd3:	mov    esi,DWORD PTR [ecx]
64016bd5:	mov    DWORD PTR [ebp-0x20],esi
64016bd8:	mov    DWORD PTR [ebp-0x4],0x1
64016bdf:	cmp    DWORD PTR [ecx+0x4],0x0
64016be3:	je     0x64016bfa
64016be5:	mov    DWORD PTR [ebx+0x8],esi
64016be8:	push   0x103
64016bed:	push   ebx
64016bee:	mov    ecx,DWORD PTR [edi+0x8]
64016bf1:	push   DWORD PTR [ecx+eax*1+0x4]
64016bf5:	call   0x64017e00
64016bfa:	and    DWORD PTR [ebp-0x4],0x0
64016bfe:	jmp    0x64016c1a
64016c00:	push   DWORD PTR [ebp-0x14]
64016c03:	call   0x64016b3a
64016c08:	pop    ecx
64016c09:	ret    
64016c0a:	mov    esp,DWORD PTR [ebp-0x18]
64016c0d:	and    DWORD PTR [ebp-0x4],0x0
64016c11:	mov    edi,DWORD PTR [ebp+0x10]
64016c14:	mov    ebx,DWORD PTR [ebp+0x8]
64016c17:	mov    esi,DWORD PTR [ebp-0x20]
64016c1a:	mov    DWORD PTR [ebp-0x1c],esi
64016c1d:	jmp    0x64016bb5
64016c1f:	mov    DWORD PTR [ebp-0x4],0xfffffffe
64016c26:	call   0x64016c44
64016c2b:	cmp    esi,DWORD PTR [ebp+0x14]
64016c2e:	je     0x64016c35
64016c30:	call   0x64017dac
64016c35:	mov    DWORD PTR [ebx+0x8],esi
64016c38:	call   0x64016519
64016c3d:	ret    
64016c3e:	mov    ebx,DWORD PTR [ebp+0x8]
64016c41:	mov    esi,DWORD PTR [ebp-0x1c]
64016c44:	call   0x64017a3a
64016c49:	cmp    DWORD PTR [eax+0x90],0x0
64016c50:	jle    0x64016c5e
64016c52:	call   0x64017a3a
64016c57:	add    eax,0x90
64016c5c:	dec    DWORD PTR [eax]
64016c5e:	ret    
64016c5f:	mov    eax,DWORD PTR [eax]
64016c61:	cmp    DWORD PTR [eax],0xe06d7363
64016c67:	jne    0x64016ca1
64016c69:	cmp    DWORD PTR [eax+0x10],0x3
64016c6d:	jne    0x64016ca1
64016c6f:	mov    ecx,DWORD PTR [eax+0x14]
64016c72:	cmp    ecx,0x19930520
64016c78:	je     0x64016c8a
64016c7a:	cmp    ecx,0x19930521
64016c80:	je     0x64016c8a
64016c82:	cmp    ecx,0x19930522
64016c88:	jne    0x64016ca1
64016c8a:	cmp    DWORD PTR [eax+0x1c],0x0
64016c8e:	jne    0x64016ca1
64016c90:	call   0x64017a3a
64016c95:	xor    ecx,ecx
64016c97:	inc    ecx
64016c98:	mov    DWORD PTR [eax+0x20c],ecx
64016c9e:	mov    eax,ecx
64016ca0:	ret    
64016ca1:	xor    eax,eax
64016ca3:	ret    
64016ca4:	push   0x8
64016ca6:	push   0x64043c90
64016cab:	call   0x640164d4
64016cb0:	mov    ecx,DWORD PTR [ebp+0x8]
64016cb3:	test   ecx,ecx
64016cb5:	je     0x64016ce1
64016cb7:	cmp    DWORD PTR [ecx],0xe06d7363
64016cbd:	jne    0x64016ce1
64016cbf:	mov    eax,DWORD PTR [ecx+0x1c]
64016cc2:	test   eax,eax
64016cc4:	je     0x64016ce1
64016cc6:	mov    eax,DWORD PTR [eax+0x4]
64016cc9:	test   eax,eax
64016ccb:	je     0x64016ce1
64016ccd:	and    DWORD PTR [ebp-0x4],0x0
64016cd1:	push   eax
64016cd2:	push   DWORD PTR [ecx+0x18]
64016cd5:	call   0x64013981
64016cda:	mov    DWORD PTR [ebp-0x4],0xfffffffe
64016ce1:	call   0x64016519
64016ce6:	ret    
64016ce7:	xor    eax,eax
64016ce9:	cmp    BYTE PTR [ebp+0xc],al
64016cec:	setne  al
64016cef:	ret    
64016cf0:	mov    esp,DWORD PTR [ebp-0x18]
64016cf3:	jmp    0x64017d60
64016cf8:	mov    ecx,DWORD PTR [esp+0x8]
64016cfc:	mov    eax,DWORD PTR [ecx]
64016cfe:	push   esi
64016cff:	mov    esi,DWORD PTR [esp+0x8]
64016d03:	add    eax,esi
64016d05:	cmp    DWORD PTR [ecx+0x4],0x0
64016d09:	jl     0x64016d1b
64016d0b:	mov    edx,DWORD PTR [ecx+0x4]
64016d0e:	mov    ecx,DWORD PTR [ecx+0x8]
64016d11:	mov    esi,DWORD PTR [edx+esi*1]
64016d14:	mov    ecx,DWORD PTR [esi+ecx*1]
64016d17:	add    ecx,edx
64016d19:	add    eax,ecx
64016d1b:	pop    esi
64016d1c:	ret    
64016d1d:	push   ebp
64016d1e:	mov    ebp,esp
64016d20:	sub    esp,0xc
64016d23:	test   edi,edi
64016d25:	jne    0x64016d31
64016d27:	call   0x64017dac
64016d2c:	jmp    0x64017d60
64016d31:	and    DWORD PTR [ebp-0x8],0x0
64016d35:	cmp    DWORD PTR [edi],0x0
64016d38:	mov    BYTE PTR [ebp-0x1],0x0
64016d3c:	jle    0x64016d91
64016d3e:	push   ebx
64016d3f:	push   esi
64016d40:	mov    eax,DWORD PTR [ebp+0x8]
64016d43:	mov    eax,DWORD PTR [eax+0x1c]
64016d46:	mov    eax,DWORD PTR [eax+0xc]
64016d49:	mov    ebx,DWORD PTR [eax]
64016d4b:	test   ebx,ebx
64016d4d:	lea    esi,[eax+0x4]
64016d50:	jle    0x64016d85
64016d52:	mov    eax,DWORD PTR [ebp-0x8]
64016d55:	shl    eax,0x4
64016d58:	mov    DWORD PTR [ebp-0xc],eax
64016d5b:	mov    ecx,DWORD PTR [ebp+0x8]
64016d5e:	push   DWORD PTR [ecx+0x1c]
64016d61:	mov    eax,DWORD PTR [esi]
64016d63:	push   eax
64016d64:	mov    eax,DWORD PTR [edi+0x4]
64016d67:	add    eax,DWORD PTR [ebp-0xc]
64016d6a:	push   eax
64016d6b:	call   0x64016ade
64016d70:	add    esp,0xc
64016d73:	test   eax,eax
64016d75:	jne    0x64016d81
64016d77:	dec    ebx
64016d78:	add    esi,0x4
64016d7b:	test   ebx,ebx
64016d7d:	jg     0x64016d5b
64016d7f:	jmp    0x64016d85
64016d81:	mov    BYTE PTR [ebp-0x1],0x1
64016d85:	inc    DWORD PTR [ebp-0x8]
64016d88:	mov    eax,DWORD PTR [ebp-0x8]
64016d8b:	cmp    eax,DWORD PTR [edi]
64016d8d:	jl     0x64016d40
64016d8f:	pop    esi
64016d90:	pop    ebx
64016d91:	mov    al,BYTE PTR [ebp-0x1]
64016d94:	leave  
64016d95:	ret    
64016d96:	push   0x4
64016d98:	mov    eax,0x64022f63
64016d9d:	call   0x64015bce
64016da2:	call   0x64017a3a
64016da7:	cmp    DWORD PTR [eax+0x94],0x0
64016dae:	je     0x64016db5
64016db0:	call   0x64017dac
64016db5:	and    DWORD PTR [ebp-0x4],0x0
64016db9:	call   0x64017d99
64016dbe:	or     DWORD PTR [ebp-0x4],0xffffffff
64016dc2:	jmp    0x64017d60
64016dc7:	call   0x64017a3a
64016dcc:	mov    ecx,DWORD PTR [ebp+0x8]
64016dcf:	push   0x0
64016dd1:	push   0x0
64016dd3:	mov    DWORD PTR [eax+0x94],ecx
64016dd9:	call   0x64013884
64016dde:	int3   
64016ddf:	push   0x2c
64016de1:	push   0x64043d08
64016de6:	call   0x640164d4
64016deb:	mov    ebx,ecx
64016ded:	mov    edi,DWORD PTR [ebp+0xc]
64016df0:	mov    esi,DWORD PTR [ebp+0x8]
64016df3:	mov    DWORD PTR [ebp-0x1c],ebx
64016df6:	and    DWORD PTR [ebp-0x34],0x0
64016dfa:	mov    eax,DWORD PTR [edi-0x4]
64016dfd:	mov    DWORD PTR [ebp-0x24],eax
64016e00:	push   DWORD PTR [esi+0x18]
64016e03:	lea    eax,[ebp-0x3c]
64016e06:	push   eax
64016e07:	call   0x64013c25
64016e0c:	pop    ecx
64016e0d:	pop    ecx
64016e0e:	mov    DWORD PTR [ebp-0x28],eax
64016e11:	call   0x64017a3a
64016e16:	mov    eax,DWORD PTR [eax+0x88]
64016e1c:	mov    DWORD PTR [ebp-0x2c],eax
64016e1f:	call   0x64017a3a
64016e24:	mov    eax,DWORD PTR [eax+0x8c]
64016e2a:	mov    DWORD PTR [ebp-0x30],eax
64016e2d:	call   0x64017a3a
64016e32:	mov    DWORD PTR [eax+0x88],esi
64016e38:	call   0x64017a3a
64016e3d:	mov    ecx,DWORD PTR [ebp+0x10]
64016e40:	mov    DWORD PTR [eax+0x8c],ecx
64016e46:	and    DWORD PTR [ebp-0x4],0x0
64016e4a:	xor    eax,eax
64016e4c:	inc    eax
64016e4d:	mov    DWORD PTR [ebp+0x10],eax
64016e50:	mov    DWORD PTR [ebp-0x4],eax
64016e53:	push   DWORD PTR [ebp+0x1c]
64016e56:	push   DWORD PTR [ebp+0x18]
64016e59:	push   ebx
64016e5a:	push   DWORD PTR [ebp+0x14]
64016e5d:	push   edi
64016e5e:	call   0x64013cba
64016e63:	add    esp,0x14
64016e66:	mov    DWORD PTR [ebp-0x1c],eax
64016e69:	and    DWORD PTR [ebp-0x4],0x0
64016e6d:	jmp    0x64016ede
64016e6f:	mov    eax,DWORD PTR [ebp-0x14]
64016e72:	call   0x64016c5f
64016e77:	ret    
64016e78:	mov    esp,DWORD PTR [ebp-0x18]
64016e7b:	call   0x64017a3a
64016e80:	and    DWORD PTR [eax+0x20c],0x0
64016e87:	mov    esi,DWORD PTR [ebp+0x14]
64016e8a:	mov    edi,DWORD PTR [ebp+0xc]
64016e8d:	cmp    DWORD PTR [esi+0x4],0x80
64016e94:	jg     0x64016e9c
64016e96:	movsx  ecx,BYTE PTR [edi+0x8]
64016e9a:	jmp    0x64016e9f
64016e9c:	mov    ecx,DWORD PTR [edi+0x8]
64016e9f:	mov    ebx,DWORD PTR [esi+0x10]
64016ea2:	and    DWORD PTR [ebp-0x20],0x0
64016ea6:	mov    eax,DWORD PTR [ebp-0x20]
64016ea9:	cmp    eax,DWORD PTR [esi+0xc]
64016eac:	jae    0x64016ec6
64016eae:	imul   eax,eax,0x14
64016eb1:	add    eax,ebx
64016eb3:	mov    edx,DWORD PTR [eax+0x4]
64016eb6:	cmp    ecx,edx
64016eb8:	jle    0x64016efa
64016eba:	cmp    ecx,DWORD PTR [eax+0x8]
64016ebd:	jg     0x64016efa
64016ebf:	mov    eax,DWORD PTR [esi+0x8]
64016ec2:	mov    ecx,DWORD PTR [eax+edx*8+0x8]
64016ec6:	push   ecx
64016ec7:	push   esi
64016ec8:	push   0x0
64016eca:	push   edi
64016ecb:	call   0x64016b7e
64016ed0:	add    esp,0x10
64016ed3:	and    DWORD PTR [ebp-0x1c],0x0
64016ed7:	and    DWORD PTR [ebp-0x4],0x0
64016edb:	mov    esi,DWORD PTR [ebp+0x8]
64016ede:	mov    DWORD PTR [ebp-0x4],0xfffffffe
64016ee5:	mov    DWORD PTR [ebp+0x10],0x0
64016eec:	call   0x64016f05
64016ef1:	mov    eax,DWORD PTR [ebp-0x1c]
64016ef4:	call   0x64016519
64016ef9:	ret    
64016efa:	inc    DWORD PTR [ebp-0x20]
64016efd:	jmp    0x64016ea6
64016eff:	mov    edi,DWORD PTR [ebp+0xc]
64016f02:	mov    esi,DWORD PTR [ebp+0x8]
64016f05:	mov    eax,DWORD PTR [ebp-0x24]
64016f08:	mov    DWORD PTR [edi-0x4],eax
64016f0b:	push   DWORD PTR [ebp-0x28]
64016f0e:	call   0x64013c6e
64016f13:	pop    ecx
64016f14:	call   0x64017a3a
64016f19:	mov    ecx,DWORD PTR [ebp-0x2c]
64016f1c:	mov    DWORD PTR [eax+0x88],ecx
64016f22:	call   0x64017a3a
64016f27:	mov    ecx,DWORD PTR [ebp-0x30]
64016f2a:	mov    DWORD PTR [eax+0x8c],ecx
64016f30:	cmp    DWORD PTR [esi],0xe06d7363
64016f36:	jne    0x64016f7a
64016f38:	cmp    DWORD PTR [esi+0x10],0x3
64016f3c:	jne    0x64016f7a
64016f3e:	mov    eax,DWORD PTR [esi+0x14]
64016f41:	cmp    eax,0x19930520
64016f46:	je     0x64016f56
64016f48:	cmp    eax,0x19930521
64016f4d:	je     0x64016f56
64016f4f:	cmp    eax,0x19930522
64016f54:	jne    0x64016f7a
64016f56:	cmp    DWORD PTR [ebp-0x34],0x0
64016f5a:	jne    0x64016f7a
64016f5c:	cmp    DWORD PTR [ebp-0x1c],0x0
64016f60:	je     0x64016f7a
64016f62:	push   DWORD PTR [esi+0x18]
64016f65:	call   0x64013c4d
64016f6a:	pop    ecx
64016f6b:	test   eax,eax
64016f6d:	je     0x64016f7a
64016f6f:	push   DWORD PTR [ebp+0x10]
64016f72:	push   esi
64016f73:	call   0x64016ca4
64016f78:	pop    ecx
64016f79:	pop    ecx
64016f7a:	ret    
64016f7b:	push   0xc
64016f7d:	push   0x64043d30
64016f82:	call   0x640164d4
64016f87:	xor    edx,edx
64016f89:	mov    DWORD PTR [ebp-0x1c],edx
64016f8c:	mov    eax,DWORD PTR [ebp+0x10]
64016f8f:	mov    ecx,DWORD PTR [eax+0x4]
64016f92:	cmp    ecx,edx
64016f94:	je     0x640170f2
64016f9a:	cmp    BYTE PTR [ecx+0x8],dl
64016f9d:	je     0x640170f2
64016fa3:	mov    ecx,DWORD PTR [eax+0x8]
64016fa6:	cmp    ecx,edx
64016fa8:	jne    0x64016fb6
64016faa:	test   DWORD PTR [eax],0x80000000
64016fb0:	je     0x640170f2
64016fb6:	mov    eax,DWORD PTR [eax]
64016fb8:	mov    esi,DWORD PTR [ebp+0xc]
64016fbb:	test   eax,eax
64016fbd:	js     0x64016fc3
64016fbf:	lea    esi,[ecx+esi*1+0xc]
64016fc3:	mov    DWORD PTR [ebp-0x4],edx
64016fc6:	xor    ebx,ebx
64016fc8:	inc    ebx
64016fc9:	push   ebx
64016fca:	test   al,0x8
64016fcc:	je     0x6401700f
64016fce:	mov    edi,DWORD PTR [ebp+0x8]
64016fd1:	push   DWORD PTR [edi+0x18]
64016fd4:	call   0x6401e753
64016fd9:	pop    ecx
64016fda:	pop    ecx
64016fdb:	test   eax,eax
64016fdd:	je     0x640170d5
64016fe3:	push   ebx
64016fe4:	push   esi
64016fe5:	call   0x6401e753
64016fea:	pop    ecx
64016feb:	pop    ecx
64016fec:	test   eax,eax
64016fee:	je     0x640170d5
64016ff4:	mov    eax,DWORD PTR [edi+0x18]
64016ff7:	mov    DWORD PTR [esi],eax
64016ff9:	mov    ecx,DWORD PTR [ebp+0x14]
64016ffc:	add    ecx,0x8
64016fff:	push   ecx
64017000:	push   eax
64017001:	call   0x64016cf8
64017006:	pop    ecx
64017007:	pop    ecx
64017008:	mov    DWORD PTR [esi],eax
6401700a:	jmp    0x640170da
6401700f:	mov    edi,DWORD PTR [ebp+0x14]
64017012:	mov    eax,DWORD PTR [ebp+0x8]
64017015:	push   DWORD PTR [eax+0x18]
64017018:	test   BYTE PTR [edi],bl
6401701a:	je     0x64017064
6401701c:	call   0x6401e753
64017021:	pop    ecx
64017022:	pop    ecx
64017023:	test   eax,eax
64017025:	je     0x640170d5
6401702b:	push   ebx
6401702c:	push   esi
6401702d:	call   0x6401e753
64017032:	pop    ecx
64017033:	pop    ecx
64017034:	test   eax,eax
64017036:	je     0x640170d5
6401703c:	push   DWORD PTR [edi+0x14]
6401703f:	mov    eax,DWORD PTR [ebp+0x8]
64017042:	push   DWORD PTR [eax+0x18]
64017045:	push   esi
64017046:	call   0x64016720
6401704b:	add    esp,0xc
6401704e:	cmp    DWORD PTR [edi+0x14],0x4
64017052:	jne    0x640170da
64017058:	mov    eax,DWORD PTR [esi]
6401705a:	test   eax,eax
6401705c:	je     0x640170da
6401705e:	add    edi,0x8
64017061:	push   edi
64017062:	jmp    0x64017000
64017064:	cmp    DWORD PTR [edi+0x18],edx
64017067:	jne    0x640170a1
64017069:	call   0x6401e753
6401706e:	pop    ecx
6401706f:	pop    ecx
64017070:	test   eax,eax
64017072:	je     0x640170d5
64017074:	push   ebx
64017075:	push   esi
64017076:	call   0x6401e753
6401707b:	pop    ecx
6401707c:	pop    ecx
6401707d:	test   eax,eax
6401707f:	je     0x640170d5
64017081:	push   DWORD PTR [edi+0x14]
64017084:	add    edi,0x8
64017087:	push   edi
64017088:	mov    eax,DWORD PTR [ebp+0x8]
6401708b:	push   DWORD PTR [eax+0x18]
6401708e:	call   0x64016cf8
64017093:	pop    ecx
64017094:	pop    ecx
64017095:	push   eax
64017096:	push   esi
64017097:	call   0x64016720
6401709c:	add    esp,0xc
6401709f:	jmp    0x640170da
640170a1:	call   0x6401e753
640170a6:	pop    ecx
640170a7:	pop    ecx
640170a8:	test   eax,eax
640170aa:	je     0x640170d5
640170ac:	push   ebx
640170ad:	push   esi
640170ae:	call   0x6401e753
640170b3:	pop    ecx
640170b4:	pop    ecx
640170b5:	test   eax,eax
640170b7:	je     0x640170d5
640170b9:	push   DWORD PTR [edi+0x18]
640170bc:	call   0x6401e753
640170c1:	pop    ecx
640170c2:	test   eax,eax
640170c4:	je     0x640170d5
640170c6:	test   BYTE PTR [edi],0x4
640170c9:	push   0x0
640170cb:	pop    eax
640170cc:	setne  al
640170cf:	inc    eax
640170d0:	mov    DWORD PTR [ebp-0x1c],eax
640170d3:	jmp    0x640170da
640170d5:	call   0x64017dac
640170da:	mov    DWORD PTR [ebp-0x4],0xfffffffe
640170e1:	mov    eax,DWORD PTR [ebp-0x1c]
640170e4:	jmp    0x640170f4
640170e6:	xor    eax,eax
640170e8:	inc    eax
640170e9:	ret    
640170ea:	mov    esp,DWORD PTR [ebp-0x18]
640170ed:	jmp    0x64017d60
640170f2:	xor    eax,eax
640170f4:	call   0x64016519
640170f9:	ret    
640170fa:	push   0x8
640170fc:	push   0x64043d50
64017101:	call   0x640164d4
64017106:	mov    eax,DWORD PTR [ebp+0x10]
64017109:	test   DWORD PTR [eax],0x80000000
6401710f:	je     0x64017116
64017111:	mov    ebx,DWORD PTR [ebp+0xc]
64017114:	jmp    0x64017120
64017116:	mov    ecx,DWORD PTR [eax+0x8]
64017119:	mov    edx,DWORD PTR [ebp+0xc]
6401711c:	lea    ebx,[ecx+edx*1+0xc]
64017120:	and    DWORD PTR [ebp-0x4],0x0
64017124:	mov    esi,DWORD PTR [ebp+0x14]
64017127:	push   esi
64017128:	push   eax
64017129:	push   DWORD PTR [ebp+0xc]
6401712c:	mov    edi,DWORD PTR [ebp+0x8]
6401712f:	push   edi
64017130:	call   0x64016f7b
64017135:	add    esp,0x10
64017138:	dec    eax
64017139:	je     0x6401715a
6401713b:	dec    eax
6401713c:	jne    0x64017172
6401713e:	push   0x1
64017140:	lea    eax,[esi+0x8]
64017143:	push   eax
64017144:	push   DWORD PTR [edi+0x18]
64017147:	call   0x64016cf8
6401714c:	pop    ecx
6401714d:	pop    ecx
6401714e:	push   eax
6401714f:	push   DWORD PTR [esi+0x18]
64017152:	push   ebx
64017153:	call   0x64013981
64017158:	jmp    0x64017172
6401715a:	lea    eax,[esi+0x8]
6401715d:	push   eax
6401715e:	push   DWORD PTR [edi+0x18]
64017161:	call   0x64016cf8
64017166:	pop    ecx
64017167:	pop    ecx
64017168:	push   eax
64017169:	push   DWORD PTR [esi+0x18]
6401716c:	push   ebx
6401716d:	call   0x64013981
64017172:	mov    DWORD PTR [ebp-0x4],0xfffffffe
64017179:	call   0x64016519
6401717e:	ret    
6401717f:	xor    eax,eax
64017181:	inc    eax
64017182:	ret    
64017183:	mov    esp,DWORD PTR [ebp-0x18]
64017186:	jmp    0x64017d60
6401718b:	push   ebp
6401718c:	mov    ebp,esp
6401718e:	cmp    DWORD PTR [ebp+0x18],0x0
64017192:	je     0x640171a4
64017194:	push   DWORD PTR [ebp+0x18]
64017197:	push   ebx
64017198:	push   esi
64017199:	push   DWORD PTR [ebp+0x8]
6401719c:	call   0x640170fa
640171a1:	add    esp,0x10
640171a4:	cmp    DWORD PTR [ebp+0x20],0x0
640171a8:	push   DWORD PTR [ebp+0x8]
640171ab:	jne    0x640171b0
640171ad:	push   esi
640171ae:	jmp    0x640171b3
640171b0:	push   DWORD PTR [ebp+0x20]
640171b3:	call   0x64013988
640171b8:	push   DWORD PTR [edi]
640171ba:	push   DWORD PTR [ebp+0x14]
640171bd:	push   DWORD PTR [ebp+0x10]
640171c0:	push   esi
640171c1:	call   0x64016b7e
640171c6:	mov    eax,DWORD PTR [edi+0x4]
640171c9:	push   0x100
640171ce:	push   DWORD PTR [ebp+0x1c]
640171d1:	inc    eax
640171d2:	push   DWORD PTR [ebp+0x14]
640171d5:	mov    DWORD PTR [esi+0x8],eax
640171d8:	push   DWORD PTR [ebp+0xc]
640171db:	mov    ecx,DWORD PTR [ebx+0xc]
640171de:	push   esi
640171df:	push   DWORD PTR [ebp+0x8]
640171e2:	call   0x64016ddf
640171e7:	add    esp,0x28
640171ea:	test   eax,eax
640171ec:	je     0x640171f5
640171ee:	push   esi
640171ef:	push   eax
640171f0:	call   0x64013951
640171f5:	pop    ebp
640171f6:	ret    
640171f7:	push   ebp
640171f8:	mov    ebp,esp
640171fa:	push   ecx
640171fb:	push   ecx
640171fc:	push   esi
640171fd:	mov    esi,DWORD PTR [ebp+0x8]
64017200:	cmp    DWORD PTR [esi],0x80000003
64017206:	je     0x640172e6
6401720c:	push   edi
6401720d:	call   0x64017a3a
64017212:	cmp    DWORD PTR [eax+0x80],0x0
64017219:	je     0x6401725a
6401721b:	call   0x64017a3a
64017220:	lea    edi,[eax+0x80]
64017226:	call   0x64017815
6401722b:	cmp    DWORD PTR [edi],eax
6401722d:	je     0x6401725a
6401722f:	cmp    DWORD PTR [esi],0xe0434f4d
64017235:	je     0x6401725a
64017237:	push   DWORD PTR [ebp+0x24]
6401723a:	push   DWORD PTR [ebp+0x20]
6401723d:	push   DWORD PTR [ebp+0x18]
64017240:	push   DWORD PTR [ebp+0x14]
64017243:	push   DWORD PTR [ebp+0x10]
64017246:	push   DWORD PTR [ebp+0xc]
64017249:	push   esi
6401724a:	call   0x64013a40
6401724f:	add    esp,0x1c
64017252:	test   eax,eax
64017254:	jne    0x640172e5
6401725a:	mov    edi,DWORD PTR [ebp+0x18]
6401725d:	cmp    DWORD PTR [edi+0xc],0x0
64017261:	jne    0x64017268
64017263:	call   0x64017dac
64017268:	mov    esi,DWORD PTR [ebp+0x1c]
6401726b:	lea    eax,[ebp-0x8]
6401726e:	push   eax
6401726f:	lea    eax,[ebp-0x4]
64017272:	push   eax
64017273:	push   esi
64017274:	push   DWORD PTR [ebp+0x20]
64017277:	push   edi
64017278:	call   0x64013bb2
6401727d:	mov    edi,eax
6401727f:	mov    eax,DWORD PTR [ebp-0x4]
64017282:	add    esp,0x14
64017285:	cmp    eax,DWORD PTR [ebp-0x8]
64017288:	jae    0x640172e5
6401728a:	push   ebx
6401728b:	cmp    esi,DWORD PTR [edi]
6401728d:	jl     0x640172d6
6401728f:	cmp    esi,DWORD PTR [edi+0x4]
64017292:	jg     0x640172d6
64017294:	mov    eax,DWORD PTR [edi+0xc]
64017297:	mov    ecx,DWORD PTR [edi+0x10]
6401729a:	shl    eax,0x4
6401729d:	add    eax,ecx
6401729f:	mov    ecx,DWORD PTR [eax-0xc]
640172a2:	test   ecx,ecx
640172a4:	je     0x640172ac
640172a6:	cmp    BYTE PTR [ecx+0x8],0x0
640172aa:	jne    0x640172d6
640172ac:	lea    ebx,[eax-0x10]
640172af:	test   BYTE PTR [ebx],0x40
640172b2:	jne    0x640172d6
640172b4:	push   DWORD PTR [ebp+0x24]
640172b7:	mov    esi,DWORD PTR [ebp+0xc]
640172ba:	push   DWORD PTR [ebp+0x20]
640172bd:	push   0x0
640172bf:	push   DWORD PTR [ebp+0x18]
640172c2:	push   DWORD PTR [ebp+0x14]
640172c5:	push   DWORD PTR [ebp+0x10]
640172c8:	push   DWORD PTR [ebp+0x8]
640172cb:	call   0x6401718b
640172d0:	mov    esi,DWORD PTR [ebp+0x1c]
640172d3:	add    esp,0x1c
640172d6:	inc    DWORD PTR [ebp-0x4]
640172d9:	mov    eax,DWORD PTR [ebp-0x4]
640172dc:	add    edi,0x14
640172df:	cmp    eax,DWORD PTR [ebp-0x8]
640172e2:	jb     0x6401728b
640172e4:	pop    ebx
640172e5:	pop    edi
640172e6:	pop    esi
640172e7:	leave  
640172e8:	ret    
640172e9:	push   ebp
640172ea:	mov    ebp,esp
640172ec:	sub    esp,0x2c
640172ef:	mov    ecx,DWORD PTR [ebp+0xc]
640172f2:	push   ebx
640172f3:	mov    ebx,DWORD PTR [ebp+0x18]
640172f6:	mov    eax,DWORD PTR [ebx+0x4]
640172f9:	cmp    eax,0x80
640172fe:	push   esi
640172ff:	push   edi
64017300:	mov    BYTE PTR [ebp-0x1],0x0
64017304:	jg     0x6401730c
64017306:	movsx  ecx,BYTE PTR [ecx+0x8]
6401730a:	jmp    0x6401730f
6401730c:	mov    ecx,DWORD PTR [ecx+0x8]
6401730f:	cmp    ecx,0xffffffff
64017312:	mov    DWORD PTR [ebp-0x8],ecx
64017315:	jl     0x6401731b
64017317:	cmp    ecx,eax
64017319:	jl     0x64017320
6401731b:	call   0x64017dac
64017320:	mov    esi,DWORD PTR [ebp+0x8]
64017323:	mov    edi,0xe06d7363
64017328:	cmp    DWORD PTR [esi],edi
6401732a:	jne    0x640175fb
64017330:	cmp    DWORD PTR [esi+0x10],0x3
64017334:	mov    ebx,0x19930520
64017339:	jne    0x64017468
6401733f:	mov    eax,DWORD PTR [esi+0x14]
64017342:	cmp    eax,ebx
64017344:	je     0x64017358
64017346:	cmp    eax,0x19930521
6401734b:	je     0x64017358
6401734d:	cmp    eax,0x19930522
64017352:	jne    0x64017468
64017358:	cmp    DWORD PTR [esi+0x1c],0x0
6401735c:	jne    0x64017468
64017362:	call   0x64017a3a
64017367:	cmp    DWORD PTR [eax+0x88],0x0
6401736e:	je     0x6401763a
64017374:	call   0x64017a3a
64017379:	mov    esi,DWORD PTR [eax+0x88]
6401737f:	mov    DWORD PTR [ebp+0x8],esi
64017382:	call   0x64017a3a
64017387:	mov    eax,DWORD PTR [eax+0x8c]
6401738d:	push   0x1
6401738f:	push   esi
64017390:	mov    DWORD PTR [ebp+0x10],eax
64017393:	call   0x6401e753
64017398:	test   eax,eax
6401739a:	pop    ecx
6401739b:	pop    ecx
6401739c:	jne    0x640173a3
6401739e:	call   0x64017dac
640173a3:	cmp    DWORD PTR [esi],edi
640173a5:	jne    0x640173cd
640173a7:	cmp    DWORD PTR [esi+0x10],0x3
640173ab:	jne    0x640173cd
640173ad:	mov    eax,DWORD PTR [esi+0x14]
640173b0:	cmp    eax,ebx
640173b2:	je     0x640173c2
640173b4:	cmp    eax,0x19930521
640173b9:	je     0x640173c2
640173bb:	cmp    eax,0x19930522
640173c0:	jne    0x640173cd
640173c2:	cmp    DWORD PTR [esi+0x1c],0x0
640173c6:	jne    0x640173cd
640173c8:	call   0x64017dac
640173cd:	call   0x64017a3a
640173d2:	cmp    DWORD PTR [eax+0x94],0x0
640173d9:	je     0x64017468
640173df:	call   0x64017a3a
640173e4:	mov    edi,DWORD PTR [eax+0x94]
640173ea:	call   0x64017a3a
640173ef:	push   DWORD PTR [ebp+0x8]
640173f2:	xor    esi,esi
640173f4:	mov    DWORD PTR [eax+0x94],esi
640173fa:	call   0x64016d1d
640173ff:	test   al,al
64017401:	pop    ecx
64017402:	jne    0x64017460
64017404:	xor    ebx,ebx
64017406:	cmp    DWORD PTR [edi],ebx
64017408:	jle    0x64017427
6401740a:	mov    eax,DWORD PTR [edi+0x4]
6401740d:	mov    ecx,DWORD PTR [ebx+eax*1+0x4]
64017411:	push   0x64052454
64017416:	call   0x64013793
6401741b:	test   al,al
6401741d:	jne    0x6401742c
6401741f:	inc    esi
64017420:	add    ebx,0x10
64017423:	cmp    esi,DWORD PTR [edi]
64017425:	jl     0x6401740a
64017427:	jmp    0x64017d60
6401742c:	push   0x1
6401742e:	push   DWORD PTR [ebp+0x8]
64017431:	call   0x64016ca4
64017436:	pop    ecx
64017437:	pop    ecx
64017438:	lea    eax,[ebp+0x8]
6401743b:	push   eax
6401743c:	lea    ecx,[ebp-0x2c]
6401743f:	mov    DWORD PTR [ebp+0x8],0x640408f0
64017446:	call   0x6401366c
6401744b:	push   0x64043d6c
64017450:	lea    eax,[ebp-0x2c]
64017453:	push   eax
64017454:	mov    DWORD PTR [ebp-0x2c],0x640408e8
6401745b:	call   0x64013884
64017460:	mov    esi,DWORD PTR [ebp+0x8]
64017463:	mov    edi,0xe06d7363
64017468:	cmp    DWORD PTR [esi],edi
6401746a:	jne    0x640175f8
64017470:	cmp    DWORD PTR [esi+0x10],0x3
64017474:	jne    0x640175f8
6401747a:	mov    eax,DWORD PTR [esi+0x14]
6401747d:	cmp    eax,ebx
6401747f:	je     0x64017493
64017481:	cmp    eax,0x19930521
64017486:	je     0x64017493
64017488:	cmp    eax,0x19930522
6401748d:	jne    0x640175f8
64017493:	mov    edi,DWORD PTR [ebp+0x18]
64017496:	cmp    DWORD PTR [edi+0xc],0x0
6401749a:	jbe    0x6401755f
640174a0:	lea    eax,[ebp-0x1c]
640174a3:	push   eax
640174a4:	lea    eax,[ebp-0x10]
640174a7:	push   eax
640174a8:	push   DWORD PTR [ebp-0x8]
640174ab:	push   DWORD PTR [ebp+0x20]
640174ae:	push   edi
640174af:	call   0x64013bb2
640174b4:	add    esp,0x14
640174b7:	mov    edi,eax
640174b9:	mov    eax,DWORD PTR [ebp-0x10]
640174bc:	cmp    eax,DWORD PTR [ebp-0x1c]
640174bf:	jae    0x6401755c
640174c5:	mov    eax,DWORD PTR [ebp-0x8]
640174c8:	cmp    DWORD PTR [edi],eax
640174ca:	jg     0x64017551
640174d0:	cmp    eax,DWORD PTR [edi+0x4]
640174d3:	jg     0x64017551
640174d5:	mov    eax,DWORD PTR [edi+0x10]
640174d8:	mov    DWORD PTR [ebp-0xc],eax
640174db:	mov    eax,DWORD PTR [edi+0xc]
640174de:	test   eax,eax
640174e0:	mov    DWORD PTR [ebp-0x18],eax
640174e3:	jle    0x64017551
640174e5:	mov    eax,DWORD PTR [esi+0x1c]
640174e8:	mov    eax,DWORD PTR [eax+0xc]
640174eb:	lea    ebx,[eax+0x4]
640174ee:	mov    eax,DWORD PTR [eax]
640174f0:	test   eax,eax
640174f2:	mov    DWORD PTR [ebp-0x14],eax
640174f5:	jle    0x6401751a
640174f7:	push   DWORD PTR [esi+0x1c]
640174fa:	mov    eax,DWORD PTR [ebx]
640174fc:	push   eax
640174fd:	push   DWORD PTR [ebp-0xc]
64017500:	mov    DWORD PTR [ebp-0x20],eax
64017503:	call   0x64016ade
64017508:	add    esp,0xc
6401750b:	test   eax,eax
6401750d:	jne    0x64017529
6401750f:	dec    DWORD PTR [ebp-0x14]
64017512:	add    ebx,0x4
64017515:	cmp    DWORD PTR [ebp-0x14],eax
64017518:	jg     0x640174f7
6401751a:	dec    DWORD PTR [ebp-0x18]
6401751d:	add    DWORD PTR [ebp-0xc],0x10
64017521:	cmp    DWORD PTR [ebp-0x18],0x0
64017525:	jg     0x640174e5
64017527:	jmp    0x64017551
64017529:	push   DWORD PTR [ebp+0x24]
6401752c:	mov    ebx,DWORD PTR [ebp-0xc]
6401752f:	push   DWORD PTR [ebp+0x20]
64017532:	mov    BYTE PTR [ebp-0x1],0x1
64017536:	push   DWORD PTR [ebp-0x20]
64017539:	push   DWORD PTR [ebp+0x18]
6401753c:	push   DWORD PTR [ebp+0x14]
6401753f:	push   DWORD PTR [ebp+0x10]
64017542:	push   esi
64017543:	mov    esi,DWORD PTR [ebp+0xc]
64017546:	call   0x6401718b
6401754b:	mov    esi,DWORD PTR [ebp+0x8]
6401754e:	add    esp,0x1c
64017551:	inc    DWORD PTR [ebp-0x10]
64017554:	add    edi,0x14
64017557:	jmp    0x640174b9
6401755c:	mov    edi,DWORD PTR [ebp+0x18]
6401755f:	cmp    BYTE PTR [ebp+0x1c],0x0
64017563:	je     0x6401756f
64017565:	push   0x1
64017567:	push   esi
64017568:	call   0x64016ca4
6401756d:	pop    ecx
6401756e:	pop    ecx
6401756f:	cmp    BYTE PTR [ebp-0x1],0x0
64017573:	jne    0x64017627
64017579:	mov    eax,DWORD PTR [edi]
6401757b:	and    eax,0x1fffffff
64017580:	cmp    eax,0x19930521
64017585:	jb     0x64017627
6401758b:	mov    edi,DWORD PTR [edi+0x1c]
6401758e:	test   edi,edi
64017590:	je     0x64017627
64017596:	push   esi
64017597:	call   0x64016d1d
6401759c:	test   al,al
6401759e:	pop    ecx
6401759f:	jne    0x64017627
640175a5:	call   0x64017a3a
640175aa:	call   0x64017a3a
640175af:	call   0x64017a3a
640175b4:	mov    DWORD PTR [eax+0x88],esi
640175ba:	call   0x64017a3a
640175bf:	cmp    DWORD PTR [ebp+0x24],0x0
640175c3:	mov    ecx,DWORD PTR [ebp+0x10]
640175c6:	mov    DWORD PTR [eax+0x8c],ecx
640175cc:	push   esi
640175cd:	jne    0x640175d4
640175cf:	push   DWORD PTR [ebp+0xc]
640175d2:	jmp    0x640175d7
640175d4:	push   DWORD PTR [ebp+0x24]
640175d7:	call   0x64013988
640175dc:	mov    esi,DWORD PTR [ebp+0x18]
640175df:	push   0xffffffff
640175e1:	push   esi
640175e2:	push   DWORD PTR [ebp+0x14]
640175e5:	push   DWORD PTR [ebp+0xc]
640175e8:	call   0x64016b7e
640175ed:	add    esp,0x10
640175f0:	push   DWORD PTR [esi+0x1c]
640175f3:	call   0x64016d96
640175f8:	mov    ebx,DWORD PTR [ebp+0x18]
640175fb:	cmp    DWORD PTR [ebx+0xc],0x0
640175ff:	jbe    0x64017627
64017601:	cmp    BYTE PTR [ebp+0x1c],0x0
64017605:	jne    0x64017427
6401760b:	push   DWORD PTR [ebp+0x24]
6401760e:	push   DWORD PTR [ebp+0x20]
64017611:	push   DWORD PTR [ebp-0x8]
64017614:	push   ebx
64017615:	push   DWORD PTR [ebp+0x14]
64017618:	push   DWORD PTR [ebp+0x10]
6401761b:	push   DWORD PTR [ebp+0xc]
6401761e:	push   esi
6401761f:	call   0x640171f7
64017624:	add    esp,0x20
64017627:	call   0x64017a3a
6401762c:	cmp    DWORD PTR [eax+0x94],0x0
64017633:	je     0x6401763a
64017635:	call   0x64017dac
6401763a:	pop    edi
6401763b:	pop    esi
6401763c:	pop    ebx
6401763d:	leave  
6401763e:	ret    
6401763f:	push   esi
64017640:	push   DWORD PTR [esp+0x8]
64017644:	mov    esi,ecx
64017646:	call   0x640136d2
6401764b:	mov    DWORD PTR [esi],0x640408e8
64017651:	mov    eax,esi
64017653:	pop    esi
64017654:	ret    0x4
64017657:	push   ebp
64017658:	mov    ebp,esp
6401765a:	push   ebx
6401765b:	push   esi
6401765c:	push   edi
6401765d:	call   0x64017a3a
64017662:	cmp    DWORD PTR [eax+0x20c],0x0
64017669:	mov    eax,DWORD PTR [ebp+0x18]
6401766c:	mov    ecx,DWORD PTR [ebp+0x8]
6401766f:	mov    edi,0xe06d7363
64017674:	mov    esi,0x1fffffff
64017679:	mov    ebx,0x19930522
6401767e:	jne    0x640176a0
64017680:	mov    edx,DWORD PTR [ecx]
64017682:	cmp    edx,edi
64017684:	je     0x640176a0
64017686:	cmp    edx,0x80000026
6401768c:	je     0x640176a0
6401768e:	mov    edx,DWORD PTR [eax]
64017690:	and    edx,esi
64017692:	cmp    edx,ebx
64017694:	jb     0x640176a0
64017696:	test   BYTE PTR [eax+0x20],0x1
6401769a:	jne    0x64017733
640176a0:	test   BYTE PTR [ecx+0x4],0x66
640176a4:	je     0x640176c9
640176a6:	cmp    DWORD PTR [eax+0x4],0x0
640176aa:	je     0x64017733
640176b0:	cmp    DWORD PTR [ebp+0x1c],0x0
640176b4:	jne    0x64017733
640176b6:	push   0xffffffff
640176b8:	push   eax
640176b9:	push   DWORD PTR [ebp+0x14]
640176bc:	push   DWORD PTR [ebp+0xc]
640176bf:	call   0x64016b7e
640176c4:	add    esp,0x10
640176c7:	jmp    0x64017733
640176c9:	cmp    DWORD PTR [eax+0xc],0x0
640176cd:	jne    0x640176e1
640176cf:	mov    edx,DWORD PTR [eax]
640176d1:	and    edx,esi
640176d3:	cmp    edx,0x19930521
640176d9:	jb     0x64017733
640176db:	cmp    DWORD PTR [eax+0x1c],0x0
640176df:	je     0x64017733
640176e1:	cmp    DWORD PTR [ecx],edi
640176e3:	jne    0x64017717
640176e5:	cmp    DWORD PTR [ecx+0x10],0x3
640176e9:	jb     0x64017717
640176eb:	cmp    DWORD PTR [ecx+0x14],ebx
640176ee:	jbe    0x64017717
640176f0:	mov    edx,DWORD PTR [ecx+0x1c]
640176f3:	mov    edx,DWORD PTR [edx+0x8]
640176f6:	test   edx,edx
640176f8:	je     0x64017717
640176fa:	movzx  esi,BYTE PTR [ebp+0x24]
640176fe:	push   esi
640176ff:	push   DWORD PTR [ebp+0x20]
64017702:	push   DWORD PTR [ebp+0x1c]
64017705:	push   eax
64017706:	push   DWORD PTR [ebp+0x14]
64017709:	push   DWORD PTR [ebp+0x10]
6401770c:	push   DWORD PTR [ebp+0xc]
6401770f:	push   ecx
64017710:	call   edx
64017712:	add    esp,0x20
64017715:	jmp    0x64017736
64017717:	push   DWORD PTR [ebp+0x20]
6401771a:	push   DWORD PTR [ebp+0x1c]
6401771d:	push   DWORD PTR [ebp+0x24]
64017720:	push   eax
64017721:	push   DWORD PTR [ebp+0x14]
64017724:	push   DWORD PTR [ebp+0x10]
64017727:	push   DWORD PTR [ebp+0xc]
6401772a:	push   ecx
6401772b:	call   0x640172e9
64017730:	add    esp,0x20
64017733:	xor    eax,eax
64017735:	inc    eax
64017736:	pop    edi
64017737:	pop    esi
64017738:	pop    ebx
64017739:	pop    ebp
6401773a:	ret    
6401773b:	push   ebp
6401773c:	mov    ebp,esp
6401773e:	push   ecx
6401773f:	push   ecx
64017740:	push   ebx
64017741:	push   esi
64017742:	xor    esi,esi
64017744:	lea    eax,[ebp-0x4]
64017747:	inc    esi
64017748:	xor    ebx,ebx
6401774a:	push   eax
6401774b:	mov    DWORD PTR [ebp-0x8],esi
6401774e:	mov    DWORD PTR [ebp-0x4],ebx
64017751:	call   0x64018106
64017756:	cmp    DWORD PTR [ebp-0x4],0x5
6401775a:	pop    ecx
6401775b:	jle    0x64017761
6401775d:	mov    eax,esi
6401775f:	jmp    0x640177a3
64017761:	push   edi
64017762:	push   ebx
64017763:	call   DWORD PTR ds:0x6402c0a4
64017769:	mov    esi,DWORD PTR [eax+0x3c]
6401776c:	add    esi,eax
6401776e:	cmp    WORD PTR [esi+0x6],bx
64017772:	movzx  eax,WORD PTR [esi+0x14]
64017776:	lea    edi,[eax+esi*1+0x18]
6401777a:	jbe    0x6401779f
6401777c:	push   edi
6401777d:	push   0x64040900
64017782:	call   0x64016610
64017787:	test   eax,eax
64017789:	pop    ecx
6401778a:	pop    ecx
6401778b:	je     0x6401779b
6401778d:	movzx  eax,WORD PTR [esi+0x6]
64017791:	inc    ebx
64017792:	add    edi,0x28
64017795:	cmp    ebx,eax
64017797:	jb     0x6401777c
64017799:	jmp    0x6401779f
6401779b:	and    DWORD PTR [ebp-0x8],0x0
6401779f:	mov    eax,DWORD PTR [ebp-0x8]
640177a2:	pop    edi
640177a3:	pop    esi
640177a4:	pop    ebx
640177a5:	leave  
640177a6:	ret    
640177a7:	push   esi
640177a8:	push   DWORD PTR ds:0x64052478
640177ae:	mov    esi,DWORD PTR ds:0x6402c1d0
640177b4:	call   esi
640177b6:	test   eax,eax
640177b8:	je     0x640177db
640177ba:	mov    eax,ds:0x64052474
640177bf:	cmp    eax,0xffffffff
640177c2:	je     0x640177db
640177c4:	push   eax
640177c5:	push   DWORD PTR ds:0x64052478
640177cb:	call   esi
640177cd:	call   eax
640177cf:	test   eax,eax
640177d1:	je     0x640177db
640177d3:	mov    eax,DWORD PTR [eax+0x1f8]
640177d9:	jmp    0x64017801
640177db:	push   0x64040918
640177e0:	call   DWORD PTR ds:0x6402c0a4
640177e6:	mov    esi,eax
640177e8:	test   esi,esi
640177ea:	je     0x6401780f
640177ec:	call   0x6401773b
640177f1:	test   eax,eax
640177f3:	je     0x6401780f
640177f5:	push   0x64040908
640177fa:	push   esi
640177fb:	call   DWORD PTR ds:0x6402c0a0
64017801:	test   eax,eax
64017803:	je     0x6401780f
64017805:	push   DWORD PTR [esp+0x8]
64017809:	call   eax
6401780b:	mov    DWORD PTR [esp+0x8],eax
6401780f:	mov    eax,DWORD PTR [esp+0x8]
64017813:	pop    esi
64017814:	ret    
64017815:	push   0x0
64017817:	call   0x640177a7
6401781c:	pop    ecx
6401781d:	ret    
6401781e:	push   esi
6401781f:	push   DWORD PTR ds:0x64052478
64017825:	mov    esi,DWORD PTR ds:0x6402c1d0
6401782b:	call   esi
6401782d:	test   eax,eax
6401782f:	je     0x64017852
64017831:	mov    eax,ds:0x64052474
64017836:	cmp    eax,0xffffffff
64017839:	je     0x64017852
6401783b:	push   eax
6401783c:	push   DWORD PTR ds:0x64052478
64017842:	call   esi
64017844:	call   eax
64017846:	test   eax,eax
64017848:	je     0x64017852
6401784a:	mov    eax,DWORD PTR [eax+0x1fc]
64017850:	jmp    0x64017878
64017852:	push   0x64040918
64017857:	call   DWORD PTR ds:0x6402c0a4
6401785d:	mov    esi,eax
6401785f:	test   esi,esi
64017861:	je     0x64017886
64017863:	call   0x6401773b
64017868:	test   eax,eax
6401786a:	je     0x64017886
6401786c:	push   0x64040928
64017871:	push   esi
64017872:	call   DWORD PTR ds:0x6402c0a0
64017878:	test   eax,eax
6401787a:	je     0x64017886
6401787c:	push   DWORD PTR [esp+0x8]
64017880:	call   eax
64017882:	mov    DWORD PTR [esp+0x8],eax
64017886:	mov    eax,DWORD PTR [esp+0x8]
6401788a:	pop    esi
6401788b:	ret    
6401788c:	call   DWORD PTR ds:0x6402c1d4
64017892:	ret    0x4
64017895:	push   esi
64017896:	push   DWORD PTR ds:0x64052478
6401789c:	call   DWORD PTR ds:0x6402c1d0
640178a2:	mov    esi,eax
640178a4:	test   esi,esi
640178a6:	jne    0x640178c3
640178a8:	push   DWORD PTR ds:0x64053a44
640178ae:	call   0x6401781e
640178b3:	pop    ecx
640178b4:	mov    esi,eax
640178b6:	push   esi
640178b7:	push   DWORD PTR ds:0x64052478
640178bd:	call   DWORD PTR ds:0x6402c1d8
640178c3:	mov    eax,esi
640178c5:	pop    esi
640178c6:	ret    
640178c7:	mov    eax,ds:0x64052474
640178cc:	cmp    eax,0xffffffff
640178cf:	je     0x640178e7
640178d1:	push   eax
640178d2:	push   DWORD PTR ds:0x64053a4c
640178d8:	call   0x6401781e
640178dd:	pop    ecx
640178de:	call   eax
640178e0:	or     DWORD PTR ds:0x64052474,0xffffffff
640178e7:	mov    eax,ds:0x64052478
640178ec:	cmp    eax,0xffffffff
640178ef:	je     0x640178ff
640178f1:	push   eax
640178f2:	call   DWORD PTR ds:0x6402c168
640178f8:	or     DWORD PTR ds:0x64052478,0xffffffff
640178ff:	jmp    0x6401b36d
64017904:	push   0xc
64017906:	push   0x64043da8
6401790b:	call   0x640164d4
64017910:	push   0x64040918
64017915:	call   DWORD PTR ds:0x6402c0a4
6401791b:	mov    DWORD PTR [ebp-0x1c],eax
6401791e:	mov    esi,DWORD PTR [ebp+0x8]
64017921:	mov    DWORD PTR [esi+0x5c],0x640524d0
64017928:	xor    edi,edi
6401792a:	inc    edi
6401792b:	mov    DWORD PTR [esi+0x14],edi
6401792e:	test   eax,eax
64017930:	je     0x64017961
64017932:	call   0x6401773b
64017937:	test   eax,eax
64017939:	je     0x64017961
6401793b:	push   0x64040908
64017940:	push   DWORD PTR [ebp-0x1c]
64017943:	mov    ebx,DWORD PTR ds:0x6402c0a0
64017949:	call   ebx
6401794b:	mov    DWORD PTR [esi+0x1f8],eax
64017951:	push   0x64040928
64017956:	push   DWORD PTR [ebp-0x1c]
64017959:	call   ebx
6401795b:	mov    DWORD PTR [esi+0x1fc],eax
64017961:	mov    DWORD PTR [esi+0x70],edi
64017964:	mov    BYTE PTR [esi+0xc8],0x43
6401796b:	mov    BYTE PTR [esi+0x14b],0x43
64017972:	mov    eax,0x64052558
64017977:	mov    DWORD PTR [esi+0x68],eax
6401797a:	push   eax
6401797b:	call   DWORD PTR ds:0x6402c030
64017981:	push   0xc
64017983:	call   0x6401b49a
64017988:	pop    ecx
64017989:	and    DWORD PTR [ebp-0x4],0x0
6401798d:	mov    eax,DWORD PTR [ebp+0xc]
64017990:	mov    DWORD PTR [esi+0x6c],eax
64017993:	test   eax,eax
64017995:	jne    0x6401799f
64017997:	mov    eax,ds:0x64052b60
6401799c:	mov    DWORD PTR [esi+0x6c],eax
6401799f:	push   DWORD PTR [esi+0x6c]
640179a2:	call   0x64015d44
640179a7:	pop    ecx
640179a8:	mov    DWORD PTR [ebp-0x4],0xfffffffe
640179af:	call   0x640179ba
640179b4:	call   0x64016519
640179b9:	ret    
640179ba:	push   0xc
640179bc:	call   0x6401b3c2
640179c1:	pop    ecx
640179c2:	ret    
640179c3:	push   esi
640179c4:	push   edi
640179c5:	call   DWORD PTR ds:0x6402c06c
640179cb:	push   DWORD PTR ds:0x64052474
640179d1:	mov    edi,eax
640179d3:	call   0x64017895
640179d8:	call   eax
640179da:	mov    esi,eax
640179dc:	test   esi,esi
640179de:	jne    0x64017a2e
640179e0:	push   0x214
640179e5:	push   0x1
640179e7:	call   0x6401632f
640179ec:	mov    esi,eax
640179ee:	test   esi,esi
640179f0:	pop    ecx
640179f1:	pop    ecx
640179f2:	je     0x64017a2e
640179f4:	push   esi
640179f5:	push   DWORD PTR ds:0x64052474
640179fb:	push   DWORD PTR ds:0x64053a48
64017a01:	call   0x6401781e
64017a06:	pop    ecx
64017a07:	call   eax
64017a09:	test   eax,eax
64017a0b:	je     0x64017a25
64017a0d:	push   0x0
64017a0f:	push   esi
64017a10:	call   0x64017904
64017a15:	pop    ecx
64017a16:	pop    ecx
64017a17:	call   DWORD PTR ds:0x6402c0f0
64017a1d:	or     DWORD PTR [esi+0x4],0xffffffff
64017a21:	mov    DWORD PTR [esi],eax
64017a23:	jmp    0x64017a2e
64017a25:	push   esi
64017a26:	call   0x640147cf
64017a2b:	pop    ecx
64017a2c:	xor    esi,esi
64017a2e:	push   edi
64017a2f:	call   DWORD PTR ds:0x6402c074
64017a35:	pop    edi
64017a36:	mov    eax,esi
64017a38:	pop    esi
64017a39:	ret    
64017a3a:	push   esi
64017a3b:	call   0x640179c3
64017a40:	mov    esi,eax
64017a42:	test   esi,esi
64017a44:	jne    0x64017a4e
64017a46:	push   0x10
64017a48:	call   0x64018026
64017a4d:	pop    ecx
64017a4e:	mov    eax,esi
64017a50:	pop    esi
64017a51:	ret    
64017a52:	push   0x8
64017a54:	push   0x64043dc8
64017a59:	call   0x640164d4
64017a5e:	mov    esi,DWORD PTR [ebp+0x8]
64017a61:	test   esi,esi
64017a63:	je     0x64017b53
64017a69:	mov    eax,DWORD PTR [esi+0x24]
64017a6c:	test   eax,eax
64017a6e:	je     0x64017a77
64017a70:	push   eax
64017a71:	call   0x640147cf
64017a76:	pop    ecx
64017a77:	mov    eax,DWORD PTR [esi+0x2c]
64017a7a:	test   eax,eax
64017a7c:	je     0x64017a85
64017a7e:	push   eax
64017a7f:	call   0x640147cf
64017a84:	pop    ecx
64017a85:	mov    eax,DWORD PTR [esi+0x34]
64017a88:	test   eax,eax
64017a8a:	je     0x64017a93
64017a8c:	push   eax
64017a8d:	call   0x640147cf
64017a92:	pop    ecx
64017a93:	mov    eax,DWORD PTR [esi+0x3c]
64017a96:	test   eax,eax
64017a98:	je     0x64017aa1
64017a9a:	push   eax
64017a9b:	call   0x640147cf
64017aa0:	pop    ecx
64017aa1:	mov    eax,DWORD PTR [esi+0x44]
64017aa4:	test   eax,eax
64017aa6:	je     0x64017aaf
64017aa8:	push   eax
64017aa9:	call   0x640147cf
64017aae:	pop    ecx
64017aaf:	mov    eax,DWORD PTR [esi+0x48]
64017ab2:	test   eax,eax
64017ab4:	je     0x64017abd
64017ab6:	push   eax
64017ab7:	call   0x640147cf
64017abc:	pop    ecx
64017abd:	mov    eax,DWORD PTR [esi+0x5c]
64017ac0:	cmp    eax,0x640524d0
64017ac5:	je     0x64017ace
64017ac7:	push   eax
64017ac8:	call   0x640147cf
64017acd:	pop    ecx
64017ace:	push   0xd
64017ad0:	call   0x6401b49a
64017ad5:	pop    ecx
64017ad6:	and    DWORD PTR [ebp-0x4],0x0
64017ada:	mov    edi,DWORD PTR [esi+0x68]
64017add:	test   edi,edi
64017adf:	je     0x64017afb
64017ae1:	push   edi
64017ae2:	call   DWORD PTR ds:0x6402c07c
64017ae8:	test   eax,eax
64017aea:	jne    0x64017afb
64017aec:	cmp    edi,0x64052558
64017af2:	je     0x64017afb
64017af4:	push   edi
64017af5:	call   0x640147cf
64017afa:	pop    ecx
64017afb:	mov    DWORD PTR [ebp-0x4],0xfffffffe
64017b02:	call   0x64017b5e
64017b07:	push   0xc
64017b09:	call   0x6401b49a
64017b0e:	pop    ecx
64017b0f:	mov    DWORD PTR [ebp-0x4],0x1
64017b16:	mov    edi,DWORD PTR [esi+0x6c]
64017b19:	test   edi,edi
64017b1b:	je     0x64017b40
64017b1d:	push   edi
64017b1e:	call   0x64015dca
64017b23:	pop    ecx
64017b24:	cmp    edi,DWORD PTR ds:0x64052b60
64017b2a:	je     0x64017b40
64017b2c:	cmp    edi,0x64052a88
64017b32:	je     0x64017b40
64017b34:	cmp    DWORD PTR [edi],0x0
64017b37:	jne    0x64017b40
64017b39:	push   edi
64017b3a:	call   0x64015c04
64017b3f:	pop    ecx
64017b40:	mov    DWORD PTR [ebp-0x4],0xfffffffe
64017b47:	call   0x64017b6a
64017b4c:	push   esi
64017b4d:	call   0x640147cf
64017b52:	pop    ecx
64017b53:	call   0x64016519
64017b58:	ret    0x4
64017b5b:	mov    esi,DWORD PTR [ebp+0x8]
64017b5e:	push   0xd
64017b60:	call   0x6401b3c2
64017b65:	pop    ecx
64017b66:	ret    
64017b67:	mov    esi,DWORD PTR [ebp+0x8]
64017b6a:	push   0xc
64017b6c:	call   0x6401b3c2
64017b71:	pop    ecx
64017b72:	ret    
64017b73:	cmp    DWORD PTR ds:0x64052474,0xffffffff
64017b7a:	je     0x64017bc8
64017b7c:	push   edi
64017b7d:	mov    edi,DWORD PTR [esp+0x8]
64017b81:	test   edi,edi
64017b83:	jne    0x64017bab
64017b85:	push   esi
64017b86:	push   DWORD PTR ds:0x64052478
64017b8c:	mov    esi,DWORD PTR ds:0x6402c1d0
64017b92:	call   esi
64017b94:	test   eax,eax
64017b96:	je     0x64017baa
64017b98:	push   DWORD PTR ds:0x64052474
64017b9e:	push   DWORD PTR ds:0x64052478
64017ba4:	call   esi
64017ba6:	call   eax
64017ba8:	mov    edi,eax
64017baa:	pop    esi
64017bab:	push   0x0
64017bad:	push   DWORD PTR ds:0x64052474
64017bb3:	push   DWORD PTR ds:0x64053a48
64017bb9:	call   0x6401781e
64017bbe:	pop    ecx
64017bbf:	call   eax
64017bc1:	push   edi
64017bc2:	call   0x64017a52
64017bc7:	pop    edi
64017bc8:	mov    eax,ds:0x64052478
64017bcd:	cmp    eax,0xffffffff
64017bd0:	je     0x64017bdb
64017bd2:	push   0x0
64017bd4:	push   eax
64017bd5:	call   DWORD PTR ds:0x6402c1d8
64017bdb:	ret    
64017bdc:	push   edi
64017bdd:	push   0x64040918
64017be2:	call   DWORD PTR ds:0x6402c0a4
64017be8:	mov    edi,eax
64017bea:	test   edi,edi
64017bec:	jne    0x64017bf7
64017bee:	call   0x640178c7
64017bf3:	xor    eax,eax
64017bf5:	pop    edi
64017bf6:	ret    
64017bf7:	push   esi
64017bf8:	mov    esi,DWORD PTR ds:0x6402c0a0
64017bfe:	push   0x64040958
64017c03:	push   edi
64017c04:	call   esi
64017c06:	push   0x6404094c
64017c0b:	push   edi
64017c0c:	mov    ds:0x64053a40,eax
64017c11:	call   esi
64017c13:	push   0x64040940
64017c18:	push   edi
64017c19:	mov    ds:0x64053a44,eax
64017c1e:	call   esi
64017c20:	push   0x64040938
64017c25:	push   edi
64017c26:	mov    ds:0x64053a48,eax
64017c2b:	call   esi
64017c2d:	cmp    DWORD PTR ds:0x64053a40,0x0
64017c34:	mov    esi,DWORD PTR ds:0x6402c1d8
64017c3a:	mov    ds:0x64053a4c,eax
64017c3f:	je     0x64017c57
64017c41:	cmp    DWORD PTR ds:0x64053a44,0x0
64017c48:	je     0x64017c57
64017c4a:	cmp    DWORD PTR ds:0x64053a48,0x0
64017c51:	je     0x64017c57
64017c53:	test   eax,eax
64017c55:	jne    0x64017c7b
64017c57:	mov    eax,ds:0x6402c1d0
64017c5c:	mov    ds:0x64053a44,eax
64017c61:	mov    eax,ds:0x6402c168
64017c66:	mov    DWORD PTR ds:0x64053a40,0x6401788c
64017c70:	mov    DWORD PTR ds:0x64053a48,esi
64017c76:	mov    ds:0x64053a4c,eax
64017c7b:	call   DWORD PTR ds:0x6402c1d4
64017c81:	cmp    eax,0xffffffff
64017c84:	mov    ds:0x64052478,eax
64017c89:	je     0x64017d5b
64017c8f:	push   DWORD PTR ds:0x64053a44
64017c95:	push   eax
64017c96:	call   esi
64017c98:	test   eax,eax
64017c9a:	je     0x64017d5b
64017ca0:	call   0x640182d6
64017ca5:	push   DWORD PTR ds:0x64053a40
64017cab:	call   0x640177a7
64017cb0:	push   DWORD PTR ds:0x64053a44
64017cb6:	mov    ds:0x64053a40,eax
64017cbb:	call   0x640177a7
64017cc0:	push   DWORD PTR ds:0x64053a48
64017cc6:	mov    ds:0x64053a44,eax
64017ccb:	call   0x640177a7
64017cd0:	push   DWORD PTR ds:0x64053a4c
64017cd6:	mov    ds:0x64053a48,eax
64017cdb:	call   0x640177a7
64017ce0:	add    esp,0x10
64017ce3:	mov    ds:0x64053a4c,eax
64017ce8:	call   0x6401b324
64017ced:	test   eax,eax
64017cef:	je     0x64017d56
64017cf1:	push   0x64017a52
64017cf6:	push   DWORD PTR ds:0x64053a40
64017cfc:	call   0x6401781e
64017d01:	pop    ecx
64017d02:	call   eax
64017d04:	cmp    eax,0xffffffff
64017d07:	mov    ds:0x64052474,eax
64017d0c:	je     0x64017d56
64017d0e:	push   0x214
64017d13:	push   0x1
64017d15:	call   0x6401632f
64017d1a:	mov    esi,eax
64017d1c:	test   esi,esi
64017d1e:	pop    ecx
64017d1f:	pop    ecx
64017d20:	je     0x64017d56
64017d22:	push   esi
64017d23:	push   DWORD PTR ds:0x64052474
64017d29:	push   DWORD PTR ds:0x64053a48
64017d2f:	call   0x6401781e
64017d34:	pop    ecx
64017d35:	call   eax
64017d37:	test   eax,eax
64017d39:	je     0x64017d56
64017d3b:	push   0x0
64017d3d:	push   esi
64017d3e:	call   0x64017904
64017d43:	pop    ecx
64017d44:	pop    ecx
64017d45:	call   DWORD PTR ds:0x6402c0f0
64017d4b:	or     DWORD PTR [esi+0x4],0xffffffff
64017d4f:	mov    DWORD PTR [esi],eax
64017d51:	xor    eax,eax
64017d53:	inc    eax
64017d54:	jmp    0x64017d5d
64017d56:	call   0x640178c7
64017d5b:	xor    eax,eax
64017d5d:	pop    esi
64017d5e:	pop    edi
64017d5f:	ret    
64017d60:	push   0x8
64017d62:	push   0x64043df0
64017d67:	call   0x640164d4
64017d6c:	call   0x64017a3a
64017d71:	mov    eax,DWORD PTR [eax+0x78]
64017d74:	test   eax,eax
64017d76:	je     0x64017d8e
64017d78:	and    DWORD PTR [ebp-0x4],0x0
64017d7c:	call   eax
64017d7e:	jmp    0x64017d87
64017d80:	xor    eax,eax
64017d82:	inc    eax
64017d83:	ret    
64017d84:	mov    esp,DWORD PTR [ebp-0x18]
64017d87:	mov    DWORD PTR [ebp-0x4],0xfffffffe
64017d8e:	call   0x640163c2
64017d93:	call   0x64016519
64017d98:	ret    
64017d99:	call   0x64017a3a
64017d9e:	mov    eax,DWORD PTR [eax+0x7c]
64017da1:	test   eax,eax
64017da3:	je     0x64017da7
64017da5:	call   eax
64017da7:	jmp    0x64017d60
64017dac:	push   0x8
64017dae:	push   0x64043e10
64017db3:	call   0x640164d4
64017db8:	push   DWORD PTR ds:0x64053a50
64017dbe:	call   0x6401781e
64017dc3:	pop    ecx
64017dc4:	test   eax,eax
64017dc6:	je     0x64017dde
64017dc8:	and    DWORD PTR [ebp-0x4],0x0
64017dcc:	call   eax
64017dce:	jmp    0x64017dd7
64017dd0:	xor    eax,eax
64017dd2:	inc    eax
64017dd3:	ret    
64017dd4:	mov    esp,DWORD PTR [ebp-0x18]
64017dd7:	mov    DWORD PTR [ebp-0x4],0xfffffffe
64017dde:	jmp    0x64017d60
64017de3:	push   0x64017d60
64017de8:	call   0x640177a7
64017ded:	pop    ecx
64017dee:	mov    ds:0x64053a50,eax
64017df3:	ret    
64017df4:	int3   
64017df5:	int3   
64017df6:	int3   
64017df7:	int3   
64017df8:	int3   
64017df9:	int3   
64017dfa:	int3   
64017dfb:	int3   
64017dfc:	int3   
64017dfd:	int3   
64017dfe:	int3   
64017dff:	int3   
64017e00:	push   ebp
64017e01:	mov    ebp,esp
64017e03:	sub    esp,0x4
64017e06:	push   ebx
64017e07:	push   ecx
64017e08:	mov    eax,DWORD PTR [ebp+0xc]
64017e0b:	add    eax,0xc
64017e0e:	mov    DWORD PTR [ebp-0x4],eax
64017e11:	mov    eax,DWORD PTR [ebp+0x8]
64017e14:	push   ebp
64017e15:	push   DWORD PTR [ebp+0x10]
64017e18:	mov    ecx,DWORD PTR [ebp+0x10]
64017e1b:	mov    ebp,DWORD PTR [ebp-0x4]
64017e1e:	call   0x6401e86c
64017e23:	push   esi
64017e24:	push   edi
64017e25:	call   eax
64017e27:	pop    edi
64017e28:	pop    esi
64017e29:	mov    ebx,ebp
64017e2b:	pop    ebp
64017e2c:	mov    ecx,DWORD PTR [ebp+0x10]
64017e2f:	push   ebp
64017e30:	mov    ebp,ebx
64017e32:	cmp    ecx,0x100
64017e38:	jne    0x64017e3f
64017e3a:	mov    ecx,0x2
64017e3f:	push   ecx
64017e40:	call   0x6401e86c
64017e45:	pop    ebp
64017e46:	pop    ecx
64017e47:	pop    ebx
64017e48:	leave  
64017e49:	ret    0xc
64017e4c:	push   ebp
64017e4d:	mov    ebp,esp
64017e4f:	sub    esp,0x328
64017e55:	mov    ds:0x64053b60,eax
64017e5a:	mov    DWORD PTR ds:0x64053b5c,ecx
64017e60:	mov    DWORD PTR ds:0x64053b58,edx
64017e66:	mov    DWORD PTR ds:0x64053b54,ebx
64017e6c:	mov    DWORD PTR ds:0x64053b50,esi
64017e72:	mov    DWORD PTR ds:0x64053b4c,edi
64017e78:	data16 mov WORD PTR ds:0x64053b78,ss
64017e7f:	data16 mov WORD PTR ds:0x64053b6c,cs
64017e86:	data16 mov WORD PTR ds:0x64053b48,ds
64017e8d:	data16 mov WORD PTR ds:0x64053b44,es
64017e94:	data16 mov WORD PTR ds:0x64053b40,fs
64017e9b:	data16 mov WORD PTR ds:0x64053b3c,gs
64017ea2:	pushf  
64017ea3:	pop    DWORD PTR ds:0x64053b70
64017ea9:	mov    eax,DWORD PTR [ebp+0x0]
64017eac:	mov    ds:0x64053b64,eax
64017eb1:	mov    eax,DWORD PTR [ebp+0x4]
64017eb4:	mov    ds:0x64053b68,eax
64017eb9:	lea    eax,[ebp+0x8]
64017ebc:	mov    ds:0x64053b74,eax
64017ec1:	mov    eax,DWORD PTR [ebp-0x320]
64017ec7:	mov    DWORD PTR ds:0x64053ab0,0x10001
64017ed1:	mov    eax,ds:0x64053b68
64017ed6:	mov    ds:0x64053a64,eax
64017edb:	mov    DWORD PTR ds:0x64053a58,0xc0000409
64017ee5:	mov    DWORD PTR ds:0x64053a5c,0x1
64017eef:	mov    eax,ds:0x640521ac
64017ef4:	mov    DWORD PTR [ebp-0x328],eax
64017efa:	mov    eax,ds:0x640521b0
64017eff:	mov    DWORD PTR [ebp-0x324],eax
64017f05:	call   DWORD PTR ds:0x6402c1b4
64017f0b:	mov    ds:0x64053aa8,eax
64017f10:	push   0x1
64017f12:	call   0x64017f7b
64017f17:	pop    ecx
64017f18:	push   0x0
64017f1a:	call   DWORD PTR ds:0x6402c1b0
64017f20:	push   0x64040964
64017f25:	call   DWORD PTR ds:0x6402c1ac
64017f2b:	cmp    DWORD PTR ds:0x64053aa8,0x0
64017f32:	jne    0x64017f3c
64017f34:	push   0x1
64017f36:	call   0x64017f7b
64017f3b:	pop    ecx
64017f3c:	push   0xc0000409
64017f41:	call   DWORD PTR ds:0x6402c040
64017f47:	push   eax
64017f48:	call   DWORD PTR ds:0x6402c0d4
64017f4e:	leave  
64017f4f:	ret    
64017f50:	push   ecx
64017f51:	lea    ecx,[esp+0x4]
64017f55:	sub    ecx,eax
64017f57:	sbb    eax,eax
64017f59:	not    eax
64017f5b:	and    ecx,eax
64017f5d:	mov    eax,esp
64017f5f:	and    eax,0xfffff000
64017f64:	cmp    ecx,eax
64017f66:	jb     0x64017f72
64017f68:	mov    eax,ecx
64017f6a:	pop    ecx
64017f6b:	xchg   esp,eax
64017f6c:	mov    eax,DWORD PTR [eax]
64017f6e:	mov    DWORD PTR [esp],eax
64017f71:	ret    
64017f72:	sub    eax,0x1000
64017f77:	test   DWORD PTR [eax],eax
64017f79:	jmp    0x64017f64
64017f7b:	and    DWORD PTR ds:0x640557f4,0x0
64017f82:	ret    
64017f83:	push   0x10
64017f85:	push   0x64043e30
64017f8a:	call   0x640164d4
64017f8f:	xor    eax,eax
64017f91:	mov    ebx,DWORD PTR [ebp+0x8]
64017f94:	xor    edi,edi
64017f96:	cmp    ebx,edi
64017f98:	setne  al
64017f9b:	cmp    eax,edi
64017f9d:	jne    0x64017fbc
64017f9f:	call   0x640166d3
64017fa4:	mov    DWORD PTR [eax],0x16
64017faa:	push   edi
64017fab:	push   edi
64017fac:	push   edi
64017fad:	push   edi
64017fae:	push   edi
64017faf:	call   0x64013e62
64017fb4:	add    esp,0x14
64017fb7:	or     eax,0xffffffff
64017fba:	jmp    0x6401800f
64017fbc:	cmp    DWORD PTR ds:0x640556c4,0x3
64017fc3:	jne    0x64017ffd
64017fc5:	push   0x4
64017fc7:	call   0x6401b49a
64017fcc:	pop    ecx
64017fcd:	mov    DWORD PTR [ebp-0x4],edi
64017fd0:	push   ebx
64017fd1:	call   0x6401b513
64017fd6:	pop    ecx
64017fd7:	mov    DWORD PTR [ebp-0x20],eax
64017fda:	cmp    eax,edi
64017fdc:	je     0x64017fe9
64017fde:	mov    esi,DWORD PTR [ebx-0x4]
64017fe1:	sub    esi,0x9
64017fe4:	mov    DWORD PTR [ebp-0x1c],esi
64017fe7:	jmp    0x64017fec
64017fe9:	mov    esi,DWORD PTR [ebp-0x1c]
64017fec:	mov    DWORD PTR [ebp-0x4],0xfffffffe
64017ff3:	call   0x6401801d
64017ff8:	cmp    DWORD PTR [ebp-0x20],edi
64017ffb:	jne    0x6401800d
64017ffd:	push   ebx
64017ffe:	push   edi
64017fff:	push   DWORD PTR ds:0x64053ed4
64018005:	call   DWORD PTR ds:0x6402c1a0
6401800b:	mov    esi,eax
6401800d:	mov    eax,esi
6401800f:	call   0x64016519
64018014:	ret    
64018015:	xor    edi,edi
64018017:	mov    ebx,DWORD PTR [ebp+0x8]
6401801a:	mov    esi,DWORD PTR [ebp-0x1c]
6401801d:	push   0x4
6401801f:	call   0x6401b3c2
64018024:	pop    ecx
64018025:	ret    
64018026:	call   0x6401c19d
6401802b:	push   DWORD PTR [esp+0x4]
6401802f:	call   0x6401bffd
64018034:	push   DWORD PTR ds:0x64052480
6401803a:	call   0x6401781e
6401803f:	push   0xff
64018044:	call   eax
64018046:	add    esp,0xc
64018049:	ret    
6401804a:	push   0x6404097c
6401804f:	call   DWORD PTR ds:0x6402c0a4
64018055:	test   eax,eax
64018057:	je     0x6401806f
64018059:	push   0x6404096c
6401805e:	push   eax
6401805f:	call   DWORD PTR ds:0x6402c0a0
64018065:	test   eax,eax
64018067:	je     0x6401806f
64018069:	push   DWORD PTR [esp+0x4]
6401806d:	call   eax
6401806f:	ret    
64018070:	push   DWORD PTR [esp+0x4]
64018074:	call   0x6401804a
64018079:	pop    ecx
6401807a:	push   DWORD PTR [esp+0x4]
6401807e:	call   DWORD PTR ds:0x6402c038
64018084:	int3   
64018085:	push   0x8
64018087:	call   0x6401b49a
6401808c:	pop    ecx
6401808d:	ret    
6401808e:	push   0x8
64018090:	call   0x6401b3c2
64018095:	pop    ecx
64018096:	ret    
64018097:	push   esi
64018098:	mov    esi,eax
6401809a:	jmp    0x640180a7
6401809c:	mov    eax,DWORD PTR [esi]
6401809e:	test   eax,eax
640180a0:	je     0x640180a4
640180a2:	call   eax
640180a4:	add    esi,0x4
640180a7:	cmp    esi,DWORD PTR [esp+0x8]
640180ab:	jb     0x6401809c
640180ad:	pop    esi
640180ae:	ret    
640180af:	push   esi
640180b0:	mov    esi,DWORD PTR [esp+0x8]
640180b4:	xor    eax,eax
640180b6:	jmp    0x640180c7
640180b8:	test   eax,eax
640180ba:	jne    0x640180cd
640180bc:	mov    ecx,DWORD PTR [esi]
640180be:	test   ecx,ecx
640180c0:	je     0x640180c4
640180c2:	call   ecx
640180c4:	add    esi,0x4
640180c7:	cmp    esi,DWORD PTR [esp+0xc]
640180cb:	jb     0x640180b8
640180cd:	pop    esi
640180ce:	ret    
640180cf:	mov    ecx,DWORD PTR [esp+0x4]
640180d3:	push   esi
640180d4:	xor    esi,esi
640180d6:	cmp    ecx,esi
640180d8:	jne    0x640180f7
640180da:	call   0x640166d3
640180df:	push   esi
640180e0:	push   esi
640180e1:	push   esi
640180e2:	push   esi
640180e3:	push   esi
640180e4:	mov    DWORD PTR [eax],0x16
640180ea:	call   0x64013e62
640180ef:	add    esp,0x14
640180f2:	push   0x16
640180f4:	pop    eax
640180f5:	pop    esi
640180f6:	ret    
640180f7:	mov    eax,ds:0x64053d80
640180fc:	cmp    eax,esi
640180fe:	je     0x640180da
64018100:	mov    DWORD PTR [ecx],eax
64018102:	xor    eax,eax
64018104:	pop    esi
64018105:	ret    
64018106:	mov    eax,DWORD PTR [esp+0x4]
6401810a:	push   esi
6401810b:	xor    esi,esi
6401810d:	cmp    eax,esi
6401810f:	jne    0x6401812e
64018111:	call   0x640166d3
64018116:	push   esi
64018117:	push   esi
64018118:	push   esi
64018119:	push   esi
6401811a:	push   esi
6401811b:	mov    DWORD PTR [eax],0x16
64018121:	call   0x64013e62
64018126:	add    esp,0x14
64018129:	push   0x16
6401812b:	pop    eax
6401812c:	pop    esi
6401812d:	ret    
6401812e:	cmp    DWORD PTR ds:0x64053d80,esi
64018134:	je     0x64018111
64018136:	mov    ecx,DWORD PTR ds:0x64053d8c
6401813c:	mov    DWORD PTR [eax],ecx
6401813e:	xor    eax,eax
64018140:	pop    esi
64018141:	ret    
64018142:	cmp    DWORD PTR ds:0x64040fe4,0x0
64018149:	je     0x64018165
6401814b:	push   0x64040fe4
64018150:	call   0x6401dc80
64018155:	test   eax,eax
64018157:	pop    ecx
64018158:	je     0x64018165
6401815a:	push   DWORD PTR [esp+0x4]
6401815e:	call   DWORD PTR ds:0x64040fe4
64018164:	pop    ecx
64018165:	call   0x6401e897
6401816a:	push   0x6402c26c
6401816f:	push   0x6402c254
64018174:	call   0x640180af
64018179:	test   eax,eax
6401817b:	pop    ecx
6401817c:	pop    ecx
6401817d:	jne    0x640181d3
6401817f:	push   esi
64018180:	push   edi
64018181:	push   0x64018a47
64018186:	call   0x64013fba
6401818b:	mov    esi,0x6402c208
64018190:	mov    eax,esi
64018192:	mov    edi,0x6402c250
64018197:	cmp    eax,edi
64018199:	pop    ecx
6401819a:	jae    0x640181ab
6401819c:	mov    eax,DWORD PTR [esi]
6401819e:	test   eax,eax
640181a0:	je     0x640181a4
640181a2:	call   eax
640181a4:	add    esi,0x4
640181a7:	cmp    esi,edi
640181a9:	jb     0x6401819c
640181ab:	cmp    DWORD PTR ds:0x640557f0,0x0
640181b2:	pop    edi
640181b3:	pop    esi
640181b4:	je     0x640181d1
640181b6:	push   0x640557f0
640181bb:	call   0x6401dc80
640181c0:	test   eax,eax
640181c2:	pop    ecx
640181c3:	je     0x640181d1
640181c5:	push   0x0
640181c7:	push   0x2
640181c9:	push   0x0
640181cb:	call   DWORD PTR ds:0x640557f0
640181d1:	xor    eax,eax
640181d3:	ret    
640181d4:	push   0x10
640181d6:	push   0x64043e50
640181db:	call   0x640164d4
640181e0:	push   0x8
640181e2:	call   0x6401b49a
640181e7:	pop    ecx
640181e8:	xor    edi,edi
640181ea:	mov    DWORD PTR [ebp-0x4],edi
640181ed:	xor    ebx,ebx
640181ef:	inc    ebx
640181f0:	cmp    DWORD PTR ds:0x64053dc0,ebx
640181f6:	je     0x64018276
640181f8:	mov    DWORD PTR ds:0x64053dbc,ebx
640181fe:	mov    al,BYTE PTR [ebp+0x10]
64018201:	mov    ds:0x64053db8,al
64018206:	cmp    DWORD PTR [ebp+0xc],edi
64018209:	jne    0x64018266
6401820b:	push   DWORD PTR ds:0x640557e8
64018211:	call   0x6401781e
64018216:	mov    DWORD PTR [ebp-0x1c],eax
64018219:	push   DWORD PTR ds:0x640557e4
6401821f:	call   0x6401781e
64018224:	pop    ecx
64018225:	pop    ecx
64018226:	mov    esi,eax
64018228:	mov    DWORD PTR [ebp-0x20],esi
6401822b:	cmp    DWORD PTR [ebp-0x1c],edi
6401822e:	je     0x64018256
64018230:	sub    esi,0x4
64018233:	mov    DWORD PTR [ebp-0x20],esi
64018236:	cmp    esi,DWORD PTR [ebp-0x1c]
64018239:	jb     0x64018256
6401823b:	cmp    DWORD PTR [esi],0x0
6401823e:	je     0x64018230
64018240:	mov    edi,DWORD PTR [esi]
64018242:	call   0x64017815
64018247:	cmp    edi,eax
64018249:	je     0x64018230
6401824b:	push   edi
6401824c:	call   0x6401781e
64018251:	pop    ecx
64018252:	call   eax
64018254:	jmp    0x64018230
64018256:	push   0x6402c27c
6401825b:	mov    eax,0x6402c270
64018260:	call   0x64018097
64018265:	pop    ecx
64018266:	push   0x6402c284
6401826b:	mov    eax,0x6402c280
64018270:	call   0x64018097
64018275:	pop    ecx
64018276:	mov    DWORD PTR [ebp-0x4],0xfffffffe
6401827d:	call   0x640182a1
64018282:	cmp    DWORD PTR [ebp+0x10],0x0
64018286:	jne    0x640182b0
64018288:	mov    DWORD PTR ds:0x64053dc0,ebx
6401828e:	push   0x8
64018290:	call   0x6401b3c2
64018295:	pop    ecx
64018296:	push   DWORD PTR [ebp+0x8]
64018299:	call   0x64018070
6401829e:	xor    ebx,ebx
640182a0:	inc    ebx
640182a1:	cmp    DWORD PTR [ebp+0x10],0x0
640182a5:	je     0x640182af
640182a7:	push   0x8
640182a9:	call   0x6401b3c2
640182ae:	pop    ecx
640182af:	ret    
640182b0:	call   0x64016519
640182b5:	ret    
640182b6:	push   0x0
640182b8:	push   0x1
640182ba:	push   DWORD PTR [esp+0xc]
640182be:	call   0x640181d4
640182c3:	add    esp,0xc
640182c6:	ret    
640182c7:	push   0x1
640182c9:	push   0x0
640182cb:	push   0x0
640182cd:	call   0x640181d4
640182d2:	add    esp,0xc
640182d5:	ret    
640182d6:	push   esi
640182d7:	call   0x64017815
640182dc:	mov    esi,eax
640182de:	push   esi
640182df:	call   0x64016a85
640182e4:	push   esi
640182e5:	call   0x6401e8c0
640182ea:	push   esi
640182eb:	call   0x64013d5c
640182f0:	push   esi
640182f1:	call   0x6401d922
640182f6:	push   esi
640182f7:	call   0x6401e8b6
640182fc:	push   esi
640182fd:	call   0x6401e549
64018302:	push   esi
64018303:	call   0x6401c305
64018308:	push   esi
64018309:	call   0x64017de3
6401830e:	push   0x640182b6
64018313:	call   0x640177a7
64018318:	add    esp,0x24
6401831b:	mov    ds:0x64052480,eax
64018320:	pop    esi
64018321:	ret    
64018322:	push   0x54
64018324:	push   0x64043e70
64018329:	call   0x640164d4
6401832e:	xor    edi,edi
64018330:	mov    DWORD PTR [ebp-0x4],edi
64018333:	lea    eax,[ebp-0x64]
64018336:	push   eax
64018337:	call   DWORD PTR ds:0x6402c130
6401833d:	mov    DWORD PTR [ebp-0x4],0xfffffffe
64018344:	push   0x40
64018346:	push   0x20
64018348:	pop    esi
64018349:	push   esi
6401834a:	call   0x6401632f
6401834f:	pop    ecx
64018350:	pop    ecx
64018351:	cmp    eax,edi
64018353:	je     0x6401856d
64018359:	mov    ds:0x640556e0,eax
6401835e:	mov    DWORD PTR ds:0x640556c8,esi
64018364:	lea    ecx,[eax+0x800]
6401836a:	jmp    0x6401839c
6401836c:	mov    BYTE PTR [eax+0x4],0x0
64018370:	or     DWORD PTR [eax],0xffffffff
64018373:	mov    BYTE PTR [eax+0x5],0xa
64018377:	mov    DWORD PTR [eax+0x8],edi
6401837a:	mov    BYTE PTR [eax+0x24],0x0
6401837e:	mov    BYTE PTR [eax+0x25],0xa
64018382:	mov    BYTE PTR [eax+0x26],0xa
64018386:	mov    DWORD PTR [eax+0x38],edi
64018389:	mov    BYTE PTR [eax+0x34],0x0
6401838d:	add    eax,0x40
64018390:	mov    ecx,DWORD PTR ds:0x640556e0
64018396:	add    ecx,0x800
6401839c:	cmp    eax,ecx
6401839e:	jb     0x6401836c
640183a0:	cmp    WORD PTR [ebp-0x32],di
640183a4:	je     0x640184b4
640183aa:	mov    eax,DWORD PTR [ebp-0x30]
640183ad:	cmp    eax,edi
640183af:	je     0x640184b4
640183b5:	mov    edi,DWORD PTR [eax]
640183b7:	lea    ebx,[eax+0x4]
640183ba:	lea    eax,[ebx+edi*1]
640183bd:	mov    DWORD PTR [ebp-0x1c],eax
640183c0:	mov    esi,0x800
640183c5:	cmp    edi,esi
640183c7:	jl     0x640183cb
640183c9:	mov    edi,esi
640183cb:	mov    DWORD PTR [ebp-0x20],0x1
640183d2:	jmp    0x6401842f
640183d4:	push   0x40
640183d6:	push   0x20
640183d8:	call   0x6401632f
640183dd:	pop    ecx
640183de:	pop    ecx
640183df:	test   eax,eax
640183e1:	je     0x64018439
640183e3:	mov    ecx,DWORD PTR [ebp-0x20]
640183e6:	lea    ecx,[ecx*4+0x640556e0]
640183ed:	mov    DWORD PTR [ecx],eax
640183ef:	add    DWORD PTR ds:0x640556c8,0x20
640183f6:	lea    edx,[eax+0x800]
640183fc:	jmp    0x64018428
640183fe:	mov    BYTE PTR [eax+0x4],0x0
64018402:	or     DWORD PTR [eax],0xffffffff
64018405:	mov    BYTE PTR [eax+0x5],0xa
64018409:	and    DWORD PTR [eax+0x8],0x0
6401840d:	and    BYTE PTR [eax+0x24],0x80
64018411:	mov    BYTE PTR [eax+0x25],0xa
64018415:	mov    BYTE PTR [eax+0x26],0xa
64018419:	and    DWORD PTR [eax+0x38],0x0
6401841d:	mov    BYTE PTR [eax+0x34],0x0
64018421:	add    eax,0x40
64018424:	mov    edx,DWORD PTR [ecx]
64018426:	add    edx,esi
64018428:	cmp    eax,edx
6401842a:	jb     0x640183fe
6401842c:	inc    DWORD PTR [ebp-0x20]
6401842f:	cmp    DWORD PTR ds:0x640556c8,edi
64018435:	jl     0x640183d4
64018437:	jmp    0x6401843f
64018439:	mov    edi,DWORD PTR ds:0x640556c8
6401843f:	and    DWORD PTR [ebp-0x20],0x0
64018443:	test   edi,edi
64018445:	jle    0x640184b4
64018447:	mov    eax,DWORD PTR [ebp-0x1c]
6401844a:	mov    ecx,DWORD PTR [eax]
6401844c:	cmp    ecx,0xffffffff
6401844f:	je     0x640184a7
64018451:	cmp    ecx,0xfffffffe
64018454:	je     0x640184a7
64018456:	mov    al,BYTE PTR [ebx]
64018458:	test   al,0x1
6401845a:	je     0x640184a7
6401845c:	test   al,0x8
6401845e:	jne    0x6401846b
64018460:	push   ecx
64018461:	call   DWORD PTR ds:0x6402c12c
64018467:	test   eax,eax
64018469:	je     0x640184a7
6401846b:	mov    esi,DWORD PTR [ebp-0x20]
6401846e:	mov    eax,esi
64018470:	sar    eax,0x5
64018473:	and    esi,0x1f
64018476:	shl    esi,0x6
64018479:	add    esi,DWORD PTR [eax*4+0x640556e0]
64018480:	mov    eax,DWORD PTR [ebp-0x1c]
64018483:	mov    eax,DWORD PTR [eax]
64018485:	mov    DWORD PTR [esi],eax
64018487:	mov    al,BYTE PTR [ebx]
64018489:	mov    BYTE PTR [esi+0x4],al
6401848c:	push   0xfa0
64018491:	lea    eax,[esi+0xc]
64018494:	push   eax
64018495:	call   0x6401e8da
6401849a:	pop    ecx
6401849b:	pop    ecx
6401849c:	test   eax,eax
6401849e:	je     0x6401856d
640184a4:	inc    DWORD PTR [esi+0x8]
640184a7:	inc    DWORD PTR [ebp-0x20]
640184aa:	inc    ebx
640184ab:	add    DWORD PTR [ebp-0x1c],0x4
640184af:	cmp    DWORD PTR [ebp-0x20],edi
640184b2:	jl     0x64018447
640184b4:	xor    ebx,ebx
640184b6:	mov    esi,ebx
640184b8:	shl    esi,0x6
640184bb:	add    esi,DWORD PTR ds:0x640556e0
640184c1:	mov    eax,DWORD PTR [esi]
640184c3:	cmp    eax,0xffffffff
640184c6:	je     0x640184d3
640184c8:	cmp    eax,0xfffffffe
640184cb:	je     0x640184d3
640184cd:	or     BYTE PTR [esi+0x4],0x80
640184d1:	jmp    0x64018545
640184d3:	mov    BYTE PTR [esi+0x4],0x81
640184d7:	test   ebx,ebx
640184d9:	jne    0x640184e0
640184db:	push   0xfffffff6
640184dd:	pop    eax
640184de:	jmp    0x640184ea
640184e0:	mov    eax,ebx
640184e2:	dec    eax
640184e3:	neg    eax
640184e5:	sbb    eax,eax
640184e7:	add    eax,0xfffffff5
640184ea:	push   eax
640184eb:	call   DWORD PTR ds:0x6402c110
640184f1:	mov    edi,eax
640184f3:	cmp    edi,0xffffffff
640184f6:	je     0x6401853b
640184f8:	test   edi,edi
640184fa:	je     0x6401853b
640184fc:	push   edi
640184fd:	call   DWORD PTR ds:0x6402c12c
64018503:	test   eax,eax
64018505:	je     0x6401853b
64018507:	mov    DWORD PTR [esi],edi
64018509:	and    eax,0xff
6401850e:	cmp    eax,0x2
64018511:	jne    0x64018519
64018513:	or     BYTE PTR [esi+0x4],0x40
64018517:	jmp    0x64018522
64018519:	cmp    eax,0x3
6401851c:	jne    0x64018522
6401851e:	or     BYTE PTR [esi+0x4],0x8
64018522:	push   0xfa0
64018527:	lea    eax,[esi+0xc]
6401852a:	push   eax
6401852b:	call   0x6401e8da
64018530:	pop    ecx
64018531:	pop    ecx
64018532:	test   eax,eax
64018534:	je     0x6401856d
64018536:	inc    DWORD PTR [esi+0x8]
64018539:	jmp    0x64018545
6401853b:	or     BYTE PTR [esi+0x4],0x40
6401853f:	mov    DWORD PTR [esi],0xfffffffe
64018545:	inc    ebx
64018546:	cmp    ebx,0x3
64018549:	jl     0x640184b6
6401854f:	push   DWORD PTR ds:0x640556c8
64018555:	call   DWORD PTR ds:0x6402c164
6401855b:	xor    eax,eax
6401855d:	jmp    0x64018570
6401855f:	xor    eax,eax
64018561:	inc    eax
64018562:	ret    
64018563:	mov    esp,DWORD PTR [ebp-0x18]
64018566:	mov    DWORD PTR [ebp-0x4],0xfffffffe
6401856d:	or     eax,0xffffffff
64018570:	call   0x64016519
64018575:	ret    
64018576:	push   esi
64018577:	push   edi
64018578:	mov    esi,0x640556e0
6401857d:	mov    edi,DWORD PTR [esi]
6401857f:	test   edi,edi
64018581:	je     0x640185b4
64018583:	lea    eax,[edi+0x800]
64018589:	jmp    0x640185a5
6401858b:	cmp    DWORD PTR [edi+0x8],0x0
6401858f:	je     0x6401859b
64018591:	lea    eax,[edi+0xc]
64018594:	push   eax
64018595:	call   DWORD PTR ds:0x6402c170
6401859b:	mov    eax,DWORD PTR [esi]
6401859d:	add    edi,0x40
640185a0:	add    eax,0x800
640185a5:	cmp    edi,eax
640185a7:	jb     0x6401858b
640185a9:	push   DWORD PTR [esi]
640185ab:	call   0x640147cf
640185b0:	and    DWORD PTR [esi],0x0
640185b3:	pop    ecx
640185b4:	add    esi,0x4
640185b7:	cmp    esi,0x640557e0
640185bd:	jl     0x6401857d
640185bf:	pop    edi
640185c0:	pop    esi
640185c1:	ret    
640185c2:	push   ebx
640185c3:	xor    ebx,ebx
640185c5:	cmp    DWORD PTR ds:0x640557ec,ebx
640185cb:	push   esi
640185cc:	push   edi
640185cd:	jne    0x640185d4
640185cf:	call   0x64019443
640185d4:	mov    esi,DWORD PTR ds:0x64053a18
640185da:	xor    edi,edi
640185dc:	cmp    esi,ebx
640185de:	jne    0x640185f8
640185e0:	or     eax,0xffffffff
640185e3:	jmp    0x64018683
640185e8:	cmp    al,0x3d
640185ea:	je     0x640185ed
640185ec:	inc    edi
640185ed:	push   esi
640185ee:	call   0x64015b10
640185f3:	pop    ecx
640185f4:	lea    esi,[esi+eax*1+0x1]
640185f8:	mov    al,BYTE PTR [esi]
640185fa:	cmp    al,bl
640185fc:	jne    0x640185e8
640185fe:	push   0x4
64018600:	inc    edi
64018601:	push   edi
64018602:	call   0x6401632f
64018607:	mov    edi,eax
64018609:	cmp    edi,ebx
6401860b:	pop    ecx
6401860c:	pop    ecx
6401860d:	mov    DWORD PTR ds:0x64053da0,edi
64018613:	je     0x640185e0
64018615:	mov    esi,DWORD PTR ds:0x64053a18
6401861b:	push   ebp
6401861c:	jmp    0x6401865e
6401861e:	push   esi
6401861f:	call   0x64015b10
64018624:	mov    ebp,eax
64018626:	inc    ebp
64018627:	cmp    BYTE PTR [esi],0x3d
6401862a:	pop    ecx
6401862b:	je     0x6401865c
6401862d:	push   0x1
6401862f:	push   ebp
64018630:	call   0x6401632f
64018635:	cmp    eax,ebx
64018637:	pop    ecx
64018638:	pop    ecx
64018639:	mov    DWORD PTR [edi],eax
6401863b:	je     0x64018687
6401863d:	push   esi
6401863e:	push   ebp
6401863f:	push   eax
64018640:	call   0x6401652d
64018645:	add    esp,0xc
64018648:	test   eax,eax
6401864a:	je     0x64018659
6401864c:	push   ebx
6401864d:	push   ebx
6401864e:	push   ebx
6401864f:	push   ebx
64018650:	push   ebx
64018651:	call   0x64013d66
64018656:	add    esp,0x14
64018659:	add    edi,0x4
6401865c:	add    esi,ebp
6401865e:	cmp    BYTE PTR [esi],bl
64018660:	jne    0x6401861e
64018662:	push   DWORD PTR ds:0x64053a18
64018668:	call   0x640147cf
6401866d:	mov    DWORD PTR ds:0x64053a18,ebx
64018673:	mov    DWORD PTR [edi],ebx
64018675:	mov    DWORD PTR ds:0x640557e0,0x1
6401867f:	xor    eax,eax
64018681:	pop    ecx
64018682:	pop    ebp
64018683:	pop    edi
64018684:	pop    esi
64018685:	pop    ebx
64018686:	ret    
64018687:	push   DWORD PTR ds:0x64053da0
6401868d:	call   0x640147cf
64018692:	mov    DWORD PTR ds:0x64053da0,ebx
64018698:	or     eax,0xffffffff
6401869b:	jmp    0x64018681
6401869d:	push   ebp
6401869e:	mov    ebp,esp
640186a0:	push   ecx
640186a1:	mov    ecx,DWORD PTR [ebp+0x10]
640186a4:	push   ebx
640186a5:	xor    eax,eax
640186a7:	cmp    DWORD PTR [ebp+0x8],eax
640186aa:	push   esi
640186ab:	mov    DWORD PTR [edi],eax
640186ad:	mov    esi,edx
640186af:	mov    edx,DWORD PTR [ebp+0xc]
640186b2:	mov    DWORD PTR [ecx],0x1
640186b8:	je     0x640186c3
640186ba:	mov    ebx,DWORD PTR [ebp+0x8]
640186bd:	add    DWORD PTR [ebp+0x8],0x4
640186c1:	mov    DWORD PTR [ebx],edx
640186c3:	mov    DWORD PTR [ebp-0x4],eax
640186c6:	cmp    BYTE PTR [esi],0x22
640186c9:	jne    0x640186db
640186cb:	xor    eax,eax
640186cd:	cmp    DWORD PTR [ebp-0x4],eax
640186d0:	mov    bl,0x22
640186d2:	sete   al
640186d5:	inc    esi
640186d6:	mov    DWORD PTR [ebp-0x4],eax
640186d9:	jmp    0x64018717
640186db:	inc    DWORD PTR [edi]
640186dd:	test   edx,edx
640186df:	je     0x640186e9
640186e1:	mov    al,BYTE PTR [esi]
640186e3:	mov    BYTE PTR [edx],al
640186e5:	inc    edx
640186e6:	mov    DWORD PTR [ebp+0xc],edx
640186e9:	mov    bl,BYTE PTR [esi]
640186eb:	movzx  eax,bl
640186ee:	push   eax
640186ef:	inc    esi
640186f0:	call   0x6401d97d
640186f5:	test   eax,eax
640186f7:	pop    ecx
640186f8:	je     0x6401870d
640186fa:	inc    DWORD PTR [edi]
640186fc:	cmp    DWORD PTR [ebp+0xc],0x0
64018700:	je     0x6401870c
64018702:	mov    ecx,DWORD PTR [ebp+0xc]
64018705:	mov    al,BYTE PTR [esi]
64018707:	inc    DWORD PTR [ebp+0xc]
6401870a:	mov    BYTE PTR [ecx],al
6401870c:	inc    esi
6401870d:	test   bl,bl
6401870f:	mov    edx,DWORD PTR [ebp+0xc]
64018712:	mov    ecx,DWORD PTR [ebp+0x10]
64018715:	je     0x64018749
64018717:	cmp    DWORD PTR [ebp-0x4],0x0
6401871b:	jne    0x640186c6
6401871d:	cmp    bl,0x20
64018720:	je     0x64018727
64018722:	cmp    bl,0x9
64018725:	jne    0x640186c6
64018727:	test   edx,edx
64018729:	je     0x6401872f
6401872b:	mov    BYTE PTR [edx-0x1],0x0
6401872f:	and    DWORD PTR [ebp-0x4],0x0
64018733:	cmp    BYTE PTR [esi],0x0
64018736:	je     0x64018825
6401873c:	mov    al,BYTE PTR [esi]
6401873e:	cmp    al,0x20
64018740:	je     0x64018746
64018742:	cmp    al,0x9
64018744:	jne    0x6401874c
64018746:	inc    esi
64018747:	jmp    0x6401873c
64018749:	dec    esi
6401874a:	jmp    0x6401872f
6401874c:	cmp    BYTE PTR [esi],0x0
6401874f:	je     0x64018825
64018755:	cmp    DWORD PTR [ebp+0x8],0x0
64018759:	je     0x64018764
6401875b:	mov    eax,DWORD PTR [ebp+0x8]
6401875e:	add    DWORD PTR [ebp+0x8],0x4
64018762:	mov    DWORD PTR [eax],edx
64018764:	inc    DWORD PTR [ecx]
64018766:	xor    ebx,ebx
64018768:	inc    ebx
64018769:	xor    ecx,ecx
6401876b:	jmp    0x6401876f
6401876d:	inc    esi
6401876e:	inc    ecx
6401876f:	cmp    BYTE PTR [esi],0x5c
64018772:	je     0x6401876d
64018774:	cmp    BYTE PTR [esi],0x22
64018777:	jne    0x6401879f
64018779:	test   cl,0x1
6401877c:	jne    0x6401879d
6401877e:	cmp    DWORD PTR [ebp-0x4],0x0
64018782:	je     0x64018790
64018784:	lea    eax,[esi+0x1]
64018787:	cmp    BYTE PTR [eax],0x22
6401878a:	jne    0x64018790
6401878c:	mov    esi,eax
6401878e:	jmp    0x6401879d
64018790:	xor    eax,eax
64018792:	xor    ebx,ebx
64018794:	cmp    DWORD PTR [ebp-0x4],eax
64018797:	sete   al
6401879a:	mov    DWORD PTR [ebp-0x4],eax
6401879d:	shr    ecx,1
6401879f:	test   ecx,ecx
640187a1:	je     0x640187b5
640187a3:	dec    ecx
640187a4:	test   edx,edx
640187a6:	je     0x640187ac
640187a8:	mov    BYTE PTR [edx],0x5c
640187ab:	inc    edx
640187ac:	inc    DWORD PTR [edi]
640187ae:	test   ecx,ecx
640187b0:	jne    0x640187a3
640187b2:	mov    DWORD PTR [ebp+0xc],edx
640187b5:	mov    al,BYTE PTR [esi]
640187b7:	test   al,al
640187b9:	je     0x64018810
640187bb:	cmp    DWORD PTR [ebp-0x4],0x0
640187bf:	jne    0x640187c9
640187c1:	cmp    al,0x20
640187c3:	je     0x64018810
640187c5:	cmp    al,0x9
640187c7:	je     0x64018810
640187c9:	test   ebx,ebx
640187cb:	je     0x6401880a
640187cd:	test   edx,edx
640187cf:	movsx  eax,al
640187d2:	push   eax
640187d3:	je     0x640187f8
640187d5:	call   0x6401d97d
640187da:	test   eax,eax
640187dc:	pop    ecx
640187dd:	je     0x640187ec
640187df:	mov    al,BYTE PTR [esi]
640187e1:	mov    ecx,DWORD PTR [ebp+0xc]
640187e4:	inc    DWORD PTR [ebp+0xc]
640187e7:	mov    BYTE PTR [ecx],al
640187e9:	inc    esi
640187ea:	inc    DWORD PTR [edi]
640187ec:	mov    ecx,DWORD PTR [ebp+0xc]
640187ef:	mov    al,BYTE PTR [esi]
640187f1:	inc    DWORD PTR [ebp+0xc]
640187f4:	mov    BYTE PTR [ecx],al
640187f6:	jmp    0x64018805
640187f8:	call   0x6401d97d
640187fd:	test   eax,eax
640187ff:	pop    ecx
64018800:	je     0x64018805
64018802:	inc    esi
64018803:	inc    DWORD PTR [edi]
64018805:	inc    DWORD PTR [edi]
64018807:	mov    edx,DWORD PTR [ebp+0xc]
6401880a:	inc    esi
6401880b:	jmp    0x64018766
64018810:	test   edx,edx
64018812:	je     0x6401881b
64018814:	mov    BYTE PTR [edx],0x0
64018817:	inc    edx
64018818:	mov    DWORD PTR [ebp+0xc],edx
6401881b:	inc    DWORD PTR [edi]
6401881d:	mov    ecx,DWORD PTR [ebp+0x10]
64018820:	jmp    0x64018733
64018825:	mov    eax,DWORD PTR [ebp+0x8]
64018828:	test   eax,eax
6401882a:	pop    esi
6401882b:	pop    ebx
6401882c:	je     0x64018831
6401882e:	and    DWORD PTR [eax],0x0
64018831:	inc    DWORD PTR [ecx]
64018833:	leave  
64018834:	ret    
64018835:	push   ebp
64018836:	mov    ebp,esp
64018838:	sub    esp,0xc
6401883b:	push   ebx
6401883c:	xor    ebx,ebx
6401883e:	cmp    DWORD PTR ds:0x640557ec,ebx
64018844:	push   esi
64018845:	push   edi
64018846:	jne    0x6401884d
64018848:	call   0x64019443
6401884d:	push   0x104
64018852:	mov    esi,0x64053dc8
64018857:	push   esi
64018858:	push   ebx
64018859:	mov    BYTE PTR ds:0x64053ecc,bl
6401885f:	call   DWORD PTR ds:0x6402c148
64018865:	mov    eax,ds:0x640557f8
6401886a:	cmp    eax,ebx
6401886c:	mov    DWORD PTR ds:0x64053db0,esi
64018872:	je     0x6401887b
64018874:	cmp    BYTE PTR [eax],bl
64018876:	mov    DWORD PTR [ebp-0x4],eax
64018879:	jne    0x6401887e
6401887b:	mov    DWORD PTR [ebp-0x4],esi
6401887e:	mov    edx,DWORD PTR [ebp-0x4]
64018881:	lea    eax,[ebp-0x8]
64018884:	push   eax
64018885:	push   ebx
64018886:	push   ebx
64018887:	lea    edi,[ebp-0xc]
6401888a:	call   0x6401869d
6401888f:	mov    eax,DWORD PTR [ebp-0x8]
64018892:	add    esp,0xc
64018895:	cmp    eax,0x3fffffff
6401889a:	jae    0x640188e6
6401889c:	mov    ecx,DWORD PTR [ebp-0xc]
6401889f:	cmp    ecx,0xffffffff
640188a2:	jae    0x640188e6
640188a4:	mov    edi,eax
640188a6:	shl    edi,0x2
640188a9:	lea    eax,[edi+ecx*1]
640188ac:	cmp    eax,ecx
640188ae:	jb     0x640188e6
640188b0:	push   eax
640188b1:	call   0x640162ef
640188b6:	mov    esi,eax
640188b8:	cmp    esi,ebx
640188ba:	pop    ecx
640188bb:	je     0x640188e6
640188bd:	mov    edx,DWORD PTR [ebp-0x4]
640188c0:	lea    eax,[ebp-0x8]
640188c3:	push   eax
640188c4:	add    edi,esi
640188c6:	push   edi
640188c7:	push   esi
640188c8:	lea    edi,[ebp-0xc]
640188cb:	call   0x6401869d
640188d0:	mov    eax,DWORD PTR [ebp-0x8]
640188d3:	add    esp,0xc
640188d6:	dec    eax
640188d7:	mov    ds:0x64053d94,eax
640188dc:	mov    DWORD PTR ds:0x64053d98,esi
640188e2:	xor    eax,eax
640188e4:	jmp    0x640188e9
640188e6:	or     eax,0xffffffff
640188e9:	pop    edi
640188ea:	pop    esi
640188eb:	pop    ebx
640188ec:	leave  
640188ed:	ret    
640188ee:	push   ecx
640188ef:	push   ecx
640188f0:	mov    eax,ds:0x64053ed0
640188f5:	push   ebx
640188f6:	push   ebp
640188f7:	push   esi
640188f8:	push   edi
640188f9:	mov    edi,DWORD PTR ds:0x6402c158
640188ff:	xor    ebx,ebx
64018901:	xor    esi,esi
64018903:	cmp    eax,ebx
64018905:	push   0x2
64018907:	pop    ebp
64018908:	jne    0x64018937
6401890a:	call   edi
6401890c:	mov    esi,eax
6401890e:	cmp    esi,ebx
64018910:	je     0x6401891e
64018912:	mov    DWORD PTR ds:0x64053ed0,0x1
6401891c:	jmp    0x64018940
6401891e:	call   DWORD PTR ds:0x6402c06c
64018924:	cmp    eax,0x78
64018927:	jne    0x64018932
64018929:	mov    eax,ebp
6401892b:	mov    ds:0x64053ed0,eax
64018930:	jmp    0x64018937
64018932:	mov    eax,ds:0x64053ed0
64018937:	cmp    eax,0x1
6401893a:	jne    0x640189c4
64018940:	cmp    esi,ebx
64018942:	jne    0x64018953
64018944:	call   edi
64018946:	mov    esi,eax
64018948:	cmp    esi,ebx
6401894a:	jne    0x64018953
6401894c:	xor    eax,eax
6401894e:	jmp    0x64018a1c
64018953:	cmp    WORD PTR [esi],bx
64018956:	mov    eax,esi
64018958:	je     0x64018968
6401895a:	add    eax,ebp
6401895c:	cmp    WORD PTR [eax],bx
6401895f:	jne    0x6401895a
64018961:	add    eax,ebp
64018963:	cmp    WORD PTR [eax],bx
64018966:	jne    0x6401895a
64018968:	mov    edi,DWORD PTR ds:0x6402c014
6401896e:	push   ebx
6401896f:	push   ebx
64018970:	push   ebx
64018971:	sub    eax,esi
64018973:	push   ebx
64018974:	sar    eax,1
64018976:	inc    eax
64018977:	push   eax
64018978:	push   esi
64018979:	push   ebx
6401897a:	push   ebx
6401897b:	mov    DWORD PTR [esp+0x34],eax
6401897f:	call   edi
64018981:	mov    ebp,eax
64018983:	cmp    ebp,ebx
64018985:	je     0x640189b9
64018987:	push   ebp
64018988:	call   0x640162ef
6401898d:	cmp    eax,ebx
6401898f:	pop    ecx
64018990:	mov    DWORD PTR [esp+0x10],eax
64018994:	je     0x640189b9
64018996:	push   ebx
64018997:	push   ebx
64018998:	push   ebp
64018999:	push   eax
6401899a:	push   DWORD PTR [esp+0x24]
6401899e:	push   esi
6401899f:	push   ebx
640189a0:	push   ebx
640189a1:	call   edi
640189a3:	test   eax,eax
640189a5:	jne    0x640189b5
640189a7:	push   DWORD PTR [esp+0x10]
640189ab:	call   0x640147cf
640189b0:	pop    ecx
640189b1:	mov    DWORD PTR [esp+0x10],ebx
640189b5:	mov    ebx,DWORD PTR [esp+0x10]
640189b9:	push   esi
640189ba:	call   DWORD PTR ds:0x6402c154
640189c0:	mov    eax,ebx
640189c2:	jmp    0x64018a1c
640189c4:	cmp    eax,ebp
640189c6:	je     0x640189cc
640189c8:	cmp    eax,ebx
640189ca:	jne    0x6401894c
640189cc:	call   DWORD PTR ds:0x6402c150
640189d2:	mov    esi,eax
640189d4:	cmp    esi,ebx
640189d6:	je     0x6401894c
640189dc:	cmp    BYTE PTR [esi],bl
640189de:	je     0x640189ea
640189e0:	inc    eax
640189e1:	cmp    BYTE PTR [eax],bl
640189e3:	jne    0x640189e0
640189e5:	inc    eax
640189e6:	cmp    BYTE PTR [eax],bl
640189e8:	jne    0x640189e0
640189ea:	sub    eax,esi
640189ec:	inc    eax
640189ed:	mov    ebp,eax
640189ef:	push   ebp
640189f0:	call   0x640162ef
640189f5:	mov    edi,eax
640189f7:	cmp    edi,ebx
640189f9:	pop    ecx
640189fa:	jne    0x64018a08
640189fc:	push   esi
640189fd:	call   DWORD PTR ds:0x6402c14c
64018a03:	jmp    0x6401894c
64018a08:	push   ebp
64018a09:	push   esi
64018a0a:	push   edi
64018a0b:	call   0x640151f0
64018a10:	add    esp,0xc
64018a13:	push   esi
64018a14:	call   DWORD PTR ds:0x6402c14c
64018a1a:	mov    eax,edi
64018a1c:	pop    edi
64018a1d:	pop    esi
64018a1e:	pop    ebp
64018a1f:	pop    ebx
64018a20:	pop    ecx
64018a21:	pop    ecx
64018a22:	ret    
64018a23:	push   esi
64018a24:	push   edi
64018a25:	mov    eax,0x640439f8
64018a2a:	mov    edi,0x640439f8
64018a2f:	cmp    eax,edi
64018a31:	mov    esi,eax
64018a33:	jae    0x64018a44
64018a35:	mov    eax,DWORD PTR [esi]
64018a37:	test   eax,eax
64018a39:	je     0x64018a3d
64018a3b:	call   eax
64018a3d:	add    esi,0x4
64018a40:	cmp    esi,edi
64018a42:	jb     0x64018a35
64018a44:	pop    edi
64018a45:	pop    esi
64018a46:	ret    
64018a47:	push   esi
64018a48:	push   edi
64018a49:	mov    eax,0x64043a00
64018a4e:	mov    edi,0x64043a00
64018a53:	cmp    eax,edi
64018a55:	mov    esi,eax
64018a57:	jae    0x64018a68
64018a59:	mov    eax,DWORD PTR [esi]
64018a5b:	test   eax,eax
64018a5d:	je     0x64018a61
64018a5f:	call   eax
64018a61:	add    esi,0x4
64018a64:	cmp    esi,edi
64018a66:	jb     0x64018a59
64018a68:	pop    edi
64018a69:	pop    esi
64018a6a:	ret    
64018a6b:	push   ebp
64018a6c:	mov    ebp,esp
64018a6e:	push   ecx
64018a6f:	push   ecx
64018a70:	push   esi
64018a71:	lea    eax,[ebp-0x4]
64018a74:	xor    esi,esi
64018a76:	push   eax
64018a77:	mov    DWORD PTR [ebp-0x4],esi
64018a7a:	mov    DWORD PTR [ebp-0x8],esi
64018a7d:	call   0x640180cf
64018a82:	test   eax,eax
64018a84:	pop    ecx
64018a85:	je     0x64018a94
64018a87:	push   esi
64018a88:	push   esi
64018a89:	push   esi
64018a8a:	push   esi
64018a8b:	push   esi
64018a8c:	call   0x64013d66
64018a91:	add    esp,0x14
64018a94:	lea    eax,[ebp-0x8]
64018a97:	push   eax
64018a98:	call   0x64018106
64018a9d:	test   eax,eax
64018a9f:	pop    ecx
64018aa0:	je     0x64018aaf
64018aa2:	push   esi
64018aa3:	push   esi
64018aa4:	push   esi
64018aa5:	push   esi
64018aa6:	push   esi
64018aa7:	call   0x64013d66
64018aac:	add    esp,0x14
64018aaf:	cmp    DWORD PTR [ebp-0x4],0x2
64018ab3:	pop    esi
64018ab4:	jne    0x64018ac1
64018ab6:	cmp    DWORD PTR [ebp-0x8],0x5
64018aba:	jb     0x64018ac1
64018abc:	xor    eax,eax
64018abe:	inc    eax
64018abf:	leave  
64018ac0:	ret    
64018ac1:	push   0x3
64018ac3:	pop    eax
64018ac4:	leave  
64018ac5:	ret    
64018ac6:	xor    eax,eax
64018ac8:	cmp    DWORD PTR [esp+0x4],eax
64018acc:	push   0x0
64018ace:	sete   al
64018ad1:	push   0x1000
64018ad6:	push   eax
64018ad7:	call   DWORD PTR ds:0x6402c1dc
64018add:	test   eax,eax
64018adf:	mov    ds:0x64053ed4,eax
64018ae4:	jne    0x64018ae9
64018ae6:	xor    eax,eax
64018ae8:	ret    
64018ae9:	call   0x64018a6b
64018aee:	cmp    eax,0x3
64018af1:	mov    ds:0x640556c4,eax
64018af6:	jne    0x64018b1c
64018af8:	push   0x3f8
64018afd:	call   0x6401b4cb
64018b02:	test   eax,eax
64018b04:	pop    ecx
64018b05:	jne    0x64018b1c
64018b07:	push   DWORD PTR ds:0x64053ed4
64018b0d:	call   DWORD PTR ds:0x6402c190
64018b13:	and    DWORD PTR ds:0x64053ed4,0x0
64018b1a:	jmp    0x64018ae6
64018b1c:	xor    eax,eax
64018b1e:	inc    eax
64018b1f:	ret    
64018b20:	push   ebp
64018b21:	xor    ebp,ebp
64018b23:	cmp    DWORD PTR ds:0x640556c4,0x3
64018b2a:	jne    0x64018b80
64018b2c:	push   ebx
64018b2d:	mov    ebx,DWORD PTR ds:0x6402c198
64018b33:	push   edi
64018b34:	xor    edi,edi
64018b36:	cmp    DWORD PTR ds:0x6405469c,ebp
64018b3c:	jle    0x64018b6f
64018b3e:	push   esi
64018b3f:	mov    esi,DWORD PTR ds:0x640546a0
64018b45:	add    esi,0x10
64018b48:	push   0x8000
64018b4d:	push   ebp
64018b4e:	push   DWORD PTR [esi-0x4]
64018b51:	call   DWORD PTR ds:0x6402c160
64018b57:	push   DWORD PTR [esi]
64018b59:	push   ebp
64018b5a:	push   DWORD PTR ds:0x64053ed4
64018b60:	call   ebx
64018b62:	add    esi,0x14
64018b65:	inc    edi
64018b66:	cmp    edi,DWORD PTR ds:0x6405469c
64018b6c:	jl     0x64018b48
64018b6e:	pop    esi
64018b6f:	push   DWORD PTR ds:0x640546a0
64018b75:	push   ebp
64018b76:	push   DWORD PTR ds:0x64053ed4
64018b7c:	call   ebx
64018b7e:	pop    edi
64018b7f:	pop    ebx
64018b80:	push   DWORD PTR ds:0x64053ed4
64018b86:	call   DWORD PTR ds:0x6402c190
64018b8c:	mov    DWORD PTR ds:0x64053ed4,ebp
64018b92:	pop    ebp
64018b93:	ret    
64018b94:	push   ebp
64018b95:	mov    ebp,esp
64018b97:	push   ecx
64018b98:	push   ecx
64018b99:	push   esi
64018b9a:	call   0x640179c3
64018b9f:	mov    esi,eax
64018ba1:	test   esi,esi
64018ba3:	je     0x64018cef
64018ba9:	mov    edx,DWORD PTR [esi+0x5c]
64018bac:	mov    eax,ds:0x64052554
64018bb1:	push   edi
64018bb2:	mov    edi,DWORD PTR [ebp+0x8]
64018bb5:	mov    ecx,edx
64018bb7:	push   ebx
64018bb8:	cmp    DWORD PTR [ecx],edi
64018bba:	je     0x64018bca
64018bbc:	mov    ebx,eax
64018bbe:	imul   ebx,ebx,0xc
64018bc1:	add    ecx,0xc
64018bc4:	add    ebx,edx
64018bc6:	cmp    ecx,ebx
64018bc8:	jb     0x64018bb8
64018bca:	imul   eax,eax,0xc
64018bcd:	add    eax,edx
64018bcf:	cmp    ecx,eax
64018bd1:	jae    0x64018bdb
64018bd3:	cmp    DWORD PTR [ecx],edi
64018bd5:	jne    0x64018bdb
64018bd7:	mov    eax,ecx
64018bd9:	jmp    0x64018bdd
64018bdb:	xor    eax,eax
64018bdd:	test   eax,eax
64018bdf:	je     0x64018beb
64018be1:	mov    ebx,DWORD PTR [eax+0x8]
64018be4:	test   ebx,ebx
64018be6:	mov    DWORD PTR [ebp-0x4],ebx
64018be9:	jne    0x64018bf2
64018beb:	xor    eax,eax
64018bed:	jmp    0x64018ced
64018bf2:	cmp    ebx,0x5
64018bf5:	jne    0x64018c03
64018bf7:	and    DWORD PTR [eax+0x8],0x0
64018bfb:	xor    eax,eax
64018bfd:	inc    eax
64018bfe:	jmp    0x64018ced
64018c03:	cmp    ebx,0x1
64018c06:	je     0x64018cea
64018c0c:	mov    ecx,DWORD PTR [esi+0x60]
64018c0f:	mov    DWORD PTR [ebp-0x8],ecx
64018c12:	mov    ecx,DWORD PTR [ebp+0xc]
64018c15:	mov    DWORD PTR [esi+0x60],ecx
64018c18:	mov    ecx,DWORD PTR [eax+0x4]
64018c1b:	cmp    ecx,0x8
64018c1e:	jne    0x64018cdc
64018c24:	mov    ecx,DWORD PTR ds:0x64052548
64018c2a:	mov    edi,DWORD PTR ds:0x6405254c
64018c30:	mov    edx,ecx
64018c32:	add    edi,ecx
64018c34:	cmp    edx,edi
64018c36:	jge    0x64018c5c
64018c38:	imul   ecx,ecx,0xc
64018c3b:	mov    edi,DWORD PTR [esi+0x5c]
64018c3e:	and    DWORD PTR [ecx+edi*1+0x8],0x0
64018c43:	mov    edi,DWORD PTR ds:0x64052548
64018c49:	mov    ebx,DWORD PTR ds:0x6405254c
64018c4f:	inc    edx
64018c50:	add    ebx,edi
64018c52:	add    ecx,0xc
64018c55:	cmp    edx,ebx
64018c57:	jl     0x64018c3b
64018c59:	mov    ebx,DWORD PTR [ebp-0x4]
64018c5c:	mov    eax,DWORD PTR [eax]
64018c5e:	cmp    eax,0xc000008e
64018c63:	mov    edi,DWORD PTR [esi+0x64]
64018c66:	jne    0x64018c71
64018c68:	mov    DWORD PTR [esi+0x64],0x83
64018c6f:	jmp    0x64018ccf
64018c71:	cmp    eax,0xc0000090
64018c76:	jne    0x64018c81
64018c78:	mov    DWORD PTR [esi+0x64],0x81
64018c7f:	jmp    0x64018ccf
64018c81:	cmp    eax,0xc0000091
64018c86:	jne    0x64018c91
64018c88:	mov    DWORD PTR [esi+0x64],0x84
64018c8f:	jmp    0x64018ccf
64018c91:	cmp    eax,0xc0000093
64018c96:	jne    0x64018ca1
64018c98:	mov    DWORD PTR [esi+0x64],0x85
64018c9f:	jmp    0x64018ccf
64018ca1:	cmp    eax,0xc000008d
64018ca6:	jne    0x64018cb1
64018ca8:	mov    DWORD PTR [esi+0x64],0x82
64018caf:	jmp    0x64018ccf
64018cb1:	cmp    eax,0xc000008f
64018cb6:	jne    0x64018cc1
64018cb8:	mov    DWORD PTR [esi+0x64],0x86
64018cbf:	jmp    0x64018ccf
64018cc1:	cmp    eax,0xc0000092
64018cc6:	jne    0x64018ccf
64018cc8:	mov    DWORD PTR [esi+0x64],0x8a
64018ccf:	push   DWORD PTR [esi+0x64]
64018cd2:	push   0x8
64018cd4:	call   ebx
64018cd6:	pop    ecx
64018cd7:	mov    DWORD PTR [esi+0x64],edi
64018cda:	jmp    0x64018ce3
64018cdc:	and    DWORD PTR [eax+0x8],0x0
64018ce0:	push   ecx
64018ce1:	call   ebx
64018ce3:	mov    eax,DWORD PTR [ebp-0x8]
64018ce6:	pop    ecx
64018ce7:	mov    DWORD PTR [esi+0x60],eax
64018cea:	or     eax,0xffffffff
64018ced:	pop    ebx
64018cee:	pop    edi
64018cef:	pop    esi
64018cf0:	leave  
64018cf1:	ret    
64018cf2:	mov    eax,0xe06d7363
64018cf7:	cmp    DWORD PTR [esp+0x4],eax
64018cfb:	jne    0x64018d0a
64018cfd:	push   DWORD PTR [esp+0x8]
64018d01:	push   eax
64018d02:	call   0x64018b94
64018d07:	pop    ecx
64018d08:	pop    ecx
64018d09:	ret    
64018d0a:	xor    eax,eax
64018d0c:	ret    
64018d0d:	push   ebp
64018d0e:	mov    ebp,esp
64018d10:	sub    esp,0x10
64018d13:	mov    eax,ds:0x640521ac
64018d18:	and    DWORD PTR [ebp-0x8],0x0
64018d1c:	and    DWORD PTR [ebp-0x4],0x0
64018d20:	push   ebx
64018d21:	push   edi
64018d22:	mov    edi,0xbb40e64e
64018d27:	cmp    eax,edi
64018d29:	mov    ebx,0xffff0000
64018d2e:	je     0x64018d3d
64018d30:	test   ebx,eax
64018d32:	je     0x64018d3d
64018d34:	not    eax
64018d36:	mov    ds:0x640521b0,eax
64018d3b:	jmp    0x64018d9d
64018d3d:	push   esi
64018d3e:	lea    eax,[ebp-0x8]
64018d41:	push   eax
64018d42:	call   DWORD PTR ds:0x6402c128
64018d48:	mov    esi,DWORD PTR [ebp-0x4]
64018d4b:	xor    esi,DWORD PTR [ebp-0x8]
64018d4e:	call   DWORD PTR ds:0x6402c03c
64018d54:	xor    esi,eax
64018d56:	call   DWORD PTR ds:0x6402c0f0
64018d5c:	xor    esi,eax
64018d5e:	call   DWORD PTR ds:0x6402c100
64018d64:	xor    esi,eax
64018d66:	lea    eax,[ebp-0x10]
64018d69:	push   eax
64018d6a:	call   DWORD PTR ds:0x6402c15c
64018d70:	mov    eax,DWORD PTR [ebp-0xc]
64018d73:	xor    eax,DWORD PTR [ebp-0x10]
64018d76:	xor    esi,eax
64018d78:	cmp    esi,edi
64018d7a:	jne    0x64018d83
64018d7c:	mov    esi,0xbb40e64f
64018d81:	jmp    0x64018d8e
64018d83:	test   ebx,esi
64018d85:	jne    0x64018d8e
64018d87:	mov    eax,esi
64018d89:	shl    eax,0x10
64018d8c:	or     esi,eax
64018d8e:	mov    DWORD PTR ds:0x640521ac,esi
64018d94:	not    esi
64018d96:	mov    DWORD PTR ds:0x640521b0,esi
64018d9c:	pop    esi
64018d9d:	pop    edi
64018d9e:	pop    ebx
64018d9f:	leave  
64018da0:	ret    
64018da1:	sub    eax,0x3a4
64018da6:	je     0x64018dca
64018da8:	sub    eax,0x4
64018dab:	je     0x64018dc4
64018dad:	sub    eax,0xd
64018db0:	je     0x64018dbe
64018db2:	dec    eax
64018db3:	je     0x64018db8
64018db5:	xor    eax,eax
64018db7:	ret    
64018db8:	mov    eax,0x404
64018dbd:	ret    
64018dbe:	mov    eax,0x412
64018dc3:	ret    
64018dc4:	mov    eax,0x804
64018dc9:	ret    
64018dca:	mov    eax,0x411
64018dcf:	ret    
64018dd0:	push   ebx
64018dd1:	push   ebp
64018dd2:	push   esi
64018dd3:	push   edi
64018dd4:	mov    ebp,0x101
64018dd9:	mov    esi,eax
64018ddb:	push   ebp
64018ddc:	xor    edi,edi
64018dde:	lea    ebx,[esi+0x1c]
64018de1:	push   edi
64018de2:	push   ebx
64018de3:	call   0x64015170
64018de8:	mov    DWORD PTR [esi+0x4],edi
64018deb:	mov    DWORD PTR [esi+0x8],edi
64018dee:	mov    DWORD PTR [esi+0xc],edi
64018df1:	xor    eax,eax
64018df3:	lea    edi,[esi+0x10]
64018df6:	stos   DWORD PTR es:[edi],eax
64018df7:	stos   DWORD PTR es:[edi],eax
64018df8:	stos   DWORD PTR es:[edi],eax
64018df9:	mov    eax,0x64052558
64018dfe:	add    esp,0xc
64018e01:	sub    eax,esi
64018e03:	mov    cl,BYTE PTR [eax+ebx*1]
64018e06:	mov    BYTE PTR [ebx],cl
64018e08:	inc    ebx
64018e09:	dec    ebp
64018e0a:	jne    0x64018e03
64018e0c:	lea    ecx,[esi+0x11d]
64018e12:	mov    esi,0x100
64018e17:	mov    dl,BYTE PTR [ecx+eax*1]
64018e1a:	mov    BYTE PTR [ecx],dl
64018e1c:	inc    ecx
64018e1d:	dec    esi
64018e1e:	jne    0x64018e17
64018e20:	pop    edi
64018e21:	pop    esi
64018e22:	pop    ebp
64018e23:	pop    ebx
64018e24:	ret    
64018e25:	push   ebp
64018e26:	lea    ebp,[esp-0x49c]
64018e2d:	sub    esp,0x51c
64018e33:	mov    eax,ds:0x640521ac
64018e38:	xor    eax,ebp
64018e3a:	mov    DWORD PTR [ebp+0x498],eax
64018e40:	push   ebx
64018e41:	push   edi
64018e42:	lea    eax,[ebp-0x7c]
64018e45:	push   eax
64018e46:	push   DWORD PTR [esi+0x4]
64018e49:	call   DWORD PTR ds:0x6402c1cc
64018e4f:	test   eax,eax
64018e51:	mov    edi,0x100
64018e56:	je     0x64018f4b
64018e5c:	xor    eax,eax
64018e5e:	mov    BYTE PTR [ebp+eax*1+0x398],al
64018e65:	inc    eax
64018e66:	cmp    eax,edi
64018e68:	jb     0x64018e5e
64018e6a:	mov    al,BYTE PTR [ebp-0x76]
64018e6d:	test   al,al
64018e6f:	mov    BYTE PTR [ebp+0x398],0x20
64018e76:	je     0x64018ea3
64018e78:	lea    ebx,[ebp-0x75]
64018e7b:	movzx  ecx,al
64018e7e:	movzx  eax,BYTE PTR [ebx]
64018e81:	cmp    ecx,eax
64018e83:	ja     0x64018e9b
64018e85:	sub    eax,ecx
64018e87:	inc    eax
64018e88:	push   eax
64018e89:	lea    edx,[ebp+ecx*1+0x398]
64018e90:	push   0x20
64018e92:	push   edx
64018e93:	call   0x64015170
64018e98:	add    esp,0xc
64018e9b:	inc    ebx
64018e9c:	mov    al,BYTE PTR [ebx]
64018e9e:	inc    ebx
64018e9f:	test   al,al
64018ea1:	jne    0x64018e7b
64018ea3:	push   0x0
64018ea5:	push   DWORD PTR [esi+0xc]
64018ea8:	lea    eax,[ebp-0x68]
64018eab:	push   DWORD PTR [esi+0x4]
64018eae:	push   eax
64018eaf:	push   edi
64018eb0:	lea    eax,[ebp+0x398]
64018eb6:	push   eax
64018eb7:	push   0x1
64018eb9:	push   0x0
64018ebb:	call   0x6401e2c1
64018ec0:	xor    ebx,ebx
64018ec2:	push   ebx
64018ec3:	push   DWORD PTR [esi+0x4]
64018ec6:	lea    eax,[ebp+0x298]
64018ecc:	push   edi
64018ecd:	push   eax
64018ece:	push   edi
64018ecf:	lea    eax,[ebp+0x398]
64018ed5:	push   eax
64018ed6:	push   edi
64018ed7:	push   DWORD PTR [esi+0xc]
64018eda:	push   ebx
64018edb:	call   0x640162ac
64018ee0:	add    esp,0x44
64018ee3:	push   ebx
64018ee4:	push   DWORD PTR [esi+0x4]
64018ee7:	lea    eax,[ebp+0x198]
64018eed:	push   edi
64018eee:	push   eax
64018eef:	push   edi
64018ef0:	lea    eax,[ebp+0x398]
64018ef6:	push   eax
64018ef7:	push   0x200
64018efc:	push   DWORD PTR [esi+0xc]
64018eff:	push   ebx
64018f00:	call   0x640162ac
64018f05:	add    esp,0x24
64018f08:	xor    eax,eax
64018f0a:	movzx  ecx,WORD PTR [ebp+eax*2-0x68]
64018f0f:	test   cl,0x1
64018f12:	je     0x64018f22
64018f14:	or     BYTE PTR [esi+eax*1+0x1d],0x10
64018f19:	mov    cl,BYTE PTR [ebp+eax*1+0x298]
64018f20:	jmp    0x64018f33
64018f22:	test   cl,0x2
64018f25:	je     0x64018f3c
64018f27:	or     BYTE PTR [esi+eax*1+0x1d],0x20
64018f2c:	mov    cl,BYTE PTR [ebp+eax*1+0x198]
64018f33:	mov    BYTE PTR [esi+eax*1+0x11d],cl
64018f3a:	jmp    0x64018f44
64018f3c:	mov    BYTE PTR [esi+eax*1+0x11d],0x0
64018f44:	inc    eax
64018f45:	cmp    eax,edi
64018f47:	jb     0x64018f0a
64018f49:	jmp    0x64018f98
64018f4b:	lea    eax,[esi+0x11d]
64018f51:	mov    DWORD PTR [ebp-0x80],0xffffff9f
64018f58:	xor    ecx,ecx
64018f5a:	sub    DWORD PTR [ebp-0x80],eax
64018f5d:	mov    edx,DWORD PTR [ebp-0x80]
64018f60:	lea    eax,[esi+ecx*1+0x11d]
64018f67:	add    edx,eax
64018f69:	lea    ebx,[edx+0x20]
64018f6c:	cmp    ebx,0x19
64018f6f:	ja     0x64018f7d
64018f71:	or     BYTE PTR [esi+ecx*1+0x1d],0x10
64018f76:	mov    dl,cl
64018f78:	add    dl,0x20
64018f7b:	jmp    0x64018f8c
64018f7d:	cmp    edx,0x19
64018f80:	ja     0x64018f90
64018f82:	or     BYTE PTR [esi+ecx*1+0x1d],0x20
64018f87:	mov    dl,cl
64018f89:	sub    dl,0x20
64018f8c:	mov    BYTE PTR [eax],dl
64018f8e:	jmp    0x64018f93
64018f90:	mov    BYTE PTR [eax],0x0
64018f93:	inc    ecx
64018f94:	cmp    ecx,edi
64018f96:	jb     0x64018f5d
64018f98:	mov    ecx,DWORD PTR [ebp+0x498]
64018f9e:	pop    edi
64018f9f:	xor    ecx,ebp
64018fa1:	pop    ebx
64018fa2:	call   0x64013d18
64018fa7:	add    ebp,0x49c
64018fad:	leave  
64018fae:	ret    
64018faf:	int3   
64018fb0:	int3   
64018fb1:	int3   
64018fb2:	push   0xc
64018fb4:	push   0x64043e90
64018fb9:	call   0x640164d4
64018fbe:	call   0x64017a3a
64018fc3:	mov    edi,eax
64018fc5:	mov    eax,ds:0x64052a78
64018fca:	test   DWORD PTR [edi+0x70],eax
64018fcd:	je     0x64018fec
64018fcf:	cmp    DWORD PTR [edi+0x6c],0x0
64018fd3:	je     0x64018fec
64018fd5:	mov    esi,DWORD PTR [edi+0x68]
64018fd8:	test   esi,esi
64018fda:	jne    0x64018fe4
64018fdc:	push   0x20
64018fde:	call   0x64018026
64018fe3:	pop    ecx
64018fe4:	mov    eax,esi
64018fe6:	call   0x64016519
64018feb:	ret    
64018fec:	push   0xd
64018fee:	call   0x6401b49a
64018ff3:	pop    ecx
64018ff4:	and    DWORD PTR [ebp-0x4],0x0
64018ff8:	mov    esi,DWORD PTR [edi+0x68]
64018ffb:	mov    DWORD PTR [ebp-0x1c],esi
64018ffe:	cmp    esi,DWORD PTR ds:0x64052980
64019004:	je     0x6401903c
64019006:	test   esi,esi
64019008:	je     0x64019024
6401900a:	push   esi
6401900b:	call   DWORD PTR ds:0x6402c07c
64019011:	test   eax,eax
64019013:	jne    0x64019024
64019015:	cmp    esi,0x64052558
6401901b:	je     0x64019024
6401901d:	push   esi
6401901e:	call   0x640147cf
64019023:	pop    ecx
64019024:	mov    eax,ds:0x64052980
64019029:	mov    DWORD PTR [edi+0x68],eax
6401902c:	mov    esi,DWORD PTR ds:0x64052980
64019032:	mov    DWORD PTR [ebp-0x1c],esi
64019035:	push   esi
64019036:	call   DWORD PTR ds:0x6402c030
6401903c:	mov    DWORD PTR [ebp-0x4],0xfffffffe
64019043:	call   0x6401904d
64019048:	jmp    0x64018fd8
6401904a:	mov    esi,DWORD PTR [ebp-0x1c]
6401904d:	push   0xd
6401904f:	call   0x6401b3c2
64019054:	pop    ecx
64019055:	ret    
64019056:	push   ebp
64019057:	mov    ebp,esp
64019059:	sub    esp,0x10
6401905c:	push   ebx
6401905d:	xor    ebx,ebx
6401905f:	push   ebx
64019060:	lea    ecx,[ebp-0x10]
64019063:	call   0x64014335
64019068:	cmp    esi,0xfffffffe
6401906b:	mov    DWORD PTR ds:0x64053ed8,ebx
64019071:	jne    0x64019091
64019073:	mov    DWORD PTR ds:0x64053ed8,0x1
6401907d:	call   DWORD PTR ds:0x6402c124
64019083:	cmp    BYTE PTR [ebp-0x4],bl
64019086:	je     0x640190cd
64019088:	mov    ecx,DWORD PTR [ebp-0x8]
6401908b:	and    DWORD PTR [ecx+0x70],0xfffffffd
6401908f:	jmp    0x640190cd
64019091:	cmp    esi,0xfffffffd
64019094:	jne    0x640190a8
64019096:	mov    DWORD PTR ds:0x64053ed8,0x1
640190a0:	call   DWORD PTR ds:0x6402c17c
640190a6:	jmp    0x64019083
640190a8:	cmp    esi,0xfffffffc
640190ab:	jne    0x640190bf
640190ad:	mov    eax,DWORD PTR [ebp-0x10]
640190b0:	mov    eax,DWORD PTR [eax+0x4]
640190b3:	mov    DWORD PTR ds:0x64053ed8,0x1
640190bd:	jmp    0x64019083
640190bf:	cmp    BYTE PTR [ebp-0x4],bl
640190c2:	je     0x640190cb
640190c4:	mov    eax,DWORD PTR [ebp-0x8]
640190c7:	and    DWORD PTR [eax+0x70],0xfffffffd
640190cb:	mov    eax,esi
640190cd:	pop    ebx
640190ce:	leave  
640190cf:	ret    
640190d0:	push   ebp
640190d1:	mov    ebp,esp
640190d3:	sub    esp,0x20
640190d6:	mov    eax,ds:0x640521ac
640190db:	xor    eax,ebp
640190dd:	mov    DWORD PTR [ebp-0x4],eax
640190e0:	push   ebx
640190e1:	mov    ebx,DWORD PTR [ebp+0xc]
640190e4:	push   esi
640190e5:	mov    esi,DWORD PTR [ebp+0x8]
640190e8:	push   edi
640190e9:	call   0x64019056
640190ee:	mov    edi,eax
640190f0:	xor    esi,esi
640190f2:	cmp    edi,esi
640190f4:	mov    DWORD PTR [ebp+0x8],edi
640190f7:	jne    0x64019107
640190f9:	mov    eax,ebx
640190fb:	call   0x64018dd0
64019100:	xor    eax,eax
64019102:	jmp    0x6401929a
64019107:	mov    DWORD PTR [ebp-0x1c],esi
6401910a:	xor    eax,eax
6401910c:	cmp    DWORD PTR [eax+0x64052988],edi
64019112:	je     0x640191a9
64019118:	inc    DWORD PTR [ebp-0x1c]
6401911b:	add    eax,0x30
6401911e:	cmp    eax,0xf0
64019123:	jb     0x6401910c
64019125:	cmp    edi,0xfde8
6401912b:	je     0x64019297
64019131:	cmp    edi,0xfde9
64019137:	je     0x64019297
6401913d:	movzx  eax,di
64019140:	push   eax
64019141:	call   DWORD PTR ds:0x6402c120
64019147:	test   eax,eax
64019149:	je     0x64019297
6401914f:	lea    eax,[ebp-0x18]
64019152:	push   eax
64019153:	push   edi
64019154:	call   DWORD PTR ds:0x6402c1cc
6401915a:	test   eax,eax
6401915c:	je     0x6401928b
64019162:	push   0x101
64019167:	lea    eax,[ebx+0x1c]
6401916a:	push   esi
6401916b:	push   eax
6401916c:	call   0x64015170
64019171:	xor    edx,edx
64019173:	inc    edx
64019174:	add    esp,0xc
64019177:	cmp    DWORD PTR [ebp-0x18],edx
6401917a:	mov    DWORD PTR [ebx+0x4],edi
6401917d:	mov    DWORD PTR [ebx+0xc],esi
64019180:	jbe    0x6401927e
64019186:	cmp    BYTE PTR [ebp-0x12],0x0
6401918a:	je     0x6401925f
64019190:	lea    esi,[ebp-0x11]
64019193:	mov    cl,BYTE PTR [esi]
64019195:	test   cl,cl
64019197:	je     0x6401925f
6401919d:	movzx  eax,BYTE PTR [esi-0x1]
640191a1:	movzx  ecx,cl
640191a4:	jmp    0x6401924f
640191a9:	push   0x101
640191ae:	lea    eax,[ebx+0x1c]
640191b1:	push   esi
640191b2:	push   eax
640191b3:	call   0x64015170
640191b8:	mov    ecx,DWORD PTR [ebp-0x1c]
640191bb:	add    esp,0xc
640191be:	imul   ecx,ecx,0x30
640191c1:	mov    DWORD PTR [ebp-0x20],esi
640191c4:	lea    esi,[ecx+0x64052998]
640191ca:	mov    DWORD PTR [ebp-0x1c],esi
640191cd:	jmp    0x640191f9
640191cf:	mov    al,BYTE PTR [esi+0x1]
640191d2:	test   al,al
640191d4:	je     0x640191fe
640191d6:	movzx  edi,BYTE PTR [esi]
640191d9:	movzx  eax,al
640191dc:	jmp    0x640191f0
640191de:	mov    eax,DWORD PTR [ebp-0x20]
640191e1:	mov    al,BYTE PTR [eax+0x64052984]
640191e7:	or     BYTE PTR [ebx+edi*1+0x1d],al
640191eb:	movzx  eax,BYTE PTR [esi+0x1]
640191ef:	inc    edi
640191f0:	cmp    edi,eax
640191f2:	jbe    0x640191de
640191f4:	mov    edi,DWORD PTR [ebp+0x8]
640191f7:	inc    esi
640191f8:	inc    esi
640191f9:	cmp    BYTE PTR [esi],0x0
640191fc:	jne    0x640191cf
640191fe:	mov    esi,DWORD PTR [ebp-0x1c]
64019201:	inc    DWORD PTR [ebp-0x20]
64019204:	add    esi,0x8
64019207:	cmp    DWORD PTR [ebp-0x20],0x4
6401920b:	mov    DWORD PTR [ebp-0x1c],esi
6401920e:	jb     0x640191f9
64019210:	mov    eax,edi
64019212:	mov    DWORD PTR [ebx+0x4],edi
64019215:	mov    DWORD PTR [ebx+0x8],0x1
6401921c:	call   0x64018da1
64019221:	push   0x6
64019223:	mov    DWORD PTR [ebx+0xc],eax
64019226:	lea    eax,[ebx+0x10]
64019229:	lea    ecx,[ecx+0x6405298c]
6401922f:	pop    edx
64019230:	mov    si,WORD PTR [ecx]
64019233:	inc    ecx
64019234:	mov    WORD PTR [eax],si
64019237:	inc    ecx
64019238:	inc    eax
64019239:	inc    eax
6401923a:	dec    edx
6401923b:	jne    0x64019230
6401923d:	mov    esi,ebx
6401923f:	call   0x64018e25
64019244:	jmp    0x64019100
64019249:	or     BYTE PTR [ebx+eax*1+0x1d],0x4
6401924e:	inc    eax
6401924f:	cmp    eax,ecx
64019251:	jbe    0x64019249
64019253:	inc    esi
64019254:	inc    esi
64019255:	cmp    BYTE PTR [esi-0x1],0x0
64019259:	jne    0x64019193
6401925f:	lea    eax,[ebx+0x1e]
64019262:	mov    ecx,0xfe
64019267:	or     BYTE PTR [eax],0x8
6401926a:	inc    eax
6401926b:	dec    ecx
6401926c:	jne    0x64019267
6401926e:	mov    eax,DWORD PTR [ebx+0x4]
64019271:	call   0x64018da1
64019276:	mov    DWORD PTR [ebx+0xc],eax
64019279:	mov    DWORD PTR [ebx+0x8],edx
6401927c:	jmp    0x64019281
6401927e:	mov    DWORD PTR [ebx+0x8],esi
64019281:	xor    eax,eax
64019283:	lea    edi,[ebx+0x10]
64019286:	stos   DWORD PTR es:[edi],eax
64019287:	stos   DWORD PTR es:[edi],eax
64019288:	stos   DWORD PTR es:[edi],eax
64019289:	jmp    0x6401923d
6401928b:	cmp    DWORD PTR ds:0x64053ed8,esi
64019291:	jne    0x640190f9
64019297:	or     eax,0xffffffff
6401929a:	mov    ecx,DWORD PTR [ebp-0x4]
6401929d:	pop    edi
6401929e:	pop    esi
6401929f:	xor    ecx,ebp
640192a1:	pop    ebx
640192a2:	call   0x64013d18
640192a7:	leave  
640192a8:	ret    
640192a9:	push   0x14
640192ab:	push   0x64043eb0
640192b0:	call   0x640164d4
640192b5:	or     DWORD PTR [ebp-0x20],0xffffffff
640192b9:	call   0x64017a3a
640192be:	mov    edi,eax
640192c0:	mov    DWORD PTR [ebp-0x24],edi
640192c3:	call   0x64018fb2
640192c8:	mov    ebx,DWORD PTR [edi+0x68]
640192cb:	mov    esi,DWORD PTR [ebp+0x8]
640192ce:	call   0x64019056
640192d3:	mov    DWORD PTR [ebp+0x8],eax
640192d6:	cmp    eax,DWORD PTR [ebx+0x4]
640192d9:	je     0x64019436
640192df:	push   0x220
640192e4:	call   0x640162ef
640192e9:	pop    ecx
640192ea:	mov    ebx,eax
640192ec:	test   ebx,ebx
640192ee:	je     0x6401943a
640192f4:	mov    ecx,0x88
640192f9:	mov    esi,DWORD PTR [edi+0x68]
640192fc:	mov    edi,ebx
640192fe:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
64019300:	and    DWORD PTR [ebx],0x0
64019303:	push   ebx
64019304:	push   DWORD PTR [ebp+0x8]
64019307:	call   0x640190d0
6401930c:	pop    ecx
6401930d:	pop    ecx
6401930e:	mov    DWORD PTR [ebp-0x20],eax
64019311:	test   eax,eax
64019313:	jne    0x64019415
64019319:	mov    esi,DWORD PTR [ebp-0x24]
6401931c:	push   DWORD PTR [esi+0x68]
6401931f:	call   DWORD PTR ds:0x6402c07c
64019325:	test   eax,eax
64019327:	jne    0x6401933a
64019329:	mov    eax,DWORD PTR [esi+0x68]
6401932c:	cmp    eax,0x64052558
64019331:	je     0x6401933a
64019333:	push   eax
64019334:	call   0x640147cf
64019339:	pop    ecx
6401933a:	mov    DWORD PTR [esi+0x68],ebx
6401933d:	push   ebx
6401933e:	mov    edi,DWORD PTR ds:0x6402c030
64019344:	call   edi
64019346:	test   BYTE PTR [esi+0x70],0x2
6401934a:	jne    0x6401943a
64019350:	test   BYTE PTR ds:0x64052a78,0x1
64019357:	jne    0x6401943a
6401935d:	push   0xd
6401935f:	call   0x6401b49a
64019364:	pop    ecx
64019365:	and    DWORD PTR [ebp-0x4],0x0
64019369:	mov    eax,DWORD PTR [ebx+0x4]
6401936c:	mov    ds:0x64053ee8,eax
64019371:	mov    eax,DWORD PTR [ebx+0x8]
64019374:	mov    ds:0x64053eec,eax
64019379:	mov    eax,DWORD PTR [ebx+0xc]
6401937c:	mov    ds:0x64053ef0,eax
64019381:	xor    eax,eax
64019383:	mov    DWORD PTR [ebp-0x1c],eax
64019386:	cmp    eax,0x5
64019389:	jge    0x6401939b
6401938b:	mov    cx,WORD PTR [ebx+eax*2+0x10]
64019390:	mov    WORD PTR [eax*2+0x64053edc],cx
64019398:	inc    eax
64019399:	jmp    0x64019383
6401939b:	xor    eax,eax
6401939d:	mov    DWORD PTR [ebp-0x1c],eax
640193a0:	cmp    eax,0x101
640193a5:	jge    0x640193b4
640193a7:	mov    cl,BYTE PTR [eax+ebx*1+0x1c]
640193ab:	mov    BYTE PTR [eax+0x64052778],cl
640193b1:	inc    eax
640193b2:	jmp    0x6401939d
640193b4:	xor    eax,eax
640193b6:	mov    DWORD PTR [ebp-0x1c],eax
640193b9:	cmp    eax,0x100
640193be:	jge    0x640193d0
640193c0:	mov    cl,BYTE PTR [eax+ebx*1+0x11d]
640193c7:	mov    BYTE PTR [eax+0x64052880],cl
640193cd:	inc    eax
640193ce:	jmp    0x640193b6
640193d0:	push   DWORD PTR ds:0x64052980
640193d6:	call   DWORD PTR ds:0x6402c07c
640193dc:	test   eax,eax
640193de:	jne    0x640193f3
640193e0:	mov    eax,ds:0x64052980
640193e5:	cmp    eax,0x64052558
640193ea:	je     0x640193f3
640193ec:	push   eax
640193ed:	call   0x640147cf
640193f2:	pop    ecx
640193f3:	mov    DWORD PTR ds:0x64052980,ebx
640193f9:	push   ebx
640193fa:	call   edi
640193fc:	mov    DWORD PTR [ebp-0x4],0xfffffffe
64019403:	call   0x6401940a
64019408:	jmp    0x6401943a
6401940a:	push   0xd
6401940c:	call   0x6401b3c2
64019411:	pop    ecx
64019412:	ret    
64019413:	jmp    0x6401943a
64019415:	cmp    eax,0xffffffff
64019418:	jne    0x6401943a
6401941a:	cmp    ebx,0x64052558
64019420:	je     0x64019429
64019422:	push   ebx
64019423:	call   0x640147cf
64019428:	pop    ecx
64019429:	call   0x640166d3
6401942e:	mov    DWORD PTR [eax],0x16
64019434:	jmp    0x6401943a
64019436:	and    DWORD PTR [ebp-0x20],0x0
6401943a:	mov    eax,DWORD PTR [ebp-0x20]
6401943d:	call   0x64016519
64019442:	ret    
64019443:	cmp    DWORD PTR ds:0x640557ec,0x0
6401944a:	jne    0x6401945e
6401944c:	push   0xfffffffd
6401944e:	call   0x640192a9
64019453:	pop    ecx
64019454:	mov    DWORD PTR ds:0x640557ec,0x1
6401945e:	xor    eax,eax
64019460:	ret    
64019461:	push   ebp
64019462:	mov    ebp,esp
64019464:	sub    esp,0x10
64019467:	mov    eax,ds:0x640521ac
6401946c:	xor    eax,ebp
6401946e:	mov    DWORD PTR [ebp-0x4],eax
64019471:	push   ebx
64019472:	push   esi
64019473:	mov    esi,DWORD PTR ds:0x6402c1c8
64019479:	xor    ebx,ebx
6401947b:	cmp    DWORD PTR ds:0x64053f14,ebx
64019481:	push   edi
64019482:	mov    edi,ecx
64019484:	jne    0x640194bc
64019486:	push   ebx
64019487:	push   ebx
64019488:	push   0x1
6401948a:	push   0x64041de4
6401948f:	push   0x100
64019494:	push   ebx
64019495:	call   esi
64019497:	test   eax,eax
64019499:	je     0x640194a7
6401949b:	mov    DWORD PTR ds:0x64053f14,0x1
640194a5:	jmp    0x640194bc
640194a7:	call   DWORD PTR ds:0x6402c06c
640194ad:	cmp    eax,0x78
640194b0:	jne    0x640194bc
640194b2:	mov    DWORD PTR ds:0x64053f14,0x2
640194bc:	cmp    DWORD PTR [ebp+0x14],ebx
640194bf:	jle    0x640194de
640194c1:	mov    ecx,DWORD PTR [ebp+0x14]
640194c4:	mov    eax,DWORD PTR [ebp+0x10]
640194c7:	dec    ecx
640194c8:	cmp    WORD PTR [eax],bx
640194cb:	je     0x640194d6
640194cd:	inc    eax
640194ce:	inc    eax
640194cf:	cmp    ecx,ebx
640194d1:	jne    0x640194c7
640194d3:	or     ecx,0xffffffff
640194d6:	or     eax,0xffffffff
640194d9:	sub    eax,ecx
640194db:	add    DWORD PTR [ebp+0x14],eax
640194de:	mov    eax,ds:0x64053f14
640194e3:	cmp    eax,0x1
640194e6:	jne    0x64019501
640194e8:	push   DWORD PTR [ebp+0x1c]
640194eb:	push   DWORD PTR [ebp+0x18]
640194ee:	push   DWORD PTR [ebp+0x14]
640194f1:	push   DWORD PTR [ebp+0x10]
640194f4:	push   DWORD PTR [ebp+0xc]
640194f7:	push   DWORD PTR [ebp+0x8]
640194fa:	call   esi
640194fc:	jmp    0x640196b0
64019501:	cmp    eax,0x2
64019504:	je     0x6401950a
64019506:	cmp    eax,ebx
64019508:	jne    0x6401955c
6401950a:	cmp    DWORD PTR [ebp+0x8],ebx
6401950d:	mov    DWORD PTR [ebp-0xc],ebx
64019510:	jne    0x6401951a
64019512:	mov    eax,DWORD PTR [edi]
64019514:	mov    eax,DWORD PTR [eax+0x14]
64019517:	mov    DWORD PTR [ebp+0x8],eax
6401951a:	cmp    DWORD PTR [ebp+0x20],ebx
6401951d:	jne    0x64019527
6401951f:	mov    eax,DWORD PTR [edi]
64019521:	mov    eax,DWORD PTR [eax+0x4]
64019524:	mov    DWORD PTR [ebp+0x20],eax
64019527:	push   DWORD PTR [ebp+0x8]
6401952a:	call   0x6401e350
6401952f:	cmp    DWORD PTR [ebp+0x20],eax
64019532:	pop    ecx
64019533:	je     0x6401953d
64019535:	cmp    eax,0xffffffff
64019538:	je     0x6401953d
6401953a:	mov    DWORD PTR [ebp+0x20],eax
6401953d:	mov    esi,DWORD PTR ds:0x6402c014
64019543:	push   ebx
64019544:	push   ebx
64019545:	push   ebx
64019546:	push   ebx
64019547:	push   DWORD PTR [ebp+0x14]
6401954a:	push   DWORD PTR [ebp+0x10]
6401954d:	push   ebx
6401954e:	push   DWORD PTR [ebp+0x20]
64019551:	call   esi
64019553:	mov    edi,eax
64019555:	cmp    edi,ebx
64019557:	mov    DWORD PTR [ebp-0x10],edi
6401955a:	jne    0x64019563
6401955c:	xor    eax,eax
6401955e:	jmp    0x640196b0
64019563:	jle    0x640195a7
64019565:	push   0xffffffe0
64019567:	xor    edx,edx
64019569:	pop    eax
6401956a:	div    edi
6401956c:	cmp    eax,0x1
6401956f:	jb     0x640195a7
64019571:	lea    eax,[edi+0x8]
64019574:	cmp    eax,0x400
64019579:	ja     0x6401958e
6401957b:	call   0x64013d30
64019580:	mov    eax,esp
64019582:	cmp    eax,ebx
64019584:	je     0x640195a2
64019586:	mov    DWORD PTR [eax],0xcccc
6401958c:	jmp    0x6401959f
6401958e:	push   eax
6401958f:	call   0x640148ce
64019594:	cmp    eax,ebx
64019596:	pop    ecx
64019597:	je     0x640195a2
64019599:	mov    DWORD PTR [eax],0xdddd
6401959f:	add    eax,0x8
640195a2:	mov    DWORD PTR [ebp-0x8],eax
640195a5:	jmp    0x640195aa
640195a7:	mov    DWORD PTR [ebp-0x8],ebx
640195aa:	cmp    DWORD PTR [ebp-0x8],ebx
640195ad:	je     0x6401955c
640195af:	push   ebx
640195b0:	push   ebx
640195b1:	push   edi
640195b2:	push   DWORD PTR [ebp-0x8]
640195b5:	push   DWORD PTR [ebp+0x14]
640195b8:	push   DWORD PTR [ebp+0x10]
640195bb:	push   ebx
640195bc:	push   DWORD PTR [ebp+0x20]
640195bf:	call   esi
640195c1:	test   eax,eax
640195c3:	je     0x640196a4
640195c9:	push   ebx
640195ca:	push   ebx
640195cb:	push   edi
640195cc:	push   DWORD PTR [ebp-0x8]
640195cf:	mov    edi,DWORD PTR ds:0x6402c1c4
640195d5:	push   DWORD PTR [ebp+0xc]
640195d8:	push   DWORD PTR [ebp+0x8]
640195db:	call   edi
640195dd:	mov    esi,eax
640195df:	cmp    esi,ebx
640195e1:	je     0x640196a4
640195e7:	jle    0x64019628
640195e9:	push   0xffffffe0
640195eb:	xor    edx,edx
640195ed:	pop    eax
640195ee:	div    esi
640195f0:	cmp    eax,0x1
640195f3:	jb     0x64019628
640195f5:	lea    eax,[esi+0x8]
640195f8:	cmp    eax,0x400
640195fd:	ja     0x64019612
640195ff:	call   0x64013d30
64019604:	mov    eax,esp
64019606:	cmp    eax,ebx
64019608:	je     0x64019626
6401960a:	mov    DWORD PTR [eax],0xcccc
64019610:	jmp    0x64019623
64019612:	push   eax
64019613:	call   0x640148ce
64019618:	cmp    eax,ebx
6401961a:	pop    ecx
6401961b:	je     0x64019626
6401961d:	mov    DWORD PTR [eax],0xdddd
64019623:	add    eax,0x8
64019626:	mov    ebx,eax
64019628:	test   ebx,ebx
6401962a:	je     0x640196a4
6401962c:	push   esi
6401962d:	push   ebx
6401962e:	push   DWORD PTR [ebp-0x10]
64019631:	push   DWORD PTR [ebp-0x8]
64019634:	push   DWORD PTR [ebp+0xc]
64019637:	push   DWORD PTR [ebp+0x8]
6401963a:	call   edi
6401963c:	test   eax,eax
6401963e:	je     0x6401969d
64019640:	test   WORD PTR [ebp+0xc],0x400
64019646:	je     0x6401967c
64019648:	mov    eax,DWORD PTR [ebp+0x1c]
6401964b:	xor    edi,edi
6401964d:	cmp    eax,edi
6401964f:	mov    DWORD PTR [ebp-0xc],esi
64019652:	je     0x6401969d
64019654:	cmp    eax,esi
64019656:	jg     0x6401965b
64019658:	lea    esi,[eax-0x1]
6401965b:	push   esi
6401965c:	push   ebx
6401965d:	push   eax
6401965e:	push   DWORD PTR [ebp+0x18]
64019661:	call   0x6401e056
64019666:	add    esp,0x10
64019669:	test   eax,eax
6401966b:	je     0x6401969d
6401966d:	push   edi
6401966e:	push   edi
6401966f:	push   edi
64019670:	push   edi
64019671:	push   edi
64019672:	call   0x64013d66
64019677:	add    esp,0x14
6401967a:	jmp    0x6401969d
6401967c:	xor    eax,eax
6401967e:	cmp    DWORD PTR [ebp+0x1c],eax
64019681:	jne    0x64019687
64019683:	push   eax
64019684:	push   eax
64019685:	jmp    0x6401968d
64019687:	push   DWORD PTR [ebp+0x1c]
6401968a:	push   DWORD PTR [ebp+0x18]
6401968d:	push   esi
6401968e:	push   ebx
6401968f:	push   0x1
64019691:	push   DWORD PTR [ebp+0x20]
64019694:	call   DWORD PTR ds:0x6402c02c
6401969a:	mov    DWORD PTR [ebp-0xc],eax
6401969d:	push   ebx
6401969e:	call   0x6401431a
640196a3:	pop    ecx
640196a4:	push   DWORD PTR [ebp-0x8]
640196a7:	call   0x6401431a
640196ac:	mov    eax,DWORD PTR [ebp-0xc]
640196af:	pop    ecx
640196b0:	lea    esp,[ebp-0x1c]
640196b3:	pop    edi
640196b4:	pop    esi
640196b5:	pop    ebx
640196b6:	mov    ecx,DWORD PTR [ebp-0x4]
640196b9:	xor    ecx,ebp
640196bb:	call   0x64013d18
640196c0:	leave  
640196c1:	ret    
640196c2:	push   ebp
640196c3:	mov    ebp,esp
640196c5:	sub    esp,0x10
640196c8:	push   DWORD PTR [ebp+0x8]
640196cb:	lea    ecx,[ebp-0x10]
640196ce:	call   0x64014335
640196d3:	push   DWORD PTR [ebp+0x24]
640196d6:	lea    ecx,[ebp-0x10]
640196d9:	push   DWORD PTR [ebp+0x20]
640196dc:	push   DWORD PTR [ebp+0x1c]
640196df:	push   DWORD PTR [ebp+0x18]
640196e2:	push   DWORD PTR [ebp+0x14]
640196e5:	push   DWORD PTR [ebp+0x10]
640196e8:	push   DWORD PTR [ebp+0xc]
640196eb:	call   0x64019461
640196f0:	add    esp,0x1c
640196f3:	cmp    BYTE PTR [ebp-0x4],0x0
640196f7:	je     0x64019700
640196f9:	mov    ecx,DWORD PTR [ebp-0x8]
640196fc:	and    DWORD PTR [ecx+0x70],0xfffffffd
64019700:	leave  
64019701:	ret    
64019702:	xor    eax,eax
64019704:	cmp    DWORD PTR [esp+0x8],eax
64019708:	jbe    0x6401971d
6401970a:	mov    ecx,DWORD PTR [esp+0x4]
6401970e:	cmp    WORD PTR [ecx],0x0
64019712:	je     0x6401971d
64019714:	inc    eax
64019715:	inc    ecx
64019716:	inc    ecx
64019717:	cmp    eax,DWORD PTR [esp+0x8]
6401971b:	jb     0x6401970e
6401971d:	ret    
6401971e:	push   ebp
6401971f:	mov    ebp,esp
64019721:	push   ecx
64019722:	push   ecx
64019723:	mov    eax,DWORD PTR [ebp+0xc]
64019726:	push   esi
64019727:	mov    esi,DWORD PTR [ebp+0x8]
6401972a:	mov    DWORD PTR [ebp-0x8],eax
6401972d:	mov    eax,DWORD PTR [ebp+0x10]
64019730:	push   edi
64019731:	push   esi
64019732:	mov    DWORD PTR [ebp-0x4],eax
64019735:	call   0x6401993b
6401973a:	or     edi,0xffffffff
6401973d:	cmp    eax,edi
6401973f:	pop    ecx
64019740:	jne    0x64019753
64019742:	call   0x640166d3
64019747:	mov    DWORD PTR [eax],0x9
6401974d:	mov    eax,edi
6401974f:	mov    edx,edi
64019751:	jmp    0x6401979d
64019753:	push   DWORD PTR [ebp+0x14]
64019756:	lea    ecx,[ebp-0x4]
64019759:	push   ecx
6401975a:	push   DWORD PTR [ebp-0x8]
6401975d:	push   eax
6401975e:	call   DWORD PTR ds:0x6402c1bc
64019764:	cmp    eax,edi
64019766:	mov    DWORD PTR [ebp-0x8],eax
64019769:	jne    0x6401977e
6401976b:	call   DWORD PTR ds:0x6402c06c
64019771:	test   eax,eax
64019773:	je     0x6401977e
64019775:	push   eax
64019776:	call   0x640166f9
6401977b:	pop    ecx
6401977c:	jmp    0x6401974d
6401977e:	mov    eax,esi
64019780:	sar    eax,0x5
64019783:	mov    eax,DWORD PTR [eax*4+0x640556e0]
6401978a:	and    esi,0x1f
6401978d:	shl    esi,0x6
64019790:	lea    eax,[eax+esi*1+0x4]
64019794:	and    BYTE PTR [eax],0xfd
64019797:	mov    eax,DWORD PTR [ebp-0x8]
6401979a:	mov    edx,DWORD PTR [ebp-0x4]
6401979d:	pop    edi
6401979e:	pop    esi
6401979f:	leave  
640197a0:	ret    
640197a1:	push   0x14
640197a3:	push   0x64043ed0
640197a8:	call   0x640164d4
640197ad:	or     esi,0xffffffff
640197b0:	mov    DWORD PTR [ebp-0x24],esi
640197b3:	mov    DWORD PTR [ebp-0x20],esi
640197b6:	mov    eax,DWORD PTR [ebp+0x8]
640197b9:	cmp    eax,0xfffffffe
640197bc:	jne    0x640197da
640197be:	call   0x640166e6
640197c3:	and    DWORD PTR [eax],0x0
640197c6:	call   0x640166d3
640197cb:	mov    DWORD PTR [eax],0x9
640197d1:	mov    eax,esi
640197d3:	mov    edx,esi
640197d5:	jmp    0x640198aa
640197da:	xor    edi,edi
640197dc:	cmp    eax,edi
640197de:	jl     0x640197e8
640197e0:	cmp    eax,DWORD PTR ds:0x640556c8
640197e6:	jb     0x64019809
640197e8:	call   0x640166e6
640197ed:	mov    DWORD PTR [eax],edi
640197ef:	call   0x640166d3
640197f4:	mov    DWORD PTR [eax],0x9
640197fa:	push   edi
640197fb:	push   edi
640197fc:	push   edi
640197fd:	push   edi
640197fe:	push   edi
640197ff:	call   0x64013e62
64019804:	add    esp,0x14
64019807:	jmp    0x640197d1
64019809:	mov    ecx,eax
6401980b:	sar    ecx,0x5
6401980e:	lea    ebx,[ecx*4+0x640556e0]
64019815:	mov    esi,eax
64019817:	and    esi,0x1f
6401981a:	shl    esi,0x6
6401981d:	mov    ecx,DWORD PTR [ebx]
6401981f:	movzx  ecx,BYTE PTR [ecx+esi*1+0x4]
64019824:	and    ecx,0x1
64019827:	jne    0x6401984f
64019829:	call   0x640166e6
6401982e:	mov    DWORD PTR [eax],edi
64019830:	call   0x640166d3
64019835:	mov    DWORD PTR [eax],0x9
6401983b:	push   edi
6401983c:	push   edi
6401983d:	push   edi
6401983e:	push   edi
6401983f:	push   edi
64019840:	call   0x64013e62
64019845:	add    esp,0x14
64019848:	or     edx,0xffffffff
6401984b:	mov    eax,edx
6401984d:	jmp    0x640198aa
6401984f:	push   eax
64019850:	call   0x640199ac
64019855:	pop    ecx
64019856:	mov    DWORD PTR [ebp-0x4],edi
64019859:	mov    eax,DWORD PTR [ebx]
6401985b:	test   BYTE PTR [eax+esi*1+0x4],0x1
64019860:	je     0x6401987e
64019862:	push   DWORD PTR [ebp+0x14]
64019865:	push   DWORD PTR [ebp+0x10]
64019868:	push   DWORD PTR [ebp+0xc]
6401986b:	push   DWORD PTR [ebp+0x8]
6401986e:	call   0x6401971e
64019873:	add    esp,0x10
64019876:	mov    DWORD PTR [ebp-0x24],eax
64019879:	mov    DWORD PTR [ebp-0x20],edx
6401987c:	jmp    0x64019898
6401987e:	call   0x640166d3
64019883:	mov    DWORD PTR [eax],0x9
64019889:	call   0x640166e6
6401988e:	mov    DWORD PTR [eax],edi
64019890:	or     DWORD PTR [ebp-0x24],0xffffffff
64019894:	or     DWORD PTR [ebp-0x20],0xffffffff
64019898:	mov    DWORD PTR [ebp-0x4],0xfffffffe
6401989f:	call   0x640198b0
640198a4:	mov    eax,DWORD PTR [ebp-0x24]
640198a7:	mov    edx,DWORD PTR [ebp-0x20]
640198aa:	call   0x64016519
640198af:	ret    
640198b0:	push   DWORD PTR [ebp+0x8]
640198b3:	call   0x64019a4c
640198b8:	pop    ecx
640198b9:	ret    
640198ba:	mov    ecx,DWORD PTR [esp+0x4]
640198be:	push   ebx
640198bf:	xor    ebx,ebx
640198c1:	cmp    ecx,ebx
640198c3:	push   esi
640198c4:	push   edi
640198c5:	jl     0x64019922
640198c7:	cmp    ecx,DWORD PTR ds:0x640556c8
640198cd:	jae    0x64019922
640198cf:	mov    eax,ecx
640198d1:	sar    eax,0x5
640198d4:	mov    esi,ecx
640198d6:	lea    edi,[eax*4+0x640556e0]
640198dd:	mov    eax,DWORD PTR [edi]
640198df:	and    esi,0x1f
640198e2:	shl    esi,0x6
640198e5:	add    eax,esi
640198e7:	test   BYTE PTR [eax+0x4],0x1
640198eb:	je     0x64019922
640198ed:	cmp    DWORD PTR [eax],0xffffffff
640198f0:	je     0x64019922
640198f2:	cmp    DWORD PTR ds:0x64053a24,0x1
640198f9:	jne    0x64019918
640198fb:	sub    ecx,ebx
640198fd:	je     0x6401990f
640198ff:	dec    ecx
64019900:	je     0x6401990a
64019902:	dec    ecx
64019903:	jne    0x64019918
64019905:	push   ebx
64019906:	push   0xfffffff4
64019908:	jmp    0x64019912
6401990a:	push   ebx
6401990b:	push   0xfffffff5
6401990d:	jmp    0x64019912
6401990f:	push   ebx
64019910:	push   0xfffffff6
64019912:	call   DWORD PTR ds:0x6402c11c
64019918:	mov    eax,DWORD PTR [edi]
6401991a:	or     DWORD PTR [esi+eax*1],0xffffffff
6401991e:	xor    eax,eax
64019920:	jmp    0x64019937
64019922:	call   0x640166d3
64019927:	mov    DWORD PTR [eax],0x9
6401992d:	call   0x640166e6
64019932:	mov    DWORD PTR [eax],ebx
64019934:	or     eax,0xffffffff
64019937:	pop    edi
64019938:	pop    esi
64019939:	pop    ebx
6401993a:	ret    
6401993b:	mov    eax,DWORD PTR [esp+0x4]
6401993f:	cmp    eax,0xfffffffe
64019942:	jne    0x6401995b
64019944:	call   0x640166e6
64019949:	and    DWORD PTR [eax],0x0
6401994c:	call   0x640166d3
64019951:	mov    DWORD PTR [eax],0x9
64019957:	or     eax,0xffffffff
6401995a:	ret    
6401995b:	push   esi
6401995c:	xor    esi,esi
6401995e:	cmp    eax,esi
64019960:	jl     0x64019984
64019962:	cmp    eax,DWORD PTR ds:0x640556c8
64019968:	jae    0x64019984
6401996a:	mov    ecx,eax
6401996c:	and    eax,0x1f
6401996f:	sar    ecx,0x5
64019972:	mov    ecx,DWORD PTR [ecx*4+0x640556e0]
64019979:	shl    eax,0x6
6401997c:	add    eax,ecx
6401997e:	test   BYTE PTR [eax+0x4],0x1
64019982:	jne    0x640199a8
64019984:	call   0x640166e6
64019989:	mov    DWORD PTR [eax],esi
6401998b:	call   0x640166d3
64019990:	push   esi
64019991:	push   esi
64019992:	push   esi
64019993:	push   esi
64019994:	push   esi
64019995:	mov    DWORD PTR [eax],0x9
6401999b:	call   0x64013e62
640199a0:	add    esp,0x14
640199a3:	or     eax,0xffffffff
640199a6:	pop    esi
640199a7:	ret    
640199a8:	mov    eax,DWORD PTR [eax]
640199aa:	pop    esi
640199ab:	ret    
640199ac:	push   0xc
640199ae:	push   0x64043ef0
640199b3:	call   0x640164d4
640199b8:	mov    edi,DWORD PTR [ebp+0x8]
640199bb:	mov    eax,edi
640199bd:	sar    eax,0x5
640199c0:	mov    esi,edi
640199c2:	and    esi,0x1f
640199c5:	shl    esi,0x6
640199c8:	add    esi,DWORD PTR [eax*4+0x640556e0]
640199cf:	mov    DWORD PTR [ebp-0x1c],0x1
640199d6:	xor    ebx,ebx
640199d8:	cmp    DWORD PTR [esi+0x8],ebx
640199db:	jne    0x64019a13
640199dd:	push   0xa
640199df:	call   0x6401b49a
640199e4:	pop    ecx
640199e5:	mov    DWORD PTR [ebp-0x4],ebx
640199e8:	cmp    DWORD PTR [esi+0x8],ebx
640199eb:	jne    0x64019a07
640199ed:	push   0xfa0
640199f2:	lea    eax,[esi+0xc]
640199f5:	push   eax
640199f6:	call   0x6401e8da
640199fb:	pop    ecx
640199fc:	pop    ecx
640199fd:	test   eax,eax
640199ff:	jne    0x64019a04
64019a01:	mov    DWORD PTR [ebp-0x1c],ebx
64019a04:	inc    DWORD PTR [esi+0x8]
64019a07:	mov    DWORD PTR [ebp-0x4],0xfffffffe
64019a0e:	call   0x64019a43
64019a13:	cmp    DWORD PTR [ebp-0x1c],ebx
64019a16:	je     0x64019a35
64019a18:	mov    eax,edi
64019a1a:	sar    eax,0x5
64019a1d:	and    edi,0x1f
64019a20:	shl    edi,0x6
64019a23:	mov    eax,DWORD PTR [eax*4+0x640556e0]
64019a2a:	lea    eax,[eax+edi*1+0xc]
64019a2e:	push   eax
64019a2f:	call   DWORD PTR ds:0x6402c174
64019a35:	mov    eax,DWORD PTR [ebp-0x1c]
64019a38:	call   0x64016519
64019a3d:	ret    
64019a3e:	xor    ebx,ebx
64019a40:	mov    edi,DWORD PTR [ebp+0x8]
64019a43:	push   0xa
64019a45:	call   0x6401b3c2
64019a4a:	pop    ecx
64019a4b:	ret    
64019a4c:	mov    eax,DWORD PTR [esp+0x4]
64019a50:	mov    ecx,eax
64019a52:	and    eax,0x1f
64019a55:	sar    ecx,0x5
64019a58:	mov    ecx,DWORD PTR [ecx*4+0x640556e0]
64019a5f:	shl    eax,0x6
64019a62:	lea    eax,[ecx+eax*1+0xc]
64019a66:	push   eax
64019a67:	call   DWORD PTR ds:0x6402c178
64019a6d:	ret    
64019a6e:	int3   
64019a6f:	int3   
64019a70:	push   esi
64019a71:	mov    eax,DWORD PTR [esp+0x14]
64019a75:	or     eax,eax
64019a77:	jne    0x64019aa1
64019a79:	mov    ecx,DWORD PTR [esp+0x10]
64019a7d:	mov    eax,DWORD PTR [esp+0xc]
64019a81:	xor    edx,edx
64019a83:	div    ecx
64019a85:	mov    ebx,eax
64019a87:	mov    eax,DWORD PTR [esp+0x8]
64019a8b:	div    ecx
64019a8d:	mov    esi,eax
64019a8f:	mov    eax,ebx
64019a91:	mul    DWORD PTR [esp+0x10]
64019a95:	mov    ecx,eax
64019a97:	mov    eax,esi
64019a99:	mul    DWORD PTR [esp+0x10]
64019a9d:	add    edx,ecx
64019a9f:	jmp    0x64019ae8
64019aa1:	mov    ecx,eax
64019aa3:	mov    ebx,DWORD PTR [esp+0x10]
64019aa7:	mov    edx,DWORD PTR [esp+0xc]
64019aab:	mov    eax,DWORD PTR [esp+0x8]
64019aaf:	shr    ecx,1
64019ab1:	rcr    ebx,1
64019ab3:	shr    edx,1
64019ab5:	rcr    eax,1
64019ab7:	or     ecx,ecx
64019ab9:	jne    0x64019aaf
64019abb:	div    ebx
64019abd:	mov    esi,eax
64019abf:	mul    DWORD PTR [esp+0x14]
64019ac3:	mov    ecx,eax
64019ac5:	mov    eax,DWORD PTR [esp+0x10]
64019ac9:	mul    esi
64019acb:	add    edx,ecx
64019acd:	jb     0x64019add
64019acf:	cmp    edx,DWORD PTR [esp+0xc]
64019ad3:	ja     0x64019add
64019ad5:	jb     0x64019ae6
64019ad7:	cmp    eax,DWORD PTR [esp+0x8]
64019adb:	jbe    0x64019ae6
64019add:	dec    esi
64019ade:	sub    eax,DWORD PTR [esp+0x10]
64019ae2:	sbb    edx,DWORD PTR [esp+0x14]
64019ae6:	xor    ebx,ebx
64019ae8:	sub    eax,DWORD PTR [esp+0x8]
64019aec:	sbb    edx,DWORD PTR [esp+0xc]
64019af0:	neg    edx
64019af2:	neg    eax
64019af4:	sbb    edx,0x0
64019af7:	mov    ecx,edx
64019af9:	mov    edx,ebx
64019afb:	mov    ebx,ecx
64019afd:	mov    ecx,eax
64019aff:	mov    eax,esi
64019b01:	pop    esi
64019b02:	ret    0x10
64019b05:	mov    eax,0x64052b70
64019b0a:	ret    
64019b0b:	mov    eax,ds:0x640556c0
64019b10:	test   eax,eax
64019b12:	push   esi
64019b13:	push   0x14
64019b15:	pop    esi
64019b16:	jne    0x64019b1f
64019b18:	mov    eax,0x200
64019b1d:	jmp    0x64019b25
64019b1f:	cmp    eax,esi
64019b21:	jge    0x64019b2a
64019b23:	mov    eax,esi
64019b25:	mov    ds:0x640556c0,eax
64019b2a:	push   0x4
64019b2c:	push   eax
64019b2d:	call   0x6401632f
64019b32:	test   eax,eax
64019b34:	pop    ecx
64019b35:	pop    ecx
64019b36:	mov    ds:0x640546b4,eax
64019b3b:	jne    0x64019b5b
64019b3d:	push   0x4
64019b3f:	push   esi
64019b40:	mov    DWORD PTR ds:0x640556c0,esi
64019b46:	call   0x6401632f
64019b4b:	test   eax,eax
64019b4d:	pop    ecx
64019b4e:	pop    ecx
64019b4f:	mov    ds:0x640546b4,eax
64019b54:	jne    0x64019b5b
64019b56:	push   0x1a
64019b58:	pop    eax
64019b59:	pop    esi
64019b5a:	ret    
64019b5b:	xor    edx,edx
64019b5d:	mov    ecx,0x64052b70
64019b62:	jmp    0x64019b69
64019b64:	mov    eax,ds:0x640546b4
64019b69:	mov    DWORD PTR [edx+eax*1],ecx
64019b6c:	add    ecx,0x20
64019b6f:	add    edx,0x4
64019b72:	cmp    ecx,0x64052df0
64019b78:	jl     0x64019b64
64019b7a:	push   0xfffffffe
64019b7c:	pop    esi
64019b7d:	xor    edx,edx
64019b7f:	mov    ecx,0x64052b80
64019b84:	push   edi
64019b85:	mov    eax,edx
64019b87:	sar    eax,0x5
64019b8a:	mov    eax,DWORD PTR [eax*4+0x640556e0]
64019b91:	mov    edi,edx
64019b93:	and    edi,0x1f
64019b96:	shl    edi,0x6
64019b99:	mov    eax,DWORD PTR [edi+eax*1]
64019b9c:	cmp    eax,0xffffffff
64019b9f:	je     0x64019ba9
64019ba1:	cmp    eax,esi
64019ba3:	je     0x64019ba9
64019ba5:	test   eax,eax
64019ba7:	jne    0x64019bab
64019ba9:	mov    DWORD PTR [ecx],esi
64019bab:	add    ecx,0x20
64019bae:	inc    edx
64019baf:	cmp    ecx,0x64052be0
64019bb5:	jl     0x64019b85
64019bb7:	pop    edi
64019bb8:	xor    eax,eax
64019bba:	pop    esi
64019bbb:	ret    
64019bbc:	call   0x64019fd2
64019bc1:	cmp    BYTE PTR ds:0x64053db8,0x0
64019bc8:	je     0x64019bcf
64019bca:	call   0x6401e99f
64019bcf:	push   DWORD PTR ds:0x640546b4
64019bd5:	call   0x640147cf
64019bda:	pop    ecx
64019bdb:	ret    
64019bdc:	push   esi
64019bdd:	mov    esi,DWORD PTR [esp+0x8]
64019be1:	mov    eax,0x64052b70
64019be6:	cmp    esi,eax
64019be8:	jb     0x64019c0c
64019bea:	cmp    esi,0x64052dd0
64019bf0:	ja     0x64019c0c
64019bf2:	mov    ecx,esi
64019bf4:	sub    ecx,eax
64019bf6:	sar    ecx,0x5
64019bf9:	add    ecx,0x10
64019bfc:	push   ecx
64019bfd:	call   0x6401b49a
64019c02:	or     DWORD PTR [esi+0xc],0x8000
64019c09:	pop    ecx
64019c0a:	pop    esi
64019c0b:	ret    
64019c0c:	add    esi,0x20
64019c0f:	push   esi
64019c10:	call   DWORD PTR ds:0x6402c174
64019c16:	pop    esi
64019c17:	ret    
64019c18:	mov    eax,DWORD PTR [esp+0x4]
64019c1c:	cmp    eax,0x14
64019c1f:	jge    0x64019c37
64019c21:	add    eax,0x10
64019c24:	push   eax
64019c25:	call   0x6401b49a
64019c2a:	mov    eax,DWORD PTR [esp+0xc]
64019c2e:	or     DWORD PTR [eax+0xc],0x8000
64019c35:	pop    ecx
64019c36:	ret    
64019c37:	mov    eax,DWORD PTR [esp+0x8]
64019c3b:	add    eax,0x20
64019c3e:	push   eax
64019c3f:	call   DWORD PTR ds:0x6402c174
64019c45:	ret    
64019c46:	mov    eax,DWORD PTR [esp+0x4]
64019c4a:	mov    ecx,0x64052b70
64019c4f:	cmp    eax,ecx
64019c51:	jb     0x64019c71
64019c53:	cmp    eax,0x64052dd0
64019c58:	ja     0x64019c71
64019c5a:	and    DWORD PTR [eax+0xc],0xffff7fff
64019c61:	sub    eax,ecx
64019c63:	sar    eax,0x5
64019c66:	add    eax,0x10
64019c69:	push   eax
64019c6a:	call   0x6401b3c2
64019c6f:	pop    ecx
64019c70:	ret    
64019c71:	add    eax,0x20
64019c74:	push   eax
64019c75:	call   DWORD PTR ds:0x6402c178
64019c7b:	ret    
64019c7c:	mov    ecx,DWORD PTR [esp+0x4]
64019c80:	cmp    ecx,0x14
64019c83:	mov    eax,DWORD PTR [esp+0x8]
64019c87:	jge    0x64019c9b
64019c89:	and    DWORD PTR [eax+0xc],0xffff7fff
64019c90:	add    ecx,0x10
64019c93:	push   ecx
64019c94:	call   0x6401b3c2
64019c99:	pop    ecx
64019c9a:	ret    
64019c9b:	add    eax,0x20
64019c9e:	push   eax
64019c9f:	call   DWORD PTR ds:0x6402c178
64019ca5:	ret    
64019ca6:	int3   
64019ca7:	int3   
64019ca8:	push   ebx
64019ca9:	push   esi
64019caa:	push   edi
64019cab:	mov    edx,DWORD PTR [esp+0x10]
64019caf:	mov    eax,DWORD PTR [esp+0x14]
64019cb3:	mov    ecx,DWORD PTR [esp+0x18]
64019cb7:	push   ebp
64019cb8:	push   edx
64019cb9:	push   eax
64019cba:	push   ecx
64019cbb:	push   ecx
64019cbc:	push   0x64019d38
64019cc1:	push   DWORD PTR fs:0x0
64019cc8:	mov    eax,ds:0x640521ac
64019ccd:	xor    eax,esp
64019ccf:	mov    DWORD PTR [esp+0x8],eax
64019cd3:	mov    DWORD PTR fs:0x0,esp
64019cda:	mov    eax,DWORD PTR [esp+0x30]
64019cde:	mov    ebx,DWORD PTR [eax+0x8]
64019ce1:	mov    ecx,DWORD PTR [esp+0x2c]
64019ce5:	xor    ebx,DWORD PTR [ecx]
64019ce7:	mov    esi,DWORD PTR [eax+0xc]
64019cea:	cmp    esi,0xfffffffe
64019ced:	je     0x64019d2a
64019cef:	mov    edx,DWORD PTR [esp+0x34]
64019cf3:	cmp    edx,0xfffffffe
64019cf6:	je     0x64019cfc
64019cf8:	cmp    esi,edx
64019cfa:	jbe    0x64019d2a
64019cfc:	lea    esi,[esi+esi*2]
64019cff:	lea    ebx,[ebx+esi*4+0x10]
64019d03:	mov    ecx,DWORD PTR [ebx]
64019d05:	mov    DWORD PTR [eax+0xc],ecx
64019d08:	cmp    DWORD PTR [ebx+0x4],0x0
64019d0c:	jne    0x64019cda
64019d0e:	push   0x101
64019d13:	mov    eax,DWORD PTR [ebx+0x8]
64019d16:	call   0x6401e875
64019d1b:	mov    ecx,0x1
64019d20:	mov    eax,DWORD PTR [ebx+0x8]
64019d23:	call   0x6401e894
64019d28:	jmp    0x64019cda
64019d2a:	pop    DWORD PTR fs:0x0
64019d31:	add    esp,0x18
64019d34:	pop    edi
64019d35:	pop    esi
64019d36:	pop    ebx
64019d37:	ret    
64019d38:	mov    ecx,DWORD PTR [esp+0x4]
64019d3c:	test   DWORD PTR [ecx+0x4],0x6
64019d43:	mov    eax,0x1
64019d48:	je     0x64019d7d
64019d4a:	mov    eax,DWORD PTR [esp+0x8]
64019d4e:	mov    ecx,DWORD PTR [eax+0x8]
64019d51:	xor    ecx,eax
64019d53:	call   0x64013d18
64019d58:	push   ebp
64019d59:	mov    ebp,DWORD PTR [eax+0x18]
64019d5c:	push   DWORD PTR [eax+0xc]
64019d5f:	push   DWORD PTR [eax+0x10]
64019d62:	push   DWORD PTR [eax+0x14]
64019d65:	call   0x64019ca8
64019d6a:	add    esp,0xc
64019d6d:	pop    ebp
64019d6e:	mov    eax,DWORD PTR [esp+0x8]
64019d72:	mov    edx,DWORD PTR [esp+0x10]
64019d76:	mov    DWORD PTR [edx],eax
64019d78:	mov    eax,0x3
64019d7d:	ret    
64019d7e:	push   ebp
64019d7f:	mov    ecx,DWORD PTR [esp+0x8]
64019d83:	mov    ebp,DWORD PTR [ecx]
64019d85:	push   DWORD PTR [ecx+0x1c]
64019d88:	push   DWORD PTR [ecx+0x18]
64019d8b:	push   DWORD PTR [ecx+0x28]
64019d8e:	call   0x64019ca8
64019d93:	add    esp,0xc
64019d96:	pop    ebp
64019d97:	ret    0x4
64019d9a:	push   ebp
64019d9b:	push   esi
64019d9c:	push   edi
64019d9d:	push   ebx
64019d9e:	mov    ebp,edx
64019da0:	xor    eax,eax
64019da2:	xor    ebx,ebx
64019da4:	xor    edx,edx
64019da6:	xor    esi,esi
64019da8:	xor    edi,edi
64019daa:	call   ecx
64019dac:	pop    ebx
64019dad:	pop    edi
64019dae:	pop    esi
64019daf:	pop    ebp
64019db0:	ret    
64019db1:	mov    ebp,edx
64019db3:	mov    esi,ecx
64019db5:	mov    eax,ecx
64019db7:	push   0x1
64019db9:	call   0x6401e875
64019dbe:	xor    eax,eax
64019dc0:	xor    ebx,ebx
64019dc2:	xor    ecx,ecx
64019dc4:	xor    edx,edx
64019dc6:	xor    edi,edi
64019dc8:	jmp    esi
64019dca:	push   ebp
64019dcb:	mov    ebp,esp
64019dcd:	push   ebx
64019dce:	push   esi
64019dcf:	push   edi
64019dd0:	push   0x0
64019dd2:	push   0x0
64019dd4:	push   0x64019ddf
64019dd9:	push   ecx
64019dda:	call   0x64022e8c
64019ddf:	pop    edi
64019de0:	pop    esi
64019de1:	pop    ebx
64019de2:	pop    ebp
64019de3:	ret    
64019de4:	push   ebp
64019de5:	mov    ebp,DWORD PTR [esp+0x8]
64019de9:	push   edx
64019dea:	push   ecx
64019deb:	push   DWORD PTR [esp+0x14]
64019def:	call   0x64019ca8
64019df4:	add    esp,0xc
64019df7:	pop    ebp
64019df8:	ret    0x8
64019dfb:	mov    eax,DWORD PTR [esp+0x4]
64019dff:	push   esi
64019e00:	xor    esi,esi
64019e02:	cmp    eax,esi
64019e04:	jne    0x64019e23
64019e06:	call   0x640166d3
64019e0b:	push   esi
64019e0c:	push   esi
64019e0d:	push   esi
64019e0e:	push   esi
64019e0f:	push   esi
64019e10:	mov    DWORD PTR [eax],0x16
64019e16:	call   0x64013e62
64019e1b:	add    esp,0x14
64019e1e:	or     eax,0xffffffff
64019e21:	pop    esi
64019e22:	ret    
64019e23:	mov    eax,DWORD PTR [eax+0x10]
64019e26:	pop    esi
64019e27:	ret    
64019e28:	push   esi
64019e29:	mov    esi,DWORD PTR [esp+0x8]
64019e2d:	mov    eax,DWORD PTR [esi+0xc]
64019e30:	test   al,0x83
64019e32:	je     0x64019e52
64019e34:	test   al,0x8
64019e36:	je     0x64019e52
64019e38:	push   DWORD PTR [esi+0x8]
64019e3b:	call   0x640147cf
64019e40:	and    DWORD PTR [esi+0xc],0xfffffbf7
64019e47:	xor    eax,eax
64019e49:	pop    ecx
64019e4a:	mov    DWORD PTR [esi],eax
64019e4c:	mov    DWORD PTR [esi+0x8],eax
64019e4f:	mov    DWORD PTR [esi+0x4],eax
64019e52:	pop    esi
64019e53:	ret    
64019e54:	push   ebx
64019e55:	push   esi
64019e56:	mov    esi,DWORD PTR [esp+0xc]
64019e5a:	mov    eax,DWORD PTR [esi+0xc]
64019e5d:	mov    ecx,eax
64019e5f:	and    cl,0x3
64019e62:	xor    ebx,ebx
64019e64:	cmp    cl,0x2
64019e67:	jne    0x64019ea8
64019e69:	test   ax,0x108
64019e6d:	je     0x64019ea8
64019e6f:	mov    eax,DWORD PTR [esi+0x8]
64019e72:	push   edi
64019e73:	mov    edi,DWORD PTR [esi]
64019e75:	sub    edi,eax
64019e77:	test   edi,edi
64019e79:	jle    0x64019ea7
64019e7b:	push   edi
64019e7c:	push   eax
64019e7d:	push   esi
64019e7e:	call   0x64019dfb
64019e83:	pop    ecx
64019e84:	push   eax
64019e85:	call   0x6401b248
64019e8a:	add    esp,0xc
64019e8d:	cmp    eax,edi
64019e8f:	jne    0x64019ea0
64019e91:	mov    eax,DWORD PTR [esi+0xc]
64019e94:	test   al,al
64019e96:	jns    0x64019ea7
64019e98:	and    eax,0xfffffffd
64019e9b:	mov    DWORD PTR [esi+0xc],eax
64019e9e:	jmp    0x64019ea7
64019ea0:	or     DWORD PTR [esi+0xc],0x20
64019ea4:	or     ebx,0xffffffff
64019ea7:	pop    edi
64019ea8:	mov    eax,DWORD PTR [esi+0x8]
64019eab:	and    DWORD PTR [esi+0x4],0x0
64019eaf:	mov    DWORD PTR [esi],eax
64019eb1:	pop    esi
64019eb2:	mov    eax,ebx
64019eb4:	pop    ebx
64019eb5:	ret    
64019eb6:	push   esi
64019eb7:	mov    esi,DWORD PTR [esp+0x8]
64019ebb:	test   esi,esi
64019ebd:	jne    0x64019ec8
64019ebf:	push   esi
64019ec0:	call   0x64019ef8
64019ec5:	pop    ecx
64019ec6:	pop    esi
64019ec7:	ret    
64019ec8:	push   esi
64019ec9:	call   0x64019e54
64019ece:	test   eax,eax
64019ed0:	pop    ecx
64019ed1:	je     0x64019ed8
64019ed3:	or     eax,0xffffffff
64019ed6:	pop    esi
64019ed7:	ret    
64019ed8:	test   WORD PTR [esi+0xc],0x4000
64019ede:	je     0x64019ef4
64019ee0:	push   esi
64019ee1:	call   0x64019dfb
64019ee6:	push   eax
64019ee7:	call   0x6401ea3e
64019eec:	pop    ecx
64019eed:	pop    ecx
64019eee:	neg    eax
64019ef0:	sbb    eax,eax
64019ef2:	pop    esi
64019ef3:	ret    
64019ef4:	xor    eax,eax
64019ef6:	pop    esi
64019ef7:	ret    
64019ef8:	push   0x14
64019efa:	push   0x64043f10
64019eff:	call   0x640164d4
64019f04:	xor    edi,edi
64019f06:	mov    DWORD PTR [ebp-0x1c],edi
64019f09:	mov    DWORD PTR [ebp-0x24],edi
64019f0c:	push   0x1
64019f0e:	call   0x6401b49a
64019f13:	pop    ecx
64019f14:	mov    DWORD PTR [ebp-0x4],edi
64019f17:	xor    esi,esi
64019f19:	mov    DWORD PTR [ebp-0x20],esi
64019f1c:	cmp    esi,DWORD PTR ds:0x640556c0
64019f22:	jge    0x64019fab
64019f28:	mov    eax,ds:0x640546b4
64019f2d:	lea    eax,[eax+esi*4]
64019f30:	cmp    DWORD PTR [eax],edi
64019f32:	je     0x64019f92
64019f34:	mov    eax,DWORD PTR [eax]
64019f36:	test   BYTE PTR [eax+0xc],0x83
64019f3a:	je     0x64019f92
64019f3c:	push   eax
64019f3d:	push   esi
64019f3e:	call   0x64019c18
64019f43:	pop    ecx
64019f44:	pop    ecx
64019f45:	xor    edx,edx
64019f47:	inc    edx
64019f48:	mov    DWORD PTR [ebp-0x4],edx
64019f4b:	mov    eax,ds:0x640546b4
64019f50:	mov    eax,DWORD PTR [eax+esi*4]
64019f53:	mov    ecx,DWORD PTR [eax+0xc]
64019f56:	test   cl,0x83
64019f59:	je     0x64019f8a
64019f5b:	cmp    DWORD PTR [ebp+0x8],edx
64019f5e:	jne    0x64019f71
64019f60:	push   eax
64019f61:	call   0x64019eb6
64019f66:	pop    ecx
64019f67:	cmp    eax,0xffffffff
64019f6a:	je     0x64019f8a
64019f6c:	inc    DWORD PTR [ebp-0x1c]
64019f6f:	jmp    0x64019f8a
64019f71:	cmp    DWORD PTR [ebp+0x8],edi
64019f74:	jne    0x64019f8a
64019f76:	test   cl,0x2
64019f79:	je     0x64019f8a
64019f7b:	push   eax
64019f7c:	call   0x64019eb6
64019f81:	pop    ecx
64019f82:	cmp    eax,0xffffffff
64019f85:	jne    0x64019f8a
64019f87:	or     DWORD PTR [ebp-0x24],eax
64019f8a:	mov    DWORD PTR [ebp-0x4],edi
64019f8d:	call   0x64019f9a
64019f92:	inc    esi
64019f93:	jmp    0x64019f19
64019f95:	xor    edi,edi
64019f97:	mov    esi,DWORD PTR [ebp-0x20]
64019f9a:	mov    eax,ds:0x640546b4
64019f9f:	push   DWORD PTR [eax+esi*4]
64019fa2:	push   esi
64019fa3:	call   0x64019c7c
64019fa8:	pop    ecx
64019fa9:	pop    ecx
64019faa:	ret    
64019fab:	mov    DWORD PTR [ebp-0x4],0xfffffffe
64019fb2:	call   0x64019fc9
64019fb7:	cmp    DWORD PTR [ebp+0x8],0x1
64019fbb:	mov    eax,DWORD PTR [ebp-0x1c]
64019fbe:	je     0x64019fc3
64019fc0:	mov    eax,DWORD PTR [ebp-0x24]
64019fc3:	call   0x64016519
64019fc8:	ret    
64019fc9:	push   0x1
64019fcb:	call   0x6401b3c2
64019fd0:	pop    ecx
64019fd1:	ret    
64019fd2:	push   0x1
64019fd4:	call   0x64019ef8
64019fd9:	pop    ecx
64019fda:	ret    
64019fdb:	push   ebp
64019fdc:	mov    ebp,esp
64019fde:	push   ecx
64019fdf:	push   esi
64019fe0:	mov    esi,DWORD PTR [ebp+0xc]
64019fe3:	push   esi
64019fe4:	call   0x64019dfb
64019fe9:	mov    DWORD PTR [ebp+0xc],eax
64019fec:	mov    eax,DWORD PTR [esi+0xc]
64019fef:	test   al,0x82
64019ff1:	pop    ecx
64019ff2:	jne    0x6401a00b
64019ff4:	call   0x640166d3
64019ff9:	mov    DWORD PTR [eax],0x9
64019fff:	or     DWORD PTR [esi+0xc],0x20
6401a003:	or     eax,0xffffffff
6401a006:	jmp    0x6401a138
6401a00b:	test   al,0x40
6401a00d:	je     0x6401a01c
6401a00f:	call   0x640166d3
6401a014:	mov    DWORD PTR [eax],0x22
6401a01a:	jmp    0x64019fff
6401a01c:	push   ebx
6401a01d:	xor    ebx,ebx
6401a01f:	test   al,0x1
6401a021:	je     0x6401a039
6401a023:	test   al,0x10
6401a025:	mov    DWORD PTR [esi+0x4],ebx
6401a028:	je     0x6401a0b3
6401a02e:	mov    ecx,DWORD PTR [esi+0x8]
6401a031:	and    eax,0xfffffffe
6401a034:	mov    DWORD PTR [esi],ecx
6401a036:	mov    DWORD PTR [esi+0xc],eax
6401a039:	mov    eax,DWORD PTR [esi+0xc]
6401a03c:	and    eax,0xffffffef
6401a03f:	or     eax,0x2
6401a042:	test   ax,0x10c
6401a046:	mov    DWORD PTR [esi+0xc],eax
6401a049:	mov    DWORD PTR [esi+0x4],ebx
6401a04c:	mov    DWORD PTR [ebp-0x4],ebx
6401a04f:	jne    0x6401a07d
6401a051:	call   0x64019b05
6401a056:	add    eax,0x20
6401a059:	cmp    esi,eax
6401a05b:	je     0x6401a069
6401a05d:	call   0x64019b05
6401a062:	add    eax,0x40
6401a065:	cmp    esi,eax
6401a067:	jne    0x6401a076
6401a069:	push   DWORD PTR [ebp+0xc]
6401a06c:	call   0x6401eb63
6401a071:	test   eax,eax
6401a073:	pop    ecx
6401a074:	jne    0x6401a07d
6401a076:	push   esi
6401a077:	call   0x6401eb1f
6401a07c:	pop    ecx
6401a07d:	test   WORD PTR [esi+0xc],0x108
6401a083:	push   edi
6401a084:	je     0x6401a10a
6401a08a:	mov    eax,DWORD PTR [esi+0x8]
6401a08d:	mov    edi,DWORD PTR [esi]
6401a08f:	lea    ecx,[eax+0x1]
6401a092:	mov    DWORD PTR [esi],ecx
6401a094:	mov    ecx,DWORD PTR [esi+0x18]
6401a097:	sub    edi,eax
6401a099:	dec    ecx
6401a09a:	cmp    edi,ebx
6401a09c:	mov    DWORD PTR [esi+0x4],ecx
6401a09f:	jle    0x6401a0be
6401a0a1:	push   edi
6401a0a2:	push   eax
6401a0a3:	push   DWORD PTR [ebp+0xc]
6401a0a6:	call   0x6401b248
6401a0ab:	add    esp,0xc
6401a0ae:	mov    DWORD PTR [ebp-0x4],eax
6401a0b1:	jmp    0x6401a100
6401a0b3:	or     eax,0x20
6401a0b6:	mov    DWORD PTR [esi+0xc],eax
6401a0b9:	or     eax,0xffffffff
6401a0bc:	jmp    0x6401a137
6401a0be:	mov    ecx,DWORD PTR [ebp+0xc]
6401a0c1:	cmp    ecx,0xffffffff
6401a0c4:	je     0x6401a0e1
6401a0c6:	cmp    ecx,0xfffffffe
6401a0c9:	je     0x6401a0e1
6401a0cb:	mov    eax,ecx
6401a0cd:	and    eax,0x1f
6401a0d0:	mov    edx,ecx
6401a0d2:	sar    edx,0x5
6401a0d5:	shl    eax,0x6
6401a0d8:	add    eax,DWORD PTR [edx*4+0x640556e0]
6401a0df:	jmp    0x6401a0e6
6401a0e1:	mov    eax,0x64052488
6401a0e6:	test   BYTE PTR [eax+0x4],0x20
6401a0ea:	je     0x6401a100
6401a0ec:	push   0x2
6401a0ee:	push   ebx
6401a0ef:	push   ebx
6401a0f0:	push   ecx
6401a0f1:	call   0x640197a1
6401a0f6:	and    eax,edx
6401a0f8:	add    esp,0x10
6401a0fb:	cmp    eax,0xffffffff
6401a0fe:	je     0x6401a125
6401a100:	mov    eax,DWORD PTR [esi+0x8]
6401a103:	mov    cl,BYTE PTR [ebp+0x8]
6401a106:	mov    BYTE PTR [eax],cl
6401a108:	jmp    0x6401a120
6401a10a:	xor    edi,edi
6401a10c:	inc    edi
6401a10d:	push   edi
6401a10e:	lea    eax,[ebp+0x8]
6401a111:	push   eax
6401a112:	push   DWORD PTR [ebp+0xc]
6401a115:	call   0x6401b248
6401a11a:	add    esp,0xc
6401a11d:	mov    DWORD PTR [ebp-0x4],eax
6401a120:	cmp    DWORD PTR [ebp-0x4],edi
6401a123:	je     0x6401a12e
6401a125:	or     DWORD PTR [esi+0xc],0x20
6401a129:	or     eax,0xffffffff
6401a12c:	jmp    0x6401a136
6401a12e:	mov    eax,DWORD PTR [ebp+0x8]
6401a131:	and    eax,0xff
6401a136:	pop    edi
6401a137:	pop    ebx
6401a138:	pop    esi
6401a139:	leave  
6401a13a:	ret    
6401a13b:	test   BYTE PTR [ecx+0xc],0x40
6401a13f:	je     0x6401a147
6401a141:	cmp    DWORD PTR [ecx+0x8],0x0
6401a145:	je     0x6401a16b
6401a147:	dec    DWORD PTR [ecx+0x4]
6401a14a:	js     0x6401a157
6401a14c:	mov    edx,DWORD PTR [ecx]
6401a14e:	mov    BYTE PTR [edx],al
6401a150:	inc    DWORD PTR [ecx]
6401a152:	movzx  eax,al
6401a155:	jmp    0x6401a163
6401a157:	movsx  eax,al
6401a15a:	push   ecx
6401a15b:	push   eax
6401a15c:	call   0x64019fdb
6401a161:	pop    ecx
6401a162:	pop    ecx
6401a163:	cmp    eax,0xffffffff
6401a166:	jne    0x6401a16b
6401a168:	or     DWORD PTR [esi],eax
6401a16a:	ret    
6401a16b:	inc    DWORD PTR [esi]
6401a16d:	ret    
6401a16e:	push   ebp
6401a16f:	mov    ebp,esp
6401a171:	push   esi
6401a172:	mov    esi,eax
6401a174:	jmp    0x6401a189
6401a176:	mov    ecx,DWORD PTR [ebp+0x10]
6401a179:	mov    al,BYTE PTR [ebp+0x8]
6401a17c:	dec    DWORD PTR [ebp+0xc]
6401a17f:	call   0x6401a13b
6401a184:	cmp    DWORD PTR [esi],0xffffffff
6401a187:	je     0x6401a18f
6401a189:	cmp    DWORD PTR [ebp+0xc],0x0
6401a18d:	jg     0x6401a176
6401a18f:	pop    esi
6401a190:	pop    ebp
6401a191:	ret    
6401a192:	test   BYTE PTR [edi+0xc],0x40
6401a196:	push   ebx
6401a197:	push   esi
6401a198:	mov    esi,eax
6401a19a:	mov    ebx,ecx
6401a19c:	je     0x6401a1d2
6401a19e:	cmp    DWORD PTR [edi+0x8],0x0
6401a1a2:	jne    0x6401a1d2
6401a1a4:	mov    eax,DWORD PTR [esp+0xc]
6401a1a8:	add    DWORD PTR [esi],eax
6401a1aa:	jmp    0x6401a1d9
6401a1ac:	mov    al,BYTE PTR [ebx]
6401a1ae:	dec    DWORD PTR [esp+0xc]
6401a1b2:	mov    ecx,edi
6401a1b4:	call   0x6401a13b
6401a1b9:	inc    ebx
6401a1ba:	cmp    DWORD PTR [esi],0xffffffff
6401a1bd:	jne    0x6401a1d2
6401a1bf:	call   0x640166d3
6401a1c4:	cmp    DWORD PTR [eax],0x2a
6401a1c7:	jne    0x6401a1d9
6401a1c9:	mov    ecx,edi
6401a1cb:	mov    al,0x3f
6401a1cd:	call   0x6401a13b
6401a1d2:	cmp    DWORD PTR [esp+0xc],0x0
6401a1d7:	jg     0x6401a1ac
6401a1d9:	pop    esi
6401a1da:	pop    ebx
6401a1db:	ret    
6401a1dc:	push   ebp
6401a1dd:	lea    ebp,[esp-0x1f8]
6401a1e4:	sub    esp,0x278
6401a1ea:	mov    eax,ds:0x640521ac
6401a1ef:	xor    eax,ebp
6401a1f1:	mov    DWORD PTR [ebp+0x1f4],eax
6401a1f7:	mov    eax,DWORD PTR [ebp+0x200]
6401a1fd:	push   ebx
6401a1fe:	mov    ebx,DWORD PTR [ebp+0x204]
6401a204:	push   esi
6401a205:	xor    esi,esi
6401a207:	push   edi
6401a208:	mov    edi,DWORD PTR [ebp+0x20c]
6401a20e:	push   DWORD PTR [ebp+0x208]
6401a214:	lea    ecx,[ebp-0x64]
6401a217:	mov    DWORD PTR [ebp-0x30],eax
6401a21a:	mov    DWORD PTR [ebp-0x2c],edi
6401a21d:	mov    DWORD PTR [ebp-0x4c],esi
6401a220:	mov    DWORD PTR [ebp-0x18],esi
6401a223:	mov    DWORD PTR [ebp-0x40],esi
6401a226:	mov    DWORD PTR [ebp-0x20],esi
6401a229:	mov    DWORD PTR [ebp-0x3c],esi
6401a22c:	mov    DWORD PTR [ebp-0x50],esi
6401a22f:	mov    DWORD PTR [ebp-0x44],esi
6401a232:	call   0x64014335
6401a237:	cmp    DWORD PTR [ebp-0x30],esi
6401a23a:	jne    0x6401a269
6401a23c:	call   0x640166d3
6401a241:	push   esi
6401a242:	push   esi
6401a243:	push   esi
6401a244:	push   esi
6401a245:	mov    DWORD PTR [eax],0x16
6401a24b:	push   esi
6401a24c:	call   0x64013e62
6401a251:	add    esp,0x14
6401a254:	cmp    BYTE PTR [ebp-0x58],0x0
6401a258:	je     0x6401a261
6401a25a:	mov    eax,DWORD PTR [ebp-0x5c]
6401a25d:	and    DWORD PTR [eax+0x70],0xfffffffd
6401a261:	or     eax,0xffffffff
6401a264:	jmp    0x6401ab38
6401a269:	mov    eax,DWORD PTR [ebp-0x30]
6401a26c:	test   BYTE PTR [eax+0xc],0x40
6401a270:	jne    0x6401a31a
6401a276:	push   eax
6401a277:	call   0x64019dfb
6401a27c:	cmp    eax,0xffffffff
6401a27f:	pop    ecx
6401a280:	je     0x6401a2b8
6401a282:	push   DWORD PTR [ebp-0x30]
6401a285:	call   0x64019dfb
6401a28a:	cmp    eax,0xfffffffe
6401a28d:	pop    ecx
6401a28e:	je     0x6401a2b8
6401a290:	push   DWORD PTR [ebp-0x30]
6401a293:	call   0x64019dfb
6401a298:	push   DWORD PTR [ebp-0x30]
6401a29b:	sar    eax,0x5
6401a29e:	lea    esi,[eax*4+0x640556e0]
6401a2a5:	call   0x64019dfb
6401a2aa:	and    eax,0x1f
6401a2ad:	shl    eax,0x6
6401a2b0:	add    eax,DWORD PTR [esi]
6401a2b2:	pop    ecx
6401a2b3:	pop    ecx
6401a2b4:	xor    esi,esi
6401a2b6:	jmp    0x6401a2bd
6401a2b8:	mov    eax,0x64052488
6401a2bd:	test   BYTE PTR [eax+0x24],0x7f
6401a2c1:	jne    0x6401a23c
6401a2c7:	push   DWORD PTR [ebp-0x30]
6401a2ca:	call   0x64019dfb
6401a2cf:	cmp    eax,0xffffffff
6401a2d2:	pop    ecx
6401a2d3:	je     0x6401a30b
6401a2d5:	push   DWORD PTR [ebp-0x30]
6401a2d8:	call   0x64019dfb
6401a2dd:	cmp    eax,0xfffffffe
6401a2e0:	pop    ecx
6401a2e1:	je     0x6401a30b
6401a2e3:	push   DWORD PTR [ebp-0x30]
6401a2e6:	call   0x64019dfb
6401a2eb:	push   DWORD PTR [ebp-0x30]
6401a2ee:	sar    eax,0x5
6401a2f1:	lea    esi,[eax*4+0x640556e0]
6401a2f8:	call   0x64019dfb
6401a2fd:	and    eax,0x1f
6401a300:	shl    eax,0x6
6401a303:	add    eax,DWORD PTR [esi]
6401a305:	pop    ecx
6401a306:	pop    ecx
6401a307:	xor    esi,esi
6401a309:	jmp    0x6401a310
6401a30b:	mov    eax,0x64052488
6401a310:	test   BYTE PTR [eax+0x24],0x80
6401a314:	jne    0x6401a23c
6401a31a:	cmp    ebx,esi
6401a31c:	je     0x6401a23c
6401a322:	mov    dl,BYTE PTR [ebx]
6401a324:	xor    ecx,ecx
6401a326:	test   dl,dl
6401a328:	mov    DWORD PTR [ebp-0x34],esi
6401a32b:	mov    DWORD PTR [ebp-0x28],esi
6401a32e:	mov    DWORD PTR [ebp-0x54],esi
6401a331:	mov    BYTE PTR [ebp-0x19],dl
6401a334:	je     0x6401ab28
6401a33a:	inc    ebx
6401a33b:	cmp    DWORD PTR [ebp-0x34],0x0
6401a33f:	mov    DWORD PTR [ebp-0x48],ebx
6401a342:	jl     0x6401ab28
6401a348:	mov    al,dl
6401a34a:	sub    al,0x20
6401a34c:	cmp    al,0x58
6401a34e:	ja     0x6401a361
6401a350:	movsx  eax,dl
6401a353:	movzx  eax,BYTE PTR [eax+0x640409a8]
6401a35a:	and    eax,0xf
6401a35d:	xor    esi,esi
6401a35f:	jmp    0x6401a365
6401a361:	xor    esi,esi
6401a363:	xor    eax,eax
6401a365:	movsx  eax,BYTE PTR [ecx+eax*8+0x640409c8]
6401a36d:	push   0x7
6401a36f:	sar    eax,0x4
6401a372:	pop    ecx
6401a373:	cmp    eax,ecx
6401a375:	mov    DWORD PTR [ebp-0x74],eax
6401a378:	ja     0x6401aaf8
6401a37e:	jmp    DWORD PTR [eax*4+0x6401ab50]
6401a385:	or     DWORD PTR [ebp-0x20],0xffffffff
6401a389:	mov    DWORD PTR [ebp-0x78],esi
6401a38c:	mov    DWORD PTR [ebp-0x50],esi
6401a38f:	mov    DWORD PTR [ebp-0x40],esi
6401a392:	mov    DWORD PTR [ebp-0x3c],esi
6401a395:	mov    DWORD PTR [ebp-0x18],esi
6401a398:	mov    DWORD PTR [ebp-0x44],esi
6401a39b:	jmp    0x6401aaf8
6401a3a0:	movsx  eax,dl
6401a3a3:	sub    eax,0x20
6401a3a6:	je     0x6401a3e6
6401a3a8:	sub    eax,0x3
6401a3ab:	je     0x6401a3da
6401a3ad:	sub    eax,0x8
6401a3b0:	je     0x6401a3d1
6401a3b2:	dec    eax
6401a3b3:	dec    eax
6401a3b4:	je     0x6401a3c8
6401a3b6:	sub    eax,0x3
6401a3b9:	jne    0x6401aaf8
6401a3bf:	or     DWORD PTR [ebp-0x18],0x8
6401a3c3:	jmp    0x6401aaf8
6401a3c8:	or     DWORD PTR [ebp-0x18],0x4
6401a3cc:	jmp    0x6401aaf8
6401a3d1:	or     DWORD PTR [ebp-0x18],0x1
6401a3d5:	jmp    0x6401aaf8
6401a3da:	or     DWORD PTR [ebp-0x18],0x80
6401a3e1:	jmp    0x6401aaf8
6401a3e6:	or     DWORD PTR [ebp-0x18],0x2
6401a3ea:	jmp    0x6401aaf8
6401a3ef:	cmp    dl,0x2a
6401a3f2:	jne    0x6401a414
6401a3f4:	add    edi,0x4
6401a3f7:	mov    DWORD PTR [ebp-0x2c],edi
6401a3fa:	mov    edi,DWORD PTR [edi-0x4]
6401a3fd:	cmp    edi,esi
6401a3ff:	mov    DWORD PTR [ebp-0x40],edi
6401a402:	jge    0x6401aaf8
6401a408:	or     DWORD PTR [ebp-0x18],0x4
6401a40c:	neg    DWORD PTR [ebp-0x40]
6401a40f:	jmp    0x6401aaf8
6401a414:	mov    eax,DWORD PTR [ebp-0x40]
6401a417:	imul   eax,eax,0xa
6401a41a:	movsx  ecx,dl
6401a41d:	lea    eax,[eax+ecx*1-0x30]
6401a421:	mov    DWORD PTR [ebp-0x40],eax
6401a424:	jmp    0x6401aaf8
6401a429:	mov    DWORD PTR [ebp-0x20],esi
6401a42c:	jmp    0x6401aaf8
6401a431:	cmp    dl,0x2a
6401a434:	jne    0x6401a453
6401a436:	add    edi,0x4
6401a439:	mov    DWORD PTR [ebp-0x2c],edi
6401a43c:	mov    edi,DWORD PTR [edi-0x4]
6401a43f:	cmp    edi,esi
6401a441:	mov    DWORD PTR [ebp-0x20],edi
6401a444:	jge    0x6401aaf8
6401a44a:	or     DWORD PTR [ebp-0x20],0xffffffff
6401a44e:	jmp    0x6401aaf8
6401a453:	mov    eax,DWORD PTR [ebp-0x20]
6401a456:	imul   eax,eax,0xa
6401a459:	movsx  ecx,dl
6401a45c:	lea    eax,[eax+ecx*1-0x30]
6401a460:	mov    DWORD PTR [ebp-0x20],eax
6401a463:	jmp    0x6401aaf8
6401a468:	cmp    dl,0x49
6401a46b:	je     0x6401a4b3
6401a46d:	cmp    dl,0x68
6401a470:	je     0x6401a4aa
6401a472:	cmp    dl,0x6c
6401a475:	je     0x6401a48c
6401a477:	cmp    dl,0x77
6401a47a:	jne    0x6401aaf8
6401a480:	or     DWORD PTR [ebp-0x18],0x800
6401a487:	jmp    0x6401aaf8
6401a48c:	cmp    BYTE PTR [ebx],0x6c
6401a48f:	jne    0x6401a4a1
6401a491:	inc    ebx
6401a492:	or     DWORD PTR [ebp-0x18],0x1000
6401a499:	mov    DWORD PTR [ebp-0x48],ebx
6401a49c:	jmp    0x6401aaf8
6401a4a1:	or     DWORD PTR [ebp-0x18],0x10
6401a4a5:	jmp    0x6401aaf8
6401a4aa:	or     DWORD PTR [ebp-0x18],0x20
6401a4ae:	jmp    0x6401aaf8
6401a4b3:	mov    al,BYTE PTR [ebx]
6401a4b5:	cmp    al,0x36
6401a4b7:	jne    0x6401a4d0
6401a4b9:	cmp    BYTE PTR [ebx+0x1],0x34
6401a4bd:	jne    0x6401a4d0
6401a4bf:	inc    ebx
6401a4c0:	inc    ebx
6401a4c1:	or     DWORD PTR [ebp-0x18],0x8000
6401a4c8:	mov    DWORD PTR [ebp-0x48],ebx
6401a4cb:	jmp    0x6401aaf8
6401a4d0:	cmp    al,0x33
6401a4d2:	jne    0x6401a4eb
6401a4d4:	cmp    BYTE PTR [ebx+0x1],0x32
6401a4d8:	jne    0x6401a4eb
6401a4da:	inc    ebx
6401a4db:	inc    ebx
6401a4dc:	and    DWORD PTR [ebp-0x18],0xffff7fff
6401a4e3:	mov    DWORD PTR [ebp-0x48],ebx
6401a4e6:	jmp    0x6401aaf8
6401a4eb:	cmp    al,0x64
6401a4ed:	je     0x6401aaf8
6401a4f3:	cmp    al,0x69
6401a4f5:	je     0x6401aaf8
6401a4fb:	cmp    al,0x6f
6401a4fd:	je     0x6401aaf8
6401a503:	cmp    al,0x75
6401a505:	je     0x6401aaf8
6401a50b:	cmp    al,0x78
6401a50d:	je     0x6401aaf8
6401a513:	cmp    al,0x58
6401a515:	je     0x6401aaf8
6401a51b:	mov    DWORD PTR [ebp-0x74],esi
6401a51e:	lea    eax,[ebp-0x64]
6401a521:	push   eax
6401a522:	movzx  eax,dl
6401a525:	push   eax
6401a526:	mov    DWORD PTR [ebp-0x44],esi
6401a529:	call   0x64015127
6401a52e:	pop    ecx
6401a52f:	test   eax,eax
6401a531:	mov    al,BYTE PTR [ebp-0x19]
6401a534:	pop    ecx
6401a535:	je     0x6401a550
6401a537:	mov    ecx,DWORD PTR [ebp-0x30]
6401a53a:	lea    esi,[ebp-0x34]
6401a53d:	call   0x6401a13b
6401a542:	mov    al,BYTE PTR [ebx]
6401a544:	inc    ebx
6401a545:	test   al,al
6401a547:	mov    DWORD PTR [ebp-0x48],ebx
6401a54a:	je     0x6401ab11
6401a550:	mov    ecx,DWORD PTR [ebp-0x30]
6401a553:	lea    esi,[ebp-0x34]
6401a556:	call   0x6401a13b
6401a55b:	jmp    0x6401aaf8
6401a560:	movsx  eax,dl
6401a563:	cmp    eax,0x64
6401a566:	jg     0x6401a6de
6401a56c:	je     0x6401a75d
6401a572:	cmp    eax,0x53
6401a575:	jg     0x6401a626
6401a57b:	je     0x6401a5d7
6401a57d:	sub    eax,0x41
6401a580:	je     0x6401a592
6401a582:	dec    eax
6401a583:	dec    eax
6401a584:	je     0x6401a5c6
6401a586:	dec    eax
6401a587:	dec    eax
6401a588:	je     0x6401a592
6401a58a:	dec    eax
6401a58b:	dec    eax
6401a58c:	jne    0x6401a9e0
6401a592:	add    dl,0x20
6401a595:	mov    DWORD PTR [ebp-0x78],0x1
6401a59c:	mov    BYTE PTR [ebp-0x19],dl
6401a59f:	or     DWORD PTR [ebp-0x18],0x40
6401a5a3:	cmp    DWORD PTR [ebp-0x20],esi
6401a5a6:	lea    ebx,[ebp-0x14]
6401a5a9:	mov    eax,0x200
6401a5ae:	mov    DWORD PTR [ebp-0x24],ebx
6401a5b1:	mov    DWORD PTR [ebp-0x68],eax
6401a5b4:	jge    0x6401a781
6401a5ba:	mov    DWORD PTR [ebp-0x20],0x6
6401a5c1:	jmp    0x6401a7cf
6401a5c6:	test   WORD PTR [ebp-0x18],0x830
6401a5cc:	jne    0x6401a643
6401a5ce:	or     DWORD PTR [ebp-0x18],0x800
6401a5d5:	jmp    0x6401a643
6401a5d7:	test   WORD PTR [ebp-0x18],0x830
6401a5dd:	jne    0x6401a5e6
6401a5df:	or     DWORD PTR [ebp-0x18],0x800
6401a5e6:	mov    ecx,DWORD PTR [ebp-0x20]
6401a5e9:	cmp    ecx,0xffffffff
6401a5ec:	jne    0x6401a5f3
6401a5ee:	mov    ecx,0x7fffffff
6401a5f3:	add    edi,0x4
6401a5f6:	test   WORD PTR [ebp-0x18],0x810
6401a5fc:	mov    DWORD PTR [ebp-0x2c],edi
6401a5ff:	mov    edi,DWORD PTR [edi-0x4]
6401a602:	mov    DWORD PTR [ebp-0x24],edi
6401a605:	je     0x6401a9be
6401a60b:	cmp    edi,esi
6401a60d:	jne    0x6401a617
6401a60f:	mov    eax,ds:0x64052df4
6401a614:	mov    DWORD PTR [ebp-0x24],eax
6401a617:	mov    eax,DWORD PTR [ebp-0x24]
6401a61a:	mov    DWORD PTR [ebp-0x44],0x1
6401a621:	jmp    0x6401a9b3
6401a626:	sub    eax,0x58
6401a629:	je     0x6401a868
6401a62f:	dec    eax
6401a630:	dec    eax
6401a631:	je     0x6401a690
6401a633:	sub    eax,ecx
6401a635:	je     0x6401a59f
6401a63b:	dec    eax
6401a63c:	dec    eax
6401a63d:	jne    0x6401a9e0
6401a643:	add    edi,0x4
6401a646:	test   WORD PTR [ebp-0x18],0x810
6401a64c:	mov    DWORD PTR [ebp-0x2c],edi
6401a64f:	je     0x6401a678
6401a651:	movzx  eax,WORD PTR [edi-0x4]
6401a655:	push   eax
6401a656:	push   0x200
6401a65b:	lea    eax,[ebp-0x14]
6401a65e:	push   eax
6401a65f:	lea    eax,[ebp-0x28]
6401a662:	push   eax
6401a663:	call   0x6401ed36
6401a668:	add    esp,0x10
6401a66b:	test   eax,eax
6401a66d:	je     0x6401a685
6401a66f:	mov    DWORD PTR [ebp-0x50],0x1
6401a676:	jmp    0x6401a685
6401a678:	mov    al,BYTE PTR [edi-0x4]
6401a67b:	mov    BYTE PTR [ebp-0x14],al
6401a67e:	mov    DWORD PTR [ebp-0x28],0x1
6401a685:	lea    eax,[ebp-0x14]
6401a688:	mov    DWORD PTR [ebp-0x24],eax
6401a68b:	jmp    0x6401a9e0
6401a690:	mov    eax,DWORD PTR [edi]
6401a692:	add    edi,0x4
6401a695:	cmp    eax,esi
6401a697:	mov    DWORD PTR [ebp-0x2c],edi
6401a69a:	je     0x6401a6ca
6401a69c:	mov    ecx,DWORD PTR [eax+0x4]
6401a69f:	cmp    ecx,esi
6401a6a1:	je     0x6401a6ca
6401a6a3:	test   WORD PTR [ebp-0x18],0x800
6401a6a9:	movsx  eax,WORD PTR [eax]
6401a6ac:	mov    DWORD PTR [ebp-0x24],ecx
6401a6af:	je     0x6401a6c2
6401a6b1:	cdq    
6401a6b2:	sub    eax,edx
6401a6b4:	sar    eax,1
6401a6b6:	mov    DWORD PTR [ebp-0x44],0x1
6401a6bd:	jmp    0x6401a9dd
6401a6c2:	mov    DWORD PTR [ebp-0x44],esi
6401a6c5:	jmp    0x6401a9dd
6401a6ca:	mov    eax,ds:0x64052df0
6401a6cf:	mov    DWORD PTR [ebp-0x24],eax
6401a6d2:	push   eax
6401a6d3:	call   0x64015b10
6401a6d8:	pop    ecx
6401a6d9:	jmp    0x6401a9dd
6401a6de:	cmp    eax,0x70
6401a6e1:	jg     0x6401a86d
6401a6e7:	je     0x6401a861
6401a6ed:	cmp    eax,0x65
6401a6f0:	jl     0x6401a9e0
6401a6f6:	cmp    eax,0x67
6401a6f9:	jle    0x6401a59f
6401a6ff:	cmp    eax,0x69
6401a702:	je     0x6401a75d
6401a704:	cmp    eax,0x6e
6401a707:	je     0x6401a728
6401a709:	cmp    eax,0x6f
6401a70c:	jne    0x6401a9e0
6401a712:	test   BYTE PTR [ebp-0x18],0x80
6401a716:	mov    DWORD PTR [ebp-0x28],0x8
6401a71d:	je     0x6401a768
6401a71f:	or     DWORD PTR [ebp-0x18],0x200
6401a726:	jmp    0x6401a768
6401a728:	mov    esi,DWORD PTR [edi]
6401a72a:	add    edi,0x4
6401a72d:	mov    DWORD PTR [ebp-0x2c],edi
6401a730:	call   0x6401ebc1
6401a735:	test   eax,eax
6401a737:	je     0x6401ab11
6401a73d:	test   BYTE PTR [ebp-0x18],0x20
6401a741:	je     0x6401a74c
6401a743:	mov    ax,WORD PTR [ebp-0x34]
6401a747:	mov    WORD PTR [esi],ax
6401a74a:	jmp    0x6401a751
6401a74c:	mov    eax,DWORD PTR [ebp-0x34]
6401a74f:	mov    DWORD PTR [esi],eax
6401a751:	mov    DWORD PTR [ebp-0x50],0x1
6401a758:	jmp    0x6401aae5
6401a75d:	or     DWORD PTR [ebp-0x18],0x40
6401a761:	mov    DWORD PTR [ebp-0x28],0xa
6401a768:	mov    ecx,DWORD PTR [ebp-0x18]
6401a76b:	test   cx,cx
6401a76e:	jns    0x6401a8b7
6401a774:	mov    eax,DWORD PTR [edi]
6401a776:	mov    edx,DWORD PTR [edi+0x4]
6401a779:	add    edi,0x8
6401a77c:	jmp    0x6401a8ec
6401a781:	jne    0x6401a791
6401a783:	cmp    dl,0x67
6401a786:	jne    0x6401a7cf
6401a788:	mov    DWORD PTR [ebp-0x20],0x1
6401a78f:	jmp    0x6401a7cf
6401a791:	cmp    DWORD PTR [ebp-0x20],eax
6401a794:	jle    0x6401a799
6401a796:	mov    DWORD PTR [ebp-0x20],eax
6401a799:	cmp    DWORD PTR [ebp-0x20],0xa3
6401a7a0:	jle    0x6401a7cf
6401a7a2:	mov    esi,DWORD PTR [ebp-0x20]
6401a7a5:	add    esi,0x15d
6401a7ab:	push   esi
6401a7ac:	call   0x640162ef
6401a7b1:	test   eax,eax
6401a7b3:	mov    dl,BYTE PTR [ebp-0x19]
6401a7b6:	pop    ecx
6401a7b7:	mov    DWORD PTR [ebp-0x54],eax
6401a7ba:	je     0x6401a7c6
6401a7bc:	mov    DWORD PTR [ebp-0x24],eax
6401a7bf:	mov    DWORD PTR [ebp-0x68],esi
6401a7c2:	mov    ebx,eax
6401a7c4:	jmp    0x6401a7cd
6401a7c6:	mov    DWORD PTR [ebp-0x20],0xa3
6401a7cd:	xor    esi,esi
6401a7cf:	mov    eax,DWORD PTR [edi]
6401a7d1:	add    edi,0x8
6401a7d4:	mov    DWORD PTR [ebp-0x80],eax
6401a7d7:	mov    eax,DWORD PTR [edi-0x4]
6401a7da:	mov    DWORD PTR [ebp-0x7c],eax
6401a7dd:	lea    eax,[ebp-0x64]
6401a7e0:	push   eax
6401a7e1:	push   DWORD PTR [ebp-0x78]
6401a7e4:	movsx  eax,dl
6401a7e7:	push   DWORD PTR [ebp-0x20]
6401a7ea:	mov    DWORD PTR [ebp-0x2c],edi
6401a7ed:	push   eax
6401a7ee:	push   DWORD PTR [ebp-0x68]
6401a7f1:	lea    eax,[ebp-0x80]
6401a7f4:	push   ebx
6401a7f5:	push   eax
6401a7f6:	push   DWORD PTR ds:0x64053108
6401a7fc:	call   0x6401781e
6401a801:	pop    ecx
6401a802:	call   eax
6401a804:	mov    edi,DWORD PTR [ebp-0x18]
6401a807:	add    esp,0x1c
6401a80a:	and    edi,0x80
6401a810:	je     0x6401a82c
6401a812:	cmp    DWORD PTR [ebp-0x20],esi
6401a815:	jne    0x6401a82c
6401a817:	lea    eax,[ebp-0x64]
6401a81a:	push   eax
6401a81b:	push   ebx
6401a81c:	push   DWORD PTR ds:0x64053114
6401a822:	call   0x6401781e
6401a827:	pop    ecx
6401a828:	call   eax
6401a82a:	pop    ecx
6401a82b:	pop    ecx
6401a82c:	cmp    BYTE PTR [ebp-0x19],0x67
6401a830:	jne    0x6401a84b
6401a832:	cmp    edi,esi
6401a834:	jne    0x6401a84b
6401a836:	lea    eax,[ebp-0x64]
6401a839:	push   eax
6401a83a:	push   ebx
6401a83b:	push   DWORD PTR ds:0x64053110
6401a841:	call   0x6401781e
6401a846:	pop    ecx
6401a847:	call   eax
6401a849:	pop    ecx
6401a84a:	pop    ecx
6401a84b:	cmp    BYTE PTR [ebx],0x2d
6401a84e:	jne    0x6401a85b
6401a850:	or     DWORD PTR [ebp-0x18],0x100
6401a857:	inc    ebx
6401a858:	mov    DWORD PTR [ebp-0x24],ebx
6401a85b:	push   ebx
6401a85c:	jmp    0x6401a6d3
6401a861:	mov    DWORD PTR [ebp-0x20],0x8
6401a868:	mov    DWORD PTR [ebp-0x4c],ecx
6401a86b:	jmp    0x6401a88e
6401a86d:	sub    eax,0x73
6401a870:	je     0x6401a5e6
6401a876:	dec    eax
6401a877:	dec    eax
6401a878:	je     0x6401a761
6401a87e:	sub    eax,0x3
6401a881:	jne    0x6401a9e0
6401a887:	mov    DWORD PTR [ebp-0x4c],0x27
6401a88e:	test   BYTE PTR [ebp-0x18],0x80
6401a892:	mov    DWORD PTR [ebp-0x28],0x10
6401a899:	je     0x6401a768
6401a89f:	mov    al,BYTE PTR [ebp-0x4c]
6401a8a2:	add    al,0x51
6401a8a4:	mov    BYTE PTR [ebp-0x38],0x30
6401a8a8:	mov    BYTE PTR [ebp-0x37],al
6401a8ab:	mov    DWORD PTR [ebp-0x3c],0x2
6401a8b2:	jmp    0x6401a768
6401a8b7:	test   cx,0x1000
6401a8bc:	jne    0x6401a774
6401a8c2:	add    edi,0x4
6401a8c5:	test   cl,0x20
6401a8c8:	je     0x6401a8df
6401a8ca:	test   cl,0x40
6401a8cd:	mov    DWORD PTR [ebp-0x2c],edi
6401a8d0:	je     0x6401a8d8
6401a8d2:	movsx  eax,WORD PTR [edi-0x4]
6401a8d6:	jmp    0x6401a8dc
6401a8d8:	movzx  eax,WORD PTR [edi-0x4]
6401a8dc:	cdq    
6401a8dd:	jmp    0x6401a8ef
6401a8df:	test   cl,0x40
6401a8e2:	mov    eax,DWORD PTR [edi-0x4]
6401a8e5:	je     0x6401a8ea
6401a8e7:	cdq    
6401a8e8:	jmp    0x6401a8ec
6401a8ea:	xor    edx,edx
6401a8ec:	mov    DWORD PTR [ebp-0x2c],edi
6401a8ef:	test   cl,0x40
6401a8f2:	je     0x6401a90c
6401a8f4:	cmp    edx,esi
6401a8f6:	jg     0x6401a90c
6401a8f8:	jl     0x6401a8fe
6401a8fa:	cmp    eax,esi
6401a8fc:	jae    0x6401a90c
6401a8fe:	neg    eax
6401a900:	adc    edx,0x0
6401a903:	neg    edx
6401a905:	or     DWORD PTR [ebp-0x18],0x100
6401a90c:	test   WORD PTR [ebp-0x18],0x9000
6401a912:	mov    ebx,edx
6401a914:	mov    edi,eax
6401a916:	jne    0x6401a91a
6401a918:	xor    ebx,ebx
6401a91a:	cmp    DWORD PTR [ebp-0x20],0x0
6401a91e:	jge    0x6401a929
6401a920:	mov    DWORD PTR [ebp-0x20],0x1
6401a927:	jmp    0x6401a93a
6401a929:	and    DWORD PTR [ebp-0x18],0xfffffff7
6401a92d:	mov    eax,0x200
6401a932:	cmp    DWORD PTR [ebp-0x20],eax
6401a935:	jle    0x6401a93a
6401a937:	mov    DWORD PTR [ebp-0x20],eax
6401a93a:	mov    eax,edi
6401a93c:	or     eax,ebx
6401a93e:	jne    0x6401a943
6401a940:	and    DWORD PTR [ebp-0x3c],eax
6401a943:	lea    esi,[ebp+0x1eb]
6401a949:	mov    eax,DWORD PTR [ebp-0x20]
6401a94c:	dec    DWORD PTR [ebp-0x20]
6401a94f:	test   eax,eax
6401a951:	jg     0x6401a959
6401a953:	mov    eax,edi
6401a955:	or     eax,ebx
6401a957:	je     0x6401a97d
6401a959:	mov    eax,DWORD PTR [ebp-0x28]
6401a95c:	cdq    
6401a95d:	push   edx
6401a95e:	push   eax
6401a95f:	push   ebx
6401a960:	push   edi
6401a961:	call   0x64019a70
6401a966:	add    ecx,0x30
6401a969:	cmp    ecx,0x39
6401a96c:	mov    DWORD PTR [ebp-0x68],ebx
6401a96f:	mov    edi,eax
6401a971:	mov    ebx,edx
6401a973:	jle    0x6401a978
6401a975:	add    ecx,DWORD PTR [ebp-0x4c]
6401a978:	mov    BYTE PTR [esi],cl
6401a97a:	dec    esi
6401a97b:	jmp    0x6401a949
6401a97d:	lea    eax,[ebp+0x1eb]
6401a983:	sub    eax,esi
6401a985:	inc    esi
6401a986:	test   WORD PTR [ebp-0x18],0x200
6401a98c:	mov    DWORD PTR [ebp-0x28],eax
6401a98f:	mov    DWORD PTR [ebp-0x24],esi
6401a992:	je     0x6401a9e0
6401a994:	test   eax,eax
6401a996:	je     0x6401a99f
6401a998:	mov    ecx,esi
6401a99a:	cmp    BYTE PTR [ecx],0x30
6401a99d:	je     0x6401a9e0
6401a99f:	dec    DWORD PTR [ebp-0x24]
6401a9a2:	mov    ecx,DWORD PTR [ebp-0x24]
6401a9a5:	mov    BYTE PTR [ecx],0x30
6401a9a8:	inc    eax
6401a9a9:	jmp    0x6401a9dd
6401a9ab:	dec    ecx
6401a9ac:	cmp    WORD PTR [eax],si
6401a9af:	je     0x6401a9b7
6401a9b1:	inc    eax
6401a9b2:	inc    eax
6401a9b3:	cmp    ecx,esi
6401a9b5:	jne    0x6401a9ab
6401a9b7:	sub    eax,DWORD PTR [ebp-0x24]
6401a9ba:	sar    eax,1
6401a9bc:	jmp    0x6401a9dd
6401a9be:	cmp    edi,esi
6401a9c0:	jne    0x6401a9ca
6401a9c2:	mov    eax,ds:0x64052df0
6401a9c7:	mov    DWORD PTR [ebp-0x24],eax
6401a9ca:	mov    eax,DWORD PTR [ebp-0x24]
6401a9cd:	jmp    0x6401a9d6
6401a9cf:	dec    ecx
6401a9d0:	cmp    BYTE PTR [eax],0x0
6401a9d3:	je     0x6401a9da
6401a9d5:	inc    eax
6401a9d6:	cmp    ecx,esi
6401a9d8:	jne    0x6401a9cf
6401a9da:	sub    eax,DWORD PTR [ebp-0x24]
6401a9dd:	mov    DWORD PTR [ebp-0x28],eax
6401a9e0:	cmp    DWORD PTR [ebp-0x50],0x0
6401a9e4:	jne    0x6401aae5
6401a9ea:	mov    eax,DWORD PTR [ebp-0x18]
6401a9ed:	test   al,0x40
6401a9ef:	je     0x6401aa16
6401a9f1:	test   ax,0x100
6401a9f5:	je     0x6401a9fd
6401a9f7:	mov    BYTE PTR [ebp-0x38],0x2d
6401a9fb:	jmp    0x6401aa0f
6401a9fd:	test   al,0x1
6401a9ff:	je     0x6401aa07
6401aa01:	mov    BYTE PTR [ebp-0x38],0x2b
6401aa05:	jmp    0x6401aa0f
6401aa07:	test   al,0x2
6401aa09:	je     0x6401aa16
6401aa0b:	mov    BYTE PTR [ebp-0x38],0x20
6401aa0f:	mov    DWORD PTR [ebp-0x3c],0x1
6401aa16:	mov    ebx,DWORD PTR [ebp-0x40]
6401aa19:	sub    ebx,DWORD PTR [ebp-0x28]
6401aa1c:	sub    ebx,DWORD PTR [ebp-0x3c]
6401aa1f:	test   BYTE PTR [ebp-0x18],0xc
6401aa23:	jne    0x6401aa36
6401aa25:	push   DWORD PTR [ebp-0x30]
6401aa28:	lea    eax,[ebp-0x34]
6401aa2b:	push   ebx
6401aa2c:	push   0x20
6401aa2e:	call   0x6401a16e
6401aa33:	add    esp,0xc
6401aa36:	push   DWORD PTR [ebp-0x3c]
6401aa39:	mov    edi,DWORD PTR [ebp-0x30]
6401aa3c:	lea    eax,[ebp-0x34]
6401aa3f:	lea    ecx,[ebp-0x38]
6401aa42:	call   0x6401a192
6401aa47:	test   BYTE PTR [ebp-0x18],0x8
6401aa4b:	pop    ecx
6401aa4c:	je     0x6401aa63
6401aa4e:	test   BYTE PTR [ebp-0x18],0x4
6401aa52:	jne    0x6401aa63
6401aa54:	push   edi
6401aa55:	push   ebx
6401aa56:	push   0x30
6401aa58:	lea    eax,[ebp-0x34]
6401aa5b:	call   0x6401a16e
6401aa60:	add    esp,0xc
6401aa63:	cmp    DWORD PTR [ebp-0x44],0x0
6401aa67:	mov    eax,DWORD PTR [ebp-0x28]
6401aa6a:	je     0x6401aabd
6401aa6c:	test   eax,eax
6401aa6e:	jle    0x6401aabd
6401aa70:	mov    esi,DWORD PTR [ebp-0x24]
6401aa73:	mov    DWORD PTR [ebp-0x68],eax
6401aa76:	movzx  eax,WORD PTR [esi]
6401aa79:	dec    DWORD PTR [ebp-0x68]
6401aa7c:	push   eax
6401aa7d:	push   0x6
6401aa7f:	lea    eax,[ebp+0x1ec]
6401aa85:	push   eax
6401aa86:	lea    eax,[ebp-0x70]
6401aa89:	inc    esi
6401aa8a:	push   eax
6401aa8b:	inc    esi
6401aa8c:	call   0x6401ed36
6401aa91:	add    esp,0x10
6401aa94:	test   eax,eax
6401aa96:	jne    0x6401aab7
6401aa98:	cmp    DWORD PTR [ebp-0x70],eax
6401aa9b:	je     0x6401aab7
6401aa9d:	push   DWORD PTR [ebp-0x70]
6401aaa0:	lea    eax,[ebp-0x34]
6401aaa3:	lea    ecx,[ebp+0x1ec]
6401aaa9:	call   0x6401a192
6401aaae:	cmp    DWORD PTR [ebp-0x68],0x0
6401aab2:	pop    ecx
6401aab3:	jne    0x6401aa76
6401aab5:	jmp    0x6401aaca
6401aab7:	or     DWORD PTR [ebp-0x34],0xffffffff
6401aabb:	jmp    0x6401aaca
6401aabd:	mov    ecx,DWORD PTR [ebp-0x24]
6401aac0:	push   eax
6401aac1:	lea    eax,[ebp-0x34]
6401aac4:	call   0x6401a192
6401aac9:	pop    ecx
6401aaca:	cmp    DWORD PTR [ebp-0x34],0x0
6401aace:	jl     0x6401aae5
6401aad0:	test   BYTE PTR [ebp-0x18],0x4
6401aad4:	je     0x6401aae5
6401aad6:	push   edi
6401aad7:	push   ebx
6401aad8:	push   0x20
6401aada:	lea    eax,[ebp-0x34]
6401aadd:	call   0x6401a16e
6401aae2:	add    esp,0xc
6401aae5:	cmp    DWORD PTR [ebp-0x54],0x0
6401aae9:	je     0x6401aaf8
6401aaeb:	push   DWORD PTR [ebp-0x54]
6401aaee:	call   0x640147cf
6401aaf3:	and    DWORD PTR [ebp-0x54],0x0
6401aaf7:	pop    ecx
6401aaf8:	mov    ebx,DWORD PTR [ebp-0x48]
6401aafb:	mov    al,BYTE PTR [ebx]
6401aafd:	test   al,al
6401aaff:	mov    BYTE PTR [ebp-0x19],al
6401ab02:	je     0x6401ab28
6401ab04:	mov    ecx,DWORD PTR [ebp-0x74]
6401ab07:	mov    edi,DWORD PTR [ebp-0x2c]
6401ab0a:	mov    dl,al
6401ab0c:	jmp    0x6401a33a
6401ab11:	call   0x640166d3
6401ab16:	mov    DWORD PTR [eax],0x16
6401ab1c:	xor    eax,eax
6401ab1e:	push   eax
6401ab1f:	push   eax
6401ab20:	push   eax
6401ab21:	push   eax
6401ab22:	push   eax
6401ab23:	jmp    0x6401a24c
6401ab28:	cmp    BYTE PTR [ebp-0x58],0x0
6401ab2c:	je     0x6401ab35
6401ab2e:	mov    eax,DWORD PTR [ebp-0x5c]
6401ab31:	and    DWORD PTR [eax+0x70],0xfffffffd
6401ab35:	mov    eax,DWORD PTR [ebp-0x34]
6401ab38:	mov    ecx,DWORD PTR [ebp+0x1f4]
6401ab3e:	pop    edi
6401ab3f:	pop    esi
6401ab40:	xor    ecx,ebp
6401ab42:	pop    ebx
6401ab43:	call   0x64013d18
6401ab48:	add    ebp,0x1f8
6401ab4e:	leave  
6401ab4f:	ret    
6401ab50:	push   ds
6401ab51:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
6401ab52:	add    DWORD PTR [ebp+eax*4-0x5d],esp
6401ab56:	add    DWORD PTR [eax+eiz*4-0x5d],esp
6401ab5a:	add    DWORD PTR [edi+ebp*8-0x5d],esp
6401ab5e:	add    DWORD PTR [ecx+ebp*1-0x5c],esp
6401ab62:	add    DWORD PTR [ecx+esi*1-0x5c],esp
6401ab66:	add    DWORD PTR [eax+ebp*2-0x5c],esp
6401ab6a:	add    DWORD PTR [eax+eiz*2-0x5b],esp
6401ab6e:	add    DWORD PTR [ebp+edx*2-0x75],esp
6401ab72:	in     al,dx
6401ab73:	sub    esp,0x18
6401ab76:	push   ebx
6401ab77:	push   DWORD PTR [ebp+0x10]
6401ab7a:	lea    ecx,[ebp-0x18]
6401ab7d:	call   0x64014335
6401ab82:	mov    ebx,DWORD PTR [ebp+0x8]
6401ab85:	lea    eax,[ebx+0x1]
6401ab88:	cmp    eax,0x100
6401ab8d:	ja     0x6401ab9e
6401ab8f:	mov    eax,DWORD PTR [ebp-0x18]
6401ab92:	mov    eax,DWORD PTR [eax+0xc8]
6401ab98:	movzx  eax,WORD PTR [eax+ebx*2]
6401ab9c:	jmp    0x6401ac13
6401ab9e:	mov    DWORD PTR [ebp+0x8],ebx
6401aba1:	sar    DWORD PTR [ebp+0x8],0x8
6401aba5:	lea    eax,[ebp-0x18]
6401aba8:	push   eax
6401aba9:	mov    eax,DWORD PTR [ebp+0x8]
6401abac:	and    eax,0xff
6401abb1:	push   eax
6401abb2:	call   0x64015127
6401abb7:	test   eax,eax
6401abb9:	pop    ecx
6401abba:	pop    ecx
6401abbb:	je     0x6401abcf
6401abbd:	mov    al,BYTE PTR [ebp+0x8]
6401abc0:	push   0x2
6401abc2:	mov    BYTE PTR [ebp-0x8],al
6401abc5:	mov    BYTE PTR [ebp-0x7],bl
6401abc8:	mov    BYTE PTR [ebp-0x6],0x0
6401abcc:	pop    ecx
6401abcd:	jmp    0x6401abd9
6401abcf:	xor    ecx,ecx
6401abd1:	mov    BYTE PTR [ebp-0x8],bl
6401abd4:	mov    BYTE PTR [ebp-0x7],0x0
6401abd8:	inc    ecx
6401abd9:	mov    eax,DWORD PTR [ebp-0x18]
6401abdc:	push   0x1
6401abde:	push   DWORD PTR [eax+0x14]
6401abe1:	push   DWORD PTR [eax+0x4]
6401abe4:	lea    eax,[ebp-0x4]
6401abe7:	push   eax
6401abe8:	push   ecx
6401abe9:	lea    eax,[ebp-0x8]
6401abec:	push   eax
6401abed:	lea    eax,[ebp-0x18]
6401abf0:	push   0x1
6401abf2:	push   eax
6401abf3:	call   0x6401e2c1
6401abf8:	add    esp,0x20
6401abfb:	test   eax,eax
6401abfd:	jne    0x6401ac0f
6401abff:	cmp    BYTE PTR [ebp-0xc],al
6401ac02:	je     0x6401ac0b
6401ac04:	mov    eax,DWORD PTR [ebp-0x10]
6401ac07:	and    DWORD PTR [eax+0x70],0xfffffffd
6401ac0b:	xor    eax,eax
6401ac0d:	jmp    0x6401ac23
6401ac0f:	movzx  eax,WORD PTR [ebp-0x4]
6401ac13:	and    eax,DWORD PTR [ebp+0xc]
6401ac16:	cmp    BYTE PTR [ebp-0xc],0x0
6401ac1a:	je     0x6401ac23
6401ac1c:	mov    ecx,DWORD PTR [ebp-0x10]
6401ac1f:	and    DWORD PTR [ecx+0x70],0xfffffffd
6401ac23:	pop    ebx
6401ac24:	leave  
6401ac25:	ret    
6401ac26:	push   ebp
6401ac27:	lea    ebp,[esp-0x514]
6401ac2e:	sub    esp,0x590
6401ac34:	mov    eax,ds:0x640521ac
6401ac39:	xor    eax,ebp
6401ac3b:	mov    DWORD PTR [ebp+0x510],eax
6401ac41:	mov    eax,DWORD PTR [ebp+0x520]
6401ac47:	push   esi
6401ac48:	xor    esi,esi
6401ac4a:	cmp    DWORD PTR [ebp+0x524],esi
6401ac50:	mov    DWORD PTR [ebp-0x64],eax
6401ac53:	mov    DWORD PTR [ebp-0x60],esi
6401ac56:	mov    DWORD PTR [ebp-0x68],esi
6401ac59:	jne    0x6401ac62
6401ac5b:	xor    eax,eax
6401ac5d:	jmp    0x6401b232
6401ac62:	cmp    eax,esi
6401ac64:	jne    0x6401ac8d
6401ac66:	call   0x640166e6
6401ac6b:	mov    DWORD PTR [eax],esi
6401ac6d:	call   0x640166d3
6401ac72:	push   esi
6401ac73:	push   esi
6401ac74:	push   esi
6401ac75:	push   esi
6401ac76:	push   esi
6401ac77:	mov    DWORD PTR [eax],0x16
6401ac7d:	call   0x64013e62
6401ac82:	add    esp,0x14
6401ac85:	or     eax,0xffffffff
6401ac88:	jmp    0x6401b232
6401ac8d:	push   ebx
6401ac8e:	push   edi
6401ac8f:	mov    edi,DWORD PTR [ebp+0x51c]
6401ac95:	mov    eax,edi
6401ac97:	sar    eax,0x5
6401ac9a:	lea    esi,[eax*4+0x640556e0]
6401aca1:	mov    eax,DWORD PTR [esi]
6401aca3:	and    edi,0x1f
6401aca6:	shl    edi,0x6
6401aca9:	add    eax,edi
6401acab:	mov    bl,BYTE PTR [eax+0x24]
6401acae:	add    bl,bl
6401acb0:	sar    bl,1
6401acb2:	cmp    bl,0x2
6401acb5:	mov    DWORD PTR [ebp-0x70],esi
6401acb8:	mov    BYTE PTR [ebp-0x71],bl
6401acbb:	je     0x6401acc2
6401acbd:	cmp    bl,0x1
6401acc0:	jne    0x6401acf5
6401acc2:	mov    ecx,DWORD PTR [ebp+0x524]
6401acc8:	not    ecx
6401acca:	test   cl,0x1
6401accd:	jne    0x6401acf5
6401accf:	call   0x640166e6
6401acd4:	xor    esi,esi
6401acd6:	mov    DWORD PTR [eax],esi
6401acd8:	call   0x640166d3
6401acdd:	push   esi
6401acde:	push   esi
6401acdf:	push   esi
6401ace0:	push   esi
6401ace1:	push   esi
6401ace2:	mov    DWORD PTR [eax],0x16
6401ace8:	call   0x64013e62
6401aced:	add    esp,0x14
6401acf0:	jmp    0x6401b225
6401acf5:	test   BYTE PTR [eax+0x4],0x20
6401acf9:	je     0x6401ad0f
6401acfb:	push   0x2
6401acfd:	push   0x0
6401acff:	push   0x0
6401ad01:	push   DWORD PTR [ebp+0x51c]
6401ad07:	call   0x6401971e
6401ad0c:	add    esp,0x10
6401ad0f:	push   DWORD PTR [ebp+0x51c]
6401ad15:	call   0x6401eb63
6401ad1a:	test   eax,eax
6401ad1c:	pop    ecx
6401ad1d:	je     0x6401af5c
6401ad23:	mov    eax,DWORD PTR [esi]
6401ad25:	test   BYTE PTR [edi+eax*1+0x4],0x80
6401ad2a:	je     0x6401af5c
6401ad30:	call   0x64017a3a
6401ad35:	mov    eax,DWORD PTR [eax+0x6c]
6401ad38:	xor    ecx,ecx
6401ad3a:	cmp    DWORD PTR [eax+0x14],ecx
6401ad3d:	lea    eax,[ebp-0x7c]
6401ad40:	sete   cl
6401ad43:	push   eax
6401ad44:	mov    eax,DWORD PTR [esi]
6401ad46:	push   DWORD PTR [edi+eax*1]
6401ad49:	mov    DWORD PTR [ebp-0x78],ecx
6401ad4c:	call   DWORD PTR ds:0x6402c114
6401ad52:	test   eax,eax
6401ad54:	je     0x6401af5c
6401ad5a:	xor    ecx,ecx
6401ad5c:	cmp    DWORD PTR [ebp-0x78],ecx
6401ad5f:	je     0x6401ad69
6401ad61:	test   bl,bl
6401ad63:	je     0x6401af5e
6401ad69:	call   DWORD PTR ds:0x6402c118
6401ad6f:	mov    ebx,DWORD PTR [ebp-0x64]
6401ad72:	mov    DWORD PTR [ebp-0x7c],eax
6401ad75:	xor    eax,eax
6401ad77:	cmp    DWORD PTR [ebp+0x524],eax
6401ad7d:	mov    DWORD PTR [ebp-0x5c],eax
6401ad80:	jbe    0x6401b1cd
6401ad86:	mov    DWORD PTR [ebp-0x54],eax
6401ad89:	mov    al,BYTE PTR [ebp-0x71]
6401ad8c:	test   al,al
6401ad8e:	jne    0x6401aed1
6401ad94:	mov    cl,BYTE PTR [ebx]
6401ad96:	mov    esi,DWORD PTR [ebp-0x70]
6401ad99:	xor    eax,eax
6401ad9b:	cmp    cl,0xa
6401ad9e:	sete   al
6401ada1:	mov    DWORD PTR [ebp-0x78],eax
6401ada4:	mov    eax,DWORD PTR [esi]
6401ada6:	add    eax,edi
6401ada8:	cmp    DWORD PTR [eax+0x38],0x0
6401adac:	je     0x6401adcc
6401adae:	mov    dl,BYTE PTR [eax+0x34]
6401adb1:	mov    BYTE PTR [ebp+0x508],dl
6401adb7:	mov    BYTE PTR [ebp+0x509],cl
6401adbd:	and    DWORD PTR [eax+0x38],0x0
6401adc1:	push   0x2
6401adc3:	lea    eax,[ebp+0x508]
6401adc9:	push   eax
6401adca:	jmp    0x6401ae11
6401adcc:	movsx  eax,cl
6401adcf:	push   eax
6401add0:	call   0x6401515d
6401add5:	test   eax,eax
6401add7:	pop    ecx
6401add8:	je     0x6401ae0e
6401adda:	mov    ecx,DWORD PTR [ebp-0x64]
6401addd:	sub    ecx,ebx
6401addf:	add    ecx,DWORD PTR [ebp+0x524]
6401ade5:	xor    eax,eax
6401ade7:	inc    eax
6401ade8:	cmp    ecx,eax
6401adea:	jbe    0x6401af46
6401adf0:	push   0x2
6401adf2:	lea    eax,[ebp-0x58]
6401adf5:	push   ebx
6401adf6:	push   eax
6401adf7:	call   0x6401ef26
6401adfc:	add    esp,0xc
6401adff:	cmp    eax,0xffffffff
6401ae02:	je     0x6401b1c7
6401ae08:	inc    ebx
6401ae09:	inc    DWORD PTR [ebp-0x54]
6401ae0c:	jmp    0x6401ae26
6401ae0e:	push   0x1
6401ae10:	push   ebx
6401ae11:	lea    eax,[ebp-0x58]
6401ae14:	push   eax
6401ae15:	call   0x6401ef26
6401ae1a:	add    esp,0xc
6401ae1d:	cmp    eax,0xffffffff
6401ae20:	je     0x6401b1c7
6401ae26:	xor    eax,eax
6401ae28:	push   eax
6401ae29:	push   eax
6401ae2a:	push   0x5
6401ae2c:	lea    ecx,[ebp+0x508]
6401ae32:	push   ecx
6401ae33:	push   0x1
6401ae35:	lea    ecx,[ebp-0x58]
6401ae38:	push   ecx
6401ae39:	push   eax
6401ae3a:	push   DWORD PTR [ebp-0x7c]
6401ae3d:	inc    ebx
6401ae3e:	inc    DWORD PTR [ebp-0x54]
6401ae41:	call   DWORD PTR ds:0x6402c014
6401ae47:	mov    esi,eax
6401ae49:	test   esi,esi
6401ae4b:	je     0x6401b1c7
6401ae51:	push   0x0
6401ae53:	lea    eax,[ebp-0x5c]
6401ae56:	push   eax
6401ae57:	push   esi
6401ae58:	lea    eax,[ebp+0x508]
6401ae5e:	push   eax
6401ae5f:	mov    eax,DWORD PTR [ebp-0x70]
6401ae62:	mov    eax,DWORD PTR [eax]
6401ae64:	push   DWORD PTR [edi+eax*1]
6401ae67:	call   DWORD PTR ds:0x6402c094
6401ae6d:	test   eax,eax
6401ae6f:	je     0x6401b1be
6401ae75:	mov    eax,DWORD PTR [ebp-0x54]
6401ae78:	mov    ecx,DWORD PTR [ebp-0x68]
6401ae7b:	add    eax,ecx
6401ae7d:	cmp    DWORD PTR [ebp-0x5c],esi
6401ae80:	mov    DWORD PTR [ebp-0x60],eax
6401ae83:	jl     0x6401b1c7
6401ae89:	cmp    DWORD PTR [ebp-0x78],0x0
6401ae8d:	je     0x6401af32
6401ae93:	push   0x0
6401ae95:	lea    eax,[ebp-0x5c]
6401ae98:	push   eax
6401ae99:	push   0x1
6401ae9b:	lea    eax,[ebp+0x508]
6401aea1:	push   eax
6401aea2:	mov    eax,DWORD PTR [ebp-0x70]
6401aea5:	mov    eax,DWORD PTR [eax]
6401aea7:	mov    BYTE PTR [ebp+0x508],0xd
6401aeae:	push   DWORD PTR [edi+eax*1]
6401aeb1:	call   DWORD PTR ds:0x6402c094
6401aeb7:	test   eax,eax
6401aeb9:	je     0x6401b1be
6401aebf:	cmp    DWORD PTR [ebp-0x5c],0x1
6401aec3:	jl     0x6401b1c7
6401aec9:	inc    DWORD PTR [ebp-0x68]
6401aecc:	inc    DWORD PTR [ebp-0x60]
6401aecf:	jmp    0x6401af32
6401aed1:	cmp    al,0x1
6401aed3:	je     0x6401aed9
6401aed5:	cmp    al,0x2
6401aed7:	jne    0x6401aef1
6401aed9:	movzx  esi,WORD PTR [ebx]
6401aedc:	xor    ecx,ecx
6401aede:	cmp    si,0xa
6401aee2:	sete   cl
6401aee5:	inc    ebx
6401aee6:	inc    ebx
6401aee7:	add    DWORD PTR [ebp-0x54],0x2
6401aeeb:	mov    DWORD PTR [ebp-0x58],esi
6401aeee:	mov    DWORD PTR [ebp-0x78],ecx
6401aef1:	cmp    al,0x1
6401aef3:	je     0x6401aef9
6401aef5:	cmp    al,0x2
6401aef7:	jne    0x6401af32
6401aef9:	push   DWORD PTR [ebp-0x58]
6401aefc:	call   0x6401ed51
6401af01:	cmp    ax,WORD PTR [ebp-0x58]
6401af05:	pop    ecx
6401af06:	jne    0x6401b1be
6401af0c:	inc    DWORD PTR [ebp-0x60]
6401af0f:	cmp    DWORD PTR [ebp-0x78],0x0
6401af13:	je     0x6401af32
6401af15:	push   0xd
6401af17:	pop    eax
6401af18:	push   eax
6401af19:	mov    DWORD PTR [ebp-0x58],eax
6401af1c:	call   0x6401ed51
6401af21:	cmp    ax,WORD PTR [ebp-0x58]
6401af25:	pop    ecx
6401af26:	jne    0x6401b1be
6401af2c:	inc    DWORD PTR [ebp-0x60]
6401af2f:	inc    DWORD PTR [ebp-0x68]
6401af32:	mov    eax,DWORD PTR [ebp+0x524]
6401af38:	cmp    DWORD PTR [ebp-0x54],eax
6401af3b:	jb     0x6401ad89
6401af41:	jmp    0x6401b1c7
6401af46:	mov    ecx,DWORD PTR [esi]
6401af48:	mov    dl,BYTE PTR [ebx]
6401af4a:	inc    DWORD PTR [ebp-0x60]
6401af4d:	mov    BYTE PTR [edi+ecx*1+0x34],dl
6401af51:	mov    ecx,DWORD PTR [esi]
6401af53:	mov    DWORD PTR [edi+ecx*1+0x38],eax
6401af57:	jmp    0x6401b1c7
6401af5c:	xor    ecx,ecx
6401af5e:	mov    eax,DWORD PTR [esi]
6401af60:	add    eax,edi
6401af62:	test   BYTE PTR [eax+0x4],0x80
6401af66:	je     0x6401b197
6401af6c:	test   bl,bl
6401af6e:	mov    eax,DWORD PTR [ebp-0x64]
6401af71:	mov    DWORD PTR [ebp-0x58],ecx
6401af74:	jne    0x6401b010
6401af7a:	cmp    DWORD PTR [ebp+0x524],ecx
6401af80:	mov    DWORD PTR [ebp-0x5c],eax
6401af83:	jbe    0x6401b1fd
6401af89:	jmp    0x6401af8e
6401af8b:	mov    esi,DWORD PTR [ebp-0x70]
6401af8e:	mov    ecx,DWORD PTR [ebp-0x5c]
6401af91:	and    DWORD PTR [ebp-0x54],0x0
6401af95:	sub    ecx,DWORD PTR [ebp-0x64]
6401af98:	lea    eax,[ebp-0x50]
6401af9b:	cmp    ecx,DWORD PTR [ebp+0x524]
6401afa1:	jae    0x6401afca
6401afa3:	mov    edx,DWORD PTR [ebp-0x5c]
6401afa6:	inc    DWORD PTR [ebp-0x5c]
6401afa9:	mov    dl,BYTE PTR [edx]
6401afab:	inc    ecx
6401afac:	cmp    dl,0xa
6401afaf:	jne    0x6401afbb
6401afb1:	inc    DWORD PTR [ebp-0x68]
6401afb4:	mov    BYTE PTR [eax],0xd
6401afb7:	inc    eax
6401afb8:	inc    DWORD PTR [ebp-0x54]
6401afbb:	mov    BYTE PTR [eax],dl
6401afbd:	inc    eax
6401afbe:	inc    DWORD PTR [ebp-0x54]
6401afc1:	cmp    DWORD PTR [ebp-0x54],0x400
6401afc8:	jb     0x6401af9b
6401afca:	mov    ebx,eax
6401afcc:	lea    eax,[ebp-0x50]
6401afcf:	sub    ebx,eax
6401afd1:	push   0x0
6401afd3:	lea    eax,[ebp-0x6c]
6401afd6:	push   eax
6401afd7:	push   ebx
6401afd8:	lea    eax,[ebp-0x50]
6401afdb:	push   eax
6401afdc:	mov    eax,DWORD PTR [esi]
6401afde:	push   DWORD PTR [edi+eax*1]
6401afe1:	call   DWORD PTR ds:0x6402c094
6401afe7:	test   eax,eax
6401afe9:	je     0x6401b1be
6401afef:	mov    eax,DWORD PTR [ebp-0x6c]
6401aff2:	add    DWORD PTR [ebp-0x60],eax
6401aff5:	cmp    eax,ebx
6401aff7:	jl     0x6401b1c7
6401affd:	mov    eax,DWORD PTR [ebp-0x5c]
6401b000:	sub    eax,DWORD PTR [ebp-0x64]
6401b003:	cmp    eax,DWORD PTR [ebp+0x524]
6401b009:	jb     0x6401af8b
6401b00b:	jmp    0x6401b1c7
6401b010:	cmp    bl,0x2
6401b013:	mov    DWORD PTR [ebp-0x54],eax
6401b016:	jne    0x6401b0bf
6401b01c:	cmp    DWORD PTR [ebp+0x524],ecx
6401b022:	jbe    0x6401b1fd
6401b028:	jmp    0x6401b02d
6401b02a:	mov    esi,DWORD PTR [ebp-0x70]
6401b02d:	mov    ecx,DWORD PTR [ebp-0x54]
6401b030:	and    DWORD PTR [ebp-0x5c],0x0
6401b034:	sub    ecx,DWORD PTR [ebp-0x64]
6401b037:	lea    eax,[ebp-0x50]
6401b03a:	cmp    ecx,DWORD PTR [ebp+0x524]
6401b040:	jae    0x6401b075
6401b042:	mov    edx,DWORD PTR [ebp-0x54]
6401b045:	add    DWORD PTR [ebp-0x54],0x2
6401b049:	movzx  edx,WORD PTR [edx]
6401b04c:	inc    ecx
6401b04d:	inc    ecx
6401b04e:	cmp    dx,0xa
6401b052:	jne    0x6401b063
6401b054:	add    DWORD PTR [ebp-0x68],0x2
6401b058:	mov    WORD PTR [eax],0xd
6401b05d:	inc    eax
6401b05e:	inc    eax
6401b05f:	add    DWORD PTR [ebp-0x5c],0x2
6401b063:	add    DWORD PTR [ebp-0x5c],0x2
6401b067:	mov    WORD PTR [eax],dx
6401b06a:	inc    eax
6401b06b:	inc    eax
6401b06c:	cmp    DWORD PTR [ebp-0x5c],0x3ff
6401b073:	jb     0x6401b03a
6401b075:	mov    ebx,eax
6401b077:	lea    eax,[ebp-0x50]
6401b07a:	sub    ebx,eax
6401b07c:	push   0x0
6401b07e:	lea    eax,[ebp-0x6c]
6401b081:	push   eax
6401b082:	push   ebx
6401b083:	lea    eax,[ebp-0x50]
6401b086:	push   eax
6401b087:	mov    eax,DWORD PTR [esi]
6401b089:	push   DWORD PTR [edi+eax*1]
6401b08c:	call   DWORD PTR ds:0x6402c094
6401b092:	test   eax,eax
6401b094:	je     0x6401b1be
6401b09a:	mov    eax,DWORD PTR [ebp-0x6c]
6401b09d:	add    DWORD PTR [ebp-0x60],eax
6401b0a0:	cmp    eax,ebx
6401b0a2:	jl     0x6401b1c7
6401b0a8:	mov    eax,DWORD PTR [ebp-0x54]
6401b0ab:	sub    eax,DWORD PTR [ebp-0x64]
6401b0ae:	cmp    eax,DWORD PTR [ebp+0x524]
6401b0b4:	jb     0x6401b02a
6401b0ba:	jmp    0x6401b1c7
6401b0bf:	cmp    DWORD PTR [ebp+0x524],ecx
6401b0c5:	jbe    0x6401b1fd
6401b0cb:	mov    ecx,DWORD PTR [ebp-0x54]
6401b0ce:	and    DWORD PTR [ebp-0x5c],0x0
6401b0d2:	sub    ecx,DWORD PTR [ebp-0x64]
6401b0d5:	push   0x2
6401b0d7:	lea    eax,[ebp+0x3b4]
6401b0dd:	pop    esi
6401b0de:	cmp    ecx,DWORD PTR [ebp+0x524]
6401b0e4:	jae    0x6401b112
6401b0e6:	mov    edx,DWORD PTR [ebp-0x54]
6401b0e9:	movzx  edx,WORD PTR [edx]
6401b0ec:	add    DWORD PTR [ebp-0x54],esi
6401b0ef:	add    ecx,esi
6401b0f1:	cmp    dx,0xa
6401b0f5:	jne    0x6401b101
6401b0f7:	mov    WORD PTR [eax],0xd
6401b0fc:	add    eax,esi
6401b0fe:	add    DWORD PTR [ebp-0x5c],esi
6401b101:	add    DWORD PTR [ebp-0x5c],esi
6401b104:	mov    WORD PTR [eax],dx
6401b107:	add    eax,esi
6401b109:	cmp    DWORD PTR [ebp-0x5c],0x152
6401b110:	jb     0x6401b0de
6401b112:	xor    esi,esi
6401b114:	push   esi
6401b115:	push   esi
6401b116:	push   0x2ab
6401b11b:	lea    ecx,[ebp+0x104]
6401b121:	push   ecx
6401b122:	lea    ecx,[ebp+0x3b4]
6401b128:	sub    eax,ecx
6401b12a:	cdq    
6401b12b:	sub    eax,edx
6401b12d:	sar    eax,1
6401b12f:	push   eax
6401b130:	mov    eax,ecx
6401b132:	push   eax
6401b133:	push   esi
6401b134:	push   0xfde9
6401b139:	call   DWORD PTR ds:0x6402c014
6401b13f:	mov    ebx,eax
6401b141:	cmp    ebx,esi
6401b143:	je     0x6401b1be
6401b145:	push   0x0
6401b147:	lea    eax,[ebp-0x6c]
6401b14a:	push   eax
6401b14b:	mov    eax,ebx
6401b14d:	sub    eax,esi
6401b14f:	push   eax
6401b150:	lea    eax,[ebp+esi*1+0x104]
6401b157:	push   eax
6401b158:	mov    eax,DWORD PTR [ebp-0x70]
6401b15b:	mov    eax,DWORD PTR [eax]
6401b15d:	push   DWORD PTR [edi+eax*1]
6401b160:	call   DWORD PTR ds:0x6402c094
6401b166:	test   eax,eax
6401b168:	je     0x6401b173
6401b16a:	add    esi,DWORD PTR [ebp-0x6c]
6401b16d:	cmp    ebx,esi
6401b16f:	jg     0x6401b145
6401b171:	jmp    0x6401b17c
6401b173:	call   DWORD PTR ds:0x6402c06c
6401b179:	mov    DWORD PTR [ebp-0x58],eax
6401b17c:	cmp    ebx,esi
6401b17e:	jg     0x6401b1c7
6401b180:	mov    eax,DWORD PTR [ebp-0x54]
6401b183:	sub    eax,DWORD PTR [ebp-0x64]
6401b186:	cmp    eax,DWORD PTR [ebp+0x524]
6401b18c:	mov    DWORD PTR [ebp-0x60],eax
6401b18f:	jb     0x6401b0cb
6401b195:	jmp    0x6401b1c7
6401b197:	push   0x0
6401b199:	lea    ecx,[ebp-0x6c]
6401b19c:	push   ecx
6401b19d:	push   DWORD PTR [ebp+0x524]
6401b1a3:	push   DWORD PTR [ebp-0x64]
6401b1a6:	push   DWORD PTR [eax]
6401b1a8:	call   DWORD PTR ds:0x6402c094
6401b1ae:	test   eax,eax
6401b1b0:	je     0x6401b1be
6401b1b2:	mov    eax,DWORD PTR [ebp-0x6c]
6401b1b5:	and    DWORD PTR [ebp-0x58],0x0
6401b1b9:	mov    DWORD PTR [ebp-0x60],eax
6401b1bc:	jmp    0x6401b1c7
6401b1be:	call   DWORD PTR ds:0x6402c06c
6401b1c4:	mov    DWORD PTR [ebp-0x58],eax
6401b1c7:	cmp    DWORD PTR [ebp-0x60],0x0
6401b1cb:	jne    0x6401b22a
6401b1cd:	cmp    DWORD PTR [ebp-0x58],0x0
6401b1d1:	je     0x6401b1fa
6401b1d3:	push   0x5
6401b1d5:	pop    esi
6401b1d6:	cmp    DWORD PTR [ebp-0x58],esi
6401b1d9:	jne    0x6401b1ef
6401b1db:	call   0x640166d3
6401b1e0:	mov    DWORD PTR [eax],0x9
6401b1e6:	call   0x640166e6
6401b1eb:	mov    DWORD PTR [eax],esi
6401b1ed:	jmp    0x6401b225
6401b1ef:	push   DWORD PTR [ebp-0x58]
6401b1f2:	call   0x640166f9
6401b1f7:	pop    ecx
6401b1f8:	jmp    0x6401b225
6401b1fa:	mov    esi,DWORD PTR [ebp-0x70]
6401b1fd:	mov    eax,DWORD PTR [esi]
6401b1ff:	test   BYTE PTR [edi+eax*1+0x4],0x40
6401b204:	je     0x6401b212
6401b206:	mov    eax,DWORD PTR [ebp-0x64]
6401b209:	cmp    BYTE PTR [eax],0x1a
6401b20c:	jne    0x6401b212
6401b20e:	xor    eax,eax
6401b210:	jmp    0x6401b230
6401b212:	call   0x640166d3
6401b217:	mov    DWORD PTR [eax],0x1c
6401b21d:	call   0x640166e6
6401b222:	and    DWORD PTR [eax],0x0
6401b225:	or     eax,0xffffffff
6401b228:	jmp    0x6401b230
6401b22a:	mov    eax,DWORD PTR [ebp-0x60]
6401b22d:	sub    eax,DWORD PTR [ebp-0x68]
6401b230:	pop    edi
6401b231:	pop    ebx
6401b232:	mov    ecx,DWORD PTR [ebp+0x510]
6401b238:	xor    ecx,ebp
6401b23a:	pop    esi
6401b23b:	call   0x64013d18
6401b240:	add    ebp,0x514
6401b246:	leave  
6401b247:	ret    
6401b248:	push   0x10
6401b24a:	push   0x64043f38
6401b24f:	call   0x640164d4
6401b254:	mov    eax,DWORD PTR [ebp+0x8]
6401b257:	cmp    eax,0xfffffffe
6401b25a:	jne    0x6401b277
6401b25c:	call   0x640166e6
6401b261:	and    DWORD PTR [eax],0x0
6401b264:	call   0x640166d3
6401b269:	mov    DWORD PTR [eax],0x9
6401b26f:	or     eax,0xffffffff
6401b272:	jmp    0x6401b314
6401b277:	xor    edi,edi
6401b279:	cmp    eax,edi
6401b27b:	jl     0x6401b285
6401b27d:	cmp    eax,DWORD PTR ds:0x640556c8
6401b283:	jb     0x6401b2a6
6401b285:	call   0x640166e6
6401b28a:	mov    DWORD PTR [eax],edi
6401b28c:	call   0x640166d3
6401b291:	mov    DWORD PTR [eax],0x9
6401b297:	push   edi
6401b298:	push   edi
6401b299:	push   edi
6401b29a:	push   edi
6401b29b:	push   edi
6401b29c:	call   0x64013e62
6401b2a1:	add    esp,0x14
6401b2a4:	jmp    0x6401b26f
6401b2a6:	mov    ecx,eax
6401b2a8:	sar    ecx,0x5
6401b2ab:	lea    ebx,[ecx*4+0x640556e0]
6401b2b2:	mov    esi,eax
6401b2b4:	and    esi,0x1f
6401b2b7:	shl    esi,0x6
6401b2ba:	mov    ecx,DWORD PTR [ebx]
6401b2bc:	movzx  ecx,BYTE PTR [ecx+esi*1+0x4]
6401b2c1:	and    ecx,0x1
6401b2c4:	je     0x6401b285
6401b2c6:	push   eax
6401b2c7:	call   0x640199ac
6401b2cc:	pop    ecx
6401b2cd:	mov    DWORD PTR [ebp-0x4],edi
6401b2d0:	mov    eax,DWORD PTR [ebx]
6401b2d2:	test   BYTE PTR [eax+esi*1+0x4],0x1
6401b2d7:	je     0x6401b2ef
6401b2d9:	push   DWORD PTR [ebp+0x10]
6401b2dc:	push   DWORD PTR [ebp+0xc]
6401b2df:	push   DWORD PTR [ebp+0x8]
6401b2e2:	call   0x6401ac26
6401b2e7:	add    esp,0xc
6401b2ea:	mov    DWORD PTR [ebp-0x1c],eax
6401b2ed:	jmp    0x6401b305
6401b2ef:	call   0x640166d3
6401b2f4:	mov    DWORD PTR [eax],0x9
6401b2fa:	call   0x640166e6
6401b2ff:	mov    DWORD PTR [eax],edi
6401b301:	or     DWORD PTR [ebp-0x1c],0xffffffff
6401b305:	mov    DWORD PTR [ebp-0x4],0xfffffffe
6401b30c:	call   0x6401b31a
6401b311:	mov    eax,DWORD PTR [ebp-0x1c]
6401b314:	call   0x64016519
6401b319:	ret    
6401b31a:	push   DWORD PTR [ebp+0x8]
6401b31d:	call   0x64019a4c
6401b322:	pop    ecx
6401b323:	ret    
6401b324:	push   esi
6401b325:	push   edi
6401b326:	xor    esi,esi
6401b328:	mov    edi,0x64053f20
6401b32d:	cmp    DWORD PTR [esi*8+0x64052dfc],0x1
6401b335:	jne    0x6401b355
6401b337:	lea    eax,[esi*8+0x64052df8]
6401b33e:	mov    DWORD PTR [eax],edi
6401b340:	push   0xfa0
6401b345:	push   DWORD PTR [eax]
6401b347:	add    edi,0x18
6401b34a:	call   0x6401e8da
6401b34f:	test   eax,eax
6401b351:	pop    ecx
6401b352:	pop    ecx
6401b353:	je     0x6401b361
6401b355:	inc    esi
6401b356:	cmp    esi,0x24
6401b359:	jl     0x6401b32d
6401b35b:	xor    eax,eax
6401b35d:	inc    eax
6401b35e:	pop    edi
6401b35f:	pop    esi
6401b360:	ret    
6401b361:	and    DWORD PTR [esi*8+0x64052df8],0x0
6401b369:	xor    eax,eax
6401b36b:	jmp    0x6401b35e
6401b36d:	push   ebx
6401b36e:	mov    ebx,DWORD PTR ds:0x6402c170
6401b374:	push   esi
6401b375:	mov    esi,0x64052df8
6401b37a:	push   edi
6401b37b:	mov    edi,DWORD PTR [esi]
6401b37d:	test   edi,edi
6401b37f:	je     0x6401b394
6401b381:	cmp    DWORD PTR [esi+0x4],0x1
6401b385:	je     0x6401b394
6401b387:	push   edi
6401b388:	call   ebx
6401b38a:	push   edi
6401b38b:	call   0x640147cf
6401b390:	and    DWORD PTR [esi],0x0
6401b393:	pop    ecx
6401b394:	add    esi,0x8
6401b397:	cmp    esi,0x64052f18
6401b39d:	jl     0x6401b37b
6401b39f:	mov    esi,0x64052df8
6401b3a4:	pop    edi
6401b3a5:	mov    eax,DWORD PTR [esi]
6401b3a7:	test   eax,eax
6401b3a9:	je     0x6401b3b4
6401b3ab:	cmp    DWORD PTR [esi+0x4],0x1
6401b3af:	jne    0x6401b3b4
6401b3b1:	push   eax
6401b3b2:	call   ebx
6401b3b4:	add    esi,0x8
6401b3b7:	cmp    esi,0x64052f18
6401b3bd:	jl     0x6401b3a5
6401b3bf:	pop    esi
6401b3c0:	pop    ebx
6401b3c1:	ret    
6401b3c2:	push   ebp
6401b3c3:	mov    ebp,esp
6401b3c5:	mov    eax,DWORD PTR [ebp+0x8]
6401b3c8:	push   DWORD PTR [eax*8+0x64052df8]
6401b3cf:	call   DWORD PTR ds:0x6402c178
6401b3d5:	pop    ebp
6401b3d6:	ret    
6401b3d7:	push   0xc
6401b3d9:	push   0x64043f58
6401b3de:	call   0x640164d4
6401b3e3:	xor    edi,edi
6401b3e5:	inc    edi
6401b3e6:	mov    DWORD PTR [ebp-0x1c],edi
6401b3e9:	xor    ebx,ebx
6401b3eb:	cmp    DWORD PTR ds:0x64053ed4,ebx
6401b3f1:	jne    0x6401b40b
6401b3f3:	call   0x6401c19d
6401b3f8:	push   0x1e
6401b3fa:	call   0x6401bffd
6401b3ff:	push   0xff
6401b404:	call   0x64018070
6401b409:	pop    ecx
6401b40a:	pop    ecx
6401b40b:	mov    esi,DWORD PTR [ebp+0x8]
6401b40e:	lea    esi,[esi*8+0x64052df8]
6401b415:	cmp    DWORD PTR [esi],ebx
6401b417:	je     0x6401b41d
6401b419:	mov    eax,edi
6401b41b:	jmp    0x6401b48b
6401b41d:	push   0x18
6401b41f:	call   0x640162ef
6401b424:	pop    ecx
6401b425:	mov    edi,eax
6401b427:	cmp    edi,ebx
6401b429:	jne    0x6401b43a
6401b42b:	call   0x640166d3
6401b430:	mov    DWORD PTR [eax],0xc
6401b436:	xor    eax,eax
6401b438:	jmp    0x6401b48b
6401b43a:	push   0xa
6401b43c:	call   0x6401b49a
6401b441:	pop    ecx
6401b442:	mov    DWORD PTR [ebp-0x4],ebx
6401b445:	cmp    DWORD PTR [esi],ebx
6401b447:	jne    0x6401b475
6401b449:	push   0xfa0
6401b44e:	push   edi
6401b44f:	call   0x6401e8da
6401b454:	pop    ecx
6401b455:	pop    ecx
6401b456:	test   eax,eax
6401b458:	jne    0x6401b471
6401b45a:	push   edi
6401b45b:	call   0x640147cf
6401b460:	pop    ecx
6401b461:	call   0x640166d3
6401b466:	mov    DWORD PTR [eax],0xc
6401b46c:	mov    DWORD PTR [ebp-0x1c],ebx
6401b46f:	jmp    0x6401b47c
6401b471:	mov    DWORD PTR [esi],edi
6401b473:	jmp    0x6401b47c
6401b475:	push   edi
6401b476:	call   0x640147cf
6401b47b:	pop    ecx
6401b47c:	mov    DWORD PTR [ebp-0x4],0xfffffffe
6401b483:	call   0x6401b491
6401b488:	mov    eax,DWORD PTR [ebp-0x1c]
6401b48b:	call   0x64016519
6401b490:	ret    
6401b491:	push   0xa
6401b493:	call   0x6401b3c2
6401b498:	pop    ecx
6401b499:	ret    
6401b49a:	push   ebp
6401b49b:	mov    ebp,esp
6401b49d:	mov    eax,DWORD PTR [ebp+0x8]
6401b4a0:	push   esi
6401b4a1:	lea    esi,[eax*8+0x64052df8]
6401b4a8:	cmp    DWORD PTR [esi],0x0
6401b4ab:	jne    0x6401b4c0
6401b4ad:	push   eax
6401b4ae:	call   0x6401b3d7
6401b4b3:	test   eax,eax
6401b4b5:	pop    ecx
6401b4b6:	jne    0x6401b4c0
6401b4b8:	push   0x11
6401b4ba:	call   0x64018026
6401b4bf:	pop    ecx
6401b4c0:	push   DWORD PTR [esi]
6401b4c2:	call   DWORD PTR ds:0x6402c174
6401b4c8:	pop    esi
6401b4c9:	pop    ebp
6401b4ca:	ret    
6401b4cb:	push   0x140
6401b4d0:	push   0x0
6401b4d2:	push   DWORD PTR ds:0x64053ed4
6401b4d8:	call   DWORD PTR ds:0x6402c194
6401b4de:	test   eax,eax
6401b4e0:	mov    ds:0x640546a0,eax
6401b4e5:	jne    0x6401b4e8
6401b4e7:	ret    
6401b4e8:	mov    ecx,DWORD PTR [esp+0x4]
6401b4ec:	and    DWORD PTR ds:0x64054070,0x0
6401b4f3:	and    DWORD PTR ds:0x6405469c,0x0
6401b4fa:	mov    ds:0x640546a8,eax
6401b4ff:	xor    eax,eax
6401b501:	mov    DWORD PTR ds:0x640546a4,ecx
6401b507:	mov    DWORD PTR ds:0x640546ac,0x10
6401b511:	inc    eax
6401b512:	ret    
6401b513:	mov    ecx,DWORD PTR ds:0x6405469c
6401b519:	mov    eax,ds:0x640546a0
6401b51e:	imul   ecx,ecx,0x14
6401b521:	add    ecx,eax
6401b523:	jmp    0x6401b537
6401b525:	mov    edx,DWORD PTR [esp+0x4]
6401b529:	sub    edx,DWORD PTR [eax+0xc]
6401b52c:	cmp    edx,0x100000
6401b532:	jb     0x6401b53d
6401b534:	add    eax,0x14
6401b537:	cmp    eax,ecx
6401b539:	jb     0x6401b525
6401b53b:	xor    eax,eax
6401b53d:	ret    
6401b53e:	push   ebp
6401b53f:	mov    ebp,esp
6401b541:	sub    esp,0x10
6401b544:	mov    ecx,DWORD PTR [ebp+0x8]
6401b547:	mov    eax,DWORD PTR [ecx+0x10]
6401b54a:	push   esi
6401b54b:	mov    esi,DWORD PTR [ebp+0xc]
6401b54e:	push   edi
6401b54f:	mov    edi,esi
6401b551:	sub    edi,DWORD PTR [ecx+0xc]
6401b554:	add    esi,0xfffffffc
6401b557:	shr    edi,0xf
6401b55a:	mov    ecx,edi
6401b55c:	imul   ecx,ecx,0x204
6401b562:	lea    ecx,[ecx+eax*1+0x144]
6401b569:	mov    DWORD PTR [ebp-0x10],ecx
6401b56c:	mov    ecx,DWORD PTR [esi]
6401b56e:	dec    ecx
6401b56f:	test   cl,0x1
6401b572:	mov    DWORD PTR [ebp-0x4],ecx
6401b575:	jne    0x6401b84e
6401b57b:	push   ebx
6401b57c:	lea    ebx,[ecx+esi*1]
6401b57f:	mov    edx,DWORD PTR [ebx]
6401b581:	mov    DWORD PTR [ebp-0xc],edx
6401b584:	mov    edx,DWORD PTR [esi-0x4]
6401b587:	mov    DWORD PTR [ebp-0x8],edx
6401b58a:	mov    edx,DWORD PTR [ebp-0xc]
6401b58d:	test   dl,0x1
6401b590:	mov    DWORD PTR [ebp+0xc],ebx
6401b593:	jne    0x6401b609
6401b595:	sar    edx,0x4
6401b598:	dec    edx
6401b599:	cmp    edx,0x3f
6401b59c:	jbe    0x6401b5a1
6401b59e:	push   0x3f
6401b5a0:	pop    edx
6401b5a1:	mov    ecx,DWORD PTR [ebx+0x4]
6401b5a4:	cmp    ecx,DWORD PTR [ebx+0x8]
6401b5a7:	jne    0x6401b5eb
6401b5a9:	cmp    edx,0x20
6401b5ac:	mov    ebx,0x80000000
6401b5b1:	jae    0x6401b5cc
6401b5b3:	mov    ecx,edx
6401b5b5:	shr    ebx,cl
6401b5b7:	lea    ecx,[edx+eax*1+0x4]
6401b5bb:	not    ebx
6401b5bd:	and    DWORD PTR [eax+edi*4+0x44],ebx
6401b5c1:	dec    BYTE PTR [ecx]
6401b5c3:	jne    0x6401b5e8
6401b5c5:	mov    ecx,DWORD PTR [ebp+0x8]
6401b5c8:	and    DWORD PTR [ecx],ebx
6401b5ca:	jmp    0x6401b5e8
6401b5cc:	lea    ecx,[edx-0x20]
6401b5cf:	shr    ebx,cl
6401b5d1:	lea    ecx,[edx+eax*1+0x4]
6401b5d5:	not    ebx
6401b5d7:	and    DWORD PTR [eax+edi*4+0xc4],ebx
6401b5de:	dec    BYTE PTR [ecx]
6401b5e0:	jne    0x6401b5e8
6401b5e2:	mov    ecx,DWORD PTR [ebp+0x8]
6401b5e5:	and    DWORD PTR [ecx+0x4],ebx
6401b5e8:	mov    ebx,DWORD PTR [ebp+0xc]
6401b5eb:	mov    edx,DWORD PTR [ebx+0x8]
6401b5ee:	mov    ebx,DWORD PTR [ebx+0x4]
6401b5f1:	mov    ecx,DWORD PTR [ebp-0x4]
6401b5f4:	add    ecx,DWORD PTR [ebp-0xc]
6401b5f7:	mov    DWORD PTR [edx+0x4],ebx
6401b5fa:	mov    edx,DWORD PTR [ebp+0xc]
6401b5fd:	mov    ebx,DWORD PTR [edx+0x4]
6401b600:	mov    edx,DWORD PTR [edx+0x8]
6401b603:	mov    DWORD PTR [ebx+0x8],edx
6401b606:	mov    DWORD PTR [ebp-0x4],ecx
6401b609:	mov    edx,ecx
6401b60b:	sar    edx,0x4
6401b60e:	dec    edx
6401b60f:	cmp    edx,0x3f
6401b612:	jbe    0x6401b617
6401b614:	push   0x3f
6401b616:	pop    edx
6401b617:	mov    ebx,DWORD PTR [ebp-0x8]
6401b61a:	and    ebx,0x1
6401b61d:	mov    DWORD PTR [ebp-0xc],ebx
6401b620:	jne    0x6401b6b5
6401b626:	sub    esi,DWORD PTR [ebp-0x8]
6401b629:	mov    ebx,DWORD PTR [ebp-0x8]
6401b62c:	sar    ebx,0x4
6401b62f:	push   0x3f
6401b631:	mov    DWORD PTR [ebp+0xc],esi
6401b634:	dec    ebx
6401b635:	pop    esi
6401b636:	cmp    ebx,esi
6401b638:	jbe    0x6401b63c
6401b63a:	mov    ebx,esi
6401b63c:	add    ecx,DWORD PTR [ebp-0x8]
6401b63f:	mov    edx,ecx
6401b641:	sar    edx,0x4
6401b644:	dec    edx
6401b645:	cmp    edx,esi
6401b647:	mov    DWORD PTR [ebp-0x4],ecx
6401b64a:	jbe    0x6401b64e
6401b64c:	mov    edx,esi
6401b64e:	cmp    ebx,edx
6401b650:	je     0x6401b6b0
6401b652:	mov    ecx,DWORD PTR [ebp+0xc]
6401b655:	mov    esi,DWORD PTR [ecx+0x4]
6401b658:	cmp    esi,DWORD PTR [ecx+0x8]
6401b65b:	jne    0x6401b698
6401b65d:	cmp    ebx,0x20
6401b660:	mov    esi,0x80000000
6401b665:	jae    0x6401b67e
6401b667:	mov    ecx,ebx
6401b669:	shr    esi,cl
6401b66b:	not    esi
6401b66d:	and    DWORD PTR [eax+edi*4+0x44],esi
6401b671:	dec    BYTE PTR [ebx+eax*1+0x4]
6401b675:	jne    0x6401b698
6401b677:	mov    ecx,DWORD PTR [ebp+0x8]
6401b67a:	and    DWORD PTR [ecx],esi
6401b67c:	jmp    0x6401b698
6401b67e:	lea    ecx,[ebx-0x20]
6401b681:	shr    esi,cl
6401b683:	not    esi
6401b685:	and    DWORD PTR [eax+edi*4+0xc4],esi
6401b68c:	dec    BYTE PTR [ebx+eax*1+0x4]
6401b690:	jne    0x6401b698
6401b692:	mov    ecx,DWORD PTR [ebp+0x8]
6401b695:	and    DWORD PTR [ecx+0x4],esi
6401b698:	mov    ecx,DWORD PTR [ebp+0xc]
6401b69b:	mov    esi,DWORD PTR [ecx+0x8]
6401b69e:	mov    ecx,DWORD PTR [ecx+0x4]
6401b6a1:	mov    DWORD PTR [esi+0x4],ecx
6401b6a4:	mov    ecx,DWORD PTR [ebp+0xc]
6401b6a7:	mov    esi,DWORD PTR [ecx+0x4]
6401b6aa:	mov    ecx,DWORD PTR [ecx+0x8]
6401b6ad:	mov    DWORD PTR [esi+0x8],ecx
6401b6b0:	mov    esi,DWORD PTR [ebp+0xc]
6401b6b3:	jmp    0x6401b6b8
6401b6b5:	mov    ebx,DWORD PTR [ebp+0x8]
6401b6b8:	cmp    DWORD PTR [ebp-0xc],0x0
6401b6bc:	jne    0x6401b6c6
6401b6be:	cmp    ebx,edx
6401b6c0:	je     0x6401b746
6401b6c6:	mov    ecx,DWORD PTR [ebp-0x10]
6401b6c9:	lea    ecx,[ecx+edx*8]
6401b6cc:	mov    ebx,DWORD PTR [ecx+0x4]
6401b6cf:	mov    DWORD PTR [esi+0x8],ecx
6401b6d2:	mov    DWORD PTR [esi+0x4],ebx
6401b6d5:	mov    DWORD PTR [ecx+0x4],esi
6401b6d8:	mov    ecx,DWORD PTR [esi+0x4]
6401b6db:	mov    DWORD PTR [ecx+0x8],esi
6401b6de:	mov    ecx,DWORD PTR [esi+0x4]
6401b6e1:	cmp    ecx,DWORD PTR [esi+0x8]
6401b6e4:	jne    0x6401b746
6401b6e6:	mov    cl,BYTE PTR [edx+eax*1+0x4]
6401b6ea:	mov    BYTE PTR [ebp+0xf],cl
6401b6ed:	inc    cl
6401b6ef:	cmp    edx,0x20
6401b6f2:	mov    BYTE PTR [edx+eax*1+0x4],cl
6401b6f6:	jae    0x6401b71d
6401b6f8:	cmp    BYTE PTR [ebp+0xf],0x0
6401b6fc:	jne    0x6401b70c
6401b6fe:	mov    ecx,edx
6401b700:	mov    ebx,0x80000000
6401b705:	shr    ebx,cl
6401b707:	mov    ecx,DWORD PTR [ebp+0x8]
6401b70a:	or     DWORD PTR [ecx],ebx
6401b70c:	mov    ebx,0x80000000
6401b711:	mov    ecx,edx
6401b713:	shr    ebx,cl
6401b715:	lea    eax,[eax+edi*4+0x44]
6401b719:	or     DWORD PTR [eax],ebx
6401b71b:	jmp    0x6401b746
6401b71d:	cmp    BYTE PTR [ebp+0xf],0x0
6401b721:	jne    0x6401b733
6401b723:	lea    ecx,[edx-0x20]
6401b726:	mov    ebx,0x80000000
6401b72b:	shr    ebx,cl
6401b72d:	mov    ecx,DWORD PTR [ebp+0x8]
6401b730:	or     DWORD PTR [ecx+0x4],ebx
6401b733:	lea    ecx,[edx-0x20]
6401b736:	mov    edx,0x80000000
6401b73b:	shr    edx,cl
6401b73d:	lea    eax,[eax+edi*4+0xc4]
6401b744:	or     DWORD PTR [eax],edx
6401b746:	mov    eax,DWORD PTR [ebp-0x4]
6401b749:	mov    DWORD PTR [esi],eax
6401b74b:	mov    DWORD PTR [eax+esi*1-0x4],eax
6401b74f:	mov    eax,DWORD PTR [ebp-0x10]
6401b752:	dec    DWORD PTR [eax]
6401b754:	jne    0x6401b84d
6401b75a:	mov    eax,ds:0x64054070
6401b75f:	test   eax,eax
6401b761:	je     0x6401b83f
6401b767:	mov    ecx,DWORD PTR ds:0x640546b0
6401b76d:	mov    esi,DWORD PTR ds:0x6402c160
6401b773:	push   0x4000
6401b778:	shl    ecx,0xf
6401b77b:	add    ecx,DWORD PTR [eax+0xc]
6401b77e:	mov    ebx,0x8000
6401b783:	push   ebx
6401b784:	push   ecx
6401b785:	call   esi
6401b787:	mov    ecx,DWORD PTR ds:0x640546b0
6401b78d:	mov    eax,ds:0x64054070
6401b792:	mov    edx,0x80000000
6401b797:	shr    edx,cl
6401b799:	or     DWORD PTR [eax+0x8],edx
6401b79c:	mov    eax,ds:0x64054070
6401b7a1:	mov    eax,DWORD PTR [eax+0x10]
6401b7a4:	mov    ecx,DWORD PTR ds:0x640546b0
6401b7aa:	and    DWORD PTR [eax+ecx*4+0xc4],0x0
6401b7b2:	mov    eax,ds:0x64054070
6401b7b7:	mov    eax,DWORD PTR [eax+0x10]
6401b7ba:	dec    BYTE PTR [eax+0x43]
6401b7bd:	mov    eax,ds:0x64054070
6401b7c2:	mov    ecx,DWORD PTR [eax+0x10]
6401b7c5:	cmp    BYTE PTR [ecx+0x43],0x0
6401b7c9:	jne    0x6401b7d4
6401b7cb:	and    DWORD PTR [eax+0x4],0xfffffffe
6401b7cf:	mov    eax,ds:0x64054070
6401b7d4:	cmp    DWORD PTR [eax+0x8],0xffffffff
6401b7d8:	jne    0x6401b83f
6401b7da:	push   ebx
6401b7db:	push   0x0
6401b7dd:	push   DWORD PTR [eax+0xc]
6401b7e0:	call   esi
6401b7e2:	mov    eax,ds:0x64054070
6401b7e7:	push   DWORD PTR [eax+0x10]
6401b7ea:	push   0x0
6401b7ec:	push   DWORD PTR ds:0x64053ed4
6401b7f2:	call   DWORD PTR ds:0x6402c198
6401b7f8:	mov    ecx,DWORD PTR ds:0x6405469c
6401b7fe:	mov    eax,ds:0x64054070
6401b803:	imul   ecx,ecx,0x14
6401b806:	mov    edx,DWORD PTR ds:0x640546a0
6401b80c:	sub    ecx,eax
6401b80e:	lea    ecx,[ecx+edx*1-0x14]
6401b812:	push   ecx
6401b813:	lea    ecx,[eax+0x14]
6401b816:	push   ecx
6401b817:	push   eax
6401b818:	call   0x64016720
6401b81d:	mov    eax,DWORD PTR [ebp+0x8]
6401b820:	add    esp,0xc
6401b823:	dec    DWORD PTR ds:0x6405469c
6401b829:	cmp    eax,DWORD PTR ds:0x64054070
6401b82f:	jbe    0x6401b835
6401b831:	sub    DWORD PTR [ebp+0x8],0x14
6401b835:	mov    eax,ds:0x640546a0
6401b83a:	mov    ds:0x640546a8,eax
6401b83f:	mov    eax,DWORD PTR [ebp+0x8]
6401b842:	mov    ds:0x64054070,eax
6401b847:	mov    DWORD PTR ds:0x640546b0,edi
6401b84d:	pop    ebx
6401b84e:	pop    edi
6401b84f:	pop    esi
6401b850:	leave  
6401b851:	ret    
6401b852:	mov    eax,ds:0x640546ac
6401b857:	push   esi
6401b858:	mov    esi,DWORD PTR ds:0x6405469c
6401b85e:	push   edi
6401b85f:	xor    edi,edi
6401b861:	cmp    esi,eax
6401b863:	jne    0x6401b899
6401b865:	add    eax,0x10
6401b868:	imul   eax,eax,0x14
6401b86b:	push   eax
6401b86c:	push   DWORD PTR ds:0x640546a0
6401b872:	push   edi
6401b873:	push   DWORD PTR ds:0x64053ed4
6401b879:	call   DWORD PTR ds:0x6402c19c
6401b87f:	cmp    eax,edi
6401b881:	jne    0x6401b887
6401b883:	xor    eax,eax
6401b885:	jmp    0x6401b8ff
6401b887:	add    DWORD PTR ds:0x640546ac,0x10
6401b88e:	mov    esi,DWORD PTR ds:0x6405469c
6401b894:	mov    ds:0x640546a0,eax
6401b899:	imul   esi,esi,0x14
6401b89c:	add    esi,DWORD PTR ds:0x640546a0
6401b8a2:	push   0x41c4
6401b8a7:	push   0x8
6401b8a9:	push   DWORD PTR ds:0x64053ed4
6401b8af:	call   DWORD PTR ds:0x6402c194
6401b8b5:	cmp    eax,edi
6401b8b7:	mov    DWORD PTR [esi+0x10],eax
6401b8ba:	je     0x6401b883
6401b8bc:	push   0x4
6401b8be:	push   0x2000
6401b8c3:	push   0x100000
6401b8c8:	push   edi
6401b8c9:	call   DWORD PTR ds:0x6402c1c0
6401b8cf:	cmp    eax,edi
6401b8d1:	mov    DWORD PTR [esi+0xc],eax
6401b8d4:	jne    0x6401b8e8
6401b8d6:	push   DWORD PTR [esi+0x10]
6401b8d9:	push   edi
6401b8da:	push   DWORD PTR ds:0x64053ed4
6401b8e0:	call   DWORD PTR ds:0x6402c198
6401b8e6:	jmp    0x6401b883
6401b8e8:	or     DWORD PTR [esi+0x8],0xffffffff
6401b8ec:	mov    DWORD PTR [esi],edi
6401b8ee:	mov    DWORD PTR [esi+0x4],edi
6401b8f1:	inc    DWORD PTR ds:0x6405469c
6401b8f7:	mov    eax,DWORD PTR [esi+0x10]
6401b8fa:	or     DWORD PTR [eax],0xffffffff
6401b8fd:	mov    eax,esi
6401b8ff:	pop    edi
6401b900:	pop    esi
6401b901:	ret    
6401b902:	push   ebp
6401b903:	mov    ebp,esp
6401b905:	push   ecx
6401b906:	push   ecx
6401b907:	mov    ecx,DWORD PTR [ebp+0x8]
6401b90a:	mov    eax,DWORD PTR [ecx+0x8]
6401b90d:	push   ebx
6401b90e:	push   esi
6401b90f:	mov    esi,DWORD PTR [ecx+0x10]
6401b912:	push   edi
6401b913:	xor    ebx,ebx
6401b915:	jmp    0x6401b91a
6401b917:	add    eax,eax
6401b919:	inc    ebx
6401b91a:	test   eax,eax
6401b91c:	jge    0x6401b917
6401b91e:	mov    eax,ebx
6401b920:	imul   eax,eax,0x204
6401b926:	lea    eax,[eax+esi*1+0x144]
6401b92d:	push   0x3f
6401b92f:	mov    DWORD PTR [ebp-0x8],eax
6401b932:	pop    edx
6401b933:	mov    DWORD PTR [eax+0x8],eax
6401b936:	mov    DWORD PTR [eax+0x4],eax
6401b939:	add    eax,0x8
6401b93c:	dec    edx
6401b93d:	jne    0x6401b933
6401b93f:	push   0x4
6401b941:	mov    edi,ebx
6401b943:	push   0x1000
6401b948:	shl    edi,0xf
6401b94b:	add    edi,DWORD PTR [ecx+0xc]
6401b94e:	push   0x8000
6401b953:	push   edi
6401b954:	call   DWORD PTR ds:0x6402c1c0
6401b95a:	test   eax,eax
6401b95c:	jne    0x6401b966
6401b95e:	or     eax,0xffffffff
6401b961:	jmp    0x6401ba03
6401b966:	lea    edx,[edi+0x7000]
6401b96c:	cmp    edi,edx
6401b96e:	mov    DWORD PTR [ebp-0x4],edx
6401b971:	ja     0x6401b9b6
6401b973:	mov    ecx,edx
6401b975:	sub    ecx,edi
6401b977:	shr    ecx,0xc
6401b97a:	lea    eax,[edi+0x10]
6401b97d:	inc    ecx
6401b97e:	or     DWORD PTR [eax-0x8],0xffffffff
6401b982:	or     DWORD PTR [eax+0xfec],0xffffffff
6401b989:	lea    edx,[eax+0xffc]
6401b98f:	mov    DWORD PTR [eax],edx
6401b991:	lea    edx,[eax-0x1004]
6401b997:	mov    DWORD PTR [eax-0x4],0xff0
6401b99e:	mov    DWORD PTR [eax+0x4],edx
6401b9a1:	mov    DWORD PTR [eax+0xfe8],0xff0
6401b9ab:	add    eax,0x1000
6401b9b0:	dec    ecx
6401b9b1:	jne    0x6401b97e
6401b9b3:	mov    edx,DWORD PTR [ebp-0x4]
6401b9b6:	mov    eax,DWORD PTR [ebp-0x8]
6401b9b9:	add    eax,0x1f8
6401b9be:	lea    ecx,[edi+0xc]
6401b9c1:	mov    DWORD PTR [eax+0x4],ecx
6401b9c4:	mov    DWORD PTR [ecx+0x8],eax
6401b9c7:	lea    ecx,[edx+0xc]
6401b9ca:	mov    DWORD PTR [eax+0x8],ecx
6401b9cd:	mov    DWORD PTR [ecx+0x4],eax
6401b9d0:	and    DWORD PTR [esi+ebx*4+0x44],0x0
6401b9d5:	xor    edi,edi
6401b9d7:	inc    edi
6401b9d8:	mov    DWORD PTR [esi+ebx*4+0xc4],edi
6401b9df:	mov    al,BYTE PTR [esi+0x43]
6401b9e2:	mov    cl,al
6401b9e4:	inc    cl
6401b9e6:	test   al,al
6401b9e8:	mov    eax,DWORD PTR [ebp+0x8]
6401b9eb:	mov    BYTE PTR [esi+0x43],cl
6401b9ee:	jne    0x6401b9f3
6401b9f0:	or     DWORD PTR [eax+0x4],edi
6401b9f3:	mov    edx,0x80000000
6401b9f8:	mov    ecx,ebx
6401b9fa:	shr    edx,cl
6401b9fc:	not    edx
6401b9fe:	and    DWORD PTR [eax+0x8],edx
6401ba01:	mov    eax,ebx
6401ba03:	pop    edi
6401ba04:	pop    esi
6401ba05:	pop    ebx
6401ba06:	leave  
6401ba07:	ret    
6401ba08:	push   ebp
6401ba09:	mov    ebp,esp
6401ba0b:	sub    esp,0xc
6401ba0e:	mov    ecx,DWORD PTR [ebp+0x8]
6401ba11:	mov    eax,DWORD PTR [ecx+0x10]
6401ba14:	push   ebx
6401ba15:	push   esi
6401ba16:	mov    esi,DWORD PTR [ebp+0x10]
6401ba19:	push   edi
6401ba1a:	mov    edi,DWORD PTR [ebp+0xc]
6401ba1d:	mov    edx,edi
6401ba1f:	sub    edx,DWORD PTR [ecx+0xc]
6401ba22:	add    esi,0x17
6401ba25:	shr    edx,0xf
6401ba28:	mov    ecx,edx
6401ba2a:	imul   ecx,ecx,0x204
6401ba30:	lea    ecx,[ecx+eax*1+0x144]
6401ba37:	mov    DWORD PTR [ebp-0xc],ecx
6401ba3a:	mov    ecx,DWORD PTR [edi-0x4]
6401ba3d:	and    esi,0xfffffff0
6401ba40:	dec    ecx
6401ba41:	cmp    esi,ecx
6401ba43:	lea    edi,[ecx+edi*1-0x4]
6401ba47:	mov    ebx,DWORD PTR [edi]
6401ba49:	mov    DWORD PTR [ebp+0x10],ecx
6401ba4c:	mov    DWORD PTR [ebp-0x4],ebx
6401ba4f:	jle    0x6401bbaa
6401ba55:	test   bl,0x1
6401ba58:	jne    0x6401bba3
6401ba5e:	add    ebx,ecx
6401ba60:	cmp    esi,ebx
6401ba62:	jg     0x6401bba3
6401ba68:	mov    ecx,DWORD PTR [ebp-0x4]
6401ba6b:	sar    ecx,0x4
6401ba6e:	dec    ecx
6401ba6f:	cmp    ecx,0x3f
6401ba72:	mov    DWORD PTR [ebp-0x8],ecx
6401ba75:	jbe    0x6401ba7d
6401ba77:	push   0x3f
6401ba79:	pop    ecx
6401ba7a:	mov    DWORD PTR [ebp-0x8],ecx
6401ba7d:	mov    ebx,DWORD PTR [edi+0x4]
6401ba80:	cmp    ebx,DWORD PTR [edi+0x8]
6401ba83:	jne    0x6401bac8
6401ba85:	cmp    ecx,0x20
6401ba88:	mov    ebx,0x80000000
6401ba8d:	jae    0x6401baa9
6401ba8f:	shr    ebx,cl
6401ba91:	mov    ecx,DWORD PTR [ebp-0x8]
6401ba94:	lea    ecx,[ecx+eax*1+0x4]
6401ba98:	not    ebx
6401ba9a:	and    DWORD PTR [eax+edx*4+0x44],ebx
6401ba9e:	dec    BYTE PTR [ecx]
6401baa0:	jne    0x6401bac8
6401baa2:	mov    ecx,DWORD PTR [ebp+0x8]
6401baa5:	and    DWORD PTR [ecx],ebx
6401baa7:	jmp    0x6401bac8
6401baa9:	add    ecx,0xffffffe0
6401baac:	shr    ebx,cl
6401baae:	mov    ecx,DWORD PTR [ebp-0x8]
6401bab1:	lea    ecx,[ecx+eax*1+0x4]
6401bab5:	not    ebx
6401bab7:	and    DWORD PTR [eax+edx*4+0xc4],ebx
6401babe:	dec    BYTE PTR [ecx]
6401bac0:	jne    0x6401bac8
6401bac2:	mov    ecx,DWORD PTR [ebp+0x8]
6401bac5:	and    DWORD PTR [ecx+0x4],ebx
6401bac8:	mov    ecx,DWORD PTR [edi+0x8]
6401bacb:	mov    ebx,DWORD PTR [edi+0x4]
6401bace:	mov    DWORD PTR [ecx+0x4],ebx
6401bad1:	mov    ecx,DWORD PTR [edi+0x4]
6401bad4:	mov    edi,DWORD PTR [edi+0x8]
6401bad7:	mov    DWORD PTR [ecx+0x8],edi
6401bada:	mov    ecx,DWORD PTR [ebp+0x10]
6401badd:	sub    ecx,esi
6401badf:	add    DWORD PTR [ebp-0x4],ecx
6401bae2:	cmp    DWORD PTR [ebp-0x4],0x0
6401bae6:	jle    0x6401bb91
6401baec:	mov    edi,DWORD PTR [ebp-0x4]
6401baef:	mov    ecx,DWORD PTR [ebp+0xc]
6401baf2:	sar    edi,0x4
6401baf5:	dec    edi
6401baf6:	cmp    edi,0x3f
6401baf9:	lea    ecx,[ecx+esi*1-0x4]
6401bafd:	jbe    0x6401bb02
6401baff:	push   0x3f
6401bb01:	pop    edi
6401bb02:	mov    ebx,DWORD PTR [ebp-0xc]
6401bb05:	lea    ebx,[ebx+edi*8]
6401bb08:	mov    DWORD PTR [ebp+0x10],ebx
6401bb0b:	mov    ebx,DWORD PTR [ebx+0x4]
6401bb0e:	mov    DWORD PTR [ecx+0x4],ebx
6401bb11:	mov    ebx,DWORD PTR [ebp+0x10]
6401bb14:	mov    DWORD PTR [ecx+0x8],ebx
6401bb17:	mov    DWORD PTR [ebx+0x4],ecx
6401bb1a:	mov    ebx,DWORD PTR [ecx+0x4]
6401bb1d:	mov    DWORD PTR [ebx+0x8],ecx
6401bb20:	mov    ebx,DWORD PTR [ecx+0x4]
6401bb23:	cmp    ebx,DWORD PTR [ecx+0x8]
6401bb26:	jne    0x6401bb7f
6401bb28:	mov    cl,BYTE PTR [edi+eax*1+0x4]
6401bb2c:	mov    BYTE PTR [ebp+0x13],cl
6401bb2f:	inc    cl
6401bb31:	cmp    edi,0x20
6401bb34:	mov    BYTE PTR [edi+eax*1+0x4],cl
6401bb38:	jae    0x6401bb56
6401bb3a:	cmp    BYTE PTR [ebp+0x13],0x0
6401bb3e:	jne    0x6401bb4e
6401bb40:	mov    ecx,edi
6401bb42:	mov    ebx,0x80000000
6401bb47:	shr    ebx,cl
6401bb49:	mov    ecx,DWORD PTR [ebp+0x8]
6401bb4c:	or     DWORD PTR [ecx],ebx
6401bb4e:	lea    eax,[eax+edx*4+0x44]
6401bb52:	mov    ecx,edi
6401bb54:	jmp    0x6401bb76
6401bb56:	cmp    BYTE PTR [ebp+0x13],0x0
6401bb5a:	jne    0x6401bb6c
6401bb5c:	lea    ecx,[edi-0x20]
6401bb5f:	mov    ebx,0x80000000
6401bb64:	shr    ebx,cl
6401bb66:	mov    ecx,DWORD PTR [ebp+0x8]
6401bb69:	or     DWORD PTR [ecx+0x4],ebx
6401bb6c:	lea    eax,[eax+edx*4+0xc4]
6401bb73:	lea    ecx,[edi-0x20]
6401bb76:	mov    edx,0x80000000
6401bb7b:	shr    edx,cl
6401bb7d:	or     DWORD PTR [eax],edx
6401bb7f:	mov    edx,DWORD PTR [ebp+0xc]
6401bb82:	mov    ecx,DWORD PTR [ebp-0x4]
6401bb85:	lea    eax,[edx+esi*1-0x4]
6401bb89:	mov    DWORD PTR [eax],ecx
6401bb8b:	mov    DWORD PTR [ecx+eax*1-0x4],ecx
6401bb8f:	jmp    0x6401bb94
6401bb91:	mov    edx,DWORD PTR [ebp+0xc]
6401bb94:	lea    eax,[esi+0x1]
6401bb97:	mov    DWORD PTR [edx-0x4],eax
6401bb9a:	mov    DWORD PTR [edx+esi*1-0x8],eax
6401bb9e:	jmp    0x6401bcdf
6401bba3:	xor    eax,eax
6401bba5:	jmp    0x6401bce2
6401bbaa:	jge    0x6401bcdf
6401bbb0:	mov    ebx,DWORD PTR [ebp+0xc]
6401bbb3:	sub    DWORD PTR [ebp+0x10],esi
6401bbb6:	lea    ecx,[esi+0x1]
6401bbb9:	mov    DWORD PTR [ebx-0x4],ecx
6401bbbc:	lea    ebx,[ebx+esi*1-0x4]
6401bbc0:	mov    esi,DWORD PTR [ebp+0x10]
6401bbc3:	sar    esi,0x4
6401bbc6:	dec    esi
6401bbc7:	cmp    esi,0x3f
6401bbca:	mov    DWORD PTR [ebp+0xc],ebx
6401bbcd:	mov    DWORD PTR [ebx-0x4],ecx
6401bbd0:	jbe    0x6401bbd5
6401bbd2:	push   0x3f
6401bbd4:	pop    esi
6401bbd5:	test   BYTE PTR [ebp-0x4],0x1
6401bbd9:	jne    0x6401bc5f
6401bbdf:	mov    esi,DWORD PTR [ebp-0x4]
6401bbe2:	sar    esi,0x4
6401bbe5:	dec    esi
6401bbe6:	cmp    esi,0x3f
6401bbe9:	jbe    0x6401bbee
6401bbeb:	push   0x3f
6401bbed:	pop    esi
6401bbee:	mov    ecx,DWORD PTR [edi+0x4]
6401bbf1:	cmp    ecx,DWORD PTR [edi+0x8]
6401bbf4:	jne    0x6401bc38
6401bbf6:	cmp    esi,0x20
6401bbf9:	mov    ebx,0x80000000
6401bbfe:	jae    0x6401bc19
6401bc00:	mov    ecx,esi
6401bc02:	shr    ebx,cl
6401bc04:	lea    esi,[esi+eax*1+0x4]
6401bc08:	not    ebx
6401bc0a:	and    DWORD PTR [eax+edx*4+0x44],ebx
6401bc0e:	dec    BYTE PTR [esi]
6401bc10:	jne    0x6401bc35
6401bc12:	mov    ecx,DWORD PTR [ebp+0x8]
6401bc15:	and    DWORD PTR [ecx],ebx
6401bc17:	jmp    0x6401bc35
6401bc19:	lea    ecx,[esi-0x20]
6401bc1c:	shr    ebx,cl
6401bc1e:	lea    ecx,[esi+eax*1+0x4]
6401bc22:	not    ebx
6401bc24:	and    DWORD PTR [eax+edx*4+0xc4],ebx
6401bc2b:	dec    BYTE PTR [ecx]
6401bc2d:	jne    0x6401bc35
6401bc2f:	mov    ecx,DWORD PTR [ebp+0x8]
6401bc32:	and    DWORD PTR [ecx+0x4],ebx
6401bc35:	mov    ebx,DWORD PTR [ebp+0xc]
6401bc38:	mov    ecx,DWORD PTR [edi+0x8]
6401bc3b:	mov    esi,DWORD PTR [edi+0x4]
6401bc3e:	mov    DWORD PTR [ecx+0x4],esi
6401bc41:	mov    esi,DWORD PTR [edi+0x8]
6401bc44:	mov    ecx,DWORD PTR [edi+0x4]
6401bc47:	mov    DWORD PTR [ecx+0x8],esi
6401bc4a:	mov    esi,DWORD PTR [ebp+0x10]
6401bc4d:	add    esi,DWORD PTR [ebp-0x4]
6401bc50:	mov    DWORD PTR [ebp+0x10],esi
6401bc53:	sar    esi,0x4
6401bc56:	dec    esi
6401bc57:	cmp    esi,0x3f
6401bc5a:	jbe    0x6401bc5f
6401bc5c:	push   0x3f
6401bc5e:	pop    esi
6401bc5f:	mov    ecx,DWORD PTR [ebp-0xc]
6401bc62:	lea    ecx,[ecx+esi*8]
6401bc65:	mov    edi,DWORD PTR [ecx+0x4]
6401bc68:	mov    DWORD PTR [ebx+0x8],ecx
6401bc6b:	mov    DWORD PTR [ebx+0x4],edi
6401bc6e:	mov    DWORD PTR [ecx+0x4],ebx
6401bc71:	mov    ecx,DWORD PTR [ebx+0x4]
6401bc74:	mov    DWORD PTR [ecx+0x8],ebx
6401bc77:	mov    ecx,DWORD PTR [ebx+0x4]
6401bc7a:	cmp    ecx,DWORD PTR [ebx+0x8]
6401bc7d:	jne    0x6401bcd6
6401bc7f:	mov    cl,BYTE PTR [esi+eax*1+0x4]
6401bc83:	mov    BYTE PTR [ebp+0xf],cl
6401bc86:	inc    cl
6401bc88:	cmp    esi,0x20
6401bc8b:	mov    BYTE PTR [esi+eax*1+0x4],cl
6401bc8f:	jae    0x6401bcad
6401bc91:	cmp    BYTE PTR [ebp+0xf],0x0
6401bc95:	jne    0x6401bca5
6401bc97:	mov    ecx,esi
6401bc99:	mov    edi,0x80000000
6401bc9e:	shr    edi,cl
6401bca0:	mov    ecx,DWORD PTR [ebp+0x8]
6401bca3:	or     DWORD PTR [ecx],edi
6401bca5:	lea    eax,[eax+edx*4+0x44]
6401bca9:	mov    ecx,esi
6401bcab:	jmp    0x6401bccd
6401bcad:	cmp    BYTE PTR [ebp+0xf],0x0
6401bcb1:	jne    0x6401bcc3
6401bcb3:	lea    ecx,[esi-0x20]
6401bcb6:	mov    edi,0x80000000
6401bcbb:	shr    edi,cl
6401bcbd:	mov    ecx,DWORD PTR [ebp+0x8]
6401bcc0:	or     DWORD PTR [ecx+0x4],edi
6401bcc3:	lea    eax,[eax+edx*4+0xc4]
6401bcca:	lea    ecx,[esi-0x20]
6401bccd:	mov    edx,0x80000000
6401bcd2:	shr    edx,cl
6401bcd4:	or     DWORD PTR [eax],edx
6401bcd6:	mov    eax,DWORD PTR [ebp+0x10]
6401bcd9:	mov    DWORD PTR [ebx],eax
6401bcdb:	mov    DWORD PTR [eax+ebx*1-0x4],eax
6401bcdf:	xor    eax,eax
6401bce1:	inc    eax
6401bce2:	pop    edi
6401bce3:	pop    esi
6401bce4:	pop    ebx
6401bce5:	leave  
6401bce6:	ret    
6401bce7:	push   ebp
6401bce8:	mov    ebp,esp
6401bcea:	sub    esp,0x14
6401bced:	mov    eax,ds:0x6405469c
6401bcf2:	mov    ecx,DWORD PTR [ebp+0x8]
6401bcf5:	imul   eax,eax,0x14
6401bcf8:	add    eax,DWORD PTR ds:0x640546a0
6401bcfe:	add    ecx,0x17
6401bd01:	and    ecx,0xfffffff0
6401bd04:	mov    DWORD PTR [ebp-0x10],ecx
6401bd07:	sar    ecx,0x4
6401bd0a:	push   ebx
6401bd0b:	dec    ecx
6401bd0c:	cmp    ecx,0x20
6401bd0f:	push   esi
6401bd10:	push   edi
6401bd11:	jge    0x6401bd1e
6401bd13:	or     esi,0xffffffff
6401bd16:	shr    esi,cl
6401bd18:	or     DWORD PTR [ebp-0x8],0xffffffff
6401bd1c:	jmp    0x6401bd2b
6401bd1e:	add    ecx,0xffffffe0
6401bd21:	or     edx,0xffffffff
6401bd24:	xor    esi,esi
6401bd26:	shr    edx,cl
6401bd28:	mov    DWORD PTR [ebp-0x8],edx
6401bd2b:	mov    ecx,DWORD PTR ds:0x640546a8
6401bd31:	mov    ebx,ecx
6401bd33:	jmp    0x6401bd46
6401bd35:	mov    edx,DWORD PTR [ebx+0x4]
6401bd38:	mov    edi,DWORD PTR [ebx]
6401bd3a:	and    edx,DWORD PTR [ebp-0x8]
6401bd3d:	and    edi,esi
6401bd3f:	or     edx,edi
6401bd41:	jne    0x6401bd4d
6401bd43:	add    ebx,0x14
6401bd46:	cmp    ebx,eax
6401bd48:	mov    DWORD PTR [ebp+0x8],ebx
6401bd4b:	jb     0x6401bd35
6401bd4d:	cmp    ebx,eax
6401bd4f:	jne    0x6401bdd0
6401bd51:	mov    ebx,DWORD PTR ds:0x640546a0
6401bd57:	jmp    0x6401bd6a
6401bd59:	mov    edx,DWORD PTR [ebx+0x4]
6401bd5c:	mov    edi,DWORD PTR [ebx]
6401bd5e:	and    edx,DWORD PTR [ebp-0x8]
6401bd61:	and    edi,esi
6401bd63:	or     edx,edi
6401bd65:	jne    0x6401bd71
6401bd67:	add    ebx,0x14
6401bd6a:	cmp    ebx,ecx
6401bd6c:	mov    DWORD PTR [ebp+0x8],ebx
6401bd6f:	jb     0x6401bd59
6401bd71:	cmp    ebx,ecx
6401bd73:	jne    0x6401bdd0
6401bd75:	jmp    0x6401bd83
6401bd77:	cmp    DWORD PTR [ebx+0x8],0x0
6401bd7b:	jne    0x6401bd87
6401bd7d:	add    ebx,0x14
6401bd80:	mov    DWORD PTR [ebp+0x8],ebx
6401bd83:	cmp    ebx,eax
6401bd85:	jb     0x6401bd77
6401bd87:	cmp    ebx,eax
6401bd89:	jne    0x6401bdbc
6401bd8b:	mov    ebx,DWORD PTR ds:0x640546a0
6401bd91:	jmp    0x6401bd9c
6401bd93:	cmp    DWORD PTR [ebx+0x8],0x0
6401bd97:	jne    0x6401bda3
6401bd99:	add    ebx,0x14
6401bd9c:	cmp    ebx,ecx
6401bd9e:	mov    DWORD PTR [ebp+0x8],ebx
6401bda1:	jb     0x6401bd93
6401bda3:	cmp    ebx,ecx
6401bda5:	jne    0x6401bdbc
6401bda7:	call   0x6401b852
6401bdac:	mov    ebx,eax
6401bdae:	test   ebx,ebx
6401bdb0:	mov    DWORD PTR [ebp+0x8],ebx
6401bdb3:	jne    0x6401bdbc
6401bdb5:	xor    eax,eax
6401bdb7:	jmp    0x6401bfc5
6401bdbc:	push   ebx
6401bdbd:	call   0x6401b902
6401bdc2:	pop    ecx
6401bdc3:	mov    ecx,DWORD PTR [ebx+0x10]
6401bdc6:	mov    DWORD PTR [ecx],eax
6401bdc8:	mov    eax,DWORD PTR [ebx+0x10]
6401bdcb:	cmp    DWORD PTR [eax],0xffffffff
6401bdce:	je     0x6401bdb5
6401bdd0:	mov    DWORD PTR ds:0x640546a8,ebx
6401bdd6:	mov    eax,DWORD PTR [ebx+0x10]
6401bdd9:	mov    edx,DWORD PTR [eax]
6401bddb:	cmp    edx,0xffffffff
6401bdde:	mov    DWORD PTR [ebp-0x4],edx
6401bde1:	je     0x6401bdf7
6401bde3:	mov    ecx,DWORD PTR [eax+edx*4+0xc4]
6401bdea:	mov    edi,DWORD PTR [eax+edx*4+0x44]
6401bdee:	and    ecx,DWORD PTR [ebp-0x8]
6401bdf1:	and    edi,esi
6401bdf3:	or     ecx,edi
6401bdf5:	jne    0x6401be20
6401bdf7:	and    DWORD PTR [ebp-0x4],0x0
6401bdfb:	mov    edx,DWORD PTR [eax+0xc4]
6401be01:	lea    ecx,[eax+0x44]
6401be04:	mov    edi,DWORD PTR [ecx]
6401be06:	and    edx,DWORD PTR [ebp-0x8]
6401be09:	and    edi,esi
6401be0b:	or     edx,edi
6401be0d:	jne    0x6401be1d
6401be0f:	inc    DWORD PTR [ebp-0x4]
6401be12:	mov    edx,DWORD PTR [ecx+0x84]
6401be18:	add    ecx,0x4
6401be1b:	jmp    0x6401be04
6401be1d:	mov    edx,DWORD PTR [ebp-0x4]
6401be20:	mov    ecx,edx
6401be22:	imul   ecx,ecx,0x204
6401be28:	lea    ecx,[ecx+eax*1+0x144]
6401be2f:	mov    DWORD PTR [ebp-0xc],ecx
6401be32:	mov    ecx,DWORD PTR [eax+edx*4+0x44]
6401be36:	xor    edi,edi
6401be38:	and    ecx,esi
6401be3a:	jne    0x6401be4e
6401be3c:	mov    ecx,DWORD PTR [eax+edx*4+0xc4]
6401be43:	and    ecx,DWORD PTR [ebp-0x8]
6401be46:	push   0x20
6401be48:	pop    edi
6401be49:	jmp    0x6401be4e
6401be4b:	add    ecx,ecx
6401be4d:	inc    edi
6401be4e:	test   ecx,ecx
6401be50:	jge    0x6401be4b
6401be52:	mov    ecx,DWORD PTR [ebp-0xc]
6401be55:	mov    edx,DWORD PTR [ecx+edi*8+0x4]
6401be59:	mov    ecx,DWORD PTR [edx]
6401be5b:	sub    ecx,DWORD PTR [ebp-0x10]
6401be5e:	mov    esi,ecx
6401be60:	sar    esi,0x4
6401be63:	dec    esi
6401be64:	cmp    esi,0x3f
6401be67:	mov    DWORD PTR [ebp-0x8],ecx
6401be6a:	jle    0x6401be6f
6401be6c:	push   0x3f
6401be6e:	pop    esi
6401be6f:	cmp    esi,edi
6401be71:	je     0x6401bf78
6401be77:	mov    ecx,DWORD PTR [edx+0x4]
6401be7a:	cmp    ecx,DWORD PTR [edx+0x8]
6401be7d:	jne    0x6401bedb
6401be7f:	cmp    edi,0x20
6401be82:	mov    ebx,0x80000000
6401be87:	jge    0x6401beaf
6401be89:	mov    ecx,edi
6401be8b:	shr    ebx,cl
6401be8d:	mov    ecx,DWORD PTR [ebp-0x4]
6401be90:	lea    edi,[eax+edi*1+0x4]
6401be94:	not    ebx
6401be96:	mov    DWORD PTR [ebp-0x14],ebx
6401be99:	and    ebx,DWORD PTR [eax+ecx*4+0x44]
6401be9d:	mov    DWORD PTR [eax+ecx*4+0x44],ebx
6401bea1:	dec    BYTE PTR [edi]
6401bea3:	jne    0x6401bed8
6401bea5:	mov    ecx,DWORD PTR [ebp-0x14]
6401bea8:	mov    ebx,DWORD PTR [ebp+0x8]
6401beab:	and    DWORD PTR [ebx],ecx
6401bead:	jmp    0x6401bedb
6401beaf:	lea    ecx,[edi-0x20]
6401beb2:	shr    ebx,cl
6401beb4:	mov    ecx,DWORD PTR [ebp-0x4]
6401beb7:	lea    ecx,[eax+ecx*4+0xc4]
6401bebe:	lea    edi,[eax+edi*1+0x4]
6401bec2:	not    ebx
6401bec4:	and    DWORD PTR [ecx],ebx
6401bec6:	dec    BYTE PTR [edi]
6401bec8:	mov    DWORD PTR [ebp-0x14],ebx
6401becb:	jne    0x6401bed8
6401becd:	mov    ebx,DWORD PTR [ebp+0x8]
6401bed0:	mov    ecx,DWORD PTR [ebp-0x14]
6401bed3:	and    DWORD PTR [ebx+0x4],ecx
6401bed6:	jmp    0x6401bedb
6401bed8:	mov    ebx,DWORD PTR [ebp+0x8]
6401bedb:	cmp    DWORD PTR [ebp-0x8],0x0
6401bedf:	mov    ecx,DWORD PTR [edx+0x8]
6401bee2:	mov    edi,DWORD PTR [edx+0x4]
6401bee5:	mov    DWORD PTR [ecx+0x4],edi
6401bee8:	mov    ecx,DWORD PTR [edx+0x4]
6401beeb:	mov    edi,DWORD PTR [edx+0x8]
6401beee:	mov    DWORD PTR [ecx+0x8],edi
6401bef1:	je     0x6401bf84
6401bef7:	mov    ecx,DWORD PTR [ebp-0xc]
6401befa:	lea    ecx,[ecx+esi*8]
6401befd:	mov    edi,DWORD PTR [ecx+0x4]
6401bf00:	mov    DWORD PTR [edx+0x8],ecx
6401bf03:	mov    DWORD PTR [edx+0x4],edi
6401bf06:	mov    DWORD PTR [ecx+0x4],edx
6401bf09:	mov    ecx,DWORD PTR [edx+0x4]
6401bf0c:	mov    DWORD PTR [ecx+0x8],edx
6401bf0f:	mov    ecx,DWORD PTR [edx+0x4]
6401bf12:	cmp    ecx,DWORD PTR [edx+0x8]
6401bf15:	jne    0x6401bf75
6401bf17:	mov    cl,BYTE PTR [esi+eax*1+0x4]
6401bf1b:	mov    BYTE PTR [ebp+0xb],cl
6401bf1e:	inc    cl
6401bf20:	cmp    esi,0x20
6401bf23:	mov    BYTE PTR [esi+eax*1+0x4],cl
6401bf27:	jge    0x6401bf4c
6401bf29:	cmp    BYTE PTR [ebp+0xb],0x0
6401bf2d:	jne    0x6401bf3a
6401bf2f:	mov    edi,0x80000000
6401bf34:	mov    ecx,esi
6401bf36:	shr    edi,cl
6401bf38:	or     DWORD PTR [ebx],edi
6401bf3a:	mov    ecx,esi
6401bf3c:	mov    edi,0x80000000
6401bf41:	shr    edi,cl
6401bf43:	mov    ecx,DWORD PTR [ebp-0x4]
6401bf46:	or     DWORD PTR [eax+ecx*4+0x44],edi
6401bf4a:	jmp    0x6401bf75
6401bf4c:	cmp    BYTE PTR [ebp+0xb],0x0
6401bf50:	jne    0x6401bf5f
6401bf52:	lea    ecx,[esi-0x20]
6401bf55:	mov    edi,0x80000000
6401bf5a:	shr    edi,cl
6401bf5c:	or     DWORD PTR [ebx+0x4],edi
6401bf5f:	mov    ecx,DWORD PTR [ebp-0x4]
6401bf62:	lea    edi,[eax+ecx*4+0xc4]
6401bf69:	lea    ecx,[esi-0x20]
6401bf6c:	mov    esi,0x80000000
6401bf71:	shr    esi,cl
6401bf73:	or     DWORD PTR [edi],esi
6401bf75:	mov    ecx,DWORD PTR [ebp-0x8]
6401bf78:	test   ecx,ecx
6401bf7a:	je     0x6401bf87
6401bf7c:	mov    DWORD PTR [edx],ecx
6401bf7e:	mov    DWORD PTR [ecx+edx*1-0x4],ecx
6401bf82:	jmp    0x6401bf87
6401bf84:	mov    ecx,DWORD PTR [ebp-0x8]
6401bf87:	mov    esi,DWORD PTR [ebp-0x10]
6401bf8a:	add    edx,ecx
6401bf8c:	lea    ecx,[esi+0x1]
6401bf8f:	mov    DWORD PTR [edx],ecx
6401bf91:	mov    DWORD PTR [edx+esi*1-0x4],ecx
6401bf95:	mov    esi,DWORD PTR [ebp-0xc]
6401bf98:	mov    ecx,DWORD PTR [esi]
6401bf9a:	test   ecx,ecx
6401bf9c:	lea    edi,[ecx+0x1]
6401bf9f:	mov    DWORD PTR [esi],edi
6401bfa1:	jne    0x6401bfbd
6401bfa3:	cmp    ebx,DWORD PTR ds:0x64054070
6401bfa9:	jne    0x6401bfbd
6401bfab:	mov    ecx,DWORD PTR [ebp-0x4]
6401bfae:	cmp    ecx,DWORD PTR ds:0x640546b0
6401bfb4:	jne    0x6401bfbd
6401bfb6:	and    DWORD PTR ds:0x64054070,0x0
6401bfbd:	mov    ecx,DWORD PTR [ebp-0x4]
6401bfc0:	mov    DWORD PTR [eax],ecx
6401bfc2:	lea    eax,[edx+0x4]
6401bfc5:	pop    edi
6401bfc6:	pop    esi
6401bfc7:	pop    ebx
6401bfc8:	leave  
6401bfc9:	ret    
6401bfca:	int3   
6401bfcb:	int3   
6401bfcc:	int3   
6401bfcd:	int3   
6401bfce:	int3   
6401bfcf:	int3   
6401bfd0:	push   ebp
6401bfd1:	mov    ebp,esp
6401bfd3:	push   edi
6401bfd4:	mov    edi,DWORD PTR [ebp+0x8]
6401bfd7:	xor    eax,eax
6401bfd9:	or     ecx,0xffffffff
6401bfdc:	repnz scas al,BYTE PTR es:[edi]
6401bfde:	add    ecx,0x1
6401bfe1:	neg    ecx
6401bfe3:	sub    edi,0x1
6401bfe6:	mov    al,BYTE PTR [ebp+0xc]
6401bfe9:	std    
6401bfea:	repnz scas al,BYTE PTR es:[edi]
6401bfec:	add    edi,0x1
6401bfef:	cmp    BYTE PTR [edi],al
6401bff1:	je     0x6401bff7
6401bff3:	xor    eax,eax
6401bff5:	jmp    0x6401bff9
6401bff7:	mov    eax,edi
6401bff9:	cld    
6401bffa:	pop    edi
6401bffb:	leave  
6401bffc:	ret    
6401bffd:	push   ecx
6401bffe:	push   ebx
6401bfff:	mov    ebx,DWORD PTR [esp+0xc]
6401c003:	push   esi
6401c004:	push   edi
6401c005:	xor    esi,esi
6401c007:	xor    edi,edi
6401c009:	cmp    ebx,DWORD PTR [edi*8+0x64052f20]
6401c010:	je     0x6401c018
6401c012:	inc    edi
6401c013:	cmp    edi,0x17
6401c016:	jb     0x6401c009
6401c018:	cmp    edi,0x17
6401c01b:	jae    0x6401c198
6401c021:	push   ebp
6401c022:	push   0x3
6401c024:	call   0x6401f0fa
6401c029:	cmp    eax,0x1
6401c02c:	pop    ecx
6401c02d:	je     0x6401c164
6401c033:	push   0x3
6401c035:	call   0x6401f0fa
6401c03a:	test   eax,eax
6401c03c:	pop    ecx
6401c03d:	jne    0x6401c04c
6401c03f:	cmp    DWORD PTR ds:0x64053a24,0x1
6401c046:	je     0x6401c164
6401c04c:	cmp    ebx,0xfc
6401c052:	je     0x6401c197
6401c058:	push   0x64040fc8
6401c05d:	mov    ebx,0x314
6401c062:	push   ebx
6401c063:	mov    ebp,0x64054078
6401c068:	push   ebp
6401c069:	call   0x6401652d
6401c06e:	add    esp,0xc
6401c071:	test   eax,eax
6401c073:	je     0x6401c082
6401c075:	push   esi
6401c076:	push   esi
6401c077:	push   esi
6401c078:	push   esi
6401c079:	push   esi
6401c07a:	call   0x64013d66
6401c07f:	add    esp,0x14
6401c082:	push   0x104
6401c087:	mov    esi,0x64054091
6401c08c:	push   esi
6401c08d:	push   0x0
6401c08f:	mov    BYTE PTR ds:0x64054195,0x0
6401c096:	call   DWORD PTR ds:0x6402c148
6401c09c:	test   eax,eax
6401c09e:	jne    0x6401c0c6
6401c0a0:	push   0x64040fb0
6401c0a5:	push   0x2fb
6401c0aa:	push   esi
6401c0ab:	call   0x6401652d
6401c0b0:	add    esp,0xc
6401c0b3:	test   eax,eax
6401c0b5:	je     0x6401c0c6
6401c0b7:	xor    eax,eax
6401c0b9:	push   eax
6401c0ba:	push   eax
6401c0bb:	push   eax
6401c0bc:	push   eax
6401c0bd:	push   eax
6401c0be:	call   0x64013d66
6401c0c3:	add    esp,0x14
6401c0c6:	push   esi
6401c0c7:	call   0x64015b10
6401c0cc:	inc    eax
6401c0cd:	cmp    eax,0x3c
6401c0d0:	pop    ecx
6401c0d1:	jbe    0x6401c10b
6401c0d3:	push   esi
6401c0d4:	call   0x64015b10
6401c0d9:	sub    esi,0x3b
6401c0dc:	add    eax,esi
6401c0de:	push   0x3
6401c0e0:	mov    ecx,0x6405438c
6401c0e5:	push   0x64040fac
6401c0ea:	sub    ecx,eax
6401c0ec:	push   ecx
6401c0ed:	push   eax
6401c0ee:	call   0x6401e056
6401c0f3:	add    esp,0x14
6401c0f6:	test   eax,eax
6401c0f8:	je     0x6401c10b
6401c0fa:	xor    esi,esi
6401c0fc:	push   esi
6401c0fd:	push   esi
6401c0fe:	push   esi
6401c0ff:	push   esi
6401c100:	push   esi
6401c101:	call   0x64013d66
6401c106:	add    esp,0x14
6401c109:	jmp    0x6401c10d
6401c10b:	xor    esi,esi
6401c10d:	push   0x64040fa8
6401c112:	push   ebx
6401c113:	push   ebp
6401c114:	call   0x6401df94
6401c119:	add    esp,0xc
6401c11c:	test   eax,eax
6401c11e:	je     0x6401c12d
6401c120:	push   esi
6401c121:	push   esi
6401c122:	push   esi
6401c123:	push   esi
6401c124:	push   esi
6401c125:	call   0x64013d66
6401c12a:	add    esp,0x14
6401c12d:	push   DWORD PTR [edi*8+0x64052f24]
6401c134:	push   ebx
6401c135:	push   ebp
6401c136:	call   0x6401df94
6401c13b:	add    esp,0xc
6401c13e:	test   eax,eax
6401c140:	je     0x6401c14f
6401c142:	push   esi
6401c143:	push   esi
6401c144:	push   esi
6401c145:	push   esi
6401c146:	push   esi
6401c147:	call   0x64013d66
6401c14c:	add    esp,0x14
6401c14f:	push   0x12010
6401c154:	push   0x64040f80
6401c159:	push   ebp
6401c15a:	call   0x6401ef3d
6401c15f:	add    esp,0xc
6401c162:	jmp    0x6401c197
6401c164:	push   0xfffffff4
6401c166:	call   DWORD PTR ds:0x6402c110
6401c16c:	mov    ebp,eax
6401c16e:	cmp    ebp,esi
6401c170:	je     0x6401c197
6401c172:	cmp    ebp,0xffffffff
6401c175:	je     0x6401c197
6401c177:	push   0x0
6401c179:	lea    eax,[esp+0x14]
6401c17d:	push   eax
6401c17e:	lea    esi,[edi*8+0x64052f24]
6401c185:	push   DWORD PTR [esi]
6401c187:	call   0x64015b10
6401c18c:	pop    ecx
6401c18d:	push   eax
6401c18e:	push   DWORD PTR [esi]
6401c190:	push   ebp
6401c191:	call   DWORD PTR ds:0x6402c094
6401c197:	pop    ebp
6401c198:	pop    edi
6401c199:	pop    esi
6401c19a:	pop    ebx
6401c19b:	pop    ecx
6401c19c:	ret    
6401c19d:	push   0x3
6401c19f:	call   0x6401f0fa
6401c1a4:	cmp    eax,0x1
6401c1a7:	pop    ecx
6401c1a8:	je     0x6401c1bf
6401c1aa:	push   0x3
6401c1ac:	call   0x6401f0fa
6401c1b1:	test   eax,eax
6401c1b3:	pop    ecx
6401c1b4:	jne    0x6401c1d5
6401c1b6:	cmp    DWORD PTR ds:0x64053a24,0x1
6401c1bd:	jne    0x6401c1d5
6401c1bf:	push   0xfc
6401c1c4:	call   0x6401bffd
6401c1c9:	push   0xff
6401c1ce:	call   0x6401bffd
6401c1d3:	pop    ecx
6401c1d4:	pop    ecx
6401c1d5:	ret    
6401c1d6:	push   ebp
6401c1d7:	mov    ebp,esp
6401c1d9:	mov    eax,0xffff
6401c1de:	sub    esp,0x14
6401c1e1:	cmp    WORD PTR [ebp+0x8],ax
6401c1e5:	je     0x6401c281
6401c1eb:	push   ebx
6401c1ec:	push   DWORD PTR [ebp+0xc]
6401c1ef:	lea    ecx,[ebp-0x14]
6401c1f2:	call   0x64014335
6401c1f7:	mov    ecx,DWORD PTR [ebp-0x14]
6401c1fa:	mov    edx,DWORD PTR [ecx+0x14]
6401c1fd:	xor    ebx,ebx
6401c1ff:	cmp    edx,ebx
6401c201:	jne    0x6401c217
6401c203:	mov    eax,DWORD PTR [ebp+0x8]
6401c206:	lea    ecx,[eax-0x41]
6401c209:	cmp    cx,0x19
6401c20d:	ja     0x6401c212
6401c20f:	add    eax,0x20
6401c212:	movzx  eax,ax
6401c215:	jmp    0x6401c274
6401c217:	mov    eax,0x100
6401c21c:	cmp    WORD PTR [ebp+0x8],ax
6401c220:	jae    0x6401c24b
6401c222:	lea    eax,[ebp-0x14]
6401c225:	push   eax
6401c226:	push   0x1
6401c228:	push   DWORD PTR [ebp+0x8]
6401c22b:	call   0x6401c283
6401c230:	add    esp,0xc
6401c233:	test   eax,eax
6401c235:	movzx  eax,WORD PTR [ebp+0x8]
6401c239:	je     0x6401c274
6401c23b:	mov    ecx,DWORD PTR [ebp-0x14]
6401c23e:	mov    ecx,DWORD PTR [ecx+0xcc]
6401c244:	movzx  ax,BYTE PTR [ecx+eax*1]
6401c249:	jmp    0x6401c212
6401c24b:	push   DWORD PTR [ecx+0x4]
6401c24e:	lea    ecx,[ebp-0x4]
6401c251:	push   0x1
6401c253:	push   ecx
6401c254:	push   0x1
6401c256:	lea    ecx,[ebp+0x8]
6401c259:	push   ecx
6401c25a:	push   eax
6401c25b:	push   edx
6401c25c:	lea    eax,[ebp-0x14]
6401c25f:	push   eax
6401c260:	call   0x640196c2
6401c265:	add    esp,0x20
6401c268:	test   eax,eax
6401c26a:	movzx  eax,WORD PTR [ebp+0x8]
6401c26e:	je     0x6401c274
6401c270:	movzx  eax,WORD PTR [ebp-0x4]
6401c274:	cmp    BYTE PTR [ebp-0x8],bl
6401c277:	je     0x6401c280
6401c279:	mov    ecx,DWORD PTR [ebp-0xc]
6401c27c:	and    DWORD PTR [ecx+0x70],0xfffffffd
6401c280:	pop    ebx
6401c281:	leave  
6401c282:	ret    
6401c283:	push   ebp
6401c284:	mov    ebp,esp
6401c286:	sub    esp,0x14
6401c289:	cmp    WORD PTR [ebp+0x8],0xffff
6401c28f:	jne    0x6401c297
6401c291:	and    DWORD PTR [ebp-0x4],0x0
6401c295:	jmp    0x6401c2f9
6401c297:	cmp    WORD PTR [ebp+0x8],0x100
6401c29d:	jae    0x6401c2b9
6401c29f:	movzx  eax,WORD PTR [ebp+0x8]
6401c2a3:	mov    ecx,DWORD PTR ds:0x640522c8
6401c2a9:	mov    ax,WORD PTR [ecx+eax*2]
6401c2ad:	and    ax,WORD PTR [ebp+0xc]
6401c2b1:	movzx  eax,ax
6401c2b4:	mov    DWORD PTR [ebp-0x4],eax
6401c2b7:	jmp    0x6401c2f9
6401c2b9:	push   DWORD PTR [ebp+0x10]
6401c2bc:	lea    ecx,[ebp-0x14]
6401c2bf:	call   0x64014335
6401c2c4:	mov    eax,DWORD PTR [ebp-0x14]
6401c2c7:	push   DWORD PTR [eax+0x14]
6401c2ca:	push   DWORD PTR [eax+0x4]
6401c2cd:	lea    eax,[ebp-0x4]
6401c2d0:	push   eax
6401c2d1:	push   0x1
6401c2d3:	lea    eax,[ebp+0x8]
6401c2d6:	push   eax
6401c2d7:	lea    eax,[ebp-0x14]
6401c2da:	push   0x1
6401c2dc:	push   eax
6401c2dd:	call   0x6401fde8
6401c2e2:	add    esp,0x1c
6401c2e5:	test   eax,eax
6401c2e7:	jne    0x6401c2ec
6401c2e9:	and    DWORD PTR [ebp-0x4],eax
6401c2ec:	cmp    BYTE PTR [ebp-0x8],0x0
6401c2f0:	je     0x6401c2f9
6401c2f2:	mov    eax,DWORD PTR [ebp-0xc]
6401c2f5:	and    DWORD PTR [eax+0x70],0xfffffffd
6401c2f9:	movzx  eax,WORD PTR [ebp-0x4]
6401c2fd:	movzx  ecx,WORD PTR [ebp+0xc]
6401c301:	and    eax,ecx
6401c303:	leave  
6401c304:	ret    
6401c305:	ret    
6401c306:	mov    eax,0x640208b3
6401c30b:	mov    ds:0x640530f0,eax
6401c310:	mov    DWORD PTR ds:0x640530f4,0x6401ffaf
6401c31a:	mov    DWORD PTR ds:0x640530f8,0x6401ff6d
6401c324:	mov    DWORD PTR ds:0x640530fc,0x6401ffa1
6401c32e:	mov    DWORD PTR ds:0x64053100,0x6401ff17
6401c338:	mov    ds:0x64053104,eax
6401c33d:	mov    DWORD PTR ds:0x64053108,0x6402082d
6401c347:	mov    DWORD PTR ds:0x6405310c,0x6401ff2d
6401c351:	mov    DWORD PTR ds:0x64053110,0x6401fe97
6401c35b:	mov    DWORD PTR ds:0x64053114,0x6401fe26
6401c365:	ret    
6401c366:	call   0x6401c306
6401c36b:	call   0x64020939
6401c370:	cmp    DWORD PTR [esp+0x4],0x0
6401c375:	mov    ds:0x64054394,eax
6401c37a:	je     0x6401c381
6401c37c:	call   0x640208d4
6401c381:	fnclex 
6401c383:	ret    
6401c384:	test   BYTE PTR [eax+0xc],0x40
6401c388:	je     0x6401c390
6401c38a:	cmp    DWORD PTR [eax+0x8],0x0
6401c38e:	je     0x6401c3a6
6401c390:	push   eax
6401c391:	push   DWORD PTR [esp+0x8]
6401c395:	call   0x64020b2e
6401c39a:	cmp    ax,0xffff
6401c39e:	pop    ecx
6401c39f:	pop    ecx
6401c3a0:	jne    0x6401c3a6
6401c3a2:	or     DWORD PTR [esi],0xffffffff
6401c3a5:	ret    
6401c3a6:	inc    DWORD PTR [esi]
6401c3a8:	ret    
6401c3a9:	test   BYTE PTR [edi+0xc],0x40
6401c3ad:	push   ebx
6401c3ae:	push   esi
6401c3af:	mov    esi,eax
6401c3b1:	mov    ebx,ecx
6401c3b3:	je     0x6401c3ee
6401c3b5:	cmp    DWORD PTR [edi+0x8],0x0
6401c3b9:	jne    0x6401c3ee
6401c3bb:	mov    eax,DWORD PTR [esp+0xc]
6401c3bf:	add    DWORD PTR [esi],eax
6401c3c1:	jmp    0x6401c3f5
6401c3c3:	movzx  eax,WORD PTR [ebx]
6401c3c6:	dec    DWORD PTR [esp+0xc]
6401c3ca:	push   eax
6401c3cb:	mov    eax,edi
6401c3cd:	call   0x6401c384
6401c3d2:	inc    ebx
6401c3d3:	inc    ebx
6401c3d4:	cmp    DWORD PTR [esi],0xffffffff
6401c3d7:	pop    ecx
6401c3d8:	jne    0x6401c3ee
6401c3da:	call   0x640166d3
6401c3df:	cmp    DWORD PTR [eax],0x2a
6401c3e2:	jne    0x6401c3f5
6401c3e4:	push   0x3f
6401c3e6:	mov    eax,edi
6401c3e8:	call   0x6401c384
6401c3ed:	pop    ecx
6401c3ee:	cmp    DWORD PTR [esp+0xc],0x0
6401c3f3:	jg     0x6401c3c3
6401c3f5:	pop    esi
6401c3f6:	pop    ebx
6401c3f7:	ret    
6401c3f8:	push   ebp
6401c3f9:	lea    ebp,[esp-0x3f4]
6401c400:	sub    esp,0x474
6401c406:	mov    eax,ds:0x640521ac
6401c40b:	xor    eax,ebp
6401c40d:	mov    DWORD PTR [ebp+0x3f0],eax
6401c413:	mov    eax,DWORD PTR [ebp+0x3fc]
6401c419:	push   ebx
6401c41a:	mov    ebx,DWORD PTR [ebp+0x408]
6401c420:	push   esi
6401c421:	mov    esi,DWORD PTR [ebp+0x400]
6401c427:	push   edi
6401c428:	push   DWORD PTR [ebp+0x404]
6401c42e:	xor    edi,edi
6401c430:	lea    ecx,[ebp-0x64]
6401c433:	mov    DWORD PTR [ebp-0x3c],eax
6401c436:	mov    DWORD PTR [ebp-0x28],ebx
6401c439:	mov    DWORD PTR [ebp-0x54],edi
6401c43c:	mov    DWORD PTR [ebp-0x14],edi
6401c43f:	mov    DWORD PTR [ebp-0x38],edi
6401c442:	mov    DWORD PTR [ebp-0x18],edi
6401c445:	mov    DWORD PTR [ebp-0x30],edi
6401c448:	mov    DWORD PTR [ebp-0x48],edi
6401c44b:	mov    DWORD PTR [ebp-0x34],edi
6401c44e:	call   0x64014335
6401c453:	cmp    DWORD PTR [ebp-0x3c],edi
6401c456:	jne    0x6401c485
6401c458:	call   0x640166d3
6401c45d:	push   edi
6401c45e:	push   edi
6401c45f:	push   edi
6401c460:	push   edi
6401c461:	mov    DWORD PTR [eax],0x16
6401c467:	push   edi
6401c468:	call   0x64013e62
6401c46d:	add    esp,0x14
6401c470:	cmp    BYTE PTR [ebp-0x58],0x0
6401c474:	je     0x6401c47d
6401c476:	mov    eax,DWORD PTR [ebp-0x5c]
6401c479:	and    DWORD PTR [eax+0x70],0xfffffffd
6401c47d:	or     eax,0xffffffff
6401c480:	jmp    0x6401ccd0
6401c485:	cmp    esi,edi
6401c487:	je     0x6401c458
6401c489:	movzx  edx,WORD PTR [esi]
6401c48c:	xor    ecx,ecx
6401c48e:	cmp    dx,di
6401c491:	mov    DWORD PTR [ebp-0x2c],edi
6401c494:	mov    DWORD PTR [ebp-0x20],edi
6401c497:	mov    DWORD PTR [ebp-0x50],edi
6401c49a:	mov    DWORD PTR [ebp-0x24],edx
6401c49d:	je     0x6401ccc0
6401c4a3:	push   0x2
6401c4a5:	pop    edi
6401c4a6:	add    esi,edi
6401c4a8:	cmp    DWORD PTR [ebp-0x2c],0x0
6401c4ac:	mov    DWORD PTR [ebp-0x4c],esi
6401c4af:	jl     0x6401ccc0
6401c4b5:	lea    eax,[edx-0x20]
6401c4b8:	cmp    ax,0x58
6401c4bc:	ja     0x6401c4cd
6401c4be:	movzx  eax,dx
6401c4c1:	movzx  eax,BYTE PTR [eax+0x640409a8]
6401c4c8:	and    eax,0xf
6401c4cb:	jmp    0x6401c4cf
6401c4cd:	xor    eax,eax
6401c4cf:	movsx  eax,BYTE PTR [ecx+eax*8+0x640409c8]
6401c4d7:	push   0x7
6401c4d9:	sar    eax,0x4
6401c4dc:	pop    ecx
6401c4dd:	cmp    eax,ecx
6401c4df:	mov    DWORD PTR [ebp-0x68],eax
6401c4e2:	ja     0x6401cc8e
6401c4e8:	jmp    DWORD PTR [eax*4+0x6401cce8]
6401c4ef:	xor    eax,eax
6401c4f1:	or     DWORD PTR [ebp-0x18],0xffffffff
6401c4f5:	mov    DWORD PTR [ebp-0x6c],eax
6401c4f8:	mov    DWORD PTR [ebp-0x48],eax
6401c4fb:	mov    DWORD PTR [ebp-0x38],eax
6401c4fe:	mov    DWORD PTR [ebp-0x30],eax
6401c501:	mov    DWORD PTR [ebp-0x14],eax
6401c504:	mov    DWORD PTR [ebp-0x34],eax
6401c507:	jmp    0x6401cc8e
6401c50c:	movzx  eax,dx
6401c50f:	sub    eax,0x20
6401c512:	je     0x6401c552
6401c514:	sub    eax,0x3
6401c517:	je     0x6401c546
6401c519:	sub    eax,0x8
6401c51c:	je     0x6401c53d
6401c51e:	sub    eax,edi
6401c520:	je     0x6401c534
6401c522:	sub    eax,0x3
6401c525:	jne    0x6401cc8e
6401c52b:	or     DWORD PTR [ebp-0x14],0x8
6401c52f:	jmp    0x6401cc8e
6401c534:	or     DWORD PTR [ebp-0x14],0x4
6401c538:	jmp    0x6401cc8e
6401c53d:	or     DWORD PTR [ebp-0x14],0x1
6401c541:	jmp    0x6401cc8e
6401c546:	or     DWORD PTR [ebp-0x14],0x80
6401c54d:	jmp    0x6401cc8e
6401c552:	or     DWORD PTR [ebp-0x14],edi
6401c555:	jmp    0x6401cc8e
6401c55a:	cmp    dx,0x2a
6401c55e:	jne    0x6401c580
6401c560:	add    ebx,0x4
6401c563:	mov    DWORD PTR [ebp-0x28],ebx
6401c566:	mov    ebx,DWORD PTR [ebx-0x4]
6401c569:	test   ebx,ebx
6401c56b:	mov    DWORD PTR [ebp-0x38],ebx
6401c56e:	jge    0x6401cc8e
6401c574:	or     DWORD PTR [ebp-0x14],0x4
6401c578:	neg    DWORD PTR [ebp-0x38]
6401c57b:	jmp    0x6401cc8e
6401c580:	mov    eax,DWORD PTR [ebp-0x38]
6401c583:	imul   eax,eax,0xa
6401c586:	movzx  ecx,dx
6401c589:	lea    eax,[eax+ecx*1-0x30]
6401c58d:	mov    DWORD PTR [ebp-0x38],eax
6401c590:	jmp    0x6401cc8e
6401c595:	and    DWORD PTR [ebp-0x18],0x0
6401c599:	jmp    0x6401cc8e
6401c59e:	cmp    dx,0x2a
6401c5a2:	jne    0x6401c5c1
6401c5a4:	add    ebx,0x4
6401c5a7:	mov    DWORD PTR [ebp-0x28],ebx
6401c5aa:	mov    ebx,DWORD PTR [ebx-0x4]
6401c5ad:	test   ebx,ebx
6401c5af:	mov    DWORD PTR [ebp-0x18],ebx
6401c5b2:	jge    0x6401cc8e
6401c5b8:	or     DWORD PTR [ebp-0x18],0xffffffff
6401c5bc:	jmp    0x6401cc8e
6401c5c1:	mov    eax,DWORD PTR [ebp-0x18]
6401c5c4:	imul   eax,eax,0xa
6401c5c7:	movzx  ecx,dx
6401c5ca:	lea    eax,[eax+ecx*1-0x30]
6401c5ce:	mov    DWORD PTR [ebp-0x18],eax
6401c5d1:	jmp    0x6401cc8e
6401c5d6:	movzx  eax,dx
6401c5d9:	cmp    eax,0x49
6401c5dc:	je     0x6401c626
6401c5de:	cmp    eax,0x68
6401c5e1:	je     0x6401c61d
6401c5e3:	cmp    eax,0x6c
6401c5e6:	je     0x6401c5fd
6401c5e8:	cmp    eax,0x77
6401c5eb:	jne    0x6401cc8e
6401c5f1:	or     DWORD PTR [ebp-0x14],0x800
6401c5f8:	jmp    0x6401cc8e
6401c5fd:	cmp    WORD PTR [esi],0x6c
6401c601:	jne    0x6401c614
6401c603:	add    esi,edi
6401c605:	or     DWORD PTR [ebp-0x14],0x1000
6401c60c:	mov    DWORD PTR [ebp-0x4c],esi
6401c60f:	jmp    0x6401cc8e
6401c614:	or     DWORD PTR [ebp-0x14],0x10
6401c618:	jmp    0x6401cc8e
6401c61d:	or     DWORD PTR [ebp-0x14],0x20
6401c621:	jmp    0x6401cc8e
6401c626:	movzx  eax,WORD PTR [esi]
6401c629:	cmp    ax,0x36
6401c62d:	jne    0x6401c648
6401c62f:	cmp    WORD PTR [esi+0x2],0x34
6401c634:	jne    0x6401c648
6401c636:	add    esi,0x4
6401c639:	or     DWORD PTR [ebp-0x14],0x8000
6401c640:	mov    DWORD PTR [ebp-0x4c],esi
6401c643:	jmp    0x6401cc8e
6401c648:	cmp    ax,0x33
6401c64c:	jne    0x6401c667
6401c64e:	cmp    WORD PTR [esi+0x2],0x32
6401c653:	jne    0x6401c667
6401c655:	add    esi,0x4
6401c658:	and    DWORD PTR [ebp-0x14],0xffff7fff
6401c65f:	mov    DWORD PTR [ebp-0x4c],esi
6401c662:	jmp    0x6401cc8e
6401c667:	cmp    ax,0x64
6401c66b:	je     0x6401cc8e
6401c671:	cmp    ax,0x69
6401c675:	je     0x6401cc8e
6401c67b:	cmp    ax,0x6f
6401c67f:	je     0x6401cc8e
6401c685:	cmp    ax,0x75
6401c689:	je     0x6401cc8e
6401c68f:	cmp    ax,0x78
6401c693:	je     0x6401cc8e
6401c699:	cmp    ax,0x58
6401c69d:	je     0x6401cc8e
6401c6a3:	and    DWORD PTR [ebp-0x68],0x0
6401c6a7:	mov    eax,DWORD PTR [ebp-0x3c]
6401c6aa:	push   edx
6401c6ab:	lea    esi,[ebp-0x2c]
6401c6ae:	mov    DWORD PTR [ebp-0x34],0x1
6401c6b5:	call   0x6401c384
6401c6ba:	jmp    0x6401cc8d
6401c6bf:	movzx  eax,dx
6401c6c2:	cmp    eax,0x64
6401c6c5:	jg     0x6401c872
6401c6cb:	je     0x6401c8f1
6401c6d1:	cmp    eax,0x53
6401c6d4:	jg     0x6401c7b1
6401c6da:	je     0x6401c73b
6401c6dc:	sub    eax,0x41
6401c6df:	je     0x6401c6f1
6401c6e1:	sub    eax,edi
6401c6e3:	je     0x6401c726
6401c6e5:	sub    eax,edi
6401c6e7:	je     0x6401c6f1
6401c6e9:	sub    eax,edi
6401c6eb:	jne    0x6401cb72
6401c6f1:	add    edx,0x20
6401c6f4:	mov    DWORD PTR [ebp-0x6c],0x1
6401c6fb:	mov    DWORD PTR [ebp-0x24],edx
6401c6fe:	or     DWORD PTR [ebp-0x14],0x40
6401c702:	cmp    DWORD PTR [ebp-0x18],0x0
6401c706:	lea    esi,[ebp-0x10]
6401c709:	mov    eax,0x200
6401c70e:	mov    DWORD PTR [ebp-0x1c],esi
6401c711:	mov    DWORD PTR [ebp-0x20],eax
6401c714:	jge    0x6401c915
6401c71a:	mov    DWORD PTR [ebp-0x18],0x6
6401c721:	jmp    0x6401c962
6401c726:	test   WORD PTR [ebp-0x14],0x830
6401c72c:	jne    0x6401c7ce
6401c732:	or     DWORD PTR [ebp-0x14],0x20
6401c736:	jmp    0x6401c7ce
6401c73b:	test   WORD PTR [ebp-0x14],0x830
6401c741:	jne    0x6401c747
6401c743:	or     DWORD PTR [ebp-0x14],0x20
6401c747:	mov    edi,DWORD PTR [ebp-0x18]
6401c74a:	cmp    edi,0xffffffff
6401c74d:	jne    0x6401c754
6401c74f:	mov    edi,0x7fffffff
6401c754:	add    ebx,0x4
6401c757:	test   BYTE PTR [ebp-0x14],0x20
6401c75b:	mov    DWORD PTR [ebp-0x28],ebx
6401c75e:	mov    ebx,DWORD PTR [ebx-0x4]
6401c761:	mov    DWORD PTR [ebp-0x1c],ebx
6401c764:	je     0x6401cb45
6401c76a:	test   ebx,ebx
6401c76c:	jne    0x6401c776
6401c76e:	mov    eax,ds:0x64052df0
6401c773:	mov    DWORD PTR [ebp-0x1c],eax
6401c776:	and    DWORD PTR [ebp-0x20],0x0
6401c77a:	test   edi,edi
6401c77c:	mov    esi,DWORD PTR [ebp-0x1c]
6401c77f:	jle    0x6401cb72
6401c785:	mov    al,BYTE PTR [esi]
6401c787:	test   al,al
6401c789:	je     0x6401cb72
6401c78f:	lea    ecx,[ebp-0x64]
6401c792:	movzx  eax,al
6401c795:	push   ecx
6401c796:	push   eax
6401c797:	call   0x64015127
6401c79c:	test   eax,eax
6401c79e:	pop    ecx
6401c79f:	pop    ecx
6401c7a0:	je     0x6401c7a3
6401c7a2:	inc    esi
6401c7a3:	inc    esi
6401c7a4:	inc    DWORD PTR [ebp-0x20]
6401c7a7:	cmp    DWORD PTR [ebp-0x20],edi
6401c7aa:	jl     0x6401c785
6401c7ac:	jmp    0x6401cb72
6401c7b1:	sub    eax,0x58
6401c7b4:	je     0x6401c9fd
6401c7ba:	sub    eax,edi
6401c7bc:	je     0x6401c825
6401c7be:	sub    eax,ecx
6401c7c0:	je     0x6401c6fe
6401c7c6:	sub    eax,edi
6401c7c8:	jne    0x6401cb72
6401c7ce:	movzx  eax,WORD PTR [ebx]
6401c7d1:	add    ebx,0x4
6401c7d4:	xor    esi,esi
6401c7d6:	inc    esi
6401c7d7:	test   BYTE PTR [ebp-0x14],0x20
6401c7db:	mov    DWORD PTR [ebp-0x34],esi
6401c7de:	mov    DWORD PTR [ebp-0x28],ebx
6401c7e1:	mov    DWORD PTR [ebp-0x70],eax
6401c7e4:	je     0x6401c813
6401c7e6:	mov    BYTE PTR [ebp-0x40],al
6401c7e9:	lea    eax,[ebp-0x64]
6401c7ec:	push   eax
6401c7ed:	mov    eax,DWORD PTR [ebp-0x64]
6401c7f0:	mov    BYTE PTR [ebp-0x3f],0x0
6401c7f4:	push   DWORD PTR [eax+0xac]
6401c7fa:	lea    eax,[ebp-0x40]
6401c7fd:	push   eax
6401c7fe:	lea    eax,[ebp-0x10]
6401c801:	push   eax
6401c802:	call   0x6401ee13
6401c807:	add    esp,0x10
6401c80a:	test   eax,eax
6401c80c:	jge    0x6401c817
6401c80e:	mov    DWORD PTR [ebp-0x48],esi
6401c811:	jmp    0x6401c817
6401c813:	mov    WORD PTR [ebp-0x10],ax
6401c817:	lea    eax,[ebp-0x10]
6401c81a:	mov    DWORD PTR [ebp-0x1c],eax
6401c81d:	mov    DWORD PTR [ebp-0x20],esi
6401c820:	jmp    0x6401cb72
6401c825:	mov    eax,DWORD PTR [ebx]
6401c827:	add    ebx,0x4
6401c82a:	test   eax,eax
6401c82c:	mov    DWORD PTR [ebp-0x28],ebx
6401c82f:	je     0x6401c85e
6401c831:	mov    ecx,DWORD PTR [eax+0x4]
6401c834:	test   ecx,ecx
6401c836:	je     0x6401c85e
6401c838:	test   WORD PTR [ebp-0x14],0x800
6401c83e:	movsx  eax,WORD PTR [eax]
6401c841:	mov    DWORD PTR [ebp-0x1c],ecx
6401c844:	je     0x6401c855
6401c846:	cdq    
6401c847:	sub    eax,edx
6401c849:	mov    DWORD PTR [ebp-0x34],0x1
6401c850:	jmp    0x6401cb6d
6401c855:	and    DWORD PTR [ebp-0x34],0x0
6401c859:	jmp    0x6401cb6f
6401c85e:	mov    eax,ds:0x64052df0
6401c863:	mov    DWORD PTR [ebp-0x1c],eax
6401c866:	push   eax
6401c867:	call   0x64015b10
6401c86c:	pop    ecx
6401c86d:	jmp    0x6401cb6f
6401c872:	cmp    eax,0x70
6401c875:	jg     0x6401ca02
6401c87b:	je     0x6401c9f6
6401c881:	cmp    eax,0x65
6401c884:	jl     0x6401cb72
6401c88a:	cmp    eax,0x67
6401c88d:	jle    0x6401c6fe
6401c893:	cmp    eax,0x69
6401c896:	je     0x6401c8f1
6401c898:	cmp    eax,0x6e
6401c89b:	je     0x6401c8bc
6401c89d:	cmp    eax,0x6f
6401c8a0:	jne    0x6401cb72
6401c8a6:	test   BYTE PTR [ebp-0x14],0x80
6401c8aa:	mov    DWORD PTR [ebp-0x24],0x8
6401c8b1:	je     0x6401c8fc
6401c8b3:	or     DWORD PTR [ebp-0x14],0x200
6401c8ba:	jmp    0x6401c8fc
6401c8bc:	mov    esi,DWORD PTR [ebx]
6401c8be:	add    ebx,0x4
6401c8c1:	mov    DWORD PTR [ebp-0x28],ebx
6401c8c4:	call   0x6401ebc1
6401c8c9:	test   eax,eax
6401c8cb:	je     0x6401cca9
6401c8d1:	test   BYTE PTR [ebp-0x14],0x20
6401c8d5:	je     0x6401c8e0
6401c8d7:	mov    ax,WORD PTR [ebp-0x2c]
6401c8db:	mov    WORD PTR [esi],ax
6401c8de:	jmp    0x6401c8e5
6401c8e0:	mov    eax,DWORD PTR [ebp-0x2c]
6401c8e3:	mov    DWORD PTR [esi],eax
6401c8e5:	mov    DWORD PTR [ebp-0x48],0x1
6401c8ec:	jmp    0x6401cc7b
6401c8f1:	or     DWORD PTR [ebp-0x14],0x40
6401c8f5:	mov    DWORD PTR [ebp-0x24],0xa
6401c8fc:	test   WORD PTR [ebp-0x14],0x8000
6401c902:	je     0x6401ca4c
6401c908:	mov    eax,DWORD PTR [ebx]
6401c90a:	mov    edx,DWORD PTR [ebx+0x4]
6401c90d:	add    ebx,0x8
6401c910:	jmp    0x6401ca85
6401c915:	jne    0x6401c926
6401c917:	cmp    dx,0x67
6401c91b:	jne    0x6401c962
6401c91d:	mov    DWORD PTR [ebp-0x18],0x1
6401c924:	jmp    0x6401c962
6401c926:	cmp    DWORD PTR [ebp-0x18],eax
6401c929:	jle    0x6401c92e
6401c92b:	mov    DWORD PTR [ebp-0x18],eax
6401c92e:	cmp    DWORD PTR [ebp-0x18],0xa3
6401c935:	jle    0x6401c962
6401c937:	mov    edi,DWORD PTR [ebp-0x18]
6401c93a:	add    edi,0x15d
6401c940:	push   edi
6401c941:	call   0x640162ef
6401c946:	test   eax,eax
6401c948:	mov    edx,DWORD PTR [ebp-0x24]
6401c94b:	pop    ecx
6401c94c:	mov    DWORD PTR [ebp-0x50],eax
6401c94f:	je     0x6401c95b
6401c951:	mov    DWORD PTR [ebp-0x1c],eax
6401c954:	mov    DWORD PTR [ebp-0x20],edi
6401c957:	mov    esi,eax
6401c959:	jmp    0x6401c962
6401c95b:	mov    DWORD PTR [ebp-0x18],0xa3
6401c962:	mov    eax,DWORD PTR [ebx]
6401c964:	add    ebx,0x8
6401c967:	mov    DWORD PTR [ebp-0x78],eax
6401c96a:	mov    eax,DWORD PTR [ebx-0x4]
6401c96d:	mov    DWORD PTR [ebp-0x74],eax
6401c970:	lea    eax,[ebp-0x64]
6401c973:	push   eax
6401c974:	push   DWORD PTR [ebp-0x6c]
6401c977:	movsx  eax,dl
6401c97a:	push   DWORD PTR [ebp-0x18]
6401c97d:	mov    DWORD PTR [ebp-0x28],ebx
6401c980:	push   eax
6401c981:	push   DWORD PTR [ebp-0x20]
6401c984:	lea    eax,[ebp-0x78]
6401c987:	push   esi
6401c988:	push   eax
6401c989:	push   DWORD PTR ds:0x64053108
6401c98f:	call   0x6401781e
6401c994:	pop    ecx
6401c995:	call   eax
6401c997:	mov    ebx,DWORD PTR [ebp-0x14]
6401c99a:	add    esp,0x1c
6401c99d:	and    ebx,0x80
6401c9a3:	je     0x6401c9c0
6401c9a5:	cmp    DWORD PTR [ebp-0x18],0x0
6401c9a9:	jne    0x6401c9c0
6401c9ab:	lea    eax,[ebp-0x64]
6401c9ae:	push   eax
6401c9af:	push   esi
6401c9b0:	push   DWORD PTR ds:0x64053114
6401c9b6:	call   0x6401781e
6401c9bb:	pop    ecx
6401c9bc:	call   eax
6401c9be:	pop    ecx
6401c9bf:	pop    ecx
6401c9c0:	cmp    WORD PTR [ebp-0x24],0x67
6401c9c5:	jne    0x6401c9e0
6401c9c7:	test   ebx,ebx
6401c9c9:	jne    0x6401c9e0
6401c9cb:	lea    eax,[ebp-0x64]
6401c9ce:	push   eax
6401c9cf:	push   esi
6401c9d0:	push   DWORD PTR ds:0x64053110
6401c9d6:	call   0x6401781e
6401c9db:	pop    ecx
6401c9dc:	call   eax
6401c9de:	pop    ecx
6401c9df:	pop    ecx
6401c9e0:	cmp    BYTE PTR [esi],0x2d
6401c9e3:	jne    0x6401c9f0
6401c9e5:	or     DWORD PTR [ebp-0x14],0x100
6401c9ec:	inc    esi
6401c9ed:	mov    DWORD PTR [ebp-0x1c],esi
6401c9f0:	push   esi
6401c9f1:	jmp    0x6401c867
6401c9f6:	mov    DWORD PTR [ebp-0x18],0x8
6401c9fd:	mov    DWORD PTR [ebp-0x54],ecx
6401ca00:	jmp    0x6401ca23
6401ca02:	sub    eax,0x73
6401ca05:	je     0x6401c747
6401ca0b:	sub    eax,edi
6401ca0d:	je     0x6401c8f5
6401ca13:	sub    eax,0x3
6401ca16:	jne    0x6401cb72
6401ca1c:	mov    DWORD PTR [ebp-0x54],0x27
6401ca23:	test   BYTE PTR [ebp-0x14],0x80
6401ca27:	mov    DWORD PTR [ebp-0x24],0x10
6401ca2e:	je     0x6401c8fc
6401ca34:	mov    eax,DWORD PTR [ebp-0x54]
6401ca37:	add    eax,0x51
6401ca3a:	mov    WORD PTR [ebp-0x44],0x30
6401ca40:	mov    WORD PTR [ebp-0x42],ax
6401ca44:	mov    DWORD PTR [ebp-0x30],edi
6401ca47:	jmp    0x6401c8fc
6401ca4c:	test   WORD PTR [ebp-0x14],0x1000
6401ca52:	jne    0x6401c908
6401ca58:	add    ebx,0x4
6401ca5b:	test   BYTE PTR [ebp-0x14],0x20
6401ca5f:	je     0x6401ca77
6401ca61:	test   BYTE PTR [ebp-0x14],0x40
6401ca65:	mov    DWORD PTR [ebp-0x28],ebx
6401ca68:	je     0x6401ca70
6401ca6a:	movsx  eax,WORD PTR [ebx-0x4]
6401ca6e:	jmp    0x6401ca74
6401ca70:	movzx  eax,WORD PTR [ebx-0x4]
6401ca74:	cdq    
6401ca75:	jmp    0x6401ca88
6401ca77:	test   BYTE PTR [ebp-0x14],0x40
6401ca7b:	mov    eax,DWORD PTR [ebx-0x4]
6401ca7e:	je     0x6401ca83
6401ca80:	cdq    
6401ca81:	jmp    0x6401ca85
6401ca83:	xor    edx,edx
6401ca85:	mov    DWORD PTR [ebp-0x28],ebx
6401ca88:	test   BYTE PTR [ebp-0x14],0x40
6401ca8c:	je     0x6401caa6
6401ca8e:	test   edx,edx
6401ca90:	jg     0x6401caa6
6401ca92:	jl     0x6401ca98
6401ca94:	test   eax,eax
6401ca96:	jae    0x6401caa6
6401ca98:	neg    eax
6401ca9a:	adc    edx,0x0
6401ca9d:	neg    edx
6401ca9f:	or     DWORD PTR [ebp-0x14],0x100
6401caa6:	test   WORD PTR [ebp-0x14],0x9000
6401caac:	mov    ebx,edx
6401caae:	mov    edi,eax
6401cab0:	jne    0x6401cab4
6401cab2:	xor    ebx,ebx
6401cab4:	cmp    DWORD PTR [ebp-0x18],0x0
6401cab8:	jge    0x6401cac3
6401caba:	mov    DWORD PTR [ebp-0x18],0x1
6401cac1:	jmp    0x6401cad4
6401cac3:	and    DWORD PTR [ebp-0x14],0xfffffff7
6401cac7:	mov    eax,0x200
6401cacc:	cmp    DWORD PTR [ebp-0x18],eax
6401cacf:	jle    0x6401cad4
6401cad1:	mov    DWORD PTR [ebp-0x18],eax
6401cad4:	mov    eax,edi
6401cad6:	or     eax,ebx
6401cad8:	jne    0x6401cadd
6401cada:	and    DWORD PTR [ebp-0x30],eax
6401cadd:	lea    esi,[ebp+0x1ef]
6401cae3:	mov    eax,DWORD PTR [ebp-0x18]
6401cae6:	dec    DWORD PTR [ebp-0x18]
6401cae9:	test   eax,eax
6401caeb:	jg     0x6401caf3
6401caed:	mov    eax,edi
6401caef:	or     eax,ebx
6401caf1:	je     0x6401cb17
6401caf3:	mov    eax,DWORD PTR [ebp-0x24]
6401caf6:	cdq    
6401caf7:	push   edx
6401caf8:	push   eax
6401caf9:	push   ebx
6401cafa:	push   edi
6401cafb:	call   0x64019a70
6401cb00:	add    ecx,0x30
6401cb03:	cmp    ecx,0x39
6401cb06:	mov    DWORD PTR [ebp-0x7c],ebx
6401cb09:	mov    edi,eax
6401cb0b:	mov    ebx,edx
6401cb0d:	jle    0x6401cb12
6401cb0f:	add    ecx,DWORD PTR [ebp-0x54]
6401cb12:	mov    BYTE PTR [esi],cl
6401cb14:	dec    esi
6401cb15:	jmp    0x6401cae3
6401cb17:	lea    eax,[ebp+0x1ef]
6401cb1d:	sub    eax,esi
6401cb1f:	inc    esi
6401cb20:	test   WORD PTR [ebp-0x14],0x200
6401cb26:	mov    DWORD PTR [ebp-0x20],eax
6401cb29:	mov    DWORD PTR [ebp-0x1c],esi
6401cb2c:	je     0x6401cb72
6401cb2e:	test   eax,eax
6401cb30:	je     0x6401cb39
6401cb32:	mov    ecx,esi
6401cb34:	cmp    BYTE PTR [ecx],0x30
6401cb37:	je     0x6401cb72
6401cb39:	dec    DWORD PTR [ebp-0x1c]
6401cb3c:	mov    ecx,DWORD PTR [ebp-0x1c]
6401cb3f:	mov    BYTE PTR [ecx],0x30
6401cb42:	inc    eax
6401cb43:	jmp    0x6401cb6f
6401cb45:	test   ebx,ebx
6401cb47:	jne    0x6401cb51
6401cb49:	mov    eax,ds:0x64052df4
6401cb4e:	mov    DWORD PTR [ebp-0x1c],eax
6401cb51:	mov    eax,DWORD PTR [ebp-0x1c]
6401cb54:	mov    DWORD PTR [ebp-0x34],0x1
6401cb5b:	jmp    0x6401cb66
6401cb5d:	dec    edi
6401cb5e:	cmp    WORD PTR [eax],0x0
6401cb62:	je     0x6401cb6a
6401cb64:	inc    eax
6401cb65:	inc    eax
6401cb66:	test   edi,edi
6401cb68:	jne    0x6401cb5d
6401cb6a:	sub    eax,DWORD PTR [ebp-0x1c]
6401cb6d:	sar    eax,1
6401cb6f:	mov    DWORD PTR [ebp-0x20],eax
6401cb72:	cmp    DWORD PTR [ebp-0x48],0x0
6401cb76:	jne    0x6401cc7b
6401cb7c:	mov    eax,DWORD PTR [ebp-0x14]
6401cb7f:	test   al,0x40
6401cb81:	je     0x6401cbae
6401cb83:	test   ax,0x100
6401cb87:	je     0x6401cb91
6401cb89:	mov    WORD PTR [ebp-0x44],0x2d
6401cb8f:	jmp    0x6401cba7
6401cb91:	test   al,0x1
6401cb93:	je     0x6401cb9d
6401cb95:	mov    WORD PTR [ebp-0x44],0x2b
6401cb9b:	jmp    0x6401cba7
6401cb9d:	test   al,0x2
6401cb9f:	je     0x6401cbae
6401cba1:	mov    WORD PTR [ebp-0x44],0x20
6401cba7:	mov    DWORD PTR [ebp-0x30],0x1
6401cbae:	mov    ebx,DWORD PTR [ebp-0x38]
6401cbb1:	mov    esi,DWORD PTR [ebp-0x20]
6401cbb4:	sub    ebx,esi
6401cbb6:	sub    ebx,DWORD PTR [ebp-0x30]
6401cbb9:	test   BYTE PTR [ebp-0x14],0xc
6401cbbd:	jne    0x6401cbd0
6401cbbf:	push   DWORD PTR [ebp-0x3c]
6401cbc2:	lea    eax,[ebp-0x2c]
6401cbc5:	push   ebx
6401cbc6:	push   0x20
6401cbc8:	call   0x6401cd08
6401cbcd:	add    esp,0xc
6401cbd0:	push   DWORD PTR [ebp-0x30]
6401cbd3:	mov    edi,DWORD PTR [ebp-0x3c]
6401cbd6:	lea    eax,[ebp-0x2c]
6401cbd9:	lea    ecx,[ebp-0x44]
6401cbdc:	call   0x6401c3a9
6401cbe1:	test   BYTE PTR [ebp-0x14],0x8
6401cbe5:	pop    ecx
6401cbe6:	je     0x6401cbfd
6401cbe8:	test   BYTE PTR [ebp-0x14],0x4
6401cbec:	jne    0x6401cbfd
6401cbee:	push   edi
6401cbef:	push   ebx
6401cbf0:	push   0x30
6401cbf2:	lea    eax,[ebp-0x2c]
6401cbf5:	call   0x6401cd08
6401cbfa:	add    esp,0xc
6401cbfd:	cmp    DWORD PTR [ebp-0x34],0x0
6401cc01:	jne    0x6401cc51
6401cc03:	test   esi,esi
6401cc05:	jle    0x6401cc51
6401cc07:	mov    edi,DWORD PTR [ebp-0x1c]
6401cc0a:	mov    DWORD PTR [ebp-0x24],esi
6401cc0d:	dec    DWORD PTR [ebp-0x24]
6401cc10:	lea    eax,[ebp-0x64]
6401cc13:	push   eax
6401cc14:	mov    eax,DWORD PTR [ebp-0x64]
6401cc17:	push   DWORD PTR [eax+0xac]
6401cc1d:	lea    eax,[ebp-0x70]
6401cc20:	push   edi
6401cc21:	push   eax
6401cc22:	call   0x6401ee13
6401cc27:	add    esp,0x10
6401cc2a:	test   eax,eax
6401cc2c:	mov    DWORD PTR [ebp-0x7c],eax
6401cc2f:	jle    0x6401cc4b
6401cc31:	push   DWORD PTR [ebp-0x70]
6401cc34:	mov    eax,DWORD PTR [ebp-0x3c]
6401cc37:	lea    esi,[ebp-0x2c]
6401cc3a:	call   0x6401c384
6401cc3f:	add    edi,DWORD PTR [ebp-0x7c]
6401cc42:	cmp    DWORD PTR [ebp-0x24],0x0
6401cc46:	pop    ecx
6401cc47:	jg     0x6401cc0d
6401cc49:	jmp    0x6401cc5e
6401cc4b:	or     DWORD PTR [ebp-0x2c],0xffffffff
6401cc4f:	jmp    0x6401cc5e
6401cc51:	mov    ecx,DWORD PTR [ebp-0x1c]
6401cc54:	push   esi
6401cc55:	lea    eax,[ebp-0x2c]
6401cc58:	call   0x6401c3a9
6401cc5d:	pop    ecx
6401cc5e:	cmp    DWORD PTR [ebp-0x2c],0x0
6401cc62:	jl     0x6401cc7b
6401cc64:	test   BYTE PTR [ebp-0x14],0x4
6401cc68:	je     0x6401cc7b
6401cc6a:	push   DWORD PTR [ebp-0x3c]
6401cc6d:	lea    eax,[ebp-0x2c]
6401cc70:	push   ebx
6401cc71:	push   0x20
6401cc73:	call   0x6401cd08
6401cc78:	add    esp,0xc
6401cc7b:	cmp    DWORD PTR [ebp-0x50],0x0
6401cc7f:	je     0x6401cc8e
6401cc81:	push   DWORD PTR [ebp-0x50]
6401cc84:	call   0x640147cf
6401cc89:	and    DWORD PTR [ebp-0x50],0x0
6401cc8d:	pop    ecx
6401cc8e:	mov    esi,DWORD PTR [ebp-0x4c]
6401cc91:	movzx  eax,WORD PTR [esi]
6401cc94:	test   ax,ax
6401cc97:	mov    DWORD PTR [ebp-0x24],eax
6401cc9a:	je     0x6401ccc0
6401cc9c:	mov    ecx,DWORD PTR [ebp-0x68]
6401cc9f:	mov    ebx,DWORD PTR [ebp-0x28]
6401cca2:	mov    edx,eax
6401cca4:	jmp    0x6401c4a3
6401cca9:	call   0x640166d3
6401ccae:	mov    DWORD PTR [eax],0x16
6401ccb4:	xor    eax,eax
6401ccb6:	push   eax
6401ccb7:	push   eax
6401ccb8:	push   eax
6401ccb9:	push   eax
6401ccba:	push   eax
6401ccbb:	jmp    0x6401c468
6401ccc0:	cmp    BYTE PTR [ebp-0x58],0x0
6401ccc4:	je     0x6401cccd
6401ccc6:	mov    eax,DWORD PTR [ebp-0x5c]
6401ccc9:	and    DWORD PTR [eax+0x70],0xfffffffd
6401cccd:	mov    eax,DWORD PTR [ebp-0x2c]
6401ccd0:	mov    ecx,DWORD PTR [ebp+0x3f0]
6401ccd6:	pop    edi
6401ccd7:	pop    esi
6401ccd8:	xor    ecx,ebp
6401ccda:	pop    ebx
6401ccdb:	call   0x64013d18
6401cce0:	add    ebp,0x3f4
6401cce6:	leave  
6401cce7:	ret    
6401cce8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
6401cce9:	mov    BYTE PTR [ecx],0x64
6401ccec:	out    dx,eax
6401cced:	les    eax,FWORD PTR [ecx]
6401ccef:	fs or  al,0xc5
6401ccf2:	add    DWORD PTR [edx+ebx*2-0x3b],esp
6401ccf6:	add    DWORD PTR [ebp+edx*4-0x3b],esp
6401ccfa:	add    DWORD PTR [esi+ebx*4-0x3b],esp
6401ccfe:	add    DWORD PTR [esi+edx*8-0x3b],esp
6401cd02:	add    DWORD PTR [edi+edi*4-0x3a],esp
6401cd06:	add    DWORD PTR [ebp+edx*2-0x75],esp
6401cd0a:	in     al,dx
6401cd0b:	push   esi
6401cd0c:	mov    esi,eax
6401cd0e:	jmp    0x6401cd24
6401cd10:	push   DWORD PTR [ebp+0x8]
6401cd13:	mov    eax,DWORD PTR [ebp+0x10]
6401cd16:	dec    DWORD PTR [ebp+0xc]
6401cd19:	call   0x6401c384
6401cd1e:	cmp    DWORD PTR [esi],0xffffffff
6401cd21:	pop    ecx
6401cd22:	je     0x6401cd2a
6401cd24:	cmp    DWORD PTR [ebp+0xc],0x0
6401cd28:	jg     0x6401cd10
6401cd2a:	pop    esi
6401cd2b:	pop    ebp
6401cd2c:	ret    
6401cd2d:	push   ebp
6401cd2e:	lea    ebp,[esp-0x3f4]
6401cd35:	sub    esp,0x474
6401cd3b:	mov    eax,ds:0x640521ac
6401cd40:	xor    eax,ebp
6401cd42:	mov    DWORD PTR [ebp+0x3f0],eax
6401cd48:	push   ebx
6401cd49:	mov    ebx,DWORD PTR [ebp+0x408]
6401cd4f:	push   esi
6401cd50:	mov    esi,DWORD PTR [ebp+0x3fc]
6401cd56:	xor    eax,eax
6401cd58:	push   edi
6401cd59:	push   DWORD PTR [ebp+0x404]
6401cd5f:	mov    edi,DWORD PTR [ebp+0x400]
6401cd65:	lea    ecx,[ebp-0x58]
6401cd68:	mov    DWORD PTR [ebp-0x48],esi
6401cd6b:	mov    DWORD PTR [ebp-0x24],ebx
6401cd6e:	mov    DWORD PTR [ebp-0x60],eax
6401cd71:	mov    DWORD PTR [ebp-0x14],eax
6401cd74:	mov    DWORD PTR [ebp-0x38],eax
6401cd77:	mov    DWORD PTR [ebp-0x18],eax
6401cd7a:	mov    DWORD PTR [ebp-0x30],eax
6401cd7d:	mov    DWORD PTR [ebp-0x5c],eax
6401cd80:	mov    DWORD PTR [ebp-0x34],eax
6401cd83:	call   0x64014335
6401cd88:	test   esi,esi
6401cd8a:	jne    0x6401cdbb
6401cd8c:	call   0x640166d3
6401cd91:	mov    DWORD PTR [eax],0x16
6401cd97:	xor    eax,eax
6401cd99:	push   eax
6401cd9a:	push   eax
6401cd9b:	push   eax
6401cd9c:	push   eax
6401cd9d:	push   eax
6401cd9e:	call   0x64013e62
6401cda3:	add    esp,0x14
6401cda6:	cmp    BYTE PTR [ebp-0x4c],0x0
6401cdaa:	je     0x6401cdb3
6401cdac:	mov    eax,DWORD PTR [ebp-0x50]
6401cdaf:	and    DWORD PTR [eax+0x70],0xfffffffd
6401cdb3:	or     eax,0xffffffff
6401cdb6:	jmp    0x6401d611
6401cdbb:	xor    esi,esi
6401cdbd:	cmp    edi,esi
6401cdbf:	jne    0x6401cdd3
6401cdc1:	call   0x640166d3
6401cdc6:	push   esi
6401cdc7:	push   esi
6401cdc8:	push   esi
6401cdc9:	push   esi
6401cdca:	mov    DWORD PTR [eax],0x16
6401cdd0:	push   esi
6401cdd1:	jmp    0x6401cd9e
6401cdd3:	movzx  ecx,WORD PTR [edi]
6401cdd6:	cmp    cx,si
6401cdd9:	mov    DWORD PTR [ebp-0x2c],esi
6401cddc:	mov    DWORD PTR [ebp-0x20],esi
6401cddf:	mov    DWORD PTR [ebp-0x40],esi
6401cde2:	mov    DWORD PTR [ebp-0x64],esi
6401cde5:	mov    DWORD PTR [ebp-0x28],ecx
6401cde8:	je     0x6401d601
6401cdee:	push   0x2
6401cdf0:	pop    esi
6401cdf1:	add    edi,esi
6401cdf3:	xor    eax,eax
6401cdf5:	cmp    DWORD PTR [ebp-0x2c],eax
6401cdf8:	mov    DWORD PTR [ebp-0x6c],edi
6401cdfb:	jl     0x6401d5f1
6401ce01:	lea    edx,[ecx-0x20]
6401ce04:	cmp    dx,0x58
6401ce08:	ja     0x6401ce17
6401ce0a:	movzx  eax,cx
6401ce0d:	movzx  eax,BYTE PTR [eax+0x64040fd0]
6401ce14:	and    eax,0xf
6401ce17:	mov    edx,DWORD PTR [ebp-0x40]
6401ce1a:	imul   eax,eax,0x9
6401ce1d:	movzx  eax,BYTE PTR [eax+edx*1+0x64040ff0]
6401ce25:	push   0x8
6401ce27:	shr    eax,0x4
6401ce2a:	pop    edx
6401ce2b:	cmp    eax,edx
6401ce2d:	mov    DWORD PTR [ebp-0x40],eax
6401ce30:	je     0x6401cd8c
6401ce36:	cmp    eax,0x7
6401ce39:	ja     0x6401d5d9
6401ce3f:	jmp    DWORD PTR [eax*4+0x6401d629]
6401ce46:	xor    eax,eax
6401ce48:	or     DWORD PTR [ebp-0x18],0xffffffff
6401ce4c:	mov    DWORD PTR [ebp-0x68],eax
6401ce4f:	mov    DWORD PTR [ebp-0x5c],eax
6401ce52:	mov    DWORD PTR [ebp-0x38],eax
6401ce55:	mov    DWORD PTR [ebp-0x30],eax
6401ce58:	mov    DWORD PTR [ebp-0x14],eax
6401ce5b:	mov    DWORD PTR [ebp-0x34],eax
6401ce5e:	jmp    0x6401d5df
6401ce63:	movzx  eax,cx
6401ce66:	sub    eax,0x20
6401ce69:	je     0x6401cea7
6401ce6b:	sub    eax,0x3
6401ce6e:	je     0x6401ce9b
6401ce70:	sub    eax,edx
6401ce72:	je     0x6401ce92
6401ce74:	sub    eax,esi
6401ce76:	je     0x6401ce89
6401ce78:	sub    eax,0x3
6401ce7b:	jne    0x6401d5d9
6401ce81:	or     DWORD PTR [ebp-0x14],edx
6401ce84:	jmp    0x6401d5df
6401ce89:	or     DWORD PTR [ebp-0x14],0x4
6401ce8d:	jmp    0x6401d5df
6401ce92:	or     DWORD PTR [ebp-0x14],0x1
6401ce96:	jmp    0x6401d5df
6401ce9b:	or     DWORD PTR [ebp-0x14],0x80
6401cea2:	jmp    0x6401d5df
6401cea7:	or     DWORD PTR [ebp-0x14],esi
6401ceaa:	jmp    0x6401d5df
6401ceaf:	cmp    cx,0x2a
6401ceb3:	jne    0x6401ced4
6401ceb5:	mov    eax,DWORD PTR [ebx]
6401ceb7:	add    ebx,0x4
6401ceba:	test   eax,eax
6401cebc:	mov    DWORD PTR [ebp-0x24],ebx
6401cebf:	mov    DWORD PTR [ebp-0x38],eax
6401cec2:	jge    0x6401d5df
6401cec8:	or     DWORD PTR [ebp-0x14],0x4
6401cecc:	neg    DWORD PTR [ebp-0x38]
6401cecf:	jmp    0x6401d5df
6401ced4:	mov    eax,DWORD PTR [ebp-0x38]
6401ced7:	imul   eax,eax,0xa
6401ceda:	movzx  ecx,cx
6401cedd:	lea    eax,[eax+ecx*1-0x30]
6401cee1:	mov    DWORD PTR [ebp-0x38],eax
6401cee4:	jmp    0x6401d5df
6401cee9:	and    DWORD PTR [ebp-0x18],0x0
6401ceed:	jmp    0x6401d5df
6401cef2:	cmp    cx,0x2a
6401cef6:	jne    0x6401cf14
6401cef8:	mov    eax,DWORD PTR [ebx]
6401cefa:	add    ebx,0x4
6401cefd:	test   eax,eax
6401ceff:	mov    DWORD PTR [ebp-0x24],ebx
6401cf02:	mov    DWORD PTR [ebp-0x18],eax
6401cf05:	jge    0x6401d5df
6401cf0b:	or     DWORD PTR [ebp-0x18],0xffffffff
6401cf0f:	jmp    0x6401d5df
6401cf14:	mov    eax,DWORD PTR [ebp-0x18]
6401cf17:	imul   eax,eax,0xa
6401cf1a:	movzx  ecx,cx
6401cf1d:	lea    eax,[eax+ecx*1-0x30]
6401cf21:	mov    DWORD PTR [ebp-0x18],eax
6401cf24:	jmp    0x6401d5df
6401cf29:	movzx  eax,cx
6401cf2c:	cmp    eax,0x49
6401cf2f:	je     0x6401cf76
6401cf31:	cmp    eax,0x68
6401cf34:	je     0x6401cf6d
6401cf36:	cmp    eax,0x6c
6401cf39:	je     0x6401cf50
6401cf3b:	cmp    eax,0x77
6401cf3e:	jne    0x6401d5df
6401cf44:	or     DWORD PTR [ebp-0x14],0x800
6401cf4b:	jmp    0x6401d5df
6401cf50:	cmp    WORD PTR [edi],0x6c
6401cf54:	jne    0x6401cf64
6401cf56:	add    edi,esi
6401cf58:	or     DWORD PTR [ebp-0x14],0x1000
6401cf5f:	jmp    0x6401d5df
6401cf64:	or     DWORD PTR [ebp-0x14],0x10
6401cf68:	jmp    0x6401d5df
6401cf6d:	or     DWORD PTR [ebp-0x14],0x20
6401cf71:	jmp    0x6401d5df
6401cf76:	movzx  eax,WORD PTR [edi]
6401cf79:	cmp    ax,0x36
6401cf7d:	jne    0x6401cf95
6401cf7f:	cmp    WORD PTR [edi+0x2],0x34
6401cf84:	jne    0x6401cf95
6401cf86:	add    edi,0x4
6401cf89:	or     DWORD PTR [ebp-0x14],0x8000
6401cf90:	jmp    0x6401d5df
6401cf95:	cmp    ax,0x33
6401cf99:	jne    0x6401cfb1
6401cf9b:	cmp    WORD PTR [edi+0x2],0x32
6401cfa0:	jne    0x6401cfb1
6401cfa2:	add    edi,0x4
6401cfa5:	and    DWORD PTR [ebp-0x14],0xffff7fff
6401cfac:	jmp    0x6401d5df
6401cfb1:	cmp    ax,0x64
6401cfb5:	je     0x6401d5df
6401cfbb:	cmp    ax,0x69
6401cfbf:	je     0x6401d5df
6401cfc5:	cmp    ax,0x6f
6401cfc9:	je     0x6401d5df
6401cfcf:	cmp    ax,0x75
6401cfd3:	je     0x6401d5df
6401cfd9:	cmp    ax,0x78
6401cfdd:	je     0x6401d5df
6401cfe3:	cmp    ax,0x58
6401cfe7:	je     0x6401d5df
6401cfed:	and    DWORD PTR [ebp-0x40],0x0
6401cff1:	mov    eax,DWORD PTR [ebp-0x48]
6401cff4:	push   ecx
6401cff5:	lea    esi,[ebp-0x2c]
6401cff8:	mov    DWORD PTR [ebp-0x34],0x1
6401cfff:	call   0x6401c384
6401d004:	pop    ecx
6401d005:	jmp    0x6401d5df
6401d00a:	movzx  eax,cx
6401d00d:	cmp    eax,0x64
6401d010:	jg     0x6401d1be
6401d016:	je     0x6401d239
6401d01c:	cmp    eax,0x53
6401d01f:	jg     0x6401d0fc
6401d025:	je     0x6401d086
6401d027:	sub    eax,0x41
6401d02a:	je     0x6401d03c
6401d02c:	sub    eax,esi
6401d02e:	je     0x6401d071
6401d030:	sub    eax,esi
6401d032:	je     0x6401d03c
6401d034:	sub    eax,esi
6401d036:	jne    0x6401d4bd
6401d03c:	add    ecx,0x20
6401d03f:	mov    DWORD PTR [ebp-0x68],0x1
6401d046:	mov    DWORD PTR [ebp-0x28],ecx
6401d049:	or     DWORD PTR [ebp-0x14],0x40
6401d04d:	cmp    DWORD PTR [ebp-0x18],0x0
6401d051:	lea    esi,[ebp-0x10]
6401d054:	mov    eax,0x200
6401d059:	mov    DWORD PTR [ebp-0x1c],esi
6401d05c:	mov    DWORD PTR [ebp-0x20],eax
6401d05f:	jge    0x6401d25d
6401d065:	mov    DWORD PTR [ebp-0x18],0x6
6401d06c:	jmp    0x6401d2ad
6401d071:	test   WORD PTR [ebp-0x14],0x830
6401d077:	jne    0x6401d11a
6401d07d:	or     DWORD PTR [ebp-0x14],0x20
6401d081:	jmp    0x6401d11a
6401d086:	test   WORD PTR [ebp-0x14],0x830
6401d08c:	jne    0x6401d092
6401d08e:	or     DWORD PTR [ebp-0x14],0x20
6401d092:	mov    edi,DWORD PTR [ebp-0x18]
6401d095:	cmp    edi,0xffffffff
6401d098:	jne    0x6401d09f
6401d09a:	mov    edi,0x7fffffff
6401d09f:	add    ebx,0x4
6401d0a2:	test   BYTE PTR [ebp-0x14],0x20
6401d0a6:	mov    DWORD PTR [ebp-0x24],ebx
6401d0a9:	mov    ebx,DWORD PTR [ebx-0x4]
6401d0ac:	mov    DWORD PTR [ebp-0x1c],ebx
6401d0af:	je     0x6401d490
6401d0b5:	test   ebx,ebx
6401d0b7:	jne    0x6401d0c1
6401d0b9:	mov    eax,ds:0x64052df0
6401d0be:	mov    DWORD PTR [ebp-0x1c],eax
6401d0c1:	and    DWORD PTR [ebp-0x20],0x0
6401d0c5:	test   edi,edi
6401d0c7:	mov    esi,DWORD PTR [ebp-0x1c]
6401d0ca:	jle    0x6401d4bd
6401d0d0:	mov    al,BYTE PTR [esi]
6401d0d2:	test   al,al
6401d0d4:	je     0x6401d4bd
6401d0da:	lea    ecx,[ebp-0x58]
6401d0dd:	movzx  eax,al
6401d0e0:	push   ecx
6401d0e1:	push   eax
6401d0e2:	call   0x64015127
6401d0e7:	test   eax,eax
6401d0e9:	pop    ecx
6401d0ea:	pop    ecx
6401d0eb:	je     0x6401d0ee
6401d0ed:	inc    esi
6401d0ee:	inc    esi
6401d0ef:	inc    DWORD PTR [ebp-0x20]
6401d0f2:	cmp    DWORD PTR [ebp-0x20],edi
6401d0f5:	jl     0x6401d0d0
6401d0f7:	jmp    0x6401d4bd
6401d0fc:	sub    eax,0x58
6401d0ff:	je     0x6401d344
6401d105:	sub    eax,esi
6401d107:	je     0x6401d171
6401d109:	sub    eax,0x7
6401d10c:	je     0x6401d049
6401d112:	sub    eax,esi
6401d114:	jne    0x6401d4bd
6401d11a:	movzx  eax,WORD PTR [ebx]
6401d11d:	add    ebx,0x4
6401d120:	xor    esi,esi
6401d122:	inc    esi
6401d123:	test   BYTE PTR [ebp-0x14],0x20
6401d127:	mov    DWORD PTR [ebp-0x34],esi
6401d12a:	mov    DWORD PTR [ebp-0x24],ebx
6401d12d:	mov    DWORD PTR [ebp-0x70],eax
6401d130:	je     0x6401d15f
6401d132:	mov    BYTE PTR [ebp-0x44],al
6401d135:	lea    eax,[ebp-0x58]
6401d138:	push   eax
6401d139:	mov    eax,DWORD PTR [ebp-0x58]
6401d13c:	mov    BYTE PTR [ebp-0x43],0x0
6401d140:	push   DWORD PTR [eax+0xac]
6401d146:	lea    eax,[ebp-0x44]
6401d149:	push   eax
6401d14a:	lea    eax,[ebp-0x10]
6401d14d:	push   eax
6401d14e:	call   0x6401ee13
6401d153:	add    esp,0x10
6401d156:	test   eax,eax
6401d158:	jge    0x6401d163
6401d15a:	mov    DWORD PTR [ebp-0x5c],esi
6401d15d:	jmp    0x6401d163
6401d15f:	mov    WORD PTR [ebp-0x10],ax
6401d163:	lea    eax,[ebp-0x10]
6401d166:	mov    DWORD PTR [ebp-0x1c],eax
6401d169:	mov    DWORD PTR [ebp-0x20],esi
6401d16c:	jmp    0x6401d4bd
6401d171:	mov    eax,DWORD PTR [ebx]
6401d173:	add    ebx,0x4
6401d176:	test   eax,eax
6401d178:	mov    DWORD PTR [ebp-0x24],ebx
6401d17b:	je     0x6401d1aa
6401d17d:	mov    ecx,DWORD PTR [eax+0x4]
6401d180:	test   ecx,ecx
6401d182:	je     0x6401d1aa
6401d184:	test   WORD PTR [ebp-0x14],0x800
6401d18a:	movsx  eax,WORD PTR [eax]
6401d18d:	mov    DWORD PTR [ebp-0x1c],ecx
6401d190:	je     0x6401d1a1
6401d192:	cdq    
6401d193:	sub    eax,edx
6401d195:	mov    DWORD PTR [ebp-0x34],0x1
6401d19c:	jmp    0x6401d4b8
6401d1a1:	and    DWORD PTR [ebp-0x34],0x0
6401d1a5:	jmp    0x6401d4ba
6401d1aa:	mov    eax,ds:0x64052df0
6401d1af:	mov    DWORD PTR [ebp-0x1c],eax
6401d1b2:	push   eax
6401d1b3:	call   0x64015b10
6401d1b8:	pop    ecx
6401d1b9:	jmp    0x6401d4ba
6401d1be:	cmp    eax,0x70
6401d1c1:	jg     0x6401d34d
6401d1c7:	je     0x6401d341
6401d1cd:	cmp    eax,0x65
6401d1d0:	jl     0x6401d4bd
6401d1d6:	cmp    eax,0x67
6401d1d9:	jle    0x6401d049
6401d1df:	cmp    eax,0x69
6401d1e2:	je     0x6401d239
6401d1e4:	cmp    eax,0x6e
6401d1e7:	je     0x6401d204
6401d1e9:	cmp    eax,0x6f
6401d1ec:	jne    0x6401d4bd
6401d1f2:	test   BYTE PTR [ebp-0x14],0x80
6401d1f6:	mov    DWORD PTR [ebp-0x28],edx
6401d1f9:	je     0x6401d244
6401d1fb:	or     DWORD PTR [ebp-0x14],0x200
6401d202:	jmp    0x6401d244
6401d204:	mov    esi,DWORD PTR [ebx]
6401d206:	add    ebx,0x4
6401d209:	mov    DWORD PTR [ebp-0x24],ebx
6401d20c:	call   0x6401ebc1
6401d211:	test   eax,eax
6401d213:	je     0x6401cd8c
6401d219:	test   BYTE PTR [ebp-0x14],0x20
6401d21d:	je     0x6401d228
6401d21f:	mov    ax,WORD PTR [ebp-0x2c]
6401d223:	mov    WORD PTR [esi],ax
6401d226:	jmp    0x6401d22d
6401d228:	mov    eax,DWORD PTR [ebp-0x2c]
6401d22b:	mov    DWORD PTR [esi],eax
6401d22d:	mov    DWORD PTR [ebp-0x5c],0x1
6401d234:	jmp    0x6401d5c6
6401d239:	or     DWORD PTR [ebp-0x14],0x40
6401d23d:	mov    DWORD PTR [ebp-0x28],0xa
6401d244:	test   WORD PTR [ebp-0x14],0x8000
6401d24a:	je     0x6401d397
6401d250:	add    ebx,edx
6401d252:	mov    eax,DWORD PTR [ebx-0x8]
6401d255:	mov    edx,DWORD PTR [ebx-0x4]
6401d258:	jmp    0x6401d3d0
6401d25d:	jne    0x6401d26e
6401d25f:	cmp    cx,0x67
6401d263:	jne    0x6401d2ad
6401d265:	mov    DWORD PTR [ebp-0x18],0x1
6401d26c:	jmp    0x6401d2ad
6401d26e:	cmp    DWORD PTR [ebp-0x18],eax
6401d271:	jle    0x6401d276
6401d273:	mov    DWORD PTR [ebp-0x18],eax
6401d276:	cmp    DWORD PTR [ebp-0x18],0xa3
6401d27d:	jle    0x6401d2ad
6401d27f:	mov    edi,DWORD PTR [ebp-0x18]
6401d282:	add    edi,0x15d
6401d288:	push   edi
6401d289:	call   0x640162ef
6401d28e:	test   eax,eax
6401d290:	pop    ecx
6401d291:	mov    ecx,DWORD PTR [ebp-0x28]
6401d294:	push   0x8
6401d296:	mov    DWORD PTR [ebp-0x64],eax
6401d299:	pop    edx
6401d29a:	je     0x6401d2a6
6401d29c:	mov    DWORD PTR [ebp-0x1c],eax
6401d29f:	mov    DWORD PTR [ebp-0x20],edi
6401d2a2:	mov    esi,eax
6401d2a4:	jmp    0x6401d2ad
6401d2a6:	mov    DWORD PTR [ebp-0x18],0xa3
6401d2ad:	add    ebx,edx
6401d2af:	mov    eax,DWORD PTR [ebx-0x8]
6401d2b2:	mov    DWORD PTR [ebp-0x78],eax
6401d2b5:	mov    eax,DWORD PTR [ebx-0x4]
6401d2b8:	mov    DWORD PTR [ebp-0x74],eax
6401d2bb:	lea    eax,[ebp-0x58]
6401d2be:	push   eax
6401d2bf:	push   DWORD PTR [ebp-0x68]
6401d2c2:	movsx  eax,cl
6401d2c5:	push   DWORD PTR [ebp-0x18]
6401d2c8:	mov    DWORD PTR [ebp-0x24],ebx
6401d2cb:	push   eax
6401d2cc:	push   DWORD PTR [ebp-0x20]
6401d2cf:	lea    eax,[ebp-0x78]
6401d2d2:	push   esi
6401d2d3:	push   eax
6401d2d4:	push   DWORD PTR ds:0x64053108
6401d2da:	call   0x6401781e
6401d2df:	pop    ecx
6401d2e0:	call   eax
6401d2e2:	mov    ebx,DWORD PTR [ebp-0x14]
6401d2e5:	add    esp,0x1c
6401d2e8:	and    ebx,0x80
6401d2ee:	je     0x6401d30b
6401d2f0:	cmp    DWORD PTR [ebp-0x18],0x0
6401d2f4:	jne    0x6401d30b
6401d2f6:	lea    eax,[ebp-0x58]
6401d2f9:	push   eax
6401d2fa:	push   esi
6401d2fb:	push   DWORD PTR ds:0x64053114
6401d301:	call   0x6401781e
6401d306:	pop    ecx
6401d307:	call   eax
6401d309:	pop    ecx
6401d30a:	pop    ecx
6401d30b:	cmp    WORD PTR [ebp-0x28],0x67
6401d310:	jne    0x6401d32b
6401d312:	test   ebx,ebx
6401d314:	jne    0x6401d32b
6401d316:	lea    eax,[ebp-0x58]
6401d319:	push   eax
6401d31a:	push   esi
6401d31b:	push   DWORD PTR ds:0x64053110
6401d321:	call   0x6401781e
6401d326:	pop    ecx
6401d327:	call   eax
6401d329:	pop    ecx
6401d32a:	pop    ecx
6401d32b:	cmp    BYTE PTR [esi],0x2d
6401d32e:	jne    0x6401d33b
6401d330:	or     DWORD PTR [ebp-0x14],0x100
6401d337:	inc    esi
6401d338:	mov    DWORD PTR [ebp-0x1c],esi
6401d33b:	push   esi
6401d33c:	jmp    0x6401d1b3
6401d341:	mov    DWORD PTR [ebp-0x18],edx
6401d344:	mov    DWORD PTR [ebp-0x60],0x7
6401d34b:	jmp    0x6401d36e
6401d34d:	sub    eax,0x73
6401d350:	je     0x6401d092
6401d356:	sub    eax,esi
6401d358:	je     0x6401d23d
6401d35e:	sub    eax,0x3
6401d361:	jne    0x6401d4bd
6401d367:	mov    DWORD PTR [ebp-0x60],0x27
6401d36e:	test   BYTE PTR [ebp-0x14],0x80
6401d372:	mov    DWORD PTR [ebp-0x28],0x10
6401d379:	je     0x6401d244
6401d37f:	mov    eax,DWORD PTR [ebp-0x60]
6401d382:	add    eax,0x51
6401d385:	mov    WORD PTR [ebp-0x3c],0x30
6401d38b:	mov    WORD PTR [ebp-0x3a],ax
6401d38f:	mov    DWORD PTR [ebp-0x30],esi
6401d392:	jmp    0x6401d244
6401d397:	test   WORD PTR [ebp-0x14],0x1000
6401d39d:	jne    0x6401d250
6401d3a3:	add    ebx,0x4
6401d3a6:	test   BYTE PTR [ebp-0x14],0x20
6401d3aa:	je     0x6401d3c2
6401d3ac:	test   BYTE PTR [ebp-0x14],0x40
6401d3b0:	mov    DWORD PTR [ebp-0x24],ebx
6401d3b3:	je     0x6401d3bb
6401d3b5:	movsx  eax,WORD PTR [ebx-0x4]
6401d3b9:	jmp    0x6401d3bf
6401d3bb:	movzx  eax,WORD PTR [ebx-0x4]
6401d3bf:	cdq    
6401d3c0:	jmp    0x6401d3d3
6401d3c2:	test   BYTE PTR [ebp-0x14],0x40
6401d3c6:	mov    eax,DWORD PTR [ebx-0x4]
6401d3c9:	je     0x6401d3ce
6401d3cb:	cdq    
6401d3cc:	jmp    0x6401d3d0
6401d3ce:	xor    edx,edx
6401d3d0:	mov    DWORD PTR [ebp-0x24],ebx
6401d3d3:	test   BYTE PTR [ebp-0x14],0x40
6401d3d7:	je     0x6401d3f1
6401d3d9:	test   edx,edx
6401d3db:	jg     0x6401d3f1
6401d3dd:	jl     0x6401d3e3
6401d3df:	test   eax,eax
6401d3e1:	jae    0x6401d3f1
6401d3e3:	neg    eax
6401d3e5:	adc    edx,0x0
6401d3e8:	neg    edx
6401d3ea:	or     DWORD PTR [ebp-0x14],0x100
6401d3f1:	test   WORD PTR [ebp-0x14],0x9000
6401d3f7:	mov    ebx,edx
6401d3f9:	mov    edi,eax
6401d3fb:	jne    0x6401d3ff
6401d3fd:	xor    ebx,ebx
6401d3ff:	cmp    DWORD PTR [ebp-0x18],0x0
6401d403:	jge    0x6401d40e
6401d405:	mov    DWORD PTR [ebp-0x18],0x1
6401d40c:	jmp    0x6401d41f
6401d40e:	and    DWORD PTR [ebp-0x14],0xfffffff7
6401d412:	mov    eax,0x200
6401d417:	cmp    DWORD PTR [ebp-0x18],eax
6401d41a:	jle    0x6401d41f
6401d41c:	mov    DWORD PTR [ebp-0x18],eax
6401d41f:	mov    eax,edi
6401d421:	or     eax,ebx
6401d423:	jne    0x6401d428
6401d425:	and    DWORD PTR [ebp-0x30],eax
6401d428:	lea    esi,[ebp+0x1ef]
6401d42e:	mov    eax,DWORD PTR [ebp-0x18]
6401d431:	dec    DWORD PTR [ebp-0x18]
6401d434:	test   eax,eax
6401d436:	jg     0x6401d43e
6401d438:	mov    eax,edi
6401d43a:	or     eax,ebx
6401d43c:	je     0x6401d462
6401d43e:	mov    eax,DWORD PTR [ebp-0x28]
6401d441:	cdq    
6401d442:	push   edx
6401d443:	push   eax
6401d444:	push   ebx
6401d445:	push   edi
6401d446:	call   0x64019a70
6401d44b:	add    ecx,0x30
6401d44e:	cmp    ecx,0x39
6401d451:	mov    DWORD PTR [ebp-0x7c],ebx
6401d454:	mov    edi,eax
6401d456:	mov    ebx,edx
6401d458:	jle    0x6401d45d
6401d45a:	add    ecx,DWORD PTR [ebp-0x60]
6401d45d:	mov    BYTE PTR [esi],cl
6401d45f:	dec    esi
6401d460:	jmp    0x6401d42e
6401d462:	lea    eax,[ebp+0x1ef]
6401d468:	sub    eax,esi
6401d46a:	inc    esi
6401d46b:	test   WORD PTR [ebp-0x14],0x200
6401d471:	mov    DWORD PTR [ebp-0x20],eax
6401d474:	mov    DWORD PTR [ebp-0x1c],esi
6401d477:	je     0x6401d4bd
6401d479:	test   eax,eax
6401d47b:	je     0x6401d484
6401d47d:	mov    ecx,esi
6401d47f:	cmp    BYTE PTR [ecx],0x30
6401d482:	je     0x6401d4bd
6401d484:	dec    DWORD PTR [ebp-0x1c]
6401d487:	mov    ecx,DWORD PTR [ebp-0x1c]
6401d48a:	mov    BYTE PTR [ecx],0x30
6401d48d:	inc    eax
6401d48e:	jmp    0x6401d4ba
6401d490:	test   ebx,ebx
6401d492:	jne    0x6401d49c
6401d494:	mov    eax,ds:0x64052df4
6401d499:	mov    DWORD PTR [ebp-0x1c],eax
6401d49c:	mov    eax,DWORD PTR [ebp-0x1c]
6401d49f:	mov    DWORD PTR [ebp-0x34],0x1
6401d4a6:	jmp    0x6401d4b1
6401d4a8:	dec    edi
6401d4a9:	cmp    WORD PTR [eax],0x0
6401d4ad:	je     0x6401d4b5
6401d4af:	add    eax,esi
6401d4b1:	test   edi,edi
6401d4b3:	jne    0x6401d4a8
6401d4b5:	sub    eax,DWORD PTR [ebp-0x1c]
6401d4b8:	sar    eax,1
6401d4ba:	mov    DWORD PTR [ebp-0x20],eax
6401d4bd:	cmp    DWORD PTR [ebp-0x5c],0x0
6401d4c1:	jne    0x6401d5c6
6401d4c7:	mov    eax,DWORD PTR [ebp-0x14]
6401d4ca:	test   al,0x40
6401d4cc:	je     0x6401d4f9
6401d4ce:	test   ax,0x100
6401d4d2:	je     0x6401d4dc
6401d4d4:	mov    WORD PTR [ebp-0x3c],0x2d
6401d4da:	jmp    0x6401d4f2
6401d4dc:	test   al,0x1
6401d4de:	je     0x6401d4e8
6401d4e0:	mov    WORD PTR [ebp-0x3c],0x2b
6401d4e6:	jmp    0x6401d4f2
6401d4e8:	test   al,0x2
6401d4ea:	je     0x6401d4f9
6401d4ec:	mov    WORD PTR [ebp-0x3c],0x20
6401d4f2:	mov    DWORD PTR [ebp-0x30],0x1
6401d4f9:	mov    ebx,DWORD PTR [ebp-0x38]
6401d4fc:	mov    esi,DWORD PTR [ebp-0x20]
6401d4ff:	sub    ebx,esi
6401d501:	sub    ebx,DWORD PTR [ebp-0x30]
6401d504:	test   BYTE PTR [ebp-0x14],0xc
6401d508:	jne    0x6401d51b
6401d50a:	push   DWORD PTR [ebp-0x48]
6401d50d:	lea    eax,[ebp-0x2c]
6401d510:	push   ebx
6401d511:	push   0x20
6401d513:	call   0x6401cd08
6401d518:	add    esp,0xc
6401d51b:	push   DWORD PTR [ebp-0x30]
6401d51e:	mov    edi,DWORD PTR [ebp-0x48]
6401d521:	lea    eax,[ebp-0x2c]
6401d524:	lea    ecx,[ebp-0x3c]
6401d527:	call   0x6401c3a9
6401d52c:	test   BYTE PTR [ebp-0x14],0x8
6401d530:	pop    ecx
6401d531:	je     0x6401d548
6401d533:	test   BYTE PTR [ebp-0x14],0x4
6401d537:	jne    0x6401d548
6401d539:	push   edi
6401d53a:	push   ebx
6401d53b:	push   0x30
6401d53d:	lea    eax,[ebp-0x2c]
6401d540:	call   0x6401cd08
6401d545:	add    esp,0xc
6401d548:	cmp    DWORD PTR [ebp-0x34],0x0
6401d54c:	jne    0x6401d59c
6401d54e:	test   esi,esi
6401d550:	jle    0x6401d59c
6401d552:	mov    edi,DWORD PTR [ebp-0x1c]
6401d555:	mov    DWORD PTR [ebp-0x28],esi
6401d558:	dec    DWORD PTR [ebp-0x28]
6401d55b:	lea    eax,[ebp-0x58]
6401d55e:	push   eax
6401d55f:	mov    eax,DWORD PTR [ebp-0x58]
6401d562:	push   DWORD PTR [eax+0xac]
6401d568:	lea    eax,[ebp-0x70]
6401d56b:	push   edi
6401d56c:	push   eax
6401d56d:	call   0x6401ee13
6401d572:	add    esp,0x10
6401d575:	test   eax,eax
6401d577:	mov    DWORD PTR [ebp-0x7c],eax
6401d57a:	jle    0x6401d596
6401d57c:	push   DWORD PTR [ebp-0x70]
6401d57f:	mov    eax,DWORD PTR [ebp-0x48]
6401d582:	lea    esi,[ebp-0x2c]
6401d585:	call   0x6401c384
6401d58a:	add    edi,DWORD PTR [ebp-0x7c]
6401d58d:	cmp    DWORD PTR [ebp-0x28],0x0
6401d591:	pop    ecx
6401d592:	jg     0x6401d558
6401d594:	jmp    0x6401d5a9
6401d596:	or     DWORD PTR [ebp-0x2c],0xffffffff
6401d59a:	jmp    0x6401d5a9
6401d59c:	mov    ecx,DWORD PTR [ebp-0x1c]
6401d59f:	push   esi
6401d5a0:	lea    eax,[ebp-0x2c]
6401d5a3:	call   0x6401c3a9
6401d5a8:	pop    ecx
6401d5a9:	cmp    DWORD PTR [ebp-0x2c],0x0
6401d5ad:	jl     0x6401d5c6
6401d5af:	test   BYTE PTR [ebp-0x14],0x4
6401d5b3:	je     0x6401d5c6
6401d5b5:	push   DWORD PTR [ebp-0x48]
6401d5b8:	lea    eax,[ebp-0x2c]
6401d5bb:	push   ebx
6401d5bc:	push   0x20
6401d5be:	call   0x6401cd08
6401d5c3:	add    esp,0xc
6401d5c6:	cmp    DWORD PTR [ebp-0x64],0x0
6401d5ca:	je     0x6401d5d9
6401d5cc:	push   DWORD PTR [ebp-0x64]
6401d5cf:	call   0x640147cf
6401d5d4:	and    DWORD PTR [ebp-0x64],0x0
6401d5d8:	pop    ecx
6401d5d9:	mov    edi,DWORD PTR [ebp-0x6c]
6401d5dc:	mov    ebx,DWORD PTR [ebp-0x24]
6401d5df:	movzx  eax,WORD PTR [edi]
6401d5e2:	test   ax,ax
6401d5e5:	mov    DWORD PTR [ebp-0x28],eax
6401d5e8:	je     0x6401d5f1
6401d5ea:	mov    ecx,eax
6401d5ec:	jmp    0x6401cdee
6401d5f1:	cmp    DWORD PTR [ebp-0x40],0x0
6401d5f5:	je     0x6401d601
6401d5f7:	cmp    DWORD PTR [ebp-0x40],0x7
6401d5fb:	jne    0x6401cd8c
6401d601:	cmp    BYTE PTR [ebp-0x4c],0x0
6401d605:	je     0x6401d60e
6401d607:	mov    eax,DWORD PTR [ebp-0x50]
6401d60a:	and    DWORD PTR [eax+0x70],0xfffffffd
6401d60e:	mov    eax,DWORD PTR [ebp-0x2c]
6401d611:	mov    ecx,DWORD PTR [ebp+0x3f0]
6401d617:	pop    edi
6401d618:	pop    esi
6401d619:	xor    ecx,ebp
6401d61b:	pop    ebx
6401d61c:	call   0x64013d18
6401d621:	add    ebp,0x3f4
6401d627:	leave  
6401d628:	ret    
6401d629:	icebp  
6401d62a:	iret   
6401d62b:	add    DWORD PTR [esi+eax*2-0x32],esp
6401d62f:	add    DWORD PTR [ebx+eiz*2-0x32],esp
6401d633:	add    DWORD PTR [edi+ebp*4-0x32],esp
6401d637:	add    DWORD PTR [ecx+ebp*8-0x32],esp
6401d63b:	add    DWORD PTR [edx+esi*8-0x32],esp
6401d63f:	add    DWORD PTR [ecx+ebp*1-0x31],esp
6401d643:	add    DWORD PTR [edx+ecx*1-0x30],esp
6401d647:	add    DWORD PTR [ebp+edx*2-0x75],esp
6401d64b:	in     al,dx
6401d64c:	sub    esp,0x30
6401d64f:	push   ebx
6401d650:	push   esi
6401d651:	push   DWORD PTR [ebp+0x8]
6401d654:	lea    ecx,[ebp-0x30]
6401d657:	call   0x64014335
6401d65c:	mov    eax,DWORD PTR [ebp+0x10]
6401d65f:	mov    ebx,DWORD PTR [ebp+0xc]
6401d662:	xor    esi,esi
6401d664:	cmp    eax,esi
6401d666:	je     0x6401d66a
6401d668:	mov    DWORD PTR [eax],ebx
6401d66a:	cmp    ebx,esi
6401d66c:	jne    0x6401d69c
6401d66e:	call   0x640166d3
6401d673:	push   esi
6401d674:	push   esi
6401d675:	push   esi
6401d676:	push   esi
6401d677:	push   esi
6401d678:	mov    DWORD PTR [eax],0x16
6401d67e:	call   0x64013e62
6401d683:	add    esp,0x14
6401d686:	cmp    BYTE PTR [ebp-0x24],0x0
6401d68a:	je     0x6401d693
6401d68c:	mov    eax,DWORD PTR [ebp-0x28]
6401d68f:	and    DWORD PTR [eax+0x70],0xfffffffd
6401d693:	xor    eax,eax
6401d695:	xor    edx,edx
6401d697:	jmp    0x6401d8f5
6401d69c:	cmp    DWORD PTR [ebp+0x14],esi
6401d69f:	je     0x6401d6ad
6401d6a1:	cmp    DWORD PTR [ebp+0x14],0x2
6401d6a5:	jl     0x6401d66e
6401d6a7:	cmp    DWORD PTR [ebp+0x14],0x24
6401d6ab:	jg     0x6401d66e
6401d6ad:	push   edi
6401d6ae:	mov    DWORD PTR [ebp-0x8],esi
6401d6b1:	mov    DWORD PTR [ebp-0x4],esi
6401d6b4:	movzx  esi,WORD PTR [ebx]
6401d6b7:	lea    edi,[ebx+0x2]
6401d6ba:	jmp    0x6401d6c1
6401d6bc:	movzx  esi,WORD PTR [edi]
6401d6bf:	inc    edi
6401d6c0:	inc    edi
6401d6c1:	lea    eax,[ebp-0x30]
6401d6c4:	push   eax
6401d6c5:	push   0x8
6401d6c7:	push   esi
6401d6c8:	call   0x6401c283
6401d6cd:	add    esp,0xc
6401d6d0:	test   eax,eax
6401d6d2:	jne    0x6401d6bc
6401d6d4:	cmp    si,0x2d
6401d6d8:	jne    0x6401d6e0
6401d6da:	or     DWORD PTR [ebp+0x18],0x2
6401d6de:	jmp    0x6401d6e6
6401d6e0:	cmp    si,0x2b
6401d6e4:	jne    0x6401d6eb
6401d6e6:	movzx  esi,WORD PTR [edi]
6401d6e9:	inc    edi
6401d6ea:	inc    edi
6401d6eb:	mov    eax,DWORD PTR [ebp+0x14]
6401d6ee:	test   eax,eax
6401d6f0:	jl     0x6401d8da
6401d6f6:	cmp    eax,0x1
6401d6f9:	je     0x6401d8da
6401d6ff:	cmp    eax,0x24
6401d702:	jg     0x6401d8da
6401d708:	test   eax,eax
6401d70a:	push   0x10
6401d70c:	pop    ebx
6401d70d:	jne    0x6401d73e
6401d70f:	push   esi
6401d710:	call   0x64020d0c
6401d715:	test   eax,eax
6401d717:	pop    ecx
6401d718:	je     0x6401d723
6401d71a:	mov    DWORD PTR [ebp+0x14],0xa
6401d721:	jmp    0x6401d764
6401d723:	movzx  eax,WORD PTR [edi]
6401d726:	cmp    ax,0x78
6401d72a:	je     0x6401d73b
6401d72c:	cmp    ax,0x58
6401d730:	je     0x6401d73b
6401d732:	mov    DWORD PTR [ebp+0x14],0x8
6401d739:	jmp    0x6401d764
6401d73b:	mov    DWORD PTR [ebp+0x14],ebx
6401d73e:	cmp    DWORD PTR [ebp+0x14],ebx
6401d741:	jne    0x6401d764
6401d743:	push   esi
6401d744:	call   0x64020d0c
6401d749:	test   eax,eax
6401d74b:	pop    ecx
6401d74c:	jne    0x6401d764
6401d74e:	movzx  eax,WORD PTR [edi]
6401d751:	cmp    ax,0x78
6401d755:	je     0x6401d75d
6401d757:	cmp    ax,0x58
6401d75b:	jne    0x6401d764
6401d75d:	inc    edi
6401d75e:	inc    edi
6401d75f:	movzx  esi,WORD PTR [edi]
6401d762:	inc    edi
6401d763:	inc    edi
6401d764:	mov    eax,DWORD PTR [ebp+0x14]
6401d767:	cdq    
6401d768:	push   edx
6401d769:	push   eax
6401d76a:	push   0xffffffff
6401d76c:	push   0xffffffff
6401d76e:	mov    DWORD PTR [ebp-0x20],eax
6401d771:	mov    DWORD PTR [ebp-0x1c],edx
6401d774:	call   0x64019a70
6401d779:	mov    DWORD PTR [ebp-0x18],ecx
6401d77c:	mov    DWORD PTR [ebp-0x14],ebx
6401d77f:	mov    DWORD PTR [ebp-0x10],eax
6401d782:	mov    DWORD PTR [ebp-0xc],edx
6401d785:	push   esi
6401d786:	call   0x64020d0c
6401d78b:	mov    ebx,eax
6401d78d:	cmp    ebx,0xffffffff
6401d790:	pop    ecx
6401d791:	jne    0x6401d7ba
6401d793:	cmp    si,0x41
6401d797:	jb     0x6401d79f
6401d799:	cmp    si,0x5a
6401d79d:	jbe    0x6401d7a8
6401d79f:	lea    eax,[esi-0x61]
6401d7a2:	cmp    ax,0x19
6401d7a6:	ja     0x6401d7fa
6401d7a8:	lea    eax,[esi-0x61]
6401d7ab:	cmp    ax,0x19
6401d7af:	movzx  eax,si
6401d7b2:	ja     0x6401d7b7
6401d7b4:	sub    eax,0x20
6401d7b7:	lea    ebx,[eax-0x37]
6401d7ba:	cmp    ebx,DWORD PTR [ebp+0x14]
6401d7bd:	jae    0x6401d7fa
6401d7bf:	mov    ecx,DWORD PTR [ebp-0x4]
6401d7c2:	or     DWORD PTR [ebp+0x18],0x8
6401d7c6:	cmp    ecx,DWORD PTR [ebp-0xc]
6401d7c9:	jb     0x6401d818
6401d7cb:	ja     0x6401d7d5
6401d7cd:	mov    eax,DWORD PTR [ebp-0x8]
6401d7d0:	cmp    eax,DWORD PTR [ebp-0x10]
6401d7d3:	jb     0x6401d818
6401d7d5:	mov    eax,DWORD PTR [ebp-0x10]
6401d7d8:	cmp    DWORD PTR [ebp-0x8],eax
6401d7db:	jne    0x6401d7f0
6401d7dd:	cmp    ecx,DWORD PTR [ebp-0xc]
6401d7e0:	jne    0x6401d7f0
6401d7e2:	xor    eax,eax
6401d7e4:	cmp    eax,DWORD PTR [ebp-0x14]
6401d7e7:	jb     0x6401d818
6401d7e9:	ja     0x6401d7f0
6401d7eb:	cmp    ebx,DWORD PTR [ebp-0x18]
6401d7ee:	jbe    0x6401d818
6401d7f0:	or     DWORD PTR [ebp+0x18],0x4
6401d7f4:	cmp    DWORD PTR [ebp+0x10],0x0
6401d7f8:	jne    0x6401d833
6401d7fa:	mov    eax,DWORD PTR [ebp+0x18]
6401d7fd:	dec    edi
6401d7fe:	dec    edi
6401d7ff:	test   al,0x8
6401d801:	jne    0x6401d83d
6401d803:	xor    eax,eax
6401d805:	cmp    DWORD PTR [ebp+0x10],eax
6401d808:	je     0x6401d80d
6401d80a:	mov    edi,DWORD PTR [ebp+0xc]
6401d80d:	mov    DWORD PTR [ebp-0x8],eax
6401d810:	mov    DWORD PTR [ebp-0x4],eax
6401d813:	jmp    0x6401d8a3
6401d818:	push   ecx
6401d819:	push   DWORD PTR [ebp-0x8]
6401d81c:	push   DWORD PTR [ebp-0x1c]
6401d81f:	push   DWORD PTR [ebp-0x20]
6401d822:	call   0x64015ad0
6401d827:	xor    ecx,ecx
6401d829:	add    eax,ebx
6401d82b:	adc    edx,ecx
6401d82d:	mov    DWORD PTR [ebp-0x8],eax
6401d830:	mov    DWORD PTR [ebp-0x4],edx
6401d833:	movzx  esi,WORD PTR [edi]
6401d836:	inc    edi
6401d837:	inc    edi
6401d838:	jmp    0x6401d785
6401d83d:	test   al,0x4
6401d83f:	mov    esi,0x7fffffff
6401d844:	mov    ebx,0x80000000
6401d849:	jne    0x6401d872
6401d84b:	test   al,0x1
6401d84d:	jne    0x6401d8a3
6401d84f:	and    eax,0x2
6401d852:	je     0x6401d861
6401d854:	cmp    DWORD PTR [ebp-0x4],ebx
6401d857:	ja     0x6401d872
6401d859:	jb     0x6401d861
6401d85b:	cmp    DWORD PTR [ebp-0x8],0x0
6401d85f:	ja     0x6401d872
6401d861:	test   eax,eax
6401d863:	jne    0x6401d8a3
6401d865:	cmp    DWORD PTR [ebp-0x4],esi
6401d868:	jb     0x6401d8a3
6401d86a:	ja     0x6401d872
6401d86c:	cmp    DWORD PTR [ebp-0x8],0xffffffff
6401d870:	jbe    0x6401d8a3
6401d872:	call   0x640166d3
6401d877:	test   BYTE PTR [ebp+0x18],0x1
6401d87b:	mov    DWORD PTR [eax],0x22
6401d881:	je     0x6401d88d
6401d883:	or     DWORD PTR [ebp-0x8],0xffffffff
6401d887:	or     DWORD PTR [ebp-0x4],0xffffffff
6401d88b:	jmp    0x6401d8a3
6401d88d:	test   BYTE PTR [ebp+0x18],0x2
6401d891:	je     0x6401d89c
6401d893:	and    DWORD PTR [ebp-0x8],0x0
6401d897:	mov    DWORD PTR [ebp-0x4],ebx
6401d89a:	jmp    0x6401d8a3
6401d89c:	or     DWORD PTR [ebp-0x8],0xffffffff
6401d8a0:	mov    DWORD PTR [ebp-0x4],esi
6401d8a3:	mov    eax,DWORD PTR [ebp+0x10]
6401d8a6:	test   eax,eax
6401d8a8:	je     0x6401d8ac
6401d8aa:	mov    DWORD PTR [eax],edi
6401d8ac:	test   BYTE PTR [ebp+0x18],0x2
6401d8b0:	je     0x6401d8c5
6401d8b2:	mov    eax,DWORD PTR [ebp-0x8]
6401d8b5:	mov    ecx,DWORD PTR [ebp-0x4]
6401d8b8:	neg    eax
6401d8ba:	adc    ecx,0x0
6401d8bd:	neg    ecx
6401d8bf:	mov    DWORD PTR [ebp-0x8],eax
6401d8c2:	mov    DWORD PTR [ebp-0x4],ecx
6401d8c5:	cmp    BYTE PTR [ebp-0x24],0x0
6401d8c9:	je     0x6401d8d2
6401d8cb:	mov    eax,DWORD PTR [ebp-0x28]
6401d8ce:	and    DWORD PTR [eax+0x70],0xfffffffd
6401d8d2:	mov    eax,DWORD PTR [ebp-0x8]
6401d8d5:	mov    edx,DWORD PTR [ebp-0x4]
6401d8d8:	jmp    0x6401d8f4
6401d8da:	mov    eax,DWORD PTR [ebp+0x10]
6401d8dd:	test   eax,eax
6401d8df:	je     0x6401d8e3
6401d8e1:	mov    DWORD PTR [eax],ebx
6401d8e3:	cmp    BYTE PTR [ebp-0x24],0x0
6401d8e7:	je     0x6401d8f0
6401d8e9:	mov    eax,DWORD PTR [ebp-0x28]
6401d8ec:	and    DWORD PTR [eax+0x70],0xfffffffd
6401d8f0:	xor    eax,eax
6401d8f2:	xor    edx,edx
6401d8f4:	pop    edi
6401d8f5:	pop    esi
6401d8f6:	pop    ebx
6401d8f7:	leave  
6401d8f8:	ret    
6401d8f9:	push   ebp
6401d8fa:	mov    ebp,esp
6401d8fc:	xor    eax,eax
6401d8fe:	cmp    DWORD PTR ds:0x64053a28,eax
6401d904:	push   eax
6401d905:	push   DWORD PTR [ebp+0x10]
6401d908:	push   DWORD PTR [ebp+0xc]
6401d90b:	push   DWORD PTR [ebp+0x8]
6401d90e:	jne    0x6401d917
6401d910:	push   0x64052b68
6401d915:	jmp    0x6401d918
6401d917:	push   eax
6401d918:	call   0x6401d649
6401d91d:	add    esp,0x14
6401d920:	pop    ebp
6401d921:	ret    
6401d922:	mov    eax,DWORD PTR [esp+0x4]
6401d926:	mov    ds:0x640543a0,eax
6401d92b:	ret    
6401d92c:	push   ebp
6401d92d:	mov    ebp,esp
6401d92f:	sub    esp,0x10
6401d932:	push   DWORD PTR [ebp+0x8]
6401d935:	lea    ecx,[ebp-0x10]
6401d938:	call   0x64014335
6401d93d:	movzx  eax,BYTE PTR [ebp+0xc]
6401d941:	mov    ecx,DWORD PTR [ebp-0xc]
6401d944:	mov    dl,BYTE PTR [ebp+0x14]
6401d947:	test   BYTE PTR [ecx+eax*1+0x1d],dl
6401d94b:	jne    0x6401d96b
6401d94d:	cmp    DWORD PTR [ebp+0x10],0x0
6401d951:	je     0x6401d965
6401d953:	mov    ecx,DWORD PTR [ebp-0x10]
6401d956:	mov    ecx,DWORD PTR [ecx+0xc8]
6401d95c:	movzx  eax,WORD PTR [ecx+eax*2]
6401d960:	and    eax,DWORD PTR [ebp+0x10]
6401d963:	jmp    0x6401d967
6401d965:	xor    eax,eax
6401d967:	test   eax,eax
6401d969:	je     0x6401d96e
6401d96b:	xor    eax,eax
6401d96d:	inc    eax
6401d96e:	cmp    BYTE PTR [ebp-0x4],0x0
6401d972:	je     0x6401d97b
6401d974:	mov    ecx,DWORD PTR [ebp-0x8]
6401d977:	and    DWORD PTR [ecx+0x70],0xfffffffd
6401d97b:	leave  
6401d97c:	ret    
6401d97d:	push   0x4
6401d97f:	push   0x0
6401d981:	push   DWORD PTR [esp+0xc]
6401d985:	push   0x0
6401d987:	call   0x6401d92c
6401d98c:	add    esp,0x10
6401d98f:	ret    
6401d990:	push   ebp
6401d991:	mov    ebp,esp
6401d993:	sub    esp,0x4
6401d996:	mov    DWORD PTR [ebp-0x4],edi
6401d999:	mov    edi,DWORD PTR [ebp+0x8]
6401d99c:	mov    ecx,DWORD PTR [ebp+0xc]
6401d99f:	shr    ecx,0x7
6401d9a2:	pxor   xmm0,xmm0
6401d9a6:	jmp    0x6401d9b0
6401d9a8:	lea    esp,[esp+0x0]
6401d9af:	nop
6401d9b0:	movdqa XMMWORD PTR [edi],xmm0
6401d9b4:	movdqa XMMWORD PTR [edi+0x10],xmm0
6401d9b9:	movdqa XMMWORD PTR [edi+0x20],xmm0
6401d9be:	movdqa XMMWORD PTR [edi+0x30],xmm0
6401d9c3:	movdqa XMMWORD PTR [edi+0x40],xmm0
6401d9c8:	movdqa XMMWORD PTR [edi+0x50],xmm0
6401d9cd:	movdqa XMMWORD PTR [edi+0x60],xmm0
6401d9d2:	movdqa XMMWORD PTR [edi+0x70],xmm0
6401d9d7:	lea    edi,[edi+0x80]
6401d9dd:	dec    ecx
6401d9de:	jne    0x6401d9b0
6401d9e0:	mov    edi,DWORD PTR [ebp-0x4]
6401d9e3:	mov    esp,ebp
6401d9e5:	pop    ebp
6401d9e6:	ret    
6401d9e7:	push   ebp
6401d9e8:	mov    ebp,esp
6401d9ea:	sub    esp,0x10
6401d9ed:	mov    DWORD PTR [ebp-0x4],edi
6401d9f0:	mov    eax,DWORD PTR [ebp+0x8]
6401d9f3:	cdq    
6401d9f4:	mov    edi,eax
6401d9f6:	xor    edi,edx
6401d9f8:	sub    edi,edx
6401d9fa:	and    edi,0xf
6401d9fd:	xor    edi,edx
6401d9ff:	sub    edi,edx
6401da01:	test   edi,edi
6401da03:	jne    0x6401da41
6401da05:	mov    ecx,DWORD PTR [ebp+0x10]
6401da08:	mov    edx,ecx
6401da0a:	and    edx,0x7f
6401da0d:	mov    DWORD PTR [ebp-0xc],edx
6401da10:	cmp    ecx,edx
6401da12:	je     0x6401da26
6401da14:	sub    ecx,edx
6401da16:	push   ecx
6401da17:	push   eax
6401da18:	call   0x6401d990
6401da1d:	add    esp,0x8
6401da20:	mov    eax,DWORD PTR [ebp+0x8]
6401da23:	mov    edx,DWORD PTR [ebp-0xc]
6401da26:	test   edx,edx
6401da28:	je     0x6401da6f
6401da2a:	add    eax,DWORD PTR [ebp+0x10]
6401da2d:	sub    eax,edx
6401da2f:	mov    DWORD PTR [ebp-0x8],eax
6401da32:	xor    eax,eax
6401da34:	mov    edi,DWORD PTR [ebp-0x8]
6401da37:	mov    ecx,DWORD PTR [ebp-0xc]
6401da3a:	rep stos BYTE PTR es:[edi],al
6401da3c:	mov    eax,DWORD PTR [ebp+0x8]
6401da3f:	jmp    0x6401da6f
6401da41:	neg    edi
6401da43:	add    edi,0x10
6401da46:	mov    DWORD PTR [ebp-0x10],edi
6401da49:	xor    eax,eax
6401da4b:	mov    edi,DWORD PTR [ebp+0x8]
6401da4e:	mov    ecx,DWORD PTR [ebp-0x10]
6401da51:	rep stos BYTE PTR es:[edi],al
6401da53:	mov    eax,DWORD PTR [ebp-0x10]
6401da56:	mov    ecx,DWORD PTR [ebp+0x8]
6401da59:	mov    edx,DWORD PTR [ebp+0x10]
6401da5c:	add    ecx,eax
6401da5e:	sub    edx,eax
6401da60:	push   edx
6401da61:	push   0x0
6401da63:	push   ecx
6401da64:	call   0x6401d9e7
6401da69:	add    esp,0xc
6401da6c:	mov    eax,DWORD PTR [ebp+0x8]
6401da6f:	mov    edi,DWORD PTR [ebp-0x4]
6401da72:	mov    esp,ebp
6401da74:	pop    ebp
6401da75:	ret    
6401da76:	and    DWORD PTR ds:0x64054694,0x0
6401da7d:	call   0x64021132
6401da82:	mov    ds:0x64054694,eax
6401da87:	xor    eax,eax
6401da89:	ret    
6401da8a:	push   ebp
6401da8b:	mov    ebp,esp
6401da8d:	sub    esp,0x8
6401da90:	mov    DWORD PTR [ebp-0x4],edi
6401da93:	mov    DWORD PTR [ebp-0x8],esi
6401da96:	mov    esi,DWORD PTR [ebp+0xc]
6401da99:	mov    edi,DWORD PTR [ebp+0x8]
6401da9c:	mov    ecx,DWORD PTR [ebp+0x10]
6401da9f:	shr    ecx,0x7
6401daa2:	jmp    0x6401daaa
6401daa4:	lea    ebx,[ebx+0x0]
6401daaa:	movdqa xmm0,XMMWORD PTR [esi]
6401daae:	movdqa xmm1,XMMWORD PTR [esi+0x10]
6401dab3:	movdqa xmm2,XMMWORD PTR [esi+0x20]
6401dab8:	movdqa xmm3,XMMWORD PTR [esi+0x30]
6401dabd:	movdqa XMMWORD PTR [edi],xmm0
6401dac1:	movdqa XMMWORD PTR [edi+0x10],xmm1
6401dac6:	movdqa XMMWORD PTR [edi+0x20],xmm2
6401dacb:	movdqa XMMWORD PTR [edi+0x30],xmm3
6401dad0:	movdqa xmm4,XMMWORD PTR [esi+0x40]
6401dad5:	movdqa xmm5,XMMWORD PTR [esi+0x50]
6401dada:	movdqa xmm6,XMMWORD PTR [esi+0x60]
6401dadf:	movdqa xmm7,XMMWORD PTR [esi+0x70]
6401dae4:	movdqa XMMWORD PTR [edi+0x40],xmm4
6401dae9:	movdqa XMMWORD PTR [edi+0x50],xmm5
6401daee:	movdqa XMMWORD PTR [edi+0x60],xmm6
6401daf3:	movdqa XMMWORD PTR [edi+0x70],xmm7
6401daf8:	lea    esi,[esi+0x80]
6401dafe:	lea    edi,[edi+0x80]
6401db04:	dec    ecx
6401db05:	jne    0x6401daaa
6401db07:	mov    esi,DWORD PTR [ebp-0x8]
6401db0a:	mov    edi,DWORD PTR [ebp-0x4]
6401db0d:	mov    esp,ebp
6401db0f:	pop    ebp
6401db10:	ret    
6401db11:	push   ebp
6401db12:	mov    ebp,esp
6401db14:	sub    esp,0x1c
6401db17:	mov    DWORD PTR [ebp-0xc],edi
6401db1a:	mov    DWORD PTR [ebp-0x8],esi
6401db1d:	mov    DWORD PTR [ebp-0x4],ebx
6401db20:	mov    ebx,DWORD PTR [ebp+0xc]
6401db23:	mov    eax,ebx
6401db25:	cdq    
6401db26:	mov    ecx,eax
6401db28:	mov    eax,DWORD PTR [ebp+0x8]
6401db2b:	xor    ecx,edx
6401db2d:	sub    ecx,edx
6401db2f:	and    ecx,0xf
6401db32:	xor    ecx,edx
6401db34:	sub    ecx,edx
6401db36:	cdq    
6401db37:	mov    edi,eax
6401db39:	xor    edi,edx
6401db3b:	sub    edi,edx
6401db3d:	and    edi,0xf
6401db40:	xor    edi,edx
6401db42:	sub    edi,edx
6401db44:	mov    edx,ecx
6401db46:	or     edx,edi
6401db48:	jne    0x6401db94
6401db4a:	mov    esi,DWORD PTR [ebp+0x10]
6401db4d:	mov    ecx,esi
6401db4f:	and    ecx,0x7f
6401db52:	mov    DWORD PTR [ebp-0x18],ecx
6401db55:	cmp    esi,ecx
6401db57:	je     0x6401db6c
6401db59:	sub    esi,ecx
6401db5b:	push   esi
6401db5c:	push   ebx
6401db5d:	push   eax
6401db5e:	call   0x6401da8a
6401db63:	add    esp,0xc
6401db66:	mov    eax,DWORD PTR [ebp+0x8]
6401db69:	mov    ecx,DWORD PTR [ebp-0x18]
6401db6c:	test   ecx,ecx
6401db6e:	je     0x6401dbe7
6401db70:	mov    ebx,DWORD PTR [ebp+0x10]
6401db73:	mov    edx,DWORD PTR [ebp+0xc]
6401db76:	add    edx,ebx
6401db78:	sub    edx,ecx
6401db7a:	mov    DWORD PTR [ebp-0x14],edx
6401db7d:	add    ebx,eax
6401db7f:	sub    ebx,ecx
6401db81:	mov    DWORD PTR [ebp-0x10],ebx
6401db84:	mov    esi,DWORD PTR [ebp-0x14]
6401db87:	mov    edi,DWORD PTR [ebp-0x10]
6401db8a:	mov    ecx,DWORD PTR [ebp-0x18]
6401db8d:	rep movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
6401db8f:	mov    eax,DWORD PTR [ebp+0x8]
6401db92:	jmp    0x6401dbe7
6401db94:	cmp    ecx,edi
6401db96:	jne    0x6401dbcd
6401db98:	neg    ecx
6401db9a:	add    ecx,0x10
6401db9d:	mov    DWORD PTR [ebp-0x1c],ecx
6401dba0:	mov    esi,DWORD PTR [ebp+0xc]
6401dba3:	mov    edi,DWORD PTR [ebp+0x8]
6401dba6:	mov    ecx,DWORD PTR [ebp-0x1c]
6401dba9:	rep movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
6401dbab:	mov    ecx,DWORD PTR [ebp+0x8]
6401dbae:	add    ecx,DWORD PTR [ebp-0x1c]
6401dbb1:	mov    edx,DWORD PTR [ebp+0xc]
6401dbb4:	add    edx,DWORD PTR [ebp-0x1c]
6401dbb7:	mov    eax,DWORD PTR [ebp+0x10]
6401dbba:	sub    eax,DWORD PTR [ebp-0x1c]
6401dbbd:	push   eax
6401dbbe:	push   edx
6401dbbf:	push   ecx
6401dbc0:	call   0x6401db11
6401dbc5:	add    esp,0xc
6401dbc8:	mov    eax,DWORD PTR [ebp+0x8]
6401dbcb:	jmp    0x6401dbe7
6401dbcd:	mov    esi,DWORD PTR [ebp+0xc]
6401dbd0:	mov    edi,DWORD PTR [ebp+0x8]
6401dbd3:	mov    ecx,DWORD PTR [ebp+0x10]
6401dbd6:	mov    edx,ecx
6401dbd8:	shr    ecx,0x2
6401dbdb:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
6401dbdd:	mov    ecx,edx
6401dbdf:	and    ecx,0x3
6401dbe2:	rep movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
6401dbe4:	mov    eax,DWORD PTR [ebp+0x8]
6401dbe7:	mov    ebx,DWORD PTR [ebp-0x4]
6401dbea:	mov    esi,DWORD PTR [ebp-0x8]
6401dbed:	mov    edi,DWORD PTR [ebp-0xc]
6401dbf0:	mov    esp,ebp
6401dbf2:	pop    ebp
6401dbf3:	ret    
6401dbf4:	int3   
6401dbf5:	int3   
6401dbf6:	int3   
6401dbf7:	int3   
6401dbf8:	int3   
6401dbf9:	int3   
6401dbfa:	int3   
6401dbfb:	int3   
6401dbfc:	int3   
6401dbfd:	int3   
6401dbfe:	int3   
6401dbff:	int3   
6401dc00:	mov    ecx,DWORD PTR [esp+0x4]
6401dc04:	cmp    WORD PTR [ecx],0x5a4d
6401dc09:	je     0x6401dc0e
6401dc0b:	xor    eax,eax
6401dc0d:	ret    
6401dc0e:	mov    eax,DWORD PTR [ecx+0x3c]
6401dc11:	add    eax,ecx
6401dc13:	cmp    DWORD PTR [eax],0x4550
6401dc19:	jne    0x6401dc0b
6401dc1b:	xor    ecx,ecx
6401dc1d:	cmp    WORD PTR [eax+0x18],0x10b
6401dc23:	sete   cl
6401dc26:	mov    eax,ecx
6401dc28:	ret    
6401dc29:	int3   
6401dc2a:	int3   
6401dc2b:	int3   
6401dc2c:	int3   
6401dc2d:	int3   
6401dc2e:	int3   
6401dc2f:	int3   
6401dc30:	mov    eax,DWORD PTR [esp+0x4]
6401dc34:	mov    ecx,DWORD PTR [eax+0x3c]
6401dc37:	add    ecx,eax
6401dc39:	movzx  eax,WORD PTR [ecx+0x14]
6401dc3d:	push   ebx
6401dc3e:	push   esi
6401dc3f:	movzx  esi,WORD PTR [ecx+0x6]
6401dc43:	xor    edx,edx
6401dc45:	test   esi,esi
6401dc47:	push   edi
6401dc48:	lea    eax,[eax+ecx*1+0x18]
6401dc4c:	jbe    0x6401dc6c
6401dc4e:	mov    edi,DWORD PTR [esp+0x14]
6401dc52:	mov    ecx,DWORD PTR [eax+0xc]
6401dc55:	cmp    edi,ecx
6401dc57:	jb     0x6401dc62
6401dc59:	mov    ebx,DWORD PTR [eax+0x8]
6401dc5c:	add    ebx,ecx
6401dc5e:	cmp    edi,ebx
6401dc60:	jb     0x6401dc6e
6401dc62:	add    edx,0x1
6401dc65:	add    eax,0x28
6401dc68:	cmp    edx,esi
6401dc6a:	jb     0x6401dc52
6401dc6c:	xor    eax,eax
6401dc6e:	pop    edi
6401dc6f:	pop    esi
6401dc70:	pop    ebx
6401dc71:	ret    
6401dc72:	int3   
6401dc73:	int3   
6401dc74:	int3   
6401dc75:	int3   
6401dc76:	int3   
6401dc77:	int3   
6401dc78:	int3   
6401dc79:	int3   
6401dc7a:	int3   
6401dc7b:	int3   
6401dc7c:	int3   
6401dc7d:	int3   
6401dc7e:	int3   
6401dc7f:	int3   
6401dc80:	push   ebp
6401dc81:	mov    ebp,esp
6401dc83:	push   0xfffffffe
6401dc85:	push   0x64043f78
6401dc8a:	push   0x64015930
6401dc8f:	mov    eax,fs:0x0
6401dc95:	push   eax
6401dc96:	sub    esp,0x8
6401dc99:	push   ebx
6401dc9a:	push   esi
6401dc9b:	push   edi
6401dc9c:	mov    eax,ds:0x640521ac
6401dca1:	xor    DWORD PTR [ebp-0x8],eax
6401dca4:	xor    eax,ebp
6401dca6:	push   eax
6401dca7:	lea    eax,[ebp-0x10]
6401dcaa:	mov    fs:0x0,eax
6401dcb0:	mov    DWORD PTR [ebp-0x18],esp
6401dcb3:	mov    DWORD PTR [ebp-0x4],0x0
6401dcba:	push   0x64000000
6401dcbf:	call   0x6401dc00
6401dcc4:	add    esp,0x4
6401dcc7:	test   eax,eax
6401dcc9:	je     0x6401dd20
6401dccb:	mov    eax,DWORD PTR [ebp+0x8]
6401dcce:	sub    eax,0x64000000
6401dcd3:	push   eax
6401dcd4:	push   0x64000000
6401dcd9:	call   0x6401dc30
6401dcde:	add    esp,0x8
6401dce1:	test   eax,eax
6401dce3:	je     0x6401dd20
6401dce5:	mov    eax,DWORD PTR [eax+0x24]
6401dce8:	shr    eax,0x1f
6401dceb:	not    eax
6401dced:	and    eax,0x1
6401dcf0:	mov    DWORD PTR [ebp-0x4],0xfffffffe
6401dcf7:	mov    ecx,DWORD PTR [ebp-0x10]
6401dcfa:	mov    DWORD PTR fs:0x0,ecx
6401dd01:	pop    ecx
6401dd02:	pop    edi
6401dd03:	pop    esi
6401dd04:	pop    ebx
6401dd05:	mov    esp,ebp
6401dd07:	pop    ebp
6401dd08:	ret    
6401dd09:	mov    eax,DWORD PTR [ebp-0x14]
6401dd0c:	mov    ecx,DWORD PTR [eax]
6401dd0e:	mov    eax,DWORD PTR [ecx]
6401dd10:	xor    edx,edx
6401dd12:	cmp    eax,0xc0000005
6401dd17:	sete   dl
6401dd1a:	mov    eax,edx
6401dd1c:	ret    
6401dd1d:	mov    esp,DWORD PTR [ebp-0x18]
6401dd20:	mov    DWORD PTR [ebp-0x4],0xfffffffe
6401dd27:	xor    eax,eax
6401dd29:	mov    ecx,DWORD PTR [ebp-0x10]
6401dd2c:	mov    DWORD PTR fs:0x0,ecx
6401dd33:	pop    ecx
6401dd34:	pop    edi
6401dd35:	pop    esi
6401dd36:	pop    ebx
6401dd37:	mov    esp,ebp
6401dd39:	pop    ebp
6401dd3a:	ret    
6401dd3b:	push   esi
6401dd3c:	mov    esi,DWORD PTR [esp+0x8]
6401dd40:	test   esi,esi
6401dd42:	je     0x6401dec9
6401dd48:	push   DWORD PTR [esi+0x4]
6401dd4b:	call   0x640147cf
6401dd50:	push   DWORD PTR [esi+0x8]
6401dd53:	call   0x640147cf
6401dd58:	push   DWORD PTR [esi+0xc]
6401dd5b:	call   0x640147cf
6401dd60:	push   DWORD PTR [esi+0x10]
6401dd63:	call   0x640147cf
6401dd68:	push   DWORD PTR [esi+0x14]
6401dd6b:	call   0x640147cf
6401dd70:	push   DWORD PTR [esi+0x18]
6401dd73:	call   0x640147cf
6401dd78:	push   DWORD PTR [esi]
6401dd7a:	call   0x640147cf
6401dd7f:	push   DWORD PTR [esi+0x20]
6401dd82:	call   0x640147cf
6401dd87:	push   DWORD PTR [esi+0x24]
6401dd8a:	call   0x640147cf
6401dd8f:	push   DWORD PTR [esi+0x28]
6401dd92:	call   0x640147cf
6401dd97:	push   DWORD PTR [esi+0x2c]
6401dd9a:	call   0x640147cf
6401dd9f:	push   DWORD PTR [esi+0x30]
6401dda2:	call   0x640147cf
6401dda7:	push   DWORD PTR [esi+0x34]
6401ddaa:	call   0x640147cf
6401ddaf:	push   DWORD PTR [esi+0x1c]
6401ddb2:	call   0x640147cf
6401ddb7:	push   DWORD PTR [esi+0x38]
6401ddba:	call   0x640147cf
6401ddbf:	push   DWORD PTR [esi+0x3c]
6401ddc2:	call   0x640147cf
6401ddc7:	add    esp,0x40
6401ddca:	push   DWORD PTR [esi+0x40]
6401ddcd:	call   0x640147cf
6401ddd2:	push   DWORD PTR [esi+0x44]
6401ddd5:	call   0x640147cf
6401ddda:	push   DWORD PTR [esi+0x48]
6401dddd:	call   0x640147cf
6401dde2:	push   DWORD PTR [esi+0x4c]
6401dde5:	call   0x640147cf
6401ddea:	push   DWORD PTR [esi+0x50]
6401dded:	call   0x640147cf
6401ddf2:	push   DWORD PTR [esi+0x54]
6401ddf5:	call   0x640147cf
6401ddfa:	push   DWORD PTR [esi+0x58]
6401ddfd:	call   0x640147cf
6401de02:	push   DWORD PTR [esi+0x5c]
6401de05:	call   0x640147cf
6401de0a:	push   DWORD PTR [esi+0x60]
6401de0d:	call   0x640147cf
6401de12:	push   DWORD PTR [esi+0x64]
6401de15:	call   0x640147cf
6401de1a:	push   DWORD PTR [esi+0x68]
6401de1d:	call   0x640147cf
6401de22:	push   DWORD PTR [esi+0x6c]
6401de25:	call   0x640147cf
6401de2a:	push   DWORD PTR [esi+0x70]
6401de2d:	call   0x640147cf
6401de32:	push   DWORD PTR [esi+0x74]
6401de35:	call   0x640147cf
6401de3a:	push   DWORD PTR [esi+0x78]
6401de3d:	call   0x640147cf
6401de42:	push   DWORD PTR [esi+0x7c]
6401de45:	call   0x640147cf
6401de4a:	add    esp,0x40
6401de4d:	push   DWORD PTR [esi+0x80]
6401de53:	call   0x640147cf
6401de58:	push   DWORD PTR [esi+0x84]
6401de5e:	call   0x640147cf
6401de63:	push   DWORD PTR [esi+0x88]
6401de69:	call   0x640147cf
6401de6e:	push   DWORD PTR [esi+0x8c]
6401de74:	call   0x640147cf
6401de79:	push   DWORD PTR [esi+0x90]
6401de7f:	call   0x640147cf
6401de84:	push   DWORD PTR [esi+0x94]
6401de8a:	call   0x640147cf
6401de8f:	push   DWORD PTR [esi+0x98]
6401de95:	call   0x640147cf
6401de9a:	push   DWORD PTR [esi+0x9c]
6401dea0:	call   0x640147cf
6401dea5:	push   DWORD PTR [esi+0xa0]
6401deab:	call   0x640147cf
6401deb0:	push   DWORD PTR [esi+0xa4]
6401deb6:	call   0x640147cf
6401debb:	push   DWORD PTR [esi+0xa8]
6401dec1:	call   0x640147cf
6401dec6:	add    esp,0x2c
6401dec9:	pop    esi
6401deca:	ret    
6401decb:	push   esi
6401decc:	mov    esi,DWORD PTR [esp+0x8]
6401ded0:	test   esi,esi
6401ded2:	je     0x6401df09
6401ded4:	mov    eax,DWORD PTR [esi]
6401ded6:	cmp    eax,DWORD PTR ds:0x640530a0
6401dedc:	je     0x6401dee5
6401dede:	push   eax
6401dedf:	call   0x640147cf
6401dee4:	pop    ecx
6401dee5:	mov    eax,DWORD PTR [esi+0x4]
6401dee8:	cmp    eax,DWORD PTR ds:0x640530a4
6401deee:	je     0x6401def7
6401def0:	push   eax
6401def1:	call   0x640147cf
6401def6:	pop    ecx
6401def7:	mov    esi,DWORD PTR [esi+0x8]
6401defa:	cmp    esi,DWORD PTR ds:0x640530a8
6401df00:	je     0x6401df09
6401df02:	push   esi
6401df03:	call   0x640147cf
6401df08:	pop    ecx
6401df09:	pop    esi
6401df0a:	ret    
6401df0b:	push   esi
6401df0c:	mov    esi,DWORD PTR [esp+0x8]
6401df10:	test   esi,esi
6401df12:	je     0x6401df92
6401df14:	mov    eax,DWORD PTR [esi+0xc]
6401df17:	cmp    eax,DWORD PTR ds:0x640530ac
6401df1d:	je     0x6401df26
6401df1f:	push   eax
6401df20:	call   0x640147cf
6401df25:	pop    ecx
6401df26:	mov    eax,DWORD PTR [esi+0x10]
6401df29:	cmp    eax,DWORD PTR ds:0x640530b0
6401df2f:	je     0x6401df38
6401df31:	push   eax
6401df32:	call   0x640147cf
6401df37:	pop    ecx
6401df38:	mov    eax,DWORD PTR [esi+0x14]
6401df3b:	cmp    eax,DWORD PTR ds:0x640530b4
6401df41:	je     0x6401df4a
6401df43:	push   eax
6401df44:	call   0x640147cf
6401df49:	pop    ecx
6401df4a:	mov    eax,DWORD PTR [esi+0x18]
6401df4d:	cmp    eax,DWORD PTR ds:0x640530b8
6401df53:	je     0x6401df5c
6401df55:	push   eax
6401df56:	call   0x640147cf
6401df5b:	pop    ecx
6401df5c:	mov    eax,DWORD PTR [esi+0x1c]
6401df5f:	cmp    eax,DWORD PTR ds:0x640530bc
6401df65:	je     0x6401df6e
6401df67:	push   eax
6401df68:	call   0x640147cf
6401df6d:	pop    ecx
6401df6e:	mov    eax,DWORD PTR [esi+0x20]
6401df71:	cmp    eax,DWORD PTR ds:0x640530c0
6401df77:	je     0x6401df80
6401df79:	push   eax
6401df7a:	call   0x640147cf
6401df7f:	pop    ecx
6401df80:	mov    esi,DWORD PTR [esi+0x24]
6401df83:	cmp    esi,DWORD PTR ds:0x640530c4
6401df89:	je     0x6401df92
6401df8b:	push   esi
6401df8c:	call   0x640147cf
6401df91:	pop    ecx
6401df92:	pop    esi
6401df93:	ret    
6401df94:	mov    eax,DWORD PTR [esp+0x4]
6401df98:	push   ebx
6401df99:	xor    ebx,ebx
6401df9b:	cmp    eax,ebx
6401df9d:	push   esi
6401df9e:	push   edi
6401df9f:	je     0x6401dfa9
6401dfa1:	mov    edi,DWORD PTR [esp+0x14]
6401dfa5:	cmp    edi,ebx
6401dfa7:	ja     0x6401dfc4
6401dfa9:	call   0x640166d3
6401dfae:	push   0x16
6401dfb0:	pop    esi
6401dfb1:	mov    DWORD PTR [eax],esi
6401dfb3:	push   ebx
6401dfb4:	push   ebx
6401dfb5:	push   ebx
6401dfb6:	push   ebx
6401dfb7:	push   ebx
6401dfb8:	call   0x64013e62
6401dfbd:	add    esp,0x14
6401dfc0:	mov    eax,esi
6401dfc2:	jmp    0x6401e001
6401dfc4:	mov    esi,DWORD PTR [esp+0x18]
6401dfc8:	cmp    esi,ebx
6401dfca:	jne    0x6401dfd0
6401dfcc:	mov    BYTE PTR [eax],bl
6401dfce:	jmp    0x6401dfa9
6401dfd0:	mov    edx,eax
6401dfd2:	cmp    BYTE PTR [edx],bl
6401dfd4:	je     0x6401dfda
6401dfd6:	inc    edx
6401dfd7:	dec    edi
6401dfd8:	jne    0x6401dfd2
6401dfda:	cmp    edi,ebx
6401dfdc:	je     0x6401dfcc
6401dfde:	mov    cl,BYTE PTR [esi]
6401dfe0:	mov    BYTE PTR [edx],cl
6401dfe2:	inc    edx
6401dfe3:	inc    esi
6401dfe4:	cmp    cl,bl
6401dfe6:	je     0x6401dfeb
6401dfe8:	dec    edi
6401dfe9:	jne    0x6401dfde
6401dfeb:	cmp    edi,ebx
6401dfed:	jne    0x6401dfff
6401dfef:	mov    BYTE PTR [eax],bl
6401dff1:	call   0x640166d3
6401dff6:	push   0x22
6401dff8:	pop    ecx
6401dff9:	mov    DWORD PTR [eax],ecx
6401dffb:	mov    esi,ecx
6401dffd:	jmp    0x6401dfb3
6401dfff:	xor    eax,eax
6401e001:	pop    edi
6401e002:	pop    esi
6401e003:	pop    ebx
6401e004:	ret    
6401e005:	int3   
6401e006:	int3   
6401e007:	int3   
6401e008:	int3   
6401e009:	int3   
6401e00a:	int3   
6401e00b:	int3   
6401e00c:	int3   
6401e00d:	int3   
6401e00e:	int3   
6401e00f:	int3   
6401e010:	push   ebp
6401e011:	mov    ebp,esp
6401e013:	push   esi
6401e014:	xor    eax,eax
6401e016:	push   eax
6401e017:	push   eax
6401e018:	push   eax
6401e019:	push   eax
6401e01a:	push   eax
6401e01b:	push   eax
6401e01c:	push   eax
6401e01d:	push   eax
6401e01e:	mov    edx,DWORD PTR [ebp+0xc]
6401e021:	lea    ecx,[ecx+0x0]
6401e024:	mov    al,BYTE PTR [edx]
6401e026:	or     al,al
6401e028:	je     0x6401e033
6401e02a:	add    edx,0x1
6401e02d:	bts    DWORD PTR [esp],eax
6401e031:	jmp    0x6401e024
6401e033:	mov    esi,DWORD PTR [ebp+0x8]
6401e036:	or     ecx,0xffffffff
6401e039:	lea    ecx,[ecx+0x0]
6401e03c:	add    ecx,0x1
6401e03f:	mov    al,BYTE PTR [esi]
6401e041:	or     al,al
6401e043:	je     0x6401e04e
6401e045:	add    esi,0x1
6401e048:	bt     DWORD PTR [esp],eax
6401e04c:	jae    0x6401e03c
6401e04e:	mov    eax,ecx
6401e050:	add    esp,0x20
6401e053:	pop    esi
6401e054:	leave  
6401e055:	ret    
6401e056:	push   ebp
6401e057:	mov    ebp,esp
6401e059:	push   ebx
6401e05a:	push   esi
6401e05b:	mov    esi,DWORD PTR [ebp+0x8]
6401e05e:	xor    ebx,ebx
6401e060:	cmp    DWORD PTR [ebp+0x14],ebx
6401e063:	push   edi
6401e064:	jne    0x6401e076
6401e066:	cmp    esi,ebx
6401e068:	jne    0x6401e07a
6401e06a:	cmp    DWORD PTR [ebp+0xc],ebx
6401e06d:	jne    0x6401e081
6401e06f:	xor    eax,eax
6401e071:	pop    edi
6401e072:	pop    esi
6401e073:	pop    ebx
6401e074:	pop    ebp
6401e075:	ret    
6401e076:	cmp    esi,ebx
6401e078:	je     0x6401e081
6401e07a:	mov    edi,DWORD PTR [ebp+0xc]
6401e07d:	cmp    edi,ebx
6401e07f:	ja     0x6401e09c
6401e081:	call   0x640166d3
6401e086:	push   0x16
6401e088:	pop    esi
6401e089:	mov    DWORD PTR [eax],esi
6401e08b:	push   ebx
6401e08c:	push   ebx
6401e08d:	push   ebx
6401e08e:	push   ebx
6401e08f:	push   ebx
6401e090:	call   0x64013e62
6401e095:	add    esp,0x14
6401e098:	mov    eax,esi
6401e09a:	jmp    0x6401e071
6401e09c:	cmp    DWORD PTR [ebp+0x14],ebx
6401e09f:	jne    0x6401e0a5
6401e0a1:	mov    BYTE PTR [esi],bl
6401e0a3:	jmp    0x6401e06f
6401e0a5:	mov    edx,DWORD PTR [ebp+0x10]
6401e0a8:	cmp    edx,ebx
6401e0aa:	jne    0x6401e0b0
6401e0ac:	mov    BYTE PTR [esi],bl
6401e0ae:	jmp    0x6401e081
6401e0b0:	cmp    DWORD PTR [ebp+0x14],0xffffffff
6401e0b4:	mov    eax,esi
6401e0b6:	jne    0x6401e0c7
6401e0b8:	mov    cl,BYTE PTR [edx]
6401e0ba:	mov    BYTE PTR [eax],cl
6401e0bc:	inc    eax
6401e0bd:	inc    edx
6401e0be:	cmp    cl,bl
6401e0c0:	je     0x6401e0e0
6401e0c2:	dec    edi
6401e0c3:	jne    0x6401e0b8
6401e0c5:	jmp    0x6401e0e0
6401e0c7:	mov    cl,BYTE PTR [edx]
6401e0c9:	mov    BYTE PTR [eax],cl
6401e0cb:	inc    eax
6401e0cc:	inc    edx
6401e0cd:	cmp    cl,bl
6401e0cf:	je     0x6401e0d9
6401e0d1:	dec    edi
6401e0d2:	je     0x6401e0d9
6401e0d4:	dec    DWORD PTR [ebp+0x14]
6401e0d7:	jne    0x6401e0c7
6401e0d9:	cmp    DWORD PTR [ebp+0x14],ebx
6401e0dc:	jne    0x6401e0e0
6401e0de:	mov    BYTE PTR [eax],bl
6401e0e0:	cmp    edi,ebx
6401e0e2:	jne    0x6401e06f
6401e0e4:	cmp    DWORD PTR [ebp+0x14],0xffffffff
6401e0e8:	jne    0x6401e0f9
6401e0ea:	mov    eax,DWORD PTR [ebp+0xc]
6401e0ed:	push   0x50
6401e0ef:	mov    BYTE PTR [esi+eax*1-0x1],bl
6401e0f3:	pop    eax
6401e0f4:	jmp    0x6401e071
6401e0f9:	mov    BYTE PTR [esi],bl
6401e0fb:	call   0x640166d3
6401e100:	push   0x22
6401e102:	pop    ecx
6401e103:	mov    DWORD PTR [eax],ecx
6401e105:	mov    esi,ecx
6401e107:	jmp    0x6401e08b
6401e109:	push   ebp
6401e10a:	mov    ebp,esp
6401e10c:	push   ecx
6401e10d:	push   ecx
6401e10e:	mov    eax,ds:0x640521ac
6401e113:	xor    eax,ebp
6401e115:	mov    DWORD PTR [ebp-0x4],eax
6401e118:	mov    eax,ds:0x640543a8
6401e11d:	push   ebx
6401e11e:	push   esi
6401e11f:	xor    ebx,ebx
6401e121:	cmp    eax,ebx
6401e123:	push   edi
6401e124:	mov    edi,ecx
6401e126:	jne    0x6401e162
6401e128:	lea    eax,[ebp-0x8]
6401e12b:	push   eax
6401e12c:	xor    esi,esi
6401e12e:	inc    esi
6401e12f:	push   esi
6401e130:	push   0x64041de4
6401e135:	push   esi
6401e136:	call   DWORD PTR ds:0x6402c138
6401e13c:	test   eax,eax
6401e13e:	je     0x6401e148
6401e140:	mov    DWORD PTR ds:0x640543a8,esi
6401e146:	jmp    0x6401e17c
6401e148:	call   DWORD PTR ds:0x6402c06c
6401e14e:	cmp    eax,0x78
6401e151:	jne    0x6401e15d
6401e153:	push   0x2
6401e155:	pop    eax
6401e156:	mov    ds:0x640543a8,eax
6401e15b:	jmp    0x6401e162
6401e15d:	mov    eax,ds:0x640543a8
6401e162:	cmp    eax,0x2
6401e165:	je     0x6401e23a
6401e16b:	cmp    eax,ebx
6401e16d:	je     0x6401e23a
6401e173:	cmp    eax,0x1
6401e176:	jne    0x6401e264
6401e17c:	cmp    DWORD PTR [ebp+0x18],ebx
6401e17f:	mov    DWORD PTR [ebp-0x8],ebx
6401e182:	jne    0x6401e18c
6401e184:	mov    eax,DWORD PTR [edi]
6401e186:	mov    eax,DWORD PTR [eax+0x4]
6401e189:	mov    DWORD PTR [ebp+0x18],eax
6401e18c:	mov    esi,DWORD PTR ds:0x6402c02c
6401e192:	xor    eax,eax
6401e194:	cmp    DWORD PTR [ebp+0x20],ebx
6401e197:	push   ebx
6401e198:	push   ebx
6401e199:	push   DWORD PTR [ebp+0x10]
6401e19c:	setne  al
6401e19f:	push   DWORD PTR [ebp+0xc]
6401e1a2:	lea    eax,[eax*8+0x1]
6401e1a9:	push   eax
6401e1aa:	push   DWORD PTR [ebp+0x18]
6401e1ad:	call   esi
6401e1af:	mov    edi,eax
6401e1b1:	cmp    edi,ebx
6401e1b3:	je     0x6401e264
6401e1b9:	jle    0x6401e1f7
6401e1bb:	cmp    edi,0x7ffffff0
6401e1c1:	ja     0x6401e1f7
6401e1c3:	lea    eax,[edi+edi*1+0x8]
6401e1c7:	cmp    eax,0x400
6401e1cc:	ja     0x6401e1e1
6401e1ce:	call   0x64013d30
6401e1d3:	mov    eax,esp
6401e1d5:	cmp    eax,ebx
6401e1d7:	je     0x6401e1f5
6401e1d9:	mov    DWORD PTR [eax],0xcccc
6401e1df:	jmp    0x6401e1f2
6401e1e1:	push   eax
6401e1e2:	call   0x640148ce
6401e1e7:	cmp    eax,ebx
6401e1e9:	pop    ecx
6401e1ea:	je     0x6401e1f5
6401e1ec:	mov    DWORD PTR [eax],0xdddd
6401e1f2:	add    eax,0x8
6401e1f5:	mov    ebx,eax
6401e1f7:	test   ebx,ebx
6401e1f9:	je     0x6401e264
6401e1fb:	lea    eax,[edi+edi*1]
6401e1fe:	push   eax
6401e1ff:	push   0x0
6401e201:	push   ebx
6401e202:	call   0x64015170
6401e207:	add    esp,0xc
6401e20a:	push   edi
6401e20b:	push   ebx
6401e20c:	push   DWORD PTR [ebp+0x10]
6401e20f:	push   DWORD PTR [ebp+0xc]
6401e212:	push   0x1
6401e214:	push   DWORD PTR [ebp+0x18]
6401e217:	call   esi
6401e219:	test   eax,eax
6401e21b:	je     0x6401e22e
6401e21d:	push   DWORD PTR [ebp+0x14]
6401e220:	push   eax
6401e221:	push   ebx
6401e222:	push   DWORD PTR [ebp+0x8]
6401e225:	call   DWORD PTR ds:0x6402c138
6401e22b:	mov    DWORD PTR [ebp-0x8],eax
6401e22e:	push   ebx
6401e22f:	call   0x6401431a
6401e234:	mov    eax,DWORD PTR [ebp-0x8]
6401e237:	pop    ecx
6401e238:	jmp    0x6401e2af
6401e23a:	xor    esi,esi
6401e23c:	cmp    DWORD PTR [ebp+0x1c],ebx
6401e23f:	jne    0x6401e249
6401e241:	mov    eax,DWORD PTR [edi]
6401e243:	mov    eax,DWORD PTR [eax+0x14]
6401e246:	mov    DWORD PTR [ebp+0x1c],eax
6401e249:	cmp    DWORD PTR [ebp+0x18],ebx
6401e24c:	jne    0x6401e256
6401e24e:	mov    eax,DWORD PTR [edi]
6401e250:	mov    eax,DWORD PTR [eax+0x4]
6401e253:	mov    DWORD PTR [ebp+0x18],eax
6401e256:	push   DWORD PTR [ebp+0x1c]
6401e259:	call   0x6401e350
6401e25e:	cmp    eax,0xffffffff
6401e261:	pop    ecx
6401e262:	jne    0x6401e268
6401e264:	xor    eax,eax
6401e266:	jmp    0x6401e2af
6401e268:	cmp    eax,DWORD PTR [ebp+0x18]
6401e26b:	je     0x6401e28b
6401e26d:	push   ebx
6401e26e:	push   ebx
6401e26f:	lea    ecx,[ebp+0x10]
6401e272:	push   ecx
6401e273:	push   DWORD PTR [ebp+0xc]
6401e276:	push   eax
6401e277:	push   DWORD PTR [ebp+0x18]
6401e27a:	call   0x6401e397
6401e27f:	mov    esi,eax
6401e281:	add    esp,0x18
6401e284:	cmp    esi,ebx
6401e286:	je     0x6401e264
6401e288:	mov    DWORD PTR [ebp+0xc],esi
6401e28b:	push   DWORD PTR [ebp+0x14]
6401e28e:	push   DWORD PTR [ebp+0x10]
6401e291:	push   DWORD PTR [ebp+0xc]
6401e294:	push   DWORD PTR [ebp+0x8]
6401e297:	push   DWORD PTR [ebp+0x1c]
6401e29a:	call   DWORD PTR ds:0x6402c134
6401e2a0:	cmp    esi,ebx
6401e2a2:	mov    edi,eax
6401e2a4:	je     0x6401e2ad
6401e2a6:	push   esi
6401e2a7:	call   0x640147cf
6401e2ac:	pop    ecx
6401e2ad:	mov    eax,edi
6401e2af:	lea    esp,[ebp-0x14]
6401e2b2:	pop    edi
6401e2b3:	pop    esi
6401e2b4:	pop    ebx
6401e2b5:	mov    ecx,DWORD PTR [ebp-0x4]
6401e2b8:	xor    ecx,ebp
6401e2ba:	call   0x64013d18
6401e2bf:	leave  
6401e2c0:	ret    
6401e2c1:	push   ebp
6401e2c2:	mov    ebp,esp
6401e2c4:	sub    esp,0x10
6401e2c7:	push   DWORD PTR [ebp+0x8]
6401e2ca:	lea    ecx,[ebp-0x10]
6401e2cd:	call   0x64014335
6401e2d2:	push   DWORD PTR [ebp+0x24]
6401e2d5:	lea    ecx,[ebp-0x10]
6401e2d8:	push   DWORD PTR [ebp+0x20]
6401e2db:	push   DWORD PTR [ebp+0x1c]
6401e2de:	push   DWORD PTR [ebp+0x18]
6401e2e1:	push   DWORD PTR [ebp+0x14]
6401e2e4:	push   DWORD PTR [ebp+0x10]
6401e2e7:	push   DWORD PTR [ebp+0xc]
6401e2ea:	call   0x6401e109
6401e2ef:	add    esp,0x1c
6401e2f2:	cmp    BYTE PTR [ebp-0x4],0x0
6401e2f6:	je     0x6401e2ff
6401e2f8:	mov    ecx,DWORD PTR [ebp-0x8]
6401e2fb:	and    DWORD PTR [ecx+0x70],0xfffffffd
6401e2ff:	leave  
6401e300:	ret    
6401e301:	int3   
6401e302:	int3   
6401e303:	int3   
6401e304:	int3   
6401e305:	int3   
6401e306:	int3   
6401e307:	int3   
6401e308:	int3   
6401e309:	int3   
6401e30a:	int3   
6401e30b:	int3   
6401e30c:	int3   
6401e30d:	int3   
6401e30e:	int3   
6401e30f:	int3   
6401e310:	push   ebp
6401e311:	mov    ebp,esp
6401e313:	push   esi
6401e314:	xor    eax,eax
6401e316:	push   eax
6401e317:	push   eax
6401e318:	push   eax
6401e319:	push   eax
6401e31a:	push   eax
6401e31b:	push   eax
6401e31c:	push   eax
6401e31d:	push   eax
6401e31e:	mov    edx,DWORD PTR [ebp+0xc]
6401e321:	lea    ecx,[ecx+0x0]
6401e324:	mov    al,BYTE PTR [edx]
6401e326:	or     al,al
6401e328:	je     0x6401e333
6401e32a:	add    edx,0x1
6401e32d:	bts    DWORD PTR [esp],eax
6401e331:	jmp    0x6401e324
6401e333:	mov    esi,DWORD PTR [ebp+0x8]
6401e336:	mov    edi,edi
6401e338:	mov    al,BYTE PTR [esi]
6401e33a:	or     al,al
6401e33c:	je     0x6401e34a
6401e33e:	add    esi,0x1
6401e341:	bt     DWORD PTR [esp],eax
6401e345:	jae    0x6401e338
6401e347:	lea    eax,[esi-0x1]
6401e34a:	add    esp,0x20
6401e34d:	pop    esi
6401e34e:	leave  
6401e34f:	ret    
6401e350:	push   ebp
6401e351:	mov    ebp,esp
6401e353:	sub    esp,0xc
6401e356:	mov    eax,ds:0x640521ac
6401e35b:	xor    eax,ebp
6401e35d:	mov    DWORD PTR [ebp-0x4],eax
6401e360:	push   0x6
6401e362:	lea    eax,[ebp-0xc]
6401e365:	push   eax
6401e366:	push   0x1004
6401e36b:	push   DWORD PTR [ebp+0x8]
6401e36e:	mov    BYTE PTR [ebp-0x6],0x0
6401e372:	call   DWORD PTR ds:0x6402c180
6401e378:	test   eax,eax
6401e37a:	jne    0x6401e381
6401e37c:	or     eax,0xffffffff
6401e37f:	jmp    0x6401e38b
6401e381:	lea    eax,[ebp-0xc]
6401e384:	push   eax
6401e385:	call   0x6402119f
6401e38a:	pop    ecx
6401e38b:	mov    ecx,DWORD PTR [ebp-0x4]
6401e38e:	xor    ecx,ebp
6401e390:	call   0x64013d18
6401e395:	leave  
6401e396:	ret    
6401e397:	push   ebp
6401e398:	mov    ebp,esp
6401e39a:	sub    esp,0x34
6401e39d:	mov    eax,ds:0x640521ac
6401e3a2:	xor    eax,ebp
6401e3a4:	mov    DWORD PTR [ebp-0x4],eax
6401e3a7:	mov    eax,DWORD PTR [ebp+0x10]
6401e3aa:	mov    ecx,DWORD PTR [ebp+0x18]
6401e3ad:	mov    DWORD PTR [ebp-0x28],eax
6401e3b0:	mov    eax,DWORD PTR [ebp+0x14]
6401e3b3:	push   ebx
6401e3b4:	mov    DWORD PTR [ebp-0x30],eax
6401e3b7:	mov    eax,DWORD PTR [eax]
6401e3b9:	push   esi
6401e3ba:	mov    DWORD PTR [ebp-0x24],eax
6401e3bd:	mov    eax,DWORD PTR [ebp+0x8]
6401e3c0:	push   edi
6401e3c1:	xor    edi,edi
6401e3c3:	cmp    eax,DWORD PTR [ebp+0xc]
6401e3c6:	mov    DWORD PTR [ebp-0x34],ecx
6401e3c9:	mov    DWORD PTR [ebp-0x20],edi
6401e3cc:	mov    DWORD PTR [ebp-0x2c],edi
6401e3cf:	je     0x6401e534
6401e3d5:	mov    esi,DWORD PTR ds:0x6402c1cc
6401e3db:	lea    ecx,[ebp-0x18]
6401e3de:	push   ecx
6401e3df:	push   eax
6401e3e0:	call   esi
6401e3e2:	test   eax,eax
6401e3e4:	mov    ebx,DWORD PTR ds:0x6402c02c
6401e3ea:	je     0x6401e44a
6401e3ec:	cmp    DWORD PTR [ebp-0x18],0x1
6401e3f0:	jne    0x6401e44a
6401e3f2:	lea    eax,[ebp-0x18]
6401e3f5:	push   eax
6401e3f6:	push   DWORD PTR [ebp+0xc]
6401e3f9:	call   esi
6401e3fb:	test   eax,eax
6401e3fd:	je     0x6401e44a
6401e3ff:	cmp    DWORD PTR [ebp-0x18],0x1
6401e403:	jne    0x6401e44a
6401e405:	mov    esi,DWORD PTR [ebp-0x24]
6401e408:	cmp    esi,0xffffffff
6401e40b:	mov    DWORD PTR [ebp-0x2c],0x1
6401e412:	jne    0x6401e420
6401e414:	push   DWORD PTR [ebp-0x28]
6401e417:	call   0x64015b10
6401e41c:	mov    esi,eax
6401e41e:	pop    ecx
6401e41f:	inc    esi
6401e420:	cmp    esi,edi
6401e422:	jle    0x6401e47f
6401e424:	cmp    esi,0x7ffffff0
6401e42a:	ja     0x6401e47f
6401e42c:	lea    eax,[esi+esi*1+0x8]
6401e430:	cmp    eax,0x400
6401e435:	ja     0x6401e466
6401e437:	call   0x64013d30
6401e43c:	mov    eax,esp
6401e43e:	cmp    eax,edi
6401e440:	je     0x6401e47a
6401e442:	mov    DWORD PTR [eax],0xcccc
6401e448:	jmp    0x6401e477
6401e44a:	push   edi
6401e44b:	push   edi
6401e44c:	push   DWORD PTR [ebp-0x24]
6401e44f:	push   DWORD PTR [ebp-0x28]
6401e452:	push   0x1
6401e454:	push   DWORD PTR [ebp+0x8]
6401e457:	call   ebx
6401e459:	mov    esi,eax
6401e45b:	cmp    esi,edi
6401e45d:	jne    0x6401e422
6401e45f:	xor    eax,eax
6401e461:	jmp    0x6401e537
6401e466:	push   eax
6401e467:	call   0x640148ce
6401e46c:	cmp    eax,edi
6401e46e:	pop    ecx
6401e46f:	je     0x6401e47a
6401e471:	mov    DWORD PTR [eax],0xdddd
6401e477:	add    eax,0x8
6401e47a:	mov    DWORD PTR [ebp-0x1c],eax
6401e47d:	jmp    0x6401e482
6401e47f:	mov    DWORD PTR [ebp-0x1c],edi
6401e482:	cmp    DWORD PTR [ebp-0x1c],edi
6401e485:	je     0x6401e45f
6401e487:	lea    eax,[esi+esi*1]
6401e48a:	push   eax
6401e48b:	push   edi
6401e48c:	push   DWORD PTR [ebp-0x1c]
6401e48f:	call   0x64015170
6401e494:	add    esp,0xc
6401e497:	push   esi
6401e498:	push   DWORD PTR [ebp-0x1c]
6401e49b:	push   DWORD PTR [ebp-0x24]
6401e49e:	push   DWORD PTR [ebp-0x28]
6401e4a1:	push   0x1
6401e4a3:	push   DWORD PTR [ebp+0x8]
6401e4a6:	call   ebx
6401e4a8:	test   eax,eax
6401e4aa:	je     0x6401e52b
6401e4ac:	mov    ebx,DWORD PTR [ebp-0x34]
6401e4af:	cmp    ebx,edi
6401e4b1:	je     0x6401e4d0
6401e4b3:	push   edi
6401e4b4:	push   edi
6401e4b5:	push   DWORD PTR [ebp+0x1c]
6401e4b8:	push   ebx
6401e4b9:	push   esi
6401e4ba:	push   DWORD PTR [ebp-0x1c]
6401e4bd:	push   edi
6401e4be:	push   DWORD PTR [ebp+0xc]
6401e4c1:	call   DWORD PTR ds:0x6402c014
6401e4c7:	test   eax,eax
6401e4c9:	je     0x6401e52b
6401e4cb:	mov    DWORD PTR [ebp-0x20],ebx
6401e4ce:	jmp    0x6401e52b
6401e4d0:	cmp    DWORD PTR [ebp-0x2c],edi
6401e4d3:	mov    ebx,DWORD PTR ds:0x6402c014
6401e4d9:	jne    0x6401e4ef
6401e4db:	push   edi
6401e4dc:	push   edi
6401e4dd:	push   edi
6401e4de:	push   edi
6401e4df:	push   esi
6401e4e0:	push   DWORD PTR [ebp-0x1c]
6401e4e3:	push   edi
6401e4e4:	push   DWORD PTR [ebp+0xc]
6401e4e7:	call   ebx
6401e4e9:	mov    esi,eax
6401e4eb:	cmp    esi,edi
6401e4ed:	je     0x6401e52b
6401e4ef:	push   esi
6401e4f0:	push   0x1
6401e4f2:	call   0x6401632f
6401e4f7:	cmp    eax,edi
6401e4f9:	pop    ecx
6401e4fa:	pop    ecx
6401e4fb:	mov    DWORD PTR [ebp-0x20],eax
6401e4fe:	je     0x6401e52b
6401e500:	push   edi
6401e501:	push   edi
6401e502:	push   esi
6401e503:	push   eax
6401e504:	push   esi
6401e505:	push   DWORD PTR [ebp-0x1c]
6401e508:	push   edi
6401e509:	push   DWORD PTR [ebp+0xc]
6401e50c:	call   ebx
6401e50e:	cmp    eax,edi
6401e510:	jne    0x6401e520
6401e512:	push   DWORD PTR [ebp-0x20]
6401e515:	call   0x640147cf
6401e51a:	pop    ecx
6401e51b:	mov    DWORD PTR [ebp-0x20],edi
6401e51e:	jmp    0x6401e52b
6401e520:	cmp    DWORD PTR [ebp-0x24],0xffffffff
6401e524:	je     0x6401e52b
6401e526:	mov    ecx,DWORD PTR [ebp-0x30]
6401e529:	mov    DWORD PTR [ecx],eax
6401e52b:	push   DWORD PTR [ebp-0x1c]
6401e52e:	call   0x6401431a
6401e533:	pop    ecx
6401e534:	mov    eax,DWORD PTR [ebp-0x20]
6401e537:	lea    esp,[ebp-0x40]
6401e53a:	pop    edi
6401e53b:	pop    esi
6401e53c:	pop    ebx
6401e53d:	mov    ecx,DWORD PTR [ebp-0x4]
6401e540:	xor    ecx,ebp
6401e542:	call   0x64013d18
6401e547:	leave  
6401e548:	ret    
6401e549:	mov    eax,DWORD PTR [esp+0x4]
6401e54d:	mov    ds:0x640543ac,eax
6401e552:	mov    ds:0x640543b0,eax
6401e557:	mov    ds:0x640543b4,eax
6401e55c:	mov    ds:0x640543b8,eax
6401e561:	ret    
6401e562:	mov    eax,DWORD PTR [esp+0x4]
6401e566:	mov    ecx,DWORD PTR ds:0x64052554
6401e56c:	push   esi
6401e56d:	cmp    DWORD PTR [eax+0x4],edx
6401e570:	je     0x6401e582
6401e572:	mov    esi,ecx
6401e574:	imul   esi,esi,0xc
6401e577:	add    esi,DWORD PTR [esp+0x8]
6401e57b:	add    eax,0xc
6401e57e:	cmp    eax,esi
6401e580:	jb     0x6401e56d
6401e582:	imul   ecx,ecx,0xc
6401e585:	add    ecx,DWORD PTR [esp+0x8]
6401e589:	pop    esi
6401e58a:	cmp    eax,ecx
6401e58c:	jae    0x6401e593
6401e58e:	cmp    DWORD PTR [eax+0x4],edx
6401e591:	je     0x6401e595
6401e593:	xor    eax,eax
6401e595:	ret    
6401e596:	push   DWORD PTR ds:0x640543b4
6401e59c:	call   0x6401781e
6401e5a1:	pop    ecx
6401e5a2:	ret    
6401e5a3:	push   0x20
6401e5a5:	push   0x64043f98
6401e5aa:	call   0x640164d4
6401e5af:	xor    edi,edi
6401e5b1:	mov    DWORD PTR [ebp-0x1c],edi
6401e5b4:	mov    DWORD PTR [ebp-0x28],edi
6401e5b7:	mov    ebx,DWORD PTR [ebp+0x8]
6401e5ba:	cmp    ebx,0xb
6401e5bd:	jg     0x6401e60b
6401e5bf:	je     0x6401e5d6
6401e5c1:	mov    eax,ebx
6401e5c3:	push   0x2
6401e5c5:	pop    ecx
6401e5c6:	sub    eax,ecx
6401e5c8:	je     0x6401e5ec
6401e5ca:	sub    eax,ecx
6401e5cc:	je     0x6401e5d6
6401e5ce:	sub    eax,ecx
6401e5d0:	je     0x6401e636
6401e5d2:	sub    eax,ecx
6401e5d4:	jne    0x6401e61a
6401e5d6:	call   0x640179c3
6401e5db:	mov    edi,eax
6401e5dd:	mov    DWORD PTR [ebp-0x28],edi
6401e5e0:	test   edi,edi
6401e5e2:	jne    0x6401e5f8
6401e5e4:	or     eax,0xffffffff
6401e5e7:	jmp    0x6401e74d
6401e5ec:	mov    esi,0x640543ac
6401e5f1:	mov    eax,ds:0x640543ac
6401e5f6:	jmp    0x6401e658
6401e5f8:	push   DWORD PTR [edi+0x5c]
6401e5fb:	mov    edx,ebx
6401e5fd:	call   0x6401e562
6401e602:	mov    esi,eax
6401e604:	add    esi,0x8
6401e607:	mov    eax,DWORD PTR [esi]
6401e609:	jmp    0x6401e665
6401e60b:	mov    eax,ebx
6401e60d:	sub    eax,0xf
6401e610:	je     0x6401e64e
6401e612:	sub    eax,0x6
6401e615:	je     0x6401e642
6401e617:	dec    eax
6401e618:	je     0x6401e636
6401e61a:	call   0x640166d3
6401e61f:	mov    DWORD PTR [eax],0x16
6401e625:	xor    eax,eax
6401e627:	push   eax
6401e628:	push   eax
6401e629:	push   eax
6401e62a:	push   eax
6401e62b:	push   eax
6401e62c:	call   0x64013e62
6401e631:	add    esp,0x14
6401e634:	jmp    0x6401e5e4
6401e636:	mov    esi,0x640543b4
6401e63b:	mov    eax,ds:0x640543b4
6401e640:	jmp    0x6401e658
6401e642:	mov    esi,0x640543b0
6401e647:	mov    eax,ds:0x640543b0
6401e64c:	jmp    0x6401e658
6401e64e:	mov    esi,0x640543b8
6401e653:	mov    eax,ds:0x640543b8
6401e658:	mov    DWORD PTR [ebp-0x1c],0x1
6401e65f:	push   eax
6401e660:	call   0x6401781e
6401e665:	mov    DWORD PTR [ebp-0x20],eax
6401e668:	pop    ecx
6401e669:	xor    eax,eax
6401e66b:	cmp    DWORD PTR [ebp-0x20],0x1
6401e66f:	je     0x6401e74d
6401e675:	cmp    DWORD PTR [ebp-0x20],eax
6401e678:	jne    0x6401e681
6401e67a:	push   0x3
6401e67c:	call   0x640182b6
6401e681:	cmp    DWORD PTR [ebp-0x1c],eax
6401e684:	je     0x6401e68d
6401e686:	push   eax
6401e687:	call   0x6401b49a
6401e68c:	pop    ecx
6401e68d:	xor    eax,eax
6401e68f:	mov    DWORD PTR [ebp-0x4],eax
6401e692:	cmp    ebx,0x8
6401e695:	je     0x6401e6a1
6401e697:	cmp    ebx,0xb
6401e69a:	je     0x6401e6a1
6401e69c:	cmp    ebx,0x4
6401e69f:	jne    0x6401e6bc
6401e6a1:	mov    ecx,DWORD PTR [edi+0x60]
6401e6a4:	mov    DWORD PTR [ebp-0x2c],ecx
6401e6a7:	mov    DWORD PTR [edi+0x60],eax
6401e6aa:	cmp    ebx,0x8
6401e6ad:	jne    0x6401e6ef
6401e6af:	mov    ecx,DWORD PTR [edi+0x64]
6401e6b2:	mov    DWORD PTR [ebp-0x30],ecx
6401e6b5:	mov    DWORD PTR [edi+0x64],0x8c
6401e6bc:	cmp    ebx,0x8
6401e6bf:	jne    0x6401e6ef
6401e6c1:	mov    ecx,DWORD PTR ds:0x64052548
6401e6c7:	mov    DWORD PTR [ebp-0x24],ecx
6401e6ca:	mov    ecx,DWORD PTR ds:0x6405254c
6401e6d0:	mov    edx,DWORD PTR ds:0x64052548
6401e6d6:	add    ecx,edx
6401e6d8:	cmp    DWORD PTR [ebp-0x24],ecx
6401e6db:	jge    0x6401e6f6
6401e6dd:	mov    ecx,DWORD PTR [ebp-0x24]
6401e6e0:	imul   ecx,ecx,0xc
6401e6e3:	mov    edx,DWORD PTR [edi+0x5c]
6401e6e6:	mov    DWORD PTR [ecx+edx*1+0x8],eax
6401e6ea:	inc    DWORD PTR [ebp-0x24]
6401e6ed:	jmp    0x6401e6ca
6401e6ef:	call   0x64017815
6401e6f4:	mov    DWORD PTR [esi],eax
6401e6f6:	mov    DWORD PTR [ebp-0x4],0xfffffffe
6401e6fd:	call   0x6401e717
6401e702:	cmp    ebx,0x8
6401e705:	jne    0x6401e726
6401e707:	push   DWORD PTR [edi+0x64]
6401e70a:	push   ebx
6401e70b:	call   DWORD PTR [ebp-0x20]
6401e70e:	pop    ecx
6401e70f:	jmp    0x6401e72a
6401e711:	mov    ebx,DWORD PTR [ebp+0x8]
6401e714:	mov    edi,DWORD PTR [ebp-0x28]
6401e717:	cmp    DWORD PTR [ebp-0x1c],0x0
6401e71b:	je     0x6401e725
6401e71d:	push   0x0
6401e71f:	call   0x6401b3c2
6401e724:	pop    ecx
6401e725:	ret    
6401e726:	push   ebx
6401e727:	call   DWORD PTR [ebp-0x20]
6401e72a:	pop    ecx
6401e72b:	cmp    ebx,0x8
6401e72e:	je     0x6401e73a
6401e730:	cmp    ebx,0xb
6401e733:	je     0x6401e73a
6401e735:	cmp    ebx,0x4
6401e738:	jne    0x6401e74b
6401e73a:	mov    eax,DWORD PTR [ebp-0x2c]
6401e73d:	mov    DWORD PTR [edi+0x60],eax
6401e740:	cmp    ebx,0x8
6401e743:	jne    0x6401e74b
6401e745:	mov    eax,DWORD PTR [ebp-0x30]
6401e748:	mov    DWORD PTR [edi+0x64],eax
6401e74b:	xor    eax,eax
6401e74d:	call   0x64016519
6401e752:	ret    
6401e753:	xor    eax,eax
6401e755:	inc    eax
6401e756:	cmp    DWORD PTR [esp+0x4],0x0
6401e75b:	jne    0x6401e75f
6401e75d:	xor    eax,eax
6401e75f:	ret    
6401e760:	push   ebp
6401e761:	mov    ebp,esp
6401e763:	push   ebx
6401e764:	push   esi
6401e765:	push   edi
6401e766:	push   ebp
6401e767:	push   0x0
6401e769:	push   0x0
6401e76b:	push   0x6401e778
6401e770:	push   DWORD PTR [ebp+0x8]
6401e773:	call   0x64022e8c
6401e778:	pop    ebp
6401e779:	pop    edi
6401e77a:	pop    esi
6401e77b:	pop    ebx
6401e77c:	mov    esp,ebp
6401e77e:	pop    ebp
6401e77f:	ret    
6401e780:	mov    ecx,DWORD PTR [esp+0x4]
6401e784:	test   DWORD PTR [ecx+0x4],0x6
6401e78b:	mov    eax,0x1
6401e790:	je     0x6401e7c4
6401e792:	mov    eax,DWORD PTR [esp+0x14]
6401e796:	mov    ecx,DWORD PTR [eax-0x4]
6401e799:	xor    ecx,eax
6401e79b:	call   0x64013d18
6401e7a0:	push   ebp
6401e7a1:	mov    ebp,DWORD PTR [eax+0x10]
6401e7a4:	mov    edx,DWORD PTR [eax+0x28]
6401e7a7:	push   edx
6401e7a8:	mov    edx,DWORD PTR [eax+0x24]
6401e7ab:	push   edx
6401e7ac:	call   0x6401e7c5
6401e7b1:	add    esp,0x8
6401e7b4:	pop    ebp
6401e7b5:	mov    eax,DWORD PTR [esp+0x8]
6401e7b9:	mov    edx,DWORD PTR [esp+0x10]
6401e7bd:	mov    DWORD PTR [edx],eax
6401e7bf:	mov    eax,0x3
6401e7c4:	ret    
6401e7c5:	push   ebx
6401e7c6:	push   esi
6401e7c7:	push   edi
6401e7c8:	mov    eax,DWORD PTR [esp+0x10]
6401e7cc:	push   ebp
6401e7cd:	push   eax
6401e7ce:	push   0xfffffffe
6401e7d0:	push   0x6401e780
6401e7d5:	push   DWORD PTR fs:0x0
6401e7dc:	mov    eax,ds:0x640521ac
6401e7e1:	xor    eax,esp
6401e7e3:	push   eax
6401e7e4:	lea    eax,[esp+0x4]
6401e7e8:	mov    fs:0x0,eax
6401e7ee:	mov    eax,DWORD PTR [esp+0x28]
6401e7f2:	mov    ebx,DWORD PTR [eax+0x8]
6401e7f5:	mov    esi,DWORD PTR [eax+0xc]
6401e7f8:	cmp    esi,0xffffffff
6401e7fb:	je     0x6401e837
6401e7fd:	cmp    DWORD PTR [esp+0x2c],0xffffffff
6401e802:	je     0x6401e80a
6401e804:	cmp    esi,DWORD PTR [esp+0x2c]
6401e808:	jbe    0x6401e837
6401e80a:	lea    esi,[esi+esi*2]
6401e80d:	mov    ecx,DWORD PTR [ebx+esi*4]
6401e810:	mov    DWORD PTR [esp+0xc],ecx
6401e814:	mov    DWORD PTR [eax+0xc],ecx
6401e817:	cmp    DWORD PTR [ebx+esi*4+0x4],0x0
6401e81c:	jne    0x6401e835
6401e81e:	push   0x101
6401e823:	mov    eax,DWORD PTR [ebx+esi*4+0x8]
6401e827:	call   0x6401e875
6401e82c:	mov    eax,DWORD PTR [ebx+esi*4+0x8]
6401e830:	call   0x6401e894
6401e835:	jmp    0x6401e7ee
6401e837:	mov    ecx,DWORD PTR [esp+0x4]
6401e83b:	mov    DWORD PTR fs:0x0,ecx
6401e842:	add    esp,0x18
6401e845:	pop    edi
6401e846:	pop    esi
6401e847:	pop    ebx
6401e848:	ret    
6401e849:	xor    eax,eax
6401e84b:	mov    ecx,DWORD PTR fs:0x0
6401e852:	cmp    DWORD PTR [ecx+0x4],0x6401e780
6401e859:	jne    0x6401e86b
6401e85b:	mov    edx,DWORD PTR [ecx+0xc]
6401e85e:	mov    edx,DWORD PTR [edx+0xc]
6401e861:	cmp    DWORD PTR [ecx+0x8],edx
6401e864:	jne    0x6401e86b
6401e866:	mov    eax,0x1
6401e86b:	ret    
6401e86c:	push   ebx
6401e86d:	push   ecx
6401e86e:	mov    ebx,0x640530e0
6401e873:	jmp    0x6401e880
6401e875:	push   ebx
6401e876:	push   ecx
6401e877:	mov    ebx,0x640530e0
6401e87c:	mov    ecx,DWORD PTR [esp+0xc]
6401e880:	mov    DWORD PTR [ebx+0x8],ecx
6401e883:	mov    DWORD PTR [ebx+0x4],eax
6401e886:	mov    DWORD PTR [ebx+0xc],ebp
6401e889:	push   ebp
6401e88a:	push   ecx
6401e88b:	push   eax
6401e88c:	pop    eax
6401e88d:	pop    ecx
6401e88e:	pop    ebp
6401e88f:	pop    ecx
6401e890:	pop    ebx
6401e891:	ret    0x4
6401e894:	call   eax
6401e896:	ret    
6401e897:	push   esi
6401e898:	push   edi
6401e899:	xor    edi,edi
6401e89b:	lea    esi,[edi+0x640530f0]
6401e8a1:	push   DWORD PTR [esi]
6401e8a3:	call   0x640177a7
6401e8a8:	add    edi,0x4
6401e8ab:	cmp    edi,0x28
6401e8ae:	pop    ecx
6401e8af:	mov    DWORD PTR [esi],eax
6401e8b1:	jb     0x6401e89b
6401e8b3:	pop    edi
6401e8b4:	pop    esi
6401e8b5:	ret    
6401e8b6:	mov    eax,DWORD PTR [esp+0x4]
6401e8ba:	mov    ds:0x640543fc,eax
6401e8bf:	ret    
6401e8c0:	mov    eax,DWORD PTR [esp+0x4]
6401e8c4:	mov    ds:0x64054400,eax
6401e8c9:	ret    
6401e8ca:	push   DWORD PTR [esp+0x4]
6401e8ce:	call   DWORD PTR ds:0x6402c16c
6401e8d4:	xor    eax,eax
6401e8d6:	inc    eax
6401e8d7:	ret    0x8
6401e8da:	push   0x14
6401e8dc:	push   0x64043fb8
6401e8e1:	call   0x640164d4
6401e8e6:	xor    edi,edi
6401e8e8:	mov    DWORD PTR [ebp-0x1c],edi
6401e8eb:	push   DWORD PTR ds:0x64054400
6401e8f1:	call   0x6401781e
6401e8f6:	pop    ecx
6401e8f7:	mov    esi,eax
6401e8f9:	cmp    esi,edi
6401e8fb:	jne    0x6401e950
6401e8fd:	lea    eax,[ebp-0x1c]
6401e900:	push   eax
6401e901:	call   0x640180cf
6401e906:	pop    ecx
6401e907:	cmp    eax,edi
6401e909:	je     0x6401e918
6401e90b:	push   edi
6401e90c:	push   edi
6401e90d:	push   edi
6401e90e:	push   edi
6401e90f:	push   edi
6401e910:	call   0x64013d66
6401e915:	add    esp,0x14
6401e918:	cmp    DWORD PTR [ebp-0x1c],0x1
6401e91c:	je     0x6401e93f
6401e91e:	push   0x64040048
6401e923:	call   DWORD PTR ds:0x6402c0a4
6401e929:	cmp    eax,edi
6401e92b:	je     0x6401e93f
6401e92d:	push   0x64041888
6401e932:	push   eax
6401e933:	call   DWORD PTR ds:0x6402c0a0
6401e939:	mov    esi,eax
6401e93b:	cmp    esi,edi
6401e93d:	jne    0x6401e944
6401e93f:	mov    esi,0x6401e8ca
6401e944:	push   esi
6401e945:	call   0x640177a7
6401e94a:	pop    ecx
6401e94b:	mov    ds:0x64054400,eax
6401e950:	mov    DWORD PTR [ebp-0x4],edi
6401e953:	push   DWORD PTR [ebp+0xc]
6401e956:	push   DWORD PTR [ebp+0x8]
6401e959:	call   esi
6401e95b:	mov    DWORD PTR [ebp-0x20],eax
6401e95e:	jmp    0x6401e98f
6401e960:	mov    eax,DWORD PTR [ebp-0x14]
6401e963:	mov    eax,DWORD PTR [eax]
6401e965:	mov    eax,DWORD PTR [eax]
6401e967:	mov    DWORD PTR [ebp-0x24],eax
6401e96a:	xor    ecx,ecx
6401e96c:	cmp    eax,0xc0000017
6401e971:	sete   cl
6401e974:	mov    eax,ecx
6401e976:	ret    
6401e977:	mov    esp,DWORD PTR [ebp-0x18]
6401e97a:	cmp    DWORD PTR [ebp-0x24],0xc0000017
6401e981:	jne    0x6401e98b
6401e983:	push   0x8
6401e985:	call   DWORD PTR ds:0x6402c074
6401e98b:	and    DWORD PTR [ebp-0x20],0x0
6401e98f:	mov    DWORD PTR [ebp-0x4],0xfffffffe
6401e996:	mov    eax,DWORD PTR [ebp-0x20]
6401e999:	call   0x64016519
6401e99e:	ret    
6401e99f:	push   0x10
6401e9a1:	push   0x64043fd8
6401e9a6:	call   0x640164d4
6401e9ab:	xor    ebx,ebx
6401e9ad:	mov    DWORD PTR [ebp-0x1c],ebx
6401e9b0:	push   0x1
6401e9b2:	call   0x6401b49a
6401e9b7:	pop    ecx
6401e9b8:	mov    DWORD PTR [ebp-0x4],ebx
6401e9bb:	push   0x3
6401e9bd:	pop    edi
6401e9be:	mov    DWORD PTR [ebp-0x20],edi
6401e9c1:	cmp    edi,DWORD PTR ds:0x640556c0
6401e9c7:	jge    0x6401ea20
6401e9c9:	mov    esi,edi
6401e9cb:	shl    esi,0x2
6401e9ce:	mov    eax,ds:0x640546b4
6401e9d3:	add    eax,esi
6401e9d5:	cmp    DWORD PTR [eax],ebx
6401e9d7:	je     0x6401ea1d
6401e9d9:	mov    eax,DWORD PTR [eax]
6401e9db:	test   BYTE PTR [eax+0xc],0x83
6401e9df:	je     0x6401e9f0
6401e9e1:	push   eax
6401e9e2:	call   0x64014660
6401e9e7:	pop    ecx
6401e9e8:	cmp    eax,0xffffffff
6401e9eb:	je     0x6401e9f0
6401e9ed:	inc    DWORD PTR [ebp-0x1c]
6401e9f0:	cmp    edi,0x14
6401e9f3:	jl     0x6401ea1d
6401e9f5:	mov    eax,ds:0x640546b4
6401e9fa:	mov    eax,DWORD PTR [esi+eax*1]
6401e9fd:	add    eax,0x20
6401ea00:	push   eax
6401ea01:	call   DWORD PTR ds:0x6402c170
6401ea07:	mov    eax,ds:0x640546b4
6401ea0c:	push   DWORD PTR [esi+eax*1]
6401ea0f:	call   0x640147cf
6401ea14:	pop    ecx
6401ea15:	mov    eax,ds:0x640546b4
6401ea1a:	mov    DWORD PTR [esi+eax*1],ebx
6401ea1d:	inc    edi
6401ea1e:	jmp    0x6401e9be
6401ea20:	mov    DWORD PTR [ebp-0x4],0xfffffffe
6401ea27:	call   0x6401ea35
6401ea2c:	mov    eax,DWORD PTR [ebp-0x1c]
6401ea2f:	call   0x64016519
6401ea34:	ret    
6401ea35:	push   0x1
6401ea37:	call   0x6401b3c2
6401ea3c:	pop    ecx
6401ea3d:	ret    
6401ea3e:	push   0x10
6401ea40:	push   0x64043ff8
6401ea45:	call   0x640164d4
6401ea4a:	mov    eax,DWORD PTR [ebp+0x8]
6401ea4d:	cmp    eax,0xfffffffe
6401ea50:	jne    0x6401ea65
6401ea52:	call   0x640166d3
6401ea57:	mov    DWORD PTR [eax],0x9
6401ea5d:	or     eax,0xffffffff
6401ea60:	jmp    0x6401eb0f
6401ea65:	xor    ebx,ebx
6401ea67:	cmp    eax,ebx
6401ea69:	jl     0x6401ea73
6401ea6b:	cmp    eax,DWORD PTR ds:0x640556c8
6401ea71:	jb     0x6401ea8d
6401ea73:	call   0x640166d3
6401ea78:	mov    DWORD PTR [eax],0x9
6401ea7e:	push   ebx
6401ea7f:	push   ebx
6401ea80:	push   ebx
6401ea81:	push   ebx
6401ea82:	push   ebx
6401ea83:	call   0x64013e62
6401ea88:	add    esp,0x14
6401ea8b:	jmp    0x6401ea5d
6401ea8d:	mov    ecx,eax
6401ea8f:	sar    ecx,0x5
6401ea92:	lea    edi,[ecx*4+0x640556e0]
6401ea99:	mov    esi,eax
6401ea9b:	and    esi,0x1f
6401ea9e:	shl    esi,0x6
6401eaa1:	mov    ecx,DWORD PTR [edi]
6401eaa3:	movzx  ecx,BYTE PTR [esi+ecx*1+0x4]
6401eaa8:	and    ecx,0x1
6401eaab:	je     0x6401ea73
6401eaad:	push   eax
6401eaae:	call   0x640199ac
6401eab3:	pop    ecx
6401eab4:	mov    DWORD PTR [ebp-0x4],ebx
6401eab7:	mov    eax,DWORD PTR [edi]
6401eab9:	test   BYTE PTR [esi+eax*1+0x4],0x1
6401eabe:	je     0x6401eaf1
6401eac0:	push   DWORD PTR [ebp+0x8]
6401eac3:	call   0x6401993b
6401eac8:	pop    ecx
6401eac9:	push   eax
6401eaca:	call   DWORD PTR ds:0x6402c104
6401ead0:	test   eax,eax
6401ead2:	jne    0x6401eadf
6401ead4:	call   DWORD PTR ds:0x6402c06c
6401eada:	mov    DWORD PTR [ebp-0x1c],eax
6401eadd:	jmp    0x6401eae2
6401eadf:	mov    DWORD PTR [ebp-0x1c],ebx
6401eae2:	cmp    DWORD PTR [ebp-0x1c],ebx
6401eae5:	je     0x6401eb00
6401eae7:	call   0x640166e6
6401eaec:	mov    ecx,DWORD PTR [ebp-0x1c]
6401eaef:	mov    DWORD PTR [eax],ecx
6401eaf1:	call   0x640166d3
6401eaf6:	mov    DWORD PTR [eax],0x9
6401eafc:	or     DWORD PTR [ebp-0x1c],0xffffffff
6401eb00:	mov    DWORD PTR [ebp-0x4],0xfffffffe
6401eb07:	call   0x6401eb15
6401eb0c:	mov    eax,DWORD PTR [ebp-0x1c]
6401eb0f:	call   0x64016519
6401eb14:	ret    
6401eb15:	push   DWORD PTR [ebp+0x8]
6401eb18:	call   0x64019a4c
6401eb1d:	pop    ecx
6401eb1e:	ret    
6401eb1f:	inc    DWORD PTR ds:0x64053f18
6401eb25:	push   0x1000
6401eb2a:	call   0x640162ef
6401eb2f:	test   eax,eax
6401eb31:	pop    ecx
6401eb32:	mov    ecx,DWORD PTR [esp+0x4]
6401eb36:	mov    DWORD PTR [ecx+0x8],eax
6401eb39:	je     0x6401eb48
6401eb3b:	or     DWORD PTR [ecx+0xc],0x8
6401eb3f:	mov    DWORD PTR [ecx+0x18],0x1000
6401eb46:	jmp    0x6401eb59
6401eb48:	or     DWORD PTR [ecx+0xc],0x4
6401eb4c:	lea    eax,[ecx+0x14]
6401eb4f:	mov    DWORD PTR [ecx+0x8],eax
6401eb52:	mov    DWORD PTR [ecx+0x18],0x2
6401eb59:	mov    eax,DWORD PTR [ecx+0x8]
6401eb5c:	and    DWORD PTR [ecx+0x4],0x0
6401eb60:	mov    DWORD PTR [ecx],eax
6401eb62:	ret    
6401eb63:	mov    eax,DWORD PTR [esp+0x4]
6401eb67:	cmp    eax,0xfffffffe
6401eb6a:	jne    0x6401eb7a
6401eb6c:	call   0x640166d3
6401eb71:	mov    DWORD PTR [eax],0x9
6401eb77:	xor    eax,eax
6401eb79:	ret    
6401eb7a:	push   esi
6401eb7b:	xor    esi,esi
6401eb7d:	cmp    eax,esi
6401eb7f:	jl     0x6401eb89
6401eb81:	cmp    eax,DWORD PTR ds:0x640556c8
6401eb87:	jb     0x6401eba5
6401eb89:	call   0x640166d3
6401eb8e:	push   esi
6401eb8f:	push   esi
6401eb90:	push   esi
6401eb91:	push   esi
6401eb92:	push   esi
6401eb93:	mov    DWORD PTR [eax],0x9
6401eb99:	call   0x64013e62
6401eb9e:	add    esp,0x14
6401eba1:	xor    eax,eax
6401eba3:	pop    esi
6401eba4:	ret    
6401eba5:	mov    ecx,eax
6401eba7:	and    eax,0x1f
6401ebaa:	sar    ecx,0x5
6401ebad:	mov    ecx,DWORD PTR [ecx*4+0x640556e0]
6401ebb4:	shl    eax,0x6
6401ebb7:	movzx  eax,BYTE PTR [ecx+eax*1+0x4]
6401ebbc:	and    eax,0x40
6401ebbf:	pop    esi
6401ebc0:	ret    
6401ebc1:	mov    eax,ds:0x640521ac
6401ebc6:	or     eax,0x1
6401ebc9:	xor    ecx,ecx
6401ebcb:	cmp    DWORD PTR ds:0x64054408,eax
6401ebd1:	sete   cl
6401ebd4:	mov    eax,ecx
6401ebd6:	ret    
6401ebd7:	push   ebp
6401ebd8:	mov    ebp,esp
6401ebda:	sub    esp,0x10
6401ebdd:	push   ebx
6401ebde:	push   esi
6401ebdf:	mov    esi,DWORD PTR [ebp+0xc]
6401ebe2:	xor    ebx,ebx
6401ebe4:	cmp    esi,ebx
6401ebe6:	push   edi
6401ebe7:	mov    edi,DWORD PTR [ebp+0x10]
6401ebea:	jne    0x6401ebfd
6401ebec:	cmp    edi,ebx
6401ebee:	jbe    0x6401ebfd
6401ebf0:	mov    eax,DWORD PTR [ebp+0x8]
6401ebf3:	cmp    eax,ebx
6401ebf5:	je     0x6401ebf9
6401ebf7:	mov    DWORD PTR [eax],ebx
6401ebf9:	xor    eax,eax
6401ebfb:	jmp    0x6401ec7c
6401ebfd:	mov    eax,DWORD PTR [ebp+0x8]
6401ec00:	cmp    eax,ebx
6401ec02:	je     0x6401ec07
6401ec04:	or     DWORD PTR [eax],0xffffffff
6401ec07:	cmp    edi,0x7fffffff
6401ec0d:	jbe    0x6401ec2a
6401ec0f:	call   0x640166d3
6401ec14:	push   0x16
6401ec16:	pop    esi
6401ec17:	push   ebx
6401ec18:	push   ebx
6401ec19:	push   ebx
6401ec1a:	push   ebx
6401ec1b:	push   ebx
6401ec1c:	mov    DWORD PTR [eax],esi
6401ec1e:	call   0x64013e62
6401ec23:	add    esp,0x14
6401ec26:	mov    eax,esi
6401ec28:	jmp    0x6401ec7c
6401ec2a:	push   DWORD PTR [ebp+0x18]
6401ec2d:	lea    ecx,[ebp-0x10]
6401ec30:	call   0x64014335
6401ec35:	mov    eax,DWORD PTR [ebp-0x10]
6401ec38:	cmp    DWORD PTR [eax+0x14],ebx
6401ec3b:	jne    0x6401ecd5
6401ec41:	mov    ax,WORD PTR [ebp+0x14]
6401ec45:	cmp    ax,0xff
6401ec49:	jbe    0x6401ec81
6401ec4b:	cmp    esi,ebx
6401ec4d:	je     0x6401ec5e
6401ec4f:	cmp    edi,ebx
6401ec51:	jbe    0x6401ec5e
6401ec53:	push   edi
6401ec54:	push   ebx
6401ec55:	push   esi
6401ec56:	call   0x64015170
6401ec5b:	add    esp,0xc
6401ec5e:	call   0x640166d3
6401ec63:	mov    DWORD PTR [eax],0x2a
6401ec69:	call   0x640166d3
6401ec6e:	cmp    BYTE PTR [ebp-0x4],bl
6401ec71:	mov    eax,DWORD PTR [eax]
6401ec73:	je     0x6401ec7c
6401ec75:	mov    ecx,DWORD PTR [ebp-0x8]
6401ec78:	and    DWORD PTR [ecx+0x70],0xfffffffd
6401ec7c:	pop    edi
6401ec7d:	pop    esi
6401ec7e:	pop    ebx
6401ec7f:	leave  
6401ec80:	ret    
6401ec81:	cmp    esi,ebx
6401ec83:	je     0x6401ecb3
6401ec85:	cmp    edi,ebx
6401ec87:	ja     0x6401ecb1
6401ec89:	call   0x640166d3
6401ec8e:	push   0x22
6401ec90:	pop    esi
6401ec91:	push   ebx
6401ec92:	push   ebx
6401ec93:	push   ebx
6401ec94:	push   ebx
6401ec95:	push   ebx
6401ec96:	mov    DWORD PTR [eax],esi
6401ec98:	call   0x64013e62
6401ec9d:	add    esp,0x14
6401eca0:	cmp    BYTE PTR [ebp-0x4],bl
6401eca3:	je     0x6401ec26
6401eca5:	mov    eax,DWORD PTR [ebp-0x8]
6401eca8:	and    DWORD PTR [eax+0x70],0xfffffffd
6401ecac:	jmp    0x6401ec26
6401ecb1:	mov    BYTE PTR [esi],al
6401ecb3:	mov    eax,DWORD PTR [ebp+0x8]
6401ecb6:	cmp    eax,ebx
6401ecb8:	je     0x6401ecc0
6401ecba:	mov    DWORD PTR [eax],0x1
6401ecc0:	cmp    BYTE PTR [ebp-0x4],bl
6401ecc3:	je     0x6401ebf9
6401ecc9:	mov    eax,DWORD PTR [ebp-0x8]
6401eccc:	and    DWORD PTR [eax+0x70],0xfffffffd
6401ecd0:	jmp    0x6401ebf9
6401ecd5:	lea    ecx,[ebp+0xc]
6401ecd8:	push   ecx
6401ecd9:	push   ebx
6401ecda:	push   edi
6401ecdb:	push   esi
6401ecdc:	push   0x1
6401ecde:	lea    ecx,[ebp+0x14]
6401ece1:	push   ecx
6401ece2:	push   ebx
6401ece3:	mov    DWORD PTR [ebp+0xc],ebx
6401ece6:	push   DWORD PTR [eax+0x4]
6401ece9:	call   DWORD PTR ds:0x6402c014
6401ecef:	cmp    eax,ebx
6401ecf1:	je     0x6401ed07
6401ecf3:	cmp    DWORD PTR [ebp+0xc],ebx
6401ecf6:	jne    0x6401ec5e
6401ecfc:	mov    ecx,DWORD PTR [ebp+0x8]
6401ecff:	cmp    ecx,ebx
6401ed01:	je     0x6401ecc0
6401ed03:	mov    DWORD PTR [ecx],eax
6401ed05:	jmp    0x6401ecc0
6401ed07:	call   DWORD PTR ds:0x6402c06c
6401ed0d:	cmp    eax,0x7a
6401ed10:	jne    0x6401ec5e
6401ed16:	cmp    esi,ebx
6401ed18:	je     0x6401ec89
6401ed1e:	cmp    edi,ebx
6401ed20:	jbe    0x6401ec89
6401ed26:	push   edi
6401ed27:	push   ebx
6401ed28:	push   esi
6401ed29:	call   0x64015170
6401ed2e:	add    esp,0xc
6401ed31:	jmp    0x6401ec89
6401ed36:	push   0x0
6401ed38:	push   DWORD PTR [esp+0x14]
6401ed3c:	push   DWORD PTR [esp+0x14]
6401ed40:	push   DWORD PTR [esp+0x14]
6401ed44:	push   DWORD PTR [esp+0x14]
6401ed48:	call   0x6401ebd7
6401ed4d:	add    esp,0x14
6401ed50:	ret    
6401ed51:	push   ebp
6401ed52:	mov    ebp,esp
6401ed54:	sub    esp,0x10
6401ed57:	mov    eax,ds:0x640521ac
6401ed5c:	xor    eax,ebp
6401ed5e:	mov    DWORD PTR [ebp-0x4],eax
6401ed61:	push   esi
6401ed62:	xor    esi,esi
6401ed64:	cmp    DWORD PTR ds:0x64053118,esi
6401ed6a:	je     0x6401edba
6401ed6c:	cmp    DWORD PTR ds:0x640534c4,0xfffffffe
6401ed73:	jne    0x6401ed7a
6401ed75:	call   0x640211b9
6401ed7a:	mov    eax,ds:0x640534c4
6401ed7f:	cmp    eax,0xffffffff
6401ed82:	jne    0x6401ed8a
6401ed84:	or     ax,0xffff
6401ed88:	jmp    0x6401edfa
6401ed8a:	push   esi
6401ed8b:	lea    ecx,[ebp-0x10]
6401ed8e:	push   ecx
6401ed8f:	push   0x1
6401ed91:	lea    ecx,[ebp+0x8]
6401ed94:	push   ecx
6401ed95:	push   eax
6401ed96:	call   DWORD PTR ds:0x6402c144
6401ed9c:	test   eax,eax
6401ed9e:	jne    0x6401ee07
6401eda0:	cmp    DWORD PTR ds:0x64053118,0x2
6401eda7:	jne    0x6401ed84
6401eda9:	call   DWORD PTR ds:0x6402c06c
6401edaf:	cmp    eax,0x78
6401edb2:	jne    0x6401ed84
6401edb4:	mov    DWORD PTR ds:0x64053118,esi
6401edba:	push   esi
6401edbb:	push   esi
6401edbc:	push   0x5
6401edbe:	lea    eax,[ebp-0xc]
6401edc1:	push   eax
6401edc2:	push   0x1
6401edc4:	lea    eax,[ebp+0x8]
6401edc7:	push   eax
6401edc8:	push   esi
6401edc9:	call   DWORD PTR ds:0x6402c140
6401edcf:	push   eax
6401edd0:	call   DWORD PTR ds:0x6402c014
6401edd6:	mov    ecx,DWORD PTR ds:0x640534c4
6401eddc:	cmp    ecx,0xffffffff
6401eddf:	je     0x6401ed84
6401ede1:	push   esi
6401ede2:	lea    edx,[ebp-0x10]
6401ede5:	push   edx
6401ede6:	push   eax
6401ede7:	lea    eax,[ebp-0xc]
6401edea:	push   eax
6401edeb:	push   ecx
6401edec:	call   DWORD PTR ds:0x6402c13c
6401edf2:	test   eax,eax
6401edf4:	je     0x6401ed84
6401edf6:	mov    ax,WORD PTR [ebp+0x8]
6401edfa:	mov    ecx,DWORD PTR [ebp-0x4]
6401edfd:	xor    ecx,ebp
6401edff:	pop    esi
6401ee00:	call   0x64013d18
6401ee05:	leave  
6401ee06:	ret    
6401ee07:	mov    DWORD PTR ds:0x64053118,0x1
6401ee11:	jmp    0x6401edf6
6401ee13:	push   ebp
6401ee14:	mov    ebp,esp
6401ee16:	sub    esp,0x10
6401ee19:	push   ebx
6401ee1a:	push   esi
6401ee1b:	mov    esi,DWORD PTR [ebp+0xc]
6401ee1e:	xor    ebx,ebx
6401ee20:	cmp    esi,ebx
6401ee22:	je     0x6401ee37
6401ee24:	cmp    DWORD PTR [ebp+0x10],ebx
6401ee27:	je     0x6401ee37
6401ee29:	cmp    BYTE PTR [esi],bl
6401ee2b:	jne    0x6401ee3d
6401ee2d:	mov    eax,DWORD PTR [ebp+0x8]
6401ee30:	cmp    eax,ebx
6401ee32:	je     0x6401ee37
6401ee34:	mov    WORD PTR [eax],bx
6401ee37:	xor    eax,eax
6401ee39:	pop    esi
6401ee3a:	pop    ebx
6401ee3b:	leave  
6401ee3c:	ret    
6401ee3d:	push   DWORD PTR [ebp+0x14]
6401ee40:	lea    ecx,[ebp-0x10]
6401ee43:	call   0x64014335
6401ee48:	mov    eax,DWORD PTR [ebp-0x10]
6401ee4b:	cmp    DWORD PTR [eax+0x14],ebx
6401ee4e:	jne    0x6401ee6f
6401ee50:	mov    eax,DWORD PTR [ebp+0x8]
6401ee53:	cmp    eax,ebx
6401ee55:	je     0x6401ee5e
6401ee57:	movzx  cx,BYTE PTR [esi]
6401ee5b:	mov    WORD PTR [eax],cx
6401ee5e:	cmp    BYTE PTR [ebp-0x4],bl
6401ee61:	je     0x6401ee6a
6401ee63:	mov    eax,DWORD PTR [ebp-0x8]
6401ee66:	and    DWORD PTR [eax+0x70],0xfffffffd
6401ee6a:	xor    eax,eax
6401ee6c:	inc    eax
6401ee6d:	jmp    0x6401ee39
6401ee6f:	lea    eax,[ebp-0x10]
6401ee72:	push   eax
6401ee73:	movzx  eax,BYTE PTR [esi]
6401ee76:	push   eax
6401ee77:	call   0x64015127
6401ee7c:	test   eax,eax
6401ee7e:	pop    ecx
6401ee7f:	pop    ecx
6401ee80:	je     0x6401eeff
6401ee82:	mov    eax,DWORD PTR [ebp-0x10]
6401ee85:	mov    ecx,DWORD PTR [eax+0xac]
6401ee8b:	cmp    ecx,0x1
6401ee8e:	jle    0x6401eeb5
6401ee90:	cmp    DWORD PTR [ebp+0x10],ecx
6401ee93:	jl     0x6401eeb5
6401ee95:	xor    edx,edx
6401ee97:	cmp    DWORD PTR [ebp+0x8],ebx
6401ee9a:	setne  dl
6401ee9d:	push   edx
6401ee9e:	push   DWORD PTR [ebp+0x8]
6401eea1:	push   ecx
6401eea2:	push   esi
6401eea3:	push   0x9
6401eea5:	push   DWORD PTR [eax+0x4]
6401eea8:	call   DWORD PTR ds:0x6402c02c
6401eeae:	test   eax,eax
6401eeb0:	mov    eax,DWORD PTR [ebp-0x10]
6401eeb3:	jne    0x6401eec5
6401eeb5:	mov    ecx,DWORD PTR [ebp+0x10]
6401eeb8:	cmp    ecx,DWORD PTR [eax+0xac]
6401eebe:	jb     0x6401eee0
6401eec0:	cmp    BYTE PTR [esi+0x1],bl
6401eec3:	je     0x6401eee0
6401eec5:	cmp    BYTE PTR [ebp-0x4],bl
6401eec8:	mov    eax,DWORD PTR [eax+0xac]
6401eece:	je     0x6401ee39
6401eed4:	mov    ecx,DWORD PTR [ebp-0x8]
6401eed7:	and    DWORD PTR [ecx+0x70],0xfffffffd
6401eedb:	jmp    0x6401ee39
6401eee0:	call   0x640166d3
6401eee5:	mov    DWORD PTR [eax],0x2a
6401eeeb:	cmp    BYTE PTR [ebp-0x4],bl
6401eeee:	je     0x6401eef7
6401eef0:	mov    eax,DWORD PTR [ebp-0x8]
6401eef3:	and    DWORD PTR [eax+0x70],0xfffffffd
6401eef7:	or     eax,0xffffffff
6401eefa:	jmp    0x6401ee39
6401eeff:	xor    eax,eax
6401ef01:	cmp    DWORD PTR [ebp+0x8],ebx
6401ef04:	setne  al
6401ef07:	push   eax
6401ef08:	push   DWORD PTR [ebp+0x8]
6401ef0b:	mov    eax,DWORD PTR [ebp-0x10]
6401ef0e:	push   0x1
6401ef10:	push   esi
6401ef11:	push   0x9
6401ef13:	push   DWORD PTR [eax+0x4]
6401ef16:	call   DWORD PTR ds:0x6402c02c
6401ef1c:	test   eax,eax
6401ef1e:	jne    0x6401ee5e
6401ef24:	jmp    0x6401eee0
6401ef26:	push   0x0
6401ef28:	push   DWORD PTR [esp+0x10]
6401ef2c:	push   DWORD PTR [esp+0x10]
6401ef30:	push   DWORD PTR [esp+0x10]
6401ef34:	call   0x6401ee13
6401ef39:	add    esp,0x10
6401ef3c:	ret    
6401ef3d:	push   ebp
6401ef3e:	mov    ebp,esp
6401ef40:	sub    esp,0x20
6401ef43:	push   ebx
6401ef44:	push   esi
6401ef45:	push   edi
6401ef46:	call   0x64017815
6401ef4b:	xor    ebx,ebx
6401ef4d:	cmp    DWORD PTR ds:0x6405440c,ebx
6401ef53:	mov    DWORD PTR [ebp-0x8],eax
6401ef56:	mov    DWORD PTR [ebp-0x4],ebx
6401ef59:	mov    DWORD PTR [ebp-0xc],ebx
6401ef5c:	mov    DWORD PTR [ebp-0x10],ebx
6401ef5f:	jne    0x6401f013
6401ef65:	push   0x64041914
6401ef6a:	call   DWORD PTR ds:0x6402c0a8
6401ef70:	mov    edi,eax
6401ef72:	cmp    edi,ebx
6401ef74:	je     0x6401f0f3
6401ef7a:	mov    esi,DWORD PTR ds:0x6402c0a0
6401ef80:	push   0x64041908
6401ef85:	push   edi
6401ef86:	call   esi
6401ef88:	cmp    eax,ebx
6401ef8a:	je     0x6401f0f3
6401ef90:	push   eax
6401ef91:	call   0x640177a7
6401ef96:	mov    DWORD PTR [esp],0x640418f8
6401ef9d:	push   edi
6401ef9e:	mov    ds:0x6405440c,eax
6401efa3:	call   esi
6401efa5:	push   eax
6401efa6:	call   0x640177a7
6401efab:	mov    DWORD PTR [esp],0x640418e4
6401efb2:	push   edi
6401efb3:	mov    ds:0x64054410,eax
6401efb8:	call   esi
6401efba:	push   eax
6401efbb:	call   0x640177a7
6401efc0:	mov    ds:0x64054414,eax
6401efc5:	lea    eax,[ebp-0xc]
6401efc8:	push   eax
6401efc9:	call   0x640180cf
6401efce:	test   eax,eax
6401efd0:	pop    ecx
6401efd1:	pop    ecx
6401efd2:	je     0x6401efe1
6401efd4:	push   ebx
6401efd5:	push   ebx
6401efd6:	push   ebx
6401efd7:	push   ebx
6401efd8:	push   ebx
6401efd9:	call   0x64013d66
6401efde:	add    esp,0x14
6401efe1:	cmp    DWORD PTR [ebp-0xc],0x2
6401efe5:	jne    0x6401f013
6401efe7:	push   0x640418c8
6401efec:	push   edi
6401efed:	call   esi
6401efef:	push   eax
6401eff0:	call   0x640177a7
6401eff5:	cmp    eax,ebx
6401eff7:	pop    ecx
6401eff8:	mov    ds:0x6405441c,eax
6401effd:	je     0x6401f013
6401efff:	push   0x640418b0
6401f004:	push   edi
6401f005:	call   esi
6401f007:	push   eax
6401f008:	call   0x640177a7
6401f00d:	pop    ecx
6401f00e:	mov    ds:0x64054418,eax
6401f013:	mov    eax,ds:0x64054418
6401f018:	mov    ecx,DWORD PTR [ebp-0x8]
6401f01b:	cmp    eax,ecx
6401f01d:	je     0x6401f098
6401f01f:	cmp    DWORD PTR ds:0x6405441c,ecx
6401f025:	je     0x6401f098
6401f027:	push   eax
6401f028:	call   0x6401781e
6401f02d:	push   DWORD PTR ds:0x6405441c
6401f033:	mov    esi,eax
6401f035:	call   0x6401781e
6401f03a:	cmp    esi,ebx
6401f03c:	pop    ecx
6401f03d:	pop    ecx
6401f03e:	mov    edi,eax
6401f040:	je     0x6401f098
6401f042:	cmp    edi,ebx
6401f044:	je     0x6401f098
6401f046:	call   esi
6401f048:	cmp    eax,ebx
6401f04a:	je     0x6401f065
6401f04c:	lea    ecx,[ebp-0x14]
6401f04f:	push   ecx
6401f050:	push   0xc
6401f052:	lea    ecx,[ebp-0x20]
6401f055:	push   ecx
6401f056:	push   0x1
6401f058:	push   eax
6401f059:	call   edi
6401f05b:	test   eax,eax
6401f05d:	je     0x6401f065
6401f05f:	test   BYTE PTR [ebp-0x18],0x1
6401f063:	jne    0x6401f098
6401f065:	lea    eax,[ebp-0x10]
6401f068:	push   eax
6401f069:	call   0x64018106
6401f06e:	test   eax,eax
6401f070:	pop    ecx
6401f071:	je     0x6401f080
6401f073:	push   ebx
6401f074:	push   ebx
6401f075:	push   ebx
6401f076:	push   ebx
6401f077:	push   ebx
6401f078:	call   0x64013d66
6401f07d:	add    esp,0x14
6401f080:	cmp    DWORD PTR [ebp-0x10],0x4
6401f084:	jb     0x6401f08f
6401f086:	or     DWORD PTR [ebp+0x10],0x200000
6401f08d:	jmp    0x6401f0d3
6401f08f:	or     DWORD PTR [ebp+0x10],0x40000
6401f096:	jmp    0x6401f0d3
6401f098:	mov    eax,ds:0x64054410
6401f09d:	cmp    eax,DWORD PTR [ebp-0x8]
6401f0a0:	je     0x6401f0d3
6401f0a2:	push   eax
6401f0a3:	call   0x6401781e
6401f0a8:	cmp    eax,ebx
6401f0aa:	pop    ecx
6401f0ab:	je     0x6401f0d3
6401f0ad:	call   eax
6401f0af:	cmp    eax,ebx
6401f0b1:	mov    DWORD PTR [ebp-0x4],eax
6401f0b4:	je     0x6401f0d3
6401f0b6:	mov    eax,ds:0x64054414
6401f0bb:	cmp    eax,DWORD PTR [ebp-0x8]
6401f0be:	je     0x6401f0d3
6401f0c0:	push   eax
6401f0c1:	call   0x6401781e
6401f0c6:	cmp    eax,ebx
6401f0c8:	pop    ecx
6401f0c9:	je     0x6401f0d3
6401f0cb:	push   DWORD PTR [ebp-0x4]
6401f0ce:	call   eax
6401f0d0:	mov    DWORD PTR [ebp-0x4],eax
6401f0d3:	push   DWORD PTR ds:0x6405440c
6401f0d9:	call   0x6401781e
6401f0de:	cmp    eax,ebx
6401f0e0:	pop    ecx
6401f0e1:	je     0x6401f0f3
6401f0e3:	push   DWORD PTR [ebp+0x10]
6401f0e6:	push   DWORD PTR [ebp+0xc]
6401f0e9:	push   DWORD PTR [ebp+0x8]
6401f0ec:	push   DWORD PTR [ebp-0x4]
6401f0ef:	call   eax
6401f0f1:	jmp    0x6401f0f5
6401f0f3:	xor    eax,eax
6401f0f5:	pop    edi
6401f0f6:	pop    esi
6401f0f7:	pop    ebx
6401f0f8:	leave  
6401f0f9:	ret    
6401f0fa:	mov    ecx,DWORD PTR [esp+0x4]
6401f0fe:	push   esi
6401f0ff:	xor    esi,esi
6401f101:	cmp    ecx,esi
6401f103:	jl     0x6401f123
6401f105:	cmp    ecx,0x2
6401f108:	jle    0x6401f116
6401f10a:	cmp    ecx,0x3
6401f10d:	jne    0x6401f123
6401f10f:	mov    eax,ds:0x64053a20
6401f114:	pop    esi
6401f115:	ret    
6401f116:	mov    eax,ds:0x64053a20
6401f11b:	mov    DWORD PTR ds:0x64053a20,ecx
6401f121:	pop    esi
6401f122:	ret    
6401f123:	call   0x640166d3
6401f128:	push   esi
6401f129:	push   esi
6401f12a:	push   esi
6401f12b:	push   esi
6401f12c:	push   esi
6401f12d:	mov    DWORD PTR [eax],0x16
6401f133:	call   0x64013e62
6401f138:	add    esp,0x14
6401f13b:	or     eax,0xffffffff
6401f13e:	pop    esi
6401f13f:	ret    
6401f140:	push   ebp
6401f141:	mov    ebp,esp
6401f143:	sub    esp,0x2c
6401f146:	mov    eax,DWORD PTR [ebp+0x8]
6401f149:	movzx  ecx,WORD PTR [eax+0xa]
6401f14d:	push   ebx
6401f14e:	mov    ebx,ecx
6401f150:	and    ecx,0x8000
6401f156:	mov    DWORD PTR [ebp-0x14],ecx
6401f159:	mov    ecx,DWORD PTR [eax+0x6]
6401f15c:	mov    DWORD PTR [ebp-0x20],ecx
6401f15f:	mov    ecx,DWORD PTR [eax+0x2]
6401f162:	movzx  eax,WORD PTR [eax]
6401f165:	and    ebx,0x7fff
6401f16b:	sub    ebx,0x3fff
6401f171:	shl    eax,0x10
6401f174:	cmp    ebx,0xffffc001
6401f17a:	push   edi
6401f17b:	mov    DWORD PTR [ebp-0x1c],ecx
6401f17e:	mov    DWORD PTR [ebp-0x18],eax
6401f181:	jne    0x6401f1aa
6401f183:	xor    ebx,ebx
6401f185:	xor    eax,eax
6401f187:	cmp    DWORD PTR [ebp+eax*4-0x20],ebx
6401f18b:	jne    0x6401f19a
6401f18d:	inc    eax
6401f18e:	cmp    eax,0x3
6401f191:	jl     0x6401f187
6401f193:	xor    eax,eax
6401f195:	jmp    0x6401f63f
6401f19a:	xor    eax,eax
6401f19c:	lea    edi,[ebp-0x20]
6401f19f:	stos   DWORD PTR es:[edi],eax
6401f1a0:	stos   DWORD PTR es:[edi],eax
6401f1a1:	push   0x2
6401f1a3:	stos   DWORD PTR es:[edi],eax
6401f1a4:	pop    eax
6401f1a5:	jmp    0x6401f63f
6401f1aa:	and    DWORD PTR [ebp+0x8],0x0
6401f1ae:	push   esi
6401f1af:	lea    esi,[ebp-0x20]
6401f1b2:	lea    edi,[ebp-0x2c]
6401f1b5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
6401f1b6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
6401f1b7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
6401f1b8:	mov    esi,DWORD PTR ds:0x64053124
6401f1be:	dec    esi
6401f1bf:	lea    ecx,[esi+0x1]
6401f1c2:	mov    eax,ecx
6401f1c4:	cdq    
6401f1c5:	and    edx,0x1f
6401f1c8:	add    eax,edx
6401f1ca:	sar    eax,0x5
6401f1cd:	mov    edx,ecx
6401f1cf:	and    edx,0x8000001f
6401f1d5:	mov    DWORD PTR [ebp-0x10],ebx
6401f1d8:	mov    DWORD PTR [ebp-0xc],eax
6401f1db:	jns    0x6401f1e2
6401f1dd:	dec    edx
6401f1de:	or     edx,0xffffffe0
6401f1e1:	inc    edx
6401f1e2:	lea    edi,[ebp+eax*4-0x20]
6401f1e6:	push   0x1f
6401f1e8:	xor    eax,eax
6401f1ea:	pop    ecx
6401f1eb:	sub    ecx,edx
6401f1ed:	inc    eax
6401f1ee:	shl    eax,cl
6401f1f0:	mov    DWORD PTR [ebp-0x8],ecx
6401f1f3:	test   DWORD PTR [edi],eax
6401f1f5:	je     0x6401f288
6401f1fb:	mov    eax,DWORD PTR [ebp-0xc]
6401f1fe:	or     edx,0xffffffff
6401f201:	shl    edx,cl
6401f203:	not    edx
6401f205:	test   DWORD PTR [ebp+eax*4-0x20],edx
6401f209:	jmp    0x6401f210
6401f20b:	cmp    DWORD PTR [ebp+eax*4-0x20],0x0
6401f210:	jne    0x6401f21a
6401f212:	inc    eax
6401f213:	cmp    eax,0x3
6401f216:	jl     0x6401f20b
6401f218:	jmp    0x6401f288
6401f21a:	mov    eax,esi
6401f21c:	cdq    
6401f21d:	push   0x1f
6401f21f:	pop    ecx
6401f220:	and    edx,ecx
6401f222:	add    eax,edx
6401f224:	sar    eax,0x5
6401f227:	and    esi,0x8000001f
6401f22d:	jns    0x6401f234
6401f22f:	dec    esi
6401f230:	or     esi,0xffffffe0
6401f233:	inc    esi
6401f234:	and    DWORD PTR [ebp-0x4],0x0
6401f238:	sub    ecx,esi
6401f23a:	xor    edx,edx
6401f23c:	inc    edx
6401f23d:	shl    edx,cl
6401f23f:	lea    ecx,[ebp+eax*4-0x20]
6401f243:	mov    esi,DWORD PTR [ecx]
6401f245:	add    esi,edx
6401f247:	mov    DWORD PTR [ebp+0x8],esi
6401f24a:	mov    esi,DWORD PTR [ecx]
6401f24c:	cmp    DWORD PTR [ebp+0x8],esi
6401f24f:	jb     0x6401f273
6401f251:	cmp    DWORD PTR [ebp+0x8],edx
6401f254:	jmp    0x6401f271
6401f256:	test   ecx,ecx
6401f258:	je     0x6401f285
6401f25a:	and    DWORD PTR [ebp-0x4],0x0
6401f25e:	lea    ecx,[ebp+eax*4-0x20]
6401f262:	mov    edx,DWORD PTR [ecx]
6401f264:	lea    esi,[edx+0x1]
6401f267:	cmp    esi,edx
6401f269:	mov    DWORD PTR [ebp+0x8],esi
6401f26c:	jb     0x6401f273
6401f26e:	cmp    esi,0x1
6401f271:	jae    0x6401f27a
6401f273:	mov    DWORD PTR [ebp-0x4],0x1
6401f27a:	dec    eax
6401f27b:	mov    edx,DWORD PTR [ebp+0x8]
6401f27e:	mov    DWORD PTR [ecx],edx
6401f280:	mov    ecx,DWORD PTR [ebp-0x4]
6401f283:	jns    0x6401f256
6401f285:	mov    DWORD PTR [ebp+0x8],ecx
6401f288:	mov    ecx,DWORD PTR [ebp-0x8]
6401f28b:	or     eax,0xffffffff
6401f28e:	shl    eax,cl
6401f290:	and    DWORD PTR [edi],eax
6401f292:	mov    eax,DWORD PTR [ebp-0xc]
6401f295:	inc    eax
6401f296:	cmp    eax,0x3
6401f299:	jge    0x6401f2a8
6401f29b:	push   0x3
6401f29d:	pop    ecx
6401f29e:	lea    edi,[ebp+eax*4-0x20]
6401f2a2:	sub    ecx,eax
6401f2a4:	xor    eax,eax
6401f2a6:	rep stos DWORD PTR es:[edi],eax
6401f2a8:	cmp    DWORD PTR [ebp+0x8],0x0
6401f2ac:	je     0x6401f2af
6401f2ae:	inc    ebx
6401f2af:	mov    eax,ds:0x64053120
6401f2b4:	mov    ecx,eax
6401f2b6:	sub    ecx,DWORD PTR ds:0x64053124
6401f2bc:	cmp    ebx,ecx
6401f2be:	jge    0x6401f2cd
6401f2c0:	xor    eax,eax
6401f2c2:	lea    edi,[ebp-0x20]
6401f2c5:	stos   DWORD PTR es:[edi],eax
6401f2c6:	stos   DWORD PTR es:[edi],eax
6401f2c7:	stos   DWORD PTR es:[edi],eax
6401f2c8:	jmp    0x6401f4da
6401f2cd:	cmp    ebx,eax
6401f2cf:	jg     0x6401f4e4
6401f2d5:	sub    eax,DWORD PTR [ebp-0x10]
6401f2d8:	lea    esi,[ebp-0x2c]
6401f2db:	mov    ecx,eax
6401f2dd:	lea    edi,[ebp-0x20]
6401f2e0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
6401f2e1:	cdq    
6401f2e2:	and    edx,0x1f
6401f2e5:	add    eax,edx
6401f2e7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
6401f2e8:	mov    edx,ecx
6401f2ea:	sar    eax,0x5
6401f2ed:	and    edx,0x8000001f
6401f2f3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
6401f2f4:	jns    0x6401f2fb
6401f2f6:	dec    edx
6401f2f7:	or     edx,0xffffffe0
6401f2fa:	inc    edx
6401f2fb:	and    DWORD PTR [ebp-0xc],0x0
6401f2ff:	and    DWORD PTR [ebp+0x8],0x0
6401f303:	or     edi,0xffffffff
6401f306:	mov    ecx,edx
6401f308:	shl    edi,cl
6401f30a:	mov    DWORD PTR [ebp-0x4],0x20
6401f311:	sub    DWORD PTR [ebp-0x4],edx
6401f314:	not    edi
6401f316:	mov    ebx,DWORD PTR [ebp+0x8]
6401f319:	lea    ebx,[ebp+ebx*4-0x20]
6401f31d:	mov    esi,DWORD PTR [ebx]
6401f31f:	mov    ecx,esi
6401f321:	and    ecx,edi
6401f323:	mov    DWORD PTR [ebp-0x10],ecx
6401f326:	mov    ecx,edx
6401f328:	shr    esi,cl
6401f32a:	mov    ecx,DWORD PTR [ebp-0x4]
6401f32d:	or     esi,DWORD PTR [ebp-0xc]
6401f330:	mov    DWORD PTR [ebx],esi
6401f332:	mov    esi,DWORD PTR [ebp-0x10]
6401f335:	shl    esi,cl
6401f337:	inc    DWORD PTR [ebp+0x8]
6401f33a:	cmp    DWORD PTR [ebp+0x8],0x3
6401f33e:	mov    DWORD PTR [ebp-0xc],esi
6401f341:	jl     0x6401f316
6401f343:	mov    esi,eax
6401f345:	push   0x2
6401f347:	shl    esi,0x2
6401f34a:	lea    ecx,[ebp-0x18]
6401f34d:	pop    edx
6401f34e:	sub    ecx,esi
6401f350:	cmp    edx,eax
6401f352:	jl     0x6401f35c
6401f354:	mov    esi,DWORD PTR [ecx]
6401f356:	mov    DWORD PTR [ebp+edx*4-0x20],esi
6401f35a:	jmp    0x6401f361
6401f35c:	and    DWORD PTR [ebp+edx*4-0x20],0x0
6401f361:	dec    edx
6401f362:	sub    ecx,0x4
6401f365:	test   edx,edx
6401f367:	jge    0x6401f350
6401f369:	mov    esi,DWORD PTR ds:0x64053124
6401f36f:	dec    esi
6401f370:	lea    ecx,[esi+0x1]
6401f373:	mov    eax,ecx
6401f375:	cdq    
6401f376:	and    edx,0x1f
6401f379:	add    eax,edx
6401f37b:	sar    eax,0x5
6401f37e:	mov    edx,ecx
6401f380:	and    edx,0x8000001f
6401f386:	mov    DWORD PTR [ebp-0xc],eax
6401f389:	jns    0x6401f390
6401f38b:	dec    edx
6401f38c:	or     edx,0xffffffe0
6401f38f:	inc    edx
6401f390:	push   0x1f
6401f392:	pop    ecx
6401f393:	sub    ecx,edx
6401f395:	xor    edx,edx
6401f397:	inc    edx
6401f398:	shl    edx,cl
6401f39a:	lea    ebx,[ebp+eax*4-0x20]
6401f39e:	mov    DWORD PTR [ebp-0x10],ecx
6401f3a1:	test   DWORD PTR [ebx],edx
6401f3a3:	je     0x6401f42b
6401f3a9:	or     edx,0xffffffff
6401f3ac:	shl    edx,cl
6401f3ae:	not    edx
6401f3b0:	test   DWORD PTR [ebp+eax*4-0x20],edx
6401f3b4:	jmp    0x6401f3bb
6401f3b6:	cmp    DWORD PTR [ebp+eax*4-0x20],0x0
6401f3bb:	jne    0x6401f3c5
6401f3bd:	inc    eax
6401f3be:	cmp    eax,0x3
6401f3c1:	jl     0x6401f3b6
6401f3c3:	jmp    0x6401f42b
6401f3c5:	mov    eax,esi
6401f3c7:	cdq    
6401f3c8:	push   0x1f
6401f3ca:	pop    ecx
6401f3cb:	and    edx,ecx
6401f3cd:	add    eax,edx
6401f3cf:	sar    eax,0x5
6401f3d2:	and    esi,0x8000001f
6401f3d8:	jns    0x6401f3df
6401f3da:	dec    esi
6401f3db:	or     esi,0xffffffe0
6401f3de:	inc    esi
6401f3df:	and    DWORD PTR [ebp+0x8],0x0
6401f3e3:	xor    edx,edx
6401f3e5:	sub    ecx,esi
6401f3e7:	inc    edx
6401f3e8:	shl    edx,cl
6401f3ea:	lea    ecx,[ebp+eax*4-0x20]
6401f3ee:	mov    esi,DWORD PTR [ecx]
6401f3f0:	lea    edi,[esi+edx*1]
6401f3f3:	cmp    edi,esi
6401f3f5:	jb     0x6401f3fb
6401f3f7:	cmp    edi,edx
6401f3f9:	jae    0x6401f402
6401f3fb:	mov    DWORD PTR [ebp+0x8],0x1
6401f402:	mov    DWORD PTR [ecx],edi
6401f404:	mov    ecx,DWORD PTR [ebp+0x8]
6401f407:	jmp    0x6401f428
6401f409:	test   ecx,ecx
6401f40b:	je     0x6401f42b
6401f40d:	lea    ecx,[ebp+eax*4-0x20]
6401f411:	mov    edx,DWORD PTR [ecx]
6401f413:	lea    esi,[edx+0x1]
6401f416:	xor    edi,edi
6401f418:	cmp    esi,edx
6401f41a:	jb     0x6401f421
6401f41c:	cmp    esi,0x1
6401f41f:	jae    0x6401f424
6401f421:	xor    edi,edi
6401f423:	inc    edi
6401f424:	mov    DWORD PTR [ecx],esi
6401f426:	mov    ecx,edi
6401f428:	dec    eax
6401f429:	jns    0x6401f409
6401f42b:	mov    ecx,DWORD PTR [ebp-0x10]
6401f42e:	or     eax,0xffffffff
6401f431:	shl    eax,cl
6401f433:	and    DWORD PTR [ebx],eax
6401f435:	mov    eax,DWORD PTR [ebp-0xc]
6401f438:	inc    eax
6401f439:	cmp    eax,0x3
6401f43c:	jge    0x6401f44b
6401f43e:	push   0x3
6401f440:	pop    ecx
6401f441:	lea    edi,[ebp+eax*4-0x20]
6401f445:	sub    ecx,eax
6401f447:	xor    eax,eax
6401f449:	rep stos DWORD PTR es:[edi],eax
6401f44b:	mov    ecx,DWORD PTR ds:0x64053128
6401f451:	inc    ecx
6401f452:	mov    eax,ecx
6401f454:	cdq    
6401f455:	and    edx,0x1f
6401f458:	add    eax,edx
6401f45a:	mov    edx,ecx
6401f45c:	sar    eax,0x5
6401f45f:	and    edx,0x8000001f
6401f465:	jns    0x6401f46c
6401f467:	dec    edx
6401f468:	or     edx,0xffffffe0
6401f46b:	inc    edx
6401f46c:	and    DWORD PTR [ebp-0xc],0x0
6401f470:	and    DWORD PTR [ebp+0x8],0x0
6401f474:	or     edi,0xffffffff
6401f477:	mov    ecx,edx
6401f479:	shl    edi,cl
6401f47b:	mov    DWORD PTR [ebp-0x4],0x20
6401f482:	sub    DWORD PTR [ebp-0x4],edx
6401f485:	not    edi
6401f487:	mov    ebx,DWORD PTR [ebp+0x8]
6401f48a:	lea    ebx,[ebp+ebx*4-0x20]
6401f48e:	mov    esi,DWORD PTR [ebx]
6401f490:	mov    ecx,esi
6401f492:	and    ecx,edi
6401f494:	mov    DWORD PTR [ebp-0x10],ecx
6401f497:	mov    ecx,edx
6401f499:	shr    esi,cl
6401f49b:	mov    ecx,DWORD PTR [ebp-0x4]
6401f49e:	or     esi,DWORD PTR [ebp-0xc]
6401f4a1:	mov    DWORD PTR [ebx],esi
6401f4a3:	mov    esi,DWORD PTR [ebp-0x10]
6401f4a6:	shl    esi,cl
6401f4a8:	inc    DWORD PTR [ebp+0x8]
6401f4ab:	cmp    DWORD PTR [ebp+0x8],0x3
6401f4af:	mov    DWORD PTR [ebp-0xc],esi
6401f4b2:	jl     0x6401f487
6401f4b4:	mov    esi,eax
6401f4b6:	push   0x2
6401f4b8:	shl    esi,0x2
6401f4bb:	lea    ecx,[ebp-0x18]
6401f4be:	pop    edx
6401f4bf:	sub    ecx,esi
6401f4c1:	cmp    edx,eax
6401f4c3:	jl     0x6401f4cd
6401f4c5:	mov    esi,DWORD PTR [ecx]
6401f4c7:	mov    DWORD PTR [ebp+edx*4-0x20],esi
6401f4cb:	jmp    0x6401f4d2
6401f4cd:	and    DWORD PTR [ebp+edx*4-0x20],0x0
6401f4d2:	dec    edx
6401f4d3:	sub    ecx,0x4
6401f4d6:	test   edx,edx
6401f4d8:	jge    0x6401f4c1
6401f4da:	push   0x2
6401f4dc:	xor    ebx,ebx
6401f4de:	pop    eax
6401f4df:	jmp    0x6401f63e
6401f4e4:	cmp    ebx,DWORD PTR ds:0x6405311c
6401f4ea:	mov    ecx,DWORD PTR ds:0x64053128
6401f4f0:	jl     0x6401f5a3
6401f4f6:	xor    eax,eax
6401f4f8:	lea    edi,[ebp-0x20]
6401f4fb:	stos   DWORD PTR es:[edi],eax
6401f4fc:	stos   DWORD PTR es:[edi],eax
6401f4fd:	stos   DWORD PTR es:[edi],eax
6401f4fe:	or     DWORD PTR [ebp-0x20],0x80000000
6401f505:	mov    eax,ecx
6401f507:	cdq    
6401f508:	and    edx,0x1f
6401f50b:	add    eax,edx
6401f50d:	mov    edx,ecx
6401f50f:	sar    eax,0x5
6401f512:	and    edx,0x8000001f
6401f518:	jns    0x6401f51f
6401f51a:	dec    edx
6401f51b:	or     edx,0xffffffe0
6401f51e:	inc    edx
6401f51f:	and    DWORD PTR [ebp-0xc],0x0
6401f523:	and    DWORD PTR [ebp+0x8],0x0
6401f527:	or     edi,0xffffffff
6401f52a:	mov    ecx,edx
6401f52c:	shl    edi,cl
6401f52e:	mov    DWORD PTR [ebp-0x4],0x20
6401f535:	sub    DWORD PTR [ebp-0x4],edx
6401f538:	not    edi
6401f53a:	mov    ebx,DWORD PTR [ebp+0x8]
6401f53d:	lea    ebx,[ebp+ebx*4-0x20]
6401f541:	mov    esi,DWORD PTR [ebx]
6401f543:	mov    ecx,esi
6401f545:	and    ecx,edi
6401f547:	mov    DWORD PTR [ebp-0x10],ecx
6401f54a:	mov    ecx,edx
6401f54c:	shr    esi,cl
6401f54e:	mov    ecx,DWORD PTR [ebp-0x4]
6401f551:	or     esi,DWORD PTR [ebp-0xc]
6401f554:	mov    DWORD PTR [ebx],esi
6401f556:	mov    esi,DWORD PTR [ebp-0x10]
6401f559:	shl    esi,cl
6401f55b:	inc    DWORD PTR [ebp+0x8]
6401f55e:	cmp    DWORD PTR [ebp+0x8],0x3
6401f562:	mov    DWORD PTR [ebp-0xc],esi
6401f565:	jl     0x6401f53a
6401f567:	mov    esi,eax
6401f569:	push   0x2
6401f56b:	shl    esi,0x2
6401f56e:	lea    ecx,[ebp-0x18]
6401f571:	pop    edx
6401f572:	sub    ecx,esi
6401f574:	cmp    edx,eax
6401f576:	jl     0x6401f580
6401f578:	mov    esi,DWORD PTR [ecx]
6401f57a:	mov    DWORD PTR [ebp+edx*4-0x20],esi
6401f57e:	jmp    0x6401f585
6401f580:	and    DWORD PTR [ebp+edx*4-0x20],0x0
6401f585:	dec    edx
6401f586:	sub    ecx,0x4
6401f589:	test   edx,edx
6401f58b:	jge    0x6401f574
6401f58d:	mov    eax,ds:0x6405311c
6401f592:	mov    ecx,DWORD PTR ds:0x64053130
6401f598:	lea    ebx,[ecx+eax*1]
6401f59b:	xor    eax,eax
6401f59d:	inc    eax
6401f59e:	jmp    0x6401f63e
6401f5a3:	mov    eax,ds:0x64053130
6401f5a8:	and    DWORD PTR [ebp-0x20],0x7fffffff
6401f5af:	add    ebx,eax
6401f5b1:	mov    eax,ecx
6401f5b3:	cdq    
6401f5b4:	and    edx,0x1f
6401f5b7:	add    eax,edx
6401f5b9:	mov    edx,ecx
6401f5bb:	sar    eax,0x5
6401f5be:	and    edx,0x8000001f
6401f5c4:	jns    0x6401f5cb
6401f5c6:	dec    edx
6401f5c7:	or     edx,0xffffffe0
6401f5ca:	inc    edx
6401f5cb:	and    DWORD PTR [ebp-0xc],0x0
6401f5cf:	and    DWORD PTR [ebp+0x8],0x0
6401f5d3:	or     esi,0xffffffff
6401f5d6:	mov    ecx,edx
6401f5d8:	shl    esi,cl
6401f5da:	mov    DWORD PTR [ebp-0x4],0x20
6401f5e1:	sub    DWORD PTR [ebp-0x4],edx
6401f5e4:	not    esi
6401f5e6:	mov    ecx,DWORD PTR [ebp+0x8]
6401f5e9:	mov    edi,DWORD PTR [ebp+ecx*4-0x20]
6401f5ed:	mov    ecx,edi
6401f5ef:	and    ecx,esi
6401f5f1:	mov    DWORD PTR [ebp-0x10],ecx
6401f5f4:	mov    ecx,edx
6401f5f6:	shr    edi,cl
6401f5f8:	mov    ecx,DWORD PTR [ebp+0x8]
6401f5fb:	or     edi,DWORD PTR [ebp-0xc]
6401f5fe:	mov    DWORD PTR [ebp+ecx*4-0x20],edi
6401f602:	mov    edi,DWORD PTR [ebp-0x10]
6401f605:	mov    ecx,DWORD PTR [ebp-0x4]
6401f608:	shl    edi,cl
6401f60a:	inc    DWORD PTR [ebp+0x8]
6401f60d:	cmp    DWORD PTR [ebp+0x8],0x3
6401f611:	mov    DWORD PTR [ebp-0xc],edi
6401f614:	jl     0x6401f5e6
6401f616:	mov    esi,eax
6401f618:	push   0x2
6401f61a:	shl    esi,0x2
6401f61d:	lea    ecx,[ebp-0x18]
6401f620:	pop    edx
6401f621:	sub    ecx,esi
6401f623:	cmp    edx,eax
6401f625:	jl     0x6401f62f
6401f627:	mov    esi,DWORD PTR [ecx]
6401f629:	mov    DWORD PTR [ebp+edx*4-0x20],esi
6401f62d:	jmp    0x6401f634
6401f62f:	and    DWORD PTR [ebp+edx*4-0x20],0x0
6401f634:	dec    edx
6401f635:	sub    ecx,0x4
6401f638:	test   edx,edx
6401f63a:	jge    0x6401f623
6401f63c:	xor    eax,eax
6401f63e:	pop    esi
6401f63f:	push   0x1f
6401f641:	pop    ecx
6401f642:	sub    ecx,DWORD PTR ds:0x64053128
6401f648:	shl    ebx,cl
6401f64a:	mov    ecx,DWORD PTR [ebp-0x14]
6401f64d:	neg    ecx
6401f64f:	sbb    ecx,ecx
6401f651:	and    ecx,0x80000000
6401f657:	or     ebx,ecx
6401f659:	mov    ecx,DWORD PTR ds:0x6405312c
6401f65f:	or     ebx,DWORD PTR [ebp-0x20]
6401f662:	cmp    ecx,0x40
6401f665:	jne    0x6401f674
6401f667:	mov    ecx,DWORD PTR [ebp+0xc]
6401f66a:	mov    edx,DWORD PTR [ebp-0x1c]
6401f66d:	mov    DWORD PTR [ecx+0x4],ebx
6401f670:	mov    DWORD PTR [ecx],edx
6401f672:	jmp    0x6401f67e
6401f674:	cmp    ecx,0x20
6401f677:	jne    0x6401f67e
6401f679:	mov    ecx,DWORD PTR [ebp+0xc]
6401f67c:	mov    DWORD PTR [ecx],ebx
6401f67e:	pop    edi
6401f67f:	pop    ebx
6401f680:	leave  
6401f681:	ret    
6401f682:	push   ebp
6401f683:	mov    ebp,esp
6401f685:	sub    esp,0x2c
6401f688:	mov    eax,DWORD PTR [ebp+0x8]
6401f68b:	movzx  ecx,WORD PTR [eax+0xa]
6401f68f:	push   ebx
6401f690:	mov    ebx,ecx
6401f692:	and    ecx,0x8000
6401f698:	mov    DWORD PTR [ebp-0x14],ecx
6401f69b:	mov    ecx,DWORD PTR [eax+0x6]
6401f69e:	mov    DWORD PTR [ebp-0x20],ecx
6401f6a1:	mov    ecx,DWORD PTR [eax+0x2]
6401f6a4:	movzx  eax,WORD PTR [eax]
6401f6a7:	and    ebx,0x7fff
6401f6ad:	sub    ebx,0x3fff
6401f6b3:	shl    eax,0x10
6401f6b6:	cmp    ebx,0xffffc001
6401f6bc:	push   edi
6401f6bd:	mov    DWORD PTR [ebp-0x1c],ecx
6401f6c0:	mov    DWORD PTR [ebp-0x18],eax
6401f6c3:	jne    0x6401f6ec
6401f6c5:	xor    ebx,ebx
6401f6c7:	xor    eax,eax
6401f6c9:	cmp    DWORD PTR [ebp+eax*4-0x20],ebx
6401f6cd:	jne    0x6401f6dc
6401f6cf:	inc    eax
6401f6d0:	cmp    eax,0x3
6401f6d3:	jl     0x6401f6c9
6401f6d5:	xor    eax,eax
6401f6d7:	jmp    0x6401fb81
6401f6dc:	xor    eax,eax
6401f6de:	lea    edi,[ebp-0x20]
6401f6e1:	stos   DWORD PTR es:[edi],eax
6401f6e2:	stos   DWORD PTR es:[edi],eax
6401f6e3:	push   0x2
6401f6e5:	stos   DWORD PTR es:[edi],eax
6401f6e6:	pop    eax
6401f6e7:	jmp    0x6401fb81
6401f6ec:	and    DWORD PTR [ebp+0x8],0x0
6401f6f0:	push   esi
6401f6f1:	lea    esi,[ebp-0x20]
6401f6f4:	lea    edi,[ebp-0x2c]
6401f6f7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
6401f6f8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
6401f6f9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
6401f6fa:	mov    esi,DWORD PTR ds:0x6405313c
6401f700:	dec    esi
6401f701:	lea    ecx,[esi+0x1]
6401f704:	mov    eax,ecx
6401f706:	cdq    
6401f707:	and    edx,0x1f
6401f70a:	add    eax,edx
6401f70c:	sar    eax,0x5
6401f70f:	mov    edx,ecx
6401f711:	and    edx,0x8000001f
6401f717:	mov    DWORD PTR [ebp-0x10],ebx
6401f71a:	mov    DWORD PTR [ebp-0xc],eax
6401f71d:	jns    0x6401f724
6401f71f:	dec    edx
6401f720:	or     edx,0xffffffe0
6401f723:	inc    edx
6401f724:	lea    edi,[ebp+eax*4-0x20]
6401f728:	push   0x1f
6401f72a:	xor    eax,eax
6401f72c:	pop    ecx
6401f72d:	sub    ecx,edx
6401f72f:	inc    eax
6401f730:	shl    eax,cl
6401f732:	mov    DWORD PTR [ebp-0x8],ecx
6401f735:	test   DWORD PTR [edi],eax
6401f737:	je     0x6401f7ca
6401f73d:	mov    eax,DWORD PTR [ebp-0xc]
6401f740:	or     edx,0xffffffff
6401f743:	shl    edx,cl
6401f745:	not    edx
6401f747:	test   DWORD PTR [ebp+eax*4-0x20],edx
6401f74b:	jmp    0x6401f752
6401f74d:	cmp    DWORD PTR [ebp+eax*4-0x20],0x0
6401f752:	jne    0x6401f75c
6401f754:	inc    eax
6401f755:	cmp    eax,0x3
6401f758:	jl     0x6401f74d
6401f75a:	jmp    0x6401f7ca
6401f75c:	mov    eax,esi
6401f75e:	cdq    
6401f75f:	push   0x1f
6401f761:	pop    ecx
6401f762:	and    edx,ecx
6401f764:	add    eax,edx
6401f766:	sar    eax,0x5
6401f769:	and    esi,0x8000001f
6401f76f:	jns    0x6401f776
6401f771:	dec    esi
6401f772:	or     esi,0xffffffe0
6401f775:	inc    esi
6401f776:	and    DWORD PTR [ebp-0x4],0x0
6401f77a:	sub    ecx,esi
6401f77c:	xor    edx,edx
6401f77e:	inc    edx
6401f77f:	shl    edx,cl
6401f781:	lea    ecx,[ebp+eax*4-0x20]
6401f785:	mov    esi,DWORD PTR [ecx]
6401f787:	add    esi,edx
6401f789:	mov    DWORD PTR [ebp+0x8],esi
6401f78c:	mov    esi,DWORD PTR [ecx]
6401f78e:	cmp    DWORD PTR [ebp+0x8],esi
6401f791:	jb     0x6401f7b5
6401f793:	cmp    DWORD PTR [ebp+0x8],edx
6401f796:	jmp    0x6401f7b3
6401f798:	test   ecx,ecx
6401f79a:	je     0x6401f7c7
6401f79c:	and    DWORD PTR [ebp-0x4],0x0
6401f7a0:	lea    ecx,[ebp+eax*4-0x20]
6401f7a4:	mov    edx,DWORD PTR [ecx]
6401f7a6:	lea    esi,[edx+0x1]
6401f7a9:	cmp    esi,edx
6401f7ab:	mov    DWORD PTR [ebp+0x8],esi
6401f7ae:	jb     0x6401f7b5
6401f7b0:	cmp    esi,0x1
6401f7b3:	jae    0x6401f7bc
6401f7b5:	mov    DWORD PTR [ebp-0x4],0x1
6401f7bc:	dec    eax
6401f7bd:	mov    edx,DWORD PTR [ebp+0x8]
6401f7c0:	mov    DWORD PTR [ecx],edx
6401f7c2:	mov    ecx,DWORD PTR [ebp-0x4]
6401f7c5:	jns    0x6401f798
6401f7c7:	mov    DWORD PTR [ebp+0x8],ecx
6401f7ca:	mov    ecx,DWORD PTR [ebp-0x8]
6401f7cd:	or     eax,0xffffffff
6401f7d0:	shl    eax,cl
6401f7d2:	and    DWORD PTR [edi],eax
6401f7d4:	mov    eax,DWORD PTR [ebp-0xc]
6401f7d7:	inc    eax
6401f7d8:	cmp    eax,0x3
6401f7db:	jge    0x6401f7ea
6401f7dd:	push   0x3
6401f7df:	pop    ecx
6401f7e0:	lea    edi,[ebp+eax*4-0x20]
6401f7e4:	sub    ecx,eax
6401f7e6:	xor    eax,eax
6401f7e8:	rep stos DWORD PTR es:[edi],eax
6401f7ea:	cmp    DWORD PTR [ebp+0x8],0x0
6401f7ee:	je     0x6401f7f1
6401f7f0:	inc    ebx
6401f7f1:	mov    eax,ds:0x64053138
6401f7f6:	mov    ecx,eax
6401f7f8:	sub    ecx,DWORD PTR ds:0x6405313c
6401f7fe:	cmp    ebx,ecx
6401f800:	jge    0x6401f80f
6401f802:	xor    eax,eax
6401f804:	lea    edi,[ebp-0x20]
6401f807:	stos   DWORD PTR es:[edi],eax
6401f808:	stos   DWORD PTR es:[edi],eax
6401f809:	stos   DWORD PTR es:[edi],eax
6401f80a:	jmp    0x6401fa1c
6401f80f:	cmp    ebx,eax
6401f811:	jg     0x6401fa26
6401f817:	sub    eax,DWORD PTR [ebp-0x10]
6401f81a:	lea    esi,[ebp-0x2c]
6401f81d:	mov    ecx,eax
6401f81f:	lea    edi,[ebp-0x20]
6401f822:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
6401f823:	cdq    
6401f824:	and    edx,0x1f
6401f827:	add    eax,edx
6401f829:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
6401f82a:	mov    edx,ecx
6401f82c:	sar    eax,0x5
6401f82f:	and    edx,0x8000001f
6401f835:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
6401f836:	jns    0x6401f83d
6401f838:	dec    edx
6401f839:	or     edx,0xffffffe0
6401f83c:	inc    edx
6401f83d:	and    DWORD PTR [ebp-0xc],0x0
6401f841:	and    DWORD PTR [ebp+0x8],0x0
6401f845:	or     edi,0xffffffff
6401f848:	mov    ecx,edx
6401f84a:	shl    edi,cl
6401f84c:	mov    DWORD PTR [ebp-0x4],0x20
6401f853:	sub    DWORD PTR [ebp-0x4],edx
6401f856:	not    edi
6401f858:	mov    ebx,DWORD PTR [ebp+0x8]
6401f85b:	lea    ebx,[ebp+ebx*4-0x20]
6401f85f:	mov    esi,DWORD PTR [ebx]
6401f861:	mov    ecx,esi
6401f863:	and    ecx,edi
6401f865:	mov    DWORD PTR [ebp-0x10],ecx
6401f868:	mov    ecx,edx
6401f86a:	shr    esi,cl
6401f86c:	mov    ecx,DWORD PTR [ebp-0x4]
6401f86f:	or     esi,DWORD PTR [ebp-0xc]
6401f872:	mov    DWORD PTR [ebx],esi
6401f874:	mov    esi,DWORD PTR [ebp-0x10]
6401f877:	shl    esi,cl
6401f879:	inc    DWORD PTR [ebp+0x8]
6401f87c:	cmp    DWORD PTR [ebp+0x8],0x3
6401f880:	mov    DWORD PTR [ebp-0xc],esi
6401f883:	jl     0x6401f858
6401f885:	mov    esi,eax
6401f887:	push   0x2
6401f889:	shl    esi,0x2
6401f88c:	lea    ecx,[ebp-0x18]
6401f88f:	pop    edx
6401f890:	sub    ecx,esi
6401f892:	cmp    edx,eax
6401f894:	jl     0x6401f89e
6401f896:	mov    esi,DWORD PTR [ecx]
6401f898:	mov    DWORD PTR [ebp+edx*4-0x20],esi
6401f89c:	jmp    0x6401f8a3
6401f89e:	and    DWORD PTR [ebp+edx*4-0x20],0x0
6401f8a3:	dec    edx
6401f8a4:	sub    ecx,0x4
6401f8a7:	test   edx,edx
6401f8a9:	jge    0x6401f892
6401f8ab:	mov    esi,DWORD PTR ds:0x6405313c
6401f8b1:	dec    esi
6401f8b2:	lea    ecx,[esi+0x1]
6401f8b5:	mov    eax,ecx
6401f8b7:	cdq    
6401f8b8:	and    edx,0x1f
6401f8bb:	add    eax,edx
6401f8bd:	sar    eax,0x5
6401f8c0:	mov    edx,ecx
6401f8c2:	and    edx,0x8000001f
6401f8c8:	mov    DWORD PTR [ebp-0xc],eax
6401f8cb:	jns    0x6401f8d2
6401f8cd:	dec    edx
6401f8ce:	or     edx,0xffffffe0
6401f8d1:	inc    edx
6401f8d2:	push   0x1f
6401f8d4:	pop    ecx
6401f8d5:	sub    ecx,edx
6401f8d7:	xor    edx,edx
6401f8d9:	inc    edx
6401f8da:	shl    edx,cl
6401f8dc:	lea    ebx,[ebp+eax*4-0x20]
6401f8e0:	mov    DWORD PTR [ebp-0x10],ecx
6401f8e3:	test   DWORD PTR [ebx],edx
6401f8e5:	je     0x6401f96d
6401f8eb:	or     edx,0xffffffff
6401f8ee:	shl    edx,cl
6401f8f0:	not    edx
6401f8f2:	test   DWORD PTR [ebp+eax*4-0x20],edx
6401f8f6:	jmp    0x6401f8fd
6401f8f8:	cmp    DWORD PTR [ebp+eax*4-0x20],0x0
6401f8fd:	jne    0x6401f907
6401f8ff:	inc    eax
6401f900:	cmp    eax,0x3
6401f903:	jl     0x6401f8f8
6401f905:	jmp    0x6401f96d
6401f907:	mov    eax,esi
6401f909:	cdq    
6401f90a:	push   0x1f
6401f90c:	pop    ecx
6401f90d:	and    edx,ecx
6401f90f:	add    eax,edx
6401f911:	sar    eax,0x5
6401f914:	and    esi,0x8000001f
6401f91a:	jns    0x6401f921
6401f91c:	dec    esi
6401f91d:	or     esi,0xffffffe0
6401f920:	inc    esi
6401f921:	and    DWORD PTR [ebp+0x8],0x0
6401f925:	xor    edx,edx
6401f927:	sub    ecx,esi
6401f929:	inc    edx
6401f92a:	shl    edx,cl
6401f92c:	lea    ecx,[ebp+eax*4-0x20]
6401f930:	mov    esi,DWORD PTR [ecx]
6401f932:	lea    edi,[esi+edx*1]
6401f935:	cmp    edi,esi
6401f937:	jb     0x6401f93d
6401f939:	cmp    edi,edx
6401f93b:	jae    0x6401f944
6401f93d:	mov    DWORD PTR [ebp+0x8],0x1
6401f944:	mov    DWORD PTR [ecx],edi
6401f946:	mov    ecx,DWORD PTR [ebp+0x8]
6401f949:	jmp    0x6401f96a
6401f94b:	test   ecx,ecx
6401f94d:	je     0x6401f96d
6401f94f:	lea    ecx,[ebp+eax*4-0x20]
6401f953:	mov    edx,DWORD PTR [ecx]
6401f955:	lea    esi,[edx+0x1]
6401f958:	xor    edi,edi
6401f95a:	cmp    esi,edx
6401f95c:	jb     0x6401f963
6401f95e:	cmp    esi,0x1
6401f961:	jae    0x6401f966
6401f963:	xor    edi,edi
6401f965:	inc    edi
6401f966:	mov    DWORD PTR [ecx],esi
6401f968:	mov    ecx,edi
6401f96a:	dec    eax
6401f96b:	jns    0x6401f94b
6401f96d:	mov    ecx,DWORD PTR [ebp-0x10]
6401f970:	or     eax,0xffffffff
6401f973:	shl    eax,cl
6401f975:	and    DWORD PTR [ebx],eax
6401f977:	mov    eax,DWORD PTR [ebp-0xc]
6401f97a:	inc    eax
6401f97b:	cmp    eax,0x3
6401f97e:	jge    0x6401f98d
6401f980:	push   0x3
6401f982:	pop    ecx
6401f983:	lea    edi,[ebp+eax*4-0x20]
6401f987:	sub    ecx,eax
6401f989:	xor    eax,eax
6401f98b:	rep stos DWORD PTR es:[edi],eax
6401f98d:	mov    ecx,DWORD PTR ds:0x64053140
6401f993:	inc    ecx
6401f994:	mov    eax,ecx
6401f996:	cdq    
6401f997:	and    edx,0x1f
6401f99a:	add    eax,edx
6401f99c:	mov    edx,ecx
6401f99e:	sar    eax,0x5
6401f9a1:	and    edx,0x8000001f
6401f9a7:	jns    0x6401f9ae
6401f9a9:	dec    edx
6401f9aa:	or     edx,0xffffffe0
6401f9ad:	inc    edx
6401f9ae:	and    DWORD PTR [ebp-0xc],0x0
6401f9b2:	and    DWORD PTR [ebp+0x8],0x0
6401f9b6:	or     edi,0xffffffff
6401f9b9:	mov    ecx,edx
6401f9bb:	shl    edi,cl
6401f9bd:	mov    DWORD PTR [ebp-0x4],0x20
6401f9c4:	sub    DWORD PTR [ebp-0x4],edx
6401f9c7:	not    edi
6401f9c9:	mov    ebx,DWORD PTR [ebp+0x8]
6401f9cc:	lea    ebx,[ebp+ebx*4-0x20]
6401f9d0:	mov    esi,DWORD PTR [ebx]
6401f9d2:	mov    ecx,esi
6401f9d4:	and    ecx,edi
6401f9d6:	mov    DWORD PTR [ebp-0x10],ecx
6401f9d9:	mov    ecx,edx
6401f9db:	shr    esi,cl
6401f9dd:	mov    ecx,DWORD PTR [ebp-0x4]
6401f9e0:	or     esi,DWORD PTR [ebp-0xc]
6401f9e3:	mov    DWORD PTR [ebx],esi
6401f9e5:	mov    esi,DWORD PTR [ebp-0x10]
6401f9e8:	shl    esi,cl
6401f9ea:	inc    DWORD PTR [ebp+0x8]
6401f9ed:	cmp    DWORD PTR [ebp+0x8],0x3
6401f9f1:	mov    DWORD PTR [ebp-0xc],esi
6401f9f4:	jl     0x6401f9c9
6401f9f6:	mov    esi,eax
6401f9f8:	push   0x2
6401f9fa:	shl    esi,0x2
6401f9fd:	lea    ecx,[ebp-0x18]
6401fa00:	pop    edx
6401fa01:	sub    ecx,esi
6401fa03:	cmp    edx,eax
6401fa05:	jl     0x6401fa0f
6401fa07:	mov    esi,DWORD PTR [ecx]
6401fa09:	mov    DWORD PTR [ebp+edx*4-0x20],esi
6401fa0d:	jmp    0x6401fa14
6401fa0f:	and    DWORD PTR [ebp+edx*4-0x20],0x0
6401fa14:	dec    edx
6401fa15:	sub    ecx,0x4
6401fa18:	test   edx,edx
6401fa1a:	jge    0x6401fa03
6401fa1c:	push   0x2
6401fa1e:	xor    ebx,ebx
6401fa20:	pop    eax
6401fa21:	jmp    0x6401fb80
6401fa26:	cmp    ebx,DWORD PTR ds:0x64053134
6401fa2c:	mov    ecx,DWORD PTR ds:0x64053140
6401fa32:	jl     0x6401fae5
6401fa38:	xor    eax,eax
6401fa3a:	lea    edi,[ebp-0x20]
6401fa3d:	stos   DWORD PTR es:[edi],eax
6401fa3e:	stos   DWORD PTR es:[edi],eax
6401fa3f:	stos   DWORD PTR es:[edi],eax
6401fa40:	or     DWORD PTR [ebp-0x20],0x80000000
6401fa47:	mov    eax,ecx
6401fa49:	cdq    
6401fa4a:	and    edx,0x1f
6401fa4d:	add    eax,edx
6401fa4f:	mov    edx,ecx
6401fa51:	sar    eax,0x5
6401fa54:	and    edx,0x8000001f
6401fa5a:	jns    0x6401fa61
6401fa5c:	dec    edx
6401fa5d:	or     edx,0xffffffe0
6401fa60:	inc    edx
6401fa61:	and    DWORD PTR [ebp-0xc],0x0
6401fa65:	and    DWORD PTR [ebp+0x8],0x0
6401fa69:	or     edi,0xffffffff
6401fa6c:	mov    ecx,edx
6401fa6e:	shl    edi,cl
6401fa70:	mov    DWORD PTR [ebp-0x4],0x20
6401fa77:	sub    DWORD PTR [ebp-0x4],edx
6401fa7a:	not    edi
6401fa7c:	mov    ebx,DWORD PTR [ebp+0x8]
6401fa7f:	lea    ebx,[ebp+ebx*4-0x20]
6401fa83:	mov    esi,DWORD PTR [ebx]
6401fa85:	mov    ecx,esi
6401fa87:	and    ecx,edi
6401fa89:	mov    DWORD PTR [ebp-0x10],ecx
6401fa8c:	mov    ecx,edx
6401fa8e:	shr    esi,cl
6401fa90:	mov    ecx,DWORD PTR [ebp-0x4]
6401fa93:	or     esi,DWORD PTR [ebp-0xc]
6401fa96:	mov    DWORD PTR [ebx],esi
6401fa98:	mov    esi,DWORD PTR [ebp-0x10]
6401fa9b:	shl    esi,cl
6401fa9d:	inc    DWORD PTR [ebp+0x8]
6401faa0:	cmp    DWORD PTR [ebp+0x8],0x3
6401faa4:	mov    DWORD PTR [ebp-0xc],esi
6401faa7:	jl     0x6401fa7c
6401faa9:	mov    esi,eax
6401faab:	push   0x2
6401faad:	shl    esi,0x2
6401fab0:	lea    ecx,[ebp-0x18]
6401fab3:	pop    edx
6401fab4:	sub    ecx,esi
6401fab6:	cmp    edx,eax
6401fab8:	jl     0x6401fac2
6401faba:	mov    esi,DWORD PTR [ecx]
6401fabc:	mov    DWORD PTR [ebp+edx*4-0x20],esi
6401fac0:	jmp    0x6401fac7
6401fac2:	and    DWORD PTR [ebp+edx*4-0x20],0x0
6401fac7:	dec    edx
6401fac8:	sub    ecx,0x4
6401facb:	test   edx,edx
6401facd:	jge    0x6401fab6
6401facf:	mov    eax,ds:0x64053134
6401fad4:	mov    ecx,DWORD PTR ds:0x64053148
6401fada:	lea    ebx,[ecx+eax*1]
6401fadd:	xor    eax,eax
6401fadf:	inc    eax
6401fae0:	jmp    0x6401fb80
6401fae5:	mov    eax,ds:0x64053148
6401faea:	and    DWORD PTR [ebp-0x20],0x7fffffff
6401faf1:	add    ebx,eax
6401faf3:	mov    eax,ecx
6401faf5:	cdq    
6401faf6:	and    edx,0x1f
6401faf9:	add    eax,edx
6401fafb:	mov    edx,ecx
6401fafd:	sar    eax,0x5
6401fb00:	and    edx,0x8000001f
6401fb06:	jns    0x6401fb0d
6401fb08:	dec    edx
6401fb09:	or     edx,0xffffffe0
6401fb0c:	inc    edx
6401fb0d:	and    DWORD PTR [ebp-0xc],0x0
6401fb11:	and    DWORD PTR [ebp+0x8],0x0
6401fb15:	or     esi,0xffffffff
6401fb18:	mov    ecx,edx
6401fb1a:	shl    esi,cl
6401fb1c:	mov    DWORD PTR [ebp-0x4],0x20
6401fb23:	sub    DWORD PTR [ebp-0x4],edx
6401fb26:	not    esi
6401fb28:	mov    ecx,DWORD PTR [ebp+0x8]
6401fb2b:	mov    edi,DWORD PTR [ebp+ecx*4-0x20]
6401fb2f:	mov    ecx,edi
6401fb31:	and    ecx,esi
6401fb33:	mov    DWORD PTR [ebp-0x10],ecx
6401fb36:	mov    ecx,edx
6401fb38:	shr    edi,cl
6401fb3a:	mov    ecx,DWORD PTR [ebp+0x8]
6401fb3d:	or     edi,DWORD PTR [ebp-0xc]
6401fb40:	mov    DWORD PTR [ebp+ecx*4-0x20],edi
6401fb44:	mov    edi,DWORD PTR [ebp-0x10]
6401fb47:	mov    ecx,DWORD PTR [ebp-0x4]
6401fb4a:	shl    edi,cl
6401fb4c:	inc    DWORD PTR [ebp+0x8]
6401fb4f:	cmp    DWORD PTR [ebp+0x8],0x3
6401fb53:	mov    DWORD PTR [ebp-0xc],edi
6401fb56:	jl     0x6401fb28
6401fb58:	mov    esi,eax
6401fb5a:	push   0x2
6401fb5c:	shl    esi,0x2
6401fb5f:	lea    ecx,[ebp-0x18]
6401fb62:	pop    edx
6401fb63:	sub    ecx,esi
6401fb65:	cmp    edx,eax
6401fb67:	jl     0x6401fb71
6401fb69:	mov    esi,DWORD PTR [ecx]
6401fb6b:	mov    DWORD PTR [ebp+edx*4-0x20],esi
6401fb6f:	jmp    0x6401fb76
6401fb71:	and    DWORD PTR [ebp+edx*4-0x20],0x0
6401fb76:	dec    edx
6401fb77:	sub    ecx,0x4
6401fb7a:	test   edx,edx
6401fb7c:	jge    0x6401fb65
6401fb7e:	xor    eax,eax
6401fb80:	pop    esi
6401fb81:	push   0x1f
6401fb83:	pop    ecx
6401fb84:	sub    ecx,DWORD PTR ds:0x64053140
6401fb8a:	shl    ebx,cl
6401fb8c:	mov    ecx,DWORD PTR [ebp-0x14]
6401fb8f:	neg    ecx
6401fb91:	sbb    ecx,ecx
6401fb93:	and    ecx,0x80000000
6401fb99:	or     ebx,ecx
6401fb9b:	mov    ecx,DWORD PTR ds:0x64053144
6401fba1:	or     ebx,DWORD PTR [ebp-0x20]
6401fba4:	cmp    ecx,0x40
6401fba7:	jne    0x6401fbb6
6401fba9:	mov    ecx,DWORD PTR [ebp+0xc]
6401fbac:	mov    edx,DWORD PTR [ebp-0x1c]
6401fbaf:	mov    DWORD PTR [ecx+0x4],ebx
6401fbb2:	mov    DWORD PTR [ecx],edx
6401fbb4:	jmp    0x6401fbc0
6401fbb6:	cmp    ecx,0x20
6401fbb9:	jne    0x6401fbc0
6401fbbb:	mov    ecx,DWORD PTR [ebp+0xc]
6401fbbe:	mov    DWORD PTR [ecx],ebx
6401fbc0:	pop    edi
6401fbc1:	pop    ebx
6401fbc2:	leave  
6401fbc3:	ret    
6401fbc4:	push   ebp
6401fbc5:	mov    ebp,esp
6401fbc7:	sub    esp,0x10
6401fbca:	mov    eax,ds:0x640521ac
6401fbcf:	xor    eax,ebp
6401fbd1:	mov    DWORD PTR [ebp-0x4],eax
6401fbd4:	cmp    DWORD PTR [ebp+0x14],0xffffffff
6401fbd8:	push   ebx
6401fbd9:	push   esi
6401fbda:	push   edi
6401fbdb:	jge    0x6401fbe4
6401fbdd:	xor    eax,eax
6401fbdf:	jmp    0x6401fdd6
6401fbe4:	mov    eax,ds:0x64054420
6401fbe9:	mov    esi,DWORD PTR ds:0x6402c138
6401fbef:	xor    ebx,ebx
6401fbf1:	xor    edi,edi
6401fbf3:	inc    ebx
6401fbf4:	cmp    eax,edi
6401fbf6:	jne    0x6401fc2b
6401fbf8:	lea    eax,[ebp-0x8]
6401fbfb:	push   eax
6401fbfc:	push   ebx
6401fbfd:	push   0x64041de4
6401fc02:	push   ebx
6401fc03:	call   esi
6401fc05:	test   eax,eax
6401fc07:	je     0x6401fc11
6401fc09:	mov    DWORD PTR ds:0x64054420,ebx
6401fc0f:	jmp    0x6401fc2f
6401fc11:	call   DWORD PTR ds:0x6402c06c
6401fc17:	cmp    eax,0x78
6401fc1a:	jne    0x6401fc26
6401fc1c:	push   0x2
6401fc1e:	pop    eax
6401fc1f:	mov    ds:0x64054420,eax
6401fc24:	jmp    0x6401fc2b
6401fc26:	mov    eax,ds:0x64054420
6401fc2b:	cmp    eax,ebx
6401fc2d:	jne    0x6401fc42
6401fc2f:	push   DWORD PTR [ebp+0x18]
6401fc32:	push   DWORD PTR [ebp+0x14]
6401fc35:	push   DWORD PTR [ebp+0x10]
6401fc38:	push   DWORD PTR [ebp+0xc]
6401fc3b:	call   esi
6401fc3d:	jmp    0x6401fdd6
6401fc42:	cmp    eax,0x2
6401fc45:	je     0x6401fc4b
6401fc47:	cmp    eax,edi
6401fc49:	jne    0x6401fbdd
6401fc4b:	cmp    DWORD PTR [ebp+0x20],edi
6401fc4e:	mov    DWORD PTR [ebp-0xc],edi
6401fc51:	jne    0x6401fc5e
6401fc53:	mov    eax,DWORD PTR [ebp+0x8]
6401fc56:	mov    eax,DWORD PTR [eax]
6401fc58:	mov    eax,DWORD PTR [eax+0x14]
6401fc5b:	mov    DWORD PTR [ebp+0x20],eax
6401fc5e:	cmp    DWORD PTR [ebp+0x1c],edi
6401fc61:	jne    0x6401fc6e
6401fc63:	mov    eax,DWORD PTR [ebp+0x8]
6401fc66:	mov    eax,DWORD PTR [eax]
6401fc68:	mov    eax,DWORD PTR [eax+0x4]
6401fc6b:	mov    DWORD PTR [ebp+0x1c],eax
6401fc6e:	push   DWORD PTR [ebp+0x20]
6401fc71:	call   0x6401e350
6401fc76:	cmp    DWORD PTR [ebp+0x1c],eax
6401fc79:	pop    ecx
6401fc7a:	je     0x6401fc84
6401fc7c:	cmp    eax,0xffffffff
6401fc7f:	je     0x6401fc84
6401fc81:	mov    DWORD PTR [ebp+0x1c],eax
6401fc84:	mov    ebx,DWORD PTR ds:0x6402c014
6401fc8a:	push   edi
6401fc8b:	push   edi
6401fc8c:	push   edi
6401fc8d:	push   edi
6401fc8e:	push   DWORD PTR [ebp+0x14]
6401fc91:	push   DWORD PTR [ebp+0x10]
6401fc94:	push   edi
6401fc95:	push   DWORD PTR [ebp+0x1c]
6401fc98:	call   ebx
6401fc9a:	mov    esi,eax
6401fc9c:	cmp    esi,edi
6401fc9e:	mov    DWORD PTR [ebp-0x10],esi
6401fca1:	je     0x6401fbdd
6401fca7:	jle    0x6401fce4
6401fca9:	cmp    esi,0xffffffe0
6401fcac:	ja     0x6401fce4
6401fcae:	lea    eax,[esi+0x8]
6401fcb1:	cmp    eax,0x400
6401fcb6:	ja     0x6401fccb
6401fcb8:	call   0x64013d30
6401fcbd:	mov    eax,esp
6401fcbf:	cmp    eax,edi
6401fcc1:	je     0x6401fcdf
6401fcc3:	mov    DWORD PTR [eax],0xcccc
6401fcc9:	jmp    0x6401fcdc
6401fccb:	push   eax
6401fccc:	call   0x640148ce
6401fcd1:	cmp    eax,edi
6401fcd3:	pop    ecx
6401fcd4:	je     0x6401fcdf
6401fcd6:	mov    DWORD PTR [eax],0xdddd
6401fcdc:	add    eax,0x8
6401fcdf:	mov    DWORD PTR [ebp-0x8],eax
6401fce2:	jmp    0x6401fce7
6401fce4:	mov    DWORD PTR [ebp-0x8],edi
6401fce7:	cmp    DWORD PTR [ebp-0x8],edi
6401fcea:	je     0x6401fbdd
6401fcf0:	push   esi
6401fcf1:	push   edi
6401fcf2:	push   DWORD PTR [ebp-0x8]
6401fcf5:	call   0x64015170
6401fcfa:	add    esp,0xc
6401fcfd:	push   edi
6401fcfe:	push   edi
6401fcff:	push   esi
6401fd00:	push   DWORD PTR [ebp-0x8]
6401fd03:	push   DWORD PTR [ebp+0x14]
6401fd06:	push   DWORD PTR [ebp+0x10]
6401fd09:	push   edi
6401fd0a:	push   DWORD PTR [ebp+0x1c]
6401fd0d:	call   ebx
6401fd0f:	test   eax,eax
6401fd11:	je     0x6401fdca
6401fd17:	lea    eax,[esi+0x1]
6401fd1a:	cmp    eax,edi
6401fd1c:	jle    0x6401fd62
6401fd1e:	cmp    eax,0x7ffffff0
6401fd23:	ja     0x6401fd62
6401fd25:	lea    eax,[esi+esi*1+0xa]
6401fd29:	cmp    eax,0x400
6401fd2e:	ja     0x6401fd4a
6401fd30:	call   0x64013d30
6401fd35:	mov    ebx,esp
6401fd37:	cmp    ebx,edi
6401fd39:	je     0x6401fdca
6401fd3f:	mov    DWORD PTR [ebx],0xcccc
6401fd45:	add    ebx,0x8
6401fd48:	jmp    0x6401fd64
6401fd4a:	push   eax
6401fd4b:	call   0x640148ce
6401fd50:	cmp    eax,edi
6401fd52:	pop    ecx
6401fd53:	je     0x6401fd5e
6401fd55:	mov    DWORD PTR [eax],0xdddd
6401fd5b:	add    eax,0x8
6401fd5e:	mov    ebx,eax
6401fd60:	jmp    0x6401fd64
6401fd62:	xor    ebx,ebx
6401fd64:	cmp    ebx,edi
6401fd66:	je     0x6401fdca
6401fd68:	cmp    DWORD PTR [ebp+0x20],edi
6401fd6b:	jne    0x6401fd78
6401fd6d:	mov    eax,DWORD PTR [ebp+0x8]
6401fd70:	mov    eax,DWORD PTR [eax]
6401fd72:	mov    eax,DWORD PTR [eax+0x14]
6401fd75:	mov    DWORD PTR [ebp+0x20],eax
6401fd78:	mov    edi,DWORD PTR [ebp+0x14]
6401fd7b:	push   ebx
6401fd7c:	push   DWORD PTR [ebp-0x10]
6401fd7f:	add    edi,edi
6401fd81:	push   DWORD PTR [ebp-0x8]
6401fd84:	lea    esi,[edi+ebx*1]
6401fd87:	push   DWORD PTR [ebp+0xc]
6401fd8a:	or     WORD PTR [esi],0xffff
6401fd8f:	push   DWORD PTR [ebp+0x20]
6401fd92:	or     WORD PTR [esi-0x2],0xffff
6401fd98:	call   DWORD PTR ds:0x6402c134
6401fd9e:	cmp    WORD PTR [esi-0x2],0xffff
6401fda4:	mov    DWORD PTR [ebp-0xc],eax
6401fda7:	je     0x6401fdbf
6401fda9:	cmp    WORD PTR [esi],0xffff
6401fdae:	jne    0x6401fdbf
6401fdb0:	push   edi
6401fdb1:	push   ebx
6401fdb2:	push   DWORD PTR [ebp+0x18]
6401fdb5:	call   0x64016720
6401fdba:	add    esp,0xc
6401fdbd:	jmp    0x6401fdc3
6401fdbf:	and    DWORD PTR [ebp-0xc],0x0
6401fdc3:	push   ebx
6401fdc4:	call   0x6401431a
6401fdc9:	pop    ecx
6401fdca:	push   DWORD PTR [ebp-0x8]
6401fdcd:	call   0x6401431a
6401fdd2:	mov    eax,DWORD PTR [ebp-0xc]
6401fdd5:	pop    ecx
6401fdd6:	lea    esp,[ebp-0x1c]
6401fdd9:	pop    edi
6401fdda:	pop    esi
6401fddb:	pop    ebx
6401fddc:	mov    ecx,DWORD PTR [ebp-0x4]
6401fddf:	xor    ecx,ebp
6401fde1:	call   0x64013d18
6401fde6:	leave  
6401fde7:	ret    
6401fde8:	push   ebp
6401fde9:	mov    ebp,esp
6401fdeb:	sub    esp,0x10
6401fdee:	push   DWORD PTR [ebp+0x8]
6401fdf1:	lea    ecx,[ebp-0x10]
6401fdf4:	call   0x64014335
6401fdf9:	push   DWORD PTR [ebp+0x20]
6401fdfc:	lea    eax,[ebp-0x10]
6401fdff:	push   DWORD PTR [ebp+0x1c]
6401fe02:	push   DWORD PTR [ebp+0x18]
6401fe05:	push   DWORD PTR [ebp+0x14]
6401fe08:	push   DWORD PTR [ebp+0x10]
6401fe0b:	push   DWORD PTR [ebp+0xc]
6401fe0e:	push   eax
6401fe0f:	call   0x6401fbc4
6401fe14:	add    esp,0x1c
6401fe17:	cmp    BYTE PTR [ebp-0x4],0x0
6401fe1b:	je     0x6401fe24
6401fe1d:	mov    ecx,DWORD PTR [ebp-0x8]
6401fe20:	and    DWORD PTR [ecx+0x70],0xfffffffd
6401fe24:	leave  
6401fe25:	ret    
6401fe26:	push   ebp
6401fe27:	mov    ebp,esp
6401fe29:	sub    esp,0x10
6401fe2c:	push   esi
6401fe2d:	push   DWORD PTR [ebp+0xc]
6401fe30:	lea    ecx,[ebp-0x10]
6401fe33:	call   0x64014335
6401fe38:	mov    esi,DWORD PTR [ebp+0x8]
6401fe3b:	movsx  eax,BYTE PTR [esi]
6401fe3e:	push   eax
6401fe3f:	call   0x64014ddc
6401fe44:	cmp    eax,0x65
6401fe47:	jmp    0x6401fe55
6401fe49:	inc    esi
6401fe4a:	movzx  eax,BYTE PTR [esi]
6401fe4d:	push   eax
6401fe4e:	call   0x640147a6
6401fe53:	test   eax,eax
6401fe55:	pop    ecx
6401fe56:	jne    0x6401fe49
6401fe58:	movsx  eax,BYTE PTR [esi]
6401fe5b:	push   eax
6401fe5c:	call   0x64014ddc
6401fe61:	cmp    eax,0x78
6401fe64:	pop    ecx
6401fe65:	jne    0x6401fe69
6401fe67:	inc    esi
6401fe68:	inc    esi
6401fe69:	mov    ecx,DWORD PTR [ebp-0x10]
6401fe6c:	mov    ecx,DWORD PTR [ecx+0xbc]
6401fe72:	mov    ecx,DWORD PTR [ecx]
6401fe74:	mov    al,BYTE PTR [esi]
6401fe76:	mov    cl,BYTE PTR [ecx]
6401fe78:	mov    BYTE PTR [esi],cl
6401fe7a:	inc    esi
6401fe7b:	mov    cl,BYTE PTR [esi]
6401fe7d:	mov    BYTE PTR [esi],al
6401fe7f:	mov    al,cl
6401fe81:	mov    cl,BYTE PTR [esi]
6401fe83:	inc    esi
6401fe84:	test   cl,cl
6401fe86:	jne    0x6401fe7b
6401fe88:	cmp    BYTE PTR [ebp-0x4],cl
6401fe8b:	pop    esi
6401fe8c:	je     0x6401fe95
6401fe8e:	mov    eax,DWORD PTR [ebp-0x8]
6401fe91:	and    DWORD PTR [eax+0x70],0xfffffffd
6401fe95:	leave  
6401fe96:	ret    
6401fe97:	push   ebp
6401fe98:	mov    ebp,esp
6401fe9a:	sub    esp,0x10
6401fe9d:	push   esi
6401fe9e:	push   DWORD PTR [ebp+0xc]
6401fea1:	lea    ecx,[ebp-0x10]
6401fea4:	call   0x64014335
6401fea9:	mov    eax,DWORD PTR [ebp+0x8]
6401feac:	mov    cl,BYTE PTR [eax]
6401feae:	test   cl,cl
6401feb0:	mov    esi,DWORD PTR [ebp-0x10]
6401feb3:	je     0x6401feca
6401feb5:	mov    edx,DWORD PTR [esi+0xbc]
6401febb:	mov    edx,DWORD PTR [edx]
6401febd:	mov    dl,BYTE PTR [edx]
6401febf:	cmp    cl,dl
6401fec1:	je     0x6401feca
6401fec3:	inc    eax
6401fec4:	mov    cl,BYTE PTR [eax]
6401fec6:	test   cl,cl
6401fec8:	jne    0x6401febf
6401feca:	mov    cl,BYTE PTR [eax]
6401fecc:	inc    eax
6401fecd:	test   cl,cl
6401fecf:	je     0x6401ff07
6401fed1:	jmp    0x6401fede
6401fed3:	cmp    cl,0x65
6401fed6:	je     0x6401fee4
6401fed8:	cmp    cl,0x45
6401fedb:	je     0x6401fee4
6401fedd:	inc    eax
6401fede:	mov    cl,BYTE PTR [eax]
6401fee0:	test   cl,cl
6401fee2:	jne    0x6401fed3
6401fee4:	mov    edx,eax
6401fee6:	dec    eax
6401fee7:	cmp    BYTE PTR [eax],0x30
6401feea:	je     0x6401fee6
6401feec:	mov    ecx,DWORD PTR [esi+0xbc]
6401fef2:	mov    ecx,DWORD PTR [ecx]
6401fef4:	push   ebx
6401fef5:	mov    bl,BYTE PTR [eax]
6401fef7:	cmp    bl,BYTE PTR [ecx]
6401fef9:	pop    ebx
6401fefa:	jne    0x6401fefd
6401fefc:	dec    eax
6401fefd:	mov    cl,BYTE PTR [edx]
6401feff:	inc    eax
6401ff00:	inc    edx
6401ff01:	test   cl,cl
6401ff03:	mov    BYTE PTR [eax],cl
6401ff05:	jne    0x6401fefd
6401ff07:	cmp    BYTE PTR [ebp-0x4],0x0
6401ff0b:	pop    esi
6401ff0c:	je     0x6401ff15
6401ff0e:	mov    eax,DWORD PTR [ebp-0x8]
6401ff11:	and    DWORD PTR [eax+0x70],0xfffffffd
6401ff15:	leave  
6401ff16:	ret    
6401ff17:	fldz   
6401ff19:	mov    eax,DWORD PTR [esp+0x4]
6401ff1d:	fcomp  QWORD PTR [eax]
6401ff1f:	fnstsw ax
6401ff21:	test   ah,0x41
6401ff24:	jp     0x6401ff2a
6401ff26:	xor    eax,eax
6401ff28:	inc    eax
6401ff29:	ret    
6401ff2a:	xor    eax,eax
6401ff2c:	ret    
6401ff2d:	push   ebp
6401ff2e:	mov    ebp,esp
6401ff30:	push   ecx
6401ff31:	push   ecx
6401ff32:	cmp    DWORD PTR [ebp+0x8],0x0
6401ff36:	push   DWORD PTR [ebp+0x14]
6401ff39:	push   DWORD PTR [ebp+0x10]
6401ff3c:	je     0x6401ff57
6401ff3e:	lea    eax,[ebp-0x8]
6401ff41:	push   eax
6401ff42:	call   0x64021205
6401ff47:	mov    ecx,DWORD PTR [ebp-0x8]
6401ff4a:	mov    eax,DWORD PTR [ebp+0xc]
6401ff4d:	mov    DWORD PTR [eax],ecx
6401ff4f:	mov    ecx,DWORD PTR [ebp-0x4]
6401ff52:	mov    DWORD PTR [eax+0x4],ecx
6401ff55:	jmp    0x6401ff68
6401ff57:	lea    eax,[ebp+0x8]
6401ff5a:	push   eax
6401ff5b:	call   0x640212ab
6401ff60:	mov    eax,DWORD PTR [ebp+0xc]
6401ff63:	mov    ecx,DWORD PTR [ebp+0x8]
6401ff66:	mov    DWORD PTR [eax],ecx
6401ff68:	add    esp,0xc
6401ff6b:	leave  
6401ff6c:	ret    
6401ff6d:	push   0x0
6401ff6f:	push   DWORD PTR [esp+0x10]
6401ff73:	push   DWORD PTR [esp+0x10]
6401ff77:	push   DWORD PTR [esp+0x10]
6401ff7b:	call   0x6401ff2d
6401ff80:	add    esp,0x10
6401ff83:	ret    
6401ff84:	test   edi,edi
6401ff86:	push   esi
6401ff87:	mov    esi,eax
6401ff89:	je     0x6401ff9f
6401ff8b:	push   esi
6401ff8c:	call   0x64015b10
6401ff91:	inc    eax
6401ff92:	push   eax
6401ff93:	push   esi
6401ff94:	add    esi,edi
6401ff96:	push   esi
6401ff97:	call   0x64016720
6401ff9c:	add    esp,0x10
6401ff9f:	pop    esi
6401ffa0:	ret    
6401ffa1:	push   0x0
6401ffa3:	push   DWORD PTR [esp+0x8]
6401ffa7:	call   0x6401fe26
6401ffac:	pop    ecx
6401ffad:	pop    ecx
6401ffae:	ret    
6401ffaf:	push   0x0
6401ffb1:	push   DWORD PTR [esp+0x8]
6401ffb5:	call   0x6401fe97
6401ffba:	pop    ecx
6401ffbb:	pop    ecx
6401ffbc:	ret    
6401ffbd:	push   ebp
6401ffbe:	mov    ebp,esp
6401ffc0:	sub    esp,0x10
6401ffc3:	push   ebx
6401ffc4:	push   esi
6401ffc5:	push   edi
6401ffc6:	push   DWORD PTR [ebp+0x1c]
6401ffc9:	lea    ecx,[ebp-0x10]
6401ffcc:	mov    ebx,eax
6401ffce:	call   0x64014335
6401ffd3:	xor    esi,esi
6401ffd5:	cmp    ebx,esi
6401ffd7:	jne    0x64020004
6401ffd9:	call   0x640166d3
6401ffde:	push   0x16
6401ffe0:	pop    edi
6401ffe1:	push   esi
6401ffe2:	push   esi
6401ffe3:	push   esi
6401ffe4:	push   esi
6401ffe5:	push   esi
6401ffe6:	mov    DWORD PTR [eax],edi
6401ffe8:	call   0x64013e62
6401ffed:	add    esp,0x14
6401fff0:	cmp    BYTE PTR [ebp-0x4],0x0
6401fff4:	je     0x6401fffd
6401fff6:	mov    eax,DWORD PTR [ebp-0x8]
6401fff9:	and    DWORD PTR [eax+0x70],0xfffffffd
6401fffd:	mov    eax,edi
6401ffff:	jmp    0x64020125
64020004:	cmp    DWORD PTR [ebp+0x8],esi
64020007:	jbe    0x6401ffd9
64020009:	cmp    DWORD PTR [ebp+0xc],esi
6402000c:	jle    0x64020013
6402000e:	mov    eax,DWORD PTR [ebp+0xc]
64020011:	jmp    0x64020015
64020013:	xor    eax,eax
64020015:	add    eax,0x9
64020018:	cmp    DWORD PTR [ebp+0x8],eax
6402001b:	ja     0x64020026
6402001d:	call   0x640166d3
64020022:	push   0x22
64020024:	jmp    0x6401ffe0
64020026:	cmp    BYTE PTR [ebp+0x18],0x0
6402002a:	je     0x6402004a
6402002c:	mov    edx,DWORD PTR [ebp+0x14]
6402002f:	xor    eax,eax
64020031:	cmp    DWORD PTR [ebp+0xc],esi
64020034:	setg   al
64020037:	xor    ecx,ecx
64020039:	cmp    DWORD PTR [edx],0x2d
6402003c:	sete   cl
6402003f:	mov    edi,eax
64020041:	add    ecx,ebx
64020043:	mov    eax,ecx
64020045:	call   0x6401ff84
6402004a:	mov    edi,DWORD PTR [ebp+0x14]
6402004d:	cmp    DWORD PTR [edi],0x2d
64020050:	mov    esi,ebx
64020052:	jne    0x6402005a
64020054:	mov    BYTE PTR [ebx],0x2d
64020057:	lea    esi,[ebx+0x1]
6402005a:	cmp    DWORD PTR [ebp+0xc],0x0
6402005e:	jle    0x64020078
64020060:	lea    eax,[esi+0x1]
64020063:	mov    cl,BYTE PTR [eax]
64020065:	mov    BYTE PTR [esi],cl
64020067:	mov    esi,eax
64020069:	mov    eax,DWORD PTR [ebp-0x10]
6402006c:	mov    eax,DWORD PTR [eax+0xbc]
64020072:	mov    eax,DWORD PTR [eax]
64020074:	mov    al,BYTE PTR [eax]
64020076:	mov    BYTE PTR [esi],al
64020078:	xor    eax,eax
6402007a:	cmp    BYTE PTR [ebp+0x18],al
6402007d:	sete   al
64020080:	add    eax,DWORD PTR [ebp+0xc]
64020083:	add    esi,eax
64020085:	cmp    DWORD PTR [ebp+0x8],0xffffffff
64020089:	jne    0x64020090
6402008b:	or     ebx,0xffffffff
6402008e:	jmp    0x64020095
64020090:	sub    ebx,esi
64020092:	add    ebx,DWORD PTR [ebp+0x8]
64020095:	push   0x64041920
6402009a:	push   ebx
6402009b:	push   esi
6402009c:	call   0x6401652d
640200a1:	add    esp,0xc
640200a4:	xor    ebx,ebx
640200a6:	test   eax,eax
640200a8:	je     0x640200b7
640200aa:	push   ebx
640200ab:	push   ebx
640200ac:	push   ebx
640200ad:	push   ebx
640200ae:	push   ebx
640200af:	call   0x64013d66
640200b4:	add    esp,0x14
640200b7:	cmp    DWORD PTR [ebp+0x10],ebx
640200ba:	lea    ecx,[esi+0x2]
640200bd:	je     0x640200c2
640200bf:	mov    BYTE PTR [esi],0x45
640200c2:	mov    eax,DWORD PTR [edi+0xc]
640200c5:	inc    esi
640200c6:	cmp    BYTE PTR [eax],0x30
640200c9:	je     0x640200f9
640200cb:	mov    eax,DWORD PTR [edi+0x4]
640200ce:	dec    eax
640200cf:	jns    0x640200d6
640200d1:	neg    eax
640200d3:	mov    BYTE PTR [esi],0x2d
640200d6:	inc    esi
640200d7:	cmp    eax,0x64
640200da:	jl     0x640200e6
640200dc:	cdq    
640200dd:	push   0x64
640200df:	pop    edi
640200e0:	idiv   edi
640200e2:	add    BYTE PTR [esi],al
640200e4:	mov    eax,edx
640200e6:	inc    esi
640200e7:	cmp    eax,0xa
640200ea:	jl     0x640200f6
640200ec:	cdq    
640200ed:	push   0xa
640200ef:	pop    edi
640200f0:	idiv   edi
640200f2:	add    BYTE PTR [esi],al
640200f4:	mov    eax,edx
640200f6:	add    BYTE PTR [esi+0x1],al
640200f9:	test   BYTE PTR ds:0x640544ec,0x1
64020100:	je     0x64020116
64020102:	cmp    BYTE PTR [ecx],0x30
64020105:	jne    0x64020116
64020107:	push   0x3
64020109:	lea    eax,[ecx+0x1]
6402010c:	push   eax
6402010d:	push   ecx
6402010e:	call   0x64016720
64020113:	add    esp,0xc
64020116:	cmp    BYTE PTR [ebp-0x4],0x0
6402011a:	je     0x64020123
6402011c:	mov    eax,DWORD PTR [ebp-0x8]
6402011f:	and    DWORD PTR [eax+0x70],0xfffffffd
64020123:	xor    eax,eax
64020125:	pop    edi
64020126:	pop    esi
64020127:	pop    ebx
64020128:	leave  
64020129:	ret    
6402012a:	push   ebp
6402012b:	mov    ebp,esp
6402012d:	sub    esp,0x2c
64020130:	mov    eax,ds:0x640521ac
64020135:	xor    eax,ebp
64020137:	mov    DWORD PTR [ebp-0x4],eax
6402013a:	mov    eax,DWORD PTR [ebp+0x8]
6402013d:	push   ebx
6402013e:	push   esi
6402013f:	push   edi
64020140:	mov    edi,DWORD PTR [ebp+0xc]
64020143:	push   0x16
64020145:	pop    esi
64020146:	push   esi
64020147:	lea    ecx,[ebp-0x1c]
6402014a:	push   ecx
6402014b:	lea    ecx,[ebp-0x2c]
6402014e:	push   ecx
6402014f:	push   DWORD PTR [eax+0x4]
64020152:	push   DWORD PTR [eax]
64020154:	call   0x640214c9
64020159:	xor    ebx,ebx
6402015b:	add    esp,0x14
6402015e:	cmp    edi,ebx
64020160:	jne    0x6402017a
64020162:	call   0x640166d3
64020167:	push   ebx
64020168:	push   ebx
64020169:	push   ebx
6402016a:	push   ebx
6402016b:	push   ebx
6402016c:	mov    DWORD PTR [eax],esi
6402016e:	call   0x64013e62
64020173:	add    esp,0x14
64020176:	mov    eax,esi
64020178:	jmp    0x640201e9
6402017a:	mov    eax,DWORD PTR [ebp+0x10]
6402017d:	cmp    eax,ebx
6402017f:	jbe    0x64020162
64020181:	cmp    eax,0xffffffff
64020184:	mov    esi,DWORD PTR [ebp+0x14]
64020187:	jne    0x6402018e
64020189:	or     eax,0xffffffff
6402018c:	jmp    0x640201a2
6402018e:	xor    ecx,ecx
64020190:	cmp    DWORD PTR [ebp-0x2c],0x2d
64020194:	sete   cl
64020197:	sub    eax,ecx
64020199:	xor    ecx,ecx
6402019b:	cmp    esi,ebx
6402019d:	setg   cl
640201a0:	sub    eax,ecx
640201a2:	lea    ecx,[ebp-0x2c]
640201a5:	push   ecx
640201a6:	lea    ecx,[esi+0x1]
640201a9:	push   ecx
640201aa:	push   eax
640201ab:	xor    eax,eax
640201ad:	cmp    DWORD PTR [ebp-0x2c],0x2d
640201b1:	sete   al
640201b4:	xor    ecx,ecx
640201b6:	cmp    esi,ebx
640201b8:	setg   cl
640201bb:	add    eax,edi
640201bd:	add    ecx,eax
640201bf:	push   ecx
640201c0:	call   0x64021351
640201c5:	add    esp,0x10
640201c8:	cmp    eax,ebx
640201ca:	je     0x640201d0
640201cc:	mov    BYTE PTR [edi],bl
640201ce:	jmp    0x640201e9
640201d0:	push   DWORD PTR [ebp+0x1c]
640201d3:	lea    eax,[ebp-0x2c]
640201d6:	push   ebx
640201d7:	push   eax
640201d8:	push   DWORD PTR [ebp+0x18]
640201db:	mov    eax,edi
640201dd:	push   esi
640201de:	push   DWORD PTR [ebp+0x10]
640201e1:	call   0x6401ffbd
640201e6:	add    esp,0x18
640201e9:	mov    ecx,DWORD PTR [ebp-0x4]
640201ec:	pop    edi
640201ed:	pop    esi
640201ee:	xor    ecx,ebp
640201f0:	pop    ebx
640201f1:	call   0x64013d18
640201f6:	leave  
640201f7:	ret    
640201f8:	push   ebp
640201f9:	mov    ebp,esp
640201fb:	push   0x0
640201fd:	push   DWORD PTR [ebp+0x18]
64020200:	push   DWORD PTR [ebp+0x14]
64020203:	push   DWORD PTR [ebp+0x10]
64020206:	push   DWORD PTR [ebp+0xc]
64020209:	push   DWORD PTR [ebp+0x8]
6402020c:	call   0x6402012a
64020211:	add    esp,0x18
64020214:	pop    ebp
64020215:	ret    
64020216:	push   ebp
64020217:	mov    ebp,esp
64020219:	sub    esp,0x24
6402021c:	push   esi
6402021d:	push   edi
6402021e:	push   DWORD PTR [ebp+0x1c]
64020221:	lea    ecx,[ebp-0x24]
64020224:	mov    DWORD PTR [ebp-0x14],0x3ff
6402022b:	xor    edi,edi
6402022d:	mov    DWORD PTR [ebp-0x4],0x30
64020234:	call   0x64014335
64020239:	cmp    DWORD PTR [ebp+0x14],edi
6402023c:	jge    0x64020241
6402023e:	mov    DWORD PTR [ebp+0x14],edi
64020241:	mov    esi,DWORD PTR [ebp+0xc]
64020244:	cmp    esi,edi
64020246:	jne    0x64020273
64020248:	call   0x640166d3
6402024d:	push   0x16
6402024f:	pop    esi
64020250:	push   edi
64020251:	push   edi
64020252:	push   edi
64020253:	push   edi
64020254:	push   edi
64020255:	mov    DWORD PTR [eax],esi
64020257:	call   0x64013e62
6402025c:	add    esp,0x14
6402025f:	cmp    BYTE PTR [ebp-0x18],0x0
64020263:	je     0x6402026c
64020265:	mov    eax,DWORD PTR [ebp-0x1c]
64020268:	and    DWORD PTR [eax+0x70],0xfffffffd
6402026c:	mov    eax,esi
6402026e:	jmp    0x64020583
64020273:	cmp    DWORD PTR [ebp+0x10],edi
64020276:	jbe    0x64020248
64020278:	mov    eax,DWORD PTR [ebp+0x14]
6402027b:	add    eax,0xb
6402027e:	cmp    DWORD PTR [ebp+0x10],eax
64020281:	mov    BYTE PTR [esi],0x0
64020284:	ja     0x6402028f
64020286:	call   0x640166d3
6402028b:	push   0x22
6402028d:	jmp    0x6402024f
6402028f:	mov    edi,DWORD PTR [ebp+0x8]
64020292:	mov    eax,DWORD PTR [edi]
64020294:	mov    DWORD PTR [ebp-0xc],eax
64020297:	mov    eax,DWORD PTR [edi+0x4]
6402029a:	mov    ecx,eax
6402029c:	shr    ecx,0x14
6402029f:	mov    edx,0x7ff
640202a4:	push   ebx
640202a5:	and    ecx,edx
640202a7:	xor    ebx,ebx
640202a9:	cmp    ecx,edx
640202ab:	jne    0x64020341
640202b1:	test   ebx,ebx
640202b3:	jne    0x64020341
640202b9:	mov    eax,DWORD PTR [ebp+0x10]
640202bc:	cmp    eax,0xffffffff
640202bf:	jne    0x640202c5
640202c1:	or     eax,eax
640202c3:	jmp    0x640202c8
640202c5:	add    eax,0xfffffffe
640202c8:	push   0x0
640202ca:	push   DWORD PTR [ebp+0x14]
640202cd:	lea    ebx,[esi+0x2]
640202d0:	push   eax
640202d1:	push   ebx
640202d2:	push   edi
640202d3:	call   0x640201f8
640202d8:	add    esp,0x14
640202db:	test   eax,eax
640202dd:	je     0x640202f8
640202df:	cmp    BYTE PTR [ebp-0x18],0x0
640202e3:	mov    BYTE PTR [esi],0x0
640202e6:	je     0x64020582
640202ec:	mov    ecx,DWORD PTR [ebp-0x1c]
640202ef:	and    DWORD PTR [ecx+0x70],0xfffffffd
640202f3:	jmp    0x64020582
640202f8:	cmp    BYTE PTR [ebx],0x2d
640202fb:	jne    0x64020301
640202fd:	mov    BYTE PTR [esi],0x2d
64020300:	inc    esi
64020301:	mov    BYTE PTR [esi],0x30
64020304:	inc    esi
64020305:	cmp    DWORD PTR [ebp+0x18],0x0
64020309:	push   0x65
6402030b:	sete   al
6402030e:	dec    al
64020310:	and    al,0xe0
64020312:	add    al,0x78
64020314:	mov    BYTE PTR [esi],al
64020316:	inc    esi
64020317:	push   esi
64020318:	call   0x6401bfd0
6402031d:	test   eax,eax
6402031f:	pop    ecx
64020320:	pop    ecx
64020321:	je     0x64020573
64020327:	cmp    DWORD PTR [ebp+0x18],0x0
6402032b:	sete   cl
6402032e:	dec    cl
64020330:	and    cl,0xe0
64020333:	add    cl,0x70
64020336:	mov    BYTE PTR [eax],cl
64020338:	mov    BYTE PTR [eax+0x3],0x0
6402033c:	jmp    0x64020573
64020341:	and    eax,0x80000000
64020346:	xor    ecx,ecx
64020348:	or     ecx,eax
6402034a:	je     0x64020350
6402034c:	mov    BYTE PTR [esi],0x2d
6402034f:	inc    esi
64020350:	mov    ebx,DWORD PTR [ebp+0x18]
64020353:	mov    BYTE PTR [esi],0x30
64020356:	inc    esi
64020357:	test   ebx,ebx
64020359:	sete   al
6402035c:	dec    al
6402035e:	and    al,0xe0
64020360:	add    al,0x78
64020362:	mov    BYTE PTR [esi],al
64020364:	mov    ecx,DWORD PTR [edi+0x4]
64020367:	inc    esi
64020368:	neg    ebx
6402036a:	sbb    ebx,ebx
6402036c:	and    ebx,0xffffffe0
6402036f:	and    ecx,0x7ff00000
64020375:	xor    eax,eax
64020377:	add    ebx,0x27
6402037a:	xor    edx,edx
6402037c:	or     eax,ecx
6402037e:	jne    0x640203a1
64020380:	mov    BYTE PTR [esi],0x30
64020383:	mov    ecx,DWORD PTR [edi+0x4]
64020386:	mov    eax,DWORD PTR [edi]
64020388:	and    ecx,0xfffff
6402038e:	inc    esi
6402038f:	or     eax,ecx
64020391:	jne    0x64020398
64020393:	mov    DWORD PTR [ebp-0x14],edx
64020396:	jmp    0x640203a5
64020398:	mov    DWORD PTR [ebp-0x14],0x3fe
6402039f:	jmp    0x640203a5
640203a1:	mov    BYTE PTR [esi],0x31
640203a4:	inc    esi
640203a5:	mov    eax,esi
640203a7:	inc    esi
640203a8:	cmp    DWORD PTR [ebp+0x14],edx
640203ab:	mov    DWORD PTR [ebp+0xc],eax
640203ae:	jne    0x640203b4
640203b0:	mov    BYTE PTR [eax],dl
640203b2:	jmp    0x640203c3
640203b4:	mov    ecx,DWORD PTR [ebp-0x24]
640203b7:	mov    ecx,DWORD PTR [ecx+0xbc]
640203bd:	mov    ecx,DWORD PTR [ecx]
640203bf:	mov    cl,BYTE PTR [ecx]
640203c1:	mov    BYTE PTR [eax],cl
640203c3:	mov    ecx,DWORD PTR [edi+0x4]
640203c6:	mov    eax,DWORD PTR [edi]
640203c8:	and    ecx,0xfffff
640203ce:	mov    DWORD PTR [ebp-0x8],ecx
640203d1:	ja     0x640203db
640203d3:	cmp    eax,edx
640203d5:	jbe    0x64020490
640203db:	mov    DWORD PTR [ebp-0xc],edx
640203de:	mov    DWORD PTR [ebp-0x8],0xf0000
640203e5:	cmp    DWORD PTR [ebp+0x14],0x0
640203e9:	jle    0x64020438
640203eb:	mov    edx,DWORD PTR [edi+0x4]
640203ee:	and    edx,DWORD PTR [ebp-0x8]
640203f1:	mov    eax,DWORD PTR [edi]
640203f3:	movsx  ecx,WORD PTR [ebp-0x4]
640203f7:	and    eax,DWORD PTR [ebp-0xc]
640203fa:	and    edx,0xfffff
64020400:	call   0x64015560
64020405:	add    ax,0x30
64020409:	movzx  eax,ax
6402040c:	cmp    ax,0x39
64020410:	jbe    0x64020414
64020412:	add    eax,ebx
64020414:	mov    ecx,DWORD PTR [ebp-0x8]
64020417:	sub    DWORD PTR [ebp-0x4],0x4
6402041b:	mov    BYTE PTR [esi],al
6402041d:	mov    eax,DWORD PTR [ebp-0xc]
64020420:	shrd   eax,ecx,0x4
64020424:	shr    ecx,0x4
64020427:	inc    esi
64020428:	dec    DWORD PTR [ebp+0x14]
6402042b:	cmp    WORD PTR [ebp-0x4],0x0
64020430:	mov    DWORD PTR [ebp-0xc],eax
64020433:	mov    DWORD PTR [ebp-0x8],ecx
64020436:	jge    0x640203e5
64020438:	cmp    WORD PTR [ebp-0x4],0x0
6402043d:	jl     0x64020490
6402043f:	mov    edx,DWORD PTR [edi+0x4]
64020442:	and    edx,DWORD PTR [ebp-0x8]
64020445:	mov    eax,DWORD PTR [edi]
64020447:	movsx  ecx,WORD PTR [ebp-0x4]
6402044b:	and    eax,DWORD PTR [ebp-0xc]
6402044e:	and    edx,0xfffff
64020454:	call   0x64015560
64020459:	cmp    ax,0x8
6402045d:	jbe    0x64020490
6402045f:	lea    eax,[esi-0x1]
64020462:	mov    cl,BYTE PTR [eax]
64020464:	cmp    cl,0x66
64020467:	je     0x6402046e
64020469:	cmp    cl,0x46
6402046c:	jne    0x64020474
6402046e:	mov    BYTE PTR [eax],0x30
64020471:	dec    eax
64020472:	jmp    0x64020462
64020474:	cmp    eax,DWORD PTR [ebp+0xc]
64020477:	je     0x6402048d
64020479:	mov    cl,BYTE PTR [eax]
6402047b:	cmp    cl,0x39
6402047e:	jne    0x64020487
64020480:	add    bl,0x3a
64020483:	mov    BYTE PTR [eax],bl
64020485:	jmp    0x64020490
64020487:	inc    cl
64020489:	mov    BYTE PTR [eax],cl
6402048b:	jmp    0x64020490
6402048d:	inc    BYTE PTR [eax-0x1]
64020490:	cmp    DWORD PTR [ebp+0x14],0x0
64020494:	jle    0x640204a7
64020496:	push   DWORD PTR [ebp+0x14]
64020499:	push   0x30
6402049b:	push   esi
6402049c:	call   0x64015170
640204a1:	add    esp,0xc
640204a4:	add    esi,DWORD PTR [ebp+0x14]
640204a7:	mov    eax,DWORD PTR [ebp+0xc]
640204aa:	cmp    BYTE PTR [eax],0x0
640204ad:	jne    0x640204b1
640204af:	mov    esi,eax
640204b1:	cmp    DWORD PTR [ebp+0x18],0x0
640204b5:	mov    cl,0x34
640204b7:	sete   al
640204ba:	dec    al
640204bc:	and    al,0xe0
640204be:	add    al,0x70
640204c0:	mov    BYTE PTR [esi],al
640204c2:	mov    eax,DWORD PTR [edi]
640204c4:	mov    edx,DWORD PTR [edi+0x4]
640204c7:	inc    esi
640204c8:	call   0x64015560
640204cd:	xor    ebx,ebx
640204cf:	and    eax,0x7ff
640204d4:	and    edx,ebx
640204d6:	sub    eax,DWORD PTR [ebp-0x14]
640204d9:	push   ebx
640204da:	pop    ecx
640204db:	sbb    edx,ecx
640204dd:	js     0x640204eb
640204df:	jg     0x640204e5
640204e1:	cmp    eax,ebx
640204e3:	jb     0x640204eb
640204e5:	mov    BYTE PTR [esi],0x2b
640204e8:	inc    esi
640204e9:	jmp    0x640204f5
640204eb:	mov    BYTE PTR [esi],0x2d
640204ee:	inc    esi
640204ef:	neg    eax
640204f1:	adc    edx,ebx
640204f3:	neg    edx
640204f5:	cmp    edx,ebx
640204f7:	mov    edi,esi
640204f9:	mov    BYTE PTR [esi],0x30
640204fc:	jl     0x64020522
640204fe:	mov    ecx,0x3e8
64020503:	jg     0x64020509
64020505:	cmp    eax,ecx
64020507:	jb     0x64020522
64020509:	push   ebx
6402050a:	push   ecx
6402050b:	push   edx
6402050c:	push   eax
6402050d:	call   0x64021560
64020512:	add    al,0x30
64020514:	mov    BYTE PTR [esi],al
64020516:	inc    esi
64020517:	cmp    esi,edi
64020519:	mov    DWORD PTR [ebp-0x10],edx
6402051c:	mov    eax,ecx
6402051e:	mov    edx,ebx
64020520:	jne    0x6402052d
64020522:	test   edx,edx
64020524:	jl     0x64020544
64020526:	jg     0x6402052d
64020528:	cmp    eax,0x64
6402052b:	jb     0x64020544
6402052d:	push   0x0
6402052f:	push   0x64
64020531:	push   edx
64020532:	push   eax
64020533:	call   0x64021560
64020538:	add    al,0x30
6402053a:	mov    BYTE PTR [esi],al
6402053c:	mov    DWORD PTR [ebp-0x10],edx
6402053f:	inc    esi
64020540:	mov    eax,ecx
64020542:	mov    edx,ebx
64020544:	cmp    esi,edi
64020546:	jne    0x64020553
64020548:	test   edx,edx
6402054a:	jl     0x6402056b
6402054c:	jg     0x64020553
6402054e:	cmp    eax,0xa
64020551:	jb     0x6402056b
64020553:	push   0x0
64020555:	push   0xa
64020557:	push   edx
64020558:	push   eax
64020559:	call   0x64021560
6402055e:	add    al,0x30
64020560:	mov    BYTE PTR [esi],al
64020562:	mov    DWORD PTR [ebp-0x10],edx
64020565:	inc    esi
64020566:	mov    eax,ecx
64020568:	mov    DWORD PTR [ebp-0x10],ebx
6402056b:	add    al,0x30
6402056d:	mov    BYTE PTR [esi],al
6402056f:	mov    BYTE PTR [esi+0x1],0x0
64020573:	cmp    BYTE PTR [ebp-0x18],0x0
64020577:	je     0x64020580
64020579:	mov    eax,DWORD PTR [ebp-0x1c]
6402057c:	and    DWORD PTR [eax+0x70],0xfffffffd
64020580:	xor    eax,eax
64020582:	pop    ebx
64020583:	pop    edi
64020584:	pop    esi
64020585:	leave  
64020586:	ret    
64020587:	push   ebp
64020588:	mov    ebp,esp
6402058a:	sub    esp,0x10
6402058d:	push   ebx
6402058e:	push   esi
6402058f:	push   edi
64020590:	push   DWORD PTR [ebp+0x14]
64020593:	mov    ebx,eax
64020595:	mov    esi,DWORD PTR [ebx+0x4]
64020598:	mov    edi,ecx
6402059a:	lea    ecx,[ebp-0x10]
6402059d:	dec    esi
6402059e:	call   0x64014335
640205a3:	test   edi,edi
640205a5:	jne    0x640205d4
640205a7:	call   0x640166d3
640205ac:	push   0x16
640205ae:	pop    esi
640205af:	mov    DWORD PTR [eax],esi
640205b1:	xor    eax,eax
640205b3:	push   eax
640205b4:	push   eax
640205b5:	push   eax
640205b6:	push   eax
640205b7:	push   eax
640205b8:	call   0x64013e62
640205bd:	add    esp,0x14
640205c0:	cmp    BYTE PTR [ebp-0x4],0x0
640205c4:	je     0x640205cd
640205c6:	mov    eax,DWORD PTR [ebp-0x8]
640205c9:	and    DWORD PTR [eax+0x70],0xfffffffd
640205cd:	mov    eax,esi
640205cf:	jmp    0x64020677
640205d4:	cmp    DWORD PTR [ebp+0x8],0x0
640205d8:	jbe    0x640205a7
640205da:	cmp    BYTE PTR [ebp+0x10],0x0
640205de:	je     0x640205f8
640205e0:	cmp    esi,DWORD PTR [ebp+0xc]
640205e3:	jne    0x640205f8
640205e5:	xor    eax,eax
640205e7:	cmp    DWORD PTR [ebx],0x2d
640205ea:	sete   al
640205ed:	add    eax,esi
640205ef:	add    eax,edi
640205f1:	mov    BYTE PTR [eax],0x30
640205f4:	mov    BYTE PTR [eax+0x1],0x0
640205f8:	cmp    DWORD PTR [ebx],0x2d
640205fb:	mov    esi,edi
640205fd:	jne    0x64020605
640205ff:	mov    BYTE PTR [edi],0x2d
64020602:	lea    esi,[edi+0x1]
64020605:	mov    eax,DWORD PTR [ebx+0x4]
64020608:	xor    edi,edi
6402060a:	inc    edi
6402060b:	test   eax,eax
6402060d:	jg     0x6402061c
6402060f:	mov    eax,esi
64020611:	call   0x6401ff84
64020616:	mov    BYTE PTR [esi],0x30
64020619:	inc    esi
6402061a:	jmp    0x6402061e
6402061c:	add    esi,eax
6402061e:	cmp    DWORD PTR [ebp+0xc],0x0
64020622:	jle    0x64020668
64020624:	mov    eax,esi
64020626:	call   0x6401ff84
6402062b:	mov    eax,DWORD PTR [ebp-0x10]
6402062e:	mov    eax,DWORD PTR [eax+0xbc]
64020634:	mov    eax,DWORD PTR [eax]
64020636:	mov    al,BYTE PTR [eax]
64020638:	mov    BYTE PTR [esi],al
6402063a:	mov    ebx,DWORD PTR [ebx+0x4]
6402063d:	inc    esi
6402063e:	test   ebx,ebx
64020640:	jge    0x64020668
64020642:	neg    ebx
64020644:	cmp    BYTE PTR [ebp+0x10],0x0
64020648:	jne    0x6402064f
6402064a:	cmp    DWORD PTR [ebp+0xc],ebx
6402064d:	jl     0x64020652
6402064f:	mov    DWORD PTR [ebp+0xc],ebx
64020652:	mov    edi,DWORD PTR [ebp+0xc]
64020655:	mov    eax,esi
64020657:	call   0x6401ff84
6402065c:	push   edi
6402065d:	push   0x30
6402065f:	push   esi
64020660:	call   0x64015170
64020665:	add    esp,0xc
64020668:	cmp    BYTE PTR [ebp-0x4],0x0
6402066c:	je     0x64020675
6402066e:	mov    eax,DWORD PTR [ebp-0x8]
64020671:	and    DWORD PTR [eax+0x70],0xfffffffd
64020675:	xor    eax,eax
64020677:	pop    edi
64020678:	pop    esi
64020679:	pop    ebx
6402067a:	leave  
6402067b:	ret    
6402067c:	push   ebp
6402067d:	mov    ebp,esp
6402067f:	sub    esp,0x2c
64020682:	mov    eax,ds:0x640521ac
64020687:	xor    eax,ebp
64020689:	mov    DWORD PTR [ebp-0x4],eax
6402068c:	mov    eax,DWORD PTR [ebp+0x8]
6402068f:	push   ebx
64020690:	push   esi
64020691:	push   edi
64020692:	mov    edi,DWORD PTR [ebp+0xc]
64020695:	push   0x16
64020697:	pop    esi
64020698:	push   esi
64020699:	lea    ecx,[ebp-0x1c]
6402069c:	push   ecx
6402069d:	lea    ecx,[ebp-0x2c]
640206a0:	push   ecx
640206a1:	push   DWORD PTR [eax+0x4]
640206a4:	push   DWORD PTR [eax]
640206a6:	call   0x640214c9
640206ab:	xor    ebx,ebx
640206ad:	add    esp,0x14
640206b0:	cmp    edi,ebx
640206b2:	jne    0x640206cc
640206b4:	call   0x640166d3
640206b9:	push   ebx
640206ba:	push   ebx
640206bb:	push   ebx
640206bc:	push   ebx
640206bd:	push   ebx
640206be:	mov    DWORD PTR [eax],esi
640206c0:	call   0x64013e62
640206c5:	add    esp,0x14
640206c8:	mov    eax,esi
640206ca:	jmp    0x64020726
640206cc:	mov    eax,DWORD PTR [ebp+0x10]
640206cf:	cmp    eax,ebx
640206d1:	jbe    0x640206b4
640206d3:	cmp    eax,0xffffffff
640206d6:	jne    0x640206dc
640206d8:	or     eax,eax
640206da:	jmp    0x640206e7
640206dc:	xor    ecx,ecx
640206de:	cmp    DWORD PTR [ebp-0x2c],0x2d
640206e2:	sete   cl
640206e5:	sub    eax,ecx
640206e7:	mov    esi,DWORD PTR [ebp+0x14]
640206ea:	lea    ecx,[ebp-0x2c]
640206ed:	push   ecx
640206ee:	mov    ecx,DWORD PTR [ebp-0x28]
640206f1:	add    ecx,esi
640206f3:	push   ecx
640206f4:	push   eax
640206f5:	xor    eax,eax
640206f7:	cmp    DWORD PTR [ebp-0x2c],0x2d
640206fb:	sete   al
640206fe:	add    eax,edi
64020700:	push   eax
64020701:	call   0x64021351
64020706:	add    esp,0x10
64020709:	cmp    eax,ebx
6402070b:	je     0x64020711
6402070d:	mov    BYTE PTR [edi],bl
6402070f:	jmp    0x64020726
64020711:	push   DWORD PTR [ebp+0x18]
64020714:	lea    eax,[ebp-0x2c]
64020717:	push   ebx
64020718:	push   esi
64020719:	push   DWORD PTR [ebp+0x10]
6402071c:	mov    ecx,edi
6402071e:	call   0x64020587
64020723:	add    esp,0x10
64020726:	mov    ecx,DWORD PTR [ebp-0x4]
64020729:	pop    edi
6402072a:	pop    esi
6402072b:	xor    ecx,ebp
6402072d:	pop    ebx
6402072e:	call   0x64013d18
64020733:	leave  
64020734:	ret    
64020735:	push   ebp
64020736:	mov    ebp,esp
64020738:	sub    esp,0x30
6402073b:	mov    eax,ds:0x640521ac
64020740:	xor    eax,ebp
64020742:	mov    DWORD PTR [ebp-0x4],eax
64020745:	mov    eax,DWORD PTR [ebp+0x8]
64020748:	push   ebx
64020749:	push   esi
6402074a:	mov    esi,DWORD PTR [ebp+0xc]
6402074d:	push   edi
6402074e:	push   0x16
64020750:	pop    edi
64020751:	push   edi
64020752:	lea    ecx,[ebp-0x1c]
64020755:	push   ecx
64020756:	lea    ecx,[ebp-0x30]
64020759:	push   ecx
6402075a:	push   DWORD PTR [eax+0x4]
6402075d:	push   DWORD PTR [eax]
6402075f:	call   0x640214c9
64020764:	xor    ebx,ebx
64020766:	add    esp,0x14
64020769:	cmp    esi,ebx
6402076b:	jne    0x64020788
6402076d:	call   0x640166d3
64020772:	push   ebx
64020773:	push   ebx
64020774:	push   ebx
64020775:	push   ebx
64020776:	push   ebx
64020777:	mov    DWORD PTR [eax],edi
64020779:	call   0x64013e62
6402077e:	add    esp,0x14
64020781:	mov    eax,edi
64020783:	jmp    0x6402081e
64020788:	mov    ecx,DWORD PTR [ebp+0x10]
6402078b:	cmp    ecx,ebx
6402078d:	jbe    0x6402076d
6402078f:	mov    eax,DWORD PTR [ebp-0x2c]
64020792:	dec    eax
64020793:	mov    DWORD PTR [ebp-0x20],eax
64020796:	xor    eax,eax
64020798:	cmp    DWORD PTR [ebp-0x30],0x2d
6402079c:	sete   al
6402079f:	cmp    ecx,0xffffffff
640207a2:	lea    edi,[eax+esi*1]
640207a5:	jne    0x640207ab
640207a7:	or     ecx,ecx
640207a9:	jmp    0x640207ad
640207ab:	sub    ecx,eax
640207ad:	lea    eax,[ebp-0x30]
640207b0:	push   eax
640207b1:	push   DWORD PTR [ebp+0x14]
640207b4:	push   ecx
640207b5:	push   edi
640207b6:	call   0x64021351
640207bb:	add    esp,0x10
640207be:	cmp    eax,ebx
640207c0:	je     0x640207c6
640207c2:	mov    BYTE PTR [esi],bl
640207c4:	jmp    0x6402081e
640207c6:	mov    eax,DWORD PTR [ebp-0x2c]
640207c9:	dec    eax
640207ca:	cmp    DWORD PTR [ebp-0x20],eax
640207cd:	setl   cl
640207d0:	cmp    eax,0xfffffffc
640207d3:	jl     0x64020802
640207d5:	cmp    eax,DWORD PTR [ebp+0x14]
640207d8:	jge    0x64020802
640207da:	cmp    cl,bl
640207dc:	je     0x640207e8
640207de:	mov    al,BYTE PTR [edi]
640207e0:	inc    edi
640207e1:	test   al,al
640207e3:	jne    0x640207de
640207e5:	mov    BYTE PTR [edi-0x2],bl
640207e8:	push   DWORD PTR [ebp+0x1c]
640207eb:	lea    eax,[ebp-0x30]
640207ee:	push   0x1
640207f0:	push   DWORD PTR [ebp+0x14]
640207f3:	mov    ecx,esi
640207f5:	push   DWORD PTR [ebp+0x10]
640207f8:	call   0x64020587
640207fd:	add    esp,0x10
64020800:	jmp    0x6402081e
64020802:	push   DWORD PTR [ebp+0x1c]
64020805:	lea    eax,[ebp-0x30]
64020808:	push   0x1
6402080a:	push   eax
6402080b:	push   DWORD PTR [ebp+0x18]
6402080e:	mov    eax,esi
64020810:	push   DWORD PTR [ebp+0x14]
64020813:	push   DWORD PTR [ebp+0x10]
64020816:	call   0x6401ffbd
6402081b:	add    esp,0x18
6402081e:	mov    ecx,DWORD PTR [ebp-0x4]
64020821:	pop    edi
64020822:	pop    esi
64020823:	xor    ecx,ebp
64020825:	pop    ebx
64020826:	call   0x64013d18
6402082b:	leave  
6402082c:	ret    
6402082d:	push   ebp
6402082e:	mov    ebp,esp
64020830:	mov    eax,DWORD PTR [ebp+0x14]
64020833:	cmp    eax,0x65
64020836:	je     0x64020897
64020838:	cmp    eax,0x45
6402083b:	je     0x64020897
6402083d:	cmp    eax,0x66
64020840:	jne    0x6402085b
64020842:	push   DWORD PTR [ebp+0x20]
64020845:	push   DWORD PTR [ebp+0x18]
64020848:	push   DWORD PTR [ebp+0x10]
6402084b:	push   DWORD PTR [ebp+0xc]
6402084e:	push   DWORD PTR [ebp+0x8]
64020851:	call   0x6402067c
64020856:	add    esp,0x14
64020859:	pop    ebp
6402085a:	ret    
6402085b:	cmp    eax,0x61
6402085e:	je     0x6402087e
64020860:	cmp    eax,0x41
64020863:	je     0x6402087e
64020865:	push   DWORD PTR [ebp+0x20]
64020868:	push   DWORD PTR [ebp+0x1c]
6402086b:	push   DWORD PTR [ebp+0x18]
6402086e:	push   DWORD PTR [ebp+0x10]
64020871:	push   DWORD PTR [ebp+0xc]
64020874:	push   DWORD PTR [ebp+0x8]
64020877:	call   0x64020735
6402087c:	jmp    0x640208ae
6402087e:	push   DWORD PTR [ebp+0x20]
64020881:	push   DWORD PTR [ebp+0x1c]
64020884:	push   DWORD PTR [ebp+0x18]
64020887:	push   DWORD PTR [ebp+0x10]
6402088a:	push   DWORD PTR [ebp+0xc]
6402088d:	push   DWORD PTR [ebp+0x8]
64020890:	call   0x64020216
64020895:	jmp    0x640208ae
64020897:	push   DWORD PTR [ebp+0x20]
6402089a:	push   DWORD PTR [ebp+0x1c]
6402089d:	push   DWORD PTR [ebp+0x18]
640208a0:	push   DWORD PTR [ebp+0x10]
640208a3:	push   DWORD PTR [ebp+0xc]
640208a6:	push   DWORD PTR [ebp+0x8]
640208a9:	call   0x6402012a
640208ae:	add    esp,0x18
640208b1:	pop    ebp
640208b2:	ret    
640208b3:	push   ebp
640208b4:	mov    ebp,esp
640208b6:	push   0x0
640208b8:	push   DWORD PTR [ebp+0x1c]
640208bb:	push   DWORD PTR [ebp+0x18]
640208be:	push   DWORD PTR [ebp+0x14]
640208c1:	push   DWORD PTR [ebp+0x10]
640208c4:	push   DWORD PTR [ebp+0xc]
640208c7:	push   DWORD PTR [ebp+0x8]
640208ca:	call   0x6402082d
640208cf:	add    esp,0x1c
640208d2:	pop    ebp
640208d3:	ret    
640208d4:	push   esi
640208d5:	push   0x30000
640208da:	push   0x10000
640208df:	xor    esi,esi
640208e1:	push   esi
640208e2:	call   0x6402163f
640208e7:	add    esp,0xc
640208ea:	test   eax,eax
640208ec:	je     0x640208fb
640208ee:	push   esi
640208ef:	push   esi
640208f0:	push   esi
640208f1:	push   esi
640208f2:	push   esi
640208f3:	call   0x64013d66
640208f8:	add    esp,0x14
640208fb:	pop    esi
640208fc:	ret    
640208fd:	push   ebp
640208fe:	mov    ebp,esp
64020900:	sub    esp,0x18
64020903:	fld    QWORD PTR ds:0x64041930
64020909:	fstp   QWORD PTR [ebp-0x10]
6402090c:	fld    QWORD PTR ds:0x64041928
64020912:	fstp   QWORD PTR [ebp-0x18]
64020915:	fld    QWORD PTR [ebp-0x18]
64020918:	fdiv   QWORD PTR [ebp-0x10]
6402091b:	fmul   QWORD PTR [ebp-0x10]
6402091e:	fsubr  QWORD PTR [ebp-0x18]
64020921:	fstp   QWORD PTR [ebp-0x8]
64020924:	fld1   
64020926:	fcomp  QWORD PTR [ebp-0x8]
64020929:	fnstsw ax
6402092b:	test   ah,0x5
6402092e:	jp     0x64020935
64020930:	xor    eax,eax
64020932:	inc    eax
64020933:	leave  
64020934:	ret    
64020935:	xor    eax,eax
64020937:	leave  
64020938:	ret    
64020939:	push   0x64041954
6402093e:	call   DWORD PTR ds:0x6402c0a4
64020944:	test   eax,eax
64020946:	je     0x6402095d
64020948:	push   0x64041938
6402094d:	push   eax
6402094e:	call   DWORD PTR ds:0x6402c0a0
64020954:	test   eax,eax
64020956:	je     0x6402095d
64020958:	push   0x0
6402095a:	call   eax
6402095c:	ret    
6402095d:	jmp    0x640208fd
64020962:	push   ebp
64020963:	mov    ebp,esp
64020965:	sub    esp,0x18
64020968:	mov    eax,ds:0x640521ac
6402096d:	xor    eax,ebp
6402096f:	mov    DWORD PTR [ebp-0x4],eax
64020972:	mov    eax,DWORD PTR [ebp+0x10]
64020975:	push   ebx
64020976:	push   esi
64020977:	xor    esi,esi
64020979:	cmp    DWORD PTR [ebp+0xc],esi
6402097c:	push   edi
6402097d:	mov    DWORD PTR [ebp-0x18],0x404e
64020984:	mov    DWORD PTR [eax],esi
64020986:	mov    DWORD PTR [eax+0x4],esi
64020989:	mov    DWORD PTR [eax+0x8],esi
6402098c:	jbe    0x64020ad8
64020992:	mov    edx,DWORD PTR [eax]
64020994:	mov    ebx,DWORD PTR [eax+0x4]
64020997:	mov    esi,eax
64020999:	lea    edi,[ebp-0x10]
6402099c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
6402099d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
6402099e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
6402099f:	mov    ecx,edx
640209a1:	shr    ecx,0x1f
640209a4:	lea    edi,[edx+edx*1]
640209a7:	lea    edx,[ebx+ebx*1]
640209aa:	or     edx,ecx
640209ac:	mov    ecx,DWORD PTR [eax+0x8]
640209af:	mov    esi,ebx
640209b1:	shr    esi,0x1f
640209b4:	add    ecx,ecx
640209b6:	or     ecx,esi
640209b8:	mov    DWORD PTR [ebp-0x14],edi
640209bb:	mov    esi,edi
640209bd:	and    DWORD PTR [ebp-0x14],0x0
640209c1:	mov    ebx,edx
640209c3:	shr    ebx,0x1f
640209c6:	add    ecx,ecx
640209c8:	shr    edi,0x1f
640209cb:	or     ecx,ebx
640209cd:	mov    ebx,DWORD PTR [ebp-0x10]
640209d0:	add    esi,esi
640209d2:	add    edx,edx
640209d4:	or     edx,edi
640209d6:	lea    edi,[esi+ebx*1]
640209d9:	cmp    edi,esi
640209db:	mov    DWORD PTR [eax],esi
640209dd:	mov    DWORD PTR [eax+0x4],edx
640209e0:	mov    DWORD PTR [eax+0x8],ecx
640209e3:	jb     0x640209e9
640209e5:	cmp    edi,ebx
640209e7:	jae    0x640209f0
640209e9:	mov    DWORD PTR [ebp-0x14],0x1
640209f0:	xor    ebx,ebx
640209f2:	cmp    DWORD PTR [ebp-0x14],ebx
640209f5:	mov    DWORD PTR [eax],edi
640209f7:	je     0x64020a13
640209f9:	lea    esi,[edx+0x1]
640209fc:	cmp    esi,edx
640209fe:	jb     0x64020a05
64020a00:	cmp    esi,0x1
64020a03:	jae    0x64020a08
64020a05:	xor    ebx,ebx
64020a07:	inc    ebx
64020a08:	test   ebx,ebx
64020a0a:	mov    DWORD PTR [eax+0x4],esi
64020a0d:	je     0x64020a13
64020a0f:	inc    ecx
64020a10:	mov    DWORD PTR [eax+0x8],ecx
64020a13:	mov    ecx,DWORD PTR [eax+0x4]
64020a16:	mov    edx,DWORD PTR [ebp-0xc]
64020a19:	lea    ebx,[ecx+edx*1]
64020a1c:	xor    esi,esi
64020a1e:	cmp    ebx,ecx
64020a20:	jb     0x64020a26
64020a22:	cmp    ebx,edx
64020a24:	jae    0x64020a29
64020a26:	xor    esi,esi
64020a28:	inc    esi
64020a29:	test   esi,esi
64020a2b:	mov    DWORD PTR [eax+0x4],ebx
64020a2e:	je     0x64020a33
64020a30:	inc    DWORD PTR [eax+0x8]
64020a33:	mov    ecx,DWORD PTR [ebp-0x8]
64020a36:	add    DWORD PTR [eax+0x8],ecx
64020a39:	and    DWORD PTR [ebp-0x14],0x0
64020a3d:	lea    ecx,[edi+edi*1]
64020a40:	mov    edx,edi
64020a42:	shr    edx,0x1f
64020a45:	lea    edi,[ebx+ebx*1]
64020a48:	or     edi,edx
64020a4a:	mov    edx,DWORD PTR [eax+0x8]
64020a4d:	mov    esi,ebx
64020a4f:	shr    esi,0x1f
64020a52:	lea    ebx,[edx+edx*1]
64020a55:	mov    edx,DWORD PTR [ebp+0x8]
64020a58:	or     ebx,esi
64020a5a:	mov    DWORD PTR [eax],ecx
64020a5c:	mov    DWORD PTR [eax+0x4],edi
64020a5f:	mov    DWORD PTR [eax+0x8],ebx
64020a62:	movsx  edx,BYTE PTR [edx]
64020a65:	lea    esi,[ecx+edx*1]
64020a68:	cmp    esi,ecx
64020a6a:	mov    DWORD PTR [ebp-0x10],edx
64020a6d:	jb     0x64020a73
64020a6f:	cmp    esi,edx
64020a71:	jae    0x64020a7a
64020a73:	mov    DWORD PTR [ebp-0x14],0x1
64020a7a:	cmp    DWORD PTR [ebp-0x14],0x0
64020a7e:	mov    DWORD PTR [eax],esi
64020a80:	je     0x64020a9e
64020a82:	lea    ecx,[edi+0x1]
64020a85:	xor    edx,edx
64020a87:	cmp    ecx,edi
64020a89:	jb     0x64020a90
64020a8b:	cmp    ecx,0x1
64020a8e:	jae    0x64020a93
64020a90:	xor    edx,edx
64020a92:	inc    edx
64020a93:	test   edx,edx
64020a95:	mov    DWORD PTR [eax+0x4],ecx
64020a98:	je     0x64020a9e
64020a9a:	inc    ebx
64020a9b:	mov    DWORD PTR [eax+0x8],ebx
64020a9e:	dec    DWORD PTR [ebp+0xc]
64020aa1:	inc    DWORD PTR [ebp+0x8]
64020aa4:	cmp    DWORD PTR [ebp+0xc],0x0
64020aa8:	ja     0x64020992
64020aae:	xor    esi,esi
64020ab0:	jmp    0x64020ad8
64020ab2:	mov    ecx,DWORD PTR [eax+0x4]
64020ab5:	mov    edx,ecx
64020ab7:	shr    edx,0x10
64020aba:	mov    DWORD PTR [eax+0x8],edx
64020abd:	mov    edx,DWORD PTR [eax]
64020abf:	mov    edi,edx
64020ac1:	shl    ecx,0x10
64020ac4:	shr    edi,0x10
64020ac7:	or     ecx,edi
64020ac9:	shl    edx,0x10
64020acc:	add    DWORD PTR [ebp-0x18],0xfff0
64020ad3:	mov    DWORD PTR [eax+0x4],ecx
64020ad6:	mov    DWORD PTR [eax],edx
64020ad8:	cmp    DWORD PTR [eax+0x8],esi
64020adb:	je     0x64020ab2
64020add:	mov    ebx,0x8000
64020ae2:	test   DWORD PTR [eax+0x8],ebx
64020ae5:	jne    0x64020b17
64020ae7:	mov    esi,DWORD PTR [eax]
64020ae9:	mov    edi,DWORD PTR [eax+0x4]
64020aec:	add    DWORD PTR [ebp-0x18],0xffff
64020af3:	mov    ecx,esi
64020af5:	add    esi,esi
64020af7:	shr    ecx,0x1f
64020afa:	mov    DWORD PTR [eax],esi
64020afc:	lea    esi,[edi+edi*1]
64020aff:	or     esi,ecx
64020b01:	mov    ecx,DWORD PTR [eax+0x8]
64020b04:	mov    edx,edi
64020b06:	shr    edx,0x1f
64020b09:	add    ecx,ecx
64020b0b:	or     ecx,edx
64020b0d:	test   ebx,ecx
64020b0f:	mov    DWORD PTR [eax+0x4],esi
64020b12:	mov    DWORD PTR [eax+0x8],ecx
64020b15:	je     0x64020ae7
64020b17:	mov    cx,WORD PTR [ebp-0x18]
64020b1b:	mov    WORD PTR [eax+0xa],cx
64020b1f:	mov    ecx,DWORD PTR [ebp-0x4]
64020b22:	pop    edi
64020b23:	pop    esi
64020b24:	xor    ecx,ebp
64020b26:	pop    ebx
64020b27:	call   0x64013d18
64020b2c:	leave  
64020b2d:	ret    
64020b2e:	push   ebp
64020b2f:	mov    ebp,esp
64020b31:	sub    esp,0x10
64020b34:	mov    eax,ds:0x640521ac
64020b39:	xor    eax,ebp
64020b3b:	mov    DWORD PTR [ebp-0x4],eax
64020b3e:	push   ebx
64020b3f:	push   esi
64020b40:	mov    esi,DWORD PTR [ebp+0xc]
64020b43:	test   BYTE PTR [esi+0xc],0x40
64020b47:	push   edi
64020b48:	jne    0x64020cdd
64020b4e:	push   esi
64020b4f:	call   0x64019dfb
64020b54:	cmp    eax,0xffffffff
64020b57:	pop    ecx
64020b58:	mov    edi,0x64052488
64020b5d:	je     0x64020b8d
64020b5f:	push   esi
64020b60:	call   0x64019dfb
64020b65:	cmp    eax,0xfffffffe
64020b68:	pop    ecx
64020b69:	je     0x64020b8d
64020b6b:	push   esi
64020b6c:	call   0x64019dfb
64020b71:	sar    eax,0x5
64020b74:	push   esi
64020b75:	lea    ebx,[eax*4+0x640556e0]
64020b7c:	call   0x64019dfb
64020b81:	and    eax,0x1f
64020b84:	pop    ecx
64020b85:	shl    eax,0x6
64020b88:	add    eax,DWORD PTR [ebx]
64020b8a:	pop    ecx
64020b8b:	jmp    0x64020b8f
64020b8d:	mov    eax,edi
64020b8f:	mov    al,BYTE PTR [eax+0x24]
64020b92:	and    al,0x7f
64020b94:	cmp    al,0x2
64020b96:	je     0x64020cdd
64020b9c:	push   esi
64020b9d:	call   0x64019dfb
64020ba2:	cmp    eax,0xffffffff
64020ba5:	pop    ecx
64020ba6:	je     0x64020bd6
64020ba8:	push   esi
64020ba9:	call   0x64019dfb
64020bae:	cmp    eax,0xfffffffe
64020bb1:	pop    ecx
64020bb2:	je     0x64020bd6
64020bb4:	push   esi
64020bb5:	call   0x64019dfb
64020bba:	sar    eax,0x5
64020bbd:	push   esi
64020bbe:	lea    ebx,[eax*4+0x640556e0]
64020bc5:	call   0x64019dfb
64020bca:	and    eax,0x1f
64020bcd:	pop    ecx
64020bce:	shl    eax,0x6
64020bd1:	add    eax,DWORD PTR [ebx]
64020bd3:	pop    ecx
64020bd4:	jmp    0x64020bd8
64020bd6:	mov    eax,edi
64020bd8:	mov    al,BYTE PTR [eax+0x24]
64020bdb:	and    al,0x7f
64020bdd:	cmp    al,0x1
64020bdf:	jne    0x64020c3d
64020be1:	dec    DWORD PTR [esi+0x4]
64020be4:	mov    ebx,DWORD PTR [ebp+0x8]
64020be7:	js     0x64020bf7
64020be9:	mov    eax,DWORD PTR [esi]
64020beb:	mov    BYTE PTR [eax],bl
64020bed:	mov    ecx,DWORD PTR [esi]
64020bef:	movzx  eax,BYTE PTR [ecx]
64020bf2:	inc    ecx
64020bf3:	mov    DWORD PTR [esi],ecx
64020bf5:	jmp    0x64020c03
64020bf7:	movsx  eax,bl
64020bfa:	push   esi
64020bfb:	push   eax
64020bfc:	call   0x64019fdb
64020c01:	pop    ecx
64020c02:	pop    ecx
64020c03:	cmp    eax,0xffffffff
64020c06:	jne    0x64020c11
64020c08:	or     ax,0xffff
64020c0c:	jmp    0x64020cfd
64020c11:	dec    DWORD PTR [esi+0x4]
64020c14:	js     0x64020c24
64020c16:	mov    eax,DWORD PTR [esi]
64020c18:	mov    BYTE PTR [eax],bh
64020c1a:	mov    ecx,DWORD PTR [esi]
64020c1c:	movzx  eax,BYTE PTR [ecx]
64020c1f:	inc    ecx
64020c20:	mov    DWORD PTR [esi],ecx
64020c22:	jmp    0x64020c30
64020c24:	movsx  eax,bh
64020c27:	push   esi
64020c28:	push   eax
64020c29:	call   0x64019fdb
64020c2e:	pop    ecx
64020c2f:	pop    ecx
64020c30:	cmp    eax,0xffffffff
64020c33:	je     0x64020c08
64020c35:	mov    ax,bx
64020c38:	jmp    0x64020cfd
64020c3d:	push   esi
64020c3e:	call   0x64019dfb
64020c43:	cmp    eax,0xffffffff
64020c46:	pop    ecx
64020c47:	je     0x64020c77
64020c49:	push   esi
64020c4a:	call   0x64019dfb
64020c4f:	cmp    eax,0xfffffffe
64020c52:	pop    ecx
64020c53:	je     0x64020c77
64020c55:	push   esi
64020c56:	call   0x64019dfb
64020c5b:	sar    eax,0x5
64020c5e:	push   esi
64020c5f:	lea    ebx,[eax*4+0x640556e0]
64020c66:	call   0x64019dfb
64020c6b:	and    eax,0x1f
64020c6e:	pop    ecx
64020c6f:	shl    eax,0x6
64020c72:	add    eax,DWORD PTR [ebx]
64020c74:	pop    ecx
64020c75:	jmp    0x64020c79
64020c77:	mov    eax,edi
64020c79:	test   BYTE PTR [eax+0x4],0x80
64020c7d:	je     0x64020cdd
64020c7f:	push   DWORD PTR [ebp+0x8]
64020c82:	lea    eax,[ebp-0xc]
64020c85:	push   0x5
64020c87:	push   eax
64020c88:	lea    eax,[ebp-0x10]
64020c8b:	push   eax
64020c8c:	call   0x6401ed36
64020c91:	add    esp,0x10
64020c94:	test   eax,eax
64020c96:	jne    0x64020c08
64020c9c:	xor    ebx,ebx
64020c9e:	cmp    DWORD PTR [ebp-0x10],ebx
64020ca1:	jle    0x64020cd7
64020ca3:	dec    DWORD PTR [esi+0x4]
64020ca6:	js     0x64020cba
64020ca8:	mov    eax,DWORD PTR [esi]
64020caa:	mov    cl,BYTE PTR [ebp+ebx*1-0xc]
64020cae:	mov    BYTE PTR [eax],cl
64020cb0:	mov    ecx,DWORD PTR [esi]
64020cb2:	movzx  eax,BYTE PTR [ecx]
64020cb5:	inc    ecx
64020cb6:	mov    DWORD PTR [esi],ecx
64020cb8:	jmp    0x64020cc8
64020cba:	movsx  eax,BYTE PTR [ebp+ebx*1-0xc]
64020cbf:	push   esi
64020cc0:	push   eax
64020cc1:	call   0x64019fdb
64020cc6:	pop    ecx
64020cc7:	pop    ecx
64020cc8:	cmp    eax,0xffffffff
64020ccb:	je     0x64020c08
64020cd1:	inc    ebx
64020cd2:	cmp    ebx,DWORD PTR [ebp-0x10]
64020cd5:	jl     0x64020ca3
64020cd7:	mov    ax,WORD PTR [ebp+0x8]
64020cdb:	jmp    0x64020cfd
64020cdd:	add    DWORD PTR [esi+0x4],0xfffffffe
64020ce1:	js     0x64020cf0
64020ce3:	mov    ecx,DWORD PTR [esi]
64020ce5:	mov    eax,DWORD PTR [ebp+0x8]
64020ce8:	mov    WORD PTR [ecx],ax
64020ceb:	add    DWORD PTR [esi],0x2
64020cee:	jmp    0x64020cfd
64020cf0:	movzx  eax,WORD PTR [ebp+0x8]
64020cf4:	push   esi
64020cf5:	push   eax
64020cf6:	call   0x640216a9
64020cfb:	pop    ecx
64020cfc:	pop    ecx
64020cfd:	mov    ecx,DWORD PTR [ebp-0x4]
64020d00:	pop    edi
64020d01:	pop    esi
64020d02:	xor    ecx,ebp
64020d04:	pop    ebx
64020d05:	call   0x64013d18
64020d0a:	leave  
64020d0b:	ret    
64020d0c:	mov    ax,WORD PTR [esp+0x4]
64020d11:	cmp    ax,0x30
64020d15:	jb     0x64020e8a
64020d1b:	cmp    ax,0x3a
64020d1f:	jae    0x64020d28
64020d21:	movzx  eax,ax
64020d24:	sub    eax,0x30
64020d27:	ret    
64020d28:	mov    ecx,0xff10
64020d2d:	cmp    ax,cx
64020d30:	jae    0x64020e80
64020d36:	mov    ecx,0x660
64020d3b:	cmp    ax,cx
64020d3e:	jb     0x64020e8a
64020d44:	cmp    ax,0x66a
64020d48:	jae    0x64020d50
64020d4a:	movzx  eax,ax
64020d4d:	sub    eax,ecx
64020d4f:	ret    
64020d50:	mov    ecx,0x6f0
64020d55:	cmp    ax,cx
64020d58:	jb     0x64020e8a
64020d5e:	cmp    ax,0x6fa
64020d62:	jb     0x64020d4a
64020d64:	mov    ecx,0x966
64020d69:	cmp    ax,cx
64020d6c:	jb     0x64020e8a
64020d72:	cmp    ax,0x970
64020d76:	jb     0x64020d4a
64020d78:	mov    ecx,0x9e6
64020d7d:	cmp    ax,cx
64020d80:	jb     0x64020e8a
64020d86:	cmp    ax,0x9f0
64020d8a:	jb     0x64020d4a
64020d8c:	mov    ecx,0xa66
64020d91:	cmp    ax,cx
64020d94:	jb     0x64020e8a
64020d9a:	cmp    ax,0xa70
64020d9e:	jb     0x64020d4a
64020da0:	mov    ecx,0xae6
64020da5:	cmp    ax,cx
64020da8:	jb     0x64020e8a
64020dae:	cmp    ax,0xaf0
64020db2:	jb     0x64020d4a
64020db4:	mov    ecx,0xb66
64020db9:	cmp    ax,cx
64020dbc:	jb     0x64020e8a
64020dc2:	cmp    ax,0xb70
64020dc6:	jb     0x64020d4a
64020dc8:	mov    ecx,0xc66
64020dcd:	cmp    ax,cx
64020dd0:	jb     0x64020e8a
64020dd6:	cmp    ax,0xc70
64020dda:	jb     0x64020d4a
64020de0:	mov    ecx,0xce6
64020de5:	cmp    ax,cx
64020de8:	jb     0x64020e8a
64020dee:	cmp    ax,0xcf0
64020df2:	jb     0x64020d4a
64020df8:	mov    ecx,0xd66
64020dfd:	cmp    ax,cx
64020e00:	jb     0x64020e8a
64020e06:	cmp    ax,0xd70
64020e0a:	jb     0x64020d4a
64020e10:	mov    ecx,0xe50
64020e15:	cmp    ax,cx
64020e18:	jb     0x64020e8a
64020e1a:	cmp    ax,0xe5a
64020e1e:	jb     0x64020d4a
64020e24:	mov    ecx,0xed0
64020e29:	cmp    ax,cx
64020e2c:	jb     0x64020e8a
64020e2e:	cmp    ax,0xeda
64020e32:	jb     0x64020d4a
64020e38:	add    ecx,0x50
64020e3b:	cmp    ax,cx
64020e3e:	jb     0x64020e8a
64020e40:	cmp    ax,0xf2a
64020e44:	jb     0x64020d4a
64020e4a:	mov    ecx,0x1040
64020e4f:	cmp    ax,cx
64020e52:	jb     0x64020e8a
64020e54:	cmp    ax,0x104a
64020e58:	jb     0x64020d4a
64020e5e:	mov    ecx,0x17e0
64020e63:	cmp    ax,cx
64020e66:	jb     0x64020e8a
64020e68:	cmp    ax,0x17ea
64020e6c:	jb     0x64020d4a
64020e72:	add    ecx,0x30
64020e75:	cmp    ax,cx
64020e78:	jb     0x64020e8a
64020e7a:	cmp    ax,0x181a
64020e7e:	jmp    0x64020e84
64020e80:	cmp    ax,0xff1a
64020e84:	jb     0x64020d4a
64020e8a:	or     eax,0xffffffff
64020e8d:	ret    
64020e8e:	push   ebp
64020e8f:	mov    ebp,esp
64020e91:	sub    esp,0x14
64020e94:	push   esi
64020e95:	push   edi
64020e96:	push   DWORD PTR [ebp+0x8]
64020e99:	lea    ecx,[ebp-0x14]
64020e9c:	call   0x64014335
64020ea1:	mov    eax,DWORD PTR [ebp+0x10]
64020ea4:	mov    esi,DWORD PTR [ebp+0xc]
64020ea7:	xor    edi,edi
64020ea9:	cmp    eax,edi
64020eab:	je     0x64020eaf
64020ead:	mov    DWORD PTR [eax],esi
64020eaf:	cmp    esi,edi
64020eb1:	jne    0x64020edf
64020eb3:	call   0x640166d3
64020eb8:	push   edi
64020eb9:	push   edi
64020eba:	push   edi
64020ebb:	push   edi
64020ebc:	push   edi
64020ebd:	mov    DWORD PTR [eax],0x16
64020ec3:	call   0x64013e62
64020ec8:	add    esp,0x14
64020ecb:	cmp    BYTE PTR [ebp-0x8],0x0
64020ecf:	je     0x64020ed8
64020ed1:	mov    eax,DWORD PTR [ebp-0xc]
64020ed4:	and    DWORD PTR [eax+0x70],0xfffffffd
64020ed8:	xor    eax,eax
64020eda:	jmp    0x640210b5
64020edf:	cmp    DWORD PTR [ebp+0x14],edi
64020ee2:	je     0x64020ef0
64020ee4:	cmp    DWORD PTR [ebp+0x14],0x2
64020ee8:	jl     0x64020eb3
64020eea:	cmp    DWORD PTR [ebp+0x14],0x24
64020eee:	jg     0x64020eb3
64020ef0:	mov    ecx,DWORD PTR [ebp-0x14]
64020ef3:	push   ebx
64020ef4:	mov    bl,BYTE PTR [esi]
64020ef6:	mov    DWORD PTR [ebp-0x4],edi
64020ef9:	lea    edi,[esi+0x1]
64020efc:	cmp    DWORD PTR [ecx+0xac],0x1
64020f03:	jle    0x64020f1c
64020f05:	lea    eax,[ebp-0x14]
64020f08:	push   eax
64020f09:	movzx  eax,bl
64020f0c:	push   0x8
64020f0e:	push   eax
64020f0f:	call   0x6401ab70
64020f14:	mov    ecx,DWORD PTR [ebp-0x14]
64020f17:	add    esp,0xc
64020f1a:	jmp    0x64020f2c
64020f1c:	mov    edx,DWORD PTR [ecx+0xc8]
64020f22:	movzx  eax,bl
64020f25:	movzx  eax,BYTE PTR [edx+eax*2]
64020f29:	and    eax,0x8
64020f2c:	test   eax,eax
64020f2e:	je     0x64020f35
64020f30:	mov    bl,BYTE PTR [edi]
64020f32:	inc    edi
64020f33:	jmp    0x64020efc
64020f35:	cmp    bl,0x2d
64020f38:	jne    0x64020f40
64020f3a:	or     DWORD PTR [ebp+0x18],0x2
64020f3e:	jmp    0x64020f45
64020f40:	cmp    bl,0x2b
64020f43:	jne    0x64020f48
64020f45:	mov    bl,BYTE PTR [edi]
64020f47:	inc    edi
64020f48:	mov    eax,DWORD PTR [ebp+0x14]
64020f4b:	test   eax,eax
64020f4d:	jl     0x6402109c
64020f53:	cmp    eax,0x1
64020f56:	je     0x6402109c
64020f5c:	cmp    eax,0x24
64020f5f:	jg     0x6402109c
64020f65:	test   eax,eax
64020f67:	jne    0x64020f93
64020f69:	cmp    bl,0x30
64020f6c:	je     0x64020f77
64020f6e:	mov    DWORD PTR [ebp+0x14],0xa
64020f75:	jmp    0x64020fab
64020f77:	mov    al,BYTE PTR [edi]
64020f79:	cmp    al,0x78
64020f7b:	je     0x64020f8a
64020f7d:	cmp    al,0x58
64020f7f:	je     0x64020f8a
64020f81:	mov    DWORD PTR [ebp+0x14],0x8
64020f88:	jmp    0x64020fab
64020f8a:	mov    DWORD PTR [ebp+0x14],0x10
64020f91:	jmp    0x64020f9d
64020f93:	cmp    eax,0x10
64020f96:	jne    0x64020fab
64020f98:	cmp    bl,0x30
64020f9b:	jne    0x64020fab
64020f9d:	mov    al,BYTE PTR [edi]
64020f9f:	cmp    al,0x78
64020fa1:	je     0x64020fa7
64020fa3:	cmp    al,0x58
64020fa5:	jne    0x64020fab
64020fa7:	inc    edi
64020fa8:	mov    bl,BYTE PTR [edi]
64020faa:	inc    edi
64020fab:	mov    esi,DWORD PTR [ecx+0xc8]
64020fb1:	or     eax,0xffffffff
64020fb4:	xor    edx,edx
64020fb6:	div    DWORD PTR [ebp+0x14]
64020fb9:	movzx  ecx,bl
64020fbc:	movzx  ecx,WORD PTR [esi+ecx*2]
64020fc0:	test   cl,0x4
64020fc3:	je     0x64020fcd
64020fc5:	movsx  ecx,bl
64020fc8:	sub    ecx,0x30
64020fcb:	jmp    0x64020fe7
64020fcd:	test   cx,0x103
64020fd2:	je     0x64021005
64020fd4:	mov    cl,bl
64020fd6:	sub    cl,0x61
64020fd9:	cmp    cl,0x19
64020fdc:	movsx  ecx,bl
64020fdf:	ja     0x64020fe4
64020fe1:	sub    ecx,0x20
64020fe4:	add    ecx,0xffffffc9
64020fe7:	cmp    ecx,DWORD PTR [ebp+0x14]
64020fea:	jae    0x64021005
64020fec:	or     DWORD PTR [ebp+0x18],0x8
64020ff0:	cmp    DWORD PTR [ebp-0x4],eax
64020ff3:	jb     0x6402101c
64020ff5:	jne    0x64020ffb
64020ff7:	cmp    ecx,edx
64020ff9:	jbe    0x6402101c
64020ffb:	or     DWORD PTR [ebp+0x18],0x4
64020fff:	cmp    DWORD PTR [ebp+0x10],0x0
64021003:	jne    0x64021028
64021005:	mov    eax,DWORD PTR [ebp+0x18]
64021008:	dec    edi
64021009:	test   al,0x8
6402100b:	jne    0x6402102d
6402100d:	cmp    DWORD PTR [ebp+0x10],0x0
64021011:	je     0x64021016
64021013:	mov    edi,DWORD PTR [ebp+0xc]
64021016:	and    DWORD PTR [ebp-0x4],0x0
6402101a:	jmp    0x64021078
6402101c:	mov    ebx,DWORD PTR [ebp-0x4]
6402101f:	imul   ebx,DWORD PTR [ebp+0x14]
64021023:	add    ebx,ecx
64021025:	mov    DWORD PTR [ebp-0x4],ebx
64021028:	mov    bl,BYTE PTR [edi]
6402102a:	inc    edi
6402102b:	jmp    0x64020fb9
6402102d:	test   al,0x4
6402102f:	mov    esi,0x7fffffff
64021034:	jne    0x64021051
64021036:	test   al,0x1
64021038:	jne    0x64021078
6402103a:	and    eax,0x2
6402103d:	je     0x64021048
6402103f:	cmp    DWORD PTR [ebp-0x4],0x80000000
64021046:	ja     0x64021051
64021048:	test   eax,eax
6402104a:	jne    0x64021078
6402104c:	cmp    DWORD PTR [ebp-0x4],esi
6402104f:	jbe    0x64021078
64021051:	call   0x640166d3
64021056:	test   BYTE PTR [ebp+0x18],0x1
6402105a:	mov    DWORD PTR [eax],0x22
64021060:	je     0x64021068
64021062:	or     DWORD PTR [ebp-0x4],0xffffffff
64021066:	jmp    0x64021078
64021068:	mov    al,BYTE PTR [ebp+0x18]
6402106b:	and    al,0x2
6402106d:	neg    al
6402106f:	sbb    eax,eax
64021071:	neg    eax
64021073:	add    eax,esi
64021075:	mov    DWORD PTR [ebp-0x4],eax
64021078:	mov    eax,DWORD PTR [ebp+0x10]
6402107b:	test   eax,eax
6402107d:	je     0x64021081
6402107f:	mov    DWORD PTR [eax],edi
64021081:	test   BYTE PTR [ebp+0x18],0x2
64021085:	je     0x6402108a
64021087:	neg    DWORD PTR [ebp-0x4]
6402108a:	cmp    BYTE PTR [ebp-0x8],0x0
6402108e:	je     0x64021097
64021090:	mov    eax,DWORD PTR [ebp-0xc]
64021093:	and    DWORD PTR [eax+0x70],0xfffffffd
64021097:	mov    eax,DWORD PTR [ebp-0x4]
6402109a:	jmp    0x640210b4
6402109c:	mov    eax,DWORD PTR [ebp+0x10]
6402109f:	test   eax,eax
640210a1:	je     0x640210a5
640210a3:	mov    DWORD PTR [eax],esi
640210a5:	cmp    BYTE PTR [ebp-0x8],0x0
640210a9:	je     0x640210b2
640210ab:	mov    eax,DWORD PTR [ebp-0xc]
640210ae:	and    DWORD PTR [eax+0x70],0xfffffffd
640210b2:	xor    eax,eax
640210b4:	pop    ebx
640210b5:	pop    edi
640210b6:	pop    esi
640210b7:	leave  
640210b8:	ret    
640210b9:	push   ebp
640210ba:	mov    ebp,esp
640210bc:	xor    eax,eax
640210be:	cmp    DWORD PTR ds:0x64053a28,eax
640210c4:	push   eax
640210c5:	push   DWORD PTR [ebp+0x10]
640210c8:	push   DWORD PTR [ebp+0xc]
640210cb:	push   DWORD PTR [ebp+0x8]
640210ce:	jne    0x640210d7
640210d0:	push   0x64052b68
640210d5:	jmp    0x640210d8
640210d7:	push   eax
640210d8:	call   0x64020e8e
640210dd:	add    esp,0x14
640210e0:	pop    ebp
640210e1:	ret    
640210e2:	push   0xc
640210e4:	push   0x64044018
640210e9:	call   0x640164d4
640210ee:	and    DWORD PTR [ebp-0x4],0x0
640210f2:	movapd xmm0,xmm1
640210f6:	mov    DWORD PTR [ebp-0x1c],0x1
640210fd:	jmp    0x64021122
640210ff:	mov    eax,DWORD PTR [ebp-0x14]
64021102:	mov    eax,DWORD PTR [eax]
64021104:	mov    eax,DWORD PTR [eax]
64021106:	cmp    eax,0xc0000005
6402110b:	je     0x64021117
6402110d:	cmp    eax,0xc000001d
64021112:	je     0x64021117
64021114:	xor    eax,eax
64021116:	ret    
64021117:	xor    eax,eax
64021119:	inc    eax
6402111a:	ret    
6402111b:	mov    esp,DWORD PTR [ebp-0x18]
6402111e:	and    DWORD PTR [ebp-0x1c],0x0
64021122:	mov    DWORD PTR [ebp-0x4],0xfffffffe
64021129:	mov    eax,DWORD PTR [ebp-0x1c]
6402112c:	call   0x64016519
64021131:	ret    
64021132:	push   ebp
64021133:	mov    ebp,esp
64021135:	sub    esp,0x18
64021138:	xor    eax,eax
6402113a:	push   ebx
6402113b:	mov    DWORD PTR [ebp-0x4],eax
6402113e:	mov    DWORD PTR [ebp-0xc],eax
64021141:	mov    DWORD PTR [ebp-0x8],eax
64021144:	push   ebx
64021145:	pushf  
64021146:	pop    eax
64021147:	mov    ecx,eax
64021149:	xor    eax,0x200000
6402114e:	push   eax
6402114f:	popf   
64021150:	pushf  
64021151:	pop    edx
64021152:	sub    edx,ecx
64021154:	je     0x64021175
64021156:	push   ecx
64021157:	popf   
64021158:	xor    eax,eax
6402115a:	cpuid  
6402115c:	mov    DWORD PTR [ebp-0xc],eax
6402115f:	mov    DWORD PTR [ebp-0x18],ebx
64021162:	mov    DWORD PTR [ebp-0x14],edx
64021165:	mov    DWORD PTR [ebp-0x10],ecx
64021168:	mov    eax,0x1
6402116d:	cpuid  
6402116f:	mov    DWORD PTR [ebp-0x4],edx
64021172:	mov    DWORD PTR [ebp-0x8],eax
64021175:	pop    ebx
64021176:	test   DWORD PTR [ebp-0x4],0x4000000
6402117d:	je     0x6402118d
6402117f:	call   0x640210e2
64021184:	test   eax,eax
64021186:	je     0x6402118d
64021188:	xor    eax,eax
6402118a:	inc    eax
6402118b:	jmp    0x6402118f
6402118d:	xor    eax,eax
6402118f:	pop    ebx
64021190:	leave  
64021191:	ret    
64021192:	call   0x64021132
64021197:	mov    ds:0x64054698,eax
6402119c:	xor    eax,eax
6402119e:	ret    
6402119f:	push   0xa
640211a1:	push   0x0
640211a3:	push   DWORD PTR [esp+0xc]
640211a7:	call   0x640210b9
640211ac:	add    esp,0xc
640211af:	ret    
640211b0:	push   0x2
640211b2:	call   0x64018026
640211b7:	pop    ecx
640211b8:	ret    
640211b9:	xor    eax,eax
640211bb:	push   eax
640211bc:	push   eax
640211bd:	push   0x3
640211bf:	push   eax
640211c0:	push   0x3
640211c2:	push   0x40000000
640211c7:	push   0x640419a0
640211cc:	call   DWORD PTR ds:0x6402c010
640211d2:	mov    ds:0x640534c4,eax
640211d7:	ret    
640211d8:	mov    eax,ds:0x640534c4
640211dd:	cmp    eax,0xffffffff
640211e0:	push   esi
640211e1:	mov    esi,DWORD PTR ds:0x6402c078
640211e7:	je     0x640211f1
640211e9:	cmp    eax,0xfffffffe
640211ec:	je     0x640211f1
640211ee:	push   eax
640211ef:	call   esi
640211f1:	mov    eax,ds:0x640534c0
640211f6:	cmp    eax,0xffffffff
640211f9:	je     0x64021203
640211fb:	cmp    eax,0xfffffffe
640211fe:	je     0x64021203
64021200:	push   eax
64021201:	call   esi
64021203:	pop    esi
64021204:	ret    
64021205:	push   ebp
64021206:	mov    ebp,esp
64021208:	sub    esp,0x28
6402120b:	mov    eax,ds:0x640521ac
64021210:	xor    eax,ebp
64021212:	mov    DWORD PTR [ebp-0x4],eax
64021215:	push   ebx
64021216:	push   esi
64021217:	mov    esi,DWORD PTR [ebp+0x8]
6402121a:	push   edi
6402121b:	push   DWORD PTR [ebp+0x10]
6402121e:	mov    edi,DWORD PTR [ebp+0xc]
64021221:	lea    ecx,[ebp-0x24]
64021224:	call   0x64014335
64021229:	lea    eax,[ebp-0x24]
6402122c:	push   eax
6402122d:	xor    ebx,ebx
6402122f:	push   ebx
64021230:	push   ebx
64021231:	push   ebx
64021232:	push   ebx
64021233:	push   edi
64021234:	lea    eax,[ebp-0x28]
64021237:	push   eax
64021238:	lea    eax,[ebp-0x10]
6402123b:	push   eax
6402123c:	call   0x64021881
64021241:	mov    DWORD PTR [ebp-0x14],eax
64021244:	lea    eax,[ebp-0x10]
64021247:	push   esi
64021248:	push   eax
64021249:	call   0x6401f140
6402124e:	add    esp,0x28
64021251:	test   BYTE PTR [ebp-0x14],0x3
64021255:	jne    0x64021282
64021257:	cmp    eax,0x1
6402125a:	jne    0x6402126d
6402125c:	cmp    BYTE PTR [ebp-0x18],bl
6402125f:	je     0x64021268
64021261:	mov    eax,DWORD PTR [ebp-0x1c]
64021264:	and    DWORD PTR [eax+0x70],0xfffffffd
64021268:	push   0x3
6402126a:	pop    eax
6402126b:	jmp    0x6402129c
6402126d:	cmp    eax,0x2
64021270:	jne    0x6402128e
64021272:	cmp    BYTE PTR [ebp-0x18],bl
64021275:	je     0x6402127e
64021277:	mov    eax,DWORD PTR [ebp-0x1c]
6402127a:	and    DWORD PTR [eax+0x70],0xfffffffd
6402127e:	push   0x4
64021280:	jmp    0x6402126a
64021282:	test   BYTE PTR [ebp-0x14],0x1
64021286:	jne    0x64021272
64021288:	test   BYTE PTR [ebp-0x14],0x2
6402128c:	jne    0x6402125c
6402128e:	cmp    BYTE PTR [ebp-0x18],bl
64021291:	je     0x6402129a
64021293:	mov    eax,DWORD PTR [ebp-0x1c]
64021296:	and    DWORD PTR [eax+0x70],0xfffffffd
6402129a:	xor    eax,eax
6402129c:	mov    ecx,DWORD PTR [ebp-0x4]
6402129f:	pop    edi
640212a0:	pop    esi
640212a1:	xor    ecx,ebp
640212a3:	pop    ebx
640212a4:	call   0x64013d18
640212a9:	leave  
640212aa:	ret    
640212ab:	push   ebp
640212ac:	mov    ebp,esp
640212ae:	sub    esp,0x28
640212b1:	mov    eax,ds:0x640521ac
640212b6:	xor    eax,ebp
640212b8:	mov    DWORD PTR [ebp-0x4],eax
640212bb:	push   ebx
640212bc:	push   esi
640212bd:	mov    esi,DWORD PTR [ebp+0x8]
640212c0:	push   edi
640212c1:	push   DWORD PTR [ebp+0x10]
640212c4:	mov    edi,DWORD PTR [ebp+0xc]
640212c7:	lea    ecx,[ebp-0x24]
640212ca:	call   0x64014335
640212cf:	lea    eax,[ebp-0x24]
640212d2:	push   eax
640212d3:	xor    ebx,ebx
640212d5:	push   ebx
640212d6:	push   ebx
640212d7:	push   ebx
640212d8:	push   ebx
640212d9:	push   edi
640212da:	lea    eax,[ebp-0x28]
640212dd:	push   eax
640212de:	lea    eax,[ebp-0x10]
640212e1:	push   eax
640212e2:	call   0x64021881
640212e7:	mov    DWORD PTR [ebp-0x14],eax
640212ea:	lea    eax,[ebp-0x10]
640212ed:	push   esi
640212ee:	push   eax
640212ef:	call   0x6401f682
640212f4:	add    esp,0x28
640212f7:	test   BYTE PTR [ebp-0x14],0x3
640212fb:	jne    0x64021328
640212fd:	cmp    eax,0x1
64021300:	jne    0x64021313
64021302:	cmp    BYTE PTR [ebp-0x18],bl
64021305:	je     0x6402130e
64021307:	mov    eax,DWORD PTR [ebp-0x1c]
6402130a:	and    DWORD PTR [eax+0x70],0xfffffffd
6402130e:	push   0x3
64021310:	pop    eax
64021311:	jmp    0x64021342
64021313:	cmp    eax,0x2
64021316:	jne    0x64021334
64021318:	cmp    BYTE PTR [ebp-0x18],bl
6402131b:	je     0x64021324
6402131d:	mov    eax,DWORD PTR [ebp-0x1c]
64021320:	and    DWORD PTR [eax+0x70],0xfffffffd
64021324:	push   0x4
64021326:	jmp    0x64021310
64021328:	test   BYTE PTR [ebp-0x14],0x1
6402132c:	jne    0x64021318
6402132e:	test   BYTE PTR [ebp-0x14],0x2
64021332:	jne    0x64021302
64021334:	cmp    BYTE PTR [ebp-0x18],bl
64021337:	je     0x64021340
64021339:	mov    eax,DWORD PTR [ebp-0x1c]
6402133c:	and    DWORD PTR [eax+0x70],0xfffffffd
64021340:	xor    eax,eax
64021342:	mov    ecx,DWORD PTR [ebp-0x4]
64021345:	pop    edi
64021346:	pop    esi
64021347:	xor    ecx,ebp
64021349:	pop    ebx
6402134a:	call   0x64013d18
6402134f:	leave  
64021350:	ret    
64021351:	push   ebp
64021352:	mov    ebp,esp
64021354:	mov    ecx,DWORD PTR [ebp+0x14]
64021357:	push   ebx
64021358:	push   esi
64021359:	mov    esi,DWORD PTR [ebp+0x8]
6402135c:	xor    ebx,ebx
6402135e:	cmp    esi,ebx
64021360:	push   edi
64021361:	mov    edi,DWORD PTR [ecx+0xc]
64021364:	jne    0x64021384
64021366:	call   0x640166d3
6402136b:	push   0x16
6402136d:	pop    esi
6402136e:	mov    DWORD PTR [eax],esi
64021370:	push   ebx
64021371:	push   ebx
64021372:	push   ebx
64021373:	push   ebx
64021374:	push   ebx
64021375:	call   0x64013e62
6402137a:	add    esp,0x14
6402137d:	mov    eax,esi
6402137f:	jmp    0x64021409
64021384:	cmp    DWORD PTR [ebp+0xc],ebx
64021387:	jbe    0x64021366
64021389:	mov    edx,DWORD PTR [ebp+0x10]
6402138c:	cmp    edx,ebx
6402138e:	mov    BYTE PTR [esi],bl
64021390:	jle    0x64021396
64021392:	mov    eax,edx
64021394:	jmp    0x64021398
64021396:	xor    eax,eax
64021398:	inc    eax
64021399:	cmp    DWORD PTR [ebp+0xc],eax
6402139c:	ja     0x640213ac
6402139e:	call   0x640166d3
640213a3:	push   0x22
640213a5:	pop    ecx
640213a6:	mov    DWORD PTR [eax],ecx
640213a8:	mov    esi,ecx
640213aa:	jmp    0x64021370
640213ac:	cmp    edx,ebx
640213ae:	mov    BYTE PTR [esi],0x30
640213b1:	lea    eax,[esi+0x1]
640213b4:	jle    0x640213d0
640213b6:	mov    cl,BYTE PTR [edi]
640213b8:	cmp    cl,bl
640213ba:	je     0x640213c2
640213bc:	movsx  ecx,cl
640213bf:	inc    edi
640213c0:	jmp    0x640213c5
640213c2:	push   0x30
640213c4:	pop    ecx
640213c5:	mov    BYTE PTR [eax],cl
640213c7:	inc    eax
640213c8:	dec    edx
640213c9:	cmp    edx,ebx
640213cb:	jg     0x640213b6
640213cd:	mov    ecx,DWORD PTR [ebp+0x14]
640213d0:	cmp    edx,ebx
640213d2:	mov    BYTE PTR [eax],bl
640213d4:	jl     0x640213e8
640213d6:	cmp    BYTE PTR [edi],0x35
640213d9:	jl     0x640213e8
640213db:	jmp    0x640213e0
640213dd:	mov    BYTE PTR [eax],0x30
640213e0:	dec    eax
640213e1:	cmp    BYTE PTR [eax],0x39
640213e4:	je     0x640213dd
640213e6:	inc    BYTE PTR [eax]
640213e8:	cmp    BYTE PTR [esi],0x31
640213eb:	jne    0x640213f2
640213ed:	inc    DWORD PTR [ecx+0x4]
640213f0:	jmp    0x64021407
640213f2:	lea    edi,[esi+0x1]
640213f5:	push   edi
640213f6:	call   0x64015b10
640213fb:	inc    eax
640213fc:	push   eax
640213fd:	push   edi
640213fe:	push   esi
640213ff:	call   0x64016720
64021404:	add    esp,0x10
64021407:	xor    eax,eax
64021409:	pop    edi
6402140a:	pop    esi
6402140b:	pop    ebx
6402140c:	pop    ebp
6402140d:	ret    
6402140e:	push   ebp
6402140f:	mov    ebp,esp
64021411:	push   ecx
64021412:	mov    edx,DWORD PTR [ebp+0xc]
64021415:	movzx  eax,WORD PTR [edx+0x6]
64021419:	push   ebx
6402141a:	mov    ecx,eax
6402141c:	push   esi
6402141d:	push   edi
6402141e:	shr    ecx,0x4
64021421:	and    eax,0x8000
64021426:	mov    edi,0x7ff
6402142b:	and    ecx,edi
6402142d:	mov    DWORD PTR [ebp+0xc],eax
64021430:	mov    eax,DWORD PTR [edx+0x4]
64021433:	mov    edx,DWORD PTR [edx]
64021435:	movzx  ebx,cx
64021438:	mov    esi,0x80000000
6402143d:	and    eax,0xfffff
64021442:	test   ebx,ebx
64021444:	mov    DWORD PTR [ebp-0x4],esi
64021447:	je     0x6402145c
64021449:	cmp    ebx,edi
6402144b:	je     0x64021455
6402144d:	add    ecx,0x3c00
64021453:	jmp    0x6402147d
64021455:	mov    edi,0x7fff
6402145a:	jmp    0x64021480
6402145c:	xor    ebx,ebx
6402145e:	cmp    eax,ebx
64021460:	jne    0x64021474
64021462:	cmp    edx,ebx
64021464:	jne    0x64021474
64021466:	mov    eax,DWORD PTR [ebp+0x8]
64021469:	mov    cx,WORD PTR [ebp+0xc]
6402146d:	mov    DWORD PTR [eax+0x4],ebx
64021470:	mov    DWORD PTR [eax],ebx
64021472:	jmp    0x640214c0
64021474:	add    ecx,0x3c01
6402147a:	mov    DWORD PTR [ebp-0x4],ebx
6402147d:	movzx  edi,cx
64021480:	mov    ecx,edx
64021482:	shr    ecx,0x15
64021485:	shl    eax,0xb
64021488:	or     ecx,eax
6402148a:	or     ecx,DWORD PTR [ebp-0x4]
6402148d:	mov    eax,DWORD PTR [ebp+0x8]
64021490:	shl    edx,0xb
64021493:	test   esi,ecx
64021495:	mov    DWORD PTR [eax+0x4],ecx
64021498:	mov    DWORD PTR [eax],edx
6402149a:	jne    0x640214bb
6402149c:	mov    ecx,DWORD PTR [eax]
6402149e:	mov    edx,DWORD PTR [eax+0x4]
640214a1:	mov    ebx,ecx
640214a3:	add    edx,edx
640214a5:	shr    ebx,0x1f
640214a8:	or     edx,ebx
640214aa:	add    ecx,ecx
640214ac:	add    edi,0xffff
640214b2:	test   esi,edx
640214b4:	mov    DWORD PTR [eax+0x4],edx
640214b7:	mov    DWORD PTR [eax],ecx
640214b9:	je     0x6402149c
640214bb:	mov    ecx,DWORD PTR [ebp+0xc]
640214be:	or     ecx,edi
640214c0:	pop    edi
640214c1:	pop    esi
640214c2:	mov    WORD PTR [eax+0x8],cx
640214c6:	pop    ebx
640214c7:	leave  
640214c8:	ret    
640214c9:	push   ebp
640214ca:	mov    ebp,esp
640214cc:	sub    esp,0x30
640214cf:	mov    eax,ds:0x640521ac
640214d4:	xor    eax,ebp
640214d6:	mov    DWORD PTR [ebp-0x4],eax
640214d9:	mov    eax,DWORD PTR [ebp+0x14]
640214dc:	push   ebx
640214dd:	mov    ebx,DWORD PTR [ebp+0x10]
640214e0:	push   esi
640214e1:	mov    DWORD PTR [ebp-0x30],eax
640214e4:	push   edi
640214e5:	lea    eax,[ebp+0x8]
640214e8:	push   eax
640214e9:	lea    eax,[ebp-0x10]
640214ec:	push   eax
640214ed:	call   0x6402140e
640214f2:	pop    ecx
640214f3:	pop    ecx
640214f4:	lea    eax,[ebp-0x2c]
640214f7:	push   eax
640214f8:	push   0x0
640214fa:	push   0x11
640214fc:	sub    esp,0xc
640214ff:	lea    esi,[ebp-0x10]
64021502:	mov    edi,esp
64021504:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
64021505:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
64021506:	movs   WORD PTR es:[edi],WORD PTR ds:[esi]
64021508:	call   0x64021f41
6402150d:	mov    esi,DWORD PTR [ebp-0x30]
64021510:	mov    DWORD PTR [ebx+0x8],eax
64021513:	movsx  eax,BYTE PTR [ebp-0x2a]
64021517:	mov    DWORD PTR [ebx],eax
64021519:	movsx  eax,WORD PTR [ebp-0x2c]
6402151d:	mov    DWORD PTR [ebx+0x4],eax
64021520:	lea    eax,[ebp-0x28]
64021523:	push   eax
64021524:	push   DWORD PTR [ebp+0x18]
64021527:	push   esi
64021528:	call   0x6401652d
6402152d:	add    esp,0x24
64021530:	test   eax,eax
64021532:	je     0x64021543
64021534:	xor    eax,eax
64021536:	push   eax
64021537:	push   eax
64021538:	push   eax
64021539:	push   eax
6402153a:	push   eax
6402153b:	call   0x64013d66
64021540:	add    esp,0x14
64021543:	mov    ecx,DWORD PTR [ebp-0x4]
64021546:	pop    edi
64021547:	mov    DWORD PTR [ebx+0xc],esi
6402154a:	pop    esi
6402154b:	mov    eax,ebx
6402154d:	xor    ecx,ebp
6402154f:	pop    ebx
64021550:	call   0x64013d18
64021555:	leave  
64021556:	ret    
64021557:	int3   
64021558:	int3   
64021559:	int3   
6402155a:	int3   
6402155b:	int3   
6402155c:	int3   
6402155d:	int3   
6402155e:	int3   
6402155f:	int3   
64021560:	push   edi
64021561:	push   esi
64021562:	push   ebp
64021563:	xor    edi,edi
64021565:	xor    ebp,ebp
64021567:	mov    eax,DWORD PTR [esp+0x14]
6402156b:	or     eax,eax
6402156d:	jge    0x64021584
6402156f:	inc    edi
64021570:	inc    ebp
64021571:	mov    edx,DWORD PTR [esp+0x10]
64021575:	neg    eax
64021577:	neg    edx
64021579:	sbb    eax,0x0
6402157c:	mov    DWORD PTR [esp+0x14],eax
64021580:	mov    DWORD PTR [esp+0x10],edx
64021584:	mov    eax,DWORD PTR [esp+0x1c]
64021588:	or     eax,eax
6402158a:	jge    0x640215a0
6402158c:	inc    edi
6402158d:	mov    edx,DWORD PTR [esp+0x18]
64021591:	neg    eax
64021593:	neg    edx
64021595:	sbb    eax,0x0
64021598:	mov    DWORD PTR [esp+0x1c],eax
6402159c:	mov    DWORD PTR [esp+0x18],edx
640215a0:	or     eax,eax
640215a2:	jne    0x640215cc
640215a4:	mov    ecx,DWORD PTR [esp+0x18]
640215a8:	mov    eax,DWORD PTR [esp+0x14]
640215ac:	xor    edx,edx
640215ae:	div    ecx
640215b0:	mov    ebx,eax
640215b2:	mov    eax,DWORD PTR [esp+0x10]
640215b6:	div    ecx
640215b8:	mov    esi,eax
640215ba:	mov    eax,ebx
640215bc:	mul    DWORD PTR [esp+0x18]
640215c0:	mov    ecx,eax
640215c2:	mov    eax,esi
640215c4:	mul    DWORD PTR [esp+0x18]
640215c8:	add    edx,ecx
640215ca:	jmp    0x64021613
640215cc:	mov    ebx,eax
640215ce:	mov    ecx,DWORD PTR [esp+0x18]
640215d2:	mov    edx,DWORD PTR [esp+0x14]
640215d6:	mov    eax,DWORD PTR [esp+0x10]
640215da:	shr    ebx,1
640215dc:	rcr    ecx,1
640215de:	shr    edx,1
640215e0:	rcr    eax,1
640215e2:	or     ebx,ebx
640215e4:	jne    0x640215da
640215e6:	div    ecx
640215e8:	mov    esi,eax
640215ea:	mul    DWORD PTR [esp+0x1c]
640215ee:	mov    ecx,eax
640215f0:	mov    eax,DWORD PTR [esp+0x18]
640215f4:	mul    esi
640215f6:	add    edx,ecx
640215f8:	jb     0x64021608
640215fa:	cmp    edx,DWORD PTR [esp+0x14]
640215fe:	ja     0x64021608
64021600:	jb     0x64021611
64021602:	cmp    eax,DWORD PTR [esp+0x10]
64021606:	jbe    0x64021611
64021608:	dec    esi
64021609:	sub    eax,DWORD PTR [esp+0x18]
6402160d:	sbb    edx,DWORD PTR [esp+0x1c]
64021611:	xor    ebx,ebx
64021613:	sub    eax,DWORD PTR [esp+0x10]
64021617:	sbb    edx,DWORD PTR [esp+0x14]
6402161b:	dec    ebp
6402161c:	jns    0x64021625
6402161e:	neg    edx
64021620:	neg    eax
64021622:	sbb    edx,0x0
64021625:	mov    ecx,edx
64021627:	mov    edx,ebx
64021629:	mov    ebx,ecx
6402162b:	mov    ecx,eax
6402162d:	mov    eax,esi
6402162f:	dec    edi
64021630:	jne    0x64021639
64021632:	neg    edx
64021634:	neg    eax
64021636:	sbb    edx,0x0
64021639:	pop    ebp
6402163a:	pop    esi
6402163b:	pop    edi
6402163c:	ret    0x10
6402163f:	push   ebp
64021640:	mov    ebp,esp
64021642:	mov    eax,DWORD PTR [ebp+0x10]
64021645:	mov    ecx,DWORD PTR [ebp+0xc]
64021648:	and    eax,0xfff7ffff
6402164d:	and    ecx,eax
6402164f:	test   ecx,0xfcf0fce0
64021655:	push   esi
64021656:	je     0x64021689
64021658:	push   edi
64021659:	mov    edi,DWORD PTR [ebp+0x8]
6402165c:	xor    esi,esi
6402165e:	cmp    edi,esi
64021660:	je     0x6402166d
64021662:	push   esi
64021663:	push   esi
64021664:	call   0x64022935
64021669:	pop    ecx
6402166a:	pop    ecx
6402166b:	mov    DWORD PTR [edi],eax
6402166d:	call   0x640166d3
64021672:	push   0x16
64021674:	pop    edi
64021675:	push   esi
64021676:	push   esi
64021677:	push   esi
64021678:	push   esi
64021679:	push   esi
6402167a:	mov    DWORD PTR [eax],edi
6402167c:	call   0x64013e62
64021681:	add    esp,0x14
64021684:	mov    eax,edi
64021686:	pop    edi
64021687:	jmp    0x640216a6
64021689:	mov    esi,DWORD PTR [ebp+0x8]
6402168c:	test   esi,esi
6402168e:	push   eax
6402168f:	push   DWORD PTR [ebp+0xc]
64021692:	je     0x6402169d
64021694:	call   0x64022935
64021699:	mov    DWORD PTR [esi],eax
6402169b:	jmp    0x640216a2
6402169d:	call   0x64022935
640216a2:	pop    ecx
640216a3:	pop    ecx
640216a4:	xor    eax,eax
640216a6:	pop    esi
640216a7:	pop    ebp
640216a8:	ret    
640216a9:	push   ebp
640216aa:	mov    ebp,esp
640216ac:	push   ecx
640216ad:	push   esi
640216ae:	mov    esi,DWORD PTR [ebp+0xc]
640216b1:	push   esi
640216b2:	call   0x64019dfb
640216b7:	mov    DWORD PTR [ebp+0xc],eax
640216ba:	mov    eax,DWORD PTR [esi+0xc]
640216bd:	test   al,0x82
640216bf:	pop    ecx
640216c0:	jne    0x640216db
640216c2:	call   0x640166d3
640216c7:	mov    DWORD PTR [eax],0x9
640216cd:	or     DWORD PTR [esi+0xc],0x20
640216d1:	mov    eax,0xffff
640216d6:	jmp    0x64021816
640216db:	test   al,0x40
640216dd:	je     0x640216ec
640216df:	call   0x640166d3
640216e4:	mov    DWORD PTR [eax],0x22
640216ea:	jmp    0x640216cd
640216ec:	test   al,0x1
640216ee:	je     0x64021707
640216f0:	and    DWORD PTR [esi+0x4],0x0
640216f4:	test   al,0x10
640216f6:	je     0x64021787
640216fc:	mov    ecx,DWORD PTR [esi+0x8]
640216ff:	and    eax,0xfffffffe
64021702:	mov    DWORD PTR [esi],ecx
64021704:	mov    DWORD PTR [esi+0xc],eax
64021707:	mov    eax,DWORD PTR [esi+0xc]
6402170a:	and    DWORD PTR [esi+0x4],0x0
6402170e:	and    DWORD PTR [ebp-0x4],0x0
64021712:	push   ebx
64021713:	push   0x2
64021715:	and    eax,0xffffffef
64021718:	pop    ebx
64021719:	or     eax,ebx
6402171b:	test   ax,0x10c
6402171f:	mov    DWORD PTR [esi+0xc],eax
64021722:	jne    0x64021750
64021724:	call   0x64019b05
64021729:	add    eax,0x20
6402172c:	cmp    esi,eax
6402172e:	je     0x6402173c
64021730:	call   0x64019b05
64021735:	add    eax,0x40
64021738:	cmp    esi,eax
6402173a:	jne    0x64021749
6402173c:	push   DWORD PTR [ebp+0xc]
6402173f:	call   0x6401eb63
64021744:	test   eax,eax
64021746:	pop    ecx
64021747:	jne    0x64021750
64021749:	push   esi
6402174a:	call   0x6401eb1f
6402174f:	pop    ecx
64021750:	test   WORD PTR [esi+0xc],0x108
64021756:	push   edi
64021757:	je     0x640217e0
6402175d:	mov    eax,DWORD PTR [esi+0x8]
64021760:	mov    edi,DWORD PTR [esi]
64021762:	lea    ecx,[eax+0x2]
64021765:	mov    DWORD PTR [esi],ecx
64021767:	mov    ecx,DWORD PTR [esi+0x18]
6402176a:	sub    edi,eax
6402176c:	sub    ecx,ebx
6402176e:	test   edi,edi
64021770:	mov    DWORD PTR [esi+0x4],ecx
64021773:	jle    0x64021792
64021775:	push   edi
64021776:	push   eax
64021777:	push   DWORD PTR [ebp+0xc]
6402177a:	call   0x6401b248
6402177f:	add    esp,0xc
64021782:	mov    DWORD PTR [ebp-0x4],eax
64021785:	jmp    0x640217d5
64021787:	or     eax,0x20
6402178a:	mov    DWORD PTR [esi+0xc],eax
6402178d:	jmp    0x640216d1
64021792:	mov    ecx,DWORD PTR [ebp+0xc]
64021795:	cmp    ecx,0xffffffff
64021798:	je     0x640217b5
6402179a:	cmp    ecx,0xfffffffe
6402179d:	je     0x640217b5
6402179f:	mov    eax,ecx
640217a1:	and    eax,0x1f
640217a4:	mov    edx,ecx
640217a6:	sar    edx,0x5
640217a9:	shl    eax,0x6
640217ac:	add    eax,DWORD PTR [edx*4+0x640556e0]
640217b3:	jmp    0x640217ba
640217b5:	mov    eax,0x64052488
640217ba:	test   BYTE PTR [eax+0x4],0x20
640217be:	je     0x640217d5
640217c0:	push   ebx
640217c1:	push   0x0
640217c3:	push   0x0
640217c5:	push   ecx
640217c6:	call   0x640197a1
640217cb:	and    eax,edx
640217cd:	add    esp,0x10
640217d0:	cmp    eax,0xffffffff
640217d3:	je     0x64021802
640217d5:	mov    eax,DWORD PTR [esi+0x8]
640217d8:	mov    ebx,DWORD PTR [ebp+0x8]
640217db:	mov    WORD PTR [eax],bx
640217de:	jmp    0x640217fd
640217e0:	push   0x2
640217e2:	lea    eax,[ebp-0x4]
640217e5:	push   eax
640217e6:	push   DWORD PTR [ebp+0xc]
640217e9:	mov    edi,ebx
640217eb:	mov    ebx,DWORD PTR [ebp+0x8]
640217ee:	mov    WORD PTR [ebp-0x4],bx
640217f2:	call   0x6401b248
640217f7:	add    esp,0xc
640217fa:	mov    DWORD PTR [ebp-0x4],eax
640217fd:	cmp    DWORD PTR [ebp-0x4],edi
64021800:	je     0x6402180d
64021802:	or     DWORD PTR [esi+0xc],0x20
64021806:	mov    eax,0xffff
6402180b:	jmp    0x64021814
6402180d:	mov    eax,ebx
6402180f:	and    eax,0xffff
64021814:	pop    edi
64021815:	pop    ebx
64021816:	pop    esi
64021817:	leave  
64021818:	ret    
64021819:	int3   
6402181a:	int3   
6402181b:	int3   
6402181c:	int3   
6402181d:	int3   
6402181e:	int3   
6402181f:	int3   
64021820:	push   ebp
64021821:	mov    ebp,esp
64021823:	push   edi
64021824:	push   esi
64021825:	push   ebx
64021826:	mov    ecx,DWORD PTR [ebp+0x10]
64021829:	or     ecx,ecx
6402182b:	je     0x6402187a
6402182d:	mov    esi,DWORD PTR [ebp+0x8]
64021830:	mov    edi,DWORD PTR [ebp+0xc]
64021833:	mov    bh,0x41
64021835:	mov    bl,0x5a
64021837:	mov    dh,0x20
64021839:	lea    ecx,[ecx+0x0]
6402183c:	mov    ah,BYTE PTR [esi]
6402183e:	or     ah,ah
64021840:	mov    al,BYTE PTR [edi]
64021842:	je     0x6402186b
64021844:	or     al,al
64021846:	je     0x6402186b
64021848:	add    esi,0x1
6402184b:	add    edi,0x1
6402184e:	cmp    ah,bh
64021850:	jb     0x64021858
64021852:	cmp    ah,bl
64021854:	ja     0x64021858
64021856:	add    ah,dh
64021858:	cmp    al,bh
6402185a:	jb     0x64021862
6402185c:	cmp    al,bl
6402185e:	ja     0x64021862
64021860:	add    al,dh
64021862:	cmp    ah,al
64021864:	jne    0x64021871
64021866:	sub    ecx,0x1
64021869:	jne    0x6402183c
6402186b:	xor    ecx,ecx
6402186d:	cmp    ah,al
6402186f:	je     0x6402187a
64021871:	mov    ecx,0xffffffff
64021876:	jb     0x6402187a
64021878:	neg    ecx
6402187a:	mov    eax,ecx
6402187c:	pop    ebx
6402187d:	pop    esi
6402187e:	pop    edi
6402187f:	leave  
64021880:	ret    
64021881:	push   ebp
64021882:	mov    ebp,esp
64021884:	sub    esp,0x7c
64021887:	mov    eax,ds:0x640521ac
6402188c:	xor    eax,ebp
6402188e:	mov    DWORD PTR [ebp-0x4],eax
64021891:	mov    eax,DWORD PTR [ebp+0x8]
64021894:	push   ebx
64021895:	xor    ebx,ebx
64021897:	push   esi
64021898:	xor    esi,esi
6402189a:	mov    DWORD PTR [ebp-0x7c],eax
6402189d:	mov    eax,DWORD PTR [ebp+0xc]
640218a0:	inc    esi
640218a1:	xor    ecx,ecx
640218a3:	cmp    DWORD PTR [ebp+0x24],ebx
640218a6:	push   edi
640218a7:	mov    DWORD PTR [ebp-0x70],eax
640218aa:	lea    edi,[ebp-0x20]
640218ad:	mov    DWORD PTR [ebp-0x74],ebx
640218b0:	mov    DWORD PTR [ebp-0x68],esi
640218b3:	mov    DWORD PTR [ebp-0x4c],ebx
640218b6:	mov    DWORD PTR [ebp-0x58],ebx
640218b9:	mov    DWORD PTR [ebp-0x5c],ebx
640218bc:	mov    DWORD PTR [ebp-0x60],ebx
640218bf:	mov    DWORD PTR [ebp-0x64],ebx
640218c2:	mov    DWORD PTR [ebp-0x50],ebx
640218c5:	mov    DWORD PTR [ebp-0x6c],ebx
640218c8:	jne    0x640218e9
640218ca:	call   0x640166d3
640218cf:	push   ebx
640218d0:	push   ebx
640218d1:	push   ebx
640218d2:	push   ebx
640218d3:	push   ebx
640218d4:	mov    DWORD PTR [eax],0x16
640218da:	call   0x64013e62
640218df:	add    esp,0x14
640218e2:	xor    eax,eax
640218e4:	jmp    0x64021f02
640218e9:	mov    edx,DWORD PTR [ebp+0x10]
640218ec:	mov    DWORD PTR [ebp-0x54],edx
640218ef:	mov    al,BYTE PTR [edx]
640218f1:	cmp    al,0x20
640218f3:	je     0x64021901
640218f5:	cmp    al,0x9
640218f7:	je     0x64021901
640218f9:	cmp    al,0xa
640218fb:	je     0x64021901
640218fd:	cmp    al,0xd
640218ff:	jne    0x64021904
64021901:	inc    edx
64021902:	jmp    0x640218ef
64021904:	mov    bl,0x30
64021906:	mov    al,BYTE PTR [edx]
64021908:	inc    edx
64021909:	cmp    ecx,0xb
6402190c:	ja     0x64021b41
64021912:	jmp    DWORD PTR [ecx*4+0x64021f11]
64021919:	mov    cl,al
6402191b:	sub    cl,0x31
6402191e:	cmp    cl,0x8
64021921:	ja     0x64021929
64021923:	push   0x3
64021925:	pop    ecx
64021926:	dec    edx
64021927:	jmp    0x64021906
64021929:	mov    ecx,DWORD PTR [ebp+0x24]
6402192c:	mov    ecx,DWORD PTR [ecx]
6402192e:	mov    ecx,DWORD PTR [ecx+0xbc]
64021934:	mov    ecx,DWORD PTR [ecx]
64021936:	cmp    al,BYTE PTR [ecx]
64021938:	jne    0x6402193f
6402193a:	push   0x5
6402193c:	pop    ecx
6402193d:	jmp    0x64021906
6402193f:	movsx  eax,al
64021942:	sub    eax,0x2b
64021945:	je     0x64021964
64021947:	dec    eax
64021948:	dec    eax
64021949:	je     0x64021958
6402194b:	sub    eax,0x3
6402194e:	jne    0x64021adf
64021954:	mov    ecx,esi
64021956:	jmp    0x64021906
64021958:	push   0x2
6402195a:	pop    ecx
6402195b:	mov    DWORD PTR [ebp-0x74],0x8000
64021962:	jmp    0x64021906
64021964:	and    DWORD PTR [ebp-0x74],0x0
64021968:	push   0x2
6402196a:	pop    ecx
6402196b:	jmp    0x64021906
6402196d:	mov    cl,al
6402196f:	sub    cl,0x31
64021972:	cmp    cl,0x8
64021975:	mov    DWORD PTR [ebp-0x58],esi
64021978:	jbe    0x64021923
6402197a:	mov    ecx,DWORD PTR [ebp+0x24]
6402197d:	mov    ecx,DWORD PTR [ecx]
6402197f:	mov    ecx,DWORD PTR [ecx+0xbc]
64021985:	mov    ecx,DWORD PTR [ecx]
64021987:	cmp    al,BYTE PTR [ecx]
64021989:	jne    0x6402198f
6402198b:	push   0x4
6402198d:	jmp    0x6402193c
6402198f:	cmp    al,0x2b
64021991:	je     0x640219bb
64021993:	cmp    al,0x2d
64021995:	je     0x640219bb
64021997:	cmp    al,bl
64021999:	je     0x64021954
6402199b:	cmp    al,0x43
6402199d:	jle    0x64021adf
640219a3:	cmp    al,0x45
640219a5:	jle    0x640219b7
640219a7:	cmp    al,0x63
640219a9:	jle    0x64021adf
640219af:	cmp    al,0x65
640219b1:	jg     0x64021adf
640219b7:	push   0x6
640219b9:	jmp    0x6402193c
640219bb:	dec    edx
640219bc:	push   0xb
640219be:	jmp    0x6402193c
640219c3:	mov    cl,al
640219c5:	sub    cl,0x31
640219c8:	cmp    cl,0x8
640219cb:	jbe    0x64021923
640219d1:	mov    ecx,DWORD PTR [ebp+0x24]
640219d4:	mov    ecx,DWORD PTR [ecx]
640219d6:	mov    ecx,DWORD PTR [ecx+0xbc]
640219dc:	mov    ecx,DWORD PTR [ecx]
640219de:	cmp    al,BYTE PTR [ecx]
640219e0:	je     0x6402193a
640219e6:	cmp    al,bl
640219e8:	je     0x64021954
640219ee:	mov    edx,DWORD PTR [ebp-0x54]
640219f1:	jmp    0x64021b0a
640219f6:	mov    DWORD PTR [ebp-0x58],esi
640219f9:	jmp    0x64021a15
640219fb:	cmp    al,0x39
640219fd:	jg     0x64021a19
640219ff:	cmp    DWORD PTR [ebp-0x4c],0x19
64021a03:	jae    0x64021a0f
64021a05:	inc    DWORD PTR [ebp-0x4c]
64021a08:	sub    al,bl
64021a0a:	mov    BYTE PTR [edi],al
64021a0c:	inc    edi
64021a0d:	jmp    0x64021a12
64021a0f:	inc    DWORD PTR [ebp-0x50]
64021a12:	mov    al,BYTE PTR [edx]
64021a14:	inc    edx
64021a15:	cmp    al,bl
64021a17:	jge    0x640219fb
64021a19:	mov    ecx,DWORD PTR [ebp+0x24]
64021a1c:	mov    ecx,DWORD PTR [ecx]
64021a1e:	mov    ecx,DWORD PTR [ecx+0xbc]
64021a24:	mov    ecx,DWORD PTR [ecx]
64021a26:	cmp    al,BYTE PTR [ecx]
64021a28:	je     0x6402198b
64021a2e:	cmp    al,0x2b
64021a30:	je     0x640219bb
64021a32:	cmp    al,0x2d
64021a34:	je     0x640219bb
64021a36:	jmp    0x6402199b
64021a3b:	cmp    DWORD PTR [ebp-0x4c],0x0
64021a3f:	mov    DWORD PTR [ebp-0x58],esi
64021a42:	mov    DWORD PTR [ebp-0x5c],esi
64021a45:	jne    0x64021a6d
64021a47:	jmp    0x64021a4f
64021a49:	dec    DWORD PTR [ebp-0x50]
64021a4c:	mov    al,BYTE PTR [edx]
64021a4e:	inc    edx
64021a4f:	cmp    al,bl
64021a51:	je     0x64021a49
64021a53:	jmp    0x64021a6d
64021a55:	cmp    al,0x39
64021a57:	jg     0x64021a2e
64021a59:	cmp    DWORD PTR [ebp-0x4c],0x19
64021a5d:	jae    0x64021a6a
64021a5f:	inc    DWORD PTR [ebp-0x4c]
64021a62:	sub    al,bl
64021a64:	mov    BYTE PTR [edi],al
64021a66:	inc    edi
64021a67:	dec    DWORD PTR [ebp-0x50]
64021a6a:	mov    al,BYTE PTR [edx]
64021a6c:	inc    edx
64021a6d:	cmp    al,bl
64021a6f:	jge    0x64021a55
64021a71:	jmp    0x64021a2e
64021a73:	sub    al,bl
64021a75:	cmp    al,0x9
64021a77:	mov    DWORD PTR [ebp-0x5c],esi
64021a7a:	ja     0x640219ee
64021a80:	push   0x4
64021a82:	jmp    0x64021925
64021a87:	lea    ecx,[edx-0x2]
64021a8a:	mov    DWORD PTR [ebp-0x54],ecx
64021a8d:	mov    cl,al
64021a8f:	sub    cl,0x31
64021a92:	cmp    cl,0x8
64021a95:	ja     0x64021a9e
64021a97:	push   0x9
64021a99:	jmp    0x64021925
64021a9e:	movsx  eax,al
64021aa1:	sub    eax,0x2b
64021aa4:	je     0x64021ac6
64021aa6:	dec    eax
64021aa7:	dec    eax
64021aa8:	je     0x64021aba
64021aaa:	sub    eax,0x3
64021aad:	jne    0x640219ee
64021ab3:	push   0x8
64021ab5:	jmp    0x6402193c
64021aba:	or     DWORD PTR [ebp-0x68],0xffffffff
64021abe:	push   0x7
64021ac0:	pop    ecx
64021ac1:	jmp    0x64021906
64021ac6:	push   0x7
64021ac8:	jmp    0x6402193c
64021acd:	mov    DWORD PTR [ebp-0x60],esi
64021ad0:	jmp    0x64021ad5
64021ad2:	mov    al,BYTE PTR [edx]
64021ad4:	inc    edx
64021ad5:	cmp    al,bl
64021ad7:	je     0x64021ad2
64021ad9:	sub    al,0x31
64021adb:	cmp    al,0x8
64021add:	jbe    0x64021a97
64021adf:	dec    edx
64021ae0:	jmp    0x64021b0a
64021ae2:	mov    cl,al
64021ae4:	sub    cl,0x31
64021ae7:	cmp    cl,0x8
64021aea:	jbe    0x64021a97
64021aec:	cmp    al,bl
64021aee:	jmp    0x64021aad
64021af0:	cmp    DWORD PTR [ebp+0x20],0x0
64021af4:	je     0x64021b3d
64021af6:	movsx  eax,al
64021af9:	sub    eax,0x2b
64021afc:	lea    ecx,[edx-0x1]
64021aff:	mov    DWORD PTR [ebp-0x54],ecx
64021b02:	je     0x64021ac6
64021b04:	dec    eax
64021b05:	dec    eax
64021b06:	je     0x64021aba
64021b08:	mov    edx,ecx
64021b0a:	cmp    DWORD PTR [ebp-0x58],0x0
64021b0e:	mov    eax,DWORD PTR [ebp-0x70]
64021b11:	mov    DWORD PTR [eax],edx
64021b13:	je     0x64021ebd
64021b19:	push   0x18
64021b1b:	pop    eax
64021b1c:	cmp    DWORD PTR [ebp-0x4c],eax
64021b1f:	jbe    0x64021b31
64021b21:	cmp    BYTE PTR [ebp-0x9],0x5
64021b25:	jl     0x64021b2a
64021b27:	inc    BYTE PTR [ebp-0x9]
64021b2a:	dec    edi
64021b2b:	inc    DWORD PTR [ebp-0x50]
64021b2e:	mov    DWORD PTR [ebp-0x4c],eax
64021b31:	cmp    DWORD PTR [ebp-0x4c],0x0
64021b35:	jbe    0x64021ee4
64021b3b:	jmp    0x64021b96
64021b3d:	push   0xa
64021b3f:	pop    ecx
64021b40:	dec    edx
64021b41:	cmp    ecx,0xa
64021b44:	jne    0x64021906
64021b4a:	jmp    0x64021b0a
64021b4c:	mov    DWORD PTR [ebp-0x60],esi
64021b4f:	xor    ecx,ecx
64021b51:	jmp    0x64021b6c
64021b53:	cmp    al,0x39
64021b55:	jg     0x64021b77
64021b57:	imul   ecx,ecx,0xa
64021b5a:	movsx  esi,al
64021b5d:	lea    ecx,[ecx+esi*1-0x30]
64021b61:	cmp    ecx,0x1450
64021b67:	jg     0x64021b72
64021b69:	mov    al,BYTE PTR [edx]
64021b6b:	inc    edx
64021b6c:	cmp    al,bl
64021b6e:	jge    0x64021b53
64021b70:	jmp    0x64021b77
64021b72:	mov    ecx,0x1451
64021b77:	mov    DWORD PTR [ebp-0x64],ecx
64021b7a:	jmp    0x64021b87
64021b7c:	cmp    al,0x39
64021b7e:	jg     0x64021adf
64021b84:	mov    al,BYTE PTR [edx]
64021b86:	inc    edx
64021b87:	cmp    al,bl
64021b89:	jge    0x64021b7c
64021b8b:	jmp    0x64021adf
64021b90:	dec    DWORD PTR [ebp-0x4c]
64021b93:	inc    DWORD PTR [ebp-0x50]
64021b96:	dec    edi
64021b97:	cmp    BYTE PTR [edi],0x0
64021b9a:	je     0x64021b90
64021b9c:	lea    eax,[ebp-0x3c]
64021b9f:	push   eax
64021ba0:	push   DWORD PTR [ebp-0x4c]
64021ba3:	lea    eax,[ebp-0x20]
64021ba6:	push   eax
64021ba7:	call   0x64020962
64021bac:	mov    eax,DWORD PTR [ebp-0x64]
64021baf:	xor    ecx,ecx
64021bb1:	add    esp,0xc
64021bb4:	cmp    DWORD PTR [ebp-0x68],ecx
64021bb7:	jge    0x64021bbb
64021bb9:	neg    eax
64021bbb:	add    eax,DWORD PTR [ebp-0x50]
64021bbe:	cmp    DWORD PTR [ebp-0x60],ecx
64021bc1:	jne    0x64021bc6
64021bc3:	add    eax,DWORD PTR [ebp+0x18]
64021bc6:	cmp    DWORD PTR [ebp-0x5c],ecx
64021bc9:	jne    0x64021bce
64021bcb:	sub    eax,DWORD PTR [ebp+0x1c]
64021bce:	cmp    eax,0x1450
64021bd3:	jg     0x64021ec6
64021bd9:	cmp    eax,0xffffebb0
64021bde:	jl     0x64021edd
64021be4:	mov    esi,0x64053150
64021be9:	sub    esi,0x60
64021bec:	cmp    eax,ecx
64021bee:	mov    DWORD PTR [ebp-0x54],eax
64021bf1:	je     0x64021eab
64021bf7:	jge    0x64021c06
64021bf9:	neg    eax
64021bfb:	mov    esi,0x640532b0
64021c00:	mov    DWORD PTR [ebp-0x54],eax
64021c03:	sub    esi,0x60
64021c06:	cmp    DWORD PTR [ebp+0x14],ecx
64021c09:	jne    0x64021c0f
64021c0b:	mov    WORD PTR [ebp-0x3c],cx
64021c0f:	cmp    DWORD PTR [ebp-0x54],ecx
64021c12:	je     0x64021eab
64021c18:	mov    eax,DWORD PTR [ebp-0x54]
64021c1b:	sar    DWORD PTR [ebp-0x54],0x3
64021c1f:	add    esi,0x54
64021c22:	and    eax,0x7
64021c25:	test   eax,eax
64021c27:	mov    DWORD PTR [ebp-0x4c],esi
64021c2a:	je     0x64021ea1
64021c30:	imul   eax,eax,0xc
64021c33:	add    eax,esi
64021c35:	mov    ebx,eax
64021c37:	cmp    WORD PTR [ebx],0x8000
64021c3c:	mov    DWORD PTR [ebp-0x70],ebx
64021c3f:	jb     0x64021c55
64021c41:	mov    esi,ebx
64021c43:	lea    edi,[ebp-0x48]
64021c46:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
64021c47:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
64021c48:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
64021c49:	dec    DWORD PTR [ebp-0x46]
64021c4c:	mov    esi,DWORD PTR [ebp-0x4c]
64021c4f:	lea    ebx,[ebp-0x48]
64021c52:	mov    DWORD PTR [ebp-0x70],ebx
64021c55:	movzx  edx,WORD PTR [ebx+0xa]
64021c59:	mov    ecx,DWORD PTR [ebp-0x32]
64021c5c:	xor    eax,eax
64021c5e:	mov    DWORD PTR [ebp-0x50],eax
64021c61:	mov    DWORD PTR [ebp-0x2c],eax
64021c64:	mov    DWORD PTR [ebp-0x28],eax
64021c67:	mov    DWORD PTR [ebp-0x24],eax
64021c6a:	mov    eax,edx
64021c6c:	mov    edi,0x7fff
64021c71:	xor    eax,ecx
64021c73:	and    ecx,edi
64021c75:	and    edx,edi
64021c77:	and    eax,0x8000
64021c7c:	cmp    cx,0x7fff
64021c81:	lea    edi,[edx+ecx*1]
64021c84:	movzx  edi,di
64021c87:	jae    0x64021e87
64021c8d:	cmp    dx,0x7fff
64021c92:	jae    0x64021e87
64021c98:	cmp    di,0xbffd
64021c9d:	ja     0x64021e87
64021ca3:	cmp    di,0x3fbf
64021ca8:	ja     0x64021cb7
64021caa:	xor    eax,eax
64021cac:	mov    DWORD PTR [ebp-0x38],eax
64021caf:	mov    DWORD PTR [ebp-0x3c],eax
64021cb2:	jmp    0x64021e9e
64021cb7:	test   cx,cx
64021cba:	jne    0x64021cdb
64021cbc:	inc    edi
64021cbd:	test   DWORD PTR [ebp-0x34],0x7fffffff
64021cc4:	jne    0x64021cdb
64021cc6:	cmp    DWORD PTR [ebp-0x38],0x0
64021cca:	jne    0x64021cdb
64021ccc:	cmp    DWORD PTR [ebp-0x3c],0x0
64021cd0:	jne    0x64021cdb
64021cd2:	and    WORD PTR [ebp-0x32],cx
64021cd6:	jmp    0x64021ea1
64021cdb:	xor    ecx,ecx
64021cdd:	cmp    dx,cx
64021ce0:	jne    0x64021d03
64021ce2:	inc    edi
64021ce3:	test   DWORD PTR [ebx+0x8],0x7fffffff
64021cea:	jne    0x64021d03
64021cec:	cmp    DWORD PTR [ebx+0x4],ecx
64021cef:	jne    0x64021d03
64021cf1:	cmp    DWORD PTR [ebx],ecx
64021cf3:	jne    0x64021d03
64021cf5:	mov    DWORD PTR [ebp-0x34],ecx
64021cf8:	mov    DWORD PTR [ebp-0x38],ecx
64021cfb:	mov    DWORD PTR [ebp-0x3c],ecx
64021cfe:	jmp    0x64021ea1
64021d03:	and    DWORD PTR [ebp-0x68],ecx
64021d06:	lea    esi,[ebp-0x28]
64021d09:	mov    DWORD PTR [ebp-0x58],0x5
64021d10:	mov    ecx,DWORD PTR [ebp-0x68]
64021d13:	mov    edx,DWORD PTR [ebp-0x58]
64021d16:	add    ecx,ecx
64021d18:	test   edx,edx
64021d1a:	mov    DWORD PTR [ebp-0x64],edx
64021d1d:	jle    0x64021d74
64021d1f:	lea    ecx,[ebp+ecx*1-0x3c]
64021d23:	add    ebx,0x8
64021d26:	mov    DWORD PTR [ebp-0x5c],ecx
64021d29:	mov    DWORD PTR [ebp-0x60],ebx
64021d2c:	mov    ecx,DWORD PTR [ebp-0x60]
64021d2f:	mov    edx,DWORD PTR [ebp-0x5c]
64021d32:	movzx  edx,WORD PTR [edx]
64021d35:	movzx  ecx,WORD PTR [ecx]
64021d38:	and    DWORD PTR [ebp-0x78],0x0
64021d3c:	imul   ecx,edx
64021d3f:	mov    edx,DWORD PTR [esi-0x4]
64021d42:	lea    ebx,[edx+ecx*1]
64021d45:	cmp    ebx,edx
64021d47:	jb     0x64021d4d
64021d49:	cmp    ebx,ecx
64021d4b:	jae    0x64021d54
64021d4d:	mov    DWORD PTR [ebp-0x78],0x1
64021d54:	cmp    DWORD PTR [ebp-0x78],0x0
64021d58:	mov    DWORD PTR [esi-0x4],ebx
64021d5b:	je     0x64021d60
64021d5d:	inc    WORD PTR [esi]
64021d60:	add    DWORD PTR [ebp-0x5c],0x2
64021d64:	sub    DWORD PTR [ebp-0x60],0x2
64021d68:	dec    DWORD PTR [ebp-0x64]
64021d6b:	cmp    DWORD PTR [ebp-0x64],0x0
64021d6f:	jg     0x64021d2c
64021d71:	mov    ebx,DWORD PTR [ebp-0x70]
64021d74:	inc    esi
64021d75:	inc    esi
64021d76:	inc    DWORD PTR [ebp-0x68]
64021d79:	dec    DWORD PTR [ebp-0x58]
64021d7c:	cmp    DWORD PTR [ebp-0x58],0x0
64021d80:	jg     0x64021d10
64021d82:	add    edi,0xc002
64021d88:	test   di,di
64021d8b:	jle    0x64021dc8
64021d8d:	test   DWORD PTR [ebp-0x24],0x80000000
64021d94:	jne    0x64021dc3
64021d96:	mov    esi,DWORD PTR [ebp-0x28]
64021d99:	mov    ecx,DWORD PTR [ebp-0x2c]
64021d9c:	shl    DWORD PTR [ebp-0x2c],1
64021d9f:	shr    ecx,0x1f
64021da2:	mov    edx,esi
64021da4:	add    esi,esi
64021da6:	or     esi,ecx
64021da8:	mov    ecx,DWORD PTR [ebp-0x24]
64021dab:	shr    edx,0x1f
64021dae:	add    ecx,ecx
64021db0:	or     ecx,edx
64021db2:	add    edi,0xffff
64021db8:	test   di,di
64021dbb:	mov    DWORD PTR [ebp-0x28],esi
64021dbe:	mov    DWORD PTR [ebp-0x24],ecx
64021dc1:	jg     0x64021d8d
64021dc3:	test   di,di
64021dc6:	jg     0x64021e15
64021dc8:	add    edi,0xffff
64021dce:	test   di,di
64021dd1:	jge    0x64021e15
64021dd3:	mov    ecx,edi
64021dd5:	neg    ecx
64021dd7:	movzx  esi,cx
64021dda:	add    edi,esi
64021ddc:	test   BYTE PTR [ebp-0x2c],0x1
64021de0:	je     0x64021de5
64021de2:	inc    DWORD PTR [ebp-0x50]
64021de5:	mov    ecx,DWORD PTR [ebp-0x24]
64021de8:	mov    ebx,DWORD PTR [ebp-0x28]
64021deb:	mov    edx,DWORD PTR [ebp-0x28]
64021dee:	shr    DWORD PTR [ebp-0x24],1
64021df1:	shl    ecx,0x1f
64021df4:	shr    ebx,1
64021df6:	or     ebx,ecx
64021df8:	mov    ecx,DWORD PTR [ebp-0x2c]
64021dfb:	shl    edx,0x1f
64021dfe:	shr    ecx,1
64021e00:	or     ecx,edx
64021e02:	dec    esi
64021e03:	mov    DWORD PTR [ebp-0x28],ebx
64021e06:	mov    DWORD PTR [ebp-0x2c],ecx
64021e09:	jne    0x64021ddc
64021e0b:	cmp    DWORD PTR [ebp-0x50],esi
64021e0e:	je     0x64021e15
64021e10:	or     WORD PTR [ebp-0x2c],0x1
64021e15:	cmp    WORD PTR [ebp-0x2c],0x8000
64021e1b:	ja     0x64021e2e
64021e1d:	mov    ecx,DWORD PTR [ebp-0x2c]
64021e20:	and    ecx,0x1ffff
64021e26:	cmp    ecx,0x18000
64021e2c:	jne    0x64021e61
64021e2e:	cmp    DWORD PTR [ebp-0x2a],0xffffffff
64021e32:	jne    0x64021e5e
64021e34:	and    DWORD PTR [ebp-0x2a],0x0
64021e38:	cmp    DWORD PTR [ebp-0x26],0xffffffff
64021e3c:	jne    0x64021e59
64021e3e:	and    DWORD PTR [ebp-0x26],0x0
64021e42:	cmp    WORD PTR [ebp-0x22],0xffff
64021e48:	jne    0x64021e53
64021e4a:	mov    WORD PTR [ebp-0x22],0x8000
64021e50:	inc    edi
64021e51:	jmp    0x64021e61
64021e53:	inc    WORD PTR [ebp-0x22]
64021e57:	jmp    0x64021e61
64021e59:	inc    DWORD PTR [ebp-0x26]
64021e5c:	jmp    0x64021e61
64021e5e:	inc    DWORD PTR [ebp-0x2a]
64021e61:	cmp    di,0x7fff
64021e66:	mov    esi,DWORD PTR [ebp-0x4c]
64021e69:	jae    0x64021e87
64021e6b:	mov    cx,WORD PTR [ebp-0x2a]
64021e6f:	mov    WORD PTR [ebp-0x3c],cx
64021e73:	mov    ecx,DWORD PTR [ebp-0x28]
64021e76:	mov    DWORD PTR [ebp-0x3a],ecx
64021e79:	mov    ecx,DWORD PTR [ebp-0x24]
64021e7c:	or     edi,eax
64021e7e:	mov    DWORD PTR [ebp-0x36],ecx
64021e81:	mov    WORD PTR [ebp-0x32],di
64021e85:	jmp    0x64021ea1
64021e87:	neg    ax
64021e8a:	sbb    eax,eax
64021e8c:	and    DWORD PTR [ebp-0x38],0x0
64021e90:	and    eax,0x80000000
64021e95:	add    eax,0x7fff8000
64021e9a:	and    DWORD PTR [ebp-0x3c],0x0
64021e9e:	mov    DWORD PTR [ebp-0x34],eax
64021ea1:	cmp    DWORD PTR [ebp-0x54],0x0
64021ea5:	jne    0x64021c18
64021eab:	mov    eax,DWORD PTR [ebp-0x34]
64021eae:	movzx  ecx,WORD PTR [ebp-0x3c]
64021eb2:	mov    esi,DWORD PTR [ebp-0x3a]
64021eb5:	mov    edx,DWORD PTR [ebp-0x36]
64021eb8:	shr    eax,0x10
64021ebb:	jmp    0x64021eec
64021ebd:	mov    DWORD PTR [ebp-0x6c],0x4
64021ec4:	jmp    0x64021ee4
64021ec6:	xor    esi,esi
64021ec8:	mov    eax,0x7fff
64021ecd:	mov    edx,0x80000000
64021ed2:	xor    ecx,ecx
64021ed4:	mov    DWORD PTR [ebp-0x6c],0x2
64021edb:	jmp    0x64021eec
64021edd:	mov    DWORD PTR [ebp-0x6c],0x1
64021ee4:	xor    ecx,ecx
64021ee6:	xor    eax,eax
64021ee8:	xor    edx,edx
64021eea:	xor    esi,esi
64021eec:	mov    edi,DWORD PTR [ebp-0x7c]
64021eef:	or     eax,DWORD PTR [ebp-0x74]
64021ef2:	mov    WORD PTR [edi],cx
64021ef5:	mov    WORD PTR [edi+0xa],ax
64021ef9:	mov    eax,DWORD PTR [ebp-0x6c]
64021efc:	mov    DWORD PTR [edi+0x2],esi
64021eff:	mov    DWORD PTR [edi+0x6],edx
64021f02:	mov    ecx,DWORD PTR [ebp-0x4]
64021f05:	pop    edi
64021f06:	pop    esi
64021f07:	xor    ecx,ebp
64021f09:	pop    ebx
64021f0a:	call   0x64013d18
64021f0f:	leave  
64021f10:	ret    
64021f11:	sbb    DWORD PTR [ecx],ebx
64021f13:	add    ah,BYTE PTR [ebp+ebp*2+0x19]
64021f17:	add    ah,BYTE PTR [ebx+eax*8+0x19]
64021f1b:	add    ah,BYTE PTR [esi+esi*8+0x19]
64021f1f:	add    ah,BYTE PTR [ebx+edi*1+0x1a]
64021f23:	add    ah,BYTE PTR [ebx+esi*2+0x1a]
64021f27:	add    ah,BYTE PTR [edi+eax*4+0x1a]
64021f2b:	add    ah,BYTE PTR [edx+eiz*8+0x1a]
64021f2f:	add    ah,BYTE PTR [ebp+ecx*8+0x1a]
64021f33:	add    ah,BYTE PTR [esp+ecx*2+0x1b]
64021f37:	add    ah,BYTE PTR [ecx+eax*2+0x1b]
64021f3b:	add    ah,BYTE PTR [eax+esi*8+0x1a]
64021f3f:	add    ah,BYTE PTR [ebp+edx*2-0x75]
64021f43:	in     al,dx
64021f44:	sub    esp,0x74
64021f47:	mov    eax,ds:0x640521ac
64021f4c:	xor    eax,ebp
64021f4e:	mov    DWORD PTR [ebp-0x4],eax
64021f51:	push   ebx
64021f52:	mov    ebx,DWORD PTR [ebp+0x1c]
64021f55:	push   esi
64021f56:	push   edi
64021f57:	lea    esi,[ebp+0x8]
64021f5a:	lea    edi,[ebp-0x10]
64021f5d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
64021f5e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
64021f5f:	movs   WORD PTR es:[edi],WORD PTR ds:[esi]
64021f61:	mov    edx,DWORD PTR [ebp-0x8]
64021f64:	mov    ecx,edx
64021f66:	mov    eax,0x8000
64021f6b:	and    ecx,eax
64021f6d:	and    edx,0x7fff
64021f73:	test   cx,cx
64021f76:	mov    DWORD PTR [ebp-0x60],ebx
64021f79:	mov    BYTE PTR [ebp-0x30],0xcc
64021f7d:	mov    BYTE PTR [ebp-0x2f],0xcc
64021f81:	mov    BYTE PTR [ebp-0x2e],0xcc
64021f85:	mov    BYTE PTR [ebp-0x2d],0xcc
64021f89:	mov    BYTE PTR [ebp-0x2c],0xcc
64021f8d:	mov    BYTE PTR [ebp-0x2b],0xcc
64021f91:	mov    BYTE PTR [ebp-0x2a],0xcc
64021f95:	mov    BYTE PTR [ebp-0x29],0xcc
64021f99:	mov    BYTE PTR [ebp-0x28],0xcc
64021f9d:	mov    BYTE PTR [ebp-0x27],0xcc
64021fa1:	mov    BYTE PTR [ebp-0x26],0xfb
64021fa5:	mov    BYTE PTR [ebp-0x25],0x3f
64021fa9:	mov    DWORD PTR [ebp-0x74],0x1
64021fb0:	mov    DWORD PTR [ebp-0x6c],ecx
64021fb3:	je     0x64021fbb
64021fb5:	mov    BYTE PTR [ebx+0x2],0x2d
64021fb9:	jmp    0x64021fbf
64021fbb:	mov    BYTE PTR [ebx+0x2],0x20
64021fbf:	test   dx,dx
64021fc2:	mov    esi,DWORD PTR [ebp-0xc]
64021fc5:	mov    edi,DWORD PTR [ebp-0x10]
64021fc8:	jne    0x64021ff8
64021fca:	test   esi,esi
64021fcc:	jne    0x64021ff8
64021fce:	test   edi,edi
64021fd0:	jne    0x64021ff8
64021fd2:	and    WORD PTR [ebx],di
64021fd5:	cmp    cx,ax
64021fd8:	setne  al
64021fdb:	dec    al
64021fdd:	and    al,0xd
64021fdf:	add    al,0x20
64021fe1:	mov    BYTE PTR [ebx+0x2],al
64021fe4:	mov    BYTE PTR [ebx+0x3],0x1
64021fe8:	mov    BYTE PTR [ebx+0x4],0x30
64021fec:	mov    BYTE PTR [ebx+0x5],0x0
64021ff0:	xor    eax,eax
64021ff2:	inc    eax
64021ff3:	jmp    0x640227bf
64021ff8:	cmp    dx,0x7fff
64021ffd:	jne    0x640220a1
64022003:	mov    eax,0x80000000
64022008:	cmp    esi,eax
6402200a:	mov    WORD PTR [ebx],0x1
6402200f:	jne    0x64022015
64022011:	test   edi,edi
64022013:	je     0x64022024
64022015:	test   esi,0x40000000
6402201b:	jne    0x64022024
6402201d:	push   0x640419c0
64022022:	jmp    0x64022075
64022024:	test   cx,cx
64022027:	je     0x6402203c
64022029:	cmp    esi,0xc0000000
6402202f:	jne    0x6402203c
64022031:	test   edi,edi
64022033:	jne    0x64022070
64022035:	push   0x640419b8
6402203a:	jmp    0x64022049
6402203c:	cmp    esi,eax
6402203e:	jne    0x64022070
64022040:	test   edi,edi
64022042:	jne    0x64022070
64022044:	push   0x640419b0
64022049:	lea    eax,[ebx+0x4]
6402204c:	push   0x16
6402204e:	push   eax
6402204f:	call   0x6401652d
64022054:	add    esp,0xc
64022057:	xor    esi,esi
64022059:	test   eax,eax
6402205b:	je     0x6402206a
6402205d:	push   esi
6402205e:	push   esi
6402205f:	push   esi
64022060:	push   esi
64022061:	push   esi
64022062:	call   0x64013d66
64022067:	add    esp,0x14
6402206a:	mov    BYTE PTR [ebx+0x3],0x5
6402206e:	jmp    0x6402209a
64022070:	push   0x640419a8
64022075:	lea    eax,[ebx+0x4]
64022078:	push   0x16
6402207a:	push   eax
6402207b:	call   0x6401652d
64022080:	add    esp,0xc
64022083:	xor    esi,esi
64022085:	test   eax,eax
64022087:	je     0x64022096
64022089:	push   esi
6402208a:	push   esi
6402208b:	push   esi
6402208c:	push   esi
6402208d:	push   esi
6402208e:	call   0x64013d66
64022093:	add    esp,0x14
64022096:	mov    BYTE PTR [ebx+0x3],0x6
6402209a:	xor    eax,eax
6402209c:	jmp    0x640227bf
640220a1:	movzx  ecx,dx
640220a4:	mov    ebx,ecx
640220a6:	imul   ecx,ecx,0x4d10
640220ac:	shr    ebx,0x8
640220af:	mov    eax,esi
640220b1:	shr    eax,0x18
640220b4:	lea    eax,[ebx+eax*2]
640220b7:	imul   eax,eax,0x4d
640220ba:	lea    eax,[eax+ecx*1-0x134312f4]
640220c1:	sar    eax,0x10
640220c4:	movzx  ecx,ax
640220c7:	movsx  ebx,cx
640220ca:	mov    DWORD PTR [ebp-0x4c],ecx
640220cd:	xor    eax,eax
640220cf:	mov    ecx,0x64053150
640220d4:	neg    ebx
640220d6:	sub    ecx,0x60
640220d9:	cmp    ebx,eax
640220db:	mov    WORD PTR [ebp-0x16],dx
640220df:	mov    DWORD PTR [ebp-0x1a],esi
640220e2:	mov    DWORD PTR [ebp-0x1e],edi
640220e5:	mov    WORD PTR [ebp-0x20],ax
640220e9:	mov    DWORD PTR [ebp-0x68],ecx
640220ec:	je     0x640223a0
640220f2:	jge    0x64022101
640220f4:	mov    ecx,0x640532b0
640220f9:	neg    ebx
640220fb:	sub    ecx,0x60
640220fe:	mov    DWORD PTR [ebp-0x68],ecx
64022101:	cmp    ebx,eax
64022103:	je     0x640223a0
64022109:	add    DWORD PTR [ebp-0x68],0x54
6402210d:	mov    ecx,ebx
6402210f:	and    ecx,0x7
64022112:	sar    ebx,0x3
64022115:	test   ecx,ecx
64022117:	je     0x64022396
6402211d:	imul   ecx,ecx,0xc
64022120:	add    ecx,DWORD PTR [ebp-0x68]
64022123:	cmp    WORD PTR [ecx],0x8000
64022128:	mov    DWORD PTR [ebp-0x64],ecx
6402212b:	jb     0x64022140
6402212d:	mov    esi,ecx
6402212f:	lea    edi,[ebp-0x3c]
64022132:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
64022133:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
64022134:	lea    eax,[ebp-0x3c]
64022137:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
64022138:	dec    DWORD PTR [ebp-0x3a]
6402213b:	mov    DWORD PTR [ebp-0x64],eax
6402213e:	mov    ecx,eax
64022140:	movzx  edi,WORD PTR [ecx+0xa]
64022144:	mov    edx,DWORD PTR [ebp-0x16]
64022147:	xor    eax,eax
64022149:	mov    ecx,edi
6402214b:	mov    esi,0x7fff
64022150:	xor    ecx,edx
64022152:	and    edx,esi
64022154:	and    edi,esi
64022156:	mov    DWORD PTR [ebp-0x48],eax
64022159:	mov    DWORD PTR [ebp-0x10],eax
6402215c:	mov    DWORD PTR [ebp-0xc],eax
6402215f:	mov    DWORD PTR [ebp-0x8],eax
64022162:	and    ecx,0x8000
64022168:	cmp    dx,si
6402216b:	lea    eax,[edi+edx*1]
6402216e:	movzx  eax,ax
64022171:	jae    0x6402237a
64022177:	cmp    di,si
6402217a:	jae    0x6402237a
64022180:	cmp    ax,0xbffd
64022184:	ja     0x6402237a
6402218a:	cmp    ax,0x3fbf
6402218e:	ja     0x640221a0
64022190:	xor    eax,eax
64022192:	mov    DWORD PTR [ebp-0x18],eax
64022195:	mov    DWORD PTR [ebp-0x1c],eax
64022198:	mov    DWORD PTR [ebp-0x20],eax
6402219b:	jmp    0x64022396
640221a0:	xor    esi,esi
640221a2:	cmp    dx,si
640221a5:	jne    0x640221c4
640221a7:	inc    eax
640221a8:	test   DWORD PTR [ebp-0x18],0x7fffffff
640221af:	jne    0x640221c4
640221b1:	cmp    DWORD PTR [ebp-0x1c],esi
640221b4:	jne    0x640221c4
640221b6:	cmp    DWORD PTR [ebp-0x20],esi
640221b9:	jne    0x640221c4
640221bb:	mov    WORD PTR [ebp-0x16],si
640221bf:	jmp    0x64022396
640221c4:	cmp    di,si
640221c7:	jne    0x640221ed
640221c9:	mov    edx,DWORD PTR [ebp-0x64]
640221cc:	inc    eax
640221cd:	test   DWORD PTR [edx+0x8],0x7fffffff
640221d4:	jne    0x640221ed
640221d6:	cmp    DWORD PTR [edx+0x4],esi
640221d9:	jne    0x640221ed
640221db:	cmp    DWORD PTR [edx],esi
640221dd:	jne    0x640221ed
640221df:	mov    DWORD PTR [ebp-0x18],esi
640221e2:	mov    DWORD PTR [ebp-0x1c],esi
640221e5:	mov    DWORD PTR [ebp-0x20],esi
640221e8:	jmp    0x64022396
640221ed:	lea    edi,[ebp-0xc]
640221f0:	mov    DWORD PTR [ebp-0x5c],esi
640221f3:	mov    DWORD PTR [ebp-0x44],edi
640221f6:	mov    DWORD PTR [ebp-0x40],0x5
640221fd:	mov    edx,DWORD PTR [ebp-0x5c]
64022200:	mov    esi,DWORD PTR [ebp-0x40]
64022203:	add    edx,edx
64022205:	test   esi,esi
64022207:	mov    DWORD PTR [ebp-0x50],esi
6402220a:	jle    0x64022264
6402220c:	lea    edx,[ebp+edx*1-0x20]
64022210:	mov    DWORD PTR [ebp-0x58],edx
64022213:	mov    edx,DWORD PTR [ebp-0x64]
64022216:	add    edx,0x8
64022219:	mov    DWORD PTR [ebp-0x54],edx
6402221c:	mov    edx,DWORD PTR [ebp-0x58]
6402221f:	mov    esi,DWORD PTR [ebp-0x54]
64022222:	movzx  esi,WORD PTR [esi]
64022225:	movzx  edx,WORD PTR [edx]
64022228:	mov    edi,DWORD PTR [edi-0x4]
6402222b:	imul   edx,esi
6402222e:	and    DWORD PTR [ebp-0x70],0x0
64022232:	lea    esi,[edi+edx*1]
64022235:	cmp    esi,edi
64022237:	jb     0x6402223d
64022239:	cmp    esi,edx
6402223b:	jae    0x64022244
6402223d:	mov    DWORD PTR [ebp-0x70],0x1
64022244:	cmp    DWORD PTR [ebp-0x70],0x0
64022248:	mov    edi,DWORD PTR [ebp-0x44]
6402224b:	mov    DWORD PTR [edi-0x4],esi
6402224e:	je     0x64022253
64022250:	inc    WORD PTR [edi]
64022253:	add    DWORD PTR [ebp-0x58],0x2
64022257:	sub    DWORD PTR [ebp-0x54],0x2
6402225b:	dec    DWORD PTR [ebp-0x50]
6402225e:	cmp    DWORD PTR [ebp-0x50],0x0
64022262:	jg     0x6402221c
64022264:	inc    edi
64022265:	inc    edi
64022266:	inc    DWORD PTR [ebp-0x5c]
64022269:	dec    DWORD PTR [ebp-0x40]
6402226c:	cmp    DWORD PTR [ebp-0x40],0x0
64022270:	mov    DWORD PTR [ebp-0x44],edi
64022273:	jg     0x640221fd
64022275:	add    eax,0xc002
6402227a:	test   ax,ax
6402227d:	jle    0x640222ba
6402227f:	test   DWORD PTR [ebp-0x8],0x80000000
64022286:	jne    0x640222b5
64022288:	mov    edx,DWORD PTR [ebp-0x10]
6402228b:	mov    edi,DWORD PTR [ebp-0xc]
6402228e:	mov    esi,DWORD PTR [ebp-0xc]
64022291:	shl    DWORD PTR [ebp-0x10],1
64022294:	shr    edx,0x1f
64022297:	add    edi,edi
64022299:	or     edi,edx
6402229b:	mov    edx,DWORD PTR [ebp-0x8]
6402229e:	shr    esi,0x1f
640222a1:	add    edx,edx
640222a3:	or     edx,esi
640222a5:	add    eax,0xffff
640222aa:	test   ax,ax
640222ad:	mov    DWORD PTR [ebp-0xc],edi
640222b0:	mov    DWORD PTR [ebp-0x8],edx
640222b3:	jg     0x6402227f
640222b5:	test   ax,ax
640222b8:	jg     0x6402230c
640222ba:	add    eax,0xffff
640222bf:	test   ax,ax
640222c2:	jge    0x6402230c
640222c4:	mov    edx,eax
640222c6:	neg    edx
640222c8:	movzx  edx,dx
640222cb:	mov    DWORD PTR [ebp-0x44],edx
640222ce:	add    eax,edx
640222d0:	test   BYTE PTR [ebp-0x10],0x1
640222d4:	je     0x640222d9
640222d6:	inc    DWORD PTR [ebp-0x48]
640222d9:	mov    edx,DWORD PTR [ebp-0x8]
640222dc:	mov    edi,DWORD PTR [ebp-0xc]
640222df:	mov    esi,DWORD PTR [ebp-0xc]
640222e2:	shr    DWORD PTR [ebp-0x8],1
640222e5:	shl    edx,0x1f
640222e8:	shr    edi,1
640222ea:	or     edi,edx
640222ec:	mov    edx,DWORD PTR [ebp-0x10]
640222ef:	shl    esi,0x1f
640222f2:	shr    edx,1
640222f4:	or     edx,esi
640222f6:	dec    DWORD PTR [ebp-0x44]
640222f9:	mov    DWORD PTR [ebp-0xc],edi
640222fc:	mov    DWORD PTR [ebp-0x10],edx
640222ff:	jne    0x640222d0
64022301:	cmp    DWORD PTR [ebp-0x48],0x0
64022305:	je     0x6402230c
64022307:	or     WORD PTR [ebp-0x10],0x1
6402230c:	cmp    WORD PTR [ebp-0x10],0x8000
64022312:	ja     0x64022325
64022314:	mov    edx,DWORD PTR [ebp-0x10]
64022317:	and    edx,0x1ffff
6402231d:	cmp    edx,0x18000
64022323:	jne    0x64022358
64022325:	cmp    DWORD PTR [ebp-0xe],0xffffffff
64022329:	jne    0x64022355
6402232b:	and    DWORD PTR [ebp-0xe],0x0
6402232f:	cmp    DWORD PTR [ebp-0xa],0xffffffff
64022333:	jne    0x64022350
64022335:	and    DWORD PTR [ebp-0xa],0x0
64022339:	cmp    WORD PTR [ebp-0x6],0xffff
6402233f:	jne    0x6402234a
64022341:	mov    WORD PTR [ebp-0x6],0x8000
64022347:	inc    eax
64022348:	jmp    0x64022358
6402234a:	inc    WORD PTR [ebp-0x6]
6402234e:	jmp    0x64022358
64022350:	inc    DWORD PTR [ebp-0xa]
64022353:	jmp    0x64022358
64022355:	inc    DWORD PTR [ebp-0xe]
64022358:	cmp    ax,0x7fff
6402235c:	jae    0x6402237a
6402235e:	mov    dx,WORD PTR [ebp-0xe]
64022362:	mov    WORD PTR [ebp-0x20],dx
64022366:	mov    edx,DWORD PTR [ebp-0xc]
64022369:	mov    DWORD PTR [ebp-0x1e],edx
6402236c:	mov    edx,DWORD PTR [ebp-0x8]
6402236f:	or     eax,ecx
64022371:	mov    DWORD PTR [ebp-0x1a],edx
64022374:	mov    WORD PTR [ebp-0x16],ax
64022378:	jmp    0x64022396
6402237a:	neg    cx
6402237d:	sbb    ecx,ecx
6402237f:	and    DWORD PTR [ebp-0x1c],0x0
64022383:	and    ecx,0x80000000
64022389:	add    ecx,0x7fff8000
6402238f:	and    DWORD PTR [ebp-0x20],0x0
64022393:	mov    DWORD PTR [ebp-0x18],ecx
64022396:	test   ebx,ebx
64022398:	jne    0x64022109
6402239e:	xor    eax,eax
640223a0:	mov    ecx,DWORD PTR [ebp-0x18]
640223a3:	shr    ecx,0x10
640223a6:	cmp    cx,0x3fff
640223ab:	mov    ebx,0x7fff
640223b0:	jb     0x640225fe
640223b6:	mov    esi,DWORD PTR [ebp-0x26]
640223b9:	inc    DWORD PTR [ebp-0x4c]
640223bc:	movzx  edx,cx
640223bf:	mov    ecx,esi
640223c1:	xor    ecx,edx
640223c3:	and    edx,ebx
640223c5:	and    esi,ebx
640223c7:	and    ecx,0x8000
640223cd:	cmp    dx,bx
640223d0:	lea    edi,[esi+edx*1]
640223d3:	mov    DWORD PTR [ebp-0x58],eax
640223d6:	mov    DWORD PTR [ebp-0x10],eax
640223d9:	mov    DWORD PTR [ebp-0xc],eax
640223dc:	mov    DWORD PTR [ebp-0x8],eax
640223df:	movzx  edi,di
640223e2:	jae    0x640225e4
640223e8:	cmp    si,bx
640223eb:	jae    0x640225e4
640223f1:	cmp    di,0xbffd
640223f6:	ja     0x640225e4
640223fc:	cmp    di,0x3fbf
64022401:	ja     0x6402240b
64022403:	mov    DWORD PTR [ebp-0x18],eax
64022406:	jmp    0x640225f8
6402240b:	cmp    dx,ax
6402240e:	jne    0x6402242d
64022410:	inc    edi
64022411:	test   DWORD PTR [ebp-0x18],0x7fffffff
64022418:	jne    0x6402242d
6402241a:	cmp    DWORD PTR [ebp-0x1c],eax
6402241d:	jne    0x6402242d
6402241f:	cmp    DWORD PTR [ebp-0x20],eax
64022422:	jne    0x6402242d
64022424:	mov    WORD PTR [ebp-0x16],ax
64022428:	jmp    0x640225fe
6402242d:	cmp    si,ax
64022430:	jne    0x64022446
64022432:	inc    edi
64022433:	test   DWORD PTR [ebp-0x28],0x7fffffff
6402243a:	jne    0x64022446
6402243c:	cmp    DWORD PTR [ebp-0x2c],eax
6402243f:	jne    0x64022446
64022441:	cmp    DWORD PTR [ebp-0x30],eax
64022444:	je     0x64022403
64022446:	and    DWORD PTR [ebp-0x54],0x0
6402244a:	lea    eax,[ebp-0xc]
6402244d:	mov    DWORD PTR [ebp-0x40],0x5
64022454:	mov    edx,DWORD PTR [ebp-0x54]
64022457:	mov    esi,DWORD PTR [ebp-0x40]
6402245a:	add    edx,edx
6402245c:	test   esi,esi
6402245e:	mov    DWORD PTR [ebp-0x50],esi
64022461:	jle    0x640224b5
64022463:	lea    esi,[ebp-0x28]
64022466:	lea    edx,[ebp+edx*1-0x20]
6402246a:	mov    DWORD PTR [ebp-0x5c],esi
6402246d:	mov    DWORD PTR [ebp-0x48],edx
64022470:	mov    edx,DWORD PTR [ebp-0x5c]
64022473:	mov    esi,DWORD PTR [ebp-0x48]
64022476:	movzx  esi,WORD PTR [esi]
64022479:	movzx  edx,WORD PTR [edx]
6402247c:	and    DWORD PTR [ebp-0x44],0x0
64022480:	imul   edx,esi
64022483:	mov    esi,DWORD PTR [eax-0x4]
64022486:	lea    ebx,[esi+edx*1]
64022489:	cmp    ebx,esi
6402248b:	jb     0x64022491
6402248d:	cmp    ebx,edx
6402248f:	jae    0x64022498
64022491:	mov    DWORD PTR [ebp-0x44],0x1
64022498:	cmp    DWORD PTR [ebp-0x44],0x0
6402249c:	mov    DWORD PTR [eax-0x4],ebx
6402249f:	je     0x640224a4
640224a1:	inc    WORD PTR [eax]
640224a4:	add    DWORD PTR [ebp-0x48],0x2
640224a8:	sub    DWORD PTR [ebp-0x5c],0x2
640224ac:	dec    DWORD PTR [ebp-0x50]
640224af:	cmp    DWORD PTR [ebp-0x50],0x0
640224b3:	jg     0x64022470
640224b5:	inc    eax
640224b6:	inc    eax
640224b7:	inc    DWORD PTR [ebp-0x54]
640224ba:	dec    DWORD PTR [ebp-0x40]
640224bd:	cmp    DWORD PTR [ebp-0x40],0x0
640224c1:	jg     0x64022454
640224c3:	add    edi,0xc002
640224c9:	xor    eax,eax
640224cb:	cmp    di,ax
640224ce:	jle    0x6402250c
640224d0:	test   DWORD PTR [ebp-0x8],0x80000000
640224d7:	jne    0x64022507
640224d9:	mov    edx,DWORD PTR [ebp-0x10]
640224dc:	mov    ebx,DWORD PTR [ebp-0xc]
640224df:	mov    esi,DWORD PTR [ebp-0xc]
640224e2:	shl    DWORD PTR [ebp-0x10],1
640224e5:	shr    edx,0x1f
640224e8:	add    ebx,ebx
640224ea:	or     ebx,edx
640224ec:	mov    edx,DWORD PTR [ebp-0x8]
640224ef:	shr    esi,0x1f
640224f2:	add    edx,edx
640224f4:	or     edx,esi
640224f6:	add    edi,0xffff
640224fc:	cmp    di,ax
640224ff:	mov    DWORD PTR [ebp-0xc],ebx
64022502:	mov    DWORD PTR [ebp-0x8],edx
64022505:	jg     0x640224d0
64022507:	cmp    di,ax
6402250a:	jg     0x64022559
6402250c:	add    edi,0xffff
64022512:	cmp    di,ax
64022515:	jge    0x64022559
64022517:	mov    eax,edi
64022519:	neg    eax
6402251b:	movzx  eax,ax
6402251e:	add    edi,eax
64022520:	test   BYTE PTR [ebp-0x10],0x1
64022524:	je     0x64022529
64022526:	inc    DWORD PTR [ebp-0x58]
64022529:	mov    edx,DWORD PTR [ebp-0x8]
6402252c:	mov    ebx,DWORD PTR [ebp-0xc]
6402252f:	mov    esi,DWORD PTR [ebp-0xc]
64022532:	shr    DWORD PTR [ebp-0x8],1
64022535:	shl    edx,0x1f
64022538:	shr    ebx,1
6402253a:	or     ebx,edx
6402253c:	mov    edx,DWORD PTR [ebp-0x10]
6402253f:	shl    esi,0x1f
64022542:	shr    edx,1
64022544:	or     edx,esi
64022546:	dec    eax
64022547:	mov    DWORD PTR [ebp-0xc],ebx
6402254a:	mov    DWORD PTR [ebp-0x10],edx
6402254d:	jne    0x64022520
6402254f:	cmp    DWORD PTR [ebp-0x58],eax
64022552:	je     0x64022559
64022554:	or     WORD PTR [ebp-0x10],0x1
64022559:	cmp    WORD PTR [ebp-0x10],0x8000
6402255f:	ja     0x64022572
64022561:	mov    edx,DWORD PTR [ebp-0x10]
64022564:	and    edx,0x1ffff
6402256a:	cmp    edx,0x18000
64022570:	jne    0x640225a3
64022572:	cmp    DWORD PTR [ebp-0xe],0xffffffff
64022576:	jne    0x640225a0
64022578:	cmp    DWORD PTR [ebp-0xa],0xffffffff
6402257c:	mov    DWORD PTR [ebp-0xe],eax
6402257f:	jne    0x6402259b
64022581:	cmp    WORD PTR [ebp-0x6],0xffff
64022587:	mov    DWORD PTR [ebp-0xa],eax
6402258a:	jne    0x64022595
6402258c:	mov    WORD PTR [ebp-0x6],0x8000
64022592:	inc    edi
64022593:	jmp    0x640225a3
64022595:	inc    WORD PTR [ebp-0x6]
64022599:	jmp    0x640225a3
6402259b:	inc    DWORD PTR [ebp-0xa]
6402259e:	jmp    0x640225a3
640225a0:	inc    DWORD PTR [ebp-0xe]
640225a3:	cmp    di,0x7fff
640225a8:	jb     0x640225c8
640225aa:	neg    cx
640225ad:	mov    DWORD PTR [ebp-0x1c],eax
640225b0:	mov    DWORD PTR [ebp-0x20],eax
640225b3:	sbb    ecx,ecx
640225b5:	and    ecx,0x80000000
640225bb:	add    ecx,0x7fff8000
640225c1:	mov    DWORD PTR [ebp-0x18],ecx
640225c4:	xor    eax,eax
640225c6:	jmp    0x640225fe
640225c8:	mov    ax,WORD PTR [ebp-0xe]
640225cc:	mov    WORD PTR [ebp-0x20],ax
640225d0:	mov    eax,DWORD PTR [ebp-0xc]
640225d3:	mov    DWORD PTR [ebp-0x1e],eax
640225d6:	mov    eax,DWORD PTR [ebp-0x8]
640225d9:	or     edi,ecx
640225db:	mov    DWORD PTR [ebp-0x1a],eax
640225de:	mov    WORD PTR [ebp-0x16],di
640225e2:	jmp    0x640225c4
640225e4:	neg    cx
640225e7:	sbb    ecx,ecx
640225e9:	and    ecx,0x80000000
640225ef:	add    ecx,0x7fff8000
640225f5:	mov    DWORD PTR [ebp-0x18],ecx
640225f8:	mov    DWORD PTR [ebp-0x1c],eax
640225fb:	mov    DWORD PTR [ebp-0x20],eax
640225fe:	test   BYTE PTR [ebp+0x18],0x1
64022602:	mov    edx,DWORD PTR [ebp-0x60]
64022605:	mov    ecx,DWORD PTR [ebp-0x4c]
64022608:	mov    WORD PTR [edx],cx
6402260b:	je     0x6402263f
6402260d:	movsx  ecx,cx
64022610:	add    DWORD PTR [ebp+0x14],ecx
64022613:	cmp    DWORD PTR [ebp+0x14],eax
64022616:	jg     0x6402263f
64022618:	and    WORD PTR [edx],0x0
6402261c:	cmp    WORD PTR [ebp-0x6c],0x8000
64022622:	mov    BYTE PTR [edx+0x3],0x1
64022626:	setne  al
64022629:	dec    al
6402262b:	and    al,0xd
6402262d:	add    al,0x20
6402262f:	mov    BYTE PTR [edx+0x2],al
64022632:	mov    BYTE PTR [edx+0x4],0x30
64022636:	mov    BYTE PTR [edx+0x5],0x0
6402263a:	jmp    0x64021ff0
6402263f:	push   0x15
64022641:	pop    ecx
64022642:	cmp    DWORD PTR [ebp+0x14],ecx
64022645:	jle    0x6402264a
64022647:	mov    DWORD PTR [ebp+0x14],ecx
6402264a:	mov    esi,DWORD PTR [ebp-0x18]
6402264d:	shr    esi,0x10
64022650:	push   0x8
64022652:	sub    esi,0x3ffe
64022658:	mov    WORD PTR [ebp-0x16],ax
6402265c:	pop    ebx
6402265d:	mov    eax,DWORD PTR [ebp-0x20]
64022660:	mov    edi,DWORD PTR [ebp-0x1c]
64022663:	mov    ecx,DWORD PTR [ebp-0x1c]
64022666:	shl    DWORD PTR [ebp-0x20],1
64022669:	shr    eax,0x1f
6402266c:	add    edi,edi
6402266e:	or     edi,eax
64022670:	mov    eax,DWORD PTR [ebp-0x18]
64022673:	shr    ecx,0x1f
64022676:	add    eax,eax
64022678:	or     eax,ecx
6402267a:	dec    ebx
6402267b:	mov    DWORD PTR [ebp-0x1c],edi
6402267e:	mov    DWORD PTR [ebp-0x18],eax
64022681:	jne    0x6402265d
64022683:	test   esi,esi
64022685:	jge    0x640226b9
64022687:	neg    esi
64022689:	and    esi,0xff
6402268f:	jle    0x640226b9
64022691:	mov    eax,DWORD PTR [ebp-0x18]
64022694:	mov    edi,DWORD PTR [ebp-0x1c]
64022697:	mov    ecx,DWORD PTR [ebp-0x1c]
6402269a:	shr    DWORD PTR [ebp-0x18],1
6402269d:	shl    eax,0x1f
640226a0:	shr    edi,1
640226a2:	or     edi,eax
640226a4:	mov    eax,DWORD PTR [ebp-0x20]
640226a7:	shl    ecx,0x1f
640226aa:	shr    eax,1
640226ac:	or     eax,ecx
640226ae:	dec    esi
640226af:	test   esi,esi
640226b1:	mov    DWORD PTR [ebp-0x1c],edi
640226b4:	mov    DWORD PTR [ebp-0x20],eax
640226b7:	jg     0x64022691
640226b9:	mov    eax,DWORD PTR [ebp+0x14]
640226bc:	inc    eax
640226bd:	test   eax,eax
640226bf:	lea    ebx,[edx+0x4]
640226c2:	mov    DWORD PTR [ebp-0x40],ebx
640226c5:	mov    DWORD PTR [ebp-0x4c],eax
640226c8:	jle    0x64022783
640226ce:	mov    edx,DWORD PTR [ebp-0x20]
640226d1:	mov    eax,DWORD PTR [ebp-0x1c]
640226d4:	lea    esi,[ebp-0x20]
640226d7:	lea    edi,[ebp-0x3c]
640226da:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
640226db:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
640226dc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
640226dd:	shl    DWORD PTR [ebp-0x20],1
640226e0:	mov    edi,DWORD PTR [ebp-0x20]
640226e3:	shl    DWORD PTR [ebp-0x20],1
640226e6:	shr    edx,0x1f
640226e9:	lea    ecx,[eax+eax*1]
640226ec:	or     ecx,edx
640226ee:	mov    edx,DWORD PTR [ebp-0x18]
640226f1:	mov    esi,eax
640226f3:	shr    esi,0x1f
640226f6:	add    edx,edx
640226f8:	or     edx,esi
640226fa:	mov    eax,ecx
640226fc:	lea    esi,[ecx+ecx*1]
640226ff:	shr    eax,0x1f
64022702:	lea    ecx,[edx+edx*1]
64022705:	mov    edx,DWORD PTR [ebp-0x3c]
64022708:	shr    edi,0x1f
6402270b:	or     ecx,eax
6402270d:	mov    eax,DWORD PTR [ebp-0x20]
64022710:	or     esi,edi
64022712:	lea    edi,[edx+eax*1]
64022715:	cmp    edi,eax
64022717:	jb     0x6402271d
64022719:	cmp    edi,edx
6402271b:	jae    0x64022735
6402271d:	lea    eax,[esi+0x1]
64022720:	xor    edx,edx
64022722:	cmp    eax,esi
64022724:	jb     0x6402272b
64022726:	cmp    eax,0x1
64022729:	jae    0x6402272e
6402272b:	xor    edx,edx
6402272d:	inc    edx
6402272e:	test   edx,edx
64022730:	mov    esi,eax
64022732:	je     0x64022735
64022734:	inc    ecx
64022735:	mov    eax,DWORD PTR [ebp-0x38]
64022738:	lea    edx,[eax+esi*1]
6402273b:	cmp    edx,esi
6402273d:	mov    DWORD PTR [ebp-0x44],edx
64022740:	jb     0x64022746
64022742:	cmp    edx,eax
64022744:	jae    0x64022747
64022746:	inc    ecx
64022747:	add    ecx,DWORD PTR [ebp-0x34]
6402274a:	shr    edx,0x1f
6402274d:	add    ecx,ecx
6402274f:	or     ecx,edx
64022751:	lea    esi,[edi+edi*1]
64022754:	mov    DWORD PTR [ebp-0x20],esi
64022757:	mov    esi,DWORD PTR [ebp-0x44]
6402275a:	mov    DWORD PTR [ebp-0x18],ecx
6402275d:	shr    ecx,0x18
64022760:	add    esi,esi
64022762:	add    cl,0x30
64022765:	mov    eax,edi
64022767:	shr    eax,0x1f
6402276a:	or     esi,eax
6402276c:	mov    BYTE PTR [ebx],cl
6402276e:	inc    ebx
6402276f:	dec    DWORD PTR [ebp-0x4c]
64022772:	cmp    DWORD PTR [ebp-0x4c],0x0
64022776:	mov    DWORD PTR [ebp-0x1c],esi
64022779:	mov    BYTE PTR [ebp-0x15],0x0
6402277d:	jg     0x640226ce
64022783:	dec    ebx
64022784:	mov    al,BYTE PTR [ebx]
64022786:	dec    ebx
64022787:	cmp    al,0x35
64022789:	jge    0x64022799
6402278b:	mov    ecx,DWORD PTR [ebp-0x40]
6402278e:	jmp    0x640227d4
64022790:	cmp    BYTE PTR [ebx],0x39
64022793:	jne    0x6402279e
64022795:	mov    BYTE PTR [ebx],0x30
64022798:	dec    ebx
64022799:	cmp    ebx,DWORD PTR [ebp-0x40]
6402279c:	jae    0x64022790
6402279e:	cmp    ebx,DWORD PTR [ebp-0x40]
640227a1:	mov    eax,DWORD PTR [ebp-0x60]
640227a4:	jae    0x640227aa
640227a6:	inc    ebx
640227a7:	inc    WORD PTR [eax]
640227aa:	inc    BYTE PTR [ebx]
640227ac:	sub    bl,al
640227ae:	sub    bl,0x3
640227b1:	movsx  ecx,bl
640227b4:	mov    BYTE PTR [eax+0x3],bl
640227b7:	mov    BYTE PTR [ecx+eax*1+0x4],0x0
640227bc:	mov    eax,DWORD PTR [ebp-0x74]
640227bf:	mov    ecx,DWORD PTR [ebp-0x4]
640227c2:	pop    edi
640227c3:	pop    esi
640227c4:	xor    ecx,ebp
640227c6:	pop    ebx
640227c7:	call   0x64013d18
640227cc:	leave  
640227cd:	ret    
640227ce:	cmp    BYTE PTR [ebx],0x30
640227d1:	jne    0x640227d8
640227d3:	dec    ebx
640227d4:	cmp    ebx,ecx
640227d6:	jae    0x640227ce
640227d8:	cmp    ebx,ecx
640227da:	mov    eax,DWORD PTR [ebp-0x60]
640227dd:	jae    0x640227ac
640227df:	and    WORD PTR [eax],0x0
640227e3:	cmp    WORD PTR [ebp-0x6c],0x8000
640227e9:	mov    BYTE PTR [eax+0x3],0x1
640227ed:	setne  dl
640227f0:	dec    dl
640227f2:	and    dl,0xd
640227f5:	add    dl,0x20
640227f8:	mov    BYTE PTR [eax+0x2],dl
640227fb:	mov    BYTE PTR [ecx],0x30
640227fe:	mov    BYTE PTR [eax+0x5],0x0
64022802:	jmp    0x64021ff0
64022807:	xor    eax,eax
64022809:	test   bl,0x10
6402280c:	je     0x6402280f
6402280e:	inc    eax
6402280f:	test   bl,0x8
64022812:	je     0x64022817
64022814:	or     eax,0x4
64022817:	test   bl,0x4
6402281a:	je     0x6402281f
6402281c:	or     eax,0x8
6402281f:	test   bl,0x2
64022822:	je     0x64022827
64022824:	or     eax,0x10
64022827:	test   bl,0x1
6402282a:	je     0x6402282f
6402282c:	or     eax,0x20
6402282f:	test   ebx,0x80000
64022835:	je     0x6402283a
64022837:	or     eax,0x2
6402283a:	mov    ecx,ebx
6402283c:	mov    edx,0x300
64022841:	and    ecx,edx
64022843:	push   esi
64022844:	mov    esi,0x200
64022849:	je     0x6402286e
6402284b:	cmp    ecx,0x100
64022851:	je     0x64022869
64022853:	cmp    ecx,esi
64022855:	je     0x64022862
64022857:	cmp    ecx,edx
64022859:	jne    0x6402286e
6402285b:	or     eax,0xc00
64022860:	jmp    0x6402286e
64022862:	or     eax,0x800
64022867:	jmp    0x6402286e
64022869:	or     eax,0x400
6402286e:	mov    ecx,ebx
64022870:	and    ecx,0x30000
64022876:	je     0x64022884
64022878:	cmp    ecx,0x10000
6402287e:	jne    0x64022886
64022880:	or     eax,esi
64022882:	jmp    0x64022886
64022884:	or     eax,edx
64022886:	test   ebx,0x40000
6402288c:	pop    esi
6402288d:	je     0x64022894
6402288f:	or     eax,0x1000
64022894:	ret    
64022895:	xor    eax,eax
64022897:	test   dl,0x10
6402289a:	je     0x640228a1
6402289c:	mov    eax,0x80
640228a1:	test   dl,0x8
640228a4:	push   ebx
640228a5:	push   esi
640228a6:	push   edi
640228a7:	mov    ebx,0x200
640228ac:	je     0x640228b0
640228ae:	or     eax,ebx
640228b0:	test   dl,0x4
640228b3:	je     0x640228ba
640228b5:	or     eax,0x400
640228ba:	test   dl,0x2
640228bd:	je     0x640228c4
640228bf:	or     eax,0x800
640228c4:	test   dl,0x1
640228c7:	je     0x640228ce
640228c9:	or     eax,0x1000
640228ce:	test   edx,0x80000
640228d4:	mov    edi,0x100
640228d9:	je     0x640228dd
640228db:	or     eax,edi
640228dd:	mov    ecx,edx
640228df:	mov    esi,0x300
640228e4:	and    ecx,esi
640228e6:	je     0x64022907
640228e8:	cmp    ecx,edi
640228ea:	je     0x64022902
640228ec:	cmp    ecx,ebx
640228ee:	je     0x640228fb
640228f0:	cmp    ecx,esi
640228f2:	jne    0x64022907
640228f4:	or     eax,0x6000
640228f9:	jmp    0x64022907
640228fb:	or     eax,0x4000
64022900:	jmp    0x64022907
64022902:	or     eax,0x2000
64022907:	mov    ecx,0x3000000
6402290c:	pop    edi
6402290d:	and    edx,ecx
6402290f:	cmp    edx,0x1000000
64022915:	pop    esi
64022916:	pop    ebx
64022917:	je     0x6402292f
64022919:	cmp    edx,0x2000000
6402291f:	je     0x6402292b
64022921:	cmp    edx,ecx
64022923:	jne    0x64022934
64022925:	or     eax,0x8000
6402292a:	ret    
6402292b:	or     eax,0x40
6402292e:	ret    
6402292f:	or     eax,0x8040
64022934:	ret    
64022935:	sub    esp,0x10
64022938:	push   ebx
64022939:	push   ebp
6402293a:	push   esi
6402293b:	push   edi
6402293c:	fstcw  WORD PTR [esp+0x14]
64022941:	mov    ebx,DWORD PTR [esp+0x14]
64022945:	xor    edx,edx
64022947:	test   bl,0x1
6402294a:	je     0x6402294f
6402294c:	push   0x10
6402294e:	pop    edx
6402294f:	test   bl,0x4
64022952:	je     0x64022957
64022954:	or     edx,0x8
64022957:	test   bl,0x8
6402295a:	je     0x6402295f
6402295c:	or     edx,0x4
6402295f:	test   bl,0x10
64022962:	je     0x64022967
64022964:	or     edx,0x2
64022967:	test   bl,0x20
6402296a:	je     0x6402296f
6402296c:	or     edx,0x1
6402296f:	test   bl,0x2
64022972:	je     0x6402297a
64022974:	or     edx,0x80000
6402297a:	movzx  ecx,bx
6402297d:	mov    eax,ecx
6402297f:	mov    edi,0xc00
64022984:	and    eax,edi
64022986:	mov    ebp,0x300
6402298b:	mov    esi,0x200
64022990:	je     0x640229b2
64022992:	cmp    eax,0x400
64022997:	je     0x640229ac
64022999:	cmp    eax,0x800
6402299e:	je     0x640229a8
640229a0:	cmp    eax,edi
640229a2:	jne    0x640229b2
640229a4:	or     edx,ebp
640229a6:	jmp    0x640229b2
640229a8:	or     edx,esi
640229aa:	jmp    0x640229b2
640229ac:	or     edx,0x100
640229b2:	and    ecx,ebp
640229b4:	je     0x640229c2
640229b6:	cmp    ecx,esi
640229b8:	jne    0x640229c8
640229ba:	or     edx,0x10000
640229c0:	jmp    0x640229c8
640229c2:	or     edx,0x20000
640229c8:	test   bx,0x1000
640229cd:	je     0x640229d5
640229cf:	or     edx,0x40000
640229d5:	mov    esi,DWORD PTR [esp+0x28]
640229d9:	mov    ecx,DWORD PTR [esp+0x24]
640229dd:	mov    eax,esi
640229df:	not    eax
640229e1:	and    eax,edx
640229e3:	and    ecx,esi
640229e5:	or     eax,ecx
640229e7:	cmp    eax,edx
640229e9:	mov    DWORD PTR [esp+0x1c],eax
640229ed:	je     0x64022a9d
640229f3:	mov    ebx,eax
640229f5:	call   0x64022807
640229fa:	movzx  eax,ax
640229fd:	mov    DWORD PTR [esp+0x10],eax
64022a01:	fldcw  WORD PTR [esp+0x10]
64022a05:	fstcw  WORD PTR [esp+0x10]
64022a0a:	mov    ebx,DWORD PTR [esp+0x10]
64022a0e:	xor    edx,edx
64022a10:	test   bl,0x1
64022a13:	je     0x64022a18
64022a15:	push   0x10
64022a17:	pop    edx
64022a18:	test   bl,0x4
64022a1b:	je     0x64022a20
64022a1d:	or     edx,0x8
64022a20:	test   bl,0x8
64022a23:	je     0x64022a28
64022a25:	or     edx,0x4
64022a28:	test   bl,0x10
64022a2b:	je     0x64022a30
64022a2d:	or     edx,0x2
64022a30:	test   bl,0x20
64022a33:	je     0x64022a38
64022a35:	or     edx,0x1
64022a38:	test   bl,0x2
64022a3b:	je     0x64022a43
64022a3d:	or     edx,0x80000
64022a43:	movzx  ecx,bx
64022a46:	mov    eax,ecx
64022a48:	and    eax,edi
64022a4a:	je     0x64022a70
64022a4c:	cmp    eax,0x400
64022a51:	je     0x64022a6a
64022a53:	cmp    eax,0x800
64022a58:	je     0x64022a62
64022a5a:	cmp    eax,edi
64022a5c:	jne    0x64022a70
64022a5e:	or     edx,ebp
64022a60:	jmp    0x64022a70
64022a62:	or     edx,0x200
64022a68:	jmp    0x64022a70
64022a6a:	or     edx,0x100
64022a70:	and    ecx,ebp
64022a72:	je     0x64022a84
64022a74:	cmp    ecx,0x200
64022a7a:	jne    0x64022a8a
64022a7c:	or     edx,0x10000
64022a82:	jmp    0x64022a8a
64022a84:	or     edx,0x20000
64022a8a:	test   bx,0x1000
64022a8f:	je     0x64022a97
64022a91:	or     edx,0x40000
64022a97:	mov    eax,edx
64022a99:	mov    DWORD PTR [esp+0x1c],edx
64022a9d:	cmp    DWORD PTR ds:0x64054698,0x0
64022aa4:	je     0x64022c30
64022aaa:	and    esi,0x308031f
64022ab0:	mov    edi,esi
64022ab2:	stmxcsr DWORD PTR [esp+0x18]
64022ab7:	mov    eax,DWORD PTR [esp+0x18]
64022abb:	xor    esi,esi
64022abd:	test   al,al
64022abf:	jns    0x64022ac4
64022ac1:	push   0x10
64022ac3:	pop    esi
64022ac4:	test   ax,0x200
64022ac8:	je     0x64022acd
64022aca:	or     esi,0x8
64022acd:	test   ax,0x400
64022ad1:	je     0x64022ad6
64022ad3:	or     esi,0x4
64022ad6:	test   ax,0x800
64022ada:	je     0x64022adf
64022adc:	or     esi,0x2
64022adf:	test   ax,0x1000
64022ae3:	je     0x64022ae8
64022ae5:	or     esi,0x1
64022ae8:	test   ax,0x100
64022aec:	je     0x64022af4
64022aee:	or     esi,0x80000
64022af4:	mov    ecx,eax
64022af6:	mov    ebp,0x6000
64022afb:	and    ecx,ebp
64022afd:	je     0x64022b29
64022aff:	cmp    ecx,0x2000
64022b05:	je     0x64022b23
64022b07:	cmp    ecx,0x4000
64022b0d:	je     0x64022b1b
64022b0f:	cmp    ecx,ebp
64022b11:	jne    0x64022b29
64022b13:	or     esi,0x300
64022b19:	jmp    0x64022b29
64022b1b:	or     esi,0x200
64022b21:	jmp    0x64022b29
64022b23:	or     esi,0x100
64022b29:	mov    ebx,0x8040
64022b2e:	and    eax,ebx
64022b30:	sub    eax,0x40
64022b33:	je     0x64022b51
64022b35:	sub    eax,0x7fc0
64022b3a:	je     0x64022b49
64022b3c:	sub    eax,0x40
64022b3f:	jne    0x64022b57
64022b41:	or     esi,0x1000000
64022b47:	jmp    0x64022b57
64022b49:	or     esi,0x3000000
64022b4f:	jmp    0x64022b57
64022b51:	or     esi,0x2000000
64022b57:	mov    edx,edi
64022b59:	and    edi,DWORD PTR [esp+0x24]
64022b5d:	not    edx
64022b5f:	and    edx,esi
64022b61:	or     edx,edi
64022b63:	cmp    edx,esi
64022b65:	jne    0x64022b6e
64022b67:	mov    eax,esi
64022b69:	jmp    0x64022c19
64022b6e:	call   0x64022895
64022b73:	push   eax
64022b74:	mov    DWORD PTR [esp+0x2c],eax
64022b78:	call   0x64022c38
64022b7d:	pop    ecx
64022b7e:	stmxcsr DWORD PTR [esp+0x28]
64022b83:	mov    eax,DWORD PTR [esp+0x28]
64022b87:	xor    edx,edx
64022b89:	test   al,al
64022b8b:	jns    0x64022b90
64022b8d:	push   0x10
64022b8f:	pop    edx
64022b90:	mov    edi,0x200
64022b95:	test   edi,eax
64022b97:	je     0x64022b9c
64022b99:	or     edx,0x8
64022b9c:	test   ax,0x400
64022ba0:	je     0x64022ba5
64022ba2:	or     edx,0x4
64022ba5:	test   ax,0x800
64022ba9:	je     0x64022bae
64022bab:	or     edx,0x2
64022bae:	test   ax,0x1000
64022bb2:	je     0x64022bb7
64022bb4:	or     edx,0x1
64022bb7:	mov    esi,0x100
64022bbc:	test   esi,eax
64022bbe:	je     0x64022bc6
64022bc0:	or     edx,0x80000
64022bc6:	mov    ecx,eax
64022bc8:	and    ecx,ebp
64022bca:	je     0x64022bee
64022bcc:	cmp    ecx,0x2000
64022bd2:	je     0x64022bec
64022bd4:	cmp    ecx,0x4000
64022bda:	je     0x64022be8
64022bdc:	cmp    ecx,ebp
64022bde:	jne    0x64022bee
64022be0:	or     edx,0x300
64022be6:	jmp    0x64022bee
64022be8:	or     edx,edi
64022bea:	jmp    0x64022bee
64022bec:	or     edx,esi
64022bee:	and    eax,ebx
64022bf0:	sub    eax,0x40
64022bf3:	je     0x64022c11
64022bf5:	sub    eax,0x7fc0
64022bfa:	je     0x64022c09
64022bfc:	sub    eax,0x40
64022bff:	jne    0x64022c17
64022c01:	or     edx,0x1000000
64022c07:	jmp    0x64022c17
64022c09:	or     edx,0x3000000
64022c0f:	jmp    0x64022c17
64022c11:	or     edx,0x2000000
64022c17:	mov    eax,edx
64022c19:	mov    ecx,DWORD PTR [esp+0x1c]
64022c1d:	mov    edx,eax
64022c1f:	xor    edx,ecx
64022c21:	or     eax,ecx
64022c23:	test   edx,0x8031f
64022c29:	je     0x64022c30
64022c2b:	or     eax,0x80000000
64022c30:	pop    edi
64022c31:	pop    esi
64022c32:	pop    ebp
64022c33:	pop    ebx
64022c34:	add    esp,0x10
64022c37:	ret    
64022c38:	push   0x8
64022c3a:	push   0x64044038
64022c3f:	call   0x640164d4
64022c44:	xor    eax,eax
64022c46:	cmp    DWORD PTR ds:0x64054698,eax
64022c4c:	je     0x64022ca4
64022c4e:	test   BYTE PTR [ebp+0x8],0x40
64022c52:	je     0x64022c9c
64022c54:	cmp    DWORD PTR ds:0x64053558,eax
64022c5a:	je     0x64022c9c
64022c5c:	mov    DWORD PTR [ebp-0x4],eax
64022c5f:	ldmxcsr DWORD PTR [ebp+0x8]
64022c63:	jmp    0x64022c93
64022c65:	mov    eax,DWORD PTR [ebp-0x14]
64022c68:	mov    eax,DWORD PTR [eax]
64022c6a:	mov    eax,DWORD PTR [eax]
64022c6c:	cmp    eax,0xc0000005
64022c71:	je     0x64022c7d
64022c73:	cmp    eax,0xc000001d
64022c78:	je     0x64022c7d
64022c7a:	xor    eax,eax
64022c7c:	ret    
64022c7d:	xor    eax,eax
64022c7f:	inc    eax
64022c80:	ret    
64022c81:	mov    esp,DWORD PTR [ebp-0x18]
64022c84:	and    DWORD PTR ds:0x64053558,0x0
64022c8b:	and    DWORD PTR [ebp+0x8],0xffffffbf
64022c8f:	ldmxcsr DWORD PTR [ebp+0x8]
64022c93:	mov    DWORD PTR [ebp-0x4],0xfffffffe
64022c9a:	jmp    0x64022ca4
64022c9c:	and    DWORD PTR [ebp+0x8],0xffffffbf
64022ca0:	ldmxcsr DWORD PTR [ebp+0x8]
64022ca4:	call   0x64016519
64022ca9:	ret    
64022caa:	int3   
64022cab:	int3   
64022cac:	int3   
64022cad:	int3   
64022cae:	int3   
64022caf:	int3   
64022cb0:	lea    eax,[edx-0x1]
64022cb3:	pop    ebx
64022cb4:	ret    
64022cb5:	lea    esp,[esp+0x0]
64022cbc:	lea    esp,[esp+0x0]
64022cc0:	xor    eax,eax
64022cc2:	mov    al,BYTE PTR [esp+0x8]
64022cc6:	push   ebx
64022cc7:	mov    ebx,eax
64022cc9:	shl    eax,0x8
64022ccc:	mov    edx,DWORD PTR [esp+0x8]
64022cd0:	test   edx,0x3
64022cd6:	je     0x64022ced
64022cd8:	mov    cl,BYTE PTR [edx]
64022cda:	add    edx,0x1
64022cdd:	cmp    cl,bl
64022cdf:	je     0x64022cb0
64022ce1:	test   cl,cl
64022ce3:	je     0x64022d36
64022ce5:	test   edx,0x3
64022ceb:	jne    0x64022cd8
64022ced:	or     ebx,eax
64022cef:	push   edi
64022cf0:	mov    eax,ebx
64022cf2:	shl    ebx,0x10
64022cf5:	push   esi
64022cf6:	or     ebx,eax
64022cf8:	mov    ecx,DWORD PTR [edx]
64022cfa:	mov    edi,0x7efefeff
64022cff:	mov    eax,ecx
64022d01:	mov    esi,edi
64022d03:	xor    ecx,ebx
64022d05:	add    esi,eax
64022d07:	add    edi,ecx
64022d09:	xor    ecx,0xffffffff
64022d0c:	xor    eax,0xffffffff
64022d0f:	xor    ecx,edi
64022d11:	xor    eax,esi
64022d13:	add    edx,0x4
64022d16:	and    ecx,0x81010100
64022d1c:	jne    0x64022d3a
64022d1e:	and    eax,0x81010100
64022d23:	je     0x64022cf8
64022d25:	and    eax,0x1010100
64022d2a:	jne    0x64022d34
64022d2c:	and    esi,0x80000000
64022d32:	jne    0x64022cf8
64022d34:	pop    esi
64022d35:	pop    edi
64022d36:	pop    ebx
64022d37:	xor    eax,eax
64022d39:	ret    
64022d3a:	mov    eax,DWORD PTR [edx-0x4]
64022d3d:	cmp    al,bl
64022d3f:	je     0x64022d77
64022d41:	test   al,al
64022d43:	je     0x64022d34
64022d45:	cmp    ah,bl
64022d47:	je     0x64022d70
64022d49:	test   ah,ah
64022d4b:	je     0x64022d34
64022d4d:	shr    eax,0x10
64022d50:	cmp    al,bl
64022d52:	je     0x64022d69
64022d54:	test   al,al
64022d56:	je     0x64022d34
64022d58:	cmp    ah,bl
64022d5a:	je     0x64022d62
64022d5c:	test   ah,ah
64022d5e:	je     0x64022d34
64022d60:	jmp    0x64022cf8
64022d62:	pop    esi
64022d63:	pop    edi
64022d64:	lea    eax,[edx-0x1]
64022d67:	pop    ebx
64022d68:	ret    
64022d69:	lea    eax,[edx-0x2]
64022d6c:	pop    esi
64022d6d:	pop    edi
64022d6e:	pop    ebx
64022d6f:	ret    
64022d70:	lea    eax,[edx-0x3]
64022d73:	pop    esi
64022d74:	pop    edi
64022d75:	pop    ebx
64022d76:	ret    
64022d77:	lea    eax,[edx-0x4]
64022d7a:	pop    esi
64022d7b:	pop    edi
64022d7c:	pop    ebx
64022d7d:	ret    
64022d7e:	int3   
64022d7f:	int3   
64022d80:	push   esi
64022d81:	mov    esi,ecx
64022d83:	mov    eax,DWORD PTR [esi+0x8]
64022d86:	test   eax,eax
64022d88:	mov    DWORD PTR [esi],0x640419cc
64022d8e:	je     0x64022d98
64022d90:	mov    ecx,DWORD PTR [eax]
64022d92:	mov    edx,DWORD PTR [ecx+0x8]
64022d95:	push   eax
64022d96:	call   edx
64022d98:	cmp    DWORD PTR [esi+0xc],0x0
64022d9c:	je     0x64022db5
64022d9e:	call   DWORD PTR ds:0x6402c1a4
64022da4:	test   eax,eax
64022da6:	je     0x64022db5
64022da8:	mov    ecx,DWORD PTR [esi+0xc]
64022dab:	push   ecx
64022dac:	push   0x0
64022dae:	push   eax
64022daf:	call   DWORD PTR ds:0x6402c198
64022db5:	pop    esi
64022db6:	ret    
64022db7:	int3   
64022db8:	int3   
64022db9:	int3   
64022dba:	int3   
64022dbb:	int3   
64022dbc:	int3   
64022dbd:	int3   
64022dbe:	int3   
64022dbf:	int3   
64022dc0:	sub    esp,0x10
64022dc3:	mov    eax,DWORD PTR [esp+0x14]
64022dc7:	mov    ecx,DWORD PTR [esp+0x18]
64022dcb:	push   0x64044054
64022dd0:	lea    edx,[esp+0x4]
64022dd4:	push   edx
64022dd5:	mov    DWORD PTR [esp+0x8],0x640419cc
64022ddd:	mov    DWORD PTR [esp+0xc],eax
64022de1:	mov    DWORD PTR [esp+0x10],ecx
64022de5:	mov    DWORD PTR [esp+0x14],0x0
64022ded:	call   0x64013884
64022df2:	int3   
64022df3:	int3   
64022df4:	int3   
64022df5:	int3   
64022df6:	int3   
64022df7:	int3   
64022df8:	int3   
64022df9:	int3   
64022dfa:	int3   
64022dfb:	int3   
64022dfc:	int3   
64022dfd:	int3   
64022dfe:	int3   
64022dff:	int3   
64022e00:	mov    eax,DWORD PTR [esp+0x4]
64022e04:	push   esi
64022e05:	mov    esi,ecx
64022e07:	mov    DWORD PTR [esi],0x640419cc
64022e0d:	mov    ecx,DWORD PTR [eax+0x4]
64022e10:	mov    DWORD PTR [esi+0x4],ecx
64022e13:	mov    edx,DWORD PTR [eax+0x8]
64022e16:	mov    eax,edx
64022e18:	test   eax,eax
64022e1a:	mov    DWORD PTR [esi+0x8],edx
64022e1d:	mov    DWORD PTR [esi+0xc],0x0
64022e24:	je     0x64022e2e
64022e26:	mov    ecx,DWORD PTR [eax]
64022e28:	mov    edx,DWORD PTR [ecx+0x4]
64022e2b:	push   eax
64022e2c:	call   edx
64022e2e:	mov    eax,esi
64022e30:	pop    esi
64022e31:	ret    0x4
64022e34:	int3   
64022e35:	int3   
64022e36:	int3   
64022e37:	int3   
64022e38:	int3   
64022e39:	int3   
64022e3a:	int3   
64022e3b:	int3   
64022e3c:	int3   
64022e3d:	int3   
64022e3e:	int3   
64022e3f:	int3   
64022e40:	push   esi
64022e41:	mov    esi,ecx
64022e43:	mov    eax,DWORD PTR [esi+0x8]
64022e46:	test   eax,eax
64022e48:	mov    DWORD PTR [esi],0x640419cc
64022e4e:	je     0x64022e58
64022e50:	mov    ecx,DWORD PTR [eax]
64022e52:	mov    edx,DWORD PTR [ecx+0x8]
64022e55:	push   eax
64022e56:	call   edx
64022e58:	cmp    DWORD PTR [esi+0xc],0x0
64022e5c:	je     0x64022e75
64022e5e:	call   DWORD PTR ds:0x6402c1a4
64022e64:	test   eax,eax
64022e66:	je     0x64022e75
64022e68:	mov    ecx,DWORD PTR [esi+0xc]
64022e6b:	push   ecx
64022e6c:	push   0x0
64022e6e:	push   eax
64022e6f:	call   DWORD PTR ds:0x6402c198
64022e75:	test   BYTE PTR [esp+0x8],0x1
64022e7a:	je     0x64022e85
64022e7c:	push   esi
64022e7d:	call   0x64013656
64022e82:	add    esp,0x4
64022e85:	mov    eax,esi
64022e87:	pop    esi
64022e88:	ret    0x4
64022e8b:	int3   
64022e8c:	jmp    DWORD PTR ds:0x6402c1a8
64022e92:	int3   
64022e93:	int3   
64022e94:	int3   
64022e95:	int3   
64022e96:	int3   
64022e97:	int3   
64022e98:	int3   
64022e99:	int3   
64022e9a:	int3   
64022e9b:	int3   
64022e9c:	int3   
64022e9d:	int3   
64022e9e:	int3   
64022e9f:	int3   
64022ea0:	lea    ecx,[ebp-0x14]
64022ea3:	jmp    0x64003650
64022ea8:	lea    ecx,[ebp-0x30]
64022eab:	jmp    0x64002960
64022eb0:	mov    edx,DWORD PTR [esp+0x8]
64022eb4:	lea    eax,[edx+0xc]
64022eb7:	mov    ecx,DWORD PTR [edx-0x44]
64022eba:	xor    ecx,eax
64022ebc:	call   0x64013d18
64022ec1:	mov    ecx,DWORD PTR [edx-0x4]
64022ec4:	xor    ecx,eax
64022ec6:	call   0x64013d18
64022ecb:	mov    eax,0x64043a18
64022ed0:	jmp    0x640139da
64022ed5:	int3   
64022ed6:	int3   
64022ed7:	int3   
64022ed8:	int3   
64022ed9:	int3   
64022eda:	int3   
64022edb:	int3   
64022edc:	int3   
64022edd:	int3   
64022ede:	int3   
64022edf:	int3   
64022ee0:	lea    ecx,[ebp-0x44]
64022ee3:	jmp    0x64007040
64022ee8:	lea    ecx,[ebp-0x30]
64022eeb:	jmp    0x64002960
64022ef0:	lea    ecx,[ebp-0x34]
64022ef3:	jmp    0x64003650
64022ef8:	mov    edx,DWORD PTR [esp+0x8]
64022efc:	lea    eax,[edx+0xc]
64022eff:	mov    ecx,DWORD PTR [edx-0x48]
64022f02:	xor    ecx,eax
64022f04:	call   0x64013d18
64022f09:	mov    ecx,DWORD PTR [edx-0x8]
64022f0c:	xor    ecx,eax
64022f0e:	call   0x64013d18
64022f13:	mov    eax,0x64043a60
64022f18:	jmp    0x640139da
64022f1d:	lea    ecx,[ebp-0x28]
64022f20:	jmp    0x64002960
64022f25:	mov    edx,DWORD PTR [esp+0x8]
64022f29:	lea    eax,[edx+0xc]
64022f2c:	mov    ecx,DWORD PTR [edx-0x54]
64022f2f:	xor    ecx,eax
64022f31:	call   0x64013d18
64022f36:	mov    eax,0x64043ab4
64022f3b:	jmp    0x640139da
64022f40:	lea    ecx,[ebp-0x28]
64022f43:	jmp    0x64002960
64022f48:	mov    edx,DWORD PTR [esp+0x8]
64022f4c:	lea    eax,[edx+0xc]
64022f4f:	mov    ecx,DWORD PTR [edx-0x54]
64022f52:	xor    ecx,eax
64022f54:	call   0x64013d18
64022f59:	mov    eax,0x64043ae0
64022f5e:	jmp    0x640139da
64022f63:	mov    edx,DWORD PTR [esp+0x8]
64022f67:	lea    eax,[edx+0xc]
64022f6a:	mov    ecx,DWORD PTR [edx-0x14]
64022f6d:	xor    ecx,eax
64022f6f:	call   0x64013d18
64022f74:	mov    eax,0x64043ce0
64022f79:	jmp    0x640139da
64022f7e:	int3   
64022f7f:	int3   
64022f80:	lea    eax,[ebp-0x50]
64022f83:	jmp    0x64008e70
64022f88:	lea    eax,[ebp-0x4c]
64022f8b:	jmp    0x64008e70
64022f90:	mov    edx,DWORD PTR [esp+0x8]
64022f94:	lea    eax,[edx-0x5c]
64022f97:	mov    ecx,DWORD PTR [edx-0x60]
64022f9a:	xor    ecx,eax
64022f9c:	call   0x64013d18
64022fa1:	mov    eax,0x6404427c
64022fa6:	jmp    0x640139da
64022fab:	int3   
64022fac:	int3   
64022fad:	int3   
64022fae:	int3   
64022faf:	int3   
64022fb0:	mov    eax,DWORD PTR [ebp+0x4]
64022fb3:	jmp    0x64008e70
64022fb8:	mov    edx,DWORD PTR [esp+0x8]
64022fbc:	lea    eax,[edx-0xc]
64022fbf:	mov    ecx,DWORD PTR [edx-0x10]
64022fc2:	xor    ecx,eax
64022fc4:	call   0x64013d18
64022fc9:	mov    eax,0x640442a8
64022fce:	jmp    0x640139da
64022fd3:	int3   
64022fd4:	int3   
64022fd5:	int3   
64022fd6:	int3   
64022fd7:	int3   
64022fd8:	int3   
64022fd9:	int3   
64022fda:	int3   
64022fdb:	int3   
64022fdc:	int3   
64022fdd:	int3   
64022fde:	int3   
64022fdf:	int3   
64022fe0:	lea    ecx,[ebp+0x8]
64022fe3:	jmp    0x64003650
64022fe8:	lea    ecx,[ebp-0x43c]
64022fee:	jmp    0x64002e10
64022ff3:	mov    edx,DWORD PTR [esp+0x8]
64022ff7:	lea    eax,[edx-0x444]
64022ffd:	mov    ecx,DWORD PTR [edx-0x448]
64023003:	xor    ecx,eax
64023005:	call   0x64013d18
6402300a:	add    eax,0x10
6402300d:	mov    ecx,DWORD PTR [edx-0x4]
64023010:	xor    ecx,eax
64023012:	call   0x64013d18
64023017:	mov    eax,0x640442dc
6402301c:	jmp    0x640139da
64023021:	int3   
64023022:	int3   
64023023:	int3   
64023024:	int3   
64023025:	int3   
64023026:	int3   
64023027:	int3   
64023028:	int3   
64023029:	int3   
6402302a:	int3   
6402302b:	int3   
6402302c:	int3   
6402302d:	int3   
6402302e:	int3   
6402302f:	int3   
64023030:	mov    edx,DWORD PTR [esp+0x8]
64023034:	lea    eax,[edx+0xc]
64023037:	mov    ecx,DWORD PTR [edx-0x28]
6402303a:	xor    ecx,eax
6402303c:	call   0x64013d18
64023041:	mov    eax,0x64044368
64023046:	jmp    0x640139da
6402304b:	int3   
6402304c:	int3   
6402304d:	int3   
6402304e:	int3   
6402304f:	int3   
64023050:	mov    edx,DWORD PTR [esp+0x8]
64023054:	lea    eax,[edx+0xc]
64023057:	mov    ecx,DWORD PTR [edx-0x2c]
6402305a:	xor    ecx,eax
6402305c:	call   0x64013d18
64023061:	mov    eax,0x640443f4
64023066:	jmp    0x640139da
6402306b:	int3   
6402306c:	int3   
6402306d:	int3   
6402306e:	int3   
6402306f:	int3   
64023070:	lea    esi,[ebp+0x4]
64023073:	jmp    0x64003d10
64023078:	mov    edx,DWORD PTR [esp+0x8]
6402307c:	lea    eax,[edx-0x10]
6402307f:	mov    ecx,DWORD PTR [edx-0x14]
64023082:	xor    ecx,eax
64023084:	call   0x64013d18
64023089:	mov    eax,0x64044420
6402308e:	jmp    0x640139da
64023093:	int3   
64023094:	int3   
64023095:	int3   
64023096:	int3   
64023097:	int3   
64023098:	int3   
64023099:	int3   
6402309a:	int3   
6402309b:	int3   
6402309c:	int3   
6402309d:	int3   
6402309e:	int3   
6402309f:	int3   
640230a0:	mov    ecx,DWORD PTR [ebp-0x10]
640230a3:	jmp    0x6401372a
640230a8:	mov    edx,DWORD PTR [esp+0x8]
640230ac:	lea    eax,[edx-0xc]
640230af:	mov    ecx,DWORD PTR [edx-0x10]
640230b2:	xor    ecx,eax
640230b4:	call   0x64013d18
640230b9:	mov    eax,0x6404444c
640230be:	jmp    0x640139da
640230c3:	int3   
640230c4:	int3   
640230c5:	int3   
640230c6:	int3   
640230c7:	int3   
640230c8:	int3   
640230c9:	int3   
640230ca:	int3   
640230cb:	int3   
640230cc:	int3   
640230cd:	int3   
640230ce:	int3   
640230cf:	int3   
640230d0:	mov    ecx,DWORD PTR [ebp-0x10]
640230d3:	jmp    0x6401372a
640230d8:	mov    edx,DWORD PTR [esp+0x8]
640230dc:	lea    eax,[edx-0xc]
640230df:	mov    ecx,DWORD PTR [edx-0x10]
640230e2:	xor    ecx,eax
640230e4:	call   0x64013d18
640230e9:	mov    eax,0x64044478
640230ee:	jmp    0x640139da
640230f3:	int3   
640230f4:	int3   
640230f5:	int3   
640230f6:	int3   
640230f7:	int3   
640230f8:	int3   
640230f9:	int3   
640230fa:	int3   
640230fb:	int3   
640230fc:	int3   
640230fd:	int3   
640230fe:	int3   
640230ff:	int3   
64023100:	mov    ecx,DWORD PTR [ebp+0x4]
64023103:	jmp    0x6401372a
64023108:	mov    edx,DWORD PTR [esp+0x8]
6402310c:	lea    eax,[edx-0x4]
6402310f:	mov    ecx,DWORD PTR [edx-0x8]
64023112:	xor    ecx,eax
64023114:	call   0x64013d18
64023119:	mov    eax,0x640444a4
6402311e:	jmp    0x640139da
64023123:	int3   
64023124:	int3   
64023125:	int3   
64023126:	int3   
64023127:	int3   
64023128:	int3   
64023129:	int3   
6402312a:	int3   
6402312b:	int3   
6402312c:	int3   
6402312d:	int3   
6402312e:	int3   
6402312f:	int3   
64023130:	mov    ecx,DWORD PTR [ebp-0x10]
64023133:	jmp    0x6401372a
64023138:	mov    edx,DWORD PTR [esp+0x8]
6402313c:	lea    eax,[edx-0x8]
6402313f:	mov    ecx,DWORD PTR [edx-0xc]
64023142:	xor    ecx,eax
64023144:	call   0x64013d18
64023149:	mov    eax,0x640444d0
6402314e:	jmp    0x640139da
64023153:	int3   
64023154:	int3   
64023155:	int3   
64023156:	int3   
64023157:	int3   
64023158:	int3   
64023159:	int3   
6402315a:	int3   
6402315b:	int3   
6402315c:	int3   
6402315d:	int3   
6402315e:	int3   
6402315f:	int3   
64023160:	mov    ecx,DWORD PTR [ebp+0x4]
64023163:	jmp    0x64007900
64023168:	mov    edx,DWORD PTR [esp+0x8]
6402316c:	lea    eax,[edx-0x4]
6402316f:	mov    ecx,DWORD PTR [edx-0x8]
64023172:	xor    ecx,eax
64023174:	call   0x64013d18
64023179:	mov    eax,0x640444fc
6402317e:	jmp    0x640139da
64023183:	int3   
64023184:	int3   
64023185:	int3   
64023186:	int3   
64023187:	int3   
64023188:	int3   
64023189:	int3   
6402318a:	int3   
6402318b:	int3   
6402318c:	int3   
6402318d:	int3   
6402318e:	int3   
6402318f:	int3   
64023190:	mov    esi,DWORD PTR [ebp+0x4]
64023193:	jmp    0x64003d10
64023198:	mov    edx,DWORD PTR [esp+0x8]
6402319c:	lea    eax,[edx-0x8]
6402319f:	mov    ecx,DWORD PTR [edx-0xc]
640231a2:	xor    ecx,eax
640231a4:	call   0x64013d18
640231a9:	mov    eax,0x64044528
640231ae:	jmp    0x640139da
640231b3:	int3   
640231b4:	int3   
640231b5:	int3   
640231b6:	int3   
640231b7:	int3   
640231b8:	int3   
640231b9:	int3   
640231ba:	int3   
640231bb:	int3   
640231bc:	int3   
640231bd:	int3   
640231be:	int3   
640231bf:	int3   
640231c0:	mov    ecx,DWORD PTR [ebp-0x10]
640231c3:	jmp    0x64002960
640231c8:	mov    edx,DWORD PTR [esp+0x8]
640231cc:	lea    eax,[edx-0x10]
640231cf:	mov    ecx,DWORD PTR [edx-0x14]
640231d2:	xor    ecx,eax
640231d4:	call   0x64013d18
640231d9:	mov    eax,0x64044554
640231de:	jmp    0x640139da
640231e3:	int3   
640231e4:	int3   
640231e5:	int3   
640231e6:	int3   
640231e7:	int3   
640231e8:	int3   
640231e9:	int3   
640231ea:	int3   
640231eb:	int3   
640231ec:	int3   
640231ed:	int3   
640231ee:	int3   
640231ef:	int3   
640231f0:	mov    eax,DWORD PTR [ebp-0x14]
640231f3:	push   eax
640231f4:	mov    ecx,DWORD PTR [ebp-0x18]
640231f7:	push   ecx
640231f8:	call   0x64001240
640231fd:	add    esp,0x8
64023200:	ret    
64023201:	mov    edx,DWORD PTR [esp+0x8]
64023205:	lea    eax,[edx+0xc]
64023208:	mov    ecx,DWORD PTR [edx-0x1c]
6402320b:	xor    ecx,eax
6402320d:	call   0x64013d18
64023212:	mov    eax,0x640445b4
64023217:	jmp    0x640139da
6402321c:	int3   
6402321d:	int3   
6402321e:	int3   
6402321f:	int3   
64023220:	mov    eax,DWORD PTR [ebp-0x14]
64023223:	push   eax
64023224:	mov    ecx,DWORD PTR [ebp-0x18]
64023227:	push   ecx
64023228:	call   0x64001240
6402322d:	add    esp,0x8
64023230:	ret    
64023231:	mov    edx,DWORD PTR [esp+0x8]
64023235:	lea    eax,[edx+0xc]
64023238:	mov    ecx,DWORD PTR [edx-0x1c]
6402323b:	xor    ecx,eax
6402323d:	call   0x64013d18
64023242:	mov    eax,0x64044614
64023247:	jmp    0x640139da
6402324c:	int3   
6402324d:	int3   
6402324e:	int3   
6402324f:	int3   
64023250:	mov    esi,DWORD PTR [ebp+0x4]
64023253:	jmp    0x64003d10
64023258:	mov    edx,DWORD PTR [esp+0x8]
6402325c:	lea    eax,[edx-0x8]
6402325f:	mov    ecx,DWORD PTR [edx-0xc]
64023262:	xor    ecx,eax
64023264:	call   0x64013d18
64023269:	mov    eax,0x64044640
6402326e:	jmp    0x640139da
64023273:	int3   
64023274:	int3   
64023275:	int3   
64023276:	int3   
64023277:	int3   
64023278:	int3   
64023279:	int3   
6402327a:	int3   
6402327b:	int3   
6402327c:	int3   
6402327d:	int3   
6402327e:	int3   
6402327f:	int3   
64023280:	mov    ecx,DWORD PTR [ebp-0x10]
64023283:	jmp    0x64002960
64023288:	mov    edx,DWORD PTR [esp+0x8]
6402328c:	lea    eax,[edx-0xc]
6402328f:	mov    ecx,DWORD PTR [edx-0x10]
64023292:	xor    ecx,eax
64023294:	call   0x64013d18
64023299:	mov    eax,0x6404466c
6402329e:	jmp    0x640139da
640232a3:	int3   
640232a4:	int3   
640232a5:	int3   
640232a6:	int3   
640232a7:	int3   
640232a8:	int3   
640232a9:	int3   
640232aa:	int3   
640232ab:	int3   
640232ac:	int3   
640232ad:	int3   
640232ae:	int3   
640232af:	int3   
640232b0:	lea    ecx,[ebp+0x8]
640232b3:	jmp    0x64002960
640232b8:	mov    edx,DWORD PTR [esp+0x8]
640232bc:	lea    eax,[edx-0x14]
640232bf:	mov    ecx,DWORD PTR [edx-0x18]
640232c2:	xor    ecx,eax
640232c4:	call   0x64013d18
640232c9:	mov    eax,0x64044698
640232ce:	jmp    0x640139da
640232d3:	int3   
640232d4:	int3   
640232d5:	int3   
640232d6:	int3   
640232d7:	int3   
640232d8:	int3   
640232d9:	int3   
640232da:	int3   
640232db:	int3   
640232dc:	int3   
640232dd:	int3   
640232de:	int3   
640232df:	int3   
640232e0:	mov    eax,DWORD PTR [ebp+0x8]
640232e3:	and    eax,0x1
640232e6:	je     0x640232f8
640232ec:	and    DWORD PTR [ebp+0x8],0xfffffffe
640232f0:	mov    ecx,DWORD PTR [ebp+0x4]
640232f3:	jmp    0x64003650
640232f8:	ret    
640232f9:	mov    edx,DWORD PTR [esp+0x8]
640232fd:	lea    eax,[edx-0x8]
64023300:	mov    ecx,DWORD PTR [edx-0xc]
64023303:	xor    ecx,eax
64023305:	call   0x64013d18
6402330a:	mov    eax,0x640446c4
6402330f:	jmp    0x640139da
64023314:	int3   
64023315:	int3   
64023316:	int3   
64023317:	int3   
64023318:	int3   
64023319:	int3   
6402331a:	int3   
6402331b:	int3   
6402331c:	int3   
6402331d:	int3   
6402331e:	int3   
6402331f:	int3   
64023320:	lea    ecx,[ebp-0x10]
64023323:	jmp    0x64003650
64023328:	mov    edx,DWORD PTR [esp+0x8]
6402332c:	lea    eax,[edx-0xc]
6402332f:	mov    ecx,DWORD PTR [edx-0x10]
64023332:	xor    ecx,eax
64023334:	call   0x64013d18
64023339:	mov    eax,0x640446f0
6402333e:	jmp    0x640139da
64023343:	int3   
64023344:	int3   
64023345:	int3   
64023346:	int3   
64023347:	int3   
64023348:	int3   
64023349:	int3   
6402334a:	int3   
6402334b:	int3   
6402334c:	int3   
6402334d:	int3   
6402334e:	int3   
6402334f:	int3   
64023350:	lea    ecx,[ebp+0x4]
64023353:	jmp    0x64003650
64023358:	mov    eax,DWORD PTR [ebp-0x10]
6402335b:	push   eax
6402335c:	call   0x64013656
64023361:	pop    ecx
64023362:	ret    
64023363:	mov    edx,DWORD PTR [esp+0x8]
64023367:	lea    eax,[edx-0x8]
6402336a:	mov    ecx,DWORD PTR [edx-0xc]
6402336d:	xor    ecx,eax
6402336f:	call   0x64013d18
64023374:	mov    eax,0x64044724
64023379:	jmp    0x640139da
6402337e:	int3   
6402337f:	int3   
64023380:	mov    eax,DWORD PTR [ebp-0x10]
64023383:	and    eax,0x1
64023386:	je     0x64023398
6402338c:	and    DWORD PTR [ebp-0x10],0xfffffffe
64023390:	mov    ecx,DWORD PTR [ebp+0x4]
64023393:	jmp    0x64003650
64023398:	ret    
64023399:	mov    edx,DWORD PTR [esp+0x8]
6402339d:	lea    eax,[edx-0xc]
640233a0:	mov    ecx,DWORD PTR [edx-0x10]
640233a3:	xor    ecx,eax
640233a5:	call   0x64013d18
640233aa:	mov    eax,0x64044750
640233af:	jmp    0x640139da
640233b4:	int3   
640233b5:	int3   
640233b6:	int3   
640233b7:	int3   
640233b8:	int3   
640233b9:	int3   
640233ba:	int3   
640233bb:	int3   
640233bc:	int3   
640233bd:	int3   
640233be:	int3   
640233bf:	int3   
640233c0:	lea    eax,[ebp-0x14]
640233c3:	jmp    0x64008e70
640233c8:	lea    eax,[ebp-0x10]
640233cb:	jmp    0x64008e70
640233d0:	mov    edx,DWORD PTR [esp+0x8]
640233d4:	lea    eax,[edx-0x1c]
640233d7:	mov    ecx,DWORD PTR [edx-0x20]
640233da:	xor    ecx,eax
640233dc:	call   0x64013d18
640233e1:	mov    eax,0x64044784
640233e6:	jmp    0x640139da
640233eb:	int3   
640233ec:	int3   
640233ed:	int3   
640233ee:	int3   
640233ef:	int3   
640233f0:	lea    ecx,[ebp-0x28]
640233f3:	jmp    0x64002960
640233f8:	mov    edx,DWORD PTR [esp+0x8]
640233fc:	lea    eax,[edx-0x28]
640233ff:	mov    ecx,DWORD PTR [edx-0x2c]
64023402:	xor    ecx,eax
64023404:	call   0x64013d18
64023409:	mov    eax,0x640447b0
6402340e:	jmp    0x640139da
64023413:	int3   
64023414:	int3   
64023415:	int3   
64023416:	int3   
64023417:	int3   
64023418:	int3   
64023419:	int3   
6402341a:	int3   
6402341b:	int3   
6402341c:	int3   
6402341d:	int3   
6402341e:	int3   
6402341f:	int3   
64023420:	mov    ecx,DWORD PTR [ebp-0x10]
64023423:	jmp    0x64003650
64023428:	mov    edx,DWORD PTR [esp+0x8]
6402342c:	lea    eax,[edx-0xc]
6402342f:	mov    ecx,DWORD PTR [edx-0x10]
64023432:	xor    ecx,eax
64023434:	call   0x64013d18
64023439:	mov    eax,0x640447dc
6402343e:	jmp    0x640139da
64023443:	int3   
64023444:	int3   
64023445:	int3   
64023446:	int3   
64023447:	int3   
64023448:	int3   
64023449:	int3   
6402344a:	int3   
6402344b:	int3   
6402344c:	int3   
6402344d:	int3   
6402344e:	int3   
6402344f:	int3   
64023450:	mov    ecx,DWORD PTR [ebp+0x4]
64023453:	jmp    0x64003650
64023458:	mov    edx,DWORD PTR [esp+0x8]
6402345c:	lea    eax,[edx-0xc]
6402345f:	mov    ecx,DWORD PTR [edx-0x10]
64023462:	xor    ecx,eax
64023464:	call   0x64013d18
64023469:	mov    eax,0x64044808
6402346e:	jmp    0x640139da
64023473:	int3   
64023474:	int3   
64023475:	int3   
64023476:	int3   
64023477:	int3   
64023478:	int3   
64023479:	int3   
6402347a:	int3   
6402347b:	int3   
6402347c:	int3   
6402347d:	int3   
6402347e:	int3   
6402347f:	int3   
64023480:	lea    ecx,[ebp-0x50]
64023483:	jmp    0x64002960
64023488:	mov    edx,DWORD PTR [esp+0x8]
6402348c:	lea    eax,[edx+0xc]
6402348f:	mov    ecx,DWORD PTR [edx-0x70]
64023492:	xor    ecx,eax
64023494:	call   0x64013d18
64023499:	mov    eax,0x64044834
6402349e:	jmp    0x640139da
640234a3:	int3   
640234a4:	int3   
640234a5:	int3   
640234a6:	int3   
640234a7:	int3   
640234a8:	int3   
640234a9:	int3   
640234aa:	int3   
640234ab:	int3   
640234ac:	int3   
640234ad:	int3   
640234ae:	int3   
640234af:	int3   
640234b0:	lea    ecx,[ebp-0x54]
640234b3:	jmp    0x64002960
640234b8:	mov    edx,DWORD PTR [esp+0x8]
640234bc:	lea    eax,[edx-0x48]
640234bf:	mov    ecx,DWORD PTR [edx-0x4c]
640234c2:	xor    ecx,eax
640234c4:	call   0x64013d18
640234c9:	mov    eax,0x64044860
640234ce:	jmp    0x640139da
640234d3:	int3   
640234d4:	int3   
640234d5:	int3   
640234d6:	int3   
640234d7:	int3   
640234d8:	int3   
640234d9:	int3   
640234da:	int3   
640234db:	int3   
640234dc:	int3   
640234dd:	int3   
640234de:	int3   
640234df:	int3   
640234e0:	lea    ecx,[ebp-0x98]
640234e6:	jmp    0x64002960
640234eb:	lea    ecx,[ebp-0x98]
640234f1:	jmp    0x64002960
640234f6:	lea    ecx,[ebp-0x7c]
640234f9:	jmp    0x64002960
640234fe:	mov    edx,DWORD PTR [esp+0x8]
64023502:	lea    eax,[edx-0xa8]
64023508:	mov    ecx,DWORD PTR [edx-0xac]
6402350e:	xor    ecx,eax
64023510:	call   0x64013d18
64023515:	mov    eax,0x6404489c
6402351a:	jmp    0x640139da
6402351f:	int3   
64023520:	lea    ecx,[ebp-0x2c]
64023523:	jmp    0x64002e10
64023528:	mov    edx,DWORD PTR [esp+0x8]
6402352c:	lea    eax,[edx-0x38]
6402352f:	mov    ecx,DWORD PTR [edx-0x3c]
64023532:	xor    ecx,eax
64023534:	call   0x64013d18
64023539:	mov    eax,0x640448c8
6402353e:	jmp    0x640139da
64023543:	int3   
64023544:	int3   
64023545:	int3   
64023546:	int3   
64023547:	int3   
64023548:	int3   
64023549:	int3   
6402354a:	int3   
6402354b:	int3   
6402354c:	int3   
6402354d:	int3   
6402354e:	int3   
6402354f:	int3   
64023550:	lea    ecx,[ebp-0x54]
64023553:	jmp    0x64002960
64023558:	mov    edx,DWORD PTR [esp+0x8]
6402355c:	lea    eax,[edx-0x58]
6402355f:	mov    ecx,DWORD PTR [edx-0x5c]
64023562:	xor    ecx,eax
64023564:	call   0x64013d18
64023569:	mov    eax,0x640448f4
6402356e:	jmp    0x640139da
64023573:	int3   
64023574:	int3   
64023575:	int3   
64023576:	int3   
64023577:	int3   
64023578:	int3   
64023579:	int3   
6402357a:	int3   
6402357b:	int3   
6402357c:	int3   
6402357d:	int3   
6402357e:	int3   
6402357f:	int3   
64023580:	lea    ecx,[ebp-0x54]
64023583:	jmp    0x64002960
64023588:	mov    edx,DWORD PTR [esp+0x8]
6402358c:	lea    eax,[edx-0x5c]
6402358f:	mov    ecx,DWORD PTR [edx-0x60]
64023592:	xor    ecx,eax
64023594:	call   0x64013d18
64023599:	mov    eax,0x64044920
6402359e:	jmp    0x640139da
640235a3:	int3   
640235a4:	int3   
640235a5:	int3   
640235a6:	int3   
640235a7:	int3   
640235a8:	int3   
640235a9:	int3   
640235aa:	int3   
640235ab:	int3   
640235ac:	int3   
640235ad:	int3   
640235ae:	int3   
640235af:	int3   
640235b0:	lea    ecx,[ebp-0x50]
640235b3:	jmp    0x64002960
640235b8:	mov    edx,DWORD PTR [esp+0x8]
640235bc:	lea    eax,[edx-0x54]
640235bf:	mov    ecx,DWORD PTR [edx-0x58]
640235c2:	xor    ecx,eax
640235c4:	call   0x64013d18
640235c9:	mov    eax,0x6404494c
640235ce:	jmp    0x640139da
640235d3:	int3   
640235d4:	int3   
640235d5:	int3   
640235d6:	int3   
640235d7:	int3   
640235d8:	int3   
640235d9:	int3   
640235da:	int3   
640235db:	int3   
640235dc:	int3   
640235dd:	int3   
640235de:	int3   
640235df:	int3   
640235e0:	lea    ecx,[ebp-0x54]
640235e3:	jmp    0x64002960
640235e8:	mov    edx,DWORD PTR [esp+0x8]
640235ec:	lea    eax,[edx-0x5c]
640235ef:	mov    ecx,DWORD PTR [edx-0x60]
640235f2:	xor    ecx,eax
640235f4:	call   0x64013d18
640235f9:	mov    eax,0x64044978
640235fe:	jmp    0x640139da
64023603:	int3   
64023604:	int3   
64023605:	int3   
64023606:	int3   
64023607:	int3   
64023608:	int3   
64023609:	int3   
6402360a:	int3   
6402360b:	int3   
6402360c:	int3   
6402360d:	int3   
6402360e:	int3   
6402360f:	int3   
64023610:	lea    esi,[ebp-0x64]
64023613:	jmp    0x64003d10
64023618:	lea    esi,[ebp-0x48]
6402361b:	jmp    0x64003fa0
64023620:	mov    edx,DWORD PTR [esp+0x8]
64023624:	lea    eax,[edx-0x70]
64023627:	mov    ecx,DWORD PTR [edx-0x74]
6402362a:	xor    ecx,eax
6402362c:	call   0x64013d18
64023631:	mov    eax,0x640449ac
64023636:	jmp    0x640139da
6402363b:	int3   
6402363c:	int3   
6402363d:	int3   
6402363e:	int3   
6402363f:	int3   
64023640:	lea    ecx,[ebp-0x64]
64023643:	jmp    0x64002960
64023648:	lea    ecx,[ebp-0x48]
6402364b:	jmp    0x64003f50
64023650:	mov    edx,DWORD PTR [esp+0x8]
64023654:	lea    eax,[edx-0x6c]
64023657:	mov    ecx,DWORD PTR [edx-0x70]
6402365a:	xor    ecx,eax
6402365c:	call   0x64013d18
64023661:	mov    eax,0x640449e0
64023666:	jmp    0x640139da
6402366b:	int3   
6402366c:	int3   
6402366d:	int3   
6402366e:	int3   
6402366f:	int3   
64023670:	mov    eax,ds:0x64054508
64023675:	and    eax,0xfffffffe
64023678:	mov    ds:0x64054508,eax
6402367d:	ret    
6402367e:	mov    edx,DWORD PTR [esp+0x8]
64023682:	lea    eax,[edx]
64023684:	mov    ecx,DWORD PTR [edx-0x4]
64023687:	xor    ecx,eax
64023689:	call   0x64013d18
6402368e:	mov    eax,0x64044a0c
64023693:	jmp    0x640139da
64023698:	int3   
64023699:	int3   
6402369a:	int3   
6402369b:	int3   
6402369c:	int3   
6402369d:	int3   
6402369e:	int3   
6402369f:	int3   
640236a0:	mov    eax,ds:0x6405450c
640236a5:	and    eax,0xfffffffe
640236a8:	mov    ds:0x6405450c,eax
640236ad:	ret    
640236ae:	mov    edx,DWORD PTR [esp+0x8]
640236b2:	lea    eax,[edx]
640236b4:	mov    ecx,DWORD PTR [edx-0x4]
640236b7:	xor    ecx,eax
640236b9:	call   0x64013d18
640236be:	mov    eax,0x64044a38
640236c3:	jmp    0x640139da
640236c8:	int3   
640236c9:	int3   
640236ca:	int3   
640236cb:	int3   
640236cc:	int3   
640236cd:	int3   
640236ce:	int3   
640236cf:	int3   
640236d0:	lea    esi,[ebp-0x4c]
640236d3:	jmp    0x64003d10
640236d8:	lea    esi,[ebp-0x30]
640236db:	jmp    0x64003d10
640236e0:	mov    edx,DWORD PTR [esp+0x8]
640236e4:	lea    eax,[edx-0x5c]
640236e7:	mov    ecx,DWORD PTR [edx-0x60]
640236ea:	xor    ecx,eax
640236ec:	call   0x64013d18
640236f1:	add    eax,0xc
640236f4:	mov    ecx,DWORD PTR [edx-0x8]
640236f7:	xor    ecx,eax
640236f9:	call   0x64013d18
640236fe:	mov    eax,0x64044a6c
64023703:	jmp    0x640139da
64023708:	int3   
64023709:	int3   
6402370a:	int3   
6402370b:	int3   
6402370c:	int3   
6402370d:	int3   
6402370e:	int3   
6402370f:	int3   
64023710:	lea    ecx,[ebp-0x4c]
64023713:	jmp    0x64002960
64023718:	lea    ecx,[ebp-0x30]
6402371b:	jmp    0x64002960
64023720:	mov    edx,DWORD PTR [esp+0x8]
64023724:	lea    eax,[edx-0x5c]
64023727:	mov    ecx,DWORD PTR [edx-0x60]
6402372a:	xor    ecx,eax
6402372c:	call   0x64013d18
64023731:	add    eax,0xc
64023734:	mov    ecx,DWORD PTR [edx-0x8]
64023737:	xor    ecx,eax
64023739:	call   0x64013d18
6402373e:	mov    eax,0x64044aa0
64023743:	jmp    0x640139da
64023748:	int3   
64023749:	int3   
6402374a:	int3   
6402374b:	int3   
6402374c:	int3   
6402374d:	int3   
6402374e:	int3   
6402374f:	int3   
64023750:	mov    eax,DWORD PTR [ebp-0x58]
64023753:	and    eax,0x1
64023756:	je     0x64023768
6402375c:	and    DWORD PTR [ebp-0x58],0xfffffffe
64023760:	mov    ecx,DWORD PTR [ebp+0x4]
64023763:	jmp    0x64003650
64023768:	ret    
64023769:	lea    ecx,[ebp-0x54]
6402376c:	jmp    0x64002960
64023771:	mov    edx,DWORD PTR [esp+0x8]
64023775:	lea    eax,[edx-0x58]
64023778:	mov    ecx,DWORD PTR [edx-0x5c]
6402377b:	xor    ecx,eax
6402377d:	call   0x64013d18
64023782:	mov    eax,0x64044ad4
64023787:	jmp    0x640139da
6402378c:	int3   
6402378d:	int3   
6402378e:	int3   
6402378f:	int3   
64023790:	lea    ecx,[ebp-0x28]
64023793:	jmp    0x64009cb0
64023798:	lea    ecx,[ebp-0xf8]
6402379e:	jmp    0x64002960
640237a3:	lea    eax,[ebp-0x38]
640237a6:	jmp    0x64008e70
640237ab:	mov    edx,DWORD PTR [esp+0x8]
640237af:	lea    eax,[edx+0xc]
640237b2:	mov    ecx,DWORD PTR [edx-0x234]
640237b8:	xor    ecx,eax
640237ba:	call   0x64013d18
640237bf:	mov    ecx,DWORD PTR [edx-0x30]
640237c2:	xor    ecx,eax
640237c4:	call   0x64013d18
640237c9:	mov    eax,0x64044b4c
640237ce:	jmp    0x640139da
640237d3:	int3   
640237d4:	int3   
640237d5:	int3   
640237d6:	int3   
640237d7:	int3   
640237d8:	int3   
640237d9:	int3   
640237da:	int3   
640237db:	int3   
640237dc:	int3   
640237dd:	int3   
640237de:	int3   
640237df:	int3   
640237e0:	lea    ecx,[ebp-0x1040]
640237e6:	jmp    0x64009cb0
640237eb:	lea    ecx,[ebp-0x106c]
640237f1:	jmp    0x64002960
640237f6:	lea    eax,[ebp-0x104c]
640237fc:	jmp    0x64008e70
64023801:	mov    edx,DWORD PTR [esp+0x8]
64023805:	lea    eax,[edx+0xc]
64023808:	mov    ecx,DWORD PTR [edx-0x1070]
6402380e:	xor    ecx,eax
64023810:	call   0x64013d18
64023815:	mov    ecx,DWORD PTR [edx-0xc]
64023818:	xor    ecx,eax
6402381a:	call   0x64013d18
6402381f:	mov    eax,0x64044bc4
64023824:	jmp    0x640139da
64023829:	int3   
6402382a:	int3   
6402382b:	int3   
6402382c:	int3   
6402382d:	int3   
6402382e:	int3   
6402382f:	int3   
64023830:	lea    ecx,[ebp-0x103c]
64023836:	jmp    0x64009cb0
6402383b:	lea    ecx,[ebp-0x106c]
64023841:	jmp    0x64002960
64023846:	lea    eax,[ebp-0x1044]
6402384c:	jmp    0x64008e70
64023851:	mov    edx,DWORD PTR [esp+0x8]
64023855:	lea    eax,[edx+0xc]
64023858:	mov    ecx,DWORD PTR [edx-0x1074]
6402385e:	xor    ecx,eax
64023860:	call   0x64013d18
64023865:	mov    ecx,DWORD PTR [edx-0x8]
64023868:	xor    ecx,eax
6402386a:	call   0x64013d18
6402386f:	mov    eax,0x64044c3c
64023874:	jmp    0x640139da
64023879:	int3   
6402387a:	int3   
6402387b:	int3   
6402387c:	int3   
6402387d:	int3   
6402387e:	int3   
6402387f:	int3   
64023880:	lea    ecx,[ebp-0x28]
64023883:	jmp    0x64002960
64023888:	mov    edx,DWORD PTR [esp+0x8]
6402388c:	lea    eax,[edx-0x28]
6402388f:	mov    ecx,DWORD PTR [edx-0x2c]
64023892:	xor    ecx,eax
64023894:	call   0x64013d18
64023899:	mov    eax,0x64044c68
6402389e:	jmp    0x640139da
640238a3:	int3   
640238a4:	int3   
640238a5:	int3   
640238a6:	int3   
640238a7:	int3   
640238a8:	int3   
640238a9:	int3   
640238aa:	int3   
640238ab:	int3   
640238ac:	int3   
640238ad:	int3   
640238ae:	int3   
640238af:	int3   
640238b0:	lea    ecx,[ebp-0xb0]
640238b6:	jmp    0x64009cb0
640238bb:	lea    eax,[ebp-0x64]
640238be:	jmp    0x64007a90
640238c3:	lea    ecx,[ebp-0xac]
640238c9:	jmp    0x64002960
640238ce:	lea    ecx,[ebp-0xac]
640238d4:	jmp    0x64002960
640238d9:	lea    ecx,[ebp-0xac]
640238df:	jmp    0x64002960
640238e4:	lea    ecx,[ebp-0xac]
640238ea:	jmp    0x64002960
640238ef:	lea    ecx,[ebp-0xac]
640238f5:	jmp    0x64002960
640238fa:	lea    ecx,[ebp-0xac]
64023900:	jmp    0x64002960
64023905:	lea    ecx,[ebp-0xac]
6402390b:	jmp    0x64002960
64023910:	lea    ecx,[ebp-0xac]
64023916:	jmp    0x64002960
6402391b:	lea    ecx,[ebp-0xac]
64023921:	jmp    0x64002960
64023926:	lea    ecx,[ebp-0x50]
64023929:	jmp    0x64002960
6402392e:	mov    edx,DWORD PTR [esp+0x8]
64023932:	lea    eax,[edx-0xb4]
64023938:	mov    ecx,DWORD PTR [edx-0xb8]
6402393e:	xor    ecx,eax
64023940:	call   0x64013d18
64023945:	mov    eax,0x64044cf0
6402394a:	jmp    0x640139da
6402394f:	int3   
64023950:	mov    ecx,DWORD PTR [ebp+0x4]
64023953:	jmp    0x64002e10
64023958:	mov    ecx,DWORD PTR [ebp+0x4]
6402395b:	add    ecx,0x894
64023961:	jmp    0x64009ac0
64023966:	mov    eax,DWORD PTR [ebp-0x2c]
64023969:	push   eax
6402396a:	call   0x64013656
6402396f:	pop    ecx
64023970:	ret    
64023971:	mov    eax,DWORD PTR [ebp-0x30]
64023974:	and    eax,0x1
64023977:	je     0x64023989
6402397d:	and    DWORD PTR [ebp-0x30],0xfffffffe
64023981:	lea    ecx,[ebp-0x28]
64023984:	jmp    0x64002960
64023989:	ret    
6402398a:	mov    edx,DWORD PTR [esp+0x8]
6402398e:	lea    eax,[edx-0x34]
64023991:	mov    ecx,DWORD PTR [edx-0x38]
64023994:	xor    ecx,eax
64023996:	call   0x64013d18
6402399b:	mov    eax,0x64044d3c
640239a0:	jmp    0x640139da
640239a5:	int3   
640239a6:	int3   
640239a7:	int3   
640239a8:	int3   
640239a9:	int3   
640239aa:	int3   
640239ab:	int3   
640239ac:	int3   
640239ad:	int3   
640239ae:	int3   
640239af:	int3   
640239b0:	lea    ecx,[ebp-0x18]
640239b3:	jmp    0x64002e10
640239b8:	lea    ecx,[ebp-0x1c]
640239bb:	jmp    0x64003650
640239c0:	mov    eax,ds:0x6405468c
640239c5:	and    eax,0xfffffffe
640239c8:	mov    ds:0x6405468c,eax
640239cd:	ret    
640239ce:	mov    edx,DWORD PTR [esp+0x8]
640239d2:	lea    eax,[edx-0x24]
640239d5:	mov    ecx,DWORD PTR [edx-0x28]
640239d8:	xor    ecx,eax
640239da:	call   0x64013d18
640239df:	mov    eax,0x64044d78
640239e4:	jmp    0x640139da
640239e9:	int3   
640239ea:	int3   
640239eb:	int3   
640239ec:	int3   
640239ed:	int3   
640239ee:	int3   
640239ef:	int3   
640239f0:	lea    ecx,[ebp-0x10]
640239f3:	jmp    0x64002e10
640239f8:	mov    edx,DWORD PTR [esp+0x8]
640239fc:	lea    eax,[edx-0x14]
640239ff:	mov    ecx,DWORD PTR [edx-0x18]
64023a02:	xor    ecx,eax
64023a04:	call   0x64013d18
64023a09:	mov    eax,0x64044da4
64023a0e:	jmp    0x640139da
64023a13:	int3   
64023a14:	int3   
64023a15:	int3   
64023a16:	int3   
64023a17:	int3   
64023a18:	int3   
64023a19:	int3   
64023a1a:	int3   
64023a1b:	int3   
64023a1c:	int3   
64023a1d:	int3   
64023a1e:	int3   
64023a1f:	int3   
64023a20:	lea    eax,[ebp-0x58]
64023a23:	jmp    0x64008e70
64023a28:	lea    eax,[ebp-0x5c]
64023a2b:	jmp    0x64008e70
64023a30:	lea    ecx,[ebp-0x54]
64023a33:	jmp    0x64002960
64023a38:	lea    ecx,[ebp-0x54]
64023a3b:	jmp    0x64002960
64023a40:	lea    ecx,[ebp-0x54]
64023a43:	jmp    0x64002960
64023a48:	mov    edx,DWORD PTR [esp+0x8]
64023a4c:	lea    eax,[edx-0x5c]
64023a4f:	mov    ecx,DWORD PTR [edx-0x60]
64023a52:	xor    ecx,eax
64023a54:	call   0x64013d18
64023a59:	mov    eax,0x64044df0
64023a5e:	jmp    0x640139da
64023a63:	int3   
64023a64:	int3   
64023a65:	int3   
64023a66:	int3   
64023a67:	int3   
64023a68:	int3   
64023a69:	int3   
64023a6a:	int3   
64023a6b:	int3   
64023a6c:	int3   
64023a6d:	int3   
64023a6e:	int3   
64023a6f:	int3   
64023a70:	mov    eax,ds:0x64054690
64023a75:	and    eax,0xfffffffe
64023a78:	mov    ds:0x64054690,eax
64023a7d:	ret    
64023a7e:	mov    eax,DWORD PTR [ebp-0x2c]
64023a81:	and    eax,0x1
64023a84:	je     0x64023a96
64023a8a:	and    DWORD PTR [ebp-0x2c],0xfffffffe
64023a8e:	mov    ecx,DWORD PTR [ebp-0x30]
64023a91:	jmp    0x64003650
64023a96:	ret    
64023a97:	lea    ecx,[ebp-0x4c]
64023a9a:	jmp    0x64002960
64023a9f:	mov    edx,DWORD PTR [esp+0x8]
64023aa3:	lea    eax,[edx+0xc]
64023aa6:	mov    ecx,DWORD PTR [edx-0xa1c]
64023aac:	xor    ecx,eax
64023aae:	call   0x64013d18
64023ab3:	mov    ecx,DWORD PTR [edx-0x4]
64023ab6:	xor    ecx,eax
64023ab8:	call   0x64013d18
64023abd:	mov    eax,0x64044e2c
64023ac2:	jmp    0x640139da
64023ac7:	int3   
64023ac8:	int3   
64023ac9:	int3   
64023aca:	int3   
64023acb:	int3   
64023acc:	int3   
64023acd:	int3   
64023ace:	int3   
64023acf:	int3   
64023ad0:	mov    eax,DWORD PTR [ebp-0x58]
64023ad3:	and    eax,0x1
64023ad6:	je     0x64023ae8
64023adc:	and    DWORD PTR [ebp-0x58],0xfffffffe
64023ae0:	mov    ecx,DWORD PTR [ebp+0x4]
64023ae3:	jmp    0x64003650
64023ae8:	ret    
64023ae9:	lea    ecx,[ebp-0x54]
64023aec:	jmp    0x64002960
64023af1:	mov    edx,DWORD PTR [esp+0x8]
64023af5:	lea    eax,[edx-0x60]
64023af8:	mov    ecx,DWORD PTR [edx-0x64]
64023afb:	xor    ecx,eax
64023afd:	call   0x64013d18
64023b02:	mov    eax,0x64044e60
64023b07:	jmp    0x640139da
64023b0c:	int3   
64023b0d:	int3   
64023b0e:	int3   
64023b0f:	int3   
64023b10:	lea    ecx,[ebp-0x20]
64023b13:	jmp    0x64007040
64023b18:	mov    edx,DWORD PTR [esp+0x8]
64023b1c:	lea    eax,[edx+0xc]
64023b1f:	mov    ecx,DWORD PTR [edx-0x24]
64023b22:	xor    ecx,eax
64023b24:	call   0x64013d18
64023b29:	mov    eax,0x64044ec0
64023b2e:	jmp    0x640139da
64023b33:	int3   
64023b34:	int3   
64023b35:	int3   
64023b36:	int3   
64023b37:	int3   
64023b38:	int3   
64023b39:	int3   
64023b3a:	int3   
64023b3b:	int3   
64023b3c:	int3   
64023b3d:	int3   
64023b3e:	int3   
64023b3f:	int3   
64023b40:	lea    ecx,[ebp-0x94]
64023b46:	jmp    0x64003650
64023b4b:	mov    edx,DWORD PTR [esp+0x8]
64023b4f:	lea    eax,[edx-0x8c]
64023b55:	mov    ecx,DWORD PTR [edx-0x90]
64023b5b:	xor    ecx,eax
64023b5d:	call   0x64013d18
64023b62:	add    eax,0x4
64023b65:	mov    ecx,DWORD PTR [edx-0x4]
64023b68:	xor    ecx,eax
64023b6a:	call   0x64013d18
64023b6f:	mov    eax,0x64044eec
64023b74:	jmp    0x640139da
64023b79:	int3   
64023b7a:	int3   
64023b7b:	int3   
64023b7c:	int3   
64023b7d:	int3   
64023b7e:	int3   
64023b7f:	int3   
64023b80:	lea    ecx,[ebp-0x7c]
64023b83:	jmp    0x64003650
64023b88:	lea    ecx,[ebp-0xa4]
64023b8e:	jmp    0x64002960
64023b93:	lea    ecx,[ebp-0xe8]
64023b99:	jmp    0x64002960
64023b9e:	lea    ecx,[ebp-0x104]
64023ba4:	jmp    0x64002960
64023ba9:	lea    ecx,[ebp-0x13c]
64023baf:	jmp    0x64002960
64023bb4:	lea    ecx,[ebp-0x120]
64023bba:	jmp    0x64002960
64023bbf:	mov    edx,DWORD PTR [esp+0x8]
64023bc3:	lea    eax,[edx+0xc]
64023bc6:	mov    ecx,DWORD PTR [edx-0x144]
64023bcc:	xor    ecx,eax
64023bce:	call   0x64013d18
64023bd3:	mov    ecx,DWORD PTR [edx-0x4]
64023bd6:	xor    ecx,eax
64023bd8:	call   0x64013d18
64023bdd:	mov    eax,0x64044f40
64023be2:	jmp    0x640139da
64023be7:	int3   
64023be8:	int3   
64023be9:	int3   
64023bea:	int3   
64023beb:	int3   
64023bec:	int3   
64023bed:	int3   
64023bee:	int3   
64023bef:	int3   
64023bf0:	lea    ecx,[ebp-0x85c]
64023bf6:	jmp    0x64002960
64023bfb:	lea    eax,[ebp-0x870]
64023c01:	jmp    0x64007a90
64023c06:	lea    ecx,[ebp-0x87c]
64023c0c:	jmp    0x64003650
64023c11:	mov    edx,DWORD PTR [esp+0x8]
64023c15:	lea    eax,[edx-0x87c]
64023c1b:	mov    ecx,DWORD PTR [edx-0x880]
64023c21:	xor    ecx,eax
64023c23:	call   0x64013d18
64023c28:	add    eax,0x8
64023c2b:	mov    ecx,DWORD PTR [edx-0x8]
64023c2e:	xor    ecx,eax
64023c30:	call   0x64013d18
64023c35:	mov    eax,0x64044f7c
64023c3a:	jmp    0x640139da
64023c3f:	int3   
64023c40:	lea    esi,[ebp-0x8ac]
64023c46:	jmp    0x64009620
64023c4b:	lea    ecx,[ebp-0x8c8]
64023c51:	jmp    0x64002960
64023c56:	mov    edx,DWORD PTR [esp+0x8]
64023c5a:	lea    eax,[edx+0xc]
64023c5d:	mov    ecx,DWORD PTR [edx-0x8cc]
64023c63:	xor    ecx,eax
64023c65:	call   0x64013d18
64023c6a:	mov    ecx,DWORD PTR [edx-0x8]
64023c6d:	xor    ecx,eax
64023c6f:	call   0x64013d18
64023c74:	mov    eax,0x64044fe4
64023c79:	jmp    0x640139da
64023c7e:	int3   
64023c7f:	int3   
64023c80:	lea    ecx,[ebp-0x1c]
64023c83:	jmp    0x64003650
64023c88:	lea    ecx,[ebp-0x14]
64023c8b:	jmp    0x64003650
64023c90:	lea    ecx,[ebp-0x18]
64023c93:	jmp    0x64003650
64023c98:	mov    edx,DWORD PTR [esp+0x8]
64023c9c:	lea    eax,[edx-0x1c]
64023c9f:	mov    ecx,DWORD PTR [edx-0x20]
64023ca2:	xor    ecx,eax
64023ca4:	call   0x64013d18
64023ca9:	mov    eax,0x64045020
64023cae:	jmp    0x640139da
64023cb3:	int3   
64023cb4:	int3   
64023cb5:	int3   
64023cb6:	int3   
64023cb7:	int3   
64023cb8:	int3   
64023cb9:	int3   
64023cba:	int3   
64023cbb:	int3   
64023cbc:	int3   
64023cbd:	int3   
64023cbe:	int3   
64023cbf:	int3   
64023cc0:	mov    eax,DWORD PTR [ebp-0x18]
64023cc3:	and    eax,0x1
64023cc6:	je     0x64023cd8
64023ccc:	and    DWORD PTR [ebp-0x18],0xfffffffe
64023cd0:	mov    ecx,DWORD PTR [ebp+0x4]
64023cd3:	jmp    0x64003650
64023cd8:	ret    
64023cd9:	lea    ecx,[ebp-0x14]
64023cdc:	jmp    0x64003650
64023ce1:	lea    ecx,[ebp-0x10]
64023ce4:	jmp    0x64003650
64023ce9:	lea    ecx,[ebp-0x14]
64023cec:	jmp    0x64003650
64023cf1:	mov    edx,DWORD PTR [esp+0x8]
64023cf5:	lea    eax,[edx-0x18]
64023cf8:	mov    ecx,DWORD PTR [edx-0x1c]
64023cfb:	xor    ecx,eax
64023cfd:	call   0x64013d18
64023d02:	mov    eax,0x64045064
64023d07:	jmp    0x640139da
64023d0c:	int3   
64023d0d:	int3   
64023d0e:	int3   
64023d0f:	int3   
64023d10:	push   edi
64023d11:	mov    edi,0x6405467c
64023d16:	call   0x64001810
64023d1b:	pop    edi
64023d1c:	ret    
64023d1d:	int3   
64023d1e:	int3   
64023d1f:	int3   
64023d20:	push   edi
64023d21:	mov    edi,0x6405467d
64023d26:	call   0x64001810
64023d2b:	pop    edi
64023d2c:	ret    
64023d2d:	int3   
64023d2e:	int3   
64023d2f:	int3   
64023d30:	push   0x0
64023d32:	push   0x0
64023d34:	push   0x1
64023d36:	push   0x0
64023d38:	call   DWORD PTR ds:0x6402c0f8
64023d3e:	mov    ds:0x64054680,eax
64023d43:	ret    
64023d44:	int3   
64023d45:	int3   
64023d46:	int3   
64023d47:	int3   
64023d48:	int3   
64023d49:	int3   
64023d4a:	int3   
64023d4b:	int3   
64023d4c:	int3   
64023d4d:	int3   
64023d4e:	int3   
64023d4f:	int3   
64023d50:	push   0x640434ac
64023d55:	push   0xf
64023d57:	mov    ecx,0x640434dc
64023d5c:	call   0x64003050
64023d61:	add    esp,0x8
64023d64:	mov    ds:0x64054684,eax
64023d69:	ret    
64023d6a:	int3   
64023d6b:	int3   
64023d6c:	int3   
64023d6d:	int3   
64023d6e:	int3   
64023d6f:	int3   
64023d70:	push   0x6402c310
64023d75:	push   0x10
64023d77:	push   0x6402c2fc
64023d7c:	call   0x64002e50
64023d81:	add    esp,0xc
64023d84:	mov    ds:0x64053850,eax
64023d89:	ret    
64023d8a:	int3   
64023d8b:	int3   
64023d8c:	int3   
64023d8d:	int3   
64023d8e:	int3   
64023d8f:	int3   
64023d90:	push   0x6402c354
64023d95:	push   0x10
64023d97:	push   0x6402c340
64023d9c:	call   0x64002e50
64023da1:	add    esp,0xc
64023da4:	mov    ds:0x6405384c,eax
64023da9:	ret    
64023daa:	int3   
64023dab:	int3   
64023dac:	int3   
64023dad:	int3   
64023dae:	int3   
64023daf:	int3   
64023db0:	push   0x6402c394
64023db5:	push   0x10
64023db7:	push   0x6402c380
64023dbc:	call   0x64002e50
64023dc1:	add    esp,0xc
64023dc4:	mov    ds:0x64053848,eax
64023dc9:	ret    
64023dca:	int3   
64023dcb:	int3   
64023dcc:	int3   
64023dcd:	int3   
64023dce:	int3   
64023dcf:	int3   
64023dd0:	push   ebx
64023dd1:	push   ebp
64023dd2:	push   esi
64023dd3:	push   edi
64023dd4:	push   0x6403a9e4
64023dd9:	push   0x9
64023ddb:	push   0x6403a9d8
64023de0:	call   0x64002e50
64023de5:	mov    edi,0x3
64023dea:	push   0x6403a9b4
64023def:	push   edi
64023df0:	push   0x6403a9b0
64023df5:	mov    ds:0x64046ca4,eax
64023dfa:	mov    DWORD PTR ds:0x64046ca8,edi
64023e00:	call   0x64002e50
64023e05:	mov    esi,0x4
64023e0a:	push   0x6403a970
64023e0f:	push   esi
64023e10:	push   0x6403a968
64023e15:	mov    ds:0x64046cac,eax
64023e1a:	mov    DWORD PTR ds:0x64046cb0,esi
64023e20:	call   0x64002e50
64023e25:	push   0x6403a930
64023e2a:	push   edi
64023e2b:	push   0x6403a92c
64023e30:	mov    ds:0x64046cb4,eax
64023e35:	mov    DWORD PTR ds:0x64046cb8,edi
64023e3b:	call   0x64002e50
64023e40:	mov    ebp,0x2
64023e45:	push   0x6403a8f0
64023e4a:	push   ebp
64023e4b:	push   0x6403a8ec
64023e50:	mov    ds:0x64046cbc,eax
64023e55:	mov    DWORD PTR ds:0x64046cc0,ebp
64023e5b:	call   0x64002e50
64023e60:	push   0x6403a8b8
64023e65:	push   edi
64023e66:	push   0x6403a8b4
64023e6b:	mov    ds:0x64046cc4,eax
64023e70:	mov    DWORD PTR ds:0x64046cc8,edi
64023e76:	call   0x64002e50
64023e7b:	add    esp,0x48
64023e7e:	push   0x6403a884
64023e83:	push   edi
64023e84:	push   0x6403a880
64023e89:	mov    ds:0x64046ccc,eax
64023e8e:	mov    DWORD PTR ds:0x64046cd0,edi
64023e94:	call   0x64002e50
64023e99:	push   0x6403a858
64023e9e:	push   edi
64023e9f:	push   0x6403a854
64023ea4:	mov    ds:0x64046cd4,eax
64023ea9:	mov    DWORD PTR ds:0x64046cd8,edi
64023eaf:	call   0x64002e50
64023eb4:	push   0x6403a814
64023eb9:	push   edi
64023eba:	push   0x6403a810
64023ebf:	mov    ds:0x64046cdc,eax
64023ec4:	mov    DWORD PTR ds:0x64046ce0,edi
64023eca:	call   0x64002e50
64023ecf:	push   0x6403a7d4
64023ed4:	push   edi
64023ed5:	push   0x6403a7d0
64023eda:	mov    ds:0x64046ce4,eax
64023edf:	mov    DWORD PTR ds:0x64046ce8,edi
64023ee5:	call   0x64002e50
64023eea:	push   0x6403a794
64023eef:	push   edi
64023ef0:	push   0x6403a790
64023ef5:	mov    ds:0x64046cec,eax
64023efa:	mov    DWORD PTR ds:0x64046cf0,edi
64023f00:	call   0x64002e50
64023f05:	push   0x6403a768
64023f0a:	push   edi
64023f0b:	push   0x6403a764
64023f10:	mov    ds:0x64046cf4,eax
64023f15:	mov    DWORD PTR ds:0x64046cf8,edi
64023f1b:	call   0x64002e50
64023f20:	add    esp,0x48
64023f23:	mov    ds:0x64046cfc,eax
64023f28:	mov    DWORD PTR ds:0x64046d00,edi
64023f2e:	push   0x6403a740
64023f33:	push   edi
64023f34:	push   0x6403a73c
64023f39:	call   0x64002e50
64023f3e:	push   0x6403a708
64023f43:	push   edi
64023f44:	push   0x6403a704
64023f49:	mov    ds:0x64046d04,eax
64023f4e:	mov    DWORD PTR ds:0x64046d08,edi
64023f54:	call   0x64002e50
64023f59:	push   0x6403a6cc
64023f5e:	push   edi
64023f5f:	push   0x6403a6c8
64023f64:	mov    ds:0x64046d0c,eax
64023f69:	mov    DWORD PTR ds:0x64046d10,edi
64023f6f:	call   0x64002e50
64023f74:	push   0x6403a688
64023f79:	push   edi
64023f7a:	push   0x6403a680
64023f7f:	mov    ds:0x64046d14,eax
64023f84:	mov    DWORD PTR ds:0x64046d18,edi
64023f8a:	call   0x64002e50
64023f8f:	push   0x6403a650
64023f94:	push   edi
64023f95:	push   0x6403a64c
64023f9a:	mov    ds:0x64046d1c,eax
64023f9f:	mov    DWORD PTR ds:0x64046d20,edi
64023fa5:	call   0x64002e50
64023faa:	mov    ebx,0x5
64023faf:	push   0x6403a624
64023fb4:	push   ebx
64023fb5:	push   0x6403a61c
64023fba:	mov    ds:0x64046d24,eax
64023fbf:	mov    DWORD PTR ds:0x64046d28,ebx
64023fc5:	call   0x64002e50
64023fca:	add    esp,0x48
64023fcd:	push   0x6403a5f0
64023fd2:	push   esi
64023fd3:	push   0x6403a5e8
64023fd8:	mov    ds:0x64046d2c,eax
64023fdd:	mov    DWORD PTR ds:0x64046d30,esi
64023fe3:	call   0x64002e50
64023fe8:	push   0x6403a5b4
64023fed:	push   ebx
64023fee:	push   0x6403a5ac
64023ff3:	mov    ds:0x64046d34,eax
64023ff8:	mov    DWORD PTR ds:0x64046d38,ebx
64023ffe:	call   0x64002e50
64024003:	push   0x6403a588
64024008:	push   esi
64024009:	push   0x6403a580
6402400e:	mov    ds:0x64046d3c,eax
64024013:	mov    DWORD PTR ds:0x64046d40,esi
64024019:	call   0x64002e50
6402401e:	push   0x6403a55c
64024023:	push   esi
64024024:	push   0x6403a554
64024029:	mov    ds:0x64046d44,eax
6402402e:	mov    DWORD PTR ds:0x64046d48,esi
64024034:	call   0x64002e50
64024039:	push   0x6403a51c
6402403e:	push   edi
6402403f:	push   0x6403a518
64024044:	mov    ds:0x64046d4c,eax
64024049:	mov    DWORD PTR ds:0x64046d50,edi
6402404f:	call   0x64002e50
64024054:	push   0x6403a4e0
64024059:	push   esi
6402405a:	push   0x6403a4d8
6402405f:	mov    ds:0x64046d54,eax
64024064:	mov    DWORD PTR ds:0x64046d58,esi
6402406a:	call   0x64002e50
6402406f:	add    esp,0x48
64024072:	push   0x6403a4a8
64024077:	push   ebp
64024078:	push   0x6403a4a4
6402407d:	mov    ds:0x64046d5c,eax
64024082:	mov    DWORD PTR ds:0x64046d60,ebp
64024088:	call   0x64002e50
6402408d:	mov    ds:0x64046d64,eax
64024092:	mov    DWORD PTR ds:0x64046d68,edi
64024098:	push   0x6403a46c
6402409d:	push   edi
6402409e:	push   0x6403a468
640240a3:	call   0x64002e50
640240a8:	push   0x6403a43c
640240ad:	push   ebp
640240ae:	push   0x6403a438
640240b3:	mov    ds:0x64046d6c,eax
640240b8:	mov    DWORD PTR ds:0x64046d70,ebp
640240be:	call   0x64002e50
640240c3:	push   0x6403a414
640240c8:	push   edi
640240c9:	push   0x6403a410
640240ce:	mov    ds:0x64046d74,eax
640240d3:	mov    DWORD PTR ds:0x64046d78,edi
640240d9:	call   0x64002e50
640240de:	push   0x6403a3e0
640240e3:	push   ebp
640240e4:	push   0x6403a3dc
640240e9:	mov    ds:0x64046d7c,eax
640240ee:	mov    DWORD PTR ds:0x64046d80,ebp
640240f4:	call   0x64002e50
640240f9:	push   0x6403a3b4
640240fe:	push   edi
640240ff:	push   0x6403a3b0
64024104:	mov    ds:0x64046d84,eax
64024109:	mov    DWORD PTR ds:0x64046d88,edi
6402410f:	call   0x64002e50
64024114:	add    esp,0x48
64024117:	push   0x6403a370
6402411c:	push   edi
6402411d:	push   0x6403a36c
64024122:	mov    ds:0x64046d8c,eax
64024127:	mov    DWORD PTR ds:0x64046d90,edi
6402412d:	call   0x64002e50
64024132:	push   0x6403a344
64024137:	push   ebp
64024138:	push   0x6403a340
6402413d:	mov    ds:0x64046d94,eax
64024142:	mov    DWORD PTR ds:0x64046d98,ebp
64024148:	call   0x64002e50
6402414d:	push   0x6403a304
64024152:	push   ebp
64024153:	push   0x6403a300
64024158:	mov    ds:0x64046d9c,eax
6402415d:	mov    DWORD PTR ds:0x64046da0,ebp
64024163:	call   0x64002e50
64024168:	push   0x6403a2d8
6402416d:	push   edi
6402416e:	push   0x6403a2d4
64024173:	mov    ds:0x64046da4,eax
64024178:	mov    DWORD PTR ds:0x64046da8,edi
6402417e:	call   0x64002e50
64024183:	push   0x6403a2a4
64024188:	push   ebp
64024189:	push   0x6403a2a0
6402418e:	mov    ds:0x64046dac,eax
64024193:	mov    DWORD PTR ds:0x64046db0,ebp
64024199:	call   0x64002e50
6402419e:	push   0x6403a264
640241a3:	push   edi
640241a4:	push   0x6403a260
640241a9:	mov    ds:0x64046db4,eax
640241ae:	mov    DWORD PTR ds:0x64046db8,edi
640241b4:	call   0x64002e50
640241b9:	add    esp,0x48
640241bc:	push   0x6403a23c
640241c1:	push   ebp
640241c2:	push   0x6403a238
640241c7:	mov    ds:0x64046dbc,eax
640241cc:	mov    DWORD PTR ds:0x64046dc0,ebp
640241d2:	call   0x64002e50
640241d7:	push   0x6403a20c
640241dc:	push   edi
640241dd:	push   0x6403a208
640241e2:	mov    ds:0x64046dc4,eax
640241e7:	mov    DWORD PTR ds:0x64046dc8,edi
640241ed:	call   0x64002e50
640241f2:	mov    ds:0x64046dcc,eax
640241f7:	mov    DWORD PTR ds:0x64046dd0,edi
640241fd:	push   0x6403a1e0
64024202:	push   edi
64024203:	push   0x6403a1dc
64024208:	call   0x64002e50
6402420d:	push   0x6403a1b0
64024212:	push   ebp
64024213:	push   0x6403a1ac
64024218:	mov    ds:0x64046dd4,eax
6402421d:	mov    DWORD PTR ds:0x64046dd8,ebp
64024223:	call   0x64002e50
64024228:	push   0x6403a170
6402422d:	push   esi
6402422e:	push   0x6403a168
64024233:	mov    ds:0x64046ddc,eax
64024238:	mov    DWORD PTR ds:0x64046de0,esi
6402423e:	call   0x64002e50
64024243:	push   0x6403a12c
64024248:	push   esi
64024249:	push   0x6403a124
6402424e:	mov    ds:0x64046de4,eax
64024253:	mov    DWORD PTR ds:0x64046de8,esi
64024259:	call   0x64002e50
6402425e:	add    esp,0x48
64024261:	push   0x6403a0f0
64024266:	push   edi
64024267:	push   0x6403a0ec
6402426c:	mov    ds:0x64046dec,eax
64024271:	mov    DWORD PTR ds:0x64046df0,edi
64024277:	call   0x64002e50
6402427c:	push   0x6403a0c0
64024281:	push   edi
64024282:	push   0x6403a0bc
64024287:	mov    ds:0x64046df4,eax
6402428c:	mov    DWORD PTR ds:0x64046df8,edi
64024292:	call   0x64002e50
64024297:	push   0x6403a098
6402429c:	push   edi
6402429d:	push   0x6403a094
640242a2:	mov    ds:0x64046dfc,eax
640242a7:	mov    DWORD PTR ds:0x64046e00,edi
640242ad:	call   0x64002e50
640242b2:	push   0x6403a058
640242b7:	push   esi
640242b8:	push   0x6403a050
640242bd:	mov    ds:0x64046e04,eax
640242c2:	mov    DWORD PTR ds:0x64046e08,esi
640242c8:	call   0x64002e50
640242cd:	push   0x6403a028
640242d2:	push   esi
640242d3:	push   0x6403a020
640242d8:	mov    ds:0x64046e0c,eax
640242dd:	mov    DWORD PTR ds:0x64046e10,esi
640242e3:	call   0x64002e50
640242e8:	push   0x64039ff8
640242ed:	push   edi
640242ee:	push   0x64039ff4
640242f3:	mov    ds:0x64046e14,eax
640242f8:	mov    DWORD PTR ds:0x64046e18,edi
640242fe:	call   0x64002e50
64024303:	add    esp,0x48
64024306:	push   0x64039fbc
6402430b:	push   edi
6402430c:	push   0x64039fb8
64024311:	mov    ds:0x64046e1c,eax
64024316:	mov    DWORD PTR ds:0x64046e20,edi
6402431c:	call   0x64002e50
64024321:	push   0x64039f7c
64024326:	push   edi
64024327:	push   0x64039f78
6402432c:	mov    ds:0x64046e24,eax
64024331:	mov    DWORD PTR ds:0x64046e28,edi
64024337:	call   0x64002e50
6402433c:	mov    ebp,0x8
64024341:	push   0x64039f44
64024346:	push   ebp
64024347:	push   0x64039f38
6402434c:	mov    ds:0x64046e2c,eax
64024351:	mov    DWORD PTR ds:0x64046e30,ebp
64024357:	call   0x64002e50
6402435c:	mov    ds:0x64046e34,eax
64024361:	mov    DWORD PTR ds:0x64046e38,ebx
64024367:	push   0x64039f04
6402436c:	push   ebx
6402436d:	push   0x64039efc
64024372:	call   0x64002e50
64024377:	push   0x64039ec8
6402437c:	push   esi
6402437d:	push   0x64039ec0
64024382:	mov    ds:0x64046e3c,eax
64024387:	mov    DWORD PTR ds:0x64046e40,esi
6402438d:	call   0x64002e50
64024392:	push   0x64039e9c
64024397:	push   esi
64024398:	push   0x64039e94
6402439d:	mov    ds:0x64046e44,eax
640243a2:	mov    DWORD PTR ds:0x64046e48,esi
640243a8:	call   0x64002e50
640243ad:	add    esp,0x48
640243b0:	push   0x64039e54
640243b5:	push   esi
640243b6:	push   0x64039e4c
640243bb:	mov    ds:0x64046e4c,eax
640243c0:	mov    DWORD PTR ds:0x64046e50,esi
640243c6:	call   0x64002e50
640243cb:	push   0x64039e28
640243d0:	push   esi
640243d1:	push   0x64039e20
640243d6:	mov    ds:0x64046e54,eax
640243db:	mov    DWORD PTR ds:0x64046e58,esi
640243e1:	call   0x64002e50
640243e6:	push   0x64039dfc
640243eb:	push   esi
640243ec:	push   0x64039df4
640243f1:	mov    ds:0x64046e5c,eax
640243f6:	mov    DWORD PTR ds:0x64046e60,esi
640243fc:	call   0x64002e50
64024401:	push   0x64039dd0
64024406:	push   esi
64024407:	push   0x64039dc8
6402440c:	mov    ds:0x64046e64,eax
64024411:	mov    DWORD PTR ds:0x64046e68,esi
64024417:	call   0x64002e50
6402441c:	push   0x64039d9c
64024421:	push   esi
64024422:	push   0x64039d94
64024427:	mov    ds:0x64046e6c,eax
6402442c:	mov    DWORD PTR ds:0x64046e70,esi
64024432:	call   0x64002e50
64024437:	push   0x64039d5c
6402443c:	push   esi
6402443d:	push   0x64039d54
64024442:	mov    ds:0x64046e74,eax
64024447:	mov    DWORD PTR ds:0x64046e78,esi
6402444d:	call   0x64002e50
64024452:	add    esp,0x48
64024455:	push   0x64039d24
6402445a:	push   edi
6402445b:	push   0x64039d20
64024460:	mov    ds:0x64046e7c,eax
64024465:	mov    DWORD PTR ds:0x64046e80,edi
6402446b:	call   0x64002e50
64024470:	push   0x64039cfc
64024475:	push   edi
64024476:	push   0x64039cf8
6402447b:	mov    ds:0x64046e84,eax
64024480:	mov    DWORD PTR ds:0x64046e88,edi
64024486:	call   0x64002e50
6402448b:	push   0x64039cd4
64024490:	push   edi
64024491:	push   0x64039cd0
64024496:	mov    ds:0x64046e8c,eax
6402449b:	mov    DWORD PTR ds:0x64046e90,edi
640244a1:	call   0x64002e50
640244a6:	push   0x64039c98
640244ab:	push   ebx
640244ac:	push   0x64039c90
640244b1:	mov    ds:0x64046e94,eax
640244b6:	mov    DWORD PTR ds:0x64046e98,ebx
640244bc:	call   0x64002e50
640244c1:	push   0x64039c64
640244c6:	mov    ds:0x64046e9c,eax
640244cb:	mov    DWORD PTR ds:0x64046ea0,ebx
640244d1:	push   ebx
640244d2:	push   0x64039c5c
640244d7:	call   0x64002e50
640244dc:	push   0x64039c24
640244e1:	push   esi
640244e2:	push   0x64039c1c
640244e7:	mov    ds:0x64046ea4,eax
640244ec:	mov    DWORD PTR ds:0x64046ea8,esi
640244f2:	call   0x64002e50
640244f7:	add    esp,0x48
640244fa:	push   0x64039bf4
640244ff:	push   ebx
64024500:	push   0x64039bec
64024505:	mov    ds:0x64046eac,eax
6402450a:	mov    DWORD PTR ds:0x64046eb0,ebx
64024510:	call   0x64002e50
64024515:	push   0x64039bbc
6402451a:	push   edi
6402451b:	push   0x64039bb8
64024520:	mov    ds:0x64046eb4,eax
64024525:	mov    DWORD PTR ds:0x64046eb8,edi
6402452b:	call   0x64002e50
64024530:	push   0x64039b94
64024535:	push   esi
64024536:	push   0x64039b8c
6402453b:	mov    ds:0x64046ebc,eax
64024540:	mov    DWORD PTR ds:0x64046ec0,esi
64024546:	call   0x64002e50
6402454b:	push   0x64039b68
64024550:	push   esi
64024551:	push   0x64039b60
64024556:	mov    ds:0x64046ec4,eax
6402455b:	mov    DWORD PTR ds:0x64046ec8,esi
64024561:	call   0x64002e50
64024566:	push   0x64039b24
6402456b:	push   edi
6402456c:	push   0x64039b20
64024571:	mov    ds:0x64046ecc,eax
64024576:	mov    DWORD PTR ds:0x64046ed0,edi
6402457c:	call   0x64002e50
64024581:	push   0x64039ae4
64024586:	push   edi
64024587:	push   0x64039ae0
6402458c:	mov    ds:0x64046ed4,eax
64024591:	mov    DWORD PTR ds:0x64046ed8,edi
64024597:	call   0x64002e50
6402459c:	add    esp,0x48
6402459f:	push   0x64039ab4
640245a4:	push   esi
640245a5:	push   0x64039aac
640245aa:	mov    ds:0x64046edc,eax
640245af:	mov    DWORD PTR ds:0x64046ee0,esi
640245b5:	call   0x64002e50
640245ba:	push   0x64039a78
640245bf:	push   esi
640245c0:	push   0x64039a70
640245c5:	mov    ds:0x64046ee4,eax
640245ca:	mov    DWORD PTR ds:0x64046ee8,esi
640245d0:	call   0x64002e50
640245d5:	mov    esi,0x6
640245da:	push   0x64039a40
640245df:	push   esi
640245e0:	push   0x64039a38
640245e5:	mov    ds:0x64046eec,eax
640245ea:	mov    DWORD PTR ds:0x64046ef0,esi
640245f0:	call   0x64002e50
640245f5:	push   0x640399f8
640245fa:	push   ebx
640245fb:	push   0x640399f0
64024600:	mov    ds:0x64046ef4,eax
64024605:	mov    DWORD PTR ds:0x64046ef8,ebx
6402460b:	call   0x64002e50
64024610:	push   0x640399bc
64024615:	push   0x4
64024617:	push   0x640399b4
6402461c:	mov    ds:0x64046efc,eax
64024621:	mov    DWORD PTR ds:0x64046f00,0x4
6402462b:	call   0x64002e50
64024630:	push   0x64039978
64024635:	mov    ds:0x64046f04,eax
6402463a:	mov    DWORD PTR ds:0x64046f08,0x4
64024644:	push   0x4
64024646:	push   0x64039970
6402464b:	call   0x64002e50
64024650:	add    esp,0x48
64024653:	push   0x6403994c
64024658:	push   ebx
64024659:	push   0x64039944
6402465e:	mov    ds:0x64046f0c,eax
64024663:	mov    DWORD PTR ds:0x64046f10,ebx
64024669:	call   0x64002e50
6402466e:	push   0x64039914
64024673:	push   ebx
64024674:	push   0x6403990c
64024679:	mov    ds:0x64046f14,eax
6402467e:	mov    DWORD PTR ds:0x64046f18,ebx
64024684:	call   0x64002e50
64024689:	push   0x640398e4
6402468e:	push   0x2
64024690:	push   0x640398e0
64024695:	mov    ds:0x64046f1c,eax
6402469a:	mov    DWORD PTR ds:0x64046f20,0x2
640246a4:	call   0x64002e50
640246a9:	push   0x640398b8
640246ae:	push   edi
640246af:	push   0x640398b4
640246b4:	mov    ds:0x64046f24,eax
640246b9:	mov    DWORD PTR ds:0x64046f28,edi
640246bf:	call   0x64002e50
640246c4:	push   0x64039878
640246c9:	push   0x4
640246cb:	push   0x64039870
640246d0:	mov    ds:0x64046f2c,eax
640246d5:	mov    DWORD PTR ds:0x64046f30,0x4
640246df:	call   0x64002e50
640246e4:	push   0x64039844
640246e9:	push   edi
640246ea:	push   0x64039840
640246ef:	mov    ds:0x64046f34,eax
640246f4:	mov    DWORD PTR ds:0x64046f38,edi
640246fa:	call   0x64002e50
640246ff:	add    esp,0x48
64024702:	mov    edi,0x7
64024707:	push   0x6403981c
6402470c:	push   edi
6402470d:	push   0x64039814
64024712:	mov    ds:0x64046f3c,eax
64024717:	mov    DWORD PTR ds:0x64046f40,edi
6402471d:	call   0x64002e50
64024722:	push   0x640397dc
64024727:	push   0x4
64024729:	push   0x640397d4
6402472e:	mov    ds:0x64046f44,eax
64024733:	mov    DWORD PTR ds:0x64046f48,0x4
6402473d:	call   0x64002e50
64024742:	push   0x64039798
64024747:	push   0x3
64024749:	push   0x64039794
6402474e:	mov    ds:0x64046f4c,eax
64024753:	mov    DWORD PTR ds:0x64046f50,0x3
6402475d:	call   0x64002e50
64024762:	push   0x64039758
64024767:	push   0x3
64024769:	push   0x64039754
6402476e:	mov    ds:0x64046f54,eax
64024773:	mov    DWORD PTR ds:0x64046f58,0x3
6402477d:	call   0x64002e50
64024782:	push   0x64039714
64024787:	push   0x3
64024789:	push   0x64039710
6402478e:	mov    ds:0x64046f5c,eax
64024793:	mov    DWORD PTR ds:0x64046f60,0x3
6402479d:	call   0x64002e50
640247a2:	push   0x640396e0
640247a7:	push   0x3
640247a9:	push   0x640396dc
640247ae:	mov    ds:0x64046f64,eax
640247b3:	mov    DWORD PTR ds:0x64046f68,0x3
640247bd:	call   0x64002e50
640247c2:	add    esp,0x48
640247c5:	mov    ds:0x64046f6c,eax
640247ca:	mov    DWORD PTR ds:0x64046f70,0x3
640247d4:	push   0x640396ac
640247d9:	push   0x3
640247db:	push   0x640396a8
640247e0:	call   0x64002e50
640247e5:	push   0x64039678
640247ea:	push   0x3
640247ec:	push   0x64039674
640247f1:	mov    ds:0x64046f74,eax
640247f6:	mov    DWORD PTR ds:0x64046f78,0x3
64024800:	call   0x64002e50
64024805:	push   0x64039640
6402480a:	push   0x3
6402480c:	push   0x6403963c
64024811:	mov    ds:0x64046f7c,eax
64024816:	mov    DWORD PTR ds:0x64046f80,0x3
64024820:	call   0x64002e50
64024825:	push   0x64039604
6402482a:	push   0x3
6402482c:	push   0x64039600
64024831:	mov    ds:0x64046f84,eax
64024836:	mov    DWORD PTR ds:0x64046f88,0x3
64024840:	call   0x64002e50
64024845:	push   0x640395c0
6402484a:	push   0x3
6402484c:	push   0x640395bc
64024851:	mov    ds:0x64046f8c,eax
64024856:	mov    DWORD PTR ds:0x64046f90,0x3
64024860:	call   0x64002e50
64024865:	push   0x64039580
6402486a:	push   0x3
6402486c:	push   0x6403957c
64024871:	mov    ds:0x64046f94,eax
64024876:	mov    DWORD PTR ds:0x64046f98,0x3
64024880:	call   0x64002e50
64024885:	add    esp,0x48
64024888:	push   0x64039550
6402488d:	push   edi
6402488e:	push   0x64039548
64024893:	mov    ds:0x64046f9c,eax
64024898:	mov    DWORD PTR ds:0x64046fa0,edi
6402489e:	call   0x64002e50
640248a3:	push   0x64039518
640248a8:	push   0x4
640248aa:	push   0x64039510
640248af:	mov    ds:0x64046fa4,eax
640248b4:	mov    DWORD PTR ds:0x64046fa8,0x4
640248be:	call   0x64002e50
640248c3:	push   0x640394ec
640248c8:	push   esi
640248c9:	push   0x640394e4
640248ce:	mov    ds:0x64046fac,eax
640248d3:	mov    DWORD PTR ds:0x64046fb0,esi
640248d9:	call   0x64002e50
640248de:	push   0x640394c0
640248e3:	push   0x4
640248e5:	push   0x640394b8
640248ea:	mov    ds:0x64046fb4,eax
640248ef:	mov    DWORD PTR ds:0x64046fb8,0x4
640248f9:	call   0x64002e50
640248fe:	push   0x64039494
64024903:	push   esi
64024904:	push   0x6403948c
64024909:	mov    ds:0x64046fbc,eax
6402490e:	mov    DWORD PTR ds:0x64046fc0,esi
64024914:	call   0x64002e50
64024919:	push   0x64039460
6402491e:	push   0x3
64024920:	push   0x6403945c
64024925:	mov    ds:0x64046fc4,eax
6402492a:	mov    DWORD PTR ds:0x64046fc8,0x3
64024934:	call   0x64002e50
64024939:	add    esp,0x48
6402493c:	push   0x64039424
64024941:	push   ebx
64024942:	push   0x6403941c
64024947:	mov    ds:0x64046fcc,eax
6402494c:	mov    DWORD PTR ds:0x64046fd0,ebx
64024952:	call   0x64002e50
64024957:	push   0x640393f4
6402495c:	mov    ds:0x64046fd4,eax
64024961:	mov    DWORD PTR ds:0x64046fd8,0x3
6402496b:	push   0x3
6402496d:	push   0x640393f0
64024972:	call   0x64002e50
64024977:	push   0x640393c8
6402497c:	push   ebx
6402497d:	push   0x640393c0
64024982:	mov    ds:0x64046fdc,eax
64024987:	mov    DWORD PTR ds:0x64046fe0,ebx
6402498d:	call   0x64002e50
64024992:	push   0x64039384
64024997:	push   ebx
64024998:	push   0x6403937c
6402499d:	mov    ds:0x64046fe4,eax
640249a2:	mov    DWORD PTR ds:0x64046fe8,ebx
640249a8:	call   0x64002e50
640249ad:	push   0x64039340
640249b2:	push   ebx
640249b3:	push   0x64039338
640249b8:	mov    ds:0x64046fec,eax
640249bd:	mov    DWORD PTR ds:0x64046ff0,ebx
640249c3:	call   0x64002e50
640249c8:	push   0x640392fc
640249cd:	push   ebx
640249ce:	push   0x640392f4
640249d3:	mov    ds:0x64046ff4,eax
640249d8:	mov    DWORD PTR ds:0x64046ff8,ebx
640249de:	call   0x64002e50
640249e3:	add    esp,0x48
640249e6:	push   0x640392b4
640249eb:	push   ebp
640249ec:	push   0x640392a8
640249f1:	mov    ds:0x64046ffc,eax
640249f6:	mov    DWORD PTR ds:0x64047000,ebp
640249fc:	call   0x64002e50
64024a01:	push   0x64039274
64024a06:	push   edi
64024a07:	push   0x6403926c
64024a0c:	mov    ds:0x64047004,eax
64024a11:	mov    DWORD PTR ds:0x64047008,edi
64024a17:	call   0x64002e50
64024a1c:	push   0x6403922c
64024a21:	push   esi
64024a22:	push   0x64039224
64024a27:	mov    ds:0x6404700c,eax
64024a2c:	mov    DWORD PTR ds:0x64047010,esi
64024a32:	call   0x64002e50
64024a37:	push   0x640391fc
64024a3c:	push   ebx
64024a3d:	push   0x640391f4
64024a42:	mov    ds:0x64047014,eax
64024a47:	mov    DWORD PTR ds:0x64047018,ebx
64024a4d:	call   0x64002e50
64024a52:	push   0x640391c4
64024a57:	push   esi
64024a58:	push   0x640391bc
64024a5d:	mov    ds:0x6404701c,eax
64024a62:	mov    DWORD PTR ds:0x64047020,esi
64024a68:	call   0x64002e50
64024a6d:	push   0x64039198
64024a72:	push   ebx
64024a73:	push   0x64039190
64024a78:	mov    ds:0x64047024,eax
64024a7d:	mov    DWORD PTR ds:0x64047028,ebx
64024a83:	call   0x64002e50
64024a88:	add    esp,0x48
64024a8b:	push   0x64039168
64024a90:	push   esi
64024a91:	push   0x64039160
64024a96:	mov    ds:0x6404702c,eax
64024a9b:	mov    DWORD PTR ds:0x64047030,esi
64024aa1:	call   0x64002e50
64024aa6:	push   0x64039128
64024aab:	push   ebx
64024aac:	push   0x64039120
64024ab1:	mov    ds:0x64047034,eax
64024ab6:	mov    DWORD PTR ds:0x64047038,ebx
64024abc:	call   0x64002e50
64024ac1:	push   0x640390f4
64024ac6:	push   esi
64024ac7:	mov    ds:0x6404703c,eax
64024acc:	mov    DWORD PTR ds:0x64047040,esi
64024ad2:	push   0x640390ec
64024ad7:	call   0x64002e50
64024adc:	push   0x640390b8
64024ae1:	push   esi
64024ae2:	push   0x640390b0
64024ae7:	mov    ds:0x64047044,eax
64024aec:	mov    DWORD PTR ds:0x64047048,esi
64024af2:	call   0x64002e50
64024af7:	push   0x6403908c
64024afc:	push   ebx
64024afd:	push   0x64039084
64024b02:	mov    ds:0x6404704c,eax
64024b07:	mov    DWORD PTR ds:0x64047050,ebx
64024b0d:	call   0x64002e50
64024b12:	push   0x64039050
64024b17:	push   ebx
64024b18:	push   0x64039048
64024b1d:	mov    ds:0x64047054,eax
64024b22:	mov    DWORD PTR ds:0x64047058,ebx
64024b28:	call   0x64002e50
64024b2d:	add    esp,0x48
64024b30:	push   0x64039008
64024b35:	push   esi
64024b36:	push   0x64039000
64024b3b:	mov    ds:0x6404705c,eax
64024b40:	mov    DWORD PTR ds:0x64047060,esi
64024b46:	call   0x64002e50
64024b4b:	push   0x64038fdc
64024b50:	push   ebx
64024b51:	push   0x64038fd4
64024b56:	mov    ds:0x64047064,eax
64024b5b:	mov    DWORD PTR ds:0x64047068,ebx
64024b61:	call   0x64002e50
64024b66:	push   0x64038fb0
64024b6b:	push   esi
64024b6c:	push   0x64038fa8
64024b71:	mov    ds:0x6404706c,eax
64024b76:	mov    DWORD PTR ds:0x64047070,esi
64024b7c:	call   0x64002e50
64024b81:	push   0x64038f7c
64024b86:	push   ebx
64024b87:	push   0x64038f74
64024b8c:	mov    ds:0x64047074,eax
64024b91:	mov    DWORD PTR ds:0x64047078,ebx
64024b97:	call   0x64002e50
64024b9c:	push   0x64038f4c
64024ba1:	push   esi
64024ba2:	push   0x64038f44
64024ba7:	mov    ds:0x6404707c,eax
64024bac:	mov    DWORD PTR ds:0x64047080,esi
64024bb2:	call   0x64002e50
64024bb7:	push   0x64038f04
64024bbc:	push   esi
64024bbd:	push   0x64038efc
64024bc2:	mov    ds:0x64047084,eax
64024bc7:	mov    DWORD PTR ds:0x64047088,esi
64024bcd:	call   0x64002e50
64024bd2:	add    esp,0x48
64024bd5:	push   0x64038ec0
64024bda:	push   ebx
64024bdb:	push   0x64038eb8
64024be0:	mov    ds:0x6404708c,eax
64024be5:	mov    DWORD PTR ds:0x64047090,ebx
64024beb:	call   0x64002e50
64024bf0:	push   0x64038e80
64024bf5:	push   0x4
64024bf7:	push   0x64038e78
64024bfc:	mov    ds:0x64047094,eax
64024c01:	mov    DWORD PTR ds:0x64047098,0x4
64024c0b:	call   0x64002e50
64024c10:	push   0x64038e38
64024c15:	push   ebx
64024c16:	push   0x64038e30
64024c1b:	mov    ds:0x6404709c,eax
64024c20:	mov    DWORD PTR ds:0x640470a0,ebx
64024c26:	call   0x64002e50
64024c2b:	push   0x64038df4
64024c30:	push   0x4
64024c32:	push   0x64038dec
64024c37:	mov    ds:0x640470a4,eax
64024c3c:	mov    DWORD PTR ds:0x640470a8,0x4
64024c46:	call   0x64002e50
64024c4b:	push   0x64038dc0
64024c50:	push   ebx
64024c51:	push   0x64038db8
64024c56:	mov    ds:0x640470ac,eax
64024c5b:	mov    DWORD PTR ds:0x640470b0,ebx
64024c61:	call   0x64002e50
64024c66:	push   0x64038d8c
64024c6b:	push   0x4
64024c6d:	push   0x64038d84
64024c72:	mov    ds:0x640470b4,eax
64024c77:	mov    DWORD PTR ds:0x640470b8,0x4
64024c81:	call   0x64002e50
64024c86:	add    esp,0x48
64024c89:	push   0x64038d5c
64024c8e:	push   ebx
64024c8f:	push   0x64038d54
64024c94:	mov    ds:0x640470bc,eax
64024c99:	mov    DWORD PTR ds:0x640470c0,ebx
64024c9f:	call   0x64002e50
64024ca4:	push   0x64038d28
64024ca9:	push   ebx
64024caa:	push   0x64038d20
64024caf:	mov    ds:0x640470c4,eax
64024cb4:	mov    DWORD PTR ds:0x640470c8,ebx
64024cba:	call   0x64002e50
64024cbf:	push   0x64038ce8
64024cc4:	push   0x4
64024cc6:	push   0x64038ce0
64024ccb:	mov    ds:0x640470cc,eax
64024cd0:	mov    DWORD PTR ds:0x640470d0,0x4
64024cda:	call   0x64002e50
64024cdf:	push   0x64038ca4
64024ce4:	push   0x4
64024ce6:	push   0x64038c9c
64024ceb:	mov    ds:0x640470d4,eax
64024cf0:	mov    DWORD PTR ds:0x640470d8,0x4
64024cfa:	call   0x64002e50
64024cff:	push   0x64038c74
64024d04:	push   ebx
64024d05:	push   0x64038c6c
64024d0a:	mov    ds:0x640470dc,eax
64024d0f:	mov    DWORD PTR ds:0x640470e0,ebx
64024d15:	call   0x64002e50
64024d1a:	push   0x64038c30
64024d1f:	push   0x4
64024d21:	push   0x64038c28
64024d26:	mov    ds:0x640470e4,eax
64024d2b:	mov    DWORD PTR ds:0x640470e8,0x4
64024d35:	call   0x64002e50
64024d3a:	add    esp,0x48
64024d3d:	push   0x64038bf8
64024d42:	push   ebx
64024d43:	push   0x64038bf0
64024d48:	mov    ds:0x640470ec,eax
64024d4d:	mov    DWORD PTR ds:0x640470f0,ebx
64024d53:	call   0x64002e50
64024d58:	push   0x64038bc8
64024d5d:	push   0x4
64024d5f:	push   0x64038bc0
64024d64:	mov    ds:0x640470f4,eax
64024d69:	mov    DWORD PTR ds:0x640470f8,0x4
64024d73:	call   0x64002e50
64024d78:	push   0x64038b90
64024d7d:	push   ebx
64024d7e:	push   0x64038b88
64024d83:	mov    ds:0x640470fc,eax
64024d88:	mov    DWORD PTR ds:0x64047100,ebx
64024d8e:	call   0x64002e50
64024d93:	push   0x64038b5c
64024d98:	push   ebx
64024d99:	push   0x64038b54
64024d9e:	mov    ds:0x64047104,eax
64024da3:	mov    DWORD PTR ds:0x64047108,ebx
64024da9:	call   0x64002e50
64024dae:	push   0x64038b1c
64024db3:	push   0x4
64024db5:	push   0x64038b14
64024dba:	mov    ds:0x6404710c,eax
64024dbf:	mov    DWORD PTR ds:0x64047110,0x4
64024dc9:	call   0x64002e50
64024dce:	mov    ds:0x64047114,eax
64024dd3:	push   0x64038adc
64024dd8:	push   ebx
64024dd9:	push   0x64038ad4
64024dde:	mov    DWORD PTR ds:0x64047118,ebx
64024de4:	call   0x64002e50
64024de9:	add    esp,0x48
64024dec:	push   0x64038a94
64024df1:	push   0x2
64024df3:	push   0x64038a90
64024df8:	mov    ds:0x6404711c,eax
64024dfd:	mov    DWORD PTR ds:0x64047120,0x2
64024e07:	call   0x64002e50
64024e0c:	push   0x64038a50
64024e11:	push   0x4
64024e13:	push   0x64038a48
64024e18:	mov    ds:0x64047124,eax
64024e1d:	mov    DWORD PTR ds:0x64047128,0x4
64024e27:	call   0x64002e50
64024e2c:	push   0x64038a20
64024e31:	push   0x3
64024e33:	push   0x64038a1c
64024e38:	mov    ds:0x6404712c,eax
64024e3d:	mov    DWORD PTR ds:0x64047130,0x3
64024e47:	call   0x64002e50
64024e4c:	push   0x640389dc
64024e51:	push   0x3
64024e53:	push   0x640389d8
64024e58:	mov    ds:0x64047134,eax
64024e5d:	mov    DWORD PTR ds:0x64047138,0x3
64024e67:	call   0x64002e50
64024e6c:	push   0x640389b0
64024e71:	push   0x4
64024e73:	push   0x640389a8
64024e78:	mov    ds:0x6404713c,eax
64024e7d:	mov    DWORD PTR ds:0x64047140,0x4
64024e87:	call   0x64002e50
64024e8c:	push   0x64038968
64024e91:	push   edi
64024e92:	push   0x64038960
64024e97:	mov    ds:0x64047144,eax
64024e9c:	mov    DWORD PTR ds:0x64047148,edi
64024ea2:	call   0x64002e50
64024ea7:	add    esp,0x48
64024eaa:	push   0x64038920
64024eaf:	push   0x3
64024eb1:	push   0x6403891c
64024eb6:	mov    ds:0x6404714c,eax
64024ebb:	mov    DWORD PTR ds:0x64047150,0x3
64024ec5:	call   0x64002e50
64024eca:	push   0x640388f4
64024ecf:	push   0x3
64024ed1:	push   0x640388f0
64024ed6:	mov    ds:0x64047154,eax
64024edb:	mov    DWORD PTR ds:0x64047158,0x3
64024ee5:	call   0x64002e50
64024eea:	push   0x640388b0
64024eef:	push   0x3
64024ef1:	push   0x640388a8
64024ef6:	mov    ds:0x6404715c,eax
64024efb:	mov    DWORD PTR ds:0x64047160,0x3
64024f05:	call   0x64002e50
64024f0a:	push   0x64038870
64024f0f:	push   0x3
64024f11:	push   0x6403886c
64024f16:	mov    ds:0x64047164,eax
64024f1b:	mov    DWORD PTR ds:0x64047168,0x3
64024f25:	call   0x64002e50
64024f2a:	push   0x64038838
64024f2f:	push   ebx
64024f30:	push   0x64038830
64024f35:	mov    ds:0x6404716c,eax
64024f3a:	mov    DWORD PTR ds:0x64047170,ebx
64024f40:	call   0x64002e50
64024f45:	push   0x640387f4
64024f4a:	push   0x3
64024f4c:	push   0x640387f0
64024f51:	mov    ds:0x64047174,eax
64024f56:	mov    DWORD PTR ds:0x64047178,0x3
64024f60:	call   0x64002e50
64024f65:	add    esp,0x48
64024f68:	mov    ds:0x6404717c,eax
64024f6d:	push   0x640387b8
64024f72:	push   0x3
64024f74:	push   0x640387b4
64024f79:	mov    DWORD PTR ds:0x64047180,0x3
64024f83:	call   0x64002e50
64024f88:	push   0x64038784
64024f8d:	push   ebx
64024f8e:	push   0x6403877c
64024f93:	mov    ds:0x64047184,eax
64024f98:	mov    DWORD PTR ds:0x64047188,ebx
64024f9e:	call   0x64002e50
64024fa3:	push   0x6403874c
64024fa8:	push   0x4
64024faa:	push   0x64038744
64024faf:	mov    ds:0x6404718c,eax
64024fb4:	mov    DWORD PTR ds:0x64047190,0x4
64024fbe:	call   0x64002e50
64024fc3:	push   0x64038704
64024fc8:	push   esi
64024fc9:	push   0x640386fc
64024fce:	mov    ds:0x64047194,eax
64024fd3:	mov    DWORD PTR ds:0x64047198,esi
64024fd9:	call   0x64002e50
64024fde:	push   0x640386c0
64024fe3:	push   ebx
64024fe4:	push   0x640386b8
64024fe9:	mov    ds:0x6404719c,eax
64024fee:	mov    DWORD PTR ds:0x640471a0,ebx
64024ff4:	call   0x64002e50
64024ff9:	push   0x64038678
64024ffe:	push   0x4
64025000:	push   0x64038670
64025005:	mov    ds:0x640471a4,eax
6402500a:	mov    DWORD PTR ds:0x640471a8,0x4
64025014:	call   0x64002e50
64025019:	add    esp,0x48
6402501c:	push   0x64038638
64025021:	push   0x3
64025023:	push   0x64038634
64025028:	mov    ds:0x640471ac,eax
6402502d:	mov    DWORD PTR ds:0x640471b0,0x3
64025037:	call   0x64002e50
6402503c:	push   0x640385f4
64025041:	push   0x4
64025043:	push   0x640385ec
64025048:	mov    ds:0x640471b4,eax
6402504d:	mov    DWORD PTR ds:0x640471b8,0x4
64025057:	call   0x64002e50
6402505c:	push   0x640385b8
64025061:	push   0x3
64025063:	push   0x640385b4
64025068:	mov    ds:0x640471bc,eax
6402506d:	mov    DWORD PTR ds:0x640471c0,0x3
64025077:	call   0x64002e50
6402507c:	push   0x64038580
64025081:	push   0x4
64025083:	push   0x64038578
64025088:	mov    ds:0x640471c4,eax
6402508d:	mov    DWORD PTR ds:0x640471c8,0x4
64025097:	call   0x64002e50
6402509c:	push   0x64038540
640250a1:	push   0x4
640250a3:	push   0x64038538
640250a8:	mov    ds:0x640471cc,eax
640250ad:	mov    DWORD PTR ds:0x640471d0,0x4
640250b7:	call   0x64002e50
640250bc:	push   0x64038500
640250c1:	push   0x4
640250c3:	push   0x640384f8
640250c8:	mov    ds:0x640471d4,eax
640250cd:	mov    DWORD PTR ds:0x640471d8,0x4
640250d7:	call   0x64002e50
640250dc:	add    esp,0x48
640250df:	push   0x640384d4
640250e4:	push   0x4
640250e6:	push   0x640384cc
640250eb:	mov    ds:0x640471dc,eax
640250f0:	mov    DWORD PTR ds:0x640471e0,0x4
640250fa:	call   0x64002e50
640250ff:	mov    ds:0x640471e4,eax
64025104:	mov    DWORD PTR ds:0x640471e8,0x4
6402510e:	push   0x64038498
64025113:	push   0x4
64025115:	push   0x64038490
6402511a:	call   0x64002e50
6402511f:	push   0x6403845c
64025124:	push   0x4
64025126:	push   0x64038454
6402512b:	mov    ds:0x640471ec,eax
64025130:	mov    DWORD PTR ds:0x640471f0,0x4
6402513a:	call   0x64002e50
6402513f:	push   0x64038418
64025144:	push   0x4
64025146:	push   0x64038410
6402514b:	mov    ds:0x640471f4,eax
64025150:	mov    DWORD PTR ds:0x640471f8,0x4
6402515a:	call   0x64002e50
6402515f:	push   0x640383d4
64025164:	push   0x4
64025166:	push   0x640383cc
6402516b:	mov    ds:0x640471fc,eax
64025170:	mov    DWORD PTR ds:0x64047200,0x4
6402517a:	call   0x64002e50
6402517f:	push   0x6403838c
64025184:	push   esi
64025185:	push   0x64038384
6402518a:	mov    ds:0x64047204,eax
6402518f:	mov    DWORD PTR ds:0x64047208,esi
64025195:	call   0x64002e50
6402519a:	add    esp,0x48
6402519d:	push   0x64038350
640251a2:	push   esi
640251a3:	push   0x64038348
640251a8:	mov    ds:0x6404720c,eax
640251ad:	mov    DWORD PTR ds:0x64047210,esi
640251b3:	call   0x64002e50
640251b8:	push   0x64038308
640251bd:	push   ebp
640251be:	push   0x640382f8
640251c3:	mov    ds:0x64047214,eax
640251c8:	mov    DWORD PTR ds:0x64047218,ebp
640251ce:	call   0x64002e50
640251d3:	push   0x640382d4
640251d8:	push   ebp
640251d9:	push   0x640382c8
640251de:	mov    ds:0x6404721c,eax
640251e3:	mov    DWORD PTR ds:0x64047220,ebp
640251e9:	call   0x64002e50
640251ee:	push   0x64038294
640251f3:	push   esi
640251f4:	push   0x6403828c
640251f9:	mov    ds:0x64047224,eax
640251fe:	mov    DWORD PTR ds:0x64047228,esi
64025204:	call   0x64002e50
64025209:	push   0x64038254
6402520e:	push   edi
6402520f:	push   0x6403824c
64025214:	mov    ds:0x6404722c,eax
64025219:	mov    DWORD PTR ds:0x64047230,edi
6402521f:	call   0x64002e50
64025224:	push   0x64038218
64025229:	push   ebx
6402522a:	push   0x64038210
6402522f:	mov    ds:0x64047234,eax
64025234:	mov    DWORD PTR ds:0x64047238,ebx
6402523a:	call   0x64002e50
6402523f:	add    esp,0x48
64025242:	push   0x640381e0
64025247:	push   esi
64025248:	push   0x640381d8
6402524d:	mov    ds:0x6404723c,eax
64025252:	mov    DWORD PTR ds:0x64047240,esi
64025258:	call   0x64002e50
6402525d:	push   0x640381a8
64025262:	push   esi
64025263:	push   0x640381a0
64025268:	mov    ds:0x64047244,eax
6402526d:	mov    DWORD PTR ds:0x64047248,esi
64025273:	call   0x64002e50
64025278:	mov    ds:0x6404724c,eax
6402527d:	mov    DWORD PTR ds:0x64047250,ebx
64025283:	push   0x6403816c
64025288:	push   ebx
64025289:	push   0x64038164
6402528e:	call   0x64002e50
64025293:	push   0x64038124
64025298:	push   edi
64025299:	push   0x6403811c
6402529e:	mov    ds:0x64047254,eax
640252a3:	mov    DWORD PTR ds:0x64047258,edi
640252a9:	call   0x64002e50
640252ae:	push   0x640380ec
640252b3:	push   esi
640252b4:	push   0x640380e4
640252b9:	mov    ds:0x6404725c,eax
640252be:	mov    DWORD PTR ds:0x64047260,esi
640252c4:	call   0x64002e50
640252c9:	push   0x640380c0
640252ce:	push   esi
640252cf:	push   0x640380b8
640252d4:	mov    ds:0x64047264,eax
640252d9:	mov    DWORD PTR ds:0x64047268,esi
640252df:	call   0x64002e50
640252e4:	add    esp,0x48
640252e7:	push   0x6403807c
640252ec:	push   0x4
640252ee:	push   0x64038074
640252f3:	mov    ds:0x6404726c,eax
640252f8:	mov    DWORD PTR ds:0x64047270,0x4
64025302:	call   0x64002e50
64025307:	push   0x64038044
6402530c:	push   0x4
6402530e:	push   0x6403803c
64025313:	mov    ds:0x64047274,eax
64025318:	mov    DWORD PTR ds:0x64047278,0x4
64025322:	call   0x64002e50
64025327:	push   0x64038018
6402532c:	push   esi
6402532d:	push   0x64038010
64025332:	mov    ds:0x6404727c,eax
64025337:	mov    DWORD PTR ds:0x64047280,esi
6402533d:	call   0x64002e50
64025342:	push   0x64037fdc
64025347:	push   edi
64025348:	push   0x64037fd4
6402534d:	mov    ds:0x64047284,eax
64025352:	mov    DWORD PTR ds:0x64047288,edi
64025358:	call   0x64002e50
6402535d:	push   0x64037f9c
64025362:	push   esi
64025363:	push   0x64037f94
64025368:	mov    ds:0x6404728c,eax
6402536d:	mov    DWORD PTR ds:0x64047290,esi
64025373:	call   0x64002e50
64025378:	push   0x64037f5c
6402537d:	push   esi
6402537e:	push   0x64037f54
64025383:	mov    ds:0x64047294,eax
64025388:	mov    DWORD PTR ds:0x64047298,esi
6402538e:	call   0x64002e50
64025393:	add    esp,0x48
64025396:	push   0x64037f24
6402539b:	push   ebp
6402539c:	push   0x64037f18
640253a1:	mov    ds:0x6404729c,eax
640253a6:	mov    DWORD PTR ds:0x640472a0,ebp
640253ac:	call   0x64002e50
640253b1:	push   0x64037edc
640253b6:	push   0x9
640253b8:	push   0x64037ed0
640253bd:	mov    ds:0x640472a4,eax
640253c2:	mov    DWORD PTR ds:0x640472a8,0x9
640253cc:	call   0x64002e50
640253d1:	push   0x64037eac
640253d6:	push   ebx
640253d7:	push   0x64037ea4
640253dc:	mov    ds:0x640472ac,eax
640253e1:	mov    DWORD PTR ds:0x640472b0,ebx
640253e7:	call   0x64002e50
640253ec:	push   0x64037e7c
640253f1:	mov    ds:0x640472b4,eax
640253f6:	mov    DWORD PTR ds:0x640472b8,ebx
640253fc:	push   ebx
640253fd:	push   0x64037e74
64025402:	call   0x64002e50
64025407:	push   0x64037e3c
6402540c:	push   ebx
6402540d:	push   0x64037e34
64025412:	mov    ds:0x640472bc,eax
64025417:	mov    DWORD PTR ds:0x640472c0,ebx
6402541d:	call   0x64002e50
64025422:	push   0x64037e10
64025427:	push   ebx
64025428:	push   0x64037e08
6402542d:	mov    ds:0x640472c4,eax
64025432:	mov    DWORD PTR ds:0x640472c8,ebx
64025438:	call   0x64002e50
6402543d:	add    esp,0x48
64025440:	push   0x64037dcc
64025445:	push   esi
64025446:	push   0x64037dc4
6402544b:	mov    ds:0x640472cc,eax
64025450:	mov    DWORD PTR ds:0x640472d0,esi
64025456:	call   0x64002e50
6402545b:	push   0x64037d84
64025460:	push   edi
64025461:	push   0x64037d7c
64025466:	mov    ds:0x640472d4,eax
6402546b:	mov    DWORD PTR ds:0x640472d8,edi
64025471:	call   0x64002e50
64025476:	push   0x64037d44
6402547b:	push   edi
6402547c:	push   0x64037d3c
64025481:	mov    ds:0x640472dc,eax
64025486:	mov    DWORD PTR ds:0x640472e0,edi
6402548c:	call   0x64002e50
64025491:	push   0x64037d18
64025496:	push   ebx
64025497:	push   0x64037d10
6402549c:	mov    ds:0x640472e4,eax
640254a1:	mov    DWORD PTR ds:0x640472e8,ebx
640254a7:	call   0x64002e50
640254ac:	push   0x64037cdc
640254b1:	push   ebx
640254b2:	push   0x64037cd4
640254b7:	mov    ds:0x640472ec,eax
640254bc:	mov    DWORD PTR ds:0x640472f0,ebx
640254c2:	call   0x64002e50
640254c7:	push   0x64037ca8
640254cc:	push   edi
640254cd:	push   0x64037ca0
640254d2:	mov    ds:0x640472f4,eax
640254d7:	mov    DWORD PTR ds:0x640472f8,edi
640254dd:	call   0x64002e50
640254e2:	add    esp,0x48
640254e5:	push   0x64037c68
640254ea:	push   ebx
640254eb:	push   0x64037c60
640254f0:	mov    ds:0x640472fc,eax
640254f5:	mov    DWORD PTR ds:0x64047300,ebx
640254fb:	call   0x64002e50
64025500:	push   0x64037c34
64025505:	push   ebx
64025506:	push   0x64037c2c
6402550b:	mov    ds:0x64047304,eax
64025510:	mov    DWORD PTR ds:0x64047308,ebx
64025516:	call   0x64002e50
6402551b:	push   0x64037bf4
64025520:	push   edi
64025521:	push   0x64037bec
64025526:	mov    ds:0x6404730c,eax
6402552b:	mov    DWORD PTR ds:0x64047310,edi
64025531:	call   0x64002e50
64025536:	push   0x64037bac
6402553b:	push   ebx
6402553c:	push   0x64037ba4
64025541:	mov    ds:0x64047314,eax
64025546:	mov    DWORD PTR ds:0x64047318,ebx
6402554c:	call   0x64002e50
64025551:	push   0x64037b80
64025556:	push   ebp
64025557:	mov    ds:0x6404731c,eax
6402555c:	mov    DWORD PTR ds:0x64047320,ebp
64025562:	push   0x64037b74
64025567:	call   0x64002e50
6402556c:	push   0x64037b38
64025571:	push   ebp
64025572:	push   0x64037b2c
64025577:	mov    ds:0x64047324,eax
6402557c:	mov    DWORD PTR ds:0x64047328,ebp
64025582:	call   0x64002e50
64025587:	add    esp,0x48
6402558a:	push   0x64037af8
6402558f:	push   esi
64025590:	push   0x64037af0
64025595:	mov    ds:0x6404732c,eax
6402559a:	mov    DWORD PTR ds:0x64047330,esi
640255a0:	call   0x64002e50
640255a5:	push   0x64037ab8
640255aa:	push   ebx
640255ab:	push   0x64037ab0
640255b0:	mov    ds:0x64047334,eax
640255b5:	mov    DWORD PTR ds:0x64047338,ebx
640255bb:	call   0x64002e50
640255c0:	push   0x64037a8c
640255c5:	push   edi
640255c6:	push   0x64037a84
640255cb:	mov    ds:0x6404733c,eax
640255d0:	mov    DWORD PTR ds:0x64047340,edi
640255d6:	call   0x64002e50
640255db:	push   0x64037a58
640255e0:	push   ebx
640255e1:	push   0x64037a50
640255e6:	mov    ds:0x64047344,eax
640255eb:	mov    DWORD PTR ds:0x64047348,ebx
640255f1:	call   0x64002e50
640255f6:	push   0x64037a18
640255fb:	push   ebp
640255fc:	push   0x64037a0c
64025601:	mov    ds:0x6404734c,eax
64025606:	mov    DWORD PTR ds:0x64047350,ebp
6402560c:	call   0x64002e50
64025611:	push   0x640379d0
64025616:	push   edi
64025617:	push   0x640379c8
6402561c:	mov    ds:0x64047354,eax
64025621:	mov    DWORD PTR ds:0x64047358,edi
64025627:	call   0x64002e50
6402562c:	add    esp,0x48
6402562f:	push   0x640379a4
64025634:	push   esi
64025635:	push   0x6403799c
6402563a:	mov    ds:0x6404735c,eax
6402563f:	mov    DWORD PTR ds:0x64047360,esi
64025645:	call   0x64002e50
6402564a:	push   0x6403796c
6402564f:	push   edi
64025650:	push   0x64037964
64025655:	mov    ds:0x64047364,eax
6402565a:	mov    DWORD PTR ds:0x64047368,edi
64025660:	call   0x64002e50
64025665:	push   0x64037938
6402566a:	push   esi
6402566b:	push   0x64037930
64025670:	mov    ds:0x6404736c,eax
64025675:	mov    DWORD PTR ds:0x64047370,esi
6402567b:	call   0x64002e50
64025680:	push   0x640378f4
64025685:	push   esi
64025686:	push   0x640378ec
6402568b:	mov    ds:0x64047374,eax
64025690:	mov    DWORD PTR ds:0x64047378,esi
64025696:	call   0x64002e50
6402569b:	push   0x640378b8
640256a0:	push   ebx
640256a1:	push   0x640378b0
640256a6:	mov    ds:0x6404737c,eax
640256ab:	mov    DWORD PTR ds:0x64047380,ebx
640256b1:	call   0x64002e50
640256b6:	push   0x64037870
640256bb:	push   ebx
640256bc:	push   0x64037868
640256c1:	mov    ds:0x64047384,eax
640256c6:	mov    DWORD PTR ds:0x64047388,ebx
640256cc:	call   0x64002e50
640256d1:	add    esp,0x48
640256d4:	push   0x64037844
640256d9:	push   esi
640256da:	push   0x6403783c
640256df:	mov    ds:0x6404738c,eax
640256e4:	mov    DWORD PTR ds:0x64047390,esi
640256ea:	call   0x64002e50
640256ef:	push   0x64037804
640256f4:	push   esi
640256f5:	push   0x640377fc
640256fa:	mov    ds:0x64047394,eax
640256ff:	mov    DWORD PTR ds:0x64047398,esi
64025705:	call   0x64002e50
6402570a:	push   0x640377c0
6402570f:	push   edi
64025710:	push   0x640377b8
64025715:	mov    ds:0x6404739c,eax
6402571a:	mov    DWORD PTR ds:0x640473a0,edi
64025720:	call   0x64002e50
64025725:	push   0x64037778
6402572a:	push   edi
6402572b:	push   0x64037770
64025730:	mov    ds:0x640473a4,eax
64025735:	mov    DWORD PTR ds:0x640473a8,edi
6402573b:	call   0x64002e50
64025740:	push   0x64037744
64025745:	push   edi
64025746:	push   0x6403773c
6402574b:	mov    ds:0x640473ac,eax
64025750:	mov    DWORD PTR ds:0x640473b0,edi
64025756:	call   0x64002e50
6402575b:	push   0x640376fc
64025760:	push   esi
64025761:	push   0x640376f4
64025766:	mov    ds:0x640473b4,eax
6402576b:	mov    DWORD PTR ds:0x640473b8,esi
64025771:	call   0x64002e50
64025776:	add    esp,0x48
64025779:	push   0x640376c0
6402577e:	push   esi
6402577f:	push   0x640376b8
64025784:	mov    ds:0x640473bc,eax
64025789:	mov    DWORD PTR ds:0x640473c0,esi
6402578f:	call   0x64002e50
64025794:	push   0x64037678
64025799:	push   ebp
6402579a:	push   0x6403766c
6402579f:	mov    ds:0x640473c4,eax
640257a4:	mov    DWORD PTR ds:0x640473c8,ebp
640257aa:	call   0x64002e50
640257af:	push   0x64037638
640257b4:	push   edi
640257b5:	push   0x64037630
640257ba:	mov    ds:0x640473cc,eax
640257bf:	mov    DWORD PTR ds:0x640473d0,edi
640257c5:	call   0x64002e50
640257ca:	push   0x64037608
640257cf:	push   ebp
640257d0:	push   0x640375fc
640257d5:	mov    ds:0x640473d4,eax
640257da:	mov    DWORD PTR ds:0x640473d8,ebp
640257e0:	call   0x64002e50
640257e5:	push   0x640375cc
640257ea:	push   edi
640257eb:	push   0x640375c4
640257f0:	mov    ds:0x640473dc,eax
640257f5:	mov    DWORD PTR ds:0x640473e0,edi
640257fb:	call   0x64002e50
64025800:	push   0x64037598
64025805:	push   edi
64025806:	push   0x64037590
6402580b:	mov    ds:0x640473e4,eax
64025810:	mov    DWORD PTR ds:0x640473e8,edi
64025816:	call   0x64002e50
6402581b:	add    esp,0x48
6402581e:	push   0x64037560
64025823:	push   0x9
64025825:	push   0x64037554
6402582a:	mov    ds:0x640473ec,eax
6402582f:	mov    DWORD PTR ds:0x640473f0,0x9
64025839:	call   0x64002e50
6402583e:	push   0x64037518
64025843:	push   ebp
64025844:	push   0x6403750c
64025849:	mov    ds:0x640473f4,eax
6402584e:	mov    DWORD PTR ds:0x640473f8,ebp
64025854:	call   0x64002e50
64025859:	push   0x640374e8
6402585e:	push   ebp
6402585f:	push   0x640374dc
64025864:	mov    ds:0x640473fc,eax
64025869:	mov    DWORD PTR ds:0x64047400,ebp
6402586f:	call   0x64002e50
64025874:	push   0x640374b4
64025879:	push   ebp
6402587a:	push   0x640374a8
6402587f:	mov    ds:0x64047404,eax
64025884:	mov    DWORD PTR ds:0x64047408,ebp
6402588a:	call   0x64002e50
6402588f:	push   0x64037470
64025894:	push   0x9
64025896:	push   0x64037464
6402589b:	mov    ds:0x6404740c,eax
640258a0:	mov    DWORD PTR ds:0x64047410,0x9
640258aa:	call   0x64002e50
640258af:	push   0x64037430
640258b4:	push   0x9
640258b6:	push   0x64037424
640258bb:	mov    ds:0x64047414,eax
640258c0:	mov    DWORD PTR ds:0x64047418,0x9
640258ca:	call   0x64002e50
640258cf:	add    esp,0x48
640258d2:	push   0x640373f4
640258d7:	push   ebp
640258d8:	push   0x640373e8
640258dd:	mov    ds:0x6404741c,eax
640258e2:	mov    DWORD PTR ds:0x64047420,ebp
640258e8:	call   0x64002e50
640258ed:	push   0x640373c4
640258f2:	push   ebp
640258f3:	push   0x640373b8
640258f8:	mov    ds:0x64047424,eax
640258fd:	mov    DWORD PTR ds:0x64047428,ebp
64025903:	call   0x64002e50
64025908:	push   0x64037390
6402590d:	push   0x9
6402590f:	push   0x64037384
64025914:	mov    ds:0x6404742c,eax
64025919:	mov    DWORD PTR ds:0x64047430,0x9
64025923:	call   0x64002e50
64025928:	push   0x64037350
6402592d:	push   0x9
6402592f:	push   0x64037344
64025934:	mov    ds:0x64047434,eax
64025939:	mov    DWORD PTR ds:0x64047438,0x9
64025943:	call   0x64002e50
64025948:	push   0x64037320
6402594d:	push   edi
6402594e:	push   0x64037318
64025953:	mov    ds:0x6404743c,eax
64025958:	mov    DWORD PTR ds:0x64047440,edi
6402595e:	call   0x64002e50
64025963:	push   0x640372e8
64025968:	push   esi
64025969:	push   0x640372e0
6402596e:	mov    ds:0x64047444,eax
64025973:	mov    DWORD PTR ds:0x64047448,esi
64025979:	call   0x64002e50
6402597e:	add    esp,0x48
64025981:	push   0x640372ac
64025986:	push   esi
64025987:	push   0x640372a4
6402598c:	mov    ds:0x6404744c,eax
64025991:	mov    DWORD PTR ds:0x64047450,esi
64025997:	call   0x64002e50
6402599c:	push   0x64037270
640259a1:	push   ebp
640259a2:	push   0x64037264
640259a7:	mov    ds:0x64047454,eax
640259ac:	mov    DWORD PTR ds:0x64047458,ebp
640259b2:	call   0x64002e50
640259b7:	mov    ds:0x6404745c,eax
640259bc:	push   0x64037228
640259c1:	push   ebp
640259c2:	push   0x6403721c
640259c7:	mov    DWORD PTR ds:0x64047460,ebp
640259cd:	call   0x64002e50
640259d2:	push   0x640371dc
640259d7:	push   edi
640259d8:	push   0x640371d4
640259dd:	mov    ds:0x64047464,eax
640259e2:	mov    DWORD PTR ds:0x64047468,edi
640259e8:	call   0x64002e50
640259ed:	push   0x6403719c
640259f2:	push   edi
640259f3:	push   0x64037194
640259f8:	mov    ds:0x6404746c,eax
640259fd:	mov    DWORD PTR ds:0x64047470,edi
64025a03:	call   0x64002e50
64025a08:	push   0x64037158
64025a0d:	push   0x9
64025a0f:	push   0x6403714c
64025a14:	mov    ds:0x64047474,eax
64025a19:	mov    DWORD PTR ds:0x64047478,0x9
64025a23:	call   0x64002e50
64025a28:	add    esp,0x48
64025a2b:	push   0x64037114
64025a30:	push   0xb
64025a32:	push   0x64037108
64025a37:	mov    ds:0x6404747c,eax
64025a3c:	mov    DWORD PTR ds:0x64047480,0xb
64025a46:	call   0x64002e50
64025a4b:	push   0x640370d8
64025a50:	push   0xa
64025a52:	push   0x640370cc
64025a57:	mov    ds:0x64047484,eax
64025a5c:	mov    DWORD PTR ds:0x64047488,0xa
64025a66:	call   0x64002e50
64025a6b:	push   0x6403708c
64025a70:	push   0xa
64025a72:	push   0x64037080
64025a77:	mov    ds:0x6404748c,eax
64025a7c:	mov    DWORD PTR ds:0x64047490,0xa
64025a86:	call   0x64002e50
64025a8b:	push   0x64037050
64025a90:	push   0xa
64025a92:	push   0x64037044
64025a97:	mov    ds:0x64047494,eax
64025a9c:	mov    DWORD PTR ds:0x64047498,0xa
64025aa6:	call   0x64002e50
64025aab:	push   0x64037010
64025ab0:	push   esi
64025ab1:	push   0x64037008
64025ab6:	mov    ds:0x6404749c,eax
64025abb:	mov    DWORD PTR ds:0x640474a0,esi
64025ac1:	call   0x64002e50
64025ac6:	push   0x64036fd8
64025acb:	push   esi
64025acc:	push   0x64036fd0
64025ad1:	mov    ds:0x640474a4,eax
64025ad6:	mov    DWORD PTR ds:0x640474a8,esi
64025adc:	call   0x64002e50
64025ae1:	add    esp,0x48
64025ae4:	push   0x64036fa0
64025ae9:	push   edi
64025aea:	push   0x64036f98
64025aef:	mov    ds:0x640474ac,eax
64025af4:	mov    DWORD PTR ds:0x640474b0,edi
64025afa:	call   0x64002e50
64025aff:	push   0x64036f70
64025b04:	push   edi
64025b05:	push   0x64036f68
64025b0a:	mov    ds:0x640474b4,eax
64025b0f:	mov    DWORD PTR ds:0x640474b8,edi
64025b15:	call   0x64002e50
64025b1a:	push   0x64036f3c
64025b1f:	push   ebp
64025b20:	push   0x64036f30
64025b25:	mov    ds:0x640474bc,eax
64025b2a:	mov    DWORD PTR ds:0x640474c0,ebp
64025b30:	call   0x64002e50
64025b35:	mov    ds:0x640474c4,eax
64025b3a:	mov    DWORD PTR ds:0x640474c8,ebp
64025b40:	push   0x64036ef0
64025b45:	push   ebp
64025b46:	push   0x64036ee4
64025b4b:	call   0x64002e50
64025b50:	push   0x64036eb8
64025b55:	push   ebp
64025b56:	push   0x64036eac
64025b5b:	mov    ds:0x640474cc,eax
64025b60:	mov    DWORD PTR ds:0x640474d0,ebp
64025b66:	call   0x64002e50
64025b6b:	push   0x64036e84
64025b70:	push   ebp
64025b71:	push   0x64036e78
64025b76:	mov    ds:0x640474d4,eax
64025b7b:	mov    DWORD PTR ds:0x640474d8,ebp
64025b81:	call   0x64002e50
64025b86:	add    esp,0x48
64025b89:	push   0x64036e40
64025b8e:	push   0x9
64025b90:	push   0x64036e34
64025b95:	mov    ds:0x640474dc,eax
64025b9a:	mov    DWORD PTR ds:0x640474e0,0x9
64025ba4:	call   0x64002e50
64025ba9:	push   0x64036dfc
64025bae:	push   0x9
64025bb0:	push   0x64036df0
64025bb5:	mov    ds:0x640474e4,eax
64025bba:	mov    DWORD PTR ds:0x640474e8,0x9
64025bc4:	call   0x64002e50
64025bc9:	push   0x64036db0
64025bce:	push   edi
64025bcf:	push   0x64036da8
64025bd4:	mov    ds:0x640474ec,eax
64025bd9:	mov    DWORD PTR ds:0x640474f0,edi
64025bdf:	call   0x64002e50
64025be4:	push   0x64036d74
64025be9:	push   edi
64025bea:	push   0x64036d6c
64025bef:	mov    ds:0x640474f4,eax
64025bf4:	mov    DWORD PTR ds:0x640474f8,edi
64025bfa:	call   0x64002e50
64025bff:	push   0x64036d44
64025c04:	push   edi
64025c05:	push   0x64036d3c
64025c0a:	mov    ds:0x640474fc,eax
64025c0f:	mov    DWORD PTR ds:0x64047500,edi
64025c15:	call   0x64002e50
64025c1a:	push   0x64036d10
64025c1f:	push   edi
64025c20:	push   0x64036d08
64025c25:	mov    ds:0x64047504,eax
64025c2a:	mov    DWORD PTR ds:0x64047508,edi
64025c30:	call   0x64002e50
64025c35:	add    esp,0x48
64025c38:	push   0x64036cd8
64025c3d:	push   ebp
64025c3e:	push   0x64036ccc
64025c43:	mov    ds:0x6404750c,eax
64025c48:	mov    DWORD PTR ds:0x64047510,ebp
64025c4e:	call   0x64002e50
64025c53:	push   0x64036c90
64025c58:	push   ebp
64025c59:	push   0x64036c84
64025c5e:	mov    ds:0x64047514,eax
64025c63:	mov    DWORD PTR ds:0x64047518,ebp
64025c69:	call   0x64002e50
64025c6e:	push   0x64036c54
64025c73:	push   0x9
64025c75:	push   0x64036c48
64025c7a:	mov    ds:0x6404751c,eax
64025c7f:	mov    DWORD PTR ds:0x64047520,0x9
64025c89:	call   0x64002e50
64025c8e:	push   0x64036c14
64025c93:	push   0x9
64025c95:	push   0x64036c08
64025c9a:	mov    ds:0x64047524,eax
64025c9f:	mov    DWORD PTR ds:0x64047528,0x9
64025ca9:	call   0x64002e50
64025cae:	mov    ds:0x6404752c,eax
64025cb3:	mov    DWORD PTR ds:0x64047530,0x9
64025cbd:	push   0x64036be4
64025cc2:	push   0x9
64025cc4:	push   0x64036bd8
64025cc9:	call   0x64002e50
64025cce:	push   0x64036bac
64025cd3:	push   0x9
64025cd5:	push   0x64036ba0
64025cda:	mov    ds:0x64047534,eax
64025cdf:	mov    DWORD PTR ds:0x64047538,0x9
64025ce9:	call   0x64002e50
64025cee:	add    esp,0x48
64025cf1:	push   0x64036b70
64025cf6:	push   0xa
64025cf8:	push   0x64036b64
64025cfd:	mov    ds:0x6404753c,eax
64025d02:	mov    DWORD PTR ds:0x64047540,0xa
64025d0c:	call   0x64002e50
64025d11:	push   0x64036b2c
64025d16:	push   0xa
64025d18:	push   0x64036b20
64025d1d:	mov    ds:0x64047544,eax
64025d22:	mov    DWORD PTR ds:0x64047548,0xa
64025d2c:	call   0x64002e50
64025d31:	push   0x64036afc
64025d36:	push   ebp
64025d37:	push   0x64036af0
64025d3c:	mov    ds:0x6404754c,eax
64025d41:	mov    DWORD PTR ds:0x64047550,ebp
64025d47:	call   0x64002e50
64025d4c:	push   0x64036ac8
64025d51:	push   ebp
64025d52:	push   0x64036abc
64025d57:	mov    ds:0x64047554,eax
64025d5c:	mov    DWORD PTR ds:0x64047558,ebp
64025d62:	call   0x64002e50
64025d67:	push   0x64036a7c
64025d6c:	push   ebp
64025d6d:	push   0x64036a70
64025d72:	mov    ds:0x6404755c,eax
64025d77:	mov    DWORD PTR ds:0x64047560,ebp
64025d7d:	call   0x64002e50
64025d82:	push   0x64036a48
64025d87:	push   ebp
64025d88:	push   0x64036a3c
64025d8d:	mov    ds:0x64047564,eax
64025d92:	mov    DWORD PTR ds:0x64047568,ebp
64025d98:	call   0x64002e50
64025d9d:	add    esp,0x48
64025da0:	push   0x64036a08
64025da5:	push   0x9
64025da7:	push   0x640369fc
64025dac:	mov    ds:0x6404756c,eax
64025db1:	mov    DWORD PTR ds:0x64047570,0x9
64025dbb:	call   0x64002e50
64025dc0:	push   0x640369c8
64025dc5:	push   0x9
64025dc7:	push   0x640369bc
64025dcc:	mov    ds:0x64047574,eax
64025dd1:	mov    DWORD PTR ds:0x64047578,0x9
64025ddb:	call   0x64002e50
64025de0:	push   0x64036988
64025de5:	push   edi
64025de6:	push   0x64036980
64025deb:	mov    ds:0x6404757c,eax
64025df0:	mov    DWORD PTR ds:0x64047580,edi
64025df6:	call   0x64002e50
64025dfb:	push   0x64036948
64025e00:	push   edi
64025e01:	push   0x64036940
64025e06:	mov    ds:0x64047584,eax
64025e0b:	mov    DWORD PTR ds:0x64047588,edi
64025e11:	call   0x64002e50
64025e16:	push   0x64036900
64025e1b:	push   ebp
64025e1c:	push   0x640368f4
64025e21:	mov    ds:0x6404758c,eax
64025e26:	mov    DWORD PTR ds:0x64047590,ebp
64025e2c:	call   0x64002e50
64025e31:	push   0x640368c4
64025e36:	mov    ds:0x64047594,eax
64025e3b:	mov    DWORD PTR ds:0x64047598,ebp
64025e41:	push   ebp
64025e42:	push   0x640368b8
64025e47:	call   0x64002e50
64025e4c:	add    esp,0x48
64025e4f:	push   0x6403688c
64025e54:	push   esi
64025e55:	push   0x64036884
64025e5a:	mov    ds:0x6404759c,eax
64025e5f:	mov    DWORD PTR ds:0x640475a0,esi
64025e65:	call   0x64002e50
64025e6a:	push   0x64036850
64025e6f:	push   esi
64025e70:	push   0x64036848
64025e75:	mov    ds:0x640475a4,eax
64025e7a:	mov    DWORD PTR ds:0x640475a8,esi
64025e80:	call   0x64002e50
64025e85:	push   0x64036824
64025e8a:	push   edi
64025e8b:	push   0x6403681c
64025e90:	mov    ds:0x640475ac,eax
64025e95:	mov    DWORD PTR ds:0x640475b0,edi
64025e9b:	call   0x64002e50
64025ea0:	push   0x640367f0
64025ea5:	push   edi
64025ea6:	push   0x640367e8
64025eab:	mov    ds:0x640475b4,eax
64025eb0:	mov    DWORD PTR ds:0x640475b8,edi
64025eb6:	call   0x64002e50
64025ebb:	push   0x640367b0
64025ec0:	push   esi
64025ec1:	push   0x640367a8
64025ec6:	mov    ds:0x640475bc,eax
64025ecb:	mov    DWORD PTR ds:0x640475c0,esi
64025ed1:	call   0x64002e50
64025ed6:	push   0x6403677c
64025edb:	push   edi
64025edc:	push   0x64036774
64025ee1:	mov    ds:0x640475c4,eax
64025ee6:	mov    DWORD PTR ds:0x640475c8,edi
64025eec:	call   0x64002e50
64025ef1:	add    esp,0x48
64025ef4:	push   0x64036750
64025ef9:	push   esi
64025efa:	push   0x64036748
64025eff:	mov    ds:0x640475cc,eax
64025f04:	mov    DWORD PTR ds:0x640475d0,esi
64025f0a:	call   0x64002e50
64025f0f:	push   0x6403671c
64025f14:	push   edi
64025f15:	push   0x64036714
64025f1a:	mov    ds:0x640475d4,eax
64025f1f:	mov    DWORD PTR ds:0x640475d8,edi
64025f25:	call   0x64002e50
64025f2a:	push   0x640366e8
64025f2f:	push   esi
64025f30:	push   0x640366e0
64025f35:	mov    ds:0x640475dc,eax
64025f3a:	mov    DWORD PTR ds:0x640475e0,esi
64025f40:	call   0x64002e50
64025f45:	push   0x640366b0
64025f4a:	push   edi
64025f4b:	push   0x640366a8
64025f50:	mov    ds:0x640475e4,eax
64025f55:	mov    DWORD PTR ds:0x640475e8,edi
64025f5b:	call   0x64002e50
64025f60:	push   0x64036668
64025f65:	push   edi
64025f66:	push   0x64036660
64025f6b:	mov    ds:0x640475ec,eax
64025f70:	mov    DWORD PTR ds:0x640475f0,edi
64025f76:	call   0x64002e50
64025f7b:	push   0x64036620
64025f80:	push   ebp
64025f81:	push   0x64036614
64025f86:	mov    ds:0x640475f4,eax
64025f8b:	mov    DWORD PTR ds:0x640475f8,ebp
64025f91:	call   0x64002e50
64025f96:	add    esp,0x48
64025f99:	push   0x640365dc
64025f9e:	mov    ds:0x640475fc,eax
64025fa3:	mov    DWORD PTR ds:0x64047600,0x9
64025fad:	push   0x9
64025faf:	push   0x640365d0
64025fb4:	call   0x64002e50
64025fb9:	push   0x640365ac
64025fbe:	push   0xa
64025fc0:	push   0x640365a0
64025fc5:	mov    ds:0x64047604,eax
64025fca:	mov    DWORD PTR ds:0x64047608,0xa
64025fd4:	call   0x64002e50
64025fd9:	push   0x64036564
64025fde:	push   esi
64025fdf:	push   0x6403655c
64025fe4:	mov    ds:0x6404760c,eax
64025fe9:	mov    DWORD PTR ds:0x64047610,esi
64025fef:	call   0x64002e50
64025ff4:	push   0x64036530
64025ff9:	push   edi
64025ffa:	push   0x64036528
64025fff:	mov    ds:0x64047614,eax
64026004:	mov    DWORD PTR ds:0x64047618,edi
6402600a:	call   0x64002e50
6402600f:	push   0x640364ec
64026014:	push   esi
64026015:	push   0x640364e4
6402601a:	mov    ds:0x6404761c,eax
6402601f:	mov    DWORD PTR ds:0x64047620,esi
64026025:	call   0x64002e50
6402602a:	push   0x640364bc
6402602f:	push   edi
64026030:	push   0x640364b4
64026035:	mov    ds:0x64047624,eax
6402603a:	mov    DWORD PTR ds:0x64047628,edi
64026040:	call   0x64002e50
64026045:	add    esp,0x48
64026048:	push   0x64036484
6402604d:	push   edi
6402604e:	push   0x6403647c
64026053:	mov    ds:0x6404762c,eax
64026058:	mov    DWORD PTR ds:0x64047630,edi
6402605e:	call   0x64002e50
64026063:	push   0x64036450
64026068:	push   ebp
64026069:	push   0x64036444
6402606e:	mov    ds:0x64047634,eax
64026073:	mov    DWORD PTR ds:0x64047638,ebp
64026079:	call   0x64002e50
6402607e:	push   0x64036418
64026083:	push   esi
64026084:	push   0x64036410
64026089:	mov    ds:0x6404763c,eax
6402608e:	mov    DWORD PTR ds:0x64047640,esi
64026094:	call   0x64002e50
64026099:	push   0x640363d4
6402609e:	push   edi
6402609f:	push   0x640363cc
640260a4:	mov    ds:0x64047644,eax
640260a9:	mov    DWORD PTR ds:0x64047648,edi
640260af:	call   0x64002e50
640260b4:	push   0x64036394
640260b9:	push   esi
640260ba:	push   0x6403638c
640260bf:	mov    ds:0x6404764c,eax
640260c4:	mov    DWORD PTR ds:0x64047650,esi
640260ca:	call   0x64002e50
640260cf:	push   0x64036364
640260d4:	push   edi
640260d5:	push   0x6403635c
640260da:	mov    ds:0x64047654,eax
640260df:	mov    DWORD PTR ds:0x64047658,edi
640260e5:	call   0x64002e50
640260ea:	add    esp,0x48
640260ed:	push   0x64036338
640260f2:	push   esi
640260f3:	push   0x64036330
640260f8:	mov    ds:0x6404765c,eax
640260fd:	mov    DWORD PTR ds:0x64047660,esi
64026103:	call   0x64002e50
64026108:	push   0x640362fc
6402610d:	push   edi
6402610e:	mov    ds:0x64047664,eax
64026113:	mov    DWORD PTR ds:0x64047668,edi
64026119:	push   0x640362f4
6402611e:	call   0x64002e50
64026123:	push   0x640362b4
64026128:	push   ebp
64026129:	push   0x640362a8
6402612e:	mov    ds:0x6404766c,eax
64026133:	mov    DWORD PTR ds:0x64047670,ebp
64026139:	call   0x64002e50
6402613e:	push   0x64036268
64026143:	push   0x9
64026145:	push   0x6403625c
6402614a:	mov    ds:0x64047674,eax
6402614f:	mov    DWORD PTR ds:0x64047678,0x9
64026159:	call   0x64002e50
6402615e:	push   0x64036228
64026163:	push   0x9
64026165:	push   0x6403621c
6402616a:	mov    ds:0x6404767c,eax
6402616f:	mov    DWORD PTR ds:0x64047680,0x9
64026179:	call   0x64002e50
6402617e:	push   0x640361f4
64026183:	push   0x9
64026185:	push   0x640361e8
6402618a:	mov    ds:0x64047684,eax
6402618f:	mov    DWORD PTR ds:0x64047688,0x9
64026199:	call   0x64002e50
6402619e:	add    esp,0x48
640261a1:	push   0x640361b4
640261a6:	push   ebp
640261a7:	push   0x640361a8
640261ac:	mov    ds:0x6404768c,eax
640261b1:	mov    DWORD PTR ds:0x64047690,ebp
640261b7:	call   0x64002e50
640261bc:	push   0x64036168
640261c1:	push   ebp
640261c2:	push   0x64036158
640261c7:	mov    ds:0x64047694,eax
640261cc:	mov    DWORD PTR ds:0x64047698,ebp
640261d2:	call   0x64002e50
640261d7:	push   0x64036130
640261dc:	push   ebp
640261dd:	push   0x64036124
640261e2:	mov    ds:0x6404769c,eax
640261e7:	mov    DWORD PTR ds:0x640476a0,ebp
640261ed:	call   0x64002e50
640261f2:	push   0x64036100
640261f7:	push   ebp
640261f8:	push   0x640360f4
640261fd:	mov    ds:0x640476a4,eax
64026202:	mov    DWORD PTR ds:0x640476a8,ebp
64026208:	call   0x64002e50
6402620d:	push   0x640360b8
64026212:	push   ebp
64026213:	push   0x640360ac
64026218:	mov    ds:0x640476ac,eax
6402621d:	mov    DWORD PTR ds:0x640476b0,ebp
64026223:	call   0x64002e50
64026228:	push   0x6403607c
6402622d:	push   ebx
6402622e:	push   0x64036074
64026233:	mov    ds:0x640476b4,eax
64026238:	mov    DWORD PTR ds:0x640476b8,ebx
6402623e:	call   0x64002e50
64026243:	add    esp,0x48
64026246:	push   0x64036050
6402624b:	push   esi
6402624c:	push   0x64036048
64026251:	mov    ds:0x640476bc,eax
64026256:	mov    DWORD PTR ds:0x640476c0,esi
6402625c:	call   0x64002e50
64026261:	push   0x64036014
64026266:	push   0xc
64026268:	push   0x64036004
6402626d:	mov    ds:0x640476c4,eax
64026272:	mov    DWORD PTR ds:0x640476c8,0xc
6402627c:	call   0x64002e50
64026281:	push   0x64035fd8
64026286:	push   0xc
64026288:	push   0x64035fc8
6402628d:	mov    ds:0x640476cc,eax
64026292:	mov    DWORD PTR ds:0x640476d0,0xc
6402629c:	call   0x64002e50
640262a1:	push   0x64035fa0
640262a6:	push   0xe
640262a8:	push   0x64035f90
640262ad:	mov    ds:0x640476d4,eax
640262b2:	mov    DWORD PTR ds:0x640476d8,0xe
640262bc:	call   0x64002e50
640262c1:	push   0x64035f6c
640262c6:	push   ebx
640262c7:	push   0x64035f64
640262cc:	mov    ds:0x640476dc,eax
640262d1:	mov    DWORD PTR ds:0x640476e0,ebx
640262d7:	call   0x64002e50
640262dc:	push   0x64035f28
640262e1:	push   esi
640262e2:	push   0x64035f20
640262e7:	mov    ds:0x640476e4,eax
640262ec:	mov    DWORD PTR ds:0x640476e8,esi
640262f2:	call   0x64002e50
640262f7:	add    esp,0x48
640262fa:	push   0x64035ee0
640262ff:	push   ebx
64026300:	push   0x64035ed8
64026305:	mov    ds:0x640476ec,eax
6402630a:	mov    DWORD PTR ds:0x640476f0,ebx
64026310:	call   0x64002e50
64026315:	push   0x64035ea0
6402631a:	push   esi
6402631b:	push   0x64035e98
64026320:	mov    ds:0x640476f4,eax
64026325:	mov    DWORD PTR ds:0x640476f8,esi
6402632b:	call   0x64002e50
64026330:	push   0x64035e70
64026335:	push   ebx
64026336:	push   0x64035e68
6402633b:	mov    ds:0x640476fc,eax
64026340:	mov    DWORD PTR ds:0x64047700,ebx
64026346:	call   0x64002e50
6402634b:	push   0x64035e30
64026350:	push   esi
64026351:	push   0x64035e28
64026356:	mov    ds:0x64047704,eax
6402635b:	mov    DWORD PTR ds:0x64047708,esi
64026361:	call   0x64002e50
64026366:	push   0x64035df8
6402636b:	push   ebp
6402636c:	push   0x64035dec
64026371:	mov    ds:0x6404770c,eax
64026376:	mov    DWORD PTR ds:0x64047710,ebp
6402637c:	call   0x64002e50
64026381:	push   0x64035dbc
64026386:	push   0x9
64026388:	push   0x64035db0
6402638d:	mov    ds:0x64047714,eax
64026392:	mov    DWORD PTR ds:0x64047718,0x9
6402639c:	call   0x64002e50
640263a1:	add    esp,0x48
640263a4:	push   0x64035d7c
640263a9:	push   ebp
640263aa:	push   0x64035d70
640263af:	mov    ds:0x6404771c,eax
640263b4:	mov    DWORD PTR ds:0x64047720,ebp
640263ba:	call   0x64002e50
640263bf:	push   0x64035d48
640263c4:	push   0x9
640263c6:	push   0x64035d3c
640263cb:	mov    ds:0x64047724,eax
640263d0:	mov    DWORD PTR ds:0x64047728,0x9
640263da:	call   0x64002e50
640263df:	push   0x64035d04
640263e4:	push   ebp
640263e5:	push   0x64035cf8
640263ea:	mov    ds:0x6404772c,eax
640263ef:	mov    DWORD PTR ds:0x64047730,ebp
640263f5:	call   0x64002e50
640263fa:	push   0x64035cc0
640263ff:	push   0x9
64026401:	push   0x64035cb4
64026406:	mov    ds:0x64047734,eax
6402640b:	mov    DWORD PTR ds:0x64047738,0x9
64026415:	call   0x64002e50
6402641a:	mov    ds:0x6404773c,eax
6402641f:	push   0x64035c78
64026424:	push   ebp
64026425:	push   0x64035c6c
6402642a:	mov    DWORD PTR ds:0x64047740,ebp
64026430:	call   0x64002e50
64026435:	push   0x64035c30
6402643a:	push   0x9
6402643c:	push   0x64035c24
64026441:	mov    ds:0x64047744,eax
64026446:	mov    DWORD PTR ds:0x64047748,0x9
64026450:	call   0x64002e50
64026455:	add    esp,0x48
64026458:	push   0x64035c00
6402645d:	push   ebp
6402645e:	push   0x64035bf4
64026463:	mov    ds:0x6404774c,eax
64026468:	mov    DWORD PTR ds:0x64047750,ebp
6402646e:	call   0x64002e50
64026473:	push   0x64035bcc
64026478:	push   0x9
6402647a:	push   0x64035bc0
6402647f:	mov    ds:0x64047754,eax
64026484:	mov    DWORD PTR ds:0x64047758,0x9
6402648e:	call   0x64002e50
64026493:	push   0x64035b84
64026498:	push   ebp
64026499:	push   0x64035b78
6402649e:	mov    ds:0x6404775c,eax
640264a3:	mov    DWORD PTR ds:0x64047760,ebp
640264a9:	call   0x64002e50
640264ae:	push   0x64035b40
640264b3:	push   0x9
640264b5:	push   0x64035b34
640264ba:	mov    ds:0x64047764,eax
640264bf:	mov    DWORD PTR ds:0x64047768,0x9
640264c9:	call   0x64002e50
640264ce:	push   0x64035b10
640264d3:	push   esi
640264d4:	push   0x64035b08
640264d9:	mov    ds:0x6404776c,eax
640264de:	mov    DWORD PTR ds:0x64047770,esi
640264e4:	call   0x64002e50
640264e9:	push   0x64035ae0
640264ee:	push   edi
640264ef:	push   0x64035ad8
640264f4:	mov    ds:0x64047774,eax
640264f9:	mov    DWORD PTR ds:0x64047778,edi
640264ff:	call   0x64002e50
64026504:	add    esp,0x48
64026507:	push   0x64035ab0
6402650c:	push   edi
6402650d:	push   0x64035aa8
64026512:	mov    ds:0x6404777c,eax
64026517:	mov    DWORD PTR ds:0x64047780,edi
6402651d:	call   0x64002e50
64026522:	push   0x64035a70
64026527:	push   ebp
64026528:	push   0x64035a64
6402652d:	mov    ds:0x64047784,eax
64026532:	mov    DWORD PTR ds:0x64047788,ebp
64026538:	call   0x64002e50
6402653d:	push   0x64035a3c
64026542:	push   ebp
64026543:	push   0x64035a30
64026548:	mov    ds:0x6404778c,eax
6402654d:	mov    DWORD PTR ds:0x64047790,ebp
64026553:	call   0x64002e50
64026558:	push   0x64035a04
6402655d:	push   0x9
6402655f:	push   0x640359f8
64026564:	mov    ds:0x64047794,eax
64026569:	mov    DWORD PTR ds:0x64047798,0x9
64026573:	call   0x64002e50
64026578:	push   0x640359c4
6402657d:	push   ebp
6402657e:	push   0x640359b8
64026583:	mov    ds:0x6404779c,eax
64026588:	mov    DWORD PTR ds:0x640477a0,ebp
6402658e:	call   0x64002e50
64026593:	mov    ds:0x640477a4,eax
64026598:	mov    DWORD PTR ds:0x640477a8,0x9
640265a2:	push   0x6403597c
640265a7:	push   0x9
640265a9:	push   0x64035970
640265ae:	call   0x64002e50
640265b3:	add    esp,0x48
640265b6:	push   0x64035940
640265bb:	push   0xa
640265bd:	push   0x64035934
640265c2:	mov    ds:0x640477ac,eax
640265c7:	mov    DWORD PTR ds:0x640477b0,0xa
640265d1:	call   0x64002e50
640265d6:	push   0x640358f8
640265db:	push   0xa
640265dd:	push   0x640358ec
640265e2:	mov    ds:0x640477b4,eax
640265e7:	mov    DWORD PTR ds:0x640477b8,0xa
640265f1:	call   0x64002e50
640265f6:	push   0x640358b4
640265fb:	push   ebp
640265fc:	push   0x640358a8
64026601:	mov    ds:0x640477bc,eax
64026606:	mov    DWORD PTR ds:0x640477c0,ebp
6402660c:	call   0x64002e50
64026611:	push   0x64035878
64026616:	push   0x9
64026618:	push   0x6403586c
6402661d:	mov    ds:0x640477c4,eax
64026622:	mov    DWORD PTR ds:0x640477c8,0x9
6402662c:	call   0x64002e50
64026631:	push   0x64035848
64026636:	push   ebp
64026637:	push   0x6403583c
6402663c:	mov    ds:0x640477cc,eax
64026641:	mov    DWORD PTR ds:0x640477d0,ebp
64026647:	call   0x64002e50
6402664c:	push   0x640357fc
64026651:	push   0x9
64026653:	push   0x640357f0
64026658:	mov    ds:0x640477d4,eax
6402665d:	mov    DWORD PTR ds:0x640477d8,0x9
64026667:	call   0x64002e50
6402666c:	add    esp,0x48
6402666f:	push   0x640357b8
64026674:	push   ebp
64026675:	push   0x640357ac
6402667a:	mov    ds:0x640477dc,eax
6402667f:	mov    DWORD PTR ds:0x640477e0,ebp
64026685:	call   0x64002e50
6402668a:	push   0x6403577c
6402668f:	push   0x9
64026691:	push   0x64035770
64026696:	mov    ds:0x640477e4,eax
6402669b:	mov    DWORD PTR ds:0x640477e8,0x9
640266a5:	call   0x64002e50
640266aa:	push   0x6403574c
640266af:	push   ebp
640266b0:	push   0x64035740
640266b5:	mov    ds:0x640477ec,eax
640266ba:	mov    DWORD PTR ds:0x640477f0,ebp
640266c0:	call   0x64002e50
640266c5:	push   0x64035700
640266ca:	push   0x9
640266cc:	push   0x640356f4
640266d1:	mov    ds:0x640477f4,eax
640266d6:	mov    DWORD PTR ds:0x640477f8,0x9
640266e0:	call   0x64002e50
640266e5:	push   0x640356c4
640266ea:	push   ebp
640266eb:	push   0x640356b8
640266f0:	mov    ds:0x640477fc,eax
640266f5:	mov    DWORD PTR ds:0x64047800,ebp
640266fb:	call   0x64002e50
64026700:	push   0x64035688
64026705:	push   0x9
64026707:	push   0x6403567c
6402670c:	mov    ds:0x64047804,eax
64026711:	mov    DWORD PTR ds:0x64047808,0x9
6402671b:	call   0x64002e50
64026720:	add    esp,0x48
64026723:	mov    ds:0x6404780c,eax
64026728:	mov    DWORD PTR ds:0x64047810,ebp
6402672e:	push   0x6403564c
64026733:	push   ebp
64026734:	push   0x64035640
64026739:	call   0x64002e50
6402673e:	push   0x64035618
64026743:	push   0x9
64026745:	push   0x6403560c
6402674a:	mov    ds:0x64047814,eax
6402674f:	mov    DWORD PTR ds:0x64047818,0x9
64026759:	call   0x64002e50
6402675e:	push   0x640355e0
64026763:	push   edi
64026764:	push   0x640355d8
64026769:	mov    ds:0x6404781c,eax
6402676e:	mov    DWORD PTR ds:0x64047820,edi
64026774:	call   0x64002e50
64026779:	push   0x640355a8
6402677e:	push   ebp
6402677f:	push   0x6403559c
64026784:	mov    ds:0x64047824,eax
64026789:	mov    DWORD PTR ds:0x64047828,ebp
6402678f:	call   0x64002e50
64026794:	push   0x64035574
64026799:	push   esi
6402679a:	push   0x6403556c
6402679f:	mov    ds:0x6404782c,eax
640267a4:	mov    DWORD PTR ds:0x64047830,esi
640267aa:	call   0x64002e50
640267af:	push   0x64035530
640267b4:	push   edi
640267b5:	push   0x64035528
640267ba:	mov    ds:0x64047834,eax
640267bf:	mov    DWORD PTR ds:0x64047838,edi
640267c5:	call   0x64002e50
640267ca:	add    esp,0x48
640267cd:	push   0x64035500
640267d2:	push   esi
640267d3:	push   0x640354f8
640267d8:	mov    ds:0x6404783c,eax
640267dd:	mov    DWORD PTR ds:0x64047840,esi
640267e3:	call   0x64002e50
640267e8:	push   0x640354b8
640267ed:	push   edi
640267ee:	push   0x640354b0
640267f3:	mov    ds:0x64047844,eax
640267f8:	mov    DWORD PTR ds:0x64047848,edi
640267fe:	call   0x64002e50
64026803:	push   0x64035484
64026808:	push   esi
64026809:	push   0x6403547c
6402680e:	mov    ds:0x6404784c,eax
64026813:	mov    DWORD PTR ds:0x64047850,esi
64026819:	call   0x64002e50
6402681e:	push   0x64035454
64026823:	push   edi
64026824:	push   0x6403544c
64026829:	mov    ds:0x64047854,eax
6402682e:	mov    DWORD PTR ds:0x64047858,edi
64026834:	call   0x64002e50
64026839:	push   0x64035428
6402683e:	push   esi
6402683f:	push   0x64035420
64026844:	mov    ds:0x6404785c,eax
64026849:	mov    DWORD PTR ds:0x64047860,esi
6402684f:	call   0x64002e50
64026854:	push   0x640353fc
64026859:	push   edi
6402685a:	push   0x640353f4
6402685f:	mov    ds:0x64047864,eax
64026864:	mov    DWORD PTR ds:0x64047868,edi
6402686a:	call   0x64002e50
6402686f:	add    esp,0x48
64026872:	push   0x640353c8
64026877:	push   esi
64026878:	push   0x640353c0
6402687d:	mov    ds:0x6404786c,eax
64026882:	mov    DWORD PTR ds:0x64047870,esi
64026888:	call   0x64002e50
6402688d:	mov    ds:0x64047874,eax
64026892:	mov    DWORD PTR ds:0x64047878,edi
64026898:	push   0x64035398
6402689d:	push   edi
6402689e:	push   0x64035390
640268a3:	call   0x64002e50
640268a8:	push   0x64035354
640268ad:	push   esi
640268ae:	push   0x6403534c
640268b3:	mov    ds:0x6404787c,eax
640268b8:	mov    DWORD PTR ds:0x64047880,esi
640268be:	call   0x64002e50
640268c3:	push   0x64035314
640268c8:	push   edi
640268c9:	push   0x6403530c
640268ce:	mov    ds:0x64047884,eax
640268d3:	mov    DWORD PTR ds:0x64047888,edi
640268d9:	call   0x64002e50
640268de:	push   0x640352d4
640268e3:	push   esi
640268e4:	push   0x640352cc
640268e9:	mov    ds:0x6404788c,eax
640268ee:	mov    DWORD PTR ds:0x64047890,esi
640268f4:	call   0x64002e50
640268f9:	push   0x640352a4
640268fe:	push   edi
640268ff:	push   0x6403529c
64026904:	mov    ds:0x64047894,eax
64026909:	mov    DWORD PTR ds:0x64047898,edi
6402690f:	call   0x64002e50
64026914:	add    esp,0x48
64026917:	push   0x64035270
6402691c:	push   esi
6402691d:	push   0x64035268
64026922:	mov    ds:0x6404789c,eax
64026927:	mov    DWORD PTR ds:0x640478a0,esi
6402692d:	call   0x64002e50
64026932:	push   0x6403522c
64026937:	push   edi
64026938:	push   0x64035224
6402693d:	mov    ds:0x640478a4,eax
64026942:	mov    DWORD PTR ds:0x640478a8,edi
64026948:	call   0x64002e50
6402694d:	push   0x640351f8
64026952:	push   esi
64026953:	push   0x640351f0
64026958:	mov    ds:0x640478ac,eax
6402695d:	mov    DWORD PTR ds:0x640478b0,esi
64026963:	call   0x64002e50
64026968:	push   0x640351b8
6402696d:	push   edi
6402696e:	push   0x640351b0
64026973:	mov    ds:0x640478b4,eax
64026978:	mov    DWORD PTR ds:0x640478b8,edi
6402697e:	call   0x64002e50
64026983:	push   0x6403518c
64026988:	push   0xa
6402698a:	push   0x64035180
6402698f:	mov    ds:0x640478bc,eax
64026994:	mov    DWORD PTR ds:0x640478c0,0xa
6402699e:	call   0x64002e50
640269a3:	push   0x6403515c
640269a8:	push   0xb
640269aa:	push   0x64035150
640269af:	mov    ds:0x640478c4,eax
640269b4:	mov    DWORD PTR ds:0x640478c8,0xb
640269be:	call   0x64002e50
640269c3:	add    esp,0x48
640269c6:	push   0x6403512c
640269cb:	push   esi
640269cc:	push   0x64035124
640269d1:	mov    ds:0x640478cc,eax
640269d6:	mov    DWORD PTR ds:0x640478d0,esi
640269dc:	call   0x64002e50
640269e1:	push   0x640350f8
640269e6:	push   edi
640269e7:	push   0x640350f0
640269ec:	mov    ds:0x640478d4,eax
640269f1:	mov    DWORD PTR ds:0x640478d8,edi
640269f7:	call   0x64002e50
640269fc:	push   0x640350b8
64026a01:	mov    ds:0x640478dc,eax
64026a06:	mov    DWORD PTR ds:0x640478e0,0xe
64026a10:	push   0xe
64026a12:	push   0x640350a8
64026a17:	call   0x64002e50
64026a1c:	push   0x6403506c
64026a21:	push   0xe
64026a23:	push   0x6403505c
64026a28:	mov    ds:0x640478e4,eax
64026a2d:	mov    DWORD PTR ds:0x640478e8,0xe
64026a37:	call   0x64002e50
64026a3c:	push   0x6403501c
64026a41:	push   0xe
64026a43:	push   0x6403500c
64026a48:	mov    ds:0x640478ec,eax
64026a4d:	mov    DWORD PTR ds:0x640478f0,0xe
64026a57:	call   0x64002e50
64026a5c:	push   0x64034fd0
64026a61:	push   0xe
64026a63:	push   0x64034fc0
64026a68:	mov    ds:0x640478f4,eax
64026a6d:	mov    DWORD PTR ds:0x640478f8,0xe
64026a77:	call   0x64002e50
64026a7c:	add    esp,0x48
64026a7f:	push   0x64034f84
64026a84:	push   0xb
64026a86:	push   0x64034f78
64026a8b:	mov    ds:0x640478fc,eax
64026a90:	mov    DWORD PTR ds:0x64047900,0xb
64026a9a:	call   0x64002e50
64026a9f:	push   0x64034f44
64026aa4:	push   0xb
64026aa6:	push   0x64034f38
64026aab:	mov    ds:0x64047904,eax
64026ab0:	mov    DWORD PTR ds:0x64047908,0xb
64026aba:	call   0x64002e50
64026abf:	push   0x64034ef8
64026ac4:	push   0xb
64026ac6:	push   0x64034eec
64026acb:	mov    ds:0x6404790c,eax
64026ad0:	mov    DWORD PTR ds:0x64047910,0xb
64026ada:	call   0x64002e50
64026adf:	push   0x64034ec8
64026ae4:	push   0xb
64026ae6:	push   0x64034ebc
64026aeb:	mov    ds:0x64047914,eax
64026af0:	mov    DWORD PTR ds:0x64047918,0xb
64026afa:	call   0x64002e50
64026aff:	push   0x64034e88
64026b04:	push   0xb
64026b06:	push   0x64034e7c
64026b0b:	mov    ds:0x6404791c,eax
64026b10:	mov    DWORD PTR ds:0x64047920,0xb
64026b1a:	call   0x64002e50
64026b1f:	push   0x64034e44
64026b24:	push   0xb
64026b26:	push   0x64034e38
64026b2b:	mov    ds:0x64047924,eax
64026b30:	mov    DWORD PTR ds:0x64047928,0xb
64026b3a:	call   0x64002e50
64026b3f:	add    esp,0x48
64026b42:	push   0x64034df8
64026b47:	push   0xb
64026b49:	push   0x64034dec
64026b4e:	mov    ds:0x6404792c,eax
64026b53:	mov    DWORD PTR ds:0x64047930,0xb
64026b5d:	call   0x64002e50
64026b62:	push   0x64034dac
64026b67:	push   0xb
64026b69:	push   0x64034da0
64026b6e:	mov    ds:0x64047934,eax
64026b73:	mov    DWORD PTR ds:0x64047938,0xb
64026b7d:	call   0x64002e50
64026b82:	push   0x64034d74
64026b87:	push   0xc
64026b89:	push   0x64034d64
64026b8e:	mov    ds:0x6404793c,eax
64026b93:	mov    DWORD PTR ds:0x64047940,0xc
64026b9d:	call   0x64002e50
64026ba2:	push   0x64034d24
64026ba7:	push   0xc
64026ba9:	mov    ds:0x64047944,eax
64026bae:	mov    DWORD PTR ds:0x64047948,0xc
64026bb8:	push   0x64034d14
64026bbd:	call   0x64002e50
64026bc2:	push   0x64034cd8
64026bc7:	push   0xc
64026bc9:	push   0x64034cc8
64026bce:	mov    ds:0x6404794c,eax
64026bd3:	mov    DWORD PTR ds:0x64047950,0xc
64026bdd:	call   0x64002e50
64026be2:	push   0x64034ca0
64026be7:	push   0xc
64026be9:	push   0x64034c90
64026bee:	mov    ds:0x64047954,eax
64026bf3:	mov    DWORD PTR ds:0x64047958,0xc
64026bfd:	call   0x64002e50
64026c02:	add    esp,0x48
64026c05:	push   0x64034c58
64026c0a:	push   0xc
64026c0c:	push   0x64034c48
64026c11:	mov    ds:0x6404795c,eax
64026c16:	mov    DWORD PTR ds:0x64047960,0xc
64026c20:	call   0x64002e50
64026c25:	push   0x64034c1c
64026c2a:	push   0xc
64026c2c:	push   0x64034c0c
64026c31:	mov    ds:0x64047964,eax
64026c36:	mov    DWORD PTR ds:0x64047968,0xc
64026c40:	call   0x64002e50
64026c45:	push   0x64034bd8
64026c4a:	push   0xc
64026c4c:	push   0x64034bc8
64026c51:	mov    ds:0x6404796c,eax
64026c56:	mov    DWORD PTR ds:0x64047970,0xc
64026c60:	call   0x64002e50
64026c65:	push   0x64034ba4
64026c6a:	push   0xc
64026c6c:	push   0x64034b94
64026c71:	mov    ds:0x64047974,eax
64026c76:	mov    DWORD PTR ds:0x64047978,0xc
64026c80:	call   0x64002e50
64026c85:	push   0x64034b70
64026c8a:	push   0xe
64026c8c:	push   0x64034b60
64026c91:	mov    ds:0x6404797c,eax
64026c96:	mov    DWORD PTR ds:0x64047980,0xe
64026ca0:	call   0x64002e50
64026ca5:	push   0x64034b28
64026caa:	push   0xe
64026cac:	push   0x64034b18
64026cb1:	mov    ds:0x64047984,eax
64026cb6:	mov    DWORD PTR ds:0x64047988,0xe
64026cc0:	call   0x64002e50
64026cc5:	add    esp,0x48
64026cc8:	push   0x64034af0
64026ccd:	push   0xe
64026ccf:	push   0x64034ae0
64026cd4:	mov    ds:0x6404798c,eax
64026cd9:	mov    DWORD PTR ds:0x64047990,0xe
64026ce3:	call   0x64002e50
64026ce8:	push   0x64034aa8
64026ced:	push   0xe
64026cef:	push   0x64034a98
64026cf4:	mov    ds:0x64047994,eax
64026cf9:	mov    DWORD PTR ds:0x64047998,0xe
64026d03:	call   0x64002e50
64026d08:	push   0x64034a5c
64026d0d:	push   0xb
64026d0f:	push   0x64034a50
64026d14:	mov    ds:0x6404799c,eax
64026d19:	mov    DWORD PTR ds:0x640479a0,0xb
64026d23:	call   0x64002e50
64026d28:	push   0x64034a2c
64026d2d:	push   0xb
64026d2f:	push   0x64034a20
64026d34:	mov    ds:0x640479a4,eax
64026d39:	mov    DWORD PTR ds:0x640479a8,0xb
64026d43:	call   0x64002e50
64026d48:	push   0x640349fc
64026d4d:	push   0xb
64026d4f:	push   0x640349f0
64026d54:	mov    ds:0x640479ac,eax
64026d59:	mov    DWORD PTR ds:0x640479b0,0xb
64026d63:	call   0x64002e50
64026d68:	push   0x640349b0
64026d6d:	push   0xb
64026d6f:	push   0x640349a4
64026d74:	mov    ds:0x640479b4,eax
64026d79:	mov    DWORD PTR ds:0x640479b8,0xb
64026d83:	call   0x64002e50
64026d88:	add    esp,0x48
64026d8b:	push   0x64034970
64026d90:	push   0xb
64026d92:	push   0x64034964
64026d97:	mov    ds:0x640479bc,eax
64026d9c:	mov    DWORD PTR ds:0x640479c0,0xb
64026da6:	call   0x64002e50
64026dab:	push   0x64034940
64026db0:	push   0xb
64026db2:	push   0x64034934
64026db7:	mov    ds:0x640479c4,eax
64026dbc:	mov    DWORD PTR ds:0x640479c8,0xb
64026dc6:	call   0x64002e50
64026dcb:	push   0x64034900
64026dd0:	push   0xb
64026dd2:	push   0x640348f4
64026dd7:	mov    ds:0x640479cc,eax
64026ddc:	mov    DWORD PTR ds:0x640479d0,0xb
64026de6:	call   0x64002e50
64026deb:	push   0x640348bc
64026df0:	push   0xb
64026df2:	push   0x640348b0
64026df7:	mov    ds:0x640479d4,eax
64026dfc:	mov    DWORD PTR ds:0x640479d8,0xb
64026e06:	call   0x64002e50
64026e0b:	push   0x6403488c
64026e10:	push   0xc
64026e12:	push   0x6403487c
64026e17:	mov    ds:0x640479dc,eax
64026e1c:	mov    DWORD PTR ds:0x640479e0,0xc
64026e26:	call   0x64002e50
64026e2b:	push   0x64034844
64026e30:	push   0xc
64026e32:	push   0x64034834
64026e37:	mov    ds:0x640479e4,eax
64026e3c:	mov    DWORD PTR ds:0x640479e8,0xc
64026e46:	call   0x64002e50
64026e4b:	add    esp,0x48
64026e4e:	push   0x64034810
64026e53:	push   0xc
64026e55:	push   0x64034800
64026e5a:	mov    ds:0x640479ec,eax
64026e5f:	mov    DWORD PTR ds:0x640479f0,0xc
64026e69:	call   0x64002e50
64026e6e:	push   0x640347d0
64026e73:	push   0xc
64026e75:	push   0x640347c0
64026e7a:	mov    ds:0x640479f4,eax
64026e7f:	mov    DWORD PTR ds:0x640479f8,0xc
64026e89:	call   0x64002e50
64026e8e:	push   0x6403479c
64026e93:	push   0xc
64026e95:	push   0x6403478c
64026e9a:	mov    ds:0x640479fc,eax
64026e9f:	mov    DWORD PTR ds:0x64047a00,0xc
64026ea9:	call   0x64002e50
64026eae:	push   0x64034764
64026eb3:	push   0xc
64026eb5:	push   0x64034754
64026eba:	mov    ds:0x64047a04,eax
64026ebf:	mov    DWORD PTR ds:0x64047a08,0xc
64026ec9:	call   0x64002e50
64026ece:	push   0x64034714
64026ed3:	push   0xc
64026ed5:	push   0x64034704
64026eda:	mov    ds:0x64047a0c,eax
64026edf:	mov    DWORD PTR ds:0x64047a10,0xc
64026ee9:	call   0x64002e50
64026eee:	push   0x640346cc
64026ef3:	push   0xc
64026ef5:	push   0x640346bc
64026efa:	mov    ds:0x64047a14,eax
64026eff:	mov    DWORD PTR ds:0x64047a18,0xc
64026f09:	call   0x64002e50
64026f0e:	add    esp,0x48
64026f11:	push   0x64034690
64026f16:	push   0xe
64026f18:	push   0x64034680
64026f1d:	mov    ds:0x64047a1c,eax
64026f22:	mov    DWORD PTR ds:0x64047a20,0xe
64026f2c:	call   0x64002e50
64026f31:	push   0x64034640
64026f36:	push   0xe
64026f38:	push   0x64034630
64026f3d:	mov    ds:0x64047a24,eax
64026f42:	mov    DWORD PTR ds:0x64047a28,0xe
64026f4c:	call   0x64002e50
64026f51:	push   0x6403460c
64026f56:	push   0xe
64026f58:	push   0x640345fc
64026f5d:	mov    ds:0x64047a2c,eax
64026f62:	mov    DWORD PTR ds:0x64047a30,0xe
64026f6c:	call   0x64002e50
64026f71:	push   0x640345d4
64026f76:	push   0xe
64026f78:	push   0x640345c4
64026f7d:	mov    ds:0x64047a34,eax
64026f82:	mov    DWORD PTR ds:0x64047a38,0xe
64026f8c:	call   0x64002e50
64026f91:	push   0x6403459c
64026f96:	push   0xb
64026f98:	push   0x64034590
64026f9d:	mov    ds:0x64047a3c,eax
64026fa2:	mov    DWORD PTR ds:0x64047a40,0xb
64026fac:	call   0x64002e50
64026fb1:	push   0x64034564
64026fb6:	push   0xb
64026fb8:	push   0x64034558
64026fbd:	mov    ds:0x64047a44,eax
64026fc2:	mov    DWORD PTR ds:0x64047a48,0xb
64026fcc:	call   0x64002e50
64026fd1:	add    esp,0x48
64026fd4:	push   0x64034518
64026fd9:	push   0xb
64026fdb:	push   0x64034508
64026fe0:	mov    ds:0x64047a4c,eax
64026fe5:	mov    DWORD PTR ds:0x64047a50,0xb
64026fef:	call   0x64002e50
64026ff4:	push   0x640344d4
64026ff9:	push   0xb
64026ffb:	push   0x640344c8
64027000:	mov    ds:0x64047a54,eax
64027005:	mov    DWORD PTR ds:0x64047a58,0xb
6402700f:	call   0x64002e50
64027014:	push   0x64034494
64027019:	push   0xb
6402701b:	push   0x64034488
64027020:	mov    ds:0x64047a5c,eax
64027025:	mov    DWORD PTR ds:0x64047a60,0xb
6402702f:	call   0x64002e50
64027034:	push   0x6403445c
64027039:	push   0xb
6402703b:	push   0x64034450
64027040:	mov    ds:0x64047a64,eax
64027045:	mov    DWORD PTR ds:0x64047a68,0xb
6402704f:	call   0x64002e50
64027054:	push   0x64034410
64027059:	push   0xb
6402705b:	push   0x64034404
64027060:	mov    ds:0x64047a6c,eax
64027065:	mov    DWORD PTR ds:0x64047a70,0xb
6402706f:	call   0x64002e50
64027074:	push   0x640343d4
64027079:	push   0xb
6402707b:	push   0x640343c8
64027080:	mov    ds:0x64047a74,eax
64027085:	mov    DWORD PTR ds:0x64047a78,0xb
6402708f:	call   0x64002e50
64027094:	add    esp,0x48
64027097:	push   0x640343a4
6402709c:	push   0xc
6402709e:	push   0x64034394
640270a3:	mov    ds:0x64047a7c,eax
640270a8:	mov    DWORD PTR ds:0x64047a80,0xc
640270b2:	call   0x64002e50
640270b7:	mov    ds:0x64047a84,eax
640270bc:	push   0x64034370
640270c1:	push   0xc
640270c3:	push   0x64034360
640270c8:	mov    DWORD PTR ds:0x64047a88,0xc
640270d2:	call   0x64002e50
640270d7:	push   0x6403432c
640270dc:	push   0xc
640270de:	push   0x6403431c
640270e3:	mov    ds:0x64047a8c,eax
640270e8:	mov    DWORD PTR ds:0x64047a90,0xc
640270f2:	call   0x64002e50
640270f7:	push   0x640342f4
640270fc:	push   0xc
640270fe:	push   0x640342e4
64027103:	mov    ds:0x64047a94,eax
64027108:	mov    DWORD PTR ds:0x64047a98,0xc
64027112:	call   0x64002e50
64027117:	push   0x640342b0
6402711c:	push   0xc
6402711e:	push   0x640342a0
64027123:	mov    ds:0x64047a9c,eax
64027128:	mov    DWORD PTR ds:0x64047aa0,0xc
64027132:	call   0x64002e50
64027137:	push   0x64034268
6402713c:	push   0xc
6402713e:	push   0x64034258
64027143:	mov    ds:0x64047aa4,eax
64027148:	mov    DWORD PTR ds:0x64047aa8,0xc
64027152:	call   0x64002e50
64027157:	add    esp,0x48
6402715a:	push   0x6403422c
6402715f:	push   0xc
64027161:	push   0x6403421c
64027166:	mov    ds:0x64047aac,eax
6402716b:	mov    DWORD PTR ds:0x64047ab0,0xc
64027175:	call   0x64002e50
6402717a:	push   0x640341e0
6402717f:	push   0xc
64027181:	push   0x640341d0
64027186:	mov    ds:0x64047ab4,eax
6402718b:	mov    DWORD PTR ds:0x64047ab8,0xc
64027195:	call   0x64002e50
6402719a:	push   0x640341a0
6402719f:	push   esi
640271a0:	push   0x64034198
640271a5:	mov    ds:0x64047abc,eax
640271aa:	mov    DWORD PTR ds:0x64047ac0,esi
640271b0:	call   0x64002e50
640271b5:	push   0x64034160
640271ba:	push   edi
640271bb:	push   0x64034158
640271c0:	mov    ds:0x64047ac4,eax
640271c5:	mov    DWORD PTR ds:0x64047ac8,edi
640271cb:	call   0x64002e50
640271d0:	push   0x6403411c
640271d5:	push   esi
640271d6:	push   0x64034114
640271db:	mov    ds:0x64047acc,eax
640271e0:	mov    DWORD PTR ds:0x64047ad0,esi
640271e6:	call   0x64002e50
640271eb:	push   0x640340e8
640271f0:	push   edi
640271f1:	push   0x640340e0
640271f6:	mov    ds:0x64047ad4,eax
640271fb:	mov    DWORD PTR ds:0x64047ad8,edi
64027201:	call   0x64002e50
64027206:	add    esp,0x48
64027209:	push   0x640340ac
6402720e:	push   0xa
64027210:	push   0x640340a0
64027215:	mov    ds:0x64047adc,eax
6402721a:	mov    DWORD PTR ds:0x64047ae0,0xa
64027224:	call   0x64002e50
64027229:	push   0x6403407c
6402722e:	push   0xb
64027230:	push   0x64034070
64027235:	mov    ds:0x64047ae4,eax
6402723a:	mov    DWORD PTR ds:0x64047ae8,0xb
64027244:	call   0x64002e50
64027249:	mov    ds:0x64047aec,eax
6402724e:	mov    DWORD PTR ds:0x64047af0,esi
64027254:	push   0x64034030
64027259:	push   esi
6402725a:	push   0x64034028
6402725f:	call   0x64002e50
64027264:	push   0x64033ff8
64027269:	push   edi
6402726a:	push   0x64033ff0
6402726f:	mov    ds:0x64047af4,eax
64027274:	mov    DWORD PTR ds:0x64047af8,edi
6402727a:	call   0x64002e50
6402727f:	push   0x64033fcc
64027284:	push   0xa
64027286:	push   0x64033fc0
6402728b:	mov    ds:0x64047afc,eax
64027290:	mov    DWORD PTR ds:0x64047b00,0xa
6402729a:	call   0x64002e50
6402729f:	push   0x64033f80
640272a4:	push   0xb
640272a6:	push   0x64033f74
640272ab:	mov    ds:0x64047b04,eax
640272b0:	mov    DWORD PTR ds:0x64047b08,0xb
640272ba:	call   0x64002e50
640272bf:	add    esp,0x48
640272c2:	push   0x64033f44
640272c7:	push   ebx
640272c8:	push   0x64033f3c
640272cd:	mov    ds:0x64047b0c,eax
640272d2:	mov    DWORD PTR ds:0x64047b10,ebx
640272d8:	call   0x64002e50
640272dd:	push   0x64033efc
640272e2:	push   ebx
640272e3:	push   0x64033ef4
640272e8:	mov    ds:0x64047b14,eax
640272ed:	mov    DWORD PTR ds:0x64047b18,ebx
640272f3:	call   0x64002e50
640272f8:	push   0x64033eb8
640272fd:	push   0xa
640272ff:	push   0x64033eac
64027304:	mov    ds:0x64047b1c,eax
64027309:	mov    DWORD PTR ds:0x64047b20,0xa
64027313:	call   0x64002e50
64027318:	push   0x64033e84
6402731d:	push   edi
6402731e:	push   0x64033e7c
64027323:	mov    ds:0x64047b24,eax
64027328:	mov    DWORD PTR ds:0x64047b28,edi
6402732e:	call   0x64002e50
64027333:	push   0x64033e58
64027338:	push   ebp
64027339:	push   0x64033e4c
6402733e:	mov    ds:0x64047b2c,eax
64027343:	mov    DWORD PTR ds:0x64047b30,ebp
64027349:	call   0x64002e50
6402734e:	push   0x64033e10
64027353:	push   edi
64027354:	push   0x64033e08
64027359:	mov    ds:0x64047b34,eax
6402735e:	mov    DWORD PTR ds:0x64047b38,edi
64027364:	call   0x64002e50
64027369:	add    esp,0x48
6402736c:	push   0x64033ddc
64027371:	push   ebp
64027372:	push   0x64033dd0
64027377:	mov    ds:0x64047b3c,eax
6402737c:	mov    DWORD PTR ds:0x64047b40,ebp
64027382:	call   0x64002e50
64027387:	push   0x64033d94
6402738c:	push   edi
6402738d:	push   0x64033d8c
64027392:	mov    ds:0x64047b44,eax
64027397:	mov    DWORD PTR ds:0x64047b48,edi
6402739d:	call   0x64002e50
640273a2:	push   0x64033d68
640273a7:	push   ebp
640273a8:	push   0x64033d5c
640273ad:	mov    ds:0x64047b4c,eax
640273b2:	mov    DWORD PTR ds:0x64047b50,ebp
640273b8:	call   0x64002e50
640273bd:	mov    ds:0x64047b54,eax
640273c2:	mov    DWORD PTR ds:0x64047b58,edi
640273c8:	push   0x64033d24
640273cd:	push   edi
640273ce:	push   0x64033d1c
640273d3:	call   0x64002e50
640273d8:	push   0x64033cec
640273dd:	push   ebp
640273de:	push   0x64033ce0
640273e3:	mov    ds:0x64047b5c,eax
640273e8:	mov    DWORD PTR ds:0x64047b60,ebp
640273ee:	call   0x64002e50
640273f3:	push   0x64033ca0
640273f8:	push   edi
640273f9:	push   0x64033c94
640273fe:	mov    ds:0x64047b64,eax
64027403:	mov    DWORD PTR ds:0x64047b68,edi
64027409:	call   0x64002e50
6402740e:	add    esp,0x48
64027411:	push   0x64033c5c
64027416:	push   ebp
64027417:	push   0x64033c50
6402741c:	mov    ds:0x64047b6c,eax
64027421:	mov    DWORD PTR ds:0x64047b70,ebp
64027427:	call   0x64002e50
6402742c:	push   0x64033c24
64027431:	push   edi
64027432:	push   0x64033c1c
64027437:	mov    ds:0x64047b74,eax
6402743c:	mov    DWORD PTR ds:0x64047b78,edi
64027442:	call   0x64002e50
64027447:	push   0x64033bdc
6402744c:	push   ebp
6402744d:	push   0x64033bd0
64027452:	mov    ds:0x64047b7c,eax
64027457:	mov    DWORD PTR ds:0x64047b80,ebp
6402745d:	call   0x64002e50
64027462:	push   0x64033ba0
64027467:	push   edi
64027468:	push   0x64033b98
6402746d:	mov    ds:0x64047b84,eax
64027472:	mov    DWORD PTR ds:0x64047b88,edi
64027478:	call   0x64002e50
6402747d:	push   0x64033b58
64027482:	push   0x9
64027484:	push   0x64033b4c
64027489:	mov    ds:0x64047b8c,eax
6402748e:	mov    DWORD PTR ds:0x64047b90,0x9
64027498:	call   0x64002e50
6402749d:	push   0x64033b1c
640274a2:	push   edi
640274a3:	push   0x64033b14
640274a8:	mov    ds:0x64047b94,eax
640274ad:	mov    DWORD PTR ds:0x64047b98,edi
640274b3:	call   0x64002e50
640274b8:	add    esp,0x48
640274bb:	push   0x64033ae0
640274c0:	push   ebp
640274c1:	push   0x64033ad4
640274c6:	mov    ds:0x64047b9c,eax
640274cb:	mov    DWORD PTR ds:0x64047ba0,ebp
640274d1:	call   0x64002e50
640274d6:	push   0x64033aa0
640274db:	push   esi
640274dc:	push   0x64033a98
640274e1:	mov    ds:0x64047ba4,eax
640274e6:	mov    DWORD PTR ds:0x64047ba8,esi
640274ec:	call   0x64002e50
640274f1:	push   0x64033a60
640274f6:	push   edi
640274f7:	push   0x64033a58
640274fc:	mov    ds:0x64047bac,eax
64027501:	mov    DWORD PTR ds:0x64047bb0,edi
64027507:	call   0x64002e50
6402750c:	push   0x64033a24
64027511:	push   esi
64027512:	push   0x64033a1c
64027517:	mov    ds:0x64047bb4,eax
6402751c:	mov    DWORD PTR ds:0x64047bb8,esi
64027522:	call   0x64002e50
64027527:	push   0x640339e4
6402752c:	mov    ds:0x64047bbc,eax
64027531:	mov    DWORD PTR ds:0x64047bc0,edi
64027537:	push   edi
64027538:	push   0x640339dc
6402753d:	call   0x64002e50
64027542:	push   0x640339b0
64027547:	push   esi
64027548:	push   0x640339a8
6402754d:	mov    ds:0x64047bc4,eax
64027552:	mov    DWORD PTR ds:0x64047bc8,esi
64027558:	call   0x64002e50
6402755d:	add    esp,0x48
64027560:	push   0x64033978
64027565:	push   esi
64027566:	push   0x64033970
6402756b:	mov    ds:0x64047bcc,eax
64027570:	mov    DWORD PTR ds:0x64047bd0,esi
64027576:	call   0x64002e50
6402757b:	push   0x64033930
64027580:	push   edi
64027581:	push   0x64033924
64027586:	mov    ds:0x64047bd4,eax
6402758b:	mov    DWORD PTR ds:0x64047bd8,edi
64027591:	call   0x64002e50
64027596:	push   0x640338f0
6402759b:	push   0x9
6402759d:	push   0x640338e4
640275a2:	mov    ds:0x64047bdc,eax
640275a7:	mov    DWORD PTR ds:0x64047be0,0x9
640275b1:	call   0x64002e50
640275b6:	push   0x640338b4
640275bb:	push   0xa
640275bd:	push   0x640338a8
640275c2:	mov    ds:0x64047be4,eax
640275c7:	mov    DWORD PTR ds:0x64047be8,0xa
640275d1:	call   0x64002e50
640275d6:	push   0x64033884
640275db:	push   0xb
640275dd:	push   0x64033878
640275e2:	mov    ds:0x64047bec,eax
640275e7:	mov    DWORD PTR ds:0x64047bf0,0xb
640275f1:	call   0x64002e50
640275f6:	push   0x64033840
640275fb:	push   0xc
640275fd:	push   0x64033830
64027602:	mov    ds:0x64047bf4,eax
64027607:	mov    DWORD PTR ds:0x64047bf8,0xc
64027611:	call   0x64002e50
64027616:	add    esp,0x48
64027619:	push   0x64033808
6402761e:	push   esi
6402761f:	push   0x64033800
64027624:	mov    ds:0x64047bfc,eax
64027629:	mov    DWORD PTR ds:0x64047c00,esi
6402762f:	call   0x64002e50
64027634:	push   0x640337d0
64027639:	push   edi
6402763a:	push   0x640337c8
6402763f:	mov    ds:0x64047c04,eax
64027644:	mov    DWORD PTR ds:0x64047c08,edi
6402764a:	call   0x64002e50
6402764f:	push   0x6403379c
64027654:	push   ebp
64027655:	push   0x64033790
6402765a:	mov    ds:0x64047c0c,eax
6402765f:	mov    DWORD PTR ds:0x64047c10,ebp
64027665:	call   0x64002e50
6402766a:	push   0x64033754
6402766f:	push   0x9
64027671:	push   0x64033748
64027676:	mov    ds:0x64047c14,eax
6402767b:	mov    DWORD PTR ds:0x64047c18,0x9
64027685:	call   0x64002e50
6402768a:	push   0x64033720
6402768f:	push   esi
64027690:	push   0x64033718
64027695:	mov    ds:0x64047c1c,eax
6402769a:	mov    DWORD PTR ds:0x64047c20,esi
640276a0:	call   0x64002e50
640276a5:	push   0x640336e8
640276aa:	push   esi
640276ab:	mov    ds:0x64047c24,eax
640276b0:	mov    DWORD PTR ds:0x64047c28,esi
640276b6:	push   0x640336e0
640276bb:	call   0x64002e50
640276c0:	add    esp,0x48
640276c3:	push   0x640336b4
640276c8:	push   edi
640276c9:	push   0x640336ac
640276ce:	mov    ds:0x64047c2c,eax
640276d3:	mov    DWORD PTR ds:0x64047c30,edi
640276d9:	call   0x64002e50
640276de:	push   0x6403367c
640276e3:	push   edi
640276e4:	push   0x64033674
640276e9:	mov    ds:0x64047c34,eax
640276ee:	mov    DWORD PTR ds:0x64047c38,edi
640276f4:	call   0x64002e50
640276f9:	push   0x64033648
640276fe:	push   0x4
64027700:	push   0x64033640
64027705:	mov    ds:0x64047c3c,eax
6402770a:	mov    DWORD PTR ds:0x64047c40,0x4
64027714:	call   0x64002e50
64027719:	push   0x64033600
6402771e:	push   ebx
6402771f:	push   0x640335f8
64027724:	mov    ds:0x64047c44,eax
64027729:	mov    DWORD PTR ds:0x64047c48,ebx
6402772f:	call   0x64002e50
64027734:	push   0x640335cc
64027739:	push   0x4
6402773b:	push   0x640335c4
64027740:	mov    ds:0x64047c4c,eax
64027745:	mov    DWORD PTR ds:0x64047c50,0x4
6402774f:	call   0x64002e50
64027754:	push   0x64033594
64027759:	push   ebx
6402775a:	push   0x6403358c
6402775f:	mov    ds:0x64047c54,eax
64027764:	mov    DWORD PTR ds:0x64047c58,ebx
6402776a:	call   0x64002e50
6402776f:	add    esp,0x48
64027772:	push   0x64033550
64027777:	push   edi
64027778:	push   0x64033548
6402777d:	mov    ds:0x64047c5c,eax
64027782:	mov    DWORD PTR ds:0x64047c60,edi
64027788:	call   0x64002e50
6402778d:	push   0x64033510
64027792:	push   ebp
64027793:	push   0x64033504
64027798:	mov    ds:0x64047c64,eax
6402779d:	mov    DWORD PTR ds:0x64047c68,ebp
640277a3:	call   0x64002e50
640277a8:	push   0x640334c4
640277ad:	push   0x9
640277af:	push   0x640334b8
640277b4:	mov    ds:0x64047c6c,eax
640277b9:	mov    DWORD PTR ds:0x64047c70,0x9
640277c3:	call   0x64002e50
640277c8:	push   0x64033480
640277cd:	push   0xa
640277cf:	push   0x64033474
640277d4:	mov    ds:0x64047c74,eax
640277d9:	mov    DWORD PTR ds:0x64047c78,0xa
640277e3:	call   0x64002e50
640277e8:	push   0x6403344c
640277ed:	push   0x9
640277ef:	push   0x64033440
640277f4:	mov    ds:0x64047c7c,eax
640277f9:	mov    DWORD PTR ds:0x64047c80,0x9
64027803:	call   0x64002e50
64027808:	push   0x64033414
6402780d:	push   0x9
6402780f:	push   0x64033408
64027814:	mov    ds:0x64047c84,eax
64027819:	mov    DWORD PTR ds:0x64047c88,0x9
64027823:	call   0x64002e50
64027828:	add    esp,0x48
6402782b:	push   0x640333dc
64027830:	push   0x9
64027832:	mov    ds:0x64047c8c,eax
64027837:	mov    DWORD PTR ds:0x64047c90,0x9
64027841:	push   0x640333d0
64027846:	call   0x64002e50
6402784b:	push   0x6403339c
64027850:	push   0x9
64027852:	push   0x64033390
64027857:	mov    ds:0x64047c94,eax
6402785c:	mov    DWORD PTR ds:0x64047c98,0x9
64027866:	call   0x64002e50
6402786b:	push   0x64033360
64027870:	push   0xa
64027872:	push   0x64033354
64027877:	mov    ds:0x64047c9c,eax
6402787c:	mov    DWORD PTR ds:0x64047ca0,0xa
64027886:	call   0x64002e50
6402788b:	push   0x64033324
64027890:	push   0x9
64027892:	push   0x64033318
64027897:	mov    ds:0x64047ca4,eax
6402789c:	mov    DWORD PTR ds:0x64047ca8,0x9
640278a6:	call   0x64002e50
640278ab:	push   0x640332e4
640278b0:	push   0x9
640278b2:	push   0x640332d8
640278b7:	mov    ds:0x64047cac,eax
640278bc:	mov    DWORD PTR ds:0x64047cb0,0x9
640278c6:	call   0x64002e50
640278cb:	push   0x640332a4
640278d0:	push   0x9
640278d2:	push   0x64033298
640278d7:	mov    ds:0x64047cb4,eax
640278dc:	mov    DWORD PTR ds:0x64047cb8,0x9
640278e6:	call   0x64002e50
640278eb:	add    esp,0x48
640278ee:	push   0x64033270
640278f3:	push   0xa
640278f5:	push   0x64033264
640278fa:	mov    ds:0x64047cbc,eax
640278ff:	mov    DWORD PTR ds:0x64047cc0,0xa
64027909:	call   0x64002e50
6402790e:	push   0x64033224
64027913:	push   0x9
64027915:	push   0x64033218
6402791a:	mov    ds:0x64047cc4,eax
6402791f:	mov    DWORD PTR ds:0x64047cc8,0x9
64027929:	call   0x64002e50
6402792e:	push   0x640331dc
64027933:	push   0xa
64027935:	push   0x640331d0
6402793a:	mov    ds:0x64047ccc,eax
6402793f:	mov    DWORD PTR ds:0x64047cd0,0xa
64027949:	call   0x64002e50
6402794e:	push   0x640331ac
64027953:	push   0xf
64027955:	push   0x6403319c
6402795a:	mov    ds:0x64047cd4,eax
6402795f:	mov    DWORD PTR ds:0x64047cd8,0xf
64027969:	call   0x64002e50
6402796e:	push   0x64033168
64027973:	push   0x10
64027975:	push   0x64033154
6402797a:	mov    ds:0x64047cdc,eax
6402797f:	mov    DWORD PTR ds:0x64047ce0,0x10
64027989:	call   0x64002e50
6402798e:	push   0x6403312c
64027993:	push   ebp
64027994:	push   0x64033120
64027999:	mov    ds:0x64047ce4,eax
6402799e:	mov    DWORD PTR ds:0x64047ce8,ebp
640279a4:	call   0x64002e50
640279a9:	add    esp,0x48
640279ac:	push   0x640330fc
640279b1:	push   ebp
640279b2:	push   0x640330f0
640279b7:	mov    ds:0x64047cec,eax
640279bc:	mov    DWORD PTR ds:0x64047cf0,ebp
640279c2:	call   0x64002e50
640279c7:	push   0x640330c8
640279cc:	push   0x9
640279ce:	push   0x640330bc
640279d3:	mov    ds:0x64047cf4,eax
640279d8:	mov    DWORD PTR ds:0x64047cf8,0x9
640279e2:	call   0x64002e50
640279e7:	push   0x64033088
640279ec:	push   0x9
640279ee:	push   0x6403307c
640279f3:	mov    ds:0x64047cfc,eax
640279f8:	mov    DWORD PTR ds:0x64047d00,0x9
64027a02:	call   0x64002e50
64027a07:	push   0x64033058
64027a0c:	push   esi
64027a0d:	push   0x64033050
64027a12:	mov    ds:0x64047d04,eax
64027a17:	mov    DWORD PTR ds:0x64047d08,esi
64027a1d:	call   0x64002e50
64027a22:	push   0x64033014
64027a27:	push   esi
64027a28:	push   0x6403300c
64027a2d:	mov    ds:0x64047d0c,eax
64027a32:	mov    DWORD PTR ds:0x64047d10,esi
64027a38:	call   0x64002e50
64027a3d:	push   0x64032fcc
64027a42:	push   esi
64027a43:	push   0x64032fc4
64027a48:	mov    ds:0x64047d14,eax
64027a4d:	mov    DWORD PTR ds:0x64047d18,esi
64027a53:	call   0x64002e50
64027a58:	add    esp,0x48
64027a5b:	push   0x64032f88
64027a60:	push   esi
64027a61:	push   0x64032f80
64027a66:	mov    ds:0x64047d1c,eax
64027a6b:	mov    DWORD PTR ds:0x64047d20,esi
64027a71:	call   0x64002e50
64027a76:	push   0x64032f58
64027a7b:	push   edi
64027a7c:	push   0x64032f50
64027a81:	mov    ds:0x64047d24,eax
64027a86:	mov    DWORD PTR ds:0x64047d28,edi
64027a8c:	call   0x64002e50
64027a91:	push   0x64032f1c
64027a96:	push   edi
64027a97:	push   0x64032f14
64027a9c:	mov    ds:0x64047d2c,eax
64027aa1:	mov    DWORD PTR ds:0x64047d30,edi
64027aa7:	call   0x64002e50
64027aac:	push   0x64032ee8
64027ab1:	push   edi
64027ab2:	push   0x64032ee0
64027ab7:	mov    ds:0x64047d34,eax
64027abc:	mov    DWORD PTR ds:0x64047d38,edi
64027ac2:	call   0x64002e50
64027ac7:	push   0x64032eb0
64027acc:	push   edi
64027acd:	push   0x64032ea8
64027ad2:	mov    ds:0x64047d3c,eax
64027ad7:	mov    DWORD PTR ds:0x64047d40,edi
64027add:	call   0x64002e50
64027ae2:	push   0x64032e68
64027ae7:	push   edi
64027ae8:	push   0x64032e60
64027aed:	mov    ds:0x64047d44,eax
64027af2:	mov    DWORD PTR ds:0x64047d48,edi
64027af8:	call   0x64002e50
64027afd:	add    esp,0x48
64027b00:	push   0x64032e30
64027b05:	push   edi
64027b06:	push   0x64032e28
64027b0b:	mov    ds:0x64047d4c,eax
64027b10:	mov    DWORD PTR ds:0x64047d50,edi
64027b16:	call   0x64002e50
64027b1b:	push   0x64032df0
64027b20:	push   ebp
64027b21:	push   0x64032de4
64027b26:	mov    ds:0x64047d54,eax
64027b2b:	mov    DWORD PTR ds:0x64047d58,ebp
64027b31:	call   0x64002e50
64027b36:	push   0x64032db4
64027b3b:	push   ebp
64027b3c:	push   0x64032da8
64027b41:	mov    ds:0x64047d5c,eax
64027b46:	mov    DWORD PTR ds:0x64047d60,ebp
64027b4c:	call   0x64002e50
64027b51:	mov    ds:0x64047d64,eax
64027b56:	push   0x64032d74
64027b5b:	push   ebx
64027b5c:	push   0x64032d6c
64027b61:	mov    DWORD PTR ds:0x64047d68,ebx
64027b67:	call   0x64002e50
64027b6c:	push   0x64032d44
64027b71:	push   ebx
64027b72:	push   0x64032d3c
64027b77:	mov    ds:0x64047d6c,eax
64027b7c:	mov    DWORD PTR ds:0x64047d70,ebx
64027b82:	call   0x64002e50
64027b87:	push   0x64032d18
64027b8c:	push   esi
64027b8d:	push   0x64032d10
64027b92:	mov    ds:0x64047d74,eax
64027b97:	mov    DWORD PTR ds:0x64047d78,esi
64027b9d:	call   0x64002e50
64027ba2:	add    esp,0x48
64027ba5:	push   0x64032cec
64027baa:	push   esi
64027bab:	push   0x64032ce4
64027bb0:	mov    ds:0x64047d7c,eax
64027bb5:	mov    DWORD PTR ds:0x64047d80,esi
64027bbb:	call   0x64002e50
64027bc0:	push   0x64032ca8
64027bc5:	push   ebx
64027bc6:	push   0x64032ca0
64027bcb:	mov    ds:0x64047d84,eax
64027bd0:	mov    DWORD PTR ds:0x64047d88,ebx
64027bd6:	call   0x64002e50
64027bdb:	push   0x64032c7c
64027be0:	push   ebx
64027be1:	push   0x64032c74
64027be6:	mov    ds:0x64047d8c,eax
64027beb:	mov    DWORD PTR ds:0x64047d90,ebx
64027bf1:	call   0x64002e50
64027bf6:	push   0x64032c50
64027bfb:	push   esi
64027bfc:	push   0x64032c48
64027c01:	mov    ds:0x64047d94,eax
64027c06:	mov    DWORD PTR ds:0x64047d98,esi
64027c0c:	call   0x64002e50
64027c11:	push   0x64032c08
64027c16:	push   esi
64027c17:	push   0x64032c00
64027c1c:	mov    ds:0x64047d9c,eax
64027c21:	mov    DWORD PTR ds:0x64047da0,esi
64027c27:	call   0x64002e50
64027c2c:	push   0x64032bcc
64027c31:	push   esi
64027c32:	push   0x64032bc4
64027c37:	mov    ds:0x64047da4,eax
64027c3c:	mov    DWORD PTR ds:0x64047da8,esi
64027c42:	call   0x64002e50
64027c47:	add    esp,0x48
64027c4a:	push   0x64032b88
64027c4f:	push   esi
64027c50:	push   0x64032b80
64027c55:	mov    ds:0x64047dac,eax
64027c5a:	mov    DWORD PTR ds:0x64047db0,esi
64027c60:	call   0x64002e50
64027c65:	push   0x64032b40
64027c6a:	push   edi
64027c6b:	push   0x64032b38
64027c70:	mov    ds:0x64047db4,eax
64027c75:	mov    DWORD PTR ds:0x64047db8,edi
64027c7b:	call   0x64002e50
64027c80:	push   0x64032af8
64027c85:	push   edi
64027c86:	push   0x64032aec
64027c8b:	mov    ds:0x64047dbc,eax
64027c90:	mov    DWORD PTR ds:0x64047dc0,edi
64027c96:	call   0x64002e50
64027c9b:	push   0x64032ac8
64027ca0:	push   0x4
64027ca2:	push   0x64032ac0
64027ca7:	mov    ds:0x64047dc4,eax
64027cac:	mov    DWORD PTR ds:0x64047dc8,0x4
64027cb6:	call   0x64002e50
64027cbb:	mov    ds:0x64047dcc,eax
64027cc0:	mov    DWORD PTR ds:0x64047dd0,0x4
64027cca:	push   0x64032a84
64027ccf:	push   0x4
64027cd1:	push   0x64032a7c
64027cd6:	call   0x64002e50
64027cdb:	push   0x64032a4c
64027ce0:	push   ebx
64027ce1:	push   0x64032a44
64027ce6:	mov    ds:0x64047dd4,eax
64027ceb:	mov    DWORD PTR ds:0x64047dd8,ebx
64027cf1:	call   0x64002e50
64027cf6:	add    esp,0x48
64027cf9:	push   0x64032a0c
64027cfe:	push   ebx
64027cff:	push   0x64032a04
64027d04:	mov    ds:0x64047ddc,eax
64027d09:	mov    DWORD PTR ds:0x64047de0,ebx
64027d0f:	call   0x64002e50
64027d14:	push   0x640329c8
64027d19:	push   ebx
64027d1a:	push   0x640329c0
64027d1f:	mov    ds:0x64047de4,eax
64027d24:	mov    DWORD PTR ds:0x64047de8,ebx
64027d2a:	call   0x64002e50
64027d2f:	push   0x64032990
64027d34:	push   ebx
64027d35:	push   0x64032988
64027d3a:	mov    ds:0x64047dec,eax
64027d3f:	mov    DWORD PTR ds:0x64047df0,ebx
64027d45:	call   0x64002e50
64027d4a:	push   0x64032950
64027d4f:	push   esi
64027d50:	push   0x64032948
64027d55:	mov    ds:0x64047df4,eax
64027d5a:	mov    DWORD PTR ds:0x64047df8,esi
64027d60:	call   0x64002e50
64027d65:	push   0x6403291c
64027d6a:	push   esi
64027d6b:	push   0x64032914
64027d70:	mov    ds:0x64047dfc,eax
64027d75:	mov    DWORD PTR ds:0x64047e00,esi
64027d7b:	call   0x64002e50
64027d80:	push   0x640328ec
64027d85:	push   ebx
64027d86:	push   0x640328e4
64027d8b:	mov    ds:0x64047e04,eax
64027d90:	mov    DWORD PTR ds:0x64047e08,ebx
64027d96:	call   0x64002e50
64027d9b:	add    esp,0x48
64027d9e:	push   0x640328a8
64027da3:	push   ebx
64027da4:	push   0x640328a0
64027da9:	mov    ds:0x64047e0c,eax
64027dae:	mov    DWORD PTR ds:0x64047e10,ebx
64027db4:	call   0x64002e50
64027db9:	push   0x64032864
64027dbe:	push   ebx
64027dbf:	push   0x6403285c
64027dc4:	mov    ds:0x64047e14,eax
64027dc9:	mov    DWORD PTR ds:0x64047e18,ebx
64027dcf:	call   0x64002e50
64027dd4:	push   0x64032824
64027dd9:	push   ebx
64027dda:	push   0x6403281c
64027ddf:	mov    ds:0x64047e1c,eax
64027de4:	mov    DWORD PTR ds:0x64047e20,ebx
64027dea:	call   0x64002e50
64027def:	push   0x640327f8
64027df4:	push   esi
64027df5:	push   0x640327f0
64027dfa:	mov    ds:0x64047e24,eax
64027dff:	mov    DWORD PTR ds:0x64047e28,esi
64027e05:	call   0x64002e50
64027e0a:	push   0x640327c0
64027e0f:	push   esi
64027e10:	push   0x640327b8
64027e15:	mov    ds:0x64047e2c,eax
64027e1a:	mov    DWORD PTR ds:0x64047e30,esi
64027e20:	call   0x64002e50
64027e25:	mov    ds:0x64047e34,eax
64027e2a:	mov    DWORD PTR ds:0x64047e38,esi
64027e30:	push   0x64032778
64027e35:	push   esi
64027e36:	push   0x64032770
64027e3b:	call   0x64002e50
64027e40:	add    esp,0x48
64027e43:	push   0x6403274c
64027e48:	push   esi
64027e49:	push   0x64032744
64027e4e:	mov    ds:0x64047e3c,eax
64027e53:	mov    DWORD PTR ds:0x64047e40,esi
64027e59:	call   0x64002e50
64027e5e:	push   0x64032714
64027e63:	push   ebx
64027e64:	push   0x6403270c
64027e69:	mov    ds:0x64047e44,eax
64027e6e:	mov    DWORD PTR ds:0x64047e48,ebx
64027e74:	call   0x64002e50
64027e79:	push   0x640326e8
64027e7e:	push   ebx
64027e7f:	push   0x640326e0
64027e84:	mov    ds:0x64047e4c,eax
64027e89:	mov    DWORD PTR ds:0x64047e50,ebx
64027e8f:	call   0x64002e50
64027e94:	push   0x640326bc
64027e99:	push   ebx
64027e9a:	push   0x640326b4
64027e9f:	mov    ds:0x64047e54,eax
64027ea4:	mov    DWORD PTR ds:0x64047e58,ebx
64027eaa:	call   0x64002e50
64027eaf:	push   0x64032688
64027eb4:	push   ebx
64027eb5:	push   0x64032680
64027eba:	mov    ds:0x64047e5c,eax
64027ebf:	mov    DWORD PTR ds:0x64047e60,ebx
64027ec5:	call   0x64002e50
64027eca:	push   0x64032644
64027ecf:	push   esi
64027ed0:	push   0x6403263c
64027ed5:	mov    ds:0x64047e64,eax
64027eda:	mov    DWORD PTR ds:0x64047e68,esi
64027ee0:	call   0x64002e50
64027ee5:	add    esp,0x48
64027ee8:	push   0x64032610
64027eed:	push   esi
64027eee:	push   0x64032608
64027ef3:	mov    ds:0x64047e6c,eax
64027ef8:	mov    DWORD PTR ds:0x64047e70,esi
64027efe:	call   0x64002e50
64027f03:	push   0x640325d8
64027f08:	push   esi
64027f09:	push   0x640325d0
64027f0e:	mov    ds:0x64047e74,eax
64027f13:	mov    DWORD PTR ds:0x64047e78,esi
64027f19:	call   0x64002e50
64027f1e:	push   0x64032594
64027f23:	push   esi
64027f24:	push   0x6403258c
64027f29:	mov    ds:0x64047e7c,eax
64027f2e:	mov    DWORD PTR ds:0x64047e80,esi
64027f34:	call   0x64002e50
64027f39:	push   0x64032550
64027f3e:	push   ebp
64027f3f:	push   0x64032544
64027f44:	mov    ds:0x64047e84,eax
64027f49:	mov    DWORD PTR ds:0x64047e88,ebp
64027f4f:	call   0x64002e50
64027f54:	push   0x64032518
64027f59:	push   ebp
64027f5a:	push   0x6403250c
64027f5f:	mov    ds:0x64047e8c,eax
64027f64:	mov    DWORD PTR ds:0x64047e90,ebp
64027f6a:	call   0x64002e50
64027f6f:	push   0x640324e8
64027f74:	push   ebp
64027f75:	push   0x640324dc
64027f7a:	mov    ds:0x64047e94,eax
64027f7f:	mov    DWORD PTR ds:0x64047e98,ebp
64027f85:	call   0x64002e50
64027f8a:	add    esp,0x48
64027f8d:	mov    ds:0x64047e9c,eax
64027f92:	mov    DWORD PTR ds:0x64047ea0,ebp
64027f98:	push   0x640324a4
64027f9d:	push   ebp
64027f9e:	push   0x64032498
64027fa3:	call   0x64002e50
64027fa8:	push   0x64032458
64027fad:	push   0x9
64027faf:	push   0x6403244c
64027fb4:	mov    ds:0x64047ea4,eax
64027fb9:	mov    DWORD PTR ds:0x64047ea8,0x9
64027fc3:	call   0x64002e50
64027fc8:	push   0x64032418
64027fcd:	push   0x9
64027fcf:	push   0x6403240c
64027fd4:	mov    ds:0x64047eac,eax
64027fd9:	mov    DWORD PTR ds:0x64047eb0,0x9
64027fe3:	call   0x64002e50
64027fe8:	push   0x640323d8
64027fed:	push   0x9
64027fef:	push   0x640323cc
64027ff4:	mov    ds:0x64047eb4,eax
64027ff9:	mov    DWORD PTR ds:0x64047eb8,0x9
64028003:	call   0x64002e50
64028008:	push   0x6403239c
6402800d:	push   0x9
6402800f:	push   0x64032390
64028014:	mov    ds:0x64047ebc,eax
64028019:	mov    DWORD PTR ds:0x64047ec0,0x9
64028023:	call   0x64002e50
64028028:	push   0x6403236c
6402802d:	push   ebp
6402802e:	push   0x64032360
64028033:	mov    ds:0x64047ec4,eax
64028038:	mov    DWORD PTR ds:0x64047ec8,ebp
6402803e:	call   0x64002e50
64028043:	add    esp,0x48
64028046:	push   0x64032334
6402804b:	push   ebp
6402804c:	push   0x64032328
64028051:	mov    ds:0x64047ecc,eax
64028056:	mov    DWORD PTR ds:0x64047ed0,ebp
6402805c:	call   0x64002e50
64028061:	push   0x640322f8
64028066:	push   0x9
64028068:	push   0x640322ec
6402806d:	mov    ds:0x64047ed4,eax
64028072:	mov    DWORD PTR ds:0x64047ed8,0x9
6402807c:	call   0x64002e50
64028081:	push   0x640322b0
64028086:	push   0x9
64028088:	push   0x640322a4
6402808d:	mov    ds:0x64047edc,eax
64028092:	mov    DWORD PTR ds:0x64047ee0,0x9
6402809c:	call   0x64002e50
640280a1:	push   0x64032278
640280a6:	push   0x9
640280a8:	push   0x6403226c
640280ad:	mov    ds:0x64047ee4,eax
640280b2:	mov    DWORD PTR ds:0x64047ee8,0x9
640280bc:	call   0x64002e50
640280c1:	push   0x64032238
640280c6:	push   0xa
640280c8:	push   0x6403222c
640280cd:	mov    ds:0x64047eec,eax
640280d2:	mov    DWORD PTR ds:0x64047ef0,0xa
640280dc:	call   0x64002e50
640280e1:	push   0x64032208
640280e6:	push   ebx
640280e7:	push   0x64032200
640280ec:	mov    ds:0x64047ef4,eax
640280f1:	mov    DWORD PTR ds:0x64047ef8,ebx
640280f7:	call   0x64002e50
640280fc:	add    esp,0x48
640280ff:	push   0x640321c0
64028104:	push   ebx
64028105:	push   0x640321b8
6402810a:	mov    ds:0x64047efc,eax
6402810f:	mov    DWORD PTR ds:0x64047f00,ebx
64028115:	call   0x64002e50
6402811a:	push   0x64032180
6402811f:	mov    ds:0x64047f04,eax
64028124:	mov    DWORD PTR ds:0x64047f08,ebx
6402812a:	push   ebx
6402812b:	push   0x64032178
64028130:	call   0x64002e50
64028135:	push   0x64032144
6402813a:	push   ebx
6402813b:	push   0x6403213c
64028140:	mov    ds:0x64047f0c,eax
64028145:	mov    DWORD PTR ds:0x64047f10,ebx
6402814b:	call   0x64002e50
64028150:	push   0x6403210c
64028155:	push   esi
64028156:	push   0x64032104
6402815b:	mov    ds:0x64047f14,eax
64028160:	mov    DWORD PTR ds:0x64047f18,esi
64028166:	call   0x64002e50
6402816b:	push   0x640320d0
64028170:	push   esi
64028171:	push   0x640320c8
64028176:	mov    ds:0x64047f1c,eax
6402817b:	mov    DWORD PTR ds:0x64047f20,esi
64028181:	call   0x64002e50
64028186:	push   0x64032098
6402818b:	push   esi
6402818c:	push   0x64032090
64028191:	mov    ds:0x64047f24,eax
64028196:	mov    DWORD PTR ds:0x64047f28,esi
6402819c:	call   0x64002e50
640281a1:	add    esp,0x48
640281a4:	push   0x64032068
640281a9:	push   esi
640281aa:	push   0x64032060
640281af:	mov    ds:0x64047f2c,eax
640281b4:	mov    DWORD PTR ds:0x64047f30,esi
640281ba:	call   0x64002e50
640281bf:	push   0x64032038
640281c4:	push   ebx
640281c5:	push   0x64032030
640281ca:	mov    ds:0x64047f34,eax
640281cf:	mov    DWORD PTR ds:0x64047f38,ebx
640281d5:	call   0x64002e50
640281da:	push   0x64031ffc
640281df:	push   ebx
640281e0:	push   0x64031ff4
640281e5:	mov    ds:0x64047f3c,eax
640281ea:	mov    DWORD PTR ds:0x64047f40,ebx
640281f0:	call   0x64002e50
640281f5:	push   0x64031fc8
640281fa:	push   ebx
640281fb:	push   0x64031fc0
64028200:	mov    ds:0x64047f44,eax
64028205:	mov    DWORD PTR ds:0x64047f48,ebx
6402820b:	call   0x64002e50
64028210:	push   0x64031f80
64028215:	push   ebx
64028216:	push   0x64031f78
6402821b:	mov    ds:0x64047f4c,eax
64028220:	mov    DWORD PTR ds:0x64047f50,ebx
64028226:	call   0x64002e50
6402822b:	push   0x64031f3c
64028230:	push   esi
64028231:	push   0x64031f34
64028236:	mov    ds:0x64047f54,eax
6402823b:	mov    DWORD PTR ds:0x64047f58,esi
64028241:	call   0x64002e50
64028246:	add    esp,0x48
64028249:	push   0x64031ef4
6402824e:	push   esi
6402824f:	push   0x64031eec
64028254:	mov    ds:0x64047f5c,eax
64028259:	mov    DWORD PTR ds:0x64047f60,esi
6402825f:	call   0x64002e50
64028264:	push   0x64031ec8
64028269:	push   esi
6402826a:	push   0x64031ec0
6402826f:	mov    ds:0x64047f64,eax
64028274:	mov    DWORD PTR ds:0x64047f68,esi
6402827a:	call   0x64002e50
6402827f:	push   0x64031e88
64028284:	push   esi
64028285:	mov    ds:0x64047f6c,eax
6402828a:	mov    DWORD PTR ds:0x64047f70,esi
64028290:	push   0x64031e80
64028295:	call   0x64002e50
6402829a:	push   0x64031e4c
6402829f:	push   ebx
640282a0:	push   0x64031e44
640282a5:	mov    ds:0x64047f74,eax
640282aa:	mov    DWORD PTR ds:0x64047f78,ebx
640282b0:	call   0x64002e50
640282b5:	push   0x64031e18
640282ba:	push   ebx
640282bb:	push   0x64031e10
640282c0:	mov    ds:0x64047f7c,eax
640282c5:	mov    DWORD PTR ds:0x64047f80,ebx
640282cb:	call   0x64002e50
640282d0:	push   0x64031ddc
640282d5:	push   ebx
640282d6:	push   0x64031dd4
640282db:	mov    ds:0x64047f84,eax
640282e0:	mov    DWORD PTR ds:0x64047f88,ebx
640282e6:	call   0x64002e50
640282eb:	add    esp,0x48
640282ee:	push   0x64031d98
640282f3:	push   ebx
640282f4:	push   0x64031d90
640282f9:	mov    ds:0x64047f8c,eax
640282fe:	mov    DWORD PTR ds:0x64047f90,ebx
64028304:	call   0x64002e50
64028309:	push   0x64031d50
6402830e:	push   esi
6402830f:	push   0x64031d48
64028314:	mov    ds:0x64047f94,eax
64028319:	mov    DWORD PTR ds:0x64047f98,esi
6402831f:	call   0x64002e50
64028324:	push   0x64031d0c
64028329:	push   esi
6402832a:	push   0x64031d04
6402832f:	mov    ds:0x64047f9c,eax
64028334:	mov    DWORD PTR ds:0x64047fa0,esi
6402833a:	call   0x64002e50
6402833f:	push   0x64031cdc
64028344:	push   esi
64028345:	push   0x64031cd4
6402834a:	mov    ds:0x64047fa4,eax
6402834f:	mov    DWORD PTR ds:0x64047fa8,esi
64028355:	call   0x64002e50
6402835a:	push   0x64031c94
6402835f:	push   esi
64028360:	push   0x64031c8c
64028365:	mov    ds:0x64047fac,eax
6402836a:	mov    DWORD PTR ds:0x64047fb0,esi
64028370:	call   0x64002e50
64028375:	push   0x64031c4c
6402837a:	push   ebx
6402837b:	push   0x64031c44
64028380:	mov    ds:0x64047fb4,eax
64028385:	mov    DWORD PTR ds:0x64047fb8,ebx
6402838b:	call   0x64002e50
64028390:	add    esp,0x48
64028393:	push   0x64031c0c
64028398:	push   ebx
64028399:	push   0x64031c04
6402839e:	mov    ds:0x64047fbc,eax
640283a3:	mov    DWORD PTR ds:0x64047fc0,ebx
640283a9:	call   0x64002e50
640283ae:	push   0x64031be0
640283b3:	push   ebx
640283b4:	push   0x64031bd8
640283b9:	mov    ds:0x64047fc4,eax
640283be:	mov    DWORD PTR ds:0x64047fc8,ebx
640283c4:	call   0x64002e50
640283c9:	push   0x64031bac
640283ce:	push   ebx
640283cf:	push   0x64031ba4
640283d4:	mov    ds:0x64047fcc,eax
640283d9:	mov    DWORD PTR ds:0x64047fd0,ebx
640283df:	call   0x64002e50
640283e4:	push   0x64031b68
640283e9:	push   esi
640283ea:	push   0x64031b60
640283ef:	mov    ds:0x64047fd4,eax
640283f4:	mov    DWORD PTR ds:0x64047fd8,esi
640283fa:	call   0x64002e50
640283ff:	push   0x64031b2c
64028404:	push   esi
64028405:	push   0x64031b24
6402840a:	mov    ds:0x64047fdc,eax
6402840f:	mov    DWORD PTR ds:0x64047fe0,esi
64028415:	call   0x64002e50
6402841a:	push   0x64031af8
6402841f:	push   esi
64028420:	push   0x64031af0
64028425:	mov    ds:0x64047fe4,eax
6402842a:	mov    DWORD PTR ds:0x64047fe8,esi
64028430:	call   0x64002e50
64028435:	add    esp,0x48
64028438:	push   0x64031ab8
6402843d:	push   esi
6402843e:	push   0x64031ab0
64028443:	mov    ds:0x64047fec,eax
64028448:	mov    DWORD PTR ds:0x64047ff0,esi
6402844e:	call   0x64002e50
64028453:	push   0x64031a80
64028458:	push   0x9
6402845a:	push   0x64031a74
6402845f:	mov    ds:0x64047ff4,eax
64028464:	mov    DWORD PTR ds:0x64047ff8,0x9
6402846e:	call   0x64002e50
64028473:	push   0x64031a40
64028478:	push   0xa
6402847a:	push   0x64031a34
6402847f:	mov    ds:0x64047ffc,eax
64028484:	mov    DWORD PTR ds:0x64048000,0xa
6402848e:	call   0x64002e50
64028493:	push   0x640319f4
64028498:	push   0x9
6402849a:	push   0x640319e8
6402849f:	mov    ds:0x64048004,eax
640284a4:	mov    DWORD PTR ds:0x64048008,0x9
640284ae:	call   0x64002e50
640284b3:	push   0x640319b0
640284b8:	push   0xa
640284ba:	push   0x640319a4
640284bf:	mov    ds:0x6404800c,eax
640284c4:	mov    DWORD PTR ds:0x64048010,0xa
640284ce:	call   0x64002e50
640284d3:	push   0x64031970
640284d8:	push   0x9
640284da:	push   0x64031964
640284df:	mov    ds:0x64048014,eax
640284e4:	mov    DWORD PTR ds:0x64048018,0x9
640284ee:	call   0x64002e50
640284f3:	add    esp,0x48
640284f6:	push   0x6403192c
640284fb:	push   0xa
640284fd:	push   0x64031920
64028502:	mov    ds:0x6404801c,eax
64028507:	mov    DWORD PTR ds:0x64048020,0xa
64028511:	call   0x64002e50
64028516:	push   0x640318e0
6402851b:	push   ebp
6402851c:	push   0x640318d4
64028521:	mov    ds:0x64048024,eax
64028526:	mov    DWORD PTR ds:0x64048028,ebp
6402852c:	call   0x64002e50
64028531:	push   0x640318b0
64028536:	push   0x9
64028538:	push   0x640318a4
6402853d:	mov    ds:0x6404802c,eax
64028542:	mov    DWORD PTR ds:0x64048030,0x9
6402854c:	call   0x64002e50
64028551:	push   0x64031874
64028556:	push   edi
64028557:	push   0x6403186c
6402855c:	mov    ds:0x64048034,eax
64028561:	mov    DWORD PTR ds:0x64048038,edi
64028567:	call   0x64002e50
6402856c:	push   0x64031848
64028571:	push   ebp
64028572:	push   0x6403183c
64028577:	mov    ds:0x6404803c,eax
6402857c:	mov    DWORD PTR ds:0x64048040,ebp
64028582:	call   0x64002e50
64028587:	mov    ds:0x64048044,eax
6402858c:	push   0x6403180c
64028591:	push   edi
64028592:	push   0x64031804
64028597:	mov    DWORD PTR ds:0x64048048,edi
6402859d:	call   0x64002e50
640285a2:	add    esp,0x48
640285a5:	push   0x640317dc
640285aa:	push   ebp
640285ab:	push   0x640317d0
640285b0:	mov    ds:0x6404804c,eax
640285b5:	mov    DWORD PTR ds:0x64048050,ebp
640285bb:	call   0x64002e50
640285c0:	push   0x640317a8
640285c5:	push   edi
640285c6:	push   0x640317a0
640285cb:	mov    ds:0x64048054,eax
640285d0:	mov    DWORD PTR ds:0x64048058,edi
640285d6:	call   0x64002e50
640285db:	push   0x64031760
640285e0:	push   ebp
640285e1:	push   0x64031754
640285e6:	mov    ds:0x6404805c,eax
640285eb:	mov    DWORD PTR ds:0x64048060,ebp
640285f1:	call   0x64002e50
640285f6:	push   0x6403171c
640285fb:	push   ebp
640285fc:	push   0x64031710
64028601:	mov    ds:0x64048064,eax
64028606:	mov    DWORD PTR ds:0x64048068,ebp
6402860c:	call   0x64002e50
64028611:	push   0x640316d0
64028616:	push   0x9
64028618:	push   0x640316c4
6402861d:	mov    ds:0x6404806c,eax
64028622:	mov    DWORD PTR ds:0x64048070,0x9
6402862c:	call   0x64002e50
64028631:	push   0x6403169c
64028636:	push   0x9
64028638:	push   0x64031690
6402863d:	mov    ds:0x64048074,eax
64028642:	mov    DWORD PTR ds:0x64048078,0x9
6402864c:	call   0x64002e50
64028651:	add    esp,0x48
64028654:	push   0x64031668
64028659:	push   0xa
6402865b:	push   0x6403165c
64028660:	mov    ds:0x6404807c,eax
64028665:	mov    DWORD PTR ds:0x64048080,0xa
6402866f:	call   0x64002e50
64028674:	push   0x64031620
64028679:	push   0x9
6402867b:	push   0x64031614
64028680:	mov    ds:0x64048084,eax
64028685:	mov    DWORD PTR ds:0x64048088,0x9
6402868f:	call   0x64002e50
64028694:	push   0x640315d8
64028699:	push   0xa
6402869b:	push   0x640315cc
640286a0:	mov    ds:0x6404808c,eax
640286a5:	mov    DWORD PTR ds:0x64048090,0xa
640286af:	call   0x64002e50
640286b4:	push   0x64031594
640286b9:	push   0x9
640286bb:	push   0x64031588
640286c0:	mov    ds:0x64048094,eax
640286c5:	mov    DWORD PTR ds:0x64048098,0x9
640286cf:	call   0x64002e50
640286d4:	push   0x64031554
640286d9:	push   0xa
640286db:	push   0x64031548
640286e0:	mov    ds:0x6404809c,eax
640286e5:	mov    DWORD PTR ds:0x640480a0,0xa
640286ef:	call   0x64002e50
640286f4:	push   0x6403150c
640286f9:	push   ebp
640286fa:	push   0x64031500
640286ff:	mov    ds:0x640480a4,eax
64028704:	mov    DWORD PTR ds:0x640480a8,ebp
6402870a:	call   0x64002e50
6402870f:	add    esp,0x48
64028712:	mov    ds:0x640480ac,eax
64028717:	push   0x640314d4
6402871c:	push   0x9
6402871e:	push   0x640314c8
64028723:	mov    DWORD PTR ds:0x640480b0,0x9
6402872d:	call   0x64002e50
64028732:	push   0x640314a4
64028737:	push   0xa
64028739:	push   0x64031498
6402873e:	mov    ds:0x640480b4,eax
64028743:	mov    DWORD PTR ds:0x640480b8,0xa
6402874d:	call   0x64002e50
64028752:	push   0x64031468
64028757:	push   0xb
64028759:	push   0x6403145c
6402875e:	mov    ds:0x640480bc,eax
64028763:	mov    DWORD PTR ds:0x640480c0,0xb
6402876d:	call   0x64002e50
64028772:	push   0x64031438
64028777:	push   0xa
64028779:	push   0x6403142c
6402877e:	mov    ds:0x640480c4,eax
64028783:	mov    DWORD PTR ds:0x640480c8,0xa
6402878d:	call   0x64002e50
64028792:	push   0x640313ec
64028797:	push   0xb
64028799:	push   0x640313e0
6402879e:	mov    ds:0x640480cc,eax
640287a3:	mov    DWORD PTR ds:0x640480d0,0xb
640287ad:	call   0x64002e50
640287b2:	push   0x640313b0
640287b7:	push   0x4
640287b9:	push   0x640313a8
640287be:	mov    ds:0x640480d4,eax
640287c3:	mov    DWORD PTR ds:0x640480d8,0x4
640287cd:	call   0x64002e50
640287d2:	add    esp,0x48
640287d5:	push   0x64031384
640287da:	push   0x4
640287dc:	push   0x6403137c
640287e1:	mov    ds:0x640480dc,eax
640287e6:	mov    DWORD PTR ds:0x640480e0,0x4
640287f0:	call   0x64002e50
640287f5:	push   0x64031350
640287fa:	push   ebx
640287fb:	push   0x64031348
64028800:	mov    ds:0x640480e4,eax
64028805:	mov    DWORD PTR ds:0x640480e8,ebx
6402880b:	call   0x64002e50
64028810:	push   0x64031320
64028815:	push   ebx
64028816:	push   0x64031318
6402881b:	mov    ds:0x640480ec,eax
64028820:	mov    DWORD PTR ds:0x640480f0,ebx
64028826:	call   0x64002e50
6402882b:	push   0x640312e4
64028830:	push   esi
64028831:	push   0x640312dc
64028836:	mov    ds:0x640480f4,eax
6402883b:	mov    DWORD PTR ds:0x640480f8,esi
64028841:	call   0x64002e50
64028846:	push   0x640312a8
6402884b:	push   esi
6402884c:	push   0x640312a0
64028851:	mov    ds:0x640480fc,eax
64028856:	mov    DWORD PTR ds:0x64048100,esi
6402885c:	call   0x64002e50
64028861:	push   0x64031264
64028866:	push   edi
64028867:	push   0x6403125c
6402886c:	mov    ds:0x64048104,eax
64028871:	mov    DWORD PTR ds:0x64048108,edi
64028877:	call   0x64002e50
6402887c:	add    esp,0x48
6402887f:	push   0x64031228
64028884:	push   edi
64028885:	push   0x64031220
6402888a:	mov    ds:0x6404810c,eax
6402888f:	mov    DWORD PTR ds:0x64048110,edi
64028895:	call   0x64002e50
6402889a:	mov    ds:0x64048114,eax
6402889f:	mov    DWORD PTR ds:0x64048118,esi
640288a5:	push   0x640311ec
640288aa:	push   esi
640288ab:	push   0x640311e4
640288b0:	call   0x64002e50
640288b5:	push   0x640311b0
640288ba:	push   esi
640288bb:	push   0x640311a8
640288c0:	mov    ds:0x6404811c,eax
640288c5:	mov    DWORD PTR ds:0x64048120,esi
640288cb:	call   0x64002e50
640288d0:	push   0x64031180
640288d5:	push   edi
640288d6:	push   0x64031178
640288db:	mov    ds:0x64048124,eax
640288e0:	mov    DWORD PTR ds:0x64048128,edi
640288e6:	call   0x64002e50
640288eb:	push   0x64031138
640288f0:	push   edi
640288f1:	push   0x64031130
640288f6:	mov    ds:0x6404812c,eax
640288fb:	mov    DWORD PTR ds:0x64048130,edi
64028901:	call   0x64002e50
64028906:	push   0x64031104
6402890b:	push   edi
6402890c:	push   0x640310fc
64028911:	mov    ds:0x64048134,eax
64028916:	mov    DWORD PTR ds:0x64048138,edi
6402891c:	call   0x64002e50
64028921:	add    esp,0x48
64028924:	push   0x640310cc
64028929:	push   ebp
6402892a:	push   0x640310c0
6402892f:	mov    ds:0x6404813c,eax
64028934:	mov    DWORD PTR ds:0x64048140,ebp
6402893a:	call   0x64002e50
6402893f:	push   0x64031090
64028944:	push   ebp
64028945:	push   0x64031084
6402894a:	mov    ds:0x64048144,eax
6402894f:	mov    DWORD PTR ds:0x64048148,ebp
64028955:	call   0x64002e50
6402895a:	push   0x64031054
6402895f:	push   ebx
64028960:	push   0x6403104c
64028965:	mov    ds:0x6404814c,eax
6402896a:	mov    DWORD PTR ds:0x64048150,ebx
64028970:	call   0x64002e50
64028975:	push   0x6403100c
6402897a:	push   esi
6402897b:	push   0x64031004
64028980:	mov    ds:0x64048154,eax
64028985:	mov    DWORD PTR ds:0x64048158,esi
6402898b:	call   0x64002e50
64028990:	push   0x64030fe0
64028995:	push   ebx
64028996:	push   0x64030fd8
6402899b:	mov    ds:0x6404815c,eax
640289a0:	mov    DWORD PTR ds:0x64048160,ebx
640289a6:	call   0x64002e50
640289ab:	push   0x64030fb4
640289b0:	push   esi
640289b1:	push   0x64030fac
640289b6:	mov    ds:0x64048164,eax
640289bb:	mov    DWORD PTR ds:0x64048168,esi
640289c1:	call   0x64002e50
640289c6:	add    esp,0x48
640289c9:	push   0x64030f88
640289ce:	push   ebx
640289cf:	push   0x64030f80
640289d4:	mov    ds:0x6404816c,eax
640289d9:	mov    DWORD PTR ds:0x64048170,ebx
640289df:	call   0x64002e50
640289e4:	push   0x64030f40
640289e9:	push   esi
640289ea:	push   0x64030f38
640289ef:	mov    ds:0x64048174,eax
640289f4:	mov    DWORD PTR ds:0x64048178,esi
640289fa:	call   0x64002e50
640289ff:	mov    ds:0x6404817c,eax
64028a04:	mov    DWORD PTR ds:0x64048180,ebx
64028a0a:	push   0x64030efc
64028a0f:	push   ebx
64028a10:	push   0x64030ef4
64028a15:	call   0x64002e50
64028a1a:	push   0x64030ecc
64028a1f:	push   esi
64028a20:	push   0x64030ec4
64028a25:	mov    ds:0x64048184,eax
64028a2a:	mov    DWORD PTR ds:0x64048188,esi
64028a30:	call   0x64002e50
64028a35:	push   0x64030e94
64028a3a:	push   ebx
64028a3b:	push   0x64030e8c
64028a40:	mov    ds:0x6404818c,eax
64028a45:	mov    DWORD PTR ds:0x64048190,ebx
64028a4b:	call   0x64002e50
64028a50:	push   0x64030e60
64028a55:	push   esi
64028a56:	push   0x64030e58
64028a5b:	mov    ds:0x64048194,eax
64028a60:	mov    DWORD PTR ds:0x64048198,esi
64028a66:	call   0x64002e50
64028a6b:	add    esp,0x48
64028a6e:	push   0x64030e24
64028a73:	push   ebx
64028a74:	push   0x64030e1c
64028a79:	mov    ds:0x6404819c,eax
64028a7e:	mov    DWORD PTR ds:0x640481a0,ebx
64028a84:	call   0x64002e50
64028a89:	push   0x64030de8
64028a8e:	push   esi
64028a8f:	push   0x64030de0
64028a94:	mov    ds:0x640481a4,eax
64028a99:	mov    DWORD PTR ds:0x640481a8,esi
64028a9f:	call   0x64002e50
64028aa4:	push   0x64030db4
64028aa9:	push   ebx
64028aaa:	push   0x64030dac
64028aaf:	mov    ds:0x640481ac,eax
64028ab4:	mov    DWORD PTR ds:0x640481b0,ebx
64028aba:	call   0x64002e50
64028abf:	push   0x64030d78
64028ac4:	push   esi
64028ac5:	push   0x64030d70
64028aca:	mov    ds:0x640481b4,eax
64028acf:	mov    DWORD PTR ds:0x640481b8,esi
64028ad5:	call   0x64002e50
64028ada:	push   0x64030d34
64028adf:	push   esi
64028ae0:	push   0x64030d2c
64028ae5:	mov    ds:0x640481bc,eax
64028aea:	mov    DWORD PTR ds:0x640481c0,esi
64028af0:	call   0x64002e50
64028af5:	push   0x64030d08
64028afa:	push   edi
64028afb:	push   0x64030d00
64028b00:	mov    ds:0x640481c4,eax
64028b05:	mov    DWORD PTR ds:0x640481c8,edi
64028b0b:	call   0x64002e50
64028b10:	add    esp,0x48
64028b13:	push   0x64030ccc
64028b18:	push   ebx
64028b19:	push   0x64030cc4
64028b1e:	mov    ds:0x640481cc,eax
64028b23:	mov    DWORD PTR ds:0x640481d0,ebx
64028b29:	call   0x64002e50
64028b2e:	push   0x64030c9c
64028b33:	push   esi
64028b34:	push   0x64030c94
64028b39:	mov    ds:0x640481d4,eax
64028b3e:	mov    DWORD PTR ds:0x640481d8,esi
64028b44:	call   0x64002e50
64028b49:	push   0x64030c60
64028b4e:	push   esi
64028b4f:	push   0x64030c58
64028b54:	mov    ds:0x640481dc,eax
64028b59:	mov    DWORD PTR ds:0x640481e0,esi
64028b5f:	call   0x64002e50
64028b64:	push   0x64030c2c
64028b69:	mov    ds:0x640481e4,eax
64028b6e:	mov    DWORD PTR ds:0x640481e8,edi
64028b74:	push   edi
64028b75:	push   0x64030c24
64028b7a:	call   0x64002e50
64028b7f:	push   0x64030bf8
64028b84:	push   edi
64028b85:	push   0x64030bf0
64028b8a:	mov    ds:0x640481ec,eax
64028b8f:	mov    DWORD PTR ds:0x640481f0,edi
64028b95:	call   0x64002e50
64028b9a:	push   0x64030bb4
64028b9f:	push   ebp
64028ba0:	push   0x64030ba8
64028ba5:	mov    ds:0x640481f4,eax
64028baa:	mov    DWORD PTR ds:0x640481f8,ebp
64028bb0:	call   0x64002e50
64028bb5:	add    esp,0x48
64028bb8:	push   0x64030b6c
64028bbd:	push   edi
64028bbe:	push   0x64030b64
64028bc3:	mov    ds:0x640481fc,eax
64028bc8:	mov    DWORD PTR ds:0x64048200,edi
64028bce:	call   0x64002e50
64028bd3:	push   0x64030b40
64028bd8:	push   ebp
64028bd9:	push   0x64030b34
64028bde:	mov    ds:0x64048204,eax
64028be3:	mov    DWORD PTR ds:0x64048208,ebp
64028be9:	call   0x64002e50
64028bee:	push   0x64030b04
64028bf3:	push   edi
64028bf4:	push   0x64030afc
64028bf9:	mov    ds:0x6404820c,eax
64028bfe:	mov    DWORD PTR ds:0x64048210,edi
64028c04:	call   0x64002e50
64028c09:	push   0x64030ac4
64028c0e:	push   ebp
64028c0f:	push   0x64030ab8
64028c14:	mov    ds:0x64048214,eax
64028c19:	mov    DWORD PTR ds:0x64048218,ebp
64028c1f:	call   0x64002e50
64028c24:	push   0x64030a84
64028c29:	push   0x4
64028c2b:	push   0x64030a7c
64028c30:	mov    ds:0x6404821c,eax
64028c35:	mov    DWORD PTR ds:0x64048220,0x4
64028c3f:	call   0x64002e50
64028c44:	push   0x64030a58
64028c49:	push   0xa
64028c4b:	push   0x64030a4c
64028c50:	mov    ds:0x64048224,eax
64028c55:	mov    DWORD PTR ds:0x64048228,0xa
64028c5f:	call   0x64002e50
64028c64:	add    esp,0x48
64028c67:	push   0x64030a18
64028c6c:	push   ebp
64028c6d:	push   0x64030a0c
64028c72:	mov    ds:0x6404822c,eax
64028c77:	mov    DWORD PTR ds:0x64048230,ebp
64028c7d:	call   0x64002e50
64028c82:	push   0x640309e4
64028c87:	push   esi
64028c88:	push   0x640309dc
64028c8d:	mov    ds:0x64048234,eax
64028c92:	mov    DWORD PTR ds:0x64048238,esi
64028c98:	call   0x64002e50
64028c9d:	push   0x640309a0
64028ca2:	push   ebx
64028ca3:	push   0x64030998
64028ca8:	mov    ds:0x6404823c,eax
64028cad:	mov    DWORD PTR ds:0x64048240,ebx
64028cb3:	call   0x64002e50
64028cb8:	push   0x64030974
64028cbd:	push   edi
64028cbe:	push   0x6403096c
64028cc3:	mov    ds:0x64048244,eax
64028cc8:	mov    DWORD PTR ds:0x64048248,edi
64028cce:	call   0x64002e50
64028cd3:	push   0x6403092c
64028cd8:	push   edi
64028cd9:	mov    ds:0x6404824c,eax
64028cde:	mov    DWORD PTR ds:0x64048250,edi
64028ce4:	push   0x64030924
64028ce9:	call   0x64002e50
64028cee:	push   0x640308f8
64028cf3:	push   esi
64028cf4:	push   0x640308f0
64028cf9:	mov    ds:0x64048254,eax
64028cfe:	mov    DWORD PTR ds:0x64048258,esi
64028d04:	call   0x64002e50
64028d09:	add    esp,0x48
64028d0c:	push   0x640308b4
64028d11:	push   esi
64028d12:	push   0x640308ac
64028d17:	mov    ds:0x6404825c,eax
64028d1c:	mov    DWORD PTR ds:0x64048260,esi
64028d22:	call   0x64002e50
64028d27:	push   0x64030874
64028d2c:	push   edi
64028d2d:	push   0x6403086c
64028d32:	mov    ds:0x64048264,eax
64028d37:	mov    DWORD PTR ds:0x64048268,edi
64028d3d:	call   0x64002e50
64028d42:	push   0x64030830
64028d47:	push   edi
64028d48:	push   0x64030828
64028d4d:	mov    ds:0x6404826c,eax
64028d52:	mov    DWORD PTR ds:0x64048270,edi
64028d58:	call   0x64002e50
64028d5d:	push   0x640307f8
64028d62:	push   esi
64028d63:	push   0x640307f0
64028d68:	mov    ds:0x64048274,eax
64028d6d:	mov    DWORD PTR ds:0x64048278,esi
64028d73:	call   0x64002e50
64028d78:	push   0x640307b0
64028d7d:	push   esi
64028d7e:	push   0x640307a8
64028d83:	mov    ds:0x6404827c,eax
64028d88:	mov    DWORD PTR ds:0x64048280,esi
64028d8e:	call   0x64002e50
64028d93:	push   0x64030780
64028d98:	push   edi
64028d99:	push   0x64030778
64028d9e:	mov    ds:0x64048284,eax
64028da3:	mov    DWORD PTR ds:0x64048288,edi
64028da9:	call   0x64002e50
64028dae:	add    esp,0x48
64028db1:	push   0x6403073c
64028db6:	push   edi
64028db7:	push   0x64030734
64028dbc:	mov    ds:0x6404828c,eax
64028dc1:	mov    DWORD PTR ds:0x64048290,edi
64028dc7:	call   0x64002e50
64028dcc:	push   0x640306fc
64028dd1:	push   esi
64028dd2:	push   0x640306f4
64028dd7:	mov    ds:0x64048294,eax
64028ddc:	mov    DWORD PTR ds:0x64048298,esi
64028de2:	call   0x64002e50
64028de7:	push   0x640306c8
64028dec:	push   edi
64028ded:	push   0x640306c0
64028df2:	mov    ds:0x6404829c,eax
64028df7:	mov    DWORD PTR ds:0x640482a0,edi
64028dfd:	call   0x64002e50
64028e02:	push   0x64030688
64028e07:	push   0x4
64028e09:	push   0x64030680
64028e0e:	mov    ds:0x640482a4,eax
64028e13:	mov    DWORD PTR ds:0x640482a8,0x4
64028e1d:	call   0x64002e50
64028e22:	push   0x6403064c
64028e27:	push   esi
64028e28:	push   0x64030644
64028e2d:	mov    ds:0x640482ac,eax
64028e32:	mov    DWORD PTR ds:0x640482b0,esi
64028e38:	call   0x64002e50
64028e3d:	push   0x64030608
64028e42:	push   esi
64028e43:	push   0x64030600
64028e48:	mov    ds:0x640482b4,eax
64028e4d:	mov    DWORD PTR ds:0x640482b8,esi
64028e53:	call   0x64002e50
64028e58:	add    esp,0x48
64028e5b:	push   0x640305c4
64028e60:	push   esi
64028e61:	push   0x640305bc
64028e66:	mov    ds:0x640482bc,eax
64028e6b:	mov    DWORD PTR ds:0x640482c0,esi
64028e71:	call   0x64002e50
64028e76:	push   0x64030598
64028e7b:	push   esi
64028e7c:	push   0x64030590
64028e81:	mov    ds:0x640482c4,eax
64028e86:	mov    DWORD PTR ds:0x640482c8,esi
64028e8c:	call   0x64002e50
64028e91:	push   0x6403055c
64028e96:	push   edi
64028e97:	push   0x64030554
64028e9c:	mov    ds:0x640482cc,eax
64028ea1:	mov    DWORD PTR ds:0x640482d0,edi
64028ea7:	call   0x64002e50
64028eac:	push   0x64030520
64028eb1:	push   edi
64028eb2:	push   0x64030518
64028eb7:	mov    ds:0x640482d4,eax
64028ebc:	mov    DWORD PTR ds:0x640482d8,edi
64028ec2:	call   0x64002e50
64028ec7:	push   0x640304f0
64028ecc:	push   ebp
64028ecd:	push   0x640304e4
64028ed2:	mov    ds:0x640482dc,eax
64028ed7:	mov    DWORD PTR ds:0x640482e0,ebp
64028edd:	call   0x64002e50
64028ee2:	push   0x640304b0
64028ee7:	push   edi
64028ee8:	push   0x640304a8
64028eed:	mov    ds:0x640482e4,eax
64028ef2:	mov    DWORD PTR ds:0x640482e8,edi
64028ef8:	call   0x64002e50
64028efd:	add    esp,0x48
64028f00:	push   0x6403046c
64028f05:	push   ebp
64028f06:	push   0x64030460
64028f0b:	mov    ds:0x640482ec,eax
64028f10:	mov    DWORD PTR ds:0x640482f0,ebp
64028f16:	call   0x64002e50
64028f1b:	push   0x64030434
64028f20:	push   esi
64028f21:	push   0x6403042c
64028f26:	mov    ds:0x640482f4,eax
64028f2b:	mov    DWORD PTR ds:0x640482f8,esi
64028f31:	call   0x64002e50
64028f36:	push   0x640303f8
64028f3b:	push   0x3
64028f3d:	push   0x640303f4
64028f42:	mov    ds:0x640482fc,eax
64028f47:	mov    DWORD PTR ds:0x64048300,0x3
64028f51:	call   0x64002e50
64028f56:	push   0x640303bc
64028f5b:	push   ebx
64028f5c:	push   0x640303b4
64028f61:	mov    ds:0x64048304,eax
64028f66:	mov    DWORD PTR ds:0x64048308,ebx
64028f6c:	call   0x64002e50
64028f71:	push   0x64030374
64028f76:	push   edi
64028f77:	push   0x6403036c
64028f7c:	mov    ds:0x6404830c,eax
64028f81:	mov    DWORD PTR ds:0x64048310,edi
64028f87:	call   0x64002e50
64028f8c:	push   0x64030330
64028f91:	push   edi
64028f92:	push   0x64030328
64028f97:	mov    ds:0x64048314,eax
64028f9c:	mov    DWORD PTR ds:0x64048318,edi
64028fa2:	call   0x64002e50
64028fa7:	add    esp,0x48
64028faa:	push   0x640302f8
64028faf:	push   edi
64028fb0:	push   0x640302f0
64028fb5:	mov    ds:0x6404831c,eax
64028fba:	mov    DWORD PTR ds:0x64048320,edi
64028fc0:	call   0x64002e50
64028fc5:	push   0x640302b0
64028fca:	push   0xa
64028fcc:	push   0x640302a4
64028fd1:	mov    ds:0x64048324,eax
64028fd6:	mov    DWORD PTR ds:0x64048328,0xa
64028fe0:	call   0x64002e50
64028fe5:	push   0x64030274
64028fea:	push   ebp
64028feb:	push   0x64030268
64028ff0:	mov    ds:0x6404832c,eax
64028ff5:	mov    DWORD PTR ds:0x64048330,ebp
64028ffb:	call   0x64002e50
64029000:	push   0x64030244
64029005:	push   ebp
64029006:	push   0x64030238
6402900b:	mov    ds:0x64048334,eax
64029010:	mov    DWORD PTR ds:0x64048338,ebp
64029016:	call   0x64002e50
6402901b:	push   0x64030200
64029020:	push   ebp
64029021:	push   0x640301f4
64029026:	mov    ds:0x6404833c,eax
6402902b:	mov    DWORD PTR ds:0x64048340,ebp
64029031:	call   0x64002e50
64029036:	push   0x640301bc
6402903b:	push   ebp
6402903c:	push   0x640301b0
64029041:	mov    ds:0x64048344,eax
64029046:	mov    DWORD PTR ds:0x64048348,ebp
6402904c:	call   0x64002e50
64029051:	add    esp,0x48
64029054:	push   0x64030184
64029059:	push   edi
6402905a:	push   0x6403017c
6402905f:	mov    ds:0x6404834c,eax
64029064:	mov    DWORD PTR ds:0x64048350,edi
6402906a:	call   0x64002e50
6402906f:	push   0x64030144
64029074:	push   edi
64029075:	push   0x6403013c
6402907a:	mov    ds:0x64048354,eax
6402907f:	mov    DWORD PTR ds:0x64048358,edi
64029085:	call   0x64002e50
6402908a:	push   0x6403010c
6402908f:	push   edi
64029090:	push   0x64030104
64029095:	mov    ds:0x6404835c,eax
6402909a:	mov    DWORD PTR ds:0x64048360,edi
640290a0:	call   0x64002e50
640290a5:	push   0x640300d0
640290aa:	push   0xa
640290ac:	push   0x640300c4
640290b1:	mov    ds:0x64048364,eax
640290b6:	mov    DWORD PTR ds:0x64048368,0xa
640290c0:	call   0x64002e50
640290c5:	push   0x640300a0
640290ca:	push   ebp
640290cb:	push   0x64030094
640290d0:	mov    ds:0x6404836c,eax
640290d5:	mov    DWORD PTR ds:0x64048370,ebp
640290db:	call   0x64002e50
640290e0:	push   0x64030068
640290e5:	push   ebp
640290e6:	push   0x6403005c
640290eb:	mov    ds:0x64048374,eax
640290f0:	mov    DWORD PTR ds:0x64048378,ebp
640290f6:	call   0x64002e50
640290fb:	add    esp,0x48
640290fe:	push   0x64030038
64029103:	push   ebp
64029104:	push   0x6403002c
64029109:	mov    ds:0x6404837c,eax
6402910e:	mov    DWORD PTR ds:0x64048380,ebp
64029114:	call   0x64002e50
64029119:	push   0x64030000
6402911e:	push   ebp
6402911f:	push   0x6402fff4
64029124:	mov    ds:0x64048384,eax
64029129:	mov    DWORD PTR ds:0x64048388,ebp
6402912f:	call   0x64002e50
64029134:	mov    ds:0x6404838c,eax
64029139:	push   0x6402ffc8
6402913e:	push   edi
6402913f:	push   0x6402ffc0
64029144:	mov    DWORD PTR ds:0x64048390,edi
6402914a:	call   0x64002e50
6402914f:	push   0x6402ff9c
64029154:	push   edi
64029155:	push   0x6402ff94
6402915a:	mov    ds:0x64048394,eax
6402915f:	mov    DWORD PTR ds:0x64048398,edi
64029165:	call   0x64002e50
6402916a:	push   0x6402ff54
6402916f:	push   edi
64029170:	push   0x6402ff4c
64029175:	mov    ds:0x6404839c,eax
6402917a:	mov    DWORD PTR ds:0x640483a0,edi
64029180:	call   0x64002e50
64029185:	push   0x6402ff20
6402918a:	push   0xa
6402918c:	push   0x6402ff14
64029191:	mov    ds:0x640483a4,eax
64029196:	mov    DWORD PTR ds:0x640483a8,0xa
640291a0:	call   0x64002e50
640291a5:	add    esp,0x48
640291a8:	push   0x6402fed8
640291ad:	push   ebp
640291ae:	push   0x6402fecc
640291b3:	mov    ds:0x640483ac,eax
640291b8:	mov    DWORD PTR ds:0x640483b0,ebp
640291be:	call   0x64002e50
640291c3:	push   0x6402fe9c
640291c8:	push   ebp
640291c9:	push   0x6402fe90
640291ce:	mov    ds:0x640483b4,eax
640291d3:	mov    DWORD PTR ds:0x640483b8,ebp
640291d9:	call   0x64002e50
640291de:	push   0x6402fe50
640291e3:	push   ebp
640291e4:	push   0x6402fe40
640291e9:	mov    ds:0x640483bc,eax
640291ee:	mov    DWORD PTR ds:0x640483c0,ebp
640291f4:	call   0x64002e50
640291f9:	push   0x6402fe08
640291fe:	push   ebp
640291ff:	push   0x6402fdfc
64029204:	mov    ds:0x640483c4,eax
64029209:	mov    DWORD PTR ds:0x640483c8,ebp
6402920f:	call   0x64002e50
64029214:	push   0x6402fdc0
64029219:	push   edi
6402921a:	push   0x6402fdb8
6402921f:	mov    ds:0x640483cc,eax
64029224:	mov    DWORD PTR ds:0x640483d0,edi
6402922a:	call   0x64002e50
6402922f:	push   0x6402fd78
64029234:	push   edi
64029235:	push   0x6402fd70
6402923a:	mov    ds:0x640483d4,eax
6402923f:	mov    DWORD PTR ds:0x640483d8,edi
64029245:	call   0x64002e50
6402924a:	add    esp,0x48
6402924d:	push   0x6402fd3c
64029252:	push   edi
64029253:	push   0x6402fd34
64029258:	mov    ds:0x640483dc,eax
6402925d:	mov    DWORD PTR ds:0x640483e0,edi
64029263:	call   0x64002e50
64029268:	push   0x6402fcf4
6402926d:	push   0xa
6402926f:	push   0x6402fce8
64029274:	mov    ds:0x640483e4,eax
64029279:	mov    DWORD PTR ds:0x640483e8,0xa
64029283:	call   0x64002e50
64029288:	push   0x6402fcb8
6402928d:	push   ebp
6402928e:	push   0x6402fcac
64029293:	mov    ds:0x640483ec,eax
64029298:	mov    DWORD PTR ds:0x640483f0,ebp
6402929e:	call   0x64002e50
640292a3:	mov    ds:0x640483f4,eax
640292a8:	mov    DWORD PTR ds:0x640483f8,ebp
640292ae:	push   0x6402fc78
640292b3:	push   ebp
640292b4:	push   0x6402fc6c
640292b9:	call   0x64002e50
640292be:	push   0x6402fc38
640292c3:	push   ebp
640292c4:	push   0x6402fc2c
640292c9:	mov    ds:0x640483fc,eax
640292ce:	mov    DWORD PTR ds:0x64048400,ebp
640292d4:	call   0x64002e50
640292d9:	push   0x6402fc00
640292de:	push   ebp
640292df:	push   0x6402fbf4
640292e4:	mov    ds:0x64048404,eax
640292e9:	mov    DWORD PTR ds:0x64048408,ebp
640292ef:	call   0x64002e50
640292f4:	add    esp,0x48
640292f7:	push   0x6402fbcc
640292fc:	push   ebp
640292fd:	push   0x6402fbc0
64029302:	mov    ds:0x6404840c,eax
64029307:	mov    DWORD PTR ds:0x64048410,ebp
6402930d:	call   0x64002e50
64029312:	push   0x6402fb88
64029317:	push   ebp
64029318:	push   0x6402fb7c
6402931d:	mov    ds:0x64048414,eax
64029322:	mov    DWORD PTR ds:0x64048418,ebp
64029328:	call   0x64002e50
6402932d:	push   0x6402fb40
64029332:	push   ebp
64029333:	push   0x6402fb34
64029338:	mov    ds:0x6404841c,eax
6402933d:	mov    DWORD PTR ds:0x64048420,ebp
64029343:	call   0x64002e50
64029348:	push   0x6402fb04
6402934d:	push   0xb
6402934f:	push   0x6402faf8
64029354:	mov    ds:0x64048424,eax
64029359:	mov    DWORD PTR ds:0x64048428,0xb
64029363:	call   0x64002e50
64029368:	push   0x6402fad0
6402936d:	push   0x9
6402936f:	push   0x6402fac4
64029374:	mov    ds:0x6404842c,eax
64029379:	mov    DWORD PTR ds:0x64048430,0x9
64029383:	call   0x64002e50
64029388:	push   0x6402fa98
6402938d:	push   0x9
6402938f:	push   0x6402fa8c
64029394:	mov    ds:0x64048434,eax
64029399:	mov    DWORD PTR ds:0x64048438,0x9
640293a3:	call   0x64002e50
640293a8:	add    esp,0x48
640293ab:	push   0x6402fa58
640293b0:	push   0x9
640293b2:	push   0x6402fa4c
640293b7:	mov    ds:0x6404843c,eax
640293bc:	mov    DWORD PTR ds:0x64048440,0x9
640293c6:	call   0x64002e50
640293cb:	push   0x6402fa28
640293d0:	push   0x9
640293d2:	push   0x6402fa1c
640293d7:	mov    ds:0x64048444,eax
640293dc:	mov    DWORD PTR ds:0x64048448,0x9
640293e6:	call   0x64002e50
640293eb:	push   0x6402f9e8
640293f0:	push   ebp
640293f1:	push   0x6402f9dc
640293f6:	mov    ds:0x6404844c,eax
640293fb:	mov    DWORD PTR ds:0x64048450,ebp
64029401:	call   0x64002e50
64029406:	push   0x6402f9ac
6402940b:	push   ebp
6402940c:	push   0x6402f9a0
64029411:	mov    ds:0x64048454,eax
64029416:	mov    DWORD PTR ds:0x64048458,ebp
6402941c:	call   0x64002e50
64029421:	mov    ds:0x6404845c,eax
64029426:	mov    DWORD PTR ds:0x64048460,ebp
6402942c:	push   0x6402f964
64029431:	push   ebp
64029432:	push   0x6402f958
64029437:	call   0x64002e50
6402943c:	push   0x6402f918
64029441:	push   0xb
64029443:	push   0x6402f90c
64029448:	mov    ds:0x64048464,eax
6402944d:	mov    DWORD PTR ds:0x64048468,0xb
64029457:	call   0x64002e50
6402945c:	add    esp,0x48
6402945f:	push   0x6402f8dc
64029464:	push   0x9
64029466:	push   0x6402f8d0
6402946b:	mov    ds:0x6404846c,eax
64029470:	mov    DWORD PTR ds:0x64048470,0x9
6402947a:	call   0x64002e50
6402947f:	push   0x6402f890
64029484:	push   0x9
64029486:	push   0x6402f880
6402948b:	mov    ds:0x64048474,eax
64029490:	mov    DWORD PTR ds:0x64048478,0x9
6402949a:	call   0x64002e50
6402949f:	push   0x6402f840
640294a4:	push   0x9
640294a6:	push   0x6402f834
640294ab:	mov    ds:0x6404847c,eax
640294b0:	mov    DWORD PTR ds:0x64048480,0x9
640294ba:	call   0x64002e50
640294bf:	push   0x6402f808
640294c4:	push   0x9
640294c6:	push   0x6402f7fc
640294cb:	mov    ds:0x64048484,eax
640294d0:	mov    DWORD PTR ds:0x64048488,0x9
640294da:	call   0x64002e50
640294df:	push   0x6402f7bc
640294e4:	push   ebp
640294e5:	push   0x6402f7b0
640294ea:	mov    ds:0x6404848c,eax
640294ef:	mov    DWORD PTR ds:0x64048490,ebp
640294f5:	call   0x64002e50
640294fa:	push   0x6402f780
640294ff:	push   ebp
64029500:	push   0x6402f774
64029505:	mov    ds:0x64048494,eax
6402950a:	mov    DWORD PTR ds:0x64048498,ebp
64029510:	call   0x64002e50
64029515:	add    esp,0x48
64029518:	push   0x6402f750
6402951d:	push   ebp
6402951e:	push   0x6402f744
64029523:	mov    ds:0x6404849c,eax
64029528:	mov    DWORD PTR ds:0x640484a0,ebp
6402952e:	call   0x64002e50
64029533:	push   0x6402f70c
64029538:	push   0xb
6402953a:	push   0x6402f700
6402953f:	mov    ds:0x640484a4,eax
64029544:	mov    DWORD PTR ds:0x640484a8,0xb
6402954e:	call   0x64002e50
64029553:	push   0x6402f6c0
64029558:	push   0x9
6402955a:	push   0x6402f6b4
6402955f:	mov    ds:0x640484ac,eax
64029564:	mov    DWORD PTR ds:0x640484b0,0x9
6402956e:	call   0x64002e50
64029573:	push   0x6402f680
64029578:	push   0x9
6402957a:	push   0x6402f674
6402957f:	mov    ds:0x640484b4,eax
64029584:	mov    DWORD PTR ds:0x640484b8,0x9
6402958e:	call   0x64002e50
64029593:	push   0x6402f650
64029598:	push   0x9
6402959a:	push   0x6402f644
6402959f:	mov    ds:0x640484bc,eax
640295a4:	mov    DWORD PTR ds:0x640484c0,0x9
640295ae:	call   0x64002e50
640295b3:	push   0x6402f608
640295b8:	mov    ds:0x640484c4,eax
640295bd:	mov    DWORD PTR ds:0x640484c8,0x9
640295c7:	push   0x9
640295c9:	push   0x6402f5fc
640295ce:	call   0x64002e50
640295d3:	add    esp,0x48
640295d6:	push   0x6402f5d0
640295db:	push   ebp
640295dc:	push   0x6402f5c4
640295e1:	mov    ds:0x640484cc,eax
640295e6:	mov    DWORD PTR ds:0x640484d0,ebp
640295ec:	call   0x64002e50
640295f1:	push   0x6402f58c
640295f6:	push   ebp
640295f7:	push   0x6402f580
640295fc:	mov    ds:0x640484d4,eax
64029601:	mov    DWORD PTR ds:0x640484d8,ebp
64029607:	call   0x64002e50
6402960c:	push   0x6402f558
64029611:	push   ebp
64029612:	push   0x6402f54c
64029617:	mov    ds:0x640484dc,eax
6402961c:	mov    DWORD PTR ds:0x640484e0,ebp
64029622:	call   0x64002e50
64029627:	push   0x6402f524
6402962c:	push   0xb
6402962e:	push   0x6402f518
64029633:	mov    ds:0x640484e4,eax
64029638:	mov    DWORD PTR ds:0x640484e8,0xb
64029642:	call   0x64002e50
64029647:	push   0x6402f4e4
6402964c:	push   0x9
6402964e:	push   0x6402f4d8
64029653:	mov    ds:0x640484ec,eax
64029658:	mov    DWORD PTR ds:0x640484f0,0x9
64029662:	call   0x64002e50
64029667:	push   0x6402f4a0
6402966c:	push   0x9
6402966e:	push   0x6402f494
64029673:	mov    ds:0x640484f4,eax
64029678:	mov    DWORD PTR ds:0x640484f8,0x9
64029682:	call   0x64002e50
64029687:	add    esp,0x48
6402968a:	push   0x6402f460
6402968f:	push   0x9
64029691:	push   0x6402f454
64029696:	mov    ds:0x640484fc,eax
6402969b:	mov    DWORD PTR ds:0x64048500,0x9
640296a5:	call   0x64002e50
640296aa:	push   0x6402f420
640296af:	push   0x9
640296b1:	push   0x6402f414
640296b6:	mov    ds:0x64048504,eax
640296bb:	mov    DWORD PTR ds:0x64048508,0x9
640296c5:	call   0x64002e50
640296ca:	push   0x6402f3dc
640296cf:	push   esi
640296d0:	push   0x6402f3d4
640296d5:	mov    ds:0x6404850c,eax
640296da:	mov    DWORD PTR ds:0x64048510,esi
640296e0:	call   0x64002e50
640296e5:	push   0x6402f3a8
640296ea:	push   edi
640296eb:	push   0x6402f3a0
640296f0:	mov    ds:0x64048514,eax
640296f5:	mov    DWORD PTR ds:0x64048518,edi
640296fb:	call   0x64002e50
64029700:	push   0x6402f374
64029705:	push   esi
64029706:	push   0x6402f36c
6402970b:	mov    ds:0x6404851c,eax
64029710:	mov    DWORD PTR ds:0x64048520,esi
64029716:	call   0x64002e50
6402971b:	push   0x6402f33c
64029720:	push   esi
64029721:	push   0x6402f334
64029726:	mov    ds:0x64048524,eax
6402972b:	mov    DWORD PTR ds:0x64048528,esi
64029731:	call   0x64002e50
64029736:	add    esp,0x48
64029739:	push   0x6402f310
6402973e:	mov    ds:0x6404852c,eax
64029743:	mov    DWORD PTR ds:0x64048530,edi
64029749:	push   edi
6402974a:	push   0x6402f308
6402974f:	call   0x64002e50
64029754:	push   0x6402f2e4
64029759:	push   edi
6402975a:	push   0x6402f2dc
6402975f:	mov    ds:0x64048534,eax
64029764:	mov    DWORD PTR ds:0x64048538,edi
6402976a:	call   0x64002e50
6402976f:	push   0x6402f2b0
64029774:	push   0x9
64029776:	push   0x6402f2a4
6402977b:	mov    ds:0x6404853c,eax
64029780:	mov    DWORD PTR ds:0x64048540,0x9
6402978a:	call   0x64002e50
6402978f:	push   0x6402f268
64029794:	push   0xa
64029796:	push   0x6402f25c
6402979b:	mov    ds:0x64048544,eax
640297a0:	mov    DWORD PTR ds:0x64048548,0xa
640297aa:	call   0x64002e50
640297af:	push   0x6402f220
640297b4:	push   edi
640297b5:	push   0x6402f218
640297ba:	mov    ds:0x6404854c,eax
640297bf:	mov    DWORD PTR ds:0x64048550,edi
640297c5:	call   0x64002e50
640297ca:	push   0x6402f1d8
640297cf:	push   edi
640297d0:	push   0x6402f1d0
640297d5:	mov    ds:0x64048554,eax
640297da:	mov    DWORD PTR ds:0x64048558,edi
640297e0:	call   0x64002e50
640297e5:	add    esp,0x48
640297e8:	push   0x6402f198
640297ed:	push   edi
640297ee:	push   0x6402f190
640297f3:	mov    ds:0x6404855c,eax
640297f8:	mov    DWORD PTR ds:0x64048560,edi
640297fe:	call   0x64002e50
64029803:	push   0x6402f150
64029808:	push   ebx
64029809:	push   0x6402f148
6402980e:	mov    ds:0x64048564,eax
64029813:	mov    DWORD PTR ds:0x64048568,ebx
64029819:	call   0x64002e50
6402981e:	push   0x6402f11c
64029823:	push   ebp
64029824:	push   0x6402f110
64029829:	mov    ds:0x6404856c,eax
6402982e:	mov    DWORD PTR ds:0x64048570,ebp
64029834:	call   0x64002e50
64029839:	push   0x6402f0e0
6402983e:	push   ebp
6402983f:	push   0x6402f0d4
64029844:	mov    ds:0x64048574,eax
64029849:	mov    DWORD PTR ds:0x64048578,ebp
6402984f:	call   0x64002e50
64029854:	push   0x6402f0ac
64029859:	push   0x9
6402985b:	push   0x6402f0a0
64029860:	mov    ds:0x6404857c,eax
64029865:	mov    DWORD PTR ds:0x64048580,0x9
6402986f:	call   0x64002e50
64029874:	push   0x6402f070
64029879:	push   0x9
6402987b:	push   0x6402f064
64029880:	mov    ds:0x64048584,eax
64029885:	mov    DWORD PTR ds:0x64048588,0x9
6402988f:	call   0x64002e50
64029894:	add    esp,0x48
64029897:	push   0x6402f034
6402989c:	push   ebx
6402989d:	push   0x6402f02c
640298a2:	mov    ds:0x6404858c,eax
640298a7:	mov    DWORD PTR ds:0x64048590,ebx
640298ad:	call   0x64002e50
640298b2:	push   0x6402effc
640298b7:	push   esi
640298b8:	mov    ds:0x64048594,eax
640298bd:	mov    DWORD PTR ds:0x64048598,esi
640298c3:	push   0x6402eff4
640298c8:	call   0x64002e50
640298cd:	push   0x6402efd0
640298d2:	push   esi
640298d3:	push   0x6402efc8
640298d8:	mov    ds:0x6404859c,eax
640298dd:	mov    DWORD PTR ds:0x640485a0,esi
640298e3:	call   0x64002e50
640298e8:	push   0x6402efa4
640298ed:	push   edi
640298ee:	push   0x6402ef9c
640298f3:	mov    ds:0x640485a4,eax
640298f8:	mov    DWORD PTR ds:0x640485a8,edi
640298fe:	call   0x64002e50
64029903:	push   0x6402ef74
64029908:	push   edi
64029909:	push   0x6402ef6c
6402990e:	mov    ds:0x640485ac,eax
64029913:	mov    DWORD PTR ds:0x640485b0,edi
64029919:	call   0x64002e50
6402991e:	push   0x6402ef34
64029923:	push   edi
64029924:	push   0x6402ef2c
64029929:	mov    ds:0x640485b4,eax
6402992e:	mov    DWORD PTR ds:0x640485b8,edi
64029934:	call   0x64002e50
64029939:	add    esp,0x48
6402993c:	push   0x6402eef0
64029941:	push   ebp
64029942:	push   0x6402eee4
64029947:	mov    ds:0x640485bc,eax
6402994c:	mov    DWORD PTR ds:0x640485c0,ebp
64029952:	call   0x64002e50
64029957:	push   0x6402eeac
6402995c:	push   0x9
6402995e:	push   0x6402eea0
64029963:	mov    ds:0x640485c4,eax
64029968:	mov    DWORD PTR ds:0x640485c8,0x9
64029972:	call   0x64002e50
64029977:	push   0x6402ee74
6402997c:	push   edi
6402997d:	push   0x6402ee6c
64029982:	mov    ds:0x640485cc,eax
64029987:	mov    DWORD PTR ds:0x640485d0,edi
6402998d:	call   0x64002e50
64029992:	push   0x6402ee40
64029997:	push   ebp
64029998:	push   0x6402ee34
6402999d:	mov    ds:0x640485d4,eax
640299a2:	mov    DWORD PTR ds:0x640485d8,ebp
640299a8:	call   0x64002e50
640299ad:	push   0x6402ee00
640299b2:	push   edi
640299b3:	push   0x6402edf8
640299b8:	mov    ds:0x640485dc,eax
640299bd:	mov    DWORD PTR ds:0x640485e0,edi
640299c3:	call   0x64002e50
640299c8:	push   0x6402edd0
640299cd:	push   ebp
640299ce:	push   0x6402edc4
640299d3:	mov    ds:0x640485e4,eax
640299d8:	mov    DWORD PTR ds:0x640485e8,ebp
640299de:	call   0x64002e50
640299e3:	add    esp,0x48
640299e6:	push   0x6402eda0
640299eb:	push   esi
640299ec:	push   0x6402ed98
640299f1:	mov    ds:0x640485ec,eax
640299f6:	mov    DWORD PTR ds:0x640485f0,esi
640299fc:	call   0x64002e50
64029a01:	push   0x6402ed5c
64029a06:	push   edi
64029a07:	push   0x6402ed54
64029a0c:	mov    ds:0x640485f4,eax
64029a11:	mov    DWORD PTR ds:0x640485f8,edi
64029a17:	call   0x64002e50
64029a1c:	push   0x6402ed14
64029a21:	push   0x4
64029a23:	push   0x6402ed0c
64029a28:	mov    ds:0x640485fc,eax
64029a2d:	mov    DWORD PTR ds:0x64048600,0x4
64029a37:	call   0x64002e50
64029a3c:	push   0x6402ecd4
64029a41:	push   ebx
64029a42:	push   0x6402eccc
64029a47:	mov    ds:0x64048604,eax
64029a4c:	mov    DWORD PTR ds:0x64048608,ebx
64029a52:	call   0x64002e50
64029a57:	push   0x6402ec98
64029a5c:	push   edi
64029a5d:	push   0x6402ec90
64029a62:	mov    ds:0x6404860c,eax
64029a67:	mov    DWORD PTR ds:0x64048610,edi
64029a6d:	call   0x64002e50
64029a72:	push   0x6402ec68
64029a77:	push   ebp
64029a78:	push   0x6402ec5c
64029a7d:	mov    ds:0x64048614,eax
64029a82:	mov    DWORD PTR ds:0x64048618,ebp
64029a88:	call   0x64002e50
64029a8d:	add    esp,0x48
64029a90:	push   0x6402ec38
64029a95:	push   edi
64029a96:	push   0x6402ec30
64029a9b:	mov    ds:0x6404861c,eax
64029aa0:	mov    DWORD PTR ds:0x64048620,edi
64029aa6:	call   0x64002e50
64029aab:	push   0x6402ec00
64029ab0:	push   esi
64029ab1:	push   0x6402ebf8
64029ab6:	mov    ds:0x64048624,eax
64029abb:	mov    DWORD PTR ds:0x64048628,esi
64029ac1:	call   0x64002e50
64029ac6:	push   0x6402ebd4
64029acb:	push   edi
64029acc:	push   0x6402ebcc
64029ad1:	mov    ds:0x6404862c,eax
64029ad6:	mov    DWORD PTR ds:0x64048630,edi
64029adc:	call   0x64002e50
64029ae1:	push   0x6402eb94
64029ae6:	push   ebx
64029ae7:	push   0x6402eb8c
64029aec:	mov    ds:0x64048634,eax
64029af1:	mov    DWORD PTR ds:0x64048638,ebx
64029af7:	call   0x64002e50
64029afc:	push   0x6402eb5c
64029b01:	push   esi
64029b02:	push   0x6402eb54
64029b07:	mov    ds:0x6404863c,eax
64029b0c:	mov    DWORD PTR ds:0x64048640,esi
64029b12:	call   0x64002e50
64029b17:	push   0x6402eb30
64029b1c:	push   ebx
64029b1d:	push   0x6402eb28
64029b22:	mov    ds:0x64048644,eax
64029b27:	mov    DWORD PTR ds:0x64048648,ebx
64029b2d:	call   0x64002e50
64029b32:	add    esp,0x48
64029b35:	push   0x6402eb04
64029b3a:	push   esi
64029b3b:	push   0x6402eafc
64029b40:	mov    ds:0x6404864c,eax
64029b45:	mov    DWORD PTR ds:0x64048650,esi
64029b4b:	call   0x64002e50
64029b50:	push   0x6402ead4
64029b55:	push   ebx
64029b56:	push   0x6402eacc
64029b5b:	mov    ds:0x64048654,eax
64029b60:	mov    DWORD PTR ds:0x64048658,ebx
64029b66:	call   0x64002e50
64029b6b:	push   0x6402ea9c
64029b70:	push   esi
64029b71:	push   0x6402ea94
64029b76:	mov    ds:0x6404865c,eax
64029b7b:	mov    DWORD PTR ds:0x64048660,esi
64029b81:	call   0x64002e50
64029b86:	push   0x6402ea6c
64029b8b:	push   edi
64029b8c:	push   0x6402ea64
64029b91:	mov    ds:0x64048664,eax
64029b96:	mov    DWORD PTR ds:0x64048668,edi
64029b9c:	call   0x64002e50
64029ba1:	mov    ds:0x6404866c,eax
64029ba6:	push   0x6402ea38
64029bab:	push   ebp
64029bac:	push   0x6402ea2c
64029bb1:	mov    DWORD PTR ds:0x64048670,ebp
64029bb7:	call   0x64002e50
64029bbc:	push   0x6402e9f8
64029bc1:	push   esi
64029bc2:	push   0x6402e9f0
64029bc7:	mov    ds:0x64048674,eax
64029bcc:	mov    DWORD PTR ds:0x64048678,esi
64029bd2:	call   0x64002e50
64029bd7:	add    esp,0x48
64029bda:	push   0x6402e9bc
64029bdf:	push   edi
64029be0:	push   0x6402e9b4
64029be5:	mov    ds:0x6404867c,eax
64029bea:	mov    DWORD PTR ds:0x64048680,edi
64029bf0:	call   0x64002e50
64029bf5:	push   0x6402e988
64029bfa:	push   0x9
64029bfc:	push   0x6402e97c
64029c01:	mov    ds:0x64048684,eax
64029c06:	mov    DWORD PTR ds:0x64048688,0x9
64029c10:	call   0x64002e50
64029c15:	push   0x6402e944
64029c1a:	push   ebp
64029c1b:	push   0x6402e938
64029c20:	mov    ds:0x6404868c,eax
64029c25:	mov    DWORD PTR ds:0x64048690,ebp
64029c2b:	call   0x64002e50
64029c30:	push   0x6402e910
64029c35:	push   ebp
64029c36:	push   0x6402e904
64029c3b:	mov    ds:0x64048694,eax
64029c40:	mov    DWORD PTR ds:0x64048698,ebp
64029c46:	call   0x64002e50
64029c4b:	push   0x6402e8e0
64029c50:	push   0xa
64029c52:	push   0x6402e8d4
64029c57:	mov    ds:0x6404869c,eax
64029c5c:	mov    DWORD PTR ds:0x640486a0,0xa
64029c66:	call   0x64002e50
64029c6b:	push   0x6402e89c
64029c70:	push   0x9
64029c72:	push   0x6402e890
64029c77:	mov    ds:0x640486a4,eax
64029c7c:	mov    DWORD PTR ds:0x640486a8,0x9
64029c86:	call   0x64002e50
64029c8b:	add    esp,0x48
64029c8e:	push   0x6402e860
64029c93:	push   0x9
64029c95:	push   0x6402e854
64029c9a:	mov    ds:0x640486ac,eax
64029c9f:	mov    DWORD PTR ds:0x640486b0,0x9
64029ca9:	call   0x64002e50
64029cae:	push   0x6402e828
64029cb3:	push   esi
64029cb4:	push   0x6402e820
64029cb9:	mov    ds:0x640486b4,eax
64029cbe:	mov    DWORD PTR ds:0x640486b8,esi
64029cc4:	call   0x64002e50
64029cc9:	push   0x6402e7fc
64029cce:	push   edi
64029ccf:	push   0x6402e7f4
64029cd4:	mov    ds:0x640486bc,eax
64029cd9:	mov    DWORD PTR ds:0x640486c0,edi
64029cdf:	call   0x64002e50
64029ce4:	push   0x6402e7b4
64029ce9:	push   ebp
64029cea:	push   0x6402e7a8
64029cef:	mov    ds:0x640486c4,eax
64029cf4:	mov    DWORD PTR ds:0x640486c8,ebp
64029cfa:	call   0x64002e50
64029cff:	push   0x6402e780
64029d04:	push   esi
64029d05:	push   0x6402e778
64029d0a:	mov    ds:0x640486cc,eax
64029d0f:	mov    DWORD PTR ds:0x640486d0,esi
64029d15:	call   0x64002e50
64029d1a:	mov    ds:0x640486d4,eax
64029d1f:	mov    DWORD PTR ds:0x640486d8,edi
64029d25:	push   0x6402e73c
64029d2a:	push   edi
64029d2b:	push   0x6402e734
64029d30:	call   0x64002e50
64029d35:	add    esp,0x48
64029d38:	push   0x6402e6f8
64029d3d:	push   esi
64029d3e:	push   0x6402e6f0
64029d43:	mov    ds:0x640486dc,eax
64029d48:	mov    DWORD PTR ds:0x640486e0,esi
64029d4e:	call   0x64002e50
64029d53:	push   0x6402e6b0
64029d58:	push   edi
64029d59:	push   0x6402e6a8
64029d5e:	mov    ds:0x640486e4,eax
64029d63:	mov    DWORD PTR ds:0x640486e8,edi
64029d69:	call   0x64002e50
64029d6e:	push   0x6402e67c
64029d73:	push   esi
64029d74:	push   0x6402e674
64029d79:	mov    ds:0x640486ec,eax
64029d7e:	mov    DWORD PTR ds:0x640486f0,esi
64029d84:	call   0x64002e50
64029d89:	push   0x6402e638
64029d8e:	push   edi
64029d8f:	push   0x6402e630
64029d94:	mov    ds:0x640486f4,eax
64029d99:	mov    DWORD PTR ds:0x640486f8,edi
64029d9f:	call   0x64002e50
64029da4:	push   0x6402e5fc
64029da9:	push   0x3
64029dab:	push   0x6402e5f8
64029db0:	mov    ds:0x640486fc,eax
64029db5:	mov    DWORD PTR ds:0x64048700,0x3
64029dbf:	call   0x64002e50
64029dc4:	push   0x6402e5b8
64029dc9:	push   0x4
64029dcb:	push   0x6402e5b0
64029dd0:	mov    ds:0x64048704,eax
64029dd5:	mov    DWORD PTR ds:0x64048708,0x4
64029ddf:	call   0x64002e50
64029de4:	add    esp,0x48
64029de7:	push   0x6402e584
64029dec:	push   esi
64029ded:	push   0x6402e57c
64029df2:	mov    ds:0x6404870c,eax
64029df7:	mov    DWORD PTR ds:0x64048710,esi
64029dfd:	call   0x64002e50
64029e02:	push   0x6402e550
64029e07:	push   edi
64029e08:	push   0x6402e548
64029e0d:	mov    ds:0x64048714,eax
64029e12:	mov    DWORD PTR ds:0x64048718,edi
64029e18:	call   0x64002e50
64029e1d:	push   0x6402e514
64029e22:	push   esi
64029e23:	push   0x6402e50c
64029e28:	mov    ds:0x6404871c,eax
64029e2d:	mov    DWORD PTR ds:0x64048720,esi
64029e33:	call   0x64002e50
64029e38:	push   0x6402e4d0
64029e3d:	push   edi
64029e3e:	push   0x6402e4c8
64029e43:	mov    ds:0x64048724,eax
64029e48:	mov    DWORD PTR ds:0x64048728,edi
64029e4e:	call   0x64002e50
64029e53:	push   0x6402e4a0
64029e58:	push   esi
64029e59:	push   0x6402e498
64029e5e:	mov    ds:0x6404872c,eax
64029e63:	mov    DWORD PTR ds:0x64048730,esi
64029e69:	call   0x64002e50
64029e6e:	push   0x6402e470
64029e73:	push   edi
64029e74:	push   0x6402e468
64029e79:	mov    ds:0x64048734,eax
64029e7e:	mov    DWORD PTR ds:0x64048738,edi
64029e84:	call   0x64002e50
64029e89:	add    esp,0x48
64029e8c:	mov    ds:0x6404873c,eax
64029e91:	mov    DWORD PTR ds:0x64048740,0x4
64029e9b:	push   0x6402e428
64029ea0:	push   0x4
64029ea2:	push   0x6402e41c
64029ea7:	call   0x64002e50
64029eac:	push   0x6402e3e4
64029eb1:	push   ebx
64029eb2:	push   0x6402e3dc
64029eb7:	mov    ds:0x64048744,eax
64029ebc:	mov    DWORD PTR ds:0x64048748,ebx
64029ec2:	call   0x64002e50
64029ec7:	push   0x6402e3a4
64029ecc:	push   ebx
64029ecd:	push   0x6402e39c
64029ed2:	mov    ds:0x6404874c,eax
64029ed7:	mov    DWORD PTR ds:0x64048750,ebx
64029edd:	call   0x64002e50
64029ee2:	push   0x6402e360
64029ee7:	push   esi
64029ee8:	push   0x6402e358
64029eed:	mov    ds:0x64048754,eax
64029ef2:	mov    DWORD PTR ds:0x64048758,esi
64029ef8:	call   0x64002e50
64029efd:	push   0x6402e32c
64029f02:	push   edi
64029f03:	push   0x6402e324
64029f08:	mov    ds:0x6404875c,eax
64029f0d:	mov    DWORD PTR ds:0x64048760,edi
64029f13:	call   0x64002e50
64029f18:	push   0x6402e2ec
64029f1d:	push   ebp
64029f1e:	push   0x6402e2e0
64029f23:	mov    ds:0x64048764,eax
64029f28:	mov    DWORD PTR ds:0x64048768,ebp
64029f2e:	call   0x64002e50
64029f33:	add    esp,0x48
64029f36:	push   0x6402e2a4
64029f3b:	push   edi
64029f3c:	push   0x6402e29c
64029f41:	mov    ds:0x6404876c,eax
64029f46:	mov    DWORD PTR ds:0x64048770,edi
64029f4c:	call   0x64002e50
64029f51:	push   0x6402e274
64029f56:	push   ebp
64029f57:	push   0x6402e268
64029f5c:	mov    ds:0x64048774,eax
64029f61:	mov    DWORD PTR ds:0x64048778,ebp
64029f67:	call   0x64002e50
64029f6c:	push   0x6402e240
64029f71:	push   esi
64029f72:	push   0x6402e238
64029f77:	mov    ds:0x6404877c,eax
64029f7c:	mov    DWORD PTR ds:0x64048780,esi
64029f82:	call   0x64002e50
64029f87:	push   0x6402e200
64029f8c:	push   edi
64029f8d:	push   0x6402e1f8
64029f92:	mov    ds:0x64048784,eax
64029f97:	mov    DWORD PTR ds:0x64048788,edi
64029f9d:	call   0x64002e50
64029fa2:	push   0x6402e1b8
64029fa7:	push   ebp
64029fa8:	push   0x6402e1a8
64029fad:	mov    ds:0x6404878c,eax
64029fb2:	mov    DWORD PTR ds:0x64048790,ebp
64029fb8:	call   0x64002e50
64029fbd:	push   0x6402e17c
64029fc2:	push   0xa
64029fc4:	push   0x6402e170
64029fc9:	mov    ds:0x64048794,eax
64029fce:	mov    DWORD PTR ds:0x64048798,0xa
64029fd8:	call   0x64002e50
64029fdd:	add    esp,0x48
64029fe0:	push   0x6402e138
64029fe5:	push   0xb
64029fe7:	push   0x6402e12c
64029fec:	mov    ds:0x6404879c,eax
64029ff1:	mov    DWORD PTR ds:0x640487a0,0xb
64029ffb:	call   0x64002e50
6402a000:	mov    ds:0x640487a4,eax
6402a005:	mov    DWORD PTR ds:0x640487a8,ebx
6402a00b:	push   0x6402e108
6402a010:	push   ebx
6402a011:	push   0x6402e100
6402a016:	call   0x64002e50
6402a01b:	push   0x6402e0dc
6402a020:	push   esi
6402a021:	push   0x6402e0d4
6402a026:	mov    ds:0x640487ac,eax
6402a02b:	mov    DWORD PTR ds:0x640487b0,esi
6402a031:	call   0x64002e50
6402a036:	push   0x6402e098
6402a03b:	push   ebx
6402a03c:	push   0x6402e090
6402a041:	mov    ds:0x640487b4,eax
6402a046:	mov    DWORD PTR ds:0x640487b8,ebx
6402a04c:	call   0x64002e50
6402a051:	push   0x6402e054
6402a056:	push   esi
6402a057:	push   0x6402e04c
6402a05c:	mov    ds:0x640487bc,eax
6402a061:	mov    DWORD PTR ds:0x640487c0,esi
6402a067:	call   0x64002e50
6402a06c:	push   0x6402e01c
6402a071:	push   ebx
6402a072:	push   0x6402e014
6402a077:	mov    ds:0x640487c4,eax
6402a07c:	mov    DWORD PTR ds:0x640487c8,ebx
6402a082:	call   0x64002e50
6402a087:	add    esp,0x48
6402a08a:	push   0x6402dff0
6402a08f:	push   esi
6402a090:	push   0x6402dfe8
6402a095:	mov    ds:0x640487cc,eax
6402a09a:	mov    DWORD PTR ds:0x640487d0,esi
6402a0a0:	call   0x64002e50
6402a0a5:	push   0x6402dfc0
6402a0aa:	push   ebx
6402a0ab:	push   0x6402dfb8
6402a0b0:	mov    ds:0x640487d4,eax
6402a0b5:	mov    DWORD PTR ds:0x640487d8,ebx
6402a0bb:	call   0x64002e50
6402a0c0:	push   0x6402df88
6402a0c5:	push   esi
6402a0c6:	push   0x6402df80
6402a0cb:	mov    ds:0x640487dc,eax
6402a0d0:	mov    DWORD PTR ds:0x640487e0,esi
6402a0d6:	call   0x64002e50
6402a0db:	push   0x6402df44
6402a0e0:	push   ebx
6402a0e1:	push   0x6402df3c
6402a0e6:	mov    ds:0x640487e4,eax
6402a0eb:	mov    DWORD PTR ds:0x640487e8,ebx
6402a0f1:	call   0x64002e50
6402a0f6:	push   0x6402df14
6402a0fb:	push   esi
6402a0fc:	push   0x6402df0c
6402a101:	mov    ds:0x640487ec,eax
6402a106:	mov    DWORD PTR ds:0x640487f0,esi
6402a10c:	call   0x64002e50
6402a111:	push   0x6402dee4
6402a116:	push   ebx
6402a117:	push   0x6402dedc
6402a11c:	mov    ds:0x640487f4,eax
6402a121:	mov    DWORD PTR ds:0x640487f8,ebx
6402a127:	call   0x64002e50
6402a12c:	add    esp,0x48
6402a12f:	push   0x6402deac
6402a134:	push   esi
6402a135:	push   0x6402dea4
6402a13a:	mov    ds:0x640487fc,eax
6402a13f:	mov    DWORD PTR ds:0x64048800,esi
6402a145:	call   0x64002e50
6402a14a:	push   0x6402de7c
6402a14f:	push   ebx
6402a150:	push   0x6402de74
6402a155:	mov    ds:0x64048804,eax
6402a15a:	mov    DWORD PTR ds:0x64048808,ebx
6402a160:	call   0x64002e50
6402a165:	push   0x6402de48
6402a16a:	mov    ds:0x6404880c,eax
6402a16f:	mov    DWORD PTR ds:0x64048810,esi
6402a175:	push   esi
6402a176:	push   0x6402de40
6402a17b:	call   0x64002e50
6402a180:	push   0x6402de10
6402a185:	push   0x3
6402a187:	push   0x6402de0c
6402a18c:	mov    ds:0x64048814,eax
6402a191:	mov    DWORD PTR ds:0x64048818,0x3
6402a19b:	call   0x64002e50
6402a1a0:	push   0x6402ddd0
6402a1a5:	push   0x3
6402a1a7:	push   0x6402ddcc
6402a1ac:	mov    ds:0x6404881c,eax
6402a1b1:	mov    DWORD PTR ds:0x64048820,0x3
6402a1bb:	call   0x64002e50
6402a1c0:	push   0x6402dda4
6402a1c5:	push   0x3
6402a1c7:	push   0x6402dda0
6402a1cc:	mov    ds:0x64048824,eax
6402a1d1:	mov    DWORD PTR ds:0x64048828,0x3
6402a1db:	call   0x64002e50
6402a1e0:	add    esp,0x48
6402a1e3:	push   0x6402dd6c
6402a1e8:	push   0x3
6402a1ea:	push   0x6402dd68
6402a1ef:	mov    ds:0x6404882c,eax
6402a1f4:	mov    DWORD PTR ds:0x64048830,0x3
6402a1fe:	call   0x64002e50
6402a203:	push   0x6402dd38
6402a208:	push   0x3
6402a20a:	push   0x6402dd34
6402a20f:	mov    ds:0x64048834,eax
6402a214:	mov    DWORD PTR ds:0x64048838,0x3
6402a21e:	call   0x64002e50
6402a223:	push   0x6402dcfc
6402a228:	push   0x3
6402a22a:	push   0x6402dcf8
6402a22f:	mov    ds:0x6404883c,eax
6402a234:	mov    DWORD PTR ds:0x64048840,0x3
6402a23e:	call   0x64002e50
6402a243:	push   0x6402dcbc
6402a248:	push   0x3
6402a24a:	push   0x6402dcb8
6402a24f:	mov    ds:0x64048844,eax
6402a254:	mov    DWORD PTR ds:0x64048848,0x3
6402a25e:	call   0x64002e50
6402a263:	push   0x6402dc94
6402a268:	push   0x3
6402a26a:	push   0x6402dc90
6402a26f:	mov    ds:0x6404884c,eax
6402a274:	mov    DWORD PTR ds:0x64048850,0x3
6402a27e:	call   0x64002e50
6402a283:	push   0x6402dc58
6402a288:	push   0x4
6402a28a:	push   0x6402dc50
6402a28f:	mov    ds:0x64048854,eax
6402a294:	mov    DWORD PTR ds:0x64048858,0x4
6402a29e:	call   0x64002e50
6402a2a3:	add    esp,0x48
6402a2a6:	push   0x6402dc1c
6402a2ab:	push   0x4
6402a2ad:	push   0x6402dc14
6402a2b2:	mov    ds:0x6404885c,eax
6402a2b7:	mov    DWORD PTR ds:0x64048860,0x4
6402a2c1:	call   0x64002e50
6402a2c6:	push   0x6402dbec
6402a2cb:	push   0x4
6402a2cd:	push   0x6402dbe4
6402a2d2:	mov    ds:0x64048864,eax
6402a2d7:	mov    DWORD PTR ds:0x64048868,0x4
6402a2e1:	call   0x64002e50
6402a2e6:	push   0x6402dbbc
6402a2eb:	push   ebx
6402a2ec:	push   0x6402dbb4
6402a2f1:	mov    ds:0x6404886c,eax
6402a2f6:	mov    DWORD PTR ds:0x64048870,ebx
6402a2fc:	call   0x64002e50
6402a301:	push   0x6402db80
6402a306:	push   0x4
6402a308:	mov    ds:0x64048874,eax
6402a30d:	mov    DWORD PTR ds:0x64048878,0x4
6402a317:	push   0x6402db78
6402a31c:	call   0x64002e50
6402a321:	push   0x6402db4c
6402a326:	push   ebx
6402a327:	push   0x6402db44
6402a32c:	mov    ds:0x6404887c,eax
6402a331:	mov    DWORD PTR ds:0x64048880,ebx
6402a337:	call   0x64002e50
6402a33c:	push   0x6402db04
6402a341:	push   0x4
6402a343:	push   0x6402dafc
6402a348:	mov    ds:0x64048884,eax
6402a34d:	mov    DWORD PTR ds:0x64048888,0x4
6402a357:	call   0x64002e50
6402a35c:	add    esp,0x48
6402a35f:	push   0x6402dad0
6402a364:	push   ebx
6402a365:	push   0x6402dac8
6402a36a:	mov    ds:0x6404888c,eax
6402a36f:	mov    DWORD PTR ds:0x64048890,ebx
6402a375:	call   0x64002e50
6402a37a:	push   0x6402da90
6402a37f:	push   0x3
6402a381:	push   0x6402da8c
6402a386:	mov    ds:0x64048894,eax
6402a38b:	mov    DWORD PTR ds:0x64048898,0x3
6402a395:	call   0x64002e50
6402a39a:	push   0x6402da58
6402a39f:	push   0x3
6402a3a1:	push   0x6402da54
6402a3a6:	mov    ds:0x6404889c,eax
6402a3ab:	mov    DWORD PTR ds:0x640488a0,0x3
6402a3b5:	call   0x64002e50
6402a3ba:	push   0x6402da28
6402a3bf:	push   0x4
6402a3c1:	push   0x6402da20
6402a3c6:	mov    ds:0x640488a4,eax
6402a3cb:	mov    DWORD PTR ds:0x640488a8,0x4
6402a3d5:	call   0x64002e50
6402a3da:	push   0x6402d9e8
6402a3df:	push   esi
6402a3e0:	push   0x6402d9e0
6402a3e5:	mov    ds:0x640488ac,eax
6402a3ea:	mov    DWORD PTR ds:0x640488b0,esi
6402a3f0:	call   0x64002e50
6402a3f5:	push   0x6402d9b8
6402a3fa:	push   ebx
6402a3fb:	push   0x6402d9b0
6402a400:	mov    ds:0x640488b4,eax
6402a405:	mov    DWORD PTR ds:0x640488b8,ebx
6402a40b:	call   0x64002e50
6402a410:	add    esp,0x48
6402a413:	push   0x6402d97c
6402a418:	push   0x4
6402a41a:	push   0x6402d974
6402a41f:	mov    ds:0x640488bc,eax
6402a424:	mov    DWORD PTR ds:0x640488c0,0x4
6402a42e:	call   0x64002e50
6402a433:	push   0x6402d940
6402a438:	push   0x4
6402a43a:	push   0x6402d938
6402a43f:	mov    ds:0x640488c4,eax
6402a444:	mov    DWORD PTR ds:0x640488c8,0x4
6402a44e:	call   0x64002e50
6402a453:	push   0x6402d90c
6402a458:	push   0x4
6402a45a:	push   0x6402d904
6402a45f:	mov    ds:0x640488cc,eax
6402a464:	mov    DWORD PTR ds:0x640488d0,0x4
6402a46e:	call   0x64002e50
6402a473:	push   0x6402d8e0
6402a478:	push   0x4
6402a47a:	push   0x6402d8d8
6402a47f:	mov    ds:0x640488d4,eax
6402a484:	mov    DWORD PTR ds:0x640488d8,0x4
6402a48e:	call   0x64002e50
6402a493:	push   0x6402d8a0
6402a498:	push   0x4
6402a49a:	push   0x6402d898
6402a49f:	mov    ds:0x640488dc,eax
6402a4a4:	mov    DWORD PTR ds:0x640488e0,0x4
6402a4ae:	call   0x64002e50
6402a4b3:	push   0x6402d860
6402a4b8:	push   0x4
6402a4ba:	push   0x6402d858
6402a4bf:	mov    ds:0x640488e4,eax
6402a4c4:	mov    DWORD PTR ds:0x640488e8,0x4
6402a4ce:	call   0x64002e50
6402a4d3:	add    esp,0x48
6402a4d6:	push   0x6402d81c
6402a4db:	push   0x4
6402a4dd:	push   0x6402d814
6402a4e2:	mov    ds:0x640488ec,eax
6402a4e7:	mov    DWORD PTR ds:0x640488f0,0x4
6402a4f1:	call   0x64002e50
6402a4f6:	push   0x6402d7dc
6402a4fb:	push   esi
6402a4fc:	push   0x6402d7d4
6402a501:	mov    ds:0x640488f4,eax
6402a506:	mov    DWORD PTR ds:0x640488f8,esi
6402a50c:	call   0x64002e50
6402a511:	push   0x6402d798
6402a516:	push   esi
6402a517:	push   0x6402d790
6402a51c:	mov    ds:0x640488fc,eax
6402a521:	mov    DWORD PTR ds:0x64048900,esi
6402a527:	call   0x64002e50
6402a52c:	push   0x6402d75c
6402a531:	push   ebx
6402a532:	push   0x6402d754
6402a537:	mov    ds:0x64048904,eax
6402a53c:	mov    DWORD PTR ds:0x64048908,ebx
6402a542:	call   0x64002e50
6402a547:	push   0x6402d718
6402a54c:	push   esi
6402a54d:	push   0x6402d710
6402a552:	mov    ds:0x6404890c,eax
6402a557:	mov    DWORD PTR ds:0x64048910,esi
6402a55d:	call   0x64002e50
6402a562:	push   0x6402d6e4
6402a567:	push   esi
6402a568:	push   0x6402d6dc
6402a56d:	mov    ds:0x64048914,eax
6402a572:	mov    DWORD PTR ds:0x64048918,esi
6402a578:	call   0x64002e50
6402a57d:	add    esp,0x48
6402a580:	push   0x6402d69c
6402a585:	push   0x4
6402a587:	push   0x6402d694
6402a58c:	mov    ds:0x6404891c,eax
6402a591:	mov    DWORD PTR ds:0x64048920,0x4
6402a59b:	call   0x64002e50
6402a5a0:	push   0x6402d66c
6402a5a5:	push   ebx
6402a5a6:	push   0x6402d664
6402a5ab:	mov    ds:0x64048924,eax
6402a5b0:	mov    DWORD PTR ds:0x64048928,ebx
6402a5b6:	call   0x64002e50
6402a5bb:	push   0x6402d630
6402a5c0:	push   ebx
6402a5c1:	push   0x6402d628
6402a5c6:	mov    ds:0x6404892c,eax
6402a5cb:	mov    DWORD PTR ds:0x64048930,ebx
6402a5d1:	call   0x64002e50
6402a5d6:	push   0x6402d5f4
6402a5db:	push   ebx
6402a5dc:	push   0x6402d5ec
6402a5e1:	mov    ds:0x64048934,eax
6402a5e6:	mov    DWORD PTR ds:0x64048938,ebx
6402a5ec:	call   0x64002e50
6402a5f1:	push   0x6402d5c4
6402a5f6:	push   esi
6402a5f7:	push   0x6402d5bc
6402a5fc:	mov    ds:0x6404893c,eax
6402a601:	mov    DWORD PTR ds:0x64048940,esi
6402a607:	call   0x64002e50
6402a60c:	push   0x6402d57c
6402a611:	push   edi
6402a612:	push   0x6402d574
6402a617:	mov    ds:0x64048944,eax
6402a61c:	mov    DWORD PTR ds:0x64048948,edi
6402a622:	call   0x64002e50
6402a627:	add    esp,0x48
6402a62a:	push   0x6402d540
6402a62f:	push   esi
6402a630:	push   0x6402d538
6402a635:	mov    ds:0x6404894c,eax
6402a63a:	mov    DWORD PTR ds:0x64048950,esi
6402a640:	call   0x64002e50
6402a645:	push   0x6402d4fc
6402a64a:	push   edi
6402a64b:	push   0x6402d4f4
6402a650:	mov    ds:0x64048954,eax
6402a655:	mov    DWORD PTR ds:0x64048958,edi
6402a65b:	call   0x64002e50
6402a660:	push   0x6402d4c8
6402a665:	push   edi
6402a666:	push   0x6402d4c0
6402a66b:	mov    ds:0x6404895c,eax
6402a670:	mov    DWORD PTR ds:0x64048960,edi
6402a676:	call   0x64002e50
6402a67b:	push   0x6402d48c
6402a680:	push   ebx
6402a681:	push   0x6402d484
6402a686:	mov    ds:0x64048964,eax
6402a68b:	mov    DWORD PTR ds:0x64048968,ebx
6402a691:	call   0x64002e50
6402a696:	push   0x6402d44c
6402a69b:	push   edi
6402a69c:	push   0x6402d444
6402a6a1:	mov    ds:0x6404896c,eax
6402a6a6:	mov    DWORD PTR ds:0x64048970,edi
6402a6ac:	call   0x64002e50
6402a6b1:	push   0x6402d410
6402a6b6:	push   ebx
6402a6b7:	push   0x6402d408
6402a6bc:	mov    ds:0x64048974,eax
6402a6c1:	mov    DWORD PTR ds:0x64048978,ebx
6402a6c7:	call   0x64002e50
6402a6cc:	add    esp,0x48
6402a6cf:	push   0x6402d3d0
6402a6d4:	push   edi
6402a6d5:	push   0x6402d3c8
6402a6da:	mov    ds:0x6404897c,eax
6402a6df:	mov    DWORD PTR ds:0x64048980,edi
6402a6e5:	call   0x64002e50
6402a6ea:	push   0x6402d3a0
6402a6ef:	push   edi
6402a6f0:	push   0x6402d398
6402a6f5:	mov    ds:0x64048984,eax
6402a6fa:	mov    DWORD PTR ds:0x64048988,edi
6402a700:	call   0x64002e50
6402a705:	push   0x6402d368
6402a70a:	push   esi
6402a70b:	push   0x6402d360
6402a710:	mov    ds:0x6404898c,eax
6402a715:	mov    DWORD PTR ds:0x64048990,esi
6402a71b:	call   0x64002e50
6402a720:	push   0x6402d328
6402a725:	push   0x4
6402a727:	push   0x6402d320
6402a72c:	mov    ds:0x64048994,eax
6402a731:	mov    DWORD PTR ds:0x64048998,0x4
6402a73b:	call   0x64002e50
6402a740:	push   0x6402d2e0
6402a745:	push   0x4
6402a747:	push   0x6402d2d4
6402a74c:	mov    ds:0x6404899c,eax
6402a751:	mov    DWORD PTR ds:0x640489a0,0x4
6402a75b:	call   0x64002e50
6402a760:	push   0x6402d2a8
6402a765:	push   edi
6402a766:	push   0x6402d2a0
6402a76b:	mov    ds:0x640489a4,eax
6402a770:	mov    DWORD PTR ds:0x640489a8,edi
6402a776:	call   0x64002e50
6402a77b:	add    esp,0x48
6402a77e:	push   0x6402d260
6402a783:	push   esi
6402a784:	push   0x6402d254
6402a789:	mov    ds:0x640489ac,eax
6402a78e:	mov    DWORD PTR ds:0x640489b0,esi
6402a794:	call   0x64002e50
6402a799:	mov    ds:0x640489b4,eax
6402a79e:	push   0x6402d218
6402a7a3:	push   esi
6402a7a4:	push   0x6402d210
6402a7a9:	mov    DWORD PTR ds:0x640489b8,esi
6402a7af:	call   0x64002e50
6402a7b4:	push   0x6402d1d8
6402a7b9:	push   ebx
6402a7ba:	push   0x6402d1d0
6402a7bf:	mov    ds:0x640489bc,eax
6402a7c4:	mov    DWORD PTR ds:0x640489c0,ebx
6402a7ca:	call   0x64002e50
6402a7cf:	push   0x6402d194
6402a7d4:	push   ebx
6402a7d5:	push   0x6402d18c
6402a7da:	mov    ds:0x640489c4,eax
6402a7df:	mov    DWORD PTR ds:0x640489c8,ebx
6402a7e5:	call   0x64002e50
6402a7ea:	push   0x6402d154
6402a7ef:	push   ebx
6402a7f0:	push   0x6402d14c
6402a7f5:	mov    ds:0x640489cc,eax
6402a7fa:	mov    DWORD PTR ds:0x640489d0,ebx
6402a800:	call   0x64002e50
6402a805:	push   0x6402d120
6402a80a:	push   ebx
6402a80b:	push   0x6402d118
6402a810:	mov    ds:0x640489d4,eax
6402a815:	mov    DWORD PTR ds:0x640489d8,ebx
6402a81b:	call   0x64002e50
6402a820:	add    esp,0x48
6402a823:	push   0x6402d0e0
6402a828:	push   esi
6402a829:	push   0x6402d0d8
6402a82e:	mov    ds:0x640489dc,eax
6402a833:	mov    DWORD PTR ds:0x640489e0,esi
6402a839:	call   0x64002e50
6402a83e:	push   0x6402d0a0
6402a843:	push   ebx
6402a844:	push   0x6402d098
6402a849:	mov    ds:0x640489e4,eax
6402a84e:	mov    DWORD PTR ds:0x640489e8,ebx
6402a854:	call   0x64002e50
6402a859:	push   0x6402d070
6402a85e:	push   esi
6402a85f:	push   0x6402d068
6402a864:	mov    ds:0x640489ec,eax
6402a869:	mov    DWORD PTR ds:0x640489f0,esi
6402a86f:	call   0x64002e50
6402a874:	push   0x6402d03c
6402a879:	push   ebx
6402a87a:	push   0x6402d034
6402a87f:	mov    ds:0x640489f4,eax
6402a884:	mov    DWORD PTR ds:0x640489f8,ebx
6402a88a:	call   0x64002e50
6402a88f:	push   0x6402cff4
6402a894:	push   esi
6402a895:	push   0x6402cfec
6402a89a:	mov    ds:0x640489fc,eax
6402a89f:	mov    DWORD PTR ds:0x64048a00,esi
6402a8a5:	call   0x64002e50
6402a8aa:	push   0x6402cfb0
6402a8af:	push   esi
6402a8b0:	push   0x6402cfa8
6402a8b5:	mov    ds:0x64048a04,eax
6402a8ba:	mov    DWORD PTR ds:0x64048a08,esi
6402a8c0:	call   0x64002e50
6402a8c5:	add    esp,0x48
6402a8c8:	push   0x6402cf78
6402a8cd:	push   esi
6402a8ce:	push   0x6402cf70
6402a8d3:	mov    ds:0x64048a0c,eax
6402a8d8:	mov    DWORD PTR ds:0x64048a10,esi
6402a8de:	call   0x64002e50
6402a8e3:	push   0x6402cf30
6402a8e8:	push   edi
6402a8e9:	push   0x6402cf28
6402a8ee:	mov    ds:0x64048a14,eax
6402a8f3:	mov    DWORD PTR ds:0x64048a18,edi
6402a8f9:	call   0x64002e50
6402a8fe:	mov    ds:0x64048a1c,eax
6402a903:	mov    DWORD PTR ds:0x64048a20,esi
6402a909:	push   0x6402cef8
6402a90e:	push   esi
6402a90f:	push   0x6402cef0
6402a914:	call   0x64002e50
6402a919:	push   0x6402cec0
6402a91e:	push   edi
6402a91f:	push   0x6402ceb8
6402a924:	mov    ds:0x64048a24,eax
6402a929:	mov    DWORD PTR ds:0x64048a28,edi
6402a92f:	call   0x64002e50
6402a934:	push   0x6402ce8c
6402a939:	push   0x4
6402a93b:	push   0x6402ce84
6402a940:	mov    ds:0x64048a2c,eax
6402a945:	mov    DWORD PTR ds:0x64048a30,0x4
6402a94f:	call   0x64002e50
6402a954:	push   0x6402ce54
6402a959:	push   esi
6402a95a:	push   0x6402ce4c
6402a95f:	mov    ds:0x64048a34,eax
6402a964:	mov    DWORD PTR ds:0x64048a38,esi
6402a96a:	call   0x64002e50
6402a96f:	add    esp,0x48
6402a972:	push   0x6402ce28
6402a977:	push   0x4
6402a979:	push   0x6402ce20
6402a97e:	mov    ds:0x64048a3c,eax
6402a983:	mov    DWORD PTR ds:0x64048a40,0x4
6402a98d:	call   0x64002e50
6402a992:	push   0x6402cde4
6402a997:	push   ebx
6402a998:	push   0x6402cddc
6402a99d:	mov    ds:0x64048a44,eax
6402a9a2:	mov    DWORD PTR ds:0x64048a48,ebx
6402a9a8:	call   0x64002e50
6402a9ad:	push   0x6402cdb8
6402a9b2:	push   edi
6402a9b3:	push   0x6402cdb0
6402a9b8:	mov    ds:0x64048a4c,eax
6402a9bd:	mov    DWORD PTR ds:0x64048a50,edi
6402a9c3:	call   0x64002e50
6402a9c8:	push   0x6402cd80
6402a9cd:	push   edi
6402a9ce:	push   0x6402cd78
6402a9d3:	mov    ds:0x64048a54,eax
6402a9d8:	mov    DWORD PTR ds:0x64048a58,edi
6402a9de:	call   0x64002e50
6402a9e3:	push   0x6402cd38
6402a9e8:	push   ebp
6402a9e9:	push   0x6402cd2c
6402a9ee:	mov    ds:0x64048a5c,eax
6402a9f3:	mov    DWORD PTR ds:0x64048a60,ebp
6402a9f9:	call   0x64002e50
6402a9fe:	push   0x6402cd00
6402aa03:	push   edi
6402aa04:	push   0x6402ccf8
6402aa09:	mov    ds:0x64048a64,eax
6402aa0e:	mov    DWORD PTR ds:0x64048a68,edi
6402aa14:	call   0x64002e50
6402aa19:	add    esp,0x48
6402aa1c:	mov    ebp,0x4
6402aa21:	push   0x6402ccbc
6402aa26:	push   ebp
6402aa27:	push   0x6402ccb4
6402aa2c:	mov    ds:0x64048a6c,eax
6402aa31:	mov    DWORD PTR ds:0x64048a70,ebp
6402aa37:	call   0x64002e50
6402aa3c:	push   0x6402cc84
6402aa41:	push   esi
6402aa42:	push   0x6402cc7c
6402aa47:	mov    ds:0x64048a74,eax
6402aa4c:	mov    DWORD PTR ds:0x64048a78,esi
6402aa52:	call   0x64002e50
6402aa57:	push   0x6402cc50
6402aa5c:	push   esi
6402aa5d:	push   0x6402cc48
6402aa62:	mov    ds:0x64048a7c,eax
6402aa67:	mov    DWORD PTR ds:0x64048a80,esi
6402aa6d:	call   0x64002e50
6402aa72:	mov    ds:0x64048a84,eax
6402aa77:	mov    DWORD PTR ds:0x64048a88,esi
6402aa7d:	push   0x6402cc0c
6402aa82:	push   esi
6402aa83:	push   0x6402cc04
6402aa88:	call   0x64002e50
6402aa8d:	push   0x6402cbd4
6402aa92:	push   ebx
6402aa93:	push   0x6402cbcc
6402aa98:	mov    ds:0x64048a8c,eax
6402aa9d:	mov    DWORD PTR ds:0x64048a90,ebx
6402aaa3:	call   0x64002e50
6402aaa8:	push   0x6402cb94
6402aaad:	push   esi
6402aaae:	push   0x6402cb8c
6402aab3:	mov    ds:0x64048a94,eax
6402aab8:	mov    DWORD PTR ds:0x64048a98,esi
6402aabe:	call   0x64002e50
6402aac3:	add    esp,0x48
6402aac6:	push   0x6402cb54
6402aacb:	push   ebx
6402aacc:	push   0x6402cb4c
6402aad1:	mov    ds:0x64048a9c,eax
6402aad6:	mov    DWORD PTR ds:0x64048aa0,ebx
6402aadc:	call   0x64002e50
6402aae1:	push   0x6402cb14
6402aae6:	push   esi
6402aae7:	push   0x6402cb0c
6402aaec:	mov    ds:0x64048aa4,eax
6402aaf1:	mov    DWORD PTR ds:0x64048aa8,esi
6402aaf7:	call   0x64002e50
6402aafc:	push   0x6402cae0
6402ab01:	push   ebx
6402ab02:	push   0x6402cad8
6402ab07:	mov    ds:0x64048aac,eax
6402ab0c:	mov    DWORD PTR ds:0x64048ab0,ebx
6402ab12:	call   0x64002e50
6402ab17:	push   0x6402ca9c
6402ab1c:	push   esi
6402ab1d:	push   0x6402ca94
6402ab22:	mov    ds:0x64048ab4,eax
6402ab27:	mov    DWORD PTR ds:0x64048ab8,esi
6402ab2d:	call   0x64002e50
6402ab32:	push   0x6402ca58
6402ab37:	push   ebx
6402ab38:	push   0x6402ca50
6402ab3d:	mov    ds:0x64048abc,eax
6402ab42:	mov    DWORD PTR ds:0x64048ac0,ebx
6402ab48:	call   0x64002e50
6402ab4d:	push   0x6402ca14
6402ab52:	push   ebx
6402ab53:	push   0x6402ca0c
6402ab58:	mov    ds:0x64048ac4,eax
6402ab5d:	mov    DWORD PTR ds:0x64048ac8,ebx
6402ab63:	call   0x64002e50
6402ab68:	add    esp,0x48
6402ab6b:	push   0x6402c9cc
6402ab70:	push   esi
6402ab71:	push   0x6402c9c4
6402ab76:	mov    ds:0x64048acc,eax
6402ab7b:	mov    DWORD PTR ds:0x64048ad0,esi
6402ab81:	call   0x64002e50
6402ab86:	push   0x6402c98c
6402ab8b:	push   esi
6402ab8c:	push   0x6402c984
6402ab91:	mov    ds:0x64048ad4,eax
6402ab96:	mov    DWORD PTR ds:0x64048ad8,esi
6402ab9c:	call   0x64002e50
6402aba1:	push   0x6402c948
6402aba6:	push   ebx
6402aba7:	push   0x6402c940
6402abac:	mov    ds:0x64048adc,eax
6402abb1:	mov    DWORD PTR ds:0x64048ae0,ebx
6402abb7:	call   0x64002e50
6402abbc:	push   0x6402c908
6402abc1:	push   esi
6402abc2:	push   0x6402c900
6402abc7:	mov    ds:0x64048ae4,eax
6402abcc:	mov    DWORD PTR ds:0x64048ae8,esi
6402abd2:	call   0x64002e50
6402abd7:	mov    ds:0x64048aec,eax
6402abdc:	mov    DWORD PTR ds:0x64048af0,ebx
6402abe2:	push   0x6402c8d0
6402abe7:	push   ebx
6402abe8:	push   0x6402c8c8
6402abed:	call   0x64002e50
6402abf2:	push   0x6402c890
6402abf7:	push   ebx
6402abf8:	push   0x6402c888
6402abfd:	mov    ds:0x64048af4,eax
6402ac02:	mov    DWORD PTR ds:0x64048af8,ebx
6402ac08:	call   0x64002e50
6402ac0d:	add    esp,0x48
6402ac10:	push   0x6402c858
6402ac15:	push   ebx
6402ac16:	push   0x6402c850
6402ac1b:	mov    ds:0x64048afc,eax
6402ac20:	mov    DWORD PTR ds:0x64048b00,ebx
6402ac26:	call   0x64002e50
6402ac2b:	push   0x6402c810
6402ac30:	push   esi
6402ac31:	push   0x6402c808
6402ac36:	mov    ds:0x64048b04,eax
6402ac3b:	mov    DWORD PTR ds:0x64048b08,esi
6402ac41:	call   0x64002e50
6402ac46:	push   0x6402c7c8
6402ac4b:	push   esi
6402ac4c:	push   0x6402c7bc
6402ac51:	mov    ds:0x64048b0c,eax
6402ac56:	mov    DWORD PTR ds:0x64048b10,esi
6402ac5c:	call   0x64002e50
6402ac61:	push   0x6402c788
6402ac66:	push   ebx
6402ac67:	push   0x6402c780
6402ac6c:	mov    ds:0x64048b14,eax
6402ac71:	mov    DWORD PTR ds:0x64048b18,ebx
6402ac77:	call   0x64002e50
6402ac7c:	push   0x6402c758
6402ac81:	push   esi
6402ac82:	push   0x6402c750
6402ac87:	mov    ds:0x64048b1c,eax
6402ac8c:	mov    DWORD PTR ds:0x64048b20,esi
6402ac92:	call   0x64002e50
6402ac97:	push   0x6402c728
6402ac9c:	push   ebx
6402ac9d:	push   0x6402c720
6402aca2:	mov    ds:0x64048b24,eax
6402aca7:	mov    DWORD PTR ds:0x64048b28,ebx
6402acad:	call   0x64002e50
6402acb2:	add    esp,0x48
6402acb5:	push   0x6402c6e8
6402acba:	push   ebp
6402acbb:	push   0x6402c6e0
6402acc0:	mov    ds:0x64048b2c,eax
6402acc5:	mov    DWORD PTR ds:0x64048b30,ebp
6402accb:	call   0x64002e50
6402acd0:	push   0x6402c6a8
6402acd5:	push   ebx
6402acd6:	push   0x6402c6a0
6402acdb:	mov    ds:0x64048b34,eax
6402ace0:	mov    DWORD PTR ds:0x64048b38,ebx
6402ace6:	call   0x64002e50
6402aceb:	push   0x6402c668
6402acf0:	push   edi
6402acf1:	push   0x6402c660
6402acf6:	mov    ds:0x64048b3c,eax
6402acfb:	mov    DWORD PTR ds:0x64048b40,edi
6402ad01:	call   0x64002e50
6402ad06:	push   0x6402c620
6402ad0b:	push   esi
6402ad0c:	push   0x6402c618
6402ad11:	mov    ds:0x64048b44,eax
6402ad16:	mov    DWORD PTR ds:0x64048b48,esi
6402ad1c:	call   0x64002e50
6402ad21:	mov    edi,0x3
6402ad26:	push   0x6402c5dc
6402ad2b:	push   edi
6402ad2c:	push   0x6402c5d8
6402ad31:	mov    ds:0x64048b4c,eax
6402ad36:	mov    DWORD PTR ds:0x64048b50,edi
6402ad3c:	call   0x64002e50
6402ad41:	mov    ds:0x64048b54,eax
6402ad46:	mov    DWORD PTR ds:0x64048b58,edi
6402ad4c:	push   0x6402c5a0
6402ad51:	push   edi
6402ad52:	push   0x6402c59c
6402ad57:	call   0x64002e50
6402ad5c:	add    esp,0x48
6402ad5f:	push   0x6402c570
6402ad64:	push   edi
6402ad65:	push   0x6402c56c
6402ad6a:	mov    ds:0x64048b5c,eax
6402ad6f:	mov    DWORD PTR ds:0x64048b60,edi
6402ad75:	call   0x64002e50
6402ad7a:	push   0x6402c544
6402ad7f:	push   edi
6402ad80:	push   0x6402c540
6402ad85:	mov    ds:0x64048b64,eax
6402ad8a:	mov    DWORD PTR ds:0x64048b68,edi
6402ad90:	call   0x64002e50
6402ad95:	push   0x6402c514
6402ad9a:	push   ebp
6402ad9b:	push   0x6402c50c
6402ada0:	mov    ds:0x64048b6c,eax
6402ada5:	mov    DWORD PTR ds:0x64048b70,ebp
6402adab:	call   0x64002e50
6402adb0:	push   0x6402c4e0
6402adb5:	push   ebp
6402adb6:	push   0x6402c4d8
6402adbb:	mov    ds:0x64048b74,eax
6402adc0:	mov    DWORD PTR ds:0x64048b78,ebp
6402adc6:	call   0x64002e50
6402adcb:	push   0x6402c4ac
6402add0:	push   esi
6402add1:	push   0x6402c4a4
6402add6:	mov    ds:0x64048b7c,eax
6402addb:	mov    DWORD PTR ds:0x64048b80,esi
6402ade1:	call   0x64002e50
6402ade6:	push   0x6402c478
6402adeb:	push   ebx
6402adec:	push   0x6402c470
6402adf1:	mov    ds:0x64048b84,eax
6402adf6:	mov    DWORD PTR ds:0x64048b88,ebx
6402adfc:	call   0x64002e50
6402ae01:	add    esp,0x48
6402ae04:	pop    edi
6402ae05:	pop    esi
6402ae06:	pop    ebp
6402ae07:	mov    ds:0x64048b8c,eax
6402ae0c:	pop    ebx
6402ae0d:	ret    
6402ae0e:	int3   
6402ae0f:	int3   
6402ae10:	push   ebx
6402ae11:	push   esi
6402ae12:	push   edi
6402ae13:	push   0x6403c81c
6402ae18:	mov    esi,0x3
6402ae1d:	push   esi
6402ae1e:	push   0x6403c818
6402ae23:	call   0x64002e50
6402ae28:	push   0x6403c7f4
6402ae2d:	push   esi
6402ae2e:	push   0x6403c7f0
6402ae33:	mov    ds:0x64046844,eax
6402ae38:	mov    DWORD PTR ds:0x64046848,esi
6402ae3e:	call   0x64002e50
6402ae43:	push   0x6403c7bc
6402ae48:	push   esi
6402ae49:	push   0x6403c7b8
6402ae4e:	mov    ds:0x6404684c,eax
6402ae53:	mov    DWORD PTR ds:0x64046850,esi
6402ae59:	call   0x64002e50
6402ae5e:	push   0x6403c780
6402ae63:	push   esi
6402ae64:	push   0x6403c77c
6402ae69:	mov    ds:0x64046854,eax
6402ae6e:	mov    DWORD PTR ds:0x64046858,esi
6402ae74:	call   0x64002e50
6402ae79:	push   0x6403c73c
6402ae7e:	push   esi
6402ae7f:	push   0x6403c738
6402ae84:	mov    ds:0x6404685c,eax
6402ae89:	mov    DWORD PTR ds:0x64046860,esi
6402ae8f:	call   0x64002e50
6402ae94:	push   0x6403c714
6402ae99:	push   esi
6402ae9a:	push   0x6403c710
6402ae9f:	mov    ds:0x64046864,eax
6402aea4:	mov    DWORD PTR ds:0x64046868,esi
6402aeaa:	call   0x64002e50
6402aeaf:	add    esp,0x48
6402aeb2:	push   0x6403c6ec
6402aeb7:	push   esi
6402aeb8:	push   0x6403c6e8
6402aebd:	mov    ds:0x6404686c,eax
6402aec2:	mov    DWORD PTR ds:0x64046870,esi
6402aec8:	call   0x64002e50
6402aecd:	push   0x6403c6ac
6402aed2:	push   esi
6402aed3:	push   0x6403c6a8
6402aed8:	mov    ds:0x64046874,eax
6402aedd:	mov    DWORD PTR ds:0x64046878,esi
6402aee3:	call   0x64002e50
6402aee8:	mov    ebx,0x2
6402aeed:	push   0x6403c678
6402aef2:	push   ebx
6402aef3:	push   0x6403c674
6402aef8:	mov    ds:0x6404687c,eax
6402aefd:	mov    DWORD PTR ds:0x64046880,ebx
6402af03:	call   0x64002e50
6402af08:	push   0x6403c634
6402af0d:	push   ebx
6402af0e:	push   0x6403c630
6402af13:	mov    ds:0x64046884,eax
6402af18:	mov    DWORD PTR ds:0x64046888,ebx
6402af1e:	call   0x64002e50
6402af23:	push   0x6403c604
6402af28:	push   esi
6402af29:	push   0x6403c600
6402af2e:	mov    ds:0x6404688c,eax
6402af33:	mov    DWORD PTR ds:0x64046890,esi
6402af39:	call   0x64002e50
6402af3e:	push   0x6403c5d0
6402af43:	push   esi
6402af44:	push   0x6403c5cc
6402af49:	mov    ds:0x64046894,eax
6402af4e:	mov    DWORD PTR ds:0x64046898,esi
6402af54:	call   0x64002e50
6402af59:	add    esp,0x48
6402af5c:	push   0x6403c5a0
6402af61:	mov    ds:0x6404689c,eax
6402af66:	mov    DWORD PTR ds:0x640468a0,esi
6402af6c:	push   esi
6402af6d:	push   0x6403c59c
6402af72:	call   0x64002e50
6402af77:	push   0x6403c578
6402af7c:	push   esi
6402af7d:	push   0x6403c574
6402af82:	mov    ds:0x640468a4,eax
6402af87:	mov    DWORD PTR ds:0x640468a8,esi
6402af8d:	call   0x64002e50
6402af92:	push   0x6403c540
6402af97:	push   esi
6402af98:	push   0x6403c53c
6402af9d:	mov    ds:0x640468ac,eax
6402afa2:	mov    DWORD PTR ds:0x640468b0,esi
6402afa8:	call   0x64002e50
6402afad:	push   0x6403c518
6402afb2:	push   esi
6402afb3:	push   0x6403c514
6402afb8:	mov    ds:0x640468b4,eax
6402afbd:	mov    DWORD PTR ds:0x640468b8,esi
6402afc3:	call   0x64002e50
6402afc8:	push   0x6403c4f0
6402afcd:	push   esi
6402afce:	push   0x6403c4ec
6402afd3:	mov    ds:0x640468bc,eax
6402afd8:	mov    DWORD PTR ds:0x640468c0,esi
6402afde:	call   0x64002e50
6402afe3:	push   0x6403c4b4
6402afe8:	push   esi
6402afe9:	push   0x6403c4b0
6402afee:	mov    ds:0x640468c4,eax
6402aff3:	mov    DWORD PTR ds:0x640468c8,esi
6402aff9:	call   0x64002e50
6402affe:	add    esp,0x48
6402b001:	push   0x6403c470
6402b006:	push   esi
6402b007:	push   0x6403c46c
6402b00c:	mov    ds:0x640468cc,eax
6402b011:	mov    DWORD PTR ds:0x640468d0,esi
6402b017:	call   0x64002e50
6402b01c:	push   0x6403c444
6402b021:	push   esi
6402b022:	push   0x6403c440
6402b027:	mov    ds:0x640468d4,eax
6402b02c:	mov    DWORD PTR ds:0x640468d8,esi
6402b032:	call   0x64002e50
6402b037:	push   0x6403c408
6402b03c:	push   esi
6402b03d:	push   0x6403c404
6402b042:	mov    ds:0x640468dc,eax
6402b047:	mov    DWORD PTR ds:0x640468e0,esi
6402b04d:	call   0x64002e50
6402b052:	push   0x6403c3d4
6402b057:	push   esi
6402b058:	push   0x6403c3d0
6402b05d:	mov    ds:0x640468e4,eax
6402b062:	mov    DWORD PTR ds:0x640468e8,esi
6402b068:	call   0x64002e50
6402b06d:	push   0x6403c3a0
6402b072:	push   esi
6402b073:	push   0x6403c39c
6402b078:	mov    ds:0x640468ec,eax
6402b07d:	mov    DWORD PTR ds:0x640468f0,esi
6402b083:	call   0x64002e50
6402b088:	push   0x6403c368
6402b08d:	push   esi
6402b08e:	push   0x6403c364
6402b093:	mov    ds:0x640468f4,eax
6402b098:	mov    DWORD PTR ds:0x640468f8,esi
6402b09e:	call   0x64002e50
6402b0a3:	add    esp,0x48
6402b0a6:	push   0x6403c330
6402b0ab:	push   esi
6402b0ac:	push   0x6403c32c
6402b0b1:	mov    ds:0x640468fc,eax
6402b0b6:	mov    DWORD PTR ds:0x64046900,esi
6402b0bc:	call   0x64002e50
6402b0c1:	push   0x6403c2fc
6402b0c6:	push   esi
6402b0c7:	mov    ds:0x64046904,eax
6402b0cc:	mov    DWORD PTR ds:0x64046908,esi
6402b0d2:	push   0x6403c2f8
6402b0d7:	call   0x64002e50
6402b0dc:	mov    edi,0x4
6402b0e1:	push   0x6403c2c8
6402b0e6:	push   edi
6402b0e7:	push   0x6403c2c0
6402b0ec:	mov    ds:0x6404690c,eax
6402b0f1:	mov    DWORD PTR ds:0x64046910,edi
6402b0f7:	call   0x64002e50
6402b0fc:	push   0x6403c280
6402b101:	push   edi
6402b102:	push   0x6403c274
6402b107:	mov    ds:0x64046914,eax
6402b10c:	mov    DWORD PTR ds:0x64046918,edi
6402b112:	call   0x64002e50
6402b117:	push   0x6403c240
6402b11c:	push   edi
6402b11d:	push   0x6403c238
6402b122:	mov    ds:0x6404691c,eax
6402b127:	mov    DWORD PTR ds:0x64046920,edi
6402b12d:	call   0x64002e50
6402b132:	push   0x6403c214
6402b137:	push   edi
6402b138:	push   0x6403c20c
6402b13d:	mov    ds:0x64046924,eax
6402b142:	mov    DWORD PTR ds:0x64046928,edi
6402b148:	call   0x64002e50
6402b14d:	add    esp,0x48
6402b150:	push   0x6403c1d8
6402b155:	push   edi
6402b156:	push   0x6403c1d0
6402b15b:	mov    ds:0x6404692c,eax
6402b160:	mov    DWORD PTR ds:0x64046930,edi
6402b166:	call   0x64002e50
6402b16b:	push   0x6403c1a8
6402b170:	push   edi
6402b171:	push   0x6403c1a0
6402b176:	mov    ds:0x64046934,eax
6402b17b:	mov    DWORD PTR ds:0x64046938,edi
6402b181:	call   0x64002e50
6402b186:	push   0x6403c17c
6402b18b:	push   ebx
6402b18c:	push   0x6403c178
6402b191:	mov    ds:0x6404693c,eax
6402b196:	mov    DWORD PTR ds:0x64046940,ebx
6402b19c:	call   0x64002e50
6402b1a1:	push   0x6403c138
6402b1a6:	push   ebx
6402b1a7:	push   0x6403c134
6402b1ac:	mov    ds:0x64046944,eax
6402b1b1:	mov    DWORD PTR ds:0x64046948,ebx
6402b1b7:	call   0x64002e50
6402b1bc:	push   0x6403c104
6402b1c1:	push   ebx
6402b1c2:	push   0x6403c100
6402b1c7:	mov    ds:0x6404694c,eax
6402b1cc:	mov    DWORD PTR ds:0x64046950,ebx
6402b1d2:	call   0x64002e50
6402b1d7:	push   0x6403c0d4
6402b1dc:	push   ebx
6402b1dd:	push   0x6403c0d0
6402b1e2:	mov    ds:0x64046954,eax
6402b1e7:	mov    DWORD PTR ds:0x64046958,ebx
6402b1ed:	call   0x64002e50
6402b1f2:	add    esp,0x48
6402b1f5:	push   0x6403c090
6402b1fa:	push   ebx
6402b1fb:	push   0x6403c088
6402b200:	mov    ds:0x6404695c,eax
6402b205:	mov    DWORD PTR ds:0x64046960,ebx
6402b20b:	call   0x64002e50
6402b210:	push   0x6403c050
6402b215:	push   ebx
6402b216:	push   0x6403c04c
6402b21b:	mov    ds:0x64046964,eax
6402b220:	mov    DWORD PTR ds:0x64046968,ebx
6402b226:	call   0x64002e50
6402b22b:	push   0x6403c018
6402b230:	push   ebx
6402b231:	mov    ds:0x6404696c,eax
6402b236:	mov    DWORD PTR ds:0x64046970,ebx
6402b23c:	push   0x6403c014
6402b241:	call   0x64002e50
6402b246:	push   0x6403bfe4
6402b24b:	push   ebx
6402b24c:	push   0x6403bfe0
6402b251:	mov    ds:0x64046974,eax
6402b256:	mov    DWORD PTR ds:0x64046978,ebx
6402b25c:	call   0x64002e50
6402b261:	push   0x6403bfa0
6402b266:	push   esi
6402b267:	push   0x6403bf9c
6402b26c:	mov    ds:0x6404697c,eax
6402b271:	mov    DWORD PTR ds:0x64046980,esi
6402b277:	call   0x64002e50
6402b27c:	push   0x6403bf74
6402b281:	push   esi
6402b282:	push   0x6403bf70
6402b287:	mov    ds:0x64046984,eax
6402b28c:	mov    DWORD PTR ds:0x64046988,esi
6402b292:	call   0x64002e50
6402b297:	add    esp,0x48
6402b29a:	push   0x6403bf34
6402b29f:	push   edi
6402b2a0:	push   0x6403bf2c
6402b2a5:	mov    ds:0x6404698c,eax
6402b2aa:	mov    DWORD PTR ds:0x64046990,edi
6402b2b0:	call   0x64002e50
6402b2b5:	push   0x6403bef4
6402b2ba:	push   edi
6402b2bb:	push   0x6403beec
6402b2c0:	mov    ds:0x64046994,eax
6402b2c5:	mov    DWORD PTR ds:0x64046998,edi
6402b2cb:	call   0x64002e50
6402b2d0:	push   0x6403beac
6402b2d5:	push   edi
6402b2d6:	push   0x6403bea4
6402b2db:	mov    ds:0x6404699c,eax
6402b2e0:	mov    DWORD PTR ds:0x640469a0,edi
6402b2e6:	call   0x64002e50
6402b2eb:	push   0x6403be70
6402b2f0:	push   edi
6402b2f1:	push   0x6403be68
6402b2f6:	mov    ds:0x640469a4,eax
6402b2fb:	mov    DWORD PTR ds:0x640469a8,edi
6402b301:	call   0x64002e50
6402b306:	push   0x6403be28
6402b30b:	push   edi
6402b30c:	push   0x6403be1c
6402b311:	mov    ds:0x640469ac,eax
6402b316:	mov    DWORD PTR ds:0x640469b0,edi
6402b31c:	call   0x64002e50
6402b321:	push   0x6403bdf8
6402b326:	push   edi
6402b327:	push   0x6403bdf0
6402b32c:	mov    ds:0x640469b4,eax
6402b331:	mov    DWORD PTR ds:0x640469b8,edi
6402b337:	call   0x64002e50
6402b33c:	add    esp,0x48
6402b33f:	push   0x6403bdc0
6402b344:	push   ebx
6402b345:	push   0x6403bdbc
6402b34a:	mov    ds:0x640469bc,eax
6402b34f:	mov    DWORD PTR ds:0x640469c0,ebx
6402b355:	call   0x64002e50
6402b35a:	push   0x6403bd80
6402b35f:	push   ebx
6402b360:	push   0x6403bd7c
6402b365:	mov    ds:0x640469c4,eax
6402b36a:	mov    DWORD PTR ds:0x640469c8,ebx
6402b370:	call   0x64002e50
6402b375:	push   0x6403bd44
6402b37a:	push   ebx
6402b37b:	push   0x6403bd40
6402b380:	mov    ds:0x640469cc,eax
6402b385:	mov    DWORD PTR ds:0x640469d0,ebx
6402b38b:	call   0x64002e50
6402b390:	push   0x6403bd1c
6402b395:	push   ebx
6402b396:	push   0x6403bd18
6402b39b:	mov    ds:0x640469d4,eax
6402b3a0:	mov    DWORD PTR ds:0x640469d8,ebx
6402b3a6:	call   0x64002e50
6402b3ab:	push   0x6403bce8
6402b3b0:	push   ebx
6402b3b1:	push   0x6403bce4
6402b3b6:	mov    ds:0x640469dc,eax
6402b3bb:	mov    DWORD PTR ds:0x640469e0,ebx
6402b3c1:	call   0x64002e50
6402b3c6:	push   0x6403bcac
6402b3cb:	push   ebx
6402b3cc:	push   0x6403bca8
6402b3d1:	mov    ds:0x640469e4,eax
6402b3d6:	mov    DWORD PTR ds:0x640469e8,ebx
6402b3dc:	call   0x64002e50
6402b3e1:	add    esp,0x48
6402b3e4:	push   0x6403bc80
6402b3e9:	push   ebx
6402b3ea:	push   0x6403bc7c
6402b3ef:	mov    ds:0x640469ec,eax
6402b3f4:	mov    DWORD PTR ds:0x640469f0,ebx
6402b3fa:	call   0x64002e50
6402b3ff:	push   0x6403bc40
6402b404:	push   ebx
6402b405:	push   0x6403bc3c
6402b40a:	mov    ds:0x640469f4,eax
6402b40f:	mov    DWORD PTR ds:0x640469f8,ebx
6402b415:	call   0x64002e50
6402b41a:	push   0x6403bc18
6402b41f:	push   esi
6402b420:	push   0x6403bc14
6402b425:	mov    ds:0x640469fc,eax
6402b42a:	mov    DWORD PTR ds:0x64046a00,esi
6402b430:	call   0x64002e50
6402b435:	push   0x6403bbe0
6402b43a:	push   esi
6402b43b:	push   0x6403bbdc
6402b440:	mov    ds:0x64046a04,eax
6402b445:	mov    DWORD PTR ds:0x64046a08,esi
6402b44b:	call   0x64002e50
6402b450:	push   0x6403bba8
6402b455:	push   edi
6402b456:	push   0x6403bba0
6402b45b:	mov    ds:0x64046a0c,eax
6402b460:	mov    DWORD PTR ds:0x64046a10,edi
6402b466:	call   0x64002e50
6402b46b:	push   0x6403bb74
6402b470:	push   edi
6402b471:	push   0x6403bb6c
6402b476:	mov    ds:0x64046a14,eax
6402b47b:	mov    DWORD PTR ds:0x64046a18,edi
6402b481:	call   0x64002e50
6402b486:	add    esp,0x48
6402b489:	push   0x6403bb38
6402b48e:	push   edi
6402b48f:	push   0x6403bb30
6402b494:	mov    ds:0x64046a1c,eax
6402b499:	mov    DWORD PTR ds:0x64046a20,edi
6402b49f:	call   0x64002e50
6402b4a4:	push   0x6403baf8
6402b4a9:	push   edi
6402b4aa:	push   0x6403baf0
6402b4af:	mov    ds:0x64046a24,eax
6402b4b4:	mov    DWORD PTR ds:0x64046a28,edi
6402b4ba:	call   0x64002e50
6402b4bf:	push   0x6403bac4
6402b4c4:	push   edi
6402b4c5:	push   0x6403babc
6402b4ca:	mov    ds:0x64046a2c,eax
6402b4cf:	mov    DWORD PTR ds:0x64046a30,edi
6402b4d5:	call   0x64002e50
6402b4da:	push   0x6403ba80
6402b4df:	push   edi
6402b4e0:	push   0x6403ba78
6402b4e5:	mov    ds:0x64046a34,eax
6402b4ea:	mov    DWORD PTR ds:0x64046a38,edi
6402b4f0:	call   0x64002e50
6402b4f5:	push   0x6403ba54
6402b4fa:	push   esi
6402b4fb:	push   0x6403ba50
6402b500:	mov    ds:0x64046a3c,eax
6402b505:	mov    DWORD PTR ds:0x64046a40,esi
6402b50b:	call   0x64002e50
6402b510:	mov    ds:0x64046a44,eax
6402b515:	push   0x6403ba14
6402b51a:	push   esi
6402b51b:	push   0x6403ba10
6402b520:	mov    DWORD PTR ds:0x64046a48,esi
6402b526:	call   0x64002e50
6402b52b:	add    esp,0x48
6402b52e:	push   0x6403b9d8
6402b533:	push   esi
6402b534:	push   0x6403b9d4
6402b539:	mov    ds:0x64046a4c,eax
6402b53e:	mov    DWORD PTR ds:0x64046a50,esi
6402b544:	call   0x64002e50
6402b549:	push   0x6403b99c
6402b54e:	push   esi
6402b54f:	push   0x6403b998
6402b554:	mov    ds:0x64046a54,eax
6402b559:	mov    DWORD PTR ds:0x64046a58,esi
6402b55f:	call   0x64002e50
6402b564:	push   0x6403b968
6402b569:	push   ebx
6402b56a:	push   0x6403b964
6402b56f:	mov    ds:0x64046a5c,eax
6402b574:	mov    DWORD PTR ds:0x64046a60,ebx
6402b57a:	call   0x64002e50
6402b57f:	push   0x6403b930
6402b584:	push   ebx
6402b585:	push   0x6403b92c
6402b58a:	mov    ds:0x64046a64,eax
6402b58f:	mov    DWORD PTR ds:0x64046a68,ebx
6402b595:	call   0x64002e50
6402b59a:	push   0x6403b8f0
6402b59f:	push   ebx
6402b5a0:	push   0x6403b8ec
6402b5a5:	mov    ds:0x64046a6c,eax
6402b5aa:	mov    DWORD PTR ds:0x64046a70,ebx
6402b5b0:	call   0x64002e50
6402b5b5:	push   0x6403b8c8
6402b5ba:	push   ebx
6402b5bb:	push   0x6403b8c4
6402b5c0:	mov    ds:0x64046a74,eax
6402b5c5:	mov    DWORD PTR ds:0x64046a78,ebx
6402b5cb:	call   0x64002e50
6402b5d0:	add    esp,0x48
6402b5d3:	push   0x6403b8a0
6402b5d8:	push   ebx
6402b5d9:	push   0x6403b89c
6402b5de:	mov    ds:0x64046a7c,eax
6402b5e3:	mov    DWORD PTR ds:0x64046a80,ebx
6402b5e9:	call   0x64002e50
6402b5ee:	push   0x6403b874
6402b5f3:	push   ebx
6402b5f4:	push   0x6403b870
6402b5f9:	mov    ds:0x64046a84,eax
6402b5fe:	mov    DWORD PTR ds:0x64046a88,ebx
6402b604:	call   0x64002e50
6402b609:	push   0x6403b834
6402b60e:	push   esi
6402b60f:	push   0x6403b830
6402b614:	mov    ds:0x64046a8c,eax
6402b619:	mov    DWORD PTR ds:0x64046a90,esi
6402b61f:	call   0x64002e50
6402b624:	push   0x6403b7f0
6402b629:	push   esi
6402b62a:	push   0x6403b7e8
6402b62f:	mov    ds:0x64046a94,eax
6402b634:	mov    DWORD PTR ds:0x64046a98,esi
6402b63a:	call   0x64002e50
6402b63f:	push   0x6403b7b0
6402b644:	push   esi
6402b645:	push   0x6403b7ac
6402b64a:	mov    ds:0x64046a9c,eax
6402b64f:	mov    DWORD PTR ds:0x64046aa0,esi
6402b655:	call   0x64002e50
6402b65a:	push   0x6403b784
6402b65f:	push   esi
6402b660:	push   0x6403b780
6402b665:	mov    ds:0x64046aa4,eax
6402b66a:	mov    DWORD PTR ds:0x64046aa8,esi
6402b670:	call   0x64002e50
6402b675:	add    esp,0x48
6402b678:	mov    ds:0x64046aac,eax
6402b67d:	push   0x6403b754
6402b682:	push   esi
6402b683:	push   0x6403b750
6402b688:	mov    DWORD PTR ds:0x64046ab0,esi
6402b68e:	call   0x64002e50
6402b693:	push   0x6403b720
6402b698:	push   esi
6402b699:	push   0x6403b71c
6402b69e:	mov    ds:0x64046ab4,eax
6402b6a3:	mov    DWORD PTR ds:0x64046ab8,esi
6402b6a9:	call   0x64002e50
6402b6ae:	push   0x6403b6ec
6402b6b3:	push   esi
6402b6b4:	push   0x6403b6e8
6402b6b9:	mov    ds:0x64046abc,eax
6402b6be:	mov    DWORD PTR ds:0x64046ac0,esi
6402b6c4:	call   0x64002e50
6402b6c9:	push   0x6403b6c4
6402b6ce:	push   esi
6402b6cf:	push   0x6403b6c0
6402b6d4:	mov    ds:0x64046ac4,eax
6402b6d9:	mov    DWORD PTR ds:0x64046ac8,esi
6402b6df:	call   0x64002e50
6402b6e4:	push   0x6403b684
6402b6e9:	push   esi
6402b6ea:	push   0x6403b680
6402b6ef:	mov    ds:0x64046acc,eax
6402b6f4:	mov    DWORD PTR ds:0x64046ad0,esi
6402b6fa:	call   0x64002e50
6402b6ff:	push   0x6403b650
6402b704:	push   esi
6402b705:	push   0x6403b64c
6402b70a:	mov    ds:0x64046ad4,eax
6402b70f:	mov    DWORD PTR ds:0x64046ad8,esi
6402b715:	call   0x64002e50
6402b71a:	add    esp,0x48
6402b71d:	push   0x6403b620
6402b722:	push   esi
6402b723:	push   0x6403b61c
6402b728:	mov    ds:0x64046adc,eax
6402b72d:	mov    DWORD PTR ds:0x64046ae0,esi
6402b733:	call   0x64002e50
6402b738:	push   0x6403b5f8
6402b73d:	push   esi
6402b73e:	push   0x6403b5f4
6402b743:	mov    ds:0x64046ae4,eax
6402b748:	mov    DWORD PTR ds:0x64046ae8,esi
6402b74e:	call   0x64002e50
6402b753:	push   0x6403b5c8
6402b758:	push   esi
6402b759:	push   0x6403b5c4
6402b75e:	mov    ds:0x64046aec,eax
6402b763:	mov    DWORD PTR ds:0x64046af0,esi
6402b769:	call   0x64002e50
6402b76e:	push   0x6403b58c
6402b773:	push   esi
6402b774:	push   0x6403b588
6402b779:	mov    ds:0x64046af4,eax
6402b77e:	mov    DWORD PTR ds:0x64046af8,esi
6402b784:	call   0x64002e50
6402b789:	push   0x6403b558
6402b78e:	push   esi
6402b78f:	push   0x6403b554
6402b794:	mov    ds:0x64046afc,eax
6402b799:	mov    DWORD PTR ds:0x64046b00,esi
6402b79f:	call   0x64002e50
6402b7a4:	push   0x6403b52c
6402b7a9:	push   esi
6402b7aa:	push   0x6403b528
6402b7af:	mov    ds:0x64046b04,eax
6402b7b4:	mov    DWORD PTR ds:0x64046b08,esi
6402b7ba:	call   0x64002e50
6402b7bf:	add    esp,0x48
6402b7c2:	push   0x6403b4f4
6402b7c7:	push   esi
6402b7c8:	push   0x6403b4f0
6402b7cd:	mov    ds:0x64046b0c,eax
6402b7d2:	mov    DWORD PTR ds:0x64046b10,esi
6402b7d8:	call   0x64002e50
6402b7dd:	mov    ds:0x64046b14,eax
6402b7e2:	mov    DWORD PTR ds:0x64046b18,edi
6402b7e8:	push   0x6403b4bc
6402b7ed:	push   edi
6402b7ee:	push   0x6403b4b4
6402b7f3:	call   0x64002e50
6402b7f8:	push   0x6403b480
6402b7fd:	push   edi
6402b7fe:	push   0x6403b478
6402b803:	mov    ds:0x64046b1c,eax
6402b808:	mov    DWORD PTR ds:0x64046b20,edi
6402b80e:	call   0x64002e50
6402b813:	push   0x6403b44c
6402b818:	push   edi
6402b819:	push   0x6403b444
6402b81e:	mov    ds:0x64046b24,eax
6402b823:	mov    DWORD PTR ds:0x64046b28,edi
6402b829:	call   0x64002e50
6402b82e:	push   0x6403b40c
6402b833:	push   edi
6402b834:	push   0x6403b404
6402b839:	mov    ds:0x64046b2c,eax
6402b83e:	mov    DWORD PTR ds:0x64046b30,edi
6402b844:	call   0x64002e50
6402b849:	push   0x6403b3c8
6402b84e:	push   edi
6402b84f:	push   0x6403b3c0
6402b854:	mov    ds:0x64046b34,eax
6402b859:	mov    DWORD PTR ds:0x64046b38,edi
6402b85f:	call   0x64002e50
6402b864:	add    esp,0x48
6402b867:	push   0x6403b380
6402b86c:	push   edi
6402b86d:	push   0x6403b378
6402b872:	mov    ds:0x64046b3c,eax
6402b877:	mov    DWORD PTR ds:0x64046b40,edi
6402b87d:	call   0x64002e50
6402b882:	push   0x6403b33c
6402b887:	push   edi
6402b888:	push   0x6403b334
6402b88d:	mov    ds:0x64046b44,eax
6402b892:	mov    DWORD PTR ds:0x64046b48,edi
6402b898:	call   0x64002e50
6402b89d:	push   0x6403b308
6402b8a2:	push   edi
6402b8a3:	push   0x6403b300
6402b8a8:	mov    ds:0x64046b4c,eax
6402b8ad:	mov    DWORD PTR ds:0x64046b50,edi
6402b8b3:	call   0x64002e50
6402b8b8:	push   0x6403b2dc
6402b8bd:	push   edi
6402b8be:	push   0x6403b2d4
6402b8c3:	mov    ds:0x64046b54,eax
6402b8c8:	mov    DWORD PTR ds:0x64046b58,edi
6402b8ce:	call   0x64002e50
6402b8d3:	push   0x6403b29c
6402b8d8:	push   edi
6402b8d9:	push   0x6403b294
6402b8de:	mov    ds:0x64046b5c,eax
6402b8e3:	mov    DWORD PTR ds:0x64046b60,edi
6402b8e9:	call   0x64002e50
6402b8ee:	mov    ebx,0x5
6402b8f3:	push   0x6403b260
6402b8f8:	push   ebx
6402b8f9:	push   0x6403b258
6402b8fe:	mov    ds:0x64046b64,eax
6402b903:	mov    DWORD PTR ds:0x64046b68,ebx
6402b909:	call   0x64002e50
6402b90e:	add    esp,0x48
6402b911:	push   0x6403b218
6402b916:	push   ebx
6402b917:	push   0x6403b210
6402b91c:	mov    ds:0x64046b6c,eax
6402b921:	mov    DWORD PTR ds:0x64046b70,ebx
6402b927:	call   0x64002e50
6402b92c:	push   0x6403b1d0
6402b931:	push   ebx
6402b932:	push   0x6403b1c8
6402b937:	mov    ds:0x64046b74,eax
6402b93c:	mov    DWORD PTR ds:0x64046b78,ebx
6402b942:	call   0x64002e50
6402b947:	mov    ds:0x64046b7c,eax
6402b94c:	mov    DWORD PTR ds:0x64046b80,ebx
6402b952:	push   0x6403b18c
6402b957:	push   ebx
6402b958:	push   0x6403b184
6402b95d:	call   0x64002e50
6402b962:	push   0x6403b150
6402b967:	push   ebx
6402b968:	push   0x6403b148
6402b96d:	mov    ds:0x64046b84,eax
6402b972:	mov    DWORD PTR ds:0x64046b88,ebx
6402b978:	call   0x64002e50
6402b97d:	push   0x6403b108
6402b982:	push   ebx
6402b983:	push   0x6403b100
6402b988:	mov    ds:0x64046b8c,eax
6402b98d:	mov    DWORD PTR ds:0x64046b90,ebx
6402b993:	call   0x64002e50
6402b998:	push   0x6403b0d0
6402b99d:	push   edi
6402b99e:	push   0x6403b0c8
6402b9a3:	mov    ds:0x64046b94,eax
6402b9a8:	mov    DWORD PTR ds:0x64046b98,edi
6402b9ae:	call   0x64002e50
6402b9b3:	add    esp,0x48
6402b9b6:	push   0x6403b088
6402b9bb:	push   edi
6402b9bc:	push   0x6403b080
6402b9c1:	mov    ds:0x64046b9c,eax
6402b9c6:	mov    DWORD PTR ds:0x64046ba0,edi
6402b9cc:	call   0x64002e50
6402b9d1:	push   0x6403b050
6402b9d6:	push   edi
6402b9d7:	push   0x6403b048
6402b9dc:	mov    ds:0x64046ba4,eax
6402b9e1:	mov    DWORD PTR ds:0x64046ba8,edi
6402b9e7:	call   0x64002e50
6402b9ec:	push   0x6403b024
6402b9f1:	push   edi
6402b9f2:	push   0x6403b01c
6402b9f7:	mov    ds:0x64046bac,eax
6402b9fc:	mov    DWORD PTR ds:0x64046bb0,edi
6402ba02:	call   0x64002e50
6402ba07:	push   0x6403afe4
6402ba0c:	push   edi
6402ba0d:	push   0x6403afdc
6402ba12:	mov    ds:0x64046bb4,eax
6402ba17:	mov    DWORD PTR ds:0x64046bb8,edi
6402ba1d:	call   0x64002e50
6402ba22:	push   0x6403af9c
6402ba27:	push   edi
6402ba28:	push   0x6403af94
6402ba2d:	mov    ds:0x64046bbc,eax
6402ba32:	mov    DWORD PTR ds:0x64046bc0,edi
6402ba38:	call   0x64002e50
6402ba3d:	push   0x6403af6c
6402ba42:	push   edi
6402ba43:	push   0x6403af64
6402ba48:	mov    ds:0x64046bc4,eax
6402ba4d:	mov    DWORD PTR ds:0x64046bc8,edi
6402ba53:	call   0x64002e50
6402ba58:	add    esp,0x48
6402ba5b:	push   0x6403af34
6402ba60:	push   edi
6402ba61:	push   0x6403af2c
6402ba66:	mov    ds:0x64046bcc,eax
6402ba6b:	mov    DWORD PTR ds:0x64046bd0,edi
6402ba71:	call   0x64002e50
6402ba76:	push   0x6403aef8
6402ba7b:	push   edi
6402ba7c:	push   0x6403aef0
6402ba81:	mov    ds:0x64046bd4,eax
6402ba86:	mov    DWORD PTR ds:0x64046bd8,edi
6402ba8c:	call   0x64002e50
6402ba91:	push   0x6403aeb0
6402ba96:	push   edi
6402ba97:	push   0x6403aea4
6402ba9c:	mov    ds:0x64046bdc,eax
6402baa1:	mov    DWORD PTR ds:0x64046be0,edi
6402baa7:	call   0x64002e50
6402baac:	mov    ds:0x64046be4,eax
6402bab1:	mov    DWORD PTR ds:0x64046be8,ebx
6402bab7:	push   0x6403ae80
6402babc:	push   ebx
6402babd:	push   0x6403ae78
6402bac2:	call   0x64002e50
6402bac7:	push   0x6403ae44
6402bacc:	push   ebx
6402bacd:	push   0x6403ae3c
6402bad2:	mov    ds:0x64046bec,eax
6402bad7:	mov    DWORD PTR ds:0x64046bf0,ebx
6402badd:	call   0x64002e50
6402bae2:	push   0x6403ae14
6402bae7:	push   ebx
6402bae8:	push   0x6403ae0c
6402baed:	mov    ds:0x64046bf4,eax
6402baf2:	mov    DWORD PTR ds:0x64046bf8,ebx
6402baf8:	call   0x64002e50
6402bafd:	add    esp,0x48
6402bb00:	push   0x6403add0
6402bb05:	push   ebx
6402bb06:	push   0x6403adc8
6402bb0b:	mov    ds:0x64046bfc,eax
6402bb10:	mov    DWORD PTR ds:0x64046c00,ebx
6402bb16:	call   0x64002e50
6402bb1b:	push   0x6403ad94
6402bb20:	push   ebx
6402bb21:	push   0x6403ad8c
6402bb26:	mov    ds:0x64046c04,eax
6402bb2b:	mov    DWORD PTR ds:0x64046c08,ebx
6402bb31:	call   0x64002e50
6402bb36:	push   0x6403ad4c
6402bb3b:	push   ebx
6402bb3c:	push   0x6403ad44
6402bb41:	mov    ds:0x64046c0c,eax
6402bb46:	mov    DWORD PTR ds:0x64046c10,ebx
6402bb4c:	call   0x64002e50
6402bb51:	push   0x6403ad20
6402bb56:	push   esi
6402bb57:	push   0x6403ad1c
6402bb5c:	mov    ds:0x64046c14,eax
6402bb61:	mov    DWORD PTR ds:0x64046c18,esi
6402bb67:	call   0x64002e50
6402bb6c:	xor    edi,edi
6402bb6e:	push   0x6403acf8
6402bb73:	push   edi
6402bb74:	push   0x64041a56
6402bb79:	mov    ds:0x64046c1c,eax
6402bb7e:	mov    DWORD PTR ds:0x64046c20,edi
6402bb84:	call   0x64002e50
6402bb89:	push   0x6403acc4
6402bb8e:	push   esi
6402bb8f:	push   0x6403acc0
6402bb94:	mov    ds:0x64046c24,eax
6402bb99:	mov    DWORD PTR ds:0x64046c28,esi
6402bb9f:	call   0x64002e50
6402bba4:	add    esp,0x48
6402bba7:	push   0x6403ac98
6402bbac:	push   esi
6402bbad:	push   0x6403ac94
6402bbb2:	mov    ds:0x64046c2c,eax
6402bbb7:	mov    DWORD PTR ds:0x64046c30,esi
6402bbbd:	call   0x64002e50
6402bbc2:	push   0x6403ac60
6402bbc7:	push   esi
6402bbc8:	push   0x6403ac5c
6402bbcd:	mov    ds:0x64046c34,eax
6402bbd2:	mov    DWORD PTR ds:0x64046c38,esi
6402bbd8:	call   0x64002e50
6402bbdd:	push   0x6403ac2c
6402bbe2:	push   edi
6402bbe3:	push   0x64041a56
6402bbe8:	mov    ds:0x64046c3c,eax
6402bbed:	mov    DWORD PTR ds:0x64046c40,edi
6402bbf3:	call   0x64002e50
6402bbf8:	push   0x6403abf8
6402bbfd:	push   edi
6402bbfe:	push   0x64041a56
6402bc03:	mov    ds:0x64046c44,eax
6402bc08:	mov    DWORD PTR ds:0x64046c48,edi
6402bc0e:	call   0x64002e50
6402bc13:	mov    ds:0x64046c4c,eax
6402bc18:	mov    DWORD PTR ds:0x64046c50,edi
6402bc1e:	push   0x6403abd0
6402bc23:	push   edi
6402bc24:	push   0x64041a56
6402bc29:	call   0x64002e50
6402bc2e:	push   0x6403aba0
6402bc33:	push   esi
6402bc34:	push   0x6403ab9c
6402bc39:	mov    ds:0x64046c54,eax
6402bc3e:	mov    DWORD PTR ds:0x64046c58,esi
6402bc44:	call   0x64002e50
6402bc49:	add    esp,0x48
6402bc4c:	push   0x6403ab6c
6402bc51:	push   esi
6402bc52:	push   0x6403ab68
6402bc57:	mov    ds:0x64046c5c,eax
6402bc5c:	mov    DWORD PTR ds:0x64046c60,esi
6402bc62:	call   0x64002e50
6402bc67:	push   0x6403ab40
6402bc6c:	push   esi
6402bc6d:	push   0x6403ab3c
6402bc72:	mov    ds:0x64046c64,eax
6402bc77:	mov    DWORD PTR ds:0x64046c68,esi
6402bc7d:	call   0x64002e50
6402bc82:	push   0x6403ab0c
6402bc87:	push   esi
6402bc88:	push   0x6403ab08
6402bc8d:	mov    ds:0x64046c6c,eax
6402bc92:	mov    DWORD PTR ds:0x64046c70,esi
6402bc98:	call   0x64002e50
6402bc9d:	push   0x6403aad8
6402bca2:	push   esi
6402bca3:	push   0x6403aad4
6402bca8:	mov    ds:0x64046c74,eax
6402bcad:	mov    DWORD PTR ds:0x64046c78,esi
6402bcb3:	call   0x64002e50
6402bcb8:	push   0x6403aab0
6402bcbd:	push   edi
6402bcbe:	push   0x64041a56
6402bcc3:	mov    ds:0x64046c7c,eax
6402bcc8:	mov    DWORD PTR ds:0x64046c80,edi
6402bcce:	call   0x64002e50
6402bcd3:	push   0x6403aa78
6402bcd8:	push   edi
6402bcd9:	push   0x64041a56
6402bcde:	mov    ds:0x64046c84,eax
6402bce3:	mov    DWORD PTR ds:0x64046c88,edi
6402bce9:	call   0x64002e50
6402bcee:	add    esp,0x48
6402bcf1:	push   0x6403aa44
6402bcf6:	push   esi
6402bcf7:	push   0x6403aa40
6402bcfc:	mov    ds:0x64046c8c,eax
6402bd01:	mov    DWORD PTR ds:0x64046c90,esi
6402bd07:	call   0x64002e50
6402bd0c:	push   0x6403aa14
6402bd11:	push   esi
6402bd12:	push   0x6403aa10
6402bd17:	mov    ds:0x64046c94,eax
6402bd1c:	mov    DWORD PTR ds:0x64046c98,esi
6402bd22:	call   0x64002e50
6402bd27:	add    esp,0x18
6402bd2a:	pop    edi
6402bd2b:	pop    esi
6402bd2c:	mov    ds:0x64046c9c,eax
6402bd31:	pop    ebx
6402bd32:	ret    
6402bd33:	push   0x6402be86
6402bd38:	call   0x64013fba
6402bd3d:	pop    ecx
6402bd3e:	ret    
6402bd3f:	mov    ecx,0x64053920
6402bd44:	call   0x64012faf
6402bd49:	push   0x6402be90
6402bd4e:	call   0x64013fba
6402bd53:	pop    ecx
6402bd54:	ret    
6402bd55:	mov    ecx,0x6405396c
6402bd5a:	call   0x64012faf
6402bd5f:	push   0x6402be9a
6402bd64:	call   0x64013fba
6402bd69:	pop    ecx
6402bd6a:	ret    
6402bd6b:	push   0x6402bea4
6402bd70:	call   0x64013fba
6402bd75:	pop    ecx
6402bd76:	ret    
6402bd77:	mov    ecx,0x64053970
6402bd7c:	call   0x64013384
6402bd81:	push   0x6402beae
6402bd86:	call   0x64013fba
6402bd8b:	pop    ecx
6402bd8c:	ret    
6402bd8d:	mov    ecx,0x640539ac
6402bd92:	call   0x6401335e
6402bd97:	push   0x6402beb8
6402bd9c:	call   0x64013fba
6402bda1:	pop    ecx
6402bda2:	ret    
6402bda3:	call   DWORD PTR ds:0x6402c1a4
6402bda9:	push   0x6402bec2
6402bdae:	mov    DWORD PTR ds:0x640539d8,0x6403ffd0
6402bdb8:	mov    ds:0x640539dc,eax
6402bdbd:	mov    BYTE PTR ds:0x640539e0,0x0
6402bdc4:	call   0x64013fba
6402bdc9:	pop    ecx
6402bdca:	ret    
6402bdcb:	push   0x640539d8
6402bdd0:	mov    ecx,0x640539e4
6402bdd5:	call   0x640134f7
6402bdda:	push   0x6402becc
6402bddf:	call   0x64013fba
6402bde4:	pop    ecx
6402bde5:	ret    
6402bde6:	int3   
6402bde7:	int3   
6402bde8:	int3   
6402bde9:	int3   
6402bdea:	int3   
6402bdeb:	int3   
6402bdec:	int3   
6402bded:	int3   
6402bdee:	int3   
6402bdef:	int3   
6402bdf0:	push   ebp
6402bdf1:	mov    ebp,esp
6402bdf3:	and    esp,0xfffffff8
6402bdf6:	mov    eax,ds:0x64054500
6402bdfb:	mov    edx,DWORD PTR [eax]
6402bdfd:	sub    esp,0xc
6402be00:	push   esi
6402be01:	push   eax
6402be02:	mov    ecx,0x640544fc
6402be07:	push   ecx
6402be08:	push   edx
6402be09:	mov    esi,ecx
6402be0b:	push   esi
6402be0c:	lea    eax,[esp+0x18]
6402be10:	push   eax
6402be11:	call   0x64005a60
6402be16:	mov    ecx,DWORD PTR ds:0x64054500
6402be1c:	push   ecx
6402be1d:	call   0x64013656
6402be22:	add    esp,0x4
6402be25:	xor    eax,eax
6402be27:	mov    ds:0x64054500,eax
6402be2c:	mov    ds:0x64054504,eax
6402be31:	pop    esi
6402be32:	mov    esp,ebp
6402be34:	pop    ebp
6402be35:	ret    
6402be36:	int3   
6402be37:	int3   
6402be38:	int3   
6402be39:	int3   
6402be3a:	int3   
6402be3b:	int3   
6402be3c:	int3   
6402be3d:	int3   
6402be3e:	int3   
6402be3f:	int3   
6402be40:	push   ebp
6402be41:	mov    ebp,esp
6402be43:	and    esp,0xfffffff8
6402be46:	mov    eax,ds:0x640544f4
6402be4b:	mov    edx,DWORD PTR [eax]
6402be4d:	sub    esp,0xc
6402be50:	push   esi
6402be51:	push   eax
6402be52:	mov    ecx,0x640544f0
6402be57:	push   ecx
6402be58:	push   edx
6402be59:	mov    esi,ecx
6402be5b:	push   esi
6402be5c:	lea    eax,[esp+0x18]
6402be60:	push   eax
6402be61:	call   0x64005680
6402be66:	mov    ecx,DWORD PTR ds:0x640544f4
6402be6c:	push   ecx
6402be6d:	call   0x64013656
6402be72:	add    esp,0x4
6402be75:	xor    eax,eax
6402be77:	mov    ds:0x640544f4,eax
6402be7c:	mov    ds:0x640544f8,eax
6402be81:	pop    esi
6402be82:	mov    esp,ebp
6402be84:	pop    ebp
6402be85:	ret    
6402be86:	mov    ecx,0x64053878
6402be8b:	jmp    0x640015b0
6402be90:	mov    ecx,0x64053920
6402be95:	jmp    0x64012fe0
6402be9a:	mov    ecx,0x6405396c
6402be9f:	jmp    0x64012fe0
6402bea4:	mov    ecx,0x6405396d
6402bea9:	jmp    0x6401303c
6402beae:	mov    ecx,0x64053970
6402beb3:	jmp    0x640132f2
6402beb8:	mov    ecx,0x640539ac
6402bebd:	jmp    0x64013433
6402bec2:	mov    ecx,0x640539d8
6402bec7:	jmp    0x6401344b
6402becc:	mov    DWORD PTR ds:0x640539e4,0x6403ffe4
6402bed6:	ret    
6402bed7:	mov    DWORD PTR ds:0x64053a00,0x6402c2ac
6402bee1:	mov    ecx,0x64053a00
6402bee6:	jmp    0x6401372a
