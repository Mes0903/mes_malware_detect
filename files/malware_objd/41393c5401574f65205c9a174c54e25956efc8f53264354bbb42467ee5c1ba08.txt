
41393c5401574f65205c9a174c54e25956efc8f53264354bbb42467ee5c1ba08.exe:     file format pei-i386


Disassembly of section .text:

00401000 <.text>:
  401000:	push   ebp
  401001:	mov    ebp,esp
  401003:	sub    esp,0x9c
  401009:	or     eax,edx
  40100b:	mov    edx,DWORD PTR [ebp+0x8]
  40100e:	jmp    0x4013e7
  401013:	jle    0x401089
  401015:	test   dh,ch
  401017:	mov    ?,esi
  401019:	jle    0x40100f
  40101b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40101c:	mov    esp,0xc7960842
  401021:	stos   BYTE PTR es:[edi],al
  401022:	and    DWORD PTR [eax+0x33],edx
  401025:	add    BYTE PTR [eax],al
  401027:	mov    esp,0xbb000003
  40102c:	sub    bh,ah
  40102e:	jnp    0x401076
  401030:	repz mov ebx,DWORD PTR [edx+0x4c]
  401034:	or     eax,0x6ac5462e
  401039:	aas    
  40103a:	out    dx,al
  40103b:	mov    esi,0x839fa49
  401040:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401041:	mov    ebx,0x14a58c2f
  401046:	cmps   BYTE PTR ss:[esi],BYTE PTR es:[edi]
  401048:	or     al,0xe4
  40104a:	or     esp,ebx
  40104c:	or     edi,ebx
  40104e:	pop    esp
  40104f:	push   cs
  401050:	and    eax,esp
  401052:	mov    al,BYTE PTR [eax+0x71]
  401055:	pop    edi
  401056:	pop    edx
  401057:	in     eax,dx
  401058:	call   0x3f20:0x6f0d5695
  40105f:	sbb    eax,esi
  401061:	inc    esp
  401062:	mov    esp,0x97b14f63
  401067:	lahf   
  401068:	add    al,0x8
  40106a:	mov    ch,0xe5
  40106c:	and    bh,ah
  40106e:	out    dx,eax
  40106f:	mov    ss:0x21fd5c79,eax
  401075:	inc    ebp
  401076:	(bad)  
  401077:	xchg   ebp,eax
  401078:	pop    esp
  401079:	xchg   ebp,eax
  40107a:	push   0x5b7fb858
  40107f:	push   ecx
  401080:	xchg   esi,eax
  401081:	imul   ebp,DWORD PTR [edi+eax*1-0x1d9f3d42],0xffffffca
  401089:	fistp  DWORD PTR [ebx-0x37]
  40108c:	sub    DWORD PTR [ebx-0x3cd37bbc],edx
  401092:	int    0xd5
  401094:	js     0x40106c
  401096:	fmulp  st(1),st
  401098:	fs out 0x30,eax
  40109b:	sbb    eax,0x9060f3a8
  4010a0:	inc    esi
  4010a1:	in     eax,0xff
  4010a3:	sbb    edi,DWORD PTR [edi-0x51]
  4010a6:	lods   al,BYTE PTR fs:[esi]
  4010a8:	add    BYTE PTR [ecx+0x2a],bl
  4010ab:	scas   eax,DWORD PTR es:[edi]
  4010ac:	mov    BYTE PTR [ebp-0x4d4dc602],bh
  4010b2:	mov    ds:0x94d788a3,al
  4010b7:	lahf   
  4010b8:	aaa    
  4010b9:	sahf   
  4010ba:	add    bh,BYTE PTR [ebx-0x55]
  4010bd:	sahf   
  4010be:	mov    dl,0x9e
  4010c0:	mov    ds:0xecc36f,al
  4010c5:	mov    ebx,ecx
  4010c7:	pop    ds
  4010c8:	scas   eax,DWORD PTR es:[edi]
  4010c9:	retf   0xbaea
  4010cc:	mov    dh,0xbc
  4010ce:	jno    0x40110c
  4010d0:	fst    QWORD PTR [esi]
  4010d2:	jecxz  0x401146
  4010d4:	fwait
  4010d5:	nop
  4010d6:	scas   al,BYTE PTR es:[edi]
  4010d7:	and    ebp,edx
  4010d9:	push   DWORD PTR [edx-0x7087cac9]
  4010df:	test   eax,0x282cfba5
  4010e4:	or     DWORD PTR [eax-0x413b104a],edi
  4010ea:	mov    edi,DWORD PTR [ecx]
  4010ec:	jge    0x4010f5
  4010ee:	imul   ebx,DWORD PTR [ebx-0x6a6cefe5],0xffffffc1
  4010f5:	fwait
  4010f6:	jb     0x4010e7
  4010f8:	xor    esi,eax
  4010fa:	jns    0x40115b
  4010fc:	repz add DWORD PTR [edx-0x6c4f5990],eax
  401103:	fwait
  401104:	(bad)  
  401105:	pop    ecx
  401106:	int    0x34
  401108:	mov    bl,0x8b
  40110a:	call   0x96059685
  40110f:	cmc    
  401110:	aad    0xb2
  401112:	mov    bl,cl
  401114:	pop    ebp
  401115:	test   al,0x85
  401117:	mov    ah,0x40
  401119:	adc    DWORD PTR [ebx],edi
  40111b:	pop    esi
  40111c:	dec    edi
  40111d:	loope  0x401122
  40111f:	int3   
  401120:	adc    DWORD PTR [esi],ebp
  401122:	and    eax,0x6decd539
  401127:	and    esp,DWORD PTR [ebx+esi*4]
  40112a:	and    eax,0x10c94b18
  40112f:	and    al,0xd1
  401131:	mov    dl,0xc8
  401133:	push   ebx
  401134:	ins    BYTE PTR es:[edi],dx
  401135:	sub    BYTE PTR [ecx-0x2d],dh
  401138:	stos   DWORD PTR es:[edi],eax
  401139:	xlat   BYTE PTR ds:[ebx]
  40113a:	mov    edx,DWORD PTR [edi+0x76166cf]
  401140:	dec    ebx
  401141:	pop    ecx
  401142:	in     al,0x22
  401144:	out    0x4,eax
  401146:	and    eax,0x41dc9f26
  40114b:	in     eax,dx
  40114c:	stos   DWORD PTR es:[edi],eax
  40114d:	pop    ds
  40114e:	out    0x6,al
  401150:	inc    ecx
  401151:	cs fucom st(2)
  401154:	sahf   
  401155:	(bad)  
  401156:	xchg   esp,eax
  401157:	and    BYTE PTR [edx],cl
  401159:	xor    BYTE PTR [eax+ebx*8-0x13],cl
  40115d:	cmc    
  40115e:	cmp    eax,0xd8069ad7
  401163:	in     eax,dx
  401164:	adc    ebx,DWORD PTR [esi-0x7d]
  401167:	scas   al,BYTE PTR es:[edi]
  401168:	pop    esi
  401169:	rol    BYTE PTR [eax],1
  40116b:	mov    ecx,0xa66065a3
  401170:	stc    
  401171:	fmul   DWORD PTR [edi]
  401173:	lods   eax,DWORD PTR ds:[esi]
  401174:	xchg   ebp,eax
  401175:	les    edi,FWORD PTR [edi+ebx*1+0x55]
  401179:	rcr    ecx,0xc6
  40117c:	pop    ds
  40117d:	cmp    eax,0xf060ca1
  401182:	mov    BYTE PTR [edx-0x6b],dl
  401185:	dec    ebp
  401186:	int    0xf2
  401188:	xchg   esp,eax
  401189:	hlt    
  40118a:	push   eax
  40118b:	mov    ebx,0xf85b0e39
  401190:	leave  
  401191:	iret   
  401192:	in     eax,dx
  401193:	dec    ecx
  401194:	js     0x4011fd
  401196:	cmp    ebp,DWORD PTR [ebp+0x2e243a9c]
  40119c:	scas   eax,DWORD PTR es:[edi]
  40119d:	stc    
  40119e:	add    al,0xb6
  4011a0:	clc    
  4011a1:	aaa    
  4011a2:	xchg   edx,eax
  4011a3:	mov    cl,0x5e
  4011a5:	ds xor eax,0x5d7d645d
  4011ab:	aas    
  4011ac:	in     al,0x10
  4011ae:	sahf   
  4011af:	and    eax,0xe42473ab
  4011b4:	jg     0x40116c
  4011b6:	mov    eax,0x677d99bf
  4011bb:	les    ebx,FWORD PTR [ecx+eiz*1-0x4c5ed982]
  4011c2:	or     esi,esp
  4011c4:	imul   esi,DWORD PTR [eax-0x62],0x6b84faf5
  4011cb:	in     eax,0x30
  4011cd:	int    0xd2
  4011cf:	sub    DWORD PTR [ebp+0x4f],esp
  4011d2:	or     al,0x54
  4011d4:	rol    DWORD PTR [edx],cl
  4011d6:	fnsave [ebx-0x34]
  4011d9:	mov    ah,0xab
  4011db:	dec    edi
  4011dc:	fwait
  4011dd:	push   ds
  4011de:	or     eax,0xb3987511
  4011e3:	bound  esi,QWORD PTR [edx+0x46]
  4011e6:	aas    
  4011e7:	jecxz  0x401236
  4011e9:	fdivp  st(4),st
  4011eb:	pop    ds
  4011ec:	pop    esi
  4011ed:	add    BYTE PTR [edi+esi*2+0x2d3651af],al
  4011f4:	int3   
  4011f5:	stc    
  4011f6:	push   edx
  4011f7:	es sub eax,0x4061a77d
  4011fd:	and    al,0xaa
  4011ff:	sbb    ebp,DWORD PTR [ebx]
  401201:	xor    eax,0x58a4b784
  401206:	adc    al,0xc6
  401208:	xchg   BYTE PTR [ebx+0x23],ah
  40120b:	xchg   BYTE PTR [edx+0x2d],ah
  40120e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40120f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401210:	pop    ds
  401211:	retf   
  401212:	lods   eax,DWORD PTR ds:[esi]
  401213:	jo     0x401259
  401215:	out    dx,eax
  401216:	outs   dx,DWORD PTR ds:[esi]
  401217:	(bad)  
  401218:	stos   BYTE PTR es:[edi],al
  401219:	inc    ebx
  40121a:	popf   
  40121b:	dec    ecx
  40121c:	push   cs
  40121d:	mov    ch,0xd0
  40121f:	ds adc eax,0x9576dbc
  401225:	mov    ch,0xca
  401228:	or     bh,ch
  40122a:	add    al,bh
  40122c:	sar    BYTE PTR ds:0xec42eb07,1
  401232:	test   BYTE PTR [edi+0x1957a0aa],0xcf
  401239:	aas    
  40123a:	sbb    DWORD PTR [ebx+0x2],esp
  40123d:	scas   al,BYTE PTR es:[edi]
  40123e:	cvtps2pd xmm5,QWORD PTR [esi+ebp*4+0x62a1325c]
  401246:	cs jecxz 0x40128c
  401249:	mov    eax,ds:0x70604440
  40124e:	lods   eax,DWORD PTR ds:[esi]
  40124f:	pop    edi
  401250:	jmp    0x31122f26
  401255:	(bad)  
  401256:	popa   
  401257:	jl     0x4012d2
  401259:	scas   eax,DWORD PTR es:[edi]
  40125a:	mov    ecx,0x151fd219
  40125f:	push   eax
  401260:	push   eax
  401261:	xchg   edx,eax
  401262:	cwde   
  401263:	data16 jge 0x401241
  401266:	mov    dh,0x75
  401268:	mov    ebp,0x48d58dcb
  40126d:	mov    ecx,0xf510d354
  401272:	aas    
  401273:	loop   0x4012ee
  401275:	lods   eax,DWORD PTR ds:[esi]
  401276:	add    dh,BYTE PTR [eax+ecx*8-0x19]
  40127a:	or     DWORD PTR [eax-0x2cabd36],edi
  401280:	js     0x401251
  401282:	sti    
  401283:	sub    DWORD PTR [ecx+0x2d],ebx
  401286:	or     esp,DWORD PTR ds:0xb69d144
  40128c:	ss lock fucomip st,st(0)
  401290:	aas    
  401291:	fst    QWORD PTR [ecx]
  401293:	mov    ch,0x98
  401295:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401296:	fs dec eax
  401298:	lods   al,BYTE PTR ds:[esi]
  401299:	jl     0x4012c4
  40129b:	dec    eax
  40129c:	xchg   esp,eax
  40129d:	and    eax,0x5bce60e5
  4012a2:	cmp    DWORD PTR [eax+0x56],0x71
  4012a6:	inc    eax
  4012a7:	imul   edx,DWORD PTR [ecx],0x4c
  4012aa:	addr16 push edx
  4012ac:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4012ad:	std    
  4012ae:	icebp  
  4012af:	mov    ch,0x45
  4012b1:	push   eax
  4012b2:	mov    eax,0x57a1f581
  4012b7:	adc    ebx,DWORD PTR [ebp-0x9156ee3]
  4012bd:	cdq    
  4012be:	cwde   
  4012bf:	sbb    eax,0xecd0bbd3
  4012c4:	ins    BYTE PTR es:[edi],dx
  4012c5:	mov    esp,0xdaf78f4b
  4012ca:	and    eax,0xb8550b96
  4012cf:	ins    BYTE PTR es:[edi],dx
  4012d0:	(bad)  
  4012d1:	sub    ebp,esi
  4012d3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4012d4:	lock repz jnp 0x40132b
  4012d8:	mov    ds:0x508b9094,al
  4012dd:	and    edi,DWORD PTR [edx*8-0x5cf28731]
  4012e4:	fcmovb st,st(5)
  4012e6:	dec    edx
  4012e7:	xchg   esp,eax
  4012e8:	jp     0x4012d4
  4012ea:	pop    ecx
  4012eb:	test   DWORD PTR [esi*1+0x38ce69a],0x9b8f655f
  4012f6:	stc    
  4012f7:	scas   al,BYTE PTR es:[edi]
  4012f8:	imul   esp,DWORD PTR [ecx],0xffffffb1
  4012fb:	xor    DWORD PTR [eax-0x3ccff022],eax
  401301:	jnp    0x40137c
  401303:	in     al,0x1b
  401305:	jmp    0xd856:0xa9eb9ad2
  40130c:	sbb    dh,0x7f
  40130f:	jae    0x401308
  401311:	fdivr  QWORD PTR [ebx+0x1a]
  401314:	jle    0x40136e
  401316:	mov    dh,0x5
  401318:	xchg   esp,edi
  40131a:	clc    
  40131b:	(bad)  
  40131c:	ja     0x40139b
  40131e:	jg     0x4012d4
  401320:	inc    edi
  401321:	cvtps2pi mm7,QWORD PTR [eax+0x2628f761]
  401328:	xlat   BYTE PTR ds:[bx]
  40132a:	ja     0x401370
  40132c:	imul   edx,DWORD PTR [esi],0xb
  40132f:	sbb    al,0xbb
  401331:	mov    edi,0x619f869c
  401336:	outs   dx,DWORD PTR ds:[esi]
  401337:	or     BYTE PTR [eax+ebx*4+0x617d256e],bl
  40133e:	loopne 0x401321
  401340:	jp     0x401302
  401342:	and    BYTE PTR [ebx-0x23],bh
  401345:	cmp    esi,DWORD PTR [edi]
  401347:	add    DWORD PTR [esi-0x728d2a4c],esi
  40134d:	retf   
  40134e:	jge    0x401355
  401350:	xor    al,0x18
  401352:	cmp    eax,ebp
  401354:	xor    eax,ecx
  401356:	xor    BYTE PTR [ebp-0x33fe9848],bl
  40135c:	fsubr  QWORD PTR [ebx]
  40135e:	mov    al,0x80
  401360:	cld    
  401361:	ret    0x7858
  401364:	out    0xd4,eax
  401366:	loopne 0x4013b2
  401368:	jmp    0x40131f
  40136a:	pop    esp
  40136b:	mov    ah,0x31
  40136d:	and    DWORD PTR [esi+0x28],ecx
  401370:	pop    esp
  401371:	pop    eax
  401372:	and    BYTE PTR [ecx-0x5e],0xac
  401376:	ret    
  401377:	mov    ch,0xec
  401379:	or     DWORD PTR [ebx+0x40],ecx
  40137c:	adc    eax,0x82e6bb8a
  401381:	loop   0x401390
  401383:	or     eax,0x35e6252b
  401388:	aaa    
  401389:	xor    al,0xa4
  40138b:	iret   
  40138c:	retf   
  40138d:	cwde   
  40138e:	lods   eax,DWORD PTR ds:[esi]
  40138f:	stc    
  401390:	cmp    esi,DWORD PTR [ecx-0x4280c3cb]
  401396:	xchg   esp,eax
  401397:	fdivr  QWORD PTR [ebx]
  401399:	jo     0x401401
  40139b:	push   edx
  40139c:	bound  esp,QWORD PTR [edi]
  40139e:	hlt    
  40139f:	inc    ebx
  4013a0:	fldenv [ebp+0x4f]
  4013a3:	add    esi,edx
  4013a5:	sbb    DWORD PTR [edi+0x55],ebp
  4013a8:	cmc    
  4013a9:	inc    esp
  4013aa:	mov    ds:0x83944e12,eax
  4013af:	sub    DWORD PTR [edi+0x296766ff],0x47aa21da
  4013b9:	out    dx,eax
  4013ba:	xchg   ebp,eax
  4013bb:	sub    BYTE PTR [ecx-0x3f493e67],0x8c
  4013c2:	mov    eax,ds:0x73cba222
  4013c7:	fiadd  DWORD PTR ds:0x5e4ec7ef
  4013cd:	xor    edi,DWORD PTR [eax]
  4013cf:	jle    0x401405
  4013d1:	ins    BYTE PTR es:[edi],dx
  4013d2:	sti    
  4013d3:	mov    ebx,0x51e9be0d
  4013d8:	inc    ecx
  4013d9:	nop
  4013da:	stos   BYTE PTR es:[edi],al
  4013db:	mov    bh,0x9a
  4013dd:	inc    edx
  4013de:	pop    esi
  4013df:	inc    ecx
  4013e0:	lahf   
  4013e1:	jle    0x4013e6
  4013e3:	sub    edi,DWORD PTR [edi+0xcb92e9c]
  4013e9:	add    eax,DWORD PTR [eax]
  4013eb:	add    BYTE PTR [eax-0x75],cl
  4013ee:	rol    DWORD PTR [ecx+0x4214d81d],0x0
  4013f5:	cmp    BYTE PTR [edi],dh
  4013f7:	inc    edx
  4013f8:	add    BYTE PTR [esi+0x33],ah
  4013fb:	inc    edx
  4013fc:	and    BYTE PTR [ebx+0x66],dl
  4013ff:	add    eax,ecx
  401401:	add    DWORD PTR ds:0x4236f4,ebx
  401407:	movzx  eax,ax
  40140a:	inc    edx
  40140b:	mov    DWORD PTR [ebp-0xc],eax
  40140e:	or     edx,DWORD PTR ds:0x42366c
  401414:	mov    BYTE PTR [ebp-0x1],0xfd
  401418:	inc    edx
  401419:	lea    eax,[ebp-0x1]
  40141c:	mov    DWORD PTR ds:0x4214e4,0x12
  401426:	cmp    DWORD PTR ds:0x4214e4,0x0
  40142d:	je     0x401463
  401433:	cmp    DWORD PTR ds:0x4214e4,0x18
  40143a:	jne    0x40144b
  401440:	push   0x4821
  401445:	call   DWORD PTR ds:0x41f138
  40144b:	mov    edx,DWORD PTR ds:0x4214e4
  401451:	dec    edx
  401452:	mov    DWORD PTR ds:0x4214e4,edx
  401458:	jmp    0x401426
  40145d:	add    DWORD PTR ds:0x4236c4,edx
  401463:	mov    DWORD PTR [ebp-0x18],eax
  401466:	mov    al,BYTE PTR [ebp-0x1]
  401469:	add    edx,DWORD PTR ds:0x4236ec
  40146f:	mov    edx,DWORD PTR [ebp-0x18]
  401472:	xor    al,0x3a
  401474:	add    al,0x3a
  401476:	sub    DWORD PTR ds:0x4214e4,0x4214d8
  401480:	mov    BYTE PTR [edx],al
  401482:	and    DWORD PTR ds:0x4236c0,0x0
  40148c:	mov    eax,ds:0x4236c0
  401491:	inc    eax
  401492:	mov    ds:0x4236c0,eax
  401497:	cmp    DWORD PTR ds:0x4236c0,0xe
  40149e:	jne    0x4014ad
  4014a4:	push   DWORD PTR [ebp-0x24]
  4014a7:	call   DWORD PTR ds:0x41f13c
  4014ad:	cmp    DWORD PTR ds:0x4236c0,0xd
  4014b4:	jne    0x4014c5
  4014ba:	mov    eax,ds:0x4236c0
  4014bf:	inc    eax
  4014c0:	mov    ds:0x4236c0,eax
  4014c5:	cmp    DWORD PTR ds:0x4236c0,0x16
  4014cc:	jb     0x40148c
  4014d2:	mov    eax,ds:0x4236b8
  4014d7:	and    DWORD PTR ds:0x4236fc,eax
  4014dd:	push   esi
  4014de:	mov    eax,ds:0x4214e8
  4014e3:	xor    eax,DWORD PTR ds:0x423680
  4014e9:	mov    ds:0x4214e8,eax
  4014ee:	push   edi
  4014ef:	mov    DWORD PTR [ebp-0x8],0xffffffff
  4014f6:	sbb    DWORD PTR ds:0x4214f0,0x70ac
  401500:	mov    DWORD PTR [ebp-0x18],0xfffffffc
  401507:	sub    eax,DWORD PTR ds:0x4214dc
  40150d:	mov    edi,DWORD PTR [ebp-0x8]
  401510:	mov    eax,0x300a
  401515:	or     DWORD PTR ds:0x423670,0x513a
  40151f:	xor    edi,eax
  401521:	sbb    DWORD PTR ds:0x423700,0x107a
  40152b:	lea    esi,[eax+0x1]
  40152e:	add    edi,esi
  401530:	jmp    0x401937
  401535:	mov    DWORD PTR ds:0x4214e4,0x66ff
  40153f:	mov    dl,BYTE PTR [ebp-0x1]
  401542:	mov    DWORD PTR ds:0x423674,0xa2d
  40154c:	mov    BYTE PTR [ebp+edi*1-0x9c],dl
  401553:	mov    DWORD PTR ds:0x4236ec,0x43b4
  40155d:	jmp    0x401936
  401562:	leave  
  401563:	sub    al,0xa6
  401565:	scas   eax,DWORD PTR es:[edi]
  401566:	out    0xaf,eax
  401568:	leave  
  401569:	outs   dx,BYTE PTR ds:[esi]
  40156a:	mov    edx,DWORD PTR [edx-0xccf6804]
  401570:	adc    ah,bl
  401572:	or     al,0x37
  401574:	add    BYTE PTR [eax],al
  401576:	mov    esp,0xdd000003
  40157b:	adc    ch,BYTE PTR [ecx+0x25b2461c]
  401581:	shl    ecx,1
  401583:	loop   0x40150d
  401585:	sbb    DWORD PTR [ecx+eax*2-0x460680fb],0x1928b47c
  401590:	out    dx,eax
  401591:	neg    BYTE PTR [esi+0x14adb5a6]
  401597:	inc    esi
  401598:	sub    BYTE PTR [esi+0x34],ch
  40159b:	ins    BYTE PTR es:[edi],dx
  40159c:	addr16 aad 0x61
  40159f:	mov    ds:0x2b68f259,eax
  4015a4:	lods   al,BYTE PTR ds:[esi]
  4015a5:	js     0x40154a
  4015a7:	lods   eax,DWORD PTR ds:[esi]
  4015a8:	jge    0x4015e0
  4015aa:	push   ss
  4015ab:	push   ecx
  4015ac:	xor    ch,BYTE PTR [ecx-0x2e]
  4015af:	adc    eax,0xff3eae7e
  4015b4:	xor    al,0xb5
  4015b6:	fidivr WORD PTR [edx+0x5128a879]
  4015bc:	shr    DWORD PTR ds:0x6cc9fbad,cl
  4015c2:	repnz scas eax,DWORD PTR es:[edi]
  4015c4:	int3   
  4015c5:	mov    ebp,0x19244d78
  4015ca:	jge    0x4015f4
  4015cc:	push   ebx
  4015cd:	and    al,0x9c
  4015cf:	jp     0x401650
  4015d1:	inc    eax
  4015d2:	cmp    DWORD PTR [edi],ebx
  4015d4:	loope  0x401589
  4015d6:	es (bad) 
  4015d8:	js     0x401607
  4015da:	stos   DWORD PTR es:[edi],eax
  4015db:	ja     0x4015ce
  4015dd:	shr    DWORD PTR [ecx],cl
  4015df:	popf   
  4015e0:	inc    ebp
  4015e1:	scas   eax,DWORD PTR es:[edi]
  4015e2:	mov    esi,0xffdb1485
  4015e7:	div    BYTE PTR [edi]
  4015e9:	stos   DWORD PTR es:[edi],eax
  4015ea:	fistp  QWORD PTR [ebx+0xd3495d4]
  4015f0:	sahf   
  4015f1:	push   eax
  4015f2:	mov    cl,0x33
  4015f4:	lock jp 0x4015b1
  4015f7:	inc    esi
  4015f8:	fmul   QWORD PTR [ecx]
  4015fa:	push   esi
  4015fb:	retf   
  4015fc:	sti    
  4015fd:	push   esi
  4015fe:	inc    ecx
  4015ff:	lock call 0xf2bbb8e6
  401605:	imul   ebx,DWORD PTR [ebx+0x6b00a550],0xa1630a29
  40160f:	(bad)  
  401610:	jmp    0xcad6:0x9bb7ff78
  401617:	das    
  401618:	pop    edx
  401619:	shl    DWORD PTR [ebx+ebx*8],cl
  40161c:	dec    edx
  40161d:	cmp    BYTE PTR [ecx+0x3272a266],dl
  401623:	push   ss
  401624:	xchg   DWORD PTR [ebx-0x2d],edi
  401627:	imul   edx,DWORD PTR [edx-0x24c82dd8],0x7b
  40162e:	ins    DWORD PTR es:[edi],dx
  40162f:	repnz pop ebx
  401631:	daa    
  401632:	and    BYTE PTR [ebx],0xe5
  401635:	out    dx,al
  401636:	and    eax,0xdda4a624
  40163b:	mov    WORD PTR [ebx-0x562b422c],es
  401641:	jae    0x4015c4
  401643:	ss and eax,0xf23dc934
  401649:	fcmovnbe st,st(0)
  40164b:	xor    al,0xfc
  40164d:	mov    dh,0x41
  40164f:	mov    al,0x5e
  401651:	pop    eax
  401652:	add    BYTE PTR gs:[eax+0x75],bl
  401656:	repnz out 0xa0,al
  401659:	int    0xc9
  40165b:	pop    eax
  40165c:	add    BYTE PTR [ebx+0x28f2e5c7],ah
  401662:	jo     0x4016d5
  401664:	test   edx,ebp
  401666:	dec    ax
  401668:	in     eax,dx
  401669:	dec    BYTE PTR [edi+0x4d]
  40166c:	ret    
  40166d:	fldenv [esi-0xc]
  401670:	hlt    
  401671:	leave  
  401672:	fnstsw WORD PTR [esi]
  401674:	lods   al,BYTE PTR ds:[esi]
  401675:	stc    
  401676:	add    ebp,DWORD PTR [esi-0x6a7a9eb8]
  40167c:	inc    ebp
  40167d:	lea    ebp,[eax+0x690f2976]
  401683:	loop   0x401661
  401685:	sar    BYTE PTR [eax+eax*4-0x6cf1d635],cl
  40168c:	adc    al,0x87
  40168e:	mov    DWORD PTR [esi-0x54d60b5],edx
  401694:	and    BYTE PTR [ebp-0xd75c67f],ah
  40169a:	outs   dx,DWORD PTR ds:[esi]
  40169b:	xchg   ebx,eax
  40169c:	cmp    ah,BYTE PTR [ebp-0x13671be6]
  4016a2:	and    eax,0xf66fc351
  4016a7:	data16 xrstors [ecx]
  4016ab:	data16 (bad) 
  4016ad:	ins    DWORD PTR es:[edi],dx
  4016ae:	mov    eax,0x1cb26dc3
  4016b3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4016b4:	mov    bl,0xb6
  4016b6:	or     DWORD PTR [eax+0x25137fb1],0xffffffac
  4016bd:	mov    ecx,0x6b118f04
  4016c2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4016c3:	sti    
  4016c4:	cli    
  4016c5:	fimul  WORD PTR [eax+ecx*2+0x57fda548]
  4016cc:	popf   
  4016cd:	vpsllw xmm1,xmm5,xmm0
  4016d1:	das    
  4016d2:	pop    esi
  4016d3:	cmp    DWORD PTR [eax-0x4d65d3cf],edx
  4016d9:	pop    ecx
  4016da:	sti    
  4016db:	mul    BYTE PTR [ebx-0x462b6124]
  4016e1:	retf   0xdad9
  4016e4:	das    
  4016e5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4016e6:	js     0x401704
  4016e8:	call   0x121f2c56
  4016ed:	dec    ebx
  4016ee:	pop    edx
  4016ef:	push   eax
  4016f0:	and    eax,0xdfd13e67
  4016f5:	loop   0x40169c
  4016f7:	(bad)  
  4016f8:	loop   0x4016e4
  4016fa:	xchg   DWORD PTR [eax],edi
  4016fc:	sahf   
  4016fd:	jbe    0x4016aa
  4016ff:	mov    eax,0x4dadfe3d
  401704:	cmp    cl,bh
  401706:	dec    ebp
  401707:	(bad)  
  401708:	loope  0x40176b
  40170a:	mov    eax,DWORD PTR [edx+eax*2-0x2820d55c]
  401711:	arpl   WORD PTR [edx+0x41],di
  401714:	test   al,0xba
  401716:	and    bh,BYTE PTR [esi]
  401718:	cmp    DWORD PTR [ebx],edi
  40171a:	push   ecx
  40171b:	ret    
  40171c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40171d:	cld    
  40171e:	(bad)  
  40171f:	sbb    BYTE PTR [esi],dl
  401721:	mov    ds:0x9d859fd9,al
  401726:	jecxz  0x401715
  401728:	sbb    al,0xe9
  40172a:	fstp   st(2)
  40172c:	mov    dl,BYTE PTR [edx]
  40172e:	addr16 es or al,0xc9
  401732:	pop    edi
  401733:	adc    ebx,DWORD PTR [edi+0x78]
  401736:	imul   ebp,DWORD PTR [esi+0x12e0f059],0x7
  40173d:	fidivr DWORD PTR [ebp-0x12]
  401740:	push   esi
  401741:	repnz fsub DWORD PTR [ecx]
  401744:	jmp    0x401754
  401746:	push   ebp
  401747:	dec    esi
  401748:	sbb    BYTE PTR [ebp+0x1a96c3c],al
  40174e:	lds    ebx,FWORD PTR [ebx-0xe6d5eb1]
  401754:	(bad)  
  401755:	addr16 ror ch,1
  401758:	jmp    0x40176f
  40175a:	mov    ch,0x63
  40175c:	push   0x32
  40175e:	jp     0x40171e
  401760:	mov    ebp,0xfa0a9718
  401765:	das    
  401766:	and    DWORD PTR [edx+0x62771d2d],edi
  40176c:	clc    
  40176d:	not    DWORD PTR [ebp-0x1752b9a5]
  401773:	shr    BYTE PTR [esi+0x4eae779b],0x22
  40177a:	(bad)  
  40177b:	lods   al,BYTE PTR ds:[esi]
  40177c:	inc    eax
  40177d:	mov    BYTE PTR [ebx-0x5baea0a3],ch
  401783:	jnp    0x40175f
  401785:	cmp    ecx,DWORD PTR cs:[esi-0x5f]
  401789:	out    0xdd,eax
  40178b:	cmp    BYTE PTR [ebx],dl
  40178d:	icebp  
  40178e:	outs   dx,DWORD PTR ds:[esi]
  40178f:	enter  0xe0a5,0x22
  401793:	dec    ebp
  401794:	sbb    dl,BYTE PTR [ebp-0x16]
  401797:	data16 int3 
  401799:	gs into 
  40179b:	mov    bh,0xef
  40179d:	mov    bh,0x6c
  40179f:	mov    eax,ds:0xb2278c5e
  4017a4:	icebp  
  4017a5:	jg     0x4017a7
  4017a7:	xchg   esp,eax
  4017a8:	inc    edx
  4017a9:	add    esp,DWORD PTR [ebx+eax*2-0x19]
  4017ad:	push   0x6cb1f7a5
  4017b2:	retf   
  4017b3:	jmp    0x401760
  4017b5:	mov    ecx,0x95ec91d3
  4017ba:	lods   al,BYTE PTR ds:[esi]
  4017bb:	dec    edi
  4017bc:	icebp  
  4017bd:	dec    ecx
  4017be:	and    ah,BYTE PTR [edi+0x3e]
  4017c1:	ret    0x4315
  4017c4:	aaa    
  4017c5:	mov    eax,ds:0x656920a4
  4017ca:	sub    edi,esp
  4017cc:	cmp    cl,BYTE PTR [edi-0x3b]
  4017cf:	mov    BYTE PTR [ecx],0x7f
  4017d2:	pop    edi
  4017d3:	sti    
  4017d4:	sbb    esi,DWORD PTR [ecx-0x5ef1bf3d]
  4017da:	stos   BYTE PTR es:[edi],al
  4017db:	enter  0x9eb2,0x6b
  4017df:	sbb    BYTE PTR [esi],bl
  4017e1:	outs   dx,DWORD PTR ds:[esi]
  4017e2:	or     eax,ecx
  4017e4:	(bad)  
  4017e6:	ffreep st(6)
  4017e8:	and    al,0x5a
  4017ea:	int    0x69
  4017ec:	shl    BYTE PTR [eax+0x26b7473b],0x1b
  4017f3:	icebp  
  4017f4:	mov    ebp,0x74b755f7
  4017f9:	jle    0x40178d
  4017fb:	xor    al,0x4
  4017fd:	dec    edi
  4017fe:	adc    cl,bh
  401800:	sub    esp,esp
  401802:	dec    ecx
  401803:	sub    dh,BYTE PTR [ebp+eiz*1-0x742b8789]
  40180a:	mov    eax,ds:0x189ace7
  40180f:	(bad)  
  401811:	sbb    eax,0xbb14ec73
  401816:	(bad)  
  401818:	leave  
  401819:	sbb    DWORD PTR [esi-0x41],0xefb9dbcd
  401820:	outs   dx,BYTE PTR ds:[esi]
  401821:	jnp    0x401835
  401823:	sub    al,0x20
  401825:	dec    esp
  401826:	shl    BYTE PTR [bx],cl
  401829:	mov    eax,0xf6b685d9
  40182e:	out    dx,al
  40182f:	pop    edi
  401830:	fstp   st(5)
  401832:	ds jg  0x40183a
  401835:	dec    ebx
  401836:	sbb    eax,0x265a1243
  40183b:	mov    bp,0xc20b
  40183f:	cwde   
  401840:	test   eax,0x48796011
  401845:	mov    ebx,0xe6ddc539
  40184a:	mov    ebx,0x9193d467
  40184f:	loop   0x40184d
  401851:	ins    DWORD PTR es:[edi],dx
  401852:	cdq    
  401853:	xchg   BYTE PTR [edx-0x75],cl
  401856:	aas    
  401857:	call   0xc7df6b41
  40185c:	fistp  QWORD PTR [ebp-0x773b2255]
  401862:	ins    BYTE PTR es:[edi],dx
  401863:	shl    BYTE PTR [ebp-0x5998815a],0x79
  40186a:	and    al,0xc2
  40186c:	add    al,0xce
  40186e:	push   ecx
  40186f:	jl     0x401854
  401871:	add    esp,DWORD PTR [edx-0x61]
  401874:	mov    es,WORD PTR [edx-0x6]
  401877:	jle    0x4018a8
  401879:	fwait
  40187a:	arpl   WORD PTR [eax+0x2bd56420],bp
  401880:	jnp    0x40184d
  401882:	nop
  401883:	outs   dx,DWORD PTR ds:[esi]
  401884:	and    ah,ah
  401886:	sbb    edx,edi
  401888:	ins    DWORD PTR es:[edi],dx
  401889:	pop    ebp
  40188a:	mov    ah,BYTE PTR [edi-0x70]
  40188d:	and    ch,BYTE PTR [ebp-0x58]
  401890:	mov    bl,0xd2
  401892:	sbb    ebp,ebp
  401894:	jg     0x4018f8
  401896:	sub    ecx,edi
  401898:	mov    bl,0x2e
  40189a:	cmp    ebp,edx
  40189c:	and    BYTE PTR [eax],dh
  40189e:	mov    dh,0xba
  4018a0:	push   DWORD PTR [ebp+0x323c0b]
  4018a6:	repnz clc 
  4018a8:	inc    BYTE PTR [eax+0x4c3b8024]
  4018ae:	jo     0x401900
  4018b0:	hlt    
  4018b1:	xor    BYTE PTR [ebx],bl
  4018b3:	dec    ebp
  4018b4:	add    eax,0xc99f48bf
  4018b9:	push   0xffffff9d
  4018bb:	push   esp
  4018bc:	mov    ecx,0x69bd6b68
  4018c1:	pop    ds
  4018c2:	pop    eax
  4018c3:	jg     0x401868
  4018c5:	jmp    0xc859:0x8f6c7466
  4018cc:	imul   esp,eax,0x79
  4018cf:	in     eax,0x21
  4018d1:	pop    edi
  4018d2:	jmp    0x40188d
  4018d4:	jae    0x40188c
  4018d6:	adc    al,0x31
  4018d8:	adc    DWORD PTR [esi+0x29],esp
  4018db:	(bad)  
  4018dc:	loopne 0x401943
  4018de:	and    al,0xb7
  4018e0:	mov    dh,0x1d
  4018e2:	mov    eax,ds:0x220947e6
  4018e7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4018e8:	mov    eax,ds:0xe2956384
  4018ed:	push   ds
  4018ee:	jmp    0x401942
  4018f0:	mov    bl,0xf5
  4018f2:	ins    DWORD PTR es:[edi],dx
  4018f3:	pop    ebx
  4018f4:	inc    ebp
  4018f5:	cmp    DWORD PTR [edx],esi
  4018f7:	fwait
  4018f8:	cmp    ecx,ebp
  4018fa:	call   0xd533:0xdf84d8f0
  401901:	into   
  401902:	and    esp,DWORD PTR [ebp-0x7d]
  401905:	inc    ebp
  401906:	push   ebx
  401907:	test   BYTE PTR [edi+0x10],al
  40190a:	call   0x2bec:0xa0d284f9
  401911:	sbb    esp,DWORD PTR [ebp+0x6d555e85]
  401917:	pop    ecx
  401918:	or     ebp,DWORD PTR [eax-0x79]
  40191b:	mov    ecx,0x4e12713d
  401920:	clc    
  401921:	adc    eax,edi
  401923:	add    eax,0x2fc2c951
  401928:	test   ah,bl
  40192a:	lods   al,BYTE PTR ds:[esi]
  40192b:	jle    0x401966
  40192d:	imul   eax,DWORD PTR [esi+0x6d],0x54
  401931:	scas   eax,DWORD PTR es:[edi]
  401932:	and    bh,BYTE PTR [ecx]
  401934:	scas   al,BYTE PTR es:[edi]
  401935:	cmc    
  401936:	inc    edi
  401937:	mov    DWORD PTR ds:0x4214e4,0x2c26
  401941:	cmp    edi,0x40
  401944:	mov    DWORD PTR ds:0x4214e8,0x1ebe
  40194e:	jb     0x401535
  401954:	mov    edx,DWORD PTR ds:0x4236ac
  40195a:	sbb    DWORD PTR ds:0x423738,edx
  401960:	mov    edx,DWORD PTR [ebp-0x8]
  401963:	xor    edx,eax
  401965:	add    edx,esi
  401967:	mov    DWORD PTR ds:0x4214f0,0x1ec7
  401971:	jmp    0x401a53
  401976:	and    DWORD PTR ds:0x4214ec,0x0
  401980:	jmp    0x401992
  401985:	mov    ebx,DWORD PTR ds:0x4214ec
  40198b:	inc    ebx
  40198c:	mov    DWORD PTR ds:0x4214ec,ebx
  401992:	cmp    DWORD PTR ds:0x4214ec,0x1f
  401999:	jae    0x4019e0
  40199f:	cmp    DWORD PTR ds:0x4214ec,0x6
  4019a6:	jne    0x4019c1
  4019ac:	push   0x8380
  4019b1:	push   0x37cd
  4019b6:	push   0x53ef
  4019bb:	call   DWORD PTR ds:0x41f50c
  4019c1:	cmp    DWORD PTR ds:0x4214ec,0x5
  4019c8:	jne    0x4019db
  4019ce:	mov    ebx,DWORD PTR ds:0x4214ec
  4019d4:	inc    ebx
  4019d5:	mov    DWORD PTR ds:0x4214ec,ebx
  4019db:	jmp    0x401985
  4019e0:	mov    ebx,DWORD PTR [ebp+0x8]
  4019e3:	mov    edi,DWORD PTR ds:0x423684
  4019e9:	and    DWORD PTR ds:0x423734,edi
  4019ef:	mov    edi,ecx
  4019f1:	sub    DWORD PTR ds:0x4236f4,0x423744
  4019fb:	xor    di,WORD PTR [ebx+edx*4+0x2]
  401a00:	and    DWORD PTR ds:0x4236ec,0x423734
  401a0a:	add    di,cx
  401a0d:	sbb    DWORD PTR ds:0x4236f4,0x4214fc
  401a17:	movzx  edi,di
  401a1a:	mov    DWORD PTR [ebp-0x14],edi
  401a1d:	inc    edi
  401a1e:	mov    edi,DWORD PTR [ebp+0x8]
  401a21:	sub    DWORD PTR ds:0x423728,0x4214e4
  401a2b:	movzx  edx,WORD PTR [edi+edx*4]
  401a2f:	neg    edi
  401a31:	mov    edi,DWORD PTR [ebp-0x14]
  401a34:	and    DWORD PTR ds:0x4214ec,0x4236bc
  401a3e:	xor    edx,ecx
  401a40:	add    edx,ecx
  401a42:	mov    BYTE PTR [ebp+edi*1-0x9c],dl
  401a49:	inc    edx
  401a4a:	mov    edx,DWORD PTR [ebp-0x10]
  401a4d:	mov    edi,0x543c
  401a52:	inc    edx
  401a53:	mov    edi,DWORD PTR [ebp-0xc]
  401a56:	mov    DWORD PTR ds:0x42372c,0x34d8
  401a60:	mov    DWORD PTR [ebp-0x10],edx
  401a63:	mov    DWORD PTR ds:0x423684,0x55aa
  401a6d:	cmp    edx,edi
  401a6f:	mov    DWORD PTR ds:0x423700,0x4a16
  401a79:	jne    0x401976
  401a7f:	mov    ecx,DWORD PTR [ebp-0x8]
  401a82:	jmp    0x401e5b
  401a87:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401a88:	cmc    
  401a89:	shr    DWORD PTR [esi-0x200512d],1
  401a8f:	sahf   
  401a90:	sub    eax,0xbd3c26c9
  401a95:	loopne 0x401a89
  401a97:	enter  0x3a,0x0
  401a9b:	mov    esp,0xb0000003
  401aa0:	jo     0x401a32
  401aa2:	mov    ebx,0x1e4cf28d
  401aa7:	dec    edx
  401aa8:	pop    ds
  401aa9:	jne    0x401a86
  401aab:	scas   al,BYTE PTR es:[edi]
  401aac:	jmp    0x3ed4c860
  401ab1:	fsub   DWORD PTR [esi-0x5b]
  401ab4:	test   al,0x9c
  401ab6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401ab7:	add    al,0x14
  401ab9:	fidiv  WORD PTR [esi]
  401abb:	add    BYTE PTR [ebp+0x6c],dh
  401abe:	ficom  WORD PTR [ecx-0x18]
  401ac1:	bnd call DWORD PTR [ebx+eax*2-0x266aee74]
  401ac9:	jp     0x401b15
  401acb:	out    0x5e,al
  401acd:	mov    bl,0x1
  401acf:	call   0x6919:0x7f08194
  401ad6:	mov    dl,bl
  401ad8:	pushf  
  401ad9:	push   edi
  401ada:	xor    al,0x38
  401adc:	mov    al,ds:0x4268fc36
  401ae1:	jo     0x401adf
  401ae3:	inc    eax
  401ae4:	dec    eax
  401ae5:	sub    ah,dl
  401ae7:	es call 0x189ae907
  401aed:	adc    eax,0x38a7ed93
  401af2:	fbstp  TBYTE PTR ds:0x1f7ea8e4
  401af8:	out    dx,eax
  401af9:	jmp    0x401ab6
  401afb:	rcl    DWORD PTR [ebp-0x5c],1
  401afe:	mov    ds:0xe5b491e7,al
  401b03:	pop    esi
  401b04:	push   ecx
  401b05:	cdq    
  401b06:	imul   eax,eax,0xc55b1a1c
  401b0c:	les    esi,FWORD PTR [edx-0x2b33023f]
  401b12:	push   0xc52df436
  401b17:	xchg   ebx,eax
  401b18:	cmp    eax,0x6ec32403
  401b1d:	lea    eax,[ecx-0x39]
  401b20:	lods   eax,DWORD PTR ds:[esi]
  401b21:	or     BYTE PTR [edx-0x16109825],dl
  401b27:	push   esi
  401b28:	ffree  st(1)
  401b2a:	push   es
  401b2b:	js     0x401b5e
  401b2d:	shl    BYTE PTR [ecx+0x16152a69],0x41
  401b34:	fldenv [ecx+0x69]
  401b37:	loope  0x401b2a
  401b39:	icebp  
  401b3a:	pop    ds
  401b3b:	aad    0x83
  401b3d:	add    DWORD PTR [ecx-0x26],edi
  401b40:	imul   esi,DWORD PTR [ecx-0x1b377cd3],0x2a
  401b47:	js     0x401bc4
  401b49:	cld    
  401b4a:	push   ebp
  401b4b:	inc    ecx
  401b4c:	fs jl  0x401af0
  401b4f:	cmp    edx,DWORD PTR [ebx-0x5a424515]
  401b55:	mov    edi,0x82ee0aca
  401b5a:	mov    eax,ds:0x7ee4d642
  401b5f:	popa   
  401b60:	test   BYTE PTR [ecx-0x76],al
  401b63:	jle    0x401b01
  401b65:	jo     0x401b3d
  401b67:	mov    esp,0xd43f88e2
  401b6c:	rcl    BYTE PTR [esp+edi*8],cl
  401b6f:	jge    0x401b54
  401b71:	jmp    0x3fc5:0x12448e98
  401b78:	add    eax,0x9b98ec8d
  401b7d:	jae    0x401be8
  401b7f:	cmp    BYTE PTR [ebx],0xb8
  401b82:	inc    BYTE PTR [eax+0x6a0a2796]
  401b88:	aaa    
  401b89:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401b8a:	popa   
  401b8b:	lea    ecx,[ecx+ebx*1+0x7dd38983]
  401b92:	jnp    0x401b60
  401b94:	cmc    
  401b95:	in     al,0xc1
  401b97:	ret    
  401b98:	xor    bl,ch
  401b9a:	hlt    
  401b9b:	dec    edi
  401b9c:	rol    DWORD PTR [edx+0x58c28c1],cl
  401ba2:	push   esp
  401ba3:	scas   eax,DWORD PTR es:[edi]
  401ba4:	mov    eax,ds:0x564f6c5f
  401ba9:	sbb    BYTE PTR [edx],ch
  401bab:	inc    ecx
  401bac:	outs   dx,DWORD PTR ds:[esi]
  401bad:	mov    edi,0xab5df8f5
  401bb2:	je     0x401bc7
  401bb4:	fld    QWORD PTR [ecx]
  401bb6:	lock sub ch,BYTE PTR [ebp-0x32]
  401bba:	in     al,dx
  401bbb:	ds dec edx
  401bbd:	imul   edx,DWORD PTR [ecx],0x2d
  401bc0:	call   0x271f:0xb7a4104c
  401bc7:	das    
  401bc8:	mov    ebx,DWORD PTR [edx-0x63]
  401bcb:	ret    0x887b
  401bce:	repz jno 0x401b75
  401bd1:	inc    ecx
  401bd2:	leave  
  401bd3:	pop    es
  401bd4:	pop    eax
  401bd5:	push   ebp
  401bd6:	xor    BYTE PTR [eax+eiz*4-0x8],ch
  401bda:	dec    esp
  401bdb:	xor    bh,BYTE PTR [edi-0x3e]
  401bde:	cmp    BYTE PTR [esi+0x2c031840],dl
  401be4:	fidiv  WORD PTR [eax]
  401be6:	test   BYTE PTR [ecx+0x18],ah
  401be9:	and    DWORD PTR ds:0x10662c75,esi
  401bef:	inc    edx
  401bf0:	mov    ds:0xc7d9c299,eax
  401bf5:	mov    ds:0x1269a931,al
  401bfa:	or     al,0x15
  401bfc:	test   DWORD PTR [ebx+0x7d],esp
  401bff:	imul   ebp,DWORD PTR [esi+0x53],0x683125d1
  401c06:	out    dx,al
  401c07:	fnstenv [eax]
  401c09:	lods   al,BYTE PTR ds:[esi]
  401c0a:	add    bh,al
  401c0c:	mov    ds:0xfda4d7eb,al
  401c11:	retf   0xf7d0
  401c14:	stc    
  401c15:	xlat   BYTE PTR ds:[ebx]
  401c16:	test   cl,bh
  401c18:	push   ebp
  401c19:	clc    
  401c1a:	test   al,0x87
  401c1c:	mov    fs,WORD PTR [edx]
  401c1e:	aas    
  401c1f:	ja     0x401c24
  401c21:	adc    esi,DWORD PTR [ecx+0x52a9b488]
  401c27:	push   edx
  401c28:	aaa    
  401c29:	pop    edx
  401c2a:	rcr    DWORD PTR [esi],cl
  401c2c:	mov    esi,0xd6d3a2a
  401c31:	push   es
  401c32:	ja     0x401cb1
  401c34:	or     al,0x8e
  401c36:	and    BYTE PTR [eax-0x64],dl
  401c39:	push   edx
  401c3a:	push   0xa6ed1c9
  401c3f:	mov    dh,0x89
  401c41:	aam    0xa6
  401c43:	inc    eax
  401c44:	test   BYTE PTR [edi-0x6dd3ee1e],bl
  401c4a:	cmp    eax,0xeaa46807
  401c4f:	dec    esp
  401c50:	fwait
  401c51:	or     ebp,edi
  401c53:	fiadd  WORD PTR [eax]
  401c55:	cs (bad) 
  401c57:	cld    
  401c58:	lahf   
  401c59:	scas   eax,DWORD PTR es:[edi]
  401c5a:	mov    ds:0xb1b57712,al
  401c5f:	mov    dl,0xc3
  401c61:	les    ebp,FWORD PTR ds:0xa50dadc2
  401c67:	rcr    DWORD PTR [esi+0x16],0x32
  401c6b:	(bad)  
  401c6c:	hlt    
  401c6d:	xchg   esi,eax
  401c6e:	(bad)  
  401c6f:	sbb    DWORD PTR [eax+ecx*1-0x6c],edi
  401c73:	adc    ebp,ebx
  401c75:	jns    0x401cba
  401c77:	into   
  401c78:	xchg   edx,eax
  401c79:	imul   esp,DWORD PTR [ecx+0x20],0x5
  401c7d:	into   
  401c7e:	lahf   
  401c7f:	mov    ebx,0xdb149857
  401c84:	test   eax,0xce5c4dba
  401c89:	fistp  WORD PTR [edi]
  401c8b:	xor    al,cl
  401c8d:	addr16 leave 
  401c8f:	retf   
  401c90:	lods   al,BYTE PTR ds:[esi]
  401c91:	push   0xd83c79fe
  401c96:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401c97:	or     edi,edi
  401c99:	inc    eax
  401c9a:	dec    ebp
  401c9b:	ss pop edi
  401c9d:	mov    al,ds:0xd06bfff9
  401ca2:	sub    al,0xe3
  401ca4:	jecxz  0x401c6b
  401ca6:	popf   
  401ca7:	loopne 0x401d0e
  401ca9:	(bad)  
  401caa:	mov    ds:0xb9e07764,al
  401caf:	addr16 arpl dx,sp
  401cb2:	(bad)  
  401cb4:	cmovle edi,DWORD PTR [ecx-0x402b2fe9]
  401cbb:	mov    al,ds:0x712a89e9
  401cc0:	sbb    eax,0x1b6b347d
  401cc5:	sub    DWORD PTR [eax+0x348e020d],esp
  401ccb:	sbb    BYTE PTR [eax],bl
  401ccd:	jno    0x401d21
  401ccf:	test   DWORD PTR [edx+ebp*2-0x40],ebp
  401cd3:	ret    0x5042
  401cd6:	int    0xf
  401cd8:	pop    ecx
  401cd9:	arpl   cx,cx
  401cdb:	cwde   
  401cdc:	jbe    0x401c96
  401cde:	cmp    ecx,DWORD PTR [eax+0x6]
  401ce1:	cmp    dl,ah
  401ce3:	and    DWORD PTR [edx-0x58d24f5b],edi
  401ce9:	adc    ecx,DWORD PTR [edx]
  401ceb:	cmp    eax,0x5b380c72
  401cf0:	pop    ds
  401cf1:	inc    eax
  401cf2:	mov    ch,0xb6
  401cf4:	add    BYTE PTR [eax+0xb5f1ee6],0xbb
  401cfb:	imul   esp,DWORD PTR [edi-0x1349318d],0x21
  401d02:	inc    edx
  401d03:	cwde   
  401d04:	dec    ebp
  401d05:	cmp    BYTE PTR [ecx+0x4eef28ec],cl
  401d0b:	lods   al,BYTE PTR ds:[esi]
  401d0c:	stos   BYTE PTR es:[edi],al
  401d0d:	mov    ebp,DWORD PTR [esi-0xd]
  401d10:	dec    esp
  401d11:	and    ebp,DWORD PTR [esi+0x4e]
  401d14:	(bad)  [ecx]
  401d16:	mov    dl,0x28
  401d18:	inc    edi
  401d19:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401d1a:	jne    0x401cc2
  401d1c:	dec    ecx
  401d1d:	sub    eax,0x49ab39b7
  401d22:	push   ss
  401d23:	jb     0x401cc8
  401d25:	cmp    al,0x58
  401d27:	lds    ecx,FWORD PTR [eax-0x5c3b826c]
  401d2d:	sub    bl,BYTE PTR [edi-0x48058446]
  401d33:	adc    eax,0xba2af8aa
  401d38:	out    dx,al
  401d39:	dec    eax
  401d3a:	add    BYTE PTR ds:0xe445ea4b,bl
  401d40:	(bad)  
  401d42:	cmp    ebp,eax
  401d44:	sbb    dh,dh
  401d46:	into   
  401d47:	bound  esp,QWORD PTR [ebx+eiz*2+0xa]
  401d4b:	sub    eax,0xcbacb26a
  401d50:	push   ebp
  401d51:	sub    eax,0x97da99a3
  401d56:	je     0x401da7
  401d58:	aas    
  401d59:	add    DWORD PTR [eax-0x48],esi
  401d5c:	adc    eax,0x2c6241aa
  401d61:	popa   
  401d62:	imul   edi,ebp,0x63
  401d65:	add    edi,DWORD PTR cs:[eax+0x592da63f]
  401d6c:	dec    esp
  401d6d:	or     BYTE PTR ds:0x9cd3ff6e,dl
  401d73:	or     BYTE PTR [eax],dh
  401d75:	push   edx
  401d76:	or     al,BYTE PTR [esi-0x11e304ca]
  401d7c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401d7d:	push   0xe3467482
  401d82:	nop
  401d83:	adc    cl,al
  401d85:	mov    edi,0x9213f245
  401d8a:	fwait
  401d8b:	pop    edi
  401d8c:	shl    DWORD PTR [eax-0x72],1
  401d8f:	mov    bh,0xbb
  401d91:	js     0x401ddb
  401d93:	adc    ch,dl
  401d95:	mov    eax,ds:0x32b53e0
  401d9a:	rcl    ebp,cl
  401d9c:	pop    ecx
  401d9d:	fs push esi
  401d9f:	adc    al,0xd4
  401da1:	jmp    0xf520e59f
  401da6:	adc    ch,BYTE PTR [esi+eiz*1]
  401da9:	jb     0x401e08
  401dab:	jle    0x401d9b
  401dad:	jbe    0x401dc4
  401daf:	inc    ecx
  401db0:	fdiv   DWORD PTR [eax]
  401db2:	pop    es
  401db3:	sub    bh,bl
  401db5:	dec    esp
  401db6:	test   eax,0xc1178ea1
  401dbb:	inc    ecx
  401dbc:	push   ebp
  401dbd:	or     DWORD PTR [esi+0x27],edi
  401dc0:	imul   edx,DWORD PTR [eax+ebx*1-0x3b],0xbba4911
  401dc8:	in     eax,dx
  401dc9:	ficom  WORD PTR ds:0x2da887ad
  401dcf:	push   cs
  401dd0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401dd1:	int3   
  401dd2:	mov    ah,0xfa
  401dd4:	xchg   DWORD PTR [edi],ecx
  401dd6:	jnp    0x401dd4
  401dd8:	xor    DWORD PTR [eax-0x7a],eax
  401ddb:	adc    DWORD PTR [edx-0x6a408bed],edi
  401de1:	je     0x401dba
  401de3:	inc    ecx
  401de4:	xor    BYTE PTR [ecx+edx*2+0x4113cc8b],bh
  401deb:	mov    fs,WORD PTR [eax+0x58631f7f]
  401df1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401df2:	cli    
  401df3:	lea    ecx,[eax]
  401df5:	inc    edi
  401df6:	or     al,0x29
  401df8:	or     ebx,esp
  401dfa:	push   cs
  401dfb:	sbb    BYTE PTR [ecx+0x239d7d22],0x12
  401e02:	int    0xca
  401e04:	xchg   ecx,eax
  401e05:	and    DWORD PTR [edi],0xffffffde
  401e08:	pop    edx
  401e09:	mov    ds:0x7d933ab9,eax
  401e0e:	les    edi,FWORD PTR [esi+ebp*1]
  401e11:	add    BYTE PTR [esi+0x5b],bh
  401e14:	pop    esi
  401e15:	and    esp,esp
  401e17:	or     ebp,esp
  401e19:	fnstcw WORD PTR cs:0x870715cb
  401e20:	(bad)  
  401e21:	loope  0x401e6a
  401e23:	into   
  401e24:	inc    eax
  401e25:	pop    ebx
  401e26:	mov    edi,0x33e385b7
  401e2b:	js     0x401e13
  401e2d:	test   al,0x3a
  401e2f:	cli    
  401e30:	mov    es,WORD PTR [esi+0x13e82693]
  401e36:	mov    DWORD PTR [ebp+0x27],esi
  401e39:	push   cs
  401e3a:	es cdq 
  401e3c:	add    al,0x97
  401e3e:	cs sub DWORD PTR es:[esi+esi*2],0xe8f41621
  401e47:	(bad)  
  401e49:	xor    bh,BYTE PTR [ebx]
  401e4b:	fs popa 
  401e4d:	ss je  0x401e0e
  401e50:	inc    esp
  401e51:	int    0x43
  401e53:	mov    edx,db5
  401e56:	test   eax,0x2171876d
  401e5b:	mov    edx,DWORD PTR [ebp+0x10]
  401e5e:	xor    DWORD PTR ds:0x4236b4,0x624d
  401e68:	xor    ecx,eax
  401e6a:	neg    DWORD PTR ds:0x4236e8
  401e70:	add    ecx,esi
  401e72:	xor    DWORD PTR ds:0x4214d8,0x1c5b
  401e7c:	mov    DWORD PTR [edx],ecx
  401e7e:	mov    DWORD PTR ds:0x423728,0x1a
  401e88:	cmp    DWORD PTR ds:0x423728,0x0
  401e8f:	je     0x401f7a
  401e95:	cmp    DWORD PTR ds:0x423728,0x9
  401e9c:	jne    0x401eab
  401ea2:	push   DWORD PTR [ebp-0x1c]
  401ea5:	call   DWORD PTR ds:0x41f510
  401eab:	cmp    DWORD PTR ds:0x423728,0xa
  401eb2:	jne    0x401ec5
  401eb8:	mov    ecx,DWORD PTR ds:0x423728
  401ebe:	dec    ecx
  401ebf:	mov    DWORD PTR ds:0x423728,ecx
  401ec5:	mov    ecx,DWORD PTR ds:0x423728
  401ecb:	dec    ecx
  401ecc:	mov    DWORD PTR ds:0x423728,ecx
  401ed2:	jmp    0x401e88
  401ed7:	mov    DWORD PTR ds:0x4214f0,0x18
  401ee1:	cmp    DWORD PTR ds:0x4214f0,0x0
  401ee8:	je     0x401f7a
  401eee:	cmp    DWORD PTR ds:0x4214f0,0x1f
  401ef5:	jne    0x401f0e
  401efb:	push   0x2327
  401f00:	push   DWORD PTR [ebp-0x20]
  401f03:	push   0x443e
  401f08:	call   DWORD PTR ds:0x41f01c
  401f0e:	xor    edx,edx
  401f10:	add    edx,DWORD PTR ds:0x4214f0
  401f16:	dec    edx
  401f17:	mov    DWORD PTR ds:0x4214f0,edx
  401f1d:	jmp    0x401ee1
  401f22:	and    DWORD PTR ds:0x4236c4,0x0
  401f2c:	mov    ecx,DWORD PTR ds:0x4236c4
  401f32:	inc    ecx
  401f33:	mov    DWORD PTR ds:0x4236c4,ecx
  401f39:	cmp    DWORD PTR ds:0x4236c4,0x19
  401f40:	jne    0x401f67
  401f46:	push   DWORD PTR [ebp-0x20]
  401f49:	push   0x34ba
  401f4e:	push   0x4236ec
  401f53:	push   DWORD PTR [ebp-0x18]
  401f56:	push   DWORD PTR [ebp-0x20]
  401f59:	push   DWORD PTR [ebp-0x14]
  401f5c:	push   0x8900
  401f61:	call   DWORD PTR ds:0x41f3dc
  401f67:	cmp    DWORD PTR ds:0x4236c4,0x12
  401f6e:	jb     0x401f2c
  401f74:	sub    ecx,DWORD PTR ds:0x4214e0
  401f7a:	mov    ecx,DWORD PTR [ebp-0x8]
  401f7d:	xor    ecx,eax
  401f7f:	mov    DWORD PTR ds:0x4236c4,0x16
  401f89:	cmp    DWORD PTR ds:0x4236c4,0x0
  401f90:	je     0x40202b
  401f96:	cmp    DWORD PTR ds:0x4236c4,0x23
  401f9d:	jne    0x401faf
  401fa3:	push   DWORD PTR [ebp-0xc]
  401fa6:	push   DWORD PTR [ebp-0x18]
  401fa9:	call   DWORD PTR ds:0x41f3e0
  401faf:	mov    edx,DWORD PTR ds:0x4236c4
  401fb5:	dec    edx
  401fb6:	mov    DWORD PTR ds:0x4236c4,edx
  401fbc:	jmp    0x401f89
  401fc1:	mov    DWORD PTR ds:0x4214f4,0x14
  401fcb:	cmp    DWORD PTR ds:0x4214f4,0x0
  401fd2:	je     0x40202b
  401fd8:	cmp    DWORD PTR ds:0x4214f4,0x9
  401fdf:	jne    0x401fff
  401fe5:	push   0x423670
  401fea:	push   0x2261
  401fef:	push   0x1131
  401ff4:	push   0x7828
  401ff9:	call   DWORD PTR ds:0x41f514
  401fff:	cmp    DWORD PTR ds:0x4214f4,0xa
  402006:	jne    0x402019
  40200c:	mov    edx,DWORD PTR ds:0x4214f4
  402012:	dec    edx
  402013:	mov    DWORD PTR ds:0x4214f4,edx
  402019:	mov    edx,DWORD PTR ds:0x4214f4
  40201f:	dec    edx
  402020:	mov    DWORD PTR ds:0x4214f4,edx
  402026:	jmp    0x401fcb
  40202b:	add    ecx,esi
  40202d:	mov    DWORD PTR [ebp-0xc],ecx
  402030:	mov    DWORD PTR [ebp+0x8],0xffffe00f
  402037:	mov    ecx,DWORD PTR [ebp-0x8]
  40203a:	mov    edx,DWORD PTR [ebp+0x8]
  40203d:	xor    ecx,eax
  40203f:	xor    edx,eax
  402041:	add    ecx,esi
  402043:	jmp    0x40241c
  402048:	inc    esi
  402049:	data16 scas al,BYTE PTR es:[edi]
  40204b:	cdq    
  40204c:	scas   al,BYTE PTR es:[edi]
  40204d:	fnstenv [edi-0x1]
  402050:	icebp  
  402051:	call   0x667e9adb
  402056:	(bad)  
  402058:	test   BYTE PTR [esi],bh
  40205a:	add    BYTE PTR [eax],al
  40205c:	mov    esp,0xf7000003
  402061:	repnz pop ebx
  402063:	js     0x4020a6
  402065:	mov    ds:0xec027f9f,eax
  40206a:	push   0x6c
  40206c:	xchg   ebp,eax
  40206d:	out    0x9b,eax
  40206f:	jno    0x40206e
  402071:	popa   
  402072:	test   DWORD PTR [ebp+ecx*1-0x1e],eax
  402076:	or     eax,0x23db5248
  40207c:	jp     0x402019
  40207e:	dec    esi
  40207f:	inc    esp
  402080:	outs   dx,BYTE PTR ds:[esi]
  402081:	aad    0x71
  402083:	or     al,0xdb
  402085:	pop    ss
  402086:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402087:	sub    DWORD PTR [esp+ebp*4-0x66798f94],ebx
  40208e:	pop    ebx
  40208f:	adc    al,0xe7
  402091:	and    ebp,DWORD PTR [ebx+0x6e7fd882]
  402097:	add    dl,cl
  402099:	sub    ebp,DWORD PTR [esi]
  40209b:	cdq    
  40209c:	and    esp,DWORD PTR [edx-0x15]
  40209f:	fist   DWORD PTR [edx]
  4020a1:	icebp  
  4020a2:	leave  
  4020a3:	mov    edi,ebx
  4020a5:	call   0xf7ea2869
  4020aa:	inc    ecx
  4020ab:	aad    0x20
  4020ad:	mov    gs,WORD PTR [esi]
  4020af:	pop    ebx
  4020b0:	rcr    DWORD PTR [ebx],cl
  4020b2:	(bad)  
  4020b3:	pop    eax
  4020b4:	cmp    cl,BYTE PTR [edi-0x3]
  4020b7:	pop    esp
  4020b8:	adc    BYTE PTR [ebx+ebx*8-0x5d],dh
  4020bc:	dec    esp
  4020bd:	in     eax,0x79
  4020bf:	fwait
  4020c0:	rcr    DWORD PTR [ebp-0x17e8c1fc],0x1
  4020c7:	mov    bl,0xb5
  4020c9:	fnstcw WORD PTR [ebx]
  4020cb:	jbe    0x40211b
  4020cd:	xchg   esp,eax
  4020ce:	ds or  al,dh
  4020d1:	mov    ebp,0xac2cbd2a
  4020d6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4020d7:	shr    BYTE PTR [ebx+0x66],0xb8
  4020db:	stc    
  4020dc:	retf   
  4020dd:	cmc    
  4020de:	cmp    ebx,ecx
  4020e0:	mov    dl,0xdd
  4020e2:	sbb    eax,0x8b71b08d
  4020e7:	test   DWORD PTR [eax-0x7a484972],ebp
  4020ed:	mov    ch,0x18
  4020ef:	jne    0x4020b2
  4020f1:	add    DWORD PTR [eax-0x6],0xb7a5753d
  4020f8:	mov    DWORD PTR [eax],0x660d053f
  4020fe:	xchg   bh,cl
  402100:	dec    edi
  402101:	pop    esi
  402102:	jge    0x4020a0
  402104:	cmp    al,0x16
  402106:	das    
  402107:	mov    ch,0xd
  402109:	add    al,0xdb
  40210b:	xchg   esp,eax
  40210c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40210d:	sbb    dl,BYTE PTR [eax-0x77]
  402110:	(bad)  
  402111:	xchg   esi,eax
  402112:	hlt    
  402113:	pop    esi
  402114:	xchg   esi,esp
  402116:	and    dl,0xa9
  402119:	loope  0x402181
  40211b:	sub    bl,cl
  40211d:	xor    BYTE PTR [edi+0x32],0xe
  402121:	inc    ebp
  402122:	gs push es
  402124:	ja     0x4020c3
  402126:	xchg   esp,eax
  402127:	(bad)  
  402128:	loop   0x402195
  40212a:	sub    al,0x78
  40212c:	cli    
  40212d:	mov    bl,0x67
  40212f:	(bad)  
  402130:	ret    
  402131:	and    al,0x54
  402133:	stos   BYTE PTR es:[edi],al
  402134:	mov    eax,ds:0xed4c6d50
  402139:	stc    
  40213a:	clc    
  40213b:	test   al,0x4
  40213d:	mov    DWORD PTR [esi+0x57],esi
  402140:	add    eax,0x11d6fb86
  402145:	pusha  
  402146:	out    dx,al
  402147:	jmp    0x3b6f:0xe7d44c2a
  40214e:	lods   eax,DWORD PTR ds:[esi]
  40214f:	call   0xf5e37b28
  402154:	dec    DWORD PTR [eax]
  402156:	outs   dx,BYTE PTR ds:[esi]
  402157:	test   esp,0x8cb2bfc5
  40215d:	add    al,0x76
  40215f:	jecxz  0x40211f
  402161:	daa    
  402162:	loope  0x4021ce
  402164:	rcl    BYTE PTR [eax-0x41f62005],1
  40216a:	xchg   edx,eax
  40216b:	stos   BYTE PTR es:[edi],al
  40216c:	sub    eax,0xa3f39515
  402171:	cdq    
  402172:	inc    esi
  402173:	jg     0x402165
  402175:	cmp    eax,0x72987f1a
  40217a:	push   es
  40217b:	inc    esp
  40217c:	and    eax,0x533da533
  402181:	call   0xd906:0x3438a8d6
  402188:	xor    edi,edx
  40218a:	inc    ebx
  40218b:	test   DWORD PTR [edi-0x2d4dc067],edi
  402191:	pop    esp
  402192:	outs   dx,DWORD PTR ds:[esi]
  402193:	leave  
  402194:	in     al,dx
  402195:	rcl    edx,0x14
  402198:	daa    
  402199:	add    edx,DWORD PTR [ecx+0x6c42458f]
  40219f:	loop   0x4021b5
  4021a1:	cmp    al,0x7a
  4021a3:	mov    esi,0xd3fa5c05
  4021a8:	iret   
  4021a9:	iret   
  4021aa:	jp     0x4021f2
  4021ac:	shl    BYTE PTR [edx-0x5658befe],1
  4021b2:	xor    edi,0xd44116b7
  4021b8:	sub    DWORD PTR [ebp-0x40],eax
  4021bb:	adc    ch,BYTE PTR [edx-0x79847c94]
  4021c1:	sub    DWORD PTR ds:0x5781eaaa,ebp
  4021c7:	sahf   
  4021c8:	sbb    esp,esi
  4021ca:	cdq    
  4021cb:	and    esp,esi
  4021cd:	mov    al,ds:0x5643ed68
  4021d2:	add    al,0xd6
  4021d4:	jp     0x402172
  4021d6:	stc    
  4021d7:	xchg   DWORD PTR [edx-0x46],ebx
  4021da:	stos   BYTE PTR es:[edi],al
  4021db:	mov    ds:0x65879545,eax
  4021e0:	gs stos BYTE PTR es:[edi],al
  4021e2:	inc    ebp
  4021e3:	and    al,0xc6
  4021e5:	and    al,0xaa
  4021e7:	mov    dl,0x9c
  4021e9:	outs   dx,DWORD PTR ds:[esi]
  4021ea:	sti    
  4021eb:	sti    
  4021ec:	ss jne 0x40221c
  4021ef:	idiv   DWORD PTR ds:0x26b9de00
  4021f5:	scas   eax,DWORD PTR es:[edi]
  4021f6:	les    eax,FWORD PTR [edx+ebp*4]
  4021f9:	inc    eax
  4021fa:	push   ebp
  4021fb:	cwde   
  4021fc:	clc    
  4021fd:	xchg   edi,eax
  4021fe:	dec    edx
  4021ff:	jns    0x402233
  402201:	jge    0x4021fe
  402203:	push   edx
  402204:	xor    DWORD PTR [ecx-0x45],ebp
  402207:	fwait
  402208:	xchg   esp,eax
  402209:	lds    ebp,FWORD PTR [esi+0x41]
  40220c:	xchg   ecx,eax
  40220d:	or     edx,esp
  40220f:	or     eax,0xaaacf2f
  402214:	ret    0xd6d4
  402217:	std    
  402218:	sbb    al,0x84
  40221a:	(bad)
  40221d:	jle    0x402225
  40221f:	and    BYTE PTR [ebx],al
  402221:	pop    ebp
  402222:	pusha  
  402223:	xchg   ebx,eax
  402224:	out    0x4e,eax
  402226:	cli    
  402227:	ins    DWORD PTR es:[edi],dx
  402228:	test   DWORD PTR [edi],ebp
  40222a:	pop    ss
  40222b:	out    0xc1,eax
  40222d:	xchg   di,ax
  40222f:	call   0xe8faa401
  402234:	xchg   ebp,ebx
  402236:	ins    DWORD PTR es:[edi],dx
  402237:	scas   al,BYTE PTR es:[edi]
  402238:	push   ecx
  402239:	retf   
  40223a:	dec    ebx
  40223b:	jp     0x40222c
  40223d:	dec    ecx
  40223e:	cmp    eax,0xb93a84d5
  402243:	jnp    0x40222c
  402245:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402246:	sbb    al,0x46
  402248:	cmp    dl,BYTE PTR [esi-0x79]
  40224b:	pop    esp
  40224c:	(bad)
  40224f:	or     eax,edi
  402251:	aam    0xe3
  402253:	jno    0x402232
  402255:	or     DWORD PTR [ecx],edi
  402257:	gs nop
  402259:	in     al,dx
  40225a:	sbb    ebx,edi
  40225c:	test   DWORD PTR [esi+0xe],ecx
  40225f:	push   edx
  402260:	repnz inc esi
  402262:	cli    
  402263:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402264:	pop    es
  402265:	xlat   BYTE PTR ds:[ebx]
  402266:	nop
  402267:	xor    eax,0xf1fa47f0
  40226c:	(bad)  
  40226d:	inc    ecx
  40226e:	xlat   BYTE PTR ds:[ebx]
  40226f:	mov    WORD PTR [edi-0x1e],ds
  402272:	mov    ah,BYTE PTR [edi]
  402274:	scas   al,BYTE PTR es:[edi]
  402275:	sbb    ah,BYTE PTR [ebp+0x43]
  402278:	mov    ds,WORD PTR [esi]
  40227a:	or     DWORD PTR [edi-0x4d8adbe5],0xc7237c59
  402284:	retf   
  402285:	and    al,0xa5
  402287:	mov    cs,WORD PTR [esi]
  402289:	mov    eax,0x164a9c17
  40228e:	sti    
  40228f:	jle    0x4022b0
  402291:	xor    eax,0x1177a105
  402296:	xlat   BYTE PTR ds:[ebx]
  402297:	out    0xe4,al
  402299:	leave  
  40229a:	jecxz  0x4022a1
  40229c:	cmp    bh,BYTE PTR [ebx]
  40229e:	fwait
  40229f:	mov    al,ds:0xcf05f536
  4022a4:	(bad)  
  4022a5:	imul   esp,DWORD PTR [edx+0x68bd1557],0x25943c5b
  4022af:	mov    ah,0x16
  4022b1:	mov    eax,0x9fe0651c
  4022b6:	push   edi
  4022b7:	stos   BYTE PTR es:[edi],al
  4022b8:	into   
  4022b9:	clc    
  4022ba:	jge    0x402267
  4022bc:	in     al,dx
  4022bd:	sub    dl,bl
  4022bf:	mov    WORD PTR [ecx],gs
  4022c1:	inc    eax
  4022c2:	aad    0xc8
  4022c4:	sbb    bl,BYTE PTR [ebx+0x4f467cbc]
  4022ca:	dec    eax
  4022cb:	pop    esp
  4022cc:	loope  0x4022ab
  4022ce:	jg     0x4022a5
  4022d0:	pop    ds
  4022d1:	sar    DWORD PTR [ecx-0x10],cl
  4022d4:	cmp    BYTE PTR [ebp+0x3e],0xad
  4022d8:	mov    edi,0xc7b805fd
  4022dd:	push   ss
  4022de:	ret    0x4891
  4022e1:	or     ebx,DWORD PTR [ebx-0x5a]
  4022e4:	mov    ch,ah
  4022e6:	add    ebp,DWORD PTR [eax+0x15]
  4022e9:	inc    edi
  4022ea:	stos   BYTE PTR es:[edi],al
  4022eb:	rcl    BYTE PTR [edi+0x4105ed4],1
  4022f1:	push   0xcefd1be7
  4022f6:	imul   edi,DWORD PTR [ebp-0x3a],0x19d950e1
  4022fd:	pop    edx
  4022fe:	dec    ebp
  4022ff:	in     eax,dx
  402300:	pop    ebx
  402301:	ja     0x4022ac
  402303:	jg     0x402329
  402305:	aaa    
  402306:	sub    esp,DWORD PTR [edi+edi*8-0x1a]
  40230a:	xor    esp,ecx
  40230c:	mov    eax,0x1e915bab
  402311:	jne    0x4022a9
  402313:	dec    edi
  402314:	pop    ss
  402315:	mov    al,dh
  402317:	cmp    eax,0x12d74b1f
  40231c:	mov    dh,0x9b
  40231e:	push   0xbeb11d69
  402323:	aas    
  402324:	mul    BYTE PTR [ebx+0x76f166da]
  40232a:	(bad)  [ebx]
  40232c:	add    DWORD PTR ss:[ecx+edi*8+0x3223d11a],ebp
  402334:	jmp    0x402322
  402336:	sub    BYTE PTR [ecx],dh
  402338:	mov    dh,0x8e
  40233a:	xchg   DWORD PTR [eax],ecx
  40233c:	popf   
  40233d:	add    DWORD PTR [ecx-0x26],edi
  402340:	xor    BYTE PTR cs:[esi+0x1ef68e74],dh
  402347:	jp     0x402373
  402349:	icebp  
  40234a:	jg     0x4023a2
  40234c:	add    eax,0xda095968
  402351:	mov    ebx,0x1a32d1b9
  402356:	push   esi
  402357:	cld    
  402358:	arpl   WORD PTR [esi],bp
  40235a:	cmp    BYTE PTR [edi],0x72
  40235d:	xchg   esi,eax
  40235e:	mov    dl,0xbe
  402360:	fcom   QWORD PTR [ebx]
  402362:	jmp    0x5545edf0
  402367:	cmc    
  402368:	sti    
  402369:	lods   al,BYTE PTR ds:[esi]
  40236a:	adc    dl,BYTE PTR es:[eax+0x71]
  40236e:	out    dx,al
  40236f:	hlt    
  402370:	clc    
  402371:	int3   
  402372:	inc    esi
  402373:	xchg   esi,eax
  402374:	aas    
  402375:	rol    BYTE PTR gs:[ebx-0xf],cl
  402379:	sub    DWORD PTR [edx],esp
  40237b:	xor    DWORD PTR [ecx],esi
  40237d:	xlat   BYTE PTR ds:[ebx]
  40237e:	inc    eax
  40237f:	out    dx,al
  402380:	push   ecx
  402381:	mov    dl,cl
  402383:	imul   ebp,DWORD PTR [esi],0xffffffb4
  402386:	or     al,0xc0
  402388:	mov    ebx,0xf07a47ef
  40238d:	sbb    al,bh
  40238f:	push   eax
  402390:	out    dx,eax
  402391:	jle    0x40237e
  402393:	test   esp,edx
  402395:	mov    esi,0xa0134985
  40239a:	pop    ecx
  40239b:	fcomp  QWORD PTR [edx+0x3af3a610]
  4023a1:	daa    
  4023a2:	test   al,0xb8
  4023a4:	stc    
  4023a5:	push   ecx
  4023a6:	push   cs
  4023a7:	pushf  
  4023a8:	(bad)  
  4023a9:	stos   DWORD PTR es:[edi],eax
  4023aa:	aam    0x10
  4023ac:	lahf   
  4023ad:	call   0x4a3b:0xd9d77378
  4023b4:	call   0xa04ed76d
  4023b9:	inc    ebp
  4023ba:	add    BYTE PTR [eax+0x3270623d],al
  4023c0:	js     0x402392
  4023c2:	sub    al,0xa9
  4023c4:	cwde   
  4023c5:	mov    ds:0xf9cd45eb,al
  4023ca:	ret    
  4023cb:	jnp    0x4023d9
  4023cd:	cld    
  4023ce:	mov    ?,edx
  4023d0:	inc    ecx
  4023d1:	int3   
  4023d2:	sub    ebx,ecx
  4023d4:	xor    al,0x89
  4023d6:	fisttp WORD PTR [esp+eax*2-0x72]
  4023da:	lds    edx,FWORD PTR [eax]
  4023dc:	inc    edi
  4023dd:	xchg   esi,eax
  4023de:	jbe    0x4023e3
  4023e0:	std    
  4023e1:	out    dx,al
  4023e2:	cmp    al,0x13
  4023e4:	aas    
  4023e5:	cld    
  4023e6:	or     eax,DWORD PTR [ebx-0x71152ddf]
  4023ec:	mov    WORD PTR [ebx-0xdae548f],ss
  4023f2:	add    BYTE PTR cs:0x80ea94f0,bl
  4023f9:	pop    ebx
  4023fa:	(bad)  
  4023fb:	sbb    al,0x60
  4023fd:	test   eax,0xd0818c63
  402402:	rcr    BYTE PTR [ebp+0x4d],0x70
  402406:	sti    
  402407:	dec    ebp
  402408:	jl     0x4023ef
  40240a:	sti    
  40240b:	lds    ebp,FWORD PTR [edi]
  40240d:	push   eax
  40240e:	data16 mov al,ds:0x3dfcc589
  402414:	arpl   WORD PTR [ecx+0xb],cx
  402417:	push   esi
  402418:	and    eax,0x36a9004
  40241d:	(bad)  
  40241e:	cmp    ecx,edx
  402420:	jae    0x402821
  402426:	lea    edx,[ecx-0x300b]
  40242c:	mov    edi,edx
  40242e:	xor    edi,eax
  402430:	add    edi,DWORD PTR [ebp+0x8]
  402433:	inc    ecx
  402434:	mov    DWORD PTR [ebp+ecx*4-0x60],edi
  402438:	mov    edi,DWORD PTR [ebp+0x8]
  40243b:	xor    edi,eax
  40243d:	add    edi,esi
  40243f:	inc    edx
  402440:	cmp    ecx,edi
  402442:	jmp    0x40281b
  402447:	les    eax,FWORD PTR [edi-0x12945695]
  40244d:	(bad)  
  40244e:	out    dx,eax
  40244f:	xor    eax,0xa26d9ecb
  402454:	clc    
  402455:	imul   esp,DWORD PTR [edi+0x4240],0xffffffbc
  40245c:	add    eax,DWORD PTR [eax]
  40245e:	add    BYTE PTR [eax-0x70],bl
  402461:	lods   al,BYTE PTR ds:[esi]
  402462:	mov    edi,0x2c843299
  402467:	call   0xe7c86937
  40246c:	in     eax,0xe5
  40246e:	ret    0xe767
  402471:	lahf   
  402472:	push   ecx
  402473:	and    ebx,DWORD PTR [ebx]
  402475:	sahf   
  402476:	cmp    al,0xda
  402478:	rol    BYTE PTR [ebp+0x32],1
  40247b:	pop    es
  40247c:	adc    eax,0xfb67081c
  402481:	mov    esi,0xba60f02e
  402486:	test   DWORD PTR [edi],ebp
  402488:	rol    BYTE PTR [edi+eiz*4+0x14d49913],cl
  40248f:	stos   DWORD PTR es:[edi],eax
  402490:	nop
  402491:	dec    edi
  402492:	loope  0x4024a6
  402494:	add    BYTE PTR [ebp-0x7b774ac],ah
  40249a:	stos   DWORD PTR es:[edi],eax
  40249b:	call   0x25bbeb56
  4024a0:	adc    bl,dl
  4024a2:	cmp    dl,bh
  4024a4:	std    
  4024a5:	pop    ebp
  4024a6:	push   0x8b69fd
  4024ab:	mov    esi,0xbffcf8b9
  4024b0:	adc    ah,ah
  4024b2:	push   ebx
  4024b3:	je     0x4024df
  4024b5:	loope  0x4024d0
  4024b7:	(bad)
  4024ba:	adc    eax,0x259d9a96
  4024bf:	jae    0x402461
  4024c1:	mov    ebx,0xe37c938f
  4024c6:	cwde   
  4024c7:	and    BYTE PTR [edi],cl
  4024c9:	dec    ebx
  4024ca:	adc    DWORD PTR [ebx],esp
  4024cc:	pop    ebp
  4024cd:	out    dx,al
  4024ce:	sub    al,0x2
  4024d0:	sbb    BYTE PTR [eax+eax*4+0x26036bf],ch
  4024d7:	and    DWORD PTR [esp+ecx*2-0x54b5bff6],0xaeb051bf
  4024e2:	pushf  
  4024e3:	adc    al,BYTE PTR ds:0x940e7563
  4024e9:	cmp    bl,BYTE PTR [edi]
  4024eb:	call   0x6c06:0xbb8acca0
  4024f2:	xchg   esi,eax
  4024f3:	push   cs
  4024f4:	add    BYTE PTR [esp+esi*1],bh
  4024f7:	pop    ds
  4024f8:	call   0x6b88:0xfba6bee9
  4024ff:	xchg   ebx,eax
  402500:	mov    cl,0xa
  402502:	push   cs
  402503:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402504:	repz adc ah,BYTE PTR [ecx]
  402507:	ror    DWORD PTR [esp+ebx*2+0x7c0c9d38],0xd2
  40250f:	cwde   
  402510:	mov    esp,DWORD PTR [edx+edi*2+0x1a]
  402514:	add    eax,0xffcaa6cf
  402519:	mov    ds:0xd9facc7a,eax
  40251e:	mov    edi,0x40f49917
  402523:	(bad)  
  402524:	fnstcw WORD PTR [eax+0x6c]
  402527:	xor    BYTE PTR [ecx-0x63],ch
  40252a:	pop    ss
  40252b:	jbe    0x402551
  40252d:	sti    
  40252e:	in     al,dx
  40252f:	lahf   
  402530:	mov    dl,0xa1
  402532:	jl     0x402579
  402534:	and    edi,DWORD PTR [ecx+0x4e82ff05]
  40253a:	fsub   QWORD PTR [edi]
  40253c:	adc    eax,0x91a3973c
  402541:	ret    0xb568
  402544:	cmp    BYTE PTR [ebx-0x3a],ch
  402547:	jnp    0x4025b3
  402549:	dec    edi
  40254a:	loope  0x402534
  40254c:	mov    ds:0x42518557,eax
  402551:	xchg   DWORD PTR [edx],edi
  402553:	shl    DWORD PTR [ebp+esi*4+0x484d0bb1],cl
  40255a:	fst    DWORD PTR [esi+ecx*2+0x54]
  40255e:	push   0x496f9f23
  402563:	scas   eax,DWORD PTR es:[edi]
  402564:	aaa    
  402565:	xchg   esi,eax
  402566:	icebp  
  402567:	xlat   BYTE PTR ds:[ebx]
  402568:	ins    BYTE PTR es:[edi],dx
  402569:	xor    esi,DWORD PTR [edi]
  40256b:	loopne 0x40250c
  40256d:	sbb    ch,BYTE PTR [esi-0x43]
  402570:	fwait
  402571:	cld    
  402572:	mov    cl,0xa0
  402574:	xchg   edx,eax
  402575:	arpl   di,sp
  402577:	popa   
  402578:	lds    eax,FWORD PTR [edi+esi*1+0x1155e246]
  40257f:	inc    ebx
  402580:	dec    edx
  402581:	std    
  402582:	imul   edx,DWORD PTR [eax-0x66],0xfffffff0
  402586:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402587:	adc    edi,DWORD PTR [ecx+0x65cd806]
  40258d:	loope  0x40259b
  40258f:	sub    eax,0x24880cbd
  402594:	sub    al,0x72
  402596:	pop    eax
  402597:	mov    esi,0x603e9067
  40259c:	(bad)  
  40259d:	arpl   WORD PTR [eax-0x50a69d47],bp
  4025a3:	add    DWORD PTR [si],ebx
  4025a6:	xchg   ecx,eax
  4025a7:	or     BYTE PTR [ebx],bl
  4025a9:	ret    
  4025aa:	es cld 
  4025ac:	pop    ds
  4025ad:	and    dl,bl
  4025af:	das    
  4025b0:	iret   
  4025b1:	dec    ecx
  4025b2:	adc    DWORD PTR [eax+ecx*1-0x7598715],edx
  4025b9:	in     eax,dx
  4025ba:	jle    0x402578
  4025bc:	(bad)  
  4025bd:	(bad)
  4025c0:	retf   0x8e41
  4025c3:	mov    esp,0x60c8cd14
  4025c8:	add    BYTE PTR [ecx],bl
  4025ca:	mov    eax,ds:0x3ad321e0
  4025cf:	loop   0x402609
  4025d1:	push   ebx
  4025d2:	mov    bl,0xb1
  4025d4:	mov    cl,0x7
  4025d6:	sbb    DWORD PTR [edi-0x65],eax
  4025d9:	shr    al,1
  4025db:	jmp    0xc095:0x9cb58a8d
  4025e2:	jbe    0x4025e9
  4025e4:	punpcklwd mm1,mm2
  4025e7:	mov    edx,0x7ed3b22a
  4025ec:	iret   
  4025ed:	mov    edi,DWORD PTR [esi-0x45c47f27]
  4025f3:	pop    ebx
  4025f4:	and    eax,0xf0f7ac96
  4025f9:	pop    edx
  4025fa:	ss mov bh,0x95
  4025fd:	js     0x402674
  4025ff:	test   BYTE PTR [ebp-0x13332cc6],bh
  402605:	or     BYTE PTR [ecx+0x4d75b2bc],bh
  40260b:	leave  
  40260c:	xor    DWORD PTR [eax+0x21],ebp
  40260f:	mov    edx,0x6789355c
  402614:	out    0x85,al
  402616:	shl    BYTE PTR [esi+ebp*4],0x60
  40261a:	xor    BYTE PTR [edx-0x68],0x73
  40261e:	push   ds
  40261f:	in     al,dx
  402620:	sbb    eax,0xf4f1e695
  402625:	jae    0x4025ee
  402627:	dec    edi
  402628:	cmp    ebx,DWORD PTR [eax+0x629e0a6a]
  40262e:	push   edi
  40262f:	adc    DWORD PTR [esi],edx
  402631:	jbe    0x402693
  402633:	dec    ebp
  402634:	sbb    esi,esi
  402636:	popf   
  402637:	ins    BYTE PTR es:[edi],dx
  402638:	loopne 0x40260c
  40263a:	push   ss
  40263b:	xchg   ecx,eax
  40263c:	lds    esp,FWORD PTR [eax-0x3a]
  40263f:	cmp    ebx,ebx
  402641:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402642:	ret    0x8e84
  402645:	jb     0x40263c
  402647:	mov    al,ds:0x8b5f4d28
  40264c:	mov    ebp,0xe14879aa
  402651:	push   ds
  402652:	jg     0x402628
  402654:	lods   al,BYTE PTR ds:[esi]
  402655:	add    BYTE PTR [ecx],0x3a
  402658:	or     al,0x6f
  40265a:	sahf   
  40265b:	ins    BYTE PTR es:[edi],dx
  40265c:	int    0xc5
  40265e:	jp     0x402692
  402660:	js     0x402630
  402662:	push   ds
  402663:	dec    ebx
  402664:	jnp    0x4026b0
  402666:	outs   dx,DWORD PTR ds:[esi]
  402667:	arpl   bp,sp
  402669:	mov    ch,bl
  40266b:	and    al,0x19
  40266d:	mov    ebx,0xcf739b0
  402672:	xchg   edi,eax
  402673:	retf   
  402674:	cmp    ecx,DWORD PTR [ecx]
  402676:	jnp    0x4025fe
  402678:	(bad)  
  402679:	in     eax,0x5a
  40267b:	dec    ebp
  40267c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40267d:	xchg   esp,eax
  40267e:	jb     0x402659
  402680:	retf   0x5016
  402683:	jp     0x402648
  402685:	push   ebx
  402686:	in     eax,0x7e
  402688:	mov    ds:0x93e28e64,eax
  40268d:	repnz in al,0x52
  402690:	idiv   ebp
  402692:	call   0x6a8882b0
  402697:	add    edi,DWORD PTR [ebx]
  402699:	jnp    0x40269a
  40269b:	cmp    al,0xba
  40269d:	fsub   DWORD PTR [ebp+eax*1-0x4e]
  4026a1:	pop    esp
  4026a2:	pop    ebp
  4026a3:	pop    ebp
  4026a4:	dec    esp
  4026a5:	push   es
  4026a6:	mov    esi,es
  4026a8:	adc    al,bl
  4026aa:	jmp    0xfa7e6b78
  4026af:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4026b0:	fdivp  st(7),st
  4026b2:	add    eax,0x74a0b049
  4026b7:	sti    
  4026b8:	fbstp  TBYTE PTR [edx]
  4026ba:	mov    ebp,0x4933f1c2
  4026bf:	dec    esp
  4026c0:	arpl   WORD PTR [edx+0x44],ax
  4026c3:	ret    
  4026c4:	test   esp,edi
  4026c6:	lahf   
  4026c7:	or     eax,ebx
  4026c9:	sbb    bh,cl
  4026cb:	sbb    DWORD PTR [ecx+0x7ca3e19b],ecx
  4026d1:	cld    
  4026d2:	mov    bl,0x64
  4026d4:	rcl    BYTE PTR [eax+edi*8-0x13],0xc
  4026d9:	push   ds
  4026da:	cmp    eax,0x8c077c95
  4026df:	or     DWORD PTR [edi+0x3ee42f7e],ebx
  4026e5:	sbb    cl,ah
  4026e7:	sub    BYTE PTR [ecx-0x1c3b8039],bh
  4026ed:	inc    ecx
  4026ee:	inc    esp
  4026ef:	loop   0x4026c4
  4026f1:	in     eax,dx
  4026f2:	or     eax,0x898578ba
  4026f7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4026f8:	adc    eax,0x615ad177
  4026fd:	push   ebp
  4026fe:	pop    esp
  4026ff:	cwde   
  402700:	loop   0x402765
  402702:	popa   
  402703:	add    esi,DWORD PTR [eax]
  402705:	(bad)  
  402706:	xlat   BYTE PTR ds:[ebx]
  402707:	sti    
  402708:	fstp   TBYTE PTR [eax-0x38c2438a]
  40270e:	jmp    0x21be0da6
  402713:	add    eax,0xef70c6fe
  402718:	out    0x34,al
  40271a:	popf   
  40271b:	lahf   
  40271c:	aam    0x65
  40271e:	call   0x522bdba1
  402723:	cmp    eax,0xa504cf5
  402728:	stc    
  402729:	jg     0x4026c9
  40272b:	stos   DWORD PTR es:[edi],eax
  40272c:	add    dh,BYTE PTR [edi-0x3a33f457]
  402732:	test   BYTE PTR [edi],bh
  402734:	pop    es
  402735:	xchg   esp,eax
  402736:	cmc    
  402737:	mov    al,0xb8
  402739:	jb     0x40271a
  40273b:	(bad)  
  40273c:	pop    eax
  40273d:	sub    dh,bl
  40273f:	loop   0x4026d6
  402741:	or     DWORD PTR [ebx+0x1da9f3e9],eax
  402747:	mov    WORD PTR [ebx+0x4a089d12],cs
  40274d:	mov    ds:0xbdbc88fb,al
  402752:	add    al,0xd5
  402754:	mov    ebp,DWORD PTR [eax-0x2a664795]
  40275a:	jbe    0x402783
  40275c:	push   eax
  40275d:	arpl   WORD PTR [ebx+0x51],bp
  402760:	xchg   edx,eax
  402761:	cmc    
  402762:	xchg   BYTE PTR [esi],ah
  402764:	mov    esp,0xe1b0de7d
  402769:	test   DWORD PTR [ebp-0x7e93d301],edi
  40276f:	xor    eax,0xb660ebd6
  402774:	pop    esi
  402775:	popf   
  402776:	popa   
  402777:	adc    ecx,DWORD PTR [ebp-0x5]
  40277a:	int3   
  40277b:	sbb    BYTE PTR [edx],ah
  40277d:	adc    BYTE PTR [esi],ah
  40277f:	mov    eax,ds:0x2b96e180
  402784:	inc    edi
  402785:	dec    ebp
  402786:	push   ebx
  402787:	fstp   QWORD PTR ds:0x4b4923bf
  40278d:	mov    cl,0x68
  40278f:	lds    edi,FWORD PTR [edi+0x3247c27c]
  402795:	mov    eax,DWORD PTR [ecx]
  402797:	retf   0x2f9c
  40279a:	cdq    
  40279b:	jmp    0x4027c0
  40279d:	cwde   
  40279e:	in     eax,dx
  40279f:	and    dh,0x1c
  4027a2:	leave  
  4027a3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4027a4:	and    BYTE PTR [ebx],al
  4027a6:	mov    ecx,0x74a7b6fb
  4027ab:	pusha  
  4027ac:	mov    esi,0x57e1ef0
  4027b1:	in     eax,dx
  4027b2:	gs jb  0x402828
  4027b5:	cmp    BYTE PTR [ebx+edi*2-0x3e],0x77
  4027ba:	push   0x8f966e3a
  4027bf:	push   ds
  4027c0:	repz xchg esp,eax
  4027c2:	out    dx,eax
  4027c3:	lods   al,BYTE PTR ds:[esi]
  4027c4:	ja     0x402747
  4027c6:	imul   ebp,ecx,0x462dcc02
  4027cc:	add    eax,edx
  4027ce:	fsub   DWORD PTR [edx]
  4027d0:	lds    edi,FWORD PTR [esi-0x3b177e94]
  4027d6:	retf   
  4027d7:	sub    ebp,DWORD PTR [eax-0x72]
  4027da:	sub    BYTE PTR gs:[ebp-0x2804b279],bl
  4027e1:	mov    eax,ds:0xad40d5d4
  4027e6:	leave  
  4027e7:	cmc    
  4027e8:	int    0x20
  4027ea:	dec    edx
  4027eb:	ret    
  4027ec:	dec    esi
  4027ed:	xchg   ebp,eax
  4027ee:	jae    0x402803
  4027f0:	ss pop esi
  4027f2:	(bad)  
  4027f3:	hlt    
  4027f4:	and    ebp,edx
  4027f6:	xchg   ebx,eax
  4027f7:	dec    eax
  4027f8:	mov    al,0xf3
  4027fa:	(bad)  
  4027fb:	pop    ds
  4027fc:	jg     0x4027ae
  4027fe:	lahf   
  4027ff:	cli    
  402800:	pusha  
  402801:	pop    esp
  402802:	or     al,0x51
  402804:	add    al,0x77
  402806:	mov    ebx,0xea1ed841
  40280b:	mov    eax,0xc2bfb82f
  402810:	in     al,0x77
  402812:	sub    eax,0xa3702a78
  402817:	xor    al,0x5f
  402819:	xor    edi,DWORD PTR [esi]
  40281b:	jb     0x40242c
  402821:	mov    ecx,DWORD PTR [ebp-0xc]
  402824:	mov    cl,BYTE PTR [ebp+ecx*1-0x9c]
  40282b:	mov    dl,BYTE PTR [ebp-0x1]
  40282e:	cmp    cl,dl
  402830:	je     0x4030a7
  402836:	mov    ecx,DWORD PTR [ebp-0x8]
  402839:	mov    edx,DWORD PTR [ebp+0x8]
  40283c:	xor    ecx,eax
  40283e:	xor    edx,eax
  402840:	add    ecx,esi
  402842:	add    edx,esi
  402844:	cmp    ecx,edx
  402846:	jae    0x40286f
  40284c:	lea    edi,[ecx-0x300b]
  402852:	lea    edx,[ebp+ecx*4-0x5c]
  402856:	mov    ebx,DWORD PTR [edx]
  402858:	xor    ebx,edi
  40285a:	xor    ebx,eax
  40285c:	mov    DWORD PTR [edx],ebx
  40285e:	mov    edx,DWORD PTR [ebp+0x8]
  402861:	xor    edx,eax
  402863:	inc    ecx
  402864:	add    edx,esi
  402866:	inc    edi
  402867:	cmp    ecx,edx
  402869:	jb     0x402852
  40286f:	mov    ecx,DWORD PTR [ebp-0xc]
  402872:	mov    cl,BYTE PTR [ebp+ecx*1-0x9c]
  402879:	mov    edx,DWORD PTR [ebp+0xc]
  40287c:	cmp    cl,BYTE PTR [edx]
  40287e:	mov    ecx,DWORD PTR [ebp-0x8]
  402881:	jne    0x4030c1
  402887:	mov    edx,DWORD PTR [ebp+0xc]
  40288a:	movsx  edx,BYTE PTR [edx]
  40288d:	xor    ecx,eax
  40288f:	add    ecx,esi
  402891:	cmp    edx,ecx
  402893:	mov    ecx,DWORD PTR [ebp-0x8]
  402896:	mov    edx,DWORD PTR [ebp+0x8]
  402899:	je     0x403c90
  40289f:	xor    ecx,eax
  4028a1:	xor    edx,eax
  4028a3:	add    ecx,esi
  4028a5:	add    edx,esi
  4028a7:	cmp    ecx,edx
  4028a9:	jae    0x4030a7
  4028af:	lea    edx,[ecx-0x300b]
  4028b5:	mov    DWORD PTR [ebp-0x10],edx
  4028b8:	mov    edi,DWORD PTR [ebp-0x10]
  4028bb:	mov    DWORD PTR [ebp-0x1c],0x870861
  4028c2:	lea    edx,[ebp-0x1c]
  4028c5:	mov    DWORD PTR [ebp-0x14],edx
  4028c8:	mov    edx,DWORD PTR [ebp-0x14]
  4028cb:	jmp    0x402ca4
  4028d0:	xchg   BYTE PTR [edi-0x40d4ccd5],ah
  4028d6:	sahf   
  4028d7:	mov    bh,0xd3
  4028d9:	push   es
  4028da:	fcmovnbe st,st(3)
  4028dc:	xchg   esp,eax
  4028dd:	sti    
  4028de:	popf   
  4028df:	sar    esp,cl
  4028e1:	inc    ebp
  4028e2:	add    BYTE PTR [eax],al
  4028e4:	mov    esp,0xc8000003
  4028e9:	inc    esi
  4028ea:	and    bh,BYTE PTR [ebx]
  4028ec:	jbe    0x402895
  4028ee:	and    ebx,DWORD PTR [ebx+0x1a]
  4028f1:	call   FWORD PTR [ecx+ebx*1+0x12]
  4028f5:	fsub   st(0),st
  4028f7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4028f8:	ins    BYTE PTR es:[edi],dx
  4028f9:	lea    ecx,[eax]
  4028fb:	cmp    dl,cl
  4028fd:	stc    
  4028fe:	sahf   
  4028ff:	mov    dh,0x1d
  402901:	mov    al,BYTE PTR [eax]
  402903:	adc    al,0x6
  402905:	clc    
  402906:	xchg   edi,eax
  402907:	retf   0x9b7e
  40290a:	pusha  
  40290b:	std    
  40290c:	call   0x3dab:0x233b0c5d
  402913:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402914:	dec    ebx
  402915:	ss dec esi
  402917:	push   esp
  402918:	inc    esi
  402919:	out    0xa1,eax
  40291b:	xor    eax,0x578fbe41
  402920:	mov    BYTE PTR [ecx-0x5],bl
  402923:	and    ah,ch
  402925:	pop    es
  402926:	mov    ds:0xf5d2c1cc,al
  40292b:	mov    BYTE PTR [ecx-0x6a84649a],bl
  402931:	pop    DWORD PTR [esi-0xfda266]
  402937:	loop   0x402944
  402939:	jns    0x402919
  40293b:	hlt    
  40293c:	lods   al,BYTE PTR ds:[esi]
  40293d:	scas   eax,DWORD PTR es:[edi]
  40293e:	xor    esp,DWORD PTR [esp+ebx*4-0x1e]
  402942:	pop    edx
  402943:	jo     0x402931
  402945:	sub    dh,BYTE PTR [ecx+0x1a901fe1]
  40294b:	rol    DWORD PTR [ecx+0x2d],1
  40294e:	add    ah,ch
  402950:	sbb    dl,cl
  402952:	fs jns 0x402966
  402955:	add    eax,0x4dd54712
  40295a:	cs sub al,0x48
  40295d:	addr16 push esp
  40295f:	adc    eax,0xe2519d4d
  402964:	rcr    DWORD PTR [ebx+ecx*8-0x6e66da12],1
  40296b:	push   ecx
  40296c:	loope  0x40295b
  40296e:	leave  
  40296f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402970:	lods   eax,DWORD PTR ds:[esi]
  402971:	pop    es
  402972:	xor    BYTE PTR [esi-0x70864c6f],ch
  402978:	sub    bl,al
  40297a:	cmps   DWORD PTR es:[esi],DWORD PTR es:[edi]
  40297c:	sbb    BYTE PTR [eax-0x39cb3e10],ah
  402982:	push   0x893b1270
  402987:	fld    QWORD PTR [edx+ebx*4-0x56]
  40298b:	sahf   
  40298c:	call   0xe999:0x9cc35dcf
  402993:	aam    0xce
  402995:	xor    eax,0x39894952
  40299a:	mov    WORD PTR [esi-0x5e],ds
  40299d:	sbb    DWORD PTR [ecx-0x38ef6df7],0x1d15d54f
  4029a7:	jb     0x402929
  4029a9:	and    eax,0xfcf0bc2d
  4029ae:	adc    eax,0x7c93adf1
  4029b3:	xor    edi,ebx
  4029b5:	lods   al,BYTE PTR ds:[esi]
  4029b6:	ins    BYTE PTR es:[edi],dx
  4029b7:	jne    0x4029ef
  4029b9:	mov    edi,0x7fdf42bf
  4029be:	loope  0x4029f3
  4029c0:	jo     0x40295b
  4029c2:	jge    0x40299e
  4029c4:	mov    ds:0xdb189b6d,al
  4029c9:	(bad)  
  4029ca:	shl    DWORD PTR [ebx+0x74213d29],cl
  4029d0:	jmp    0x4029fe
  4029d2:	ficomp DWORD PTR [ecx+0x451af6e6]
  4029d8:	sub    eax,0x71e6368c
  4029dd:	sub    eax,0x64b15b2c
  4029e2:	xlat   BYTE PTR ds:[ebx]
  4029e3:	dec    edi
  4029e4:	add    DWORD PTR [ebx+eiz*4],edi
  4029e7:	cmp    cl,BYTE PTR [ebx+eiz*4+0x7236cdd]
  4029ee:	test   BYTE PTR gs:[ecx+0x1f],0xa7
  4029f3:	sahf   
  4029f4:	mov    ah,0x54
  4029f6:	jmp    0x7281a887
  4029fb:	mov    eax,ds:0x6ad681da
  402a00:	add    eax,DWORD PTR [ebx]
  402a02:	fild   WORD PTR [ebp+0x1c338435]
  402a08:	outs   dx,DWORD PTR fs:[esi]
  402a0a:	xlat   BYTE PTR ds:[ebx]
  402a0b:	inc    ebx
  402a0c:	jnp    0x4029c1
  402a0e:	jl     0x4029fe
  402a10:	sub    eax,0xe9f67a47
  402a15:	shl    DWORD PTR [edx-0x5e],cl
  402a18:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402a19:	pushf  
  402a1a:	mov    ss,WORD PTR [edi+eiz*1+0x67]
  402a1e:	pop    ds
  402a1f:	pop    esp
  402a20:	jae    0x402a86
  402a22:	inc    ebx
  402a23:	fsub   DWORD PTR ds:0xfd0e
  402a28:	mov    al,ds:0xc00af30d
  402a2d:	in     eax,dx
  402a2e:	jnp    0x4029b0
  402a30:	xlat   BYTE PTR ds:[ebx]
  402a31:	retf   0x28bb
  402a34:	adc    bl,BYTE PTR ds:0x77cb61ed
  402a3a:	ret    0xc00e
  402a3d:	arpl   WORD PTR [eax+0x45],bx
  402a40:	add    al,0x56
  402a42:	ficomp WORD PTR [esi+0xf4820bf]
  402a48:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402a49:	xchg   esi,eax
  402a4a:	int    0x1b
  402a4c:	mov    dl,0x79
  402a4e:	ins    BYTE PTR es:[edi],dx
  402a4f:	or     BYTE PTR [esi+0x26],0x2b
  402a53:	inc    edi
  402a54:	jp     0x402a75
  402a56:	pop    ds
  402a57:	jmp    0x14cb:0x7b3035ae
  402a5e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402a5f:	pop    ebp
  402a60:	sub    al,0xbb
  402a62:	repz lock or bl,BYTE PTR [ecx]
  402a66:	mov    dl,BYTE PTR [ebx+0x1d]
  402a69:	and    DWORD PTR [ebp-0x5e6002cf],esp
  402a6f:	clc    
  402a70:	(bad)  
  402a71:	mov    al,ds:0x2b88f836
  402a76:	lods   al,BYTE PTR ds:[esi]
  402a77:	test   DWORD PTR [esp+eax*1-0x4a],ebp
  402a7b:	call   0x5268:0x7423f4bc
  402a82:	adc    bh,bl
  402a84:	out    0x1,al
  402a86:	(bad)  
  402a87:	mov    ebp,0x8f8111a
  402a8c:	jmp    0x9e2310a0
  402a91:	mov    cl,0x4d
  402a93:	dec    edi
  402a94:	xor    BYTE PTR [edx-0x27],bl
  402a97:	out    dx,al
  402a98:	ror    DWORD PTR [edi+0x18],1
  402a9b:	stc    
  402a9c:	mov    ecx,DWORD PTR [esp+eax*8-0x64]
  402aa0:	int3   
  402aa1:	push   ss
  402aa2:	pop    edi
  402aa3:	xchg   ebp,eax
  402aa4:	rcl    DWORD PTR ds:0x3a0d2f1c,0xc9
  402aab:	ret    0xcb51
  402aae:	or     BYTE PTR [edx],cl
  402ab0:	jecxz  0x402ab2
  402ab2:	mov    esi,0x38fd4856
  402ab7:	in     al,0x30
  402ab9:	xor    al,0x69
  402abb:	mov    ecx,0x987f9074
  402ac0:	loop   0x402ae2
  402ac2:	mov    ebp,0xb2f65dc7
  402ac7:	xchg   esp,eax
  402ac8:	mov    bl,0x5a
  402aca:	js     0x402b0c
  402acc:	call   0x455:0xb269905e
  402ad3:	cmps   BYTE PTR es:[esi],BYTE PTR es:[edi]
  402ad5:	sti    
  402ad6:	push   0xffffffbc
  402ad8:	sti    
  402ad9:	xlat   BYTE PTR ds:[ebx]
  402ada:	aam    0xa9
  402adc:	inc    eax
  402add:	jge    0x402a82
  402adf:	jbe    0x402a94
  402ae1:	pop    esi
  402ae2:	inc    ebp
  402ae3:	sbb    esp,DWORD PTR [ebx]
  402ae5:	adc    dl,BYTE PTR [edi+ebp*8+0x725a5bb6]
  402aec:	pushf  
  402aed:	add    ch,BYTE PTR [edx+0x6b]
  402af0:	sub    eax,0x25771f17
  402af5:	xor    al,0x4b
  402af7:	arpl   WORD PTR [ebp+0x3860de52],cx
  402afd:	jo     0x402b13
  402aff:	and    ecx,DWORD PTR [ebx-0x1d]
  402b02:	lea    edx,[edi]
  402b04:	loope  0x402b47
  402b06:	jp     0x402a9c
  402b08:	retf   0x2489
  402b0b:	js     0x402a92
  402b0d:	shl    BYTE PTR [ebx],1
  402b0f:	les    ebp,FWORD PTR [ebx+ecx*2+0xd]
  402b13:	inc    esi
  402b14:	mov    BYTE PTR [ebp+eax*2-0x72],bh
  402b18:	(bad)  
  402b19:	mov    edi,0xa3aa4879
  402b1e:	push   es
  402b1f:	xchg   esp,eax
  402b20:	pop    es
  402b21:	mov    ebp,DWORD PTR [ecx]
  402b23:	xlat   BYTE PTR ds:[ebx]
  402b24:	inc    eax
  402b25:	mov    bl,0x42
  402b27:	fldenv [esp+esi*8-0x22]
  402b2b:	sbb    DWORD PTR [ecx+0x17f57164],ebx
  402b31:	jmp    0x402aeb
  402b33:	mov    cl,0x3a
  402b35:	mov    WORD PTR [esi+0x41baa48c],fs
  402b3b:	mov    ecx,0x27651674
  402b40:	and    BYTE PTR [edi-0x6b],al
  402b43:	sub    BYTE PTR [edi],ah
  402b45:	add    al,0xb3
  402b47:	loopne 0x402b63
  402b49:	add    ah,0x6d
  402b4c:	dec    ecx
  402b4d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402b4e:	mov    ebp,0xc5bf8afa
  402b53:	sbb    BYTE PTR [ebx+0x18],0xf9
  402b57:	mov    dl,0xe9
  402b59:	outs   dx,DWORD PTR ds:[esi]
  402b5a:	cwde   
  402b5b:	pop    ebx
  402b5c:	push   edx
  402b5d:	hlt    
  402b5e:	and    esp,DWORD PTR [edi+ebp*1-0x2e]
  402b62:	inc    eax
  402b63:	mov    bl,0xb6
  402b65:	xor    eax,0xb04590cb
  402b6a:	shl    BYTE PTR [ecx+ebx*1],1
  402b6d:	or     BYTE PTR [ecx],bl
  402b6f:	add    al,0x7e
  402b71:	cli    
  402b72:	xor    ecx,DWORD PTR [esi]
  402b74:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402b75:	pusha  
  402b76:	xor    BYTE PTR [eax-0x5f],bh
  402b79:	push   edi
  402b7a:	or     bh,BYTE PTR [eax]
  402b7c:	into   
  402b7d:	jmp    0x402bdc
  402b7f:	dec    esp
  402b80:	push   edi
  402b81:	mov    ds:0x7850ef3b,al
  402b86:	xchg   edx,eax
  402b87:	enter  0x8e1f,0x90
  402b8b:	adc    al,0x98
  402b8d:	xchg   ebp,eax
  402b8e:	jg     0x402b98
  402b90:	(bad)  
  402b91:	push   ss
  402b92:	ins    DWORD PTR es:[edi],dx
  402b93:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402b94:	xor    edx,DWORD PTR [ebx]
  402b96:	and    bh,BYTE PTR [esi-0x2da46ebd]
  402b9c:	push   ss
  402b9d:	cmp    eax,0x7c93eba7
  402ba2:	pop    es
  402ba3:	daa    
  402ba4:	add    eax,0xd5459d8c
  402ba9:	xchg   edx,eax
  402baa:	call   0x7407fcfa
  402baf:	outs   dx,DWORD PTR ds:[esi]
  402bb0:	bound  ebp,QWORD PTR [ebp-0x2764a1c5]
  402bb6:	ficomp DWORD PTR [eax]
  402bb8:	push   eax
  402bb9:	aas    
  402bba:	pop    edx
  402bbb:	fnstenv fs:[eax]
  402bbe:	out    dx,al
  402bbf:	lods   al,BYTE PTR ds:[esi]
  402bc0:	xlat   BYTE PTR ds:[ebx]
  402bc1:	inc    eax
  402bc2:	xchg   edi,eax
  402bc3:	mov    esp,0xb154050
  402bc8:	ins    BYTE PTR es:[edi],dx
  402bc9:	aas    
  402bca:	mov    ah,0xee
  402bcc:	xchg   BYTE PTR [edx-0x17],al
  402bcf:	test   BYTE PTR [edx],dl
  402bd1:	jno    0x402c4e
  402bd3:	imul   ebx,ebx,0x9729154d
  402bd9:	add    DWORD PTR [esi],ecx
  402bdb:	fst    st(2)
  402bdd:	aam    0x38
  402bdf:	ficomp DWORD PTR [ebx+0x11b4bff1]
  402be5:	adc    eax,0xe55ed4e7
  402bea:	out    0xe1,al
  402bec:	add    esp,0x7
  402bef:	loopne 0x402b89
  402bf1:	mov    dh,0x30
  402bf3:	xchg   BYTE PTR [ebp+0x4],dh
  402bf6:	pop    es
  402bf7:	call   0xdcb7:0xdb112d42
  402bfe:	inc    ecx
  402bff:	dec    esi
  402c00:	and    eax,0xd0642bd6
  402c05:	xor    ah,ah
  402c07:	mov    edx,0xfd34124e
  402c0c:	cdq    
  402c0d:	stos   DWORD PTR es:[edi],eax
  402c0e:	ficomp WORD PTR [edi+0x3]
  402c11:	das    
  402c12:	mov    dh,0x7e
  402c14:	xor    DWORD PTR [ebx-0x55602bf5],edi
  402c1a:	and    al,0xc7
  402c1c:	mov    bl,0x34
  402c1e:	and    DWORD PTR [edx-0x46],0xa636d7ca
  402c25:	imul   esp,DWORD PTR [edi-0x5a],0xffffff8d
  402c29:	and    edi,ebx
  402c2b:	loop   0x402bc1
  402c2d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402c2e:	int3   
  402c2f:	push   ds
  402c30:	int3   
  402c31:	mov    edi,0x1cb1b691
  402c36:	dec    ecx
  402c37:	fcmove st,st(2)
  402c39:	retf   0x76d4
  402c3c:	cmp    eax,esi
  402c3e:	cmp    al,BYTE PTR [edi+0x3a]
  402c41:	aad    0xd7
  402c43:	aam    0x7b
  402c45:	imul   eax,DWORD PTR [ebx],0xd78e3399
  402c4b:	loope  0x402cb4
  402c4d:	popa   
  402c4e:	cwde   
  402c4f:	xor    al,0xe
  402c51:	pop    ebp
  402c52:	rcl    BYTE PTR [ecx-0x3ae61a4e],0x70
  402c59:	int    0xb9
  402c5b:	out    dx,al
  402c5c:	clc    
  402c5d:	aad    0xa4
  402c5f:	mov    ebp,0xe7a1d7a1
  402c64:	inc    esi
  402c65:	mov    bl,0x93
  402c67:	jo     0x402cce
  402c69:	das    
  402c6a:	les    ebp,FWORD PTR [edx-0x6ca935a1]
  402c70:	out    dx,eax
  402c71:	ror    dh,cl
  402c73:	xchg   BYTE PTR [esi],bh
  402c75:	pop    es
  402c76:	and    esi,DWORD PTR [esi]
  402c78:	push   ds
  402c79:	mov    ebx,0xe8458e1d
  402c7e:	add    ecx,ebp
  402c80:	adc    DWORD PTR ds:0x6c055c23,edx
  402c86:	sub    DWORD PTR [edx+0x4c],ebp
  402c89:	push   0xffffffff
  402c8b:	fwait
  402c8c:	push   ebx
  402c8e:	mov    ebx,0xf75b09ad
  402c93:	mov    edx,0x389d21e
  402c98:	daa    
  402c99:	mov    esi,0xb746836c
  402c9e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402c9f:	inc    ecx
  402ca0:	rcl    DWORD PTR [ecx*8+0x6102819e],cl
  402ca7:	add    eax,0x5d8b0087
  402cac:	in     al,dx
  402cad:	xor    edi,eax
  402caf:	add    edi,DWORD PTR [ebx]
  402cb1:	lea    edx,[ebp+ecx*4-0x5c]
  402cb5:	mov    ebx,DWORD PTR [edx]
  402cb7:	jmp    0x403090
  402cbc:	out    dx,eax
  402cbd:	dec    edx
  402cbe:	hlt    
  402cbf:	mov    esi,0x5befbef5
  402cc4:	dec    esi
  402cc5:	ins    DWORD PTR es:[edi],dx
  402cc6:	ret    0x7c5f
  402cc9:	ds mov dl,0x56
  402ccc:	mov    eax,0xbc000049
  402cd1:	add    eax,DWORD PTR [eax]
  402cd3:	add    BYTE PTR [ebp-0x2def9dc2],ch
  402cd9:	and    ebp,DWORD PTR [eax]
  402cdb:	cmp    DWORD PTR [ebp-0x2b],ebx
  402cde:	sub    DWORD PTR [esp+eax*4],ebx
  402ce1:	stos   BYTE PTR es:[edi],al
  402ce2:	dec    esi
  402ce3:	xchg   ecx,eax
  402ce4:	jl     0x402cd9
  402ce6:	jne    0x402d45
  402ce8:	ins    DWORD PTR es:[edi],dx
  402ce9:	mov    edi,0xe61cb7e3
  402cee:	fisubr WORD PTR [ebp+0x57]
  402cf1:	mov    ds:0x8be51c98,eax
  402cf6:	lods   eax,DWORD PTR es:[esi]
  402cf8:	mov    dl,0x49
  402cfa:	and    DWORD PTR [edi],edx
  402cfc:	rol    BYTE PTR fs:[eax+0x2bedfb59],1
  402d03:	aam    0xb4
  402d05:	sar    bl,1
  402d07:	lods   al,BYTE PTR ds:[esi]
  402d08:	mov    cl,0x4a
  402d0a:	mov    BYTE PTR [edx],ch
  402d0c:	inc    edi
  402d0d:	in     al,dx
  402d0e:	and    cl,bl
  402d10:	mov    ds:0x55c4f84a,al
  402d15:	cmp    eax,0xe0dc8295
  402d1a:	push   ebx
  402d1b:	ret    
  402d1c:	adc    bh,al
  402d1e:	lock (bad) 
  402d20:	push   edi
  402d21:	mov    esp,0xf869865f
  402d26:	imul   ebx,DWORD PTR [eax],0xffffffa2
  402d29:	test   BYTE PTR [edi],dl
  402d2b:	add    al,0x36
  402d2d:	sahf   
  402d2e:	sub    al,0xc3
  402d30:	mov    ecx,0xef5a7b97
  402d35:	aaa    
  402d36:	xchg   edx,eax
  402d37:	mov    ecx,0x9f92b9d1
  402d3c:	scas   eax,DWORD PTR es:[edi]
  402d3d:	sub    BYTE PTR [eax],ah
  402d3f:	push   ds
  402d40:	addr16 sbb eax,0xb91028ce
  402d46:	loopne 0x402d04
  402d48:	xchg   ebp,eax
  402d49:	mov    ch,BYTE PTR [ecx+0x70]
  402d4c:	(bad)  
  402d4d:	jno    0x402cd7
  402d4f:	shl    BYTE PTR [ebp+0x72],1
  402d52:	scas   al,BYTE PTR es:[edi]
  402d53:	jnp    0x402dba
  402d55:	stc    
  402d56:	or     eax,0xe9645ac3
  402d5b:	xor    eax,0xf9c915f2
  402d60:	fstp   TBYTE PTR [ecx]
  402d62:	out    dx,al
  402d63:	add    BYTE PTR [edi+0xd563f67],al
  402d69:	pop    eax
  402d6a:	adc    BYTE PTR [edi+0x6daa174d],al
  402d70:	ins    DWORD PTR es:[edi],dx
  402d71:	rcr    DWORD PTR [esi+esi*4-0x165aeba1],1
  402d78:	imul   ecx,DWORD PTR [edx+0x60],0x61
  402d7c:	out    0xa4,al
  402d7e:	or     eax,0x4ee991b
  402d83:	or     eax,0xd4b35e2
  402d88:	dec    ebx
  402d89:	fiadd  DWORD PTR ds:0x28f71318
  402d8f:	inc    ecx
  402d90:	test   DWORD PTR [ebx+0x73],edx
  402d93:	es fsub st(4),st
  402d96:	(bad)  
  402d97:	shl    bl,cl
  402d99:	and    BYTE PTR [esi+0x62ec65e2],al
  402d9f:	dec    ebx
  402da0:	pop    ss
  402da1:	add    BYTE PTR [ebp+ebx*1-0x7f],ah
  402da5:	out    0x38,eax
  402da7:	jo     0x402d4e
  402da9:	cld    
  402daa:	int    0xb6
  402dac:	push   0xffffffb4
  402dae:	mov    edx,0x18575c2d
  402db3:	xor    DWORD PTR [esp+eax*8-0x3182c73f],0xffffffa1
  402dbb:	pop    ecx
  402dbc:	push   ds
  402dbd:	test   eax,0x9fbe76c8
  402dc2:	test   DWORD PTR [ecx+0x274c4622],ebp
  402dc8:	or     esi,0x1c
  402dcb:	inc    ebx
  402dcc:	or     al,BYTE PTR [eax]
  402dce:	test   eax,0xdc70dc7f
  402dd3:	dec    ecx
  402dd4:	pop    ss
  402dd5:	mov    bh,0xa5
  402dd7:	shr    esp,cl
  402dd9:	or     edi,DWORD PTR [edi-0x6c]
  402ddc:	push   cs
  402ddd:	ret    0x1b94
  402de0:	jo     0x402e55
  402de2:	push   ecx
  402de3:	cmp    eax,0xe6a80249
  402de8:	add    DWORD PTR [eax+0x6396d812],edi
  402dee:	sti    
  402def:	into   
  402df0:	fdivr  QWORD PTR [edi]
  402df2:	in     al,dx
  402df3:	repnz push eax
  402df6:	test   eax,0xd35595cd
  402dfb:	mov    DWORD PTR [ebx+ebx*2],edi
  402dfe:	in     eax,0xef
  402e00:	lods   eax,DWORD PTR ds:[esi]
  402e01:	scas   al,BYTE PTR es:[edi]
  402e02:	ficom  WORD PTR [edx+0x79]
  402e05:	add    al,0x29
  402e07:	jb     0x402e81
  402e09:	leave  
  402e0a:	mov    ecx,0x2e208a0e
  402e0f:	push   esp
  402e10:	pop    es
  402e11:	enter  0xb4e,0xc8
  402e15:	add    edi,DWORD PTR [edx]
  402e17:	test   DWORD PTR [edx-0x37],ecx
  402e1a:	cmp    esp,ecx
  402e1c:	mov    WORD PTR [ecx],gs
  402e1e:	inc    ebp
  402e1f:	scas   al,BYTE PTR es:[edi]
  402e20:	or     dh,BYTE PTR [eax+0x17]
  402e23:	sub    edi,DWORD PTR [edi+0x78a98b6a]
  402e29:	xchg   edi,eax
  402e2a:	test   al,0x9d
  402e2c:	xchg   ebp,eax
  402e2d:	adc    eax,0x12c12841
  402e32:	cmp    al,BYTE PTR [ecx]
  402e34:	adc    DWORD PTR [edi-0x19a18b19],eax
  402e3a:	in     eax,0x40
  402e3c:	mov    esi,DWORD PTR [eax+0x51fffd04]
  402e42:	adc    al,0x43
  402e44:	test   DWORD PTR [edx+0x53ffedb0],ebx
  402e4a:	or     ebp,esi
  402e4c:	clc    
  402e4d:	inc    esp
  402e4e:	mov    dl,0x53
  402e50:	mov    bl,0x38
  402e52:	xchg   ebp,eax
  402e53:	mov    ch,0x8b
  402e55:	int3   
  402e56:	inc    ebp
  402e57:	inc    ebx
  402e58:	arpl   dx,cx
  402e5a:	ficomp WORD PTR [eax]
  402e5c:	jmp    0x70bd:0x12539b43
  402e63:	nop
  402e64:	cmp    bh,BYTE PTR ds:[eax]
  402e67:	xchg   ebp,eax
  402e68:	mov    ds:0x664c5994,al
  402e6d:	loop   0x402e1c
  402e6f:	(bad)  
  402e70:	jb     0x402e92
  402e72:	aam    0x12
  402e74:	mov    dl,0x3b
  402e76:	ret    
  402e77:	cld    
  402e78:	test   eax,0xf74ab32f
  402e7d:	jg     0x402e93
  402e7f:	out    0x6c,al
  402e81:	or     bl,BYTE PTR [esi-0x7f115434]
  402e87:	(bad)  
  402e88:	and    dl,BYTE PTR [eax+ebp*2-0x2f]
  402e8c:	(bad)  
  402e8d:	fwait
  402e8e:	imul   esp,esi,0x6d2cd533
  402e94:	jne    0x402e36
  402e96:	adc    eax,DWORD PTR [ebx-0x4ed29812]
  402e9c:	and    al,0x92
  402e9e:	and    al,0x2
  402ea0:	cmp    BYTE PTR [ebx],dl
  402ea2:	sti    
  402ea3:	xor    eax,0xa904e8c3
  402ea8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402ea9:	push   esp
  402eaa:	jb     0x402eae
  402eac:	pop    edx
  402ead:	icebp  
  402eae:	icebp  
  402eaf:	jmp    0x6651:0x8fb9920c
  402eb6:	adc    eax,0x30801c43
  402ebb:	rol    esp,cl
  402ebd:	sbb    DWORD PTR [ebx+0x10d36f],edx
  402ec3:	cmp    ebp,DWORD PTR ds:0xa253472c
  402ec9:	fld    TBYTE PTR [edx]
  402ecb:	test   ah,al
  402ecd:	pop    eax
  402ece:	mov    eax,ds:0x3a9fd0e9
  402ed3:	sub    BYTE PTR [ebp+0x351cbf3],0x2b
  402eda:	push   es
  402edb:	dec    ebp
  402edc:	push   eax
  402edd:	in     eax,0x22
  402edf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402ee0:	dec    esp
  402ee1:	jg     0x402ed6
  402ee3:	push   0x19486f93
  402ee8:	pop    ebp
  402ee9:	test   DWORD PTR [esi-0x6b],esp
  402eec:	mov    esi,DWORD PTR [edx-0x13]
  402eef:	outs   dx,DWORD PTR ds:[esi]
  402ef0:	scas   al,BYTE PTR es:[edi]
  402ef1:	push   esp
  402ef2:	sbb    eax,0x77a11339
  402ef7:	push   0x62
  402ef9:	and    al,0x94
  402efb:	or     al,dh
  402efd:	adc    eax,DWORD PTR [esi+eax*8+0x5ecc66d9]
  402f04:	adc    edi,DWORD PTR [edi+0x2811c27a]
  402f0a:	pop    ecx
  402f0b:	inc    esi
  402f0c:	mov    fs,WORD PTR [edx+0x1183adc2]
  402f12:	in     al,0xf3
  402f14:	mov    ebx,0x150b9c3
  402f19:	xchg   DWORD PTR [ebp+0x2c],eax
  402f1c:	mov    eax,0x38e33779
  402f21:	jge    0x402ec2
  402f23:	jmp    0x402f38
  402f25:	(bad)  
  402f26:	push   0xffffffa8
  402f28:	pop    esp
  402f29:	in     al,0x33
  402f2b:	sbb    bl,BYTE PTR [ebx+ebx*4-0x43]
  402f2f:	test   BYTE PTR [ebp-0x6],dl
  402f32:	icebp  
  402f33:	mov    bl,0xe7
  402f35:	(bad)  
  402f36:	sub    ch,dh
  402f38:	xor    al,0x37
  402f3a:	jl     0x402f2b
  402f3c:	mov    bh,0x4c
  402f3e:	aaa    
  402f3f:	(bad)  
  402f40:	cmp    dh,cl
  402f42:	or     al,bl
  402f44:	add    al,0x49
  402f46:	icebp  
  402f47:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402f48:	mov    ebp,0xa2659a41
  402f4d:	scas   al,BYTE PTR es:[edi]
  402f4e:	into   
  402f4f:	push   eax
  402f50:	cmp    ah,BYTE PTR ds:0xff002be5
  402f56:	cmp    BYTE PTR [eax+0x50c95786],bh
  402f5c:	fmul   st,st(7)
  402f5e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402f5f:	jmp    0x402f18
  402f61:	test   al,0x4e
  402f63:	mov    edi,0x736d0483
  402f68:	push   es
  402f69:	addr16 dec ebx
  402f6b:	fld    QWORD PTR [esp+ebp*8]
  402f6e:	(bad)  
  402f70:	xchg   esp,eax
  402f71:	mov    ecx,0x2753d55f
  402f76:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402f77:	xor    ah,bh
  402f79:	xchg   edx,eax
  402f7a:	xchg   esp,eax
  402f7b:	pop    ds
  402f7c:	outs   dx,DWORD PTR ds:[esi]
  402f7d:	push   ecx
  402f7e:	cmp    al,0xba
  402f80:	mov    DWORD PTR [esi],ebx
  402f82:	les    ebp,FWORD PTR [ebx+0x1f83975f]
  402f88:	fdivrp st(4),st
  402f8a:	cmc    
  402f8b:	pop    esi
  402f8c:	clc    
  402f8d:	sub    esp,edi
  402f8f:	jmp    0x6c487449
  402f94:	rol    edi,0x50
  402f97:	test   dh,0xd9
  402f9a:	sub    edx,DWORD PTR ds:0x9f3d5a67
  402fa0:	push   ecx
  402fa1:	mov    ebx,DWORD PTR [edx-0x67026702]
  402fa7:	in     eax,0xfc
  402fa9:	inc    esi
  402faa:	(bad)  
  402fab:	lea    eax,[ebx-0x63]
  402fae:	xlat   BYTE PTR ds:[ebx]
  402faf:	add    DWORD PTR ds:0xafe0ff63,esp
  402fb5:	cli    
  402fb6:	jne    0x402fdd
  402fb8:	test   eax,0x7badcb3d
  402fbd:	push   ebp
  402fbe:	inc    esi
  402fbf:	mov    al,ds:0x88a97b22
  402fc4:	pop    esp
  402fc5:	fild   QWORD PTR [ecx+0x147427a4]
  402fcb:	cmp    dh,BYTE PTR [edx+0x5f]
  402fce:	sub    eax,0xff2df9a2
  402fd3:	inc    edi
  402fd4:	cmp    eax,0xd2c028a6
  402fd9:	push   eax
  402fda:	ret    0x82d1
  402fdd:	mov    esi,DWORD PTR [edx]
  402fdf:	imul   DWORD PTR [ecx]
  402fe1:	xchg   esi,eax
  402fe2:	pop    ss
  402fe3:	cmp    dh,BYTE PTR [edx-0x3a]
  402fe6:	push   ecx
  402fe7:	adc    ecx,esp
  402fe9:	push   0xffffff9b
  402feb:	popa   
  402fec:	stc    
  402fed:	xchg   BYTE PTR [edx-0x73],al
  402ff0:	lock js 0x403035
  402ff3:	jmp    0xae93f627
  402ff8:	sbb    ecx,0xffffffb1
  402ffb:	lock lods al,BYTE PTR ds:[esi]
  402ffd:	and    dl,BYTE PTR [edx+ebx*4+0x731d6f4]
  403004:	add    BYTE PTR [esi+0x7a85260f],cl
  40300a:	mov    bl,0xc0
  40300c:	(bad)  
  40300d:	gs popf 
  40300f:	sbb    ebx,0xd12c3241
  403015:	sbb    edx,ebx
  403017:	or     esi,ecx
  403019:	mov    dl,0x26
  40301b:	add    BYTE PTR [esi+0x15],0x7e
  40301f:	popa   
  403020:	and    bh,BYTE PTR [edi+0x40415113]
  403026:	sub    BYTE PTR [eax-0x4d],bl
  403029:	test   DWORD PTR [edi],edi
  40302b:	mov    ebp,0x623425b3
  403030:	mov    dh,0x24
  403032:	xchg   bx,ax
  403034:	scas   eax,DWORD PTR es:[edi]
  403035:	push   ss
  403036:	jne    0x402fcd
  403038:	cmc    
  403039:	xor    edi,ebp
  40303b:	fcom   DWORD PTR fs:[edx]
  40303e:	lahf   
  40303f:	in     al,dx
  403040:	mov    ebx,0x82745611
  403045:	adc    BYTE PTR [edi-0x60],cl
  403048:	sub    DWORD PTR [eax+0x37],edx
  40304b:	pop    edx
  40304c:	jge    0x403099
  40304e:	and    al,0x5
  403050:	aaa    
  403051:	aas    
  403052:	dec    esp
  403053:	lods   eax,DWORD PTR ds:[esi]
  403054:	mov    bp,0x2ab1
  403058:	xor    al,0xc0
  40305a:	mov    ds:0x3157c017,eax
  40305f:	pop    esp
  403060:	in     al,dx
  403061:	lods   al,BYTE PTR ds:[esi]
  403062:	mov    esi,0xfd364faa
  403067:	xlat   BYTE PTR es:[ebx]
  403069:	outs   dx,BYTE PTR ds:[esi]
  40306a:	add    ecx,ebx
  40306c:	xor    al,BYTE PTR [edi]
  40306e:	and    BYTE PTR [ecx],ah
  403070:	pop    esi
  403071:	mov    ebx,0x3a12db28
  403076:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403077:	std    
  403078:	daa    
  403079:	outs   dx,DWORD PTR ds:[esi]
  40307a:	push   edi
  40307b:	mov    ?,esi
  40307d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40307e:	and    DWORD PTR [ebp+0x3c],edx
  403081:	(bad)  
  403082:	pusha  
  403083:	and    ch,BYTE PTR [ebx]
  403085:	in     al,0x84
  403087:	int3   
  403088:	mov    bh,0xc6
  40308a:	in     al,0x87
  40308c:	sahf   
  40308d:	pop    ebp
  40308e:	mov    dh,0x10
  403090:	xor    edi,ebx
  403092:	mov    DWORD PTR [edx],edi
  403094:	mov    edx,DWORD PTR [ebp+0x8]
  403097:	xor    edx,eax
  403099:	inc    ecx
  40309a:	inc    DWORD PTR [ebp-0x10]
  40309d:	add    edx,esi
  40309f:	cmp    ecx,edx
  4030a1:	jb     0x4028b8
  4030a7:	mov    ecx,DWORD PTR [ebp-0x18]
  4030aa:	mov    edx,DWORD PTR [ebp-0xc]
  4030ad:	xor    ecx,eax
  4030af:	lea    ecx,[ecx+edx*1+0x300b]
  4030b6:	mov    DWORD PTR [ebp-0xc],ecx
  4030b9:	inc    DWORD PTR [ebp+0xc]
  4030bc:	jmp    0x402037
  4030c1:	mov    edx,DWORD PTR [ebp+0x8]
  4030c4:	jmp    0x40349d
  4030c9:	cmp    cl,BYTE PTR [edx-0x28]
  4030cc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4030cd:	clc    
  4030ce:	mov    dh,0x7e
  4030d0:	fidivr WORD PTR [eax-0x457c0088]
  4030d6:	xor    al,dl
  4030d8:	sbb    esi,DWORD PTR [ebp+ecx*2+0x0]
  4030dc:	add    BYTE PTR [ebx+eax*1+0x720f0000],bh
  4030e3:	pop    edx
  4030e4:	into   
  4030e5:	dec    edi
  4030e6:	sub    dl,ah
  4030e8:	into   
  4030e9:	sbb    eax,0x357aed1
  4030ee:	mov    edi,cr0
  4030f1:	ja     0x4030c5
  4030f3:	ret    
  4030f4:	not    edx
  4030f6:	xor    bh,bh
  4030f8:	add    al,0x70
  4030fa:	sbb    eax,0x562daf3e
  4030ff:	fldlg2 
  403101:	aaa    
  403102:	or     al,0x2d
  403104:	dec    ebx
  403105:	(bad)  
  403106:	xor    dl,dl
  403108:	test   eax,0xdece5570
  40310d:	inc    BYTE PTR [esi-0x400a5f49]
  403113:	jb     0x4030c2
  403115:	xor    al,0xb3
  403117:	mov    eax,ds:0x870a3b72
  40311c:	pop    esp
  40311d:	sub    DWORD PTR [ebp+0x4a6ce632],esi
  403123:	inc    eax
  403124:	(bad)
  403127:	or     al,0xb4
  403129:	lods   al,BYTE PTR ds:[esi]
  40312a:	outs   dx,BYTE PTR ds:[esi]
  40312b:	jne    0x40314d
  40312d:	jbe    0x403129
  40312f:	push   edi
  403130:	fld    DWORD PTR [esi+edx*8]
  403133:	xchg   ecx,eax
  403134:	push   esp
  403135:	adc    esp,DWORD PTR [edi+0x4c]
  403138:	mov    ds,edx
  40313a:	and    dl,ch
  40313c:	out    dx,al
  40313d:	not    DWORD PTR [ecx-0xf]
  403140:	cmp    dh,BYTE PTR [edi-0x18]
  403143:	add    eax,0x7bf74488
  403148:	inc    ecx
  403149:	mov    ?,WORD PTR ds:0xa700
  40314e:	ins    BYTE PTR es:[edi],dx
  40314f:	in     eax,0x4e
  403151:	lahf   
  403152:	sbb    esp,DWORD PTR [edi]
  403154:	repnz sub BYTE PTR [esi+0x54],bh
  403158:	adc    BYTE PTR gs:[edi+eax*1],ah
  40315c:	popa   
  40315d:	in     eax,0xf7
  40315f:	leave  
  403160:	test   DWORD PTR [di+0x3a],ebx
  403164:	xchg   ebx,eax
  403165:	xchg   DWORD PTR [eax],edx
  403167:	sbb    al,0x77
  403169:	xchg   edx,eax
  40316a:	pop    edi
  40316b:	push   0x67a29522
  403170:	aaa    
  403171:	sbb    BYTE PTR [edi+0x341e981e],ch
  403177:	loope  0x403114
  403179:	and    al,0x5a
  40317b:	mov    ebx,0xc989a82c
  403180:	jmp    0x8b13:0xe35edde7
  403187:	call   0xe987:0xb4968310
  40318e:	test   eax,0x47f05a1e
  403193:	dec    edx
  403194:	xchg   ebp,eax
  403195:	fcomp  st(5)
  403197:	ds test al,ah
  40319a:	test   esi,edx
  40319c:	or     eax,0xf7a3bf61
  4031a1:	mov    ebp,0x6d15d6f7
  4031a6:	loopne 0x4031a3
  4031a8:	pop    ss
  4031a9:	push   ebx
  4031aa:	gs inc edx
  4031ac:	jnp    0x403159
  4031ae:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4031af:	(bad)
  4031b3:	mov    bh,0xbf
  4031b5:	mov    bh,0x95
  4031b7:	sub    cl,BYTE PTR [ecx]
  4031b9:	ds mov ch,0xb1
  4031bc:	dec    eax
  4031bd:	fisttp WORD PTR [ecx-0x65]
  4031c0:	stos   BYTE PTR es:[edi],al
  4031c1:	sub    ecx,DWORD PTR [edx]
  4031c3:	jne    0x403168
  4031c5:	mov    cl,0x26
  4031c7:	dec    ecx
  4031c8:	sbb    eax,0xddd9d90b
  4031cd:	dec    edi
  4031ce:	lea    ebp,[ecx+0x5c4fa855]
  4031d4:	push   edx
  4031d5:	sub    al,BYTE PTR [edx-0x23]
  4031d8:	and    DWORD PTR [ebp-0x16],esp
  4031db:	fsub   QWORD PTR [ecx-0x3f]
  4031de:	cmp    DWORD PTR [edi],edi
  4031e0:	and    al,0x46
  4031e2:	cld    
  4031e3:	mov    WORD PTR [edi+0x47],fs
  4031e6:	out    0xb0,al
  4031e8:	xchg   ecx,eax
  4031e9:	dec    ebx
  4031ea:	into   
  4031eb:	gs mov ebp,0x669055e9
  4031f1:	pop    esi
  4031f2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4031f3:	adc    esi,DWORD PTR [ecx-0x73]
  4031f6:	jg     0x403256
  4031f8:	test   BYTE PTR [edx+0x2c],bl
  4031fb:	dec    esp
  4031fc:	retf   0x754e
  4031ff:	mov    ?,WORD PTR [ecx-0x63]
  403202:	adc    al,0x75
  403204:	and    eax,0x39e5dd59
  403209:	stc    
  40320a:	mov    dl,0x4d
  40320c:	add    ch,BYTE PTR [edx+ebp*8+0x6f]
  403210:	sbb    ebx,DWORD PTR [edx-0x4d]
  403213:	loope  0x403271
  403215:	clc    
  403216:	or     BYTE PTR [ebx+0x810fdae],dh
  40321c:	add    BYTE PTR [ebx-0x2b],ah
  40321f:	xchg   ebp,eax
  403220:	xchg   esp,eax
  403221:	sub    edi,ecx
  403223:	cmp    BYTE PTR [esi],bh
  403225:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403226:	in     al,dx
  403227:	inc    ecx
  403228:	mov    al,ds:0x5e56ac59
  40322d:	adc    eax,0x6d3818d3
  403232:	cmp    esi,ebp
  403234:	stos   BYTE PTR es:[edi],al
  403235:	cli    
  403236:	xchg   esp,eax
  403237:	cli    
  403238:	pop    esi
  403239:	ret    
  40323a:	pusha  
  40323b:	xor    DWORD PTR [eax+0x4d3e5769],edx
  403241:	pusha  
  403242:	pop    ss
  403243:	dec    ebp
  403244:	iret   
  403245:	in     al,dx
  403246:	sub    edi,DWORD PTR [ebx-0x591850d0]
  40324c:	push   ss
  40324d:	sub    DWORD PTR ds:0x98ac31dd,esi
  403253:	(bad)  
  403254:	xor    DWORD PTR [ebx],ebp
  403256:	xchg   esi,eax
  403257:	xchg   edx,eax
  403258:	jmp    0x403240
  40325a:	shl    ebp,0x89
  40325d:	and    eax,ebx
  40325f:	jg     0x403279
  403261:	jg     0x4032a7
  403263:	cmp    bl,BYTE PTR [edx+0x437b9da3]
  403269:	mov    ds:0x7d8556e2,eax
  40326e:	jo     0x4032e4
  403270:	xchg   esp,eax
  403271:	cmp    esi,esi
  403273:	mov    dh,0x6a
  403275:	xor    al,0x49
  403278:	nop
  403279:	je     0x40325d
  40327b:	mov    dh,0xa0
  40327d:	jecxz  0x40323c
  40327f:	sub    eax,0x1826a6a6
  403284:	mov    BYTE PTR [edx+ebx*4+0x201197f7],cl
  40328b:	or     BYTE PTR [eax+ecx*8-0x6f],0x3
  403290:	std    
  403291:	dec    edx
  403292:	mov    dl,0x7f
  403294:	lds    ebp,FWORD PTR ds:0x3a69f02f
  40329a:	popf   
  40329b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40329c:	mov    bl,0x7
  40329e:	es add al,0x27
  4032a1:	shr    DWORD PTR [ebp+0x42],0x6c
  4032a5:	push   es
  4032a6:	xchg   bh,bh
  4032a8:	push   0x509a87d8
  4032ad:	mov    edi,0x73a88d09
  4032b2:	or     al,0x7b
  4032b4:	jmp    FWORD PTR [esi-0x77164f34]
  4032ba:	pop    esp
  4032bb:	sub    DWORD PTR [eax],0xe8b98db1
  4032c1:	add    al,0x33
  4032c3:	rcl    DWORD PTR [ecx+0x3a],0xb2
  4032c7:	jae    0x40326f
  4032c9:	mov    eax,ds:0x5e6e5c27
  4032ce:	in     al,0xe1
  4032d0:	jo     0x40334b
  4032d2:	and    ah,BYTE PTR [ecx-0x18d41b07]
  4032d8:	in     al,0xe5
  4032da:	and    al,0xf0
  4032dc:	enter  0xae9,0xc
  4032e0:	dec    esp
  4032e1:	mov    edx,0x16c9c2c9
  4032e6:	ss mov dh,0x48
  4032e9:	xchg   BYTE PTR [ebx],ah
  4032eb:	sti    
  4032ec:	pusha  
  4032ed:	push   ss
  4032ee:	cwde   
  4032ef:	xor    esi,DWORD PTR [ecx]
  4032f1:	jecxz  0x4032f0
  4032f3:	or     dh,BYTE PTR [eax-0x3]
  4032f6:	retf   0x336b
  4032f9:	loop   0x4032b3
  4032fb:	int    0xdd
  4032fd:	inc    esp
  4032fe:	cdq    
  4032ff:	popa   
  403300:	fisub  DWORD PTR [esi+ebx*2+0x91d38e8]
  403307:	popf   
  403308:	jecxz  0x4032d4
  40330a:	ins    BYTE PTR es:[edi],dx
  40330b:	jo     0x403311
  40330d:	popf   
  40330e:	pop    eax
  40330f:	mov    DWORD PTR [esi],ecx
  403311:	push   edx
  403312:	pop    ecx
  403313:	ret    
  403314:	nop
  403315:	sbb    al,0xd5
  403317:	xchg   edx,eax
  403319:	inc    BYTE PTR [ebx+0x18]
  40331c:	repnz dec ebp
  40331e:	push   edi
  40331f:	or     BYTE PTR [esi+eax*4-0x1e],ah
  403323:	pusha  
  403324:	test   BYTE PTR [edi-0x4a],ah
  403327:	push   ebp
  403328:	dec    eax
  403329:	pop    ds
  40332a:	adc    ah,BYTE PTR [ebx+eiz*4-0x883f774]
  403331:	imul   DWORD PTR [ebx+0x57444b42]
  403337:	lods   eax,DWORD PTR ds:[esi]
  403338:	enter  0x6178,0x82
  40333c:	adc    DWORD PTR [edx+0x4486c3c3],edi
  403342:	dec    edi
  403343:	and    DWORD PTR ds:0x9d601c1a,edx
  403349:	(bad)  
  40334a:	fadd   QWORD PTR [eax-0x6c2e8b0b]
  403350:	sahf   
  403351:	psadbw mm5,mm4
  403354:	lods   al,BYTE PTR ds:[esi]
  403355:	cmp    eax,0x2ef0587f
  40335a:	mov    bh,0x2
  40335c:	loope  0x40338f
  40335e:	sti    
  40335f:	xor    BYTE PTR [edx],dl
  403361:	adc    al,0x44
  403363:	jns    0x403371
  403365:	dec    edx
  403366:	gs mov bh,0x60
  403369:	(bad)  
  40336a:	aaa    
  40336b:	mov    ds:0xdd6cd763,al
  403370:	add    BYTE PTR [eax-0x5a],0xfc
  403374:	or     BYTE PTR [ebp+0x2a8d54b9],ch
  40337a:	xchg   ecx,eax
  40337b:	test   dh,dl
  40337d:	js     0x40330a
  40337f:	xor    DWORD PTR [esi],eax
  403381:	js     0x403354
  403383:	mov    ecx,0x35ff7060
  403388:	pop    edx
  403389:	jae    0xba728d44
  40338f:	xchg   ebp,eax
  403390:	stos   DWORD PTR es:[edi],eax
  403391:	and    al,BYTE PTR [edi]
  403393:	push   esi
  403394:	lahf   
  403395:	loop   0x4033d9
  403397:	sar    BYTE PTR [esi+0x78],cl
  40339a:	mov    ds:0x8fcac2f9,eax
  40339f:	int    0x28
  4033a1:	cmp    DWORD PTR [esi-0x2f85b405],edi
  4033a7:	les    edi,FWORD PTR [edx+0x1deb7b73]
  4033ad:	ret    0xbcb
  4033b0:	dec    ecx
  4033b1:	bound  ebx,QWORD PTR [ebp-0x1e]
  4033b4:	shr    ah,0x60
  4033b7:	xor    dh,dh
  4033b9:	cmp    al,0x2a
  4033bb:	xchg   ebp,eax
  4033bc:	js     0x40340a
  4033be:	cmp    esi,DWORD PTR [ebp-0x632c07a2]
  4033c4:	sbb    ebx,esi
  4033c6:	test   BYTE PTR [ecx+0x6a],bl
  4033c9:	inc    eax
  4033ca:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4033cb:	mov    cl,0x2d
  4033cd:	(bad)  [ebp+0x3ca20c3e]
  4033d3:	xchg   edi,eax
  4033d4:	xor    ebp,DWORD PTR [eax-0x4c]
  4033d7:	outs   dx,DWORD PTR ds:[esi]
  4033d8:	scas   eax,DWORD PTR es:[edi]
  4033d9:	add    BYTE PTR [ebx],bh
  4033db:	rcr    edi,1
  4033dd:	jns    0x403413
  4033df:	test   cl,ah
  4033e1:	sub    eax,0x4a461dd0
  4033e6:	pop    ebp
  4033e7:	mov    eax,ds:0xfecb88d4
  4033ec:	stc    
  4033ed:	and    eax,0xfd0deef2
  4033f2:	popf   
  4033f3:	int    0x94
  4033f5:	jle    0x403384
  4033f7:	sbb    ebp,DWORD PTR [edx]
  4033f9:	xchg   edx,eax
  4033fa:	xor    al,dh
  4033fc:	ss pop eax
  4033fe:	mov    cl,0x6
  403400:	sub    edi,ebp
  403402:	out    dx,al
  403403:	mov    ecx,0xd512c705
  403408:	in     eax,0x48
  40340a:	imul   eax,DWORD PTR [edi+0x36],0x5e700b86
  403411:	fadd   DWORD PTR [edx]
  403413:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403414:	push   ebp
  403415:	popa   
  403416:	test   BYTE PTR [esi+0x6],dl
  403419:	dec    eax
  40341a:	rcl    BYTE PTR [esp+edx*1],cl
  40341d:	xchg   ebp,eax
  40341e:	inc    ecx
  40341f:	push   ebx
  403420:	mov    esp,0x60f69c40
  403425:	mov    eax,ds:0xd2a55932
  40342a:	dec    edx
  40342b:	mov    dl,BYTE PTR ds:[eax]
  40342e:	jecxz  0x40349c
  403430:	mov    bl,BYTE PTR [ebx]
  403432:	cmc    
  403433:	and    eax,0x1cedefe3
  403438:	in     eax,dx
  403439:	add    bl,ch
  40343b:	and    al,0x22
  40343d:	fistp  WORD PTR [ecx]
  40343f:	xchg   edx,eax
  403440:	lea    eax,[edi]
  403442:	jle    0x403499
  403444:	das    
  403445:	hlt    
  403446:	(bad)  
  403447:	imul   esp,DWORD PTR [edi+0x700d8328],0x62
  40344e:	push   eax
  40344f:	pop    ebp
  403450:	scas   eax,DWORD PTR es:[edi]
  403451:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403452:	jo     0x403493
  403454:	and    edx,DWORD PTR [esi+edx*2+0x4bce8f5c]
  40345b:	test   eax,0x181d587c
  403460:	mov    ecx,0x3c55bf84
  403465:	mov    esi,0x8a46a8de
  40346a:	jae    0x403443
  40346c:	inc    esi
  40346d:	call   0xabc9:0xd07e84be
  403474:	fld    QWORD PTR [eax+eiz*2-0x309bebfb]
  40347b:	fild   WORD PTR [edi-0x80]
  40347e:	sub    cl,BYTE PTR [edi+0x0]
  403481:	mov    ebx,0x62ef1204
  403486:	fadd   DWORD PTR [esi+0x7a]
  403489:	sub    al,0x39
  40348b:	inc    eax
  40348c:	cmp    bl,BYTE PTR [edx]
  40348e:	mov    ch,0xf1
  403490:	inc    esi
  403491:	sbb    esp,esp
  403493:	and    DWORD PTR [esi-0x1b],ecx
  403496:	adc    bl,dl
  403498:	cmp    DWORD PTR [ebx-0x44],eax
  40349b:	sbb    al,0xb1
  40349d:	xor    ecx,eax
  40349f:	xor    edx,eax
  4034a1:	add    ecx,esi
  4034a3:	add    edx,esi
  4034a5:	jmp    0x40387e
  4034aa:	call   0xfb990eba
  4034af:	fldl2e 
  4034b1:	mov    ebx,0x551ad842
  4034b6:	(bad)  
  4034b7:	or     al,0xa9
  4034b9:	push   cs
  4034ba:	xor    BYTE PTR [ecx+0x0],dl
  4034bd:	add    BYTE PTR [ebx+eax*1+0x4aa40000],bh
  4034c4:	fstp   DWORD PTR [edx+0x659048e7]
  4034ca:	mov    ds,WORD PTR [ebp+0x7b30d4c6]
  4034d0:	dec    eax
  4034d1:	mov    ebp,0x8dfb7bc0
  4034d6:	stc    
  4034d7:	cmp    esi,DWORD PTR [esi]
  4034d9:	fnsave [ecx]
  4034db:	adc    DWORD PTR ds:0xaf1b269c,edx
  4034e1:	ja     0x4034e5
  4034e3:	imul   BYTE PTR [edi-0x6f]
  4034e6:	jne    0x40355a
  4034e8:	pop    ecx
  4034e9:	push   ss
  4034ea:	push   edx
  4034eb:	inc    ebp
  4034ec:	mov    esp,0x6fc929d2
  4034f1:	(bad)  
  4034f2:	std    
  4034f3:	adc    bl,BYTE PTR [esi]
  4034f5:	mov    cl,0xbe
  4034f7:	mov    ch,0xa4
  4034f9:	imul   esp,DWORD PTR [edi+0x8],0x3c
  4034fd:	pop    esp
  4034fe:	pop    es
  4034ff:	sub    BYTE PTR [ecx-0x334207ef],dh
  403505:	pop    ebp
  403506:	mov    al,ds:0x26c8fcdc
  40350b:	imul   edx,DWORD PTR [edi+0xd],0x4e120c32
  403512:	(bad)  
  403514:	in     eax,dx
  403515:	mov    ds:0xd7d7602b,eax
  40351a:	or     edi,edi
  40351c:	mov    eax,DWORD PTR [ebx-0x252e3145]
  403522:	cs lahf 
  403524:	stos   DWORD PTR es:[edi],eax
  403525:	jle    0x403512
  403527:	xor    dh,cl
  403529:	jp     0x4034fa
  40352b:	fpatan 
  40352d:	popa   
  40352e:	sti    
  40352f:	std    
  403530:	or     al,0xce
  403532:	outs   dx,DWORD PTR ds:[esi]
  403533:	inc    ebp
  403534:	aam    0xa0
  403536:	pop    esp
  403537:	mov    ebx,0xb91ca2ac
  40353c:	xlat   BYTE PTR ds:[ebx]
  40353d:	rol    BYTE PTR [edx],0x28
  403540:	mov    ebx,0xe351d27b
  403545:	repz pusha 
  403547:	jne    0x4034cb
  403549:	or     eax,0x5d0ed00f
  40354e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40354f:	xchg   edx,eax
  403550:	mov    ecx,0x8f9ae69c
  403555:	out    0x3f,al
  403557:	mov    ebx,0x31a1ea88
  40355c:	sub    eax,0xa8af0769
  403561:	or     BYTE PTR [eax-0x61],ah
  403564:	mov    al,0x5d
  403566:	sub    bl,BYTE PTR [edx]
  403568:	mov    bh,BYTE PTR [esi-0x3a7b6a82]
  40356e:	mov    al,ds:0x6a1a0804
  403573:	mov    ?,WORD PTR [esi+eax*4]
  403576:	sub    dh,al
  403578:	addr16 mov bh,0x50
  40357b:	mov    esp,0xc4861fa0
  403580:	fadd   st(2),st
  403582:	push   ebx
  403583:	sar    ah,cl
  403585:	jmp    0x403605
  403587:	xor    eax,DWORD PTR [edi-0x26a1ab28]
  40358d:	or     esp,DWORD PTR [ebp+edi*4+0x69e2d61b]
  403594:	stos   BYTE PTR es:[edi],al
  403595:	or     BYTE PTR ds:0x97c73e57,bh
  40359b:	inc    ecx
  40359c:	adc    bh,BYTE PTR [ecx+0x4c]
  40359f:	jmp    0x403549
  4035a1:	mov    ds:0x2b7ca882,eax
  4035a7:	out    0x6d,al
  4035a9:	push   0x56f59a6f
  4035ae:	inc    ebp
  4035af:	shr    BYTE PTR [edx+0x65],cl
  4035b2:	cmp    eax,0x75951114
  4035b7:	xor    eax,DWORD PTR [ecx]
  4035b9:	jnp    0x4035b7
  4035bb:	inc    esi
  4035bc:	les    eax,FWORD PTR [edi]
  4035be:	fstp   DWORD PTR [esi]
  4035c0:	scas   eax,DWORD PTR es:[edi]
  4035c1:	dec    edi
  4035c2:	(bad)  
  4035c3:	push   edi
  4035c4:	mov    al,ds:0x9fd1d2ec
  4035c9:	adc    al,BYTE PTR [ebx+ebp*8+0x3dfca738]
  4035d0:	or     bl,cl
  4035d2:	sahf   
  4035d3:	sbb    al,BYTE PTR [ecx+0x4f]
  4035d6:	ins    DWORD PTR es:[edi],dx
  4035d7:	mov    dl,0x38
  4035d9:	ror    BYTE PTR [edi+esi*4-0xeef794d],cl
  4035e0:	jae    0x403654
  4035e2:	daa    
  4035e3:	lds    ebp,FWORD PTR [edx+0x16efbb1]
  4035e9:	call   FWORD PTR [edi+edx*4-0x74]
  4035ed:	jecxz  0x4035e7
  4035ef:	scas   eax,DWORD PTR es:[edi]
  4035f0:	cld    
  4035f1:	imul   ebp,DWORD PTR [ecx+0x27f64c85],0xfffffffb
  4035f8:	(bad)  
  4035f9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4035fa:	push   0x302a1532
  4035ff:	sbb    BYTE PTR [edx-0x7e],al
  403602:	into   
  403603:	jbe    0x403642
  403605:	repz es jp 0x40365c
  403609:	jae    0x403686
  40360b:	sbb    BYTE PTR [ebx+0x477fec8e],ah
  403611:	mov    edx,ss
  403613:	or     esi,DWORD PTR [esi]
  403615:	push   ss
  403616:	xchg   ebx,eax
  403617:	or     ebx,DWORD PTR [ecx+0x8c1f672]
  40361d:	loop   0x403627
  40361f:	xor    BYTE PTR [edx],dl
  403621:	or     BYTE PTR [edx-0x607fa490],bl
  403627:	mov    bl,0x5c
  403629:	leave  
  40362a:	stos   DWORD PTR es:[edi],eax
  40362b:	shl    DWORD PTR [ebx],0xd5
  40362e:	neg    BYTE PTR [edx-0x29]
  403631:	rcl    ebp,0x5d
  403634:	ficomp WORD PTR [edi]
  403636:	shl    BYTE PTR [esi],1
  403638:	pop    esi
  403639:	jns    0x40367e
  40363b:	inc    esp
  40363c:	xchg   esp,eax
  40363d:	fwait
  40363e:	cs jno 0x4035cb
  403641:	sbb    DWORD PTR [esi],ebp
  403643:	fwait
  403644:	ret    
  403645:	loope  0x403660
  403647:	sub    DWORD PTR ds:0xccb9c743,edi
  40364d:	mov    bh,0xfa
  40364f:	in     eax,0x91
  403651:	test   BYTE PTR [ebx+eax*8+0x6d2134ef],0x9c
  403659:	jnp    0x4035df
  40365b:	inc    edi
  40365c:	jg     0x40364e
  40365e:	mov    ds:0x388a6cdf,al
  403663:	mov    al,ds:0xef883eca
  403668:	sti    
  403669:	test   DWORD PTR [edi-0x67],esp
  40366c:	jbe    0x40368c
  40366e:	movd   mm3,ebx
  403671:	xor    edx,edx
  403673:	cmp    DWORD PTR [ebp+0x53],edx
  403676:	push   ebp
  403677:	fild   QWORD PTR [eax]
  403679:	jmp    0x51af:0x8f27d8b1
  403680:	test   DWORD PTR [edx+0x64f5042f],ecx
  403686:	dec    ecx
  403687:	dec    edx
  403688:	and    edi,ebx
  40368a:	xor    eax,0xd6586f24
  40368f:	(bad)  
  403690:	enter  0x8117,0x1b
  403694:	lods   al,BYTE PTR ds:[esi]
  403695:	cmp    DWORD PTR [eax+0x47],ebx
  403698:	adc    DWORD PTR [esi-0x68f043c6],ebx
  40369e:	aaa    
  40369f:	or     ecx,esi
  4036a1:	sar    DWORD PTR [ecx-0x10],1
  4036a4:	cmc    
  4036a5:	shl    dl,1
  4036a7:	bound  edi,QWORD PTR ds:0xaa941a88
  4036ad:	loope  0x403725
  4036af:	pop    eax
  4036b0:	aaa    
  4036b1:	xor    ebp,DWORD PTR [esi-0x3ffb4219]
  4036b7:	push   ds
  4036b8:	pop    eax
  4036b9:	sub    DWORD PTR [ebx],0xffffffef
  4036bc:	test   eax,0xf9d5161d
  4036c1:	push   ebp
  4036c2:	mov    dl,0xc3
  4036c4:	repnz int3 
  4036c6:	std    
  4036c7:	push   ds
  4036c8:	cmp    BYTE PTR [ebp-0x68],bh
  4036cb:	je     0x4036a0
  4036cd:	fcmovu st,st(1)
  4036cf:	mov    bh,0xce
  4036d1:	pushf  
  4036d2:	(bad)  
  4036d4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4036d5:	pop    ds
  4036d6:	xor    al,0x47
  4036d8:	adc    cl,al
  4036da:	out    0x8a,eax
  4036dc:	pop    ss
  4036dd:	imul   ebx,DWORD PTR [ecx+0x61],0x5b
  4036e1:	push   esi
  4036e2:	add    ah,BYTE PTR [edx-0x56]
  4036e5:	repz and DWORD PTR cs:[eax],esp
  4036e9:	push   es
  4036ea:	push   eax
  4036eb:	fimul  DWORD PTR [ecx+0x4d]
  4036ee:	pop    eax
  4036ef:	dec    dl
  4036f1:	mov    edx,0x41a8c7ee
  4036f6:	sbb    esi,ebx
  4036f8:	call   0x3f62:0xfc34e595
  4036ff:	mov    edx,0xc05eb91
  403704:	pop    edi
  403705:	stos   DWORD PTR es:[edi],eax
  403706:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403707:	(bad)  
  403708:	lods   eax,DWORD PTR ds:[esi]
  403709:	inc    esp
  40370a:	(bad)  
  40370b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40370c:	cmp    esi,edi
  40370e:	or     al,0x8
  403710:	lods   eax,DWORD PTR ds:[esi]
  403712:	jns    0x40374e
  403714:	xchg   BYTE PTR [ebx],bh
  403716:	fiadd  WORD PTR [edi]
  403718:	(bad)  
  403719:	es aam 0x6f
  40371c:	push   0x5f
  40371e:	mov    fs,WORD PTR [ecx+0x6]
  403721:	fcom   DWORD PTR [esi]
  403723:	jl     0x4036c6
  403725:	and    edi,DWORD PTR gs:[esi]
  403728:	shl    eax,cl
  40372a:	div    BYTE PTR [esi+eax*4]
  40372d:	xchg   BYTE PTR [ecx],dl
  40372f:	pop    ebx
  403730:	cmc    
  403731:	mov    edx,0x4d2c57b8
  403736:	outs   dx,BYTE PTR ds:[esi]
  403737:	es (bad) 
  403739:	mov    al,0xc4
  40373b:	aaa    
  40373c:	repnz adc esp,ecx
  40373f:	xchg   DWORD PTR [ebx],eax
  403741:	pop    eax
  403742:	ds fs in eax,0xa0
  403746:	das    
  403747:	sbb    ebx,esi
  403749:	jno    0x403748
  40374b:	(bad)  
  40374c:	and    edi,DWORD PTR [esi+0x31]
  40374f:	inc    esi
  403750:	mov    dh,0xba
  403752:	lahf   
  403753:	out    0x65,al
  403755:	xchg   esp,eax
  403756:	add    BYTE PTR [edi+0x25],ch
  403759:	dec    eax
  40375a:	fldcw  WORD PTR [eax*2-0x3fdf6c1d]
  403761:	jo     0x4037ba
  403763:	mov    al,ds:0x585c450a
  403768:	js     0x40371b
  40376a:	inc    eax
  40376b:	pop    es
  40376c:	sub    eax,0xbd84424
  403771:	pop    esp
  403772:	push   esp
  403773:	inc    esp
  403774:	ret    0xb258
  403777:	add    BYTE PTR [edi],0x1c
  40377a:	out    0xb7,al
  40377c:	mov    WORD PTR [edi+eiz*8],?
  40377f:	mov    eax,ds:0x51fd7889
  403784:	inc    esi
  403785:	int    0x93
  403787:	daa    
  403788:	bound  esi,QWORD PTR [esi+0x15]
  40378b:	mul    BYTE PTR [ecx-0x3a]
  40378e:	fmul   DWORD PTR [esi+0x76c0c892]
  403794:	mov    gs,WORD PTR [ecx]
  403796:	push   0xa7df127e
  40379b:	es aaa 
  40379d:	call   0xf6eeef15
  4037a2:	pop    ecx
  4037a3:	mov    esp,0x9a7ac6d3
  4037a8:	push   ebx
  4037a9:	dec    sp
  4037ab:	xchg   ebp,eax
  4037ac:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4037ad:	mov    esi,0xa62c96ce
  4037b2:	hlt    
  4037b3:	fsub   DWORD PTR [esp+edx*8+0x73]
  4037b7:	fwait
  4037b8:	cmp    DWORD PTR [ebx],esi
  4037ba:	cmp    al,BYTE PTR [ebx+0x39]
  4037bd:	sbb    al,0x73
  4037bf:	cld    
  4037c0:	leave  
  4037c1:	aam    0xa3
  4037c3:	aas    
  4037c4:	add    cl,BYTE PTR [ebx]
  4037c6:	sbb    ah,ah
  4037c8:	lock fcomp DWORD PTR [edx]
  4037cb:	jg     0x403794
  4037cd:	mov    ebp,0xcfdaa475
  4037d2:	mov    al,ds:0x7b389363
  4037d7:	dec    ecx
  4037d8:	rol    ah,0x1c
  4037db:	dec    esi
  4037dc:	mov    ebx,0xd4a2e995
  4037e1:	fcmovu st,st(5)
  4037e3:	test   al,0xfc
  4037e5:	(bad)  
  4037e6:	outs   dx,DWORD PTR ds:[esi]
  4037e7:	push   eax
  4037e8:	mov    eax,0x1dab742b
  4037ed:	icebp  
  4037ee:	cmp    ch,ch
  4037f0:	push   cs
  4037f1:	aad    0xdd
  4037f3:	lds    edx,FWORD PTR [edi+0x56]
  4037f6:	mov    ds:0xf4208d56,al
  4037fb:	inc    esi
  4037fc:	ret    
  4037fd:	shl    BYTE PTR [ebx+eax*4+0x44fcd309],0x8e
  403805:	ucomiss xmm1,DWORD PTR [ecx+0x63]
  403809:	dec    eax
  40380a:	jb     0x4037e8
  40380c:	add    eax,0x17709650
  403811:	sbb    esi,DWORD PTR [esp+ebx*1-0x2b]
  403815:	and    bh,BYTE PTR [edx+0x625550c0]
  40381b:	add    ebp,ebp
  40381d:	pop    ecx
  40381e:	int    0xa3
  403820:	mov    bl,0xba
  403822:	repnz cmp al,0x53
  403825:	mov    ecx,0x33da11e6
  40382a:	xor    esi,ebx
  40382c:	dec    esp
  40382d:	adc    BYTE PTR [edx+0x25],ch
  403830:	pop    ss
  403831:	xchg   BYTE PTR [esi+eax*4-0x53],ah
  403835:	lds    esi,FWORD PTR ds:0x66b9dbd5
  40383b:	pusha  
  40383c:	loopne 0x403897
  40383e:	add    ch,BYTE PTR [ecx+edx*2-0x33]
  403842:	shl    DWORD PTR [edi],cl
  403844:	hlt    
  403845:	adc    ecx,esi
  403847:	mov    ch,0x15
  403849:	jb     0x403846
  40384b:	dec    eax
  40384c:	push   ss
  40384d:	xor    eax,0xba7c6244
  403852:	dec    ebp
  403853:	sub    al,0x73
  403855:	dec    edi
  403856:	dec    eax
  403857:	imul   esp,ebp,0x7a127389
  40385d:	outs   dx,DWORD PTR es:[esi]
  40385f:	out    dx,eax
  403860:	out    0x1d,eax
  403862:	and    eax,0x8c55ffe2
  403867:	aas    
  403868:	add    al,0x60
  40386a:	(bad)
  40386d:	rcl    ch,1
  40386f:	es in  al,dx
  403871:	arpl   WORD PTR [ebx-0x6],bp
  403874:	dec    esp
  403875:	pop    esp
  403876:	mov    ecx,0x5b6f1d5f
  40387b:	jg     0x403868
  40387d:	cmp    DWORD PTR [ebx],0x3d4e9ca
  403883:	add    BYTE PTR [eax],al
  403885:	xor    BYTE PTR [eax-0x3a],cl
  403888:	gs (bad) 
  40388a:	out    dx,eax
  40388b:	mov    bl,0x5d
  40388d:	adc    BYTE PTR [edi+0x1a],bl
  403890:	je     0x40386c
  403892:	je     0x4038dd
  403894:	jmp    0x408d85
  403899:	mov    esp,0xe4000003
  40389e:	imul   ebp,ecx,0x7208962d
  4038a4:	lods   al,BYTE PTR ds:[esi]
  4038a5:	test   eax,0x5631347f
  4038aa:	mov    esi,0x6906a86b
  4038af:	sub    eax,0x212802a6
  4038b4:	xchg   DWORD PTR [eax],eax
  4038b6:	xor    esp,esi
  4038b8:	cwde   
  4038b9:	jp     0x4038d6
  4038bb:	push   ss
  4038bc:	mov    BYTE PTR [ecx],dh
  4038be:	sub    BYTE PTR [esi+ecx*1-0xf],ch
  4038c2:	cld    
  4038c3:	sti    
  4038c4:	lods   eax,DWORD PTR ds:[esi]
  4038c5:	mov    dh,0x2e
  4038c7:	xor    eax,0x8c1e7b7d
  4038cc:	and    edi,DWORD PTR [ebp-0x12685206]
  4038d2:	(bad)  
  4038d3:	out    dx,al
  4038d4:	scas   al,BYTE PTR es:[edi]
  4038d5:	(bad)  
  4038d6:	push   esp
  4038d7:	shl    BYTE PTR [ebp+eiz*4-0x26],cl
  4038db:	cwde   
  4038dc:	mov    edi,0xa9883120
  4038e1:	xchg   edx,edx
  4038e3:	adc    ebp,0x76d03785
  4038e9:	pop    ds
  4038ea:	mov    ecx,0x8023abe7
  4038ef:	ror    DWORD PTR [edi+0x53d025cc],cl
  4038f5:	fs inc esi
  4038f7:	mov    esp,0xf276bcd7
  4038fc:	push   ss
  4038fd:	lock fimul DWORD PTR [edx+0x21]
  403901:	repz fwait
  403903:	sub    BYTE PTR [esi-0xf],bl
  403906:	mov    BYTE PTR [ebp+esi*8-0x60],cl
  40390a:	mov    ebx,0x40051134
  40390f:	mov    al,0x1b
  403911:	xchg   bh,bh
  403913:	aaa    
  403914:	mov    esp,0x78a74a96
  403919:	jb     0x403909
  40391b:	mov    bl,0xad
  40391d:	jg     0x403921
  40391f:	mov    DWORD PTR [ebx*1+0x1dd6af28],esp
  403926:	fsubrp st(3),st
  403928:	inc    ebx
  403929:	sub    al,0x6d
  40392b:	bound  eax,QWORD PTR [ebx]
  40392d:	(bad)  
  40392e:	ror    BYTE PTR [ecx-0x277e2a8d],0x41
  403935:	neg    BYTE PTR [edi-0x7c2b7242]
  40393b:	call   0x2340:0x54a01e25
  403942:	(bad)  
  403943:	ficom  WORD PTR [eax]
  403945:	or     al,0x28
  403947:	pop    ss
  403948:	inc    ecx
  403949:	ror    bh,1
  40394b:	(bad)  [edx+0x3b31bf7c]
  403951:	lods   eax,DWORD PTR ds:[esi]
  403952:	cli    
  403953:	shl    BYTE PTR [ebp-0x7d],cl
  403956:	es popf 
  403958:	sbb    esp,edx
  40395a:	adc    ebp,ebx
  40395c:	xchg   ebp,eax
  40395d:	jmp    0x403993
  40395f:	mov    DWORD PTR [edi],eax
  403961:	pop    es
  403962:	fisubr WORD PTR [esi]
  403964:	ret    0x34ee
  403967:	cli    
  403968:	pushf  
  403969:	in     eax,0xb4
  40396b:	add    DWORD PTR [esi-0x6],0x7de20324
  403972:	adc    DWORD PTR [edx-0x4750909e],esp
  403978:	jmp    0xb58702fc
  40397d:	cwde   
  40397e:	fdiv   QWORD PTR [edi]
  403980:	pop    edi
  403981:	dec    esp
  403982:	push   ecx
  403983:	fstp   TBYTE PTR [ecx]
  403985:	mov    esp,0x3e6cab30
  40398a:	push   ebp
  40398b:	fdiv   QWORD PTR [eax]
  40398d:	mov    al,ds:0xb46cb1b1
  403992:	test   eax,0x33af3888
  403997:	adc    al,0xb1
  403999:	imul   ecx,ecx,0xffffffe2
  40399c:	mov    bh,0x8a
  40399e:	dec    esi
  40399f:	test   eax,0x71e19245
  4039a4:	jno    0x403940
  4039a6:	or     BYTE PTR [ebp-0x48],ch
  4039a9:	sbb    ah,BYTE PTR [esi+0x5c]
  4039ac:	cld    
  4039ad:	xor    dl,cl
  4039af:	push   0x24
  4039b1:	fcomp  DWORD PTR [ebp-0x52e59f8c]
  4039b7:	sub    BYTE PTR [edi+0x4a],dl
  4039ba:	cmp    DWORD PTR [ebp+0x6d],ebp
  4039bd:	shl    BYTE PTR [edx],cl
  4039bf:	call   0xfefad53b
  4039c4:	mov    edx,0x294811e9
  4039c9:	ds mov ecx,ebp
  4039cc:	rcr    DWORD PTR [eax],0x8
  4039cf:	dec    ebp
  4039d0:	mov    edi,0xf1befad1
  4039d5:	dec    edi
  4039d6:	ficomp WORD PTR [ebp-0x62]
  4039d9:	add    cl,dl
  4039db:	out    0x35,al
  4039dd:	push   ebp
  4039de:	mov    DWORD PTR ss:[ebp-0x8800927],edx
  4039e5:	call   0xb69e:0xb79cb8a5
  4039ec:	out    dx,eax
  4039ed:	mov    eax,ds:0x634b0843
  4039f2:	sbb    al,0x10
  4039f4:	jge    0x403a62
  4039f6:	sub    eax,0xbcd97a69
  4039fb:	mov    sp,0x7888
  4039ff:	pusha  
  403a00:	lds    ecx,FWORD PTR [ecx+esi*4]
  403a03:	and    edx,edx
  403a05:	dec    ebx
  403a06:	push   esi
  403a07:	ins    BYTE PTR es:[di],dx
  403a09:	cmp    eax,0x9023511c
  403a0e:	loopne 0x403a78
  403a10:	mov    cl,0x7b
  403a12:	(bad)  
  403a13:	push   ss
  403a14:	daa    
  403a15:	inc    edi
  403a16:	mov    BYTE PTR ds:0xb5c99ea8,ah
  403a1c:	(bad)
  403a1f:	(bad)  
  403a20:	out    0xaa,al
  403a22:	push   ecx
  403a23:	jmp    0x4039b7
  403a25:	hlt    
  403a26:	inc    esp
  403a27:	retf   
  403a28:	or     DWORD PTR [edx+0x1ff7b7c],ecx
  403a2e:	inc    esi
  403a2f:	stos   DWORD PTR es:[edi],eax
  403a30:	(bad)  
  403a32:	cdq    
  403a33:	je     0x403a94
  403a35:	rol    BYTE PTR [eax],1
  403a37:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403a38:	scas   eax,DWORD PTR es:[edi]
  403a39:	cwde   
  403a3a:	pop    ss
  403a3b:	xchg   esp,eax
  403a3c:	enter  0xfee1,0xb4
  403a40:	xchg   edx,eax
  403a41:	les    edi,FWORD PTR [esi+0x6058c742]
  403a47:	stos   BYTE PTR es:[edi],al
  403a48:	sbb    eax,0xfa270151
  403a4d:	test   eax,ecx
  403a4f:	cwde   
  403a50:	mov    dl,0x46
  403a52:	or     esp,DWORD PTR [esi-0x70667eef]
  403a58:	nop
  403a59:	fdivr  st(6),st
  403a5b:	jne    0x403a07
  403a5d:	xchg   ebx,eax
  403a5e:	out    0x9b,al
  403a60:	lods   al,BYTE PTR ds:[esi]
  403a61:	cmc    
  403a62:	int    0x43
  403a64:	mov    ch,0xc8
  403a66:	jge    0x403a50
  403a68:	pop    ecx
  403a69:	ss jnp 0x403a4c
  403a6c:	sbb    BYTE PTR [esi-0x33],bl
  403a6f:	loopne 0x403a30
  403a71:	and    ah,dh
  403a73:	int    0xac
  403a75:	rol    DWORD PTR [edx],cl
  403a77:	pop    edi
  403a78:	sbb    dl,ch
  403a7a:	sub    BYTE PTR gs:[edx],ah
  403a7d:	cmp    al,0xcd
  403a7f:	mov    edx,0xbd0a848f
  403a84:	call   0x354e:0xd509ba6
  403a8b:	pop    es
  403a8c:	sub    eax,0xae4a079a
  403a91:	mov    al,ds:0x72fa6079
  403a96:	test   BYTE PTR [edx+ecx*1],0xa1
  403a9a:	outs   dx,DWORD PTR ds:[esi]
  403a9b:	cmp    DWORD PTR [esp+edi*8-0x25],0xc
  403aa0:	xchg   esi,eax
  403aa1:	pop    eax
  403aa2:	or     BYTE PTR [edi-0x4e],cl
  403aa5:	sbb    eax,0x10f8bc6b
  403aaa:	add    DWORD PTR [edx-0x32cde453],ebx
  403ab0:	lahf   
  403ab1:	mov    bh,BYTE PTR [edx]
  403ab3:	adc    dh,bl
  403ab5:	push   ds
  403ab6:	jmp    0x403ab0
  403ab8:	dec    ebp
  403ab9:	or     ebp,DWORD PTR [ebp-0x9]
  403abc:	mov    cl,0x52
  403abe:	xor    BYTE PTR cs:[ecx-0x135a4ebd],bl
  403ac5:	ror    DWORD PTR [esi+0x3c9a2f26],1
  403acb:	jl     0x403ac6
  403acd:	icebp  
  403ace:	dec    ebx
  403acf:	jns    0x403a7e
  403ad1:	mov    ah,0x6a
  403ad3:	cmp    eax,0x212cf81d
  403ad8:	loope  0x403a6b
  403ada:	pop    edx
  403adb:	shl    DWORD PTR [esi+ebx*2+0x24],0xdc
  403ae0:	test   al,0xd6
  403ae2:	add    eax,0x3316f27f
  403ae7:	sub    al,0x45
  403ae9:	nop
  403aea:	rcl    esi,cl
  403aec:	jne    0x403aeb
  403aee:	bound  edx,QWORD PTR [esi+0x6a67f320]
  403af4:	mov    ch,0xf
  403af6:	test   BYTE PTR es:[edi],0x14
  403afa:	mov    eax,0x5971334f
  403aff:	jo     0x403ac7
  403b01:	fwait
  403b02:	xor    al,0x14
  403b04:	sub    al,0x1b
  403b06:	imul   esp,ecx,0x7b
  403b09:	ss cdq 
  403b0b:	push   edi
  403b0c:	pop    esp
  403b0d:	jg     0x403afd
  403b0f:	stc    
  403b10:	cmc    
  403b11:	loope  0x403a93
  403b13:	mov    WORD PTR [eax],gs
  403b15:	push   esp
  403b16:	or     al,0x4a
  403b18:	test   al,0x29
  403b1a:	pop    ebx
  403b1c:	mov    cl,0x69
  403b1e:	mov    cl,0x86
  403b21:	xor    eax,0xd3c71a60
  403b26:	arpl   sp,sp
  403b28:	xchg   DWORD PTR [esi-0x59],eax
  403b2b:	dec    ebp
  403b2c:	mov    ds:0xdb3c197f,eax
  403b31:	sub    ebx,esp
  403b33:	dec    ebp
  403b34:	pusha  
  403b35:	mov    eax,DWORD PTR [edx-0x7b8c62b]
  403b3b:	lock ficomp DWORD PTR [edx+0x775d273]
  403b42:	ins    BYTE PTR es:[edi],dx
  403b43:	mov    ah,BYTE PTR [eax+0x42]
  403b46:	popa   
  403b47:	and    dh,BYTE PTR ds:0x137643b4
  403b4d:	call   0xf67cf1f7
  403b52:	and    al,0x44
  403b54:	inc    ebx
  403b55:	ins    DWORD PTR es:[edi],dx
  403b56:	push   ebp
  403b57:	mov    esp,0x277431ae
  403b5c:	ins    DWORD PTR es:[edi],dx
  403b5d:	ror    BYTE PTR [ecx-0x68],0x5d
  403b61:	jl     0x403b40
  403b63:	pop    ds
  403b64:	or     eax,0x7adefdfa
  403b69:	inc    ecx
  403b6a:	adc    DWORD PTR [eax+0x74],eax
  403b6d:	leave  
  403b6e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403b6f:	xor    eax,0xe951ae30
  403b74:	pop    es
  403b75:	push   0x53
  403b77:	jnp    0x403b3e
  403b79:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403b7a:	sbb    ecx,DWORD PTR [ebx]
  403b7c:	jnp    0x403b0f
  403b7e:	outs   dx,DWORD PTR ds:[esi]
  403b7f:	mov    cl,0x9c
  403b81:	jno    0x403b4c
  403b83:	push   es
  403b84:	or     BYTE PTR [esi],0x27
  403b87:	into   
  403b88:	jnp    0x403b52
  403b8a:	outs   dx,BYTE PTR ds:[esi]
  403b8b:	jbe    0x403bb9
  403b8d:	int3   
  403b8e:	inc    esp
  403b8f:	xchg   ebp,eax
  403b90:	sub    eax,0x663e9dbf
  403b95:	daa    
  403b96:	push   es
  403b97:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403b98:	xor    BYTE PTR [ecx+0x5d10c8a2],dl
  403b9e:	retf   
  403b9f:	add    BYTE PTR [ebx-0x676db84e],ah
  403ba5:	inc    eax
  403ba6:	daa    
  403ba7:	and    DWORD PTR [edi],ecx
  403ba9:	ins    DWORD PTR es:[edi],dx
  403baa:	jbe    0x403bf6
  403bac:	nop
  403bad:	das    
  403bae:	out    dx,eax
  403baf:	repz lahf 
  403bb1:	mov    eax,0x120c9924
  403bb6:	add    DWORD PTR [ebp-0x1e319c6e],esp
  403bbc:	or     eax,0x683e004b
  403bc1:	dec    edx
  403bc2:	mov    gs,WORD PTR [edi+0x79]
  403bc5:	sbb    esp,DWORD PTR [si+0x72]
  403bc9:	add    DWORD PTR [ecx+0x63fab8ca],edi
  403bcf:	addr16 into 
  403bd1:	mov    ch,0xe7
  403bd3:	aam    0xc1
  403bd5:	adc    BYTE PTR [eax+0x77396be5],bh
  403bdb:	mov    ebp,0x9e899def
  403be0:	cmp    eax,0x8bc4296
  403be5:	(bad)  
  403be6:	ds dec edi
  403be8:	cmp    edx,DWORD PTR [eax+0x8]
  403beb:	push   ecx
  403bec:	inc    ebp
  403bed:	(bad)  
  403bee:	jge    0x403c63
  403bf0:	fsubr  QWORD PTR [edi-0x2d]
  403bf3:	pushf  
  403bf4:	push   eax
  403bf5:	(bad)  
  403bf7:	mov    cl,0x6c
  403bf9:	sbb    eax,0x99aa5a5f
  403bfe:	loopne 0x403c29
  403c00:	inc    ecx
  403c01:	popa   
  403c02:	pop    esp
  403c03:	and    dh,dh
  403c05:	push   0xffffffb1
  403c07:	dec    ecx
  403c08:	xor    eax,0x20c4f615
  403c0d:	loope  0x403bb5
  403c0f:	sbb    DWORD PTR [ebx-0x3c],edi
  403c12:	mov    edx,fs
  403c14:	cmp    al,0x8
  403c16:	and    bh,bh
  403c18:	js     0x403c33
  403c1a:	pop    ss
  403c1b:	out    dx,al
  403c1c:	repnz inc eax
  403c1e:	fdivr  QWORD PTR [edx]
  403c20:	outs   dx,DWORD PTR ds:[esi]
  403c21:	leave  
  403c22:	into   
  403c23:	mov    edx,0x9a39cd26
  403c28:	jne    0x403bdf
  403c2a:	xchg   esi,eax
  403c2b:	sahf   
  403c2c:	xor    cl,bl
  403c2e:	mov    BYTE PTR [eax-0x17468c81],ah
  403c34:	dec    edi
  403c35:	mov    dl,0x98
  403c37:	lds    ebp,FWORD PTR [ebx-0x51]
  403c3a:	scas   eax,DWORD PTR es:[edi]
  403c3b:	xor    BYTE PTR [edi-0x154b153b],bl
  403c41:	out    dx,eax
  403c42:	ror    DWORD PTR [ecx-0x2c],1
  403c45:	xchg   edx,eax
  403c46:	inc    ebx
  403c47:	push   ebx
  403c48:	aad    0x64
  403c4a:	(bad)  
  403c4c:	mov    ds:0xe5c0712f,eax
  403c51:	stc    
  403c52:	out    dx,eax
  403c53:	sar    BYTE PTR [edi],0xad
  403c56:	cmp    eax,edx
  403c58:	pop    edx
  403c59:	jae    0x404862
  403c5f:	lea    edx,[ecx-0x300b]
  403c65:	mov    DWORD PTR [ebp+0xc],edx
  403c68:	mov    edi,DWORD PTR [ebp+0xc]
  403c6b:	lea    edx,[ebp+ecx*4-0x5c]
  403c6f:	mov    ebx,DWORD PTR [edx]
  403c71:	xor    edi,eax
  403c73:	imul   edi,ebx
  403c76:	mov    DWORD PTR [edx],edi
  403c78:	mov    edx,DWORD PTR [ebp+0x8]
  403c7b:	xor    edx,eax
  403c7d:	inc    ecx
  403c7e:	inc    DWORD PTR [ebp+0xc]
  403c81:	add    edx,esi
  403c83:	cmp    ecx,edx
  403c85:	jb     0x403c68
  403c8b:	jmp    0x404862
  403c90:	xor    ecx,eax
  403c92:	xor    edx,eax
  403c94:	jmp    0x40406d
  403c99:	mov    ecx,0xb3693318
  403c9e:	imul   edi,ebx,0xffffffd8
  403ca1:	test   BYTE PTR [esi+0x7],al
  403ca4:	aaa    
  403ca5:	jne    0x403c39
  403ca7:	cmp    BYTE PTR [edi+0x58a8],ah
  403cad:	mov    esp,0x1a000003
  403cb2:	sahf   
  403cb3:	fnstcw WORD PTR gs:[esi-0x526ad15a]
  403cba:	jne    0x403c48
  403cbc:	into   
  403cbd:	dec    eax
  403cbe:	or     BYTE PTR [eax],bh
  403cc0:	loope  0x403cf9
  403cc2:	jge    0x403c52
  403cc4:	inc    eax
  403cc5:	dec    edx
  403cc6:	sub    eax,0x30b0f13
  403ccb:	cwde   
  403ccc:	add    ecx,DWORD PTR [edi+edi*1-0x7b]
  403cd0:	cld    
  403cd1:	shl    DWORD PTR [ebx+0x27],1
  403cd4:	jns    0x403c97
  403cd6:	fcom   DWORD PTR [edi+ecx*8-0x74]
  403cda:	rcl    ecx,0x83
  403cdd:	dec    eax
  403cde:	imul   edx,DWORD PTR [eax-0x68642c98],0xffffff8a
  403ce5:	sbb    DWORD PTR [ecx],ebx
  403ce7:	adc    DWORD PTR [edx],ebp
  403ce9:	jecxz  0x403cb3
  403ceb:	(bad)  
  403cec:	int3   
  403ced:	into   
  403cee:	or     esp,ebx
  403cf0:	dec    esp
  403cf1:	xchg   ebx,eax
  403cf2:	stos   DWORD PTR es:[edi],eax
  403cf3:	in     eax,dx
  403cf4:	mov    bl,0x88
  403cf6:	push   esp
  403cf7:	jge    0x403d16
  403cf9:	or     DWORD PTR [ecx+ebp*1-0x59],0x5
  403cfe:	daa    
  403cff:	and    DWORD PTR [esi+edi*1],ecx
  403d02:	out    0x8,al
  403d04:	sbb    cl,0x9
  403d07:	adc    DWORD PTR [eax-0x4a],esp
  403d0a:	sti    
  403d0b:	jae    0x403cf6
  403d0d:	adc    al,0xf3
  403d0f:	pop    edi
  403d10:	jp     0x403d64
  403d12:	fs fwait
  403d14:	add    BYTE PTR [ebp-0x39fe51af],bl
  403d1a:	mov    bl,0x55
  403d1c:	push   ecx
  403d1d:	aaa    
  403d1e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403d1f:	mov    bl,0x6d
  403d21:	mov    edi,DWORD PTR [ebx+0xe]
  403d24:	fcomip st,st(1)
  403d26:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403d27:	and    esi,0x1e489dcc
  403d2d:	dec    ebp
  403d2e:	ret    
  403d2f:	mov    bl,0x4f
  403d31:	(bad)  
  403d32:	leave  
  403d33:	or     bh,BYTE PTR [eax+ebx*2-0x1ba538b9]
  403d3a:	retf   
  403d3b:	cdq    
  403d3c:	das    
  403d3d:	leave  
  403d3e:	xchg   edi,eax
  403d3f:	loop   0x403cdf
  403d41:	adc    DWORD PTR [edx],eax
  403d43:	push   ecx
  403d44:	fdiv   QWORD PTR [ebx]
  403d46:	and    al,0x1
  403d48:	push   edi
  403d49:	into   
  403d4a:	sbb    ah,0xb5
  403d4d:	dec    ecx
  403d4e:	push   esi
  403d4f:	adc    ah,dl
  403d51:	je     0x403dd2
  403d53:	add    ch,0x20
  403d56:	in     eax,dx
  403d57:	jmp    0x403db9
  403d59:	xor    eax,0x966ec0ff
  403d5e:	fwait
  403d5f:	adc    BYTE PTR [edi-0x75],cl
  403d62:	ror    BYTE PTR [ecx-0x77],0x0
  403d66:	das    
  403d67:	in     al,0x3f
  403d69:	(bad)  
  403d6a:	pushf  
  403d6b:	mov    eax,ds:0xc286539d
  403d70:	cdq    
  403d71:	mov    esp,0xabd5203
  403d76:	ret    
  403d77:	cwde   
  403d78:	ins    BYTE PTR es:[edi],dx
  403d79:	cdq    
  403d7a:	shl    BYTE PTR [eax+0x54],0x77
  403d7e:	test   DWORD PTR [esi-0x1],esi
  403d81:	rol    DWORD PTR [ecx-0x12],cl
  403d84:	cmp    eax,DWORD PTR [edi-0x15a3c2ac]
  403d8a:	test   esi,edx
  403d8c:	call   0x617e590b
  403d91:	pop    edx
  403d92:	sbb    eax,0xb5e716d3
  403d97:	sbb    eax,DWORD PTR [eax+0x5c]
  403d9a:	retf   
  403d9b:	mov    DWORD PTR [ecx],0x53967c52
  403da1:	les    ecx,FWORD PTR [edi+0x4f]
  403da4:	loope  0x403e18
  403da6:	sti    
  403da7:	(bad)  
  403da8:	cs sbb eax,0x87cb33b0
  403dae:	sahf   
  403daf:	cdq    
  403db0:	clc    
  403db1:	test   dh,dh
  403db3:	lahf   
  403db4:	add    BYTE PTR [eax+0x36a4393a],al
  403dba:	jae    0x403e10
  403dbc:	pop    edx
  403dbd:	(bad)  
  403dbe:	xor    eax,0xae33d306
  403dc3:	dec    ebx
  403dc4:	push   0x2b
  403dc6:	mov    ?,edx
  403dc8:	loopne 0x403d66
  403dca:	pop    edx
  403dcb:	add    DWORD PTR [edi-0x1b5bcb08],0xc55c345f
  403dd5:	sti    
  403dd6:	adc    eax,0xc6641193
  403ddb:	daa    
  403ddc:	enter  0x12db,0x13
  403de0:	std    
  403de1:	cmc    
  403de2:	sbb    al,0xa2
  403de4:	dec    edx
  403de5:	nop
  403de6:	sbb    al,0x81
  403de8:	sub    BYTE PTR [esi+ebx*8],ch
  403deb:	and    DWORD PTR [esi+0x26394535],0xccb0a4ec
  403df5:	mov    al,ds:0x2fd5f984
  403dfa:	rcr    al,cl
  403dfc:	std    
  403dfd:	fmul   DWORD PTR ds:0xd80c27f
  403e03:	jp     0x403e25
  403e05:	sbb    ebp,DWORD PTR [esi-0x4a]
  403e08:	jae    0x403e02
  403e0a:	mov    dl,0x6d
  403e0c:	mov    ah,0xf5
  403e0e:	push   esi
  403e0f:	stos   DWORD PTR es:[edi],eax
  403e10:	leave  
  403e11:	iret   
  403e12:	mov    ds:0x2536e632,eax
  403e17:	push   es
  403e18:	pushf  
  403e19:	outs   dx,BYTE PTR ds:[esi]
  403e1a:	rol    BYTE PTR [ecx-0x6dbf1a32],cl
  403e20:	mov    dh,al
  403e22:	or     al,0x11
  403e24:	mov    esp,DWORD PTR [edi-0x2ea7be12]
  403e2a:	and    DWORD PTR [ebx-0xfa1d032],esi
  403e30:	xchg   eax,edx
  403e32:	sti    
  403e33:	scas   al,BYTE PTR es:[edi]
  403e34:	arpl   WORD PTR ds:[esi+0x1],sp
  403e38:	imul   eax,DWORD PTR [eax+0x1f],0xffffffc9
  403e3c:	shl    bh,cl
  403e3e:	pop    ds
  403e3f:	sub    DWORD PTR [ecx-0x3d64b6fc],0x77c43e3e
  403e49:	mov    BYTE PTR [ecx-0x58],ah
  403e4c:	mov    ah,0x58
  403e4e:	push   cs
  403e4f:	bound  ebp,QWORD PTR [edi-0x4b1906a9]
  403e55:	or     DWORD PTR [ecx],ebp
  403e57:	fstp   DWORD PTR [ebx+0x64520fb3]
  403e5d:	and    al,0xed
  403e5f:	scas   eax,DWORD PTR es:[edi]
  403e60:	jnp    0x403ebb
  403e62:	adc    bl,BYTE PTR [esi]
  403e64:	std    
  403e65:	xor    BYTE PTR [esi],0x89
  403e68:	and    bl,BYTE PTR [ecx+esi*8-0x443d42a9]
  403e6f:	and    edi,esi
  403e71:	mov    ch,0x14
  403e73:	in     eax,dx
  403e74:	adc    eax,0xdd28ff7
  403e79:	imul   sp,dx,0x1256
  403e7e:	mov    dl,cl
  403e80:	mov    ebp,DWORD PTR [edx+0x4]
  403e83:	retf   
  403e84:	or     eax,0xade6f8
  403e89:	stc    
  403e8a:	mov    edi,0x93e4d672
  403e8f:	jl     0x403e28
  403e91:	cmp    eax,0x8ecd3baf
  403e96:	mov    bl,0x3
  403e98:	sbb    DWORD PTR [edi],edx
  403e9a:	ret    
  403e9b:	ret    
  403e9c:	cmp    DWORD PTR [esi-0x46e9c5e9],0x70
  403ea3:	mov    ebp,0xe2681f4a
  403ea8:	cmp    eax,0xa0f6f27e
  403ead:	lahf   
  403eae:	mov    ebx,0x183627c
  403eb3:	fcmovne st,st(0)
  403eb5:	xchg   edx,eax
  403eb6:	sub    DWORD PTR [ebx+0x7f529f6c],0x14
  403ebd:	dec    esi
  403ebe:	ret    0x1d84
  403ec1:	inc    ecx
  403ec2:	mul    DWORD PTR [ecx-0x16]
  403ec5:	pushf  
  403ec6:	push   ebp
  403ec7:	out    0x9e,al
  403ec9:	lahf   
  403eca:	in     eax,0x90
  403ecc:	jle    0x403f3a
  403ece:	dec    edi
  403ecf:	xchg   eax,esi
  403ed1:	test   al,0xde
  403ed3:	pop    ecx
  403ed4:	nop
  403ed5:	dec    edi
  403ed6:	in     eax,0x4f
  403ed8:	and    al,0x0
  403eda:	mov    al,ds:0xb99450e8
  403edf:	push   edi
  403ee0:	sub    al,0xf1
  403ee2:	jo     0x403f18
  403ee4:	or     al,0x38
  403ee6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403ee7:	repnz push edi
  403ee9:	outs   dx,DWORD PTR ds:[esi]
  403eea:	pop    edi
  403eeb:	add    al,0xaa
  403eed:	jno    0x403f5a
  403eef:	push   ss
  403ef0:	sub    DWORD PTR [ebx-0x139d3187],eax
  403ef6:	lahf   
  403ef7:	and    DWORD PTR [edx-0x7c],0xffffff8b
  403efb:	fwait
  403efc:	jns    0x403edc
  403efe:	adc    DWORD PTR [ebx+0x1e897cd1],ebx
  403f04:	jo     0x403e89
  403f06:	daa    
  403f07:	jmp    0xfe54346a
  403f0c:	mov    edx,0xa73f69d6
  403f11:	and    BYTE PTR [edx+ebx*2-0xc],dh
  403f15:	sar    DWORD PTR ds:0xb7703637,1
  403f1b:	dec    eax
  403f1c:	ja     0x403f1b
  403f1e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403f1f:	arpl   WORD PTR [ebp+0x3d],bp
  403f22:	inc    ecx
  403f23:	mov    dh,BYTE PTR [esi-0x483e10f6]
  403f29:	mov    es,WORD PTR [ecx+0x2]
  403f2c:	int    0x9d
  403f2e:	shr    DWORD PTR [edi+0x1279bfd6],1
  403f34:	mov    dh,0xa0
  403f36:	jno    0x403f11
  403f38:	and    ebx,DWORD PTR [edi+0x7]
  403f3b:	nop
  403f3c:	adc    eax,0xfb0cabfa
  403f41:	pop    ecx
  403f42:	mov    ch,0xfa
  403f44:	and    DWORD PTR [edx],eax
  403f46:	pushf  
  403f47:	xchg   esi,eax
  403f48:	loopne 0x403fc3
  403f4a:	xchg   edx,eax
  403f4b:	(bad)  
  403f4c:	sbb    BYTE PTR ds:0xa98be794,bh
  403f52:	sbb    al,0x24
  403f54:	enter  0xcf7e,0x17
  403f58:	inc    edx
  403f59:	adc    DWORD PTR [eax+0x12ed946d],eax
  403f5f:	xchg   ebx,eax
  403f60:	mov    cs,WORD PTR [ebx-0x38]
  403f63:	sbb    ah,bl
  403f65:	mov    ecx,0x5ca01b4d
  403f6a:	jae    0x403fea
  403f6c:	out    0x75,al
  403f6e:	push   edx
  403f6f:	repnz mov bl,0xe8
  403f72:	xlat   BYTE PTR ds:[ebx]
  403f74:	push   ebx
  403f75:	add    BYTE PTR [ebp+0xceae784],bl
  403f7b:	shl    DWORD PTR ds:0x4abc791e,cl
  403f81:	lahf   
  403f82:	cli    
  403f83:	(bad)  
  403f85:	js     0x403f3d
  403f87:	jbe    0x403fd5
  403f89:	hlt    
  403f8a:	ror    BYTE PTR [ecx+0x440a74c9],1
  403f90:	xchg   ebp,eax
  403f91:	sbb    DWORD PTR [ecx],ebx
  403f93:	cmp    esp,DWORD PTR [edx+ebx*2]
  403f96:	cli    
  403f97:	pop    es
  403f98:	(bad)  
  403f99:	pushf  
  403f9a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403f9b:	jo     0x403fd2
  403f9d:	inc    edx
  403f9e:	mov    al,0x34
  403fa0:	push   es
  403fa1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403fa2:	adc    al,0xb
  403fa4:	aad    0xac
  403fa6:	scas   eax,DWORD PTR es:[edi]
  403fa7:	ja     0x403fcb
  403fa9:	mov    WORD PTR [eax-0x1482e83a],?
  403faf:	rol    BYTE PTR [edi],cl
  403fb1:	pusha  
  403fb2:	xchg   edi,eax
  403fb3:	popf   
  403fb4:	loop   0x40401f
  403fb6:	jle    0x403f74
  403fb8:	pop    es
  403fb9:	jb     0x404007
  403fbb:	push   edx
  403fbc:	jg     0x403fec
  403fbe:	dec    esp
  403fbf:	sbb    DWORD PTR [ebx+0x60],ebx
  403fc2:	test   bl,ah
  403fc4:	mov    al,ds:0xb3288a3c
  403fc9:	or     eax,0x3416af7e
  403fce:	shl    DWORD PTR fs:[edi+edi*1-0x69],0x9e
  403fd4:	movsx  esi,BYTE PTR [ebp+0x23]
  403fd8:	cs sub edi,edi
  403fdb:	dec    eax
  403fdc:	das    
  403fdd:	call   0x402d:0x3e84fe15
  403fe4:	out    dx,al
  403fe5:	ins    BYTE PTR es:[edi],dx
  403fe6:	add    eax,0xd64840a4
  403feb:	mov    esi,0x3c3997
  403ff0:	push   0x65bb8d3
  403ff5:	mov    al,BYTE PTR [ebx+0x27]
  403ff8:	std    
  403ff9:	mov    dl,al
  403ffb:	adc    eax,DWORD PTR [ebp+0x7333bd27]
  404001:	loope  0x40402d
  404003:	sbb    DWORD PTR [eax-0x44117d6a],0x72
  40400a:	pop    es
  40400b:	shl    BYTE PTR [ebx-0x67],0xb4
  40400f:	push   edx
  404010:	jo     0x403fdd
  404012:	mov    bl,0x5d
  404014:	rol    DWORD PTR [edi+0x4c],1
  404017:	loop   0x40402d
  404019:	shl    esp,0xf1
  40401c:	shl    BYTE PTR [edx],cl
  40401e:	dec    ebx
  40401f:	add    eax,DWORD PTR [eax+0x3c]
  404022:	jg     0x403fa7
  404024:	cmp    al,0xeb
  404026:	ret    
  404027:	mov    ebx,0x89a7d98
  40402c:	jo     0x404096
  40402e:	jp     0x403fca
  404030:	or     DWORD PTR [ebp+0x59],esi
  404033:	les    esp,FWORD PTR [esi+eiz*4-0x15]
  404037:	mov    edi,0xc3672e13
  40403c:	pop    esi
  40403e:	jp     0x40404b
  404040:	pop    es
  404041:	pop    ebp
  404042:	fcomp  QWORD PTR ds:0xd04a5c8f
  404048:	ins    DWORD PTR es:[edi],dx
  404049:	mov    dl,0xca
  40404b:	fisttp QWORD PTR [ebx-0x25]
  40404e:	mov    bh,0x1a
  404050:	xor    BYTE PTR [edi*4+0x2fdd2686],bh
  404057:	fisub  DWORD PTR [ebx+0x189cf5f5]
  40405d:	inc    ebx
  40405e:	sub    BYTE PTR [edi],al
  404060:	(bad)  
  404061:	xor    DWORD PTR fs:[edx+0x62],0x7fb9e9a0
  404069:	or     al,0xa6
  40406b:	loop   0x40400b
  40406d:	add    ecx,esi
  40406f:	add    edx,esi
  404071:	cmp    ecx,edx
  404073:	jae    0x404856
  404079:	jmp    0x404452
  40407e:	inc    edi
  40407f:	gs daa 
  404081:	xor    ah,BYTE PTR [edi]
  404083:	jb     0x4040dc
  404085:	jne    0x40400d
  404087:	and    al,0x33
  404089:	xor    al,0x66
  40408b:	and    bh,dl
  40408d:	and    ah,BYTE PTR [esp+ebx*2+0x0]
  404091:	add    BYTE PTR [ebx+eax*1-0x5f2e0000],bh
  404098:	sub    BYTE PTR [eax],bl
  40409a:	ror    DWORD PTR [eax],cl
  40409c:	xchg   DWORD PTR [ebp+0x1d],esi
  40409f:	push   ebp
  4040a0:	sub    BYTE PTR ds:0xaba58be3,dl
  4040a6:	add    BYTE PTR [ebx+0x61],al
  4040a9:	inc    ebx
  4040aa:	add    bh,0x2c
  4040ad:	lock cmps BYTE PTR ss:[esi],BYTE PTR es:[edi]
  4040b0:	sub    bh,BYTE PTR [ebx+0x68]
  4040b3:	dec    ebp
  4040b4:	cmp    eax,0x2619126b
  4040b9:	add    eax,0xb8a7de09
  4040be:	pushf  
  4040bf:	xchg   ebp,eax
  4040c0:	inc    esi
  4040c1:	inc    eax
  4040c2:	test   BYTE PTR [esi],0xdf
  4040c5:	outs   dx,DWORD PTR ds:[esi]
  4040c6:	es retf 
  4040c8:	mov    ds:0xd41b99f7,eax
  4040cd:	test   eax,0x7a328ddc
  4040d2:	dec    ebx
  4040d3:	mov    esp,0x6cc691a9
  4040d8:	call   0xc985b702
  4040dd:	jno    0x40411e
  4040df:	xchg   BYTE PTR [edx],bh
  4040e1:	(bad)  
  4040e2:	mov    eax,ds:0x54bf7af8
  4040e7:	fdiv   QWORD PTR [esi+0x6e]
  4040ea:	ds sbb edx,ecx
  4040ed:	push   eax
  4040ee:	dec    edx
  4040ef:	mov    al,ah
  4040f1:	inc    ebx
  4040f2:	dec    eax
  4040f3:	lea    edi,[ebx+0x30]
  4040f6:	push   ss
  4040f7:	jmp    0x40412c
  4040f9:	mov    eax,ds:0x91bc915b
  4040fe:	fs inc esi
  404100:	arpl   WORD PTR [ebx+0xd],sp
  404103:	and    eax,0x6cdde659
  404108:	mov    bl,0xc1
  40410a:	xchg   esi,edi
  40410c:	out    dx,eax
  40410d:	inc    eax
  40410e:	dec    ecx
  40410f:	inc    edi
  404110:	std    
  404111:	aad    0x54
  404113:	jo     0x4040e1
  404115:	aad    0xf6
  404117:	push   ss
  404118:	(bad)  
  404119:	mov    ds:0x249de8b3,eax
  40411e:	push   0xcb2c36c6
  404123:	jle    0x404111
  404125:	cmp    BYTE PTR [ecx+0x4c508114],0x87
  40412c:	mov    ah,0x81
  40412e:	and    DWORD PTR [ebx],0xf73efbdf
  404134:	sub    edi,edi
  404136:	sub    eax,0x5c
  404139:	xor    eax,0x315064d6
  40413e:	mov    ch,0xa7
  404140:	mov    bl,0x90
  404142:	cmp    al,dh
  404144:	stc    
  404145:	lock iret 
  404147:	aad    0xa0
  404149:	mov    cl,0xf4
  40414b:	(bad)  
  40414c:	cs inc sp
  40414f:	dec    ecx
  404150:	mov    dl,0xe4
  404152:	stos   BYTE PTR es:[edi],al
  404153:	add    al,0xb1
  404155:	sbb    BYTE PTR [esi],cl
  404157:	loop   0x404143
  404159:	inc    ebp
  40415a:	inc    edx
  40415b:	(bad)  
  40415c:	call   0xbbf9923b
  404161:	icebp  
  404162:	sbb    ah,bh
  404164:	iret   
  404165:	xchg   edx,eax
  404166:	neg    dl
  404168:	cmp    al,0xe9
  40416a:	(bad)  
  40416b:	mov    edx,0x259b6a45
  404170:	and    dl,BYTE PTR ds:0xd889827b
  404176:	add    al,0xfa
  404178:	scas   eax,DWORD PTR es:[edi]
  404179:	mov    al,ds:0xf0d44058
  40417e:	(bad)
  404181:	mul    eax
  404183:	sar    dh,1
  404185:	mov    dh,0xf5
  404187:	pop    esi
  404188:	int3   
  404189:	lods   al,BYTE PTR ds:[esi]
  40418a:	mov    ecx,0x7f4cf87e
  40418f:	clc    
  404190:	into   
  404191:	scas   eax,DWORD PTR es:[edi]
  404192:	into   
  404193:	enter  0x73,0x93
  404197:	jle    0x4041bc
  404199:	push   esi
  40419a:	xchg   edx,eax
  40419b:	loop   0x404137
  40419d:	mul    DWORD PTR [ebp+0x5d]
  4041a0:	xchg   edx,eax
  4041a1:	sbb    eax,0x96497651
  4041a6:	sbb    al,0x34
  4041a8:	scas   al,BYTE PTR es:[edi]
  4041a9:	jecxz  0x4041ff
  4041ab:	adc    BYTE PTR [edi+ebx*4-0x3],bl
  4041af:	and    ebx,DWORD PTR [esi+0x55018207]
  4041b5:	mov    bl,0x77
  4041b7:	pop    ebp
  4041b8:	mov    eax,ds:0x20a7cdf8
  4041bd:	stos   BYTE PTR es:[edi],al
  4041be:	jns    0x404213
  4041c0:	fcmovnbe st,st(6)
  4041c2:	cmc    
  4041c3:	lahf   
  4041c4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4041c5:	push   ss
  4041c6:	fnstcw WORD PTR [ecx+0x4c955032]
  4041cc:	push   cs
  4041cd:	shl    bl,cl
  4041cf:	neg    DWORD PTR [ebx]
  4041d1:	(bad)  
  4041d2:	in     al,dx
  4041d3:	ror    dl,cl
  4041d5:	jecxz  0x4041f5
  4041d7:	inc    eax
  4041d8:	pop    es
  4041d9:	xchg   edx,eax
  4041da:	in     al,0xae
  4041dc:	cld    
  4041dd:	add    ecx,esp
  4041df:	lods   eax,DWORD PTR ds:[esi]
  4041e0:	popf   
  4041e1:	je     0x4041b1
  4041e3:	xor    DWORD PTR [edx+0x28],ebp
  4041e6:	int    0xdb
  4041e8:	push   ds
  4041e9:	xchg   BYTE PTR [ecx],ch
  4041eb:	dec    ebp
  4041ec:	retf   0x9662
  4041ef:	jge    0x4041b7
  4041f1:	xchg   edx,eax
  4041f2:	add    DWORD PTR [ecx+ebx*8+0x13],ebp
  4041f6:	ficom  WORD PTR [ebx+0x59]
  4041f9:	jmp    0x4041c7
  4041fb:	inc    edx
  4041fc:	mov    bl,0x5d
  4041fe:	sub    BYTE PTR [edi+0x35d60bf],dl
  404204:	mov    edi,0x61a37087
  404209:	mov    esi,0xc90e5626
  40420e:	(bad)  
  40420f:	fld    DWORD PTR [ecx-0x30c97215]
  404215:	fcomi  st,st(1)
  404217:	pop    eax
  404218:	xlat   BYTE PTR ds:[ebx]
  404219:	shl    BYTE PTR [ebx],0x4a
  40421c:	xchg   edi,eax
  40421d:	mov    WORD PTR [edi+0x5fc511c],fs
  404223:	cld    
  404224:	fild   DWORD PTR [edi+0x1d0d1424]
  40422a:	xchg   esi,eax
  40422b:	xlat   BYTE PTR ds:[ebx]
  40422c:	push   ds
  40422d:	ffree  st(2)
  40422f:	mov    ah,0x9c
  404231:	iret   
  404232:	mov    bl,0xe
  404234:	mov    ah,0x4a
  404236:	and    DWORD PTR [esi],ebx
  404238:	lods   eax,DWORD PTR ss:[esi]
  40423a:	sahf   
  40423b:	cmp    ah,bl
  40423d:	shr    edi,0xf
  404240:	mov    si,WORD PTR [ecx+ebx*8]
  404244:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404245:	loop   0x404230
  404247:	mov    bh,BYTE PTR [edi+ecx*2]
  40424a:	scas   eax,DWORD PTR es:[edi]
  40424b:	ficom  WORD PTR [esi+0x7d3b0852]
  404251:	xchg   ebp,eax
  404252:	xchg   edx,eax
  404253:	xchg   edx,eax
  404254:	sub    al,0xcf
  404256:	retf   0xfe2c
  404259:	push   cs
  40425a:	repnz lods eax,DWORD PTR ds:[esi]
  40425c:	into   
  40425d:	dec    eax
  40425e:	repz fisub WORD PTR [esi-0x42]
  404262:	mov    dl,0xd
  404264:	jo     0x4041f0
  404266:	or     bh,0x90
  404269:	arpl   WORD PTR [edx+0x25],cx
  40426c:	rcl    DWORD PTR [ebp-0x33afd707],1
  404272:	mov    fs,WORD PTR [edi]
  404274:	ins    BYTE PTR es:[edi],dx
  404275:	mov    ecx,0xa8d3937a
  40427a:	pop    esi
  40427b:	arpl   WORD PTR [eax-0x40a74776],di
  404281:	jo     0x40421a
  404283:	stc    
  404284:	inc    ecx
  404285:	fsubr  DWORD PTR [edi+eax*2-0x20]
  404289:	pushf  
  40428a:	mov    ah,0xe4
  40428c:	jecxz  0x404237
  40428e:	push   eax
  40428f:	xlat   BYTE PTR ds:[ebx]
  404290:	aas    
  404291:	jge    0x4042c0
  404293:	pop    esi
  404294:	push   es
  404295:	sub    ebx,DWORD PTR [ebp-0x52]
  404298:	out    0xec,eax
  40429a:	add    al,0x4a
  40429c:	imul   bh
  40429e:	in     eax,0x6f
  4042a0:	pop    es
  4042a1:	test   al,0x7
  4042a3:	mov    al,BYTE PTR [edx+0x33]
  4042a6:	mov    dh,0x54
  4042a8:	mov    esi,0x5b1d9ade
  4042ad:	rol    BYTE PTR [esi],cl
  4042af:	cmp    DWORD PTR [edi-0x79689ef9],esi
  4042b5:	push   edx
  4042b6:	pop    ebx
  4042b7:	clc    
  4042b8:	sti    
  4042b9:	test   al,bl
  4042bb:	lods   al,BYTE PTR ds:[esi]
  4042bc:	out    0x5,eax
  4042be:	out    0x6b,al
  4042c0:	cmp    BYTE PTR [edx+0x47],cl
  4042c3:	popf   
  4042c4:	mov    ah,0x2f
  4042c6:	pop    esi
  4042c7:	xchg   ebx,eax
  4042c8:	(bad)  
  4042c9:	xlat   BYTE PTR ds:[ebx]
  4042ca:	add    ecx,DWORD PTR [ecx]
  4042cc:	(bad)  
  4042cd:	mov    ecx,0xf55c66a4
  4042d2:	inc    ecx
  4042d3:	out    dx,eax
  4042d4:	arpl   WORD PTR [ebp+ebx*8-0x4d654fb4],bp
  4042db:	mul    BYTE PTR [ebx]
  4042dd:	adc    DWORD PTR [ebp-0x37b6fd66],esi
  4042e3:	xchg   edi,eax
  4042e4:	rol    al,cl
  4042e6:	stos   BYTE PTR es:[edi],al
  4042e7:	rol    ebp,1
  4042e9:	aam    0xde
  4042eb:	xchg   esp,eax
  4042ec:	cwde   
  4042ed:	jmp    0x56f55f02
  4042f2:	lods   al,BYTE PTR ds:[esi]
  4042f3:	mov    edx,0xd49b851d
  4042f8:	jp     0x40428a
  4042fa:	ss je  0x4042b6
  4042fd:	jne    0x4042b8
  4042ff:	mov    al,ds:0xd94b322d
  404304:	xor    edi,DWORD PTR [eax]
  404306:	test   eax,0x79b4d6e9
  40430b:	test   dl,bl
  40430d:	dec    eax
  40430e:	dec    edx
  40430f:	adc    edi,DWORD PTR [eax]
  404311:	mov    ebx,0x8cca0f07
  404316:	aam    0xcf
  404318:	sbb    esi,ebx
  40431a:	cmp    edx,DWORD PTR [esi+0x52533169]
  404320:	push   eax
  404321:	ror    DWORD PTR [edi+0x63b133b9],0x64
  404328:	pop    edi
  404329:	or     eax,0x6b040ac0
  40432e:	sub    ah,BYTE PTR [eax+0x73]
  404331:	mov    bl,0xa7
  404333:	and    al,0x5d
  404335:	jns    0x4042db
  404337:	test   DWORD PTR [ebx-0x3c],0x11a1941b
  40433e:	hlt    
  40433f:	push   ds
  404340:	dec    edx
  404341:	(bad)  
  404343:	jmp    0x8038b4c0
  404348:	cmp    esp,DWORD PTR [edi]
  40434a:	(bad)  
  40434b:	jnp    0x40434b
  40434d:	enter  0xfa48,0x1b
  404351:	mov    dh,0x11
  404353:	ror    ecx,1
  404355:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404356:	xchg   ebx,eax
  404357:	call   0x1175:0xa3619641
  40435e:	in     al,0xdd
  404360:	rcr    BYTE PTR [ecx-0x42],cl
  404363:	or     DWORD PTR [esi-0x51],esi
  404366:	aas    
  404367:	fwait
  404368:	cmp    DWORD PTR [ebp+0x40767791],ebp
  40436e:	sub    dl,BYTE PTR [esi-0x4f]
  404371:	retf   0xb39e
  404374:	mov    edi,0x60735333
  404379:	mov    edi,DWORD PTR [esi]
  40437b:	mov    esi,0x2ded1ae8
  404380:	popf   
  404381:	stos   DWORD PTR es:[edi],eax
  404382:	fstp   DWORD PTR [ecx+0x8]
  404385:	jp     0x404364
  404387:	imul   ebp,DWORD PTR [ecx+0x33bdab0e],0x41
  40438e:	sbb    BYTE PTR [ebx],ah
  404390:	pop    edx
  404391:	dec    ebp
  404392:	push   cs
  404393:	mov    eax,ecx
  404395:	fnstsw WORD PTR [ebx+0x7b]
  404398:	pop    es
  404399:	iret   
  40439a:	dec    ebx
  40439b:	mov    ah,0x47
  40439d:	stc    
  40439e:	inc    ebx
  40439f:	ss jbe 0x404408
  4043a2:	arpl   WORD PTR [ebx+0x33],dx
  4043a5:	enter  0xc537,0xb6
  4043a9:	push   esp
  4043aa:	stc    
  4043ab:	xor    bl,bl
  4043ad:	pop    es
  4043ae:	jo     0x40436b
  4043b0:	push   es
  4043b1:	jmp    edx
  4043b3:	gs push ebp
  4043b5:	stc    
  4043b6:	cmp    BYTE PTR [edx+0x62],0x67
  4043ba:	mov    esi,0xc2114b14
  4043bf:	add    ch,bl
  4043c1:	ret    0xb76d
  4043c4:	pop    eax
  4043c5:	add    BYTE PTR [esi+0x42],0xbf
  4043c9:	or     ebp,DWORD PTR [ecx+0x4d50256e]
  4043cf:	loopne 0x404426
  4043d1:	adc    eax,0xd5de9276
  4043d6:	nop    esi
  4043d9:	bound  edi,QWORD PTR [ecx-0x3c]
  4043dc:	clc    
  4043dd:	outs   dx,BYTE PTR fs:[esi]
  4043df:	outs   dx,DWORD PTR ds:[esi]
  4043e0:	push   ebx
  4043e1:	xchg   esp,eax
  4043e2:	add    DWORD PTR [ebp+0x14a626cb],0x27d6067d
  4043ec:	jmp    0x374a:0xd321e6e8
  4043f3:	jg     0x404427
  4043f5:	xchg   ecx,eax
  4043f6:	jmp    0x25b0a1cc
  4043fb:	pop    ebp
  4043fc:	add    eax,0x113bee25
  404401:	jns    0x40445f
  404403:	aam    0xab
  404405:	test   DWORD PTR [edi+eax*1],0x62390709
  40440c:	jle    0x4043bb
  40440e:	(bad)  
  40440f:	in     al,dx
  404410:	imul   esp,DWORD PTR [ebx],0x2a3ce1d9
  404416:	addr16 push edi
  404418:	push   0x87307016
  40441d:	and    eax,0x787cc097
  404422:	test   BYTE PTR [eax],bh
  404424:	push   DWORD PTR [edx-0x4794c299]
  40442a:	rcr    DWORD PTR [edx],cl
  40442c:	mov    bh,0xb9
  40442e:	sub    ebx,DWORD PTR [ecx]
  404430:	jnp    0x40445e
  404432:	push   0x48
  404434:	and    BYTE PTR [esi-0x3f],dh
  404437:	sbb    dl,BYTE PTR [edi-0x15]
  40443a:	pushf  
  40443b:	mov    ds:0xfdf47be5,eax
  404440:	xchg   edx,eax
  404441:	mov    edi,0x16b2e33e
  404446:	mov    edx,0x86b91905
  40444b:	out    0x90,al
  40444d:	popf   
  40444e:	mov    dh,0xda
  404450:	shr    BYTE PTR [eax],cl
  404452:	lea    edx,[ecx-0x300b]
  404458:	mov    DWORD PTR [ebp+0xc],edx
  40445b:	mov    edi,DWORD PTR [ebp+0xc]
  40445e:	lea    edx,[ebp+ecx*4-0x5c]
  404462:	mov    ebx,DWORD PTR [edx]
  404464:	xor    edi,eax
  404466:	sub    edi,ebx
  404468:	mov    DWORD PTR [edx],edi
  40446a:	mov    edx,DWORD PTR [ebp+0x8]
  40446d:	xor    edx,eax
  40446f:	inc    ecx
  404470:	inc    DWORD PTR [ebp+0xc]
  404473:	add    edx,esi
  404475:	cmp    ecx,edx
  404477:	jmp    0x404850
  40447c:	bound  ebx,QWORD PTR [ecx+0x7afb3ae1]
  404482:	sti    
  404483:	fld    DWORD PTR [ebp+0x262f048b]
  404489:	xchg   DWORD PTR [esi+0x60207d],edi
  40448f:	add    BYTE PTR [ebx+eax*1-0x3fca0000],bh
  404496:	cs pop esi
  404498:	call   0xeeb8c110
  40449d:	dec    ebx
  40449e:	jbe    0x404447
  4044a0:	bound  eax,QWORD PTR [ebp-0x1b]
  4044a3:	mov    al,ds:0x1f327ab8
  4044a8:	mov    ebx,0x8bb5e90b
  4044ad:	outs   dx,DWORD PTR ds:[esi]
  4044ae:	dec    ebp
  4044af:	xchg   ecx,eax
  4044b0:	jecxz  0x404466
  4044b2:	mov    ecx,0x41aff7c6
  4044b7:	pop    ecx
  4044b8:	jns    0x40446c
  4044ba:	mul    DWORD PTR [ebx+ecx*4]
  4044bd:	jnp    0x404460
  4044bf:	cmp    BYTE PTR [ecx-0x15],cl
  4044c2:	xchg   BYTE PTR [ecx],bh
  4044c4:	repnz mov gs,WORD PTR ds:0x2cabd660
  4044cb:	jg     0x4044c0
  4044cd:	xchg   edi,eax
  4044ce:	mov    fs,WORD PTR [edx+0x543d2839]
  4044d4:	pop    ds
  4044d5:	pop    esi
  4044d6:	add    eax,0x80135d9d
  4044db:	punpcklwd mm3,mm1
  4044de:	lahf   
  4044df:	out    dx,eax
  4044e0:	shr    DWORD PTR [edx+ecx*4-0x2b],1
  4044e4:	inc    esi
  4044e5:	cmp    ebp,DWORD PTR [edi]
  4044e7:	icebp  
  4044e8:	pop    ebx
  4044e9:	add    esi,DWORD PTR fs:[edi]
  4044ec:	stc    
  4044ed:	int    0xa0
  4044ef:	xor    edx,ebx
  4044f1:	add    al,0x51
  4044f3:	loop   0x4044d5
  4044f5:	fwait
  4044f6:	or     ebx,DWORD PTR [eax+0x69]
  4044f9:	(bad)  
  4044fa:	les    ebp,FWORD PTR [esi-0x5c]
  4044fd:	ret    
  4044fe:	adc    BYTE PTR [esi+0x60],dl
  404501:	cld    
  404502:	mov    dl,0xa7
  404504:	icebp  
  404505:	cs mov ebx,0x256b8552
  40450b:	in     eax,dx
  40450c:	cdq    
  40450d:	dec    ebx
  40450e:	ja     0x404562
  404510:	sub    DWORD PTR [edi+esi*2-0x70ae6b08],ecx
  404517:	rcl    DWORD PTR [ebx-0x163dd2f2],0x62
  40451e:	fsub   DWORD PTR gs:[eax+0x21]
  404522:	xchg   edi,eax
  404523:	push   ecx
  404524:	add    BYTE PTR [eax+0x8],al
  404527:	jge    0x40453d
  404529:	mov    dh,0xca
  40452b:	mov    edx,0xc38d2b6e
  404530:	int    0x94
  404532:	xlat   BYTE PTR gs:[ebx]
  404534:	gs push ecx
  404536:	jl     0x40452d
  404538:	(bad)  
  404539:	adc    DWORD PTR [edx+esi*1],esp
  40453c:	neg    BYTE PTR [edx]
  40453e:	gs mov bh,0x32
  404541:	dec    eax
  404542:	jge    0x4044dd
  404544:	push   esi
  404545:	xor    eax,0xd11f1e8f
  40454a:	sub    esi,DWORD PTR [edi+0x1b8b396b]
  404550:	test   BYTE PTR [esi+0x49077eb4],0xc5
  404557:	fist   DWORD PTR [ebx]
  404559:	icebp  
  40455a:	mov    ch,0x3d
  40455c:	mov    ch,0x54
  40455e:	mov    eax,DWORD PTR [edx+edx*1-0x13e72d63]
  404565:	lods   eax,DWORD PTR ds:[esi]
  404566:	add    bl,dh
  404568:	jmp    0x72eb:0x87843ba1
  40456f:	sti    
  404570:	xchg   ebp,eax
  404571:	lods   eax,DWORD PTR ds:[esi]
  404572:	sbb    eax,0x5ee26f02
  404577:	sti    
  404578:	adc    al,0xc7
  40457a:	push   edi
  40457b:	(bad)  
  40457c:	int3   
  40457d:	xchg   ecx,eax
  40457e:	fidivr DWORD PTR [esi]
  404580:	cmc    
  404581:	enter  0x437a,0xcb
  404585:	fs and al,0x95
  404588:	in     al,0x5a
  40458a:	ins    DWORD PTR es:[edi],dx
  40458b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40458c:	push   edi
  40458d:	inc    esp
  40458e:	clc    
  40458f:	add    ebx,DWORD PTR [ebp+0x2]
  404592:	rcr    DWORD PTR [edi+0x6c],cl
  404595:	(bad)  
  404596:	out    dx,al
  404597:	inc    esi
  404598:	inc    BYTE PTR [edx+eax*2+0x5c40e5e3]
  40459f:	pop    ebx
  4045a0:	push   esi
  4045a1:	fiadd  WORD PTR ds:0x99f97630
  4045a7:	dec    BYTE PTR [eax-0x28ee3192]
  4045ad:	test   eax,0x3aae5a47
  4045b2:	sub    al,0xe6
  4045b4:	add    BYTE PTR [esi+0x6ad5d5d3],dh
  4045ba:	dec    esi
  4045bb:	ss nop
  4045bd:	jg     0x40462d
  4045bf:	jns    0x404623
  4045c1:	repnz push ecx
  4045c3:	jmp    0x404561
  4045c5:	push   0x32
  4045c7:	(bad)  
  4045c8:	ss cmp eax,0xea8f5aa3
  4045ce:	mov    ah,0xec
  4045d0:	ss dec esp
  4045d2:	sub    dl,BYTE PTR ss:0xd0d7a5b
  4045d9:	ss hlt 
  4045db:	cld    
  4045dc:	push   edx
  4045dd:	idiv   BYTE PTR [esi-0x3fc7e5f1]
  4045e3:	inc    ebp
  4045e4:	and    BYTE PTR ss:[ecx+0x37c09f3b],ch
  4045eb:	dec    edx
  4045ec:	ds xchg esp,eax
  4045ee:	in     al,0xf9
  4045f0:	ret    
  4045f1:	ret    
  4045f2:	xlat   BYTE PTR ds:[ebx]
  4045f3:	dec    esp
  4045f4:	cmp    al,0xac
  4045f6:	ret    0x3a1a
  4045f9:	mov    esi,0xbf01b8b0
  4045fe:	xchg   ebp,eax
  4045ff:	bound  esi,QWORD PTR [esi]
  404601:	mov    ch,0x10
  404603:	sbb    dl,BYTE PTR [esi-0x60]
  404606:	pop    ebx
  404607:	out    dx,al
  404608:	mov    dl,dl
  40460a:	pusha  
  40460b:	cli    
  40460c:	adc    DWORD PTR [edi],0xffffffaa
  40460f:	retf   0xb474
  404612:	dec    ecx
  404613:	pop    edi
  404614:	jmp    0x5f9d429a
  404619:	dec    edx
  40461a:	sub    DWORD PTR [edx-0x8],edx
  40461d:	pop    ss
  40461e:	jmp    0x72ea1065
  404623:	call   0xbc4c:0x68c01c39
  40462a:	jg     0x4045f6
  40462c:	dec    edx
  40462d:	jae    0x404621
  40462f:	fisttp DWORD PTR [edx+esi*8+0x7e467213]
  404636:	jp     0x4045df
  404638:	sti    
  404639:	clc    
  40463a:	ins    DWORD PTR es:[edi],dx
  40463b:	lods   eax,DWORD PTR ds:[esi]
  40463c:	sti    
  40463d:	sbb    ch,BYTE PTR [esi+edi*4-0x7c]
  404641:	jge    0x40465b
  404643:	jb     0x404609
  404645:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404646:	jg     0x404644
  404648:	push   ss
  404649:	jae    0x404636
  40464b:	je     0x4046bc
  40464d:	add    al,0x90
  40464f:	cli    
  404650:	adc    cl,dh
  404652:	pop    edx
  404653:	xor    al,0x5b
  404655:	sub    eax,0x6a0b8e91
  40465a:	(bad)  
  40465b:	mov    ?,WORD PTR [eax-0x243dafb6]
  404661:	scas   al,BYTE PTR es:[edi]
  404662:	aam    0x35
  404664:	pop    ebx
  404665:	fidiv  DWORD PTR [ecx+0x24]
  404668:	pop    ebp
  404669:	fwait
  40466a:	ss jl  0x404601
  40466d:	aad    0x96
  40466f:	and    eax,0xae400970
  404674:	pop    ebx
  404675:	repnz or DWORD PTR [edx+eiz*2+0x48],0x899c2e16
  40467e:	and    dl,BYTE PTR [edi-0x47]
  404681:	out    0xe6,al
  404683:	and    ecx,esi
  404685:	push   eax
  404686:	out    dx,eax
  404687:	jmp    0x7699:0x40176826
  40468e:	inc    esi
  40468f:	add    dh,cl
  404691:	xor    BYTE PTR [eax+0x27728a8e],al
  404697:	scas   al,BYTE PTR es:[edi]
  404698:	mov    gs,WORD PTR [eax]
  40469a:	mov    eax,ds:0xbe5f1626
  40469f:	sbb    DWORD PTR [ebx+ebp*8],ecx
  4046a2:	ins    BYTE PTR es:[edi],dx
  4046a3:	xchg   ebx,eax
  4046a4:	lods   al,BYTE PTR ds:[esi]
  4046a5:	fisttp WORD PTR [edx+edx*4+0x64]
  4046a9:	jle    0x404671
  4046ab:	mov    ah,0xe8
  4046ad:	dec    edx
  4046ae:	adc    eax,0xcdf4b9f3
  4046b3:	in     al,dx
  4046b4:	out    0x8c,al
  4046b6:	and    DWORD PTR [edi-0x6a47bcc0],0x29
  4046bd:	and    esp,DWORD PTR [ebp-0x4d1e431c]
  4046c3:	mov    ebx,0xf050d641
  4046c8:	adc    eax,0x72b87503
  4046cd:	fnop   
  4046cf:	jae    0x404672
  4046d1:	(bad)  [ebx]
  4046d3:	rcl    BYTE PTR [ebp+0x75],1
  4046d6:	add    DWORD PTR [edx+0x30],esp
  4046d9:	inc    ebp
  4046da:	(bad)  
  4046db:	push   ebx
  4046dc:	test   al,0xd9
  4046de:	(bad)  
  4046df:	rol    DWORD PTR [ebx-0x2f],cl
  4046e2:	fisttp DWORD PTR [eax+edx*1+0x5f]
  4046e6:	fwait
  4046e7:	mov    eax,0xa1b8765e
  4046ec:	or     ah,BYTE PTR [edx]
  4046ee:	aaa    
  4046ef:	(bad)  [ebx]
  4046f1:	xor    eax,0x845f6731
  4046f6:	jp     0x4046a9
  4046f8:	push   ebx
  4046f9:	and    cl,BYTE PTR [edi-0x24]
  4046fc:	jecxz  0x4046dd
  4046fe:	dec    ebp
  4046ff:	(bad)  
  404700:	(bad)  
  404701:	fld    st(4)
  404703:	ins    BYTE PTR es:[edi],dx
  404704:	fwait
  404705:	mov    ebp,0xfca0efb5
  40470a:	mov    ebp,0x91a1c31e
  40470f:	int3   
  404710:	loope  0x40478b
  404712:	test   eax,0x602a1b95
  404717:	dec    edx
  404718:	shl    dl,cl
  40471a:	and    cl,bl
  40471c:	sub    al,0xd
  40471e:	dec    ebp
  40471f:	push   edx
  404720:	loopne 0x40479e
  404722:	inc    edi
  404723:	popa   
  404724:	ja     0x404729
  404726:	push   ebx
  404727:	les    ebx,FWORD PTR [edx-0x3936b418]
  40472d:	jb     0x404797
  40472f:	bound  edx,QWORD PTR [eax+0x55]
  404732:	sub    al,0xa4
  404734:	and    BYTE PTR [esi+0x63],dh
  404737:	sbb    bl,BYTE PTR [edi]
  404739:	in     al,0x1b
  40473b:	jmp    0x404761
  40473d:	(bad)  [edx+0x40]
  404740:	cmp    al,0xc4
  404742:	jae    0x404775
  404744:	adc    DWORD PTR [eax+edi*4+0x69ea368],esi
  40474b:	push   edx
  40474c:	pop    esi
  40474d:	loop   0x404738
  40474f:	daa    
  404750:	xchg   edx,eax
  404751:	cmc    
  404752:	jg     0x40473b
  404754:	fsubr  QWORD PTR [eax+0x4e]
  404757:	pop    esi
  404758:	xchg   ecx,eax
  404759:	mov    ss,WORD PTR ds:0xb32cd8b2
  40475f:	jmp    0x4046ff
  404761:	fidiv  WORD PTR [ecx+0x15c2b58e]
  404767:	mov    BYTE PTR [ebp+ecx*4-0x5c],bl
  40476b:	jno    0x4047d2
  40476d:	adc    BYTE PTR [edi],0x4f
  404770:	jmp    0xfa18:0xd366b0f8
  404777:	mov    dl,dl
  404779:	data16 xor al,0x13
  40477c:	das    
  40477d:	inc    edx
  40477e:	into   
  40477f:	call   FWORD PTR ds:0x30516224
  404785:	sub    BYTE PTR [ebp-0x12],bh
  404788:	sbb    DWORD PTR [eax-0x542dddd6],ecx
  40478e:	xor    al,0x62
  404790:	xchg   BYTE PTR [eax],bh
  404792:	das    
  404793:	pop    ebx
  404794:	lods   eax,DWORD PTR ds:[esi]
  404795:	pop    edx
  404796:	adc    al,0xdb
  404798:	xchg   ebp,eax
  404799:	fwait
  40479a:	aas    
  40479b:	stos   DWORD PTR es:[edi],eax
  40479c:	call   0xfdc6e8ca
  4047a1:	jae    0x404756
  4047a3:	lock inc edx
  4047a5:	xor    dh,BYTE PTR [eax+0x21]
  4047a8:	in     eax,dx
  4047a9:	cmp    eax,0xe619a89c
  4047ae:	inc    esi
  4047af:	fstp   QWORD PTR [edi]
  4047b1:	mov    ds:0x2a0428fe,eax
  4047b6:	xor    ah,BYTE PTR [ebx]
  4047b8:	mov    al,0x16
  4047ba:	mov    ebx,ebp
  4047bc:	or     BYTE PTR [esi],bh
  4047be:	sbb    al,0x85
  4047c0:	fisub  WORD PTR [ebp-0x64e9fa4d]
  4047c6:	bound  esi,QWORD PTR [eax+0x1d]
  4047c9:	sub    bh,BYTE PTR [edx-0x63be34b4]
  4047cf:	dec    ebx
  4047d0:	or     BYTE PTR [edx],ch
  4047d2:	fisttp QWORD PTR [ebx+0x25cd61f8]
  4047d8:	jns    0x4047b4
  4047da:	sub    DWORD PTR [esi+0x7892eb69],0x7e18bb7c
  4047e4:	ror    BYTE PTR [esi+eax*1+0x2],0xe9
  4047e9:	mov    eax,ds:0xfcb89da1
  4047ee:	(bad)  
  4047ef:	in     eax,dx
  4047f0:	push   0x79
  4047f2:	ins    DWORD PTR es:[edi],dx
  4047f3:	out    dx,al
  4047f4:	push   eax
  4047f5:	dec    edx
  4047f6:	fwait
  4047f7:	jae    0x4047dd
  4047f9:	leave  
  4047fa:	out    dx,eax
  4047fb:	jo     0x4047c6
  4047fd:	das    
  4047fe:	sbb    eax,0xf535bd0
  404803:	xchg   edx,eax
  404804:	push   ecx
  404805:	(bad)  
  404806:	pop    ss
  404807:	sub    BYTE PTR [esi+0x6c],cl
  40480a:	push   ss
  40480b:	mov    edx,0x904c282e
  404810:	shr    DWORD PTR [edx+0x2f],cl
  404813:	leave  
  404814:	add    al,0x7d
  404816:	mov    al,ds:0xab70f7b2
  40481b:	pop    esp
  40481c:	(bad)  
  40481d:	mov    ds:0xc1344991,eax
  404822:	(bad)  
  404823:	ret    0x2cc8
  404826:	imul   edi,DWORD PTR [eax],0xffffffb2
  404829:	mov    al,0x10
  40482b:	dec    edx
  40482c:	sti    
  40482d:	mov    al,0x4
  40482f:	or     ebx,DWORD PTR [ebx-0x1ac8fb0e]
  404835:	xchg   ch,al
  404837:	cld    
  404838:	sub    eax,0x7bd000d3
  40483d:	push   es
  40483e:	cmp    eax,0x7fd319c6
  404843:	arpl   WORD PTR [ebp+0x62],sp
  404846:	gs div DWORD PTR ds:[edx+0x53]
  40484b:	lds    eax,FWORD PTR [ecx]
  40484d:	shr    BYTE PTR [eax-0x27],1
  404850:	jb     0x40445b
  404856:	mov    ecx,DWORD PTR [ebp-0x18]
  404859:	xor    ecx,eax
  40485b:	mov    eax,DWORD PTR [ebp+0x10]
  40485e:	add    ecx,esi
  404860:	mov    DWORD PTR [eax],ecx
  404862:	pop    edi
  404863:	pop    esi
  404864:	pop    ebx
  404865:	leave  
  404866:	ret    0xc
  404869:	pop    edi
  40486a:	cmp    eax,0x4f724670
  40486f:	jg     0x4048ae
  404871:	push   0xffffffdb
  404873:	pop    ebx
  404874:	jg     0x40483d
  404876:	mov    esp,0xd7ef
  40487b:	add    BYTE PTR [eax],al
  40487d:	xor    eax,0x2c000003
  404882:	and    al,0x3d
  404884:	and    al,0x33
  404886:	and    al,0x2b
  404888:	and    al,0x28
  40488a:	cld    
  40488b:	cld    
  40488c:	repnz std 
  40488e:	ja     0x40488c
  404890:	repnz (bad) 
  404892:	cld    
  404893:	outs   dx,BYTE PTR ds:[esi]
  404894:	data16 cld 
  404896:	or     al,0x87
  404898:	out    0xf1,eax
  40489a:	mov    BYTE PTR [edx-0x27f0045],cl
  4048a0:	pusha  
  4048a1:	xor    bh,cl
  4048a3:	js     0x404834
  4048a5:	xchg   BYTE PTR [esi-0x5321f2b],dl
  4048ab:	mov    esp,0xcf86448b
  4048b0:	inc    ebp
  4048b1:	or     eax,0xfd856e3d
  4048b6:	or     ebp,DWORD PTR [eax]
  4048b8:	mov    bl,dl
  4048ba:	add    al,0x50
  4048bc:	test   ax,0x7000
  4048c0:	les    ebp,FWORD PTR [ebx]
  4048c2:	mov    fs,ebp
  4048c4:	or     al,0x8a
  4048c6:	stos   BYTE PTR es:[edi],al
  4048c7:	add    edx,DWORD PTR [ebx+0x67]
  4048ca:	hlt    
  4048cb:	outs   dx,BYTE PTR ds:[esi]
  4048cc:	pop    ds
  4048cd:	add    dl,BYTE PTR [edi]
  4048cf:	cmp    DWORD PTR cs:[ecx+ebx*8],ebx
  4048d3:	sti    
  4048d4:	lds    edx,FWORD PTR [edi-0x7b]
  4048d7:	aas    
  4048d8:	mov    eax,0x4d17e82f
  4048dd:	out    dx,eax
  4048de:	or     al,0x9a
  4048e0:	int3   
  4048e1:	dec    eax
  4048e2:	mov    DWORD PTR ds:0xdf1b7ad8,0x61f48a91
  4048ec:	xchg   BYTE PTR [edx+eax*4],ch
  4048ef:	push   0xfffffffb
  4048f1:	push   ecx
  4048f2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4048f3:	dec    edi
  4048f4:	inc    ebp
  4048f5:	cs push cs
  4048f7:	mov    bl,dh
  4048f9:	(bad)  
  4048fa:	aam    0x73
  4048fc:	aas    
  4048fd:	xchg   edx,eax
  4048fe:	xlat   BYTE PTR ds:[ebx]
  4048ff:	lock inc ebx
  404901:	sti    
  404902:	js     0x4048fa
  404904:	jmp    0x14798b14
  404909:	inc    ebp
  40490a:	mov    ebx,0x67cf084
  40490f:	cmc    
  404910:	ds je  0x404981
  404913:	and    DWORD PTR [ebp-0x7373905b],esp
  404919:	(bad)  
  40491a:	push   ebp
  40491b:	lahf   
  40491c:	and    BYTE PTR fs:[ecx-0x25689cfb],dl
  404923:	enter  0x7cea,0x75
  404927:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404928:	sbb    ebx,ebx
  40492a:	sti    
  40492b:	xor    DWORD PTR [ecx],ebx
  40492d:	dec    ecx
  40492e:	push   0xffffffc7
  404930:	xchg   ecx,eax
  404931:	cmp    ch,BYTE PTR [edi]
  404933:	xchg   ecx,eax
  404934:	arpl   WORD PTR [eax+0x39afa21b],bp
  40493a:	dec    edi
  40493b:	add    DWORD PTR [ebx],edi
  40493d:	xor    BYTE PTR [eax],ah
  40493f:	jmp    0x4049ba
  404941:	mov    ebx,?
  404943:	push   0xb52037a4
  404948:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404949:	loop   0x40493e
  40494b:	(bad)  
  40494d:	popa   
  40494e:	cmp    bh,dh
  404950:	pop    edi
  404951:	ss inc esp
  404953:	dec    eax
  404954:	push   edi
  404955:	jnp    0x40498b
  404957:	mov    ecx,0xf4c54b15
  40495c:	adc    DWORD PTR [edx+0xd6deeed],0xbf53a414
  404966:	sbb    dl,ah
  404968:	inc    ebp
  404969:	jle    0x40491b
  40496b:	inc    ebx
  40496c:	add    DWORD PTR [esp+ebp*4+0x44],eax
  404970:	xor    ah,BYTE PTR [ebx]
  404972:	mov    al,0x70
  404974:	in     al,dx
  404975:	dec    esp
  404976:	cmp    edi,ebx
  404978:	fnstenv [edi+ecx*4-0x32]
  40497c:	inc    ebp
  40497d:	mov    ds:0x513aa061,eax
  404982:	addr16 dec eax
  404984:	dec    esp
  404985:	sbb    ch,BYTE PTR [ebx-0x70]
  404988:	repnz aam 0x98
  40498b:	retf   0xafd1
  40498e:	and    DWORD PTR [eax+0xa],ebp
  404991:	lods   al,BYTE PTR ds:[esi]
  404992:	leave  
  404993:	int3   
  404994:	inc    esp
  404995:	pop    ecx
  404996:	(bad)  
  404997:	call   0x32447f8f
  40499c:	fs imul esi,DWORD PTR cs:[esi+edi*2-0x45],0xfffffff2
  4049a3:	aaa    
  4049a4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4049a5:	int3   
  4049a6:	jb     0x40498f
  4049a8:	jp     0x4049b7
  4049aa:	pop    DWORD PTR [edx+ebp*1-0xefc689b]
  4049b1:	or     BYTE PTR [esi+0x116354b3],al
  4049b7:	pop    ds
  4049b8:	ret    
  4049b9:	jno    0x40499a
  4049bb:	ins    DWORD PTR es:[edi],dx
  4049bc:	and    bl,BYTE PTR [edi+0x7d]
  4049bf:	outs   dx,DWORD PTR cs:[esi]
  4049c1:	push   edi
  4049c2:	std    
  4049c3:	retf   
  4049c4:	add    dh,dh
  4049c6:	stos   BYTE PTR es:[edi],al
  4049c7:	sti    
  4049c8:	pop    edi
  4049c9:	ret    0x1cd8
  4049cc:	push   edx
  4049cd:	sbb    BYTE PTR ds:0xd3935d5,0x3a
  4049d4:	out    0x26,eax
  4049d6:	jg     0x4049c5
  4049d8:	dec    edx
  4049d9:	nop
  4049da:	ror    DWORD PTR [ebx-0x640aae41],1
  4049e0:	rcr    BYTE PTR [eax-0x4a],1
  4049e3:	mov    ebx,0x440b5a93
  4049e8:	jmp    0x75f7:0x64dc9897
  4049ef:	iret   
  4049f0:	mov    ebx,0xfabb82be
  4049f5:	adc    eax,0x85f2812e
  4049fa:	jg     0x4049d0
  4049fc:	fbstp  TBYTE PTR [eax+0x80d2e62]
  404a02:	pop    esi
  404a03:	push   cs
  404a04:	nop
  404a05:	scas   eax,DWORD PTR es:[edi]
  404a06:	and    DWORD PTR [esp+edx*8],ebp
  404a09:	in     al,0xa8
  404a0b:	(bad)  
  404a0c:	cs fcos 
  404a0f:	(bad)  
  404a10:	mov    cl,0x30
  404a12:	add    al,0x55
  404a14:	lea    esi,[ebx]
  404a16:	inc    edi
  404a17:	mov    esi,0xb62afcde
  404a1c:	sub    BYTE PTR ds:0xdc3ae09d,ch
  404a22:	jbe    0x404a77
  404a24:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404a25:	xor    eax,0x42b805b0
  404a2a:	test   eax,0x57cbd79c
  404a2f:	jbe    0x404a8f
  404a31:	xchg   DWORD PTR [ebp-0x42],ebx
  404a34:	adc    bl,al
  404a36:	sub    eax,0x785aee32
  404a3b:	in     eax,dx
  404a3c:	shl    DWORD PTR [ecx],cl
  404a3e:	xchg   BYTE PTR [eax+edi*2-0x38],dh
  404a42:	pop    ebx
  404a43:	hlt    
  404a44:	sar    DWORD PTR [edi],cl
  404a46:	sbb    al,0xc6
  404a48:	jae    0x404a0d
  404a4a:	shl    BYTE PTR [eax+eax*1],0x2
  404a4e:	ins    BYTE PTR es:[edi],dx
  404a4f:	in     al,0x64
  404a51:	jge    0x404ab7
  404a53:	xor    BYTE PTR [eax-0x52],ch
  404a56:	iret   
  404a57:	fadd   st,st(2)
  404a59:	and    bh,BYTE PTR [edx-0x4c]
  404a5c:	aad    0xc1
  404a5e:	popf   
  404a5f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404a60:	inc    ebp
  404a61:	mov    edi,0x34889037
  404a66:	mov    dh,0x48
  404a68:	jne    0x404a98
  404a6a:	mov    edi,0xb3b891c2
  404a6f:	dec    eax
  404a70:	sti    
  404a71:	jg     0x404a92
  404a73:	mov    cl,0x7e
  404a75:	add    bl,dl
  404a77:	ins    BYTE PTR es:[edi],dx
  404a78:	xor    eax,0x2fd0984b
  404a7d:	bound  esi,QWORD PTR [eax]
  404a7f:	adc    DWORD PTR [esi+edi*2+0x66122062],ebx
  404a86:	sub    ah,ah
  404a88:	jne    0x404aae
  404a8a:	loope  0x404aa0
  404a8c:	hlt    
  404a8d:	cmc    
  404a8e:	push   0x52d4bae
  404a93:	(bad)  
  404a94:	fsubr  QWORD PTR ss:[edx]
  404a97:	fmul   st,st(5)
  404a99:	mov    bh,0x98
  404a9b:	out    0x73,al
  404a9d:	add    dh,al
  404a9f:	loop   0x404afa
  404aa1:	xor    cl,BYTE PTR [ecx+0x970c913]
  404aa7:	mov    ds:0x5778cd53,eax
  404aac:	jb     0x404a79
  404aae:	(bad)  
  404ab0:	pop    eax
  404ab1:	sub    BYTE PTR [ebx],bl
  404ab3:	cmp    al,0x4
  404ab5:	daa    
  404ab6:	sahf   
  404ab7:	xchg   ebp,ecx
  404ab9:	push   ecx
  404aba:	cmp    bh,BYTE PTR [edx]
  404abc:	in     eax,dx
  404abd:	aad    0x8c
  404abf:	add    DWORD PTR [ecx],0x6b
  404ac2:	jb     0x404ac1
  404ac4:	sti    
  404ac5:	xchg   ebp,eax
  404ac6:	(bad)  
  404ac7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404ac8:	idiv   BYTE PTR [edi]
  404aca:	arpl   bp,sp
  404acc:	or     BYTE PTR [eax-0x7d],0x10
  404ad0:	in     al,dx
  404ad1:	popa   
  404ad2:	loope  0x404a64
  404ad4:	lods   al,BYTE PTR ds:[esi]
  404ad5:	aaa    
  404ad6:	push   0xffffff90
  404ad8:	mov    esp,0x276250ba
  404add:	lock dec esp
  404adf:	adc    ebp,DWORD PTR [edi+0x3fb764c6]
  404ae5:	popf   
  404ae6:	stc    
  404ae7:	(bad)  
  404ae8:	cdq    
  404ae9:	dec    eax
  404aea:	adc    ebx,ecx
  404aec:	dec    BYTE PTR [eax]
  404aee:	mov    ah,0x3a
  404af1:	ja     0x404b41
  404af3:	cmp    BYTE PTR [ecx],ah
  404af5:	inc    ebp
  404af6:	or     esi,ebx
  404af8:	pop    esp
  404af9:	sahf   
  404afa:	push   ebx
  404afb:	mov    ch,0x7
  404afd:	lods   al,BYTE PTR ds:[esi]
  404afe:	or     eax,0xbbf378ec
  404b03:	fiadd  WORD PTR [edi-0x71dc21f5]
  404b09:	fidiv  WORD PTR [esi-0x5825dc71]
  404b0f:	xchg   DWORD PTR [eax+0x71b74df1],eax
  404b15:	aaa    
  404b16:	push   eax
  404b17:	jno    0x404b56
  404b19:	and    esp,esp
  404b1b:	(bad)  
  404b1c:	lods   eax,DWORD PTR ds:[esi]
  404b1d:	das    
  404b1e:	cmp    eax,0xd204c991
  404b23:	fucomp st(2)
  404b25:	in     al,dx
  404b26:	sub    al,0x39
  404b28:	xor    edx,0xffffff8a
  404b2b:	dec    ebx
  404b2c:	pop    eax
  404b2d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404b2e:	jae    0x404b58
  404b30:	neg    DWORD PTR [edx+0x1c2892fc]
  404b36:	adc    al,0x37
  404b38:	mov    eax,0xa12b09b3
  404b3d:	mov    bh,0x62
  404b3f:	adc    eax,0x9a5a9172
  404b44:	outs   dx,DWORD PTR ds:[esi]
  404b45:	inc    esp
  404b46:	aam    0x0
  404b48:	out    dx,al
  404b49:	mov    eax,0xa1749ec4
  404b4e:	les    eax,FWORD PTR [ecx-0x7f]
  404b51:	mov    eax,ds:0x9bad3578
  404b56:	imul   esp,ebx,0xb256ba88
  404b5c:	lods   eax,DWORD PTR ds:[esi]
  404b5d:	xor    dl,BYTE PTR [esi+0x3a]
  404b60:	in     al,0xe3
  404b62:	dec    eax
  404b63:	mov    al,0xe
  404b65:	mov    eax,0x53fa9933
  404b6a:	or     eax,DWORD PTR [edx+edi*2]
  404b6d:	and    BYTE PTR [eax-0x70],dh
  404b70:	repz and DWORD PTR [edi-0x72],eax
  404b74:	xor    BYTE PTR [ebx-0x1e],dh
  404b77:	inc    edx
  404b78:	fadd   QWORD PTR [ebp-0x68]
  404b7b:	or     eax,0xbebd387f
  404b80:	add    ebx,DWORD PTR [edx]
  404b82:	xchg   edi,eax
  404b83:	aas    
  404b84:	sub    DWORD PTR [ecx-0x3e],esp
  404b87:	jmp    0xd7aa:0x6c50b78d
  404b8e:	aam    0xac
  404b90:	pop    esp
  404b91:	lods   eax,DWORD PTR ds:[esi]
  404b92:	pushf  
  404b93:	xchg   esi,eax
  404b94:	ins    BYTE PTR es:[edi],dx
  404b95:	xchg   esi,eax
  404b96:	cli    
  404b97:	dec    esp
  404b98:	xor    eax,0xef98ba20
  404b9d:	pop    ebx
  404b9e:	adc    DWORD PTR [edi-0x36],esp
  404ba1:	mov    ds:0x57fb7550,al
  404ba6:	mov    esi,0x3a8cfa39
  404bab:	js     0x404b39
  404bad:	mov    ch,0x22
  404baf:	jb     0x404b63
  404bb1:	adc    eax,0x90b248c7
  404bb6:	push   ebp
  404bb7:	mov    ebp,esp
  404bb9:	sub    esp,0x2c
  404bbc:	leave  
  404bbd:	ret    0x10
  404bc0:	icebp  
  404bc1:	pusha  
  404bc2:	(bad)  
  404bc4:	fscale 
  404bc6:	std    
  404bc7:	gs cwde 
  404bc9:	aaa    
  404bca:	ja     0x404bd7
  404bcc:	mov    ebx,0x35558240
  404bd1:	add    eax,DWORD PTR [eax]
  404bd3:	add    BYTE PTR ds:0xe8000003,dh
  404bd9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404bda:	add    al,0x1e
  404bdd:	adc    edi,edi
  404bdf:	push   esi
  404be0:	mov    ebx,0x1d743c0e
  404be5:	(bad)  
  404be6:	push   esp
  404be7:	mov    esi,0x30464c2a
  404bec:	push   edi
  404bed:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404bee:	ins    BYTE PTR es:[edi],dx
  404bef:	call   FWORD PTR ds:[ecx]
  404bf2:	ret    
  404bf3:	imul   ecx,DWORD PTR [ebx+0x73],0xacbeb68e
  404bfa:	push   ebp
  404bfb:	push   edx
  404bfc:	sbb    eax,0xcf013665
  404c01:	bound  ecx,QWORD PTR [ebx+edi*1]
  404c04:	fnstenv [edx]
  404c06:	inc    ebp
  404c07:	(bad)
  404c0b:	mov    esp,0xe997132d
  404c10:	lods   eax,DWORD PTR ds:[esi]
  404c11:	xchg   BYTE PTR [esi+0x51],ah
  404c14:	ror    BYTE PTR [eax-0x7a],1
  404c17:	jp     0x404c13
  404c19:	or     ecx,edx
  404c1b:	ja     0x404ba0
  404c1d:	or     ebx,DWORD PTR [ebx+0x64c667a1]
  404c23:	retf   
  404c24:	jecxz  0x404c29
  404c26:	xchg   esi,eax
  404c27:	bnd jo 0x404bf7
  404c2a:	sbb    al,0x93
  404c2c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404c2d:	outs   dx,DWORD PTR ds:[esi]
  404c2e:	xchg   esp,eax
  404c2f:	pop    ebx
  404c30:	iret   
  404c31:	in     al,0xce
  404c33:	or     al,BYTE PTR [ebp-0x779d989b]
  404c39:	sub    BYTE PTR [edx+0x4bfd86a7],0x1e
  404c40:	inc    ebx
  404c41:	ds mov esp,0xe21f0440
  404c47:	push   ebx
  404c48:	lods   eax,DWORD PTR ds:[esi]
  404c49:	aaa    
  404c4a:	cmp    DWORD PTR [ecx],eax
  404c4c:	jl     0x404c00
  404c4e:	adc    DWORD PTR [ebx-0x32],ebp
  404c51:	inc    ebp
  404c52:	ins    DWORD PTR es:[edi],dx
  404c53:	adc    al,BYTE PTR [eax-0x210ca115]
  404c59:	and    eax,0xf69b5cf6
  404c5e:	repz int 0xd1
  404c61:	ja     0x404c00
  404c63:	add    BYTE PTR [esi+0x54f0f07],bl
  404c69:	pop    esi
  404c6a:	test   al,0xa
  404c6c:	or     esi,DWORD PTR [edx+esi*8]
  404c6f:	lods   eax,DWORD PTR ds:[esi]
  404c70:	dec    edi
  404c71:	jg     0x404ce0
  404c73:	add    DWORD PTR [esi+0x47],0xffffffdf
  404c77:	mov    fs,WORD PTR [eax]
  404c79:	(bad)  
  404c7a:	into   
  404c7b:	push   ebx
  404c7c:	inc    edx
  404c7d:	(bad)  
  404c7e:	popf   
  404c7f:	mov    bh,0x7a
  404c81:	int3   
  404c82:	xor    eax,0xb49412f8
  404c87:	or     BYTE PTR [esi],al
  404c89:	test   dl,0xda
  404c8c:	sub    BYTE PTR [esi],bl
  404c8e:	jmp    0x5d60:0x44b4ad70
  404c95:	arpl   dx,cx
  404c97:	mov    bh,0xe5
  404c99:	mov    bl,0xb0
  404c9b:	push   ss
  404c9c:	(bad)  
  404c9d:	inc    ebp
  404c9e:	mov    al,0xf3
  404ca0:	push   0x50
  404ca2:	repz pushf 
  404ca4:	xor    BYTE PTR [ebp-0x72],dl
  404ca7:	bnd jns 0x404d29
  404caa:	jl     0x404c3d
  404cac:	adc    al,0x4
  404cae:	cdq    
  404caf:	push   cs
  404cb0:	adc    eax,0x2a759b91
  404cb5:	sub    esp,esp
  404cb7:	mov    edx,0x27a9991a
  404cbc:	js     0x404c6b
  404cbe:	add    bl,0xaa
  404cc1:	mov    ebp,0x7dea0c16
  404cc6:	fsubr  QWORD PTR [ecx]
  404cc8:	ret    0xcd7c
  404ccb:	ins    BYTE PTR es:[edi],dx
  404ccc:	add    esp,DWORD PTR [esi+eax*1+0x77]
  404cd0:	xchg   edx,eax
  404cd1:	enter  0xb639,0x31
  404cd5:	cmps   DWORD PTR ss:[si],DWORD PTR es:[di]
  404cd8:	push   cs
  404cd9:	aam    0xbe
  404cdb:	push   es
  404cdc:	jbe    0x404d36
  404cde:	daa    
  404cdf:	pop    ebx
  404ce0:	fisttp DWORD PTR [edi+0x11]
  404ce3:	and    dl,BYTE PTR [ebx]
  404ce5:	push   eax
  404ce6:	xchg   BYTE PTR [eax],cl
  404ce8:	aad    0x23
  404cea:	retf   
  404ceb:	stos   DWORD PTR es:[edi],eax
  404cec:	or     eax,0xa708999e
  404cf1:	aas    
  404cf2:	repz imul BYTE PTR [esi+0x47af93e5]
  404cf9:	jbe    0x404d39
  404cfb:	or     eax,0x804f448b
  404d00:	adc    ah,BYTE PTR [esp]
  404d03:	push   edi
  404d04:	jle    0x404d0b
  404d06:	retw   
  404d08:	sub    BYTE PTR [ebx+eiz*4-0x6a],cl
  404d0c:	adc    al,0x8d
  404d0e:	ret    0x7af9
  404d11:	retf   0x653a
  404d14:	cmc    
  404d15:	mov    edx,0x57fc1029
  404d1a:	add    DWORD PTR [edi],eax
  404d1c:	ss mov ecx,0xe201f1f2
  404d22:	je     0x404d22
  404d24:	retf   
  404d25:	add    al,ah
  404d27:	or     esp,DWORD PTR [edi]
  404d29:	mov    bl,0xe8
  404d2b:	out    0x43,al
  404d2d:	xor    ecx,DWORD PTR [esp+ebx*8-0x69]
  404d31:	fucomi st,st(3)
  404d33:	sahf   
  404d34:	sahf   
  404d35:	(bad)  
  404d36:	jecxz  0x404d62
  404d38:	rol    BYTE PTR [edx-0x43],0xfa
  404d3c:	nop
  404d3d:	dec    ebp
  404d3e:	mov    eax,ds:0x6621c8e9
  404d43:	push   cs
  404d44:	pop    ebp
  404d45:	push   ecx
  404d46:	popa   
  404d47:	inc    ebx
  404d48:	push   es
  404d49:	fcmove st,st(1)
  404d4b:	xchg   esp,edx
  404d4d:	xchg   edi,eax
  404d4e:	and    al,0x21
  404d50:	in     eax,dx
  404d51:	and    al,0xbc
  404d53:	in     eax,dx
  404d54:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404d55:	aaa    
  404d56:	cmp    ebx,DWORD PTR [ebx]
  404d58:	repz mov WORD PTR [edx+0x5a],fs
  404d5c:	rcl    DWORD PTR [edx-0x72],1
  404d5f:	test   DWORD PTR [ebp-0x2f],ebp
  404d62:	add    ch,BYTE PTR [ebx]
  404d64:	mov    edi,0x1e99514
  404d69:	pop    ebp
  404d6a:	dec    eax
  404d6b:	adc    BYTE PTR [ebx],dl
  404d6d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404d6e:	mov    al,ds:0x2a224653
  404d73:	push   0x37362bf0
  404d78:	popf   
  404d79:	dec    edx
  404d7a:	inc    esi
  404d7b:	or     eax,0xaf49fd73
  404d80:	mov    edi,0x1da5ded4
  404d85:	sub    dh,dh
  404d87:	loop   0x404dea
  404d89:	(bad)  
  404d8a:	jge    0x404d77
  404d8c:	vpaddb ymm0,ymm1,YMMWORD PTR [edx]
  404d90:	inc    esi
  404d91:	int    0x5
  404d93:	mov    al,BYTE PTR [edi-0x4e]
  404d96:	and    cl,BYTE PTR [ecx]
  404d98:	jmp    0x404db6
  404d9a:	pop    ss
  404d9b:	add    eax,ecx
  404d9d:	adc    al,0x55
  404d9f:	cmp    BYTE PTR [edi],al
  404da1:	out    dx,al
  404da2:	sti    
  404da3:	mov    edx,DWORD PTR [ebp+edi*8+0x39]
  404da7:	(bad)  [ecx-0x3b]
  404daa:	scas   eax,DWORD PTR es:[edi]
  404dab:	sbb    eax,DWORD PTR ds:0x437af32
  404db1:	or     edx,esp
  404db3:	mov    DWORD PTR [ebx-0x11f2175a],esi
  404db9:	dec    edx
  404dba:	data16 mov cl,0xdb
  404dbd:	test   DWORD PTR [ebp+0x4ef88550],ecx
  404dc3:	inc    BYTE PTR [edi+0x5]
  404dc6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404dc7:	es stc 
  404dc9:	adc    DWORD PTR [ecx+edx*8],ebp
  404dcc:	jne    0x404de9
  404dce:	sbb    BYTE PTR [esi-0x18326b44],al
  404dd4:	sub    eax,0x4e43a27b
  404dd9:	sbb    esi,ecx
  404ddb:	and    BYTE PTR [edx-0xa4f4f3a],ah
  404de1:	and    BYTE PTR [edx],ah
  404de3:	ret    0x1e2d
  404de6:	cmc    
  404de7:	nop
  404de8:	fild   WORD PTR [edx-0x38b68575]
  404dee:	and    al,BYTE PTR [edx+0x4b203cfe]
  404df4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404df5:	sti    
  404df6:	pop    eax
  404df7:	mov    cl,0x8e
  404df9:	push   ds
  404dfa:	leave  
  404dfb:	inc    DWORD PTR [eax]
  404dfd:	push   esi
  404dfe:	retf   0x920f
  404e01:	jbe    0x404ddb
  404e03:	xor    al,0xc9
  404e05:	ror    DWORD PTR [edi+0x22e16a95],0xf4
  404e0c:	pop    esp
  404e0d:	jbe    0x404ddd
  404e0f:	cwde   
  404e10:	xchg   ebp,eax
  404e11:	bound  eax,QWORD PTR [edi-0x4a]
  404e14:	jne    0x404dc9
  404e16:	leave  
  404e17:	je     0x404e1d
  404e19:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404e1a:	xor    esp,edi
  404e1c:	push   ds
  404e1d:	in     eax,0x12
  404e1f:	rcr    DWORD PTR [edi-0x40],1
  404e22:	inc    ebp
  404e23:	fidivr WORD PTR [eax+0x6fc918b5]
  404e29:	jno    0x404e54
  404e2b:	xor    bl,al
  404e2d:	pop    ds
  404e2e:	out    dx,eax
  404e2f:	fimul  WORD PTR [edx+esi*4-0x2f16d6d1]
  404e36:	pop    es
  404e37:	fwait
  404e38:	mov    DWORD PTR [ecx],esi
  404e3a:	imul   esp,eax,0x26037131
  404e40:	scas   eax,DWORD PTR es:[edi]
  404e41:	xchg   DWORD PTR [ebx],ebx
  404e43:	xchg   ebp,eax
  404e44:	pop    eax
  404e45:	mov    esp,0x8e103c0d
  404e4a:	ins    DWORD PTR es:[edi],dx
  404e4b:	fiadd  DWORD PTR [ebx]
  404e4d:	leave  
  404e4e:	(bad)  
  404e4f:	and    al,0x22
  404e51:	mov    al,ds:0x7d76219f
  404e56:	jp     0x404ea5
  404e58:	add    ah,ch
  404e5a:	jne    0x404e03
  404e5c:	pop    ecx
  404e5d:	push   ebx
  404e5e:	pop    edi
  404e5f:	cmp    BYTE PTR [esi],cl
  404e61:	xchg   edx,eax
  404e62:	gs (bad) 
  404e64:	test   DWORD PTR [ebp+0x6abb7ea7],0xbb7f43f6
  404e6e:	xor    dh,BYTE PTR [ecx-0x2c236f48]
  404e74:	add    DWORD PTR [edx-0x1a],ecx
  404e77:	ins    BYTE PTR es:[edi],dx
  404e78:	frstor [esi-0x70496c9a]
  404e7e:	dec    ecx
  404e7f:	adc    DWORD PTR [eax+esi*4-0x55043814],ebx
  404e86:	mov    cl,0x44
  404e88:	int    0x0
  404e8a:	hlt    
  404e8b:	sbb    BYTE PTR [eax+ecx*4+0x530cb2d8],bh
  404e92:	dec    ebp
  404e93:	aas    
  404e94:	lods   al,BYTE PTR ds:[esi]
  404e95:	inc    eax
  404e96:	pusha  
  404e97:	sbb    BYTE PTR [ebx+0x75],dh
  404e9a:	or     BYTE PTR [edi],al
  404e9c:	sti    
  404e9d:	adc    eax,DWORD PTR [ebp-0xbfcaf3d]
  404ea3:	dec    esp
  404ea4:	push   edi
  404ea5:	cmp    esi,DWORD PTR ds:0x411e8fb0
  404eab:	and    eax,0x4cb14f1e
  404eb0:	scas   al,BYTE PTR es:[edi]
  404eb1:	shl    DWORD PTR [ebx-0x25819b71],0xc7
  404eb8:	xor    ebp,DWORD PTR [eax+ebx*4]
  404ebb:	jno    0x404eac
  404ebd:	mov    ecx,0x62ba1cc8
  404ec2:	icebp  
  404ec3:	xchg   esi,eax
  404ec4:	or     eax,0x66e1fdc5
  404ec9:	jp     0x404ef0
  404ecb:	call   0x7c54:0xae04e934
  404ed2:	mov    esi,0x9de1d9d4
  404ed7:	sti    
  404ed8:	lea    ebp,[edi-0x22]
  404edb:	test   DWORD PTR [esi],esp
  404edd:	loop   0x404f0d
  404edf:	sahf   
  404ee0:	fcom   QWORD PTR [edi+0x5b]
  404ee3:	xchg   ebp,eax
  404ee4:	test   BYTE PTR [esi-0x49],bh
  404ee7:	loop   0x404f0a
  404ee9:	aad    0x80
  404eeb:	imul   esi,DWORD PTR [ebx],0xedd73648
  404ef1:	jnp    0x404f39
  404ef3:	add    dl,al
  404ef5:	mov    dl,0x3f
  404ef7:	scas   al,BYTE PTR es:[edi]
  404ef8:	fldenv [eax]
  404efa:	xchg   edi,eax
  404efb:	repnz pop ebx
  404efd:	adc    al,0x12
  404eff:	pop    ecx
  404f00:	add    al,0x3b
  404f02:	out    0x40,eax
  404f04:	push   ss
  404f05:	inc    ebx
  404f06:	cmp    dh,BYTE PTR [edi-0x463c310c]
  404f0c:	and    edx,DWORD PTR [ebp-0x75]
  404f0f:	in     al,dx
  404f10:	push   ecx
  404f11:	inc    DWORD PTR ds:0x4214e0
  404f17:	mov    DWORD PTR [ebp-0x4],0x0
  404f1e:	add    DWORD PTR ds:0x4236b4,edi
  404f24:	mov    eax,DWORD PTR [ebp-0x4]
  404f27:	adc    DWORD PTR ds:0x423744,0x4214f8
  404f31:	sub    eax,0x300b
  404f36:	xor    eax,0x300a
  404f3b:	add    eax,0x783773
  404f40:	adc    DWORD PTR ds:0x42366c,0x423700
  404f4a:	mov    DWORD PTR [ebp-0x4],eax
  404f4d:	xor    eax,eax
  404f4f:	leave  
  404f50:	ret    0xc
  404f53:	les    esp,FWORD PTR [edx]
  404f55:	add    ebp,esi
  404f57:	out    0xf7,eax
  404f59:	hlt    
  404f5a:	xor    eax,ebx
  404f5c:	sahf   
  404f5d:	sbb    al,0xee
  404f5f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404f60:	je     0x404f1f
  404f62:	das    
  404f63:	push   0x6
  404f65:	add    BYTE PTR [eax],al
  404f67:	xor    eax,0xb1000003
  404f6c:	in     eax,0xcb
  404f6e:	sahf   
  404f6f:	xor    DWORD PTR [edx],eax
  404f71:	in     al,0xc4
  404f73:	(bad)  
  404f74:	and    eax,0x6394ad64
  404f79:	lds    ecx,FWORD PTR [ebp-0x6fe5c91a]
  404f7f:	std    
  404f80:	xor    ecx,DWORD PTR [edi-0x28]
  404f83:	mov    eax,DWORD PTR ds:0xe057388a
  404f89:	add    eax,0xbb817a3e
  404f8e:	xchg   ebp,eax
  404f8f:	xor    BYTE PTR [esi-0x26f9ac98],al
  404f95:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404f96:	dec    eax
  404f97:	outs   dx,BYTE PTR ds:[esi]
  404f98:	push   ebp
  404f99:	add    eax,0x264830e5
  404f9e:	jnp    0x404fbd
  404fa0:	bound  edx,QWORD PTR [ebp+ebp*8-0x6ff9b5df]
  404fa7:	mov    ah,0xf
  404fa9:	sub    eax,edi
  404fab:	mov    al,ds:0xc2423c68
  404fb0:	and    al,0x2e
  404fb2:	popf   
  404fb3:	scas   eax,DWORD PTR es:[edi]
  404fb4:	mov    esp,0xe3bbfd1a
  404fb9:	pusha  
  404fba:	jecxz  0x405005
  404fbc:	pop    ebp
  404fbd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404fbe:	sub    eax,0x77b13f89
  404fc3:	jnp    0x404fea
  404fc5:	push   edi
  404fc6:	push   ecx
  404fc7:	aaa    
  404fc8:	ins    DWORD PTR es:[edi],dx
  404fc9:	mov    cs,WORD PTR [ebp+0x45]
  404fcc:	jmp    0x5219e194
  404fd1:	cdq    
  404fd2:	jl     0x405032
  404fd4:	push   ebx
  404fd5:	cdq    
  404fd6:	mov    bh,0x9a
  404fd8:	pop    ss
  404fd9:	call   0x8209:0xa477e2f
  404fe0:	adc    al,0x16
  404fe2:	sbb    edi,edi
  404fe4:	or     edi,DWORD PTR [ecx]
  404fe6:	cmp    BYTE PTR [ecx+0x29],cl
  404fe9:	or     BYTE PTR [ecx+0x63],dh
  404fec:	repz ror eax,1
  404fef:	cli    
  404ff0:	dec    eax
  404ff1:	push   ecx
  404ff2:	int    0x4e
  404ff4:	fcom   QWORD PTR [eax]
  404ff6:	pusha  
  404ff7:	sbb    al,0xe
  404ff9:	nop
  404ffa:	aam    0x15
  404ffc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404ffd:	das    
  404ffe:	(bad)  
  405000:	mov    esp,0x50936d89
  405005:	mov    ch,0xd6
  405007:	mov    bl,ah
  405009:	xchg   ecx,eax
  40500a:	xchg   ebp,eax
  40500b:	lahf   
  40500c:	fistp  QWORD PTR [edi]
  40500e:	sub    al,ch
  405010:	adc    DWORD PTR [ecx+0x1a],ebp
  405013:	push   esp
  405014:	jne    0x405003
  405016:	push   esi
  405017:	iret   
  405018:	pop    eax
  405019:	jbe    0x40505f
  40501b:	cwde   
  40501c:	jp     0x405062
  40501e:	xchg   DWORD PTR [ecx],esi
  405020:	xor    esp,DWORD PTR [ecx-0x7a]
  405023:	aaa    
  405024:	push   ss
  405025:	jne    0x40508f
  405027:	nop
  405028:	cmp    eax,0x6509ff5e
  40502d:	dec    esi
  40502e:	sbb    al,0xfe
  405030:	xlat   BYTE PTR ds:[ebx]
  405031:	sub    DWORD PTR [ecx+0x73],edi
  405034:	xlat   BYTE PTR ds:[ebx]
  405035:	(bad)  
  405036:	jmp    0xd02d0fea
  40503b:	add    ah,BYTE PTR [edx+0x75cd7799]
  405041:	data16 add al,0x7f
  405044:	sub    ebp,ecx
  405046:	imul   esp,DWORD PTR [edi-0x4cbaa80f],0x716d8c4a
  405050:	lds    edx,FWORD PTR fs:[esi+ecx*1-0x7b4b6dba]
  405058:	mov    ecx,0x682c0f48
  40505d:	in     al,dx
  40505e:	push   esi
  40505f:	aas    
  405060:	sbb    dh,BYTE PTR [ebp-0xd]
  405063:	(bad)  
  405064:	addr16 js 0x4050b2
  405067:	test   DWORD PTR [edx+eiz*2],esp
  40506a:	xchg   edx,eax
  40506b:	cld    
  40506c:	iret   
  40506d:	(bad)  
  40506e:	dec    DWORD PTR [ecx]
  405070:	adc    DWORD PTR [eax-0x4d],0xa16b3f0c
  405077:	pop    ebx
  405078:	retf   0x4b6b
  40507b:	js     0x4050a1
  40507d:	xchg   esp,eax
  40507e:	inc    esp
  40507f:	push   eax
  405080:	cdq    
  405081:	or     BYTE PTR [ebx],ah
  405083:	jns    0x4050e5
  405085:	out    0xb5,eax
  405087:	or     dh,bh
  405089:	push   es
  40508a:	daa    
  40508b:	cmp    esp,DWORD PTR ds:[edx-0x5866d966]
  405092:	and    ebp,0xffffff9f
  405095:	and    eax,0xb4a8613c
  40509a:	call   0xd297:0xd48f033e
  4050a1:	cmp    DWORD PTR ds:0x62b293d2,esi
  4050a7:	out    dx,eax
  4050a8:	inc    esi
  4050a9:	xchg   ebx,eax
  4050aa:	call   0x84cd:0x68b15c06
  4050b1:	sbb    BYTE PTR [ebp-0x7b],dh
  4050b4:	xchg   esp,eax
  4050b5:	fwait
  4050b6:	lods   al,BYTE PTR ds:[esi]
  4050b7:	paddb  mm3,QWORD PTR [edx]
  4050ba:	push   edx
  4050bb:	in     ax,dx
  4050bd:	push   esp
  4050be:	mov    ds:0x97d90283,eax
  4050c3:	mov    bl,0xd5
  4050c5:	cdq    
  4050c6:	xchg   DWORD PTR [eax+0x71],edx
  4050c9:	and    al,0xa5
  4050cb:	imul   DWORD PTR [ebx-0x12ab490a]
  4050d1:	(bad)  
  4050d2:	popa   
  4050d3:	scas   eax,DWORD PTR es:[edi]
  4050d4:	das    
  4050d5:	push   ss
  4050d6:	ins    BYTE PTR es:[edi],dx
  4050d7:	mov    ds:0xd7d5e7c5,al
  4050dc:	inc    DWORD PTR [ebx-0x22]
  4050df:	mov    DWORD PTR [ebp+0x5826499c],eax
  4050e5:	push   ebx
  4050e7:	ret    
  4050e8:	scas   eax,DWORD PTR es:[edi]
  4050e9:	xor    eax,0xbd059aa8
  4050ee:	or     eax,0x55bec46e
  4050f3:	add    esi,0x956f9cde
  4050f9:	ja     0x40514d
  4050fb:	or     edi,DWORD PTR [esp+ecx*1]
  4050fe:	add    DWORD PTR [eax-0x74001070],ebx
  405104:	and    BYTE PTR [ebx],0x8c
  405107:	(bad)  
  405108:	(bad)  
  405109:	call   0x2147:0x3948bd12
  405110:	pushf  
  405111:	cmp    eax,0x7f53eaca
  405116:	out    0x76,al
  405118:	(bad)  
  405119:	xor    esp,DWORD PTR [esi-0x5d]
  40511c:	jecxz  0x405161
  40511e:	mov    bl,0x16
  405120:	pop    ebx
  405121:	lea    edi,[ecx+0x0]
  405124:	mov    gs,WORD PTR [ebp+0x4f]
  405127:	inc    esi
  405128:	adc    eax,0x5f47bf63
  40512d:	pop    ecx
  40512e:	ret    0x909b
  405131:	sbb    edx,DWORD PTR [ebx+0x23]
  405134:	inc    ebp
  405135:	cmp    ecx,DWORD PTR [ebp-0x6ee775e0]
  40513b:	jmp    0x40514a
  40513d:	pop    ebp
  40513e:	gs push 0xffffffdc
  405141:	mov    dl,0x8f
  405143:	retf   
  405144:	jge    0x40511a
  405146:	fs (bad) 
  405148:	pop    ds
  405149:	mov    WORD PTR [esi-0x425d214e],fs
  40514f:	pmullw mm1,QWORD PTR [edx]
  405152:	(bad)  
  405153:	adc    DWORD PTR [edi+0x49],ecx
  405156:	fistp  QWORD PTR [esi-0x5ff05d7f]
  40515c:	add    BYTE PTR [ebp-0x61],dh
  40515f:	nop/reserved BYTE PTR [edi-0x2679518]
  405166:	pop    eax
  405167:	aas    
  405168:	pop    edi
  405169:	add    eax,0x607f4e13
  40516e:	jg     0x4051b3
  405170:	jl     0x405177
  405172:	mov    cl,0x98
  405174:	add    BYTE PTR [edi-0x5],cl
  405177:	cli    
  405178:	shl    DWORD PTR [ecx-0x1e7b88a3],0x72
  40517f:	sub    DWORD PTR ds:0x4daf470c,ecx
  405185:	out    0xe9,eax
  405187:	and    BYTE PTR [ecx+eiz*4+0x2d88d2f9],0x28
  40518f:	pop    edx
  405190:	xchg   edi,eax
  405191:	xlat   BYTE PTR ds:[ebx]
  405192:	pop    eax
  405193:	std    
  405194:	cmc    
  405195:	cdq    
  405196:	sti    
  405197:	or     BYTE PTR [edi],dh
  405199:	pop    esp
  40519a:	mov    ds:0xad879f7d,al
  40519f:	stos   DWORD PTR es:[edi],eax
  4051a0:	repz idiv BYTE PTR [esi+0x4a]
  4051a4:	or     ebp,ebp
  4051a6:	and    bl,cl
  4051a8:	mov    dh,0x55
  4051aa:	adc    cl,BYTE PTR [edx-0x66]
  4051ad:	dec    esp
  4051ae:	scas   al,BYTE PTR es:[edi]
  4051af:	fisubr DWORD PTR [ecx-0x27]
  4051b2:	cmp    bh,ah
  4051b4:	adc    ebx,DWORD PTR [ebp-0x6e5ed346]
  4051ba:	mov    esp,0x70a90575
  4051bf:	out    dx,al
  4051c0:	xchg   ebx,eax
  4051c1:	das    
  4051c2:	add    edi,DWORD PTR [ecx]
  4051c4:	(bad)  
  4051c6:	cmp    edx,DWORD PTR [ecx+esi*8-0x3a]
  4051ca:	clc    
  4051cb:	lods   ax,WORD PTR ds:[esi]
  4051cd:	jmp    0x4051fe
  4051cf:	ja     0x4051a0
  4051d1:	(bad)
  4051d5:	xchg   esp,eax
  4051d6:	jno    0x40522f
  4051d8:	stos   BYTE PTR es:[edi],al
  4051d9:	or     al,0xaf
  4051db:	sti    
  4051dc:	in     eax,dx
  4051dd:	push   eax
  4051de:	and    esp,DWORD PTR [esi+0x20]
  4051e1:	adc    esi,ecx
  4051e3:	(bad)  
  4051e4:	add    ah,BYTE PTR [edx+edx*4+0x40a6c25d]
  4051eb:	fnstcw WORD PTR [esi+0x76efc414]
  4051f1:	pop    fs
  4051f3:	jge    0x405182
  4051f5:	enter  0xd206,0xe6
  4051f9:	mov    eax,ds:0x84ea5442
  4051fe:	xor    esp,eax
  405200:	jecxz  0x40527c
  405202:	dec    ecx
  405203:	sub    BYTE PTR [edi-0x5f],cl
  405206:	pop    ds
  405207:	outs   dx,BYTE PTR ds:[esi]
  405208:	mov    dh,0x7a
  40520a:	and    edx,DWORD PTR [ecx+0x71601644]
  405210:	cmp    esi,esi
  405212:	pop    edx
  405213:	xor    cl,BYTE PTR [ebx]
  405215:	std    
  405216:	cmc    
  405217:	(bad)  
  405218:	cmp    ch,BYTE PTR [esi+0x74]
  40521b:	(bad)  
  40521d:	push   edx
  40521e:	into   
  40521f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405220:	xor    DWORD PTR [edx],edi
  405222:	mov    dh,0x21
  405224:	and    DWORD PTR ds:0xa936e935,ebx
  40522a:	xchg   esi,eax
  40522b:	(bad)  
  40522c:	pop    ebx
  40522d:	pushf  
  40522e:	xor    eax,eax
  405230:	jae    0x4052a0
  405232:	mov    dl,0x28
  405234:	into   
  405235:	cmp    DWORD PTR [ecx+0x3fa02ffe],0xf7badca7
  40523f:	pop    es
  405240:	repnz push ds
  405242:	mov    ds:0x1d7feb0b,al
  405247:	fnsave [edx-0x7f696d18]
  40524d:	sbb    eax,0x8b649a12
  405252:	mov    WORD PTR [ebx-0x35],es
  405255:	stos   BYTE PTR es:[edi],al
  405256:	test   eax,0xf5694f26
  40525b:	fadd   QWORD PTR [edx]
  40525d:	arpl   WORD PTR ds:0x8b8e3a1e,ax
  405263:	push   edx
  405264:	daa    
  405265:	jecxz  0x4051ea
  405267:	inc    ebx
  405268:	aad    0x27
  40526a:	pop    ebp
  40526b:	ds xor al,0xf9
  40526e:	push   cs
  40526f:	push   eax
  405270:	lock inc eax
  405272:	or     DWORD PTR [eax+0x2c],ecx
  405275:	push   cs
  405276:	mov    edi,0x326468db
  40527b:	in     al,0x62
  40527d:	sub    ch,BYTE PTR [edx+ebx*8]
  405280:	mov    dl,0x27
  405282:	lods   eax,DWORD PTR ds:[esi]
  405283:	lahf   
  405284:	out    0x58,eax
  405286:	aaa    
  405287:	sbb    bl,BYTE PTR [edx]
  405289:	xor    ebp,DWORD PTR [ecx-0x468041be]
  40528f:	pushf  
  405290:	dec    edi
  405291:	add    DWORD PTR [edi+0x23],0x574829db
  405298:	and    al,0x60
  40529a:	ror    DWORD PTR [edi-0x73],0x82
  40529e:	adc    al,BYTE PTR [ecx+0x55]
  4052a1:	mov    ebp,esp
  4052a3:	push   ecx
  4052a4:	mov    DWORD PTR ds:0x423670,0x2b63
  4052ae:	mov    DWORD PTR [ebp-0x4],0x782770
  4052b5:	mov    DWORD PTR ds:0x4236c0,0x430d
  4052bf:	mov    DWORD PTR [ebp-0x4],0x783733
  4052c6:	mov    DWORD PTR ds:0x423730,0x323e
  4052d0:	mov    DWORD PTR [ebp-0x4],0x78373c
  4052d7:	leave  
  4052d8:	ret    0x18
  4052db:	ret    0x67d0
  4052de:	or     eax,0xdfeabf77
  4052e3:	adc    BYTE PTR [esi+0x7f6eff58],bh
  4052e9:	jmp    0x4052a3
  4052eb:	lahf   
  4052ec:	or     DWORD PTR [eax],eax
  4052ee:	add    BYTE PTR ds:0x77000003,dh
  4052f4:	fadd   QWORD PTR [esi+esi*1]
  4052f7:	pusha  
  4052f8:	sti    
  4052f9:	fwait
  4052fa:	cli    
  4052fb:	pop    esi
  4052fc:	ror    BYTE PTR [ecx+0x450d9b9a],cl
  405302:	ret    0x4193
  405305:	jmp    DWORD PTR [esi]
  405307:	sub    edi,DWORD PTR [ebp+eax*8+0x148d599a]
  40530e:	mov    al,ds:0xd6d07fbb
  405313:	add    al,0xee
  405315:	out    dx,eax
  405316:	cmp    eax,DWORD PTR [ecx]
  405318:	pop    ds
  405319:	out    0xa6,al
  40531b:	sahf   
  40531c:	fidiv  WORD PTR [eax+ebx*1]
  40531f:	sub    BYTE PTR [eax],al
  405321:	push   cs
  405322:	popf   
  405323:	jl     0x405379
  405325:	mov    ebx,0xd149c95c
  40532a:	mov    esp,0x9a0451fd
  40532f:	xchg   edx,eax
  405330:	jae    0x40534a
  405332:	xlat   BYTE PTR ds:[ebx]
  405333:	xchg   edi,eax
  405334:	and    eax,0x4c28f3cd
  405339:	jmp    0x6f665330
  40533e:	cmp    eax,0x8618f079
  405343:	rol    BYTE PTR [eax+0x6f],0xfb
  405347:	mov    ch,0x9e
  405349:	imul   esi,DWORD PTR [esp+edi*4+0x3e],0xfffffff3
  40534e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40534f:	out    dx,al
  405350:	mov    esi,0xc88ad93b
  405355:	push   ecx
  405356:	popa   
  405357:	cmp    eax,0x38cd3bc1
  40535c:	int3   
  40535d:	xchg   esp,eax
  40535e:	inc    esp
  40535f:	add    edi,eax
  405361:	stos   BYTE PTR es:[edi],al
  405362:	call   0xadfa47d1
  405367:	int    0x78
  405369:	dec    edx
  40536a:	add    ah,cl
  40536c:	inc    esi
  40536d:	adc    eax,0xa94e7bb5
  405372:	in     al,0xa2
  405374:	mov    esp,0x578a252b
  405379:	ja     0x40534c
  40537b:	xchg   esp,eax
  40537c:	xchg   edx,eax
  40537d:	lods   eax,DWORD PTR ds:[esi]
  40537e:	fist   WORD PTR [ebx]
  405380:	mov    esp,0xb3319af7
  405385:	fcomp  QWORD PTR [ebp+0x1364ceab]
  40538b:	dec    ebp
  40538c:	(bad)  
  40538d:	mov    dl,0x9b
  40538f:	retf   
  405390:	ds sub esi,esi
  405393:	cs (bad) 
  405395:	stc    
  405396:	shl    DWORD PTR [ecx-0x54ed8e9b],cl
  40539c:	shr    BYTE PTR [ebp+0x0],cl
  40539f:	adc    BYTE PTR [esi-0x3b2ebf26],bh
  4053a5:	dec    esp
  4053a6:	add    DWORD PTR [ecx+ebx*1-0x60bce40b],eax
  4053ad:	xlat   BYTE PTR ds:[ebx]
  4053ae:	jecxz  0x4053a7
  4053b0:	mov    al,ds:0xf2d94d8d
  4053b5:	into   
  4053b6:	inc    eax
  4053b7:	mov    BYTE PTR [ebx-0xe],dh
  4053ba:	aad    0x6b
  4053bc:	mov    al,0xaf
  4053be:	jp     0x40541a
  4053c0:	call   0x9b3b:0x96f2de6
  4053c7:	pushf  
  4053c8:	add    dl,BYTE PTR [esi-0x66]
  4053cb:	adc    DWORD PTR [ecx+eiz*2],edx
  4053ce:	dec    edx
  4053cf:	sbb    DWORD PTR ds:0xb941bd83,ebx
  4053d5:	inc    esp
  4053d6:	dec    ebp
  4053d7:	mov    esp,0x47fed815
  4053dc:	dec    eax
  4053dd:	(bad)  
  4053de:	mov    ds:0x90bec2ca,al
  4053e3:	adc    BYTE PTR [edx-0x64],0xd1
  4053e7:	daa    
  4053e8:	shr    DWORD PTR [ebx],0x75
  4053eb:	mov    edi,0xb0cac972
  4053f0:	cmp    al,0x5
  4053f2:	es pop ebx
  4053f4:	iret   
  4053f5:	stos   BYTE PTR es:[edi],al
  4053f6:	dec    esp
  4053f7:	in     eax,dx
  4053f8:	fnstcw WORD PTR [eax-0x571ba4e1]
  4053fe:	jb     0x4053a3
  405400:	sar    DWORD PTR [ebx-0x3bf88e2c],1
  405406:	into   
  405407:	inc    edi
  405408:	xchg   ebx,eax
  405409:	inc    ecx
  40540a:	sbb    eax,0x126e98fd
  40540f:	(bad)  
  405410:	mov    esi,0x887daaa9
  405415:	sti    
  405416:	test   DWORD PTR [ebx],ebp
  405418:	cmp    BYTE PTR [ebx+0x55],bl
  40541b:	mov    bl,0x53
  40541d:	js     0x4053e8
  40541f:	push   ebx
  405420:	imul   ebp,DWORD PTR [edi+0xe],0xf9f68201
  405427:	lock ror DWORD PTR [ebp+ebp*4+0x61],0x27
  40542d:	dec    ebp
  40542e:	sub    eax,0xab91e2c7
  405433:	xchg   esp,eax
  405434:	shl    BYTE PTR [ecx],1
  405436:	pusha  
  405437:	call   DWORD PTR [ecx-0x40]
  40543a:	je     0x4053c8
  40543c:	test   DWORD PTR [esi-0x16ffef82],ecx
  405442:	inc    esp
  405443:	je     0x405476
  405445:	pop    ebx
  405446:	iret   
  405447:	push   eax
  405448:	xor    ecx,DWORD PTR [ebx-0x45]
  40544b:	and    DWORD PTR [ebx],ecx
  40544d:	test   DWORD PTR [ebp+0x6ddce1d8],edi
  405453:	test   al,0xb3
  405455:	add    DWORD PTR [ebx-0x7a],ebx
  405458:	scas   eax,DWORD PTR es:[edi]
  405459:	pop    ss
  40545a:	push   ecx
  40545b:	and    al,0xdc
  40545d:	mov    ebx,0x10a655f6
  405462:	sbb    eax,0x361ad59
  405467:	scas   al,BYTE PTR es:[edi]
  405468:	outs   dx,DWORD PTR ds:[esi]
  405469:	fidivr WORD PTR [esi]
  40546b:	outs   dx,DWORD PTR ds:[esi]
  40546c:	rcr    al,cl
  40546e:	dec    edx
  40546f:	leave  
  405470:	jmp    0xac11fab6
  405475:	mov    ds:0x4cd39f53,al
  40547a:	cwde   
  40547b:	jne    0x405427
  40547d:	fdiv   DWORD PTR [esi-0x6d]
  405480:	mov    ah,0x26
  405482:	fdiv   st,st(0)
  405484:	adc    DWORD PTR [edi+esi*4-0x14],0xffffffed
  405489:	pop    ebp
  40548a:	retf   0x48a9
  40548d:	retf   
  40548e:	dec    eax
  40548f:	lods   al,BYTE PTR ds:[esi]
  405490:	push   ss
  405491:	push   eax
  405492:	repz into 
  405494:	cs rol cl,1
  405497:	sbb    DWORD PTR [ebx],0xffffffbe
  40549a:	pop    eax
  40549b:	fstp   QWORD PTR [ecx-0x55]
  40549e:	push   cs
  40549f:	jge    0x4054d1
  4054a1:	popf   
  4054a2:	xor    BYTE PTR [esi-0x6d],bl
  4054a5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4054a6:	cmp    esp,DWORD PTR [edi-0x25]
  4054a9:	fidivr WORD PTR [edx*4+0x3d456322]
  4054b0:	mov    al,0x9d
  4054b2:	jb     0x4054e3
  4054b4:	add    bh,BYTE PTR [ebx+ecx*4-0x24]
  4054b8:	pop    esp
  4054b9:	std    
  4054ba:	ret    0x7dd2
  4054bd:	pop    ebx
  4054be:	jb     0x405452
  4054c0:	add    BYTE PTR [ebx-0x7e],cl
  4054c3:	(bad)  
  4054c4:	adc    dl,BYTE PTR [ebp-0x4a0b9dc8]
  4054ca:	imul   ebp,edi,0x403611e9
  4054d0:	push   0x39
  4054d2:	ror    DWORD PTR [esi+0x187ac0b],cl
  4054d8:	test   DWORD PTR [ebx-0x6c128c15],esi
  4054de:	jp     0x40552f
  4054e0:	les    edx,FWORD PTR [ecx+0x4328643e]
  4054e6:	inc    ebp
  4054e7:	push   edx
  4054e8:	xchg   DWORD PTR [esi-0x39],edx
  4054eb:	and    al,0xa3
  4054ed:	and    bh,bl
  4054ef:	cmp    ch,BYTE PTR [eax]
  4054f1:	cld    
  4054f2:	ss cdq 
  4054f4:	or     eax,0x22678457
  4054f9:	push   ebp
  4054fa:	push   ds
  4054fb:	inc    edi
  4054fc:	mov    ebp,0xb2a6d37d
  405501:	int3   
  405502:	idiv   DWORD PTR [ebp-0x3bfffa27]
  405508:	pop    esp
  405509:	fdivr  QWORD PTR [esi+eiz*2-0x2886f3b8]
  405510:	lods   eax,DWORD PTR ds:[esi]
  405511:	inc    ecx
  405512:	mov    ah,0x34
  405514:	fmul   QWORD PTR [ebx]
  405516:	jne    0x405535
  405518:	jnp    0x405540
  40551a:	int    0xfe
  40551c:	cld    
  40551d:	cmp    al,0x2b
  40551f:	pop    ebp
  405520:	sub    dl,cl
  405522:	iret   
  405523:	dec    esi
  405524:	es inc ebp
  405526:	iret   
  405527:	mov    cl,0x66
  405529:	sub    bl,BYTE PTR [ebx-0x4c]
  40552c:	pushf  
  40552d:	retf   
  40552e:	popf   
  40552f:	das    
  405530:	or     DWORD PTR [ebp+ebp*1-0x1f],eax
  405534:	lahf   
  405535:	xor    BYTE PTR [esi+0x50],ah
  405538:	clc    
  405539:	and    al,0xfa
  40553b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40553c:	inc    edi
  40553d:	leave  
  40553e:	xor    al,dh
  405540:	sbb    eax,0xd8e4ab2c
  405545:	dec    esi
  405546:	(bad)  
  405547:	cmp    al,BYTE PTR [edi+0x6c]
  40554a:	fdivr  DWORD PTR ds:0x9a7e405
  405550:	cmp    BYTE PTR [ebp+esi*2-0x6a],0xa0
  405555:	cs pop ebx
  405557:	ins    DWORD PTR es:[edi],dx
  405558:	in     eax,0xdb
  40555a:	loope  0x40557b
  40555c:	mov    dl,0x6f
  40555e:	das    
  40555f:	in     eax,0x4c
  405561:	pushf  
  405562:	clc    
  405563:	or     ecx,ebx
  405565:	fwait
  405566:	push   fs
  405568:	mov    ds:0x7beefd74,al
  40556d:	lods   al,BYTE PTR ds:[esi]
  40556e:	push   ds
  40556f:	ins    DWORD PTR es:[edi],dx
  405570:	add    ch,BYTE PTR [eax]
  405572:	icebp  
  405573:	rcl    esi,cl
  405575:	jl     0x4055ed
  405577:	add    BYTE PTR [ecx+ebp*8],0x6d
  40557b:	(bad)  [esp+edi*2]
  40557e:	or     DWORD PTR [ecx],0xa727337
  405584:	inc    ebp
  405585:	sub    BYTE PTR [ebp-0x3034e33f],cl
  40558b:	pop    ss
  40558c:	(bad)  [ebx-0x52]
  40558f:	jle    0x405581
  405591:	sbb    eax,DWORD PTR [eax-0x25]
  405594:	sbb    DWORD PTR [ecx+0x61a5f801],edi
  40559a:	jbe    0x405589
  40559c:	imul   esp,DWORD PTR [ecx+ebx*4],0x6c
  4055a0:	sbb    DWORD PTR ds:0xaf4f270,edi
  4055a6:	jle    0x405546
  4055a8:	cmp    al,BYTE PTR [edi-0x1f]
  4055ab:	mov    dl,ah
  4055ad:	xchg   edi,eax
  4055ae:	cs sbb al,0x4c
  4055b1:	ja     0x40556a
  4055b3:	mov    ah,BYTE PTR [esi+ecx*4+0x50]
  4055b7:	ins    BYTE PTR es:[edi],dx
  4055b8:	fucom  st(6)
  4055ba:	push   ebp
  4055bb:	rcr    DWORD PTR [ecx+0x5d],cl
  4055be:	in     eax,0x1f
  4055c0:	aas    
  4055c1:	push   ebp
  4055c2:	cs xchg esi,eax
  4055c4:	fisubr WORD PTR [ecx+0x5b]
  4055c7:	and    dh,dl
  4055c9:	(bad)  
  4055ca:	jecxz  0x40560a
  4055cc:	mov    ebx,0x82753a0f
  4055d1:	pop    eax
  4055d2:	fmul   DWORD PTR [edi-0x22]
  4055d5:	fisubr WORD PTR [edx+0x7e5903d8]
  4055db:	es jecxz 0x4055e5
  4055de:	clc    
  4055df:	ret    0x5a95
  4055e2:	pop    ebp
  4055e3:	dec    edx
  4055e4:	punpckldq mm6,DWORD PTR [edx+ecx*8-0x5b87e013]
  4055ec:	ficom  WORD PTR [esi]
  4055ee:	or     BYTE PTR [ebx],ah
  4055f0:	je     0x4055f0
  4055f2:	lahf   
  4055f3:	fsubr  QWORD PTR [ebp*1+0x3582f854]
  4055fa:	les    ebp,FWORD PTR [ecx]
  4055fc:	mov    al,ds:0x9419c241
  405601:	mov    dl,ch
  405603:	or     edx,ebp
  405605:	(bad)  
  405606:	cdq    
  405607:	adc    ah,BYTE PTR [esi+ebx*8+0x1f]
  40560b:	adc    ecx,edi
  40560d:	push   edx
  40560e:	sbb    eax,0xe0bd98ad
  405613:	dec    esi
  405614:	cmp    bl,BYTE PTR [ebx+ebp*1+0x21990284]
  40561b:	jp     0x40562c
  40561d:	cwde   
  40561e:	push   ebx
  40561f:	sbb    DWORD PTR ds:0x346b239,esi
  405625:	(bad)  
  405626:	mov    ds:0xec8b5512,al
  40562b:	jmp    0x4057be
  405630:	stos   BYTE PTR es:[edi],al
  405631:	or     BYTE PTR [ecx+0x41],bl
  405634:	sti    
  405635:	push   ecx
  405636:	mov    edx,0x14026eb
  40563b:	aas    
  40563c:	push   ecx
  40563d:	in     eax,dx
  40563e:	retf   
  40563f:	push   es
  405640:	fsub   QWORD PTR [ebx+0x0]
  405643:	add    BYTE PTR [esi+0x1],dh
  405646:	add    BYTE PTR [eax],al
  405648:	sub    esi,DWORD PTR [ebp-0x553cf931]
  40564e:	fcom   DWORD PTR [ebx+0x85f3ee]
  405654:	ds into 
  405656:	xor    al,BYTE PTR [eax]
  405658:	jo     0x40564e
  40565a:	hlt    
  40565b:	push   ecx
  40565c:	lea    ecx,[ecx]
  40565e:	leave  
  40565f:	ins    BYTE PTR es:[edi],dx
  405660:	add    BYTE PTR [edx+0x2b85287e],bh
  405666:	int    0xf5
  405668:	mov    eax,0x1cbf9fc4
  40566d:	stos   BYTE PTR es:[edi],al
  40566e:	js     0x405638
  405670:	mov    esi,0x39d8e79b
  405675:	sbb    DWORD PTR [edx+edx*8+0x53],edx
  405679:	bound  esp,QWORD PTR [ebp-0x41]
  40567c:	in     al,0x61
  40567e:	push   esp
  40567f:	add    edi,DWORD PTR [esi+0x45df5313]
  405685:	bound  edi,QWORD PTR [esi+0xfa361f6]
  40568b:	and    al,0x8d
  40568d:	push   0xffffffbd
  40568f:	add    dl,BYTE PTR [edx+0x7a]
  405692:	mov    al,0xd8
  405694:	jle    0x4056a9
  405696:	ss xchg edi,eax
  405698:	push   ecx
  405699:	(bad)  
  40569a:	fcmovnb st,st(2)
  40569c:	mov    esp,DWORD PTR [ecx]
  40569e:	adc    eax,0xa824e3f5
  4056a3:	or     edx,DWORD PTR [ecx-0x54ca7880]
  4056a9:	adc    al,0xa4
  4056ab:	lods   eax,DWORD PTR ds:[esi]
  4056ac:	xchg   BYTE PTR [ebx+0x6c],ch
  4056af:	or     BYTE PTR [eax-0x5d],ch
  4056b2:	cmp    cl,cl
  4056b4:	pop    ss
  4056b5:	int3   
  4056b6:	fild   QWORD PTR [ebx]
  4056b8:	repz mov bl,0x5f
  4056bb:	enter  0xa01b,0x41
  4056bf:	enter  0x4c13,0x6f
  4056c3:	mov    dl,0xde
  4056c5:	rol    BYTE PTR ds:0x97d8d5dd,1
  4056cb:	shl    BYTE PTR [edi],cl
  4056cd:	jb     0x40567b
  4056cf:	pop    ss
  4056d0:	inc    edx
  4056d1:	nop
  4056d2:	mov    bl,0x0
  4056d4:	iret   
  4056d5:	xor    BYTE PTR [edi-0x237d5158],bl
  4056db:	pop    ebx
  4056dc:	call   0x3b159a46
  4056e1:	mov    ebp,0x63679521
  4056e6:	mov    ds:0xc9bc2926,eax
  4056eb:	or     ah,cl
  4056ed:	jecxz  0x405673
  4056ef:	and    eax,0xae8557b6
  4056f4:	outs   dx,DWORD PTR ds:[esi]
  4056f5:	inc    esi
  4056f6:	into   
  4056f7:	ror    BYTE PTR [ebx+0x58],0xe5
  4056fb:	or     esi,ecx
  4056fd:	or     al,0xd6
  4056ff:	cdq    
  405700:	imul   edx,DWORD PTR [ebx-0x5a],0x4d1bc
  405707:	lods   eax,DWORD PTR ds:[esi]
  405708:	xor    DWORD PTR [edi+0x7a1c412f],ebp
  40570e:	or     DWORD PTR [edi-0x42da4d72],ebx
  405714:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405715:	xor    DWORD PTR [edi+0x3d28633e],esp
  40571b:	or     ah,BYTE PTR [edx+0x4c]
  40571e:	lods   al,BYTE PTR ds:[esi]
  40571f:	push   ebx
  405720:	(bad)  
  405721:	push   esp
  405722:	and    DWORD PTR [ebp+0x16214bc],esi
  405728:	sub    al,0x8f
  40572a:	xor    esp,DWORD PTR [eax-0x7b]
  40572d:	push   0x75
  40572f:	sbb    esi,DWORD PTR [eax-0x6f]
  405732:	xor    BYTE PTR [ecx-0x767f597e],ch
  405738:	shl    DWORD PTR [eax-0x2d],0xf7
  40573c:	dec    esi
  40573d:	std    
  40573e:	pop    edi
  405740:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405741:	out    0x71,al
  405743:	cmp    eax,0xe9be2cad
  405748:	outs   dx,BYTE PTR gs:[esi]
  40574a:	push   esi
  40574b:	cmp    DWORD PTR [ebx-0x33cbcd90],0x7d453246
  405755:	inc    esp
  405756:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405757:	dec    edi
  405758:	aaa    
  405759:	lea    edi,[edx-0x42]
  40575c:	add    DWORD PTR [edx-0x71cf0e28],eax
  405762:	adc    al,0xa2
  405764:	test   eax,0xca18a0e8
  405769:	dec    esi
  40576a:	mov    ds:0x592a8947,eax
  40576f:	add    al,0x93
  405771:	xchg   ebx,eax
  405772:	aaa    
  405773:	or     eax,0xf6ae4aa7
  405778:	xor    eax,0x31c3008b
  40577d:	or     BYTE PTR [edi],bh
  40577f:	pop    ds
  405780:	push   edx
  405781:	dec    BYTE PTR [ecx]
  405783:	stc    
  405784:	lds    edx,FWORD PTR [ebp-0xb853d63]
  40578a:	cli    
  40578b:	outs   dx,BYTE PTR ds:[esi]
  40578c:	mov    DWORD PTR [bx+si-0x35],esp
  405790:	cdq    
  405791:	xchg   DWORD PTR [esi],edx
  405793:	nop
  405794:	js     0x40578b
  405796:	ds sbb al,0x71
  405799:	enter  0x6b2a,0x22
  40579d:	cmp    DWORD PTR [ecx+esi*2],esi
  4057a0:	fadd   st,st(1)
  4057a2:	retf   
  4057a3:	sbb    al,0x4b
  4057a5:	inc    esp
  4057a6:	stc    
  4057a7:	cli    
  4057a8:	cwde   
  4057a9:	cmp    eax,0xc3c6b5e0
  4057ae:	data16 fdivr QWORD PTR [edx]
  4057b1:	fnsetpm(287 only) 
  4057b3:	inc    edi
  4057b4:	xchg   esi,ebx
  4057b6:	sub    eax,0x91d76127
  4057bb:	(bad)  
  4057bc:	popa   
  4057bd:	cdq    
  4057be:	sub    esp,0x34
  4057c1:	and    DWORD PTR ds:0x4236bc,0x0
  4057cb:	jmp    0x4057df
  4057d0:	xor    ecx,ecx
  4057d2:	or     ecx,DWORD PTR ds:0x4236bc
  4057d8:	inc    ecx
  4057d9:	mov    DWORD PTR ds:0x4236bc,ecx
  4057df:	cmp    DWORD PTR ds:0x4236bc,0x1a
  4057e6:	jae    0x405833
  4057ec:	cmp    DWORD PTR ds:0x4236bc,0xa
  4057f3:	jne    0x405804
  4057f9:	push   0x8e95
  4057fe:	call   DWORD PTR ds:0x41f020
  405804:	cmp    DWORD PTR ds:0x4236bc,0x9
  40580b:	jne    0x40581e
  405811:	mov    ecx,DWORD PTR ds:0x4236bc
  405817:	inc    ecx
  405818:	mov    DWORD PTR ds:0x4236bc,ecx
  40581e:	jmp    0x4057d0
  405823:	xor    ecx,ecx
  405825:	add    ecx,DWORD PTR ds:0x421518
  40582b:	mov    ecx,DWORD PTR [ecx]
  40582d:	and    DWORD PTR ds:0x4214dc,ecx
  405833:	push   ebx
  405834:	push   esi
  405835:	mov    DWORD PTR [ebp-0x8],0xffffffff
  40583c:	mov    DWORD PTR ds:0x423704,0x11
  405846:	cmp    DWORD PTR ds:0x423704,0x0
  40584d:	je     0x40589c
  405853:	cmp    DWORD PTR ds:0x423704,0x7
  40585a:	jne    0x405870
  405860:	push   0x4b15
  405865:	push   0x30b4
  40586a:	call   DWORD PTR ds:0x41f024
  405870:	cmp    DWORD PTR ds:0x423704,0x8
  405877:	jne    0x40588a
  40587d:	mov    esi,DWORD PTR ds:0x423704
  405883:	dec    esi
  405884:	mov    DWORD PTR ds:0x423704,esi
  40588a:	mov    esi,DWORD PTR ds:0x423704
  405890:	dec    esi
  405891:	mov    DWORD PTR ds:0x423704,esi
  405897:	jmp    0x405846
  40589c:	mov    DWORD PTR [ebp-0x24],0xfffffffc
  4058a3:	and    DWORD PTR ds:0x4214e8,0x0
  4058ad:	jmp    0x4058bf
  4058b2:	mov    ecx,DWORD PTR ds:0x4214e8
  4058b8:	inc    ecx
  4058b9:	mov    DWORD PTR ds:0x4214e8,ecx
  4058bf:	cmp    DWORD PTR ds:0x4214e8,0x1f
  4058c6:	jae    0x4058e7
  4058cc:	cmp    DWORD PTR ds:0x4214e8,0x25
  4058d3:	jne    0x4058e2
  4058d9:	push   DWORD PTR [ebp-0x14]
  4058dc:	call   DWORD PTR ds:0x41f140
  4058e2:	jmp    0x4058b2
  4058e7:	push   edi
  4058e8:	dec    ecx
  4058e9:	mov    DWORD PTR ds:0x421340,0x405628
  4058f3:	add    DWORD PTR ds:0x423704,0x5285
  4058fd:	imul   edx,eax
  405900:	xor    DWORD PTR ds:0x4236a8,ebx
  405906:	mov    ecx,0x4573
  40590b:	sbb    DWORD PTR ds:0x4214f4,ecx
  405911:	add    edx,ecx
  405913:	mov    edi,DWORD PTR ds:0x423690
  405919:	mov    edi,DWORD PTR [edi]
  40591b:	add    DWORD PTR ds:0x423704,edi
  405921:	mov    esi,0x7879
  405926:	mov    edi,0x1556
  40592b:	adc    eax,0x7cc6
  405930:	xchg   esi,ecx
  405932:	sub    edx,edi
  405934:	or     DWORD PTR ds:0x4236fc,0x3c78
  40593e:	xor    ebx,ebx
  405940:	or     DWORD PTR ds:0x42366c,ebx
  405946:	jmp    0x405ad9
  40594b:	test   BYTE PTR [eax+ecx*2-0x9318572],0xfc
  405953:	mov    ah,0x85
  405955:	pusha  
  405956:	ret    0xe364
  405959:	or     DWORD PTR [edx+edx*2+0x65],0x0
  40595e:	add    BYTE PTR [esi+0x1],dh
  405961:	add    BYTE PTR [eax],al
  405963:	and    eax,0xe729d9a2
  405968:	shr    DWORD PTR [esi-0x1a],cl
  40596b:	outs   dx,DWORD PTR ds:[esi]
  40596c:	or     dl,BYTE PTR [ebp+0xfbdff11]
  405972:	addr16 sub al,0x90
  405975:	or     DWORD PTR [edx],eax
  405977:	aam    0xf2
  405979:	xor    BYTE PTR [ecx+0x2496bb1e],cl
  40597f:	mov    esi,0x4dfa99d2
  405984:	xor    eax,0x60b19313
  405989:	stos   BYTE PTR es:[edi],al
  40598a:	xchg   esp,eax
  40598b:	fdiv   DWORD PTR [edx]
  40598d:	aam    0x22
  40598f:	inc    edx
  405990:	add    esi,DWORD PTR [esi-0x68]
  405993:	push   esi
  405994:	adc    DWORD PTR [ebx],edx
  405996:	inc    edi
  405997:	adc    DWORD PTR [ebx-0x1d],ebx
  40599a:	int3   
  40599b:	mov    ebp,0xa7b77ca7
  4059a0:	dec    ebx
  4059a1:	lds    esi,FWORD PTR [eax+0x74044c02]
  4059a7:	hlt    
  4059a8:	mov    ds:0xf26feddc,eax
  4059ad:	ret    0x74e4
  4059b0:	jbe    0x4059da
  4059b2:	xchg   ecx,eax
  4059b3:	sti    
  4059b4:	ja     0x405943
  4059b6:	in     eax,dx
  4059b7:	call   0xa9d7:0x9495d1a6
  4059be:	sbb    DWORD PTR [edi+0x654bf1ae],eax
  4059c4:	fistp  DWORD PTR [esi]
  4059c6:	add    ecx,ebx
  4059c8:	jle    0x4059d2
  4059ca:	in     al,dx
  4059cb:	pop    edi
  4059cc:	jb     0x405a3a
  4059ce:	cmp    eax,0xe5ac42b5
  4059d3:	arpl   WORD PTR [edi],cx
  4059d5:	mov    al,ds:0x3b7458da
  4059da:	add    DWORD PTR [ebx+0x6f],0xbaff9722
  4059e1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4059e2:	ds iret 
  4059e4:	sub    BYTE PTR [ebx+0x540982cf],cl
  4059ea:	push   ds
  4059eb:	stc    
  4059ec:	adc    cl,dh
  4059ee:	push   0x75f1695e
  4059f3:	lea    esi,[esi+0x374f21e]
  4059f9:	adc    al,0xb0
  4059fb:	test   cl,dh
  4059fd:	add    BYTE PTR [edx],ch
  4059ff:	xchg   bx,ax
  405a01:	rep movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405a03:	xchg   esi,eax
  405a04:	push   edx
  405a05:	mov    eax,0xd36ad58a
  405a0a:	out    dx,eax
  405a0b:	or     eax,edi
  405a0d:	shl    DWORD PTR [esi-0x5cd0a42b],0x22
  405a14:	push   0x3
  405a16:	xor    eax,0xd2280bbf
  405a1b:	jae    0x405a1a
  405a1d:	std    
  405a1e:	loop   0x405a0b
  405a20:	sub    BYTE PTR [eax-0x78],cl
  405a23:	jbe    0x4059b2
  405a25:	mov    ch,dh
  405a27:	(bad)  
  405a28:	lds    ebp,FWORD PTR [edi]
  405a2a:	cli    
  405a2b:	pop    esp
  405a2c:	jp     0x4059fe
  405a2e:	adc    eax,0x2bb3e3e8
  405a33:	mov    dh,0x84
  405a35:	xor    al,BYTE PTR [esi]
  405a37:	retf   0x8f8
  405a3a:	dec    ebp
  405a3b:	push   ebx
  405a3c:	(bad)  
  405a3d:	clc    
  405a3e:	in     al,dx
  405a3f:	adc    DWORD PTR [eax],0x4d48837b
  405a45:	ins    DWORD PTR es:[edi],dx
  405a46:	pop    ebp
  405a47:	out    0x4b,al
  405a49:	pusha  
  405a4a:	sub    eax,0x123c8a82
  405a4f:	jmp    0x405a9b
  405a51:	call   0xab92187e
  405a56:	nop
  405a57:	jle    0x405a18
  405a59:	scas   eax,DWORD PTR es:[edi]
  405a5a:	jae    0x405a92
  405a5c:	adc    edx,eax
  405a5e:	hlt    
  405a5f:	jb     0x405a28
  405a61:	sbb    eax,0x55e80f62
  405a66:	imul   esp,edi,0x44
  405a69:	mov    ebp,0x2b4c8cca
  405a6e:	mov    edi,0x9e8eca09
  405a73:	jecxz  0x405ab7
  405a75:	cwde   
  405a76:	jae    0x405aed
  405a78:	sbb    BYTE PTR [edi-0x5c4b30ba],bh
  405a7e:	or     BYTE PTR [edx+0x71a53aff],0xb0
  405a85:	pusha  
  405a86:	xlat   BYTE PTR ds:[ebx]
  405a87:	dec    DWORD PTR [ebx]
  405a89:	in     eax,dx
  405a8a:	out    dx,eax
  405a8b:	lea    ebp,[edx]
  405a8d:	sub    DWORD PTR [edx],edi
  405a8f:	push   edi
  405a90:	xor    bl,BYTE PTR [edi+0x2009dc65]
  405a96:	arpl   WORD PTR [edi],si
  405a98:	daa    
  405a99:	arpl   WORD PTR [ebp+0x46],di
  405a9c:	mov    al,BYTE PTR [eax+0x572148d4]
  405aa2:	jg     0x405a4e
  405aa4:	sar    DWORD PTR [esp+ecx*4+0x142bebba],cl
  405aab:	sub    eax,0xb6762c1
  405ab0:	mov    DWORD PTR gs:0x37755fb7,esp
  405ab7:	mov    edi,0x934cdd7d
  405abc:	das    
  405abd:	imul   edx,DWORD PTR [eax+0x330d9e9d],0x3
  405ac4:	sbb    DWORD PTR [ecx],esp
  405ac6:	cmp    BYTE PTR [eax-0x314a7cb3],dl
  405acc:	enter  0xeb9a,0x42
  405ad0:	sbb    ah,al
  405ad2:	gs daa 
  405ad4:	xlat   BYTE PTR ds:[ebx]
  405ad5:	out    dx,eax
  405ad6:	sar    DWORD PTR [ecx+ecx*2-0x77],1
  405ada:	pop    ebp
  405adb:	cld    
  405adc:	mov    eax,DWORD PTR [ebp-0x24]
  405adf:	and    DWORD PTR ds:0x4236bc,0x0
  405ae9:	mov    edi,DWORD PTR ds:0x4236bc
  405aef:	inc    edi
  405af0:	mov    DWORD PTR ds:0x4236bc,edi
  405af6:	cmp    DWORD PTR ds:0x4236bc,0x6
  405afd:	jne    0x405b25
  405b03:	push   0x12fc
  405b08:	push   0x4214ec
  405b0d:	push   0x1a67
  405b12:	push   0x103c
  405b17:	push   DWORD PTR [ebp-0x24]
  405b1a:	push   0x3e7d
  405b1f:	call   DWORD PTR ds:0x41f3e4
  405b25:	cmp    DWORD PTR ds:0x4236bc,0x5
  405b2c:	jne    0x405b3f
  405b32:	mov    edi,DWORD PTR ds:0x4236bc
  405b38:	inc    edi
  405b39:	mov    DWORD PTR ds:0x4236bc,edi
  405b3f:	cmp    DWORD PTR ds:0x4236bc,0x18
  405b46:	jb     0x405ae9
  405b4c:	or     DWORD PTR ds:0x4236b4,ecx
  405b52:	mov    edi,0x300a
  405b57:	and    DWORD PTR ds:0x4236ac,0x7752
  405b61:	jmp    0x405cf4
  405b66:	jo     0x405b46
  405b68:	push   ss
  405b69:	call   0xb7ef:0xfefcdabe
  405b70:	or     BYTE PTR [ebx+0x3d7e13a2],0xc8
  405b77:	data16 add BYTE PTR [eax],al
  405b7a:	jbe    0x405b7d
  405b7c:	add    BYTE PTR [eax],al
  405b7e:	dec    esp
  405b7f:	leave  
  405b80:	cmp    bl,BYTE PTR [edx+0x38fb1a25]
  405b86:	jmp    0x405bc7
  405b88:	mov    ds:0x9e19bbea,eax
  405b8d:	mov    DWORD PTR [edx+0x6a],eax
  405b90:	and    al,0x71
  405b92:	sbb    DWORD PTR [esi],ebp
  405b94:	nop
  405b95:	xor    ebx,DWORD PTR [edx]
  405b97:	loop   0x405b62
  405b99:	cdq    
  405b9a:	scas   al,BYTE PTR es:[edi]
  405b9b:	cli    
  405b9c:	or     eax,0xd1712f19
  405ba1:	fs out dx,al
  405ba3:	lods   eax,DWORD PTR ds:[esi]
  405ba4:	xlat   BYTE PTR ds:[ebx]
  405ba5:	sbb    cl,BYTE PTR [ecx-0x67]
  405ba8:	mov    cl,0x4c
  405baa:	retf   
  405bab:	ret    0x4896
  405bae:	and    eax,0xca88c45e
  405bb3:	and    BYTE PTR [ebp+0x6e],ch
  405bb6:	call   0x6120d944
  405bbb:	mov    ecx,0x397b41fe
  405bc0:	adc    bh,BYTE PTR [edx]
  405bc2:	add    esi,ecx
  405bc4:	out    0xe5,al
  405bc6:	cmp    al,bl
  405bc8:	mov    BYTE PTR [esi],0xbd
  405bcb:	(bad)  
  405bcc:	cmp    al,0x38
  405bce:	test   eax,0x434f701b
  405bd3:	fisub  WORD PTR [esi+0x72261506]
  405bd9:	fld    QWORD PTR [edi+0x32]
  405bdc:	je     0x405bf8
  405bde:	loopne 0x405c5d
  405be0:	add    al,BYTE PTR [ebx-0x9]
  405be3:	inc    eax
  405be4:	icebp  
  405be5:	in     al,0xe9
  405be7:	xchg   ebp,eax
  405be8:	outs   dx,DWORD PTR ds:[esi]
  405be9:	repz add eax,0x4ebe4a4
  405bef:	xchg   edx,eax
  405bf0:	push   ecx
  405bf1:	(bad)  
  405bf2:	cmp    ch,BYTE PTR [ebx+0x30a81e96]
  405bf8:	sahf   
  405bf9:	cmp    BYTE PTR [eax+0x69d00321],0xc6
  405c00:	jb     0x405c30
  405c02:	cs mov esp,0xcdc94d67
  405c08:	pop    ss
  405c09:	push   esi
  405c0a:	inc    edx
  405c0b:	dec    ebx
  405c0c:	mov    ah,0x56
  405c0e:	xchg   edx,eax
  405c0f:	cmp    eax,0xbda3b126
  405c14:	iret   
  405c15:	push   esi
  405c16:	(bad)  
  405c17:	add    BYTE PTR [esi-0x58],0xc
  405c1b:	mov    al,ds:0x444cbade
  405c20:	lock (bad) ds:0x87dcb6e3
  405c27:	out    dx,ax
  405c29:	(bad)  
  405c2a:	das    
  405c2b:	xchg   ebp,eax
  405c2c:	data16 or BYTE PTR [edi],ah
  405c2f:	les    ebp,FWORD PTR [ecx]
  405c31:	in     al,dx
  405c32:	adc    DWORD PTR [eax-0x13e609d7],ebp
  405c38:	sub    al,0x60
  405c3a:	or     bh,ah
  405c3c:	pushf  
  405c3d:	clc    
  405c3e:	mov    ah,0x69
  405c40:	dec    ecx
  405c41:	pop    ebx
  405c42:	push   ecx
  405c43:	sub    eax,0x6602f678
  405c48:	test   DWORD PTR [ebx-0x74],0x2eaba7ea
  405c4f:	iret   
  405c50:	les    esi,FWORD PTR [ebp+0x7d]
  405c53:	or     BYTE PTR [ecx-0x21],bl
  405c56:	adc    bl,BYTE PTR ds:0x4cbd7e
  405c5c:	pop    ds
  405c5d:	xchg   ebx,eax
  405c5e:	sub    DWORD PTR [esi+0x532b96c5],edx
  405c64:	(bad)  
  405c65:	fs pop esp
  405c67:	inc    ebp
  405c68:	int3   
  405c69:	jbe    0x405c5d
  405c6b:	pop    es
  405c6c:	pop    esi
  405c6d:	sbb    BYTE PTR [esi],0x7f
  405c70:	aad    0xd3
  405c72:	std    
  405c73:	and    BYTE PTR [edi],dl
  405c75:	add    edi,DWORD PTR [ebp-0x4aa58471]
  405c7b:	inc    edi
  405c7c:	sbb    edi,0x63
  405c7f:	imul   esi,DWORD PTR [edx-0x7e61557a],0x186d0393
  405c89:	sbb    ebp,DWORD PTR [edi]
  405c8b:	rcr    BYTE PTR [edi],1
  405c8d:	jle    0x405cb5
  405c8f:	fisub  WORD PTR [ebp-0x68]
  405c92:	add    esp,edx
  405c94:	loop   0x405cd2
  405c96:	inc    ecx
  405c97:	push   esp
  405c98:	div    BYTE PTR [ecx+0x1b]
  405c9b:	jbe    0x405ca6
  405c9d:	push   0xd54580c8
  405ca2:	loop   0x405c83
  405ca4:	xlat   BYTE PTR ds:[ebx]
  405ca5:	rcl    esp,cl
  405ca7:	je     0x405c34
  405ca9:	shl    ah,0xda
  405cac:	retf   
  405cad:	lods   eax,DWORD PTR ds:[esi]
  405cae:	mov    ecx,0x6ac55d49
  405cb3:	loope  0x405d32
  405cb5:	dec    edi
  405cb6:	adc    ebx,DWORD PTR [edx-0x67]
  405cb9:	or     eax,edx
  405cbb:	hlt    
  405cbc:	into   
  405cbd:	cmp    BYTE PTR [edi+0x75a5d598],cl
  405cc3:	fldenv [eax+esi*1+0x1b]
  405cc7:	outs   dx,BYTE PTR ds:[esi]
  405cc8:	add    BYTE PTR ss:[edi-0x7e4d1bc2],bl
  405ccf:	cld    
  405cd0:	add    DWORD PTR [eax+0x28e4f76b],ebp
  405cd6:	inc    esi
  405cd7:	aaa    
  405cd8:	jae    0x405cbe
  405cda:	add    al,0x13
  405cdc:	add    edi,ebp
  405cde:	and    bh,ah
  405ce0:	std    
  405ce1:	and    al,0x2e
  405ce3:	jl     0x405cd6
  405ce5:	sbb    eax,0xc8b2ff85
  405cea:	iret   
  405ceb:	enter  0x6c5e,0xf4
  405cef:	inc    ebx
  405cf0:	fs popf 
  405cf2:	cmp    ah,0x33
  405cf5:	mov    DWORD PTR [ecx+0x4236f81d],0x42372c00
  405cff:	add    BYTE PTR [ebp+0x35810177],cl
  405d05:	mov    esp,0xdc004236
  405d0a:	adc    al,0x42
  405d0c:	add    BYTE PTR [ebx],al
  405d0e:	mov    bh,0x5
  405d11:	inc    eax
  405d12:	aaa    
  405d13:	inc    edx
  405d14:	add    BYTE PTR [esi-0x76ffffac],ah
  405d1a:	inc    ebp
  405d1b:	in     al,0xf7
  405d1d:	ror    BYTE PTR [ecx+0x5c7d45d],1
  405d23:	les    esi,FWORD PTR [esi]
  405d25:	inc    edx
  405d26:	add    ah,bh
  405d28:	add    BYTE PTR [bx+si],al
  405d2b:	mov    eax,DWORD PTR [ebp-0x1c]
  405d2e:	mov    DWORD PTR ds:0x423704,0x3602
  405d38:	cmp    ebx,eax
  405d3a:	jae    0x40658a
  405d40:	mov    eax,DWORD PTR [ebp-0x8]
  405d43:	mov    DWORD PTR ds:0x423728,0x13d6
  405d4d:	xor    eax,edi
  405d4f:	add    eax,esi
  405d51:	mov    DWORD PTR ds:0x4214e4,0x653d
  405d5b:	cmp    ebx,eax
  405d5d:	mov    DWORD PTR ds:0x4214dc,0x68ee
  405d67:	jne    0x4063c7
  405d6d:	sub    DWORD PTR ds:0x4236fc,0x423740
  405d77:	push   DWORD PTR [ebp+0x8]
  405d7a:	sub    DWORD PTR ds:0x423684,0x3dd2
  405d84:	call   0x41b902
  405d89:	mov    ecx,DWORD PTR ds:0x4236c0
  405d8f:	xor    DWORD PTR ds:0x4214e0,ecx
  405d95:	mov    DWORD PTR [ebp-0x14],eax
  405d98:	mov    eax,DWORD PTR [ebp-0x8]
  405d9b:	and    DWORD PTR ds:0x4214e0,edi
  405da1:	mov    ecx,DWORD PTR [ebp-0x14]
  405da4:	sbb    DWORD PTR ds:0x4214d8,0x4214dc
  405dae:	xor    eax,edi
  405db0:	add    eax,esi
  405db2:	cmp    ecx,eax
  405db4:	mov    DWORD PTR ds:0x4214f8,0x22b
  405dbe:	je     0x406f55
  405dc4:	push   DWORD PTR [ebp-0x14]
  405dc7:	push   DWORD PTR [ebp+0x8]
  405dca:	call   0x40b195
  405dcf:	xor    ecx,ecx
  405dd1:	xor    ecx,DWORD PTR ds:0x4236e0
  405dd7:	mov    ecx,DWORD PTR [ecx]
  405dd9:	add    DWORD PTR ds:0x4236f0,ecx
  405ddf:	mov    DWORD PTR [ebp-0x14],eax
  405de2:	and    eax,eax
  405de4:	jmp    0x405f77
  405de9:	ds cmp al,0xa4
  405dec:	(bad)  
  405ded:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405dee:	lahf   
  405def:	aas    
  405df0:	mov    ebp,0xac198dac
  405df5:	sbb    ebx,DWORD PTR [ecx-0x66]
  405df8:	xor    DWORD PTR [esi],edi
  405dfa:	push   0x1760000
  405dff:	add    BYTE PTR [eax],al
  405e01:	ins    BYTE PTR es:[edi],dx
  405e02:	fst    DWORD PTR [ebp+0xb]
  405e05:	fimul  WORD PTR [ebx+0x24]
  405e08:	outs   dx,DWORD PTR ds:[esi]
  405e09:	retf   0xabaa
  405e0c:	enter  0x3849,0x13
  405e10:	dec    esp
  405e11:	scas   eax,DWORD PTR es:[edi]
  405e12:	or     al,0xb
  405e14:	push   es
  405e15:	add    edx,ebp
  405e17:	dec    ecx
  405e18:	out    0x77,eax
  405e1a:	pop    DWORD PTR [edi+ecx*4+0x23]
  405e1e:	xchg   edi,eax
  405e1f:	bound  ecx,QWORD PTR [ebx]
  405e21:	mov    al,0x79
  405e23:	inc    eax
  405e24:	jecxz  0x405dff
  405e26:	fiadd  WORD PTR [edx+ebx*1+0x5c00f6bd]
  405e2d:	pop    esi
  405e2e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405e2f:	pop    ds
  405e30:	loop   0x405e5a
  405e32:	das    
  405e33:	xchg   esi,eax
  405e34:	gs push ebp
  405e36:	popa   
  405e37:	std    
  405e38:	outs   dx,DWORD PTR ds:[esi]
  405e39:	mov    al,0x25
  405e3b:	ficom  WORD PTR [ecx]
  405e3d:	jle    0x405dc4
  405e3f:	and    ch,cl
  405e41:	adc    ebp,ebp
  405e43:	cmp    eax,0x3e3c8db9
  405e48:	pop    edi
  405e49:	jnp    0x405e9a
  405e4b:	aas    
  405e4c:	stos   DWORD PTR es:[edi],eax
  405e4d:	scas   eax,DWORD PTR es:[edi]
  405e4e:	jbe    0x405e2f
  405e50:	loop   0x405ec3
  405e52:	sub    eax,0xdd42320b
  405e57:	add    DWORD PTR [esp+edx*8-0x4c],eax
  405e5b:	xor    ch,BYTE PTR [eax-0x4d]
  405e5e:	sbb    bl,bl
  405e60:	jbe    0x405e29
  405e62:	lods   eax,DWORD PTR ds:[esi]
  405e63:	js     0x405e37
  405e65:	mov    al,ds:0x472b2573
  405e6a:	mov    eax,0x35ba12a6
  405e6f:	cmp    esp,esi
  405e71:	pop    esp
  405e72:	xchg   ecx,eax
  405e73:	imul   esp,eax,0xffffffc1
  405e76:	xchg   esp,eax
  405e77:	sub    DWORD PTR [ebx+0x7e],ebx
  405e7a:	mov    edx,0x440d3a5e
  405e7f:	pop    ebx
  405e80:	test   DWORD PTR [eax],ebx
  405e82:	cdq    
  405e83:	sub    BYTE PTR [edx+eiz*8-0x5433756f],bh
  405e8a:	adc    BYTE PTR [ebx],dl
  405e8c:	fs push edx
  405e8e:	adc    BYTE PTR [ebp+0x18010bd0],dh
  405e94:	stc    
  405e95:	sbb    DWORD PTR [ebp+0x4e],esi
  405e98:	or     DWORD PTR [edx-0x72],0x488ebdc6
  405e9f:	add    DWORD PTR [ebp+edx*2+0x1d573f0e],0x9e28b6a
  405eaa:	ds inc eax
  405eac:	inc    esp
  405ead:	outs   dx,BYTE PTR ds:[esi]
  405eae:	es xchg edx,eax
  405eb0:	test   DWORD PTR [esi],eax
  405eb2:	push   ebp
  405eb3:	(bad)  
  405eb6:	jae    0x405e83
  405eb8:	retf   0x6e9e
  405ebb:	mov    ah,0x1a
  405ebd:	push   ebx
  405ebe:	fwait
  405ebf:	add    al,BYTE PTR [edx]
  405ec1:	bound  esp,QWORD PTR [ebx]
  405ec3:	enter  0x6458,0x8d
  405ec7:	or     edx,DWORD PTR [eax+ecx*1+0x4a08f9d4]
  405ece:	mov    ds:0xbbbad0fb,al
  405ed3:	adc    edx,ecx
  405ed5:	xchg   ebp,eax
  405ed6:	jle    0x405f55
  405ed8:	add    al,0x7
  405eda:	je     0x405ebd
  405edc:	dec    ebp
  405edd:	jnp    0x405ed6
  405edf:	jno    0x405eb2
  405ee1:	push   ebp
  405ee2:	pop    ebp
  405ee3:	mov    bl,0x9f
  405ee5:	cmp    al,0x39
  405ee7:	push   eax
  405ee8:	call   bx
  405eeb:	fcmovnu st,st(2)
  405eed:	aam    0xf0
  405eef:	je     0x405f19
  405ef1:	inc    edx
  405ef2:	sub    edx,DWORD PTR [edi*8+0x77c72c7e]
  405ef9:	pop    ebx
  405efa:	add    bh,BYTE PTR [ebx-0x5251f994]
  405f00:	sbb    eax,0xb3056fda
  405f05:	popf   
  405f06:	xchg   edi,eax
  405f07:	push   esp
  405f08:	sbb    al,0xc4
  405f0a:	add    BYTE PTR [eax+eax*2],dh
  405f0d:	fdivr  DWORD PTR [edx]
  405f0f:	shl    DWORD PTR [edi],1
  405f11:	je     0x405f89
  405f13:	mov    WORD PTR [ebp-0x40],es
  405f16:	loop   0x405f90
  405f18:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405f19:	aaa    
  405f1a:	add    BYTE PTR [ebp-0x12],0xfb
  405f1e:	sub    BYTE PTR [edx],bh
  405f20:	mov    cl,0xf3
  405f22:	gs (bad) 
  405f24:	adc    bh,BYTE PTR [eax]
  405f26:	sti    
  405f27:	test   DWORD PTR [ecx+0x612bdfb8],ebx
  405f2d:	mov    eax,ds:0xe24a22b0
  405f32:	push   eax
  405f33:	push   cs
  405f34:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405f35:	loopne 0x405f1c
  405f37:	cmp    BYTE PTR ds:0x53671efa,al
  405f3d:	(bad)  
  405f3e:	mov    ebp,0xfee6469
  405f43:	mov    WORD PTR [edi],?
  405f45:	bound  edi,QWORD PTR [ecx]
  405f47:	outs   dx,BYTE PTR ds:[esi]
  405f48:	xchg   edx,eax
  405f49:	add    DWORD PTR [ebp+0x43ae2375],edx
  405f4f:	dec    ecx
  405f50:	retf   0x9a1b
  405f53:	(bad)  
  405f54:	stos   DWORD PTR es:[edi],eax
  405f55:	dec    esi
  405f56:	mov    esp,0x9987f975
  405f5b:	sbb    al,BYTE PTR [ecx]
  405f5d:	and    BYTE PTR [bx+si],ch
  405f60:	and    ch,BYTE PTR [ebx+0x20]
  405f63:	fsub   QWORD PTR [ebx+eax*4+0x6b]
  405f67:	jnp    0x405f66
  405f69:	jns    0x405f04
  405f6b:	mov    ecx,0x4f7861cd
  405f70:	popa   
  405f71:	jo     0x405fd3
  405f73:	leave  
  405f74:	sahf   
  405f75:	cmp    bl,BYTE PTR [ebx+ecx*4]
  405f78:	inc    ebp
  405f79:	clc    
  405f7a:	mov    ecx,DWORD PTR [ebp-0x14]
  405f7d:	xor    eax,edi
  405f7f:	adc    DWORD PTR ds:0x4214e0,0xf7b
  405f89:	add    eax,esi
  405f8b:	cmp    ecx,eax
  405f8d:	mov    DWORD PTR ds:0x4214e4,0x32bb
  405f97:	je     0x406f55
  405f9d:	mov    eax,DWORD PTR [ebp-0x14]
  405fa0:	mov    eax,DWORD PTR [eax+0x18]
  405fa3:	mov    DWORD PTR ds:0x423744,0x1b
  405fad:	cmp    DWORD PTR ds:0x423744,0x0
  405fb4:	je     0x406010
  405fba:	cmp    DWORD PTR ds:0x423744,0xc
  405fc1:	jne    0x405fda
  405fc7:	push   0x117d
  405fcc:	push   DWORD PTR [ebp-0xc]
  405fcf:	push   0x7df0
  405fd4:	call   DWORD PTR ds:0x41f028
  405fda:	cmp    DWORD PTR ds:0x423744,0xd
  405fe1:	jne    0x405ff4
  405fe7:	mov    ecx,DWORD PTR ds:0x423744
  405fed:	dec    ecx
  405fee:	mov    DWORD PTR ds:0x423744,ecx
  405ff4:	mov    ecx,DWORD PTR ds:0x423744
  405ffa:	dec    ecx
  405ffb:	mov    DWORD PTR ds:0x423744,ecx
  406001:	jmp    0x405fad
  406006:	add    DWORD PTR ds:0x423680,0x6fcf
  406010:	mov    DWORD PTR [ebp-0x1c],eax
  406013:	mov    eax,ds:0x4214ec
  406018:	adc    eax,DWORD PTR ds:0x4236bc
  40601e:	mov    ds:0x4214ec,eax
  406023:	mov    eax,DWORD PTR [ebp-0x14]
  406026:	mov    ecx,DWORD PTR ds:0x4236e8
  40602c:	or     ecx,DWORD PTR ds:0x423730
  406032:	mov    DWORD PTR ds:0x4236e8,ecx
  406038:	mov    ecx,DWORD PTR [ebp+0x8]
  40603b:	sbb    DWORD PTR ds:0x4236b0,0x4236f4
  406045:	add    ecx,DWORD PTR [eax+0x20]
  406048:	and    eax,0x6582
  40604d:	jmp    0x4061e0
  406052:	push   ebp
  406053:	push   0x763f243a
  406058:	pop    edi
  406059:	jns    0x40609f
  40605b:	mov    ah,0xb5
  40605d:	xor    al,0xa0
  40605f:	hlt    
  406060:	sub    bh,BYTE PTR [eax+0x69b4]
  406066:	jbe    0x406069
  406068:	add    BYTE PTR [eax],al
  40606a:	(bad)  
  40606b:	(bad)  
  40606c:	mov    edi,0xb006ddeb
  406071:	mov    ah,0x3e
  406073:	mov    esi,0x2798985b
  406078:	leave  
  406079:	mov    cs,esp
  40607b:	xchg   esp,eax
  40607c:	jmp    0x406036
  40607e:	adc    eax,0x6f444437
  406083:	stc    
  406084:	mov    bl,0xf9
  406086:	ret    0x8ce1
  406089:	pop    ebp
  40608a:	cmp    BYTE PTR [eax],bh
  40608c:	pushf  
  40608d:	jo     0x4060ff
  40608f:	jmp    0x62381645
  406094:	jle    0x40602f
  406096:	imul   edx,DWORD PTR [eax+0x4d],0x49
  40609a:	std    
  40609b:	push   0x37e8d5e7
  4060a0:	xchg   DWORD PTR [esi],edi
  4060a2:	add    esp,DWORD PTR [edi-0x77]
  4060a5:	and    ah,BYTE PTR [ecx-0x19]
  4060a8:	dec    edx
  4060a9:	dec    eax
  4060aa:	mov    ecx,DWORD PTR [esi+ebx*8+0x74ccfee5]
  4060b1:	je     0x406083
  4060b3:	in     al,dx
  4060b4:	xchg   esp,eax
  4060b5:	call   0x6de54880
  4060ba:	fist   DWORD PTR [ecx-0x4f44c8ac]
  4060c0:	test   eax,0xe1d02de1
  4060c5:	out    0xca,eax
  4060c7:	outs   dx,DWORD PTR ds:[esi]
  4060c8:	xchg   ecx,eax
  4060c9:	sbb    DWORD PTR [esi+edx*2],edi
  4060cc:	outs   dx,DWORD PTR ds:[esi]
  4060cd:	xchg   DWORD PTR [edi+0x6c],esi
  4060d0:	and    eax,0xfbe2bc93
  4060d5:	jno    0x4060c9
  4060d7:	cmp    esp,DWORD PTR [ecx+0xac2ad96]
  4060dd:	push   ds
  4060de:	mov    ebx,0xf3672112
  4060e3:	mov    edi,DWORD PTR [edx]
  4060e5:	push   edi
  4060e6:	mov    ch,0xbc
  4060e8:	ins    BYTE PTR es:[edi],dx
  4060e9:	push   esi
  4060ea:	push   cs
  4060eb:	imul   ebx,DWORD PTR [ebp+0xcbe3f5],0x71206d38
  4060f5:	test   DWORD PTR [edx+0x7b],esp
  4060f8:	cmp    eax,0xfe30cbd4
  4060fd:	imul   edi,ecx,0xe8e355fb
  406103:	clc    
  406104:	sar    BYTE PTR [edi-0x4ef92f98],cl
  40610a:	(bad)  
  40610b:	xor    BYTE PTR [edi-0x202f2f37],cl
  406111:	hlt    
  406112:	sub    dh,BYTE PTR [ebx+0x2c14a80a]
  406118:	xlat   BYTE PTR ds:[ebx]
  406119:	mov    esi,0x6084fcd
  40611e:	mov    cs,edi
  406120:	mov    bl,BYTE PTR [esi-0x26]
  406123:	inc    edi
  406124:	sub    ecx,edx
  406126:	sbb    eax,0xed18b087
  40612b:	rcr    BYTE PTR [esi],0x90
  40612e:	loope  0x40617f
  406130:	fadd   DWORD PTR [edx-0x1aaa9cae]
  406136:	or     DWORD PTR [ecx-0x5e],edx
  406139:	sbb    BYTE PTR [edx],bh
  40613b:	mov    dl,0x12
  40613d:	stos   BYTE PTR es:[edi],al
  40613e:	cmp    BYTE PTR [eax],0x51
  406141:	and    al,0x69
  406143:	and    DWORD PTR [edi-0x71562c5d],eax
  406149:	(bad)  [ebx]
  40614b:	xor    eax,0x60d1239d
  406150:	mov    cl,0xeb
  406152:	dec    esp
  406153:	inc    ecx
  406154:	xchg   esp,eax
  406155:	dec    edx
  406157:	mov    esi,esp
  406159:	(bad)  
  40615a:	fidiv  WORD PTR [ebp+0x1b]
  40615d:	push   ds
  40615e:	mov    esi,0xc13e52da
  406163:	sub    eax,0x2e977b19
  406168:	mov    bl,0x66
  40616a:	adc    DWORD PTR [edx],0xffffffdd
  40616d:	sub    DWORD PTR [edi-0x4f6b61ca],esi
  406173:	gs jp  0x4061e8
  406176:	and    BYTE PTR [esi-0x61],dh
  406179:	test   BYTE PTR [eax+0x1f],dl
  40617c:	and    DWORD PTR [edi],ecx
  40617e:	fistp  QWORD PTR [ecx]
  406180:	or     ebx,ebx
  406182:	cmc    
  406183:	mov    ecx,0xdc19b339
  406188:	mov    dl,0x1d
  40618a:	inc    ecx
  40618b:	adc    bh,bl
  40618d:	rcl    BYTE PTR [edx],cl
  40618f:	icebp  
  406190:	mov    dh,0x91
  406192:	pop    esp
  406193:	push   cs
  406194:	dec    esp
  406195:	mov    edx,ebx
  406197:	jb     0x4061f1
  406199:	in     al,dx
  40619a:	stc    
  40619b:	jge    0x406152
  40619d:	cmp    DWORD PTR [eax],edi
  40619f:	pop    esp
  4061a0:	or     al,BYTE PTR [edx-0x3f]
  4061a3:	push   eax
  4061a4:	lock and dh,BYTE PTR ds:0x8ed94cde
  4061ab:	or     dh,BYTE PTR [edi-0x24]
  4061ae:	jecxz  0x4061ac
  4061b0:	inc    eax
  4061b1:	push   ebx
  4061b2:	leave  
  4061b3:	std    
  4061b4:	mov    esi,0xb30ba28b
  4061b9:	jbe    0x40620a
  4061bb:	pop    es
  4061bc:	sbb    al,0x8a
  4061be:	mov    ah,0x26
  4061c0:	jbe    0x406228
  4061c2:	out    0xf4,al
  4061c4:	pop    ds
  4061c5:	mov    cl,0x5
  4061c7:	or     ch,BYTE PTR [eax-0x353b6291]
  4061cd:	jo     0x40615f
  4061cf:	push   ebp
  4061d0:	sbb    ebx,ecx
  4061d2:	sti    
  4061d3:	push   eax
  4061d4:	dec    edx
  4061d5:	ja     0x406234
  4061d7:	mov    bl,0x72
  4061d9:	add    ecx,esi
  4061db:	or     eax,DWORD PTR [edi+0x24]
  4061de:	ja     0x406240
  4061e0:	mov    DWORD PTR [ebp-0x28],ecx
  4061e3:	and    eax,DWORD PTR ds:0x42372c
  4061e9:	jmp    0x40637c
  4061ee:	aam    0xe3
  4061f0:	lds    edx,FWORD PTR [eax-0x182a4909]
  4061f6:	cmp    al,0x1f
  4061f8:	repnz mov edx,0xb02910f3
  4061fe:	sub    ch,BYTE PTR [ebx+0x0]
  406201:	add    BYTE PTR [esi+0x1],dh
  406204:	add    BYTE PTR [eax],al
  406206:	dec    ebp
  406207:	jbe    0x4061a9
  406209:	xchg   esi,eax
  40620a:	in     al,dx
  40620b:	pushf  
  40620c:	loop   0x406271
  40620e:	arpl   WORD PTR [ecx+eax*8+0x71ce3673],ax
  406215:	jl     0x406271
  406217:	dec    esp
  406218:	(bad)  
  406219:	adc    ebp,DWORD PTR [ecx]
  40621b:	jecxz  0x4061e9
  40621d:	gs jmp 0x406249
  406220:	push   edi
  406221:	ret    
  406222:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406223:	in     eax,0x56
  406225:	repz call FWORD PTR [edi+0x60e641bf]
  40622c:	inc    esp
  40622d:	xchg   BYTE PTR [edx-0x50614d39],dh
  406233:	jge    0x4061c1
  406235:	pop    edx
  406236:	jmp    0x4a4d80f2
  40623b:	repz hlt 
  40623d:	std    
  40623e:	ins    DWORD PTR es:[edi],dx
  40623f:	jl     0x40622e
  406241:	or     al,0x70
  406243:	sub    al,0xa2
  406245:	mov    ?,WORD PTR [edi-0x3654f134]
  40624b:	dec    ecx
  40624c:	mov    bl,0x4c
  40624e:	repnz add eax,0x1c6765f
  406254:	add    edi,DWORD PTR [eax-0x68]
  406257:	test   eax,0x5d390de6
  40625c:	inc    BYTE PTR [edx+esi*1-0x2a]
  406260:	aad    0x28
  406262:	jle    0x4061ea
  406264:	dec    esp
  406265:	sub    BYTE PTR [ebp-0x13],dh
  406268:	out    0x6b,eax
  40626a:	cmp    BYTE PTR [eax+0x5d],dl
  40626d:	xor    BYTE PTR [eax+0x41],0x47
  406271:	ds aad 0xfa
  406274:	xchg   edx,eax
  406275:	or     DWORD PTR [edi+ebp*8],eax
  406278:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406279:	mov    edi,0x930096c6
  40627e:	lahf   
  40627f:	pop    ecx
  406280:	xchg   esp,eax
  406281:	out    0x62,eax
  406283:	sub    al,0xc8
  406285:	mov    DWORD PTR [edi+0xe],esi
  406288:	mov    ah,0xc9
  40628a:	xchg   DWORD PTR [esi],ebp
  40628c:	push   eax
  40628d:	test   esp,edi
  40628f:	aad    0x44
  406291:	ja     0x406236
  406293:	ins    BYTE PTR es:[edi],dx
  406294:	mov    ah,0xd7
  406296:	inc    ecx
  406297:	inc    ebp
  406298:	and    eax,0xd152b2c1
  40629d:	shl    edi,cl
  40629f:	imul   ecx,DWORD PTR [edx+eiz*8-0x4a025a7e],0xe77c5432
  4062aa:	(bad)  
  4062ab:	pusha  
  4062ac:	xchg   esp,eax
  4062ad:	(bad)
  4062b0:	pushf  
  4062b1:	clc    
  4062b2:	call   0xd98d:0x1860eb4d
  4062b9:	cdq    
  4062ba:	jecxz  0x4062da
  4062bc:	add    al,0xd7
  4062be:	sub    cl,BYTE PTR [ebp+0x79]
  4062c1:	outs   dx,DWORD PTR ds:[esi]
  4062c2:	clc    
  4062c3:	retf   
  4062c4:	ds sbb dl,ch
  4062c7:	dec    esi
  4062c8:	les    ebp,FWORD PTR [eax-0x4336b8a1]
  4062ce:	call   0x912:0xdc1540ad
  4062d5:	add    BYTE PTR [eax],dl
  4062d7:	mov    ds:0x385a0ad7,eax
  4062dc:	pop    esp
  4062dd:	dec    esi
  4062de:	shl    BYTE PTR [edx],0x60
  4062e1:	loopne 0x40627b
  4062e3:	fidivr WORD PTR [esi]
  4062e5:	popf   
  4062e6:	mov    DWORD PTR [ecx-0x1002ebff],edi
  4062ec:	test   eax,0x4eddbc23
  4062f1:	or     cl,BYTE PTR [ebp-0x56106aaf]
  4062f7:	cmp    eax,0xad130df8
  4062fc:	out    dx,al
  4062fd:	aam    0xe3
  4062ff:	sbb    bh,bl
  406301:	push   ebx
  406302:	and    BYTE PTR [edx],dl
  406304:	cmp    bl,BYTE PTR [edx+0x3]
  406307:	jl     0x406291
  406309:	cmp    DWORD PTR [esi+eax*2+0x699c05dd],edx
  406310:	xor    esi,DWORD PTR [edi]
  406312:	xchg   BYTE PTR [eax],cl
  406314:	pop    ds
  406315:	adc    DWORD PTR [edx+0x57],ecx
  406318:	add    al,0x65
  40631a:	mov    bl,0x82
  40631c:	stc    
  40631d:	call   0x66c2c53d
  406322:	pop    ebx
  406323:	daa    
  406324:	xor    al,0xf0
  406326:	dec    esp
  406327:	inc    ebx
  406328:	imul   esi,DWORD PTR [ebp-0x442ce3d5],0x58
  40632f:	mov    esi,DWORD PTR [esi+eiz*8]
  406332:	mov    bh,0xaf
  406334:	xchg   ax,ax
  406336:	stc    
  406337:	inc    edi
  406338:	ins    BYTE PTR es:[edi],dx
  406339:	add    al,bh
  40633b:	pop    esp
  40633c:	rcr    DWORD PTR [ebx],1
  40633e:	and    bl,BYTE PTR [edx+0x5b]
  406341:	fmul   DWORD PTR [edi+0x43421b31]
  406347:	in     al,0x69
  406349:	(bad)  
  40634a:	or     bl,ah
  40634c:	pop    ecx
  40634d:	popaw  
  40634f:	jbe    0x406358
  406351:	adc    al,0x9b
  406353:	popf   
  406354:	xor    edx,DWORD PTR [ecx+0x72]
  406357:	push   0x721387b5
  40635c:	jp     0x40631a
  40635e:	and    BYTE PTR [eax+0x3c01082c],0x30
  406365:	mov    edx,0x575ffabd
  40636a:	inc    edx
  40636b:	sub    al,0xbe
  40636d:	pop    ebp
  40636e:	or     al,0xed
  406370:	push   edi
  406371:	mov    bl,0x41
  406373:	xchg   edx,eax
  406374:	jmp    0x234f:0xea1c89e8
  40637b:	mov    ecx,DWORD PTR [ebx+0x4d8bec45]
  406381:	or     BYTE PTR [ebx],al
  406383:	dec    eax
  406384:	and    al,0x21
  406386:	sbb    eax,0x423678
  40638b:	mov    DWORD PTR [ebp-0x30],ecx
  40638e:	sub    DWORD PTR ds:0x4214f0,0xf87
  406398:	mov    eax,DWORD PTR [ebp-0x14]
  40639b:	mov    ecx,DWORD PTR [ebp+0x8]
  40639e:	add    DWORD PTR ds:0x423684,0x42372c
  4063a8:	add    ecx,DWORD PTR [eax+0x1c]
  4063ab:	mov    DWORD PTR ds:0x42372c,0x2bf0
  4063b5:	mov    DWORD PTR [ebp-0x14],ecx
  4063b8:	mov    DWORD PTR ds:0x42367c,0x4d64
  4063c2:	jmp    0x406c02
  4063c7:	adc    eax,eax
  4063c9:	mov    eax,DWORD PTR [ebp-0x28]
  4063cc:	mov    ecx,DWORD PTR [ebp+0x8]
  4063cf:	sbb    DWORD PTR ds:0x423678,0x4214f0
  4063d9:	jmp    0x40656c
  4063de:	loope  0x4063c5
  4063e0:	cdq    
  4063e1:	dec    edi
  4063e2:	popf   
  4063e3:	jg     0x4063dc
  4063e5:	out    dx,eax
  4063e6:	sub    ch,BYTE PTR [ebx+ebx*8+0x23af346]
  4063ed:	call   0x176:0x6ca0
  4063f4:	add    BYTE PTR [eax],al
  4063f6:	adc    BYTE PTR [esp+eax*2-0x42],dh
  4063fa:	aas    
  4063fb:	ins    BYTE PTR es:[edi],dx
  4063fc:	xor    DWORD PTR [edx+0x65],esi
  4063ff:	fimul  DWORD PTR [ebx+eax*8+0x782044a0]
  406406:	adc    ch,BYTE PTR [edi-0x6c927904]
  40640c:	or     BYTE PTR ds:0xd5908acc,0xdd
  406413:	jmp    FWORD PTR [ebx]
  406415:	xor    DWORD PTR [ecx],esi
  406417:	sbb    bl,BYTE PTR [ecx+ecx*2-0x3b9ddea3]
  40641e:	cmc    
  40641f:	in     al,0x87
  406421:	or     eax,0xba825482
  406426:	add    DWORD PTR [esi+0x15],0x21fe80ae
  40642d:	xchg   ecx,eax
  40642e:	pop    edx
  40642f:	jmp    0x24e8e56f
  406434:	rol    DWORD PTR [ebx-0x4225ea46],0x84
  40643b:	imul   edx,DWORD PTR [edx+0x64],0x30
  40643f:	or     BYTE PTR [esi+ebx*2-0x53],ch
  406443:	mov    bl,BYTE PTR [eax+0xc]
  406446:	jb     0x4064ba
  406448:	and    ebp,DWORD PTR [edi]
  40644a:	ins    DWORD PTR es:[edi],dx
  40644b:	cmp    dh,BYTE PTR [eax+0x33bf7b4]
  406451:	imul   esi,ebx,0x3b8cd553
  406457:	imul   esp,DWORD PTR [ecx],0xb8a5db03
  40645d:	add    eax,0x2fca13c1
  406462:	sub    al,0xf0
  406464:	daa    
  406465:	cwde   
  406466:	rcr    bh,cl
  406468:	mov    BYTE PTR [ecx-0x5d],ah
  40646b:	cmc    
  40646c:	outs   dx,DWORD PTR ds:[esi]
  40646d:	push   esi
  40646e:	sbb    BYTE PTR [edi-0x77],bh
  406471:	ss ss js 0x4064e8
  406475:	fsubr  st,st(5)
  406477:	mov    WORD PTR [ecx+ebp*4],gs
  40647a:	jbe    0x4064c5
  40647c:	sbb    DWORD PTR ds:0x55eb3a73,0x79
  406483:	sub    al,0x6b
  406485:	pop    ds
  406486:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406487:	stos   BYTE PTR es:[edi],al
  406488:	cmp    dl,al
  40648a:	sub    esp,ebp
  40648c:	das    
  40648d:	fbld   TBYTE PTR [ebx+0x26]
  406490:	std    
  406491:	imul   eax,DWORD PTR [ebp-0x618511d5],0x6ee43bb3
  40649b:	rol    dl,cl
  40649d:	call   0x2de88424
  4064a2:	pop    ds
  4064a3:	pusha  
  4064a4:	ds and al,0xb3
  4064a7:	xchg   esp,eax
  4064a8:	jo     0x406473
  4064aa:	pop    edx
  4064ab:	sbb    al,0x9f
  4064ad:	aad    0x70
  4064af:	inc    edi
  4064b0:	repnz (bad) 
  4064b2:	mov    ds:0x1f80c9b2,al
  4064b7:	mov    ebp,0x57929e1f
  4064bc:	jl     0x406455
  4064be:	and    al,0x7c
  4064c0:	jne    0x406503
  4064c2:	scas   al,BYTE PTR es:[edi]
  4064c3:	adc    ebp,DWORD PTR [eax-0x17]
  4064c6:	test   BYTE PTR [ecx],0x2a
  4064c9:	and    al,0xce
  4064cb:	aas    
  4064cc:	in     al,dx
  4064cd:	outs   dx,BYTE PTR ds:[esi]
  4064ce:	aad    0x4e
  4064d0:	adc    bl,bh
  4064d2:	ins    BYTE PTR es:[edi],dx
  4064d3:	mov    ecx,0x26f78396
  4064d8:	int3   
  4064d9:	jecxz  0x40648c
  4064db:	not    DWORD PTR [ebp-0x63]
  4064de:	aam    0x74
  4064e0:	xchg   ecx,eax
  4064e1:	jno    0x406486
  4064e3:	lock lods al,BYTE PTR ds:[esi]
  4064e5:	add    esi,edi
  4064e7:	xchg   ecx,eax
  4064e8:	sbb    al,0x47
  4064ea:	fs ins DWORD PTR es:[edi],dx
  4064ec:	xchg   DWORD PTR [esp+edi*1+0x8a2b207],ebp
  4064f3:	adc    BYTE PTR [ebp-0x48],dh
  4064f6:	xchg   esp,eax
  4064f7:	int3   
  4064f8:	inc    ebp
  4064f9:	in     al,dx
  4064fa:	jbe    0x40655d
  4064fc:	inc    edi
  4064fd:	in     al,0xf8
  4064ff:	cmp    ebp,esi
  406501:	xchg   ebx,eax
  406502:	and    eax,0x11f4d605
  406507:	pop    ss
  406508:	dec    eax
  406509:	retf   0x1123
  40650c:	pop    ss
  40650d:	inc    ebx
  40650e:	mov    edx,DWORD PTR [edx-0x338ed53a]
  406514:	fcmovu st,st(5)
  406516:	pop    ds
  406517:	dec    ebx
  406518:	ins    DWORD PTR es:[edi],dx
  406519:	pop    ebx
  40651a:	adc    al,0x6d
  40651c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40651d:	adc    ch,BYTE PTR [ecx]
  40651f:	push   0x6d
  406521:	rol    DWORD PTR [esi-0x22],0x89
  406525:	xchg   ecx,eax
  406526:	pop    ebp
  406527:	retf   
  406528:	stos   BYTE PTR es:[edi],al
  406529:	test   DWORD PTR [eax-0x76835fb3],ebx
  40652f:	mov    ds:0xe365c842,eax
  406534:	push   ebx
  406535:	jmp    0x6d36:0xef2b1fea
  40653c:	(bad)  
  40653d:	adc    BYTE PTR [ebp+0x4c],dh
  406540:	jns    0x40652c
  406542:	mov    bh,0x98
  406544:	pop    ecx
  406545:	(bad)  
  406546:	out    dx,eax
  406547:	ficomp DWORD PTR [ebx-0x60]
  40654a:	ret    
  40654b:	and    BYTE PTR [esi],dl
  40654d:	fdivr  st,st(2)
  40654f:	dec    edx
  406550:	test   BYTE PTR [ecx-0x5e8f991e],0xdd
  406557:	int3   
  406558:	and    ebx,DWORD PTR [esi]
  40655a:	sub    dh,BYTE PTR [edx+0x2f73532a]
  406560:	test   al,0xb5
  406562:	mov    ebx,0x65c2a82a
  406567:	push   0x22d25ba5
  40656c:	add    ecx,DWORD PTR [eax+ebx*4]
  40656f:	mov    DWORD PTR [ebp-0x20],ecx
  406572:	mov    eax,DWORD PTR [ebp-0x20]
  406575:	je     0x406c02
  40657b:	mov    DWORD PTR ds:0x4214e8,0x86e
  406585:	jmp    0x40673a
  40658a:	mov    eax,DWORD PTR [ebp-0x8]
  40658d:	mov    ecx,DWORD PTR [ebp-0x4]
  406590:	xor    eax,edi
  406592:	add    eax,esi
  406594:	cmp    ecx,eax
  406596:	jmp    0x406729
  40659b:	pop    edi
  40659c:	fs jb  0x406535
  40659f:	jnp    0x406537
  4065a1:	(bad)  
  4065a2:	in     eax,dx
  4065a3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4065a4:	mov    cl,BYTE PTR [edi]
  4065a6:	adc    eax,0x3afac4f3
  4065ab:	push   ss
  4065ac:	outs   dx,BYTE PTR ds:[esi]
  4065ad:	add    BYTE PTR [eax],al
  4065af:	jbe    0x4065b2
  4065b1:	add    BYTE PTR [eax],al
  4065b3:	cmp    esi,DWORD PTR [esi+0x624c2b61]
  4065b9:	out    dx,eax
  4065ba:	mov    WORD PTR [edx],ss
  4065bc:	(bad)  
  4065bd:	cmp    BYTE PTR [edi],al
  4065bf:	jmp    0x53fa:0x979ed6b9
  4065c6:	je     0x40661a
  4065c8:	mov    cl,0xc5
  4065ca:	ja     0x4065ce
  4065cc:	data16 jne 0x4065f0
  4065cf:	cmp    al,0x56
  4065d1:	gs inc esp
  4065d3:	sub    DWORD PTR [ecx],esp
  4065d5:	dec    edx
  4065d6:	jmp    0x54f5:0xaa3da6ed
  4065dd:	adc    BYTE PTR [eax+0x2d95647c],ah
  4065e3:	dec    edi
  4065e4:	and    eax,0xd24f263c
  4065e9:	imul   esi,ebp,0x420cd7f6
  4065ef:	adc    BYTE PTR [ecx-0x4a983d56],0xf5
  4065f6:	pop    edi
  4065f7:	jle    0x406592
  4065f9:	xchg   DWORD PTR [ecx-0xc5d735c],ebx
  4065ff:	xchg   edx,eax
  406600:	sbb    ebx,ecx
  406602:	mov    esi,?
  406604:	out    0x50,eax
  406606:	lea    eax,[ecx]
  406608:	stos   BYTE PTR es:[edi],al
  406609:	imul   esi,DWORD PTR [ebx+0x4c],0x22
  40660d:	jae    0x406625
  40660f:	add    DWORD PTR ds:0x369dd080,edi
  406615:	sbb    BYTE PTR [edi+0x481190e0],ah
  40661b:	out    dx,al
  40661c:	jp     0x406659
  40661e:	xchg   ecx,eax
  40661f:	fwait
  406620:	adc    DWORD PTR [edi-0x16ae4303],edx
  406626:	popa   
  406627:	hlt    
  406628:	or     BYTE PTR [eax+0x36805493],ch
  40662e:	add    dh,cl
  406630:	daa    
  406631:	test   eax,0x42f556ec
  406636:	fisub  WORD PTR [ebx+eax*2-0x6afa8114]
  40663d:	xchg   esp,eax
  40663e:	or     al,0xce
  406640:	(bad)  
  406641:	adc    esp,ebp
  406643:	stc    
  406644:	ret    0xfdb1
  406647:	inc    edi
  406648:	xor    DWORD PTR [ebx-0x23],edx
  40664b:	jbe    0x406623
  40664d:	repnz into 
  40664f:	into   
  406650:	xor    BYTE PTR [esi-0x79],cl
  406653:	xor    eax,0xad1d7772
  406658:	data16 (bad) 
  40665a:	and    eax,0xfd804f61
  40665f:	push   0x59
  406661:	mov    es,esp
  406663:	test   BYTE PTR [edi+edi*4-0x456a9ac5],ah
  40666a:	stos   BYTE PTR es:[edi],al
  40666b:	les    edx,FWORD PTR [ecx]
  40666d:	and    eax,0x650351d9
  406672:	xor    al,0x61
  406674:	sbb    BYTE PTR [eax],0xaf
  406677:	xchg   ebx,eax
  406678:	nop
  406679:	push   0xcf1459a6
  40667e:	xchg   ebx,eax
  40667f:	nop
  406680:	outs   dx,DWORD PTR ds:[esi]
  406681:	mov    ds:0x4507717,eax
  406686:	lods   eax,DWORD PTR ds:[esi]
  406687:	adc    esp,DWORD PTR [ebx]
  406689:	mov    edx,0x37029f25
  40668e:	stos   BYTE PTR es:[edi],al
  40668f:	pop    edi
  406690:	scas   eax,DWORD PTR es:[edi]
  406691:	sbb    eax,0x176adfda
  406696:	loop   0x4066b2
  406698:	pop    edx
  406699:	div    BYTE PTR [ebx]
  40669b:	outs   dx,BYTE PTR ds:[esi]
  40669c:	out    dx,al
  40669d:	adc    ebx,DWORD PTR [edi-0x3b]
  4066a0:	fst    QWORD PTR [eax-0x42d21096]
  4066a6:	test   bl,ch
  4066a8:	mov    ecx,0x589b9aa
  4066ad:	sub    ah,BYTE PTR [ebx+0x1]
  4066b0:	jnp    0x4066fb
  4066b2:	repz inc edx
  4066b4:	pop    ss
  4066b5:	test   BYTE PTR [edx-0x42],0x1a
  4066b9:	pop    edx
  4066ba:	xlat   BYTE PTR ds:[ebx]
  4066bb:	out    0xb5,eax
  4066bd:	std    
  4066be:	cld    
  4066bf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4066c0:	fnstcw WORD PTR [edi-0x25]
  4066c3:	pop    ecx
  4066c4:	ficomp WORD PTR [ebp+0x72dc8d17]
  4066ca:	aas    
  4066cb:	dec    edx
  4066cc:	fsub   st,st(7)
  4066ce:	clc    
  4066cf:	mov    bl,0x3d
  4066d1:	jmp    0x13b9:0xeded00a4
  4066d8:	sahf   
  4066d9:	inc    ecx
  4066da:	pop    ebp
  4066db:	sub    al,0xa8
  4066dd:	mov    ds:0x3125d0f7,al
  4066e2:	jne    0x406742
  4066e4:	sub    al,ch
  4066e6:	cli    
  4066e7:	pop    ebx
  4066e8:	inc    ecx
  4066e9:	and    BYTE PTR [esi+0x49],dh
  4066ec:	test   al,0xdf
  4066ee:	imul   edx,DWORD PTR [eax-0x73],0x4b
  4066f2:	sub    ecx,DWORD PTR [esi-0x576ddbcf]
  4066f8:	cmp    esi,DWORD PTR [ecx+0x521a2ad6]
  4066fe:	pop    ebx
  4066ff:	outs   dx,BYTE PTR ds:[esi]
  406700:	pop    edx
  406701:	add    eax,0x66aed5b
  406706:	int3   
  406707:	inc    esi
  406708:	or     esi,esi
  40670a:	mov    ecx,0x44c22670
  40670f:	pop    eax
  406710:	mov    ch,0xa3
  406712:	rol    edx,1
  406714:	hlt    
  406715:	adc    bh,dl
  406717:	clc    
  406718:	call   0xf735:0x98bfb420
  40671f:	dec    ebp
  406720:	adc    esi,DWORD PTR [esi+0x63]
  406723:	jl     0x406728
  406725:	rcl    DWORD PTR [eax],cl
  406727:	add    ebx,DWORD PTR [eax+0x826840f]
  40672d:	add    BYTE PTR [eax],al
  40672f:	mov    eax,DWORD PTR [ebp-0x2c]
  406732:	test   eax,eax
  406734:	je     0x4070f4
  40673a:	lea    eax,[ebp-0x4]
  40673d:	jmp    0x4068d0
  406742:	cmp    edx,DWORD PTR [edx-0x22106a32]
  406748:	jnp    0x406708
  40674a:	and    DWORD PTR [esp+ebx*1-0x4be71082],edi
  406751:	jnp    0x4066df
  406753:	outs   dx,DWORD PTR ds:[esi]
  406754:	add    BYTE PTR [eax],al
  406756:	jbe    0x406759
  406758:	add    BYTE PTR [eax],al
  40675a:	leave  
  40675b:	add    cl,BYTE PTR [ebx+0x4c465b31]
  406761:	outs   dx,BYTE PTR ds:[esi]
  406762:	in     al,dx
  406763:	and    ecx,ebx
  406765:	daa    
  406766:	pop    edx
  406767:	(bad)  
  406768:	call   0x4e5000ac
  40676d:	faddp  st(5),st
  40676f:	div    DWORD PTR [ecx+0x3e351908]
  406775:	pop    ss
  406776:	push   ecx
  406777:	inc    ecx
  406778:	mov    ecx,ecx
  40677a:	add    edi,DWORD PTR [ebp-0x1c0e7f39]
  406780:	sub    esi,DWORD PTR [esi+edi*1+0xa]
  406784:	ds mov edx,eax
  406787:	fs in  eax,0x1e
  40678a:	test   eax,0x57302206
  40678f:	or     ah,BYTE PTR [edi]
  406791:	call   0xc057:0xb43023e
  406798:	dec    ebp
  406799:	and    ebx,DWORD PTR [ebp-0x5d]
  40679c:	f2xm1  
  40679e:	ret    
  40679f:	mov    BYTE PTR [esi],dl
  4067a1:	cmp    ecx,eax
  4067a3:	or     ah,BYTE PTR [ecx+0x697dbe24]
  4067a9:	aad    0xd0
  4067ab:	in     eax,dx
  4067ac:	pop    ss
  4067ad:	sub    esi,DWORD PTR [ecx+0x7f]
  4067b0:	cmp    al,0xc8
  4067b2:	xchg   bl,bl
  4067b4:	or     eax,DWORD PTR [ebp-0x7]
  4067b7:	add    DWORD PTR [ebp-0x43550cf3],eax
  4067bd:	dec    eax
  4067be:	loop   0x4067dc
  4067c0:	lods   eax,DWORD PTR ds:[esi]
  4067c1:	mov    al,0x2d
  4067c3:	lds    ebx,FWORD PTR [eax-0x75]
  4067c6:	dec    ebp
  4067c7:	mov    ebx,0x553efce2
  4067cc:	xchg   ebx,eax
  4067cd:	jne    0x4067bf
  4067cf:	jle    0x406792
  4067d1:	jns    0x406847
  4067d3:	pop    edx
  4067d4:	cmc    
  4067d5:	push   edi
  4067d6:	push   cs
  4067d7:	in     al,0x42
  4067d9:	mov    ebp,0x5706c03
  4067de:	jmp    0x40681b
  4067e0:	shl    DWORD PTR [ebx],cl
  4067e2:	pop    edx
  4067e3:	cwde   
  4067e4:	gs mov ebx,0x145f5602
  4067ea:	adc    ch,BYTE PTR [edx+0x61]
  4067ed:	dec    esi
  4067ee:	lock stc 
  4067f0:	and    BYTE PTR [ebx+0x357b84c2],al
  4067f6:	arpl   WORD PTR [eax+0x34],ax
  4067f9:	rcl    DWORD PTR [ecx+eiz*1],0x26
  4067fd:	fidiv  DWORD PTR [eax-0x77]
  406800:	smsw   WORD PTR [ebx+0x1b5ede04]
  406807:	xchg   esi,eax
  406808:	jo     0x406878
  40680a:	aas    
  40680b:	mov    ebp,0x62378e9a
  406810:	shl    BYTE PTR [edx],cl
  406812:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406813:	ds jb  0x406848
  406816:	cwde   
  406817:	retf   
  406818:	xor    al,0xf8
  40681a:	mov    ds:0x7f430629,al
  40681f:	sub    al,0x1d
  406821:	cld    
  406822:	loopne 0x4067b6
  406824:	rcl    BYTE PTR [ecx-0x70a69d2c],1
  40682a:	bound  ebp,QWORD PTR [eax]
  40682c:	ins    BYTE PTR es:[edi],dx
  40682d:	les    esi,FWORD PTR [eax-0x2]
  406830:	test   DWORD PTR [esi-0x78],ebx
  406833:	fs fsubp st(1),st
  406836:	jb     0x40686c
  406838:	cmp    BYTE PTR [ecx-0x41],ch
  40683b:	adc    edi,DWORD PTR [ebx+0x44]
  40683e:	mov    eax,0xbd03b5fa
  406843:	adc    eax,0xcbecffdb
  406848:	in     eax,0x5e
  40684a:	mov    eax,0xd64f3a14
  40684f:	cwde   
  406850:	pop    ebx
  406851:	dec    edx
  406852:	inc    ebp
  406853:	jne    0x40688d
  406855:	mov    edi,0xab628d49
  40685a:	jns    0x406807
  40685c:	jnp    0x4068be
  40685e:	adc    ch,BYTE PTR [edi+0x7]
  406861:	mov    ecx,DWORD PTR [eax+0x73]
  406864:	lods   al,BYTE PTR ds:[esi]
  406865:	jp     0x4068a4
  406867:	adc    al,0xcf
  406869:	in     al,dx
  40686a:	mov    DWORD PTR [esi-0x160ba000],ecx
  406870:	ins    DWORD PTR es:[edi],dx
  406871:	or     eax,0xdac82193
  406876:	lods   al,BYTE PTR ds:[esi]
  406877:	sub    ebx,DWORD PTR [esi]
  406879:	dec    edx
  40687a:	add    BYTE PTR [esp+eax*1+0x26c68b55],al
  406881:	jb     0x406845
  406883:	fs in  eax,0x8a
  406886:	inc    ebx
  406887:	leave  
  406888:	pusha  
  406889:	inc    ecx
  40688a:	sti    
  40688b:	mov    ds:0x6938e08f,al
  406890:	xchg   edi,eax
  406891:	call   0xf5824849
  406896:	loop   0x40681f
  406898:	ret    0x9b5e
  40689b:	add    eax,0x12d4cae9
  4068a0:	addr16 mov ch,0x50
  4068a3:	dec    edx
  4068a4:	sbb    al,0xb9
  4068a6:	ret    
  4068a7:	daa    
  4068a8:	leave  
  4068a9:	lods   al,BYTE PTR ds:[esi]
  4068aa:	add    eax,0xc9da964f
  4068af:	or     ecx,edi
  4068b1:	xor    BYTE PTR [ebp+0x2f276530],bh
  4068b7:	xor    ch,BYTE PTR [ecx+0x47b05664]
  4068bd:	push   edx
  4068be:	jnp    0x406844
  4068c0:	push   ss
  4068c1:	sahf   
  4068c2:	retf   0x45f2
  4068c5:	pop    ss
  4068c6:	adc    al,0xed
  4068c8:	ss push cs
  4068ca:	jb     0x406901
  4068cc:	ret    0x1c0d
  4068cf:	in     eax,0x50
  4068d1:	push   DWORD PTR [ebp-0x20]
  4068d4:	jmp    0x406a67
  4068d9:	sub    bh,cl
  4068db:	dec    BYTE PTR [eax-0x1]
  4068de:	dec    edi
  4068df:	mov    esi,0x744ba9fb
  4068e4:	nop
  4068e5:	aas    
  4068e6:	dec    edi
  4068e7:	dec    esp
  4068e8:	mov    bh,0x2
  4068ea:	jno    0x4068ec
  4068ec:	add    BYTE PTR [esi+0x1],dh
  4068ef:	add    BYTE PTR [eax],al
  4068f1:	pop    esp
  4068f2:	ins    BYTE PTR es:[edi],dx
  4068f3:	cld    
  4068f4:	add    bl,BYTE PTR [ebp-0x12]
  4068f7:	pop    edi
  4068f8:	pusha  
  4068f9:	iret   
  4068fa:	or     ah,dl
  4068fc:	pop    ebx
  4068fd:	mov    ds:0xfd0f844c,al
  406902:	and    esi,ecx
  406904:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406905:	pushf  
  406906:	addr16 cld 
  406908:	out    dx,al
  406909:	iret   
  40690a:	sbb    BYTE PTR [esp+ebx*1+0x26],dh
  40690e:	inc    esi
  40690f:	repnz mov edi,0x1430812
  406915:	and    bl,BYTE PTR [eax+ebp*8]
  406918:	cmc    
  406919:	sbb    eax,0xd6cdff18
  40691e:	jg     0x40696d
  406920:	and    ecx,DWORD PTR [esi]
  406922:	in     al,0x55
  406924:	outs   dx,BYTE PTR ds:[esi]
  406925:	pop    ss
  406926:	pop    es
  406927:	int3   
  406928:	addr16 sub al,0xdf
  40692b:	push   0xe78dc58b
  406930:	mov    al,ds:0x6ed4b98d
  406935:	in     al,0xfd
  406937:	or     eax,ecx
  406939:	mov    eax,0xf414edb2
  40693e:	mov    BYTE PTR [eax+eiz*1-0x36],bh
  406942:	add    DWORD PTR [eax],ecx
  406944:	pusha  
  406945:	shr    cl,0x94
  406948:	scas   eax,DWORD PTR es:[edi]
  406949:	sbb    BYTE PTR [esi-0x7a],ch
  40694c:	sbb    al,0x1
  40694e:	add    dh,BYTE PTR [ebx-0x47]
  406951:	and    eax,0x9d374430
  406956:	xor    al,0x61
  406958:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406959:	nop
  40695a:	loopne 0x406980
  40695c:	pusha  
  40695d:	cmp    eax,DWORD PTR [ecx+0x4021661e]
  406963:	retf   0x422
  406966:	ins    BYTE PTR es:[edi],dx
  406967:	loope  0x40692a
  406969:	sbb    eax,0xefd5a34c
  40696e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40696f:	imul   esi,DWORD PTR [ecx+0x33],0xffffffee
  406973:	cmp    dl,BYTE PTR [ebx-0x69]
  406976:	sbb    DWORD PTR [edx-0x505eb507],ecx
  40697c:	push   esi
  40697d:	loope  0x406987
  40697f:	test   al,0x1b
  406981:	lahf   
  406982:	sbb    esp,DWORD PTR [ebx-0xf]
  406985:	adc    eax,DWORD PTR ds:0xd1437363
  40698b:	stos   BYTE PTR es:[edi],al
  40698c:	in     al,dx
  40698d:	shl    BYTE PTR [esi],cl
  40698f:	adc    al,0xa2
  406991:	ds add eax,0x6c22fa7d
  406997:	cli    
  406998:	jno    0x406a17
  40699a:	jno    0x406971
  40699c:	in     eax,0xda
  40699e:	loop   0x406957
  4069a0:	jae    0x406956
  4069a2:	mov    ecx,0xca4439ab
  4069a7:	sub    bh,BYTE PTR [esi+eax*4+0x506e9e0b]
  4069ae:	sub    edx,ecx
  4069b0:	pushf  
  4069b1:	ss pushf 
  4069b3:	cwde   
  4069b4:	mov    edx,edx
  4069b6:	bound  ebx,QWORD PTR [eax+0x77]
  4069b9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4069ba:	and    BYTE PTR [ebp+eiz*2+0x64],dl
  4069be:	shr    DWORD PTR [edi],1
  4069c0:	mov    ds:0xf083ed38,al
  4069c5:	and    eax,0x81b112b8
  4069ca:	push   dx
  4069cc:	lds    eax,FWORD PTR [eax]
  4069ce:	adc    al,0xe7
  4069d0:	sub    al,0x59
  4069d2:	ret    0x652c
  4069d5:	mov    BYTE PTR [ecx-0x19],dh
  4069d8:	and    BYTE PTR [ebp+eiz*4-0x41],bl
  4069dc:	in     al,0x77
  4069de:	rcr    DWORD PTR [ebx+0x18],0x43
  4069e2:	xchg   eax,esp
  4069e4:	mov    esi,DWORD PTR [eax]
  4069e6:	in     eax,dx
  4069e7:	push   esi
  4069e8:	pop    edi
  4069e9:	xor    al,0xbf
  4069eb:	or     al,0xc5
  4069ed:	inc    edx
  4069ee:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4069ef:	scas   al,BYTE PTR es:[edi]
  4069f0:	int    0x18
  4069f2:	push   0xe08bd7ce
  4069f7:	or     DWORD PTR [ebx+0x4a],edi
  4069fa:	into   
  4069fb:	ffreep st(4)
  4069fd:	pop    ebx
  4069fe:	scas   al,BYTE PTR es:[edi]
  4069ff:	in     eax,0x75
  406a01:	rcr    DWORD PTR cs:[ecx],cl
  406a04:	mov    al,0xdf
  406a06:	xchg   edx,eax
  406a07:	jp     0x4069b9
  406a09:	fidivr WORD PTR [eax-0x77]
  406a0c:	add    bl,BYTE PTR [esi-0x3f]
  406a0f:	dec    esi
  406a10:	fistp  WORD PTR [edx+0x49]
  406a13:	or     al,BYTE PTR ss:[eax+0x5a]
  406a17:	rcr    ebx,cl
  406a19:	imul   esi,DWORD PTR [eax+ebp*2-0x28],0xffffffa6
  406a1e:	cwde   
  406a1f:	cmp    DWORD PTR [edx+0x7e8e7621],0xffffff89
  406a26:	add    eax,DWORD PTR [ecx+0x668d9a1e]
  406a2c:	sub    DWORD PTR [esi+0x77],0xffffff82
  406a30:	add    ecx,DWORD PTR [edi+0x75ae136b]
  406a36:	shr    BYTE PTR [ecx*2+0x71c801cc],cl
  406a3d:	dec    ecx
  406a3e:	jle    0x406a97
  406a40:	adc    BYTE PTR [edx+0x27],0xc7
  406a44:	mov    edi,0xf2591bf9
  406a49:	mov    esp,DWORD PTR ds:0x7e18ce7b
  406a4f:	stos   DWORD PTR es:[edi],eax
  406a50:	sti    
  406a51:	out    0x8f,eax
  406a53:	xchg   esi,eax
  406a54:	fisubr DWORD PTR [ecx]
  406a56:	int3   
  406a57:	dec    ecx
  406a58:	and    al,0x45
  406a5a:	adc    DWORD PTR [edx],esp
  406a5c:	ret    
  406a5d:	xor    al,0x76
  406a5f:	push   edi
  406a60:	ds sub al,0x26
  406a63:	sub    bh,dh
  406a65:	push   cs
  406a66:	push   cs
  406a67:	push   DWORD PTR [ebp+0xc]
  406a6a:	jmp    0x406bfd
  406a6f:	popf   
  406a70:	sub    BYTE PTR [ebx+0x18],bh
  406a73:	call   FWORD PTR [ebx-0x1]
  406a76:	lods   eax,DWORD PTR ds:[esi]
  406a77:	aaa    
  406a78:	pop    ebp
  406a79:	and    DWORD PTR [eax],0x42
  406a7c:	scas   al,BYTE PTR es:[edi]
  406a7d:	and    al,0xe2
  406a7f:	js     0x406af3
  406a81:	add    BYTE PTR [eax],al
  406a83:	jbe    0x406a86
  406a85:	add    BYTE PTR [eax],al
  406a87:	xor    BYTE PTR [edx],bl
  406a89:	mov    BYTE PTR [ebp+0x6b],dl
  406a8c:	mov    gs,WORD PTR [ebp+0x44]
  406a8f:	jnp    0x406ae6
  406a91:	stos   BYTE PTR es:[edi],al
  406a92:	xor    BYTE PTR [esi],ch
  406a94:	icebp  
  406a95:	fucomp st(5)
  406a97:	ins    DWORD PTR es:[edi],dx
  406a98:	es fwait
  406a9a:	mov    edx,0xc69d8efb
  406a9f:	ss push ss
  406aa1:	aad    0x3d
  406aa3:	stc    
  406aa4:	xchg   ecx,eax
  406aa5:	rcr    BYTE PTR [esi-0x7],0xc3
  406aa9:	mov    al,0x73
  406aab:	lahf   
  406aac:	test   eax,0x75570f2e
  406ab1:	mov    ebx,DWORD PTR ds:0xb9a0eb51
  406ab7:	jno    0x406ad1
  406ab9:	mov    ch,al
  406abb:	push   es
  406abc:	adc    BYTE PTR [edx+0x1],0x7f
  406ac0:	icebp  
  406ac1:	sbb    BYTE PTR [ebx],dh
  406ac3:	sahf   
  406ac4:	adc    al,0x3d
  406ac6:	xchg   ebx,eax
  406ac7:	out    dx,eax
  406ac8:	adc    al,BYTE PTR [ecx+ebx*4-0xe]
  406acc:	and    BYTE PTR [ecx],cl
  406ace:	mov    dl,0xf5
  406ad0:	inc    esi
  406ad1:	xchg   edx,eax
  406ad2:	pop    ebx
  406ad3:	lock sub al,0x45
  406ad6:	jo     0x406af4
  406ad8:	push   cs
  406ad9:	cdq    
  406ada:	push   edx
  406adb:	inc    edi
  406adc:	add    edi,esi
  406ade:	ficom  DWORD PTR [edi]
  406ae0:	xchg   ebp,eax
  406ae1:	xchg   edi,eax
  406ae2:	cld    
  406ae3:	mov    ecx,DWORD PTR [ebx-0x4b071ffe]
  406ae9:	push   edi
  406aea:	les    ebx,FWORD PTR es:[ecx+ebp*4]
  406aee:	(bad)  
  406aef:	repz jmp 0xf1f124be
  406af5:	test   DWORD PTR [edx+0x295a6b47],0xb3eca898
  406aff:	out    0xc4,al
  406b01:	rcl    DWORD PTR [ebx-0x3aabbd20],1
  406b07:	mov    esp,DWORD PTR [eax]
  406b09:	push   0x87812750
  406b0e:	les    edx,FWORD PTR [eax]
  406b10:	dec    ebx
  406b11:	ja     0x406b7e
  406b13:	inc    esi
  406b14:	ret    
  406b15:	add    eax,0xe5f97167
  406b1a:	sbb    BYTE PTR [edx+0x1da87a46],ch
  406b20:	(bad)  
  406b21:	pop    esp
  406b22:	and    al,dl
  406b24:	push   esi
  406b25:	xor    edx,DWORD PTR [edx]
  406b27:	xor    eax,0xc7b51d87
  406b2c:	in     eax,0x64
  406b2e:	cli    
  406b2f:	jae    0x406ad3
  406b31:	cmc    
  406b32:	mov    cl,0x5f
  406b34:	jle    0x406afb
  406b36:	add    eax,0xfeaf60c3
  406b3b:	push   0x5d74394e
  406b40:	mov    al,ds:0x52b48509
  406b45:	adc    cl,bl
  406b47:	sbb    DWORD PTR [edi+eax*1-0x22465630],edi
  406b4e:	add    DWORD PTR [ecx-0x323d7b66],esp
  406b54:	ins    DWORD PTR es:[edi],dx
  406b55:	dec    eax
  406b56:	dec    edx
  406b57:	jle    0x406b09
  406b59:	xchg   ebp,eax
  406b5a:	sbb    edx,eax
  406b5c:	push   ebx
  406b5d:	pop    edi
  406b5e:	or     al,0x66
  406b60:	xor    DWORD PTR [eax],edi
  406b62:	retf   0xefb
  406b65:	repnz leave 
  406b67:	cmp    eax,0x26a729d3
  406b6c:	xor    ebx,DWORD PTR [ecx-0x74c2340b]
  406b72:	mov    al,0x28
  406b74:	cmp    al,0xc3
  406b76:	cmp    ecx,eax
  406b78:	sub    ebx,DWORD PTR [esi+0xf3f5b01]
  406b7e:	xchg   edx,eax
  406b7f:	xchg   esp,eax
  406b80:	push   0x5085cca5
  406b85:	push   ds
  406b86:	je     0x406b2b
  406b88:	jmp    DWORD PTR [edi+0x76d7b99b]
  406b8e:	and    ecx,DWORD PTR [edi-0x17]
  406b91:	hlt    
  406b92:	lods   al,BYTE PTR ds:[esi]
  406b93:	loop   0x406b2a
  406b95:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406b96:	cdq    
  406b97:	cdq    
  406b98:	mov    eax,0x3efa1f61
  406b9d:	nop
  406b9e:	fidivr DWORD PTR [edi-0x32344844]
  406ba4:	xchg   edi,eax
  406ba5:	paddusb mm4,QWORD PTR [ebx*4-0x6ccefca6]
  406bad:	pop    esp
  406bae:	test   cl,0x5c
  406bb1:	and    al,0xa6
  406bb4:	ret    0x590
  406bb7:	(bad)  
  406bb8:	mov    ds:0xa8a4fccb,al
  406bbd:	(bad)  
  406bbf:	jmp    0x406b8b
  406bc1:	mov    ?,edi
  406bc3:	retf   0xa5fb
  406bc6:	cmp    eax,0x1031a740
  406bcb:	or     al,0x50
  406bcd:	sub    eax,0x21909c45
  406bd2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406bd3:	stos   DWORD PTR es:[edi],eax
  406bd4:	adc    al,0x91
  406bd6:	js     0x406c57
  406bd8:	dec    ebx
  406bd9:	and    ecx,DWORD PTR [esp+eiz*2]
  406bdc:	imul   eax,DWORD PTR [esi+0xbb839f6],0xc12e674b
  406be6:	into   
  406be7:	int3   
  406be8:	or     eax,0xf263ab10
  406bed:	cmp    al,0x54
  406bef:	xor    al,0x28
  406bf1:	loop   0x406c07
  406bf3:	addps  xmm4,xmm4
  406bf6:	push   cs
  406bf7:	scas   al,BYTE PTR es:[edi]
  406bf8:	cmp    al,0x9d
  406bfa:	scas   eax,DWORD PTR es:[edi]
  406bfb:	adc    DWORD PTR [ecx-0x18],edx
  406bfe:	(bad)  
  406bff:	mov    ds:0x458bffff,eax
  406c04:	clc    
  406c05:	mov    ecx,DWORD PTR [ebp-0x4]
  406c08:	xor    eax,edi
  406c0a:	add    eax,esi
  406c0c:	cmp    ecx,eax
  406c0e:	je     0x406dbc
  406c14:	mov    eax,DWORD PTR [ebp-0x30]
  406c17:	movzx  eax,WORD PTR [eax+ebx*2]
  406c1b:	jmp    0x406dae
  406c20:	xor    DWORD PTR [ecx],0x6f
  406c23:	jg     0x406c24
  406c25:	jg     0x406bba
  406c27:	std    
  406c28:	xchg   ebx,eax
  406c29:	sbb    DWORD PTR [esi],edi
  406c2b:	add    BYTE PTR [ecx+0x30],bh
  406c2e:	push   0xffffffbd
  406c30:	out    dx,al
  406c31:	jae    0x406c33
  406c33:	add    BYTE PTR [esi+0x1],dh
  406c36:	add    BYTE PTR [eax],al
  406c38:	pop    ebx
  406c39:	or     BYTE PTR [esi-0x33],cl
  406c3c:	sbb    esi,DWORD PTR [ebp-0x53]
  406c3f:	mov    esp,0xf43fbacb
  406c44:	(bad)  
  406c45:	fidivr DWORD PTR [ebp+0x55dec688]
  406c4b:	or     al,al
  406c4d:	ss popa 
  406c4f:	add    BYTE PTR [ebx],dl
  406c51:	jge    0x406cb4
  406c53:	call   0x7505:0x9836ddfb
  406c5a:	dec    edx
  406c5b:	aad    0xa1
  406c5d:	lock lea ebp,[edi-0x1dc269f7]
  406c64:	or     DWORD PTR [ebp-0x5380fe83],edi
  406c6a:	jo     0x406c3d
  406c6c:	push   cs
  406c6d:	retf   0xc78a
  406c70:	sbb    BYTE PTR [esi-0x3d],bh
  406c73:	jno    0x406c90
  406c75:	fild   DWORD PTR [ebx-0x16e5cd41]
  406c7b:	imul   esi,DWORD PTR [esi+0x2519a701],0x40
  406c82:	mov    ecx,0x160a9347
  406c87:	ficom  WORD PTR [edx+eiz*8]
  406c8a:	jns    0x406c1f
  406c8c:	push   ebx
  406c8d:	cli    
  406c8e:	mov    ebp,0xad33dad1
  406c93:	and    eax,0x30dfc7e5
  406c98:	add    al,0xb0
  406c9a:	mov    WORD PTR [esi-0x28904d44],?
  406ca0:	cmp    edi,edi
  406ca2:	data16 cli 
  406ca4:	pop    esp
  406ca5:	push   es
  406ca6:	fldl2t 
  406ca8:	(bad)  
  406ca9:	sar    BYTE PTR [ebx-0x25],cl
  406cac:	xor    al,BYTE PTR [ebx]
  406cae:	bound  ecx,QWORD PTR [eax-0x5f]
  406cb1:	pop    ss
  406cb2:	call   0x8566:0x308749e3
  406cb9:	and    ch,dl
  406cbb:	mov    ds:0x2c1c4359,eax
  406cc0:	loopne 0x406cd3
  406cc2:	mov    eax,ds:0xfd7a61f0
  406cc7:	(bad)  
  406cc8:	mov    esp,0xb5338787
  406ccd:	push   ds
  406cce:	mov    cl,0x14
  406cd0:	dec    ebp
  406cd1:	inc    eax
  406cd2:	xor    eax,0xfcfe22f3
  406cd7:	pop    edi
  406cd8:	addr16 jb 0x406c83
  406cdb:	push   es
  406cdc:	dec    esi
  406cdd:	mov    ecx,0x9766a0ca
  406ce2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406ce3:	fidivr WORD PTR [eax+esi*8+0x7cad5e9a]
  406cea:	or     eax,DWORD PTR [ebp-0xce98437]
  406cf0:	sub    ebp,DWORD PTR [ebx+0x5d]
  406cf3:	xchg   ebx,eax
  406cf4:	inc    ebx
  406cf5:	push   esp
  406cf6:	mov    ch,0x55
  406cf8:	push   edi
  406cf9:	xor    BYTE PTR [edx+0x6b],0xb1
  406cfd:	push   esi
  406cfe:	retf   
  406cff:	shl    BYTE PTR [edx+0x7c],1
  406d02:	fsubr  DWORD PTR [edx+0x1]
  406d05:	add    al,0x77
  406d07:	pop    esi
  406d08:	sub    al,0x2
  406d0a:	jl     0x406c9b
  406d0c:	xchg   ecx,eax
  406d0d:	leave  
  406d0e:	push   ecx
  406d0f:	xchg   ch,bl
  406d11:	hlt    
  406d12:	clc    
  406d13:	adc    ah,BYTE PTR [esi-0x6b]
  406d16:	arpl   WORD PTR [ecx],sp
  406d18:	popa   
  406d19:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406d1a:	sub    eax,0xc03734ff
  406d1f:	mov    bh,0x8a
  406d21:	(bad)  
  406d22:	retf   0x4d87
  406d25:	stos   BYTE PTR es:[edi],al
  406d26:	pop    es
  406d27:	mov    ds:0x689d31,eax
  406d2c:	sbb    al,BYTE PTR [ebx]
  406d2e:	add    al,0xa8
  406d30:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406d31:	inc    esp
  406d32:	and    BYTE PTR ds:0x7f25afd,dl
  406d38:	mov    edi,0x300920fe
  406d3d:	dec    esi
  406d3e:	xchg   ecx,eax
  406d3f:	xor    al,bl
  406d41:	sar    DWORD PTR [esi-0x52],0x11
  406d45:	ja     0x406d2b
  406d47:	push   esp
  406d48:	sub    edx,DWORD PTR [ecx]
  406d4a:	inc    esi
  406d4b:	mov    WORD PTR [ebx+0x7],ds
  406d4e:	jno    0x406d57
  406d50:	ins    BYTE PTR es:[edi],dx
  406d51:	jecxz  0x406d89
  406d53:	mov    ebp,0x55349334
  406d58:	popf   
  406d59:	jecxz  0x406dcf
  406d5b:	inc    ebp
  406d5c:	xchg   edi,eax
  406d5d:	sub    BYTE PTR [ecx-0x2f],bh
  406d60:	jo     0x406d74
  406d62:	icebp  
  406d63:	cmp    eax,ecx
  406d65:	bound  esp,QWORD PTR [esp+ebx*1-0x3a]
  406d69:	add    al,0xda
  406d6b:	mov    ds:0x1d3a621a,al
  406d70:	pop    eax
  406d71:	dec    ebx
  406d72:	repnz add dh,BYTE PTR [edi+ebp*8+0x349a6f5b]
  406d7a:	jns    0x406d29
  406d7c:	or     al,0xd9
  406d7e:	add    DWORD PTR ds:0x463c8ec3,eax
  406d84:	int    0x18
  406d86:	hlt    
  406d87:	adc    al,0x9a
  406d89:	jae    0x406d48
  406d8b:	dec    ecx
  406d8c:	inc    esi
  406d8d:	cmp    cl,al
  406d8f:	scas   eax,DWORD PTR es:[edi]
  406d90:	mov    ds:0x41cb4c80,eax
  406d95:	jp     0x406d4d
  406d97:	xchg   eax,edi
  406d99:	(bad)  
  406d9b:	jg     0x406de0
  406d9d:	pop    esp
  406d9e:	pop    es
  406d9f:	and    bh,ch
  406da1:	mov    bl,bl
  406da3:	in     al,dx
  406da4:	iret   
  406da5:	js     0x406ddc
  406da7:	pop    esi
  406da8:	hlt    
  406da9:	retf   0x22e2
  406dac:	loope  0x406d41
  406dae:	mov    ecx,DWORD PTR [ebp-0x14]
  406db1:	mov    eax,DWORD PTR [ecx+eax*4]
  406db4:	mov    DWORD PTR [ebp-0x34],eax
  406db7:	jmp    0x40658a
  406dbc:	inc    ebx
  406dbd:	jmp    0x405d21
  406dc2:	jmp    0x406f55
  406dc7:	cmp    BYTE PTR [edx+0x40],bh
  406dca:	fiadd  DWORD PTR [edx-0x6]
  406dcd:	mov    edx,0xda1021fa
  406dd2:	cwde   
  406dd3:	pop    edi
  406dd4:	xchg   esi,eax
  406dd5:	mov    ch,BYTE PTR [edi+0x64]
  406dd8:	jne    0x406dda
  406dda:	add    BYTE PTR [esi+0x1],dh
  406ddd:	add    BYTE PTR [eax],al
  406ddf:	push   0xfffffffb
  406de1:	into   
  406de2:	das    
  406de3:	cmp    eax,0xdc26b81c
  406de8:	xor    ebx,DWORD PTR [ecx+ebp*8-0x44]
  406dec:	push   eax
  406ded:	push   edx
  406dee:	bound  ebp,QWORD PTR [esi-0x31f7a30]
  406df4:	idiv   BYTE PTR [ebx-0x34]
  406df7:	mov    dl,0x65
  406df9:	mov    esi,0x71d8cc84
  406dfe:	push   ds
  406dff:	out    dx,eax
  406e00:	clc    
  406e01:	inc    esi
  406e02:	aaa    
  406e03:	push   ebx
  406e04:	adc    BYTE PTR [edi+ebx*1+0x1182a2b8],dl
  406e0b:	cmp    eax,0xd7666b97
  406e10:	sub    BYTE PTR [edi],al
  406e12:	xchg   edx,edx
  406e14:	and    al,0xcb
  406e16:	jecxz  0x406da4
  406e18:	clc    
  406e19:	jno    0x406e00
  406e1b:	fadd   st,st(4)
  406e1d:	in     al,0x97
  406e1f:	(bad)  
  406e20:	fs jecxz 0x406e47
  406e23:	pop    es
  406e24:	jno    0x406e22
  406e26:	and    dl,BYTE PTR [edi-0x65]
  406e29:	mov    ebp,0xc67e978e
  406e2e:	dec    eax
  406e2f:	mov    al,ds:0x85d1963d
  406e34:	pop    edi
  406e35:	(bad)  
  406e36:	js     0x406e7c
  406e38:	nop
  406e39:	shr    BYTE PTR [ecx],0x72
  406e3c:	push   0x7
  406e3e:	xor    al,0x64
  406e40:	int    0x6e
  406e42:	or     ebp,DWORD PTR [edi+0x7c81bb56]
  406e48:	scas   eax,DWORD PTR es:[edi]
  406e49:	das    
  406e4a:	jb     0x406e61
  406e4c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406e4d:	(bad)  
  406e4f:	mov    ebp,0xfdd5588
  406e54:	cli    
  406e55:	jno    0x406df4
  406e57:	outs   dx,DWORD PTR ds:[esi]
  406e58:	cmp    BYTE PTR [ecx+0x46],dh
  406e5b:	add    eax,esi
  406e5d:	xor    al,0x4f
  406e5f:	neg    BYTE PTR [esi+0x29ce12c]
  406e65:	push   ebp
  406e66:	ins    DWORD PTR es:[edi],dx
  406e67:	(bad)  
  406e68:	int3   
  406e69:	repz (bad) 
  406e6b:	out    0x75,al
  406e6d:	push   cs
  406e6e:	sti    
  406e6f:	push   cs
  406e70:	mov    ds:0x9c243092,al
  406e75:	imul   eax,DWORD PTR [ecx-0x1aad60dc],0xffffffcc
  406e7c:	or     ebx,DWORD PTR [ecx-0x8]
  406e7f:	sbb    esi,DWORD PTR [ebp+0x2]
  406e82:	cmps   BYTE PTR es:[esi],BYTE PTR es:[edi]
  406e84:	cmp    al,0x7f
  406e86:	xchg   DWORD PTR [ebx+ebx*2-0x5fa8a68e],edx
  406e8d:	jmp    0x1bf5c87f
  406e92:	daa    
  406e93:	cwde   
  406e94:	pop    edx
  406e95:	cs pop ss
  406e97:	pop    ds
  406e98:	jmp    0x406efd
  406e9a:	xchg   DWORD PTR [eax],esp
  406e9c:	or     eax,0x393ca6bc
  406ea1:	gs pop esp
  406ea3:	mov    cl,0xdd
  406ea5:	divps  xmm4,XMMWORD PTR [ecx+0x47]
  406ea9:	fldz   
  406eab:	sub    al,0xd6
  406ead:	adc    al,0x87
  406eaf:	mov    eax,ds:0x9f8402e8
  406eb4:	inc    ebx
  406eb5:	sub    DWORD PTR [ebp+0x150dcda0],0xffffffe3
  406ebc:	adc    dh,BYTE PTR [esi+0x73]
  406ebf:	in     al,dx
  406ec0:	dec    esp
  406ec1:	in     eax,0x48
  406ec3:	imul   edi,DWORD PTR [edi-0x5e60be3f],0x4cdeb45f
  406ecd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406ece:	gs jg  0x406f03
  406ed1:	mov    dl,0x96
  406ed3:	test   al,0x4b
  406ed5:	xor    dh,BYTE PTR ds:0xa9718041
  406edb:	or     BYTE PTR ss:[ebp-0x6d0be13],ah
  406ee2:	pop    esp
  406ee3:	xchg   esp,eax
  406ee4:	dec    esp
  406ee5:	add    dh,BYTE PTR [edi+0x1b31ca52]
  406eeb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406eec:	mov    bl,0x6a
  406eee:	(bad)  
  406eef:	mov    esp,0x405b656e
  406ef4:	and    dl,BYTE PTR [edi+0x694cdcf1]
  406efa:	ret    
  406efb:	or     dh,BYTE PTR [edi+eax*2+0xe52f20b]
  406f02:	mov    ah,0x8c
  406f04:	outs   dx,BYTE PTR ds:[esi]
  406f05:	fwait
  406f06:	jge    0x406f18
  406f08:	or     DWORD PTR [edi],0x784cd326
  406f0e:	jnp    0x406f31
  406f10:	add    bl,0x74
  406f13:	inc    eax
  406f14:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406f15:	or     dl,bl
  406f17:	mov    bh,0xe2
  406f19:	mov    al,ds:0x49908c0f
  406f1e:	js     0x406f0f
  406f20:	pop    ss
  406f21:	jo     0x406eb4
  406f23:	ret    0x7650
  406f26:	jbe    0x406ee0
  406f28:	and    ch,dh
  406f2a:	xchg   DWORD PTR [edi],edx
  406f2c:	jo     0x406f5c
  406f2e:	jnp    0x406eba
  406f30:	mov    ch,0xc
  406f32:	adc    ax,0xc8b7
  406f36:	aaa    
  406f37:	into   
  406f38:	mov    ah,0x42
  406f3a:	cmp    cl,dh
  406f3c:	int3   
  406f3d:	and    ecx,DWORD PTR [edx+ecx*2]
  406f40:	dec    DWORD PTR [edx+0x27d098c]
  406f46:	dec    edx
  406f47:	js     0x406f0c
  406f49:	jge    0x406ee0
  406f4b:	xor    al,0x2f
  406f4d:	imul   esp,DWORD PTR [eax+ebp*8+0x5433d885],0xd
  406f55:	mov    eax,DWORD PTR [ebp-0x8]
  406f58:	xor    eax,edi
  406f5a:	add    eax,esi
  406f5c:	jmp    0x407e91
  406f61:	jmp    0x4070f4
  406f66:	and    BYTE PTR [ebx+0x26],ch
  406f69:	imul   ebp,DWORD PTR [edi+0x6d],0xe88a6b6f
  406f70:	test   al,0x3e
  406f72:	xchg   esi,eax
  406f73:	mov    DWORD PTR [edi-0x5a],esp
  406f76:	fidiv  DWORD PTR [esi+0x0]
  406f79:	add    BYTE PTR [esi+0x1],dh
  406f7c:	add    BYTE PTR [eax],al
  406f7e:	jge    0x406f20
  406f80:	int3   
  406f81:	mov    ch,BYTE PTR [edi]
  406f83:	ror    BYTE PTR [eax],1
  406f85:	daa    
  406f86:	or     ah,BYTE PTR [ebx]
  406f88:	daa    
  406f89:	adc    bh,BYTE PTR [eiz*2+0x4f8237ff]
  406f90:	es stos BYTE PTR es:[edi],al
  406f92:	cdq    
  406f93:	and    DWORD PTR [ebp+0x4d],esp
  406f96:	xchg   edx,eax
  406f97:	inc    ebx
  406f98:	arpl   WORD PTR [ebx-0x5f618ef1],di
  406f9e:	clc    
  406f9f:	out    0x1a,al
  406fa1:	or     BYTE PTR [edx+0x6fc16b51],ch
  406fa7:	je     0x407009
  406fa9:	add    BYTE PTR [ebx+0x41],bh
  406fac:	and    eax,0xb996774c
  406fb1:	jmp    0xec34:0xdd2b5620
  406fb8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406fb9:	data16 sti 
  406fbb:	fs cmc 
  406fbd:	push   ebx
  406fbe:	fild   WORD PTR [esi]
  406fc0:	dec    edi
  406fc1:	ds push cs
  406fc3:	sub    eax,0x7c310708
  406fc8:	inc    edx
  406fc9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406fca:	pop    esp
  406fcb:	add    edi,DWORD PTR [edi]
  406fcd:	adc    BYTE PTR ds:[esi+0x6b],0x6c
  406fd2:	xchg   DWORD PTR [edx+0x3e3869f7],ebx
  406fd8:	cwde   
  406fd9:	xchg   edi,eax
  406fda:	cmp    DWORD PTR [ebp-0x2e],eax
  406fdd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406fde:	pop    edi
  406fdf:	in     eax,dx
  406fe0:	jle    0x406f92
  406fe2:	cmc    
  406fe3:	out    0xeb,eax
  406fe5:	es shl ebp,1
  406fe8:	aas    
  406fe9:	add    eax,0x958fbab3
  406fee:	fimul  DWORD PTR [ecx]
  406ff0:	cmp    al,0xab
  406ff2:	fist   DWORD PTR [edi-0x5c9edb23]
  406ff8:	rol    DWORD PTR ds:0xfb8de426,1
  406ffe:	inc    edx
  406fff:	mov    dl,0xa9
  407001:	hlt    
  407002:	fistp  WORD PTR [edi-0x4388db1b]
  407008:	xchg   ebx,eax
  407009:	mov    esp,?
  40700b:	outs   dx,BYTE PTR ds:[esi]
  40700c:	xchg   ebx,eax
  40700d:	cmp    BYTE PTR [edx+ebp*8-0x41a5a742],dh
  407014:	outs   dx,DWORD PTR ds:[esi]
  407015:	mov    ebx,0x885ff986
  40701a:	jb     0x40707c
  40701c:	in     eax,dx
  40701d:	shl    edx,cl
  40701f:	sbb    DWORD PTR [ecx-0x3af1b894],ebp
  407025:	jl     0x406fd5
  407027:	inc    edi
  407028:	push   esi
  407029:	nop
  40702a:	loopne 0x406fdd
  40702c:	jns    0x406fe5
  40702e:	mov    bh,0x1e
  407030:	addr16 ds mov bh,0xf6
  407034:	cld    
  407035:	cld    
  407036:	and    ebp,DWORD PTR [edi+0xb2e68d4]
  40703c:	xchg   ecx,eax
  40703d:	loope  0x406fe3
  40703f:	pusha  
  407040:	and    eax,0x9f1fe70e
  407045:	add    DWORD PTR [ecx+ebx*2],ecx
  407048:	lds    edi,FWORD PTR [ebx]
  40704a:	pop    ds
  40704b:	into   
  40704c:	cwde   
  40704d:	inc    esi
  40704e:	dec    ebx
  40704f:	adc    al,0x78
  407051:	sub    ah,BYTE PTR [edi]
  407053:	or     al,0xe6
  407055:	retf   0xeab8
  407058:	dec    eax
  407059:	xor    ebp,ebx
  40705b:	push   edx
  40705c:	aam    0x6
  40705e:	push   ebx
  40705f:	aad    0x23
  407061:	(bad)  
  407062:	mov    ch,0xab
  407064:	fistp  WORD PTR [edi-0x53651e97]
  40706a:	mov    eax,0x476eeebc
  40706f:	leave  
  407070:	lahf   
  407071:	int    0x76
  407073:	dec    esp
  407074:	repz inc esp
  407076:	or     BYTE PTR [ecx-0x36],0x75
  40707a:	mov    esp,0xee41e39b
  40707f:	stos   DWORD PTR es:[edi],eax
  407080:	mov    ebp,0x5ccf8477
  407085:	loope  0x407046
  407087:	das    
  407088:	mov    BYTE PTR ds:0x5849d80f,bl
  40708e:	out    dx,al
  40708f:	dec    edx
  407090:	call   0x2ee3:0xabf0163a
  407097:	dec    eax
  407098:	push   edx
  407099:	xchg   edi,eax
  40709a:	scas   al,BYTE PTR es:[edi]
  40709b:	sbb    ah,ch
  40709d:	lea    esi,[esi+0x2b49ca71]
  4070a3:	jno    0x4070ed
  4070a5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4070a6:	rcl    al,cl
  4070a8:	xor    eax,0xd62fabff
  4070ad:	imul   ebp,DWORD PTR [edi-0x4de2701],0xffffffd2
  4070b4:	ret    
  4070b5:	dec    eax
  4070b6:	adc    eax,0x6d527657
  4070bb:	xchg   ecx,eax
  4070bc:	test   BYTE PTR [ecx+0x32bd4ff0],ch
  4070c2:	xchg   ebx,eax
  4070c3:	sub    DWORD PTR [eax+0x37],0xe6e542f2
  4070ca:	(bad)  
  4070cb:	in     al,dx
  4070cc:	repz shl BYTE PTR [ebx],cl
  4070cf:	ficomp WORD PTR [esi-0x1b]
  4070d2:	pushf  
  4070d3:	fld    QWORD PTR [edx]
  4070d5:	jns    0x407121
  4070d7:	sti    
  4070d8:	in     eax,dx
  4070d9:	or     al,0xc4
  4070db:	dec    edx
  4070dc:	jno    0x4070f6
  4070de:	xchg   ebp,eax
  4070df:	xchg   edx,eax
  4070e0:	xchg   dl,ah
  4070e2:	cs inc edx
  4070e4:	aam    0x5b
  4070e6:	call   0xbfb9:0x975b8933
  4070ed:	dec    ecx
  4070ee:	jmp    0x8b63:0xbaf7c4ec
  4070f5:	inc    ebp
  4070f6:	int3   
  4070f7:	add    eax,DWORD PTR [ebp+0x8]
  4070fa:	mov    DWORD PTR [ebp-0x10],eax
  4070fd:	mov    eax,DWORD PTR [ebp+0x14]
  407100:	test   eax,eax
  407102:	je     0x4077d5
  407108:	mov    DWORD PTR [ebp-0x18],0x0
  40710f:	mov    edx,0x0
  407114:	add    edx,0x5
  407117:	xor    esi,esi
  407119:	add    esi,0x6
  40711c:	add    edx,esi
  40711e:	xchg   edx,esi
  407120:	push   esi
  407121:	pop    ecx
  407122:	push   0x5
  407124:	dec    ecx
  407125:	pop    ebx
  407126:	xchg   ebx,ecx
  407128:	jmp    0x4072bb
  40712d:	ss icebp 
  40712f:	pusha  
  407130:	sbb    eax,0xfb7f9de7
  407135:	fsubr  st,st(3)
  407137:	mov    edx,0x53ae4b9e
  40713c:	mov    eax,ds:0x7850
  407141:	jbe    0x407144
  407143:	add    BYTE PTR [eax],al
  407145:	jge    0x407150
  407147:	mov    ah,0x81
  407149:	and    BYTE PTR [edx+0x1d3c5c15],0xe2
  407150:	inc    bh
  407152:	lock dec ebx
  407154:	push   DWORD PTR [esi-0x483ef706]
  40715a:	in     eax,0x3
  40715c:	(bad)  
  40715d:	fst    QWORD PTR [edx+esi*8-0x41]
  407161:	inc    esp
  407162:	pushf  
  407163:	neg    bh
  407165:	push   eax
  407166:	int    0xbb
  407168:	mov    cs,WORD PTR [esp+esi*2-0x7cea4163]
  40716f:	ret    
  407170:	adc    ah,BYTE PTR [edx+0x9]
  407173:	mov    dh,0xa2
  407175:	repnz ss das 
  407178:	mov    ds:0xe76f820e,eax
  40717d:	jb     0x40713a
  40717f:	std    
  407180:	jl     0x4071ec
  407182:	repnz test al,0x43
  407185:	or     al,0xad
  407187:	arpl   WORD PTR [ecx-0x43],bp
  40718a:	stos   DWORD PTR es:[edi],eax
  40718b:	jbe    0x407176
  40718d:	stc    
  40718e:	lock xchg ebp,eax
  407190:	mov    eax,ds:0x1b5ead8d
  407195:	xor    ebp,DWORD PTR [ecx-0x2b6fdbc5]
  40719b:	mov    esp,DWORD PTR [edx+eiz*1-0x25f5c2dc]
  4071a2:	repnz (bad) 
  4071a4:	imul   edi,DWORD PTR ds:[eax-0x4410e5a9],0x9b62c899
  4071af:	in     eax,dx
  4071b0:	add    al,0x7f
  4071b2:	adc    dl,BYTE PTR [ebx+0x32]
  4071b5:	jle    0x407201
  4071b7:	mov    ebp,0xef188966
  4071bc:	xor    dh,0x27
  4071bf:	push   0xffffffc3
  4071c1:	inc    esp
  4071c2:	cmp    eax,0xf683966b
  4071c7:	pop    ss
  4071c8:	mov    edi,DWORD PTR [edi+0x102608a0]
  4071ce:	or     BYTE PTR [esi+0x5b],0xc2
  4071d2:	add    edx,esp
  4071d4:	pop    eax
  4071d5:	push   eax
  4071d6:	in     eax,0xb3
  4071d8:	fldcw  WORD PTR [eax+ebx*4]
  4071db:	fcomp  DWORD PTR [ebx-0x31c7c8a9]
  4071e1:	stc    
  4071e2:	enter  0x4a78,0x68
  4071e6:	mov    bl,0xf0
  4071e8:	sahf   
  4071e9:	enter  0x8c33,0xed
  4071ed:	xchg   edx,eax
  4071ee:	mov    eax,ds:0x4c49a348
  4071f3:	sahf   
  4071f4:	inc    eax
  4071f5:	mov    ch,0x9
  4071f7:	scas   eax,DWORD PTR es:[edi]
  4071f8:	fwait
  4071f9:	add    al,0x5a
  4071fb:	test   al,0x94
  4071fd:	mov    eax,0xe7c773ad
  407202:	push   ds
  407203:	jmp    0x959e:0xd4831e4c
  40720a:	pop    ss
  40720b:	ret    
  40720c:	sbb    al,BYTE PTR [edi+0x6e5205c0]
  407212:	jle    0x407279
  407214:	icebp  
  407215:	mov    ebx,0xfe14c6b7
  40721a:	int3   
  40721b:	jae    0x407292
  40721d:	cs dec edx
  40721f:	dec    esp
  407220:	inc    edx
  407221:	xchg   DWORD PTR [edx-0x39],esi
  407224:	dec    ebp
  407225:	(bad)  
  407226:	popa   
  407227:	jg     0x407213
  407229:	cld    
  40722a:	loopne 0x4071b6
  40722c:	xor    ecx,edi
  40722e:	mov    esp,0x5630fd67
  407233:	sar    BYTE PTR [edi-0x7d],1
  407236:	dec    ebp
  407237:	push   ecx
  407238:	mov    BYTE PTR [ebx-0x14],dh
  40723b:	xchg   esp,eax
  40723c:	adc    eax,0x522fdd8
  407241:	xor    eax,0xb57bfa47
  407246:	js     0x40722a
  407248:	int3   
  407249:	add    ebx,DWORD PTR [ebx-0x15026680]
  40724f:	add    al,0x22
  407251:	ds inc ecx
  407253:	(bad)  
  407254:	sbb    BYTE PTR [edi],cl
  407256:	inc    edi
  407257:	dec    edi
  407258:	inc    esi
  407259:	aad    0xab
  40725b:	fsub   QWORD PTR [esi-0x31]
  40725e:	cmc    
  40725f:	ins    BYTE PTR es:[edi],dx
  407260:	idiv   DWORD PTR [ebp-0x7ebf64a]
  407266:	sbb    al,0x2b
  407268:	mov    bl,0x8d
  40726a:	call   0x472d:0x4980f97f
  407271:	imul   DWORD PTR ds:0x328a4f97
  407277:	sub    BYTE PTR [eax-0x4f7b703d],dl
  40727d:	dec    ecx
  40727e:	cld    
  40727f:	cli    
  407280:	add    BYTE PTR [eax+0xd],bl
  407283:	ja     0x4072b5
  407285:	add    edi,DWORD PTR [ebx]
  407287:	inc    esi
  407288:	ret    0xbd6a
  40728b:	mov    ah,0x2d
  40728d:	adc    eax,0x6e75b0e4
  407292:	push   ebx
  407293:	mov    ds:0x8b033e14,eax
  407298:	jb     0x40722f
  40729a:	or     DWORD PTR [edi],eax
  40729c:	lds    esi,FWORD PTR [eax+edx*8-0x5daf094b]
  4072a3:	pop    ebp
  4072a4:	icebp  
  4072a5:	add    al,0xda
  4072a7:	push   0xffffffd3
  4072a9:	adc    bl,cl
  4072ab:	mov    dl,0x3e
  4072ad:	js     0x407308
  4072af:	xor    DWORD PTR [ecx-0x4],esi
  4072b2:	push   ebp
  4072b3:	push   es
  4072b4:	dec    esp
  4072b5:	mov    ebp,0x6c0209b0
  4072ba:	xlat   BYTE PTR ds:[ebx]
  4072bb:	sub    ebx,ecx
  4072bd:	xchg   ebx,ecx
  4072bf:	jmp    0x407452
  4072c4:	ins    DWORD PTR es:[edi],dx
  4072c5:	nop
  4072c6:	jg     0x40724f
  4072c8:	(bad)  
  4072c9:	out    dx,eax
  4072ca:	std    
  4072cb:	cli    
  4072cc:	mov    esi,0xde9a3e8b
  4072d1:	sub    al,0x14
  4072d3:	cmp    eax,0x79c6
  4072d8:	jbe    0x4072db
  4072da:	add    BYTE PTR [eax],al
  4072dc:	push   ds
  4072dd:	inc    ebp
  4072de:	and    BYTE PTR [ebx+edi*2-0x391ef037],cl
  4072e5:	xchg   edx,eax
  4072e6:	xchg   esi,eax
  4072e7:	inc    edx
  4072e8:	ja     0x4072ac
  4072ea:	xlat   BYTE PTR ds:[ebx]
  4072eb:	sub    eax,0x441c98f7
  4072f0:	imul   eax,DWORD PTR [edx-0x16],0xe
  4072f4:	std    
  4072f5:	inc    ecx
  4072f6:	mov    bl,0x0
  4072f8:	test   BYTE PTR [ecx-0x204aab67],bh
  4072fe:	retf   0x3385
  407301:	inc    ecx
  407302:	call   0x942fbca9
  407307:	xchg   ebx,eax
  407308:	dec    esi
  407309:	or     BYTE PTR [ebp-0x1adbac49],dh
  40730f:	mov    bl,0xd4
  407311:	add    edx,0x75
  407314:	push   esp
  407315:	jbe    0x407352
  407317:	pop    ss
  407318:	fstp   QWORD PTR [eax-0x7b]
  40731b:	adc    DWORD PTR [ecx+0x65],ebp
  40731e:	(bad)  
  40731f:	fisttp QWORD PTR [edi-0x5d]
  407322:	adc    al,0x90
  407324:	add    esi,DWORD PTR [ebx-0x1c5f9386]
  40732a:	pop    ebp
  40732b:	aam    0x25
  40732d:	lds    ebp,FWORD PTR [esi-0x36]
  407330:	adc    ebp,DWORD PTR [ecx+edx*8+0x3e900f9]
  407337:	cmp    BYTE PTR [eax+0xd198483],dl
  40733d:	cs loope 0x40738e
  407340:	sub    al,BYTE PTR [ecx+0x49]
  407343:	aaa    
  407344:	popf   
  407345:	test   esi,ebp
  407347:	inc    eax
  407348:	dec    eax
  407349:	(bad)  
  40734a:	(bad)  
  40734c:	imul   edx,DWORD PTR [edx],0x30740a13
  407352:	xchg   ebx,eax
  407353:	cmp    eax,0xb017b8a2
  407358:	ins    BYTE PTR es:[edi],dx
  407359:	rcr    bh,0x9a
  40735c:	idiv   ah
  40735e:	ins    BYTE PTR es:[edi],dx
  40735f:	cmp    DWORD PTR [edx-0x2570d4ce],eax
  407365:	xchg   ecx,eax
  407366:	dec    esp
  407367:	adc    DWORD PTR [edi+ebx*2],eax
  40736a:	jmp    0x407380
  40736c:	outs   dx,BYTE PTR ds:[esi]
  40736d:	xor    ebx,DWORD PTR [esi+ebx*8-0x7809007]
  407374:	or     eax,0xa584c9b4
  407379:	rol    DWORD PTR [ebx+eiz*4-0x4c1a8e88],0xa9
  407381:	(bad)  
  407382:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407383:	lea    ebx,[ebx+0x47e76f77]
  407389:	jns    0x4073d9
  40738b:	push   0xb0772a81
  407390:	ds sbb esi,esp
  407393:	push   ebx
  407394:	add    edi,DWORD PTR [edi+0x4743c0ab]
  40739a:	aam    0xd2
  40739c:	in     eax,dx
  40739d:	gs hlt 
  40739f:	push   eax
  4073a0:	out    0xd4,al
  4073a2:	dec    ecx
  4073a3:	cmp    BYTE PTR [eax],bl
  4073a5:	mov    DWORD PTR [edi],ebp
  4073a7:	mov    cl,0xe7
  4073a9:	mov    edx,0x5bb2c783
  4073ae:	arpl   WORD PTR [edi+eiz*2+0x5d2f2325],bx
  4073b5:	add    BYTE PTR [ebx-0x79b273f0],ah
  4073bb:	loop   0x4073e4
  4073bd:	pop    edi
  4073be:	loope  0x4073a9
  4073c0:	retf   
  4073c1:	mov    esi,0xdb839aef
  4073c6:	fsubr  QWORD PTR [ecx]
  4073c8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4073c9:	sbb    BYTE PTR [eax+0x545ec80c],0x3d
  4073d0:	pop    edx
  4073d1:	push   ebx
  4073d2:	outs   dx,DWORD PTR ds:[esi]
  4073d3:	shr    BYTE PTR [esi-0xb],1
  4073d6:	jmp    0xdd15:0xadd173bd
  4073dd:	stos   BYTE PTR es:[edi],al
  4073de:	mov    al,0x87
  4073e0:	or     al,0x78
  4073e2:	popf   
  4073e3:	sbb    BYTE PTR [edi],al
  4073e5:	(bad)  
  4073e7:	push   esp
  4073e8:	inc    esi
  4073e9:	add    eax,0xceea0762
  4073ee:	popa   
  4073ef:	inc    ecx
  4073f0:	mov    al,dl
  4073f2:	xchg   edx,eax
  4073f3:	fwait
  4073f4:	lahf   
  4073f5:	in     eax,0x16
  4073f7:	or     ebp,ebp
  4073f9:	bsf    edx,DWORD PTR [ebx+0x288c9412]
  407400:	cli    
  407401:	mov    ds:0x4dc84c3a,al
  407406:	xchg   edx,eax
  407407:	ss in  eax,dx
  407409:	enter  0x6147,0x89
  40740d:	(bad)
  407411:	mov    ds:0xf5108b90,eax
  407416:	test   DWORD PTR [esi-0x3c],ebx
  407419:	jmp    0x407477
  40741b:	sahf   
  40741c:	push   ecx
  40741d:	mov    cl,0xaf
  40741f:	fldenv [esp+edi*2]
  407422:	mov    cl,0x92
  407424:	call   0x79aa:0xf1b0cb57
  40742b:	or     esi,ecx
  40742d:	xchg   ebx,eax
  40742e:	inc    ebp
  40742f:	dec    ebp
  407430:	sar    BYTE PTR [eax+0x79],cl
  407433:	pop    ebx
  407434:	xchg   edx,eax
  407435:	pop    edi
  407436:	or     BYTE PTR [esi-0x61a5f28],dh
  40743c:	lods   al,BYTE PTR ds:[esi]
  40743d:	test   ebp,esp
  40743f:	hlt    
  407440:	fwait
  407441:	outs   dx,DWORD PTR ds:[esi]
  407442:	sub    BYTE PTR [ebx+0x43],ch
  407445:	stos   DWORD PTR es:[edi],eax
  407446:	sub    edx,DWORD PTR [ecx+0x1d5e5765]
  40744c:	es dec esi
  40744e:	inc    ebp
  40744f:	in     al,dx
  407450:	test   DWORD PTR [ebx+0x49],eax
  407453:	mov    eax,DWORD PTR [ebp+0x14]
  407456:	imul   eax,ecx
  407459:	sub    esp,eax
  40745b:	mov    DWORD PTR [ebp-0x18],esp
  40745e:	mov    eax,DWORD PTR [ebp-0x8]
  407461:	xor    eax,edi
  407463:	jmp    0x4075f6
  407468:	fisub  DWORD PTR [ecx-0x48404e5]
  40746e:	cli    
  40746f:	mov    eax,ds:0xbad2809f
  407474:	ret    0x5470
  407477:	aad    0x3c
  407479:	jnp    0x40747b
  40747b:	add    BYTE PTR [esi+0x1],dh
  40747e:	add    BYTE PTR [eax],al
  407480:	pop    esp
  407481:	and    eax,0x139a8290
  407486:	jo     0x407412
  407488:	jns    0x4074ff
  40748a:	test   DWORD PTR [esi+0x1bcc36b2],ebp
  407490:	bound  ebp,QWORD PTR [eiz*4+0x4c298aad]
  407497:	dec    eax
  407498:	hlt    
  407499:	adc    cl,BYTE PTR [eax-0x2a]
  40749c:	xchg   edi,eax
  40749d:	inc    esi
  40749e:	outs   dx,DWORD PTR ds:[esi]
  40749f:	jcxz   0x407459
  4074a2:	fnstenv [esi]
  4074a4:	imul   edx,esp,0xfffffff0
  4074a7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4074a8:	shr    BYTE PTR [edi],1
  4074aa:	sbb    al,0xc4
  4074ac:	push   sp
  4074ae:	test   eax,0x4fdf6e91
  4074b3:	out    dx,eax
  4074b4:	test   esi,edx
  4074b6:	jns    0x4074c9
  4074b8:	sbb    BYTE PTR [esi+0x150c2394],0xd5
  4074bf:	adc    eax,0xa5d67913
  4074c4:	mov    edi,?
  4074c6:	push   ax
  4074c8:	or     edx,esp
  4074ca:	xor    al,0x86
  4074cc:	stc    
  4074cd:	xchg   ebp,eax
  4074ce:	and    ah,ah
  4074d0:	xchg   edi,eax
  4074d1:	adc    dh,BYTE PTR [esi+0x72]
  4074d4:	sbb    edi,DWORD PTR [esi]
  4074d6:	popa   
  4074d7:	(bad)  
  4074d9:	aaa    
  4074da:	(bad)  
  4074db:	mov    edx,0x68d4a852
  4074e0:	adc    al,0xa3
  4074e2:	ins    BYTE PTR es:[edi],dx
  4074e3:	fisttp QWORD PTR [edx]
  4074e5:	adc    DWORD PTR [esi-0x7c950e25],ebx
  4074eb:	outs   dx,BYTE PTR ds:[esi]
  4074ec:	sbb    ecx,eax
  4074ee:	push   ds
  4074ef:	cmp    DWORD PTR [edx-0x54],eax
  4074f2:	add    ch,BYTE PTR [edi+0x6b]
  4074f5:	cmp    bl,BYTE PTR [ebp-0x6b]
  4074f8:	add    edi,DWORD PTR [eax]
  4074fa:	and    al,0x8
  4074fc:	add    bh,BYTE PTR [edi-0x7]
  4074ff:	jle    0x40757e
  407501:	lods   al,BYTE PTR ds:[esi]
  407502:	and    eax,0xc760a751
  407507:	or     al,0x28
  407509:	adc    WORD PTR [esp+eiz*8],dx
  40750d:	rcl    edx,1
  40750f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407510:	inc    ebx
  407511:	xor    dl,BYTE PTR [ecx-0x29]
  407514:	jbe    0x4074ad
  407516:	xor    eax,DWORD PTR [edi]
  407518:	call   0x167f:0x95b9c7dd
  40751f:	xchg   DWORD PTR [edi],esi
  407521:	jge    0x407514
  407523:	outs   dx,BYTE PTR ds:[esi]
  407524:	or     al,0xeb
  407526:	aaa    
  407527:	les    esi,FWORD PTR [ebx+0x25a410eb]
  40752d:	sbb    edx,DWORD PTR [esi-0xb3585e2]
  407533:	retf   0x4d3a
  407536:	repz sub cl,bl
  407539:	outs   dx,BYTE PTR ds:[esi]
  40753a:	bnd jle 0x407593
  40753d:	sbb    ebx,DWORD PTR [edi-0x2cf4106c]
  407543:	push   cs
  407544:	ins    DWORD PTR es:[edi],dx
  407545:	jp     0x40757b
  407547:	cmp    cl,BYTE PTR [ebx+0x40]
  40754a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40754b:	or     al,0x10
  40754d:	fincstp 
  40754f:	mov    ch,0x65
  407551:	jne    0x40755a
  407553:	mov    esi,ss
  407555:	cmc    
  407556:	enter  0x79dc,0x19
  40755a:	cmp    BYTE PTR [esi+0x1bbcab49],dh
  407560:	pop    esp
  407561:	push   esi
  407562:	inc    ebp
  407563:	dec    edi
  407564:	add    al,0x7f
  407566:	ror    edi,1
  407568:	or     dl,BYTE PTR [ebx+0x760e43b0]
  40756e:	sbb    BYTE PTR [ebx-0x70],dh
  407571:	repz adc al,0xfd
  407574:	jno    0x4075ed
  407576:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407577:	mov    eax,0x5a7a5a36
  40757c:	jecxz  0x4075c8
  40757e:	sbb    DWORD PTR [eax+0x11533d0],0xffffffbd
  407585:	sub    eax,0xc9d1373f
  40758a:	add    eax,0xa7513816
  40758f:	xor    ch,dh
  407591:	pop    edx
  407592:	ins    DWORD PTR es:[edi],dx
  407593:	mov    edi,edi
  407595:	rol    BYTE PTR [edi],0xb4
  407598:	ret    
  407599:	std    
  40759a:	jbe    0x407596
  40759c:	mov    esi,0x4faf4461
  4075a1:	push   ss
  4075a2:	or     al,0x66
  4075a4:	mov    dh,BYTE PTR [eax+0x5f]
  4075a7:	bound  edx,QWORD PTR [eax]
  4075a9:	lea    ebp,[ebx]
  4075ab:	jo     0x40753f
  4075ad:	sub    edx,0xc334998d
  4075b3:	test   eax,0x8d28803f
  4075b8:	jae    0x407554
  4075ba:	fidivr WORD PTR [eax-0x52]
  4075bd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4075be:	stos   DWORD PTR es:[edi],eax
  4075bf:	jmp    0x40757f
  4075c1:	xlat   BYTE PTR ds:[ebx]
  4075c2:	sbb    cl,BYTE PTR [ebx-0x4e]
  4075c5:	mov    eax,ds:0xf922f30c
  4075ca:	aam    0x51
  4075cc:	jae    0x4075eb
  4075ce:	add    bh,BYTE PTR [ecx-0x3a097a56]
  4075d4:	hlt    
  4075d5:	push   edx
  4075d6:	jmp    0x152a3553
  4075db:	fwait
  4075dc:	in     al,dx
  4075dd:	xor    eax,0x95249b74
  4075e2:	mov    dh,0xcd
  4075e4:	xor    al,0x6
  4075e6:	inc    edi
  4075e7:	adc    ebx,eax
  4075e9:	int    0xd1
  4075eb:	out    dx,al
  4075ec:	push   ebp
  4075ed:	mov    bl,0xff
  4075ef:	loop   0x4075fc
  4075f1:	pop    ds
  4075f2:	mov    esp,0x5e76066
  4075f7:	or     esi,DWORD PTR [eax]
  4075f9:	add    BYTE PTR [eax],al
  4075fb:	mov    DWORD PTR [ebp-0x14],eax
  4075fe:	mov    eax,DWORD PTR [ebp-0x14]
  407601:	mov    ecx,DWORD PTR [ebp+0x14]
  407604:	cmp    eax,ecx
  407606:	je     0x4077d0
  40760c:	lea    eax,[ebp+0x14]
  40760f:	mov    ecx,DWORD PTR [ebp-0x14]
  407612:	mov    edx,DWORD PTR [ebp-0x18]
  407615:	add    eax,0x4
  407618:	mov    esi,DWORD PTR [eax]
  40761a:	mov    DWORD PTR [edx+ecx*4],esi
  40761d:	mov    ecx,DWORD PTR [ebp-0x24]
  407620:	mov    edx,DWORD PTR [ebp-0x14]
  407623:	jmp    0x4077b6
  407628:	addr16 or al,0xa
  40762b:	jp     0x407698
  40762d:	jle    0x4076a6
  40762f:	sbb    eax,0xedea7b6f
  407634:	jmp    0x7c:0xb20ebf26
  40763b:	add    BYTE PTR [esi+0x1],dh
  40763e:	add    BYTE PTR [eax],al
  407640:	pop    ds
  407641:	std    
  407642:	xchg   esp,eax
  407643:	pop    esp
  407644:	test   eax,0x4a654fe0
  407649:	stos   DWORD PTR es:[edi],eax
  40764a:	loopne 0x4076c8
  40764c:	xchg   edi,eax
  40764d:	enter  0xc7df,0xe2
  407651:	jp     0x407603
  407653:	cmc    
  407654:	icebp  
  407655:	(bad)  
  407656:	loope  0x4076d1
  407658:	bound  esi,QWORD PTR ds:0xbe7cd013
  40765e:	push   ds
  40765f:	push   cs
  407660:	js     0x4075ea
  407662:	loope  0x40767b
  407664:	push   esi
  407665:	mov    edi,0xed8e0aab
  40766a:	ret    0xf58e
  40766d:	push   es
  40766e:	mov    al,ds:0x1abffc55
  407673:	push   cs
  407674:	or     eax,0x545cec39
  407679:	sub    BYTE PTR [ecx+0x3c],dl
  40767c:	push   edx
  40767d:	xchg   DWORD PTR [ebp+0x77b44735],eax
  407683:	jbe    0x40768f
  407685:	sub    esi,DWORD PTR [esi+eax*1-0x1b32b091]
  40768c:	arpl   WORD PTR [esi-0x68c14c44],di
  407692:	mov    fs,WORD PTR [eax]
  407694:	push   eax
  407695:	push   eax
  407696:	mov    edi,0x1b5d40bb
  40769b:	xchg   esi,eax
  40769c:	push   0xffffff8b
  40769e:	lahf   
  40769f:	neg    BYTE PTR [edi]
  4076a1:	adc    ch,BYTE PTR [edi+0x10]
  4076a4:	fdiv   DWORD PTR [edx-0x3341a3f0]
  4076aa:	inc    edx
  4076ab:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4076ac:	add    eax,0xe7ee3a48
  4076b1:	adc    al,al
  4076b3:	into   
  4076b4:	sub    dl,BYTE PTR ds:0x58f0e7c0
  4076ba:	cmps   BYTE PTR ss:[esi],BYTE PTR es:[edi]
  4076bc:	lock repz repnz dec edi
  4076c0:	adc    BYTE PTR [esi-0x6ce6f0ff],cl
  4076c6:	add    BYTE PTR [ecx-0x3a05f726],dh
  4076cc:	mov    al,0x52
  4076ce:	fcmovnbe st,st(5)
  4076d0:	mov    ebp,0x6b968cb8
  4076d5:	or     al,0x54
  4076d7:	mov    esp,0x75ce7815
  4076dc:	test   al,0x58
  4076de:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4076df:	add    BYTE PTR [eax-0x631657ea],ah
  4076e5:	adc    bh,BYTE PTR [ecx-0x73]
  4076e8:	push   esi
  4076e9:	dec    ecx
  4076ea:	push   ebx
  4076eb:	(bad)  
  4076ec:	xor    DWORD PTR [edi-0x4],ebx
  4076ef:	sub    ebx,ecx
  4076f1:	or     BYTE PTR [ebx+0x1b],cl
  4076f4:	outs   dx,BYTE PTR ds:[esi]
  4076f5:	mov    ch,BYTE PTR [esi]
  4076f7:	aam    0xb1
  4076f9:	out    0xa6,eax
  4076fb:	xchg   esp,eax
  4076fc:	mov    edx,DWORD PTR [ecx+0x57]
  4076ff:	cwde   
  407700:	cs jecxz 0x407746
  407703:	xor    al,0xa8
  407705:	ins    BYTE PTR es:[edi],dx
  407706:	dec    ebx
  407707:	jne    0x4076f9
  407709:	inc    esi
  40770a:	inc    esp
  40770b:	(bad)  
  40770c:	mov    ds:0x78aa3cc9,eax
  407711:	imul   ebp,DWORD PTR [esi-0x63],0xffffffd1
  407715:	mov    ebp,0x3775ba14
  40771a:	mov    dl,0xc9
  40771c:	xchg   esp,eax
  40771d:	retf   
  40771e:	sub    edx,edi
  407720:	mov    ebp,0xea3b9eb5
  407725:	xchg   DWORD PTR [edi],edx
  407727:	dec    eax
  407728:	mov    ebx,0xfa020c47
  40772d:	into   
  40772e:	retf   0x529e
  407731:	xor    DWORD PTR [ebp-0x5e04db],ebp
  407737:	out    0x7f,al
  407739:	jo     0x40771b
  40773b:	(bad)  
  40773c:	enter  0xa121,0x3e
  407740:	mov    ds:0x52762c21,al
  407745:	jecxz  0x407795
  407747:	cmp    bl,BYTE PTR [eax+0x48]
  40774a:	ret    
  40774b:	jo     0x4076cf
  40774d:	aaa    
  40774e:	cmp    al,0xa3
  407750:	inc    ecx
  407751:	adc    ebp,eax
  407753:	xlat   BYTE PTR ds:[ebx]
  407754:	lahf   
  407755:	xor    DWORD PTR [eax],0x54bd084c
  40775b:	jge    0x407702
  40775d:	dec    edi
  40775e:	arpl   WORD PTR ds:0x65300f5a,bx
  407764:	lahf   
  407765:	out    dx,eax
  407766:	ins    DWORD PTR es:[edi],dx
  407767:	jp     0x4076eb
  407769:	mov    cl,dl
  40776b:	sbb    BYTE PTR [esi+0x53479a2f],bl
  407771:	iret   
  407772:	pushf  
  407773:	xchg   edx,eax
  407774:	cmp    al,0xe0
  407776:	and    DWORD PTR [edx-0x45823e42],ecx
  40777c:	ds sti 
  40777e:	add    eax,edx
  407780:	cmp    esp,DWORD PTR [edx]
  407782:	jmp    0x326f:0x3cc6c25d
  407789:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40778a:	dec    eax
  40778b:	cld    
  40778c:	(bad)  
  40778d:	jmp    0x4077d0
  40778f:	addr16 ret 
  407791:	lock sub BYTE PTR [ecx+edx*1],al
  407795:	pop    ecx
  407796:	add    DWORD PTR [edi-0x2a05343f],ebp
  40779c:	mov    dl,0x27
  40779e:	sub    al,0xc3
  4077a0:	sub    bh,BYTE PTR [eax+0x73501e33]
  4077a6:	aaa    
  4077a7:	(bad)  
  4077a8:	hlt    
  4077a9:	lock sub BYTE PTR [ebp+0x2678a3bb],0x83
  4077b1:	in     al,dx
  4077b2:	add    edx,DWORD PTR [edx]
  4077b4:	mov    ah,0x26
  4077b6:	xor    ecx,edi
  4077b8:	lea    ecx,[ecx+edx*1+0x300b]
  4077bf:	mov    DWORD PTR [ebp-0x14],ecx
  4077c2:	mov    ecx,DWORD PTR [ebp-0x14]
  4077c5:	mov    edx,DWORD PTR [ebp+0x14]
  4077c8:	cmp    ecx,edx
  4077ca:	jne    0x40760f
  4077d0:	mov    esi,0x300b
  4077d5:	mov    eax,DWORD PTR [ebp-0x8]
  4077d8:	xor    eax,edi
  4077da:	add    eax,esi
  4077dc:	push   0x73
  4077de:	mov    DWORD PTR [ebp-0xc],eax
  4077e1:	call   DWORD PTR ds:0x41f2b4
  4077e7:	test   eax,eax
  4077e9:	jne    0x4077f7
	...
  4077f7:	xor    esi,esi
  4077f9:	mov    edx,esi
  4077fb:	lea    eax,[ebp-0x10]
  4077fe:	add    edx,DWORD PTR [eax]
  407800:	add    edx,0x4
  407803:	push   edx
  407804:	inc    esi
  407805:	pop    ecx
  407806:	dec    ecx
  407807:	xchg   ecx,eax
  407808:	dec    eax
  407809:	jmp    0x40799c
  40780e:	dec    eax
  40780f:	enter  0x8b7f,0xff
  407813:	mov    edi,0x9e5ecbfc
  407818:	pop    esp
  407819:	inc    edi
  40781a:	and    eax,0x28f4bea7
  40781f:	jle    0x407821
  407821:	add    BYTE PTR [esi+0x1],dh
  407824:	add    BYTE PTR [eax],al
  407826:	fs push cs
  407828:	mov    edi,0xc50182b6
  40782d:	leave  
  40782e:	sub    DWORD PTR [ebx-0x4b],esi
  407831:	popf   
  407832:	cs pop esp
  407834:	and    bl,dh
  407836:	test   al,0x6c
  407838:	out    0x4b,al
  40783a:	sbb    ch,BYTE PTR [esi]
  40783c:	jg     0x4078a3
  40783e:	push   cs
  40783f:	in     al,dx
  407840:	pusha  
  407841:	retf   0x2948
  407844:	bnd ret 0xc0e9
  407848:	mov    edi,ds
  40784a:	fbld   TBYTE PTR [edi]
  40784c:	xchg   edx,ecx
  40784e:	xor    eax,0xfa9dc1ab
  407853:	loope  0x407883
  407855:	lods   al,BYTE PTR ds:[esi]
  407856:	and    BYTE PTR [edi+0x1adb516],0x7a
  40785d:	pop    ebx
  40785e:	inc    edx
  40785f:	jl     0x4078ce
  407861:	mov    bh,0xa
  407863:	adc    DWORD PTR [ecx],eax
  407865:	mov    ebp,0x60aa9ca2
  40786a:	cmp    eax,0xe69fdc7f
  40786f:	push   ss
  407870:	retf   0x6edd
  407873:	jb     0x40788e
  407875:	je     0x407860
  407877:	gs cmc 
  407879:	test   bh,0x2b
  40787c:	mov    esi,0x80c8472b
  407881:	mov    al,cs:0xb5a8c78e
  407887:	int    0xa7
  407889:	xor    BYTE PTR [edi],bh
  40788b:	lods   eax,DWORD PTR ds:[esi]
  40788c:	xor    DWORD PTR ds:[edi+0x37],ebp
  407890:	pop    edx
  407891:	sub    ebx,edi
  407893:	clc    
  407894:	mov    es,ecx
  407896:	dec    eax
  407897:	arpl   WORD PTR [edx+0x37ec3cf2],cx
  40789d:	push   0xffffffc2
  40789f:	call   0xf353:0xdc8a98b7
  4078a6:	mov    ecx,0xa062c360
  4078ab:	xchg   esi,eax
  4078ac:	ror    DWORD PTR [edi],1
  4078ae:	test   al,0xdd
  4078b0:	dec    ebx
  4078b1:	sahf   
  4078b2:	test   al,0xf1
  4078b4:	xor    BYTE PTR [ecx],ch
  4078b6:	rcr    DWORD PTR [ecx-0x70],1
  4078b9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4078ba:	add    DWORD PTR [ebx+edi*8-0x59],esp
  4078be:	bound  ebx,QWORD PTR [edi+0x1fe31195]
  4078c4:	dec    eax
  4078c5:	dec    edx
  4078c6:	cmp    DWORD PTR [esi-0x68],esi
  4078c9:	jo     0x407869
  4078cb:	ins    BYTE PTR es:[edi],dx
  4078cc:	xchg   esp,eax
  4078cd:	stos   BYTE PTR es:[edi],al
  4078ce:	in     eax,dx
  4078cf:	and    dl,BYTE PTR [eax]
  4078d1:	add    BYTE PTR cs:[ebx-0x69e60be0],cl
  4078d8:	int    0xd9
  4078da:	pop    edx
  4078db:	mov    al,ds:0x49107dc1
  4078e0:	pop    edx
  4078e1:	xlat   BYTE PTR ds:[ebx]
  4078e2:	sti    
  4078e3:	retf   
  4078e4:	cmp    bh,bl
  4078e6:	dec    ebp
  4078e7:	add    al,0xb2
  4078e9:	mov    WORD PTR [ecx+0x4f],cs
  4078ec:	cli    
  4078ed:	mov    ds:0x478eceb0,eax
  4078f2:	inc    ebx
  4078f3:	mov    eax,0x94c569ed
  4078f8:	icebp  
  4078f9:	data16 fstp DWORD PTR [eax-0x1d]
  4078fd:	aas    
  4078fe:	outs   dx,BYTE PTR ds:[esi]
  4078ff:	jns    0x407904
  407901:	or     dh,al
  407903:	xchg   ecx,eax
  407904:	add    al,0x7e
  407906:	push   ebx
  407907:	dec    esi
  407908:	ds int3 
  40790a:	xlat   BYTE PTR ds:[ebx]
  40790b:	or     al,0x97
  40790d:	cmp    ebx,esp
  40790f:	mov    bh,0xe0
  407911:	mov    WORD PTR [edx-0x1e],es
  407914:	sub    al,0xe1
  407916:	bound  esi,QWORD PTR [eax-0x3b901cb8]
  40791c:	cs push ebx
  40791e:	mov    BYTE PTR [esi],bh
  407920:	popa   
  407921:	sbb    cl,BYTE PTR ds:0xd662be13
  407927:	cmp    DWORD PTR [ecx],eax
  407929:	iret   
  40792a:	cmc    
  40792b:	and    ebp,DWORD PTR [eax-0x30422e02]
  407931:	stc    
  407932:	push   cs
  407933:	arpl   WORD PTR [edx+0x3f4a28dc],sp
  407939:	loop   0x4078ed
  40793b:	inc    edi
  40793c:	(bad)  
  40793e:	mov    BYTE PTR [ecx],dl
  407940:	inc    eax
  407941:	or     al,0x7
  407943:	call   0xda40:0x2cbd934a
  40794a:	mov    ebx,0x379b11c6
  40794f:	jmp    0x43bfe598
  407954:	das    
  407955:	cmp    BYTE PTR [esi-0x1b],dl
  407958:	call   0x5157:0xf88cf42b
  40795f:	div    DWORD PTR [ebp-0x15a723d8]
  407965:	int    0x17
  407967:	jb     0x407941
  407969:	mov    esp,0x21855665
  40796e:	int3   
  40796f:	js     0x4079d8
  407971:	mov    eax,ds:0xc642f945
  407976:	sub    DWORD PTR [ebp-0x3],0x85f09b95
  40797d:	popa   
  40797e:	shl    BYTE PTR [ecx+0x50],1
  407981:	push   ebp
  407982:	test   eax,0x227dfee1
  407987:	mov    DWORD PTR [ebx+0x2b],esi
  40798a:	ds xchg ebp,eax
  40798c:	(bad)  
  40798d:	addr16 ffreep st(4)
  407990:	mov    ch,0x2a
  407992:	cmp    al,0xa1
  407994:	push   eax
  407995:	cmp    BYTE PTR [edi+0x0],dl
  407998:	mov    bl,0xb1
  40799a:	and    ebp,esi
  40799c:	xchg   ecx,eax
  40799d:	dec    ecx
  40799e:	xchg   ecx,edx
  4079a0:	dec    edx
  4079a1:	call   edx
  4079a3:	cmp    DWORD PTR [ebp+0x10],esi
  4079a6:	je     0x407b57
  4079ac:	xchg   edx,eax
  4079ad:	push   0xa
  4079af:	jmp    0x407b42
  4079b4:	imul   edx,DWORD PTR [esp+ebx*4+0x7f88ff80],0xffffffff
  4079bc:	xchg   DWORD PTR [edx],esi
  4079be:	test   al,0xa5
  4079c0:	inc    esp
  4079c1:	fsub   QWORD PTR [ebp+0x22]
  4079c4:	sahf   
  4079c5:	jg     0x4079c7
  4079c7:	add    BYTE PTR [esi+0x1],dh
  4079ca:	add    BYTE PTR [eax],al
  4079cc:	int    0x99
  4079ce:	aas    
  4079cf:	std    
  4079d0:	xchg   esi,eax
  4079d1:	mov    ecx,0x7c1f4408
  4079d6:	fidiv  DWORD PTR [ebp+0x1e48cb06]
  4079dc:	cmp    BYTE PTR [ebx+0x1f75e991],al
  4079e2:	call   0xa88:0x6de7b4e4
  4079e9:	mov    ebp,DWORD PTR [ecx]
  4079eb:	sbb    ebp,ecx
  4079ed:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4079ee:	xchg   DWORD PTR [eax-0x4],esp
  4079f1:	and    eax,DWORD PTR [ebx+0x2a]
  4079f4:	loope  0x407a67
  4079f6:	popf   
  4079f7:	jmp    0xa8a14d60
  4079fc:	mov    dl,0x34
  4079fe:	push   es
  4079ff:	lds    ebx,FWORD PTR [eax+0x280dfec5]
  407a05:	xlat   BYTE PTR ds:[ebx]
  407a06:	mov    ds:0xfc02d668,al
  407a0b:	lock dec edi
  407a0d:	mov    DWORD PTR [esi],esp
  407a0f:	xchg   ecx,eax
  407a10:	lea    eax,[ebp+0x383df48f]
  407a16:	mov    al,dl
  407a18:	mov    esp,0x5343055b
  407a1d:	and    DWORD PTR [ebp+0x159f97ed],esp
  407a23:	and    eax,0x4f141b9e
  407a28:	sub    DWORD PTR [esi-0x3d],ebx
  407a2b:	retf   0xbbee
  407a2e:	stos   DWORD PTR es:[edi],eax
  407a2f:	into   
  407a30:	in     eax,dx
  407a31:	push   esp
  407a32:	jmp    0x19fe7021
  407a37:	mov    dl,0x4f
  407a39:	pop    ecx
  407a3a:	in     al,0x90
  407a3c:	iret   
  407a3d:	adc    ebx,DWORD PTR [esi+edx*4]
  407a40:	jns    0x4079d0
  407a42:	or     eax,0xc62843d6
  407a47:	and    dl,BYTE PTR [esi]
  407a49:	pushf  
  407a4a:	push   es
  407a4b:	inc    eax
  407a4c:	xchg   ecx,eax
  407a4d:	sub    eax,0x71381d32
  407a52:	pop    ebp
  407a53:	retf   0xd931
  407a56:	out    dx,eax
  407a57:	mov    BYTE PTR [edi],dh
  407a59:	sbb    al,0xa
  407a5b:	mov    es,WORD PTR [edx+esi*4+0x27ea81a0]
  407a62:	data16 icebp 
  407a64:	pop    edi
  407a65:	aaa    
  407a66:	popa   
  407a67:	aam    0x21
  407a69:	mov    al,BYTE PTR [ecx+0x5c]
  407a6c:	add    eax,0x1f8cb628
  407a71:	aam    0x9b
  407a73:	mov    ds:0x76a32970,al
  407a78:	xchg   edx,eax
  407a79:	push   ds
  407a7a:	mov    edx,eax
  407a7c:	rol    ecx,1
  407a7e:	sti    
  407a7f:	out    0x4f,al
  407a81:	xchg   DWORD PTR [edx],ebp
  407a83:	enter  0x5290,0xaf
  407a87:	and    eax,0x1e74ef10
  407a8c:	dec    ecx
  407a8d:	sub    DWORD PTR [esi-0x45],0xffffff91
  407a91:	dec    ebp
  407a92:	gs pop edx
  407a94:	repz adc bl,al
  407a97:	int    0x4a
  407a99:	cmp    DWORD PTR [eax],eax
  407a9b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407a9c:	pop    edx
  407a9d:	xchg   edi,eax
  407a9e:	lock pop ecx
  407aa0:	shr    DWORD PTR [esi-0x4a5c6887],1
  407aa6:	push   esi
  407aa7:	fdiv   DWORD PTR [edx]
  407aa9:	adc    eax,edi
  407aab:	(bad)  
  407aad:	mov    ds:0x9d28bd67,eax
  407ab2:	or     DWORD PTR [esi+0x21],ecx
  407ab5:	jge    0x407b2d
  407ab7:	inc    eax
  407ab8:	repnz lods eax,DWORD PTR ds:[esi]
  407aba:	out    dx,al
  407abb:	fwait
  407abc:	xor    bh,BYTE PTR [ecx]
  407abe:	ins    BYTE PTR es:[edi],dx
  407abf:	or     al,0x37
  407ac1:	sbb    BYTE PTR [ebp+0x54],al
  407ac4:	repnz jecxz 0x407a48
  407ac7:	arpl   WORD PTR [ebx],cx
  407ac9:	jae    0x407a6e
  407acb:	and    ch,BYTE PTR [edx-0x10275a83]
  407ad1:	in     eax,0x6c
  407ad3:	lods   eax,DWORD PTR ds:[esi]
  407ad4:	mov    ds:0xead262f1,eax
  407ad9:	dec    eax
  407ada:	pop    ebx
  407adb:	stos   BYTE PTR es:[edi],al
  407adc:	mov    eax,ds:0x5bc9352
  407ae1:	ret    
  407ae2:	inc    ecx
  407ae3:	mov    esi,0x51e0d7b8
  407ae8:	or     BYTE PTR ds:0xa9d9f2de,bl
  407aee:	inc    ecx
  407aef:	into   
  407af0:	test   eax,0x5485bbeb
  407af5:	mov    WORD PTR [esi],?
  407af7:	iret   
  407af8:	mov    dh,0x82
  407afa:	mov    ebx,0x490c5144
  407aff:	fnstenv [edi+0x5a3542fa]
  407b05:	inc    ecx
  407b06:	shl    DWORD PTR [esi-0x4ff0d0b4],1
  407b0c:	mov    BYTE PTR [esi-0x1a],dh
  407b0f:	push   0xffffffe6
  407b11:	rol    BYTE PTR [edx-0x3f],cl
  407b14:	pop    esi
  407b15:	mov    esp,0xa1c3e21c
  407b1a:	dec    ebx
  407b1b:	into   
  407b1c:	and    eax,0x5fd375cb
  407b21:	dec    ebp
  407b22:	iret   
  407b23:	cmc    
  407b24:	loop   0x407b80
  407b26:	xchg   esp,eax
  407b27:	fwait
  407b28:	das    
  407b29:	xchg   esi,eax
  407b2a:	jge    0x407b25
  407b2c:	fadd   QWORD PTR [edi+0x3b]
  407b2f:	jmp    0x39283e42
  407b34:	jl     0x407abf
  407b36:	jmp    0xffd9:0x11e85b6
  407b3d:	(bad)  
  407b3e:	stc    
  407b3f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407b40:	rcr    edx,0x59
  407b43:	push   0x4
  407b45:	pop    ebx
  407b46:	inc    ebx
  407b47:	xchg   ebx,ecx
  407b49:	sub    ebx,ecx
  407b4b:	xchg   ebx,ecx
  407b4d:	dec    ecx
  407b4e:	mov    eax,DWORD PTR [ebp+0x14]
  407b51:	imul   eax,ecx
  407b54:	add    esp,eax
  407b56:	xchg   edx,eax
  407b57:	push   eax
  407b58:	xor    ebx,ebx
  407b5a:	mov    edx,esp
  407b5c:	dec    edx
  407b5d:	inc    ebx
  407b5e:	add    ebx,DWORD PTR [edx+ebx*1]
  407b61:	dec    ebx
  407b62:	xor    edx,edx
  407b64:	jmp    0x407cf7
  407b69:	mov    bh,0x9a
  407b6b:	hlt    
  407b6c:	mov    dl,0xfd
  407b6e:	(bad)  
  407b6f:	neg    DWORD PTR [edi-0x6934c460]
  407b75:	add    dh,al
  407b77:	jg     0x407bab
  407b79:	adc    al,0x81
  407b7b:	add    BYTE PTR [eax],al
  407b7d:	jbe    0x407b80
  407b7f:	add    BYTE PTR [eax],al
  407b81:	or     BYTE PTR [edi],0xea
  407b84:	hlt    
  407b85:	xchg   DWORD PTR [esi-0x17],edi
  407b88:	lahf   
  407b89:	xor    ch,BYTE PTR [edi+0x6c]
  407b8c:	rcl    DWORD PTR [ebp-0x73],0x33
  407b90:	xchg   edx,eax
  407b91:	rcr    BYTE PTR [edx],1
  407b93:	repz adc ecx,DWORD PTR [edx+0x7e4c2abd]
  407b9a:	in     al,0x4b
  407b9c:	lods   eax,DWORD PTR ds:[esi]
  407b9d:	xor    al,0x26
  407b9f:	mov    eax,ds:0x9f774cdb
  407ba4:	inc    ebp
  407ba5:	sti    
  407ba6:	rcl    ecx,cl
  407ba8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407ba9:	mov    DWORD PTR [ecx-0x59],ecx
  407bac:	int    0x7a
  407bae:	int    0xb
  407bb0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407bb1:	sub    al,0xa4
  407bb3:	xor    ebx,DWORD PTR [eax-0x4efef14f]
  407bb9:	outs   dx,DWORD PTR ds:[esi]
  407bba:	in     eax,dx
  407bbb:	add    eax,0x28704504
  407bc0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407bc1:	xchg   ebx,eax
  407bc2:	scas   al,BYTE PTR es:[edi]
  407bc3:	mov    al,ds:0x671b42c7
  407bc8:	jbe    0x407b6d
  407bca:	fwait
  407bcb:	sbb    DWORD PTR [esi+0x3d],esp
  407bce:	int    0x32
  407bd0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407bd1:	lock pop ds
  407bd3:	sub    esi,DWORD PTR [esi]
  407bd5:	mov    dl,0xbf
  407bd7:	or     DWORD PTR [edx-0x55681782],0x2b
  407bde:	xor    ecx,DWORD PTR [ecx+0x27]
  407be1:	push   ebx
  407be2:	jo     0x407c16
  407be4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407be5:	add    al,0x28
  407be7:	not    BYTE PTR es:[eax-0x7c]
  407beb:	lock xor ebx,eax
  407bee:	test   ch,ah
  407bf0:	gs js  0x407bb3
  407bf3:	xchg   BYTE PTR [edi],ch
  407bf5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407bf6:	int3   
  407bf7:	std    
  407bf8:	mov    cl,0x3
  407bfa:	aaa    
  407bfb:	adc    eax,0xc7ec2cb8
  407c00:	dec    edx
  407c01:	loope  0x407c00
  407c03:	sar    DWORD PTR [edi+0x5fbc033a],1
  407c09:	rcr    esp,0x13
  407c0c:	jne    0x407c3d
  407c0e:	mov    cl,0xb7
  407c10:	imul   esi,ecx,0xffffff92
  407c13:	cli    
  407c14:	xor    eax,0x8d06ae3a
  407c19:	dec    edi
  407c1b:	hlt    
  407c1c:	(bad)
  407c21:	dec    al
  407c23:	sbb    al,0xde
  407c25:	pop    ecx
  407c26:	add    DWORD PTR [esi+ebx*8-0xa9a131a],edi
  407c2d:	fs repnz das 
  407c30:	mov    BYTE PTR [edx-0x32],cl
  407c33:	pop    esi
  407c34:	fwait
  407c35:	adc    BYTE PTR [eax],al
  407c37:	adc    ah,BYTE PTR [ebp-0x2e]
  407c3a:	mov    ah,0xa4
  407c3c:	sub    eax,0xa862386e
  407c41:	and    bl,ah
  407c43:	and    eax,0x2b1bfd0a
  407c48:	jecxz  0x407c50
  407c4a:	push   eax
  407c4b:	data16 sar BYTE PTR [edx+0x75],0x74
  407c50:	fwait
  407c51:	cs push esp
  407c53:	adc    edi,esi
  407c55:	icebp  
  407c56:	in     al,dx
  407c57:	pusha  
  407c58:	push   eax
  407c59:	or     DWORD PTR [ebp-0x5c],eax
  407c5c:	test   DWORD PTR [esi-0x6aec4536],edx
  407c62:	add    al,bl
  407c64:	mov    edi,DWORD PTR [ecx-0x13]
  407c67:	(bad)  [eax+0x6aee1ab3]
  407c6d:	fimul  WORD PTR [edx+0x23ac5f1d]
  407c73:	mov    cl,0xc8
  407c75:	les    esp,FWORD PTR [ecx+0x64]
  407c78:	cmp    BYTE PTR [ecx+0x11],bh
  407c7b:	test   DWORD PTR [edi+0x3c],0x89902fe8
  407c82:	push   eax
  407c83:	fsubr  DWORD PTR [ebx-0x53]
  407c86:	adc    ch,cl
  407c88:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407c89:	mov    BYTE PTR [ebx-0xa],ah
  407c8c:	mov    al,ds:0x67f5084
  407c91:	sbb    al,0x48
  407c93:	mov    cl,0x21
  407c95:	mov    dl,0x88
  407c97:	sub    BYTE PTR [edx+0x517467ea],dh
  407c9d:	fs (bad) 
  407ca0:	les    edx,FWORD PTR [edi+0x6]
  407ca3:	nop
  407ca4:	loop   0x407d16
  407ca6:	aam    0x4c
  407ca8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407ca9:	daa    
  407caa:	xor    DWORD PTR [ebx-0x3c22f71],edi
  407cb0:	cmp    eax,0x4d27e3b2
  407cb5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407cb6:	adc    ch,BYTE PTR [edx-0x3aec91a]
  407cbc:	mov    cl,BYTE PTR [eax+0x2f]
  407cbf:	inc    esp
  407cc0:	mov    edi,0x418801fa
  407cc5:	loope  0x407cbf
  407cc7:	sbb    esi,DWORD PTR [eax+0x36]
  407cca:	nop
  407ccb:	mov    edx,0x5c2cbb9
  407cd0:	mov    ch,0x53
  407cd2:	inc    edi
  407cd3:	repz fst st(7)
  407cd6:	aaa    
  407cd7:	push   eax
  407cd8:	mov    cl,0x86
  407cda:	aam    0x8b
  407cdc:	frndint 
  407cde:	loopne 0x407cdd
  407ce0:	inc    esp
  407ce1:	pop    eax
  407ce2:	aas    
  407ce3:	fiadd  WORD PTR [edx-0x72ac0557]
  407ce9:	pop    edx
  407cea:	inc    ecx
  407ceb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407cec:	sub    al,0x8b
  407cee:	mov    bh,0x3
  407cf0:	mov    ds:0x4a1250eb,eax
  407cf5:	fs xchg ecx,eax
  407cf7:	add    DWORD PTR [ebp-0xc],ebx
  407cfa:	pop    ebx
  407cfb:	mov    eax,DWORD PTR [ebp-0xc]
  407cfe:	jmp    0x407e91
  407d03:	popa   
  407d04:	jp     0x407cdc
  407d06:	adc    edi,ebx
  407d08:	mov    ebp,0xa6887ae7
  407d0d:	lds    edx,FWORD PTR [edx+0x14d15b2c]
  407d13:	mov    al,BYTE PTR [edx+0x1760000]
  407d19:	add    BYTE PTR [eax],al
  407d1b:	pop    ss
  407d1c:	shr    edi,1
  407d1e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407d1f:	scas   al,BYTE PTR es:[edi]
  407d20:	stos   BYTE PTR es:[edi],al
  407d21:	clc    
  407d22:	sub    eax,0xad6a83ba
  407d27:	add    eax,0x3fbc8515
  407d2c:	ds das 
  407d2e:	xchg   ebp,eax
  407d2f:	mov    edx,0x652d5056
  407d34:	sbb    BYTE PTR [ebp+0x23296e68],bh
  407d3a:	mov    WORD PTR [eax+0x31b692fe],cs
  407d40:	xchg   edx,eax
  407d41:	fs fs push ebx
  407d44:	pushf  
  407d45:	dec    edi
  407d46:	add    bl,BYTE PTR [ebp+0x78]
  407d49:	fstp   QWORD PTR [edi-0xa24bc70]
  407d4f:	push   eax
  407d50:	pop    esi
  407d51:	xor    bl,BYTE PTR [edi]
  407d53:	xchg   ecx,eax
  407d54:	mov    esi,0xd848fa1c
  407d59:	stc    
  407d5a:	sub    al,0x9
  407d5c:	cmp    BYTE PTR [edi-0x7fe0573b],bh
  407d62:	mov    al,0x62
  407d64:	inc    edx
  407d65:	mov    edi,0xd939460a
  407d6a:	cmp    esi,DWORD PTR [esi]
  407d6c:	loop   0x407d7d
  407d6e:	not    DWORD PTR [esp+ebx*8+0x124836be]
  407d75:	test   BYTE PTR [edi-0x10],dh
  407d78:	mov    ebx,0x7e54b881
  407d7d:	jne    0x407d04
  407d7f:	add    eax,0x6b5a5a6e
  407d84:	aaa    
  407d85:	jns    0x407d9a
  407d87:	sbb    BYTE PTR ss:0xae7b3624,dl
  407d8e:	int3   
  407d8f:	mov    al,0xaf
  407d91:	sbb    DWORD PTR [ebp-0x5edd98d2],esp
  407d97:	push   cs
  407d98:	push   0xef773478
  407d9d:	fiadd  DWORD PTR [ebx-0x23]
  407da0:	shl    DWORD PTR [ecx+0x22],cl
  407da3:	lahf   
  407da4:	jmp    0x9e357eaa
  407da9:	xchg   BYTE PTR [eax+0x16],bl
  407dac:	cmp    ebp,0x1aa7bce6
  407db2:	dec    edi
  407db3:	icebp  
  407db4:	mov    bh,ah
  407db6:	out    dx,eax
  407db7:	inc    esi
  407db8:	lock pop es
  407dba:	add    DWORD PTR [ebp+0x7d],0xffffffb1
  407dbe:	outs   dx,BYTE PTR ds:[esi]
  407dbf:	push   ecx
  407dc0:	repz scas al,BYTE PTR es:[edi]
  407dc2:	pop    eax
  407dc3:	push   esi
  407dc4:	(bad)  
  407dc5:	not    BYTE PTR [eax+0x4a0698f8]
  407dcb:	outs   dx,BYTE PTR ds:[esi]
  407dcc:	adc    BYTE PTR [esi+0x14a4c7c9],bh
  407dd2:	popa   
  407dd3:	imul   esp,DWORD PTR [ebx],0xc377d512
  407dd9:	pop    edx
  407dda:	lea    esi,[esi]
  407ddc:	shl    DWORD PTR [eax+0x5d],1
  407ddf:	sti    
  407de0:	pop    esp
  407de1:	ret    0x41c2
  407de4:	sbb    al,0x66
  407de6:	and    al,0xc2
  407de8:	ret    0x841d
  407deb:	cmp    BYTE PTR [edx-0x68],bh
  407dee:	and    al,0xbd
  407df0:	and    ch,BYTE PTR [ebx]
  407df2:	sub    eax,0x6950e91d
  407df7:	and    eax,0x52b5d1d5
  407dfc:	or     DWORD PTR [ecx+0x2017120],ecx
  407e02:	addr16 mov esp,0x528de3f0
  407e08:	in     eax,dx
  407e09:	xor    eax,0xfda618df
  407e0e:	xchg   ebp,eax
  407e0f:	in     al,dx
  407e10:	and    eax,0xbe8cff51
  407e15:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407e16:	jle    0x407e26
  407e18:	jle    0x407dbd
  407e1a:	arpl   sp,bp
  407e1c:	das    
  407e1d:	rcl    DWORD PTR [edi+0x4a077590],cl
  407e23:	sub    BYTE PTR [ebx-0x45],dh
  407e26:	std    
  407e27:	mov    ds:0xa175930b,al
  407e2c:	lods   al,BYTE PTR ds:[esi]
  407e2d:	jmp    0x818b:0x884bca10
  407e34:	mov    cl,0xa7
  407e36:	inc    ebp
  407e37:	pop    es
  407e38:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407e39:	jo     0x407e07
  407e3b:	cmp    ecx,DWORD PTR [esi+0x12]
  407e3e:	inc    eax
  407e3f:	push   cs
  407e40:	into   
  407e41:	pushf  
  407e42:	loope  0x407df7
  407e44:	scas   al,BYTE PTR es:[edi]
  407e45:	out    dx,eax
  407e46:	xchg   edi,eax
  407e47:	xchg   ebx,eax
  407e48:	das    
  407e49:	(bad)  
  407e4a:	popa   
  407e4b:	or     esp,edx
  407e4d:	jns    0x407ea8
  407e4f:	ficom  WORD PTR [eax]
  407e51:	push   0x2682b4fe
  407e56:	fcom   QWORD PTR [esi+0x17]
  407e59:	push   edi
  407e5a:	mov    DWORD PTR [edx],edi
  407e5c:	enter  0xe7c,0xba
  407e60:	enter  0x610b,0x4e
  407e64:	sbb    dh,bh
  407e66:	(bad)  
  407e67:	mov    esp,0x8ee8963d
  407e6c:	mov    BYTE PTR [edi-0x23],al
  407e6f:	xchg   ecx,eax
  407e70:	push   eax
  407e71:	mov    dl,0x41
  407e73:	das    
  407e74:	rcl    BYTE PTR [edi],cl
  407e76:	sub    eax,0x82ccfb31
  407e7b:	arpl   dx,bx
  407e7d:	call   0x282e:0x3059af94
  407e84:	and    al,0xc8
  407e86:	std    
  407e87:	mov    ch,0x81
  407e89:	sub    edi,esi
  407e8b:	les    ebp,FWORD PTR [edi-0x40]
  407e8e:	retf   
  407e8f:	shl    dl,1
  407e91:	pop    edi
  407e92:	pop    esi
  407e93:	pop    ebx
  407e94:	leave  
  407e95:	ret    
  407e96:	clc    
  407e97:	push   ds
  407e98:	(bad)  
  407e99:	push   esp
  407e9a:	out    0xdc,al
  407e9c:	cli    
  407e9d:	mov    esi,0xe324b572
  407ea2:	jb     0x407e59
  407ea4:	imul   ebp,DWORD PTR [esi],0xffffffd4
  407ea7:	or     al,0x0
  407ea9:	add    BYTE PTR ds:0xd3000003,dh
  407eaf:	dec    ebx
  407eb0:	aaa    
  407eb1:	fisttp QWORD PTR [esi]
  407eb3:	mov    al,ds:0x8920a375
  407eb8:	sub    edx,DWORD PTR [ebx+0x34908c56]
  407ebe:	add    DWORD PTR [edi-0x40],eax
  407ec1:	pop    edi
  407ec2:	fwait
  407ec3:	jg     0x407e66
  407ec5:	mov    DWORD PTR [ebp-0x4c9535c5],edx
  407ecb:	mov    ch,0x1
  407ecd:	aas    
  407ece:	test   al,0xfd
  407ed0:	or     ebx,DWORD PTR [eax+eax*2-0x55]
  407ed4:	ffreep st(1)
  407ed6:	pop    ds
  407ed7:	mov    bl,0x10
  407ed9:	push   edx
  407eda:	mov    ds:0x1fbd2785,al
  407edf:	aas    
  407ee0:	mov    ah,0x32
  407ee2:	push   es
  407ee3:	push   ebx
  407ee4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407ee5:	xchg   esp,eax
  407ee6:	jmp    0x407eb7
  407ee8:	cmp    ch,ah
  407eea:	cs sub al,bl
  407eed:	jle    0x407f27
  407eef:	add    esi,edx
  407ef1:	(bad)  
  407ef3:	imul   esi,DWORD PTR [ecx-0x1fd89b59],0x4f981bd
  407efd:	enter  0x200,0x26
  407f01:	adc    bh,BYTE PTR ds:0xa76ded36
  407f07:	mov    edi,0xafac7ef8
  407f0c:	push   0xffffffe8
  407f0e:	mov    al,0x6e
  407f10:	sub    eax,0x720819c5
  407f15:	dec    ecx
  407f16:	push   ebp
  407f17:	jne    0x407f5c
  407f19:	or     edi,ebp
  407f1b:	shl    esi,0x79
  407f1e:	repz out dx,al
  407f20:	push   0x6ec0e060
  407f25:	push   esp
  407f26:	bound  edx,QWORD PTR [edx]
  407f28:	xchg   edi,eax
  407f29:	icebp  
  407f2a:	or     eax,edx
  407f2c:	lods   eax,DWORD PTR ds:[esi]
  407f2d:	call   0x5cd87635
  407f32:	fscale 
  407f34:	icebp  
  407f35:	add    ebx,DWORD PTR ds:0x4c49a89
  407f3b:	xchg   ebx,eax
  407f3c:	sub    al,0x0
  407f3e:	stc    
  407f3f:	ins    DWORD PTR es:[edi],dx
  407f40:	mov    ds:0x8a365c41,eax
  407f45:	jmp    0x407ece
  407f47:	push   ds
  407f48:	mov    bl,0xcc
  407f4a:	fcom   QWORD PTR [esi+0x75259152]
  407f50:	push   edx
  407f51:	xor    DWORD PTR [edx+edi*8+0x33],ebp
  407f55:	int3   
  407f56:	pop    ss
  407f57:	fidivr WORD PTR [edi]
  407f59:	or     edx,0x35
  407f5c:	fst    DWORD PTR [edx+0x71]
  407f5f:	fwait
  407f60:	scas   eax,DWORD PTR es:[edi]
  407f61:	push   esp
  407f62:	jl     0x407f52
  407f64:	adc    DWORD PTR [edi-0x39],0xfffffff2
  407f68:	mov    ebx,DWORD PTR [ebx+0x3d]
  407f6b:	cmp    edi,DWORD PTR [ecx-0x2a]
  407f6e:	and    DWORD PTR [ebp-0x38],0x52b148af
  407f75:	iret   
  407f76:	aas    
  407f77:	mov    bh,0xb4
  407f79:	push   esp
  407f7a:	popf   
  407f7b:	call   FWORD PTR [edi]
  407f7d:	aaa    
  407f7e:	push   esi
  407f7f:	jno    0x407fcb
  407f81:	sub    ecx,ecx
  407f83:	mov    ecx,0xd62783
  407f88:	fcomp  QWORD PTR [ecx]
  407f8a:	sub    ebx,DWORD PTR [edi+0x78127d36]
  407f90:	and    BYTE PTR [ebx+edx*1-0x4dc977ee],al
  407f97:	(bad)  
  407f98:	xchg   esi,eax
  407f99:	mov    esp,0x8f9706ac
  407f9e:	rcl    esi,0xda
  407fa1:	and    ah,BYTE PTR [ecx]
  407fa3:	mov    ebx,0x1920fd64
  407fa8:	outs   dx,BYTE PTR ds:[esi]
  407fa9:	imul   edx,edx,0x892303a4
  407faf:	iret   
  407fb0:	fbstp  TBYTE PTR [ecx+0x5e078559]
  407fb6:	push   ebp
  407fb7:	mov    ebp,0xe8a24735
  407fbc:	xlat   BYTE PTR ds:[ebx]
  407fbd:	scas   al,BYTE PTR es:[edi]
  407fbe:	jo     0x407f4f
  407fc0:	out    0xd3,eax
  407fc2:	mov    eax,0xb3deb440
  407fc7:	(bad)  
  407fc8:	xor    BYTE PTR [ebx-0x43a9fef7],dl
  407fce:	push   cs
  407fcf:	arpl   WORD PTR [edi+edi*1+0x76],bx
  407fd3:	jne    0x407fac
  407fd5:	test   eax,0xe5f60e32
  407fda:	leave  
  407fdb:	pop    es
  407fdc:	cld    
  407fdd:	cmp    DWORD PTR [ebx-0x4a],esi
  407fe0:	iret   
  407fe1:	xor    al,0x97
  407fe3:	push   0xffffffd1
  407fe5:	mov    ecx,0xc58294cb
  407fea:	push   0x342a9670
  407fef:	and    edx,DWORD PTR [ebx]
  407ff1:	out    dx,eax
  407ff2:	scas   al,BYTE PTR es:[edi]
  407ff3:	in     al,0xb8
  407ff5:	jnp    0x407f9a
  407ff7:	xchg   DWORD PTR [ecx+0x476f2c5a],eax
  407ffd:	enter  0xd0b9,0x9d
  408001:	sbb    DWORD PTR [esp],ecx
  408004:	les    esi,FWORD PTR [ecx-0x1d]
  408007:	es enter 0x120f,0x73
  40800c:	push   esp
  40800d:	add    eax,0x3c8e7160
  408012:	add    eax,0x1d73de78
  408017:	jno    0x40800d
  408019:	aad    0x9d
  40801b:	mov    WORD PTR [ecx+0x76],es
  40801e:	push   ds
  40801f:	add    ah,0x19
  408022:	popa   
  408023:	(bad)  
  408024:	bound  ebx,QWORD PTR gs:[ebp-0x47bfb16b]
  40802b:	sbb    dl,BYTE PTR [ebp+0x4b]
  40802e:	pop    eax
  40802f:	inc    edx
  408030:	inc    eax
  408031:	xchg   edi,eax
  408032:	jmp    0x9043a334
  408037:	sub    eax,0x8bfd9f8
  40803c:	inc    ebp
  40803d:	pusha  
  40803e:	ins    BYTE PTR es:[edi],dx
  40803f:	loop   0x40808a
  408041:	aas    
  408042:	ds mov bh,0x3a
  408045:	push   ebx
  408046:	clc    
  408047:	outs   dx,DWORD PTR ds:[esi]
  408048:	stc    
  408049:	or     dl,ah
  40804b:	sub    eax,0x6ceb38b9
  408050:	cmp    BYTE PTR [edx+0x4],bl
  408053:	adc    bh,BYTE PTR [edi-0x7e3eb193]
  408059:	xor    eax,0x4aca64c6
  40805e:	pop    ds
  40805f:	xor    ch,al
  408061:	repz std 
  408063:	scas   eax,DWORD PTR es:[edi]
  408064:	mov    ebp,DWORD PTR [ebp-0x63]
  408067:	pop    esp
  408068:	cmp    esi,DWORD PTR [ebx-0x39]
  40806b:	mov    BYTE PTR [edi+0x6e],dh
  40806e:	cmp    bh,BYTE PTR [edx-0x60]
  408071:	push   edx
  408072:	jg     0x4080eb
  408074:	push   es
  408075:	inc    esi
  408076:	add    BYTE PTR ds:0xba00707d,ah
  40807c:	push   0xffffffee
  40807e:	inc    ebx
  40807f:	jae    0x408029
  408081:	push   eax
  408082:	test   DWORD PTR [ebp+0x19313a2a],ebp
  408088:	sbb    DWORD PTR [ebx+0x2043e8a3],ebp
  40808e:	inc    ebp
  40808f:	in     eax,0xe5
  408091:	xchg   ecx,eax
  408092:	mov    al,0xa6
  408094:	fwait
  408095:	imul   ebp,DWORD PTR [eax],0x3b
  408098:	or     al,0x6d
  40809a:	or     eax,0x273e4e55
  40809f:	into   
  4080a0:	push   bx
  4080a2:	dec    esp
  4080a3:	imul   eax
  4080a5:	enter  0xb0b0,0xad
  4080a9:	push   esp
  4080aa:	(bad)  
  4080ab:	nop
  4080ac:	in     al,0xa1
  4080ae:	xor    cl,BYTE PTR [edx+0x2b]
  4080b1:	out    0x4,eax
  4080b3:	jecxz  0x4080de
  4080b5:	dec    eax
  4080b6:	inc    esi
  4080b7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4080b8:	inc    esi
  4080b9:	(bad)  
  4080ba:	repnz xor eax,0xd22ea83f
  4080c0:	stos   DWORD PTR es:[edi],eax
  4080c1:	ret    0xb2ae
  4080c4:	adc    dl,BYTE PTR ds:0x3780dfd4
  4080ca:	mov    ecx,DWORD PTR [ebx+0x5f]
  4080cd:	lea    ebx,[ecx+0x6]
  4080d0:	pop    esp
  4080d1:	test   al,0xf1
  4080d3:	jmp    0xb4b5c161
  4080d8:	cld    
  4080d9:	add    eax,0xb5a63cb8
  4080de:	mov    eax,0xf85f6a78
  4080e3:	sbb    al,0xc3
  4080e5:	aad    0xb
  4080e7:	add    ch,0x73
  4080ea:	das    
  4080eb:	ret    0x66a8
  4080ee:	push   esp
  4080ef:	adc    ch,BYTE PTR [edi-0x1]
  4080f2:	mov    WORD PTR [edx+0xde9ea3b],ss
  4080f8:	xchg   esi,eax
  4080f9:	xchg   ebp,eax
  4080fa:	sbb    ebx,ebx
  4080fc:	adc    BYTE PTR [ecx+0x7fd6dc8d],cl
  408102:	dec    edi
  408103:	push   edi
  408104:	xor    dl,BYTE PTR [eax]
  408106:	adc    DWORD PTR [esi+0x30],eax
  408109:	or     al,BYTE PTR [ecx-0x53548692]
  40810f:	int    0xa7
  408111:	sbb    BYTE PTR [edx+0x6c261123],ch
  408117:	adc    ecx,ecx
  408119:	cmp    eax,0xe654612c
  40811e:	jbe    0x408187
  408120:	mov    al,0xc
  408122:	add    al,0x5
  408124:	pusha  
  408125:	jmp    0x5b47:0x5c99e97c
  40812c:	sbb    al,0xd8
  40812e:	jl     0x4081ac
  408130:	jmp    FWORD PTR [eax]
  408132:	push   edx
  408133:	fdiv   st(5),st
  408135:	out    dx,al
  408136:	shl    cl,0xcf
  408139:	mov    ebp,0xc75fc4f7
  40813e:	fld    DWORD PTR [eax]
  408140:	int3   
  408141:	adc    bh,ah
  408143:	jecxz  0x408180
  408145:	jg     0x4081a6
  408147:	pop    esi
  408148:	lahf   
  408149:	xor    eax,0x2804ab37
  40814e:	cmp    ebx,DWORD PTR [esi+0x2aa1ddf6]
  408154:	push   ss
  408155:	(bad)  
  408156:	jne    0x40819e
  408158:	fmul   QWORD PTR [bp+di+0x6ad3]
  40815d:	add    edx,esp
  40815f:	push   edx
  408160:	mov    DWORD PTR fs:[edx],ebp
  408163:	fcom   st(7)
  408165:	mov    bh,0x5a
  408167:	jo     0x40812c
  408169:	mov    esp,0xd456a877
  40816e:	mov    eax,ds:0xa1b70639
  408173:	jle    0x4080fe
  408175:	inc    ebp
  408176:	aad    0xcd
  408178:	(bad)  
  40817a:	jbe    0x4081bd
  40817c:	add    eax,0x13034229
  408181:	lock adc dh,bl
  408184:	dec    esp
  408185:	gs jnp 0x40816e
  408188:	inc    esp
  408189:	ret    
  40818a:	(bad)  [ebx+0x30199e6f]
  408190:	in     eax,0x49
  408192:	mov    ebx,0xa2d328cc
  408197:	pop    ss
  408198:	push   es
  408199:	repnz xor al,ch
  40819c:	and    edx,esi
  40819e:	inc    edi
  40819f:	leave  
  4081a0:	push   esi
  4081a1:	xchg   ecx,eax
  4081a2:	out    dx,eax
  4081a3:	sbb    eax,0xdfcde267
  4081a8:	enter  0x8663,0x83
  4081ac:	mov    bl,0xf8
  4081ae:	and    DWORD PTR [edx],ecx
  4081b0:	sub    esi,DWORD PTR [ecx-0x3]
  4081b3:	push   ecx
  4081b4:	pop    edx
  4081b5:	ret    0x7c2b
  4081b8:	sub    dl,BYTE PTR [ecx+ecx*1+0x143701aa]
  4081bf:	stos   BYTE PTR es:[edi],al
  4081c0:	or     DWORD PTR [ecx-0x4e],edx
  4081c3:	(bad)  
  4081c4:	loopne 0x4081a1
  4081c6:	sbb    eax,0x10891cd7
  4081cb:	xor    ebx,ecx
  4081cd:	xchg   ebx,eax
  4081ce:	dec    esi
  4081cf:	gs aas 
  4081d1:	sbb    eax,esi
  4081d3:	nop
  4081d4:	cs push 0xa1eb8dc0
  4081da:	pop    esp
  4081db:	cmp    BYTE PTR [edx+0x72],dl
  4081de:	mov    esi,0xe1fb77ce
  4081e3:	push   ebp
  4081e4:	mov    ebp,esp
  4081e6:	push   ecx
  4081e7:	mov    eax,DWORD PTR [ebp-0x4]
  4081ea:	mov    DWORD PTR ds:0x42372c,0x7e8d
  4081f4:	cmp    eax,edx
  4081f6:	mov    DWORD PTR ds:0x4236f4,0x6adb
  408200:	jae    0x408f01
  408206:	mov    ecx,edx
  408208:	and    DWORD PTR ds:0x4214e4,0x4236a8
  408212:	shr    ecx,0x8
  408215:	sub    DWORD PTR ds:0x423680,0x423744
  40821f:	push   esi
  408220:	mov    esi,DWORD PTR [ebp-0x4]
  408223:	and    DWORD PTR ds:0x4236f8,0x423700
  40822d:	test   ecx,ecx
  40822f:	mov    DWORD PTR ds:0x4214d8,0x650b
  408239:	je     0x408251
  40823f:	mov    DWORD PTR ds:0x4214e4,0x59c8
  408249:	lea    eax,[ecx+esi*1]
  40824c:	jmp    0x408260
  408251:	movzx  eax,dl
  408254:	adc    DWORD PTR ds:0x4214f4,0x4236fc
  40825e:	add    eax,esi
  408260:	cmp    esi,eax
  408262:	mov    DWORD PTR ds:0x4214dc,0x1a3b
  40826c:	jae    0x40828e
  408272:	mov    DWORD PTR ds:0x4236b8,0x47a6
  40827c:	mov    DWORD PTR [ebp-0x4],eax
  40827f:	mov    DWORD PTR ds:0x423728,0x3237
  408289:	jmp    0x408291
  40828e:	inc    DWORD PTR [ebp-0x4]
  408291:	mov    DWORD PTR ds:0x423734,0x5d04
  40829b:	jmp    0x408668
  4082a0:	dec    ebx
  4082a1:	mov    gs,WORD PTR [eax+0x73]
  4082a4:	in     eax,dx
  4082a5:	neg    DWORD PTR [ebx-0x42]
  4082a8:	popa   
  4082a9:	cdq    
  4082aa:	dec    esp
  4082ab:	pusha  
  4082ac:	push   es
  4082ad:	jp     0x408257
  4082af:	mov    ah,0x0
  4082b1:	test   BYTE PTR [eax],al
  4082b3:	add    BYTE PTR [eax+0x51000003],dh
  4082b9:	xchg   ebx,eax
  4082ba:	xchg   DWORD PTR [esi+ebx*8+0x51],eax
  4082be:	test   eax,0x8df9fb02
  4082c3:	push   ebx
  4082c4:	dec    BYTE PTR [ebx]
  4082c6:	sub    eax,esi
  4082c8:	add    bh,BYTE PTR [ebx]
  4082ca:	jo     0x40829f
  4082cc:	loopne 0x40831b
  4082ce:	sub    al,0xda
  4082d0:	ja     0x40834c
  4082d2:	push   esi
  4082d3:	jl     0x408301
  4082d5:	pop    ebp
  4082d6:	sbb    DWORD PTR [esi+0x187f5ce3],esi
  4082dc:	stc    
  4082dd:	jmp    0x24e6d08f
  4082e2:	jno    0x408357
  4082e4:	icebp  
  4082e5:	jle    0x4082f6
  4082e7:	xor    BYTE PTR [esi-0x1e],cl
  4082ea:	stos   BYTE PTR es:[edi],al
  4082eb:	adc    al,0xab
  4082ed:	int3   
  4082ee:	dec    edi
  4082ef:	enter  0xa98,0xdf
  4082f3:	bound  esi,QWORD PTR [ebx+0x1]
  4082f6:	fcomp  QWORD PTR ds:0x97be8f35
  4082fc:	xor    BYTE PTR [esi-0x7a],ah
  4082ff:	jecxz  0x4082f5
  408301:	mov    dl,0xd1
  408303:	xchg   edi,eax
  408304:	add    ch,BYTE PTR [ebp+0x15]
  408307:	and    ebp,DWORD PTR [edi]
  408309:	stc    
  40830a:	icebp  
  40830b:	ss and eax,0x5a288749
  408311:	pop    esp
  408312:	cwde   
  408313:	or     al,0xb6
  408315:	push   ebx
  408316:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408317:	mov    ecx,0x521cf422
  40831c:	shl    esp,cl
  40831e:	(bad)  
  40831f:	ds xchg BYTE PTR gs:[eax+0x1829e712],bh
  408327:	retf   0x972e
  40832a:	adc    al,0x87
  40832c:	and    BYTE PTR [ebx],bh
  40832e:	loope  0x40833a
  408330:	fadd   DWORD PTR [edi+0x39]
  408333:	jb     0x40839d
  408335:	pop    esp
  408336:	mov    eax,0x6a417616
  40833b:	xchg   BYTE PTR [edx+edx*2+0x2c89a6f9],dh
  408342:	mov    ds:0x465f0a9e,eax
  408347:	je     0x408337
  408349:	pop    ds
  40834a:	push   esp
  40834b:	shl    BYTE PTR [eax-0x60],1
  40834e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40834f:	retf   0xc35f
  408352:	scas   eax,DWORD PTR es:[edi]
  408353:	xor    eax,0x36794198
  408358:	mov    dh,0x1a
  40835a:	or     DWORD PTR [ecx-0x26],ebp
  40835d:	mul    DWORD PTR ds:0x3ec07973
  408363:	shr    BYTE PTR [ecx+0x364f3a5d],cl
  408369:	mov    bh,0x8
  40836b:	xor    al,BYTE PTR [edx+0x40133bda]
  408371:	sbb    eax,0xab742551
  408376:	mov    ah,0xbb
  408378:	ret    0xfe54
  40837b:	push   ebx
  40837c:	cmp    bh,BYTE PTR [ecx+eax*8]
  40837f:	or     cl,BYTE PTR [edx+ebp*8]
  408382:	dec    ebx
  408383:	clc    
  408384:	ss pop ebp
  408386:	jns    0x4083ce
  408388:	and    edx,DWORD PTR [esi+ebp*4+0x2]
  40838c:	ja     0x408318
  40838e:	inc    edi
  40838f:	sub    ah,BYTE PTR [eax]
  408391:	rcr    bl,0xdf
  408394:	or     esi,DWORD PTR [eax+0x4ac038bb]
  40839a:	jmp    0x9b8a:0xfccb574f
  4083a1:	fstp   QWORD PTR [ecx]
  4083a3:	jp     0x40832c
  4083a5:	shl    DWORD PTR [eax],1
  4083a7:	jmp    0xb73f:0xde9b8510
  4083ae:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4083af:	mov    bl,0x35
  4083b1:	cmovne edi,DWORD PTR [eax-0x1f]
  4083b5:	leave  
  4083b6:	cld    
  4083b7:	jb     0x408347
  4083b9:	xor    edx,ecx
  4083bb:	jns    0x408415
  4083bd:	popa   
  4083be:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4083bf:	pusha  
  4083c0:	jae    0x4083e0
  4083c2:	adc    BYTE PTR [edx],al
  4083c4:	not    al
  4083c6:	test   eax,0x17837e74
  4083cb:	ja     0x408423
  4083cd:	pushf  
  4083ce:	mov    eax,ds:0x7a08cd6b
  4083d3:	mov    ch,bh
  4083d5:	adc    BYTE PTR [esi],dl
  4083d7:	and    al,0x19
  4083d9:	lahf   
  4083da:	test   ebx,esi
  4083dc:	jmp    0x4083ea
  4083de:	ror    ebx,0x53
  4083e1:	aas    
  4083e2:	retf   
  4083e3:	and    bh,BYTE PTR [ebp-0x35c2837e]
  4083e9:	jecxz  0x408454
  4083eb:	in     eax,0xa9
  4083ed:	arpl   WORD PTR [edi],bp
  4083ef:	dec    edx
  4083f0:	out    0x6a,eax
  4083f2:	pusha  
  4083f3:	xchg   ebp,eax
  4083f4:	call   0x94cdb14e
  4083f9:	sub    ah,ch
  4083fb:	adc    al,0x7b
  4083fd:	push   eax
  4083fe:	inc    edi
  4083ff:	mov    bh,0xc
  408401:	xchg   edi,eax
  408402:	cmc    
  408403:	adc    edx,ebx
  408405:	out    0x80,al
  408407:	pop    esi
  408408:	inc    esp
  408409:	pushf  
  40840a:	adc    BYTE PTR [eax+0x38f2cb9],ch
  408410:	push   cs
  408411:	scas   eax,DWORD PTR es:[edi]
  408412:	repz or BYTE PTR [edx+0x30],0x52
  408417:	data16 lahf 
  408419:	nop
  40841a:	xchg   ecx,eax
  40841b:	hlt    
  40841c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40841d:	cwde   
  40841e:	dec    esi
  40841f:	mov    WORD PTR [edi+0x3c],?
  408422:	sub    BYTE PTR [ecx+0x3c],0x55
  408426:	mov    esp,0xd1971d12
  40842b:	adc    dl,bl
  40842d:	sub    al,0x52
  40842f:	add    al,0x6e
  408431:	aad    0xad
  408433:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408434:	and    eax,0xbd5c7b4f
  408439:	sbb    DWORD PTR [ecx+0x1e118995],0xfffffff7
  408440:	lods   al,BYTE PTR ds:[esi]
  408441:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408442:	jae    0x408419
  408444:	or     al,0xbb
  408446:	xlat   BYTE PTR ds:[ebx]
  408447:	in     eax,0x6
  408449:	cmp    ah,bl
  40844b:	sub    al,0xd4
  40844d:	sub    BYTE PTR [eax],cl
  40844f:	pushf  
  408450:	add    al,0x4b
  408452:	xchg   esi,eax
  408453:	in     eax,0x14
  408455:	std    
  408456:	sahf   
  408457:	sub    BYTE PTR [ecx-0x3f],0x6
  40845b:	pop    edx
  40845c:	ds inc esi
  40845e:	jnp    0x4084c8
  408460:	jg     0x40842d
  408462:	pop    edi
  408463:	cmp    ebp,ecx
  408465:	(bad)  
  408466:	fstp   DWORD PTR [edx+0x2d5dfa47]
  40846c:	mov    edi,0x7b9c04ae
  408471:	or     DWORD PTR ds:0xd3f9e951,esi
  408477:	push   cs
  408478:	aas    
  408479:	mov    ebx,0xe9779445
  40847e:	retf   
  40847f:	pop    ebp
  408480:	inc    DWORD PTR [ecx-0x2a]
  408483:	and    DWORD PTR [edi+0x69c93921],0xffffffce
  40848a:	xlat   BYTE PTR ds:[ebx]
  40848b:	pop    edx
  40848c:	jmp    0xf7da:0x6cddf424
  408493:	enter  0x55f9,0x43
  408497:	js     0x40846f
  408499:	aaa    
  40849a:	clc    
  40849b:	mov    WORD PTR [esi+eiz*2-0x66f0ab39],?
  4084a2:	lock (bad) 
  4084a4:	mov    ebx,0xbd4c8b5f
  4084a9:	xchg   esi,eax
  4084aa:	mov    bl,0xf9
  4084ac:	pop    ebp
  4084ad:	dec    edx
  4084ae:	push   cs
  4084af:	mov    ebp,0x4df9bfa2
  4084b4:	jns    0x4084f3
  4084b6:	add    BYTE PTR [ecx-0x4bfb33f3],0xc3
  4084bd:	ss xchg ebp,eax
  4084bf:	je     0x4084c7
  4084c1:	pop    ecx
  4084c2:	push   ds
  4084c3:	cmp    ebx,DWORD PTR [esi-0x6cc48180]
  4084c9:	and    dl,BYTE PTR [esi+0x47]
  4084cc:	add    al,0xaf
  4084ce:	mov    eax,?
  4084d0:	pandn  mm4,QWORD PTR [edi+eax*1+0x28cf3930]
  4084d8:	loopne 0x408559
  4084da:	icebp  
  4084db:	or     al,BYTE PTR [esi]
  4084dd:	jp     0x4084a6
  4084df:	loopne 0x40851f
  4084e1:	cwde   
  4084e2:	cmp    al,al
  4084e4:	mov    eax,ds:0x5bcfa151
  4084e9:	mov    dl,BYTE PTR [ecx-0xc2351ea]
  4084ef:	xor    esi,0xc5959514
  4084f5:	dec    ebx
  4084f6:	fwait
  4084f7:	hlt    
  4084f8:	add    BYTE PTR [esi],cl
  4084fa:	xor    al,0x42
  4084fc:	adc    eax,0xde39c519
  408501:	sub    edx,edi
  408503:	rol    ebp,cl
  408505:	mov    cl,0x76
  408507:	fwait
  408508:	dec    esp
  408509:	(bad)  
  40850a:	nop
  40850b:	push   ss
  40850c:	pop    ebx
  40850d:	inc    edx
  40850e:	adc    DWORD PTR [edx],0xffffffff
  408511:	div    DWORD PTR [edx+eax*8]
  408514:	or     al,0x20
  408516:	sbb    al,0xe1
  408518:	imul   esi,edi,0xffffffc9
  40851b:	inc    edx
  40851c:	(bad)  
  40851d:	xlat   BYTE PTR ds:[ebx]
  40851e:	push   ebp
  40851f:	xor    esp,0x8
  408522:	div    ecx
  408524:	and    DWORD PTR [edi+0x25efe740],ebp
  40852a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40852b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40852c:	mov    ds:0x9196015b,eax
  408531:	and    DWORD PTR [ecx],0x1
  408534:	mul    BYTE PTR [edi+0x53d994a9]
  40853a:	out    0x36,al
  40853c:	fstp   TBYTE PTR [ebx-0x12e45156]
  408542:	outs   dx,DWORD PTR ds:[esi]
  408543:	mov    al,ds:0x7a744420
  408548:	mov    eax,ds:0x83c24153
  40854d:	clc    
  40854e:	arpl   WORD PTR [edx],cx
  408550:	leave  
  408551:	aas    
  408552:	lds    si,DWORD PTR [esi+0x48]
  408556:	lea    edi,[edi-0x28]
  408559:	xchg   ebp,eax
  40855a:	mov    BYTE PTR [ebx+0x6d],bl
  40855d:	xchg   ecx,eax
  40855e:	push   edi
  40855f:	jl     0xa5868a3f
  408565:	call   0xb8a1:0x41c24e7d
  40856c:	in     eax,0x31
  40856e:	add    al,0x72
  408570:	inc    ecx
  408571:	sbb    BYTE PTR [ebx],dl
  408573:	and    DWORD PTR [edi+0x159128e2],ebp
  408579:	pop    es
  40857a:	dec    esi
  40857b:	mov    bl,0xba
  40857d:	jns    0x408566
  40857f:	mov    esp,0x56edf5f5
  408584:	dec    esi
  408585:	test   BYTE PTR [esi],al
  408587:	inc    esp
  408588:	and    ah,ch
  40858a:	aaa    
  40858b:	clc    
  40858c:	and    eax,0xdaaf89e3
  408591:	mov    ch,BYTE PTR [esi-0x6e]
  408594:	es sub al,0xb1
  408597:	pop    ds
  408598:	loop   0x4085be
  40859a:	xchg   edi,eax
  40859b:	shr    DWORD PTR [edi],1
  40859d:	shr    BYTE PTR [ebx-0x76f542cc],1
  4085a3:	and    eax,0xffffffba
  4085a6:	pusha  
  4085a7:	jno    0x40858d
  4085a9:	mov    BYTE PTR [esi-0x30],dl
  4085ac:	xchg   esi,eax
  4085ad:	aaa    
  4085ae:	xchg   ecx,eax
  4085af:	sbb    esp,0x55f6b949
  4085b5:	add    cl,BYTE PTR [esi]
  4085b7:	add    al,0xe
  4085b9:	adc    cl,BYTE PTR [ecx+esi*8+0x6]
  4085bd:	jo     0x408560
  4085bf:	sahf   
  4085c0:	dec    ebx
  4085c2:	add    DWORD PTR [edi],edi
  4085c4:	jl     0x408559
  4085c6:	jl     0x40854a
  4085c8:	sbb    eax,0x20ff14dc
  4085cd:	cmp    DWORD PTR [ebx],ebp
  4085cf:	inc    esi
  4085d0:	add    ah,BYTE PTR [esi-0x37c44fed]
  4085d6:	retf   
  4085d7:	mov    cl,0xad
  4085d9:	jge    0x4085e2
  4085db:	inc    ecx
  4085dc:	mov    eax,ds:0x1947f4a2
  4085e1:	xchg   ebx,eax
  4085e2:	cld    
  4085e3:	mov    bl,0x92
  4085e5:	adc    eax,0xd99b5cb4
  4085ea:	push   0x30b8cb1c
  4085ef:	xchg   edi,eax
  4085f0:	aaa    
  4085f1:	inc    ebp
  4085f2:	in     al,0xb5
  4085f4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4085f5:	iret   
  4085f6:	sbb    cl,cl
  4085f8:	ss imul ebx,edx,0x52c0240a
  4085ff:	test   al,0x98
  408601:	jl     0x408636
  408603:	push   cs
  408604:	mov    ds:0xf04f1605,eax
  408609:	pcmpgtb mm4,QWORD PTR [ebp+0x68]
  40860d:	out    dx,eax
  40860e:	push   0xfd843522
  408613:	rcl    DWORD PTR [ecx],1
  408615:	enter  0xfaa1,0xcf
  408619:	out    0xac,al
  40861b:	push   ebp
  40861c:	call   0xbb3bb46d
  408621:	int3   
  408622:	mov    cl,0xd2
  408624:	push   0x32757335
  408629:	mov    dl,0x28
  40862b:	fldcw  WORD PTR [edx]
  40862d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40862e:	push   0xb5676f91
  408633:	outs   dx,DWORD PTR ds:[esi]
  408634:	btr    DWORD PTR [edi-0x24],esi
  408638:	dec    esi
  408639:	sar    DWORD PTR [ecx-0x5d],0x29
  40863d:	xchg   ch,ah
  40863f:	jno    0x40865a
  408641:	inc    ecx
  408642:	loopne 0x40862c
  408644:	push   es
  408645:	or     DWORD PTR [ebp+ecx*2+0x7cfd9055],edx
  40864c:	jp     0x408643
  40864e:	mov    BYTE PTR [eax],al
  408650:	mov    edx,0xe4272897
  408655:	popa   
  408656:	push   cs
  408657:	fidiv  WORD PTR [esi+0x73]
  40865a:	and    al,0x62
  40865c:	fldl2e 
  40865e:	and    edx,DWORD PTR [eax+edx*2]
  408661:	mov    dl,0xb8
  408663:	dec    edi
  408664:	es pop ecx
  408666:	or     eax,0xfc458b0c
  40866b:	mov    DWORD PTR ds:0x423670,0x7cae
  408675:	cmp    eax,edx
  408677:	mov    DWORD PTR ds:0x4214dc,0x32e6
  408681:	jb     0x408220
  408687:	mov    DWORD PTR ds:0x4236b0,ebx
  40868d:	pop    esi
  40868e:	mov    DWORD PTR ds:0x423704,0x2969
  408698:	jmp    0x408f01
  40869d:	mov    eax,DWORD PTR [ebp-0x4]
  4086a0:	mov    DWORD PTR ds:0x423684,0x222c
  4086aa:	and    eax,0xff
  4086af:	cmp    edx,eax
  4086b1:	mov    DWORD PTR ds:0x4214dc,0x2da2
  4086bb:	jbe    0x408ee0
  4086c1:	mov    ecx,DWORD PTR ds:0x423748
  4086c7:	mov    eax,ds:0x423720
  4086cc:	sub    eax,ecx
  4086ce:	imul   ecx,DWORD PTR [ecx+eax*1]
  4086d2:	mov    eax,DWORD PTR [ebp-0x4]
  4086d5:	mov    DWORD PTR ds:0x4236f0,0x1b
  4086df:	cmp    DWORD PTR ds:0x4236f0,0x0
  4086e6:	je     0x40871e
  4086ec:	cmp    DWORD PTR ds:0x4236f0,0x23
  4086f3:	jne    0x40870c
  4086f9:	push   0x1b91
  4086fe:	push   0x4236c0
  408703:	push   DWORD PTR [ebp-0x1c]
  408706:	call   DWORD PTR ds:0x41f3e8
  40870c:	mov    ecx,DWORD PTR ds:0x4236f0
  408712:	dec    ecx
  408713:	mov    DWORD PTR ds:0x4236f0,ecx
  408719:	jmp    0x4086df
  40871e:	mov    ecx,edx
  408720:	jmp    0x408aed
  408725:	xchg   esp,eax
  408726:	add    eax,0x8f938882
  40872b:	sahf   
  40872c:	sbb    eax,0x756681b
  408731:	and    cl,al
  408733:	and    al,0x61
  408735:	mov    al,0x87
  408737:	add    BYTE PTR [eax],al
  408739:	mov    al,0x3
  40873b:	add    BYTE PTR [eax],al
  40873d:	sbb    al,BYTE PTR [ecx-0x22085a4]
  408743:	loope  0x408790
  408745:	das    
  408746:	fsubr  QWORD PTR [edx+0x67f69c68]
  40874c:	outs   dx,DWORD PTR ds:[esi]
  40874d:	pop    ebx
  40874e:	pop    edi
  40874f:	std    
  408750:	mov    dl,0xc4
  408752:	sbb    BYTE PTR [edi+0x1e],dh
  408755:	hlt    
  408756:	mov    eax,ds:0xb060c635
  40875b:	adc    bh,0xf8
  40875e:	mov    WORD PTR [ecx-0x59],gs
  408761:	mov    ah,0xee
  408763:	jno    0x4086ff
  408765:	test   ebx,edx
  408767:	popa   
  408768:	outs   dx,BYTE PTR ds:[esi]
  408769:	pusha  
  40876a:	sahf   
  40876b:	dec    edi
  40876c:	es pop edi
  40876e:	add    esp,edi
  408770:	mov    ah,BYTE PTR [edi-0x5ff8041f]
  408776:	push   cs
  408777:	loope  0x4087cf
  408779:	dec    edx
  40877a:	and    esi,DWORD PTR [esi+0x9]
  40877d:	lea    ebp,[edx-0x15]
  408780:	arpl   WORD PTR [ebx+eax*2-0x33],dx
  408784:	xchg   DWORD PTR [esi+0x253dbe6c],edi
  40878a:	add    eax,0xa0bcac57
  40878f:	not    BYTE PTR [ecx+0x1b80f133]
  408795:	arpl   WORD PTR [edi+0x1c],ax
  408798:	cmp    BYTE PTR [edx+0xc7eaa19],al
  40879e:	and    DWORD PTR [eax-0x3f],edi
  4087a1:	addr16 dec edx
  4087a3:	dec    ebx
  4087a4:	ret    
  4087a5:	jmp    edx
  4087a7:	rcr    edx,cl
  4087a9:	mul    eax
  4087ab:	adc    ebp,DWORD PTR [edx]
  4087ad:	jns    0x408762
  4087af:	mov    dl,0xb3
  4087b1:	aaa    
  4087b2:	jmp    0x408807
  4087b4:	xlat   BYTE PTR ds:[ebx]
  4087b5:	jle    0x408750
  4087b7:	jae    0x40881f
  4087b9:	rcr    DWORD PTR [edi-0x48],cl
  4087bc:	or     eax,0x4013e5f3
  4087c1:	scas   eax,DWORD PTR es:[edi]
  4087c2:	cld    
  4087c3:	dec    edx
  4087c4:	mov    edx,0x6a7bceba
  4087c9:	dec    ebp
  4087ca:	hlt    
  4087cb:	adc    BYTE PTR [edi-0x67c19ce0],al
  4087d1:	sbb    eax,0x7f64ba18
  4087d6:	outs   dx,DWORD PTR ds:[esi]
  4087d7:	lea    esp,[edi-0x5e]
  4087da:	fisubr WORD PTR [edx]
  4087dc:	inc    edx
  4087dd:	dec    ebp
  4087de:	popa   
  4087df:	jp     0x408778
  4087e1:	(bad)  
  4087e2:	call   0x1969:0x50072a81
  4087e9:	mov    BYTE PTR [ebx-0x4b],dh
  4087ec:	mov    ebx,0xd6ff42a2
  4087f1:	fs call 0xfa3:0x34e863c6
  4087f9:	sbb    eax,0xff735db1
  4087fe:	xchg   ebp,eax
  4087ff:	out    dx,eax
  408800:	(bad)  
  408801:	std    
  408802:	adc    BYTE PTR [ecx-0x6d965c64],cl
  408808:	mov    ah,0xde
  40880a:	(bad)  
  40880b:	mov    ecx,0x7a7ea10b
  408810:	cs sbb al,0xa6
  408813:	or     eax,0xe86ca7ad
  408818:	int3   
  408819:	hlt    
  40881a:	dec    edi
  40881b:	sub    eax,DWORD PTR [esi]
  40881d:	mov    esp,0x81ff06f3
  408822:	push   ebx
  408823:	adc    BYTE PTR [eax-0x4191280b],cl
  408829:	stc    
  40882a:	(bad)
  40882e:	adc    bh,bl
  408830:	pusha  
  408831:	cmp    eax,DWORD PTR [ecx-0x6054a615]
  408837:	call   0x669b3fc
  40883c:	(bad)  
  40883d:	repz xchg ebx,eax
  40883f:	xchg   edx,eax
  408840:	sub    dh,BYTE PTR [edi]
  408842:	mov    cl,BYTE PTR [eax+edx*2-0x22e7e00]
  408849:	dec    esi
  40884a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40884b:	mov    eax,0x894030c3
  408850:	add    esi,DWORD PTR [esi]
  408852:	push   edx
  408853:	xor    ebp,DWORD PTR [edx-0x3e89fe39]
  408859:	pop    eax
  40885a:	sub    edx,edx
  40885c:	push   eax
  40885d:	fnstcw WORD PTR [ebx+0x58]
  408860:	jmp    0x17a79ec4
  408865:	int3   
  408866:	call   0x305c9355
  40886b:	dec    esp
  40886c:	add    al,0xf7
  40886e:	xchg   ebp,eax
  40886f:	and    ecx,DWORD PTR [ebx-0xa6cbe44]
  408875:	sub    eax,0x909ce596
  40887a:	out    dx,al
  40887b:	popf   
  40887c:	jno    0x4088d5
  40887e:	or     al,0xa3
  408880:	or     BYTE PTR [ebp-0x1b],dl
  408883:	pop    eax
  408884:	daa    
  408885:	pop    ebp
  408886:	out    dx,eax
  408887:	cmp    DWORD PTR [ebx+0x70],esi
  40888a:	pop    ax
  40888c:	mov    ds:0xa8dabb48,eax
  408891:	and    al,BYTE PTR [edx]
  408893:	mov    esp,0x1b06b1b3
  408898:	add    al,0x8b
  40889a:	xor    BYTE PTR [edx-0x2a],ah
  40889d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40889e:	xor    DWORD PTR [edx],0x67
  4088a1:	xchg   ebp,eax
  4088a2:	inc    eax
  4088a3:	lock pop eax
  4088a5:	xchg   BYTE PTR [esi-0x24],ah
  4088a8:	adc    ecx,DWORD PTR [edi]
  4088aa:	call   0xabdc0715
  4088af:	jmp    0x4088d2
  4088b1:	es pop eax
  4088b3:	jl     0x4088df
  4088b5:	mov    ch,0xcf
  4088b7:	imul   edx,DWORD PTR [esi],0xd8ee4df2
  4088bd:	fimul  WORD PTR [edx+0x378d34d]
  4088c3:	test   eax,0xbf1d13ce
  4088c8:	aas    
  4088c9:	sub    edi,esp
  4088cb:	or     cl,BYTE PTR fs:[ebx-0x7ab4702b]
  4088d2:	mov    ebx,0xc4b8f9fa
  4088d7:	sbb    BYTE PTR [edi+ebp*8],0xa6
  4088db:	aam    0x24
  4088dd:	inc    ecx
  4088de:	jg     0x40892c
  4088e0:	pop    eax
  4088e1:	mov    DWORD PTR [ebx+0x2765af22],ebx
  4088e7:	fsqrt  
  4088e9:	xlat   BYTE PTR ds:[ebx]
  4088ea:	mov    edi,0x6abc9a8b
  4088ef:	dec    ebx
  4088f0:	aad    0xb2
  4088f2:	push   ss
  4088f3:	aam    0xa1
  4088f5:	jb     0x4088fd
  4088f7:	and    eax,0x42c00c60
  4088fc:	xchg   BYTE PTR [ebx-0x66],dl
  4088ff:	xchg   ecx,eax
  408900:	mov    ds:0x34f67eb1,al
  408905:	ja     0x4088a9
  408907:	inc    esp
  408908:	push   ss
  408909:	xchg   ebx,eax
  40890a:	or     DWORD PTR [ecx-0x17052295],esp
  408910:	sahf   
  408911:	outs   dx,DWORD PTR ds:[esi]
  408912:	xchg   edx,eax
  408913:	sahf   
  408914:	jae    0x408947
  408916:	jne    0x408943
  408918:	sbb    DWORD PTR [edx],edx
  40891a:	aas    
  40891b:	sar    BYTE PTR [eax-0x399501db],0x82
  408922:	stc    
  408923:	mov    ch,0x80
  408925:	sbb    DWORD PTR ds:0x46acf83b,esp
  40892b:	sub    eax,0xb97b923e
  408930:	dec    ebx
  408931:	or     ecx,esi
  408933:	pop    esi
  408934:	mov    edx,0xe8476c55
  408939:	and    edi,DWORD PTR [esi]
  40893b:	int3   
  40893c:	inc    edx
  40893d:	cld    
  40893e:	pop    eax
  40893f:	sbb    al,0xbe
  408941:	xlat   BYTE PTR ds:[ebx]
  408942:	and    DWORD PTR [edi+0x69],eax
  408945:	mov    ebp,0x61e0c62b
  40894a:	sbb    eax,0x6280be97
  40894f:	push   ss
  408950:	pusha  
  408951:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408952:	ret    0xef2b
  408955:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408956:	or     BYTE PTR [ebp+ecx*1+0x5d],cl
  40895a:	xchg   BYTE PTR [eax-0x7d051d39],ch
  408960:	stos   BYTE PTR es:[edi],al
  408961:	cmc    
  408962:	js     0x4089c9
  408964:	std    
  408965:	ss mov esi,0x3e9884bd
  40896b:	adc    ebx,edx
  40896d:	ja     0x4089cd
  40896f:	mov    cl,0x32
  408971:	push   esi
  408972:	or     ecx,edi
  408974:	xchg   DWORD PTR [eax],ebp
  408976:	xchg   ebx,eax
  408977:	sar    DWORD PTR [ebp+0x1f],cl
  40897a:	int    0x56
  40897c:	adc    BYTE PTR [ebp+0x36],bl
  40897f:	les    esp,FWORD PTR [ebx-0x27]
  408982:	xor    eax,0x6aae84f3
  408987:	rol    dh,cl
  408989:	cmp    ebp,eax
  40898b:	pop    ss
  40898c:	add    BYTE PTR [esp+eax*8],cl
  40898f:	and    al,0x35
  408991:	jne    0x408992
  408993:	aad    0xf6
  408995:	add    al,0xfa
  408997:	hlt    
  408998:	inc    ebp
  408999:	push   0x2ba78fc
  40899e:	dec    ebx
  40899f:	in     al,0x99
  4089a1:	mov    BYTE PTR [edx],dh
  4089a3:	xchg   ebp,eax
  4089a4:	pop    ss
  4089a5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4089a6:	xchg   esp,eax
  4089a7:	add    ebx,DWORD PTR [edi]
  4089a9:	ficomp WORD PTR [esi]
  4089ab:	loopne 0x4089ba
  4089ad:	in     eax,dx
  4089ae:	xor    edi,DWORD PTR [edx-0x242d9e6c]
  4089b4:	in     al,0x7f
  4089b6:	retf   0x976b
  4089b9:	push   esi
  4089ba:	push   eax
  4089bb:	dec    ebx
  4089bc:	enter  0x7f9b,0x56
  4089c0:	jp     0x408975
  4089c2:	mov    dl,0x44
  4089c4:	push   ebp
  4089c5:	inc    esi
  4089c6:	mov    esp,0xf61ebde4
  4089cb:	loopne 0x4089b3
  4089cd:	mov    esp,0x23236f36
  4089d2:	das    
  4089d3:	jo     0x408a50
  4089d5:	outs   dx,BYTE PTR ds:[esi]
  4089d6:	sub    BYTE PTR [eax-0x6c3b9b9a],dl
  4089dc:	or     ah,cl
  4089de:	dec    edi
  4089df:	add    eax,0x3e8bfb93
  4089e4:	imul   edi,DWORD PTR [edi],0x5c174cb8
  4089ea:	arpl   WORD PTR [eax-0xf461c7d],dx
  4089f0:	or     BYTE PTR [eax+0x3d7bf28f],dh
  4089f6:	dec    ebx
  4089f7:	xchg   edi,eax
  4089f8:	push   esp
  4089f9:	pop    edi
  4089fa:	dec    ebp
  4089fb:	add    al,0xa9
  4089fd:	int3   
  4089fe:	mov    ch,0xcf
  408a00:	inc    edi
  408a01:	rcr    DWORD PTR [ecx+ebx*2-0x7b],0x81
  408a06:	sub    al,0xbe
  408a08:	push   edx
  408a09:	aad    0x62
  408a0b:	cmovno edx,DWORD PTR ds:0x4bdb9192
  408a12:	stos   BYTE PTR es:[edi],al
  408a13:	ds (bad) 
  408a15:	not    DWORD PTR [edi]
  408a17:	pop    ebx
  408a18:	lahf   
  408a19:	mov    esp,0xa8759f28
  408a1e:	mov    al,0xfc
  408a20:	test   DWORD PTR [ecx+0x51],eax
  408a23:	mov    ebx,ebx
  408a25:	jmp    0x95a2:0xb85ad5f5
  408a2c:	test   al,0xb
  408a2e:	xchg   esp,eax
  408a2f:	mov    BYTE PTR [esi+0x48],ah
  408a32:	push   cs
  408a33:	loope  0x4089fe
  408a35:	xchg   esp,eax
  408a36:	lods   al,BYTE PTR ds:[esi]
  408a37:	sti    
  408a38:	int    0x4c
  408a3a:	jo     0x408a04
  408a3c:	add    DWORD PTR es:0xdda0acf6,edi
  408a43:	popf   
  408a44:	fs inc esp
  408a46:	pop    ebp
  408a47:	and    dl,0xf5
  408a4a:	and    al,0x7d
  408a4c:	in     eax,0x28
  408a4e:	adc    DWORD PTR [edx+0x47],eax
  408a51:	pushf  
  408a52:	sbb    eax,0xb9c8d35b
  408a57:	add    ch,BYTE PTR [edx-0x9]
  408a5a:	sub    DWORD PTR [ebx-0x6a],edi
  408a5d:	in     al,dx
  408a5e:	test   al,0x10
  408a60:	jns    0x408a32
  408a62:	lods   al,BYTE PTR ds:[esi]
  408a63:	add    esi,ebp
  408a65:	loope  0x408a83
  408a67:	push   es
  408a68:	pushf  
  408a69:	ds iret 
  408a6b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408a6c:	mov    ecx,esi
  408a6e:	jae    0x408a81
  408a70:	xor    BYTE PTR [edi+0x13],bh
  408a73:	clc    
  408a74:	sub    eax,0x3eab253e
  408a79:	aaa    
  408a7a:	test   eax,0x950479f0
  408a7f:	dec    esp
  408a80:	adc    ah,BYTE PTR ds:0x866157cf
  408a86:	or     edx,DWORD PTR [eax+0x7dd5fbce]
  408a8c:	jecxz  0x408a66
  408a8e:	sbb    eax,DWORD PTR [ebx+0x366c2e82]
  408a94:	jns    0x408b04
  408a96:	enter  0x97ee,0xee
  408a9a:	psubusb mm1,QWORD PTR [ecx-0x30714e53]
  408aa1:	fbstp  TBYTE PTR [edi+0x48dc076a]
  408aa7:	mov    edi,0x34465d68
  408aac:	mov    bl,BYTE PTR [eax+0x4f4c60e3]
  408ab2:	sbb    BYTE PTR [ecx-0x12],ch
  408ab5:	mov    ds:0xd9a465e5,eax
  408aba:	or     al,0xc
  408abc:	out    dx,eax
  408abd:	cmp    DWORD PTR [eax+0x6f],ebx
  408ac0:	out    0x54,eax
  408ac2:	cs nop
  408ac4:	push   ecx
  408ac5:	push   edi
  408ac6:	pop    eax
  408ac7:	outs   dx,BYTE PTR ds:[esi]
  408ac8:	imul   edi,DWORD PTR [edx-0x566523c1],0x5b332508
  408ad2:	mov    ah,0xcb
  408ad4:	je     0x408a70
  408ad6:	das    
  408ad7:	stos   DWORD PTR es:[edi],eax
  408ad8:	cmp    DWORD PTR [edx],edx
  408ada:	ds cli 
  408adc:	add    BYTE PTR [edx-0x5c99679e],cl
  408ae2:	je     0x408b2b
  408ae4:	adc    DWORD PTR [ebx+0x749acd9b],ebx
  408aea:	aad    0x1c
  408aec:	lods   al,BYTE PTR ds:[esi]
  408aed:	shr    ecx,0x8
  408af0:	test   ecx,ecx
  408af2:	je     0x408ed8
  408af8:	sub    eax,ecx
  408afa:	cmp    DWORD PTR [ebp-0x4],eax
  408afd:	jbe    0x408efe
  408b03:	mov    DWORD PTR [ebp-0x4],eax
  408b06:	jmp    0x408f01
  408b0b:	jmp    0x408ed8
  408b10:	leave  
  408b11:	or     BYTE PTR [ecx+0x72],ch
  408b14:	jmp    0x8bfc668c
  408b19:	hlt    
  408b1a:	repz pop ecx
  408b1c:	xor    BYTE PTR [ecx-0x749fb388],dl
  408b22:	add    BYTE PTR [eax],al
  408b24:	mov    al,0x3
  408b26:	add    BYTE PTR [eax],al
  408b28:	das    
  408b29:	fist   WORD PTR ds:0x7838cfaf
  408b2f:	jp     0x408ba7
  408b31:	div    BYTE PTR [edx]
  408b33:	outs   dx,DWORD PTR ds:[esi]
  408b34:	sbb    bl,BYTE PTR ds:0xabd684d1
  408b3a:	shl    DWORD PTR [edi+0x470bf09f],1
  408b40:	in     al,dx
  408b41:	jp     0x408ba5
  408b43:	pusha  
  408b44:	xor    DWORD PTR [edx+edx*4-0x4],0xffffffc5
  408b49:	out    dx,al
  408b4a:	ficomp DWORD PTR [ebx-0x60a48837]
  408b50:	fcomp  QWORD PTR [ecx]
  408b52:	pop    esp
  408b53:	mov    dl,0x59
  408b55:	pop    esp
  408b56:	mov    ecx,0x9deb372
  408b5b:	jns    0x408b7c
  408b5d:	iret   
  408b5e:	sbb    al,0x5d
  408b60:	mov    ?,WORD PTR [edx+edx*4+0x76]
  408b64:	sub    eax,0xd019893c
  408b69:	inc    esp
  408b6a:	(bad)  
  408b6b:	fnstcw WORD PTR [edi+ebp*1-0x4939448b]
  408b72:	loope  0x408bbf
  408b74:	push   es
  408b75:	inc    eax
  408b76:	xchg   ecx,eax
  408b77:	loope  0x408b5f
  408b79:	adc    ebp,DWORD PTR [esp+edi*2-0x59cde1b8]
  408b80:	xchg   esi,eax
  408b81:	dec    esp
  408b82:	aam    0x60
  408b84:	xchg   ecx,eax
  408b85:	or     esi,ebp
  408b87:	jmp    0x408b93
  408b89:	inc    edx
  408b8a:	bound  esp,QWORD PTR ds:0x91df40a6
  408b90:	fs pushf 
  408b92:	into   
  408b93:	cs mov edi,0xf1428197
  408b99:	jle    0x408bcb
  408b9b:	mov    cl,0x8d
  408b9d:	es arpl cx,ax
  408ba0:	jl     0x408b7f
  408ba2:	adc    eax,DWORD PTR [esi+0x78fb9677]
  408ba8:	int    0x3c
  408baa:	or     DWORD PTR [edx],esp
  408bac:	jbe    0x408be6
  408bae:	sbb    dh,bh
  408bb0:	push   eax
  408bb1:	mov    cs,WORD PTR ss:[ecx]
  408bb4:	outs   dx,DWORD PTR ds:[esi]
  408bb5:	mov    edi,0xbfda2ce8
  408bba:	sub    dl,al
  408bbc:	pop    edx
  408bbd:	(bad)  
  408bbe:	imul   ecx,DWORD PTR [edi+edi*1+0x1d],0x16
  408bc3:	inc    BYTE PTR [ecx-0x3e]
  408bc6:	ss inc ebp
  408bc8:	xor    bl,BYTE PTR [edx+0x66]
  408bcb:	mov    ah,0x30
  408bcd:	outs   dx,DWORD PTR ds:[esi]
  408bce:	xchg   ebp,eax
  408bcf:	pop    ds
  408bd0:	fbstp  TBYTE PTR [eax+0x2b349d0e]
  408bd6:	or     dh,BYTE PTR [esi]
  408bd8:	push   ebx
  408bd9:	push   ecx
  408bda:	cwde   
  408bdb:	mov    BYTE PTR ds:0xe6388bb7,al
  408be1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408be2:	dec    BYTE PTR [edx]
  408be4:	add    cl,dl
  408be6:	je     0x408c41
  408be8:	retf   0x2faa
  408beb:	call   0x7fced0d1
  408bf0:	xor    DWORD PTR [ebp-0x5f],0x77ff784a
  408bf7:	pusha  
  408bf8:	test   BYTE PTR [esp+eiz*4],al
  408bfb:	mov    eax,ds:0x9b7fd987
  408c00:	cmc    
  408c01:	add    ch,al
  408c03:	ret    
  408c04:	imul   ebx,DWORD PTR ds:0x95c2197a,0x15
  408c0b:	gs pop eax
  408c0d:	xor    al,0x72
  408c0f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408c10:	retf   
  408c11:	sbb    BYTE PTR [ebx],ch
  408c13:	dec    ebp
  408c14:	sub    DWORD PTR [eax+edx*1],0xc
  408c18:	imul   ebx,DWORD PTR [eax+0x4c2e5b0],0x13f9098b
  408c22:	push   0x13f850b2
  408c27:	push   eax
  408c28:	add    DWORD PTR [ebp+0x1040f780],esp
  408c2e:	or     al,0xf
  408c30:	mov    ebx,0xbade23b6
  408c35:	mov    dl,0x5a
  408c37:	aam    0xca
  408c39:	mov    bl,0xb8
  408c3b:	xchg   esi,eax
  408c3c:	dec    ecx
  408c3d:	jae    0x408c26
  408c3f:	push   es
  408c40:	inc    eax
  408c41:	test   eax,0x68374d3d
  408c46:	pushf  
  408c47:	push   es
  408c48:	xchg   edx,eax
  408c49:	outs   dx,DWORD PTR ds:[esi]
  408c4a:	pop    ebx
  408c4b:	push   ebp
  408c4c:	fstp   QWORD PTR [eax]
  408c4e:	and    BYTE PTR [eax],dh
  408c50:	aas    
  408c51:	adc    DWORD PTR [ecx-0x2bb61e8d],0xe390b5c2
  408c5b:	out    0x4f,al
  408c5d:	lock jp 0x408c9c
  408c60:	(bad)  
  408c61:	mov    ebx,0xbfc6010c
  408c66:	outs   dx,DWORD PTR ds:[esi]
  408c67:	stc    
  408c68:	inc    esi
  408c69:	push   ebp
  408c6a:	retf   0x5968
  408c6d:	mov    bl,0xbb
  408c6f:	fadd   st,st(1)
  408c71:	mov    al,ds:0xd0452107
  408c76:	ins    DWORD PTR es:[edi],dx
  408c77:	sbb    cl,BYTE PTR [eax+0x48]
  408c7a:	sahf   
  408c7b:	je     0x408c0c
  408c7d:	aas    
  408c7e:	out    dx,al
  408c7f:	or     eax,0xca5fd0b8
  408c84:	xchg   esi,eax
  408c85:	stos   BYTE PTR es:[edi],al
  408c86:	out    dx,eax
  408c87:	or     ebx,DWORD PTR [edi-0x52]
  408c8a:	mov    ecx,0x47749e34
  408c8f:	push   esp
  408c90:	(bad)  [si+0xf]
  408c94:	jmp    0x7c05a983
  408c99:	lds    ecx,FWORD PTR [ebp+ebp*1-0x3154d9f0]
  408ca0:	mov    esi,0x46cda5a7
  408ca5:	push   esi
  408ca6:	hlt    
  408ca7:	test   eax,0x24d76ea9
  408cac:	leave  
  408cad:	or     esi,DWORD PTR [ecx+0xbbdc210]
  408cb3:	or     dl,BYTE PTR [edi-0x53]
  408cb6:	inc    esi
  408cb7:	pop    ds
  408cb8:	adc    dh,BYTE PTR [ecx]
  408cba:	mov    ah,0x63
  408cbc:	or     eax,0x2f30e7a0
  408cc1:	into   
  408cc2:	dec    edx
  408cc3:	dec    ebp
  408cc4:	repz mov al,0x2b
  408cc7:	mov    ebp,DWORD PTR [ebp-0x1354a71d]
  408ccd:	dec    esp
  408cce:	es adc al,0x4e
  408cd1:	in     al,0xc
  408cd3:	pop    edx
  408cd4:	outs   dx,BYTE PTR ds:[esi]
  408cd5:	mov    esp,DWORD PTR [ecx-0x7b2398e6]
  408cdb:	rcl    ah,1
  408cdd:	fcomp  QWORD PTR [ebp-0x1b]
  408ce0:	push   ebx
  408ce1:	cmc    
  408ce2:	popf   
  408ce3:	inc    eax
  408ce4:	ja     0x408cc3
  408ce6:	jo     0x408c7c
  408ce8:	push   ax
  408cea:	and    al,0x7d
  408cec:	jne    0x408cc3
  408cee:	add    eax,0xff023dff
  408cf3:	cmp    ah,BYTE PTR [esi+0x10]
  408cf6:	int    0xc3
  408cf8:	(bad)  
  408cf9:	out    dx,al
  408cfa:	jmp    0x4139:0xccdccbd9
  408d01:	loope  0x408d51
  408d03:	ficomp DWORD PTR [esi-0x59]
  408d06:	push   edi
  408d07:	fstp   DWORD PTR [eax]
  408d09:	(bad)  
  408d0a:	test   ah,0xa7
  408d0d:	repnz mov edi,0xafe51627
  408d13:	inc    ebx
  408d14:	int3   
  408d15:	retf   0x4eab
  408d18:	rep outs dx,DWORD PTR ds:[esi]
  408d1a:	nop
  408d1b:	ret    0x9853
  408d1e:	data16 (bad) 
  408d20:	enter  0xae66,0x80
  408d24:	aaa    
  408d25:	pop    ebp
  408d26:	xchg   DWORD PTR [ebp-0x5],esi
  408d29:	xchg   DWORD PTR [edi+0x36bfd7e],ebp
  408d2f:	pop    es
  408d30:	jecxz  0x408d3c
  408d32:	loope  0x408cf7
  408d34:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408d35:	cmp    bh,cl
  408d37:	test   DWORD PTR [ebx+0x4c],eax
  408d3a:	jno    0x408d7d
  408d3c:	loop   0x408d6e
  408d3e:	jmp    0x408d3f
  408d40:	test   al,0x80
  408d42:	and    al,0x5c
  408d44:	sbb    edi,ebp
  408d46:	cli    
  408d47:	xor    DWORD PTR [edx],0xb05fceb9
  408d4d:	inc    ebx
  408d4e:	(bad)  [edi+0x474eef2f]
  408d54:	inc    ecx
  408d55:	jge    0xa34a104a
  408d5b:	jb     0x408dbc
  408d5d:	or     ecx,DWORD PTR [eax]
  408d5f:	cmp    BYTE PTR [ebp-0xa],dh
  408d62:	scas   eax,DWORD PTR es:[edi]
  408d63:	xchg   BYTE PTR [ebx],bl
  408d65:	or     BYTE PTR [edi+eiz*1+0x58],ch
  408d69:	fdivr  st,st(2)
  408d6b:	ins    BYTE PTR es:[edi],dx
  408d6c:	shl    DWORD PTR [ebx],0x5f
  408d6f:	sti    
  408d70:	imul   ecx,DWORD PTR [ebx+0x61bdaaf3],0xae75b44b
  408d7a:	mov    ds:0x16518f72,eax
  408d7f:	ja     0x408d18
  408d81:	test   al,0x1c
  408d83:	popa   
  408d84:	popa   
  408d85:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408d86:	adc    esp,ebx
  408d88:	add    al,0xe6
  408d8a:	xor    ecx,DWORD PTR [ebx-0x3906ec96]
  408d90:	push   0x5dd803d
  408d95:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408d96:	jo     0x408d69
  408d98:	into   
  408d99:	retf   
  408d9a:	cli    
  408d9b:	pop    ebp
  408d9c:	mov    edx,0x9ee0056f
  408da1:	mov    cl,0x3a
  408da3:	fs push 0xffffff96
  408da6:	std    
  408da7:	push   esi
  408da8:	sahf   
  408da9:	push   ss
  408daa:	mov    esp,0x3b838478
  408daf:	pushf  
  408db0:	popf   
  408db1:	adc    esp,edi
  408db3:	mov    dh,0x51
  408db5:	mov    bl,0x3f
  408db7:	ja     0x408dab
  408db9:	std    
  408dba:	mov    cl,0xb5
  408dbc:	imul   edx,DWORD PTR [esi+0x5d],0x696a5a6
  408dc3:	xchg   esp,eax
  408dc4:	mov    ds:0x3ea8b276,eax
  408dc9:	inc    esp
  408dca:	cmp    bh,BYTE PTR [ebx-0x1b269c7]
  408dd0:	pop    edi
  408dd1:	adc    esp,esi
  408dd3:	cld    
  408dd4:	aad    0xfb
  408dd6:	sbb    eax,0x49d7f184
  408ddb:	addr16 mov cl,0xb1
  408dde:	sbb    ah,BYTE PTR [edx]
  408de0:	popa   
  408de1:	add    BYTE PTR [edi-0x56debbb4],0x5
  408de8:	cmp    DWORD PTR [edx+ecx*8],0x6829e557
  408def:	mov    cl,0x5a
  408df1:	adc    BYTE PTR [edi-0x1ceeb20],dl
  408df7:	cmc    
  408df8:	push   edx
  408df9:	and    DWORD PTR [eax+0x82c2aa9],ebx
  408dff:	(bad)  
  408e00:	into   
  408e01:	sub    eax,0x9e173990
  408e06:	mov    edi,0xb16ded8d
  408e0b:	jl     0x408e12
  408e0d:	fdiv   QWORD PTR [edi+0x29b16670]
  408e13:	xchg   ecx,eax
  408e14:	dec    eax
  408e15:	retf   0xb3a2
  408e18:	leave  
  408e19:	jl     0x408d9e
  408e1b:	mov    al,ds:0x803137db
  408e20:	mov    ebx,0x5f987744
  408e25:	push   ebx
  408e26:	sti    
  408e27:	cmp    al,0x2f
  408e29:	xlat   BYTE PTR ds:[ebx]
  408e2a:	adc    ecx,DWORD PTR [edx]
  408e2c:	call   0x9c83e0a5
  408e31:	test   al,0x51
  408e33:	bound  ebx,QWORD PTR [edx]
  408e35:	pop    es
  408e36:	jns    0x408e83
  408e38:	jae    0x408e8e
  408e3a:	mov    ch,0xd7
  408e3c:	nop
  408e3d:	jne    0x408e87
  408e3f:	push   0xc92f208
  408e44:	mov    eax,ds:0xca68042e
  408e49:	sbb    DWORD PTR [ebx-0x2914b364],edx
  408e4f:	repnz push esp
  408e51:	jle    0x408dda
  408e53:	(bad)  
  408e55:	push   0xede2730
  408e5a:	out    0x56,eax
  408e5c:	jo     0x408e73
  408e5e:	jle    0x408e29
  408e60:	ret    
  408e61:	pop    eax
  408e62:	push   es
  408e63:	je     0x408e5b
  408e65:	jp     0x408e64
  408e67:	cmp    DWORD PTR [ebx-0x3f],esi
  408e6a:	lods   al,BYTE PTR es:[esi]
  408e6c:	sti    
  408e6d:	push   esp
  408e6e:	(bad)  
  408e6f:	xor    eax,0x451c0ad0
  408e74:	fst    QWORD PTR [eax-0x35d4b1aa]
  408e7a:	or     al,0x55
  408e7c:	add    eax,0x794a95f7
  408e81:	fs test eax,0x3310671c
  408e87:	icebp  
  408e88:	and    DWORD PTR [ecx-0x5b],edi
  408e8b:	xor    al,0xfc
  408e8d:	fmul   QWORD PTR [ebx-0x7c]
  408e90:	xchg   esp,eax
  408e91:	div    DWORD PTR [bx-0x45a8]
  408e96:	push   edx
  408e97:	mov    ecx,edx
  408e99:	add    DWORD PTR [ebx],ebx
  408e9b:	neg    BYTE PTR [edi+0x7e4c170d]
  408ea1:	or     BYTE PTR [edx+0x49],0x1e
  408ea5:	xchg   edi,eax
  408ea6:	popf   
  408ea7:	je     0x408e43
  408ea9:	mov    eax,ds:0xbb2fa563
  408eae:	adc    esp,edi
  408eb0:	jle    0x408e3f
  408eb2:	vpsrlq ymm0,ymm3,XMMWORD PTR [ecx]
  408eb6:	xor    eax,0x12b4cfcb
  408ebb:	xchg   BYTE PTR [edx-0x36],al
  408ebe:	xor    ecx,DWORD PTR [ebx-0x67]
  408ec1:	mov    ecx,0x6977f614
  408ec6:	pcmpgtw mm3,QWORD PTR [ebp+eiz*1+0x2e]
  408ecb:	push   ebp
  408ecc:	repz pop ebx
  408ece:	dec    ebx
  408ecf:	xchg   edi,eax
  408ed0:	test   al,0xdc
  408ed2:	mov    ds:0xe9891754,al
  408ed7:	push   0xf
  408ed9:	mov    dh,0xca
  408edb:	jmp    0x408af8
  408ee0:	test   eax,eax
  408ee2:	je     0x408efe
  408ee8:	mov    ecx,DWORD PTR [ebp-0x4]
  408eeb:	sub    ecx,eax
  408eed:	cmp    DWORD PTR [ebp-0x4],ecx
  408ef0:	jbe    0x408efe
  408ef6:	mov    DWORD PTR [ebp-0x4],ecx
  408ef9:	jmp    0x408f01
  408efe:	dec    DWORD PTR [ebp-0x4]
  408f01:	mov    eax,DWORD PTR [ebp-0x4]
  408f04:	cmp    eax,edx
  408f06:	ja     0x40869d
  408f0c:	mov    DWORD PTR [ebp-0x4],edx
  408f0f:	mov    eax,DWORD PTR [ebp-0x4]
  408f12:	leave  
  408f13:	ret    
  408f14:	dec    edx
  408f15:	jns    0x408ed4
  408f17:	out    0xbf,al
  408f19:	out    0x5b,al
  408f1b:	std    
  408f1c:	into   
  408f1d:	mov    esi,DWORD PTR [edx+0x182a0ebb]
  408f23:	pop    ss
  408f24:	or     DWORD PTR [eax],edx
  408f26:	add    BYTE PTR [eax],al
  408f28:	xor    eax,0x45000003
  408f2d:	add    BYTE PTR [ebx*2+0x503193e0],al
  408f34:	clc    
  408f35:	data16 sub cl,bh
  408f38:	dec    ecx
  408f39:	mov    ds:0xa4870401,al
  408f3e:	outs   dx,BYTE PTR ds:[esi]
  408f3f:	adc    ch,BYTE PTR ds:0x2dca56ea
  408f45:	bound  esp,QWORD PTR [ebx]
  408f47:	jg     0x408f86
  408f49:	inc    ebx
  408f4a:	fld    QWORD PTR [eax]
  408f4c:	stos   DWORD PTR es:[edi],eax
  408f4d:	call   0x2ab3:0x2405667a
  408f54:	fadd   st,st(7)
  408f56:	fcmovnu st,st(2)
  408f58:	(bad)  
  408f59:	je     0x408f32
  408f5b:	sar    DWORD PTR [ecx+0x4a],0x1d
  408f5f:	stos   DWORD PTR es:[edi],eax
  408f60:	test   DWORD PTR [edi+0x4cdc6bd2],ebx
  408f66:	mov    cl,0xc
  408f68:	js     0x408f0e
  408f6a:	popa   
  408f6b:	cmp    eax,0x404433e5
  408f70:	dec    eax
  408f71:	lea    ebx,[edi-0x2788e824]
  408f77:	adc    bl,BYTE PTR [ecx]
  408f79:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408f7a:	je     0x408f7b
  408f7c:	jmp    0x312e:0xe04bdcaf
  408f83:	leave  
  408f84:	out    dx,eax
  408f85:	int3   
  408f86:	dec    esp
  408f87:	jb     0x408f9c
  408f89:	sbb    al,0xb5
  408f8b:	loop   0x408f2c
  408f8d:	es popa 
  408f8f:	mov    ecx,DWORD PTR [edi]
  408f91:	xor    al,0xff
  408f93:	rol    BYTE PTR [ecx],1
  408f95:	icebp  
  408f96:	std    
  408f97:	into   
  408f98:	push   esi
  408f99:	in     eax,0xb3
  408f9b:	fcomp  QWORD PTR [ecx+esi*1-0x2289345b]
  408fa2:	scas   al,BYTE PTR es:[edi]
  408fa3:	test   al,0x23
  408fa5:	imul   edi,DWORD PTR [ebx+0x6b],0xa6b721af
  408fac:	mov    ecx,0x2d707f5d
  408fb1:	adc    eax,0x636d2838
  408fb6:	or     esp,eax
  408fb8:	sub    dh,bl
  408fba:	xchg   esp,eax
  408fbb:	inc    ecx
  408fbc:	test   BYTE PTR [eax+0x14],cl
  408fbf:	inc    esp
  408fc0:	ja     0x408f96
  408fc2:	xor    esi,ecx
  408fc4:	bound  esi,QWORD PTR [edx+eiz*4+0x3e8f9eaf]
  408fcb:	loop   0x409006
  408fcd:	xchg   edi,eax
  408fce:	pop    esp
  408fcf:	mov    ebp,DWORD PTR [ebx+0x2]
  408fd2:	cld    
  408fd3:	test   dh,bh
  408fd5:	dec    edi
  408fd6:	inc    esp
  408fd7:	push   ss
  408fd8:	retf   0x48d5
  408fdb:	mov    dh,0x6d
  408fdd:	push   esp
  408fdf:	mov    ah,0xb9
  408fe1:	mov    cs,WORD PTR [eax+0xddefb04]
  408fe7:	add    eax,0xc8bd0ea9
  408fec:	iret   
  408fed:	leave  
  408fee:	mov    ebp,0x57cfd5ee
  408ff3:	in     eax,dx
  408ff4:	mov    edi,DWORD PTR [ebp+0x5e48f8f8]
  408ffa:	test   edx,ebp
  408ffc:	sar    BYTE PTR [edx+0xb95955b],1
  409002:	push   esi
  409003:	call   0xe1d3c553
  409008:	scas   eax,DWORD PTR es:[edi]
  409009:	data16 sbb al,0xa4
  40900c:	lock add DWORD PTR [ebp+0x3ce44e15],0x1
  409014:	dec    esi
  409015:	dec    ebp
  409016:	popf   
  409017:	cmp    eax,0xfaf9e8f5
  40901c:	in     al,dx
  40901d:	dec    esp
  40901e:	or     DWORD PTR [ebx],esp
  409020:	dec    edx
  409021:	iret   
  409022:	push   es
  409023:	xor    eax,0xf960da2b
  409028:	into   
  409029:	fld    QWORD PTR [esi+0x24]
  40902c:	cmp    DWORD PTR [edx],eax
  40902e:	adc    al,0x73
  409030:	push   edx
  409031:	inc    ebx
  409032:	scas   eax,DWORD PTR es:[edi]
  409033:	mov    cl,0xbf
  409035:	out    dx,al
  409036:	xor    esp,esi
  409038:	in     eax,dx
  409039:	std    
  40903a:	push   ds
  40903b:	mov    ebx,0x75017121
  409040:	mov    eax,0xd9971bea
  409045:	cdq    
  409046:	push   ebp
  409047:	stc    
  409048:	xchg   ecx,eax
  409049:	outs   dx,BYTE PTR ds:[esi]
  40904a:	push   ds
  40904b:	cmp    eax,0xf86db41c
  409050:	push   ds
  409051:	xchg   edx,eax
  409052:	push   ecx
  409053:	fs push es
  409055:	mov    eax,0x1b40650b
  40905a:	daa    
  40905b:	cmp    al,0xf3
  40905d:	ror    BYTE PTR [ecx],cl
  40905f:	lods   al,BYTE PTR ds:[esi]
  409060:	xor    eax,0xc53780f
  409065:	mov    dl,0xed
  409067:	inc    edx
  409068:	and    al,0xb1
  40906a:	mov    al,0x78
  40906c:	call   0x2e1d41c3
  409071:	retf   0x4428
  409074:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409075:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409076:	mov    ebx,DWORD PTR [ebx+0x4ae4db4a]
  40907c:	mov    edx,DWORD PTR [ebp+0x46ba8312]
  409082:	fnstcw WORD PTR [ecx-0x53]
  409085:	arpl   di,bx
  409087:	ds jnp 0x40902c
  40908a:	sub    edx,DWORD PTR [ecx]
  40908c:	outs   dx,BYTE PTR ds:[esi]
  40908d:	int3   
  40908e:	adc    DWORD PTR [esp+edi*1],ebp
  409091:	in     eax,dx
  409092:	dec    ecx
  409093:	imul   edi,DWORD PTR [eax-0x612ce669],0x749bf418
  40909d:	out    0x9c,al
  40909f:	cmp    eax,0x3e1fab20
  4090a4:	adc    DWORD PTR [edx],esp
  4090a6:	ss in  al,dx
  4090a8:	les    ebp,FWORD PTR [ecx+0x41]
  4090ab:	das    
  4090ac:	call   0x9eaf:0x9654f125
  4090b3:	out    0x71,eax
  4090b5:	mov    esp,0xc70db94b
  4090ba:	jmp    0x6d17bc0a
  4090bf:	adc    esi,DWORD PTR [ebp-0x1d3c4ed8]
  4090c5:	inc    ebp
  4090c6:	stos   BYTE PTR es:[edi],al
  4090c7:	(bad)  
  4090c9:	and    bh,BYTE PTR [ecx+0x7b]
  4090cc:	pop    eax
  4090cd:	pop    eax
  4090ce:	sub    esi,DWORD PTR [edx]
  4090d0:	repz sbb eax,0x76c56d71
  4090d6:	jmp    0x409145
  4090d8:	sub    al,cl
  4090da:	push   ebp
  4090db:	(bad)  [ebp+edx*1-0xfe046a4]
  4090e2:	ds pop es
  4090e4:	inc    eax
  4090e5:	cs jmp 0xabb3:0xa5496ca9
  4090ed:	leave  
  4090ee:	outs   dx,DWORD PTR ds:[esi]
  4090ef:	mov    bh,0x51
  4090f1:	pop    ds
  4090f2:	call   0x1f11803d
  4090f7:	mov    cl,0xa3
  4090f9:	loope  0x4090ff
  4090fb:	lods   eax,DWORD PTR ds:[esi]
  4090fc:	xor    al,0x67
  4090fe:	adc    eax,0xf69d7c76
  409103:	push   ebp
  409104:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409105:	addr16 xchg edi,eax
  409107:	jmp    0x5c97ff95
  40910c:	dec    esp
  40910d:	popa   
  40910e:	repz pop eax
  409110:	dec    ebx
  409111:	ret    0x7f24
  409114:	pushf  
  409115:	fst    DWORD PTR [ebp-0x76398f4d]
  40911b:	fcomp  DWORD PTR [esi+eax*4]
  40911e:	retf   0xd4ed
  409121:	dec    ebp
  409122:	loop   0x4090ed
  409124:	popf   
  409125:	inc    esp
  409126:	or     al,0xc2
  409128:	jl     0x40910f
  40912a:	adc    bl,BYTE PTR [esi+esi*4+0x10]
  40912e:	imul   eax,DWORD PTR [esi],0xffffffe9
  409131:	imul   esi,DWORD PTR ds:0xd647583c,0x17056fec
  40913b:	push   0xa8db2968
  409140:	or     al,0x6a
  409142:	shl    BYTE PTR [ebx-0x5e5c7cfc],0x8
  409149:	out    0x71,eax
  40914b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40914c:	adc    eax,0x9c61af3b
  409151:	mul    dl
  409153:	pop    edx
  409154:	pop    ebp
  409155:	dec    ebp
  409156:	mov    dl,0x50
  409158:	repnz aad 0xca
  40915b:	int    0x1a
  40915d:	mov    ebp,DWORD PTR [esp+eiz*2-0x4fbc7fbc]
  409164:	cmp    BYTE PTR [ebx+0x638aaa3b],bl
  40916a:	adc    bh,al
  40916c:	sub    al,BYTE PTR [edi-0x63]
  40916f:	rol    DWORD PTR [ebp+0x28],0xc0
  409173:	or     DWORD PTR [ebp-0x25376af2],ebp
  409179:	cld    
  40917a:	xor    eax,0x5b1368ef
  40917f:	sbb    DWORD PTR [ecx],esi
  409181:	retf   0xc1cc
  409184:	dec    edx
  409185:	dec    ecx
  409186:	xlat   BYTE PTR ds:[ebx]
  409187:	cmp    ch,BYTE PTR [ebx+0x7da85f07]
  40918d:	loope  0x40918b
  40918f:	aaa    
  409190:	pop    DWORD PTR [ebp-0x182ee708]
  409196:	or     DWORD PTR ds:0x6124d4ac,0xffffff84
  40919d:	addr16 xchg ebp,eax
  40919f:	add    DWORD PTR [edi+eiz*1],0xb070997e
  4091a6:	jne    0x4091af
  4091a8:	xchg   ecx,eax
  4091a9:	out    dx,eax
  4091aa:	add    dl,BYTE PTR ds:0x488390ea
  4091b0:	iret   
  4091b1:	popa   
  4091b2:	xor    al,0xa2
  4091b4:	jno    0x409147
  4091b6:	int    0x8b
  4091b8:	pop    ss
  4091b9:	adc    esp,edx
  4091bb:	into   
  4091bc:	add    dh,bl
  4091be:	nop
  4091bf:	out    0xb9,eax
  4091c1:	adc    eax,0xe61469fe
  4091c6:	jb     0x409167
  4091c8:	push   ss
  4091c9:	dec    esi
  4091ca:	cdq    
  4091cb:	and    DWORD PTR [ebp-0x7e],ebx
  4091ce:	pop    ss
  4091cf:	int3   
  4091d0:	repz jnp 0x40924f
  4091d3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4091d4:	sbb    al,0x63
  4091d6:	scas   al,BYTE PTR es:[di]
  4091d8:	adc    eax,0xc13990b1
  4091dd:	xchg   esi,eax
  4091de:	shr    DWORD PTR [ebx-0x2d9519c5],1
  4091e4:	dec    edi
  4091e5:	jl     0x40916d
  4091e7:	repz or BYTE PTR [esi-0xd],ch
  4091eb:	xchg   edi,eax
  4091ec:	adc    BYTE PTR [edi+0x31],0x4a
  4091f0:	rcl    bl,0x5b
  4091f3:	xchg   esi,eax
  4091f4:	or     eax,0x5d900e64
  4091f9:	je     0x409242
  4091fb:	jbe    0x4091bf
  4091fd:	dec    esp
  4091fe:	cmp    BYTE PTR [ebp-0x258770e4],0xc
  409205:	leave  
  409206:	test   DWORD PTR [ecx-0x4e],0x226a1c4a
  40920d:	xchg   DWORD PTR [esi-0x6107e11],ebx
  409213:	and    BYTE PTR ds:0xfde6877a,ch
  409219:	push   edx
  40921a:	popa   
  40921b:	jmp    0x409280
  40921d:	stos   BYTE PTR es:[edi],al
  40921e:	or     esp,DWORD PTR [edx+0x2d]
  409221:	fstp   st(6)
  409223:	xor    eax,0xddcae61b
  409228:	or     eax,0x33f613bc
  40922d:	push   ebx
  40922e:	popa   
  40922f:	push   DWORD PTR [ebx+0x43]
  409232:	lea    eax,ds:0x12e75ce7
  409238:	push   esp
  409239:	fisub  WORD PTR [ecx]
  40923b:	inc    edx
  40923c:	pxor   mm4,QWORD PTR [ecx]
  40923f:	inc    eax
  409240:	xor    al,0x26
  409242:	sbb    BYTE PTR [esp+edx*2+0x4e],0x3a
  409247:	(bad)  
  409248:	ret    0x2f06
  40924b:	into   
  40924c:	test   BYTE PTR [edx+ecx*1],ch
  40924f:	xchg   esi,eax
  409250:	or     BYTE PTR [ebx-0x26],ch
  409253:	mov    WORD PTR [eax+0x1859a4ec],es
  409259:	es inc eax
  40925b:	loope  0x4091ec
  40925d:	sbb    DWORD PTR [edx],ebx
  40925f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409260:	arpl   WORD PTR [ebp-0x75],dx
  409263:	in     al,dx
  409264:	push   ecx
  409265:	jmp    0x409561
  40926a:	rol    DWORD PTR [eax+0x79],0xc7
  40926e:	stc    
  40926f:	(bad)  
  409270:	inc    DWORD PTR [esi-0x71]
  409273:	outs   dx,DWORD PTR ds:[esi]
  409274:	jbe    0x4092d5
  409276:	leave  
  409277:	fisub  DWORD PTR [edi+0x47]
  40927a:	adc    BYTE PTR [edi+0x2df0000],cl
  409280:	add    BYTE PTR [eax],al
  409282:	inc    ecx
  409283:	(bad)  
  409284:	gs loope 0x4092a3
  409287:	push   es
  409288:	mov    BYTE PTR [edi+edi*8],0x80
  40928c:	stc    
  40928d:	mov    fs,esp
  40928f:	(bad)  
  409290:	push   edx
  409291:	or     bl,cl
  409293:	mov    bl,0x26
  409295:	sti    
  409296:	dec    edx
  409297:	out    0xb,al
  409299:	gs xchg edi,eax
  40929b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40929c:	or     esp,DWORD PTR [esi+ebx*8+0x20856b9c]
  4092a3:	mov    gs,WORD PTR [edx]
  4092a5:	cmp    BYTE PTR [esi-0x7cacef1f],bh
  4092ab:	stos   BYTE PTR es:[edi],al
  4092ac:	dec    ecx
  4092ad:	sub    eax,0x2154d4ee
  4092b2:	dec    edi
  4092b3:	adc    DWORD PTR ds:[ebp+0x6cabbb4a],eax
  4092ba:	(bad)  
  4092bc:	mov    al,0x70
  4092be:	dec    edi
  4092bf:	push   es
  4092c0:	aas    
  4092c1:	or     cl,BYTE PTR [esi+0x2bbbb209]
  4092c7:	ror    DWORD PTR [ecx+0x16fec26a],cl
  4092cd:	js     0x4092f5
  4092cf:	mov    ecx,esi
  4092d1:	add    edx,ebp
  4092d3:	add    dh,cl
  4092d5:	cmp    al,0x74
  4092d7:	cwde   
  4092d8:	jbe    0x409284
  4092da:	ret    
  4092db:	xchg   DWORD PTR [eax],ebp
  4092dd:	lods   eax,DWORD PTR cs:[esi]
  4092df:	pop    edx
  4092e0:	or     eax,0x28059abf
  4092e5:	mov    ecx,DWORD PTR [esi-0x5123f855]
  4092eb:	into   
  4092ec:	in     eax,0x63
  4092ee:	pop    es
  4092ef:	push   0xfffffff5
  4092f1:	cld    
  4092f2:	cmc    
  4092f3:	das    
  4092f4:	xchg   esp,eax
  4092f5:	and    DWORD PTR [ebx],0x55
  4092f8:	aaa    
  4092f9:	push   esp
  4092fa:	push   0xffffff9e
  4092fc:	xchg   DWORD PTR gs:[ebp-0x124df4d0],esi
  409303:	push   cs
  409304:	in     al,dx
  409305:	xchg   edi,eax
  409306:	mov    edx,0x41578c0b
  40930b:	dec    edi
  40930c:	popw   ss
  40930e:	fs cwde 
  409310:	cmp    al,0xce
  409312:	inc    edi
  409313:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409314:	mov    dh,0x5b
  409316:	xchg   esi,eax
  409317:	cmc    
  409318:	xchg   edi,eax
  409319:	data16 rcr bl,cl
  40931c:	retf   
  40931d:	aad    0xe4
  40931f:	enter  0xad43,0x6
  409323:	xchg   edx,eax
  409324:	(bad)  
  409325:	xor    edx,ebx
  409327:	retf   0x47f8
  40932a:	sub    DWORD PTR [edx+ecx*4],ebx
  40932d:	mov    es,WORD PTR [ecx+0x7252b8c8]
  409333:	int    0x6a
  409335:	and    ch,BYTE PTR [eax+esi*1]
  409338:	adc    DWORD PTR [eax],esp
  40933a:	xor    eax,0xa375aaa2
  40933f:	arpl   WORD PTR [ecx+0x44ec95df],di
  409345:	jmp    0x9fff4c22
  40934a:	mov    al,0x26
  40934c:	add    ch,bl
  40934e:	push   ss
  40934f:	out    0xb6,eax
  409351:	jmp    0x4092df
  409353:	pop    ss
  409354:	adc    cl,ch
  409356:	pop    ebp
  409357:	sti    
  409358:	shr    BYTE PTR [eax-0x66],1
  40935b:	cmp    al,0x7f
  40935d:	pop    ecx
  40935e:	mov    al,0xb3
  409360:	je     0x40937d
  409362:	inc    esi
  409363:	test   DWORD PTR [esi+eiz*2],0xb0c8a44b
  40936a:	test   eax,0x78a76154
  40936f:	push   edi
  409370:	out    0x9b,al
  409372:	(bad)  
  409373:	in     eax,dx
  409374:	mov    ch,0x54
  409376:	(bad)  
  409377:	sti    
  409378:	ret    
  409379:	push   esi
  40937a:	test   DWORD PTR [ecx],esp
  40937c:	inc    esp
  40937d:	dec    edi
  40937e:	mov    WORD PTR [ebx-0x35],gs
  409381:	adc    bl,BYTE PTR [eax]
  409383:	adc    BYTE PTR [eax-0x6f72959e],cl
  409389:	mov    eax,0xb6aa2d2e
  40938e:	sub    eax,0x188283b0
  409393:	std    
  409394:	pop    ebp
  409395:	add    dh,BYTE PTR [eax]
  409397:	mov    dh,0x3
  409399:	push   ds
  40939a:	inc    ebp
  40939b:	jbe    0x40937c
  40939d:	out    0x61,al
  40939f:	xchg   esp,eax
  4093a0:	into   
  4093a1:	scas   eax,DWORD PTR es:[edi]
  4093a2:	aad    0xf6
  4093a4:	mov    esi,DWORD PTR [edx]
  4093a6:	repz pop ecx
  4093a8:	repz or al,dl
  4093ab:	inc    ecx
  4093ac:	popf   
  4093ad:	(bad)  
  4093ae:	mov    dh,0xa4
  4093b0:	mov    BYTE PTR [edi],bl
  4093b2:	retf   0x7fe3
  4093b5:	mov    WORD PTR [edx],es
  4093b7:	pop    edi
  4093b8:	gs rcr ah,1
  4093bb:	pop    ecx
  4093bc:	shl    BYTE PTR [edi+0x4a],cl
  4093bf:	fwait
  4093c0:	jle    0x409439
  4093c2:	aas    
  4093c3:	sub    BYTE PTR [ebx],0x73
  4093c6:	jmp    0x409430
  4093c8:	xchg   esp,eax
  4093c9:	out    dx,al
  4093ca:	lock dec ebx
  4093cc:	jge    0x409411
  4093ce:	test   ecx,edi
  4093d0:	ud1    esp,DWORD PTR [esi-0x7e]
  4093d4:	out    dx,eax
  4093d5:	jno    0x40941e
  4093d7:	cmp    al,0x9
  4093d9:	add    BYTE PTR [ebp+0x71],al
  4093dc:	int    0x15
  4093de:	neg    bl
  4093e0:	shr    BYTE PTR [ebp+0x55],cl
  4093e3:	pop    es
  4093e4:	dec    esp
  4093e5:	mul    eax
  4093e7:	and    BYTE PTR [ebx],bl
  4093e9:	jne    0x40940e
  4093eb:	shr    BYTE PTR [eax+ecx*2],1
  4093ee:	jb     0x409388
  4093f0:	adc    ch,dh
  4093f2:	inc    esp
  4093f3:	dec    esi
  4093f4:	(bad)  
  4093f5:	mov    eax,0xa93c1782
  4093fa:	scas   eax,DWORD PTR es:[edi]
  4093fb:	test   eax,0xfe2f821d
  409400:	adc    ecx,DWORD PTR [ecx+0x786a72cb]
  409406:	aam    0x95
  409408:	sbb    bh,bh
  40940a:	xchg   ecx,eax
  40940b:	fs (bad) 
  40940d:	sbb    al,0xc1
  40940f:	fucomp st(1)
  409411:	shl    BYTE PTR [edx],1
  409413:	fld    st(2)
  409415:	stos   BYTE PTR es:[edi],al
  409416:	push   ebx
  409417:	in     al,dx
  409418:	das    
  409419:	imul   edi,edi,0x1fb5a54a
  40941f:	ins    BYTE PTR es:[edi],dx
  409420:	push   esi
  409421:	fwait
  409422:	cmovo  esp,DWORD PTR [eax+0x70978fc8]
  409429:	inc    edx
  40942a:	inc    ebp
  40942b:	mov    ds:0xd34ef7a5,al
  409430:	rol    DWORD PTR [eax+0x75],cl
  409433:	call   0x7b69:0xff8a858a
  40943a:	aaa    
  40943b:	push   ebx
  40943c:	idiv   DWORD PTR [edi]
  40943e:	cli    
  40943f:	mov    ecx,0x8f68f1f
  409444:	xchg   sp,ax
  409446:	sub    BYTE PTR [esi+ecx*4+0x3e3a4b80],al
  40944d:	sbb    BYTE PTR [ecx],dh
  40944f:	push   ebp
  409450:	in     al,0x22
  409452:	data16 mov dh,ah
  409455:	call   0x6ed4:0xf347dbd9
  40945c:	int    0xea
  40945e:	arpl   WORD PTR [edx],bx
  409460:	nop
  409461:	sub    al,0x36
  409463:	adc    dl,BYTE PTR [esi-0x2a9cdd53]
  409469:	int    0x12
  40946b:	or     eax,0xaf6d625
  409470:	sbb    eax,0x89a122d7
  409475:	ins    BYTE PTR es:[edi],dx
  409476:	xlat   BYTE PTR ds:[ebx]
  409477:	pop    edx
  409478:	push   ss
  409479:	imul   ebp,DWORD PTR [eax],0x3c
  40947c:	aas    
  40947d:	fisub  WORD PTR [ebx+0x5960dace]
  409483:	daa    
  409484:	addr16 jle 0x40940f
  409487:	adc    eax,0x5dffe7c7
  40948c:	add    DWORD PTR [ebp-0x6f8d9f1e],ebx
  409492:	or     ecx,DWORD PTR [eax-0x2f]
  409495:	data16 adc BYTE PTR ds:0x5b81fb1e,dh
  40949c:	int3   
  40949d:	ret    0x95ce
  4094a0:	addr16 icebp 
  4094a2:	jb     0x4094d7
  4094a4:	mov    BYTE PTR [edx-0x273053eb],ch
  4094aa:	inc    edi
  4094ab:	push   edx
  4094ac:	mov    ebp,0x5072f3e
  4094b1:	cmp    edx,ecx
  4094b3:	push   ebp
  4094b4:	outs   dx,DWORD PTR ds:[esi]
  4094b5:	jecxz  0x4094ac
  4094b7:	dec    edi
  4094b8:	jmp    0x719cf744
  4094bd:	dec    edx
  4094be:	mov    edi,0x3f6c2d14
  4094c3:	and    DWORD PTR [eax],ebp
  4094c5:	lahf   
  4094c6:	rcr    BYTE PTR [ecx],0xe3
  4094c9:	rol    BYTE PTR [edi],0xf0
  4094cc:	leave  
  4094cd:	call   0x969a:0x3131448c
  4094d4:	jns    0x40952e
  4094d6:	test   ecx,esp
  4094d8:	sbb    eax,0xcf7341e6
  4094dd:	call   0xa3e7303e
  4094e2:	scas   eax,DWORD PTR es:[edi]
  4094e3:	(bad)  
  4094e5:	loopne 0x409520
  4094e7:	lahf   
  4094e8:	ret    0xbc3c
  4094eb:	mov    ebx,0xdcd91af4
  4094f0:	int    0x17
  4094f2:	push   ecx
  4094f3:	mov    ah,BYTE PTR [edi-0x34]
  4094f6:	mov    ebp,0x4dee5e69
  4094fb:	outs   dx,BYTE PTR ds:[esi]
  4094fc:	adc    ebx,ebx
  4094fe:	mov    cl,0x79
  409500:	and    DWORD PTR [edx+edx*4+0x3b],esi
  409504:	inc    esi
  409505:	adc    edx,edx
  409507:	lods   al,BYTE PTR ds:[esi]
  409508:	cmp    al,BYTE PTR [ebx+edi*8-0x77f4cece]
  40950f:	aaa    
  409510:	push   esp
  409511:	pop    esp
  409512:	or     eax,0x53ca09e4
  409517:	loopne 0x409538
  409519:	inc    edx
  40951a:	sbb    eax,0x43b46eeb
  40951f:	pop    es
  409520:	scas   eax,DWORD PTR es:[edi]
  409521:	mov    eax,0xeb0903c6
  409526:	retf   0x379e
  409529:	push   es
  40952a:	or     cl,BYTE PTR [ebx]
  40952c:	aas    
  40952d:	jne    0x409567
  40952f:	push   esp
  409530:	hlt    
  409531:	and    al,BYTE PTR [eax]
  409533:	push   edi
  409534:	dec    ebx
  409535:	shl    BYTE PTR [ecx+0x76053407],cl
  40953b:	leave  
  40953c:	lahf   
  40953d:	mov    dh,BYTE PTR [edx]
  40953f:	pop    ebx
  409540:	lahf   
  409541:	mov    cl,0xf3
  409543:	cs inc ecx
  409545:	shl    DWORD PTR [ecx-0x72],0xed
  409549:	int3   
  40954a:	test   BYTE PTR ds:0x613efd17,cl
  409550:	das    
  409551:	(bad)  
  409552:	fs enter 0xd054,0x28
  409557:	cwde   
  409558:	gs jb  0x4094f5
  40955b:	xchg   edx,eax
  40955c:	inc    eax
  40955d:	sub    eax,0x5131e9b9
  409562:	and    ecx,edx
  409564:	mov    DWORD PTR [ebp-0x4],0xffffffff
  40956b:	mov    DWORD PTR [ebp-0x4],0xfffffff3
  409572:	mov    DWORD PTR [ebp-0x4],0xffff
  409579:	or     DWORD PTR ds:0x423670,0x34ca
  409583:	mov    DWORD PTR [ebp-0x8],0xfffffffc
  40958a:	mov    edx,DWORD PTR [ebp-0x4]
  40958d:	neg    ecx
  40958f:	mov    ecx,0x300a
  409594:	xor    edx,ecx
  409596:	and    DWORD PTR ds:0x423670,0x423700
  4095a0:	add    edx,ecx
  4095a2:	sbb    DWORD PTR ds:0x42366c,0x423684
  4095ac:	push   esi
  4095ad:	and    DWORD PTR ds:0x42366c,0x0
  4095b7:	xor    esi,esi
  4095b9:	add    esi,DWORD PTR ds:0x42366c
  4095bf:	inc    esi
  4095c0:	mov    DWORD PTR ds:0x42366c,esi
  4095c6:	cmp    DWORD PTR ds:0x42366c,0x7
  4095cd:	jne    0x4095dc
  4095d3:	push   DWORD PTR [ebp-0x20]
  4095d6:	call   DWORD PTR ds:0x41f150
  4095dc:	cmp    DWORD PTR ds:0x42366c,0x6
  4095e3:	jne    0x4095f8
  4095e9:	xor    esi,esi
  4095eb:	or     esi,DWORD PTR ds:0x42366c
  4095f1:	inc    esi
  4095f2:	mov    DWORD PTR ds:0x42366c,esi
  4095f8:	cmp    DWORD PTR ds:0x42366c,0x10
  4095ff:	jb     0x4095b7
  409605:	neg    esi
  409607:	mov    esi,DWORD PTR [ebp+0x8]
  40960a:	not    edx
  40960c:	jmp    0x409908
  409611:	or     dh,BYTE PTR [ecx-0x10043aa6]
  409617:	lahf   
  409618:	jmp    esp
  40961a:	mov    ds:0xbb3cb8c7,al
  40961f:	leave  
  409620:	sub    edi,ebp
  409622:	xchg   ecx,eax
  409623:	add    BYTE PTR [eax],al
  409625:	fild   WORD PTR [edx]
  409627:	add    BYTE PTR [eax],al
  409629:	pop    edi
  40962a:	add    ebp,ebp
  40962c:	jns    0x40967e
  40962e:	and    edi,ebx
  409630:	inc    edx
  409631:	popf   
  409632:	test   al,0x16
  409634:	repz retf 0x22ef
  409638:	(bad)  
  409639:	pop    eax
  40963a:	cmp    BYTE PTR ds:0x84394424,0x7e
  409641:	lods   eax,DWORD PTR ds:[esi]
  409642:	jb     0x4096a6
  409644:	arpl   WORD PTR [ebx+edx*4-0x527795d8],ax
  40964b:	lock cs cmc 
  40964e:	rcl    BYTE PTR [ecx],1
  409650:	sbb    al,0xa8
  409652:	jmp    0x40965e
  409654:	jno    0x4095e0
  409656:	outs   dx,DWORD PTR ds:[esi]
  409657:	das    
  409658:	cmp    dh,BYTE PTR [ebx]
  40965a:	mov    edi,DWORD PTR [esi]
  40965c:	imul   esi,esp,0x47
  40965f:	sub    eax,0xcf435c1b
  409664:	and    edi,DWORD PTR ds:[edx+eax*1]
  409668:	call   0x9e84ca37
  40966d:	(bad)  
  40966e:	xor    BYTE PTR [edi-0x78],ch
  409671:	mov    ebx,0x17b2c648
  409676:	sub    esp,DWORD PTR [ecx+eax*4+0x6e]
  40967a:	jne    0x409694
  40967c:	dec    edx
  40967d:	(bad)  
  40967e:	pop    edx
  40967f:	jmp    0x4096aa
  409681:	fwait
  409682:	sbb    cl,BYTE PTR [edx+0x59]
  409685:	xor    edx,ecx
  409687:	jae    0x409650
  409689:	sub    esp,DWORD PTR [edx-0x49]
  40968c:	test   eax,0xa7811e9c
  409691:	inc    esi
  409692:	and    al,0xa
  409694:	push   0x80c3b862
  409699:	outs   dx,BYTE PTR ds:[esi]
  40969a:	scas   al,BYTE PTR es:[edi]
  40969b:	push   ebx
  40969c:	loopne 0x4096c4
  40969e:	mov    DWORD PTR [edx],ecx
  4096a0:	repz jmp 0x40970b
  4096a3:	dec    eax
  4096a4:	sub    al,0xf1
  4096a6:	inc    eax
  4096a7:	mov    dl,BYTE PTR [ecx+0x1cef6c94]
  4096ad:	out    dx,eax
  4096ae:	mov    ebp,0x1e458bb7
  4096b3:	and    al,0x74
  4096b5:	push   0x72
  4096b7:	push   ss
  4096b8:	pop    edi
  4096b9:	fwait
  4096ba:	sub    al,0x94
  4096bc:	ss je  0x40968f
  4096bf:	dec    edx
  4096c0:	add    eax,esi
  4096c2:	sti    
  4096c3:	dec    ecx
  4096c4:	lods   eax,DWORD PTR ds:[esi]
  4096c5:	cld    
  4096c6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4096c7:	add    BYTE PTR [edx],al
  4096c9:	mov    ch,0xfe
  4096cb:	test   BYTE PTR [edi-0x330cb24],cl
  4096d1:	in     eax,0x3b
  4096d3:	pop    ebx
  4096d4:	jae    0x4096f9
  4096d6:	mov    bh,0x12
  4096d8:	int3   
  4096d9:	add    al,0xcb
  4096db:	push   0xffffffb3
  4096dd:	out    0x1b,eax
  4096df:	enter  0x6fdd,0xcf
  4096e3:	pop    ecx
  4096e4:	imul   ecx,esi,0x69
  4096e7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4096e8:	stos   BYTE PTR es:[edi],al
  4096e9:	in     al,0x4b
  4096eb:	lods   al,BYTE PTR ds:[esi]
  4096ec:	scas   al,BYTE PTR es:[edi]
  4096ed:	(bad)  
  4096ee:	xlat   BYTE PTR ds:[ebx]
  4096ef:	scas   al,BYTE PTR es:[edi]
  4096f0:	or     DWORD PTR [ecx],edi
  4096f2:	aam    0xaa
  4096f4:	pop    ss
  4096f5:	jg     0x4096ce
  4096f7:	fisub  DWORD PTR [ecx-0x6bf033b]
  4096fd:	push   ds
  4096fe:	xor    al,0x6f
  409700:	stos   BYTE PTR es:[edi],al
  409701:	cld    
  409702:	mov    al,0x16
  409704:	aad    0x5d
  409706:	xor    dh,BYTE PTR [edi+eax*2+0x19]
  40970a:	mov    al,ds:0x97e5dec1
  40970f:	lods   al,BYTE PTR ds:[esi]
  409710:	and    eax,0x729ee50d
  409715:	xlat   BYTE PTR ds:[ebx]
  409716:	or     edx,DWORD PTR [eax-0x2694b04c]
  40971c:	jmp    0x51ad065b
  409721:	push   ebp
  409722:	jbe    0x4096ac
  409724:	sub    ah,BYTE PTR [ebx-0x73de64d4]
  40972a:	leave  
  40972b:	add    al,BYTE PTR [ebx+0x445a3010]
  409731:	push   esp
  409732:	adc    BYTE PTR [edx],ch
  409734:	imul   esi,esi,0x16
  409737:	call   0xd4bb:0x6f6904ed
  40973e:	jno    0x409737
  409740:	cmp    esi,ebp
  409742:	sbb    eax,0xc323abd4
  409747:	dec    eax
  409748:	out    0x52,eax
  40974a:	int    0x88
  40974c:	add    eax,0x7a128712
  409751:	retf   
  409752:	inc    eax
  409753:	fcom   QWORD PTR [ecx+ecx*2]
  409756:	call   0x94dc3432
  40975b:	mov    eax,0x76233bd4
  409760:	rcr    ecx,cl
  409762:	push   esi
  409763:	jg     0x409756
  409765:	push   ebx
  409766:	shr    DWORD PTR [edi],cl
  409768:	les    ebx,FWORD PTR [edi+0x68]
  40976b:	push   ecx
  40976c:	in     eax,0x94
  40976e:	inc    ebx
  40976f:	loopne 0x409704
  409771:	scas   al,BYTE PTR es:[edi]
  409772:	pop    ss
  409773:	(bad)  
  409774:	cld    
  409775:	into   
  409776:	fld    DWORD PTR [ebx]
  409778:	call   0x71bc9524
  40977d:	dec    eax
  40977e:	pop    ebp
  40977f:	add    DWORD PTR [eax+0x3f],ecx
  409782:	fimul  DWORD PTR [ebx]
  409784:	sub    al,0xd8
  409786:	jns    0x4097e5
  409788:	mov    esp,0x3a5be68a
  40978d:	test   eax,0x9fd71188
  409792:	int3   
  409793:	scas   al,BYTE PTR es:[edi]
  409794:	rol    DWORD PTR [ebp-0xd],0x9d
  409798:	sub    ecx,DWORD PTR [eax-0x55]
  40979b:	pop    esp
  40979c:	imul   eax,DWORD PTR [ebx+0x1e],0xbc96cdef
  4097a3:	out    0xc4,eax
  4097a5:	xchg   esi,eax
  4097a6:	test   DWORD PTR [esi+0x2b],ebp
  4097a9:	mov    cl,cl
  4097ab:	and    esp,DWORD PTR [edx+0x4]
  4097ae:	repz fld DWORD PTR ds:0xba93ab1d
  4097b5:	jl     0x409818
  4097b7:	scas   al,BYTE PTR es:[edi]
  4097b8:	into   
  4097b9:	xor    eax,0xc2342671
  4097be:	cmp    ebx,DWORD PTR [ebx+eiz*8-0x752594cb]
  4097c5:	cmp    al,0x86
  4097c7:	stc    
  4097c8:	push   edx
  4097c9:	dec    ebx
  4097ca:	xor    BYTE PTR [ecx+eax*1+0x4d],bl
  4097ce:	mov    BYTE PTR [ebx],dh
  4097d0:	add    eax,0xda53a2bf
  4097d5:	ret    0x1573
  4097d8:	loop   0x4097b9
  4097da:	ins    DWORD PTR es:[edi],dx
  4097db:	xchg   edx,eax
  4097dc:	pop    ebp
  4097dd:	and    al,bl
  4097df:	fild   DWORD PTR ds:0xaca6828e
  4097e5:	and    al,0x5
  4097e7:	and    DWORD PTR [ecx+0x8],0x11
  4097eb:	jge    0x40985e
  4097ed:	sar    BYTE PTR [edx+eiz*8+0x5eaedc7],1
  4097f4:	jnp    0x409831
  4097f6:	ja     0x40986b
  4097f8:	push   ss
  4097f9:	and    BYTE PTR [ecx+0x1133ac90],0x48
  409800:	pop    ss
  409801:	sbb    eax,0xc82ff97a
  409806:	dec    edx
  409807:	jge    0x409873
  409809:	(bad)  
  40980b:	lea    eax,[edi+0x502bea94]
  409811:	pop    esp
  409812:	adc    eax,0x67ae5d33
  409817:	ret    
  409818:	or     DWORD PTR [esi],ecx
  40981a:	int    0xe
  40981c:	es cmp edx,edi
  40981f:	add    DWORD PTR [edi-0x424a9168],ebp
  409825:	jbe    0x409846
  409827:	adc    al,0x9c
  409829:	(bad)  
  40982a:	(bad)  
  40982b:	loope  0x4097cb
  40982d:	dec    ebx
  40982e:	sub    eax,0x788973d9
  409833:	and    al,dh
  409835:	mov    edi,0x633e0e16
  40983a:	iret   
  40983b:	add    BYTE PTR [ecx-0x18255d44],ch
  409841:	cmp    al,dh
  409843:	cmp    BYTE PTR ds:0xbbad65a2,ch
  409849:	or     DWORD PTR [ebx+0x49],ebp
  40984c:	push   esi
  40984d:	arpl   WORD PTR [esi-0x3d47649a],sp
  409853:	xor    esi,DWORD PTR [edx+0x40]
  409856:	aad    0x3d
  409858:	fdiv   st(5),st
  40985a:	(bad)  
  40985b:	xchg   ebx,eax
  40985c:	sub    cl,BYTE PTR [eax]
  40985e:	inc    esi
  40985f:	jae    0x4098a9
  409861:	hlt    
  409862:	popa   
  409863:	outs   dx,BYTE PTR ds:[esi]
  409864:	mov    al,0xb4
  409866:	ja     0x409893
  409868:	jl     0x409839
  40986a:	les    esi,FWORD PTR [ecx+0xf575a07]
  409870:	ret    
  409871:	mov    ebp,esp
  409873:	push   ecx
  409874:	sbb    ch,ah
  409876:	cmp    eax,DWORD PTR [edi]
  409878:	pop    es
  409879:	mov    dl,0x3f
  40987b:	(bad)  
  40987c:	fldenv [edx+0x59]
  40987f:	scas   al,BYTE PTR es:[edi]
  409880:	push   edx
  409881:	add    ah,BYTE PTR [edi-0x14217dd9]
  409887:	inc    edi
  409888:	outs   dx,DWORD PTR ds:[esi]
  409889:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40988a:	lahf   
  40988b:	cmp    eax,edx
  40988d:	dec    ecx
  40988e:	cld    
  40988f:	aad    0x76
  409891:	fstp   TBYTE PTR [ecx+0x31ac1746]
  409897:	dec    eax
  409898:	or     esp,DWORD PTR [edi+0x43b597e4]
  40989e:	fidiv  WORD PTR [esi]
  4098a0:	(bad)  
  4098a1:	push   ss
  4098a2:	iret   
  4098a3:	pop    ss
  4098a4:	fwait
  4098a5:	fwait
  4098a6:	mov    bl,0x1e
  4098a8:	and    edi,DWORD PTR [ebx]
  4098aa:	lods   al,BYTE PTR ds:[esi]
  4098ab:	cdq    
  4098ac:	dec    esp
  4098ad:	movs   WORD PTR es:[edi],WORD PTR ds:[esi]
  4098af:	and    DWORD PTR [eax],0x24
  4098b2:	jmp    0xff93:0x23a4f510
  4098b9:	add    al,0x97
  4098bb:	test   DWORD PTR [eax-0x43949dc0],edx
  4098c1:	push   edx
  4098c2:	je     0x409902
  4098c4:	push   esp
  4098c5:	clc    
  4098c6:	jp     0x4098d9
  4098c8:	push   eax
  4098c9:	cmp    eax,0xa85df5cc
  4098ce:	jns    0x40987c
  4098d0:	es adc eax,0xce8888a5
  4098d6:	js     0x409933
  4098d8:	mov    dl,0x9
  4098da:	enter  0x4985,0xb2
  4098de:	sub    al,BYTE PTR [edx]
  4098e0:	cdq    
  4098e1:	dec    eax
  4098e2:	cmp    DWORD PTR [ebp+0x74],edi
  4098e5:	pop    esp
  4098e6:	mov    dl,0x8b
  4098e8:	scas   eax,DWORD PTR es:[edi]
  4098e9:	rol    ch,0xe6
  4098ec:	mov    eax,0xde0157c8
  4098f1:	sub    ebx,DWORD PTR [ebp+ebp*1+0x4b804f14]
  4098f8:	fadd   st,st(3)
  4098fa:	aad    0xbc
  4098fc:	mov    edx,0x5ef06960
  409901:	pop    ds
  409902:	mov    edx,0x11b7ded
  409907:	dec    eax
  409908:	and    edx,DWORD PTR [esi]
  40990a:	push   edi
  40990b:	mov    DWORD PTR [eax],edx
  40990d:	mov    edx,0x544d
  409912:	mov    WORD PTR [ebp+0x8],dx
  409916:	mov    edx,0x30c
  40991b:	jmp    0x40992e
  409920:	mov    esi,DWORD PTR [ebp-0x4]
  409923:	xor    esi,ecx
  409925:	mov    edi,0xffffcff5
  40992a:	sub    edi,esi
  40992c:	add    DWORD PTR [eax],edi
  40992e:	mov    si,WORD PTR [ebp+0x8]
  409932:	mov    edi,DWORD PTR [eax]
  409934:	xor    si,dx
  409937:	add    si,dx
  40993a:	cmp    WORD PTR [edi],si
  40993d:	jne    0x409920
  409943:	pop    edi
  409944:	pop    esi
  409945:	leave  
  409946:	ret    0x4
  409949:	fdiv   DWORD PTR [ebp+0x75]
  40994c:	arpl   bp,di
  40994e:	arpl   si,bx
  409950:	dec    DWORD PTR [edi+0x6da30524]
  409956:	push   edi
  409957:	sub    BYTE PTR [esi+edi*1+0x13],ch
  40995b:	add    BYTE PTR [eax],al
  40995d:	xor    eax,0xac000003
  409962:	xor    ch,ah
  409964:	pop    esp
  409965:	hlt    
  409966:	adc    al,al
  409968:	imul   ebx,DWORD PTR [edi],0x6ab4c66e
  40996e:	and    DWORD PTR [ebx+0x6d],0xe6a43cbe
  409975:	xchg   esp,eax
  409976:	inc    esp
  409977:	in     eax,0xc5
  409979:	xchg   ebx,eax
  40997a:	jge    0x40998f
  40997c:	jl     0x4099ef
  40997e:	repz stc 
  409980:	sub    al,0x63
  409982:	mov    edi,0xad44b6ec
  409987:	jno    0x4099f4
  409989:	mov    BYTE PTR [edi+ebp*8+0x63],dl
  40998d:	retf   0x2219
  409990:	jnp    0x409992
  409992:	mov    WORD PTR [esi],?
  409994:	call   0xa8be:0x49f9e9ab
  40999b:	mov    bl,0xca
  40999d:	aaa    
  40999e:	or     al,0xc2
  4099a0:	in     eax,0x85
  4099a2:	adc    DWORD PTR [ebp+0x1ebe69da],esi
  4099a8:	retf   
  4099a9:	sbb    edx,DWORD PTR [edx-0x39063df7]
  4099af:	aam    0xbe
  4099b1:	data16 sub dl,cl
  4099b4:	or     DWORD PTR [eax-0x5e3d9906],ebx
  4099ba:	mov    edx,0x9168151e
  4099bf:	shl    DWORD PTR [ebp+edi*8+0x36f547ee],1
  4099c6:	arpl   WORD PTR gs:[esi-0x7553c047],ax
  4099cd:	(bad)  
  4099cf:	xor    eax,0xbbb98d07
  4099d4:	adc    ecx,DWORD PTR [ebx-0x55bb01b2]
  4099da:	sbb    eax,0x8c368fb7
  4099df:	mov    eax,0xa9061759
  4099e4:	je     0x409a30
  4099e6:	mov    BYTE PTR [edi-0x29],dl
  4099e9:	mov    al,0x30
  4099eb:	hlt    
  4099ec:	adc    al,0x95
  4099ee:	out    dx,eax
  4099ef:	xchg   DWORD PTR [ecx+esi*2-0x42],esp
  4099f3:	mov    edi,DWORD PTR [edi+0x4a99a72d]
  4099f9:	js     0x409a77
  4099fb:	les    edx,FWORD PTR [ebx+ebp*2-0x6b3c1e3b]
  409a02:	jmp    0x409a15
  409a04:	sbb    al,0xa1
  409a06:	fidivr DWORD PTR [edi]
  409a08:	rcl    eax,1
  409a0a:	addr16 mov esp,0xaaf93ecd
  409a10:	jg     0x409a49
  409a12:	ins    DWORD PTR es:[edi],dx
  409a13:	cmp    BYTE PTR [ebx+ebp*2+0x39aaca58],bl
  409a1a:	nop
  409a1b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409a1c:	mov    eax,ds:0x3cf535f7
  409a21:	ss enter 0x431c,0xf2
  409a26:	xor    al,0x2d
  409a28:	mov    bl,0xb4
  409a2a:	mov    WORD PTR [edi],ss
  409a2c:	pusha  
  409a2d:	xor    BYTE PTR [edx],0x8b
  409a30:	inc    ecx
  409a31:	xchg   esp,eax
  409a32:	and    DWORD PTR [edx+0xe675fe4],ebx
  409a38:	stos   DWORD PTR es:[edi],eax
  409a39:	data16 sub bl,BYTE PTR [esi-0x39cde022]
  409a40:	retf   
  409a41:	sub    cl,0xe9
  409a44:	sbb    eax,0x6cd9f79e
  409a49:	cmp    al,BYTE PTR [ecx+0x47199a42]
  409a4f:	mov    ebx,0x13a99078
  409a54:	push   edi
  409a55:	push   ecx
  409a56:	or     eax,0xc61a1c49
  409a5b:	ds stos BYTE PTR es:[edi],al
  409a5d:	xchg   esi,eax
  409a5e:	inc    ecx
  409a5f:	test   al,0xe6
  409a61:	jns    0x409a45
  409a63:	in     al,0x7c
  409a65:	cmp    eax,0x36c4e837
  409a6a:	sbb    cl,dl
  409a6c:	retf   
  409a6d:	in     eax,dx
  409a6e:	adc    edx,DWORD PTR [ebx]
  409a70:	push   ebp
  409a71:	fucomp st(7)
  409a73:	scas   al,BYTE PTR es:[edi]
  409a74:	and    BYTE PTR [eax],bh
  409a76:	sar    DWORD PTR [esi],cl
  409a78:	cmp    dh,BYTE PTR [ebp+0x48]
  409a7b:	xlat   BYTE PTR ds:[ebx]
  409a7c:	out    dx,eax
  409a7d:	inc    ebp
  409a7e:	xor    BYTE PTR [eax+eax*2],ah
  409a81:	stos   DWORD PTR es:[edi],eax
  409a82:	push   esi
  409a83:	dec    ebp
  409a84:	bound  esp,QWORD PTR [esi-0x14]
  409a87:	mov    eax,es
  409a89:	push   ebp
  409a8a:	cmp    eax,0x93cd1b44
  409a8f:	pop    ebx
  409a90:	popa   
  409a91:	icebp  
  409a92:	bound  ebp,QWORD PTR [ebp-0x3226ed06]
  409a98:	cmp    al,0x7d
  409a9a:	ja     0x409ab0
  409a9c:	mov    bh,BYTE PTR [edi-0x4636f20]
  409aa2:	or     DWORD PTR [edi+0x63fda070],0x7811fee1
  409aac:	cli    
  409aad:	shl    BYTE PTR [ebp-0x19f6c707],cl
  409ab3:	pop    edx
  409ab4:	stos   DWORD PTR es:[edi],eax
  409ab5:	cmp    dh,bh
  409ab7:	retf   
  409ab8:	int    0x87
  409aba:	mov    dl,0xfc
  409abc:	loopne 0x409a5e
  409abe:	test   DWORD PTR [esi+0x3b89cd7f],esp
  409ac4:	add    BYTE PTR [edx+ecx*1],cl
  409ac7:	xor    eax,0x9993d6b1
  409acc:	sbb    cl,BYTE PTR [eax+0x51]
  409acf:	xchg   BYTE PTR [ebx+0x50d0f0e2],ch
  409ad5:	mov    dl,0x70
  409ad7:	jns    0x409b53
  409ad9:	adc    eax,0xcdea6432
  409ade:	fldenv [edx+eiz*4-0x5985798a]
  409ae5:	mov    al,ds:0x19c950c7
  409aea:	push   edx
  409aeb:	inc    BYTE PTR ds:[esi-0x7c]
  409aef:	sbb    eax,0x3c2ad46c
  409af4:	adc    al,0xed
  409af6:	or     eax,0x6243e24e
  409afb:	mov    esi,esp
  409afd:	xchg   esi,edi
  409aff:	add    eax,0x6b9412ee
  409b04:	addr16 jbe 0x409b61
  409b07:	pop    DWORD PTR [ecx]
  409b09:	sub    DWORD PTR [eax],ebx
  409b0b:	int    0xfb
  409b0d:	movs   BYTE PTR es:[edi],BYTE PTR fs:[esi]
  409b0f:	ffree  st(1)
  409b11:	xchg   ebp,eax
  409b12:	sti    
  409b13:	xchg   esp,eax
  409b14:	or     eax,0x67a01bd2
  409b19:	add    BYTE PTR [edi-0x4f11f368],dh
  409b1f:	jl     0x409abe
  409b21:	jmp    0x6845717d
  409b26:	or     eax,DWORD PTR [ecx]
  409b28:	xor    DWORD PTR [ecx+eiz*1-0x2b5283fe],edx
  409b2f:	jecxz  0x409ad9
  409b31:	mov    al,ds:0x8152d41a
  409b36:	mov    al,0xa9
  409b38:	or     esp,ebp
  409b3a:	call   0x5e94:0xe1a2ba32
  409b41:	inc    eax
  409b42:	bound  edi,QWORD PTR [ecx+0x7d]
  409b45:	out    0xb,al
  409b47:	gs pop esp
  409b49:	sbb    dl,BYTE PTR [eax]
  409b4b:	mov    ax,ds:0x76e4265b
  409b51:	loop   0x409ba5
  409b53:	test   BYTE PTR [edi+0x6a],dh
  409b56:	pushf  
  409b57:	cmp    DWORD PTR [edx-0x2e],edi
  409b5a:	or     al,0x94
  409b5c:	inc    ebp
  409b5d:	aas    
  409b5e:	inc    esi
  409b5f:	add    BYTE PTR [eax-0x1da5fbc3],bh
  409b65:	mov    esi,0xe515e31f
  409b6a:	sbb    eax,0x32206cc3
  409b6f:	and    bl,al
  409b71:	ja     0x409bd9
  409b73:	sbb    esi,DWORD PTR [esi-0x7cf29960]
  409b79:	js     0x409b92
  409b7b:	jl     0x409bf3
  409b7d:	mov    eax,ds:0x66b90f6f
  409b82:	mov    bl,0xa5
  409b84:	setno  BYTE PTR [esi-0x6a]
  409b88:	rcl    BYTE PTR [edi],cl
  409b8a:	lds    edi,FWORD PTR [edi-0x110e8d9e]
  409b90:	lea    ecx,[edi+0x4ea6022b]
  409b96:	sub    edx,DWORD PTR [edi+0x272d2685]
  409b9c:	mov    bx,0x3034
  409ba0:	fwait
  409ba1:	(bad)  
  409ba2:	pop    esp
  409ba3:	and    ch,dl
  409ba5:	iret   
  409ba6:	loopne 0x409c0b
  409ba8:	retf   0x1239
  409bab:	aas    
  409bac:	push   0x75
  409bae:	(bad)  
  409bb0:	xchg   edi,eax
  409bb1:	pop    ecx
  409bb2:	pop    esi
  409bb3:	sub    eax,0xde5f5605
  409bb8:	ins    BYTE PTR es:[edi],dx
  409bb9:	jno    0x409c17
  409bbb:	gs gs ja 0x409b9a
  409bbf:	ret    
  409bc0:	add    ebx,DWORD PTR [edi]
  409bc2:	int3   
  409bc3:	xchg   esi,eax
  409bc4:	test   BYTE PTR [edi],ch
  409bc6:	lea    ebx,[edi-0x7c1da365]
  409bcc:	clc    
  409bcd:	mov    esi,0xca2edb51
  409bd2:	cld    
  409bd3:	test   eax,0xd37d4763
  409bd8:	inc    eax
  409bd9:	int    0x70
  409bdb:	jb     0x409b9a
  409bdd:	inc    edx
  409bde:	aad    0xa9
  409be0:	and    dl,BYTE PTR [edx]
  409be2:	retf   0xddb5
  409be5:	div    BYTE PTR [esi+0x2852b175]
  409beb:	lods   eax,DWORD PTR ds:[esi]
  409bec:	dec    esi
  409bed:	pusha  
  409bee:	dec    ecx
  409bef:	dec    ebp
  409bf0:	pop    ebx
  409bf1:	dec    esi
  409bf2:	iret   
  409bf3:	out    dx,eax
  409bf4:	ror    DWORD PTR [ebx-0x2],0x37
  409bf8:	mov    esi,0x535d026c
  409bfd:	pop    edi
  409bfe:	dec    esi
  409bff:	out    0x6,eax
  409c01:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409c02:	repnz dec edx
  409c04:	inc    esp
  409c05:	dec    eax
  409c06:	scas   al,BYTE PTR es:[edi]
  409c07:	jo     0x409bfc
  409c09:	loopne 0x409c4a
  409c0b:	pushf  
  409c0c:	cld    
  409c0d:	fcmovnbe st,st(6)
  409c0f:	es jg  0x409bd7
  409c12:	xor    DWORD PTR [esi-0x36d16656],0x1624b376
  409c1c:	fwait
  409c1d:	cmp    eax,0x1b0d9b8
  409c22:	dec    esp
  409c23:	scas   al,BYTE PTR es:[edi]
  409c24:	jb     0x409bdb
  409c26:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409c27:	sub    dh,BYTE PTR [ebp-0x702d292a]
  409c2d:	pop    ecx
  409c2e:	popa   
  409c2f:	mov    dh,0xef
  409c31:	mov    dh,0x92
  409c33:	cmp    eax,DWORD PTR [esi+0x268b5b09]
  409c39:	mov    dh,0xb
  409c3b:	lea    esi,[eax]
  409c3d:	mov    ecx,0xa895e05
  409c42:	pop    ds
  409c43:	loope  0x409c97
  409c45:	cmp    DWORD PTR [edi-0x58],ebp
  409c48:	cli    
  409c49:	jge    0x409bcb
  409c4b:	aas    
  409c4c:	and    DWORD PTR [eax+0x5c],esp
  409c4f:	(bad)  
  409c50:	adc    ch,bl
  409c52:	inc    esi
  409c53:	and    edx,DWORD PTR [esi-0x3fec7da9]
  409c59:	mov    ds,WORD PTR [eax-0xb]
  409c5c:	sbb    eax,0xe5192bec
  409c61:	ja     0x409ccc
  409c63:	(bad)  
  409c64:	call   0xb883:0x376625f2
  409c6b:	retf   0x778a
  409c6e:	fcmove st,st(4)
  409c70:	add    BYTE PTR [edi],ch
  409c72:	jle    0x409ce0
  409c74:	push   eax
  409c75:	je     0x409cc1
  409c77:	cwde   
  409c78:	push   es
  409c79:	(bad)  
  409c7a:	jmp    0xad674da4
  409c7f:	(bad)  
  409c80:	xlat   BYTE PTR ds:[ebx]
  409c81:	lahf   
  409c82:	xor    eax,0xd5165d8a
  409c87:	fdivr  QWORD PTR [esi+0x5]
  409c8a:	arpl   WORD PTR [edi+0x20],bx
  409c8d:	add    dl,BYTE PTR [ebx]
  409c8f:	loope  0x409c87
  409c91:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409c92:	sbb    edi,DWORD PTR [eax-0xc]
  409c95:	lods   eax,DWORD PTR ds:[esi]
  409c96:	push   ebp
  409c97:	mov    ebp,esp
  409c99:	sub    esp,0xc
  409c9c:	push   esi
  409c9d:	dec    eax
  409c9e:	mov    esi,0x300a
  409ca3:	adc    eax,DWORD PTR ds:0x423674
  409ca9:	push   edi
  409caa:	and    DWORD PTR ds:0x423744,0x4d
  409cb4:	lea    edi,[esi+0x1]
  409cb7:	add    DWORD PTR ds:0x423700,ebx
  409cbd:	mov    eax,ds:0x42101c
  409cc2:	not    ecx
  409cc4:	mov    DWORD PTR [ebp-0x4],0xffffffff
  409ccb:	and    DWORD PTR ds:0x423704,0x0
  409cd5:	jmp    0x409ce9
  409cda:	xor    ecx,ecx
  409cdc:	or     ecx,DWORD PTR ds:0x423704
  409ce2:	inc    ecx
  409ce3:	mov    DWORD PTR ds:0x423704,ecx
  409ce9:	cmp    DWORD PTR ds:0x423704,0x12
  409cf0:	jae    0x409d19
  409cf6:	cmp    DWORD PTR ds:0x423704,0x15
  409cfd:	jne    0x409d0e
  409d03:	push   0x421631
  409d08:	call   DWORD PTR ds:0x41f518
  409d0e:	jmp    0x409cda
  409d13:	and    ecx,0x3b72
  409d19:	mov    DWORD PTR [ebp-0xc],0xfffffff3
  409d20:	adc    ecx,DWORD PTR ds:0x4214e4
  409d26:	mov    eax,DWORD PTR [eax]
  409d28:	mov    eax,DWORD PTR [ebp-0x4]
  409d2b:	mov    ecx,DWORD PTR ds:0x4211a0
  409d31:	sub    DWORD PTR ds:0x423700,0x6fad
  409d3b:	mov    ecx,DWORD PTR [ecx+0x198]
  409d41:	and    DWORD PTR ds:0x423738,0x1273
  409d4b:	xor    eax,esi
  409d4d:	adc    DWORD PTR ds:0x423740,0x2c5e
  409d57:	add    eax,edi
  409d59:	cmp    DWORD PTR [ecx],eax
  409d5b:	je     0x40aaf4
  409d61:	and    DWORD PTR ds:0x4214f4,0x0
  409d6b:	jmp    0x409d7f
  409d70:	xor    edx,edx
  409d72:	add    edx,DWORD PTR ds:0x4214f4
  409d78:	inc    edx
  409d79:	mov    DWORD PTR ds:0x4214f4,edx
  409d7f:	cmp    DWORD PTR ds:0x4214f4,0x17
  409d86:	jae    0x409dab
  409d8c:	cmp    DWORD PTR ds:0x4214f4,0x27
  409d93:	jne    0x409da4
  409d99:	push   0x5029
  409d9e:	call   DWORD PTR ds:0x41f144
  409da4:	jmp    0x409d70
  409da9:	xor    edx,edx
  409dab:	mov    eax,DWORD PTR [ebp-0x4]
  409dae:	and    ecx,0x1ddb
  409db4:	xor    eax,esi
  409db6:	add    eax,edi
  409db8:	xor    ecx,ecx
  409dba:	or     ecx,DWORD PTR ds:0x423678
  409dc0:	sub    DWORD PTR ds:0x4214fc,ecx
  409dc6:	mov    DWORD PTR [ebp-0x8],eax
  409dc9:	adc    DWORD PTR ds:0x4236c0,0x488e
  409dd3:	mov    DWORD PTR [ebp-0x8],0xffffffff
  409dda:	mov    eax,DWORD PTR [ebp-0x8]
  409ddd:	xor    ecx,0x6150
  409de3:	xor    eax,esi
  409de5:	add    eax,edi
  409de7:	sbb    DWORD PTR ds:0x4236ec,0x193b
  409df1:	mov    DWORD PTR [ebp-0x8],eax
  409df4:	mov    eax,ds:0x4211a0
  409df9:	adc    DWORD PTR ds:0x4214e0,edx
  409dff:	mov    ecx,DWORD PTR [eax+0x198]
  409e05:	mov    eax,DWORD PTR [eax+0x198]
  409e0b:	and    DWORD PTR ds:0x4236b0,0x0
  409e15:	mov    edx,DWORD PTR ds:0x4236b0
  409e1b:	inc    edx
  409e1c:	mov    DWORD PTR ds:0x4236b0,edx
  409e22:	cmp    DWORD PTR ds:0x4236b0,0x5
  409e29:	jne    0x409e3d
  409e2f:	push   DWORD PTR [ebp-0x18]
  409e32:	push   0x2a3a
  409e37:	call   DWORD PTR ds:0x41f51c
  409e3d:	cmp    DWORD PTR ds:0x4236b0,0x4
  409e44:	jne    0x409e57
  409e4a:	mov    edx,DWORD PTR ds:0x4236b0
  409e50:	inc    edx
  409e51:	mov    DWORD PTR ds:0x4236b0,edx
  409e57:	cmp    DWORD PTR ds:0x4236b0,0x13
  409e5e:	jb     0x409e15
  409e64:	mov    DWORD PTR ds:0x423674,0x12
  409e6e:	cmp    DWORD PTR ds:0x423674,0x0
  409e75:	je     0x409ec9
  409e7b:	cmp    DWORD PTR ds:0x423674,0x4
  409e82:	jne    0x409e91
  409e88:	push   DWORD PTR [ebp-0xc]
  409e8b:	call   DWORD PTR ds:0x41f02c
  409e91:	cmp    DWORD PTR ds:0x423674,0x5
  409e98:	jne    0x409eab
  409e9e:	mov    edx,DWORD PTR ds:0x423674
  409ea4:	dec    edx
  409ea5:	mov    DWORD PTR ds:0x423674,edx
  409eab:	xor    edx,edx
  409ead:	add    edx,DWORD PTR ds:0x423674
  409eb3:	dec    edx
  409eb4:	mov    DWORD PTR ds:0x423674,edx
  409eba:	jmp    0x409e6e
  409ebf:	sub    DWORD PTR ds:0x4236b8,0x423674
  409ec9:	mov    eax,DWORD PTR [eax]
  409ecb:	add    DWORD PTR ds:0x4214e8,ebx
  409ed1:	mov    edx,DWORD PTR [ebp-0x8]
  409ed4:	mov    ecx,DWORD PTR [ecx]
  409ed6:	and    DWORD PTR ds:0x4236e8,0x14ed
  409ee0:	mov    ecx,DWORD PTR [ecx+0x3c]
  409ee3:	sub    DWORD PTR ds:0x423730,0x4236ac
  409eed:	lea    eax,[eax+edx*8+0x78]
  409ef1:	mov    eax,DWORD PTR [eax+ecx*1]
  409ef4:	and    DWORD PTR ds:0x4214dc,ebx
  409efa:	mov    DWORD PTR [ebp-0x8],eax
  409efd:	sub    DWORD PTR ds:0x42373c,ebx
  409f03:	mov    eax,DWORD PTR [ebp-0x4]
  409f06:	mov    ecx,DWORD PTR [ebp-0x8]
  409f09:	xor    eax,esi
  409f0b:	add    eax,edi
  409f0d:	cmp    ecx,eax
  409f0f:	jmp    0x40a1e7
  409f14:	inc    ebp
  409f15:	or     al,0xf0
  409f17:	ins    DWORD PTR es:[edi],dx
  409f18:	stc    
  409f19:	std    
  409f1a:	(bad)  [esp+edi*2]
  409f1d:	or     edx,DWORD PTR [esi-0x72ddee0a]
  409f23:	jnp    0x409ef3
  409f25:	xchg   esp,eax
  409f26:	add    BYTE PTR [eax],al
  409f28:	mov    ebx,0x48000002
  409f2d:	sti    
  409f2e:	xor    al,0xdb
  409f30:	adc    eax,0x8da03455
  409f35:	add    edx,edx
  409f37:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409f38:	sti    
  409f39:	sbb    eax,0x7406b668
  409f3e:	dec    ebp
  409f3f:	sub    eax,0xd03d6fec
  409f44:	jl     0x409fb5
  409f46:	call   FWORD PTR [ebp-0x54]
  409f49:	sbb    eax,0x76706aef
  409f4e:	dec    eax
  409f4f:	jl     0x409f62
  409f51:	add    DWORD PTR [ecx+0x42],0xffffffe3
  409f55:	je     0x409f9d
  409f57:	(bad)  
  409f58:	xor    dl,BYTE PTR [eax-0x27e1afda]
  409f5e:	push   0xffffffff
  409f60:	scas   al,BYTE PTR es:[edi]
  409f61:	cmp    ebp,eax
  409f63:	ds jg  0x409fd3
  409f66:	jmp    0x25fa4f49
  409f6b:	into   
  409f6c:	pop    esi
  409f6d:	idiv   BYTE PTR [edi-0x524e46b4]
  409f73:	(bad)  
  409f74:	push   eax
  409f75:	cs call 0x91f4c1b9
  409f7b:	daa    
  409f7c:	(bad)  
  409f7d:	ins    DWORD PTR es:[edi],dx
  409f7e:	not    BYTE PTR [edx+ebp*2-0x1ebd6a45]
  409f85:	test   BYTE PTR [edi-0x10],bl
  409f88:	imul   ecx,DWORD PTR [ebx],0x9410a501
  409f8e:	clc    
  409f8f:	fadd   st(3),st
  409f91:	outs   dx,BYTE PTR ds:[esi]
  409f92:	clc    
  409f93:	inc    ebx
  409f94:	aaa    
  409f95:	jns    0x409f8a
  409f97:	imul   esi,DWORD PTR ds:0x32d6dcbb,0x29e36c5f
  409fa1:	mov    edi,0xfffccc3d
  409fa6:	in     al,dx
  409fa7:	pop    ebx
  409fa8:	call   0x6564a38
  409fad:	xchg   esp,eax
  409fae:	mov    cl,0xb4
  409fb0:	pop    eax
  409fb1:	shl    bl,0x11
  409fb4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409fb5:	xchg   esi,eax
  409fb6:	mov    ?,WORD PTR [ebx-0x19]
  409fb9:	rol    DWORD PTR ds:0xcf8ad28a,0x35
  409fc0:	nop
  409fc1:	push   0xfffffff5
  409fc3:	or     bl,BYTE PTR [esi+esi*2+0x19e6913a]
  409fca:	not    BYTE PTR [edx+ebp*8]
  409fcd:	outs   dx,BYTE PTR ds:[esi]
  409fce:	mov    dl,0x9e
  409fd0:	and    eax,0x3e4127af
  409fd5:	fistp  DWORD PTR [ebx-0x68]
  409fd8:	cmc    
  409fd9:	mov    edi,0x7c22d025
  409fde:	xchg   ebx,eax
  409fdf:	das    
  409fe0:	add    DWORD PTR [ebp+edi*1-0x49],esp
  409fe4:	mov    esi,0xf8efef00
  409fe9:	xor    al,0x74
  409feb:	ins    BYTE PTR es:[edi],dx
  409fec:	outs   dx,DWORD PTR ds:[esi]
  409fed:	sbb    BYTE PTR [ebp+0x31cfa051],al
  409ff3:	(bad)  
  409ff4:	push   esi
  409ff5:	sub    bh,cl
  409ff7:	repz daa 
  409ff9:	xchg   DWORD PTR [edi],edi
  409ffb:	and    ecx,ebx
  409ffd:	bound  eax,QWORD PTR [edi-0x67]
  40a000:	xchg   ebx,eax
  40a001:	outs   dx,DWORD PTR ds:[esi]
  40a002:	push   esi
  40a003:	ins    BYTE PTR es:[edi],dx
  40a004:	js     0x40a00d
  40a006:	sub    BYTE PTR [esp+edi*4-0x19f16dfe],al
  40a00d:	int    0x90
  40a00f:	into   
  40a010:	lods   al,BYTE PTR ds:[esi]
  40a011:	mov    al,0x65
  40a013:	ja     0x40a06f
  40a015:	mov    esi,0x2a0680c6
  40a01a:	inc    ebp
  40a01b:	sbb    ebx,DWORD PTR [ebx-0x6eb9d96b]
  40a021:	add    eax,0x3ef451e9
  40a026:	add    BYTE PTR [edx+0x786a4813],bl
  40a02c:	dec    esp
  40a02d:	ja     0x40a07b
  40a02f:	or     DWORD PTR [edx+ecx*1-0x41],esi
  40a033:	nop
  40a034:	pop    esi
  40a035:	mov    ?,edi
  40a037:	adc    dl,ch
  40a039:	nop
  40a03a:	aam    0xa0
  40a03c:	mov    ebp,0x86e843b5
  40a041:	dec    edi
  40a042:	push   ds
  40a043:	aas    
  40a044:	mov    ds:0x220c4396,al
  40a049:	scas   eax,DWORD PTR es:[edi]
  40a04a:	mov    eax,ds:0xdcdfedf8
  40a04f:	or     al,0x8b
  40a051:	js     0x40a0a4
  40a053:	bound  esi,QWORD PTR [ebx-0x22]
  40a056:	outs   dx,DWORD PTR ds:[esi]
  40a057:	fnstcw WORD PTR [eax+0x4c]
  40a05a:	or     DWORD PTR [edi+0x9875b34],0xf0c30a0f
  40a064:	dec    ebp
  40a065:	arpl   WORD PTR [edx],ax
  40a067:	mov    ecx,0x5ae6f845
  40a06c:	jge    0x40a081
  40a06e:	dec    ecx
  40a06f:	add    ebp,eax
  40a071:	push   eax
  40a072:	in     eax,0x90
  40a074:	dec    eax
  40a075:	idiv   al
  40a077:	and    ch,bl
  40a079:	xchg   edi,eax
  40a07a:	sbb    al,0xa4
  40a07c:	(bad)  
  40a07d:	fadd   QWORD PTR [edx+0x6e870b69]
  40a083:	(bad)  
  40a084:	das    
  40a085:	stos   WORD PTR es:[edi],ax
  40a087:	cmp    edi,DWORD PTR [esi]
  40a089:	out    dx,eax
  40a08a:	push   esi
  40a08b:	sub    BYTE PTR [edx],ah
  40a08d:	ss pop esi
  40a08f:	mov    dl,0x6b
  40a091:	test   BYTE PTR [eax+ebx*1-0x3649ed65],dh
  40a098:	gs inc ebp
  40a09a:	and    ah,BYTE PTR [eax-0x735a029d]
  40a0a0:	cmp    BYTE PTR [edi],bh
  40a0a2:	pusha  
  40a0a3:	push   esi
  40a0a4:	(bad)  
  40a0a6:	pop    edx
  40a0a7:	inc    ebx
  40a0a8:	aad    0xe9
  40a0aa:	dec    esi
  40a0ab:	inc    ebp
  40a0ac:	test   cl,bl
  40a0ae:	dec    eax
  40a0af:	pop    ds
  40a0b0:	fld    QWORD PTR [esi+0x6c949873]
  40a0b6:	rcl    BYTE PTR [ecx+0x77],cl
  40a0b9:	or     eax,0xf63b0eaa
  40a0be:	sbb    esi,edx
  40a0c0:	push   0xffffffd0
  40a0c2:	mov    ds:0xe19e9d6e,eax
  40a0c7:	and    edx,DWORD PTR [ecx-0x4f]
  40a0ca:	pop    ecx
  40a0cb:	mov    edx,0xbc93ef37
  40a0d0:	xchg   ebp,eax
  40a0d1:	inc    ebx
  40a0d2:	iret   
  40a0d3:	pop    esi
  40a0d4:	mov    WORD PTR [eax],?
  40a0d6:	lock sub eax,0xcd685b4
  40a0dc:	xor    al,0x96
  40a0de:	cmp    eax,0x3f676cfd
  40a0e3:	cwde   
  40a0e4:	test   BYTE PTR [ebx],0x98
  40a0e7:	inc    esi
  40a0e8:	das    
  40a0e9:	outs   dx,DWORD PTR ds:[esi]
  40a0ea:	into   
  40a0eb:	dec    ecx
  40a0ec:	push   ecx
  40a0ed:	in     al,0xb5
  40a0ef:	mov    edx,0x36a37ad4
  40a0f4:	xor    ebx,DWORD PTR [edi]
  40a0f6:	push   edx
  40a0f7:	retf   0x37fe
  40a0fa:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a0fb:	shl    al,cl
  40a0fd:	add    eax,0xf32dd99e
  40a102:	test   cl,cl
  40a104:	xchg   edi,eax
  40a105:	xchg   edi,eax
  40a106:	sub    eax,0xf74cf8b
  40a10b:	out    dx,eax
  40a10c:	push   eax
  40a10d:	fisubr WORD PTR ds:0x3adfe70d
  40a113:	nop
  40a114:	push   ecx
  40a115:	jno    0x40a0c7
  40a117:	xchg   edx,eax
  40a118:	dec    ebp
  40a119:	cli    
  40a11a:	mov    al,0xbb
  40a11c:	into   
  40a11d:	nop
  40a11e:	sub    BYTE PTR [ebx],ah
  40a120:	push   ss
  40a121:	in     eax,0x61
  40a123:	push   edx
  40a124:	xlat   BYTE PTR ds:[ebx]
  40a125:	ja     0x40a107
  40a127:	xchg   edx,eax
  40a128:	sbb    BYTE PTR [eax-0x7f],bh
  40a12b:	jns    0x40a0d2
  40a12d:	xchg   BYTE PTR [esi+esi*2-0x476f4a0a],bh
  40a134:	jp     0x40a110
  40a136:	out    0x85,al
  40a138:	jno    0x40a10c
  40a13a:	lahf   
  40a13b:	push   0xa6760740
  40a140:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a141:	xor    BYTE PTR [ecx],ch
  40a143:	subps  xmm6,XMMWORD PTR [ebx-0x45b4095e]
  40a14a:	imul   edi,edx,0x74
  40a14d:	ret    0xe115
  40a150:	xchg   BYTE PTR [ebp+edx*2+0x4a25bbc6],bl
  40a157:	jmp    0x3074354b
  40a15c:	adc    al,0x92
  40a15e:	sbb    BYTE PTR [ebp+0x67b3ccb1],ah
  40a164:	(bad)  
  40a165:	lods   al,BYTE PTR ds:[esi]
  40a166:	mov    cl,0x9e
  40a168:	or     BYTE PTR [edi],bh
  40a16a:	pushf  
  40a16b:	cld    
  40a16c:	addr16 mov al,ds:0x8795
  40a170:	loop   0x40a102
  40a172:	jl     0x40a0f4
  40a174:	mov    dl,0x55
  40a176:	mov    edx,0x81640de6
  40a17b:	lods   eax,DWORD PTR ds:[esi]
  40a17c:	call   0x380484c6
  40a181:	or     ebp,DWORD PTR [ebp+0x7108b95d]
  40a187:	mov    dl,0xf1
  40a189:	xor    BYTE PTR [esi-0x46ec139e],al
  40a18f:	jns    0x40a116
  40a191:	mov    ecx,0xb52112f6
  40a196:	mov    ebx,0xbdf0bfa5
  40a19b:	mov    dh,0x3b
  40a19d:	add    al,0x61
  40a19f:	add    ecx,DWORD PTR [edx+0x540894db]
  40a1a5:	cmc    
  40a1a6:	jp     0x40a1c1
  40a1a8:	int    0x89
  40a1aa:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a1ab:	repz and al,0xea
  40a1ae:	dec    esi
  40a1af:	xchg   ecx,eax
  40a1b0:	pop    edx
  40a1b1:	mov    ch,0x49
  40a1b3:	inc    edx
  40a1b4:	sbb    eax,0xd55eb9b
  40a1b9:	xor    eax,0x9129bc71
  40a1be:	rcl    DWORD PTR [ecx-0x11],0xd5
  40a1c2:	jecxz  0x40a1c6
  40a1c4:	push   ebp
  40a1c5:	cmp    edx,edi
  40a1c7:	into   
  40a1c8:	jns    0x40a1c1
  40a1ca:	out    0x27,eax
  40a1cc:	(bad)  
  40a1cd:	mov    ebx,0xe03445c9
  40a1d2:	fnstenv [edi]
  40a1d4:	int3   
  40a1d5:	(bad)  
  40a1d7:	call   0x7f65:0x36d2f0cf
  40a1de:	test   al,0x12
  40a1e0:	jecxz  0x40a18a
  40a1e2:	popa   
  40a1e3:	pop    ebx
  40a1e4:	test   edi,ecx
  40a1e6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a1e7:	je     0x40a7f4
  40a1ed:	mov    ecx,DWORD PTR [ebp-0x8]
  40a1f0:	mov    eax,ds:0x4211a0
  40a1f5:	mov    eax,DWORD PTR [eax+0x198]
  40a1fb:	add    ecx,DWORD PTR [eax]
  40a1fd:	mov    eax,ds:0x4211a0
  40a202:	mov    eax,DWORD PTR [eax+0x198]
  40a208:	mov    DWORD PTR [ebp-0x8],ecx
  40a20b:	mov    ecx,DWORD PTR [ebp-0x8]
  40a20e:	mov    eax,DWORD PTR [eax]
  40a210:	mov    ecx,DWORD PTR [ecx+0xc]
  40a213:	jmp    0x40a4eb
  40a218:	pop    edi
  40a219:	xchg   ebp,eax
  40a21a:	fcom   st(4)
  40a21c:	fcmovu st,st(5)
  40a21e:	pop    edi
  40a21f:	lahf   
  40a220:	inc    edx
  40a221:	or     ebp,DWORD PTR [ebx-0x7fe7578a]
  40a227:	dec    DWORD PTR [ecx-0x44ffff69]
  40a22d:	add    al,BYTE PTR [eax]
  40a22f:	add    BYTE PTR [ebx-0x1f],dl
  40a232:	jmp    0x40a27f
  40a234:	sti    
  40a235:	adc    eax,0xdfab3f22
  40a23a:	ins    BYTE PTR es:[edi],dx
  40a23b:	in     al,0xc2
  40a23d:	ret    0x49e
  40a240:	in     eax,dx
  40a241:	dec    eax
  40a242:	add    eax,DWORD PTR [eax+0x1282737c]
  40a248:	push   edx
  40a249:	dec    esp
  40a24a:	pop    ecx
  40a24b:	adc    al,0x8f
  40a24d:	sub    edx,edi
  40a24f:	retf   0x8fc9
  40a252:	add    eax,0x8c579084
  40a257:	adc    cl,BYTE PTR ds:0x9ce8b232
  40a25d:	ins    DWORD PTR es:[edi],dx
  40a25e:	push   0xffffffdd
  40a260:	dec    ecx
  40a261:	sahf   
  40a262:	pop    ecx
  40a263:	leave  
  40a264:	into   
  40a265:	cs repnz sar eax,0x62
  40a26a:	(bad)  
  40a26b:	jmp    0xa7a5:0x7930465f
  40a272:	sti    
  40a273:	in     al,0xf8
  40a275:	jecxz  0x40a2b3
  40a277:	cmc    
  40a278:	or     BYTE PTR [edx+0x6e],ch
  40a27b:	or     BYTE PTR [ecx+0x2f60edd1],ch
  40a281:	test   DWORD PTR [ebx+0x64],ebp
  40a284:	mov    ecx,0x498f4d70
  40a289:	data16 adc al,ch
  40a28c:	push   edi
  40a28d:	lods   al,BYTE PTR ds:[esi]
  40a28e:	jp     0x40a26b
  40a290:	frstor [esi-0x48930e5e]
  40a296:	or     DWORD PTR [ebx],edx
  40a298:	xor    edx,edx
  40a29a:	add    ecx,ebp
  40a29c:	cmp    eax,0x4b34d269
  40a2a1:	inc    ecx
  40a2a2:	shl    DWORD PTR [ebp+0x76d01690],cl
  40a2a8:	mov    BYTE PTR [edi],ch
  40a2aa:	cli    
  40a2ab:	(bad)  
  40a2ac:	sbb    eax,0x9f5664f5
  40a2b1:	fs (bad) 
  40a2b3:	stc    
  40a2b4:	daa    
  40a2b5:	add    al,0x6f
  40a2b7:	push   ebx
  40a2b8:	jmp    0x40a337
  40a2ba:	lock add bh,0x28
  40a2be:	cmc    
  40a2bf:	fldenv [edi]
  40a2c1:	pop    ebx
  40a2c2:	jp     0x40a267
  40a2c4:	fmulp  st(1),st
  40a2c6:	mov    ebp,0x4b9ea62
  40a2cb:	push   ebx
  40a2cc:	test   edx,ebx
  40a2ce:	jb     0x40a2c7
  40a2d0:	ins    BYTE PTR es:[edi],dx
  40a2d1:	pop    edx
  40a2d2:	sahf   
  40a2d3:	lods   al,BYTE PTR ds:[esi]
  40a2d4:	aaa    
  40a2d5:	(bad)  
  40a2d6:	xor    al,0x9b
  40a2d8:	xchg   ecx,eax
  40a2d9:	jg     0x40a2c1
  40a2db:	or     dl,BYTE PTR [edx]
  40a2dd:	pop    es
  40a2de:	sub    BYTE PTR [ebp-0x18704421],ch
  40a2e4:	mov    cl,0x44
  40a2e6:	ror    dh,1
  40a2e8:	int    0x6a
  40a2ea:	sbb    ebx,DWORD PTR [eax-0x78]
  40a2ed:	adc    DWORD PTR [ecx],ecx
  40a2ef:	add    ch,BYTE PTR [esi+0x66757c92]
  40a2f5:	xchg   BYTE PTR [eax],bl
  40a2f7:	mov    BYTE PTR [eax+0x65ca8117],dh
  40a2fd:	data16 outs dx,BYTE PTR ds:[esi]
  40a2ff:	(bad)  
  40a300:	mov    ss:0x3910db40,eax
  40a306:	fwait
  40a307:	adc    al,0xfd
  40a309:	mov    es,WORD PTR [esi]
  40a30b:	mov    bh,0xaa
  40a30d:	aad    0xc6
  40a30f:	adc    al,0xd8
  40a311:	push   esp
  40a312:	mov    ds:0x9b0a7c4f,ax
  40a318:	mov    ch,0xbc
  40a31a:	cmp    eax,0x8e921b22
  40a31f:	test   BYTE PTR [eax+0x53211e19],bl
  40a325:	adc    al,0x9d
  40a327:	leave  
  40a328:	add    BYTE PTR [ebx-0x4d],0xf6
  40a32c:	pop    eax
  40a32d:	aaa    
  40a32e:	mov    al,ds:0x6e846ff7
  40a333:	jae    0x40a34f
  40a335:	lgs    esp,FWORD PTR [ebx+0xd834152]
  40a33c:	dec    edx
  40a33d:	push   ebx
  40a33e:	mov    ebx,0xb4ef51ec
  40a343:	and    BYTE PTR [ebp+0x2494954a],ch
  40a349:	es push eax
  40a34b:	jp     0x40a3b2
  40a34d:	mov    al,0xc7
  40a34f:	jae    0x40a3b7
  40a351:	pop    esp
  40a352:	mov    ds:0xa2d68adc,eax
  40a357:	cmp    BYTE PTR [ebx+ecx*8+0x314bb887],0x10
  40a35f:	jg     0x40a322
  40a361:	cmp    bh,BYTE PTR [ecx]
  40a363:	mov    eax,ds:0x2614e394
  40a368:	mov    eax,ds:0x61234e0f
  40a36d:	inc    edx
  40a36e:	pop    esp
  40a36f:	mov    bh,0x9
  40a371:	dec    ebp
  40a372:	nop
  40a373:	test   eax,0x3b66ed53
  40a378:	mov    eax,ds:0x9203ad7b
  40a37d:	and    BYTE PTR [ebp+0x7d40bb41],al
  40a383:	pop    eax
  40a384:	pusha  
  40a385:	int    0x42
  40a387:	and    DWORD PTR [edi+0x5b],edi
  40a38a:	and    dh,al
  40a38c:	mov    bh,0xa0
  40a38e:	dec    edx
  40a38f:	mov    bl,0x14
  40a391:	sti    
  40a392:	repz jmp 0x7f02f791
  40a398:	not    BYTE PTR [ebx+edx*8]
  40a39b:	inc    ebp
  40a39c:	sbb    esp,DWORD PTR [ecx]
  40a39e:	shr    BYTE PTR [ebx-0x466f9eb1],1
  40a3a4:	(bad)  
  40a3a5:	shr    BYTE PTR [edx],1
  40a3a7:	xchg   DWORD PTR [eax-0x2bf41cb5],eax
  40a3ad:	sar    DWORD PTR [bp+di+0x3d],cl
  40a3b1:	or     BYTE PTR [ebp+0x6d],bl
  40a3b4:	xchg   ebp,ebx
  40a3b6:	cwde   
  40a3b7:	dec    ecx
  40a3b8:	sub    ah,BYTE PTR [edx-0x6f]
  40a3bb:	dec    esi
  40a3bc:	dec    ecx
  40a3bd:	push   0x72
  40a3bf:	bound  ecx,QWORD PTR [edi-0x34]
  40a3c2:	mov    ebx,0xf5f8e1d0
  40a3c7:	jle    0x40a356
  40a3c9:	jno    0x40a3e8
  40a3cb:	inc    ebp
  40a3cc:	ror    ch,1
  40a3ce:	lods   al,BYTE PTR ds:[esi]
  40a3cf:	cs jecxz 0x40a41f
  40a3d2:	ins    BYTE PTR es:[edi],dx
  40a3d3:	mov    ebx,DWORD PTR [ebp-0x44b2b2cc]
  40a3d9:	pop    ebx
  40a3da:	sbb    dh,BYTE PTR [ecx-0x43d50043]
  40a3e0:	pushf  
  40a3e1:	push   ss
  40a3e2:	cwde   
  40a3e3:	add    ecx,DWORD PTR [ebp-0x5c]
  40a3e6:	inc    esp
  40a3e7:	pusha  
  40a3e8:	call   esi
  40a3ea:	pop    ebp
  40a3eb:	test   BYTE PTR [edx+0x359d840d],bl
  40a3f1:	outs   dx,BYTE PTR ds:[esi]
  40a3f2:	je     0x40a3bc
  40a3f4:	mov    bh,0xec
  40a3f6:	push   ds
  40a3f7:	push   ebx
  40a3f8:	std    
  40a3f9:	xchg   BYTE PTR [ebx-0x3c],ah
  40a3fc:	xor    esi,0x6a269d9a
  40a402:	dec    ebp
  40a403:	stos   DWORD PTR es:[edi],eax
  40a404:	lods   eax,DWORD PTR ds:[esi]
  40a405:	sbb    BYTE PTR [esi],dh
  40a407:	inc    ebp
  40a408:	and    al,ch
  40a40a:	mov    ebx,0x7b07356b
  40a40f:	xlat   BYTE PTR ds:[ebx]
  40a410:	sbb    edx,0xf95fa3e7
  40a416:	aaa    
  40a417:	pop    edx
  40a418:	xlat   BYTE PTR ds:[ebx]
  40a419:	dec    ebp
  40a41a:	mov    edi,0x9b8c54f9
  40a41f:	dec    ebx
  40a420:	or     BYTE PTR [edi],al
  40a422:	mov    BYTE PTR [ecx+ebx*8+0x76e96313],0x1
  40a42a:	jl     0x40a4a1
  40a42c:	fisttp QWORD PTR ds:0xd430e59b
  40a432:	xchg   ebx,eax
  40a433:	in     al,dx
  40a434:	jae    0x40a4a4
  40a436:	adc    esi,DWORD PTR [ebx-0x249d28f2]
  40a43c:	fist   DWORD PTR [edx+0x7d213bd2]
  40a442:	inc    ebx
  40a443:	cdq    
  40a444:	call   0xa1526bc8
  40a449:	mov    eax,ds:0xb7dbd15b
  40a44e:	dec    esp
  40a44f:	sti    
  40a450:	enter  0x3722,0x66
  40a454:	push   esp
  40a455:	inc    esp
  40a456:	mov    bh,0x8c
  40a458:	and    bh,BYTE PTR [edx]
  40a45a:	adc    al,BYTE PTR [ebx]
  40a45c:	push   eax
  40a45d:	and    DWORD PTR [ecx],esi
  40a45f:	mov    bh,0x36
  40a461:	xor    ch,ah
  40a463:	sub    ah,BYTE PTR [ecx+0x74]
  40a466:	aam    0x4f
  40a468:	cmp    DWORD PTR [ecx-0x78],eax
  40a46b:	sti    
  40a46c:	cmp    al,0x3d
  40a46e:	scas   eax,DWORD PTR es:[edi]
  40a46f:	pop    ebp
  40a470:	nop
  40a471:	jmp    0xae00434e
  40a476:	and    cl,cl
  40a478:	(bad)  
  40a479:	int3   
  40a47a:	cld    
  40a47b:	call   0x7f18:0x2d144485
  40a482:	mov    esi,esp
  40a484:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a485:	mov    dl,0x1c
  40a487:	push   edi
  40a488:	adc    al,0x9e
  40a48a:	push   ebp
  40a48b:	mov    dh,0x19
  40a48d:	pop    ds
  40a48e:	inc    esi
  40a48f:	inc    esp
  40a490:	xchg   edx,eax
  40a491:	scas   eax,DWORD PTR es:[edi]
  40a492:	jle    0x40a512
  40a494:	jmp    0x40a4fe
  40a496:	dec    eax
  40a497:	cmp    ax,WORD PTR [edi-0x7bc1ae59]
  40a49e:	and    dl,BYTE PTR [edx+esi*1]
  40a4a1:	push   edx
  40a4a2:	pop    ebp
  40a4a3:	push   esp
  40a4a4:	out    0x97,eax
  40a4a6:	aas    
  40a4a7:	repz aam 0x3e
  40a4aa:	ins    DWORD PTR es:[edi],dx
  40a4ab:	scas   eax,DWORD PTR es:[edi]
  40a4ac:	sbb    dh,BYTE PTR [eax]
  40a4ae:	ret    
  40a4af:	adc    edx,edx
  40a4b1:	push   ebp
  40a4b2:	les    esp,FWORD PTR [esi]
  40a4b4:	jno    0x40a4d0
  40a4b6:	mov    esp,0x5a5a2fe1
  40a4bb:	cmp    cl,BYTE PTR [esi]
  40a4bd:	pop    ds
  40a4be:	(bad)  
  40a4bf:	aaa    
  40a4c0:	popa   
  40a4c1:	sub    cl,BYTE PTR [ebp+eiz*8-0x3]
  40a4c5:	lock nop
  40a4c7:	dec    ecx
  40a4c8:	jmp    0x40a450
  40a4ca:	mov    edx,0xdfabd757
  40a4cf:	repnz jmp 0xe558:0x3133eda
  40a4d7:	jl     0x40a49b
  40a4d9:	sbb    al,0x35
  40a4db:	das    
  40a4dc:	data16 loop 0x40a4c7
  40a4df:	add    al,0x96
  40a4e1:	pop    edi
  40a4e2:	clc    
  40a4e3:	call   0x3470:0x11d3fdef
  40a4ea:	int3   
  40a4eb:	mov    al,BYTE PTR [ecx+eax*1]
  40a4ee:	sub    al,0x3a
  40a4f0:	xor    al,0x3a
  40a4f2:	cmp    al,0x2b
  40a4f4:	je     0x40ae44
  40a4fa:	mov    eax,ds:0x4211a0
  40a4ff:	mov    eax,DWORD PTR [eax+0x198]
  40a505:	mov    ecx,DWORD PTR [ebp-0x8]
  40a508:	mov    eax,DWORD PTR [eax]
  40a50a:	mov    ecx,DWORD PTR [ecx+0xc]
  40a50d:	mov    al,BYTE PTR [ecx+eax*1]
  40a510:	sub    al,0x3a
  40a512:	xor    al,0x3a
  40a514:	cmp    al,0xb
  40a516:	jmp    0x40a7ee
  40a51b:	fsubr  QWORD PTR [ebx-0x80a4e4]
  40a521:	fild   QWORD PTR [edi+0x50c47a45]
  40a527:	jo     0x40a4f1
  40a529:	cmc    
  40a52a:	rol    BYTE PTR [edx+ebx*4+0x0],1
  40a52e:	add    BYTE PTR [ebx-0x62fffffe],bh
  40a534:	or     eax,0x158fe011
  40a539:	mov    ebx,0xf7408d3f
  40a53e:	scas   al,BYTE PTR es:[edi]
  40a53f:	xchg   BYTE PTR [edi-0x11],ah
  40a542:	sub    DWORD PTR [ebx],esi
  40a544:	pushf  
  40a545:	jp     0x40a550
  40a547:	mov    eax,0xe4e9fa7c
  40a54c:	add    al,0x4e
  40a54e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a54f:	ret    
  40a550:	xchg   edi,eax
  40a551:	sub    al,BYTE PTR [ebx+0x76340601]
  40a557:	or     al,0x3d
  40a559:	cld    
  40a55a:	pusha  
  40a55b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a55c:	cld    
  40a55d:	ficom  WORD PTR [ebp+ebx*8-0x60]
  40a561:	inc    ecx
  40a562:	ds int 0xcf
  40a565:	sub    DWORD PTR [ebp+0x73],esi
  40a568:	fst    DWORD PTR [ebx-0x76e2f911]
  40a56e:	sub    ebp,eax
  40a570:	xor    eax,0x18c5af66
  40a575:	add    eax,0xd1a10dd8
  40a57a:	dec    ebp
  40a57b:	test   al,0x3e
  40a57d:	sub    ecx,ecx
  40a57f:	mov    ebp,0x76cc6f4c
  40a584:	or     al,0xd5
  40a586:	scas   eax,DWORD PTR es:[edi]
  40a587:	xchg   edi,eax
  40a588:	mov    ecx,0x1618513b
  40a58d:	fwait
  40a58e:	leave  
  40a58f:	call   0x4930a0f
  40a594:	mov    al,0x32
  40a596:	sub    esp,DWORD PTR [eax]
  40a598:	sbb    al,0x3
  40a59a:	mov    WORD PTR [eax-0x19b9042a],fs
  40a5a0:	jbe    0x40a59e
  40a5a2:	mov    ds:0xc45f7ddf,al
  40a5a7:	push   edx
  40a5a8:	pop    edi
  40a5a9:	je     0x40a5b5
  40a5ab:	jmp    0x90bb8ff5
  40a5b0:	test   al,0x81
  40a5b2:	jl     0x40a558
  40a5b4:	adc    esi,DWORD PTR [edi+edx*4+0x37e9e5e]
  40a5bb:	outs   dx,DWORD PTR ds:[esi]
  40a5bc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a5bd:	ror    DWORD PTR [eax+ebx*1],1
  40a5c0:	lods   eax,DWORD PTR ds:[esi]
  40a5c1:	push   es
  40a5c2:	push   ss
  40a5c3:	push   0x4d
  40a5c5:	repz jnp 0x40a5a7
  40a5c8:	xor    eax,0x38d48834
  40a5cd:	jbe    0x40a5a5
  40a5cf:	fld    TBYTE PTR [ebx-0xd228f79]
  40a5d5:	dec    edx
  40a5d6:	cli    
  40a5d7:	ins    DWORD PTR es:[edi],dx
  40a5d8:	outs   dx,DWORD PTR ds:[esi]
  40a5d9:	shl    DWORD PTR [ebx+0x50],cl
  40a5dc:	xchg   edi,eax
  40a5dd:	ja     0x40a59a
  40a5df:	mov    eax,0x4007328d
  40a5e4:	out    0xb0,eax
  40a5e6:	pushf  
  40a5e7:	test   DWORD PTR [eax],edx
  40a5e9:	retf   
  40a5ea:	dec    edi
  40a5eb:	div    ah
  40a5ed:	(bad)  
  40a5ee:	pop    ecx
  40a5ef:	fsubr  DWORD PTR [esi-0x6a]
  40a5f2:	push   0xe3e3ecd3
  40a5f7:	xchg   esi,eax
  40a5f8:	(bad)  
  40a5fa:	lahf   
  40a5fb:	lock jno 0x40a62c
  40a5fe:	adc    edi,DWORD PTR [edx]
  40a600:	test   DWORD PTR [eax+edx*1],esp
  40a603:	sahf   
  40a604:	dec    esp
  40a605:	(bad)  
  40a606:	loop   0x40a67e
  40a608:	pop    ebx
  40a609:	in     eax,dx
  40a60a:	popa   
  40a60b:	adc    BYTE PTR [esi],0x5e
  40a60e:	rcr    DWORD PTR [esi+edx*2+0x74],0xa6
  40a613:	retf   
  40a614:	cs leave 
  40a616:	add    DWORD PTR [esi-0x7b95252a],ebx
  40a61c:	and    eax,0xc27e504c
  40a621:	iret   
  40a622:	(bad)  
  40a624:	fwait
  40a625:	and    ecx,ecx
  40a627:	retf   0xf94d
  40a62a:	jne    0x40a612
  40a62c:	pop    ds
  40a62d:	(bad)  
  40a62e:	fprem1 
  40a630:	sub    eax,0x47165e9b
  40a635:	add    eax,0xf6365424
  40a63a:	inc    edi
  40a63b:	jne    0x40a670
  40a63d:	mov    ds:0x71c6717d,eax
  40a642:	mov    ch,0xf8
  40a644:	fdiv   DWORD PTR [edx+0xc]
  40a647:	inc    ebp
  40a648:	pusha  
  40a649:	xchg   ebx,eax
  40a64a:	mov    DWORD PTR [ebx+0x42],eax
  40a64d:	inc    edx
  40a64e:	out    0xad,al
  40a650:	(bad)  
  40a651:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a652:	ins    DWORD PTR es:[edi],dx
  40a653:	cmc    
  40a654:	cmp    cl,0x5d
  40a657:	gs jbe 0x40a5ee
  40a65a:	cmp    dh,BYTE PTR [ebx]
  40a65c:	sub    DWORD PTR [edi],edi
  40a65e:	sti    
  40a65f:	(bad)  
  40a660:	mov    ebx,0x821e851a
  40a665:	and    eax,0xb4c96717
  40a66a:	ret    0x607b
  40a66d:	xor    DWORD PTR [esp+esi*2],edx
  40a670:	xlat   BYTE PTR ds:[ebx]
  40a671:	mov    dl,dh
  40a673:	xchg   DWORD PTR [ebx-0x1a],ecx
  40a676:	gs mov edi,0xa2ef6b2
  40a67c:	mov    al,0x60
  40a67e:	dec    edx
  40a67f:	dec    edi
  40a680:	and    al,0x8a
  40a682:	outs   dx,BYTE PTR ds:[esi]
  40a683:	fadd   QWORD PTR [edi]
  40a685:	imul   esp,DWORD PTR [ebp-0xa3571f6],0x35d53c46
  40a68f:	mov    ss,WORD PTR [ebx-0x6560001]
  40a695:	cmp    dh,BYTE PTR [esp+esi*8+0x35]
  40a699:	sahf   
  40a69a:	test   al,0x7b
  40a69c:	inc    ebp
  40a69d:	cli    
  40a69e:	addr16 jnp 0x40a70c
  40a6a1:	fs push ebx
  40a6a3:	sbb    al,0xc
  40a6a5:	xor    ch,cl
  40a6a7:	into   
  40a6a8:	inc    eax
  40a6a9:	ret    0x57a
  40a6ac:	dec    ebx
  40a6ad:	mov    ?,WORD PTR [edx+edi*4]
  40a6b0:	das    
  40a6b1:	rol    DWORD PTR [ebx+0xf295704],0x52
  40a6b8:	cmp    eax,0xa09a7a13
  40a6bd:	cmc    
  40a6be:	pusha  
  40a6bf:	jecxz  0x40a6d7
  40a6c1:	mov    ds:0xa58ce2db,al
  40a6c6:	outs   dx,BYTE PTR ds:[esi]
  40a6c7:	mov    ebp,0x487f7085
  40a6cc:	mov    edi,0x6c95a57d
  40a6d1:	pop    ebx
  40a6d2:	push   0x5a
  40a6d4:	ror    BYTE PTR [ebp-0x464dfe0b],1
  40a6da:	shr    BYTE PTR [ebp+0x771bbd4a],cl
  40a6e0:	lods   eax,DWORD PTR ds:[esi]
  40a6e1:	xchg   edx,eax
  40a6e2:	sub    ch,BYTE PTR [ebx-0x6a9d9c77]
  40a6e8:	je     0x40a741
  40a6ea:	adc    eax,ecx
  40a6ec:	mov    al,0x4a
  40a6ee:	cmc    
  40a6ef:	test   DWORD PTR [edx+0x63796b11],0x89258a9d
  40a6f9:	inc    edi
  40a6fa:	push   ds
  40a6fb:	call   DWORD PTR [ebx+0x6e]
  40a6fe:	xchg   ebx,eax
  40a6ff:	shl    DWORD PTR [edi-0x77f56aac],0x4f
  40a706:	inc    edx
  40a707:	fild   WORD PTR [esp+edi*1+0x4691ebbc]
  40a70e:	clc    
  40a70f:	cmp    BYTE PTR [ebx-0x27f34195],dh
  40a715:	div    BYTE PTR [eax+0x6]
  40a718:	cmc    
  40a719:	mov    esp,ebx
  40a71b:	and    al,0x5d
  40a71d:	add    BYTE PTR [ebp+0x1],ah
  40a720:	(bad)  
  40a721:	cli    
  40a722:	lds    eax,FWORD PTR [esi+eiz*1-0x1b]
  40a726:	(bad)  
  40a727:	ds addr16 push ds
  40a72a:	jge    0x40a709
  40a72c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a72d:	pushf  
  40a72e:	(bad)  
  40a72f:	sbb    dh,BYTE PTR [ebx+0x3]
  40a732:	xor    dl,BYTE PTR ds:0x246f8294
  40a738:	fdiv   st(5),st
  40a73a:	mov    ebx,0xd5c2be03
  40a73f:	inc    esi
  40a740:	pop    edx
  40a741:	xchg   ebp,eax
  40a742:	test   DWORD PTR [ecx+ebx*4-0x6],ecx
  40a746:	out    0x51,eax
  40a748:	add    BYTE PTR [ecx],ch
  40a74a:	sti    
  40a74b:	sbb    al,0xd1
  40a74d:	into   
  40a74e:	call   0xe0f85c07
  40a753:	hlt    
  40a754:	fild   WORD PTR [ebx+0x2bc9985b]
  40a75a:	push   cs
  40a75b:	push   ecx
  40a75c:	mov    ch,0x7e
  40a75e:	inc    esi
  40a75f:	test   DWORD PTR [esi-0x6a],edi
  40a762:	jbe    0x40a780
  40a764:	std    
  40a765:	cmp    ch,dl
  40a767:	fstp   TBYTE PTR [ecx-0x4609da8c]
  40a76d:	retf   
  40a76e:	or     DWORD PTR [ebx],esp
  40a770:	arpl   si,dx
  40a772:	add    eax,0x2dbddec6
  40a777:	push   esp
  40a778:	shl    BYTE PTR [ebx-0x5a],cl
  40a77b:	and    eax,0x9edf8ef3
  40a780:	sub    bl,dh
  40a782:	dec    esi
  40a783:	lahf   
  40a784:	(bad)  
  40a786:	add    BYTE PTR [edx+0x21abfa33],0xc8
  40a78d:	sub    edx,DWORD PTR [edi]
  40a78f:	push   cs
  40a790:	push   edi
  40a791:	mov    ds:0xd58ba877,eax
  40a796:	std    
  40a797:	mov    cl,BYTE PTR [ecx+ecx*1]
  40a79a:	and    ch,BYTE PTR [eax+ebp*1-0x48733af5]
  40a7a1:	push   esi
  40a7a2:	(bad)  
  40a7a3:	mov    BYTE PTR [edi-0x1a],bl
  40a7a6:	sub    al,0xe5
  40a7a8:	in     eax,0x19
  40a7aa:	mov    ebp,DWORD PTR [ecx-0x92e87d1]
  40a7b0:	dec    ecx
  40a7b1:	lahf   
  40a7b2:	mov    esi,0xbb7d43f4
  40a7b7:	std    
  40a7b8:	inc    ebp
  40a7b9:	cdq    
  40a7ba:	push   edi
  40a7bb:	pop    ds
  40a7bc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a7bd:	push   eax
  40a7be:	imul   esp,esi,0x5689f8fe
  40a7c4:	lea    esi,[edi-0x65]
  40a7c7:	inc    ebp
  40a7c8:	fs xchg edx,eax
  40a7ca:	in     eax,0xa7
  40a7cc:	pop    ebx
  40a7cd:	stos   DWORD PTR es:[edi],eax
  40a7ce:	or     al,ch
  40a7d0:	mov    dh,0x30
  40a7d2:	mov    edi,0x7f064ea9
  40a7d7:	cmp    edx,DWORD PTR [edi-0x4972a35c]
  40a7dd:	xchg   edx,eax
  40a7de:	and    cl,BYTE PTR [ebp+0x3a]
  40a7e1:	fs or  dh,ch
  40a7e4:	pop    ds
  40a7e5:	and    eax,0x56e550c1
  40a7ea:	nop
  40a7eb:	mov    al,BYTE PTR [edx+0x50840f02]
  40a7f1:	push   es
  40a7f2:	add    BYTE PTR [eax],al
  40a7f4:	mov    eax,DWORD PTR [ebp-0x4]
  40a7f7:	xor    eax,esi
  40a7f9:	add    eax,edi
  40a7fb:	cmp    DWORD PTR [ebx],eax
  40a7fd:	mov    eax,DWORD PTR [ebp-0xc]
  40a800:	jae    0x40aaee
  40a806:	xor    eax,esi
  40a808:	mov    ecx,0xffffcff5
  40a80d:	sub    ecx,eax
  40a80f:	add    DWORD PTR [ebx],ecx
  40a811:	jmp    0x40aaf4
  40a816:	jmp    0x40aaee
  40a81b:	mov    dl,0xa8
  40a81d:	and    dh,BYTE PTR [eax+0x3a]
  40a820:	cli    
  40a821:	repnz jmp 0xb033:0xd9f5d674
  40a829:	push   ecx
  40a82a:	and    bh,bh
  40a82c:	pushf  
  40a82d:	add    BYTE PTR [eax],al
  40a82f:	mov    ebx,0x65000002
  40a834:	sahf   
  40a835:	data16 test al,0x95
  40a838:	adc    dl,BYTE PTR [ebp+eax*8+0x524da00a]
  40a83f:	inc    edi
  40a840:	loope  0x40a80e
  40a842:	mov    esp,0x4bee4deb
  40a847:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a848:	pusha  
  40a849:	push   0x47
  40a84b:	scas   al,BYTE PTR es:[edi]
  40a84c:	jecxz  0x40a823
  40a84e:	ins    BYTE PTR es:[edi],dx
  40a84f:	jmp    0x40a824
  40a851:	add    BYTE PTR [esi],ch
  40a853:	inc    esi
  40a854:	cwde   
  40a855:	mov    ebp,ecx
  40a857:	push   ds
  40a858:	loope  0x40a840
  40a85a:	inc    DWORD PTR [edi]
  40a85c:	mov    dh,0x66
  40a85e:	jmp    0x98f92b7c
  40a863:	sub    BYTE PTR [ebx],dh
  40a865:	xor    ch,BYTE PTR [esi-0x583ecd1e]
  40a86b:	retf   0xb344
  40a86e:	in     eax,dx
  40a86f:	or     al,0x87
  40a871:	(bad)  [ebx]
  40a873:	push   0x60c6fad6
  40a878:	xchg   BYTE PTR [ecx+eiz*2+0xc3b0acf],dl
  40a87f:	test   eax,0x5cb455e9
  40a884:	push   esi
  40a885:	aam    0xdb
  40a887:	clc    
  40a888:	cmp    al,0xa7
  40a88a:	inc    edx
  40a88b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a88c:	dec    esi
  40a88d:	inc    esp
  40a88e:	enter  0x9897,0x60
  40a892:	mov    edx,0xe5163d59
  40a897:	or     esp,DWORD PTR [ecx]
  40a899:	mov    al,ds:0x1a1bab4
  40a89e:	(bad)  
  40a8a1:	cmp    bh,ch
  40a8a3:	dec    ebp
  40a8a4:	fcomp  st(4)
  40a8a6:	mov    ebx,0x55f21e20
  40a8ab:	and    al,0x63
  40a8ad:	mov    BYTE PTR ds:0x6c10dec1,al
  40a8b3:	mov    bl,0x41
  40a8b5:	push   esp
  40a8b6:	push   ebp
  40a8b7:	cmp    BYTE PTR [eax+0x2affd58a],dl
  40a8bd:	popa   
  40a8be:	sar    edi,cl
  40a8c0:	test   eax,0x1ccc306a
  40a8c5:	leave  
  40a8c6:	sbb    BYTE PTR [edi+edi*1],dl
  40a8c9:	lahf   
  40a8ca:	dec    al
  40a8cc:	add    ch,bl
  40a8ce:	mov    WORD PTR [ebx],ds
  40a8d0:	(bad)  
  40a8d1:	dec    eax
  40a8d2:	test   BYTE PTR [eax+0x7e],0xdc
  40a8d6:	(bad)  
  40a8d7:	outs   dx,DWORD PTR ds:[esi]
  40a8d8:	sbb    ebx,DWORD PTR [ecx+esi*2]
  40a8db:	push   eax
  40a8dc:	add    eax,DWORD PTR [edx]
  40a8de:	adc    ah,al
  40a8e0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a8e1:	mov    bl,0xc
  40a8e3:	(bad)  
  40a8e4:	std    
  40a8e5:	pop    es
  40a8e6:	pop    es
  40a8e7:	shl    BYTE PTR [edx],1
  40a8e9:	leave  
  40a8ea:	aas    
  40a8eb:	dec    ebx
  40a8ec:	xchg   edi,eax
  40a8ed:	std    
  40a8ee:	mul    DWORD PTR [edx]
  40a8f0:	inc    edx
  40a8f1:	sbb    esp,edx
  40a8f3:	add    eax,0xad4a91e6
  40a8f8:	xor    al,0x6c
  40a8fa:	and    esi,DWORD PTR [esi]
  40a8fc:	jb     0x40a937
  40a8fe:	push   es
  40a8ff:	(bad)  
  40a900:	pop    edx
  40a901:	sub    BYTE PTR [eax-0x40],bh
  40a904:	fdivr  DWORD PTR [ecx+0x131792f8]
  40a90a:	ds xchg esp,eax
  40a90c:	ins    DWORD PTR es:[edi],dx
  40a90d:	mov    esi,0xf36f3eb
  40a912:	hlt    
  40a913:	sbb    eax,0x17d1ec6d
  40a918:	stos   DWORD PTR es:[edi],eax
  40a919:	mov    es,WORD PTR [esi]
  40a91b:	add    ebx,DWORD PTR [ecx+0x6f]
  40a91e:	cs pop esi
  40a920:	pusha  
  40a921:	lea    ebx,[edi-0x701be0ef]
  40a927:	in     al,0x77
  40a929:	std    
  40a92a:	rol    DWORD PTR [eax-0x55],cl
  40a92d:	add    BYTE PTR [ecx-0x2f6c28fe],al
  40a933:	jo     0x40a97f
  40a935:	jp     0x40a97a
  40a937:	jl     0x40a8c5
  40a939:	add    BYTE PTR [edx+0x54b73831],bl
  40a93f:	in     al,dx
  40a940:	push   esi
  40a941:	shl    DWORD PTR [ecx+0x71672766],1
  40a947:	inc    ebp
  40a948:	jl     0x40a8ce
  40a94a:	xchg   BYTE PTR [edx+0x77],cl
  40a94d:	sub    BYTE PTR [ecx-0x43d40957],ch
  40a953:	sub    eax,0x1f30f9fb
  40a958:	lahf   
  40a959:	push   edx
  40a95a:	dec    ecx
  40a95b:	in     al,dx
  40a95c:	sahf   
  40a95d:	xor    ecx,DWORD PTR [ebx+0x49bb2784]
  40a963:	cwde   
  40a964:	imul   eax,DWORD PTR [edx-0x26],0x30182fd9
  40a96b:	sbb    DWORD PTR fs:[ebx+0x66bed052],ebx
  40a972:	fcom   QWORD PTR [edi]
  40a974:	loop   0x40a959
  40a976:	popf   
  40a977:	pusha  
  40a978:	in     eax,dx
  40a979:	arpl   ax,ax
  40a97b:	xchg   ebp,eax
  40a97c:	rol    DWORD PTR [esi],1
  40a97e:	ret    0x2b3d
  40a981:	scas   eax,DWORD PTR es:[edi]
  40a982:	or     bl,BYTE PTR [ecx]
  40a984:	out    dx,eax
  40a985:	inc    edx
  40a986:	push   esp
  40a987:	pop    esp
  40a988:	push   edx
  40a989:	and    BYTE PTR ds:0xad2be3e2,cl
  40a98f:	cmc    
  40a990:	add    al,0xb
  40a992:	bound  edi,QWORD PTR [ebx+edx*2]
  40a995:	jge    0x40a9b1
  40a997:	cmp    BYTE PTR [ecx-0x55],bh
  40a99a:	pop    esp
  40a99b:	pop    edi
  40a99c:	mov    ds:0x435f6c58,eax
  40a9a1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a9a2:	push   ss
  40a9a3:	aaa    
  40a9a4:	lahf   
  40a9a5:	fsubr  DWORD PTR [ecx]
  40a9a7:	mov    edi,0xcd971aa
  40a9ac:	scas   eax,DWORD PTR es:[edi]
  40a9ad:	imul   BYTE PTR [ecx-0x57]
  40a9b0:	jo     0x40a9e7
  40a9b2:	lods   eax,DWORD PTR ds:[esi]
  40a9b3:	mov    edi,DWORD PTR ds:0x24f46873
  40a9b9:	cmp    eax,0xcbe1b0b5
  40a9bf:	stos   DWORD PTR es:[edi],eax
  40a9c0:	call   0x759d:0xe2578164
  40a9c7:	mov    eax,ds:0x6b962441
  40a9cc:	es pop es
  40a9ce:	repnz add cl,BYTE PTR [ebx]
  40a9d1:	data16 fistp WORD PTR [ecx+0x7]
  40a9d5:	icebp  
  40a9d6:	or     BYTE PTR [eax-0x5ca087e4],dh
  40a9dc:	sbb    BYTE PTR [ebx+ebp*8],dl
  40a9df:	test   BYTE PTR [ebx-0x41],0x64
  40a9e3:	(bad)  
  40a9e4:	dec    ebx
  40a9e5:	aad    0xa1
  40a9e7:	into   
  40a9e8:	daa    
  40a9e9:	adc    al,0xb7
  40a9eb:	out    0x5,eax
  40a9ed:	retf   
  40a9ee:	pop    ecx
  40a9ef:	dec    edx
  40a9f0:	cmp    bl,0x5c
  40a9f3:	popa   
  40a9f4:	sbb    al,0x1b
  40a9f6:	pop    ecx
  40a9f7:	outs   dx,BYTE PTR ds:[esi]
  40a9f8:	jp     0x40a988
  40a9fa:	popf   
  40a9fb:	test   eax,0x56fc310d
  40aa00:	mov    ds:0xdfd34534,eax
  40aa05:	enter  0xa17e,0x21
  40aa09:	test   eax,0xe210234d
  40aa0e:	imul   esp,DWORD PTR [esi-0x8],0x75
  40aa12:	imul   ebp,DWORD PTR [edx+0xf1e4337],0xffffff8c
  40aa19:	icebp  
  40aa1a:	in     eax,0x8e
  40aa1c:	inc    ecx
  40aa1d:	mov    eax,ds:0x34978f76
  40aa22:	popf   
  40aa23:	or     ebx,eax
  40aa25:	ror    eax,1
  40aa27:	out    dx,eax
  40aa28:	pop    ds
  40aa29:	aad    0xf2
  40aa2b:	pop    eax
  40aa2c:	stc    
  40aa2d:	jmp    0x40aa6e
  40aa2f:	push   esi
  40aa30:	ds pop ss
  40aa32:	cmp    al,0xd0
  40aa34:	xchg   edx,eax
  40aa35:	stos   DWORD PTR es:[edi],eax
  40aa36:	out    0x12,al
  40aa38:	sar    DWORD PTR [ebx-0x7c],cl
  40aa3b:	inc    eax
  40aa3c:	sbb    dl,ch
  40aa3e:	inc    esi
  40aa3f:	mov    ch,0xf9
  40aa41:	lock adc bl,dl
  40aa44:	xchg   edi,eax
  40aa45:	adc    DWORD PTR [ecx+0x4e],edi
  40aa48:	out    dx,eax
  40aa49:	je     0x40aa3f
  40aa4b:	or     al,0xdd
  40aa4d:	sub    DWORD PTR [edx-0x4362a21],esp
  40aa53:	mov    al,BYTE PTR ds:0xdfeec356
  40aa59:	int3   
  40aa5a:	rol    DWORD PTR [edx-0x52bac669],1
  40aa60:	out    dx,al
  40aa61:	sti    
  40aa62:	inc    eax
  40aa63:	sbb    bh,BYTE PTR [ecx+0x46]
  40aa66:	mov    DWORD PTR [eax],ecx
  40aa68:	mov    eax,0x58909144
  40aa6d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40aa6e:	adc    dl,BYTE PTR [ecx]
  40aa70:	or     al,0x31
  40aa72:	add    al,al
  40aa74:	popa   
  40aa75:	sbb    al,0x98
  40aa77:	push   ebx
  40aa78:	pop    ds
  40aa79:	scas   al,BYTE PTR es:[edi]
  40aa7a:	cmp    esi,0xe00b3484
  40aa80:	xchg   BYTE PTR es:[esi+0x37],al
  40aa84:	stos   DWORD PTR es:[edi],eax
  40aa85:	push   ss
  40aa86:	sub    ah,cl
  40aa88:	div    DWORD PTR [esi+eiz*2]
  40aa8b:	test   eax,0x2048f636
  40aa90:	cmp    eax,0xdf60395
  40aa95:	jb     0x40aa3b
  40aa97:	outs   dx,DWORD PTR ds:[esi]
  40aa98:	out    0x63,al
  40aa9a:	sub    BYTE PTR [edx],cl
  40aa9c:	sub    edx,DWORD PTR [ecx]
  40aa9e:	xor    ah,BYTE PTR [edi+0x41]
  40aaa1:	and    dl,0x2
  40aaa4:	ins    DWORD PTR es:[edi],dx
  40aaa5:	xlat   BYTE PTR ds:[ebx]
  40aaa6:	xor    BYTE PTR [ebx-0x4e],cl
  40aaa9:	das    
  40aaaa:	stc    
  40aaab:	frndint 
  40aaad:	mov    WORD PTR [eax],fs
  40aaaf:	mov    eax,0xf8ba48e0
  40aab4:	ins    BYTE PTR es:[edi],dx
  40aab5:	sti    
  40aab6:	cmp    cl,0x8e
  40aab9:	add    edi,DWORD PTR [esi-0x57d95514]
  40aabf:	call   0x32b55fa
  40aac4:	adc    ebp,DWORD PTR [edx]
  40aac6:	mov    edx,0x54ab7515
  40aacb:	jne    0x40aa69
  40aacd:	js     0x40aa88
  40aacf:	push   esi
  40aad0:	push   esp
  40aad1:	dec    esi
  40aad2:	add    al,0x70
  40aad4:	clc    
  40aad5:	mov    esi,0xf2f277b1
  40aada:	fldenv [ebp+edx*1-0x67e4c3a1]
  40aae1:	retf   0x258b
  40aae4:	adc    esi,ebp
  40aae6:	adc    edi,0x74960b4e
  40aaec:	jns    0x40aa95
  40aaee:	xor    eax,esi
  40aaf0:	add    eax,edi
  40aaf2:	add    DWORD PTR [ebx],eax
  40aaf4:	mov    eax,ds:0x421274
  40aaf9:	mov    eax,DWORD PTR [eax]
  40aafb:	mov    eax,DWORD PTR [eax]
  40aafd:	add    eax,DWORD PTR [ebx]
  40aaff:	mov    DWORD PTR [ebp-0x8],eax
  40ab02:	mov    eax,DWORD PTR [ebp-0x4]
  40ab05:	mov    ecx,DWORD PTR [ebp-0x8]
  40ab08:	xor    eax,esi
  40ab0a:	add    eax,edi
  40ab0c:	cmp    DWORD PTR [ecx],eax
  40ab0e:	jne    0x40ab30
  40ab14:	mov    eax,DWORD PTR [ebp-0xc]
  40ab17:	mov    ecx,DWORD PTR [ebp-0x4]
  40ab1a:	xor    eax,esi
  40ab1c:	xor    ecx,esi
  40ab1e:	sub    ecx,eax
  40ab20:	mov    DWORD PTR [ebx],ecx
  40ab22:	mov    eax,ds:0x421274
  40ab27:	mov    eax,DWORD PTR [eax]
  40ab29:	mov    eax,DWORD PTR [eax]
  40ab2b:	add    eax,DWORD PTR [ebx]
  40ab2d:	mov    DWORD PTR [ebp-0x8],eax
  40ab30:	push   DWORD PTR [ebp-0x8]
  40ab33:	mov    eax,ds:0x4211a0
  40ab38:	mov    eax,DWORD PTR [eax+0x198]
  40ab3e:	call   0x409261
  40ab43:	mov    eax,ds:0x4212a0
  40ab48:	jmp    0x40ae20
  40ab4d:	shr    BYTE PTR [ebp-0x48],cl
  40ab50:	push   es
  40ab51:	mov    edi,0xbafdfed7
  40ab56:	push   es
  40ab57:	inc    edi
  40ab58:	popa   
  40ab59:	dec    ebx
  40ab5a:	loopne 0x40ab15
  40ab5c:	retf   
  40ab5d:	mov    edx,0xbb00009f
  40ab62:	add    al,BYTE PTR [eax]
  40ab64:	add    BYTE PTR [eax+esi*1],al
  40ab67:	xor    al,0xc6
  40ab69:	call   0xe1aff23c
  40ab6e:	inc    esp
  40ab6f:	xlat   BYTE PTR ds:[ebx]
  40ab70:	adc    edx,esi
  40ab72:	test   edx,edx
  40ab74:	pop    ecx
  40ab75:	push   ebp
  40ab76:	push   0x940d4910
  40ab7b:	mov    bl,0xd3
  40ab7d:	dec    eax
  40ab7e:	and    dl,BYTE PTR [eax+0x3]
  40ab81:	xor    eax,0x2e875040
  40ab86:	lahf   
  40ab87:	inc    ebx
  40ab88:	imul   edx,esp,0x8
  40ab8b:	mov    dl,0x4f
  40ab8d:	into   
  40ab8e:	or     bl,BYTE PTR [eax]
  40ab90:	sub    al,0x5f
  40ab92:	stos   DWORD PTR es:[edi],eax
  40ab93:	in     eax,0x1
  40ab95:	cmp    ebx,esp
  40ab97:	imul   ebx,DWORD PTR [ecx],0xffffffd2
  40ab9a:	add    cl,BYTE PTR [eax]
  40ab9c:	js     0x40ab37
  40ab9e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ab9f:	cdq    
  40aba0:	cmp    BYTE PTR [ecx-0x75044eb0],ch
  40aba6:	jp     0x40abb4
  40aba8:	xor    ch,ch
  40abaa:	jmp    0x34db:0xe808887c
  40abb1:	xchg   esi,eax
  40abb2:	xor    BYTE PTR [eax-0x1e24349c],0x38
  40abb9:	or     esi,ecx
  40abbb:	js     0x40ab70
  40abbd:	add    ecx,DWORD PTR [ebp+0x4727bcfb]
  40abc3:	dec    ebx
  40abc4:	mov    WORD PTR [ecx+0x130affbf],fs
  40abca:	mov    ch,0xea
  40abcc:	ds stc 
  40abce:	cmp    DWORD PTR [ecx+0x7fccbe0d],esi
  40abd4:	dec    ebp
  40abd5:	push   ebx
  40abd6:	fcom   st(6)
  40abd8:	xchg   ebp,eax
  40abd9:	enter  0x848,0xa5
  40abdd:	sbb    dh,bl
  40abdf:	rcr    DWORD PTR [ebx],1
  40abe1:	lds    esi,FWORD PTR ds:0x1810f1a5
  40abe7:	add    DWORD PTR [eax-0x4d901b32],0x3
  40abee:	out    dx,al
  40abef:	call   0x67f75e91
  40abf4:	pop    edi
  40abf5:	xchg   ecx,eax
  40abf6:	adc    DWORD PTR [esi+0x6e3c4d97],esi
  40abfc:	retf   
  40abfd:	dec    esi
  40abfe:	sahf   
  40abff:	inc    ecx
  40ac00:	xor    DWORD PTR [ebx],ebp
  40ac02:	xchg   ebx,eax
  40ac03:	popf   
  40ac04:	es nop
  40ac06:	jmp    0x6aa7:0xbc191c95
  40ac0d:	pop    ds
  40ac0e:	cmc    
  40ac0f:	and    ah,bl
  40ac11:	popa   
  40ac12:	sbb    eax,DWORD PTR [eax-0x2f]
  40ac15:	lods   eax,DWORD PTR ds:[esi]
  40ac16:	data16 (bad) 
  40ac18:	cdq    
  40ac19:	pop    edx
  40ac1a:	xor    BYTE PTR [edi+ebp*8+0x56],0xff
  40ac1f:	loope  0x40ac2d
  40ac21:	clc    
  40ac22:	in     eax,dx
  40ac23:	jg     0x40ac8c
  40ac25:	mov    bl,0x46
  40ac27:	mov    ss,ecx
  40ac29:	cmp    eax,0xb3287d5d
  40ac2e:	sbb    BYTE PTR [edx-0x75],0xfb
  40ac32:	in     eax,dx
  40ac33:	call   0x66b12dfd
  40ac38:	in     al,dx
  40ac39:	mov    dl,0x55
  40ac3b:	loope  0x40abcb
  40ac3d:	jno    0x40acac
  40ac3f:	data16 lods al,BYTE PTR ds:[esi]
  40ac41:	dec    edx
  40ac42:	lea    ebp,[ecx-0x61]
  40ac45:	push   0x38cac638
  40ac4a:	cwde   
  40ac4b:	out    dx,eax
  40ac4c:	lea    ecx,[ecx+0x44]
  40ac4f:	cmp    al,BYTE PTR [edx]
  40ac51:	mov    al,ds:0x66a8faf0
  40ac56:	add    ch,dl
  40ac58:	add    DWORD PTR [edi+0x3affdc9d],edx
  40ac5e:	push   edi
  40ac5f:	jae    0x40acc9
  40ac61:	add    DWORD PTR [ebp+edx*8+0x1d],edi
  40ac65:	sub    al,0xe8
  40ac67:	push   ds
  40ac68:	lock xchg DWORD PTR [eax],ecx
  40ac6b:	pop    ebx
  40ac6c:	imul   ecx,DWORD PTR [esi-0x57],0xe128e609
  40ac73:	out    dx,eax
  40ac74:	mov    ebp,0xd3ec3287
  40ac79:	mov    dl,0xb
  40ac7b:	lods   eax,DWORD PTR ds:[esi]
  40ac7c:	pop    ds
  40ac7d:	cmp    eax,0xf9774e72
  40ac82:	std    
  40ac83:	push   bp
  40ac85:	aam    0xb7
  40ac87:	dec    sp
  40ac89:	jbe    0x40ac2c
  40ac8b:	pop    ecx
  40ac8c:	stos   BYTE PTR es:[edi],al
  40ac8d:	sub    esp,DWORD PTR [esi+0x70]
  40ac90:	mov    ds:0x8b4f9eb1,al
  40ac95:	rcl    bl,cl
  40ac97:	xor    DWORD PTR [esi+0x71ad10c1],0x9ec9adbd
  40aca1:	or     esp,DWORD PTR [ebx]
  40aca3:	inc    esi
  40aca4:	push   esi
  40aca5:	scas   al,BYTE PTR es:[edi]
  40aca6:	push   edx
  40aca7:	sub    dl,cl
  40aca9:	mov    edi,0x51294b13
  40acae:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40acaf:	pop    ebp
  40acb0:	inc    eax
  40acb1:	jbe    0x40ace0
  40acb3:	xchg   esp,eax
  40acb4:	mov    esp,0x34af5f3f
  40acb9:	(bad)  
  40acba:	jo     0x40ad24
  40acbc:	stc    
  40acbd:	jmp    0xa46d7eba
  40acc2:	outs   dx,DWORD PTR ds:[esi]
  40acc3:	in     eax,0x8f
  40acc5:	sbb    bl,0xe7
  40acc8:	into   
  40acc9:	dec    edi
  40acca:	or     DWORD PTR [ecx+0x50],edx
  40accd:	call   0xb42e8cb2
  40acd2:	add    DWORD PTR [edx+ebp*2],ebx
  40acd5:	outs   dx,DWORD PTR ds:[esi]
  40acd6:	add    eax,0xbf1b35a8
  40acdb:	and    al,0x28
  40acdd:	adc    ch,dl
  40acdf:	dec    eax
  40ace0:	push   edx
  40ace1:	int    0x8a
  40ace3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ace4:	push   esp
  40ace5:	add    BYTE PTR [ebx],bh
  40ace7:	std    
  40ace8:	or     ebx,DWORD PTR [ebp+0xe]
  40aceb:	sbb    eax,0xe93da464
  40acf0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40acf1:	pop    ebx
  40acf2:	je     0x40acd8
  40acf4:	add    cl,BYTE PTR ds:0x5004e8e5
  40acfa:	jmp    DWORD PTR [edx-0x4f11d3ba]
  40ad00:	jp     0x40acb5
  40ad02:	add    ch,dh
  40ad04:	je     0x40ad7f
  40ad06:	mov    cl,0xd
  40ad08:	iret   
  40ad09:	repz sub esp,DWORD PTR [edi+0x6]
  40ad0d:	in     eax,dx
  40ad0e:	jne    0x40acbd
  40ad10:	pop    ss
  40ad11:	aaa    
  40ad12:	ins    DWORD PTR es:[edi],dx
  40ad13:	xchg   ebp,eax
  40ad14:	sahf   
  40ad15:	jg     0xce713bfa
  40ad1b:	pushf  
  40ad1c:	es inc esp
  40ad1e:	push   edx
  40ad1f:	mov    al,ds:0xab6dffa5
  40ad24:	lahf   
  40ad25:	clc    
  40ad26:	mov    edx,0x36204bea
  40ad2b:	mov    ss,WORD PTR [edx+0x2048481d]
  40ad31:	mov    ds:0x1977ef37,al
  40ad36:	or     DWORD PTR [edx-0x6bbf6339],eax
  40ad3c:	call   0x4a41280d
  40ad41:	paddsw mm0,QWORD PTR [edx+0x6e]
  40ad45:	mov    dl,0x68
  40ad47:	clc    
  40ad48:	ret    0x4a4
  40ad4b:	int    0xf7
  40ad4d:	xchg   BYTE PTR [ebx+0xf3517a1],al
  40ad53:	jno    0x40ad4a
  40ad55:	mov    dh,0x3b
  40ad57:	clc    
  40ad58:	fsub   DWORD PTR [edx+ebx*8]
  40ad5b:	sbb    BYTE PTR [edi-0x43],0xff
  40ad5f:	jge    0xfc278c52
  40ad65:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ad66:	out    0xfd,al
  40ad68:	sbb    eax,DWORD PTR [esi]
  40ad6a:	pop    ds
  40ad6b:	and    eax,esp
  40ad6d:	xchg   esi,eax
  40ad6e:	rcr    BYTE PTR [esp+esi*8+0x4bd1f732],1
  40ad75:	jge    0x40ada7
  40ad77:	sub    bl,BYTE PTR [esi]
  40ad79:	ret    
  40ad7a:	mov    cl,0x4c
  40ad7c:	ret    0x8aa1
  40ad7f:	and    al,0x23
  40ad81:	sbb    BYTE PTR [edx-0x5cb49113],bh
  40ad87:	xchg   ebx,eax
  40ad88:	sub    ecx,DWORD PTR [eax-0x690e6636]
  40ad8e:	pop    ecx
  40ad8f:	mov    cl,0x80
  40ad91:	arpl   WORD PTR [edi-0x75e31daf],ax
  40ad97:	ret    
  40ad98:	jnp    0x40ad5d
  40ad9a:	fidiv  DWORD PTR [esi-0x39]
  40ad9d:	pop    esi
  40ad9e:	dec    ebp
  40ad9f:	xor    BYTE PTR [ecx+ecx*8],bh
  40ada2:	push   ebx
  40ada3:	popa   
  40ada4:	call   0xc803bb32
  40ada9:	push   esp
  40adaa:	into   
  40adab:	fbld   TBYTE PTR [eax+0x62]
  40adae:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40adaf:	cdq    
  40adb0:	push   ebp
  40adb1:	xor    al,0x35
  40adb3:	mov    BYTE PTR [ebp+edi*8+0xa42c79],ch
  40adba:	retf   0x7213
  40adbd:	xor    al,0x4e
  40adbf:	loopne 0x40adb9
  40adc1:	inc    ebp
  40adc2:	push   edi
  40adc3:	adc    DWORD PTR [ebx+0x15e89037],ebp
  40adc9:	cwde   
  40adca:	imul   sp,WORD PTR [ebx],0x48
  40adce:	into   
  40adcf:	jmp    0x3f3a:0x59c2162a
  40add6:	outs   dx,DWORD PTR ds:[esi]
  40add7:	jl     0x40adac
  40add9:	sub    edi,edi
  40addb:	outs   dx,BYTE PTR ds:[esi]
  40addc:	loop   0x40ad6e
  40adde:	frstor [edx+ebx*8-0x62]
  40ade2:	shl    BYTE PTR [edi+0x17ae058c],0x5d
  40ade9:	and    al,0xec
  40adeb:	pushf  
  40adec:	push   ss
  40aded:	inc    eax
  40adee:	mov    ebx,0x55564bcd
  40adf3:	popf   
  40adf4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40adf5:	repnz pop esp
  40adf7:	dec    DWORD PTR [edi+0x7e]
  40adfa:	scas   al,BYTE PTR es:[edi]
  40adfb:	and    eax,0x6e385fa6
  40ae00:	lods   al,BYTE PTR ds:[esi]
  40ae01:	dec    eax
  40ae02:	xor    ch,BYTE PTR [esi]
  40ae04:	add    cl,BYTE PTR gs:[edi]
  40ae07:	mov    edx,ecx
  40ae09:	jno    0x40ae20
  40ae0b:	xchg   BYTE PTR [esi+0x384a282c],dl
  40ae11:	and    BYTE PTR [ebp+0xdee69f9],ch
  40ae17:	repnz fistp QWORD PTR [ecx]
  40ae1a:	retf   0xe3fe
  40ae1d:	mov    eax,0xc085f8d6
  40ae22:	je     0x409cb7
  40ae28:	and    DWORD PTR [ebx],0x0
  40ae2b:	mov    eax,ds:0x4211a0
  40ae30:	mov    eax,DWORD PTR [eax+0x198]
  40ae36:	and    DWORD PTR [eax],0x0
  40ae39:	dec    DWORD PTR ds:0x4212a0
  40ae3f:	jmp    0x409cb7
  40ae44:	pop    edi
  40ae45:	pop    esi
  40ae46:	leave  
  40ae47:	ret    
  40ae48:	mov    dl,0x3f
  40ae4a:	or     al,0xb8
  40ae4c:	lea    edi,[ebx-0x36f5c04a]
  40ae52:	push   ds
  40ae53:	sub    bh,BYTE PTR [edi+0x73065596]
  40ae59:	push   ss
  40ae5a:	add    BYTE PTR [eax],al
  40ae5c:	xor    eax,0x24000003
  40ae61:	scas   eax,DWORD PTR es:[edi]
  40ae62:	sub    al,BYTE PTR [esi+0x377ba155]
  40ae68:	push   0xffffffec
  40ae6a:	mov    dl,0x57
  40ae6c:	in     al,0xc6
  40ae6e:	inc    edi
  40ae6f:	(bad)
  40ae72:	push   ebx
  40ae73:	sbb    DWORD PTR [ebp-0x78],edi
  40ae76:	fmul   st,st(7)
  40ae78:	loopne 0x40aec9
  40ae7a:	cdq    
  40ae7b:	mov    al,ds:0x19f961e5
  40ae80:	push   ebx
  40ae81:	ins    DWORD PTR es:[edi],dx
  40ae82:	mov    bh,0x3b
  40ae84:	push   esi
  40ae85:	sahf   
  40ae86:	retf   
  40ae87:	mov    eax,0xce19677c
  40ae8c:	pusha  
  40ae8d:	jmp    0x40ae3d
  40ae8f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ae90:	cmp    eax,0x46c627c3
  40ae95:	xor    ecx,eax
  40ae97:	scas   al,BYTE PTR es:[edi]
  40ae98:	jae    0x40ae1c
  40ae9a:	jne    0x40aeda
  40ae9c:	or     DWORD PTR [ecx+0x1006cf30],ecx
  40aea2:	and    dh,bl
  40aea4:	(bad)  
  40aea5:	std    
  40aea6:	mov    dl,0x3f
  40aea8:	mov    BYTE PTR [edx-0x27],0x19
  40aeac:	in     al,dx
  40aead:	mov    esi,0x3d59bf0a
  40aeb2:	mov    dh,0x1e
  40aeb4:	inc    esi
  40aeb5:	in     eax,dx
  40aeb6:	in     eax,0x59
  40aeb8:	or     ebx,ecx
  40aeba:	iret   
  40aebb:	sti    
  40aebc:	mov    ecx,0xd0e273d0
  40aec1:	loope  0x40af09
  40aec3:	cmp    ch,BYTE PTR [ecx+0x4c5042a8]
  40aec9:	and    al,0x9e
  40aecb:	xchg   ebp,eax
  40aecc:	hlt    
  40aecd:	ja     0x40ae78
  40aecf:	repz jp 0x40aea6
  40aed2:	stos   DWORD PTR es:[edi],eax
  40aed3:	push   ebx
  40aed4:	push   edx
  40aed5:	push   ds
  40aed6:	fiadd  WORD PTR [ebx]
  40aed8:	aaa    
  40aed9:	cmp    esp,DWORD PTR [ebp-0x7f]
  40aedc:	out    0x20,al
  40aede:	and    BYTE PTR [ebp+ebx*8-0xc7611ea],bh
  40aee5:	sahf   
  40aee6:	(bad)  [eax+0x40cc409f]
  40aeec:	add    BYTE PTR [eax-0x1d],dl
  40aeef:	shl    ebx,cl
  40aef1:	sub    eax,DWORD PTR [edi]
  40aef3:	mov    ch,BYTE PTR [ebp+0x511fb5d5]
  40aef9:	add    al,BYTE PTR ds:0x6693e042
  40aeff:	(bad)  
  40af00:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40af01:	mov    edi,0x8a3f1e0
  40af06:	dec    esi
  40af07:	rcl    DWORD PTR [edi],0xd1
  40af0a:	add    eax,0x4feb2127
  40af0f:	scas   al,BYTE PTR es:[edi]
  40af10:	sbb    DWORD PTR [ecx-0x36b86444],ebp
  40af16:	xchg   ebp,eax
  40af17:	jbe    0x40aec0
  40af19:	test   eax,0x3ca51418
  40af1e:	inc    ebp
  40af1f:	ja     0x40aeab
  40af21:	ds adc ecx,ebx
  40af24:	inc    BYTE PTR ds:0xdae68df5
  40af2a:	out    0x8a,al
  40af2c:	shl    edi,0xe9
  40af2f:	in     eax,dx
  40af30:	in     eax,dx
  40af31:	out    dx,al
  40af32:	aad    0x80
  40af34:	(bad)  
  40af35:	loopne 0x40af5d
  40af37:	mov    esp,0xc2ab67ae
  40af3c:	pop    ebp
  40af3d:	sub    al,0x85
  40af3f:	adc    dl,cl
  40af41:	xor    DWORD PTR [esi-0x76],0x2dddfcf8
  40af48:	or     cl,dh
  40af4a:	fwait
  40af4b:	ins    DWORD PTR es:[edi],dx
  40af4c:	and    BYTE PTR [edi+ebx*1+0x3d],ah
  40af50:	add    eax,0xbb16f79f
  40af55:	inc    ebp
  40af56:	pop    ebp
  40af57:	lods   al,BYTE PTR ds:[esi]
  40af58:	sbb    DWORD PTR [esp+esi*8-0x1a5a69db],eax
  40af5f:	jp     0x40af81
  40af61:	pop    edx
  40af62:	pushf  
  40af63:	ret    0x719b
  40af66:	xor    esp,ebp
  40af68:	dec    ebp
  40af69:	jne    0x40af94
  40af6b:	ins    DWORD PTR es:[edi],dx
  40af6c:	mov    WORD PTR [edx+edx*4],gs
  40af6f:	mov    esi,0x7b703b39
  40af74:	sbb    ch,cl
  40af76:	punpckldq mm6,mm2
  40af79:	sti    
  40af7a:	sub    al,0x59
  40af7c:	xlat   BYTE PTR ds:[ebx]
  40af7d:	cdq    
  40af7e:	mov    bh,0x29
  40af80:	inc    esp
  40af81:	sub    ch,bl
  40af83:	iret   
  40af84:	fisttp DWORD PTR [ecx+0x1b]
  40af87:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40af88:	imul   eax,DWORD PTR [ebx],0xffffffd9
  40af8b:	sbb    BYTE PTR [edi+0x76],0xc6
  40af8f:	daa    
  40af90:	add    esp,DWORD PTR [ebx-0x47]
  40af93:	jno    0x40aff2
  40af95:	cmp    esp,ecx
  40af97:	dec    eax
  40af98:	cmp    edi,DWORD PTR [esi+0x725dcc97]
  40af9e:	mov    WORD PTR [ebx-0x1c4c0050],ss
  40afa4:	iret   
  40afa5:	inc    eax
  40afa6:	adc    DWORD PTR [ecx+0x50b9dd6f],eax
  40afac:	dec    ecx
  40afad:	sbb    ebx,DWORD PTR [ebp+0x63]
  40afb0:	push   ebp
  40afb1:	dec    ecx
  40afb2:	xor    edx,edx
  40afb4:	fdivr  DWORD PTR [edx]
  40afb6:	sbb    DWORD PTR [esi-0x5d],ebx
  40afb9:	mov    ah,0x2c
  40afbb:	je     0x40b011
  40afbd:	iret   
  40afbe:	aam    0x15
  40afc0:	mov    edx,0xc53ba199
  40afc5:	push   ds
  40afc6:	sub    BYTE PTR [ebp+eax*2-0x35],dl
  40afca:	sub    al,BYTE PTR [ecx+edi*2]
  40afcd:	in     al,dx
  40afce:	mov    esp,0x17e37d5e
  40afd3:	mov    ebp,0x421f8b88
  40afd8:	ins    BYTE PTR es:[edi],dx
  40afd9:	in     eax,dx
  40afda:	cmp    al,0x6a
  40afdc:	mov    dl,0xf2
  40afde:	add    BYTE PTR ds:0xcc2bfd40,dh
  40afe4:	pop    ss
  40afe5:	or     al,0xe0
  40afe7:	icebp  
  40afe8:	jns    0x40affb
  40afea:	test   BYTE PTR [ebx],ch
  40afec:	push   esp
  40afed:	les    ebx,FWORD PTR [edx+eax*1]
  40aff0:	js     0x40afef
  40aff2:	test   BYTE PTR [esi-0x65323ae6],0x93
  40aff9:	push   ebx
  40affa:	out    dx,eax
  40affb:	xchg   ebp,eax
  40affc:	std    
  40affd:	cdq    
  40affe:	xchg   ebx,eax
  40afff:	jp     0x40b07d
  40b001:	ficom  DWORD PTR [esi*2-0xcb1ac62]
  40b008:	popa   
  40b009:	push   ds
  40b00a:	retf   0xf94a
  40b00d:	pop    eax
  40b00e:	enter  0xc3b5,0x69
  40b012:	push   edx
  40b013:	fistp  DWORD PTR [edi+0x119b7a95]
  40b019:	stc    
  40b01a:	rol    eax,1
  40b01c:	imul   eax,DWORD PTR es:[ecx],0x1636639f
  40b023:	inc    eax
  40b024:	mov    edi,0xb17a83b7
  40b029:	loopne 0x40aff3
  40b02b:	ror    DWORD PTR [edx+0x2e],0x25
  40b02f:	cmp    dl,BYTE PTR [edi]
  40b031:	scas   al,BYTE PTR es:[edi]
  40b032:	in     eax,dx
  40b033:	inc    ecx
  40b034:	sbb    eax,0xe5fae19c
  40b039:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b03a:	dec    ecx
  40b03b:	sub    eax,0xf89db6a9
  40b040:	add    dl,BYTE PTR [edi+ebx*2-0x17972839]
  40b047:	mov    bl,0x16
  40b049:	scas   eax,DWORD PTR es:[edi]
  40b04a:	repz shr al,cl
  40b04d:	push   esi
  40b04e:	add    eax,0xc24c81f2
  40b053:	dec    ebp
  40b054:	in     al,dx
  40b055:	dec    edi
  40b056:	ret    0xc658
  40b059:	mov    esp,0x1d55d451
  40b05e:	imul   eax,DWORD PTR [edx-0x4ff0928d],0xb53622c1
  40b068:	cmp    eax,0xb4635bf7
  40b06d:	add    edi,DWORD PTR [eax-0x5]
  40b070:	add    al,0x14
  40b072:	loopne 0x40b070
  40b074:	ins    BYTE PTR es:[edi],dx
  40b075:	(bad)  
  40b076:	or     al,0xf4
  40b078:	sbb    edx,edi
  40b07a:	pop    eax
  40b07b:	in     al,0xe2
  40b07d:	clc    
  40b07e:	fst    DWORD PTR [ebx+0x3cd95fd9]
  40b084:	or     al,0xc6
  40b086:	jb     0x40b03b
  40b088:	(bad)  
  40b089:	jb     0x40b0a8
  40b08b:	mov    dl,0x1b
  40b08d:	outs   dx,BYTE PTR ds:[esi]
  40b08e:	mov    cl,0xe6
  40b090:	fsubr  DWORD PTR [ecx+0xb]
  40b093:	call   0x6698:0x29a38a61
  40b09a:	retf   
  40b09b:	push   esp
  40b09c:	mov    ah,0xd0
  40b09e:	sbb    bl,bl
  40b0a0:	or     eax,0x9411179b
  40b0a5:	int3   
  40b0a6:	icebp  
  40b0a7:	jno    0x40b11e
  40b0a9:	pop    edi
  40b0aa:	neg    DWORD PTR [eax-0x4a28e55]
  40b0b0:	push   ss
  40b0b1:	cmc    
  40b0b2:	inc    esp
  40b0b3:	mov    eax,ds:0x52b17260
  40b0b8:	xlat   BYTE PTR ds:[ebx]
  40b0b9:	inc    eax
  40b0ba:	jb     0x40b04a
  40b0bc:	sub    BYTE PTR [edi-0x68],dl
  40b0bf:	pop    edx
  40b0c0:	sub    ebx,DWORD PTR [esi]
  40b0c2:	ja     0x40b050
  40b0c4:	sub    DWORD PTR [ebx+ebx*2-0x73],ecx
  40b0c8:	jae    0x40b086
  40b0ca:	iret   
  40b0cb:	dec    edi
  40b0cc:	pop    edx
  40b0cd:	ret    0x517
  40b0d0:	sub    dh,BYTE PTR [ecx]
  40b0d2:	rcr    esp,1
  40b0d4:	push   ebx
  40b0d5:	in     eax,0xe
  40b0d7:	dec    ecx
  40b0d8:	jmp    0xa911:0xce9d554
  40b0df:	ror    bh,cl
  40b0e1:	dec    ecx
  40b0e2:	repnz or bh,dl
  40b0e5:	(bad)  [ebx]
  40b0e7:	and    eax,0xc27e0e82
  40b0ec:	cmp    ebp,DWORD PTR [esi+0x74fe75f8]
  40b0f2:	iret   
  40b0f3:	cmp    DWORD PTR ss:[esi-0x4157a43a],edx
  40b0fa:	xchg   ecx,eax
  40b0fb:	data16 and bl,bl
  40b0fe:	jp     0x40b110
  40b100:	aad    0xb6
  40b102:	in     al,0x77
  40b104:	mov    ch,0x20
  40b106:	scas   al,BYTE PTR es:[edi]
  40b107:	dec    ebx
  40b108:	pop    esi
  40b109:	scas   eax,DWORD PTR es:[edi]
  40b10a:	xor    al,0x4a
  40b10c:	xchg   esp,eax
  40b10d:	sbb    DWORD PTR [eax],edi
  40b10f:	rcr    BYTE PTR [ebx+0x76610bf],cl
  40b115:	cli    
  40b116:	mov    fs,WORD PTR [ebx+0x33]
  40b119:	mov    ds:0xa1c5282c,eax
  40b11e:	dec    edx
  40b11f:	sub    BYTE PTR [esi-0x69],bl
  40b122:	scas   eax,DWORD PTR es:[edi]
  40b123:	sbb    DWORD PTR [ebp-0x3a],ecx
  40b126:	and    ebp,DWORD PTR [esi+0x44391b12]
  40b12c:	fstp   DWORD PTR [eax+0x10e0ba0f]
  40b132:	adc    al,0x5c
  40b134:	(bad)  
  40b135:	jnp    0x40b0f2
  40b137:	lods   eax,DWORD PTR ds:[esi]
  40b138:	repnz mov al,0xf9
  40b13b:	or     eax,0x310b9da
  40b140:	fistp  WORD PTR [edx+0x68]
  40b143:	xchg   edx,eax
  40b144:	ins    DWORD PTR es:[edi],dx
  40b145:	or     eax,0x6405a411
  40b14a:	(bad)  
  40b14b:	jo     0x40b16d
  40b14d:	sub    bh,BYTE PTR [edi+0x62]
  40b150:	(bad)  
  40b151:	lock js 0x40b0e1
  40b154:	add    eax,0x197e339
  40b159:	or     DWORD PTR [esi-0x29b1d996],ebp
  40b15f:	mov    bh,0x3e
  40b161:	cdq    
  40b162:	jo     0x40b137
  40b164:	jl     0x40b18f
  40b166:	mov    edx,0x52ddc52c
  40b16b:	push   0x151daa94
  40b170:	das    
  40b171:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b172:	stc    
  40b173:	add    BYTE PTR [edx],0xf6
  40b176:	mov    dh,0x35
  40b178:	test   BYTE PTR [ebx+0x8926ac7],al
  40b17e:	mov    WORD PTR [edi],ss
  40b180:	loop   0x40b16b
  40b182:	pop    esp
  40b183:	cmp    BYTE PTR [ecx+0x5acdb9c4],bh
  40b189:	xor    ah,cl
  40b18b:	pop    esp
  40b18c:	sbb    eax,0x1dce9a4e
  40b191:	sub    bh,bl
  40b193:	sub    BYTE PTR [esi+0x51ec8b55],0xc7
  40b19a:	add    eax,0x4236f4
  40b19f:	sbb    DWORD PTR [eax],eax
  40b1a1:	add    BYTE PTR [eax],al
  40b1a3:	cmp    DWORD PTR ds:0x4236f4,0x0
  40b1aa:	je     0x40b1fd
  40b1b0:	cmp    DWORD PTR ds:0x4236f4,0xc
  40b1b7:	jne    0x40b1d5
  40b1bd:	push   0x46ec
  40b1c2:	push   0x34e2
  40b1c7:	push   0x421631
  40b1cc:	push   DWORD PTR [ebp-0x24]
  40b1cf:	call   DWORD PTR ds:0x41f030
  40b1d5:	cmp    DWORD PTR ds:0x4236f4,0xd
  40b1dc:	jne    0x40b1ed
  40b1e2:	mov    eax,ds:0x4236f4
  40b1e7:	dec    eax
  40b1e8:	mov    ds:0x4236f4,eax
  40b1ed:	mov    eax,ds:0x4236f4
  40b1f2:	dec    eax
  40b1f3:	mov    ds:0x4236f4,eax
  40b1f8:	jmp    0x40b1a3
  40b1fd:	push   ecx
  40b1fe:	or     DWORD PTR ds:0x4236f8,0x200c
  40b208:	mov    DWORD PTR [ebp-0x8],0xffffffff
  40b20f:	mov    DWORD PTR [ebp-0x4],0xfffffffc
  40b216:	add    eax,edx
  40b218:	mov    eax,DWORD PTR [ebp-0x4]
  40b21b:	push   esi
  40b21c:	mov    esi,DWORD PTR [ebp-0x8]
  40b21f:	sub    edx,DWORD PTR ds:0x4236b0
  40b225:	mov    edx,0x300a
  40b22a:	xor    DWORD PTR ds:0x4236a8,0x1c46
  40b234:	xor    eax,edx
  40b236:	sub    DWORD PTR ds:0x4236ac,0x4236f4
  40b240:	xor    esi,edx
  40b242:	add    DWORD PTR ds:0x4236f8,0x4214d4
  40b24c:	lea    ecx,[edx+0x1]
  40b24f:	add    esi,ecx
  40b251:	adc    DWORD PTR ds:0x423670,0x423738
  40b25b:	add    eax,ecx
  40b25d:	xor    DWORD PTR ds:0x4214d4,0x4214dc
  40b267:	jmp    0x40b70b
  40b26c:	test   BYTE PTR [edx+0x68],bl
  40b26f:	sub    bh,dh
  40b271:	cmp    al,dh
  40b273:	inc    BYTE PTR [eax+0x49ab1579]
  40b279:	adc    eax,0xa2757346
  40b27e:	add    BYTE PTR [eax],al
  40b280:	xchg   DWORD PTR [eax+eax*1],eax
  40b283:	add    bl,ch
  40b285:	add    eax,0x7557e0e2
  40b28a:	dec    ebp
  40b28b:	push   cs
  40b28c:	(bad)  
  40b28d:	and    DWORD PTR [ecx],esp
  40b28f:	repnz fwait
  40b291:	loopne 0x40b24e
  40b293:	adc    al,0x58
  40b295:	bound  ebp,QWORD PTR [edi]
  40b297:	push   0x888149dd
  40b29c:	ror    DWORD PTR [ebx],cl
  40b29e:	loop   0x40b27b
  40b2a0:	xor    edx,edi
  40b2a2:	dec    edi
  40b2a3:	dec    esi
  40b2a4:	cmp    eax,0x2d6d31ca
  40b2a9:	not    dh
  40b2ab:	xor    esi,ebp
  40b2ad:	test   BYTE PTR [edx-0x48d97208],0x92
  40b2b4:	adc    ecx,ebp
  40b2b6:	adc    BYTE PTR [eax+0x58],cl
  40b2b9:	aaa    
  40b2ba:	sahf   
  40b2bb:	adc    esp,DWORD PTR [esi+0x16]
  40b2be:	lock test al,0x69
  40b2c1:	xchg   eax,eax
  40b2c3:	or     bh,bl
  40b2c5:	jmp    ebp
  40b2c7:	dec    edx
  40b2c8:	cmp    esi,DWORD PTR [edi]
  40b2ca:	adc    bh,BYTE PTR [ebp-0x5]
  40b2cd:	fsub   st,st(2)
  40b2cf:	sub    esi,ebx
  40b2d1:	leave  
  40b2d2:	xchg   edi,eax
  40b2d3:	pop    es
  40b2d4:	or     esi,ebp
  40b2d6:	mov    BYTE PTR [ebp+0x61],ch
  40b2d9:	mov    cl,0x80
  40b2db:	mov    al,ds:0x49b84640
  40b2e0:	or     eax,0x8b8e94eb
  40b2e5:	cmp    bl,BYTE PTR [ebx+0x37]
  40b2e8:	push   es
  40b2e9:	enter  0x3085,0x11
  40b2ed:	add    eax,0x629724d
  40b2f2:	or     al,0x31
  40b2f4:	in     eax,dx
  40b2f5:	(bad)  
  40b2f6:	(bad)  
  40b2f7:	(bad)  
  40b2f8:	das    
  40b2f9:	imul   ebp
  40b2fb:	inc    esi
  40b2fc:	mov    ebp,0xdf3c6bf1
  40b301:	rol    BYTE PTR [eax+0x23],0x98
  40b305:	jnp    0x40b344
  40b307:	xor    ch,ah
  40b309:	test   DWORD PTR [ecx+0x36],0x3ce9c1ca
  40b310:	fs jp  0x40b2ea
  40b313:	pop    ss
  40b314:	jl     0x40b296
  40b316:	mov    ebx,0x22a3f807
  40b31b:	adc    ah,BYTE PTR [ebx]
  40b31d:	data16 test al,0xa7
  40b320:	pop    esp
  40b321:	div    edx
  40b323:	jl     0x40b2e6
  40b325:	int    0x3d
  40b327:	mov    ebp,0xdc7680dd
  40b32c:	inc    ecx
  40b32d:	imul   esi,DWORD PTR [edi-0x1a],0xffffffd6
  40b331:	popf   
  40b332:	or     ecx,DWORD PTR [ebx+ecx*4+0x65]
  40b336:	xchg   ebx,eax
  40b337:	xchg   esp,eax
  40b338:	xor    BYTE PTR [ecx],0xaa
  40b33b:	pop    eax
  40b33c:	(bad)  
  40b33d:	xor    dl,dh
  40b33f:	stos   BYTE PTR es:[edi],al
  40b340:	fst    QWORD PTR [esi]
  40b342:	or     BYTE PTR [eax+edx*2+0x57],bh
  40b346:	test   DWORD PTR [ebx+esi*2-0x23],esi
  40b34a:	mov    ds:0x62c10f1a,eax
  40b34f:	mov    edx,0xc5a85de6
  40b354:	cmp    ch,BYTE PTR [ebp-0x33a5a02e]
  40b35a:	das    
  40b35b:	xchg   esi,eax
  40b35c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b35d:	xchg   DWORD PTR [ebx-0x78],ecx
  40b360:	mov    al,ds:0x787c29d5
  40b365:	jecxz  0x40b309
  40b367:	iret   
  40b368:	jb     0x40b30c
  40b36a:	xor    bh,BYTE PTR [ecx-0x3007a2c1]
  40b370:	mov    ch,0xc
  40b372:	icebp  
  40b373:	sbb    edx,ebx
  40b375:	(bad)  
  40b376:	ficomp WORD PTR [ebx-0x5dd82f7d]
  40b37c:	xchg   ebx,eax
  40b37d:	rep ins DWORD PTR es:[edi],dx
  40b37f:	or     dl,BYTE PTR [ebx+0x54]
  40b382:	sub    dl,0x86
  40b385:	out    0xc7,eax
  40b387:	in     al,dx
  40b388:	pop    es
  40b389:	push   ebp
  40b38a:	jnp    0x40b386
  40b38c:	stc    
  40b38d:	cmp    DWORD PTR [ebp-0x4c60574],ebx
  40b393:	mov    BYTE PTR [edx+0x4a],bh
  40b396:	retf   
  40b397:	add    al,0x98
  40b399:	imul   edi,DWORD PTR [ebx],0x3d
  40b39c:	push   edi
  40b39d:	and    ebp,DWORD PTR [edx+eax*4+0x38]
  40b3a1:	cmp    al,0x22
  40b3a3:	aas    
  40b3a4:	fcom   QWORD PTR [eax]
  40b3a6:	shr    BYTE PTR [eax],cl
  40b3a8:	test   eax,0xf8c3da02
  40b3ad:	and    al,0x8f
  40b3af:	mov    ch,0xbb
  40b3b1:	fcomp  QWORD PTR [edi+0x59]
  40b3b4:	retf   0x7dda
  40b3b7:	mov    bl,al
  40b3b9:	imul   edi,DWORD PTR [ebx-0x6d],0xc9d820fc
  40b3c0:	inc    ecx
  40b3c1:	or     DWORD PTR [ebx+0x5ebf181],edx
  40b3c7:	push   eax
  40b3c8:	jge    0x40b3eb
  40b3ca:	push   esp
  40b3cb:	in     al,dx
  40b3cc:	leave  
  40b3cd:	shr    DWORD PTR [ecx],0x7
  40b3d0:	ficom  WORD PTR [edi]
  40b3d2:	cwde   
  40b3d3:	or     BYTE PTR [esi+0x1fd32dc6],dl
  40b3d9:	mov    edi,0x19c4e15b
  40b3de:	sbb    edx,esp
  40b3e0:	fistp  WORD PTR [edi-0x57e0843]
  40b3e6:	ins    BYTE PTR es:[edi],dx
  40b3e7:	inc    eax
  40b3e8:	mov    bl,0x9b
  40b3ea:	hlt    
  40b3eb:	mov    eax,ds:0x2215417f
  40b3f0:	inc    edx
  40b3f1:	icebp  
  40b3f2:	push   ecx
  40b3f3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b3f4:	enter  0x1ad5,0xa1
  40b3f8:	in     al,dx
  40b3f9:	sub    dh,BYTE PTR [ebp+0x5270fd47]
  40b3ff:	jno    0x40b479
  40b401:	int    0x67
  40b403:	jg     0x40b391
  40b405:	mov    ecx,DWORD PTR [edi]
  40b407:	push   0xc214857e
  40b40c:	sub    BYTE PTR [edx+0x54],dh
  40b40f:	jne    0x40b46a
  40b411:	cmc    
  40b412:	fs ja  0x40b3a0
  40b415:	mov    eax,0xba2fe598
  40b41a:	sub    ebx,ebx
  40b41c:	and    al,0xe3
  40b41e:	les    ebx,FWORD PTR [eax+0x3d]
  40b421:	mov    ecx,0xfb54d9d7
  40b426:	jb     0x40b424
  40b428:	mov    edi,0xfb73cebe
  40b42d:	inc    edx
  40b42e:	in     al,0x29
  40b430:	ss jmp 0xb94ba7a8
  40b436:	stos   DWORD PTR es:[edi],eax
  40b437:	das    
  40b438:	cmp    al,0x72
  40b43a:	call   DWORD PTR [eax-0x52]
  40b43d:	pop    edx
  40b43e:	pop    edx
  40b43f:	lahf   
  40b440:	imul   esp,ebx,0xffffffe8
  40b443:	mov    ah,BYTE PTR [ecx]
  40b445:	and    ah,bh
  40b447:	stc    
  40b448:	mov    ebx,ds
  40b44a:	std    
  40b44b:	sar    DWORD PTR [ebp-0x1f],1
  40b44e:	push   ebx
  40b44f:	jecxz  0x40b467
  40b451:	call   0x35b54864
  40b456:	mov    ds,WORD PTR [esi+0x11]
  40b459:	and    al,BYTE PTR [ebx+ebx*8]
  40b45c:	dec    ecx
  40b45d:	ret    0xcfcb
  40b460:	mov    ah,0x5d
  40b462:	sti    
  40b463:	push   cs
  40b464:	cmp    BYTE PTR [edx+edi*1],ch
  40b467:	or     al,0x66
  40b469:	hlt    
  40b46a:	xor    al,0xbd
  40b46c:	mov    DWORD PTR [esi],edi
  40b46e:	cdq    
  40b46f:	(bad)  
  40b470:	push   eax
  40b471:	call   0x84534346
  40b476:	mov    dh,0x6f
  40b478:	mov    esp,0x5fa3b6f7
  40b47d:	adc    cl,BYTE PTR [ebx-0x63]
  40b480:	(bad)  
  40b481:	leave  
  40b482:	xchg   ebx,eax
  40b483:	ret    
  40b484:	push   0xffffff97
  40b486:	aas    
  40b487:	inc    ecx
  40b488:	jecxz  0x40b468
  40b48a:	push   edx
  40b48b:	mov    cl,al
  40b48d:	loop   0x40b467
  40b48f:	in     eax,0xf8
  40b491:	arpl   dx,si
  40b493:	xlat   BYTE PTR ds:[ebx]
  40b494:	jns    0x40b46c
  40b496:	std    
  40b497:	adc    ebx,edi
  40b499:	adc    edi,DWORD PTR [edx-0x3c95c7fb]
  40b49f:	mov    dh,0x6b
  40b4a1:	add    eax,0x3498d9ca
  40b4a6:	ins    DWORD PTR es:[edi],dx
  40b4a7:	sbb    al,0xc0
  40b4a9:	mov    bl,0x1e
  40b4ab:	pop    ecx
  40b4ac:	addr16 out 0x12,al
  40b4af:	dec    edi
  40b4b0:	sbb    ebp,ecx
  40b4b2:	mov    esp,DWORD PTR [ebx]
  40b4b4:	mov    DWORD PTR [ebp+0x4a],esp
  40b4b7:	push   cs
  40b4b8:	retf   
  40b4b9:	dec    esi
  40b4ba:	sbb    al,0x3d
  40b4bc:	pop    ss
  40b4bd:	in     al,0x30
  40b4bf:	fidivr DWORD PTR [ecx]
  40b4c1:	not    BYTE PTR [ebx-0x56b549dd]
  40b4c7:	adc    dh,BYTE PTR [eax]
  40b4c9:	push   ds
  40b4ca:	inc    ecx
  40b4cb:	cmp    ebx,ecx
  40b4cd:	bound  edx,QWORD PTR [ebx]
  40b4cf:	mov    esp,ebp
  40b4d1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b4d2:	sub    bh,al
  40b4d4:	inc    ebx
  40b4d5:	mov    al,ds:0xef4451a9
  40b4da:	lahf   
  40b4db:	and    ecx,DWORD PTR [esi]
  40b4dd:	cmp    al,0xcb
  40b4df:	inc    edx
  40b4e0:	inc    eax
  40b4e1:	mov    ecx,0x71aeb34e
  40b4e6:	lock add bl,BYTE PTR [ecx+0x42]
  40b4ea:	adc    cl,BYTE PTR [eax+0x4a55bf61]
  40b4f0:	popa   
  40b4f1:	lods   eax,DWORD PTR ds:[esi]
  40b4f2:	out    dx,al
  40b4f3:	outs   dx,DWORD PTR ds:[esi]
  40b4f4:	test   DWORD PTR [esi],ebp
  40b4f6:	jl     0x40b557
  40b4f8:	ret    
  40b4f9:	jbe    0x40b563
  40b4fb:	dec    eax
  40b4fc:	jns    0x40b514
  40b4fe:	dec    edx
  40b4ff:	lods   al,BYTE PTR ds:[esi]
  40b500:	ins    DWORD PTR es:[edi],dx
  40b501:	inc    ecx
  40b502:	mov    esp,0x6a05da55
  40b507:	xor    BYTE PTR [esi+eax*8-0x5d59f6d9],0x1
  40b50f:	xchg   edx,eax
  40b510:	dec    ebp
  40b511:	(bad)  
  40b512:	or     al,0x61
  40b514:	xor    esi,DWORD PTR [ebp-0x80]
  40b517:	xchg   ebp,eax
  40b518:	jae    0x40b54b
  40b51a:	into   
  40b51b:	outs   dx,BYTE PTR ds:[esi]
  40b51c:	inc    esp
  40b51d:	and    eax,0xdd1310e7
  40b522:	jo     0x40b4d8
  40b524:	mov    eax,0x2ad201f
  40b529:	push   eax
  40b52a:	push   edi
  40b52b:	or     bh,BYTE PTR [ebp+0x67]
  40b52e:	pop    ecx
  40b52f:	psraw  mm5,QWORD PTR [ebp+ecx*8+0x1fb0b3bc]
  40b537:	popf   
  40b538:	dec    ebp
  40b539:	pushf  
  40b53a:	retf   
  40b53b:	cmp    dh,cl
  40b53d:	mov    esi,0xe7b54d94
  40b542:	or     al,0xd2
  40b544:	lods   eax,DWORD PTR ds:[esi]
  40b545:	adc    eax,edx
  40b547:	aas    
  40b548:	sahf   
  40b549:	(bad)  
  40b54b:	or     BYTE PTR [edi],bh
  40b54d:	push   ss
  40b54e:	lods   al,BYTE PTR ds:[esi]
  40b54f:	or     esi,ecx
  40b551:	pop    eax
  40b552:	jnp    0x40b560
  40b554:	sbb    BYTE PTR [ebx+0x75c151aa],cl
  40b55a:	pop    ebx
  40b55b:	xchg   DWORD PTR [ecx],eax
  40b55d:	inc    edi
  40b55e:	(bad)  
  40b55f:	aaa    
  40b560:	mov    ah,0x2a
  40b562:	les    esp,FWORD PTR [esi-0x1709a6ae]
  40b568:	cmp    eax,0x860bb501
  40b56d:	fmul   st(4),st
  40b56f:	retf   
  40b570:	ins    DWORD PTR es:[edi],dx
  40b571:	adc    eax,edx
  40b573:	imul   esi,DWORD PTR [ebx],0xffffffac
  40b576:	mov    ecx,0x9fd2c571
  40b57b:	jmp    0x40b5df
  40b57d:	icebp  
  40b57e:	or     ch,cl
  40b580:	adc    cl,BYTE PTR [esi+ebp*8]
  40b583:	mov    esp,0xe7f327fd
  40b588:	imul   eax,ebx,0xf1944f11
  40b58e:	(bad)  
  40b58f:	jbe    0x40b5e3
  40b591:	jnp    0x40b5de
  40b593:	jge    0x40b5da
  40b595:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b596:	lea    edx,[edx-0x6e1f87df]
  40b59c:	xchg   ebp,eax
  40b59d:	pop    eax
  40b59e:	xor    al,0xfc
  40b5a0:	test   eax,0x85b36df0
  40b5a5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b5a6:	add    BYTE PTR [edx],bl
  40b5a8:	in     al,dx
  40b5a9:	fisubr DWORD PTR [ebx+0x58]
  40b5ac:	cdq    
  40b5ad:	imul   DWORD PTR [edi+edx*4+0x1b777cc6]
  40b5b4:	pushf  
  40b5b5:	(bad)  [edx-0x3463b0a9]
  40b5bb:	mov    BYTE PTR [ebx+0x3b],dh
  40b5be:	pop    esp
  40b5bf:	stc    
  40b5c0:	je     0x40b5d1
  40b5c2:	cmp    ah,BYTE PTR [ebx-0x14829324]
  40b5c8:	adc    DWORD PTR [ecx],esp
  40b5ca:	pusha  
  40b5cb:	mov    esp,0x19a959e7
  40b5d0:	rcl    DWORD PTR ds:0x551a3155,1
  40b5d6:	jle    0x40b5ea
  40b5d8:	sbb    ecx,eax
  40b5da:	popf   
  40b5db:	add    DWORD PTR [esi-0x3b],ecx
  40b5de:	cwde   
  40b5df:	lods   al,BYTE PTR ds:[esi]
  40b5e0:	mov    ds:0x1e0fabed,al
  40b5e5:	call   0xe8e0e46f
  40b5ea:	mov    esi,0x610c9d3c
  40b5ef:	aas    
  40b5f0:	cmp    BYTE PTR [ebx+0x406f48d],dh
  40b5f6:	xchg   ch,ah
  40b5f8:	aas    
  40b5f9:	repz xchg esp,eax
  40b5fb:	mov    ds:0x5bce658f,eax
  40b600:	cs pop ecx
  40b602:	cmp    al,0xe5
  40b604:	push   edx
  40b605:	mov    ah,0xbe
  40b607:	mov    dl,0x75
  40b609:	xor    DWORD PTR [ebp-0x4b534003],ebx
  40b60f:	adc    DWORD PTR [eax-0x50],edi
  40b612:	push   ds
  40b613:	lea    ebp,ds:0xdb20995e
  40b619:	mov    dl,0xb
  40b61b:	jno    0x40b5b2
  40b61d:	fidiv  DWORD PTR [esi+0x3a8b581c]
  40b623:	mov    eax,0xc8cd6f6c
  40b628:	popf   
  40b629:	cwde   
  40b62a:	push   edx
  40b62b:	mov    al,ds:0x8f32075d
  40b630:	and    edi,esi
  40b632:	popa   
  40b633:	push   edx
  40b634:	cmp    ebx,0x79c8b965
  40b63a:	loop   0x40b67f
  40b63c:	push   ebx
  40b63d:	xrelease mov DWORD PTR [esi-0x49],esp
  40b641:	jno    0x40b604
  40b643:	push   es
  40b644:	push   es
  40b645:	cmp    eax,0x74ea9200
  40b64a:	mov    esi,0xb3c6f0d5
  40b64f:	cmp    dh,0x42
  40b652:	(bad)  
  40b653:	mov    dh,0xca
  40b655:	push   ecx
  40b656:	call   0x3008b09e
  40b65b:	ja     0x40b692
  40b65d:	dec    eax
  40b65e:	fwait
  40b65f:	push   edi
  40b660:	in     al,0x95
  40b662:	cwde   
  40b663:	es sahf 
  40b665:	push   0x31
  40b667:	push   ebp
  40b668:	aad    0x16
  40b66a:	ja     0x40b6c7
  40b66c:	push   0xc38644d6
  40b671:	push   esp
  40b672:	dec    ebx
  40b673:	xchg   cl,ah
  40b675:	jno    0x40b68d
  40b677:	xlat   BYTE PTR ds:[ebx]
  40b678:	push   ss
  40b679:	das    
  40b67a:	cmc    
  40b67b:	sub    al,0x75
  40b67d:	and    cl,BYTE PTR ds:0xbc515d7f
  40b683:	sub    DWORD PTR [edi+0x54182368],ebx
  40b689:	mov    ebp,0x5b5a330b
  40b68e:	sub    eax,0x90d43348
  40b693:	loopne 0x40b6cf
  40b695:	nop
  40b696:	and    bh,BYTE PTR [edi]
  40b698:	sub    BYTE PTR [ebx-0x7c],al
  40b69b:	hlt    
  40b69c:	add    al,0xe2
  40b69e:	jmp    0x4647:0x6bdd8bbf
  40b6a5:	and    ebp,ebx
  40b6a7:	or     bh,ch
  40b6a9:	into   
  40b6aa:	and    BYTE PTR [ebp+0x77],dh
  40b6ad:	jge    0x40b678
  40b6af:	std    
  40b6b0:	(bad)  
  40b6b1:	shl    DWORD PTR [ebx-0x30],1
  40b6b4:	or     eax,0x9a5960a5
  40b6b9:	xchg   ecx,eax
  40b6ba:	cs sub al,0x44
  40b6bd:	nop
  40b6be:	add    DWORD PTR [eax-0x2],0x22
  40b6c2:	pusha  
  40b6c3:	ret    0xe2e9
  40b6c6:	ds add eax,0x3e6689b1
  40b6cc:	imul   ecx,esi,0x8d8f4f8d
  40b6d2:	(bad)  
  40b6d3:	out    0x20,eax
  40b6d5:	in     eax,dx
  40b6d6:	cld    
  40b6d7:	jae    0x40b73d
  40b6d9:	imul   BYTE PTR [ecx]
  40b6db:	aaa    
  40b6dc:	xor    ecx,ebx
  40b6de:	mov    ebx,DWORD PTR [eax-0x1206baf4]
  40b6e4:	sbb    eax,0xad7b8a96
  40b6e9:	mov    esi,0xc521c280
  40b6ef:	cmp    al,0x53
  40b6f1:	pop    ebp
  40b6f2:	popf   
  40b6f3:	mov    eax,ds:0x451de778
  40b6f8:	and    al,ch
  40b6fa:	mov    cl,0xc3
  40b6fc:	test   eax,0xf2b689b8
  40b701:	lock test eax,0x318c26e2
  40b707:	outs   dx,BYTE PTR ds:[esi]
  40b708:	ret    
  40b709:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b70a:	push   edx
  40b70b:	imul   eax,esi
  40b70e:	mov    esi,DWORD PTR [ebp+0xc]
  40b711:	mov    DWORD PTR ds:0x4236b4,0x550a
  40b71b:	jmp    0x40bbbf
  40b720:	push   ss
  40b721:	fwait
  40b722:	mov    esi,0x76efbfce
  40b727:	fcmovnu st,st(6)
  40b729:	(bad)  
  40b72b:	jae    0x40b6f0
  40b72d:	xchg   DWORD PTR [eax+0x68],ebx
  40b730:	cld    
  40b731:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b732:	add    BYTE PTR [eax],al
  40b734:	xchg   DWORD PTR [eax+eax*1],eax
  40b737:	add    BYTE PTR [ebx+0xb],dh
  40b73a:	push   ss
  40b73b:	stc    
  40b73c:	jo     0x40b766
  40b73e:	mov    cl,0xb0
  40b740:	out    dx,eax
  40b741:	add    ebx,DWORD PTR [eax+0x662d9da0]
  40b747:	shl    DWORD PTR [eax+0x21],0x7
  40b74b:	mul    BYTE PTR [edx-0x1b24d275]
  40b751:	add    esi,DWORD PTR [esp+edx*4+0x498862ad]
  40b758:	test   BYTE PTR [ecx+0x37],bh
  40b75b:	mov    ds:0xb56c1ad5,al
  40b760:	inc    edx
  40b761:	sub    DWORD PTR [edx+0xb],edi
  40b764:	in     al,dx
  40b765:	inc    edx
  40b766:	outs   dx,BYTE PTR ds:[esi]
  40b767:	push   ebx
  40b768:	shl    DWORD PTR [ecx-0x3e],1
  40b76b:	xor    bl,dl
  40b76d:	fbstp  TBYTE PTR [edi]
  40b76f:	cmp    al,0x37
  40b771:	(bad)  
  40b772:	jnp    0x40b746
  40b774:	std    
  40b775:	dec    ecx
  40b776:	pop    esp
  40b777:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b778:	xchg   esi,eax
  40b779:	aas    
  40b77a:	mov    esi,0xd52daa0
  40b77f:	sar    DWORD PTR [ebx+eiz*8],0xfd
  40b783:	(bad)  
  40b784:	(bad)  
  40b786:	lds    esp,FWORD PTR [eax]
  40b788:	xchg   edi,eax
  40b789:	loopne 0x40b724
  40b78b:	imul   ebx,DWORD PTR [ecx+0x1b],0x4b
  40b78f:	stc    
  40b790:	mov    edi,0x44d76829
  40b795:	pop    DWORD PTR ds:0x3cf1d52b
  40b79b:	fstp   st(0)
  40b79d:	rcl    BYTE PTR [ebp+0x36],0x25
  40b7a1:	push   cs
  40b7a2:	jne    0x40b759
  40b7a4:	int3   
  40b7a5:	sub    al,BYTE PTR ds:0xa1cfff3d
  40b7ab:	mov    WORD PTR [eax-0x4e465a6a],gs
  40b7b1:	ss jecxz 0x40b817
  40b7b4:	cwde   
  40b7b5:	push   edx
  40b7b6:	bound  edx,QWORD PTR [esi-0x1cdb11fb]
  40b7bc:	pop    es
  40b7bd:	or     BYTE PTR [ebp-0x49],ah
  40b7c0:	xchg   ecx,eax
  40b7c2:	dec    edx
  40b7c3:	out    0x96,al
  40b7c5:	sub    dl,cl
  40b7c7:	(bad)  
  40b7c8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b7c9:	pop    esi
  40b7ca:	adc    DWORD PTR [ebx+0x34],ecx
  40b7cd:	mov    dl,0xe4
  40b7cf:	cdq    
  40b7d0:	xor    cl,ah
  40b7d2:	stos   DWORD PTR es:[edi],eax
  40b7d3:	shr    BYTE PTR [eax-0x47c7730d],cl
  40b7d9:	sub    ecx,DWORD PTR [ecx]
  40b7db:	addr16 inc esp
  40b7dd:	sub    ecx,esp
  40b7df:	pushf  
  40b7e0:	inc    edx
  40b7e1:	mov    ebp,0xe6aeb76a
  40b7e6:	test   DWORD PTR [edx-0x7f],esp
  40b7e9:	jae    0x40b7ae
  40b7eb:	mov    dl,0x5f
  40b7ed:	add    DWORD PTR [ebx],esi
  40b7ef:	mov    dh,0xe
  40b7f1:	(bad)  [ebx+edi*8]
  40b7f4:	cmp    al,0x51
  40b7f6:	sbb    DWORD PTR [ebp-0x39],ebx
  40b7f9:	xor    eax,0x3e3b12ec
  40b7fe:	sbb    BYTE PTR cs:[esi+0x23634ab6],0x18
  40b806:	push   eax
  40b807:	sbb    al,0x27
  40b809:	jo     0x40b794
  40b80b:	push   ebp
  40b80c:	mov    dh,BYTE PTR [edi+ebp*4]
  40b80f:	xor    cl,BYTE PTR [esi]
  40b811:	scas   al,BYTE PTR es:[edi]
  40b812:	mov    eax,0x3f0f757a
  40b817:	cmp    BYTE PTR [ebp-0x5dbbbca6],bh
  40b81d:	shl    DWORD PTR ds:0xe828d64d,1
  40b823:	pop    ebx
  40b824:	push   esi
  40b825:	out    dx,al
  40b826:	nop
  40b827:	sub    esp,DWORD PTR [eax-0x5bbfca43]
  40b82d:	js     0x40b896
  40b82f:	sub    cl,dh
  40b831:	dec    edi
  40b832:	fnstenv [esi+0x67]
  40b835:	xor    dl,BYTE PTR [ebp-0x4c]
  40b838:	push   eax
  40b839:	shr    DWORD PTR [esi],1
  40b83b:	push   esi
  40b83c:	lods   eax,DWORD PTR ds:[esi]
  40b83d:	mov    esp,0x1058bc4f
  40b842:	push   ecx
  40b843:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b844:	rcl    DWORD PTR [ebp+0x3d],1
  40b847:	mov    ebx,0x238c83c4
  40b84c:	push   0xffffffef
  40b84e:	ss pop eax
  40b850:	clc    
  40b851:	pop    edx
  40b852:	ins    BYTE PTR es:[edi],dx
  40b853:	adc    edi,edi
  40b855:	ja     0x40b82a
  40b857:	fld    TBYTE PTR [ecx+0xc]
  40b85a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b85b:	push   edi
  40b85c:	adc    cl,BYTE PTR [ebx]
  40b85e:	or     bh,dl
  40b860:	leave  
  40b861:	inc    ebp
  40b862:	ins    DWORD PTR es:[edi],dx
  40b863:	mov    edi,0xe5083e8e
  40b868:	stos   BYTE PTR es:[edi],al
  40b869:	rol    BYTE PTR ds:0x39689375,1
  40b86f:	jne    0x40b835
  40b871:	loope  0x40b8f2
  40b873:	cmc    
  40b874:	nop
  40b875:	inc    ebx
  40b876:	aaa    
  40b877:	into   
  40b878:	sub    al,BYTE PTR [ecx-0x3424d7ac]
  40b87e:	neg    ecx
  40b880:	repz ja 0x40b864
  40b883:	pop    esp
  40b884:	adc    eax,0x5e0f51d8
  40b889:	xor    al,0x51
  40b88b:	sbb    BYTE PTR [ecx-0x5db9cdc6],ah
  40b891:	mov    al,ds:0x27aeafac
  40b896:	imul   esp,DWORD PTR [ecx+edi*4],0xfa525d46
  40b89d:	sbb    BYTE PTR [esi],0x2a
  40b8a0:	pop    esi
  40b8a1:	mov    bh,0xfa
  40b8a3:	icebp  
  40b8a4:	sbb    eax,0xe2be0144
  40b8a9:	inc    eax
  40b8aa:	and    BYTE PTR [ebp-0x44],dh
  40b8ad:	mov    bh,0xbc
  40b8af:	or     esp,0xc
  40b8b2:	ins    BYTE PTR es:[edi],dx
  40b8b3:	sbb    DWORD PTR [ebx+0x59],ebx
  40b8b6:	sbb    ebx,0x6783fc18
  40b8bc:	add    esp,DWORD PTR [ecx-0x6be06cf4]
  40b8c2:	ds and cl,dh
  40b8c5:	cwde   
  40b8c6:	mov    BYTE PTR [edi-0x36],dl
  40b8c9:	push   edx
  40b8ca:	retf   
  40b8cb:	pop    ds
  40b8cc:	test   eax,0xb8accf29
  40b8d1:	daa    
  40b8d2:	pop    edx
  40b8d3:	imul   edx,DWORD PTR [esp+eiz*8-0x102c1013],0x20
  40b8db:	mov    edx,0xd3a28d13
  40b8e0:	retf   
  40b8e1:	sub    BYTE PTR [edi+0x43fa76b],0xd3
  40b8e8:	jge    0x40b8e3
  40b8ea:	lahf   
  40b8eb:	jae    0x40b872
  40b8ed:	and    al,0xb3
  40b8ef:	sub    DWORD PTR [ebx],ecx
  40b8f1:	jns    0x40b95e
  40b8f3:	in     eax,dx
  40b8f4:	pop    esi
  40b8f5:	dec    ebp
  40b8f6:	jp     0x40b90e
  40b8f8:	stc    
  40b8f9:	sub    BYTE PTR [edi],ch
  40b8fb:	je     0x40b976
  40b8fd:	and    ebp,DWORD PTR [edi+0x5]
  40b900:	lock sbb BYTE PTR ss:[ebx],dl
  40b904:	adc    eax,0x2848bd8
  40b909:	shl    DWORD PTR [edx-0x2c],cl
  40b90c:	in     eax,dx
  40b90d:	daa    
  40b90e:	je     0x40b91e
  40b910:	test   BYTE PTR [ecx+0x72968c18],0x36
  40b917:	(bad)  [ecx+0x66]
  40b91a:	mov    ds:0x21a9afd9,eax
  40b91f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b920:	inc    edi
  40b921:	sub    eax,0xf185fe0f
  40b926:	and    al,0x1e
  40b928:	fneni(8087 only) 
  40b92a:	cmp    dh,BYTE PTR [edi+edx*2]
  40b92d:	lds    ebx,FWORD PTR [eax+0x1d8f87b4]
  40b933:	not    ecx
  40b935:	test   DWORD PTR [esi],ebx
  40b937:	dec    ecx
  40b938:	or     bl,ch
  40b93a:	dec    ecx
  40b93b:	xlat   BYTE PTR ds:[ebx]
  40b93c:	dec    edi
  40b93d:	sbb    al,BYTE PTR [edi+edi*2+0x6d4da83]
  40b944:	sbb    ebp,ecx
  40b946:	outs   dx,BYTE PTR ds:[esi]
  40b947:	xor    BYTE PTR [ebx-0x7a6111ed],al
  40b94d:	sub    ebp,DWORD PTR [eax-0x4f41d94b]
  40b953:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b954:	mov    WORD PTR [edx],fs
  40b956:	inc    eax
  40b957:	fnstcw WORD PTR [bx+si+0x4b57]
  40b95c:	adc    DWORD PTR [edi],edi
  40b95e:	add    eax,esi
  40b960:	icebp  
  40b961:	ins    BYTE PTR es:[edi],dx
  40b962:	jle    0x40b99f
  40b964:	stos   DWORD PTR es:[edi],eax
  40b965:	and    BYTE PTR [edi-0x4d],dl
  40b968:	inc    esp
  40b969:	add    eax,0x6d1a20ab
  40b96e:	cmp    DWORD PTR [eax+0x23d6542f],esp
  40b974:	in     al,0xe1
  40b976:	mov    BYTE PTR [edi-0xfe2ab6],dl
  40b97c:	ins    BYTE PTR es:[edi],dx
  40b97d:	add    edi,DWORD PTR [edi+esi*8+0x48a61f1d]
  40b984:	stos   BYTE PTR es:[edi],al
  40b985:	shl    eax,1
  40b987:	ins    DWORD PTR es:[edi],dx
  40b988:	scas   eax,DWORD PTR es:[edi]
  40b989:	sbb    eax,0xb0cf01bb
  40b98e:	lock cld 
  40b990:	pop    gs
  40b992:	retf   
  40b993:	mov    BYTE PTR [esi+0x75],cl
  40b996:	push   ds
  40b997:	push   cs
  40b998:	rcl    DWORD PTR [esi+0x5b931b36],0xd6
  40b99f:	adc    DWORD PTR [esp+ebx*8-0x4d2cb541],esp
  40b9a6:	js     0x40ba23
  40b9a8:	add    eax,0xc9b5e593
  40b9ad:	xchg   ecx,eax
  40b9ae:	adc    eax,0x69371079
  40b9b3:	outs   dx,DWORD PTR ds:[esi]
  40b9b4:	fild   WORD PTR [edi]
  40b9b6:	jb     0x40b9ab
  40b9b8:	cwde   
  40b9b9:	dec    ebp
  40b9ba:	xchg   edi,eax
  40b9bb:	arpl   WORD PTR [ebp+0x240e8d17],ax
  40b9c1:	mov    eax,0x1db4aa0a
  40b9c6:	shl    DWORD PTR [ebp-0x4e],1
  40b9c9:	push   0x2a20e4e5
  40b9ce:	sub    al,0xcc
  40b9d0:	(bad)  
  40b9d1:	pop    ebp
  40b9d2:	das    
  40b9d3:	fiadd  DWORD PTR [edx+0x5dc6a785]
  40b9d9:	in     al,dx
  40b9da:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b9db:	rcr    ecx,0x93
  40b9de:	sub    BYTE PTR [eax+0x603ce148],ah
  40b9e4:	fcomp  QWORD PTR [esi-0x3159cc1e]
  40b9ea:	into   
  40b9eb:	ja     0x40ba67
  40b9ed:	int    0xce
  40b9ef:	int    0xe5
  40b9f1:	imul   esi,edi,0xffffff90
  40b9f4:	inc    ebx
  40b9f5:	xor    edx,DWORD PTR [esi+0x5b5a3847]
  40b9fb:	push   ecx
  40b9fc:	sbb    ebp,esi
  40b9fe:	sbb    eax,0x3ac6de33
  40ba03:	push   0x8972bb57
  40ba08:	or     DWORD PTR [esi+0x15],ebx
  40ba0b:	(bad)  [eax]
  40ba0d:	sub    al,0x27
  40ba0f:	push   0xa53417dd
  40ba14:	sar    ecx,0x69
  40ba17:	in     eax,dx
  40ba18:	sahf   
  40ba19:	mov    edx,0x549238f7
  40ba1e:	leave  
  40ba1f:	and    al,0x83
  40ba21:	inc    esp
  40ba22:	aas    
  40ba23:	jle    0x40ba6e
  40ba25:	rcr    BYTE PTR [ebx+0x4c],1
  40ba28:	sbb    BYTE PTR [edi+0x6d],ch
  40ba2b:	(bad)  
  40ba2c:	mov    ecx,DWORD PTR [ecx+0x12b87006]
  40ba32:	mov    DWORD PTR ds:0x958ee0fb,esp
  40ba38:	pop    edx
  40ba39:	jnp    0x40ba64
  40ba3b:	mov    eax,0x4fd7cbe0
  40ba40:	push   esp
  40ba41:	jp     0x40b9fc
  40ba43:	mov    bl,0x7e
  40ba45:	add    al,0xb6
  40ba47:	jmp    0x5a20:0x53bb6c66
  40ba4e:	cmc    
  40ba4f:	pushf  
  40ba50:	jno    0x40ba01
  40ba52:	fwait
  40ba53:	int3   
  40ba54:	add    ebp,esp
  40ba56:	js     0x40ba83
  40ba58:	out    0x75,eax
  40ba5a:	cld    
  40ba5b:	repz jl 0x40ba8a
  40ba5e:	fimul  DWORD PTR [esi+0x4d]
  40ba61:	in     eax,dx
  40ba62:	jmp    0xa855:0x30ab714e
  40ba69:	mov    esi,0xb7027c93
  40ba6e:	push   0xffffff92
  40ba70:	inc    esp
  40ba71:	push   ebx
  40ba72:	pop    ss
  40ba73:	out    dx,al
  40ba74:	or     BYTE PTR [ebx],al
  40ba76:	mov    ds:0xcfa6a279,eax
  40ba7b:	pop    ecx
  40ba7c:	loope  0x40ba83
  40ba7e:	fiadd  WORD PTR [esi]
  40ba80:	js     0x40bb00
  40ba82:	test   dh,ah
  40ba84:	sbb    eax,0x64a2bb6f
  40ba89:	inc    ebx
  40ba8a:	lods   eax,DWORD PTR ds:[esi]
  40ba8b:	fs sub edi,esi
  40ba8e:	out    0x27,eax
  40ba90:	adc    DWORD PTR [ecx+ebp*8-0x3629a69],eax
  40ba97:	sbb    ecx,edx
  40ba99:	mov    esi,0xb54e95b8
  40ba9e:	imul   ebp,esp,0x10
  40baa1:	xchg   BYTE PTR [ebx+eax*1-0x4fe4609a],bh
  40baa8:	loopne 0x40ba72
  40baaa:	mov    BYTE PTR [edi+0x67],bl
  40baad:	addr16 aad 0x98
  40bab0:	cli    
  40bab1:	xchg   esp,eax
  40bab2:	(bad)  
  40bab3:	pop    ecx
  40bab4:	stos   DWORD PTR es:[edi],eax
  40bab5:	out    dx,eax
  40bab6:	or     eax,0x4c62d524
  40babb:	cmp    BYTE PTR [edi],bl
  40babd:	clc    
  40babe:	jge    0x40ba99
  40bac0:	jae    0x40bb08
  40bac2:	mov    ebx,DWORD PTR [esi+0x520664fb]
  40bac8:	lods   al,BYTE PTR ds:[esi]
  40bac9:	pop    ss
  40baca:	dec    esp
  40bacb:	adc    edx,ecx
  40bacd:	xor    al,0x2f
  40bad0:	or     ecx,DWORD PTR [eax-0x6dc7c304]
  40bad6:	push   cs
  40bad7:	shl    BYTE PTR [edx+ebp*8+0x552d9f54],0xcd
  40badf:	jmp    0x6ee77768
  40bae4:	lea    ebx,[esi-0xe1075bc]
  40baea:	les    edx,FWORD PTR [edi+0x3222932c]
  40baf0:	das    
  40baf1:	sti    
  40baf2:	retf   
  40baf3:	iret   
  40baf4:	mov    ecx,0xeb932df1
  40baf9:	(bad)  
  40bafa:	mov    eax,0x7de729a9
  40baff:	int    0xe3
  40bb01:	adc    al,0x90
  40bb03:	or     ebx,0x61
  40bb06:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40bb07:	fnstcw WORD PTR [ecx]
  40bb09:	sti    
  40bb0a:	jnp    0x40baf7
  40bb0c:	shl    BYTE PTR [eax],cl
  40bb0e:	lea    esi,[ebx+eiz*8-0x7eee467c]
  40bb15:	cmp    eax,0x5a637954
  40bb1a:	ss fwait
  40bb1c:	mov    al,ds:0x14bdba4c
  40bb21:	cmp    DWORD PTR [esi],esi
  40bb23:	arpl   WORD PTR [edi-0x5d],bp
  40bb26:	dec    ebp
  40bb27:	sbb    BYTE PTR ds:0x24ca5e1c,al
  40bb2d:	mov    ds:0xe69326fe,eax
  40bb32:	sti    
  40bb33:	fild   DWORD PTR [ebx]
  40bb35:	mov    al,0x80
  40bb37:	cs inc edi
  40bb39:	mov    edi,0x5adaf91d
  40bb3e:	mov    eax,ds:0xcd44846a
  40bb43:	add    BYTE PTR [edi-0x36c6b4a],0xe5
  40bb4a:	push   esp
  40bb4b:	(bad)  
  40bb4c:	cmp    ch,BYTE PTR [eax+ecx*1-0x5e]
  40bb50:	cmp    al,0x97
  40bb52:	or     BYTE PTR cs:[ecx-0x2fbcc506],ch
  40bb59:	mov    dl,0x1a
  40bb5b:	push   ebx
  40bb5c:	int3   
  40bb5d:	shr    ebp,0x9b
  40bb60:	(bad)  
  40bb61:	gs xchg ebp,eax
  40bb63:	add    eax,0xe522e576
  40bb68:	pusha  
  40bb69:	mov    edx,0x2ad13028
  40bb6e:	gs jmp 0x15e30999
  40bb74:	rcr    BYTE PTR [esi-0x4c],cl
  40bb77:	pop    eax
  40bb78:	add    dl,BYTE PTR [ebp+0x3]
  40bb7b:	imul   ebx,DWORD PTR [ebx-0x5d86eb0e],0xe6121a89
  40bb85:	jmp    0x860cf054
  40bb8a:	es push 0x19
  40bb8d:	popa   
  40bb8e:	sub    bl,ah
  40bb90:	cmp    al,0x77
  40bb92:	aam    0x17
  40bb94:	jmp    DWORD PTR [edi*4+0x43001d1a]
  40bb9b:	adc    esp,0xaf2ef9aa
  40bba1:	fsub   DWORD PTR ds:0x4d4a885f
  40bba7:	pop    ebx
  40bba8:	leave  
  40bba9:	fisttp QWORD PTR [edi+0x4ac55f4d]
  40bbaf:	or     al,0x0
  40bbb1:	pop    ds
  40bbb2:	loop   0x40bbe5
  40bbb4:	jmp    0xde0:0x1a5fd85a
  40bbbb:	aad    0x6d
  40bbbd:	outs   dx,DWORD PTR ds:[esi]
  40bbbe:	inc    esi
  40bbbf:	cmp    esi,eax
  40bbc1:	jne    0x40c0c0
  40bbc7:	mov    eax,DWORD PTR [ebp-0x4]
  40bbca:	mov    DWORD PTR ds:0x423668,0x14
  40bbd4:	cmp    DWORD PTR ds:0x423668,0x0
  40bbdb:	je     0x40bc09
  40bbe1:	cmp    DWORD PTR ds:0x423668,0x15
  40bbe8:	jne    0x40bbf7
  40bbee:	push   DWORD PTR [ebp-0x1c]
  40bbf1:	call   DWORD PTR ds:0x41f148
  40bbf7:	mov    esi,DWORD PTR ds:0x423668
  40bbfd:	dec    esi
  40bbfe:	mov    DWORD PTR ds:0x423668,esi
  40bc04:	jmp    0x40bbd4
  40bc09:	mov    esi,DWORD PTR [ebp-0x8]
  40bc0c:	xor    eax,edx
  40bc0e:	xor    esi,edx
  40bc10:	add    eax,ecx
  40bc12:	jmp    0x40c0b6
  40bc17:	sub    al,0x9
  40bc19:	xor    eax,0x3e3f3503
  40bc1e:	das    
  40bc1f:	mov    ch,0x90
  40bc21:	sub    BYTE PTR [esi],cl
  40bc23:	xor    dl,BYTE PTR es:[eax+0xab83e4]
  40bc2a:	add    BYTE PTR [edi+0x6b000004],al
  40bc30:	xor    ebp,edi
  40bc32:	arpl   ax,bp
  40bc34:	add    eax,0xc82caca6
  40bc39:	(bad)  
  40bc3a:	pop    esp
  40bc3b:	mov    esi,edx
  40bc3d:	push   ss
  40bc3e:	ins    DWORD PTR es:[edi],dx
  40bc3f:	sub    eax,0x7973f206
  40bc44:	shl    BYTE PTR [ebx+0x4c7459a],cl
  40bc4a:	out    dx,al
  40bc4b:	mov    tr6,eax
  40bc4e:	mov    dl,0x59
  40bc50:	pop    ss
  40bc51:	jb     0x40bbd7
  40bc53:	scas   eax,DWORD PTR es:[edi]
  40bc54:	in     eax,0x86
  40bc56:	xor    eax,0x10973ba5
  40bc5b:	pop    ecx
  40bc5c:	dec    ebx
  40bc5d:	mov    edi,0x4b763adf
  40bc62:	int    0xd6
  40bc64:	ins    DWORD PTR es:[edi],dx
  40bc65:	js     0x40bc2e
  40bc67:	jb     0x40bc0d
  40bc69:	outs   dx,DWORD PTR ds:[esi]
  40bc6a:	ds ret 
  40bc6c:	mov    eax,ds:0x99b1d829
  40bc71:	stc    
  40bc72:	repz sbb ah,BYTE PTR [esi+0x78]
  40bc76:	cld    
  40bc77:	call   0x47a0:0x65fbe7c6
  40bc7e:	pop    edi
  40bc7f:	mov    cl,BYTE PTR [ebp+0x5d]
  40bc82:	sbb    DWORD PTR [ecx],esp
  40bc84:	in     al,0xd7
  40bc86:	mov    ds:0x733c168b,al
  40bc8b:	sub    al,0x1b
  40bc8d:	imul   esp,DWORD PTR [edx+0x4bead61f],0x5e09a85d
  40bc97:	cdq    
  40bc98:	pop    edx
  40bc99:	ja     0x40bc51
  40bc9b:	pop    ebp
  40bc9c:	iret   
  40bc9d:	lock es inc esi
  40bca0:	mov    dh,0xc2
  40bca2:	xor    al,0x81
  40bca4:	fcmovne st,st(5)
  40bca6:	cmp    DWORD PTR [edx+eiz*8-0x3d],ebx
  40bcaa:	or     eax,0x5f5b203c
  40bcaf:	cwde   
  40bcb0:	(bad)  
  40bcb1:	addr16 dec ebx
  40bcb3:	push   ss
  40bcb4:	fnstcw WORD PTR [edi+0x74]
  40bcb7:	(bad)  
  40bcb8:	adc    BYTE PTR [edi+0x5f],dl
  40bcbb:	outs   dx,BYTE PTR ds:[esi]
  40bcbc:	or     dl,BYTE PTR [ebp-0x67]
  40bcbf:	or     eax,0xb7fd77f6
  40bcc4:	and    ah,BYTE PTR [esi-0x47cfe7bd]
  40bcca:	add    DWORD PTR [esi],edi
  40bccc:	loop   0x40bcc2
  40bcce:	(bad)  
  40bccf:	leave  
  40bcd0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40bcd1:	inc    eax
  40bcd2:	sar    DWORD PTR [ebp+0x66],0xa5
  40bcd6:	adc    al,0x1e
  40bcd8:	inc    ebx
  40bcd9:	push   es
  40bcda:	push   ebx
  40bcdb:	cmp    eax,0x376e6733
  40bce0:	jne    0x40bcd7
  40bce2:	or     edx,DWORD PTR [eax]
  40bce4:	jnp    0x40bd0a
  40bce6:	inc    ebx
  40bce7:	int    0x29
  40bce9:	cld    
  40bcea:	xchg   ebp,eax
  40bceb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40bcec:	sbb    al,0x61
  40bcee:	mov    ebx,0x66bbb2bd
  40bcf3:	jecxz  0x40bcd3
  40bcf5:	repz retf 0x1b1e
  40bcf9:	or     DWORD PTR [eax-0x7f],ebp
  40bcfc:	neg    BYTE PTR [ebp+ebx*2+0x28]
  40bd00:	into   
  40bd01:	add    BYTE PTR [ebp-0x15426861],ch
  40bd07:	rcr    BYTE PTR [edx-0xe],cl
  40bd0a:	ja     0x40bca2
  40bd0c:	popf   
  40bd0d:	scas   al,BYTE PTR es:[edi]
  40bd0e:	mov    esi,0x66f0834e
  40bd13:	sbb    ch,dh
  40bd15:	inc    esi
  40bd16:	mov    ds:0x8dbfb6e0,al
  40bd1b:	push   edx
  40bd1c:	mov    dl,0x3
  40bd1e:	mov    dl,0x79
  40bd20:	outs   dx,BYTE PTR ds:[esi]
  40bd21:	pop    esi
  40bd22:	cmc    
  40bd23:	fcomp  DWORD PTR [edx-0x44f5db68]
  40bd29:	mov    ah,0xac
  40bd2b:	jne    0x40bd80
  40bd2d:	inc    ebx
  40bd2e:	(bad)  
  40bd2f:	sbb    BYTE PTR [eax-0x74699992],dl
  40bd35:	mov    ecx,0x10a0932
  40bd3a:	xor    al,BYTE PTR [esi]
  40bd3c:	sbb    dh,ah
  40bd3e:	cdq    
  40bd3f:	and    dl,BYTE PTR [eax+0x426a341a]
  40bd45:	loope  0x40bdb3
  40bd47:	mov    di,0xdbaa
  40bd4b:	popa   
  40bd4c:	dec    ecx
  40bd4d:	jnp    0x40bce9
  40bd4f:	pop    DWORD PTR [ebp+0x26e714ee]
  40bd55:	push   esp
  40bd56:	ret    
  40bd57:	std    
  40bd58:	out    dx,al
  40bd59:	lods   eax,DWORD PTR ds:[esi]
  40bd5a:	retf   
  40bd5b:	scas   al,BYTE PTR es:[edi]
  40bd5c:	int    0x94
  40bd5e:	bound  ecx,QWORD PTR [ebp+0x405ca762]
  40bd64:	push   esp
  40bd65:	sbb    eax,0x45eed619
  40bd6a:	jg     0x40bd05
  40bd6c:	xor    eax,0x8d592be6
  40bd71:	fiadd  DWORD PTR [ecx]
  40bd73:	sahf   
  40bd74:	popf   
  40bd75:	sbb    DWORD PTR [eax+0x19],esp
  40bd78:	mov    BYTE PTR [ebx-0x4a32f7c3],bl
  40bd7e:	aas    
  40bd7f:	jecxz  0x40bdf3
  40bd81:	pushf  
  40bd82:	xchg   ecx,eax
  40bd83:	sub    ecx,DWORD PTR [ebx-0x60]
  40bd86:	cld    
  40bd87:	xor    DWORD PTR [ebp+edx*1-0x475fb417],edi
  40bd8e:	dec    edi
  40bd8f:	dec    eax
  40bd90:	outs   dx,BYTE PTR ds:[esi]
  40bd91:	jb     0x40be11
  40bd93:	outs   dx,BYTE PTR ds:[esi]
  40bd94:	cld    
  40bd95:	fsubr  DWORD PTR [edx-0x139e4ca3]
  40bd9c:	xchg   DWORD PTR [esi-0x64671a29],ecx
  40bda2:	sbb    al,0x6d
  40bda4:	pop    ebp
  40bda5:	rol    BYTE PTR [edx+0x634e6588],0xe9
  40bdac:	(bad)  
  40bdae:	pop    esi
  40bdaf:	jb     0x40bd4b
  40bdb1:	add    DWORD PTR [ebx-0x204510d6],esp
  40bdb7:	pop    eax
  40bdb8:	mov    dh,0xb3
  40bdba:	mov    cl,0xeb
  40bdbc:	ret    0xcf78
  40bdbf:	fs jmp 0xda8f71a3
  40bdc5:	mov    esi,0xb90eda25
  40bdca:	dec    ebp
  40bdcb:	lahf   
  40bdcc:	dec    ebx
  40bdcd:	xchg   edi,eax
  40bdce:	jno    0x40bdf9
  40bdd0:	fdivr  DWORD PTR [eax-0x77cf1cdb]
  40bdd6:	cmovl  ebx,DWORD PTR [edx-0x16]
  40bdda:	and    edi,DWORD PTR [esi+0x76]
  40bddd:	xor    eax,0xf6f37877
  40bde2:	imul   ecx,DWORD PTR ds:0xfdee2a1c,0x61
  40bde9:	xor    dl,BYTE PTR [eax+ebx*2+0x43]
  40bded:	xchg   BYTE PTR [ecx+0x7],bh
  40bdf0:	ss dec edi
  40bdf2:	xor    eax,0x161cfbeb
  40bdf7:	xor    BYTE PTR [ebp-0x31],0x7b
  40bdfb:	ret    0x7444
  40bdfe:	push   edi
  40bdff:	jecxz  0x40bdc9
  40be01:	jnp    0x40be6b
  40be03:	or     eax,0x7af5cedb
  40be08:	clc    
  40be09:	inc    ebp
  40be0a:	sub    DWORD PTR [ebx],ebp
  40be0c:	push   es
  40be0d:	xchg   esi,eax
  40be0e:	jo     0x40be2a
  40be10:	sub    esi,ebx
  40be12:	out    dx,al
  40be13:	mov    ebx,0x1f858616
  40be18:	cmp    edx,DWORD PTR [ebx-0x76]
  40be1b:	inc    edi
  40be1c:	mov    ebp,0xe8df0d10
  40be21:	dec    edx
  40be22:	ret    
  40be23:	or     BYTE PTR [edi*8+0x4eff6d30],0x1e
  40be2b:	mov    bh,0x6a
  40be2d:	pusha  
  40be2e:	mov    WORD PTR [eax-0x23],ss
  40be31:	hlt    
  40be32:	adc    bl,BYTE PTR [edx+0x3251bc68]
  40be38:	neg    bh
  40be3a:	fidiv  DWORD PTR [ecx-0x43d92929]
  40be40:	adc    edx,esp
  40be42:	nop
  40be43:	or     edi,esi
  40be45:	mov    bl,0x79
  40be47:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40be48:	mov    edx,0xda2ba292
  40be4d:	pop    eax
  40be4e:	popf   
  40be4f:	xchg   edi,eax
  40be50:	push   es
  40be51:	push   0x9751002
  40be56:	cmp    DWORD PTR [edx+0x19],eax
  40be59:	mov    BYTE PTR [ebx],dh
  40be5b:	xor    bl,BYTE PTR [edi]
  40be5d:	imul   eax
  40be5f:	lea    ecx,[ecx+eax*2+0x6dd4f8c4]
  40be66:	loop   0x40bec7
  40be68:	pushf  
  40be69:	nop
  40be6a:	in     eax,dx
  40be6b:	mov    dh,0x53
  40be6d:	adc    eax,DWORD PTR [eax]
  40be6f:	sub    DWORD PTR [eax],esp
  40be71:	fcomp  QWORD PTR [ebx+0x390c2b7b]
  40be77:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40be78:	and    dh,BYTE PTR [edx-0xa]
  40be7b:	and    eax,0xa9d262e9
  40be80:	fsub   DWORD PTR [si-0x2a]
  40be84:	add    DWORD PTR [esi-0x78513a9a],0xffffffd4
  40be8b:	lods   eax,DWORD PTR ds:[esi]
  40be8c:	loope  0x40be32
  40be8e:	shl    BYTE PTR [edx+ebx*8+0xc],cl
  40be92:	(bad)  
  40be93:	shl    BYTE PTR [ecx+0x6c188886],cl
  40be99:	pop    edx
  40be9a:	xchg   esp,eax
  40be9b:	xor    esp,0x12
  40be9e:	add    edx,esp
  40bea0:	mov    bh,0x7b
  40bea2:	dec    DWORD PTR [ebx-0x7b408dcf]
  40bea8:	imul   esi,DWORD PTR [ebx-0x1dd9c79],0x3a
  40beaf:	in     al,0x44
  40beb1:	pop    edi
  40beb2:	fsub   DWORD PTR [esi]
  40beb4:	sub    eax,0xe04c53d7
  40beb9:	and    DWORD PTR [ebp-0x60],0x2a
  40bebd:	sahf   
  40bebe:	mov    edi,0xa5985ab4
  40bec3:	xor    al,0xac
  40bec5:	pop    eax
  40bec6:	push   edi
  40bec7:	dec    esp
  40bec8:	jne    0x40bf00
  40beca:	push   cs
  40becb:	mov    al,ds:0x5467b5eb
  40bed0:	pop    ebp
  40bed1:	mov    cl,0x10
  40bed3:	retf   0xbfa5
  40bed6:	jmp    0xa1140e3f
  40bedb:	xchg   esp,eax
  40bedc:	sub    eax,DWORD PTR [ebx+ebx*8]
  40bedf:	push   cs
  40bee0:	pop    ebx
  40bee1:	stc    
  40bee2:	or     ah,al
  40bee4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40bee5:	test   BYTE PTR [ecx+0x72],ch
  40bee8:	inc    edi
  40bee9:	icebp  
  40beea:	lahf   
  40beeb:	je     0x40be87
  40beed:	cmp    eax,0xfe46d3d8
  40bef2:	jns    0x40bf37
  40bef4:	jb     0x40bef4
  40bef6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40bef7:	scas   eax,DWORD PTR es:[edi]
  40bef8:	and    al,dh
  40befa:	or     eax,0x90a2bbcd
  40beff:	dec    eax
  40bf00:	mov    bh,0xa0
  40bf02:	pop    edx
  40bf03:	lds    edx,FWORD PTR [ecx+0x34]
  40bf06:	enter  0xa6ef,0xa
  40bf0a:	je     0x40bef0
  40bf0c:	ins    BYTE PTR es:[edi],dx
  40bf0d:	and    al,ah
  40bf0f:	adc    al,0x9b
  40bf11:	ins    DWORD PTR es:[edi],dx
  40bf12:	shl    bl,cl
  40bf14:	push   eax
  40bf15:	into   
  40bf16:	rcr    DWORD PTR [ebp-0x9bb19],cl
  40bf1c:	out    0x27,al
  40bf1e:	mov    esi,0x12b5b064
  40bf23:	pop    ds
  40bf24:	or     edi,DWORD PTR ds:[esi-0x75ab2e6e]
  40bf2b:	mov    ds:0x3eee8870,al
  40bf30:	and    dh,ah
  40bf32:	cmc    
  40bf33:	jb     0x40bf1c
  40bf35:	das    
  40bf36:	xchg   edi,eax
  40bf37:	jo     0x40bf8b
  40bf39:	dec    esi
  40bf3a:	jb     0x40bf5e
  40bf3c:	add    eax,0x3c0e8239
  40bf41:	add    al,0xd4
  40bf43:	imul   esi,DWORD PTR [edi],0x7b
  40bf46:	jae    0x40bf6e
  40bf48:	pop    es
  40bf49:	sbb    DWORD PTR [esp+ebx*8-0x18],edi
  40bf4d:	dec    esp
  40bf4e:	xor    BYTE PTR [esi],0x3d
  40bf51:	repz shl ah,cl
  40bf54:	sub    bl,BYTE PTR [eax-0x72]
  40bf57:	and    DWORD PTR [ebp+0x2a],esp
  40bf5a:	cli    
  40bf5b:	push   0x49
  40bf5d:	jp     0x40bf4a
  40bf5f:	mov    al,0x33
  40bf61:	cmp    edi,DWORD PTR [ebx]
  40bf63:	add    eax,0x768b6f8
  40bf68:	lahf   
  40bf69:	loopne 0x40bf50
  40bf6b:	sbb    BYTE PTR [eax-0xf],bl
  40bf6e:	fisttp QWORD PTR [edi-0x5b69efe]
  40bf74:	stc    
  40bf75:	xchg   ebp,eax
  40bf76:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40bf77:	mov    cl,0xac
  40bf79:	lea    ecx,[ecx+0x40]
  40bf7c:	jle    0x40bf03
  40bf7e:	aaa    
  40bf7f:	inc    edi
  40bf80:	es or  al,0xd6
  40bf83:	cmp    dl,BYTE PTR [esp+edi*4+0x2f7c057]
  40bf8a:	(bad)  
  40bf8b:	in     eax,dx
  40bf8c:	clc    
  40bf8d:	jno    0x40bf81
  40bf8f:	aaa    
  40bf90:	xchg   BYTE PTR [edx-0x7e4dd398],al
  40bf96:	dec    ebp
  40bf97:	push   ss
  40bf98:	xchg   ecx,eax
  40bf99:	sar    al,1
  40bf9b:	mov    dl,0x84
  40bf9d:	push   ecx
  40bf9e:	je     0x40bf34
  40bfa0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40bfa1:	cmc    
  40bfa2:	and    BYTE PTR [ebx+0x63],bh
  40bfa5:	xchg   ecx,eax
  40bfa6:	lock dec ebx
  40bfa8:	sub    eax,0x57b205d0
  40bfad:	mov    edi,0x44ef76b7
  40bfb2:	push   0xad9b3afe
  40bfb7:	dec    edi
  40bfb8:	es and eax,0xa39c254e
  40bfbe:	xor    al,0x99
  40bfc0:	sbb    DWORD PTR [esi],edx
  40bfc2:	xchg   edx,eax
  40bfc3:	arpl   ax,si
  40bfc5:	adc    eax,0x47cdacd7
  40bfca:	push   ebp
  40bfcb:	rcr    BYTE PTR [ebx+esi*4-0x867849c],cl
  40bfd2:	push   es
  40bfd3:	inc    ebp
  40bfd4:	ret    
  40bfd5:	cwde   
  40bfd6:	mov    bl,0x60
  40bfd8:	shl    BYTE PTR [ecx-0x1da7ace8],cl
  40bfde:	adc    eax,DWORD PTR [eax-0x33]
  40bfe1:	imul   edi,ebx,0xffffffeb
  40bfe4:	cmc    
  40bfe5:	cmp    DWORD PTR [ecx+0x21093223],esi
  40bfeb:	leave  
  40bfec:	sti    
  40bfed:	jbe    0x40c06c
  40bfef:	test   DWORD PTR [ebx],ecx
  40bff1:	cld    
  40bff2:	xchg   edx,eax
  40bff3:	cwde   
  40bff4:	sbb    BYTE PTR [edx-0x4642b0f5],dl
  40bffa:	or     ebx,edx
  40bffc:	je     0x40c07a
  40bffe:	sbb    eax,0xbc4513f8
  40c003:	loope  0x40bff6
  40c005:	data16 jecxz 0x40bff0
  40c008:	sahf   
  40c009:	inc    esi
  40c00a:	mov    dh,cl
  40c00c:	xchg   ch,dl
  40c00e:	dec    ecx
  40c00f:	sub    DWORD PTR [edx+esi*2-0x7a586909],edi
  40c016:	cmp    ah,BYTE PTR [eax+eax*4+0x3]
  40c01a:	out    dx,al
  40c01b:	add    al,0x31
  40c01d:	sub    bl,ch
  40c01f:	add    BYTE PTR ds:0x4716b952,ch
  40c025:	jp     0x40c032
  40c027:	loop   0x40bfb0
  40c029:	xor    BYTE PTR [ebp-0x284d72b3],dh
  40c02f:	sbb    edi,edx
  40c031:	(bad)  
  40c032:	mov    edi,0x6b9ebc27
  40c037:	or     DWORD PTR [edi+0x73],0x18
  40c03b:	dec    ebx
  40c03c:	mov    dh,0xd2
  40c03e:	and    bl,BYTE PTR [ebp+0x60]
  40c041:	ret    
  40c042:	cdq    
  40c043:	dec    esp
  40c044:	(bad)  
  40c045:	aaa    
  40c046:	add    DWORD PTR [ebx-0x51],0x5f71927e
  40c04d:	mov    ebp,0x22a8fb28
  40c052:	vunpcklps xmm0,xmm6,XMMWORD PTR [esi-0x34]
  40c057:	iret   
  40c058:	xchg   ebx,eax
  40c059:	lahf   
  40c05a:	sbb    DWORD PTR [ebp+0x43],0xbee75a33
  40c061:	jmp    0xe125eb54
  40c066:	inc    ecx
  40c067:	ins    BYTE PTR es:[edi],dx
  40c068:	adc    DWORD PTR [eax],edx
  40c06a:	push   0xbaef8263
  40c06f:	dec    ecx
  40c070:	mov    DWORD PTR ds:0x4e4ae75e,ebx
  40c076:	les    ebp,FWORD PTR [esi+0x4d]
  40c079:	mov    eax,0x459feb3e
  40c07e:	stc    
  40c07f:	adc    al,0xa4
  40c081:	adc    dl,BYTE PTR [ebx+0x72]
  40c084:	sahf   
  40c085:	sub    BYTE PTR [ebx-0x676699af],dl
  40c08b:	mov    ebx,0xa8cc7cc8
  40c090:	bound  esi,QWORD PTR ds:[ebx-0x7b023612]
  40c097:	push   es
  40c098:	pop    ecx
  40c099:	pop    ecx
  40c09a:	or     bl,BYTE PTR [edx+0x5c]
  40c09d:	or     eax,0xcebe7748
  40c0a2:	test   eax,0x2ca68d12
  40c0a7:	sub    dh,BYTE PTR [edi-0x9]
  40c0aa:	aam    0x25
  40c0ac:	js     0x40c0c5
  40c0ae:	cmp    eax,0x4ef114b0
  40c0b3:	inc    esi
  40c0b4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c0b5:	arpl   WORD PTR [ebx],ax
  40c0b7:	icebp  
  40c0b8:	imul   eax,esi
  40c0bb:	jmp    0x40ca43
  40c0c0:	mov    eax,DWORD PTR [ebp+0xc]
  40c0c3:	mov    eax,DWORD PTR [eax+0x78]
  40c0c6:	mov    DWORD PTR [ebp+0xc],eax
  40c0c9:	mov    eax,DWORD PTR [ebp-0x4]
  40c0cc:	mov    esi,DWORD PTR [ebp-0x8]
  40c0cf:	xor    eax,edx
  40c0d1:	xor    esi,edx
  40c0d3:	add    eax,ecx
  40c0d5:	add    esi,ecx
  40c0d7:	imul   eax,esi
  40c0da:	mov    esi,DWORD PTR [ebp+0xc]
  40c0dd:	jmp    0x40c581
  40c0e2:	xor    BYTE PTR [edx],ch
  40c0e4:	cmp    BYTE PTR [edx+edi*1+0x76],ah
  40c0e8:	jl     0x40c168
  40c0ea:	dec    edi
  40c0eb:	push   ebx
  40c0ec:	retf   
  40c0ed:	mov    bl,BYTE PTR [edi+0x5]
  40c0f0:	adc    BYTE PTR [ebp+0xa],dl
  40c0f3:	mov    al,0x0
  40c0f5:	add    BYTE PTR [edi-0x75fffffc],al
  40c0fb:	push   edi
  40c0fc:	mov    cl,0x98
  40c0fe:	sbb    edx,DWORD PTR [eax+0x3c0d5022]
  40c104:	adc    dl,BYTE PTR [esi+0x14af34b2]
  40c10a:	sub    BYTE PTR [ebx],bh
  40c10c:	and    BYTE PTR [edi-0x369ddeda],ch
  40c112:	dec    edi
  40c113:	mov    ch,0x53
  40c115:	cmp    eax,0x533bbfc
  40c11a:	add    DWORD PTR ss:[edx-0x2a92a3d6],ebx
  40c121:	and    eax,0x668ba7be
  40c126:	ds (bad) 
  40c128:	dec    ebp
  40c129:	loop   0x40c17c
  40c12b:	inc    DWORD PTR [esi-0x3d61706]
  40c131:	cli    
  40c132:	mov    WORD PTR [edi+edi*2-0x7144e63e],ds
  40c139:	test   eax,0xa0c20e4c
  40c13e:	or     edi,DWORD PTR [esi-0x3a]
  40c141:	test   al,0xda
  40c143:	sub    DWORD PTR [edi+edx*8+0x6a],0x6b
  40c148:	cmp    al,0x40
  40c14a:	xchg   ebx,eax
  40c14b:	shl    esi,0x72
  40c14e:	add    esi,DWORD PTR [edx-0x17fbe795]
  40c154:	call   0x551c:0xed6ea3bf
  40c15b:	ins    BYTE PTR es:[edi],dx
  40c15c:	pop    es
  40c15d:	pop    ds
  40c15e:	rol    BYTE PTR [ecx+0x32dac37e],0x66
  40c165:	mov    bh,0xd7
  40c167:	aam    0x7b
  40c169:	outs   dx,BYTE PTR ds:[esi]
  40c16a:	jmp    0x6a20a511
  40c16f:	retf   
  40c170:	push   es
  40c171:	stos   BYTE PTR es:[edi],al
  40c172:	inc    ebp
  40c173:	scas   al,BYTE PTR es:[edi]
  40c174:	sbb    ax,0xd7b
  40c178:	stc    
  40c179:	retf   0xa4d3
  40c17c:	repnz dec ebx
  40c17e:	cmp    edi,ebp
  40c180:	xlat   BYTE PTR es:[ebx]
  40c182:	je     0x40c1a5
  40c184:	mov    edx,0x6d49629e
  40c189:	mov    eax,ds:0xa246567
  40c18e:	mov    gs,WORD PTR [ebx+0x7f5c2712]
  40c194:	jg     0x40c1c5
  40c196:	cmp    BYTE PTR [edx],cl
  40c198:	out    0x8e,al
  40c19a:	jb     0x40c1b5
  40c19c:	mov    edi,0x53b740e3
  40c1a1:	out    dx,eax
  40c1a2:	imul   eax,DWORD PTR [edx-0x33f0117c],0x21058bb2
  40c1ac:	dec    ebp
  40c1ad:	mov    ah,0x22
  40c1af:	mov    dl,0x53
  40c1b1:	or     DWORD PTR [ecx+eax*8-0x6c8c8aec],ecx
  40c1b8:	adc    DWORD PTR [edi+eax*1+0x4c],eax
  40c1bc:	add    eax,0x98d3a06d
  40c1c1:	sub    eax,0x66b84394
  40c1c6:	and    BYTE PTR [edx],al
  40c1c8:	pop    edx
  40c1c9:	retf   
  40c1ca:	ins    BYTE PTR es:[edi],dx
  40c1cb:	out    0xad,eax
  40c1cd:	lods   eax,DWORD PTR ds:[esi]
  40c1ce:	add    BYTE PTR [eax+0x2774005f],ch
  40c1d4:	out    dx,al
  40c1d5:	jb     0x40c16c
  40c1d7:	jge    0x40c196
  40c1d9:	adc    DWORD PTR [edi],eax
  40c1db:	out    0x6a,eax
  40c1dd:	aas    
  40c1de:	(bad)  
  40c1df:	pop    esp
  40c1e0:	repnz test al,0x3f
  40c1e3:	push   eax
  40c1e4:	cmp    al,0x7a
  40c1e7:	dec    eax
  40c1e8:	jge    0x40c1e0
  40c1ea:	cmp    BYTE PTR [ecx+0x6fcebcce],bl
  40c1f0:	(bad)  
  40c1f1:	and    ebx,DWORD PTR [ecx+0x2e]
  40c1f4:	fmul   st,st(0)
  40c1f6:	mov    dh,BYTE PTR [ecx-0x33ea8cf7]
  40c1fc:	jno    0x40c218
  40c1fe:	xchg   esi,eax
  40c1ff:	cmp    DWORD PTR [esi-0x44],0xffffffef
  40c203:	out    0x8b,al
  40c205:	jae    0x40c281
  40c207:	add    ecx,ebx
  40c209:	pop    ss
  40c20a:	pop    ebp
  40c20b:	test   al,0x9f
  40c20d:	pop    ebp
  40c20e:	mov    edx,DWORD PTR [ebx+0x46]
  40c211:	fcmovbe st,st(0)
  40c213:	ret    
  40c214:	(bad)  
  40c215:	(bad)  
  40c216:	mov    DWORD PTR [ecx-0x4b],ebp
  40c219:	cmp    esp,DWORD PTR [ebx]
  40c21b:	fcom   QWORD PTR [esi]
  40c21d:	xor    eax,0x68090be9
  40c222:	mov    ebx,0xa80f405d
  40c227:	pop    ss
  40c228:	into   
  40c229:	lock je 0x40c203
  40c22c:	jp     0x40c243
  40c22e:	jno    0x40c209
  40c230:	cdq    
  40c231:	mov    esi,0x77c3071f
  40c236:	(bad)  
  40c237:	fstp   st(7)
  40c239:	dec    BYTE PTR [edi+ecx*1]
  40c23c:	mov    edi,0x40e0faee
  40c241:	imul   ebp,DWORD PTR [edx-0x51],0xf986bc3
  40c248:	jb     0x40c232
  40c24a:	jns    0x40c24b
  40c24c:	xchg   bx,ax
  40c24e:	push   esp
  40c24f:	(bad)  
  40c250:	rol    DWORD PTR [eax+0x1c],cl
  40c253:	iret   
  40c254:	imul   esi,DWORD PTR [edx+0x6c],0xebd8dc70
  40c25b:	popa   
  40c25c:	sub    BYTE PTR [eax+0x551cfae0],dl
  40c262:	dec    eax
  40c263:	pop    ds
  40c264:	or     dh,ch
  40c266:	mov    bl,BYTE PTR [edi]
  40c268:	out    0xad,eax
  40c26a:	push   esi
  40c26b:	xchg   esi,eax
  40c26c:	sub    ch,BYTE PTR [edx-0x35ec3c31]
  40c272:	lock cwde 
  40c274:	test   DWORD PTR [eax-0xa],ebp
  40c277:	jmp    0x8435:0xda30816d
  40c27e:	jle    0x40c26a
  40c280:	sub    edx,DWORD PTR [ecx]
  40c282:	loopne 0x40c2ad
  40c284:	xor    dl,BYTE PTR [ebx*1+0x54b9cb12]
  40c28b:	mov    esp,DWORD PTR [esi]
  40c28d:	popf   
  40c28e:	cmp    al,0x4f
  40c290:	popa   
  40c291:	cld    
  40c292:	rdtsc  
  40c294:	ds (bad) 
  40c296:	in     eax,0x22
  40c298:	sub    al,0xb9
  40c29a:	or     edi,DWORD PTR [ecx+0x5bda70fd]
  40c2a0:	pusha  
  40c2a1:	jne    0x40c2e6
  40c2a3:	add    BYTE PTR [esi],cl
  40c2a5:	pop    eax
  40c2a6:	outs   dx,BYTE PTR ds:[esi]
  40c2a7:	jge    0x40c292
  40c2a9:	pop    ebp
  40c2aa:	mov    ds:0xfdfd61a4,al
  40c2af:	les    ebx,FWORD PTR [edx]
  40c2b1:	call   0xaa68:0xe7c84cb3
  40c2b8:	push   ebx
  40c2b9:	jae    0x40c325
  40c2bb:	and    BYTE PTR [eax+0xe870c04],ch
  40c2c1:	jmp    0x40c26e
  40c2c3:	jbe    0x40c2db
  40c2c5:	and    ch,BYTE PTR [eax+0x4a]
  40c2c8:	xchg   esp,eax
  40c2c9:	jp     0x40c2d4
  40c2cb:	dec    edx
  40c2cc:	ret    
  40c2cd:	les    esp,FWORD PTR [edx-0x7d398115]
  40c2d3:	iret   
  40c2d4:	(bad)  
  40c2d5:	je     0x40c2d8
  40c2d7:	icebp  
  40c2d8:	ins    DWORD PTR es:[edi],dx
  40c2d9:	dec    eax
  40c2da:	ja     0x40c335
  40c2dc:	fs inc ebp
  40c2de:	mov    BYTE PTR [eax-0xb],bh
  40c2e1:	or     edi,DWORD PTR [ebp-0xc]
  40c2e4:	adc    al,0x63
  40c2e6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c2e7:	push   cs
  40c2e8:	cld    
  40c2e9:	out    dx,al
  40c2ea:	cmc    
  40c2eb:	in     al,0x65
  40c2ed:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c2ee:	push   edi
  40c2ef:	pop    edi
  40c2f0:	cmp    bl,BYTE PTR [edx-0x2a]
  40c2f3:	nop
  40c2f4:	dec    edi
  40c2f5:	sbb    al,0xdf
  40c2f7:	add    DWORD PTR [ebp-0x7ec3b94],ebp
  40c2fd:	and    dh,dl
  40c2ff:	bound  esi,QWORD PTR [ebx]
  40c301:	add    al,0xc7
  40c303:	xchg   ebp,eax
  40c304:	xchg   ebp,eax
  40c305:	mov    edi,0xe3a963c4
  40c30a:	xchg   esp,eax
  40c30b:	outs   dx,DWORD PTR ds:[esi]
  40c30c:	stc    
  40c30d:	lods   eax,DWORD PTR ds:[esi]
  40c30e:	jbe    0x40c38a
  40c310:	call   0xa906194f
  40c315:	jmp    0x4177:0x108e55f1
  40c31c:	xor    al,0x42
  40c31e:	jl     0x40c39a
  40c320:	fstp   DWORD PTR [esi-0x749225ee]
  40c326:	outs   dx,BYTE PTR ds:[esi]
  40c327:	cmp    DWORD PTR [esi+ecx*1+0x460315dd],ebp
  40c32e:	push   ebx
  40c32f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c330:	cwde   
  40c331:	ret    0x932b
  40c334:	arpl   sp,di
  40c336:	push   ebx
  40c338:	sbb    al,0x9f
  40c33a:	jmp    0x40c333
  40c33c:	mov    dl,0x42
  40c33e:	ins    BYTE PTR es:[edi],dx
  40c33f:	shr    BYTE PTR [ebx-0x366519ec],cl
  40c345:	xor    ebp,DWORD PTR [ecx+0x1371ea04]
  40c34b:	adc    DWORD PTR [ebp+esi*2-0x1dab4e61],ebx
  40c352:	jmp    0x40c3af
  40c354:	sbb    ebx,ecx
  40c356:	xor    BYTE PTR [ecx-0x4b],dl
  40c359:	imul   esi,DWORD PTR [edx+0x8303955],0xbf570994
  40c363:	push   edi
  40c364:	mov    bh,0x4f
  40c366:	mov    ah,0x9d
  40c368:	ins    DWORD PTR es:[edi],dx
  40c369:	mov    ebp,0x200b313b
  40c36e:	leave  
  40c36f:	xor    eax,0xc7bf5b82
  40c374:	rcl    DWORD PTR [ebx],cl
  40c376:	jmp    0x40c370
  40c378:	cmp    ecx,DWORD PTR [edi-0x31]
  40c37b:	test   eax,0x39297f81
  40c380:	psubusb mm5,QWORD PTR [ecx+0x720193ff]
  40c387:	ret    
  40c388:	loop   0x40c31d
  40c38a:	xchg   ebx,eax
  40c38b:	sbb    DWORD PTR [eax+ebp*4],eax
  40c38e:	or     edx,edi
  40c390:	cmp    bh,BYTE PTR [eax+0x2f]
  40c393:	pop    edx
  40c394:	push   cs
  40c395:	cmp    al,cl
  40c397:	jo     0x40c3ee
  40c399:	jb     0x40c3d9
  40c39b:	pusha  
  40c39c:	fisttp WORD PTR [ebx]
  40c39e:	call   0xe87d:0x6d3e0249
  40c3a5:	mov    edi,0x30b0afe8
  40c3aa:	fimul  WORD PTR [eax-0x7d]
  40c3ad:	xor    ch,BYTE PTR [ecx-0x49]
  40c3b0:	int3   
  40c3b1:	fmul   st(6),st
  40c3b3:	sub    BYTE PTR [eax-0x3],cl
  40c3b6:	mov    bh,0x8
  40c3b8:	arpl   di,cx
  40c3ba:	jne    0x40c378
  40c3bc:	mov    ch,0xf6
  40c3be:	inc    ebp
  40c3bf:	xor    ebp,eax
  40c3c1:	push   ecx
  40c3c2:	pushf  
  40c3c3:	in     eax,0xa7
  40c3c5:	add    dl,BYTE PTR [eax]
  40c3c7:	jbe    0x40c383
  40c3c9:	cmp    eax,DWORD PTR [ebp+0x47dd4c7c]
  40c3cf:	sbb    DWORD PTR [edx+0x54],ebx
  40c3d2:	test   eax,0x49e00e0
  40c3d7:	lods   al,BYTE PTR ds:[esi]
  40c3d8:	add    DWORD PTR [edx+0x298192e1],edi
  40c3de:	sub    al,0x4b
  40c3e0:	pop    ss
  40c3e1:	xchg   esi,eax
  40c3e2:	data16 hlt 
  40c3e4:	aad    0xcf
  40c3e6:	lahf   
  40c3e7:	(bad)  
  40c3e8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c3e9:	inc    edx
  40c3ea:	pop    ss
  40c3eb:	fs popa 
  40c3ed:	dec    esi
  40c3ee:	and    BYTE PTR [edx+0x6854a32a],ah
  40c3f4:	ret    0x956e
  40c3f7:	int    0x49
  40c3f9:	sbb    al,0xff
  40c3fb:	xor    eax,0x523b54ec
  40c400:	jp     0x40c389
  40c402:	mov    ah,0x60
  40c404:	(bad)  
  40c406:	xchg   ebp,esi
  40c408:	mov    eax,ds:0x1b501c20
  40c40d:	push   ebp
  40c40e:	(bad)  
  40c40f:	loop   0x40c42d
  40c411:	fcomp  QWORD PTR [ebp+0x70201197]
  40c417:	add    al,0xac
  40c419:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c41a:	imul   ebx,DWORD PTR [edx-0x1c],0x42
  40c41e:	and    bl,BYTE PTR [ecx+0x6316ead4]
  40c424:	and    bl,BYTE PTR [edx+0x70]
  40c427:	mov    ah,0x10
  40c429:	mov    esp,0x39d9096e
  40c42e:	inc    eax
  40c42f:	push   eax
  40c430:	dec    ebp
  40c431:	pop    eax
  40c432:	daa    
  40c433:	retf   0xaeec
  40c436:	inc    eax
  40c437:	sar    al,cl
  40c439:	sub    BYTE PTR [ecx+0x1f],cl
  40c43c:	push   cs
  40c43d:	popf   
  40c43e:	out    dx,eax
  40c43f:	icebp  
  40c440:	pop    eax
  40c441:	cwde   
  40c442:	int    0x47
  40c444:	aam    0xb2
  40c446:	int3   
  40c447:	stos   DWORD PTR es:[edi],eax
  40c448:	ss dec esp
  40c44a:	add    eax,0x7a979baf
  40c44f:	in     eax,0x30
  40c451:	pop    ebx
  40c452:	jle    0x40c41a
  40c454:	sub    eax,0xb08dff36
  40c459:	outs   dx,BYTE PTR ds:[esi]
  40c45a:	sbb    BYTE PTR [ebx+0x6b743675],al
  40c460:	pop    eax
  40c461:	lods   al,BYTE PTR ds:[esi]
  40c462:	xlat   BYTE PTR ds:[ebx]
  40c463:	mov    WORD PTR cs:[ecx+0x3],fs
  40c467:	enter  0x282d,0x5f
  40c46b:	repz xlat BYTE PTR ds:[ebx]
  40c46d:	adc    DWORD PTR [eax+edx*8+0x42d379ad],esp
  40c474:	adc    bl,BYTE PTR [eax]
  40c476:	and    ah,ch
  40c478:	sbb    bh,BYTE PTR [ebp-0x54eb60f2]
  40c47e:	scas   eax,DWORD PTR es:[edi]
  40c47f:	imul   edi,DWORD PTR [esp+ebx*2],0xffffffe8
  40c483:	mov    ebp,0xe0d38c54
  40c488:	lahf   
  40c489:	int    0xbd
  40c48b:	in     eax,dx
  40c48c:	pusha  
  40c48d:	push   cs
  40c48e:	inc    eax
  40c48f:	push   ebp
  40c490:	dec    edi
  40c491:	sbb    ecx,DWORD PTR [edi]
  40c493:	jno    0x40c417
  40c495:	test   BYTE PTR [eax+0x31],0xb1
  40c499:	pop    esi
  40c49a:	aam    0xb2
  40c49c:	fcom   DWORD PTR [eax-0x46acb06d]
  40c4a2:	cmp    bl,BYTE PTR [eax+0x3e]
  40c4a5:	fadd   DWORD PTR [edi+ebp*8]
  40c4a8:	push   es
  40c4a9:	lahf   
  40c4aa:	xchg   BYTE PTR [ebp+0x69],cl
  40c4ad:	mov    DWORD PTR ds:0xaf4188fb,edi
  40c4b3:	jge    0x40c49d
  40c4b5:	(bad)  
  40c4b6:	test   eax,0xb13f2270
  40c4bb:	add    cl,BYTE PTR [edi]
  40c4bd:	pop    ecx
  40c4be:	inc    edx
  40c4bf:	push   ebx
  40c4c0:	int    0xed
  40c4c2:	xor    eax,0x3b4c3353
  40c4c7:	inc    esp
  40c4c8:	(bad)  [ebx-0x356d79b2]
  40c4ce:	jp     0x40c4c0
  40c4d0:	jnp    0x40c54d
  40c4d2:	cmp    al,0x55
  40c4d4:	xchg   edi,eax
  40c4d5:	push   ebx
  40c4d6:	adc    bh,BYTE PTR [edx]
  40c4d8:	jge    0x40c53c
  40c4da:	lea    esp,ds:0x2904c749
  40c4e0:	dec    ecx
  40c4e1:	mov    ds:0x2dfbeb41,al
  40c4e6:	pop    ss
  40c4e7:	and    ebx,esi
  40c4e9:	mov    ecx,0xc92690be
  40c4ee:	stc    
  40c4ef:	jge    0x40c4a4
  40c4f1:	pop    eax
  40c4f2:	pop    eax
  40c4f3:	jae    0x40c525
  40c4f5:	jecxz  0x40c50d
  40c4f7:	rcl    DWORD PTR [eax-0x3d],1
  40c4fa:	iret   
  40c4fb:	jns    0x40c4e1
  40c4fd:	adc    bl,BYTE PTR [edx]
  40c4ff:	mov    dl,0xab
  40c501:	stos   BYTE PTR es:[edi],al
  40c502:	bound  ebx,QWORD PTR [ebx]
  40c504:	mov    ah,BYTE PTR [ecx+0x75]
  40c507:	leave  
  40c508:	loopne 0x40c553
  40c50a:	adc    DWORD PTR [edx-0x76],0xffffff87
  40c50e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c50f:	in     al,dx
  40c510:	pusha  
  40c511:	inc    ebp
  40c512:	inc    ebp
  40c513:	dec    ebp
  40c514:	mov    bl,0x37
  40c516:	mov    dh,0xc2
  40c518:	fwait
  40c519:	out    0x44,eax
  40c51b:	or     al,0xca
  40c51d:	xor    DWORD PTR [edi-0x77],esp
  40c520:	push   0x10
  40c522:	retf   0xe584
  40c525:	dec    eax
  40c526:	mov    al,ds:0x80d5bb95
  40c52b:	mov    esi,0xd464a0d3
  40c530:	mov    ds:0x3199362f,al
  40c535:	sbb    ebx,DWORD PTR gs:[edi+0x7fb88ee3]
  40c53c:	cmp    dh,BYTE PTR [esi]
  40c53e:	scas   eax,DWORD PTR es:[edi]
  40c53f:	cld    
  40c540:	pusha  
  40c541:	in     eax,0xcf
  40c543:	scas   eax,DWORD PTR es:[edi]
  40c544:	and    ch,BYTE PTR [edx+0x90e6abb]
  40c54a:	fmul   DWORD PTR [edx+0x67f5d740]
  40c550:	arpl   WORD PTR ds:0xdf4d23c8,bp
  40c556:	arpl   WORD PTR [edi+0x4b],di
  40c559:	addr16 iret 
  40c55b:	sti    
  40c55c:	fistp  DWORD PTR ds:0x2485b4ed
  40c562:	ja     0x40c55d
  40c564:	or     esi,DWORD PTR [edi+ecx*1-0x4f]
  40c568:	lods   al,BYTE PTR ds:[esi]
  40c569:	inc    ebp
  40c56a:	int    0xe
  40c56c:	repnz mov edi,0x87d502ec
  40c572:	ror    DWORD PTR [ebp+0x76],1
  40c575:	retf   
  40c576:	or     edx,DWORD PTR [ecx]
  40c578:	lea    esi,fs:[ebx+esi*1]
  40c57c:	mov    ch,0x74
  40c57e:	leave  
  40c57f:	push   0xffffffc7
  40c581:	cmp    esi,eax
  40c583:	mov    eax,DWORD PTR [ebp-0x4]
  40c586:	je     0x40bbca
  40c58c:	xor    eax,edx
  40c58e:	add    eax,ecx
  40c590:	mov    ecx,DWORD PTR [ebp+0xc]
  40c593:	imul   eax,ecx
  40c596:	add    eax,DWORD PTR [ebp+0x8]
  40c599:	mov    DWORD PTR [ebp+0xc],eax
  40c59c:	mov    eax,DWORD PTR [ebp+0xc]
  40c59f:	jmp    0x40ca43
  40c5a4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c5a5:	xchg   ecx,eax
  40c5a6:	(bad)  
  40c5a7:	pop    ebx
  40c5a8:	neg    DWORD PTR [edi-0x53]
  40c5ab:	jmp    ebp
  40c5ad:	in     eax,0x33
  40c5af:	ss push ss
  40c5b1:	cmp    eax,0xb491e6a1
  40c5b6:	add    BYTE PTR [eax],al
  40c5b8:	xchg   DWORD PTR [eax+eax*1],eax
  40c5bb:	add    BYTE PTR [ebx+ebx*8+0x67aebe15],ch
  40c5c2:	sub    eax,0x9dd9a085
  40c5c7:	inc    esp
  40c5c8:	or     ebx,0xfffffff2
  40c5cb:	ret    
  40c5cc:	pop    edx
  40c5cd:	fidivr WORD PTR [edx+0x1d]
  40c5d0:	fst    QWORD PTR [ebp+0x54]
  40c5d3:	mov    fs,esi
  40c5d5:	xchg   edi,eax
  40c5d6:	cmp    ecx,DWORD PTR ds:[edi-0xd]
  40c5da:	mov    edx,0x9ec35f51
  40c5df:	inc    eax
  40c5e0:	aas    
  40c5e1:	adc    ah,dl
  40c5e3:	out    0xf3,eax
  40c5e5:	push   esi
  40c5e6:	mov    bh,0xee
  40c5e8:	xor    bl,BYTE PTR [eax]
  40c5ea:	jp     0x40c650
  40c5ec:	mov    edi,0x522e5b52
  40c5f1:	xchg   ecx,eax
  40c5f2:	adc    eax,0x94f6fdc8
  40c5f7:	pushf  
  40c5f8:	push   ebx
  40c5f9:	rcr    DWORD PTR [ecx+0x32],cl
  40c5fc:	cs push es
  40c5fe:	pop    ss
  40c5ff:	ficom  DWORD PTR [ecx]
  40c601:	sbb    esi,edx
  40c603:	stos   BYTE PTR es:[edi],al
  40c604:	call   0x2ed1:0xb08597d0
  40c60b:	mov    edx,0xa0bf068
  40c610:	xor    dh,al
  40c612:	outs   dx,DWORD PTR ds:[esi]
  40c613:	or     eax,DWORD PTR ds:0x9031df55
  40c619:	jp     0x40c601
  40c61b:	lahf   
  40c61c:	sub    eax,0xb63a0426
  40c621:	(bad)  
  40c622:	fdivr  QWORD PTR [ecx-0x7c1bf031]
  40c628:	retf   0xf4e7
  40c62b:	sbb    DWORD PTR [esp+ebp*1-0x17],0xffffffcc
  40c630:	pop    edi
  40c631:	lahf   
  40c632:	fnstcw WORD PTR [ebx]
  40c634:	sahf   
  40c635:	mov    eax,ds:0xe06b2a0c
  40c63a:	adc    ecx,DWORD PTR [eax]
  40c63c:	pop    ss
  40c63d:	cmp    eax,0x2d9ff874
  40c642:	dec    esp
  40c643:	and    bl,ch
  40c645:	xchg   ecx,eax
  40c646:	adc    DWORD PTR [edx-0x6187b87c],ecx
  40c64c:	adc    ch,0xb5
  40c64f:	nop
  40c650:	cmp    esi,DWORD PTR [ecx-0xa426717]
  40c656:	stos   BYTE PTR es:[edi],al
  40c657:	mov    ebp,0xc6a2e011
  40c65c:	xor    dh,ch
  40c65e:	psubsw mm2,QWORD PTR [edx+0x1b078588]
  40c665:	or     BYTE PTR [eax+0xf],cl
  40c668:	rcl    BYTE PTR [eax+0x5f622f36],cl
  40c66e:	jg     0x40c6d6
  40c670:	pop    edi
  40c671:	mov    ecx,DWORD PTR [ebx-0x75]
  40c674:	jo     0x40c672
  40c676:	xchg   edx,eax
  40c677:	out    0x9a,al
  40c679:	inc    esp
  40c67a:	pop    ecx
  40c67b:	sahf   
  40c67c:	mov    BYTE PTR [eax+0x6877aaf8],dh
  40c682:	std    
  40c683:	fdivr  QWORD PTR [edi]
  40c685:	adc    esi,DWORD PTR [esi-0x63]
  40c688:	pop    esp
  40c689:	ins    DWORD PTR es:[edi],dx
  40c68a:	add    eax,0xdb09a9ad
  40c68f:	cld    
  40c690:	xchg   BYTE PTR ds:0x63a030dd,dl
  40c696:	fidivr WORD PTR [edi+0x3d]
  40c699:	fwait
  40c69a:	test   ebx,edx
  40c69c:	loopne 0x40c678
  40c69e:	xchg   esi,eax
  40c69f:	outs   dx,BYTE PTR ds:[esi]
  40c6a0:	es fs retf 0x9901
  40c6a5:	and    al,0x27
  40c6a7:	lea    ebx,[edx+0x57a50692]
  40c6ad:	pop    ecx
  40c6ae:	or     BYTE PTR [esi+0x5e78ac28],0x9b
  40c6b5:	nop
  40c6b6:	test   DWORD PTR [ebp+0x673f7acc],ecx
  40c6bc:	retf   
  40c6bd:	push   ebx
  40c6be:	shl    DWORD PTR [esi-0x6184e3db],cl
  40c6c4:	pop    esp
  40c6c5:	adc    al,0xfe
  40c6c7:	gs xor eax,0x77be3c2a
  40c6cd:	retf   0xcc62
  40c6d0:	xchg   ebp,eax
  40c6d1:	sbb    eax,DWORD PTR [eax+esi*1+0xfc86c92]
  40c6d8:	ins    BYTE PTR es:[edi],dx
  40c6d9:	stc    
  40c6da:	adc    BYTE PTR [edx-0x107b0858],al
  40c6e0:	pop    esp
  40c6e1:	pop    es
  40c6e2:	mov    eax,0x4b379cb1
  40c6e7:	clc    
  40c6e8:	loop   0x40c6f7
  40c6ea:	cmp    BYTE PTR [edx-0x23ca6394],dh
  40c6f0:	mov    bl,0x62
  40c6f2:	pop    esi
  40c6f3:	dec    ebp
  40c6f4:	ins    BYTE PTR es:[edi],dx
  40c6f5:	stos   DWORD PTR es:[edi],eax
  40c6f6:	push   ss
  40c6f7:	test   DWORD PTR [ebx+0x45],ebx
  40c6fa:	cmp    cl,BYTE PTR [edx]
  40c6fc:	fild   QWORD PTR ds:0x4c138d51
  40c702:	mov    cl,BYTE PTR [edi-0x7f]
  40c705:	cmp    BYTE PTR [esi+0x29],cl
  40c708:	sub    BYTE PTR [ebx+0x383240eb],0x78
  40c70f:	pop    edi
  40c710:	push   cs
  40c711:	inc    esi
  40c712:	dec    ebp
  40c713:	fisttp DWORD PTR [ecx]
  40c715:	and    BYTE PTR [ebp+0x33],dh
  40c718:	and    eax,0xcf69dd48
  40c71d:	sbb    DWORD PTR [ebp+ebx*8+0x176a0a46],edi
  40c724:	xchg   ah,dl
  40c726:	arpl   di,cx
  40c728:	xor    esi,0xb7a94172
  40c72e:	jmp    0x9a53:0x60e9a420
  40c735:	loopne 0x40c6f2
  40c737:	push   0x2b
  40c739:	ins    BYTE PTR es:[edi],dx
  40c73a:	repnz fwait
  40c73c:	(bad)  
  40c73d:	into   
  40c73e:	push   ebp
  40c73f:	cdq    
  40c740:	fistp  QWORD PTR [edi+ecx*4+0x12]
  40c744:	(bad)  
  40c745:	mov    al,ds:0x74bd11d1
  40c74a:	in     eax,dx
  40c74b:	pop    eax
  40c74c:	adc    BYTE PTR [esi+0xe86f36d],bl
  40c752:	popa   
  40c753:	loop   0x40c73b
  40c755:	fdiv   QWORD PTR ds:0x5d0aa9f8
  40c75b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c75c:	fisub  DWORD PTR [edi-0xbe88382]
  40c762:	jbe    0x40c76d
  40c764:	adc    al,0x79
  40c766:	(bad)
  40c769:	sbb    ebp,DWORD PTR [esi-0x515b2e8c]
  40c76f:	ins    BYTE PTR es:[edi],dx
  40c770:	data16 jb 0x40c6f7
  40c773:	jne    0x40c787
  40c775:	addr16 cmp eax,0x98cdff0d
  40c77b:	pop    ebp
  40c77c:	mov    al,BYTE PTR [ecx-0x5dee9f99]
  40c782:	sbb    al,0xb8
  40c784:	bnd je 0x40c7e9
  40c787:	outs   dx,BYTE PTR ds:[esi]
  40c788:	sub    BYTE PTR [edx+edi*2+0x9],0xae
  40c78d:	adc    dl,bh
  40c78f:	dec    eax
  40c790:	jle    0x40c719
  40c792:	inc    ecx
  40c793:	clc    
  40c794:	sti    
  40c795:	pop    edx
  40c796:	push   0xfc231e08
  40c79b:	out    dx,al
  40c79c:	jmp    0xa5e8:0x6ded0082
  40c7a3:	inc    DWORD PTR [edx+0x5c]
  40c7a6:	repz add dh,BYTE PTR [edi]
  40c7a9:	xlat   BYTE PTR gs:[ebx]
  40c7ab:	xchg   ebx,eax
  40c7ac:	scas   al,BYTE PTR es:[edi]
  40c7ad:	sub    bl,BYTE PTR [edx]
  40c7af:	pop    es
  40c7b0:	sbb    eax,0x3166aab
  40c7b5:	out    0x4c,eax
  40c7b7:	test   eax,0x73ed4f81
  40c7bc:	inc    ebx
  40c7bd:	mov    cl,0xe4
  40c7bf:	adc    DWORD PTR [esi-0x6b],esi
  40c7c2:	and    bl,BYTE PTR [ecx-0x5afec7cd]
  40c7c8:	fadd   QWORD PTR [ecx-0x29]
  40c7cb:	dec    edx
  40c7cc:	inc    edx
  40c7cd:	mov    ds:0xfcf774d,eax
  40c7d2:	add    eax,0x417f64e
  40c7d7:	(bad)  
  40c7d8:	push   ebp
  40c7d9:	xchg   esp,eax
  40c7da:	jb     0x40c827
  40c7dc:	test   dl,cl
  40c7de:	xor    al,ah
  40c7e0:	imul   ecx,DWORD PTR [eax-0x6b6fa30e],0xffffff9e
  40c7e7:	jmp    0x47cf:0x4188b119
  40c7ee:	arpl   WORD PTR [ebx+ecx*8+0x7],ax
  40c7f2:	inc    DWORD PTR [edi+0x1c910b6d]
  40c7f8:	xor    BYTE PTR [eax-0x22b8c306],bl
  40c7fe:	outs   dx,DWORD PTR ds:[esi]
  40c7ff:	rol    BYTE PTR [ebx-0x1e],cl
  40c802:	pop    ecx
  40c803:	int    0x9f
  40c805:	bound  eax,QWORD PTR [edi]
  40c807:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c808:	ror    DWORD PTR [ebp+0xa],1
  40c80b:	adc    al,0x24
  40c80d:	fiadd  DWORD PTR [esi+0x70]
  40c810:	pushf  
  40c811:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c812:	mov    esi,0xeb6073b6
  40c817:	in     eax,dx
  40c818:	fst    DWORD PTR [esi+ebp*8]
  40c81b:	ins    BYTE PTR es:[edi],dx
  40c81c:	fadd   QWORD PTR [ebp+0x76]
  40c81f:	movs   BYTE PTR es:[edi],BYTE PTR ss:[esi]
  40c821:	(bad)  
  40c822:	push   ds
  40c823:	xor    eax,0x19c3de0e
  40c828:	ret    
  40c829:	ja     0x40c85e
  40c82b:	mov    ch,0xd5
  40c82d:	xor    DWORD PTR [ebp-0x6f],ebp
  40c830:	jp     0x40c852
  40c832:	mov    dh,0x28
  40c834:	jmp    0x869:0x8c2de34e
  40c83b:	std    
  40c83c:	ds push ebp
  40c83e:	sbb    al,0x5d
  40c840:	add    DWORD PTR [ebx],ecx
  40c842:	(bad)  
  40c844:	cwde   
  40c845:	and    ecx,DWORD PTR [esi]
  40c847:	test   eax,0x7dcaba2b
  40c84c:	dec    edi
  40c84d:	sub    eax,0x17a6fb44
  40c852:	mov    dh,0xa8
  40c854:	nop
  40c855:	inc    esp
  40c856:	les    edx,FWORD PTR [esi-0x6a60293b]
  40c85c:	push   esp
  40c85d:	sub    edi,DWORD PTR [ecx]
  40c85f:	cwde   
  40c860:	nop
  40c861:	addr16 push es
  40c863:	fld    TBYTE PTR [eax+0x748e9599]
  40c869:	into   
  40c86a:	call   0xdb85a148
  40c86f:	mov    ebx,0x2c06d1bf
  40c874:	fs push ss
  40c876:	jo     0x40c84f
  40c878:	sar    DWORD PTR ss:[edx-0x67],0x2c
  40c87d:	or     eax,0x6eaf2fe2
  40c882:	(bad)  
  40c883:	mov    ds:0x1fc72b67,al
  40c888:	jl     0x40c84a
  40c88a:	out    0x9b,eax
  40c88c:	jnp    0x40c835
  40c88e:	pop    ebx
  40c88f:	mov    ebx,edx
  40c891:	mov    ch,0x4d
  40c893:	loop   0x40c8a1
  40c895:	test   DWORD PTR [ebp-0x31],ecx
  40c898:	and    cl,cl
  40c89a:	ficom  DWORD PTR [edx-0x378b944b]
  40c8a0:	push   esi
  40c8a1:	(bad)
  40c8a5:	pop    eax
  40c8a6:	mov    ds:0x3f5fe51f,al
  40c8ab:	and    edi,ecx
  40c8ad:	or     eax,0x7e78ae5f
  40c8b2:	rcr    DWORD PTR es:[esi-0x146e3dd],cl
  40c8b9:	vpunpckhdq xmm6,xmm3,XMMWORD PTR ds:0x15a609e5
  40c8c1:	mov    BYTE PTR [eax],dl
  40c8c3:	pop    esp
  40c8c4:	jge    0x40c88b
  40c8c6:	lock repnz xchg bl,cl
  40c8ca:	jecxz  0x40c887
  40c8cc:	(bad)  
  40c8cd:	cld    
  40c8ce:	leave  
  40c8cf:	or     al,BYTE PTR [esi+0x7dc1c58a]
  40c8d5:	ins    BYTE PTR es:[edi],dx
  40c8d6:	dec    esi
  40c8d7:	outs   dx,DWORD PTR ds:[esi]
  40c8d8:	sbb    eax,0x8208eda3
  40c8dd:	cwde   
  40c8de:	pop    ebx
  40c8df:	sbb    bl,ah
  40c8e1:	outs   dx,BYTE PTR ds:[esi]
  40c8e2:	fst    DWORD PTR [ecx]
  40c8e4:	pop    edx
  40c8e5:	pop    es
  40c8e6:	daa    
  40c8e7:	fs test cl,dl
  40c8ea:	int3   
  40c8eb:	sub    edx,DWORD PTR [edi-0x3a931a38]
  40c8f1:	in     eax,dx
  40c8f2:	adc    DWORD PTR [ecx],edi
  40c8f4:	xchg   esp,esp
  40c8f6:	add    DWORD PTR [esi+0x705cced8],esi
  40c8fc:	xor    edx,eax
  40c8fe:	xor    ch,BYTE PTR [ebx+0x20fd2b35]
  40c904:	dec    edi
  40c905:	bound  edi,QWORD PTR [eax]
  40c907:	out    0xec,eax
  40c909:	or     DWORD PTR [ecx+edi*2-0x23],ebp
  40c90d:	ins    BYTE PTR es:[edi],dx
  40c90e:	sahf   
  40c90f:	adc    al,0x5b
  40c911:	push   esp
  40c912:	add    BYTE PTR ds:0xa1f0a269,dl
  40c918:	iret   
  40c919:	adc    BYTE PTR [edi+0x39],bl
  40c91c:	ret    0xaf88
  40c91f:	aam    0xa
  40c921:	es loope 0x40c956
  40c924:	inc    edi
  40c925:	mov    BYTE PTR [esi-0x3],al
  40c928:	fwait
  40c929:	out    dx,eax
  40c92a:	mov    al,0x90
  40c92c:	cs popf 
  40c92e:	dec    eax
  40c92f:	mov    dh,0xf1
  40c931:	xor    eax,0xa02e7319
  40c936:	jle    0x40c988
  40c938:	les    ebp,FWORD PTR [ebp-0x39]
  40c93b:	inc    ecx
  40c93c:	les    esi,FWORD PTR [ebx+ebx*8-0x2f]
  40c940:	daa    
  40c941:	or     al,0xa3
  40c943:	lea    bp,[edx]
  40c946:	push   esi
  40c947:	rcr    BYTE PTR [eax+0x4d3774aa],0xec
  40c94e:	fsubrp st(5),st
  40c950:	popa   
  40c951:	clc    
  40c952:	and    esi,ebp
  40c954:	push   esp
  40c955:	jmp    0xd4ab:0x63c986aa
  40c95c:	and    BYTE PTR [ebp+0x71],al
  40c95f:	mov    esp,ebx
  40c961:	fdiv   DWORD PTR [edi+edi*4]
  40c964:	(bad)  
  40c965:	sbb    al,0x85
  40c967:	ror    DWORD PTR [edi+edi*1+0x12007d04],cl
  40c96e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c96f:	xor    DWORD PTR [edi+0x54],ecx
  40c972:	adc    DWORD PTR [edx+edx*4+0x256de67d],ebp
  40c979:	jecxz  0x40c9d3
  40c97b:	sbb    al,0xd1
  40c97d:	outs   dx,DWORD PTR ds:[esi]
  40c97e:	test   ch,0x75
  40c981:	and    ebx,DWORD PTR [ebp+0x34]
  40c984:	jmp    DWORD PTR [edx]
  40c986:	push   ebx
  40c987:	js     0x40c9f6
  40c989:	fcom   st(4)
  40c98b:	mov    edx,0xe8b29f2b
  40c990:	mov    edi,0xb98c4b1d
  40c995:	sti    
  40c996:	pop    ecx
  40c997:	shl    bh,0xf0
  40c99a:	mov    esp,0x9f874311
  40c99f:	in     eax,0x36
  40c9a1:	mov    eax,0xba55178b
  40c9a6:	pop    ebp
  40c9a7:	test   al,0xab
  40c9a9:	push   edi
  40c9aa:	inc    esp
  40c9ab:	adc    DWORD PTR [ecx-0x678856c2],esi
  40c9b1:	xchg   edi,eax
  40c9b2:	out    dx,eax
  40c9b3:	shl    DWORD PTR [ebx],cl
  40c9b5:	scas   eax,DWORD PTR es:[edi]
  40c9b6:	rol    BYTE PTR [eax-0x12],1
  40c9b9:	lods   al,BYTE PTR ds:[esi]
  40c9ba:	or     ecx,DWORD PTR [eax-0x554c3db1]
  40c9c0:	xor    ch,BYTE PTR [esi]
  40c9c2:	sti    
  40c9c3:	retf   
  40c9c4:	cld    
  40c9c5:	stos   BYTE PTR es:[edi],al
  40c9c6:	fs icebp 
  40c9c8:	jmp    0x95ba:0x82d2aea1
  40c9cf:	pop    ds
  40c9d0:	mov    al,0x64
  40c9d2:	fwait
  40c9d3:	hlt    
  40c9d4:	push   esp
  40c9d5:	loop   0x40c97d
  40c9d7:	jp     0x40c99b
  40c9d9:	mov    al,ds:0x98eb0e8b
  40c9de:	fisub  WORD PTR [esi-0x452789bb]
  40c9e4:	xlat   BYTE PTR ds:[ebx]
  40c9e5:	xor    DWORD PTR [ebx+ecx*8],edi
  40c9e8:	and    eax,0xa7118546
  40c9ed:	mov    ebx,0x9b50c467
  40c9f2:	and    ch,BYTE PTR [esi+0x7c]
  40c9f5:	xchg   bl,bh
  40c9f7:	outs   dx,BYTE PTR ds:[esi]
  40c9f8:	(bad)  
  40c9f9:	icebp  
  40c9fa:	lods   al,BYTE PTR ds:[esi]
  40c9fb:	mov    eax,0x3f287b64
  40ca00:	pop    ss
  40ca01:	(bad)  
  40ca02:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ca03:	ret    
  40ca04:	mov    al,ds:0x55faf2f7
  40ca09:	or     edi,ebp
  40ca0b:	pop    ebx
  40ca0c:	mov    BYTE PTR [edx-0x517c77dc],ah
  40ca12:	fiadd  WORD PTR [ecx-0x34344581]
  40ca18:	jg     0x40ca5d
  40ca1a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ca1b:	and    dh,BYTE PTR [esi+edx*4+0x1f]
  40ca1f:	retf   
  40ca20:	popa   
  40ca21:	pop    edi
  40ca22:	je     0x40ca96
  40ca24:	aaa    
  40ca25:	scas   al,BYTE PTR es:[edi]
  40ca26:	or     dh,bh
  40ca28:	(bad)  
  40ca29:	mov    cl,0x90
  40ca2b:	stos   BYTE PTR es:[edi],al
  40ca2c:	mov    ch,0x4
  40ca2e:	mov    ecx,0xa2f3743a
  40ca33:	add    DWORD PTR [ebp+esi*4+0xb],ecx
  40ca37:	call   ebp
  40ca39:	(bad)  
  40ca3a:	xor    BYTE PTR [eax+0xbf1e914],cl
  40ca40:	inc    ecx
  40ca41:	nop
  40ca42:	cld    
  40ca43:	pop    esi
  40ca44:	leave  
  40ca45:	ret    0x8
  40ca48:	mov    ebp,0x3fbe3d83
  40ca4d:	mov    esi,0xd01183bf
  40ca52:	jge    0x40c9db
  40ca54:	push   edx
  40ca55:	mov    edx,0x19a8849b
  40ca5a:	add    BYTE PTR [eax],al
  40ca5c:	xor    eax,0xbf000003
  40ca61:	add    DWORD PTR [esi-0x72],esi
  40ca64:	or     esi,DWORD PTR [edx+eiz*4]
  40ca67:	cmp    eax,0xfb27c2
  40ca6c:	ins    BYTE PTR es:[edi],dx
  40ca6d:	dec    edx
  40ca6e:	(bad)  
  40ca6f:	sbb    edx,ebx
  40ca71:	pop    esp
  40ca72:	call   0x7f0f5d1d
  40ca77:	mov    ah,0x32
  40ca79:	jl     0x40ca40
  40ca7b:	loop   0x40ca6a
  40ca7d:	sub    DWORD PTR [edi-0x31b605f4],ecx
  40ca83:	jnp    0x40ca7c
  40ca85:	scas   eax,DWORD PTR es:[edi]
  40ca86:	mov    dl,0x54
  40ca88:	pop    esi
  40ca89:	jo     0x40ca33
  40ca8b:	pop    es
  40ca8c:	mov    cl,0xd6
  40ca8e:	xchg   ebp,eax
  40ca8f:	cmp    ecx,DWORD PTR [eax-0x48b0f3fa]
  40ca95:	nop
  40ca96:	add    al,0x93
  40ca98:	jge    0x40caf5
  40ca9a:	fst    DWORD PTR [esi]
  40ca9c:	pop    ss
  40ca9d:	mov    ecx,0x489ab0ff
  40caa2:	retf   
  40caa3:	and    DWORD PTR [esi],edi
  40caa5:	imul   ecx,DWORD PTR [ebp+eax*1+0x4e],0x4e
  40caaa:	push   ecx
  40caab:	hlt    
  40caac:	call   0x912c8a0a
  40cab1:	pop    ds
  40cab2:	adc    al,ah
  40cab4:	(bad)  
  40cab5:	cmp    dl,al
  40cab7:	paddq  mm4,mm6
  40caba:	mov    esi,0x453ec932
  40cabf:	pop    ebx
  40cac0:	repz dec ecx
  40cac2:	in     al,0x58
  40cac4:	outs   dx,DWORD PTR ds:[esi]
  40cac5:	lock mov ds:0xdb7d95ce,al
  40cacb:	jp     0x40caca
  40cacd:	outs   dx,BYTE PTR ds:[esi]
  40cace:	fld    QWORD PTR [eax-0x51]
  40cad1:	sbb    al,0x5b
  40cad3:	or     ebp,DWORD PTR ds:0x3f11ac4d
  40cad9:	push   0x880e68d3
  40cade:	popa   
  40cadf:	dec    esi
  40cae0:	fisttp QWORD PTR [edx]
  40cae2:	outs   dx,BYTE PTR ds:[esi]
  40cae3:	ror    BYTE PTR ds:[ecx+0x36],1
  40cae7:	mov    ds:0xdda64bd3,eax
  40caec:	pop    ds
  40caed:	out    dx,eax
  40caee:	xchg   esi,eax
  40caef:	xor    DWORD PTR [edx-0x34],0xb1a0a99b
  40caf6:	adc    al,0x35
  40caf8:	mov    ebx,DWORD PTR [ebp-0x39]
  40cafb:	rcr    ah,1
  40cafd:	mov    bl,0xd7
  40caff:	or     al,0x2
  40cb01:	jnp    0x40cb07
  40cb03:	call   0x6242ab45
  40cb08:	sbb    eax,0x27310038
  40cb0d:	test   DWORD PTR [ebp-0x1f37f75f],edx
  40cb13:	scas   al,BYTE PTR es:[edi]
  40cb14:	test   eax,0xce6d649f
  40cb19:	inc    eax
  40cb1a:	push   ebp
  40cb1b:	call   0x5bdd43e0
  40cb20:	mov    ch,0xe6
  40cb22:	dec    esp
  40cb23:	jmp    0x40cb58
  40cb25:	mov    ecx,0x1415e765
  40cb2a:	pop    ebp
  40cb2b:	xor    eax,0xf5ffa2b1
  40cb30:	outs   dx,DWORD PTR ds:[esi]
  40cb31:	std    
  40cb32:	popa   
  40cb33:	xor    eax,0xf8bdd9f4
  40cb38:	xchg   edx,eax
  40cb39:	or     al,0xe3
  40cb3b:	outs   dx,DWORD PTR ds:[esi]
  40cb3c:	leave  
  40cb3d:	cdq    
  40cb3e:	xor    ebx,DWORD PTR [ebx+edx*2-0x69]
  40cb42:	scas   al,BYTE PTR es:[edi]
  40cb43:	mov    ah,0x0
  40cb45:	loope  0x40cb2c
  40cb47:	mov    cl,0x26
  40cb49:	or     al,0x3f
  40cb4b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40cb4c:	push   eax
  40cb4d:	adc    al,0xfe
  40cb4f:	lock or BYTE PTR [edi],ch
  40cb52:	add    esp,esi
  40cb54:	repnz cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40cb56:	xchg   ebp,eax
  40cb57:	and    eax,0x8f31cb82
  40cb5c:	imul   esi,DWORD PTR [esi+edx*8+0x7],0x7eb241f3
  40cb64:	retf   0x9bae
  40cb67:	jg     0x40cb90
  40cb69:	mov    ebp,0xacdec072
  40cb6e:	sar    BYTE PTR [esi-0xc],cl
  40cb71:	add    al,0xa6
  40cb73:	adc    DWORD PTR [esi+edx*4+0x375cfc3],esp
  40cb7a:	(bad)  
  40cb7c:	jl     0x40cb51
  40cb7e:	shr    DWORD PTR [edx+esi*1-0x7e],1
  40cb82:	jmp    0x40cb3f
  40cb84:	jg     0x40cb52
  40cb86:	pusha  
  40cb87:	inc    edi
  40cb88:	xchg   ebx,eax
  40cb89:	pop    ss
  40cb8a:	pop    es
  40cb8b:	mov    DWORD PTR [edi],esi
  40cb8d:	test   eax,0x48bb8fc1
  40cb92:	mov    al,0xc9
  40cb94:	mov    bl,BYTE PTR [esi+0x5a47d4a3]
  40cb9a:	adc    eax,0xa90f6d54
  40cb9f:	jmp    0x60358ece
  40cba4:	cmp    al,0x13
  40cba6:	or     ebp,DWORD PTR [esi+0x0]
  40cba9:	dec    esi
  40cbaa:	mov    BYTE PTR [edi+edx*2-0x63],dh
  40cbae:	mov    ds:0x596c1102,al
  40cbb3:	add    al,0xbc
  40cbb5:	xchg   ecx,eax
  40cbb6:	xchg   ebp,eax
  40cbb7:	jns    0x40cbbe
  40cbb9:	xchg   ecx,eax
  40cbba:	ds xchg edx,eax
  40cbbc:	mov    ss,WORD PTR [ebp-0x5a]
  40cbbf:	call   0x13e4:0x5ea3f15c
  40cbc6:	sar    BYTE PTR [esi-0x39f3a898],cl
  40cbcc:	jnp    0x40cc22
  40cbce:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40cbcf:	jge    0x40cc27
  40cbd1:	or     ch,0xb
  40cbd4:	sbb    ebx,DWORD PTR [eax]
  40cbd6:	ins    DWORD PTR es:[edi],dx
  40cbd7:	retf   0x5c44
  40cbda:	in     eax,0x23
  40cbdc:	ficomp DWORD PTR [esi+eiz*8-0x78]
  40cbe0:	push   ds
  40cbe1:	into   
  40cbe2:	ja     0x40cc0d
  40cbe4:	sbb    eax,0x3021c872
  40cbe9:	cmp    al,0xf1
  40cbeb:	(bad)  
  40cbec:	jae    0x40cb9d
  40cbee:	mov    eax,0xce640e57
  40cbf3:	int    0xb7
  40cbf5:	sub    DWORD PTR [esi],ecx
  40cbf7:	psrlq  mm7,0xea
  40cbfb:	mov    ds:0xb5898fe9,eax
  40cc00:	mov    esi,0xfed59996
  40cc05:	push   ds
  40cc06:	or     bh,bh
  40cc08:	bnd call 0x4a35cd36
  40cc0e:	cmp    eax,0x7ea53655
  40cc13:	cmp    eax,0xc40af2d9
  40cc18:	push   cs
  40cc19:	int    0x54
  40cc1b:	ja     0x40cc50
  40cc1d:	add    cl,dl
  40cc1f:	add    BYTE PTR [ebx],cl
  40cc21:	jge    0x40cc61
  40cc23:	xchg   esi,eax
  40cc24:	out    dx,eax
  40cc25:	sub    DWORD PTR [ebx+0x3cfa588a],ebx
  40cc2b:	jmp    0x8d47:0xfe9c50eb
  40cc32:	xchg   al,cl
  40cc34:	loopne 0x40ccae
  40cc36:	ins    BYTE PTR es:[edi],dx
  40cc37:	dec    esi
  40cc38:	xchg   edi,eax
  40cc39:	or     cl,BYTE PTR [ebx-0x433357bb]
  40cc3f:	pop    ebx
  40cc40:	xor    al,0xf3
  40cc42:	ss dec edi
  40cc44:	xor    edi,DWORD PTR ds:0xcf792903
  40cc4a:	clc    
  40cc4b:	push   edx
  40cc4c:	test   esp,ebx
  40cc4e:	stc    
  40cc4f:	loope  0x40cc06
  40cc51:	fwait
  40cc52:	aad    0xa0
  40cc54:	(bad)  
  40cc55:	add    BYTE PTR [ecx-0x62],al
  40cc58:	bound  ebx,QWORD PTR [ebx]
  40cc5a:	scas   ax,WORD PTR es:[edi]
  40cc5c:	sbb    eax,0x97b10161
  40cc61:	mov    ebx,0x4348b370
  40cc66:	in     eax,0x44
  40cc68:	in     al,0xaf
  40cc6a:	cmp    dh,BYTE PTR [ecx-0x56]
  40cc6d:	jmp    0x410b9873
  40cc72:	lock adc BYTE PTR [esi+esi*8+0x3d],cl
  40cc77:	jne    0x40cc89
  40cc79:	mov    WORD PTR [ebp-0x47e23e3],ss
  40cc7f:	pop    ebp
  40cc80:	gs push edx
  40cc82:	test   BYTE PTR [edx+eiz*1],cl
  40cc85:	push   cs
  40cc86:	xor    ch,BYTE PTR [edi+0x1391879e]
  40cc8c:	pop    esi
  40cc8d:	loop   0x40cc48
  40cc8f:	or     eax,ebx
  40cc91:	stos   BYTE PTR es:[edi],al
  40cc92:	repnz adc DWORD PTR [edx-0x71],esp
  40cc96:	jmp    0x40cce0
  40cc98:	std    
  40cc99:	test   al,0xe3
  40cc9b:	shl    BYTE PTR [ecx+0x22],cl
  40cc9e:	stos   DWORD PTR es:[edi],eax
  40cc9f:	sbb    edi,DWORD PTR [ebp+0x23909f97]
  40cca5:	jmp    0x8fc3:0x9a521b42
  40ccac:	jnp    0x40cc7b
  40ccae:	jmp    0x40cd16
  40ccb0:	push   ss
  40ccb1:	cmp    bl,BYTE PTR [ebx]
  40ccb3:	mov    ch,0xe0
  40ccb5:	or     BYTE PTR [edx-0x43],dh
  40ccb8:	dec    esi
  40ccb9:	dec    ecx
  40ccba:	mov    al,ds:0x610134d9
  40ccbf:	push   esp
  40ccc0:	scas   eax,DWORD PTR es:[edi]
  40ccc1:	push   0x7d
  40ccc3:	pop    esi
  40ccc4:	push   ds
  40ccc5:	mov    bh,0x13
  40ccc7:	jnp    0x40cd17
  40ccc9:	mov    edi,0x69afd30a
  40ccce:	fst    DWORD PTR [di]
  40ccd1:	push   ss
  40ccd2:	daa    
  40ccd3:	cmc    
  40ccd4:	mov    eax,0xe3b4d208
  40ccd9:	fsub   DWORD PTR [eax+0x51461667]
  40ccdf:	mov    bl,BYTE PTR [ecx+0x7bf01378]
  40cce5:	aaa    
  40cce6:	jle    0x40cc8c
  40cce8:	sbb    BYTE PTR [eax+0x5b],0x4c
  40ccec:	cmp    DWORD PTR [eax+0x6749d371],esi
  40ccf2:	xor    al,0x70
  40ccf4:	fcomp  st(7)
  40ccf6:	push   ecx
  40ccf7:	adc    eax,DWORD PTR [edx]
  40ccf9:	and    ch,dl
  40ccfb:	xor    al,0x57
  40ccfd:	mov    dl,0xc
  40ccff:	popa   
  40cd00:	imul   ebp,DWORD PTR [esi+0x1],0x29b92be
  40cd07:	std    
  40cd08:	out    dx,eax
  40cd09:	gs jo  0x40cd6a
  40cd0c:	jns    0x40cd7c
  40cd0e:	adc    edi,ebp
  40cd10:	push   DWORD PTR [ebp+0x68]
  40cd13:	mov    cs,eax
  40cd15:	and    edi,eax
  40cd17:	add    DWORD PTR [ebp+0x3b9fe24f],ebp
  40cd1d:	xchg   esi,eax
  40cd1e:	adc    al,0x8c
  40cd20:	es pop ds
  40cd22:	enter  0x40b3,0x9e
  40cd26:	out    dx,al
  40cd27:	pop    es
  40cd28:	mov    bl,0xd7
  40cd2a:	das    
  40cd2b:	ret    
  40cd2c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40cd2d:	rol    DWORD PTR [ebx],1
  40cd2f:	repnz leave 
  40cd31:	dec    edi
  40cd32:	mov    edi,ecx
  40cd34:	fild   DWORD PTR [ecx-0x72]
  40cd37:	sub    eax,0xd73e565a
  40cd3c:	ins    BYTE PTR es:[edi],dx
  40cd3d:	es loop 0x40cd07
  40cd40:	mov    ds:0xf37a08db,al
  40cd45:	mov    al,ds:0x37f7da65
  40cd4a:	lock nop
  40cd4c:	lods   al,BYTE PTR ds:[esi]
  40cd4d:	sbb    BYTE PTR [ebp-0x2c8f31d4],dl
  40cd53:	pop    ecx
  40cd54:	mov    WORD PTR [esp+edi*2-0x78],es
  40cd58:	faddp  st(7),st
  40cd5a:	push   eax
  40cd5b:	mov    edi,0x8d24d2ee
  40cd60:	out    0xf2,eax
  40cd62:	lods   eax,DWORD PTR ds:[esi]
  40cd63:	push   0xffffffa6
  40cd65:	push   ebx
  40cd66:	or     esi,ebp
  40cd68:	scas   al,BYTE PTR es:[edi]
  40cd69:	rol    DWORD PTR [edx],0x55
  40cd6c:	xor    ah,BYTE PTR [ebx+ebp*4]
  40cd6f:	retf   
  40cd70:	pop    es
  40cd71:	jmp    0x40cd2b
  40cd73:	mov    ebx,0xe0ed5392
  40cd78:	push   eax
  40cd79:	inc    edi
  40cd7a:	mov    ah,0x66
  40cd7c:	(bad)  
  40cd7d:	sub    ebp,DWORD PTR [ecx]
  40cd7f:	pop    edx
  40cd80:	sub    ebx,esi
  40cd82:	push   esp
  40cd83:	fisub  WORD PTR [eax-0x54c36237]
  40cd89:	adc    BYTE PTR [esi-0x5ea16ac2],dl
  40cd8f:	cmp    ch,bl
  40cd91:	dec    esp
  40cd92:	cmp    BYTE PTR [edx],cl
  40cd94:	sbb    DWORD PTR [ebp-0x75],edx
  40cd97:	in     al,dx
  40cd98:	jmp    0x40d287
  40cd9d:	add    eax,0x592b1954
  40cda2:	outs   dx,DWORD PTR ds:[esi]
  40cda3:	aaa    
  40cda4:	jle    0x40cdb7
  40cda6:	popa   
  40cda7:	push   edx
  40cda8:	cli    
  40cda9:	pusha  
  40cdaa:	mov    esi,0xb918d3ef
  40cdaf:	add    BYTE PTR [eax],al
  40cdb1:	rol    BYTE PTR [eax+eax*1],cl
  40cdb4:	add    BYTE PTR [edx],dh
  40cdb6:	icebp  
  40cdb7:	xchg   ebx,eax
  40cdb8:	out    0xda,al
  40cdba:	sar    edx,1
  40cdbc:	push   ebp
  40cdbd:	lds    eax,FWORD PTR [ecx-0x6f]
  40cdc0:	sub    ebp,ecx
  40cdc2:	jb     0x40cdfc
  40cdc4:	mov    eax,0xea473d1
  40cdc9:	adc    ah,bh
  40cdcb:	dec    ebp
  40cdcc:	jge    0x40cdcd
  40cdce:	cmp    edx,DWORD PTR [ebx]
  40cdd0:	clc    
  40cdd1:	imul   ecx,DWORD PTR [ebx-0x58],0x3fc01fb4
  40cdd8:	xor    edi,0x1500f3b5
  40cdde:	lahf   
  40cddf:	jmp    0x40ce40
  40cde1:	inc    edi
  40cde2:	pop    eax
  40cde3:	das    
  40cde4:	jmp    0x40ce3e
  40cde6:	mov    eax,ecx
  40cde8:	xor    DWORD PTR [ecx+0x6d],ecx
  40cdeb:	(bad)  
  40cdec:	mov    bl,0x4b
  40cdee:	mov    al,ds:0x9939e9ca
  40cdf3:	repz retf 
  40cdf5:	xor    BYTE PTR [edi],ch
  40cdf7:	push   es
  40cdf8:	arpl   WORD PTR [edx+0x71117f43],bp
  40cdfe:	imul   edi,DWORD PTR [ebp-0x49],0x42
  40ce02:	xchg   ebx,eax
  40ce03:	and    BYTE PTR [eax+edx*4+0xedebdb5],dl
  40ce0a:	aad    0xe7
  40ce0c:	(bad)  
  40ce0d:	stos   BYTE PTR es:[edi],al
  40ce0e:	retf   
  40ce0f:	fidiv  DWORD PTR [ebp-0x2aff6409]
  40ce15:	mov    ebx,0x23d1eb6a
  40ce1a:	and    al,0xf7
  40ce1c:	js     0x40ce48
  40ce1e:	cmp    eax,0x92d1ba3b
  40ce23:	or     BYTE PTR [edi],ah
  40ce25:	or     cl,ah
  40ce27:	xor    ebp,edx
  40ce29:	inc    edi
  40ce2a:	repz dec edx
  40ce2c:	fsubr  QWORD PTR [eax]
  40ce2e:	xor    eax,0xadbaf47a
  40ce33:	fs adc ch,ch
  40ce36:	jno    0x40ce9a
  40ce38:	pop    edx
  40ce39:	jae    0x40cdea
  40ce3b:	push   eax
  40ce3c:	and    al,0x21
  40ce3e:	push   esp
  40ce3f:	pop    ebp
  40ce40:	in     eax,dx
  40ce41:	and    ebx,0x3c9b34b0
  40ce47:	sbb    al,0x10
  40ce49:	push   ebx
  40ce4a:	cdq    
  40ce4b:	cwde   
  40ce4c:	mov    es,ebp
  40ce4e:	mov    edx,DWORD PTR [esi+0x4]
  40ce51:	pop    es
  40ce52:	push   eax
  40ce53:	cmp    BYTE PTR [ecx+0xd],0xbe
  40ce57:	out    dx,al
  40ce58:	inc    esp
  40ce59:	inc    ebp
  40ce5a:	adc    BYTE PTR [edx],ah
  40ce5c:	xlat   BYTE PTR ds:[ebx]
  40ce5d:	sar    DWORD PTR [esi],0x1d
  40ce60:	dec    edx
  40ce61:	les    eax,FWORD PTR [esi-0x2b]
  40ce64:	into   
  40ce65:	mov    edi,0xf84b41ad
  40ce6a:	enter  0x72ab,0x29
  40ce6e:	popa   
  40ce6f:	jns    0x40ceab
  40ce71:	inc    esp
  40ce72:	popa   
  40ce73:	daa    
  40ce74:	push   esi
  40ce75:	imul   edx,DWORD PTR [ebp+0x39],0xfb30fe37
  40ce7c:	or     al,0x18
  40ce7e:	rcr    BYTE PTR [ebp+eax*2+0x2e],cl
  40ce82:	pmullw mm3,QWORD PTR [ebx]
  40ce85:	sub    ebx,DWORD PTR [esi+edx*4]
  40ce88:	lods   al,BYTE PTR ds:[esi]
  40ce89:	hlt    
  40ce8a:	push   edi
  40ce8b:	popf   
  40ce8c:	dec    ecx
  40ce8d:	frstor [eax]
  40ce8f:	(bad)  
  40ce90:	ror    BYTE PTR [edx],cl
  40ce92:	shl    BYTE PTR [edx-0x1bdd124c],cl
  40ce98:	sbb    BYTE PTR [edi-0x2],dl
  40ce9b:	stc    
  40ce9c:	jne    0x40ceeb
  40ce9e:	cmp    DWORD PTR [ebx],esp
  40cea0:	jmp    0x40ce4d
  40cea2:	sbb    ah,BYTE PTR [eax]
  40cea4:	in     al,dx
  40cea5:	neg    BYTE PTR [ebp-0x7228fb50]
  40ceab:	xlat   BYTE PTR ds:[ebx]
  40ceac:	mov    es,edx
  40ceae:	into   
  40ceaf:	and    esp,esp
  40ceb1:	jbe    0x40cf11
  40ceb3:	inc    eax
  40ceb4:	test   al,0xfe
  40ceb6:	fs add eax,0xa077fac4
  40cebc:	shl    DWORD PTR [ebx+0x2f],1
  40cebf:	(bad)  
  40cec0:	popf   
  40cec1:	jmp    0x40ce99
  40cec3:	aaa    
  40cec4:	mov    WORD PTR [eax+0x22],gs
  40cec7:	xchg   BYTE PTR [ebx-0x36],bl
  40ceca:	mov    dl,0x74
  40cecc:	es add edx,esp
  40cecf:	fwait
  40ced0:	xlat   BYTE PTR ds:[ebx]
  40ced1:	mov    al,ds:0xfa920bd4
  40ced6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ced7:	(bad)  
  40ced8:	jecxz  0x40cf06
  40ceda:	xchg   DWORD PTR [edi+0x21511df1],esi
  40cee0:	add    dh,dl
  40cee2:	mov    edi,0x9d6d479b
  40cee7:	sti    
  40cee8:	or     cl,BYTE PTR [esi+0x44e8c55]
  40ceee:	cli    
  40ceef:	inc    ecx
  40cef0:	lods   al,BYTE PTR ds:[esi]
  40cef1:	in     eax,0x14
  40cef3:	outs   dx,DWORD PTR ds:[esi]
  40cef4:	mov    eax,ds:0xca9ce15a
  40cef9:	and    BYTE PTR [esi-0x6],ah
  40cefc:	push   ebx
  40cefd:	xor    DWORD PTR [edi+0x76],edx
  40cf00:	repnz lock cld 
  40cf03:	sbb    DWORD PTR [edx],edi
  40cf05:	sbb    ebx,DWORD PTR [edx-0x6f127243]
  40cf0b:	mov    dl,bh
  40cf0d:	mov    ah,0x9
  40cf0f:	js     0x40cee3
  40cf11:	je     0x40cf23
  40cf13:	xor    DWORD PTR [ebx],ecx
  40cf15:	repz imul esi,DWORD PTR [edx+0xb],0x38
  40cf1a:	fdiv   QWORD PTR [ebx-0x7434348c]
  40cf20:	mov    edi,0x517b25be
  40cf25:	pushf  
  40cf26:	test   bl,bl
  40cf28:	mov    eax,ds:0x62cd4147
  40cf2d:	dec    edi
  40cf2e:	rcl    BYTE PTR [edi+0x9],1
  40cf31:	stc    
  40cf32:	arpl   sp,sp
  40cf34:	loope  0x40cfa8
  40cf36:	loop   0x40cedf
  40cf38:	push   es
  40cf39:	push   esp
  40cf3a:	mov    edx,fs
  40cf3c:	cmc    
  40cf3d:	jmp    0x40ced1
  40cf3f:	fstp   st(0)
  40cf41:	mov    ds,WORD PTR [eax]
  40cf43:	rcr    DWORD PTR [ebx+ebx*1-0x76],0x24
  40cf48:	sub    BYTE PTR [ecx+0x648b631f],0xc7
  40cf4f:	data16 sbb BYTE PTR ds:0xecefd824,ah
  40cf56:	jmp    0x644c:0xd4ddc704
  40cf5d:	sbb    bl,BYTE PTR [ebx-0x1c]
  40cf60:	cmp    esi,DWORD PTR [ebp+0x293a69f5]
  40cf66:	aas    
  40cf67:	das    
  40cf68:	fcom   DWORD PTR [edx+0x5dd5b9bc]
  40cf6e:	sub    al,BYTE PTR [edi+0x68]
  40cf71:	shl    dl,1
  40cf73:	mov    esi,DWORD PTR [ecx-0x5d36f6e4]
  40cf79:	sub    dh,BYTE PTR [edi]
  40cf7b:	jl     0x40cfc7
  40cf7d:	mov    BYTE PTR ds:0xa48f2741,0xe8
  40cf84:	adc    BYTE PTR [esp+edx*8-0x45],cl
  40cf88:	leave  
  40cf89:	gs jmp 0xa2a2b021
  40cf8f:	mov    ch,0x3c
  40cf91:	push   cs
  40cf92:	inc    esi
  40cf93:	cmp    DWORD PTR [eax+0x27],edx
  40cf96:	inc    edx
  40cf97:	icebp  
  40cf98:	pushf  
  40cf99:	fsubr  st,st(0)
  40cf9b:	js     0x40cf37
  40cf9d:	inc    esp
  40cf9e:	repz fwait
  40cfa0:	mov    WORD PTR ds:0xafc30c91,?
  40cfa6:	int3   
  40cfa7:	lods   eax,DWORD PTR ds:[esi]
  40cfa8:	aaa    
  40cfa9:	ret    
  40cfaa:	adc    eax,DWORD PTR [ebx+0x60774308]
  40cfb0:	bound  edx,QWORD PTR [edx+ebx*1-0x72]
  40cfb4:	inc    ecx
  40cfb5:	xchg   edi,eax
  40cfb6:	push   esi
  40cfb7:	xchg   esi,eax
  40cfb8:	xchg   ebx,eax
  40cfb9:	jb     0x40cff9
  40cfbb:	push   eax
  40cfbc:	pop    ebx
  40cfbd:	or     al,0xf6
  40cfbf:	test   eax,0xc568e4d1
  40cfc4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40cfc5:	mov    eax,0xb6f784fa
  40cfca:	sbb    dl,bh
  40cfcc:	and    ebp,0xbe9661d0
  40cfd2:	(bad)  
  40cfd3:	jmp    ebx
  40cfd5:	test   eax,0xe17810f
  40cfda:	sub    eax,0x33100933
  40cfdf:	(bad)  
  40cfe0:	ror    DWORD PTR [ebx-0xf],cl
  40cfe3:	mov    WORD PTR [ebx],es
  40cfe5:	jmp    0x2314:0xbbab76b9
  40cfec:	es jno 0x40cf6f
  40cfef:	lods   al,BYTE PTR ds:[esi]
  40cff0:	pop    ebp
  40cff1:	sub    BYTE PTR [ebp+0x4b],bh
  40cff4:	popw   ss
  40cff6:	and    BYTE PTR [esi-0x56],bh
  40cff9:	mov    ecx,0xef3b480e
  40cffe:	jg     0x40d078
  40d000:	and    ecx,eax
  40d002:	push   es
  40d003:	pop    ds
  40d004:	mov    esi,0xe3772713
  40d009:	cmp    BYTE PTR [eax+esi*8+0x2f],bl
  40d00d:	xchg   ebx,eax
  40d00e:	lods   al,BYTE PTR ds:[esi]
  40d00f:	iret   
  40d010:	or     eax,0x74f40cc9
  40d015:	and    ebp,ebx
  40d017:	mov    ah,0xb1
  40d019:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d01a:	inc    esp
  40d01b:	out    0x1f,eax
  40d01d:	sub    ebp,DWORD PTR [esi-0x6f580bc1]
  40d023:	inc    DWORD PTR [esi]
  40d025:	and    edx,edi
  40d027:	retf   0x2d2c
  40d02a:	pop    edi
  40d02b:	std    
  40d02c:	mov    ebp,DWORD PTR ds:0xe5472be4
  40d032:	(bad)  
  40d033:	mov    BYTE PTR [esi-0x45a67280],cl
  40d039:	ret    0x225f
  40d03c:	cdq    
  40d03d:	mov    al,0x35
  40d03f:	and    BYTE PTR [eax*2+0xc1376e3],dh
  40d046:	cmp    esp,DWORD PTR [ebp+0x2aac7284]
  40d04c:	and    ecx,esi
  40d04e:	mov    ?,ebp
  40d050:	sahf   
  40d051:	out    0x2a,eax
  40d053:	imul   esp,DWORD PTR [ecx],0x5f1af677
  40d059:	fild   QWORD PTR [ebx+eax*8+0x33]
  40d05d:	cmp    eax,0x11b87dac
  40d062:	sub    eax,0xf353f58f
  40d067:	inc    ebp
  40d068:	mov    al,ds:0xacd51f08
  40d06d:	push   ds
  40d06e:	adc    al,0x82
  40d070:	push   ebp
  40d071:	and    DWORD PTR [eax-0x75],ebx
  40d074:	stos   DWORD PTR es:[edi],eax
  40d075:	inc    edi
  40d076:	add    DWORD PTR [edx-0x24b5929e],0x77
  40d07d:	stos   BYTE PTR es:[edi],al
  40d07e:	jbe    0x40d0cb
  40d080:	call   0x2bcc:0x6f748d26
  40d087:	lahf   
  40d088:	inc    edi
  40d089:	enter  0x9af5,0x40
  40d08d:	int3   
  40d08e:	addr16 and ch,bh
  40d091:	jge    0x40d057
  40d093:	or     edi,edi
  40d095:	sbb    bh,BYTE PTR [ecx+0x77e34c2]
  40d09b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d09c:	sbb    al,0x5b
  40d09e:	or     al,0x66
  40d0a0:	repz push edx
  40d0a2:	sub    ebx,DWORD PTR [eax]
  40d0a4:	(bad)  
  40d0a5:	dec    edi
  40d0a6:	pusha  
  40d0a7:	cdq    
  40d0a8:	push   0xffffffb8
  40d0aa:	retf   
  40d0ab:	into   
  40d0ac:	mov    ds:0x10f169d6,al
  40d0b1:	shr    BYTE PTR [edi-0x7],0xa1
  40d0b5:	push   cs
  40d0b6:	xchg   ecx,eax
  40d0b7:	mov    ebx,eax
  40d0b9:	and    edx,ecx
  40d0bb:	test   BYTE PTR [ebp-0x46],al
  40d0be:	inc    ebp
  40d0bf:	fwait
  40d0c0:	and    BYTE PTR [esi+0x31],cl
  40d0c3:	pushf  
  40d0c4:	pop    ds
  40d0c5:	xchg   ebp,eax
  40d0c6:	aaa    
  40d0c7:	cmp    al,0xa2
  40d0c9:	bound  ebp,QWORD PTR [edx]
  40d0cb:	and    dl,BYTE PTR [edx]
  40d0cd:	sbb    dl,cl
  40d0cf:	cmp    edx,ebx
  40d0d1:	(bad)  
  40d0d2:	xor    ch,BYTE PTR [edx]
  40d0d4:	adc    bl,BYTE PTR [ecx+0x0]
  40d0d7:	or     al,0xb
  40d0d9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d0da:	aaa    
  40d0db:	pop    esp
  40d0dc:	ss or  dh,cl
  40d0df:	push   cs
  40d0e0:	push   eax
  40d0e1:	adc    al,0x8a
  40d0e3:	and    DWORD PTR ds:0x1d3f7de7,0x55
  40d0ea:	mov    dh,0x24
  40d0ec:	jp     0x76c97b4c
  40d0f2:	stos   BYTE PTR es:[edi],al
  40d0f3:	add    cl,cl
  40d0f5:	(bad)  
  40d0f7:	mov    ds:0x49652d04,al
  40d0fc:	clc    
  40d0fd:	cmp    ah,BYTE PTR [ebx-0x24b11001]
  40d103:	iret   
  40d104:	outs   dx,DWORD PTR ds:[esi]
  40d105:	mov    cs,WORD PTR [bp+di-0x3c]
  40d109:	imul   ecx,DWORD PTR [ebx-0x78],0xffffffa9
  40d10d:	pop    edx
  40d10e:	cmps   DWORD PTR ss:[esi],DWORD PTR es:[edi]
  40d110:	sub    eax,DWORD PTR [esi+0x5]
  40d113:	cmp    BYTE PTR ds:[ecx-0x16],0x77
  40d118:	xor    edi,ebp
  40d11a:	out    dx,eax
  40d11b:	push   0x75
  40d11d:	push   ecx
  40d11e:	mov    ecx,DWORD PTR [eax-0x419b9457]
  40d124:	push   ecx
  40d125:	adc    ch,cl
  40d127:	push   cs
  40d128:	inc    ecx
  40d129:	enter  0xafc1,0xb1
  40d12d:	push   edx
  40d12e:	jb     0x40d109
  40d130:	add    al,0x1b
  40d132:	stos   DWORD PTR es:[edi],eax
  40d133:	cdq    
  40d134:	dec    ebx
  40d135:	xor    eax,DWORD PTR [ebx-0x44e1d033]
  40d13b:	mov    ebx,0xf332204a
  40d140:	mov    ebx,0x93cc575a
  40d145:	pop    esp
  40d146:	repnz xor eax,0x574ee848
  40d14c:	fdivr  QWORD PTR [edx+0x2f]
  40d14f:	or     DWORD PTR ds:0x2eae31bb,ebx
  40d155:	aam    0x5b
  40d157:	sub    al,0x46
  40d159:	pop    esi
  40d15a:	test   ah,dh
  40d15c:	add    bh,BYTE PTR [edx]
  40d15e:	imul   edi,esi,0x1e712365
  40d164:	or     BYTE PTR [ebx-0x57],0xae
  40d168:	popf   
  40d169:	and    eax,esp
  40d16b:	mul    BYTE PTR [edx]
  40d16d:	test   DWORD PTR [ebx+0x4e],eax
  40d170:	add    BYTE PTR [ebx-0x24e13baf],bh
  40d176:	inc    ebp
  40d177:	rcr    DWORD PTR [eax+eax*8+0x4f],cl
  40d17b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d17c:	or     BYTE PTR [esi+esi*1+0x3784f7f8],0x3d
  40d184:	pusha  
  40d185:	(bad)  
  40d186:	dec    edi
  40d187:	ret    
  40d188:	fnsave [eax]
  40d18a:	fcmovb st,st(4)
  40d18c:	repz jo 0x40d177
  40d18f:	test   BYTE PTR es:[ebx-0x3371c2cb],0xdb
  40d197:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d198:	sahf   
  40d199:	adc    DWORD PTR [eax-0x46],edi
  40d19c:	pop    ss
  40d19d:	adc    al,0x94
  40d19f:	push   0x88054787
  40d1a4:	adc    al,0xf9
  40d1a6:	xchg   al,bh
  40d1a8:	sbb    ecx,esp
  40d1aa:	aaa    
  40d1ab:	(bad)  
  40d1ac:	push   esp
  40d1ad:	pushf  
  40d1ae:	repnz out dx,al
  40d1b0:	dec    eax
  40d1b1:	inc    edx
  40d1b2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d1b3:	call   0xd26cf59e
  40d1b8:	sub    al,0xb
  40d1ba:	rcl    eax,0xa
  40d1bd:	je     0x40d174
  40d1bf:	arpl   WORD PTR [edx-0x4d86410],cx
  40d1c5:	dec    ecx
  40d1c6:	ror    BYTE PTR [edi+0x5a795de0],1
  40d1cc:	adc    ebx,DWORD PTR [ecx-0x43bb3dfd]
  40d1d2:	sbb    BYTE PTR [bx+si],bl
  40d1d5:	inc    eax
  40d1d6:	mov    esi,0x969a4fa3
  40d1db:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d1dc:	sub    DWORD PTR [eax+0x72f2d316],0xfffffff5
  40d1e3:	cmp    al,0x82
  40d1e5:	scas   eax,DWORD PTR es:[edi]
  40d1e6:	mov    dh,0xf
  40d1e8:	sub    BYTE PTR [esi+0x39],cl
  40d1eb:	pushf  
  40d1ec:	mov    al,0xa9
  40d1ee:	or     al,0xe4
  40d1f0:	add    al,0xd0
  40d1f2:	and    DWORD PTR [ebx-0x4],ebp
  40d1f5:	fild   WORD PTR [ebp+0xf18abd]
  40d1fb:	fs pop ds
  40d1fd:	xchg   edx,eax
  40d1fe:	les    ebx,FWORD PTR [eax]
  40d200:	and    al,bh
  40d202:	pop    esp
  40d203:	xor    DWORD PTR [ecx+0x5e6e1a2d],edi
  40d209:	and    edi,ecx
  40d20b:	add    al,0x0
  40d20d:	mov    ebx,0x4692e44
  40d212:	jno    0x40d26d
  40d214:	das    
  40d215:	leave  
  40d216:	pop    ebp
  40d217:	(bad)  
  40d218:	jmp    0x9df4:0x2a75996
  40d21f:	sub    eax,DWORD PTR [ebx]
  40d221:	lods   al,BYTE PTR ds:[esi]
  40d222:	scas   al,BYTE PTR es:[edi]
  40d223:	loopne 0x40d289
  40d225:	inc    esi
  40d226:	and    ebx,esi
  40d228:	jmp    0x40d254
  40d22a:	xchg   edi,eax
  40d22b:	imul   eax,edx,0xffffffe9
  40d22e:	out    0xfd,al
  40d230:	jg     0x40d203
  40d232:	jnp    0x40d255
  40d234:	jmp    0x40d23d
  40d236:	aas    
  40d237:	xchg   edi,eax
  40d238:	fstp   DWORD PTR [edx+eax*8+0x6de7399c]
  40d23f:	mov    al,0xb0
  40d241:	lds    esp,FWORD PTR [edx+0x1aecef34]
  40d247:	dec    edi
  40d248:	mov    bl,0x37
  40d24a:	mov    dh,0x73
  40d24c:	addr16 daa 
  40d24e:	jle    0x40d2a9
  40d250:	xchg   BYTE PTR [esi+0x0],bh
  40d253:	int    0x94
  40d255:	push   esi
  40d256:	call   0xa2bf90f8
  40d25b:	(bad)  
  40d25d:	ret    0xd523
  40d260:	sbb    ecx,DWORD PTR [esi]
  40d262:	mov    al,0x72
  40d264:	lahf   
  40d265:	or     BYTE PTR ds:0xe2d8a788,ah
  40d26b:	and    ah,bl
  40d26d:	jns    0x40d266
  40d26f:	push   cs
  40d270:	pop    esi
  40d271:	lahf   
  40d272:	scas   al,BYTE PTR es:[edi]
  40d273:	xor    DWORD PTR [eax-0x30c03715],esi
  40d279:	mov    ecx,0x85e7b760
  40d27e:	enter  0x2906,0x2f
  40d282:	in     eax,0x8d
  40d284:	push   ecx
  40d285:	out    dx,al
  40d286:	hlt    
  40d287:	sub    esp,0x60
  40d28a:	mov    DWORD PTR ds:0x423704,0x6f73
  40d294:	mov    eax,ds:0x421020
  40d299:	mov    eax,DWORD PTR [eax]
  40d29b:	mov    DWORD PTR ds:0x423730,0x505c
  40d2a5:	mov    ds:0x42129c,eax
  40d2aa:	mov    eax,ds:0x4212a4
  40d2af:	mov    DWORD PTR ds:0x4236c0,0x7d92
  40d2b9:	jmp    0x40d7a8
  40d2be:	scas   al,BYTE PTR es:[edi]
  40d2bf:	in     eax,0x77
  40d2c1:	icebp  
  40d2c2:	jg     0x40d2b7
  40d2c4:	scas   al,BYTE PTR es:[edi]
  40d2c5:	dec    DWORD PTR [eax]
  40d2c7:	xor    al,0x85
  40d2c9:	gs je  0x40d2f5
  40d2cc:	jmp    0x40d2a0
  40d2ce:	jmp    0x4:0xd20000bd
  40d2d5:	add    cl,bh
  40d2d7:	into   
  40d2d8:	inc    edx
  40d2d9:	in     al,0x35
  40d2db:	std    
  40d2dc:	add    cl,BYTE PTR [esi]
  40d2de:	mov    ds:0xc01594f5,eax
  40d2e3:	fimul  DWORD PTR [ecx]
  40d2e5:	xor    BYTE PTR [ecx*2+0x51c1507d],bh
  40d2ec:	jl     0x40d301
  40d2ee:	jae    0x40d2c5
  40d2f0:	mov    al,0x27
  40d2f2:	mov    ds:0x2a81439c,eax
  40d2f7:	shl    DWORD PTR ds:0xb7d49420,1
  40d2fd:	outs   dx,BYTE PTR ds:[esi]
  40d2fe:	adc    al,0x6a
  40d300:	aam    0xbf
  40d302:	retf   
  40d303:	xor    DWORD PTR [ecx-0x6c798866],0x61
  40d30a:	test   al,0xfb
  40d30c:	cmp    bh,dh
  40d30e:	or     ebx,DWORD PTR [eax+ecx*4]
  40d311:	jno    0x40d2e9
  40d313:	fldcw  WORD PTR [esi-0x21]
  40d316:	test   DWORD PTR [ecx-0x8],0x555cd536
  40d31d:	jnp    0x40d2aa
  40d31f:	pop    es
  40d320:	fwait
  40d321:	std    
  40d322:	gs dec ebp
  40d324:	cs mov cl,0x43
  40d327:	mov    bl,0x8e
  40d329:	jge    0x40d2e3
  40d32b:	or     edi,ebp
  40d32d:	xor    dh,dl
  40d32f:	enter  0xb356,0x98
  40d333:	mov    ch,BYTE PTR [eax+0x4f]
  40d336:	test   ah,0x76
  40d339:	ret    
  40d33a:	dec    ebp
  40d33b:	fucomip st,st(5)
  40d33d:	sub    eax,DWORD PTR [edx-0x661769b6]
  40d343:	test   BYTE PTR [eax+0x50de1764],bl
  40d349:	ret    
  40d34a:	adc    edx,DWORD PTR [edx]
  40d34c:	push   esi
  40d34d:	ret    
  40d34e:	mov    edi,0x7c59d727
  40d353:	cmp    DWORD PTR [eax],ebp
  40d355:	cmp    al,0xfe
  40d357:	iret   
  40d358:	cld    
  40d359:	xchg   ebp,eax
  40d35a:	sbb    ebp,esp
  40d35c:	in     al,0x9b
  40d35e:	sbb    BYTE PTR [ebx],bh
  40d360:	retf   
  40d361:	push   cs
  40d362:	or     BYTE PTR [esi+ecx*8-0x1a],al
  40d366:	add    al,0x4d
  40d368:	push   ss
  40d369:	jb     0x40d3b0
  40d36b:	cdq    
  40d36c:	test   BYTE PTR [edi+0x31b6e7d],dh
  40d372:	cmp    BYTE PTR [eax+0x8d19dd6],0x9c
  40d379:	or     dl,BYTE PTR [edx+edx*8-0x48]
  40d37d:	jb     0x40d3ef
  40d37f:	xor    ecx,ecx
  40d381:	mov    edx,0xbedbd39b
  40d386:	sub    al,0xa1
  40d388:	jl     0x40d31f
  40d38a:	adc    bl,dh
  40d38c:	inc    edx
  40d38d:	inc    eax
  40d38e:	mov    edi,0xc06aedba
  40d393:	xchg   ecx,eax
  40d394:	shl    DWORD PTR [ebp-0x2bd4720a],1
  40d39a:	and    eax,0xf4c23973
  40d39f:	scas   al,BYTE PTR es:[edi]
  40d3a0:	rcr    eax,1
  40d3a2:	into   
  40d3a3:	in     al,dx
  40d3a4:	lahf   
  40d3a5:	cmp    DWORD PTR [ecx-0x22c70e46],0x6a
  40d3ac:	ins    BYTE PTR es:[edi],dx
  40d3ad:	in     eax,dx
  40d3ae:	sbb    BYTE PTR [edi-0x494a1578],ah
  40d3b4:	mov    al,0x8f
  40d3b6:	cmp    ecx,DWORD PTR fs:[eax+ebp*2+0x240a790a]
  40d3be:	std    
  40d3bf:	stc    
  40d3c0:	cdq    
  40d3c1:	sbb    ecx,DWORD PTR [ebx]
  40d3c3:	out    0x7,eax
  40d3c5:	inc    ebx
  40d3c6:	jp     0x40d3a9
  40d3c8:	retf   0x302c
  40d3cb:	adc    esi,eax
  40d3cd:	push   eax
  40d3cf:	and    BYTE PTR ds:0xd8ce664,dl
  40d3d5:	out    dx,eax
  40d3d6:	(bad)  
  40d3d7:	leave  
  40d3d8:	mov    edi,0xbdc433df
  40d3dd:	inc    edi
  40d3de:	xor    BYTE PTR [ebp-0x684600db],0x31
  40d3e5:	mov    edx,0x4413b16a
  40d3ea:	enter  0x1964,0x31
  40d3ee:	out    0x5b,eax
  40d3f0:	jno    0x40d445
  40d3f2:	add    al,0x23
  40d3f4:	inc    ebp
  40d3f5:	xor    ebx,DWORD PTR [ebp-0x65fc6a1]
  40d3fb:	pop    ds
  40d3fc:	test   al,0xcc
  40d3fe:	jbe    0x40d420
  40d400:	leave  
  40d401:	mov    BYTE PTR [ebx+0x4e0a6dcf],ah
  40d407:	push   ebx
  40d408:	jecxz  0x40d3f6
  40d40a:	ss test ch,ah
  40d40d:	jae    0x40d3ca
  40d40f:	out    0x68,al
  40d411:	daa    
  40d412:	dec    edx
  40d413:	ret    0x8b62
  40d416:	ins    DWORD PTR es:[edi],dx
  40d417:	xchg   ebx,eax
  40d418:	dec    esi
  40d419:	(bad)  
  40d41a:	xlat   BYTE PTR ds:[ebx]
  40d41b:	int3   
  40d41c:	ret    
  40d41d:	stos   BYTE PTR es:[edi],al
  40d41e:	mov    al,ds:0x6e7df827
  40d423:	inc    eax
  40d424:	aas    
  40d425:	mov    gs,WORD PTR [eax-0x66]
  40d428:	xor    dh,BYTE PTR [eax+0x7f55b2cf]
  40d42e:	pop    ebx
  40d42f:	push   0x3
  40d431:	or     BYTE PTR [ebp+0x7ac75197],dl
  40d437:	test   BYTE PTR [edi+0x5b763472],bl
  40d43d:	int    0x2a
  40d43f:	cmp    ebp,DWORD PTR [eax]
  40d441:	or     DWORD PTR [edx-0x43],edi
  40d444:	ins    BYTE PTR es:[edi],dx
  40d445:	jne    0x40d3ce
  40d447:	retf   0xa9e3
  40d44a:	fs (bad) 
  40d44c:	or     al,0xa8
  40d44e:	inc    ecx
  40d44f:	gs dec edi
  40d451:	lds    edx,FWORD PTR [ebx]
  40d453:	loopne 0x40d3f6
  40d455:	xchg   edi,eax
  40d456:	adc    esp,ebp
  40d458:	imul   edx,DWORD PTR [edi],0x56
  40d45b:	in     al,0x66
  40d45d:	add    ebp,DWORD PTR [ecx]
  40d45f:	lds    edi,FWORD PTR [edi-0x3d]
  40d462:	std    
  40d463:	test   ebp,esi
  40d465:	jb     0x40d4c8
  40d467:	mov    edx,0xb61afee2
  40d46c:	lods   al,BYTE PTR ds:[esi]
  40d46d:	push   es
  40d46e:	and    eax,eax
  40d470:	xchg   ebp,eax
  40d471:	mov    esi,ebx
  40d473:	adc    esp,esi
  40d475:	pop    ss
  40d476:	inc    ecx
  40d477:	sub    DWORD PTR [ebp+esi*4+0x34],eax
  40d47b:	dec    ebp
  40d47c:	mov    eax,0x87a55f6a
  40d481:	jno    0x40d44b
  40d483:	mov    ch,0x35
  40d485:	cmp    DWORD PTR [edx-0x66],eax
  40d488:	ds jge 0x40d42d
  40d48b:	ss addr16 jle 0x40d42c
  40d48f:	mov    dl,0x34
  40d491:	push   0x425d34dd
  40d496:	jmp    0x40d495
  40d498:	sbb    DWORD PTR [ecx-0x485153cf],0x78
  40d49f:	xor    DWORD PTR [ebx-0x61],eax
  40d4a2:	mov    edx,0xfd45b592
  40d4a7:	sub    DWORD PTR [eax-0x41],0xc8019c1c
  40d4ae:	nop
  40d4af:	push   0x11
  40d4b1:	ins    DWORD PTR es:[edi],dx
  40d4b2:	pop    edx
  40d4b3:	mov    esi,edi
  40d4b5:	mov    edx,0x6978f20
  40d4ba:	bound  eax,QWORD PTR [ebx-0x39]
  40d4bd:	xchg   esi,eax
  40d4be:	enter  0x3f75,0x80
  40d4c2:	pop    ebx
  40d4c3:	dec    ecx
  40d4c4:	mov    WORD PTR [ebx+0x34],?
  40d4c7:	pop    es
  40d4c8:	jg     0x40d52d
  40d4ca:	mov    esp,0x4fd2dd87
  40d4cf:	add    ecx,DWORD PTR [edi-0x62ae455e]
  40d4d5:	aam    0x17
  40d4d7:	inc    esi
  40d4d8:	es repz leave 
  40d4db:	sub    eax,0x65acb664
  40d4e0:	rcl    BYTE PTR ds:0x9c1e2915,0x16
  40d4e7:	jno    0x40d475
  40d4e9:	sbb    BYTE PTR [ebx],dl
  40d4eb:	xchg   DWORD PTR [eax+0x73],esi
  40d4ee:	aas    
  40d4ef:	int3   
  40d4f0:	jb     0x40d4ed
  40d4f2:	adc    ecx,eax
  40d4f4:	dec    edx
  40d4f5:	adc    DWORD PTR [esi],0x35241a51
  40d4fb:	push   eax
  40d4fc:	cmp    dh,BYTE PTR [esi+0x1827d770]
  40d502:	and    al,0x55
  40d504:	sub    DWORD PTR es:0x587601cb,ebx
  40d50b:	add    BYTE PTR [edi+0x46],0x70
  40d50f:	adc    esp,DWORD PTR [ebp+0x19f9f171]
  40d515:	inc    esi
  40d516:	jns    0x40d537
  40d518:	repnz fucomp st(1)
  40d51b:	jno    0x40d533
  40d51d:	or     eax,0x982af3a7
  40d522:	int    0xf0
  40d524:	mov    ch,0x37
  40d526:	sahf   
  40d527:	xor    eax,0x2ed8a70e
  40d52c:	lock adc BYTE PTR [esi+0x24230f03],bh
  40d533:	pop    ecx
  40d534:	add    ch,BYTE PTR [esi+ebp*2]
  40d537:	push   0x52afb4d1
  40d53c:	cwde   
  40d53d:	mov    eax,0xd2150ea
  40d542:	cld    
  40d543:	scas   eax,DWORD PTR es:[edi]
  40d544:	idiv   DWORD PTR [eax+0x17]
  40d547:	pop    edx
  40d548:	sub    eax,0x533d2bbb
  40d54d:	das    
  40d54e:	xchg   si,ax
  40d550:	in     al,0xd9
  40d552:	inc    BYTE PTR [ebp+0x53438216]
  40d558:	sub    al,0x79
  40d55a:	dec    ebx
  40d55b:	mov    ch,0x4a
  40d55d:	adc    ch,ch
  40d55f:	and    ebp,edi
  40d561:	push   0xfffffffa
  40d563:	sub    BYTE PTR [ebp-0x68],ah
  40d566:	fwait
  40d567:	leave  
  40d568:	cs pop ecx
  40d56a:	fldcw  WORD PTR [edi+0x73b5800e]
  40d570:	pop    esp
  40d571:	adc    edx,DWORD PTR [ebp-0x41]
  40d574:	ins    DWORD PTR es:[edi],dx
  40d575:	jp     0x40d53c
  40d577:	in     eax,0x67
  40d579:	iret   
  40d57a:	jns    0x40d5f8
  40d57c:	into   
  40d57d:	push   ebx
  40d57e:	cmovle esi,DWORD PTR [eax+esi*8+0x3a]
  40d583:	test   al,0x55
  40d585:	cmp    al,0x7f
  40d587:	cmp    dl,bh
  40d589:	ret    0x1370
  40d58c:	fst    DWORD PTR [ecx]
  40d58e:	inc    edx
  40d58f:	push   0xfee18890
  40d594:	push   ss
  40d595:	or     al,0xef
  40d597:	ds (bad) 
  40d599:	xlat   BYTE PTR ds:[ebx]
  40d59a:	fnstcw WORD PTR [eax-0x4999bd92]
  40d5a0:	outs   dx,DWORD PTR ds:[esi]
  40d5a1:	cmp    BYTE PTR [eax-0x2924a939],bh
  40d5a7:	fwait
  40d5a8:	aam    0x7b
  40d5aa:	leave  
  40d5ab:	mov    DWORD PTR [edx-0x62754b75],edx
  40d5b1:	popf   
  40d5b2:	sar    DWORD PTR [edi+0x340c1ad0],1
  40d5b8:	sub    DWORD PTR [ebp-0x623fc54a],ebx
  40d5be:	ret    0x989b
  40d5c1:	xchg   DWORD PTR [edx+ebx*2-0x63dadbb8],esi
  40d5c8:	jae    0x40d591
  40d5ca:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d5cb:	and    ch,BYTE PTR [ecx]
  40d5cd:	push   ebx
  40d5ce:	inc    ebx
  40d5cf:	pop    ecx
  40d5d0:	pop    ds
  40d5d1:	xchg   esp,eax
  40d5d2:	or     al,0x95
  40d5d4:	ds (bad) 
  40d5d7:	(bad)  [esi]
  40d5d9:	stc    
  40d5da:	mov    ebx,DWORD PTR [edi+0x4023f8e4]
  40d5e0:	sbb    ebp,DWORD PTR [ebx+0x72abf2eb]
  40d5e6:	mov    ecx,0x26e0bfb1
  40d5eb:	adc    cl,BYTE PTR [esi]
  40d5ed:	mov    esi,0xab5fdd45
  40d5f2:	mov    ?,WORD PTR [edi-0x63]
  40d5f5:	lods   al,BYTE PTR ds:[esi]
  40d5f6:	push   esi
  40d5f7:	mov    bh,0x25
  40d5f9:	mov    esp,0xdae4535d
  40d5fe:	test   eax,0x1ccc79ad
  40d603:	add    eax,0xaed6635c
  40d608:	je     0x40d5dc
  40d60a:	cmp    al,0xf7
  40d60c:	push   esp
  40d60d:	fs pop ss
  40d60f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d610:	xchg   cl,dh
  40d612:	sar    BYTE PTR [ebp+0x258ca30c],0x4b
  40d619:	pushf  
  40d61a:	and    BYTE PTR [esi-0x6ccdf923],dh
  40d620:	(bad)  
  40d621:	pop    ebx
  40d622:	clc    
  40d623:	or     DWORD PTR [esi],0x5d111842
  40d629:	and    DWORD PTR ss:[edx+0x66],0xbb22509d
  40d631:	in     al,0x9e
  40d633:	push   0x2b
  40d635:	cmc    
  40d636:	adc    BYTE PTR [edi-0x2e],ah
  40d639:	stos   BYTE PTR es:[edi],al
  40d63a:	(bad)  
  40d63b:	push   ebp
  40d63c:	mov    dh,0x4c
  40d63e:	or     eax,0x8d465f8d
  40d643:	std    
  40d644:	out    0xed,al
  40d646:	(bad)  
  40d648:	pusha  
  40d649:	nop
  40d64a:	call   FWORD PTR [ecx]
  40d64c:	mov    dh,0xd3
  40d64e:	adc    bl,ch
  40d650:	push   esi
  40d651:	fisub  DWORD PTR [ecx+0x43bbbfcc]
  40d657:	cmp    eax,0x42c6bbcc
  40d65c:	(bad)  
  40d65d:	and    eax,0x2baa9a06
  40d662:	cs xchg esi,eax
  40d664:	mov    cs,WORD PTR [ecx+0x1afb1e4f]
  40d66a:	push   edx
  40d66b:	jae    0x40d608
  40d66d:	stos   BYTE PTR es:[edi],al
  40d66e:	int    0x24
  40d670:	xlat   BYTE PTR ds:[ebx]
  40d671:	mov    al,ds:0x66b0603e
  40d676:	imul   eax,DWORD PTR [edx+eiz*1-0x78ba0023],0x91fa60ad
  40d681:	or     eax,0x160d75a7
  40d686:	xchg   ecx,eax
  40d687:	add    eax,0x82cfbfb1
  40d68c:	rcr    BYTE PTR es:[ebp+0x5b],0xa5
  40d691:	je     0x40d6fd
  40d693:	in     eax,dx
  40d694:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d695:	or     DWORD PTR [ebp+0x4bd966a],ecx
  40d69b:	jbe    0x40d6be
  40d69d:	jmp    0x40d695
  40d69f:	out    0xf9,eax
  40d6a1:	(bad)  
  40d6a2:	shr    DWORD PTR [eax+0x56],cl
  40d6a5:	dec    esi
  40d6a6:	ret    
  40d6a7:	or     DWORD PTR [edi+ecx*2-0x6b63dbf8],esi
  40d6ae:	push   edi
  40d6af:	jmp    0x44f71011
  40d6b4:	ins    BYTE PTR es:[edi],dx
  40d6b5:	pop    ds
  40d6b6:	or     edi,DWORD PTR [eax+edx*4+0x55637ead]
  40d6bd:	xchg   edi,eax
  40d6be:	fisttp DWORD PTR [eax*8+0x705aff5e]
  40d6c5:	or     edx,ebx
  40d6c7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d6c8:	out    dx,eax
  40d6c9:	adc    DWORD PTR [esi+0x6f],edi
  40d6cc:	xchg   esp,eax
  40d6cd:	push   edx
  40d6ce:	inc    edx
  40d6cf:	cmp    bl,BYTE PTR [eax-0x2d67eaef]
  40d6d5:	and    eax,0x4c68dca8
  40d6da:	or     eax,0x12bf64c7
  40d6df:	imul   ecx,eax,0x4a5d1347
  40d6e5:	add    ebp,edi
  40d6e7:	popa   
  40d6e8:	neg    BYTE PTR [esi]
  40d6ea:	jge    0x40d728
  40d6ec:	adc    cl,BYTE PTR [eax+0x1ed322ce]
  40d6f2:	rcr    BYTE PTR [esi+ebp*2-0x1f99a49e],cl
  40d6f9:	xchg   ecx,eax
  40d6fa:	mov    ecx,0x5fde030a
  40d6ff:	out    0xfb,eax
  40d701:	pop    esi
  40d702:	adc    al,0xc7
  40d704:	mov    al,ds:0x223ca836
  40d709:	sub    ebx,0xffffffdf
  40d70c:	ins    BYTE PTR es:[edi],dx
  40d70d:	jne    0x40d696
  40d70f:	cmp    BYTE PTR [ebx-0x46405c2b],ah
  40d715:	cmc    
  40d716:	and    al,0xf4
  40d718:	push   eax
  40d719:	shr    BYTE PTR [ebx+0x4b],1
  40d71c:	lods   al,BYTE PTR ds:[esi]
  40d71d:	and    DWORD PTR [eiz*8-0x23f3deba],0x808f497a
  40d728:	popf   
  40d729:	clc    
  40d72a:	mov    ds:0x443cbdd4,al
  40d72f:	js     0x40d6dd
  40d731:	call   0xe6a7:0x80657a7d
  40d738:	pop    edi
  40d739:	jmp    0x40d6ee
  40d73b:	mov    ds:0x4a7e59cf,eax
  40d740:	jecxz  0x40d6d8
  40d742:	sub    al,al
  40d744:	or     DWORD PTR [ecx-0x19fb3c4c],ebp
  40d74a:	mov    dl,0xc4
  40d74c:	xor    edx,DWORD PTR [esi-0x1a]
  40d74f:	xchg   esi,eax
  40d750:	mov    ah,cl
  40d752:	sub    ah,BYTE PTR [edx+0x22]
  40d755:	dec    ebx
  40d756:	stos   BYTE PTR es:[edi],al
  40d757:	and    DWORD PTR [ecx+0x34],esp
  40d75a:	cli    
  40d75b:	mov    ds:0xf929cddd,eax
  40d760:	pop    edx
  40d761:	mov    BYTE PTR gs:[ebx+eiz*1+0x17f7d9ce],ah
  40d769:	std    
  40d76a:	pop    ebx
  40d76b:	fiadd  DWORD PTR [edx+ebx*8]
  40d76e:	adc    edi,DWORD PTR [eax-0x33]
  40d771:	and    al,0x37
  40d773:	jecxz  0x40d7f2
  40d775:	xor    edx,ebp
  40d777:	mov    al,ds:0x825a7e27
  40d77c:	rcr    BYTE PTR [edx],cl
  40d77e:	call   0x670210ae
  40d783:	mov    bl,0x9
  40d785:	dec    ecx
  40d786:	dec    eax
  40d787:	ror    DWORD PTR [edi-0x7cf73365],1
  40d78d:	xor    eax,0xe95974f7
  40d792:	gs xchg ecx,eax
  40d794:	scas   al,BYTE PTR es:[edi]
  40d795:	outs   dx,BYTE PTR ds:[esi]
  40d796:	std    
  40d797:	emms   
  40d799:	cdq    
  40d79a:	test   al,0x24
  40d79c:	gs ss pop ds
  40d79f:	stos   DWORD PTR es:[edi],eax
  40d7a0:	xchg   ebx,eax
  40d7a1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d7a2:	and    edi,DWORD PTR [eax+0xb3ef093]
  40d7a8:	cmp    DWORD PTR ds:0x42129c,0x0
  40d7af:	mov    DWORD PTR ds:0x423704,0x17dc
  40d7b9:	mov    DWORD PTR [ebp-0x30],eax
  40d7bc:	push   esi
  40d7bd:	mov    DWORD PTR [ebp-0x34],0xffffe014
  40d7c4:	mov    DWORD PTR ds:0x42367c,0x6db9
  40d7ce:	push   edi
  40d7cf:	mov    DWORD PTR [ebp-0x34],0xffffe041
  40d7d6:	mov    DWORD PTR ds:0x4236fc,0x5da4
  40d7e0:	je     0x417f4c
  40d7e6:	add    DWORD PTR ds:0x423674,0x2015
  40d7f0:	call   0x419242
  40d7f5:	neg    DWORD PTR ds:0x4214f4
  40d7fb:	mov    ds:0x421298,eax
  40d800:	test   eax,eax
  40d802:	mov    DWORD PTR ds:0x423678,0x1116
  40d80c:	je     0x418ee4
  40d812:	inc    ecx
  40d813:	mov    eax,ds:0x42101c
  40d818:	sub    ecx,DWORD PTR ds:0x4214d8
  40d81e:	mov    eax,DWORD PTR [eax]
  40d820:	and    DWORD PTR ds:0x4236b4,0x0
  40d82a:	jmp    0x40d83e
  40d82f:	xor    ecx,ecx
  40d831:	or     ecx,DWORD PTR ds:0x4236b4
  40d837:	inc    ecx
  40d838:	mov    DWORD PTR ds:0x4236b4,ecx
  40d83e:	cmp    DWORD PTR ds:0x4236b4,0x1c
  40d845:	jae    0x40d86d
  40d84b:	cmp    DWORD PTR ds:0x4236b4,0x1e
  40d852:	jne    0x40d866
  40d858:	push   0x81ac
  40d85d:	push   DWORD PTR [ebp-0x28]
  40d860:	call   DWORD PTR ds:0x41f520
  40d866:	jmp    0x40d82f
  40d86b:	sub    ecx,ecx
  40d86d:	mov    esi,0x300a
  40d872:	add    DWORD PTR ds:0x4236a8,edi
  40d878:	push   ebx
  40d879:	sub    DWORD PTR ds:0x4236bc,0x543
  40d883:	mov    ds:0x421294,eax
  40d888:	adc    DWORD PTR ds:0x423700,ecx
  40d88e:	mov    DWORD PTR [ebp-0x20],0x300
  40d895:	adc    ebx,0x2165
  40d89b:	lea    edi,[esi+0x1]
  40d89e:	sbb    ebx,DWORD PTR ds:0x4236bc
  40d8a4:	mov    ebx,0x23523612
  40d8a9:	mov    eax,DWORD PTR [ebp-0x20]
  40d8ac:	mov    ecx,DWORD PTR ds:0x4236fc
  40d8b2:	sub    DWORD PTR ds:0x4236bc,ecx
  40d8b8:	dec    eax
  40d8b9:	and    al,0x3
  40d8bb:	cmp    al,0x1
  40d8bd:	mov    eax,ds:0x421298
  40d8c2:	mov    DWORD PTR ds:0x4214d8,0x3c7e
  40d8cc:	mov    ecx,0xffffcff5
  40d8d1:	mov    DWORD PTR ds:0x42373c,0x6cf0
  40d8db:	jne    0x412d4e
  40d8e1:	add    DWORD PTR ds:0x4236f4,0x423728
  40d8eb:	and    DWORD PTR [ebp-0x2c],0x0
  40d8ef:	jmp    0x40ddde
  40d8f4:	jno    0x40d882
  40d8f6:	cmp    ah,al
  40d8f8:	std    
  40d8f9:	hlt    
  40d8fa:	std    
  40d8fb:	mov    ebp,0x71a69177
  40d900:	(bad)  
  40d901:	lods   al,BYTE PTR ds:[esi]
  40d902:	or     al,0xcc
  40d904:	mov    esp,0xd20000c2
  40d909:	add    al,0x0
  40d90b:	add    BYTE PTR [eax],al
  40d90d:	sbb    DWORD PTR [edx],ecx
  40d90f:	hlt    
  40d910:	fs pop ecx
  40d912:	pop    DWORD PTR [edi]
  40d914:	pop    edx
  40d915:	jecxz  0x40d89f
  40d917:	jmp    0x4788:0xa630dd
  40d91e:	and    dl,BYTE PTR [ebp-0x46edbb7d]
  40d924:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d925:	retf   0x26a5
  40d928:	xchg   ebx,eax
  40d929:	sar    ebx,1
  40d92b:	xchg   edx,eax
  40d92c:	pushw  es
  40d92e:	jg     0x40d9a2
  40d930:	lahf   
  40d931:	add    DWORD PTR [ebp-0x8163275],esp
  40d937:	sbb    al,0x57
  40d939:	in     al,dx
  40d93a:	pushf  
  40d93b:	test   BYTE PTR [ecx-0xbbdc6a6],ah
  40d941:	pop    ebx
  40d942:	pusha  
  40d943:	add    al,0xc3
  40d945:	or     BYTE PTR [edx-0x6e044bbc],dh
  40d94b:	adc    ecx,edx
  40d94d:	fidiv  DWORD PTR [eax]
  40d94f:	pop    es
  40d950:	mov    ?,WORD PTR [ebp+0x3]
  40d953:	inc    ebp
  40d954:	aas    
  40d955:	pop    eax
  40d956:	mov    ss,WORD PTR [ebp+0x23]
  40d959:	xor    BYTE PTR [edx-0x2bee5052],al
  40d95f:	pop    ecx
  40d960:	sar    DWORD PTR [esi+0x42],cl
  40d963:	ja     0x40d8f7
  40d965:	mov    dl,0xd2
  40d967:	push   ebp
  40d968:	push   0x86f6863c
  40d96d:	mov    bh,0x0
  40d96f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d970:	bound  ebx,QWORD PTR [edx+0x67]
  40d973:	loopne 0x40d99c
  40d975:	mov    al,ds:0xf60ae759
  40d97a:	sub    bh,BYTE PTR [ebx+ebp*8]
  40d97d:	int3   
  40d97e:	push   ebx
  40d97f:	cdq    
  40d980:	lahf   
  40d981:	adc    edx,0xffffffc9
  40d984:	cdq    
  40d985:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d986:	inc    edx
  40d987:	imul   eax,edi,0xffffffa8
  40d98a:	dec    ecx
  40d98b:	je     0x40d928
  40d98d:	cmp    BYTE PTR [esi-0x2f],dh
  40d990:	mov    dh,0x9a
  40d992:	sub    BYTE PTR [ecx],0x4a
  40d995:	(bad)  
  40d996:	dec    edi
  40d997:	lsl    esp,bp
  40d99a:	xchg   ebx,eax
  40d99b:	ins    BYTE PTR es:[edi],dx
  40d99c:	pusha  
  40d99d:	or     ah,dl
  40d99f:	sub    esp,ecx
  40d9a1:	mov    ah,0x21
  40d9a3:	jle    0x40d988
  40d9a5:	pushf  
  40d9a6:	mov    al,ds:0x5f05891e
  40d9ab:	pop    edi
  40d9ac:	mov    ah,0x5f
  40d9ae:	faddp  st(5),st
  40d9b0:	into   
  40d9b1:	mov    fs,WORD PTR [eax-0x6f]
  40d9b4:	push   eax
  40d9b5:	dec    edx
  40d9b6:	cli    
  40d9b7:	inc    edi
  40d9b8:	ss aad 0xb3
  40d9bb:	fadd   QWORD PTR [edx]
  40d9bd:	mov    eax,edi
  40d9bf:	nop
  40d9c0:	sti    
  40d9c1:	daa    
  40d9c2:	out    dx,eax
  40d9c3:	test   al,0xff
  40d9c5:	jmp    0x7ab9e56b
  40d9ca:	sbb    al,0xb1
  40d9cc:	dec    ebp
  40d9cd:	sbb    DWORD PTR [edx-0x7e],edx
  40d9d0:	xor    ecx,DWORD PTR [edi]
  40d9d2:	lods   eax,DWORD PTR ds:[esi]
  40d9d3:	dec    ecx
  40d9d4:	es aad 0x53
  40d9d7:	and    BYTE PTR [eax],0x1
  40d9da:	lods   al,BYTE PTR ds:[esi]
  40d9db:	cmp    BYTE PTR [ecx-0x5510f2e6],cl
  40d9e1:	mov    ah,0xf1
  40d9e3:	mov    ecx,0x5c65fdfe
  40d9e8:	imul   DWORD PTR [ebx]
  40d9ea:	xchg   BYTE PTR [ecx],dl
  40d9ec:	shl    ecx,cl
  40d9ee:	sbb    bh,0x25
  40d9f1:	xor    dl,bh
  40d9f3:	loope  0x40da4a
  40d9f5:	mov    ch,0x4c
  40d9f7:	cmp    dh,cl
  40d9f9:	push   ss
  40d9fa:	cs into 
  40d9fc:	rcl    cl,0x98
  40d9ff:	stos   BYTE PTR es:[edi],al
  40da00:	enter  0x9eaa,0xf5
  40da04:	sti    
  40da05:	cmp    al,0x3d
  40da07:	or     al,BYTE PTR [eax+0x20]
  40da0a:	dec    eax
  40da0b:	sub    al,0x57
  40da0d:	dec    eax
  40da0e:	mov    al,ds:0xdcb80327
  40da13:	stc    
  40da14:	mov    ds,WORD PTR [ebx]
  40da16:	and    eax,0x5e4f3b76
  40da1b:	loope  0x40d9f1
  40da1d:	and    BYTE PTR [ebx],bl
  40da1f:	(bad)  
  40da21:	pop    eax
  40da22:	xchg   ebx,eax
  40da23:	mov    esi,0x2e7c94ef
  40da28:	pop    ds
  40da29:	fwait
  40da2a:	add    DWORD PTR [ecx],ebp
  40da2c:	stos   DWORD PTR es:[edi],eax
  40da2d:	pop    edx
  40da2f:	pop    esp
  40da30:	or     eax,0x22d1bb4c
  40da35:	and    ch,BYTE PTR [edx]
  40da37:	bnd jg 0x40d9c2
  40da3a:	(bad)  
  40da3b:	test   eax,0xa76c4d86
  40da40:	push   ds
  40da41:	sahf   
  40da42:	inc    eax
  40da43:	xor    ah,BYTE PTR [edx]
  40da45:	dec    esi
  40da46:	out    dx,al
  40da47:	xor    dh,al
  40da49:	popa   
  40da4a:	adc    BYTE PTR [ebp+ebx*4-0x4621b81e],ch
  40da51:	stos   BYTE PTR es:[edi],al
  40da52:	out    dx,eax
  40da53:	clc    
  40da54:	out    0xdd,eax
  40da56:	fwait
  40da57:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40da58:	jmp    0x904b89d
  40da5d:	ins    BYTE PTR es:[edi],dx
  40da5e:	dec    ebp
  40da5f:	mov    al,ds:0xd8727986
  40da64:	loopne 0x40daad
  40da66:	mov    bl,0x83
  40da68:	aaa    
  40da69:	xor    edx,esi
  40da6b:	ins    DWORD PTR es:[edi],dx
  40da6c:	call   0x5aa3:0x26a5043
  40da73:	daa    
  40da74:	xchg   ecx,eax
  40da75:	outs   dx,BYTE PTR ds:[esi]
  40da76:	outs   dx,DWORD PTR ds:[esi]
  40da77:	add    BYTE PTR [ebp-0x56],0x7c
  40da7b:	call   0xde173c77
  40da80:	dec    esi
  40da81:	bound  esi,QWORD PTR [ecx+0x7d]
  40da84:	out    dx,eax
  40da85:	jle    0x40da6c
  40da87:	and    eax,edi
  40da89:	jae    0x40daf6
  40da8b:	and    cl,BYTE PTR [esi+0x283c53be]
  40da91:	mov    al,0x65
  40da93:	cmp    cl,BYTE PTR [esi]
  40da95:	repz cmp dh,ah
  40da98:	loope  0x40dac3
  40da9a:	pop    es
  40da9b:	pop    edi
  40da9c:	mov    esi,edx
  40da9e:	jp     0x40da6a
  40daa0:	jp     0x40daf9
  40daa2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40daa3:	shr    DWORD PTR [ebp-0x1a],1
  40daa6:	test   eax,0x451d9372
  40daab:	jmp    0x9512c143
  40dab0:	cs fcomip st,st(2)
  40dab3:	test   BYTE PTR [edx+0x7b],0xb1
  40dab7:	fwait
  40dab8:	xor    BYTE PTR [esi+0x70],dh
  40dabb:	lahf   
  40dabc:	outs   dx,DWORD PTR ds:[esi]
  40dabd:	jno    0x40db18
  40dabf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40dac0:	add    bl,0x8a
  40dac3:	ins    DWORD PTR es:[edi],dx
  40dac4:	cld    
  40dac5:	pop    es
  40dac6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40dac7:	sbb    DWORD PTR [esi-0x36],0xd1d42c1a
  40dace:	xor    esp,DWORD PTR [ecx+0x67e23ad1]
  40dad4:	in     eax,dx
  40dad5:	cs push eax
  40dad7:	jp     0x40da65
  40dad9:	push   ds
  40dada:	jo     0x40daba
  40dadc:	push   edx
  40dadd:	scas   al,BYTE PTR es:[edi]
  40dade:	push   esi
  40dadf:	jp     0x40da99
  40dae1:	popa   
  40dae2:	mov    esp,0xac330079
  40dae7:	or     eax,DWORD PTR [ebp-0x1]
  40daea:	jae    0x40db3d
  40daec:	neg    ebx
  40daee:	shl    DWORD PTR [ecx],1
  40daf0:	push   es
  40daf1:	adc    DWORD PTR [edi-0x29318418],ecx
  40daf7:	aam    0xd0
  40daf9:	aad    0x9c
  40dafb:	xchg   esi,eax
  40dafc:	shl    BYTE PTR [eax+0x20ec3fdb],1
  40db02:	inc    edi
  40db03:	aad    0xef
  40db05:	add    eax,0x4716c00f
  40db0a:	jp     0x40db6f
  40db0c:	push   edi
  40db0d:	je     0x40db56
  40db0f:	mov    eax,esi
  40db11:	hlt    
  40db12:	push   ecx
  40db13:	(bad)  
  40db14:	test   eax,0x8cfacfcf
  40db19:	mov    gs,WORD PTR [ebx]
  40db1b:	mov    edx,0xfc8e3b75
  40db20:	mov    eax,ds:0x14fc26af
  40db25:	jmp    FWORD PTR [ecx-0x3a]
  40db28:	mov    al,ds:0xfc9207c3
  40db2d:	imul   edx,DWORD PTR [ebx+0x55],0xd2af11d
  40db34:	mov    ah,0x1f
  40db36:	aas    
  40db37:	push   edi
  40db38:	into   
  40db39:	xchg   edi,eax
  40db3a:	aam    0x90
  40db3c:	jne    0x40db0e
  40db3e:	fstp   DWORD PTR [edx]
  40db40:	ins    BYTE PTR es:[edi],dx
  40db41:	pop    es
  40db42:	outs   dx,DWORD PTR ds:[esi]
  40db43:	int3   
  40db44:	jge    0x40dbb7
  40db46:	inc    ecx
  40db47:	cmp    bl,BYTE PTR [ebx-0x23fc35b2]
  40db4d:	push   cs
  40db4e:	into   
  40db4f:	out    0x30,al
  40db51:	retf   0xb053
  40db54:	add    al,0xc1
  40db56:	jp     0x40db97
  40db58:	push   ebp
  40db59:	jnp    0x40dbda
  40db5b:	jbe    0x40db7d
  40db5d:	cmc    
  40db5e:	push   cs
  40db5f:	mov    edx,DWORD PTR [edx+ecx*8-0x3]
  40db63:	xchg   esp,eax
  40db64:	adc    eax,0x3ffb7aa4
  40db69:	pop    es
  40db6a:	js     0x40dbd2
  40db6c:	iret   
  40db6d:	sub    ch,BYTE PTR [ebp+0xb]
  40db70:	add    BYTE PTR [ebx-0x45],dh
  40db73:	outs   dx,BYTE PTR ds:[esi]
  40db74:	fidiv  WORD PTR [ebx-0x4e]
  40db77:	xchg   esp,eax
  40db78:	and    al,0x18
  40db7a:	xor    BYTE PTR [esi+eiz*2-0x7e415394],ah
  40db81:	out    0xa8,eax
  40db83:	or     cl,BYTE PTR [ecx*2-0x5061df9c]
  40db8a:	imul   esi,DWORD PTR [ebx-0x22],0xffffff8f
  40db8e:	dec    esp
  40db8f:	(bad)  
  40db90:	fs dec eax
  40db92:	mov    dh,0x9c
  40db94:	add    al,0x34
  40db96:	jbe    0x40db24
  40db98:	mov    ds:0x742b20e0,al
  40db9d:	cmp    bh,dh
  40db9f:	mov    edx,0x49e129d8
  40dba4:	inc    ecx
  40dba5:	stos   DWORD PTR es:[edi],eax
  40dba6:	jg     0x40dbc3
  40dba8:	scas   al,BYTE PTR es:[edi]
  40dba9:	in     al,dx
  40dbaa:	dec    ebx
  40dbab:	gs (bad) 
  40dbad:	mov    WORD PTR [eax],gs
  40dbaf:	(bad)  
  40dbb0:	jmp    0x14a88fdb
  40dbb5:	outs   dx,BYTE PTR ds:[esi]
  40dbb6:	test   al,0xcd
  40dbb8:	ret    0xde9e
  40dbbb:	(bad)  
  40dbbc:	and    ebp,DWORD PTR [eax-0x5]
  40dbbf:	retf   0x11e
  40dbc2:	cli    
  40dbc3:	jecxz  0x40dc0f
  40dbc5:	mov    BYTE PTR [ebx],bl
  40dbc7:	das    
  40dbc8:	fild   DWORD PTR [eax]
  40dbca:	aad    0xaa
  40dbcc:	fdivr  DWORD PTR [ecx]
  40dbce:	(bad)  
  40dbcf:	out    0xb0,eax
  40dbd1:	lods   eax,DWORD PTR ds:[esi]
  40dbd2:	push   ss
  40dbd3:	fbstp  TBYTE PTR [eax]
  40dbd5:	cmp    eax,0x83d70c62
  40dbda:	dec    eax
  40dbdb:	fdiv   DWORD PTR [edi-0xc2f0f3a]
  40dbe1:	mov    BYTE PTR [ebp-0x36],ch
  40dbe4:	sub    ecx,esi
  40dbe6:	int    0x26
  40dbe8:	cmp    BYTE PTR [esi+ecx*8],0x16
  40dbec:	mov    dh,0x27
  40dbee:	dec    esi
  40dbef:	dec    ebp
  40dbf0:	or     cl,BYTE PTR [edx-0x49]
  40dbf3:	or     al,0x70
  40dbf5:	mul    BYTE PTR [edx]
  40dbf7:	adc    al,0xdf
  40dbf9:	ins    DWORD PTR es:[edi],dx
  40dbfa:	xor    ah,BYTE PTR [eax-0x5c]
  40dbfd:	imul   esp,DWORD PTR [ebx+0x9],0xa523b38e
  40dc04:	hlt    
  40dc05:	adc    al,0x1f
  40dc07:	ficomp WORD PTR [esi-0x3fc6fb34]
  40dc0d:	push   0xffffffb3
  40dc0f:	sub    BYTE PTR [ebp-0x50],al
  40dc12:	mov    bh,0x88
  40dc14:	sbb    al,0x2c
  40dc16:	cmp    bh,BYTE PTR [eax-0x27]
  40dc19:	scas   eax,DWORD PTR es:[edi]
  40dc1a:	sbb    cl,0xdc
  40dc1d:	inc    ecx
  40dc1e:	in     eax,0x1b
  40dc20:	stc    
  40dc21:	ins    DWORD PTR es:[edi],dx
  40dc22:	cmp    DWORD PTR [esi-0x296c5f9b],edi
  40dc28:	jbe    0x40dc13
  40dc2a:	push   ebp
  40dc2b:	cmp    eax,ebp
  40dc2d:	fistp  QWORD PTR [edx+0x2389153c]
  40dc33:	pushf  
  40dc34:	les    edi,FWORD PTR [edi]
  40dc36:	jnp    0x40dc02
  40dc38:	and    BYTE PTR [esi+ebx*2+0x71c2a333],bl
  40dc3f:	cmp    eax,0x52232c49
  40dc44:	js     0x40dbdd
  40dc46:	dec    edx
  40dc47:	or     edi,DWORD PTR [edx+0x1f18160]
  40dc4d:	pop    eax
  40dc4e:	pop    ecx
  40dc4f:	mov    dh,dl
  40dc51:	mul    ch
  40dc53:	cwde   
  40dc54:	in     al,0x89
  40dc56:	fldenv [ebx-0x18]
  40dc59:	cs aas 
  40dc5b:	jne    0x40dc23
  40dc5d:	pop    eax
  40dc5e:	mov    ebx,0xc5839f5f
  40dc63:	adc    bl,BYTE PTR [edx+0x51]
  40dc66:	xchg   ecx,eax
  40dc67:	add    al,0x2b
  40dc69:	call   0x9ba0:0x9277c0e9
  40dc70:	cmp    DWORD PTR [edx],esi
  40dc72:	jl     0x40dc8d
  40dc74:	sbb    al,0xde
  40dc76:	adc    ebx,DWORD PTR [esi]
  40dc78:	cmp    cl,dl
  40dc7a:	scas   eax,DWORD PTR es:[edi]
  40dc7b:	bound  eax,QWORD PTR [eax]
  40dc7d:	aas    
  40dc7e:	cld    
  40dc7f:	jns    0x40dc8f
  40dc81:	mov    ah,0x57
  40dc83:	mov    al,0x13
  40dc85:	aaa    
  40dc86:	loope  0x40dcab
  40dc88:	mov    ebx,0x737650d8
  40dc8d:	pop    edi
  40dc8e:	dec    esi
  40dc8f:	aaa    
  40dc90:	ror    BYTE PTR [eax+0x71f76a2c],1
  40dc96:	or     DWORD PTR [ebx+eiz*8+0x3db66e02],eax
  40dc9d:	dec    edx
  40dc9e:	std    
  40dc9f:	sub    eax,0x22ecd5e8
  40dca4:	imul   esp,edi,0xd1014bba
  40dcaa:	xchg   esi,eax
  40dcab:	sub    eax,DWORD PTR [ebx-0x31]
  40dcae:	push   es
  40dcaf:	xchg   ebx,eax
  40dcb0:	outs   dx,BYTE PTR ds:[esi]
  40dcb1:	pop    esi
  40dcb2:	pop    edx
  40dcb3:	mov    eax,0xded061
  40dcb8:	xchg   ecx,eax
  40dcb9:	aam    0xfa
  40dcbb:	(bad)  
  40dcbc:	stc    
  40dcbd:	int3   
  40dcbe:	fs ins DWORD PTR es:[edi],dx
  40dcc0:	cmp    BYTE PTR fs:[edx],dh
  40dcc3:	push   0xffffffb8
  40dcc5:	xchg   esi,eax
  40dcc6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40dcc7:	int    0x91
  40dcc9:	inc    eax
  40dcca:	mov    edi,0x8612cd70
  40dccf:	nop
  40dcd0:	popa   
  40dcd1:	arpl   WORD PTR [ebp+esi*8-0x6b7e29c5],sp
  40dcd8:	loop   0x40dd3b
  40dcda:	test   al,0x1b
  40dcdc:	aad    0x60
  40dcde:	lods   al,BYTE PTR ds:[esi]
  40dcdf:	cmp    cl,BYTE PTR [ebp+0x399a44ac]
  40dce5:	push   0xffffff8f
  40dce7:	aad    0xe
  40dce9:	rcr    BYTE PTR [ebp+0x24],cl
  40dcec:	aas    
  40dced:	pop    esi
  40dcee:	int    0x63
  40dcf0:	mov    BYTE PTR [eax-0x6f4d6713],0x82
  40dcf7:	push   ebx
  40dcf8:	push   es
  40dcf9:	(bad)  
  40dcfa:	mov    eax,ds:0x293418af
  40dcff:	ds repz xor al,0x20
  40dd03:	retf   0x609c
  40dd06:	inc    ecx
  40dd07:	dec    ebx
  40dd08:	loop   0x40dcd9
  40dd0a:	jl     0x40dcb1
  40dd0c:	outs   dx,DWORD PTR ds:[esi]
  40dd0d:	cmp    ecx,DWORD PTR [eax]
  40dd0f:	lods   al,BYTE PTR ds:[esi]
  40dd10:	stc    
  40dd11:	push   ss
  40dd12:	xchg   edi,eax
  40dd13:	inc    ebp
  40dd14:	inc    eax
  40dd15:	sbb    BYTE PTR [ebx+0xa],bl
  40dd18:	iret   
  40dd19:	in     eax,0xe8
  40dd1b:	(bad)  
  40dd1c:	hlt    
  40dd1d:	in     al,0x25
  40dd1f:	or     eax,0x6fc7ec7c
  40dd24:	aad    0x8
  40dd26:	lahf   
  40dd27:	out    0xdb,eax
  40dd29:	mov    al,ds:0xe7a44a25
  40dd2e:	push   edx
  40dd2f:	retf   
  40dd30:	jg     0x40dd5f
  40dd32:	push   ebx
  40dd33:	xor    BYTE PTR [ebp+0xd],0xbb
  40dd37:	mov    cl,0xdb
  40dd39:	(bad)  
  40dd3a:	iret   
  40dd3b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40dd3c:	dec    edx
  40dd3d:	inc    esi
  40dd3e:	pop    ebx
  40dd3f:	ins    BYTE PTR es:[edi],dx
  40dd40:	mov    al,ds:0x3dc09c96
  40dd45:	jmp    0x40dd62
  40dd47:	add    ecx,DWORD PTR [ecx]
  40dd49:	loopne 0x40dd3f
  40dd4b:	call   0x1431:0x93c0b98d
  40dd52:	and    esp,DWORD PTR [edx-0x6a]
  40dd55:	aas    
  40dd56:	xchg   edx,eax
  40dd57:	hlt    
  40dd58:	dec    edi
  40dd59:	cdq    
  40dd5a:	loopne 0x40dd40
  40dd5c:	sahf   
  40dd5d:	shr    BYTE PTR [edi],cl
  40dd5f:	cs leave 
  40dd61:	pop    edi
  40dd62:	shl    BYTE PTR [esi-0x1f02635c],0x52
  40dd69:	sbb    BYTE PTR [ecx],0xf
  40dd6c:	rol    esp,cl
  40dd6e:	jne    0x40dded
  40dd70:	xor    eax,0x5be7d61a
  40dd75:	fistp  QWORD PTR [edi]
  40dd77:	push   0xcba39440
  40dd7c:	daa    
  40dd7d:	test   DWORD PTR [edi-0x62],ecx
  40dd80:	icebp  
  40dd81:	cmp    eax,0xa9ad8531
  40dd86:	std    
  40dd87:	stos   DWORD PTR es:[edi],eax
  40dd88:	rcl    BYTE PTR [edx+0x2d],cl
  40dd8b:	das    
  40dd8c:	imul   edx,ecx,0xfc589e0a
  40dd92:	jg     0x40de05
  40dd94:	js     0x40dd7c
  40dd96:	inc    esi
  40dd97:	mov    al,0xae
  40dd99:	ins    DWORD PTR es:[edi],dx
  40dd9a:	cs into 
  40dd9c:	mov    eax,0x375f51c4
  40dda1:	sub    eax,0x678a3c3f
  40dda6:	dec    ebp
  40dda7:	aas    
  40dda8:	add    eax,0xb22c2088
  40ddad:	ja     0x40de2a
  40ddaf:	cwde   
  40ddb0:	pop    esp
  40ddb1:	mov    ebx,DWORD PTR [ebx+0x4]
  40ddb4:	cld    
  40ddb5:	rcl    esi,1
  40ddb7:	sbb    eax,0xd8a35da5
  40ddbc:	sahf   
  40ddbd:	sub    bl,BYTE PTR [eax+0x74]
  40ddc0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ddc1:	inc    DWORD PTR [ebp-0x57]
  40ddc4:	ret    0xa491
  40ddc7:	ins    DWORD PTR es:[edi],dx
  40ddc8:	repnz outs dx,BYTE PTR ds:[si]
  40ddcb:	int    0x5e
  40ddcd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ddce:	pop    ebx
  40ddcf:	add    eax,0xab7d7eb8
  40ddd4:	xor    edi,edx
  40ddd6:	mov    DWORD PTR [ebx+esi*8+0x13b5fa50],eax
  40dddd:	mov    ds:0x81d84589,eax
  40dde2:	sub    eax,0x4236e8
  40dde7:	hlt    
  40dde8:	adc    al,0x42
  40ddea:	add    BYTE PTR [ecx+0x42129c],ah
  40ddf0:	mov    DWORD PTR [ebp-0x30],0xffffe03b
  40ddf7:	sbb    DWORD PTR ds:0x4236b4,0x4b6c
  40de01:	mov    DWORD PTR [ebp-0x34],0xfffffff5
  40de08:	mov    DWORD PTR [ebp-0x14],0xffffffff
  40de0f:	mov    DWORD PTR [ebp-0xc],0xfffffffc
  40de16:	xor    DWORD PTR ds:0x4236f0,0x1310
  40de20:	mov    DWORD PTR [ebp-0x18],0xfffffffd
  40de27:	mov    DWORD PTR [ebp-0x24],eax
  40de2a:	mov    eax,DWORD PTR [ebp-0xc]
  40de2d:	sub    DWORD PTR ds:0x4236f8,0x1bc2
  40de37:	xor    eax,esi
  40de39:	sub    DWORD PTR ds:0x42366c,0x4236bc
  40de43:	sub    ecx,eax
  40de45:	jmp    0x40e334
  40de4a:	scas   al,BYTE PTR es:[di]
  40de4c:	mov    DWORD PTR [ebp-0x11905837],eax
  40de52:	and    eax,0x1cb5db3b
  40de57:	jmp    0x40debc
  40de59:	stc    
  40de5a:	mov    es,edi
  40de5c:	add    BYTE PTR [eax],al
  40de5e:	rol    BYTE PTR [eax+eax*1],cl
  40de61:	add    BYTE PTR ds:0x9fad2087,ah
  40de67:	(bad)  
  40de68:	loope  0x40dee0
  40de6a:	scas   eax,DWORD PTR es:[edi]
  40de6b:	inc    esi
  40de6c:	pushf  
  40de6d:	lods   al,BYTE PTR ds:[esi]
  40de6e:	fidivr WORD PTR [ebp+0x324fe6d]
  40de74:	push   0xcde2daba
  40de79:	sbb    ebp,DWORD PTR [edi]
  40de7b:	test   DWORD PTR [edi],ecx
  40de7d:	inc    ebx
  40de7e:	inc    ebp
  40de7f:	dec    eax
  40de80:	adc    DWORD PTR [ebx],0x19
  40de83:	mov    al,BYTE PTR [edi-0x4e8416e2]
  40de89:	repz xor ah,BYTE PTR [ebx-0x33]
  40de8d:	ficom  DWORD PTR [ebp+0x4db98c8b]
  40de93:	jmp    FWORD PTR [ebp-0x5df7a808]
  40de99:	pusha  
  40de9a:	jo     0x40de86
  40de9c:	int    0xa0
  40de9e:	mov    ds:0x933f9f6d,eax
  40dea3:	pop    edi
  40dea4:	gs mov bl,0x4d
  40dea7:	sbb    eax,0x9014ea3d
  40deac:	call   0x7d2a:0x31e944fc
  40deb3:	rcl    ebx,1
  40deb5:	push   es
  40deb6:	fbld   TBYTE PTR [ebx+0x3d]
  40deb9:	mov    ds:0x21ad4c6a,al
  40debe:	sti    
  40debf:	mov    DWORD PTR [ebp+0x56],ebp
  40dec2:	and    eax,0x82f46cd1
  40dec7:	add    ebp,DWORD PTR [ebp+0x19322370]
  40decd:	inc    ebx
  40dece:	adc    eax,0x3783a376
  40ded3:	adc    DWORD PTR [ecx],0x977f4349
  40ded9:	ror    BYTE PTR [eax],1
  40dedb:	loop   0x40dee3
  40dedd:	inc    ecx
  40dede:	call   0xf6a1:0x19c21a4f
  40dee5:	add    ebp,DWORD PTR [eax+ecx*4]
  40dee8:	or     al,0x65
  40deea:	out    0xbd,al
  40deec:	addr16 jae 0x40decf
  40deef:	dec    ebp
  40def0:	sbb    eax,ebp
  40def2:	adc    ebp,esp
  40def4:	aas    
  40def5:	cmp    al,BYTE PTR [esi+ebx*2-0x6a1be800]
  40defc:	inc    edx
  40defd:	dec    ebp
  40defe:	mov    ebp,0x27ffef50
  40df03:	xor    eax,0xaaf2c7f8
  40df08:	mov    bl,0x3f
  40df0a:	adc    al,dl
  40df0c:	cmc    
  40df0d:	and    eax,0xcb34f656
  40df12:	jecxz  0x40df07
  40df14:	fsub   DWORD PTR [ebp+0x20]
  40df17:	clc    
  40df18:	bound  ebp,QWORD PTR ds:0x813c3113
  40df1e:	fcmovnbe st,st(7)
  40df20:	push   0xafe0a711
  40df25:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40df26:	mov    ecx,DWORD PTR [eax+edx*2+0x4b8bbd2a]
  40df2d:	jnp    0x40df22
  40df2f:	js     0x40df28
  40df31:	push   esi
  40df32:	or     al,0x3b
  40df34:	pop    edx
  40df35:	mov    ebp,0x7bc84722
  40df3a:	cmc    
  40df3b:	pop    esp
  40df3c:	mov    al,0x20
  40df3e:	push   cs
  40df3f:	test   al,0x1b
  40df41:	fstp   QWORD PTR [edx+0x1f]
  40df44:	enter  0x831f,0x3
  40df48:	imul   cl
  40df4a:	(bad)  
  40df4b:	sbb    al,0x40
  40df4d:	cwde   
  40df4e:	outs   dx,BYTE PTR ds:[esi]
  40df4f:	out    dx,eax
  40df50:	fist   DWORD PTR [eax-0x523ff5e0]
  40df56:	test   al,0x2e
  40df58:	je     0x40dee1
  40df5a:	in     eax,dx
  40df5b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40df5c:	jnp    0x40dfbd
  40df5e:	stos   BYTE PTR es:[edi],al
  40df5f:	mov    eax,0x8a528dda
  40df64:	xor    BYTE PTR [esi+0x1d4a3bd2],ch
  40df6a:	jo     0x40df84
  40df6c:	add    DWORD PTR [edx+0x43054f86],edx
  40df72:	loop   0x40df0c
  40df74:	inc    edx
  40df75:	pop    edx
  40df76:	dec    eax
  40df77:	xchg   ecx,eax
  40df78:	push   esi
  40df79:	in     al,dx
  40df7a:	pop    esi
  40df7b:	mov    al,0x97
  40df7d:	push   eax
  40df7e:	push   ds
  40df7f:	xchg   esp,eax
  40df80:	add    eax,0x6d725e2a
  40df85:	xchg   edi,eax
  40df86:	mov    ds:0x85cd01e0,eax
  40df8b:	adc    ecx,ebp
  40df8d:	pop    ecx
  40df8e:	icebp  
  40df8f:	push   esp
  40df90:	dec    ebp
  40df91:	mov    al,0xcc
  40df93:	pop    ebp
  40df94:	sbb    al,0x64
  40df96:	inc    ebp
  40df97:	aas    
  40df98:	cmp    ah,BYTE PTR [ebp+ebx*2-0x1f]
  40df9c:	jns    0x40dff5
  40df9e:	inc    edi
  40df9f:	cmp    ah,BYTE PTR [esi-0x26]
  40dfa2:	dec    ebx
  40dfa3:	dec    ecx
  40dfa4:	bound  edx,QWORD PTR [esi+0x774253f9]
  40dfaa:	inc    ebp
  40dfab:	jo     0x40df38
  40dfad:	and    dl,BYTE PTR [edi]
  40dfaf:	aam    0xe5
  40dfb1:	lds    ecx,FWORD PTR [edi+ebx*8]
  40dfb4:	jp     0x40df94
  40dfb6:	pop    ds
  40dfb7:	xor    eax,esp
  40dfb9:	or     eax,0xb2f5eb6
  40dfbe:	sahf   
  40dfbf:	pop    esp
  40dfc0:	jg     0x40e03c
  40dfc2:	ret    
  40dfc3:	in     eax,dx
  40dfc4:	ins    BYTE PTR es:[edi],dx
  40dfc5:	retf   
  40dfc6:	fcomp  QWORD PTR [eax+ebx*8+0xa]
  40dfca:	and    DWORD PTR [edi-0xa62ef5a],esi
  40dfd0:	test   BYTE PTR [esi-0x4c],dl
  40dfd3:	test   BYTE PTR [ecx+0x3404549f],ah
  40dfd9:	pusha  
  40dfda:	jle    0x40dfec
  40dfdc:	(bad)  
  40dfdd:	stos   DWORD PTR es:[edi],eax
  40dfde:	aas    
  40dfdf:	xchg   esp,eax
  40dfe0:	jmp    0x40e02c
  40dfe2:	sub    eax,0x43efbdd8
  40dfe7:	je     0x40dffa
  40dfe9:	test   al,0x71
  40dfeb:	mov    dl,0x52
  40dfed:	fistp  DWORD PTR [si-0x13]
  40dff1:	xchg   esp,eax
  40dff2:	in     al,dx
  40dff3:	popf   
  40dff4:	add    eax,0x1ed1fa86
  40dff9:	pusha  
  40dffa:	dec    eax
  40dffb:	inc    edx
  40dffc:	(bad)  
  40dffd:	(bad)  
  40dffe:	fild   QWORD PTR [ebp*1-0x54d8925e]
  40e005:	in     al,0xf2
  40e007:	ss out 0x1a,al
  40e00a:	fst    QWORD PTR [eax]
  40e00c:	ja     0x40df91
  40e00e:	stos   DWORD PTR es:[edi],eax
  40e00f:	ins    DWORD PTR es:[edi],dx
  40e010:	les    edx,FWORD PTR [esi-0x5893601d]
  40e016:	cmp    eax,DWORD PTR [esi+0x25]
  40e019:	(bad)  
  40e01a:	mov    ecx,0xc7c18865
  40e01f:	mov    WORD PTR [di],es
  40e022:	push   ebp
  40e023:	ds push 0x2079571f
  40e029:	out    dx,eax
  40e02a:	mov    dh,0x9e
  40e02c:	pop    ebp
  40e02d:	ret    0x6fe0
  40e030:	(bad)  
  40e031:	mov    esp,0x756b7f
  40e036:	mov    ebx,DWORD PTR [ebx]
  40e038:	jb     0x40dff5
  40e03a:	popf   
  40e03b:	cli    
  40e03c:	dec    edx
  40e03d:	dec    edx
  40e03e:	lea    ebx,[ebx-0x2fa91471]
  40e044:	xchg   edi,eax
  40e045:	pop    ds
  40e046:	or     BYTE PTR [ebx+0x55ec70d9],cl
  40e04c:	mov    WORD PTR [esi],ss
  40e04e:	es jae 0x40e04b
  40e051:	xor    DWORD PTR [eax+0x4a0155eb],ebx
  40e057:	fdiv   DWORD PTR [ebp+eiz*2-0x3c94d3eb]
  40e05e:	mov    dh,0x7f
  40e060:	push   cs
  40e061:	xor    ebx,0xffffff82
  40e064:	ret    0xaf17
  40e067:	test   eax,0x1a36ff73
  40e06c:	stos   BYTE PTR es:[edi],al
  40e06d:	inc    edi
  40e06e:	pop    ss
  40e06f:	and    al,0x5c
  40e071:	add    DWORD PTR [edi+0x69f46ee],esp
  40e077:	call   0xff2bee0d
  40e07c:	test   al,0x51
  40e07e:	jno    0x40e06a
  40e080:	out    dx,eax
  40e081:	(bad)  
  40e082:	fsubr  QWORD PTR [eax-0x14b3d524]
  40e088:	jo     0x40e092
  40e08a:	and    ah,BYTE PTR [esi+0x12e5a823]
  40e090:	in     eax,dx
  40e091:	mov    BYTE PTR [edi+ebx*1],al
  40e094:	fisub  DWORD PTR [ebx+eiz*2]
  40e097:	adc    edi,DWORD PTR [edx-0x7]
  40e09a:	das    
  40e09b:	in     eax,dx
  40e09c:	sbb    BYTE PTR [esi],bh
  40e09e:	imul   eax,DWORD PTR [ecx],0x63d27dc4
  40e0a4:	fiadd  WORD PTR [eax]
  40e0a6:	mov    ebp,0xd87527fd
  40e0ab:	sbb    al,0xb9
  40e0ad:	and    al,0x84
  40e0af:	jl     0x40e0e8
  40e0b1:	das    
  40e0b2:	les    ebp,FWORD PTR [ecx]
  40e0b4:	lods   al,BYTE PTR ds:[esi]
  40e0b5:	or     eax,0xf8935dde
  40e0ba:	xchg   BYTE PTR [edx+ecx*4],bl
  40e0bd:	dec    eax
  40e0be:	mov    ah,BYTE PTR [eax]
  40e0c0:	aad    0xa7
  40e0c2:	jge    0x40e100
  40e0c4:	jb     0x40e089
  40e0c6:	retf   
  40e0c7:	aas    
  40e0c8:	xchg   edx,eax
  40e0c9:	fs jnp 0x40e08a
  40e0cc:	or     esp,esi
  40e0ce:	inc    esi
  40e0cf:	loop   0x40e099
  40e0d1:	cmp    al,0x4c
  40e0d3:	push   es
  40e0d4:	cmp    al,0xef
  40e0d6:	mov    ch,0xf6
  40e0d8:	sbb    ebp,DWORD PTR [edi-0x2a]
  40e0db:	push   eax
  40e0dc:	dec    esi
  40e0dd:	pop    edx
  40e0de:	dec    ecx
  40e0df:	loope  0x40e126
  40e0e1:	aas    
  40e0e2:	fmul   DWORD PTR [ebp+0x6b]
  40e0e5:	lock call 0xf4d8:0x76a735bd
  40e0ed:	psllw  mm6,QWORD PTR [ecx-0x75f2eb62]
  40e0f4:	imul   DWORD PTR [edi]
  40e0f6:	fistp  WORD PTR [edi+0x642c9af1]
  40e0fc:	or     eax,0xf6a9f25b
  40e101:	push   esp
  40e102:	ins    BYTE PTR es:[edi],dx
  40e103:	ret    0xeae1
  40e106:	fwait
  40e107:	mov    es,WORD PTR [edi-0x45]
  40e10a:	xor    BYTE PTR ds:0x18910c05,bl
  40e110:	mov    ecx,DWORD PTR [esi-0x386ae336]
  40e116:	loopne 0x40e160
  40e118:	xchg   edi,eax
  40e119:	cmp    eax,0xa7958a07
  40e11e:	or     ecx,esi
  40e120:	in     al,dx
  40e121:	add    BYTE PTR [edi+0x1728167c],ch
  40e127:	bound  edx,QWORD PTR [edx+0x6f]
  40e12a:	push   eax
  40e12b:	rcl    BYTE PTR [edi],1
  40e12d:	jo     0x40e137
  40e12f:	cmp    DWORD PTR [eax+0x7],esp
  40e132:	aaa    
  40e133:	rol    edi,cl
  40e135:	push   ecx
  40e136:	imul   ecx,DWORD PTR [ebp+0x50d12ecf],0xfffffff2
  40e13d:	rol    eax,1
  40e13f:	in     eax,0x1c
  40e141:	fidiv  DWORD PTR cs:[ecx+0x37e73822]
  40e148:	sbb    eax,0x74b6ac1d
  40e14d:	fcmove st,st(3)
  40e14f:	mov    edx,0x1433f41
  40e154:	sub    bh,BYTE PTR [esi+0x3c6f8439]
  40e15a:	pop    ds
  40e15b:	mov    eax,ds:0xcb7517e3
  40e160:	out    dx,al
  40e161:	fiadd  WORD PTR [edx-0x5]
  40e164:	cli    
  40e165:	fidivr DWORD PTR [edx+0x3d]
  40e168:	add    DWORD PTR [edi-0x42],ecx
  40e16b:	sbb    BYTE PTR [esi],0x5a
  40e16e:	scas   eax,DWORD PTR es:[edi]
  40e16f:	js     0x40e0f2
  40e171:	outs   dx,BYTE PTR ds:[esi]
  40e172:	mov    ah,0xde
  40e174:	lods   al,BYTE PTR ds:[esi]
  40e175:	push   ebp
  40e176:	fld    TBYTE PTR [ebp+0x6d372203]
  40e17c:	pop    ebp
  40e17d:	fwait
  40e17e:	cmp    ebx,DWORD PTR [ebx+edi*4]
  40e181:	sbb    al,BYTE PTR [esi+0x45]
  40e184:	push   es
  40e185:	fldlg2 
  40e187:	(bad)  
  40e188:	das    
  40e189:	pop    ss
  40e18a:	fld    TBYTE PTR [esi-0x6c]
  40e18d:	cmp    eax,0x3594bbec
  40e192:	push   edi
  40e193:	call   0xd15d:0x8fb16ff7
  40e19a:	ret    0x7418
  40e19d:	dec    ecx
  40e19e:	cmc    
  40e19f:	rol    BYTE PTR [ecx],0x5
  40e1a2:	in     al,0xed
  40e1a4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e1a5:	xor    esi,DWORD PTR [ebx-0x25]
  40e1a8:	mov    dl,0xe1
  40e1aa:	xchg   esi,eax
  40e1ab:	sbb    bl,BYTE PTR [edx+0xa]
  40e1ae:	push   0x51
  40e1b0:	test   BYTE PTR [ecx+0x6a],cl
  40e1b3:	adc    ebp,DWORD PTR [esi-0x5c37a339]
  40e1b9:	ja     0x40e1be
  40e1bb:	mov    eax,0xc4399cc
  40e1c0:	in     eax,0x38
  40e1c2:	jmp    0x349c8e61
  40e1c7:	cli    
  40e1c8:	fist   DWORD PTR [ebx-0x14c94b3b]
  40e1ce:	into   
  40e1cf:	inc    ebx
  40e1d0:	pop    ebp
  40e1d1:	ficom  DWORD PTR [ebx+eax*2+0x39]
  40e1d5:	imul   ecx,DWORD PTR [esi-0x1a00b7e0],0xef227a5e
  40e1df:	inc    edi
  40e1e0:	retf   
  40e1e1:	jnp    0x40e170
  40e1e3:	out    0x99,al
  40e1e5:	lahf   
  40e1e6:	dec    ebp
  40e1e7:	sar    BYTE PTR [ebx+eiz*8],cl
  40e1ea:	(bad)  
  40e1eb:	fsub   st,st(4)
  40e1ed:	pop    ecx
  40e1ee:	je     0x40e1c2
  40e1f0:	pop    ds
  40e1f1:	std    
  40e1f2:	stc    
  40e1f3:	mov    ch,0xab
  40e1f5:	sub    dl,BYTE PTR [edi+0x49f111ed]
  40e1fb:	jae    0x40e271
  40e1fd:	pop    ds
  40e1fe:	adc    BYTE PTR [edi+0x42bfed51],bh
  40e204:	mov    ds,WORD PTR [edx+0x7bbcb187]
  40e20a:	push   edx
  40e20b:	data16 (bad) 
  40e20d:	pop    esi
  40e20e:	jno    0x40e1bf
  40e210:	sbb    ch,BYTE PTR [ebp+0x74]
  40e213:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e214:	inc    ecx
  40e215:	add    dl,ch
  40e217:	pop    eax
  40e218:	mov    bl,BYTE PTR [eax+0x35]
  40e21b:	loop   0x40e26f
  40e21d:	add    DWORD PTR [edx-0x24],esi
  40e220:	jb     0x40e1cb
  40e222:	xchg   ebx,eax
  40e223:	xor    esp,DWORD PTR [ecx+ebx*4+0x6a]
  40e227:	push   cs
  40e228:	push   ss
  40e229:	and    ebp,DWORD PTR [esi+0x34]
  40e22c:	pusha  
  40e22d:	aam    0xa2
  40e22f:	sub    DWORD PTR [eax+0x2f7bf997],ebp
  40e235:	pop    esp
  40e236:	push   cs
  40e237:	(bad)  
  40e238:	std    
  40e239:	jp     0x40e24f
  40e23b:	ret    0x1105
  40e23e:	mov    ebx,0x76a44062
  40e243:	scas   al,BYTE PTR es:[edi]
  40e244:	cmp    bl,BYTE PTR [edx-0x6c26ad8d]
  40e24a:	dec    ecx
  40e24b:	push   cs
  40e24c:	lock jg 0x40e2a7
  40e24f:	cmp    DWORD PTR [esi],esp
  40e251:	sub    DWORD PTR [esi+0x49],0x5d571a8c
  40e258:	push   0xffffffe6
  40e25a:	js     0x40e24c
  40e25c:	mov    eax,0xf5bc9cb6
  40e261:	pop    ss
  40e262:	or     cl,ah
  40e264:	fcom   DWORD PTR [edi+0x68c604e7]
  40e26a:	cmc    
  40e26b:	popf   
  40e26c:	mov    esp,0xa0d683b8
  40e271:	cs cmc 
  40e273:	cmp    edx,DWORD PTR [eax+0x6ecf6320]
  40e279:	cmp    DWORD PTR [eax],esp
  40e27b:	out    dx,eax
  40e27c:	mov    ebx,0x7a3a4d44
  40e281:	sub    ecx,DWORD PTR [esi+eiz*4-0x2239057d]
  40e288:	int    0xae
  40e28a:	jae    0x40e24d
  40e28c:	cmp    esi,DWORD PTR [ecx+eax*2]
  40e28f:	jbe    0x40e2a0
  40e291:	fstp   DWORD PTR [ebx-0x1f]
  40e294:	dec    esi
  40e295:	retf   0x1c58
  40e298:	or     al,0xd4
  40e29a:	scas   al,BYTE PTR es:[edi]
  40e29b:	mov    eax,0x600793b0
  40e2a0:	gs push esp
  40e2a2:	js     0x40e310
  40e2a4:	lods   eax,DWORD PTR ds:[esi]
  40e2a5:	cs pusha 
  40e2a7:	cmp    ch,dh
  40e2a9:	test   eax,0x757e0dfb
  40e2ae:	xor    edx,ecx
  40e2b0:	add    BYTE PTR ds:0xe7974361,dh
  40e2b6:	inc    edx
  40e2b7:	cmp    BYTE PTR [edi-0x2e35bb58],0x1
  40e2be:	cdq    
  40e2bf:	mov    ch,0xb5
  40e2c1:	pop    es
  40e2c2:	or     eax,0x3fe2dd2b
  40e2c7:	xor    al,0xc5
  40e2c9:	mov    BYTE PTR [ecx+0x403d3f04],dh
  40e2cf:	jb     0x40e274
  40e2d1:	das    
  40e2d2:	(bad)  
  40e2d3:	outs   dx,BYTE PTR ds:[esi]
  40e2d4:	je     0x40e2b5
  40e2d6:	mov    ds:0xf451ad2,eax
  40e2db:	ins    BYTE PTR es:[edi],dx
  40e2dc:	jle    0x40e300
  40e2de:	xchg   DWORD PTR [ebp-0x7a6a1a5],esp
  40e2e4:	arpl   bx,ax
  40e2e6:	shl    DWORD PTR [ebx],cl
  40e2e8:	cmc    
  40e2e9:	stc    
  40e2ea:	add    BYTE PTR [ebx+0x751bb6bc],bl
  40e2f0:	jne    0x40e2cd
  40e2f2:	jp     0x40e287
  40e2f4:	jg     0x40e2b2
  40e2f6:	or     dh,0xfe
  40e2f9:	outs   dx,DWORD PTR ds:[esi]
  40e2fa:	cwde   
  40e2fb:	jmp    0x30414f1d
  40e300:	pop    ecx
  40e301:	pcmpeqb mm1,QWORD PTR [ebx+eiz*1+0x4b1bfab6]
  40e309:	mov    ecx,0x590fc9b9
  40e30e:	int3   
  40e30f:	pop    ds
  40e310:	ins    BYTE PTR es:[edi],dx
  40e311:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e312:	repnz into 
  40e314:	gs mov cl,dh
  40e317:	pop    ss
  40e318:	push   ds
  40e319:	icebp  
  40e31a:	and    al,0x6b
  40e31c:	pop    esi
  40e31d:	loopne 0x40e2e0
  40e31f:	les    edi,FWORD PTR ds:0x1c9dafa9
  40e325:	xor    eax,DWORD PTR [ecx-0x6837e73b]
  40e32b:	cmp    esi,eax
  40e32d:	xchg   ecx,ecx
  40e32f:	mov    ah,0x81
  40e331:	dec    esp
  40e332:	leave  
  40e333:	loopne 0x40e338
  40e335:	dec    ebp
  40e336:	fsub   DWORD PTR [ebx]
  40e338:	add    eax,0x4214dc
  40e33d:	mov    DWORD PTR [ebp-0x10],ecx
  40e340:	mov    DWORD PTR ds:0x423738,0x10
  40e34a:	cmp    DWORD PTR ds:0x423738,0x0
  40e351:	je     0x40e3a5
  40e357:	cmp    DWORD PTR ds:0x423738,0x3
  40e35e:	jne    0x40e36f
  40e364:	push   0x3e00
  40e369:	call   DWORD PTR ds:0x41f154
  40e36f:	cmp    DWORD PTR ds:0x423738,0x4
  40e376:	jne    0x40e387
  40e37c:	mov    eax,ds:0x423738
  40e381:	dec    eax
  40e382:	mov    ds:0x423738,eax
  40e387:	mov    eax,ds:0x423738
  40e38c:	dec    eax
  40e38d:	mov    ds:0x423738,eax
  40e392:	jmp    0x40e34a
  40e397:	xor    ecx,ecx
  40e399:	add    ecx,DWORD PTR ds:0x4236e8
  40e39f:	sbb    DWORD PTR ds:0x4236f0,ecx
  40e3a5:	mov    DWORD PTR [ebp-0x8],0xfffffff0
  40e3ac:	dec    eax
  40e3ad:	mov    eax,DWORD PTR [ebp-0x14]
  40e3b0:	xor    ecx,0x54f6
  40e3b6:	mov    ecx,DWORD PTR [ebp-0x8]
  40e3b9:	xor    eax,esi
  40e3bb:	xor    ecx,esi
  40e3bd:	add    eax,edi
  40e3bf:	sbb    DWORD PTR ds:0x423704,0x7766
  40e3c9:	add    ecx,edi
  40e3cb:	mov    DWORD PTR ds:0x4236b8,0x75cf
  40e3d5:	jmp    0x40e8c4
  40e3da:	mov    edi,0x1f4703a0
  40e3df:	out    0xff,eax
  40e3e1:	clc    
  40e3e2:	and    DWORD PTR [esi-0x4434400c],edx
  40e3e8:	mov    eax,ds:0xcc6079
  40e3ed:	add    dl,dl
  40e3ef:	add    al,0x0
  40e3f1:	add    BYTE PTR [ebx+0xee6eb70],bh
  40e3f7:	and    dl,BYTE PTR [ebp+0xab615f]
  40e3fd:	dec    edi
  40e3fe:	jle    0x40e381
  40e400:	in     eax,dx
  40e401:	fwait
  40e402:	ds out dx,al
  40e404:	sub    DWORD PTR [esi+0x1d],ebx
  40e407:	dec    ecx
  40e408:	out    0x79,eax
  40e40a:	pop    esi
  40e40b:	cwde   
  40e40c:	ja     0x40e3ec
  40e40e:	lds    ebx,FWORD PTR [esi]
  40e410:	mov    dh,BYTE PTR [edx+0x330dc1a5]
  40e416:	cwde   
  40e417:	pop    ds
  40e418:	addr16 test eax,0xb32bb3b5
  40e41e:	out    dx,al
  40e41f:	pop    eax
  40e420:	retf   0x4a7c
  40e423:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e424:	pop    edx
  40e425:	(bad)  
  40e426:	mov    ecx,0x699e0f99
  40e42b:	sti    
  40e42c:	add    DWORD PTR [edi+ecx*1+0x1f],edi
  40e430:	fsub   st,st(0)
  40e432:	int    0xf8
  40e434:	pop    edx
  40e435:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e436:	arpl   WORD PTR [ebp+ebp*4-0x1864578e],dx
  40e43d:	out    dx,al
  40e43e:	jge    0x40e404
  40e440:	and    DWORD PTR [ebx+0x74],edx
  40e443:	push   ebx
  40e444:	sti    
  40e445:	imul   edx,DWORD PTR [ecx+0x8],0x7e872ec
  40e44c:	outs   dx,BYTE PTR ds:[esi]
  40e44d:	jge    0x40e424
  40e44f:	cs or  cl,al
  40e452:	or     eax,0xbf072124
  40e457:	push   esi
  40e458:	jmp    0xc2ff:0x2fd003bb
  40e45f:	cwde   
  40e460:	div    esi
  40e462:	cmp    esp,DWORD PTR [eax]
  40e464:	xor    eax,0x19c29817
  40e469:	mov    dl,0x75
  40e46b:	pusha  
  40e46c:	sub    eax,DWORD PTR [ecx+0x6f]
  40e46f:	ds das 
  40e471:	out    0xf3,eax
  40e473:	push   ecx
  40e474:	jp     0x40e45f
  40e476:	daa    
  40e477:	pop    ss
  40e478:	xor    BYTE PTR [ebx+edi*4],0x60
  40e47c:	mov    al,ds:0xb9fd16ec
  40e481:	inc    ebx
  40e482:	not    BYTE PTR [edi-0x926ad80]
  40e488:	mov    ecx,0xe629d792
  40e48d:	dec    esi
  40e48e:	outs   dx,DWORD PTR ds:[esi]
  40e48f:	fcom   QWORD PTR [ebx]
  40e491:	into   
  40e492:	call   0x93c:0x3c1f9dc7
  40e499:	dec    ecx
  40e49a:	jbe    0x40e422
  40e49c:	pop    ecx
  40e49d:	xchg   BYTE PTR [ebx-0x40f6cfd7],dl
  40e4a3:	xchg   ebx,eax
  40e4a4:	mov    ch,BYTE PTR [ecx+0x13]
  40e4a7:	sub    al,0x66
  40e4a9:	cmc    
  40e4aa:	outs   dx,DWORD PTR ds:[esi]
  40e4ab:	rcr    DWORD PTR [ecx+0x33d55ce8],cl
  40e4b1:	fnstsw WORD PTR [ecx+0x11aebaf0]
  40e4b7:	cmp    BYTE PTR [eax+0x5d],bh
  40e4ba:	push   ebp
  40e4bb:	pop    ds
  40e4bc:	mov    WORD PTR [ebx+0x53f2cecc],gs
  40e4c2:	xor    al,BYTE PTR [ebx]
  40e4c4:	dec    esi
  40e4c5:	cwde   
  40e4c6:	or     BYTE PTR [si+0x18a3],bl
  40e4cb:	mov    esp,0xa7703a26
  40e4d0:	add    al,0xb8
  40e4d2:	into   
  40e4d3:	cmp    DWORD PTR [ebp+0x600b8078],edx
  40e4d9:	sbb    al,0x57
  40e4db:	popa   
  40e4dc:	fstp   st(1)
  40e4de:	fimul  WORD PTR [esi-0x18]
  40e4e1:	fsubr  st,st(2)
  40e4e3:	push   esi
  40e4e4:	pop    ds
  40e4e5:	cmp    eax,DWORD PTR [eax-0x398f2e33]
  40e4eb:	mov    cl,0xfd
  40e4ed:	lock les eax,FWORD PTR ds:0xc3005875
  40e4f4:	icebp  
  40e4f5:	mov    bh,0x66
  40e4f7:	lods   eax,DWORD PTR ds:[esi]
  40e4f8:	mov    BYTE PTR [eax+0x7f26a37],0xa5
  40e4ff:	pop    edx
  40e500:	xlat   BYTE PTR ds:[ebx]
  40e501:	lods   al,BYTE PTR ds:[esi]
  40e502:	push   ecx
  40e503:	dec    eax
  40e504:	sub    edi,DWORD PTR [ebx]
  40e506:	sub    BYTE PTR ds:0xf821cb34,0x85
  40e50d:	push   ds
  40e50e:	xchg   edi,eax
  40e50f:	add    DWORD PTR [edi-0x3bd62c8b],esp
  40e515:	iret   
  40e516:	out    dx,al
  40e517:	push   edx
  40e518:	jnp    0x40e520
  40e51a:	out    0xe6,eax
  40e51c:	xor    al,0x27
  40e51e:	je     0x40e4f1
  40e520:	(bad)  
  40e521:	arpl   WORD PTR [esi],bx
  40e523:	mov    eax,0x93af56a8
  40e528:	fwait
  40e529:	xchg   edi,eax
  40e52a:	inc    ebp
  40e52b:	cmp    DWORD PTR [edi],ebx
  40e52d:	ds ins BYTE PTR es:[edi],dx
  40e52f:	mov    eax,0x988d6c44
  40e534:	mov    ds:0xc8d0af0d,eax
  40e539:	and    BYTE PTR [edi],al
  40e53b:	(bad)  
  40e53c:	imul   DWORD PTR [edx]
  40e53e:	sar    BYTE PTR [ecx+0x3b0a41df],cl
  40e544:	inc    ebx
  40e545:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e546:	js     0x40e514
  40e548:	jnp    0x40e4de
  40e54a:	mov    ecx,esi
  40e54c:	cli    
  40e54d:	ds dec edx
  40e54f:	mov    BYTE PTR [ebx],al
  40e551:	loope  0x40e575
  40e553:	sbb    al,BYTE PTR [ebx+0x142df697]
  40e559:	bound  ecx,QWORD PTR [ebx]
  40e55b:	fistp  QWORD PTR [esp+ecx*4]
  40e55e:	pop    edx
  40e55f:	popf   
  40e560:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e561:	dec    esp
  40e562:	inc    esi
  40e563:	cmp    eax,0x4a1ef082
  40e568:	lea    ebp,[ebx]
  40e56a:	add    esp,ecx
  40e56c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e56d:	call   0x33db8066
  40e572:	mov    esp,0xf3d7dee
  40e577:	and    DWORD PTR [esi],edi
  40e579:	xor    BYTE PTR [edx],0x9b
  40e57c:	cmp    eax,DWORD PTR [ebp+0x1]
  40e57f:	xchg   esi,eax
  40e580:	mov    al,ds:0xabf6d456
  40e585:	jmp    0xc309:0xde0a82
  40e58c:	sbb    BYTE PTR [ecx+0x70f3850e],0x98
  40e593:	add    esi,DWORD PTR [edx+eiz*1+0x76]
  40e597:	mov    bl,0xfb
  40e599:	mov    BYTE PTR [edi-0x4e],ah
  40e59c:	add    bh,dh
  40e59e:	ins    DWORD PTR es:[edi],dx
  40e59f:	pop    ds
  40e5a0:	idiv   al
  40e5a2:	(bad)  
  40e5a3:	aad    0x75
  40e5a5:	(bad)  
  40e5a6:	pop    ds
  40e5a7:	and    bh,bl
  40e5a9:	outs   dx,DWORD PTR ds:[esi]
  40e5aa:	and    bl,bl
  40e5ac:	inc    ecx
  40e5ad:	jle    0x40e5c7
  40e5af:	xchg   ebx,eax
  40e5b0:	dec    esp
  40e5b1:	adc    BYTE PTR [eax],0xcf
  40e5b4:	sbb    ebx,esp
  40e5b6:	cld    
  40e5b7:	push   eax
  40e5b8:	cmp    BYTE PTR [eax-0x4bbae437],bl
  40e5be:	fwait
  40e5bf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e5c0:	cwde   
  40e5c1:	cmp    eax,0x8f6a269b
  40e5c6:	push   ebp
  40e5c7:	push   edx
  40e5c8:	scas   al,BYTE PTR es:[edi]
  40e5c9:	mov    ebx,0x88470c6a
  40e5ce:	push   esi
  40e5cf:	bound  edx,QWORD PTR [esi+eax*8+0x20]
  40e5d3:	push   0x6a2f4989
  40e5d8:	mov    dl,BYTE PTR [eax-0x7d]
  40e5db:	fcmove st,st(6)
  40e5dd:	mov    ah,dl
  40e5df:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e5e0:	scas   eax,DWORD PTR es:[edi]
  40e5e1:	mov    edx,0x34c5755b
  40e5e6:	adc    ebp,DWORD PTR ds:0xc7fe5f93
  40e5ec:	ds dec edx
  40e5ee:	hlt    
  40e5ef:	xchg   ebp,eax
  40e5f0:	arpl   WORD PTR [ebx-0x10],si
  40e5f3:	ret    0xaf57
  40e5f6:	mov    bl,0x82
  40e5f8:	jno    0x40e59b
  40e5fa:	cmp    esi,DWORD PTR [ecx]
  40e5fc:	mov    eax,0x11bd00d3
  40e601:	pop    eax
  40e602:	mov    DWORD PTR [edi+eax*8-0x43eebe99],ebp
  40e609:	lods   eax,DWORD PTR ds:[esi]
  40e60a:	loopne 0x40e5a6
  40e60c:	jmp    FWORD PTR [edi]
  40e60e:	int3   
  40e60f:	fadd   QWORD PTR [edi+0x10]
  40e612:	ins    BYTE PTR es:[edi],dx
  40e613:	aaa    
  40e614:	repnz xchg edi,eax
  40e616:	loopne 0x40e65e
  40e618:	fnsave [ebx+0x303f3627]
  40e61e:	lock pop ss
  40e620:	mov    cl,0x61
  40e622:	sub    esp,DWORD PTR [eax+0x433eb6a7]
  40e628:	xchg   ecx,esp
  40e62a:	test   al,0x11
  40e62c:	xor    BYTE PTR [edx],cl
  40e62e:	call   0xc998:0xbc472932
  40e635:	or     ah,BYTE PTR [edi+0x45]
  40e638:	xor    bl,dh
  40e63a:	(bad)  
  40e63b:	or     BYTE PTR [ebx+0x3fd31b33],dl
  40e641:	mov    ah,0x6b
  40e643:	sbb    al,0xf1
  40e645:	push   ds
  40e646:	jb     0x40e642
  40e648:	cmp    eax,0xeabb2029
  40e64d:	shr    DWORD PTR [edx-0x73931284],0x29
  40e654:	mov    ds:0xed614928,eax
  40e659:	push   ss
  40e65a:	add    al,0xf0
  40e65c:	sub    al,0xa2
  40e65e:	sub    esp,esi
  40e660:	add    al,0x9e
  40e662:	cmp    ecx,edx
  40e664:	aas    
  40e665:	sub    al,0x4c
  40e667:	aad    0x8c
  40e669:	bound  edx,QWORD PTR [esi-0x2ea9966a]
  40e66f:	enter  0x333d,0x6c
  40e673:	aam    0xb3
  40e675:	fidivr WORD PTR [edx]
  40e677:	lock mov ecx,0x91e5f589
  40e67d:	ins    DWORD PTR es:[edi],dx
  40e67e:	cli    
  40e67f:	(bad)  
  40e680:	mov    edi,0xfe8291f5
  40e685:	out    0x28,al
  40e687:	ss pop edx
  40e689:	repz js 0x40e675
  40e68c:	fs dec esp
  40e68e:	jecxz  0x40e6b9
  40e690:	test   eax,0x7e1b52cc
  40e695:	mov    edi,0xd6932fac
  40e69a:	jle    0x40e66f
  40e69c:	mov    dl,0xde
  40e69e:	pushf  
  40e69f:	sbb    ebp,DWORD PTR [eax]
  40e6a1:	mov    bl,0x79
  40e6a3:	xor    DWORD PTR [edx],esi
  40e6a5:	lock retf 0xad34
  40e6a9:	out    0xb5,eax
  40e6ab:	jnp    0x40e6e4
  40e6ad:	call   0x76b1:0xccca1ffa
  40e6b4:	inc    edx
  40e6b5:	popf   
  40e6b6:	scas   eax,DWORD PTR es:[edi]
  40e6b7:	sub    al,0xca
  40e6b9:	cmp    eax,0xf92ae377
  40e6be:	push   ss
  40e6bf:	enter  0x1dd1,0xbf
  40e6c3:	js     0x40e744
  40e6c5:	sub    ecx,DWORD PTR [edx]
  40e6c7:	mov    ss,edi
  40e6c9:	push   es
  40e6ca:	out    dx,al
  40e6cb:	js     0x40e726
  40e6cd:	xchg   ecx,eax
  40e6ce:	repnz mov dl,0x20
  40e6d1:	call   0x767e:0x82931ac8
  40e6d8:	shl    DWORD PTR ss:[esi],1
  40e6db:	loope  0x40e680
  40e6dd:	mov    edx,0x1259da21
  40e6e2:	shr    dh,cl
  40e6e4:	dec    edi
  40e6e5:	test   al,0x31
  40e6e7:	aaa    
  40e6e8:	popa   
  40e6e9:	(bad)  
  40e6ea:	jecxz  0x40e730
  40e6ec:	adc    edx,DWORD PTR [edi-0x7b6bb797]
  40e6f2:	inc    esp
  40e6f3:	push   ebp
  40e6f4:	sub    al,0xad
  40e6f6:	(bad)  
  40e6f7:	sti    
  40e6f8:	out    dx,al
  40e6f9:	jbe    0x40e6ce
  40e6fb:	sbb    dl,BYTE PTR [edx]
  40e6fd:	stc    
  40e6fe:	adc    BYTE PTR [ecx-0x27c0d640],bl
  40e704:	daa    
  40e705:	jo     0x40e693
  40e707:	jecxz  0x40e72e
  40e709:	out    dx,eax
  40e70a:	push   ebx
  40e70b:	sub    al,0xe8
  40e70d:	jg     0x40e6e6
  40e70f:	cmp    BYTE PTR [eax+0x2a1b7c57],cl
  40e715:	cdq    
  40e716:	rol    DWORD PTR [edi+0x2d],0x47
  40e71a:	jbe    0x40e775
  40e71c:	aas    
  40e71d:	jg     0x40e701
  40e71f:	sbb    ebp,DWORD PTR [ebp+0x5f]
  40e722:	mov    ebx,0x93041d8b
  40e727:	cmp    al,0x80
  40e729:	inc    eax
  40e72a:	stos   BYTE PTR es:[edi],al
  40e72b:	xchg   edi,eax
  40e72c:	sahf   
  40e72d:	in     eax,0x44
  40e72f:	mov    dl,0xc4
  40e731:	lods   eax,DWORD PTR ds:[esi]
  40e732:	mov    eax,0x359f4a41
  40e737:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e738:	ss bnd jns 0x40e716
  40e73c:	inc    edi
  40e73d:	lahf   
  40e73e:	pop    edx
  40e73f:	into   
  40e740:	jno    0x40e6c5
  40e742:	fst    DWORD PTR [edx+0x7d]
  40e745:	jmp    0x9445:0x3d68f831
  40e74c:	(bad)  
  40e74d:	xchg   esp,eax
  40e74e:	mov    bl,0xcd
  40e750:	ret    
  40e751:	js     0x40e71c
  40e753:	loopne 0x40e730
  40e755:	cmp    DWORD PTR [ebx-0x16],esp
  40e758:	xchg   edx,eax
  40e759:	xor    edi,esi
  40e75b:	mov    edx,0x9921cbc4
  40e760:	mov    BYTE PTR [edi+0x1231f834],dl
  40e766:	pop    ss
  40e767:	jecxz  0x40e7c1
  40e769:	std    
  40e76a:	sti    
  40e76b:	rcl    BYTE PTR [edx+ecx*8+0x27da774e],1
  40e772:	mov    bl,0xb1
  40e774:	test   ebp,eax
  40e776:	xor    bl,bh
  40e778:	arpl   WORD PTR [edx-0x22],bp
  40e77b:	clc    
  40e77c:	xchg   DWORD PTR [esi-0x1071e119],ebx
  40e782:	inc    edi
  40e783:	pop    esp
  40e784:	push   es
  40e785:	xchg   ebp,eax
  40e786:	scas   al,BYTE PTR es:[edi]
  40e787:	cmp    esp,DWORD PTR [ecx-0x1b]
  40e78a:	or     ch,ah
  40e78c:	inc    edi
  40e78d:	imul   esp,edx,0x4e
  40e790:	adc    eax,0x1c5f6e9b
  40e795:	ret    0xb01
  40e798:	mov    al,BYTE PTR [ecx+0x67]
  40e79b:	pop    es
  40e79c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e79d:	mov    esi,0x81ec672a
  40e7a2:	js     0x40e727
  40e7a4:	fdivr  DWORD PTR [ebx-0xd11a8f5]
  40e7aa:	icebp  
  40e7ab:	push   ecx
  40e7ac:	or     DWORD PTR [eax+0x41],ecx
  40e7af:	out    0x7b,eax
  40e7b1:	test   esp,esp
  40e7b3:	fcomip st,st(0)
  40e7b5:	mov    bh,0x34
  40e7b7:	(bad)  
  40e7b8:	adc    bh,BYTE PTR [eax+esi*1+0xe8efae]
  40e7bf:	pop    ebx
  40e7c0:	cld    
  40e7c1:	cwde   
  40e7c2:	and    al,0x2e
  40e7c4:	push   ebx
  40e7c5:	cmp    al,0x4d
  40e7c7:	out    dx,eax
  40e7c8:	mov    edi,0xd896a608
  40e7cd:	cmp    dl,BYTE PTR [ebx]
  40e7cf:	call   0x9fdc:0x38256b67
  40e7d6:	pop    ebx
  40e7d7:	(bad)  
  40e7d8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e7d9:	lods   al,BYTE PTR ds:[esi]
  40e7da:	push   0xb
  40e7dc:	jo     0x40e83d
  40e7de:	cmp    al,0xb0
  40e7e0:	call   0x7cb51332
  40e7e5:	pushf  
  40e7e6:	and    eax,esi
  40e7e8:	std    
  40e7e9:	call   0x3ae4b297
  40e7ee:	dec    esi
  40e7ef:	push   cs
  40e7f0:	out    0xed,eax
  40e7f2:	cmp    bl,BYTE PTR [esp+eax*2+0x45]
  40e7f6:	inc    ebx
  40e7f7:	push   edi
  40e7f8:	mov    BYTE PTR [edi],bh
  40e7fa:	jp     0x40e7f2
  40e7fc:	out    dx,eax
  40e7fd:	cmp    dl,BYTE PTR [ebx+0x363fe6a]
  40e803:	xchg   ebp,eax
  40e804:	add    edi,edx
  40e806:	mov    ch,0x68
  40e808:	test   DWORD PTR fs:[edx],eax
  40e80b:	pop    eax
  40e80c:	push   ebp
  40e80d:	fisttp DWORD PTR [esi]
  40e80f:	data16 sbb al,0x67
  40e812:	mov    edi,0x9eea8ce3
  40e817:	les    eax,FWORD PTR [eax]
  40e819:	pusha  
  40e81a:	dec    ecx
  40e81b:	xchg   edx,eax
  40e81c:	pop    edi
  40e81d:	push   esi
  40e81e:	xor    BYTE PTR [ecx+0x1a],bl
  40e821:	sbb    al,0x8b
  40e823:	fsub   QWORD PTR [edi]
  40e825:	test   eax,0x449bbd5b
  40e82a:	mov    ds:0xf62f0ddd,al
  40e82f:	lods   al,BYTE PTR ds:[esi]
  40e830:	aaa    
  40e831:	bound  esi,QWORD PTR [ebx]
  40e833:	pop    ebx
  40e834:	retf   
  40e835:	inc    edi
  40e836:	icebp  
  40e837:	push   eax
  40e838:	cmp    ebx,DWORD PTR [eax+ecx*4+0x1772d4a0]
  40e83f:	gs in  al,dx
  40e841:	xor    DWORD PTR [edx],0x1b
  40e844:	xchg   esp,eax
  40e845:	retf   
  40e846:	xor    al,0xd2
  40e848:	(bad)  
  40e849:	sahf   
  40e84a:	out    dx,eax
  40e84b:	cdq    
  40e84c:	sbb    al,BYTE PTR [ebx+0x4b]
  40e84f:	loope  0x40e88e
  40e851:	dec    edx
  40e852:	and    al,0x62
  40e854:	cs and al,0x3e
  40e857:	dec    ebx
  40e858:	pop    ds
  40e859:	ret    
  40e85a:	add    al,0xba
  40e85c:	ficomp DWORD PTR [ecx+0x4249d44c]
  40e862:	pushf  
  40e863:	and    DWORD PTR [ebx+0x4b15984b],eax
  40e869:	xchg   ebx,eax
  40e86a:	inc    edi
  40e86b:	jnp    0x40e7ff
  40e86d:	rcr    DWORD PTR [ebx],1
  40e86f:	sbb    al,0x3b
  40e871:	ins    BYTE PTR es:[edi],dx
  40e872:	sbb    ch,BYTE PTR [edx+0xb]
  40e875:	inc    ebx
  40e876:	xor    dl,dh
  40e878:	fldenv [eax]
  40e87a:	fisubr DWORD PTR [esi+0x1a]
  40e87d:	sahf   
  40e87e:	xchg   edi,eax
  40e87f:	mov    bl,0x43
  40e881:	out    dx,al
  40e882:	sbb    ah,BYTE PTR [eax-0x31]
  40e885:	outs   dx,BYTE PTR ds:[esi]
  40e886:	leave  
  40e887:	add    ah,BYTE PTR [edx]
  40e889:	mov    al,BYTE PTR [edx+0x70]
  40e88c:	pusha  
  40e88d:	xor    BYTE PTR [esi-0x5c480252],0x8b
  40e894:	push   ebx
  40e895:	scas   eax,DWORD PTR es:[edi]
  40e896:	jecxz  0x40e87e
  40e898:	ins    DWORD PTR es:[edi],dx
  40e899:	pop    ss
  40e89a:	mov    ah,0xb7
  40e89c:	pop    es
  40e89d:	in     eax,0x37
  40e89f:	js     0x40e8a3
  40e8a1:	je     0x40e906
  40e8a3:	out    dx,al
  40e8a4:	jmp    0x40e88e
  40e8a6:	mov    esi,0xd33e2299
  40e8ab:	(bad)  
  40e8ac:	lods   al,BYTE PTR ds:[esi]
  40e8ad:	out    0x99,eax
  40e8af:	mov    edi,0x37b7940
  40e8b4:	lahf   
  40e8b5:	ds es out 0x4c,al
  40e8b9:	ja     0x40e913
  40e8bb:	scas   al,BYTE PTR es:[edi]
  40e8bc:	mov    al,ds:0x68dbd3d9
  40e8c1:	sub    BYTE PTR [eax-0x5f],dh
  40e8c4:	cmp    eax,ecx
  40e8c6:	mov    DWORD PTR ds:0x4214f0,0xd
  40e8d0:	jae    0x41284e
  40e8d6:	adc    DWORD PTR ds:0x4214ec,0x423684
  40e8e0:	lea    ecx,[eax-0x300b]
  40e8e6:	add    DWORD PTR ds:0x4214f8,0x6766
  40e8f0:	mov    DWORD PTR [ebp-0x1c],ecx
  40e8f3:	mov    edx,DWORD PTR [ebp-0x1c]
  40e8f6:	or     DWORD PTR ds:0x4236a8,0x57c1
  40e900:	xor    edx,esi
  40e902:	xor    DWORD PTR ds:0x42366c,0x4236f8
  40e90c:	add    edx,0x7837233d
  40e912:	mov    DWORD PTR ds:0x423728,0x3cdd
  40e91c:	lea    ecx,[ebp+eax*4-0x4c]
  40e920:	mov    DWORD PTR ds:0x423680,0x30f8
  40e92a:	mov    DWORD PTR [ecx],edx
  40e92c:	not    DWORD PTR ds:0x42366c
  40e932:	mov    edx,DWORD PTR [ecx]
  40e934:	cmp    edx,ebx
  40e936:	jbe    0x40e951
  40e93c:	add    DWORD PTR [ecx],0x3870753
  40e942:	mov    DWORD PTR ds:0x4236ec,0x5c67
  40e94c:	jmp    0x40e957
  40e951:	add    DWORD PTR [ecx],0xfacc38ad
  40e957:	adc    DWORD PTR ds:0x42372c,0xbec
  40e961:	mov    ecx,DWORD PTR [ebp-0x8]
  40e964:	sbb    DWORD PTR ds:0x423674,0xcea
  40e96e:	xor    ecx,esi
  40e970:	inc    eax
  40e971:	inc    DWORD PTR [ebp-0x1c]
  40e974:	add    ecx,edi
  40e976:	cmp    eax,ecx
  40e978:	jb     0x40e8f3
  40e97e:	mov    DWORD PTR ds:0x423684,0x61f1
  40e988:	jmp    0x41284e
  40e98d:	mov    ecx,DWORD PTR [ebp-0x14]
  40e990:	adc    eax,DWORD PTR ds:0x423730
  40e996:	mov    eax,DWORD PTR [ebp-0x8]
  40e999:	xor    ecx,esi
  40e99b:	xor    eax,esi
  40e99d:	adc    DWORD PTR ds:0x4214f8,0x423738
  40e9a7:	add    ecx,edi
  40e9a9:	and    DWORD PTR ds:0x42366c,0x2b12
  40e9b3:	jmp    0x40eea2
  40e9b8:	sbb    ecx,0xff5b3703
  40e9be:	mov    ch,0xff
  40e9c0:	cmp    DWORD PTR [ebx+0x76a781ba],edi
  40e9c6:	(bad)  
  40e9c7:	in     al,dx
  40e9c8:	xor    dl,cl
  40e9ca:	add    BYTE PTR [eax],al
  40e9cc:	rol    BYTE PTR [eax+eax*1],cl
  40e9cf:	add    BYTE PTR [eax+0x7cd87032],ah
  40e9d5:	retf   0x42cf
  40e9d8:	and    ebx,DWORD PTR [edx+0x26b1f796]
  40e9de:	and    dl,bh
  40e9e0:	or     eax,0xc569f9f9
  40e9e5:	adc    DWORD PTR [ebx-0x2b4c7a75],edi
  40e9eb:	rcr    al,1
  40e9ed:	push   0xbde130eb
  40e9f2:	ds jge 0x40e99a
  40e9f5:	xchg   ebp,eax
  40e9f6:	sbb    edi,esi
  40e9f8:	jae    0x40e999
  40e9fa:	mov    DWORD PTR [edi+0x39d48539],edi
  40ea00:	mov    eax,DWORD PTR [edi+0x35c04f8d]
  40ea06:	sbb    esp,DWORD PTR [eax-0x31]
  40ea09:	pop    es
  40ea0a:	adc    DWORD PTR [ecx],esp
  40ea0c:	pop    ebx
  40ea0d:	jmp    0x3d25:0x7c91f555
  40ea14:	js     0x40ea66
  40ea16:	icebp  
  40ea17:	js     0x40ea67
  40ea19:	xchg   ebp,eax
  40ea1a:	frstor [ebx-0x462eabcc]
  40ea20:	(bad)
  40ea23:	iret   
  40ea24:	cli    
  40ea25:	cmp    BYTE PTR [ebx+0x1dd30ed],0xb0
  40ea2c:	loop   0x40ea53
  40ea2e:	jb     0x40e9bb
  40ea30:	push   cs
  40ea31:	sbb    dl,cl
  40ea33:	lahf   
  40ea34:	cmp    edx,esi
  40ea36:	adc    bh,ch
  40ea38:	mov    esi,0x26759747
  40ea3d:	add    dh,BYTE PTR [ebp+0x22]
  40ea40:	imul   ebx,DWORD PTR [eax],0x31
  40ea43:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ea44:	mov    bl,bl
  40ea46:	jno    0x40ea27
  40ea48:	or     BYTE PTR [edi-0x3dd20805],ah
  40ea4e:	inc    ebx
  40ea4f:	pusha  
  40ea50:	data16 fbstp TBYTE PTR [esp+ecx*2-0x40b31208]
  40ea58:	mov    eax,0x2d1b6880
  40ea5d:	mov    esi,0xceddf76
  40ea62:	jmp    0x2496e240
  40ea67:	fadd   DWORD PTR [ebp-0x27d981ca]
  40ea6d:	mov    bh,0x1e
  40ea6f:	inc    ebx
  40ea70:	shl    BYTE PTR [ebp+0x4468bd33],0xa6
  40ea77:	mov    bh,0xf2
  40ea79:	repnz rol edx,cl
  40ea7c:	mov    ?,WORD PTR [edi+eiz*8]
  40ea7f:	les    ecx,FWORD PTR [ebx]
  40ea81:	popf   
  40ea82:	and    cl,BYTE PTR ds:0xbe9fd058
  40ea88:	xchg   esp,eax
  40ea89:	fild   DWORD PTR [ebx+0x4e]
  40ea8c:	push   edi
  40ea8d:	imul   ebp,edi,0x2462badd
  40ea93:	sbb    BYTE PTR [esi-0x6296e49b],ah
  40ea99:	ror    DWORD PTR [esi+0x6e30bbac],1
  40ea9f:	mov    dh,0xdd
  40eaa1:	sti    
  40eaa2:	xor    ch,BYTE PTR [ebx-0x24]
  40eaa5:	ja     0x40ea2f
  40eaa7:	jnp    0x40ea59
  40eaa9:	mov    bl,dh
  40eaab:	icebp  
  40eaac:	xor    DWORD PTR [eax+0xa],eax
  40eaaf:	sub    ch,bh
  40eab1:	jmp    0x40ea9b
  40eab3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40eab4:	ins    DWORD PTR es:[edi],dx
  40eab5:	mov    BYTE PTR [esi-0xe],dh
  40eab8:	inc    edx
  40eab9:	in     eax,dx
  40eaba:	xchg   DWORD PTR [edi-0x21],esp
  40eabd:	adc    BYTE PTR [esi+ebp*4],ch
  40eac0:	or     eax,0xf4a151b7
  40eac5:	fld1   
  40eac7:	xchg   edx,eax
  40eac8:	push   0xc043a4e4
  40eacd:	sub    ch,BYTE PTR [esi]
  40eacf:	or     BYTE PTR [edx+0x11],cl
  40ead2:	adc    eax,0xe28ef6b7
  40ead7:	(bad)  
  40ead8:	and    ecx,eax
  40eada:	sbb    BYTE PTR [esi],bl
  40eadc:	std    
  40eadd:	jl     0x40ea92
  40eadf:	cmp    DWORD PTR [ecx+eax*4-0x42adee52],0x1728339d
  40eaea:	jno    0x40eb07
  40eaec:	lahf   
  40eaed:	or     al,0x80
  40eaef:	daa    
  40eaf0:	lock xchg ebp,eax
  40eaf2:	sbb    DWORD PTR [esi],ecx
  40eaf4:	das    
  40eaf5:	ins    DWORD PTR es:[edi],dx
  40eaf6:	adc    al,0x89
  40eaf8:	rcr    DWORD PTR [eax-0x4a3a2e],cl
  40eafe:	xchg   ebx,eax
  40eaff:	dec    ebx
  40eb00:	retf   0x9ed
  40eb03:	sahf   
  40eb04:	push   esp
  40eb05:	ins    DWORD PTR es:[edi],dx
  40eb06:	jp     0x40eaca
  40eb08:	push   ss
  40eb09:	push   ss
  40eb0a:	imul   edi,ecx,0xffffff9b
  40eb0d:	(bad)  
  40eb0e:	(bad)  
  40eb0f:	mov    esp,0x67341b09
  40eb14:	das    
  40eb15:	repnz aaa 
  40eb17:	in     eax,dx
  40eb18:	ror    BYTE PTR [esi+eiz*4+0x6f09c27c],cl
  40eb1f:	into   
  40eb20:	cmp    BYTE PTR ds:0x49132b6d,al
  40eb26:	add    al,0xdb
  40eb28:	arpl   WORD PTR [edx],bp
  40eb2a:	dec    ecx
  40eb2b:	mov    ds:0xa3a5d7ea,eax
  40eb30:	aaa    
  40eb31:	sbb    eax,0x40a44b15
  40eb36:	add    al,0x9e
  40eb38:	test   al,0x72
  40eb3a:	rcl    edi,0x80
  40eb3d:	add    eax,0x61c008f1
  40eb43:	daa    
  40eb44:	push   esp
  40eb45:	jmp    0x65b:0x9cc7a5be
  40eb4c:	ins    BYTE PTR es:[edi],dx
  40eb4d:	call   0xfecfde0f
  40eb52:	dec    ebx
  40eb53:	and    al,BYTE PTR [ebp+0x70e7d978]
  40eb59:	(bad)  
  40eb5a:	jns    0x40eb7c
  40eb5c:	nop
  40eb5d:	jbe    0x40eb19
  40eb5f:	jp     0x40eb21
  40eb61:	add    BYTE PTR [ebp-0x75],bh
  40eb64:	inc    ebx
  40eb65:	inc    ecx
  40eb66:	mov    es,WORD PTR [esp+esi*8-0x5ec8c4df]
  40eb6d:	jmp    0x978e:0x31d149dd
  40eb74:	iret   
  40eb75:	dec    ebp
  40eb76:	mov    dh,dl
  40eb78:	sbb    al,BYTE PTR [edx+0x46]
  40eb7b:	cmc    
  40eb7c:	mov    edi,0x33e2f9c3
  40eb81:	or     BYTE PTR [esi-0x15],al
  40eb84:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40eb85:	pushf  
  40eb86:	ja     0x40eb71
  40eb88:	jb     0x40eb86
  40eb8a:	inc    ebp
  40eb8b:	cdq    
  40eb8c:	and    edi,DWORD PTR [ebp-0xdacddaf]
  40eb92:	push   esp
  40eb93:	(bad)  
  40eb94:	jp     0x40eb3a
  40eb96:	jmp    0xdf47:0x53455549
  40eb9d:	out    dx,eax
  40eb9e:	push   es
  40eb9f:	cld    
  40eba0:	jmp    0x40eba9
  40eba2:	mov    cl,0x77
  40eba4:	or     al,0xcb
  40eba6:	mov    esi,0x424424db
  40ebab:	ret    
  40ebac:	aas    
  40ebad:	pop    ecx
  40ebae:	iret   
  40ebaf:	jns    0x40ebe0
  40ebb1:	aaa    
  40ebb2:	call   0x364c6ea3
  40ebb7:	fdivrp st(5),st
  40ebb9:	mov    edi,0x8961a2ce
  40ebbe:	pop    edi
  40ebbf:	in     eax,dx
  40ebc0:	les    esp,FWORD PTR [eax+ecx*8]
  40ebc3:	jp     0x40ebe5
  40ebc5:	sbb    al,0x69
  40ebc7:	xor    eax,0x1560e38b
  40ebcc:	dec    edi
  40ebcd:	popf   
  40ebce:	mov    bh,0xf0
  40ebd0:	shl    DWORD PTR [ebp-0x69cb2fa],0x1b
  40ebd7:	inc    edi
  40ebd8:	push   esp
  40ebd9:	ss inc eax
  40ebdb:	push   ebx
  40ebdc:	lods   eax,DWORD PTR ds:[esi]
  40ebdd:	mov    es,WORD PTR [eax+0x42]
  40ebe0:	adc    bl,ah
  40ebe2:	cwde   
  40ebe3:	and    eax,0x5587da10
  40ebe8:	mov    bh,0x65
  40ebea:	out    dx,al
  40ebeb:	int    0x9
  40ebed:	into   
  40ebee:	fistp  QWORD PTR [eax-0x22]
  40ebf1:	call   0xa6f6:0xba8d3505
  40ebf8:	inc    ebx
  40ebf9:	les    ebx,FWORD PTR [eax+ebx*8-0x32]
  40ebfd:	cmp    esp,DWORD PTR [esp+esi*4]
  40ec00:	adc    BYTE PTR [ebx+0x78],dl
  40ec03:	icebp  
  40ec04:	adc    BYTE PTR [ecx+eiz*8+0x41],ah
  40ec08:	push   ebx
  40ec09:	cmp    DWORD PTR [eax+eiz*4-0x1b615ebc],edi
  40ec10:	sub    BYTE PTR ds:0x3ca6903f,dh
  40ec16:	cmp    eax,0xdde1bcde
  40ec1b:	sub    eax,0xa3927c43
  40ec20:	pop    esi
  40ec21:	loopne 0x40ec52
  40ec23:	loopne 0x40ec8b
  40ec25:	mov    ebp,0x283c43e1
  40ec2a:	loope  0x40ebfd
  40ec2c:	xchg   ebp,eax
  40ec2d:	mov    ebx,0x5c7ecbf5
  40ec32:	pop    edx
  40ec33:	or     esp,ebp
  40ec35:	outs   dx,BYTE PTR ds:[esi]
  40ec36:	jl     0x40ebce
  40ec38:	stc    
  40ec39:	push   0x5c
  40ec3b:	sub    ebx,DWORD PTR [edi+0x4e]
  40ec3e:	xor    dh,al
  40ec40:	outs   dx,BYTE PTR ds:[esi]
  40ec41:	pusha  
  40ec42:	inc    ebp
  40ec43:	dec    esp
  40ec44:	imul   ebx,eax,0xffffffbd
  40ec47:	test   eax,0xfc6c9673
  40ec4c:	xor    eax,0xfdae235d
  40ec51:	jmp    0xacdf:0x6245b69e
  40ec58:	int3   
  40ec59:	mov    ds:0xcf6914cf,al
  40ec5e:	inc    esi
  40ec5f:	aas    
  40ec60:	sbb    al,BYTE PTR [esi+ecx*4-0x25c0a1a9]
  40ec67:	sub    al,0xde
  40ec69:	xor    eax,0x1b845f8a
  40ec6e:	mov    eax,0x19ab3a12
  40ec73:	add    dl,ch
  40ec75:	mov    BYTE PTR [esp+esi*1],bh
  40ec78:	or     eax,DWORD PTR [eax+ebp*4]
  40ec7b:	into   
  40ec7c:	ins    BYTE PTR es:[edi],dx
  40ec7d:	cwde   
  40ec7e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ec7f:	retf   
  40ec80:	mov    dh,0x44
  40ec82:	lahf   
  40ec83:	push   0xffffff8e
  40ec85:	add    DWORD PTR [edx-0x652bb637],edi
  40ec8b:	pop    eax
  40ec8c:	adc    ecx,edx
  40ec8e:	mov    ebp,0xfd4790b3
  40ec93:	or     DWORD PTR ds:0xd8e38afa,ebp
  40ec99:	arpl   WORD PTR [edi-0x279d189a],si
  40ec9f:	xchg   edx,eax
  40eca0:	add    al,0xd8
  40eca2:	xor    bl,BYTE PTR [eax+0x27]
  40eca5:	sbb    eax,0x5b051f30
  40ecaa:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ecab:	push   ds
  40ecac:	idiv   ecx
  40ecae:	in     eax,0xd
  40ecb0:	mov    ebx,0xc872a54d
  40ecb5:	inc    esi
  40ecb6:	es push eax
  40ecb8:	mov    ah,0xb5
  40ecba:	push   ds
  40ecbb:	int3   
  40ecbc:	lds    di,DWORD PTR [edi]
  40ecbf:	neg    DWORD PTR [ecx]
  40ecc1:	inc    esi
  40ecc2:	mov    ds:0x762a13c1,al
  40ecc7:	and    DWORD PTR [ebp-0x56],ecx
  40ecca:	add    al,0xc1
  40eccc:	fmul   QWORD PTR [edx+esi*2+0x751b1c]
  40ecd3:	cwde   
  40ecd4:	cld    
  40ecd5:	xor    bh,BYTE PTR [ebx+0x2af28b0b]
  40ecdb:	std    
  40ecdc:	mov    bh,BYTE PTR [edi+0x39]
  40ecdf:	repnz push es
  40ece1:	mov    eax,ds:0x28ce2ed2
  40ece6:	call   0xb830:0x91529c2
  40eced:	(bad)  
  40ecee:	int3   
  40ecef:	or     al,0xa6
  40ecf1:	pop    ebx
  40ecf2:	push   esi
  40ecf3:	fnsave [edi]
  40ecf5:	mov    edi,0x8d264937
  40ecfa:	or     ebx,DWORD PTR [edi+0x72924c68]
  40ed00:	push   cs
  40ed01:	push   ecx
  40ed02:	out    dx,eax
  40ed03:	in     eax,0x6a
  40ed05:	cmp    DWORD PTR [ecx+0x6],ebp
  40ed08:	setns  BYTE PTR [esi]
  40ed0b:	scas   al,BYTE PTR es:[edi]
  40ed0c:	sub    esi,edi
  40ed0e:	ds loopne 0x40ecf6
  40ed11:	push   edi
  40ed12:	sbb    edi,DWORD PTR [ebx]
  40ed14:	jne    0x40ed91
  40ed16:	mov    ?,WORD PTR [edi-0x612c2585]
  40ed1c:	into   
  40ed1d:	jno    0x40ed9e
  40ed1f:	daa    
  40ed20:	mov    al,0x76
  40ed22:	dec    edx
  40ed23:	or     BYTE PTR [ebx+0xb],ah
  40ed26:	loop   0x40ed5a
  40ed28:	mov    dl,0x5a
  40ed2a:	mov    DWORD PTR [ebp+0x69ab3f4c],eax
  40ed30:	xor    ebp,DWORD PTR [edi+ebx*1-0x5eed365f]
  40ed37:	mov    esi,0xeaadc5a7
  40ed3c:	rol    DWORD PTR [edx],0xb3
  40ed3f:	or     DWORD PTR [ebx-0xee938d5],ecx
  40ed45:	les    esi,FWORD PTR [esi+0xd]
  40ed48:	xchg   ebp,eax
  40ed49:	mov    ebx,0xee78d016
  40ed4e:	push   ds
  40ed4f:	ret    
  40ed50:	js     0x40ed36
  40ed52:	es jmp 0x683d:0xc9de100c
  40ed5a:	cmp    eax,0x8f6974a4
  40ed5f:	add    al,0x5d
  40ed61:	xchg   BYTE PTR [esi],ah
  40ed63:	test   eax,0xdeca90e0
  40ed68:	or     DWORD PTR [edi-0xedba2e],eax
  40ed6e:	pop    eax
  40ed6f:	xchg   BYTE PTR [eax+0xd],dl
  40ed72:	test   BYTE PTR [edx],ah
  40ed74:	cmp    eax,DWORD PTR [ebx+0x1c1d0b16]
  40ed7a:	mov    eax,0x7b5c080f
  40ed7f:	dec    eax
  40ed80:	cli    
  40ed81:	mov    dl,0xe1
  40ed83:	inc    edi
  40ed84:	inc    edi
  40ed85:	adc    DWORD PTR [edi],ecx
  40ed87:	xchg   edx,eax
  40ed88:	lods   eax,DWORD PTR ds:[esi]
  40ed89:	es es inc eax
  40ed8c:	lock jae 0x40ed51
  40ed8f:	inc    esi
  40ed90:	jae    0x40edf3
  40ed92:	ficomp WORD PTR [eax]
  40ed94:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ed95:	cs dec ecx
  40ed97:	sbb    DWORD PTR [eax],edx
  40ed99:	fsubr  QWORD PTR [ebx+0x2c]
  40ed9c:	jb     0x40ee0b
  40ed9e:	scas   al,BYTE PTR es:[edi]
  40ed9f:	cmp    eax,0x65dcf54d
  40eda4:	jp     0x40ed45
  40eda6:	call   0x57f6:0x6c07d570
  40edad:	lods   eax,DWORD PTR ds:[esi]
  40edae:	gs mov edi,0x9d279c85
  40edb4:	mov    ds:0xfee01840,al
  40edb9:	and    esp,eax
  40edbb:	and    bl,BYTE PTR [ecx+esi*2-0x1a47ccf9]
  40edc2:	(bad)
  40edc5:	into   
  40edc6:	dec    edx
  40edc7:	pop    ecx
  40edc8:	cdq    
  40edc9:	xchg   edi,eax
  40edca:	stc    
  40edcb:	iret   
  40edcc:	mov    al,0xbd
  40edce:	jle    0x40edca
  40edd0:	xor    ah,BYTE PTR [ebx+0xaf29a33]
  40edd6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40edd7:	mov    bh,0x67
  40edd9:	dec    ebp
  40edda:	mov    ah,0xaa
  40eddc:	outs   dx,DWORD PTR ds:[esi]
  40eddd:	cmp    DWORD PTR [edi+0x41e70232],esp
  40ede3:	lahf   
  40ede4:	sar    BYTE PTR [ebx-0x4c],1
  40ede7:	and    al,0x5c
  40ede9:	mov    edi,0xc10078a5
  40edee:	int3   
  40edef:	lods   eax,DWORD PTR ds:[esi]
  40edf0:	aas    
  40edf1:	sub    eax,0x7fc74425
  40edf6:	xor    al,0x58
  40edf8:	sub    al,0xeb
  40edfa:	mov    DWORD PTR [esi-0x53],edi
  40edfd:	mov    ebp,0x5e266bf9
  40ee02:	js     0x40ede6
  40ee04:	ins    DWORD PTR es:[edi],dx
  40ee05:	mov    dl,0xfa
  40ee07:	sbb    esp,DWORD PTR [ecx]
  40ee09:	dec    edx
  40ee0a:	dec    ecx
  40ee0b:	and    al,0x90
  40ee0d:	shl    edx,1
  40ee0f:	lods   eax,DWORD PTR ds:[esi]
  40ee10:	push   ebx
  40ee11:	lock pop eax
  40ee13:	ins    BYTE PTR es:[edi],dx
  40ee14:	inc    ecx
  40ee15:	cmp    eax,0x5793246
  40ee1a:	inc    ebp
  40ee1b:	stos   BYTE PTR es:[edi],al
  40ee1c:	xchg   ecx,eax
  40ee1d:	adc    esi,DWORD PTR [ecx-0x73ddbe5e]
  40ee23:	dec    eax
  40ee24:	xor    eax,0x2cc6be2d
  40ee29:	jle    0x40edb5
  40ee2b:	dec    ecx
  40ee2c:	cmp    bl,BYTE PTR [ebp-0x797f753f]
  40ee32:	xchg   DWORD PTR [eax],eax
  40ee34:	adc    DWORD PTR ds:0x8a09795b,ecx
  40ee3a:	and    al,0x7d
  40ee3c:	aam    0x52
  40ee3e:	test   BYTE PTR [eax+ebx*8+0x26b9a754],cl
  40ee45:	int3   
  40ee46:	(bad)  [ebx+0x1708dacc]
  40ee4c:	ss nop
  40ee4e:	add    al,0x55
  40ee50:	arpl   cx,ax
  40ee52:	adc    eax,0xe5b9a9ee
  40ee57:	adc    eax,0xf720c6e7
  40ee5c:	test   al,0x60
  40ee5e:	fs aam 0xc3
  40ee61:	push   esi
  40ee62:	(bad)  
  40ee63:	jb     0x40eea3
  40ee65:	push   edi
  40ee66:	sar    DWORD PTR [esi-0x13],0x72
  40ee6a:	or     ch,BYTE PTR ds:0xf78f8f54
  40ee70:	push   esp
  40ee71:	std    
  40ee72:	inc    ebp
  40ee73:	pusha  
  40ee74:	into   
  40ee75:	jl     0x40ee00
  40ee77:	hlt    
  40ee78:	jecxz  0x40ee48
  40ee7a:	inc    esp
  40ee7b:	cmp    BYTE PTR [ecx],ah
  40ee7d:	(bad)  
  40ee7e:	fcmovbe st,st(7)
  40ee80:	inc    ebp
  40ee81:	pop    ds
  40ee82:	dec    ecx
  40ee83:	pop    ecx
  40ee84:	iret   
  40ee85:	sti    
  40ee86:	fdivr  st(3),st
  40ee88:	xor    edx,DWORD PTR [ebx]
  40ee8a:	cmp    BYTE PTR [edx+0x3c257c2b],ch
  40ee90:	inc    edi
  40ee91:	sbb    eax,0xdd53771c
  40ee96:	sub    eax,0x3092b054
  40ee9b:	inc    esi
  40ee9c:	std    
  40ee9d:	ds pop edx
  40ee9f:	cwde   
  40eea0:	iret   
  40eea1:	and    DWORD PTR [ebx],eax
  40eea3:	mov    edi,0x42373c05
  40eea9:	add    dh,cl
  40eeab:	jbe    0x40eead
  40eead:	add    cl,ch
  40eeaf:	jmp    0x972d:0x4c000004
  40eeb6:	and    eax,0x6dfebff7
  40eebb:	loopne 0x40eead
  40eebd:	mov    al,0x21
  40eebf:	cmp    ebp,edi
  40eec1:	jg     0x40eea8
  40eec3:	add    al,0xd6
  40eec5:	add    BYTE PTR [eax],al
  40eec7:	rol    BYTE PTR [eax+eax*1],cl
  40eeca:	add    cl,al
  40eecc:	fsubr  st,st(0)
  40eece:	xchg   BYTE PTR [ecx-0x7],dl
  40eed1:	dec    ebp
  40eed2:	xchg   esi,eax
  40eed3:	hlt    
  40eed4:	lods   eax,DWORD PTR ds:[esi]
  40eed5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40eed6:	or     esi,eax
  40eed8:	pop    ds
  40eed9:	pop    ss
  40eeda:	ret    0xec38
  40eedd:	mov    ds:0x131e8b47,eax
  40eee2:	test   al,0x37
  40eee4:	and    DWORD PTR [ebx-0x14],esi
  40eee7:	sbb    bl,BYTE PTR [eax-0x63b01365]
  40eeed:	mov    ?,WORD PTR [ebx]
  40eeef:	or     edx,DWORD PTR [ecx+0x6f2ff685]
  40eef5:	jge    0x40ef66
  40eef7:	outs   dx,DWORD PTR ds:[esi]
  40eef8:	jp     0x40eeb6
  40eefa:	cmp    DWORD PTR [ecx+0x17],esp
  40eefd:	aad    0x6a
  40eeff:	mov    ecx,0x29e3751e
  40ef04:	lods   eax,DWORD PTR ds:[esi]
  40ef05:	fisttp QWORD PTR [edi-0x325ac03]
  40ef0b:	and    al,0x2b
  40ef0d:	xor    al,0x25
  40ef0f:	test   eax,0x6f34b45c
  40ef14:	and    al,0x9e
  40ef16:	gs pop eax
  40ef18:	lahf   
  40ef19:	dec    ebx
  40ef1a:	pop    esi
  40ef1b:	mov    ds:0xab773bb8,al
  40ef20:	cmp    eax,0x876480f6
  40ef25:	in     eax,0x96
  40ef27:	cmp    edi,ebp
  40ef29:	jle    0x40ef52
  40ef2b:	scas   al,BYTE PTR es:[edi]
  40ef2c:	sub    DWORD PTR [ebx+0x3a1e31d6],eax
  40ef32:	mov    bl,ch
  40ef34:	pop    ebx
  40ef35:	add    DWORD PTR [ecx-0x40f577df],esp
  40ef3b:	into   
  40ef3c:	adc    bh,BYTE PTR [ebp-0x2b7ae967]
  40ef42:	adc    DWORD PTR [esi+0x5b],esp
  40ef45:	fs push esi
  40ef47:	mov    dh,bh
  40ef49:	adc    BYTE PTR [ebx+edx*2],dl
  40ef4c:	inc    ecx
  40ef4d:	and    bl,BYTE PTR [ebp+0x4e372a6b]
  40ef53:	cmp    al,0xa5
  40ef55:	inc    esp
  40ef56:	jo     0x40ef94
  40ef58:	les    esp,FWORD PTR [eax+0x23]
  40ef5b:	out    dx,al
  40ef5c:	mul    dh
  40ef5e:	loope  0x40ef75
  40ef60:	in     al,dx
  40ef61:	(bad)  
  40ef62:	pop    eax
  40ef63:	sub    eax,DWORD PTR [ebx-0x59]
  40ef66:	push   0xd76b4039
  40ef6b:	leave  
  40ef6c:	bound  edi,QWORD PTR [eax]
  40ef6e:	gs dec ebp
  40ef70:	xor    BYTE PTR [esi+0x4b],dh
  40ef73:	(bad)  
  40ef74:	stc    
  40ef75:	and    BYTE PTR [ebp-0x2dfb9afd],0x2b
  40ef7c:	add    ah,bl
  40ef7e:	push   edi
  40ef7f:	fs adc al,0x3e
  40ef82:	lahf   
  40ef83:	sub    eax,DWORD PTR [eax-0xb9b41aa]
  40ef89:	inc    ecx
  40ef8a:	or     al,BYTE PTR [ebp+0x41]
  40ef8d:	jne    0x40ef77
  40ef8f:	mov    BYTE PTR [ebx],al
  40ef91:	add    ecx,DWORD PTR [ebx]
  40ef93:	in     al,dx
  40ef94:	retf   0xc7a
  40ef97:	nop
  40ef98:	or     BYTE PTR [ebx],bl
  40ef9a:	dec    eax
  40ef9b:	adc    ch,ch
  40ef9d:	(bad)  
  40ef9e:	aaa    
  40ef9f:	fcom   DWORD PTR [edx]
  40efa1:	pop    ebx
  40efa2:	shl    dh,1
  40efa4:	(bad)  
  40efa6:	jns    0x40ef3f
  40efa8:	ins    BYTE PTR es:[edi],dx
  40efa9:	xor    BYTE PTR [ebx-0x2],dh
  40efac:	mov    dh,0x84
  40efae:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40efaf:	cmp    al,0x90
  40efb1:	adc    ecx,DWORD PTR [edi-0x18]
  40efb4:	ret    
  40efb5:	pushf  
  40efb6:	rol    BYTE PTR [edi+0xd21316],0xa9
  40efbd:	aam    0x9
  40efbf:	sbb    eax,ebx
  40efc1:	mov    ebx,0x185aa9dc
  40efc6:	pop    edx
  40efc7:	ins    BYTE PTR es:[edi],dx
  40efc8:	popa   
  40efc9:	ins    BYTE PTR es:[edi],dx
  40efca:	fwait
  40efcb:	cmp    al,bl
  40efcd:	and    eax,0x28d36b1f
  40efd2:	mov    bh,0x8f
  40efd4:	mov    ds:0x4ec29306,al
  40efd9:	aad    0x9f
  40efdb:	mov    ds:0x79a1bce,eax
  40efe0:	mov    al,0xe4
  40efe2:	or     al,0xbf
  40efe4:	imul   esi,DWORD PTR [eax-0x4e],0x38
  40efe8:	sbb    BYTE PTR [edi-0x362f935],al
  40efee:	bound  ebx,QWORD PTR [edx-0x74]
  40eff1:	jl     0x40efcf
  40eff3:	mov    eax,0xfe3fbc96
  40eff8:	test   edx,esp
  40effa:	ret    
  40effb:	push   esi
  40effc:	imul   edi
  40effe:	mov    eax,ds:0x6129aca2
  40f003:	xor    cl,bl
  40f005:	fiadd  DWORD PTR [eax]
  40f007:	sub    bl,al
  40f009:	inc    ebp
  40f00a:	sub    DWORD PTR [esi-0x68],0x23c247b0
  40f011:	cmp    eax,edx
  40f013:	add    al,0x4
  40f015:	xor    bh,BYTE PTR [esi]
  40f017:	fidiv  DWORD PTR [edi-0x7c]
  40f01a:	gs (bad) 
  40f01c:	test   eax,0xa1c3a49d
  40f021:	mov    ecx,0xca8d2c4d
  40f026:	clc    
  40f027:	std    
  40f028:	retf   0x90c7
  40f02b:	retw   
  40f02d:	out    0x1d,al
  40f02f:	cwd    
  40f031:	or     DWORD PTR [eax-0x24],esp
  40f034:	out    0x21,eax
  40f036:	cmc    
  40f037:	xchg   edx,eax
  40f038:	cs mov bh,0xab
  40f03b:	leave  
  40f03c:	mov    eax,0xe59c7430
  40f041:	(bad)  
  40f042:	leave  
  40f043:	inc    edi
  40f044:	cli    
  40f045:	xchg   esi,eax
  40f046:	dec    eax
  40f047:	jge    0x40f04b
  40f049:	jne    0x40efde
  40f04b:	cmc    
  40f04c:	sub    DWORD PTR [edi+0x70],edi
  40f04f:	mov    edx,esi
  40f051:	(bad)  [eax]
  40f053:	cmp    ah,BYTE PTR [eax+0x24]
  40f056:	hlt    
  40f057:	jns    0x40f0ac
  40f059:	dec    ebx
  40f05a:	push   0xf48cbf64
  40f05f:	js     0x40efec
  40f061:	idiv   DWORD PTR [eax]
  40f063:	add    esp,DWORD PTR [edi-0x6acfe84b]
  40f069:	adc    BYTE PTR [ecx],0xc7
  40f06c:	popa   
  40f06d:	dec    edx
  40f06e:	xchg   esi,eax
  40f06f:	sbb    dh,0x51
  40f072:	clc    
  40f073:	iret   
  40f074:	jmp    0x3121:0x577f925d
  40f07b:	stos   DWORD PTR es:[edi],eax
  40f07c:	(bad)  
  40f07d:	mov    eax,DWORD PTR [edx+esi*4]
  40f080:	(bad)  
  40f081:	out    0xf2,eax
  40f083:	xor    DWORD PTR [edi+0x7c],ecx
  40f086:	jmp    0x1ca5:0x7b1d4c04
  40f08d:	lods   eax,DWORD PTR ds:[esi]
  40f08e:	or     al,0x8b
  40f090:	jl     0x40f073
  40f092:	and    bh,ch
  40f094:	es shl eax,1
  40f097:	inc    ecx
  40f098:	mov    edi,DWORD PTR [ebx+0x5e148ed7]
  40f09e:	das    
  40f09f:	add    edx,DWORD PTR [ebx+0x6efe033b]
  40f0a5:	jns    0x40f077
  40f0a7:	jnp    0x40f104
  40f0a9:	mov    ch,0xd5
  40f0ab:	test   BYTE PTR [edi],ch
  40f0ad:	and    al,0x4e
  40f0af:	jecxz  0x40f09c
  40f0b1:	pop    ebx
  40f0b2:	test   DWORD PTR [ebp+0x1f7d920a],esp
  40f0b8:	fistp  QWORD PTR [edx]
  40f0ba:	test   DWORD PTR [eax+0x21],edx
  40f0bd:	cmp    dl,BYTE PTR [edi+0xeddc5f6]
  40f0c3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f0c4:	cmp    DWORD PTR [ebp+ebx*4+0x34],0x9
  40f0c9:	pop    esp
  40f0ca:	dec    edi
  40f0cb:	cmp    DWORD PTR [ebx-0x33],0xed300d75
  40f0d2:	add    al,BYTE PTR [edx+0x64]
  40f0d5:	xor    BYTE PTR [esp+esi*4],bl
  40f0d8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f0d9:	jns    0x40f098
  40f0db:	jle    0x40f0e8
  40f0dd:	sub    ebx,0x24f76bd4
  40f0e3:	ss ffree st(6)
  40f0e6:	jmp    0x7b659404
  40f0eb:	or     DWORD PTR [esi],edx
  40f0ed:	or     ch,al
  40f0ef:	or     DWORD PTR [eax+0x2c],esp
  40f0f2:	outs   dx,DWORD PTR fs:[esi]
  40f0f4:	lods   eax,DWORD PTR ds:[esi]
  40f0f5:	mov    esi,0xce2ca960
  40f0fa:	fs enter 0xc339,0x60
  40f0ff:	xchg   BYTE PTR [ebx-0x51],ch
  40f102:	out    0x22,eax
  40f104:	inc    ebp
  40f105:	repz bound eax,QWORD PTR [edi+eax*8-0x5f]
  40f10a:	jp     0x40f0ab
  40f10c:	dec    esi
  40f10d:	mov    WORD PTR [ecx-0x29c5da81],ss
  40f113:	test   eax,0xb6dc101b
  40f118:	test   al,0x7c
  40f11a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f11b:	xor    ch,0x12
  40f11e:	pop    edi
  40f11f:	adc    BYTE PTR [esp+esi*1+0x12f03da7],cl
  40f126:	rcl    BYTE PTR [eax],cl
  40f128:	mov    BYTE PTR [esi],dl
  40f12a:	aas    
  40f12b:	pop    ecx
  40f12c:	rcr    DWORD PTR fs:[esp+eiz*4],cl
  40f130:	iret   
  40f131:	push   esi
  40f132:	xchg   ebx,eax
  40f133:	(bad)  
  40f134:	imul   esi,DWORD PTR [edx],0xffffffa7
  40f137:	adc    BYTE PTR [edx],al
  40f139:	cld    
  40f13a:	push   edi
  40f13b:	push   ebp
  40f13c:	out    dx,al
  40f13d:	pop    ecx
  40f13e:	jmp    0x88dc:0x85898116
  40f145:	(bad)  
  40f146:	dec    esi
  40f147:	add    al,0xf
  40f149:	enter  0x63ba,0x51
  40f14d:	push   edx
  40f14e:	cmp    BYTE PTR [ecx-0x6b],0xa6
  40f152:	inc    ebx
  40f153:	mov    eax,ds:0x1cc692fe
  40f158:	add    DWORD PTR [edi+ecx*8],esi
  40f15b:	pop    ebp
  40f15c:	adc    ebx,DWORD PTR [edx+0x2d10312f]
  40f162:	jne    0x40f1dc
  40f164:	inc    esi
  40f165:	nop
  40f166:	in     al,0x72
  40f168:	xchg   ebx,eax
  40f169:	mov    ebp,0xb8b7f086
  40f16e:	nop
  40f16f:	lods   eax,DWORD PTR ds:[esi]
  40f170:	mov    edi,0x4b0df88d
  40f175:	adc    dl,BYTE PTR [eax+0x2e]
  40f178:	shl    DWORD PTR [ecx+ecx*2-0x5],1
  40f17c:	sti    
  40f17d:	ret    0x70e8
  40f180:	in     al,0xc6
  40f182:	(bad)  
  40f183:	lds    ebx,FWORD PTR [ebp+0x8d49c60]
  40f189:	xchg   ebp,eax
  40f18a:	mov    ebp,0x36a8f7a9
  40f18f:	pop    edx
  40f190:	mov    ch,0x12
  40f192:	adc    DWORD PTR [eax-0x32739932],0xffffff8d
  40f199:	xor    ecx,DWORD PTR [eax]
  40f19b:	sub    DWORD PTR [esi],edx
  40f19d:	ja     0x40f15c
  40f19f:	enter  0x2522,0xcf
  40f1a3:	je     0x40f1a8
  40f1a5:	je     0x40f18f
  40f1a7:	clc    
  40f1a8:	arpl   WORD PTR [ecx+0x5199afa4],dx
  40f1ae:	and    DWORD PTR [edx+0x62],0xffffffae
  40f1b2:	or     al,0x86
  40f1b4:	imul   DWORD PTR [ebx+0x6ba25dd4]
  40f1ba:	call   0x9a416dc7
  40f1bf:	adc    al,0x5f
  40f1c1:	(bad)  [edx-0x42]
  40f1c4:	mov    edi,0xaadfb51f
  40f1c9:	dec    ecx
  40f1ca:	mov    ds:0x42eda5b1,eax
  40f1cf:	call   0xfe3d:0x40dc950f
  40f1d6:	ss cmp eax,0x6cbc338c
  40f1dc:	xor    BYTE PTR [eax+0x4d0cfd20],cl
  40f1e2:	mov    ebx,0xe4c19a4
  40f1e7:	jns    0x40f16c
  40f1e9:	jno    0x40f23c
  40f1eb:	imul   eax,DWORD PTR [eax],0x43
  40f1ee:	ret    
  40f1ef:	cmp    BYTE PTR [ebp+0x29],bh
  40f1f2:	sbb    al,0x72
  40f1f4:	and    DWORD PTR [esi],edi
  40f1f6:	imul   edi,DWORD PTR [ecx+0x81aba18],0xffffffbc
  40f1fd:	out    dx,al
  40f1fe:	loopne 0x40f1d4
  40f200:	xor    al,0x69
  40f202:	xchg   esi,eax
  40f203:	out    dx,al
  40f204:	jecxz  0x40f26d
  40f206:	icebp  
  40f207:	mov    dl,dl
  40f209:	inc    esi
  40f20a:	stos   BYTE PTR es:[edi],al
  40f20b:	mov    al,ds:0xac07c3af
  40f210:	pop    ebp
  40f211:	cs sub bh,ch
  40f214:	add    edi,DWORD PTR es:[ebp+0x7d]
  40f218:	shr    BYTE PTR [esi-0x3d],1
  40f21b:	xchg   DWORD PTR [esp+eiz*2-0x6707a7b9],ecx
  40f222:	add    BYTE PTR [eax],bh
  40f224:	and    DWORD PTR [ecx+0x34],0xa0fadca7
  40f22b:	jae    0x40f1e7
  40f22d:	sub    esp,edi
  40f22f:	rcl    BYTE PTR [edx+0x2d],1
  40f232:	sbb    dh,BYTE PTR [ebp+0x4bc633a5]
  40f238:	aad    0xb8
  40f23a:	mov    edi,0x68a74449
  40f23f:	xchg   BYTE PTR [ebp+0x5d6a4fa0],al
  40f245:	fcomp  DWORD PTR [ebx+0x422bf97a]
  40f24b:	xchg   edx,eax
  40f24c:	mov    dl,BYTE PTR [ebp+0x29]
  40f24f:	fs push eax
  40f251:	sbb    ah,BYTE PTR [esi]
  40f253:	scas   al,BYTE PTR es:[edi]
  40f254:	push   ecx
  40f255:	leave  
  40f256:	pop    esi
  40f257:	sub    bl,ch
  40f259:	dec    esi
  40f25a:	inc    ebx
  40f25b:	fcom   DWORD PTR ds:0xe88db7f
  40f261:	cwde   
  40f262:	cmc    
  40f263:	dec    edi
  40f264:	jl     0x40f1ee
  40f266:	cmp    al,0x35
  40f268:	mov    al,ds:0x893cd108
  40f26d:	in     eax,0xb4
  40f26f:	push   ebx
  40f270:	data16 std 
  40f272:	xchg   ebp,eax
  40f273:	jne    0x40f274
  40f275:	mov    al,ds:0x7865259e
  40f27a:	fldenv [edi]
  40f27c:	orps   xmm2,xmm5
  40f27f:	mov    dl,0xe4
  40f281:	dec    esp
  40f282:	stc    
  40f283:	mov    DWORD PTR [ebp-0x40],eax
  40f286:	out    0xd5,eax
  40f288:	or     al,0x43
  40f28a:	or     BYTE PTR [esi-0x465d048e],0x7
  40f291:	mov    ebx,0xc6b7512d
  40f296:	imul   ebx,DWORD PTR [ebp+0x951a832],0x465b1722
  40f2a0:	in     eax,dx
  40f2a1:	jnp    0x40f2fa
  40f2a3:	fstp   QWORD PTR [esi]
  40f2a5:	xor    dh,BYTE PTR [edx]
  40f2a7:	adc    BYTE PTR [ebp+ebp*8+0x57e14c1f],al
  40f2ae:	jno    0x40f249
  40f2b0:	imul   ecx,DWORD PTR [ecx+0x34],0x12
  40f2b4:	mov    ah,0x69
  40f2b6:	pop    esi
  40f2b7:	mov    eax,0xad42582d
  40f2bc:	sub    cl,cl
  40f2be:	in     eax,0xb3
  40f2c0:	inc    esp
  40f2c1:	pop    esp
  40f2c2:	aam    0x4d
  40f2c4:	pushf  
  40f2c5:	adc    dh,BYTE PTR [edx]
  40f2c7:	ins    BYTE PTR es:[edi],dx
  40f2c8:	adc    ch,BYTE PTR [ebx+edx*2-0x15fd20a7]
  40f2cf:	and    DWORD PTR [ebx+edi*4-0x5],0xffffffb5
  40f2d4:	lds    ebx,FWORD PTR [esi-0x39]
  40f2d7:	(bad)  
  40f2d8:	xchg   edi,eax
  40f2d9:	into   
  40f2da:	cmp    ah,cl
  40f2dc:	(bad)  
  40f2dd:	outs   dx,BYTE PTR ds:[esi]
  40f2de:	xlat   BYTE PTR ds:[ebx]
  40f2df:	es aaa 
  40f2e1:	push   edi
  40f2e2:	inc    ecx
  40f2e3:	jg     0x40f2cb
  40f2e5:	(bad)
  40f2e8:	cdq    
  40f2e9:	push   0x73db4dd6
  40f2ee:	fst    DWORD PTR [eax-0x573f954b]
  40f2f4:	inc    esi
  40f2f5:	outs   dx,DWORD PTR ds:[esi]
  40f2f6:	les    eax,FWORD PTR [ebx-0x6eb1cfa9]
  40f2fc:	xlat   BYTE PTR ds:[ebx]
  40f2fd:	stos   DWORD PTR es:[edi],eax
  40f2fe:	rcr    esi,0x36
  40f301:	loopne 0x40f32d
  40f303:	mov    cl,0x37
  40f305:	add    BYTE PTR ds:0xacc41ec3,al
  40f30b:	iret   
  40f30c:	sbb    esi,DWORD PTR [esi]
  40f30e:	popa   
  40f30f:	xor    bh,bh
  40f311:	adc    ecx,DWORD PTR [esi-0x26]
  40f314:	(bad)  
  40f315:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f316:	mov    cl,0x4d
  40f318:	sti    
  40f319:	leave  
  40f31a:	enter  0xc4ef,0x32
  40f31e:	into   
  40f31f:	out    0xa0,al
  40f321:	and    ebx,DWORD PTR [ebx-0x5ec70a12]
  40f327:	fnsave [edi+eiz*8]
  40f32a:	jp     0x40f2e6
  40f32c:	inc    eax
  40f32d:	sub    al,0xc8
  40f32f:	lock and DWORD PTR [edi-0x4d098be9],ecx
  40f336:	jge    0x40f342
  40f338:	add    eax,0x5e7de8a8
  40f33d:	in     al,0x53
  40f33f:	out    0x1a,eax
  40f341:	sbb    edi,DWORD PTR [ecx+0x3d]
  40f344:	push   ebx
  40f345:	sub    cl,BYTE PTR [edi+0x712ec789]
  40f34b:	adc    al,0xb4
  40f34d:	fwait
  40f34e:	je     0x40f338
  40f350:	mov    al,BYTE PTR [ebp-0x6f4cbc34]
  40f356:	sub    al,0xd2
  40f358:	dec    edx
  40f359:	idiv   DWORD PTR [edx]
  40f35b:	ret    
  40f35c:	push   ebx
  40f35d:	mov    esp,0xf82a3cc6
  40f362:	sbb    cl,BYTE PTR [eax+esi*2]
  40f365:	xchg   edx,eax
  40f366:	sbb    al,0x44
  40f368:	jg     0x40f327
  40f36a:	push   ss
  40f36b:	into   
  40f36c:	test   cl,al
  40f36e:	fild   QWORD PTR [ebx]
  40f370:	dec    edx
  40f371:	test   esp,esi
  40f373:	fcmovnb st,st(5)
  40f375:	in     al,0xb9
  40f377:	aas    
  40f378:	or     DWORD PTR [eax+0x63],0x17
  40f37c:	popf   
  40f37d:	clc    
  40f37e:	sub    eax,0x4e4a3f4e
  40f383:	sub    edx,edi
  40f385:	aaa    
  40f386:	lea    eax,[edi+0x5f28c927]
  40f38c:	mov    bl,0xd6
  40f38e:	sbb    ebp,DWORD PTR [ecx]
  40f390:	inc    ecx
  40f391:	inc    ebx
  40f392:	mov    ecx,0x523f2bec
  40f397:	xchg   esp,eax
  40f398:	or     dl,bh
  40f39a:	loope  0x40f385
  40f39c:	dec    ebp
  40f39d:	cmp    ecx,eax
  40f39f:	jae    0x40f45d
  40f3a5:	lea    eax,[ecx-0x300b]
  40f3ab:	or     DWORD PTR ds:0x4214ec,0x4214d4
  40f3b5:	mov    DWORD PTR [ebp-0x1c],eax
  40f3b8:	adc    DWORD PTR ds:0x4214fc,ebx
  40f3be:	mov    edx,DWORD PTR [ebp-0x1c]
  40f3c1:	neg    DWORD PTR ds:0x423740
  40f3c7:	xor    edx,esi
  40f3c9:	add    edx,0x7837233d
  40f3cf:	mov    DWORD PTR ds:0x4236e8,0x4a16
  40f3d9:	lea    eax,[ebp+ecx*4-0x4c]
  40f3dd:	mov    DWORD PTR [eax],edx
  40f3df:	mov    edx,DWORD PTR [eax]
  40f3e1:	cmp    edx,ebx
  40f3e3:	jbe    0x40f3fe
  40f3e9:	xor    DWORD PTR ds:0x4214e0,0x48dc
  40f3f3:	add    DWORD PTR [eax],0x3870753
  40f3f9:	jmp    0x40f40e
  40f3fe:	xor    DWORD PTR ds:0x4236b0,0x4236ac
  40f408:	add    DWORD PTR [eax],0xfacc38ad
  40f40e:	sub    DWORD PTR ds:0x4236b0,0x423728
  40f418:	mov    eax,DWORD PTR [ebp-0x8]
  40f41b:	xor    eax,esi
  40f41d:	sbb    DWORD PTR ds:0x423678,0x6a4f
  40f427:	inc    ecx
  40f428:	add    DWORD PTR ds:0x4236b4,0x42373c
  40f432:	inc    DWORD PTR [ebp-0x1c]
  40f435:	xor    DWORD PTR ds:0x4236f0,0x4214dc
  40f43f:	add    eax,edi
  40f441:	mov    DWORD PTR ds:0x423674,0x5bc8
  40f44b:	cmp    ecx,eax
  40f44d:	mov    DWORD PTR ds:0x4236c0,0x41da
  40f457:	jb     0x40f3b8
  40f45d:	adc    eax,DWORD PTR ds:0x4214f4
  40f463:	mov    eax,DWORD PTR [ebp-0xc]
  40f466:	mov    DWORD PTR ds:0x4214d4,0x1a
  40f470:	cmp    DWORD PTR ds:0x4214d4,0x0
  40f477:	je     0x40f4c8
  40f47d:	cmp    DWORD PTR ds:0x4214d4,0x8
  40f484:	jne    0x40f49a
  40f48a:	push   0x423744
  40f48f:	push   0x2fc3
  40f494:	call   DWORD PTR ds:0x41f3ec
  40f49a:	cmp    DWORD PTR ds:0x4214d4,0x9
  40f4a1:	jne    0x40f4b4
  40f4a7:	mov    ecx,DWORD PTR ds:0x4214d4
  40f4ad:	dec    ecx
  40f4ae:	mov    DWORD PTR ds:0x4214d4,ecx
  40f4b4:	xor    ecx,ecx
  40f4b6:	xor    ecx,DWORD PTR ds:0x4214d4
  40f4bc:	dec    ecx
  40f4bd:	mov    DWORD PTR ds:0x4214d4,ecx
  40f4c3:	jmp    0x40f470
  40f4c8:	mov    ecx,DWORD PTR [ebp-0xc]
  40f4cb:	or     DWORD PTR ds:0x423680,0x4214e8
  40f4d5:	xor    eax,esi
  40f4d7:	sbb    DWORD PTR ds:0x4236f4,0x423740
  40f4e1:	xor    ecx,esi
  40f4e3:	lea    ecx,[eax+ecx*1+0x6016]
  40f4ea:	and    DWORD PTR ds:0x42366c,0x7d8c
  40f4f4:	mov    eax,DWORD PTR [ebp-0x10]
  40f4f7:	xor    DWORD PTR ds:0x423678,0x423684
  40f501:	xor    edx,edx
  40f503:	div    ecx
  40f505:	sbb    ecx,DWORD PTR ds:0x423674
  40f50b:	jmp    0x40f9fa
  40f510:	aas    
  40f511:	push   edx
  40f512:	sbb    al,0x66
  40f514:	jge    0x40f584
  40f516:	jg     0x40f573
  40f518:	jae    0x40f542
  40f51a:	lods   eax,DWORD PTR ds:[esi]
  40f51b:	pop    ecx
  40f51c:	sub    ch,BYTE PTR [ebp-0x7d]
  40f51f:	retf   0xdad6
  40f522:	add    BYTE PTR [eax],al
  40f524:	rol    BYTE PTR [eax+eax*1],cl
  40f527:	add    BYTE PTR [ebp+0x38],bh
  40f52a:	jmp    0x40f516
  40f52c:	(bad)  
  40f52d:	ds dec ebx
  40f52f:	out    0x18,eax
  40f531:	jnp    0x40f509
  40f533:	jne    0x40f513
  40f535:	mov    ah,0xa0
  40f537:	mov    esp,0x2d76f1dc
  40f53c:	outs   dx,BYTE PTR ds:[esi]
  40f53d:	mov    BYTE PTR [esi-0x39],al
  40f540:	sbb    al,0x6d
  40f542:	out    dx,eax
  40f543:	aas    
  40f544:	cdq    
  40f545:	xchg   ecx,eax
  40f546:	xchg   ebx,eax
  40f547:	adc    ebx,DWORD PTR [ecx+eax*1+0x61]
  40f54b:	mov    BYTE PTR [edi],ah
  40f54d:	in     eax,dx
  40f54e:	nop
  40f54f:	push   edx
  40f550:	cmp    al,0x81
  40f552:	sbb    esi,DWORD PTR [edx-0x13]
  40f555:	add    ah,BYTE PTR [ebx]
  40f557:	and    eax,0xce9bc478
  40f55c:	ja     0x40f55c
  40f55e:	mov    edx,0xf40e1c2
  40f563:	outs   dx,DWORD PTR ds:[esi]
  40f564:	push   ds
  40f565:	scas   al,BYTE PTR es:[edi]
  40f566:	daa    
  40f567:	xchg   dh,dh
  40f569:	imul   esi,DWORD PTR [ebp-0x2e72b2b7],0xfffffffe
  40f570:	cld    
  40f571:	dec    edi
  40f572:	hlt    
  40f573:	xchg   edx,eax
  40f574:	sbb    BYTE PTR [ebx+0x2af9c2ee],ah
  40f57a:	leave  
  40f57b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f57c:	lahf   
  40f57d:	mov    ebp,0xf46aa12b
  40f582:	pop    eax
  40f583:	inc    esp
  40f584:	jns    0x40f586
  40f586:	fld    TBYTE PTR [ecx-0x1]
  40f589:	(bad)  
  40f58b:	loopne 0x40f521
  40f58d:	(bad)  
  40f58e:	js     0x40f5ea
  40f590:	cs loop 0x40f5aa
  40f593:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f594:	sub    al,0x29
  40f596:	sbb    ebp,DWORD PTR [edx]
  40f598:	test   edx,ebx
  40f59a:	dec    ebp
  40f59b:	out    dx,eax
  40f59c:	cmp    BYTE PTR [eax+0x25],bh
  40f59f:	jnp    0x40f595
  40f5a1:	cmp    cl,dh
  40f5a3:	or     eax,0x85258eca
  40f5a8:	js     0x40f5d7
  40f5aa:	aas    
  40f5ab:	sub    BYTE PTR [ecx*8+0xc4322ac],bh
  40f5b2:	jns    0x40f58b
  40f5b4:	les    edx,FWORD PTR [eax]
  40f5b6:	inc    esi
  40f5b7:	gs mov edx,0x990261e9
  40f5bd:	mov    eax,ds:0x93edca0d
  40f5c2:	add    ax,0x5edc
  40f5c6:	mov    BYTE PTR [edx-0x69],bh
  40f5c9:	mov    eax,ds:0x25572e7b
  40f5ce:	es cdq 
  40f5d0:	retf   
  40f5d1:	sub    dl,BYTE PTR [ecx]
  40f5d3:	xchg   edx,eax
  40f5d4:	sbb    al,0x27
  40f5d6:	icebp  
  40f5d7:	xchg   ebx,eax
  40f5d8:	jae    0x40f657
  40f5da:	je     0x40f635
  40f5dc:	fistp  DWORD PTR [edi-0x4c]
  40f5df:	test   BYTE PTR [di],ch
  40f5e2:	push   0xffffffd8
  40f5e4:	rcl    BYTE PTR [edi-0x48],cl
  40f5e7:	aas    
  40f5e8:	mov    cl,dh
  40f5ea:	adc    al,0x9c
  40f5ec:	or     al,BYTE PTR [ebx]
  40f5ee:	fwait
  40f5ef:	inc    edx
  40f5f0:	jecxz  0x40f5a4
  40f5f2:	xor    esi,esi
  40f5f4:	or     BYTE PTR [ebx],bl
  40f5f6:	ds je  0x40f65d
  40f5f9:	inc    ebx
  40f5fa:	dec    edi
  40f5fb:	scas   eax,DWORD PTR es:[edi]
  40f5fc:	lahf   
  40f5fd:	cli    
  40f5fe:	mov    WORD PTR [edi-0x11d7ba9a],cs
  40f604:	add    eax,0xdea87be5
  40f609:	inc    esp
  40f60a:	das    
  40f60b:	das    
  40f60c:	(bad)  [ecx+0x42]
  40f60f:	mov    esp,0xcad98d0c
  40f614:	jl     0x40f5f5
  40f616:	fwait
  40f617:	sti    
  40f618:	(bad)  
  40f619:	pop    ecx
  40f61a:	mov    eax,ds:0xec8f1064
  40f61f:	pop    ebx
  40f620:	cwde   
  40f621:	adc    BYTE PTR [ebx-0x7e],ch
  40f624:	inc    edx
  40f625:	push   0xffffff92
  40f627:	neg    BYTE PTR [ebp+0x47]
  40f62a:	pop    esi
  40f62b:	(bad)  [ebp-0x3ddd5924]
  40f631:	cmp    al,0xb6
  40f633:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f634:	mov    esp,DWORD PTR [ebp-0x7c]
  40f637:	pop    ds
  40f638:	test   BYTE PTR [edi+ebx*2],bl
  40f63b:	and    DWORD PTR [edi-0x1ed0ef95],esp
  40f641:	frstor [eax]
  40f643:	std    
  40f644:	mov    esi,0xfc3c7343
  40f649:	mov    bl,0xd6
  40f64b:	cmp    eax,0xe3a4e074
  40f650:	xcrypt-ofb (bad)
  40f651:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f652:	stos   BYTE PTR es:[edi],al
  40f653:	out    dx,al
  40f654:	mov    bl,0xb0
  40f656:	xchg   edi,eax
  40f657:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f658:	push   ebx
  40f659:	hlt    
  40f65a:	push   edx
  40f65b:	or     dl,BYTE PTR [edi]
  40f65d:	mov    ebp,0xf914a025
  40f662:	jmp    0x6288:0x2a3d03ed
  40f669:	sub    cl,bl
  40f66b:	das    
  40f66c:	lds    edx,FWORD PTR [edi-0x26]
  40f66f:	cli    
  40f670:	xlat   BYTE PTR ds:[ebx]
  40f671:	pop    ds
  40f672:	sbb    BYTE PTR ds:0x2c4863db,bh
  40f678:	stos   BYTE PTR es:[edi],al
  40f679:	mov    esp,0x4d5d0fbd
  40f67e:	popa   
  40f67f:	fs inc edi
  40f681:	loop   0x40f6d4
  40f683:	(bad)  
  40f684:	mov    dl,0x33
  40f686:	jmp    0x40f66e
  40f688:	sub    al,0x7a
  40f68a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f68b:	pop    eax
  40f68c:	test   eax,0x81b0ccbf
  40f691:	dec    esp
  40f692:	pop    edx
  40f693:	sub    DWORD PTR [edx],esp
  40f695:	sub    ebp,DWORD PTR ds:0x8b9e0243
  40f69b:	jb     0x40f6f6
  40f69d:	jo     0x40f6d4
  40f69f:	mov    dl,0x10
  40f6a1:	cld    
  40f6a2:	and    al,0xf9
  40f6a4:	push   0x6097c33e
  40f6a9:	mov    fs,WORD PTR [edx-0x40]
  40f6ac:	xlat   BYTE PTR ds:[ebx]
  40f6ad:	cmp    al,0x3e
  40f6af:	enter  0x560e,0x8d
  40f6b3:	inc    edi
  40f6b4:	xor    eax,0xfd3eef29
  40f6b9:	nop
  40f6ba:	cmp    ah,BYTE PTR [esp+edx*2+0x201df94e]
  40f6c1:	jl     0x40f6bd
  40f6c3:	inc    edx
  40f6c4:	add    eax,0xf6d6728b
  40f6c9:	and    eax,0x239734bc
  40f6cf:	sub    BYTE PTR [ebx+0x46],dh
  40f6d2:	dec    esi
  40f6d3:	mov    ecx,0x4e8dce07
  40f6d8:	inc    esp
  40f6d9:	jnp    0x40f6dd
  40f6db:	jle    0x40f660
  40f6dd:	adc    DWORD PTR [ebx],edx
  40f6df:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f6e0:	sbb    ebp,DWORD PTR [esi-0x77]
  40f6e3:	or     al,0xeb
  40f6e5:	call   0xac8d:0xcd92d0fb
  40f6ec:	pop    ds
  40f6ed:	push   esi
  40f6ee:	aam    0xb3
  40f6f0:	aas    
  40f6f1:	and    ch,al
  40f6f3:	nop
  40f6f4:	jg     0x40f74f
  40f6f6:	push   ds
  40f6f7:	dec    ebp
  40f6f8:	dec    eax
  40f6f9:	xchg   BYTE PTR [ecx+ecx*4-0x214fb402],bl
  40f700:	xchg   ebx,eax
  40f701:	push   esp
  40f702:	imul   eax,DWORD PTR [ebp+ebp*4+0x7191ef06],0xffffff91
  40f70a:	and    al,0xf6
  40f70c:	xor    bh,ch
  40f70e:	mul    DWORD PTR [edx+eiz*1-0xc34cd6f]
  40f715:	and    esi,esi
  40f717:	or     al,0xfe
  40f719:	popa   
  40f71a:	(bad)  
  40f71b:	jge    0x40f71a
  40f71d:	jl     0x40f6ce
  40f71f:	fiadd  WORD PTR [edi-0x75daadcf]
  40f725:	cwde   
  40f726:	pop    ebp
  40f727:	inc    esi
  40f728:	pop    ecx
  40f729:	fdiv   st(4),st
  40f72b:	mov    ebp,0xd22dfafd
  40f730:	and    eax,0x92854e79
  40f735:	imul   DWORD PTR [eax+0x3a]
  40f738:	jbe    0x40f711
  40f73a:	sti    
  40f73b:	pop    es
  40f73c:	int    0x71
  40f73e:	mov    ds:0xd2c48085,eax
  40f743:	push   0xffffffe9
  40f745:	sbb    al,0xc5
  40f747:	mov    WORD PTR [esi-0x65f7b219],?
  40f74d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f74e:	dec    ebx
  40f74f:	jb     0x40f705
  40f751:	outs   dx,BYTE PTR ds:[esi]
  40f752:	arpl   bp,sp
  40f754:	pop    ds
  40f755:	mov    bl,0xdc
  40f757:	rcr    DWORD PTR [eax],1
  40f759:	mov    cl,0xc7
  40f75b:	jp     0x40f77b
  40f75d:	lods   eax,DWORD PTR ds:[esi]
  40f75e:	inc    esp
  40f75f:	dec    eax
  40f760:	adc    eax,0x5e0dec6d
  40f765:	adc    BYTE PTR [eax+0x0],bh
  40f768:	mov    bl,0xd6
  40f76a:	xchg   esi,eax
  40f76b:	retf   
  40f76c:	jle    0x40f7dc
  40f76e:	add    eax,0xe7ff088b
  40f773:	mov    esi,0x75cde367
  40f778:	out    dx,al
  40f779:	jb     0x40f790
  40f77b:	dec    edi
  40f77c:	lods   eax,DWORD PTR ds:[esi]
  40f77d:	jae    0x40f708
  40f77f:	sahf   
  40f780:	ins    DWORD PTR es:[edi],dx
  40f781:	sub    eax,0x37606229
  40f786:	aad    0xe0
  40f788:	and    BYTE PTR [edi],dl
  40f78a:	xor    eax,0x4997618e
  40f78f:	lods   al,BYTE PTR ds:[esi]
  40f790:	rol    DWORD PTR [ebp+0x3aa28636],cl
  40f796:	pushf  
  40f797:	mov    ?,esi
  40f799:	or     al,0x30
  40f79b:	mov    edi,0x959bc688
  40f7a0:	push   edx
  40f7a1:	xor    al,0xb6
  40f7a3:	aam    0xa2
  40f7a5:	inc    ebx
  40f7a6:	cmp    ch,dh
  40f7a8:	jge    0x40f7b1
  40f7aa:	xchg   DWORD PTR [ebx],esp
  40f7ac:	push   edx
  40f7ad:	push   ds
  40f7ae:	sub    esp,eax
  40f7b0:	jb     0x40f78c
  40f7b2:	jp     0x40f758
  40f7b4:	inc    esi
  40f7b5:	imul   eax,DWORD PTR [eax-0xe],0x49661c4a
  40f7bc:	test   eax,eax
  40f7be:	xlat   BYTE PTR ds:[ebx]
  40f7bf:	push   edx
  40f7c0:	ror    BYTE PTR [ecx+ebp*8],1
  40f7c3:	jmp    0x83a2b16a
  40f7c8:	test   al,0xeb
  40f7ca:	pushf  
  40f7cb:	ds stos DWORD PTR es:[edi],eax
  40f7cd:	arpl   WORD PTR [ebx+ebx*8],bx
  40f7d0:	pop    ebx
  40f7d1:	dec    edx
  40f7d2:	enter  0xd0c,0x4d
  40f7d6:	mov    al,0x88
  40f7d8:	test   BYTE PTR [eiz*8+0x1f30c07e],cl
  40f7df:	mov    dh,0x61
  40f7e1:	push   0x8ff8a34a
  40f7e6:	inc    edx
  40f7e7:	cmp    DWORD PTR [edi-0x36],0xe69f421c
  40f7ee:	pop    edi
  40f7ef:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f7f0:	push   0x1d6dd231
  40f7f5:	int    0xd6
  40f7f7:	mov    al,ds:0xb14ded4d
  40f7fc:	ss jle 0x40f85c
  40f7ff:	sbb    bl,ah
  40f801:	(bad)  
  40f803:	daa    
  40f804:	into   
  40f805:	mov    dl,0x4
  40f807:	out    0x8f,eax
  40f809:	in     al,0xe9
  40f80b:	mov    al,ds:0x7e92208e
  40f810:	xchg   edi,eax
  40f811:	mov    ecx,0x8a1142c2
  40f816:	sbb    eax,0xad8bf50b
  40f81b:	dec    edi
  40f81c:	jmp    0x572abed2
  40f821:	(bad)  
  40f822:	push   ss
  40f823:	mov    ebx,0x3d3ef033
  40f828:	pop    eax
  40f829:	in     al,dx
  40f82a:	in     eax,0x30
  40f82c:	fwait
  40f82d:	in     al,dx
  40f82e:	pushf  
  40f82f:	push   esp
  40f830:	je     0x40f7cd
  40f832:	jecxz  0x40f7ec
  40f834:	xchg   BYTE PTR [edx-0x5736c193],al
  40f83a:	hlt    
  40f83b:	ss stos DWORD PTR es:[edi],eax
  40f83d:	and    edx,edx
  40f83f:	inc    esp
  40f840:	ret    
  40f841:	stos   BYTE PTR es:[edi],al
  40f842:	mov    ecx,0x7648c81d
  40f847:	mov    esi,0x9d8a711c
  40f84c:	not    DWORD PTR [edi-0x12]
  40f84f:	cmp    bl,BYTE PTR [ebp-0x7f]
  40f852:	or     ah,BYTE PTR [esi+0x47c5bb82]
  40f858:	dec    edx
  40f859:	fist   WORD PTR [ebp+0x4866cf69]
  40f85f:	sub    eax,0xf78d2dfd
  40f864:	sbb    esi,DWORD PTR [eax-0x53d1d520]
  40f86a:	rcl    DWORD PTR ds:0x10a03ee6,cl
  40f870:	inc    ecx
  40f871:	shl    DWORD PTR [esp+edi*2-0x49],cl
  40f875:	ins    BYTE PTR es:[edi],dx
  40f876:	or     al,BYTE PTR [ecx-0x31e4baa0]
  40f87c:	cli    
  40f87d:	sahf   
  40f87e:	mov    esi,0xecd3eed9
  40f883:	arpl   WORD PTR [edx-0x61dbc928],si
  40f889:	pop    es
  40f88a:	fisub  WORD PTR [ecx+0x53b1215d]
  40f890:	xchg   edi,eax
  40f891:	aas    
  40f892:	jg     0x40f827
  40f894:	mov    bh,0x5c
  40f896:	jae    0x40f8b5
  40f898:	ins    BYTE PTR es:[edi],dx
  40f899:	fadd   st,st(4)
  40f89b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f89c:	cmp    dh,BYTE PTR [ecx+0x15]
  40f89f:	dec    esi
  40f8a0:	jno    0x40f8f8
  40f8a2:	sbb    ebx,esp
  40f8a4:	push   esp
  40f8a5:	add    ecx,DWORD PTR [edi+0x742ec74c]
  40f8ab:	pop    edi
  40f8ac:	cmp    edi,edx
  40f8ae:	mov    ebx,0xc8c0321a
  40f8b3:	ins    BYTE PTR es:[edi],dx
  40f8b4:	fst    DWORD PTR [esi+esi*4-0x2ce2fb0d]
  40f8bb:	jns    0x40f8f3
  40f8bd:	fmul   DWORD PTR ss:[ebx]
  40f8c0:	(bad)  
  40f8c1:	repnz xlat BYTE PTR ds:[ebx]
  40f8c3:	(bad)  
  40f8c4:	cmp    DWORD PTR [esi-0x6a],ecx
  40f8c7:	jecxz  0x40f851
  40f8c9:	mov    al,BYTE PTR [ebx+edx*8+0x4d]
  40f8cd:	(bad)  
  40f8ce:	ss (bad) 
  40f8d0:	pop    ecx
  40f8d1:	ja     0x40f909
  40f8d3:	scas   eax,DWORD PTR es:[edi]
  40f8d4:	in     eax,0xc3
  40f8d6:	or     DWORD PTR [edi-0x67c0f383],ecx
  40f8dc:	push   ss
  40f8dd:	xchg   edx,eax
  40f8de:	mov    esp,es
  40f8e0:	stos   BYTE PTR es:[edi],al
  40f8e1:	ds cdq 
  40f8e3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f8e4:	sub    esi,ebx
  40f8e6:	add    edi,ecx
  40f8e8:	push   0xf34c673
  40f8ed:	xor    eax,0x85403de0
  40f8f2:	sahf   
  40f8f3:	aaa    
  40f8f4:	add    BYTE PTR [ecx],ch
  40f8f6:	jnp    0x40f899
  40f8f8:	mov    esp,0x774d0ae5
  40f8fd:	test   DWORD PTR [esi],edx
  40f8ff:	cmc    
  40f900:	or     eax,DWORD PTR [edx+0x7e6b41ee]
  40f906:	out    dx,al
  40f907:	jmp    0x7fcf:0x9ae7d746
  40f90e:	daa    
  40f90f:	(bad)  
  40f911:	mov    ds:0xed3d44db,al
  40f916:	jno    0x40f8fb
  40f918:	scas   eax,DWORD PTR es:[di]
  40f91a:	dec    eax
  40f91b:	dec    edx
  40f91c:	lods   al,BYTE PTR ds:[esi]
  40f91d:	lock aam 0x2c
  40f920:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f921:	cmp    eax,0xf1023309
  40f926:	test   BYTE PTR [edi+0x3],bl
  40f929:	push   eax
  40f92a:	mov    cl,0xb
  40f92c:	cli    
  40f92d:	push   ds
  40f92e:	adc    edi,DWORD PTR [ecx+eax*8+0x73a32ab4]
  40f935:	iret   
  40f936:	push   edi
  40f937:	call   FWORD PTR [edi-0x5c]
  40f93a:	dec    esi
  40f93b:	shr    ebx,0x84
  40f93e:	jl     0x40f8d8
  40f940:	fidiv  DWORD PTR [esi+0x72b89934]
  40f946:	mov    esi,0x505eb41a
  40f94b:	loope  0x40f97d
  40f94d:	mov    edx,0x45d4e431
  40f952:	push   ds
  40f953:	mov    gs,WORD PTR [ebx]
  40f955:	outs   dx,BYTE PTR ds:[esi]
  40f956:	clc    
  40f957:	leave  
  40f958:	and    ecx,DWORD PTR [eax+edi*8+0x47]
  40f95c:	xchg   BYTE PTR [esi+ebp*1-0x1baeccdc],cl
  40f963:	ror    BYTE PTR [ecx+eiz*8],0xb3
  40f967:	pop    ecx
  40f968:	xor    edx,0x215b8ae
  40f96e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f96f:	enter  0xf5fc,0x17
  40f973:	leave  
  40f974:	fmul   QWORD PTR [ebx]
  40f976:	popa   
  40f977:	ins    DWORD PTR es:[edi],dx
  40f978:	inc    esp
  40f979:	mov    edx,DWORD PTR [edx]
  40f97b:	mov    BYTE PTR [esi],bh
  40f97d:	leave  
  40f97e:	out    dx,eax
  40f97f:	je     0x40f9c7
  40f981:	call   0xc7adca8f
  40f986:	jg     0x40f931
  40f988:	inc    bh
  40f98a:	mov    bh,0x77
  40f98c:	mov    edi,DWORD PTR [ecx+0x57]
  40f98f:	loope  0x40f961
  40f991:	fcomp  st(4)
  40f993:	lods   al,BYTE PTR ds:[esi]
  40f994:	nop
  40f995:	sub    dl,ch
  40f997:	inc    ebx
  40f998:	jmp    0xa408:0x71c927c5
  40f99f:	mov    ch,ch
  40f9a1:	fwait
  40f9a2:	in     eax,dx
  40f9a3:	or     esi,DWORD PTR [esp+ebx*8]
  40f9a6:	mov    al,BYTE PTR [ebp-0x6d]
  40f9a9:	out    dx,eax
  40f9aa:	mov    ds:0xdb4098f8,eax
  40f9af:	dec    ebp
  40f9b0:	adc    BYTE PTR [edx+0x3638eb82],bl
  40f9b6:	pop    esp
  40f9b7:	mul    DWORD PTR [esp+ebp*8-0x28d1b95a]
  40f9be:	hlt    
  40f9bf:	test   eax,0x711f2091
  40f9c4:	fist   DWORD PTR [edx+0x47]
  40f9c7:	outs   dx,DWORD PTR ds:[si]
  40f9c9:	xchg   ecx,eax
  40f9ca:	mov    dl,0x43
  40f9cc:	mov    ch,BYTE PTR [eax-0xa41693]
  40f9d2:	xor    al,0x5c
  40f9d4:	imul   dl
  40f9d6:	jp     0x40fa49
  40f9d8:	dec    ebp
  40f9d9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f9da:	shl    ebx,cl
  40f9dc:	int3   
  40f9dd:	cmp    ecx,DWORD PTR [edi+0x16]
  40f9e0:	mov    ch,0xbd
  40f9e2:	sbb    cl,cl
  40f9e4:	fimul  WORD PTR [edx-0x1dac7581]
  40f9ea:	add    ebp,edx
  40f9ec:	mov    eax,0x358fc253
  40f9f1:	mov    edx,0x178969de
  40f9f6:	pop    esi
  40f9f7:	out    0xc0,eax
  40f9f9:	in     eax,0x8b
  40f9fb:	inc    ebp
  40f9fc:	call   0x3309db82
  40fa01:	add    BYTE PTR [eax],al
  40fa03:	mov    ecx,DWORD PTR [ebp-0xc]
  40fa06:	sub    DWORD PTR ds:0x423704,0x3aa2
  40fa10:	xor    eax,esi
  40fa12:	xor    ecx,esi
  40fa14:	sub    eax,ecx
  40fa16:	cmp    edx,eax
  40fa18:	mov    DWORD PTR ds:0x42372c,0x5e0e
  40fa22:	jmp    0x40ff11
  40fa27:	or     eax,DWORD PTR [ebx+ebp*1-0x38]
  40fa2b:	outs   dx,DWORD PTR ds:[esi]
  40fa2c:	out    dx,eax
  40fa2d:	jmp    0x40f9f6
  40fa2f:	into   
  40fa30:	in     eax,dx
  40fa31:	(bad)  
  40fa32:	adc    ch,BYTE PTR gs:[edx]
  40fa35:	in     eax,0x58
  40fa37:	test   al,0xdf
  40fa39:	add    BYTE PTR [eax],al
  40fa3b:	rol    BYTE PTR [eax+eax*1],cl
  40fa3e:	add    BYTE PTR [ebx+edx*2],ah
  40fa41:	ins    BYTE PTR es:[edi],dx
  40fa42:	in     eax,0xa6
  40fa44:	xor    DWORD PTR [edi-0x3],ebp
  40fa47:	inc    ebx
  40fa48:	xor    ebp,edi
  40fa4a:	retf   0x489b
  40fa4d:	sub    eax,DWORD PTR [esi+0x70136688]
  40fa53:	or     eax,0x4bad59d9
  40fa58:	mov    edx,0x537b8887
  40fa5d:	sbb    DWORD PTR [ebx+0x6966fcd9],ebp
  40fa63:	pop    edi
  40fa64:	inc    esp
  40fa65:	jns    0x40fa2a
  40fa67:	add    BYTE PTR [ebp-0x6420bd0],0x82
  40fa6e:	pushf  
  40fa6f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40fa71:	dec    ebx
  40fa72:	in     eax,0x1b
  40fa74:	xchg   BYTE PTR [ecx],ch
  40fa76:	add    eax,0xc9102669
  40fa7b:	mov    ah,0x32
  40fa7d:	push   es
  40fa7e:	adc    eax,0xe1f95d83
  40fa83:	jnp    0x40fabb
  40fa85:	xchg   edi,eax
  40fa86:	fistp  QWORD PTR [edi+0x574f749c]
  40fa8c:	in     al,0xee
  40fa8e:	push   esp
  40fa8f:	mov    ecx,0x92d4ac68
  40fa94:	mov    al,ds:0xa2d4897b
  40fa99:	cdq    
  40fa9a:	xor    ecx,DWORD PTR [edx]
  40fa9c:	sub    al,0xb0
  40fa9e:	ret    
  40fa9f:	add    BYTE PTR [edi-0x6675eb9e],ch
  40faa5:	in     al,dx
  40faa6:	lds    ecx,FWORD PTR [edx+0x1d]
  40faa9:	sti    
  40faaa:	cmp    eax,DWORD PTR [eax-0x29]
  40faad:	jmp    0x40fa5b
  40faaf:	in     eax,dx
  40fab0:	mov    ah,0x96
  40fab2:	adc    BYTE PTR [edi-0x29842557],bh
  40fab8:	ja     0x40faa7
  40faba:	mov    ecx,0xa06f3c76
  40fabf:	push   ebp
  40fac0:	push   edi
  40fac1:	(bad)  
  40fac2:	mov    esi,fs
  40fac4:	icebp  
  40fac5:	stos   BYTE PTR es:[edi],al
  40fac6:	ficomp DWORD PTR [edx+0x28c144c]
  40facc:	loope  0x40fa58
  40face:	in     eax,0xb
  40fad0:	or     dh,BYTE PTR [esi+0x47]
  40fad3:	mov    ds:0xba7f6202,al
  40fad8:	sbb    esp,DWORD PTR [edi]
  40fada:	icebp  
  40fadb:	cmp    ebp,edi
  40fadd:	or     cl,BYTE PTR [eax]
  40fadf:	fcom   st(4)
  40fae1:	mov    eax,ds:0x8f1b2883
  40fae6:	es pop esi
  40fae8:	cmp    esi,DWORD PTR [ebx]
  40faea:	hlt    
  40faeb:	enter  0xa6f4,0x61
  40faef:	jl     0x40fb6e
  40faf1:	lahf   
  40faf2:	(bad)  
  40faf3:	sahf   
  40faf4:	ret    
  40faf5:	sahf   
  40faf6:	dec    edi
  40faf7:	mov    al,0x1a
  40faf9:	into   
  40fafa:	jl     0x40fb40
  40fafc:	pop    ebx
  40fafd:	inc    edi
  40fafe:	in     al,dx
  40faff:	sub    BYTE PTR [ecx],dh
  40fb01:	mov    edi,DWORD PTR [esi]
  40fb03:	dec    edx
  40fb04:	xor    BYTE PTR [edx-0x669a3403],ah
  40fb0a:	inc    esi
  40fb0b:	jecxz  0x40fb3e
  40fb0d:	imul   esp,edi,0x7b659be4
  40fb13:	imul   ebp,esi,0x461f0445
  40fb19:	lahf   
  40fb1a:	imul   esp,DWORD PTR [edx],0xfffffffa
  40fb1d:	lock test bl,ah
  40fb20:	mov    ch,0xab
  40fb22:	add    esp,DWORD PTR ds:0x63ee391a
  40fb28:	cli    
  40fb29:	stc    
  40fb2a:	and    al,0x8a
  40fb2c:	xor    DWORD PTR [edx-0x5b],edi
  40fb2f:	adc    esp,DWORD PTR [ebx-0x43]
  40fb32:	fld    DWORD PTR [esi]
  40fb34:	in     al,0x28
  40fb36:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40fb37:	jle    0x40fae5
  40fb39:	sbb    eax,0x229ffa0f
  40fb3e:	add    eax,esi
  40fb40:	loopne 0x40fad2
  40fb42:	mov    ecx,0x4a41a780
  40fb47:	jno    0x40fbb0
  40fb49:	mov    al,0xc6
  40fb4b:	push   ss
  40fb4c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40fb4d:	rdtsc  
  40fb4f:	in     eax,0xf5
  40fb51:	out    0x2d,al
  40fb53:	mov    edi,0xdac8f814
  40fb58:	(bad)  
  40fb59:	(bad)  [esi+0x5bf5094a]
  40fb5f:	push   ebp
  40fb60:	lfs    edx,FWORD PTR [edi+0x52]
  40fb64:	call   0xfce3:0xce40b19a
  40fb6b:	dec    edx
  40fb6c:	xchg   edx,eax
  40fb6d:	xchg   esp,eax
  40fb6e:	mov    ebp,0xf485a9be
  40fb73:	faddp  st(5),st
  40fb75:	xchg   esi,eax
  40fb76:	or     eax,0x4548aa12
  40fb7b:	test   eax,0xa2c37adc
  40fb80:	sub    eax,0xc9f568cc
  40fb85:	lock fcmovnbe st,st(6)
  40fb88:	sbb    bh,BYTE PTR [eax+0x2ac182b7]
  40fb8e:	ror    BYTE PTR [ecx],1
  40fb90:	adc    edx,ebx
  40fb92:	mov    ds:0xc430e8ad,eax
  40fb97:	xchg   esi,eax
  40fb98:	mov    cl,0xf
  40fb9a:	or     DWORD PTR [eax+0x73],0x7d
  40fb9e:	fiadd  DWORD PTR ds:0x46b1a1a9
  40fba4:	ins    DWORD PTR es:[edi],dx
  40fba5:	or     al,0x85
  40fba7:	mov    esp,0x676c44d4
  40fbac:	and    bl,BYTE PTR [ecx-0x28]
  40fbaf:	and    DWORD PTR [ebp-0x24],ebp
  40fbb2:	xor    al,0xbe
  40fbb4:	adc    DWORD PTR [eax+0x6bd64e49],edi
  40fbba:	arpl   WORD PTR [esi+edi*8-0x2d],si
  40fbbe:	mov    DWORD PTR [edx-0x1b],edx
  40fbc1:	popa   
  40fbc2:	retf   
  40fbc3:	outs   dx,DWORD PTR ds:[esi]
  40fbc4:	or     eax,DWORD PTR [edi+0x6]
  40fbc7:	nop
  40fbc8:	and    al,0x8e
  40fbca:	sbb    DWORD PTR cs:[edi-0x63b65f04],0x3a5cfd31
  40fbd5:	fnstenv [ecx]
  40fbd7:	clc    
  40fbd8:	test   BYTE PTR [eax-0x47f455f3],ah
  40fbde:	adc    al,0xf5
  40fbe0:	mov    bh,0x8
  40fbe2:	ins    DWORD PTR es:[edi],dx
  40fbe3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40fbe4:	inc    eax
  40fbe5:	pop    edx
  40fbe6:	jae    0x40fbc7
  40fbe8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40fbe9:	dec    ebp
  40fbea:	jp     0x40fb94
  40fbec:	into   
  40fbed:	faddp  st(0),st
  40fbef:	push   esi
  40fbf0:	ret    
  40fbf1:	and    al,dh
  40fbf3:	inc    esi
  40fbf4:	mov    es,WORD PTR [esi+eiz*8-0x1c40becd]
  40fbfb:	mov    BYTE PTR [edx-0x55],ch
  40fbfe:	or     esp,DWORD PTR [ecx+ecx*2]
  40fc01:	jg     0x40fc0b
  40fc03:	jecxz  0x40fba9
  40fc05:	loope  0x40fbf5
  40fc07:	push   ecx
  40fc08:	(bad)  
  40fc09:	xchg   BYTE PTR [edx],bl
  40fc0b:	hlt    
  40fc0c:	push   esp
  40fc0d:	out    dx,eax
  40fc0e:	(bad)  ds:0x201007c7
  40fc14:	bound  ebp,QWORD PTR ds:0xa92d9f0e
  40fc1a:	and    eax,0xa44ef773
  40fc1f:	and    DWORD PTR [edx],edx
  40fc21:	not    DWORD PTR [ebp+0x2756b141]
  40fc27:	push   ds
  40fc28:	mov    cl,0x1f
  40fc2a:	ss push eax
  40fc2c:	std    
  40fc2d:	push   ebx
  40fc2e:	pop    edx
  40fc2f:	out    0xcf,eax
  40fc31:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40fc32:	loope  0x40fc09
  40fc34:	in     eax,dx
  40fc35:	inc    edi
  40fc36:	mov    dl,0x41
  40fc38:	sbb    DWORD PTR [esi-0x8],esp
  40fc3b:	jecxz  0x40fc85
  40fc3d:	sub    DWORD PTR [eax],edi
  40fc3f:	pop    ds
  40fc40:	mov    cl,0xe5
  40fc42:	and    eax,0x6fae9360
  40fc47:	cmp    DWORD PTR [ecx+0xed35a43],esi
  40fc4d:	mov    ebx,0x8263165d
  40fc52:	jb     0x40fc11
  40fc54:	push   edx
  40fc55:	jl     0x40fc56
  40fc57:	arpl   WORD PTR [edx+0x195d26c8],bp
  40fc5d:	(bad)  
  40fc5e:	xor    al,0x9a
  40fc60:	retf   0x9628
  40fc63:	mov    DWORD PTR [edi+0x55],esp
  40fc66:	jae    0x40fc8a
  40fc68:	lods   eax,DWORD PTR ds:[esi]
  40fc69:	inc    edi
  40fc6a:	test   DWORD PTR [eax],ebp
  40fc6c:	adc    BYTE PTR [ebx+edx*1+0x1cf22aa0],0x3
  40fc74:	adc    DWORD PTR [edi-0x6ed47f38],edi
  40fc7a:	popf   
  40fc7b:	mov    al,0xc8
  40fc7d:	jp     0x40fcd4
  40fc7f:	cmc    
  40fc80:	mov    ebp,0x4448223a
  40fc85:	fcmovne st,st(5)
  40fc87:	mov    ecx,0xe5fe18b0
  40fc8c:	call   DWORD PTR [ecx+0x58fd63f0]
  40fc92:	(bad)  
  40fc93:	sbb    DWORD PTR [edi+0x59],edi
  40fc96:	xchg   edx,eax
  40fc97:	cs add al,0x3b
  40fc9a:	push   esi
  40fc9b:	gs stos DWORD PTR es:[edi],eax
  40fc9d:	pop    ebp
  40fc9e:	test   BYTE PTR fs:[ebp-0x1],al
  40fca2:	cld    
  40fca3:	ins    DWORD PTR es:[edi],dx
  40fca4:	xor    DWORD PTR [edi+ecx*8],edx
  40fca7:	sbb    al,0xa0
  40fca9:	jno    0x40fc77
  40fcab:	mov    al,ds:0xaa4bf589
  40fcb0:	push   ecx
  40fcb1:	and    al,0x95
  40fcb3:	test   eax,eax
  40fcb5:	push   ebx
  40fcb6:	xor    eax,DWORD PTR [ebp+0x41b05aa6]
  40fcbc:	push   ebx
  40fcbd:	mov    ah,0x48
  40fcbf:	jg     0x40fcff
  40fcc1:	inc    esi
  40fcc2:	jb     0x40fc64
  40fcc4:	js     0x40fd2b
  40fcc6:	push   ebx
  40fcc7:	in     eax,dx
  40fcc8:	adc    esi,ebx
  40fcca:	pop    edx
  40fccb:	outs   dx,DWORD PTR ds:[esi]
  40fccc:	js     0x40fcd1
  40fcce:	xor    ch,BYTE PTR [esi]
  40fcd0:	(bad)  
  40fcd2:	push   ds
  40fcd3:	out    0xc2,eax
  40fcd5:	mov    esp,0x1690665e
  40fcda:	das    
  40fcdb:	es xchg ebx,eax
  40fcdd:	sbb    BYTE PTR [ebp-0x1b],bl
  40fce0:	out    dx,al
  40fce1:	adc    DWORD PTR [edi+0x64e9c130],0xae76310f
  40fceb:	pop    edi
  40fcec:	mov    dh,0x67
  40fcee:	xor    DWORD PTR [ebx],0x72
  40fcf1:	sbb    eax,0xacc28afa
  40fcf6:	sub    BYTE PTR [ebp+0x52],bh
  40fcf9:	and    ebx,DWORD PTR [eax]
  40fcfb:	mov    ecx,0x63686c96
  40fd00:	inc    ebp
  40fd01:	dec    edi
  40fd02:	bound  ebp,QWORD PTR [ecx-0x3]
  40fd05:	xchg   esp,esi
  40fd07:	pop    ecx
  40fd08:	push   ebp
  40fd0a:	imul   edx,DWORD PTR ds:0xae315cec,0xf57621c9
  40fd14:	and    al,BYTE PTR [edx+0x49]
  40fd17:	xchg   ecx,eax
  40fd18:	sbb    dl,BYTE PTR ds:[edx-0xdde686e]
  40fd1f:	push   edi
  40fd20:	nop
  40fd21:	push   ebx
  40fd22:	pop    esi
  40fd23:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40fd24:	pop    es
  40fd25:	push   ecx
  40fd26:	pop    ebp
  40fd27:	in     al,dx
  40fd28:	pop    es
  40fd29:	and    esi,edx
  40fd2b:	les    esi,FWORD PTR [esi]
  40fd2d:	icebp  
  40fd2e:	scas   eax,DWORD PTR es:[edi]
  40fd2f:	addr16 dec esp
  40fd31:	xor    DWORD PTR [eax+0x27ddc805],esi
  40fd37:	pop    edx
  40fd38:	xor    al,0x2e
  40fd3a:	stos   BYTE PTR es:[edi],al
  40fd3b:	out    dx,al
  40fd3c:	retf   0xa8be
  40fd3f:	push   ecx
  40fd40:	(bad)  
  40fd41:	sti    
  40fd42:	push   ds
  40fd43:	pop    ebp
  40fd44:	jbe    0x40fd0b
  40fd46:	jno    0x40fd09
  40fd48:	jns    0x40fd22
  40fd4a:	fst    st(4)
  40fd4c:	or     al,0x97
  40fd4e:	outs   dx,BYTE PTR ds:[esi]
  40fd4f:	jns    0x40fd2f
  40fd51:	xchg   esi,eax
  40fd52:	daa    
  40fd53:	mov    esi,0x8f6e1354
  40fd58:	xchg   esi,eax
  40fd59:	call   0x6874:0xf0b63ba6
  40fd60:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40fd61:	inc    edi
  40fd62:	dec    esi
  40fd63:	pusha  
  40fd64:	fst    QWORD PTR [ebx-0x4c]
  40fd67:	out    dx,eax
  40fd68:	test   al,bh
  40fd6a:	mov    eax,ds:0xfdece3b5
  40fd6f:	mov    ebx,0x1f289c85
  40fd74:	mov    ds:0xcc9b2f54,eax
  40fd79:	in     al,0x12
  40fd7b:	cmc    
  40fd7c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40fd7d:	pop    ebp
  40fd7e:	adc    cl,ah
  40fd80:	ret    
  40fd81:	gs push es
  40fd83:	cdq    
  40fd84:	inc    ebx
  40fd85:	fadd   st(2),st
  40fd87:	ficomp WORD PTR [edx]
  40fd89:	sbb    BYTE PTR [esi+0x4fe55f72],ah
  40fd8f:	clc    
  40fd90:	and    BYTE PTR [ecx+0x62],bl
  40fd93:	pop    eax
  40fd94:	and    dl,BYTE PTR [edi+0x15]
  40fd97:	adc    eax,0x80b12c9e
  40fd9c:	stos   BYTE PTR es:[edi],al
  40fd9d:	xor    BYTE PTR [ebx],al
  40fd9f:	push   ss
  40fda0:	daa    
  40fda1:	push   edi
  40fda2:	and    al,0x9f
  40fda4:	fld    QWORD PTR [edx-0x4f35a068]
  40fdaa:	hlt    
  40fdab:	aaa    
  40fdac:	pop    es
  40fdad:	cmc    
  40fdae:	sub    DWORD PTR [eax+eiz*1+0x709d30a1],ebx
  40fdb5:	adc    al,0x9d
  40fdb7:	xchg   ebx,eax
  40fdb8:	into   
  40fdb9:	les    ebx,FWORD PTR [ebp-0x27607c50]
  40fdbf:	sbb    ch,dh
  40fdc1:	leave  
  40fdc2:	dec    esp
  40fdc3:	jno    0x40fe38
  40fdc5:	xor    DWORD PTR [ebx+0x5e],ebx
  40fdc8:	and    bl,bl
  40fdca:	not    DWORD PTR [eax]
  40fdcc:	cmp    ecx,ecx
  40fdce:	int    0x1c
  40fdd0:	push   0xd2a8bb54
  40fdd5:	mov    cl,0xc6
  40fdd7:	mov    ebp,0x1be501ae
  40fddc:	call   0x353e:0x4bed1dc3
  40fde3:	mov    eax,ds:0xcc68dea
  40fde8:	mov    esp,0xdaaa5d09
  40fded:	mov    cl,bl
  40fdef:	xchg   ecx,eax
  40fdf0:	sbb    al,0xd9
  40fdf2:	cmc    
  40fdf3:	adc    esp,DWORD PTR [eax+eax*2]
  40fdf6:	(bad)  
  40fdf8:	(bad)  
  40fdf9:	inc    ebp
  40fdfa:	clc    
  40fdfb:	add    eax,0x84c1a417
  40fe00:	mov    edx,0x11413782
  40fe05:	mov    eax,ds:0xe3b571dc
  40fe0a:	lea    eax,[ecx]
  40fe0c:	fs (bad) 
  40fe0f:	aas    
  40fe10:	mov    eax,ds:0xadbc8812
  40fe15:	sub    eax,DWORD PTR [edi-0x17126832]
  40fe1b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40fe1c:	mov    ecx,0xe6ba4028
  40fe21:	add    DWORD PTR [ebx],ecx
  40fe23:	mov    ecx,0x6cb1ed3
  40fe28:	mov    bl,0xbb
  40fe2a:	push   ds
  40fe2b:	ins    DWORD PTR es:[edi],dx
  40fe2c:	jno    0x40fe66
  40fe2e:	pop    ecx
  40fe2f:	les    ebx,FWORD PTR [edi+0x71d1c1e3]
  40fe35:	lods   eax,DWORD PTR ds:[esi]
  40fe36:	loope  0x40fdc3
  40fe38:	pop    ebx
  40fe39:	int    0xb8
  40fe3b:	ds cmp eax,0x40cffa35
  40fe41:	xchg   DWORD PTR [ecx-0x16],edi
  40fe44:	push   ds
  40fe45:	jl     0x40fe7a
  40fe47:	ret    0xebec
  40fe4a:	pop    ebx
  40fe4b:	dec    esi
  40fe4c:	inc    edx
  40fe4d:	ins    BYTE PTR es:[edi],dx
  40fe4e:	stos   BYTE PTR es:[edi],al
  40fe4f:	add    esi,DWORD PTR [esi]
  40fe51:	mov    al,ds:0x559b8a22
  40fe56:	push   es
  40fe57:	push   eax
  40fe58:	pop    eax
  40fe59:	mov    eax,ds:0x23ad645b
  40fe5e:	stc    
  40fe5f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40fe60:	je     0x40fe7b
  40fe62:	cdq    
  40fe63:	xchg   esi,eax
  40fe64:	les    esi,FWORD PTR [ebx-0x40]
  40fe67:	sbb    bl,BYTE PTR [esi-0x38]
  40fe6a:	inc    edi
  40fe6b:	dec    esi
  40fe6c:	(bad)  
  40fe6e:	retf   0x397b
  40fe71:	cmp    BYTE PTR [edi+eiz*2],ch
  40fe74:	iret   
  40fe75:	inc    ebx
  40fe76:	outs   dx,DWORD PTR ds:[esi]
  40fe77:	sub    DWORD PTR [eax],0xffffff8b
  40fe7a:	leave  
  40fe7b:	jb     0x40fe8f
  40fe7d:	iret   
  40fe7e:	pop    eax
  40fe7f:	add    al,0x1a
  40fe81:	dec    edx
  40fe82:	jo     0x40fec1
  40fe84:	sub    DWORD PTR [edx+0x23],ebp
  40fe87:	std    
  40fe88:	mov    edx,0xa5411e0a
  40fe8d:	jecxz  0x40ff0d
  40fe8f:	loop   0x40fe72
  40fe91:	lock call 0x72ad:0x8c5f1851
  40fe99:	outs   dx,BYTE PTR ds:[esi]
  40fe9a:	aaa    
  40fe9b:	mov    ds:0x4a366ea0,al
  40fea0:	xchg   esi,eax
  40fea1:	push   esp
  40fea2:	mov    ds:0x8e4f4689,al
  40fea7:	cwde   
  40fea8:	mov    fs,ecx
  40feaa:	cmp    al,0x61
  40feac:	and    eax,0x9a638ed6
  40feb1:	sbb    BYTE PTR [esp+eax*1+0x59fbabad],dh
  40feb8:	add    eax,0xbf6e6b34
  40febd:	jns    0x40fec5
  40febf:	jno    0x40fee2
  40fec1:	test   BYTE PTR [edx-0x7e],dl
  40fec4:	loopne 0x40fe5d
  40fec6:	mov    ebp,DWORD PTR [esi-0x38bbb482]
  40fecc:	or     al,0xf6
  40fece:	es loope 0x40ff4d
  40fed1:	or     eax,0xc658f1e1
  40fed6:	leave  
  40fed7:	fnstenv [esi+eiz*1]
  40feda:	aam    0x4d
  40fedc:	inc    ebx
  40fedd:	xchg   edx,eax
  40fede:	cdq    
  40fedf:	cmp    esi,ecx
  40fee1:	add    eax,DWORD PTR [ebp+eax*4+0x48f79e9d]
  40fee8:	inc    edx
  40fee9:	dec    ecx
  40feea:	je     0x40ff36
  40feec:	sar    DWORD PTR [edx-0x40],1
  40feef:	jo     0x40ff3d
  40fef1:	mov    esp,0xc07f4fe9
  40fef6:	and    esi,DWORD PTR [edx+ebp*4+0x74]
  40fefa:	and    ah,dh
  40fefc:	cmp    al,0xfa
  40fefe:	mov    esi,0x38a8375
  40ff03:	xchg   ecx,eax
  40ff04:	lds    ecx,FWORD PTR [ebp+0xf]
  40ff07:	clc    
  40ff08:	or     BYTE PTR [ebp+0x50d81387],cl
  40ff0e:	mov    BYTE PTR ds:0x95850f92,bl
  40ff14:	sbb    DWORD PTR [eax],eax
  40ff16:	add    BYTE PTR [edi],cl
  40ff18:	mov    dh,0x5
  40ff1a:	xor    BYTE PTR [edi],dh
  40ff1c:	inc    edx
  40ff1d:	add    BYTE PTR [ecx],ah
  40ff1f:	add    eax,0x423704
  40ff24:	mov    eax,DWORD PTR [ebp-0x10]
  40ff27:	add    eax,DWORD PTR [ebp-0x24]
  40ff2a:	mov    DWORD PTR ds:0x423680,0x14
  40ff34:	cmp    DWORD PTR ds:0x423680,0x0
  40ff3b:	je     0x40ff8f
  40ff41:	cmp    DWORD PTR ds:0x423680,0x6
  40ff48:	jne    0x40ff63
  40ff4e:	push   0x6e62
  40ff53:	push   0x4216e1
  40ff58:	push   0x7e4a
  40ff5d:	call   DWORD PTR ds:0x41f158
  40ff63:	cmp    DWORD PTR ds:0x423680,0x7
  40ff6a:	jne    0x40ff7d
  40ff70:	mov    edx,DWORD PTR ds:0x423680
  40ff76:	dec    edx
  40ff77:	mov    DWORD PTR ds:0x423680,edx
  40ff7d:	mov    edx,DWORD PTR ds:0x423680
  40ff83:	dec    edx
  40ff84:	mov    DWORD PTR ds:0x423680,edx
  40ff8a:	jmp    0x40ff34
  40ff8f:	mov    ecx,DWORD PTR [ebp-0x14]
  40ff92:	adc    edx,0x2e1e
  40ff98:	mov    edx,DWORD PTR [ebp-0x8]
  40ff9b:	mov    al,BYTE PTR [eax]
  40ff9d:	xor    DWORD PTR ds:0x4214e4,0x4214f4
  40ffa7:	xor    ecx,esi
  40ffa9:	add    DWORD PTR ds:0x4236c4,0x4214e8
  40ffb3:	xor    edx,esi
  40ffb5:	or     DWORD PTR ds:0x423730,0x42367c
  40ffbf:	add    ecx,edi
  40ffc1:	add    edx,edi
  40ffc3:	mov    DWORD PTR ds:0x423744,0x355c
  40ffcd:	mov    BYTE PTR [ebp-0x1],al
  40ffd0:	cmp    ecx,edx
  40ffd2:	mov    DWORD PTR ds:0x4236c4,0x2953
  40ffdc:	jae    0x410144
  40ffe2:	and    DWORD PTR ds:0x42367c,0x0
  40ffec:	mov    edx,DWORD PTR ds:0x42367c
  40fff2:	inc    edx
  40fff3:	mov    DWORD PTR ds:0x42367c,edx
  40fff9:	cmp    DWORD PTR ds:0x42367c,0xa
  410000:	jne    0x410020
  410006:	push   0x4236c0
  41000b:	push   0x59f3
  410010:	push   0x421596
  410015:	push   0x4215a9
  41001a:	call   DWORD PTR ds:0x41f3f0
  410020:	cmp    DWORD PTR ds:0x42367c,0x9
  410027:	jne    0x41003a
  41002d:	mov    edx,DWORD PTR ds:0x42367c
  410033:	inc    edx
  410034:	mov    DWORD PTR ds:0x42367c,edx
  41003a:	cmp    DWORD PTR ds:0x42367c,0x17
  410041:	jb     0x40ffec
  410047:	lea    eax,[ecx-0x300b]
  41004d:	mov    edx,DWORD PTR ds:0x421528
  410053:	mov    edx,DWORD PTR [edx]
  410055:	and    DWORD PTR ds:0x4236b0,edx
  41005b:	mov    DWORD PTR [ebp-0x1c],eax
  41005e:	mov    DWORD PTR ds:0x4236bc,0x1d
  410068:	cmp    DWORD PTR ds:0x4236bc,0x0
  41006f:	je     0x4100a8
  410075:	cmp    DWORD PTR ds:0x4236bc,0x21
  41007c:	jne    0x410090
  410082:	push   0x2f44
  410087:	push   DWORD PTR [ebp-0x28]
  41008a:	call   DWORD PTR ds:0x41f3f4
  410090:	mov    edx,DWORD PTR ds:0x4236bc
  410096:	dec    edx
  410097:	mov    DWORD PTR ds:0x4236bc,edx
  41009d:	jmp    0x410068
  4100a2:	sbb    DWORD PTR ds:0x4214d8,ecx
  4100a8:	mov    edx,DWORD PTR [ebp-0x1c]
  4100ab:	and    DWORD PTR ds:0x423740,0x738a
  4100b5:	xor    edx,esi
  4100b7:	add    edx,0x7837233d
  4100bd:	mov    DWORD PTR ds:0x4236b8,0x1de4
  4100c7:	lea    eax,[ebp+ecx*4-0x4c]
  4100cb:	mov    DWORD PTR [eax],edx
  4100cd:	mov    edx,DWORD PTR [eax]
  4100cf:	mov    DWORD PTR ds:0x4236a8,0x68af
  4100d9:	cmp    edx,ebx
  4100db:	jbe    0x410100
  4100e1:	adc    DWORD PTR ds:0x423704,0x4214dc
  4100eb:	add    DWORD PTR [eax],0x3870753
  4100f1:	mov    DWORD PTR ds:0x4214d4,0x1a90
  4100fb:	jmp    0x410106
  410100:	add    DWORD PTR [eax],0xfacc38ad
  410106:	mov    eax,DWORD PTR [ebp-0x8]
  410109:	xor    eax,esi
  41010b:	inc    ecx
  41010c:	and    DWORD PTR ds:0x423678,0x1707
  410116:	inc    DWORD PTR [ebp-0x1c]
  410119:	add    DWORD PTR ds:0x42373c,0x4236c4
  410123:	add    eax,edi
  410125:	mov    DWORD PTR ds:0x4236b4,0x6c53
  41012f:	cmp    ecx,eax
  410131:	jb     0x41005e
  410137:	or     DWORD PTR ds:0x4236ac,0x10be
  410141:	mov    al,BYTE PTR [ebp-0x1]
  410144:	mov    ecx,DWORD PTR ds:0x4214d8
  41014a:	or     DWORD PTR ds:0x423730,ecx
  410150:	mov    ecx,DWORD PTR [ebp-0x2c]
  410153:	test   ecx,ecx
  410155:	mov    DWORD PTR ds:0x42367c,ecx
  41015b:	mov    ecx,DWORD PTR [ebp-0x14]
  41015e:	mov    DWORD PTR ds:0x4214ec,edi
  410164:	mov    edx,DWORD PTR [ebp-0x8]
  410167:	jne    0x4102e9
  41016d:	sbb    DWORD PTR ds:0x4236f4,0x4214f4
  410177:	xor    ecx,esi
  410179:	sub    DWORD PTR ds:0x4236c0,0x4236b4
  410183:	xor    edx,esi
  410185:	add    ecx,edi
  410187:	add    edx,edi
  410189:	mov    DWORD PTR ds:0x42373c,0xcf9
  410193:	cmp    ecx,edx
  410195:	jae    0x4102d6
  41019b:	add    DWORD PTR ds:0x423670,0x4d8f
  4101a5:	lea    eax,[ecx-0x300b]
  4101ab:	mov    DWORD PTR [ebp-0x1c],eax
  4101ae:	and    DWORD PTR ds:0x423678,0x0
  4101b8:	mov    edx,DWORD PTR ds:0x423678
  4101be:	inc    edx
  4101bf:	mov    DWORD PTR ds:0x423678,edx
  4101c5:	cmp    DWORD PTR ds:0x423678,0x5
  4101cc:	jne    0x4101ef
  4101d2:	push   0x21bc
  4101d7:	push   DWORD PTR [ebp-0x18]
  4101da:	push   0x41f2
  4101df:	push   0x60f9
  4101e4:	push   0x1339
  4101e9:	call   DWORD PTR ds:0x41f034
  4101ef:	cmp    DWORD PTR ds:0x423678,0x4
  4101f6:	jne    0x410209
  4101fc:	mov    edx,DWORD PTR ds:0x423678
  410202:	inc    edx
  410203:	mov    DWORD PTR ds:0x423678,edx
  410209:	cmp    DWORD PTR ds:0x423678,0x14
  410210:	jb     0x4101b8
  410216:	add    edx,0x6e6a
  41021c:	mov    edx,DWORD PTR [ebp-0x1c]
  41021f:	add    DWORD PTR ds:0x42372c,0x42367c
  410229:	xor    edx,esi
  41022b:	adc    DWORD PTR ds:0x4214dc,0x42367c
  410235:	add    edx,0x7837233d
  41023b:	mov    DWORD PTR ds:0x4214e4,0x3e20
  410245:	lea    eax,[ebp+ecx*4-0x4c]
  410249:	mov    DWORD PTR ds:0x4236bc,0x1ff0
  410253:	mov    DWORD PTR [eax],edx
  410255:	mov    edx,DWORD PTR [eax]
  410257:	cmp    edx,ebx
  410259:	mov    DWORD PTR ds:0x4236c0,0x1d57
  410263:	jbe    0x410288
  410269:	sub    DWORD PTR ds:0x4236c0,0x423668
  410273:	add    DWORD PTR [eax],0x3870753
  410279:	mov    DWORD PTR ds:0x4214ec,0x2b03
  410283:	jmp    0x41028e
  410288:	add    DWORD PTR [eax],0xfacc38ad
  41028e:	mov    eax,DWORD PTR [ebp-0x8]
  410291:	xor    eax,esi
  410293:	and    DWORD PTR ds:0x4236f8,0x4214e0
  41029d:	inc    ecx
  41029e:	sbb    DWORD PTR ds:0x4236f8,0x4214e8
  4102a8:	inc    DWORD PTR [ebp-0x1c]
  4102ab:	or     DWORD PTR ds:0x42367c,0x4236e8
  4102b5:	add    eax,edi
  4102b7:	mov    DWORD PTR ds:0x423734,0x75e1
  4102c1:	cmp    ecx,eax
  4102c3:	jb     0x4101ae
  4102c9:	or     DWORD PTR ds:0x4236f0,0x4214dc
  4102d3:	mov    al,BYTE PTR [ebp-0x1]
  4102d6:	xor    DWORD PTR ds:0x4214d4,0x373d
  4102e0:	xor    al,0x3a
  4102e2:	add    al,0x3a
  4102e4:	jmp    0x41189a
  4102e9:	adc    DWORD PTR ds:0x423744,0x187b
  4102f3:	xor    ecx,esi
  4102f5:	xor    edx,esi
  4102f7:	add    ecx,edi
  4102f9:	or     DWORD PTR ds:0x4236ac,0x1651
  410303:	add    edx,edi
  410305:	mov    DWORD PTR ds:0x4214d8,0x13e0
  41030f:	cmp    ecx,edx
  410311:	jae    0x4112ff
  410317:	and    DWORD PTR ds:0x423680,0x0
  410321:	jmp    0x410333
  410326:	mov    edx,DWORD PTR ds:0x423680
  41032c:	inc    edx
  41032d:	mov    DWORD PTR ds:0x423680,edx
  410333:	cmp    DWORD PTR ds:0x423680,0x19
  41033a:	jae    0x410382
  410340:	cmp    DWORD PTR ds:0x423680,0xd
  410347:	jne    0x410363
  41034d:	push   DWORD PTR [ebp-0x20]
  410350:	push   0x42161a
  410355:	push   0x421548
  41035a:	push   DWORD PTR [ebp-0x24]
  41035d:	call   DWORD PTR ds:0x41f15c
  410363:	cmp    DWORD PTR ds:0x423680,0xc
  41036a:	jne    0x41037d
  410370:	mov    edx,DWORD PTR ds:0x423680
  410376:	inc    edx
  410377:	mov    DWORD PTR ds:0x423680,edx
  41037d:	jmp    0x410326
  410382:	lea    eax,[ecx-0x300b]
  410388:	mov    DWORD PTR [ebp-0x1c],eax
  41038b:	sbb    DWORD PTR ds:0x4214dc,ebx
  410391:	mov    edx,DWORD PTR [ebp-0x1c]
  410394:	and    DWORD PTR ds:0x4236f8,0x4236a8
  41039e:	jmp    0x41088d
  4103a3:	ss dec ebx
  4103a5:	pop    ss
  4103a6:	enter  0xdc7f,0xff
  4103aa:	call   DWORD PTR [esi-0x55]
  4103ad:	mov    ax,0xc45f
  4103b1:	lods   al,BYTE PTR ds:[esi]
  4103b2:	out    dx,eax
  4103b3:	jp     0x410399
  4103b5:	add    BYTE PTR [eax],al
  4103b7:	rol    BYTE PTR [eax+eax*1],cl
  4103ba:	add    ah,ch
  4103bc:	dec    ebx
  4103bd:	inc    esi
  4103be:	scas   eax,DWORD PTR es:[edi]
  4103bf:	test   DWORD PTR [eax+0x79ad223c],ebx
  4103c5:	pop    ebx
  4103c6:	je     0x41042a
  4103c8:	inc    eax
  4103c9:	inc    edx
  4103ca:	inc    eax
  4103cb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4103cc:	mov    ebp,0x60ce655c
  4103d1:	mov    BYTE PTR [eax+0x709cdc7e],bh
  4103d7:	lock adc dh,BYTE PTR [ecx+0x21]
  4103db:	mov    dh,0x3e
  4103dd:	(bad)  
  4103de:	mov    DWORD PTR [esi-0x4c],edi
  4103e1:	add    bl,BYTE PTR [edi-0x1a]
  4103e4:	push   edx
  4103e5:	addr16 jg 0x410451
  4103e8:	aam    0xa4
  4103ea:	lahf   
  4103eb:	jg     0x4103c8
  4103ed:	nop
  4103ee:	retf   
  4103ef:	fmul   DWORD PTR [ebx]
  4103f1:	test   al,0x3f
  4103f3:	push   eax
  4103f4:	in     al,dx
  4103f5:	mov    al,ds:0x3436e9c0
  4103fa:	in     al,dx
  4103fb:	push   ebp
  4103fc:	test   al,0xfc
  4103fe:	dec    ecx
  4103ff:	shl    DWORD PTR [edx+0x4],1
  410402:	leave  
  410403:	es push edi
  410405:	rcr    ebp,0xdf
  410408:	enter  0x7e74,0x41
  41040c:	pop    ebx
  41040d:	adc    ebp,DWORD PTR [esi+edx*4-0x75]
  410411:	mov    al,ds:0x461206d9
  410416:	je     0x41043b
  410418:	std    
  410419:	popf   
  41041a:	les    edi,FWORD PTR [ebp+0x1c]
  41041d:	jb     0x41042a
  41041f:	das    
  410420:	mov    ch,0x4c
  410422:	pop    ebx
  410423:	daa    
  410424:	lods   eax,DWORD PTR ds:[esi]
  410425:	cli    
  410426:	retf   
  410427:	push   ds
  410428:	icebp  
  410429:	xchg   ebx,eax
  41042a:	jo     0x41041f
  41042c:	adc    ebx,ebx
  41042e:	lods   eax,DWORD PTR ds:[esi]
  41042f:	push   cs
  410430:	pop    esi
  410431:	xchg   edx,eax
  410432:	adc    al,0xad
  410434:	popa   
  410435:	push   0x1101a27b
  41043a:	in     al,dx
  41043b:	fnstsw WORD PTR [eax-0x3af3035a]
  410441:	mov    ebx,0xbb2b2ba1
  410446:	xchg   BYTE PTR ds:0x3abaf279,dh
  41044c:	and    BYTE PTR [edx],0xd8
  41044f:	xor    BYTE PTR [ebp-0x48282fc5],dl
  410455:	cwde   
  410456:	ret    0xbc6e
  410459:	pop    ebp
  41045a:	add    esi,DWORD PTR [ecx-0x68db1cca]
  410460:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410461:	xor    DWORD PTR [ecx-0x1f],esp
  410464:	dec    esp
  410465:	retf   
  410466:	push   es
  410467:	jno    0x410448
  410469:	adc    al,0xeb
  41046b:	aas    
  41046c:	or     DWORD PTR [ebx-0x67],esp
  41046f:	mov    ebx,0xa3494d70
  410474:	outs   dx,DWORD PTR ds:[esi]
  410475:	enter  0x4c97,0x2
  410479:	call   0x5254:0x52660322
  410480:	pop    ebp
  410481:	pushf  
  410482:	sub    BYTE PTR [eax+0x492b6b76],al
  410488:	mov    ecx,0x4f524802
  41048d:	pop    ecx
  41048e:	call   0xc1f6:0x8fc691bc
  410495:	test   eax,0x70b10c94
  41049a:	imul   edi,DWORD PTR [edx],0x4447efc3
  4104a0:	aad    0xca
  4104a2:	addr16 adc al,0xb3
  4104a5:	mov    ecx,0x6ce06361
  4104aa:	sub    esp,DWORD PTR [esi+0x1f4b2b77]
  4104b0:	mov    WORD PTR [edi-0x70],?
  4104b3:	xchg   edi,eax
  4104b4:	and    esp,ebp
  4104b6:	jbe    0x41048a
  4104b8:	xor    eax,0xb9185232
  4104bd:	arpl   WORD PTR [eax],bx
  4104bf:	inc    esi
  4104c0:	xchg   ebp,eax
  4104c1:	(bad)  
  4104c2:	mov    esp,0xdd1e295f
  4104c7:	sub    al,0x22
  4104c9:	mov    eax,ds:0xbf0807cb
  4104ce:	mov    bh,0xaa
  4104d0:	shl    BYTE PTR [eax-0x53641173],1
  4104d6:	out    0x9a,eax
  4104d8:	aaa    
  4104d9:	iret   
  4104da:	or     ebx,DWORD PTR [esi]
  4104dc:	push   ebp
  4104dd:	mov    al,0x30
  4104df:	pop    esi
  4104e0:	sar    eax,0x83
  4104e3:	mov    ah,0xfb
  4104e5:	add    dl,BYTE PTR [edi+0x2c]
  4104e8:	push   0x39e5199e
  4104ed:	xchg   BYTE PTR [eax+0x4c],cl
  4104f0:	test   DWORD PTR [edi],esi
  4104f2:	retf   0xb432
  4104f5:	cmp    eax,0x9fd4db68
  4104fa:	popf   
  4104fb:	loope  0x4104bb
  4104fd:	cmp    dl,BYTE PTR [edx-0x4826a6c5]
  410503:	fistp  QWORD PTR [eax-0x56]
  410506:	pusha  
  410507:	xor    DWORD PTR [esi-0x61876149],edi
  41050d:	jge    0x4104fe
  41050f:	adc    eax,0x5211f12
  410514:	sub    BYTE PTR [ebx-0x4e358f58],0x2f
  41051b:	dec    edx
  41051c:	cmp    edx,DWORD PTR [ecx]
  41051e:	test   al,0xf7
  410520:	outs   dx,BYTE PTR ds:[esi]
  410521:	stos   BYTE PTR es:[edi],al
  410522:	jecxz  0x410538
  410524:	out    dx,eax
  410525:	(bad)  [edx]
  410527:	or     DWORD PTR [edx+0x7d],ebx
  41052a:	clc    
  41052b:	mov    ah,0x1c
  41052d:	push   cs
  41052e:	ins    BYTE PTR es:[edi],dx
  41052f:	cs aam 0x67
  410532:	xor    DWORD PTR [esi-0x35],ecx
  410535:	test   dl,dl
  410537:	or     BYTE PTR ds:0x1848186e,al
  41053d:	leave  
  41053e:	arpl   WORD PTR [ebx-0x7dd4b2eb],cx
  410544:	xchg   ecx,eax
  410545:	or     edi,DWORD PTR [eax+ebx*2]
  410548:	push   eax
  410549:	xor    al,0x6a
  41054b:	push   edx
  41054c:	cdq    
  41054d:	ficomp WORD PTR [ebp+0x8d71f68]
  410553:	cmp    DWORD PTR [ebx+0x7cc90e39],ebx
  410559:	ret    0xd27e
  41055c:	rcl    al,cl
  41055e:	adc    al,0x8e
  410560:	push   ds
  410561:	adc    al,0x17
  410563:	in     eax,dx
  410564:	clc    
  410565:	out    0x82,al
  410567:	call   FWORD PTR [eax-0x7c24d1d2]
  41056d:	loope  0x410567
  41056f:	fwait
  410570:	xor    al,BYTE PTR [esi-0x463c99b0]
  410576:	mov    DWORD PTR [edx-0x31],ecx
  410579:	pushf  
  41057a:	pusha  
  41057b:	jmp    0x41057a
  41057d:	cmp    dl,BYTE PTR [esi]
  41057f:	aam    0x88
  410581:	and    al,0x56
  410583:	test   eax,0xfd11332f
  410588:	or     BYTE PTR [esi],bl
  41058a:	sub    dl,BYTE PTR [edi+0x2]
  41058d:	xchg   ebx,eax
  41058e:	scas   al,BYTE PTR es:[edi]
  41058f:	mov    edx,0xb2fabae9
  410594:	xor    dl,BYTE PTR [ebp-0xa]
  410597:	mov    esp,0x32fb8992
  41059c:	mov    edx,0xdc977f56
  4105a1:	mov    bh,0x9f
  4105a3:	mov    esi,0xb3e7bf6b
  4105a8:	out    0xf3,eax
  4105aa:	imul   ebx,DWORD PTR [eax],0xfffffff1
  4105ad:	jnp    0x4105a0
  4105af:	mov    esi,0xb322ea3d
  4105b4:	mov    DWORD PTR ds:0xca8fa5fe,edi
  4105ba:	inc    eax
  4105bb:	add    esp,0xdcacffa2
  4105c1:	adc    al,0xf7
  4105c3:	(bad)  
  4105c4:	sub    al,0xb6
  4105c6:	setl   BYTE PTR [edx]
  4105c9:	ret    0x1945
  4105cc:	test   al,0xde
  4105ce:	outs   dx,DWORD PTR ds:[esi]
  4105cf:	jnp    0x410613
  4105d1:	pop    esi
  4105d2:	popa   
  4105d3:	mov    al,ds:0x7fe6f737
  4105d8:	ret    0x1b1
  4105db:	shl    BYTE PTR [esi],cl
  4105dd:	xchg   esi,eax
  4105de:	dec    ebx
  4105df:	xor    eax,0x5a5d545c
  4105e4:	pop    ecx
  4105e5:	sub    ch,BYTE PTR cs:[eax+0x45]
  4105e9:	inc    esi
  4105ea:	in     eax,0x7b
  4105ec:	jns    0x410647
  4105ee:	pop    ds
  4105ef:	ins    BYTE PTR es:[edi],dx
  4105f0:	loop   0x41059d
  4105f2:	(bad)  
  4105f3:	in     eax,dx
  4105f4:	dec    ebp
  4105f5:	sub    al,0x76
  4105f7:	push   edx
  4105f8:	adc    DWORD PTR [edx],ebx
  4105fa:	cmp    ecx,esi
  4105fc:	rcl    DWORD PTR [ebp+edx*8-0x14],0x56
  410601:	sub    al,0xa1
  410603:	mov    eax,0x4508e97e
  410608:	and    eax,0xa012bc06
  41060d:	mov    bl,0x20
  41060f:	pop    ds
  410610:	sar    BYTE PTR [edx+0x1aef7421],0x35
  410617:	(bad)  
  410619:	or     BYTE PTR [ecx+edx*8-0xe],ah
  41061d:	jge    0x410623
  41061f:	sbb    BYTE PTR [edi-0x5f],0x66
  410623:	les    edi,FWORD PTR [edi+0x56]
  410626:	out    dx,eax
  410627:	mov    al,0x4b
  410629:	mov    ds:0xfd80a6da,eax
  41062e:	mov    edi,0xd141266
  410633:	push   0x2a833156
  410638:	addr16 in al,0xc2
  41063b:	mov    dl,0x54
  41063d:	pop    esi
  41063e:	and    al,0xac
  410640:	sbb    al,BYTE PTR [ebx]
  410642:	cld    
  410643:	cmp    BYTE PTR [ecx+0x49],al
  410646:	rcr    DWORD PTR [edx-0x280a5c60],1
  41064c:	out    0x84,eax
  41064e:	mov    ecx,0xb2d9adf9
  410653:	mov    WORD PTR [edi],ss
  410655:	jge    0x4106d4
  410657:	(bad)  
  410658:	fld    DWORD PTR [esi-0x7a3ebb5f]
  41065e:	out    dx,al
  41065f:	dec    ecx
  410660:	(bad)  
  410661:	mov    eax,ds:0x282aaeca
  410666:	lock cmp eax,0x7b9bcf6f
  41066c:	test   al,0x74
  41066f:	xlat   BYTE PTR ds:[ebx]
  410670:	xchg   ebp,eax
  410671:	dec    ebp
  410672:	mov    ch,0x49
  410674:	xchg   ebx,eax
  410675:	popf   
  410676:	sbb    BYTE PTR [edi+0x37ad5c4e],bh
  41067c:	and    BYTE PTR [ebp+ebx*4-0x6ea11f27],bh
  410683:	cmc    
  410684:	add    bl,BYTE PTR [edx-0x539fa26f]
  41068a:	mov    bl,0xa9
  41068c:	(bad)  
  41068d:	ret    0x3fd9
  410690:	pop    ds
  410691:	stos   DWORD PTR es:[edi],eax
  410692:	outs   dx,DWORD PTR ds:[esi]
  410693:	dec    esp
  410694:	sub    al,0x10
  410696:	fist   WORD PTR [edi-0x6ba70913]
  41069c:	rcl    DWORD PTR [ecx+0x1f8fb609],1
  4106a2:	jl     0x4106f3
  4106a4:	push   esp
  4106a5:	jmp    0x410658
  4106a7:	std    
  4106a8:	and    al,0xaf
  4106aa:	sbb    DWORD PTR [ecx],eax
  4106ac:	sbb    edx,ecx
  4106ae:	retf   
  4106af:	jns    0x410711
  4106b1:	das    
  4106b2:	and    edi,DWORD PTR [ecx*8+0x225ed3b]
  4106b9:	and    edi,DWORD PTR ds:0x9db79ef3
  4106bf:	mov    WORD PTR [edx-0x510d3943],ds
  4106c5:	mov    eax,ds:0x59b8d229
  4106ca:	inc    ebp
  4106cb:	int    0xbe
  4106cd:	les    eax,FWORD PTR [ebp+0x54506ac9]
  4106d3:	cmp    ch,BYTE PTR [ecx+0x75]
  4106d6:	mov    esp,0x2029a0bd
  4106db:	cmc    
  4106dc:	lods   eax,DWORD PTR ds:[esi]
  4106dd:	dec    ebp
  4106de:	in     eax,0x2e
  4106e0:	dec    esp
  4106e1:	scas   al,BYTE PTR es:[edi]
  4106e2:	imul   edi,DWORD PTR cs:[eax],0x1
  4106e6:	cmp    DWORD PTR [ecx],0x2a
  4106e9:	shl    DWORD PTR [ebx],0xa7
  4106ec:	mov    esp,DWORD PTR [eax-0x29]
  4106ef:	fld    TBYTE PTR [esi+0x159e504b]
  4106f5:	push   esi
  4106f6:	stos   BYTE PTR es:[edi],al
  4106f7:	add    dh,BYTE PTR ds:0xbef5416c
  4106fd:	mov    ebx,0x88061fe9
  410702:	pop    esi
  410703:	push   edi
  410704:	pop    esi
  410705:	jne    0x4106ce
  410707:	in     eax,dx
  410708:	pop    eax
  410709:	test   eax,0x3333ef6c
  41070e:	pop    es
  41070f:	dec    edx
  410710:	pop    esp
  410711:	fs cs aam 0xc7
  410715:	loop   0x410741
  410717:	mov    ah,0x51
  410719:	outs   dx,BYTE PTR ds:[esi]
  41071a:	pushf  
  41071b:	(bad)  
  41071c:	sub    ebp,DWORD PTR [esi+ecx*1-0x30]
  410720:	mov    bh,0x55
  410722:	aam    0x16
  410724:	(bad)  
  410725:	jno    0x41073e
  410727:	fild   QWORD PTR [ebp+0x1]
  41072a:	adc    ah,cl
  41072c:	xchg   edi,eax
  41072d:	dec    esp
  41072e:	pop    DWORD PTR [ebx+0x38ac60bd]
  410734:	push   es
  410735:	jp     0x4106ca
  410737:	xchg   esi,eax
  410738:	mov    bl,cl
  41073a:	rcl    BYTE PTR es:[edi+0x221a2a0d],0xdb
  410742:	clc    
  410743:	scas   eax,DWORD PTR es:[edi]
  410744:	daa    
  410745:	pop    eax
  410746:	add    edx,edi
  410748:	in     al,dx
  410749:	gs jnp 0x4106d3
  41074c:	dec    esi
  41074d:	push   edi
  41074e:	js     0x4107cb
  410750:	pop    edi
  410751:	push   0x717dfdd8
  410756:	xor    eax,0xd1105472
  41075b:	mov    al,ds:0x2c266ba7
  410760:	cmp    esp,DWORD PTR [ecx+0x49c32635]
  410766:	aad    0x24
  410768:	repnz retf 0xe1f5
  41076c:	xchg   dl,ah
  41076e:	repz mov al,0x28
  410771:	test   eax,0x992697c1
  410776:	test   bl,al
  410778:	adc    eax,0xc026d9b1
  41077d:	mov    ebx,0x14212539
  410782:	popf   
  410783:	lods   eax,DWORD PTR ds:[esi]
  410784:	jmp    0x4ca7:0xaf38bc92
  41078b:	dec    ebp
  41078c:	rol    BYTE PTR [esi+0x5cac3d38],cl
  410792:	mov    bl,0x72
  410794:	jl     0x4107e1
  410796:	push   cs
  410797:	sti    
  410798:	inc    ebx
  410799:	sub    edx,DWORD PTR [ecx+ebp*4-0x68]
  41079d:	ins    BYTE PTR es:[edi],dx
  41079e:	pop    esi
  41079f:	clc    
  4107a0:	lods   al,BYTE PTR ds:[esi]
  4107a1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4107a2:	js     0x4107e2
  4107a4:	xchg   edi,eax
  4107a5:	cmp    al,0x22
  4107a7:	add    BYTE PTR [ecx-0x5],al
  4107aa:	and    BYTE PTR [edx+eax*8-0x53],0x97
  4107af:	neg    cl
  4107b1:	scas   al,BYTE PTR es:[edi]
  4107b2:	mov    eax,ds:0x17ba2c28
  4107b7:	aad    0xa7
  4107b9:	push   esp
  4107ba:	rol    DWORD PTR [edx-0x69a5d5b3],1
  4107c0:	ror    BYTE PTR [edi-0x17],0x5a
  4107c4:	dec    edx
  4107c5:	pop    ebp
  4107c6:	jle    0x4107fd
  4107c8:	cmp    DWORD PTR [eax-0x104309a6],0xffffffd4
  4107cf:	idiv   cl
  4107d1:	(bad)  
  4107d2:	push   ebp
  4107d3:	popa   
  4107d4:	mov    eax,ds:0x8ca3b6dd
  4107d9:	aas    
  4107da:	ror    esi,cl
  4107dc:	ret    
  4107dd:	(bad)  
  4107de:	mov    bl,0x4
  4107e0:	cmp    al,0xc
  4107e2:	out    0x32,eax
  4107e4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4107e5:	fwait
  4107e6:	loop   0x4107f6
  4107e8:	not    DWORD PTR [edi+0x6f]
  4107eb:	xor    BYTE PTR [edi+0x5a21498c],dl
  4107f1:	lods   eax,DWORD PTR ds:[esi]
  4107f2:	cmp    bl,BYTE PTR [eax+0x66]
  4107f5:	sbb    bh,BYTE PTR es:[edx-0x80]
  4107f9:	mov    esp,0x8f4dd2ec
  4107fe:	jecxz  0x4107f1
  410800:	mov    esp,0xed0f17b8
  410805:	ss (bad) 
  410807:	and    edi,DWORD PTR [edi-0x2f]
  41080a:	rcr    DWORD PTR [ebp+ebp*4+0x23859a68],0x80
  410812:	test   DWORD PTR [esp+edx*8],0x50b281b
  410819:	(bad)  
  41081a:	in     eax,dx
  41081b:	test   al,0x45
  41081d:	pop    ecx
  41081e:	dec    eax
  41081f:	push   edi
  410820:	scas   al,BYTE PTR es:[edi]
  410821:	pop    edx
  410822:	loope  0x41081b
  410824:	int3   
  410825:	lds    esp,FWORD PTR ds:0xd39cf7ca
  41082b:	dec    edi
  41082c:	mov    ch,0xc5
  41082e:	xchg   edx,eax
  41082f:	adc    BYTE PTR [eax+ecx*8+0x48fe3d49],al
  410836:	jne    0x410802
  410838:	in     al,dx
  410839:	mov    esp,0x8655c821
  41083e:	pop    edx
  41083f:	mov    eax,0x654289c2
  410844:	jns    0x4107c7
  410846:	xchg   esi,eax
  410847:	pop    esi
  410848:	out    dx,eax
  410849:	and    BYTE PTR [edi-0x3e2da188],0x9
  410850:	sub    BYTE PTR [edx],0x0
  410853:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410854:	imul   esi,edi,0xe0031fe3
  41085a:	adc    edx,0x41
  41085d:	ret    0xb580
  410860:	adc    BYTE PTR [ecx+0x17],0x1d
  410864:	sbb    eax,0xbf389cac
  410869:	rcr    BYTE PTR [ebp-0x18ed8d25],cl
  41086f:	jno    0x41080c
  410871:	test   eax,0x28e2b345
  410876:	jnp    0x410841
  410878:	push   cs
  410879:	fmul   DWORD PTR [esi+0x29ea0f78]
  41087f:	xchg   ch,al
  410881:	imul   eax,edi,0x72
  410884:	push   edx
  410885:	and    ah,bh
  410887:	lock pop edx
  410889:	inc    esi
  41088a:	retf   0xbee7
  41088d:	xor    edx,esi
  41088f:	adc    DWORD PTR ds:0x4214e0,0x59ed
  410899:	add    edx,0x7837233d
  41089f:	mov    DWORD PTR ds:0x42366c,0x27ea
  4108a9:	lea    eax,[ebp+ecx*4-0x4c]
  4108ad:	mov    DWORD PTR ds:0x4236fc,0x532a
  4108b7:	mov    DWORD PTR [eax],edx
  4108b9:	mov    edx,0x6d16
  4108be:	mov    edx,DWORD PTR [eax]
  4108c0:	jmp    0x410daf
  4108c5:	add    DWORD PTR [esi-0x840a9],esp
  4108cb:	jmp    0x5b2d668e
  4108d0:	arpl   WORD PTR [ebp+edx*4-0x16b3b837],bp
  4108d7:	add    BYTE PTR [eax],al
  4108d9:	rol    BYTE PTR [eax+eax*1],cl
  4108dc:	add    ch,dl
  4108de:	hlt    
  4108df:	dec    edi
  4108e0:	mov    edx,0x17c3594f
  4108e5:	or     BYTE PTR [ecx+0x8ef66a5],bl
  4108eb:	fmulp  st(7),st
  4108ed:	js     0x41096e
  4108ef:	ror    BYTE PTR [ecx+edx*8-0x1b],1
  4108f3:	lods   al,BYTE PTR ds:[esi]
  4108f4:	jbe    0x4108d2
  4108f6:	ret    
  4108f7:	add    edx,DWORD PTR [esi]
  4108f9:	pop    ds
  4108fa:	out    0x7f,al
  4108fc:	sahf   
  4108fd:	mov    eax,0xa3ca4845
  410902:	inc    edx
  410903:	imul   esp
  410905:	repz fadd DWORD PTR [ebp+eax*4+0x4f]
  41090a:	add    edx,edx
  41090c:	out    0xea,eax
  41090e:	pop    esi
  41090f:	popf   
  410910:	sbb    al,0xe5
  410912:	and    eax,0x6c4babb1
  410917:	out    0xe2,eax
  410919:	pushf  
  41091a:	or     DWORD PTR [ebx+0x47],edx
  41091d:	pop    ecx
  41091e:	mov    esi,0xc4401dd4
  410923:	ficomp DWORD PTR [eax-0x708a1de8]
  410929:	mov    ds:0xdd9c315c,eax
  41092f:	jecxz  0x4108ed
  410931:	ja     0x4108e8
  410933:	stos   BYTE PTR es:[edi],al
  410934:	rcr    edi,cl
  410936:	dec    esi
  410937:	or     ecx,DWORD PTR [edi]
  410939:	inc    esi
  41093a:	int3   
  41093b:	(bad)  
  41093c:	test   BYTE PTR [ebp-0x36],0x7c
  410940:	psubsw mm7,QWORD PTR [edi]
  410943:	loop   0x410914
  410945:	ret    
  410946:	xchg   DWORD PTR [eax],ebx
  410948:	mov    edi,DWORD PTR [ebp+0x53]
  41094b:	or     esp,DWORD PTR [esi+0x6c]
  41094e:	jo     0x4109a4
  410950:	mov    al,0xee
  410952:	fcmove st,st(0)
  410954:	fbld   TBYTE PTR [eax+ebp*4+0x65f24d60]
  41095b:	adc    al,0xe8
  41095d:	mov    ebx,0x80f3e479
  410962:	int3   
  410963:	outs   dx,DWORD PTR ds:[esi]
  410964:	jmp    FWORD PTR fs:[esi-0x5e]
  410968:	out    0xaa,al
  41096a:	mov    ah,bh
  41096c:	lods   al,BYTE PTR ds:[esi]
  41096d:	repnz pop edx
  41096f:	std    
  410970:	cs stos BYTE PTR es:[edi],al
  410972:	xor    DWORD PTR [edx-0x5659f13b],edi
  410978:	int3   
  410979:	cwde   
  41097a:	pop    ss
  41097b:	xor    BYTE PTR [esi-0x3c2df18c],0xb2
  410982:	imul   ecx,DWORD PTR [ebp-0x43],0xcda5b13e
  410989:	push   esp
  41098a:	inc    ax
  41098c:	jge    0x410988
  41098e:	mov    dh,0x34
  410990:	pand   mm5,QWORD PTR [eax+0x41d32554]
  410997:	add    BYTE PTR [edi],0xf1
  41099a:	scas   eax,DWORD PTR es:[edi]
  41099b:	xor    edi,DWORD PTR [ebx]
  41099d:	cmp    al,0x8c
  41099f:	push   esp
  4109a0:	inc    esi
  4109a1:	fadd   QWORD PTR [edi]
  4109a3:	jno    0x41098e
  4109a5:	or     DWORD PTR [esi],edx
  4109a7:	jg     0x410a14
  4109a9:	cld    
  4109aa:	add    ebx,DWORD PTR [edi]
  4109ac:	add    ebx,DWORD PTR [esi+0x245dbffc]
  4109b2:	sub    esp,DWORD PTR fs:[ecx+0x70c5c94f]
  4109b9:	in     al,0x5c
  4109bb:	dec    ebp
  4109bc:	test   BYTE PTR [ebx],cl
  4109be:	jne    0x410a08
  4109c0:	ret    
  4109c1:	xchg   esp,eax
  4109c2:	or     al,0xa6
  4109c4:	(bad)  
  4109c5:	pop    eax
  4109c6:	ret    
  4109c7:	dec    esp
  4109c8:	div    DWORD PTR [eax-0x25]
  4109cb:	rcl    BYTE PTR [ecx-0x4fbbe1a8],0xc0
  4109d2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4109d3:	nop
  4109d4:	push   0x828bd9eb
  4109d9:	(bad)  
  4109da:	test   al,0x4f
  4109dc:	or     ebx,ebp
  4109de:	lahf   
  4109df:	mov    dl,BYTE PTR [edi+0x4cd4ca1e]
  4109e5:	gs inc edi
  4109e7:	ins    DWORD PTR es:[edi],dx
  4109e8:	cli    
  4109e9:	adc    dl,BYTE PTR [edi+0x2f]
  4109ec:	loope  0x4109c6
  4109ee:	jmp    ecx
  4109f0:	lds    ecx,FWORD PTR ds:0xf33860af
  4109f6:	cmp    eax,0x77fc6aff
  4109fb:	neg    BYTE PTR [ebp+0x60]
  4109fe:	jae    0x4109c6
  410a00:	xor    al,0xcb
  410a02:	int3   
  410a03:	ins    DWORD PTR es:[edi],dx
  410a04:	sbb    esp,DWORD PTR [eax+0x77]
  410a07:	js     0x410a60
  410a09:	pop    edi
  410a0a:	push   edi
  410a0b:	js     0x410a32
  410a0d:	pop    ss
  410a0e:	jb     0x410a05
  410a10:	mov    ecx,0xb277e45f
  410a15:	out    0x6,eax
  410a17:	sbb    eax,0x8b7beb95
  410a1c:	mov    ch,0xcd
  410a1e:	xor    ebp,esi
  410a20:	jg     0x4109be
  410a22:	nop
  410a23:	mov    bl,0x93
  410a25:	adc    DWORD PTR [edi],ebx
  410a27:	fs aam 0xee
  410a2a:	pop    ebx
  410a2b:	(bad)  
  410a2c:	jmp    0xe9a4:0xc42901fc
  410a33:	add    eax,0xb49c3645
  410a38:	cmp    ebx,DWORD PTR [eax-0x5b]
  410a3b:	push   ecx
  410a3c:	and    ebp,DWORD PTR [edi+0x7b2717ff]
  410a42:	add    eax,0x69801597
  410a47:	aam    0x38
  410a49:	imul   esi,DWORD PTR [ecx],0x3c
  410a4c:	xor    al,0xd0
  410a4e:	mov    ds:0x7bd62e6,eax
  410a53:	dec    esi
  410a54:	(bad)  
  410a55:	repz xor esi,DWORD PTR [ecx]
  410a58:	mov    cl,0xdf
  410a5a:	rcl    al,0x4d
  410a5d:	fadd   DWORD PTR [ebx+ebp*4-0x51]
  410a61:	pusha  
  410a62:	(bad)  
  410a63:	mov    ch,0x90
  410a65:	js     0x410aba
  410a67:	repnz pop esi
  410a69:	pop    ecx
  410a6a:	cmp    BYTE PTR ds:0xa39d72c5,bl
  410a70:	sbb    edx,eax
  410a72:	retf   
  410a73:	daa    
  410a74:	arpl   WORD PTR [edx+0x2d49fb94],bp
  410a7a:	push   esi
  410a7b:	sub    ebp,ebp
  410a7d:	sbb    edi,DWORD PTR [esi]
  410a7f:	xor    edi,DWORD PTR [ebx+0x5b]
  410a82:	xchg   ebp,eax
  410a83:	dec    ecx
  410a84:	sub    eax,DWORD PTR [edi-0x6ce598fd]
  410a8a:	and    DWORD PTR [eax],edx
  410a8c:	icebp  
  410a8d:	sub    al,0xd4
  410a8f:	xchg   esp,eax
  410a90:	mov    WORD PTR [ecx-0x22],fs
  410a93:	cmp    DWORD PTR ds:0xfe27e118,ebx
  410a99:	inc    esp
  410a9a:	dec    ebx
  410a9b:	loope  0x410aff
  410a9d:	dec    edi
  410a9e:	mov    ds:0xb3761b2e,al
  410aa3:	neg    DWORD PTR [edi-0x9]
  410aa6:	enter  0x33e,0xce
  410aaa:	sti    
  410aab:	push   ecx
  410aac:	jle    0x410af7
  410aae:	mov    cl,0x80
  410ab0:	psubsw mm3,QWORD PTR [ecx+ebp*2+0x19]
  410ab5:	jo     0x410a9b
  410ab7:	stos   DWORD PTR es:[edi],eax
  410ab8:	adc    eax,0xa8c922fc
  410abd:	and    DWORD PTR [eax-0x68],edi
  410ac0:	gs fdiv st(6),st
  410ac3:	pop    esi
  410ac4:	mov    eax,esp
  410ac6:	xlat   BYTE PTR ds:[ebx]
  410ac7:	push   edi
  410ac8:	lds    ebx,FWORD PTR [edx-0x4bd1bf11]
  410ace:	sub    DWORD PTR [ecx],edx
  410ad0:	sbb    ecx,esp
  410ad2:	ins    DWORD PTR es:[edi],dx
  410ad3:	jmp    0x410b0f
  410ad5:	aas    
  410ad6:	xchg   edi,eax
  410ad7:	mov    ecx,db2
  410ada:	pop    ecx
  410adb:	jbe    0x410ace
  410add:	inc    edx
  410ade:	aas    
  410adf:	sti    
  410ae0:	mov    edi,0x5d77b2f8
  410ae5:	aam    0x1c
  410ae7:	cwde   
  410ae8:	push   ds
  410ae9:	clc    
  410aea:	jb     0x410b6b
  410aec:	outs   dx,BYTE PTR ds:[esi]
  410aed:	and    eax,0xa67060a9
  410af2:	sbb    DWORD PTR [edi+0x1609dd5d],esp
  410af8:	retf   0xf40e
  410afb:	hlt    
  410afc:	and    ebx,esp
  410afe:	ret    0x8de7
  410b01:	jg     0x410abb
  410b03:	sbb    bh,BYTE PTR [edi+0x312414e2]
  410b09:	xor    edx,edi
  410b0b:	call   0xea18:0xc82b3119
  410b12:	(bad)  
  410b13:	xor    eax,0x80df3a2f
  410b18:	inc    edx
  410b19:	cli    
  410b1a:	cmp    edx,DWORD PTR [esi-0x46]
  410b1d:	pop    eax
  410b1e:	imul   eax,DWORD PTR [ecx+eiz*2-0x50f1fce4],0x2ddd51de
  410b29:	ret    0xa2e2
  410b2c:	ins    BYTE PTR es:[edi],dx
  410b2d:	pop    edx
  410b2e:	mov    ah,0x5b
  410b30:	dec    di
  410b32:	pop    esp
  410b33:	test   BYTE PTR [edx+0x6b],ch
  410b36:	cmp    DWORD PTR [esi],edi
  410b38:	mov    edx,0x8e0511b2
  410b3d:	loopne 0x410b68
  410b3f:	push   DWORD PTR [edi]
  410b41:	xor    eax,0xc1e44610
  410b46:	outs   dx,DWORD PTR ds:[esi]
  410b47:	push   ebx
  410b48:	mov    ebp,0x68a43fbb
  410b4d:	add    al,0xf5
  410b4f:	mov    al,ds:0x2c28f0a8
  410b54:	test   DWORD PTR [ecx+0x3a],esp
  410b57:	das    
  410b58:	ja     0x410b1f
  410b5a:	mov    ebx,0xaf816c2b
  410b5f:	or     eax,0xa7b77637
  410b64:	or     al,BYTE PTR [eax]
  410b66:	test   eax,0x9a644575
  410b6b:	lods   al,BYTE PTR ds:[esi]
  410b6c:	sbb    BYTE PTR [edi-0x35],dh
  410b6f:	mov    esp,0xa16ab811
  410b74:	xchg   edx,eax
  410b75:	(bad)  
  410b76:	xchg   ecx,eax
  410b77:	add    DWORD PTR [edx-0x47ca969],ebx
  410b7d:	retf   
  410b7e:	enter  0xa25e,0xc1
  410b82:	push   ecx
  410b83:	or     al,0x27
  410b85:	js     0x410b3f
  410b87:	out    dx,eax
  410b88:	xchg   BYTE PTR ds:0xb9f337ef,bh
  410b8e:	shl    esp,0x61
  410b91:	aaa    
  410b92:	push   edx
  410b93:	push   ss
  410b94:	adc    eax,0x7383a740
  410b99:	mov    dl,0xd1
  410b9b:	psubq  mm1,QWORD PTR [ebp+esi*4-0x5d97dee7]
  410ba3:	add    eax,0x72afaa6c
  410ba8:	inc    esi
  410ba9:	dec    ecx
  410baa:	in     eax,0xdd
  410bac:	(bad)  
  410bae:	les    ebp,FWORD PTR [esi]
  410bb0:	imul   ebx,esp,0xffffffc7
  410bb3:	push   ss
  410bb4:	or     ecx,ebx
  410bb6:	mov    ebx,0xe0ebf10
  410bbb:	jne    0x410b9b
  410bbd:	ins    BYTE PTR es:[edi],dx
  410bbe:	cmp    al,0x7f
  410bc0:	add    BYTE PTR [ecx+0x3f],ch
  410bc3:	add    edx,esp
  410bc5:	inc    DWORD PTR [esi]
  410bc7:	int    0xa4
  410bc9:	sbb    eax,0x423eb7b1
  410bce:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410bcf:	out    dx,al
  410bd0:	sti    
  410bd1:	in     al,0x32
  410bd3:	sub    dl,cl
  410bd5:	lods   al,BYTE PTR ds:[esi]
  410bd6:	mov    edx,DWORD PTR [edx+0x17]
  410bd9:	repnz sti 
  410bdb:	cmp    ecx,DWORD PTR ds:0xb0fe3edb
  410be1:	xchg   ebx,eax
  410be2:	cmc    
  410be3:	jge    0x410c13
  410be5:	inc    edi
  410be6:	ds mov esp,0x4321d645
  410bec:	ror    DWORD PTR [esi+ebx*8+0x3fd3757b],1
  410bf3:	lahf   
  410bf4:	in     al,dx
  410bf5:	imul   edx,eax,0xee67cfb
  410bfb:	into   
  410bfc:	cmp    DWORD PTR [ebp+0x5e],edi
  410bff:	sub    BYTE PTR [esi],0x42
  410c02:	pop    esi
  410c03:	leave  
  410c04:	aaa    
  410c05:	(bad)  
  410c06:	jmp    0x410bfc
  410c08:	jecxz  0x410b9e
  410c0a:	pop    ebx
  410c0b:	add    BYTE PTR [esi-0x672e47ed],ch
  410c11:	mov    edx,0x485e84c7
  410c16:	mov    ah,0x56
  410c18:	gs int 0xff
  410c1b:	(bad)  
  410c1c:	push   ebx
  410c1d:	int    0x20
  410c1f:	ffree  st(1)
  410c21:	cld    
  410c22:	fisttp WORD PTR [ebx+0x7aba124]
  410c28:	push   esi
  410c29:	lahf   
  410c2a:	xchg   esp,eax
  410c2b:	jmp    0x410be4
  410c2d:	add    DWORD PTR [edi-0x1e107064],ecx
  410c33:	in     al,0x5d
  410c35:	out    dx,eax
  410c36:	push   es
  410c37:	sbb    BYTE PTR [ebx+eiz*4],al
  410c3a:	lds    esp,FWORD PTR [eax+0x76]
  410c3d:	dec    ebx
  410c3e:	pop    ss
  410c3f:	dec    ecx
  410c40:	std    
  410c41:	das    
  410c42:	mov    ah,0x2c
  410c44:	sbb    edx,esi
  410c46:	mul    DWORD PTR [edi+0x3fd4c586]
  410c4c:	mov    ecx,0xee9eae44
  410c51:	or     al,0xe1
  410c53:	or     al,0x48
  410c55:	adc    esp,DWORD PTR [ecx]
  410c57:	jns    0x410cc8
  410c59:	cmp    eax,0xdd3af7c4
  410c5e:	sub    dh,0xb9
  410c61:	mov    dl,cl
  410c63:	xchg   esp,eax
  410c64:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410c65:	mov    ah,0x8
  410c67:	jmp    0x410cc9
  410c69:	hlt    
  410c6a:	retf   
  410c6b:	mov    DWORD PTR [edx+ecx*8+0x2c],0x731c182
  410c73:	dec    esi
  410c74:	outs   dx,BYTE PTR ds:[esi]
  410c75:	bound  eax,QWORD PTR [edi+0x15b7a25e]
  410c7b:	aam    0x82
  410c7d:	add    DWORD PTR [ebx+0x41b5478f],esi
  410c83:	sub    DWORD PTR [ebp-0x1231dd17],eax
  410c89:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410c8a:	scas   al,BYTE PTR es:[di]
  410c8c:	in     eax,0xc8
  410c8e:	aas    
  410c8f:	xlat   BYTE PTR gs:[ebx]
  410c91:	mov    esi,0x58e4ecf
  410c96:	sti    
  410c97:	jo     0x410cf9
  410c99:	add    eax,0x9caf89c3
  410c9e:	add    eax,0xcff72493
  410ca3:	jecxz  0x410ca9
  410ca5:	mov    ds:0xf87dcf8d,eax
  410caa:	jl     0x410ca9
  410cac:	inc    ebx
  410cad:	cmp    BYTE PTR [ebx],al
  410caf:	pusha  
  410cb0:	pop    eax
  410cb1:	sbb    BYTE PTR [ecx],bh
  410cb3:	daa    
  410cb4:	inc    esp
  410cb5:	rep lods al,BYTE PTR cs:[esi]
  410cb8:	loopne 0x410c89
  410cba:	jp     0x410cf2
  410cbc:	push   ebp
  410cbd:	pop    esp
  410cbe:	add    bh,dl
  410cc0:	dec    esi
  410cc1:	std    
  410cc2:	shl    ebx,cl
  410cc4:	repz pop eax
  410cc6:	scas   al,BYTE PTR es:[edi]
  410cc7:	xor    al,0x88
  410cc9:	les    edx,FWORD PTR [edi-0x7c]
  410ccc:	test   eax,0xbb08086
  410cd1:	inc    ebx
  410cd2:	and    esi,ecx
  410cd4:	in     al,0x63
  410cd6:	ds xchg ebp,esi
  410cd9:	jo     0x410c88
  410cdb:	ss call 0x5e2a:0x5d4d432e
  410ce3:	(bad)  
  410ce4:	and    ecx,DWORD PTR [edi-0x3a78c1b2]
  410cea:	das    
  410ceb:	mov    al,ds:0x6bd521c3
  410cf0:	or     dl,BYTE PTR [ecx+0x35300a08]
  410cf6:	das    
  410cf7:	pop    ds
  410cf8:	adc    BYTE PTR [ecx+0x71b147a8],al
  410cfe:	in     eax,dx
  410cff:	pop    edx
  410d00:	out    dx,eax
  410d01:	mov    ds:0xf423a21e,eax
  410d06:	call   0x4832:0x725d5ee4
  410d0d:	les    esp,FWORD PTR [edx-0x3f]
  410d10:	mov    esi,0xedc31558
  410d15:	out    0xe0,eax
  410d17:	nop
  410d18:	xor    BYTE PTR [esi],cl
  410d1a:	xchg   esp,eax
  410d1b:	lock cmp dl,bh
  410d1e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410d1f:	add    edi,DWORD PTR [ecx]
  410d21:	cld    
  410d22:	cs dec edx
  410d24:	dec    esi
  410d25:	push   0x365468dc
  410d2a:	xor    BYTE PTR [edi],ch
  410d2c:	mov    WORD PTR [esi],gs
  410d2e:	jne    0x410dae
  410d30:	mov    esi,0x1a742012
  410d35:	xor    eax,0xf3370363
  410d3a:	mov    ebx,0x9f8131a4
  410d3f:	fdiv   QWORD PTR [eax]
  410d41:	shl    BYTE PTR [eax-0x5b68a5d5],cl
  410d47:	test   eax,0x9ec4d116
  410d4c:	jle    0x410d77
  410d4e:	jp     0x410d6e
  410d50:	popa   
  410d51:	ins    DWORD PTR es:[edi],dx
  410d52:	cmp    dl,cl
  410d54:	sub    al,0x9
  410d56:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410d57:	cmova  esp,ebp
  410d5a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410d5b:	ins    BYTE PTR es:[edi],dx
  410d5c:	loope  0x410ced
  410d5e:	ret    0x3934
  410d61:	pop    eax
  410d62:	push   0xfd3e623a
  410d67:	jl     0x410d3c
  410d69:	das    
  410d6a:	loopne 0x410d7d
  410d6c:	in     al,0x68
  410d6e:	and    al,0x8c
  410d70:	rcl    dh,0x6c
  410d73:	je     0x410cf5
  410d75:	xchg   ebx,eax
  410d76:	loop   0x410dd8
  410d78:	jbe    0x410dc9
  410d7a:	int3   
  410d7b:	sub    al,BYTE PTR [edx]
  410d7d:	jns    0x410d9b
  410d7f:	pop    ds
  410d80:	mov    edi,0x2980559
  410d85:	rcl    ebp,cl
  410d87:	xlat   BYTE PTR ds:[ebx]
  410d88:	sbb    BYTE PTR [si],bh
  410d8b:	sbb    al,0x96
  410d8d:	inc    edx
  410d8e:	jg     0x410e09
  410d90:	and    esp,DWORD PTR [edi-0x7c5f9c45]
  410d96:	cwde   
  410d97:	or     esp,edi
  410d99:	ret    0x988b
  410d9c:	push   ebp
  410d9d:	aaa    
  410d9e:	aad    0x52
  410da0:	and    DWORD PTR [esi+eiz*4+0x121e8366],ebx
  410da7:	pop    eax
  410da8:	ror    al,cl
  410daa:	mov    cl,cl
  410dac:	cdq    
  410dad:	mov    esp,0xfd33b9a
  410db2:	xchg   BYTE PTR [edi],bl
  410db4:	add    BYTE PTR [eax],al
  410db6:	add    BYTE PTR [ecx+0x4236780d],al
  410dbc:	add    BYTE PTR [eax-0x7effbdca],ch
  410dc2:	add    BYTE PTR [ebx+0x7],dl
  410dc5:	xchg   DWORD PTR [ebx],eax
  410dc7:	mov    DWORD PTR ds:0x4236f0,0x630
  410dd1:	jmp    0x410ddc
  410dd6:	add    DWORD PTR [eax],0xfacc38ad
  410ddc:	mov    eax,DWORD PTR [ebp-0x8]
  410ddf:	jmp    0x4112ce
  410de4:	sub    DWORD PTR [eax+0x71f960d9],0x65aee9b9
  410dee:	xchg   BYTE PTR [eax-0x6],dl
  410df1:	xchg   edi,eax
  410df2:	adc    dh,dh
  410df4:	push   ds
  410df5:	out    dx,al
  410df6:	add    BYTE PTR [eax],al
  410df8:	rol    BYTE PTR [eax+eax*1],cl
  410dfb:	add    BYTE PTR [eax-0x47152de6],cl
  410e01:	dec    ebp
  410e02:	call   0xca13:0x6d3e16e7
  410e09:	sar    BYTE PTR [edx-0x1c],0x26
  410e0d:	or     bh,BYTE PTR [ecx]
  410e0f:	or     eax,0x8456f8aa
  410e14:	mov    cl,0x1c
  410e16:	jl     0x410e32
  410e18:	xor    ebx,DWORD PTR [esi]
  410e1a:	addr16 pop eax
  410e1c:	jp     0x410daf
  410e1e:	shl    DWORD PTR [edi-0x4d],1
  410e21:	xor    eax,eax
  410e23:	cmp    BYTE PTR [esi+0x60],cl
  410e26:	rol    DWORD PTR [ecx+eax*8-0x10b282de],1
  410e2d:	push   edi
  410e2e:	gs out 0x5a,al
  410e31:	push   eax
  410e32:	enter  0x1ef5,0x7d
  410e36:	push   esi
  410e37:	jge    0x410e26
  410e39:	jne    0x410de7
  410e3b:	daa    
  410e3c:	cmc    
  410e3d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410e3e:	add    ebp,DWORD PTR [ebx-0x6c22b045]
  410e44:	popa   
  410e45:	stos   BYTE PTR es:[edi],al
  410e46:	in     eax,dx
  410e47:	lea    edi,[edi+0x0]
  410e4a:	(bad)  
  410e4b:	push   esi
  410e4c:	fst    QWORD PTR ds:0x53d1c94e
  410e52:	ins    DWORD PTR es:[edi],dx
  410e53:	mov    ebx,0x2a95575c
  410e58:	ret    0x18b8
  410e5b:	lea    edx,[ecx-0x206af7b0]
  410e61:	cmp    dl,al
  410e63:	push   ebp
  410e64:	inc    edx
  410e65:	pop    ebx
  410e66:	and    esp,DWORD PTR [ecx-0x7e]
  410e69:	add    ecx,esi
  410e6b:	adc    eax,0xb5842dfe
  410e70:	push   cs
  410e71:	int3   
  410e72:	retf   
  410e73:	and    al,0x81
  410e75:	mov    dh,0x3e
  410e77:	mov    dl,0xf0
  410e79:	jns    0x410e7f
  410e7b:	push   edi
  410e7c:	push   es
  410e7d:	inc    DWORD PTR [ebp+0x27f001b8]
  410e83:	dec    ecx
  410e84:	adc    al,0xa0
  410e86:	pop    ds
  410e87:	push   eax
  410e88:	mov    ebx,0x31169e2
  410e8d:	xchg   edi,eax
  410e8e:	pop    esi
  410e8f:	push   ds
  410e90:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410e91:	jno    0x410e58
  410e93:	mov    esi,0x7c3b0281
  410e98:	les    edi,FWORD PTR [ebx-0xe]
  410e9b:	data16 sbb BYTE PTR [edx-0x3d79935f],bh
  410ea2:	lods   eax,DWORD PTR ds:[esi]
  410ea3:	inc    eax
  410ea4:	pop    ebx
  410ea5:	dec    esp
  410ea6:	lahf   
  410ea7:	jecxz  0x410e39
  410ea9:	mov    ss,WORD PTR [eax+0x46261427]
  410eaf:	push   esi
  410eb0:	test   BYTE PTR [edx+0x3e],ch
  410eb3:	cmp    eax,0xfd74d082
  410eb8:	and    edi,esi
  410eba:	loope  0x410eb2
  410ebc:	dec    ecx
  410ebd:	in     al,dx
  410ebe:	push   esp
  410ebf:	xor    edx,DWORD PTR [eax+0x600c5db6]
  410ec5:	or     ebp,DWORD PTR [ebx+0xb691fe2]
  410ecb:	add    eax,0xe02799b0
  410ed0:	xchg   esp,eax
  410ed1:	or     DWORD PTR [ecx+0x38],ebx
  410ed4:	js     0x410eae
  410ed6:	(bad)  
  410ed7:	and    eax,0x34c77dba
  410edc:	dec    ebx
  410edd:	push   ecx
  410ede:	jo     0x410e8a
  410ee0:	mov    esp,0x9120d791
  410ee5:	push   ebp
  410ee6:	aaa    
  410ee7:	xchg   BYTE PTR [edx+0x38],bh
  410eea:	cmp    eax,0x64cd4dbf
  410eef:	popf   
  410ef0:	ja     0x410f66
  410ef2:	cli    
  410ef3:	jge    0x410f64
  410ef5:	mov    bl,BYTE PTR [eax+0x3783bf98]
  410efb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410efc:	and    eax,0xe0414a98
  410f01:	cs (bad) 
  410f03:	loope  0x410efc
  410f05:	sub    DWORD PTR [ecx],ecx
  410f07:	cmp    eax,0x20e4ed10
  410f0c:	mov    BYTE PTR [ebx+edi*1],dl
  410f0f:	ds jmp 0x91f9088
  410f15:	pop    edx
  410f16:	fidiv  DWORD PTR ds:0xa5412952
  410f1c:	mov    bh,0x8f
  410f1e:	ss cwde 
  410f20:	ror    DWORD PTR [ecx+0x745295e7],1
  410f26:	std    
  410f27:	adc    ebx,DWORD PTR [esi-0x70]
  410f2a:	push   ebp
  410f2b:	push   edx
  410f2c:	mov    edx,0xb5811200
  410f31:	sti    
  410f32:	and    ebp,esp
  410f34:	lock push esi
  410f36:	xor    cl,BYTE PTR [ecx-0x41]
  410f39:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410f3a:	cmp    eax,DWORD PTR [esi+0x3aac3e7b]
  410f40:	rcr    DWORD PTR [edx+eax*8],0xc2
  410f44:	mov    ah,0x39
  410f46:	pop    ebp
  410f47:	aas    
  410f48:	and    ah,bh
  410f4a:	jg     0x410fbf
  410f4c:	add    al,0xa7
  410f4e:	(bad)  
  410f50:	mov    dh,0x8
  410f52:	adc    DWORD PTR [esi+0x1c],edi
  410f55:	adc    BYTE PTR [esi-0x1b7fe12a],bh
  410f5b:	addr16 push cs
  410f5d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410f5e:	mov    bl,0x7e
  410f60:	stos   BYTE PTR es:[edi],al
  410f61:	sar    BYTE PTR [ecx+0x7111576b],0x89
  410f68:	arpl   WORD PTR [ebp-0x79],bp
  410f6b:	dec    eax
  410f6c:	adc    eax,0xc1720171
  410f71:	push   es
  410f72:	xor    ah,al
  410f74:	ret    
  410f75:	dec    eax
  410f76:	xchg   ebp,eax
  410f77:	not    DWORD PTR [eax+ecx*1-0x7555f6c1]
  410f7e:	xchg   ecx,eax
  410f7f:	mov    ebx,DWORD PTR [edi+0x243c2d0]
  410f85:	in     eax,0x2b
  410f87:	or     ah,al
  410f89:	cmp    al,0x72
  410f8b:	hlt    
  410f8c:	mov    ds:0x874fab30,al
  410f91:	hlt    
  410f92:	push   ebp
  410f93:	jge    0x410fe7
  410f95:	push   0x877ae26c
  410f9a:	add    dh,dl
  410f9c:	popa   
  410f9d:	or     ebx,DWORD PTR [ebp-0x53]
  410fa0:	dec    eax
  410fa1:	jl     0x410fd7
  410fa3:	imul   esp,DWORD PTR [edi-0x66],0xc2961c55
  410faa:	(bad)  
  410fab:	retf   0x67c3
  410fae:	sub    BYTE PTR [esi],ah
  410fb0:	sbb    al,0x40
  410fb2:	inc    edi
  410fb3:	dec    esi
  410fb4:	sub    BYTE PTR [ebx],0x76
  410fb7:	jno    0x410f81
  410fb9:	(bad)  
  410fba:	shr    esp,cl
  410fbc:	mov    ds:0x3007410b,eax
  410fc1:	sub    eax,0xbe7468e5
  410fc6:	sbb    al,0x4
  410fc8:	xchg   edx,eax
  410fc9:	sub    eax,0x4e7b50e3
  410fce:	mov    ecx,0x23f14658
  410fd3:	cmp    DWORD PTR [ebx+esi*8],esi
  410fd6:	js     0x410f5c
  410fd8:	pop    ebp
  410fd9:	cwde   
  410fda:	idiv   DWORD PTR [ebx]
  410fdc:	sar    DWORD PTR [esi-0x56ad0940],cl
  410fe2:	push   0x244b7c95
  410fe7:	cld    
  410fe8:	xchg   esi,eax
  410fe9:	adc    DWORD PTR [edi+0x7d],esp
  410fec:	xor    DWORD PTR [esi-0x1b],edi
  410fef:	loope  0x410fd1
  410ff1:	test   eax,0x1c4195cc
  410ff6:	xor    al,0x29
  410ff8:	inc    edi
  410ff9:	cmp    eax,0x5bfa9c98
  410ffe:	inc    esi
  410fff:	jae    0x410fb9
  411001:	jmp    0x8d90aae9
  411006:	retf   
  411007:	push   ebx
  411008:	sub    BYTE PTR gs:[edx],dh
  41100b:	popa   
  41100c:	ret    0xeb43
  41100f:	lea    esp,[eax-0x1bb483eb]
  411015:	je     0x410ffb
  411017:	xchg   esp,eax
  411019:	push   edi
  41101a:	adc    al,0x69
  41101c:	addr16 out 0xbd,al
  41101f:	dec    edx
  411020:	xchg   ebp,eax
  411021:	xchg   ecx,eax
  411022:	bound  ebp,QWORD PTR [ecx]
  411024:	mov    DWORD PTR [ecx+0x0],edx
  411027:	in     eax,0xe7
  411029:	fstp   TBYTE PTR [esi+0x3d]
  41102c:	sub    edx,DWORD PTR ds:0x49c1ae62
  411032:	push   ebx
  411033:	fisub  DWORD PTR [edx+ecx*1-0x4d]
  411037:	lahf   
  411038:	push   0x58
  41103a:	fisubr DWORD PTR [ecx]
  41103c:	nop
  41103d:	jae    0x4110ad
  41103f:	adc    al,0x39
  411041:	hlt    
  411042:	retf   
  411043:	pop    esp
  411044:	adc    al,BYTE PTR [edi+0x4298bc1e]
  41104a:	inc    ecx
  41104b:	std    
  41104c:	lea    ebx,[esi+ebx*8+0x57b9e816]
  411053:	jb     0x410fe8
  411055:	sub    al,BYTE PTR [ebp-0x1e44d508]
  41105b:	dec    esp
  41105c:	lods   al,BYTE PTR ds:[esi]
  41105d:	xchg   edx,eax
  41105e:	inc    eax
  41105f:	xor    DWORD PTR [ecx+eax*1-0x57],edi
  411063:	nop
  411064:	mov    eax,0xad02d9c
  411069:	sub    DWORD PTR [eax-0x34],0xcaa4c9e9
  411070:	repnz dec edi
  411072:	and    al,bh
  411074:	fld    TBYTE PTR [eax+0x5]
  411077:	mov    cl,0xb1
  411079:	add    ecx,esi
  41107b:	enter  0x410b,0x1c
  41107f:	gs and al,0x3
  411082:	add    edi,DWORD PTR [edx-0x20]
  411085:	ret    0x3936
  411088:	xchg   esp,eax
  411089:	xor    esi,0x5dfca53e
  41108f:	inc    ecx
  411090:	popf   
  411091:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411092:	xchg   esp,eax
  411093:	and    edx,DWORD PTR [eax+0x24]
  411096:	int3   
  411097:	ds rcl edx,0x49
  41109b:	xchg   esp,eax
  41109c:	scas   al,BYTE PTR es:[edi]
  41109d:	and    ecx,DWORD PTR [edi+0x2474ebdb]
  4110a3:	into   
  4110a4:	sub    DWORD PTR cs:[ecx-0x3a],edx
  4110a8:	cmc    
  4110a9:	xchg   edi,eax
  4110aa:	and    al,0x80
  4110ac:	fwait
  4110ad:	or     cl,BYTE PTR [ebp-0x4cd76362]
  4110b3:	cmp    DWORD PTR [esi+0x5fe8e422],edx
  4110b9:	mov    BYTE PTR [eax],bl
  4110bb:	nop
  4110bc:	or     cl,BYTE PTR [eax-0x2606a5f6]
  4110c2:	mov    bl,0x30
  4110c4:	aam    0xd5
  4110c6:	mov    ch,0x19
  4110c8:	dec    ebx
  4110c9:	pop    eax
  4110ca:	cli    
  4110cb:	or     al,0xd4
  4110cd:	jge    0x41110b
  4110cf:	xlat   BYTE PTR ds:[ebx]
  4110d0:	cmp    DWORD PTR [esi],ecx
  4110d2:	and    al,0xc7
  4110d4:	hlt    
  4110d5:	push   ss
  4110d6:	in     al,dx
  4110d7:	or     esp,DWORD PTR [esi+edx*8-0x724f7ab]
  4110de:	cmp    eax,0x6ff8a532
  4110e3:	and    esi,DWORD PTR [ebp-0x3f]
  4110e6:	push   esi
  4110e7:	(bad)  
  4110e8:	sub    ecx,DWORD PTR [edx+0x3f]
  4110eb:	mov    dl,0xc3
  4110ed:	and    al,0xa
  4110ef:	push   ds
  4110f0:	lods   al,BYTE PTR ds:[esi]
  4110f1:	xchg   ebx,eax
  4110f2:	mov    ah,0xc9
  4110f4:	pop    esi
  4110f5:	xchg   ebp,eax
  4110f6:	adc    BYTE PTR [edx+edi*1],ah
  4110f9:	aad    0x84
  4110fb:	sbb    DWORD PTR [edi],ebx
  4110fd:	icebp  
  4110fe:	je     0x411152
  411100:	fbstp  TBYTE PTR [eax+0x73]
  411103:	ds push edi
  411105:	pop    esi
  411106:	stos   BYTE PTR es:[edi],al
  411107:	das    
  411108:	and    DWORD PTR [esi],edx
  41110a:	js     0x41114c
  41110c:	cmp    eax,0xc0357523
  411111:	aam    0xbf
  411113:	mov    fs,WORD PTR [edx]
  411115:	adc    eax,0x2739b18b
  41111a:	(bad)  
  41111b:	out    0x8c,eax
  41111d:	xchg   edi,eax
  41111e:	push   cs
  41111f:	and    al,0xce
  411121:	inc    DWORD PTR [edi-0x38]
  411124:	sar    DWORD PTR [edx+0x428eb1d0],0xf5
  41112b:	out    0x38,al
  41112d:	bound  edi,QWORD PTR [edi]
  41112f:	popf   
  411130:	or     dl,BYTE PTR [edx]
  411132:	add    edi,esp
  411134:	loopne 0x41112c
  411136:	dec    ebp
  411137:	xchg   esi,eax
  411138:	sub    eax,0xa250b9de
  41113d:	(bad)  {k3}{z}
  411142:	clc    
  411143:	fld    TBYTE PTR fs:[ebx]
  411146:	xor    DWORD PTR [ebx],ecx
  411148:	cs es pop eax
  41114b:	xchg   ebp,eax
  41114c:	out    dx,al
  41114d:	in     eax,dx
  41114e:	daa    
  41114f:	add    BYTE PTR [edi+0x70],0xac
  411153:	(bad)  
  411154:	out    dx,eax
  411155:	push   es
  411156:	fst    QWORD PTR [ecx]
  411158:	int3   
  411159:	loope  0x41119c
  41115b:	pop    eax
  41115c:	ret    
  41115d:	call   0x93ad:0x3292d49e
  411164:	rol    BYTE PTR [ebp-0x5132d9d2],0xe6
  41116b:	mov    esi,0x8ca6b77d
  411170:	js     0x4111db
  411172:	hlt    
  411173:	mov    edi,0x98215fb2
  411178:	add    al,0xb0
  41117a:	enter  0x2cfd,0x57
  41117e:	jecxz  0x411167
  411180:	imul   DWORD PTR [edi-0x5b]
  411183:	loopne 0x411130
  411185:	int3   
  411186:	inc    ebp
  411187:	cs pushf 
  411189:	push   ds
  41118a:	enter  0x3abc,0xc0
  41118e:	push   esi
  41118f:	dec    eax
  411190:	cli    
  411191:	int    0xc1
  411193:	jp     0x411128
  411195:	lods   eax,DWORD PTR ds:[esi]
  411196:	ss loope 0x41115c
  411199:	pop    eax
  41119a:	fmulp  st(1),st
  41119c:	rcl    BYTE PTR [ecx+edx*4-0x222c0bbe],cl
  4111a3:	loop   0x411131
  4111a5:	or     ebp,DWORD PTR [edi+0xa]
  4111a8:	(bad)  [ebp-0x32]
  4111ab:	dec    ebp
  4111ac:	xor    ah,BYTE PTR [ecx+0x50]
  4111af:	data16 mov al,ds:0xb11a647f
  4111b5:	jg     0x411169
  4111b7:	retf   0xeffe
  4111ba:	sbb    BYTE PTR [ebx+ebx*4-0x3a],bl
  4111be:	sbb    al,0xcf
  4111c0:	ret    
  4111c1:	loope  0x411211
  4111c3:	(bad)  
  4111c4:	stos   DWORD PTR es:[edi],eax
  4111c5:	retf   0xb991
  4111c8:	jns    0x411155
  4111ca:	or     ch,BYTE PTR [eax+0x49dca6d4]
  4111d0:	jge    0x4111a0
  4111d2:	addr16 dec edx
  4111d4:	dec    eax
  4111d5:	aad    0xc1
  4111d7:	outs   dx,BYTE PTR ds:[esi]
  4111d8:	and    al,BYTE PTR [ebp+0x4f]
  4111db:	sub    eax,0x4e4515f3
  4111e0:	pop    edx
  4111e1:	jl     0x411213
  4111e3:	dec    eax
  4111e4:	test   al,0x72
  4111e6:	sbb    dl,BYTE PTR [eiz*8-0x1232f4a2]
  4111ed:	xor    DWORD PTR [edx],0x7c5176bf
  4111f3:	shl    bh,1
  4111f5:	ds mov ch,0xdf
  4111f8:	cmp    al,0x3c
  4111fa:	push   ss
  4111fb:	xchg   edx,eax
  4111fc:	daa    
  4111fd:	xchg   esp,eax
  4111fe:	repnz out 0x1c,eax
  411201:	push   eax
  411202:	dec    edx
  411203:	(bad)  
  411205:	mov    bl,0x92
  411207:	aas    
  411208:	and    esi,DWORD PTR [esi+ecx*1]
  41120b:	jmp    0x411231
  41120d:	(bad)  
  41120e:	xchg   esp,eax
  41120f:	mov    edx,0x810e4f97
  411214:	push   ss
  411215:	bound  esp,QWORD PTR es:[ecx+0x304dccaf]
  41121c:	lods   al,BYTE PTR ds:[esi]
  41121d:	pop    esi
  41121e:	jae    0x4111ed
  411220:	ror    DWORD PTR [eax+esi*8-0x5f0c4d7a],1
  411227:	mov    ecx,0xbb86db14
  41122c:	fwait
  41122d:	clc    
  41122e:	(bad)  
  411230:	jmp    0xad004f9b
  411235:	or     al,0x32
  411237:	dec    ebx
  411238:	xchg   edi,eax
  411239:	retf   0xb2ad
  41123c:	les    ebx,FWORD PTR [edx]
  41123e:	outs   dx,BYTE PTR ds:[esi]
  41123f:	or     eax,0xb3c8824d
  411244:	call   esi
  411246:	push   eax
  411247:	sbb    BYTE PTR [eax],0x9e
  41124a:	xchg   esi,eax
  41124b:	ja     0x411298
  41124d:	je     0x411271
  41124f:	push   edi
  411250:	pop    esp
  411251:	scas   eax,DWORD PTR es:[edi]
  411252:	mov    ebp,0x8e5981b9
  411257:	leave  
  411258:	leave  
  411259:	sbb    DWORD PTR [edi],ebx
  41125b:	les    eax,FWORD PTR [eax+0x3960699b]
  411261:	cmp    DWORD PTR [esi-0x421358c0],0x77
  411268:	pop    es
  411269:	dec    esp
  41126a:	bound  ebx,QWORD PTR [ebp+ebp*4-0x5c28e2b5]
  411271:	dec    esp
  411272:	jb     0x4112b3
  411274:	push   ebp
  411275:	xor    bl,dh
  411277:	leave  
  411278:	jae    0x4112b1
  41127a:	ret    
  41127b:	cdq    
  41127c:	push   edx
  41127d:	jge    0x41129c
  41127f:	cdq    
  411280:	mov    esp,0x5bcf7b2
  411285:	xor    BYTE PTR [ebx+0x3adc1d1c],dh
  41128b:	mov    bh,0x9a
  41128d:	or     al,0xc3
  41128f:	cs retf 
  411291:	push   cs
  411292:	jg     0x41126c
  411294:	xor    BYTE PTR [edi-0x29821345],0xa8
  41129b:	jle    0x41129a
  41129d:	in     eax,0xe9
  41129f:	xchg   dl,ch
  4112a1:	retf   0xa86c
  4112a4:	retf   
  4112a5:	xor    BYTE PTR [ebp+0x1fd33ecb],ah
  4112ab:	fwait
  4112ac:	push   edx
  4112ad:	xchg   ebp,eax
  4112ae:	arpl   sp,bp
  4112b0:	iretw  
  4112b2:	add    al,0x89
  4112b4:	mov    ah,0x4a
  4112b6:	jne    0x4112b2
  4112b8:	retf   
  4112b9:	dec    eax
  4112ba:	mov    dl,0xad
  4112bc:	(bad)  
  4112bd:	inc    esp
  4112be:	lods   al,BYTE PTR ds:[esi]
  4112bf:	addr16 sub eax,0x477a0b43
  4112c5:	sub    eax,0x42ce3be4
  4112ca:	div    ecx
  4112cc:	pop    edi
  4112cd:	sub    dh,BYTE PTR [ebx]
  4112cf:	mov    BYTE PTR [ecx+0x42367425],0x0
  4112d6:	cmp    al,0x37
  4112d8:	inc    edx
  4112d9:	add    BYTE PTR [ecx-0x1],al
  4112dc:	inc    ebp
  4112dd:	in     al,0x81
  4112df:	and    eax,0x423730
  4112e4:	fcom   DWORD PTR [edx+eax*2]
  4112e7:	add    BYTE PTR [ebx],al
  4112e9:	(bad)  
  4112ea:	cmp    ecx,eax
  4112ec:	mov    DWORD PTR ds:0x4236fc,0x7c25
  4112f6:	jb     0x41038b
  4112fc:	mov    al,BYTE PTR [ebp-0x1]
  4112ff:	adc    ecx,0x4335
  411305:	mov    ecx,DWORD PTR [ebp-0x30]
  411308:	sbb    DWORD PTR ds:0x4214e0,0x6a00
  411312:	xor    cl,0xa
  411315:	mov    DWORD PTR ds:0x42367c,0x64d2
  41131f:	jmp    0x41180e
  411324:	or     ah,BYTE PTR [esi+0xc]
  411327:	jmp    0x7902:0xe6eeea6c
  41132e:	mov    al,ds:0x503c2ddf
  411333:	in     eax,0xf0
  411335:	repnz add BYTE PTR [eax],al
  411338:	rol    BYTE PTR [eax+eax*1],cl
  41133b:	add    BYTE PTR [ebx+0x7d],bl
  41133e:	pop    esp
  41133f:	push   ds
  411340:	cmp    eax,0x91874c05
  411345:	(bad)  
  411346:	fidivr DWORD PTR [ebp-0x7b4b4291]
  41134c:	repz add DWORD PTR [ecx+0x40],esp
  411350:	in     eax,dx
  411351:	cmp    BYTE PTR [edx-0x5b],0x97
  411355:	mov    ecx,0x9d460f30
  41135a:	scas   al,BYTE PTR es:[edi]
  41135b:	cdq    
  41135c:	or     al,al
  41135e:	adc    BYTE PTR [bp-0x41],bh
  411362:	and    ch,BYTE PTR [ecx+ebp*8]
  411365:	das    
  411366:	jae    0x41138e
  411368:	pop    ebp
  411369:	or     eax,ebx
  41136b:	sahf   
  41136c:	cmp    edi,DWORD PTR [ebx+0x3e6ae2b3]
  411372:	mov    dl,dl
  411374:	lea    ecx,[eax]
  411376:	pop    ds
  411377:	lea    edx,[ebp+0x54b613d5]
  41137d:	xchg   ebx,eax
  41137e:	test   cl,cl
  411380:	sub    BYTE PTR [eax+0x7684d20c],al
  411386:	imul   edx,DWORD PTR [ecx],0x43
  411389:	mov    edi,0x5fc14c9
  41138e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41138f:	shr    DWORD PTR [edx+edx*1-0x719e0142],1
  411396:	out    0x88,al
  411398:	call   0xd387:0xc326220d
  41139f:	jo     0x411335
  4113a1:	mov    eax,ds:0x7a25ea9e
  4113a6:	out    0xcc,al
  4113a8:	daa    
  4113a9:	pop    ds
  4113aa:	es sti 
  4113ac:	leave  
  4113ad:	pop    esi
  4113ae:	das    
  4113af:	leave  
  4113b0:	jne    0x411407
  4113b2:	sub    BYTE PTR [esi+ecx*8+0x5a1861fe],bl
  4113b9:	pop    ecx
  4113ba:	repz adc BYTE PTR [ecx],cl
  4113bd:	ds dec ecx
  4113bf:	mov    edx,0xf3a9966
  4113c4:	dec    ecx
  4113c5:	mov    dl,0x31
  4113c7:	int3   
  4113c8:	xchg   ebp,eax
  4113c9:	add    ecx,ebx
  4113cb:	lock jp 0x4113c9
  4113ce:	inc    edx
  4113cf:	hlt    
  4113d0:	fstp   QWORD PTR [eax]
  4113d2:	ficom  DWORD PTR [esi-0x4]
  4113d5:	mov    al,ds:0x72b45fc
  4113da:	adc    al,0x3f
  4113dc:	jnp    0x4113d6
  4113de:	scas   al,BYTE PTR es:[edi]
  4113df:	add    DWORD PTR [ebp-0x3e15083c],ebx
  4113e5:	(bad)  
  4113e6:	(bad)  
  4113e8:	jmp    0x2f09e870
  4113ed:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4113ee:	(bad)
  4113f2:	hlt    
  4113f3:	aad    0x2e
  4113f5:	hlt    
  4113f6:	fs xchg ebx,eax
  4113f8:	mov    bl,0xe6
  4113fa:	sti    
  4113fb:	dec    ebx
  4113fc:	adc    BYTE PTR [edi+0x5656fcf3],ch
  411402:	add    al,0xde
  411404:	adc    eax,0xd9225e09
  411409:	leave  
  41140a:	ins    DWORD PTR es:[edi],dx
  41140b:	mov    ebp,DWORD PTR [eax]
  41140d:	xor    BYTE PTR [esi+eiz*8-0x31],0x6f
  411412:	push   cs
  411413:	push   eax
  411414:	xchg   esp,eax
  411415:	sub    al,dh
  411417:	jl     0x41147c
  411419:	mov    cl,0x24
  41141b:	inc    edx
  41141c:	xchg   ebx,eax
  41141d:	jno    0x411474
  41141f:	and    DWORD PTR [edx+0x27e56b50],eax
  411425:	sahf   
  411426:	jo     0x411435
  411428:	jmp    0x982b082b
  41142d:	mov    ch,0x81
  41142f:	dec    ebx
  411430:	sub    DWORD PTR [eax],ecx
  411432:	(bad)  
  411434:	leave  
  411435:	sahf   
  411436:	out    0x8,eax
  411438:	pop    eax
  411439:	in     eax,dx
  41143a:	sbb    al,0xe5
  41143c:	popa   
  41143d:	mov    bh,0x7a
  41143f:	inc    ebp
  411440:	dec    eax
  411441:	cmc    
  411442:	dec    eax
  411443:	outs   dx,BYTE PTR ds:[esi]
  411444:	sub    DWORD PTR [edx+0x7a],ecx
  411447:	xchg   BYTE PTR [ebp-0x50],bl
  41144a:	test   DWORD PTR [ebx+0x79e308f9],eax
  411450:	push   edx
  411451:	(bad)  
  411452:	jge    0x4114c1
  411454:	cdq    
  411455:	and    dl,al
  411457:	adc    eax,0x3ba55c3c
  41145c:	loope  0x4113e4
  41145e:	mov    al,ds:0x941639db
  411463:	fwait
  411464:	je     0x4114a0
  411466:	jmp    0x75fbb8e
  41146b:	mov    DWORD PTR [edx+0x6dc3365e],ebx
  411471:	dec    edx
  411472:	push   ss
  411473:	pop    ecx
  411474:	jg     0x41146a
  411476:	lahf   
  411477:	adc    eax,0x704b8fc0
  41147c:	js     0x411412
  41147e:	dec    ebp
  41147f:	inc    ebp
  411480:	push   ebp
  411481:	jno    0x41145f
  411483:	mov    ebp,0x75a942a8
  411488:	jmp    0x3a55ede9
  41148d:	and    BYTE PTR [edx-0x1ce776f4],dl
  411493:	cmp    al,BYTE PTR es:0x9f04cdfa
  41149a:	mov    esp,0xd86952d0
  41149f:	xchg   ecx,eax
  4114a0:	mov    esp,0x59770a90
  4114a5:	pusha  
  4114a6:	jns    0x4114e1
  4114a8:	add    eax,0x9bc5fb09
  4114ad:	pushf  
  4114ae:	out    dx,eax
  4114af:	aas    
  4114b0:	or     ah,bl
  4114b2:	out    0x14,al
  4114b4:	imul   esp,DWORD PTR [ebx+0x61],0x7e5070e3
  4114bb:	out    0x2b,eax
  4114bd:	push   ecx
  4114be:	leave  
  4114bf:	das    
  4114c0:	inc    edi
  4114c1:	dec    ecx
  4114c2:	push   ss
  4114c3:	cdq    
  4114c4:	js     0x4114fe
  4114c6:	sub    cl,ah
  4114c8:	dec    esi
  4114c9:	rcl    BYTE PTR [edx-0x49],0x40
  4114cd:	outs   dx,DWORD PTR ds:[esi]
  4114ce:	int3   
  4114cf:	rcl    ah,1
  4114d1:	pusha  
  4114d2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4114d3:	data16 jns 0x411489
  4114d6:	pop    ss
  4114d7:	fmul   QWORD PTR [ebx]
  4114d9:	inc    esi
  4114da:	mov    BYTE PTR [ebx+0x42],dl
  4114dd:	pop    eax
  4114de:	ins    DWORD PTR es:[edi],dx
  4114df:	or     DWORD PTR [edx+eax*4+0x3765c523],eax
  4114e6:	and    bl,BYTE PTR [edx]
  4114e8:	or     al,0x53
  4114ea:	mov    edx,0x513164aa
  4114ef:	loopne 0x41154a
  4114f1:	jge    0x411564
  4114f3:	fnstsw WORD PTR [ebx+eax*2]
  4114f6:	outs   dx,BYTE PTR ds:[esi]
  4114f7:	inc    eax
  4114f8:	mov    ah,0x42
  4114fa:	sbb    al,0x91
  4114fc:	mov    cl,0x81
  4114fe:	xlat   BYTE PTR ds:[ebx]
  4114ff:	mov    ss,WORD PTR [esi-0x3631a6e3]
  411505:	sub    al,0x97
  411507:	pop    ebx
  411508:	cwde   
  411509:	add    edi,edi
  41150b:	mov    ah,dh
  41150d:	mov    fs:0x23374311,eax
  411513:	lock stos DWORD PTR es:[edi],eax
  411515:	jbe    0x4114db
  411517:	(bad)  
  411519:	sbb    BYTE PTR [ebx+0x46],dl
  41151c:	jge    0x411501
  41151e:	ret    0x8b4c
  411521:	ror    DWORD PTR [esi],0x74
  411524:	sar    BYTE PTR [eax+0x55],1
  411527:	lods   al,BYTE PTR ds:[esi]
  411528:	dec    esp
  411529:	adc    bl,dh
  41152b:	pop    eax
  41152c:	in     eax,0x15
  41152e:	scas   al,BYTE PTR es:[edi]
  41152f:	mov    ecx,0x59722f3d
  411534:	add    DWORD PTR [eax+0x5a895592],ebp
  41153a:	inc    edi
  41153b:	jle    0x4114d4
  41153d:	sub    ch,dl
  41153f:	sbb    DWORD PTR [ebp-0x6d],edi
  411542:	fsubr  QWORD PTR [eax]
  411544:	adc    DWORD PTR [ebp+ebp*2-0x49],ecx
  411548:	scas   al,BYTE PTR es:[edi]
  411549:	adc    DWORD PTR [edi+0x69],esi
  41154c:	outs   dx,BYTE PTR ds:[esi]
  41154d:	xor    dh,dl
  41154f:	fdivr  DWORD PTR [edx+0x5e]
  411552:	aas    
  411553:	fcom   DWORD PTR [ecx-0x72]
  411556:	test   edi,ebx
  411558:	pop    edi
  411559:	cld    
  41155a:	jecxz  0x4114e8
  41155c:	(bad)  
  41155d:	js     0x41152b
  41155f:	xchg   ecx,eax
  411560:	pop    esi
  411561:	dec    ecx
  411562:	mov    ds:0x6623d0f9,eax
  411567:	push   ds
  411568:	dec    ecx
  411569:	jp     0x4115aa
  41156b:	xor    BYTE PTR [edi],bl
  41156d:	ins    DWORD PTR es:[edi],dx
  41156e:	fstp   DWORD PTR [esp+edi*4+0x16a2ffd5]
  411575:	fcomp  DWORD PTR [ebp+0x64750f7d]
  41157b:	and    DWORD PTR [ecx+eax*4],ebp
  41157e:	add    dh,dh
  411580:	in     al,dx
  411581:	sub    eax,0xbc6cc7fc
  411586:	rol    BYTE PTR [edi],0xad
  411589:	cwde   
  41158a:	pop    ebp
  41158b:	fnstcw WORD PTR [edi]
  41158d:	xchg   ebp,eax
  41158e:	inc    esp
  41158f:	inc    edi
  411590:	and    bh,BYTE PTR [ebx+0x6a2695e0]
  411596:	mov    es,WORD PTR [edi-0x212fe633]
  41159c:	jl     0x411539
  41159e:	and    DWORD PTR [edi+edx*2-0x45a81fc9],edx
  4115a5:	dec    ecx
  4115a6:	xchg   DWORD PTR [eax],ebx
  4115a8:	into   
  4115a9:	pop    eax
  4115aa:	fldcw  WORD PTR [edx]
  4115ac:	repnz dec esp
  4115ae:	cmp    ebx,DWORD PTR [ecx]
  4115b0:	(bad)  
  4115b1:	int3   
  4115b2:	adc    dl,BYTE PTR [eax+0xcb83481]
  4115b8:	(bad)  
  4115b9:	icebp  
  4115ba:	dec    ecx
  4115bb:	adc    edx,DWORD PTR [ebx]
  4115bd:	dec    esi
  4115be:	imul   esp,DWORD PTR [ebx-0x80],0x93b5129
  4115c5:	mov    ds:0x942e8458,al
  4115ca:	iret   
  4115cb:	adc    eax,0xdcccff37
  4115d0:	sbb    edi,0x2b
  4115d3:	int3   
  4115d4:	pop    ds
  4115d5:	int    0x1
  4115d7:	imul   edi,DWORD PTR [edi],0xffffff95
  4115da:	loope  0x4115f1
  4115dc:	mov    eax,DWORD PTR [ecx-0x5ad21110]
  4115e2:	aam    0xe
  4115e4:	aam    0x55
  4115e6:	scas   al,BYTE PTR es:[edi]
  4115e7:	cmp    DWORD PTR [eax],ebp
  4115e9:	adc    BYTE PTR [ecx+0x6a],ah
  4115ec:	cmp    bl,BYTE PTR [edi+edx*1-0x32a1ba9c]
  4115f3:	pop    edx
  4115f4:	(bad)  
  4115f5:	dec    edx
  4115f6:	test   DWORD PTR [edi+0x44],esi
  4115f9:	dec    edx
  4115fa:	lock inc esi
  4115fc:	loopne 0x41166a
  4115fe:	mov    al,ds:0x65c635d1
  411603:	xchg   ah,cl
  411605:	pop    edi
  411606:	ficom  WORD PTR [eax+0x25]
  411609:	aam    0x28
  41160b:	push   esp
  41160c:	xchg   ecx,eax
  41160d:	pop    eax
  41160e:	or     al,0x1f
  411610:	mov    eax,0xc3e85f84
  411615:	add    eax,0xd3ea9ab3
  41161a:	leave  
  41161b:	pop    esi
  41161c:	add    esi,ebp
  41161e:	out    dx,al
  41161f:	aas    
  411620:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411621:	push   es
  411622:	mov    al,BYTE PTR [edi-0x37]
  411625:	rcl    BYTE PTR [ecx],cl
  411627:	mov    ch,0xe0
  411629:	mov    eax,ds:0x271db23
  41162e:	push   esp
  41162f:	cmp    BYTE PTR [eax],bh
  411631:	jl     0x4115f6
  411633:	xchg   BYTE PTR [edi-0x6],bh
  411636:	mov    esp,0x155740c6
  41163b:	out    dx,al
  41163c:	clc    
  41163d:	jb     0x4115cb
  41163f:	mov    bh,dh
  411641:	aaa    
  411642:	popf   
  411643:	xchg   DWORD PTR [ebp-0x25355774],ecx
  411649:	or     BYTE PTR [ebx],0x24
  41164c:	or     eax,0x16c4e773
  411651:	adc    edi,DWORD PTR ds:0x32025ab
  411657:	pop    esi
  411658:	leave  
  411659:	jmp    0x8e7c6dab
  41165e:	sub    dl,BYTE PTR [eax+0x3ee99359]
  411664:	add    al,0x4e
  411666:	jmp    0x411653
  411668:	or     ah,bh
  41166a:	dec    esp
  41166b:	xor    BYTE PTR [edi],0x4e
  41166e:	iret   
  41166f:	and    BYTE PTR [ebx-0x44],bl
  411672:	call   0x8fbb730
  411677:	mov    ecx,0x6036261b
  41167c:	cmp    ebp,esp
  41167e:	mov    ds:0xe8f9d866,al
  411683:	xor    BYTE PTR [eax],ch
  411685:	scas   al,BYTE PTR es:[edi]
  411686:	xor    DWORD PTR [eax+0x17ae81c1],ebp
  41168c:	nop
  41168d:	sbb    BYTE PTR [esi+0x5a],0xad
  411691:	or     eax,0x97c7a718
  411696:	je     0x4116df
  411698:	popf   
  411699:	cmp    ecx,DWORD PTR [edi]
  41169b:	out    dx,al
  41169c:	xchg   edi,eax
  41169d:	jns    0x41165b
  41169f:	(bad)  
  4116a0:	push   0xd502b0bf
  4116a5:	pusha  
  4116a6:	fwait
  4116a7:	btr    DWORD PTR [ebx],ebx
  4116aa:	in     al,0x4e
  4116ac:	mov    esi,0x8893338a
  4116b1:	jns    0x4116a4
  4116b3:	mov    edx,0xd643520f
  4116b8:	shl    DWORD PTR [eax+eiz*2],0xed
  4116bc:	call   0x239c:0x1630c249
  4116c3:	out    0x17,eax
  4116c5:	jecxz  0x41172c
  4116c7:	(bad)  [esi]
  4116c9:	push   0x76ebbd60
  4116ce:	dec    esi
  4116cf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4116d0:	mov    ch,0x29
  4116d2:	in     eax,0xe3
  4116d4:	cld    
  4116d5:	inc    esp
  4116d6:	jae    0x411664
  4116d8:	xlat   BYTE PTR ds:[ebx]
  4116d9:	jmp    0xb081902
  4116de:	push   ebp
  4116df:	fwait
  4116e0:	and    al,0xfe
  4116e2:	outs   dx,DWORD PTR ds:[esi]
  4116e3:	sbb    BYTE PTR [edi-0x29],dh
  4116e6:	sub    DWORD PTR [eax],ebx
  4116e8:	ins    BYTE PTR es:[edi],dx
  4116e9:	nop
  4116ea:	xlat   BYTE PTR ds:[ebx]
  4116eb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4116ec:	adc    al,0x60
  4116ee:	pop    esp
  4116ef:	jbe    0x41173d
  4116f1:	mov    BYTE PTR [edx],cl
  4116f3:	lock idiv BYTE PTR [esi+0xfc6948f]
  4116fa:	xor    DWORD PTR ss:[ebx-0x50],ecx
  4116fe:	fadd   QWORD PTR [ecx-0x31]
  411701:	mov    ch,0xde
  411703:	aam    0x20
  411705:	push   ebx
  411706:	sub    dh,BYTE PTR [edx]
  411708:	inc    esi
  411709:	fs ins BYTE PTR es:[edi],dx
  41170b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41170c:	arpl   WORD PTR [eax],cx
  41170e:	push   0xffffff90
  411710:	hlt    
  411711:	mov    esp,0x31c21551
  411716:	das    
  411717:	jnp    0x411699
  411719:	dec    edi
  41171a:	sbb    al,BYTE PTR [eax+0x24]
  41171d:	call   0xcb27:0xb3eb735c
  411724:	bound  ecx,QWORD PTR [eax-0x29]
  411727:	cld    
  411728:	push   esp
  411729:	les    edi,FWORD PTR [ebx-0x38]
  41172c:	sub    ebp,DWORD PTR [ecx+ebx*2+0x4dfcaef9]
  411733:	scas   al,BYTE PTR es:[edi]
  411734:	in     eax,0x1c
  411736:	fdiv   DWORD PTR [ebx-0x7fd9c493]
  41173c:	xchg   edi,eax
  41173d:	xchg   edx,eax
  41173e:	mov    DWORD PTR [eax+edx*8-0x50],0x9ead4ed7
  411746:	xor    eax,0x6c01efcf
  41174b:	pop    esp
  41174c:	jbe    0x4117a5
  41174e:	adc    al,0x53
  411750:	fwait
  411751:	push   0x7
  411753:	jg     0x411706
  411755:	mov    al,0xb3
  411757:	inc    ebp
  411758:	stos   DWORD PTR es:[edi],eax
  411759:	cs pop ebp
  41175b:	out    dx,eax
  41175c:	mov    esp,0x5de337c6
  411761:	ficomp DWORD PTR [esi]
  411763:	mov    gs,WORD PTR [esi]
  411765:	push   esi
  411766:	dec    eax
  411767:	movzx  esp,BYTE PTR [ebx+0x2e]
  41176b:	lods   al,BYTE PTR ds:[esi]
  41176c:	cld    
  41176d:	xor    DWORD PTR [edi-0x24],esi
  411770:	ret    0xa948
  411773:	sub    BYTE PTR [edi],dh
  411775:	jmp    0x4117e4
  411777:	fcmovu st,st(0)
  411779:	shl    BYTE PTR [ebp-0x5c],cl
  41177c:	sbb    ecx,DWORD PTR [ebx]
  41177e:	cmp    esi,ebx
  411780:	hlt    
  411781:	cmp    ecx,DWORD PTR [edx+eax*1]
  411784:	bound  ebx,QWORD PTR ds:0xa3516102
  41178a:	lock push 0xe9601f55
  411790:	push   edi
  411791:	and    al,0xf5
  411793:	test   al,0xdf
  411795:	cli    
  411796:	add    bh,BYTE PTR [ebx]
  411798:	sub    edx,0xaec26526
  41179e:	outs   dx,BYTE PTR ds:[esi]
  41179f:	call   0x4d7ee73f
  4117a4:	mov    ebx,0xe1d533f1
  4117a9:	jge    0x4117a4
  4117ab:	sahf   
  4117ac:	in     eax,0xe6
  4117ae:	mov    WORD PTR [ebx],es
  4117b0:	mov    edi,0xe5227ff0
  4117b5:	adc    BYTE PTR [eax-0x4b859b03],cl
  4117bb:	or     eax,0x446ed60c
  4117c0:	call   0xb90c:0x13dc2429
  4117c7:	mov    al,ds:0x4b22cbac
  4117cc:	adc    al,0x35
  4117ce:	jmp    0xdcae8274
  4117d3:	int    0x97
  4117d5:	push   esi
  4117d6:	jecxz  0x4117dd
  4117d8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4117d9:	adc    edi,DWORD PTR [ebx-0x6a0afe3b]
  4117df:	cdq    
  4117e0:	test   DWORD PTR [ebx],eax
  4117e2:	xchg   ebx,eax
  4117e3:	in     al,0x73
  4117e5:	pop    esp
  4117e6:	test   al,0xe8
  4117e8:	(bad)  
  4117e9:	cli    
  4117ea:	daa    
  4117eb:	leave  
  4117ec:	loop   0x41179a
  4117ee:	ins    BYTE PTR es:[edi],dx
  4117ef:	mov    BYTE PTR ds:0xa33b2f4f,ch
  4117f5:	jecxz  0x4117fa
  4117f7:	loopne 0x4117a0
  4117f9:	or     eax,DWORD PTR [eax-0x43]
  4117fc:	repnz adc cl,BYTE PTR [edi-0x19d4c8f3]
  411803:	xor    BYTE PTR [ecx],dh
  411805:	push   es
  411806:	fimul  DWORD PTR [edi-0xbf53558]
  41180c:	push   ds
  41180d:	or     esi,DWORD PTR [edx-0x7e2ed50b]
  411813:	and    eax,0x423684
  411818:	add    BYTE PTR [eax],al
  41181a:	add    BYTE PTR [eax],al
  41181c:	mov    ecx,DWORD PTR ds:0x423684
  411822:	inc    ecx
  411823:	mov    DWORD PTR ds:0x423684,ecx
  411829:	cmp    DWORD PTR ds:0x423684,0x6
  411830:	jne    0x411846
  411836:	push   0x19a8
  41183b:	push   0x21c5
  411840:	call   DWORD PTR ds:0x41f160
  411846:	cmp    DWORD PTR ds:0x423684,0x5
  41184d:	jne    0x411860
  411853:	mov    ecx,DWORD PTR ds:0x423684
  411859:	inc    ecx
  41185a:	mov    DWORD PTR ds:0x423684,ecx
  411860:	cmp    DWORD PTR ds:0x423684,0x11
  411867:	jb     0x41181c
  41186d:	neg    ecx
  41186f:	mov    ecx,DWORD PTR [ebp-0x34]
  411872:	and    DWORD PTR ds:0x4236b0,0x1b27
  41187c:	xor    cl,0xa
  41187f:	add    al,dl
  411881:	add    DWORD PTR ds:0x4236fc,0x79c6
  41188b:	add    cl,0xb
  41188e:	mov    DWORD PTR ds:0x423704,0x3edc
  411898:	ror    al,cl
  41189a:	mov    ecx,DWORD PTR [ebp-0x10]
  41189d:	add    ecx,DWORD PTR [ebp-0x24]
  4118a0:	sbb    DWORD PTR ds:0x4236bc,0x3a46
  4118aa:	mov    BYTE PTR [ecx],al
  4118ac:	adc    DWORD PTR ds:0x423734,edi
  4118b2:	mov    eax,DWORD PTR [ebp-0x10]
  4118b5:	and    DWORD PTR ds:0x4214ec,0x0
  4118bf:	xor    ecx,ecx
  4118c1:	xor    ecx,DWORD PTR ds:0x4214ec
  4118c7:	inc    ecx
  4118c8:	mov    DWORD PTR ds:0x4214ec,ecx
  4118ce:	cmp    DWORD PTR ds:0x4214ec,0x1d
  4118d5:	jne    0x4118ee
  4118db:	push   0x4214f8
  4118e0:	push   0x4214e4
  4118e5:	push   DWORD PTR [ebp-0xc]
  4118e8:	call   DWORD PTR ds:0x41f038
  4118ee:	cmp    DWORD PTR ds:0x4214ec,0x10
  4118f5:	jb     0x4118bf
  4118fb:	xor    ecx,ecx
  4118fd:	or     ecx,DWORD PTR ds:0x421518
  411903:	mov    ecx,DWORD PTR [ecx]
  411905:	sub    DWORD PTR ds:0x4236b0,ecx
  41190b:	mov    ecx,DWORD PTR [ebp-0x14]
  41190e:	xor    DWORD PTR ds:0x423744,0x4214f4
  411918:	sub    eax,edi
  41191a:	mov    DWORD PTR ds:0x4236c4,0x1bb0
  411924:	xor    eax,esi
  411926:	cmp    eax,ecx
  411928:	jne    0x41234d
  41192e:	or     ecx,DWORD PTR ds:0x423668
  411934:	mov    eax,DWORD PTR [ebp-0x18]
  411937:	mov    ecx,DWORD PTR [ebp-0xc]
  41193a:	or     DWORD PTR ds:0x42367c,0x4214fc
  411944:	jmp    0x411e33
  411949:	enter  0x60b3,0xa9
  41194d:	jnp    0x41194a
  41194f:	leave  
  411950:	repz xchg esp,eax
  411952:	xchg   ecx,eax
  411953:	ret    
  411954:	cmp    BYTE PTR [ebp-0x40],cl
  411957:	push   ebp
  411958:	in     al,0xc2
  41195a:	test   DWORD PTR [eax],0x4d200
  411960:	add    BYTE PTR [edx],cl
  411962:	adc    BYTE PTR [edx],dl
  411964:	inc    esi
  411965:	stc    
  411966:	dec    ecx
  411967:	aad    0xf8
  411969:	arpl   WORD PTR [eax],ax
  41196b:	cmp    eax,0x3d45df4f
  411970:	or     al,0x47
  411972:	cmc    
  411973:	ja     0x411958
  411975:	loopne 0x411900
  411977:	mov    dl,0xbf
  411979:	sub    al,0x4a
  41197b:	cmp    esi,DWORD PTR [ebp+0x266039ae]
  411981:	or     ebp,esi
  411983:	pop    ss
  411984:	sar    BYTE PTR [ebx],cl
  411986:	jmp    0x3688:0xc5e87805
  41198d:	and    ebx,edi
  41198f:	and    esp,DWORD PTR [esi+0x4c3beb80]
  411995:	push   0xae7a0fe6
  41199a:	(bad)  
  41199b:	sti    
  41199c:	adc    edx,DWORD PTR [eax+edi*8+0x340662a0]
  4119a3:	cdq    
  4119a4:	lock cld 
  4119a6:	sub    eax,0x82b9c6a4
  4119ab:	sbb    BYTE PTR [edx],0xdf
  4119ae:	mov    ebx,0xc8986fbf
  4119b3:	push   ebp
  4119b4:	imul   ecx,DWORD PTR [esi],0xfffffffe
  4119b7:	dec    ecx
  4119b8:	aaa    
  4119b9:	inc    esi
  4119ba:	sbb    bh,al
  4119bc:	inc    esi
  4119bd:	dec    ecx
  4119be:	or     DWORD PTR [ebx+ecx*8+0x58dec7c2],esp
  4119c5:	shl    eax,cl
  4119c7:	push   ss
  4119c8:	(bad)  
  4119c9:	jb     0x411a1f
  4119cb:	ins    BYTE PTR es:[edi],dx
  4119cc:	push   ds
  4119cd:	push   ss
  4119ce:	push   edx
  4119cf:	xchg   edx,eax
  4119d0:	ror    edx,0xf6
  4119d3:	xor    BYTE PTR [ebp+0x63],0x22
  4119d7:	daa    
  4119d8:	jbe    0x411a19
  4119da:	jp     0x411a57
  4119dc:	les    edx,FWORD PTR [eax-0x1d]
  4119df:	je     0x411a21
  4119e1:	sub    DWORD PTR [ebx],ecx
  4119e3:	mov    dh,ch
  4119e5:	push   ds
  4119e6:	sti    
  4119e7:	pop    esp
  4119e8:	pop    ecx
  4119e9:	sbb    esp,DWORD PTR [esi]
  4119eb:	add    al,0x6c
  4119ed:	add    DWORD PTR [edi],ecx
  4119ef:	jno    0x411a49
  4119f1:	add    ch,al
  4119f3:	int    0xa
  4119f5:	scas   al,BYTE PTR es:[edi]
  4119f6:	push   ss
  4119f7:	mov    ecx,0x1e022936
  4119fc:	addr16 out 0x54,eax
  4119ff:	lods   al,BYTE PTR ds:[esi]
  411a00:	xchg   esp,eax
  411a01:	popa   
  411a02:	cmp    al,0x8b
  411a04:	sbb    bh,BYTE PTR [esi+0x21b9ecda]
  411a0a:	test   eax,0xdbbe809d
  411a0f:	(bad)  
  411a10:	addr16 out 0xef,al
  411a13:	jo     0x411a18
  411a15:	(bad)
  411a18:	cld    
  411a19:	setle  BYTE PTR [edi-0x49]
  411a1d:	jbe    0x411a6f
  411a1f:	mov    dh,0x63
  411a21:	je     0x4119de
  411a23:	popa   
  411a24:	mov    bh,0x9
  411a26:	xchg   ebp,eax
  411a27:	ss jne 0x411a89
  411a2a:	dec    esp
  411a2b:	jno    0x411a30
  411a2d:	dec    esi
  411a2e:	out    dx,al
  411a2f:	jb     0x4119dd
  411a31:	sahf   
  411a32:	xor    ecx,DWORD PTR [edx-0x1d85ed73]
  411a38:	daa    
  411a39:	data16 jae 0x411ab7
  411a3c:	mov    ch,0x89
  411a3e:	fs jns 0x4119e4
  411a41:	clc    
  411a42:	adc    ah,BYTE PTR [esi]
  411a44:	mov    BYTE PTR [eax-0x25],cl
  411a47:	std    
  411a48:	lods   eax,DWORD PTR ds:[esi]
  411a49:	fiadd  DWORD PTR [ebp+0x5a]
  411a4c:	sub    esp,0x21b5d08c
  411a52:	adc    al,0x29
  411a54:	sti    
  411a55:	inc    ebp
  411a56:	or     eax,0x516a1984
  411a5b:	mov    esp,0x1225f80
  411a60:	imul   ebx,DWORD PTR [edi],0x64ff2452
  411a66:	fimul  DWORD PTR [edi+0x16d9e016]
  411a6c:	out    0x9e,eax
  411a6e:	add    BYTE PTR [ebx],bh
  411a70:	stos   BYTE PTR es:[edi],al
  411a71:	adc    ax,0x3956
  411a75:	adc    al,al
  411a77:	sub    eax,0x7bc87a8c
  411a7c:	fdiv   DWORD PTR [eax]
  411a7e:	outs   dx,DWORD PTR ds:[esi]
  411a7f:	mov    ds:0x568a2447,al
  411a84:	popf   
  411a85:	je     0x411a88
  411a87:	dec    eax
  411a88:	ds daa 
  411a8a:	push   edx
  411a8b:	arpl   bx,ax
  411a8d:	jo     0x411a88
  411a8f:	ins    BYTE PTR es:[edi],dx
  411a90:	frstor [eax-0x33b3f0f2]
  411a96:	cmp    eax,0xd2f53afd
  411a9b:	or     cl,BYTE PTR [ebx]
  411a9d:	jbe    0x411a72
  411a9f:	sahf   
  411aa0:	fimul  WORD PTR [esi]
  411aa2:	cmp    bl,BYTE PTR [eax-0x469af15a]
  411aa8:	mov    ecx,db3
  411aab:	repz js 0x411a57
  411aae:	or     BYTE PTR [ebp+0x35],bh
  411ab1:	sub    bh,BYTE PTR [ecx+0x4]
  411ab4:	inc    edi
  411ab5:	les    ecx,FWORD PTR [edi+0x17]
  411ab8:	dec    esp
  411ab9:	loopne 0x411ac1
  411abb:	lea    edi,[esi-0x4f]
  411abe:	loopne 0x411b3a
  411ac0:	mov    cl,0x80
  411ac2:	jno    0x411b04
  411ac4:	in     eax,dx
  411ac5:	icebp  
  411ac6:	jle    0x411b34
  411ac8:	outs   dx,DWORD PTR ds:[esi]
  411ac9:	sub    ecx,edi
  411acb:	xchg   DWORD PTR [ebx+eiz*1],eax
  411ace:	jmp    0x6e4f56a7
  411ad3:	sbb    DWORD PTR [bx-0x17c9],esi
  411ad8:	addr16 jns 0x411ae0
  411adb:	xchg   esi,eax
  411adc:	fbstp  TBYTE PTR [ecx+0x26]
  411adf:	ret    
  411ae0:	push   esp
  411ae1:	mov    edx,fs
  411ae3:	and    eax,0x2fdb1952
  411ae8:	and    BYTE PTR [ecx],bl
  411aea:	and    BYTE PTR [ebp-0x85f8f37],dh
  411af0:	mov    edi,0x1a9c4aff
  411af5:	dec    esp
  411af6:	out    0xd3,eax
  411af8:	lock sub dh,BYTE PTR [ebx+0x56d6e581]
  411aff:	xlat   BYTE PTR ds:[ebx]
  411b00:	mov    cl,0x85
  411b02:	pop    ds
  411b03:	mov    DWORD PTR [ebp-0x59cd89ba],ebp
  411b09:	ja     0x411af4
  411b0b:	or     DWORD PTR [esi-0x1],ecx
  411b0e:	fiadd  DWORD PTR [eax+0x1f380f20]
  411b14:	sbb    BYTE PTR ds:[edx-0x553a049f],dh
  411b1b:	mov    cl,0x2b
  411b1d:	popf   
  411b1e:	jo     0x411b95
  411b20:	and    al,0x29
  411b22:	mov    ecx,0x396eb005
  411b27:	add    al,0x68
  411b29:	or     bl,BYTE PTR [edi+0x2b]
  411b2c:	(bad)  
  411b2d:	lock push ecx
  411b2f:	ret    0x97f0
  411b32:	ds sub al,0xb1
  411b35:	pop    esi
  411b36:	add    DWORD PTR [ebp+edi*1-0x3e6e929d],ecx
  411b3d:	and    al,al
  411b3f:	and    edx,DWORD PTR [ebx-0x5c]
  411b42:	scas   eax,DWORD PTR es:[edi]
  411b43:	sar    ebx,0x44
  411b46:	xchg   ecx,eax
  411b47:	push   eax
  411b48:	loop   0x411b50
  411b4a:	pusha  
  411b4b:	les    esp,FWORD PTR [esi]
  411b4d:	out    dx,eax
  411b4e:	add    DWORD PTR [esi],0xee1f6de8
  411b54:	test   DWORD PTR [edx+0x7d],esp
  411b57:	int3   
  411b58:	enter  0x2f67,0x75
  411b5c:	add    eax,0xe0f650ab
  411b61:	imul   esp,DWORD PTR [esi],0x8aea4903
  411b67:	cmp    al,0x1f
  411b69:	xor    eax,0x1c17b053
  411b6e:	addr16 mov dl,0xd2
  411b71:	out    0x51,eax
  411b73:	in     al,0x5b
  411b75:	popa   
  411b76:	inc    ecx
  411b77:	stos   BYTE PTR es:[edi],al
  411b78:	mov    al,ds:0x3a4cce52
  411b7d:	push   edx
  411b7e:	jl     0x411bb7
  411b80:	or     edx,eax
  411b82:	xchg   esp,eax
  411b83:	pop    es
  411b84:	int3   
  411b85:	jecxz  0x411b2d
  411b87:	test   ah,bl
  411b89:	dec    esi
  411b8b:	mov    ch,0x2d
  411b8d:	iret   
  411b8e:	aaa    
  411b8f:	inc    ecx
  411b90:	jg     0x411bdb
  411b92:	gs push esi
  411b94:	aas    
  411b95:	pop    esi
  411b96:	mov    edx,0xc3078b30
  411b9b:	sbb    DWORD PTR [eax-0x1c],ecx
  411b9e:	(bad)  
  411b9f:	jno    0x411bbf
  411ba1:	test   dh,dh
  411ba3:	ins    BYTE PTR es:[edi],dx
  411ba4:	adc    BYTE PTR [ebp+0x77],ah
  411ba7:	(bad)  
  411ba9:	jns    0x411b3d
  411bab:	pop    esp
  411bac:	dec    esp
  411bad:	sub    DWORD PTR [eax+0x70],edx
  411bb0:	inc    edx
  411bb1:	cmp    DWORD PTR [eax+esi*8-0x2f8ca7a9],esp
  411bb8:	cld    
  411bb9:	sub    DWORD PTR [esi],edi
  411bbb:	ret    
  411bbc:	jnp    0x411b40
  411bbe:	pushf  
  411bbf:	xchg   ebp,eax
  411bc0:	jmp    0x411c28
  411bc2:	aad    0xac
  411bc4:	pop    edx
  411bc5:	fwait
  411bc6:	mov    esi,0x4a3f49c1
  411bcb:	jnp    0x411ba4
  411bcd:	lods   al,BYTE PTR ds:[esi]
  411bce:	das    
  411bcf:	inc    edx
  411bd0:	les    edi,FWORD PTR [ebp-0x2e]
  411bd3:	jp     0x411c21
  411bd5:	in     al,dx
  411bd6:	pop    ebx
  411bd7:	dec    ebx
  411bd8:	dec    edx
  411bd9:	enter  0x9da5,0x31
  411bdd:	mov    esi,0xd4483d2
  411be2:	hlt    
  411be3:	mov    ds:0x4cbf3cc2,eax
  411be8:	dec    esp
  411be9:	jae    0x411c4a
  411beb:	dec    eax
  411bec:	cwde   
  411bed:	scas   eax,DWORD PTR es:[edi]
  411bee:	xor    eax,0xef545ea2
  411bf3:	std    
  411bf4:	in     al,dx
  411bf5:	xor    DWORD PTR [ebp+0x1634e19b],ecx
  411bfb:	dec    edi
  411bfc:	dec    DWORD PTR [ebx+0x68878544]
  411c02:	cdq    
  411c03:	jns    0x411c83
  411c05:	inc    DWORD PTR [eax]
  411c07:	xchg   esi,eax
  411c08:	js     0x411c5f
  411c0a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411c0b:	adc    DWORD PTR [ebx-0x4c3c0367],ebp
  411c11:	retf   0x877c
  411c14:	cmc    
  411c15:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411c16:	adc    bh,BYTE PTR [ecx+0x2f6127cf]
  411c1c:	in     al,0x5e
  411c1e:	cmp    al,0x54
  411c20:	jmp    0x2d76f6bc
  411c25:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411c26:	jns    0x411c80
  411c28:	mov    ebp,0x30abd0ea
  411c2d:	mov    ecx,0x712ab670
  411c32:	outs   dx,DWORD PTR ds:[esi]
  411c33:	fs cli 
  411c35:	mov    cl,0x5d
  411c37:	aaa    
  411c38:	mov    ah,0xb2
  411c3a:	enter  0xdd1b,0x97
  411c3e:	xchg   edi,eax
  411c3f:	adc    DWORD PTR [edx],ebx
  411c41:	mov    ebp,0xd4d20e9d
  411c46:	dec    ebp
  411c47:	dec    eax
  411c48:	push   esi
  411c49:	pop    esi
  411c4a:	mov    edx,0xdd6b60b9
  411c4f:	jecxz  0x411c91
  411c51:	adc    DWORD PTR [edi],esp
  411c53:	inc    ebp
  411c54:	sti    
  411c55:	or     BYTE PTR [eax+edi*2-0x5a7e0c81],dh
  411c5c:	and    BYTE PTR [edi],bl
  411c5e:	in     eax,0x68
  411c60:	xor    al,0x2
  411c62:	xchg   edi,eax
  411c63:	ret    0xa702
  411c66:	push   esi
  411c67:	gs jnp 0x411c0b
  411c6a:	jnp    0x411c49
  411c6c:	std    
  411c6d:	js     0x411cd0
  411c6f:	mov    ds:0xb3f70060,eax
  411c74:	(bad)  ds:0x844cf177
  411c7a:	sub    eax,0x85ff18f9
  411c7f:	pop    edi
  411c80:	cwde   
  411c81:	or     eax,0x4f44e8b9
  411c86:	mov    eax,ds:0xf32d8169
  411c8b:	jne    0x411cb8
  411c8d:	repz iret 
  411c8f:	fld    DWORD PTR [esi-0x6f]
  411c92:	call   0x400e58ab
  411c97:	or     BYTE PTR [edi-0x13],cl
  411c9a:	call   0xec146c86
  411c9f:	test   al,0xc2
  411ca1:	mov    al,BYTE PTR [ecx-0x53e7f178]
  411ca7:	pop    ecx
  411ca8:	pushf  
  411ca9:	cs xchg edx,eax
  411cab:	fwait
  411cac:	mov    esi,0x4e642f2b
  411cb1:	sbb    BYTE PTR [edx],bh
  411cb3:	call   0xd61a9345
  411cb8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411cb9:	pop    ecx
  411cba:	or     DWORD PTR [edi-0x7f],esi
  411cbd:	add    ch,BYTE PTR [edi+0x8a1c111]
  411cc3:	(bad)  
  411cc5:	ror    BYTE PTR [eax+0x72],0x90
  411cc9:	addr16 imul esp,esp,0xf81fc7fd
  411cd0:	addr16 loope 0x411c93
  411cd3:	jmp    0x27f5c638
  411cd8:	les    edi,FWORD PTR [eax+0x12]
  411cdb:	test   eax,0xa6a7ccde
  411ce0:	jae    0x411ca5
  411ce2:	(bad)
  411ce5:	xor    eax,0x9d870632
  411cea:	scas   al,BYTE PTR es:[edi]
  411ceb:	adc    DWORD PTR [ebx-0x37],esi
  411cee:	xchg   esi,eax
  411cef:	mov    bl,0xb3
  411cf1:	pushf  
  411cf2:	mov    esi,ds
  411cf4:	inc    esp
  411cf5:	mov    fs,WORD PTR [ecx+0x61]
  411cf8:	mov    edx,0x32aa7f0c
  411cfd:	push   ds
  411cfe:	sub    al,0xa2
  411d00:	loop   0x411ce7
  411d02:	mov    edi,0x9266439b
  411d07:	adc    al,0x6d
  411d09:	leave  
  411d0a:	pop    ds
  411d0b:	add    ebp,DWORD PTR [edx+edx*1-0x59]
  411d0f:	loop   0x411cef
  411d11:	and    DWORD PTR [ebp-0xc],0x54
  411d15:	(bad)  
  411d16:	sub    BYTE PTR [eax+eax*2+0x4aa3ef3f],ah
  411d1d:	jno    0x411d40
  411d1f:	popf   
  411d20:	inc    DWORD PTR [ecx-0x26]
  411d23:	sub    ecx,ebx
  411d25:	loop   0x411d4a
  411d27:	test   eax,0x882878a7
  411d2c:	xchg   BYTE PTR [esi],bh
  411d2e:	push   es
  411d2f:	call   0x753265d1
  411d34:	and    edx,DWORD PTR [ebx-0x24]
  411d37:	lds    edx,FWORD PTR [ebx-0x5b2f9db0]
  411d3d:	loopne 0x411cd5
  411d3f:	cmp    al,0x9e
  411d41:	or     BYTE PTR [edi+0x5e],0x7f
  411d45:	dec    eax
  411d46:	jb     0x411db2
  411d48:	add    bl,al
  411d4a:	xor    cl,BYTE PTR [eax]
  411d4c:	int    0x2d
  411d4e:	loop   0x411d79
  411d50:	out    dx,eax
  411d51:	cmp    DWORD PTR [ebx+0x1d],esp
  411d54:	mov    ds:0xf987b71a,eax
  411d59:	push   es
  411d5a:	inc    esi
  411d5b:	adc    dl,BYTE PTR [eax]
  411d5d:	imul   eax,DWORD PTR ds:0x8cb55f1f,0xffffffd9
  411d64:	xchg   edx,eax
  411d65:	add    ebp,DWORD PTR [esi+0x33a90dad]
  411d6b:	pop    ecx
  411d6c:	in     al,dx
  411d6d:	add    edi,esi
  411d6f:	mov    ecx,0xe425de8b
  411d74:	xchg   di,ax
  411d76:	cmp    al,0x2f
  411d78:	dec    eax
  411d79:	scas   al,BYTE PTR es:[edi]
  411d7a:	in     eax,dx
  411d7b:	call   0x7ff7774b
  411d80:	add    al,0xe9
  411d82:	out    0xcc,eax
  411d84:	dec    esi
  411d85:	mov    ecx,0xa9d86df4
  411d8a:	std    
  411d8b:	jmp    0x411d1d
  411d8d:	jb     0x411d43
  411d8f:	ins    DWORD PTR es:[edi],dx
  411d90:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411d91:	daa    
  411d92:	add    ebx,DWORD PTR [esi-0x1c]
  411d95:	es scas eax,DWORD PTR es:[edi]
  411d97:	mov    ebp,esi
  411d99:	(bad)  
  411d9a:	in     al,0x54
  411d9c:	popf   
  411d9d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411d9e:	push   edx
  411d9f:	sub    DWORD PTR [ebx+0x75],0xffffffbc
  411da3:	pushf  
  411da4:	add    BYTE PTR [eax-0x29],ah
  411da7:	xchg   edi,eax
  411da8:	je     0x411e0b
  411daa:	xchg   edi,edi
  411dac:	add    BYTE PTR [edx],ah
  411dae:	push   ds
  411daf:	add    DWORD PTR [eax],0xc345ec5c
  411db5:	popf   
  411db6:	jmp    0x411d72
  411db8:	ret    0xb10f
  411dbb:	add    eax,0xd429065f
  411dc0:	push   0x3cf8e17a
  411dc5:	adc    edx,DWORD PTR [edi+0x67]
  411dc8:	clc    
  411dc9:	mov    dl,0x15
  411dcb:	jae    0x411e19
  411dcd:	lods   al,BYTE PTR fs:[esi]
  411dcf:	retf   
  411dd0:	test   BYTE PTR [eax-0x69],cl
  411dd3:	push   edi
  411dd4:	retf   
  411dd5:	lods   eax,DWORD PTR ds:[esi]
  411dd6:	add    eax,0x5e6c36f
  411ddb:	xchg   BYTE PTR [ebx-0x36],al
  411dde:	mov    ds:0x532189f9,eax
  411de3:	or     eax,0x1a7e45e9
  411de8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411de9:	pop    edi
  411dea:	retf   
  411deb:	add    eax,0x3ad23391
  411df0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411df1:	push   esi
  411df2:	out    dx,al
  411df3:	(bad)  
  411df4:	jmp    0x3b32653d
  411df9:	mov    eax,0x84f3f5e6
  411dfe:	pop    ss
  411dff:	mov    es,WORD PTR [eax+0x55]
  411e02:	cli    
  411e03:	cmp    eax,0x43952528
  411e08:	nop
  411e09:	popf   
  411e0a:	mov    DWORD PTR [ecx+ebx*2],ecx
  411e0d:	jmp    0x1f54:0x298ab9ca
  411e14:	jmp    0x3fb620a2
  411e19:	aad    0x89
  411e1b:	add    al,0xd2
  411e1d:	lds    ecx,FWORD PTR [esi]
  411e1f:	dec    ebp
  411e20:	mov    bl,0x12
  411e22:	repz cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411e24:	push   ss
  411e25:	fwait
  411e26:	out    0x21,al
  411e28:	or     BYTE PTR [ebx],0x85
  411e2b:	add    DWORD PTR [edi-0x7c0422d2],esi
  411e31:	rcr    DWORD PTR [edx+0x2d81c633],1
  411e37:	lock adc al,0x42
  411e3a:	add    BYTE PTR [eax+0x33004236],bh
  411e40:	into   
  411e41:	sub    eax,ecx
  411e43:	sub    eax,edi
  411e45:	xor    eax,esi
  411e47:	mov    DWORD PTR [ebp-0x18],eax
  411e4a:	mov    eax,DWORD PTR [ebp-0xc]
  411e4d:	xor    eax,esi
  411e4f:	mov    ecx,0xffffcff5
  411e54:	sub    ecx,eax
  411e56:	jmp    0x412345
  411e5b:	das    
  411e5c:	lahf   
  411e5d:	in     eax,0x6a
  411e5f:	cmc    
  411e60:	jp     0x411e11
  411e62:	fisttp WORD PTR [ecx-0x4c8e0150]
  411e68:	dec    esi
  411e69:	fistp  WORD PTR [esp+edx*4]
  411e6c:	cld    
  411e6d:	add    BYTE PTR [eax],al
  411e6f:	rol    BYTE PTR [eax+eax*1],cl
  411e72:	add    BYTE PTR [edi+0x4f7e1c48],dl
  411e78:	ds or  bh,ch
  411e7b:	call   0xd107:0x3d4ab9e4
  411e82:	retf   
  411e83:	mov    ds,WORD PTR [edi-0x3e]
  411e86:	mov    ah,0x80
  411e88:	(bad)  
  411e89:	imul   esp,DWORD PTR [esi+0x6d],0x82e01399
  411e90:	call   0x471c:0xa590bc2d
  411e97:	test   ebx,ebx
  411e99:	mov    al,ds:0x1339d900
  411e9e:	mov    esp,DWORD PTR [ecx-0x27]
  411ea1:	push   0xaf4f2095
  411ea6:	xchg   edi,eax
  411ea7:	fisubr DWORD PTR [esi+0x22]
  411eaa:	scas   eax,DWORD PTR es:[edi]
  411eab:	(bad)  
  411ead:	(bad)  
  411eae:	mov    cl,0x67
  411eb0:	test   DWORD PTR ds:0x794f4a46,0xe1840caa
  411eba:	pop    ds
  411ebb:	pop    es
  411ebc:	sub    al,0x75
  411ebe:	int3   
  411ebf:	loopne 0x411ed2
  411ec1:	or     DWORD PTR [edi-0x7e0ff37],ebp
  411ec7:	fcomi  st,st(1)
  411ec9:	imul   ecx,esi,0xdf8a12e1
  411ecf:	jg     0x411e5c
  411ed1:	adc    BYTE PTR [ebx+0x7a],ch
  411ed4:	fwait
  411ed5:	jecxz  0x411e66
  411ed7:	dec    edi
  411ed8:	mov    ss,WORD PTR [ecx]
  411eda:	jg     0x411f24
  411edc:	or     BYTE PTR [esp+ebp*8],bh
  411edf:	cmp    esp,DWORD PTR [edx-0x64e61d6e]
  411ee5:	icebp  
  411ee6:	mov    ecx,0x157d20d0
  411eeb:	cld    
  411eec:	fdiv   DWORD PTR [edx+0x151eb0b9]
  411ef2:	xor    BYTE PTR [esi-0x58],dh
  411ef5:	adc    eax,0x927ea998
  411efa:	cli    
  411efb:	push   ss
  411efc:	add    ecx,0x7f
  411eff:	add    al,0x83
  411f01:	pusha  
  411f02:	inc    ecx
  411f03:	scas   al,BYTE PTR es:[edi]
  411f04:	push   edx
  411f05:	mov    ah,0x89
  411f07:	jmp    0x6937:0x32fc038f
  411f0e:	(bad)  [edi+0x32]
  411f11:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411f12:	imul   edx,DWORD PTR [edx+eax*1+0x67a9b66e],0xe229230a
  411f1d:	adc    DWORD PTR [edx],0x7740e4a0
  411f23:	xchg   esi,eax
  411f24:	mov    edi,0x9d7756da
  411f29:	imul   esi,DWORD PTR [ecx+ebx*8+0x4b],0xffffffc4
  411f2e:	add    eax,0xd511b7c
  411f33:	mov    al,ds:0xe729e853
  411f38:	daa    
  411f39:	sbb    BYTE PTR [ebx+0x7],ch
  411f3c:	loopne 0x411edd
  411f3e:	add    BYTE PTR [ebp+0x4b],ah
  411f41:	mov    bl,0xc7
  411f43:	imul   edi,DWORD PTR [edi+0x4c],0x46
  411f47:	(bad)  
  411f49:	stc    
  411f4a:	call   0xdc51:0x94f3d217
  411f51:	retf   
  411f52:	adc    edx,DWORD PTR [esi+edi*1]
  411f55:	pop    esp
  411f56:	sbb    ecx,DWORD PTR [ecx+eax*2+0x1c56b242]
  411f5d:	mov    edi,fs
  411f5f:	and    BYTE PTR [esi+0x65],al
  411f62:	xor    eax,esp
  411f64:	sub    edx,ebp
  411f66:	pop    edi
  411f67:	jmp    0x411f06
  411f69:	add    al,0x9d
  411f6b:	xlat   BYTE PTR ds:[ebx]
  411f6c:	scas   al,BYTE PTR es:[edi]
  411f6d:	pusha  
  411f6e:	lock and al,0x98
  411f71:	shl    BYTE PTR [edx-0x17],1
  411f74:	dec    ebx
  411f75:	push   esp
  411f76:	add    al,0x79
  411f78:	int3   
  411f79:	and    BYTE PTR [esi+ebx*4+0x75e7d184],0x95
  411f81:	add    al,0x2a
  411f83:	call   0xe70fb1dc
  411f88:	adc    ebx,esp
  411f8a:	xchg   esi,eax
  411f8b:	shl    BYTE PTR [ecx+0x3a],cl
  411f8e:	sbb    dh,BYTE PTR [ebx]
  411f90:	cld    
  411f91:	and    dh,al
  411f93:	xchg   edx,eax
  411f94:	(bad)  
  411f96:	sahf   
  411f97:	or     eax,0x5c4cf4ae
  411f9c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411f9d:	mov    ebx,0xd0e7ed69
  411fa2:	loopne 0x411f52
  411fa4:	adc    al,0xec
  411fa6:	retf   0x9837
  411fa9:	gs retf 0xfbb7
  411fad:	cld    
  411fae:	xchg   edi,eax
  411faf:	imul   edx,esp,0x36
  411fb2:	cld    
  411fb3:	or     bl,dl
  411fb5:	cld    
  411fb6:	xor    DWORD PTR [eax+0x2],esi
  411fb9:	in     al,dx
  411fba:	repnz pop esi
  411fbc:	xlat   BYTE PTR ds:[ebx]
  411fbd:	mov    edi,es
  411fbf:	cli    
  411fc0:	fld    st(2)
  411fc2:	sub    eax,0x7f12ba0a
  411fc7:	loop   0x411fb7
  411fc9:	inc    ebp
  411fca:	mov    cl,0x7
  411fcc:	pop    edi
  411fcd:	inc    esp
  411fce:	aad    0x5d
  411fd0:	add    al,0x50
  411fd2:	(bad)  
  411fd3:	stc    
  411fd4:	lods   al,BYTE PTR ds:[esi]
  411fd5:	xchg   ecx,eax
  411fd6:	ins    DWORD PTR es:[edi],dx
  411fd7:	adc    BYTE PTR [ebx],bh
  411fd9:	(bad)  
  411fda:	adc    edi,DWORD PTR [edi-0x7e1bb8e8]
  411fe0:	push   esi
  411fe1:	mov    dl,0xf4
  411fe3:	mov    edi,DWORD PTR [ebp+0x199363a1]
  411fe9:	test   al,0x8e
  411feb:	scas   al,BYTE PTR es:[edi]
  411fec:	cmp    al,0xc
  411fee:	mov    ?,edx
  411ff0:	mov    ah,0xe1
  411ff2:	and    esi,DWORD PTR [esi+ebp*4-0x46]
  411ff6:	mov    dh,0x20
  411ff8:	jno    0x41203a
  411ffa:	adc    DWORD PTR es:[edi+edi*1-0x4],ecx
  411fff:	fmul   DWORD PTR [ebx-0x51e0f966]
  412005:	ss std 
  412007:	pop    edi
  412008:	loop   0x412055
  41200a:	mov    eax,ds:0x79e07e58
  41200f:	cli    
  412010:	aaa    
  412011:	repnz mov dh,0x6c
  412014:	icebp  
  412015:	push   edi
  412016:	add    DWORD PTR [edx],ebp
  412018:	in     eax,0xe4
  41201a:	test   eax,0xa778d25e
  41201f:	std    
  412020:	loopne 0x411faf
  412022:	jae    0x411fa8
  412024:	(bad)  
  412025:	mov    ebp,0xf9e4830d
  41202a:	addr16 pop es
  41202c:	mov    bl,0xcc
  41202e:	scas   al,BYTE PTR es:[edi]
  41202f:	repnz fistp WORD PTR [ecx-0x6a98b407]
  412036:	jbe    0x412009
  412038:	pop    edi
  412039:	and    esp,esp
  41203b:	mov    eax,ds:0x42d040
  412040:	xor    eax,DWORD PTR [edi+0x79]
  412043:	(bad)  
  412044:	pop    ecx
  412045:	mov    al,0xad
  412047:	inc    ecx
  412048:	sub    dl,BYTE PTR [esi]
  41204a:	jbe    0x41201b
  41204c:	pushf  
  41204d:	xor    eax,0xf98317d4
  412052:	jno    0x412098
  412054:	jae    0x412025
  412056:	dec    ecx
  412057:	imul   ebp,DWORD PTR [edx-0x34290e92],0xfffffffe
  41205e:	and    BYTE PTR [edx+0x4f],0x95
  412062:	call   esi
  412064:	mov    ds:0x95f4e055,eax
  412069:	neg    DWORD PTR [edi+0x1b303220]
  41206f:	sub    al,0x30
  412071:	push   edi
  412072:	mov    ch,ah
  412074:	xor    ch,BYTE PTR [ebx]
  412076:	adc    al,cl
  412078:	lods   eax,DWORD PTR ds:[esi]
  412079:	out    dx,al
  41207a:	push   es
  41207b:	inc    ebx
  41207c:	xchg   ebx,eax
  41207d:	xlat   BYTE PTR ds:[ebx]
  41207e:	mov    cl,0x66
  412080:	push   eax
  412081:	mov    ch,0x9d
  412083:	adc    eax,0x68243aed
  412088:	sbb    ebp,DWORD PTR [ecx+ecx*4]
  41208b:	mov    edi,0x3925cdb2
  412090:	add    eax,0xbbff4de6
  412095:	(bad)  
  412096:	fsub   st(1),st
  412098:	xor    BYTE PTR [eax],ah
  41209a:	push   esi
  41209b:	push   0x25
  41209d:	stos   BYTE PTR es:[edi],al
  41209e:	push   ss
  41209f:	int3   
  4120a0:	icebp  
  4120a1:	js     0x412097
  4120a3:	adc    al,0x41
  4120a5:	ja     0x4120c7
  4120a7:	ins    BYTE PTR es:[edi],dx
  4120a8:	mov    ebp,ebx
  4120aa:	fst    st(0)
  4120ac:	adc    cl,BYTE PTR [esi+0x1507df2a]
  4120b2:	test   al,0x87
  4120b4:	mov    ds:0xfb572d28,eax
  4120b9:	jne    0x41209d
  4120bb:	jmp    0x75d750a
  4120c0:	xor    DWORD PTR [esi-0x41c2c42a],ebp
  4120c6:	stc    
  4120c7:	fild   QWORD PTR ds:0x5968badf
  4120cd:	mov    ah,0x9f
  4120cf:	clc    
  4120d0:	xor    ch,dh
  4120d2:	xor    DWORD PTR [eax-0x10b55d07],ecx
  4120d8:	jg     0x4120fe
  4120da:	int    0xbf
  4120dc:	or     al,0x84
  4120de:	inc    esi
  4120df:	dec    edi
  4120e0:	ja     0x41206c
  4120e2:	dec    eax
  4120e3:	dec    esp
  4120e4:	ss popf 
  4120e6:	ins    BYTE PTR es:[edi],dx
  4120e7:	jle    0x4120a7
  4120e9:	pop    esi
  4120ea:	cmp    DWORD PTR [ebx-0xa],ecx
  4120ed:	test   BYTE PTR [edi-0x73],al
  4120f0:	and    DWORD PTR [edi+0x4d],eax
  4120f3:	jnp    0x4120ab
  4120f5:	xor    al,0xd5
  4120f7:	lods   al,BYTE PTR ds:[esi]
  4120f8:	add    esp,DWORD PTR [edx+0x2d]
  4120fb:	push   edx
  4120fc:	ins    DWORD PTR es:[edi],dx
  4120fd:	(bad)  
  4120fe:	pop    ecx
  4120ff:	pop    ss
  412100:	jmp    0x44103d26
  412105:	mov    bl,0x12
  412107:	int    0xc2
  412109:	push   edx
  41210a:	leave  
  41210b:	bound  ecx,QWORD PTR [edx+0x6ebc1f35]
  412111:	mov    DWORD PTR [ecx-0x487159fa],esp
  412117:	cmp    al,0xb5
  412119:	mov    dl,cl
  41211b:	imul   ebx,DWORD PTR [edx-0x4a5141c],0xb384fb7e
  412125:	adc    DWORD PTR [esi],edx
  412127:	adc    edi,DWORD PTR [ebx+eax*4-0x30]
  41212b:	mov    edx,edx
  41212d:	jle    0x4120d5
  41212f:	ror    BYTE PTR [esi-0x4a917cad],0x3a
  412136:	fisub  DWORD PTR [edx+0x63]
  412139:	xor    ah,BYTE PTR [eax]
  41213b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41213c:	or     edx,esp
  41213e:	sub    eax,0xdf1842ea
  412143:	xor    ebx,eax
  412145:	shl    BYTE PTR [eax+0xbdde3d9],1
  41214b:	or     dh,dh
  41214d:	inc    esp
  41214e:	(bad)  
  41214f:	sub    DWORD PTR es:[edi+edx*1+0x5c7ae997],esp
  412157:	dec    esi
  412158:	aad    0xb3
  41215a:	repz inc esp
  41215c:	jp     0x412104
  41215e:	scas   al,BYTE PTR es:[edi]
  41215f:	mov    BYTE PTR [ebx-0x66e6f565],ah
  412165:	and    al,0xa3
  412167:	xchg   edi,eax
  412168:	mov    ebp,0x96d28932
  41216d:	push   es
  41216e:	inc    edx
  41216f:	pusha  
  412170:	pop    edi
  412172:	int    0x39
  412174:	cmp    esi,edx
  412176:	cmc    
  412177:	and    bh,bh
  412179:	mov    ecx,0xaed2eeff
  41217e:	sbb    ah,ah
  412180:	dec    edx
  412181:	mov    esp,0xee9c44a
  412186:	or     eax,DWORD PTR [ebx]
  412188:	jae    0x4121a6
  41218a:	jl     0x412122
  41218c:	loop   0x41216a
  41218e:	and    BYTE PTR [ebx-0x12219651],ah
  412194:	dec    esp
  412195:	arpl   dx,ax
  412197:	push   es
  412198:	gs cmp eax,0x6a74a9b
  41219e:	int    0x99
  4121a0:	mov    edx,0x4c6b49a5
  4121a5:	lahf   
  4121a6:	test   al,0x48
  4121a8:	nop
  4121a9:	ins    DWORD PTR es:[edi],dx
  4121aa:	sbb    eax,0x93bab464
  4121af:	sbb    al,0xd0
  4121b1:	hlt    
  4121b2:	dec    BYTE PTR [ebx+ebx*2+0x4ee3ea84]
  4121b9:	adc    cl,cl
  4121bb:	push   ebx
  4121bc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4121bd:	mov    edx,0x1cef90d1
  4121c2:	aam    0x8
  4121c4:	std    
  4121c5:	les    edi,FWORD PTR [ebp+0x7f]
  4121c8:	push   esp
  4121c9:	inc    esi
  4121ca:	not    BYTE PTR [ecx+0x4d]
  4121cd:	xor    DWORD PTR [edi+eiz*2],esi
  4121d0:	popa   
  4121d1:	ret    
  4121d2:	mov    esp,0x58571bad
  4121d7:	js     0x412258
  4121d9:	mov    dl,0x36
  4121db:	stc    
  4121dc:	sub    BYTE PTR [ebx-0x5907b796],0x10
  4121e3:	xchg   edx,eax
  4121e4:	sbb    ebx,esp
  4121e6:	xor    al,0x79
  4121e8:	mov    dh,BYTE PTR [ecx]
  4121ea:	push   ecx
  4121eb:	push   ebp
  4121ec:	mov    cl,0x68
  4121ee:	lock (bad) 
  4121f0:	das    
  4121f1:	test   al,0x15
  4121f3:	xor    edi,DWORD PTR [ebx]
  4121f5:	imul   ecx,esp,0x6378649d
  4121fb:	ret    
  4121fc:	jo     0x4121b7
  4121fe:	in     eax,0x80
  412200:	aas    
  412201:	cmp    al,0xca
  412203:	rcr    BYTE PTR ds:0x95f57b84,cl
  412209:	jge    0x412192
  41220b:	inc    edi
  41220c:	and    BYTE PTR [edx-0x4b56f6fb],0x7d
  412213:	fild   QWORD PTR ds:0x5e343c5a
  412219:	es popa 
  41221b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41221c:	adc    BYTE PTR [eax+edi*2],ah
  41221f:	push   esi
  412220:	dec    ecx
  412221:	push   ds
  412222:	push   ds
  412223:	add    esp,esi
  412225:	repnz lods eax,DWORD PTR ds:[esi]
  412227:	or     DWORD PTR [ecx-0xc],edi
  41222a:	cmp    eax,0x58a50876
  41222f:	sbb    al,0x69
  412231:	push   ebx
  412232:	arpl   WORD PTR [edi+0x236d6131],bx
  412238:	clc    
  412239:	or     al,0x44
  41223b:	push   es
  41223c:	pop    ds
  41223d:	sub    eax,0xc8eb23de
  412242:	jg     0x4122a1
  412244:	inc    ebx
  412245:	sub    al,0x61
  412247:	fadd   QWORD PTR [ecx]
  412249:	xor    ecx,DWORD PTR [esi-0xe]
  41224c:	daa    
  41224d:	outs   dx,BYTE PTR ds:[esi]
  41224e:	outs   dx,DWORD PTR ds:[esi]
  41224f:	cdq    
  412250:	test   ebp,esp
  412252:	mov    edx,0x43a438a4
  412257:	pop    edi
  412258:	cmp    DWORD PTR [esi],ebp
  41225a:	fstp   TBYTE PTR [ecx+0x1f]
  41225d:	ins    DWORD PTR es:[edi],dx
  41225e:	mov    cl,0x30
  412260:	jmp    0xfefe752b
  412265:	push   ecx
  412266:	fwait
  412267:	ror    BYTE PTR [eax],1
  412269:	dec    edx
  41226a:	sub    BYTE PTR [eax],bl
  41226c:	jnp    0x412295
  41226e:	cmp    DWORD PTR [esi+0x190c82c6],esi
  412274:	jp     0x412239
  412276:	lds    ebx,FWORD PTR [edx-0x299ff54e]
  41227c:	int    0x3e
  41227e:	loopne 0x41224f
  412280:	ins    DWORD PTR es:[edi],dx
  412281:	je     0x4122f2
  412283:	or     BYTE PTR [eax+0x62c71531],ch
  412289:	xchg   BYTE PTR [edi+0x19b61248],al
  41228f:	cmp    al,0x21
  412291:	xlat   BYTE PTR ds:[ebx]
  412292:	mov    eax,0xd5d4458b
  412297:	xlat   BYTE PTR ds:[ebx]
  412298:	into   
  412299:	pop    eax
  41229a:	std    
  41229b:	aad    0x1e
  41229d:	inc    esp
  41229e:	jne    0x41223a
  4122a0:	mov    esi,0x74fa2b5d
  4122a5:	sti    
  4122a6:	fs xor ecx,ecx
  4122a9:	les    eax,FWORD PTR ds:0x383d47d1
  4122af:	inc    ebx
  4122b0:	xchg   edi,eax
  4122b1:	or     al,0x9e
  4122b3:	push   eax
  4122b4:	add    ah,BYTE PTR [eax*4+0x484a69f0]
  4122bb:	scas   al,BYTE PTR es:[edi]
  4122bc:	mov    ds:0x7893e5ed,eax
  4122c1:	(bad)  
  4122c2:	js     0x412245
  4122c4:	xor    BYTE PTR [esi-0x21220e5a],ah
  4122ca:	movhps QWORD PTR [ebx-0x63],xmm1
  4122ce:	xor    DWORD PTR [ecx-0x7c],esi
  4122d1:	daa    
  4122d2:	clc    
  4122d3:	out    0x4b,al
  4122d5:	jecxz  0x41229e
  4122d7:	inc    edi
  4122d8:	jae    0x4122cf
  4122da:	lods   al,BYTE PTR ds:[esi]
  4122db:	leave  
  4122dc:	lods   eax,DWORD PTR ds:[esi]
  4122dd:	sub    al,0x92
  4122e0:	lock aad 0xe9
  4122e3:	mov    ebx,0x3785550a
  4122e8:	(bad)  
  4122e9:	loop   0x4122c7
  4122eb:	mov    fs,WORD PTR [esi-0x31]
  4122ee:	imul   edi,DWORD PTR es:[ebx+0x59],0xf7149718
  4122f6:	je     0x4122d9
  4122f8:	inc    ebx
  4122f9:	fldcw  WORD PTR [ecx-0x204401d8]
  4122ff:	fdivr  QWORD PTR [edi]
  412301:	into   
  412302:	adc    al,0x6d
  412304:	in     al,0xeb
  412306:	cwde   
  412307:	enter  0x4099,0x4
  41230b:	mov    ecx,0x817b6fb8
  412310:	push   esp
  412311:	or     eax,DWORD PTR [esi-0x765f3070]
  412317:	sub    eax,ebp
  412319:	in     al,dx
  41231a:	(bad)  
  41231b:	xor    eax,0x103e0af
  412320:	jle    0x4122d6
  412322:	pop    esi
  412323:	scas   eax,DWORD PTR es:[edi]
  412324:	cmp    BYTE PTR [eax+0x4c5714d],dl
  41232a:	sahf   
  41232b:	push   ebx
  41232c:	inc    edi
  41232d:	cmp    DWORD PTR [eax-0x3e4951c6],0xa11c0c22
  412337:	sub    eax,0x6855843e
  41233c:	mov    ebp,0x8764b752
  412341:	inc    eax
  412342:	sub    al,0x3d
  412344:	bound  eax,QWORD PTR [ebx]
  412346:	dec    ebp
  412347:	fsubr  st,st(1)
  412349:	inc    BYTE PTR [eax+eax*1]
  41234c:	add    BYTE PTR [ebx-0x39cc0bbb],cl
  412352:	mov    ecx,0xffffcff5
  412357:	sub    ecx,eax
  412359:	jmp    0x412848
  41235e:	sbb    DWORD PTR [esi-0x1002906],edx
  412364:	cmp    eax,0x2d6710df
  412369:	adc    esi,DWORD PTR [eax+0x66089050]
  41236f:	add    DWORD PTR [ecx],eax
  412371:	add    dl,dl
  412373:	add    al,0x0
  412375:	add    BYTE PTR [ecx+0x6bbcb0a3],al
  41237b:	xchg   esi,eax
  41237c:	test   BYTE PTR [esi],cl
  41237e:	enter  0xeaa5,0x6c
  412382:	add    al,0x24
  412384:	neg    DWORD PTR [esi+0x3b]
  412387:	unpcklps xmm1,XMMWORD PTR [di]
  41238b:	std    
  41238c:	stc    
  41238d:	fisub  WORD PTR [esi]
  41238f:	mov    cl,0x19
  412391:	ss (bad) 
  412393:	push   0x6f5f385d
  412398:	mov    ebx,0x747f03a6
  41239d:	rcr    BYTE PTR [eax+0x7d70ed1e],0x52
  4123a4:	pop    ss
  4123a5:	bound  esp,QWORD PTR [eax]
  4123a7:	aaa    
  4123a8:	jb     0x412413
  4123aa:	fcmovbe st,st(4)
  4123ac:	jp     0x41240d
  4123ae:	sub    esp,DWORD PTR [esi+0x10]
  4123b1:	and    DWORD PTR [ecx],0xffffff81
  4123b4:	bound  edx,QWORD PTR cs:[edi+0x45]
  4123b8:	push   edx
  4123b9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4123ba:	icebp  
  4123bb:	imul   edi,DWORD PTR [eax+0x302525d0],0x3a
  4123c2:	rcl    ch,1
  4123c4:	lahf   
  4123c5:	mov    dh,0x3c
  4123c7:	aam    0x60
  4123c9:	add    ebp,DWORD PTR [ecx-0x78]
  4123cc:	jmp    0xd8e3:0x2fe95a34
  4123d3:	lds    edx,FWORD PTR [ebx+0x1baf62b9]
  4123d9:	jne    0x41244a
  4123db:	and    ch,BYTE PTR [ecx-0xe]
  4123de:	nop
  4123df:	mov    eax,0xb2101bd6
  4123e4:	mov    esi,0xf40bb5e3
  4123e9:	sub    BYTE PTR [edi-0x76],ah
  4123ec:	push   0xfffffffa
  4123ee:	push   ss
  4123ef:	xor    al,ch
  4123f1:	add    cl,BYTE PTR [eax+0x76]
  4123f4:	lock and al,0x86
  4123f7:	dec    esp
  4123f8:	jb     0x412396
  4123fa:	sbb    eax,eax
  4123fc:	aas    
  4123fd:	test   edx,eax
  4123ff:	inc    esi
  412400:	out    0x31,eax
  412402:	jo     0x41239e
  412404:	push   edx
  412405:	push   es
  412406:	out    dx,al
  412407:	repnz in al,dx
  412409:	out    dx,al
  41240a:	repnz pop esp
  41240c:	add    ch,BYTE PTR [edx-0xc603b08]
  412412:	out    0xa7,al
  412414:	adc    BYTE PTR [ebp-0x56],al
  412417:	test   al,0xf5
  412419:	and    eax,0x6984e1af
  41241e:	outs   dx,BYTE PTR ds:[esi]
  41241f:	cmp    ah,bh
  412421:	pop    eax
  412422:	mov    esp,0xc1aa3ce
  412427:	cmp    ch,cl
  412429:	adc    cl,BYTE PTR [edi+0x16ce24f4]
  41242f:	xchg   esp,eax
  412430:	cmp    eax,DWORD PTR [ebx-0x5]
  412433:	mov    dh,BYTE PTR [eax]
  412435:	enter  0xfbe6,0x5b
  412439:	lods   eax,DWORD PTR ds:[esi]
  41243a:	xor    DWORD PTR [ebx],edi
  41243c:	mov    ah,0x26
  41243e:	and    al,0xe
  412440:	inc    ebx
  412441:	xor    DWORD PTR [edi+0x5c7af8db],edi
  412447:	sub    ch,dh
  412449:	jle    0x412455
  41244b:	das    
  41244c:	fimul  DWORD PTR [eax]
  41244e:	push   ds
  41244f:	add    ebp,DWORD PTR [ecx-0x1d]
  412452:	outs   dx,DWORD PTR ds:[esi]
  412453:	mov    al,0xc4
  412455:	jb     0x41248e
  412457:	and    cl,BYTE PTR [ebx]
  412459:	jmp    0x412472
  41245b:	into   
  41245c:	mov    eax,ds:0xf271e97a
  412461:	mov    fs,WORD PTR [ecx+eiz*8]
  412464:	inc    ebp
  412465:	hlt    
  412466:	(bad)  
  412467:	mov    esp,0x868ef01c
  41246c:	mov    ch,0x1d
  41246e:	loop   0x4124ee
  412470:	sbb    eax,DWORD PTR [edx+0x597b3e7a]
  412476:	lock add esi,DWORD PTR ss:[edi-0x3a6621b1]
  41247e:	sbb    esp,ecx
  412480:	and    eax,0xebdf3ed5
  412485:	test   ecx,esi
  412487:	jp     0x412459
  412489:	sti    
  41248a:	jne    0x4124a8
  41248c:	sbb    dh,0x4e
  41248f:	call   0xd881:0x1f2106a5
  412496:	jbe    0x41244e
  412498:	pop    esi
  412499:	mov    al,0x6d
  41249b:	out    0x5c,al
  41249d:	xor    DWORD PTR [eax-0x2a],edx
  4124a0:	xchg   edx,eax
  4124a1:	push   ecx
  4124a2:	lea    edx,[ebx]
  4124a4:	inc    esp
  4124a5:	fcomp  QWORD PTR [ebp-0x53e4c37b]
  4124ab:	jl     0x412466
  4124ad:	(bad)  
  4124ae:	stos   DWORD PTR es:[edi],eax
  4124af:	cmp    bl,dl
  4124b1:	and    BYTE PTR [eax],al
  4124b3:	mov    es,esp
  4124b5:	jg     0x4124bf
  4124b7:	out    dx,al
  4124b8:	xchg   edi,eax
  4124b9:	fsub   st,st(5)
  4124bb:	mov    edi,0x8f550417
  4124c0:	jb     0x412518
  4124c2:	push   ebp
  4124c3:	jns    0x41251e
  4124c5:	dec    esp
  4124c6:	into   
  4124c7:	idiv   DWORD PTR [esi+0x2bd54007]
  4124cd:	jbe    0x4124d2
  4124cf:	fnstenv [ecx]
  4124d1:	repz mov al,ds:0x47cfa121
  4124d7:	mov    eax,0x25985dae
  4124dc:	cmp    BYTE PTR [ebx],ch
  4124de:	and    dl,BYTE PTR [eax+0x1]
  4124e1:	fwait
  4124e2:	shl    DWORD PTR [eax+0x37],1
  4124e5:	push   cs
  4124e6:	pushf  
  4124e7:	mov    ch,0xa3
  4124e9:	pop    eax
  4124ea:	enter  0x8555,0x52
  4124ee:	les    eax,FWORD PTR [eax-0x77885575]
  4124f4:	push   eax
  4124f5:	cmp    BYTE PTR [esi+0x3],0xd1
  4124f9:	mov    dl,0x37
  4124fb:	inc    ebx
  4124fc:	mov    ebx,ebp
  4124fe:	inc    ecx
  4124ff:	add    al,0x8b
  412501:	(bad)  
  412502:	cmp    eax,0x5ccf02ad
  412507:	sub    al,0x7c
  412509:	imul   ebp,DWORD PTR [ecx+0x79],0x7fac7a5e
  412510:	sti    
  412511:	and    ecx,edi
  412513:	fstp   TBYTE PTR [eax+0x41]
  412516:	leave  
  412517:	fwait
  412518:	or     BYTE PTR [ecx+edi*8],dh
  41251b:	xor    ebx,DWORD PTR [esi+edx*4+0x42]
  41251f:	aaa    
  412520:	sbb    al,0xfc
  412523:	or     DWORD PTR [eax+ebp*8-0x75],eax
  412527:	push   0xccd06fb5
  41252c:	fsubrp st(7),st
  41252e:	iret   
  41252f:	stos   BYTE PTR es:[edi],al
  412530:	(bad)  
  412531:	mov    ebp,DWORD PTR [ebx-0x1f]
  412534:	mov    BYTE PTR [eax+0x3f],dl
  412537:	pop    ds
  412538:	sbb    DWORD PTR [eax+eiz*2+0xe],eax
  41253c:	stc    
  41253d:	test   al,0xb2
  41253f:	rcr    esp,1
  412541:	call   0x924f:0x6300117
  412548:	mov    ecx,0xd0d1366
  41254d:	sahf   
  41254e:	cmp    BYTE PTR [esi+0x7c],0x4e
  412552:	dec    ebx
  412553:	nop
  412554:	shr    dh,cl
  412556:	mov    BYTE PTR [ebx],ch
  412558:	sub    BYTE PTR [ecx+0x4d],ch
  41255b:	xor    cl,cl
  41255d:	(bad)  
  41255e:	cmp    bl,bh
  412560:	retf   0x3f9d
  412563:	push   cs
  412564:	mov    dh,0x70
  412566:	mov    ebp,0xdbacb89f
  41256b:	push   eax
  41256c:	ins    BYTE PTR es:[edi],dx
  41256d:	pop    ds
  41256e:	lahf   
  41256f:	fidiv  DWORD PTR [ebp+edi*4-0x27e72a3c]
  412576:	lea    ecx,[ebx+0x509bafa5]
  41257c:	xchg   esp,eax
  41257d:	mov    DWORD PTR [esp+ebx*8+0x233c72ba],ebp
  412584:	cmp    esp,esi
  412586:	cmp    eax,0x7b0ec99b
  41258b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41258c:	inc    ebx
  41258d:	lahf   
  41258e:	xchg   edx,eax
  41258f:	or     eax,0xf8a0e30
  412594:	jmp    ebx
  412596:	(bad)  [esi+eiz*1-0x56]
  41259a:	ret    0x4b56
  41259d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41259e:	push   esp
  41259f:	mov    eax,0x4965dea3
  4125a4:	cwde   
  4125a5:	hlt    
  4125a6:	ja     0x4125c0
  4125a8:	lods   al,BYTE PTR ds:[esi]
  4125a9:	xchg   esp,eax
  4125aa:	in     al,0xc5
  4125ac:	imul   ebp,DWORD PTR [bx+si-0xe],0x4205d5a1
  4125b4:	jecxz  0x412596
  4125b6:	stos   DWORD PTR es:[edi],eax
  4125b7:	add    esi,DWORD PTR [ecx+0x3a896f3e]
  4125bd:	imul   eax,DWORD PTR [edx+0x67],0x3e
  4125c1:	xor    BYTE PTR [edx-0x1d779c32],bl
  4125c7:	ret    0xd9bf
  4125ca:	add    al,0x34
  4125cc:	les    eax,FWORD PTR [edx-0x13b9b9de]
  4125d2:	xchg   ecx,eax
  4125d3:	add    DWORD PTR [edx],ebx
  4125d5:	(bad)  
  4125d6:	aad    0x18
  4125d8:	repz xlat BYTE PTR ds:[ebx]
  4125da:	nop
  4125db:	(bad)  
  4125dc:	scas   eax,DWORD PTR es:[edi]
  4125dd:	scas   eax,DWORD PTR es:[edi]
  4125de:	xchg   edx,eax
  4125df:	cmp    eax,0x28fda14b
  4125e4:	mul    DWORD PTR [edi]
  4125e6:	loop   0x4125e1
  4125e8:	jmp    0x594e:0xca01c161
  4125ef:	cmp    DWORD PTR [edi-0x1e0ca92],ecx
  4125f5:	sbb    esi,DWORD PTR [ebp-0x6c4b3690]
  4125fb:	out    0xf3,al
  4125fd:	lods   al,BYTE PTR ds:[esi]
  4125fe:	arpl   WORD PTR [eax+0x1af47bbd],ax
  412604:	fld    DWORD PTR [ebx]
  412606:	add    ebp,DWORD PTR [ebx+0x29]
  412609:	rcr    DWORD PTR [edx-0x4a],1
  41260c:	jge    0x41267d
  41260e:	sar    BYTE PTR [ebp+0x4f69ea47],0x2a
  412615:	dec    ebx
  412616:	in     eax,0x80
  412618:	dec    ecx
  412619:	aam    0x4b
  41261b:	add    eax,0x66afe6a0
  412620:	and    DWORD PTR [edx-0x3f],edi
  412623:	rol    BYTE PTR [edi],0x40
  412626:	cwde   
  412627:	out    dx,al
  412628:	pop    ecx
  412629:	les    ebx,FWORD PTR [edi-0x117a9ea0]
  41262f:	aaa    
  412630:	xchg   edi,eax
  412631:	pop    eax
  412632:	mov    ?,WORD PTR [esi]
  412634:	cmp    BYTE PTR [ecx+0x42],0x86
  412638:	imul   ebp,DWORD PTR [edi+0x13],0xffffffd5
  41263c:	jb     0x41263c
  41263e:	outs   dx,BYTE PTR es:[esi]
  412640:	adc    DWORD PTR [eax-0x1b],ebp
  412643:	(bad)  
  412644:	cmp    al,0x1b
  412646:	dec    eax
  412647:	inc    edi
  412648:	arpl   WORD PTR [eax],si
  41264a:	imul   ax,WORD PTR [esi],0x51
  41264e:	adc    al,0xc2
  412650:	xor    eax,0x5179e9b4
  412655:	adc    BYTE PTR [edx-0x47],dl
  412658:	or     al,0xa0
  41265a:	xlat   BYTE PTR ss:[ebx]
  41265c:	push   es
  41265d:	jg     0x4125ea
  41265f:	mov    dl,0x3b
  412661:	sub    dh,BYTE PTR [bp-0x27a7]
  412666:	pop    edi
  412667:	and    DWORD PTR [ebp+ebx*2+0x47],esp
  41266b:	lds    edx,FWORD PTR [edx-0x14ff075d]
  412671:	cmp    eax,0xbfbcb73c
  412676:	pop    ebp
  412677:	pop    eax
  412678:	ja     0x41267e
  41267a:	(bad)  
  41267b:	ficom  WORD PTR [edx-0x7ef5efee]
  412681:	jb     0x41261b
  412683:	add    dh,bl
  412685:	or     dl,dl
  412687:	adc    eax,0x2c43faa
  41268c:	in     eax,0x7e
  41268e:	ins    DWORD PTR es:[edi],dx
  41268f:	pop    ecx
  412690:	test   DWORD PTR [eax+0x95d10ed],eax
  412696:	jmp    0x5991:0xfb0abb7b
  41269d:	xor    ah,dh
  41269f:	rcl    BYTE PTR [eax-0x73a38c75],cl
  4126a5:	xchg   esi,eax
  4126a6:	sbb    DWORD PTR [ebx],0x32da853b
  4126ac:	bound  edx,QWORD PTR [ecx]
  4126ae:	ficomp DWORD PTR [esi-0x12]
  4126b1:	aas    
  4126b2:	jmp    0xcf4fe765
  4126b7:	dec    eax
  4126b8:	clc    
  4126b9:	cs (bad) 
  4126bb:	test   al,0xc0
  4126bd:	mov    edx,0xab02ae43
  4126c2:	out    0x31,al
  4126c4:	jo     0x412670
  4126c6:	and    al,0x20
  4126c8:	inc    ecx
  4126c9:	push   es
  4126ca:	dec    ebp
  4126cb:	cmp    eax,DWORD PTR [ebp-0x144c2da4]
  4126d1:	adc    al,dh
  4126d3:	jg     0x41270f
  4126d5:	shr    DWORD PTR [esi],1
  4126d7:	adc    cl,BYTE PTR [edx+edi*2]
  4126da:	call   DWORD PTR [eax]
  4126dc:	ins    BYTE PTR es:[edi],dx
  4126dd:	iret   
  4126de:	dec    edi
  4126df:	cmp    al,BYTE PTR [ebx-0x19]
  4126e2:	adc    DWORD PTR [ebp+0x18],edi
  4126e5:	jmp    0xcb9:0xbdad8454
  4126ec:	ficomp WORD PTR [ebx-0xa]
  4126ef:	inc    edi
  4126f0:	cdq    
  4126f1:	daa    
  4126f2:	lds    esp,FWORD PTR [ebp+0x69]
  4126f5:	pop    ebx
  4126f6:	out    dx,al
  4126f7:	mov    eax,ds:0x859334a0
  4126fc:	jns    0x412713
  4126fe:	lea    edx,[eax-0x75]
  412701:	mov    eax,ds:0x4294353d
  412706:	es or  dh,cl
  412709:	mov    dh,0xf
  41270b:	cli    
  41270c:	sahf   
  41270d:	out    0x4e,al
  41270f:	(bad)  
  412710:	sbb    cl,ah
  412712:	push   0x1fdf278c
  412717:	mov    bl,BYTE PTR [ebp-0x4046a92]
  41271d:	mov    ecx,0xc2029daa
  412722:	scas   al,BYTE PTR es:[edi]
  412723:	test   DWORD PTR [edi*8-0x6adbdd64],0xe8b06f3
  41272e:	in     eax,dx
  41272f:	add    ah,ch
  412731:	mov    ch,0x8
  412733:	adc    eax,0xebe99777
  412738:	inc    BYTE PTR [ecx+0x2b]
  41273b:	mov    ecx,DWORD PTR [di]
  41273e:	(bad)  
  41273f:	push   ebp
  412740:	inc    ebp
  412741:	mov    eax,0xd2e38ea2
  412746:	repz add al,0xce
  412749:	dec    ebx
  41274a:	add    al,0xfb
  41274c:	mov    dl,BYTE PTR [eax-0x66]
  41274f:	mov    ecx,0xb297ae26
  412754:	ficomp WORD PTR [edi-0x34]
  412757:	fs pusha 
  412759:	in     al,0xde
  41275b:	xchg   ebx,eax
  41275c:	xchg   ebx,eax
  41275d:	(bad)  
  41275e:	jge    0x4127dc
  412760:	retf   
  412761:	xchg   esi,eax
  412762:	inc    edx
  412763:	ret    
  412764:	ret    0x62ee
  412767:	sub    esp,edx
  412769:	jle    0x412760
  41276b:	add    al,0x7e
  41276d:	xchg   edx,eax
  41276e:	lock dec ebp
  412770:	(bad)  
  412771:	cmp    DWORD PTR [esi+edi*4+0x47705cf4],esp
  412778:	mov    esp,?
  41277a:	je     0x412764
  41277c:	aad    0x49
  41277e:	fdiv   DWORD PTR [edx-0x19b944b2]
  412784:	aas    
  412785:	sbb    al,0x84
  412787:	(bad)  
  412788:	pop    edi
  412789:	cmp    al,0x8e
  41278b:	ret    
  41278c:	lahf   
  41278d:	ret    0x9d0e
  412790:	outs   dx,BYTE PTR ds:[esi]
  412791:	jo     0x4127ef
  412793:	xchg   ebx,eax
  412794:	sbb    eax,0x47aa6838
  412799:	and    BYTE PTR [ebx],bl
  41279b:	int    0xa
  41279d:	dec    eax
  41279e:	and    al,0x64
  4127a0:	loope  0x412727
  4127a2:	mov    ebx,0x5e3e8769
  4127a7:	dec    eax
  4127a8:	shl    DWORD PTR [ebp+0x64c53682],cl
  4127ae:	mov    eax,ds:0xcecac80b
  4127b3:	dec    edx
  4127b4:	mov    eax,fs:0x525ba84c
  4127ba:	jge    0x412767
  4127bc:	lods   eax,DWORD PTR ds:[esi]
  4127bd:	stos   BYTE PTR es:[edi],al
  4127be:	ret    
  4127bf:	mov    al,ds:0xe4db0747
  4127c4:	mov    ch,BYTE PTR [ecx-0x76]
  4127c7:	sub    al,0xc8
  4127c9:	pop    esp
  4127ca:	inc    di
  4127cc:	or     esi,edx
  4127ce:	jno    0x4127f9
  4127d0:	sbb    eax,0xbd6f2c58
  4127d5:	adc    ecx,DWORD PTR ds:0x3a3115b4
  4127db:	or     ah,al
  4127dd:	and    al,0xa2
  4127df:	retf   
  4127e0:	or     ebp,DWORD PTR [eax+eax*2+0x3e]
  4127e4:	les    edi,FWORD PTR [ebx+0x7e]
  4127e7:	jae    0x412856
  4127e9:	cdq    
  4127ea:	lods   eax,DWORD PTR ds:[esi]
  4127eb:	jmp    0x9979:0xad5bb137
  4127f2:	addr16 data16 and bh,ah
  4127f6:	adc    BYTE PTR [ebp-0x312ef2dc],0xf2
  4127fd:	pop    esi
  4127fe:	pop    ss
  4127ff:	outs   dx,BYTE PTR ds:[esi]
  412800:	test   cl,dh
  412802:	add    al,0xca
  412804:	imul   DWORD PTR [ebx-0x7c30290f]
  41280a:	lock pop ecx
  41280c:	fcomp  st(7)
  41280e:	jle    0x412841
  412810:	test   edi,esp
  412812:	mov    cl,0x58
  412814:	add    al,0x5d
  412816:	dec    edx
  412817:	dec    edx
  412818:	fldenv [ebp+0x68]
  41281b:	fimul  DWORD PTR [esi]
  41281d:	lea    edx,[esi]
  41281f:	xchg   DWORD PTR [ecx+0x41d99df7],ebx
  412825:	(bad)  
  412826:	clc    
  412827:	call   0x6b74:0x3e6cf877
  41282e:	in     eax,0x90
  412830:	xchg   ecx,eax
  412831:	xchg   ebx,eax
  412832:	push   cs
  412833:	adc    BYTE PTR [ebp-0x301e2797],bl
  412839:	cmc    
  41283a:	jne    0x4127f8
  41283c:	sub    al,0x3b
  41283e:	stos   BYTE PTR es:[edi],al
  41283f:	les    eax,FWORD PTR [ecx+0x1a14bb66]
  412845:	jmp    0x89f0:0x4d037693
  41284c:	dec    ebp
  41284d:	lock mov eax,DWORD PTR [ebp-0x18]
  412851:	jmp    0x412d40
  412856:	jmp    0x4128b6
  412858:	dec    ebx
  412859:	mov    edi,?
  41285b:	popf   
  41285c:	out    dx,eax
  41285d:	jg     0x412867
  41285f:	mov    cl,0x13
  412861:	cmc    
  412862:	loopne 0x4128a0
  412864:	repnz cmp al,0x38
  412867:	push   es
  412868:	add    DWORD PTR [eax],eax
  41286a:	rol    BYTE PTR [eax+eax*1],cl
  41286d:	add    BYTE PTR [esi+0x47383184],dl
  412873:	jecxz  0x412858
  412875:	clc    
  412876:	cld    
  412877:	dec    ebp
  412878:	jmp    0x6770:0x799c2b06
  41287f:	fwait
  412880:	push   esp
  412881:	test   eax,0x7400046
  412886:	imul   edx,DWORD PTR [ecx+0x730a9b2c],0x32
  41288d:	fld    DWORD PTR [esi+0x3bb8ec1b]
  412893:	mov    esi,0xd710d7e6
  412898:	icebp  
  412899:	loop   0x41282d
  41289b:	and    DWORD PTR [edi],esp
  41289d:	xchg   ebx,eax
  41289e:	adc    edi,esi
  4128a0:	(bad)  
  4128a1:	lea    esp,[eax+0x58a287b5]
  4128a7:	ja     0x41284f
  4128a9:	aas    
  4128aa:	fistp  QWORD PTR [esi-0x25]
  4128ad:	push   edx
  4128ae:	pop    es
  4128af:	xor    ebx,edx
  4128b1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4128b2:	(bad)  
  4128b3:	fwait
  4128b4:	lea    edx,[eax-0x1d0c57e3]
  4128ba:	cmp    al,0x1e
  4128bc:	push   ebx
  4128bd:	test   edi,ebx
  4128bf:	xchg   BYTE PTR [edx-0x3470f3f9],bh
  4128c5:	push   edx
  4128c6:	imul   esp,DWORD PTR [ecx],0x55
  4128c9:	retf   
  4128ca:	pusha  
  4128cb:	ds sub bl,bl
  4128ce:	mov    ch,0x16
  4128d0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4128d1:	fistp  QWORD PTR ds:0x617fda05
  4128d7:	cmp    BYTE PTR [edi-0xc5becdf],0xd0
  4128de:	popa   
  4128df:	mov    esp,0x2f5eaf44
  4128e4:	pop    ecx
  4128e5:	icebp  
  4128e6:	sahf   
  4128e7:	mov    ah,0xd
  4128e9:	int    0x75
  4128eb:	lods   eax,DWORD PTR ds:[esi]
  4128ec:	enter  0xb4cb,0xf6
  4128f0:	fmul   DWORD PTR [ebx-0x3ecfff0d]
  4128f6:	xchg   esp,edi
  4128f8:	pushf  
  4128f9:	adc    BYTE PTR [ecx+0x4c],0xed
  4128fd:	leave  
  4128fe:	test   eax,0x5928bcd9
  412903:	pop    edi
  412904:	inc    edi
  412905:	mov    edx,0x2e3a76f9
  41290a:	xor    ebx,ecx
  41290c:	mov    bh,0xa8
  41290e:	add    dl,BYTE PTR [esi+0x44]
  412911:	inc    edi
  412912:	cdq    
  412913:	mov    edi,0xf6418d2a
  412918:	cld    
  412919:	jnp    0x4128c5
  41291b:	mov    ds:0x314e88d,eax
  412920:	adc    dh,BYTE PTR [edx]
  412922:	int3   
  412923:	mov    al,BYTE PTR [eax-0x62]
  412926:	xchg   ebx,eax
  412927:	inc    ebp
  412928:	cld    
  412929:	mov    al,0xfb
  41292b:	dec    esp
  41292c:	sub    al,0x98
  41292e:	mov    eax,ds:0xd9e3d451
  412933:	test   dh,cl
  412935:	cwde   
  412936:	or     ch,BYTE PTR [esi+0x1a]
  412939:	sti    
  41293a:	dec    esp
  41293b:	mov    ds:0x5a50626d,al
  412940:	sub    BYTE PTR [ecx-0x3],dl
  412943:	push   ds
  412944:	dec    edi
  412945:	pop    ecx
  412946:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412947:	sar    BYTE PTR [ebp+0x7b1bd444],1
  41294d:	(bad)  
  41294e:	pop    ds
  41294f:	in     eax,dx
  412950:	dec    ecx
  412951:	push   ebp
  412952:	jle    0x4129d2
  412954:	cmp    DWORD PTR [ebx],ebx
  412956:	cmp    DWORD PTR [esi+0x1e09afb8],eax
  41295c:	fcomp  QWORD PTR [ebx+esi*4+0x7d]
  412960:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412961:	sti    
  412962:	dec    ebp
  412963:	mov    bl,0xb5
  412965:	lock sub bh,ch
  412968:	xchg   ecx,eax
  412969:	push   ebx
  41296a:	into   
  41296b:	std    
  41296c:	addr16 jg 0x41292d
  41296f:	or     al,0x1b
  412971:	sbb    al,0xd1
  412973:	or     BYTE PTR [edi],0x7d
  412976:	add    al,0x6b
  412978:	push   es
  412979:	std    
  41297a:	adc    cl,dl
  41297c:	imul   edx,ebp,0xffffffa3
  41297f:	jo     0x4129a6
  412981:	fiadd  DWORD PTR [ecx+0x17]
  412984:	adc    BYTE PTR [edx+0x25d1ce89],0xfe
  41298b:	adc    BYTE PTR [edi-0x52],al
  41298e:	push   ebp
  41298f:	adc    al,0x7f
  412991:	and    bl,BYTE PTR [edi-0x59589df4]
  412997:	repz add DWORD PTR [edx+0x3c],ecx
  41299b:	ret    0x9a8c
  41299e:	outs   dx,BYTE PTR ds:[esi]
  41299f:	ja     0x41293c
  4129a1:	jne    0x4129e8
  4129a3:	add    DWORD PTR [esi+0x7c6e9045],0xffffffa5
  4129aa:	(bad)  
  4129ab:	fisub  WORD PTR [esi]
  4129ad:	test   BYTE PTR [ebx],bh
  4129af:	jno    0x4129bf
  4129b1:	loop   0x412985
  4129b3:	ficom  WORD PTR [eax-0x723c43ef]
  4129b9:	jne    0x412a2d
  4129bb:	mov    al,ds:0x54c4961e
  4129c0:	imul   esp,ebp,0xffffff99
  4129c3:	mov    eax,DWORD PTR [ecx+0x49d5b4ef]
  4129c9:	call   0xb7c72af8
  4129ce:	xchg   ecx,eax
  4129cf:	sbb    BYTE PTR [eax-0x26c26ef3],bh
  4129d5:	sbb    BYTE PTR [esi+edx*8],bl
  4129d8:	xchg   edi,eax
  4129d9:	xor    ebx,ebp
  4129db:	retf   0x1fb7
  4129de:	cmp    eax,0xc4d7e886
  4129e3:	dec    esi
  4129e4:	dec    ebx
  4129e5:	fstp   DWORD PTR [edi]
  4129e7:	xor    ebp,edx
  4129e9:	sbb    ebp,DWORD PTR [ebx+0x50]
  4129ec:	mov    edx,0xc0bc5876
  4129f1:	faddp  st(7),st
  4129f3:	sub    al,0xf6
  4129f5:	cdq    
  4129f6:	sbb    DWORD PTR [eax-0x7fca7a5e],ebx
  4129fc:	push   edx
  4129fd:	int    0xf7
  4129ff:	rcl    DWORD PTR [ebx-0x5bfca13],0x56
  412a06:	aad    0x0
  412a08:	pop    esi
  412a09:	add    DWORD PTR ds:0xae50479d,edi
  412a0f:	sbb    bh,bl
  412a11:	repnz inc esi
  412a13:	shl    dl,1
  412a15:	mov    ebx,0xb3ea2509
  412a1a:	stos   BYTE PTR es:[edi],al
  412a1b:	push   edi
  412a1c:	cmp    DWORD PTR [ecx],0x3c
  412a1f:	add    DWORD PTR [edi+0x7f],esi
  412a22:	(bad)  
  412a23:	mov    cl,BYTE PTR [ebx]
  412a25:	ja     0x412a3c
  412a27:	pop    edi
  412a28:	dec    esp
  412a29:	mov    al,ds:0x909351dd
  412a2e:	mov    eax,0x6ab94c95
  412a33:	add    ebx,DWORD PTR [ebp+0x4a]
  412a36:	add    al,0x27
  412a38:	or     DWORD PTR [ecx+0x1d],ebp
  412a3b:	fdivrp st(1),st
  412a3d:	adc    eax,0x6a1cca21
  412a42:	mov    al,0xb8
  412a44:	and    ah,bl
  412a46:	fcom   DWORD PTR [ecx+0x5bbccc59]
  412a4c:	aam    0xf4
  412a4e:	add    esi,DWORD PTR [ecx+0x10730a10]
  412a54:	or     al,0xae
  412a56:	cld    
  412a57:	pop    ss
  412a58:	std    
  412a59:	mov    bl,0x1d
  412a5b:	xor    al,0xe
  412a5d:	ss fwait
  412a5f:	out    dx,eax
  412a60:	mov    dh,0x24
  412a62:	(bad)  
  412a64:	sub    BYTE PTR [esi],ch
  412a66:	cdq    
  412a67:	cld    
  412a68:	sti    
  412a69:	sbb    BYTE PTR [edx+0x20],ah
  412a6c:	bound  esi,QWORD PTR [ecx]
  412a6e:	push   eax
  412a6f:	hlt    
  412a70:	in     eax,0x96
  412a72:	push   cs
  412a73:	jne    0x412a58
  412a75:	jmp    0xea611dc4
  412a7a:	fild   QWORD PTR [edi+ebx*1+0x3a1cb845]
  412a81:	mov    ds,WORD PTR [edi-0x36]
  412a84:	inc    ecx
  412a85:	cdq    
  412a86:	pop    esp
  412a87:	daa    
  412a88:	cmp    BYTE PTR [edi-0x438c3201],al
  412a8e:	out    dx,al
  412a8f:	cmc    
  412a90:	mov    edi,0x69a992b
  412a95:	mov    al,0xab
  412a97:	inc    ebp
  412a98:	push   edi
  412a99:	adc    al,0x18
  412a9b:	pushf  
  412a9c:	mov    ds,WORD PTR ds:0x1f23a9f0
  412aa2:	or     DWORD PTR [edi],edi
  412aa4:	add    eax,0x19daf7b5
  412aa9:	push   DWORD PTR [ebp+0x49e5857b]
  412aaf:	fld    TBYTE PTR [edx-0x62ad5a39]
  412ab5:	mov    bh,0x26
  412ab7:	(bad)  
  412ab8:	stos   DWORD PTR es:[edi],eax
  412ab9:	and    ah,dh
  412abb:	push   ds
  412abc:	and    eax,0x942e7278
  412ac1:	mov    ds:0x5e32c44d,al
  412ac6:	mov    edx,0x5f0419de
  412acb:	ret    
  412acc:	in     eax,0x6b
  412ace:	xchg   esi,eax
  412acf:	ret    0x6e0e
  412ad2:	out    dx,eax
  412ad3:	cmp    BYTE PTR [esp+eax*4+0x3],ch
  412ad7:	test   eax,0x7e2f70c6
  412adc:	stc    
  412add:	xchg   edx,eax
  412ade:	enter  0x7e66,0xe9
  412ae2:	rol    DWORD PTR [ecx],0x73
  412ae5:	mov    ds:0xf512f1e3,eax
  412aea:	imul   esp,DWORD PTR [ebx-0x10],0xfdd22d1d
  412af1:	xchg   esi,eax
  412af2:	jmp    0x8adae933
  412af7:	dec    edi
  412af8:	(bad)  
  412af9:	cmp    BYTE PTR [edx+edx*8],0x92
  412afd:	neg    DWORD PTR [edi]
  412aff:	add    ecx,DWORD PTR [ebx-0x37]
  412b02:	(bad)  
  412b03:	outs   dx,BYTE PTR ds:[esi]
  412b04:	ja     0x412b54
  412b06:	sub    BYTE PTR [ebp-0x7e],dh
  412b09:	cmp    eax,0x8e275008
  412b0e:	pop    edi
  412b0f:	imul   edx,DWORD PTR [edx],0x86cf136e
  412b15:	pop    esp
  412b16:	repz sub al,0x2d
  412b19:	mov    cs,WORD PTR [eax+0x66f7cbb0]
  412b1f:	pop    edx
  412b20:	or     esi,edx
  412b22:	in     al,dx
  412b23:	pop    ecx
  412b24:	xchg   ebp,eax
  412b25:	pop    es
  412b26:	gs inc si
  412b29:	or     edx,0x88ec24d7
  412b2f:	cmc    
  412b30:	cmp    edi,eax
  412b32:	or     al,0xd
  412b34:	std    
  412b35:	and    eax,0x7f234f45
  412b3a:	add    DWORD PTR [esi+0x50],ebx
  412b3d:	sub    cl,bl
  412b3f:	retf   0x3546
  412b42:	ror    DWORD PTR [esi],0x3c
  412b45:	xchg   esi,edx
  412b47:	ss pop ebp
  412b49:	xor    eax,0xd9258820
  412b4e:	pop    esi
  412b4f:	jo     0x412bce
  412b51:	jmp    0xf6de:0x7fde775
  412b58:	xchg   ebx,eax
  412b59:	lds    edx,FWORD PTR [ebp-0x6e]
  412b5c:	lahf   
  412b5d:	sub    dh,BYTE PTR [ebx+0x5386b302]
  412b63:	arpl   WORD PTR [ebp-0x70],si
  412b66:	mov    esi,DWORD PTR [edx]
  412b68:	dec    edx
  412b69:	pop    ebp
  412b6a:	into   
  412b6b:	stos   DWORD PTR es:[edi],eax
  412b6c:	ret    0xfa6b
  412b6f:	aad    0xb5
  412b71:	or     DWORD PTR [ebx+0x14],eax
  412b74:	dec    esp
  412b75:	xor    BYTE PTR [eax],ah
  412b77:	fs je  0x412b29
  412b7a:	rcl    BYTE PTR [edi],0xcc
  412b7d:	pop    ebp
  412b7e:	push   es
  412b7f:	pop    esp
  412b80:	xor    ecx,edi
  412b82:	mov    WORD PTR [edx+ecx*4-0x22663f24],cs
  412b89:	mov    ds:0x1677378,eax
  412b8e:	push   es
  412b8f:	fimul  DWORD PTR [eax+0x5]
  412b92:	repz pusha 
  412b94:	xchg   esi,eax
  412b95:	mov    al,0x77
  412b97:	inc    ebp
  412b98:	and    al,0xe6
  412b9a:	gs mov ch,0x5b
  412b9d:	ss pop edi
  412b9f:	test   eax,0x8054a10a
  412ba4:	pushf  
  412ba5:	or     eax,0x2a289f62
  412baa:	sub    al,0x38
  412bac:	push   edi
  412bad:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412bae:	cld    
  412baf:	jmp    0x8ce9e8b
  412bb4:	(bad)  
  412bb6:	mov    eax,ds:0xd3c2453e
  412bbb:	arpl   WORD PTR [edi+edx*1+0x29ed5400],bx
  412bc2:	adc    DWORD PTR [edi],edx
  412bc4:	aas    
  412bc5:	imul   edx,esi,0x83ee5814
  412bcb:	bound  edi,QWORD PTR [esi+0x50c785a5]
  412bd1:	push   esp
  412bd2:	jbe    0x412bf3
  412bd4:	adc    al,0xb1
  412bd6:	jae    0x412b88
  412bd8:	jg     0x412c34
  412bda:	in     al,0x5d
  412bdc:	xchg   edx,eax
  412bdd:	aas    
  412bde:	stos   DWORD PTR es:[edi],eax
  412bdf:	mov    eax,0x54e79aa0
  412be4:	out    0x9e,al
  412be6:	iret   
  412be7:	mov    ebx,0x5bfb1a41
  412bec:	shl    BYTE PTR [ebx],1
  412bee:	lea    esp,[ebx-0x361488f5]
  412bf4:	xchg   esi,eax
  412bf5:	aam    0x17
  412bf7:	push   cs
  412bf8:	out    dx,eax
  412bf9:	mov    ds:0x4b4b60ff,al
  412bfe:	call   0xcd33:0x8bf19e2e
  412c05:	daa    
  412c06:	push   edx
  412c07:	std    
  412c08:	arpl   WORD PTR [edx-0x5d1972f9],ax
  412c0e:	lock std 
  412c10:	inc    ecx
  412c11:	je     0x412b9c
  412c13:	(bad)  
  412c14:	mov    ecx,0x17aa250b
  412c19:	sub    al,0xb4
  412c1b:	(bad)  
  412c1c:	push   edi
  412c1d:	adc    DWORD PTR [edx+0x200adecf],ebp
  412c23:	cld    
  412c24:	cmp    BYTE PTR [esi*2-0x7954d9a0],ah
  412c2b:	inc    esp
  412c2c:	push   0xffffffed
  412c2e:	in     al,0x34
  412c30:	jmp    0x82067dc4
  412c35:	jge    0x412bcd
  412c37:	or     al,0xbc
  412c39:	sbb    eax,0xa686b8e0
  412c3e:	mov    bh,0x85
  412c40:	jno    0x412c86
  412c42:	sub    al,BYTE PTR ds:0xd021d216
  412c48:	jnp    0x412cc4
  412c4a:	sub    bh,ah
  412c4c:	out    0xc5,al
  412c4e:	rol    bh,cl
  412c50:	adc    bh,BYTE PTR [edx-0x63291e22]
  412c56:	or     eax,0xb53a94e8
  412c5b:	rcl    DWORD PTR [esi-0x3a],1
  412c5e:	jno    0x412cde
  412c60:	cmp    esp,ebx
  412c62:	fld    DWORD PTR [ebp+ebp*2+0x56]
  412c66:	pop    ebx
  412c67:	mov    BYTE PTR [ecx-0x6c],al
  412c6a:	fwait
  412c6b:	shr    DWORD PTR [ecx+0x58c48190],1
  412c71:	cmp    DWORD PTR [ecx+0x40],edx
  412c74:	daa    
  412c75:	scas   al,BYTE PTR es:[edi]
  412c76:	adc    ch,BYTE PTR [edi]
  412c78:	jmp    0x3544:0xffef372a
  412c7f:	enter  0xe086,0x2d
  412c83:	mov    cl,0xab
  412c85:	sar    DWORD PTR [edx-0x5a699e7b],cl
  412c8b:	jnp    0x412c9b
  412c8d:	cmp    eax,0x9c4b3a8
  412c92:	adc    BYTE PTR [ebx+0x5ab60265],al
  412c98:	pop    ds
  412c99:	jae    0x412ccf
  412c9b:	xchg   edi,eax
  412c9c:	mov    edx,0xd875498a
  412ca1:	mov    esi,0x2456308a
  412ca6:	add    eax,0x1d223377
  412cab:	leave  
  412cac:	jo     0x412c55
  412cae:	fsub   DWORD PTR [edx]
  412cb0:	std    
  412cb1:	aam    0x9e
  412cb3:	mov    edi,0x725d5af8
  412cb8:	div    BYTE PTR [edi]
  412cba:	xlat   BYTE PTR ds:[ebx]
  412cbb:	fstp   QWORD PTR [edi+0x67]
  412cbe:	mov    dl,0xa6
  412cc0:	inc    ebp
  412cc1:	call   0xa542:0xe3c09281
  412cc8:	mov    ecx,0x2611e546
  412ccd:	jae    0x412cf9
  412ccf:	leave  
  412cd0:	mov    ecx,0x545f789c
  412cd5:	push   ecx
  412cd6:	adc    DWORD PTR [ebx+0x5e],0xc3274e5b
  412cdd:	xchg   esp,eax
  412cde:	sbb    ecx,DWORD PTR [ebx+0x6d841617]
  412ce4:	jmp    0xb892:0xc42a9e5
  412ceb:	in     eax,0xe3
  412ced:	jle    0x412d55
  412cef:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412cf0:	mov    eax,ds:0x1d4555cd
  412cf5:	fld    TBYTE PTR [esi]
  412cf7:	shr    ch,1
  412cf9:	mov    eax,ds:0x471ae68d
  412cfe:	xchg   esp,eax
  412cff:	push   0x4c
  412d01:	pop    ecx
  412d02:	mov    BYTE PTR [eax],al
  412d04:	jmp    0xedb3:0x1ad1c647
  412d0b:	stc    
  412d0c:	fnsave [edi]
  412d0e:	jns    0x412d59
  412d10:	inc    ecx
  412d11:	call   0xe401:0xb92f0abe
  412d18:	xor    ch,BYTE PTR [eax+0x10]
  412d1b:	xor    al,BYTE PTR [edi+ebp*1]
  412d1e:	mov    edx,ecx
  412d20:	rol    al,0x47
  412d23:	arpl   WORD PTR ds:0xd8887e12,cx
  412d29:	mov    esp,esp
  412d2b:	in     eax,dx
  412d2c:	or     al,0x3
  412d2e:	pop    esi
  412d2f:	pop    esi
  412d30:	cli    
  412d31:	xchg   ecx,eax
  412d32:	adc    al,0x25
  412d34:	lods   al,BYTE PTR ds:[esi]
  412d35:	add    bh,BYTE PTR [esi]
  412d37:	les    ebx,FWORD PTR [ebx+0x52]
  412d3a:	test   eax,0xff11024b
  412d3f:	xchg   BYTE PTR [ebx-0x7af00008],al
  412d45:	inc    esp
  412d46:	mov    esp,0xd8e9ffff
  412d4b:	push   ecx
  412d4c:	add    BYTE PTR [eax],al
  412d4e:	mov    DWORD PTR [ebp-0x24],eax
  412d51:	mov    eax,ds:0x42129c
  412d56:	mov    DWORD PTR [ebp-0x30],0xffffe03b
  412d5d:	mov    DWORD PTR [ebp-0x2c],0xfffffff5
  412d64:	mov    DWORD PTR [ebp-0x14],0xffffffff
  412d6b:	mov    DWORD PTR [ebp-0x10],0xfffffffc
  412d72:	mov    DWORD PTR [ebp-0x18],0xfffffffd
  412d79:	mov    DWORD PTR [ebp-0x28],eax
  412d7c:	mov    eax,DWORD PTR [ebp-0x10]
  412d7f:	xor    eax,esi
  412d81:	sub    ecx,eax
  412d83:	add    ecx,DWORD PTR [ebp-0x24]
  412d86:	mov    DWORD PTR [ebp-0x34],0x1
  412d8d:	mov    DWORD PTR [ebp-0xc],ecx
  412d90:	mov    DWORD PTR [ebp-0x8],0xfffffff0
  412d97:	mov    eax,DWORD PTR [ebp-0x14]
  412d9a:	mov    ecx,DWORD PTR [ebp-0x8]
  412d9d:	xor    eax,esi
  412d9f:	xor    ecx,esi
  412da1:	add    eax,edi
  412da3:	add    ecx,edi
  412da5:	cmp    eax,ecx
  412da7:	jmp    0x413296
  412dac:	fs in  eax,0xde
  412daf:	fistp  QWORD PTR es:[edi]
  412db2:	cld    
  412db3:	out    0x7f,eax
  412db5:	xchg   ah,bh
  412db7:	sub    al,0x26
  412db9:	sbb    edi,DWORD PTR [ebp-0x7a]
  412dbc:	or     cl,BYTE PTR [ebx]
  412dbe:	add    DWORD PTR [eax],eax
  412dc0:	rol    BYTE PTR [eax+eax*1],cl
  412dc3:	add    al,cl
  412dc5:	push   es
  412dc6:	into   
  412dc7:	and    al,BYTE PTR [ecx+eax*8]
  412dca:	jbe    0x412e04
  412dcc:	into   
  412dcd:	nop
  412dce:	(bad)  [ebx-0x61]
  412dd1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412dd2:	push   es
  412dd3:	mov    es,WORD PTR [edi+0x567c6f84]
  412dd9:	xchg   ebx,eax
  412dda:	ret    0xf851
  412ddd:	or     al,BYTE PTR [esi-0x2e]
  412de0:	imul   bl
  412de2:	push   esi
  412de3:	mov    edx,DWORD PTR [edx+0x3e]
  412de6:	push   esi
  412de7:	ds inc esp
  412de9:	xor    DWORD PTR [ebx],ebx
  412deb:	repnz int3 
  412ded:	ret    0x630f
  412df0:	dec    edx
  412df1:	jecxz  0x412e70
  412df3:	or     eax,0x207ded78
  412df8:	sbb    DWORD PTR [edx],esp
  412dfa:	mov    bh,0xee
  412dfc:	xchg   BYTE PTR [eax+0x62],ah
  412dff:	xchg   esp,eax
  412e00:	dec    esi
  412e01:	call   0x7864:0x2804da00
  412e08:	jno    0x412dcc
  412e0a:	stc    
  412e0b:	scas   eax,DWORD PTR es:[edi]
  412e0c:	pop    esi
  412e0d:	cmp    al,0xae
  412e0f:	xchg   ebp,eax
  412e10:	mov    ss,WORD PTR [edi+0x7d]
  412e13:	jg     0x412e32
  412e15:	xor    DWORD PTR [esi+0x1c],ebx
  412e18:	(bad)
  412e1b:	xchg   ebx,eax
  412e1c:	mov    ?,WORD PTR [edx-0x32]
  412e1f:	ds js  0x412e72
  412e22:	sbb    BYTE PTR [esi],al
  412e24:	(bad)  
  412e25:	sahf   
  412e26:	es mov bl,0xce
  412e29:	jne    0x412dc9
  412e2b:	cmp    BYTE PTR [ebp-0x4e],al
  412e2e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412e2f:	sub    ch,BYTE PTR [ebx-0xcfe9adb]
  412e35:	mov    ah,0x46
  412e37:	pop    esp
  412e38:	mov    ds:0x208a6a1c,al
  412e3d:	xor    DWORD PTR [eax],esi
  412e3f:	mov    ds:0x5941dd2e,al
  412e44:	sbb    DWORD PTR [ebp-0x241de30b],esi
  412e4a:	in     al,0x5b
  412e4c:	xchg   ebp,eax
  412e4d:	(bad)  
  412e4e:	aaa    
  412e4f:	cmp    al,0x9c
  412e51:	pop    ss
  412e52:	popf   
  412e53:	inc    ebx
  412e54:	(bad)  
  412e55:	aad    0xc8
  412e57:	mov    ds:0x70ca8789,eax
  412e5c:	call   0xb2b9:0xbc67d537
  412e63:	into   
  412e64:	scas   eax,DWORD PTR es:[edi]
  412e65:	cdq    
  412e66:	aas    
  412e67:	sub    edx,esi
  412e69:	out    0x51,eax
  412e6b:	pop    edx
  412e6c:	(bad)  
  412e6d:	push   ds
  412e6e:	fwait
  412e6f:	(bad)  
  412e70:	dec    DWORD PTR [eax]
  412e72:	imul   ebx,DWORD PTR [edi],0x7e
  412e75:	retf   
  412e76:	addr16 call 0xa2e95bfe
  412e7c:	out    0xc3,al
  412e7e:	push   0xffffffe7
  412e80:	iret   
  412e81:	jo     0x412e63
  412e83:	shr    esp,1
  412e85:	ja     0x412ef4
  412e87:	mov    eax,0x169a9716
  412e8c:	rol    BYTE PTR [eax],cl
  412e8e:	fs add edx,ebx
  412e91:	imul   edx,eax,0x4e489f50
  412e97:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412e98:	inc    esi
  412e99:	jo     0x412e1b
  412e9b:	sbb    al,0x80
  412e9d:	jnp    0x412e46
  412e9f:	add    esi,DWORD PTR [ebp+0x4f]
  412ea2:	push   ss
  412ea3:	mov    cl,0xed
  412ea5:	je     0x412f10
  412ea7:	mov    ch,bh
  412ea9:	inc    ebp
  412eaa:	call   0xbf7a8cca
  412eaf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412eb0:	add    dl,BYTE PTR [ecx]
  412eb2:	bound  esi,QWORD PTR [eax-0x44]
  412eb5:	bswap  edi
  412eb7:	mov    edi,DWORD PTR [ecx]
  412eb9:	adc    DWORD PTR [edx+0x4d3e6f0d],ebx
  412ebf:	and    BYTE PTR [eax+eax*8-0x2b],dl
  412ec3:	push   0xffffffc6
  412ec5:	pop    ebp
  412ec6:	xlat   BYTE PTR ds:[ebx]
  412ec7:	push   edx
  412ec8:	push   ds
  412ec9:	xchg   esi,eax
  412eca:	fwait
  412ecb:	mov    edx,0xc5ad433c
  412ed0:	popf   
  412ed1:	inc    edi
  412ed2:	out    0xf1,al
  412ed4:	imul   esp,DWORD PTR [esi+0x45],0x1
  412ed8:	xor    DWORD PTR [ebp+edx*1-0x70106f4a],eax
  412edf:	jns    0x412e87
  412ee1:	mov    BYTE PTR [ecx-0x5fc2f189],cl
  412ee7:	fisttp WORD PTR [edi+0x6a]
  412eea:	outs   dx,DWORD PTR ds:[esi]
  412eeb:	shl    edi,1
  412eed:	aaa    
  412eee:	add    eax,0xe29df84e
  412ef3:	cmp    bh,BYTE PTR [edi]
  412ef5:	dec    ecx
  412ef6:	or     DWORD PTR [edx+0x66acf6b5],edi
  412efc:	inc    esp
  412efd:	adc    DWORD PTR [esi],ebp
  412eff:	rcl    al,cl
  412f01:	das    
  412f02:	int    0x5e
  412f04:	mov    es,WORD PTR [ebp+ebx*1+0x52]
  412f08:	push   cs
  412f09:	out    0x90,al
  412f0b:	inc    ebp
  412f0c:	and    DWORD PTR [ebx-0x4c],eax
  412f0f:	inc    ecx
  412f10:	pop    ebx
  412f11:	jl     0x412ed9
  412f13:	pop    edx
  412f14:	(bad)  
  412f15:	loop   0x412f4f
  412f17:	sub    ebp,edx
  412f19:	call   0x636be03c
  412f1e:	lock push eax
  412f20:	jae    0x412f9f
  412f22:	sbb    ah,BYTE PTR [eax-0x7f]
  412f25:	sbb    bl,BYTE PTR [esi+eiz*2]
  412f28:	out    dx,eax
  412f29:	cmp    BYTE PTR [esi+0x525878cd],0xeb
  412f30:	inc    eax
  412f31:	mov    al,0x1e
  412f33:	mov    cl,0xaf
  412f35:	add    eax,0xc4be9fee
  412f3a:	jnp    0x412f24
  412f3c:	mov    eax,0xa570594f
  412f41:	nop
  412f42:	sub    esp,DWORD PTR [esi+0x7222883d]
  412f48:	add    edx,esp
  412f4a:	data16 loop 0x412eee
  412f4d:	jne    0x412eec
  412f4f:	rol    DWORD PTR [ebx],0x3a
  412f52:	adc    DWORD PTR [ebp+eiz*4-0x33],eax
  412f56:	pop    ebp
  412f57:	add    DWORD PTR [ebx-0x6fbce73f],0xda668f23
  412f61:	js     0x412fd2
  412f63:	and    eax,edx
  412f65:	xchg   BYTE PTR [ecx],bh
  412f67:	imul   esi,DWORD PTR [edi-0x80],0xece51994
  412f6e:	inc    edx
  412f70:	xor    BYTE PTR [esi+0x1b],0xff
  412f74:	das    
  412f75:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412f76:	dec    ecx
  412f77:	aad    0xab
  412f79:	shr    BYTE PTR [eax+0x7859a12b],1
  412f7f:	popf   
  412f80:	adc    esi,DWORD PTR [edi+0x2c96b817]
  412f86:	das    
  412f87:	pop    esp
  412f88:	cmp    eax,0x324ec121
  412f8d:	inc    eax
  412f8e:	mov    ah,0xe6
  412f90:	pop    ss
  412f91:	(bad)  
  412f92:	mov    ah,0x67
  412f94:	dec    ebp
  412f95:	repz lahf 
  412f97:	jmp    0x412f41
  412f99:	aad    0x88
  412f9b:	jmp    0x1dc8:0x645642bb
  412fa2:	not    DWORD PTR [edx-0x63e873bd]
  412fa8:	xchg   esi,eax
  412fa9:	in     ax,0x10
  412fac:	je     0x412fc1
  412fae:	out    dx,al
  412faf:	rcr    bh,cl
  412fb1:	dec    edi
  412fb2:	icebp  
  412fb3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412fb4:	mov    bl,0x1b
  412fb6:	test   al,0x51
  412fb8:	inc    ebx
  412fb9:	pop    ds
  412fba:	sub    DWORD PTR [esi-0x3a32296],0x2f60e6b4
  412fc4:	or     DWORD PTR [eax+0x7f3876],ebx
  412fca:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412fcb:	pop    ecx
  412fcc:	fisttp DWORD PTR ds:0x1c60efda
  412fd2:	aas    
  412fd3:	frstor [ecx-0x3c]
  412fd6:	sbb    esp,DWORD PTR [eax]
  412fd8:	jge    0x412f91
  412fda:	rcr    BYTE PTR fs:[esi-0x24b65300],cl
  412fe1:	pop    ebp
  412fe2:	je     0x413017
  412fe4:	imul   esp,DWORD PTR [ecx+0xd],0x5c
  412fe8:	mov    bl,0x34
  412fea:	mov    al,bh
  412fec:	mov    dh,0xb3
  412fee:	fs into 
  412ff0:	pop    esp
  412ff1:	xchg   ebx,eax
  412ff2:	jp     0x412f76
  412ff4:	fisub  WORD PTR [edx-0x3f]
  412ff7:	jg     0x412f88
  412ff9:	and    DWORD PTR [edx-0x5986538a],ebp
  412fff:	pop    edx
  413000:	fucomp st(1)
  413002:	sub    BYTE PTR [esi-0x61002681],bl
  413008:	lea    ecx,[edx]
  41300a:	ss xchg ebx,eax
  41300c:	test   DWORD PTR [eax],esp
  41300e:	in     eax,0xd4
  413010:	xchg   ecx,eax
  413011:	dec    edx
  413012:	in     eax,dx
  413013:	push   ds
  413014:	pop    edx
  413015:	inc    esi
  413016:	ds inc ecx
  413018:	out    dx,eax
  413019:	cs xchg bh,ah
  41301c:	mov    edx,edx
  41301e:	jmp    0x9329:0xa897deda
  413025:	shl    esi,cl
  413027:	into   
  413028:	mov    dh,BYTE PTR [esi]
  41302a:	cmp    dl,BYTE PTR ds:0xc9578a55
  413030:	pop    es
  413031:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413032:	fs xchg edi,eax
  413034:	mov    bl,0xe4
  413036:	jo     0x412fd3
  413038:	adc    eax,0x5c4e2422
  41303d:	jne    0x41303c
  41303f:	mov    dl,0x63
  413041:	inc    edi
  413042:	ds jae 0x413019
  413045:	das    
  413046:	stos   BYTE PTR es:[edi],al
  413047:	shl    DWORD PTR [ecx+edi*4-0xbabee7d],0x2f
  41304f:	dec    edi
  413050:	xchg   esp,eax
  413051:	daa    
  413052:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413053:	jecxz  0x4130a9
  413055:	fmul   st,st(1)
  413057:	call   0x7f61e806
  41305c:	paddusw mm0,QWORD PTR [eax+0x24]
  413060:	imul   ebx,esi,0x3d
  413063:	cmp    BYTE PTR [esp+edx*1],0xbf
  413067:	clc    
  413068:	(bad)  
  413069:	hlt    
  41306a:	fisubr WORD PTR [eax+0xe]
  41306d:	mov    edi,0x210700d1
  413072:	loopne 0x413029
  413074:	stc    
  413075:	imul   ecx,esp,0x490c5423
  41307b:	fbld   TBYTE PTR [edi-0x53]
  41307e:	mov    ch,0x2a
  413080:	mov    BYTE PTR [eax+0x3d],dh
  413083:	push   edi
  413084:	cmp    ecx,DWORD PTR [eax-0xcb96715]
  41308a:	ror    DWORD PTR [ecx-0x4296cb04],0x18
  413091:	popf   
  413092:	push   ebx
  413093:	stos   DWORD PTR es:[edi],eax
  413094:	outs   dx,BYTE PTR ds:[esi]
  413095:	mov    eax,ds:0xdfff2eb1
  41309a:	push   edi
  41309b:	xchg   DWORD PTR [ecx+0x32],edx
  41309e:	les    ebp,FWORD PTR [ecx]
  4130a0:	ds mov eax,0xf888545b
  4130a6:	fwait
  4130a7:	or     eax,0xa2466b0d
  4130ac:	jno    0x413115
  4130ae:	jb     0x413080
  4130b0:	(bad)  
  4130b1:	jo     0x413124
  4130b3:	ja     0x413104
  4130b5:	test   dh,ah
  4130b7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4130b8:	mov    bh,0x47
  4130ba:	add    ch,cl
  4130bc:	sbb    esp,DWORD PTR [esi+0xe]
  4130bf:	mov    ds:0xc83ebb87,eax
  4130c4:	mov    ebp,0x4efb3635
  4130c9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4130ca:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4130cb:	into   
  4130cc:	mov    ss,WORD PTR [edi+0x1716bbb4]
  4130d2:	fisttp DWORD PTR [edi]
  4130d4:	or     DWORD PTR [esi+0x58efa7f5],eax
  4130da:	push   ebx
  4130db:	adc    al,0xb5
  4130dd:	shr    dl,1
  4130df:	bound  ebp,QWORD PTR [esi+0x76394642]
  4130e5:	jbe    0x4130c5
  4130e7:	(bad)  
  4130e8:	push   ds
  4130e9:	test   edi,0x6182b231
  4130ef:	push   ebp
  4130f0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4130f1:	mov    esi,0x601ccbe1
  4130f6:	in     eax,dx
  4130f7:	cmp    eax,0x11ba6697
  4130fc:	mov    al,ds:0xba676f4d
  413101:	push   edi
  413102:	std    
  413103:	pop    ecx
  413104:	repz dec edx
  413106:	pop    ds
  413107:	or     al,0x2d
  413109:	push   esp
  41310a:	push   edi
  41310b:	lahf   
  41310c:	lds    esi,FWORD PTR [eax]
  41310e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41310f:	lods   al,BYTE PTR ds:[esi]
  413110:	lods   eax,DWORD PTR ds:[esi]
  413111:	rol    BYTE PTR [esi-0x2a8435c6],0x20
  413118:	jno    0x413150
  41311a:	mov    ss,WORD PTR [eax+0xb]
  41311d:	inc    eax
  41311e:	js     0x4130a6
  413120:	adc    ch,ch
  413122:	sub    eax,0x19ebcaf0
  413127:	lods   eax,DWORD PTR ds:[esi]
  413128:	mov    al,ds:0xd657d48a
  41312d:	xor    al,0xbc
  41312f:	xchg   esi,eax
  413130:	mov    WORD PTR [edx+0x2a],cs
  413133:	pop    ebx
  413134:	jecxz  0x413140
  413136:	pop    es
  413137:	in     eax,0xc1
  413139:	mov    ebx,0x392a5117
  41313e:	pop    ss
  41313f:	mov    DWORD PTR ds:0x65be5a9,0xcb73df56
  413149:	clc    
  41314a:	rcr    BYTE PTR [edx+edi*4-0x25a20bfb],1
  413151:	shr    DWORD PTR cs:[esi-0x3e0ca5bf],1
  413158:	sbb    eax,0xc5b4b263
  41315d:	pusha  
  41315e:	xor    al,0xfc
  413160:	adc    cl,ah
  413162:	lods   eax,DWORD PTR ds:[esi]
  413163:	add    edx,DWORD PTR [ebx+ebp*8+0x1a6ca209]
  41316a:	packuswb mm5,QWORD PTR [ebx]
  41316d:	xchg   ecx,eax
  41316e:	and    al,BYTE PTR [ecx-0x62]
  413171:	jg     0x4131a3
  413173:	test   BYTE PTR ds:0xa556b7fd,bl
  413179:	push   ds
  41317a:	(bad)  
  41317b:	or     ah,dl
  41317d:	jmp    0x6bdbe2df
  413182:	loop   0x413199
  413184:	inc    esp
  413185:	mul    DWORD PTR [esi+0x22]
  413188:	pop    esi
  413189:	or     ebx,edx
  41318b:	xchg   edx,eax
  41318c:	xor    bh,BYTE PTR [ecx+0xbf113e9]
  413192:	pop    ds
  413193:	arpl   WORD PTR [ebx+0x75e43625],bp
  413199:	cli    
  41319a:	sub    ebp,DWORD PTR [eax+0x3e]
  41319d:	dec    ecx
  41319e:	ss sbb eax,0xb5e85f5b
  4131a4:	jb     0x4131a4
  4131a6:	(bad)  
  4131a7:	outs   dx,BYTE PTR ds:[esi]
  4131a8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4131a9:	bound  ecx,QWORD PTR [ebp+ecx*1+0x41828016]
  4131b0:	out    0x93,eax
  4131b2:	dec    ebx
  4131b3:	dec    ebx
  4131b4:	ret    
  4131b5:	out    0xb2,al
  4131b7:	mov    edi,0xde701d34
  4131bc:	inc    ecx
  4131bd:	cmp    al,0x1c
  4131bf:	mov    dl,0x30
  4131c1:	jb     0x4131cf
  4131c3:	cwde   
  4131c4:	ror    DWORD PTR [ebp+0x53],cl
  4131c7:	sbb    eax,0xf357c067
  4131cc:	retf   
  4131cd:	pop    ebp
  4131ce:	sbb    al,0xaf
  4131d0:	repz les edi,FWORD PTR ds:0x4bbec522
  4131d7:	or     eax,0x3a951d25
  4131dc:	lock push ebx
  4131de:	icebp  
  4131df:	dec    edx
  4131e0:	add    ebp,edi
  4131e2:	push   0x43031747
  4131e7:	dec    edi
  4131e8:	dec    edi
  4131e9:	cmc    
  4131ea:	test   al,0xfd
  4131ec:	imul   ebp,DWORD PTR [ebx],0xffffffa0
  4131ef:	stc    
  4131f0:	push   es
  4131f1:	jo     0x413205
  4131f3:	and    eax,0x3acaaa48
  4131f8:	out    0x2d,eax
  4131fa:	adc    dl,BYTE PTR ss:[esp+ebx*8]
  4131fe:	jg     0x41318d
  413200:	bswap  edi
  413202:	sub    al,0xf6
  413204:	sbb    BYTE PTR [ebx+0x3f],cl
  413207:	xchg   edx,eax
  413208:	loope  0x4131cb
  41320a:	test   al,0x7c
  41320c:	enter  0x9f0,0x17
  413210:	scas   al,BYTE PTR es:[edi]
  413211:	xor    esi,eax
  413213:	je     0x413268
  413215:	outs   dx,DWORD PTR ds:[esi]
  413216:	fiadd  WORD PTR [esi+0x5493c59]
  41321c:	cli    
  41321d:	pop    ss
  41321e:	mov    dl,0x9e
  413220:	mov    ebx,0x36b434a4
  413225:	jo     0x413230
  413227:	push   es
  413228:	iret   
  413229:	jnp    0x41320e
  41322b:	pop    ds
  41322c:	scas   al,BYTE PTR es:[edi]
  41322d:	jmp    0x12f5c0cf
  413232:	mov    DWORD PTR [ecx+0x7b],edi
  413235:	inc    ebp
  413236:	xchg   ebp,eax
  413237:	mov    BYTE PTR ds:0x9f5ff50f,bl
  41323d:	and    al,BYTE PTR ds:0xf6e81175
  413243:	das    
  413244:	and    al,0x7d
  413246:	mov    eax,0x18d6d41c
  41324b:	adc    BYTE PTR [edx-0xe],al
  41324e:	adc    eax,0xf0b19983
  413253:	sbb    DWORD PTR [edx],0xffffff8e
  413256:	lahf   
  413257:	push   ebx
  413258:	outs   dx,BYTE PTR ds:[esi]
  413259:	sar    DWORD PTR [eax-0x37],1
  41325c:	loope  0x4131e2
  41325e:	pop    ds
  41325f:	push   cs
  413260:	cmp    eax,0x628e868e
  413265:	adc    BYTE PTR [ebp+edx*2+0x5d],cl
  413269:	sbb    BYTE PTR [esi],al
  41326b:	(bad)  
  41326c:	mov    ebp,0xee6d1783
  413271:	out    0x9c,eax
  413273:	lods   eax,DWORD PTR ds:[esi]
  413274:	push   0x2a0e8cbe
  413279:	inc    ebx
  41327a:	arpl   WORD PTR [esi],sp
  41327c:	push   ebx
  41327d:	cmc    
  41327e:	jg     0x4132d7
  413280:	mov    ecx,0xfe567ae8
  413285:	or     dl,BYTE PTR [edi+ebp*8+0x13a8458f]
  41328c:	xchg   ebx,eax
  41328d:	push   edi
  41328e:	dec    esp
  41328f:	xor    BYTE PTR [edx],0x8e
  413292:	push   ecx
  413293:	and    BYTE PTR [ebx-0x2a],al
  413296:	jae    0x417a2b
  41329c:	lea    ecx,[eax-0x300b]
  4132a2:	mov    DWORD PTR [ebp-0x1c],ecx
  4132a5:	mov    edx,DWORD PTR [ebp-0x1c]
  4132a8:	xor    edx,esi
  4132aa:	add    edx,0x7837233d
  4132b0:	lea    ecx,[ebp+eax*4-0x60]
  4132b4:	mov    DWORD PTR [ecx],edx
  4132b6:	mov    edx,DWORD PTR [ecx]
  4132b8:	cmp    edx,ebx
  4132ba:	jbe    0x4137ba
  4132c0:	jmp    0x4137af
  4132c5:	push   ebx
  4132c6:	sbb    DWORD PTR [eax-0x286025e2],ebx
  4132cc:	pop    ebp
  4132cd:	cmp    DWORD PTR [esi-0x4c5d45f2],edx
  4132d3:	cmp    edx,DWORD PTR [ecx]
  4132d5:	fmul   QWORD PTR [edi]
  4132d7:	add    DWORD PTR [eax],eax
  4132d9:	rol    BYTE PTR [eax+eax*1],cl
  4132dc:	add    BYTE PTR [esi],ch
  4132de:	push   ebp
  4132df:	cmp    edi,ebp
  4132e1:	(bad)  
  4132e2:	dec    ecx
  4132e3:	outs   dx,BYTE PTR ds:[esi]
  4132e4:	pop    ds
  4132e5:	jb     0x41333a
  4132e7:	xor    BYTE PTR [ebx],dl
  4132e9:	pop    ss
  4132ea:	imul   ebp,edi,0xa
  4132ed:	in     al,0xcd
  4132ef:	mov    bh,0xe1
  4132f1:	nop
  4132f2:	add    BYTE PTR [ebx-0x7a],dh
  4132f5:	scas   eax,DWORD PTR es:[edi]
  4132f6:	jg     0x413366
  4132f8:	pop    esi
  4132f9:	(bad)  
  4132fa:	cmp    eax,ebx
  4132fc:	dec    ebp
  4132fd:	imul   DWORD PTR [eax]
  4132ff:	jmp    0xd8a352a9
  413304:	or     al,0x23
  413306:	lock cmp eax,0x3e9d943b
  41330c:	push   ss
  41330d:	or     dl,BYTE PTR [esp+edi*4]
  413310:	inc    esp
  413311:	adc    al,0x2d
  413313:	jmp    FWORD PTR [eax-0x57963e87]
  413319:	pusha  
  41331a:	cmc    
  41331b:	cmp    ch,0x1c
  41331e:	mov    ds:0x6e6b3f77,al
  413323:	jmp    0x41330c
  413325:	xor    eax,0xc9c1a1dc
  41332a:	mov    dh,0x8
  41332c:	add    dh,BYTE PTR [ebx+0xa983f51]
  413332:	sbb    al,0xe2
  413334:	lahf   
  413335:	imul   ecx,DWORD PTR ds:0x14af2392,0xa7a92607
  41333f:	popa   
  413340:	mov    ds:0x19b25eda,al
  413345:	push   es
  413346:	fwait
  413347:	mov    WORD PTR [edi],fs
  413349:	jmp    0x892b606
  41334e:	cmp    eax,0xf92e5b8c
  413353:	adc    DWORD PTR [esi+0x38],esp
  413356:	std    
  413357:	int    0x40
  413359:	mov    BYTE PTR [ecx+0x3e028b52],al
  41335f:	adc    eax,0x590fe614
  413364:	lea    esp,[eax+0x49]
  413367:	clc    
  413368:	jge    0x413382
  41336a:	jnp    0xc10acfa5
  413370:	push   ecx
  413371:	sar    DWORD PTR [edi-0x7eaa7ec2],cl
  413377:	mov    WORD PTR [edi+0x47],cs
  41337a:	cs jg  0x4133f5
  41337d:	(bad)  
  41337e:	jecxz  0x413347
  413380:	fist   WORD PTR [ebp+0x5404b4ac]
  413386:	xchg   edi,eax
  413387:	adc    eax,DWORD PTR [ecx+0xc5387c3]
  41338d:	scas   al,BYTE PTR es:[edi]
  41338e:	ja     0x41338e
  413390:	shl    DWORD PTR [edx+eiz*1],0x31
  413394:	inc    esp
  413395:	addr16 dec esp
  413397:	outs   dx,DWORD PTR ds:[esi]
  413398:	adc    BYTE PTR [ebp-0x2126d157],0xdf
  41339f:	imul   ecx,DWORD PTR [edi*4-0x5ebbce9f],0x65
  4133a7:	sbb    DWORD PTR [edi+0x65],esp
  4133aa:	sbb    dl,BYTE PTR [edi+0x613b9de7]
  4133b0:	jmp    0xdaa51323
  4133b5:	sub    eax,0xa33d5084
  4133ba:	xchg   edx,eax
  4133bb:	out    0x10,al
  4133bd:	fdivp  st(1),st
  4133bf:	test   BYTE PTR [edi-0x72],dl
  4133c2:	dec    esi
  4133c3:	mov    bh,dl
  4133c5:	dec    ebx
  4133c6:	xor    BYTE PTR [ecx],ah
  4133c8:	dec    esp
  4133c9:	jne    0x4133b8
  4133cb:	pop    edi
  4133cc:	cmovns esi,DWORD PTR ds:0x9641f1c6
  4133d3:	out    dx,eax
  4133d4:	mov    ebp,0x3bab0d8e
  4133d9:	xor    al,0x3c
  4133db:	push   ebx
  4133dc:	xor    DWORD PTR [eax+0x62],esp
  4133df:	mov    ah,0x6a
  4133e1:	mov    al,0xf8
  4133e3:	les    eax,FWORD PTR [esi+0x62]
  4133e6:	push   esi
  4133e7:	add    eax,0x9c17e8d3
  4133ec:	lds    ecx,FWORD PTR [eax+ebx*1]
  4133ef:	popa   
  4133f0:	and    esp,esi
  4133f2:	lock cmc 
  4133f4:	xchg   esp,eax
  4133f5:	mov    esi,edx
  4133f7:	push   esi
  4133f8:	out    0xd6,al
  4133fa:	popa   
  4133fb:	cdq    
  4133fc:	push   0xfffffffb
  4133fe:	dec    esp
  4133ff:	push   0xe0d9413e
  413404:	cmp    eax,0x140eaada
  413409:	pop    ebp
  41340a:	outs   dx,BYTE PTR ds:[esi]
  41340b:	repnz (bad) 
  41340d:	jae    0x4133e5
  41340f:	test   eax,0x7108247d
  413414:	cwde   
  413415:	inc    edi
  413416:	out    dx,al
  413417:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413419:	in     al,0x6c
  41341b:	push   edx
  41341c:	dec    edi
  41341d:	mul    DWORD PTR [edx+0x52]
  413420:	ins    BYTE PTR es:[edi],dx
  413421:	daa    
  413422:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413423:	les    edx,FWORD PTR [eax+0x72a43bfc]
  413429:	dec    edx
  41342a:	mov    esp,0x37b616d5
  41342f:	push   es
  413430:	sbb    ebp,DWORD PTR [esi-0x6700a4c2]
  413436:	mov    ebx,0x5fd21fac
  41343b:	outs   dx,BYTE PTR ds:[esi]
  41343c:	adc    al,BYTE PTR [eax]
  41343e:	fmulp  st(2),st
  413440:	push   ebx
  413441:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413442:	out    dx,al
  413443:	(bad)  
  413444:	in     al,dx
  413445:	fstp   TBYTE PTR [eax+0x1df6aa63]
  41344b:	and    eax,0x2394a39a
  413450:	push   cs
  413451:	fisttp DWORD PTR [esi+eiz*1+0x25]
  413455:	and    BYTE PTR [edi+0x3b84945b],ch
  41345b:	cmp    al,0x44
  41345d:	nop
  41345e:	xchg   esi,eax
  41345f:	pop    es
  413460:	out    dx,al
  413461:	xchg   ebp,esp
  413463:	push   ebp
  413464:	cmp    BYTE PTR ds:0x1ce52a53,0x71
  41346b:	xchg   esi,eax
  41346c:	xchg   edx,eax
  41346d:	pushf  
  41346e:	or     bl,dh
  413470:	in     eax,0xe0
  413472:	cs jp  0x4134e3
  413475:	sar    BYTE PTR [ebx+0x54],0x9a
  413479:	(bad)  
  41347a:	sbb    eax,0x4ffb915b
  41347f:	shl    BYTE PTR gs:[edx-0x4d],cl
  413483:	mov    al,BYTE PTR [eax+ecx*8]
  413486:	imul   edi,ecx,0x27f90d05
  41348c:	lahf   
  41348d:	mov    bh,0xc2
  41348f:	in     al,dx
  413490:	sar    BYTE PTR [eax+0x7c0cce5],0x51
  413497:	jl     0x4134c5
  413499:	xchg   edi,eax
  41349a:	pop    ds
  41349b:	add    al,0xa3
  41349d:	aam    0x6b
  41349f:	(bad)  
  4134a0:	sar    BYTE PTR es:[ecx+ebp*8],0x79
  4134a5:	dec    esi
  4134a6:	pop    edx
  4134a7:	xor    esi,ebp
  4134a9:	test   DWORD PTR [ebx-0x69],eax
  4134ac:	imul   ebp,DWORD PTR [ebp-0x4b1d18ee],0xffffffee
  4134b3:	push   ds
  4134b4:	imul   ebp,esi,0xa799b555
  4134ba:	icebp  
  4134bb:	dec    ebx
  4134bc:	inc    ebp
  4134bd:	(bad)  
  4134be:	cmc    
  4134bf:	ffree  st(6)
  4134c1:	lahf   
  4134c2:	fcmovnb st,st(3)
  4134c4:	xchg   edx,eax
  4134c5:	jmp    0x945e:0x6f073b1c
  4134cc:	repz loop 0x41353c
  4134cf:	dec    eax
  4134d0:	xchg   ebx,eax
  4134d1:	jo     0x4134d3
  4134d3:	pop    ds
  4134d4:	bound  edx,QWORD PTR [edi]
  4134d6:	push   cs
  4134d7:	loopne 0x41346c
  4134d9:	ins    BYTE PTR es:[edi],dx
  4134da:	xchg   ecx,eax
  4134db:	in     al,0xda
  4134dd:	mov    ecx,DWORD PTR [ecx-0x1c]
  4134e0:	dec    esi
  4134e1:	or     BYTE PTR [esi+ebp*8-0x53],dh
  4134e5:	mov    al,0xa0
  4134e7:	mov    cl,BYTE PTR [ebp-0x68]
  4134ea:	pop    ss
  4134eb:	nop
  4134ec:	pop    eax
  4134ed:	push   edi
  4134ee:	fcomi  st,st(6)
  4134f0:	lods   eax,DWORD PTR ds:[esi]
  4134f1:	cmp    al,0x8
  4134f3:	leave  
  4134f4:	xor    bh,ah
  4134f6:	addr16 lahf 
  4134f8:	rcr    DWORD PTR ds:0xa0d75da7,1
  4134fe:	jmp    0x593e7d7e
  413503:	in     eax,dx
  413504:	mov    cl,0xa6
  413506:	ins    BYTE PTR es:[edi],dx
  413507:	add    BYTE PTR [esi-0x514fb725],0x29
  41350e:	push   0x7e52df8d
  413513:	rcr    DWORD PTR [edx+0x17],1
  413516:	cmc    
  413517:	inc    ecx
  413518:	inc    edx
  413519:	retf   0x9bb2
  41351c:	xchg   edi,eax
  41351d:	shl    DWORD PTR ds:0xcbf922ca,0x64
  413524:	sti    
  413525:	cwde   
  413526:	inc    eax
  413527:	cmp    ecx,edi
  413529:	cmp    edi,ebp
  41352b:	xor    ecx,DWORD PTR [edi+0x2fa80a2d]
  413531:	lea    eax,[eax-0x5303d46b]
  413537:	adc    al,0x2c
  413539:	inc    ebp
  41353a:	mov    esi,0xbcfd6b5a
  41353f:	inc    ebx
  413540:	sub    eax,0xf22a2e0f
  413545:	mov    al,ds:0x8a515d60
  41354a:	and    ch,ah
  41354c:	inc    ebx
  41354d:	fild   DWORD PTR [ebp+ebp*8+0x7d]
  413551:	cdq    
  413552:	add    ebp,ebx
  413554:	jmp    0x12de:0x6e7529da
  41355b:	pop    eax
  41355c:	aaa    
  41355d:	pop    edi
  41355e:	mov    esp,0x2e06f6f
  413563:	sbb    ebp,esi
  413565:	leave  
  413566:	xor    eax,0x8afc702d
  41356b:	mov    ecx,0x36b59e16
  413570:	inc    ebp
  413571:	mov    WORD PTR [edi+0x6a32b785],ds
  413577:	leave  
  413578:	leave  
  413579:	cmp    ebx,esp
  41357b:	xchg   edx,eax
  41357c:	aad    0xc2
  41357e:	or     DWORD PTR [esi-0x5ced0eea],ecx
  413584:	mov    ebx,DWORD PTR [edx+edi*2+0x6f]
  413588:	jle    0x41359d
  41358a:	and    DWORD PTR [eax],esp
  41358c:	xor    bh,BYTE PTR ds:0xbe7b5ac7
  413592:	push   ecx
  413593:	jl     0x41352b
  413595:	loop   0x413571
  413597:	cwde   
  413598:	(bad)  
  413599:	pop    ds
  41359a:	shr    BYTE PTR [ebx-0x7],cl
  41359d:	jp     0x4135e2
  41359f:	fcmovnbe st,st(4)
  4135a1:	cmp    DWORD PTR [ecx-0x73],0x58
  4135a5:	cmp    DWORD PTR [edx+0x20702be0],edx
  4135ab:	cmp    al,BYTE PTR [edi+0x65]
  4135ae:	xor    al,0xfd
  4135b0:	ror    DWORD PTR [ebx+0x3a1cced5],cl
  4135b6:	in     eax,dx
  4135b7:	lds    edx,FWORD PTR [eax-0x42]
  4135ba:	test   BYTE PTR [edx+0x2f],ch
  4135bd:	scas   eax,DWORD PTR es:[edi]
  4135be:	popa   
  4135bf:	es test eax,0x73648086
  4135c5:	repnz sbb eax,0xd602f314
  4135cb:	sub    eax,0x3a7fc6ba
  4135d0:	das    
  4135d1:	add    ebx,ebx
  4135d3:	mov    al,ds:0x39dec43b
  4135d8:	jecxz  0x4135b9
  4135da:	push   es
  4135db:	sahf   
  4135dc:	or     ah,bh
  4135de:	and    DWORD PTR [ecx+0x69],eax
  4135e1:	cmp    ch,bh
  4135e3:	(bad)  
  4135e4:	pop    ebx
  4135e5:	or     al,0x2c
  4135e7:	inc    edi
  4135e8:	sar    dl,0x77
  4135eb:	inc    esi
  4135ec:	outs   dx,DWORD PTR ds:[esi]
  4135ed:	sub    BYTE PTR ds:0xa3b910ef,al
  4135f3:	test   BYTE PTR [edi-0x5f43fe47],ah
  4135f9:	pop    es
  4135fa:	pop    ecx
  4135fb:	dec    esp
  4135fc:	popa   
  4135fd:	cmp    ch,BYTE PTR [esi+edi*2+0x73]
  413601:	lea    edx,[ebx-0x1411975f]
  413607:	cs nop
  413609:	out    0x59,al
  41360b:	lock jg 0x41359c
  41360e:	out    0x7d,eax
  413610:	ins    DWORD PTR es:[edi],dx
  413611:	add    DWORD PTR [ebp-0x60],eax
  413614:	in     al,0x79
  413616:	push   0xce3d7341
  41361b:	push   ecx
  41361c:	jmp    0x413654
  41361e:	cwde   
  41361f:	imul   esi,DWORD PTR [ebx],0xffffffc4
  413622:	ret    0xd125
  413625:	inc    esp
  413626:	aaa    
  413627:	xor    edi,DWORD PTR [ebx-0x2a]
  41362a:	into   
  41362b:	add    ebp,DWORD PTR [eax+0x6d]
  41362e:	ins    BYTE PTR es:[edi],dx
  41362f:	ins    BYTE PTR es:[edi],dx
  413630:	and    al,0xb0
  413632:	add    eax,0x838cb43f
  413637:	and    eax,0x7ed3ca4a
  41363c:	ret    0x2087
  41363f:	outs   dx,BYTE PTR ds:[esi]
  413640:	cmp    edx,DWORD PTR [ecx-0x54]
  413643:	xchg   edi,eax
  413644:	cmp    al,0xb9
  413646:	dec    ecx
  413647:	and    DWORD PTR [ecx+0x77],eax
  41364a:	test   cl,ah
  41364c:	leave  
  41364d:	inc    esp
  41364e:	pop    esi
  41364f:	add    DWORD PTR [ecx-0xb],0xffffffc2
  413653:	cs sti 
  413655:	and    dl,BYTE PTR [edx]
  413657:	dec    edx
  413658:	pop    ss
  413659:	pop    esp
  41365a:	jbe    0x4135dd
  41365c:	rol    cl,1
  41365e:	mov    ah,0x81
  413660:	rol    BYTE PTR [esi+0x2b39a1a2],1
  413666:	js     0x4136b1
  413668:	lds    ebx,FWORD PTR [edi]
  41366a:	add    eax,0xf3d4261d
  41366f:	mov    al,0xf4
  413671:	sbb    esp,DWORD PTR [esi]
  413673:	aad    0xcb
  413675:	es pop ebp
  413677:	shl    BYTE PTR ds:0x797dc22d,1
  41367d:	addr16 add al,0xbd
  413680:	fs rcr esp,1
  413683:	sbb    edi,edx
  413685:	mov    WORD PTR [ebx],gs
  413687:	mov    bl,0x79
  413689:	sub    bl,ah
  41368b:	gs (bad) 
  41368d:	jae    0x4136e6
  41368f:	mov    al,0xe4
  413691:	sub    ah,ch
  413693:	into   
  413694:	mov    cl,0xbc
  413696:	retf   
  413697:	xor    esi,DWORD PTR [ebx-0x42247451]
  41369d:	sub    BYTE PTR [edx-0x426fbd4b],0xb3
  4136a4:	and    eax,0x4cda1d1a
  4136a9:	xchg   BYTE PTR [edi],dl
  4136ab:	hlt    
  4136ac:	rcl    BYTE PTR [ebp+0x1a],0x66
  4136b0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4136b1:	xlat   BYTE PTR ds:[ebx]
  4136b2:	push   0xffffff81
  4136b4:	xchg   ecx,eax
  4136b5:	mov    esi,0x2493c74
  4136ba:	ins    DWORD PTR es:[edi],dx
  4136bb:	sub    ebx,esi
  4136bd:	cmp    eax,ecx
  4136bf:	outs   dx,BYTE PTR ds:[esi]
  4136c0:	repnz sub eax,0x564d19fd
  4136c6:	std    
  4136c7:	jns    0x4136bc
  4136c9:	mov    edx,0x3ff8ffa2
  4136ce:	and    dl,bh
  4136d0:	jb     0x4136fe
  4136d2:	add    cl,BYTE PTR [edi-0x466e6726]
  4136d8:	adc    BYTE PTR [edi],bh
  4136da:	data16 jecxz 0x4136cd
  4136dd:	dec    esp
  4136de:	adc    edi,DWORD PTR [edi+0x44653efc]
  4136e4:	sbb    eax,0x9515c8e1
  4136e9:	jge    0x413674
  4136eb:	sbb    edx,DWORD PTR [ecx]
  4136ed:	test   BYTE PTR [eax],ch
  4136ef:	mov    ss,WORD PTR ds:0x5344a41
  4136f5:	cmp    eax,0xd170f813
  4136fa:	sub    al,0x1f
  4136fc:	in     al,0x4
  4136fe:	jecxz  0x4136b5
  413700:	adc    DWORD PTR [edx+0x7d],edx
  413703:	push   esi
  413704:	les    esi,FWORD PTR [ecx+edx*2]
  413707:	mov    BYTE PTR [ebx+0x2],0x12
  41370b:	(bad)  
  41370c:	dec    ebp
  41370d:	ins    BYTE PTR es:[edi],dx
  41370e:	lea    edi,[esi]
  413710:	les    edx,FWORD PTR [edx+0x30]
  413713:	xor    ebp,DWORD PTR [eax]
  413715:	xor    DWORD PTR [ebx-0x4ebfaa81],edx
  41371b:	sbb    DWORD PTR gs:[esi+0x11],esi
  41371f:	push   eax
  413720:	adc    eax,0xb66d54e5
  413725:	test   eax,0x27d4e5bf
  41372a:	push   0xffffff94
  41372c:	mov    esp,0xa9f4df35
  413731:	pop    ds
  413732:	jge    0x4136b5
  413734:	int    0x41
  413736:	cwde   
  413737:	enter  0x7bd3,0xdf
  41373b:	jmp    0x7f5a:0x39d3463b
  413742:	ficomp DWORD PTR [ebp+eiz*1+0x65]
  413746:	(bad)  
  413747:	mov    al,0xd
  413749:	dec    eax
  41374a:	into   
  41374b:	mov    ch,0x3
  41374d:	push   0x2a7d0990
  413752:	cmc    
  413753:	jmp    0x9290:0x39e881cb
  41375a:	cld    
  41375b:	mov    edx,0x7f944b0d
  413760:	inc    ebp
  413761:	pop    ecx
  413762:	adc    BYTE PTR [ecx-0x35efa88b],dh
  413768:	ret    
  413769:	jns    0x413708
  41376b:	mov    dl,0x5f
  41376d:	inc    ebx
  41376e:	pop    ss
  41376f:	aaa    
  413770:	or     al,0xd4
  413772:	xchg   ebx,eax
  413773:	push   0xfffffff9
  413775:	(bad)  
  413776:	jmp    0x413777
  413778:	mov    ds:0xc8abb60f,al
  41377d:	pop    esp
  41377e:	daa    
  41377f:	ret    
  413780:	jmp    0x686a:0xc963753d
  413787:	mov    ebp,0x9e746727
  41378c:	mov    dl,0xea
  41378e:	xchg   ebx,eax
  41378f:	ret    
  413790:	cdq    
  413791:	jp     0x41376d
  413793:	adc    cl,BYTE PTR [edi-0x612ad27f]
  413799:	(bad)  
  41379a:	push   esi
  41379b:	cld    
  41379c:	jg     0x413769
  41379e:	xor    DWORD PTR [esi],eax
  4137a0:	test   al,0x3
  4137a2:	neg    BYTE PTR [eax-0x6ebd516f]
  4137a8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4137a9:	push   esi
  4137aa:	add    ebp,edi
  4137ac:	ret    0x1a97
  4137af:	add    DWORD PTR [ecx],0x3870753
  4137b5:	jmp    0x4137c0
  4137ba:	add    DWORD PTR [ecx],0xfacc38ad
  4137c0:	mov    ecx,DWORD PTR [ebp-0x8]
  4137c3:	xor    ecx,esi
  4137c5:	inc    eax
  4137c6:	inc    DWORD PTR [ebp-0x1c]
  4137c9:	add    ecx,edi
  4137cb:	cmp    eax,ecx
  4137cd:	jb     0x4132a5
  4137d3:	jmp    0x417a2b
  4137d8:	mov    ecx,DWORD PTR [ebp-0x14]
  4137db:	mov    eax,DWORD PTR [ebp-0x8]
  4137de:	xor    ecx,esi
  4137e0:	xor    eax,esi
  4137e2:	jmp    0x413cd1
  4137e7:	push   edx
  4137e8:	mov    eax,0xe8fa4050
  4137ed:	push   edx
  4137ee:	mov    edx,0x373f812
  4137f3:	push   0xae1f6443
  4137f8:	adc    al,0x1
  4137fa:	add    dl,dl
  4137fc:	add    al,0x0
  4137fe:	add    BYTE PTR [edx],ch
  413800:	out    0xf0,eax
  413802:	cld    
  413803:	dec    esp
  413804:	add    BYTE PTR [edx+0x7c],bh
  413807:	pop    ecx
  413808:	mov    eax,ds:0x4e0308ed
  41380d:	data16 and BYTE PTR [edx-0x1e],dh
  413811:	clc    
  413812:	mov    esp,0x1bd37035
  413817:	cmp    edx,DWORD PTR [edi+0x424933a]
  41381d:	jecxz  0x4137b9
  41381f:	std    
  413820:	imul   BYTE PTR [ebp+0x2fd10e3a]
  413826:	mov    ah,0x94
  413828:	jmp    0x4137bb
  41382a:	dec    esi
  41382b:	mov    ecx,0x831bd26
  413830:	popa   
  413831:	fsub   QWORD PTR [eax-0x30]
  413834:	pop    ecx
  413835:	or     bl,BYTE PTR [esi+0x59]
  413838:	or     cl,BYTE PTR [edx-0xb]
  41383b:	std    
  41383c:	nop
  41383d:	stos   DWORD PTR es:[edi],eax
  41383e:	(bad)  
  41383f:	xchg   edi,eax
  413840:	cmp    BYTE PTR [ebp-0x4cd7aff4],bh
  413846:	rol    BYTE PTR [eax-0x4c],0x87
  41384a:	int3   
  41384b:	xchg   edx,eax
  41384c:	pop    eax
  41384d:	out    0xae,al
  41384f:	dec    ecx
  413850:	hlt    
  413851:	pop    esi
  413852:	inc    ebx
  413853:	mov    bl,0xae
  413855:	xor    bl,BYTE PTR [edi-0x56]
  413858:	shr    DWORD PTR [ebx-0x15cad0be],cl
  41385e:	xchg   BYTE PTR [ebx],cl
  413860:	ja     0x413857
  413862:	jmp    0x2d40:0xb6b46262
  413869:	sbb    al,0x8c
  41386b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41386c:	xchg   ebx,eax
  41386d:	or     al,BYTE PTR [eax+0x55]
  413870:	out    0x44,eax
  413872:	sbb    DWORD PTR [edx-0x19],ecx
  413875:	xchg   edi,eax
  413876:	sub    BYTE PTR [eax+0x1f],ch
  413879:	lock or BYTE PTR [esi],0xe9
  41387d:	or     ebp,edx
  41387f:	jno    0x413815
  413881:	push   0x155e49bf
  413886:	lods   al,BYTE PTR ds:[esi]
  413887:	xor    dh,BYTE PTR [edx]
  413889:	outs   dx,DWORD PTR ds:[esi]
  41388a:	mov    esp,DWORD PTR [ecx-0x63]
  41388d:	xor    al,0xe1
  41388f:	pop    ss
  413890:	sub    esp,DWORD PTR [ebx]
  413892:	adc    al,0xb4
  413894:	push   0x6c
  413896:	add    BYTE PTR [eax],0x9d
  413899:	xchg   ecx,eax
  41389a:	jo     0x413854
  41389c:	add    edi,edi
  41389e:	in     eax,0x6e
  4138a0:	call   0xbdec:0x7274f67f
  4138a7:	cld    
  4138a8:	in     al,0xd8
  4138aa:	inc    edx
  4138ab:	imul   eax,DWORD PTR [edx-0x8],0x7e
  4138af:	pop    esi
  4138b0:	fst    QWORD PTR [eax+0x2be2ea5]
  4138b6:	ret    
  4138b7:	jmp    0xbadb990f
  4138bc:	sbb    DWORD PTR [eax+0x1e],esi
  4138bf:	fmul   DWORD PTR [edi+ecx*2+0x6ae1d06e]
  4138c6:	push   cs
  4138c7:	fld    TBYTE PTR [edx+0x32e0a2a8]
  4138cd:	or     DWORD PTR [ebp+0x35607590],0xf77dae39
  4138d7:	jae    0x413868
  4138d9:	imul   ebp,DWORD PTR [eax+0xb],0xfffffffa
  4138dd:	push   edx
  4138de:	sbb    al,0xcd
  4138e0:	pop    eax
  4138e1:	rol    BYTE PTR [esi-0x375f43b1],0x39
  4138e8:	mov    ebp,0x17bd9895
  4138ed:	test   eax,0x549a9775
  4138f2:	int    0xc6
  4138f4:	fcomp  QWORD PTR [edi]
  4138f6:	pop    edi
  4138f7:	jno    0x4138b5
  4138f9:	lock jmp 0x4138e7
  4138fc:	pusha  
  4138fd:	adc    BYTE PTR [ebx+0x11],ch
  413900:	jb     0x4138b1
  413902:	pop    ecx
  413903:	je     0x4138fb
  413905:	cmp    bl,BYTE PTR [ebp+0x1bb81dbf]
  41390b:	es loop 0x4138ef
  41390e:	mov    esp,eax
  413910:	pop    ebp
  413911:	mov    ds:0xc66ab22a,eax
  413916:	mov    dh,BYTE PTR [ebx]
  413918:	or     BYTE PTR [ecx],ch
  41391a:	retf   0x145
  41391d:	icebp  
  41391e:	jae    0x4138bd
  413920:	das    
  413921:	add    eax,0x4acea106
  413926:	test   eax,0x3cb1a9aa
  41392b:	push   esi
  41392c:	adc    BYTE PTR [eax-0x3770f4fd],0x1f
  413933:	mov    edi,DWORD PTR [esp+eiz*2]
  413936:	jmp    0xec98d28e
  41393b:	push   esi
  41393c:	mov    ebp,0x6909380a
  413941:	and    ebx,ebp
  413943:	ins    BYTE PTR es:[edi],dx
  413944:	dec    ecx
  413945:	dec    edi
  413946:	enter  0xc3ad,0x71
  41394a:	in     eax,0x69
  41394c:	lea    esi,[eax-0x1f]
  41394f:	lds    ebx,FWORD PTR [edx]
  413951:	iret   
  413952:	mov    ebx,0x70abe326
  413957:	add    eax,0xda57014e
  41395c:	popf   
  41395d:	in     eax,dx
  41395e:	jmp    0xc75a:0xd8063e08
  413965:	mov    al,0xce
  413967:	test   BYTE PTR [esi-0x63],ch
  41396a:	xor    al,bh
  41396c:	in     al,0x4e
  41396e:	jl     0x413965
  413970:	test   ah,dh
  413972:	or     dh,dl
  413974:	cmp    al,0x40
  413976:	push   ecx
  413977:	cdq    
  413978:	out    dx,eax
  413979:	jp     0x41394a
  41397b:	popa   
  41397c:	and    dl,BYTE PTR [ebx+0x7a]
  41397f:	outs   dx,BYTE PTR ds:[esi]
  413980:	inc    esi
  413981:	(bad)  
  413982:	mov    ecx,0x29bc4f6
  413987:	ficomp DWORD PTR [ecx+esi*8+0x48]
  41398b:	(bad)  
  41398c:	pop    edx
  41398d:	xchg   esi,eax
  41398e:	sub    BYTE PTR [edx-0x7100a392],0x64
  413995:	lds    edi,FWORD PTR [ebp-0x380599b7]
  41399b:	or     al,0x59
  41399d:	enter  0x4c9d,0xcd
  4139a1:	js     0x4139f0
  4139a3:	cmp    bh,BYTE PTR [eax-0x2a60a6ad]
  4139a9:	fisub  DWORD PTR [edi-0x40]
  4139ac:	pop    edx
  4139ad:	add    DWORD PTR [edx-0x32],ecx
  4139b0:	retf   0xdf0
  4139b3:	or     bh,dh
  4139b5:	daa    
  4139b6:	mov    eax,ds:0xf3a6c602
  4139bb:	cmp    DWORD PTR [esp+ebx*8],0xebd4467b
  4139c2:	out    0xdf,al
  4139c4:	cdq    
  4139c5:	jmp    0xc70e2d3f
  4139ca:	jp     0x4139f1
  4139cc:	inc    ecx
  4139cd:	lods   al,BYTE PTR ds:[esi]
  4139ce:	xor    BYTE PTR [ebp-0xf],al
  4139d1:	sub    al,0xe5
  4139d4:	test   DWORD PTR [edi-0x4a44370c],edx
  4139da:	cmp    edi,DWORD PTR [edi+0x4bb3c210]
  4139e0:	sbb    BYTE PTR [eax-0x1f3e3a2c],bl
  4139e6:	jp     0x4139e0
  4139e8:	or     eax,0xc2f7e3e9
  4139ed:	add    ah,BYTE PTR [ebx]
  4139ef:	mov    ebp,0x879d5088
  4139f4:	shl    BYTE PTR [ebx-0x10b162b7],0x9d
  4139fb:	rol    BYTE PTR [esi+0x54],0x4b
  4139ff:	ror    BYTE PTR ds:0x141e0a4a,cl
  413a05:	push   0x1af0862e
  413a0a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413a0b:	in     eax,dx
  413a0c:	mov    dl,0xfe
  413a0e:	int    0x61
  413a10:	sub    DWORD PTR ds:0xb294c13,esi
  413a16:	fidiv  DWORD PTR [ebx-0x69385b77]
  413a1c:	mov    eax,ds:0x2b10611c
  413a21:	outs   dx,DWORD PTR ds:[esi]
  413a22:	ss nop
  413a24:	sub    BYTE PTR [edi-0x495a5172],dh
  413a2a:	xlat   BYTE PTR ds:[ebx]
  413a2b:	sahf   
  413a2c:	fcom   QWORD PTR [ebx]
  413a2e:	sub    bl,dl
  413a30:	popa   
  413a31:	int3   
  413a32:	call   0x21678f1
  413a37:	xlat   BYTE PTR ds:[ebx]
  413a38:	fdivr  DWORD PTR [ebx+0x49ce2a3c]
  413a3e:	add    DWORD PTR [ecx*1+0x285bb0cf],esp
  413a45:	adc    bh,BYTE PTR [ebp-0x4bb9bdd6]
  413a4b:	push   0x4f290367
  413a50:	je     0x4139dc
  413a52:	and    al,0x1e
  413a54:	mov    edx,0xcc8ae97c
  413a59:	loope  0x413a71
  413a5b:	stos   DWORD PTR es:[edi],eax
  413a5c:	cmp    dh,BYTE PTR [eax-0x73]
  413a5f:	jae    0x413ada
  413a61:	cmp    BYTE PTR [edx+eiz*1-0x288d78d6],dh
  413a68:	cmp    DWORD PTR [ebp-0x5dd1111d],0x44
  413a6f:	mov    BYTE PTR [edi],bl
  413a71:	pop    edi
  413a72:	ficom  DWORD PTR [ebp-0x5c9e6a07]
  413a78:	jle    0x413af7
  413a7a:	shl    DWORD PTR [edx-0x28],0x7f
  413a7e:	mov    DWORD PTR ds:0x808918bd,edi
  413a84:	mov    dh,0x6f
  413a86:	pusha  
  413a87:	neg    BYTE PTR [ebx+0x68]
  413a8a:	jnp    0x413af5
  413a8c:	test   al,0x34
  413a8e:	es jge 0x413a85
  413a91:	shr    DWORD PTR [eax-0x5aaae1ba],0x7d
  413a98:	sub    BYTE PTR [ecx+eiz*4+0x2a43c7ec],bl
  413a9f:	mov    ebp,0xd38968f0
  413aa4:	or     al,0xde
  413aa6:	test   bh,dh
  413aa8:	add    esp,edx
  413aaa:	inc    edx
  413aab:	mov    edi,0xc513b9e7
  413ab0:	jg     0x413b12
  413ab2:	jmp    0x4a66:0x9f1224bf
  413ab9:	jg     0x413b2d
  413abb:	pop    ebx
  413abc:	add    ch,bl
  413abe:	js     0x413a7d
  413ac0:	inc    eax
  413ac1:	mov    bh,0x70
  413ac3:	scas   al,BYTE PTR es:[edi]
  413ac4:	outs   dx,DWORD PTR ds:[esi]
  413ac5:	mov    bl,0x9a
  413ac7:	or     eax,0x2aa35676
  413acc:	pusha  
  413acd:	sar    BYTE PTR [esi-0x4a],cl
  413ad0:	jg     0x413ac6
  413ad2:	popf   
  413ad3:	ffree  st(6)
  413ad5:	mov    dh,0xbd
  413ad7:	ficom  WORD PTR [eax]
  413ad9:	sub    al,0xb9
  413adb:	push   ebp
  413adc:	stc    
  413add:	add    al,0x42
  413adf:	retf   0x1bed
  413ae2:	cmp    al,0x8d
  413ae4:	popf   
  413ae5:	lods   al,BYTE PTR ds:[esi]
  413ae6:	mov    ds:0x60839a70,al
  413aeb:	es push ebx
  413aed:	stc    
  413aee:	outs   dx,BYTE PTR ds:[esi]
  413aef:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413af0:	mov    ecx,DWORD PTR [esi+ecx*8]
  413af3:	jg     0x413ac5
  413af5:	mov    eax,ds:0xb8f406d5
  413afa:	cdq    
  413afb:	jg     0x413ad4
  413afd:	mov    ebx,0xd54d85d7
  413b02:	push   cs
  413b03:	out    0x3e,al
  413b05:	push   ebx
  413b06:	icebp  
  413b07:	stc    
  413b08:	dec    edx
  413b09:	loopne 0x413b66
  413b0b:	or     DWORD PTR ds:0xec9c27a,edi
  413b11:	cli    
  413b12:	arpl   WORD PTR [edi-0x3b],bx
  413b15:	mov    ds:0xd2fdb679,eax
  413b1a:	lods   al,BYTE PTR ds:[esi]
  413b1b:	inc    ecx
  413b1c:	jnp    0x413af3
  413b1e:	mov    ?,esi
  413b20:	mov    BYTE PTR ds:0x2e28e4ac,cl
  413b26:	dec    edx
  413b27:	pushf  
  413b28:	or     al,0x4b
  413b2a:	jae    0x413af7
  413b2c:	mov    BYTE PTR [edi-0x45460a0],ah
  413b32:	push   esp
  413b33:	or     eax,DWORD PTR [eax]
  413b35:	sbb    eax,0xe2df0c7d
  413b3a:	and    ch,BYTE PTR [edi+0x3c]
  413b3d:	loope  0x413b0e
  413b3f:	dec    ebp
  413b40:	fistp  QWORD PTR [ebx+0x35d01122]
  413b46:	dec    ebx
  413b47:	cli    
  413b48:	out    dx,eax
  413b49:	in     al,0x58
  413b4b:	push   ebx
  413b4c:	pop    ebx
  413b4d:	test   DWORD PTR [ecx+0x6f0ffa2f],0xfa85ff65
  413b57:	mov    ds:0x7f4bd7d4,eax
  413b5c:	and    eax,0xf1b3abc3
  413b61:	stos   BYTE PTR es:[edi],al
  413b62:	inc    esi
  413b63:	inc    dh
  413b65:	xor    DWORD PTR [ebx-0x11],eax
  413b68:	test   eax,0x1be02c4a
  413b6d:	repz shl BYTE PTR [eax+0x34b20441],0x36
  413b75:	push   ecx
  413b76:	out    dx,al
  413b77:	adc    BYTE PTR [ebx-0x74e6128d],0xff
  413b7e:	ja     0x413bf9
  413b80:	nop
  413b81:	add    ah,al
  413b83:	mov    ch,0x3c
  413b85:	outs   dx,BYTE PTR ds:[esi]
  413b86:	sbb    ebx,DWORD PTR [edx+0x45659a42]
  413b8c:	sbb    esp,ebp
  413b8e:	adc    bh,BYTE PTR [edi-0x22]
  413b91:	jo     0x413b44
  413b93:	sub    ecx,DWORD PTR [edi-0x62]
  413b96:	jl     0x413b34
  413b98:	(bad)  
  413b99:	repnz add ebp,ecx
  413b9c:	popf   
  413b9d:	adc    cl,BYTE PTR [esi]
  413b9f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413ba0:	mov    WORD PTR [ebp+0x68],es
  413ba3:	div    eax
  413ba5:	call   DWORD PTR [edi-0x3d368ae5]
  413bab:	xchg   ebx,eax
  413bac:	cli    
  413bad:	clc    
  413bae:	fs loop 0x413b5f
  413bb1:	pusha  
  413bb2:	xor    eax,DWORD PTR [edi+0x29]
  413bb5:	xlat   BYTE PTR ds:[ebx]
  413bb6:	imul   ebp,DWORD PTR [edi],0x48
  413bb9:	popf   
  413bba:	sbb    DWORD PTR [ebx],esp
  413bbc:	ins    DWORD PTR es:[edi],dx
  413bbd:	les    esp,FWORD PTR [ecx-0x17e73026]
  413bc3:	jg     0x413b9e
  413bc5:	mov    ah,BYTE PTR [ebp+0x7010afbb]
  413bcb:	pop    ss
  413bcc:	xor    cl,BYTE PTR [edi-0x5c]
  413bcf:	repnz mov al,0xe3
  413bd2:	sbb    edx,0x4
  413bd5:	cmp    DWORD PTR [edx],edi
  413bd7:	addr16 cli 
  413bd9:	sbb    eax,0x8f0044c0
  413bde:	fdiv   DWORD PTR [eax+0x74]
  413be1:	or     bh,BYTE PTR [esi-0x5d]
  413be4:	lock pop eax
  413be6:	out    0xa4,eax
  413be8:	sahf   
  413be9:	mov    al,ds:0xf59b4bb3
  413bee:	popf   
  413bef:	dec    eax
  413bf0:	cmp    eax,0x1b4c49e0
  413bf5:	pop    ss
  413bf6:	push   esi
  413bf7:	imul   edx,DWORD PTR [edi],0xfffffff8
  413bfa:	lahf   
  413bfb:	mov    BYTE PTR [ecx],0x60
  413bfe:	dec    esp
  413bff:	das    
  413c00:	cmp    al,ah
  413c02:	and    eax,0xcecece9
  413c07:	xchg   ebx,eax
  413c08:	fwait
  413c09:	cdq    
  413c0a:	push   ss
  413c0b:	aaa    
  413c0c:	cld    
  413c0d:	cmp    cl,BYTE PTR [ebp+0x21]
  413c10:	stc    
  413c11:	scas   eax,DWORD PTR es:[edi]
  413c12:	adc    ah,BYTE PTR [eax]
  413c14:	das    
  413c15:	gs ss call 0xf7f3:0x4d1a3603
  413c1e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413c1f:	call   0xfc2f70c9
  413c24:	sbb    BYTE PTR [eax-0x75],al
  413c27:	scas   eax,DWORD PTR es:[edi]
  413c28:	popf   
  413c29:	in     al,0xe6
  413c2b:	out    dx,eax
  413c2c:	push   ds
  413c2d:	cs popa 
  413c2f:	arpl   WORD PTR [eax],cx
  413c31:	bound  ecx,QWORD PTR [edx-0x78]
  413c34:	aaa    
  413c35:	shl    BYTE PTR [ecx+ebx*2],0xe
  413c39:	dec    ebp
  413c3a:	fld    DWORD PTR [ebx-0x31]
  413c3d:	neg    DWORD PTR [ebp+0x66c395c5]
  413c43:	add    al,0x48
  413c45:	push   ebp
  413c46:	jl     0x413c9c
  413c48:	pop    ss
  413c49:	xchg   esp,eax
  413c4a:	nop
  413c4b:	sbb    WORD PTR [esi+0x73],ax
  413c4f:	int3   
  413c50:	pop    esi
  413c51:	jae    0x413c97
  413c53:	rcl    dl,1
  413c55:	(bad)  
  413c56:	(bad)  [ebx+0x55]
  413c59:	cwde   
  413c5a:	push   DWORD PTR [edi]
  413c5c:	call   0xdbd317b5
  413c61:	stos   BYTE PTR es:[edi],al
  413c62:	not    BYTE PTR ds:0x9ddc872b
  413c68:	lods   eax,DWORD PTR ds:[esi]
  413c69:	dec    edx
  413c6a:	stos   DWORD PTR es:[edi],eax
  413c6b:	dec    esp
  413c6c:	in     al,dx
  413c6d:	retf   0x714c
  413c70:	fucomi st,st(1)
  413c72:	ret    
  413c73:	nop
  413c74:	pop    esi
  413c75:	inc    edx
  413c76:	push   ss
  413c77:	stc    
  413c78:	xor    ecx,ebx
  413c7a:	popa   
  413c7b:	sbb    dl,BYTE PTR [ecx]
  413c7d:	sar    BYTE PTR [ebp+0x2ecf0b09],cl
  413c83:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413c84:	pop    ebp
  413c85:	cmp    DWORD PTR [edi-0x25a994d1],edi
  413c8b:	mov    ds:0xc81c63a9,eax
  413c90:	push   ds
  413c91:	inc    ecx
  413c92:	test   BYTE PTR [ebp+0x2d],0x86
  413c96:	stos   BYTE PTR es:[edi],al
  413c97:	int    0x57
  413c99:	loope  0x413c64
  413c9b:	jbe    0x413d19
  413c9d:	or     edx,0x119fd416
  413ca3:	jmp    0x3e07:0xfe7ada18
  413caa:	xchg   edx,eax
  413cab:	test   BYTE PTR [esi-0x56],dh
  413cae:	daa    
  413caf:	mov    esi,0x3a4801c2
  413cb4:	icebp  
  413cb5:	adc    eax,0x5416181c
  413cba:	sub    bl,cl
  413cbc:	gs icebp 
  413cbe:	test   BYTE PTR [edi+0x71],dl
  413cc1:	push   edx
  413cc2:	push   ds
  413cc3:	enter  0x35a0,0xc8
  413cc7:	fisttp QWORD PTR [eax+ebp*2-0x6d15fbbe]
  413cce:	push   ecx
  413ccf:	xchg   ebx,eax
  413cd0:	push   0xc703cf03
  413cd5:	cmp    ecx,eax
  413cd7:	jae    0x414703
  413cdd:	lea    eax,[ecx-0x300b]
  413ce3:	mov    DWORD PTR [ebp-0x1c],eax
  413ce6:	jmp    0x4141d5
  413ceb:	(bad)
  413cee:	sub    ah,BYTE PTR [edi-0x4a101292]
  413cf4:	mov    esp,?
  413cf6:	das    
  413cf7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413cf8:	push   es
  413cf9:	xchg   ebx,eax
  413cfa:	dec    ebp
  413cfb:	sbb    BYTE PTR [ecx],0x1
  413cfe:	add    dl,dl
  413d00:	add    al,0x0
  413d02:	add    BYTE PTR ds:0xa7ed96ec,ch
  413d08:	hlt    
  413d09:	adc    ch,dh
  413d0b:	mov    cl,0xcb
  413d0d:	popa   
  413d0e:	mov    edi,0xb64cd955
  413d13:	jb     0x413cc6
  413d15:	and    DWORD PTR [eax+ebx*1-0xe],edi
  413d19:	mov    ebp,0x785309cf
  413d1e:	jno    0x413d4f
  413d20:	(bad)  
  413d21:	cmc    
  413d22:	jb     0x413cd4
  413d24:	push   ss
  413d25:	jge    0x413cf3
  413d27:	mov    dh,0xe7
  413d29:	scas   al,BYTE PTR es:[edi]
  413d2a:	and    edi,DWORD PTR [ebx-0x79]
  413d2d:	pusha  
  413d2e:	ror    DWORD PTR [edx-0x421e061b],0xfd
  413d35:	out    dx,al
  413d36:	lods   al,BYTE PTR ds:[esi]
  413d37:	call   0xbd47d9d3
  413d3c:	inc    ecx
  413d3d:	adc    al,0x4e
  413d3f:	ror    DWORD PTR [edi],0xae
  413d42:	mov    bh,0xfa
  413d44:	mov    cl,BYTE PTR [ebp-0x7e9ba4c2]
  413d4a:	mov    ebx,0x575ecf96
  413d4f:	stc    
  413d50:	jg     0x413da3
  413d52:	mov    ebp,0x63e41ccb
  413d57:	pop    ds
  413d58:	adc    esp,DWORD PTR [edi+0x52a4a316]
  413d5e:	cmp    cl,BYTE PTR [edi-0x5b]
  413d61:	mov    eax,ds:0xaa3a9792
  413d66:	(bad)  
  413d68:	cmp    bh,BYTE PTR [ecx-0x4a38985c]
  413d6e:	aam    0x37
  413d70:	rcr    DWORD PTR [edi+0x46],0xc8
  413d74:	push   0x47
  413d76:	retf   0x3f59
  413d79:	jnp    0x413d7f
  413d7b:	mov    esp,0x34ed94c9
  413d80:	jns    0x413dd5
  413d82:	in     al,0xb8
  413d84:	inc    esi
  413d85:	not    DWORD PTR [edx-0x26ba7469]
  413d8b:	mov    ebx,edi
  413d8d:	adc    DWORD PTR [ecx-0x32],esi
  413d90:	or     eax,0xfa0cec76
  413d95:	pop    es
  413d96:	sub    dl,BYTE PTR [ecx+0x31]
  413d99:	test   DWORD PTR [ebp+0x79],ecx
  413d9c:	or     ah,dh
  413d9e:	loop   0x413dcd
  413da0:	push   es
  413da1:	jb     0x413da7
  413da3:	mov    cx,0x4b73
  413da7:	lahf   
  413da8:	in     eax,0x42
  413daa:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413dab:	jbe    0x413da3
  413dad:	mov    dl,0x58
  413daf:	mov    dh,0x8d
  413db1:	(bad)  
  413db2:	ja     0x413db2
  413db4:	inc    esi
  413db5:	(bad)
  413db8:	in     eax,0x4e
  413dba:	retf   
  413dbb:	dec    esp
  413dbc:	mov    cs,WORD PTR [ebx+0x2]
  413dbf:	mov    edx,0x5362a209
  413dc4:	cdq    
  413dc5:	jecxz  0x413da3
  413dc7:	shl    DWORD PTR [esi-0x56c51b45],cl
  413dcd:	(bad)  
  413dce:	jbe    0x413dd7
  413dd0:	xor    BYTE PTR [ecx-0x76fb8f2b],bh
  413dd6:	int3   
  413dd7:	and    eax,eax
  413dd9:	ja     0x413d66
  413ddb:	shl    edi,0x46
  413dde:	int    0x1f
  413de0:	push   0x4875d353
  413de5:	mov    BYTE PTR [esi-0x70eac016],bh
  413deb:	cmp    al,0xd6
  413ded:	push   0xe2f80221
  413df2:	hlt    
  413df3:	or     ah,0xb5
  413df6:	push   edx
  413df7:	call   DWORD PTR [ebx+0x319d51a0]
  413dfd:	rcr    DWORD PTR [esi+eax*8+0x6541ee05],0x7b
  413e05:	call   0xb218:0x6af57679
  413e0c:	jp     0x413e2e
  413e0e:	cmp    eax,0x9b2303ee
  413e13:	and    al,0x62
  413e15:	test   ebx,ecx
  413e17:	retf   
  413e18:	xchg   ecx,eax
  413e19:	cmp    BYTE PTR [edx],0xd4
  413e1c:	jge    0x413e78
  413e1e:	(bad)  
  413e1f:	mov    edx,esi
  413e21:	xor    cl,BYTE PTR [edi+esi*8-0x49f566b7]
  413e28:	jbe    0x413dc5
  413e2a:	shl    DWORD PTR [ebp+0x4c],cl
  413e2d:	in     al,0x9
  413e2f:	jae    0x413e07
  413e31:	adc    ebp,DWORD PTR [edx-0x7f4bc3e4]
  413e37:	leave  
  413e38:	jo     0x413e5d
  413e3a:	dec    ebx
  413e3b:	adc    eax,0x70c4a59f
  413e40:	push   esp
  413e41:	push   0x3e4f5629
  413e46:	(bad)  
  413e47:	out    0xcf,al
  413e49:	dec    ebp
  413e4a:	sbb    ch,al
  413e4c:	dec    ecx
  413e4d:	fs pop ecx
  413e4f:	std    
  413e50:	inc    ah
  413e52:	bound  ebx,QWORD PTR [esi+0x32]
  413e55:	stc    
  413e56:	add    eax,0xbc65c843
  413e5b:	pop    ebp
  413e5c:	shl    BYTE PTR [esi+ecx*2+0x6d0635f2],0xcb
  413e64:	push   ebp
  413e65:	xlat   BYTE PTR ds:[ebx]
  413e66:	aad    0x91
  413e68:	push   ss
  413e69:	(bad)  
  413e6a:	sbb    BYTE PTR [eax+0x1e1ebdc1],dl
  413e70:	(bad)  
  413e71:	lds    ecx,FWORD PTR [ebp-0x12]
  413e74:	mul    DWORD PTR [ebx]
  413e76:	(bad)  
  413e77:	out    0xf6,eax
  413e79:	(bad)  [ebp-0x3d]
  413e7c:	mov    ecx,0x58da3f8b
  413e81:	or     eax,DWORD PTR [edi]
  413e83:	push   edx
  413e84:	inc    eax
  413e85:	mov    cl,0xda
  413e87:	das    
  413e88:	fld    TBYTE PTR [esi]
  413e8a:	sub    bh,BYTE PTR [ebx]
  413e8c:	mov    bh,0xa9
  413e8e:	vmwrite esi,DWORD PTR [ebp-0x72]
  413e92:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413e93:	and    esp,DWORD PTR [eax]
  413e95:	(bad)  
  413e96:	cmp    ebx,esi
  413e98:	jmp    0xbb27ae86
  413e9d:	dec    eax
  413e9e:	lods   eax,DWORD PTR ds:[esi]
  413e9f:	nop
  413ea0:	cmp    eax,0xd4b643ef
  413ea5:	ss jg  0x413eed
  413ea8:	push   edi
  413ea9:	les    edx,FWORD PTR [edi+0x47]
  413eac:	mov    ds:0x7f10276,al
  413eb1:	inc    ebx
  413eb2:	(bad)  
  413eb3:	stos   DWORD PTR es:[edi],eax
  413eb4:	cmp    BYTE PTR [ecx-0xe],al
  413eb7:	dec    ebp
  413eb8:	lods   al,BYTE PTR ds:[esi]
  413eb9:	out    dx,al
  413eba:	retf   0x6a3f
  413ebd:	add    DWORD PTR [esi],edi
  413ebf:	repz inc esp
  413ec1:	outs   dx,DWORD PTR ds:[esi]
  413ec2:	fdivr  QWORD PTR [ebx+eax*4-0x69af6d05]
  413ec9:	adc    dh,ah
  413ecb:	xor    ebx,edx
  413ecd:	loope  0x413f4c
  413ecf:	int3   
  413ed0:	(bad)  
  413ed2:	clc    
  413ed3:	cmp    ebp,DWORD PTR [ebx]
  413ed5:	fs int3 
  413ed7:	mov    DWORD PTR [edi+0x502fbb26],ecx
  413edd:	call   0xbac034e8
  413ee2:	adc    eax,DWORD PTR [ebx*8-0x2e93af1e]
  413ee9:	fcmovb st,st(6)
  413eeb:	call   0xb193:0x72052dd4
  413ef2:	in     al,dx
  413ef3:	out    dx,al
  413ef4:	sti    
  413ef5:	push   es
  413ef6:	addr16 push esi
  413ef8:	xchg   ebp,eax
  413ef9:	outs   dx,DWORD PTR ds:[esi]
  413efa:	pushf  
  413efb:	dec    esp
  413efc:	cmp    BYTE PTR [ebx+0x5a],ch
  413eff:	mov    gs,WORD PTR [edi]
  413f01:	call   0xbe90:0x4c954433
  413f08:	std    
  413f09:	fldcw  WORD PTR [ebx+0x6d]
  413f0c:	jp     0x413f46
  413f0e:	xchg   ah,dl
  413f10:	arpl   ax,dx
  413f12:	cmp    BYTE PTR [edx],dh
  413f14:	fistp  DWORD PTR [edx+edi*1]
  413f17:	mov    bh,0x5c
  413f19:	inc    ecx
  413f1a:	xchg   esi,eax
  413f1b:	xchg   BYTE PTR [eax+0x3f445d50],ch
  413f21:	aam    0x2a
  413f23:	mov    ch,0x2
  413f25:	arpl   WORD PTR [ebp-0x30],si
  413f28:	pop    es
  413f29:	push   eax
  413f2a:	in     eax,0xef
  413f2c:	aas    
  413f2d:	xchg   esp,eax
  413f2e:	scas   eax,DWORD PTR es:[edi]
  413f2f:	sti    
  413f30:	lods   eax,DWORD PTR ds:[esi]
  413f31:	pop    ebx
  413f32:	fdivr  DWORD PTR [ecx+0x4f]
  413f35:	pusha  
  413f36:	pusha  
  413f37:	xchg   ebp,eax
  413f38:	adc    esp,ebx
  413f3a:	add    al,0xa8
  413f3c:	scas   eax,DWORD PTR es:[edi]
  413f3d:	maxps  xmm1,XMMWORD PTR [eax+0x44]
  413f41:	(bad)  
  413f42:	jmp    0x413f17
  413f44:	add    dl,BYTE PTR [ecx-0x4a4d1154]
  413f4a:	leave  
  413f4b:	inc    edi
  413f4c:	adc    al,0x3
  413f4e:	xor    eax,0x87926796
  413f53:	fs in  al,dx
  413f55:	dec    eax
  413f56:	cdq    
  413f57:	shl    cl,0xef
  413f5a:	and    ecx,DWORD PTR [eax+0x6c]
  413f5d:	aas    
  413f5e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413f5f:	nop
  413f60:	sub    BYTE PTR [edx-0x3126627c],0x9e
  413f67:	dec    ebp
  413f68:	push   ebp
  413f69:	dec    edx
  413f6a:	js     0x413f72
  413f6c:	into   
  413f6d:	or     eax,0x40f9dc2b
  413f72:	test   DWORD PTR [ebp-0x1141efd2],ecx
  413f78:	test   eax,0xdd316b6
  413f7d:	cmp    al,0xed
  413f7f:	scas   al,BYTE PTR es:[edi]
  413f80:	lods   al,BYTE PTR fs:[esi]
  413f82:	cs mov cl,0xde
  413f85:	and    al,0x23
  413f87:	enter  0x9392,0xa2
  413f8b:	repnz imul eax
  413f8e:	xlat   BYTE PTR ds:[ebx]
  413f8f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413f90:	scas   al,BYTE PTR es:[edi]
  413f91:	mov    ch,0xe
  413f93:	hlt    
  413f94:	ins    DWORD PTR es:[edi],dx
  413f95:	sbb    DWORD PTR [edx],edx
  413f97:	jae    0x413ff7
  413f99:	dec    esi
  413f9a:	stos   BYTE PTR es:[edi],al
  413f9b:	ret    0x25e7
  413f9e:	scas   eax,DWORD PTR es:[edi]
  413f9f:	ds pop es
  413fa1:	mov    al,ds:0x38309f23
  413fa6:	adc    BYTE PTR [edi-0x44fdeb46],ah
  413fac:	fmul   DWORD PTR fs:[esp+ebx*2-0x7c]
  413fb1:	jb     0x413f55
  413fb3:	popa   
  413fb4:	shl    edi,1
  413fb6:	ss inc edx
  413fb8:	aam    0xa4
  413fba:	push   esi
  413fbb:	int    0x93
  413fbd:	cwde   
  413fbe:	lea    eax,[ecx]
  413fc0:	stc    
  413fc1:	(bad)  
  413fc2:	call   0x3048440c
  413fc7:	arpl   cx,ax
  413fc9:	mov    al,0xf
  413fcb:	out    0xd5,eax
  413fcd:	rcl    DWORD PTR [edx+0x4bb5aa40],cl
  413fd3:	imul   ecx,DWORD PTR [ebx],0xffffffef
  413fd6:	fisub  DWORD PTR ds:[eax+0xa64f223]
  413fdd:	mov    ds,WORD PTR [ebp-0x32]
  413fe0:	(bad)  
  413fe1:	pop    ebp
  413fe2:	or     ah,BYTE PTR [edi]
  413fe4:	mov    edx,DWORD PTR [edi+esi*8]
  413fe7:	icebp  
  413fe8:	inc    ecx
  413fe9:	jb     0x414067
  413feb:	(bad)  [esi+0x76f9912b]
  413ff1:	mov    edx,0xe60fc359
  413ff6:	popa   
  413ff7:	sbb    BYTE PTR [esi],cl
  413ff9:	scas   eax,DWORD PTR es:[edi]
  413ffa:	dec    esp
  413ffb:	jmp    0x84c0c159
  414000:	dec    ecx
  414001:	cs popf 
  414003:	jns    0x413fb2
  414005:	lahf   
  414006:	sbb    eax,0xe8bc0337
  41400b:	sbb    BYTE PTR [esi],dh
  41400d:	ins    DWORD PTR es:[edi],dx
  41400e:	(bad)  
  41400f:	call   DWORD PTR [ebp+0x15]
  414012:	push   ecx
  414013:	inc    ebx
  414014:	mov    ds:0x14d8131c,eax
  414019:	push   ds
  41401a:	out    dx,eax
  41401b:	xchg   esp,eax
  41401c:	and    BYTE PTR [edi],bh
  41401e:	mov    bh,0xdd
  414020:	mov    eax,0x65dc58c5
  414025:	mov    esi,0xb7f5925f
  41402a:	fwait
  41402b:	jmp    0x414060
  41402d:	cmp    eax,ebx
  41402f:	xor    ah,ch
  414031:	push   ecx
  414032:	sbb    eax,0xbb2b5071
  414037:	jno    0x414038
  414039:	mov    ch,0x72
  41403b:	iret   
  41403c:	xor    al,0xd8
  41403e:	mov    BYTE PTR [esi+0x1b8b31da],0xa1
  414045:	fst    DWORD PTR [eax]
  414047:	inc    edx
  414048:	or     al,0x14
  41404a:	xchg   eax,ebp
  41404c:	and    ebx,edx
  41404e:	popa   
  41404f:	cmp    eax,0x2c7ee95c
  414054:	jnp    0x414016
  414056:	pop    eax
  414057:	push   ebx
  414058:	je     0x413fe3
  41405a:	shl    BYTE PTR [edi],cl
  41405c:	shl    BYTE PTR [ecx+eiz*1-0x5b],1
  414060:	add    DWORD PTR [eax],eax
  414062:	cmp    DWORD PTR [esi-0x73a38a03],edi
  414068:	mov    ds:0xb76cb13d,eax
  41406d:	clc    
  41406e:	int    0x5b
  414070:	call   DWORD PTR [ebp-0x15]
  414073:	inc    ebx
  414074:	out    dx,eax
  414075:	mov    ds:0x3f12c409,al
  41407a:	ror    BYTE PTR [esi+0x2a098dc4],cl
  414080:	cwde   
  414081:	mov    DWORD PTR [edi],edi
  414083:	push   edi
  414084:	dec    ecx
  414085:	mov    dh,0xf5
  414087:	test   eax,0x3051aad5
  41408c:	out    dx,eax
  41408d:	add    ebx,DWORD PTR [edx]
  41408f:	fadd   DWORD PTR [ebx-0x46]
  414092:	add    DWORD PTR [esi+0x5eb53c9],eax
  414098:	inc    ecx
  414099:	xchg   DWORD PTR [edi+eiz*4-0x17],ebp
  41409d:	out    0x68,eax
  41409f:	mov    WORD PTR [edi-0x1e1d9f41],ss
  4140a5:	ret    0x522d
  4140a8:	outs   dx,BYTE PTR ds:[esi]
  4140a9:	or     cl,BYTE PTR [edi+0x45578084]
  4140af:	sub    dl,BYTE PTR [esi-0x31d93643]
  4140b5:	in     eax,0xcd
  4140b7:	sub    bl,0xa8
  4140ba:	sbb    esp,DWORD PTR [esi]
  4140bc:	jmp    0xe9cb:0x84f19261
  4140c3:	pop    ebx
  4140c4:	inc    esi
  4140c5:	or     ebp,DWORD PTR fs:[edx+0x33f6d776]
  4140cc:	jmp    0x6554:0xac9307f5
  4140d3:	and    ecx,DWORD PTR [ebp-0x35]
  4140d6:	ret    
  4140d7:	ret    
  4140d8:	enter  0x59de,0x87
  4140dc:	out    dx,al
  4140dd:	cwde   
  4140de:	call   0xf92e:0x408a68ac
  4140e5:	inc    edi
  4140e6:	out    0x18,eax
  4140e8:	and    ax,0xe30a
  4140ec:	sbb    BYTE PTR [ebx],ah
  4140ee:	and    dl,BYTE PTR [ebx]
  4140f0:	(bad)  
  4140f1:	jle    0x4140a3
  4140f3:	in     eax,0xcf
  4140f5:	iret   
  4140f6:	aad    0xd8
  4140f8:	test   DWORD PTR [edi+ecx*4],0x50d184a0
  4140ff:	mov    eax,0x74517aa
  414104:	mov    al,ds:0xa9ff9d1e
  414109:	lahf   
  41410a:	xor    bl,BYTE PTR [ebx+0x6b]
  41410d:	jle    0x4140b2
  41410f:	jmp    0x104a:0xb75cb068
  414116:	arpl   WORD PTR [ebx-0x1af6a223],dx
  41411c:	mov    es,WORD PTR [esi-0x4]
  41411f:	mov    ch,BYTE PTR [ebx+0x6e]
  414122:	or     BYTE PTR [eax],ah
  414124:	push   eax
  414125:	cmp    ebx,DWORD PTR [ebp+ebp*4+0x59]
  414129:	call   0x1dcf:0x16ac91b4
  414130:	sti    
  414131:	lods   al,BYTE PTR ds:[esi]
  414132:	xor    BYTE PTR [ebx],0x6d
  414135:	aas    
  414136:	dec    ebx
  414137:	inc    esp
  414138:	loopne 0x414197
  41413a:	sti    
  41413b:	popa   
  41413c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41413d:	(bad)  
  41413e:	mov    al,0x12
  414140:	mov    esi,0x1c4a047a
  414145:	push   esp
  414146:	pop    esp
  414147:	jmp    0x7a31:0xd37792e3
  41414e:	scas   eax,DWORD PTR es:[edi]
  41414f:	mov    esi,0xc489b5b4
  414154:	xchg   edi,eax
  414155:	push   cs
  414156:	dec    ecx
  414157:	leave  
  414158:	pop    edi
  414159:	dec    edx
  41415a:	iret   
  41415b:	fstp   TBYTE PTR [esi]
  41415d:	imul   esp,DWORD PTR [edx-0x16],0xefda70ec
  414164:	stos   DWORD PTR es:[edi],eax
  414165:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414166:	xor    ebp,esp
  414168:	call   0xa928:0x1fa61d7b
  41416f:	inc    esp
  414170:	out    0x78,eax
  414172:	stos   BYTE PTR es:[edi],al
  414173:	sbb    DWORD PTR [edi],0x5f128d6d
  414179:	push   esp
  41417a:	aaa    
  41417b:	mov    eax,ds:0xdad0408a
  414180:	mov    edx,0x1074d335
  414185:	and    BYTE PTR [ebx*8-0x5281552e],0x18
  41418d:	xchg   esp,eax
  41418e:	pop    ecx
  41418f:	push   esp
  414190:	dec    edi
  414191:	dec    esp
  414192:	cmp    DWORD PTR [ebx+eax*1],esi
  414195:	int    0x73
  414197:	(bad)  
  414198:	sub    al,0x75
  41419a:	js     0x41413a
  41419c:	jae    0x4141b4
  41419e:	mov    ebx,0x3b59b0c3
  4141a3:	jb     0x414129
  4141a5:	in     al,0x42
  4141a7:	dec    esi
  4141a8:	mov    edx,eax
  4141aa:	(bad)  [ebp-0x2b0363ad]
  4141b0:	push   ds
  4141b1:	in     eax,dx
  4141b2:	dec    esi
  4141b3:	fistp  DWORD PTR [ecx-0x32]
  4141b6:	cmc    
  4141b7:	pop    ebp
  4141b8:	adc    esi,DWORD PTR [edx+0x7]
  4141bb:	mov    ah,0xee
  4141bd:	sbb    esi,edi
  4141bf:	pop    esi
  4141c0:	cmc    
  4141c1:	jo     0x41415c
  4141c3:	mov    al,0x6e
  4141c5:	inc    eax
  4141c6:	mov    ebx,0xcb9c8f88
  4141cb:	fsub   st(3),st
  4141cd:	xchg   esi,eax
  4141ce:	sub    BYTE PTR [eax+0x66],al
  4141d1:	sub    al,0x90
  4141d3:	and    edi,DWORD PTR [ebx+ecx*4+0x55]
  4141d7:	in     al,0x33
  4141d9:	(bad)  
  4141da:	add    edx,0x7837233d
  4141e0:	lea    eax,[ebp+ecx*4-0x60]
  4141e4:	mov    DWORD PTR [eax],edx
  4141e6:	jmp    0x4146d5
  4141eb:	push   edx
  4141ec:	mov    ds:0xd6f38673,eax
  4141f1:	div    edi
  4141f3:	aam    0x2f
  4141f5:	mov    ah,0x65
  4141f7:	nop
  4141f8:	in     eax,0x95
  4141fa:	jb     0x41424e
  4141fc:	push   ds
  4141fd:	add    DWORD PTR [eax],eax
  4141ff:	rol    BYTE PTR [eax+eax*1],cl
  414202:	add    BYTE PTR [edx-0x50d71339],bh
  414208:	jns    0x4141d8
  41420a:	shl    DWORD PTR [ebp-0x71],0xf3
  41420e:	std    
  41420f:	sbb    BYTE PTR [esp+ebx*1+0x5db7070],ah
  414216:	dec    edi
  414217:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414218:	hlt    
  414219:	repz sbb DWORD PTR [eax-0x4deb1269],ebp
  414220:	leave  
  414221:	xchg   edx,eax
  414222:	mov    ?,WORD PTR [eax]
  414224:	test   DWORD PTR [edi+ebp*2],0xa56c6ca6
  41422b:	dec    eax
  41422c:	inc    eax
  41422d:	mov    al,ds:0xee39f29f
  414232:	mov    bl,0x1d
  414234:	push   ss
  414235:	aaa    
  414236:	mov    eax,ds:0x518a6699
  41423b:	cmp    DWORD PTR [edi+0x17],edx
  41423e:	je     0x41420a
  414240:	push   0xffffff80
  414242:	leave  
  414243:	and    ah,BYTE PTR cs:[ecx+0x114e3e17]
  41424a:	mov    ch,0xb5
  41424c:	and    eax,ebp
  41424e:	mov    ds:0xafeca4e7,eax
  414253:	sti    
  414254:	data16 cli 
  414256:	das    
  414257:	retf   0x895b
  41425a:	push   ds
  41425b:	and    al,0x7
  41425d:	arpl   WORD PTR [ebp+0x53],di
  414260:	or     al,0xb7
  414262:	jbe    0x4142d9
  414264:	scas   al,BYTE PTR es:[edi]
  414265:	xor    esi,DWORD PTR [edx+eax*4-0x27]
  414269:	push   edi
  41426a:	jnp    0x4141fd
  41426c:	push   cs
  41426d:	mov    WORD PTR [ebx+esi*4],es
  414270:	dec    ebx
  414271:	in     al,dx
  414272:	clc    
  414273:	mov    dl,dh
  414275:	ja     0x41427d
  414277:	dec    ebp
  414278:	cmp    al,0x43
  41427a:	rol    BYTE PTR es:[ecx],0xf0
  41427e:	xor    dl,BYTE PTR [ebp+0x5baa5fe4]
  414284:	into   
  414285:	pop    ss
  414286:	fsub   QWORD PTR [edi+0x3886c655]
  41428c:	out    0x85,al
  41428e:	inc    esi
  41428f:	cmp    dh,BYTE PTR ds:0x979a8c64
  414295:	sub    al,0x9e
  414297:	arpl   WORD PTR [esi+0x92a878],ax
  41429d:	test   DWORD PTR [eax+0x43aed70f],ebx
  4142a3:	and    eax,0xa77c0277
  4142a8:	mov    ah,0xb4
  4142aa:	imul   esp,esp,0x1c
  4142ad:	or     dh,BYTE PTR [esi+eax*2]
  4142b0:	sbb    ebp,DWORD PTR [ebp+0x99852a5]
  4142b6:	not    BYTE PTR [edx]
  4142b8:	adc    DWORD PTR [edi-0x734a7eb7],ebx
  4142be:	mov    cl,0x85
  4142c0:	clc    
  4142c1:	xchg   esi,eax
  4142c2:	mov    ah,0xd5
  4142c4:	cmc    
  4142c5:	clc    
  4142c6:	je     0x414249
  4142c8:	int3   
  4142c9:	data16 clc 
  4142cb:	mov    DWORD PTR [ebp+eax*1-0x63d45052],ebp
  4142d2:	dec    edi
  4142d3:	adc    al,BYTE PTR [esi-0x5e761db4]
  4142d9:	in     eax,0x13
  4142db:	arpl   WORD PTR [ebx-0x6379e80b],bp
  4142e1:	rcr    BYTE PTR [ecx+0x15c8db1a],0x55
  4142e8:	jg     0x414352
  4142ea:	je     0x414294
  4142ec:	adc    DWORD PTR [edi+0x4a],esp
  4142ef:	inc    ebx
  4142f0:	pop    esp
  4142f1:	cwde   
  4142f2:	push   0x9db1db2
  4142f7:	(bad)  
  4142f8:	idiv   BYTE PTR [esi-0x74]
  4142fb:	fisubr DWORD PTR [ecx+0x3471b4d1]
  414301:	ret    
  414302:	(bad)  
  414303:	xchg   edx,eax
  414304:	daa    
  414305:	adc    al,0x47
  414307:	(bad)  
  414308:	in     eax,0x72
  41430a:	xchg   ecx,eax
  41430b:	rcl    ch,0xa5
  41430e:	xlat   BYTE PTR ds:[ebx]
  41430f:	pop    esp
  414310:	jle    0x414331
  414312:	mov    edi,eax
  414314:	xchg   edx,eax
  414315:	es addr16 jbe 0x4142dd
  414319:	(bad)  
  41431a:	bts    DWORD PTR [edx*4-0x1abe4f00],edx
  414322:	mov    ch,0x87
  414324:	scas   al,BYTE PTR es:[edi]
  414325:	sub    al,0xa8
  414327:	ret    
  414328:	inc    ecx
  414329:	dec    esp
  41432a:	inc    esp
  41432b:	retf   0xf60d
  41432e:	lea    ebp,[ebx]
  414330:	cmp    eax,0x9b8246ff
  414335:	or     ecx,esi
  414337:	cwde   
  414338:	outs   dx,DWORD PTR ds:[esi]
  414339:	jo     0x4142fc
  41433b:	iret   
  41433c:	jnp    0x41438f
  41433e:	mov    edi,DWORD PTR [edx+0x64e00194]
  414344:	mov    ds:0xdffd8942,eax
  414349:	add    ebp,edi
  41434b:	mov    ah,0xc3
  41434d:	enter  0xe41f,0x84
  414351:	test   edx,0xd67cca57
  414357:	sbb    al,0xcd
  414359:	lods   eax,DWORD PTR ds:[esi]
  41435a:	jns    0x414375
  41435c:	sahf   
  41435d:	sbb    al,0x2
  41435f:	and    ebp,DWORD PTR [ebx+0x3c]
  414362:	(bad)  
  414363:	sbb    eax,0x4b403481
  414368:	sub    DWORD PTR [eax+ebx*4],edi
  41436b:	lea    ebx,[ebp+eax*8-0x4078c8a8]
  414372:	and    esi,DWORD PTR [esi+ebx*8+0x5e479134]
  414379:	ja     0x4143e2
  41437b:	xchg   edx,eax
  41437c:	repz push 0xffffffd5
  41437f:	(bad)  
  414380:	mov    WORD PTR [eax-0x70],fs
  414383:	imul   esp,DWORD PTR [ecx],0x48b05a31
  414389:	adc    BYTE PTR [ecx],ah
  41438b:	and    ebx,DWORD PTR [ecx+0x2564be7a]
  414391:	ss mov esi,0xab593115
  414397:	icebp  
  414398:	repz cld 
  41439a:	loop   0x41438e
  41439c:	mov    ds:0x7db5113f,al
  4143a1:	pop    ss
  4143a2:	js     0x4143f7
  4143a4:	(bad)  
  4143a5:	dec    ecx
  4143a6:	dec    ebp
  4143a7:	inc    esi
  4143a8:	xor    ebp,DWORD PTR [ebx-0x32]
  4143ab:	rcl    BYTE PTR [bx+si-0x780c],1
  4143b0:	mov    eax,0xa9650d89
  4143b5:	bound  edi,QWORD PTR [ebx+0x630b487f]
  4143bb:	add    ax,0x414f
  4143bf:	xor    al,0x17
  4143c1:	aad    0x53
  4143c3:	jne    0x4143fa
  4143c5:	xchg   esi,eax
  4143c6:	dec    esi
  4143c7:	push   ss
  4143c8:	(bad)
  4143cb:	hlt    
  4143cc:	mov    dl,0xff
  4143ce:	mov    ebp,0xf4a3e68f
  4143d3:	lods   al,BYTE PTR ds:[esi]
  4143d4:	mov    cl,0xc6
  4143d6:	pop    esp
  4143d7:	xor    edx,edi
  4143d9:	mov    ebp,0xf5b4cea1
  4143de:	xlat   BYTE PTR ds:[ebx]
  4143df:	cmp    al,0xe9
  4143e1:	and    ah,BYTE PTR [edx+0x3]
  4143e4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4143e5:	sbb    al,0x93
  4143e8:	inc    bx
  4143ea:	mov    dl,0x6c
  4143ec:	out    0xec,eax
  4143ee:	adc    bh,BYTE PTR [ebp-0x2a]
  4143f1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4143f2:	mov    dl,0x31
  4143f4:	(bad)  
  4143f6:	out    dx,eax
  4143f7:	je     0x414436
  4143f9:	(bad)  
  4143fa:	xchg   edi,eax
  4143fb:	dec    eax
  4143fc:	cs jno 0x414453
  4143ff:	xlat   BYTE PTR ds:[ebx]
  414400:	shr    DWORD PTR [ebp+eax*4+0x5b],cl
  414404:	adc    BYTE PTR [eax],ch
  414406:	sub    DWORD PTR [edi],esp
  414408:	adc    ebp,ebx
  41440a:	inc    edi
  41440b:	fisttp DWORD PTR [edi-0x5557354]
  414411:	mov    al,ds:0x7cafc203
  414416:	(bad)  
  414418:	xchg   DWORD PTR [esi-0x39016a78],eax
  41441e:	fld    DWORD PTR [eax-0x60]
  414421:	adc    ebx,esi
  414423:	mov    esp,DWORD PTR [eax+edi*4]
  414426:	popf   
  414427:	mov    ah,0x93
  414429:	ss xor al,0xda
  41442c:	xor    DWORD PTR [edi],edx
  41442e:	sub    al,0xc7
  414430:	push   ebp
  414431:	add    dh,BYTE PTR [ecx]
  414433:	es or  bh,bh
  414436:	imul   edi,DWORD PTR [edi],0x3c
  414439:	xchg   di,ax
  41443b:	mov    edx,DWORD PTR [esi]
  41443d:	adc    DWORD PTR [edi],edi
  41443f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414440:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414441:	lahf   
  414442:	inc    esi
  414443:	popf   
  414444:	jbe    0x414448
  414446:	sti    
  414447:	cwde   
  414448:	push   edi
  414449:	iret   
  41444a:	enter  0x7b94,0x9e
  41444e:	in     eax,0x1c
  414450:	aaa    
  414451:	and    eax,0xda0b57c3
  414456:	pop    edx
  414457:	ffree  st(1)
  414459:	aas    
  41445a:	push   eax
  41445b:	scas   al,BYTE PTR es:[edi]
  41445c:	xlat   BYTE PTR ds:[ebx]
  41445d:	ss add ah,bl
  414460:	call   0xc768555
  414465:	mov    ch,0x88
  414467:	cmp    BYTE PTR [ebp-0x1b],dh
  41446a:	je     0x4144e9
  41446c:	pop    esp
  41446d:	or     eax,0x68d57549
  414472:	iret   
  414473:	xchg   DWORD PTR [edx+0xb7c8202],eax
  414479:	jo     0x41449f
  41447b:	in     eax,dx
  41447c:	pusha  
  41447d:	xchg   esi,eax
  41447e:	pop    ebx
  41447f:	dec    ebx
  414480:	cmp    al,0x33
  414482:	inc    ecx
  414483:	mov    ds:0xb98e8926,al
  414488:	and    BYTE PTR [eax-0x76],bh
  41448b:	push   0xffffff8c
  41448d:	mov    ebp,0x9a44bb0
  414492:	mov    edi,0xba48e0c9
  414497:	or     DWORD PTR [esi-0x39],eax
  41449a:	dec    edx
  41449b:	cwde   
  41449c:	jmp    0xe95bd8d
  4144a1:	jns    0x414442
  4144a3:	sahf   
  4144a4:	dec    ecx
  4144a5:	cmp    edi,DWORD PTR [esi-0x3549b82f]
  4144ab:	fidivr WORD PTR [ebx+edi*4+0x41]
  4144af:	sub    bl,ah
  4144b1:	outs   dx,DWORD PTR ds:[esi]
  4144b2:	jl     0x414515
  4144b4:	cli    
  4144b5:	std    
  4144b6:	stos   DWORD PTR es:[edi],eax
  4144b7:	jge    0x414451
  4144b9:	adc    eax,0xeb48d110
  4144be:	js     0x414522
  4144c0:	int3   
  4144c1:	xor    eax,0x5538079
  4144c6:	cwde   
  4144c7:	stos   BYTE PTR es:[edi],al
  4144c8:	into   
  4144c9:	mov    ah,BYTE PTR [ebp+0x2b]
  4144cc:	pop    ebp
  4144cd:	(bad)
  4144d1:	sbb    edx,0x6a
  4144d4:	sbb    ebx,DWORD PTR [edx-0x31]
  4144d7:	int3   
  4144d8:	ja     0x414502
  4144da:	in     al,dx
  4144db:	bound  ebx,QWORD PTR [edi+edi*1+0x70167b58]
  4144e2:	adc    ch,BYTE PTR [edi]
  4144e4:	dec    edi
  4144e5:	sti    
  4144e6:	push   edx
  4144e7:	fsubr  QWORD PTR [ecx+0x20]
  4144ea:	cmp    dl,bl
  4144ec:	and    dh,BYTE PTR [esi+0x54]
  4144ef:	fisttp DWORD PTR [ebp-0x33]
  4144f2:	jmp    0x4144e4
  4144f4:	pop    eax
  4144f5:	or     DWORD PTR [ecx-0x22125cc4],edx
  4144fb:	pop    edx
  4144fc:	mov    eax,0xe42a7a51
  414501:	(bad)  
  414502:	jmp    ebp
  414504:	rep ins BYTE PTR es:[edi],dx
  414506:	fdiv   QWORD PTR es:[ebp+0x39]
  41450a:	cli    
  41450b:	pop    esp
  41450c:	pusha  
  41450d:	cmp    ebp,DWORD PTR [edx-0x8]
  414510:	xchg   ebp,eax
  414511:	push   eax
  414512:	cs add eax,0x1e2c6f2a
  414518:	and    eax,0xc81c2fe8
  41451d:	mov    ebp,DWORD PTR [edx+edx*8+0x11]
  414521:	inc    esi
  414522:	les    edx,FWORD PTR [edx-0x47a69a3c]
  414528:	fsub   QWORD PTR [esi+0xb3a5fa9]
  41452e:	fiadd  DWORD PTR [esi+0x60]
  414531:	push   ebp
  414532:	xlat   BYTE PTR ds:[ebx]
  414533:	sbb    BYTE PTR [esi],ch
  414535:	push   ds
  414536:	mov    edi,0x4f3e2dab
  41453b:	and    eax,0x6aedc30a
  414540:	aaa    
  414541:	push   ebx
  414542:	sar    DWORD PTR [ecx],1
  414544:	pop    ss
  414545:	jp     0x41453a
  414547:	aaa    
  414548:	gs aad 0x44
  41454b:	jge    0x4145bd
  41454d:	shr    ebp,cl
  41454f:	test   ebx,0x81141196
  414555:	mov    eax,0xbff35b39
  41455a:	(bad)  [ebp+0x639c338f]
  414560:	sub    DWORD PTR [eax+0x11f0e19d],0xfffffff9
  414567:	cld    
  414568:	or     ebx,DWORD PTR [ecx]
  41456a:	ds inc esp
  41456c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41456d:	(bad)  
  41456e:	mov    bh,0xbb
  414570:	jmp    0x414597
  414572:	ds push 0xe99bd6bd
  414578:	xchg   edx,eax
  414579:	stc    
  41457a:	je     0x4145ba
  41457c:	int    0xca
  41457e:	pop    esp
  41457f:	test   BYTE PTR [edx+0x56555f82],dh
  414585:	or     ah,bl
  414587:	out    0x47,eax
  414589:	fild   WORD PTR [edi]
  41458b:	inc    edi
  41458c:	ret    0xd195
  41458f:	mov    edx,0x2e27d1bf
  414594:	push   es
  414595:	xor    esp,edx
  414597:	fstp   TBYTE PTR [eax-0x15]
  41459a:	and    eax,DWORD PTR [ebp+0x23f54ac0]
  4145a0:	fcmovnu st,st(7)
  4145a2:	(bad)  [eax+0x26cc36f5]
  4145a8:	or     bl,ch
  4145aa:	inc    esp
  4145ab:	(bad)  
  4145ad:	rol    BYTE PTR [eax+0x27],0x62
  4145b1:	add    ah,BYTE PTR [ebp-0x28a15b62]
  4145b7:	inc    ebx
  4145b8:	inc    ebx
  4145b9:	cmp    bh,BYTE PTR [ecx+0x47]
  4145bc:	pushf  
  4145bd:	fadd   DWORD PTR [ecx+0x70]
  4145c0:	dec    edi
  4145c1:	mov    ebp,0x7560252a
  4145c6:	mov    DWORD PTR [edi],ebx
  4145c8:	out    0x7e,eax
  4145ca:	xchg   ebp,eax
  4145cb:	pop    ecx
  4145cc:	push   0xffffffb0
  4145ce:	out    0xeb,eax
  4145d0:	enter  0xceeb,0x8b
  4145d4:	(bad)  
  4145d5:	cmp    edx,DWORD PTR [ebx+0x49]
  4145d8:	inc    eax
  4145d9:	mov    dl,0xd5
  4145db:	in     eax,dx
  4145dc:	sub    dl,BYTE PTR [edi]
  4145de:	in     eax,dx
  4145df:	mov    edi,0xfaf01653
  4145e4:	std    
  4145e5:	je     0x4145cd
  4145e7:	pop    ds
  4145e8:	jp     0x41462d
  4145ea:	(bad)  
  4145eb:	aam    0x59
  4145ed:	push   esp
  4145ee:	(bad)  
  4145ef:	jmp    0x4145a9
  4145f1:	fsub   st,st(0)
  4145f3:	mov    esp,0x3fb8d054
  4145f8:	cmp    eax,0xfeda0a33
  4145fd:	je     0x4145ad
  4145ff:	les    edx,FWORD PTR cs:[edi+0xafaade4]
  414606:	repnz push ebp
  414608:	ds and al,0x22
  41460b:	call   0xaf04:0x93fdf92c
  414612:	je     0x414629
  414614:	sub    DWORD PTR [ebp+0x6c],edx
  414617:	pop    edi
  414618:	ss mov cs,WORD PTR gs:[ebp-0x16]
  41461d:	loop   0x414673
  41461f:	cmp    BYTE PTR [ebx+ebp*2],cl
  414622:	sub    esp,esp
  414624:	rol    DWORD PTR [ebx+0x4b],0xc5
  414628:	xor    DWORD PTR [eax-0x7c],ecx
  41462b:	push   ss
  41462c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41462d:	mov    bh,0xec
  41462f:	loope  0x4145ec
  414631:	dec    esp
  414632:	xor    edi,DWORD PTR [ebp+ecx*4+0x7d]
  414636:	scas   eax,DWORD PTR es:[edi]
  414637:	mov    cl,BYTE PTR [esi]
  414639:	jmp    0x46f7b2d9
  41463e:	jecxz  0x41466e
  414640:	xchg   ebp,eax
  414641:	push   cs
  414642:	out    0x47,eax
  414644:	pop    edi
  414645:	sub    eax,0xf1bf7942
  41464a:	dec    edx
  41464b:	retf   
  41464c:	jle    0x414650
  41464e:	aaa    
  41464f:	mov    dh,0x25
  414651:	nop
  414652:	and    dl,BYTE PTR ds:0x29b4701a
  414658:	loop   0x4146b3
  41465a:	(bad)  
  41465b:	adc    BYTE PTR [eax+0x37],al
  41465e:	cmc    
  41465f:	sbb    eax,0x55ccfa10
  414664:	add    esi,DWORD PTR [edx+edx*1-0xe]
  414668:	or     edi,DWORD PTR [edi-0x3a639aff]
  41466e:	xchg   esi,eax
  41466f:	fsub   QWORD PTR [eax+edi*4]
  414672:	ror    DWORD PTR [esi-0x3],1
  414675:	sub    ebx,eax
  414677:	fwait
  414678:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414679:	inc    esp
  41467a:	mov    eax,ds:0x688f4174
  41467f:	js     0x4146d8
  414681:	mov    esp,0xcac8362e
  414686:	imul   esp,DWORD PTR [ebp+0x32],0xfc51cdf4
  41468d:	mov    cl,BYTE PTR [eax]
  41468f:	ss stos BYTE PTR es:[edi],al
  414691:	xchg   DWORD PTR [ecx],edi
  414693:	pop    ds
  414694:	or     BYTE PTR [esi],ah
  414696:	and    bl,BYTE PTR [ebx]
  414698:	scas   eax,DWORD PTR es:[edi]
  414699:	add    ch,bl
  41469b:	mov    ah,BYTE PTR [edi]
  41469d:	adc    ebx,esp
  41469f:	ret    
  4146a0:	adc    eax,0x9a74b665
  4146a5:	push   edi
  4146a6:	or     BYTE PTR [edi-0x7f5740c0],dh
  4146ac:	inc    eax
  4146ad:	inc    ebp
  4146ae:	shr    ah,cl
  4146b0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4146b1:	out    0x8c,eax
  4146b3:	loopne 0x414731
  4146b5:	mov    ebx,ss
  4146b7:	mov    esi,0x4312125a
  4146bc:	pop    eax
  4146bd:	out    dx,al
  4146be:	inc    edi
  4146bf:	mov    dl,0xed
  4146c1:	fstp   TBYTE PTR [esi-0x65cbdbd]
  4146c7:	push   cs
  4146c8:	icebp  
  4146c9:	scas   eax,DWORD PTR es:[edi]
  4146ca:	push   es
  4146cb:	xor    al,BYTE PTR ds:0xa4d730a8
  4146d1:	xor    ah,al
  4146d3:	imul   edi,DWORD PTR [edi-0x2cc4ef75],0xb860f
  4146dd:	add    BYTE PTR [eax],al
  4146df:	add    DWORD PTR [eax],0x3870753
  4146e5:	jmp    0x4146f0
  4146ea:	add    DWORD PTR [eax],0xfacc38ad
  4146f0:	mov    eax,DWORD PTR [ebp-0x8]
  4146f3:	xor    eax,esi
  4146f5:	inc    ecx
  4146f6:	inc    DWORD PTR [ebp-0x1c]
  4146f9:	add    eax,edi
  4146fb:	cmp    ecx,eax
  4146fd:	jb     0x4141d5
  414703:	mov    eax,DWORD PTR [ebp-0x10]
  414706:	mov    ecx,DWORD PTR [ebp-0x10]
  414709:	xor    eax,esi
  41470b:	xor    ecx,esi
  41470d:	lea    ecx,[eax+ecx*1+0x6016]
  414714:	mov    eax,DWORD PTR [ebp-0xc]
  414717:	xor    edx,edx
  414719:	div    ecx
  41471b:	mov    eax,DWORD PTR [ebp-0x18]
  41471e:	mov    ecx,DWORD PTR [ebp-0x10]
  414721:	xor    eax,esi
  414723:	xor    ecx,esi
  414725:	sub    eax,ecx
  414727:	cmp    edx,eax
  414729:	jne    0x416624
  41472f:	mov    eax,DWORD PTR [ebp-0xc]
  414732:	add    eax,DWORD PTR [ebp-0x28]
  414735:	mov    ecx,DWORD PTR [ebp-0x14]
  414738:	mov    edx,DWORD PTR [ebp-0x8]
  41473b:	mov    al,BYTE PTR [eax]
  41473d:	xor    ecx,esi
  41473f:	xor    edx,esi
  414741:	add    ecx,edi
  414743:	add    edx,edi
  414745:	mov    BYTE PTR [ebp-0x1],al
  414748:	cmp    ecx,edx
  41474a:	jae    0x414c8a
  414750:	lea    eax,[ecx-0x300b]
  414756:	mov    DWORD PTR [ebp-0x1c],eax
  414759:	mov    edx,DWORD PTR [ebp-0x1c]
  41475c:	xor    edx,esi
  41475e:	add    edx,0x7837233d
  414764:	lea    eax,[ebp+ecx*4-0x60]
  414768:	mov    DWORD PTR [eax],edx
  41476a:	mov    edx,DWORD PTR [eax]
  41476c:	cmp    edx,ebx
  41476e:	jbe    0x414c6e
  414774:	jmp    0x414c63
  414779:	jb     0x414743
  41477b:	mov    BYTE PTR [edi-0x2],0x4f
  41477f:	repz std 
  414781:	dec    edx
  414782:	push   ebp
  414783:	stos   BYTE PTR es:[edi],al
  414784:	or     al,0x83
  414786:	add    ebp,ebx
  414788:	push   ss
  414789:	and    al,0x23
  41478b:	add    DWORD PTR [eax],eax
  41478d:	rol    BYTE PTR [eax+eax*1],cl
  414790:	add    BYTE PTR [ebp+0x3c6a2df2],ch
  414796:	mov    al,0xf0
  414798:	cmp    ch,BYTE PTR [ecx]
  41479a:	mov    ecx,0xb62ce8d8
  41479f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4147a0:	psubb  mm7,mm5
  4147a3:	rcr    DWORD PTR [edx+0x250b53ec],cl
  4147a9:	push   0xeb4ea77d
  4147ae:	arpl   WORD PTR [ebx+0x60],cx
  4147b1:	pop    ebx
  4147b2:	out    0x3f,al
  4147b4:	mov    al,ds:0xef537c16
  4147b9:	popf   
  4147ba:	xchg   edx,eax
  4147bb:	xchg   esi,eax
  4147bc:	jne    0x414818
  4147be:	fsubr  DWORD PTR ds:0x7fed923d
  4147c4:	test   ebx,esi
  4147c6:	xchg   dl,ch
  4147c8:	sbb    al,0x7
  4147ca:	add    dh,0x36
  4147cd:	and    al,0xc4
  4147cf:	stos   BYTE PTR es:[edi],al
  4147d0:	fwait
  4147d1:	mov    eax,0xfff91c08
  4147d6:	xchg   ecx,eax
  4147d7:	or     dh,0xe1
  4147da:	mov    esp,0x379aff23
  4147df:	pop    esi
  4147e0:	addr16 or cl,ah
  4147e3:	or     dh,bl
  4147e5:	dec    edi
  4147e6:	test   ebx,ecx
  4147e8:	in     al,dx
  4147e9:	push   cs
  4147ea:	jl     0x414811
  4147ec:	repnz mov esi,0xa645c95f
  4147f2:	xor    BYTE PTR [ebp-0x60],0xf8
  4147f6:	push   ecx
  4147f7:	aas    
  4147f8:	mov    ch,0x47
  4147fa:	sbb    BYTE PTR [ebp-0x1e],bh
  4147fd:	push   es
  4147fe:	pop    ebp
  4147ff:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414800:	imul   ebx,DWORD PTR [ebx],0x7535cc86
  414806:	mov    bl,0xc6
  414808:	cmp    eax,0x675b92da
  41480d:	mov    ds:0x27ea0286,eax
  414812:	sbb    eax,0x75c764d7
  414817:	push   es
  414818:	out    0x43,al
  41481a:	adc    BYTE PTR [ecx+0x4f],dl
  41481d:	sub    DWORD PTR [ebx],eax
  41481f:	jns    0x4147d9
  414821:	inc    esp
  414822:	push   ebp
  414823:	sub    al,0x28
  414825:	inc    eax
  414826:	jnp    0x41486e
  414828:	dec    edx
  414829:	in     eax,0x5c
  41482b:	mov    ebp,0x9208603d
  414830:	pop    ebx
  414831:	stos   BYTE PTR es:[edi],al
  414832:	sbb    DWORD PTR [ebx+0x1d5d8cd9],eax
  414838:	pop    es
  414839:	fst    QWORD PTR [edx+0xa]
  41483c:	adc    al,0xb0
  41483e:	push   ds
  41483f:	je     0x41483b
  414841:	clc    
  414842:	adc    eax,0x6e9d9d68
  414847:	inc    ebx
  414848:	mov    es:0x7df42cff,al
  41484e:	sbb    eax,DWORD PTR [edx]
  414850:	in     eax,dx
  414851:	imul   edx,DWORD PTR [ebx+0x11],0x40a7bf7c
  414858:	stc    
  414859:	leave  
  41485a:	out    dx,eax
  41485b:	add    ebx,ecx
  41485d:	cmp    BYTE PTR [edi],al
  41485f:	pop    eax
  414860:	into   
  414861:	push   es
  414862:	or     eax,0xf1bd974e
  414867:	ret    0x92f4
  41486a:	push   cs
  41486b:	mov    ebp,0x9d081c7a
  414870:	pusha  
  414871:	jo     0x414866
  414873:	push   esp
  414874:	mov    ah,0x78
  414876:	add    DWORD PTR [edi+0x6017b99d],0xf07d4cf1
  414880:	adc    al,0x65
  414882:	fcom   QWORD PTR [ebx+0x1027a3e0]
  414888:	mov    cs:0x7cb5816d,eax
  41488e:	sub    BYTE PTR [esi+0x7cf1881a],dh
  414894:	mov    cl,0x98
  414896:	scas   eax,DWORD PTR es:[edi]
  414897:	push   ebp
  414898:	dec    edi
  41489a:	out    dx,al
  41489b:	pusha  
  41489c:	adc    al,0x85
  41489e:	enter  0x86aa,0x9
  4148a2:	(bad)  
  4148a4:	sbb    al,0xbc
  4148a6:	call   0xc8d5:0x97d9
  4148ac:	cld    
  4148ad:	lock clc 
  4148af:	popa   
  4148b0:	fwait
  4148b1:	pop    esp
  4148b2:	stos   BYTE PTR es:[edi],al
  4148b3:	jl     0x41486b
  4148b5:	jno    0x414850
  4148b7:	mov    dh,0x20
  4148b9:	push   esp
  4148ba:	mov    bl,0x7d
  4148bc:	ror    dh,cl
  4148be:	ficom  DWORD PTR [esi-0x1fbd965e]
  4148c4:	in     al,dx
  4148c5:	jg     0x41492f
  4148c7:	push   ebp
  4148c8:	pop    eax
  4148c9:	retf   
  4148ca:	das    
  4148cb:	xor    ebp,DWORD PTR [ecx-0x4d3f39fe]
  4148d1:	mov    ebx,0x74d93647
  4148d6:	les    esi,FWORD PTR [edi]
  4148d8:	jmp    0x5b60:0x922489fd
  4148df:	js     0x4148de
  4148e1:	xchg   DWORD PTR [edx+0x601e039c],ecx
  4148e7:	ja     0x414878
  4148e9:	imul   edi,ecx,0x3681c4aa
  4148ef:	pop    ebp
  4148f0:	ja     0x4148ee
  4148f2:	shr    BYTE PTR [ebx+eiz*1],0xe8
  4148f6:	(bad)  
  4148f7:	hlt    
  4148f8:	ret    0x2d86
  4148fb:	iret   
  4148fc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4148fd:	cdq    
  4148fe:	xchg   BYTE PTR [eax-0x6c],cl
  414901:	xchg   esp,eax
  414902:	mov    esp,eax
  414904:	add    WORD PTR [esi+esi*4-0x1e],di
  414909:	sbb    DWORD PTR [ebp+0x7d18e98e],edx
  41490f:	push   es
  414910:	add    eax,0x365acca1
  414915:	jl     0x4148ba
  414917:	jecxz  0x414901
  414919:	push   ebp
  41491a:	pop    ebx
  41491b:	in     al,dx
  41491c:	das    
  41491d:	das    
  41491e:	(bad)  
  41491f:	mov    ds:0xf7f3685e,al
  414924:	bound  ebx,QWORD PTR [esi+0x353f04c3]
  41492a:	popw   ds
  41492c:	push   esi
  41492d:	in     eax,0xaa
  41492f:	dec    ebx
  414930:	mov    ecx,0x545c02fa
  414935:	sar    DWORD PTR [ebx+0x37],1
  414938:	pop    esi
  414939:	popf   
  41493a:	mov    eax,0x4006bc7e
  41493f:	hlt    
  414940:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414941:	retf   
  414942:	ss dec edi
  414944:	jbe    0x4149a6
  414946:	sub    esi,DWORD PTR [edi+ebp*2]
  414949:	adc    eax,0x8bcdaba9
  41494e:	cmp    eax,0x20a33e0
  414953:	pop    ecx
  414954:	neg    BYTE PTR [edx+0x7f692ef1]
  41495a:	idiv   DWORD PTR [ecx-0x10b1e26e]
  414960:	and    al,0xf1
  414962:	inc    edi
  414963:	add    al,0xd4
  414965:	test   al,ch
  414967:	shl    BYTE PTR [ebp-0x76],0xac
  41496b:	test   DWORD PTR [ecx-0x4923aeea],ebp
  414971:	imul   edi,DWORD PTR [edx+edi*8],0x33746df9
  414978:	fsub   st,st(7)
  41497a:	loope  0x4149c9
  41497c:	pop    edx
  41497d:	sbb    al,0x94
  41497f:	xor    DWORD PTR ds:0xa16935a8,ebp
  414985:	mov    esi,0x66aa9b47
  41498a:	jb     0x41499b
  41498c:	imul   BYTE PTR [edx-0x6b1dd8c3]
  414992:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414993:	xchg   ebx,eax
  414994:	pop    eax
  414995:	xchg   BYTE PTR [ebp+0x7e],cl
  414998:	and    eax,0xa29fc2cc
  41499d:	out    dx,eax
  41499e:	mov    eax,0x707f6e03
  4149a3:	mov    dl,0x3
  4149a5:	enter  0x62d5,0x3
  4149a9:	cmp    al,0xb3
  4149ab:	or     ebx,DWORD PTR [ebx]
  4149ad:	xchg   esi,eax
  4149ae:	add    eax,0x2e79056d
  4149b3:	cdq    
  4149b4:	scas   al,BYTE PTR es:[edi]
  4149b5:	mov    ds:0xb9046dd1,eax
  4149ba:	inc    ebx
  4149bb:	rcl    BYTE PTR [esi+0x4279d243],0x7e
  4149c2:	and    bh,dl
  4149c4:	or     si,WORD PTR [ebx+0x13d2804e]
  4149cb:	out    dx,eax
  4149cc:	xchg   DWORD PTR [esi],esp
  4149ce:	sar    esp,1
  4149d0:	inc    esp
  4149d1:	jbe    0x414a34
  4149d3:	es fptan 
  4149d6:	scas   al,BYTE PTR es:[edi]
  4149d7:	or     eax,DWORD PTR [edi+eiz*4]
  4149da:	lock pop ds
  4149dc:	int    0x5f
  4149de:	fbstp  TBYTE PTR [esi]
  4149e0:	lods   eax,DWORD PTR ds:[esi]
  4149e1:	and    eax,0xcb5be343
  4149e6:	dec    ebx
  4149e7:	shl    DWORD PTR [esp+ebx*1],0xcc
  4149eb:	call   0xd47c:0x626f6690
  4149f2:	mov    ch,0x74
  4149f4:	shl    DWORD PTR [edi+0x2e],0xb1
  4149f8:	push   0x46cada5c
  4149fd:	fs rsm 
  414a00:	mov    DWORD PTR [ebp-0x1bb9aba7],esp
  414a06:	(bad)  
  414a07:	dec    edi
  414a08:	sub    eax,ecx
  414a0a:	pop    eax
  414a0b:	inc    edi
  414a0c:	call   0xc086:0x70650dd4
  414a13:	out    dx,al
  414a14:	jb     0x414a8b
  414a16:	stos   BYTE PTR es:[edi],al
  414a17:	jmp    0x414a34
  414a19:	push   ds
  414a1a:	into   
  414a1b:	repz retf 0x720e
  414a1f:	add    BYTE PTR [edi+0x508801b4],bh
  414a25:	inc    ecx
  414a26:	xlat   BYTE PTR ds:[ebx]
  414a27:	sbb    eax,0xb668cfbc
  414a2c:	fisttp DWORD PTR [ebx]
  414a2e:	sti    
  414a2f:	cmc    
  414a30:	pop    ecx
  414a31:	xchg   esp,eax
  414a32:	js     0x414a87
  414a34:	les    ecx,FWORD PTR [edx]
  414a36:	mov    al,BYTE PTR [esi]
  414a38:	add    DWORD PTR [ebp+0x2b],ebp
  414a3b:	mov    ebp,DWORD PTR [ebx+eax*1]
  414a3e:	push   esi
  414a3f:	inc    esp
  414a40:	call   0xa0e3:0x3eb83641
  414a47:	inc    ecx
  414a48:	inc    ebp
  414a49:	test   al,0x32
  414a4b:	idiv   BYTE PTR [ebp+0x6e]
  414a4e:	repz pop ds
  414a50:	cmp    dh,BYTE PTR [eax]
  414a52:	push   cs
  414a53:	mov    ds:0x92c6b06,eax
  414a58:	shr    BYTE PTR [edx-0x733f7e91],1
  414a5e:	or     al,0xdb
  414a60:	call   0xfe37:0x8f1952db
  414a67:	inc    eax
  414a68:	or     ebp,ecx
  414a6a:	or     DWORD PTR [esi],esp
  414a6c:	loop   0x414a25
  414a6e:	mov    al,0x1b
  414a70:	cmp    dh,dl
  414a72:	mov    es,WORD PTR [esi]
  414a74:	jl     0x414ab5
  414a76:	fsub   st(5),st
  414a78:	std    
  414a79:	pop    ecx
  414a7a:	add    dh,bl
  414a7c:	mov    al,0x29
  414a7e:	dec    esi
  414a7f:	fwait
  414a80:	push   esp
  414a81:	inc    ebp
  414a82:	mov    cl,BYTE PTR [edx+0x10]
  414a85:	aas    
  414a86:	dec    edi
  414a87:	xor    bl,bh
  414a89:	cmp    esi,DWORD PTR ds:0x7d26edf4
  414a8f:	gs ds out dx,al
  414a92:	mov    esi,0x43b4982e
  414a97:	lods   al,BYTE PTR ds:[esi]
  414a98:	push   ss
  414a99:	sub    bh,BYTE PTR ds:0x468feb48
  414a9f:	xchg   edx,eax
  414aa0:	inc    esp
  414aa1:	mov    edx,0xe9b18e6a
  414aa6:	sbb    BYTE PTR [ebp-0x7821f93c],al
  414aac:	cmp    DWORD PTR [esi],esi
  414aae:	cmp    BYTE PTR [ebx+0x2d56a0ee],dh
  414ab4:	add    DWORD PTR [ebx-0x1687cc3a],ebx
  414aba:	inc    ecx
  414abb:	pushw  es
  414abd:	sti    
  414abe:	add    eax,0x3fb7e95c
  414ac3:	pop    esp
  414ac4:	rcr    BYTE PTR [eax-0x508175bb],1
  414aca:	sbb    al,BYTE PTR [ebx+esi*8+0x39]
  414ace:	popf   
  414acf:	lods   eax,DWORD PTR ds:[esi]
  414ad0:	stos   BYTE PTR es:[edi],al
  414ad1:	ins    BYTE PTR es:[edi],dx
  414ad2:	xor    al,0x10
  414ad4:	jecxz  0x414ac0
  414ad6:	jnp    0x414ad2
  414ad8:	lods   al,BYTE PTR ds:[esi]
  414ad9:	stos   BYTE PTR es:[edi],al
  414ada:	pop    ds
  414adb:	fstp   QWORD PTR [esi-0x21]
  414ade:	jno    0x414ade
  414ae0:	mov    al,ds:0xbd6082ac
  414ae5:	gs rcr ah,cl
  414ae8:	test   eax,0x47e170c0
  414aed:	push   0x24f862fc
  414af2:	mov    esi,0xf55db615
  414af7:	lods   eax,DWORD PTR ds:[esi]
  414af8:	xchg   ecx,eax
  414af9:	add    al,0xaf
  414afb:	retf   0xe072
  414afe:	ja     0x414afa
  414b00:	(bad)  
  414b01:	loop   0x414aab
  414b03:	call   0xd8fac1a9
  414b08:	loop   0x414b51
  414b0a:	imul   edi,edx,0xffffffee
  414b0d:	or     edi,ebp
  414b0f:	les    ebp,FWORD PTR [esi]
  414b11:	loop   0x414b34
  414b13:	sbb    DWORD PTR [ebx+eax*2+0x6012738],esi
  414b1a:	bound  edx,QWORD PTR [ebx]
  414b1c:	(bad)  
  414b1d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414b1e:	setns  BYTE PTR [esp+ecx*2]
  414b22:	cmovle esp,edi
  414b25:	adc    cl,dl
  414b27:	stc    
  414b28:	sbb    BYTE PTR [esi-0xb6a3563],0x73
  414b2f:	cwde   
  414b30:	mov    ecx,DWORD PTR [esi]
  414b32:	mov    dh,0x4d
  414b34:	icebp  
  414b35:	mov    BYTE PTR [ebx],dh
  414b37:	das    
  414b38:	sub    dh,bl
  414b3a:	dec    ebp
  414b3b:	or     eax,0x112f8a7c
  414b40:	mov    ebx,0xc9e2aa89
  414b45:	pop    ss
  414b46:	pop    edi
  414b47:	pop    ecx
  414b48:	cmp    al,0x84
  414b4a:	popa   
  414b4b:	retf   0x85f8
  414b4e:	sbb    BYTE PTR [ecx],ah
  414b50:	aaa    
  414b51:	scas   eax,DWORD PTR es:[di]
  414b53:	std    
  414b54:	and    al,0x54
  414b56:	mov    ebp,0x5b1827a6
  414b5b:	add    edx,DWORD PTR [eax+0x6f]
  414b5e:	push   edi
  414b5f:	in     eax,0x23
  414b61:	jl     0x414b67
  414b63:	push   ebp
  414b64:	and    BYTE PTR [ecx-0x2b],0x9d
  414b68:	cmp    DWORD PTR [edi-0x75],0x79b6415e
  414b6f:	popf   
  414b70:	xor    DWORD PTR [ebx+esi*1+0x7e],esp
  414b74:	out    0x8a,al
  414b76:	dec    ecx
  414b77:	xchg   ecx,eax
  414b78:	ins    DWORD PTR es:[edi],dx
  414b79:	pushf  
  414b7a:	js     0x414b4a
  414b7c:	ret    0x2d95
  414b7f:	les    ebx,FWORD PTR [ebx-0x5d]
  414b82:	jle    0x414b9d
  414b84:	and    al,BYTE PTR [eax]
  414b86:	cmp    ch,BYTE PTR [edx]
  414b88:	sub    eax,0x61be2212
  414b8d:	cwde   
  414b8e:	jnp    0x414bd1
  414b90:	not    dl
  414b92:	aas    
  414b93:	dec    esi
  414b94:	nop
  414b95:	fist   DWORD PTR [eax]
  414b97:	frstpm(287 only) 
  414b99:	add    dl,BYTE PTR ds:0x8ab6e925
  414b9f:	lea    ecx,[edi-0x17]
  414ba2:	add    bl,BYTE PTR [edx-0x4e455138]
  414ba8:	div    BYTE PTR [ebx-0x21510562]
  414bae:	nop
  414baf:	sub    eax,0xa1a11424
  414bb4:	leave  
  414bb5:	test   eax,0x684ced65
  414bba:	cmp    DWORD PTR [ebp-0xedac5f7],ebp
  414bc0:	stos   DWORD PTR es:[edi],eax
  414bc1:	cmp    eax,0xec8b9ee3
  414bc6:	rcr    BYTE PTR [edx-0x13],0xb2
  414bca:	xchg   esp,eax
  414bcb:	pop    es
  414bcc:	nop
  414bcd:	imul   ebx,esi,0x4e64a2d3
  414bd3:	mov    ebx,0x814a368b
  414bd8:	mov    cl,0xdb
  414bda:	mov    al,0xc5
  414bdc:	xor    eax,0xec90796b
  414be1:	out    0x52,al
  414be3:	(bad)  
  414be4:	icebp  
  414be5:	or     BYTE PTR [edi],bh
  414be7:	je     0x414bcc
  414be9:	cdq    
  414bea:	dec    esi
  414beb:	adc    DWORD PTR [ecx-0x784e390f],edi
  414bf1:	imul   esi,DWORD PTR [edx-0x58956674],0x863f9a4d
  414bfb:	test   al,0xb3
  414bfd:	iret   
  414bfe:	in     eax,dx
  414bff:	add    bh,BYTE PTR [esi+eiz*8+0x2]
  414c03:	or     bh,BYTE PTR [esi+ebx*1]
  414c06:	dec    esi
  414c07:	les    esp,FWORD PTR [esi+0x5]
  414c0a:	pop    ecx
  414c0b:	adc    esi,DWORD PTR ds:0x31d92ec5
  414c11:	sub    dl,ah
  414c13:	out    0x71,eax
  414c15:	ret    0xabe2
  414c18:	mov    eax,0x6177f26c
  414c1d:	mov    eax,0x28a5f601
  414c22:	sub    al,0x8c
  414c24:	mov    bl,cl
  414c26:	pop    ds
  414c27:	inc    edi
  414c28:	outs   dx,BYTE PTR ds:[esi]
  414c29:	xchg   sp,ax
  414c2b:	int    0x7b
  414c2d:	or     esi,DWORD PTR [ecx]
  414c2f:	pop    edi
  414c30:	mul    BYTE PTR [ebp+0x41]
  414c33:	lods   eax,DWORD PTR ds:[esi]
  414c34:	push   edx
  414c35:	mov    dh,0x4d
  414c37:	pop    ebx
  414c38:	dec    eax
  414c39:	push   esp
  414c3a:	jo     0x414c83
  414c3c:	xchg   edx,eax
  414c3d:	lds    ecx,FWORD PTR [eax]
  414c3f:	cld    
  414c40:	pop    eax
  414c41:	push   esp
  414c42:	lea    ebx,[edx-0x56]
  414c45:	repnz aaa 
  414c47:	int3   
  414c48:	pcmpeqb mm5,QWORD PTR [ebx-0x43]
  414c4c:	adc    eax,0x36b7d83b
  414c51:	arpl   WORD PTR [edi],bp
  414c53:	in     al,dx
  414c54:	(bad)  
  414c55:	push   esi
  414c56:	and    BYTE PTR [ebx],ah
  414c58:	(bad)  
  414c59:	or     edx,DWORD PTR [ebx]
  414c5b:	push   esi
  414c5c:	xchg   BYTE PTR [edx+0x56902ad1],al
  414c62:	stos   BYTE PTR es:[edi],al
  414c63:	add    DWORD PTR [eax],0x3870753
  414c69:	jmp    0x414c74
  414c6e:	add    DWORD PTR [eax],0xfacc38ad
  414c74:	mov    eax,DWORD PTR [ebp-0x8]
  414c77:	xor    eax,esi
  414c79:	inc    ecx
  414c7a:	inc    DWORD PTR [ebp-0x1c]
  414c7d:	add    eax,edi
  414c7f:	cmp    ecx,eax
  414c81:	jb     0x414759
  414c87:	mov    al,BYTE PTR [ebp-0x1]
  414c8a:	mov    ecx,DWORD PTR [ebp-0x34]
  414c8d:	test   ecx,ecx
  414c8f:	mov    ecx,DWORD PTR [ebp-0x14]
  414c92:	mov    edx,DWORD PTR [ebp-0x8]
  414c95:	jne    0x4156dd
  414c9b:	xor    ecx,esi
  414c9d:	xor    edx,esi
  414c9f:	add    ecx,edi
  414ca1:	jmp    0x415190
  414ca6:	stos   BYTE PTR es:[edi],al
  414ca7:	psubd  mm2,QWORD PTR [ebp-0x1]
  414cab:	cmc    
  414cac:	scas   eax,DWORD PTR es:[edi]
  414cad:	inc    DWORD PTR [esi]
  414caf:	dec    esp
  414cb0:	test   al,0x40
  414cb2:	pop    esp
  414cb3:	sbb    ecx,DWORD PTR [eax]
  414cb5:	push   ecx
  414cb6:	mul    BYTE PTR [edi]
  414cb8:	add    DWORD PTR [eax],eax
  414cba:	rol    BYTE PTR [eax+eax*1],cl
  414cbd:	add    dl,ah
  414cbf:	aad    0x31
  414cc1:	ds jmp 0x414c6a
  414cc4:	jmp    0x2731351d
  414cc9:	jbe    0x414c73
  414ccb:	jne    0x414c78
  414ccd:	imul   esp,edi,0x75779672
  414cd3:	push   ds
  414cd4:	frstor [eax-0x15d667cf]
  414cda:	mov    ds:0x7f850178,al
  414cdf:	jmp    esp
  414ce1:	dec    esi
  414ce2:	loop   0x414d14
  414ce4:	rol    esp,0x32
  414ce7:	lahf   
  414ce8:	sub    eax,0x2b456072
  414ced:	sbb    al,0x7b
  414cef:	add    DWORD PTR [ebx+0x1a],esp
  414cf2:	push   ebp
  414cf3:	nop    DWORD PTR [ebp-0x54]
  414cf7:	(bad)  
  414cf9:	mov    eax,0x15db1184
  414cfe:	(bad)  
  414d01:	xchg   esi,eax
  414d02:	mov    dh,0xbb
  414d04:	push   ebx
  414d05:	xor    dh,BYTE PTR [edi]
  414d07:	stc    
  414d08:	mov    bl,BYTE PTR [ebx]
  414d0a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414d0b:	mov    esi,0x47859489
  414d10:	hlt    
  414d11:	or     dl,BYTE PTR [ebp-0x10d47df7]
  414d17:	call   0xa053c39b
  414d1c:	lock iret 
  414d1e:	call   0xd2e6:0x567c77ba
  414d25:	popf   
  414d26:	jb     0x414d91
  414d28:	jecxz  0x414cfb
  414d2a:	xchg   DWORD PTR ds:0xb62bbcac,esi
  414d30:	into   
  414d31:	(bad)  
  414d32:	cmp    DWORD PTR [ebx],edi
  414d34:	lea    eax,[ecx-0x6e]
  414d37:	jg     0x414d5d
  414d39:	stos   BYTE PTR es:[edi],al
  414d3a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414d3b:	push   ebp
  414d3c:	enter  0x81a8,0xe4
  414d40:	sbb    al,0xcd
  414d42:	fild   QWORD PTR [ebx+0x65f08df4]
  414d48:	cmp    eax,0x984e1c16
  414d4d:	pop    edi
  414d4e:	int3   
  414d4f:	xchg   esp,eax
  414d50:	mov    BYTE PTR [ecx+0x209751c1],bl
  414d56:	push   0xffffffae
  414d58:	mov    ecx,0x28555236
  414d5d:	outs   dx,DWORD PTR ds:[esi]
  414d5e:	aad    0xc5
  414d60:	xlat   BYTE PTR es:[ebx]
  414d62:	xchg   ecx,eax
  414d63:	mov    al,ch
  414d65:	push   edx
  414d66:	mov    BYTE PTR [ebx-0x336cb7a6],bh
  414d6c:	sbb    al,0x1c
  414d6e:	pop    ss
  414d6f:	mov    dl,0xef
  414d71:	mov    al,ch
  414d73:	sbb    bl,BYTE PTR ds:0x827b7b60
  414d79:	rol    BYTE PTR ds:0x3153cfe1,0xea
  414d80:	popf   
  414d81:	iret   
  414d82:	or     dh,0xc0
  414d85:	dec    ebp
  414d86:	pop    esi
  414d87:	add    al,0x98
  414d89:	hlt    
  414d8a:	out    0x9e,al
  414d8c:	mov    ds:0x7fadab99,eax
  414d91:	xor    ecx,ebp
  414d93:	mov    edi,DWORD PTR [ebp+ebx*8-0x52]
  414d97:	ret    
  414d98:	mov    ebp,0x144af2ff
  414d9d:	or     DWORD PTR [ecx],esi
  414d9f:	pop    ebp
  414da0:	into   
  414da1:	les    ebx,FWORD PTR [ebp-0x5c]
  414da4:	inc    ecx
  414da5:	ror    BYTE PTR [edi+0xa],cl
  414da8:	push   ss
  414da9:	mov    eax,ds:0xb3b6dd90
  414dae:	shl    BYTE PTR [ecx-0x38],0x5
  414db2:	mov    DWORD PTR [edi-0x1f],edx
  414db5:	mov    eax,0x2924a00d
  414dba:	out    0x3d,eax
  414dbc:	inc    ebx
  414dbd:	lock aam 0x30
  414dc0:	stos   BYTE PTR es:[edi],al
  414dc1:	bound  esi,QWORD PTR [ebx-0x200b9aca]
  414dc7:	dec    edx
  414dc8:	sub    esp,esi
  414dca:	nop
  414dcb:	sub    ah,dh
  414dcd:	shr    DWORD PTR [esi+0x5f],1
  414dd0:	dec    esi
  414dd1:	sbb    bh,bl
  414dd3:	out    dx,al
  414dd4:	or     BYTE PTR [ebx+0x63fc02fc],al
  414dda:	clc    
  414ddb:	cs jp  0x414dc4
  414dde:	and    edi,esi
  414de0:	arpl   cx,di
  414de2:	mov    al,ds:0x6b1c1af6
  414de7:	push   0xe235518a
  414dec:	mov    cl,bh
  414dee:	icebp  
  414def:	mov    ebp,0x1e6d851a
  414df4:	(bad)  
  414df5:	cmp    edx,DWORD PTR [ecx+0x35]
  414df8:	js     0x414e5c
  414dfa:	add    eax,0xf74a0c20
  414dff:	adc    edi,ebp
  414e01:	and    edx,ecx
  414e03:	outs   dx,DWORD PTR ds:[esi]
  414e04:	xor    BYTE PTR [ebp+0x49],0x8
  414e08:	outs   dx,BYTE PTR ds:[esi]
  414e09:	popf   
  414e0a:	clc    
  414e0b:	out    dx,al
  414e0c:	loope  0x414d96
  414e0e:	scas   al,BYTE PTR es:[edi]
  414e0f:	add    eax,DWORD PTR [eax]
  414e11:	pop    edx
  414e12:	push   0xb
  414e14:	or     bx,WORD PTR [edx+0x28]
  414e18:	mov    ecx,0x3141288a
  414e1d:	(bad)  
  414e1e:	and    al,0xd1
  414e20:	sub    BYTE PTR [ebx-0x22],ch
  414e23:	lds    edi,FWORD PTR [esi]
  414e25:	clc    
  414e26:	fidivr WORD PTR [edx+ebx*2+0x73]
  414e2a:	cmovne ecx,DWORD PTR [ebx]
  414e2d:	mov    ds:0xa5b1c643,al
  414e32:	push   esp
  414e33:	dec    eax
  414e34:	adc    eax,0x3290d8ee
  414e39:	sub    bh,bh
  414e3b:	mov    dh,0x70
  414e3d:	pop    es
  414e3e:	dec    ebp
  414e3f:	lea    esp,[edi]
  414e41:	cdq    
  414e42:	out    0x7d,al
  414e44:	sbb    DWORD PTR [eax+0x31],edx
  414e47:	mov    ebp,0xb2c01d87
  414e4c:	xor    BYTE PTR [esp+ebx*4+0x14],dl
  414e50:	retf   0x8bf4
  414e53:	cmc    
  414e54:	pop    edx
  414e55:	sbb    DWORD PTR [edi-0x6d3c0e0c],esi
  414e5b:	int3   
  414e5c:	stos   DWORD PTR es:[edi],eax
  414e5d:	lock data16 mov ?,WORD PTR [edi+0xd86f1b0]
  414e65:	and    ch,BYTE PTR [esi+esi*2-0x4]
  414e69:	add    eax,0x1090d45
  414e6e:	(bad)  
  414e6f:	and    BYTE PTR [edx-0x18c6583],ch
  414e75:	xor    DWORD PTR [bx-0x4772],ebp
  414e7a:	push   ds
  414e7b:	stc    
  414e7c:	jmp    0x414ed2
  414e7e:	and    BYTE PTR [ebp-0x40],ah
  414e81:	popf   
  414e82:	jb     0x414e38
  414e84:	jo     0x414eea
  414e86:	aam    0xb2
  414e88:	je     0x414ec8
  414e8a:	xor    BYTE PTR [ecx+ebp*2+0x55],0x71
  414e8f:	pop    esi
  414e90:	xchg   edi,eax
  414e91:	hlt    
  414e92:	in     al,dx
  414e93:	jg     0x414ee0
  414e95:	cli    
  414e96:	imul   ebp,ebx,0x5a
  414e99:	iret   
  414e9a:	sbb    eax,0xf1f9008d
  414e9f:	in     eax,dx
  414ea0:	inc    ecx
  414ea1:	mov    ebp,0xb7e3da48
  414ea6:	pop    ds
  414ea7:	std    
  414ea8:	data16 (bad) 
  414eaa:	ins    BYTE PTR es:[edi],dx
  414eab:	cmp    ecx,DWORD PTR [ebp-0xa6cec83]
  414eb1:	jnp    0x414ecf
  414eb3:	cwde   
  414eb4:	gs stc 
  414eb6:	ret    
  414eb7:	or     DWORD PTR [edx-0x62c18fae],edx
  414ebd:	(bad)  
  414ebe:	call   DWORD PTR cs:[ebx]
  414ec1:	and    bh,dl
  414ec3:	cmp    BYTE PTR [ebp+0x73],0x95
  414ec7:	push   cs
  414ec8:	scas   al,BYTE PTR es:[edi]
  414ec9:	fnsave [ebp+edi*2+0x7]
  414ecd:	jbe    0x414e56
  414ecf:	je     0x414f00
  414ed1:	cmp    BYTE PTR [edi+esi*2],ah
  414ed4:	in     al,0x33
  414ed6:	mov    esp,0xb592df78
  414edb:	in     eax,0xa6
  414edd:	dec    esi
  414ede:	cdq    
  414edf:	dec    ebx
  414ee0:	sub    BYTE PTR [ebp+0x85ec013],bh
  414ee6:	jb     0x414f24
  414ee8:	test   DWORD PTR [ebx],ebp
  414eea:	sbb    BYTE PTR ds:0x3a5a2f20,dl
  414ef0:	test   eax,0x4742cede
  414ef5:	sub    al,0x28
  414ef7:	push   esi
  414ef8:	jb     0x414f0e
  414efa:	adc    eax,0xb490552b
  414eff:	ins    DWORD PTR es:[edi],dx
  414f00:	enter  0xb9f6,0x3d
  414f04:	xor    eax,edi
  414f06:	into   
  414f07:	paddusw mm6,mm0
  414f0a:	jb     0x414e98
  414f0c:	cmp    al,0x37
  414f0e:	add    eax,0xf39fc5b9
  414f13:	out    dx,al
  414f14:	pop    eax
  414f15:	inc    ebp
  414f16:	xchg   edi,eax
  414f17:	je     0x414f82
  414f19:	je     0x414f59
  414f1b:	or     eax,0x91b0e9b1
  414f20:	jmp    0xb04099f6
  414f25:	cs mov bh,0x3f
  414f28:	imul   eax,DWORD PTR [esp+edi*4],0xb7270141
  414f2f:	lods   al,BYTE PTR ds:[esi]
  414f30:	in     al,dx
  414f31:	cmc    
  414f32:	pop    ebp
  414f33:	pop    edi
  414f34:	dec    edi
  414f35:	adc    ebp,ebx
  414f37:	sbb    DWORD PTR [edi+0xc],ecx
  414f3a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414f3b:	add    DWORD PTR [ecx+0x460b4041],ebx
  414f41:	lock push 0xe4e94d1d
  414f47:	scas   eax,DWORD PTR es:[edi]
  414f48:	lods   eax,DWORD PTR ds:[esi]
  414f49:	clc    
  414f4a:	les    edi,FWORD PTR [esi+0x75]
  414f4d:	sti    
  414f4e:	sbb    BYTE PTR [edx],bl
  414f50:	dec    ebx
  414f51:	pop    ebp
  414f52:	or     DWORD PTR [ebx],ebp
  414f54:	mov    BYTE PTR [ebx+esi*8],bh
  414f57:	mov    esi,0x87689654
  414f5c:	xor    al,0x4e
  414f5e:	retf   
  414f5f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414f60:	mov    ecx,0x2ee510b4
  414f65:	jl     0x414f1e
  414f67:	iret   
  414f68:	aad    0x1c
  414f6a:	adc    esp,DWORD PTR [edx+0x4d]
  414f6d:	cs test eax,0x3049ed40
  414f73:	sub    al,0x3d
  414f75:	pusha  
  414f76:	push   esi
  414f77:	cmp    dl,BYTE PTR [eax-0x15]
  414f7a:	dec    eax
  414f7b:	pop    edx
  414f7c:	add    al,0xae
  414f7e:	xor    BYTE PTR [edi-0x7bbd25d],bh
  414f84:	push   edx
  414f85:	dec    edi
  414f86:	loop   0x414faf
  414f88:	stc    
  414f89:	popf   
  414f8a:	xchg   ecx,eax
  414f8b:	dec    edx
  414f8c:	popa   
  414f8d:	out    dx,eax
  414f8e:	fbstp  TBYTE PTR [eax+0x4fca7b54]
  414f94:	jmp    0x61a067e5
  414f99:	test   eax,0x3bde1b3a
  414f9e:	and    BYTE PTR [ebp+0x42809b34],bl
  414fa4:	cdq    
  414fa5:	call   0x3708d89f
  414faa:	mov    esp,0x3d6853c6
  414faf:	or     DWORD PTR [edx+edi*1+0x34],ebp
  414fb3:	pop    ss
  414fb4:	sbb    DWORD PTR ds:0x4671ca23,eax
  414fba:	mov    ebx,0x29b66e55
  414fbf:	icebp  
  414fc0:	pop    eax
  414fc1:	arpl   WORD PTR [ebx+0x5e],dx
  414fc4:	xchg   esp,eax
  414fc5:	cmp    eax,0xafd30d80
  414fca:	xchg   edx,eax
  414fcb:	inc    ebx
  414fcc:	mul    DWORD PTR [eax+0x78a9153d]
  414fd2:	adc    al,0x20
  414fd4:	cmp    DWORD PTR [ebx+eax*2],ebp
  414fd7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414fd8:	xor    al,0x20
  414fda:	add    BYTE PTR [esi],ch
  414fdc:	mov    eax,ds:0x7d1613da
  414fe1:	pop    es
  414fe2:	sbb    esi,ebp
  414fe4:	jge    0x415018
  414fe6:	dec    ebp
  414fe7:	jns    0x414ffb
  414fe9:	jo     0x414fac
  414feb:	or     esi,DWORD PTR [esi]
  414fed:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414fee:	daa    
  414fef:	xchg   dx,ax
  414ff1:	mov    ecx,DWORD PTR [ebp+0x201b1ea8]
  414ff7:	pop    ds
  414ff8:	sbb    ecx,DWORD PTR [edx-0x120a79cc]
  414ffe:	fisttp WORD PTR [eax+0x7f0f07ab]
  415004:	or     al,0x98
  415006:	inc    ebp
  415007:	adc    ecx,DWORD PTR [eax]
  415009:	cmp    ebp,esi
  41500b:	fdivr  DWORD PTR [esi-0x5b19f656]
  415011:	mov    edx,0x9fc69113
  415016:	inc    esp
  415017:	mov    eax,ds:0xd2d9f60c
  41501c:	pushf  
  41501d:	in     al,dx
  41501e:	call   0x12fe5bd8
  415023:	pop    edi
  415024:	jg     0x41504b
  415026:	aam    0xd0
  415028:	jl     0x415093
  41502a:	leave  
  41502b:	fdiv   DWORD PTR [eax+0x74ddbd43]
  415031:	imul   edi,edx,0x957d87ca
  415037:	inc    ecx
  415038:	out    dx,eax
  415039:	je     0x414fef
  41503b:	test   eax,0x342cc1c4
  415040:	push   edi
  415041:	call   0xc7d3:0x3cb0cafe
  415048:	(bad)  [esi+0x32a31bc8]
  41504e:	pop    esp
  41504f:	jno    0x4150a0
  415051:	enter  0xf9ba,0x6f
  415055:	push   esp
  415056:	and    eax,0xf71ff35d
  41505b:	enter  0xc0ee,0x33
  41505f:	repz arpl WORD PTR ds:0xb5,si
  415065:	cmp    al,0xe6
  415067:	adc    edi,DWORD PTR [eax+0x4f]
  41506a:	shl    BYTE PTR [esi],0xe5
  41506d:	fld    QWORD PTR ds:0xaf777f15
  415073:	scas   al,BYTE PTR es:[edi]
  415074:	add    eax,0x6134fc9c
  415079:	sbb    al,0xb
  41507b:	mov    eax,0x7c0d6adb
  415080:	sub    eax,0x63bd2ebe
  415085:	inc    ebx
  415086:	inc    ebp
  415087:	xor    esp,DWORD PTR [esi+ebx*1-0x59a167c2]
  41508e:	fidiv  DWORD PTR [ecx]
  415090:	ret    
  415091:	nop
  415092:	dec    esp
  415093:	jp     0x41504a
  415095:	arpl   WORD PTR [edi],si
  415097:	jae    0x41503f
  415099:	cmp    bh,bh
  41509b:	push   es
  41509c:	pop    ss
  41509d:	fldcw  WORD PTR ds:0x98f3007a
  4150a3:	cmp    dl,dl
  4150a5:	pop    ds
  4150a6:	mov    WORD PTR [eax-0x70],gs
  4150a9:	retf   
  4150aa:	sbb    DWORD PTR [edx+esi*2-0x54d64c30],ecx
  4150b1:	or     DWORD PTR [ebx],eax
  4150b3:	dec    edi
  4150b4:	ins    DWORD PTR es:[edi],dx
  4150b5:	dec    esi
  4150b6:	mov    dh,0x23
  4150b8:	stos   BYTE PTR es:[edi],al
  4150b9:	push   0x5a
  4150bb:	bound  ebp,QWORD PTR [esp+edx*8]
  4150be:	out    0xfe,al
  4150c0:	dec    esi
  4150c1:	rsm    
  4150c3:	fistp  WORD PTR [esi-0xe9619fc]
  4150c9:	shr    BYTE PTR ds:0x53a7086d,1
  4150cf:	stc    
  4150d0:	sar    al,0xee
  4150d3:	ja     0x4150ff
  4150d5:	xchg   esi,eax
  4150d6:	mov    dl,0xd1
  4150d8:	push   ds
  4150d9:	pop    ebx
  4150da:	dec    edi
  4150db:	pop    edx
  4150dc:	and    eax,0x6fa52b0e
  4150e1:	(bad)  
  4150e2:	dec    edi
  4150e3:	ret    
  4150e4:	shr    DWORD PTR [edi+0x2b],1
  4150e7:	lahf   
  4150e8:	mov    ebp,0xd989e5de
  4150ed:	push   cs
  4150ee:	call   0xcf20:0xa4761bff
  4150f5:	sbb    esi,ebp
  4150f7:	idiv   DWORD PTR [esi]
  4150f9:	mov    bl,0x85
  4150fb:	ficom  WORD PTR [ecx+0x7b]
  4150fe:	sub    eax,0x1d071488
  415103:	mov    ds:0x8ba7f50f,eax
  415108:	sbb    eax,0x89b486a
  41510d:	outs   dx,DWORD PTR ds:[esi]
  41510e:	(bad)  
  41510f:	aam    0x3e
  415111:	push   ds
  415112:	scas   al,BYTE PTR es:[edi]
  415113:	jb     0x415141
  415115:	mov    ebp,0xa04bf486
  41511a:	mov    ah,0x5f
  41511c:	nop
  41511d:	outs   dx,DWORD PTR ds:[esi]
  41511e:	xchg   ebx,eax
  41511f:	sub    eax,DWORD PTR [eax+0x6dd0aad8]
  415125:	cmp    dh,BYTE PTR [eax+0x34]
  415128:	push   ecx
  415129:	mov    dh,0xbf
  41512b:	ror    BYTE PTR [ebp+0x20128904],1
  415131:	add    ecx,esi
  415133:	dec    ebp
  415134:	pop    esp
  415135:	inc    ecx
  415136:	fmul   QWORD PTR [ebx+0xf]
  415139:	adc    bh,dh
  41513b:	mov    ebx,0xc7d3be2a
  415140:	fbstp  TBYTE PTR [esi+ebx*1+0x2a153dcf]
  415147:	out    0x5a,al
  415149:	arpl   WORD PTR [edi+0x46],si
  41514c:	mov    WORD PTR [edi-0x27e744a8],es
  415152:	ins    BYTE PTR es:[edi],dx
  415153:	push   esp
  415154:	icebp  
  415155:	jno    0x415146
  415157:	pop    edx
  415158:	call   0x96c4:0xf5b3f58d
  41515f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415160:	sbb    al,0xd9
  415162:	xor    esp,esi
  415164:	out    dx,al
  415165:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415166:	in     al,dx
  415167:	or     al,BYTE PTR [eax-0x72]
  41516a:	icebp  
  41516b:	imul   eax,eax,0xce895462
  415171:	xchg   BYTE PTR [edx-0xce44d17],ah
  415177:	fild   QWORD PTR [esi]
  415179:	xchg   ah,dl
  41517b:	jns    0x41511d
  41517d:	sahf   
  41517e:	in     al,dx
  41517f:	in     al,dx
  415180:	inc    ebx
  415181:	js     0x415143
  415183:	dec    ebx
  415184:	jno    0x4151ee
  415186:	imul   ebx,ebp,0xca905863
  41518c:	pop    eax
  41518d:	sahf   
  41518e:	pusha  
  41518f:	imul   eax,DWORD PTR [ebx],0xffffffd7
  415192:	cmp    ecx,edx
  415194:	jae    0x4156d4
  41519a:	lea    eax,[ecx-0x300b]
  4151a0:	mov    DWORD PTR [ebp-0x1c],eax
  4151a3:	mov    edx,DWORD PTR [ebp-0x1c]
  4151a6:	xor    edx,esi
  4151a8:	add    edx,0x7837233d
  4151ae:	lea    eax,[ebp+ecx*4-0x60]
  4151b2:	mov    DWORD PTR [eax],edx
  4151b4:	mov    edx,DWORD PTR [eax]
  4151b6:	cmp    edx,ebx
  4151b8:	jmp    0x4156a7
  4151bd:	arpl   WORD PTR [ebx],dx
  4151bf:	loopne 0x41523c
  4151c1:	lock sti 
  4151c3:	sti    
  4151c4:	sbb    esi,DWORD PTR [eax-0x4b2b5181]
  4151ca:	push   ecx
  4151cb:	pcmpgtb mm1,mm0
  4151ce:	sub    al,0x1
  4151d0:	add    dl,dl
  4151d2:	add    al,0x0
  4151d4:	add    dl,dh
  4151d6:	sub    eax,0x8b6800de
  4151db:	mov    ecx,0x1fffd4a6
  4151e0:	mov    ebp,0x1ae03936
  4151e5:	add    esp,DWORD PTR ds:[ebx+0x1f]
  4151e9:	in     al,0xa3
  4151eb:	or     bh,BYTE PTR [edi+0x57cff6ec]
  4151f1:	xchg   ebx,eax
  4151f2:	mov    esp,0xe0839063
  4151f7:	fstp   DWORD PTR [edi-0x4806283a]
  4151fd:	fs jg  0x415254
  415200:	call   0x89ed6be7
  415205:	ins    DWORD PTR es:[edi],dx
  415206:	mov    ds:0x43bac238,eax
  41520b:	adc    BYTE PTR [edi-0x46125371],ch
  415211:	push   0xffffffab
  415213:	adc    eax,DWORD PTR [eax-0x6f86a53f]
  415219:	jge    0x4151fd
  41521b:	out    dx,al
  41521c:	cmp    DWORD PTR ds:0x4d058a44,esi
  415222:	clc    
  415223:	ror    DWORD PTR [esi+0x49],cl
  415226:	aad    0x3
  415228:	and    al,0x28
  41522a:	ja     0x4151c6
  41522c:	(bad)  
  41522d:	in     eax,dx
  41522e:	xor    al,0xdb
  415230:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415231:	out    dx,eax
  415232:	cld    
  415233:	sar    BYTE PTR [ebp+0x3eddc6f],1
  415239:	and    DWORD PTR [ecx-0x741f9620],edx
  41523f:	adc    bh,BYTE PTR [ecx+ebx*8-0x26]
  415243:	outs   dx,BYTE PTR ds:[esi]
  415244:	sbb    cl,BYTE PTR [esi]
  415246:	(bad)  
  415247:	out    0x70,al
  415249:	scas   eax,DWORD PTR es:[edi]
  41524a:	fcmovu st,st(3)
  41524c:	shl    DWORD PTR [ebp-0x69efd8b1],1
  415252:	push   ecx
  415253:	mov    ah,0x27
  415255:	sbb    eax,0x660ea044
  41525a:	sbb    al,0x70
  41525c:	mov    ecx,0x59bea027
  415261:	lock ja 0x4151ef
  415264:	(bad)  
  415265:	mov    ebx,0x5215e6de
  41526a:	xchg   ebp,eax
  41526b:	adc    ebp,DWORD PTR [ebx+ebx*1]
  41526e:	fstp   TBYTE PTR [eax]
  415270:	add    DWORD PTR [eax-0x752986cf],esp
  415276:	jmp    0x6924dc72
  41527b:	out    0xb2,eax
  41527d:	pop    esp
  41527e:	mov    edi,0xa72b4140
  415283:	into   
  415284:	pop    ebx
  415285:	or     al,0x4d
  415287:	mov    dh,0x98
  415289:	dec    esi
  41528a:	mov    DWORD PTR [ebx-0x52],edi
  41528d:	stos   DWORD PTR es:[edi],eax
  41528e:	inc    esp
  41528f:	into   
  415290:	out    0x5e,eax
  415292:	fnstcw WORD PTR [ecx+0x1f]
  415295:	add    dl,ch
  415297:	fnstsw WORD PTR [eax]
  415299:	mov    ecx,0xb74b2972
  41529e:	lds    esi,FWORD PTR [ebp-0x3e]
  4152a1:	sub    BYTE PTR [ebx+0x31],0x65
  4152a5:	mov    ecx,0x8c187c13
  4152aa:	leave  
  4152ab:	inc    edx
  4152ac:	sub    eax,0x27e80126
  4152b1:	setb   bl
  4152b4:	scas   eax,DWORD PTR es:[edi]
  4152b5:	aad    0xed
  4152b7:	sub    BYTE PTR [edi+eiz*1-0x5a0dd4bd],dl
  4152be:	fdivr  QWORD PTR ds:0x1df5b440
  4152c4:	mov    WORD PTR [esi+0x5153648d],?
  4152ca:	lock stos BYTE PTR es:[edi],al
  4152cc:	xchg   edi,eax
  4152cd:	(bad)  
  4152cf:	mov    ebx,0x8a141852
  4152d4:	push   ds
  4152d5:	push   cs
  4152d6:	xor    al,0x81
  4152d8:	fdivrp st(7),st
  4152da:	(bad)  
  4152db:	in     eax,dx
  4152dc:	pop    DWORD PTR [ebx-0x7]
  4152df:	mov    ebx,0xd068be5a
  4152e4:	out    dx,eax
  4152e5:	xor    dl,BYTE PTR [edx+0x79]
  4152e8:	xor    ebp,esp
  4152ea:	int3   
  4152eb:	call   0x48c:0x5dcc46b2
  4152f2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4152f3:	pop    edi
  4152f4:	xchg   edi,eax
  4152f5:	ret    
  4152f6:	cmp    BYTE PTR [ecx-0x2e],cl
  4152f9:	pop    ebp
  4152fa:	or     BYTE PTR [ebx-0x6942a8b2],0xa
  415301:	fldenv [edi+0x31]
  415304:	test   al,0xef
  415306:	jno    0x4152bb
  415308:	ins    BYTE PTR es:[edi],dx
  415309:	popf   
  41530a:	adc    eax,0x7413492d
  415310:	or     BYTE PTR ds:0x492e8d0,cl
  415316:	dec    ebp
  415317:	pushf  
  415318:	sbb    cl,ch
  41531a:	int3   
  41531b:	xor    ah,BYTE PTR ds:0xf25f6f3e
  415321:	lods   eax,DWORD PTR ds:[esi]
  415322:	pushf  
  415323:	sub    esi,esp
  415325:	lods   al,BYTE PTR ds:[esi]
  415326:	out    dx,eax
  415327:	add    BYTE PTR [edx-0x526ac09c],0x6
  41532e:	pop    edi
  41532f:	adc    DWORD PTR [ecx-0x1a9d4d80],esi
  415335:	mov    bh,BYTE PTR [ebx-0x63c73545]
  41533b:	adc    eax,0x5922d855
  415340:	rcr    DWORD PTR [edx-0x581f03b7],1
  415346:	js     0x4153c6
  415348:	call   FWORD PTR [ebx-0x2a]
  41534b:	cwde   
  41534c:	inc    edi
  41534d:	sub    esi,0x4
  415350:	sub    BYTE PTR [ebx],ch
  415352:	jl     0x4153a1
  415354:	inc    ebp
  415355:	mov    dh,0x59
  415357:	cld    
  415358:	arpl   WORD PTR [ebp+0x73e5faf0],dx
  41535e:	add    bh,BYTE PTR [edx+0x6d8b7054]
  415364:	mov    dl,0xe4
  415366:	mov    ecx,0x893a253f
  41536b:	push   ds
  41536c:	push   ecx
  41536d:	repz in al,0xfd
  415370:	mov    bl,0x44
  415372:	jp     0x41531b
  415374:	mov    bl,BYTE PTR [ebx+0x7e4bbb8]
  41537a:	xchg   esp,eax
  41537b:	push   DWORD PTR [eax+esi*2+0x2e]
  41537f:	jp     0x41534a
  415381:	inc    esi
  415382:	je     0x4153f1
  415384:	mov    ch,0xee
  415386:	xlat   BYTE PTR ds:[ebx]
  415387:	cmp    BYTE PTR [ecx-0x4a],0x70
  41538b:	hlt    
  41538c:	ror    ecx,0x57
  41538f:	inc    eax
  415390:	nop
  415391:	mov    esp,0xd0026999
  415396:	fistp  QWORD PTR [edi+eax*2]
  415399:	shr    al,1
  41539b:	inc    ebp
  41539c:	div    edx
  41539e:	aaa    
  41539f:	int    0x18
  4153a1:	ins    BYTE PTR es:[edi],dx
  4153a2:	ins    BYTE PTR es:[edi],dx
  4153a3:	mov    bl,0xbc
  4153a5:	push   ecx
  4153a6:	pop    ss
  4153a7:	add    al,0xcd
  4153a9:	sub    DWORD PTR [edx+0x50],0xdfa9254a
  4153b0:	fistp  DWORD PTR [ebx+eiz*8-0x25bd0cfd]
  4153b7:	icebp  
  4153b8:	scas   al,BYTE PTR es:[edi]
  4153b9:	(bad)  
  4153ba:	int    0xe6
  4153bc:	dec    esi
  4153bd:	neg    DWORD PTR [eax+0x6957028a]
  4153c3:	mov    ah,0xc6
  4153c5:	fiadd  WORD PTR [eax+0x6156aee2]
  4153cb:	sub    cl,dh
  4153cd:	push   cs
  4153ce:	sti    
  4153cf:	mov    ebx,0xd7506050
  4153d4:	inc    ebx
  4153d5:	je     0x415370
  4153d7:	push   edx
  4153d8:	outs   dx,BYTE PTR ds:[esi]
  4153d9:	inc    ebx
  4153da:	in     eax,dx
  4153db:	leave  
  4153dc:	ret    
  4153dd:	repnz retf 
  4153df:	cmp    cl,ah
  4153e1:	cwde   
  4153e2:	out    dx,eax
  4153e3:	jae    0x415403
  4153e5:	inc    ecx
  4153e6:	std    
  4153e7:	fldenv [eax]
  4153e9:	lods   al,BYTE PTR ds:[esi]
  4153ea:	stc    
  4153eb:	pop    ss
  4153ec:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4153ed:	pop    ecx
  4153ee:	jp     0x4153d3
  4153f0:	jl     0x415446
  4153f2:	inc    esp
  4153f3:	dec    esi
  4153f4:	cmp    esp,DWORD PTR [ecx]
  4153f6:	jb     0x415386
  4153f8:	push   ds
  4153f9:	ins    BYTE PTR es:[edi],dx
  4153fa:	push   ss
  4153fb:	push   ebx
  4153fc:	jns    0x4153b5
  4153fe:	sbb    bh,BYTE PTR [ebx]
  415400:	add    dh,BYTE PTR [ecx]
  415402:	in     al,dx
  415403:	xor    BYTE PTR [esi+0x68efd57b],0xab
  41540a:	arpl   cx,si
  41540c:	aad    0x27
  41540e:	sub    BYTE PTR [ebp+0x2b7193b2],dh
  415414:	enter  0xfb25,0x69
  415418:	gs out dx,al
  41541a:	je     0x415407
  41541c:	push   ebx
  41541d:	adc    ecx,0x53
  415420:	popa   
  415421:	pop    ebx
  415422:	mov    dl,0xe8
  415424:	jo     0x41545b
  415426:	jns    0x4153bc
  415428:	(bad)  
  415429:	test   DWORD PTR [esi+0x1f],0x65a54d8a
  415430:	push   0x57
  415432:	mov    al,BYTE PTR [ecx+0x60d81a31]
  415438:	shr    BYTE PTR ds:0x288f89ae,1
  41543e:	cdq    
  41543f:	shl    BYTE PTR fs:[ebx+0x418db26e],0x40
  415447:	xor    al,0x25
  415449:	in     eax,0x2a
  41544b:	inc    ebx
  41544c:	or     DWORD PTR [edi],esp
  41544e:	ins    DWORD PTR es:[edi],dx
  41544f:	in     eax,dx
  415450:	stos   DWORD PTR es:[edi],eax
  415451:	mov    edi,0x97960a2c
  415456:	cdq    
  415457:	pop    ds
  415458:	pop    ds
  415459:	mov    cl,0x59
  41545b:	mov    ecx,0x64519e89
  415460:	lahf   
  415461:	ret    
  415462:	test   eax,esp
  415464:	out    0x5e,al
  415466:	lods   eax,DWORD PTR ds:[esi]
  415467:	jge    0x4153f1
  415469:	pop    ss
  41546a:	add    BYTE PTR [edx+0x30],dl
  41546d:	pop    ss
  41546e:	or     dh,0x54
  415471:	mov    ebp,DWORD PTR [ebx]
  415473:	sbb    DWORD PTR [edx],ecx
  415475:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415476:	sub    DWORD PTR [edi],0xffffff94
  415479:	test   eax,0xac521a33
  41547e:	sti    
  41547f:	into   
  415480:	rol    DWORD PTR fs:[esi+0x17d4ab72],1
  415487:	pop    ebx
  415488:	setns  BYTE PTR ss:[esi]
  41548c:	mov    eax,ds:0x6566a374
  415491:	shl    DWORD PTR [edi],1
  415493:	push   ecx
  415494:	cwde   
  415495:	cmp    DWORD PTR [edi-0x1b3cdbd2],esp
  41549b:	mov    WORD PTR [eax+0x7ede455b],fs
  4154a1:	jge    0x415445
  4154a3:	xlat   BYTE PTR ds:[ebx]
  4154a4:	mov    ebp,0x4a3c7b28
  4154a9:	mov    esi,0x7148d16b
  4154ae:	pop    ds
  4154af:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4154b0:	not    BYTE PTR [ebp+0xc]
  4154b3:	and    ebx,DWORD PTR [esi-0x445cd35d]
  4154b9:	pop    edi
  4154ba:	or     esi,DWORD PTR [ebx]
  4154bc:	mov    ch,0x9e
  4154be:	popf   
  4154bf:	fcmovnb st,st(0)
  4154c1:	jbe    0x41549c
  4154c3:	adc    dh,bl
  4154c5:	int    0x1a
  4154c7:	retf   0x2fd6
  4154ca:	pushf  
  4154cb:	xlat   BYTE PTR ds:[ebx]
  4154cc:	inc    ecx
  4154cd:	js     0x41546c
  4154cf:	push   edx
  4154d0:	enter  0x7bd5,0xfc
  4154d4:	fidivr DWORD PTR [ecx+0x4125b5b8]
  4154da:	aas    
  4154db:	mov    dl,0x5
  4154dd:	pop    edx
  4154de:	mov    esi,0x21408bda
  4154e3:	dec    ebp
  4154e4:	retf   0x6a02
  4154e7:	mov    al,ds:0xa9e9e003
  4154ec:	cmp    dl,BYTE PTR [eax-0x6]
  4154ef:	ja     0x4154ba
  4154f1:	sbb    DWORD PTR [edi-0x2234a96c],esp
  4154f7:	push   ss
  4154f8:	test   DWORD PTR fs:[eax-0x3f],eax
  4154fc:	jbe    0x4154fa
  4154fe:	mov    esi,0x67a3e1bb
  415503:	xor    ecx,eax
  415505:	cmc    
  415506:	cld    
  415507:	test   BYTE PTR [ebx+esi*2+0x7],al
  41550b:	xchg   ebx,eax
  41550c:	sub    eax,0xc965e4b1
  415511:	mov    cl,0x97
  415513:	add    al,0x21
  415515:	sbb    dl,0x0
  415518:	adc    eax,0xff992c76
  41551d:	and    esp,DWORD PTR [ebx-0x2cf243de]
  415523:	xchg   esi,eax
  415524:	and    esi,edi
  415526:	aas    
  415527:	pushf  
  415528:	dec    ebx
  415529:	ret    
  41552a:	push   edi
  41552b:	cmp    al,0x24
  41552d:	pop    ebp
  41552e:	js     0x415528
  415530:	ffreep st(5)
  415532:	daa    
  415533:	and    al,0xb5
  415535:	test   al,0x36
  415537:	sahf   
  415538:	mov    ebx,0x6e2fb682
  41553d:	imul   ebx,DWORD PTR [ebx-0x29],0x23
  415541:	mov    edx,0x180fb16b
  415546:	mov    ds:0x6c3d0b17,al
  41554b:	mov    ds:0x8e47f4aa,al
  415550:	(bad)  
  415551:	jmp    0xfc43:0x6e57d55d
  415558:	xchg   esp,eax
  415559:	dec    ebx
  41555a:	fidivr DWORD PTR [edx-0x37]
  41555d:	cmc    
  41555e:	and    ah,BYTE PTR [esi]
  415560:	int    0xc2
  415562:	add    dh,BYTE PTR [eax+ebx*1+0x13c77c76]
  415569:	lods   al,BYTE PTR ds:[esi]
  41556a:	fstp   TBYTE PTR [edi+0x6e9bf30a]
  415570:	mov    ebx,esp
  415572:	push   ebp
  415573:	stos   DWORD PTR es:[edi],eax
  415574:	mov    ebp,DWORD PTR [ebp-0x75]
  415577:	out    dx,al
  415578:	call   0x74e90167
  41557d:	xchg   ebp,eax
  41557e:	jecxz  0x415519
  415580:	js     0x4155d5
  415582:	in     al,0x7c
  415584:	xor    eax,0x9497d90c
  415589:	repz dec ecx
  41558b:	hlt    
  41558c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41558d:	jnp    0x415524
  41558f:	rcl    BYTE PTR [ebp+0x5a828c84],1
  415595:	jbe    0x415530
  415597:	mov    es,WORD PTR [edi-0x6681b8c7]
  41559d:	jmp    0x469f:0x57fb87af
  4155a4:	mov    al,0x6d
  4155a6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4155a7:	mov    cl,0x33
  4155a9:	pop    ebx
  4155aa:	mov    bl,0xc5
  4155ac:	gs pop ecx
  4155ae:	xor    DWORD PTR [ebx+ebx*4-0x2d399ea8],0x7d70adb4
  4155b9:	mov    BYTE PTR [ebp+0x15dc23e1],al
  4155bf:	(bad)  
  4155c0:	dec    ebp
  4155c1:	mov    dh,0x58
  4155c3:	add    DWORD PTR [ecx-0xc0dea9c],eax
  4155c9:	test   BYTE PTR [edx+0x3883b250],0x90
  4155d0:	jns    0x415614
  4155d2:	or     al,0x41
  4155d4:	sub    eax,0xac1c8ca9
  4155d9:	or     dh,BYTE PTR [edi]
  4155db:	pop    edx
  4155dc:	rcr    cl,1
  4155de:	lods   eax,DWORD PTR ds:[esi]
  4155df:	in     eax,dx
  4155e0:	into   
  4155e1:	inc    edx
  4155e2:	pop    ecx
  4155e3:	ret    0x9358
  4155e6:	or     BYTE PTR [ecx-0x2a],al
  4155e9:	shl    BYTE PTR [ecx+0x7a],cl
  4155ec:	add    eax,DWORD PTR ds:0xb64f3632
  4155f2:	mov    bh,0x8
  4155f4:	cmp    eax,0x2e13a36e
  4155f9:	push   0xffffff98
  4155fb:	retf   0xe1ce
  4155fe:	xor    al,0xa3
  415600:	ds repnz daa 
  415603:	sub    BYTE PTR [ebp+0x1d3d38ab],ah
  415609:	js     0x415680
  41560b:	hlt    
  41560c:	xor    al,0x30
  41560e:	or     BYTE PTR [eax-0x61],0x91
  415612:	clc    
  415613:	inc    ebp
  415614:	cmp    BYTE PTR [ecx+edi*2+0x33],bl
  415618:	mov    WORD PTR [edi-0x3f],?
  41561b:	inc    edx
  41561c:	inc    esp
  41561d:	xchg   edx,eax
  41561e:	stc    
  41561f:	add    bl,BYTE PTR [ecx]
  415621:	cmp    DWORD PTR [ecx],eax
  415623:	pop    ecx
  415624:	mov    BYTE PTR [di+0x71e7],cl
  415629:	jne    0x415678
  41562b:	sbb    ecx,DWORD PTR [ecx+0xc]
  41562e:	test   eax,0x35468622
  415633:	(bad)  
  415634:	stc    
  415635:	jecxz  0x4155df
  415637:	xor    BYTE PTR [esi+0x136f1c93],0xb2
  41563e:	jp     0x4155d8
  415640:	mov    ebx,0x17d99e0
  415645:	psubw  mm2,QWORD PTR [esp+ebx*2]
  415649:	mov    ah,BYTE PTR [edx]
  41564b:	xlat   BYTE PTR ds:[ebx]
  41564c:	cmovs  edi,DWORD PTR [ebx-0x54]
  415650:	xchg   edx,eax
  415651:	xchg   edx,eax
  415652:	sub    eax,0xeb05692a
  415657:	xchg   ecx,eax
  415658:	out    0xff,al
  41565a:	int    0x13
  41565c:	fmul   QWORD PTR [edi-0x519dc5d4]
  415662:	mov    eax,0x3db8f9b9
  415667:	add    ch,BYTE PTR [ecx]
  415669:	pop    edi
  41566a:	cli    
  41566b:	sbb    cl,bh
  41566d:	fidivr WORD PTR [edi+0x79]
  415670:	aam    0x21
  415672:	nop
  415673:	mov    ch,0xa
  415675:	add    eax,DWORD PTR [edi-0x62876349]
  41567b:	mov    eax,0x67b65169
  415680:	fldcw  WORD PTR [eax+0x7d4f7454]
  415686:	mov    BYTE PTR [edi+esi*1],dl
  415689:	adc    al,0x4f
  41568b:	adc    DWORD PTR [edi+0x408074cf],edi
  415691:	push   0xf291e702
  415696:	add    DWORD PTR [edi-0x61],eax
  415699:	xchg   ebp,eax
  41569a:	mov    ebp,0x6fe36894
  41569f:	lods   eax,DWORD PTR ds:[esi]
  4156a0:	dec    eax
  4156a1:	jl     0x41564c
  4156a3:	xchg   DWORD PTR [edi],ecx
  4156a5:	popf   
  4156a6:	es jbe 0x4156b8
  4156ad:	add    DWORD PTR [eax],0x3870753
  4156b3:	jmp    0x4156be
  4156b8:	add    DWORD PTR [eax],0xfacc38ad
  4156be:	mov    eax,DWORD PTR [ebp-0x8]
  4156c1:	xor    eax,esi
  4156c3:	inc    ecx
  4156c4:	inc    DWORD PTR [ebp-0x1c]
  4156c7:	add    eax,edi
  4156c9:	cmp    ecx,eax
  4156cb:	jb     0x4151a3
  4156d1:	mov    al,BYTE PTR [ebp-0x1]
  4156d4:	xor    al,0x3a
  4156d6:	add    al,0x3a
  4156d8:	jmp    0x41612d
  4156dd:	xor    ecx,esi
  4156df:	xor    edx,esi
  4156e1:	add    ecx,edi
  4156e3:	add    edx,edi
  4156e5:	cmp    ecx,edx
  4156e7:	jae    0x416116
  4156ed:	lea    eax,[ecx-0x300b]
  4156f3:	mov    DWORD PTR [ebp-0x1c],eax
  4156f6:	mov    edx,DWORD PTR [ebp-0x1c]
  4156f9:	xor    edx,esi
  4156fb:	add    edx,0x7837233d
  415701:	lea    eax,[ebp+ecx*4-0x60]
  415705:	jmp    0x415bf4
  41570a:	mov    DWORD PTR [edi+0x73],esp
  41570d:	jg     0x41570e
  41570f:	jg     0x41569e
  415711:	neg    DWORD PTR [esp+esi*4-0x32428802]
  415718:	int3   
  415719:	scas   eax,DWORD PTR es:[edi]
  41571a:	call   0x4:0xd2000131
  415721:	add    bl,ch
  415723:	dec    ebp
  415724:	pop    ds
  415725:	fdiv   st(6),st
  415727:	mov    ebp,0xa564f3ee
  41572c:	sub    al,0x4e
  41572e:	test   al,0x1d
  415730:	xchg   BYTE PTR [ebp+0xe],bl
  415733:	xchg   edi,eax
  415734:	pop    edx
  415735:	inc    ebp
  415736:	dec    ebp
  415737:	addr16 hlt 
  415739:	dec    esp
  41573a:	mov    bh,0x15
  41573c:	call   0x4bc1:0x7bb16f9d
  415743:	fstp   DWORD PTR [edx]
  415745:	and    dh,BYTE PTR [ebp-0xf68b599]
  41574b:	out    dx,al
  41574c:	mov    ah,0x27
  41574e:	adc    eax,0xfc8a928e
  415753:	es test al,0xe2
  415756:	cld    
  415757:	jno    0x4156fd
  415759:	retf   
  41575a:	add    edi,DWORD PTR [edx]
  41575c:	ret    
  41575d:	cs sbb eax,edx
  415760:	jbe    0x41575c
  415762:	xor    edi,DWORD PTR [ebp+0x64]
  415765:	(bad)  
  415766:	call   0x808e:0x674cdc51
  41576d:	xchg   esp,eax
  41576e:	xchg   ecx,eax
  41576f:	push   esi
  415770:	push   esp
  415771:	fbstp  TBYTE PTR [ebp-0x5e]
  415774:	in     al,dx
  415775:	jg     0x4157c7
  415777:	push   0x41bd4154
  41577c:	ja     0x415733
  41577e:	int    0x7e
  415780:	(bad)  
  415781:	jmp    0x4c1b2628
  415786:	cld    
  415787:	sbb    bl,BYTE PTR gs:[ebx+0x78c1868d]
  41578e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41578f:	out    dx,al
  415790:	cmp    ebx,edx
  415792:	pop    edx
  415793:	neg    DWORD PTR [eax]
  415795:	jno    0x4157fa
  415797:	mov    ds:0x1c1f7cf8,al
  41579c:	(bad)  
  41579d:	adc    BYTE PTR ds:[ecx-0x72],ch
  4157a1:	mov    ch,0x48
  4157a3:	xchg   esp,eax
  4157a4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4157a5:	dec    edx
  4157a6:	fimul  WORD PTR [ebx]
  4157a8:	repz mov ah,0xc5
  4157ab:	mov    edx,0x90e1092c
  4157b0:	add    eax,0x9f469725
  4157b5:	pop    ds
  4157b6:	push   edx
  4157b7:	mov    edi,0x5daae668
  4157bc:	sahf   
  4157bd:	jge    0x41581f
  4157bf:	sub    dh,bl
  4157c1:	adc    DWORD PTR [edi-0x2d844d73],esi
  4157c7:	sub    DWORD PTR [ebp-0x6f],ebp
  4157ca:	push   cs
  4157cb:	imul   edi,DWORD PTR [ecx+0x68],0x75
  4157cf:	(bad)  
  4157d0:	fwait
  4157d1:	pop    edx
  4157d2:	scas   al,BYTE PTR es:[edi]
  4157d3:	push   edi
  4157d4:	(bad)  
  4157d6:	push   cs
  4157d7:	mov    eax,ds:0xf28c5052
  4157dc:	jmp    0xbd219447
  4157e1:	mov    al,0x83
  4157e3:	mov    esi,0xaeade091
  4157e8:	sbb    bl,dl
  4157ea:	lods   al,BYTE PTR ds:[esi]
  4157eb:	test   BYTE PTR [ebp+0x7b],0x90
  4157ef:	xchg   DWORD PTR [ebp+0x56ad87a6],eax
  4157f5:	dec    ecx
  4157f6:	add    dl,ch
  4157f8:	outs   dx,BYTE PTR ds:[esi]
  4157f9:	add    al,0xd0
  4157fb:	adc    BYTE PTR [ecx+edi*2],cl
  4157fe:	dec    ebx
  4157ff:	sbb    edx,DWORD PTR [eax+0x1a]
  415802:	ins    BYTE PTR es:[edi],dx
  415803:	lea    edx,cs:[esi-0x471d22d]
  41580a:	jns    0x415881
  41580c:	mov    ds:0x2c301106,eax
  415811:	add    cl,al
  415813:	loope  0x4157f5
  415815:	test   eax,0x970284c1
  41581a:	loope  0x4157bb
  41581c:	clc    
  41581d:	repz inc edi
  41581f:	stos   DWORD PTR es:[edi],eax
  415820:	jp     0x415871
  415822:	jno    0x415813
  415824:	xchg   ecx,eax
  415825:	or     eax,0x77f9d4fb
  41582a:	adc    BYTE PTR [bp+di+0x65],al
  41582e:	loop   0x415847
  415830:	cmp    al,0x82
  415832:	mov    ecx,?
  415834:	pop    es
  415835:	lahf   
  415836:	out    dx,al
  415837:	ins    BYTE PTR es:[edi],dx
  415838:	in     eax,dx
  415839:	out    dx,eax
  41583a:	stos   DWORD PTR es:[edi],eax
  41583b:	repnz mov ecx,0xd36582da
  415841:	loopne 0x415808
  415843:	cmp    eax,0x5a8e346e
  415848:	add    edi,edi
  41584a:	es aam 0x97
  41584d:	in     eax,0xd7
  41584f:	jg     0x415801
  415851:	pop    ebx
  415852:	lahf   
  415853:	pop    esi
  415854:	sbb    ebp,eax
  415856:	scas   eax,DWORD PTR es:[edi]
  415857:	pop    esp
  415858:	je     0x415821
  41585a:	pop    es
  41585b:	mov    esi,0x4fc830c5
  415860:	retf   0x11c9
  415863:	xlat   BYTE PTR ds:[ebx]
  415864:	mov    ch,BYTE PTR [eax]
  415866:	sbb    eax,0x963341b8
  41586b:	jno    0x4157f7
  41586d:	jno    0x41583c
  41586f:	and    al,0xf
  415871:	aad    0x4f
  415873:	js     0x415854
  415875:	iret   
  415876:	mov    edi,0x6e8adceb
  41587b:	das    
  41587c:	rcr    BYTE PTR [esi+0x324b5e2d],1
  415882:	(bad)  
  415883:	push   ebp
  415884:	test   DWORD PTR [edx+0xcb6697b],edx
  41588a:	in     al,dx
  41588b:	push   eax
  41588c:	out    dx,al
  41588d:	(bad)  
  41588f:	aam    0x18
  415891:	ficomp DWORD PTR [eax]
  415893:	sbb    DWORD PTR [ebx+0x306b1049],esp
  415899:	adc    dh,cl
  41589b:	push   ecx
  41589c:	call   0xbd7ed7e2
  4158a1:	or     BYTE PTR [edi-0x662c4632],bh
  4158a7:	push   edx
  4158a8:	arpl   WORD PTR [ebp+0x35],si
  4158ab:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4158ac:	mov    DWORD PTR [ebx+0x56],ebp
  4158af:	stos   BYTE PTR es:[edi],al
  4158b0:	call   0x737d:0x9ce96a5e
  4158b7:	push   esp
  4158b8:	mov    al,ds:0xe16fb3ea
  4158bd:	clc    
  4158be:	shl    BYTE PTR [esi-0x5c],0x8b
  4158c2:	pop    eax
  4158c3:	int3   
  4158c4:	aaa    
  4158c5:	xchg   BYTE PTR ss:[ecx-0x218f4923],ah
  4158cc:	and    ah,al
  4158ce:	sbb    bh,BYTE PTR [edx+0x36]
  4158d1:	ror    DWORD PTR [esi+0x7c204c84],cl
  4158d7:	test   eax,0x894fd168
  4158dc:	les    eax,FWORD PTR [eax-0x27]
  4158df:	imul   ebx,DWORD PTR [ecx+0x7f6c5bbc],0x40
  4158e6:	jb     0x4158a8
  4158e8:	sub    al,0x86
  4158ea:	stos   DWORD PTR es:[edi],eax
  4158eb:	scas   al,BYTE PTR es:[edi]
  4158ec:	shr    ebx,cl
  4158ee:	xor    al,0x37
  4158f0:	jle    0x4158d6
  4158f2:	es scas eax,DWORD PTR es:[edi]
  4158f4:	dec    ecx
  4158f5:	push   ebp
  4158f6:	add    al,0x75
  4158f8:	add    ah,BYTE PTR [ebp-0x4]
  4158fb:	sbb    ch,BYTE PTR [edx+edi*4]
  4158fe:	mov    eax,0x590716fc
  415903:	jmp    0xbff3:0x4280790
  41590a:	push   0x33
  41590c:	dec    esi
  41590d:	fadd   QWORD PTR [eax+0x40]
  415910:	rcr    DWORD PTR [ebx],1
  415912:	or     ch,BYTE PTR [ecx+ecx*8-0x67]
  415916:	xchg   ebx,eax
  415917:	mov    BYTE PTR [edi+0x7118b238],al
  41591d:	dec    ecx
  41591e:	sahf   
  41591f:	ficomp WORD PTR [ebx+0xa]
  415922:	call   0xa69e83cc
  415927:	imul   eax,eax,0x2be25969
  41592d:	out    dx,al
  41592e:	sbb    al,0xb5
  415930:	stos   BYTE PTR es:[edi],al
  415931:	lods   al,BYTE PTR ds:[esi]
  415932:	or     eax,0x3d589dee
  415937:	outs   dx,DWORD PTR ds:[esi]
  415938:	push   ss
  415939:	mov    ebx,0x73f9edbf
  41593e:	scas   eax,DWORD PTR es:[edi]
  41593f:	dec    esi
  415940:	je     0x415922
  415942:	push   ebx
  415943:	jbe    0x4159a3
  415945:	leave  
  415946:	jp     0x41593f
  415948:	jl     0x415945
  41594a:	lea    edx,[ebx+0x26]
  41594d:	shl    BYTE PTR [ecx+0x46b5cd30],cl
  415953:	cmp    al,BYTE PTR [esi+0x3e]
  415956:	sub    BYTE PTR [edx-0x1dc47a91],al
  41595c:	test   dl,ah
  41595e:	nop
  41595f:	je     0x41595f
  415961:	(bad)  
  415962:	cdq    
  415963:	jne    0x415987
  415965:	test   BYTE PTR [esi-0x4164c50f],dl
  41596b:	xchg   esi,eax
  41596c:	lds    eax,FWORD PTR [edi+0x14]
  41596f:	mov    cl,0xb
  415971:	data16 out 0x1b,al
  415974:	xor    dh,BYTE PTR [ebx]
  415976:	mov    ebp,0x5cf6848c
  41597b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41597c:	mov    DWORD PTR [esi+0x279d8d01],ecx
  415982:	frstor [eax+esi*2+0x68]
  415986:	fistp  WORD PTR [edx]
  415988:	mov    ecx,0xce9f411c
  41598d:	pop    eax
  41598e:	cmp    eax,0xf331211f
  415993:	lea    esi,cs:[ecx+0x5cca75cd]
  41599a:	pop    ebx
  41599b:	int    0x71
  41599d:	push   eax
  41599e:	in     eax,0x49
  4159a0:	rol    BYTE PTR ds:0xa4bb1fc7,1
  4159a6:	mov    dh,ah
  4159a8:	in     eax,dx
  4159a9:	inc    ecx
  4159aa:	xor    al,0x5a
  4159ac:	cwde   
  4159ad:	dec    ebx
  4159ae:	les    ecx,FWORD PTR [edx-0x727d7d84]
  4159b4:	mov    dl,0xc1
  4159b6:	popf   
  4159b7:	add    bh,BYTE PTR [esi-0x39]
  4159ba:	and    eax,0x6ee52ddd
  4159bf:	fstp   TBYTE PTR [ecx-0x7d]
  4159c2:	jne    0x415a37
  4159c4:	rcr    BYTE PTR [ebx+0x1b],cl
  4159c7:	push   eax
  4159c8:	std    
  4159c9:	nop
  4159ca:	cmp    al,0x3
  4159cc:	cmp    dh,BYTE PTR [edx]
  4159ce:	popa   
  4159cf:	ss mov ebx,0x4b2700ae
  4159d5:	cmp    cl,BYTE PTR [esi]
  4159d7:	xor    ecx,DWORD PTR [edx+0x32c47aae]
  4159dd:	xchg   esp,eax
  4159de:	inc    edi
  4159df:	mov    ah,0xe5
  4159e1:	mov    ah,0xda
  4159e3:	adc    bl,dh
  4159e5:	mov    edx,0x25e974ce
  4159ea:	and    al,0x4f
  4159ec:	fnstcw WORD PTR [ebx-0x6d1556bc]
  4159f2:	cdq    
  4159f3:	test   eax,0x7bc0b7b1
  4159f8:	and    eax,0x6b0fec
  4159fd:	adc    eax,0x3e1809fe
  415a02:	xchg   DWORD PTR es:[ecx+0x40b438b8],esp
  415a09:	dec    ebp
  415a0a:	or     al,0xfe
  415a0c:	test   BYTE PTR [esi+0xa],bl
  415a0f:	inc    ebx
  415a10:	inc    eax
  415a11:	fsub   st(0),st
  415a13:	test   ch,cl
  415a15:	adc    BYTE PTR [edi],bh
  415a17:	ret    0x8931
  415a1a:	add    DWORD PTR [ecx+0x7ac9a288],edi
  415a20:	repz out dx,eax
  415a22:	stos   BYTE PTR es:[edi],al
  415a23:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415a24:	cmc    
  415a25:	fbld   TBYTE PTR [eax+0x1d6902bd]
  415a2b:	dec    ebp
  415a2c:	mov    DWORD PTR [eax-0x40],edx
  415a2f:	pop    edx
  415a30:	mov    BYTE PTR [esi+eax*1],ah
  415a33:	cld    
  415a34:	in     eax,dx
  415a35:	leave  
  415a36:	mov    ah,dh
  415a38:	push   cs
  415a39:	cmc    
  415a3a:	xor    al,0x22
  415a3c:	pop    esi
  415a3d:	outs   dx,BYTE PTR ds:[esi]
  415a3e:	mov    bl,bh
  415a40:	jle    0x415a75
  415a42:	pop    edx
  415a43:	pop    ebx
  415a44:	jge    0x415a4b
  415a46:	pop    DWORD PTR [ebp+0x76]
  415a49:	ret    
  415a4a:	jno    0x415aaa
  415a4c:	fscale 
  415a4e:	push   ss
  415a4f:	(bad)  
  415a51:	inc    esp
  415a52:	(bad)  
  415a53:	push   ebp
  415a54:	fsubp  st(7),st
  415a56:	fnstsw WORD PTR [ebp-0x505ee3b7]
  415a5c:	(bad)  [ecx]
  415a5e:	add    esi,esi
  415a60:	call   0xe1cb323e
  415a65:	cmp    esi,DWORD PTR [ecx-0x33]
  415a68:	out    0x68,eax
  415a6a:	add    al,0xf2
  415a6c:	cmp    eax,0x9003d3ab
  415a71:	aam    0x6
  415a73:	out    dx,eax
  415a74:	or     ebx,esp
  415a76:	sub    BYTE PTR [edi-0x642fe74c],0x62
  415a7d:	jecxz  0x415aae
  415a7f:	dec    eax
  415a80:	inc    esp
  415a81:	pop    edi
  415a82:	jg     0x415aba
  415a84:	repz mov bh,0x76
  415a87:	fwait
  415a88:	in     eax,0x4b
  415a8a:	fld    TBYTE PTR [esi-0x3e0aae29]
  415a90:	mov    ss,esp
  415a92:	out    0xd9,eax
  415a94:	jmp    0x38413c60
  415a99:	addr16 mov ecx,0xfd310b29
  415a9f:	dec    ebx
  415aa0:	mov    bl,0xab
  415aa2:	dec    edx
  415aa3:	mov    dh,0x8f
  415aa5:	cmp    al,0x7d
  415aa7:	cli    
  415aa8:	dec    edi
  415aa9:	push   edi
  415aaa:	mov    edi,0xca2b6bd
  415aaf:	or     eax,0xb52ef03d
  415ab4:	retf   
  415ab5:	adc    eax,0x9022b8f1
  415aba:	aas    
  415abb:	jne    0x415a55
  415abd:	jg     0x415b0b
  415abf:	xchg   edx,eax
  415ac1:	test   eax,0xce04010
  415ac6:	iret   
  415ac7:	imul   ecx,DWORD PTR [esi-0x549c20fc],0xe705d5b
  415ad1:	pop    ss
  415ad2:	es jp  0x415b37
  415ad5:	std    
  415ad6:	cmp    DWORD PTR [eax-0x5b],esp
  415ad9:	mov    cl,0x1e
  415adb:	jo     0x415aa9
  415add:	daa    
  415ade:	std    
  415adf:	or     DWORD PTR [eax],esp
  415ae1:	push   edx
  415ae2:	fxtract 
  415ae4:	inc    eax
  415ae5:	test   BYTE PTR [ecx+0x26da1283],cl
  415aeb:	or     bh,BYTE PTR [ecx-0x75]
  415aee:	fidiv  DWORD PTR [ebx]
  415af0:	push   esp
  415af1:	inc    ebx
  415af2:	jnp    0x415b35
  415af4:	dec    ecx
  415af5:	ret    0xaf61
  415af8:	in     eax,dx
  415af9:	and    esp,DWORD PTR [eax]
  415afb:	cdq    
  415afc:	push   edi
  415afd:	jb     0x415a9f
  415aff:	rcl    BYTE PTR [edi+0x581ddd67],0x56
  415b06:	sbb    al,0xd0
  415b08:	mov    ebp,0x79f6119a
  415b0d:	dec    ebp
  415b0e:	xchg   ebx,ebp
  415b10:	cli    
  415b11:	cwde   
  415b12:	popf   
  415b13:	pop    esp
  415b14:	mov    esi,0x9e32311
  415b19:	or     eax,0x80b8267d
  415b1e:	out    0x20,al
  415b20:	jl     0x415b62
  415b22:	fiadd  WORD PTR [ecx+0x1a]
  415b25:	inc    ebx
  415b26:	data16 loopne 0x415b63
  415b29:	retf   
  415b2a:	mov    edx,DWORD PTR [esi]
  415b2c:	clc    
  415b2d:	das    
  415b2e:	nop
  415b2f:	pop    ecx
  415b30:	xchg   BYTE PTR [edi-0x12],ah
  415b33:	int3   
  415b34:	rcl    BYTE PTR [ebx-0x5e],cl
  415b37:	out    dx,eax
  415b38:	fdiv   QWORD PTR [eax-0x56bf2c9b]
  415b3e:	addr16 leave 
  415b40:	push   ebp
  415b41:	jae    0x415acc
  415b43:	cdq    
  415b44:	in     al,0x47
  415b46:	xlat   BYTE PTR ds:[ebx]
  415b47:	jne    0x415bbe
  415b49:	xor    ch,BYTE PTR [bp+si-0x8]
  415b4d:	cmc    
  415b4e:	sbb    DWORD PTR [ebp+0x696e9466],ebp
  415b54:	pop    ecx
  415b55:	lahf   
  415b56:	mov    fs,WORD PTR [edx-0x45be639e]
  415b5c:	dec    ecx
  415b5d:	pop    eax
  415b5e:	ss lock jne 0x415af7
  415b62:	dec    eax
  415b63:	and    al,BYTE PTR [edx-0x5214250e]
  415b69:	or     DWORD PTR [esi],ebx
  415b6b:	scas   eax,DWORD PTR es:[edi]
  415b6c:	ret    
  415b6d:	(bad)  
  415b6e:	xor    BYTE PTR [ecx-0x6ed91e02],bl
  415b74:	neg    BYTE PTR [ebx+0x74]
  415b77:	jmp    0x1fa2:0xc384df60
  415b7e:	daa    
  415b7f:	add    eax,eax
  415b81:	or     al,0xa8
  415b83:	clc    
  415b84:	fcomp  st(4)
  415b86:	sbb    al,0x1c
  415b88:	test   al,0x44
  415b8a:	inc    esp
  415b8b:	mov    DWORD PTR [esi+0x429f402f],esp
  415b91:	mov    ds:0xda3d34d9,eax
  415b96:	inc    ecx
  415b97:	adc    DWORD PTR [ebx],0xffffffe1
  415b9a:	outs   dx,BYTE PTR ds:[esi]
  415b9b:	adc    BYTE PTR ds:0xea7a089,dl
  415ba1:	and    al,0x41
  415ba3:	xor    BYTE PTR [edx-0x4a],0x91
  415ba7:	jmp    0x2cab:0xf2dcc3e2
  415bae:	jmp    0x415b96
  415bb0:	sbb    al,0x20
  415bb2:	xchg   edx,eax
  415bb3:	push   DWORD PTR [ecx+0x3d]
  415bb6:	mov    esi,0x68be9768
  415bbb:	lods   al,BYTE PTR ds:[esi]
  415bbc:	aad    0x8a
  415bbe:	jg     0x5a46d54f
  415bc4:	or     al,0x12
  415bc6:	scas   al,BYTE PTR es:[edi]
  415bc7:	mov    dl,0x63
  415bc9:	push   eax
  415bca:	dec    ebp
  415bcb:	(bad)  
  415bcc:	sub    eax,edi
  415bce:	and    ch,dh
  415bd0:	jp     0x415c4e
  415bd2:	test   BYTE PTR [eax-0x25],0xaa
  415bd6:	pop    eax
  415bd7:	cmp    DWORD PTR [esi],edx
  415bd9:	dec    edx
  415bda:	mov    ebx,0xc3fde1b2
  415bdf:	stos   DWORD PTR es:[edi],eax
  415be0:	nop
  415be1:	or     al,ah
  415be3:	push   es
  415be4:	mov    cl,BYTE PTR [ebp-0x3d2960fa]
  415bea:	cmp    bh,BYTE PTR [esi+0x36cf4944]
  415bf0:	lea    eax,[edx]
  415bf2:	pop    ss
  415bf3:	call   0x10cc6c81
  415bf8:	cmp    edx,ebx
  415bfa:	jbe    0x415c0b
  415c00:	add    DWORD PTR [eax],0x3870753
  415c06:	jmp    0x415c11
  415c0b:	add    DWORD PTR [eax],0xfacc38ad
  415c11:	mov    eax,DWORD PTR [ebp-0x8]
  415c14:	jmp    0x416103
  415c19:	mov    ebx,0x724f5289
  415c1e:	fistp  QWORD PTR [edi+0x1f6e49fd]
  415c24:	loop   0x415be5
  415c26:	out    0xdf,eax
  415c28:	adc    DWORD PTR [esi+esi*1+0x1],ebp
  415c2c:	add    dl,dl
  415c2e:	add    al,0x0
  415c30:	add    BYTE PTR [esi],dl
  415c32:	in     ax,dx
  415c34:	fild   WORD PTR [edi+0x76]
  415c37:	adc    ebp,esi
  415c39:	sub    BYTE PTR [edi+0x61b78373],0x13
  415c40:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415c41:	add    DWORD PTR [esi-0xc],esi
  415c44:	inc    ebx
  415c45:	or     BYTE PTR [esi+eiz*4-0x420d76da],bh
  415c4c:	sar    ah,0xfb
  415c4f:	inc    ebx
  415c50:	dec    eax
  415c51:	ins    DWORD PTR es:[edi],dx
  415c52:	es sbb al,0x7a
  415c55:	test   al,0xc
  415c57:	or     al,0x58
  415c59:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415c5a:	out    dx,al
  415c5b:	jmp    0x415c65
  415c5d:	imul   ebp,DWORD PTR [ecx],0xffffffd3
  415c60:	subps  xmm3,XMMWORD PTR [edx+0x6]
  415c64:	add    eax,0xbb143817
  415c69:	sub    al,0x6a
  415c6b:	mov    dl,0x6c
  415c6d:	add    ebp,ecx
  415c6f:	fsub   QWORD PTR [eax-0x65d3171]
  415c75:	jne    0x415ccf
  415c77:	in     al,dx
  415c78:	push   esp
  415c79:	stos   BYTE PTR es:[edi],al
  415c7a:	push   edx
  415c7b:	pusha  
  415c7c:	adc    al,0x7a
  415c7e:	cwde   
  415c7f:	scas   eax,DWORD PTR es:[edi]
  415c80:	push   edi
  415c81:	repz in eax,0x37
  415c84:	das    
  415c85:	mov    cl,0xa4
  415c87:	adc    eax,DWORD PTR [esi-0x66]
  415c8a:	pop    ss
  415c8b:	jns    0x415d00
  415c8d:	mov    ds:0x7aaab9a9,eax
  415c92:	cmp    dl,al
  415c94:	fdivr  DWORD PTR [ecx+0x1b5b5e02]
  415c9a:	jge    0x415c9c
  415c9c:	aad    0x76
  415c9e:	enter  0xf55b,0x9d
  415ca2:	xor    eax,0x2ea8b524
  415ca7:	sti    
  415ca8:	dec    ebx
  415ca9:	jmp    0x54b3:0x13169804
  415cb0:	push   ebp
  415cb1:	jmp    0x396f25b1
  415cb6:	xlat   BYTE PTR ds:[ebx]
  415cb7:	push   es
  415cb8:	jl     0x415c51
  415cba:	inc    edx
  415cbb:	popa   
  415cbc:	adc    ebp,DWORD PTR [edi-0x5e345cd8]
  415cc2:	and    DWORD PTR ds:0xe023f1bd,esi
  415cc8:	in     eax,dx
  415cc9:	aam    0x6a
  415ccb:	jb     0x415c62
  415ccd:	cwde   
  415cce:	sti    
  415ccf:	xlat   BYTE PTR ds:[ebx]
  415cd0:	cli    
  415cd1:	dec    edi
  415cd2:	pop    es
  415cd3:	mov    ds,ebx
  415cd5:	push   eax
  415cd6:	aas    
  415cd7:	xchg   edx,eax
  415cd8:	sub    BYTE PTR [edi],bl
  415cda:	fsub   QWORD PTR [ebx+0x78]
  415cdd:	mov    ch,0x18
  415cdf:	clc    
  415ce0:	jb     0x415cf7
  415ce2:	(bad)  
  415ce3:	cs mov dl,0xdd
  415ce6:	and    bl,cl
  415ce8:	push   ebx
  415ce9:	lahf   
  415cea:	mov    ?,WORD PTR [ebx]
  415cec:	in     eax,0xe8
  415cee:	and    cl,BYTE PTR [ebx-0x40]
  415cf1:	cmp    bl,dh
  415cf3:	shl    DWORD PTR [ecx],cl
  415cf5:	and    edi,DWORD PTR [ecx+0x28]
  415cf8:	jno    0x415c94
  415cfa:	adc    BYTE PTR [eax+esi*1],ah
  415cfd:	mov    edi,0xc113520e
  415d02:	add    bh,dh
  415d04:	shr    DWORD PTR [ecx-0x271b3004],0x35
  415d0b:	sbb    eax,DWORD PTR [esp+eax*4+0x5]
  415d0f:	(bad)  
  415d10:	mov    ah,0x22
  415d12:	iret   
  415d13:	minps  xmm7,XMMWORD PTR [ebx+0x44]
  415d17:	pusha  
  415d18:	dec    ebp
  415d19:	int3   
  415d1a:	xor    ah,BYTE PTR [edi+edi*8+0x74]
  415d1e:	mov    ds:0xfe943e56,eax
  415d23:	xor    DWORD PTR [esi+ebp*1-0x68],0xffffffe8
  415d28:	adc    eax,0x4630e0b9
  415d2d:	bound  ebx,QWORD PTR [eax+eiz*1]
  415d30:	in     eax,0x30
  415d32:	retf   0x5706
  415d35:	js     0x415d41
  415d37:	jae    0x415cbc
  415d39:	fisub  DWORD PTR [edx+0x3679e8ab]
  415d3f:	adc    DWORD PTR [eax-0x2d],edx
  415d42:	mov    al,0x18
  415d44:	popa   
  415d45:	and    cl,BYTE PTR [edx-0x45365547]
  415d4b:	out    dx,al
  415d4c:	push   esi
  415d4d:	out    0x7b,eax
  415d4f:	jo     0x415d23
  415d51:	jle    0x415db0
  415d53:	enter  0x5d0f,0xad
  415d57:	mov    cl,0x42
  415d59:	dec    ebp
  415d5a:	sub    DWORD PTR [edi+eiz*8+0x5d611d0a],ebx
  415d61:	je     0x415ce6
  415d63:	mov    esp,DWORD PTR [eax+eax*8]
  415d66:	dec    esp
  415d67:	and    al,0x1
  415d69:	mov    esi,0xa143bb80
  415d6e:	mov    ebx,0x156aa5be
  415d73:	pop    eax
  415d74:	inc    eax
  415d75:	add    BYTE PTR [ecx+eiz*2],bh
  415d78:	cmp    bl,al
  415d7a:	(bad)  
  415d7c:	push   0xffffff8f
  415d7e:	fist   WORD PTR [ebp+0x7f290971]
  415d84:	(bad)  
  415d85:	icebp  
  415d86:	das    
  415d87:	xchg   DWORD PTR [eax-0x26],esi
  415d8a:	sbb    eax,DWORD PTR [ecx]
  415d8c:	test   al,0xdd
  415d8e:	sub    eax,0xe4dad2cb
  415d93:	scas   al,BYTE PTR es:[edi]
  415d94:	mov    al,ds:0xa771742b
  415d99:	or     DWORD PTR [ecx-0x6a],eax
  415d9c:	xchg   edi,eax
  415d9d:	lock push ecx
  415d9f:	scas   al,BYTE PTR es:[edi]
  415da0:	mov    bl,0x1a
  415da2:	imul   esi,DWORD PTR [esi-0x1e9ea9e],0xf8df59e7
  415dac:	sbb    dh,BYTE PTR [ebp+0xa]
  415daf:	dec    esp
  415db0:	xchg   DWORD PTR [edi+edx*1],esi
  415db3:	add    esp,DWORD PTR [ecx+0x4c]
  415db6:	add    edx,DWORD PTR [edi-0x7780a0fd]
  415dbc:	out    0x8f,al
  415dbe:	and    al,0x69
  415dc0:	pushf  
  415dc1:	ins    BYTE PTR es:[edi],dx
  415dc2:	int3   
  415dc3:	in     eax,dx
  415dc4:	in     eax,0x8f
  415dc6:	loopne 0x415d75
  415dc8:	cmp    eax,0xed2744a8
  415dcd:	dec    esi
  415dce:	push   ecx
  415dcf:	mov    BYTE PTR [edx+0x211d5f02],cl
  415dd5:	jnp    0x415dcb
  415dd7:	mov    ds:0xd8fec034,eax
  415ddc:	js     0x415e46
  415dde:	mov    ?,WORD PTR [edi+0x7a]
  415de1:	xchg   DWORD PTR [ebx+0x727dd3fb],eax
  415de7:	ins    BYTE PTR es:[edi],dx
  415de8:	das    
  415de9:	retf   
  415dea:	loope  0x415e3d
  415dec:	sbb    al,0xc8
  415dee:	loopne 0x415e30
  415df0:	stos   DWORD PTR es:[edi],eax
  415df1:	test   al,0x40
  415df3:	push   0xb409ba09
  415df8:	cmp    DWORD PTR [ecx-0x57f75a5e],0x37
  415dff:	fnstsw WORD PTR [edi+ecx*4-0x44]
  415e03:	ror    BYTE PTR [ebx-0x7e],0xdf
  415e07:	lds    esp,FWORD PTR [edx]
  415e09:	xchg   ebx,eax
  415e0a:	jmp    0xaddf:0x918efa7b
  415e11:	nop
  415e12:	xor    cl,bh
  415e14:	inc    esi
  415e15:	mov    esi,0xc5e335b6
  415e1a:	mov    eax,ds:0x96306a08
  415e1f:	and    cl,BYTE PTR [ecx+0x76eca390]
  415e25:	or     DWORD PTR [edx],0x3
  415e28:	and    ch,BYTE PTR [edx]
  415e2a:	and    BYTE PTR [ebx-0x5072d758],dh
  415e30:	dec    edi
  415e31:	add    ch,BYTE PTR [ebx+0x58aaa604]
  415e37:	push   cs
  415e38:	out    0xe2,al
  415e3a:	std    
  415e3b:	add    DWORD PTR [ebx+0x5e0f0139],ebp
  415e41:	cmp    esp,DWORD PTR [ecx+ebx*2+0x1e]
  415e45:	dec    ecx
  415e46:	nop
  415e47:	dec    eax
  415e48:	retf   
  415e49:	or     al,0xef
  415e4b:	push   ebp
  415e4c:	std    
  415e4d:	test   edi,ecx
  415e4f:	xor    DWORD PTR [eax+0x71],ebp
  415e52:	push   esp
  415e53:	(bad)  
  415e54:	or     al,0xbf
  415e56:	mov    dl,0x30
  415e58:	mov    ebp,0x8539cf80
  415e5d:	repnz out 0x6a,al
  415e60:	mov    cs,WORD PTR [esi]
  415e62:	mov    ah,BYTE PTR [edi-0x27a89054]
  415e68:	cmp    DWORD PTR [ebx],0xcd30d0fe
  415e6e:	add    bl,BYTE PTR ds:0x748c9686
  415e74:	add    eax,0xd10917c9
  415e79:	out    0x9d,al
  415e7b:	and    bl,dl
  415e7d:	xor    DWORD PTR [ecx-0x5d88a669],eax
  415e83:	xchg   edi,eax
  415e84:	loopne 0x415e22
  415e86:	repnz stos BYTE PTR es:[edi],al
  415e88:	add    bh,BYTE PTR es:[ebx]
  415e8b:	xchg   ecx,eax
  415e8c:	fnstcw WORD PTR [eax+0xf]
  415e8f:	pop    esi
  415e90:	loopne 0x415ed9
  415e92:	(bad)  
  415e93:	inc    BYTE PTR [ebp+0x5dfdb39c]
  415e99:	and    BYTE PTR [ebx+0x11c64ce3],0x11
  415ea0:	jno    0x415e94
  415ea2:	das    
  415ea3:	sub    esi,ebp
  415ea5:	stc    
  415ea6:	mov    bl,0xa
  415ea8:	dec    ecx
  415ea9:	push   0x3861ecff
  415eae:	inc    ecx
  415eaf:	or     bl,BYTE PTR [ecx-0x470fc6d0]
  415eb5:	mov    dl,0x55
  415eb7:	sub    esp,ebx
  415eb9:	pop    edi
  415eba:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415ebb:	pop    ecx
  415ebc:	jl     0x415e5e
  415ebe:	pop    esp
  415ebf:	mov    edi,0xcae110dd
  415ec4:	cmp    DWORD PTR [ebp+0x4b1f3de],esp
  415eca:	jb     0x415eba
  415ecc:	push   ebp
  415ecd:	dec    ecx
  415ece:	xor    edi,DWORD PTR [esi]
  415ed0:	test   DWORD PTR [esi-0x1],eax
  415ed3:	or     bl,bh
  415ed5:	cmp    eax,0x6bd962ae
  415eda:	push   esi
  415edb:	push   ebx
  415edc:	xchg   ecx,eax
  415edd:	and    eax,0xef0de620
  415ee2:	or     DWORD PTR ds:0xedef050c,ebx
  415ee8:	adc    DWORD PTR [ecx+ecx*4-0x5f],0x7c
  415eed:	xchg   ecx,eax
  415eee:	pop    esi
  415eef:	add    DWORD PTR ds:0x6bf6da62,esi
  415ef5:	sub    eax,ebx
  415ef7:	and    BYTE PTR [edx-0x7c],ah
  415efa:	adc    cl,BYTE PTR [eax]
  415efc:	xlat   BYTE PTR ds:[ebx]
  415efd:	mov    ecx,0x4be4e08a
  415f02:	pop    esi
  415f03:	fld    DWORD PTR [ebx+0x2ade7ae0]
  415f09:	or     al,0x18
  415f0b:	shl    DWORD PTR [ecx+0x329f6b23],cl
  415f11:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415f12:	ror    ebx,0x9b
  415f15:	lock data16 aas 
  415f18:	out    0xb,al
  415f1a:	mov    ah,0x8f
  415f1c:	sub    ebx,DWORD PTR [ebx+0x55]
  415f1f:	scas   eax,DWORD PTR es:[edi]
  415f20:	dec    BYTE PTR [eax-0x59]
  415f23:	or     ah,0x40
  415f26:	jns    0x415f8a
  415f28:	pop    ebx
  415f29:	aam    0x75
  415f2b:	sub    bl,BYTE PTR [edx+0x5c]
  415f2e:	in     al,dx
  415f2f:	out    dx,eax
  415f30:	dec    ecx
  415f31:	adc    al,0x46
  415f33:	repnz dec ebp
  415f35:	adc    dl,dh
  415f37:	aad    0x48
  415f39:	pop    es
  415f3a:	lahf   
  415f3b:	test   eax,0x52661da
  415f40:	fidiv  WORD PTR [eax+0x68fbe27c]
  415f46:	sahf   
  415f47:	and    DWORD PTR [edx+0x5f5680cc],0xffffffe5
  415f4e:	cld    
  415f4f:	sub    edi,DWORD PTR [edx+0x34]
  415f52:	jo     0x415f9f
  415f54:	sbb    DWORD PTR es:[ebp+0x52],ecx
  415f58:	pop    esp
  415f59:	mov    edx,0x95fb027d
  415f5e:	add    BYTE PTR [esi+ebx*8],dh
  415f61:	mov    edx,0xbcc618f3
  415f66:	fisttp WORD PTR [esi-0x6dd02302]
  415f6c:	cli    
  415f6d:	out    dx,al
  415f6e:	mov    ds:0x32f64ad6,eax
  415f73:	push   es
  415f74:	pop    ss
  415f75:	fldcw  WORD PTR [eax-0x5f2c13dd]
  415f7b:	dec    eax
  415f7c:	add    eax,0xfc3f691c
  415f81:	sahf   
  415f82:	pusha  
  415f83:	mov    bh,0xe3
  415f85:	nop
  415f86:	sbb    al,0x23
  415f88:	add    bh,BYTE PTR [bp+di-0x493b]
  415f8d:	jecxz  0x415fe2
  415f8f:	mov    cl,0x74
  415f91:	push   0x33ba4e69
  415f96:	cmp    eax,0x7114d689
  415f9b:	loop   0x415fe4
  415f9d:	mov    ecx,0x2ebb90be
  415fa2:	(bad)  
  415fa3:	cmp    ebx,ecx
  415fa5:	iret   
  415fa6:	sub    BYTE PTR [esi-0xd],ah
  415fa9:	jp     0x415f2f
  415fab:	push   edx
  415fac:	adc    al,0xe5
  415fae:	stc    
  415faf:	adc    eax,0x557cc695
  415fb4:	gs das 
  415fb6:	adc    al,0xfc
  415fb8:	in     eax,dx
  415fb9:	sbb    eax,0x3997deca
  415fbe:	cmp    edi,eax
  415fc0:	inc    eax
  415fc1:	and    ch,BYTE PTR [esi-0x76]
  415fc4:	sub    al,0xd
  415fc6:	mov    ds:0xa70a197b,eax
  415fcb:	jmp    0xd4c4237
  415fd0:	push   ebp
  415fd1:	lahf   
  415fd2:	add    eax,0x4d6aa20
  415fd7:	pop    esp
  415fd8:	lahf   
  415fd9:	add    BYTE PTR [eax-0x38fa07d6],ch
  415fdf:	ds cs jecxz 0x415fec
  415fe3:	inc    ebx
  415fe4:	leave  
  415fe5:	out    0xa7,al
  415fe7:	jle    0x416057
  415fe9:	retf   0x37a0
  415fec:	cs jne 0x415fc4
  415fef:	(bad)  
  415ff0:	iret   
  415ff1:	push   ecx
  415ff2:	adc    cl,BYTE PTR [edx+0x16b9601d]
  415ff8:	xor    DWORD PTR [esi-0x40c2b931],esi
  415ffe:	(bad)
  416002:	aaa    
  416003:	cmp    edx,ecx
  416005:	sbb    cl,al
  416007:	pop    ecx
  416008:	push   ss
  416009:	data16 jle 0x415f98
  41600c:	lods   al,BYTE PTR ds:[esi]
  41600d:	retf   
  41600e:	jno    0x41602c
  416010:	fs xor eax,0x14f0918a
  416016:	mov    ah,0x2d
  416018:	icebp  
  416019:	fdiv   QWORD PTR [esi-0xc411997]
  41601f:	out    dx,al
  416020:	xchg   esp,eax
  416021:	adc    eax,0xb44c216d
  416026:	loope  0x416074
  416028:	dec    edx
  416029:	mov    al,0x57
  41602b:	sbb    bl,cl
  41602d:	mov    DWORD PTR [ecx],ebp
  41602f:	rcl    ah,cl
  416031:	adc    BYTE PTR [edi+0x65],bl
  416034:	cli    
  416035:	pusha  
  416036:	fidivr DWORD PTR [edx]
  416038:	push   ecx
  416039:	inc    eax
  41603a:	and    eax,0x5d5c4b87
  41603f:	jmp    0x416025
  416041:	int    0x8c
  416043:	(bad)  
  416045:	pop    edx
  416046:	jnp    0x41601c
  416048:	dec    eax
  416049:	jle    0x41600f
  41604b:	jp     0x415ff7
  41604d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41604e:	add    ch,BYTE PTR [ecx+0x403d2c66]
  416054:	and    al,0x88
  416056:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416057:	imul   edx,DWORD PTR [ebx+0x2a],0x8bd150b8
  41605e:	sar    DWORD PTR [esp+ebp*8+0x2349119d],1
  416065:	sar    DWORD PTR [ebp+0x4f],0x10
  416069:	push   ecx
  41606a:	cli    
  41606b:	sbb    ch,BYTE PTR [esi]
  41606d:	xchg   DWORD PTR [ebx],edx
  41606f:	or     eax,0x5254394
  416074:	mov    eax,0x44bfc39a
  416079:	shl    BYTE PTR [edx-0x5a],cl
  41607c:	test   bl,dl
  41607e:	not    DWORD PTR [eax-0x76]
  416081:	imul   eax,DWORD PTR [edi],0xffffff92
  416084:	sbb    DWORD PTR [eax-0x3e8249b0],ebp
  41608a:	fisub  DWORD PTR [eax+0x71]
  41608d:	je     0x416021
  41608f:	ja     0x41609f
  416091:	and    cl,BYTE PTR [eax+0xd]
  416094:	js     0x4160c0
  416096:	repz ds push eax
  416099:	out    dx,eax
  41609a:	jmp    0xb650:0x6fa1439d
  4160a1:	push   ss
  4160a2:	enter  0x4552,0x6
  4160a6:	xor    BYTE PTR [ebp-0x648edadf],0x81
  4160ad:	repz pop ss
  4160af:	mov    ebp,esp
  4160b1:	stos   DWORD PTR es:[edi],eax
  4160b2:	aaa    
  4160b3:	sub    eax,0x9e4d5680
  4160b8:	les    ebx,FWORD PTR [edx]
  4160ba:	es in  al,dx
  4160bc:	jb     0x416055
  4160be:	adc    dh,BYTE PTR [eax]
  4160c0:	das    
  4160c1:	ss jnp 0x416082
  4160c4:	inc    ebx
  4160c5:	pop    ecx
  4160c6:	jno    0x4160ad
  4160c8:	mov    es,WORD PTR [ebx]
  4160ca:	jg     0x41611f
  4160cc:	push   es
  4160cd:	daa    
  4160ce:	(bad)  
  4160cf:	into   
  4160d0:	push   esi
  4160d1:	js     0x4160f4
  4160d3:	dec    ebx
  4160d4:	mov    WORD PTR [ebp-0x73],fs
  4160d7:	shr    BYTE PTR [edi-0x5c],cl
  4160da:	adc    eax,0x986f8f80
  4160df:	pop    ss
  4160e0:	cmp    bh,BYTE PTR [ebx]
  4160e2:	dec    esp
  4160e3:	mov    ebx,0x3ab76b81
  4160e8:	cld    
  4160e9:	mov    BYTE PTR [ebx],dh
  4160eb:	xchg   DWORD PTR [edx],edx
  4160ed:	je     0x416154
  4160ef:	xchg   esp,eax
  4160f0:	pop    edi
  4160f1:	comiss xmm7,xmm1
  4160f4:	aam    0xb2
  4160f6:	dec    edi
  4160f7:	ins    BYTE PTR es:[edi],dx
  4160f8:	jae    0x416120
  4160fa:	inc    ecx
  4160fb:	mov    ah,0x53
  4160fd:	adc    edx,DWORD PTR [ecx+edx*8]
  416100:	punpckhbw mm4,QWORD PTR ds:0xff41c633
  416107:	inc    ebp
  416108:	in     al,0x3
  41610a:	(bad)  
  41610b:	cmp    ecx,eax
  41610d:	jb     0x4156f6
  416113:	mov    al,BYTE PTR [ebp-0x1]
  416116:	mov    ecx,DWORD PTR [ebp-0x30]
  416119:	xor    cl,0xa
  41611c:	mov    dl,0xf5
  41611e:	sub    dl,cl
  416120:	mov    ecx,DWORD PTR [ebp-0x2c]
  416123:	xor    cl,0xa
  416126:	add    al,dl
  416128:	add    cl,0xb
  41612b:	ror    al,cl
  41612d:	mov    ecx,DWORD PTR [ebp-0xc]
  416130:	jmp    0x41661f
  416135:	jns    0x416135
  416137:	jle    0x416149
  416139:	call   DWORD PTR [eax-0x19e60081]
  41613f:	sbb    al,0x1e
  416141:	jno    0x4161c2
  416143:	addr16 pusha 
  416145:	cmp    eax,DWORD PTR ds:[ecx]
  416148:	add    dl,dl
  41614a:	add    al,0x0
  41614c:	add    bh,dl
  41614e:	mov    dl,0x50
  416150:	xor    al,0x7e
  416152:	in     eax,0x30
  416154:	dec    edx
  416155:	ins    BYTE PTR es:[edi],dx
  416156:	sub    edi,ebp
  416158:	pop    esp
  416159:	xchg   ebp,eax
  41615a:	dec    edx
  41615b:	loope  0x416133
  41615d:	mov    edi,0xffda8ee6
  416162:	mov    ebp,0xa8af44dc
  416167:	pop    ebp
  416168:	stc    
  416169:	icebp  
  41616a:	stc    
  41616b:	jp     0x4161c1
  41616d:	mov    ch,0x41
  41616f:	sahf   
  416170:	or     dh,al
  416172:	mov    eax,0x84798e85
  416177:	fwait
  416178:	pop    edx
  416179:	add    DWORD PTR [eax+0x46],esp
  41617c:	jbe    0x41616b
  41617e:	pop    eax
  41617f:	arpl   WORD PTR [esi],ax
  416181:	jo     0x416160
  416183:	and    cl,BYTE PTR [eax+0x12e169e4]
  416189:	or     eax,0x759f9f22
  41618e:	or     al,0x12
  416190:	xor    eax,ecx
  416192:	pop    ss
  416193:	cmp    BYTE PTR [ebx-0x2c],cl
  416196:	cmp    DWORD PTR [eax-0x10],esi
  416199:	sbb    DWORD PTR [ecx+0x11],edi
  41619c:	(bad)  
  41619d:	sub    eax,0xee9f8222
  4161a2:	pop    ss
  4161a3:	fisub  WORD PTR [eax]
  4161a5:	pop    eax
  4161a6:	jecxz  0x4161f6
  4161a8:	xor    ebp,DWORD PTR [esi]
  4161aa:	jne    0x4161cf
  4161ac:	or     DWORD PTR [ebx+0x411326f],ecx
  4161b2:	xchg   ebx,eax
  4161b3:	into   
  4161b4:	mov    ah,0xd6
  4161b6:	sbb    BYTE PTR [edx],0x55
  4161b9:	jmp    0x2570:0x708cc113
  4161c0:	mov    ebp,0x3e2b5112
  4161c5:	ficomp WORD PTR [ebx+ebx*8-0x48]
  4161c9:	not    BYTE PTR [edx]
  4161cb:	cs pop ebp
  4161cd:	mov    ah,0xa1
  4161cf:	push   0x38
  4161d1:	push   0x26
  4161d3:	sar    BYTE PTR [esi],cl
  4161d5:	shr    esi,cl
  4161d7:	jge    0x4161df
  4161d9:	stos   BYTE PTR es:[edi],al
  4161da:	lods   al,BYTE PTR ds:[esi]
  4161db:	mul    dh
  4161dd:	out    0x2f,eax
  4161df:	mov    esp,0xdb1098cc
  4161e4:	xchg   ebp,eax
  4161e5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4161e6:	mov    cl,0x82
  4161e8:	adc    eax,0xbd5104bb
  4161ed:	mov    bh,0x50
  4161ef:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4161f0:	fnsave ss:[esi]
  4161f3:	or     DWORD PTR [edi+0x78],0xffffff86
  4161f7:	sbb    eax,0x8efb8268
  4161fc:	jl     0x4161d2
  4161fe:	sar    BYTE PTR [ecx],1
  416200:	adc    DWORD PTR [ebp-0x77],esp
  416203:	loop   0x41627d
  416205:	stos   DWORD PTR es:[edi],eax
  416206:	dec    ebp
  416207:	cmp    BYTE PTR [ebp+0x430cd09b],dh
  41620d:	fsubr  QWORD PTR [ebx]
  41620f:	sbb    DWORD PTR [edx+0x331bf9e6],0x37c23339
  416219:	enter  0x7fce,0x2e
  41621d:	out    dx,al
  41621e:	fdiv   DWORD PTR [eax-0x431a328e]
  416224:	mov    esi,0x56c7dd9b
  416229:	imul   edx,DWORD PTR [ebx+0xd4ed738],0xbef7c610
  416233:	fcom   DWORD PTR [eax-0x65543273]
  416239:	sub    eax,0x10741fb8
  41623e:	jne    0x4161da
  416240:	xchg   ebp,eax
  416241:	pop    eax
  416242:	push   0xffffffb2
  416244:	inc    ecx
  416245:	or     ah,BYTE PTR [edi+0x4f10d133]
  41624b:	sbb    bh,dl
  41624d:	sbb    al,BYTE PTR [ecx]
  41624f:	daa    
  416250:	jb     0x41627a
  416252:	popa   
  416253:	popa   
  416254:	push   esp
  416255:	fneni(8087 only) 
  416257:	rcl    BYTE PTR [edx+0x1b424036],0x30
  41625e:	ja     0x41626d
  416260:	mov    ecx,0xb3a915b5
  416265:	xlat   BYTE PTR ds:[ebx]
  416266:	push   esi
  416267:	lods   al,BYTE PTR ds:[esi]
  416268:	rcr    DWORD PTR [edi-0x51],0x41
  41626c:	(bad)  
  41626d:	pop    edx
  41626e:	lods   eax,DWORD PTR ds:[esi]
  41626f:	dec    ebx
  416270:	idiv   bh
  416272:	sub    ah,BYTE PTR [edx+0x47]
  416275:	push   edx
  416276:	mov    bl,0x7e
  416278:	pop    ebx
  416279:	jecxz  0x4162aa
  41627b:	inc    eax
  41627c:	test   BYTE PTR [ecx-0x28],bh
  41627f:	xchg   edi,eax
  416280:	call   0x71f9:0x75d5f683
  416287:	and    BYTE PTR [eax],cl
  416289:	jae    0x41624a
  41628b:	out    dx,eax
  41628c:	push   ds
  41628d:	add    al,0x16
  41628f:	retf   
  416290:	fcom   QWORD PTR [esi-0x468909dc]
  416296:	ficomp WORD PTR [ebx-0x4b]
  416299:	add    eax,0xd6a9b810
  41629e:	pushf  
  41629f:	(bad)  
  4162a0:	cmovnp edi,DWORD PTR [ebp+0xf]
  4162a4:	es pop eax
  4162a6:	cli    
  4162a7:	stos   BYTE PTR es:[edi],al
  4162a8:	inc    esp
  4162a9:	dec    edx
  4162aa:	lods   eax,DWORD PTR ds:[esi]
  4162ab:	pushf  
  4162ac:	clc    
  4162ad:	icebp  
  4162ae:	add    BYTE PTR [ecx-0x1359b715],ah
  4162b4:	mov    ecx,0xc52e3d40
  4162b9:	dec    edx
  4162ba:	add    edi,DWORD PTR [ebx+0x167db99f]
  4162c0:	imul   ebp,DWORD PTR [ebp+0x3c9f5b85],0xffffffd7
  4162c7:	or     BYTE PTR [edx+eiz*4+0x32],ah
  4162cb:	int    0x76
  4162cd:	pop    es
  4162ce:	daa    
  4162cf:	shr    BYTE PTR [ebx-0x7b],1
  4162d2:	test   al,0xc8
  4162d4:	mov    ds:0x1787127a,al
  4162d9:	(bad)  
  4162da:	cmp    ah,bl
  4162dc:	jmp    0xbf3c:0x9273dab8
  4162e3:	mov    edx,cs
  4162e5:	data16 sbb cl,bl
  4162e8:	hlt    
  4162e9:	or     eax,0x44753bd3
  4162ee:	cmc    
  4162ef:	and    BYTE PTR [edi],bl
  4162f1:	ds xchg ebp,eax
  4162f3:	loopne 0x41628d
  4162f5:	mov    ebx,0x5ae29615
  4162fa:	imul   BYTE PTR [ebx-0x4d]
  4162fd:	inc    esp
  4162fe:	fmul   QWORD PTR [ecx]
  416300:	ss test al,0x74
  416303:	nop
  416304:	push   ebx
  416305:	icebp  
  416306:	add    cl,BYTE PTR [ebx-0x29b8c89e]
  41630c:	sbb    al,0x70
  41630e:	sub    ah,0x49
  416311:	jbe    0x416338
  416313:	push   cs
  416314:	call   0x9789b7b0
  416319:	cli    
  41631a:	(bad)  
  41631b:	(bad)  
  41631c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41631d:	mov    ebx,0x426a9adf
  416322:	imul   ecx,DWORD PTR [esi],0xd24ac1be
  416328:	popa   
  416329:	ja     0x416308
  41632b:	mov    edi,0x215d60cd
  416330:	scas   eax,DWORD PTR es:[edi]
  416331:	arpl   WORD PTR [esi*2+0x7de92b31],bp
  416338:	or     eax,0x1a7ffac0
  41633d:	lock cld 
  41633f:	int3   
  416340:	adc    DWORD PTR [eax+0x5ba80553],0xffffff99
  416347:	adc    edx,DWORD PTR [ebx+0x132e7f75]
  41634d:	mov    dh,0x37
  41634f:	loope  0x41634c
  416351:	call   0x7a60d264
  416356:	add    al,0xb3
  416358:	cmp    ch,ch
  41635a:	pop    ds
  41635b:	mov    ecx,0xa1ceca3a
  416360:	fsubr  QWORD PTR [ecx]
  416362:	mov    al,0x7b
  416364:	xor    dl,ch
  416366:	xlat   BYTE PTR ds:[ebx]
  416367:	inc    esi
  416368:	arpl   WORD PTR [esi+edi*8],bx
  41636b:	xchg   ebp,eax
  41636c:	fbld   TBYTE PTR [esi+eax*1-0x76]
  416370:	sbb    DWORD PTR [eax+0x29949eef],0xffffffbc
  416377:	pop    edx
  416378:	push   cs
  416379:	imul   esp,DWORD PTR [edx+0x52],0xd6410c27
  416380:	retf   
  416381:	jle    0x4163a3
  416383:	(bad)  
  416384:	sbb    al,0xca
  416386:	js     0x4163c7
  416388:	add    eax,0x6aba0f50
  41638d:	dec    edi
  41638e:	jecxz  0x416337
  416390:	jb     0x416392
  416392:	test   BYTE PTR [ebx+0x5bf2a607],cl
  416398:	icebp  
  416399:	jns    0x416371
  41639b:	cmp    edi,eax
  41639d:	ins    BYTE PTR es:[edi],dx
  41639e:	mov    esp,0xfdd39d40
  4163a3:	and    bh,dl
  4163a5:	jl     0x41637c
  4163a7:	jle    0x4163cb
  4163a9:	(bad)  
  4163aa:	mov    bl,0x97
  4163ac:	inc    edi
  4163ad:	mov    al,0x75
  4163af:	dec    eax
  4163b0:	xchg   esp,eax
  4163b1:	popa   
  4163b2:	mov    ebp,0x1bcc72bc
  4163b7:	mov    ch,BYTE PTR [eax-0x3a0aa34a]
  4163bd:	leave  
  4163be:	sub    al,0x3f
  4163c0:	int    0x97
  4163c2:	clc    
  4163c3:	mov    eax,ds:0x14490bef
  4163c8:	xchg   BYTE PTR [ebp-0x5954d493],bh
  4163ce:	mov    edi,0xb3853573
  4163d3:	sub    esi,esi
  4163d5:	shl    edi,0x27
  4163d8:	ss inc esp
  4163da:	jb     0x416387
  4163dc:	inc    edi
  4163dd:	xlat   BYTE PTR ds:[ebx]
  4163de:	mov    bl,0x82
  4163e0:	shl    BYTE PTR [edi],1
  4163e2:	xchg   esp,eax
  4163e3:	or     edx,DWORD PTR [edi+0x4e8ecf1e]
  4163e9:	popf   
  4163ea:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4163eb:	test   bh,ch
  4163ed:	mov    bh,0x96
  4163ef:	stc    
  4163f0:	xor    dl,BYTE PTR [ebx]
  4163f2:	mov    esi,esp
  4163f4:	adc    esi,DWORD PTR [edx+0x542f371a]
  4163fa:	out    0xb8,eax
  4163fc:	loop   0x416392
  4163fe:	out    dx,al
  4163ff:	push   cs
  416400:	cmp    cl,bl
  416402:	loope  0x4163ca
  416404:	aas    
  416405:	loope  0x41639d
  416407:	fdiv   st,st(0)
  416409:	stos   DWORD PTR es:[edi],eax
  41640a:	mov    eax,ds:0x1ea9d265
  41640f:	or     ah,bl
  416411:	sahf   
  416412:	iret   
  416413:	mov    edi,0x583f175a
  416418:	jns    0x41639e
  41641a:	dec    ecx
  41641b:	mov    al,ds:0x617dae28
  416420:	sub    ebp,DWORD PTR [edi-0x39]
  416423:	fxtract 
  416425:	xor    BYTE PTR [edi+0x51],bh
  416428:	lock retf 0xe4cc
  41642c:	ret    
  41642d:	or     eax,0x2d61169c
  416432:	stos   BYTE PTR es:[edi],al
  416433:	lea    ebp,[eax]
  416435:	pop    ebx
  416436:	cld    
  416437:	jl     0x416497
  416439:	xchg   ebp,eax
  41643a:	ins    DWORD PTR es:[edi],dx
  41643b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41643c:	jns    0x4163fe
  41643e:	jo     0x416414
  416440:	push   ds
  416441:	mov    ds,edx
  416443:	mov    DWORD PTR [esp+eiz*4-0x7326cfe6],eax
  41644a:	mov    esp,0xdbe8733a
  41644f:	and    bh,BYTE PTR [ecx]
  416451:	jae    0x4163e0
  416453:	or     bl,BYTE PTR [ebx-0x53e3ae3b]
  416459:	push   ss
  41645a:	pop    edi
  41645b:	mov    BYTE PTR [edi-0x64],bh
  41645e:	sub    DWORD PTR [ebx-0x679d3bd4],eax
  416464:	push   0x7665fe4c
  416469:	sub    BYTE PTR [edi-0x5c],cl
  41646c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41646d:	fxch   st(4)
  41646f:	jg     0x416465
  416471:	push   ecx
  416472:	pop    es
  416473:	mov    ds:0xb5ae78e9,al
  416478:	cmp    bh,BYTE PTR [eax+esi*4+0x5337297d]
  41647f:	imul   BYTE PTR [ecx+edx*1]
  416482:	add    al,0x89
  416484:	mov    eax,0x457bc25c
  416489:	adc    DWORD PTR [ecx-0x733119ea],0x88021e9b
  416493:	test   al,0x56
  416495:	dec    ebx
  416496:	jnp    0x41643c
  416498:	fwait
  416499:	arpl   WORD PTR [ebp-0x6195263f],bp
  41649f:	mov    ebp,0x1e9943ac
  4164a4:	mov    cl,0xc8
  4164a6:	fst    QWORD PTR [eax+0x2baec8c6]
  4164ac:	dec    ebp
  4164ad:	pusha  
  4164ae:	js     0x41646c
  4164b0:	test   DWORD PTR [eax+0x11],ebx
  4164b3:	movd   edx,mm6
  4164b6:	jo     0x4164ef
  4164b8:	ret    
  4164b9:	not    esi
  4164bb:	mov    DWORD PTR [esi],ebp
  4164bd:	inc    esp
  4164be:	sub    eax,0x9cf0342c
  4164c3:	je     0x416508
  4164c5:	js     0x4164ee
  4164c7:	mov    edx,DWORD PTR [esi+0x2f]
  4164ca:	ins    BYTE PTR es:[edi],dx
  4164cb:	test   dl,dh
  4164cd:	and    ebp,ecx
  4164cf:	mov    ch,0x78
  4164d1:	xchg   ecx,eax
  4164d2:	rcl    DWORD PTR [edx+0x2b],0x40
  4164d6:	stos   DWORD PTR es:[edi],eax
  4164d7:	bound  ebp,QWORD PTR [esi+0x18a7b01]
  4164dd:	jp     0x416543
  4164df:	xchg   ebp,eax
  4164e0:	sti    
  4164e1:	in     al,dx
  4164e2:	retf   
  4164e3:	pop    esp
  4164e4:	(bad)  
  4164e5:	pop    ebp
  4164e6:	inc    esp
  4164e7:	pop    eax
  4164e8:	emms   
  4164ea:	mov    bh,0xea
  4164ec:	push   ebx
  4164ed:	daa    
  4164ee:	push   eax
  4164ef:	mov    bl,0x54
  4164f1:	sbb    BYTE PTR [eax-0x2a862438],ch
  4164f7:	fwait
  4164f8:	es or  dl,bl
  4164fb:	sub    ch,ch
  4164fd:	jno    0x4164ba
  4164ff:	and    ebx,DWORD PTR [esi-0x2babfd13]
  416505:	scas   al,BYTE PTR es:[edi]
  416506:	add    eax,0x5b0d746e
  41650b:	sbb    DWORD PTR [esi+0x42553da6],esp
  416511:	aam    0xe6
  416513:	mov    dl,0x98
  416515:	dec    edi
  416516:	inc    ebp
  416517:	mov    DWORD PTR [esi],ecx
  416519:	adc    ebx,DWORD PTR [edi+0x57]
  41651c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41651d:	sti    
  41651e:	xlat   BYTE PTR ds:[ebx]
  41651f:	in     eax,0x99
  416521:	aad    0x5b
  416523:	mov    edx,0x86a94602
  416528:	mov    eax,gs
  41652a:	mov    cl,0x26
  41652c:	and    DWORD PTR [esi],ecx
  41652e:	push   esp
  41652f:	(bad)  
  416530:	stc    
  416531:	cs cmp bl,dl
  416534:	push   ds
  416535:	pop    esi
  416536:	fisubr WORD PTR [esi]
  416538:	bound  eax,QWORD PTR [ecx+0x3a3085fa]
  41653e:	loop   0x41650e
  416540:	sbb    eax,0xc9665ea7
  416545:	xchg   ebx,eax
  416546:	dec    eax
  416547:	imul   ebp,DWORD PTR [edi+ebp*8-0x70],0x93b879ee
  41654f:	(bad)  
  416550:	push   esi
  416551:	sub    esp,ebp
  416553:	stos   DWORD PTR es:[edi],eax
  416554:	pop    ebp
  416555:	(bad)  
  416556:	mov    esi,0x7529fb02
  41655b:	xor    ebp,ebp
  41655d:	test   eax,0x5142af14
  416562:	or     al,0x58
  416564:	jno    0x4165aa
  416566:	out    dx,al
  416567:	les    ecx,FWORD PTR [ebp+0x35]
  41656a:	mov    edi,DWORD PTR [edi+ecx*2-0x39]
  41656e:	ret    0x2e4f
  416571:	mov    BYTE PTR [ebp-0xd],ah
  416574:	dec    esi
  416575:	ror    al,1
  416577:	and    al,0xe7
  416579:	sar    DWORD PTR [edi-0x7c],0x28
  41657d:	cmp    al,0x4c
  41657f:	cdq    
  416580:	in     al,0x25
  416582:	and    BYTE PTR [edx-0x3f],bh
  416585:	leave  
  416586:	or     bh,BYTE PTR [ecx]
  416588:	jae    0x416609
  41658a:	mov    al,0xff
  41658c:	jge    0x416568
  41658e:	pop    ds
  41658f:	ins    DWORD PTR es:[edi],dx
  416590:	cld    
  416591:	mov    bl,0xae
  416593:	cmp    DWORD PTR [edx+0x4c8bf673],edx
  416599:	das    
  41659a:	ja     0x4165ba
  41659c:	imul   edi,DWORD PTR [eax],0x84b5b188
  4165a2:	push   ebx
  4165a3:	and    BYTE PTR ds:0x34464cf8,ch
  4165a9:	sbb    DWORD PTR [ecx+0x66],edi
  4165ac:	outs   dx,DWORD PTR ds:[esi]
  4165ad:	into   
  4165ae:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4165af:	inc    BYTE PTR ds:0xe25c7cbd
  4165b5:	mov    ds:0x7a264f7,al
  4165ba:	cmp    al,0x31
  4165bc:	arpl   WORD PTR [edi-0x6],bp
  4165bf:	dec    eax
  4165c0:	popa   
  4165c1:	ret    
  4165c2:	jnp    0x416620
  4165c4:	adc    BYTE PTR [edx],dh
  4165c6:	push   edi
  4165c7:	enter  0x133d,0xdd
  4165cb:	add    cl,ch
  4165cd:	xlat   BYTE PTR ds:[ebx]
  4165ce:	adc    eax,0x29a9c33d
  4165d3:	mov    eax,0x818535c7
  4165d8:	mov    DWORD PTR [ecx-0x24],ecx
  4165db:	paddusw mm7,QWORD PTR [eax-0x389f2ce7]
  4165e2:	addr16 in eax,0xe
  4165e5:	pusha  
  4165e6:	repz iret 
  4165e8:	ins    BYTE PTR es:[edi],dx
  4165e9:	push   esp
  4165ea:	iret   
  4165eb:	dec    eax
  4165ec:	sub    al,BYTE PTR [ecx]
  4165ee:	inc    DWORD PTR [edi-0x6af8b44]
  4165f4:	(bad)  
  4165f5:	push   ss
  4165f6:	or     BYTE PTR [esi+ebp*2-0x206c3bc3],0x36
  4165fe:	push   ds
  4165ff:	add    eax,0xe4c1752f
  416604:	cmp    bl,BYTE PTR [eax]
  416606:	mov    ecx,0x2cd10f1c
  41660b:	leave  
  41660c:	das    
  41660d:	cld    
  41660e:	nop
  41660f:	dec    ebp
  416610:	xchg   esi,eax
  416611:	outs   dx,BYTE PTR ds:[esi]
  416612:	mov    edx,DWORD PTR [ecx]
  416614:	or     DWORD PTR [edx-0x1],edi
  416617:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416618:	inc    esi
  416619:	jne    0x416677
  41661b:	pop    eax
  41661c:	push   eax
  41661d:	or     ah,BYTE PTR [ecx+0x3]
  416620:	dec    ebp
  416621:	fmul   DWORD PTR [eax-0xbba74ff]
  416627:	mov    ecx,DWORD PTR [ebp-0x14]
  41662a:	sub    eax,edi
  41662c:	jmp    0x416b1b
  416631:	imul   esi,DWORD PTR [eax],0xbf5bbc13
  416637:	out    dx,eax
  416638:	cmc    
  416639:	pop    edx
  41663a:	rcr    dl,1
  41663c:	pop    ebx
  41663d:	jbe    0x41668c
  41663f:	pop    ecx
  416640:	call   0x42a655
  416645:	rol    BYTE PTR [eax+eax*1],cl
  416648:	add    ch,ch
  41664a:	out    dx,eax
  41664b:	sbb    DWORD PTR [ebx],edx
  41664d:	ins    DWORD PTR es:[edi],dx
  41664e:	inc    esp
  41664f:	jae    0x4165f0
  416651:	jmp    0x416618
  416653:	dec    ecx
  416654:	retf   
  416655:	push   0x36642032
  41665a:	sbb    al,0xb0
  41665c:	xchg   ebx,eax
  41665d:	fiadd  WORD PTR [ebx+0x6d]
  416660:	xchg   DWORD PTR [edi-0x3a],edx
  416663:	push   edi
  416664:	test   eax,0xf6324299
  416669:	loope  0x4165fd
  41666b:	repnz push 0xffffff9f
  41666e:	add    eax,0xb13af704
  416673:	pop    ebx
  416674:	test   BYTE PTR [esp+eax*4],0xe2
  416678:	jecxz  0x41665a
  41667a:	xor    BYTE PTR [eax+0x2d],ah
  41667d:	mov    ebp,0x6cf96965
  416682:	push   0x467e9570
  416687:	loopne 0x41662d
  416689:	loop   0x4166df
  41668b:	sub    DWORD PTR [eax],edx
  41668d:	push   0x3fb6c6c1
  416692:	enter  0x1207,0xe6
  416696:	cld    
  416697:	inc    esi
  416698:	push   eax
  416699:	loope  0x41662d
  41669b:	dec    esp
  41669c:	sub    DWORD PTR [esi+edi*8+0x75],edi
  4166a0:	mov    ah,0xc6
  4166a2:	mov    ah,0xb9
  4166a4:	out    dx,al
  4166a5:	sbb    DWORD PTR [edx+0x3eff9fdc],ebx
  4166ab:	fst    QWORD PTR [esi+0x5e672397]
  4166b1:	int    0x9d
  4166b3:	sti    
  4166b4:	jp     0x4166e8
  4166b6:	hlt    
  4166b7:	retf   0xb3ae
  4166ba:	or     esi,DWORD PTR [ebx-0x5]
  4166bd:	xchg   esp,eax
  4166be:	shl    BYTE PTR [esi],0xdf
  4166c1:	retf   0x45f9
  4166c4:	arpl   WORD PTR [ecx-0x373a06eb],ax
  4166ca:	repz pop edx
  4166cc:	mov    dl,0xe
  4166ce:	sub    eax,0x2d07647f
  4166d3:	jns    0x41673c
  4166d5:	jl     0x4166b2
  4166d7:	aad    0x1e
  4166d9:	test   DWORD PTR [ebp+0x49fc6d0],0x6c1e28d3
  4166e3:	lds    ebx,FWORD PTR [ecx]
  4166e5:	pop    esi
  4166e6:	ret    0x6026
  4166e9:	mov    bh,0xfb
  4166eb:	ror    BYTE PTR [ecx+0x79],1
  4166ee:	pop    ebp
  4166ef:	bound  esi,QWORD PTR [esi+0x6e49f839]
  4166f5:	adc    DWORD PTR [edi],edi
  4166f7:	leave  
  4166f8:	or     ebx,ebx
  4166fa:	pop    esp
  4166fb:	mov    cl,0x89
  4166fd:	mov    ch,0x82
  4166ff:	fadd   DWORD PTR [ecx+0x59]
  416702:	xor    al,ch
  416704:	lock fwait
  416706:	imul   ebp,esp,0xfb5c3546
  41670c:	and    edx,ebp
  41670e:	jl     0x416731
  416710:	jmp    0x416762
  416712:	and    DWORD PTR [ecx],0xffffff84
  416715:	aas    
  416716:	mov    al,0x38
  416718:	(bad)  
  416719:	jb     0x4166eb
  41671b:	sub    DWORD PTR [edi+0x14],esp
  41671e:	into   
  41671f:	push   es
  416720:	mov    ecx,0xba1ba19
  416725:	add    BYTE PTR [ebx+0x2f],bh
  416728:	mov    ecx,0xc844a37
  41672d:	cdq    
  41672e:	mov    ah,0x7c
  416730:	inc    esi
  416731:	stos   DWORD PTR es:[edi],eax
  416732:	inc    edi
  416733:	push   ebp
  416734:	(bad)  
  416735:	mov    bl,0x39
  416737:	sbb    ebx,edi
  416739:	(bad)  
  41673a:	scas   eax,DWORD PTR es:[edi]
  41673b:	fcom   QWORD PTR [edi]
  41673d:	scas   eax,DWORD PTR es:[edi]
  41673e:	jae    0x416710
  416740:	jl     0x41674e
  416742:	aas    
  416743:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416744:	mov    ah,0x80
  416746:	push   es
  416747:	dec    eax
  416748:	call   0x829c282b
  41674d:	pop    ecx
  41674e:	inc    ecx
  41674f:	stos   DWORD PTR es:[edi],eax
  416750:	idiv   DWORD PTR [eax+0x6f46871d]
  416756:	in     eax,dx
  416757:	sub    al,0x77
  416759:	jp     0x41671d
  41675b:	fld    st(5)
  41675d:	int    0x6f
  41675f:	fdiv   DWORD PTR [eax+0x3a]
  416762:	or     eax,0xffc34de9
  416767:	mov    ds:0xa97cb8ec,al
  41676c:	pop    ds
  41676d:	test   DWORD PTR [esi+ebp*1-0x49360022],eax
  416774:	push   edx
  416775:	xchg   edx,eax
  416776:	or     bh,cl
  416778:	or     bh,bl
  41677a:	cmp    edx,ebp
  41677c:	les    eax,FWORD PTR [ebp-0x5cd1b4bb]
  416782:	sub    bh,ch
  416784:	repz out dx,eax
  416786:	xor    cl,al
  416788:	inc    edx
  416789:	shl    BYTE PTR [ebx-0x5bb3c782],cl
  41678f:	into   
  416790:	dec    ebp
  416791:	xor    cl,cl
  416793:	sub    eax,edi
  416795:	push   esi
  416796:	pop    ss
  416797:	add    eax,0x3d608d87
  41679c:	leave  
  41679d:	xor    al,0x97
  41679f:	mov    edi,0x3c6f5167
  4167a4:	push   ecx
  4167a5:	adc    esi,DWORD PTR [ebx+0x5]
  4167a8:	stc    
  4167a9:	call   0xbf80:0x97679e81
  4167b0:	xchg   edx,eax
  4167b1:	sub    eax,0xf113a76d
  4167b6:	xor    eax,0x2a327758
  4167bb:	mov    al,0x1e
  4167bd:	and    DWORD PTR [ebp+0x4cbd4c0c],eax
  4167c3:	pop    ss
  4167c4:	jge    0x4167fb
  4167c6:	ror    BYTE PTR ds:0x32f3f6aa,cl
  4167cc:	into   
  4167cd:	fimul  DWORD PTR [ebx+0x6fcb18e3]
  4167d3:	repnz or BYTE PTR [ecx+0x3727408c],bh
  4167da:	or     eax,DWORD PTR [esi]
  4167dc:	pop    eax
  4167dd:	adc    DWORD PTR [ecx-0x524894e7],edi
  4167e3:	cmp    eax,0x9e0ee7f
  4167e8:	rcl    DWORD PTR [esi+0x3d],cl
  4167eb:	mov    ebx,0x6a97c105
  4167f0:	dec    esp
  4167f1:	mov    dh,0xe5
  4167f3:	mov    dh,0x4d
  4167f5:	loopne 0x416838
  4167f7:	jp     0x4167b0
  4167f9:	paddsw mm4,QWORD PTR [edi-0xcb02ad8]
  416800:	pop    esp
  416801:	ds in  al,dx
  416803:	sbb    DWORD PTR [esi+0x3b598bd9],eax
  416809:	sahf   
  41680a:	or     DWORD PTR [edi+0x7c],esp
  41680d:	xchg   ebp,eax
  41680e:	mov    ah,0x2c
  416810:	ds js  0x4167ac
  416813:	jne    0x416826
  416815:	imul   ecx,DWORD PTR [ecx],0xe
  416818:	bnd jmp 0x40b0713
  41681e:	jg     0x416843
  416820:	mov    al,ds:0x84649c9e
  416825:	scas   al,BYTE PTR es:[edi]
  416826:	push   ebp
  416827:	push   esp
  416828:	lock in al,0xc4
  41682b:	dec    esp
  41682c:	inc    eax
  41682d:	cmp    al,0x19
  41682f:	cwde   
  416830:	sub    al,0xa4
  416832:	pusha  
  416833:	cmp    esi,edx
  416835:	(bad)  
  416836:	dec    esi
  416837:	mov    edx,0x4317dcf4
  41683c:	adc    al,0xc1
  41683e:	(bad)  
  416840:	inc    ebx
  416841:	and    DWORD PTR [edx+0x7ab0f5c8],0x32ea9d68
  41684b:	cwde   
  41684c:	(bad)  
  41684d:	aaa    
  41684e:	add    bh,BYTE PTR [eax]
  416850:	test   DWORD PTR [esi+ebx*8-0x23],edi
  416854:	adc    BYTE PTR [ecx+0x4e],dl
  416857:	lock and al,0x84
  41685a:	sar    bl,1
  41685c:	xor    eax,0xa8540631
  416861:	mov    ds:0xa84728c1,eax
  416866:	mov    ecx,0x3b3ab09e
  41686b:	jae    0x41680e
  41686d:	pusha  
  41686e:	mov    al,0xcc
  416870:	push   0xffffffb1
  416872:	and    eax,0x7dbd7d5f
  416877:	sub    dh,BYTE PTR [edi+0x6b434a67]
  41687d:	pop    ss
  41687e:	and    eax,DWORD PTR [ebp+0x702615ee]
  416884:	sti    
  416885:	xor    al,BYTE PTR [esi-0x4023725b]
  41688b:	rcl    BYTE PTR [ebp+0x4],0xd
  41688f:	xchg   dh,cl
  416891:	fldenv [edx-0x6331c048]
  416897:	in     eax,dx
  416898:	jne    0x416822
  41689a:	fwait
  41689b:	cmp    esp,edx
  41689d:	pop    ebp
  41689e:	into   
  41689f:	inc    ecx
  4168a0:	aam    0x4c
  4168a2:	xchg   ecx,eax
  4168a3:	inc    ebx
  4168a4:	je     0x416866
  4168a6:	inc    esp
  4168a7:	cmp    BYTE PTR [ebp+0x14927a9e],bl
  4168ad:	cwde   
  4168ae:	pop    ds
  4168af:	pop    ebx
  4168b0:	sbb    esp,DWORD PTR [ebx+0x7e]
  4168b3:	jecxz  0x416863
  4168b5:	int    0x83
  4168b7:	xor    BYTE PTR [eax],0x74
  4168ba:	inc    ebp
  4168bb:	scas   al,BYTE PTR es:[edi]
  4168bc:	sub    DWORD PTR [esi+0x7e99e92a],eax
  4168c2:	addr16 or dh,al
  4168c5:	cmp    DWORD PTR [eax+0x58],edx
  4168c8:	dec    ebp
  4168c9:	sbb    ebx,ebx
  4168cb:	mov    bl,0x3
  4168cd:	inc    ecx
  4168ce:	mov    edi,0xc8b7b485
  4168d3:	cwde   
  4168d4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4168d5:	jbe    0x41688a
  4168d7:	adc    ch,BYTE PTR [esi+eiz*8]
  4168da:	push   edi
  4168db:	push   ss
  4168dc:	test   DWORD PTR [ecx-0x56],esp
  4168df:	add    ebp,DWORD PTR [edi-0x46111d2c]
  4168e5:	or     DWORD PTR [eax-0x7dc452c9],0x3b8b279b
  4168ef:	(bad)  
  4168f1:	xlat   BYTE PTR ds:[ebx]
  4168f2:	sbb    ecx,DWORD PTR [edx]
  4168f4:	mov    ah,0x4b
  4168f6:	jnp    0x4168cc
  4168f8:	inc    esp
  4168f9:	mov    ds,WORD PTR [edx+edi*1-0x47f09c5d]
  416900:	(bad)
  416904:	dec    esp
  416905:	dec    esp
  416906:	jbe    0x41697b
  416908:	jo     0x416931
  41690a:	ds jp  0x4168ff
  41690d:	jne    0x416962
  41690f:	lea    esp,[eax]
  416911:	iret   
  416912:	push   cs
  416913:	pop    ecx
  416914:	adc    cl,BYTE PTR [edx+0x702ca20b]
  41691a:	ror    ecx,0xb3
  41691d:	mov    ch,0xc7
  41691f:	fistp  DWORD PTR fs:[edx-0x24]
  416923:	std    
  416924:	stos   DWORD PTR es:[edi],eax
  416925:	inc    esp
  416926:	mov    cl,BYTE PTR [ebx]
  416928:	or     eax,0x81b9f7b7
  41692d:	cdq    
  41692e:	push   0x42
  416930:	je     0x4168d1
  416932:	xor    BYTE PTR [esi],0xd9
  416935:	sub    ah,BYTE PTR [esi-0x4a]
  416938:	enter  0xbba,0xc3
  41693c:	sar    DWORD PTR ds:0x6843bb4e,1
  416942:	jmp    0x416970
  416944:	(bad)  
  416945:	sbb    eax,ebx
  416947:	push   eax
  416948:	sbb    al,al
  41694a:	iret   
  41694b:	or     esi,0x2c
  41694e:	add    dh,dl
  416950:	js     0x41695e
  416952:	pop    eax
  416953:	inc    edx
  416954:	inc    esp
  416955:	adc    DWORD PTR [ebp-0x5c],ebx
  416958:	pop    esp
  416959:	pop    esi
  41695a:	ret    
  41695b:	stc    
  41695c:	adc    eax,DWORD PTR [esp+esi*1]
  41695f:	(bad)  
  416960:	enter  0xcb98,0xc9
  416964:	and    eax,0xd7398ce4
  416969:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41696a:	pusha  
  41696b:	outs   dx,BYTE PTR ds:[esi]
  41696c:	in     eax,0xb1
  41696e:	pop    ss
  41696f:	sbb    BYTE PTR ds:0x168a74dc,0xa4
  416976:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416977:	adc    bl,BYTE PTR [ecx]
  416979:	inc    esp
  41697a:	mov    ebp,0x25e58cd1
  41697f:	or     eax,0xf70cac60
  416984:	rol    edx,1
  416986:	std    
  416987:	scas   al,BYTE PTR es:[edi]
  416988:	repnz cmp bl,ch
  41698b:	(bad)  
  41698c:	sbb    dl,al
  41698e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41698f:	xlat   BYTE PTR ds:[ebx]
  416990:	pusha  
  416991:	push   edi
  416992:	xchg   ebx,eax
  416993:	pop    esi
  416994:	sbb    al,0x29
  416996:	(bad)  
  416997:	cli    
  416998:	stc    
  416999:	mov    cl,0xfe
  41699b:	mov    edx,0x243d8aa1
  4169a0:	sbb    eax,DWORD PTR [esi-0x7c]
  4169a3:	sahf   
  4169a4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4169a5:	mov    esp,0x56aff54f
  4169aa:	mov    ch,0xfd
  4169ac:	sub    al,0xe4
  4169ae:	int3   
  4169af:	xor    dh,BYTE PTR [esi+0x5bd9cb88]
  4169b5:	test   esp,eax
  4169b7:	test   esi,ebp
  4169b9:	stc    
  4169ba:	and    ebp,edi
  4169bc:	add    al,0x5b
  4169be:	inc    edx
  4169bf:	leave  
  4169c0:	adc    ch,BYTE PTR [ebx]
  4169c2:	pop    ebx
  4169c3:	or     ecx,DWORD PTR [eax]
  4169c5:	cld    
  4169c6:	jne    0x416982
  4169c8:	lods   eax,DWORD PTR ds:[esi]
  4169c9:	or     ebx,0xffffffb1
  4169cc:	xlat   BYTE PTR ds:[ebx]
  4169cd:	mov    esp,0xbbcd2c09
  4169d2:	jg     0x4169ee
  4169d4:	jnp    0x416a07
  4169d6:	retf   
  4169d7:	cmp    bh,BYTE PTR ds:0x870fef27
  4169dd:	xor    ebx,DWORD PTR [edi-0x44]
  4169e0:	lods   eax,DWORD PTR ds:[esi]
  4169e1:	jnp    0x416965
  4169e3:	or     eax,0x66cfdfbe
  4169e8:	imul   eax,DWORD PTR [ecx+0x17],0x9
  4169ec:	xchg   esp,eax
  4169ed:	adc    al,0x91
  4169ef:	cmp    DWORD PTR [ebp+esi*1-0x27],esi
  4169f3:	call   0x947055f1
  4169f8:	sbb    edx,DWORD PTR [eax-0x5ea59019]
  4169fe:	rcl    DWORD PTR [edx+0x36d97e19],0x9b
  416a05:	pop    edx
  416a06:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416a07:	xchg   edi,eax
  416a08:	icebp  
  416a09:	xchg   ebp,eax
  416a0a:	sub    al,0xd6
  416a0c:	mov    al,ds:0xc83ed176
  416a11:	mov    ebp,esp
  416a13:	jle    0x4169d5
  416a15:	or     ecx,DWORD PTR fs:[esi-0x35e2beba]
  416a1c:	shl    DWORD PTR [ebp-0x2c25d4c0],0xc7
  416a23:	push   ebp
  416a24:	mov    ecx,0xdb945fd8
  416a29:	jnp    0x416a17
  416a2b:	lds    edx,FWORD PTR ds:0x166d478b
  416a31:	add    al,0xda
  416a33:	cmp    edi,DWORD PTR [eax+0x1d]
  416a36:	mov    al,ds:0x74c9041d
  416a3b:	pushf  
  416a3c:	stos   BYTE PTR es:[di],al
  416a3e:	dec    esp
  416a3f:	add    eax,DWORD PTR [esi]
  416a41:	inc    esp
  416a42:	dec    esp
  416a43:	call   0xce637b90
  416a48:	add    DWORD PTR [ecx],edi
  416a4a:	cmp    BYTE PTR [edx+0x23],ch
  416a4d:	inc    ebx
  416a4e:	(bad)  
  416a4f:	in     al,dx
  416a50:	inc    ecx
  416a51:	mov    bl,0x9c
  416a53:	(bad)  
  416a54:	clc    
  416a55:	aad    0xc7
  416a57:	inc    eax
  416a58:	add    al,0xa7
  416a5a:	lods   al,BYTE PTR ds:[esi]
  416a5b:	xchg   ebx,eax
  416a5c:	loope  0x416a3f
  416a5e:	pop    ecx
  416a5f:	enter  0x14e5,0x29
  416a63:	retf   0xb880
  416a66:	and    BYTE PTR [ebp+eax*1-0x73e1ccd5],cl
  416a6d:	(bad)  
  416a6e:	addr16 mov edi,0xf72b5797
  416a74:	sbb    ah,BYTE PTR [ecx+0x72]
  416a77:	adc    DWORD PTR [edx+0x6b],ebx
  416a7a:	aad    0x1b
  416a7c:	scas   al,BYTE PTR es:[di]
  416a7e:	dec    ecx
  416a7f:	loopne 0x416a1b
  416a81:	add    dh,ch
  416a83:	cdq    
  416a84:	adc    al,BYTE PTR [edx]
  416a86:	and    al,0x12
  416a88:	fwait
  416a89:	xchg   DWORD PTR [esi-0x780ccb35],ebp
  416a8f:	test   DWORD PTR [ebx+eiz*4],ebp
  416a92:	into   
  416a93:	pushf  
  416a94:	push   edx
  416a95:	(bad)  
  416a96:	imul   BYTE PTR [ebx-0x1d]
  416a99:	xchg   ebp,eax
  416a9a:	xor    BYTE PTR [eax+ecx*8-0x7803d0e1],cl
  416aa1:	add    dl,bl
  416aa3:	jp     0x416b14
  416aa5:	push   edx
  416aa6:	mov    edi,0xf291cf07
  416aab:	loope  0x416a62
  416aad:	cwde   
  416aae:	ror    BYTE PTR [ebp+0x2fe2c082],1
  416ab4:	push   esi
  416ab5:	and    eax,0x68a3543
  416aba:	sahf   
  416abb:	rcl    eax,1
  416abd:	int    0x5f
  416abf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416ac0:	cmp    BYTE PTR [edi],dl
  416ac2:	shl    al,0x56
  416ac5:	loop   0x416a94
  416ac7:	and    esi,DWORD PTR [eax+0x1449e730]
  416acd:	je     0x416ace
  416acf:	out    dx,eax
  416ad0:	xor    ch,0x2d
  416ad3:	inc    esp
  416ad4:	add    DWORD PTR [esi],ecx
  416ad6:	push   eax
  416ad7:	mov    edi,0xc8909e69
  416adc:	or     al,BYTE PTR [ebp-0x57]
  416adf:	xor    DWORD PTR [esi-0x48],eax
  416ae2:	enter  0x8579,0xb8
  416ae6:	or     ch,BYTE PTR [edi]
  416ae8:	or     eax,0x6a217beb
  416aed:	mov    edi,0xe20e4711
  416af2:	sub    ebx,ebp
  416af4:	(bad)  
  416af5:	mov    edx,0x96d850b2
  416afa:	sbb    al,0xbb
  416afc:	jl     0x416b54
  416afe:	sbb    eax,esi
  416b00:	push   0xf
  416b02:	mov    eax,0x9ab17fd8
  416b07:	inc    eax
  416b08:	sub    esp,DWORD PTR [ecx+0x1cbefb8c]
  416b0e:	jbe    0x416aa7
  416b10:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416b11:	das    
  416b12:	lahf   
  416b13:	outs   dx,DWORD PTR ds:[esi]
  416b14:	fwait
  416b15:	add    BYTE PTR [edi+0xa08d666],al
  416b1b:	xor    eax,esi
  416b1d:	cmp    eax,ecx
  416b1f:	jne    0x417a19
  416b25:	mov    eax,DWORD PTR [ebp-0x18]
  416b28:	mov    ecx,DWORD PTR [ebp-0x10]
  416b2b:	xor    eax,esi
  416b2d:	xor    ecx,esi
  416b2f:	sub    eax,ecx
  416b31:	jmp    0x417020
  416b36:	fcom   st(2)
  416b38:	aad    0x65
  416b3a:	fbld   TBYTE PTR [edi-0x8]
  416b3d:	call   FWORD PTR [edx+0x5e]
  416b40:	idiv   DWORD PTR cs:[ecx-0x3c]
  416b44:	aam    0x50
  416b46:	loop   0x416b8c
  416b48:	add    DWORD PTR [eax],eax
  416b4a:	rol    BYTE PTR [eax+eax*1],cl
  416b4d:	add    BYTE PTR [eax-0x47],ah
  416b50:	in     al,dx
  416b51:	ret    
  416b52:	pop    edx
  416b53:	sbb    ecx,DWORD PTR [edi-0x6d473d8]
  416b59:	ds jecxz 0x416af3
  416b5c:	popf   
  416b5d:	fwait
  416b5e:	std    
  416b5f:	sub    esp,ebp
  416b61:	jns    0x416b68
  416b63:	popf   
  416b64:	inc    esp
  416b65:	rcr    esp,0xaf
  416b68:	sbb    DWORD PTR [esi+edi*2],0x40
  416b6c:	inc    edi
  416b6d:	dec    eax
  416b6e:	dec    eax
  416b6f:	cmp    cl,dh
  416b71:	aam    0x4
  416b73:	mov    ecx,DWORD PTR [ebx]
  416b75:	cmp    eax,0x732bf31d
  416b7a:	cmp    dh,al
  416b7c:	mov    ch,0x2c
  416b7e:	xchg   edx,eax
  416b7f:	retf   
  416b80:	std    
  416b81:	xchg   edi,esi
  416b83:	in     al,0xd3
  416b85:	inc    ecx
  416b86:	aam    0xc2
  416b88:	inc    ebp
  416b89:	jmp    0x7beb:0xec308c0b
  416b90:	mov    ch,0xea
  416b92:	(bad)  
  416b93:	mov    al,ds:0xfd07f5aa
  416b98:	std    
  416b99:	inc    edi
  416b9a:	pushf  
  416b9b:	sub    BYTE PTR [ebp-0x55],ah
  416b9e:	dec    esp
  416b9f:	add    BYTE PTR [edi],cl
  416ba1:	pop    ds
  416ba2:	jae    0x416b46
  416ba4:	or     al,0xd4
  416ba6:	xor    DWORD PTR [esi+0xbd9edd9],edi
  416bac:	out    0xf1,eax
  416bae:	not    DWORD PTR [eax-0x75]
  416bb1:	retf   0xfc45
  416bb4:	call   0x807a:0x46c4a42d
  416bbb:	mov    esi,0x3380c8a3
  416bc0:	and    DWORD PTR [esi],ebx
  416bc2:	adc    BYTE PTR [eax],0xaf
  416bc5:	xchg   al,al
  416bc7:	jo     0x416bfd
  416bc9:	fidivr WORD PTR [ecx]
  416bcb:	(bad)  
  416bcc:	cld    
  416bcd:	sbb    esp,DWORD PTR ds:0xaf3e56f
  416bd3:	mov    ds:0x36833f63,al
  416bd8:	dec    eax
  416bd9:	sbb    dh,BYTE PTR [ebp+eiz*4-0x1417b36a]
  416be0:	dec    BYTE PTR [ebp+edx*8+0x4387fcd]
  416be7:	enter  0xe5a9,0x93
  416beb:	nop
  416bec:	push   es
  416bed:	dec    edi
  416bee:	retf   0x5244
  416bf1:	fiadd  DWORD PTR [esi-0x5e]
  416bf4:	scas   eax,DWORD PTR es:[edi]
  416bf5:	sub    dl,BYTE PTR [ecx+0x28cdaa24]
  416bfb:	add    al,0x44
  416bfd:	fnstsw WORD PTR [ebp+0x44]
  416c00:	adc    eax,0x263c2e21
  416c05:	push   0x1968aa35
  416c0a:	adc    DWORD PTR [eax-0x1da29b3],edi
  416c10:	jp     0x416b98
  416c12:	lods   eax,DWORD PTR ds:[esi]
  416c13:	xchg   edx,eax
  416c14:	adc    eax,0xeba05e25
  416c19:	adc    BYTE PTR [ecx+0x3c02ca0c],ch
  416c1f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416c20:	xchg   DWORD PTR [ebp+0xd],ebx
  416c23:	das    
  416c24:	les    ebx,FWORD PTR [edi-0x3fa62ce2]
  416c2a:	cmp    al,0x44
  416c2c:	xchg   ecx,eax
  416c2d:	pop    ebp
  416c2e:	daa    
  416c2f:	mov    BYTE PTR [edx+0x65],cl
  416c32:	retf   0xa605
  416c35:	enter  0x215c,0xea
  416c39:	jb     0x416cb7
  416c3b:	stc    
  416c3c:	xchg   dl,cl
  416c3e:	out    0xa9,eax
  416c40:	adc    DWORD PTR [ebp+edx*4-0x6e82c6ff],ebp
  416c47:	add    dh,BYTE PTR [edi-0x4f]
  416c4a:	adc    DWORD PTR [ecx],ecx
  416c4c:	xchg   ecx,eax
  416c4d:	gs stos DWORD PTR es:[edi],eax
  416c4f:	aaa    
  416c50:	data16 xor dl,BYTE PTR [ebp-0x45]
  416c54:	pop    esp
  416c55:	lock out 0x75,al
  416c58:	fisttp DWORD PTR [esp+eax*2+0x32]
  416c5c:	and    eax,0xf07bea1e
  416c61:	sub    DWORD PTR ds:0xe6fed394,ebx
  416c67:	popf   
  416c68:	adc    cl,al
  416c6a:	or     edi,DWORD PTR [edx-0x66]
  416c6d:	inc    ecx
  416c6e:	mov    al,ds:0xb710b661
  416c73:	clc    
  416c74:	mov    bh,0xbd
  416c76:	mov    edx,0xcfaed1aa
  416c7b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416c7c:	pop    ecx
  416c7d:	inc    ebx
  416c7e:	pop    esi
  416c7f:	adc    BYTE PTR [ebx+0xe],bh
  416c82:	add    ah,BYTE PTR [eax]
  416c84:	cmc    
  416c85:	pop    ds
  416c86:	stos   DWORD PTR es:[edi],eax
  416c87:	jecxz  0x416c4a
  416c89:	stos   BYTE PTR es:[edi],al
  416c8a:	jle    0x416cee
  416c8c:	xor    DWORD PTR [ecx-0x67],ebp
  416c8f:	retf   0x8390
  416c92:	sahf   
  416c93:	call   FWORD PTR [esi+0x5ba90ef7]
  416c99:	or     dl,BYTE PTR [ebx+0x7c]
  416c9c:	stos   DWORD PTR es:[edi],eax
  416c9d:	(bad)  
  416c9f:	pop    edi
  416ca0:	add    al,0xa3
  416ca2:	out    dx,eax
  416ca3:	sti    
  416ca4:	hlt    
  416ca5:	ss int3 
  416ca7:	loope  0x416d0a
  416ca9:	mov    WORD PTR [esi-0x44],gs
  416cac:	jg     0x416ccd
  416cae:	hlt    
  416caf:	daa    
  416cb0:	xchg   ebp,eax
  416cb1:	push   es
  416cb2:	(bad)
  416cb6:	icebp  
  416cb7:	sbb    BYTE PTR [ecx],ch
  416cb9:	cld    
  416cba:	pop    es
  416cbb:	sub    eax,0x294e21e4
  416cc0:	sub    eax,0xb1a542dd
  416cc5:	push   ss
  416cc6:	loope  0x416cb8
  416cc8:	iret   
  416cc9:	add    BYTE PTR [ecx],dh
  416ccb:	mov    ch,0xd2
  416ccd:	lahf   
  416cce:	mov    ds:0x4ab15eb0,al
  416cd3:	jmp    0x7780115d
  416cd8:	jmp    0x38d1:0x42ccc905
  416cdf:	xor    DWORD PTR [edi+0x64ff2a9f],ebx
  416ce5:	leave  
  416ce6:	xor    al,BYTE PTR [ebx-0x3]
  416ce9:	add    BYTE PTR [ebx+0x56c0d942],0xc8
  416cf0:	enter  0x8c9e,0xcd
  416cf4:	loop   0x416ced
  416cf6:	or     esi,DWORD PTR [eax-0x6a]
  416cf9:	inc    ebp
  416cfa:	sbb    eax,0x46e0cd8b
  416cff:	xchg   edx,eax
  416d00:	hlt    
  416d01:	push   edx
  416d02:	and    DWORD PTR [ecx-0x2f],0xffffff98
  416d06:	mov    esi,0x15a15806
  416d0b:	in     eax,0xaa
  416d0d:	mov    ds:0x4a8a303d,al
  416d12:	stc    
  416d13:	push   ebx
  416d14:	shr    BYTE PTR [edi+0x15],0xda
  416d18:	ja     0x416d55
  416d1a:	push   eax
  416d1b:	push   es
  416d1c:	rcl    DWORD PTR [ecx-0x2cdaec38],0x9d
  416d23:	sub    eax,0xb2df0aff
  416d28:	push   ecx
  416d29:	jb     0x416cad
  416d2b:	lods   al,BYTE PTR ds:[esi]
  416d2c:	cmc    
  416d2d:	cld    
  416d2e:	dec    ebx
  416d2f:	and    al,0xaf
  416d31:	rol    DWORD PTR [eax+0x4d708e6],0xca
  416d38:	inc    ebp
  416d39:	(bad)  
  416d3b:	dec    edi
  416d3c:	adc    bh,ch
  416d3e:	xchg   BYTE PTR [ecx],cl
  416d40:	shr    DWORD PTR [ecx],0x82
  416d43:	fdiv   st(1),st
  416d45:	and    cl,BYTE PTR [esi-0x50f38599]
  416d4b:	mov    bh,BYTE PTR [esi+ebx*4+0x7d]
  416d4f:	sub    eax,0x1caae8d1
  416d54:	adc    dl,BYTE PTR [ebp+0x1]
  416d57:	addr16 adc eax,0x88fe2135
  416d5d:	fs xchg ebx,eax
  416d5f:	and    DWORD PTR [esi+0x294edf01],ebx
  416d65:	and    al,0xc3
  416d67:	dec    eax
  416d68:	lods   al,BYTE PTR ds:[esi]
  416d69:	(bad)  
  416d6a:	pop    ebp
  416d6b:	rcr    DWORD PTR [edi+edx*1-0xd10d59c],cl
  416d72:	inc    ecx
  416d73:	cdq    
  416d74:	pushf  
  416d75:	sub    DWORD PTR [eax+0x5e],edx
  416d78:	daa    
  416d79:	es clc 
  416d7b:	pop    ecx
  416d7c:	adc    eax,0x33ae533b
  416d81:	jg     0x416dab
  416d83:	clc    
  416d84:	in     eax,0xc0
  416d86:	fdivp  st(2),st
  416d88:	mov    ch,0x57
  416d8a:	and    dh,BYTE PTR [ebx+0x29a362c9]
  416d90:	xor    BYTE PTR [esp-0x79],0x2b
  416d95:	cmp    ebp,ebx
  416d97:	jbe    0x416dd9
  416d99:	lods   eax,DWORD PTR ds:[esi]
  416d9a:	je     0x416d53
  416d9c:	add    BYTE PTR [ebx+0x52],cl
  416d9f:	es push ebx
  416da1:	xchg   edi,eax
  416da2:	push   eax
  416da3:	and    BYTE PTR [esi],dl
  416da5:	std    
  416da6:	out    0x40,al
  416da8:	and    bh,BYTE PTR [ecx+0x60]
  416dab:	ror    BYTE PTR [esi],cl
  416dad:	xor    BYTE PTR [ecx-0x1999e700],al
  416db3:	push   edi
  416db4:	ror    DWORD PTR [edi],cl
  416db6:	scas   eax,DWORD PTR es:[edi]
  416db7:	out    0x61,eax
  416db9:	xchg   esi,eax
  416dba:	add    bh,BYTE PTR [ecx-0x6]
  416dbd:	mov    dh,0xd2
  416dbf:	add    al,0x53
  416dc1:	ja     0x416e00
  416dc3:	sbb    eax,0xa7066335
  416dc8:	cmp    DWORD PTR [ecx-0x13],eax
  416dcb:	inc    ebp
  416dcc:	mov    ch,0xab
  416dce:	lahf   
  416dcf:	dec    eax
  416dd0:	pop    eax
  416dd1:	aad    0x89
  416dd3:	loopne 0x416d84
  416dd5:	push   ebx
  416dd6:	xor    al,0xec
  416dd8:	fcmovbe st,st(2)
  416dda:	ss icebp 
  416ddc:	pop    edi
  416ddd:	in     al,0xf6
  416ddf:	sub    BYTE PTR [esi+ebx*1],al
  416de2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416de3:	xchg   DWORD PTR [edx+0x7b257470],esi
  416de9:	add    eax,0x151f5817
  416dee:	fistp  QWORD PTR [ebx+esi*4+0x78]
  416df2:	jno    0x416e65
  416df4:	or     BYTE PTR [edi+0x7d611],al
  416dfa:	or     DWORD PTR [eax],eax
  416dfc:	leave  
  416dfd:	pop    edi
  416dfe:	mov    ds:0x5c789a0a,al
  416e03:	ins    BYTE PTR es:[edi],dx
  416e04:	hlt    
  416e05:	shl    BYTE PTR [ebx-0x65],1
  416e08:	jl     0x416e53
  416e0a:	jb     0x34542c5e
  416e10:	xor    bh,BYTE PTR [ecx+eax*4]
  416e13:	repz or al,0x28
  416e16:	outs   dx,DWORD PTR ds:[esi]
  416e17:	test   ecx,esp
  416e19:	cwde   
  416e1a:	mov    ds:0xec3a4aba,al
  416e1f:	retf   
  416e20:	adc    al,0x5a
  416e22:	ret    0x4633
  416e25:	xchg   edi,eax
  416e26:	cmp    esi,DWORD PTR [edx-0x5cd6ae73]
  416e2c:	push   ds
  416e2d:	gs xor ch,0xf2
  416e31:	xchg   esp,eax
  416e32:	push   esp
  416e33:	call   0x3a0eff7b
  416e38:	xlat   BYTE PTR ds:[ebx]
  416e39:	xchg   ecx,eax
  416e3a:	mov    bh,0x2a
  416e3c:	jmp    0xed68:0x9d0e17cc
  416e43:	add    bh,BYTE PTR [edx+0x69]
  416e46:	outs   dx,DWORD PTR ds:[esi]
  416e47:	push   ebp
  416e48:	inc    esp
  416e49:	and    edi,esp
  416e4b:	neg    BYTE PTR [edi-0x73]
  416e4e:	xchg   edx,eax
  416e4f:	test   DWORD PTR [edx-0x1],eax
  416e52:	or     al,0xbd
  416e54:	cmp    bh,BYTE PTR [ebp+0x66]
  416e57:	mov    edx,0x65ac93b3
  416e5c:	cmp    dl,BYTE PTR [ecx+0x2d4f3d3]
  416e62:	cmp    ch,BYTE PTR [ecx]
  416e64:	pop    ss
  416e65:	pop    ebp
  416e66:	test   DWORD PTR [eax-0x47c395a0],ebp
  416e6c:	(bad)  [ecx-0x73]
  416e6f:	inc    ebx
  416e71:	pop    ds
  416e72:	dec    ecx
  416e73:	int3   
  416e74:	(bad)  
  416e75:	ins    DWORD PTR es:[edi],dx
  416e76:	cmp    ecx,DWORD PTR [ecx]
  416e78:	aas    
  416e79:	rcl    BYTE PTR [edi-0x73],cl
  416e7c:	rol    BYTE PTR [ecx+eax*2],cl
  416e7f:	pop    ebp
  416e80:	fsub   QWORD PTR [eax+edi*2+0x7e]
  416e84:	dec    eax
  416e85:	inc    ebx
  416e86:	push   esi
  416e87:	call   0xc796:0x542dc954
  416e8e:	icebp  
  416e8f:	retf   
  416e90:	retf   0xed0c
  416e93:	mov    bl,0xbd
  416e95:	mov    edi,0xcf04e78c
  416e9a:	xchg   ebx,eax
  416e9b:	xchg   edi,eax
  416e9c:	mov    esp,0x7fe9eff8
  416ea1:	in     al,dx
  416ea2:	sbb    ah,dh
  416ea4:	das    
  416ea5:	push   eax
  416ea6:	mov    edi,0x35cd1fdc
  416eab:	ja     0x416e97
  416ead:	dec    ebp
  416eae:	mov    DWORD PTR [edi+ebp*4-0x3a],ecx
  416eb2:	popf   
  416eb3:	mov    BYTE PTR [ebp-0x75c132b6],ah
  416eb9:	dec    edi
  416eba:	mov    al,ds:0x92883056
  416ebf:	std    
  416ec0:	xor    eax,0xcadaac35
  416ec5:	jbe    0x416ec0
  416ec7:	push   eax
  416ec8:	loop   0x416f26
  416eca:	cli    
  416ecb:	or     eax,0x98918acb
  416ed0:	mov    esp,0x857f17f9
  416ed5:	mov    eax,0x3fd78950
  416eda:	dec    ebp
  416edb:	sti    
  416edc:	or     al,BYTE PTR [esi+0x16]
  416edf:	and    BYTE PTR ds:0x2bc8d52f,0x7e
  416ee6:	clc    
  416ee7:	adc    BYTE PTR [ecx],al
  416ee9:	mov    bh,0x57
  416eeb:	pop    ds
  416eec:	adc    BYTE PTR [edi+0x5de8440a],bl
  416ef2:	xor    eax,0xb3ab772a
  416ef7:	xchg   edx,eax
  416ef8:	push   esp
  416ef9:	sub    ebx,DWORD PTR ds:0x68e9fee
  416eff:	push   ebx
  416f00:	out    0x41,eax
  416f02:	mov    WORD PTR [ecx],ss
  416f04:	sbb    esi,esp
  416f06:	jl     0x416f5e
  416f08:	inc    eax
  416f09:	pop    edx
  416f0a:	mov    ebx,0xcd074f7
  416f0f:	sub    DWORD PTR [eax+0x7a],ebp
  416f12:	xrelease xchg DWORD PTR [edx+0x9],eax
  416f16:	xchg   edi,eax
  416f17:	addr16 hlt 
  416f19:	jne    0x416ed4
  416f1b:	(bad)  
  416f1c:	nop
  416f1d:	in     al,dx
  416f1e:	inc    ebp
  416f1f:	push   ebp
  416f20:	pushf  
  416f21:	rol    BYTE PTR [edx],cl
  416f23:	or     DWORD PTR [ebp-0x253c56a0],ebp
  416f29:	mov    esi,0xd09a032d
  416f2e:	les    ecx,FWORD PTR ds:[esi+0x40eb9a65]
  416f35:	jno    0x416f78
  416f37:	fimul  DWORD PTR [edi+0x60310eb7]
  416f3d:	stos   BYTE PTR es:[edi],al
  416f3e:	gs mov bl,0x9b
  416f41:	sub    al,bh
  416f43:	les    esi,FWORD PTR [esi-0x31209ea0]
  416f49:	adc    esi,DWORD PTR [eax]
  416f4b:	push   ecx
  416f4c:	sub    DWORD PTR [ebx],edx
  416f4e:	mov    ch,0xc8
  416f50:	addr16 inc eax
  416f52:	jb     0x416f53
  416f54:	mov    ch,0x4e
  416f56:	mov    DWORD PTR [edx+esi*1],edi
  416f59:	or     BYTE PTR ds:[ebp-0x71],cl
  416f5d:	nop
  416f5e:	mov    DWORD PTR [esi+0x66],eax
  416f61:	in     eax,dx
  416f62:	outs   dx,BYTE PTR ds:[esi]
  416f63:	stc    
  416f64:	outs   dx,BYTE PTR ds:[esi]
  416f65:	sahf   
  416f66:	clc    
  416f67:	jl     0x416fbf
  416f69:	retf   
  416f6a:	inc    ebp
  416f6b:	fwait
  416f6c:	aam    0x34
  416f6e:	xor    DWORD PTR [edx+0x56],ecx
  416f71:	or     DWORD PTR [ebx-0x18],ebx
  416f74:	lods   eax,DWORD PTR ds:[esi]
  416f75:	ret    0x52b4
  416f78:	dec    ebp
  416f79:	push   es
  416f7a:	fucomip st,st(6)
  416f7c:	jmp    0xadb6e4c5
  416f81:	dec    esi
  416f82:	or     al,dh
  416f84:	cwde   
  416f85:	ret    
  416f86:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416f87:	pop    ds
  416f88:	mov    ebx,0x36e2aa72
  416f8d:	rcl    BYTE PTR [edx+0x13],0x3d
  416f91:	ins    DWORD PTR es:[edi],dx
  416f92:	lds    eax,FWORD PTR [esi-0x70c0d17]
  416f98:	and    BYTE PTR [edx-0x19556cdd],bl
  416f9e:	dec    esi
  416f9f:	nop
  416fa0:	xor    dl,BYTE PTR [esi]
  416fa2:	push   edi
  416fa3:	stc    
  416fa4:	mov    ds:0x3dde637e,eax
  416fa9:	retf   0x1e05
  416fac:	es call 0x32ab18c2
  416fb2:	xchg   al,dh
  416fb4:	data16 std 
  416fb6:	push   esp
  416fb7:	fsubr  DWORD PTR [ecx-0x13]
  416fba:	icebp  
  416fbb:	loop   0x416f4b
  416fbd:	jno    0x416f9f
  416fbf:	dec    eax
  416fc0:	fcomp  st(1)
  416fc2:	sbb    BYTE PTR [esp+ecx*2+0x6f],al
  416fc6:	in     eax,0x95
  416fc8:	pop    ebp
  416fc9:	add    al,0x3d
  416fcb:	mov    eax,0x282fe02
  416fd0:	push   esp
  416fd1:	sbb    bl,BYTE PTR [edx+0x672bd63a]
  416fd7:	and    ah,BYTE PTR [esi]
  416fd9:	(bad)  
  416fdb:	aas    
  416fdc:	mov    edx,0xc4850ba5
  416fe1:	adc    cl,BYTE PTR [edx]
  416fe3:	xchg   esp,eax
  416fe4:	pop    edi
  416fe5:	jbe    0x416f96
  416fe7:	les    ecx,FWORD PTR [esi+0x76]
  416fea:	adc    eax,0xf9853c12
  416fef:	mov    dh,0xbd
  416ff1:	inc    esi
  416ff2:	sbb    eax,0xb30f4b52
  416ff7:	mov    DWORD PTR [edx],esi
  416ff9:	pop    ecx
  416ffa:	ja     0x417043
  416ffc:	pop    edx
  416ffd:	xor    cl,BYTE PTR [esi-0x19]
  417000:	jg     0x417016
  417002:	or     bl,bl
  417004:	lods   al,BYTE PTR ds:[esi]
  417005:	add    al,0x39
  417007:	nop
  417008:	into   
  417009:	mov    cl,0xc2
  41700b:	ss out dx,eax
  41700d:	cmp    ecx,DWORD PTR [esi]
  41700f:	lock bound edx,QWORD PTR [edx-0x3a]
  417013:	in     al,dx
  417014:	mov    dh,0xc4
  417016:	outs   dx,DWORD PTR ds:[esi]
  417017:	xor    bl,BYTE PTR [eax-0x4f]
  41701a:	ins    BYTE PTR es:[edi],dx
  41701b:	dec    ebp
  41701c:	data16 loope 0x417012
  41701f:	sub    ch,BYTE PTR [ebx]
  417021:	(bad)  
  417022:	xor    eax,esi
  417024:	mov    DWORD PTR [ebp-0x18],eax
  417027:	jmp    0x417516
  41702c:	test   al,0x23
  41702e:	push   ss
  41702f:	or     DWORD PTR [edi+0x26a3bf3d],ebx
  417035:	cld    
  417036:	xor    BYTE PTR [eax-0x74],dl
  417039:	adc    DWORD PTR [edx-0x36],esp
  41703c:	mov    ah,0x49
  41703e:	add    DWORD PTR [eax],eax
  417040:	rol    BYTE PTR [eax+eax*1],cl
  417043:	add    dl,dl
  417045:	jno    0x41700d
  417047:	sbb    eax,0x2eff7988
  41704c:	sbb    esp,DWORD PTR [edx]
  41704e:	(bad)  
  41704f:	mov    esi,0xb65e135
  417054:	pop    eax
  417055:	pop    edx
  417056:	and    eax,0xba75cba7
  41705b:	std    
  41705c:	iret   
  41705d:	dec    ecx
  41705e:	push   cs
  41705f:	push   edx
  417060:	leave  
  417061:	les    edx,FWORD PTR [esi]
  417063:	out    dx,al
  417064:	(bad)  
  417065:	retf   0xc21f
  417068:	addr16 ret 
  41706a:	push   0xc9d5d560
  41706f:	dec    esp
  417070:	cmp    al,bl
  417072:	cmp    al,0x5c
  417074:	pop    eax
  417075:	mov    al,0xfc
  417077:	cmp    bh,0x3e
  41707a:	dec    eax
  41707b:	clc    
  41707c:	and    edi,DWORD PTR [ebp-0x786503a0]
  417082:	adc    DWORD PTR [ecx+eiz*1+0x1f3466bf],esi
  417089:	mov    ecx,0xc259843
  41708e:	sysret 
  417090:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417091:	jmp    0xdcaf:0x3b5ce514
  417098:	arpl   WORD PTR [ebx+0x12],ax
  41709b:	pusha  
  41709c:	or     ch,bh
  41709e:	scas   eax,DWORD PTR es:[edi]
  41709f:	xor    ah,BYTE PTR [eax+0x7334446c]
  4170a5:	mov    ah,0xcf
  4170a7:	adc    BYTE PTR [ebp-0x3df446ad],bh
  4170ad:	push   ebp
  4170ae:	and    al,ch
  4170b0:	push   0x17884642
  4170b5:	sar    ebp,0xfe
  4170b8:	inc    ecx
  4170b9:	neg    ah
  4170bb:	push   eax
  4170bc:	inc    eax
  4170bd:	repz inc edi
  4170bf:	xchg   DWORD PTR [esp+ebp*4+0x28],ecx
  4170c3:	jge    0x417140
  4170c5:	and    bh,BYTE PTR [edx+0x46]
  4170c8:	or     BYTE PTR [edi-0xf],0x21
  4170cc:	loope  0x417072
  4170ce:	push   0x4742a173
  4170d3:	xchg   al,bl
  4170d5:	mov    eax,ds:0xb31da085
  4170da:	mov    bl,0xa
  4170dc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4170dd:	fldenv [ebx-0x2c35fefa]
  4170e3:	pop    ebp
  4170e4:	jl     0x4170f0
  4170e6:	imul   eax,DWORD PTR [eax-0x58],0xfed63857
  4170ed:	iret   
  4170ee:	rol    ebp,0x40
  4170f1:	nop
  4170f2:	jp     0x417094
  4170f4:	iret   
  4170f5:	push   0xffffffff
  4170f7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4170f8:	(bad)  
  4170f9:	pop    ecx
  4170fa:	jecxz  0x417127
  4170fc:	pop    edx
  4170fd:	or     BYTE PTR [ebx],0x6e
  417100:	adc    esi,DWORD PTR [ecx-0x35df2a95]
  417106:	fwait
  417107:	mov    edi,0x70f276cd
  41710c:	not    BYTE PTR [ecx]
  41710e:	call   0xd361:0xbbaaa51b
  417115:	dec    edi
  417116:	and    edi,ecx
  417118:	mov    ebp,0x1ad8e7ca
  41711d:	imul   edi,DWORD PTR [edi+0x4f],0xf9147465
  417124:	in     al,dx
  417125:	ins    BYTE PTR es:[edi],dx
  417126:	add    al,0xeb
  417128:	out    dx,al
  417129:	stos   DWORD PTR es:[edi],eax
  41712a:	adc    al,0x24
  41712c:	fs in  al,dx
  41712e:	retf   0x19ff
  417131:	inc    esp
  417132:	or     BYTE PTR ss:[edx+0x53],dl
  417136:	into   
  417137:	mov    al,ds:0x4b01bc02
  41713c:	dec    esp
  41713d:	and    al,0x3b
  41713f:	(bad)
  417142:	add    BYTE PTR [ecx+0x3e957a07],cl
  417148:	cmp    dh,BYTE PTR [esi]
  41714a:	shl    DWORD PTR [eax-0x326dc7a3],cl
  417150:	test   eax,0xc60e7c65
  417155:	imul   edx,DWORD PTR [esi],0xf13ab67b
  41715b:	mov    ah,0xc5
  41715d:	jns    0x417190
  41715f:	xchg   BYTE PTR [edi+0x11821212],bh
  417165:	add    edi,DWORD PTR [edx]
  417167:	push   ebp
  417168:	mov    al,ds:0x940df9f2
  41716d:	xlat   BYTE PTR ds:[ebx]
  41716e:	scas   eax,DWORD PTR es:[edi]
  41716f:	enter  0x5d86,0x1d
  417173:	mov    esi,ecx
  417175:	and    BYTE PTR [edi],cl
  417177:	fdiv   QWORD PTR [edi-0x2973ec9c]
  41717d:	iretw  
  41717f:	outs   dx,DWORD PTR ds:[esi]
  417180:	mov    esp,0x8190523a
  417185:	pop    ebx
  417186:	retf   0xc24d
  417189:	pop    es
  41718a:	and    eax,0x34145853
  41718f:	xchg   ebp,eax
  417190:	lea    edi,[ebx+0x28148dda]
  417196:	fnstenv [edx]
  417198:	ret    
  417199:	inc    ebp
  41719a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41719b:	icebp  
  41719c:	out    0xe2,eax
  41719e:	or     al,0x18
  4171a0:	sar    ah,1
  4171a2:	shl    ch,cl
  4171a4:	jecxz  0x41721d
  4171a6:	and    BYTE PTR [edx-0x2c1ea93f],cl
  4171ac:	jl     0x41715e
  4171ae:	test   BYTE PTR [esi+edi*2+0x10dd6e94],dh
  4171b5:	or     BYTE PTR [edi-0x3d409275],cl
  4171bb:	cmp    al,0xb0
  4171bd:	cmp    dl,BYTE PTR [edx]
  4171bf:	or     DWORD PTR [eax+ecx*1-0x2],ebx
  4171c3:	leave  
  4171c4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4171c5:	jb     0x4171d0
  4171c7:	std    
  4171c8:	idiv   BYTE PTR [edx+esi*2]
  4171cb:	les    edi,FWORD PTR [eax]
  4171cd:	cmp    al,0xab
  4171cf:	not    DWORD PTR [edi+edi*1]
  4171d2:	imul   edi,DWORD PTR [ebx],0x20f5773
  4171d8:	retf   
  4171d9:	dec    esp
  4171da:	jmp    0x4d066f96
  4171df:	add    dl,cl
  4171e1:	cmp    DWORD PTR [eax+0x2455b708],ebx
  4171e7:	pop    ecx
  4171e8:	push   esi
  4171e9:	push   cs
  4171ea:	and    al,0x6e
  4171ec:	leave  
  4171ed:	inc    esp
  4171ee:	arpl   WORD PTR [esi],dx
  4171f0:	sub    BYTE PTR [ebp-0x4f],bl
  4171f3:	mov    ch,0xc0
  4171f5:	call   0x71a9931e
  4171fa:	leave  
  4171fb:	leave  
  4171fc:	mov    al,0x55
  4171fe:	xchg   edx,eax
  4171ff:	ret    
  417200:	cli    
  417201:	outs   dx,DWORD PTR ds:[esi]
  417202:	out    dx,al
  417203:	or     edx,ebx
  417205:	adc    dl,BYTE PTR [edx-0x2f]
  417208:	xchg   ebp,eax
  417209:	inc    eax
  41720a:	pop    edx
  41720b:	and    ebx,DWORD PTR [ecx-0x2d]
  41720e:	jo     0x417204
  417210:	push   ebx
  417211:	inc    esi
  417212:	pop    ecx
  417213:	inc    edi
  417214:	inc    esi
  417215:	push   ecx
  417216:	repnz dec esp
  417218:	pop    edx
  417219:	xor    bh,BYTE PTR [edi]
  41721b:	mov    ebx,0xe0efc807
  417220:	mov    dl,0x3b
  417222:	test   BYTE PTR [ecx+0x31e3447e],bl
  417228:	js     0x4171ce
  41722a:	mov    edx,DWORD PTR [ecx-0x12011d06]
  417230:	adc    DWORD PTR [esi],ebp
  417232:	sub    ecx,0xffffffec
  417235:	ins    BYTE PTR es:[edi],dx
  417236:	test   al,0x98
  417238:	out    0x7c,eax
  41723a:	push   ecx
  41723b:	sub    ebp,DWORD PTR [edi+ecx*8-0x765b7bd0]
  417242:	mov    DWORD PTR [ecx+0x4b],0x46879e9
  417249:	sahf   
  41724a:	and    ch,bh
  41724c:	imul   eax,DWORD PTR ds:0xb0264da5,0x658d6e29
  417256:	or     DWORD PTR [esi+ebx*8-0x36],ecx
  41725a:	xchg   ebp,eax
  41725b:	push   0x2d018eed
  417260:	hlt    
  417261:	jle    0x4171ea
  417263:	xchg   ecx,eax
  417264:	inc    ebp
  417265:	xor    dh,BYTE PTR [ebx+0x5908a386]
  41726b:	inc    esi
  41726c:	push   0xb57d7a8d
  417271:	outs   dx,DWORD PTR ds:[esi]
  417272:	(bad)  
  417273:	ja     0x417245
  417275:	push   edi
  417276:	sub    BYTE PTR [ebx-0x328443ce],dl
  41727c:	test   al,0x18
  41727e:	mov    al,BYTE PTR [esi-0x2163579a]
  417284:	add    DWORD PTR ds:0x9b5f78e6,edi
  41728a:	aad    0xb7
  41728c:	fldenv [eax-0x58]
  41728f:	xor    BYTE PTR [eax-0x9],0xa8
  417293:	mov    eax,ds:0x73191c44
  417298:	out    0x75,al
  41729a:	aaa    
  41729b:	sbb    al,0xad
  41729d:	lahf   
  41729e:	xchg   BYTE PTR [esi+0x6a],dl
  4172a1:	lea    eax,ds:[esi+0x72]
  4172a5:	pop    eax
  4172a6:	xlat   BYTE PTR ds:[ebx]
  4172a7:	int3   
  4172a8:	or     eax,0x70fb881b
  4172ad:	or     DWORD PTR ds:0x9ae967bf,ebp
  4172b3:	aaa    
  4172b4:	out    dx,eax
  4172b5:	xchg   edx,eax
  4172b6:	fdiv   DWORD PTR [edi+0x4b]
  4172b9:	push   esi
  4172ba:	pop    ss
  4172bb:	call   0x921cebaf
  4172c0:	push   ebx
  4172c1:	inc    ebp
  4172c2:	inc    ecx
  4172c3:	fs nop
  4172c5:	sar    BYTE PTR [esi],0x1d
  4172c8:	sub    eax,0x14cd2d16
  4172cd:	sbb    eax,DWORD PTR [ebp-0x6e]
  4172d0:	pushf  
  4172d1:	test   ebp,ebp
  4172d3:	not    BYTE PTR ds:0xd626542d
  4172d9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4172da:	into   
  4172db:	call   0xa10dee87
  4172e0:	cs inc ebx
  4172e2:	in     eax,dx
  4172e3:	pop    ebx
  4172e4:	popf   
  4172e5:	jnp    0x417309
  4172e7:	dec    edx
  4172e8:	add    ah,BYTE PTR [eax+edx*2]
  4172eb:	xor    ecx,DWORD PTR [ecx+0x21796d2d]
  4172f1:	inc    ebx
  4172f2:	outs   dx,DWORD PTR ds:[esi]
  4172f3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4172f4:	icebp  
  4172f5:	dec    ebp
  4172f6:	ret    
  4172f7:	or     ch,dl
  4172f9:	sbb    DWORD PTR [ebp+0x66c28540],ebp
  4172ff:	jecxz  0x4172e7
  417301:	dec    edi
  417302:	jg     0x41737d
  417304:	or     BYTE PTR [eax+0x2c],ch
  417307:	xchg   ebx,eax
  417308:	daa    
  417309:	push   edx
  41730a:	sub    esp,0xffffffe3
  41730d:	cwde   
  41730e:	pushf  
  41730f:	lea    edx,[ebx+0x7f]
  417312:	mov    edx,0x2c33a5ea
  417317:	dec    edx
  417318:	repnz pop esi
  41731a:	xlat   BYTE PTR ds:[ebx]
  41731b:	js     0x41732e
  41731d:	out    0xeb,al
  41731f:	mov    al,ds:0xe7b788b7
  417324:	and    al,0xe2
  417326:	lds    edx,FWORD PTR [ebp+0x62]
  417329:	cmp    DWORD PTR [edi+ebx*8-0x3756400e],0xffffffaf
  417331:	ins    BYTE PTR es:[edi],dx
  417332:	fld    DWORD PTR [ecx+ebx*2]
  417335:	jae    0x417382
  417337:	and    DWORD PTR [edx+0xc],0xb7224eb1
  41733e:	jmp    0xdd4107cb
  417343:	mov    BYTE PTR [edx],bl
  417345:	mov    ch,0x49
  417347:	rcl    DWORD PTR [edx-0x59e892f],cl
  41734d:	gs adc eax,0x1caf5352
  417353:	xlat   BYTE PTR ds:[ebx]
  417354:	repnz loopne 0x41739b
  417357:	mov    ds:0xa203bf5d,al
  41735c:	push   edx
  41735d:	mulps  xmm7,XMMWORD PTR [esi+0x32]
  417361:	jnp    0x417345
  417363:	inc    ebp
  417364:	in     al,dx
  417365:	add    al,0x9c
  417367:	add    esi,esp
  417369:	lods   al,BYTE PTR ds:[esi]
  41736a:	xlat   BYTE PTR ds:[ebx]
  41736b:	sub    al,0x9d
  41736d:	xor    eax,0xb2b9d753
  417372:	mov    BYTE PTR ds:0x3168263a,bh
  417378:	jnp    0x41731f
  41737a:	fwait
  41737b:	js     0x417349
  41737d:	or     BYTE PTR [ebx-0x61e1dbf7],bl
  417383:	gs push 0x2fdf6b5e
  417389:	jge    0x4173a3
  41738b:	dec    eax
  41738c:	sbb    eax,0x403103c5
  417391:	mov    ch,0x27
  417393:	mov    ds:0xc668f435,eax
  417398:	inc    ecx
  417399:	mov    esp,0x91963b96
  41739e:	pop    esp
  41739f:	imul   edx,DWORD PTR [esi+edi*4+0x53ffab98],0x75
  4173a7:	add    cl,BYTE PTR [edx]
  4173a9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4173aa:	sub    bh,ch
  4173ac:	fbld   TBYTE PTR [ecx+edx*4]
  4173af:	scas   eax,DWORD PTR es:[edi]
  4173b0:	jecxz  0x41735e
  4173b2:	popf   
  4173b3:	mov    dh,0xb0
  4173b5:	pop    ss
  4173b6:	push   cs
  4173b7:	mov    edx,0xd0f2fd31
  4173bc:	add    BYTE PTR [ebx-0x11a9033],0xdb
  4173c3:	js     0x41736a
  4173c5:	pop    esi
  4173c6:	stos   BYTE PTR es:[edi],al
  4173c7:	mov    ebp,0x8a8e66ba
  4173cc:	pusha  
  4173cd:	mov    ecx,0x6a5674ca
  4173d2:	xchg   ecx,eax
  4173d3:	cmp    bh,dl
  4173d5:	popa   
  4173d6:	outs   dx,DWORD PTR ds:[esi]
  4173d7:	sbb    eax,0xdfe47cac
  4173dc:	mov    WORD PTR [esp+ebx*8-0x67],?
  4173e0:	call   DWORD PTR [edx]
  4173e2:	fmulp  st(5),st
  4173e4:	cmp    BYTE PTR [edi-0x3a5bcb7],bl
  4173ea:	xchg   ebx,eax
  4173eb:	inc    edx
  4173ec:	test   bh,dl
  4173ee:	add    DWORD PTR [ecx-0x7e],edi
  4173f1:	je     0x4173d1
  4173f3:	ret    0xb8d4
  4173f6:	in     eax,0x37
  4173f8:	not    bl
  4173fa:	in     eax,dx
  4173fb:	adc    DWORD PTR [ecx],edi
  4173fd:	add    al,0x0
  4173ff:	repnz push ecx
  417401:	and    ecx,DWORD PTR [ebp+0x79]
  417404:	repnz scas al,BYTE PTR es:[edi]
  417406:	pop    ebx
  417408:	nop
  417409:	fs stos BYTE PTR es:[edi],al
  41740b:	jmp    0xd075:0x8097816c
  417412:	cmp    esp,DWORD PTR [ecx]
  417414:	daa    
  417415:	mov    eax,0x322e2677
  41741a:	mov    gs,eax
  41741c:	out    dx,eax
  41741d:	mov    bh,BYTE PTR [edx+0x9]
  417420:	add    al,0xf4
  417422:	loope  0x4173cb
  417424:	and    DWORD PTR ds:0xf1c424b9,esp
  41742a:	add    BYTE PTR ds:0xf22df297,ch
  417430:	out    dx,al
  417431:	ds aaa 
  417433:	js     0x41745e
  417435:	repz sub DWORD PTR [ebx+0xb],ecx
  417439:	cmp    ch,bh
  41743b:	repz xor al,BYTE PTR [eax+edx*8-0x3d]
  417440:	sub    eax,0x697f1923
  417445:	sub    ebx,DWORD PTR [ecx+0x2771e09a]
  41744b:	pop    eax
  41744c:	ret    
  41744d:	and    al,0xc8
  41744f:	jne    0x41742f
  417451:	aaa    
  417452:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417453:	or     bh,bl
  417455:	ds mov bl,0x5d
  417458:	shl    BYTE PTR [edx-0x2b],cl
  41745b:	sub    DWORD PTR [edi-0x3c9ae8f7],eax
  417461:	inc    ebp
  417462:	xor    DWORD PTR [esi],edx
  417464:	test   al,0x52
  417466:	(bad)  
  417467:	pop    esp
  417468:	jle    0x4174d5
  41746a:	jb     0x417432
  41746c:	sub    eax,0xa03913e6
  417471:	loopne 0x4174a3
  417473:	mov    esi,DWORD PTR [esi+0x50]
  417476:	outs   dx,DWORD PTR ds:[esi]
  417477:	cmp    BYTE PTR ds:0x764f8ab,0x8a
  41747e:	enter  0xbd3f,0xb2
  417482:	popa   
  417483:	add    al,bl
  417485:	(bad)  
  417486:	pop    eax
  417487:	iret   
  417488:	jmp    0x417448
  41748a:	xchg   edx,eax
  41748b:	inc    ebp
  41748c:	sar    cl,0x5b
  41748f:	stos   BYTE PTR es:[edi],al
  417490:	mov    ch,0xce
  417492:	dec    esi
  417493:	push   ecx
  417494:	mov    dh,0x8d
  417496:	loope  0x417426
  417498:	push   0x7a0a233b
  41749d:	leave  
  41749e:	inc    eax
  41749f:	mov    edx,0x67fc7627
  4174a4:	dec    edx
  4174a5:	dec    ecx
  4174a6:	test   eax,0x8c981e1b
  4174ab:	fs push edx
  4174ad:	std    
  4174ae:	jnp    0x41750f
  4174b0:	xchg   edx,eax
  4174b1:	rol    DWORD PTR [ebx+0x1808d844],cl
  4174b7:	neg    DWORD PTR [ebx+edi*8]
  4174ba:	popf   
  4174bb:	cld    
  4174bc:	bound  ebx,QWORD PTR [eax]
  4174be:	leave  
  4174bf:	and    eax,0x18d10e72
  4174c4:	je     0x417478
  4174c6:	icebp  
  4174c7:	xlat   BYTE PTR ds:[ebx]
  4174c8:	mov    ecx,0xde019c0
  4174cd:	enter  0x7ade,0xd6
  4174d1:	xor    esi,DWORD PTR fs:[edi]
  4174d4:	popf   
  4174d5:	push   0x62
  4174d7:	pop    ds
  4174d8:	pop    esi
  4174d9:	int3   
  4174da:	dec    ebx
  4174db:	pop    es
  4174dc:	xchg   DWORD PTR [ecx+0x79],edx
  4174df:	hlt    
  4174e0:	mov    dl,0x2b
  4174e2:	dec    ecx
  4174e3:	inc    esp
  4174e4:	lfs    edi,FWORD PTR [edi+0x62]
  4174e8:	inc    eax
  4174e9:	and    bh,BYTE PTR [esi-0x444727c1]
  4174ef:	and    al,0xa4
  4174f1:	cld    
  4174f2:	(bad)
  4174f6:	push   ds
  4174f7:	push   ebp
  4174f8:	inc    eax
  4174f9:	les    esp,FWORD PTR [edx]
  4174fb:	xor    BYTE PTR [edi],0x23
  4174fe:	out    dx,al
  4174ff:	xor    ecx,DWORD PTR [edi-0x16844c83]
  417505:	fcmovb st,st(1)
  417507:	ins    BYTE PTR es:[edi],dx
  417508:	push   ss
  417509:	jp     0x4174e0
  41750b:	lods   al,BYTE PTR ds:[esi]
  41750c:	and    eax,0x254c0f54
  417511:	xor    cl,BYTE PTR [edi-0x7420c785]
  417517:	inc    ebp
  417518:	lock xor eax,esi
  41751b:	mov    ecx,0xffffcff5
  417520:	sub    ecx,eax
  417522:	add    ecx,DWORD PTR [ebp-0x24]
  417525:	jmp    0x417a28
  41752a:	jmp    0x417a19
  41752f:	arpl   WORD PTR [edi+0x7f],ax
  417532:	pop    edx
  417533:	jg     0x4175af
  417535:	addr16 jg 0x417521
  417538:	add    bl,dh
  41753a:	leave  
  41753b:	jbe    0x4174d1
  41753d:	cmp    esp,eax
  41753f:	xchg   BYTE PTR [esi+0x1],cl
  417542:	add    dl,dl
  417544:	add    al,0x0
  417546:	add    BYTE PTR [ecx+0x453c12bf],dh
  41754c:	lods   al,BYTE PTR ds:[esi]
  41754d:	xor    al,BYTE PTR [edx-0x2212fa0]
  417553:	movq   mm7,mm1
  417556:	jle    0x4174e8
  417558:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417559:	xchg   edx,eax
  41755a:	pop    edx
  41755b:	and    al,0x5b
  41755d:	shl    dh,cl
  41755f:	outs   dx,DWORD PTR ds:[esi]
  417560:	retf   0xa741
  417563:	adc    eax,ecx
  417565:	or     BYTE PTR [esi],dl
  417567:	loop   0x417591
  417569:	inc    eax
  41756a:	icebp  
  41756b:	arpl   WORD PTR [edx+0x1be58796],bp
  417571:	test   al,0x84
  417573:	mov    dl,0x9a
  417575:	push   cs
  417576:	mov    al,ds:0x980415ad
  41757b:	or     DWORD PTR [eax],esi
  41757d:	call   0xf9c9:0x101bc4e7
  417584:	mov    edi,DWORD PTR [esi-0x1681481d]
  41758a:	mov    ds:0x96147aca,al
  41758f:	mov    DWORD PTR [edx],edi
  417591:	popf   
  417592:	cli    
  417593:	sbb    eax,0xb413785e
  417598:	nop
  417599:	xchg   edi,eax
  41759a:	gs push ss
  41759c:	pop    esi
  41759d:	sbb    BYTE PTR [ecx+0x621ebfa1],0x22
  4175a4:	retf   0xaebf
  4175a7:	or     ebx,DWORD PTR [eax]
  4175a9:	(bad)  
  4175ab:	jmp    0x4175fb
  4175ad:	loope  0x417618
  4175af:	iret   
  4175b0:	(bad)  
  4175b1:	stc    
  4175b2:	push   ebx
  4175b3:	adc    eax,0x9fa3b680
  4175b8:	fstp   TBYTE PTR [ebx-0x7726ce9c]
  4175be:	inc    eax
  4175bf:	mov    eax,ds:0x5fdb8d65
  4175c4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4175c5:	in     al,0xeb
  4175c7:	xchg   edx,eax
  4175c8:	inc    esp
  4175c9:	xor    DWORD PTR [edx],edi
  4175cb:	inc    ebp
  4175cc:	dec    esi
  4175cd:	sub    edi,DWORD PTR [ebp-0x7b5b5f52]
  4175d3:	sti    
  4175d4:	adc    BYTE PTR [ecx+ebx*8+0x7b97171],ch
  4175db:	jmp    0x4436:0x325ce462
  4175e2:	jmp    0x4175cb
  4175e4:	xchg   BYTE PTR [ebx],al
  4175e6:	cdq    
  4175e7:	out    0xf5,eax
  4175e9:	mov    ecx,0xd8602434
  4175ee:	add    dl,BYTE PTR [ecx-0x2407c251]
  4175f4:	out    0x2e,eax
  4175f6:	dec    ebp
  4175f7:	sub    eax,DWORD PTR [ecx+0x16fc3b6e]
  4175fd:	add    BYTE PTR [eax],ah
  4175ff:	or     bl,BYTE PTR [esi-0x67fa8b32]
  417605:	mov    ds:0x317f77ad,al
  41760a:	ins    BYTE PTR es:[edi],dx
  41760b:	sbb    BYTE PTR [esi+0x15],dl
  41760e:	dec    ebx
  41760f:	and    BYTE PTR [edx+eax*4],ch
  417612:	daa    
  417613:	ja     0x4175d3
  417615:	xchg   edi,eax
  417616:	push   esi
  417617:	dec    ebp
  417618:	xchg   ecx,eax
  417619:	cli    
  41761a:	in     eax,dx
  41761b:	pop    esi
  41761c:	adc    eax,esi
  41761e:	inc    ebp
  41761f:	ins    BYTE PTR es:[edi],dx
  417620:	addr16 inc edx
  417622:	xor    cl,BYTE PTR cs:[edx-0x5991438]
  417629:	adc    DWORD PTR ds:0x39997c59,edx
  41762f:	mov    bh,0xe5
  417631:	out    dx,al
  417632:	push   eax
  417633:	ror    BYTE PTR [edi-0x56],0x23
  417637:	loope  0x41767e
  417639:	pop    eax
  41763a:	or     al,ch
  41763c:	(bad)  
  41763d:	scas   eax,DWORD PTR es:[edi]
  41763e:	test   BYTE PTR [esi+0x6a],dl
  417641:	sbb    eax,0x9d316666
  417646:	and    al,0xd
  417648:	test   BYTE PTR [eax+edx*2-0x6f023272],cl
  41764f:	imul   ebx,DWORD PTR [edi],0xcbe1ccd8
  417655:	jecxz  0x4176a8
  417657:	adc    BYTE PTR [edi],dl
  417659:	out    dx,al
  41765a:	push   ss
  41765b:	or     BYTE PTR [edx],0x7b
  41765e:	cmp    DWORD PTR [ebx],eax
  417660:	js     0x4176db
  417662:	shl    al,1
  417664:	call   0xb16:0x6e914744
  41766b:	gs aad 0x22
  41766e:	sub    ecx,ebp
  417670:	mov    BYTE PTR [edi-0x54923753],dh
  417676:	test   WORD PTR ds:0xbe9a347f,sp
  41767d:	retf   
  41767e:	dec    ecx
  41767f:	xchg   esi,eax
  417680:	dec    eax
  417681:	test   al,0xb4
  417683:	add    al,0x2e
  417685:	adc    bl,BYTE PTR [edi]
  417687:	js     0x417662
  417689:	xlat   BYTE PTR ds:[bx]
  41768b:	dec    eax
  41768c:	push   edi
  41768d:	test   DWORD PTR [edi-0x1bfacc76],eax
  417693:	jnp    0x417703
  417695:	cmp    al,0xc6
  417697:	imul   eax,DWORD PTR [ecx+edx*8],0x24dab25
  41769e:	out    dx,al
  41769f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4176a0:	fcom   st(5)
  4176a2:	fist   DWORD PTR ds:0x2d7d2ae
  4176a8:	push   edx
  4176a9:	push   0x3ebef428
  4176ae:	add    esp,eax
  4176b0:	xchg   ebx,eax
  4176b1:	retf   
  4176b2:	enter  0x6c02,0xf8
  4176b6:	jo     0x417666
  4176b8:	js     0x417732
  4176ba:	dec    eax
  4176bb:	daa    
  4176bc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4176bd:	push   edx
  4176be:	jns    0x4176f3
  4176c0:	inc    ebp
  4176c1:	les    edi,FWORD PTR [esi-0x5cf8e684]
  4176c7:	sar    BYTE PTR [edi],0xa7
  4176ca:	push   eax
  4176cb:	mov    eax,0x44037210
  4176d0:	sti    
  4176d1:	cli    
  4176d2:	retf   
  4176d3:	shr    bh,0x4e
  4176d6:	xchg   ebp,eax
  4176d7:	stos   BYTE PTR es:[edi],al
  4176d8:	xor    BYTE PTR [ebp+0x6acfab62],cl
  4176de:	mov    ebx,0xb46329ff
  4176e3:	dec    ecx
  4176e4:	lds    esi,FWORD PTR [esi+0x24]
  4176e7:	mov    esp,0x3bd0ebea
  4176ec:	es aad 0xd
  4176ef:	cmp    ebx,edi
  4176f1:	ret    
  4176f2:	xchg   ch,bh
  4176f4:	les    ebx,FWORD PTR [ebp+0x4c]
  4176f7:	cmc    
  4176f8:	inc    edi
  4176f9:	(bad)  
  4176fa:	das    
  4176fb:	sub    BYTE PTR [ebx-0x59f3a402],0x27
  417702:	popa   
  417703:	sub    esp,ecx
  417705:	push   edx
  417706:	xor    al,0xfd
  417708:	jbe    0x4176bb
  41770a:	test   eax,0x122e28ff
  41770f:	mov    WORD PTR [ecx-0x208a9b05],cs
  417715:	imul   eax,DWORD PTR ds:0x81134d7d,0xa488a766
  41771f:	cld    
  417720:	outs   dx,BYTE PTR ds:[esi]
  417721:	push   esi
  417722:	cmp    al,0x52
  417724:	int3   
  417725:	test   BYTE PTR [edi],ch
  417727:	mov    bl,0xcb
  417729:	in     al,0xff
  41772b:	mov    ecx,0x438c3340
  417730:	dec    ecx
  417731:	inc    ecx
  417732:	mov    al,0xb7
  417734:	pop    esp
  417735:	sbb    DWORD PTR [eax+0x0],edx
  417738:	ins    BYTE PTR es:[edi],dx
  417739:	dec    edx
  41773a:	jl     0x417791
  41773c:	push   0x1b
  41773e:	lods   al,BYTE PTR ds:[esi]
  41773f:	(bad)  
  417740:	stos   BYTE PTR es:[edi],al
  417741:	push   esp
  417742:	stos   BYTE PTR es:[edi],al
  417743:	xchg   ecx,eax
  417744:	cmp    bh,BYTE PTR [ebp+0x52]
  417747:	icebp  
  417748:	push   esi
  417749:	or     ebx,ebx
  41774b:	rcl    BYTE PTR [eax+0x6c95ecc7],cl
  417751:	jle    0x4176d9
  417753:	add    bp,WORD PTR [ebx+esi*2]
  417757:	inc    esp
  417758:	test   BYTE PTR [ecx+0x481a2712],0xa0
  41775f:	sbb    bl,BYTE PTR [eax+0x6184401d]
  417765:	pop    eax
  417766:	inc    esi
  417767:	out    dx,al
  417768:	loope  0x41778f
  41776a:	pop    es
  41776b:	jo     0x41778e
  41776d:	data16 add dl,bl
  417770:	out    dx,eax
  417771:	push   ecx
  417772:	out    dx,al
  417773:	cli    
  417774:	push   ecx
  417775:	sbb    eax,0x3af8ca67
  41777a:	add    bl,bh
  41777c:	std    
  41777d:	dec    ebp
  41777e:	inc    ecx
  41777f:	inc    edi
  417780:	sbb    al,0x5c
  417782:	cld    
  417783:	sub    DWORD PTR es:[esi],eax
  417786:	loop   0x41771a
  417788:	retf   
  417789:	mov    eax,DWORD PTR [ebx-0x1259d307]
  41778f:	in     eax,dx
  417790:	(bad)  
  417791:	stc    
  417792:	into   
  417793:	shufps xmm1,XMMWORD PTR [eax],0xd0
  417797:	cli    
  417798:	or     esp,DWORD PTR [edi]
  41779a:	sbb    bl,al
  41779c:	mov    esi,0x5814c525
  4177a1:	xchg   edi,eax
  4177a2:	(bad)  
  4177a3:	fstp   DWORD PTR ds:0xd49c4d2e
  4177a9:	out    0xac,al
  4177ab:	mov    DWORD PTR [edi],ebx
  4177ad:	out    dx,al
  4177ae:	int3   
  4177af:	add    ch,BYTE PTR [edi]
  4177b1:	xchg   ebp,eax
  4177b2:	sbb    ch,dh
  4177b4:	mov    al,ds:0x7e300d9f
  4177b9:	dec    ebp
  4177ba:	push   edx
  4177bb:	cmp    al,0x3a
  4177bd:	jb     0x4177fc
  4177bf:	mov    bh,0xe7
  4177c1:	jge    0x4177e1
  4177c3:	popa   
  4177c4:	jne    0x4177e5
  4177c6:	mov    WORD PTR [ebp+0x1c2ebdf0],es
  4177cc:	mov    ecx,esi
  4177ce:	out    0x54,eax
  4177d0:	js     0x4177da
  4177d2:	in     al,dx
  4177d3:	loopne 0x41780d
  4177d5:	adc    al,0x85
  4177d7:	xor    bh,BYTE PTR ds:0xf0db7cce
  4177dd:	lds    ebx,FWORD PTR ds:0xedc74db4
  4177e3:	js     0x417810
  4177e5:	pusha  
  4177e6:	cmp    ebp,DWORD PTR [ebp+0x65561f0f]
  4177ec:	popa   
  4177ed:	add    ebx,DWORD PTR [ebx]
  4177ef:	sbb    ch,ch
  4177f1:	fst    QWORD PTR [ebx+0x4d]
  4177f4:	icebp  
  4177f5:	mov    ecx,0x75aeda9b
  4177fa:	or     eax,0xb26d9869
  4177ff:	sub    eax,0x47e396e3
  417804:	fild   DWORD PTR [eax+0x18]
  417807:	dec    ecx
  417808:	mov    ds:0x2e8f1802,al
  41780d:	aad    0xcd
  41780f:	mov    al,ds:0xebba6802
  417814:	mov    eax,0xc48386fb
  417819:	jmp    0x417850
  41781b:	rcl    dh,0x2
  41781e:	(bad)  
  41781f:	sbb    BYTE PTR [esi+eiz*8+0x61c1254],ah
  417826:	jg     0x417864
  417828:	add    ecx,DWORD PTR [ebp+0x5caf1c6c]
  41782e:	xchg   ebp,eax
  41782f:	and    DWORD PTR [eax],esi
  417831:	dec    ebx
  417832:	(bad)  
  417833:	dec    esi
  417834:	fs ins BYTE PTR es:[edi],dx
  417836:	cmp    BYTE PTR [ecx+0x70],bl
  417839:	cld    
  41783a:	adc    al,0xb3
  41783c:	daa    
  41783d:	out    0x1b,eax
  41783f:	inc    esp
  417840:	loopne 0x4178a8
  417842:	xor    eax,0x64c80a56
  417847:	dec    ebp
  417848:	rcl    dh,0x74
  41784b:	mov    al,ds:0xbf72e24
  417850:	pop    ds
  417851:	(bad)  
  417852:	jno    0x417823
  417854:	inc    esi
  417855:	stos   DWORD PTR es:[edi],eax
  417856:	jno    0x417821
  417858:	stos   DWORD PTR es:[edi],eax
  417859:	mov    bl,0x7f
  41785b:	jmp    0x4177eb
  41785d:	mov    edx,DWORD PTR [edi+0x391fdbf9]
  417863:	mov    ebx,0x61f4cb8d
  417868:	dec    ebx
  417869:	mov    ecx,ss
  41786b:	mov    bh,0x9
  41786d:	adc    eax,0xf9c61ac3
  417872:	or     ah,dh
  417874:	sbb    dl,BYTE PTR [edx+0x59]
  417877:	cwde   
  417878:	clc    
  417879:	xchg   edx,eax
  41787a:	adc    ecx,esp
  41787c:	sub    edi,ecx
  41787e:	push   ss
  41787f:	jp     0x417850
  417881:	mov    ebx,0xcf6aa7a3
  417886:	dec    edi
  417887:	(bad)  
  417888:	lock mov dh,0x71
  41788b:	ror    DWORD PTR [ebp+0x7a0ad9da],cl
  417891:	or     BYTE PTR [eax],al
  417893:	jle    0x417897
  417895:	sti    
  417896:	sub    eax,DWORD PTR [esi+esi*8]
  417899:	inc    ecx
  41789a:	jo     0x4178f1
  41789c:	out    0xc,eax
  41789e:	loopne 0x41790b
  4178a0:	mov    esi,0x2ec49455
  4178a5:	pop    esi
  4178a6:	xchg   DWORD PTR [esi],ecx
  4178a8:	cmp    eax,0xda97a901
  4178ad:	inc    ebx
  4178ae:	pop    ebx
  4178af:	add    al,0x40
  4178b1:	sbb    bh,BYTE PTR [eax+0x18]
  4178b4:	dec    ecx
  4178b5:	cmp    ecx,ecx
  4178b7:	xchg   esi,eax
  4178b8:	or     al,0x95
  4178ba:	dec    edx
  4178bb:	add    BYTE PTR [edi-0x70ed98f9],al
  4178c1:	mov    dh,0xda
  4178c3:	aad    0x2c
  4178c5:	ds test eax,0x9066a5db
  4178cb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4178cc:	retf   0xb2d1
  4178cf:	pop    edi
  4178d0:	mov    ch,0x9e
  4178d2:	fnstsw WORD PTR [edi+esi*8-0x4f466ad5]
  4178d9:	or     dh,0x6
  4178dc:	jns    0x41787e
  4178de:	out    dx,eax
  4178df:	mov    eax,0x81f8aaa5
  4178e4:	test   DWORD PTR [edx],ebx
  4178e6:	or     BYTE PTR [edx+0x336e8be],dh
  4178ec:	xor    BYTE PTR [eax+eiz*4-0x65bf5ea2],0xe2
  4178f4:	(bad)  
  4178f5:	push   cs
  4178f6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4178f7:	ret    0xfe0d
  4178fa:	push   0x601d5331
  4178ff:	ds dec edx
  417901:	jmp    0x4178ea
  417903:	push   edi
  417904:	sub    ecx,esi
  417906:	test   BYTE PTR [edx+edx*4],0xd3
  41790a:	ins    BYTE PTR es:[edi],dx
  41790b:	xchg   edi,eax
  41790c:	shr    BYTE PTR [edx+edx*4+0x29eb8dba],0xf2
  417914:	and    al,0xfd
  417916:	mov    ?,eax
  417918:	test   BYTE PTR [ecx-0x107568c],al
  41791e:	mov    WORD PTR [edx+0x7de5c424],?
  417924:	cmp    BYTE PTR [eax+0x6b51b8c],cl
  41792a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41792b:	dec    ebp
  41792c:	popf   
  41792d:	mov    ebp,gs
  41792f:	dec    eax
  417930:	adc    eax,0xd09a3881
  417935:	popa   
  417936:	cmp    ch,0xb
  417939:	mov    ebp,0x5e1385f2
  41793e:	jl     0x417904
  417940:	mov    bh,0x66
  417942:	icebp  
  417943:	xor    eax,0x1c5d9813
  417948:	cmp    al,0x58
  41794a:	jb     0x41792b
  41794c:	and    bl,BYTE PTR [edi]
  41794e:	push   cs
  41794f:	adc    dh,BYTE PTR [edx+0x70]
  417952:	pushf  
  417953:	add    DWORD PTR [eax],edi
  417955:	pop    edi
  417956:	enter  0x8aaa,0x5e
  41795a:	scas   al,BYTE PTR es:[edi]
  41795b:	stos   DWORD PTR es:[edi],eax
  41795c:	push   ebx
  41795d:	inc    ecx
  41795e:	jb     0x41795f
  417960:	repz xchg ebp,eax
  417962:	mov    bl,0xc4
  417964:	xor    al,0xae
  417966:	dec    ebx
  417967:	call   0xe815:0x8c34c3d8
  41796e:	mov    al,ds:0x9ae9945c
  417973:	dec    ecx
  417974:	mov    DWORD PTR [esi+0x1aa7d11f],esi
  41797a:	jno    0x4179bb
  41797c:	add    dl,cl
  41797e:	pop    DWORD PTR [edi-0xb]
  417981:	jbe    0x417928
  417983:	inc    eax
  417984:	das    
  417985:	mov    ds:0xc9d3f413,al
  41798a:	xchg   esp,eax
  41798b:	inc    ebx
  41798c:	adc    DWORD PTR [esi],0xffffff83
  41798f:	or     esi,eax
  417991:	imul   ecx,eax,0xc30c281f
  417997:	cmp    DWORD PTR [eax-0xa],esp
  41799a:	sub    bl,BYTE PTR [esi+0xd]
  41799d:	mov    dh,0xff
  41799f:	das    
  4179a0:	mov    eax,ds:0x46525b2a
  4179a5:	jne    0x417969
  4179a7:	cs pop esi
  4179a9:	inc    ebx
  4179aa:	sub    al,0xdc
  4179ac:	xchg   ebp,eax
  4179ad:	push   ebx
  4179ae:	inc    ebx
  4179af:	dec    edi
  4179b0:	jl     0x417986
  4179b2:	sub    al,0x78
  4179b4:	mov    BYTE PTR [edx+0x55b9ad0e],0x92
  4179bb:	push   edi
  4179bc:	push   ds
  4179bd:	jae    0x41796f
  4179bf:	sti    
  4179c0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4179c1:	int3   
  4179c2:	mov    ch,0xe5
  4179c4:	das    
  4179c5:	adc    edx,edx
  4179c7:	xlat   BYTE PTR ds:[ebx]
  4179c8:	pop    ds
  4179c9:	adc    eax,0x31ef5a04
  4179ce:	retf   
  4179cf:	xchg   BYTE PTR [esi+eiz*4+0x72],bl
  4179d3:	imul   esp,DWORD PTR [edx+0x33509a47],0xffffffee
  4179da:	cmp    BYTE PTR [ebx+0xf],dl
  4179dd:	sar    edi,0x66
  4179e0:	adc    al,0x99
  4179e2:	out    dx,eax
  4179e3:	xchg   edi,eax
  4179e4:	sbb    BYTE PTR [esi+0xa5fd881],0xe9
  4179eb:	sbb    ch,BYTE PTR [eax]
  4179ed:	push   esi
  4179ee:	rcr    BYTE PTR ds:0xaef21884,cl
  4179f4:	(bad)  
  4179f5:	cmp    al,0xd2
  4179f7:	retf   
  4179f8:	mov    esp,0x3cf199bd
  4179fd:	pop    ss
  4179fe:	mov    edi,0xcd08fe54
  417a03:	aad    0xc8
  417a05:	aad    0x89
  417a07:	xchg   esi,eax
  417a08:	push   ss
  417a09:	retf   0xdff5
  417a0c:	xchg   BYTE PTR [edi],al
  417a0e:	fabs   
  417a10:	add    eax,0xf8adff20
  417a15:	aas    
  417a16:	sub    al,BYTE PTR [ebx]
  417a18:	sub    BYTE PTR [ebx-0x39cc0fbb],cl
  417a1e:	mov    ecx,0xffffcff5
  417a23:	sub    ecx,eax
  417a25:	add    ecx,DWORD PTR [ebp-0xc]
  417a28:	mov    DWORD PTR [ebp-0xc],ecx
  417a2b:	mov    eax,DWORD PTR [ebp-0x18]
  417a2e:	jmp    0x417f1d
  417a33:	or     DWORD PTR [bx-0x29],edi
  417a38:	imul   DWORD PTR [edi-0x47]
  417a3b:	lods   al,BYTE PTR ds:[esi]
  417a3c:	ins    BYTE PTR es:[edi],dx
  417a3d:	outs   dx,BYTE PTR ds:[esi]
  417a3e:	addr16 rdmsr 
  417a41:	popa   
  417a42:	int3   
  417a43:	pop    eax
  417a44:	push   ebx
  417a45:	add    DWORD PTR [eax],eax
  417a47:	rol    BYTE PTR [eax+eax*1],cl
  417a4a:	add    dl,bl
  417a4c:	retf   0x84ed
  417a4f:	cwde   
  417a50:	out    0x55,al
  417a52:	arpl   WORD PTR [ebx+0x7d47e491],si
  417a58:	pop    ebp
  417a59:	push   edx
  417a5a:	dec    eax
  417a5b:	dec    ebx
  417a5c:	or     al,BYTE PTR [edi+0x28]
  417a5f:	(bad)  
  417a60:	jp     0x417abe
  417a62:	jmp    0xd16f7437
  417a67:	dec    ebp
  417a68:	lock mov esi,0x3660fd4d
  417a6e:	cs rol ah,cl
  417a71:	push   es
  417a72:	jne    0x417a6e
  417a74:	and    bl,0xdd
  417a77:	pop    eax
  417a78:	stos   DWORD PTR es:[edi],eax
  417a79:	pop    ebp
  417a7a:	xor    BYTE PTR [eax-0x38],ah
  417a7d:	das    
  417a7e:	arpl   WORD PTR [eax+0x7d],bp
  417a81:	pop    edi
  417a82:	adc    BYTE PTR [edi],ah
  417a84:	adc    al,0x1b
  417a86:	push   es
  417a87:	adc    DWORD PTR [ecx+eax*2],edi
  417a8a:	test   eax,0xb0580091
  417a8f:	fiadd  WORD PTR [esi]
  417a91:	add    eax,0x7b6d3c76
  417a96:	dec    ebx
  417a97:	inc    esp
  417a98:	sti    
  417a99:	add    dh,dh
  417a9b:	mov    BYTE PTR [ecx+0x261cfa1c],ch
  417aa1:	mov    eax,ds:0x6fa2bbd2
  417aa6:	test   DWORD PTR [esi+0x31],eax
  417aa9:	int    0x41
  417aab:	std    
  417aac:	jmp    0xcf33ffd2
  417ab1:	retf   
  417ab2:	mov    esp,0x5387f55b
  417ab7:	mov    dh,BYTE PTR [ebx+0x3e]
  417aba:	push   ss
  417abb:	pop    ds
  417abc:	push   esp
  417abd:	daa    
  417abe:	adc    DWORD PTR [edx+esi*8],ebp
  417ac1:	jo     0x417a61
  417ac3:	mov    ds:0x821906dc,al
  417ac8:	cmp    al,0x8a
  417aca:	(bad)  [edx]
  417acc:	fstp   DWORD PTR [eax+0x2d9646d9]
  417ad2:	push   cs
  417ad3:	repz add DWORD PTR gs:[ebp+0x44],edx
  417ad8:	xchg   edx,eax
  417ad9:	dec    esi
  417ada:	mov    eax,0xcc1e7e46
  417adf:	push   ebx
  417ae0:	pop    ss
  417ae1:	sti    
  417ae2:	cmc    
  417ae3:	(bad)  
  417ae4:	jmp    FWORD PTR [ecx+0x771dd3f7]
  417aea:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417aeb:	fnstcw WORD PTR [edi]
  417aed:	clc    
  417aee:	mul    BYTE PTR [ebx+0x10e203b3]
  417af4:	into   
  417af5:	std    
  417af6:	shl    DWORD PTR [esi+0xb96334e],cl
  417afc:	mov    al,ds:0x674a5b9b
  417b01:	mov    ebx,0x2909188b
  417b06:	mov    ds:0x290d9cdf,eax
  417b0b:	shl    BYTE PTR [edx],cl
  417b0d:	ret    0x370e
  417b10:	into   
  417b11:	mov    DWORD PTR [esi-0x5b],esi
  417b14:	and    bh,BYTE PTR [eax]
  417b16:	shl    DWORD PTR [edi],1
  417b18:	xor    DWORD PTR ds:0xf709b691,esp
  417b1e:	int3   
  417b1f:	adc    ecx,DWORD PTR [esp+edi*1]
  417b22:	(bad)  [ecx+0x72]
  417b25:	into   
  417b26:	pop    esp
  417b27:	lea    eax,[ecx]
  417b29:	jp     0x417b5b
  417b2b:	fnstsw WORD PTR [ecx]
  417b2d:	pusha  
  417b2e:	je     0x417b90
  417b30:	sub    bh,BYTE PTR [ebp+edx*4+0x65]
  417b34:	sbb    al,0x9f
  417b36:	mov    esi,0x948eea5e
  417b3b:	je     0x417acf
  417b3d:	adc    BYTE PTR [edx],bh
  417b3f:	outs   dx,DWORD PTR ds:[esi]
  417b40:	in     al,0x54
  417b42:	jl     0x417b07
  417b44:	inc    eax
  417b45:	mov    ebp,0x316b4fae
  417b4a:	sbb    BYTE PTR [edx-0x1aad0bb2],0xab
  417b51:	inc    ebx
  417b52:	sbb    BYTE PTR [ecx+0x65fb35a1],0x2c
  417b59:	cs jmp 0x3c42f7ca
  417b5f:	rcr    dl,0x2f
  417b62:	mov    ch,BYTE PTR [esi-0x71e8d3c1]
  417b68:	jl     0x417b0f
  417b6a:	jle    0x417afe
  417b6c:	leave  
  417b6d:	add    esi,DWORD PTR [edi]
  417b6f:	fistp  QWORD PTR [ebp-0x239afef0]
  417b75:	mov    eax,0x64b56040
  417b7a:	sbb    al,0x37
  417b7c:	jmp    0xe6aa:0x672707c1
  417b83:	aaa    
  417b84:	mov    gs,WORD PTR ds:0x47352610
  417b8a:	ins    DWORD PTR es:[edi],dx
  417b8b:	jbe    0x417be3
  417b8d:	mov    ch,0x97
  417b8f:	mov    DWORD PTR ss:[edi-0x17],esp
  417b93:	aas    
  417b94:	xor    ecx,DWORD PTR [edi]
  417b96:	inc    esi
  417b97:	push   edx
  417b98:	adc    ebx,DWORD PTR [edi]
  417b9a:	es out dx,al
  417b9c:	aad    0xc4
  417b9e:	inc    ebp
  417b9f:	aas    
  417ba0:	xor    edx,0xffffffe7
  417ba3:	dec    edi
  417ba4:	cwde   
  417ba5:	push   ecx
  417ba6:	mov    ah,0xd5
  417ba8:	mov    eax,0x10aa11f0
  417bad:	inc    esp
  417bae:	stos   DWORD PTR es:[edi],eax
  417baf:	jle    0x417c29
  417bb1:	xor    al,0xe
  417bb3:	jp     0x417c08
  417bb5:	sbb    al,0xcd
  417bb7:	outs   dx,BYTE PTR ds:[esi]
  417bb8:	jnp    0x417c28
  417bba:	imul   ebp,ecx,0x1162b773
  417bc0:	push   edx
  417bc1:	loope  0x417c03
  417bc3:	and    eax,0x3910692f
  417bc8:	and    eax,0xb7a5c8f6
  417bcd:	sub    eax,0x8ec19e74
  417bd2:	sub    DWORD PTR [ecx-0x70],edi
  417bd5:	leave  
  417bd6:	(bad)  
  417bd7:	repnz lods al,BYTE PTR ds:[esi]
  417bd9:	fdiv   st,st(4)
  417bdb:	pusha  
  417bdc:	stos   DWORD PTR es:[edi],eax
  417bdd:	or     al,BYTE PTR ds:[ebx-0x3]
  417be1:	in     eax,dx
  417be2:	test   eax,0x4f677fd1
  417be7:	xchg   esp,eax
  417be8:	push   es
  417be9:	fisub  DWORD PTR [edx+0x6435798d]
  417bef:	pop    ecx
  417bf0:	ret    0xf154
  417bf3:	in     al,dx
  417bf4:	jo     0x417c29
  417bf6:	add    al,0x2a
  417bf8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417bf9:	pop    edi
  417bfa:	stos   BYTE PTR es:[edi],al
  417bfb:	adc    DWORD PTR [esi+0xce21aef],esi
  417c01:	xchg   esi,eax
  417c02:	sub    ebx,DWORD PTR [edx+0x48232b5f]
  417c08:	jmp    0xc3bd:0x1550093
  417c0f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417c10:	cmc    
  417c11:	sbb    cl,dl
  417c13:	push   0xffffffc9
  417c15:	mov    esp,0xae7d004d
  417c1a:	xchg   ecx,edi
  417c1c:	std    
  417c1d:	push   ebx
  417c1e:	jb     0x417c5a
  417c20:	call   0xe50dad9d
  417c25:	lods   al,BYTE PTR ds:[esi]
  417c26:	les    edx,FWORD PTR ds:0x7c58b21a
  417c2c:	int    0xad
  417c2e:	xchg   DWORD PTR [edi],ebx
  417c30:	mov    bl,0x61
  417c32:	xchg   esp,eax
  417c33:	retf   
  417c34:	dec    ebx
  417c35:	loopne 0x417c5e
  417c37:	or     al,0xc3
  417c39:	push   cs
  417c3a:	jp     0x417c34
  417c3c:	cmp    eax,0x5c07a085
  417c41:	dec    eax
  417c42:	adc    al,0x69
  417c44:	push   0x78
  417c46:	dec    edi
  417c47:	adc    ah,BYTE PTR [edx-0x6f013c05]
  417c4d:	neg    BYTE PTR [edx-0x51]
  417c50:	cmp    cl,BYTE PTR [eax+0x65]
  417c53:	ds (bad) 
  417c55:	pop    ecx
  417c56:	jp     0x417c33
  417c58:	stc    
  417c59:	jbe    0x417cb4
  417c5b:	in     al,0x26
  417c5d:	cdq    
  417c5e:	popa   
  417c5f:	mov    ds:0x256be288,al
  417c64:	pop    ebp
  417c65:	pop    edi
  417c66:	repnz or ebx,esi
  417c69:	ds push 0x19c0b7e
  417c6f:	loopne 0x417c54
  417c71:	neg    BYTE PTR [ecx+0x72b94c15]
  417c77:	mov    al,0x86
  417c79:	add    DWORD PTR [ecx+0x3b0b556c],edx
  417c7f:	cmp    DWORD PTR [edi+0x2b4a312f],esp
  417c85:	push   esp
  417c86:	in     eax,0xed
  417c88:	out    0xae,eax
  417c8a:	cmc    
  417c8b:	xchg   DWORD PTR [ebp-0x6384e3e5],ebp
  417c91:	jmp    0x6f09:0x21a6a0bf
  417c98:	loopne 0x417c1c
  417c9a:	sbb    dh,bl
  417c9c:	rcr    BYTE PTR [edi],1
  417c9e:	and    al,0xdc
  417ca0:	dec    ebp
  417ca1:	rep outs dx,DWORD PTR ds:[esi]
  417ca3:	xchg   si,ax
  417ca5:	and    BYTE PTR [ecx+0x477e82a3],dl
  417cab:	pop    edx
  417cac:	rcr    BYTE PTR [esi],cl
  417cae:	sub    eax,DWORD PTR [eax-0x3cb4a943]
  417cb4:	hlt    
  417cb5:	mov    ah,0xce
  417cb7:	inc    esi
  417cb8:	jmp    0x417d0a
  417cba:	test   BYTE PTR [edi-0x27],0x93
  417cbe:	jmp    0x417cd6
  417cc0:	cs es push 0xfffffff0
  417cc4:	pop    edx
  417cc5:	pop    esp
  417cc6:	add    DWORD PTR [eax+esi*8+0x5f050f11],eax
  417ccd:	sbb    DWORD PTR ds:[ebp+0xb],ebx
  417cd1:	cli    
  417cd2:	stos   BYTE PTR es:[edi],al
  417cd3:	or     cl,BYTE PTR [ecx+0x25611920]
  417cd9:	(bad)  
  417cda:	adc    BYTE PTR [ebp-0x5],bh
  417cdd:	int    0xe
  417cdf:	xor    cl,dh
  417ce1:	push   esi
  417ce2:	push   ds
  417ce3:	clc    
  417ce4:	xor    eax,0x8d2f07ea
  417ce9:	jp     0x417d33
  417ceb:	pop    es
  417cec:	xor    eax,0x8f2755a2
  417cf1:	add    bl,BYTE PTR [edx-0x48]
  417cf4:	and    bh,BYTE PTR [esi]
  417cf6:	fwait
  417cf7:	and    al,BYTE PTR ds:0xd5387270
  417cfd:	rcl    DWORD PTR [esi+0x45],0x1b
  417d01:	push   ebx
  417d02:	test   dh,0x3
  417d05:	ja     0x417d14
  417d07:	mov    ?,ecx
  417d09:	fwait
  417d0a:	lahf   
  417d0b:	sub    al,BYTE PTR [ecx]
  417d0d:	sub    bl,BYTE PTR [ecx]
  417d0f:	or     al,0xa
  417d11:	pop    esi
  417d12:	dec    esi
  417d13:	leave  
  417d14:	or     edi,DWORD PTR [esi+ebp*8-0xf]
  417d18:	inc    esi
  417d19:	push   esi
  417d1a:	retf   0x1d9d
  417d1d:	pop    ebp
  417d1e:	push   ecx
  417d1f:	ins    DWORD PTR es:[edi],dx
  417d20:	xchg   BYTE PTR [ebp+0x70ed8ac9],bl
  417d26:	adc    edx,DWORD PTR [ebx+0x702c7364]
  417d2c:	or     BYTE PTR [edi-0x1b],ch
  417d2f:	test   BYTE PTR [esi+eax*2+0x11],cl
  417d33:	(bad)  
  417d34:	retf   0x78c8
  417d37:	jb     0x417d8e
  417d39:	dec    ebx
  417d3a:	inc    esi
  417d3b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417d3c:	push   ebx
  417d3d:	push   ss
  417d3e:	loop   0x417db4
  417d40:	loop   0x417cf4
  417d42:	sub    eax,0x56cdceec
  417d47:	mov    ebp,0xe755c928
  417d4c:	call   FWORD PTR [eax+0x14]
  417d4f:	pop    edx
  417d50:	repz (bad) 
  417d52:	sub    ebp,DWORD PTR [edi]
  417d54:	ret    0x56bc
  417d57:	push   edx
  417d58:	or     eax,0x35220b6f
  417d5d:	fbld   TBYTE PTR ds:0x59fe98d2
  417d63:	pop    ebx
  417d64:	fs fstp st(1)
  417d67:	jmp    0x95f02d26
  417d6c:	popa   
  417d6d:	das    
  417d6e:	jmp    0x2258:0x26e82d42
  417d75:	push   0xfffffff2
  417d77:	jp     0x417d4e
  417d79:	sub    ecx,DWORD PTR [ecx-0x49748391]
  417d7f:	mov    esi,?
  417d81:	shl    DWORD PTR [eax-0x6],1
  417d84:	clc    
  417d85:	leave  
  417d86:	xor    eax,0x3a010d4d
  417d8b:	fcom   QWORD PTR [ebp-0x19788af3]
  417d92:	lock push esi
  417d94:	test   eax,0x504d3f65
  417d99:	addr16 fcmovnu st,st(0)
  417d9c:	cdq    
  417d9d:	cld    
  417d9e:	mov    ?,WORD PTR [edx+0x43173265]
  417da4:	fidivr DWORD PTR [ebp+0x6de7a8ce]
  417daa:	pusha  
  417dab:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417dac:	ins    BYTE PTR es:[edi],dx
  417dad:	pop    ds
  417dae:	xchg   ebx,eax
  417daf:	push   cs
  417db0:	push   ebp
  417db1:	into   
  417db2:	cmp    bh,al
  417db4:	pop    ecx
  417db5:	mov    al,ds:0x9ab670c7
  417dba:	shl    DWORD PTR [edx],0x41
  417dbd:	in     eax,0xd3
  417dbf:	sbb    ch,BYTE PTR [edx-0xab719c0]
  417dc5:	sti    
  417dc6:	(bad)  
  417dc7:	aam    0x42
  417dc9:	adc    al,0x3
  417dcb:	sahf   
  417dcc:	cld    
  417dcd:	pop    es
  417dce:	sbb    BYTE PTR [edi-0x5275ed2c],al
  417dd4:	loopne 0x417e23
  417dd6:	push   cs
  417dd7:	outs   dx,DWORD PTR ds:[esi]
  417dd8:	mov    ebp,0x1ef03307
  417ddd:	push   eax
  417dde:	jge    0x417df9
  417de0:	fld    st(4)
  417de2:	(bad)  
  417de3:	ds jge 0x417de2
  417de6:	mov    ebp,0xb03712b3
  417deb:	jecxz  0x417e46
  417ded:	push   0x3dd2378b
  417df2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417df3:	jp     0x417e14
  417df5:	and    BYTE PTR [eax-0x74db883a],cl
  417dfb:	out    0x61,al
  417dfd:	dec    eax
  417dfe:	in     eax,dx
  417dff:	psrld  mm4,QWORD PTR [ebp-0x4df408e7]
  417e06:	sbb    BYTE PTR [edi+0x300eee21],ah
  417e0c:	test   eax,esp
  417e0e:	(bad)  
  417e0f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417e10:	add    ecx,DWORD PTR [ecx+0x78]
  417e13:	into   
  417e14:	ins    BYTE PTR es:[edi],dx
  417e15:	pop    edx
  417e16:	arpl   WORD PTR [esi-0x45],di
  417e19:	(bad)  
  417e1b:	add    ecx,DWORD PTR ds:0x648cc999
  417e21:	mov    eax,ds:0x69b440d2
  417e26:	in     eax,dx
  417e27:	sub    esi,ebx
  417e29:	mov    ds:0x337027c3,al
  417e2e:	imul   esp,esp,0xffffff8d
  417e31:	or     BYTE PTR [edx],al
  417e33:	push   ss
  417e34:	jno    0x417e6e
  417e36:	je     0x417e99
  417e38:	adc    DWORD PTR [ebx],0x55
  417e3b:	adc    eax,0x7f0e0963
  417e40:	cwde   
  417e41:	lds    esi,FWORD PTR [ebx-0x4b318c7c]
  417e47:	ins    DWORD PTR es:[edi],dx
  417e48:	pop    ds
  417e49:	or     bl,BYTE PTR [edi-0x31]
  417e4c:	sbb    al,0xa8
  417e4e:	lds    esp,FWORD PTR [ebx+eax*1+0x75]
  417e52:	mov    esp,0x5f1781cb
  417e57:	xchg   esi,eax
  417e58:	ins    BYTE PTR es:[edi],dx
  417e59:	jp     0x417e77
  417e5b:	cs push ebp
  417e5d:	mov    esi,0x1de61e33
  417e62:	push   edi
  417e63:	sti    
  417e64:	mov    dl,0xa3
  417e66:	and    al,0xe2
  417e68:	or     edx,DWORD PTR [esi+0xe]
  417e6b:	xchg   ebx,eax
  417e6c:	cld    
  417e6d:	aas    
  417e6e:	mov    dh,0x28
  417e70:	pop    ecx
  417e71:	mov    ch,0x5
  417e73:	jl     0x417e7e
  417e75:	mov    WORD PTR [edx-0x27440420],ds
  417e7b:	in     eax,dx
  417e7c:	sbb    BYTE PTR [esi],ch
  417e7e:	aas    
  417e7f:	sub    esi,eax
  417e81:	in     al,dx
  417e82:	xlat   BYTE PTR ds:[ebx]
  417e83:	push   ds
  417e84:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417e85:	bound  ecx,QWORD PTR [ebp+ebp*2+0x148a1a9a]
  417e8c:	jae    0x417eb8
  417e8e:	int3   
  417e8f:	pop    ebp
  417e90:	daa    
  417e91:	stos   BYTE PTR es:[edi],al
  417e92:	shr    bl,0x13
  417e95:	ja     0x417e83
  417e97:	aad    0x68
  417e99:	mov    bh,0xad
  417e9b:	mov    edi,0xc7c6774f
  417ea0:	jmp    0xe78a:0x36b812f1
  417ea7:	(bad)  
  417ea8:	aad    0x74
  417eaa:	or     BYTE PTR [ecx],bl
  417eac:	jne    0x417e89
  417eae:	mov    eax,ds:0x48a9ae17
  417eb3:	retf   0xcb4d
  417eb6:	cwde   
  417eb7:	(bad)  
  417eb8:	cmp    DWORD PTR [ecx],eax
  417eba:	push   esp
  417ebb:	pusha  
  417ebc:	(bad)  
  417ebe:	popf   
  417ebf:	test   al,0xd0
  417ec1:	cmp    cl,BYTE PTR [edx]
  417ec3:	or     ecx,DWORD PTR [eax-0x66a33205]
  417ec9:	and    al,0x46
  417ecb:	sub    ch,BYTE PTR [esi]
  417ecd:	dec    esi
  417ece:	sbb    eax,0x88c156e8
  417ed3:	cli    
  417ed4:	das    
  417ed5:	sub    bl,BYTE PTR [esi+edx*1+0x601c5e27]
  417edc:	cld    
  417edd:	push   ss
  417ede:	push   cs
  417edf:	mov    cl,0xed
  417ee1:	shr    ch,cl
  417ee3:	stos   DWORD PTR es:[edi],eax
  417ee4:	repz push ecx
  417ee6:	push   ecx
  417ee7:	fcmovb st,st(7)
  417ee9:	jnp    0x417ee1
  417eeb:	mov    bh,0x18
  417eed:	test   DWORD PTR [edi-0x32],esi
  417ef0:	into   
  417ef1:	scas   al,BYTE PTR es:[edi]
  417ef2:	and    al,0x67
  417ef4:	xchg   DWORD PTR [ebp-0x6a],edx
  417ef7:	push   edx
  417ef8:	sbb    DWORD PTR [ebx+0x25],0x2a730015
  417eff:	cs jg  0x417f47
  417f02:	or     eax,0x5584df98
  417f07:	add    al,0xe1
  417f09:	fsub   QWORD PTR [edi]
  417f0b:	mov    cl,0xcb
  417f0d:	(bad)  
  417f0e:	in     al,0xfc
  417f10:	retf   
  417f11:	inc    ecx
  417f12:	bound  ebp,QWORD PTR [ebp-0x2d5ab959]
  417f18:	inc    esp
  417f19:	(bad)  
  417f1a:	jmp    0xf8c557c3
  417f1f:	dec    DWORD PTR [edi]
  417f21:	test   DWORD PTR [edx-0x48],esi
  417f27:	dec    ebp
  417f28:	loopne 0x417f39
  417f2a:	test   DWORD PTR [edx+0x59],edi
  417f2d:	(bad)  
  417f2e:	jmp    DWORD PTR [ecx+0x421020]
  417f34:	and    DWORD PTR [eax],0x0
  417f37:	push   0x870932
  417f3c:	push   0x750771
  417f41:	call   0x40cd95
  417f46:	pop    ebx
  417f47:	jmp    0x418ee4
  417f4c:	mov    eax,ds:0x421414
  417f51:	test   eax,eax
  417f53:	jne    0x41845d
  417f59:	mov    eax,ds:0x4211a0
  417f5e:	mov    ecx,DWORD PTR ds:0x421294
  417f64:	jmp    0x418453
  417f69:	cmc    
  417f6a:	sbb    DWORD PTR [edx],eax
  417f6c:	fsubp  st(6),st
  417f6e:	(bad)  
  417f70:	cmp    esi,DWORD PTR [ebx]
  417f72:	pop    edi
  417f73:	jb     0x417f7d
  417f75:	dec    edx
  417f76:	sbb    dh,BYTE PTR [ebp+0x1582a5a]
  417f7c:	add    dl,dl
  417f7e:	add    al,0x0
  417f80:	add    bl,cl
  417f82:	dec    edx
  417f83:	ja     0x417f10
  417f85:	xchg   ebp,eax
  417f86:	test   DWORD PTR [ebp+0x32],eax
  417f89:	loop   0x417f82
  417f8b:	inc    ecx
  417f8c:	adc    ebx,ecx
  417f8e:	popa   
  417f8f:	push   es
  417f90:	xchg   ebp,eax
  417f91:	rcr    BYTE PTR ds:0x70e203af,1
  417f97:	adc    ebx,DWORD PTR [esi-0x688f3396]
  417f9d:	mov    ecx,0x9348edf7
  417fa2:	cmp    dl,BYTE PTR [esi-0x2912fc45]
  417fa8:	fstp   TBYTE PTR [esi+0x3e]
  417fab:	jne    0x417f88
  417fad:	push   edx
  417fae:	xchg   ebx,eax
  417faf:	xchg   edx,eax
  417fb0:	repz mov dh,BYTE PTR [ebp+0x2a]
  417fb4:	popa   
  417fb5:	data16 sti 
  417fb7:	leave  
  417fb8:	adc    DWORD PTR [edi+0x36],edi
  417fbb:	les    eax,FWORD PTR [edi-0x69c6d2db]
  417fc1:	push   ecx
  417fc2:	cwde   
  417fc3:	sbb    edi,ebp
  417fc5:	outs   dx,DWORD PTR ds:[esi]
  417fc6:	fwait
  417fc7:	es pop ss
  417fc9:	lea    esp,[ebx+0xf55a1ea]
  417fcf:	and    ebp,0xffffffbd
  417fd2:	mov    bl,0x33
  417fd4:	ins    DWORD PTR es:[edi],dx
  417fd5:	cs inc esp
  417fd7:	or     DWORD PTR [edi],ebp
  417fd9:	cmp    BYTE PTR [esi+0x6f],bh
  417fdc:	push   ds
  417fdd:	aaa    
  417fde:	add    DWORD PTR [esi-0x66],esp
  417fe1:	cmc    
  417fe2:	mov    ah,0xc
  417fe4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417fe5:	sub    al,0xa7
  417fe7:	fnstcw WORD PTR [edx+0x5816e70]
  417fed:	sbb    esi,ecx
  417fef:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417ff0:	fs icebp 
  417ff2:	pop    edi
  417ff3:	imul   esi,esp,0xffffffc6
  417ff6:	xor    al,0x48
  417ff8:	xchg   esi,eax
  417ff9:	xchg   edx,eax
  417ffa:	scas   al,BYTE PTR es:[edi]
  417ffb:	jae    0x417fe4
  417ffd:	dec    esi
  417ffe:	jo     0x418053
  418000:	or     BYTE PTR [ebx-0x7764e31a],0xa9
  418007:	outs   dx,DWORD PTR ds:[esi]
  418008:	cdq    
  418009:	fs pop esp
  41800b:	and    al,0xd8
  41800d:	cwde   
  41800e:	cmp    ebp,DWORD PTR [eax]
  418010:	jmp    0x28cf9d45
  418015:	popf   
  418016:	shl    DWORD PTR [edi+0x7d],1
  418019:	sub    al,0xb3
  41801b:	adc    eax,ebp
  41801d:	xor    cl,ah
  41801f:	mov    ds:0x4140719d,al
  418024:	fild   WORD PTR [esi-0x3eb0d2db]
  41802a:	inc    ecx
  41802b:	mov    dh,0x27
  41802d:	dec    eax
  41802e:	mov    ebp,DWORD PTR [ebx-0x10]
  418031:	xlat   BYTE PTR ds:[ebx]
  418032:	push   edx
  418033:	out    dx,al
  418034:	dec    esi
  418035:	inc    ecx
  418036:	and    al,0x8e
  418038:	inc    edi
  418039:	ror    BYTE PTR [ebp-0x2c67eb83],cl
  41803f:	adc    al,BYTE PTR [ecx-0x53]
  418042:	or     eax,0x58cf67f9
  418047:	or     bh,BYTE PTR ds:[eax+0x74badec]
  41804e:	ret    
  41804f:	addr16 gs add eax,0x53b180ac
  418056:	imul   DWORD PTR [esi-0x80d1497]
  41805c:	xchg   edx,eax
  41805d:	adc    DWORD PTR [esp+edi*2],0xf4803cea
  418064:	shl    DWORD PTR [eax-0x6339b33f],cl
  41806a:	sub    al,BYTE PTR [edx+0x4388405d]
  418070:	fcmovu st,st(1)
  418072:	test   BYTE PTR ds:0x80ec2c17,bh
  418078:	dec    edi
  418079:	iret   
  41807a:	mov    ecx,0xf4409bef
  41807f:	pop    edx
  418080:	ret    0x7c53
  418083:	daa    
  418084:	repnz sar bh,cl
  418087:	jne    0x4180b9
  418089:	dec    edx
  41808a:	shl    DWORD PTR es:[esi-0x52c75681],cl
  418091:	jle    0x418033
  418093:	mov    eax,DWORD PTR [ebx]
  418095:	jbe    0x4180de
  418097:	mov    ecx,0xa53201d
  41809c:	mov    cl,0x4e
  41809e:	xlat   BYTE PTR ds:[ebx]
  41809f:	push   es
  4180a0:	inc    eax
  4180a1:	xor    ah,0x81
  4180a4:	sahf   
  4180a5:	and    DWORD PTR [ecx-0x5a],esp
  4180a8:	shl    edx,cl
  4180aa:	cmc    
  4180ab:	mov    cl,0x80
  4180ad:	pop    eax
  4180ae:	pop    esp
  4180af:	lds    eax,FWORD PTR [eax+0x70]
  4180b2:	sbb    edi,ebp
  4180b4:	and    eax,0x1ce2f9d4
  4180b9:	mov    ds:0xc9beeb65,al
  4180be:	mov    esi,0x6927a916
  4180c3:	ins    DWORD PTR es:[edi],dx
  4180c4:	shr    DWORD PTR [ebx+ebx*1+0x5a57a47c],0xdd
  4180cc:	and    BYTE PTR [edi],ch
  4180ce:	aas    
  4180cf:	sbb    al,0x45
  4180d1:	hlt    
  4180d2:	aas    
  4180d3:	(bad)  
  4180d4:	ins    DWORD PTR es:[edi],dx
  4180d5:	hlt    
  4180d6:	xor    DWORD PTR [ebp+ebx*1+0x53],ebp
  4180da:	adc    al,dl
  4180dc:	fwait
  4180dd:	retf   0x8f0c
  4180e0:	jmp    0x74ca:0xeb60f96b
  4180e7:	or     DWORD PTR [ecx+0x31],esi
  4180ea:	sub    DWORD PTR ds:0x48de7d7,0xfc8ace94
  4180f4:	cmp    al,0xb5
  4180f6:	and    eax,0x926eff27
  4180fb:	ins    DWORD PTR es:[edi],dx
  4180fc:	jmp    0x4180ae
  4180fe:	ins    DWORD PTR es:[edi],dx
  4180ff:	dec    eax
  418100:	mov    al,ds:0xdc546c24
  418105:	push   edi
  418106:	push   0x20
  418108:	push   0x51
  41810a:	or     al,0xe1
  41810c:	xor    eax,0x21deed4e
  418111:	sbb    ecx,DWORD PTR [ebp+0x5cf5ee8a]
  418117:	xchg   BYTE PTR [esi-0x4d],al
  41811a:	jecxz  0x4180e3
  41811c:	lds    esi,FWORD PTR [esp+eax*2+0x33]
  418120:	paddsb mm5,QWORD PTR [edx+ebp*1-0x70]
  418125:	mov    esi,ecx
  418127:	cmp    BYTE PTR [eax+0x3e82a1d3],dh
  41812d:	push   ebp
  41812e:	push   esi
  41812f:	std    
  418130:	in     eax,dx
  418131:	int3   
  418132:	push   cs
  418133:	(bad)  [esp+ebx*2+0x3bba9611]
  41813a:	pop    esp
  41813b:	mov    ch,0xc0
  41813d:	mov    WORD PTR [ebp-0x6e],cs
  418140:	stos   BYTE PTR es:[edi],al
  418141:	bound  ebp,QWORD PTR ds:0xcffc8693
  418147:	mov    ds:0xb9e00d37,al
  41814c:	jbe    0x418150
  41814e:	jns    0x4181cc
  418150:	xor    DWORD PTR [edi-0x40900aaf],edi
  418156:	pop    eax
  418157:	cmp    BYTE PTR cs:[eax],ah
  41815a:	jns    0x418109
  41815c:	and    eax,0xfdf9fb29
  418161:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418162:	mov    cl,0x9d
  418164:	pop    edx
  418165:	test   eax,0xfbcd1f6a
  41816a:	inc    esp
  41816b:	sub    eax,0xd9443f40
  418170:	xor    BYTE PTR [edi+0x4bfac45a],0x76
  418177:	fsub   DWORD PTR [edi-0x3a8fa37d]
  41817d:	ins    BYTE PTR es:[edi],dx
  41817e:	sub    DWORD PTR [ecx+0x7b],ebx
  418181:	push   cs
  418182:	outs   dx,DWORD PTR ds:[esi]
  418183:	dec    eax
  418184:	or     ah,BYTE PTR [ecx-0x68979f6]
  41818a:	or     DWORD PTR [edx],ebx
  41818c:	ficomp DWORD PTR [edi]
  41818e:	mov    ecx,0xf370cda4
  418193:	sar    BYTE PTR ds:0xd89ca48e,cl
  418199:	cmp    al,0x3f
  41819b:	ror    BYTE PTR [ecx-0x743cd012],0xdf
  4181a2:	jo     0x418175
  4181a4:	or     cl,BYTE PTR [eax-0x66]
  4181a7:	xor    al,0x4d
  4181a9:	sti    
  4181aa:	push   ebx
  4181ab:	out    0x3d,al
  4181ad:	test   al,0x4
  4181af:	jle    0x4181ea
  4181b1:	jne    0x418171
  4181b3:	stc    
  4181b4:	cmp    ecx,esp
  4181b6:	test   DWORD PTR [ecx-0x5c],edi
  4181b9:	and    eax,0x68cb9758
  4181be:	push   es
  4181bf:	std    
  4181c0:	fbstp  TBYTE PTR [edi+0x1d581ac3]
  4181c6:	xor    esi,DWORD PTR [edi+0x69]
  4181c9:	inc    eax
  4181ca:	(bad)  [eax]
  4181cc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4181cd:	xor    BYTE PTR [eax+0x6abda823],al
  4181d3:	in     eax,0x31
  4181d5:	pop    ebp
  4181d6:	out    0xfd,al
  4181d8:	call   0xc54b5e10
  4181dd:	jg     0x418161
  4181df:	jmp    0x98ea:0xe84381a7
  4181e6:	addr16 dec esi
  4181e8:	ds popf 
  4181ea:	sahf   
  4181eb:	js     0x4181f4
  4181ed:	jmp    0x63d2:0x9527b5f3
  4181f4:	mov    dh,0x5a
  4181f6:	mov    dh,0x1c
  4181f8:	add    bl,dl
  4181fa:	fsubr  QWORD PTR [eax-0x40]
  4181fd:	dec    eax
  4181fe:	(bad)  
  4181ff:	push   cs
  418200:	add    ah,BYTE PTR [edi+0x63011140]
  418206:	jmp    0x4181b9
  418208:	lds    esp,FWORD PTR [edx]
  41820a:	jle    0x579b2c69
  418210:	jp     0x4181ca
  418212:	leave  
  418213:	jg     0x4181c9
  418215:	mul    BYTE PTR [eax+0xb]
  418218:	test   al,0x86
  41821a:	dec    eax
  41821b:	scas   al,BYTE PTR es:[edi]
  41821c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41821d:	dec    ecx
  41821e:	sub    bh,BYTE PTR ds:0x23087349
  418224:	loop   0x4181d5
  418226:	rol    BYTE PTR [edx+0x3a],0xfb
  41822a:	and    DWORD PTR [ebp-0x6b7786c4],ebx
  418230:	adc    dl,bh
  418232:	out    dx,eax
  418233:	repnz add DWORD PTR [ecx-0x5e261b00],0x6c
  41823b:	pop    ebx
  41823c:	xor    al,0x6f
  41823e:	push   eax
  41823f:	mov    ebp,0x4ac2ecc5
  418244:	out    0x39,eax
  418246:	jecxz  0x418270
  418248:	aas    
  418249:	js     0x4181d2
  41824b:	inc    ebx
  41824c:	stc    
  41824d:	sub    eax,0x8d34c35
  418252:	cmp    al,0xb6
  418254:	cli    
  418255:	into   
  418256:	jno    0x41827b
  418258:	inc    ebx
  418259:	pop    DWORD PTR [edi+0x4a3fd9ae]
  41825f:	xor    DWORD PTR [eax],esi
  418261:	lods   al,BYTE PTR ds:[esi]
  418262:	add    ebp,esi
  418264:	out    dx,eax
  418265:	pop    ecx
  418266:	push   edx
  418267:	xchg   BYTE PTR [esp+edi*1+0x47],ch
  41826b:	xchg   edx,eax
  41826c:	mov    bh,0xb4
  41826e:	cmp    eax,0x34fb1357
  418273:	js     0x4182c4
  418275:	bound  ebx,QWORD PTR [esi+0x437e6d8b]
  41827b:	xchg   edi,eax
  41827c:	inc    eax
  41827d:	imul   BYTE PTR [eax-0x7a]
  418280:	ret    0x67b5
  418283:	sbb    BYTE PTR [edi-0x19b0a811],bl
  418289:	mov    ds:0xd380d613,eax
  41828e:	or     al,0xbe
  418290:	push   edx
  418291:	mov    dh,0xca
  418293:	cli    
  418294:	pushf  
  418295:	sub    BYTE PTR [edi-0xddd1227],0xe2
  41829c:	push   ds
  41829d:	xchg   edx,eax
  41829e:	(bad)  
  41829f:	pop    ebp
  4182a0:	sbb    bh,ch
  4182a2:	popf   
  4182a3:	loopne 0x4182da
  4182a5:	jmp    0x4776e747
  4182aa:	test   al,0x6c
  4182ac:	outs   dx,DWORD PTR ds:[esi]
  4182ad:	in     eax,dx
  4182ae:	sar    DWORD PTR [ebp+0x5f413bc5],cl
  4182b4:	cmp    BYTE PTR [edi+0x7b],0xd3
  4182b8:	jle    0x418269
  4182ba:	pop    esp
  4182bb:	push   edx
  4182bc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4182bd:	and    esp,DWORD PTR [ebp-0x2c2d26c5]
  4182c3:	sub    eax,0x453df5b0
  4182c8:	fcom   DWORD PTR [eax+0x35f5117b]
  4182ce:	pop    esi
  4182cf:	fnsave [ecx]
  4182d1:	xchg   ebp,eax
  4182d2:	jl     0x41834b
  4182d4:	mov    ch,0xe
  4182d6:	ret    0x5ae1
  4182d9:	cmp    al,0x90
  4182db:	ficomp DWORD PTR [esi+ecx*2-0x44]
  4182df:	adc    DWORD PTR [ebx],edx
  4182e1:	fsub   st(7),st
  4182e3:	scas   al,BYTE PTR es:[edi]
  4182e4:	sahf   
  4182e5:	sbb    esi,DWORD PTR [ebx+0x26516561]
  4182eb:	ins    DWORD PTR es:[edi],dx
  4182ec:	push   0xffffffbf
  4182ee:	in     eax,0xaa
  4182f0:	daa    
  4182f1:	mov    DWORD PTR [edx+0x1f],esp
  4182f4:	and    BYTE PTR [edi+0x787a2787],al
  4182fa:	adc    ebp,DWORD PTR [edx-0x30]
  4182fd:	cwde   
  4182fe:	inc    edi
  4182ff:	call   0x3bce0d60
  418304:	jne    0x418333
  418306:	shr    DWORD PTR [ebx+esi*2],cl
  418309:	mov    BYTE PTR [ebx-0x5e3a7130],cl
  41830f:	ror    BYTE PTR [esi+0x27],0x5f
  418313:	bnd jae 0x418386
  418316:	fdivr  st(6),st
  418318:	out    0x46,eax
  41831a:	pushf  
  41831b:	rcl    DWORD PTR [ecx],cl
  41831d:	mov    ebx,0x36e54d03
  418322:	mov    ds:0xed3c3da1,al
  418327:	or     al,0x93
  418329:	test   dl,bh
  41832b:	in     al,0x7b
  41832d:	cwde   
  41832e:	icebp  
  41832f:	clc    
  418330:	xlat   BYTE PTR ds:[ebx]
  418331:	data16 xchg BYTE PTR [esi],bl
  418334:	mov    ah,0x92
  418336:	jecxz  0x41839b
  418338:	xor    ecx,eax
  41833a:	sub    dl,BYTE PTR [ebx+0x7e631774]
  418340:	ret    0x2d5b
  418343:	pop    esp
  418344:	or     eax,0xd304935
  418349:	rcl    DWORD PTR [ebp+esi*1-0x38],cl
  41834d:	popf   
  41834e:	(bad)  
  41834f:	stos   BYTE PTR es:[edi],al
  418350:	dec    ebp
  418351:	mov    dl,0x77
  418353:	xor    eax,0xc0b0aa08
  418358:	cmp    al,0x24
  41835a:	push   edx
  41835b:	pop    ss
  41835c:	sub    DWORD PTR [edx+0x384ed3eb],ecx
  418362:	sbb    bh,BYTE PTR [ebx]
  418364:	mov    dh,0xfc
  418366:	pop    ss
  418367:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418368:	je     0x418376
  41836a:	out    dx,al
  41836b:	hlt    
  41836c:	inc    ebx
  41836d:	les    ebp,FWORD PTR [edx+edx*4-0x7a8e04e7]
  418374:	sub    BYTE PTR ds:0xbd4eaf6e,dh
  41837a:	(bad)  
  41837b:	(bad)  
  41837c:	mov    esp,0xb517ba2c
  418381:	mov    esp,0x86b6a5ce
  418386:	test   eax,0x12aca3f
  41838b:	jns    0x418321
  41838d:	in     al,0x90
  41838f:	outs   dx,BYTE PTR ds:[esi]
  418390:	add    dh,BYTE PTR ds:0xdb9f5e51
  418396:	aas    
  418397:	pop    edi
  418398:	je     0x4183b9
  41839a:	call   DWORD PTR [ecx+0x3730843e]
  4183a0:	es mov esi,0x4a1d724
  4183a6:	das    
  4183a7:	ja     0x4183b1
  4183a9:	shl    DWORD PTR [ebx],1
  4183ab:	hlt    
  4183ac:	iret   
  4183ad:	xor    cl,BYTE PTR [eax+0x209590a4]
  4183b3:	icebp  
  4183b4:	push   edx
  4183b5:	enter  0x872b,0x90
  4183b9:	popf   
  4183ba:	pop    ds
  4183bb:	mov    BYTE PTR [ebp+0x45],ch
  4183be:	iret   
  4183bf:	add    BYTE PTR [eax],dh
  4183c1:	xchg   edx,eax
  4183c2:	push   ss
  4183c3:	jb     0x418370
  4183c5:	scas   eax,DWORD PTR es:[edi]
  4183c6:	push   eax
  4183c7:	ds popa 
  4183c9:	sbb    DWORD PTR [esi+eiz*4-0x2c],edi
  4183cd:	jae    0x41840d
  4183cf:	scas   al,BYTE PTR es:[edi]
  4183d0:	repz mov ds,esi
  4183d3:	imul   edx,eax,0xffffffc5
  4183d6:	jle    0x418443
  4183d8:	(bad)  
  4183da:	xchg   esp,eax
  4183db:	loope  0x4183cf
  4183dd:	mov    dl,ch
  4183df:	stos   BYTE PTR es:[edi],al
  4183e0:	dec    esp
  4183e1:	dec    esi
  4183e2:	mov    ds:0xa373d0e7,al
  4183e7:	inc    edi
  4183e8:	(bad)  
  4183e9:	jle    0x4183a9
  4183eb:	lea    edx,[ecx*8-0x4c1f5c81]
  4183f2:	mov    bl,0xbf
  4183f4:	mov    cl,0x1f
  4183f6:	stos   BYTE PTR es:[edi],al
  4183f7:	mov    esi,0x275b96a7
  4183fc:	test   ebx,edx
  4183fe:	neg    BYTE PTR [ebx]
  418400:	in     al,dx
  418401:	iret   
  418402:	xchg   ebp,eax
  418403:	xor    BYTE PTR [eax],bl
  418405:	sub    al,0x1c
  418407:	push   ebp
  418408:	leave  
  418409:	mov    ebx,0x41816428
  41840e:	loop   0x41841e
  418410:	pop    ecx
  418411:	and    DWORD PTR [ebp-0x4554ac2a],0xffffffc9
  418418:	int    0x45
  41841a:	inc    ecx
  41841b:	push   ebp
  41841c:	or     dl,BYTE PTR [eax-0x49dbcbca]
  418422:	fs sti 
  418424:	lock movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418426:	mov    eax,ds:0xdcca34bc
  41842b:	xor    ebp,esi
  41842d:	loopne 0x4183fb
  41842f:	lods   eax,DWORD PTR ds:[esi]
  418430:	ret    
  418431:	xor    eax,0xd38e1687
  418436:	sbb    ah,BYTE PTR [edx]
  418438:	mov    ebp,0xa518b524
  41843d:	(bad)  
  41843e:	repnz in al,0xab
  418441:	pop    ebx
  418442:	rol    DWORD PTR [esi-0xcf46faa],cl
  418448:	sbb    al,0xdb
  41844a:	les    ecx,FWORD PTR [edx]
  41844c:	enter  0x860e,0x9a
  418450:	jne    0x418426
  418452:	sub    ecx,DWORD PTR [ebx+0x19080]
  418458:	add    BYTE PTR [ebx-0x38f776f7],cl
  41845e:	inc    ebp
  41845f:	int3   
  418460:	aas    
  418461:	loopne 0x418462
  418463:	inc    edi
  418465:	inc    ebp
  418466:	fdiv   st,st(0)
  418468:	(bad)  
  418469:	(bad)  
  41846a:	dec    DWORD PTR [ebp-0x39af37bb]
  418470:	inc    ebp
  418471:	call   DWORD PTR [ebp-0x4133ba75]
  418477:	or     dh,BYTE PTR [eax]
  418479:	add    BYTE PTR [eax],al
  41847b:	xor    eax,esi
  41847d:	lea    edi,[esi+0x1]
  418480:	add    eax,edi
  418482:	push   eax
  418483:	mov    eax,DWORD PTR [ebp-0x28]
  418486:	xor    eax,esi
  418488:	jmp    0x418977
  41848d:	fs retf 0xca6b
  418491:	out    dx,eax
  418492:	jmp    0x418479
  418494:	out    dx,al
  418495:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418496:	fild   QWORD PTR [edi]
  418498:	ja     0x4184e2
  41849a:	imul   edx,edi,0xffffff89
  41849d:	cld    
  41849e:	pop    esp
  41849f:	add    DWORD PTR [eax],eax
  4184a1:	rol    BYTE PTR [eax+eax*1],cl
  4184a4:	add    BYTE PTR [edi+0x0],ch
  4184a7:	inc    ebp
  4184a8:	lahf   
  4184a9:	out    0xf7,al
  4184ab:	inc    ebp
  4184ac:	xchg   edx,eax
  4184ad:	add    BYTE PTR [ebx-0x3c],bl
  4184b0:	mov    ds:0x7f372f92,al
  4184b5:	mov    al,0xe1
  4184b7:	jmp    0xf4745cc7
  4184bc:	movs   BYTE PTR es:[di],BYTE PTR ds:[si]
  4184be:	imul   edx,ebp,0xea832846
  4184c4:	push   eax
  4184c5:	retf   
  4184c6:	adc    BYTE PTR [edi+0x36225b8f],bh
  4184cc:	arpl   WORD PTR ds:0x67412354,si
  4184d2:	nop
  4184d3:	cmc    
  4184d4:	xchg   ebx,eax
  4184d5:	loope  0x4184a7
  4184d7:	pop    edx
  4184d8:	popa   
  4184d9:	push   0xc2665b8b
  4184de:	loopne 0x41848d
  4184e0:	shl    DWORD PTR [ebx],0x1d
  4184e3:	jge    0x418488
  4184e5:	pop    esi
  4184e6:	xor    BYTE PTR [ebx+0x7cb3adbc],bl
  4184ec:	inc    ebx
  4184ed:	sbb    edi,DWORD PTR [ecx+0x7a]
  4184f0:	aam    0x4d
  4184f2:	inc    esi
  4184f3:	cmp    BYTE PTR [ecx],cl
  4184f5:	jns    0x418502
  4184f7:	clc    
  4184f8:	rcr    BYTE PTR [ebp-0x2],0x15
  4184fc:	mov    esi,0x3cbe94b9
  418501:	and    BYTE PTR [eax],bl
  418503:	sub    edx,eax
  418505:	mov    cl,0x28
  418507:	test   DWORD PTR [ecx-0x3],esp
  41850a:	jge    0x41850d
  41850c:	arpl   WORD PTR [ebx-0x28fd800],si
  418512:	test   eax,0x81f0dcc9
  418517:	in     eax,0x5a
  418519:	add    BYTE PTR fs:[ebx+0x7fc63a69],ch
  418520:	fwait
  418521:	jne    0x41854b
  418523:	dec    ebp
  418524:	das    
  418525:	mov    ah,0x88
  418527:	loop   0x4184db
  418529:	and    al,0x7
  41852b:	fst    QWORD PTR [ebp-0x73]
  41852e:	inc    edi
  41852f:	mov    edi,0x5b82146f
  418534:	mov    ds:0x1c492d0b,al
  418539:	cmp    DWORD PTR [ebp-0x2d],esp
  41853c:	inc    edi
  41853d:	(bad)  
  41853e:	cmp    ecx,DWORD PTR [ecx]
  418540:	pop    es
  418541:	and    ebx,ecx
  418543:	jp     0x41853f
  418545:	pop    ebx
  418546:	je     0x418563
  418548:	dec    ecx
  418549:	mov    WORD PTR [edx+0x69],ss
  41854c:	retf   0x570
  41854f:	scas   eax,DWORD PTR es:[edi]
  418550:	or     edx,ebx
  418552:	pop    edi
  418553:	jno    0x4185b5
  418555:	adc    dh,BYTE PTR [ebx+ecx*8-0x60]
  418559:	stc    
  41855a:	cmc    
  41855b:	test   dh,0xcb
  41855e:	das    
  41855f:	add    al,0x9b
  418561:	or     eax,0xd14456d2
  418566:	loopne 0x418564
  418568:	push   ss
  418569:	cmp    DWORD PTR [edi-0x5c],edx
  41856c:	sub    esi,DWORD PTR [edi-0x4b]
  41856f:	(bad)  
  418570:	mov    ds:0xf72a8e15,al
  418575:	fidivr WORD PTR [edi-0x60aa6b05]
  41857b:	mov    bh,0xb8
  41857d:	cwde   
  41857e:	or     BYTE PTR [ebp+0x57],0xed
  418582:	pop    eax
  418583:	jmp    FWORD PTR [eax+0x4e]
  418586:	mov    edx,esp
  418588:	outs   dx,BYTE PTR ds:[esi]
  418589:	cli    
  41858a:	adc    al,0xa7
  41858c:	outs   dx,DWORD PTR ds:[esi]
  41858d:	loop   0x4185a1
  41858f:	pop    ds
  418590:	pop    ss
  418591:	mov    ch,BYTE PTR [edx]
  418593:	icebp  
  418594:	stos   DWORD PTR es:[edi],eax
  418595:	inc    eax
  418596:	inc    eax
  418597:	mov    eax,ds:0x3299f7f6
  41859c:	es (bad) 
  41859e:	iret   
  41859f:	dec    ebx
  4185a0:	or     edi,edx
  4185a2:	ret    0x83bd
  4185a5:	lahf   
  4185a6:	lahf   
  4185a7:	inc    esi
  4185a8:	xor    eax,0xc1a7541
  4185ad:	sub    al,BYTE PTR [ebx+edx*1+0xb99d83a]
  4185b4:	mov    ebp,0xf665e041
  4185b9:	add    al,0x7c
  4185bb:	sub    al,0xbd
  4185bd:	jg     0x418593
  4185bf:	je     0x418594
  4185c1:	mov    ebx,0x46155fcc
  4185c6:	adc    ch,bl
  4185c8:	mov    al,0x96
  4185ca:	xor    BYTE PTR [edx],al
  4185cc:	add    bh,BYTE PTR [esi]
  4185ce:	fisub  WORD PTR [edx]
  4185d0:	and    ebx,DWORD PTR [edi]
  4185d2:	nop
  4185d3:	call   0xc9a5:0xf74bdf5
  4185da:	(bad)  
  4185db:	ins    BYTE PTR es:[edi],dx
  4185dc:	out    0xad,eax
  4185de:	fnstsw WORD PTR [edx+eiz*1]
  4185e1:	ins    BYTE PTR es:[edi],dx
  4185e2:	(bad)  
  4185e4:	pop    ebp
  4185e5:	inc    ebx
  4185e6:	adc    eax,0x4524420b
  4185eb:	cmp    dl,BYTE PTR [edi]
  4185ed:	(bad)  
  4185ef:	cmp    dl,ch
  4185f1:	test   al,0x98
  4185f3:	gs sar BYTE PTR ss:[esi+0x2a],1
  4185f8:	jmp    0x2e87:0x13103d04
  4185ff:	xchg   ebp,eax
  418600:	mov    esi,0x78f09e8a
  418605:	xlat   BYTE PTR ds:[ebx]
  418606:	sub    edx,ebx
  418608:	pop    ebx
  418609:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41860a:	mov    ds:0xa27d64a6,eax
  41860f:	sub    eax,0xdb1eeb4f
  418614:	out    0x22,al
  418616:	jno    0x418663
  418618:	out    0xf1,al
  41861a:	sbb    al,0x3e
  41861c:	add    bl,BYTE PTR [edx+0x2a66decf]
  418622:	aam    0xcf
  418624:	retf   
  418625:	into   
  418626:	or     DWORD PTR [edx+0x22ac4e63],eax
  41862c:	mov    ebx,0x8fe8dfc7
  418631:	jno    0x4185cc
  418633:	mov    bl,0xad
  418635:	mov    edx,0x2974450a
  41863a:	in     al,0xb5
  41863c:	push   eax
  41863d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41863e:	mov    esi,0xae288de8
  418643:	rol    BYTE PTR [edx],1
  418645:	std    
  418646:	imul   esi,DWORD PTR [esi+0x61118f02],0x3d
  41864d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41864e:	mov    ecx,0xb5a2309e
  418653:	jl     0x4186c3
  418655:	fst    st(0)
  418657:	lahf   
  418658:	fild   QWORD PTR [edi+0x59e7a37d]
  41865e:	ret    0x15cb
  418661:	and    bl,BYTE PTR [ebx+0x6f]
  418664:	inc    ebp
  418665:	leave  
  418666:	(bad)  
  418667:	js     0x41865e
  418669:	push   esi
  41866a:	fldenv [edx]
  41866c:	mov    cl,0xce
  41866e:	popf   
  41866f:	push   ds
  418670:	fcomp  st(0)
  418672:	adc    dl,BYTE PTR [ecx]
  418674:	shl    bh,cl
  418676:	add    eax,0x104633b4
  41867b:	cld    
  41867c:	inc    ebx
  41867d:	pop    ds
  41867e:	jnp    0x41869f
  418680:	fld    st(4)
  418682:	inc    edi
  418683:	dec    esp
  418684:	mov    ds:0x7e5e1525,al
  418689:	xchg   edx,eax
  41868a:	cdq    
  41868b:	and    BYTE PTR [ecx+0x72],dl
  41868e:	stos   BYTE PTR es:[edi],al
  41868f:	aad    0xb9
  418691:	lds    ebx,FWORD PTR [eax-0x27]
  418694:	clc    
  418695:	ret    0xb96a
  418698:	or     DWORD PTR [edi-0x63d78da4],esi
  41869e:	xchg   BYTE PTR [edi+0x2371144e],bl
  4186a4:	out    0x40,al
  4186a6:	call   0x5531d0ba
  4186ab:	rcr    ebp,cl
  4186ad:	in     eax,dx
  4186ae:	(bad)  
  4186af:	mov    cl,0x25
  4186b1:	or     ebp,DWORD PTR [ebx-0x72]
  4186b4:	add    eax,0x30d43353
  4186b9:	mov    cs,WORD PTR [edx-0x2a]
  4186bc:	inc    edx
  4186bd:	or     dl,BYTE PTR [eax+0x10f74f70]
  4186c3:	xchg   ecx,eax
  4186c4:	inc    edi
  4186c5:	les    esi,FWORD PTR [edx-0x3c5902d9]
  4186cb:	cli    
  4186cc:	test   eax,0x56eee0a5
  4186d1:	dec    ecx
  4186d2:	push   edi
  4186d3:	push   edx
  4186d4:	mov    ebp,0x97fece3b
  4186d9:	arpl   WORD PTR [esi],si
  4186db:	ss sbb eax,0x28d6bd2b
  4186e1:	inc    edx
  4186e2:	xor    al,0x38
  4186e4:	pop    esp
  4186e5:	jne    0x41871c
  4186e7:	rcl    BYTE PTR [ecx+eax*2+0x4f430c9d],1
  4186ee:	mov    ebp,0x59c7ab60
  4186f3:	(bad)  
  4186f4:	shl    BYTE PTR [ebp-0x4f],cl
  4186f7:	pop    eax
  4186f8:	sub    DWORD PTR [ebp+ebp*8-0x27],ebx
  4186fc:	and    al,0x81
  4186fe:	inc    eax
  4186ff:	mov    al,ds:0x8e929bcd
  418704:	loopne 0x4186f8
  418706:	inc    edx
  418707:	aad    0x21
  418709:	add    DWORD PTR [eax],edx
  41870b:	or     al,0xb9
  41870d:	and    eax,0xfedb94f
  418712:	mov    edi,0x1b17e1a5
  418717:	inc    edx
  418718:	mov    dl,0x9b
  41871a:	inc    edi
  41871b:	mov    ah,BYTE PTR [ebp-0x74e4af6b]
  418721:	xchg   esp,eax
  418722:	mov    esi,0x80a6db64
  418727:	addr16 mov al,0xe8
  41872a:	dec    ebp
  41872b:	jge    0x418749
  41872d:	test   eax,0x25c3fbaa
  418732:	or     eax,0x3c9c03b7
  418737:	hlt    
  418738:	jl     0x4186bc
  41873a:	fdivr  DWORD PTR [ecx-0x67]
  41873d:	push   ebx
  41873e:	pop    edi
  41873f:	xchg   ebx,eax
  418740:	inc    ecx
  418741:	imul   edi,DWORD PTR [edx+edx*8],0xffffff8e
  418745:	dec    ebp
  418746:	xchg   ecx,eax
  418747:	push   ecx
  418748:	cmp    BYTE PTR [ecx+0x2df31a41],ch
  41874e:	ret    0xa2bb
  418751:	mov    ah,0x3
  418753:	dec    edi
  418754:	mov    dl,0xf4
  418756:	jns    0x41879d
  418758:	mov    edx,0x4e4e71cd
  41875d:	xchg   edx,eax
  41875e:	jp     0x41879c
  418760:	or     DWORD PTR [eax],0x318feff5
  418766:	loope  0x41877b
  418768:	mov    ecx,0x3ffd4741
  41876d:	inc    edx
  41876e:	(bad)  
  41876f:	retf   
  418770:	std    
  418771:	inc    edi
  418772:	(bad)  
  418773:	sbb    esp,DWORD PTR [ecx+edi*1]
  418776:	test   DWORD PTR [ebx-0x52],0x112ab050
  41877d:	loop   0x41879d
  41877f:	xlat   BYTE PTR ds:[ebx]
  418780:	sub    DWORD PTR cs:[edi+edi*1-0xd538449],ebx
  418788:	push   cs
  418789:	in     eax,dx
  41878a:	ja     0x4187cf
  41878c:	jecxz  0x418715
  41878e:	mov    al,BYTE PTR [esi-0x5ff951f]
  418794:	and    DWORD PTR [edi+0x2525445f],ecx
  41879a:	mov    ?,WORD PTR [ebx+0x3b]
  41879d:	es aas 
  41879f:	xor    esp,edi
  4187a1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4187a2:	hlt    
  4187a3:	lods   al,BYTE PTR ds:[esi]
  4187a4:	or     edx,DWORD PTR [eax-0x24]
  4187a7:	push   ebx
  4187a8:	sub    BYTE PTR [eax+edi*4],dh
  4187ab:	outs   dx,DWORD PTR ds:[esi]
  4187ac:	(bad)  
  4187ad:	sti    
  4187ae:	(bad)  
  4187af:	stc    
  4187b0:	int3   
  4187b1:	es dec edx
  4187b3:	xchg   ebp,eax
  4187b4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4187b5:	int    0x52
  4187b7:	xor    al,BYTE PTR [esi]
  4187b9:	fsubr  DWORD PTR [esi-0x38]
  4187bc:	jmp    0x6cbf:0xac68ce30
  4187c3:	pop    esi
  4187c4:	sbb    ch,ah
  4187c6:	add    DWORD PTR [ebx],eax
  4187c8:	or     al,0x6a
  4187ca:	outs   dx,BYTE PTR ds:[esi]
  4187cb:	or     BYTE PTR [ebx],ah
  4187cd:	pop    esi
  4187ce:	xor    BYTE PTR [ecx],dl
  4187d0:	cmp    cl,BYTE PTR [eax]
  4187d2:	arpl   WORD PTR cs:[ecx+0x4109419e],dx
  4187d9:	add    eax,0xb68b67a8
  4187de:	into   
  4187df:	shl    DWORD PTR [eax],cl
  4187e1:	mov    edx,0x3a35f04c
  4187e6:	cmp    al,cl
  4187e8:	retf   0x7eca
  4187eb:	sub    edx,eax
  4187ed:	(bad)  
  4187ee:	jge    0x4187a5
  4187f0:	pop    ss
  4187f1:	in     eax,0x30
  4187f3:	(bad)  
  4187f4:	jmp    0x418855
  4187f6:	ins    DWORD PTR es:[edi],dx
  4187f7:	pop    edi
  4187f8:	cmp    BYTE PTR [ecx+0x32],dl
  4187fb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4187fc:	iret   
  4187fd:	pop    ebx
  4187fe:	add    eax,0x79d54fad
  418803:	mov    cl,0x8c
  418805:	shr    BYTE PTR [ebx+0x6],cl
  418808:	cld    
  418809:	je     0x418861
  41880b:	push   0x4f2ead3
  418810:	jnp    0x4187b7
  418812:	pop    DWORD PTR [edx]
  418814:	(bad)  
  418815:	cmp    al,0x5e
  418817:	xor    al,0x8f
  418819:	shr    BYTE PTR [eax],0x3d
  41881c:	repnz out 0x6e,eax
  41881f:	pop    ss
  418820:	ret    
  418821:	mov    ch,0x53
  418823:	lea    edi,[ebx]
  418825:	scas   al,BYTE PTR es:[edi]
  418826:	sbb    DWORD PTR [edx+0x32bbf2ee],0xf1c112d4
  418830:	mov    ds:0xa3a81d24,eax
  418835:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418836:	sub    dl,ah
  418838:	xor    ch,BYTE PTR gs:[esp+eax*4-0x4daa32e1]
  418840:	mov    ebp,0x8b1f904a
  418845:	retf   0xaadd
  418848:	in     eax,0x5f
  41884a:	clc    
  41884b:	jl     0x4188cc
  41884d:	push   edx
  41884e:	mov    ch,0x16
  418850:	sub    eax,0x22935644
  418855:	mov    cl,0x1a
  418857:	cmp    cl,BYTE PTR [eax+0x3ee99243]
  41885d:	mov    esp,0xeba23c25
  418862:	es dec eax
  418864:	fnstsw WORD PTR [ebx+edx*8-0x372ab525]
  41886b:	dec    ebx
  41886c:	loop   0x418892
  41886e:	imul   edi,ebx,0x34
  418871:	pop    ds
  418872:	test   eax,0xff0c1b80
  418877:	fnstsw WORD PTR [esi-0x168dea33]
  41887d:	(bad)  
  41887e:	or     esp,DWORD PTR [eax-0x3cd020ee]
  418884:	rol    BYTE PTR [ecx*2-0x43b2716f],0x6
  41888c:	fidivr DWORD PTR [ecx+0x222ceaa3]
  418892:	jo     0x41887e
  418894:	add    dh,BYTE PTR [ebx+0x3f4bb292]
  41889a:	push   ebx
  41889b:	mov    ecx,0xad669da
  4188a0:	mov    ds:0x8a37252,al
  4188a5:	arpl   WORD PTR [ebp-0x19b682d4],bp
  4188ab:	mov    dh,0x13
  4188ad:	es cmp bh,ch
  4188b0:	jmp    0xbf50:0xeba5f19
  4188b7:	push   ebx
  4188b8:	push   0xffffffd4
  4188ba:	ror    BYTE PTR [edx+0xd9e91],1
  4188c0:	sti    
  4188c1:	shl    DWORD PTR [edi+0x7ed0fc37],cl
  4188c7:	stos   BYTE PTR es:[edi],al
  4188c8:	pushf  
  4188c9:	adc    BYTE PTR [esi+0x5fb98224],dh
  4188cf:	jbe    0x418861
  4188d1:	or     BYTE PTR [ebx+0x74],al
  4188d4:	(bad)  
  4188d5:	sub    al,0xba
  4188d7:	mov    ebp,DWORD PTR [ecx+0x2efbebeb]
  4188dd:	test   eax,0x505b653d
  4188e2:	repz xlat BYTE PTR ds:[ebx]
  4188e4:	fimul  WORD PTR [edx]
  4188e6:	mov    cl,0x55
  4188e8:	adc    esi,ebx
  4188ea:	das    
  4188eb:	int    0x84
  4188ed:	xchg   ecx,eax
  4188ee:	shl    dh,cl
  4188f0:	cmp    cl,0xaa
  4188f3:	cs jl  0x4188e0
  4188f6:	icebp  
  4188f7:	retf   
  4188f8:	push   cs
  4188f9:	sub    eax,0x88f7ddf2
  4188fe:	mov    esi,0xee58dc5c
  418903:	fdivr  st(6),st
  418905:	xchg   ebx,eax
  418906:	or     ebx,DWORD PTR [eax+ebp*1-0x53ccaae6]
  41890d:	push   edx
  41890e:	sbb    BYTE PTR [ebx-0x2d6bcc93],al
  418914:	inc    eax
  418915:	cmp    BYTE PTR [edi-0x73],dh
  418918:	imul   edx,DWORD PTR [edx],0x6875afa3
  41891e:	mov    al,ds:0xf6371252
  418923:	adc    DWORD PTR [eax-0x95fc89d],0xffffffa7
  41892a:	cdq    
  41892b:	add    DWORD PTR [edi+0x46],ecx
  41892e:	ret    0x1ee
  418931:	sti    
  418932:	pushf  
  418933:	call   0x5717:0x78fc6f4c
  41893a:	and    al,0xec
  41893c:	adc    BYTE PTR [ecx],bh
  41893e:	xchg   esi,eax
  41893f:	por    mm0,QWORD PTR [eax]
  418942:	imul   esi,DWORD PTR [ecx+0x32],0x28
  418946:	jbe    0x4188db
  418948:	mov    ecx,0xa9c2bb66
  41894d:	sbb    ebx,ebp
  41894f:	cmp    BYTE PTR [edi+0x36b548e],bh
  418955:	adc    esp,ecx
  418957:	adc    ebp,edi
  418959:	jnp    0x418983
  41895b:	cmp    al,0x45
  41895d:	pop    ebx
  41895e:	mov    ?,WORD PTR [eax+0x3b]
  418961:	jb     0x41897d
  418963:	sub    cl,bh
  418965:	repnz adc BYTE PTR [esp+edi*2],0x55
  41896a:	call   0xda7d48df
  41896f:	sub    al,0xdb
  418971:	shl    BYTE PTR [esi-0x5def0350],0x3
  418978:	(bad)  
  418979:	push   eax
  41897a:	push   DWORD PTR ds:0x4212a8
  418980:	mov    eax,ds:0x4211c0
  418985:	push   0x4
  418987:	push   0x1
  418989:	push   0x421116
  41898e:	push   DWORD PTR [eax]
  418990:	call   0x405628
  418995:	mov    al,BYTE PTR [ebp-0x1]
  418998:	mov    ecx,DWORD PTR ds:0x4212a8
  41899e:	xor    al,0x3a
  4189a0:	add    al,0x3a
  4189a2:	mov    BYTE PTR [ecx],al
  4189a4:	mov    ecx,DWORD PTR [ebp-0x28]
  4189a7:	xor    ecx,esi
  4189a9:	mov    eax,0xffffcff5
  4189ae:	sub    eax,ecx
  4189b0:	mov    ecx,DWORD PTR ds:0x4212a8
  4189b6:	sub    eax,ecx
  4189b8:	jmp    0x418ea7
  4189bd:	mov    eax,0xf92fd999
  4189c2:	outs   dx,DWORD PTR ds:[esi]
  4189c3:	(bad)  
  4189c4:	lahf   
  4189c5:	sti    
  4189c6:	and    al,0x4e
  4189c8:	imul   edi,DWORD PTR [esi],0xced49483
  4189ce:	popa   
  4189cf:	add    DWORD PTR [eax],eax
  4189d1:	rol    BYTE PTR [eax+eax*1],cl
  4189d4:	add    ah,dh
  4189d6:	pop    eax
  4189d7:	dec    edx
  4189d8:	and    al,dh
  4189da:	xchg   ebp,ebp
  4189dc:	clc    
  4189dd:	cmovb  eax,ecx
  4189e0:	mov    al,0x83
  4189e2:	push   ss
  4189e3:	inc    edx
  4189e4:	rcl    DWORD PTR [esi+0x2f],1
  4189e7:	mov    ebx,0xbdb3f902
  4189ec:	out    0x74,al
  4189ee:	push   ecx
  4189ef:	or     eax,DWORD PTR fs:[edi+ebp*2-0x4e595675]
  4189f7:	js     0x418a28
  4189f9:	xlat   BYTE PTR ds:[ebx]
  4189fa:	sub    BYTE PTR [eax+0x11e6f71d],bh
  418a00:	dec    esi
  418a01:	mov    ebx,0xef005b81
  418a06:	arpl   dx,ax
  418a08:	xchg   ecx,eax
  418a09:	std    
  418a0a:	hlt    
  418a0b:	sbb    DWORD PTR [eax],ebp
  418a0d:	sbb    eax,0xdc4457fa
  418a12:	scas   al,BYTE PTR es:[edi]
  418a13:	mov    ebp,0x190884dc
  418a18:	or     DWORD PTR [esi],0x7d
  418a1b:	call   0x77a6:0x72ba39da
  418a22:	leave  
  418a23:	push   edx
  418a24:	xchg   edx,eax
  418a25:	sahf   
  418a26:	dec    edx
  418a27:	xchg   ebp,eax
  418a28:	inc    ebp
  418a29:	and    ch,BYTE PTR [edx]
  418a2b:	popf   
  418a2c:	lods   eax,DWORD PTR fs:[esi]
  418a2e:	arpl   dx,dx
  418a30:	add    eax,0xc791c4fd
  418a35:	add    edx,DWORD PTR [edx+0x7e]
  418a38:	sbb    bl,BYTE PTR [eax]
  418a3a:	sbb    DWORD PTR [edx-0x14],ecx
  418a3d:	(bad)  
  418a3f:	and    ch,ch
  418a41:	popf   
  418a42:	mov    al,0xd5
  418a44:	mov    bl,0xcc
  418a46:	daa    
  418a47:	or     al,0x95
  418a49:	jo     0x418a4d
  418a4b:	or     DWORD PTR [ebp+0x75a44a9b],0x3076490
  418a55:	mov    fs,WORD PTR [esi]
  418a57:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418a58:	pop    esi
  418a59:	fbstp  TBYTE PTR [eax+0x2]
  418a5c:	adc    bh,BYTE PTR [edi]
  418a5e:	dec    ebp
  418a5f:	mov    eax,0x4f107680
  418a64:	mov    dh,0x6a
  418a66:	adc    dl,BYTE PTR [edi+0x0]
  418a69:	repnz in al,0x9c
  418a6c:	loope  0x4189f6
  418a6e:	xchg   ebp,eax
  418a6f:	dec    ecx
  418a70:	cmp    BYTE PTR [ebx+ecx*8-0x12],bh
  418a74:	dec    esp
  418a75:	xchg   ebp,eax
  418a76:	dec    esp
  418a77:	mov    BYTE PTR [ecx+0x6103c013],dh
  418a7d:	out    dx,eax
  418a7e:	xchg   ebx,eax
  418a7f:	jb     0x418a3c
  418a81:	rcr    BYTE PTR [edx],0xe8
  418a84:	mov    dl,0x1c
  418a86:	or     edx,edx
  418a88:	xor    esp,ebp
  418a8a:	fisttp DWORD PTR [edx-0x37]
  418a8d:	ja     0x418a81
  418a8f:	or     al,0xfc
  418a91:	xor    eax,0x10a00791
  418a96:	adc    BYTE PTR [ecx],0x67
  418a99:	(bad)  
  418a9b:	cld    
  418a9c:	mov    esi,0x50edb9a7
  418aa1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418aa2:	cmp    cl,ah
  418aa4:	out    dx,al
  418aa5:	pop    ss
  418aa6:	jmp    0x68b5:0xeff8098c
  418aad:	cs push 0xb67cb95a
  418ab3:	(bad)  
  418ab4:	test   DWORD PTR [ebx],0x39c379a6
  418aba:	xor    cl,bl
  418abc:	mul    eax
  418abe:	add    al,BYTE PTR [edx+0x2e]
  418ac1:	cdq    
  418ac2:	ds mov ebp,0x35582bbd
  418ac8:	sbb    DWORD PTR [eax],eax
  418aca:	fisub  DWORD PTR ds:0x469dbe97
  418ad0:	retf   
  418ad1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418ad2:	stos   DWORD PTR es:[edi],eax
  418ad3:	adc    eax,DWORD PTR [esi+0x34fbc846]
  418ad9:	mov    esi,0x330a5457
  418ade:	loop   0x418b49
  418ae0:	or     edi,eax
  418ae2:	cmp    bl,BYTE PTR [edx-0x41]
  418ae5:	call   0x75f4c791
  418aea:	sub    al,0x4f
  418aec:	mov    ds:0xdf7948fd,eax
  418af1:	sbb    BYTE PTR [eax+0x75903e1b],bh
  418af7:	pop    esi
  418af8:	out    dx,eax
  418af9:	sbb    esi,esi
  418afb:	jg     0x418ae8
  418afd:	add    al,0x4d
  418aff:	cmp    dl,BYTE PTR [edi+0x18]
  418b02:	rol    BYTE PTR [edx+0x44],cl
  418b05:	sbb    DWORD PTR [edx-0x27e7e1a6],ebx
  418b0b:	rcl    DWORD PTR [esi],cl
  418b0d:	scas   eax,DWORD PTR es:[edi]
  418b0e:	into   
  418b0f:	cmp    bl,bl
  418b11:	jl     0x418ada
  418b13:	push   ss
  418b14:	pop    ecx
  418b16:	dec    edi
  418b17:	dec    edx
  418b18:	add    ecx,esp
  418b1a:	(bad)  
  418b1b:	div    ebx
  418b1d:	or     al,0xa7
  418b1f:	aad    0x5c
  418b21:	dec    esp
  418b22:	jns    0x418afb
  418b24:	jo     0x418b10
  418b26:	push   es
  418b27:	adc    eax,0x3a445178
  418b2c:	ret    
  418b2d:	mov    cs:0x1217fb5,al
  418b33:	pop    ds
  418b34:	adc    dl,BYTE PTR [eax+0x6a]
  418b37:	dec    eax
  418b38:	dec    ebp
  418b39:	jge    0x418b90
  418b3b:	retf   
  418b3c:	mov    bh,0x63
  418b3e:	clc    
  418b3f:	rol    DWORD PTR [edi],0xc6
  418b42:	pop    es
  418b43:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418b44:	add    ebp,DWORD PTR [ecx+0x6cfa7f0b]
  418b4a:	rcr    bh,1
  418b4c:	and    BYTE PTR [esi+eax*8-0x7cbed70e],cl
  418b53:	jg     0x418b93
  418b55:	lahf   
  418b56:	shl    BYTE PTR [esi-0x11],1
  418b59:	xchg   edi,eax
  418b5a:	xor    ebp,DWORD PTR [ebx-0x80]
  418b5d:	inc    esi
  418b5e:	push   cs
  418b5f:	sbb    BYTE PTR [eax],dl
  418b61:	xchg   esi,eax
  418b62:	push   esp
  418b63:	fbstp  TBYTE PTR [esi-0x53]
  418b66:	push   cs
  418b67:	mov    esp,0x7d17e42
  418b6c:	mov    esi,0xc0358aaf
  418b71:	daa    
  418b72:	imul   BYTE PTR [ebx+0x47]
  418b75:	jle    0x418b1e
  418b77:	fstp   QWORD PTR [ebp+0x6459c741]
  418b7d:	mov    ah,0x79
  418b7f:	dec    edx
  418b80:	enter  0x408,0x1
  418b84:	mov    al,0xaf
  418b86:	add    al,0x2
  418b88:	mov    eax,0x8730e2a4
  418b8d:	das    
  418b8e:	popf   
  418b8f:	xchg   esp,eax
  418b90:	xchg   esp,eax
  418b91:	or     eax,0x455c44f1
  418b96:	jg     0x418b64
  418b98:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418b99:	mov    ch,0xa8
  418b9b:	mov    DWORD PTR [edi+edx*2+0x45],ebp
  418b9f:	(bad)  
  418ba0:	rcr    BYTE PTR [ebx+0x78307f5a],0x0
  418ba7:	mov    esp,0x1d758b9c
  418bac:	retf   
  418bad:	xchg   DWORD PTR [eax-0x366aa030],ebp
  418bb3:	frstor [ecx+0x2c]
  418bb6:	sbb    eax,0xe1325d09
  418bbb:	inc    edi
  418bbc:	popf   
  418bbd:	or     ebx,ebx
  418bbf:	adc    DWORD PTR [eax+0x30],ebx
  418bc2:	ror    DWORD PTR [edi+esi*8],0x99
  418bc6:	aam    0xe9
  418bc8:	pop    ds
  418bc9:	sbb    al,0x8e
  418bcb:	js     0x418b77
  418bcd:	std    
  418bce:	cdq    
  418bcf:	les    edx,FWORD PTR [ebx]
  418bd1:	call   0xe184:0xf6e3c118
  418bd8:	cwde   
  418bd9:	inc    esi
  418bda:	cmp    cl,bl
  418bdc:	jg     0x418bdc
  418bde:	mov    eax,0x53bd0705
  418be3:	cmp    eax,0x68bd1578
  418be8:	adc    eax,0x908709d3
  418bed:	out    0xfc,al
  418bef:	jle    0x418c26
  418bf1:	add    dh,BYTE PTR [edx]
  418bf3:	push   ebp
  418bf4:	dec    edx
  418bf5:	mov    bl,0xff
  418bf7:	mov    bh,0x8c
  418bf9:	add    eax,ebp
  418bfb:	push   edx
  418bfc:	pop    ebp
  418bfd:	jmp    0x3bff:0x9d469c9d
  418c04:	adc    eax,0x62f992ea
  418c09:	dec    esp
  418c0a:	loope  0x418c13
  418c0c:	xor    DWORD PTR [ebx+0x74],ebp
  418c0f:	add    al,al
  418c11:	fadd   DWORD PTR [ecx+0xd4f5956]
  418c17:	jo     0x418c26
  418c19:	retf   
  418c1a:	retf   0x6fe7
  418c1d:	fwait
  418c1e:	dec    eax
  418c1f:	lods   al,BYTE PTR ds:[esi]
  418c20:	pushf  
  418c21:	pop    esp
  418c22:	rcl    DWORD PTR [ebx-0xf3316f4],1
  418c28:	inc    ecx
  418c29:	pop    ss
  418c2a:	sti    
  418c2b:	inc    BYTE PTR [edi+ebx*4]
  418c2e:	dec    ecx
  418c2f:	fst    st(2)
  418c31:	fsubr  DWORD PTR [ebx-0x444b1cf9]
  418c37:	sub    BYTE PTR [eax],cl
  418c39:	es inc ecx
  418c3b:	ja     0x418bf9
  418c3d:	xor    eax,0x66786b3d
  418c42:	sub    bh,BYTE PTR [eax]
  418c44:	cmc    
  418c45:	enter  0xa9db,0xe
  418c49:	push   cs
  418c4a:	cwde   
  418c4b:	inc    edi
  418c4c:	sbb    ebp,DWORD PTR [ecx-0x78da5de0]
  418c52:	leave  
  418c53:	or     ch,BYTE PTR [esi+0x1c412934]
  418c59:	not    DWORD PTR cs:[ecx-0x57]
  418c5d:	dec    esi
  418c5e:	cmp    eax,0x8c99369e
  418c63:	sbb    BYTE PTR [ebx-0x37e47ac3],bl
  418c69:	rcl    BYTE PTR [ebx-0x4a],0x3a
  418c6d:	and    BYTE PTR [esi+eax*8-0x3a],bl
  418c71:	mov    bl,0xb4
  418c73:	ins    BYTE PTR es:[edi],dx
  418c74:	mov    ebx,0x79847e7c
  418c79:	and    DWORD PTR [eax],ebx
  418c7b:	ins    DWORD PTR es:[di],dx
  418c7d:	(bad)  [ecx]
  418c7f:	and    edx,DWORD PTR [edx+ebp*4]
  418c82:	mov    edi,0xf2d510f1
  418c87:	push   0x7ac3eff7
  418c8c:	popf   
  418c8d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418c8e:	sub    al,0x6c
  418c90:	mov    WORD PTR [edx+0x35],fs
  418c93:	iret   
  418c94:	xor    DWORD PTR [esi+0x45577dae],0x1e
  418c9b:	sbb    al,0xf1
  418c9d:	lock xor eax,0xf50234e
  418ca3:	mov    eax,0xcbd31f1f
  418ca8:	xor    BYTE PTR [edi-0x4b0ff432],ch
  418cae:	popf   
  418caf:	gs jb  0x418c5b
  418cb2:	pusha  
  418cb3:	imul   esi,DWORD PTR [ebp+0x4f],0x3a8cbdce
  418cba:	aas    
  418cbb:	shl    BYTE PTR [edi+ebp*2+0x6e],1
  418cbf:	mov    ds:0x6eefff7a,al
  418cc4:	xor    BYTE PTR [ebx],0x87
  418cc7:	push   ss
  418cc8:	add    BYTE PTR [edi],al
  418cca:	jbe    0x418d28
  418ccc:	add    esp,ecx
  418cce:	pushf  
  418ccf:	fld    TBYTE PTR [eax-0x68808a3d]
  418cd5:	push   ebx
  418cd6:	ror    BYTE PTR [edi+0x12],cl
  418cd9:	cs inc esp
  418cdb:	cmc    
  418cdc:	cmp    bl,ch
  418cde:	mov    bl,0x5e
  418ce0:	stos   DWORD PTR es:[edi],eax
  418ce1:	loopne 0x418c75
  418ce3:	jb     0x418c6e
  418ce5:	sbb    bl,ah
  418ce7:	jns    0x418cac
  418ce9:	into   
  418cea:	fsub   QWORD PTR ds:0x257a60ea
  418cf0:	sbb    BYTE PTR ds:0x4702cc36,dl
  418cf6:	fstp   st(6)
  418cf8:	pop    ebp
  418cf9:	test   eax,0xa119c264
  418cfe:	enter  0x96e5,0xb3
  418d02:	sub    cl,BYTE PTR [eax]
  418d04:	xchg   esi,eax
  418d05:	xor    al,0x5d
  418d07:	xor    ah,BYTE PTR [edx]
  418d09:	add    al,0x21
  418d0b:	(bad)  
  418d0c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418d0d:	retf   0x5ee5
  418d10:	jl     0x418ce5
  418d12:	lods   al,BYTE PTR ds:[esi]
  418d13:	in     eax,0xc6
  418d15:	outs   dx,BYTE PTR ds:[esi]
  418d16:	gs into 
  418d18:	add    eax,0xae6da43c
  418d1d:	dec    eax
  418d1e:	mov    dh,0xa2
  418d20:	(bad)  
  418d21:	fsub   QWORD PTR [edx+0x71]
  418d24:	or     ebx,edi
  418d26:	dec    ecx
  418d27:	loopne 0x418d32
  418d29:	mov    edx,DWORD PTR [edx-0x1aaa1ddf]
  418d2f:	lea    esi,[esi+ebx*2]
  418d32:	shl    BYTE PTR [edi],1
  418d34:	test   ebx,ebp
  418d36:	sub    BYTE PTR [eax],bh
  418d38:	and    dh,dl
  418d3a:	scas   eax,DWORD PTR es:[edi]
  418d3b:	inc    ebx
  418d3c:	daa    
  418d3d:	lods   eax,DWORD PTR ds:[esi]
  418d3e:	cdq    
  418d3f:	shr    BYTE PTR [eax-0x7e9d4249],cl
  418d45:	out    0x15,al
  418d47:	xor    BYTE PTR [ecx+eiz*2+0x46],0xd0
  418d4c:	push   edi
  418d4d:	test   BYTE PTR [ebp+0x20064be8],dl
  418d53:	xchg   BYTE PTR [edx],al
  418d55:	(bad)  
  418d56:	fild   WORD PTR [ebp+0x46753afe]
  418d5c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418d5d:	(bad)  
  418d5e:	jecxz  0x418dd4
  418d60:	add    BYTE PTR [ecx],dh
  418d62:	add    ah,BYTE PTR [edi-0xc48c5cb]
  418d68:	scas   al,BYTE PTR es:[edi]
  418d69:	push   0xffffff89
  418d6b:	jg     0x418cef
  418d6d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418d6e:	mov    dl,BYTE PTR [ebp-0x77]
  418d71:	pop    esi
  418d72:	out    dx,eax
  418d73:	push   edi
  418d74:	or     BYTE PTR [edx+0x54b64e71],0x71
  418d7b:	jmp    0x418dbb
  418d7d:	je     0x418d06
  418d7f:	std    
  418d80:	or     eax,0xb565d9f
  418d85:	mov    eax,ds:0xefdb98c1
  418d8a:	test   BYTE PTR [ecx-0x6e7b39a7],ah
  418d90:	addr16 pop ebx
  418d92:	push   esp
  418d93:	in     eax,dx
  418d94:	bound  esp,QWORD PTR [ebx+0x46]
  418d97:	mov    ds:0x1ccd909a,eax
  418d9c:	push   esi
  418d9d:	push   eax
  418d9e:	jp     0x418de5
  418da0:	fimul  DWORD PTR [edx+0x382103b8]
  418da6:	xchg   edx,eax
  418da7:	jbe    0x418da1
  418da9:	lods   eax,DWORD PTR ds:[esi]
  418daa:	push   cs
  418dab:	push   ecx
  418dac:	mov    ebp,0x21d1447
  418db1:	das    
  418db2:	push   es
  418db3:	cmp    BYTE PTR [edi-0x66],ah
  418db6:	outs   dx,BYTE PTR ds:[esi]
  418db7:	push   eax
  418db8:	sbb    ebp,DWORD PTR [ecx+eiz*8]
  418dbb:	xlat   BYTE PTR ds:[ebx]
  418dbc:	retf   0x8c67
  418dbf:	scas   al,BYTE PTR es:[edi]
  418dc0:	popa   
  418dc1:	mov    dl,0xaa
  418dc3:	push   esp
  418dc4:	pushf  
  418dc5:	int3   
  418dc6:	xor    BYTE PTR ds:0xcc10f134,cl
  418dcc:	fdivr  QWORD PTR [ebx]
  418dce:	pushf  
  418dcf:	mov    ch,0xa6
  418dd1:	sti    
  418dd2:	xlat   BYTE PTR ds:[ebx]
  418dd3:	dec    ebp
  418dd4:	and    eax,0xab9cc7d0
  418dd9:	std    
  418dda:	std    
  418ddb:	shr    DWORD PTR [eax],cl
  418ddd:	cmc    
  418dde:	xor    al,0x24
  418de0:	nop
  418de1:	jge    0x418d94
  418de3:	xchg   ebp,eax
  418de4:	hlt    
  418de5:	lock add al,0xe6
  418de8:	mov    dl,0x40
  418dea:	inc    edi
  418deb:	jb     0x418e4d
  418ded:	adc    DWORD PTR [ebx-0x61],esi
  418df0:	sub    eax,0x7ce3d287
  418df5:	mov    ss,WORD PTR [esi-0x15d491f3]
  418dfb:	pop    ecx
  418dfc:	sub    esi,0xffffffc4
  418dff:	cli    
  418e00:	sahf   
  418e01:	mov    ds:0x5f366ba9,eax
  418e06:	pop    ss
  418e07:	pop    eax
  418e08:	cwde   
  418e09:	mov    BYTE PTR [ebp-0x4efbec7f],bh
  418e0f:	rcr    DWORD PTR [eax+0x6706bfd7],1
  418e15:	xor    ebp,ebp
  418e17:	xchg   BYTE PTR [ebx-0x67],ah
  418e1a:	jge    0x418db0
  418e1c:	cmp    eax,0x67aaf4a0
  418e21:	and    BYTE PTR [edx+eax*1-0x1702e6aa],bl
  418e28:	jbe    0x418e9f
  418e2a:	pop    DWORD PTR [ecx-0x1f]
  418e2d:	fwait
  418e2e:	test   BYTE PTR gs:[esi-0xf778bfd],bl
  418e35:	mov    dh,0x9a
  418e37:	mov    DWORD PTR [edx+eax*4],eax
  418e3a:	into   
  418e3b:	js     0x418e57
  418e3d:	cld    
  418e3e:	das    
  418e3f:	xchg   ebx,eax
  418e40:	fdiv   DWORD PTR [ebx+ecx*4-0x24]
  418e44:	ror    dl,cl
  418e46:	push   esi
  418e47:	mov    dh,0x4b
  418e49:	jl     0x418e66
  418e4b:	jl     0x418e85
  418e4d:	mov    esi,0x2d2c5a90
  418e52:	sub    ebp,DWORD PTR [ebx+0x2f]
  418e55:	push   ebx
  418e56:	push   esp
  418e57:	and    edi,DWORD PTR [ebp+0x3f6742ad]
  418e5d:	int3   
  418e5e:	fmul   QWORD PTR [ecx+0x23]
  418e61:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418e62:	push   ebp
  418e63:	or     bl,BYTE PTR ds:0xc5b35081
  418e69:	gs test BYTE PTR fs:[esi],ah
  418e6d:	or     al,0xf5
  418e6f:	fldcw  WORD PTR [edx-0x5f]
  418e72:	sub    al,ah
  418e74:	mov    esp,0xde64ca2
  418e79:	xor    bl,0x3c
  418e7c:	push   ss
  418e7d:	pop    eax
  418e7e:	xchg   ebx,eax
  418e7f:	(bad)  [edx]
  418e81:	push   edi
  418e82:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418e83:	das    
  418e84:	cli    
  418e85:	and    eax,0xddb55ff0
  418e8a:	xor    DWORD PTR [ebx],edi
  418e8c:	push   ebp
  418e8d:	inc    esp
  418e8e:	aam    0xa0
  418e90:	pop    eax
  418e91:	fistp  DWORD PTR [edi-0x52]
  418e94:	dec    esi
  418e95:	xchg   ebx,eax
  418e96:	xor    dl,BYTE PTR [ecx-0x1e100d85]
  418e9c:	push   ss
  418e9d:	out    dx,eax
  418e9e:	push   esp
  418e9f:	mov    BYTE PTR [esp+edx*2-0x4],al
  418ea3:	xor    BYTE PTR [edi],0x99
  418ea6:	pop    ecx
  418ea7:	mov    ecx,DWORD PTR ds:0x4212a4
  418ead:	add    esp,0x20
  418eb0:	add    eax,ecx
  418eb2:	mov    ecx,DWORD PTR ds:0x4212a8
  418eb8:	mov    DWORD PTR [ecx+0x1],eax
  418ebb:	push   DWORD PTR ds:0x4211a0
  418ec1:	push   DWORD PTR ds:0x421294
  418ec7:	push   DWORD PTR ds:0x421278
  418ecd:	push   DWORD PTR ds:0x421024
  418ed3:	push   DWORD PTR ds:0x421258
  418ed9:	mov    eax,DWORD PTR [ebp-0x30]
  418edc:	push   DWORD PTR ds:0x421340
  418ee2:	call   eax
  418ee4:	mov    ecx,DWORD PTR ds:0x42121c
  418eea:	lea    eax,[ebp+0x4]
  418eed:	add    DWORD PTR [eax],ecx
  418eef:	pop    edi
  418ef0:	pop    esi
  418ef1:	leave  
  418ef2:	ret    0x8
  418ef5:	jmp    0x418ebc
  418ef7:	sbb    bl,BYTE PTR [ebp-0x81020c2]
  418efd:	out    0xc,eax
  418eff:	stc    
  418f00:	dec    ecx
  418f01:	jne    0x418ef6
  418f03:	adc    DWORD PTR [ebp+0x1cdd],esp
  418f09:	xor    eax,0x8a000003
  418f0e:	ret    0x9717
  418f11:	pop    esp
  418f12:	inc    ebp
  418f13:	loop   0x418f66
  418f15:	xchg   ebp,eax
  418f16:	sbb    bl,BYTE PTR [eax]
  418f18:	repz or al,0x82
  418f1b:	test   esi,ebx
  418f1d:	adc    ecx,DWORD PTR [esi+0x1617bbfd]
  418f23:	pusha  
  418f24:	in     eax,0x28
  418f26:	mov    ecx,?
  418f28:	jmp    0x7175ba8
  418f2d:	cmp    edi,DWORD PTR [ebx+eiz*1-0x7bbab14a]
  418f34:	loop   0x418f27
  418f36:	dec    esi
  418f37:	cmp    eax,0xd36e6535
  418f3c:	imul   edx,DWORD PTR [ecx],0x524be84d
  418f42:	bnd jo 0x418faa
  418f45:	mov    es,WORD PTR [eax]
  418f47:	jae    0x418ee9
  418f49:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418f4a:	and    BYTE PTR [edi-0x49],cl
  418f4d:	xchg   DWORD PTR [ecx],edx
  418f4f:	and    cl,bh
  418f51:	cmp    eax,0xba169b1d
  418f56:	or     eax,DWORD PTR ds:0x2f7f59f6
  418f5c:	pop    es
  418f5d:	imul   eax,DWORD PTR [ecx+0x1d05d7e0],0xffffff9d
  418f64:	out    dx,eax
  418f65:	mov    edx,0xd9a88d1b
  418f6a:	dec    edi
  418f6b:	cmp    dl,BYTE PTR [edi+0xf]
  418f6e:	pop    ds
  418f6f:	test   al,0x7e
  418f71:	shl    DWORD PTR [eax-0x7e95f131],1
  418f77:	shl    eax,1
  418f79:	mov    ds:0x515ab354,eax
  418f7e:	or     BYTE PTR [ecx-0x1fd5ffd2],0x17
  418f85:	cmp    al,0x5a
  418f87:	rcr    DWORD PTR [edx],0x8a
  418f8a:	mov    edi,0x56d2e95a
  418f8f:	push   edi
  418f90:	mov    ecx,0x1c60f9d8
  418f95:	sbb    edi,edx
  418f97:	xor    bl,BYTE PTR [edi+ebx*2+0x1]
  418f9b:	xor    edx,edx
  418f9d:	or     DWORD PTR [ecx-0x62],edx
  418fa0:	xchg   esp,eax
  418fa1:	pop    edi
  418fa2:	ret    0x339a
  418fa5:	push   ds
  418fa6:	cwde   
  418fa7:	mov    edi,0xe74ac5fb
  418fac:	pop    edx
  418fad:	jae    0x418f56
  418faf:	inc    esi
  418fb0:	sbb    BYTE PTR [ebx],bh
  418fb2:	ror    DWORD PTR [ebx+ebx*8-0x4710d181],cl
  418fb9:	cdq    
  418fba:	js     0x418f94
  418fbc:	dec    edi
  418fbd:	push   esi
  418fbe:	neg    DWORD PTR ds:0xcde2b640
  418fc4:	adc    BYTE PTR [ebx+ecx*1+0x4b49336f],0x8c
  418fcc:	and    BYTE PTR [eax+0x79b6b5a],bl
  418fd2:	(bad)  
  418fd3:	out    dx,eax
  418fd4:	pop    ss
  418fd5:	push   edi
  418fd6:	jge    0x418fd2
  418fd8:	sub    DWORD PTR [esi+0x10],ecx
  418fdb:	sti    
  418fdc:	in     eax,dx
  418fdd:	jmp    0x4388044d
  418fe2:	das    
  418fe3:	cmp    al,0x24
  418fe5:	fldcw  WORD PTR [esi-0x40]
  418fe8:	cld    
  418fe9:	aam    0x6a
  418feb:	ret    
  418fec:	adc    al,0x4
  418fee:	and    BYTE PTR [edi-0x41],cl
  418ff1:	cli    
  418ff2:	or     esi,eax
  418ff4:	xlat   BYTE PTR ds:[ebx]
  418ff5:	arpl   WORD PTR [ebx+0x7754261d],bp
  418ffb:	data16 (bad) 
  418ffd:	mov    dh,0x5
  418fff:	nop    ebx
  419002:	mov    cl,0x41
  419004:	mov    al,ds:0xc40bae59
  419009:	dec    edx
  41900a:	xchg   BYTE PTR [ebx+0x52],bh
  41900d:	retf   
  41900e:	fwait
  41900f:	inc    eax
  419011:	fnstcw WORD PTR [eax+0x14]
  419014:	or     al,0xaa
  419016:	int    0x31
  419018:	mov    ds:0x100dd748,eax
  41901d:	(bad)  
  41901e:	jecxz  0x418fbf
  419020:	sbb    DWORD PTR [ebp-0x20],eax
  419023:	stos   DWORD PTR es:[edi],eax
  419024:	sub    DWORD PTR [ecx-0x55],edx
  419027:	loope  0x4190a6
  419029:	adc    ah,BYTE PTR [esi]
  41902b:	mov    ch,0x49
  41902d:	or     esi,DWORD PTR [esp+ebp*1-0xc60aad5]
  419034:	inc    ebx
  419035:	addr16 xchg edx,edx
  419038:	inc    esp
  419039:	das    
  41903a:	mov    WORD PTR [eax],gs
  41903c:	xor    ah,BYTE PTR [ecx+0x6df53efc]
  419042:	mov    ebx,0x3f448714
  419047:	cmp    BYTE PTR [esi+eax*4-0x22],bh
  41904b:	div    BYTE PTR [edx-0x5e63d62f]
  419051:	mov    edx,0x61ff7071
  419056:	je     0x418fe2
  419058:	scas   eax,DWORD PTR es:[edi]
  419059:	sub    al,0xbc
  41905b:	ret    0xc1c3
  41905e:	mov    eax,ds:0xcf8b49cb
  419063:	scas   eax,DWORD PTR es:[edi]
  419064:	test   DWORD PTR [ebx],0xc9f7400d
  41906a:	outs   dx,BYTE PTR ds:[esi]
  41906b:	xor    esp,DWORD PTR cs:[ebx+eax*8+0x708f1c0b]
  419073:	or     eax,0xed101a45
  419078:	shl    DWORD PTR [ebp-0x18ca8eb9],0xf4
  41907f:	jle    0x41909b
  419081:	mov    ebp,0x4ff9f452
  419086:	dec    esi
  419087:	adc    BYTE PTR [edi-0x7156b699],ch
  41908d:	xchg   DWORD PTR [ebp-0x1ce371f6],edx
  419093:	adc    esi,ebx
  419095:	or     al,0x58
  419097:	dec    edx
  419098:	arpl   ax,bx
  41909a:	sbb    DWORD PTR [ecx],ebp
  41909c:	pop    esi
  41909d:	mov    ds:0x7a88de28,eax
  4190a2:	fld    DWORD PTR [ecx+0x2b]
  4190a5:	xchg   ebx,eax
  4190a6:	imul   esp,ebx,0x70
  4190a9:	(bad)  
  4190aa:	stc    
  4190ab:	mov    esp,0xf7e71d6c
  4190b0:	mov    ebp,0x9a9e33d6
  4190b5:	inc    ebp
  4190b6:	or     BYTE PTR [esi-0x2a87b40c],0xa2
  4190bd:	or     DWORD PTR ds:0x68eca423,edx
  4190c3:	test   DWORD PTR [edx+0x75],edi
  4190c6:	(bad)  
  4190c7:	lods   al,BYTE PTR ds:[esi]
  4190c8:	repz inc ebx
  4190ca:	xchg   esp,eax
  4190cb:	jge    0x4190d5
  4190cd:	jle    0x4190b6
  4190cf:	add    BYTE PTR [edx+0x47],bl
  4190d2:	int3   
  4190d3:	ins    DWORD PTR es:[edi],dx
  4190d4:	(bad)  
  4190d5:	sti    
  4190d6:	mov    ah,0xc
  4190d8:	popf   
  4190d9:	mov    dl,0xc5
  4190db:	push   es
  4190dc:	repnz scas eax,DWORD PTR es:[edi]
  4190de:	frstor [ebx]
  4190e0:	lds    edi,FWORD PTR [ebp+0x1396c8f8]
  4190e6:	xchg   DWORD PTR [eax-0x7b7f29e],edx
  4190ec:	lahf   
  4190ed:	out    0x98,eax
  4190ef:	into   
  4190f0:	sub    al,0x9c
  4190f2:	and    BYTE PTR [edx],ah
  4190f4:	fsubr  st(4),st
  4190f6:	push   es
  4190f7:	leave  
  4190f8:	outs   dx,DWORD PTR es:[esi]
  4190fa:	das    
  4190fb:	popa   
  4190fc:	loope  0x419116
  4190fe:	shl    DWORD PTR [ecx+0x9],0xe1
  419102:	sub    edx,DWORD PTR [edx+ebx*4+0x7081eb6]
  419109:	sbb    edx,ecx
  41910b:	arpl   WORD PTR [ebp+ecx*4+0x2],di
  41910f:	jae    0x4190bb
  419111:	xchg   edi,eax
  419112:	daa    
  419113:	sbb    BYTE PTR [ebp+0x27],dl
  419116:	in     al,0x8f
  419118:	dec    ebp
  419119:	adc    dh,BYTE PTR ds:0xd018c945
  41911f:	pushf  
  419120:	mov    ds:0x65c84c64,eax
  419125:	jae    0x419149
  419127:	xchg   edi,eax
  419128:	jns    0x41918f
  41912a:	jae    0x41915c
  41912c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41912d:	jg     0x419190
  41912f:	push   ebx
  419130:	fadd   st,st(2)
  419132:	add    bh,BYTE PTR [edx-0x1f7eb4a4]
  419138:	pop    es
  419139:	out    0xda,eax
  41913b:	ins    BYTE PTR es:[edi],dx
  41913c:	mov    dh,BYTE PTR [edx+0x7b]
  41913f:	(bad)  [esp+ecx*2+0x43]
  419143:	sbb    al,0xb5
  419145:	(bad)  
  419147:	dec    esp
  419148:	adc    DWORD PTR [edx],ebp
  41914a:	jnp    0x4190f0
  41914c:	mov    esi,0x5065884f
  419151:	push   cs
  419152:	or     esi,DWORD PTR [ebx+edi*4-0x3fa3422]
  419159:	outs   dx,BYTE PTR ds:[esi]
  41915a:	push   edi
  41915b:	jae    0x4191d4
  41915d:	adc    ch,BYTE PTR [eax-0x761d0ac3]
  419163:	xor    eax,0x78e565f6
  419168:	push   esi
  419169:	push   ebp
  41916a:	or     edx,edi
  41916c:	dec    edi
  41916d:	adc    dh,BYTE PTR [esp+ebx*8]
  419170:	jmp    0x41915f
  419172:	(bad)  [edx+0x0]
  419175:	shl    BYTE PTR [ecx-0x14b00c14],1
  41917b:	and    al,0x46
  41917d:	jg     0x419113
  41917f:	cli    
  419180:	mov    dh,0x1e
  419182:	mov    ds:0x6adc3590,eax
  419187:	stos   DWORD PTR es:[edi],eax
  419188:	outs   dx,BYTE PTR ds:[esi]
  419189:	ds sbb al,0xa1
  41918c:	int    0x98
  41918e:	call   0xd00f:0xe501939e
  419195:	or     edx,edi
  419197:	fcom   QWORD PTR [esi]
  419199:	cwde   
  41919a:	rol    BYTE PTR [ecx-0x243bb2ee],1
  4191a0:	lock inc ecx
  4191a2:	sbb    al,bh
  4191a4:	out    dx,al
  4191a5:	adc    DWORD PTR [ebp+0x7b],edi
  4191a8:	adc    ah,al
  4191aa:	clc    
  4191ab:	mov    al,0x3
  4191ad:	mov    esp,0x52a503b3
  4191b2:	out    0xb8,eax
  4191b4:	(bad)  
  4191b5:	mov    esp,0xfa8ac0de
  4191ba:	loopne 0x419165
  4191bc:	popf   
  4191bd:	out    0xde,al
  4191bf:	test   BYTE PTR [edi+0x70],bh
  4191c2:	adc    DWORD PTR [esi+0x5b],edx
  4191c5:	add    eax,0x7ab78cf1
  4191ca:	dec    ebx
  4191cb:	das    
  4191cc:	mov    ds:0xa0b37a47,eax
  4191d1:	mov    ah,0x7b
  4191d3:	inc    ebp
  4191d4:	pop    esp
  4191d5:	nop
  4191d6:	daa    
  4191d7:	sub    cl,al
  4191d9:	dec    ebp
  4191da:	outs   dx,BYTE PTR ds:[esi]
  4191db:	sets   BYTE PTR [esi-0x34]
  4191df:	inc    esp
  4191e0:	loopne 0x41916d
  4191e2:	sub    DWORD PTR ds:0x2485f48a,edx
  4191e8:	inc    ebp
  4191e9:	fsub   QWORD PTR [edi-0x71]
  4191ec:	inc    edx
  4191ed:	dec    ebp
  4191ee:	inc    edx
  4191ef:	jp     0x4191d8
  4191f1:	(bad)  
  4191f2:	repz xchg edi,eax
  4191f4:	je     0x4191a5
  4191f6:	scas   eax,DWORD PTR es:[edi]
  4191f7:	sbb    ch,BYTE PTR [ecx+eax*1-0x15]
  4191fb:	xor    bh,BYTE PTR [esi+0x59]
  4191fe:	adc    eax,0x1376f7b5
  419203:	inc    edx
  419204:	loop   0x41922e
  419206:	xor    bl,ch
  419208:	shl    DWORD PTR [esi+0x460e6895],0x46
  41920f:	cli    
  419210:	push   ebx
  419211:	sbb    ebp,edx
  419213:	inc    ecx
  419214:	sar    BYTE PTR [ecx+ebx*8+0x2d3d1306],cl
  41921b:	sar    DWORD PTR [esi],0xa9
  41921e:	inc    edx
  41921f:	sbb    eax,0x673af080
  419224:	scas   al,BYTE PTR es:[edi]
  419225:	pop    esi
  419226:	jmp    0x4191f4
  419228:	or     al,0x6
  41922a:	mov    bh,BYTE PTR [eax-0x7d]
  41922d:	mov    ecx,0xd46bae73
  419232:	stos   DWORD PTR es:[edi],eax
  419233:	test   ah,bl
  419235:	and    ebx,0x9
  419238:	in     eax,dx
  419239:	ja     0x4191ce
  41923b:	inc    edx
  41923c:	out    0xb7,al
  41923e:	ss repnz sub al,0x70
  419242:	push   ebp
  419243:	mov    ebp,esp
  419245:	push   ecx
  419246:	and    DWORD PTR ds:0x4214ec,0x0
  419250:	jmp    0x419260
  419255:	mov    eax,ds:0x4214ec
  41925a:	inc    eax
  41925b:	mov    ds:0x4214ec,eax
  419260:	cmp    DWORD PTR ds:0x4214ec,0x11
  419267:	jae    0x4192ad
  41926d:	cmp    DWORD PTR ds:0x4214ec,0x5
  419274:	jne    0x41928b
  41927a:	push   DWORD PTR [ebp-0x1c]
  41927d:	push   DWORD PTR [ebp-0xc]
  419280:	push   0x42160f
  419285:	call   DWORD PTR ds:0x41f3f8
  41928b:	cmp    DWORD PTR ds:0x4214ec,0x4
  419292:	jne    0x4192a3
  419298:	mov    eax,ds:0x4214ec
  41929d:	inc    eax
  41929e:	mov    ds:0x4214ec,eax
  4192a3:	jmp    0x419255
  4192a8:	add    eax,0x7a55
  4192ad:	push   ecx
  4192ae:	and    ecx,ecx
  4192b0:	push   esi
  4192b1:	sub    DWORD PTR ds:0x4236b4,ebx
  4192b7:	push   0x4
  4192b9:	jmp    0x419539
  4192be:	push   edi
  4192bf:	pop    ss
  4192c0:	cmp    dl,BYTE PTR [edx-0x28004086]
  4192c6:	cmp    BYTE PTR [edi+0xb],bh
  4192c9:	mov    ebp,0x593b418e
  4192ce:	mov    al,ds:0x63000166
  4192d3:	add    al,BYTE PTR [eax]
  4192d5:	add    BYTE PTR [edi-0x2b],ah
  4192d8:	fs mov ah,0xfc
  4192db:	pusha  
  4192dc:	push   ebx
  4192dd:	jle    0x41934c
  4192df:	in     al,dx
  4192e0:	bound  ebp,QWORD PTR [edi]
  4192e2:	scas   eax,DWORD PTR es:[edi]
  4192e3:	adc    ebp,ebp
  4192e5:	push   edi
  4192e6:	call   0x79b673de
  4192eb:	pop    ebp
  4192ec:	sbb    DWORD PTR [ecx-0x54],edx
  4192ef:	test   eax,0x1522d0e
  4192f4:	mov    ds:0x32a6fe2f,al
  4192f9:	(bad)  
  4192fa:	jnp    0x419357
  4192fc:	mov    dl,0xe0
  4192fe:	push   esi
  4192ff:	sub    ebp,DWORD PTR [esi-0x22]
  419302:	jb     0x41929f
  419304:	js     0x419339
  419306:	xchg   esi,eax
  419307:	(bad)  
  419308:	out    dx,eax
  419309:	inc    ebx
  41930a:	lea    ecx,[edx]
  41930c:	jmp    0xbd9f58a8
  419311:	adc    eax,DWORD PTR [edi]
  419313:	pushf  
  419314:	loopne 0x41931e
  419316:	into   
  419317:	rcl    DWORD PTR [esi+0x4f658a6c],0x9
  41931e:	mov    eax,0xf4faaff6
  419323:	repz icebp 
  419325:	in     eax,dx
  419326:	retf   0x123e
  419329:	mov    eax,ds:0xd4d83605
  41932e:	retf   
  41932f:	fsub   QWORD PTR [edx-0x2d]
  419332:	test   DWORD PTR [esp+esi*2-0x39],ebx
  419336:	jle    0x4192e8
  419338:	fsub   DWORD PTR [ebx+0x4ca418ad]
  41933e:	stos   BYTE PTR es:[edi],al
  41933f:	mov    ah,0x82
  419342:	mov    ch,0xca
  419344:	jne    0x41934c
  419346:	or     ebx,DWORD PTR ds:0x76104c9
  41934c:	mov    ebx,0xafbbbf11
  419351:	call   0x7a1:0x5156a259
  419358:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419359:	bnd jmp 0x419360
  41935c:	sub    eax,0x6c0eff6c
  419361:	sub    BYTE PTR [edi-0x79],cl
  419364:	shl    DWORD PTR [eax],cl
  419366:	add    DWORD PTR [ebx+ebx*1],eax
  419369:	(bad)  
  41936a:	sahf   
  41936b:	adc    bh,ch
  41936d:	shr    esi,1
  41936f:	shl    DWORD PTR [ecx+0x5c77fe41],0xcd
  419376:	dec    esp
  419377:	daa    
  419378:	push   edx
  419379:	mov    ebp,0x4c992141
  41937e:	cmp    eax,0x994db76b
  419383:	mov    bl,BYTE PTR [ecx-0x5fb3e9d8]
  419389:	iret   
  41938a:	or     bl,BYTE PTR [esi+0x714e5174]
  419390:	es inc ebx
  419392:	stc    
  419393:	pop    ebx
  419394:	jb     0x4193af
  419396:	mov    al,BYTE PTR [bp+si+0x1539]
  41939b:	ins    DWORD PTR es:[edi],dx
  41939c:	mov    ch,0x35
  41939e:	jno    0x4193d5
  4193a0:	inc    ecx
  4193a1:	mov    esp,fs
  4193a3:	ins    BYTE PTR es:[edi],dx
  4193a4:	pop    ds
  4193a5:	rol    BYTE PTR [eax],1
  4193a7:	mov    BYTE PTR [ebp+0x8660df],bl
  4193ad:	or     dh,BYTE PTR [ebx]
  4193af:	mov    al,ds:0xc749ca58
  4193b4:	fwait
  4193b5:	jo     0x41933c
  4193b7:	enter  0xd787,0x5b
  4193bb:	fdiv   DWORD PTR ss:0xc7ca9483
  4193c2:	ds xchg esi,eax
  4193c4:	sti    
  4193c5:	dec    edi
  4193c6:	xchg   ebp,eax
  4193c7:	cli    
  4193c8:	sub    bl,0x6b
  4193cb:	addr16 jmp 0x2600:0x8c8afe8e
  4193d3:	int    0xc5
  4193d5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4193d6:	or     al,ch
  4193d8:	cwde   
  4193d9:	jo     0x41938e
  4193db:	mov    WORD PTR ds:0xac422218,fs
  4193e1:	xchg   edx,eax
  4193e2:	jnp    0x419412
  4193e4:	pop    edi
  4193e5:	add    eax,0xc685fa6f
  4193ea:	xor    al,al
  4193ec:	dec    edx
  4193ed:	sub    al,0xd
  4193ef:	add    BYTE PTR [ecx-0x76],dl
  4193f2:	sub    al,al
  4193f4:	js     0x4193a3
  4193f6:	shl    BYTE PTR [ebp-0x6ec9c252],0x3c
  4193fd:	mov    bl,ch
  4193ff:	inc    esi
  419400:	push   0x1
  419402:	fs nop
  419404:	push   edx
  419405:	sub    bh,0x58
  419408:	pop    edx
  419409:	sub    dl,bh
  41940b:	enter  0xc581,0x63
  41940f:	inc    ebx
  419410:	pop    eax
  419411:	int    0xb3
  419413:	mov    ah,0x9d
  419415:	cmp    eax,0x165e4bc0
  41941a:	adc    dl,BYTE PTR [edx]
  41941c:	adc    esi,ecx
  41941e:	mov    DWORD PTR [ecx],ecx
  419420:	sti    
  419421:	retf   0xd084
  419424:	sub    eax,0x7caf8da5
  419429:	les    eax,FWORD PTR [edi-0x34d13394]
  41942f:	sub    ch,BYTE PTR fs:[ebx+0x37de5b4a]
  419436:	dec    edx
  419437:	test   eax,0x8eda8d36
  41943c:	cli    
  41943d:	mov    ah,0x3c
  41943f:	sti    
  419440:	not    BYTE PTR [ebp+0x30d4a54e]
  419446:	out    dx,eax
  419447:	mov    esi,0x26cc43e4
  41944c:	ss push esp
  41944e:	cmp    BYTE PTR [ecx],dh
  419450:	cmp    dl,dl
  419452:	mov    ds:0x704e7729,eax
  419457:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419458:	pop    ds
  419459:	test   DWORD PTR [eax],0x92292b6c
  41945f:	popf   
  419460:	leave  
  419461:	adc    edx,DWORD PTR [ebp-0x2b30cf77]
  419467:	pop    edi
  419468:	out    dx,al
  419469:	jae    0x419438
  41946b:	pop    edi
  41946c:	mov    BYTE PTR [esi],dh
  41946e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41946f:	mov    eax,0xcc56067e
  419474:	(bad)  
  419475:	adc    DWORD PTR [ebx-0x5a],ecx
  419478:	mov    bl,0xc5
  41947a:	xchg   cl,cl
  41947c:	xchg   ecx,eax
  41947d:	lds    esp,FWORD PTR [ebp-0xb79f81d]
  419483:	scas   eax,DWORD PTR es:[edi]
  419484:	mov    eax,ds:0x9ca374bb
  419489:	dec    esi
  41948a:	pop    ds
  41948b:	(bad)  
  41948c:	int3   
  41948d:	popa   
  41948e:	nop
  41948f:	inc    esp
  419490:	add    al,0x1e
  419492:	push   0xffffffea
  419494:	jnp    0x419479
  419496:	ss cwde 
  419498:	push   cs
  419499:	les    edi,FWORD PTR [edi]
  41949b:	fdivr  DWORD PTR [edx+0x40bb2508]
  4194a1:	es addr16 inc ebp
  4194a4:	mov    bh,0xce
  4194a6:	xchg   ecx,eax
  4194a7:	pop    es
  4194a8:	outs   dx,DWORD PTR ds:[esi]
  4194a9:	pop    esi
  4194aa:	xor    ah,cl
  4194ac:	aaa    
  4194ad:	push   edx
  4194ae:	and    ah,ah
  4194b0:	dec    ecx
  4194b1:	dec    ebp
  4194b2:	ss xor edx,ebp
  4194b5:	mov    cs,WORD PTR [esi]
  4194b7:	out    dx,al
  4194b8:	(bad)  
  4194b9:	cdq    
  4194ba:	call   0xdfa09d82
  4194bf:	adc    DWORD PTR [ebx+ebp*1+0x42e8a82e],ebp
  4194c6:	pop    ecx
  4194c7:	ret    0x976d
  4194ca:	or     DWORD PTR [edi-0x2b],eax
  4194cd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4194ce:	push   ebp
  4194cf:	jnp    0x419474
  4194d1:	leave  
  4194d2:	push   edi
  4194d3:	pop    esi
  4194d4:	daa    
  4194d5:	and    BYTE PTR [edx],ch
  4194d7:	(bad)  
  4194d8:	xor    eax,0xd7e96321
  4194dd:	fisubr DWORD PTR [edi-0x30]
  4194e0:	in     eax,dx
  4194e1:	hlt    
  4194e2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4194e3:	mov    dl,0x56
  4194e5:	int    0x14
  4194e7:	xlat   BYTE PTR ds:[ebx]
  4194e8:	cmc    
  4194e9:	adc    dh,0x5a
  4194ec:	push   edi
  4194ed:	mov    ch,0x8a
  4194ef:	les    edx,FWORD PTR [esi]
  4194f1:	xchg   edx,eax
  4194f2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4194f3:	ror    DWORD PTR [eax-0x4b],0xb3
  4194f7:	mov    cl,0x4c
  4194f9:	adc    al,0xf2
  4194fb:	mul    DWORD PTR [edx]
  4194fd:	into   
  4194fe:	mov    ebx,DWORD PTR ds:0x35be4191
  419504:	retf   0x267f
  419507:	scas   al,BYTE PTR es:[edi]
  419508:	not    BYTE PTR [ebx+0x18]
  41950b:	mov    eax,ds:0x8b70341d
  419510:	jnp    0x41958b
  419512:	xchg   edi,eax
  419513:	mov    eax,ds:0xcc10fd60
  419518:	mov    ecx,0xfe4ad883
  41951d:	add    BYTE PTR [ebx],dl
  41951f:	add    DWORD PTR [ebx-0x29],ebx
  419522:	aas    
  419523:	pusha  
  419524:	add    eax,0x44f18174
  419529:	xchg   edx,eax
  41952a:	sahf   
  41952b:	dec    ecx
  41952c:	stos   BYTE PTR es:[edi],al
  41952d:	fsub   QWORD PTR [edx]
  41952f:	push   edi
  419530:	mov    eax,0x923ccc12
  419535:	push   eax
  419536:	pop    edx
  419537:	int3   
  419538:	jge    0x419592
  41953a:	add    DWORD PTR ds:0x4236ac,ecx
  419540:	sub    eax,DWORD PTR ds:0x42129c
  419546:	mov    DWORD PTR [ebp-0x4],0xffffe03f
  41954d:	and    DWORD PTR ds:0x42372c,0x238c
  419557:	mov    ecx,DWORD PTR ds:0x421228
  41955d:	mov    esi,DWORD PTR [ecx]
  41955f:	add    esi,eax
  419561:	lea    eax,[ebp-0x8]
  419564:	push   eax
  419565:	mov    eax,DWORD PTR [ebp-0x4]
  419568:	xor    eax,0x300a
  41956d:	add    eax,0x300b
  419572:	push   eax
  419573:	mov    eax,ds:0x4211c0
  419578:	push   esi
  419579:	push   DWORD PTR ds:0x42129c
  41957f:	push   0x4
  419581:	push   0x1
  419583:	push   0x421116
  419588:	push   DWORD PTR [eax]
  41958a:	call   0x405628
  41958f:	add    esp,0x20
  419592:	test   eax,eax
  419594:	jne    0x41959c
  41959a:	xor    esi,esi
  41959c:	mov    eax,esi
  41959e:	pop    esi
  41959f:	leave  
  4195a0:	ret    
  4195a1:	ss pop ss
  4195a3:	inc    edi
  4195a4:	and    eax,0x17767567
  4195a9:	or     esp,eax
  4195ab:	xor    eax,0xd8301a1f
  4195b0:	call   DWORD PTR [edx]
  4195b2:	and    BYTE PTR [eax],al
  4195b4:	add    BYTE PTR ds:0x34000003,dh
  4195ba:	sti    
  4195bb:	into   
  4195bc:	icebp  
  4195bd:	outs   dx,BYTE PTR ds:[esi]
  4195be:	cmc    
  4195bf:	in     eax,dx
  4195c0:	retf   0xefd4
  4195c3:	adc    BYTE PTR [ebp-0x3d],ch
  4195c6:	pop    ecx
  4195c7:	jae    0x4195cc
  4195c9:	lock pop edi
  4195cb:	scas   eax,DWORD PTR es:[edi]
  4195cc:	dec    esi
  4195cd:	repnz mov ch,0x52
  4195d1:	and    DWORD PTR [esi+0x6f],ecx
  4195d4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4195d5:	xchg   edx,eax
  4195d6:	(bad)  
  4195d7:	pop    ebp
  4195d8:	cmp    eax,0x6ddbdd25
  4195dd:	mov    cl,0xfa
  4195df:	pop    ss
  4195e0:	rcl    BYTE PTR [eax+0x76894cf4],1
  4195e6:	mov    al,ds:0x903e5810
  4195eb:	dec    ecx
  4195ec:	ss test dl,0xa1
  4195f0:	jnp    0x41966c
  4195f2:	cld    
  4195f3:	inc    eax
  4195f4:	xchg   edx,eax
  4195f5:	jb     0x4195a4
  4195f7:	mov    edx,eax
  4195f9:	hlt    
  4195fa:	xor    ch,BYTE PTR [ecx+0x30]
  4195fd:	push   cs
  4195fe:	in     al,0x65
  419600:	sub    eax,0xc5d480b8
  419605:	retf   0x1fd9
  419608:	neg    BYTE PTR [ebx+0x5fc094b0]
  41960e:	sbb    BYTE PTR [bx+si],al
  419611:	test   DWORD PTR [esi+0x6e],0x4ab92ad3
  419618:	jl     0x4195fb
  41961a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41961b:	ror    ecx,1
  41961d:	mov    esi,DWORD PTR [ebx-0x15d6d81e]
  419623:	(bad)  
  419625:	clc    
  419626:	arpl   WORD PTR [esi+0x69],cx
  419629:	(bad)  
  41962a:	mov    esp,0x2a654b0c
  41962f:	jmp    0x419650
  419631:	pop    ebp
  419632:	lea    edi,[esi+0x4a]
  419635:	imul   esi,DWORD PTR ds:0x92c1dbf9,0xffffff92
  41963c:	xchg   ebx,eax
  41963d:	ss pushf 
  41963f:	push   0x73dfea4e
  419644:	hlt    
  419645:	gs addr16 test edi,0xa4b80f1d
  41964d:	sub    bl,cl
  41964f:	cwde   
  419650:	sub    ecx,DWORD PTR [esi-0x6db936e]
  419656:	mov    ah,0x4b
  419658:	loope  0x41967f
  41965a:	pop    ss
  41965b:	jp     0x41960f
  41965d:	loopne 0x4195ee
  41965f:	sbb    ch,cl
  419661:	jae    0x41966b
  419663:	xor    ch,cl
  419665:	inc    edi
  419666:	jne    0x41969f
  419668:	xchg   edi,eax
  419669:	or     eax,0x6af33f63
  41966e:	push   ebp
  41966f:	jne    0x4196c2
  419671:	int    0xea
  419673:	test   eax,0xfa08295
  419678:	or     al,0x61
  41967a:	add    ecx,DWORD PTR [edi+ecx*4+0x79]
  41967e:	mov    ecx,0x772d7b9e
  419683:	bnd jb 0x4196cc
  419686:	mov    eax,ds:0x4acb56bd
  41968b:	mov    eax,ds:0x5905093a
  419690:	ror    BYTE PTR [ebx-0x7c],cl
  419693:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419694:	pusha  
  419695:	mov    ds:0xf7b09a47,eax
  41969a:	dec    ebp
  41969b:	mov    ds:0x1994e0db,al
  4196a0:	xor    cl,ah
  4196a2:	call   0xfd72ec94
  4196a7:	cmp    bl,BYTE PTR [esi+0x4ab846de]
  4196ad:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4196ae:	dec    ebp
  4196af:	cmp    BYTE PTR [ebx-0x4b8c2871],dh
  4196b5:	(bad)  
  4196b6:	test   DWORD PTR [ecx+0x7],0xfb99c39b
  4196bd:	mov    edi,0x3d8fb032
  4196c2:	push   ecx
  4196c3:	sub    al,0x1f
  4196c5:	into   
  4196c6:	jmp    0x5b1cbb34
  4196cb:	bound  ebp,QWORD PTR [eax-0x4e]
  4196ce:	xchg   ecx,eax
  4196cf:	jo     0x41966a
  4196d1:	icebp  
  4196d2:	mov    esi,0x6340b869
  4196d7:	loop   0x4196e0
  4196d9:	cmp    al,0xaa
  4196db:	xchg   BYTE PTR [eax+ebx*2],ah
  4196de:	arpl   WORD PTR [esi+0x4e],bx
  4196e1:	dec    ebp
  4196e2:	inc    edx
  4196e3:	dec    esi
  4196e4:	test   bl,0x48
  4196e7:	mov    al,0x92
  4196e9:	scas   al,BYTE PTR es:[edi]
  4196ea:	cmc    
  4196eb:	mov    BYTE PTR [edi],dh
  4196ed:	je     0x41974d
  4196ef:	ds pop ss
  4196f1:	pop    esp
  4196f2:	jnp    0x419765
  4196f4:	lods   eax,DWORD PTR ss:[esi]
  4196f6:	sbb    al,0xea
  4196f8:	xchg   ecx,eax
  4196f9:	jl     0x4196ae
  4196fb:	or     edi,DWORD PTR [ebx-0x3a4f8c04]
  419701:	or     eax,0x9882b384
  419706:	(bad)  
  419707:	loope  0x41968b
  419709:	or     edx,0xffffffbb
  41970c:	jl     0x419745
  41970e:	rcl    BYTE PTR [edx],0x6e
  419711:	ja     0x4196c9
  419713:	sbb    edi,DWORD PTR [ecx+eax*4]
  419716:	lock xor al,0xdd
  419719:	dec    eax
  41971a:	call   0x7c95bb48
  41971f:	pop    ecx
  419720:	enter  0x3f8b,0x6f
  419724:	push   edi
  419725:	jmp    0x419786
  419727:	xchg   ebp,eax
  419728:	xchg   esp,eax
  419729:	test   al,0x26
  41972b:	rcl    BYTE PTR [edx+esi*1+0x54],0xa6
  419730:	mov    al,0x4e
  419732:	jg     0x4196e0
  419734:	iret   
  419735:	icebp  
  419736:	and    cl,ch
  419738:	jecxz  0x419721
  41973a:	lock fisttp WORD PTR gs:[eax-0x3bab397]
  419742:	outs   dx,DWORD PTR ds:[esi]
  419743:	mov    edx,0x2d7b65ec
  419749:	push   edi
  41974a:	jmp    0x4196df
  41974c:	test   eax,0xdf9cc653
  419751:	cli    
  419752:	leave  
  419753:	jns    0x419770
  419755:	sub    BYTE PTR [ebx+0x7d],ch
  419758:	dec    ebp
  419759:	dec    esp
  41975a:	jo     0x419704
  41975c:	xchg   BYTE PTR [esi+ebp*2],al
  41975f:	adc    BYTE PTR [ecx],ch
  419761:	push   es
  419762:	add    ebx,ebx
  419764:	fistp  WORD PTR [edi+0x729ee19f]
  41976a:	fcom   st(2)
  41976c:	or     ecx,DWORD PTR [edx-0x57]
  41976f:	mov    al,0x99
  419772:	pop    edi
  419773:	jge    0x41978d
  419775:	mov    BYTE PTR [ebp+0x34],cl
  419778:	mov    esp,0x4c1f206b
  41977d:	ins    DWORD PTR es:[edi],dx
  41977e:	(bad)  
  41977f:	repz out dx,al
  419781:	bound  edi,QWORD PTR [edx+eiz*1-0x52]
  419785:	loopne 0x419760
  419787:	jnp    0x6faf3020
  41978d:	or     DWORD PTR [ebx+0x40],ebx
  419790:	xor    eax,0x335516cd
  419795:	dec    ebp
  419796:	fnstsw WORD PTR [ecx+edi*8-0x42]
  41979a:	xchg   ebx,eax
  41979b:	pop    esi
  41979c:	clc    
  41979d:	(bad)  
  41979e:	rcl    BYTE PTR [eax-0x7e],0xb1
  4197a2:	daa    
  4197a3:	adc    al,0xe6
  4197a5:	enter  0x7595,0x2d
  4197a9:	lods   eax,DWORD PTR ds:[esi]
  4197aa:	mov    ch,ah
  4197ac:	jmp    0x5a52:0x7458c5db
  4197b3:	rol    ch,0xab
  4197b6:	push   edi
  4197b7:	pop    ss
  4197b8:	jge    0x4197cd
  4197ba:	jb     0x4197fb
  4197bc:	sbb    cl,dl
  4197be:	ins    DWORD PTR es:[edi],dx
  4197bf:	add    esp,ecx
  4197c1:	pop    es
  4197c2:	fscale 
  4197c4:	adc    BYTE PTR [ebp+0x6a],bh
  4197c7:	test   DWORD PTR [edi-0x54658c12],eax
  4197cd:	push   0x9ccd9b58
  4197d2:	and    BYTE PTR [edi-0x14],ch
  4197d5:	pop    edx
  4197d6:	cs ret 
  4197d8:	sub    al,BYTE PTR [ecx+eiz*8-0x7]
  4197dc:	and    eax,0xd7ca1e71
  4197e1:	mov    bh,0x81
  4197e3:	pop    esp
  4197e4:	mov    eax,ds:0x66f664a5
  4197e9:	sahf   
  4197ea:	shl    bh,cl
  4197ec:	clc    
  4197ed:	jnp    0x4197a1
  4197ef:	push   eax
  4197f0:	sub    bl,BYTE PTR [esi+eax*1-0x5a9b1f44]
  4197f7:	les    ebx,FWORD PTR [edx-0x7946d350]
  4197fd:	sbb    BYTE PTR [ebx-0x77de6e6d],cl
  419803:	mov    DWORD PTR [edi],0xc4474ef7
  419809:	push   0x4ea94d49
  41980e:	sbb    edi,eax
  419810:	imul   edi,DWORD PTR [edi+0x51],0xc
  419814:	mov    ch,0xa2
  419816:	jno    0x4197fb
  419818:	jmp    0xdade:0x725cf427
  41981f:	dec    ecx
  419820:	jmp    0x18e2:0xda76677d
  419827:	push   ss
  419828:	and    eax,0x93f8440
  41982d:	sub    ecx,DWORD PTR [edi]
  41982f:	dec    esp
  419830:	rol    DWORD PTR [ecx+0x27],0xc
  419834:	inc    esi
  419835:	inc    esp
  419836:	dec    BYTE PTR [ebx+ecx*4+0x4b]
  41983a:	mov    al,0x84
  41983c:	fwait
  41983d:	xor    edx,edx
  41983f:	js     0x419865
  419841:	shl    BYTE PTR [edi],0xf1
  419844:	test   BYTE PTR [edi+0x4f],0xec
  419848:	pop    edi
  419849:	xor    al,0x44
  41984b:	ror    DWORD PTR [ebx+eiz*2-0x47],1
  41984f:	(bad)  
  419850:	jae    0x419814
  419852:	xor    ebp,ecx
  419854:	sahf   
  419855:	lods   al,BYTE PTR ds:[esi]
  419856:	cmc    
  419857:	pop    es
  419858:	aaa    
  419859:	fidivr DWORD PTR [esi+0x5a8ee31a]
  41985f:	sbb    al,0x5e
  419861:	and    ebp,DWORD PTR [ecx+0x7ddad8c7]
  419867:	pop    edi
  419868:	sub    DWORD PTR [esi-0x1],0x12b4ad61
  41986f:	sub    DWORD PTR [ebx+0x45],edx
  419872:	ret    
  419873:	xchg   edx,eax
  419874:	popf   
  419875:	sub    eax,0x4a997fe9
  41987a:	dec    esp
  41987b:	sbb    eax,DWORD PTR [edx-0x7ef32d1e]
  419881:	sar    DWORD PTR [ebx],cl
  419883:	fisubr DWORD PTR [ebx]
  419885:	cmp    BYTE PTR [ebp-0x1d5ac78b],dl
  41988b:	mov    ebx,0x547e0c21
  419890:	pop    es
  419891:	rcr    DWORD PTR [ecx-0x3500c479],1
  419897:	imul   edx,DWORD PTR [ebx-0x626319d6],0x10
  41989e:	xchg   ebx,eax
  41989f:	dec    edx
  4198a0:	mov    edx,0x63021b5b
  4198a5:	mov    cl,0x2e
  4198a7:	gs pop esp
  4198a9:	(bad)  
  4198aa:	aas    
  4198ab:	sbb    BYTE PTR [esi-0x3d2d0aa9],dl
  4198b1:	xor    DWORD PTR [edx+0x78],ecx
  4198b4:	rcr    bl,cl
  4198b6:	mov    ecx,0x42caf209
  4198bb:	pop    esp
  4198bc:	pop    ebx
  4198bd:	stc    
  4198be:	mov    bl,0x8f
  4198c0:	dec    ebp
  4198c1:	dec    eax
  4198c2:	mov    dh,0xa9
  4198c4:	inc    ebp
  4198c5:	and    ebp,0x1f
  4198c8:	inc    ebx
  4198c9:	cdq    
  4198ca:	fmul   st,st(7)
  4198cc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4198cd:	mov    ah,0x6a
  4198cf:	jne    0x419910
  4198d1:	retf   0x7aa7
  4198d4:	mov    BYTE PTR [ebp-0x72],al
  4198d7:	or     dh,BYTE PTR [ebx]
  4198d9:	out    dx,al
  4198da:	fsub   st,st(5)
  4198dc:	clc    
  4198dd:	cmc    
  4198de:	iretw  
  4198e0:	pop    edx
  4198e1:	or     DWORD PTR [ecx],0x4d33dd7a
  4198e7:	jle    0x419965
  4198e9:	mov    edi,0x8f21ab2a
  4198ee:	push   ebp
  4198ef:	mov    ebp,esp
  4198f1:	push   ecx
  4198f2:	or     DWORD PTR ds:0x4236bc,0x448
  4198fc:	push   ebx
  4198fd:	push   esi
  4198fe:	adc    DWORD PTR ds:0x423678,0x4236f0
  419908:	mov    DWORD PTR [ebp-0x4],0xffffe1ff
  41990f:	push   edi
  419910:	add    DWORD PTR ds:0x423678,0x7d07
  41991a:	mov    DWORD PTR [ebp-0x4],0xfffffffc
  419921:	mov    DWORD PTR [ebp-0x4],0xffffffff
  419928:	add    DWORD PTR ds:0x42366c,0x4236ec
  419932:	jmp    0x419daa
  419937:	daa    
  419938:	inc    edi
  419939:	or     al,0x24
  41993b:	ins    BYTE PTR es:[edi],dx
  41993c:	outs   dx,DWORD PTR ds:[esi]
  41993d:	das    
  41993e:	inc    edi
  41993f:	cwde   
  419940:	pop    es
  419941:	repnz inc esi
  419943:	ret    
  419944:	dec    esp
  419945:	das    
  419946:	inc    esi
  419947:	add    ebp,DWORD PTR [ecx+0x1]
  41994a:	add    BYTE PTR [ebx+0x4],bl
  41994d:	add    BYTE PTR [eax],al
  41994f:	int    0x9d
  419951:	push   ss
  419952:	adc    DWORD PTR [ebp-0x2d01981d],ecx
  419958:	xor    BYTE PTR [eax],al
  41995a:	fsubp  st(2),st
  41995c:	ins    BYTE PTR es:[edi],dx
  41995d:	push   cs
  41995e:	mov    cl,0x11
  419960:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419961:	out    dx,eax
  419962:	mov    edx,0x3544f4ac
  419967:	lea    edx,ds:0x62ad14d3
  41996d:	xchg   ebp,eax
  41996e:	pop    ebx
  41996f:	jmp    0x91bdc8e2
  419974:	push   cs
  419975:	pop    edi
  419976:	pop    edx
  419977:	adc    DWORD PTR [esi],ebx
  419979:	add    DWORD PTR [edi+edx*1],esi
  41997c:	mov    ah,0xea
  41997e:	loopne 0x419907
  419980:	repz fld TBYTE PTR [edx-0x7a2fdec0]
  419987:	out    0x26,al
  419989:	pop    ss
  41998a:	imul   ebx,DWORD PTR [edi],0x3c
  41998d:	xchg   ebp,eax
  41998e:	(bad)  
  419990:	sbb    eax,0x2873c299
  419995:	cmp    BYTE PTR [edi],ah
  419997:	add    dl,BYTE PTR [edi+0x72]
  41999a:	test   eax,0x5beb43a3
  41999f:	stos   DWORD PTR es:[edi],eax
  4199a0:	aaa    
  4199a1:	sbb    ah,BYTE PTR [ebx-0x11b33bc1]
  4199a7:	outs   dx,BYTE PTR es:[esi]
  4199a9:	stos   WORD PTR es:[edi],ax
  4199ab:	add    esi,DWORD PTR [eax+0x2f795dd9]
  4199b1:	test   bl,ch
  4199b3:	lea    edi,[ebp+ebp*4+0x67cff498]
  4199ba:	or     esp,DWORD PTR [esp+ecx*2-0x6d]
  4199be:	mov    ebp,ecx
  4199c0:	in     eax,0x86
  4199c2:	mov    bh,0xc4
  4199c4:	mov    bl,0xa6
  4199c6:	jle    0x41994f
  4199c8:	add    BYTE PTR [ebx+0x67],0x40
  4199cc:	into   
  4199cd:	cli    
  4199ce:	(bad)  
  4199cf:	retf   0x54b3
  4199d2:	daa    
  4199d3:	jno    0x419a36
  4199d5:	mov    ebx,0x45654f6a
  4199da:	cmp    al,0x11
  4199dc:	or     eax,0xcee28813
  4199e1:	mov    cl,0x8
  4199e3:	sbb    dh,BYTE PTR [eax-0x4d]
  4199e6:	lds    esi,FWORD PTR [ebx]
  4199e8:	inc    edi
  4199e9:	ins    BYTE PTR es:[edi],dx
  4199ea:	fist   DWORD PTR [edi+0x79]
  4199ed:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4199ee:	test   DWORD PTR [edx],esp
  4199f0:	cmc    
  4199f1:	mov    dh,0xd4
  4199f3:	ss inc esi
  4199f5:	int3   
  4199f6:	or     DWORD PTR [esi-0x7b],ebx
  4199f9:	jmp    0xdd3e:0xe1b9e12
  419a00:	rcl    DWORD PTR [ebx+0x56],1
  419a03:	scas   ax,WORD PTR es:[edi]
  419a05:	xor    bh,dh
  419a07:	std    
  419a08:	into   
  419a09:	loop   0x4199cc
  419a0b:	push   0x7605e076
  419a10:	in     al,dx
  419a11:	fcom   st(4)
  419a13:	lds    ecx,FWORD PTR [ecx-0x59db42b4]
  419a19:	or     eax,DWORD PTR [ebx+0x4c31ad0d]
  419a1f:	iret   
  419a20:	pop    esp
  419a21:	rcr    cl,1
  419a23:	pop    es
  419a24:	gs and eax,0x3a34874a
  419a2a:	scas   eax,DWORD PTR es:[edi]
  419a2b:	xchg   ebp,eax
  419a2c:	push   edx
  419a2d:	neg    DWORD PTR [eax]
  419a2f:	xchg   edi,eax
  419a30:	xor    edx,DWORD PTR [eax-0x74]
  419a33:	mov    esi,0xeeddd797
  419a38:	fnsave [esi]
  419a3a:	cmp    ebp,DWORD PTR [eax]
  419a3c:	je     0x4199d4
  419a3e:	das    
  419a3f:	imul   esi,DWORD PTR [ebp-0x3f],0x82fcee84
  419a46:	enter  0x598e,0x47
  419a4a:	and    bl,dh
  419a4c:	outs   dx,DWORD PTR ds:[esi]
  419a4d:	mov    edx,0x45866f6a
  419a52:	aas    
  419a53:	inc    esi
  419a54:	iret   
  419a55:	push   es
  419a56:	lahf   
  419a57:	xchg   esp,eax
  419a58:	xchg   edx,eax
  419a59:	push   0xffffffa0
  419a5b:	ret    0x77f2
  419a5e:	aas    
  419a5f:	std    
  419a60:	imul   eax,eax,0x4cd1fa96
  419a66:	(bad)  
  419a67:	mov    ds:0xe7e7ea87,al
  419a6c:	sahf   
  419a6d:	neg    BYTE PTR [esi-0x7e37ab89]
  419a73:	pusha  
  419a74:	(bad)  
  419a75:	out    dx,al
  419a76:	and    al,0xb9
  419a78:	inc    ecx
  419a79:	mov    ebp,0x9fda9bb2
  419a7e:	mov    dh,0x4
  419a80:	inc    eax
  419a81:	inc    esi
  419a82:	gs clc 
  419a84:	xor    eax,0x462d474c
  419a89:	nop
  419a8a:	bound  ecx,QWORD PTR [esi+ebp*2]
  419a8d:	add    BYTE PTR [esi-0x7e],bh
  419a90:	add    DWORD PTR [ebp+edi*1-0x17],ecx
  419a94:	push   es
  419a95:	fistp  WORD PTR [eax]
  419a97:	cmp    bh,BYTE PTR [ecx-0x45337cb8]
  419a9d:	and    eax,DWORD PTR ds:0xa7bc5282
  419aa3:	add    al,0xc1
  419aa5:	cwde   
  419aa6:	adc    ah,BYTE PTR [edi+0x53d69382]
  419aac:	imul   esp,DWORD PTR [esi+ebp*1],0xffffffd9
  419ab0:	push   es
  419ab1:	fdivr  QWORD PTR [ebx-0x2c7b33e6]
  419ab7:	push   edi
  419ab8:	push   0xffffff97
  419aba:	outs   dx,DWORD PTR ds:[esi]
  419abb:	(bad)  [edx+0x44c1d5ad]
  419ac1:	or     eax,0xd2efe03e
  419ac6:	or     eax,0xd8f3cd0d
  419acb:	addr16 mov al,ds:0x83c7
  419acf:	popf   
  419ad0:	lea    eax,[eax-0x4c]
  419ad3:	ins    BYTE PTR es:[edi],dx
  419ad4:	xor    eax,0x2ace0072
  419ad9:	xchg   BYTE PTR [ecx-0x6c],ch
  419adc:	jl     0x419b02
  419ade:	jmp    0x78db:0xde4f51a6
  419ae5:	add    ecx,ecx
  419ae7:	pusha  
  419ae8:	pop    ebp
  419ae9:	cli    
  419aea:	xchg   edx,eax
  419aeb:	adc    DWORD PTR ds:0x452eb16e,esp
  419af1:	shl    ch,1
  419af3:	dec    ebp
  419af4:	ins    BYTE PTR es:[edi],dx
  419af5:	mov    esi,DWORD PTR [ecx-0xf]
  419af8:	xor    al,0x2e
  419afa:	(bad)  
  419afb:	imul   DWORD PTR [edx-0x75]
  419afe:	push   esp
  419aff:	add    DWORD PTR [ebx-0x7527005b],0xffffffb6
  419b06:	fcomp  DWORD PTR [ecx+0x24]
  419b09:	xor    edx,DWORD PTR [eax+0x51]
  419b0c:	ficomp WORD PTR [ecx-0x33]
  419b0f:	add    BYTE PTR [ebp+0x63],bh
  419b12:	neg    DWORD PTR [bx+di-0x7e76]
  419b17:	(bad)  
  419b18:	cli    
  419b19:	pusha  
  419b1a:	dec    ebx
  419b1b:	es dec edx
  419b1d:	add    BYTE PTR [ebx+0x4664485e],cl
  419b23:	or     cl,bh
  419b25:	xchg   esi,eax
  419b26:	xchg   bl,bh
  419b28:	into   
  419b29:	aaa    
  419b2a:	jnp    0x419ad9
  419b2c:	ja     0x419aea
  419b2e:	fwait
  419b2f:	(bad)  
  419b30:	xor    dl,BYTE PTR [eax]
  419b32:	lds    edx,FWORD PTR [edi-0x6070438a]
  419b38:	es push ss
  419b3a:	rol    bl,0x1b
  419b3d:	popf   
  419b3e:	lock inc edx
  419b40:	mov    bh,0x8c
  419b42:	dec    edx
  419b43:	or     al,0x6e
  419b45:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419b46:	outs   dx,BYTE PTR ds:[esi]
  419b47:	sbb    DWORD PTR [edi-0x76],esi
  419b4a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419b4b:	lahf   
  419b4c:	jns    0x419b33
  419b4e:	mov    ebp,0x242fa24e
  419b53:	jp     0x419bbb
  419b55:	push   ds
  419b56:	lods   eax,DWORD PTR ds:[esi]
  419b57:	xchg   edx,eax
  419b58:	pop    ecx
  419b59:	or     eax,0xb9903d81
  419b5e:	mov    eax,0x70653720
  419b63:	rol    BYTE PTR [esi+edx*4],0x7
  419b67:	sbb    al,0xe1
  419b69:	xchg   ecx,eax
  419b6a:	mov    bl,0xc1
  419b6c:	push   eax
  419b6d:	xsha256 (bad)
  419b6e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419b6f:	xchg   esp,eax
  419b70:	ins    DWORD PTR es:[edi],dx
  419b71:	lock jmp FWORD PTR [edi-0x6314a50e]
  419b78:	ins    DWORD PTR es:[edi],dx
  419b79:	pusha  
  419b7a:	mov    esp,DWORD PTR [ecx-0x18]
  419b7d:	test   al,0xa4
  419b7f:	pop    eax
  419b80:	mov    ds:0xa4b3ec2b,al
  419b85:	stc    
  419b86:	in     eax,dx
  419b87:	inc    ebx
  419b88:	sbb    edi,DWORD PTR [ecx-0x321b8a3]
  419b8e:	sub    ebp,DWORD PTR ds:0x9fc51412
  419b94:	jle    0x419bb2
  419b96:	mov    edi,0x99745b61
  419b9b:	pop    ds
  419b9c:	je     0x419bc4
  419b9e:	push   0xa591b31d
  419ba3:	mov    al,ds:0x9fea08db
  419ba8:	(bad)  
  419ba9:	pop    edx
  419baa:	cmp    al,0x36
  419bac:	xchg   esi,eax
  419bad:	mov    eax,0x91de1a93
  419bb2:	addr16 mov eax,0xc63f5fd3
  419bb8:	cmp    edi,eax
  419bba:	xchg   ebx,eax
  419bbb:	inc    edx
  419bbc:	jg     0x419b40
  419bbe:	mov    eax,0xc155ee30
  419bc3:	push   es
  419bc4:	hlt    
  419bc5:	test   DWORD PTR [ebp+0x3ae34a81],esp
  419bcb:	ret    0xd50a
  419bce:	xchg   esi,eax
  419bcf:	xchg   edi,eax
  419bd0:	mov    bl,0x2a
  419bd2:	mov    edi,0x472c21a9
  419bd7:	xchg   edi,eax
  419bd8:	inc    eax
  419bd9:	int    0x83
  419bdb:	xor    bh,bh
  419bdd:	(bad)  
  419bde:	mov    ah,0x56
  419be0:	mov    DWORD PTR [ecx+0x11],esi
  419be3:	inc    ebp
  419be4:	and    ah,BYTE PTR [ebx]
  419be6:	sub    DWORD PTR [ecx],esi
  419be8:	outs   dx,DWORD PTR ds:[esi]
  419bea:	ficom  WORD PTR [edx+0x7b]
  419bed:	out    0x6c,al
  419bef:	ret    
  419bf0:	push   edx
  419bf1:	mov    cl,BYTE PTR [edx]
  419bf3:	imul   eax,DWORD PTR [ebp-0x34ec79c4],0x160fe2c8
  419bfd:	cmp    BYTE PTR [ebp-0x6ced2dcf],dh
  419c03:	cmp    eax,0x38df6287
  419c08:	test   BYTE PTR [esi-0x7],al
  419c0b:	loope  0x419c65
  419c0d:	(bad)  
  419c0e:	cmp    eax,esp
  419c10:	jmp    0x95a0:0xb98455e6
  419c17:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419c18:	xchg   bl,cl
  419c1a:	adc    bh,BYTE PTR [ecx-0x53]
  419c1d:	push   es
  419c1e:	pop    eax
  419c1f:	inc    esi
  419c20:	out    dx,eax
  419c21:	sbb    DWORD PTR ds:0x15f0e942,ebp
  419c27:	fimul  WORD PTR [edi+0x4a]
  419c2a:	mov    eax,ds:0xb6d89da1
  419c2f:	mov    cl,0x34
  419c31:	and    BYTE PTR [ebp+0x5c],ah
  419c34:	clc    
  419c35:	xor    al,0xee
  419c37:	icebp  
  419c38:	jge    0x419bc5
  419c3a:	pop    es
  419c3b:	and    dh,dl
  419c3d:	(bad)  
  419c3e:	call   0x2f7c6d92
  419c43:	repz loop 0x419c69
  419c46:	jg     0x419c73
  419c48:	xor    ecx,0x1a51e6c0
  419c4e:	out    dx,al
  419c4f:	mov    eax,0xab01f7
  419c54:	out    dx,al
  419c55:	ret    
  419c56:	sbb    edi,0xf58e6f1b
  419c5c:	daa    
  419c5d:	push   ss
  419c5e:	xchg   ecx,eax
  419c5f:	inc    esp
  419c60:	outs   dx,BYTE PTR ds:[esi]
  419c61:	sahf   
  419c62:	adc    BYTE PTR [ecx-0x38],ch
  419c65:	rcl    BYTE PTR [ebp-0x48],1
  419c68:	add    DWORD PTR [ebp+0x532fce66],esp
  419c6e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419c6f:	das    
  419c70:	jmp    0x7f873e72
  419c75:	xchg   ecx,eax
  419c76:	add    al,0xb8
  419c78:	nop
  419c79:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419c7a:	adc    BYTE PTR [edx+0x51a72a60],cl
  419c80:	nop
  419c81:	mov    al,0x32
  419c83:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419c84:	pop    ds
  419c85:	jb     0x419c7b
  419c87:	xchg   ecx,eax
  419c88:	enter  0x9aff,0xba
  419c8c:	into   
  419c8d:	mov    bl,0xf0
  419c8f:	xor    al,0xde
  419c91:	sub    BYTE PTR [ebx-0x64],bl
  419c94:	mov    ebp,ecx
  419c96:	cmp    DWORD PTR [esp+ecx*1-0x41],0xf3336dc0
  419c9e:	pop    edi
  419c9f:	mov    cs,WORD PTR [ecx]
  419ca1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419ca2:	add    DWORD PTR [edx+0x4b21ffa7],esp
  419ca8:	cmp    DWORD PTR [ebp+0x53],0xb
  419cac:	pop    ebx
  419cad:	fwait
  419cae:	jge    0x419d14
  419cb0:	dec    eax
  419cb1:	add    al,0x4c
  419cb3:	or     eax,0x8f6269ac
  419cb8:	fld    DWORD PTR [ebx-0x1e51913c]
  419cbe:	clc    
  419cbf:	fiadd  WORD PTR [edi]
  419cc1:	fidivr DWORD PTR [esp+edi*4+0x48dcb2b6]
  419cc8:	jl     0x419c99
  419cca:	repz adc dl,BYTE PTR [edi+0x50]
  419cce:	test   BYTE PTR ds:0x35226b76,dl
  419cd4:	jg     0x419d35
  419cd6:	mov    edi,?
  419cd8:	xlat   BYTE PTR ds:[ebx]
  419cd9:	and    BYTE PTR [esp+ecx*4],bh
  419cdc:	mov    esi,0x9f0fce56
  419ce1:	sub    eax,0xc4782c27
  419ce6:	mov    dl,0x62
  419ce8:	cmp    DWORD PTR [ebp+0x46],edi
  419ceb:	fcomp  DWORD PTR [ebp+0x4d]
  419cee:	pop    esp
  419cef:	cli    
  419cf0:	dec    ebp
  419cf1:	jae    0x419d55
  419cf3:	mov    ah,ch
  419cf5:	ins    BYTE PTR es:[edi],dx
  419cf6:	mov    dl,0x52
  419cf8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419cf9:	or     DWORD PTR [ecx],ecx
  419cfb:	(bad)  
  419cfc:	out    0xbe,eax
  419cfe:	out    0xfc,eax
  419d00:	pop    edx
  419d01:	(bad)  [ebx]
  419d03:	cmp    al,0x6a
  419d05:	inc    edx
  419d06:	cmp    bh,BYTE PTR ds:0x1138c65e
  419d0c:	sbb    DWORD PTR [ecx],eax
  419d0e:	gs popf 
  419d10:	or     eax,0xfbb9a894
  419d15:	rep lods al,BYTE PTR ds:[esi]
  419d17:	mov    edi,0xc33fc686
  419d1c:	fsub   DWORD PTR [ecx+0x45aa613f]
  419d22:	xor    esi,DWORD PTR fs:[ecx+0x4a0b20f0]
  419d29:	ss push ebx
  419d2b:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419d2d:	jp     0x419d1d
  419d2f:	mov    esp,0x36f93ebe
  419d34:	mov    edx,0x4bf67b6b
  419d39:	push   edx
  419d3a:	push   ds
  419d3b:	inc    esi
  419d3c:	dec    eax
  419d3d:	push   esp
  419d3e:	fldcw  WORD PTR [esi]
  419d40:	inc    esp
  419d41:	iret   
  419d42:	jg     0x419d8d
  419d44:	mov    eax,ds:0x6b614ea4
  419d49:	int    0x86
  419d4b:	pop    eax
  419d4c:	out    dx,eax
  419d4d:	sub    esp,DWORD PTR [ebx+esi*1+0x79c28ab]
  419d54:	jge    0x419d9d
  419d56:	scas   eax,DWORD PTR es:[edi]
  419d57:	ret    0x3ab5
  419d5a:	mov    eax,ds:0x4ef3341d
  419d5f:	not    DWORD PTR [ebx-0x1b]
  419d62:	(bad)  
  419d63:	out    dx,eax
  419d64:	ret    0xa909
  419d67:	mov    ds:0x7198a33e,al
  419d6c:	ja     0x419d55
  419d6e:	mov    ds:0x35e40e71,eax
  419d73:	les    esp,FWORD PTR [edx+edi*4+0x3d]
  419d77:	dec    edx
  419d78:	or     BYTE PTR [esi-0x6],dl
  419d7b:	cli    
  419d7c:	(bad)  
  419d7d:	aaa    
  419d7e:	stos   DWORD PTR es:[edi],eax
  419d7f:	mov    ds:0x5c4601b7,al
  419d84:	mov    ds:0x45295f5f,al
  419d89:	arpl   cx,bp
  419d8b:	(bad)  
  419d8c:	loop   0x419d4a
  419d8e:	jns    0x419dd3
  419d90:	retf   0x6d39
  419d93:	jnp    0x419d54
  419d95:	inc    esp
  419d96:	inc    ecx
  419d97:	and    al,0xbf
  419d99:	push   ecx
  419d9a:	jmp    0xf4af:0x9da86506
  419da1:	mov    bl,BYTE PTR [esi+0x2466bac4]
  419da7:	sub    DWORD PTR [edi],esp
  419da9:	icebp  
  419daa:	push   DWORD PTR [ebp+0x10]
  419dad:	push   DWORD PTR [ebp+0xc]
  419db0:	sbb    DWORD PTR ds:0x423674,0x4236ac
  419dba:	push   DWORD PTR [ebp+0x8]
  419dbd:	call   0x41c1e7
  419dc2:	and    DWORD PTR ds:0x42373c,0x0
  419dcc:	xor    ebx,ebx
  419dce:	xor    ebx,DWORD PTR ds:0x42373c
  419dd4:	inc    ebx
  419dd5:	mov    DWORD PTR ds:0x42373c,ebx
  419ddb:	cmp    DWORD PTR ds:0x42373c,0x4
  419de2:	jne    0x419df4
  419de8:	push   DWORD PTR [ebp-0x10]
  419deb:	push   DWORD PTR [ebp-0x14]
  419dee:	call   DWORD PTR ds:0x41f524
  419df4:	cmp    DWORD PTR ds:0x42373c,0x3
  419dfb:	jne    0x419e10
  419e01:	xor    ebx,ebx
  419e03:	xor    ebx,DWORD PTR ds:0x42373c
  419e09:	inc    ebx
  419e0a:	mov    DWORD PTR ds:0x42373c,ebx
  419e10:	cmp    DWORD PTR ds:0x42373c,0x19
  419e17:	jb     0x419dcc
  419e1d:	lea    edx,[ebp+0x4]
  419e20:	mov    ebx,eax
  419e22:	call   0x4081e3
  419e27:	mov    esi,DWORD PTR ds:0x42121c
  419e2d:	mov    edi,eax
  419e2f:	call   0x41a604
  419e34:	add    DWORD PTR [edi],eax
  419e36:	pop    edi
  419e37:	pop    esi
  419e38:	jmp    0x41a2b0
  419e3d:	xlat   BYTE PTR ds:[ebx]
  419e3e:	push   ss
  419e3f:	sbb    eax,0xf7ebdde8
  419e44:	aas    
  419e45:	ins    BYTE PTR es:[edi],dx
  419e46:	mov    edx,0x4c2be43c
  419e4b:	js     0x419e9d
  419e4d:	pop    esi
  419e4e:	ins    DWORD PTR es:[edi],dx
  419e4f:	add    DWORD PTR [eax],eax
  419e51:	pop    ebx
  419e52:	add    al,0x0
  419e54:	add    BYTE PTR [ebp+0x3208379],dl
  419e5a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419e5b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419e5c:	icebp  
  419e5d:	jge    0x419e37
  419e5f:	push   edx
  419e60:	pop    ebx
  419e61:	icebp  
  419e62:	cld    
  419e63:	xor    BYTE PTR [eax+0x5f],dh
  419e66:	fimul  DWORD PTR [ebx+eiz*1]
  419e69:	sbb    dl,bh
  419e6b:	(bad)
  419e6e:	mov    BYTE PTR [esi+0x4e],0x7c
  419e72:	push   DWORD PTR [ecx-0x251a2f72]
  419e78:	jle    0x419e87
  419e7a:	mov    WORD PTR [ebx+0x45],es
  419e7d:	(bad)  
  419e7e:	iret   
  419e7f:	dec    DWORD PTR [edi+0x31]
  419e82:	ret    0x383c
  419e85:	sbb    ebx,DWORD PTR [edi-0x5b7f9de2]
  419e8b:	xchg   edi,eax
  419e8c:	into   
  419e8d:	lds    edi,FWORD PTR [ebp-0x13]
  419e90:	mov    al,ds:0x1be99486
  419e95:	mov    ?,WORD PTR [edi+esi*2]
  419e98:	test   eax,0xbddb268f
  419e9d:	or     ah,BYTE PTR [ebp+0x2f]
  419ea0:	test   BYTE PTR [edi+0x2d80a95d],dl
  419ea6:	retf   
  419ea7:	adc    DWORD PTR [edx+0x3785825d],0xffffff9e
  419eae:	aad    0x98
  419eb0:	and    DWORD PTR [edi+edi*2],esi
  419eb3:	mov    esi,esp
  419eb5:	sub    BYTE PTR [esp-0x53],al
  419eb9:	xchg   ecx,eax
  419eba:	imul   ebx,DWORD PTR [esi+0x75],0xffffffc5
  419ebe:	pop    esp
  419ebf:	mov    BYTE PTR [edi-0x55],ch
  419ec2:	add    dl,BYTE PTR [esi+0x433d478f]
  419ec8:	outs   dx,DWORD PTR ds:[esi]
  419ec9:	aad    0x7f
  419ecb:	push   edi
  419ecc:	add    bh,al
  419ece:	jge    0x419f05
  419ed0:	(bad)  [ebp-0x7c]
  419ed3:	jb     0x419eb9
  419ed5:	sub    WORD PTR [edx],sp
  419ed8:	lds    esi,FWORD PTR [edx]
  419eda:	jp     0x419e94
  419edc:	sbb    BYTE PTR [esi-0x2],bh
  419edf:	xchg   cl,dh
  419ee1:	lahf   
  419ee2:	imul   ecx,DWORD PTR [ebp+0x2e120c2e],0x81939cc2
  419eec:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419eed:	jge    0x419f17
  419eef:	push   ebp
  419ef0:	popa   
  419ef1:	pop    es
  419ef2:	outs   dx,DWORD PTR ds:[esi]
  419ef3:	test   DWORD PTR [eax],ecx
  419ef5:	inc    edi
  419ef6:	imul   ecx,ecx,0xffffff87
  419ef9:	sti    
  419efa:	mov    ebx,0xb89191d6
  419eff:	sbb    eax,DWORD PTR [edi]
  419f01:	and    DWORD PTR [eax],ebp
  419f03:	pop    ebx
  419f04:	hlt    
  419f05:	jmp    0x9f6a302f
  419f0a:	rcr    esi,0x12
  419f0d:	xor    bh,bh
  419f0f:	push   ebp
  419f10:	xor    al,0x8a
  419f12:	mov    ecx,0x4bc4f736
  419f17:	loope  0x419f68
  419f19:	retf   
  419f1a:	jae    0x419f69
  419f1c:	mov    BYTE PTR [eax],al
  419f1e:	dec    BYTE PTR [esi-0x13]
  419f21:	add    BYTE PTR [ebx+0x5d4a12e3],dh
  419f27:	adc    al,0x9
  419f29:	les    edi,FWORD PTR [esi]
  419f2b:	adc    ecx,ebp
  419f2d:	mov    bh,0x99
  419f2f:	pop    edi
  419f30:	out    dx,eax
  419f31:	pusha  
  419f32:	(bad)  
  419f33:	lods   eax,DWORD PTR ds:[esi]
  419f34:	and    al,0xc8
  419f36:	sbb    al,0x6d
  419f38:	shl    BYTE PTR [eax+eiz*4-0x1c607552],1
  419f3f:	out    0x4d,eax
  419f41:	inc    eax
  419f42:	mov    dh,0x9
  419f44:	call   FWORD PTR [eax-0x4db45698]
  419f4a:	adc    esi,DWORD PTR [ebp+eiz*2+0x73]
  419f4e:	stc    
  419f4f:	leave  
  419f50:	shl    BYTE PTR [edi],cl
  419f52:	adc    edi,DWORD PTR ds:0xd576e97b
  419f58:	xor    bl,BYTE PTR ds:0xd6b87e51
  419f5e:	in     eax,dx
  419f5f:	enter  0xdc2c,0xb1
  419f63:	retf   0x5ddb
  419f66:	lods   al,BYTE PTR ds:[esi]
  419f67:	mov    cl,0xa0
  419f69:	imul   ebp,ebx,0x924fc680
  419f6f:	call   eax
  419f71:	mov    dl,0x26
  419f73:	mov    edi,0xad26457
  419f78:	out    0x1,al
  419f7a:	jmp    FWORD PTR [ecx]
  419f7c:	cwde   
  419f7d:	lock iret 
  419f7f:	lea    edx,[edi]
  419f81:	out    0x3d,al
  419f83:	dec    esp
  419f84:	push   0x73
  419f86:	aaa    
  419f87:	icebp  
  419f88:	cmp    dh,BYTE PTR [edx]
  419f8a:	leave  
  419f8b:	and    edx,DWORD PTR [edx]
  419f8d:	lock xor eax,0xd2da352b
  419f93:	push   0x76311c6f
  419f98:	cmp    BYTE PTR [eax+ebp*4-0x3a],dh
  419f9c:	sub    BYTE PTR [ecx-0x52f217dd],cl
  419fa2:	mov    DWORD PTR [eax],ebp
  419fa4:	out    dx,eax
  419fa5:	enter  0x5fac,0xa4
  419fa9:	leave  
  419faa:	push   edi
  419fab:	ds pop ss
  419fad:	test   DWORD PTR [edx-0x24746192],edx
  419fb3:	sti    
  419fb4:	inc    edx
  419fb5:	pop    edx
  419fb6:	add    edx,ecx
  419fb8:	loope  0x419ff7
  419fba:	dec    ecx
  419fbb:	addr16 mov eax,0x491bc3c1
  419fc1:	dec    eax
  419fc2:	sub    BYTE PTR [esi+0x16],bl
  419fc5:	inc    esp
  419fc6:	repnz dec ebx
  419fc8:	rol    DWORD PTR [edi-0x9],1
  419fcb:	aaa    
  419fcc:	and    eax,0x6ad9009
  419fd1:	mov    esp,0xb27e361b
  419fd6:	mov    cl,0x82
  419fd8:	jl     0x419ffe
  419fda:	sahf   
  419fdb:	jbe    0x419f9c
  419fdd:	addr16 inc edx
  419fdf:	ins    BYTE PTR es:[edi],dx
  419fe0:	and    DWORD PTR [ecx],eax
  419fe2:	into   
  419fe3:	jb     0x419fe6
  419fe5:	nop
  419fe6:	into   
  419fe7:	test   eax,0x36e01868
  419fec:	mov    dl,bh
  419fee:	ret    0xb825
  419ff1:	int3   
  419ff2:	(bad)  [esi+0x30]
  419ff5:	ffreep st(1)
  419ff7:	cmp    edx,DWORD PTR [esp+edx*1+0x41e6a6a0]
  419ffe:	mov    ecx,DWORD PTR ds:0xe9eaf18b
  41a004:	loope  0x41a05b
  41a006:	or     BYTE PTR [eax+0xba510a9],ch
  41a00c:	push   ss
  41a00d:	jl     0x419f9f
  41a00f:	sbb    esp,DWORD PTR [esi-0x5b38fa75]
  41a015:	arpl   WORD PTR [eax],bx
  41a017:	popf   
  41a018:	sar    dl,cl
  41a01a:	pop    ecx
  41a01b:	cwde   
  41a01c:	mov    al,0x44
  41a01e:	repz cmp al,0xd6
  41a021:	inc    edx
  41a022:	and    al,0x52
  41a024:	mov    ecx,0x87905c6a
  41a029:	fcmovnu st,st(5)
  41a02b:	sub    bl,BYTE PTR [ebp+0x5b]
  41a02e:	sub    al,0x6a
  41a030:	pmaxsw mm3,QWORD PTR [ebx]
  41a033:	xor    esi,DWORD PTR [edx+0x67a1d1d9]
  41a039:	leave  
  41a03a:	sbb    bh,BYTE PTR [esi+0x5e]
  41a03d:	(bad)  
  41a03e:	cmp    DWORD PTR [edi+0x31],esi
  41a041:	test   al,0x53
  41a043:	leave  
  41a044:	inc    esi
  41a045:	std    
  41a046:	icebp  
  41a047:	dec    esi
  41a048:	into   
  41a049:	sar    DWORD PTR fs:[edi-0x39],0x6c
  41a04e:	push   es
  41a04f:	test   DWORD PTR ds:0xd69b802b,esi
  41a055:	imul   ecx,DWORD PTR [esi+0x2],0x9e786bd2
  41a05c:	call   0x7143:0x2d15f920
  41a063:	mov    al,ds:0x7ebed7a0
  41a068:	cli    
  41a069:	mov    al,0x21
  41a06b:	imul   dl
  41a06d:	cs dec ebp
  41a06f:	mov    edx,0xc726aadd
  41a074:	cmp    ebx,0xe9ac2cdb
  41a07a:	fstp   TBYTE PTR [ebx+0xd61806c]
  41a080:	dec    ecx
  41a081:	sub    eax,0xeca22c
  41a086:	mov    bh,0xf2
  41a088:	inc    edi
  41a089:	ss out 0x97,eax
  41a08c:	aam    0x6
  41a08e:	pop    edi
  41a08f:	aas    
  41a090:	stos   BYTE PTR es:[edi],al
  41a091:	and    dh,al
  41a093:	or     ecx,eax
  41a095:	sub    al,0x2d
  41a097:	and    ecx,0xf25b4aa7
  41a09d:	push   cs
  41a09e:	bound  esi,QWORD PTR [edi-0xf696044]
  41a0a4:	inc    ebx
  41a0a5:	test   BYTE PTR [ebp+0x17],dh
  41a0a8:	push   ebp
  41a0a9:	sbb    eax,0x8afde7cd
  41a0ae:	(bad)  
  41a0b0:	sti    
  41a0b1:	outs   dx,BYTE PTR ds:[esi]
  41a0b2:	fldenv ds:0xd9b696b6
  41a0b8:	(bad)  
  41a0b9:	fcomp  QWORD PTR [eax]
  41a0bb:	ret    
  41a0bc:	lods   al,BYTE PTR ds:[esi]
  41a0bd:	sub    al,0xa8
  41a0bf:	scas   eax,DWORD PTR es:[edi]
  41a0c0:	mov    ebp,DWORD PTR [edx]
  41a0c2:	xor    al,0x8f
  41a0c4:	mov    edi,0xd7b073bd
  41a0c9:	push   edi
  41a0ca:	pop    ss
  41a0cb:	xor    esp,ebx
  41a0cd:	and    ch,BYTE PTR [esp+ebp*8+0x6abb49b3]
  41a0d4:	sti    
  41a0d5:	mov    edi,0xe34735b3
  41a0da:	aaa    
  41a0db:	in     eax,0x54
  41a0dd:	inc    esi
  41a0de:	jmp    0x41a109
  41a0e0:	pop    esi
  41a0e1:	cmp    eax,0x760973e
  41a0e6:	inc    eax
  41a0e7:	sbb    edx,DWORD PTR [ebp+edx*2+0x146c68f0]
  41a0ee:	ins    DWORD PTR es:[edi],dx
  41a0ef:	(bad)
  41a0f3:	add    DWORD PTR [eax+0x34b4feda],edx
  41a0f9:	test   DWORD PTR [edx+0x50985832],esi
  41a0ff:	into   
  41a100:	mov    ds:0xf0df0aae,al
  41a105:	mov    esi,0x6be68953
  41a10a:	pop    ebp
  41a10b:	push   eax
  41a10c:	xor    al,0xa3
  41a10e:	pop    edi
  41a10f:	xor    bl,BYTE PTR [esi+0x282c4acc]
  41a115:	lods   al,BYTE PTR ds:[esi]
  41a116:	mov    edx,0x4e065ce
  41a11b:	sbb    al,0x4
  41a11d:	pop    esp
  41a11e:	out    0x71,eax
  41a120:	or     DWORD PTR [ebx+0x32],ebp
  41a123:	push   ebp
  41a124:	and    BYTE PTR [edi+0x1bedb504],0x7a
  41a12b:	pop    ebx
  41a12c:	adc    BYTE PTR [esi],0x13
  41a12f:	xchg   ecx,eax
  41a130:	fimul  DWORD PTR [ecx+eax*4+0x58]
  41a134:	rcl    ebx,cl
  41a136:	aaa    
  41a137:	pop    esi
  41a138:	xchg   DWORD PTR [edx],ebx
  41a13a:	inc    esp
  41a13b:	cmp    eax,0x28b1c071
  41a140:	repz call 0x859dcfb2
  41a146:	jbe    0x41a119
  41a148:	pop    ds
  41a149:	mov    BYTE PTR [eax+0xc19e851],cl
  41a14f:	js     0x41a1c0
  41a151:	aaa    
  41a152:	push   ss
  41a153:	shl    DWORD PTR [ebx-0xfc93e91],cl
  41a159:	cmp    BYTE PTR [edx-0x19],bl
  41a15c:	xchg   edi,eax
  41a15d:	push   edi
  41a15e:	or     ax,0x96e
  41a162:	mov    cl,0xf7
  41a164:	arpl   WORD PTR [ebp-0x41],sp
  41a167:	xor    eax,0xcaf3309e
  41a16c:	shr    BYTE PTR [edi+0x32b36896],cl
  41a172:	add    eax,0xd4e7573b
  41a177:	adc    al,BYTE PTR [eax-0x22]
  41a17a:	push   cs
  41a17b:	inc    edi
  41a17c:	cwde   
  41a17d:	xor    eax,0x3bff8905
  41a182:	or     DWORD PTR [edx+0x19],ecx
  41a185:	dec    esp
  41a186:	xor    ecx,esi
  41a188:	push   0xa
  41a18a:	addr16 popa 
  41a18c:	sub    al,0x5a
  41a18e:	jae    0x41a204
  41a190:	mov    eax,0x4383bb10
  41a195:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a196:	nop
  41a197:	retf   0xba52
  41a19a:	aad    0x69
  41a19c:	retf   
  41a19d:	mov    dl,0x0
  41a19f:	dec    edi
  41a1a0:	cmp    bl,BYTE PTR [esi]
  41a1a2:	into   
  41a1a3:	pushf  
  41a1a4:	in     al,0xb5
  41a1a6:	adc    DWORD PTR [eax-0x2ae83a4a],ebp
  41a1ac:	loop   0x41a1a8
  41a1ae:	pop    edx
  41a1af:	mov    esp,DWORD PTR [ebx-0x44a04a49]
  41a1b5:	iret   
  41a1b6:	mov    WORD PTR ds:0x946c706a,cs
  41a1bc:	adc    al,BYTE PTR [ebp-0x3e]
  41a1bf:	fcomi  st,st(1)
  41a1c1:	(bad)  
  41a1c2:	es xor al,0xce
  41a1c5:	sbb    DWORD PTR [edi-0x79],ecx
  41a1c8:	add    eax,0x20379507
  41a1cd:	sub    DWORD PTR [esp+edx*4+0x7a52c6d6],ecx
  41a1d4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a1d5:	in     al,dx
  41a1d6:	adc    cl,ch
  41a1d8:	xor    cl,BYTE PTR gs:[ebx+0x3c42f019]
  41a1df:	retf   0xeb16
  41a1e2:	sub    edi,DWORD PTR [eax+0x1bbb7599]
  41a1e8:	mov    ch,BYTE PTR [ebx]
  41a1ea:	cld    
  41a1eb:	pop    esi
  41a1ec:	aad    0x3e
  41a1ee:	adc    BYTE PTR [ebx],0xde
  41a1f1:	pusha  
  41a1f2:	stos   BYTE PTR es:[edi],al
  41a1f3:	retf   
  41a1f4:	mov    BYTE PTR [esi],dl
  41a1f6:	inc    edx
  41a1f7:	clc    
  41a1f8:	scas   eax,DWORD PTR es:[edi]
  41a1f9:	mov    bh,0x85
  41a1fb:	sbb    DWORD PTR [edi],ebp
  41a1fd:	pop    ds
  41a1fe:	jbe    0x41a18e
  41a200:	jno    0x41a1b8
  41a202:	xchg   ecx,edi
  41a204:	loopne 0x41a1d9
  41a206:	and    al,0xf9
  41a208:	(bad)  
  41a20a:	push   0xffffffe5
  41a20c:	hlt    
  41a20d:	(bad)  [edi]
  41a20f:	repnz std 
  41a211:	add    dl,0x1b
  41a214:	jl     0x41a220
  41a216:	mov    esi,cs
  41a218:	mov    ch,0x66
  41a21a:	push   edx
  41a21b:	icebp  
  41a21c:	pop    ss
  41a21d:	fsub   DWORD PTR [ecx]
  41a21f:	(bad)  
  41a220:	bound  esp,QWORD PTR [esi]
  41a222:	mov    esp,0x531d5aee
  41a227:	sti    
  41a228:	mov    bl,0x1b
  41a22a:	test   al,0xa
  41a22c:	or     DWORD PTR [esp+eax*1],0x976f0322
  41a233:	cmp    eax,0x256caafd
  41a238:	ret    
  41a239:	outs   dx,DWORD PTR ds:[esi]
  41a23a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a23b:	rcpps  xmm5,XMMWORD PTR [eax-0x396fd998]
  41a242:	add    edi,DWORD PTR [eax-0x61]
  41a245:	ss inc edx
  41a247:	jmp    0x41a2bf
  41a249:	jns    0x41a1ec
  41a24b:	jecxz  0x41a278
  41a24d:	pop    ebp
  41a24e:	sub    BYTE PTR [edi+0x75],0x1
  41a252:	push   0x83c592f
  41a257:	inc    eax
  41a258:	ins    BYTE PTR es:[edi],dx
  41a259:	dec    ecx
  41a25a:	outs   dx,DWORD PTR ds:[esi]
  41a25b:	icebp  
  41a25c:	les    edi,FWORD PTR [edx]
  41a25e:	out    dx,al
  41a25f:	enter  0xf71b,0xb3
  41a263:	push   ebp
  41a264:	inc    ebx
  41a265:	cs mov bh,0x14
  41a268:	add    al,0xfd
  41a26a:	test   BYTE PTR [ecx+edi*4-0x20221264],dl
  41a271:	shl    DWORD PTR [edx+0x7b667fb5],1
  41a277:	repz sub eax,0xc9a5fdc8
  41a27d:	rcl    dh,1
  41a27f:	cmc    
  41a280:	dec    ebx
  41a281:	dec    ebx
  41a282:	imul   ebp,DWORD PTR [ecx+0x66],0x3
  41a286:	jno    0x41a25c
  41a288:	sbb    ebp,eax
  41a28a:	cmp    eax,0x6aa37ef9
  41a28f:	repnz adc al,0x79
  41a292:	and    esp,edi
  41a294:	cmc    
  41a295:	jbe    0x41a265
  41a297:	das    
  41a298:	add    bl,cl
  41a29a:	(bad)  
  41a29c:	retf   0x82fc
  41a29f:	sahf   
  41a2a0:	jae    0x41a28a
  41a2a2:	mov    bl,0x57
  41a2a4:	push   0x4d565b3d
  41a2a9:	sub    esi,DWORD PTR [esi-0x273b5eac]
  41a2af:	mov    edx,0xc95bc38b
  41a2b4:	ret    0xc
  41a2b7:	jmp    0xeba7:0xcfa60f28
  41a2be:	ins    BYTE PTR es:[edi],dx
  41a2bf:	xor    eax,0x62375e6
  41a2c4:	adc    BYTE PTR [esi],al
  41a2c6:	out    dx,eax
  41a2c7:	inc    edi
  41a2c8:	and    eax,DWORD PTR [eax]
  41a2ca:	add    BYTE PTR ds:0xe7000003,dh
  41a2d0:	popa   
  41a2d1:	stos   BYTE PTR es:[edi],al
  41a2d2:	rcr    BYTE PTR [edi],cl
  41a2d4:	ds mov al,0x9d
  41a2d7:	nop
  41a2d8:	idiv   DWORD PTR [edx]
  41a2da:	adc    DWORD PTR [esi+0x7a],esp
  41a2dd:	push   0x8ffda117
  41a2e2:	and    al,0xc7
  41a2e4:	or     al,BYTE PTR [ebp+0x3a]
  41a2e7:	scas   eax,DWORD PTR es:[edi]
  41a2e8:	inc    ebx
  41a2e9:	ficomp WORD PTR [edi+0x39a5627d]
  41a2ef:	push   esp
  41a2f0:	jnp    0x41a2d8
  41a2f2:	jmp    0xc0e5:0x8dce4260
  41a2f9:	outs   dx,DWORD PTR ds:[esi]
  41a2fa:	retf   
  41a2fb:	in     al,0xd0
  41a2fd:	test   al,0x42
  41a2ff:	dec    edi
  41a300:	stos   BYTE PTR es:[edi],al
  41a301:	xor    BYTE PTR ds:0xb4422154,ch
  41a307:	push   0x62a11f9e
  41a30c:	sar    DWORD PTR [ecx+0x37c72fe3],1
  41a312:	lahf   
  41a313:	add    DWORD PTR [eax-0x32751e73],edi
  41a319:	or     BYTE PTR [esi-0x1a],al
  41a31c:	pop    ecx
  41a31d:	in     eax,0xaa
  41a31f:	imul   ebx,edi,0x5303713e
  41a325:	in     eax,dx
  41a326:	clc    
  41a327:	push   ebx
  41a328:	fnstenv [ebx-0xe]
  41a32b:	and    DWORD PTR [esi],edi
  41a32d:	popf   
  41a32e:	mov    ah,0x20
  41a330:	aaa    
  41a331:	xchg   esi,eax
  41a332:	inc    ebp
  41a333:	sar    eax,0xc7
  41a336:	sbb    al,0x25
  41a338:	cli    
  41a339:	inc    ebx
  41a33a:	add    al,BYTE PTR [edi+ebx*2]
  41a33d:	cmp    al,0xa5
  41a33f:	dec    esi
  41a340:	push   ds
  41a341:	cmp    eax,0x75e35ae1
  41a346:	cmp    DWORD PTR [ebp-0x1e],ecx
  41a349:	pop    edx
  41a34a:	js     0x41a323
  41a34c:	and    eax,0xd5086d0f
  41a351:	fistp  QWORD PTR [edx+eax*2]
  41a354:	pop    eax
  41a355:	xchg   ebp,eax
  41a356:	xor    BYTE PTR [ecx+0x3f4e99af],ch
  41a35c:	hlt    
  41a35d:	xchg   BYTE PTR [ecx-0x5dafe7d1],al
  41a363:	inc    ebp
  41a364:	pop    edi
  41a365:	xor    eax,0x39723da
  41a36a:	in     eax,dx
  41a36b:	(bad)  
  41a36c:	je     0x41a31a
  41a36e:	push   ecx
  41a36f:	in     eax,0x21
  41a371:	ror    BYTE PTR [ebx-0x3c27fa97],0x8c
  41a378:	dec    ecx
  41a379:	into   
  41a37a:	in     eax,0xc4
  41a37c:	in     eax,0x2
  41a37e:	mov    WORD PTR [esi+0x4e11b4cb],ss
  41a384:	popa   
  41a385:	pop    eax
  41a386:	jle    0x41a384
  41a388:	xchg   ebx,eax
  41a389:	inc    ebx
  41a38a:	icebp  
  41a38b:	cmp    eax,0xdc1f37b4
  41a390:	sub    ch,BYTE PTR [esp+ebp*1-0x48810beb]
  41a397:	data16 jns 0x41a330
  41a39a:	nop
  41a39b:	dec    ebx
  41a39c:	aam    0xcb
  41a39e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a39f:	fs out 0x34,al
  41a3a2:	mov    DWORD PTR [esi+esi*2],ecx
  41a3a5:	aam    0x93
  41a3a7:	gs inc ecx
  41a3a9:	sbb    dl,BYTE PTR [edi-0x40]
  41a3ac:	imul   bh
  41a3ae:	adc    al,0xd4
  41a3b0:	test   DWORD PTR fs:[edx+0x4f99c28a],ecx
  41a3b7:	cmp    cl,BYTE PTR [ebx+0x2e478983]
  41a3bd:	dec    esi
  41a3be:	in     eax,0xc
  41a3c0:	sub    al,0x6c
  41a3c2:	imul   esp,DWORD PTR [esi],0x9d74148d
  41a3c8:	xor    edi,DWORD PTR [eax+0x15]
  41a3cb:	pushf  
  41a3cc:	xor    BYTE PTR [ecx-0x1de52413],cl
  41a3d2:	jle    0x41a3b9
  41a3d4:	int3   
  41a3d5:	sbb    cl,BYTE PTR [edi-0x16]
  41a3d8:	popa   
  41a3d9:	adc    ch,dh
  41a3db:	iret   
  41a3dc:	add    eax,0x1d6e43ea
  41a3e1:	mov    esi,0x339130da
  41a3e6:	jle    0x41a416
  41a3e8:	enter  0x3f21,0x15
  41a3ec:	cwde   
  41a3ed:	xor    al,BYTE PTR [eax-0x41]
  41a3f0:	(bad)  
  41a3f2:	aam    0x7f
  41a3f4:	or     al,BYTE PTR ds:0x36004b09
  41a3fa:	sbb    al,0x53
  41a3fc:	ror    BYTE PTR [eax+0x16],cl
  41a3ff:	sbb    BYTE PTR [ecx+0x3f],bh
  41a402:	call   0x13ee:0x1fdf1839
  41a409:	mov    ebp,0x73c8c453
  41a40e:	scas   eax,DWORD PTR es:[edi]
  41a40f:	push   edx
  41a410:	out    0xc2,eax
  41a412:	ins    DWORD PTR es:[edi],dx
  41a413:	push   esi
  41a414:	xchg   esi,eax
  41a415:	inc    ecx
  41a416:	jge    0x41a399
  41a418:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a419:	ret    
  41a41a:	leave  
  41a41b:	jo     0x41a43a
  41a41d:	dec    ebp
  41a41e:	mov    esi,cs
  41a420:	pop    edi
  41a421:	dec    eax
  41a422:	jo     0x41a439
  41a424:	inc    eax
  41a425:	pop    ds
  41a426:	stos   BYTE PTR es:[edi],al
  41a427:	sbb    eax,0x9a8798cc
  41a42c:	mov    bh,0x7c
  41a42e:	rol    DWORD PTR [edx],1
  41a430:	jge    0x41a455
  41a432:	(bad)  
  41a433:	adc    esp,DWORD PTR [ecx]
  41a435:	fs dec esp
  41a437:	inc    ebx
  41a438:	aaa    
  41a439:	cmp    DWORD PTR ds:0x162bdd43,esp
  41a43f:	add    al,0x8c
  41a441:	cmp    ch,0x17
  41a444:	data16 std 
  41a446:	retf   0xcbb4
  41a449:	dec    edx
  41a44a:	xchg   ebp,eax
  41a44b:	imul   esp,DWORD PTR [edi],0x65
  41a44e:	xor    esp,edi
  41a450:	aas    
  41a451:	sbb    eax,0x5f526e48
  41a456:	mov    ah,0x8c
  41a458:	adc    eax,0xd8e63fcb
  41a45d:	lock jb 0x41a418
  41a460:	fbld   TBYTE PTR [ebx-0x44]
  41a463:	pushf  
  41a464:	lock dec ebp
  41a466:	jns    0x41a4aa
  41a468:	call   0x72bb94c3
  41a46d:	inc    edx
  41a46e:	(bad)  
  41a46f:	or     BYTE PTR [ebp-0x42],ch
  41a472:	cld    
  41a473:	add    al,BYTE PTR [esp+edx*1]
  41a476:	sbb    DWORD PTR [esi-0x3ab42ce3],0x35
  41a47d:	sbb    BYTE PTR [edx+0x71],dl
  41a480:	xchg   ebx,eax
  41a481:	rol    ebp,0x76
  41a484:	rcr    bl,1
  41a486:	jge    0x41a459
  41a488:	out    dx,al
  41a489:	clc    
  41a48a:	test   DWORD PTR [ecx+0x77],esp
  41a48d:	pop    eax
  41a48e:	sub    esp,DWORD PTR [ecx-0xb]
  41a491:	retf   0x26e1
  41a494:	imul   ecx,DWORD PTR [edx-0x425e5a19],0xbf47fd7d
  41a49e:	mov    edx,0x38c6afa
  41a4a3:	(bad)  
  41a4a4:	push   ds
  41a4a5:	retf   0x4480
  41a4a8:	pop    eax
  41a4a9:	mov    BYTE PTR [eax+edi*4+0x3bc66db8],al
  41a4b0:	mov    eax,ds:0xb810b657
  41a4b5:	out    dx,eax
  41a4b6:	add    ch,BYTE PTR [ecx-0x3e957fa8]
  41a4bc:	pop    ds
  41a4bd:	test   al,0x1f
  41a4bf:	dec    ecx
  41a4c0:	inc    edi
  41a4c1:	cmp    al,cl
  41a4c3:	xchg   esi,eax
  41a4c4:	xchg   dl,cl
  41a4c6:	adc    esp,edi
  41a4c8:	sbb    BYTE PTR [bx+di+0x20],ah
  41a4cc:	ret    0x5ba6
  41a4cf:	cdq    
  41a4d0:	inc    esp
  41a4d1:	xor    BYTE PTR [ecx-0x60],bh
  41a4d4:	cwde   
  41a4d5:	minps  xmm3,xmm2
  41a4d8:	add    BYTE PTR [ebp-0x1b],dh
  41a4db:	fisubr DWORD PTR [edx+0x15d0f988]
  41a4e1:	dec    ebx
  41a4e2:	xor    al,0xff
  41a4e4:	cmp    eax,0xcb1868d7
  41a4e9:	dec    eax
  41a4ea:	ret    
  41a4eb:	dec    ecx
  41a4ec:	outs   dx,DWORD PTR ds:[esi]
  41a4ed:	mov    ds:0xf10dd965,eax
  41a4f2:	or     esp,eax
  41a4f4:	lods   eax,DWORD PTR ds:[esi]
  41a4f5:	jp     0x41a4aa
  41a4f7:	dec    edx
  41a4f8:	xor    al,0x1f
  41a4fa:	add    dl,BYTE PTR [edi+ebx*4+0x81d1439]
  41a501:	mov    ds:0xc52fe333,al
  41a506:	and    ecx,ebx
  41a508:	mov    dh,bh
  41a50a:	js     0x41a4f8
  41a50c:	(bad)  [eax+0x30]
  41a50f:	loop   0x41a585
  41a511:	sti    
  41a512:	push   ss
  41a513:	mov    cl,0xbb
  41a515:	int    0x18
  41a517:	addr16 mov cl,0xf6
  41a51a:	imul   esi,DWORD PTR [edx+ebp*8],0x63
  41a51e:	add    esi,DWORD PTR [edx+0x0]
  41a521:	stos   DWORD PTR es:[edi],eax
  41a522:	test   al,0x82
  41a524:	mov    ds:0x7187f816,al
  41a52a:	retf   0xf07
  41a52d:	ja     0x41a58d
  41a52f:	loopne 0x41a566
  41a531:	mov    eax,DWORD PTR [esi-0x58ec9b4e]
  41a537:	sub    cl,ch
  41a539:	sub    DWORD PTR [ecx-0x1a],ebp
  41a53c:	mov    ch,0x6a
  41a53e:	dec    ecx
  41a53f:	sar    BYTE PTR [esi],cl
  41a541:	retf   0x8910
  41a544:	push   esi
  41a545:	and    ebx,DWORD PTR [ecx]
  41a547:	popf   
  41a548:	mov    BYTE PTR [ebx-0x56],ch
  41a54b:	mov    bl,0x97
  41a54d:	jae    0x41a4f8
  41a54f:	js     0x41a58a
  41a551:	inc    esi
  41a552:	mov    WORD PTR [ebx+edi*8+0x7c2e3085],?
  41a559:	dec    ecx
  41a55a:	jecxz  0x41a582
  41a55c:	call   0x89beed9e
  41a561:	mov    dh,0xf7
  41a563:	(bad)  
  41a565:	into   
  41a566:	push   esi
  41a567:	add    BYTE PTR [eax-0x4884da08],bl
  41a56d:	les    eax,FWORD PTR [edx-0x1ca8ef92]
  41a573:	push   ds
  41a574:	fild   QWORD PTR [esi-0x43afe2d8]
  41a57a:	aas    
  41a57b:	push   esi
  41a57c:	sahf   
  41a57d:	cmp    DWORD PTR gs:0xc2a26df6,0xfffffffb
  41a585:	sub    DWORD PTR [edx+edx*2+0x6d],edx
  41a589:	sub    al,0x1e
  41a58b:	call   0xfed1:0xd1bc475
  41a592:	(bad)  
  41a593:	dec    esp
  41a594:	in     al,0x8a
  41a596:	sub    al,0x39
  41a598:	scas   al,BYTE PTR es:[edi]
  41a599:	les    ecx,FWORD PTR [edi]
  41a59b:	jnp    0x41a61b
  41a59d:	repnz add ebp,edx
  41a5a0:	rcr    BYTE PTR [eax+0x299fe6f3],0xe1
  41a5a7:	cmp    al,0xd2
  41a5a9:	mov    bl,0x41
  41a5ab:	sbb    al,BYTE PTR [ebp-0x312f03a0]
  41a5b1:	(bad)  
  41a5b2:	xchg   edi,eax
  41a5b3:	scas   eax,DWORD PTR es:[edi]
  41a5b4:	iret   
  41a5b5:	pop    eax
  41a5b6:	xchg   edi,eax
  41a5b7:	mov    ds:0x74277aa8,eax
  41a5bc:	mov    DWORD PTR [edi],ebp
  41a5be:	mov    edi,0x5ed65fe9
  41a5c3:	dec    eax
  41a5c4:	pop    eax
  41a5c5:	jmp    0xcf148a87
  41a5ca:	nop
  41a5cb:	outs   dx,DWORD PTR ds:[esi]
  41a5cc:	rol    DWORD PTR [eax-0x759b3723],cl
  41a5d2:	or     DWORD PTR [ebp+0x6a],eax
  41a5d5:	popa   
  41a5d6:	ins    DWORD PTR es:[edi],dx
  41a5d7:	imul   BYTE PTR [ebx-0x5f682ed]
  41a5dd:	or     BYTE PTR [eax+ebp*1+0x16f2b73c],ah
  41a5e4:	mov    ds:0x79fa00c5,eax
  41a5e9:	aad    0x34
  41a5eb:	or     BYTE PTR [edi-0x3f2d6d01],ch
  41a5f1:	mov    WORD PTR [esi-0x73],es
  41a5f4:	repnz (bad) 
  41a5f6:	shl    esi,cl
  41a5f8:	imul   ecx,DWORD PTR [ecx],0xdee80f5
  41a5fe:	xor    al,0x9
  41a600:	inc    esi
  41a601:	aad    0xbd
  41a603:	in     eax,0x55
  41a605:	mov    ebp,esp
  41a607:	push   ecx
  41a608:	mov    DWORD PTR ds:0x42373c,0x76ff
  41a612:	push   ecx
  41a613:	mov    DWORD PTR ds:0x423674,0x1360
  41a61d:	lea    eax,[ebp-0x8]
  41a620:	mov    DWORD PTR [ebp-0x4],eax
  41a623:	mov    DWORD PTR ds:0x4236e8,0x7ee
  41a62d:	mov    eax,DWORD PTR [ebp-0x8]
  41a630:	push   edi
  41a631:	mov    edi,0xff
  41a636:	mov    DWORD PTR ds:0x42372c,0x60
  41a640:	cmp    eax,esi
  41a642:	jae    0x41ad54
  41a648:	sub    eax,eax
  41a64a:	mov    edx,esi
  41a64c:	adc    eax,DWORD PTR ds:0x423740
  41a652:	jmp    0x41a823
  41a657:	(bad)
  41a65a:	imul   ebp,ebp,0x38eced6d
  41a660:	int3   
  41a661:	fsubr  DWORD PTR [edx+ecx*8]
  41a664:	ins    BYTE PTR es:[edi],dx
  41a665:	adc    al,0x6f
  41a667:	mov    ecx,0xb4000171
  41a66c:	add    DWORD PTR [eax],eax
  41a66e:	add    BYTE PTR [esi-0x3d],ah
  41a671:	test   eax,0x98160feb
  41a676:	pop    ecx
  41a677:	fnstcw WORD PTR [ebp-0xb862a41]
  41a67d:	aad    0x22
  41a67f:	xchg   ebp,eax
  41a680:	adc    ebp,DWORD PTR es:[ebx]
  41a683:	adc    al,0x84
  41a685:	repz or eax,0x7d2369ae
  41a68b:	add    bl,BYTE PTR ss:[ecx+0x21ef0a2a]
  41a692:	cmp    eax,0x6cca1bce
  41a697:	add    dh,ch
  41a699:	loopne 0x41a702
  41a69b:	xor    DWORD PTR [eax+esi*4],0x7e475758
  41a6a2:	push   esp
  41a6a3:	jo     0x41a663
  41a6a5:	dec    eax
  41a6a6:	inc    ebx
  41a6a7:	outs   dx,DWORD PTR ds:[esi]
  41a6a8:	nop
  41a6a9:	mov    edi,0x38d59db0
  41a6ae:	cmp    eax,0x8825c6b2
  41a6b3:	mov    esi,0x71e41b84
  41a6b8:	jle    0x41a6c9
  41a6ba:	dec    ebp
  41a6bb:	outs   dx,DWORD PTR ds:[esi]
  41a6bc:	add    al,0xcb
  41a6be:	cmc    
  41a6bf:	ffree  st(5)
  41a6c1:	stos   BYTE PTR es:[edi],al
  41a6c2:	fistp  DWORD PTR [edi-0x7dc6aa10]
  41a6c8:	cmp    edi,DWORD PTR [edx+0x5069449f]
  41a6ce:	cs push edx
  41a6d0:	(bad)  
  41a6d1:	into   
  41a6d2:	mov    al,0xaa
  41a6d4:	in     eax,dx
  41a6d5:	in     al,0x3f
  41a6d7:	adc    eax,0x970290d9
  41a6dc:	cmp    DWORD PTR [esi-0x59fc7178],edi
  41a6e2:	mov    dl,0xfc
  41a6e4:	fmul   DWORD PTR [eax+0x714e09cc]
  41a6ea:	push   ss
  41a6eb:	mov    edx,0x75adce86
  41a6f0:	enter  0x32a0,0xa8
  41a6f4:	xchg   DWORD PTR [ebx+edi*4+0x4f6ad6ef],esi
  41a6fb:	mov    edx,0xc547fbe
  41a700:	xchg   DWORD PTR [esi+0x5c],ebp
  41a703:	gs inc ebx
  41a705:	push   0xac47f96d
  41a70a:	imul   ebx,DWORD PTR [ecx-0x67],0xd8c286d6
  41a711:	cli    
  41a712:	mov    bl,0x83
  41a714:	push   ebp
  41a715:	xlat   BYTE PTR ds:[ebx]
  41a716:	dec    esp
  41a717:	jnp    0x41a786
  41a719:	jecxz  0x41a767
  41a71b:	mov    esp,0x15053e85
  41a720:	outs   dx,BYTE PTR ds:[esi]
  41a721:	bound  edx,QWORD PTR [edx-0x63]
  41a724:	push   edx
  41a725:	xchg   esp,eax
  41a726:	rol    DWORD PTR [edx],1
  41a728:	out    0x2f,eax
  41a72a:	xchg   ecx,eax
  41a72b:	adc    DWORD PTR [edi+0x55],ebx
  41a72e:	fucomip st,st(0)
  41a730:	ret    0xb350
  41a733:	mov    cl,0x19
  41a735:	add    bl,ch
  41a737:	jp     0x41a751
  41a739:	dec    esi
  41a73a:	push   edx
  41a73b:	rol    BYTE PTR [edx-0x70],0x40
  41a73f:	popf   
  41a740:	add    eax,0x44803ac0
  41a746:	les    eax,FWORD PTR [edx+0xadbc9e5]
  41a74c:	inc    ebp
  41a74d:	adc    eax,0x187e5c57
  41a752:	hlt    
  41a753:	xor    eax,0xa77d4408
  41a758:	inc    edi
  41a759:	ja     0x41a761
  41a75b:	jl     0x41a712
  41a75d:	jns    0x41a7bf
  41a75f:	mov    al,0xe6
  41a761:	(bad)  
  41a763:	mov    ds,WORD PTR [ebp+0x4f]
  41a766:	stos   BYTE PTR es:[edi],al
  41a767:	mov    edx,0x1ce48f8d
  41a76c:	retf   0x4c8e
  41a76f:	stos   BYTE PTR es:[edi],al
  41a770:	neg    DWORD PTR [edi+0x65]
  41a773:	add    dl,BYTE PTR [ebx]
  41a775:	jns    0x41a778
  41a777:	adc    al,0x5d
  41a779:	sbb    ebp,DWORD PTR [edi+0x209eecd9]
  41a77f:	and    ch,cl
  41a781:	push   ebx
  41a782:	mov    edi,0x77bdfb79
  41a787:	mov    ebp,0xaee10cc9
  41a78c:	test   al,0x5a
  41a78e:	ja     0x41a7ff
  41a790:	fadd   DWORD PTR [eax+eiz*8-0x5fc7f3c5]
  41a797:	pop    ds
  41a798:	das    
  41a799:	(bad)  
  41a79a:	jnp    0x41a7f4
  41a79c:	pop    edx
  41a79d:	sub    al,0xcc
  41a79f:	rcl    DWORD PTR [edx],cl
  41a7a1:	mov    esp,0x350ff179
  41a7a6:	out    0x71,al
  41a7a8:	inc    ecx
  41a7a9:	xchg   esp,eax
  41a7aa:	mov    edx,0x76e113e7
  41a7af:	clc    
  41a7b0:	push   0xfffffff8
  41a7b2:	daa    
  41a7b3:	mov    es,ecx
  41a7b5:	mov    esi,0xe50bad05
  41a7ba:	jmp    0xd1ed:0xd7fcc981
  41a7c1:	sub    ebx,DWORD PTR [edi+0x33]
  41a7c4:	inc    edi
  41a7c5:	push   eax
  41a7c6:	mov    eax,0xca324bb4
  41a7cb:	addr16 icebp 
  41a7cd:	shl    DWORD PTR [ebx+0x7d],0x87
  41a7d1:	jo     0x41a852
  41a7d3:	mov    ss,edx
  41a7d5:	lock xchg ebx,eax
  41a7d7:	jmp    0x41a84d
  41a7d9:	lea    ebx,[ebx+0x1bc6a92a]
  41a7df:	pop    esi
  41a7e0:	jle    0x41a837
  41a7e2:	cli    
  41a7e3:	in     al,dx
  41a7e4:	lea    esp,[edi-0x75681209]
  41a7ea:	retf   
  41a7eb:	(bad)  
  41a7ec:	in     al,0xc9
  41a7ee:	mov    ebp,0x1b3fb966
  41a7f3:	aam    0x37
  41a7f5:	sbb    bh,BYTE PTR [edi+edi*4]
  41a7f8:	(bad)  
  41a7f9:	dec    esp
  41a7fa:	retf   0xb532
  41a7fd:	adc    DWORD PTR [ecx],0x77
  41a800:	jnp    0x41a7e1
  41a802:	(bad)
  41a806:	xchg   edx,eax
  41a807:	or     eax,DWORD PTR [esi+0x4e]
  41a80a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a80b:	adc    eax,0xc1fb0574
  41a810:	into   
  41a811:	add    DWORD PTR ds:0x577033ca,esp
  41a817:	sub    DWORD PTR [ebx],ebp
  41a819:	aas    
  41a81a:	fild   QWORD PTR [edi+0x42f6491c]
  41a820:	leave  
  41a821:	mov    WORD PTR [edi-0x3f],fs
  41a824:	jmp    0x4236:0xe8258108
  41a82b:	add    BYTE PTR ds:0x5300006a,bh
  41a831:	sub    eax,0xd5
  41a836:	mov    eax,DWORD PTR [ebp-0x4]
  41a839:	and    DWORD PTR ds:0x42372c,0x35a9
  41a843:	mov    eax,DWORD PTR [eax]
  41a845:	test   edx,edx
  41a847:	mov    DWORD PTR ds:0x423668,0x7b28
  41a851:	je     0x41a88c
  41a857:	mov    ecx,DWORD PTR [ebp-0x4]
  41a85a:	add    eax,edx
  41a85c:	cmp    DWORD PTR [ecx],eax
  41a85e:	mov    DWORD PTR ds:0x4214fc,0x1a0f
  41a868:	mov    eax,DWORD PTR [ebp-0x4]
  41a86b:	mov    DWORD PTR ds:0x4214f8,0x7050
  41a875:	jae    0x41aa96
  41a87b:	or     DWORD PTR ds:0x423670,0x423700
  41a885:	add    DWORD PTR [eax],edx
  41a887:	jmp    0x41aa98
  41a88c:	mov    ebx,DWORD PTR [ebp-0x4]
  41a88f:	mov    DWORD PTR ds:0x423674,0x49c2
  41a899:	mov    ecx,esi
  41a89b:	xor    DWORD PTR ds:0x42373c,0x4236f4
  41a8a5:	and    ecx,edi
  41a8a7:	adc    DWORD PTR ds:0x4214ec,0x4214e0
  41a8b1:	add    eax,ecx
  41a8b3:	cmp    DWORD PTR [ebx],eax
  41a8b5:	mov    eax,DWORD PTR [ebp-0x4]
  41a8b8:	jae    0x41aa96
  41a8be:	add    DWORD PTR [eax],ecx
  41a8c0:	jmp    0x41aa98
  41a8c5:	jmp    0x41aa96
  41a8ca:	out    dx,al
  41a8cb:	repz fcom QWORD PTR [ebp+ebx*8+0x38fbeebf]
  41a8d3:	mov    al,ds:0xa3637296
  41a8d8:	pop    es
  41a8d9:	sub    DWORD PTR [ebp+0x73],0x1b40001
  41a8e0:	add    BYTE PTR [eax],al
  41a8e2:	jo     0x41a958
  41a8e4:	hlt    
  41a8e5:	cmp    ch,BYTE PTR [esi-0x7f]
  41a8e8:	fs add ch,dl
  41a8eb:	lea    esp,[ebx+0x713b7ab3]
  41a8f1:	inc    edi
  41a8f2:	mov    ebp,0xafa1aed7
  41a8f7:	push   esp
  41a8f8:	fs and eax,0xf66ece01
  41a8fe:	sti    
  41a8ff:	and    BYTE PTR ds:0x79e92456,dl
  41a905:	mov    dl,0xd0
  41a907:	dec    esp
  41a908:	pop    ds
  41a909:	stos   BYTE PTR es:[edi],al
  41a90a:	inc    edx
  41a90b:	ins    DWORD PTR es:[edi],dx
  41a90c:	sbb    al,0xa7
  41a90e:	test   BYTE PTR [esi+0x49],0xce
  41a912:	in     al,0x75
  41a914:	outs   dx,BYTE PTR ds:[esi]
  41a915:	jmp    0x41a955
  41a917:	add    DWORD PTR [ebx],edi
  41a919:	cmp    ebp,DWORD PTR [ebp-0x21441a68]
  41a91f:	inc    esi
  41a920:	cmp    ebp,DWORD PTR [esp+esi*1+0x63c651ca]
  41a927:	sbb    BYTE PTR [ecx],ch
  41a929:	pusha  
  41a92a:	test   DWORD PTR [ebx-0x4],ebp
  41a92d:	ins    DWORD PTR es:[edi],dx
  41a92e:	inc    edi
  41a92f:	std    
  41a930:	dec    edx
  41a931:	aam    0x27
  41a933:	push   ebp
  41a934:	jecxz  0x41a983
  41a936:	mov    ebp,0x41d73bc7
  41a93b:	xchg   ecx,eax
  41a93c:	add    DWORD PTR [esi+0x6733e8ab],0xffffff97
  41a943:	dec    edx
  41a944:	add    al,0xf8
  41a946:	stos   DWORD PTR es:[edi],eax
  41a947:	mov    esi,0x50d82c41
  41a94c:	dec    edi
  41a94d:	lds    eax,FWORD PTR [esi+0x1a9de737]
  41a953:	fldcw  WORD PTR [edx-0x2401c502]
  41a959:	jp     0x41a92c
  41a95b:	test   BYTE PTR [ebx+0x1c],ah
  41a95e:	push   0xfcd670cf
  41a963:	pop    ecx
  41a964:	std    
  41a965:	stos   BYTE PTR es:[edi],al
  41a966:	repnz mul BYTE PTR [ecx+0xef644a2]
  41a96d:	ror    BYTE PTR [ebx-0x36d6fc53],cl
  41a973:	scas   al,BYTE PTR es:[edi]
  41a974:	inc    edi
  41a975:	xchg   esi,eax
  41a976:	mov    ebx,fs
  41a978:	les    edi,FWORD PTR [ebp+0x3c]
  41a97b:	or     dh,al
  41a97d:	jne    0x41a9ad
  41a97f:	imul   ecx,DWORD PTR [esi-0x76e2d206],0xc5ec823c
  41a989:	inc    edx
  41a98a:	mov    edi,0xb8e6ff9e
  41a98f:	or     BYTE PTR [ebx+0x62bdc08a],0xff
  41a996:	cmp    eax,0x49e5f3c7
  41a99b:	jb     0x41a9ac
  41a99d:	enter  0xfefd,0x22
  41a9a1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a9a2:	push   cs
  41a9a3:	or     BYTE PTR [edx],cl
  41a9a5:	mov    dh,0xbd
  41a9a7:	sbb    edi,ecx
  41a9a9:	ds repz xchg esi,eax
  41a9ac:	pop    ss
  41a9ad:	in     eax,0x57
  41a9af:	xchg   DWORD PTR [edi],eax
  41a9b1:	jno    0x41a9d4
  41a9b3:	pand   mm6,QWORD PTR [ecx-0x6f3f0b17]
  41a9ba:	mov    ebx,0x5a8647b6
  41a9bf:	in     eax,0xc6
  41a9c1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a9c2:	iret   
  41a9c3:	xchg   esp,eax
  41a9c4:	mov    ds:0xee187f1b,al
  41a9c9:	cmc    
  41a9ca:	call   DWORD PTR [edi-0x71]
  41a9cd:	xor    dl,dl
  41a9cf:	lods   al,BYTE PTR ds:[esi]
  41a9d0:	cs sbb eax,edi
  41a9d3:	lods   eax,DWORD PTR ds:[esi]
  41a9d4:	cwde   
  41a9d5:	stos   BYTE PTR es:[edi],al
  41a9d6:	jmp    0x1457428c
  41a9db:	fcomp  st(3)
  41a9dd:	scas   al,BYTE PTR es:[edi]
  41a9de:	adc    dl,bh
  41a9e0:	adc    edx,edi
  41a9e2:	xchg   ebx,eax
  41a9e3:	cmp    al,0xca
  41a9e5:	sbb    al,0x25
  41a9e7:	mov    bh,0x2d
  41a9e9:	sahf   
  41a9ea:	xor    DWORD PTR [esi+0x35d2908b],0x1fbd79b
  41a9f4:	xchg   BYTE PTR cs:[ebx-0x5e58458b],bh
  41a9fb:	push   ebx
  41a9fc:	add    dl,dh
  41a9fe:	aas    
  41a9ff:	retf   
  41aa00:	add    al,al
  41aa02:	push   ebx
  41aa03:	add    ebp,DWORD PTR [edx]
  41aa05:	sbb    al,0x87
  41aa07:	(bad)  
  41aa08:	xchg   esi,eax
  41aa09:	or     DWORD PTR [edi],esi
  41aa0b:	dec    eax
  41aa0c:	enter  0xdc8d,0xfa
  41aa10:	aaa    
  41aa11:	dec    eax
  41aa12:	jnp    0x41a9a4
  41aa14:	out    dx,al
  41aa15:	pop    ds
  41aa16:	mov    al,0x10
  41aa18:	es ins BYTE PTR es:[edi],dx
  41aa1a:	pop    esi
  41aa1b:	sub    BYTE PTR [ebp+0x3a9dcd05],cl
  41aa21:	not    DWORD PTR [eax+0x7971234b]
  41aa27:	push   cs
  41aa28:	or     DWORD PTR [esi-0x788f2b0],0x2e5273cf
  41aa32:	scas   eax,DWORD PTR es:[edi]
  41aa33:	sub    DWORD PTR [ebp+0x2a29db11],ebp
  41aa39:	inc    esp
  41aa3a:	mov    ah,0x42
  41aa3c:	popa   
  41aa3d:	and    eax,0x26788c88
  41aa42:	out    dx,al
  41aa43:	dec    ebx
  41aa44:	cli    
  41aa45:	icebp  
  41aa46:	fst    QWORD PTR [ecx-0x6b93d17c]
  41aa4c:	call   0x6b2dce2
  41aa51:	(bad)  
  41aa52:	dec    edi
  41aa53:	mov    DWORD PTR es:[edi+0x7171bf3b],esi
  41aa5a:	pop    edx
  41aa5b:	stos   DWORD PTR es:[edi],eax
  41aa5c:	int3   
  41aa5d:	cmp    al,0xa7
  41aa5f:	sbb    BYTE PTR [ecx+eiz*8-0x1d2bb32d],0xe8
  41aa67:	push   ds
  41aa68:	push   ebx
  41aa69:	and    eax,edx
  41aa6b:	rol    BYTE PTR [esp+esi*2],1
  41aa6e:	mov    ebx,edi
  41aa70:	cmp    eax,0x4be95800
  41aa75:	fwait
  41aa76:	imul   ebx,esi,0x97f3884b
  41aa7c:	jecxz  0x41aaa0
  41aa7e:	mov    ah,0x0
  41aa80:	out    dx,al
  41aa81:	push   ds
  41aa82:	inc    ebx
  41aa83:	adc    ch,bh
  41aa85:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41aa86:	call   0xab21:0xa031fc0b
  41aa8d:	mov    DWORD PTR [ecx-0x253fd96a],esi
  41aa93:	inc    ecx
  41aa94:	xor    esp,DWORD PTR [ecx]
  41aa96:	inc    DWORD PTR [eax]
  41aa98:	mov    eax,0x7716
  41aa9d:	mov    eax,DWORD PTR [ebp-0x8]
  41aaa0:	cmp    eax,esi
  41aaa2:	mov    DWORD PTR ds:0x423680,0x7c7d
  41aaac:	jb     0x41a831
  41aab2:	mov    DWORD PTR ds:0x423680,0x2981
  41aabc:	pop    ebx
  41aabd:	mov    DWORD PTR ds:0x4236c0,0x1bff
  41aac7:	jmp    0x41ad54
  41aacc:	mov    DWORD PTR ds:0x423728,0x55df
  41aad6:	movzx  eax,BYTE PTR [eax]
  41aad9:	cmp    esi,eax
  41aadb:	mov    eax,DWORD PTR [ebp-0x4]
  41aade:	mov    DWORD PTR ds:0x423700,0x49ce
  41aae8:	jbe    0x41ad23
  41aaee:	movzx  edx,BYTE PTR ds:0x4236b0
  41aaf5:	xor    edx,DWORD PTR ds:0x423678
  41aafb:	mov    DWORD PTR ds:0x4236b0,edx
  41ab01:	mov    eax,DWORD PTR [eax]
  41ab03:	adc    DWORD PTR ds:0x4236b0,edi
  41ab09:	mov    edx,DWORD PTR [ebp-0x4]
  41ab0c:	sbb    DWORD PTR ds:0x423728,0x13d0
  41ab16:	mov    ecx,esi
  41ab18:	shr    ecx,0x8
  41ab1b:	test   ecx,ecx
  41ab1d:	mov    DWORD PTR ds:0x423744,0x418a
  41ab27:	jmp    0x41acf8
  41ab2c:	int3   
  41ab2d:	retf   
  41ab2e:	ja     0x41aad7
  41ab30:	ja     0x41aaf1
  41ab32:	fsub   st(3),st
  41ab34:	mov    ds:0x1c08e098,eax
  41ab39:	mov    BYTE PTR [edx+ebx*2+0x21],bl
  41ab3d:	jne    0x41ab40
  41ab3f:	add    BYTE PTR [ecx+eax*1-0x75770000],dh
  41ab46:	jle    0x41aad0
  41ab48:	bound  ebx,QWORD PTR [esi+0x6a6c16]
  41ab4e:	jo     0x41ab1c
  41ab50:	xchg   edi,eax
  41ab51:	aaa    
  41ab52:	stos   BYTE PTR es:[edi],al
  41ab53:	pop    ebx
  41ab54:	rcl    BYTE PTR [edi-0x45e8ef7],cl
  41ab5a:	int3   
  41ab5b:	(bad)  
  41ab5c:	clc    
  41ab5d:	or     eax,DWORD PTR [eax+0x41]
  41ab60:	arpl   WORD PTR [ecx-0x16],bp
  41ab63:	xor    al,0xe0
  41ab65:	jp     0x41ab97
  41ab67:	(bad)  [esi+0x39a7d65a]
  41ab6d:	cdq    
  41ab6e:	mov    dl,0x4f
  41ab70:	adc    ah,BYTE PTR [esi-0x2f]
  41ab73:	mov    BYTE PTR [ebx],ch
  41ab75:	xor    DWORD PTR [esi+edx*4+0x1],edx
  41ab79:	cmp    DWORD PTR [ecx+ebx*8],0xa5f72f9b
  41ab80:	inc    esi
  41ab81:	(bad)  
  41ab83:	mov    BYTE PTR [ebx-0x4616c3f7],ah
  41ab89:	imul   esp,DWORD PTR [eax-0xa],0x9a93cc58
  41ab90:	aad    0xd4
  41ab92:	ficom  WORD PTR [eax]
  41ab94:	inc    eax
  41ab95:	shr    DWORD PTR [ecx],0x13
  41ab98:	push   0x3f
  41ab9a:	sub    BYTE PTR [edi],ch
  41ab9c:	inc    ebp
  41ab9d:	and    ebp,esi
  41ab9f:	iret   
  41aba0:	scas   al,BYTE PTR es:[edi]
  41aba1:	ins    BYTE PTR es:[edi],dx
  41aba2:	dec    DWORD PTR [ecx-0xd]
  41aba5:	xor    ebp,DWORD PTR [ebx]
  41aba7:	mov    cl,0xe7
  41aba9:	test   eax,0xc04c79e9
  41abae:	in     eax,dx
  41abaf:	pop    ss
  41abb0:	out    dx,al
  41abb1:	adc    ecx,edx
  41abb3:	cmp    dh,BYTE PTR [ebx-0x12]
  41abb6:	xchg   ebp,eax
  41abb7:	test   al,0xcf
  41abb9:	and    eax,0x8e704a3a
  41abbe:	std    
  41abbf:	mov    edx,0xc6b98fe6
  41abc4:	sbb    eax,0x7cd6c45b
  41abc9:	js     0x41ac45
  41abcb:	daa    
  41abcc:	sbb    ch,BYTE PTR [edx]
  41abce:	pop    esp
  41abcf:	psubsw mm5,mm2
  41abd2:	out    dx,al
  41abd3:	mov    eax,ds:0x38f6eb5
  41abd8:	mov    edx,esi
  41abda:	lea    ebp,[esi+0x73ba2717]
  41abe0:	fdiv   st(6),st
  41abe2:	sbb    cl,dh
  41abe4:	aad    0xf0
  41abe6:	mov    dl,BYTE PTR [eax+0x16]
  41abe9:	push   ss
  41abea:	popa   
  41abeb:	pop    ss
  41abec:	(bad)  
  41abed:	daa    
  41abee:	out    0x9c,al
  41abf0:	stc    
  41abf1:	aad    0xf7
  41abf3:	pop    edx
  41abf4:	cli    
  41abf5:	dec    edi
  41abf6:	sbb    DWORD PTR [eax-0x4c],eax
  41abf9:	mul    DWORD PTR [edx+0x1c]
  41abfc:	fstp   QWORD PTR [ecx-0x95b6303]
  41ac02:	imul   eax,esi,0x30
  41ac05:	add    eax,0x4d98131f
  41ac0a:	inc    ebp
  41ac0b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ac0c:	jne    0x41ac5d
  41ac0e:	or     eax,0x7419c16a
  41ac13:	out    0x92,al
  41ac15:	dec    eax
  41ac16:	sbb    DWORD PTR [ebx-0x70],esp
  41ac19:	sub    DWORD PTR [esi+edi*1],edx
  41ac1c:	call   0x84eacd50
  41ac21:	add    eax,DWORD PTR [ebp-0x5a]
  41ac24:	mov    ds:0xf3185b89,eax
  41ac29:	dec    esp
  41ac2a:	jae    0x41ac9c
  41ac2c:	pop    ds
  41ac2d:	jecxz  0x41ac72
  41ac2f:	pushf  
  41ac30:	inc    ebx
  41ac31:	pop    dx
  41ac33:	mov    edx,DWORD PTR [edx+ebp*4+0x74ffa2f9]
  41ac3a:	jle    0x41aca0
  41ac3c:	cmp    eax,DWORD PTR [edi-0x62]
  41ac3f:	push   eax
  41ac40:	push   ebp
  41ac41:	xlat   BYTE PTR ds:[ebx]
  41ac42:	lahf   
  41ac43:	inc    ebp
  41ac44:	sub    DWORD PTR [eax+eax*2],0xc9dcbc4e
  41ac4b:	or     BYTE PTR [ebp+0x76],bh
  41ac4e:	les    edx,FWORD PTR [esi]
  41ac50:	add    cl,BYTE PTR [eax-0x5e]
  41ac53:	dec    ebp
  41ac54:	jge    0x41ac6c
  41ac56:	inc    ecx
  41ac57:	jae    0x41ac86
  41ac59:	imul   edx,DWORD PTR [esi+0x1b],0xffffffa9
  41ac5d:	iret   
  41ac5e:	sub    BYTE PTR [ebp+0x4c],al
  41ac61:	xchg   edx,eax
  41ac62:	dec    edi
  41ac63:	(bad)  
  41ac64:	out    dx,eax
  41ac65:	sub    dh,ch
  41ac67:	mov    ah,0xf
  41ac69:	xchg   DWORD PTR [esi-0x5c],eax
  41ac6c:	pop    edx
  41ac6d:	adc    esi,ebp
  41ac6f:	dec    esi
  41ac70:	cmp    BYTE PTR [edx-0x777c0abb],dh
  41ac76:	push   ss
  41ac77:	enter  0x5034,0x27
  41ac7b:	scas   eax,DWORD PTR es:[edi]
  41ac7c:	outs   dx,DWORD PTR ds:[esi]
  41ac7d:	pushf  
  41ac7e:	push   0x44a4d415
  41ac83:	mov    al,0x73
  41ac85:	imul   esi,DWORD PTR [esi+0x2f25de4e],0xa84679a7
  41ac8f:	push   edx
  41ac90:	jns    0x41ac3c
  41ac92:	int3   
  41ac93:	ret    0xf8ca
  41ac96:	xchg   ebx,eax
  41ac97:	adc    al,0xdc
  41ac99:	mov    eax,ds:0x38b4a29
  41ac9e:	mov    eax,DWORD PTR [ecx+ebp*4-0x4a]
  41aca2:	sbb    al,0x93
  41aca4:	add    BYTE PTR [eax-0x49de6217],dh
  41acaa:	es fucomi st,st(6)
  41acad:	call   0x838:0xcc3275f5
  41acb4:	hlt    
  41acb5:	nop
  41acb6:	xlat   BYTE PTR ds:[ebx]
  41acb7:	lahf   
  41acb8:	into   
  41acb9:	sbb    ebp,ebp
  41acbb:	mov    cl,0x47
  41acbd:	inc    eax
  41acbe:	push   ecx
  41acbf:	xlat   BYTE PTR ds:[ebx]
  41acc0:	jns    0x41ac9c
  41acc2:	rcl    eax,cl
  41acc4:	out    dx,eax
  41acc5:	push   edx
  41acc6:	mov    al,0x43
  41acc8:	das    
  41acc9:	fbld   TBYTE PTR [ebp+0x7]
  41accc:	push   es
  41accd:	(bad)  
  41acce:	int3   
  41accf:	stos   BYTE PTR es:[edi],al
  41acd0:	iret   
  41acd1:	mov    esp,0xf8296f93
  41acd6:	adc    bl,BYTE PTR [ecx]
  41acd8:	mov    ebx,0xaaf40cb6
  41acdd:	jb     0x41ac75
  41acdf:	sub    dl,BYTE PTR [ebx-0x7b]
  41ace2:	lods   eax,DWORD PTR ds:[esi]
  41ace3:	jo     0x41ad33
  41ace5:	call   0x1d01:0x18a2c850
  41acec:	loop   0x41ad6c
  41acee:	mov    al,ds:0x38e7921e
  41acf3:	lahf   
  41acf4:	(bad)  
  41acf5:	or     eax,0x850f84b5
  41acfa:	adc    DWORD PTR [eax],eax
  41acfc:	add    BYTE PTR [eax],al
  41acfe:	movzx  ecx,WORD PTR ds:0x4236f8
  41ad05:	or     DWORD PTR ds:0x423668,ecx
  41ad0b:	mov    ecx,esi
  41ad0d:	and    ecx,edi
  41ad0f:	sub    eax,ecx
  41ad11:	cmp    DWORD PTR [edx],eax
  41ad13:	mov    eax,DWORD PTR [ebp-0x4]
  41ad16:	jbe    0x41ad52
  41ad1c:	sub    DWORD PTR [eax],ecx
  41ad1e:	jmp    0x41ad54
  41ad23:	cmp    BYTE PTR [eax],0x0
  41ad26:	mov    eax,DWORD PTR [ebp-0x4]
  41ad29:	je     0x41ad52
  41ad2f:	mov    ecx,DWORD PTR [ebp-0x4]
  41ad32:	movzx  eax,BYTE PTR [eax]
  41ad35:	mov    ecx,DWORD PTR [ecx]
  41ad37:	sub    ecx,eax
  41ad39:	mov    eax,DWORD PTR [ebp-0x4]
  41ad3c:	cmp    DWORD PTR [eax],ecx
  41ad3e:	mov    eax,DWORD PTR [ebp-0x4]
  41ad41:	jbe    0x41ad52
  41ad47:	mov    ecx,DWORD PTR [ebp-0x4]
  41ad4a:	movzx  ecx,BYTE PTR [ecx]
  41ad4d:	jmp    0x41ad1c
  41ad52:	dec    DWORD PTR [eax]
  41ad54:	mov    eax,DWORD PTR [ebp-0x8]
  41ad57:	cmp    eax,esi
  41ad59:	mov    eax,DWORD PTR [ebp-0x4]
  41ad5c:	ja     0x41aacc
  41ad62:	mov    DWORD PTR [eax],esi
  41ad64:	mov    eax,DWORD PTR [ebp-0x8]
  41ad67:	pop    edi
  41ad68:	leave  
  41ad69:	ret    
  41ad6a:	dec    esp
  41ad6b:	xchg   edi,eax
  41ad6c:	inc    ebp
  41ad6d:	push   ebx
  41ad6e:	(bad)  
  41ad70:	pop    esi
  41ad71:	lahf   
  41ad72:	call   0xbda7a73a
  41ad77:	mov    esi,0x267c9bc3
  41ad7c:	add    BYTE PTR [eax],al
  41ad7e:	xor    eax,0x2a000003
  41ad83:	pop    ecx
  41ad84:	adc    al,0xee
  41ad86:	and    al,BYTE PTR [edi+0x9de79f2]
  41ad8c:	cwde   
  41ad8d:	push   esp
  41ad8e:	xor    edi,esi
  41ad90:	nop
  41ad91:	mov    eax,ds:0xf1f53187
  41ad96:	pusha  
  41ad97:	jmp    0xfb14:0xe393360b
  41ad9e:	sti    
  41ad9f:	int    0x9c
  41ada1:	push   edi
  41ada2:	mov    eax,ds:0x8fbce229
  41ada7:	out    dx,eax
  41ada8:	in     al,dx
  41ada9:	(bad)
  41adac:	mov    DWORD PTR [edi+0x1],0x8ac5f8c
  41adb3:	stos   BYTE PTR es:[edi],al
  41adb4:	sbb    al,0xf3
  41adb6:	mov    edx,esp
  41adb8:	sbb    edi,edi
  41adba:	sbb    eax,0x4d3e7dd4
  41adbf:	or     esi,eax
  41adc1:	mov    eax,0xbc43452d
  41adc6:	mov    esi,0x4f1b219c
  41adcb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41adcc:	jg     0x41ad73
  41adce:	or     al,0x31
  41add0:	mov    ebp,0x64f6d9dd
  41add5:	ins    BYTE PTR es:[edi],dx
  41add6:	push   edi
  41add7:	cmp    BYTE PTR [eax+0x2e],ch
  41adda:	cmp    BYTE PTR [eax],dh
  41addc:	mov    ch,0x94
  41adde:	iret   
  41addf:	mov    DWORD PTR [edi+ebx*1],0x6ef9d2e3
  41ade6:	jo     0x41adc6
  41ade8:	stc    
  41ade9:	sbb    eax,ebx
  41adeb:	dec    esi
  41adec:	enter  0xa84b,0x80
  41adf0:	push   edx
  41adf1:	mov    esp,0xe4602ab4
  41adf6:	mov    ch,BYTE PTR [edi+0x3]
  41adf9:	popa   
  41adfa:	out    0x3,al
  41adfc:	push   es
  41adfd:	sbb    dh,BYTE PTR [edi+ecx*1]
  41ae00:	xchg   edx,eax
  41ae01:	cld    
  41ae02:	shl    DWORD PTR [ecx],1
  41ae04:	dec    ecx
  41ae05:	cdq    
  41ae06:	retf   0x69da
  41ae09:	fld    TBYTE PTR [ecx-0x41]
  41ae0c:	xlat   BYTE PTR ds:[ebx]
  41ae0d:	das    
  41ae0e:	xor    eax,0x7be72f7d
  41ae13:	out    dx,al
  41ae14:	in     al,dx
  41ae15:	ins    DWORD PTR es:[edi],dx
  41ae16:	out    dx,al
  41ae17:	jg     0x41adc3
  41ae19:	test   al,0x4c
  41ae1b:	inc    edx
  41ae1c:	xor    edx,DWORD PTR [ebp-0x44]
  41ae1f:	mov    ?,WORD PTR [ecx+0x125b3c8]
  41ae25:	jl     0x41add2
  41ae27:	inc    edi
  41ae28:	mov    bl,0xf6
  41ae2a:	adc    al,BYTE PTR [ecx+esi*8+0x4729df04]
  41ae31:	cmp    eax,DWORD PTR [esi-0x65]
  41ae34:	popa   
  41ae35:	scas   eax,DWORD PTR es:[edi]
  41ae36:	not    BYTE PTR [edx]
  41ae38:	jmp    0x37e3:0x8c788fb5
  41ae3f:	lahf   
  41ae40:	repnz cmp ebx,0x6e
  41ae44:	cld    
  41ae45:	loop   0x41aeac
  41ae47:	pusha  
  41ae48:	push   ebx
  41ae49:	push   esi
  41ae4a:	xchg   esi,eax
  41ae4b:	aam    0x8
  41ae4d:	imul   esi,DWORD PTR [edx],0xebf477bd
  41ae53:	cmc    
  41ae54:	cmp    edx,DWORD PTR [ebp-0x63]
  41ae57:	jmp    0x41ae33
  41ae59:	jmp    0xd165fef6
  41ae5e:	(bad)  
  41ae5f:	sub    eax,0xb4b03edc
  41ae64:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ae65:	adc    bl,BYTE PTR [edx-0x79]
  41ae68:	jnp    0x41ae8b
  41ae6a:	out    0xae,al
  41ae6c:	cmp    eax,0xc75594a5
  41ae71:	test   DWORD PTR [esi-0x4f],ebp
  41ae74:	mov    al,0xed
  41ae76:	int    0x1d
  41ae78:	cli    
  41ae79:	xlat   BYTE PTR ds:[ebx]
  41ae7a:	xchg   DWORD PTR ds:0xd70e3882,esp
  41ae80:	jl     0x41aebe
  41ae82:	xchg   BYTE PTR [edx],bh
  41ae84:	out    dx,al
  41ae85:	inc    esi
  41ae86:	cmp    eax,0xda3ef923
  41ae8b:	leave  
  41ae8c:	mov    esp,0x397fd668
  41ae91:	leave  
  41ae92:	push   ds
  41ae93:	push   esp
  41ae94:	xchg   esp,eax
  41ae95:	enter  0x8041,0xcb
  41ae99:	idiv   DWORD PTR [ebx+0x59]
  41ae9c:	adc    bl,BYTE PTR [edx-0x29]
  41ae9f:	push   cs
  41aea0:	retf   0xa4d1
  41aea3:	lahf   
  41aea4:	retf   
  41aea5:	mov    esi,0xe365247
  41aeaa:	or     DWORD PTR [ecx-0x51918d8f],edx
  41aeb0:	or     dl,BYTE PTR [ebp-0x44eaa49d]
  41aeb6:	jb     0x41af25
  41aeb8:	and    cl,BYTE PTR [ebx+edi*2]
  41aebb:	push   edi
  41aebc:	jns    0x41aeb8
  41aebe:	mov    al,ds:0xc431bdf2
  41aec3:	or     cl,BYTE PTR [edi]
  41aec5:	jns    0x41aeb9
  41aec7:	xor    eax,0x5c4b0f8b
  41aecc:	jno    0x41aef6
  41aece:	aad    0xf8
  41aed0:	sbb    DWORD PTR [esi],esp
  41aed2:	xchg   edi,eax
  41aed3:	add    eax,0x3e221209
  41aed8:	xchg   edi,eax
  41aed9:	jne    0x41ae92
  41aedb:	xor    al,0x51
  41aedd:	sbb    eax,0x3564d1e8
  41aee2:	mov    al,ds:0x43b26221
  41aee7:	jmp    0xd21:0xb489e7b0
  41aeee:	sbb    al,0x37
  41aef0:	retf   
  41aef1:	mov    bh,0xb7
  41aef3:	adc    ebx,DWORD PTR [eax]
  41aef5:	and    ebp,DWORD PTR [edx]
  41aef7:	sub    DWORD PTR [ebx-0x3e],edi
  41aefa:	(bad)  
  41aefb:	xchg   edx,edi
  41aefd:	repz daa 
  41aeff:	push   ecx
  41af00:	dec    eax
  41af01:	push   ss
  41af02:	jl     0x41af14
  41af04:	mov    ebx,0x4641feaf
  41af09:	mov    ch,0xbb
  41af0b:	jmp    0x3fc1:0xf3bf36bd
  41af12:	or     al,0x5f
  41af14:	fdivr  st(2),st
  41af16:	pusha  
  41af17:	ins    BYTE PTR es:[edi],dx
  41af18:	cmp    BYTE PTR [edi-0x53],bh
  41af1b:	cmc    
  41af1c:	fisubr WORD PTR [eax+0xf]
  41af1f:	fs cwde 
  41af21:	scas   al,BYTE PTR es:[edi]
  41af22:	popf   
  41af23:	adc    DWORD PTR [ebx-0x37],edi
  41af26:	push   ebx
  41af27:	cli    
  41af28:	add    ebp,0x4b
  41af2b:	fcomp  st(3)
  41af2d:	nop
  41af2e:	(bad)  
  41af2f:	fcmovnb st,st(5)
  41af31:	add    al,0xa
  41af33:	les    eax,FWORD PTR [eax]
  41af35:	pop    esp
  41af36:	call   0xfe182d0f
  41af3b:	or     ah,bh
  41af3d:	cmp    eax,0x81e13cb9
  41af42:	mov    ds:0xa562a7c2,al
  41af47:	pop    ds
  41af48:	das    
  41af49:	dec    ebp
  41af4a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41af4b:	mov    eax,0xabd240e8
  41af50:	jecxz  0x41af45
  41af52:	inc    edi
  41af53:	mov    esp,0xd9cee36d
  41af58:	stc    
  41af59:	push   0x7890a029
  41af5e:	jnp    0x41aef7
  41af60:	xchg   esp,eax
  41af61:	fwait
  41af62:	sub    al,0xed
  41af64:	xchg   edx,eax
  41af65:	and    al,0xef
  41af67:	lock or edx,edx
  41af6a:	gs inc ecx
  41af6c:	popf   
  41af6d:	outs   dx,BYTE PTR ds:[esi]
  41af6e:	out    dx,al
  41af6f:	hlt    
  41af70:	push   eax
  41af71:	mov    esi,0xcd663edf
  41af76:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41af77:	mov    dl,0x77
  41af79:	out    0x48,al
  41af7b:	dec    eax
  41af7c:	sub    DWORD PTR [ebx+0x509d6717],ebp
  41af82:	inc    eax
  41af83:	std    
  41af84:	mov    ah,0xf3
  41af86:	mov    ebx,0x5be1c81
  41af8b:	imul   ecx,DWORD PTR [eax+0x65],0xffffff90
  41af8f:	sub    dl,al
  41af91:	lods   al,BYTE PTR ds:[esi]
  41af92:	xor    eax,0xb2f140f7
  41af97:	xchg   edx,eax
  41af98:	sbb    DWORD PTR [ecx-0x5d],esp
  41af9b:	fistp  DWORD PTR [edx]
  41af9d:	fwait
  41af9e:	imul   ebp,eax,0xae788244
  41afa4:	in     eax,0x53
  41afa6:	and    edx,edx
  41afa8:	and    al,0x8a
  41afaa:	lods   al,BYTE PTR ds:[esi]
  41afab:	xor    al,0xe
  41afad:	and    BYTE PTR [esi-0x75],0x4d
  41afb1:	or     al,0x26
  41afb3:	dec    ebx
  41afb4:	(bad)  
  41afb5:	mov    dl,0x7f
  41afb7:	test   DWORD PTR [ebp-0x63],edi
  41afba:	in     al,dx
  41afbb:	sub    al,0xc4
  41afbd:	fistp  QWORD PTR [eax+0x7be76113]
  41afc3:	xor    DWORD PTR [ebp-0x217cd98a],esp
  41afc9:	mov    WORD PTR [ecx-0x35],fs
  41afcc:	ja     0x41b007
  41afce:	retf   
  41afcf:	pop    eax
  41afd0:	fs push esp
  41afd2:	push   0x1c68ed0a
  41afd7:	add    bh,bl
  41afd9:	out    dx,al
  41afda:	cmp    eax,DWORD PTR [esi+edx*8+0x65af397]
  41afe1:	popf   
  41afe2:	xlat   BYTE PTR ds:[ebx]
  41afe3:	mov    ebx,0x76893f42
  41afe8:	js     0x41afcc
  41afea:	es dec ebp
  41afec:	imul   ecx,DWORD PTR [bp-0x6c87],0xbd96030
  41aff5:	pop    esp
  41aff6:	mov    dh,0x8f
  41aff8:	xchg   esp,edx
  41affa:	xor    esp,DWORD PTR [ebx]
  41affc:	nop
  41affd:	xchg   edi,eax
  41affe:	cmp    ecx,DWORD PTR [ecx-0x3b]
  41b001:	ds clc 
  41b003:	dec    ebp
  41b004:	aam    0xac
  41b006:	xchg   esi,eax
  41b007:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b008:	idiv   BYTE PTR [ecx+0x2dfc498c]
  41b00e:	pop    ebx
  41b00f:	in     eax,0x88
  41b011:	cs pusha 
  41b013:	aas    
  41b014:	xor    al,0xe
  41b016:	push   edi
  41b017:	push   esi
  41b018:	std    
  41b019:	xchg   ecx,eax
  41b01a:	or     ecx,eax
  41b01c:	stos   DWORD PTR es:[edi],eax
  41b01d:	dec    esp
  41b01e:	mov    DWORD PTR [edi+0xa],0x51d1b8b6
  41b025:	mov    al,ds:0xd972e53e
  41b02a:	iret   
  41b02b:	loopne 0x41afd1
  41b02d:	dec    edx
  41b02e:	ins    BYTE PTR es:[edi],dx
  41b02f:	sbb    eax,DWORD PTR [edi+0x3d]
  41b032:	pushf  
  41b033:	(bad)
  41b036:	mov    esp,?
  41b038:	pop    ebp
  41b039:	(bad)  
  41b03b:	cmp    DWORD PTR [esi],0xffffffa0
  41b03e:	icebp  
  41b03f:	jne    0x41b062
  41b041:	loopne 0x41b081
  41b043:	sbb    ecx,ebp
  41b045:	mov    edi,0xeb23af1e
  41b04a:	shr    DWORD PTR [esi+0x5e6e7f7a],1
  41b050:	push   esi
  41b051:	fcmovne st,st(4)
  41b053:	loopne 0x41b066
  41b055:	jno    0x41b060
  41b057:	mov    WORD PTR [esi-0x6a57d14d],cs
  41b05d:	neg    DWORD PTR [edx-0x7]
  41b060:	adc    BYTE PTR [edi],0x1f
  41b063:	sbb    eax,0xc67f94df
  41b068:	iret   
  41b069:	aam    0x3a
  41b06b:	fwait
  41b06c:	pushf  
  41b06d:	jo     0x41b034
  41b06f:	adc    eax,0x66855d26
  41b074:	mov    cl,0x35
  41b076:	push   es
  41b077:	mov    bh,0x78
  41b079:	ret    
  41b07a:	dec    eax
  41b07b:	xchg   ebp,eax
  41b07c:	sbb    al,0x72
  41b07e:	retf   0xea94
  41b081:	popa   
  41b082:	adc    eax,0x71af439b
  41b087:	mov    bl,0x5
  41b089:	enter  0xf397,0x3b
  41b08d:	cmp    eax,DWORD PTR [ecx]
  41b08f:	hlt    
  41b090:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b091:	repz dec eax
  41b093:	or     al,0x11
  41b095:	cmp    dl,dh
  41b097:	jne    0x41b0eb
  41b099:	enter  0x847a,0x9f
  41b09d:	outs   dx,DWORD PTR ds:[esi]
  41b09e:	inc    edx
  41b09f:	pop    ebp
  41b0a0:	add    eax,0x73c0d4c3
  41b0a5:	call   0x476ea2e8
  41b0aa:	jns    0x41b124
  41b0ac:	mov    eax,0xdf463a4a
  41b0b1:	retf   0xf4eb
  41b0b4:	sbb    al,0xed
  41b0b6:	mov    ebx,0x81d23356
  41b0bb:	ret    0xb0d0
  41b0be:	inc    ecx
  41b0bf:	add    BYTE PTR [edx+0x4a],cl
  41b0c2:	xchg   edx,ebx
  41b0c4:	dec    ebx
  41b0c5:	push   ebx
  41b0c6:	pop    ecx
  41b0c7:	inc    ecx
  41b0c8:	add    ecx,0x2
  41b0cb:	pop    esi
  41b0cc:	push   ecx
  41b0cd:	xor    eax,eax
  41b0cf:	ret    
  41b0d0:	push   ebp
  41b0d1:	mov    ebp,esp
  41b0d3:	push   ecx
  41b0d4:	mov    eax,ds:0x4236f8
  41b0d9:	mov    eax,ds:0x421414
  41b0de:	cmp    eax,0x3594759c
  41b0e3:	mov    DWORD PTR ds:0x4214f8,0x528b
  41b0ed:	jne    0x41b126
  41b0f3:	mov    eax,ds:0x4236c4
  41b0f8:	adc    eax,DWORD PTR ds:0x4214ec
  41b0fe:	mov    ds:0x4236c4,eax
  41b103:	mov    eax,ds:0x4211a0
  41b108:	adc    DWORD PTR ds:0x4236f0,0x2bf8
  41b112:	mov    DWORD PTR ds:0x421414,0x0
  41b11c:	mov    DWORD PTR [eax+0x1d4],0x41b0d0
  41b126:	add    DWORD PTR ds:0x423684,0x3819
  41b130:	push   esi
  41b131:	push   edi
  41b132:	add    DWORD PTR ds:0x42373c,0x4f27
  41b13c:	lea    edx,[ebp+0x4]
  41b13f:	call   0x4081e3
  41b144:	mov    DWORD PTR [ebp-0x4],eax
  41b147:	add    DWORD PTR ds:0x423700,0x4236b8
  41b151:	push   DWORD PTR [ebp+0x10]
  41b154:	xor    DWORD PTR ds:0x42372c,0x2134
  41b15e:	push   DWORD PTR [ebp+0xc]
  41b161:	push   DWORD PTR [ebp+0x8]
  41b164:	sub    DWORD PTR ds:0x42373c,0x695c
  41b16e:	call   0x4198ee
  41b173:	mov    DWORD PTR [ebp+0xc],eax
  41b176:	xor    esi,esi
  41b178:	mov    DWORD PTR ds:0x4236fc,0xd6a
  41b182:	call   0x41a604
  41b187:	mov    DWORD PTR [ebp+0x10],eax
  41b18a:	mov    DWORD PTR ds:0x4214dc,0x4eb5
  41b194:	mov    eax,ds:0x421224
  41b199:	not    ecx
  41b19b:	jmp    0x41b37a
  41b1a0:	sub    eax,0xe17ce1ad
  41b1a5:	jl     0x41b164
  41b1a7:	std    
  41b1a8:	xor    BYTE PTR [ecx-0x78ac0420],dl
  41b1ae:	or     BYTE PTR [esi],dl
  41b1b0:	aad    0x76
  41b1b2:	add    DWORD PTR [eax],eax
  41b1b4:	ret    0x1
  41b1b7:	add    BYTE PTR [esi],ch
  41b1b9:	jbe    0x41b1f6
  41b1bb:	pusha  
  41b1bc:	das    
  41b1bd:	push   eax
  41b1be:	cld    
  41b1bf:	sub    al,0xd3
  41b1c1:	mov    bl,0xbd
  41b1c3:	pop    ds
  41b1c4:	xchg   BYTE PTR [edx-0x45e15f37],dl
  41b1ca:	out    0xe7,eax
  41b1cc:	xor    BYTE PTR [edx+0x5b],ch
  41b1cf:	push   0x41dfa3c2
  41b1d4:	xor    eax,0xe0a17171
  41b1d9:	adc    BYTE PTR [edx+0x9],al
  41b1dc:	in     al,dx
  41b1dd:	adc    ebp,DWORD PTR [esi-0x7a]
  41b1e0:	or     eax,0x6864b8
  41b1e5:	xor    bl,BYTE PTR ds:0xd420c47d
  41b1eb:	or     BYTE PTR [edx+0x3b6c1d1b],bl
  41b1f1:	arpl   WORD PTR [esi],ax
  41b1f3:	test   BYTE PTR ds:0x47591f30,dl
  41b1f9:	dec    edi
  41b1fa:	inc    DWORD PTR [ecx+eiz*4]
  41b1fd:	bswap  ebp
  41b1ff:	mov    ch,BYTE PTR [esi]
  41b201:	popf   
  41b202:	pushf  
  41b203:	sub    al,0x68
  41b205:	lahf   
  41b206:	fdivr  QWORD PTR [edi+esi*8]
  41b209:	jo     0x41b1b8
  41b20b:	add    ah,BYTE PTR [edi+0x5c]
  41b20e:	push   edi
  41b20f:	pop    edi
  41b210:	stos   BYTE PTR es:[edi],al
  41b211:	arpl   WORD PTR [ecx],bp
  41b213:	push   ecx
  41b214:	lahf   
  41b215:	test   DWORD PTR [edi],ecx
  41b217:	ja     0x41b1b3
  41b219:	cli    
  41b21a:	add    BYTE PTR [edx-0x20],dh
  41b21d:	push   eax
  41b21e:	dec    ecx
  41b21f:	xchg   DWORD PTR [esi-0x6248c537],eax
  41b225:	mov    ebp,0xcdab9f03
  41b22a:	xchg   ebp,eax
  41b22b:	mov    al,ds:0x2ca685c7
  41b230:	sub    eax,0xb29699ec
  41b235:	adc    edx,0x3a
  41b238:	mov    edi,eax
  41b23a:	pop    eax
  41b23b:	and    al,0x2e
  41b23d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b23e:	mov    ds:0x62566a9a,al
  41b243:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b244:	(bad)  
  41b245:	xchg   ebp,eax
  41b246:	mov    edi,0xa7bd50a4
  41b24b:	stc    
  41b24c:	ins    BYTE PTR es:[edi],dx
  41b24d:	mov    cl,0x59
  41b24f:	add    eax,0x8b8b5d2b
  41b254:	push   0x137d64f5
  41b259:	and    ah,BYTE PTR [edi+0x313161e1]
  41b25f:	or     DWORD PTR [edi],esp
  41b261:	jl     0x41b2d1
  41b263:	les    ebx,FWORD PTR [eax]
  41b265:	add    BYTE PTR [eax+0x77],dh
  41b268:	sub    BYTE PTR ds:0xed62f74e,cl
  41b26e:	std    
  41b26f:	pop    esi
  41b270:	les    ebx,FWORD PTR [ecx]
  41b272:	mov    edx,0xc8a3aa3e
  41b277:	les    edi,FWORD PTR [esi+0xb]
  41b27a:	dec    ebp
  41b27b:	gs cld 
  41b27d:	imul   esp,DWORD PTR ds:0x76087798,0xf9887865
  41b287:	aad    0xd9
  41b289:	adc    eax,0x88314d8f
  41b28e:	xchg   ecx,eax
  41b28f:	xchg   edi,eax
  41b290:	lds    ecx,FWORD PTR [edi+edx*1]
  41b293:	aam    0x99
  41b295:	xchg   edi,eax
  41b296:	call   0xc320ebc5
  41b29b:	xchg   esi,eax
  41b29c:	lods   al,BYTE PTR ds:[esi]
  41b29d:	jge    0x41b29d
  41b29f:	jb     0x41b2dc
  41b2a1:	in     eax,0xbe
  41b2a3:	or     BYTE PTR [esp+eiz*8],cl
  41b2a6:	loop   0x41b318
  41b2a8:	sub    BYTE PTR [ebp-0x67a4e0fb],dl
  41b2ae:	rcr    DWORD PTR [esi],cl
  41b2b0:	rol    DWORD PTR [edx-0x155c6aa6],cl
  41b2b6:	out    0x32,al
  41b2b8:	jae    0x41b30e
  41b2ba:	jmp    0x1c28:0x4a426d0e
  41b2c1:	xchg   ebx,eax
  41b2c2:	inc    esp
  41b2c3:	cmc    
  41b2c4:	fsub   DWORD PTR [ecx+0x2815dd78]
  41b2ca:	bound  eax,QWORD PTR [ebp+0x1ea2b856]
  41b2d0:	pop    esp
  41b2d1:	outs   dx,BYTE PTR ds:[esi]
  41b2d2:	out    dx,eax
  41b2d3:	pop    esp
  41b2d4:	xor    edx,ebx
  41b2d6:	pusha  
  41b2d7:	mov    esp,0x577fd677
  41b2dc:	sahf   
  41b2dd:	inc    esi
  41b2de:	pop    esp
  41b2df:	stos   BYTE PTR es:[edi],al
  41b2e0:	mov    dh,0xc
  41b2e2:	cmp    eax,DWORD PTR [edi+0x8]
  41b2e5:	ror    DWORD PTR [ebp-0xac67af5],0xdd
  41b2ec:	jnp    0x41b30b
  41b2ee:	aam    0x7f
  41b2f0:	imul   ebx,DWORD PTR [ebx-0x2337f74b],0x7ba0b14e
  41b2fa:	jb     0x41b2ad
  41b2fc:	mov    eax,ds:0x6576ec91
  41b301:	loopne 0x41b325
  41b303:	dec    ebx
  41b304:	inc    ecx
  41b305:	mov    edi,DWORD PTR [ecx+0x47]
  41b308:	xor    al,BYTE PTR [esi+ecx*2-0x53]
  41b30c:	xor    eax,0x3e7e869
  41b311:	cmps   BYTE PTR es:[esi],BYTE PTR es:[edi]
  41b313:	dec    esp
  41b314:	call   FWORD PTR [edx-0x58af1dae]
  41b31a:	xchg   ecx,eax
  41b31b:	retf   0xe4c3
  41b31e:	cmp    al,0x67
  41b320:	xchg   DWORD PTR [ecx+ecx*4+0x48],edi
  41b324:	push   ebx
  41b325:	adc    DWORD PTR [eax+0x1d],eax
  41b328:	shl    BYTE PTR [ebp-0x6540b793],cl
  41b32e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b32f:	lods   al,BYTE PTR ds:[esi]
  41b330:	xchg   esp,eax
  41b331:	mov    ch,0x53
  41b333:	lods   al,BYTE PTR ds:[esi]
  41b334:	push   es
  41b335:	fistp  QWORD PTR [eax+0x601847bd]
  41b33b:	test   eax,0xf2ee962b
  41b340:	adc    eax,0xfbae2a0d
  41b345:	shr    DWORD PTR [edx-0x70],1
  41b348:	out    0x6,eax
  41b34a:	pop    ss
  41b34b:	xchg   DWORD PTR [ecx-0x21],ebx
  41b34e:	es ins DWORD PTR es:[edi],dx
  41b350:	dec    edi
  41b351:	push   eax
  41b352:	push   esp
  41b353:	mov    al,ds:0x94ffeb68
  41b358:	mov    ah,0x57
  41b35a:	mov    esp,0x1d759915
  41b35f:	pop    es
  41b360:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b361:	retf   
  41b362:	ss jge 0x41b3e4
  41b365:	fsub   QWORD PTR [ecx]
  41b367:	jecxz  0x41b363
  41b369:	rcl    DWORD PTR [ecx+0x3e],1
  41b36c:	inc    esp
  41b36d:	and    BYTE PTR [ebp+eax*2-0x205390cf],bh
  41b374:	pop    esi
  41b375:	repnz add edi,DWORD PTR [ebp+0x4d8b8208]
  41b37c:	adc    BYTE PTR [ebx],bh
  41b37e:	rol    edi,0x5
  41b381:	cld    
  41b382:	adc    al,0x42
  41b384:	add    cl,dl
  41b386:	add    BYTE PTR fs:[eax],al
  41b389:	jne    0x41b3a3
  41b38f:	mov    eax,ds:0x4236b0
  41b394:	mov    eax,ds:0x421224
  41b399:	mov    ds:0x42121c,eax
  41b39e:	jmp    0x41b59c
  41b3a3:	mov    eax,ds:0x42121c
  41b3a8:	mov    ecx,DWORD PTR ds:0x421224
  41b3ae:	xor    eax,ecx
  41b3b0:	mov    ds:0x42121c,eax
  41b3b5:	mov    eax,DWORD PTR [ebp+0x10]
  41b3b8:	jmp    0x41b597
  41b3bd:	mov    bh,0x87
  41b3bf:	or     ch,bl
  41b3c1:	cmp    bh,bl
  41b3c3:	imul   edi
  41b3c5:	jmp    0xe402:0x5db3228e
  41b3cc:	xor    eax,0x17897
  41b3d1:	ret    0x1
  41b3d4:	add    BYTE PTR [edi],dl
  41b3d6:	aam    0x9a
  41b3d8:	aad    0x2c
  41b3da:	fisubr DWORD PTR [ebx-0x29]
  41b3dd:	jecxz  0x41b3b5
  41b3df:	inc    edi
  41b3e0:	test   eax,0x5943fede
  41b3e5:	icebp  
  41b3e6:	jp     0x41b378
  41b3e8:	jns    0x41b423
  41b3ea:	jle    0x41b391
  41b3ec:	popf   
  41b3ed:	ret    0x6758
  41b3f0:	push   es
  41b3f1:	ins    DWORD PTR es:[edi],dx
  41b3f2:	push   eax
  41b3f3:	mov    fs,WORD PTR [ebp+0x747f456d]
  41b3f9:	sbb    al,0x3d
  41b3fb:	adc    bh,BYTE PTR [edi]
  41b3fd:	inc    edi
  41b3fe:	fcomip st,st(7)
  41b400:	arpl   si,di
  41b402:	js     0x41b44c
  41b404:	mul    DWORD PTR [esi-0x380a4513]
  41b40a:	mov    eax,0x747b46de
  41b40f:	aad    0x28
  41b411:	xchg   ebp,eax
  41b412:	mov    bl,0xb0
  41b414:	adc    eax,0x2d59dbb6
  41b419:	imul   edx,DWORD PTR [edx-0xd9a43d7],0xffffff97
  41b420:	pop    ss
  41b421:	sbb    ah,BYTE PTR [eax-0x7f]
  41b424:	cmp    al,0xb9
  41b426:	add    BYTE PTR [ebx+edx*4+0x5285bf23],ah
  41b42d:	std    
  41b42e:	adc    edx,DWORD PTR [edi+ecx*1]
  41b431:	xor    DWORD PTR [edi+ebx*2-0x4e],0x21
  41b436:	inc    esp
  41b437:	(bad)  
  41b438:	jecxz  0x41b3e2
  41b43a:	push   esi
  41b43b:	je     0x41b451
  41b43d:	(bad)  [ebp-0x74]
  41b440:	(bad)  
  41b441:	in     al,0xc3
  41b443:	repz imul eax,esp,0x8cdae29b
  41b44a:	mov    dl,0xb5
  41b44c:	xchg   BYTE PTR [ebx],ah
  41b44e:	push   0x1c
  41b450:	fsub   st,st(7)
  41b452:	cmp    bl,ah
  41b454:	fcom   DWORD PTR ds:0x2d48f76c
  41b45a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b45b:	mov    esi,0x6a38857a
  41b460:	icebp  
  41b461:	aad    0xa8
  41b463:	jmp    0x2ab6:0x23fa0cfc
  41b46a:	rcl    DWORD PTR [ebp+esi*8-0x4d],0xab
  41b46f:	shr    BYTE PTR [ecx-0x31],1
  41b472:	sub    ebx,DWORD PTR [edi-0x1a42b787]
  41b478:	or     cl,dl
  41b47a:	aad    0xad
  41b47c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b47d:	lods   eax,DWORD PTR ds:[esi]
  41b47e:	xchg   ecx,eax
  41b47f:	jl     0x41b4a5
  41b481:	ret    0xed13
  41b484:	ds test edi,ebp
  41b487:	(bad)  
  41b488:	test   DWORD PTR ss:[edi+eax*8],0x3dacd14a
  41b490:	mov    esp,0xe8f9e347
  41b495:	push   ebx
  41b496:	rcr    BYTE PTR [eax+0x2],cl
  41b499:	movs   DWORD PTR es:[di],DWORD PTR ds:[si]
  41b49b:	sbb    DWORD PTR [esi+0x57],0x71
  41b49f:	repz sub eax,0x93af09d1
  41b4a5:	xor    ecx,DWORD PTR [eax+0x13]
  41b4a8:	or     BYTE PTR [esi-0x1e11c071],dh
  41b4ae:	cmp    ch,BYTE PTR [eax+0x7a]
  41b4b1:	sbb    ah,BYTE PTR [ebp+0x23cbea8b]
  41b4b7:	or     ecx,esi
  41b4b9:	(bad)  
  41b4ba:	leave  
  41b4bb:	scas   eax,DWORD PTR es:[edi]
  41b4bc:	xchg   esi,eax
  41b4bd:	xor    DWORD PTR [ebx+0x3f1eb181],esi
  41b4c3:	or     dl,BYTE PTR [esp+esi*2-0x1daadc83]
  41b4ca:	jmp    0x7a3c5799
  41b4cf:	and    al,0xb4
  41b4d1:	or     ebp,DWORD PTR [eax-0x64]
  41b4d4:	stos   DWORD PTR es:[edi],eax
  41b4d5:	ret    
  41b4d6:	pop    ecx
  41b4d7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b4d8:	mov    edi,0x5d2e7cbd
  41b4dd:	aas    
  41b4de:	call   0x4f49d340
  41b4e3:	(bad)  
  41b4e4:	mov    ch,0x96
  41b4e6:	in     al,dx
  41b4e7:	scas   eax,DWORD PTR es:[edi]
  41b4e8:	mov    esi,0x1c9420b8
  41b4ed:	or     DWORD PTR [edx-0x31],0xffffffbb
  41b4f1:	push   eax
  41b4f2:	loope  0x41b4fc
  41b4f4:	xchg   ebp,eax
  41b4f5:	sbb    BYTE PTR [ebp+ebx*8+0x3e8718b0],ah
  41b4fc:	lahf   
  41b4fd:	lock fst st(5)
  41b500:	push   esi
  41b501:	(bad)  
  41b502:	cs xor eax,0x352a3da
  41b508:	into   
  41b509:	inc    eax
  41b50a:	or     esp,DWORD PTR [ebx+0x28da5a81]
  41b510:	sbb    al,0x73
  41b512:	mov    esp,0xe49e1993
  41b517:	popf   
  41b518:	aam    0x3d
  41b51a:	test   DWORD PTR [eax],edx
  41b51c:	xor    bh,bh
  41b51e:	fiadd  WORD PTR [eax]
  41b520:	xchg   DWORD PTR [edx+0x2c9d4b7e],esp
  41b526:	sub    dl,al
  41b528:	fcmovnu st,st(7)
  41b52a:	jae    0x41b4bd
  41b52c:	aaa    
  41b52d:	cmp    al,0x1c
  41b52f:	(bad)  
  41b530:	jbe    0x41b593
  41b532:	shr    DWORD PTR [edx],cl
  41b534:	test   BYTE PTR [ecx-0x251a61c5],ah
  41b53a:	jnp    0x41b4f3
  41b53c:	jnp    0x41b52b
  41b53e:	dec    edx
  41b53f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b540:	popa   
  41b541:	xor    al,0x1a
  41b543:	xor    dl,BYTE PTR [edx]
  41b545:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b546:	push   edx
  41b547:	pop    es
  41b548:	in     eax,dx
  41b549:	aaa    
  41b54a:	jns    0x41b574
  41b54c:	mov    al,0xf0
  41b54e:	add    al,0xa2
  41b550:	aaa    
  41b551:	(bad)  
  41b552:	fldenv [esi]
  41b554:	movs   DWORD PTR es:[edi],DWORD PTR fs:[esi]
  41b556:	mov    esi,0x8b6180ed
  41b55b:	ins    BYTE PTR es:[edi],dx
  41b55c:	mov    ah,0x81
  41b55e:	jb     0x41b548
  41b560:	arpl   WORD PTR [esi+0x2],si
  41b563:	jp     0x41b523
  41b565:	outs   dx,BYTE PTR ds:[esi]
  41b566:	push   ds
  41b567:	and    eax,0x30c600a1
  41b56c:	add    ecx,edx
  41b56e:	inc    eax
  41b56f:	jne    0x41b5ef
  41b571:	cmp    eax,0xa721ef26
  41b576:	mov    eax,0xdce9aeee
  41b57b:	lock pop esp
  41b57d:	fst    DWORD PTR [eax]
  41b57f:	adc    DWORD PTR [ebx+0x63],0x6f26d9d0
  41b586:	mov    ds:0x3abbf443,eax
  41b58b:	test   DWORD PTR [edx+0x51ef6479],esp
  41b591:	mov    edx,0xe59c6a09
  41b596:	repnz mov ds:0x421224,eax
  41b59c:	mov    edi,DWORD PTR [ebp-0x4]
  41b59f:	mov    esi,DWORD PTR ds:0x42121c
  41b5a5:	call   0x41a604
  41b5aa:	add    DWORD PTR [edi],eax
  41b5ac:	mov    eax,DWORD PTR [ebp+0xc]
  41b5af:	pop    edi
  41b5b0:	pop    esi
  41b5b1:	leave  
  41b5b2:	ret    0xc
  41b5b5:	jg     0x41b5c5
  41b5b7:	les    ebx,FWORD PTR [ebx-0xb]
  41b5ba:	(bad)  
  41b5bc:	cs pop edi
  41b5be:	mov    edx,0xb8589d32
  41b5c3:	mov    ebp,0x29b16b
  41b5c8:	add    BYTE PTR ds:0xb2000003,dh
  41b5ce:	ins    BYTE PTR es:[edi],dx
  41b5cf:	loop   0x41b629
  41b5d1:	sub    DWORD PTR [ecx-0x50],edi
  41b5d4:	aaa    
  41b5d5:	ffree  st(5)
  41b5d7:	adc    BYTE PTR [edx],ah
  41b5d9:	xor    BYTE PTR [ecx+0x49],dl
  41b5dc:	invlpg BYTE PTR [edi+0x5e]
  41b5e0:	sti    
  41b5e1:	(bad)  
  41b5e2:	rol    BYTE PTR [ebx+0x7b3757c3],0x39
  41b5e9:	and    al,0x6c
  41b5eb:	sub    edi,edi
  41b5ed:	jp     0x41b5fd
  41b5ef:	out    dx,eax
  41b5f0:	pop    ebp
  41b5f1:	inc    BYTE PTR [ebx+0x827ac21]
  41b5f7:	data16 mov ds:0xa7e8c753,al
  41b5fd:	stos   DWORD PTR es:[edi],eax
  41b5fe:	lock push cs
  41b600:	add    cl,BYTE PTR [edi]
  41b602:	ins    BYTE PTR es:[edi],dx
  41b603:	iret   
  41b604:	mov    ds:0x610ec5a6,eax
  41b609:	pop    es
  41b60a:	out    dx,eax
  41b60b:	retf   0xd43e
  41b60e:	rol    DWORD PTR [ebx+eax*1-0x79],cl
  41b612:	or     BYTE PTR [ebx-0x76],0x1a
  41b616:	mov    cl,BYTE PTR [ecx+ecx*2-0x1c]
  41b61a:	mov    ds:0x706d7862,al
  41b61f:	sar    DWORD PTR [esi-0x75],0xe3
  41b623:	or     dl,BYTE PTR [ecx-0x79627b77]
  41b629:	ret    
  41b62a:	aam    0x4
  41b62c:	loopne 0x41b5b3
  41b62e:	arpl   WORD PTR fs:[edi],si
  41b631:	mov    bl,0xea
  41b633:	and    DWORD PTR [edx+0x5c],esp
  41b636:	pop    edi
  41b637:	mov    ch,0xc5
  41b639:	sub    DWORD PTR [edi+0x4a],ebp
  41b63c:	dec    ecx
  41b63d:	xchg   DWORD PTR [ebx],ebp
  41b63f:	xchg   ecx,eax
  41b640:	cli    
  41b641:	pusha  
  41b642:	sub    ebp,DWORD PTR [ecx+eiz*4]
  41b645:	aas    
  41b646:	sbb    al,BYTE PTR [ecx-0x41]
  41b649:	jne    0x41b5f3
  41b64b:	popa   
  41b64c:	xor    al,0x4
  41b64e:	mov    eax,ds:0x94daecd
  41b653:	out    0x97,al
  41b655:	retf   
  41b656:	bound  ebx,QWORD PTR [ecx]
  41b658:	xor    ecx,DWORD PTR [edi-0x45fe8078]
  41b65e:	add    BYTE PTR [ecx+0x5a],dl
  41b661:	aad    0xbf
  41b663:	pushf  
  41b664:	aaa    
  41b665:	pop    ds
  41b666:	out    dx,al
  41b667:	ret    
  41b668:	sub    DWORD PTR [edi+0x68],0xfffffffb
  41b66c:	ds pop ebp
  41b66e:	jae    0x41b63d
  41b670:	cdq    
  41b671:	cmp    BYTE PTR [ecx+0x8],bh
  41b674:	es call 0x1c981dc1
  41b67a:	push   es
  41b67b:	imul   edx,eax,0x1e
  41b67e:	mov    DWORD PTR [edx],ecx
  41b680:	lock hlt 
  41b682:	shl    BYTE PTR [ebx+0x61938bec],cl
  41b688:	push   ss
  41b689:	fucomip st,st(6)
  41b68b:	in     eax,dx
  41b68c:	push   eax
  41b68d:	jge    0x41b652
  41b68f:	xchg   ebx,eax
  41b690:	fdivr  DWORD PTR [ecx+ecx*8-0x77]
  41b694:	out    dx,eax
  41b695:	mov    ch,BYTE PTR [edx+ebx*8]
  41b698:	mov    ch,0x90
  41b69a:	call   0x63448176
  41b69f:	dec    ebx
  41b6a0:	ficom  WORD PTR [ebx+0x6b68cd3e]
  41b6a6:	push   edx
  41b6a7:	faddp  st(3),st
  41b6a9:	(bad)  
  41b6aa:	ja     0x41b6a5
  41b6ac:	sbb    DWORD PTR ds:0x294fad02,ecx
  41b6b2:	mov    ?,ecx
  41b6b4:	mov    al,BYTE PTR [esi+ebx*1]
  41b6b7:	cli    
  41b6b8:	ss in  al,dx
  41b6ba:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b6bb:	pop    es
  41b6bc:	(bad)  
  41b6bd:	stc    
  41b6be:	mov    ds:0x9d6f4f99,al
  41b6c3:	shl    BYTE PTR [ebx],cl
  41b6c5:	fcomp  DWORD PTR ds:0x4ff9d21c
  41b6cb:	pop    ss
  41b6cc:	jns    0x41b747
  41b6ce:	lods   al,BYTE PTR ds:[esi]
  41b6cf:	sbb    DWORD PTR [ecx],ebp
  41b6d1:	add    eax,0x6c6fecf5
  41b6d6:	sti    
  41b6d7:	sub    edx,DWORD PTR [eax]
  41b6d9:	aas    
  41b6da:	lea    edi,[edx+edx*2-0x5f]
  41b6de:	popf   
  41b6df:	loopne 0x41b679
  41b6e1:	clc    
  41b6e2:	mov    bl,0xe5
  41b6e4:	es sub eax,0xf2e06fce
  41b6ea:	and    ch,ah
  41b6ec:	out    0x4f,eax
  41b6ee:	mov    al,ds:0x5f018202
  41b6f3:	lods   eax,DWORD PTR ds:[esi]
  41b6f4:	jecxz  0x41b6c6
  41b6f6:	scas   al,BYTE PTR es:[edi]
  41b6f7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b6f8:	cwde   
  41b6f9:	scas   al,BYTE PTR es:[edi]
  41b6fa:	imul   esi,DWORD PTR [edi+0x59beb7ec],0x52
  41b701:	sbb    eax,DWORD PTR [edi+0x5a5ebff1]
  41b707:	cmp    BYTE PTR [ebp-0x15],bl
  41b70a:	std    
  41b70b:	xor    dl,BYTE PTR [edi+0x17]
  41b70e:	pop    ebx
  41b70f:	int    0xd3
  41b711:	inc    esp
  41b712:	dec    edi
  41b713:	mov    BYTE PTR [eax+0x50],bl
  41b716:	dec    edx
  41b717:	sbb    DWORD PTR ss:[esi],ebp
  41b71a:	xlat   BYTE PTR ds:[ebx]
  41b71b:	out    0x97,eax
  41b71d:	mov    ah,0xbf
  41b71f:	sbb    esi,edx
  41b721:	outs   dx,DWORD PTR ds:[esi]
  41b722:	lds    ecx,FWORD PTR [ebx]
  41b724:	push   es
  41b725:	and    ecx,ecx
  41b727:	(bad)  
  41b728:	lahf   
  41b729:	ret    
  41b72a:	sti    
  41b72b:	mov    ds:0xdbb47f5b,eax
  41b730:	mov    eax,esp
  41b732:	and    DWORD PTR [ecx-0x7cc1fc9c],ebp
  41b738:	das    
  41b739:	adc    al,BYTE PTR [esi+0x20e51c17]
  41b73f:	rol    DWORD PTR [edx],1
  41b741:	dec    edx
  41b742:	(bad)  
  41b743:	out    0xcd,eax
  41b745:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b746:	cmp    ebp,DWORD PTR [esi+0x4afdd1a9]
  41b74c:	(bad)  
  41b74d:	call   0x9dd:0x87049a7c
  41b754:	sbb    al,0xbc
  41b756:	sub    al,bh
  41b758:	push   0x87f65c1e
  41b75d:	jp     0x41b70b
  41b75f:	mov    ds:0x7abe34c6,al
  41b764:	mov    eax,0x6a6a296
  41b769:	stos   DWORD PTR es:[edi],eax
  41b76a:	sti    
  41b76b:	popf   
  41b76c:	jno    0x41b704
  41b76e:	das    
  41b76f:	pushf  
  41b770:	and    BYTE PTR [ebx],bl
  41b772:	int    0xa0
  41b774:	cmp    cl,BYTE PTR [eax-0xfd0be67]
  41b77a:	stc    
  41b77b:	pushf  
  41b77c:	jo     0x41b739
  41b77e:	enter  0xc7cb,0x5
  41b782:	ror    BYTE PTR [edx],1
  41b784:	(bad)  
  41b785:	je     0x41b7fe
  41b787:	push   esi
  41b788:	sbb    bl,bl
  41b78a:	inc    esi
  41b78b:	inc    ecx
  41b78c:	mov    WORD PTR [ecx+0x108362ec],ds
  41b792:	pop    ss
  41b793:	inc    esi
  41b794:	dec    ebp
  41b795:	mov    ds:0xf539d557,eax
  41b79a:	lock adc DWORD PTR [ebx],esi
  41b79d:	cld    
  41b79e:	pushf  
  41b79f:	cli    
  41b7a0:	jno    0x41b76f
  41b7a2:	push   ds
  41b7a3:	call   0x9d74:0x4bdd0b2e
  41b7aa:	or     eax,0xb31221f5
  41b7af:	out    dx,al
  41b7b0:	mov    ecx,0x989e1df4
  41b7b5:	cmp    ah,BYTE PTR [edi]
  41b7b7:	test   al,0x6b
  41b7b9:	mov    ebx,0x65cb087
  41b7be:	(bad)  
  41b7bf:	fsub   st,st(7)
  41b7c1:	enter  0xa0f3,0x9
  41b7c5:	or     eax,eax
  41b7c7:	imul   ebx,DWORD PTR [edi-0x4],0xfffffff9
  41b7cb:	addr16 cli 
  41b7cd:	addr16 cmp al,0x8d
  41b7d0:	and    BYTE PTR [edi+ebp*8+0x3faf15ab],al
  41b7d7:	or     DWORD PTR [ecx-0x74300546],ebp
  41b7dd:	lods   al,BYTE PTR fs:[esi]
  41b7df:	mov    DWORD PTR [ebx+0x49],esp
  41b7e2:	inc    ebp
  41b7e3:	and    DWORD PTR [edx-0x7f35be1b],edx
  41b7e9:	add    bh,BYTE PTR [ecx-0x527b94e3]
  41b7ef:	cs sub al,0x73
  41b7f2:	cmp    al,0xd7
  41b7f4:	sti    
  41b7f5:	lock xchg esi,eax
  41b7f7:	adc    eax,0x1cf9879d
  41b7fc:	mov    cl,BYTE PTR [eax+0x60]
  41b7ff:	jp     0x41b7fa
  41b801:	das    
  41b802:	mov    esp,0xef8ccd7a
  41b807:	rcr    DWORD PTR [edx],0x7b
  41b80a:	lods   al,BYTE PTR ds:[esi]
  41b80b:	es (bad) 
  41b80d:	fstp   TBYTE PTR [edi]
  41b80f:	div    DWORD PTR [esi+0x7d]
  41b812:	and    bl,BYTE PTR [eax+0x5938acfc]
  41b818:	cmp    DWORD PTR [eax],esi
  41b81a:	mov    edx,0x7ffbbfe6
  41b81f:	sbb    eax,0xede57403
  41b824:	std    
  41b825:	jg     0x41b7d5
  41b827:	and    cl,BYTE PTR [esi]
  41b829:	in     eax,dx
  41b82a:	sar    bh,0x51
  41b82d:	dec    esp
  41b82e:	mov    bh,0x18
  41b830:	das    
  41b831:	imul   ebx,DWORD PTR [esi+edx*1],0x5d
  41b835:	(bad)  
  41b836:	push   ds
  41b837:	nop
  41b838:	pop    edi
  41b839:	fnstsw WORD PTR [ebx+0x73bc2849]
  41b83f:	jle    0x41b87b
  41b841:	stc    
  41b842:	mov    ebp,0x1e268a5f
  41b847:	or     eax,0xb0c6d8f
  41b84c:	adc    ecx,eax
  41b84e:	lds    ebx,FWORD PTR [esi+0x1667c0e1]
  41b854:	in     eax,0x3e
  41b856:	test   al,0x70
  41b858:	xchg   esi,eax
  41b859:	push   edi
  41b85a:	cmp    eax,0x2bc4adad
  41b85f:	data16 or BYTE PTR [edx],ch
  41b862:	push   esi
  41b863:	(bad)  
  41b864:	jo     0x41b828
  41b866:	pop    edx
  41b867:	nop
  41b868:	and    DWORD PTR [ebx+0x30],0x6b1ec44
  41b86f:	and    eax,0xa0df379a
  41b874:	in     eax,0x61
  41b876:	xchg   ecx,eax
  41b877:	mov    ?,WORD PTR [ecx-0x2]
  41b87a:	or     DWORD PTR [ebp+0x45],ebp
  41b87d:	inc    eax
  41b87e:	pushf  
  41b87f:	xchg   ebx,eax
  41b880:	mov    ds:0x9a57ada3,al
  41b885:	mov    ah,0x71
  41b887:	das    
  41b888:	or     BYTE PTR [edx+0x1e2eed3f],dl
  41b88e:	aaa    
  41b88f:	mov    dh,0xfc
  41b891:	mov    WORD PTR [ecx+0x6e0691d1],fs
  41b897:	adc    BYTE PTR [ecx],dh
  41b899:	dec    esp
  41b89a:	push   esp
  41b89b:	in     eax,dx
  41b89c:	pop    eax
  41b89d:	loope  0x41b8e9
  41b89f:	sahf   
  41b8a0:	js     0x41b851
  41b8a2:	imul   DWORD PTR [ebx+ebx*1+0x7b63c7c1]
  41b8a9:	jae    0x41b8a1
  41b8ab:	xchg   ebx,eax
  41b8ac:	test   eax,0x5d24c51
  41b8b1:	adc    BYTE PTR [ecx+0x7f],dl
  41b8b4:	les    edx,FWORD PTR [edx+0xe8a1783]
  41b8ba:	or     esp,ebx
  41b8bc:	push   ebx
  41b8bd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b8be:	pop    ebx
  41b8bf:	cld    
  41b8c0:	hlt    
  41b8c1:	mov    eax,ds:0x5cf6a809
  41b8c6:	rcl    bh,0xc5
  41b8c9:	lahf   
  41b8ca:	xchg   edx,eax
  41b8cb:	int    0xa9
  41b8cd:	mov    ah,0xa6
  41b8cf:	xchg   ebx,eax
  41b8d0:	mov    ds:0xc94b536b,eax
  41b8d5:	mov    ah,0x51
  41b8d7:	shr    ch,1
  41b8d9:	push   es
  41b8da:	stos   DWORD PTR es:[edi],eax
  41b8db:	xor    al,0x8b
  41b8dd:	shl    BYTE PTR [ebp+0x49f96b73],0x8c
  41b8e4:	mov    al,0xe4
  41b8e6:	jne    0x41b922
  41b8e8:	sub    al,BYTE PTR [edx+0x5]
  41b8eb:	and    eax,0x2ab5a391
  41b8f0:	or     BYTE PTR [edi],bh
  41b8f2:	push   es
  41b8f3:	adc    DWORD PTR [edi+esi*2],edx
  41b8f6:	jae    0x41b8d5
  41b8f8:	dec    edi
  41b8f9:	sbb    al,0xde
  41b8fb:	xchg   esp,eax
  41b8fc:	inc    ebp
  41b8fd:	shr    BYTE PTR [esi+0x57],cl
  41b900:	fs add al,0x55
  41b903:	mov    ebp,esp
  41b905:	push   ecx
  41b906:	add    DWORD PTR ds:0x4236ac,ecx
  41b90c:	mov    DWORD PTR [ebp-0x4],0xffffffff
  41b913:	sbb    DWORD PTR ds:0x423740,edx
  41b919:	mov    eax,DWORD PTR [ebp+0x8]
  41b91c:	add    DWORD PTR ds:0x4214dc,0x4236f8
  41b926:	mov    al,BYTE PTR [eax]
  41b928:	sub    al,0x3a
  41b92a:	or     DWORD PTR ds:0x4236f4,0x42372c
  41b934:	xor    al,0x3a
  41b936:	mov    DWORD PTR ds:0x423680,0x4083
  41b940:	cmp    al,0x29
  41b942:	mov    DWORD PTR ds:0x423670,0x3c78
  41b94c:	jne    0x41be89
  41b952:	mov    eax,DWORD PTR [ebp+0x8]
  41b955:	adc    ecx,DWORD PTR ds:0x4236fc
  41b95b:	mov    ecx,DWORD PTR [ebp+0x8]
  41b95e:	sub    DWORD PTR ds:0x423678,0x4f93
  41b968:	add    ecx,DWORD PTR [eax+0x3c]
  41b96b:	mov    edx,0x300a
  41b970:	mov    DWORD PTR [ebp+0x8],ecx
  41b973:	mov    eax,ds:0x4214f8
  41b978:	xor    DWORD PTR ds:0x4236c0,eax
  41b97e:	mov    eax,DWORD PTR [ebp-0x4]
  41b981:	sbb    DWORD PTR ds:0x423678,0x4d64
  41b98b:	xor    eax,edx
  41b98d:	add    DWORD PTR ds:0x423680,0x423704
  41b997:	push   esi
  41b998:	and    DWORD PTR ds:0x423728,ecx
  41b99e:	mov    esi,DWORD PTR [ebp+0x8]
  41b9a1:	inc    DWORD PTR ds:0x423704
  41b9a7:	lea    ecx,[edx+0x1]
  41b9aa:	add    eax,ecx
  41b9ac:	cmp    DWORD PTR [esi+0x54],eax
  41b9af:	pop    esi
  41b9b0:	je     0x41b9be
  41b9b6:	mov    eax,DWORD PTR [ebp+0x8]
  41b9b9:	jmp    0x41be96
  41b9be:	mov    eax,DWORD PTR [ebp-0x4]
  41b9c1:	xor    eax,edx
  41b9c3:	add    eax,ecx
  41b9c5:	jmp    0x41be96
  41b9ca:	jmp    0x41be89
  41b9cf:	mov    WORD PTR [eax+0x2b],gs
  41b9d2:	adc    ebp,edi
  41b9d4:	push   ebx
  41b9d5:	mov    esp,0x91a714ff
  41b9da:	aad    0xb
  41b9dc:	jnp    0x41b96e
  41b9de:	test   BYTE PTR [ecx+0x7a],bl
  41b9e1:	add    DWORD PTR [eax],eax
  41b9e3:	mov    ds:0xbc000004,al
  41b9e8:	pop    ds
  41b9e9:	push   es
  41b9ea:	cmp    edi,ebp
  41b9ec:	fisub  DWORD PTR [ecx+0x1d]
  41b9ef:	call   0x4ab91bfe
  41b9f4:	mov    eax,es
  41b9f6:	call   DWORD PTR [eax+0x3da295a2]
  41b9fc:	push   eax
  41b9fd:	ins    DWORD PTR es:[edi],dx
  41b9fe:	jmp    0xfc8d:0xdcbed242
  41ba05:	mov    ch,0x78
  41ba07:	xchg   edi,eax
  41ba08:	or     DWORD PTR ds:0x51f47f4b,esp
  41ba0e:	mov    esp,0x2fb7fa7f
  41ba13:	loope  0x41ba02
  41ba15:	xor    DWORD PTR [esp+edx*4],0x7a
  41ba19:	mov    esp,0x4a0d5c68
  41ba1e:	fcmovnbe st,st(2)
  41ba20:	fxch   st(0)
  41ba22:	(bad)  
  41ba23:	xchg   ebp,eax
  41ba24:	cmp    BYTE PTR [edx],0xdd
  41ba27:	jmp    0x41ba2d
  41ba29:	and    al,dl
  41ba2b:	ja     0x41b9fb
  41ba2d:	add    eax,0x83dd7986
  41ba32:	sbb    bl,BYTE PTR [ebx-0x4c]
  41ba35:	jge    0x41b9f4
  41ba37:	mov    eax,0x8bf3281f
  41ba3c:	aam    0x1b
  41ba3e:	adc    esi,DWORD PTR [ebx+0x7f]
  41ba41:	xor    dl,BYTE PTR [eax+0x762bf393]
  41ba47:	mov    BYTE PTR [ecx+0x1d],cl
  41ba4a:	and    eax,0x9fd56f4
  41ba4f:	inc    ebx
  41ba50:	out    0xf5,al
  41ba52:	push   ebp
  41ba53:	ja     0x41ba3c
  41ba55:	xor    esp,DWORD PTR [edi+eax*8-0x61a1850]
  41ba5c:	aam    0x82
  41ba5e:	addr16 test eax,0xebeed0c5
  41ba64:	jmp    0xc440:0x8b84228
  41ba6b:	repnz push ebx
  41ba6d:	mov    ebp,0xdc32b5e
  41ba72:	outs   dx,BYTE PTR ds:[esi]
  41ba73:	fwait
  41ba74:	and    eax,0x9a40f066
  41ba79:	(bad)  
  41ba7a:	jecxz  0x41ba64
  41ba7c:	ds jo  0x41baf6
  41ba7f:	stc    
  41ba80:	fyl2x  
  41ba82:	movups xmm3,XMMWORD PTR [esi-0x3f]
  41ba86:	mov    edx,0x15a1bc78
  41ba8b:	cmc    
  41ba8c:	mov    es,WORD PTR ds:0xaf662561
  41ba92:	out    0x3f,al
  41ba94:	imul   edi,DWORD PTR [ebp-0x58],0xffffff82
  41ba98:	(bad)  
  41ba99:	(bad)  
  41ba9a:	repz cmp BYTE PTR [ebp-0x5c],cl
  41ba9e:	(bad)  
  41ba9f:	mov    ds:0xe44e836f,eax
  41baa4:	arpl   bx,dx
  41baa6:	std    
  41baa7:	out    0x83,eax
  41baa9:	xor    ebx,DWORD PTR [edx]
  41baab:	lods   eax,DWORD PTR ds:[esi]
  41baac:	(bad)  
  41baae:	pushf  
  41baaf:	push   cs
  41bab0:	cmp    DWORD PTR ds:0xd8db29e7,esp
  41bab6:	mov    BYTE PTR [edx-0x21b2341c],al
  41babc:	outs   dx,DWORD PTR ds:[esi]
  41babd:	adc    BYTE PTR [edi],dl
  41babf:	push   esp
  41bac0:	mov    ebx,0x49da2bb5
  41bac5:	pop    ds
  41bac6:	mov    edx,0xadc1e40f
  41bacb:	call   0x7765ce61
  41bad0:	inc    esp
  41bad1:	jmp    0x41bb2c
  41bad3:	cmc    
  41bad4:	stos   BYTE PTR es:[edi],al
  41bad5:	add    al,0x95
  41bad7:	xchg   esp,eax
  41bad8:	loope  0x41bb1a
  41bada:	push   ecx
  41badb:	into   
  41badc:	xchg   dh,cl
  41bade:	scas   al,BYTE PTR es:[edi]
  41badf:	mov    al,ds:0x3b3da589
  41bae4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41bae5:	dec    edx
  41bae6:	sbb    esi,DWORD PTR [ebp+0x42837444]
  41baec:	dec    ebx
  41baed:	jle    0x41bae2
  41baef:	sahf   
  41baf0:	aas    
  41baf1:	test   DWORD PTR [edi-0x4905aac2],ebx
  41baf7:	loope  0x41bb1a
  41baf9:	jmp    0xefca:0x9b3a38af
  41bb00:	and    al,0xca
  41bb02:	scas   al,BYTE PTR es:[edi]
  41bb03:	dec    esi
  41bb04:	xchg   ecx,eax
  41bb05:	add    DWORD PTR [ebx+0x44ab4d43],ecx
  41bb0b:	lods   eax,DWORD PTR ds:[esi]
  41bb0c:	mov    ebp,0xf9efc22c
  41bb11:	adc    eax,0xd66f0807
  41bb16:	pop    esi
  41bb17:	pop    esp
  41bb18:	inc    esp
  41bb19:	mov    BYTE PTR [edx],bl
  41bb1b:	pop    ds
  41bb1c:	sti    
  41bb1d:	cmp    eax,0x241aa429
  41bb22:	and    dh,ch
  41bb24:	fs dec ecx
  41bb26:	jmp    0x8e139b08
  41bb2b:	leave  
  41bb2c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41bb2d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41bb2e:	dec    esi
  41bb2f:	sub    ch,BYTE PTR [edi-0x514e2d18]
  41bb35:	mov    eax,0x7e04030d
  41bb3a:	pop    edi
  41bb3b:	jns    0x41badf
  41bb3d:	aam    0x39
  41bb3f:	or     edi,esi
  41bb41:	test   BYTE PTR [edi],ah
  41bb43:	mov    edx,0xee9992c7
  41bb48:	and    cl,BYTE PTR [edx+0x5d]
  41bb4b:	or     ebp,ebp
  41bb4d:	push   eax
  41bb4e:	or     esp,esi
  41bb50:	retf   
  41bb51:	push   0x2b
  41bb53:	and    DWORD PTR [ebx-0x54f07036],esp
  41bb59:	pop    ebp
  41bb5a:	jle    0x41bb4a
  41bb5c:	ins    BYTE PTR es:[edi],dx
  41bb5d:	add    al,0x1a
  41bb5f:	icebp  
  41bb60:	mov    dh,0x73
  41bb62:	lahf   
  41bb63:	inc    edi
  41bb64:	xchg   edi,eax
  41bb65:	mov    edi,0xf863fc7e
  41bb6a:	mov    bh,0x5b
  41bb6c:	aas    
  41bb6d:	push   esp
  41bb6e:	lea    edi,[eax+0x152d15b5]
  41bb74:	xor    ah,BYTE PTR [edx]
  41bb76:	stos   BYTE PTR es:[edi],al
  41bb77:	adc    al,0xeb
  41bb79:	sub    ecx,esi
  41bb7b:	adc    al,0xea
  41bb7d:	inc    DWORD PTR [eax-0x18b4e090]
  41bb83:	test   DWORD PTR [edi+0x62],eax
  41bb86:	cmp    al,0xd5
  41bb88:	ficom  DWORD PTR [eax+0x6cd34320]
  41bb8e:	jecxz  0x41bbf1
  41bb90:	mov    esp,DWORD PTR [esi-0x58]
  41bb93:	jp     0x41bb15
  41bb95:	test   al,0x20
  41bb97:	popa   
  41bb98:	js     0x41bb83
  41bb9a:	dec    edi
  41bb9b:	js     0x41bb9a
  41bb9d:	aad    0xed
  41bb9f:	arpl   sp,bx
  41bba1:	push   ss
  41bba2:	std    
  41bba3:	loopne 0x41bbeb
  41bba5:	retf   
  41bba6:	pop    ss
  41bba7:	sub    DWORD PTR [edx-0x2612365f],0x22
  41bbae:	fwait
  41bbaf:	dec    esp
  41bbb0:	xor    DWORD PTR [eax+0x654aff21],esp
  41bbb6:	dec    ebp
  41bbb7:	rol    BYTE PTR [esi-0xa],1
  41bbba:	pop    edi
  41bbbb:	dec    esp
  41bbbc:	in     eax,0xd3
  41bbbe:	out    0x7c,eax
  41bbc0:	inc    ebp
  41bbc1:	loopne 0x41bbac
  41bbc3:	jge    0x41bb70
  41bbc5:	loop   0x41bbe3
  41bbc7:	repnz stos DWORD PTR es:[edi],eax
  41bbc9:	jo     0x41bb9b
  41bbcb:	dec    esi
  41bbcc:	adc    eax,0x226b7191
  41bbd1:	dec    edx
  41bbd2:	mov    bl,0xf1
  41bbd4:	mov    ecx,0xef5485d5
  41bbd9:	mov    eax,ds:0x94144cf0
  41bbde:	in     eax,dx
  41bbdf:	jae    0x41bc4a
  41bbe1:	(bad)  
  41bbe2:	jbe    0x41bc29
  41bbe4:	sti    
  41bbe5:	call   0x8fe0b3f9
  41bbea:	aam    0xb5
  41bbec:	jmp    0x1610:0x83857011
  41bbf3:	pushf  
  41bbf4:	stos   BYTE PTR es:[edi],al
  41bbf5:	(bad)  
  41bbf6:	loope  0x41bc26
  41bbf8:	jle    0x41bbf1
  41bbfa:	and    esi,DWORD PTR ds:[esi+0x25]
  41bbfe:	jge    0x41bb9f
  41bc00:	inc    eax
  41bc01:	leave  
  41bc02:	jnp    0x41bbc0
  41bc04:	fst    DWORD PTR ds:0x2c441efa
  41bc0a:	and    ch,BYTE PTR [eax]
  41bc0c:	xchg   DWORD PTR [ecx+0x13],ebp
  41bc0f:	xchg   edx,eax
  41bc10:	push   0xfffffff3
  41bc12:	sbb    BYTE PTR [eax],bh
  41bc14:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41bc15:	out    0x3b,eax
  41bc17:	jae    0x41bc95
  41bc19:	xor    edx,esi
  41bc1b:	push   es
  41bc1c:	shr    BYTE PTR [ebx+0x13ddf6cc],1
  41bc22:	and    al,0x7d
  41bc24:	jmp    0x12cb:0x48c4ce6d
  41bc2b:	js     0x41bbb2
  41bc2d:	shl    BYTE PTR [edi+0x22dc17ae],cl
  41bc33:	or     dh,BYTE PTR [ebx*1-0x627b6bd2]
  41bc3a:	call   0xda8e2128
  41bc3f:	jp     0x41bc72
  41bc41:	jmp    0x870cc14d
  41bc46:	ds (bad) 
  41bc48:	call   0x8e481ba8
  41bc4d:	repz leave 
  41bc4f:	inc    BYTE PTR [ecx-0x50d2c867]
  41bc55:	dec    eax
  41bc56:	mov    ds:0x789fba00,al
  41bc5b:	rcr    DWORD PTR [eax],0xbb
  41bc5e:	icebp  
  41bc5f:	adc    ebx,edi
  41bc61:	or     al,0xe
  41bc63:	fild   QWORD PTR [ecx+0x163a38fb]
  41bc69:	jecxz  0x41bce5
  41bc6b:	cmp    DWORD PTR [eax-0x54d4d21a],esi
  41bc71:	mov    al,BYTE PTR [ebp-0x1c1a2b78]
  41bc77:	inc    edi
  41bc78:	fldlg2 
  41bc7a:	xchg   DWORD PTR [ecx],eax
  41bc7c:	or     esp,0x8100f4e8
  41bc82:	jae    0x41bc44
  41bc84:	pusha  
  41bc85:	ficom  WORD PTR [eax+eax*2]
  41bc88:	cmp    al,0x62
  41bc8a:	jns    0x41bcf7
  41bc8c:	push   ebx
  41bc8d:	dec    ecx
  41bc8e:	push   ds
  41bc8f:	sar    BYTE PTR [esi-0x1f],0xca
  41bc93:	aaa    
  41bc94:	lods   al,BYTE PTR ds:[esi]
  41bc95:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41bc96:	adc    al,0xd7
  41bc98:	cmp    cl,al
  41bc9a:	je     0x41bcb1
  41bc9c:	inc    edi
  41bc9d:	repnz or DWORD PTR [edi],esp
  41bca0:	mov    ah,0x2b
  41bca2:	lahf   
  41bca3:	inc    esp
  41bca4:	cmp    al,0xc9
  41bca6:	xchg   ecx,eax
  41bca7:	xchg   ebx,edx
  41bca9:	cmp    esi,ecx
  41bcab:	xchg   edx,eax
  41bcac:	jno    0x41bd07
  41bcae:	jecxz  0x41bc96
  41bcb0:	cmp    eax,0x759ce42e
  41bcb5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41bcb6:	push   0x58ac64c5
  41bcbb:	rcr    DWORD PTR [ebp*4+0x501e3efb],1
  41bcc2:	xlat   BYTE PTR ds:[ebx]
  41bcc3:	dec    ecx
  41bcc4:	adc    DWORD PTR [ecx-0x5e],ecx
  41bcc7:	sbb    DWORD PTR [esi-0x19],ebx
  41bcca:	mov    eax,ds:0xa3abbecc
  41bccf:	pop    ebp
  41bcd0:	cld    
  41bcd1:	pushw  es
  41bcd3:	mov    bl,0x76
  41bcd5:	ret    0xc850
  41bcd8:	ss push cs
  41bcda:	and    eax,0xc7bfdf51
  41bcdf:	cdq    
  41bce0:	in     eax,dx
  41bce1:	mov    ch,0x46
  41bce3:	mov    ch,0x59
  41bce5:	ret    0xd5ab
  41bce8:	mov    esi,0x18f04908
  41bced:	or     bh,BYTE PTR [eax-0x5]
  41bcf0:	xchg   edx,eax
  41bcf1:	imul   ch
  41bcf3:	stos   BYTE PTR es:[edi],al
  41bcf4:	les    ebp,FWORD PTR [eax+0x3a]
  41bcf7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41bcf8:	das    
  41bcf9:	push   es
  41bcfa:	retf   0xc552
  41bcfd:	stc    
  41bcfe:	jno    0x41bd5c
  41bd00:	push   eax
  41bd01:	adc    DWORD PTR [esi+edx*8-0xdd0b0d8],ebx
  41bd08:	mov    bl,0xf7
  41bd0a:	push   esp
  41bd0b:	mov    dl,BYTE PTR [ebp+0x28286265]
  41bd11:	stos   DWORD PTR es:[edi],eax
  41bd12:	pop    ecx
  41bd13:	cmp    bh,dl
  41bd15:	sti    
  41bd16:	push   esi
  41bd17:	mov    BYTE PTR ds:0xc77cb175,ah
  41bd1d:	retf   
  41bd1e:	(bad)  
  41bd1f:	cmp    DWORD PTR [ebx],0x9e626f8
  41bd25:	jb     0x41bd49
  41bd27:	jmp    eax
  41bd29:	inc    ebp
  41bd2a:	nop
  41bd2b:	mov    ds:0xc1755345,al
  41bd30:	mov    dh,0x87
  41bd32:	sar    BYTE PTR [ebx-0x51],cl
  41bd35:	mov    esi,cs
  41bd37:	dec    ecx
  41bd38:	(bad)  
  41bd39:	in     eax,0xee
  41bd3b:	es inc ecx
  41bd3d:	mov    dl,dl
  41bd3f:	int    0x99
  41bd41:	stos   DWORD PTR es:[edi],eax
  41bd42:	jmp    0x6fde:0x75c3efaa
  41bd49:	push   esp
  41bd4a:	call   0x2bde:0x35ff
  41bd50:	sbb    eax,0x95dd758c
  41bd55:	lods   al,BYTE PTR ds:[esi]
  41bd56:	leave  
  41bd57:	icebp  
  41bd58:	rep ds ins DWORD PTR es:[edi],dx
  41bd5b:	xchg   BYTE PTR [edx-0x131a7e37],ch
  41bd61:	cmp    eax,0x56767f41
  41bd66:	mov    DWORD PTR [ecx],edx
  41bd68:	ins    BYTE PTR es:[edi],dx
  41bd69:	inc    esi
  41bd6a:	and    DWORD PTR [ecx-0xb],esi
  41bd6d:	mov    ecx,0xa854c843
  41bd72:	jecxz  0x41bd2f
  41bd74:	enter  0x8362,0x31
  41bd78:	or     al,0x15
  41bd7a:	ins    BYTE PTR es:[edi],dx
  41bd7b:	in     al,0x3c
  41bd7d:	mov    BYTE PTR [eax-0x6d],dl
  41bd80:	mov    dl,BYTE PTR [ecx+0x6d]
  41bd83:	cmp    eax,0x88f28ba3
  41bd88:	xor    al,0x2c
  41bd8a:	sti    
  41bd8b:	push   ebx
  41bd8c:	stc    
  41bd8d:	xor    BYTE PTR [edx+0x69],ah
  41bd90:	sahf   
  41bd91:	retf   
  41bd92:	ins    DWORD PTR es:[edi],dx
  41bd93:	mov    al,0x5f
  41bd95:	sar    eax,cl
  41bd97:	out    0xbc,eax
  41bd99:	ror    BYTE PTR [eax+0x21f0e1b3],0xc
  41bda0:	add    ch,BYTE PTR [edx-0x477dc80b]
  41bda6:	aaa    
  41bda7:	xor    dl,0xe8
  41bdaa:	xchg   esp,eax
  41bdab:	fcomp  DWORD PTR [ebp+0x5b]
  41bdae:	loopne 0x41bd6d
  41bdb0:	mov    ds:0xc28a9ba8,eax
  41bdb5:	fwait
  41bdb6:	ins    DWORD PTR es:[edi],dx
  41bdb7:	popa   
  41bdb8:	xchg   ebx,eax
  41bdb9:	gs dec eax
  41bdbb:	xlat   BYTE PTR ds:[ebx]
  41bdbc:	lock vpavgb xmm6,xmm0,XMMWORD PTR ds:[edx+0x5f]
  41bdc3:	bnd jns 0x41bd54
  41bdc6:	stos   BYTE PTR es:[edi],al
  41bdc7:	stos   DWORD PTR es:[edi],eax
  41bdc8:	sbb    al,0x84
  41bdca:	repz call 0x12bc9677
  41bdd0:	pop    ss
  41bdd1:	mov    eax,ds:0x7ccdcab
  41bdd6:	ds pop ss
  41bdd8:	pop    ecx
  41bdd9:	lods   eax,DWORD PTR ds:[esi]
  41bdda:	mov    ds:0x31b7d2a,al
  41bddf:	leave  
  41bde0:	dec    esi
  41bde1:	(bad)  
  41bde2:	loopne 0x41bdb8
  41bde4:	adc    BYTE PTR [edx-0x18f5701b],ah
  41bdea:	mov    bl,0xdd
  41bdec:	cld    
  41bded:	push   cs
  41bdee:	pop    ds
  41bdef:	inc    esi
  41bdf0:	fdiv   DWORD PTR [bx+di]
  41bdf3:	cli    
  41bdf4:	xor    BYTE PTR [ecx-0x6d],dl
  41bdf7:	xchg   esp,eax
  41bdf8:	fist   WORD PTR [edx+edx*1-0x6c]
  41bdfc:	sbb    bh,BYTE PTR [esi-0x22]
  41bdff:	sti    
  41be00:	shl    DWORD PTR [esi],1
  41be02:	iret   
  41be03:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41be04:	popa   
  41be05:	lea    eax,[ebp+0xa488d1b]
  41be0b:	inc    ebp
  41be0c:	retf   
  41be0d:	in     al,0xcd
  41be0f:	cs jnp 0x41be4e
  41be12:	pop    edi
  41be13:	mov    al,0x60
  41be15:	adc    eax,0x31718941
  41be1b:	jbe    0x41bdd9
  41be1d:	push   edx
  41be1e:	div    BYTE PTR [eax+0x7230fd63]
  41be24:	mov    ecx,0x461fdc81
  41be29:	add    edi,edi
  41be2b:	out    dx,al
  41be2c:	mov    al,ds:0x2b87140a
  41be31:	add    eax,0xccf1b021
  41be36:	pushf  
  41be37:	mov    ds:0xfe548179,eax
  41be3c:	mov    cl,dh
  41be3e:	data16 mov WORD PTR [ecx-0x6c],fs
  41be42:	popa   
  41be43:	ja     0x41bdce
  41be45:	mov    al,ds:0xb574073b
  41be4a:	pop    es
  41be4b:	retf   0x5b72
  41be4e:	pop    eax
  41be4f:	mov    ebx,edi
  41be51:	sbb    al,al
  41be53:	xchg   BYTE PTR [edx+0x40],ch
  41be56:	mov    ah,0x25
  41be58:	sbb    al,0x7c
  41be5a:	out    0x31,eax
  41be5c:	int3   
  41be5d:	in     al,0x14
  41be5f:	(bad)  
  41be60:	mov    edx,0x183a7d6a
  41be65:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41be66:	sub    DWORD PTR [esi-0x40],eax
  41be69:	dec    edx
  41be6a:	cmp    eax,0x41d2b7c2
  41be6f:	pop    ds
  41be70:	in     al,dx
  41be71:	push   ebx
  41be72:	ret    
  41be73:	sbb    BYTE PTR [ebp-0xd],al
  41be76:	(bad)  
  41be77:	xlat   BYTE PTR ds:[ebx]
  41be78:	pop    es
  41be79:	xchg   ecx,eax
  41be7a:	push   ds
  41be7b:	cdq    
  41be7c:	or     esp,eax
  41be7e:	repnz int3 
  41be80:	and    al,0xa0
  41be82:	stos   DWORD PTR es:[edi],eax
  41be83:	mov    al,ds:0x6c68d6e1
  41be88:	(bad)  
  41be89:	mov    eax,DWORD PTR [ebp-0x4]
  41be8c:	xor    eax,0x300a
  41be91:	add    eax,0x300b
  41be96:	leave  
  41be97:	ret    0x4
  41be9a:	pusha  
  41be9b:	sti    
  41be9c:	or     DWORD PTR [edx-0x41c0565],ebp
  41bea2:	les    ebp,FWORD PTR [esi+edi*8-0x30b62bdf]
  41bea9:	mul    dh
  41beab:	sub    al,0x0
  41bead:	add    BYTE PTR ds:0x6e000003,dh
  41beb3:	and    bh,BYTE PTR [eax+ebp*2]
  41beb6:	ret    0x62e7
  41beb9:	xlat   BYTE PTR ds:[ebx]
  41beba:	pop    ecx
  41bebb:	mov    ah,0xca
  41bebd:	mov    BYTE PTR cs:[ebx],dh
  41bec0:	dec    ecx
  41bec1:	pop    esi
  41bec2:	jb     0x41bf09
  41bec4:	dec    ecx
  41bec5:	in     eax,0x71
  41bec7:	inc    esp
  41bec8:	sub    ecx,DWORD PTR [ebx+0x1e]
  41becb:	xor    al,0x2c
  41becd:	leave  
  41bece:	push   0xd5b891d4
  41bed3:	stos   DWORD PTR es:[edi],eax
  41bed4:	enter  0x72a6,0xb2
  41bed8:	or     edx,DWORD PTR [eax+0xf151903]
  41bede:	in     al,dx
  41bedf:	(bad)  [edx-0x3f]
  41bee2:	out    0x3f,al
  41bee4:	xchg   BYTE PTR ds:0x4abfb52a,ah
  41beea:	adc    ecx,edx
  41beec:	pop    edx
  41beed:	mov    eax,ds:0x28d64445
  41bef2:	aas    
  41bef3:	imul   edx,ecx,0x6eca92e7
  41bef9:	(bad)  
  41befa:	jnp    0x41bf6d
  41befc:	or     BYTE PTR [esi+esi*4+0xa],al
  41bf00:	ret    0xdc41
  41bf03:	das    
  41bf04:	push   ecx
  41bf05:	jbe    0x41becc
  41bf07:	mov    edx,0x4d782379
  41bf0c:	dec    edi
  41bf0d:	sub    ebx,DWORD PTR [eax]
  41bf0f:	push   ebp
  41bf10:	xor    esp,esi
  41bf12:	mov    al,ds:0xda5d1e83
  41bf17:	std    
  41bf18:	cdq    
  41bf19:	rcr    BYTE PTR ds:0x9bc8c839,0xdb
  41bf20:	sti    
  41bf21:	sub    edx,eax
  41bf23:	cli    
  41bf24:	das    
  41bf25:	push   edi
  41bf26:	js     0x41bf2e
  41bf28:	xchg   DWORD PTR [esi-0x45],ebx
  41bf2b:	out    0x19,al
  41bf2d:	inc    ebx
  41bf2e:	sub    ebx,edi
  41bf30:	push   0xdae35a20
  41bf35:	imul   edx,DWORD PTR [edi+edx*1+0x3bb9dc78],0xffffffc9
  41bf3d:	mov    dl,0x90
  41bf3f:	sub    BYTE PTR [edx-0xa5a20c6],bh
  41bf45:	mov    edi,0x5cc6daf
  41bf4a:	into   
  41bf4b:	adc    BYTE PTR [edx+eiz*4+0x4a],0xcc
  41bf50:	repz jge 0x41bf01
  41bf53:	out    0x30,eax
  41bf55:	(bad)  
  41bf57:	cmp    al,0xa4
  41bf59:	pop    edi
  41bf5a:	test   BYTE PTR [ebx-0x74],ch
  41bf5d:	dec    ebp
  41bf5e:	pop    eax
  41bf5f:	mov    dh,0xd2
  41bf61:	je     0x41bf58
  41bf63:	or     al,0x95
  41bf65:	sbb    eax,0xd6c73727
  41bf6a:	(bad)  
  41bf6b:	in     eax,0x3b
  41bf6d:	pop    ds
  41bf6e:	mov    eax,ds:0xb6c035cc
  41bf73:	pop    es
  41bf74:	fist   DWORD PTR [esi-0x2f]
  41bf77:	or     cl,bh
  41bf79:	lock xchg edx,eax
  41bf7b:	aaa    
  41bf7c:	shr    DWORD PTR [eax-0x10ee8fdd],1
  41bf82:	pop    ebx
  41bf83:	ds pop esp
  41bf85:	in     eax,0x3c
  41bf87:	mov    esp,0xc1397b23
  41bf8c:	xchg   DWORD PTR [edx-0x4b272f7c],esi
  41bf92:	mov    edi,0xd83bc407
  41bf97:	ficomp DWORD PTR [esi-0x41fbf0ec]
  41bf9d:	mov    eax,ds:0x85bd1125
  41bfa2:	pop    ds
  41bfa3:	jmp    0xefda799b
  41bfa8:	xchg   DWORD PTR [edi+0x714ebc15],esi
  41bfae:	mov    esp,0x79063533
  41bfb3:	rcr    al,0x6f
  41bfb6:	jbe    0x41bf7b
  41bfb8:	shl    bl,1
  41bfba:	call   0x768587c5
  41bfbf:	imul   esi,DWORD PTR [edi-0x125457fa],0xffffff8f
  41bfc6:	or     eax,0x48798555
  41bfcb:	xor    al,0xbb
  41bfcd:	call   0xead7:0x100d5c91
  41bfd4:	clc    
  41bfd5:	pop    ebp
  41bfd6:	sbb    dh,BYTE PTR [esi+eiz*4-0x60]
  41bfda:	fisttp DWORD PTR [edi+0x3af7c104]
  41bfe0:	loopne 0x41c04a
  41bfe2:	pop    ds
  41bfe3:	mov    eax,ds:0x617556cd
  41bfe8:	mov    esi,0x9b915dcd
  41bfed:	fwait
  41bfee:	test   DWORD PTR [edx],ecx
  41bff0:	mov    edx,edx
  41bff2:	mov    ebp,DWORD PTR [ebx-0x2b27ab7b]
  41bff8:	adc    cl,cl
  41bffa:	dec    eax
  41bffb:	loopne 0x41c021
  41bffd:	sub    al,BYTE PTR [edx]
  41bfff:	push   esi
  41c000:	mov    esp,0xb7eb360e
  41c005:	repz push esi
  41c007:	pop    ss
  41c008:	in     eax,dx
  41c009:	out    0x68,al
  41c00b:	clc    
  41c00c:	retf   
  41c00d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c00e:	sub    eax,eax
  41c010:	mov    cl,0xb4
  41c012:	(bad)  
  41c014:	int3   
  41c015:	test   DWORD PTR ds:0x4d0a8f9f,ecx
  41c01b:	pop    esi
  41c01c:	sub    DWORD PTR [ebx+0x101b321d],0xffffffe5
  41c023:	cld    
  41c024:	lahf   
  41c025:	push   edi
  41c026:	cld    
  41c027:	ins    BYTE PTR es:[edi],dx
  41c028:	aam    0xe5
  41c02a:	arpl   bp,si
  41c02c:	icebp  
  41c02d:	fadd   DWORD PTR [ecx-0x5ac3ecce]
  41c033:	inc    ebx
  41c034:	loop   0x41c09c
  41c036:	enter  0x9bd4,0xf6
  41c03a:	xor    al,0x69
  41c03c:	pop    ds
  41c03d:	dec    ebx
  41c03e:	out    dx,al
  41c03f:	(bad)  
  41c040:	mov    dh,0x1a
  41c042:	mov    ebx,0xca0d4f5f
  41c047:	loope  0x41c0ab
  41c049:	enter  0x4715,0xd2
  41c04d:	xor    ebp,esi
  41c04f:	add    BYTE PTR [ebp+eiz*2-0x2bdd15bf],ch
  41c056:	call   0x6b2a3fde
  41c05b:	pop    edx
  41c05c:	shl    BYTE PTR [edi],cl
  41c05e:	xchg   DWORD PTR [edx],eax
  41c060:	je     0x41c081
  41c062:	fst    DWORD PTR [ebx+0x3806fb0]
  41c068:	add    eax,0x255d7af1
  41c06d:	push   0xffffffbe
  41c06f:	sahf   
  41c070:	xor    eax,0xa552a2c7
  41c075:	lods   al,BYTE PTR ds:[esi]
  41c076:	mov    dl,0x8c
  41c078:	(bad)  
  41c079:	push   0xddb61ad3
  41c07e:	mov    dh,0x2
  41c080:	enter  0x458c,0xb2
  41c084:	cmp    esp,eax
  41c086:	lods   eax,DWORD PTR ds:[esi]
  41c087:	xchg   edi,eax
  41c088:	sbb    DWORD PTR [ecx*1-0x6b5864d6],0x6d
  41c090:	out    0x33,eax
  41c092:	and    bl,dh
  41c094:	push   ebp
  41c095:	cmp    edi,DWORD PTR [ecx+0x3861d920]
  41c09b:	or     DWORD PTR ds:0x2df5285e,0xffffffca
  41c0a2:	test   BYTE PTR [ebx+0x4c334d11],al
  41c0a8:	iret   
  41c0a9:	dec    esi
  41c0aa:	int3   
  41c0ab:	sub    bh,cl
  41c0ad:	pop    ebp
  41c0ae:	test   DWORD PTR [ebx+0x7],eax
  41c0b1:	inc    esp
  41c0b2:	aaa    
  41c0b3:	pushf  
  41c0b4:	xchg   BYTE PTR [edi+ebp*4+0x75],dl
  41c0b8:	or     al,0xff
  41c0ba:	mov    ebp,0xd8ab5a0a
  41c0bf:	push   ecx
  41c0c0:	xor    eax,0x46ced343
  41c0c5:	ret    
  41c0c6:	sbb    DWORD PTR [ecx-0x6d],edx
  41c0c9:	pop    esi
  41c0ca:	lods   eax,DWORD PTR ds:[esi]
  41c0cb:	sub    eax,DWORD PTR [edi]
  41c0cd:	or     al,0xe9
  41c0cf:	mov    dl,0x10
  41c0d1:	xchg   esp,eax
  41c0d2:	(bad)  
  41c0d3:	aam    0x3d
  41c0d5:	pop    ds
  41c0d6:	sbb    al,0x7b
  41c0d8:	cli    
  41c0d9:	dec    ebx
  41c0da:	imul   edi,DWORD PTR [edx],0x20b9064d
  41c0e0:	and    bh,BYTE PTR [ebx]
  41c0e2:	enter  0xecf8,0xd0
  41c0e6:	pop    es
  41c0e7:	xchg   ebp,eax
  41c0e8:	xchg   esi,eax
  41c0e9:	pusha  
  41c0ea:	call   0x3870:0xefe43332
  41c0f1:	cmc    
  41c0f2:	mov    ds:0x65ec72cf,al
  41c0f7:	sbb    edx,ebp
  41c0f9:	scas   al,BYTE PTR es:[edi]
  41c0fa:	imul   esi,DWORD PTR [ecx],0xfffffff2
  41c0fd:	add    al,0xea
  41c0ff:	xchg   edi,eax
  41c100:	ss mov ah,0x2a
  41c103:	lods   al,BYTE PTR ds:[esi]
  41c104:	pop    esi
  41c105:	retf   0xeb37
  41c108:	(bad)  
  41c109:	arpl   cx,sp
  41c10b:	neg    BYTE PTR [edx]
  41c10d:	(bad)  
  41c10e:	pop    ss
  41c10f:	rcr    BYTE PTR [edx+0x65b67c25],cl
  41c115:	cdq    
  41c116:	inc    esp
  41c117:	xor    BYTE PTR [edx-0x1c],al
  41c11a:	and    BYTE PTR ds:0x22f53f7e,ah
  41c120:	stos   DWORD PTR es:[edi],eax
  41c121:	arpl   WORD PTR [ebx+eax*2-0x37],bp
  41c125:	stc    
  41c126:	dec    ecx
  41c127:	nop
  41c128:	xchg   DWORD PTR [edi+0x14435d5e],eax
  41c12e:	inc    edx
  41c12f:	xchg   ebp,eax
  41c130:	stos   DWORD PTR es:[edi],eax
  41c131:	sbb    esp,DWORD PTR [ecx+esi*8+0x33]
  41c135:	(bad)  
  41c137:	inc    eax
  41c138:	dec    BYTE PTR [ebx]
  41c13a:	xchg   esp,esp
  41c13c:	cmp    ch,BYTE PTR [esi+0x446553c7]
  41c142:	(bad)  
  41c143:	pusha  
  41c144:	ins    BYTE PTR es:[edi],dx
  41c145:	pop    esp
  41c146:	mov    dh,al
  41c148:	pop    ds
  41c149:	adc    al,ah
  41c14b:	xchg   cl,dl
  41c14d:	xchg   esp,eax
  41c14e:	pop    es
  41c14f:	in     al,0xf5
  41c151:	dec    edi
  41c152:	daa    
  41c153:	ret    0x1ba2
  41c156:	jo     0x41c137
  41c158:	push   esp
  41c159:	(bad)  
  41c15a:	aam    0x95
  41c15c:	adc    bl,BYTE PTR [edi]
  41c15e:	jb     0x41c183
  41c160:	scas   eax,DWORD PTR es:[edi]
  41c161:	lods   al,BYTE PTR ds:[esi]
  41c162:	xchg   edi,eax
  41c163:	mov    WORD PTR [ecx+0x22],?
  41c166:	sub    al,0xc2
  41c168:	jmp    0x7b183745
  41c16d:	(bad)  
  41c16e:	push   eax
  41c16f:	sar    dl,cl
  41c171:	mov    ds:0x55c4f300,al
  41c176:	cmp    BYTE PTR [ecx+0x79491b31],dh
  41c17c:	mov    eax,0x667b941b
  41c181:	adc    eax,eax
  41c183:	xchg   ah,al
  41c185:	push   edi
  41c186:	push   ecx
  41c187:	xor    bh,BYTE PTR [ecx-0x3df3528d]
  41c18d:	dec    ebx
  41c18e:	jg     0x41c1df
  41c190:	mov    dl,0x87
  41c192:	mov    ebp,0xb64a83f9
  41c197:	mov    dl,0x7
  41c19a:	pop    es
  41c19b:	push   0xffffffa0
  41c19d:	ins    BYTE PTR es:[edi],dx
  41c19e:	pop    ss
  41c19f:	xchg   esi,eax
  41c1a0:	jne    0x41c126
  41c1a2:	pop    ecx
  41c1a3:	test   DWORD PTR [ebp+0x52389269],ebp
  41c1a9:	cmp    edi,ecx
  41c1ab:	mov    ah,0x52
  41c1ad:	pop    ds
  41c1ae:	or     DWORD PTR [eax-0x67],0xa78fd758
  41c1b5:	pop    ebx
  41c1b6:	aam    0x82
  41c1b8:	jmp    0x41c22a
  41c1ba:	add    esp,edi
  41c1bc:	(bad)  
  41c1be:	hlt    
  41c1bf:	pushf  
  41c1c0:	mov    cs,WORD PTR [esi-0x55]
  41c1c3:	shr    DWORD PTR [edx-0x3114a098],cl
  41c1c9:	xor    BYTE PTR [edx+0xf537f33],cl
  41c1cf:	sub    DWORD PTR fs:[edi-0x6e],edi
  41c1d3:	test   DWORD PTR [esi+eax*4],esp
  41c1d6:	or     bh,BYTE PTR [edi+ebp*1+0x63799f75]
  41c1dd:	and    esi,DWORD PTR [edx+ecx*1-0x39]
  41c1e1:	test   DWORD PTR [ebp-0xd17a0c3],0x83ec8b55
  41c1eb:	in     al,dx
  41c1ec:	inc    esp
  41c1ed:	and    DWORD PTR ds:0x4236b4,0x5bd8
  41c1f7:	push   ebx
  41c1f8:	adc    DWORD PTR ds:0x423684,0x423700
  41c202:	push   esi
  41c203:	push   edi
  41c204:	or     DWORD PTR ds:0x423680,edx
  41c20a:	push   0xfffffffc
  41c20c:	and    DWORD PTR ds:0x42372c,0x0
  41c216:	jmp    0x41c22a
  41c21b:	xor    esi,esi
  41c21d:	add    esi,DWORD PTR ds:0x42372c
  41c223:	inc    esi
  41c224:	mov    DWORD PTR ds:0x42372c,esi
  41c22a:	cmp    DWORD PTR ds:0x42372c,0x1a
  41c231:	jae    0x41c281
  41c237:	cmp    DWORD PTR ds:0x42372c,0x9
  41c23e:	jne    0x41c25c
  41c244:	push   0x42373c
  41c249:	push   0x8c1f
  41c24e:	push   0x84f0
  41c253:	push   DWORD PTR [ebp-0x14]
  41c256:	call   DWORD PTR ds:0x41f528
  41c25c:	cmp    DWORD PTR ds:0x42372c,0x8
  41c263:	jne    0x41c276
  41c269:	mov    esi,DWORD PTR ds:0x42372c
  41c26f:	inc    esi
  41c270:	mov    DWORD PTR ds:0x42372c,esi
  41c276:	jmp    0x41c21b
  41c27b:	and    DWORD PTR ds:0x4214f4,edi
  41c281:	pop    esi
  41c282:	xor    DWORD PTR ds:0x4236c0,0x2a03
  41c28c:	call   0x41a604
  41c291:	mov    DWORD PTR [ebp-0x8],eax
  41c294:	or     DWORD PTR ds:0x423728,0x42373c
  41c29e:	or     esi,0xffffffff
  41c2a1:	dec    DWORD PTR ds:0x423680
  41c2a7:	call   0x41a604
  41c2ac:	mov    DWORD PTR [ebp-0x10],eax
  41c2af:	mov    eax,ds:0x4211a0
  41c2b4:	mov    eax,DWORD PTR [eax+0x198]
  41c2ba:	and    DWORD PTR ds:0x42372c,0x423704
  41c2c4:	jmp    0x41c460
  41c2c9:	xor    BYTE PTR [edx+0x79],dh
  41c2cc:	in     eax,dx
  41c2cd:	jnp    0x41c2be
  41c2cf:	mov    ah,0xff
  41c2d1:	loopne 0x41c286
  41c2d3:	xchg   edi,eax
  41c2d4:	add    cl,BYTE PTR [esi]
  41c2d6:	cld    
  41c2d7:	bound  esp,QWORD PTR [edx-0x5]
  41c2da:	jle    0x41c2dd
  41c2dc:	add    BYTE PTR [edi+0x1],bh
  41c2df:	add    BYTE PTR [eax],al
  41c2e1:	push   es
  41c2e2:	aaa    
  41c2e3:	jb     0x41c337
  41c2e5:	pop    edx
  41c2e6:	lea    ebp,[eax+edi*1]
  41c2e9:	add    al,BYTE PTR [edx]
  41c2eb:	xor    BYTE PTR [esi+0x573d0da2],cl
  41c2f1:	inc    esi
  41c2f2:	or     BYTE PTR [ebx-0x54eb47ed],ch
  41c2f8:	das    
  41c2f9:	xchg   ecx,eax
  41c2fa:	mov    esi,0xc84df2e2
  41c2ff:	out    0x4b,al
  41c301:	cs or  dl,bh
  41c304:	mov    al,ds:0xb191ceb0
  41c309:	add    esi,DWORD PTR [eax]
  41c30b:	icebp  
  41c30c:	push   esp
  41c30d:	lods   al,BYTE PTR ds:[esi]
  41c30e:	inc    esp
  41c30f:	jle    0x41c2f1
  41c311:	push   0x5b2dae33
  41c316:	ss pop ebp
  41c318:	adc    dh,BYTE PTR [edi]
  41c31a:	mov    DWORD PTR [eax-0x4a70bbd4],ecx
  41c320:	cmp    al,0x66
  41c322:	loopne 0x41c2e0
  41c324:	idiv   esi
  41c326:	push   DWORD PTR [ebp-0x56]
  41c329:	add    DWORD PTR [ebx],esp
  41c32b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c32c:	jle    0x41c2e0
  41c32e:	jg     0x41c370
  41c330:	(bad)  
  41c331:	or     dl,BYTE PTR [ecx-0x59d1d996]
  41c337:	aaa    
  41c338:	mov    bh,0xbe
  41c33a:	paddd  mm7,QWORD PTR [edx]
  41c33d:	inc    ebp
  41c33e:	or     edi,0x21ef774c
  41c344:	mov    cl,BYTE PTR [edi+0x2e7b3085]
  41c34a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c34b:	or     al,BYTE PTR [eax+ecx*8+0x56]
  41c34f:	adc    edx,ebp
  41c351:	fwait
  41c352:	test   al,0x84
  41c354:	fs (bad) 
  41c356:	xor    esi,eax
  41c358:	aas    
  41c359:	jge    0x41c343
  41c35b:	cmp    bl,bh
  41c35d:	cs imul edx,eax,0x35
  41c361:	jl     0x41c339
  41c363:	or     BYTE PTR [ebx],bh
  41c365:	push   ebx
  41c366:	and    ah,BYTE PTR [ebp-0x21f1c6e1]
  41c36c:	mov    ecx,es
  41c36e:	jo     0x41c3aa
  41c370:	rol    BYTE PTR [edx+0x51],1
  41c373:	aad    0x50
  41c375:	adc    DWORD PTR [ebp+0x2bc8450d],esi
  41c37b:	push   es
  41c37c:	imul   esi,DWORD PTR [eax+0x18],0x4c
  41c380:	push   ecx
  41c381:	xor    cl,BYTE PTR [ecx]
  41c383:	fucomip st,st(5)
  41c385:	popf   
  41c386:	mov    edi,0xcfe5b87b
  41c38b:	rcl    BYTE PTR [edx],cl
  41c38d:	push   ecx
  41c38e:	lock cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c390:	daa    
  41c391:	(bad)  
  41c392:	fdivp  st(7),st
  41c394:	out    0x1c,al
  41c396:	pop    edx
  41c397:	pusha  
  41c398:	and    DWORD PTR [ecx-0x38],ebp
  41c39b:	lds    edx,FWORD PTR [edi+0x7c]
  41c39e:	in     al,dx
  41c39f:	inc    esp
  41c3a0:	add    al,0x45
  41c3a2:	aad    0x9
  41c3a4:	xor    eax,0xb4822b8b
  41c3a9:	data16 sbb ah,BYTE PTR [eax-0x7a]
  41c3ad:	inc    DWORD PTR ds:0x75f6ff97
  41c3b3:	jmp    0x4f932995
  41c3b8:	xor    al,0xea
  41c3ba:	lods   al,BYTE PTR ds:[esi]
  41c3bb:	and    esp,edx
  41c3bd:	adc    DWORD PTR [edx+0x76],esi
  41c3c0:	fcom   st(6)
  41c3c2:	hlt    
  41c3c3:	xchg   edi,ecx
  41c3c5:	sub    DWORD PTR [edx],edi
  41c3c7:	cli    
  41c3c8:	mov    ds:0x93b2542b,al
  41c3cd:	push   esi
  41c3ce:	xchg   BYTE PTR [edi-0x24812b8a],dl
  41c3d4:	dec    esi
  41c3d5:	sub    DWORD PTR [edi-0x23],esp
  41c3d8:	jp     0x41c44b
  41c3da:	dec    ecx
  41c3db:	sbb    cl,ah
  41c3dd:	sub    eax,0x83fb4ea2
  41c3e2:	into   
  41c3e3:	xchg   esi,eax
  41c3e4:	nop
  41c3e5:	xchg   ebx,eax
  41c3e6:	aad    0x1b
  41c3e8:	in     eax,dx
  41c3e9:	sbb    edi,ecx
  41c3eb:	sub    BYTE PTR [esi],dh
  41c3ed:	mov    ebx,0xad9b83ef
  41c3f2:	jg     0x41c3b3
  41c3f4:	mov    ecx,0xedc8d3d6
  41c3f9:	(bad)  
  41c3fa:	outs   dx,DWORD PTR ds:[esi]
  41c3fb:	and    eax,0xc311e797
  41c400:	sar    DWORD PTR [ecx-0x4ac58784],0x77
  41c407:	push   ss
  41c408:	lock push esp
  41c40b:	ja     0x41c39e
  41c40d:	ss into 
  41c40f:	and    DWORD PTR [ebx*8+0x316e80a],eax
  41c416:	push   0x19
  41c418:	xchg   esi,eax
  41c419:	and    ecx,DWORD PTR [edx+0x12]
  41c41c:	add    eax,DWORD PTR [esi+0x62]
  41c41f:	bound  eax,QWORD PTR [esi]
  41c421:	(bad)
  41c424:	cmp    dl,BYTE PTR [esi-0x56]
  41c427:	and    BYTE PTR [edx+0x6f],0x6b
  41c42b:	push   0x1bb9072f
  41c430:	loop   0x41c44b
  41c432:	mov    BYTE PTR [esi+0x282c8ec1],al
  41c438:	pusha  
  41c439:	call   0x6bf8201d
  41c43e:	sub    DWORD PTR [ebx+eax*4],0x1f9aa688
  41c445:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c446:	jp     0x41c47a
  41c448:	loope  0x41c478
  41c44a:	ret    0x6abc
  41c44d:	out    dx,al
  41c44e:	adc    DWORD PTR [edx+0x2b],eax
  41c451:	enter  0x3f1,0x9f
  41c455:	sahf   
  41c456:	adc    cl,BYTE PTR [ebp-0x47cb3eae]
  41c45c:	dec    eax
  41c45d:	out    0xec,al
  41c45f:	and    DWORD PTR gs:[eax],0x0
  41c463:	mov    DWORD PTR [ebp-0x4],0x0
  41c46a:	sub    DWORD PTR ds:0x4214d8,0x423674
  41c474:	lea    ebx,[ebp-0x4]
  41c477:	sbb    DWORD PTR ds:0x4214e8,0x423700
  41c481:	call   0x409c96
  41c486:	mov    DWORD PTR [ebp-0x18],0x421024
  41c48d:	mov    ecx,ebp
  41c48f:	adc    DWORD PTR ds:0x4236b8,ebx
  41c495:	lea    ecx,[ecx-0x4]
  41c498:	sbb    DWORD PTR ds:0x4214e8,0x6bf7
  41c4a2:	add    ecx,0x8
  41c4a5:	mov    DWORD PTR [ebp-0xc],ecx
  41c4a8:	adc    edx,DWORD PTR ds:0x4214fc
  41c4ae:	mov    edx,DWORD PTR [ebp-0xc]
  41c4b1:	mov    DWORD PTR ds:0x423740,0x7ef8
  41c4bb:	call   0x4081e3
  41c4c0:	and    DWORD PTR ds:0x42373c,0x0
  41c4ca:	jmp    0x41c4dc
  41c4cf:	mov    edi,DWORD PTR ds:0x42373c
  41c4d5:	inc    edi
  41c4d6:	mov    DWORD PTR ds:0x42373c,edi
  41c4dc:	cmp    DWORD PTR ds:0x42373c,0x1b
  41c4e3:	jae    0x41c57b
  41c4e9:	cmp    DWORD PTR ds:0x42373c,0xd
  41c4f0:	jne    0x41c501
  41c4f6:	push   0x7ce5
  41c4fb:	call   DWORD PTR ds:0x41f03c
  41c501:	cmp    DWORD PTR ds:0x42373c,0xc
  41c508:	jne    0x41c51b
  41c50e:	mov    edi,DWORD PTR ds:0x42373c
  41c514:	inc    edi
  41c515:	mov    DWORD PTR ds:0x42373c,edi
  41c51b:	jmp    0x41c4cf
  41c520:	and    DWORD PTR ds:0x4214ec,0x0
  41c52a:	mov    edi,DWORD PTR ds:0x4214ec
  41c530:	inc    edi
  41c531:	mov    DWORD PTR ds:0x4214ec,edi
  41c537:	cmp    DWORD PTR ds:0x4214ec,0x5
  41c53e:	jne    0x41c554
  41c544:	push   0x54f1
  41c549:	push   0x2e9d
  41c54e:	call   DWORD PTR ds:0x41f52c
  41c554:	cmp    DWORD PTR ds:0x4214ec,0x4
  41c55b:	jne    0x41c56e
  41c561:	mov    edi,DWORD PTR ds:0x4214ec
  41c567:	inc    edi
  41c568:	mov    DWORD PTR ds:0x4214ec,edi
  41c56e:	cmp    DWORD PTR ds:0x4214ec,0x10
  41c575:	jb     0x41c52a
  41c57b:	mov    ds:0x42142c,eax
  41c580:	add    ecx,ecx
  41c582:	mov    eax,ds:0x4211c0
  41c587:	and    DWORD PTR ds:0x4214ec,0x0
  41c591:	jmp    0x41c5a5
  41c596:	xor    ecx,ecx
  41c598:	add    ecx,DWORD PTR ds:0x4214ec
  41c59e:	inc    ecx
  41c59f:	mov    DWORD PTR ds:0x4214ec,ecx
  41c5a5:	cmp    DWORD PTR ds:0x4214ec,0x1d
  41c5ac:	jae    0x41c5d5
  41c5b2:	cmp    DWORD PTR ds:0x4214ec,0x2d
  41c5b9:	jne    0x41c5ca
  41c5bf:	push   0x47a2
  41c5c4:	call   DWORD PTR ds:0x41f164
  41c5ca:	jmp    0x41c596
  41c5cf:	or     ecx,0x56bf
  41c5d5:	mov    eax,DWORD PTR [eax]
  41c5d7:	movzx  ecx,BYTE PTR ds:0x423674
  41c5de:	sub    DWORD PTR ds:0x4214f4,ecx
  41c5e4:	mov    ecx,DWORD PTR [ebp-0x8]
  41c5e7:	mov    edi,0x300b
  41c5ec:	lea    ebx,[edi-0x1]
  41c5ef:	sub    eax,edi
  41c5f1:	mov    DWORD PTR ds:0x423704,0x3863
  41c5fb:	jmp    0x41c797
  41c600:	fstp   st(6)
  41c602:	sbb    ah,dh
  41c604:	sbb    esi,esi
  41c606:	std    
  41c607:	call   DWORD PTR [ecx-0x4d]
  41c60a:	mov    ch,0x1d
  41c60c:	loope  0x41c60b
  41c60e:	inc    esp
  41c60f:	bnd jp 0x41c592
  41c612:	add    DWORD PTR [eax],eax
  41c614:	jg     0x41c617
  41c616:	add    BYTE PTR [eax],al
  41c618:	aas    
  41c619:	mov    al,ds:0x80d4177c
  41c61e:	cmp    eax,0xabeb1c61
  41c623:	push   ebx
  41c624:	or     eax,edx
  41c626:	or     DWORD PTR [esi+0x17],esp
  41c629:	cmp    al,0x85
  41c62b:	scas   al,BYTE PTR es:[edi]
  41c62c:	adc    cl,0x48
  41c62f:	retf   
  41c630:	sahf   
  41c631:	das    
  41c632:	shr    BYTE PTR [eax+0x145156fc],1
  41c638:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c639:	rcl    DWORD PTR ds:0xa91551e4,cl
  41c63f:	or     al,0x50
  41c641:	push   edi
  41c642:	sub    DWORD PTR [ecx-0x1745ed90],ecx
  41c648:	or     cl,BYTE PTR [edx+eax*4+0x45]
  41c64c:	jns    0x41c60c
  41c64e:	sub    al,0x56
  41c650:	xor    DWORD PTR [ecx],0x7ca4bb22
  41c656:	cmp    al,0x3f
  41c658:	add    bl,bh
  41c65a:	scas   al,BYTE PTR es:[edi]
  41c65b:	xor    ecx,DWORD PTR [edx]
  41c65d:	sub    eax,DWORD PTR [eax-0x6a39eb4b]
  41c663:	in     al,dx
  41c664:	pop    es
  41c665:	loop   0x41c63e
  41c667:	hlt    
  41c668:	test   BYTE PTR [edx+0x47080cdc],dl
  41c66e:	call   0xcf65bc6
  41c673:	popa   
  41c674:	jle    0x41c65f
  41c676:	push   0x77c74a64
  41c67b:	scas   al,BYTE PTR es:[edi]
  41c67c:	ror    ch,0xc3
  41c67f:	scas   al,BYTE PTR es:[edi]
  41c680:	push   ebp
  41c681:	or     al,0x4a
  41c683:	inc    edi
  41c684:	bound  edi,QWORD PTR [ecx]
  41c686:	adc    bh,bh
  41c688:	xor    ebp,ebx
  41c68a:	sbb    al,0x9a
  41c68c:	nop
  41c68d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c68e:	dec    ebx
  41c68f:	scas   al,BYTE PTR es:[edi]
  41c690:	ret    
  41c691:	in     al,dx
  41c692:	and    BYTE PTR [ebx+0x3c],0x6a
  41c696:	gs out 0x4,eax
  41c699:	jae    0x41c70b
  41c69b:	xor    al,0xd5
  41c69d:	add    ch,ch
  41c69f:	mov    dh,0xe8
  41c6a1:	xchg   ecx,eax
  41c6a2:	push   ebx
  41c6a3:	das    
  41c6a4:	outs   dx,BYTE PTR ds:[esi]
  41c6a5:	pop    edi
  41c6a6:	sub    DWORD PTR [edx+edi*4+0x12],0xae48982c
  41c6ae:	cs jmp edx
  41c6b1:	add    eax,0xea3cdf23
  41c6b6:	mov    ds:0x5d2173da,al
  41c6bb:	iret   
  41c6bc:	xlat   BYTE PTR ds:[ebx]
  41c6bd:	or     DWORD PTR [eax+0x6e],edi
  41c6c0:	sbb    eax,0x711d9c95
  41c6c5:	daa    
  41c6c6:	push   ecx
  41c6c7:	add    eax,DWORD PTR [edi]
  41c6c9:	je     0x41c6ab
  41c6cb:	gs mov edx,0x1372cec8
  41c6d1:	iret   
  41c6d2:	mov    al,ds:0xbcea793c
  41c6d7:	loop   0x41c6ca
  41c6d9:	pop    ebx
  41c6da:	add    eax,0xffa679ba
  41c6df:	add    eax,0xb8532a11
  41c6e4:	cs push ebx
  41c6e6:	mov    WORD PTR [ecx-0x33],?
  41c6e9:	mov    dh,0xdd
  41c6eb:	rcr    DWORD PTR [ecx],1
  41c6ed:	jbe    0x41c6db
  41c6ef:	fsub   QWORD PTR [edi-0x20]
  41c6f2:	adc    esp,DWORD PTR [ebx+0x41894b08]
  41c6f8:	clc    
  41c6f9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c6fa:	repz aas 
  41c6fc:	mul    DWORD PTR [ebp+0x35]
  41c6ff:	aaa    
  41c700:	adc    eax,0x33830049
  41c705:	add    bh,BYTE PTR [eax]
  41c707:	les    esp,FWORD PTR [eax+0x6d593727]
  41c70d:	and    eax,0xcaf2bae2
  41c712:	mov    eax,ds:0x56e50a49
  41c717:	mov    ds:0x878e6827,eax
  41c71c:	stc    
  41c71d:	sbb    ax,dx
  41c720:	fst    st(4)
  41c722:	and    DWORD PTR [edx+0x2d5bef4b],edi
  41c728:	not    BYTE PTR [eax+esi*8-0x7f]
  41c72c:	mov    esp,0xfa50348d
  41c731:	ds (bad) 
  41c733:	or     ecx,edi
  41c735:	cwde   
  41c736:	das    
  41c737:	mov    al,0x82
  41c739:	xor    ecx,ebx
  41c73b:	cmp    dl,cl
  41c73d:	cmp    dh,BYTE PTR [edx-0x22379a1e]
  41c743:	dec    esi
  41c744:	xor    edi,DWORD PTR [eax+0x5d]
  41c747:	(bad)  
  41c748:	or     al,0x43
  41c74a:	sub    eax,0xf69d28c8
  41c74f:	xchg   esi,eax
  41c750:	push   0xffffff99
  41c752:	cli    
  41c753:	iret   
  41c754:	xor    eax,DWORD PTR [edi-0x2f]
  41c757:	xchg   ebx,eax
  41c758:	pop    ss
  41c759:	dec    edi
  41c75a:	in     al,0x3e
  41c75c:	adc    dh,ch
  41c75e:	inc    ebx
  41c75f:	or     DWORD PTR [ebp+0x289a2224],esi
  41c765:	mov    ds:0xabaf3930,al
  41c76a:	inc    eax
  41c76b:	loope  0x41c7d4
  41c76d:	add    ebx,DWORD PTR [esi+0x2b]
  41c770:	das    
  41c771:	sub    edi,DWORD PTR [esi]
  41c773:	or     DWORD PTR [esi],esi
  41c775:	aad    0x53
  41c777:	dec    esp
  41c778:	ins    BYTE PTR es:[edi],dx
  41c779:	loop   0x41c739
  41c77b:	aad    0x6a
  41c77d:	jg     0x41c7b9
  41c77f:	scas   eax,DWORD PTR es:[edi]
  41c780:	cmp    edi,DWORD PTR [edx]
  41c782:	pop    eax
  41c783:	push   ebx
  41c784:	inc    ebx
  41c785:	push   edx
  41c786:	cdq    
  41c787:	shl    DWORD PTR [eax-0x76],0xda
  41c78b:	and    DWORD PTR [ebx],0xffffffe0
  41c78e:	inc    ebp
  41c78f:	cmp    cl,bh
  41c791:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c792:	or     ecx,0x682de8cd
  41c798:	adc    al,0x13
  41c79a:	inc    edx
  41c79b:	add    BYTE PTR [ecx+0x42368015],al
  41c7a1:	add    dh,cl
  41c7a3:	or     DWORD PTR [eax],eax
  41c7a5:	add    BYTE PTR [ebx],dh
  41c7a7:	retf   
  41c7a8:	xor    eax,ebx
  41c7aa:	and    DWORD PTR ds:0x423678,0x409a
  41c7b4:	push   0x1
  41c7b6:	add    ecx,edi
  41c7b8:	adc    DWORD PTR ds:0x423740,0x42372c
  41c7c2:	push   ecx
  41c7c3:	xor    eax,ebx
  41c7c5:	xor    DWORD PTR ds:0x423744,0x2509
  41c7cf:	add    eax,edi
  41c7d1:	or     DWORD PTR ds:0x42366c,0x2baf
  41c7db:	push   0x421028
  41c7e0:	push   eax
  41c7e1:	call   0x405628
  41c7e6:	add    esp,0x14
  41c7e9:	test   eax,eax
  41c7eb:	je     0x41d3e4
  41c7f1:	sub    DWORD PTR ds:0x423730,ebx
  41c7f7:	mov    ecx,0xfe48
  41c7fc:	mov    WORD PTR [ebp-0x44],cx
  41c800:	mov    ecx,0xfff8
  41c805:	xor    DWORD PTR ds:0x4236c4,edx
  41c80b:	mov    edx,ecx
  41c80d:	sbb    DWORD PTR ds:0x4236bc,0x4236c0
  41c817:	mov    WORD PTR [ebp-0x42],dx
  41c81b:	add    DWORD PTR ds:0x423734,edx
  41c821:	mov    edx,0xfe59
  41c826:	mov    WORD PTR [ebp-0x40],dx
  41c82a:	sbb    DWORD PTR ds:0x4214e0,0x4236c4
  41c834:	lea    edx,[ecx+0x1]
  41c837:	adc    DWORD PTR ds:0x423684,0x6909
  41c841:	mov    WORD PTR [ebp-0x3e],dx
  41c845:	jmp    0x41c9e1
  41c84a:	daa    
  41c84b:	or     BYTE PTR [esi],0xa0
  41c84e:	scas   eax,DWORD PTR es:[edi]
  41c84f:	lods   al,BYTE PTR ds:[esi]
  41c850:	scas   eax,DWORD PTR es:[edi]
  41c851:	xchg   DWORD PTR [edi-0x5a],esp
  41c854:	aas    
  41c855:	js     0x41c8a1
  41c857:	test   eax,0x81f917ba
  41c85c:	add    DWORD PTR [eax],eax
  41c85e:	jg     0x41c861
  41c860:	add    BYTE PTR [eax],al
  41c862:	add    eax,0xeb0a9d3c
  41c867:	sub    al,0xf
  41c869:	pop    eax
  41c86a:	popf   
  41c86b:	cdq    
  41c86c:	mov    bl,0x79
  41c86e:	mov    WORD PTR [esi],ds
  41c870:	xor    al,cl
  41c872:	mov    edi,DWORD PTR [ebx]
  41c874:	shl    DWORD PTR [eax-0x22ef1177],1
  41c87a:	add    eax,DWORD PTR [edi-0x1b]
  41c87d:	daa    
  41c87e:	adc    eax,0x5a82474
  41c883:	mov    ebx,0x421ebc9d
  41c888:	pop    DWORD PTR [ecx+0x32]
  41c88b:	rcl    BYTE PTR [esi],0x53
  41c88e:	adc    eax,0xe6fd0ac2
  41c893:	out    dx,al
  41c894:	sar    BYTE PTR [ecx+0x32],cl
  41c897:	loope  0x41c89e
  41c899:	mov    eax,0x5276670e
  41c89e:	aas    
  41c89f:	jmp    0x41c8b2
  41c8a1:	push   ecx
  41c8a2:	push   edi
  41c8a3:	mov    ah,0x80
  41c8a5:	pushf  
  41c8a6:	mov    esi,0x671d10a2
  41c8ab:	jg     0x41c8b8
  41c8ad:	aad    0x56
  41c8af:	inc    ecx
  41c8b0:	in     al,dx
  41c8b1:	push   ebp
  41c8b2:	mov    ch,0x92
  41c8b4:	and    DWORD PTR [edx+0xf62c644],ebp
  41c8ba:	sub    al,0x6e
  41c8bc:	pusha  
  41c8bd:	dec    ebx
  41c8be:	(bad)  
  41c8bf:	test   BYTE PTR [eax+0x3f],0x39
  41c8c3:	ja     0x41c91d
  41c8c5:	xchg   ebp,eax
  41c8c6:	cdq    
  41c8c7:	jb     0x41c894
  41c8c9:	leave  
  41c8ca:	dec    esi
  41c8cb:	inc    edx
  41c8cc:	into   
  41c8cd:	dec    ebx
  41c8ce:	xor    BYTE PTR [ecx-0x30c40a63],bl
  41c8d4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c8d5:	imul   eax,DWORD PTR [edx+eax*4-0x59],0x4
  41c8da:	jno    0x41c8dc
  41c8dc:	and    esp,edi
  41c8de:	mov    esp,DWORD PTR [eax+0x17]
  41c8e1:	cdq    
  41c8e2:	xchg   edx,eax
  41c8e3:	push   0xffffffc2
  41c8e5:	fidivr DWORD PTR [edi]
  41c8e7:	xchg   esp,eax
  41c8e8:	jns    0x41c86d
  41c8ea:	inc    eax
  41c8eb:	xchg   edx,eax
  41c8ec:	paddd  mm1,QWORD PTR [esi+esi*4-0x1069e448]
  41c8f4:	ss (bad) 
  41c8f6:	push   ss
  41c8f7:	mov    dh,0xc3
  41c8f9:	inc    esp
  41c8fa:	loop   0x41c8f4
  41c8fc:	pusha  
  41c8fd:	sbb    DWORD PTR [ebx],esp
  41c8ff:	mov    esp,DWORD PTR [esi+ebx*1-0x1c]
  41c903:	mov    ch,0x44
  41c905:	pop    esp
  41c906:	inc    eax
  41c907:	xchg   ecx,eax
  41c908:	inc    edi
  41c909:	(bad)  
  41c90a:	mov    ds,WORD PTR [edi-0x32a3cddb]
  41c910:	jne    0x41c896
  41c912:	popa   
  41c913:	xor    dl,bh
  41c915:	jbe    0x41c942
  41c917:	retf   
  41c918:	fsub   DWORD PTR [eax+0x9ba29f8]
  41c91e:	(bad)  
  41c91f:	nop
  41c920:	cmp    eax,DWORD PTR [esi-0x3c]
  41c923:	sub    al,0x65
  41c925:	mov    eax,0x9bfa8c4b
  41c92a:	sar    edi,0x7d
  41c92d:	push   es
  41c92e:	scas   al,BYTE PTR es:[edi]
  41c92f:	imul   BYTE PTR [eax]
  41c931:	xchg   BYTE PTR [edi-0xb014e3b],ah
  41c937:	dec    ebp
  41c938:	aam    0x39
  41c93a:	shl    DWORD PTR [edi+0x222a064a],cl
  41c940:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c941:	stos   BYTE PTR es:[edi],al
  41c942:	(bad)  
  41c943:	loopne 0x41c8cf
  41c945:	int    0x3f
  41c947:	sti    
  41c948:	mov    bh,0xa7
  41c94a:	mov    bh,ah
  41c94c:	and    BYTE PTR [esi],0x7
  41c94f:	pop    ebp
  41c950:	add    BYTE PTR [eax-0x6],cl
  41c953:	jae    0x41c98c
  41c955:	je     0x41c961
  41c957:	mov    dh,BYTE PTR [edx-0x452a98db]
  41c95d:	jp     0x41c99f
  41c95f:	push   ecx
  41c960:	mov    ebx,0xaaeda990
  41c965:	sar    ecx,1
  41c967:	mov    al,0xf1
  41c969:	aad    0xa2
  41c96b:	and    eax,0x3144c250
  41c970:	xchg   ebx,eax
  41c971:	arpl   ax,dx
  41c973:	jle    0x41c955
  41c975:	pop    eax
  41c976:	lahf   
  41c977:	sub    DWORD PTR [ebx+ecx*1-0x58],edx
  41c97b:	ds out dx,al
  41c97d:	add    al,0x92
  41c97f:	call   0xce74e965
  41c984:	or     dl,BYTE PTR [edx+0x22a2c580]
  41c98a:	jne    0x41c93a
  41c98c:	icebp  
  41c98d:	div    DWORD PTR [edx+0x74b5d3da]
  41c993:	push   edi
  41c994:	xor    al,0x69
  41c996:	mov    al,ds:0x3d6e3420
  41c99b:	push   0x6efba34b
  41c9a0:	scas   al,BYTE PTR es:[edi]
  41c9a1:	in     al,dx
  41c9a2:	dec    esi
  41c9a3:	xchg   esi,eax
  41c9a4:	scas   eax,DWORD PTR es:[edi]
  41c9a5:	lea    esi,[ebx+eax*2-0x1eeaca5e]
  41c9ac:	mov    ch,0x32
  41c9ae:	sahf   
  41c9af:	ror    BYTE PTR [eax+ebp*8-0x45],0x2f
  41c9b4:	add    al,0xe3
  41c9b6:	or     al,0x5b
  41c9b8:	pop    ds
  41c9b9:	mul    DWORD PTR [ecx]
  41c9bb:	jo     0x81636d25
  41c9c1:	clc    
  41c9c2:	(bad)  
  41c9c4:	sub    ebp,DWORD PTR [ebx+0x6e]
  41c9c7:	leave  
  41c9c8:	mov    bh,dl
  41c9ca:	in     eax,0x50
  41c9cc:	in     eax,dx
  41c9cd:	lea    ecx,[ecx]
  41c9cf:	push   eax
  41c9d0:	mov    eax,0x33d68821
  41c9d5:	fwait
  41c9d6:	aam    0xf7
  41c9d8:	outs   dx,DWORD PTR ds:[esi]
  41c9d9:	dec    edx
  41c9da:	mov    esp,0x870376da
  41c9df:	or     al,0xd6
  41c9e1:	mov    edx,0xfe3b
  41c9e6:	adc    DWORD PTR ds:0x423734,0x2137
  41c9f0:	mov    WORD PTR [ebp-0x3c],dx
  41c9f4:	adc    DWORD PTR ds:0x423670,0xec5
  41c9fe:	lea    edx,[ecx-0x4]
  41ca01:	or     DWORD PTR ds:0x423730,0x4214d8
  41ca0b:	mov    WORD PTR [ebp-0x3a],dx
  41ca0f:	mov    edx,0xfe36
  41ca14:	dec    DWORD PTR ds:0x423734
  41ca1a:	mov    WORD PTR [ebp-0x38],dx
  41ca1e:	or     DWORD PTR ds:0x4236a8,0x4236c0
  41ca28:	lea    edx,[ecx-0x6]
  41ca2b:	or     DWORD PTR ds:0x4236c4,0x4214dc
  41ca35:	mov    WORD PTR [ebp-0x36],dx
  41ca39:	mov    edx,0xfe45
  41ca3e:	not    DWORD PTR ds:0x423740
  41ca44:	mov    WORD PTR [ebp-0x34],dx
  41ca48:	adc    DWORD PTR ds:0x423740,0x5ced
  41ca52:	add    edx,0xffffffc9
  41ca55:	or     DWORD PTR ds:0x423674,0x423730
  41ca5f:	mov    WORD PTR [ebp-0x32],dx
  41ca63:	mov    DWORD PTR ds:0x423678,0x6134
  41ca6d:	mov    edx,0xfe39
  41ca72:	lea    ecx,[edx-0x2f]
  41ca75:	mov    WORD PTR [ebp-0x2a],cx
  41ca79:	and    DWORD PTR ds:0x4236c4,0x0
  41ca83:	jmp    0x41ca95
  41ca88:	mov    ecx,DWORD PTR ds:0x4236c4
  41ca8e:	inc    ecx
  41ca8f:	mov    DWORD PTR ds:0x4236c4,ecx
  41ca95:	cmp    DWORD PTR ds:0x4236c4,0x16
  41ca9c:	jae    0x41cb1d
  41caa2:	cmp    DWORD PTR ds:0x4236c4,0x1c
  41caa9:	jne    0x41cab5
  41caaf:	call   DWORD PTR ds:0x41f3fc
  41cab5:	jmp    0x41ca88
  41caba:	and    DWORD PTR ds:0x4214ec,0x0
  41cac4:	mov    ecx,DWORD PTR ds:0x4214ec
  41caca:	inc    ecx
  41cacb:	mov    DWORD PTR ds:0x4214ec,ecx
  41cad1:	cmp    DWORD PTR ds:0x4214ec,0x7
  41cad8:	jne    0x41caec
  41cade:	push   0x42169b
  41cae3:	push   DWORD PTR [ebp-0x20]
  41cae6:	call   DWORD PTR ds:0x41f168
  41caec:	cmp    DWORD PTR ds:0x4214ec,0x6
  41caf3:	jne    0x41cb06
  41caf9:	mov    ecx,DWORD PTR ds:0x4214ec
  41caff:	inc    ecx
  41cb00:	mov    DWORD PTR ds:0x4214ec,ecx
  41cb06:	cmp    DWORD PTR ds:0x4214ec,0x15
  41cb0d:	jb     0x41cac4
  41cb13:	and    DWORD PTR ds:0x4214e0,0x4e6c
  41cb1d:	mov    ecx,0x1314
  41cb22:	mov    WORD PTR [ebp-0x28],cx
  41cb26:	xor    ecx,ecx
  41cb28:	add    ecx,DWORD PTR ds:0x4236a8
  41cb2e:	add    ecx,DWORD PTR ds:0x4214ec
  41cb34:	mov    DWORD PTR ds:0x4236a8,ecx
  41cb3a:	mov    ecx,0x1215
  41cb3f:	add    DWORD PTR ds:0x4214e4,0x42372c
  41cb49:	mov    WORD PTR [ebp-0x26],cx
  41cb4d:	mov    ecx,0xfff7
  41cb52:	adc    DWORD PTR ds:0x4214f8,0x4fcc
  41cb5c:	mov    WORD PTR [ebp-0x24],cx
  41cb60:	mov    ecx,DWORD PTR [ebp-0x10]
  41cb63:	xor    ecx,ebx
  41cb65:	adc    DWORD PTR ds:0x423684,0x4236b8
  41cb6f:	add    ecx,edi
  41cb71:	push   ecx
  41cb72:	or     DWORD PTR ds:0x4236ac,0x84c
  41cb7c:	lea    ecx,[ebp-0x14]
  41cb7f:	push   ecx
  41cb80:	jmp    0x41cd1c
  41cb85:	push   es
  41cb86:	std    
  41cb87:	sbb    cl,0xfb
  41cb8a:	std    
  41cb8b:	pop    edi
  41cb8c:	call   DWORD PTR [esi-0x3da236fc]
  41cb92:	jmp    0x1:0x8378a5f9
  41cb99:	jg     0x41cb9c
  41cb9b:	add    BYTE PTR [eax],al
  41cb9d:	fisubr DWORD PTR [edx-0x15]
  41cba0:	sub    ecx,esp
  41cba2:	dec    esi
  41cba3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41cba4:	test   DWORD PTR [edi-0x1a],esi
  41cba7:	(bad)  
  41cba8:	lods   eax,DWORD PTR ds:[esi]
  41cba9:	fsub   DWORD PTR [ebp-0x5bfc5634]
  41cbaf:	push   esi
  41cbb0:	xor    eax,DWORD PTR [ebp-0x54]
  41cbb3:	mov    ss:0x50e3ce74,eax
  41cbb9:	add    eax,0xd9cec18e
  41cbbe:	or     ch,BYTE PTR [edi]
  41cbc0:	and    al,0x1c
  41cbc2:	rcl    ebp,0x72
  41cbc5:	stos   BYTE PTR es:[edi],al
  41cbc6:	or     al,0x71
  41cbc8:	repnz pop ss
  41cbca:	fild   WORD PTR [edi]
  41cbcc:	je     0x41cb7f
  41cbce:	cmp    DWORD PTR [eax+ecx*8+0x473fc206],esi
  41cbd5:	cmp    ecx,esp
  41cbd7:	mov    ebx,ebp
  41cbd9:	test   al,0x85
  41cbdb:	mov    ds:0x556525d6,al
  41cbe0:	xor    BYTE PTR [eax-0x5e776ff9],bh
  41cbe6:	(bad)  
  41cbe7:	call   0x9e17f7d0
  41cbec:	mov    ds:0xf80e9eba,al
  41cbf1:	mov    cl,bh
  41cbf3:	stos   BYTE PTR es:[edi],al
  41cbf4:	push   cs
  41cbf5:	ins    BYTE PTR es:[edi],dx
  41cbf6:	jecxz  0x41cc63
  41cbf8:	repz cmp bh,cl
  41cbfb:	in     al,0x35
  41cbfd:	psubsw mm1,QWORD PTR [esi+0x6f]
  41cc01:	inc    edi
  41cc02:	out    dx,eax
  41cc03:	loope  0x41cc2c
  41cc05:	cmp    DWORD PTR [eax+0x3b],esp
  41cc08:	pop    edi
  41cc09:	stos   BYTE PTR es:[edi],al
  41cc0a:	dec    edx
  41cc0b:	cli    
  41cc0c:	cmp    ch,bl
  41cc0e:	iret   
  41cc0f:	js     0x41cba4
  41cc11:	(bad)  
  41cc12:	jno    0x41cc64
  41cc14:	adc    BYTE PTR [eax],dl
  41cc16:	test   ecx,edi
  41cc18:	pop    esi
  41cc19:	imul   eax,DWORD PTR [ecx+eax*1],0x58
  41cc1d:	sub    dh,BYTE PTR [edx+esi*8]
  41cc20:	stos   BYTE PTR es:[edi],al
  41cc21:	jae    0x41cc01
  41cc23:	repnz fstp TBYTE PTR [ecx]
  41cc26:	sub    eax,0x1ccb090a
  41cc2b:	adc    eax,ebx
  41cc2d:	fldcw  WORD PTR es:[edi]
  41cc30:	push   ebx
  41cc31:	push   ecx
  41cc32:	aam    0xef
  41cc34:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41cc35:	or     al,0x94
  41cc37:	or     BYTE PTR [esi-0x29c7c3a8],ah
  41cc3d:	retf   0xdcb7
  41cc40:	aaa    
  41cc41:	push   ss
  41cc42:	sahf   
  41cc43:	sub    dl,bl
  41cc45:	cmc    
  41cc46:	add    al,0xfe
  41cc48:	(bad)  
  41cc4b:	dec    edi
  41cc4c:	mov    al,ds:0x250c5bcb
  41cc51:	test   DWORD PTR [ebp+0x11f8f923],eax
  41cc57:	leave  
  41cc58:	lea    eax,es:[ecx+0x1ee5ff0f]
  41cc5f:	xor    al,cl
  41cc61:	arpl   WORD PTR [ebp-0x488ace83],si
  41cc67:	jns    0x41ccd6
  41cc69:	add    BYTE PTR [eax],ah
  41cc6b:	pop    esp
  41cc6c:	or     DWORD PTR [edi-0x3b],ecx
  41cc6f:	out    dx,eax
  41cc70:	push   0x2c
  41cc72:	inc    edx
  41cc73:	cdq    
  41cc74:	inc    edx
  41cc75:	push   cs
  41cc76:	pop    edi
  41cc77:	jo     0x41cc55
  41cc79:	pop    edi
  41cc7a:	(bad)  
  41cc7b:	test   DWORD PTR [eax-0x6d],0x94e0050f
  41cc82:	aas    
  41cc83:	call   0xa7b89a4
  41cc88:	push   es
  41cc89:	idiv   cl
  41cc8b:	jg     0x41cce1
  41cc8d:	fbstp  TBYTE PTR [esp+ebx*1+0x6b559497]
  41cc94:	les    ebx,FWORD PTR [edx-0x1f1d5c7d]
  41cc9a:	mov    cs,WORD PTR [esi-0x20]
  41cc9d:	sub    dl,cl
  41cc9f:	mov    cl,BYTE PTR [ecx-0x77]
  41cca2:	mov    ebx,0x815102bc
  41cca7:	daa    
  41cca8:	jmp    0x7a678290
  41ccad:	test   DWORD PTR [eax+0x7939186e],ebx
  41ccb3:	nop
  41ccb4:	dec    esp
  41ccb5:	add    al,0x20
  41ccb7:	iret   
  41ccb8:	mov    al,0x7d
  41ccba:	dec    edi
  41ccbb:	dec    ecx
  41ccbc:	adc    DWORD PTR [eax-0x1],ecx
  41ccbf:	mov    ?,WORD PTR [ebx]
  41ccc1:	ins    DWORD PTR es:[edi],dx
  41ccc2:	movs   BYTE PTR es:[edi],BYTE PTR cs:[esi]
  41ccc4:	pop    es
  41ccc5:	lahf   
  41ccc6:	jno    0x41ccef
  41ccc8:	and    DWORD PTR [edx],ebx
  41ccca:	out    0x5d,al
  41cccc:	and    DWORD PTR [ebx-0x4b],edx
  41cccf:	pop    es
  41ccd0:	(bad)  [ecx-0x6]
  41ccd3:	mov    esp,0x38c278ad
  41ccd8:	cld    
  41ccd9:	sbb    BYTE PTR [edi-0x77],dh
  41ccdc:	stc    
  41ccdd:	stos   DWORD PTR es:[edi],eax
  41ccde:	sub    dl,BYTE PTR [esp+ecx*2]
  41cce1:	data16 hlt 
  41cce3:	lahf   
  41cce4:	js     0x41cc6a
  41cce6:	push   edx
  41cce7:	adc    al,0x38
  41cce9:	sbb    ebx,0x8a8d0c1c
  41ccef:	sub    BYTE PTR [ecx],0x1f
  41ccf2:	(bad)  
  41ccf3:	cdq    
  41ccf4:	(bad)  
  41ccf6:	test   BYTE PTR [esi+0x19103888],ch
  41ccfc:	cmp    cl,ah
  41ccfe:	aam    0xf4
  41cd00:	int3   
  41cd01:	scas   al,BYTE PTR es:[edi]
  41cd02:	daa    
  41cd03:	mov    edx,0xa52a634a
  41cd08:	inc    ebp
  41cd09:	sbb    esi,ebx
  41cd0b:	mov    edi,0xa7e617a3
  41cd10:	sbb    eax,ebp
  41cd12:	int3   
  41cd13:	mov    esp,0xe8e61b45
  41cd18:	std    
  41cd19:	ret    0xb04e
  41cd1c:	push   0x4212ec
  41cd21:	push   DWORD PTR ds:0x4212e8
  41cd27:	jmp    0x41cec3
  41cd2c:	xor    cl,bh
  41cd2e:	dec    edi
  41cd2f:	aas    
  41cd30:	(bad)  
  41cd31:	mov    edi,0x8aacf72
  41cd36:	jle    0x41cd90
  41cd38:	int3   
  41cd39:	dec    esp
  41cd3a:	jle    0x41cd6a
  41cd3c:	test   DWORD PTR [ecx+eax*1+0x17f00],0x4d428200
  41cd47:	cmp    BYTE PTR [eax],ch
  41cd49:	scas   al,BYTE PTR es:[edi]
  41cd4a:	mov    ah,0x75
  41cd4c:	mov    ds:0xb343f6d,eax
  41cd51:	mov    WORD PTR [eax-0x12d07969],cs
  41cd57:	add    eax,DWORD PTR [ecx-0x76af4050]
  41cd5d:	out    dx,eax
  41cd5e:	addr16 int 0x70
  41cd61:	clc    
  41cd62:	rcr    DWORD PTR [esi+0x44f63d27],1
  41cd68:	jmp    0xde7e:0xf7c7fad2
  41cd6f:	cli    
  41cd70:	and    DWORD PTR [ebp+0x5bd0c66],0xfe022a03
  41cd7a:	sti    
  41cd7b:	jmp    0xd7521e70
  41cd80:	and    DWORD PTR [eax+0x11],eax
  41cd83:	cmc    
  41cd84:	pop    ss
  41cd85:	mov    BYTE PTR [ecx-0x40],dl
  41cd88:	xchg   BYTE PTR [eax],dl
  41cd8a:	push   esi
  41cd8b:	mov    ds:0x4c8b4e6d,al
  41cd90:	cld    
  41cd91:	and    al,0x7a
  41cd93:	in     al,0xa0
  41cd95:	xor    al,0x4f
  41cd97:	mov    ds:0x4ca571bd,al
  41cd9c:	shl    ecx,cl
  41cd9e:	lds    edx,FWORD PTR [ebx+0xc]
  41cda1:	mov    ds:0xe69c3ec1,eax
  41cda6:	xchg   esi,eax
  41cda7:	outs   dx,DWORD PTR ds:[esi]
  41cda8:	push   es
  41cda9:	iret   
  41cdaa:	xor    cl,BYTE PTR [esi-0x5d7adbaa]
  41cdb0:	sub    al,0x92
  41cdb2:	inc    edx
  41cdb3:	sub    eax,0x57084c3f
  41cdb8:	mov    bl,0x97
  41cdba:	xchg   edi,eax
  41cdbb:	retf   
  41cdbc:	pop    ebx
  41cdbd:	ror    BYTE PTR [ebp+0x76],1
  41cdc0:	push   edi
  41cdc1:	mov    WORD PTR ds:0xb12b8812,?
  41cdc7:	clc    
  41cdc8:	mov    eax,0xca5d7fb3
  41cdcd:	int3   
  41cdce:	mov    BYTE PTR [ebp+0x50183a31],ah
  41cdd4:	adc    DWORD PTR [edx],eax
  41cdd6:	jp     0x41cdc1
  41cdd8:	mov    ?,WORD PTR [ebp-0x1]
  41cddb:	mov    fs,WORD PTR [ebp-0xd9cccc8]
  41cde1:	jae    0x41cdb1
  41cde3:	pop    es
  41cde4:	mov    WORD PTR [ebx],cs
  41cde6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41cde7:	xor    eax,0x50dce874
  41cdec:	pop    es
  41cded:	pop    es
  41cdee:	dec    ebx
  41cdef:	clc    
  41cdf0:	pusha  
  41cdf1:	inc    ebx
  41cdf2:	rcl    BYTE PTR [esi+0x59],cl
  41cdf5:	fdivrp st(5),st
  41cdf7:	pop    edx
  41cdf8:	sub    DWORD PTR ds:0x766378dd,ebx
  41cdfe:	cmp    BYTE PTR [ecx+0x2c80d825],bh
  41ce04:	jp     0x41cddf
  41ce06:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ce07:	xchg   edx,eax
  41ce08:	es dec ebp
  41ce0a:	repz xchg esi,eax
  41ce0c:	cmc    
  41ce0d:	mov    cs,edx
  41ce0f:	mov    edx,ecx
  41ce11:	in     eax,0xa7
  41ce13:	mov    cl,0xad
  41ce15:	xlat   BYTE PTR ds:[ebx]
  41ce16:	jle    0x41cded
  41ce18:	std    
  41ce19:	popa   
  41ce1a:	test   al,0xc5
  41ce1c:	push   edx
  41ce1d:	or     al,0x73
  41ce1f:	test   eax,0x55530e50
  41ce24:	add    BYTE PTR ds:0xe36d617d,al
  41ce2a:	add    eax,0x2a091f90
  41ce2f:	push   edx
  41ce30:	nop
  41ce31:	jg     0x41cdb8
  41ce33:	sbb    eax,0xa6ba89ad
  41ce38:	xor    DWORD PTR [ecx+0x2e6a3179],ecx
  41ce3e:	repnz push ds
  41ce40:	pop    es
  41ce41:	rcr    DWORD PTR [ebp-0x1b],cl
  41ce44:	sub    eax,0x50d4e1fd
  41ce49:	adc    ebx,ebp
  41ce4b:	adc    al,0x93
  41ce4d:	call   0x1d0f:0x98e7f6d5
  41ce54:	int    0xad
  41ce56:	sahf   
  41ce57:	lods   al,BYTE PTR ds:[esi]
  41ce58:	int    0xea
  41ce5a:	sbb    DWORD PTR [esp+ecx*2-0x3e],ecx
  41ce5e:	mov    dh,0x70
  41ce60:	push   esi
  41ce61:	bound  edi,QWORD PTR [ebx+eiz*4-0x2]
  41ce65:	or     ebx,DWORD PTR [edx]
  41ce67:	xlat   BYTE PTR ds:[ebx]
  41ce68:	out    0x36,al
  41ce6a:	sbb    edx,DWORD PTR [edi]
  41ce6c:	pop    ebp
  41ce6d:	sub    al,0x9d
  41ce6f:	in     al,0xfa
  41ce71:	sti    
  41ce72:	in     al,0x88
  41ce74:	pushf  
  41ce75:	cmp    DWORD PTR [edi],ebp
  41ce77:	jmp    0x41ce18
  41ce79:	jbe    0x41ce03
  41ce7b:	mov    esp,DWORD PTR [ebx+0x2]
  41ce7e:	xchg   BYTE PTR [esi+0x7a],bl
  41ce81:	push   ebp
  41ce82:	call   0x45c5b91b
  41ce87:	shl    DWORD PTR [esi-0x35],cl
  41ce8a:	inc    ecx
  41ce8b:	sub    eax,0xd95e6403
  41ce90:	cdq    
  41ce91:	enter  0xacae,0x1b
  41ce95:	sbb    dl,BYTE PTR [eax+edi*8]
  41ce98:	adc    ebx,DWORD PTR [ebx*8-0x2cc18611]
  41ce9f:	add    ebp,0xf2c94961
  41cea5:	ret    
  41cea6:	dec    ebp
  41cea7:	xchg   bl,dh
  41cea9:	xchg   edi,eax
  41ceaa:	sbb    al,0xcb
  41ceac:	lods   eax,DWORD PTR ds:[esi]
  41cead:	cdq    
  41ceae:	out    dx,al
  41ceaf:	fldenv ds:0x24165bba
  41ceb5:	inc    ebp
  41ceb6:	mov    bh,0x6b
  41ceb8:	adc    al,0xfe
  41ceba:	shr    DWORD PTR [esi],1
  41cebc:	fmul   DWORD PTR [edi-0x1e037ff5]
  41cec2:	push   esi
  41cec3:	mov    ecx,DWORD PTR [ebp-0x8]
  41cec6:	xor    ecx,ebx
  41cec8:	push   0x4
  41ceca:	add    ecx,edi
  41cecc:	push   ecx
  41cecd:	lea    ecx,[ebp-0x44]
  41ced0:	push   ecx
  41ced1:	push   eax
  41ced2:	mov    WORD PTR [ebp-0x30],dx
  41ced6:	mov    DWORD PTR [ebp-0x2e],0xfff8fe09
  41cedd:	mov    DWORD PTR [ebp-0x14],0x28
  41cee4:	call   0x405628
  41cee9:	jmp    0x41d085
  41ceee:	sti    
  41ceef:	push   ecx
  41cef0:	add    BYTE PTR [ebx],0xaa
  41cef3:	sar    ebx,cl
  41cef5:	stc    
  41cef6:	ins    DWORD PTR es:[edi],dx
  41cef7:	push   eax
  41cef8:	bound  ebp,QWORD PTR [ecx-0x281c677a]
  41cefe:	jbe    0x41ce86
  41cf00:	add    DWORD PTR [eax],eax
  41cf02:	jg     0x41cf05
  41cf04:	add    BYTE PTR [eax],al
  41cf06:	ja     0x41cee0
  41cf08:	pop    ecx
  41cf09:	and    eax,0x8c5f2477
  41cf0e:	mov    cl,0xd4
  41cf10:	fucom  st(0)
  41cf12:	mov    dl,0x61
  41cf14:	sahf   
  41cf15:	mov    al,ds:0x751a936d
  41cf1a:	sub    DWORD PTR [edx],eax
  41cf1c:	popa   
  41cf1d:	(bad)  
  41cf1e:	xor    esi,esi
  41cf20:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41cf21:	loop   0x41ceff
  41cf23:	ds (bad) 
  41cf26:	or     DWORD PTR [eax-0x2f4dc075],esp
  41cf2c:	jmp    0x41cee8
  41cf2e:	in     eax,dx
  41cf2f:	xchg   edx,eax
  41cf30:	push   esp
  41cf31:	fisttp WORD PTR [eax-0x75]
  41cf34:	fs jecxz 0x41cf30
  41cf37:	arpl   di,si
  41cf39:	rcr    ebp,cl
  41cf3b:	sub    dl,BYTE PTR [eax-0x7087a895]
  41cf41:	retf   
  41cf42:	pop    ecx
  41cf43:	outs   dx,DWORD PTR ds:[esi]
  41cf44:	xchg   edi,eax
  41cf45:	loopne 0x41cf0d
  41cf47:	out    0x47,al
  41cf49:	dec    esp
  41cf4a:	data16 into 
  41cf4c:	out    0x99,eax
  41cf4e:	and    ah,bh
  41cf50:	adc    BYTE PTR [edx+0x6638bdca],ah
  41cf56:	add    DWORD PTR [edi+0x56b02ecf],0xb95dd45
  41cf60:	adc    al,0x78
  41cf62:	mov    al,0x6d
  41cf64:	popa   
  41cf65:	clc    
  41cf66:	outs   dx,BYTE PTR ds:[esi]
  41cf67:	dec    esp
  41cf68:	push   esp
  41cf69:	jecxz  0x41cf7d
  41cf6b:	mov    bh,bl
  41cf6d:	dec    esp
  41cf6e:	gs cmc 
  41cf70:	cwde   
  41cf71:	adc    bl,BYTE PTR [edi+0x739c70ef]
  41cf77:	mov    ch,0x33
  41cf79:	aad    0x9
  41cf7b:	inc    edi
  41cf7c:	xlat   BYTE PTR ds:[ebx]
  41cf7d:	jb     0x41cf7d
  41cf7f:	mov    es,ebp
  41cf81:	xor    al,0xd5
  41cf83:	ins    BYTE PTR es:[edi],dx
  41cf84:	and    DWORD PTR [edi-0x3c6d5244],edi
  41cf8a:	ffree  st(2)
  41cf8c:	std    
  41cf8d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41cf8e:	dec    ebp
  41cf8f:	dec    edi
  41cf90:	ss popf 
  41cf92:	sbb    al,0x69
  41cf94:	or     BYTE PTR [edx+0x3146b941],bl
  41cf9a:	out    0x81,eax
  41cf9c:	mov    ebp,0x3509b0e
  41cfa1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41cfa2:	je     0x41cf38
  41cfa4:	adc    eax,edi
  41cfa6:	iret   
  41cfa7:	sti    
  41cfa8:	pop    es
  41cfa9:	retf   0x4238
  41cfac:	dec    esi
  41cfad:	dec    ebp
  41cfae:	mov    ah,0xb3
  41cfb0:	jns    0x41cf9d
  41cfb2:	sbb    dh,dh
  41cfb4:	add    BYTE PTR [edi-0x4b],bh
  41cfb7:	or     ah,ch
  41cfb9:	fbstp  TBYTE PTR [esi+eax*2-0x2e37bc]
  41cfc0:	loop   0x41cf6f
  41cfc2:	ins    BYTE PTR es:[edi],dx
  41cfc3:	(bad)  
  41cfc4:	jecxz  0x41cfd8
  41cfc6:	dec    eax
  41cfc7:	(bad)
  41cfca:	mov    WORD PTR [edi-0x19],es
  41cfcd:	icebp  
  41cfce:	in     eax,0xd1
  41cfd0:	sbb    eax,0xa4a65c61
  41cfd5:	jp     0x41cf81
  41cfd7:	jae    0x41cfc7
  41cfd9:	xor    eax,0x670d696a
  41cfde:	aad    0xbb
  41cfe0:	cwde   
  41cfe1:	dec    eax
  41cfe2:	add    al,0xac
  41cfe4:	push   ebp
  41cfe5:	xor    ch,BYTE PTR [edx+0x5a]
  41cfe8:	jno    0x41cfc7
  41cfea:	mov    bh,0xe2
  41cfec:	hlt    
  41cfed:	shl    BYTE PTR [esi-0x7f378fa7],1
  41cff3:	(bad)  
  41cff4:	or     dh,BYTE PTR [ecx+eax*1+0x3e]
  41cff8:	push   esp
  41cff9:	cli    
  41cffa:	lea    ebx,[ebx-0x20122b97]
  41d000:	hlt    
  41d001:	mov    esp,0xbc124f5c
  41d006:	jnp    0x41d07f
  41d008:	and    DWORD PTR [esp+edi*4],0xffffffe8
  41d00c:	(bad)
  41d010:	pop    esp
  41d011:	pop    eax
  41d012:	fisub  WORD PTR [eax]
  41d014:	(bad)  
  41d015:	xchg   ebp,eax
  41d016:	and    bl,BYTE PTR [ecx+edx*8]
  41d019:	int3   
  41d01a:	push   0x4b
  41d01c:	pop    edi
  41d01d:	push   ecx
  41d01e:	mov    ds:0xa070f7a1,eax
  41d023:	cmp    BYTE PTR [edi-0x26a88d1],cl
  41d029:	shl    BYTE PTR [ebp+0x7a],0xf2
  41d02d:	push   eax
  41d02e:	push   esp
  41d02f:	xor    al,0xf4
  41d031:	push   es
  41d032:	xchg   BYTE PTR [ebp+0x21],bh
  41d035:	xor    BYTE PTR [esi-0x21],0xc1
  41d039:	pop    esp
  41d03a:	leave  
  41d03b:	mov    al,0xd4
  41d03d:	xor    ebx,eax
  41d03f:	fld    TBYTE PTR [edx-0x1e]
  41d042:	sbb    cl,BYTE PTR [esi]
  41d044:	fcmovu st,st(2)
  41d046:	ins    BYTE PTR es:[edi],dx
  41d047:	mov    WORD PTR [eax-0x66b49dfa],?
  41d04d:	arpl   WORD PTR fs:[edi],cx
  41d050:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d051:	mov    dh,0x2f
  41d053:	xor    al,0x6
  41d055:	mov    es,WORD PTR [esi]
  41d057:	dec    eax
  41d058:	test   cl,dl
  41d05a:	mov    bh,0xa7
  41d05c:	int3   
  41d05d:	jecxz  0x41d0b8
  41d05f:	loop   0x41d0d6
  41d061:	jae    0x41d0da
  41d063:	outs   dx,BYTE PTR ds:[esi]
  41d064:	outs   dx,DWORD PTR ds:[esi]
  41d065:	xchg   esi,eax
  41d066:	xlat   BYTE PTR ds:[ebx]
  41d067:	inc    edx
  41d068:	pushf  
  41d069:	xor    ch,0x11
  41d06c:	inc    edi
  41d06d:	and    DWORD PTR [edx+0x30],0x38a44945
  41d074:	enter  0x3ea9,0xcb
  41d078:	xchg   edx,eax
  41d079:	test   al,0xe0
  41d07b:	je     0x41d032
  41d07d:	test   eax,0x4d125a09
  41d082:	nop
  41d083:	cmp    BYTE PTR [edi-0x60],bl
  41d086:	out    dx,al
  41d087:	adc    al,BYTE PTR [edx+0x0]
  41d08a:	add    esp,0x20
  41d08d:	cmp    al,0x5c
  41d08f:	je     0x41d238
  41d095:	xor    eax,eax
  41d097:	jmp    0x41e275
  41d09c:	jmp    0x41d238
  41d0a1:	ja     0x41d068
  41d0a3:	adc    DWORD PTR [ebx-0x3a08084d],esi
  41d0a9:	jecxz  0x41d02f
  41d0ab:	jmp    0x1c051583
  41d0b0:	pop    edx
  41d0b1:	cmc    
  41d0b2:	xchg   DWORD PTR [ecx],eax
  41d0b4:	add    BYTE PTR [edi+0x1],bh
  41d0b7:	add    BYTE PTR [eax],al
  41d0b9:	pop    ds
  41d0ba:	cmp    eax,0x2ba07b61
  41d0bf:	jge    0x41d0ff
  41d0c1:	xchg   esp,eax
  41d0c2:	jg     0x41d107
  41d0c4:	inc    edx
  41d0c5:	repz shr bh,cl
  41d0c8:	push   ebx
  41d0c9:	xchg   edx,eax
  41d0ca:	adc    eax,0xb2ea3b6b
  41d0cf:	mov    al,ds:0x620288d0
  41d0d4:	mov    bh,0x29
  41d0d6:	sahf   
  41d0d7:	or     al,BYTE PTR [ebp+0x30d4ec91]
  41d0dd:	lds    ebp,FWORD PTR [edi+0x5d603c3c]
  41d0e3:	push   0xbd3d877d
  41d0e8:	jns    0x41d112
  41d0ea:	out    0x4f,al
  41d0ec:	test   eax,0xa9a0481e
  41d0f1:	mov    ds:0x6bff139b,eax
  41d0f6:	or     eax,0x6c110eac
  41d0fb:	add    BYTE PTR [edi+0x17],ch
  41d0fe:	ins    BYTE PTR es:[edi],dx
  41d0ff:	sbb    eax,0xae4327b9
  41d104:	inc    ecx
  41d105:	sbb    BYTE PTR [edx+0x350cdc16],ch
  41d10b:	hlt    
  41d10c:	dec    eax
  41d10d:	nop
  41d10e:	stc    
  41d10f:	leave  
  41d110:	jecxz  0x41d107
  41d112:	adc    BYTE PTR [eax+0x2d],ch
  41d115:	jo     0x41d0e6
  41d117:	loop   0x41d0d0
  41d119:	fs jl  0x41d139
  41d11c:	sub    al,0x6
  41d11e:	cmc    
  41d11f:	je     0x41d0ea
  41d121:	aaa    
  41d122:	pop    ebx
  41d123:	cwde   
  41d124:	jno    0x41d115
  41d126:	xlat   BYTE PTR ds:[ebx]
  41d127:	jo     0x41d0e7
  41d129:	xor    eax,esi
  41d12b:	pop    ecx
  41d12c:	inc    edi
  41d12d:	cmp    BYTE PTR [edx+0x55],bh
  41d130:	push   es
  41d131:	mov    al,ds:0xa543fd3a
  41d136:	(bad)  
  41d137:	adc    al,al
  41d139:	push   esp
  41d13a:	xor    DWORD PTR [ecx],ebp
  41d13c:	xchg   edi,eax
  41d13d:	xchg   esi,eax
  41d13e:	popa   
  41d13f:	aad    0x75
  41d141:	clc    
  41d142:	rcr    BYTE PTR [eax-0x13],cl
  41d145:	mov    cl,bl
  41d147:	lock es adc al,0x65
  41d14b:	retf   0x89e3
  41d14e:	mov    ebx,0xff25a389
  41d153:	add    DWORD PTR [eax-0x2b],ebp
  41d156:	in     eax,dx
  41d157:	add    ch,ch
  41d159:	add    eax,0x98043c71
  41d15e:	adc    esi,ebp
  41d160:	sub    DWORD PTR [esi+0xcd71489],eax
  41d166:	pop    esp
  41d167:	fstp   st(3)
  41d169:	dec    ecx
  41d16a:	jns    0x41d1df
  41d16c:	pop    ecx
  41d16d:	cmp    DWORD PTR [eax],0xffffffc2
  41d170:	pop    ebp
  41d171:	loopne 0x41d1dc
  41d173:	into   
  41d174:	jo     0x41d0fa
  41d176:	mov    ecx,edx
  41d178:	(bad)  
  41d179:	(bad)  [ebp+0x1cce65d5]
  41d17f:	lods   al,BYTE PTR ds:[esi]
  41d180:	sub    ecx,DWORD PTR [edi+eiz*1]
  41d183:	mov    gs,WORD PTR [esi]
  41d185:	or     al,BYTE PTR [eax+0x6]
  41d188:	xchg   esp,eax
  41d189:	push   ds
  41d18a:	push   cs
  41d18b:	xor    DWORD PTR [esi],eax
  41d18d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d18e:	or     edx,DWORD PTR [ebx]
  41d190:	popa   
  41d191:	in     eax,0x44
  41d193:	sbb    BYTE PTR [ecx+0x65],al
  41d196:	jnp    0x41d20f
  41d198:	mov    WORD PTR [esi+0x51dad489],es
  41d19e:	lods   al,BYTE PTR ds:[esi]
  41d19f:	vpaddw ymm5,ymm5,YMMWORD PTR [ebx+0x8]
  41d1a4:	mov    ecx,DWORD PTR ds:0x6f861324
  41d1aa:	iret   
  41d1ab:	mov    ebp,0x4ca0d516
  41d1b0:	jp     0x41d16e
  41d1b2:	iret   
  41d1b3:	mov    edi,0xcb533183
  41d1b8:	stc    
  41d1b9:	mov    WORD PTR [edi],cs
  41d1bb:	inc    edx
  41d1bc:	add    eax,0x208fa9a1
  41d1c1:	pop    ecx
  41d1c2:	xor    ecx,DWORD PTR [edx-0xa]
  41d1c5:	pushf  
  41d1c6:	pop    ds
  41d1c7:	retf   0xc05c
  41d1ca:	mov    BYTE PTR [edx-0x6ce987ee],0x6e
  41d1d1:	and    BYTE PTR [ecx],cl
  41d1d3:	or     al,0xcd
  41d1d5:	sbb    DWORD PTR [ecx],ecx
  41d1d7:	xchg   ebx,eax
  41d1d8:	mov    ds:0x2d0d74e3,al
  41d1dd:	sahf   
  41d1de:	je     0x41d1fe
  41d1e0:	or     bl,BYTE PTR [ebp+0x52d1e4ac]
  41d1e6:	dec    esi
  41d1e7:	xchg   DWORD PTR [ebp+0xc617dd9],esp
  41d1ed:	sub    BYTE PTR [ecx-0x111b3e55],dl
  41d1f3:	xchg   ebp,eax
  41d1f4:	mov    al,0x7
  41d1f6:	mov    al,ds:0x9db44fce
  41d1fb:	in     eax,0x4a
  41d1fd:	scas   eax,DWORD PTR es:[edi]
  41d1fe:	sbb    dl,BYTE PTR [esi]
  41d200:	lock mov esp,0xf4fddea5
  41d206:	mov    bl,0x9b
  41d208:	outs   dx,DWORD PTR ds:[esi]
  41d209:	lods   al,BYTE PTR ds:[esi]
  41d20a:	add    dl,cl
  41d20c:	jb     0x41d1dc
  41d20e:	mov    ch,0xf6
  41d210:	out    dx,al
  41d211:	rcr    DWORD PTR [eax],1
  41d213:	mov    bh,0x9c
  41d215:	xchg   esp,eax
  41d216:	test   DWORD PTR [ebp+0x23857612],ecx
  41d21c:	xor    edx,ebx
  41d21e:	lahf   
  41d21f:	popf   
  41d220:	mov    esp,0xca012cb3
  41d225:	jo     0x41d29b
  41d227:	ins    DWORD PTR es:[edi],dx
  41d228:	pop    eax
  41d229:	ficom  WORD PTR [eax]
  41d22b:	enter  0x1d4a,0xb9
  41d22f:	or     DWORD PTR [ebp-0x5e6d37f2],0xffffffac
  41d236:	or     bh,ch
  41d238:	mov    eax,ds:0x41f404
  41d23d:	mov    DWORD PTR [ebp-0x1c],eax
  41d240:	mov    eax,ds:0x41f4c8
  41d245:	jmp    0x41d3e1
  41d24a:	inc    ebp
  41d24b:	inc    esi
  41d24c:	pop    esi
  41d24d:	neg    BYTE PTR [edi-0x2]
  41d250:	in     eax,dx
  41d251:	test   DWORD PTR [ebx],0x71b61eed
  41d257:	gs data16 test al,0x74
  41d25b:	mov    DWORD PTR [ecx],eax
  41d25d:	add    BYTE PTR [edi+0x1],bh
  41d260:	add    BYTE PTR [eax],al
  41d262:	stc    
  41d263:	push   es
  41d264:	push   ebx
  41d265:	rcl    ecx,1
  41d267:	and    BYTE PTR [eax+0x36],bl
  41d26a:	loope  0x41d247
  41d26c:	jge    0x41d2c8
  41d26e:	adc    bl,BYTE PTR [ecx-0x38]
  41d271:	test   DWORD PTR [edi+0x298f4183],ecx
  41d277:	dec    esi
  41d278:	jecxz  0x41d203
  41d27a:	(bad)  
  41d27b:	and    BYTE PTR [esi+0x43c8b78e],al
  41d281:	mov    ds:0x16690cf6,al
  41d286:	pop    edx
  41d287:	xchg   BYTE PTR [edi-0x7566a3c6],dl
  41d28d:	push   cs
  41d28e:	adc    edx,edi
  41d290:	adc    dh,dh
  41d292:	dec    esp
  41d293:	xchg   DWORD PTR [ebp+0xc],esp
  41d296:	pop    ebx
  41d297:	ss in  al,dx
  41d299:	shl    DWORD PTR [esi-0x38],cl
  41d29c:	mov    dh,0x6a
  41d29e:	in     eax,dx
  41d29f:	cld    
  41d2a0:	lds    ebp,FWORD PTR [esi-0x40bfa87c]
  41d2a6:	daa    
  41d2a7:	push   es
  41d2a8:	xchg   esp,eax
  41d2a9:	sbb    DWORD PTR [ebx+0x3b],0x72
  41d2ad:	stos   DWORD PTR es:[edi],eax
  41d2ae:	sti    
  41d2af:	xor    BYTE PTR [edi+0x78],bh
  41d2b2:	xchg   edx,eax
  41d2b3:	jecxz  0x41d323
  41d2b5:	cmp    al,0x18
  41d2b7:	jns    0x41d337
  41d2b9:	mov    edx,DWORD PTR [ecx+0x40]
  41d2bc:	(bad)  
  41d2bd:	pop    esp
  41d2be:	fbld   TBYTE PTR [edi-0x42]
  41d2c1:	ins    BYTE PTR es:[edi],dx
  41d2c2:	fwait
  41d2c3:	(bad)  
  41d2c4:	mov    ebp,0x49cb81c6
  41d2c9:	xor    al,0xcf
  41d2cb:	fmulp  st(3),st
  41d2cd:	mov    eax,ds:0xc94f21bc
  41d2d2:	and    bh,BYTE PTR [eax-0x2832761a]
  41d2d8:	enter  0x2ae2,0x4d
  41d2dc:	mov    edi,0x2f797dce
  41d2e1:	xchg   ebp,eax
  41d2e2:	push   eax
  41d2e3:	inc    eax
  41d2e4:	jmp    0x41d267
  41d2e6:	push   0xffffffc3
  41d2e8:	loope  0x41d292
  41d2ea:	int3   
  41d2eb:	scas   al,BYTE PTR es:[edi]
  41d2ec:	push   0x4b
  41d2ee:	sti    
  41d2ef:	push   es
  41d2f0:	adc    al,0x14
  41d2f2:	pop    ecx
  41d2f3:	mov    DWORD PTR [ecx-0x15f5f4e5],0x34f27f8
  41d2fd:	lea    esp,[eax+0xb26a319]
  41d303:	mov    ah,BYTE PTR [edx]
  41d305:	std    
  41d306:	adc    ebx,DWORD PTR [edi*1+0x2ade4f26]
  41d30d:	add    al,0x2
  41d30f:	jl     0x41d334
  41d311:	rol    BYTE PTR [ebp+0x6c],0x18
  41d315:	dec    eax
  41d316:	popf   
  41d317:	fimul  DWORD PTR [ecx-0x44beccc1]
  41d31d:	push   cs
  41d31e:	pop    edi
  41d31f:	xor    bl,BYTE PTR [ebx-0x57c5b4a0]
  41d325:	mov    es,edx
  41d327:	std    
  41d328:	jbe    0x41d337
  41d32a:	fwait
  41d32b:	out    dx,al
  41d32c:	dec    ebp
  41d32d:	imul   ebp,DWORD PTR [edi+0x2140cc7],0xffffffa0
  41d334:	mov    edi,0x1da8854
  41d339:	les    ebp,FWORD PTR [ecx-0x5b]
  41d33c:	mov    dl,BYTE PTR [edi+0x3d2d2e9b]
  41d342:	push   es
  41d343:	and    DWORD PTR [ebx],esp
  41d345:	nop
  41d346:	xchg   ebp,eax
  41d347:	f2xm1  
  41d349:	in     al,dx
  41d34a:	mov    bh,0xd2
  41d34c:	push   0xb67db0c7
  41d351:	inc    ebp
  41d352:	das    
  41d353:	xor    dh,BYTE PTR [edx+ebx*4]
  41d356:	mov    eax,0xdce6f0ae
  41d35b:	cdq    
  41d35c:	push   0x2b1b1b74
  41d361:	or     cl,BYTE PTR [ecx]
  41d363:	dec    ebp
  41d364:	pop    ss
  41d365:	mov    al,ds:0xaa774d0d
  41d36a:	jne    0x41d374
  41d36c:	arpl   WORD PTR [ebx],ax
  41d36e:	mov    ?,WORD PTR [edx-0x70]
  41d371:	add    al,0x38
  41d373:	dec    esp
  41d374:	hlt    
  41d375:	push   ebp
  41d376:	test   al,0x1
  41d378:	inc    esi
  41d379:	(bad)  
  41d37a:	cli    
  41d37b:	mov    dh,0xa6
  41d37d:	inc    ecx
  41d37e:	shl    BYTE PTR [edi],1
  41d380:	and    al,0xaf
  41d382:	fdiv   st,st(4)
  41d384:	stc    
  41d385:	mov    esi,eax
  41d387:	push   0x72
  41d389:	loopne 0x41d39b
  41d38b:	loopne 0x41d3d7
  41d38d:	arpl   WORD PTR [ecx-0x333decce],bp
  41d393:	test   DWORD PTR [edx*4-0x24262cde],esi
  41d39a:	out    dx,eax
  41d39b:	pushf  
  41d39c:	in     eax,0x7a
  41d39e:	daa    
  41d39f:	vaddsd xmm5,xmm5,xmm3
  41d3a3:	mov    ds:0x98559b7,al
  41d3a8:	nop
  41d3a9:	mov    WORD PTR [edx-0x62],fs
  41d3ac:	sbb    al,0x80
  41d3ae:	sub    DWORD PTR [eax-0x7d],esp
  41d3b1:	jne    0x41d370
  41d3b3:	das    
  41d3b4:	add    DWORD PTR [ebx+eax*2+0x77],0xf869c386
  41d3bc:	pop    ss
  41d3bd:	pop    eax
  41d3be:	(bad)
  41d3c1:	xchg   esp,eax
  41d3c2:	adc    cl,cl
  41d3c4:	jge    0x41d442
  41d3c6:	sbb    DWORD PTR [ecx-0x7d874f92],ebx
  41d3cc:	add    ebp,DWORD PTR [eax]
  41d3ce:	push   edi
  41d3cf:	and    BYTE PTR [edi+0x42],ah
  41d3d2:	and    bl,bh
  41d3d4:	jge    0x41d40e
  41d3d6:	imul   edx,DWORD PTR [ebp-0x1b0baf27],0xffffffcf
  41d3dd:	or     DWORD PTR [ebx],esp
  41d3df:	xchg   edi,eax
  41d3e0:	int3   
  41d3e1:	mov    DWORD PTR [ebp-0x1c],eax
  41d3e4:	mov    edx,DWORD PTR [ebp+0x8]
  41d3e7:	call   0x4081e3
  41d3ec:	mov    esi,DWORD PTR [ebp+0xc]
  41d3ef:	mov    ds:0x421258,eax
  41d3f4:	call   0x41a604
  41d3f9:	mov    ecx,DWORD PTR [ebp-0x18]
  41d3fc:	mov    edx,DWORD PTR [ebp+0x10]
  41d3ff:	mov    DWORD PTR [ecx],eax
  41d401:	call   0x4081e3
  41d406:	mov    ds:0x421278,eax
  41d40b:	mov    eax,ds:0x4211a0
  41d410:	mov    eax,DWORD PTR [eax+0x1c8]
  41d416:	mov    esi,DWORD PTR [eax]
  41d418:	call   0x41a604
  41d41d:	mov    ecx,DWORD PTR [ebp-0x10]
  41d420:	cmp    ecx,eax
  41d422:	je     0x41e0a1
  41d428:	mov    esi,DWORD PTR ds:0x421024
  41d42e:	sub    esi,edi
  41d430:	xor    esi,ebx
  41d432:	call   0x41a604
  41d437:	push   0xfffffffc
  41d439:	pop    esi
  41d43a:	mov    DWORD PTR [ebp+0x8],eax
  41d43d:	call   0x41a604
  41d442:	cmp    DWORD PTR [ebp+0x8],eax
  41d445:	je     0x41e0a1
  41d44b:	or     esi,0xffffffff
  41d44e:	jmp    0x41d5ea
  41d453:	xor    ah,BYTE PTR [edi+esi*8+0x33f7f7e4]
  41d45a:	test   BYTE PTR [ecx],0x9a
  41d45d:	addr16 push 0x68b675ed
  41d463:	repz mov al,BYTE PTR [ecx]
  41d466:	add    BYTE PTR [edi+0x1],bh
  41d469:	add    BYTE PTR [eax],al
  41d46b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d46c:	pusha  
  41d46d:	fld    DWORD PTR [edx]
  41d46f:	repnz bound edx,QWORD PTR [ebx]
  41d472:	adc    cl,dl
  41d474:	fistp  QWORD PTR [ecx+0x45]
  41d477:	outs   dx,BYTE PTR ds:[esi]
  41d478:	mov    al,BYTE PTR [ecx-0x4]
  41d47b:	mov    edi,0x5f18cad3
  41d480:	mov    esi,0x1b6e9fd9
  41d485:	aaa    
  41d486:	sbb    dl,BYTE PTR [ecx+0x5e12cb23]
  41d48c:	pop    esi
  41d48d:	pop    edi
  41d48e:	and    al,0x5b
  41d490:	rcr    DWORD PTR [ebx*1+0x695f53aa],cl
  41d497:	fdiv   DWORD PTR [ebp*1+0x576cb819]
  41d49e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d49f:	inc    esp
  41d4a0:	(bad)  [eax]
  41d4a2:	sub    DWORD PTR [ebx-0x6587ce3b],esp
  41d4a8:	jge    0x41d49e
  41d4aa:	test   DWORD PTR [ebx],edx
  41d4ac:	call   0x8f30:0x23860c76
  41d4b3:	hlt    
  41d4b4:	lock je 0x41d47f
  41d4b7:	or     bl,BYTE PTR [edi-0x55]
  41d4ba:	neg    ebx
  41d4bc:	cmp    al,0xf1
  41d4be:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d4bf:	or     BYTE PTR ds:0xf28263f6,bl
  41d4c5:	out    dx,eax
  41d4c6:	aad    0x19
  41d4c8:	sub    BYTE PTR [edx-0x66],0xbc
  41d4cc:	jnp    0x41d4e1
  41d4ce:	out    dx,eax
  41d4cf:	lds    esp,FWORD PTR ds:0xfe19ebef
  41d4d5:	out    0x9b,eax
  41d4d7:	or     ah,BYTE PTR [edi+0x42883c41]
  41d4dd:	add    dl,BYTE PTR [esi]
  41d4df:	cdq    
  41d4e0:	push   esi
  41d4e1:	ins    DWORD PTR es:[edi],dx
  41d4e2:	sbb    ch,BYTE PTR [edx]
  41d4e4:	test   eax,0xcfba5549
  41d4e9:	cmp    BYTE PTR [ebp+esi*8+0x466c5c2c],ah
  41d4f0:	js     0x41d54a
  41d4f2:	xlat   BYTE PTR ds:[ebx]
  41d4f3:	addr16 inc esi
  41d4f5:	arpl   WORD PTR [eax],ax
  41d4f7:	out    dx,eax
  41d4f8:	ror    DWORD PTR [esi+eiz*8],0x64
  41d4fc:	loopne 0x41d4a6
  41d4fe:	xchg   edx,eax
  41d4ff:	outs   dx,BYTE PTR ds:[esi]
  41d500:	in     al,0xc9
  41d502:	xchg   esi,eax
  41d503:	or     BYTE PTR [ebp-0x79f52442],dl
  41d509:	fiadd  WORD PTR [ebx]
  41d50b:	dec    edi
  41d50c:	push   eax
  41d50d:	ins    BYTE PTR es:[edi],dx
  41d50e:	add    esi,ecx
  41d510:	push   ebx
  41d511:	int    0xb8
  41d513:	pop    ebx
  41d514:	and    edx,DWORD PTR ds:0xb2cde294
  41d51a:	push   0x1c3bc2d0
  41d51f:	loop   0x41d59a
  41d521:	mov    DWORD PTR [esi],ebp
  41d523:	cmp    al,0xe8
  41d526:	lock cmp ebp,DWORD PTR [ebp-0x24]
  41d52a:	jecxz  0x41d547
  41d52c:	repnz sub al,BYTE PTR [esi+eiz*4+0x2461893a]
  41d534:	lods   al,BYTE PTR ds:[esi]
  41d535:	push   0x4de9cfd3
  41d53a:	imul   edx,DWORD PTR [edi],0x4b
  41d53d:	(bad)  
  41d53e:	pop    eax
  41d53f:	mov    ch,0xa1
  41d541:	push   es
  41d542:	mov    ecx,0xdef76fac
  41d547:	iret   
  41d548:	push   ds
  41d549:	stos   DWORD PTR es:[edi],eax
  41d54a:	sub    BYTE PTR [ecx+0x44],bh
  41d54d:	jg     0x41d522
  41d54f:	not    esi
  41d551:	add    ebx,DWORD PTR [ebx]
  41d553:	es jb  0x41d536
  41d556:	mov    eax,0xc8f0c1aa
  41d55b:	cwde   
  41d55c:	enter  0xd24e,0x8b
  41d560:	out    0x40,al
  41d562:	jle    0x41d582
  41d564:	add    ecx,DWORD PTR [esi]
  41d566:	iret   
  41d567:	shl    BYTE PTR [ebx+0x6e0d60f],cl
  41d56d:	jbe    0x41d568
  41d56f:	pop    esi
  41d570:	(bad)  
  41d571:	lea    ebx,[edx+0x4f03c6fd]
  41d577:	push   esi
  41d578:	daa    
  41d579:	fucomp st(4)
  41d57b:	call   0xfdd71c9b
  41d580:	xchg   edi,eax
  41d581:	popf   
  41d582:	adc    eax,edi
  41d584:	xchg   esp,eax
  41d585:	mov    ah,0x5
  41d587:	mov    dl,0x3f
  41d589:	dec    eax
  41d58a:	mov    eax,ds:0x66e344fe
  41d58f:	dec    ecx
  41d590:	jge    0x41d52c
  41d592:	inc    esi
  41d593:	movs   BYTE PTR es:[di],BYTE PTR ds:[si]
  41d595:	loopne 0x41d603
  41d597:	or     eax,0xa8c09db6
  41d59c:	inc    edx
  41d59d:	add    bl,BYTE PTR [edi]
  41d59f:	pop    edx
  41d5a0:	mov    dh,0x93
  41d5a2:	pop    eax
  41d5a3:	mov    ch,0x5
  41d5a5:	sbb    bh,BYTE PTR [edx-0x79]
  41d5a8:	xor    DWORD PTR [ecx-0x38],0x820581b7
  41d5af:	dec    ecx
  41d5b0:	pop    eax
  41d5b1:	fwait
  41d5b2:	popf   
  41d5b3:	aad    0x8f
  41d5b5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d5b6:	dec    edi
  41d5b7:	into   
  41d5b8:	and    BYTE PTR [ecx-0x791c5ad6],0x71
  41d5bf:	das    
  41d5c0:	mov    WORD PTR ds:0xd703a347,gs
  41d5c6:	mov    dh,0x22
  41d5c8:	imul   ebp,DWORD PTR [esi+0x6a],0xffffffa9
  41d5cc:	mov    dh,0x7d
  41d5ce:	test   BYTE PTR ds:0xc0df03f1,bh
  41d5d4:	jns    0x41d62c
  41d5d6:	push   cs
  41d5d7:	jecxz  0x41d5f3
  41d5d9:	addr16 aaa 
  41d5db:	push   ebp
  41d5dc:	sub    BYTE PTR [ebp+eiz*8-0x7ac35d67],dl
  41d5e3:	jmp    0xeca:0x6b44adc7
  41d5ea:	call   0x41a604
  41d5ef:	mov    ecx,DWORD PTR ds:0x4211a0
  41d5f5:	cmp    eax,DWORD PTR [ecx+0x1d0]
  41d5fb:	jne    0x41d7ae
  41d601:	mov    esi,DWORD PTR [ebp-0x8]
  41d604:	call   0x41a604
  41d609:	jmp    0x41d7a5
  41d60e:	jmp    0xea5f:0xb753134c
  41d615:	std    
  41d616:	(bad)  
  41d617:	mov    cl,0x1f
  41d619:	outs   dx,DWORD PTR ds:[esi]
  41d61a:	xchg   edx,eax
  41d61b:	mov    ah,0xb1
  41d61d:	xchg   ecx,eax
  41d61e:	jb     0x41d5ac
  41d620:	add    DWORD PTR [eax],eax
  41d622:	jg     0x41d625
  41d624:	add    BYTE PTR [eax],al
  41d626:	mov    BYTE PTR [esi+ebp*8],dh
  41d629:	in     al,0xaf
  41d62b:	aam    0x95
  41d62d:	cmp    eax,0x63d2a9c0
  41d632:	push   cs
  41d633:	shl    BYTE PTR [edi-0x76101b56],1
  41d639:	rol    BYTE PTR [edi],cl
  41d63b:	nop
  41d63c:	rcl    bl,1
  41d63e:	add    bl,BYTE PTR [ebx+0x4c]
  41d641:	jne    0x41d5c7
  41d643:	fld    QWORD PTR [ecx]
  41d645:	enter  0x2755,0xd8
  41d649:	inc    ecx
  41d64a:	dec    eax
  41d64b:	ret    0xe9fb
  41d64e:	pop    es
  41d64f:	pusha  
  41d650:	(bad)  
  41d651:	out    dx,al
  41d652:	and    DWORD PTR [ebp+0x36],ecx
  41d655:	and    BYTE PTR [ebp-0x79dd34b6],0xa1
  41d65c:	cmp    bh,0xd1
  41d65f:	ss out dx,al
  41d661:	push   0x18
  41d663:	xchg   ecx,eax
  41d664:	bound  ebp,QWORD PTR [esi]
  41d666:	stos   BYTE PTR es:[edi],al
  41d667:	fcom   st(7)
  41d669:	lods   eax,DWORD PTR ds:[esi]
  41d66a:	ror    BYTE PTR [eax-0x17],1
  41d66d:	shr    edi,0x92
  41d670:	std    
  41d671:	push   cs
  41d672:	mov    bl,0x70
  41d674:	cmp    eax,ebp
  41d676:	sub    al,0x2d
  41d678:	jp     0x41d6d3
  41d67a:	clc    
  41d67b:	out    0x3c,eax
  41d67d:	cli    
  41d67e:	test   DWORD PTR [eax],edx
  41d680:	mov    ch,BYTE PTR [esi-0x10c315e2]
  41d686:	int3   
  41d687:	inc    ecx
  41d688:	inc    esp
  41d689:	js     0x41d62c
  41d68b:	jns    0x41d6e5
  41d68d:	scas   eax,DWORD PTR es:[edi]
  41d68e:	xchg   esp,eax
  41d68f:	int3   
  41d690:	sbb    BYTE PTR [esi+0x5f],cl
  41d693:	aaa    
  41d694:	cwde   
  41d695:	gs jecxz 0x41d6c1
  41d698:	dec    esi
  41d699:	jnp    0x41d648
  41d69b:	mov    esp,0xf027e2b0
  41d6a0:	(bad)  
  41d6a1:	sub    al,0x8a
  41d6a3:	dec    ebp
  41d6a4:	in     eax,0x31
  41d6a6:	xchg   edi,eax
  41d6a7:	cmp    edx,eax
  41d6a9:	stos   BYTE PTR es:[edi],al
  41d6aa:	jge    0x41d685
  41d6ac:	add    bl,bh
  41d6ae:	shr    DWORD PTR [ecx-0x2c],1
  41d6b1:	push   ds
  41d6b2:	int    0x58
  41d6b4:	jnp    0x41d63e
  41d6b6:	mov    edi,0x41af1f65
  41d6bb:	add    dh,al
  41d6bd:	sahf   
  41d6be:	add    cl,al
  41d6c0:	mov    eax,0x48a7a61e
  41d6c5:	(bad)  
  41d6c6:	jmp    0x41d714
  41d6c8:	push   esp
  41d6c9:	mov    ah,0x4
  41d6cb:	lods   eax,DWORD PTR ds:[esi]
  41d6cc:	push   esp
  41d6cd:	pop    esi
  41d6ce:	scas   eax,DWORD PTR es:[edi]
  41d6cf:	cwde   
  41d6d0:	or     ebp,ecx
  41d6d2:	sub    BYTE PTR [ebx+0x4654582e],cl
  41d6d8:	loope  0x41d67e
  41d6da:	mov    edx,0x64fc9d13
  41d6df:	aas    
  41d6e0:	dec    esp
  41d6e1:	xchg   DWORD PTR [eax],edi
  41d6e3:	sub    DWORD PTR [esp+eiz*2+0x3c],ebx
  41d6e7:	sub    al,0x22
  41d6e9:	(bad)  
  41d6ea:	push   ss
  41d6eb:	ja     0x41d6ad
  41d6ed:	add    ch,bl
  41d6ef:	sbb    BYTE PTR [eax-0x757092cd],dh
  41d6f5:	test   al,0x2c
  41d6f7:	sub    al,0xa
  41d6f9:	jbe    0x41d69f
  41d6fb:	and    bh,BYTE PTR [edi]
  41d6fd:	dec    ecx
  41d6fe:	dec    edx
  41d6ff:	out    dx,al
  41d700:	rcl    BYTE PTR [eax+0x20],cl
  41d703:	addr16 icebp 
  41d705:	sbb    DWORD PTR [edi+0x1e],ecx
  41d708:	pop    edi
  41d709:	adc    al,BYTE PTR [edi]
  41d70b:	pushf  
  41d70c:	mov    al,ds:0xb6c39a93
  41d711:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d712:	jle    0x41d697
  41d714:	shl    BYTE PTR [edx+0x1b],1
  41d717:	jl     0x41d783
  41d719:	ffreep st(2)
  41d71b:	aad    0xea
  41d71d:	out    0xef,al
  41d71f:	loopne 0x41d783
  41d721:	mov    eax,0xe6bbba39
  41d726:	add    al,0xfd
  41d728:	daa    
  41d729:	leave  
  41d72a:	dec    ecx
  41d72b:	cmp    DWORD PTR [ecx],esp
  41d72d:	inc    esp
  41d72e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d72f:	jl     0x41d756
  41d731:	js     0x41d782
  41d733:	pop    esp
  41d734:	push   eax
  41d735:	sub    al,0x41
  41d737:	lods   al,BYTE PTR ds:[esi]
  41d738:	test   al,dh
  41d73a:	aaa    
  41d73b:	mov    dl,0xb6
  41d73d:	dec    ebx
  41d73e:	clc    
  41d73f:	xor    DWORD PTR [edx],ebp
  41d741:	mov    ds:0xbf0e0c9,eax
  41d746:	je     0x41d6ea
  41d748:	cli    
  41d749:	cmps   DWORD PTR ds:[si],DWORD PTR es:[di]
  41d74b:	adc    DWORD PTR [ecx],esi
  41d74d:	ffree  st(4)
  41d74f:	add    al,0x11
  41d751:	mov    ?,WORD PTR [eax+esi*4-0x36]
  41d755:	inc    ecx
  41d756:	pop    esp
  41d757:	sbb    eax,0x1cf730c3
  41d75c:	icebp  
  41d75d:	leave  
  41d75e:	adc    eax,0x6050522
  41d763:	shl    DWORD PTR [edx],1
  41d765:	mov    ch,0xec
  41d767:	mov    esp,0xb5fd975f
  41d76c:	sti    
  41d76d:	or     eax,0x60b0fbb0
  41d772:	xchg   esi,eax
  41d773:	bound  ecx,QWORD PTR [esi+ecx*1+0x846906f]
  41d77a:	sar    eax,cl
  41d77c:	mov    ch,0x18
  41d77e:	xor    al,0x56
  41d780:	call   0xb3f60f87
  41d785:	or     BYTE PTR [ebp+0x25],cl
  41d788:	ret    
  41d789:	pop    ds
  41d78a:	adc    BYTE PTR [esi],0x9d
  41d78d:	adc    al,bl
  41d78f:	cmp    ebp,DWORD PTR [edi-0x485d39a5]
  41d795:	fiadd  DWORD PTR [ecx+0x5942be51]
  41d79b:	imul   ebx,DWORD PTR [ebx-0x74475df3],0xa99b2a3e
  41d7a5:	xor    eax,ebx
  41d7a7:	add    eax,edi
  41d7a9:	jmp    0x41e08e
  41d7ae:	mov    eax,DWORD PTR [ecx+0x194]
  41d7b4:	mov    ecx,DWORD PTR [eax]
  41d7b6:	jmp    0x41d952
  41d7bb:	test   al,0x51
  41d7bd:	pop    ds
  41d7be:	xchg   edx,eax
  41d7bf:	(bad)  
  41d7c0:	fisubr WORD PTR [ebp-0x336e0585]
  41d7c6:	mov    eax,DWORD PTR [edx-0x71]
  41d7c9:	xor    ecx,DWORD PTR [esi]
  41d7cb:	icebp  
  41d7cc:	lea    eax,[ecx]
  41d7ce:	add    BYTE PTR [edi+0x1],bh
  41d7d1:	add    BYTE PTR [eax],al
  41d7d3:	xor    eax,ebp
  41d7d5:	stc    
  41d7d6:	jns    0x41d774
  41d7d8:	mov    ah,0xef
  41d7da:	and    DWORD PTR [ebp-0x186efece],edx
  41d7e0:	jne    0x41d848
  41d7e2:	jmp    0xa7853014
  41d7e7:	sbb    BYTE PTR [eax+0x39b9b859],0x84
  41d7ee:	out    dx,eax
  41d7ef:	out    0x29,al
  41d7f1:	dec    ebx
  41d7f2:	rcl    DWORD PTR [edi+edx*1+0x36],0xc3
  41d7f7:	pop    edi
  41d7f8:	fst    DWORD PTR [eax+0x6ad8a213]
  41d7fe:	inc    ecx
  41d7ff:	mov    dh,0x1d
  41d801:	pop    ss
  41d802:	cmc    
  41d803:	cdq    
  41d804:	fldenv [edx+0x4efe2c4]
  41d80a:	call   DWORD PTR [ecx-0x33]
  41d80d:	std    
  41d80e:	pop    edi
  41d80f:	push   ecx
  41d810:	pop    es
  41d811:	fadd   QWORD PTR [ebx*8-0x734a99f1]
  41d818:	pop    edi
  41d819:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d81a:	clc    
  41d81b:	sub    DWORD PTR [ecx+0x9],eax
  41d81e:	leave  
  41d81f:	div    esi
  41d821:	scas   eax,DWORD PTR es:[edi]
  41d822:	sar    DWORD PTR [edx],1
  41d824:	pop    edi
  41d825:	add    al,ah
  41d827:	xor    eax,0xdf8a5269
  41d82c:	pop    es
  41d82d:	pusha  
  41d82e:	pop    ecx
  41d82f:	and    ch,BYTE PTR ds:0xd334212b
  41d835:	iret   
  41d836:	push   ds
  41d837:	std    
  41d838:	jg     0x41d7fe
  41d83a:	pop    ecx
  41d83b:	fadd   QWORD PTR [eax]
  41d83d:	push   eax
  41d83e:	imul   esi,DWORD PTR [ecx+0x54df614a],0x18
  41d845:	jge    0x41d855
  41d847:	pushf  
  41d848:	cmp    DWORD PTR ds:0x391b0f53,ebp
  41d84e:	pop    esi
  41d84f:	imul   ecx,DWORD PTR [edx-0x20],0x1e
  41d853:	add    BYTE PTR [esi+0x16],al
  41d856:	jmp    0x35f1dfd6
  41d85b:	pop    es
  41d85c:	or     BYTE PTR [eax+0x7d91e864],0x50
  41d863:	test   BYTE PTR [ecx],0x6f
  41d866:	xlat   BYTE PTR ds:[ebx]
  41d867:	mov    ds:0x780fd227,al
  41d86c:	jmp    0x94ec:0x39f3b17b
  41d873:	je     0x41d862
  41d875:	mov    cl,0xd
  41d877:	aam    0x69
  41d879:	fmul   QWORD PTR [eax]
  41d87b:	mov    ah,0x8b
  41d87d:	dec    edi
  41d87e:	jg     0x41d811
  41d880:	jmp    0x1a0158aa
  41d885:	xchg   edi,eax
  41d886:	add    DWORD PTR [ecx-0x5],ebx
  41d889:	popf   
  41d88a:	(bad)  
  41d88b:	mov    ebp,0x67b9a473
  41d890:	out    0x79,eax
  41d892:	pop    edi
  41d893:	daa    
  41d894:	cmp    al,0xba
  41d896:	(bad)  
  41d897:	and    edi,DWORD PTR [edx+0x57]
  41d89a:	inc    edx
  41d89b:	inc    ecx
  41d89c:	pop    edx
  41d89d:	mov    eax,0xc5ad9514
  41d8a2:	(bad)  
  41d8a3:	jmp    0x7eb26967
  41d8a8:	adc    DWORD PTR [eax+0x3b8a4970],0x60
  41d8af:	aam    0x89
  41d8b1:	neg    BYTE PTR [esi+0x70]
  41d8b4:	dec    esi
  41d8b5:	jle    0x41d8af
  41d8b7:	xor    eax,0x80f61b3a
  41d8bc:	call   0xfe8ee171
  41d8c1:	push   ecx
  41d8c2:	pop    edx
  41d8c3:	sub    eax,0xd5fb7e1a
  41d8c8:	mov    ds:0x32a632c9,eax
  41d8cd:	addr16 in al,dx
  41d8cf:	iret   
  41d8d0:	das    
  41d8d1:	call   0xf136:0xba9d5290
  41d8d8:	ss retf 0xacee
  41d8dc:	pop    ebp
  41d8de:	int    0xf5
  41d8e0:	(bad)  
  41d8e2:	lahf   
  41d8e3:	push   0x1ee51202
  41d8e8:	or     al,0xa3
  41d8ea:	push   ecx
  41d8eb:	(bad)  
  41d8ec:	in     al,0x5b
  41d8ee:	out    dx,al
  41d8ef:	add    DWORD PTR [edx-0x266700d7],esp
  41d8f5:	out    0x61,al
  41d8f7:	cwde   
  41d8f8:	imul   ecx,DWORD PTR [ecx],0x55
  41d8fb:	fcom   QWORD PTR [ebx-0x1aea418f]
  41d901:	inc    ebp
  41d902:	mov    cl,0x6
  41d904:	arpl   WORD PTR [esp+ebp*2-0xfbae30d],cx
  41d90b:	cmp    eax,0x77e15b15
  41d910:	aaa    
  41d911:	push   eax
  41d912:	dec    ebx
  41d913:	mov    ds:0x63e2b8a3,eax
  41d918:	leave  
  41d919:	pop    edx
  41d91a:	lods   eax,DWORD PTR ds:[esi]
  41d91b:	mov    ds:0x143f2be,eax
  41d920:	sub    bh,bh
  41d922:	mov    edx,DWORD PTR [ecx+0x4]
  41d925:	mov    edx,0x2ea589cc
  41d92a:	mov    bh,ch
  41d92c:	scas   eax,DWORD PTR es:[edi]
  41d92d:	mov    edi,0x89943db7
  41d932:	leave  
  41d933:	pop    ss
  41d934:	pushf  
  41d935:	in     eax,dx
  41d936:	imul   edx,DWORD PTR [eax+eax*4+0x9],0x72cab22a
  41d93e:	call   0x9341:0x56c97c2d
  41d945:	fmul   st(6),st
  41d947:	test   ah,bl
  41d949:	cli    
  41d94a:	(bad)  
  41d94b:	js     0x41d9b6
  41d94d:	or     BYTE PTR [eax-0x74fd41ef],cl
  41d953:	inc    ecx
  41d954:	cmp    al,0x8b
  41d956:	inc    esp
  41d957:	or     BYTE PTR [eax],ch
  41d959:	add    eax,ecx
  41d95b:	mov    esi,0xffffe03f
  41d960:	mov    DWORD PTR [ebp-0x18],eax
  41d963:	call   0x41a604
  41d968:	push   0xfffffff0
  41d96a:	mov    DWORD PTR [ebp+0x10],eax
  41d96d:	jmp    0x41db09
  41d972:	mov    ebx,0xf734f7fd
  41d977:	ds sti 
  41d979:	jmp    eax
  41d97b:	fs dec esp
  41d97d:	and    BYTE PTR [ebx+0x708f2491],dl
  41d983:	pop    DWORD PTR [ecx]
  41d985:	add    BYTE PTR [edi+0x1],bh
  41d988:	add    BYTE PTR [eax],al
  41d98a:	das    
  41d98b:	sbb    eax,0x39264da
  41d990:	ss das 
  41d992:	hlt    
  41d993:	sub    DWORD PTR [ecx],eax
  41d995:	or     DWORD PTR [edi+0x1a06a12a],0x7c
  41d99c:	jecxz  0x41d9dd
  41d99e:	xchg   edi,eax
  41d99f:	data16 sub BYTE PTR [edi+0x13],bl
  41d9a3:	(bad)
  41d9a6:	(bad)  
  41d9a7:	repz push 0xffffffcf
  41d9aa:	sub    ebx,DWORD PTR [ebx+0x4af8031f]
  41d9b0:	mov    bh,BYTE PTR [esp+ebp*8-0x45]
  41d9b4:	test   DWORD PTR [edi+0x42045477],0x49ec696d
  41d9be:	dec    ebp
  41d9bf:	sbb    eax,esi
  41d9c1:	xlat   BYTE PTR ds:[ebx]
  41d9c2:	jo     0x41da37
  41d9c4:	mov    ecx,0x55433128
  41d9c9:	sub    DWORD PTR [eax+0x41],esi
  41d9cc:	std    
  41d9cd:	dec    ebx
  41d9ce:	stos   BYTE PTR es:[edi],al
  41d9cf:	inc    esi
  41d9d0:	pushf  
  41d9d1:	lods   al,BYTE PTR gs:[esi]
  41d9d3:	sar    BYTE PTR [eax],0xcf
  41d9d6:	inc    edx
  41d9d7:	or     al,0x95
  41d9d9:	sbb    dl,BYTE PTR [edx-0x44]
  41d9dc:	hlt    
  41d9dd:	xchg   ebx,eax
  41d9de:	jns    0x41da44
  41d9e0:	mov    ebx,0x12a4307b
  41d9e5:	loope  0x41d9e1
  41d9e7:	pop    ebx
  41d9e8:	bound  ebx,QWORD PTR [ecx+0x22]
  41d9eb:	mov    esp,0x749ae769
  41d9f0:	jb     0x41da2e
  41d9f2:	mov    edx,fs
  41d9f4:	lods   eax,DWORD PTR ds:[esi]
  41d9f5:	sbb    esi,DWORD PTR [ebx-0x28]
  41d9f8:	jnp    0x41da30
  41d9fa:	dec    ebx
  41d9fb:	sub    cl,ch
  41d9fd:	xchg   esp,eax
  41d9fe:	jnp    0x41da37
  41da00:	out    0xfa,al
  41da02:	sti    
  41da03:	add    edi,eax
  41da05:	in     al,0xe2
  41da07:	shl    BYTE PTR [edi-0x32],1
  41da0a:	in     eax,dx
  41da0b:	adc    eax,0x20b9888f
  41da10:	mov    ebx,0x26a92d8
  41da15:	enter  0x2eec,0x1a
  41da19:	std    
  41da1a:	jbe    0x41da87
  41da1c:	pop    ds
  41da1d:	mov    ecx,0x445e3867
  41da22:	jnp    0x41d9fa
  41da24:	aaa    
  41da25:	mov    edi,edx
  41da27:	loopne 0x41daa4
  41da29:	mov    ecx,eax
  41da2b:	repz xor bh,BYTE PTR [edx-0x3a]
  41da2f:	nop
  41da30:	lods   eax,DWORD PTR ds:[esi]
  41da31:	inc    ebp
  41da32:	and    cl,dl
  41da34:	ss mov edx,0x254356a6
  41da3a:	dec    ecx
  41da3b:	adc    al,0xf6
  41da3d:	push   0x78
  41da3f:	int3   
  41da40:	mov    eax,0xf2655766
  41da45:	add    al,BYTE PTR [ecx-0x36e7e4be]
  41da4b:	out    0x83,al
  41da4d:	mov    eax,ds:0xd7a303ba
  41da52:	fs jp  0x41da85
  41da55:	hlt    
  41da56:	dec    eax
  41da57:	and    ch,BYTE PTR [edi+0x49]
  41da5a:	sbb    eax,0xd11fbe21
  41da5f:	fmul   DWORD PTR ds:0x4052e0b
  41da65:	fild   DWORD PTR [edx-0x6118dcc3]
  41da6b:	test   cl,0xb4
  41da6e:	sbb    eax,0xa11ff92d
  41da73:	sti    
  41da74:	cmp    ecx,DWORD PTR [ecx-0x3b]
  41da77:	cmp    ebp,DWORD PTR [edi-0x53c8f4ea]
  41da7d:	in     eax,dx
  41da7e:	imul   edi,DWORD PTR [esi+ecx*8],0x2dd6b7e8
  41da85:	xchg   esi,ecx
  41da87:	xchg   esp,esp
  41da89:	sub    ch,dh
  41da8b:	push   ebx
  41da8c:	fcmovbe st,st(6)
  41da8e:	inc    esp
  41da8f:	fbstp  TBYTE PTR [ebp+0x60]
  41da92:	sbb    al,0x1e
  41da94:	push   edx
  41da95:	adc    al,0x93
  41da97:	xor    eax,0x5dce4505
  41da9c:	fisttp DWORD PTR [eax-0xae4deaa]
  41daa2:	(bad)  
  41daa3:	xchg   ecx,eax
  41daa4:	adc    DWORD PTR [ecx-0x41],0x6
  41daa8:	xchg   edi,eax
  41daa9:	(bad)  
  41daaa:	push   ds
  41daab:	out    dx,eax
  41daac:	jbe    0x41dafd
  41daae:	fidivr DWORD PTR [ecx+edx*2-0x19a4773e]
  41dab5:	stos   BYTE PTR es:[edi],al
  41dab6:	call   0xd9d6c246
  41dabb:	pop    esi
  41dabc:	dec    eax
  41dabd:	adc    eax,0x958e5b68
  41dac2:	lods   eax,DWORD PTR ds:[esi]
  41dac3:	stc    
  41dac4:	das    
  41dac5:	pusha  
  41dac6:	mov    eax,0xee5ea107
  41dacb:	and    eax,0x63f55226
  41dad0:	xor    ebx,DWORD PTR [edi-0x3522ff30]
  41dad6:	xchg   dh,al
  41dad8:	mov    ?,WORD PTR es:[edx]
  41dadb:	aam    0xd
  41dadd:	dec    BYTE PTR [eax-0x10]
  41dae0:	(bad)  
  41dae1:	rcl    DWORD PTR [eax-0x2f],1
  41dae4:	push   esi
  41dae5:	mov    ecx,0x3ee24f0a
  41daea:	lods   eax,DWORD PTR ds:[esi]
  41daeb:	inc    ebx
  41daec:	mov    al,ds:0xd1a1679c
  41daf1:	sbb    BYTE PTR [esi+ecx*2-0x19],cl
  41daf5:	cld    
  41daf6:	fwait
  41daf7:	test   BYTE PTR [ebp+0x2a],bh
  41dafa:	fldcw  WORD PTR [edi]
  41dafc:	xchg   ebx,eax
  41dafd:	xor    eax,DWORD PTR [edx-0x3006e948]
  41db03:	xchg   edx,eax
  41db04:	ja     0x41db51
  41db06:	mov    bl,0x36
  41db08:	daa    
  41db09:	pop    esi
  41db0a:	call   0x41a604
  41db0f:	mov    DWORD PTR [ebp+0xc],eax
  41db12:	jmp    0x41dcae
  41db17:	push   eax
  41db18:	outs   dx,DWORD PTR ds:[esi]
  41db19:	ss (bad) 
  41db1b:	aas    
  41db1c:	(bad)  
  41db1e:	(bad)  
  41db1f:	jl     0x41db69
  41db21:	jle    0x41daa8
  41db23:	imul   esi,DWORD PTR [ebp-0x6f10234f],0x1
  41db2a:	add    BYTE PTR [edi+0x1],bh
  41db2d:	add    BYTE PTR [eax],al
  41db2f:	mov    edi,0xa0a165e2
  41db34:	fwait
  41db35:	cmp    ah,BYTE PTR [esi]
  41db37:	xchg   edx,ecx
  41db39:	xchg   DWORD PTR [eax-0x4087b6b7],esp
  41db3f:	dec    edx
  41db40:	rcr    dh,cl
  41db42:	mov    bl,0x78
  41db44:	jle    0x41db40
  41db46:	adc    ebx,ebx
  41db48:	mov    dh,0xce
  41db4a:	pop    ebx
  41db4b:	push   ss
  41db4c:	mov    edi,0xddf69ece
  41db51:	call   0xcde9:0x77cdccf4
  41db58:	sbb    ecx,edx
  41db5a:	push   eax
  41db5b:	mov    al,ds:0xdb6bd00d
  41db60:	add    DWORD PTR [eax],esi
  41db62:	mov    al,ds:0xcfc65295
  41db67:	pop    ebp
  41db68:	mov    eax,0xc0bba530
  41db6d:	mov    ebp,0x29d927fd
  41db72:	pop    ds
  41db73:	aad    0xfb
  41db75:	pop    esi
  41db76:	mov    ds:0xc0b14453,eax
  41db7b:	or     eax,0x9b493a76
  41db80:	mov    edx,0x45c8877a
  41db85:	and    al,0x2e
  41db87:	inc    esp
  41db88:	mov    al,ds:0xd7943e66
  41db8d:	cld    
  41db8e:	add    eax,0x6e529163
  41db93:	mov    edi,0x1497a7c2
  41db98:	or     eax,0xa9dedf57
  41db9d:	jg     0x41db86
  41db9f:	push   0x4e24139f
  41dba4:	xchg   ebx,eax
  41dba5:	ret    
  41dba6:	jge    0x41dc09
  41dba8:	pusha  
  41dba9:	sahf   
  41dbaa:	jae    0x41dc0f
  41dbac:	adc    esi,DWORD PTR [eax-0x71]
  41dbaf:	mov    dh,0x45
  41dbb1:	xchg   ebp,eax
  41dbb2:	repnz aas 
  41dbb4:	mov    eax,0xa4eae830
  41dbb9:	push   ebp
  41dbba:	mov    eax,ds:0xc14e5ac4
  41dbbf:	push   eax
  41dbc0:	mov    ebx,0x27e443e3
  41dbc5:	push   es
  41dbc6:	ja     0x41dbed
  41dbc8:	test   DWORD PTR [edx+0x3b],edx
  41dbcb:	sti    
  41dbcc:	inc    DWORD PTR [ebx-0x1]
  41dbcf:	lods   eax,DWORD PTR ds:[esi]
  41dbd0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41dbd1:	add    edx,DWORD PTR [ebp-0x67]
  41dbd4:	mov    eax,ds:0x192a7fcd
  41dbd9:	out    dx,eax
  41dbda:	mov    esi,0xa8356562
  41dbdf:	sub    al,0x40
  41dbe1:	lea    esi,[ecx+0x35]
  41dbe4:	shl    ecx,cl
  41dbe6:	mov    WORD PTR [ecx+0x50ffd425],ss
  41dbec:	leave  
  41dbed:	jp     0x41dc0d
  41dbef:	push   eax
  41dbf0:	push   es
  41dbf1:	sbb    BYTE PTR [ebp+0x2a0b5573],ch
  41dbf7:	xchg   edi,eax
  41dbf8:	sbb    eax,0xe3f74089
  41dbfd:	pop    eax
  41dbfe:	cmp    edi,DWORD PTR [edx+edi*4-0x5b0c2421]
  41dc05:	shl    BYTE PTR [esi+0x4b],0xb2
  41dc09:	ins    BYTE PTR es:[edi],dx
  41dc0a:	loopne 0x41db91
  41dc0c:	mov    cl,0xd7
  41dc0e:	inc    eax
  41dc0f:	push   es
  41dc10:	mov    eax,0x1295ba9
  41dc15:	add    BYTE PTR [ebp-0x4590f50d],0x5f
  41dc1c:	push   0x267c5c5c
  41dc21:	aas    
  41dc22:	adc    ah,ch
  41dc24:	rcl    BYTE PTR [eax-0x1e],1
  41dc27:	mov    edx,0x35399dba
  41dc2c:	jmp    DWORD PTR [edx-0x290b7271]
  41dc32:	or     eax,0x54f893bc
  41dc37:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41dc38:	ds leave 
  41dc3a:	xchg   esp,eax
  41dc3b:	xchg   esi,eax
  41dc3c:	ror    BYTE PTR [edi-0x5b1beb7d],0x6d
  41dc43:	fild   WORD PTR [ebx+0x58]
  41dc46:	loop   0x41dc1d
  41dc48:	scas   al,BYTE PTR es:[edi]
  41dc49:	mov    edx,DWORD PTR [edx+eax*1]
  41dc4c:	add    ah,al
  41dc4e:	mov    eax,ds:0xc5a53c3a
  41dc53:	mov    cl,0x27
  41dc55:	cmp    eax,0x1790217b
  41dc5a:	xchg   BYTE PTR [edi-0x53],ch
  41dc5d:	push   es
  41dc5e:	or     eax,0xe3c8de76
  41dc63:	jle    0x41dce2
  41dc65:	dec    edx
  41dc66:	test   BYTE PTR [ebx],bh
  41dc68:	adc    eax,DWORD PTR [edx+edi*4-0x5d94121f]
  41dc6f:	inc    BYTE PTR [edi]
  41dc71:	mov    edx,0xb49926e
  41dc76:	ins    BYTE PTR es:[edi],dx
  41dc77:	xor    al,0x54
  41dc79:	cs adc ebp,ecx
  41dc7c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41dc7d:	es aad 0x73
  41dc80:	es repz pop esp
  41dc83:	adc    ebx,DWORD PTR [edi+esi*8]
  41dc86:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41dc87:	imul   ebp
  41dc89:	sbb    ebx,DWORD PTR [ecx-0x7a8f546d]
  41dc8f:	pop    DWORD PTR [eax+0x6f]
  41dc92:	neg    edx
  41dc94:	inc    ebx
  41dc95:	popf   
  41dc96:	jns    0x41dc41
  41dc98:	dec    edi
  41dc99:	sub    bl,BYTE PTR [edi-0x6a489323]
  41dc9f:	sbb    DWORD PTR [eax-0x6a],esi
  41dca2:	push   ecx
  41dca3:	or     DWORD PTR ds:0x42f18013,ebp
  41dca9:	enter  0x4bf2,0x71
  41dcad:	imul   ecx,DWORD PTR [ebp-0x68161fbb],0x1
  41dcb4:	add    BYTE PTR [eax],al
  41dcb6:	adc    esi,DWORD PTR [ebx-0x2054386]
  41dcbc:	xlat   BYTE PTR ds:[ebx]
  41dcbd:	mov    edi,0xf4ebbb41
  41dcc2:	or     eax,0x6ec8e9ea
  41dcc7:	xchg   edx,eax
  41dcc8:	add    DWORD PTR [eax],eax
  41dcca:	jg     0x41dccd
  41dccc:	add    BYTE PTR [eax],al
  41dcce:	pushf  
  41dccf:	dec    ebp
  41dcd0:	(bad)  
  41dcd1:	aam    0x37
  41dcd3:	daa    
  41dcd4:	lds    edi,FWORD PTR [eax+edx*8-0x77]
  41dcd8:	pop    ds
  41dcd9:	jae    0x41dd2a
  41dcdb:	push   edi
  41dcdc:	iret   
  41dcdd:	push   esp
  41dcde:	imul   dl
  41dce0:	sbb    BYTE PTR [ecx-0x27f6373b],0xdc
  41dce7:	adc    BYTE PTR [ecx],ch
  41dce9:	ds (bad) 
  41dceb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41dcec:	cmp    BYTE PTR [ebx+0x30bea054],cl
  41dcf2:	fisttp QWORD PTR [ecx+0x46f8d1da]
  41dcf8:	mov    cl,0x6d
  41dcfa:	mov    ah,BYTE PTR [edx+0x231655de]
  41dd00:	push   es
  41dd01:	bnd ret 0x34ec
  41dd05:	ja     0x41dd04
  41dd07:	adc    ah,BYTE PTR [ebx+ebp*4-0x40]
  41dd0b:	dec    ecx
  41dd0c:	sbb    eax,0xc4c16164
  41dd11:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41dd12:	sahf   
  41dd13:	xchg   esi,eax
  41dd14:	adc    BYTE PTR [esi+0x23245e77],ah
  41dd1a:	dec    esi
  41dd1b:	out    dx,al
  41dd1c:	enter  0x3953,0x3
  41dd20:	pop    esi
  41dd21:	dec    esi
  41dd22:	jne    0x41dcd5
  41dd24:	push   esp
  41dd25:	repnz lods eax,DWORD PTR ds:[esi]
  41dd27:	fld    TBYTE PTR [eax+0x5e]
  41dd2a:	sbb    DWORD PTR [edi-0x3a557523],esp
  41dd30:	jg     0x41dd16
  41dd32:	fnstsw WORD PTR [ebx+edi*4+0x46]
  41dd36:	jl     0x41dd79
  41dd38:	in     eax,0x85
  41dd3a:	sbb    ch,ch
  41dd3c:	jne    0x41dd64
  41dd3e:	jg     0x41dd0e
  41dd40:	add    BYTE PTR [ebp+0x68],dl
  41dd43:	rol    dl,1
  41dd45:	or     al,0x69
  41dd47:	imul   DWORD PTR [ecx+0x2627d12c]
  41dd4d:	push   ebp
  41dd4e:	in     eax,0xa3
  41dd50:	cmp    BYTE PTR [ebx-0x80],ch
  41dd53:	add    al,0x81
  41dd55:	push   esi
  41dd56:	or     esi,edi
  41dd58:	fdivr  st(3),st
  41dd5a:	dec    esp
  41dd5b:	dec    edi
  41dd5c:	cwde   
  41dd5d:	sahf   
  41dd5e:	nop
  41dd5f:	dec    esi
  41dd60:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41dd61:	icebp  
  41dd62:	mov    esp,cs
  41dd64:	cmp    ebx,ecx
  41dd66:	ret    0x12f9
  41dd69:	loopne 0x41dd94
  41dd6b:	seta   BYTE PTR [ebx]
  41dd6e:	cli    
  41dd6f:	jns    0x41ddd2
  41dd71:	xor    bh,BYTE PTR [eax+edi*2]
  41dd74:	(bad)
  41dd77:	mov    bl,0x27
  41dd79:	sar    BYTE PTR ds:0xb40c3d5c,cl
  41dd7f:	xchg   DWORD PTR [eax],edx
  41dd81:	mov    ds:0x165317d8,eax
  41dd86:	mov    al,0xf0
  41dd88:	mov    ds:0x2e19cd81,al
  41dd8d:	xchg   DWORD PTR [ecx+0x4],ebp
  41dd90:	mov    bl,0xae
  41dd92:	sub    bh,BYTE PTR [edx]
  41dd94:	cmc    
  41dd95:	and    eax,0xabaf197b
  41dd9a:	push   esp
  41dd9b:	inc    edi
  41dd9c:	inc    ebp
  41dd9d:	push   edx
  41dd9e:	sbb    al,0x95
  41dda0:	(bad)  
  41dda1:	outs   dx,BYTE PTR ds:[esi]
  41dda2:	mov    cl,0x96
  41dda4:	bound  esi,QWORD PTR [eax-0x40916843]
  41ddaa:	out    dx,al
  41ddab:	loop   0x41de10
  41ddad:	xchg   DWORD PTR [edx-0x75],esi
  41ddb0:	lock inc eax
  41ddb2:	in     al,0xb8
  41ddb4:	push   eax
  41ddb5:	jns    0x41ddee
  41ddb7:	scas   al,BYTE PTR es:[edi]
  41ddb8:	and    BYTE PTR [esi],0x50
  41ddbb:	jne    0x41dd63
  41ddbd:	and    eax,0xa34bbb34
  41ddc2:	mov    al,0x2b
  41ddc4:	(bad)  
  41ddc5:	fist   WORD PTR [esi+eax*8-0xc]
  41ddc9:	arpl   WORD PTR [eax+0x40],ax
  41ddcc:	or     esp,esp
  41ddce:	jge    0x41ddee
  41ddd0:	or     ebx,edi
  41ddd2:	cwde   
  41ddd3:	sbb    al,0xb3
  41ddd5:	lea    ebx,[esi+0x547a771f]
  41dddb:	xchg   edi,eax
  41dddc:	xchg   esp,eax
  41dddd:	outs   dx,BYTE PTR ds:[esi]
  41ddde:	mov    ebp,0x5798aa87
  41dde3:	fbstp  TBYTE PTR [eax+0x69]
  41dde6:	jg     0x41dd7d
  41dde8:	out    dx,eax
  41dde9:	mov    esp,0xeb8e8945
  41ddee:	sahf   
  41ddef:	adc    al,BYTE PTR [esi]
  41ddf1:	xor    ecx,DWORD PTR [esi-0x7f]
  41ddf4:	add    BYTE PTR [eax+ebp*2-0x44],al
  41ddf8:	or     BYTE PTR cs:[esi],0x7a
  41ddfc:	adc    eax,0xd42aed53
  41de01:	daa    
  41de02:	pop    ebx
  41de03:	ror    DWORD PTR [edi+0x7ce88dfe],1
  41de09:	ds mov edi,0x6b8cd213
  41de0f:	push   esp
  41de10:	scas   al,BYTE PTR es:[edi]
  41de11:	in     eax,dx
  41de12:	and    BYTE PTR [ecx+ecx*2],dh
  41de15:	loop   0x41de78
  41de17:	repnz push 0xffffffeb
  41de1a:	out    0xb3,al
  41de1c:	xchg   ebp,eax
  41de1d:	mov    cl,0xcd
  41de1f:	fcom   QWORD PTR [ebx]
  41de21:	dec    edi
  41de22:	xor    BYTE PTR [edx-0x3f],ch
  41de25:	icebp  
  41de26:	iret   
  41de27:	retf   0x4e7b
  41de2a:	jecxz  0x41de6c
  41de2c:	lds    esi,FWORD PTR [esi]
  41de2e:	or     BYTE PTR [ecx],bh
  41de30:	fmul   DWORD PTR [esi]
  41de32:	mov    ds:0x843a4ead,eax
  41de37:	scas   eax,DWORD PTR es:[edi]
  41de38:	dec    edi
  41de39:	ror    esp,cl
  41de3b:	sub    esi,DWORD PTR [ecx]
  41de3d:	test   BYTE PTR [edx-0x2133425d],al
  41de43:	mov    bl,0x11
  41de45:	shl    bh,0xef
  41de48:	scas   al,BYTE PTR es:[edi]
  41de49:	rol    ebx,0x2d
  41de4c:	mov    eax,ds:0xb45c650
  41de51:	xchg   ebp,eax
  41de52:	mov    eax,DWORD PTR [ebp+0x10]
  41de55:	xor    eax,ebx
  41de57:	add    eax,edi
  41de59:	push   eax
  41de5a:	mov    eax,DWORD PTR [ebp+0xc]
  41de5d:	xor    eax,ebx
  41de5f:	add    eax,edi
  41de61:	push   eax
  41de62:	push   DWORD PTR ds:0x4212ac
  41de68:	mov    eax,ds:0x4211c0
  41de6d:	push   0x4
  41de6f:	push   0x1
  41de71:	push   0x421116
  41de76:	push   DWORD PTR [eax]
  41de78:	call   0x405628
  41de7d:	mov    al,BYTE PTR [ebp+0xb]
  41de80:	mov    ecx,DWORD PTR ds:0x4212ac
  41de86:	mov    esi,DWORD PTR [ebp+0xc]
  41de89:	xor    al,0x3a
  41de8b:	add    al,0x3a
  41de8d:	add    esp,0x20
  41de90:	mov    BYTE PTR [ecx],al
  41de92:	call   0x41a604
  41de97:	mov    edx,DWORD PTR ds:0x4212ac
  41de9d:	xor    eax,ebx
  41de9f:	mov    esi,0xffffcff5
  41dea4:	sub    esi,eax
  41dea6:	call   0x4081e3
  41deab:	jmp    0x41e047
  41deb0:	mov    ds:0xe75e84c4,eax
  41deb5:	pop    esi
  41deb6:	sti    
  41deb7:	std    
  41deb8:	xor    BYTE PTR [edx],ah
  41deba:	cmp    eax,0xb063fd71
  41dec0:	in     eax,dx
  41dec1:	xchg   ebx,eax
  41dec2:	add    DWORD PTR [eax],eax
  41dec4:	jg     0x41dec7
  41dec6:	add    BYTE PTR [eax],al
  41dec8:	loopne 0x41de73
  41deca:	push   edi
  41decb:	sub    eax,0xc77f4afa
  41ded0:	lock pushf 
  41ded2:	or     DWORD PTR [esi-0x24],edi
  41ded5:	cmp    ecx,DWORD PTR [edx+0x5c4daa76]
  41dedb:	lea    eax,[edi+0x4c]
  41dede:	and    BYTE PTR [eax-0x10],dh
  41dee1:	jno    0x41df20
  41dee3:	xlat   BYTE PTR ds:[ebx]
  41dee4:	cli    
  41dee5:	inc    ecx
  41dee6:	in     eax,dx
  41dee7:	mov    esi,0x6ed5c272
  41deec:	(bad)  
  41deed:	or     BYTE PTR [esi],bh
  41deef:	in     al,0xcc
  41def1:	and    edi,ecx
  41def3:	xor    ebp,DWORD PTR [eax-0x3d0c9eea]
  41def9:	(bad)  
  41defb:	inc    esp
  41defc:	leave  
  41defd:	lea    ecx,[edx-0xd]
  41df00:	pop    edx
  41df01:	jbe    0x41df02
  41df03:	mov    esp,0xe18663b6
  41df08:	mov    cl,0x88
  41df0a:	pop    ebp
  41df0b:	rcr    eax,0xbc
  41df0e:	push   ebx
  41df0f:	mov    dl,ah
  41df11:	jae    0x41df6d
  41df13:	or     edi,ebx
  41df15:	mov    edi,0x9320b3e3
  41df1a:	leave  
  41df1b:	cmp    al,0x35
  41df1d:	sub    cl,0xdd
  41df20:	cmp    eax,0x79e4d07b
  41df25:	mov    edx,0x19fd7f87
  41df2a:	mov    cl,0x68
  41df2c:	retf   0xda29
  41df2f:	cmp    esi,DWORD PTR [edx]
  41df31:	mov    fs:0xfd9d7864,al
  41df37:	fs in  al,0xbc
  41df3a:	pop    ds
  41df3b:	jne    0x41df4a
  41df3d:	sar    BYTE PTR [ebp+0x7f],cl
  41df40:	pop    edx
  41df41:	jl     0x41df3d
  41df43:	ret    
  41df44:	push   ecx
  41df45:	or     BYTE PTR [ebx],dh
  41df47:	mov    bh,BYTE PTR [esi]
  41df49:	sar    BYTE PTR [ecx-0x1e4d2242],0xd8
  41df50:	sbb    ebp,DWORD PTR [ecx+0x330fbcd1]
  41df56:	shl    BYTE PTR [esi],1
  41df58:	jb     0x41df8c
  41df5a:	pop    eax
  41df5b:	mov    ch,0x9f
  41df5d:	test   al,0x22
  41df5f:	cmc    
  41df60:	sub    al,0x15
  41df62:	xchg   ecx,eax
  41df63:	mov    ds:0x80440564,eax
  41df68:	cmp    esi,edx
  41df6a:	push   ecx
  41df6b:	dec    ebx
  41df6c:	add    ebp,DWORD PTR [ecx-0xe1f284a]
  41df72:	std    
  41df73:	jmp    0xb189:0x6a08f5f5
  41df7a:	mov    cl,0x80
  41df7c:	inc    ebp
  41df7d:	push   0xf451fafa
  41df82:	test   al,0x88
  41df84:	fcmovb st,st(3)
  41df86:	mov    ecx,0x137e9cdd
  41df8b:	mov    ah,0xf4
  41df8d:	mov    esp,0xc8f5a12f
  41df92:	ss sub eax,0x8b6b115c
  41df98:	mov    esi,0x28cc017f
  41df9d:	aaa    
  41df9e:	mov    edx,edx
  41dfa0:	sbb    BYTE PTR [esi+0x34],dl
  41dfa3:	pop    ebx
  41dfa4:	xchg   edx,eax
  41dfa5:	adc    al,0x75
  41dfa7:	mov    dl,0x49
  41dfa9:	inc    edi
  41dfaa:	mov    al,0x33
  41dfac:	sub    DWORD PTR [edx-0x110a10aa],ebp
  41dfb2:	sub    DWORD PTR ds:0x3a1cfb8e,ecx
  41dfb8:	adc    eax,0x97f311b2
  41dfbd:	(bad)  
  41dfbe:	push   0x56f5695c
  41dfc3:	xchg   esi,edx
  41dfc5:	add    ecx,ecx
  41dfc7:	lods   al,BYTE PTR ds:[esi]
  41dfc8:	imul   ecx,DWORD PTR [edi],0x239f2217
  41dfce:	dec    esp
  41dfcf:	fstp   st(5)
  41dfd1:	adc    ecx,eax
  41dfd3:	rcl    DWORD PTR [esi],cl
  41dfd5:	inc    ecx
  41dfd6:	inc    ebp
  41dfd7:	push   ds
  41dfd8:	idiv   DWORD PTR [esi]
  41dfda:	stos   BYTE PTR es:[edi],al
  41dfdb:	cli    
  41dfdc:	dec    eax
  41dfdd:	jl     0x41e01d
  41dfdf:	jle    0x41df79
  41dfe1:	pop    eax
  41dfe2:	ins    BYTE PTR es:[edi],dx
  41dfe3:	(bad)  
  41dfe4:	and    al,0x85
  41dfe6:	jmp    0x41df9a
  41dfe8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41dfe9:	cmc    
  41dfea:	out    0x1b,al
  41dfec:	lea    edi,[eax+0x290c8fa]
  41dff2:	and    BYTE PTR [edi],0x0
  41dff5:	repz inc esi
  41dff7:	push   ds
  41dff8:	or     DWORD PTR [esi+0x2d],edi
  41dffb:	ds mov esp,0x91fab841
  41e001:	pop    eax
  41e002:	test   al,0xb4
  41e004:	adc    DWORD PTR [esi-0x1e],edx
  41e007:	jl     0x41dfb8
  41e009:	sub    al,0x31
  41e00b:	add    eax,0xf4dfccf0
  41e010:	(bad)  
  41e012:	test   BYTE PTR [esi+eax*1+0x7d],dl
  41e016:	xchg   esi,eax
  41e017:	push   ebx
  41e018:	or     eax,0x364f4a20
  41e01d:	cli    
  41e01e:	xchg   ebp,eax
  41e01f:	mov    esp,0x747c0563
  41e024:	add    DWORD PTR [edi-0x524a2f21],eax
  41e02a:	(bad)  
  41e02b:	adc    ebx,DWORD PTR [edx]
  41e02d:	in     al,0x36
  41e02f:	imul   edx,esp,0xffffffc6
  41e032:	or     BYTE PTR [edx-0x14],dl
  41e035:	cwde   
  41e036:	out    dx,eax
  41e037:	xchg   BYTE PTR [eax+esi*1+0x4e],dl
  41e03b:	(bad)  
  41e03c:	retf   
  41e03d:	test   BYTE PTR [esi-0x3],ch
  41e040:	pop    ss
  41e041:	hlt    
  41e042:	pop    ss
  41e043:	push   ebx
  41e044:	dec    edi
  41e045:	shl    BYTE PTR [esi+0x2be8558b],0xf0
  41e04c:	call   0x4081e3
  41e051:	mov    ecx,DWORD PTR ds:0x4212ac
  41e057:	add    eax,esi
  41e059:	mov    DWORD PTR [ecx+0x1],eax
  41e05c:	mov    DWORD PTR ds:0x421224,0x0
  41e066:	mov    DWORD PTR ds:0x42121c,0x0
  41e070:	push   DWORD PTR ds:0x421278
  41e076:	push   DWORD PTR ds:0x421024
  41e07c:	mov    eax,ds:0x4211a0
  41e081:	mov    eax,DWORD PTR [eax+0x194]
  41e087:	push   DWORD PTR [eax]
  41e089:	call   0x404f0d
  41e08e:	mov    ecx,DWORD PTR ds:0x4211a0
  41e094:	mov    ecx,DWORD PTR [ecx+0x1cc]
  41e09a:	mov    DWORD PTR [ecx],eax
  41e09c:	jmp    0x41e0cc
  41e0a1:	mov    esi,0x4350450
  41e0a6:	call   0x41a604
  41e0ab:	push   eax
  41e0ac:	mov    esi,0x7687643
  41e0b1:	call   0x41a604
  41e0b6:	push   eax
  41e0b7:	call   0x40cd95
  41e0bc:	mov    edi,DWORD PTR [ebp-0xc]
  41e0bf:	mov    esi,DWORD PTR ds:0x42121c
  41e0c5:	call   0x41a604
  41e0ca:	add    DWORD PTR [edi],eax
  41e0cc:	mov    eax,ds:0x4211a0
  41e0d1:	mov    eax,DWORD PTR [eax+0x1cc]
  41e0d7:	jmp    0x41e273
  41e0dc:	xor    al,0x79
  41e0de:	adc    al,0x41
  41e0e0:	pop    ebp
  41e0e1:	ins    DWORD PTR es:[edi],dx
  41e0e2:	jne    0x41e161
  41e0e4:	jmp    0xf418:0xd035911a
  41e0eb:	pop    esp
  41e0ec:	ins    BYTE PTR es:[edi],dx
  41e0ed:	xchg   ebp,eax
  41e0ee:	add    DWORD PTR [eax],eax
  41e0f0:	jg     0x41e0f3
  41e0f2:	add    BYTE PTR [eax],al
  41e0f4:	jmp    0x5c5e604e
  41e0f9:	mov    dh,0x2b
  41e0fb:	jbe    0x41e14a
  41e0fd:	stc    
  41e0fe:	hlt    
  41e0ff:	xor    eax,0x257a8d3
  41e104:	neg    esp
  41e106:	xchg   ebx,eax
  41e107:	fistp  QWORD PTR [ebx-0x1642ac09]
  41e10d:	push   cs
  41e10e:	pop    eax
  41e10f:	mov    DWORD PTR [esi+0x50],ebp
  41e112:	js     0x41e0f7
  41e114:	ins    BYTE PTR es:[edi],dx
  41e115:	and    edi,DWORD PTR [ebp+0x6b]
  41e118:	or     eax,esp
  41e11a:	mov    esp,0x9d682b90
  41e11f:	mov    ds:0x326fd0f2,eax
  41e124:	push   ecx
  41e125:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e126:	scas   eax,DWORD PTR es:[edi]
  41e127:	test   al,0x49
  41e129:	cld    
  41e12a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e12b:	pop    ds
  41e12c:	jb     0x41e118
  41e12e:	push   ebx
  41e12f:	inc    edx
  41e130:	and    edx,DWORD PTR [ebx+0x180001a4]
  41e136:	fisub  DWORD PTR [ebp+ebp*4+0x14ada42e]
  41e13d:	ret    
  41e13e:	icebp  
  41e13f:	(bad)  
  41e141:	sub    bl,bh
  41e143:	add    al,0x10
  41e145:	mov    dl,0xc9
  41e147:	add    eax,0xada7919a
  41e14c:	(bad)  
  41e14d:	pop    ss
  41e14e:	pop    esp
  41e14f:	sbb    al,0x54
  41e151:	lahf   
  41e152:	push   ds
  41e153:	fidivr WORD PTR cs:[eax-0x438cd1e7]
  41e15a:	mov    esp,esp
  41e15c:	not    BYTE PTR [ebp-0x7cb7e6d5]
  41e162:	cmp    DWORD PTR [edx+0x34ef7119],ecx
  41e168:	jg     0x41e1c5
  41e16a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e16b:	add    ebp,edx
  41e16d:	iret   
  41e16e:	stos   BYTE PTR es:[edi],al
  41e16f:	test   BYTE PTR [edi+0x131f91ad],cl
  41e175:	sbb    eax,0x825caf8c
  41e17a:	sbb    ah,BYTE PTR [ecx+ebp*4]
  41e17d:	mov    esp,0xf388bcd9
  41e182:	into   
  41e183:	rcr    bh,0xa3
  41e186:	xor    cl,al
  41e188:	xchg   edx,eax
  41e189:	and    BYTE PTR ds:0x5f66f2b3,bl
  41e18f:	and    DWORD PTR [ecx-0x65],ebx
  41e192:	or     eax,0xd8ca087b
  41e197:	ins    BYTE PTR es:[edi],dx
  41e198:	retf   
  41e199:	xor    DWORD PTR [esi-0x58],esp
  41e19c:	inc    ebp
  41e19d:	add    al,0x2d
  41e19f:	das    
  41e1a0:	and    ah,BYTE PTR [edi]
  41e1a2:	mov    edx,0xcb8f3d06
  41e1a7:	jbe    0x41e1d9
  41e1a9:	and    DWORD PTR [eax+ebx*2],esp
  41e1ac:	or     eax,0xbbb4276e
  41e1b1:	xchg   ebx,eax
  41e1b2:	or     bl,BYTE PTR [esi+0x659cd037]
  41e1b8:	inc    edi
  41e1b9:	pusha  
  41e1ba:	(bad)  
  41e1bb:	fcmovbe st,st(1)
  41e1bd:	pusha  
  41e1be:	sbb    DWORD PTR [ebp-0x1c],edi
  41e1c1:	mov    ecx,0x65007371
  41e1c6:	loopne 0x41e205
  41e1c8:	mov    ebx,0xb91d948d
  41e1cd:	push   0x57fccc6c
  41e1d2:	adc    al,0x3e
  41e1d4:	inc    ecx
  41e1d5:	aaa    
  41e1d6:	push   ebx
  41e1d7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e1d8:	inc    esp
  41e1d9:	xor    BYTE PTR [ebp+0x45af8a79],al
  41e1df:	cmp    BYTE PTR [ebp+ebx*1-0x115e04fd],dh
  41e1e6:	dec    esp
  41e1e7:	lahf   
  41e1e8:	out    dx,eax
  41e1e9:	outs   dx,DWORD PTR ds:[esi]
  41e1ea:	(bad)  
  41e1ee:	push   edx
  41e1ef:	xor    al,0x31
  41e1f1:	inc    ebx
  41e1f2:	fisubr WORD PTR ds:0x24f08bb4
  41e1f8:	pop    edx
  41e1f9:	sub    bh,BYTE PTR [ecx+ebx*1+0x1e]
  41e1fd:	mov    WORD PTR [ebx],gs
  41e1ff:	dec    esi
  41e200:	jmp    0xbb6f:0xa5db16f6
  41e207:	xchg   edi,eax
  41e208:	sbb    al,0xc8
  41e20a:	jno    0x41e1a1
  41e20c:	pop    ebx
  41e20d:	mov    bh,0xf1
  41e20f:	jmp    0xd7764264
  41e214:	fmul   QWORD PTR [edi+esi*8]
  41e217:	cld    
  41e218:	packssdw mm6,mm6
  41e21b:	jae    0x41e1ce
  41e21d:	sti    
  41e21e:	cmc    
  41e21f:	cwde   
  41e220:	cmp    esi,0x38
  41e223:	stc    
  41e224:	(bad)  
  41e225:	sub    BYTE PTR [eax+0x1b8c465],bl
  41e22b:	sub    eax,0x49f762a4
  41e230:	add    DWORD PTR [ebx],esi
  41e232:	push   esi
  41e233:	(bad)  
  41e234:	into   
  41e235:	pop    eax
  41e236:	or     dl,BYTE PTR [ebp+0x7d6b87a]
  41e23c:	sub    al,0x44
  41e23e:	stos   DWORD PTR es:[edi],eax
  41e23f:	xor    bl,BYTE PTR [ebp+0xd]
  41e242:	mov    al,0x7c
  41e244:	sub    al,0xc2
  41e246:	add    bl,BYTE PTR [esi-0x1a5b5b1]
  41e24c:	inc    edi
  41e24d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e24e:	cld    
  41e24f:	adc    BYTE PTR [edi-0x44],0x46
  41e253:	repnz stos BYTE PTR es:[edi],al
  41e255:	pushf  
  41e256:	jmp    0x6526:0xca994740
  41e25d:	adc    eax,0x9b8ace83
  41e262:	imul   ecx,DWORD PTR [eax+0x32128911],0xffffffaa
  41e269:	xor    eax,DWORD PTR [esi-0x10299f3a]
  41e26f:	sahf   
  41e270:	call   0xcd43a3
  41e275:	pop    edi
  41e276:	pop    esi
  41e277:	pop    ebx
  41e278:	leave  
  41e279:	ret    0xc
  41e27c:	or     BYTE PTR cs:[ecx-0x414e50ef],ch
  41e283:	aas    
  41e284:	or     BYTE PTR [ebp+0x2ce3fb71],dl
  41e28a:	mov    es,WORD PTR [edi+0x1b]
  41e28d:	xor    BYTE PTR [eax],al
  41e28f:	add    BYTE PTR ds:0x7f000003,dh
  41e295:	add    cl,0x62
  41e298:	or     eax,0xd96a933d
  41e29d:	mov    ebx,0xf99e1375
  41e2a2:	cwde   
  41e2a3:	mov    ah,0x2b
  41e2a5:	inc    esp
  41e2a6:	push   edx
  41e2a7:	jp     0x41e2f9
  41e2a9:	test   ch,ch
  41e2ab:	jmp    0x41e252
  41e2ad:	(bad)  
  41e2ae:	(bad)  
  41e2af:	mov    bl,BYTE PTR [ebp-0x42]
  41e2b2:	(bad)  
  41e2b4:	test   BYTE PTR [ebx],bl
  41e2b6:	ret    0xc917
  41e2b9:	repnz out 0xdd,al
  41e2bc:	sub    DWORD PTR [esp+eiz*4-0x169d169f],ebx
  41e2c3:	cwde   
  41e2c4:	(bad)  
  41e2c5:	ss mov edi,0xe754af18
  41e2cb:	sar    cl,cl
  41e2cd:	in     al,0x17
  41e2cf:	call   0x59db44f4
  41e2d4:	fisub  WORD PTR [ebx+edi*1+0x5e]
  41e2d8:	inc    ecx
  41e2d9:	loop   0x41e270
  41e2db:	mov    ds:0xd956cabf,al
  41e2e0:	inc    ecx
  41e2e1:	imul   edi,DWORD PTR [edi+0x66a553e2],0x9e88e05e
  41e2eb:	adc    bh,BYTE PTR [edi+0x3b4b3b45]
  41e2f1:	cmp    ebx,DWORD PTR [edi+0x31ef8265]
  41e2f7:	xrelease mov DWORD PTR [ecx+0x45],eax
  41e2fb:	xlat   BYTE PTR ds:[ebx]
  41e2fc:	and    WORD PTR [esi],0x89b
  41e301:	ja     0x41e322
  41e303:	dec    edi
  41e304:	mov    ds:0xe378ef18,eax
  41e309:	dec    ebp
  41e30a:	or     ecx,DWORD PTR [edx+edx*2]
  41e30d:	push   ss
  41e30e:	inc    esp
  41e30f:	cli    
  41e310:	push   eax
  41e311:	dec    edi
  41e312:	popa   
  41e313:	lea    esi,[edi-0x1f]
  41e316:	push   esp
  41e317:	lock xchg ecx,eax
  41e319:	xchg   ebx,eax
  41e31a:	pop    ds
  41e31b:	in     eax,0xaa
  41e31d:	in     al,dx
  41e31e:	int3   
  41e31f:	outs   dx,DWORD PTR ds:[esi]
  41e320:	jb     0x41e2c9
  41e322:	(bad)
  41e327:	sbb    edi,DWORD PTR [eax]
  41e329:	adc    ah,BYTE PTR [ebx-0x3c609038]
  41e32f:	mov    dh,BYTE PTR [ebx+0x7]
  41e332:	or     bl,BYTE PTR [edx]
  41e334:	jecxz  0x41e38b
  41e336:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e337:	and    eax,0xffdb0e8c
  41e33c:	call   0x1483fb17
  41e341:	outs   dx,DWORD PTR ds:[esi]
  41e342:	adc    ch,BYTE PTR [eax-0x69]
  41e345:	retf   
  41e346:	test   DWORD PTR [edi-0x6454ef91],edx
  41e34c:	cli    
  41e34d:	ficomp WORD PTR [ecx]
  41e34f:	icebp  
  41e350:	jb     0x41e3bb
  41e352:	jnp    0x41e314
  41e354:	div    BYTE PTR [ebx+0x33]
  41e357:	mov    al,0x25
  41e359:	enter  0xcde5,0x14
  41e35d:	jmp    0x76c7:0xda58cc80
  41e364:	sub    al,0xaf
  41e366:	cmp    al,0x16
  41e368:	lods   eax,DWORD PTR ds:[esi]
  41e369:	cmp    DWORD PTR [edi],0xf9929c39
  41e36f:	mov    BYTE PTR [edi],ch
  41e371:	cdq    
  41e372:	inc    DWORD PTR [ebp-0x32]
  41e375:	in     al,dx
  41e376:	sbb    dh,al
  41e378:	stos   BYTE PTR es:[edi],al
  41e379:	sti    
  41e37a:	rol    BYTE PTR [esi+edi*2+0x62],0x3d
  41e37f:	aad    0xf4
  41e381:	imul   esi,DWORD PTR [edi],0x4b
  41e384:	ins    DWORD PTR es:[edi],dx
  41e385:	mov    bl,0x35
  41e387:	out    dx,eax
  41e388:	jns    0x41e379
  41e38a:	mov    edx,0xa1b71f40
  41e38f:	(bad)  
  41e390:	stos   BYTE PTR es:[edi],al
  41e391:	sub    al,0xc5
  41e393:	jmp    0x41e38d
  41e395:	cmc    
  41e396:	cmp    ebp,DWORD PTR [esi+ebx*2+0x1d]
  41e39a:	cdq    
  41e39b:	jmp    0xa64cb20
  41e3a0:	xor    cl,0x36
  41e3a3:	out    dx,eax
  41e3a4:	fimul  WORD PTR [ebp+0x51]
  41e3a7:	lods   al,BYTE PTR ds:[esi]
  41e3a8:	clc    
  41e3a9:	lahf   
  41e3aa:	(bad)  [edi+ecx*8]
  41e3ad:	mov    ecx,DWORD PTR [ecx-0x63]
  41e3b0:	loopne 0x41e431
  41e3b2:	mov    edi,0xad881cbd
  41e3b7:	jb     0x41e3d7
  41e3b9:	in     eax,0xc4
  41e3bb:	push   ds
  41e3bc:	pop    eax
  41e3bd:	xlat   BYTE PTR ds:[ebx]
  41e3be:	or     eax,ebp
  41e3c0:	mov    ds:0x78662547,al
  41e3c5:	mov    dh,0xcf
  41e3c7:	jl     0x41e349
  41e3c9:	pop    edx
  41e3ca:	lds    ebx,FWORD PTR [ebp+0x3942e835]
  41e3d0:	imul   DWORD PTR [edx]
  41e3d2:	mov    edx,0x9396429b
  41e3d7:	mov    ebx,0x6bbeaaba
  41e3dc:	sahf   
  41e3dd:	sub    ebp,DWORD PTR [eax+eax*4-0x65e936e3]
  41e3e4:	push   ds
  41e3e5:	dec    esp
  41e3e6:	sub    BYTE PTR [edi],al
  41e3e8:	adc    esi,esp
  41e3ea:	gs mov dh,0x7f
  41e3ed:	mov    al,0xd0
  41e3ef:	sub    al,0x2a
  41e3f1:	in     eax,dx
  41e3f2:	fidivr WORD PTR [edi]
  41e3f4:	pop    esp
  41e3f5:	fadd   QWORD PTR [ebx+ecx*1]
  41e3f8:	ins    BYTE PTR es:[edi],dx
  41e3f9:	xchg   edx,eax
  41e3fa:	lods   al,BYTE PTR ds:[esi]
  41e3fb:	mov    eax,ds:0xd1bc8a9a
  41e400:	fist   WORD PTR [ebx+0x60544430]
  41e406:	shl    DWORD PTR [eax+0x4d18e0ba],1
  41e40c:	or     DWORD PTR [esi-0x7f],esi
  41e40f:	lds    edi,FWORD PTR [ebx]
  41e411:	fs mov al,0x68
  41e414:	int    0x94
  41e416:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e417:	sbb    BYTE PTR [ebx+0x307a320],0x78
  41e41e:	add    DWORD PTR [edi],edx
  41e420:	pop    esi
  41e421:	fld    QWORD PTR [edi-0x2f4fb73]
  41e427:	js     0x41e3c2
  41e429:	mov    DWORD PTR [esi+edi*2+0x4eff3ea1],esp
  41e430:	popa   
  41e431:	push   ss
  41e432:	sub    BYTE PTR [edi*4+0x11d644dd],ah
  41e439:	call   0xfd9f3321
  41e43e:	jo     0x41e42d
  41e440:	loopne 0x41e458
  41e442:	xchg   edx,eax
  41e443:	xchg   edi,eax
  41e444:	dec    edi
  41e445:	pop    esi
  41e446:	enter  0x9f8d,0xc6
  41e44a:	jmp    0x41e463
  41e44c:	mov    edi,0xe787bc6d
  41e451:	hlt    
  41e452:	xchg   edx,eax
  41e453:	js     0x41e4ad
  41e455:	xor    ebp,esp
  41e457:	dec    esp
  41e458:	xor    DWORD PTR [eax-0x53],ecx
  41e45b:	mov    cl,0xf6
  41e45d:	and    al,0x5c
  41e45f:	stc    
  41e460:	jmp    0x41e4da
  41e462:	push   cs
  41e463:	add    eax,0x83f60f4d
  41e468:	add    eax,0xfafe91a5
  41e46d:	add    BYTE PTR [edi+0x702689d8],cl
  41e473:	or     eax,0xe0667284
  41e478:	mov    WORD PTR [edx+eiz*1+0x4c],cs
  41e47c:	aad    0xb9
  41e47e:	js     0x41e4b7
  41e480:	mov    eax,ds:0x4e7f65
  41e485:	dec    edi
  41e486:	or     bh,dl
  41e488:	vpcmpgtb xmm7,xmm7,XMMWORD PTR [ebx-0x12]
  41e48d:	mov    al,0x6f
  41e48f:	cmp    DWORD PTR [esi+0x61b5e11d],esp
  41e495:	lods   eax,DWORD PTR ds:[esi]
  41e496:	inc    ebp
  41e497:	dec    edi
  41e498:	xchg   BYTE PTR [ecx],bl
  41e49a:	cmp    DWORD PTR [edx],edx
  41e49c:	in     eax,dx
  41e49d:	in     eax,0x4a
  41e49f:	adc    DWORD PTR [ebx],0xffffffc2
  41e4a2:	repz jno 0x41e4b4
  41e4a5:	pop    eax
  41e4a6:	cmp    esi,0xd09ee14
  41e4ac:	call   DWORD PTR [ebx-0x4c745bf2]
  41e4b2:	ins    BYTE PTR es:[edi],dx
  41e4b3:	lods   eax,DWORD PTR ds:[esi]
  41e4b4:	jno    0x41e50e
  41e4b6:	xor    al,BYTE PTR [ebx+0x53fbc484]
  41e4bc:	clc    
  41e4bd:	retf   
  41e4be:	pop    es
  41e4bf:	mov    edx,DWORD PTR [eax+ebp*2+0x6c]
  41e4c3:	jns    0x41e4a8
  41e4c5:	jo     0x41e469
  41e4c7:	adc    esp,DWORD PTR [ebx+edx*1]
  41e4ca:	add    BYTE PTR [eax+0x31b64a49],dh
  41e4d0:	and    BYTE PTR [edx-0x2e],bl
  41e4d3:	mov    al,ds:0xd457fb90
  41e4d8:	dec    eax
  41e4d9:	mov    bl,0x54
  41e4db:	pop    ebx
  41e4dc:	xor    DWORD PTR [ebp+0x28],ebp
  41e4df:	pop    ss
  41e4e0:	sub    eax,0xdc37b89f
  41e4e5:	adc    bh,ah
  41e4e7:	or     ecx,DWORD PTR [ebp-0x71]
  41e4ea:	aam    0x68
  41e4ec:	sbb    BYTE PTR [ebp-0x37927147],0x2c
  41e4f3:	jo     0x41e4f3
  41e4f5:	jo     0x41e4ba
  41e4f7:	sbb    al,0x7
  41e4f9:	(bad)  [ebx+0x26774410]
  41e4ff:	xor    DWORD PTR [ebx+ebx*1-0x56],esp
  41e503:	mov    ebp,0xd7a7191e
  41e508:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e509:	scas   eax,DWORD PTR es:[edi]
  41e50a:	clc    
  41e50b:	push   ebx
  41e50c:	or     ah,BYTE PTR [ebx-0x587ac911]
  41e512:	pop    ds
  41e513:	jl     0x41e4f6
  41e515:	aas    
  41e516:	fs inc ecx
  41e518:	in     al,0x16
  41e51a:	addr16 int 0x40
  41e51d:	mov    edx,0x8a0bebde
  41e522:	ret    0xb36f
  41e525:	std    
  41e526:	inc    BYTE PTR [ebp+ebx*1+0x73290460]
  41e52d:	stos   DWORD PTR es:[edi],eax
  41e52e:	xor    eax,0xb5a41163
  41e533:	dec    ebp
  41e534:	sbb    DWORD PTR [edi],ebx
  41e536:	out    0x47,al
  41e538:	xchg   edi,eax
  41e539:	adc    eax,0x6d65744c
  41e53e:	jg     0x41e522
  41e540:	or     BYTE PTR [edx+0x12],dl
  41e543:	cmp    dl,BYTE PTR [ecx+0x70]
  41e546:	test   eax,0xe87ad16b
  41e54b:	push   ss
  41e54c:	ins    BYTE PTR es:[edi],dx
  41e54d:	mov    al,ds:0x653ce07
  41e552:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e553:	cld    
  41e554:	jno    0x41e5b5
  41e556:	fsub   QWORD PTR [eax+ebx*2]
  41e559:	mov    ch,0x12
  41e55b:	cmp    dh,ch
  41e55d:	test   BYTE PTR fs:[ebp-0x22c46e9e],ah
  41e564:	push   ss
  41e565:	rol    BYTE PTR [edi+0x4c],cl
  41e568:	push   ecx
  41e569:	stos   DWORD PTR es:[edi],eax
  41e56a:	cmp    DWORD PTR [eax+0x1c7ed3d6],ecx
  41e570:	sbb    BYTE PTR [edi+edx*4+0x3bc5f52b],0xc5
  41e578:	xchg   ebx,eax
  41e579:	pop    esi
  41e57a:	iret   
  41e57b:	cli    
  41e57c:	xchg   edx,eax
  41e57d:	pop    esp
  41e57e:	inc    edx
  41e57f:	fcom   QWORD PTR [ecx+eax*8+0x7d72caff]
  41e586:	jb     0x41e594
  41e588:	std    
  41e589:	aam    0xe9
  41e58b:	xor    al,BYTE PTR [ebp-0x43d762a]
  41e591:	adc    BYTE PTR [esi+ebx*4+0x1a],0x3f
  41e596:	sbb    BYTE PTR [esp+ecx*2-0x3a75b85d],0xf5
  41e59e:	out    dx,al
  41e59f:	mov    edx,0xa24a72a2
  41e5a4:	addr16 (bad) 
  41e5a6:	mov    eax,0xf05874ee
  41e5ab:	pop    esi
  41e5ac:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e5ad:	pop    ds
  41e5ae:	inc    ecx
  41e5af:	inc    esi
  41e5b0:	inc    ecx
  41e5b1:	dec    edi
  41e5b2:	enter  0x8ae0,0x16
  41e5b6:	push   edi
  41e5b7:	mov    al,ds:0x71fbb691
  41e5bc:	call   0x4040:0x81b86fd9
  41e5c3:	or     al,BYTE PTR [edi]
  41e5c5:	pop    ds
  41e5c6:	dec    ebp
  41e5c7:	.byte 0xd9
  41e5c8:	dec    ebp

Disassembly of section .rsrc:

00428000 <.rsrc>:
  428000:	jne    0x427fd4
  428002:	fcmovnu st,st(4)
  428004:	fcmovne st,st(1)
  428006:	in     eax,0xe5
  428008:	in     eax,0xcd
  42800a:	test   eax,0x565656e7
  42800f:	push   esi
  428010:	int    0xa9
  428012:	shr    eax,1
  428014:	push   esi
  428015:	push   esi
  428016:	push   esi
  428017:	shr    BYTE PTR [ecx-0x175694a1],cl
  42801d:	ror    BYTE PTR [ebp-0x19],cl
  428020:	mov    ebp,0xe57f48bb
  428025:	in     eax,0x9c
  428027:	retf   
  428028:	lea    eax,[ebx+esi*4+0x4d6b660b]
  42802f:	leave  
  428030:	ror    BYTE PTR [ebp-0x19],cl
  428033:	pushf  
  428034:	retf   
  428035:	or     esp,DWORD PTR [esi+0x6b]
  428038:	dec    ebp
  428039:	sbb    edx,edx
  42803b:	dec    ebp
  42803c:	out    0xd2,eax
  42803e:	dec    ebp
  42803f:	out    0x9c,eax
  428041:	retf   
  428042:	or     esp,DWORD PTR [esi+0x6b]
  428045:	lea    edx,[ebp+0x56]
  428048:	push   esi
  428049:	push   esi
  42804a:	arpl   ax,cx
  42804c:	and    BYTE PTR [edx],ah
  42804e:	sub    ebp,DWORD PTR [ebx+0x4d]
  428051:	pop    edi
  428052:	imul   ecx,DWORD PTR [ebp+0x5f],0x20
  428056:	bound  ebp,QWORD PTR [ebx]
  428058:	imul   ecx,DWORD PTR [ebp+0x5f],0x6b
  42805c:	dec    ebp
  42805d:	pop    edi
  42805e:	int    0xa9
  428060:	pop    edi
  428061:	cwde   
  428062:	in     eax,0xe5
  428064:	in     eax,0xcd
  428066:	test   eax,0xe5e5385f
  42806b:	in     eax,0xd2
  42806d:	dec    ebp
  42806e:	out    0x9c,eax
  428070:	retf   
  428071:	or     esp,DWORD PTR [esi+0x6b]
  428074:	dec    ebp
  428075:	pop    edi
  428076:	ror    BYTE PTR [ebp-0x19],cl
  428079:	pushf  
  42807a:	retf   
  42807b:	or     esp,DWORD PTR [esi+0x6b]
  42807e:	dec    ebp
  42807f:	pop    edi
  428080:	int    0xa9
  428082:	fsubr  st,st(4)
  428084:	jbe    0x42806b
  428086:	in     eax,0xcd
  428088:	test   eax,0xe5e5b0f9
  42808d:	in     eax,0xcd
  42808f:	test   eax,0xe5e5415f
  428094:	in     eax,0x8d
  428096:	hlt    
  428097:	dec    edi
  428098:	push   esi
  428099:	push   esi
  42809a:	push   esi
  42809b:	lea    edi,[ebp+0x2]
  42809e:	push   esi
  42809f:	push   esi
  4280a0:	push   esi
  4280a1:	out    0x84,eax
  4280a3:	xchg   esp,eax
  4280a4:	in     eax,0xe5
  4280a6:	push   esi
  4280a7:	dec    ebp
  4280a8:	pop    edi
  4280a9:	jle    0x428072
  4280ab:	push   esi
  4280ac:	dec    ebp
  4280ad:	stc    
  4280ae:	jle    0x42810d
  4280b0:	push   esi
  4280b1:	dec    ebp
  4280b2:	fdivr  DWORD PTR [esi+0x54]
  4280b5:	int    0xa9
  4280b7:	fmul   DWORD PTR [eax+0x38]
  4280ba:	in     eax,0xe5
  4280bc:	shr    BYTE PTR [ecx-0x40da6319],cl
  4280c2:	dec    ecx
  4280c3:	jg     0x4280aa
  4280c5:	in     eax,0xb
  4280c7:	int    0x6b
  4280c9:	test   eax,0xe7a9d25f
  4280ce:	push   ds
  4280cf:	jo     0x428139
  4280d1:	push   esi
  4280d2:	push   esi
  4280d3:	push   esi
  4280d4:	in     eax,0x9c
  4280d6:	and    eax,0xa96bcd0b
  4280db:	jmp    0xe5e5:0xe51c018b
  4280e2:	imul   esi,DWORD PTR [edi+0x56565668],0xffffffd2
  4280e9:	cmp    BYTE PTR [edi+0x6b],bh
  4280ec:	mov    bh,0x9b
  4280ee:	push   esi
  4280ef:	push   esi
  4280f0:	push   esi
  4280f1:	sar    BYTE PTR [eax],cl
  4280f3:	add    ch,BYTE PTR [ebx-0x49]
  4280f6:	pop    ds
  4280f7:	push   esi
  4280f8:	push   esi
  4280f9:	push   esi
  4280fa:	shr    BYTE PTR [ecx+0x688d8de8],cl
  428100:	push   esi
  428101:	push   esi
  428102:	push   esi
  428103:	imul   ebp,DWORD PTR [edi-0x3d],0xffffffb3
  428107:	in     eax,0xe5
  428109:	shr    BYTE PTR [ecx-0x64727218],cl
  42810f:	push   esi
  428110:	push   esi
  428111:	push   esi
  428112:	imul   ebp,DWORD PTR [edi-0x13],0xffffffb3
  428116:	in     eax,0xe5
  428118:	shr    BYTE PTR [ecx-0x1781a918],cl
  42811e:	lea    ecx,[ebp+0x5656561f]
  428124:	imul   ebp,DWORD PTR [edi-0x70],0xffffffb3
  428128:	in     eax,0xe5
  42812a:	out    0xaa,eax
  42812c:	push   ebx
  42812d:	in     eax,0xe5
  42812f:	mov    bh,0xd1
  428131:	xchg   esi,eax
  428132:	stos   BYTE PTR es:[edi],al
  428133:	js     0x4281ab
  428135:	in     eax,0xe5
  428137:	shr    BYTE PTR [ecx+0x3559d2e8],cl
  42813d:	mov    bl,0xe5
  42813f:	in     eax,0xd2
  428141:	pop    edi
  428142:	shr    BYTE PTR [ecx+0x3559d2e8],cl
  428148:	mov    bl,0xe5
  42814a:	in     eax,0xd2
  42814c:	in     eax,0xb
  42814e:	out    dx,eax
  42814f:	cmp    al,0xd2
  428151:	dec    ebp
  428152:	call   0xb41aed29
  428157:	in     eax,0xe5
  428159:	lea    ecx,[ecx+eiz*1+0x56]
  42815d:	push   esi
  42815e:	push   esi
  42815f:	shl    BYTE PTR ds:[ebp-0x18],cl
  428163:	rcr    BYTE PTR [esi-0x1a1a4c5b],cl
  428169:	rol    dl,cl
  42816b:	or     edx,DWORD PTR [ecx-0x1a1a1a91]
  428171:	and    BYTE PTR [esi+edx*2],al
  428174:	shl    BYTE PTR [ebp+0x3ee5e5e5],0x56
  42817b:	jmp    0x4281dd
  42817d:	push   esi
  42817e:	jle    0x428168
  428180:	int    0xa9
  428182:	in     eax,dx
  428183:	pop    edi
  428184:	or     esp,ebp
  428186:	jbe    0x4281de
  428188:	jle    0x428172
  42818a:	shr    BYTE PTR [ecx-0x76a62d18],cl
  428190:	mov    bl,0xe5
  428192:	in     eax,0xcd
  428194:	test   eax,0x294fb90
  428199:	xchg   DWORD PTR [edx],ecx
  42819b:	int    0xa9
  42819d:	(bad)
  4281a2:	xchg   ecx,eax
  4281a3:	inc    esi
  4281a4:	or     ebx,DWORD PTR [edi+ebx*8+0x1d35a9cd]
  4281ab:	jbe    0x42813c
  4281ad:	pop    edi
  4281ae:	int    0xa9
  4281b0:	pop    eax
  4281b1:	add    bl,bh
  4281b3:	sbb    eax,0x8a9cd2e
  4281b8:	mov    bl,0x94
  4281ba:	scas   al,BYTE PTR es:[edi]
  4281bb:	jbe    0x42818a
  4281bd:	test   eax,0x8ffb87c3
  4281c2:	call   0x56523994
  4281c7:	push   esi
  4281c8:	push   esi
  4281c9:	inc    esi
  4281ca:	or     ebx,DWORD PTR [edi+ebx*8+0x1d59a9cd]
  4281d1:	jbe    0x428162
  4281d3:	pop    edi
  4281d4:	int    0xa9
  4281d6:	stos   BYTE PTR es:[edi],al
  4281d7:	add    bl,bh
  4281d9:	sbb    eax,0x6fa9cd2e
  4281de:	mov    bl,0x94
  4281e0:	scas   al,BYTE PTR es:[edi]
  4281e1:	jbe    0x4281b0
  4281e3:	test   eax,0xa6fb87a5
  4281e8:	call   0xe5e94bd4
  4281ed:	in     eax,0x9b
  4281ef:	shr    BYTE PTR [ecx-0x6fa62d18],cl
  4281f5:	mov    bl,0xe5
  4281f7:	in     eax,0x56
  4281f9:	jg     0x4281e2
  4281fb:	test   al,0x1a
  4281fd:	in     eax,0xe5
  4281ff:	mov    bh,0xd1
  428201:	jle    0x42823b
  428203:	shr    BYTE PTR [ecx-0x273f2d18],cl
  428209:	mov    bl,0xe5
  42820b:	in     eax,0x56
  42820d:	jle    0x4281f7
  42820f:	shr    BYTE PTR [ecx-0x76a62d18],cl
  428215:	mov    bl,0xe5
  428217:	in     eax,0xe7
  428219:	inc    ebp
  42821a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42821b:	in     eax,0xe5
  42821d:	fwait
  42821e:	push   esi
  42821f:	arpl   WORD PTR [edi+esi*4],ax
  428222:	sar    DWORD PTR [esi+0x47],1
  428225:	shr    BYTE PTR [ecx-0x273f2d18],cl
  42822b:	mov    bl,0xe5
  42822d:	in     eax,0x56
  42822f:	jle    0x428219
  428231:	shr    BYTE PTR [ecx-0x76a62d18],cl
  428237:	mov    bl,0xe5
  428239:	in     eax,0xe7
  42823b:	and    BYTE PTR [esi+0x569be5e5],0x63
  428242:	push   eax
  428243:	shr    BYTE PTR [ecx-0x27b22d19],cl
  428249:	pushf  
  42824a:	and    eax,0xc118cd0b
  42824f:	xchg   esi,eax
  428250:	stos   BYTE PTR es:[edi],al
  428251:	jle    0x428206
  428253:	in     eax,0xe5
  428255:	jns    0x4282ba
  428257:	mov    bl,0xe5
  428259:	in     eax,0xcd
  42825b:	test   eax,0xe5e5e5d4
  428260:	in     eax,0x56
  428262:	jle    0x42824c
  428264:	push   esi
  428265:	jle    0x42824f
  428267:	shr    BYTE PTR [ecx-0x57a62d18],cl
  42826d:	mov    bl,0xe5
  42826f:	in     eax,0xe7
  428271:	xchg   ebx,eax
  428272:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  428273:	in     eax,0xe5
  428275:	fwait
  428276:	shr    BYTE PTR [ecx-0x6fa62d18],cl
  42827c:	mov    bl,0xe5
  42827e:	in     eax,0x56
  428280:	jg     0x428269
  428282:	mov    esi,0xd2e5e51a
  428287:	dec    ebp
  428288:	call   0xb34aee5f
  42828d:	in     eax,0xe5
  42828f:	imul   esi,DWORD PTR [ebx-0x2d17562e],0x59
  428296:	fdiv   DWORD PTR [ebx+0x7ed2e5e5]
  42829c:	call   0x6ba253bf
  4282a1:	test   eax,0x8dd19cdb
  4282a6:	dec    esp
  4282a7:	orps   xmm2,XMMWORD PTR [esi+0x56]
  4282ab:	out    0xee,eax
  4282ad:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4282ae:	in     eax,0xe5
  4282b0:	fwait
  4282b1:	shr    BYTE PTR [ecx+0x859d2e8],cl
  4282b7:	mov    bl,0xe5
  4282b9:	in     eax,0x56
  4282bb:	jg     0x42828f
  4282bd:	test   eax,0x6b5056db
  4282c2:	test   eax,0xe8a9d2ba
  4282c7:	rcr    BYTE PTR [ecx-0x28],cl
  4282ca:	mov    bl,0xe5
  4282cc:	in     eax,0xd2
  4282ce:	jle    0x4282b8
  4282d0:	push   ds
  4282d1:	rcr    DWORD PTR [edi+0x6b],1
  4282d4:	test   eax,0x8dd19cdb
  4282d9:	jne    0x42826c
  4282db:	out    0x3e,eax
  4282dd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4282de:	in     eax,0xe5
  4282e0:	fwait
  4282e1:	shr    BYTE PTR [ecx+0x859d2e8],cl
  4282e7:	mov    bl,0xe5
  4282e9:	in     eax,0x56
  4282eb:	jg     0x4282bf
  4282ed:	test   eax,0x1e5056db
  4282f2:	iret   
  4282f3:	inc    ebx
  4282f4:	in     eax,0xd2
  4282f6:	test   eax,0xe0b81e43
  4282fb:	push   ds
  4282fc:	sar    DWORD PTR ds:0xba75569b,1
  428302:	mov    bh,0xd1
  428304:	jle    0x4282d9
  428306:	jl     0x4282b1
  428308:	stc    
  428309:	popf   
  42830a:	jg     0x4282de
  42830c:	test   eax,0xd859d2e8
  428311:	mov    bl,0xe5
  428313:	in     eax,0xd2
  428315:	jle    0x4282ff
  428317:	push   ds
  428318:	rcr    DWORD PTR [edi+0x6b],1
  42831b:	test   eax,0x8dd19cdb
  428320:	jne    0x42830f
  428322:	out    0x49,eax
  428324:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  428325:	in     eax,0xe5
  428327:	fwait
  428328:	shr    BYTE PTR [ecx+0x5859d2e8],cl
  42832e:	mov    bl,0xe5
  428330:	in     eax,0x56
  428332:	jg     0x428306
  428334:	test   eax,0x6b5056db
  428339:	test   eax,0x43a956f9
  42833e:	push   ds
  42833f:	mov    ds:0xc4325043,al
  428344:	shr    BYTE PTR [ecx-0x17812d2f],cl
  42834a:	pushf  
  42834b:	and    eax,0x4c8dcd0b
  428350:	dec    edi
  428351:	push   esi
  428352:	push   esi
  428353:	push   esi
  428354:	out    0xd9,eax
  428356:	out    0xe5,al
  428358:	in     eax,0x9b
  42835a:	shr    BYTE PTR [ecx-0x17812d19],cl
  428360:	pushf  
  428361:	and    eax,0x4c8dcd0b
  428366:	add    dl,BYTE PTR [esi+0x56]
  428369:	push   esi
  42836a:	out    0x25,eax
  42836c:	out    0xe5,al
  42836e:	in     eax,0x9b
  428370:	push   esi
  428371:	jne    0x42836c
  428373:	ror    BYTE PTR [ebp-0x19],cl
  428376:	pushf  
  428377:	retf   
  428378:	or     esi,DWORD PTR [eax]
  42837a:	sbb    BYTE PTR [esi+0x7e],ah
  42837d:	loopne 0x42834c
  42837f:	test   eax,0xe5e5b3d4
  428384:	in     eax,0xd2
  428386:	test   eax,0x5f4dd2d1
  42838b:	pushf  
  42838c:	and    eax,0x495faa8d
  428391:	jg     0x428378
  428393:	in     eax,0x6b
  428395:	test   eax,0xd4a9d25f
  42839a:	mov    bh,0xd1
  42839c:	je     0x428360
  42839e:	shr    BYTE PTR [ecx-0x15b22d2f],cl
  4283a4:	pushf  
  4283a5:	and    eax,0x495faa8d
  4283aa:	jg     0x428391
  4283ac:	in     eax,0x6b
  4283ae:	test   eax,0xd1a9d2ea
  4283b3:	pushf  
  4283b4:	and    eax,0x563099b9
  4283b9:	push   esi
  4283ba:	pop    esi
  4283bb:	or     cx,WORD PTR [ebp-0x28]
  4283bf:	shr    BYTE PTR [ecx-0x693ee7a1],cl
  4283c5:	inc    eax
  4283c6:	xchg   ecx,eax
  4283c7:	stos   DWORD PTR es:[edi],eax
  4283c8:	push   esi
  4283c9:	push   esi
  4283ca:	shr    BYTE PTR [ecx+0x5f4dd2ea],cl
  4283d0:	sbb    BYTE PTR [esi+0x7e],ah
  4283d3:	scas   al,BYTE PTR es:[edi]
  4283d4:	push   esi
  4283d5:	jle    0x4283bf
  4283d7:	lea    ebp,[ecx-0x441864e7]
  4283dd:	cmp    eax,0xa96be5e5
  4283e2:	leave  
  4283e3:	popf   
  4283e4:	add    dl,dl
  4283e6:	dec    ebp
  4283e7:	rcl    edx,1
  4283e9:	test   eax,0xbcb9cc9
  4283ee:	xor    BYTE PTR ds:0xc9a21e5f,bh
  4283f4:	in     eax,0x96
  4283f6:	stos   BYTE PTR es:[edi],al
  4283f7:	rol    BYTE PTR [eiz*8+0x197ed2e5],1
  4283fe:	mov    bh,0x36
  428400:	xchg   esi,eax
  428401:	stos   BYTE PTR es:[edi],al
  428402:	push   esp
  428403:	add    al,0xe5
  428405:	in     eax,0xd2
  428407:	test   eax,0xd859d2e8
  42840c:	mov    bl,0xe5
  42840e:	in     eax,0x20
  428410:	add    al,0x68
  428412:	in     eax,0x7f
  428414:	in     eax,0xe5
  428416:	push   esi
  428417:	jle    0x428432
  428419:	and    ch,ah
  42841b:	push   esi
  42841c:	fild   QWORD PTR [ebx-0x57]
  428420:	stc    
  428421:	mov    bh,0xd1
  428423:	xchg   esi,eax
  428424:	stos   BYTE PTR es:[edi],al
  428425:	push   cs
  428426:	jbe    0x42840d
  428428:	in     eax,0x1e
  42842a:	iret   
  42842b:	pop    edi
  42842c:	in     eax,0x1e
  42842e:	mov    ds:0x1041e519,al
  428433:	ror    BYTE PTR [ebp-0x37],cl
  428436:	pop    esi
  428437:	data16 mov bl,bh
  42843a:	mov    bl,0x56
  42843c:	test   eax,0xd2506f5f
  428441:	jne    0x4284a2
  428443:	cmp    BYTE PTR [eax],bl
  428445:	jne    0x428460
  428447:	xor    ah,bl
  428449:	shr    BYTE PTR [ecx-0x27a62d18],cl
  42844f:	mov    bl,0xe5
  428451:	in     eax,0x68
  428453:	in     eax,0x59
  428455:	in     eax,0xe5
  428457:	and    ch,ah
  428459:	push   esi
  42845a:	jle    0x428425
  42845c:	push   esi
  42845d:	fwait
  42845e:	sbb    al,0xd2
  428460:	test   eax,0x197e6bf9
  428465:	int    0xa9
  428467:	jmp    0xe820:0x56565656
  42846e:	imul   ebp,DWORD PTR [ecx+0x11b76bc9],0x56
  428475:	push   esi
  428476:	push   esi
  428477:	pop    ds
  428478:	imul   ebp,DWORD PTR [ecx-0x15b22d28],0xffffff9c
  42847f:	retf   
  428480:	or     esi,DWORD PTR [eax]
  428482:	imul   ecx,DWORD PTR [ebp-0x48],0xffffffd2
  428486:	dec    ebp
  428487:	jmp    0x4d6b:0x300bcb9c
  42848e:	pop    edi
  42848f:	int    0xa9
  428491:	xchg   ebp,eax
  428492:	ins    BYTE PTR es:[edi],dx
  428493:	mov    eax,0xb7cd5656
  428498:	mov    edx,DWORD PTR [esi+0x56]
  42849b:	push   esi
  42849c:	std    
  42849d:	push   esi
  42849e:	push   esi
  42849f:	push   esi
  4284a0:	int    0xb7
  4284a2:	je     0x4284fa
  4284a4:	push   esi
  4284a5:	push   esi
  4284a6:	xchg   edx,eax
  4284a7:	push   esi
  4284a8:	push   esi
  4284a9:	push   esi
  4284aa:	int    0xb7
  4284ac:	outs   dx,BYTE PTR ds:[esi]
  4284ad:	push   esi
  4284ae:	push   esi
  4284af:	push   esi
  4284b0:	into   
  4284b1:	push   esi
  4284b2:	push   esi
  4284b3:	push   esi
  4284b4:	int    0xb7
  4284b6:	jmp    0x9598db11
  4284bb:	push   esi
  4284bc:	push   esi
  4284bd:	push   esi
  4284be:	int    0xa9
  4284c0:	mov    edx,0x565656f1
  4284c5:	int    0xa9
  4284c7:	(bad)  [esi]
  4284c9:	push   esi
  4284ca:	push   esi
  4284cb:	push   esi
  4284cc:	ror    BYTE PTR [ebp-0x16],cl
  4284cf:	pushf  
  4284d0:	retf   
  4284d1:	imul   edi,DWORD PTR [esi-0x34],0xffffffd2
  4284d5:	jne    0x4284a3
  4284d7:	or     esi,DWORD PTR [eax]
  4284d9:	sbb    BYTE PTR [ebp+0x764baa96],ch
  4284df:	in     eax,0xe5
  4284e1:	jns    0x4284e9
  4284e3:	jbe    0x4284ca
  4284e5:	in     eax,0xd2
  4284e7:	dec    ebp
  4284e8:	mov    eax,0x5ecc75d2
  4284ed:	lods   eax,DWORD PTR ds:[esi]
  4284ee:	ror    BYTE PTR [ebp-0x6b],cl
  4284f1:	pushf  
  4284f2:	retf   
  4284f3:	or     esi,DWORD PTR [eax]
  4284f5:	sbb    BYTE PTR [ebp+0x76fbee96],ch
  4284fb:	in     eax,0xe5
  4284fd:	ror    BYTE PTR [ebp+0x5656568b],cl
  428503:	shl    BYTE PTR [ebp-0x6b],cl
  428506:	pushf  
  428507:	retf   
  428508:	pushf  
  428509:	jae    0x428516
  42850b:	mov    WORD PTR [ebx],cs
  42850d:	xor    BYTE PTR [esi+0x75d2f0af],dl
  428513:	mov    eax,0x5ecc7ed2
  428518:	xchg   edx,eax
  428519:	sbb    cl,dh
  42851b:	xchg   edi,eax
  42851c:	add    dl,dl
  42851e:	dec    ebp
  42851f:	xchg   ebp,eax
  428520:	pushf  
  428521:	retf   
  428522:	or     esi,DWORD PTR [eax]
  428524:	jns    0x4284d3
  428526:	in     eax,0xe5
  428528:	in     eax,0xd2
  42852a:	lea    esi,[esi+edx*2+0x56]
  42852e:	push   esi
  42852f:	shl    BYTE PTR [ebp-0x6b],cl
  428532:	pushf  
  428533:	retf   
  428534:	pushf  
  428535:	jae    0x428542
  428537:	mov    WORD PTR [ebx],cs
  428539:	xor    BYTE PTR [esi+0x75d2f0af],dl
  42853f:	mov    eax,0x5ecc7ed2
  428544:	xchg   edx,eax
  428545:	sbb    cl,dh
  428547:	xchg   edi,eax
  428548:	dec    ecx
  428549:	ror    BYTE PTR [ebp+0x5656568b],cl
  42854f:	jns    0x4285a9
  428551:	in     eax,0xe5
  428553:	in     eax,0xd2
  428555:	lea    ebp,[esi+0x56]
  428558:	push   esi
  428559:	push   esi
  42855a:	shl    BYTE PTR [ebp-0x6b],cl
  42855d:	pushf  
  42855e:	retf   
  42855f:	pushf  
  428560:	jae    0x42856d
  428562:	mov    WORD PTR [ebx],cs
  428564:	xor    BYTE PTR [esi+0x75d2f0af],dl
  42856a:	mov    eax,0x5ecc7ed2
  42856f:	xchg   edx,eax
  428570:	sbb    cl,dh
  428572:	xchg   edi,eax
  428573:	pop    edi
  428574:	ror    BYTE PTR [ebp+0x56565674],cl
  42857a:	popf   
  42857b:	jmp    0x572c1352
  428580:	push   esi
  428581:	push   esi
  428582:	shl    BYTE PTR [ebp-0x6b],cl
  428585:	pushf  
  428586:	retf   
  428587:	pushf  
  428588:	jae    0x428595
  42858a:	mov    WORD PTR [ebx],cs
  42858c:	xor    BYTE PTR [esi+0x75d2f0af],dl
  428592:	mov    eax,0x5ecc7ed2
  428597:	xchg   edx,eax
  428598:	sbb    cl,dh
  42859a:	xchg   edi,eax
  42859b:	pop    edi
  42859c:	ror    BYTE PTR [ebp+0x5656566e],cl
  4285a2:	popf   
  4285a3:	cmp    edx,edx
  4285a5:	dec    ebp
  4285a6:	mov    edx,0x9c9575d2
  4285ab:	retf   
  4285ac:	pushf  
  4285ad:	jae    0x4285ba
  4285af:	mov    WORD PTR [ebx],cs
  4285b1:	xor    BYTE PTR [esi+0x75d2f0af],dl
  4285b7:	mov    eax,0x5ecc7ed2
  4285bc:	xchg   edx,eax
  4285bd:	sbb    cl,dh
  4285bf:	xchg   edi,eax
  4285c0:	pop    edi
  4285c1:	ror    BYTE PTR [ebp+0x565656e9],cl
  4285c7:	popf   
  4285c8:	and    edx,edx
  4285ca:	dec    ebp
  4285cb:	fcmovnbe st,st(2)
  4285cd:	jne    0x428564
  4285cf:	pushf  
  4285d0:	retf   
  4285d1:	pushf  
  4285d2:	jae    0x4285df
  4285d4:	xor    BYTE PTR [ebx],cl
  4285d6:	mov    WORD PTR [esi+0x75d2f0af],ss
  4285dc:	mov    eax,0x5ecc7ed2
  4285e1:	xchg   edx,eax
  4285e2:	sbb    cl,dh
  4285e4:	ror    BYTE PTR [ebp-0x46],cl
  4285e7:	inc    ecx
  4285e8:	or     edx,edx
  4285ea:	dec    ebp
  4285eb:	fcmovnbe st,st(2)
  4285ed:	jne    0x428584
  4285ef:	pushf  
  4285f0:	jae    0x42858e
  4285f2:	retf   
  4285f3:	or     ecx,DWORD PTR [ebx+ecx*1-0xf5069d0]
  4285fa:	imul   ecx,DWORD PTR [ebp+0x5f],0xffffffd2
  4285fe:	dec    ebp
  4285ff:	pop    edi
  428600:	imul   ecx,DWORD PTR [ebp-0x7],0xffffffd2
  428604:	dec    ebp
  428605:	mov    eax,0x56118d0b
  42860a:	push   esi
  42860b:	push   esi
  42860c:	int    0xa9
  42860e:	inc    ebx
  42860f:	push   esi
  428610:	push   esi
  428611:	push   esi
  428612:	push   esi
  428613:	imul   ecx,DWORD PTR [ebp-0x16],0x6b
  428617:	test   eax,0x89a9cd66
  42861c:	std    
  42861d:	push   esi
  42861e:	push   esi
  42861f:	push   esi
  428620:	ror    BYTE PTR [ebp+0x43],cl
  428623:	pushf  
  428624:	retf   
  428625:	or     esi,DWORD PTR [eax]
  428627:	popf   
  428628:	push   0x9c434dd2
  42862d:	retf   
  42862e:	or     ecx,DWORD PTR [ebp-0x2c]
  428631:	shl    BYTE PTR [ebp-0x16],cl
  428634:	mov    ah,BYTE PTR [ebp-0x1a80b652]
  42863a:	in     eax,0x6f
  42863c:	dec    ebp
  42863d:	dec    ecx
  42863e:	ror    BYTE PTR [ebp+0x66],cl
  428641:	pushf  
  428642:	retf   
  428643:	or     ecx,DWORD PTR [ebp-0x2c]
  428646:	shl    BYTE PTR [ebp-0x16],cl
  428649:	mov    ah,BYTE PTR [ebp-0x1a80b652]
  42864f:	in     eax,0x6f
  428651:	dec    ebp
  428652:	int    0x8a
  428654:	dec    ebp
  428655:	dec    ecx
  428656:	shl    BYTE PTR [ebp+0x66],cl
  428659:	pushf  
  42865a:	jae    0x428667
  42865c:	jne    0x428632
  42865e:	sar    BYTE PTR [esi-0x16],cl
  428661:	outs   dx,DWORD PTR ds:[esi]
  428662:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  428663:	mov    al,0x49
  428665:	jg     0x42864c
  428667:	in     eax,0x8a
  428669:	dec    ebp
  42866a:	int    0xd2
  42866c:	jne    0x4286b1
  42866e:	pushf  
  42866f:	jae    0x42867c
  428671:	jne    0x428647
  428673:	sar    BYTE PTR [esi-0x16],cl
  428676:	outs   dx,DWORD PTR ds:[esi]
  428677:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  428678:	mov    al,0x49
  42867a:	jg     0x428661
  42867c:	in     eax,0xd2
  42867e:	dec    ebp
  42867f:	mov    edx,edx
  428681:	jne    0x4286e9
  428683:	pushf  
  428684:	retf   
  428685:	pushf  
  428686:	jae    0x428693
  428688:	xor    BYTE PTR [ebx],cl
  42868a:	mov    WORD PTR [esi+0x4d0bf0af],ss
  428690:	aam    0x6b
  428692:	dec    ebp
  428693:	aam    0xd2
  428695:	dec    ebp
  428696:	data16 shl BYTE PTR [ebp-0x7],cl
  42869a:	pushf  
  42869b:	retf   
  42869c:	or     esi,DWORD PTR [eax]
  42869e:	xchg   esi,eax
  42869f:	scas   eax,DWORD PTR es:[edi]
  4286a0:	lock shl BYTE PTR [ebp+0x66],cl
  4286a4:	pushf  
  4286a5:	jae    0x428705
  4286a7:	lock shl BYTE PTR [ebp+0x66],cl
  4286ab:	sar    BYTE PTR [esi-0x2c],cl
  4286ae:	pushf  
  4286af:	jae    0x4286bc
  4286b1:	mov    WORD PTR [esi+0x7ed25baf],ss
  4286b7:	inc    ebx
  4286b8:	pushf  
  4286b9:	into   
  4286ba:	pop    esi
  4286bb:	xor    BYTE PTR [ebp+0x7f49b035],cl
  4286c1:	in     eax,0xe5
  4286c3:	sbb    BYTE PTR [ebp+0x56054096],ch
  4286c9:	push   esi
  4286ca:	push   esi
  4286cb:	ror    BYTE PTR [ebp+0x66],cl
  4286ce:	shl    BYTE PTR [ebp-0x7],cl
  4286d1:	pushf  
  4286d2:	retf   
  4286d3:	or     esi,DWORD PTR [eax]
  4286d5:	xchg   esi,eax
  4286d6:	scas   eax,DWORD PTR es:[edi]
  4286d7:	lock shl BYTE PTR [ebp+0x43],cl
  4286db:	pushf  
  4286dc:	jae    0x4286e9
  4286de:	lock shl BYTE PTR [ebp-0x48],cl
  4286e2:	lea    esp,[ebp-0x1a80b652]
  4286e8:	in     eax,0x6b
  4286ea:	dec    ebp
  4286eb:	mov    eax,0x9cd84dd2
  4286f0:	retf   
  4286f1:	js     0x42868c
  4286f3:	xor    BYTE PTR [esi+0x56],dl
  4286f6:	pop    esi
  4286f7:	lods   eax,DWORD PTR ds:[esi]
  4286f8:	or     esi,DWORD PTR [ebp-0x34]
  4286fb:	ror    BYTE PTR [ebp-0x28],cl
  4286fe:	sar    BYTE PTR [esi-0x48],cl
  428701:	pushf  
  428702:	retf   
  428703:	or     esi,DWORD PTR [eax]
  428705:	xchg   esi,eax
  428706:	scas   eax,DWORD PTR es:[edi]
  428707:	adc    eax,0x4096f018
  42870c:	pop    ebx
  42870d:	std    
  42870e:	push   esi
  42870f:	push   esi
  428710:	pushf  
  428711:	ss (bad) 
  428713:	(bad)  
  428714:	mov    ds:0xfb41197e,eax
  428719:	shr    BYTE PTR [ecx+0x7fdf8ac9],cl
  42871f:	mov    al,0xad
  428721:	jbe    0x4286d0
  428723:	outs   dx,DWORD PTR ds:[esi]
  428724:	fistp  QWORD PTR [edi-0x4c]
  428727:	sbb    BYTE PTR [esi+0x19],bh
  42872a:	xor    al,BYTE PTR [ebx-0x6318562e]
  428730:	and    eax,0x1ac0a9cd
  428735:	dec    edi
  428736:	sbb    cl,BYTE PTR [edi+0x1aa8a9cd]
  42873c:	pushf  
  42873d:	sbb    bl,BYTE PTR [esi+0xb]
  428740:	int    0x9d
  428742:	out    0x8a,al
  428744:	in     al,dx
  428745:	rol    eax,cl
  428747:	sar    BYTE PTR [esi-0x37],cl
  42874a:	xchg   esi,eax
  42874b:	jp     0x428781
  42874d:	jg     0x4286ff
  42874f:	lods   eax,DWORD PTR ds:[esi]
  428750:	jbe    0x4286ff
  428752:	xchg   esi,eax
  428753:	adc    BYTE PTR [eax+ebx*1-0x6e],0x96
  428758:	mov    bh,0x2d
  42875a:	mov    bl,0xe5
  42875c:	in     eax,0xd2
  42875e:	jne    0x428731
  428760:	pushf  
  428761:	jae    0x4286f0
  428763:	stos   BYTE PTR es:[edi],al
  428764:	push   eax
  428765:	dec    ecx
  428766:	jg     0x42874d
  428768:	in     eax,0x1e
  42876a:	stc    
  42876b:	pop    edi
  42876c:	xor    bh,BYTE PTR [ecx]
  42876e:	shr    BYTE PTR [ecx+0x5f38d2c9],cl
  428774:	int    0xa9
  428776:	pop    edi
  428777:	push   esi
  428778:	push   esi
  428779:	push   esi
  42877a:	push   esi
  42877b:	int    0xa9
  42877d:	mov    esi,edi
  42877f:	adc    ah,ch
  428781:	in     eax,0xcd
  428783:	test   eax,0x563056ba
  428788:	push   esi
  428789:	int    0xa9
  42878b:	fcmovne st,st(6)
  42878d:	push   esi
  42878e:	push   esi
  42878f:	push   esi
  428790:	imul   ebp,DWORD PTR [ecx-0x17562d07],0xffffffd2
  428797:	dec    ebp
  428798:	fistp  DWORD PTR [ebx+ecx*8-0x2d14cff5]
  42879f:	dec    ebp
  4287a0:	mov    edx,0xb3d859d2
  4287a5:	in     eax,0xe5
  4287a7:	pushf  
  4287a8:	retf   
  4287a9:	or     esi,DWORD PTR [eax]
  4287ab:	jmp    0x42877f
  4287ad:	dec    ebp
  4287ae:	mov    DWORD PTR [ebx+ecx*8-0x2d14cff5],ebx
  4287b5:	dec    ebp
  4287b6:	pop    edi
  4287b7:	pushf  
  4287b8:	retf   
  4287b9:	or     esi,DWORD PTR [eax]
  4287bb:	jmp    0x428813
  4287bd:	(bad)  
  4287c0:	xchg   ebp,eax
  4287c1:	shr    BYTE PTR [ecx-0x24b22d18],cl
  4287c7:	rcr    BYTE PTR [ecx-0x28],cl
  4287ca:	mov    bl,0xe5
  4287cc:	in     eax,0x9c
  4287ce:	retf   
  4287cf:	or     esi,DWORD PTR [eax]
  4287d1:	jmp    0x4287a5
  4287d3:	dec    ebp
  4287d4:	mov    edx,0x300bcb9c
  4287d9:	jmp    0x4287ad
  4287db:	dec    ebp
  4287dc:	pop    edi
  4287dd:	push   esi
  4287de:	jle    0x4287d9
  4287e0:	pushf  
  4287e1:	retf   
  4287e2:	or     esi,DWORD PTR [eax]
  4287e4:	jmp    0x42883c
  4287e6:	fild   QWORD PTR [ebx-0x57]
  4287ea:	(bad)  [edi-0x4c5569ca]
  4287f0:	mov    bl,0xe5
  4287f2:	in     eax,0xb7
  4287f4:	rcl    DWORD PTR [esi-0x1a1a2f56],1
  4287fa:	in     eax,0xcd
  4287fc:	test   eax,0x56569289
  428801:	push   esi
  428802:	int    0xb7
  428804:	adc    DWORD PTR [esi+0x56],edx
  428807:	push   esi
  428808:	std    
  428809:	push   esi
  42880a:	push   esi
  42880b:	push   esi
  42880c:	ror    BYTE PTR [ebp-0x77],cl
  42880f:	pop    ecx
  428810:	icebp  
  428811:	dec    eax
  428812:	pop    ecx
  428813:	ror    DWORD PTR [ecx+0x6f],0x85
  428817:	ror    BYTE PTR [ebp+0x5f],cl
  42881a:	rcl    BYTE PTR [ecx+ecx*8],cl
  42881d:	pop    ecx
  42881e:	icebp  
  42881f:	dec    eax
  428820:	pop    ecx
  428821:	ror    DWORD PTR [ecx+0x6f],0x86
  428825:	mov    bl,0xd2
  428827:	lea    edx,[ecx]
  428829:	push   esi
  42882a:	push   esi
  42882b:	push   esi
  42882c:	pop    ecx
  42882d:	icebp  
  42882e:	dec    eax
  42882f:	pop    ecx
  428830:	ror    DWORD PTR [ecx+0x6f],0x86
  428834:	jbe    0x428854
  428836:	jo     0x428894
  428838:	push   esi
  428839:	push   esi
  42883a:	push   esi
  42883b:	in     eax,0x1e
  42883d:	jo     0x42882b
  42883f:	push   esi
  428840:	push   esi
  428841:	push   esi
  428842:	in     eax,0x8d
  428844:	(bad)  
  428845:	in     al,dx
  428846:	push   esi
  428847:	push   esi
  428848:	push   esi
  428849:	jmp    0x4288a1
  42884b:	jle    0x428846
  42884d:	fwait
  42884e:	lea    esi,[edi+0x5656565c]
  428854:	fwait
  428855:	push   esi
  428856:	pop    es
  428857:	add    cl,BYTE PTR [ebp+0x639b5084]
  42885d:	out    0xba,eax
  42885f:	mov    bl,0xe5
  428861:	in     eax,0xbf
  428863:	in     eax,0x59
  428865:	in     eax,0xe5
  428867:	enter  0xa96b,0x5f
  42886b:	shr    BYTE PTR [ecx-0x27a62d18],cl
  428871:	mov    bl,0xe5
  428873:	in     eax,0x20
  428875:	in     eax,0x63
  428877:	push   esi
  428878:	fwait
  428879:	sbb    al,0xd2
  42887b:	dec    ebp
  42887c:	call   0xb41af453
  428881:	in     eax,0xe5
  428883:	pushf  
  428884:	ror    eax,1
  428886:	fwait
  428887:	mov    ds:0xc27e5fa9,eax
  42888c:	mov    ebp,0xd21ceb56
  428891:	test   eax,0xc9a96bdb
  428896:	shr    BYTE PTR [ecx+0x19a96bf9],cl
  42889c:	popf   
  42889d:	push   es
  42889e:	push   esi
  42889f:	jle    0x42887c
  4288a1:	push   esi
  4288a2:	jmp    0x4288c0
  4288a4:	push   esi
  4288a5:	jle    0x42888f
  4288a7:	shr    BYTE PTR [ecx-0x333fa918],cl
  4288ad:	mov    bl,0xe5
  4288af:	in     eax,0x8d
  4288b1:	mov    bh,0x55
  4288b3:	push   esi
  4288b4:	push   esi
  4288b5:	push   esi
  4288b6:	fwait
  4288b7:	shr    BYTE PTR [ecx+0x359d2e8],cl
  4288bd:	mov    bl,0xe5
  4288bf:	in     eax,0x56
  4288c1:	jg     0x428895
  4288c3:	test   eax,0xd159d2e8
  4288c8:	mov    bl,0xe5
  4288ca:	in     eax,0x56
  4288cc:	jg     0x428924
  4288ce:	jle    0x4288e9
  4288d0:	push   esi
  4288d1:	jle    0x42889c
  4288d3:	out    0x68,eax
  4288d5:	sti    
  4288d6:	in     eax,0xe5
  4288d8:	push   ds
  4288d9:	mov    ds:0x1074e5c9,al
  4288de:	shr    BYTE PTR [ecx-0x27a62d18],cl
  4288e4:	mov    bl,0xe5
  4288e6:	in     eax,0x68
  4288e8:	in     eax,0x59
  4288ea:	in     eax,0xe5
  4288ec:	and    ch,ah
  4288ee:	push   esi
  4288ef:	jle    0x4288ba
  4288f1:	push   esi
  4288f2:	fwait
  4288f3:	sbb    al,0xff
  4288f5:	add    eax,0x4716d09
  4288fa:	in     eax,0x75
  4288fc:	rcr    bl,cl
  4288fe:	jmp    0x4288eb
  428900:	lea    ebp,[ecx-0x17569407]
  428906:	arpl   dx,dx
  428908:	jle    0x4288f2
  42890a:	mov    DWORD PTR [ecx+0x45],esp
  42890d:	jbe    0x4288f4
  42890f:	imul   eax,DWORD PTR [esi],0xffffffd2
  428912:	jle    0x42890d
  428914:	sbb    BYTE PTR [ebp-0x39a081fb],dl
  42891a:	out    dx,eax
  42891b:	dec    eax
  42891c:	call   0x23a1cbe7
  428921:	mov    BYTE PTR [edx+0x48],0xe8
  428925:	(bad)  
  428926:	out    dx,eax
  428927:	jbe    0x4288ae
  428929:	ins    DWORD PTR es:[edi],dx
  42892a:	and    eax,0xebdbd275
  42892f:	jmp    0x4288be
  428931:	test   eax,0xe8a96bf9
  428936:	shl    BYTE PTR [ebp-0x18],cl
  428939:	mov    DWORD PTR [ecx+0x6be50241],ebp
  42893f:	jbe    0x428913
  428941:	jne    0x42893c
  428943:	sbb    BYTE PTR [ecx],bl
  428945:	jle    0x4288dd
  428947:	shr    BYTE PTR [ecx-0x6b1039a1],cl
  42894d:	in     eax,0xc6
  42894f:	cmp    al,ah
  428951:	retf   
  428952:	(bad)  
  428953:	out    dx,eax
  428954:	push   es
  428955:	or     eax,esi
  428957:	out    dx,eax
  428958:	or     edx,DWORD PTR [eax+0x6d]
  42895b:	jno    0x428961
  42895d:	in     eax,0x75
  42895f:	rcr    bl,cl
  428961:	jmp    0x42894e
  428963:	lea    ebp,[ecx-0x17569407]
  428969:	shl    BYTE PTR [ebp-0x18],cl
  42896c:	mov    DWORD PTR [ecx-0x1f],esp
  42896f:	jmp    0xf975:0xd2766be5
  428976:	sbb    BYTE PTR [ecx],bl
  428978:	jle    0x42897e
  42897a:	(bad)  
  42897b:	out    dx,eax
  42897c:	loopne 0x428949
  42897e:	shr    BYTE PTR [ecx-0x4c1039a1],cl
  428984:	xchg   esi,eax
  428986:	cmp    BYTE PTR [edx+esi*8-0x1afb8e93],dl
  42898d:	jne    0x428961
  42898f:	fucomi st,st(3)
  428991:	jmp    0x428920
  428993:	test   eax,0xe8a96bf9
  428998:	arpl   dx,dx
  42899a:	jle    0x428984
  42899c:	mov    DWORD PTR [ecx+0x72],eax
  42899f:	imul   esp,ebp,0x6b
  4289a2:	push   es
  4289a3:	sar    BYTE PTR [esi-0x7],cl
  4289a6:	sbb    BYTE PTR [ebp-0x39b781fb],dl
  4289ac:	inc    edx
  4289ad:	add    al,0x96
  4289af:	or     cl,ch
  4289b1:	out    dx,eax
  4289b2:	or     edx,DWORD PTR [eax-0x6a]
  4289b5:	(bad)  
  4289b6:	jbe    0x428954
  4289b8:	ins    DWORD PTR es:[edi],dx
  4289b9:	and    eax,0xebdbd275
  4289be:	jmp    0x42894d
  4289c0:	test   eax,0xe8a96bf9
  4289c5:	shl    BYTE PTR [ebp-0x18],cl
  4289c8:	mov    ebp,eax
  4289ca:	inc    ecx
  4289cb:	pop    edi
  4289cc:	in     eax,0x6b
  4289ce:	jbe    0x4289a2
  4289d0:	jne    0x4289cb
  4289d2:	sbb    BYTE PTR [ecx],bl
  4289d4:	jle    0x428a1f
  4289d6:	shr    BYTE PTR [ecx+0x5fefc65f],cl
  4289dc:	or     eax,esi
  4289de:	cmp    BYTE PTR [ebx-0x2c103979],dh
  4289e4:	loopne 0x428a53
  4289e6:	jno    0x4289ec
  4289e8:	in     eax,0x63
  4289ea:	shl    BYTE PTR [eax],cl
  4289ec:	out    0x6d,eax
  4289ee:	push   esi
  4289ef:	push   esi
  4289f0:	push   esi
  4289f1:	ror    BYTE PTR [edx+edx*8-0x4f939eb],cl
  4289f8:	out    0x91,eax
  4289fa:	push   esi
  4289fb:	push   esi
  4289fc:	push   esi
  4289fd:	arpl   dx,dx
  4289ff:	xor    dh,al
  428a01:	mov    ah,0xd3
  428a03:	loopne 0x4289ec
  428a05:	jne    0x428a5d
  428a07:	push   esi
  428a08:	push   esi
  428a09:	arpl   si,ax
  428a0b:	mov    ah,0x6
  428a0d:	or     esp,edi
  428a0f:	sbb    al,0x56
  428a11:	push   esi
  428a12:	push   esi
  428a13:	(bad)  
  428a14:	mov    ah,0x76
  428a16:	test   edx,edx
  428a18:	pop    ebx
  428a19:	jns    0x4289f8
  428a1b:	stos   DWORD PTR es:[edi],eax
  428a1c:	push   esi
  428a1d:	push   esi
  428a1e:	enter  0xbd63,0x75
  428a22:	rcr    bl,cl
  428a24:	shr    BYTE PTR [ecx+0x53a9b31a],cl
  428a2a:	fwait
  428a2b:	call   0xb35f0902
  428a30:	jle    0x428a92
  428a32:	arpl   dx,dx
  428a34:	jle    0x428a15
  428a36:	das    
  428a37:	sahf   
  428a38:	mov    al,BYTE PTR ds:[esi+0x56661eab]
  428a3f:	jae    0x4289f9
  428a41:	sbb    DWORD PTR fs:[ebx+0x661e158a],ebx
  428a48:	push   esi
  428a49:	jae    0x428a03
  428a4b:	sbb    DWORD PTR fs:[ebx-0x542d0f8a],ebx
  428a52:	push   ds
  428a53:	fild   DWORD PTR [edx]
  428a55:	pop    esi
  428a56:	sar    DWORD PTR [eax],1
  428a58:	fwait
  428a59:	fwait
  428a5a:	fwait
  428a5b:	fwait
  428a5c:	fwait
  428a5d:	enter  0x365e,0x63
  428a61:	push   ds
  428a62:	retf   
  428a63:	push   esi
  428a64:	mov    ebp,esp
  428a66:	or     esp,ebp
  428a68:	in     eax,0x73
  428a6a:	mov    eax,0xe0a76f8d
  428a6f:	in     eax,0xe5
  428a71:	mov    ebp,esp
  428a73:	add    al,0xe5
  428a75:	add    al,0xad
  428a77:	jns    0x428a47
  428a79:	cmp    ah,BYTE PTR [eax]
  428a7b:	shr    DWORD PTR [ebx],cl
  428a7d:	out    0x2c,eax
  428a7f:	jbe    0x428a66
  428a81:	in     eax,0xd
  428a83:	ror    BYTE PTR [ebp-0x2de47259],1
  428a89:	mov    ds:0x95a9d2e8,al
  428a8e:	pop    esi
  428a8f:	mov    ds:0x6bcd231a,al
  428a94:	test   eax,0xe7e5c0e7
  428a99:	mov    BYTE PTR [esi-0x1b],dh
  428a9c:	in     eax,0x96
  428a9e:	mov    bh,0x4c
  428aa0:	in     eax,0xe5
  428aa2:	in     eax,0x8a
  428aa4:	dec    ebp
  428aa5:	leave  
  428aa6:	and    esp,DWORD PTR [edx+0x590e73db]
  428aac:	jns    0x428b0d
  428aae:	fnstenv ss:[ebx+0x13]
  428ab2:	pop    ds
  428ab3:	or     ebp,DWORD PTR [ebx-0xac372fb]
  428ab9:	ror    DWORD PTR [esi],0x5f
  428abc:	cmp    al,0xe0
  428abe:	pop    edx
  428abf:	lea    esp,[ebp-0x1a7a91d7]
  428ac5:	in     eax,0xeb
  428ac7:	arpl   WORD PTR [edx-0x1b],di
  428aca:	mov    bl,0xe5
  428acc:	in     eax,0x9b
  428ace:	shl    BYTE PTR [ebx-0x5d2dcbce],0xe8
  428ad5:	pop    esi
  428ad6:	mov    ds:0x1b809643,al
  428adb:	rcl    BYTE PTR [ebx-0x2df15234],cl
  428ae1:	adc    eax,0x150b6423
  428ae6:	lea    ebp,[esi+0x4d]
  428ae9:	in     eax,0xe7
  428aeb:	shl    BYTE PTR [esi-0x1b],0xe5
  428aef:	shl    BYTE PTR [esi-0x3f],cl
  428af2:	adc    ebx,DWORD PTR [edi+0x1e]
  428af5:	ja     0x428aaa
  428af7:	sbb    cl,dh
  428af9:	jp     0x428ae0
  428afb:	mov    bl,0xe5
  428afd:	in     eax,0x7e
  428aff:	test   DWORD PTR [eax],ebx
  428b01:	(bad)  
  428b02:	xor    cl,BYTE PTR [ebp+ebx*4-0x336c2d21]
  428b09:	out    0xb6,eax
  428b0b:	jbe    0x428af2
  428b0d:	in     eax,0x38
  428b0f:	mov    ah,0x1e
  428b11:	out    0xb3,eax
  428b13:	push   ds
  428b14:	adc    esi,DWORD PTR [ebx-0x24cd39e8]
  428b1a:	pop    edx
  428b1b:	inc    edx
  428b1c:	push   ds
  428b1d:	xlat   BYTE PTR ds:[ebx]
  428b1e:	rcr    DWORD PTR [eax-0x69cd0f2e],cl
  428b24:	inc    edx
  428b25:	push   ds
  428b26:	xlat   BYTE PTR ds:[ebx]
  428b27:	dec    ecx
  428b28:	cwde   
  428b29:	les    eax,FWORD PTR [ebx+ebp*4]
  428b2c:	ins    DWORD PTR es:[edi],dx
  428b2d:	xor    al,BYTE PTR [esp+eax*8]
  428b30:	loopne 0x428add
  428b32:	ins    DWORD PTR es:[edi],dx
  428b33:	pop    esi
  428b34:	lods   eax,DWORD PTR ds:[esi]
  428b35:	ds popf 
  428b37:	fcmovb st,st(0)
  428b39:	shr    DWORD PTR [ebx+0x76dae766],0xe5
  428b40:	in     eax,0x7e
  428b42:	fistp  WORD PTR [edi]
  428b44:	call   FWORD PTR [edx+0x2b]
  428b47:	pop    edx
  428b48:	sub    edx,DWORD PTR [esi+0x34]
  428b4b:	sbb    ch,bl
  428b4d:	ds js  0x428adb
  428b50:	push   es
  428b51:	in     eax,0xe5
  428b53:	(bad)  
  428b54:	in     eax,0x9d
  428b56:	pop    es
  428b57:	shl    BYTE PTR [eax+0x7fe766ab],0x76
  428b5e:	in     eax,0xe5
  428b60:	jle    0x428b90
  428b62:	shl    cl,0xab
  428b65:	out    0x87,ax
  428b68:	jbe    0x428b4f
  428b6a:	in     eax,0x7e
  428b6c:	mov    ebp,0xc0e03c1f
  428b71:	xchg   esp,eax
  428b72:	xor    dh,BYTE PTR [esi-0x40]
  428b75:	dec    ecx
  428b76:	fwait
  428b77:	sar    BYTE PTR [esi-0x18],cl
  428b7a:	pop    esi
  428b7b:	jle    0x428bc0
  428b7d:	sbb    BYTE PTR [esi+0x1a],bh
  428b80:	xchg   esi,eax
  428b81:	out    dx,al
  428b82:	lods   eax,DWORD PTR ds:[esi]
  428b83:	mov    bl,0xe5
  428b85:	in     eax,0x67
  428b87:	shl    BYTE PTR [edx-0x71861d18],cl
  428b8d:	mov    bl,0xe5
  428b8f:	in     eax,0xc0
  428b91:	fsub   st,st(7)
  428b93:	shl    BYTE PTR [ebx+0x7ed2e5e5],1
  428b99:	fdiv   DWORD PTR [esi+edx*1-0x40]
  428b9d:	jmp    0xd2e5:0xe5b383e7
  428ba4:	jle    0x428b7a
  428ba6:	je     0x428b3c
  428ba8:	sar    BYTE PTR [esi+0x19],cl
  428bab:	ror    BYTE PTR [ebp-0x2c],cl
  428bae:	imul   ecx,DWORD PTR [ebp+0x19],0xffffffd2
  428bb2:	dec    ebp
  428bb3:	fsubr  DWORD PTR [ebx+0x4d]
  428bb6:	aam    0xd2
  428bb8:	dec    ebp
  428bb9:	inc    ebx
  428bba:	imul   ecx,DWORD PTR [ebp-0x28],0x6b
  428bbe:	jle    0x428c03
  428bc0:	pop    ds
  428bc1:	jmp    FWORD PTR [ebx]
  428bc3:	js     0x428c2d
  428bc5:	dec    eax
  428bc6:	in     eax,0xe5
  428bc8:	les    ebx,FWORD PTR [edi+0xb]
  428bcb:	mov    WORD PTR [esi],?
  428bcd:	enter  0xe03c,0x8a
  428bd1:	shl    DWORD PTR [edx],0x76
  428bd4:	add    al,0xb
  428bd6:	fwait
  428bd7:	rcl    BYTE PTR [ebx-0x4c851834],cl
  428bdd:	in     eax,0xe5
  428bdf:	jle    0x428bc0
  428be1:	shr    BYTE PTR [ecx-0x335d2d19],cl
  428be7:	sar    DWORD PTR [eax+0x206d5e0b],0x5f
  428bee:	add    eax,0x42d0f8d
  428bf3:	popf   
  428bf4:	inc    esi
  428bf5:	rcl    BYTE PTR [ebx+0x76451ecc],cl
  428bfb:	out    0xf3,eax
  428bfd:	mov    bl,0xe5
  428bff:	in     eax,0x7e
  428c01:	sbb    al,0xd2
  428c03:	test   eax,0xcca2d2e7
  428c08:	sar    DWORD PTR [eax+0x2b5f200b],0x20
  428c0f:	pop    edi
  428c10:	add    eax,0x42dba8d
  428c15:	mov    bl,0xe5
  428c17:	in     eax,0x9d
  428c19:	push   eax
  428c1a:	mov    edi,0xe5e57604
  428c1f:	or     esp,DWORD PTR [edx+0x2b5020cc]
  428c25:	jp     0x428c0c
  428c27:	mov    bl,0xe5
  428c29:	in     eax,0x6b
  428c2b:	dec    ebp
  428c2c:	jmp    0xe7e3:0xd238d15e
  428c33:	push   0xd2e5e5b3
  428c38:	pop    si
  428c3a:	adc    eax,0x4db3ce32
  428c3f:	jmp    0x1e96:0x403a21e
  428c46:	shl    ch,0xe5
  428c49:	in     eax,0x1e
  428c4b:	test   eax,0x4dd2e003
  428c50:	jmp    0x200b:0x3204d01e
  428c57:	or     ebp,DWORD PTR [ebx]
  428c59:	shl    BYTE PTR [edx+0x677c166],cl
  428c5f:	pop    esi
  428c60:	sar    DWORD PTR [eax],1
  428c62:	and    BYTE PTR [eax],bh
  428c64:	add    eax,0x55daba8d
  428c69:	or     esp,ebp
  428c6b:	in     eax,0xd2
  428c6d:	jecxz  0x428c56
  428c6f:	dec    edi
  428c70:	mov    bl,0xe5
  428c72:	in     eax,0xd2
  428c74:	pop    si
  428c76:	adc    eax,0x4d6bce32
  428c7b:	out    0x6b,eax
  428c7d:	dec    ebp
  428c7e:	inc    ebx
  428c7f:	push   ds
  428c80:	rol    BYTE PTR [edx+esi*1],1
  428c83:	pop    es
  428c84:	shl    cl,cl
  428c86:	push   ds
  428c87:	iret   
  428c88:	inc    ebx
  428c89:	mov    bl,0xad
  428c8b:	adc    ebx,DWORD PTR [esi]
  428c8d:	dec    ebp
  428c8e:	inc    ebx
  428c8f:	jbe    0x428c17
  428c91:	push   ds
  428c92:	rol    BYTE PTR [ebp-0x507665f9],1
  428c98:	jbe    0x428c7f
  428c9a:	in     eax,0x5e
  428c9c:	rcl    edx,0x15
  428c9f:	push   esp
  428ca0:	iret   
  428ca1:	inc    ebx
  428ca2:	or     ebp,DWORD PTR [ecx+0xbb8ad43]
  428ca8:	test   eax,0xcca96b66
  428cad:	popf   
  428cae:	mov    esi,0xe704131e
  428cb3:	jo     0x428c9a
  428cb5:	in     eax,0xe5
  428cb7:	lods   eax,DWORD PTR ds:[esi]
  428cb8:	popf   
  428cb9:	lods   eax,DWORD PTR ds:[esi]
  428cba:	iret   
  428cbb:	inc    ebx
  428cbc:	mov    ds:0x632b814,eax
  428cc1:	push   esi
  428cc2:	test   eax,0xb8142643
  428cc7:	xchg   BYTE PTR [esi-0x19],bh
  428cca:	mov    DWORD PTR [esi+eax*1-0x1b],eax
  428cce:	in     eax,0xb
  428cd0:	test   eax,0xcca96b66
  428cd5:	ror    edi,0x43
  428cd8:	add    al,0x20
  428cda:	add    al,0x5
  428cdc:	pop    esi
  428cdd:	push   esi
  428cde:	sub    eax,0x93d2cdd2
  428ce3:	int3   
  428ce4:	out    0x80,eax
  428ce6:	in     eax,0xe5
  428ce8:	in     eax,0x90
  428cea:	mov    bl,0x74
  428cec:	or     edx,DWORD PTR [edx+eiz*4-0x79f152bd]
  428cf3:	jle    0x428cd0
  428cf5:	popf   
  428cf6:	in     eax,0x56
  428cf8:	test   eax,0xea4dd243
  428cfd:	push   ds
  428cfe:	shl    DWORD PTR [esi-0x2e],0xa2
  428d02:	call   0xa9a15ad9
  428d07:	sbb    ah,BYTE PTR [ebx-0x6768bc57]
  428d0d:	shl    BYTE PTR [esi+ebx*2+0x7e],cl
  428d11:	inc    ebx
  428d12:	shl    BYTE PTR [ebp+0x53],cl
  428d15:	addr16 loop 0x428d30
  428d18:	xlat   BYTE PTR ds:[ebx]
  428d19:	pop    es
  428d1a:	or     esi,esi
  428d1c:	jle    0x428d82
  428d1e:	imul   esp,DWORD PTR [edx-0x6a7f6918],0x18
  428d25:	mov    ds:0x9ee9653,al
  428d2a:	std    
  428d2b:	push   esi
  428d2c:	push   esi
  428d2d:	out    0x6a,eax
  428d2f:	in     eax,0xe5
  428d31:	in     eax,0x5e
  428d33:	ror    DWORD PTR [ebp-0x2dc3e592],1
  428d39:	jne    0x428d2d
  428d3b:	sar    BYTE PTR [esi-0x7],cl
  428d3e:	pop    esi
  428d3f:	jle    0x428d5d
  428d41:	imul   esi,DWORD PTR [eax-0x2db08a2e],0xffffffa2
  428d48:	call   0x6b5d2fab
  428d4d:	(bad)  
  428d4e:	ins    DWORD PTR es:[edi],dx
  428d4f:	or     DWORD PTR ds:0xe56071ff,eax
  428d55:	add    eax,0x38d15e1f
  428d5a:	popf   
  428d5b:	fcomp  st(4)
  428d5d:	aas    
  428d5e:	in     eax,0xe5
  428d60:	in     eax,0xb3
  428d62:	xor    dh,BYTE PTR [ebx+0x5f88c125]
  428d68:	arpl   dx,dx
  428d6a:	jle    0x428d65
  428d6c:	sbb    BYTE PTR [esi+0x60],bh
  428d6f:	pop    es
  428d70:	jmp    0x5fb8:0xc1b8a9d2
  428d77:	imul   ebp,DWORD PTR [bx+di+0x6bb8],0x7e
  428d7d:	stc    
  428d7e:	add    eax,0x34dd225
  428d83:	xchg   esi,eax
  428d84:	adc    cl,0xc1
  428d87:	ja     0x428d8d
  428d89:	or     ebp,DWORD PTR [ecx-0x623ef419]
  428d8f:	push   es
  428d90:	xchg   esi,eax
  428d91:	adc    cl,0xb
  428d94:	test   eax,0x6693d203
  428d99:	lea    ebp,[esi-0x57]
  428d9c:	in     eax,0x5e
  428d9e:	ror    DWORD PTR [ebp-0x231a5692],1
  428da4:	aas    
  428da5:	in     eax,0xe5
  428da7:	in     eax,0xb3
  428da9:	pop    es
  428daa:	pusha  
  428dab:	shl    BYTE PTR [ecx],cl
  428dad:	sbb    dh,BYTE PTR [ebx]
  428daf:	ror    DWORD PTR [ebx+0x185ff21a],0x21
  428db6:	sbb    bl,BYTE PTR [edi+eax*1+0x8]
  428dba:	mov    ch,BYTE PTR [esi+0x331a4456]
  428dc0:	ror    DWORD PTR [eax+0x1aec6f5f],0xf2
  428dc7:	ror    bl,cl
  428dc9:	xchg   esi,eax
  428dca:	xor    DWORD PTR [ebp-0x1b],esi
  428dcd:	sar    DWORD PTR [ecx+0x49],0x96
  428dd1:	scas   eax,DWORD PTR es:[edi]
  428dd2:	lock mov ds:0x7f21a21,eax
  428dd8:	gs rcr cl,cl
  428ddb:	mov    ecx,0xe5e55fe5
  428de0:	pop    esi
  428de1:	lock sar DWORD PTR [ecx-0x2d],0xa
  428de6:	mov    bl,0x4d
  428de8:	in     eax,0xb
  428dea:	ror    DWORD PTR [ebp+0x25381a6e],1
  428df0:	rol    edi,0xd3
  428df3:	and    DWORD PTR es:[edx],ebx
  428df6:	repnz pop esi
  428df8:	(bad)  [edx]
  428dfa:	es jne 0x428de2
  428dfd:	or     edx,ecx
  428dff:	push   ds
  428e00:	shl    DWORD PTR [ebx+0x381a6e8d],1
  428e06:	and    eax,0xebdbd275
  428e0b:	ror    BYTE PTR [edx-0x1a1a4ccb],cl
  428e11:	arpl   dx,dx
  428e13:	jle    0x428e74
  428e15:	shl    BYTE PTR [edi-0x752dc295],cl
  428e1b:	xor    eax,0xd2e5e5b3
  428e20:	xchg   esp,eax
  428e21:	shl    BYTE PTR [ecx-0x1a1a4c6f],cl
  428e27:	imul   eax,DWORD PTR [ebp-0x4cca112e],0xffffffe5
  428e2e:	in     eax,0xd2
  428e30:	pop    edi
  428e31:	shl    dh,cl
  428e33:	cmp    al,0xb
  428e35:	pop    edi
  428e36:	int    0xa9
  428e38:	call   0x56998593
  428e3d:	shr    BYTE PTR [ecx-0x9ce6918],cl
  428e43:	adc    BYTE PTR [esi+0x48],al
  428e46:	jg     0x428e2d
  428e48:	in     eax,0xd3
  428e4a:	dec    ecx
  428e4b:	jg     0x428e32
  428e4d:	in     eax,0x5
  428e4f:	mov    bh,0xc1
  428e51:	je     0x428e55
  428e53:	shr    dh,cl
  428e55:	data16 mov bl,0xe5
  428e58:	in     eax,0xcd
  428e5a:	in     eax,0xe8
  428e5c:	push   esi
  428e5d:	push   esi
  428e5e:	push   esi
  428e5f:	ins    DWORD PTR es:[edi],dx
  428e60:	jno    0x428e66
  428e62:	in     eax,0x75
  428e64:	rcr    bl,cl
  428e66:	push   ds
  428e67:	fstp   TBYTE PTR [edi+0x1e]
  428e6a:	iret   
  428e6b:	inc    ebx
  428e6c:	in     eax,0xcd
  428e6e:	test   eax,0x563056ea
  428e73:	push   esi
  428e74:	int    0xa9
  428e76:	fcomp  DWORD PTR [ebx]
  428e78:	mov    eax,0xa9cd5656
  428e7d:	sbb    esi,ecx
  428e7f:	push   esi
  428e80:	push   esi
  428e81:	push   esi
  428e82:	int    0xa9
  428e84:	mov    eax,0x565656fd
  428e89:	int    0xa9
  428e8b:	sbb    DWORD PTR [esi-0xb],edx
  428e8e:	in     eax,0xe5
  428e90:	shr    BYTE PTR [ecx+0x58d2bd60],cl
  428e96:	xor    eax,0xd2e5e5b3
  428e9b:	test   eax,0xd2c86360
  428ea0:	mov    DWORD PTR [ecx-0x2d1a1a4d],edx
  428ea6:	test   eax,0xa5c0d260
  428eab:	mov    bl,0xe5
  428ead:	in     eax,0xd2
  428eaf:	push   es
  428eb0:	imul   edx,DWORD PTR [edi+eiz*8],0x6b
  428eb4:	mov    ds:0x957e6bc9,al
  428eb9:	mov    bh,0xd1
  428ebb:	jle    0x428f06
  428ebd:	push   esi
  428ebe:	jle    0x428edc
  428ec0:	shl    BYTE PTR [ebp+0x60],cl
  428ec3:	out    0x1b,eax
  428ec5:	push   esi
  428ec6:	push   esi
  428ec7:	push   esi
  428ec8:	rcl    BYTE PTR [esi-0x10f41f2e],cl
  428ece:	cmp    al,0xd2
  428ed0:	test   DWORD PTR [ebx-0x57],ebp
  428ed3:	sbb    al,0xb7
  428ed5:	ins    DWORD PTR es:[edi],dx
  428ed6:	je     0x428e5e
  428ed8:	push   esi
  428ed9:	jle    0x428f3b
  428edb:	out    0xf2,eax
  428edd:	icebp  
  428ede:	push   esi
  428edf:	push   esi
  428ee0:	shr    BYTE PTR [ecx+0x6659d260],cl
  428ee6:	mov    bl,0xe5
  428ee8:	in     eax,0xd2
  428eea:	in     eax,0x46
  428eec:	dec    eax
  428eed:	jg     0x428ed4
  428eef:	in     eax,0xd3
  428ef1:	dec    ecx
  428ef2:	jg     0x428ed9
  428ef4:	in     eax,0xd2
  428ef6:	test   eax,0xd21d7e60
  428efb:	dec    ebp
  428efc:	pusha  
  428efd:	shr    BYTE PTR [ebx-0x34],cl
  428f00:	mov    bl,0xe5
  428f02:	in     eax,0x56
  428f04:	cmp    eax,0xb3d859d2
  428f09:	in     eax,0xe5
  428f0b:	push   esi
  428f0c:	fwait
  428f0d:	push   ebx
  428f0e:	pushf  
  428f0f:	sar    edi,1
  428f11:	add    eax,0x1c716d09
  428f16:	in     eax,0xd2
  428f18:	pop    ecx
  428f19:	btr    ebp,esp
  428f1c:	in     eax,0xd2
  428f1e:	pop    edi
  428f1f:	lea    ebp,[ecx-0x62a04cfc]
  428f25:	out    0xd2,eax
  428f27:	test   DWORD PTR [edi-0x2df28193],esi
  428f2d:	dec    ecx
  428f2e:	imul   ecx,DWORD PTR [ebp-0x25],0xffffffd2
  428f32:	dec    ebp
  428f33:	mov    eax,0xe57f487a
  428f38:	in     eax,0x9c
  428f3a:	adc    eax,0xbb3298d
  428f3f:	xor    bl,ch
  428f41:	ror    BYTE PTR [ebp-0x16],cl
  428f44:	pushf  
  428f45:	adc    eax,0x56eb300b
  428f4a:	jmp    0x5fec61ea
  428f4f:	pushf  
  428f50:	(bad)  
  428f51:	or     ecx,ebp
  428f53:	and    ch,ah
  428f55:	and    BYTE PTR [ebx+ebx*4],al
  428f58:	shr    BYTE PTR [ecx-0x1a1d2ca0],cl
  428f5e:	in     eax,0xe5
  428f60:	fwait
  428f61:	shr    BYTE PTR [ecx+0x5859d260],cl
  428f67:	mov    bl,0xe5
  428f69:	in     eax,0x56
  428f6b:	jg     0x428f3f
  428f6d:	test   eax,0xd2195602
  428f72:	dec    ebp
  428f73:	xchg   ebp,eax
  428f74:	rcr    al,cl
  428f76:	shr    BYTE PTR [ecx+0x6be5d2e7],cl
  428f7c:	mov    bl,0xd2
  428f7e:	test   eax,0x8d1c6bc9
  428f83:	test   eax,0xa9d29b43
  428f88:	fcomp  DWORD PTR [esi+eax*8-0x2d6432f5]
  428f8f:	test   eax,0x9be9561c
  428f94:	shr    BYTE PTR [ecx+0xbc69c5f],cl
  428f9a:	int    0xbd
  428f9c:	and    BYTE PTR [ebx+ebx*4],al
  428f9f:	shr    BYTE PTR [ecx-0x1aec2ca0],cl
  428fa5:	in     eax,0xe5
  428fa7:	fwait
  428fa8:	shr    BYTE PTR [ecx+0x5859d260],cl
  428fae:	mov    bl,0xe5
  428fb0:	in     eax,0x56
  428fb2:	jg     0x428f86
  428fb4:	test   eax,0x1e195602
  428fb9:	add    edi,DWORD PTR [eax]
  428fbb:	mov    bh,0xd1
  428fbd:	je     0x42903e
  428fbf:	shr    BYTE PTR [ecx-0x1730e1e4],cl
  428fc5:	in     eax,0x1e
  428fc7:	adc    DWORD PTR [ebx-0x2ddcbe1b],ebx
  428fcd:	dec    ebp
  428fce:	fistp  DWORD PTR [esi-0x35]
  428fd1:	shl    BYTE PTR ds:0x9db84d6b,cl
  428fd7:	or     edx,edx
  428fd9:	dec    ebp
  428fda:	mov    eax,0x56b3028a
  428fdf:	test   eax,0xe875d2e8
  428fe4:	outs   dx,DWORD PTR ds:[esi]
  428fe5:	pop    edi
  428fe6:	ror    BYTE PTR [ebp+0x1c],cl
  428fe9:	cmp    BYTE PTR [eax],bl
  428feb:	jmp    0x428f88
  428fed:	xor    bh,BYTE PTR [ecx-0x2e]
  428ff0:	cld    
  428ff1:	cmp    al,0xb
  428ff3:	retf   
  428ff4:	rcr    ah,cl
  428ff6:	ret    
  428ff7:	in     eax,0xe5
  428ff9:	in     eax,0xd2
  428ffb:	jae    0x42905b
  428ffd:	jne    0x428fda
  428fff:	or     esp,DWORD PTR ds:0xd2e8756b
  429005:	jmp    0x42905a
  429007:	or     esi,DWORD PTR [ebx+0x6b]
  42900a:	dec    ebp
  42900b:	sbb    al,0x6b
  42900d:	jne    0x429028
  42900f:	int    0xa9
  429011:	leave  
  429012:	in     eax,0xe5
  429014:	in     eax,0xe5
  429016:	popf   
  429017:	xchg   edi,eax
  429018:	push   ds
  429019:	jno    0x429014
  42901b:	lods   eax,DWORD PTR ds:[esi]
  42901c:	(bad)  
  42901d:	imul   esi,DWORD PTR [ebp-0x16],0x74
  429021:	sub    ecx,DWORD PTR [ebp+0x756b5f9b]
  429027:	stc    
  429028:	shl    BYTE PTR [ebp-0x16],cl
  42902b:	imul   esi,DWORD PTR [ebp-0x16],0xffffffd2
  42902f:	jne    0x42902a
  429031:	xchg   esi,eax
  429032:	xor    edx,eax
  429034:	imul   esi,DWORD PTR [ebp-0x2c],0xffffffdc
  429038:	or     eax,0xe5e59656
  42903d:	imul   esi,DWORD PTR [ebp-0x19],0xffffffd2
  429041:	jne    0x429017
  429043:	rol    edi,0x2
  429046:	fdiv   QWORD PTR [ecx-0x67]
  429049:	xor    BYTE PTR [esi+0x56],dl
  42904c:	pushf  
  42904d:	pop    ebx
  42904e:	push   ds
  42904f:	xlat   BYTE PTR ds:[ebx]
  429050:	xchg   edx,eax
  429051:	jle    0x4290bf
  429053:	rcr    BYTE PTR [edi+0xb],cl
  429056:	dec    ebp
  429057:	out    0x1e,eax
  429059:	cmp    al,0x9a
  42905b:	in     eax,0x74
  42905d:	scas   al,BYTE PTR es:[edi]
  42905e:	shl    BYTE PTR [ebp-0x18],cl
  429061:	shl    ch,cl
  429063:	or     ebx,edi
  429065:	call   0x1cdf:0x6be7a90b
  42906c:	shr    BYTE PTR [ecx+0x1c4dd2b8],cl
  429072:	push   ds
  429073:	test   eax,0x4d5676f9
  429078:	jmp    0xb395:0x75d2e47e
  42907f:	jne    0x42904a
  429081:	shl    BYTE PTR [ebp-0x37],cl
  429084:	sbb    BYTE PTR [esi-0x1a1a1a13],dh
  42908a:	pop    es
  42908b:	fisttp WORD PTR [ebx]
  42908d:	test   eax,0x49bd295
  429092:	imul   esi,DWORD PTR [ebp-0x6b],0x6b
  429096:	test   eax,0x9654b7b8
  42909b:	mov    bh,0x11
  42909d:	push   esi
  42909e:	push   esi
  42909f:	push   esi
  4290a0:	lea    ebp,[ecx-0x562d64bd]
  4290a6:	fcomp  DWORD PTR [esi+eax*8+0x569bcd0b]
  4290ad:	lds    ebx,FWORD PTR [ebx+0x565fa9d2]
  4290b3:	jle    0x429090
  4290b5:	pushf  
  4290b6:	(bad)  
  4290b7:	or     ecx,ebp
  4290b9:	and    BYTE PTR [ebx+ebx*4],al
  4290bc:	shr    BYTE PTR [ecx-0x1aec2ca0],cl
  4290c2:	in     eax,0xe5
  4290c4:	fwait
  4290c5:	shr    BYTE PTR [ecx+0x5859d260],cl
  4290cb:	mov    bl,0xe5
  4290cd:	in     eax,0x56
  4290cf:	jg     0x4290a3
  4290d1:	test   eax,0xd2195602
  4290d6:	test   eax,0x5959d260
  4290db:	mov    bl,0xe5
  4290dd:	in     eax,0xb
  4290df:	test   eax,0xe84dd2e8
  4290e4:	push   ds
  4290e5:	add    esi,edx
  4290e7:	push   esi
  4290e8:	jle    0x4290c9
  4290ea:	imul   ebx,DWORD PTR [edi+0x56],0x7e
  4290ee:	push   eax
  4290ef:	mov    ebp,0xd2197556
  4290f4:	test   eax,0x60a90be8
  4290f9:	lea    ecx,[ebp+0x4]
  4290fc:	imul   ebp,DWORD PTR [ecx+0x60a9d260],0xffffffd2
  429103:	test   eax,0x9191d260
  429108:	mov    bl,0xe5
  42910a:	in     eax,0xd2
  42910c:	test   eax,0xa559d260
  429111:	mov    bl,0xe5
  429113:	in     eax,0xd2
  429115:	jg     0x4290ba
  429117:	cmp    eax,0xb0d26c32
  42911c:	rcl    dh,cl
  42911e:	rol    BYTE PTR [ecx+0x3c],cl
  429121:	lea    esi,[edi+esi*1-0x65]
  429125:	shl    BYTE PTR [ebx],cl
  429127:	or     edx,DWORD PTR [edx]
  429129:	mov    ds:0xd20207a3,eax
  42912e:	jg     0x429102
  429130:	mov    bl,0xd2
  429132:	ret    0xc65e
  429135:	or     ebx,DWORD PTR [ecx]
  429137:	imul   ebp,DWORD PTR [esi+0x79e8a9d2],0x30
  42913e:	std    
  42913f:	push   esi
  429140:	push   esi
  429141:	jne    0x429115
  429143:	fcmovnu st,st(4)
  429145:	fisttp DWORD PTR [ecx-0x421a1a1b]
  42914b:	arpl   ax,cx
  42914d:	shr    BYTE PTR [ecx+0x60a96b60],cl
  429153:	jp     0x42914e
  429155:	push   esi
  429156:	in     eax,0xe5
  429158:	mov    DWORD PTR ds:0xae5e5ab,ebp
  42915e:	imul   esi,DWORD PTR [edi+0x56565621],0xffffffd2
  429165:	(bad)  
  429166:	or     ch,BYTE PTR [ebx-0x49]
  429169:	xchg   BYTE PTR [esi+0x56],dl
  42916c:	push   esi
  42916d:	mov    DWORD PTR [eax],ebx
  42916f:	stos   DWORD PTR es:[edi],eax
  429170:	in     eax,0xe5
  429172:	or     ch,BYTE PTR [ebx-0x49]
  429175:	fwait
  429176:	push   esi
  429177:	push   esi
  429178:	push   esi
  429179:	lea    esi,[eax+ebp*8+0x3eb76b0a]
  429180:	push   esi
  429181:	push   esi
  429182:	push   esi
  429183:	mov    DWORD PTR [ebx+ebp*4-0x1b],eax
  429187:	in     eax,0xa
  429189:	imul   esi,DWORD PTR [edi+0x565656ec],0xffffff8d
  429190:	mov    ah,0xf9
  429192:	or     ch,BYTE PTR [ebx-0x49]
  429195:	arpl   WORD PTR [esi+0x56],dx
  429198:	push   esi
  429199:	mov    DWORD PTR [ebp-0x55],ecx
  42919c:	in     eax,0xe5
  42919e:	or     ch,BYTE PTR [ebx-0x49]
  4291a1:	pop    ds
  4291a2:	push   esi
  4291a3:	push   esi
  4291a4:	push   esi
  4291a5:	lea    esi,[edi+edx*8+0x5ab76b0a]
  4291ac:	push   esi
  4291ad:	push   esi
  4291ae:	push   esi
  4291af:	mov    esi,edx
  4291b1:	stos   DWORD PTR es:[edi],eax
  4291b2:	in     eax,0xe5
  4291b4:	or     ch,BYTE PTR [ebx-0x49]
  4291b7:	pop    esp
  4291b8:	push   esi
  4291b9:	push   esi
  4291ba:	push   esi
  4291bb:	push   ds
  4291bc:	sar    DWORD PTR [ecx],1
  4291be:	or     ch,BYTE PTR [ebx-0x49]
  4291c1:	add    eax,0xcd565656
  4291c6:	test   eax,0x5656e843
  4291cb:	push   esi
  4291cc:	rol    dh,cl
  4291ce:	or     ch,BYTE PTR [ebx-0x49]
  4291d1:	push   ebp
  4291d2:	push   esi
  4291d3:	push   esi
  4291d4:	push   esi
  4291d5:	int    0xa9
  4291d7:	mov    eax,0x56565656
  4291dc:	mov    DWORD PTR [ecx-0x55],ecx
  4291df:	in     eax,0xe5
  4291e1:	or     ch,BYTE PTR [ebx-0x49]
  4291e4:	bound  edx,QWORD PTR [esi+0x56]
  4291e7:	push   esi
  4291e8:	mov    ecx,esp
  4291ea:	mov    dh,0xe5
  4291ec:	in     eax,0xa
  4291ee:	imul   esi,DWORD PTR [edi+0x5656568b],0xffffff89
  4291f5:	out    0xa4,al
  4291f7:	in     eax,0xe5
  4291f9:	or     ch,BYTE PTR [ebx-0x49]
  4291fc:	or     dl,BYTE PTR [esi+0x56]
  4291ff:	push   esi
  429200:	mov    DWORD PTR [edi+0xae5e5c3],esp
  429206:	imul   esi,DWORD PTR [edi+0x56565668],0xffffff89
  42920d:	aaa    
  42920e:	shl    ch,0xe5
  429211:	or     ch,BYTE PTR [ebx-0x49]
  429214:	and    BYTE PTR [esi+0x56],dl
  429217:	push   esi
  429218:	lea    esi,[ebx+ebp*4+0x6eb76b0a]
  42921f:	push   esi
  429220:	push   esi
  429221:	push   esi
  429222:	(bad)  
  429223:	test   eax,0xa9c665c9
  429228:	cdq    
  429229:	push   eax
  42922a:	(bad)  
  42922b:	test   eax,0xa9c68736
  429230:	fs and eax,0x71f9a9c6
  429236:	(bad)  
  429237:	test   eax,0xa9c6e8d0
  42923c:	(bad)  [ebx+0xb83a9c6]
  429242:	(bad)  
  429243:	test   eax,0xa9c6ae13
  429248:	jecxz  0x4292c0
  42924a:	(bad)  
  42924b:	test   eax,0xa9c62595
  429250:	icebp  
  429251:	jno    0x429219
  429253:	test   eax,0xa9c6e892
  429258:	jmp    0xc6df:0x51a9c60b
  42925f:	test   eax,0xa9c65f2c
  429264:	push   cs
  429265:	loopne 0x42922d
  429267:	test   eax,0xa9c61de7
  42926c:	jns    0x429270
  42926e:	and    dh,dl
  429270:	(bad)  
  429271:	test   eax,0xa9c687c7
  429276:	popf   
  429277:	call   0x9c6de718
  42927c:	push   esi
  42927d:	lea    eax,[edi+ecx*4-0x37]
  429281:	xchg   esi,eax
  429282:	sbb    BYTE PTR [esp+ebx*4],0xd9
  429286:	or     ebx,ecx
  429288:	sub    eax,0x561e1c6f
  42928d:	push   es
  42928e:	xor    al,BYTE PTR [ebx+0x448d569c]
  429294:	(bad)  
  429295:	fist   DWORD PTR [esi-0x2663e380]
  42929b:	or     ebx,ecx
  42929d:	sub    eax,0x561e1c6f
  4292a2:	loopne 0x4292d6
  4292a4:	sbb    DWORD PTR [esi+edx*2-0x1570bb73],0xffffff96
  4292ac:	sbb    BYTE PTR [esp+ebx*4],0xd9
  4292b0:	or     ebx,ecx
  4292b2:	sub    eax,0x561e1c6f
  4292b7:	pop    edi
  4292b8:	xor    al,BYTE PTR [ebx+0x1197d7dc]
  4292be:	arpl   WORD PTR [ebx],cx
  4292c0:	je     0x4292dd
  4292c2:	pushf  
  4292c3:	push   esi
  4292c4:	lea    eax,[edi+ecx*4-0x37]
  4292c8:	xchg   esi,eax
  4292c9:	sbb    BYTE PTR [edx+ebp*2],0xd9
  4292cd:	pushf  
  4292ce:	fldcw  WORD PTR ds:0x561e1c6f
  4292d4:	push   es
  4292d5:	xor    al,BYTE PTR [ebx+0x448d569c]
  4292db:	(bad)  
  4292dc:	fist   DWORD PTR [esi-0x2695e380]
  4292e2:	pushf  
  4292e3:	fldcw  WORD PTR ds:0x561e1c6f
  4292e9:	loopne 0x42931d
  4292eb:	sbb    DWORD PTR [esi+edx*2-0x1570bb73],0xffffff96
  4292f3:	sbb    BYTE PTR [edx+ebp*2],0xd9
  4292f7:	pushf  
  4292f8:	fldcw  WORD PTR ds:0x561e1c6f
  4292fe:	pop    edi
  4292ff:	xor    al,BYTE PTR [ebx-0x682823be]
  429305:	adc    DWORD PTR [ebx+0xb],esp
  429308:	xchg   esi,eax
  429309:	inc    eax
  42930a:	xchg   ebx,eax
  42930b:	push   esi
  42930c:	push   esi
  42930d:	push   esi
  42930e:	lea    esi,[edi+0x5656563b]
  429314:	imul   ebp,DWORD PTR [ecx-0x17b22d18],0xffffff89
  42931b:	out    dx,eax
  42931c:	loopne 0x42939c
  42931e:	inc    ecx
  42931f:	imul   esi,DWORD PTR [ebx+0x563b8dd2],0x56
  429326:	push   esi
  429327:	sbb    BYTE PTR [esi+0x7e],ah
  42932a:	test   ebp,ecx
  42932c:	test   eax,0x56565603
  429331:	push   esi
  429332:	int    0xa9
  429334:	add    eax,DWORD PTR [edx-0x48]
  429337:	push   esi
  429338:	push   esi
  429339:	shr    BYTE PTR [ecx-0x5a902da0],cl
  42933f:	mov    bl,0xe5
  429341:	in     eax,0x9c
  429343:	shl    DWORD PTR [ebx-0x5a48694d],1
  429349:	jbe    0x429330
  42934b:	in     eax,0xd2
  42934d:	dec    ebp
  42934e:	pusha  
  42934f:	shr    BYTE PTR [ebx+0xf],cl
  429352:	mov    bl,0xe5
  429354:	in     eax,0x6b
  429356:	mov    bl,0xd2
  429358:	dec    ebp
  429359:	pusha  
  42935a:	shr    BYTE PTR [ebx+0x59],cl
  42935d:	mov    bl,0xe5
  42935f:	in     eax,0x6b
  429361:	mov    bl,0x89
  429363:	push   edx
  429364:	stos   DWORD PTR es:[edi],eax
  429365:	in     eax,0xe5
  429367:	or     ch,BYTE PTR [ebx-0x57]
  42936a:	xor    eax,0xa51d11e
  42936f:	imul   ebp,DWORD PTR [ecx-0x5491765c],0xffffffe5
  429376:	in     eax,0xa
  429378:	imul   ebp,DWORD PTR [ecx+0x3fd11e58],0xa
  42937f:	imul   ebp,DWORD PTR [ecx-0x54d47636],0xffffffe5
  429386:	in     eax,0xa
  429388:	imul   ebp,DWORD PTR [ecx-0x692ee1f8],0xa
  42938f:	imul   ebp,DWORD PTR [ecx-0x541476d8],0xffffffe5
  429396:	in     eax,0xa
  429398:	imul   ebp,DWORD PTR [ecx+0xac6d2c3],0x6b
  42939f:	test   eax,0x8dd19c2a
  4293a4:	mov    ds:0xa9420ed,al
  4293a9:	cmp    cl,BYTE PTR [ebp-0x46a5ca57]
  4293af:	add    cl,BYTE PTR [ebx]
  4293b1:	in     eax,0xe5
  4293b3:	rcl    al,cl
  4293b5:	or     bl,BYTE PTR [ebx+esi*1+0xad00b0a]
  4293bc:	imul   esi,DWORD PTR [ebx],0x1e
  4293bf:	shl    DWORD PTR [esi-0x68],1
  4293c2:	jle    0x4293a7
  4293c4:	lea    ebp,[ecx-0x562d64cb]
  4293ca:	inc    ebx
  4293cb:	mov    edi,0xe5e57f48
  4293d0:	pushf  
  4293d1:	int    0x20
  4293d3:	mov    bl,0x8d
  4293d5:	push   DWORD PTR [ebx-0x2d64daf5]
  4293db:	test   eax,0xe56fd360
  4293e0:	in     eax,0xe5
  4293e2:	fwait
  4293e3:	shr    BYTE PTR [ecx+0x5859d260],cl
  4293e9:	mov    bl,0xe5
  4293eb:	in     eax,0x56
  4293ed:	jg     0x4293c1
  4293ef:	test   eax,0xd219565f
  4293f4:	dec    ebp
  4293f5:	mov    eax,0xcb0b309c
  4293fa:	push   ds
  4293fb:	add    ebx,edi
  4293fd:	imul   ebp,DWORD PTR [ecx+0x7ec11803],0x47
  429404:	add    DWORD PTR [ecx+eax*2-0x10a8cb14],esi
  42940b:	inc    ecx
  42940c:	inc    ecx
  42940d:	loope  0x429391
  42940f:	mov    ah,0x41
  429411:	in     al,dx
  429412:	xor    al,0xd3
  429414:	popa   
  429415:	fbld   TBYTE PTR [ebx+0x34]
  429418:	xor    BYTE PTR [ecx+eax*2-0x3d86cb14],0xb3
  429420:	in     eax,0xe5
  429422:	push   ds
  429423:	iret   
  429424:	call   0x2034b50e
  429429:	or     ch,BYTE PTR [ebx-0x49]
  42942c:	jmp    0xa98ea87
  429431:	imul   esi,DWORD PTR [edi+0x56565632],0xa
  429438:	imul   esi,DWORD PTR [edi+0x56565674],0x20
  42943f:	jle    0x429460
  429441:	sar    BYTE PTR [esi+0x60],cl
  429444:	or     ch,BYTE PTR [ebx-0x49]
  429447:	inc    ecx
  429448:	push   esi
  429449:	push   esi
  42944a:	push   esi
  42944b:	and    BYTE PTR [edi],al
  42944d:	pop    ds
  42944e:	or     ch,BYTE PTR [ebx-0x49]
  429451:	adc    DWORD PTR [esi+0x56],edx
  429454:	push   esi
  429455:	and    BYTE PTR [ecx+0x1f],al
  429458:	or     ch,BYTE PTR [ebx-0x49]
  42945b:	mov    dl,0x56
  42945d:	push   esi
  42945e:	push   esi
  42945f:	and    BYTE PTR [edi+0x1f],cl
  429462:	or     ch,BYTE PTR [ebx-0x49]
  429465:	orps   xmm2,XMMWORD PTR [esi+0x56]
  429469:	pushf  
  42946a:	shr    DWORD PTR [edi-0x57],1
  42946d:	nop
  42946e:	or     ch,BYTE PTR [ebx-0x49]
  429471:	sub    DWORD PTR [esi+0x56],edx
  429474:	push   esi
  429475:	lea    esp,[edx+0x3a0a3ad5]
  42947b:	loop   0x429419
  42947d:	ror    DWORD PTR [ebp-0x5632998b],1
  429483:	dec    di
  429485:	sbb    eax,0xa9cddfe5
  42948a:	int3   
  42948b:	and    ch,BYTE PTR [esi-0x5632696c]
  429491:	sbb    DWORD PTR [esi],eax
  429493:	scas   al,BYTE PTR es:[edi]
  429494:	mov    al,0x5f
  429496:	int    0xa9
  429498:	aam    0x1d
  42949a:	test   DWORD PTR [ecx+0xb],ecx
  42949d:	or     cl,ch
  42949f:	test   eax,0xe7e88fd8
  4294a4:	mov    al,BYTE PTR [edi-0x2d641a1b]
  4294aa:	test   eax,0x37e5643
  4294af:	jp     0x4294f9
  4294b1:	jg     0x429498
  4294b3:	in     eax,0x9c
  4294b5:	(bad)  
  4294b6:	or     esp,DWORD PTR ds:0xd29b7620
  4294bc:	test   eax,0x44d11e60
  4294c1:	fwait
  4294c2:	shr    BYTE PTR [ecx+0x5859d260],cl
  4294c8:	mov    bl,0xe5
  4294ca:	in     eax,0x56
  4294cc:	jg     0x4294a0
  4294ce:	test   eax,0xd219565f
  4294d3:	stc    
  4294d4:	pushf  
  4294d5:	rcr    DWORD PTR [ebx-0x72a0df65],1
  4294db:	dec    ebp
  4294dc:	nop
  4294dd:	jmp    0x4294ff
  4294df:	push   esi
  4294e0:	lea    ecx,[ebp+0x565656e9]
  4294e6:	jmp    0x429483
  4294e8:	fwait
  4294e9:	shr    BYTE PTR [ecx+0xbc69c43],cl
  4294ef:	and    eax,0x8d9b5f20
  4294f4:	mov    bh,0x21
  4294f6:	push   esi
  4294f7:	push   esi
  4294f8:	push   esi
  4294f9:	fwait
  4294fa:	shr    BYTE PTR [ecx+0x5859d260],cl
  429500:	mov    bl,0xe5
  429502:	in     eax,0x56
  429504:	jg     0x4294d8
  429506:	test   eax,0x1e19565f
  42950b:	add    edi,DWORD PTR [ebx]
  42950d:	lea    ebp,[ecx-0x73a96470]
  429513:	pop    ecx
  429514:	mov    ds:0xb79641e2,al
  429519:	push   eax
  42951a:	mov    bl,0xe5
  42951c:	in     eax,0x56
  42951e:	test   eax,0xe8a2dce8
  429523:	in     eax,0xb3
  429525:	in     eax,0xe5
  429527:	xchg   esi,eax
  429528:	out    dx,al
  429529:	shr    BYTE PTR [ebx-0x542da9aa],1
  42952f:	jp     0x42952a
  429531:	push   esi
  429532:	in     eax,0xe5
  429534:	mov    ecx,0xe5e5ab38
  429539:	rol    cl,cl
  42953b:	or     ch,BYTE PTR [ebx-0x57]
  42953e:	rcr    BYTE PTR [esi],0xd1
  429541:	push   edi
  429542:	rcr    BYTE PTR [ecx],cl
  429544:	or     ch,BYTE PTR [ebx+0x75]
  429547:	mov    cl,0x8d
  429549:	jmp    0x4294d2
  42954b:	or     ch,BYTE PTR [ebx+0x75]
  42954e:	test   al,0x1e
  429550:	jno    0x42956e
  429552:	or     ch,BYTE PTR [ebx+0x75]
  429555:	or     BYTE PTR [ebp+0x6b0a4beb],0x75
  42955c:	mov    DWORD PTR [esi],ebx
  42955e:	jno    0x42959f
  429560:	or     ch,BYTE PTR [ebx+0x75]
  429563:	js     0x4294f2
  429565:	jmp    0x4295e3
  429567:	or     ch,BYTE PTR [ebx+0x75]
  42956a:	mov    edx,0x7a4d6b0a
  42956f:	rcl    BYTE PTR ds:0xd14d6b0a,cl
  429575:	lea    ebx,[eax+0xaadd256]
  42957b:	imul   esi,DWORD PTR [ebp+0x59],0xffffffd2
  42957f:	sbb    DWORD PTR [edx],ecx
  429581:	imul   esi,DWORD PTR [ebp-0x12],0xffffff8d
  429585:	jmp    0x4295c0
  429587:	or     ch,BYTE PTR [ebx+0x75]
  42958a:	stos   BYTE PTR es:[edi],al
  42958b:	or     ch,BYTE PTR [ebx-0x57]
  42958e:	inc    eax
  42958f:	(bad)  
  429590:	out    dx,eax
  429591:	jecxz  0x42959d
  429593:	imul   ebp,DWORD PTR [ecx+0x3fd11e6f],0xa
  42959a:	imul   ebp,DWORD PTR [ecx+0x77ef8d8a],0xa
  4295a1:	imul   ebp,DWORD PTR [ecx+0x4d6b0aa5],0xffffff8e
  4295a8:	or     ch,BYTE PTR [ebx+0x7e]
  4295ab:	xchg   ecx,eax
  4295ac:	shr    BYTE PTR [ecx+0x4d3196b8],cl
  4295b2:	pop    ecx
  4295b3:	pushf  
  4295b4:	int    0xb
  4295b6:	and    eax,0x6b0ac19c
  4295bb:	test   eax,0xb8a9d259
  4295c0:	xchg   esi,eax
  4295c1:	xor    DWORD PTR [ebp-0x40],ecx
  4295c4:	pushf  
  4295c5:	int    0xb
  4295c7:	and    eax,0x6b0ac19c
  4295cc:	test   eax,0xad19cc0
  4295d1:	imul   ebp,DWORD PTR [ecx-0x5694f540],0xffffffc0
  4295d8:	shr    BYTE PTR [ecx-0x47562dfe],cl
  4295de:	push   esi
  4295df:	jle    0x429641
  4295e1:	push   esi
  4295e2:	jle    0x429600
  4295e4:	push   esi
  4295e5:	jle    0x4295c6
  4295e7:	push   esi
  4295e8:	jle    0x42963a
  4295ea:	push   esi
  4295eb:	jle    0x42964c
  4295ed:	push   esi
  4295ee:	jle    0x429633
  4295f0:	out    0xfe,eax
  4295f2:	stc    
  4295f3:	push   esi
  4295f4:	push   esi
  4295f5:	mov    bl,0xa9
  4295f7:	pusha  
  4295f8:	shr    BYTE PTR [ecx+0x60a9d260],cl
  4295fe:	ror    BYTE PTR [ecx-0x1a1a4c6f],cl
  429604:	shr    BYTE PTR [ecx-0x5aa62da0],cl
  42960a:	mov    bl,0xe5
  42960c:	in     eax,0xd2
  42960e:	jg     0x42959d
  429610:	dec    ebp
  429611:	add    al,0xd2
  429613:	scas   al,BYTE PTR es:[edi]
  429614:	sbb    BYTE PTR [ebx+0x32],bl
  429617:	xchg   edx,edx
  429619:	loopne 0x4295ed
  42961b:	adc    DWORD PTR [edx+edx*8],edi
  42961e:	pavgb  mm3,QWORD PTR [ebx-0x73e754f5]
  429625:	pop    es
  429626:	push   es
  429627:	pop    esi
  429628:	(bad)  
  429629:	or     esi,DWORD PTR [ecx+0x6b]
  42962c:	mov    bl,0xff
  42962e:	add    eax,0x1c716d09
  429633:	in     eax,0x75
  429635:	rcr    bl,cl
  429637:	push   ds
  429638:	(bad)  [eax+0x63]
  42963b:	rcl    BYTE PTR [ebp-0x4c6e232e],cl
  429641:	in     eax,0xe5
  429643:	push   ds
  429644:	xor    esp,ebp
  429646:	xchg   esi,eax
  429647:	stos   BYTE PTR es:[edi],al
  429648:	dec    eax
  429649:	mov    bl,0xe5
  42964b:	in     eax,0xb7
  42964d:	push   esp
  42964e:	xchg   esi,eax
  42964f:	stos   BYTE PTR es:[edi],al
  429650:	jbe    0x429605
  429652:	in     eax,0xe5
  429654:	mov    bh,0x36
  429656:	xchg   esi,eax
  429657:	stos   BYTE PTR es:[edi],al
  429658:	xlat   BYTE PTR ds:[ebx]
  429659:	in     eax,0xe5
  42965b:	in     eax,0xd2
  42965d:	inc    eax
  42965e:	outs   dx,DWORD PTR ds:[esi]
  42965f:	in     eax,0xe5
  429661:	in     eax,0xb7
  429663:	rcl    DWORD PTR [esi-0x1a1af156],1
  429669:	in     eax,0x1e
  42966b:	jp     0x429612
  42966d:	in     eax,0xe5
  42966f:	in     eax,0x50
  429671:	xchg   esi,eax
  429672:	stos   BYTE PTR es:[edi],al
  429673:	clc    
  429674:	in     eax,0xe5
  429676:	in     eax,0xa3
  429678:	arpl   WORD PTR [esi+edx*4],si
  42967b:	stos   BYTE PTR es:[edi],al
  42967c:	lods   eax,DWORD PTR ds:[esi]
  42967d:	in     eax,0xe5
  42967f:	in     eax,0xd2
  429681:	les    esp,FWORD PTR [ebp+0x1ee5e5b3]
  429687:	iret   
  429688:	xchg   ebp,eax
  429689:	in     eax,0xd2
  42968b:	lock pop esi
  42968d:	test   DWORD PTR [ebx],ecx
  42968f:	jno    0x429627
  429691:	xor    DWORD PTR [ebx-0x15b294fe],ebx
  429697:	xchg   esi,eax
  429698:	xor    DWORD PTR [ebx],edi
  42969a:	test   DWORD PTR [ebx],ecx
  42969c:	lock xchg esi,eax
  42969e:	stos   BYTE PTR es:[edi],al
  42969f:	and    ebp,0x3b8de5e5
  4296a5:	fistp  QWORD PTR [ebp+0x7ae74d6b]
  4296ab:	push   esi
  4296ac:	push   esi
  4296ad:	push   esi
  4296ae:	cmc    
  4296af:	enter  0x3db7,0x74
  4296b3:	cmc    
  4296b4:	shr    BYTE PTR [esi-0x1a3630e2],cl
  4296ba:	and    ebx,DWORD PTR [ebx+0xb]
  4296bd:	sbb    DWORD PTR [esi-0x697a4dcf],edx
  4296c3:	xor    DWORD PTR [edx+0x2],ebx
  4296c6:	or     edi,DWORD PTR [edi]
  4296c8:	je     0x429733
  4296ca:	lea    ebx,[eax-0x24b29421]
  4296d0:	mov    bh,0x3d
  4296d2:	je     0x4296c3
  4296d4:	rcl    BYTE PTR [esi+ebx*1+0x23e5f9cf],cl
  4296db:	adc    eax,0x3196660b
  4296e0:	jb     0x429667
  4296e2:	xchg   esi,eax
  4296e3:	xor    DWORD PTR [ebx],ebp
  4296e5:	add    cl,BYTE PTR [ebx]
  4296e7:	aas    
  4296e8:	je     0x429748
  4296ea:	lea    esi,[edx-0x21]
  4296ed:	imul   esp,DWORD PTR [edx-0x175d2d18],0xffffffd2
  4296f4:	sbb    esi,DWORD PTR [edi-0x2df98baa]
  4296fa:	adc    al,0xea
  4296fc:	mov    bl,0x60
  4296fe:	loopne 0x429696
  429700:	xor    DWORD PTR [edx-0x7b],esi
  429703:	xchg   esi,eax
  429704:	xor    DWORD PTR [ebx],ebp
  429706:	add    dl,BYTE PTR [esi-0x57]
  429709:	stc    
  42970a:	push   ds
  42970b:	test   eax,0x3f0b5fe8
  429710:	mov    ds:0x2732f9a2,eax
  429715:	xchg   esi,eax
  429716:	xor    DWORD PTR [edx+0x5a319685],esi
  42971c:	add    dl,dl
  42971e:	dec    ebp
  42971f:	fist   DWORD PTR [esi-0x57]
  429722:	leave  
  429723:	push   ds
  429724:	rcr    DWORD PTR [edi+0xb],0x3f
  429728:	imul   ecx,DWORD PTR [ebp-0x25],0xffffffa3
  42972c:	mov    ds:0xd2c332c9,al
  429731:	dec    ebp
  429732:	out    0x96,eax
  429734:	xor    DWORD PTR [ebx+0x11319685],ebx
  42973a:	add    dl,BYTE PTR [esi-0x57]
  42973d:	xchg   ebp,eax
  42973e:	push   ds
  42973f:	rcr    DWORD PTR [edi+0xb],0x8c
  429743:	imul   ecx,DWORD PTR [ebp-0x19],0xffffffa3
  429747:	jne    0x4296de
  429749:	xchg   esi,eax
  42974a:	out    dx,al
  42974b:	popa   
  42974c:	push   esi
  42974d:	push   esi
  42974e:	push   esi
  42974f:	dec    DWORD PTR [ecx]
  429751:	pushf  
  429752:	sar    DWORD PTR [eax],1
  429754:	popf   
  429755:	jbe    0x4296f3
  429757:	rol    DWORD PTR ds:0xd275256d,1
  42975d:	fcmovnbe st,st(2)
  42975f:	pop    ecx
  429760:	xchg   ecx,eax
  429761:	mov    bl,0xe5
  429763:	in     eax,0x1e
  429765:	fild   DWORD PTR [edx]
  429767:	mov    ebp,0xc863279c
  42976c:	mov    ds:0xb7aa961c,eax
  429771:	in     eax,0xe5
  429773:	in     eax,0xd2
  429775:	test   eax,0x74251802
  42977a:	sub    DWORD PTR [ebx-0x2c81eee1],esp
  429780:	pushf  
  429781:	sar    DWORD PTR [eax],1
  429783:	popf   
  429784:	inc    ecx
  429785:	sar    BYTE PTR [eax],cl
  429787:	adc    DWORD PTR [ebx],ecx
  429789:	test   eax,0x603bd25f
  42978e:	rcr    BYTE PTR [ebx-0x20162de6],cl
  429794:	rcl    BYTE PTR [ecx],cl
  429796:	sbb    al,0xb
  429798:	dec    ebp
  429799:	pop    edi
  42979a:	or     esi,DWORD PTR [ebp+0x5f]
  42979d:	imul   edi,DWORD PTR [esi-0x18],0x18
  4297a1:	fs xchg edi,eax
  4297a3:	or     ebp,DWORD PTR [ebx-0x5e]
  4297a6:	call   0xa2adee47
  4297ab:	leave  
  4297ac:	mov    ds:0x3041e814,eax
  4297b1:	sbb    BYTE PTR [ecx],dl
  4297b3:	fild   WORD PTR [edi]
  4297b5:	push   es
  4297b6:	xchg   esi,eax
  4297b7:	xor    DWORD PTR [edx+esi*4],esi
  4297ba:	popf   
  4297bb:	jbe    0x42978f
  4297bd:	lea    esp,fs:[eax-0x3c]
  4297c1:	rcr    BYTE PTR [edi+esi*4-0x2d598bca],cl
  4297c8:	mov    ds:0x6bab0b5f,al
  4297cd:	mov    ds:0x41f918f9,al
  4297d2:	ret    0xa2d2
  4297d5:	add    dl,dl
  4297d7:	cmc    
  4297d8:	ud2    
  4297da:	stc    
  4297db:	mov    ds:0xabd2f9a2,eax
  4297e0:	xor    cl,BYTE PTR [ebx]
  4297e2:	shl    BYTE PTR [edx+0x7456b7f9],cl
  4297e8:	push   eax
  4297e9:	imul   ebx,DWORD PTR [eax],0xffffffd2
  4297ec:	mov    ds:0xa26b2dc9,al
  4297f1:	leave  
  4297f2:	sbb    BYTE PTR [edx-0x6287cd18],ah
  4297f8:	lods   al,BYTE PTR ds:[esi]
  4297f9:	pushf  
  4297fa:	sar    edi,1
  4297fc:	add    eax,0x5f716d09
  429801:	in     eax,0x75
  429803:	rcr    bl,cl
  429805:	push   ds
  429806:	fstp   TBYTE PTR [edi-0x33]
  429809:	test   eax,0x565656e8
  42980e:	push   esi
  42980f:	int    0xa9
  429811:	leave  
  429812:	call   0xd298ee6d
  429817:	test   eax,0xe875d2e8
  42981c:	shl    BYTE PTR [ebp-0x18],cl
  42981f:	shl    BYTE PTR [ebp-0x18],cl
  429822:	shl    BYTE PTR [ebp-0x18],cl
  429825:	shl    BYTE PTR [ebp-0x18],cl
  429828:	mov    ebp,0x630214d2
  42982d:	jp     0x429877
  42982f:	jg     0x429816
  429831:	in     eax,0xcd
  429833:	test   eax,0xa71061db
  429838:	add    al,0xd2
  42983a:	jne    0x429824
  42983c:	ror    BYTE PTR [ecx+edx*4],cl
  42983f:	mov    bl,0xe5
  429841:	in     eax,0xc8
  429843:	lea    ebp,[ecx]
  429845:	mov    bl,0x9c
  429847:	pop    ebx
  429848:	pushf  
  429849:	(bad)  
  42984a:	or     ecx,ebp
  42984c:	or     ecx,DWORD PTR [ebx+ebp*2-0x4e71557]
  429853:	xchg   esi,eax
  429854:	stos   BYTE PTR es:[edi],al
  429855:	xchg   edi,eax
  429856:	jbe    0x42983d
  429858:	in     eax,0xd2
  42985a:	jne    0x429844
  42985c:	pushf  
  42985d:	pop    ebx
  42985e:	or     ecx,DWORD PTR [eax+ebx*1+0x68aa96ad]
  429865:	jbe    0x42984c
  429867:	in     eax,0xd2
  429869:	jne    0x429853
  42986b:	shr    BYTE PTR [ebx+0x59],cl
  42986e:	in     eax,0xe5
  429870:	in     eax,0x9c
  429872:	pop    ebx
  429873:	or     ecx,DWORD PTR [eax+ebx*1-0x79556910]
  42987a:	jbe    0x429861
  42987c:	in     eax,0xb
  42987e:	dec    ebp
  42987f:	pop    edi
  429880:	push   ds
  429881:	lock push esi
  429883:	imul   ecx,DWORD PTR [ebp+0x19],0xffffffd2
  429887:	clc    
  429888:	pushf  
  429889:	pop    ebp
  42988a:	or     esi,edi
  42988c:	imul   edx,DWORD PTR [ebx+ebx*8],0xffffffd2
  429890:	adc    al,0xdb
  429892:	sbb    al,bh
  429894:	je     0x429858
  429896:	shl    BYTE PTR [ebp-0x25],cl
  429899:	rcl    BYTE PTR [eax+ebp*8],cl
  42989c:	push   edx
  42989d:	push   esp
  42989e:	fistp  WORD PTR [ebp+ebx*2+0x60a3f70b]
  4298a5:	dec    eax
  4298a6:	jle    0x42990d
  4298a8:	shl    BYTE PTR [ebp-0x25],cl
  4298ab:	rcl    BYTE PTR [eax+ebp*8],cl
  4298ae:	push   edx
  4298af:	push   esp
  4298b0:	fistp  WORD PTR [ebp+ebx*2+0x5ca3f70b]
  4298b7:	dec    eax
  4298b8:	push   eax
  4298b9:	xchg   esi,eax
  4298ba:	stos   BYTE PTR es:[edi],al
  4298bb:	stos   DWORD PTR es:[edi],eax
  4298bc:	mov    bl,0xe5
  4298be:	in     eax,0xd2
  4298c0:	test   eax,0xe814d2e8
  4298c5:	shr    BYTE PTR [ecx-0x202ead25],cl
  4298cb:	or     eax,ecx
  4298cd:	sar    BYTE PTR [ebx],cl
  4298cf:	push   eax
  4298d0:	or     ecx,DWORD PTR [ebp+0x5f]
  4298d3:	pushf  
  4298d4:	pop    ebp
  4298d5:	imul   ecx,DWORD PTR [ebp-0x48],0xffffffd2
  4298d9:	dec    ebp
  4298da:	call   0x9d2b0eb1
  4298df:	adc    eax,0x5b9c300b
  4298e4:	imul   ecx,DWORD PTR [ebp-0x28],0xffffffd2
  4298e8:	pop    edi
  4298e9:	or     ecx,DWORD PTR [ebx+ecx*1+0x74f018f7]
  4298f0:	push   es
  4298f1:	or     ecx,DWORD PTR [ebp+0x5f]
  4298f4:	imul   ecx,DWORD PTR [ebp-0x28],0xffffffd2
  4298f8:	dec    ebp
  4298f9:	call   0x3b4dae9a
  4298fe:	add    dl,dl
  429900:	test   eax,0xb3aa8d5f
  429905:	dec    ecx
  429906:	jg     0x4298ed
  429908:	in     eax,0x6b
  42990a:	test   eax,0xd4a9cde7
  42990f:	xchg   ebp,eax
  429910:	push   esi
  429911:	push   esi
  429912:	push   esi
  429913:	shr    BYTE PTR [ecx-0x1881a9fe],cl
  429919:	rcr    BYTE PTR [ecx-0x28],cl
  42991c:	mov    bl,0xe5
  42991e:	in     eax,0x56
  429920:	push   eax
  429921:	ror    BYTE PTR [ebp-0x18],cl
  429924:	pushf  
  429925:	adc    eax,0xa96b300b
  42992a:	xchg   ebp,eax
  42992b:	sbb    BYTE PTR [esi+0x7e],ah
  42992e:	ret    0xa9d2
  429931:	add    dl,BYTE PTR [esi+0x7e]
  429934:	out    0xd2,eax
  429936:	pop    ecx
  429937:	fdiv   DWORD PTR [ebx-0x64a91a1b]
  42993d:	add    ch,BYTE PTR [ebx-0x57]
  429940:	xchg   ebp,eax
  429941:	int    0xa9
  429943:	inc    ebx
  429944:	mov    ecx,DWORD PTR [edx]
  429946:	imul   edx,DWORD PTR [ecx],0xd443a9cd
  42994c:	mov    BYTE PTR [esi+0x56],dl
  42994f:	shr    BYTE PTR [ecx+0xbc69ce8],cl
  429955:	int    0x18
  429957:	test   eax,0xd2237e95
  42995c:	test   eax,0x434dd2c9
  429961:	pushf  
  429962:	(bad)  
  429963:	pushf  
  429964:	adc    eax,0x490b088d
  429969:	jg     0x429950
  42996b:	in     eax,0xd2
  42996d:	test   eax,0xd859d202
  429972:	mov    bl,0xe5
  429974:	in     eax,0xb
  429976:	xor    BYTE PTR [esi+0x56ebcbaf],dl
  42997c:	fwait
  42997d:	sbb    dl,dl
  42997f:	test   eax,0xbc69ce8
  429984:	int    0x18
  429986:	test   eax,0xd2967e95
  42998b:	test   eax,0xbc69cd4
  429990:	int    0x18
  429992:	fcom   DWORD PTR [esi+0x5656b240]
  429998:	push   esi
  429999:	shr    BYTE PTR [ecx+0xbc69ce8],cl
  42999f:	int    0x18
  4299a1:	test   eax,0xd2657e95
  4299a6:	test   eax,0xea4dd2c9
  4299ab:	pushf  
  4299ac:	(bad)  
  4299ad:	lea    ebp,[edx-0x1a80b64d]
  4299b3:	in     eax,0x6b
  4299b5:	test   eax,0xe5e379ea
  4299ba:	in     eax,0xe5
  4299bc:	int    0xa9
  4299be:	out    0x0,eax
  4299c0:	or     bh,BYTE PTR [esi+0x6]
  4299c3:	int    0xa9
  4299c5:	stc    
  4299c6:	popa   
  4299c7:	pop    ds
  4299c8:	lods   al,BYTE PTR ds:[esi]
  4299c9:	xchg   esp,eax
  4299ca:	rcl    BYTE PTR [eax+ebp*8],cl
  4299cd:	pushf  
  4299ce:	pop    ebp
  4299cf:	or     esi,edi
  4299d1:	jns    0x429a44
  4299d3:	in     eax,0xe5
  4299d5:	in     eax,0xd2
  4299d7:	test   eax,0xbc69ce8
  4299dc:	int    0x6b
  4299de:	test   eax,0xe8a9d2e7
  4299e3:	pushf  
  4299e4:	(bad)  
  4299e5:	or     ecx,ebp
  4299e7:	imul   ebp,DWORD PTR [ecx-0x17b22d07],0xffffffd2
  4299ee:	test   eax,0xb159cd8
  4299f3:	xor    BYTE PTR [eax],bl
  4299f5:	data16 je 0x4299fe
  4299f8:	rol    BYTE PTR [eax+ebx*2],cl
  4299fb:	imul   ebp,DWORD PTR [ecx-0x47562d19],0xffffffd2
  429a02:	add    al,0x58
  429a04:	imul   ebp,DWORD PTR [ecx-0x17562d07],0xffffffd2
  429a0b:	dec    ebp
  429a0c:	out    0x9c,eax
  429a0e:	(bad)  
  429a0f:	or     ecx,ebp
  429a11:	sbb    cl,al
  429a13:	je     0x429a3b
  429a15:	shr    BYTE PTR [ecx-0x18b22d18],cl
  429a1b:	pushf  
  429a1c:	(bad)  
  429a1d:	or     ecx,ebp
  429a1f:	sar    DWORD PTR [ecx+0x6c],0x18
  429a23:	shl    DWORD PTR [esp+ebx*1-0x2e],0x4d
  429a28:	out    0xd2,eax
  429a2a:	test   eax,0xd859d202
  429a2f:	mov    bl,0xe5
  429a31:	in     eax,0x96
  429a33:	xor    DWORD PTR [ebp-0x15],ebp
  429a36:	push   esi
  429a37:	jle    0x4299ce
  429a39:	push   esi
  429a3a:	fwait
  429a3b:	pop    edi
  429a3c:	popf   
  429a3d:	call   0x5fa9:0xbf9a9d2
  429a44:	ror    BYTE PTR [ebp+0x2],cl
  429a47:	shr    BYTE PTR [ebx-0x28],cl
  429a4a:	mov    bl,0xe5
  429a4c:	in     eax,0x1e
  429a4e:	shl    DWORD PTR [esi-0x65],1
  429a51:	push   esi
  429a52:	jle    0x4299e9
  429a54:	push   esi
  429a55:	jmp    0x429ab6
  429a57:	imul   ebp,DWORD PTR [ecx-0x17562d07],0xffffffd2
  429a5e:	dec    ebp
  429a5f:	stc    
  429a60:	pushf  
  429a61:	(bad)  
  429a62:	or     ecx,ebp
  429a64:	sbb    cl,al
  429a66:	shr    BYTE PTR [ecx-0x2d518137],cl
  429a6c:	dec    ebp
  429a6d:	jmp    0x49b3:0xaa8dc69c
  429a74:	jg     0x429a5b
  429a76:	in     eax,0x6b
  429a78:	test   eax,0xd2509dea
  429a7d:	dec    ebp
  429a7e:	stc    
  429a7f:	pushf  
  429a80:	(bad)  
  429a81:	or     ecx,ebp
  429a83:	xchg   esi,eax
  429a84:	scas   eax,DWORD PTR es:[edi]
  429a85:	rcl    edx,0x4d
  429a88:	mov    eax,0xd24a046b
  429a8d:	test   eax,0x8dc69cc9
  429a92:	or     BYTE PTR [ebx],cl
  429a94:	dec    ecx
  429a95:	jg     0x429a7c
  429a97:	in     eax,0xd2
  429a99:	test   eax,0xb84dd2e8
  429a9e:	pushf  
  429a9f:	(bad)  
  429aa0:	or     ecx,ebp
  429aa2:	mov    ds:0xb7964a04,eax
  429aa7:	pop    esi
  429aa8:	push   esi
  429aa9:	push   esi
  429aaa:	push   esi
  429aab:	shl    BYTE PTR [ebp-0x25],cl
  429aae:	ror    BYTE PTR [ebp+0x19],cl
  429ab1:	shr    BYTE PTR [ecx-0x63a4a116],cl
  429ab7:	pop    ebx
  429ab8:	jns    0x429b27
  429aba:	std    
  429abb:	push   esi
  429abc:	push   esi
  429abd:	ror    BYTE PTR [ebp-0x18],cl
  429ac0:	pushf  
  429ac1:	adc    eax,0xc118300b
  429ac6:	shr    BYTE PTR [ecx-0x2da08118],cl
  429acc:	test   eax,0xd20b9dc9
  429ad1:	test   eax,0xbc69ce8
  429ad6:	int    0xff
  429ad8:	add    eax,0x5f716d09
  429add:	in     eax,0x75
  429adf:	rcr    bl,cl
  429ae1:	push   ds
  429ae2:	fist   DWORD PTR [ebx-0x33]
  429ae5:	test   eax,0x565656e8
  429aea:	push   esi
  429aeb:	int    0xa9
  429aed:	fsubr  st,st(0)
  429aef:	push   esi
  429af0:	push   esi
  429af1:	push   esi
  429af2:	shr    BYTE PTR [ecx+0x2a96b02],cl
  429af8:	shr    BYTE PTR [ecx+0x7f48b9e8],cl
  429afe:	in     eax,0xe5
  429b00:	pushf  
  429b01:	ror    DWORD PTR [ebp-0x2d9c4c15],0x7e
  429b08:	pop    edi
  429b09:	or     esi,DWORD PTR [ecx+0x18]
  429b0c:	xchg   ebp,eax
  429b0d:	xchg   esi,eax
  429b0e:	stos   BYTE PTR es:[edi],al
  429b0f:	jl     0x429ac4
  429b11:	in     eax,0xe5
  429b13:	shr    BYTE PTR [ecx+0x5f7ed25f],cl
  429b19:	or     ebp,ecx
  429b1b:	cmp    al,0xc8
  429b1d:	imul   edi,DWORD PTR [esi+0x2],0xffffffcd
  429b21:	test   eax,0x565695ea
  429b26:	push   esi
  429b27:	shr    BYTE PTR [ecx-0x17812d16],cl
  429b2d:	shl    BYTE PTR [edx-0x630e63fe],cl
  429b33:	ror    DWORD PTR [ebx],0x92
  429b36:	mov    ds:0x5919cda8,eax
  429b3b:	mov    bl,0xe5
  429b3d:	xchg   esi,eax
  429b3e:	stos   BYTE PTR es:[edi],al
  429b3f:	popf   
  429b40:	in     eax,0xe5
  429b42:	in     eax,0xd2
  429b44:	jle    0x429b48
  429b46:	shr    BYTE PTR [ecx-0x3cbff4a1],cl
  429b4c:	in     eax,0xe5
  429b4e:	in     eax,0xd2
  429b50:	jle    0x429bb1
  429b52:	shl    BYTE PTR [edx+0x34975e02],cl
  429b58:	shl    BYTE PTR [edx+0xbd09ce8],cl
  429b5e:	xlat   BYTE PTR ds:[ebx]
  429b5f:	imul   edi,DWORD PTR [esi+0x43],0x18
  429b63:	fs xchg esi,eax
  429b65:	stos   BYTE PTR es:[edi],al
  429b66:	add    esp,ebp
  429b68:	in     eax,0xe5
  429b6a:	sar    BYTE PTR [esi-0x18],cl
  429b6d:	pushf  
  429b6e:	icebp  
  429b6f:	or     edx,DWORD PTR [edx-0x42068195]
  429b75:	int    0xa9
  429b77:	xchg   ebp,eax
  429b78:	xchg   edx,eax
  429b79:	push   esi
  429b7a:	push   esi
  429b7b:	push   esi
  429b7c:	jns    0x429b1f
  429b7e:	in     eax,0xe5
  429b80:	in     eax,0xd2
  429b82:	jle    0x429b6c
  429b84:	pushf  
  429b85:	icebp  
  429b86:	lea    edi,[ebx-0x7]
  429b89:	or     edx,DWORD PTR [edx+0x6418e3ad]
  429b8f:	pop    es
  429b90:	xchg   ebx,eax
  429b91:	pop    esi
  429b92:	stos   DWORD PTR es:[edi],eax
  429b93:	lea    ebx,[ecx+ebp*8+0x5f]
  429b97:	imul   esp,DWORD PTR [edx-0x63ce6919],0xffffffdc
  429b9e:	sub    al,0x56
  429ba0:	xchg   esi,eax
  429ba1:	in     eax,0xe5
  429ba3:	imul   edi,DWORD PTR [esi-0x25],0xffffffd2
  429ba7:	mov    ds:0x5e7fd2db,al
  429bac:	xchg   edx,eax
  429bad:	or     ebp,DWORD PTR [ebx-0x3e63ce6a]
  429bb3:	adc    eax,DWORD PTR [edx]
  429bb5:	pushf  
  429bb6:	shr    BYTE PTR [ebx-0x5e],1
  429bb9:	mov    eax,0xd2db7e6b
  429bbe:	jle    0x429b78
  429bc0:	shl    BYTE PTR [edx-0x720e63a1],cl
  429bc6:	test   al,0x12
  429bc8:	dec    ecx
  429bc9:	jg     0x429bb0
  429bcb:	in     eax,0x6b
  429bcd:	jle    0x429b87
  429bcf:	sar    BYTE PTR [esi-0x6b],cl
  429bd2:	shl    BYTE PTR [edx+0xbf19cdb],cl
  429bd8:	xchg   edx,eax
  429bd9:	sbb    BYTE PTR [ebx+0x7ed2107e],ch
  429bdf:	xchg   ebp,eax
  429be0:	shl    BYTE PTR [edx+0xbf19cdb],cl
  429be6:	xchg   edx,eax
  429be7:	sbb    BYTE PTR [ebx+0x7ed25f7e],ch
  429bed:	mov    eax,0xb343a2d2
  429bf2:	adc    bl,BYTE PTR [esi]
  429bf4:	and    eax,0xe74d5676
  429bf9:	jle    0x429b9a
  429bfb:	rcl    BYTE PTR [ecx+ecx*8],cl
  429bfe:	mov    bl,0x14
  429c00:	stc    
  429c01:	sar    BYTE PTR [esi-0x16],cl
  429c04:	shl    BYTE PTR [edx+0x214d2f9],cl
  429c0a:	pushf  
  429c0b:	icebp  
  429c0c:	sbb    BYTE PTR [edx-0x4ca62b32],bh
  429c12:	in     eax,0x7
  429c14:	sbb    al,0xb
  429c16:	test   eax,0xe87ed2c9
  429c1b:	rcr    BYTE PTR [edi],cl
  429c1d:	add    al,0x9c
  429c1f:	icebp  
  429c20:	or     edx,DWORD PTR [edx+0x18c9146b]
  429c26:	pop    ebp
  429c27:	xchg   esi,eax
  429c28:	mov    bh,0xec
  429c2a:	push   esi
  429c2b:	push   esi
  429c2c:	push   esi
  429c2d:	or     edx,edx
  429c2f:	test   eax,0xb9dffd8
  429c34:	shr    BYTE PTR [ecx+0xbc19ce8],cl
  429c3a:	jno    0x429c41
  429c3c:	ins    DWORD PTR es:[edi],dx
  429c3d:	jno    0x429c9e
  429c3f:	in     eax,0x75
  429c41:	rcr    bl,cl
  429c43:	push   ds
  429c44:	fucomi st,st(4)
  429c46:	int    0xa9
  429c48:	call   0x5698f2a3
  429c4d:	int    0xa9
  429c4f:	inc    ebx
  429c50:	call   0xd298f2ab
  429c55:	test   eax,0x7a63bde8
  429c5a:	dec    eax
  429c5b:	jg     0x429c42
  429c5d:	in     eax,0x9c
  429c5f:	(bad)  
  429c60:	enter  0x298d,0xb3
  429c64:	or     ecx,ebp
  429c66:	imul   ebp,DWORD PTR [ecx-0x17562d19],0xffffff9c
  429c6d:	(bad)  
  429c6e:	or     ecx,ebp
  429c70:	imul   ebp,DWORD PTR [ecx-0xdeb2d48],0xffffffd2
  429c77:	test   eax,0x954dd295
  429c7c:	pushf  
  429c7d:	shr    DWORD PTR [ebx-0x57],0x95
  429c81:	fsubr  QWORD PTR [ecx+0x56305695]
  429c87:	push   esi
  429c88:	shr    BYTE PTR [ecx-0x6b22d07],cl
  429c8e:	pushf  
  429c8f:	shr    DWORD PTR [ebx-0x57],0xf9
  429c93:	fsubr  QWORD PTR [ecx+0x56b81bf9]
  429c99:	push   esi
  429c9a:	shr    BYTE PTR [ecx-0x36b22d37],cl
  429ca0:	pushf  
  429ca1:	shr    DWORD PTR [ebx-0x57],0xc9
  429ca5:	push   ds
  429ca6:	test   eax,0xa9d2cec9
  429cab:	fcmovnbe st,st(2)
  429cad:	dec    ebp
  429cae:	fistp  DWORD PTR [ecx+eax*8-0x23245695]
  429cb5:	test   eax,0xe5f556db
  429cba:	in     eax,0x89
  429cbc:	dec    ebp
  429cbd:	in     al,dx
  429cbe:	in     eax,0xe5
  429cc0:	or     ch,BYTE PTR [ebx-0x57]
  429cc3:	repnz shr BYTE PTR [ecx-0x692e48a1],cl
  429cca:	stos   BYTE PTR es:[edi],al
  429ccb:	aam    0xb
  429ccd:	in     eax,0xe5
  429ccf:	shr    BYTE PTR [ecx-0x692e48fe],cl
  429cd5:	stos   BYTE PTR es:[edi],al
  429cd6:	ins    DWORD PTR es:[edi],dx
  429cd7:	or     esp,ebp
  429cd9:	in     eax,0xd2
  429cdb:	test   eax,0x96d1b71c
  429ce0:	stos   BYTE PTR es:[edi],al
  429ce1:	jp     0x429cee
  429ce3:	in     eax,0xe5
  429ce5:	or     dl,dl
  429ce7:	dec    ebp
  429ce8:	repnz mov DWORD PTR [edx],eax
  429ceb:	or     esp,ebp
  429ced:	in     eax,0xa
  429cef:	pushf  
  429cf0:	data16 or cl,BYTE PTR [ebx]
  429cf3:	data16 shr BYTE PTR [ecx+0x5fa30a5f],cl
  429cfa:	xchg   esi,eax
  429cfb:	mov    bh,0x82
  429cfd:	or     esp,ebp
  429cff:	in     eax,0xd2
  429d01:	test   eax,0x5f4dd2e8
  429d06:	shr    BYTE PTR [ecx+0x3cef0b5f],cl
  429d0c:	imul   ebp,DWORD PTR [ecx-0x64c72dfe],0xffffffb7
  429d13:	rcl    DWORD PTR [esi-0x1af49456],1
  429d19:	in     eax,0xcd
  429d1b:	test   eax,0x965656d4
  429d20:	in     eax,0xd2
  429d22:	test   eax,0xbc69cd4
  429d27:	int    0x6b
  429d29:	test   eax,0xe8a9d2d4
  429d2e:	rcr    BYTE PTR [esi],cl
  429d30:	xchg   ecx,eax
  429d31:	mov    bl,0xe5
  429d33:	in     eax,0xd2
  429d35:	pop    edi
  429d36:	shl    dh,cl
  429d38:	cmp    al,0xb
  429d3a:	pop    edi
  429d3b:	shr    BYTE PTR [ecx-0x5ae12d18],cl
  429d41:	mov    bl,0xe5
  429d43:	in     eax,0xd2
  429d45:	push   eax
  429d46:	imul   ecx,DWORD PTR [ebp-0x16],0x6b
  429d4a:	jne    0x429d3e
  429d4c:	sbb    BYTE PTR [esi+edi*2-0x64],dl
  429d50:	rcr    BYTE PTR [esi],cl
  429d52:	fdiv   DWORD PTR [ebx+0x758de5e5]
  429d58:	out    0x3e,eax
  429d5a:	shl    BYTE PTR [ebp-0x7],cl
  429d5d:	pushf  
  429d5e:	pop    ebx
  429d5f:	or     ecx,DWORD PTR [esi+edi*1+0x569bc556]
  429d66:	jle    0x429d5a
  429d68:	push   esi
  429d69:	fwait
  429d6a:	pusha  
  429d6b:	ror    BYTE PTR [ebp-0x16],cl
  429d6e:	shr    bh,cl
  429d70:	in     al,dx
  429d71:	shl    dh,cl
  429d73:	fwait
  429d74:	pop    esi
  429d75:	or     bp,WORD PTR [ecx-0x1864140e]
  429d7c:	mov    WORD PTR [edi-0x1b],ds
  429d7f:	in     eax,0xd2
  429d81:	jne    0x429d75
  429d83:	rcr    BYTE PTR [esi],cl
  429d85:	xor    eax,0x6be5e5b3
  429d8a:	push   eax
  429d8b:	shr    BYTE PTR [ecx-0x1316a9fe],cl
  429d91:	push   esi
  429d92:	jle    0x429df3
  429d94:	ds out 0x8b,eax
  429d97:	loopne 0x429d7e
  429d99:	in     eax,0xd2
  429d9b:	test   eax,0x3c3bd2f2
  429da0:	or     esp,DWORD PTR [esi-0x6a]
  429da3:	xor    edi,ebp
  429da5:	fisttp WORD PTR [ebp+0x6b1c5f44]
  429dab:	test   eax,0xe8a9d21c
  429db0:	xchg   esi,eax
  429db1:	xor    ebx,ebp
  429db3:	push   es
  429db4:	pushf  
  429db5:	(bad)  
  429db6:	or     ecx,ebp
  429db8:	imul   ecx,DWORD PTR [ebp+0x2],0x18
  429dbc:	sbb    DWORD PTR [esi-0x1a1a1d56],edx
  429dc2:	in     eax,0xd2
  429dc4:	test   eax,0xbc69ce8
  429dc9:	int    0x6b
  429dcb:	test   eax,0x43a9d2b8
  429dd0:	xchg   esi,eax
  429dd1:	xor    ebx,ebp
  429dd3:	push   es
  429dd4:	pushf  
  429dd5:	(bad)  
  429dd6:	pop    esi
  429dd7:	sbb    DWORD PTR [esi-0x74],ebx
  429dda:	mov    ds:0xac96b875,eax
  429ddf:	mov    ah,ch
  429de1:	in     eax,0xe5
  429de3:	shl    BYTE PTR [ebp+0x1c],cl
  429de6:	push   ds
  429de7:	jno    0x429e48
  429de9:	imul   esi,DWORD PTR [ebp+0x1c],0xffffff9d
  429ded:	or     edx,edx
  429def:	jne    0x429e0d
  429df1:	shr    bh,cl
  429df3:	xor    edx,edx
  429df5:	dec    eax
  429df6:	imul   ebp,DWORD PTR [ecx+0x66b73b19],0x74
  429dfd:	xchg   esp,eax
  429dfe:	sbb    DWORD PTR fs:[ebx],esp
  429e01:	ror    DWORD PTR [ebx],0xa9
  429e04:	sbb    DWORD PTR [ebp-0x643e2d8a],ebx
  429e0a:	rol    BYTE PTR [edx+0x4],cl
  429e0d:	or     ebp,DWORD PTR [ecx-0x1018640e]
  429e13:	pop    edi
  429e14:	in     eax,0xe5
  429e16:	shl    BYTE PTR [ebp-0x18],cl
  429e19:	shr    BYTE PTR [ecx+0x5f3bd21c],cl
  429e1f:	pushf  
  429e20:	pop    ebx
  429e21:	or     ecx,DWORD PTR [eax+ebx*1-0x149a8b10]
  429e28:	ror    BYTE PTR [ebp+0x5f],cl
  429e2b:	or     edi,DWORD PTR [ebx]
  429e2d:	add    dl,dl
  429e2f:	cmp    BYTE PTR [ebx+ecx*1],al
  429e32:	test   eax,0xe79bebf2
  429e37:	and    eax,0xd2e5e506
  429e3c:	test   eax,0x434dd21c
  429e41:	shl    BYTE PTR [ebp-0x48],cl
  429e44:	pushf  
  429e45:	adc    eax,0x4948a58d
  429e4a:	jg     0x429e31
  429e4c:	in     eax,0xd2
  429e4e:	jne    0x429e52
  429e50:	push   ds
  429e51:	rcl    DWORD PTR [ebx+0x6b],1
  429e54:	test   eax,0x43a9d21c
  429e59:	xchg   esi,eax
  429e5a:	xor    DWORD PTR [esi],edi
  429e5c:	push   es
  429e5d:	pushf  
  429e5e:	(bad)  
  429e5f:	pop    esi
  429e60:	sbb    DWORD PTR [esi-0x74],ebx
  429e63:	imul   ecx,DWORD PTR [ebp-0x48],0x18
  429e67:	lock ror BYTE PTR [ebp+0x2],cl
  429e6b:	inc    ecx
  429e6c:	(bad)  
  429e6e:	test   eax,0xf275d2e8
  429e73:	pushf  
  429e74:	(bad)  
  429e75:	or     ecx,ebp
  429e77:	imul   ebp,DWORD PTR [ecx-0x5ae12de4],0xffffffb3
  429e7e:	in     eax,0xe5
  429e80:	sbb    BYTE PTR [eax+0x7e],dl
  429e83:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  429e84:	rcr    BYTE PTR [esi],cl
  429e86:	fdiv   DWORD PTR [ebx+0x4d8de5e5]
  429e8c:	out    0xeb,eax
  429e8e:	ror    BYTE PTR [ebp-0x37],cl
  429e91:	pushf  
  429e92:	adc    eax,0xd2eb300b
  429e97:	dec    ebp
  429e98:	jmp    0x9b56:0x3eecc556
  429e9f:	pusha  
  429ea0:	mov    bh,0xd1
  429ea2:	xchg   esi,eax
  429ea3:	stos   BYTE PTR es:[edi],al
  429ea4:	(bad)  [ebx+0x4dd2e5e5]
  429eaa:	add    dl,dl
  429eac:	push   ds
  429ead:	data16 mov bl,0xe5
  429eb0:	in     eax,0xd2
  429eb2:	in     eax,0x9c
  429eb4:	(bad)  
  429eb5:	or     ecx,ebp
  429eb7:	xchg   esi,eax
  429eb8:	stos   BYTE PTR es:[edi],al
  429eb9:	dec    eax
  429eba:	mov    bl,0xe5
  429ebc:	in     eax,0x1e
  429ebe:	iret   
  429ebf:	fsub   st,st(5)
  429ec1:	mov    esi,edi
  429ec3:	stos   DWORD PTR es:[edi],eax
  429ec4:	in     eax,0xe5
  429ec6:	or     ch,BYTE PTR [ebx-0x57]
  429ec9:	add    ebx,DWORD PTR [esi]
  429ecb:	shl    DWORD PTR [esi],1
  429ecd:	or     ch,BYTE PTR [ebx-0x57]
  429ed0:	(bad)  
  429ed1:	mov    esp,ebp
  429ed3:	stos   DWORD PTR es:[edi],eax
  429ed4:	in     eax,0xe5
  429ed6:	or     ch,BYTE PTR [ebx-0x57]
  429ed9:	pushw  ds
  429edb:	rcr    DWORD PTR [esi+ebx*1],1
  429ede:	iret   
  429edf:	pop    edi
  429ee0:	in     eax,0xd2
  429ee2:	data16 or ch,BYTE PTR [ebx-0x57]
  429ee6:	int3   
  429ee7:	mov    ecx,edi
  429ee9:	push   esi
  429eea:	in     eax,0xe5
  429eec:	or     ch,BYTE PTR [ebx+0x4d]
  429eef:	lock or ch,BYTE PTR [ebx-0x57]
  429ef3:	adc    eax,0x8d5fa9d2
  429ef8:	inc    esp
  429ef9:	test   eax,0xb02b903
  429efe:	in     eax,0xe5
  429f00:	or     bl,BYTE PTR [edi+ebx*2-0x1af4fd88]
  429f07:	in     eax,0xa
  429f09:	or     esi,eax
  429f0b:	push   esi
  429f0c:	test   eax,0x5fa21e5f
  429f11:	push   es
  429f12:	or     ch,BYTE PTR [ebx+0x5f]
  429f15:	xor    bl,ch
  429f17:	int    0xa9
  429f19:	addr16 push ebx
  429f1b:	push   eax
  429f1c:	jbe    0x429ec5
  429f1e:	int    0xa9
  429f20:	rol    BYTE PTR [edi-0x32c2af7b],0xa9
  429f27:	test   al,0x85
  429f29:	in     eax,0x76
  429f2b:	ror    ebp,cl
  429f2d:	test   eax,0x7696a789
  429f32:	(bad)  
  429f33:	int    0xa9
  429f35:	mov    edx,0xae765050
  429f3a:	or     cl,ch
  429f3c:	test   eax,0xc60b0bd1
  429f41:	test   eax,0x6d9ce871
  429f46:	lea    eax,[edi+edx*2+0x67]
  429f4a:	mov    dl,BYTE PTR [eax+0x59]
  429f4d:	xchg   edx,eax
  429f4e:	(bad)  
  429f4f:	pop    ecx
  429f50:	jno    0x429f28
  429f52:	out    dx,eax
  429f53:	outs   dx,DWORD PTR ds:[esi]
  429f54:	push   eax
  429f55:	push   ds
  429f56:	shl    BYTE PTR [ebp+0x32],1
  429f59:	fcmovnbe st,st(2)
  429f5b:	push   ds
  429f5c:	fdiv   DWORD PTR [ebx+0x4d8de5e5]
  429f62:	add    ebp,ebx
  429f64:	push   esi
  429f65:	fwait
  429f66:	add    al,0xd2
  429f68:	rcr    al,cl
  429f6a:	mov    bl,0xe5
  429f6c:	in     eax,0x8d
  429f6e:	jne    0x429fd7
  429f70:	ds fwait
  429f72:	push   esi
  429f73:	jmp    0x429fd4
  429f75:	lea    ecx,[ebp-0x28]
  429f78:	jmp    0x429f4c
  429f7a:	shl    BYTE PTR [ebp+0x56e5e5b3],cl
  429f80:	cmp    eax,0xa9d21956
  429f85:	fdiv   DWORD PTR [edi+0x6bd674d1]
  429f8b:	test   eax,0xd2489d5f
  429f90:	in     eax,0x6b
  429f92:	test   eax,0x5fa918d8
  429f97:	je     0x429ff0
  429f99:	rcr    BYTE PTR [ebx-0x5a2d2de4],cl
  429f9f:	mov    bl,0xe5
  429fa1:	in     eax,0x18
  429fa3:	scas   al,BYTE PTR es:[edi]
  429fa4:	jle    0x42a01f
  429fa6:	rcr    BYTE PTR [ebx-0x5a2d2de4],cl
  429fac:	mov    bl,0xe5
  429fae:	in     eax,0x18
  429fb0:	scas   al,BYTE PTR es:[edi]
  429fb1:	jle    0x429f61
  429fb3:	shl    BYTE PTR [ebp-0x16],cl
  429fb6:	rcl    dl,cl
  429fb8:	xchg   ecx,eax
  429fb9:	mov    bl,0xe5
  429fbb:	in     eax,0xd2
  429fbd:	ds push ebx
  429fbf:	or     ebp,DWORD PTR [esi-0x2d9f6495]
  429fc5:	dec    ebp
  429fc6:	add    bh,BYTE PTR [ebp-0x180d81aa]
  429fcc:	mov    al,0xf9
  429fce:	push   esi
  429fcf:	push   esi
  429fd0:	mov    bh,0xd1
  429fd2:	xchg   esi,eax
  429fd3:	stos   BYTE PTR es:[edi],al
  429fd4:	mov    edx,0x56e5e5e5
  429fd9:	jle    0x429fdd
  429fdb:	shl    BYTE PTR ds:0xe7f27e56,cl
  429fe1:	inc    ecx
  429fe2:	fs push esi
  429fe4:	push   esi
  429fe5:	mov    bh,0xd1
  429fe7:	xchg   esi,eax
  429fe8:	stos   BYTE PTR es:[edi],al
  429fe9:	mov    ch,0xe5
  429feb:	in     eax,0xe5
  429fed:	shr    BYTE PTR [ecx-0xd8a2dfe],cl
  429ff3:	ror    bl,cl
  429ff5:	out    0xd6,eax
  429ff7:	ss push esi
  429ff9:	push   esi
  429ffa:	mov    bh,0xd1
  429ffc:	xchg   esi,eax
  429ffd:	stos   BYTE PTR es:[edi],al
  429ffe:	sahf   
  429fff:	in     eax,0xe5
  42a001:	in     eax,0xbd
  42a003:	push   esi
  42a004:	jle    0x429ff8
  42a006:	out    0x73,eax
  42a008:	xlat   BYTE PTR ds:[ebx]
  42a009:	push   esi
  42a00a:	push   esi
  42a00b:	mov    bh,0xd1
  42a00d:	xchg   esi,eax
  42a00e:	stos   BYTE PTR es:[edi],al
  42a00f:	fsubr  st(5),st
  42a011:	in     eax,0xe5
  42a013:	rcr    BYTE PTR [esi],cl
  42a015:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42a016:	mov    bl,0xe5
  42a018:	in     eax,0xd2
  42a01a:	dec    ebp
  42a01b:	repnz sbb BYTE PTR [edi+0x7e],bl
  42a01f:	rcr    BYTE PTR gs:[esi],cl
  42a022:	fdiv   DWORD PTR [ebx+0x758de5e5]
  42a028:	out    0x3e,eax
  42a02a:	push   esi
  42a02b:	jle    0x42a014
  42a02d:	shl    BYTE PTR [ebp-0x16],cl
  42a030:	push   esi
  42a031:	xor    ch,ah
  42a033:	jmp    0x42a08b
  42a035:	fwait
  42a036:	pusha  
  42a037:	rcr    BYTE PTR [esi],cl
  42a039:	data16 mov bl,0xe5
  42a03c:	in     eax,0xd2
  42a03e:	in     eax,0x9c
  42a040:	(bad)  
  42a041:	or     ecx,ebp
  42a043:	je     0x429ff5
  42a045:	ror    BYTE PTR [ebp+0x2],cl
  42a048:	shr    bh,cl
  42a04a:	push   ebx
  42a04b:	or     ebp,DWORD PTR [ecx+0x5fa9cdf2]
  42a051:	push   esi
  42a052:	not    DWORD PTR [esi+0x56]
  42a055:	shl    BYTE PTR [ebp+0x5f],cl
  42a058:	push   esi
  42a059:	jle    0x42a03a
  42a05b:	pushf  
  42a05c:	pop    ebx
  42a05d:	push   esi
  42a05e:	jle    0x42a0b0
  42a060:	or     ecx,DWORD PTR [esi+edx*2-0x6bf50d82]
  42a067:	jmp    0x42a079
  42a069:	push   esi
  42a06a:	sbb    ebp,ecx
  42a06c:	push   ds
  42a06d:	sbb    DWORD PTR [ebx+0x56e8e5e5],esi
  42a073:	push   esi
  42a074:	push   esi
  42a075:	popf   
  42a076:	dec    ecx
  42a077:	shr    BYTE PTR [ecx+0x5338d202],cl
  42a07d:	or     ebp,DWORD PTR [ecx+0x6b1956f2]
  42a083:	test   eax,0xb8a9d2b8
  42a088:	ror    BYTE PTR [ebp+0x60],cl
  42a08b:	imul   esi,DWORD PTR [ebx-0x4ce35633],0xffffffe5
  42a092:	in     eax,0xe5
  42a094:	push   ds
  42a095:	mov    ds:0x47ee51c,al
  42a09a:	push   ds
  42a09b:	iret   
  42a09c:	repnz in eax,0xd2
  42a09f:	test   eax,0x9c769df2
  42a0a4:	sar    edi,1
  42a0a6:	add    eax,0x60716d09
  42a0ab:	in     eax,0x75
  42a0ad:	rcr    bl,cl
  42a0af:	xchg   esi,eax
  42a0b0:	xor    ebx,ebp
  42a0b2:	push   es
  42a0b3:	xchg   esi,eax
  42a0b4:	xor    edi,ebp
  42a0b6:	fistp  QWORD PTR [ebp-0x72a96338]
  42a0bc:	inc    esp
  42a0bd:	pop    edi
  42a0be:	sbb    al,0xb7
  42a0c0:	push   esp
  42a0c1:	je     0x42a12f
  42a0c3:	sar    BYTE PTR [ebx],cl
  42a0c5:	add    cl,BYTE PTR [ebp+0x14a33d60]
  42a0cb:	pop    edi
  42a0cc:	xor    al,BYTE PTR [edx]
  42a0ce:	rcr    BYTE PTR [edi],cl
  42a0d0:	pop    edi
  42a0d1:	or     ebx,ecx
  42a0d3:	or     ebx,DWORD PTR [ebp-0x5d]
  42a0d6:	adc    al,0x5f
  42a0d8:	xor    cl,BYTE PTR [eax+0x1e]
  42a0db:	rcl    DWORD PTR [ebx+0x2d],1
  42a0de:	sbb    bh,dl
  42a0e0:	xor    dh,BYTE PTR [edi-0x64]
  42a0e3:	sar    edi,1
  42a0e5:	or     DWORD PTR [ecx+esi*2],edx
  42a0e8:	add    al,0xe5
  42a0ea:	jne    0x42a0be
  42a0ec:	fistp  DWORD PTR [esi]
  42a0ee:	fist   DWORD PTR [ebx-0x33]
  42a0f1:	test   eax,0x56565695
  42a0f6:	push   esi
  42a0f7:	int    0xa9
  42a0f9:	jmp    0xa9cd:0x565656e8
  42a100:	fdivr  st,st(5)
  42a102:	push   esi
  42a103:	push   esi
  42a104:	push   esi
  42a105:	mov    DWORD PTR [ebx],ebp
  42a107:	stos   DWORD PTR es:[edi],eax
  42a108:	in     eax,0xe5
  42a10a:	or     ch,BYTE PTR [ebx-0x57]
  42a10d:	leave  
  42a10e:	push   ds
  42a10f:	sar    DWORD PTR [eax-0x175694f6],1
  42a115:	mov    DWORD PTR [edx-0x55],esp
  42a118:	in     eax,0xe5
  42a11a:	or     ch,BYTE PTR [ebx-0x57]
  42a11d:	stc    
  42a11e:	push   ds
  42a11f:	sar    DWORD PTR [eax-0x65694f6],1
  42a125:	shr    BYTE PTR [ecx-0x245694a1],cl
  42a12b:	shr    BYTE PTR [ecx-0x185694fe],cl
  42a131:	shr    BYTE PTR [ecx+0x7f48b995],cl
  42a137:	in     eax,0xe5
  42a139:	pushf  
  42a13a:	shl    DWORD PTR [ebx-0x2e],0x7e
  42a13e:	fisttp DWORD PTR [ebp+0x710bb3eb]
  42a144:	enter  0x9518,0x96
  42a148:	stos   BYTE PTR es:[edi],al
  42a149:	nop
  42a14a:	mov    bl,0xe5
  42a14c:	in     eax,0xd2
  42a14e:	test   eax,0xe77ed295
  42a153:	pushf  
  42a154:	ror    DWORD PTR [ebx],0x71
  42a157:	sbb    BYTE PTR [ebp-0x4c5b556a],dl
  42a15d:	in     eax,0xe5
  42a15f:	shr    BYTE PTR [ecx+0xbc19c95],cl
  42a165:	jno    0x42a1d2
  42a167:	test   eax,0x95a9d2b8
  42a16c:	pushf  
  42a16d:	ror    DWORD PTR [ebx],0x71
  42a170:	imul   ebp,DWORD PTR [ecx+0x7e319643],0xffffffe8
  42a177:	xchg   esi,eax
  42a178:	xor    DWORD PTR [edx+0xb0289c9],esp
  42a17e:	in     eax,0xe5
  42a180:	or     bl,BYTE PTR [ebp+edx*4+0xaf99c0a]
  42a187:	or     edx,DWORD PTR [ebp-0x4206f4f6]
  42a18d:	or     DWORD PTR [esi-0x55],ebx
  42a190:	or     ch,BYTE PTR [ebx-0x5e]
  42a193:	leave  
  42a194:	jns    0x42a162
  42a196:	in     eax,0xe5
  42a198:	in     eax,0xd2
  42a19a:	jle    0x42a131
  42a19c:	or     dl,dl
  42a19e:	mov    ds:0xbf19c02,al
  42a1a3:	xchg   edx,eax
  42a1a4:	or     bl,BYTE PTR [eax]
  42a1a6:	stos   DWORD PTR es:[edi],eax
  42a1a7:	xchg   esi,eax
  42a1a8:	stos   BYTE PTR es:[edi],al
  42a1a9:	xlat   BYTE PTR ds:[ebx]
  42a1aa:	in     eax,0xe5
  42a1ac:	in     eax,0xd2
  42a1ae:	jle    0x42a145
  42a1b0:	shl    BYTE PTR [edx+0xbf19c50],cl
  42a1b6:	xchg   edx,eax
  42a1b7:	sbb    BYTE PTR [ebx+0x27ed20a],ch
  42a1bd:	or     dl,dl
  42a1bf:	mov    ds:0xa7e745f,al
  42a1c4:	sbb    BYTE PTR [ebx-0x2df58d8c],ch
  42a1ca:	jle    0x42a1b4
  42a1cc:	or     dl,dl
  42a1ce:	mov    ds:0x959c0a5f,al
  42a1d3:	or     cl,BYTE PTR [ebx]
  42a1d5:	xchg   ebp,eax
  42a1d6:	or     bl,BYTE PTR [eax]
  42a1d8:	stos   DWORD PTR es:[edi],eax
  42a1d9:	xor    bh,BYTE PTR [edx+ecx*1-0x2e]
  42a1dd:	jle    0x42a1d8
  42a1df:	or     dl,dl
  42a1e1:	mov    ds:0x959c0a5f,al
  42a1e6:	or     cl,BYTE PTR [ebx]
  42a1e8:	xchg   ebp,eax
  42a1e9:	or     bl,BYTE PTR [eax]
  42a1eb:	stos   DWORD PTR es:[edi],eax
  42a1ec:	xchg   edi,eax
  42a1ed:	test   DWORD PTR [esi-0x69a081cf],edx
  42a1f3:	xor    DWORD PTR [edx+0xa640bc9],esp
  42a1f9:	imul   edi,DWORD PTR [esi+0x5f],0xa
  42a1fd:	sar    BYTE PTR [esi-0x18],cl
  42a200:	or     dl,dl
  42a202:	mov    ds:0x959c0a02,al
  42a207:	or     cl,BYTE PTR [ebx]
  42a209:	xchg   ebp,eax
  42a20a:	or     bl,BYTE PTR [eax]
  42a20c:	stos   DWORD PTR es:[edi],eax
  42a20d:	xor    bh,BYTE PTR [edx+ecx*1-0x2e]
  42a211:	jle    0x42a20c
  42a213:	or     dl,dl
  42a215:	mov    ds:0x959c0a02,al
  42a21a:	or     cl,BYTE PTR [ebx]
  42a21c:	xchg   ebp,eax
  42a21d:	or     bl,BYTE PTR [eax]
  42a21f:	stos   DWORD PTR es:[edi],eax
  42a220:	xchg   edi,eax
  42a221:	test   DWORD PTR [esi-0x69fd81cf],edx
  42a227:	xor    DWORD PTR [edx+0xa640bc9],esp
  42a22d:	imul   edi,DWORD PTR [esi+0x2],0xa
  42a231:	sar    BYTE PTR [esi+0x2],cl
  42a234:	or     dl,dl
  42a236:	mov    ds:0xab180a5f,al
  42a23b:	xchg   esi,eax
  42a23c:	mov    bh,0xa8
  42a23e:	in     eax,0xe5
  42a240:	in     eax,0xd2
  42a242:	jle    0x42a21c
  42a244:	shl    BYTE PTR [edx-0x720e6325],cl
  42a24a:	test   al,0x12
  42a24c:	dec    ecx
  42a24d:	jg     0x42a234
  42a24f:	in     eax,0x6b
  42a251:	jle    0x42a22e
  42a253:	sar    BYTE PTR [esi-0x28],cl
  42a256:	shl    BYTE PTR [edx-0x720e6319],cl
  42a25c:	test   al,0x12
  42a25e:	dec    ecx
  42a25f:	jg     0x42a246
  42a261:	in     eax,0x6b
  42a263:	jle    0x42a24c
  42a265:	sar    BYTE PTR [esi-0x48],cl
  42a268:	shl    BYTE PTR [edx+0x34d20adb],cl
  42a26e:	xchg   edi,eax
  42a26f:	or     ch,BYTE PTR [ebx+0x7e]
  42a272:	pop    edi
  42a273:	sar    BYTE PTR [esi+0x43],cl
  42a276:	shl    BYTE PTR [edx+0x34d20ae7],cl
  42a27c:	xchg   edi,eax
  42a27d:	or     ch,BYTE PTR [ebx+0x7e]
  42a280:	add    dl,dl
  42a282:	jle    0x42a219
  42a284:	or     dl,dl
  42a286:	mov    ds:0xbf19c5f,al
  42a28b:	xchg   edx,eax
  42a28c:	or     bl,BYTE PTR [eax]
  42a28e:	stos   DWORD PTR es:[edi],eax
  42a28f:	xchg   esi,eax
  42a290:	mov    bh,0x4
  42a292:	push   esi
  42a293:	push   esi
  42a294:	push   esi
  42a295:	sar    BYTE PTR [esi-0x16],cl
  42a298:	pushf  
  42a299:	icebp  
  42a29a:	ror    BYTE PTR [ebp-0x6b],cl
  42a29d:	or     edx,DWORD PTR [edx+0x6bf1af96]
  42a2a3:	jle    0x42a23a
  42a2a5:	popf   
  42a2a6:	ret    0x75d2
  42a2a9:	xchg   ebp,eax
  42a2aa:	pushf  
  42a2ab:	lods   eax,DWORD PTR ds:[esi]
  42a2ac:	ror    BYTE PTR [ebp-0x16],cl
  42a2af:	lea    esp,[ebp-0x1a80b6b8]
  42a2b5:	in     eax,0x6b
  42a2b7:	dec    ebp
  42a2b8:	jmp    0xdb7e:0xd2b875d2
  42a2bf:	or     dl,dl
  42a2c1:	fbld   TBYTE PTR [ebx-0x2e]
  42a2c4:	data16 or bl,BYTE PTR [esi-0x53]
  42a2c8:	or     bl,BYTE PTR [ecx+ebx*1-0x1aa90647]
  42a2cf:	in     eax,0xa
  42a2d1:	sbb    BYTE PTR [ebp+0x7ed2167e],ch
  42a2d7:	inc    ebx
  42a2d8:	shl    BYTE PTR [edx+0x34d20ae7],cl
  42a2de:	xchg   edi,eax
  42a2df:	rcr    BYTE PTR [ecx],cl
  42a2e1:	or     bl,BYTE PTR [esi-0x6e]
  42a2e4:	or     bl,BYTE PTR [ebp+edx*4+0x7ef1180a]
  42a2eb:	add    al,0x9c
  42a2ed:	rcr    DWORD PTR [ebp+0x38d19c02],1
  42a2f3:	popf   
  42a2f4:	loopne 0x42a2c8
  42a2f6:	test   eax,0xbc19cea
  42a2fb:	jno    0x42a2fc
  42a2fd:	add    eax,0xe502716d
  42a302:	jne    0x42a2d6
  42a304:	fucomi st,st(3)
  42a306:	ror    BYTE PTR [ebp+0x5f],cl
  42a309:	or     dl,dl
  42a30b:	xchg   esp,eax
  42a30c:	js     0x42a310
  42a30e:	or     esp,ebp
  42a310:	in     eax,0xd2
  42a312:	jno    0x42a31e
  42a314:	pop    esi
  42a315:	data16 arpl WORD PTR [edx],cx
  42a318:	pushf  
  42a319:	lock mov ecx,edi
  42a31c:	push   esi
  42a31d:	in     eax,0xe5
  42a31f:	push   ds
  42a320:	adc    eax,0xa9cdc856
  42a325:	call   0x5698f9d5
  42a32a:	or     bl,BYTE PTR [eax]
  42a32c:	data16 je 0x42a2c7
  42a32f:	xchg   esi,eax
  42a330:	xor    DWORD PTR [ebp-0x77],ebp
  42a333:	cdq    
  42a334:	xor    BYTE PTR [esi+0x56],dl
  42a337:	mov    edi,0xe5e57f48
  42a33c:	mov    ebp,0xe5ab5cbb
  42a341:	in     eax,0xa
  42a343:	sbb    bl,cl
  42a345:	jle    0x42a352
  42a347:	imul   edi,DWORD PTR [esi-0x18],0xffffffd2
  42a34b:	dec    ebp
  42a34c:	pop    edi
  42a34d:	(bad)  
  42a34e:	jmp    0xd2a74006
  42a353:	(bad)  
  42a354:	pushf  
  42a355:	int    0xa
  42a357:	shl    BYTE PTR [ebp-0x1aaaef11],cl
  42a35d:	in     eax,0xd2
  42a35f:	clc    
  42a360:	or     bl,BYTE PTR [esi-0x35]
  42a363:	or     bl,BYTE PTR [eax+esi*8-0x1aa90645]
  42a36a:	in     eax,0xa
  42a36c:	sbb    bl,cl
  42a36e:	jle    0x42a310
  42a370:	shr    BYTE PTR [ecx-0x6e1f618],cl
  42a376:	stos   DWORD PTR es:[edi],eax
  42a377:	jle    0x42a34c
  42a379:	shr    BYTE PTR [ecx-0x2dfd62a1],cl
  42a37f:	dec    ebp
  42a380:	pop    edi
  42a381:	pushf  
  42a382:	int    0x8d
  42a384:	stos   BYTE PTR es:[edi],al
  42a385:	out    dx,eax
  42a386:	sbb    al,0x55
  42a388:	in     eax,0xe5
  42a38a:	inc    DWORD PTR ds:0xe504716d
  42a390:	jne    0x42a364
  42a392:	fucomi st,st(3)
  42a394:	arpl   WORD PTR [esi+0x7e],dx
  42a397:	pop    edi
  42a398:	int    0xa9
  42a39a:	call   0x5698fa4a
  42a39f:	push   ds
  42a3a0:	adc    eax,0x5609e756
  42a3a5:	push   esi
  42a3a6:	push   esi
  42a3a7:	mov    bl,BYTE PTR [edi+0x59]
  42a3aa:	jns    0x42a382
  42a3ac:	pop    ecx
  42a3ad:	icebp  
  42a3ae:	(bad)  
  42a3af:	pop    ecx
  42a3b0:	shr    al,1
  42a3b2:	je     0x42a410
  42a3b4:	mov    ebp,0xbf19d2c8
  42a3b9:	cdq    
  42a3ba:	xor    BYTE PTR [esi+0x56],dl
  42a3bd:	mov    ecx,0xe5e57f48
  42a3c2:	or     dl,dl
  42a3c4:	ret    0x2bb
  42a3c7:	or     esp,ebp
  42a3c9:	in     eax,0xa
  42a3cb:	pop    esi
  42a3cc:	jae    0x42a3d8
  42a3ce:	pushf  
  42a3cf:	jae    0x42a38c
  42a3d1:	cs stos DWORD PTR es:[edi],eax
  42a3d3:	in     eax,0xe5
  42a3d5:	or     bl,BYTE PTR [eax]
  42a3d7:	jae    0x42a457
  42a3d9:	or     ebp,DWORD PTR [ebx+0x7e]
  42a3dc:	call   0x9cf63b6e
  42a3e1:	icebp  
  42a3e2:	shr    BYTE PTR [ebx+0x358dd09c],cl
  42a3e8:	adc    DWORD PTR [eax],edx
  42a3ea:	push   ebp
  42a3eb:	in     eax,0xe5
  42a3ed:	mov    cl,BYTE PTR [esi+0x59]
  42a3f0:	popf   
  42a3f1:	(bad)  
  42a3f2:	pop    ecx
  42a3f3:	into   
  42a3f4:	(bad)  
  42a3f5:	pop    ecx
  42a3f6:	aas    
  42a3f7:	call   0x76150a7a
  42a3fc:	call   0xd760ae00
  42a401:	stos   DWORD PTR es:[edi],eax
  42a402:	je     0x42a406
  42a404:	pushf  
  42a405:	lods   eax,DWORD PTR ds:[esi]
  42a406:	pushf  
  42a407:	ins    DWORD PTR es:[edi],dx
  42a408:	or     ch,BYTE PTR [ebx-0x5b]
  42a40b:	fwait
  42a40c:	adc    BYTE PTR [ebp-0x1b],dl
  42a40f:	in     eax,0x5
  42a411:	ins    DWORD PTR es:[edi],dx
  42a412:	jno    0x42a418
  42a414:	in     eax,0x75
  42a416:	rcr    bl,cl
  42a418:	jmp    0x42a47d
  42a41a:	enter  0x7e56,0x5f
  42a41e:	int    0xa9
  42a420:	call   0x5698fad0
  42a425:	push   ds
  42a426:	adc    eax,0xab39e756
  42a42b:	push   esi
  42a42c:	push   esi
  42a42d:	or     dl,dl
  42a42f:	pop    edi
  42a430:	js     0x42a434
  42a432:	or     esp,ebp
  42a434:	in     eax,0xd2
  42a436:	xlat   BYTE PTR ds:[ebx]
  42a437:	or     bl,BYTE PTR [esi+0x30]
  42a43a:	imul   ebp,DWORD PTR [ecx-0xf63f5a1],0xffffff89
  42a441:	stc    
  42a442:	push   esi
  42a443:	in     eax,0xe5
  42a445:	or     bl,BYTE PTR [eax]
  42a447:	data16 je 0x42a497
  42a44a:	xchg   esi,eax
  42a44b:	xor    DWORD PTR [ebp-0x41],ebp
  42a44e:	cdq    
  42a44f:	xor    BYTE PTR [esi+0x56],dl
  42a452:	mov    DWORD PTR [eax+0x7f],ecx
  42a455:	in     eax,0xe5
  42a457:	mov    ebp,0xe5ab2ebb
  42a45c:	in     eax,0xa
  42a45e:	sbb    bl,cl
  42a460:	jle    0x42a46d
  42a462:	imul   edi,DWORD PTR [esi-0x18],0xffffffd2
  42a466:	dec    ebp
  42a467:	pop    edi
  42a468:	lea    edx,[edi-0x2d6a634d]
  42a46e:	stos   DWORD PTR es:[edi],eax
  42a46f:	pushf  
  42a470:	stc    
  42a471:	or     dl,dl
  42a473:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42a474:	jb     0x42a486
  42a476:	push   ebp
  42a477:	in     eax,0xe5
  42a479:	sar    al,cl
  42a47b:	or     bl,BYTE PTR [esi-0x35]
  42a47e:	or     bl,BYTE PTR [eax+esi*8-0x1aa90645]
  42a485:	in     eax,0xa
  42a487:	sbb    bl,cl
  42a489:	jle    0x42a42b
  42a48b:	push   ds
  42a48c:	mov    ds:0x7409abe8,al
  42a491:	rcr    DWORD PTR [ecx+edx*8-0x638962c8],cl
  42a498:	sar    edi,1
  42a49a:	add    eax,0xe504716d
  42a49f:	jne    0x42a473
  42a4a1:	fucomi st,st(3)
  42a4a3:	shr    BYTE PTR [ecx+0x5f31965f],cl
  42a4a9:	arpl   WORD PTR [ebp+0x56e8c9dc],cx
  42a4af:	push   esi
  42a4b0:	jp     0x42a4b4
  42a4b2:	or     esp,ebp
  42a4b4:	in     eax,0xc8
  42a4b6:	pushf  
  42a4b7:	(bad)  
  42a4b8:	mov    edi,0xe5e556f9
  42a4bd:	imul   esi,DWORD PTR [ebp-0x18],0xa
  42a4c1:	sbb    ch,cl
  42a4c3:	je     0x42a523
  42a4c5:	shr    BYTE PTR [ecx+0x6b715e5f],cl
  42a4cb:	test   eax,0xd20b9d5f
  42a4d0:	test   eax,0x486b0a5f
  42a4d5:	push   ds
  42a4d6:	jno    0x42a54e
  42a4d8:	xchg   esi,eax
  42a4d9:	xor    DWORD PTR [eax+edx*2],edi
  42a4dc:	shl    BYTE PTR [eax],cl
  42a4de:	fmul   st(5),st
  42a4e0:	leave  
  42a4e1:	call   0xabdefb3c
  42a4e6:	mov    ecx,edi
  42a4e8:	push   esi
  42a4e9:	in     eax,0xe5
  42a4eb:	or     bl,BYTE PTR [eax]
  42a4ed:	stc    
  42a4ee:	jle    0x42a4e7
  42a4f0:	pushf  
  42a4f1:	sar    edi,1
  42a4f3:	or     ch,BYTE PTR [ebx+0x76]
  42a4f6:	shr    BYTE PTR [ecx+0x716d05e8],cl
  42a4fc:	add    al,0xe5
  42a4fe:	jne    0x42a4d2
  42a500:	fistp  DWORD PTR [esi]
  42a502:	fistp  DWORD PTR [ecx*8+0x5656dba9]
  42a509:	push   esi
  42a50a:	push   esi
  42a50b:	int    0xa9
  42a50d:	out    0xe8,eax
  42a50f:	push   esi
  42a510:	push   esi
  42a511:	push   esi
  42a512:	shr    BYTE PTR [ecx+0x7f4846db],cl
  42a518:	in     eax,0xe5
  42a51a:	ror    DWORD PTR [ecx+0x7f],cl
  42a51d:	in     eax,0xe5
  42a51f:	imul   ebp,DWORD PTR [ecx-0x6a563207],0x64
  42a526:	push   esi
  42a527:	push   esi
  42a528:	push   esi
  42a529:	int    0xa9
  42a52b:	leave  
  42a52c:	into   
  42a52d:	push   esi
  42a52e:	push   esi
  42a52f:	push   esi
  42a530:	int    0xa9
  42a532:	call   0x5698fc34
  42a537:	shr    BYTE PTR [ecx+0x7f4846db],cl
  42a53d:	in     eax,0xe5
  42a53f:	ror    BYTE PTR [ebp-0x7],cl
  42a542:	lea    ebp,[edx-0x1a80b64d]
  42a548:	in     eax,0xd2
  42a54a:	dec    ebp
  42a54b:	out    0xdc,eax
  42a54d:	icebp  
  42a54e:	dec    eax
  42a54f:	jg     0x42a536
  42a551:	in     eax,0xdc
  42a553:	ror    DWORD PTR [ecx+0x7f],0xe5
  42a557:	in     eax,0xd2
  42a559:	jne    0x42a5ab
  42a55b:	xchg   esi,eax
  42a55c:	scas   eax,DWORD PTR es:[edi]
  42a55d:	lods   eax,DWORD PTR ds:[esi]
  42a55e:	sbb    BYTE PTR [ecx-0x6a],dh
  42a561:	push   ds
  42a562:	and    ebp,0xffffffe5
  42a565:	in     eax,0xd2
  42a567:	test   eax,0xf94dd250
  42a56c:	pop    esi
  42a56d:	rcl    edx,0x4d
  42a570:	xchg   ebp,eax
  42a571:	fdivr  st(1),st
  42a573:	dec    eax
  42a574:	jg     0x42a55b
  42a576:	in     eax,0xdc
  42a578:	ror    DWORD PTR [ecx+0x7f],0xe5
  42a57c:	in     eax,0x18
  42a57e:	rol    DWORD PTR [ecx+0x7f],0xd2
  42a582:	test   eax,0xf9a90b5f
  42a587:	ror    BYTE PTR [ebp+0x2],cl
  42a58a:	or     ecx,DWORD PTR [ebp-0x7]
  42a58d:	shr    BYTE PTR [esi-0x92daf95],cl
  42a593:	add    al,0x6b
  42a595:	cmp    eax,DWORD PTR [edx+edx*8]
  42a598:	test   eax,0x7f484695
  42a59d:	in     eax,0xe5
  42a59f:	ror    BYTE PTR [ebp-0x7],cl
  42a5a2:	lea    ebp,[edx-0x1a80b64d]
  42a5a8:	in     eax,0x6b
  42a5aa:	test   eax,0xe5f379f9
  42a5af:	in     eax,0xe5
  42a5b1:	shr    BYTE PTR [ecx-0x6b22db0],cl
  42a5b7:	pop    esi
  42a5b8:	rcl    edx,0x4d
  42a5bb:	leave  
  42a5bc:	fdivr  st(1),st
  42a5be:	dec    eax
  42a5bf:	jg     0x42a5a6
  42a5c1:	in     eax,0xdc
  42a5c3:	ror    DWORD PTR [ecx+0x7f],0xe5
  42a5c7:	in     eax,0x18
  42a5c9:	rol    DWORD PTR [ecx-0x5a],0xd2
  42a5cd:	test   eax,0xf9a90b5f
  42a5d2:	ror    BYTE PTR [ebp+0x2],cl
  42a5d5:	or     ecx,DWORD PTR [ebp-0x7]
  42a5d8:	rcl    BYTE PTR [ebx+ebp*2-0x36562da1],cl
  42a5df:	inc    esi
  42a5e0:	dec    eax
  42a5e1:	jg     0x42a5c8
  42a5e3:	in     eax,0xd2
  42a5e5:	dec    ebp
  42a5e6:	stc    
  42a5e7:	lea    ebp,[edx-0x1a80b64d]
  42a5ed:	in     eax,0x6b
  42a5ef:	test   eax,0xd2099df9
  42a5f4:	test   eax,0xf94dd250
  42a5f9:	pop    esi
  42a5fa:	rcl    edx,0x4d
  42a5fd:	call   0x7f8b97de
  42a602:	in     eax,0xe5
  42a604:	fadd   st(1),st
  42a606:	dec    ecx
  42a607:	jg     0x42a5ee
  42a609:	in     eax,0x18
  42a60b:	rol    DWORD PTR [ecx+0x26],0xd2
  42a60f:	test   eax,0xf9a90b5f
  42a614:	ror    BYTE PTR [ebp+0x2],cl
  42a617:	or     ecx,DWORD PTR [ebp-0x7]
  42a61a:	or     dl,dl
  42a61c:	xchg   esp,eax
  42a61d:	or     ch,BYTE PTR [ebx+0x5f]
  42a620:	shr    BYTE PTR [ecx+0x7f4846e8],cl
  42a626:	in     eax,0xe5
  42a628:	ror    BYTE PTR [ebp-0x7],cl
  42a62b:	lea    ebp,[edx-0x1a80b64d]
  42a631:	in     eax,0x6b
  42a633:	test   eax,0xd2659df9
  42a638:	test   eax,0xf9a90b5f
  42a63d:	ror    BYTE PTR [ebp+0x2],cl
  42a640:	or     ecx,DWORD PTR [ebp-0x7]
  42a643:	mov    dl,BYTE PTR [edi+ebp*2-0x6562da1]
  42a64a:	cmp    BYTE PTR [ebx-0x57],ch
  42a64d:	stc    
  42a64e:	jns    0x42a63a
  42a650:	stos   DWORD PTR es:[edi],eax
  42a651:	push   esi
  42a652:	push   esi
  42a653:	ins    DWORD PTR es:[edi],dx
  42a654:	jno    0x42a658
  42a656:	in     eax,0x75
  42a658:	rcr    bl,cl
  42a65a:	jmp    0x42a647
  42a65c:	int    0xa9
  42a65e:	call   0x5698fcb9
  42a663:	int    0xa9
  42a665:	stc    
  42a666:	call   0x9c98fcc1
  42a66b:	sar    DWORD PTR [eax],1
  42a66d:	je     0x42a6a7
  42a66f:	shr    BYTE PTR [ecx+0x7f4846e8],cl
  42a675:	in     eax,0xe5
  42a677:	ror    DWORD PTR [ecx+0x7f],cl
  42a67a:	in     eax,0xe5
  42a67c:	mov    ds:0x767e02a9,eax
  42a681:	popf   
  42a682:	dec    edi
  42a683:	shr    BYTE PTR [ecx+0x7f4846f9],cl
  42a689:	in     eax,0xe5
  42a68b:	ror    DWORD PTR [ecx+0x7f],cl
  42a68e:	in     eax,0xe5
  42a690:	ror    BYTE PTR [ebp+0x2],cl
  42a693:	pop    esi
  42a694:	imul   cx,WORD PTR [ebp+0x2],0xffd2
  42a699:	test   eax,0x7f4846e8
  42a69e:	in     eax,0xe5
  42a6a0:	ror    DWORD PTR [ecx+0x7f],cl
  42a6a3:	in     eax,0xe5
  42a6a5:	ror    BYTE PTR [ebp+0x5f],cl
  42a6a8:	or     ecx,DWORD PTR [ebp+0x2]
  42a6ab:	outs   dx,DWORD PTR ds:[esi]
  42a6ac:	mov    bl,0x9d
  42a6ae:	mov    ebx,0xe55f716d
  42a6b3:	jne    0x42a687
  42a6b5:	fcmovnu st,st(4)
  42a6b7:	(bad)  [eax+0x76]
  42a6ba:	in     eax,0xe5
  42a6bc:	int    0xa9
  42a6be:	leave  
  42a6bf:	push   esi
  42a6c0:	push   esi
  42a6c1:	push   esi
  42a6c2:	push   esi
  42a6c3:	int    0xa9
  42a6c5:	xchg   ebp,eax
  42a6c6:	call   0xd298fd21
  42a6cb:	test   eax,0x5fa9d250
  42a6d0:	mov    bh,0xd1
  42a6d2:	jle    0x42a6b4
  42a6d4:	pushf  
  42a6d5:	sar    DWORD PTR [ecx-0x7e],1
  42a6d8:	in     eax,0xe5
  42a6da:	in     eax,0xd2
  42a6dc:	test   eax,0x74d1b702
  42a6e1:	xchg   edx,eax
  42a6e2:	mov    ebp,0xfdeab78d
  42a6e7:	push   esi
  42a6e8:	push   esi
  42a6e9:	imul   ebp,DWORD PTR [ecx+0x2a9d2e8],0x63
  42a6f0:	imul   ebp,DWORD PTR [ecx-0x36562d25],0xffffffc8
  42a6f7:	mov    edi,0xe5e57f48
  42a6fc:	pushf  
  42a6fd:	int    0x8d
  42a6ff:	xchg   edi,eax
  42a700:	mov    bl,0xb
  42a702:	(bad)  
  42a703:	imul   ebp,DWORD PTR [ecx+0x27e5650],0xffffffe7
  42a70a:	loopne 0x42a709
  42a70c:	push   esi
  42a70d:	push   esi
  42a70e:	rcr    al,cl
  42a710:	shr    BYTE PTR [ecx-0x20c72da1],cl
  42a716:	popf   
  42a717:	jmp    0x42a6eb
  42a719:	test   eax,0x5fe71e02
  42a71e:	imul   ebp,DWORD PTR [ecx-0x6562d07],0x56
  42a725:	jmp    0x3f9e8e7d
  42a72a:	push   esi
  42a72b:	push   esi
  42a72c:	imul   ebp,DWORD PTR [ecx+0x507e5650],0xffffffd2
  42a733:	jne    0x42a71d
  42a735:	out    0xcf,eax
  42a737:	std    
  42a738:	push   esi
  42a739:	push   esi
  42a73a:	mov    bh,0x27
  42a73c:	jle    0x42a79d
  42a73e:	push   esi
  42a73f:	jle    0x42a729
  42a741:	out    0x98,eax
  42a743:	call   0xaa14fd9e
  42a748:	xchg   ebp,eax
  42a749:	pushf  
  42a74a:	int    0xb
  42a74c:	(bad)  
  42a74d:	fwait
  42a74e:	push   esi
  42a74f:	jle    0x42a72c
  42a751:	push   esi
  42a752:	jle    0x42a73c
  42a754:	out    0xb6,eax
  42a756:	rcl    BYTE PTR [esi+0x56],1
  42a759:	ror    BYTE PTR [ebp-0x37],cl
  42a75c:	pushf  
  42a75d:	xor    BYTE PTR [ebx],cl
  42a75f:	adc    eax,0x4774c118
  42a764:	shr    BYTE PTR [ecx+0x6be5d202],cl
  42a76a:	test   eax,0x5fa9d202
  42a76f:	ror    BYTE PTR [ebp+0x2],cl
  42a772:	push   ds
  42a773:	rcr    edi,1
  42a775:	sbb    BYTE PTR [esi+0x7e],ah
  42a778:	lahf   
  42a779:	pushf  
  42a77a:	sar    edi,1
  42a77c:	add    eax,0x2716d09
  42a781:	in     eax,0xd2
  42a783:	test   eax,0x1c38d2f9
  42a788:	popf   
  42a789:	icebp  
  42a78a:	jne    0x42a75e
  42a78c:	fcmovnbe st,st(2)
  42a78e:	test   eax,0x50db1e02
  42a793:	push   ds
  42a794:	mov    ds:0x63bde55f,al
  42a799:	enter  0xaa96,0x2a
  42a79d:	in     eax,0xe5
  42a79f:	in     eax,0xb7
  42a7a1:	rcl    DWORD PTR [esi-0x1a1a3556],1
  42a7a7:	in     eax,0x96
  42a7a9:	xor    DWORD PTR [eax],edi
  42a7ab:	repnz shl BYTE PTR [esi+0x6b],cl
  42a7af:	test   eax,0xb028995
  42a7b4:	in     eax,0xe5
  42a7b6:	pushf  
  42a7b7:	push   esp
  42a7b8:	jl     0x42a82f
  42a7ba:	stc    
  42a7bb:	pushf  
  42a7bc:	or     sp,WORD PTR [esi+0x6b]
  42a7c0:	dec    ebp
  42a7c1:	leave  
  42a7c2:	push   ds
  42a7c3:	iret   
  42a7c4:	call   0x20b044ae
  42a7c9:	xchg   edx,eax
  42a7ca:	dec    DWORD PTR [edx]
  42a7cc:	sbb    BYTE PTR [ebp-0x37],cl
  42a7cf:	pop    es
  42a7d0:	dec    DWORD PTR [ebp+0x56e8c9b1]
  42a7d6:	push   esi
  42a7d7:	pushf  
  42a7d8:	xchg   ebp,eax
  42a7d9:	xchg   esi,eax
  42a7da:	xor    DWORD PTR [ebp-0x18],ecx
  42a7dd:	rcl    BYTE PTR [edx+eax*1],cl
  42a7e0:	lea    eax,[edx]
  42a7e2:	ror    BYTE PTR [edx],cl
  42a7e4:	mov    ds:0xb07e76c5,eax
  42a7e9:	xchg   esi,eax
  42a7ea:	xor    DWORD PTR [edi+edi*4-0x1a1aa907],edx
  42a7f1:	or     bl,BYTE PTR [eax]
  42a7f3:	xor    BYTE PTR [esi+0x2],bh
  42a7f6:	rcl    BYTE PTR [edi+ebx*2],cl
  42a7f9:	xchg   esi,eax
  42a7fa:	xor    edi,edx
  42a7fc:	pop    ecx
  42a7fd:	cmp    al,0x6c
  42a7ff:	in     eax,0x74
  42a801:	push   ebx
  42a802:	rcl    BYTE PTR [edi+ebx*2],cl
  42a805:	xchg   esi,eax
  42a806:	xor    edi,edx
  42a808:	or     dl,BYTE PTR [esi+0xa6c3c7a]
  42a80e:	pop    esi
  42a80f:	stc    
  42a810:	or     bl,BYTE PTR [ecx+edi*8+0x7430180a]
  42a817:	ret    0xe820
  42a81a:	call   DWORD PTR [esi-0x57]
  42a81d:	call   0xc9907a2c
  42a822:	or     ah,BYTE PTR [ebx-0x3bcd17b3]
  42a828:	popf   
  42a829:	push   es
  42a82a:	push   esi
  42a82b:	test   eax,0xfffd20f9
  42a830:	sar    BYTE PTR [esi+0x5f],cl
  42a833:	xchg   esi,eax
  42a834:	xor    eax,esi
  42a836:	pop    ecx
  42a837:	cmp    al,0x3d
  42a839:	in     eax,0x74
  42a83b:	xchg   esi,eax
  42a83c:	inc    edx
  42a83d:	push   ds
  42a83e:	push   esi
  42a83f:	call   0xd1df01c2
  42a844:	inc    DWORD PTR ds:0x5f716d09
  42a84a:	in     eax,0xd2
  42a84c:	dec    ebp
  42a84d:	stc    
  42a84e:	fadd   st(1),st
  42a850:	leave  
  42a851:	call   0x9c4cfeac
  42a856:	pushfw 
  42a858:	ror    DWORD PTR [edx],1
  42a85a:	sbb    BYTE PTR [ebp-0x6b],cl
  42a85d:	xchg   esi,eax
  42a85e:	xor    eax,0x750d9dd1
  42a863:	rcr    bl,cl
  42a865:	push   ds
  42a866:	fistp  DWORD PTR [ebx-0x2d6a2d9d]
  42a86c:	inc    eax
  42a86d:	nop
  42a86e:	mov    bl,0xe5
  42a870:	in     eax,0x1e
  42a872:	xor    esp,ebp
  42a874:	jle    0x42a856
  42a876:	pushf  
  42a877:	sar    DWORD PTR [ecx+0x3d],1
  42a87a:	mov    bl,0xe5
  42a87c:	in     eax,0x20
  42a87e:	dec    edi
  42a87f:	push   esi
  42a880:	jle    0x42a8e1
  42a882:	out    0x19,eax
  42a884:	std    
  42a885:	push   esi
  42a886:	push   esi
  42a887:	lea    esi,[edx+eiz*1-0x72575695]
  42a88e:	mov    ah,0x44
  42a890:	imul   ebp,DWORD PTR [ecx+0xab48d89],0x6b
  42a897:	test   eax,0x6f408dba
  42a89c:	in     eax,0xe5
  42a89e:	in     eax,0x6b
  42a8a0:	test   eax,0xe2408dd1
  42a8a5:	in     eax,0xe5
  42a8a7:	in     eax,0x6b
  42a8a9:	test   eax,0xcc408d03
  42a8ae:	in     eax,0xe5
  42a8b0:	in     eax,0x6b
  42a8b2:	test   eax,0x13408d66
  42a8b7:	in     eax,0xe5
  42a8b9:	in     eax,0x6b
  42a8bb:	test   eax,0x50408dcc
  42a8c0:	mov    bl,0xe5
  42a8c2:	in     eax,0x6b
  42a8c4:	test   eax,0xb0408d19
  42a8c9:	mov    bl,0xe5
  42a8cb:	in     eax,0x6b
  42a8cd:	test   eax,0xec408dd4
  42a8d2:	mov    bl,0xe5
  42a8d4:	in     eax,0x63
  42a8d6:	imul   ebp,DWORD PTR [ecx+0x6740d2d8],0xffffffb3
  42a8dd:	in     eax,0xe5
  42a8df:	arpl   WORD PTR [ebx+0x7e],bp
  42a8e2:	shl    bh,0xd7
  42a8e5:	in     eax,0xe5
  42a8e7:	in     eax,0x9b
  42a8e9:	rol    BYTE PTR [eax-0x70],cl
  42a8ec:	mov    bl,0xe5
  42a8ee:	in     eax,0x56
  42a8f0:	jg     0x42a8d9
  42a8f2:	hlt    
  42a8f3:	std    
  42a8f4:	push   esi
  42a8f5:	push   esi
  42a8f6:	imul   ebp,DWORD PTR [ecx-0x692e486b],0xffffffaa
  42a8fd:	das    
  42a8fe:	in     eax,0xe5
  42a900:	in     eax,0xd2
  42a902:	cmp    edi,DWORD PTR [edx+edx*8]
  42a905:	je     0x42a8ba
  42a907:	adc    DWORD PTR [ebx],ecx
  42a909:	xchg   ebp,eax
  42a90a:	rol    BYTE PTR [esi-0xd9c2da0],cl
  42a910:	mov    ebp,0xc81c05d2
  42a915:	shr    BYTE PTR [ecx],cl
  42a917:	sbb    cl,BYTE PTR [ebx]
  42a919:	stc    
  42a91a:	imul   esp,DWORD PTR [edx-0x20d62d48],0xb
  42a921:	or     bx,WORD PTR [ecx]
  42a924:	imul   ecx,DWORD PTR [ebp-0x37],0x6b
  42a928:	jne    0x42a914
  42a92a:	imul   esp,DWORD PTR [edx-0x68c0e707],0xb
  42a931:	imul   edx,DWORD PTR [ecx+edi*8],0xffffff9c
  42a935:	daa    
  42a936:	imul   edx,DWORD PTR [edi+eiz*8],0xffffffa3
  42a93a:	adc    al,0xf9
  42a93c:	inc    ecx
  42a93d:	(bad)  
  42a93e:	popf   
  42a93f:	or     edx,edx
  42a941:	jne    0x42a92d
  42a943:	shl    BYTE PTR [edx+0x3c3196b8],cl
  42a949:	call   FWORD PTR [eax]
  42a94b:	add    eax,0x1814071c
  42a950:	sub    edi,ebx
  42a952:	pop    es
  42a953:	pop    ds
  42a954:	shl    BYTE PTR [eax-0x36],cl
  42a957:	shl    BYTE PTR [ebp+0x5f],cl
  42a95a:	sar    BYTE PTR [ecx+edi*4],cl
  42a95d:	imul   esi,DWORD PTR [ebp-0x18],0xffffff8d
  42a961:	jne    0x42a923
  42a963:	or     ebx,eax
  42a965:	or     edi,ecx
  42a967:	pop    esi
  42a968:	jne    0x42a9c9
  42a96a:	int    0xa9
  42a96c:	fisttp DWORD PTR [ecx-0x1b]
  42a96f:	in     eax,0xe5
  42a971:	imul   esi,DWORD PTR [ebp+0x43],0xffffffd2
  42a975:	jne    0x42a95f
  42a977:	push   ds
  42a978:	(bad)  
  42a979:	in     eax,0x7e
  42a97b:	push   ss
  42a97c:	shr    BYTE PTR [ecx+0x50345643],cl
  42a982:	mov    ebp,0x56ab76e7
  42a987:	push   esi
  42a988:	ror    BYTE PTR [ebp-0x37],cl
  42a98b:	mov    bh,0xd1
  42a98d:	je     0x42a962
  42a98f:	shr    BYTE PTR [ecx-0x2dcc9418],cl
  42a995:	test   eax,0xe8a91e95
  42a99a:	add    al,0x56
  42a99c:	dec    ebp
  42a99d:	fstp   TBYTE PTR [esi-0x2c]
  42a9a0:	rcl    BYTE PTR [edi+eiz*8],cl
  42a9a3:	test   BYTE PTR [ebx+0x14],ch
  42a9a6:	out    0x18,eax
  42a9a8:	adc    al,0xf9
  42a9aa:	xor    dh,BYTE PTR ds:0x6d0509ff
  42a9b0:	jno    0x42a9b6
  42a9b2:	in     eax,0x75
  42a9b4:	rcr    bl,cl
  42a9b6:	shr    BYTE PTR [ecx-0x3fa99ca1],cl
  42a9bc:	fdiv   DWORD PTR [ebx-0x3f721a1b]
  42a9c2:	pop    eax
  42a9c3:	mov    bl,0xe5
  42a9c5:	in     eax,0xd2
  42a9c7:	test   eax,0xab35e75f
  42a9cc:	push   esi
  42a9cd:	push   esi
  42a9ce:	rol    BYTE PTR [ebp+0x6d2b36b],cl
  42a9d4:	pushf  
  42a9d5:	ins    DWORD PTR es:[edi],dx
  42a9d6:	mov    ds:0x4c96055f,eax
  42a9db:	rcl    edx,0xc1
  42a9de:	adc    al,0x71
  42a9e0:	add    al,0xe5
  42a9e2:	jne    0x42a9b6
  42a9e4:	(bad)  [ebx-0x2e]
  42a9e7:	xchg   ebp,eax
  42a9e8:	shr    BYTE PTR [ecx+0x6f91d25f],cl
  42a9ee:	mov    bl,0xe5
  42a9f0:	in     eax,0x96
  42a9f2:	xor    DWORD PTR [esi],eax
  42a9f4:	mov    ecx,0xe5e556f9
  42a9f9:	or     bl,BYTE PTR [eax]
  42a9fb:	shl    DWORD PTR [esp+edi*2-0x47],0x2
  42aa00:	or     esp,ebp
  42aa02:	in     eax,0xbd
  42aa04:	pushf  
  42aa05:	ror    DWORD PTR [ebx],0xc1
  42aa08:	push   ds
  42aa09:	(bad)  
  42aa0a:	jbe    0x42aa16
  42aa0c:	imul   esi,DWORD PTR [esi-0x6a],0x31
  42aa10:	push   es
  42aa11:	mov    ebx,0xe5e556f9
  42aa16:	push   ds
  42aa17:	jno    0x42aa8f
  42aa19:	or     bl,BYTE PTR [eax]
  42aa1b:	and    eax,0x9c092c7e
  42aa20:	ror    DWORD PTR [edx],1
  42aa22:	imul   esi,DWORD PTR [esi-0x2e],0xffffffa9
  42aa26:	pop    edi
  42aa27:	rcr    BYTE PTR [ecx+0x6f],cl
  42aa2a:	mov    bl,0xe5
  42aa2c:	in     eax,0x5
  42aa2e:	adc    al,0x71
  42aa30:	add    al,0xe5
  42aa32:	enter  0xf9d2,0xd2
  42aa36:	inc    eax
  42aa37:	outs   dx,DWORD PTR ds:[esi]
  42aa38:	mov    bl,0xe5
  42aa3a:	in     eax,0xc1
  42aa3c:	push   cs
  42aa3d:	push   es
  42aa3e:	or     ecx,ebp
  42aa40:	popf   
  42aa41:	dec    eax
  42aa42:	pop    ecx
  42aa43:	icebp  
  42aa44:	(bad)  
  42aa45:	pop    ecx
  42aa46:	rcl    esi,0x6f
  42aa49:	pop    edi
  42aa4a:	cmp    BYTE PTR [edx-0x76],al
  42aa4d:	dec    eax
  42aa4e:	pop    ecx
  42aa4f:	shr    al,1
  42aa51:	jle    0x42aa36
  42aa53:	(bad)  
  42aa54:	in     eax,0xe5
  42aa56:	rol    BYTE PTR [eax+0x6f],cl
  42aa59:	mov    bl,0xe5
  42aa5b:	in     eax,0xb
  42aa5d:	int    0xff
  42aa5f:	and    eax,0x1edbd275
  42aa64:	fstp   TBYTE PTR [eax+eiz*1]
  42aa67:	call   0x56865439
  42aa6c:	push   esi
  42aa6d:	push   esi
  42aa6e:	push   esi
  42aa6f:	pop    ds
  42aa70:	imul   ebp,DWORD PTR [ecx+0x5f4dd2d8],0xffffffb7
  42aa77:	ins    DWORD PTR es:[edi],dx
  42aa78:	xchg   esi,eax
  42aa79:	stos   BYTE PTR es:[edi],al
  42aa7a:	mov    ebx,0xd2e5e576
  42aa7f:	dec    ebp
  42aa80:	add    dh,BYTE PTR [edi-0x3f556993]
  42aa86:	jbe    0x42aa6d
  42aa88:	in     eax,0xd2
  42aa8a:	dec    ebp
  42aa8b:	push   eax
  42aa8c:	imul   ecx,DWORD PTR [ebp-0x16],0xffffffd2
  42aa90:	dec    ebp
  42aa91:	add    ch,BYTE PTR [ebx+0x4d]
  42aa94:	out    0xd2,eax
  42aa96:	dec    ebp
  42aa97:	pop    edi
  42aa98:	int    0xa9
  42aa9a:	mov    eax,0x5656b818
  42aa9f:	int    0xa9
  42aaa1:	inc    ebx
  42aaa2:	cdq    
  42aaa3:	push   esi
  42aaa4:	push   esi
  42aaa5:	push   esi
  42aaa6:	int    0xa9
  42aaa8:	stc    
  42aaa9:	push   esi
  42aaaa:	push   esi
  42aaab:	push   esi
  42aaac:	push   esi
  42aaad:	imul   ebp,DWORD PTR [ecx-0x365632b0],0xfffffffd
  42aab4:	push   esi
  42aab5:	push   esi
  42aab6:	push   esi
  42aab7:	shr    BYTE PTR [ecx+0x4d6bbd50],cl
  42aabd:	(bad)  [ebx+0x7a]
  42aac0:	dec    eax
  42aac1:	jg     0x42aaa8
  42aac3:	in     eax,0x9c
  42aac5:	(bad)  
  42aac6:	mov    ecx,0x56563099
  42aacb:	pop    esi
  42aacc:	or     cx,WORD PTR [ebp-0x19]
  42aad0:	enter  0x4d6b,0xe8
  42aad4:	int    0xa9
  42aad6:	pop    edi
  42aad7:	xchg   ebp,eax
  42aad8:	push   esi
  42aad9:	push   esi
  42aada:	push   esi
  42aadb:	shr    BYTE PTR [ecx+0x5f4dd2f9],cl
  42aae1:	pushf  
  42aae2:	(bad)  
  42aae3:	lea    ebp,[ecx]
  42aae5:	mov    bl,0x9c
  42aae7:	adc    eax,0x300bcd0b
  42aaec:	mov    ebx,0x233ea7c2
  42aaf1:	sbb    cl,al
  42aaf3:	xchg   esi,eax
  42aaf4:	push   ds
  42aaf5:	push   ebx
  42aaf6:	jbe    0x42aadd
  42aaf8:	in     eax,0x8d
  42aafa:	outs   dx,DWORD PTR ds:[esi]
  42aafb:	cdq    
  42aafc:	xor    BYTE PTR [esi+0x56],dl
  42aaff:	imul   ecx,DWORD PTR [ebp+0x2],0xffffffd2
  42ab03:	jne    0x42ab07
  42ab05:	pushf  
  42ab06:	pop    ebx
  42ab07:	fdiv   QWORD PTR [ecx-0x71]
  42ab0a:	and    esi,DWORD PTR [edi]
  42ab0c:	adc    DWORD PTR [ebp+0x6b03b721],ecx
  42ab12:	scas   al,BYTE PTR es:[edi]
  42ab13:	shr    BYTE PTR [esi+0x5f417318],cl
  42ab19:	fdiv   QWORD PTR [ebx+0xbace0bd]
  42ab1f:	popf   
  42ab20:	push   es
  42ab21:	fdiv   QWORD PTR [ebx-0x2833ccd1]
  42ab27:	ror    BYTE PTR [ebp+0x5f],cl
  42ab2a:	pushf  
  42ab2b:	adc    eax,0x2a95638
  42ab30:	or     esi,DWORD PTR [eax]
  42ab32:	sbb    cl,al
  42ab34:	xor    cl,ah
  42ab36:	jns    0x42ab64
  42ab38:	mov    bl,0xe5
  42ab3a:	in     eax,0xd2
  42ab3c:	dec    ebp
  42ab3d:	stc    
  42ab3e:	shr    BYTE PTR [ecx-0x63ea63a1],cl
  42ab44:	(bad)  
  42ab45:	or     esi,DWORD PTR [eax]
  42ab47:	or     ecx,ebp
  42ab49:	sbb    BYTE PTR [esi+0x7],ah
  42ab4c:	(bad)  
  42ab4d:	(bad)  
  42ab4e:	fcomp  QWORD PTR [ecx+0x6b565630]
  42ab54:	test   eax,0x275d202
  42ab59:	pushf  
  42ab5a:	pop    ebx
  42ab5b:	fdiv   QWORD PTR [ecx-0x71]
  42ab5e:	and    esi,DWORD PTR [edi]
  42ab60:	adc    DWORD PTR [ebp+0x6b038d44],ecx
  42ab66:	push   eax
  42ab67:	rcl    BYTE PTR [eax+0x18],cl
  42ab6a:	jae    0x42abad
  42ab6c:	pop    edi
  42ab6d:	fsubr  st(5),st
  42ab6f:	mov    ebp,0x9d0bace0
  42ab74:	push   es
  42ab75:	fsubr  st(5),st
  42ab77:	das    
  42ab78:	xor    ecx,esp
  42ab7a:	xlat   BYTE PTR ds:[ebx]
  42ab7b:	shr    BYTE PTR [ecx-0x103963a1],cl
  42ab81:	push   esi
  42ab82:	test   eax,0x18cd0b02
  42ab87:	data16 xor cl,ah
  42ab8a:	shr    BYTE PTR [ecx+0x504dd250],cl
  42ab90:	pushf  
  42ab91:	(bad)  
  42ab92:	pushf  
  42ab93:	adc    eax,0x105fa58d
  42ab98:	push   ebp
  42ab99:	in     eax,0xe5
  42ab9b:	shr    BYTE PTR [ecx+0x64549ce8],cl
  42aba1:	icebp  
  42aba2:	shr    BYTE PTR [ecx+0x504dd2c9],cl
  42aba8:	pushf  
  42aba9:	(bad)  
  42abaa:	pushf  
  42abab:	adc    eax,0x1918c15e
  42abb0:	xchg   esi,eax
  42abb1:	mov    bh,0xa6
  42abb3:	mov    bl,0xe5
  42abb5:	in     eax,0xd2
  42abb7:	test   eax,0xdba90be8
  42abbc:	ror    BYTE PTR [ebp-0x7],cl
  42abbf:	shl    BYTE PTR [ebp+0x5f],cl
  42abc2:	mov    ah,ch
  42abc4:	pushf  
  42abc5:	adc    eax,0x300b5b9c
  42abca:	or     ecx,DWORD PTR [edi+ebp*2-0xfe76957]
  42abd1:	pop    es
  42abd2:	cmp    BYTE PTR [ebp+0x563099dc],cl
  42abd8:	push   esi
  42abd9:	imul   ebp,DWORD PTR [ecx-0x6a8a2d6b],0xffffff9c
  42abe0:	pop    ebx
  42abe1:	fdiv   QWORD PTR [ecx-0x71]
  42abe4:	and    esi,DWORD PTR [edi]
  42abe6:	adc    DWORD PTR [ebp+0x6b038d44],ecx
  42abec:	push   eax
  42abed:	rcl    BYTE PTR [eax+0x18],cl
  42abf0:	jae    0x42ac33
  42abf2:	pop    edi
  42abf3:	fsubr  st(5),st
  42abf5:	mov    ebp,0x9d0bace0
  42abfa:	push   es
  42abfb:	fsubr  st(5),st
  42abfd:	das    
  42abfe:	xor    ecx,esp
  42ac00:	xlat   BYTE PTR ds:[ebx]
  42ac01:	shr    BYTE PTR [ecx-0x103963a1],cl
  42ac07:	push   esi
  42ac08:	test   eax,0x18cd0b95
  42ac0d:	data16 xor cl,ah
  42ac10:	mov    ch,BYTE PTR [ecx-0x15b22d6a]
  42ac16:	mov    bh,0x6d
  42ac18:	ror    BYTE PTR [ebp-0x7],cl
  42ac1b:	shl    BYTE PTR [ebp+0x5f],cl
  42ac1e:	jle    0x42ac5e
  42ac20:	pushf  
  42ac21:	adc    eax,0x300b5b9c
  42ac26:	or     ecx,DWORD PTR [eax+ebx*1-0x72c7f810]
  42ac2d:	fcomp  QWORD PTR [ecx+0x6b565630]
  42ac33:	test   eax,0x9575d295
  42ac38:	pushf  
  42ac39:	pop    ebx
  42ac3a:	fdiv   QWORD PTR [ecx-0x71]
  42ac3d:	and    esi,DWORD PTR [edi]
  42ac3f:	adc    DWORD PTR [ebp+0x6b038d44],ecx
  42ac45:	push   eax
  42ac46:	rcl    BYTE PTR [eax+0x18],cl
  42ac49:	jae    0x42ac8c
  42ac4b:	pop    edi
  42ac4c:	fsubr  st(5),st
  42ac4e:	mov    ebp,0x9d0bace0
  42ac53:	push   es
  42ac54:	fsubr  st(5),st
  42ac56:	das    
  42ac57:	xor    ecx,esp
  42ac59:	xlat   BYTE PTR ds:[ebx]
  42ac5a:	shr    BYTE PTR [ecx-0x103963a1],cl
  42ac60:	push   esi
  42ac61:	test   eax,0x18cd0b95
  42ac66:	data16 xor cl,ah
  42ac69:	mov    ch,BYTE PTR [ecx+0x4d63496]
  42ac6f:	(bad)  
  42ac70:	popf   
  42ac71:	cli    
  42ac72:	pushf  
  42ac73:	adc    eax,0x300b5b9c
  42ac78:	or     ecx,DWORD PTR [eax+ebx*1-0x72c7f810]
  42ac7f:	fcomp  QWORD PTR [ecx+0x6b565630]
  42ac85:	test   eax,0x9575d295
  42ac8a:	pushf  
  42ac8b:	pop    ebx
  42ac8c:	fdiv   QWORD PTR [ecx-0x71]
  42ac8f:	and    esi,DWORD PTR [edi]
  42ac91:	adc    DWORD PTR [ebp+0x6b038d44],ecx
  42ac97:	push   eax
  42ac98:	rcl    BYTE PTR [eax+0x18],cl
  42ac9b:	jae    0x42acde
  42ac9d:	pop    edi
  42ac9e:	fsubr  st(5),st
  42aca0:	mov    ebp,0x9d0bace0
  42aca5:	push   es
  42aca6:	fsubr  st(5),st
  42aca8:	das    
  42aca9:	xor    ecx,esp
  42acab:	xlat   BYTE PTR ds:[ebx]
  42acac:	shr    BYTE PTR [ecx-0x103963a1],cl
  42acb2:	push   esi
  42acb3:	test   eax,0x18cd0b95
  42acb8:	data16 xor cl,ah
  42acbb:	mov    ch,BYTE PTR [ecx-0x47b22d6a]
  42acc1:	pop    ecx
  42acc2:	icebp  
  42acc3:	dec    eax
  42acc4:	mov    cl,0x99
  42acc6:	push   0xffffffad
  42acc8:	ror    BYTE PTR [ebp+0x43],cl
  42accb:	pop    ecx
  42accc:	icebp  
  42accd:	dec    eax
  42acce:	jbe    0x42ad41
  42acd0:	pop    ecx
  42acd1:	ror    DWORD PTR [ecx+0x54],0x66
  42acd5:	ror    BYTE PTR [ebp-0x18],cl
  42acd8:	or     ecx,DWORD PTR [ebp-0x25]
  42acdb:	outs   dx,DWORD PTR ds:[esi]
  42acdc:	mov    bl,0xd2
  42acde:	test   eax,0xf94dd2e8
  42ace3:	pop    esi
  42ace4:	int    0x9c
  42ace6:	(bad)  
  42ace7:	sbb    cl,al
  42ace9:	jle    0x42ad05
  42aceb:	shr    BYTE PTR [ecx+0x504dd2c9],cl
  42acf1:	pushf  
  42acf2:	(bad)  
  42acf3:	pushf  
  42acf4:	adc    eax,0xcd5ec15e
  42acf9:	pushf  
  42acfa:	(bad)  
  42acfb:	imul   ebp,DWORD PTR [ecx+0x50a9d2c9],0xffffff9c
  42ad02:	(bad)  
  42ad03:	mov    ecx,0x56563099
  42ad08:	pop    esi
  42ad09:	or     cx,WORD PTR [ebp-0x19]
  42ad0d:	popf   
  42ad0e:	xchg   esi,eax
  42ad0f:	shr    BYTE PTR [ecx-0x463963b0],cl
  42ad15:	cdq    
  42ad16:	xor    BYTE PTR [esi+0x56],dl
  42ad19:	pop    esi
  42ad1a:	or     cx,WORD PTR [ebp-0x18]
  42ad1e:	imul   ecx,DWORD PTR [ebp-0x18],0xffffffd2
  42ad22:	test   eax,0x56f91ec9
  42ad27:	xchg   esi,eax
  42ad28:	mov    bh,0x85
  42ad2a:	stos   DWORD PTR es:[edi],eax
  42ad2b:	push   esi
  42ad2c:	push   esi
  42ad2d:	shr    BYTE PTR [ecx+0xbc69cd8],cl
  42ad33:	int    0xff
  42ad35:	add    eax,0xd2579d09
  42ad3a:	test   eax,0x7f484643
  42ad3f:	in     eax,0xe5
  42ad41:	ror    DWORD PTR [ecx+0x7f],cl
  42ad44:	in     eax,0xe5
  42ad46:	ins    DWORD PTR es:[edi],dx
  42ad47:	jno    0x42ad4b
  42ad49:	in     eax,0x75
  42ad4b:	rcr    bl,cl
  42ad4d:	push   ds
  42ad4e:	fcmovnu st,st(7)
  42ad50:	int    0xa9
  42ad52:	xchg   ebp,eax
  42ad53:	push   esi
  42ad54:	push   esi
  42ad55:	push   esi
  42ad56:	push   esi
  42ad57:	int    0xa9
  42ad59:	call   0x56990446
  42ad5e:	ror    BYTE PTR [ebx],cl
  42ad60:	imul   ebp,DWORD PTR [ecx-0x36563207],0x64
  42ad67:	push   esi
  42ad68:	push   esi
  42ad69:	push   esi
  42ad6a:	arpl   ax,cx
  42ad6c:	int    0xa9
  42ad6e:	fld    TBYTE PTR [edx+edi*8-0x77]
  42ad72:	adc    edx,0xffffffa2
  42ad75:	call   0x89d7fb4c
  42ad7a:	dec    eax
  42ad7b:	jg     0x42ad62
  42ad7d:	in     eax,0x9c
  42ad7f:	stc    
  42ad80:	lea    ebx,[ebx+0xb669cb3]
  42ad86:	xlat   BYTE PTR ds:[ebx]
  42ad87:	or     esi,eax
  42ad89:	xchg   esi,eax
  42ad8a:	scas   eax,DWORD PTR es:[edi]
  42ad8b:	rcr    BYTE PTR [ebp-0x6b22d4c],1
  42ad91:	sar    BYTE PTR [esi-0x18],cl
  42ad94:	pushf  
  42ad95:	pushfw 
  42ad97:	xchg   ebp,eax
  42ad98:	or     esi,eax
  42ad9a:	or     edx,DWORD PTR [edx+0x7ed215b7]
  42ada0:	stc    
  42ada1:	ror    BYTE PTR [ebp-0x18],cl
  42ada4:	je     0x42ad2d
  42ada6:	pushf  
  42ada7:	pushfw 
  42ada9:	xchg   ebp,eax
  42adaa:	or     esi,eax
  42adac:	or     edx,DWORD PTR [edx+0x4dd21373]
  42adb2:	fistp  DWORD PTR [esi+eiz*2-0xe630ff5]
  42adb9:	popf   
  42adba:	dec    eax
  42adbb:	pushf  
  42adbc:	xchg   ebp,eax
  42adbd:	pushf  
  42adbe:	or     dx,WORD PTR [edx+0x1373f00b]
  42adc5:	imul   edi,DWORD PTR [esi-0x7],0xffffffd2
  42adc9:	dec    ebp
  42adca:	call   0xbad0146b
  42adcf:	xchg   esi,eax
  42add0:	dec    ecx
  42add1:	jg     0x42adb8
  42add3:	in     eax,0xd2
  42add5:	dec    ebp
  42add6:	leave  
  42add7:	sar    BYTE PTR [esi-0x18],cl
  42adda:	pushf  
  42addb:	xchg   ebp,eax
  42addc:	pushf  
  42addd:	pop    si
  42addf:	adc    eax,0xe241d018
  42ade4:	shr    BYTE PTR [ecx+0xb6bfff9],cl
  42adea:	shr    BYTE PTR [ecx+0x256d05f9],cl
  42adf0:	jne    0x42adc4
  42adf2:	fcmovnu st,st(4)
  42adf4:	fcomi  st,st(2)
  42adf6:	add    al,0xe5
  42adf8:	in     eax,0xcd
  42adfa:	test   eax,0x565656db
  42adff:	push   esi
  42ae00:	int    0xa9
  42ae02:	leave  
  42ae03:	call   0xcd99045e
  42ae08:	test   eax,0x56b856e7
  42ae0d:	push   esi
  42ae0e:	mov    ebp,0xabeaa9cd
  42ae13:	push   esi
  42ae14:	push   esi
  42ae15:	push   esi
  42ae16:	shr    BYTE PTR [ecx+0x487a63db],cl
  42ae1c:	jg     0x42ae03
  42ae1e:	in     eax,0xc8
  42ae20:	pushf  
  42ae21:	(bad)  
  42ae22:	lea    ebp,[ecx]
  42ae24:	mov    bl,0xb
  42ae26:	int    0x6b
  42ae28:	test   eax,0xb8a9cdf9
  42ae2d:	fs push esi
  42ae2f:	push   esi
  42ae30:	push   esi
  42ae31:	int    0xa9
  42ae33:	call   0x83cca8a4
  42ae38:	int    0xa9
  42ae3a:	xchg   ebp,eax
  42ae3b:	pop    edi
  42ae3c:	in     eax,0xe5
  42ae3e:	in     eax,0xd2
  42ae40:	ins    DWORD PTR es:[edi],dx
  42ae41:	shr    BYTE PTR [ecx-0x24b22d37],cl
  42ae47:	pushf  
  42ae48:	(bad)  
  42ae49:	pushf  
  42ae4a:	adc    eax,0x300bcd0b
  42ae4f:	xchg   esi,eax
  42ae50:	scas   eax,DWORD PTR es:[edi]
  42ae51:	rcr    DWORD PTR [ebp-0x17562dc3],0x5e
  42ae58:	int    0x9c
  42ae5a:	(bad)  
  42ae5b:	imul   ebp,DWORD PTR [ecx-0x6eb7207],0xffffffe7
  42ae62:	jmp    0xf9a9:0x6b5656ab
  42ae69:	shr    BYTE PTR [ecx-0x17b22d07],cl
  42ae6f:	imul   ebp,DWORD PTR [edx+0x563fb88d],0x56
  42ae76:	shr    BYTE PTR [ecx-0x17b22d37],cl
  42ae7c:	pushf  
  42ae7d:	(bad)  
  42ae7e:	lea    ebp,[edx-0x1a80b6a1]
  42ae84:	in     eax,0x6b
  42ae86:	test   eax,0xe7a9d2e8
  42ae8b:	ror    BYTE PTR [ebp-0x37],cl
  42ae8e:	pushf  
  42ae8f:	adc    eax,0xc15ec69c
  42ae94:	ror    BYTE PTR [ebp-0x18],cl
  42ae97:	sbb    BYTE PTR [esi+0x41],ah
  42ae9a:	mov    ecx,0x9ceaa9d2
  42ae9f:	(bad)  
  42aea0:	or     ecx,ebp
  42aea2:	imul   ebp,DWORD PTR [ecx-0x18563207],0xffffffab
  42aea9:	mov    eax,0x27d25656
  42aeae:	popf   
  42aeaf:	popa   
  42aeb0:	ror    BYTE PTR [ebp-0x48],cl
  42aeb3:	shr    BYTE PTR [ecx+0xb159cf9],cl
  42aeb9:	xor    BYTE PTR [ebx-0x19],dh
  42aebc:	imul   ebp,DWORD PTR [ecx+0x5fa9d2e8],0xffffff8a
  42aec3:	pop    edi
  42aec4:	outs   dx,DWORD PTR ds:[esi]
  42aec5:	dec    ebp
  42aec6:	dec    ecx
  42aec7:	mov    cl,BYTE PTR [ebp+0x49]
  42aeca:	shl    BYTE PTR [ebp-0x7],cl
  42aecd:	xchg   esi,eax
  42aece:	sub    BYTE PTR [ebp-0x64],0xf0
  42aed2:	imul   ecx,DWORD PTR [ebp+0x5f],0xffffffd2
  42aed6:	dec    ebp
  42aed7:	out    0xd2,eax
  42aed9:	jne    0x42af3a
  42aedb:	pushf  
  42aedc:	adc    eax,0xf023300b
  42aee1:	shl    BYTE PTR [ebp+0x563fb88d],cl
  42aee7:	push   esi
  42aee8:	shl    BYTE PTR [ebp-0x18],cl
  42aeeb:	pushf  
  42aeec:	lock imul ecx,DWORD PTR [ebp-0x7],0xffffffd2
  42aef1:	dec    ebp
  42aef2:	leave  
  42aef3:	pushf  
  42aef4:	adc    eax,0x495faa8d
  42aef9:	jg     0x42aee0
  42aefb:	in     eax,0x6b
  42aefd:	test   eax,0xc9a9d25f
  42af02:	pushf  
  42af03:	(bad)  
  42af04:	mov    ecx,0x56563099
  42af09:	pop    esi
  42af0a:	or     cx,WORD PTR [ebp-0x6b]
  42af0e:	imul   ecx,DWORD PTR [ebp-0x6b],0xffffffd2
  42af12:	test   eax,0x954dd2db
  42af17:	pushf  
  42af18:	(bad)  
  42af19:	or     ecx,ebp
  42af1b:	sbb    BYTE PTR [esi+0x7e],ah
  42af1e:	mov    dh,0xd2
  42af20:	test   eax,0xf94dd2ea
  42af25:	pushf  
  42af26:	(bad)  
  42af27:	or     ecx,ebp
  42af29:	inc    DWORD PTR ds:0x6d09c19c
  42af2f:	jno    0x42af35
  42af31:	in     eax,0x75
  42af33:	rcr    bl,cl
  42af35:	shr    BYTE PTR [ecx+0x5f4dd21c],cl
  42af3b:	rcr    BYTE PTR [ecx-0x6f],cl
  42af3e:	mov    bl,0xe5
  42af40:	in     eax,0xd2
  42af42:	in     eax,0x1e
  42af44:	fucomi st,st(1)
  42af46:	mov    ebp,0x507ed263
  42af4b:	rcl    BYTE PTR [eax],cl
  42af4d:	enter  0x48bf,0x7f
  42af51:	in     eax,0xe5
  42af53:	pushf  
  42af54:	xor    BYTE PTR [ebp-0x34f44c01],cl
  42af5a:	sbb    BYTE PTR [ebp-0x41236982],ch
  42af60:	arpl   WORD PTR [edi],bx
  42af62:	add    BYTE PTR [ecx],dl
  42af64:	mov    ch,BYTE PTR [edi-0x278668a8]
  42af6a:	add    al,0xe5
  42af6c:	in     eax,0xd2
  42af6e:	dec    ebp
  42af6f:	pop    edi
  42af70:	shl    BYTE PTR [ebp+0x2],cl
  42af73:	pushf  
  42af74:	xor    BYTE PTR [esp+ecx*4+0x730bcb0b],bl
  42af7b:	sbb    al,dh
  42af7d:	jle    0x42af15
  42af7f:	fcom   QWORD PTR [edi+0x63]
  42af82:	pop    ds
  42af83:	add    BYTE PTR [ecx],dl
  42af85:	out    dx,eax
  42af86:	loopne 0x42af1f
  42af88:	pop    eax
  42af89:	jns    0x42afbc
  42af8b:	add    al,0xe5
  42af8d:	in     eax,0xd2
  42af8f:	dec    ebp
  42af90:	pop    edi
  42af91:	pushf  
  42af92:	xor    BYTE PTR [ebx],cl
  42af94:	retf   
  42af95:	sbb    cl,al
  42af97:	xchg   esi,eax
  42af98:	stos   BYTE PTR es:[edi],al
  42af99:	sub    BYTE PTR [eiz*8+0x1c4dd2e5],al
  42afa0:	imul   ebp,DWORD PTR [ecx+0x1c4d6b43],0xffffffd2
  42afa7:	dec    ebp
  42afa8:	(bad)  
  42afaa:	push   es
  42afab:	imul   ebp,DWORD PTR [ecx+0x5fa9cdd8],0x56
  42afb2:	push   esi
  42afb3:	push   esi
  42afb4:	push   esi
  42afb5:	and    al,ch
  42afb7:	pop    edx
  42afb8:	imul   esi,DWORD PTR [ebp-0x6b],0xffffffd2
  42afbc:	test   eax,0x1ca96b1c
  42afc1:	shr    BYTE PTR [ecx-0x6ea62de4],cl
  42afc7:	mov    bl,0xe5
  42afc9:	in     eax,0xd2
  42afcb:	in     eax,0x6b
  42afcd:	dec    ebp
  42afce:	aam    0xd2
  42afd0:	dec    ebp
  42afd1:	sbb    al,0xd2
  42afd3:	imul   edx,DWORD PTR [ecx-0x2d1a1a4d],0xffffff94
  42afda:	or     edi,DWORD PTR [ebx]
  42afdc:	cmp    al,0x6b
  42afde:	dec    ebp
  42afdf:	add    dl,dl
  42afe1:	test   eax,0xbcd9c5f
  42afe6:	and    eax,0xd2c9a96b
  42afeb:	test   eax,0xbcd9c5f
  42aff0:	and    eax,0xd2dfa96b
  42aff5:	test   eax,0x9b38d202
  42affa:	push   ds
  42affb:	out    0x2,eax
  42affd:	imul   ebp,DWORD PTR [ecx+0x2a9d219],0xffffffd2
  42b004:	cmp    BYTE PTR [ebx],dh
  42b006:	ror    BYTE PTR [ebp+0x2],cl
  42b009:	cmp    esi,DWORD PTR [edi-0x562d1311]
  42b00f:	add    dh,BYTE PTR [esp+ebx*1-0x2e]
  42b013:	cmp    BYTE PTR [ebx],dh
  42b015:	ror    BYTE PTR [ebp+0x2],cl
  42b018:	shl    dh,cl
  42b01a:	in     al,dx
  42b01b:	cmp    esp,DWORD PTR [ecx+ebx*1+0x23]
  42b01f:	data16 shr BYTE PTR [ecx+0x3338d202],cl
  42b026:	or     eax,ecx
  42b028:	popf   
  42b029:	or     edx,edx
  42b02b:	cmp    ah,ch
  42b02d:	imul   ebp,DWORD PTR [ecx+0x5fa9d21c],0xffffff9c
  42b034:	int    0xb
  42b036:	and    eax,0xd2dfa96b
  42b03b:	test   eax,0xbcd9c5f
  42b040:	and    eax,0xd2dfa96b
  42b045:	test   eax,0xd44dd25f
  42b04a:	pushf  
  42b04b:	int    0xb
  42b04d:	and    eax,0x756bb36b
  42b052:	(bad)  
  42b054:	test   eax,0x5656fddf
  42b059:	push   esi
  42b05a:	int    0xa9
  42b05c:	fist   WORD PTR [edx-0x32a9a9aa]
  42b062:	test   eax,0x5656cedf
  42b067:	push   esi
  42b068:	shr    BYTE PTR [ecx+0x1c4dd295],cl
  42b06e:	pushf  
  42b06f:	int    0xb
  42b071:	and    eax,0xd2c1af96
  42b076:	dec    ebp
  42b077:	pop    edi
  42b078:	shl    BYTE PTR [ebp+0x19],cl
  42b07b:	pushf  
  42b07c:	xor    BYTE PTR [ebp+0x7f49aea5],cl
  42b082:	in     eax,0xe5
  42b084:	sbb    cl,al
  42b086:	xchg   esi,eax
  42b087:	push   ds
  42b088:	nop
  42b089:	or     esp,ebp
  42b08b:	in     eax,0xd2
  42b08d:	test   eax,0xbcd9c5f
  42b092:	and    eax,0xd2dfa96b
  42b097:	test   eax,0x43a90b1c
  42b09c:	imul   ebp,DWORD PTR [ecx-0x3681a937],0xffffffd2
  42b0a3:	jle    0x42b0e8
  42b0a5:	ror    BYTE PTR [ebp+0x2],cl
  42b0a8:	out    0x56,eax
  42b0aa:	jecxz  0x42b102
  42b0ac:	push   esi
  42b0ad:	imul   ebp,DWORD PTR [ecx-0x47563207],0x64
  42b0b4:	push   esi
  42b0b5:	push   esi
  42b0b6:	push   esi
  42b0b7:	shr    BYTE PTR [ecx+0xbcd9cb8],cl
  42b0bd:	and    eax,0x89a98d9b
  42b0c2:	fwait
  42b0c3:	out    0xbc,eax
  42b0c5:	cdq    
  42b0c6:	push   esi
  42b0c7:	push   esi
  42b0c8:	shr    BYTE PTR [ecx+0x74d1b7f9],cl
  42b0ce:	xchg   dl,dl
  42b0d0:	test   eax,0xbcd9cb8
  42b0d5:	and    eax,0xf97e569b
  42b0da:	lea    ebp,[ecx+0x16e79b89]
  42b0e0:	leave  
  42b0e1:	push   esi
  42b0e2:	push   esi
  42b0e3:	shr    BYTE PTR [ecx-0x47569437],cl
  42b0e9:	shr    BYTE PTR [ecx+0x434dd2b8],cl
  42b0ef:	pop    esi
  42b0f0:	shr    DWORD PTR [ebx-0x57],0xb8
  42b0f4:	shr    BYTE PTR [ecx-0x6b22d07],cl
  42b0fa:	sar    BYTE PTR [eax],cl
  42b0fc:	push   eax
  42b0fd:	or     ebp,edi
  42b0ff:	add    dl,dl
  42b101:	dec    ebp
  42b102:	mov    eax,0x10326618
  42b107:	shr    BYTE PTR [ecx+0x238d2f9],cl
  42b10d:	ror    BYTE PTR [ebp-0x7],cl
  42b110:	or     ebp,edi
  42b112:	pop    edi
  42b113:	ror    BYTE PTR [ebp-0x48],cl
  42b116:	pop    esi
  42b117:	sar    DWORD PTR [ecx-0x39],0x76
  42b11b:	in     eax,0xe5
  42b11d:	and    BYTE PTR [edx],al
  42b11f:	push   esi
  42b120:	jle    0x42b0eb
  42b122:	lea    ebp,[ecx+0x73e79b67]
  42b128:	into   
  42b129:	push   esi
  42b12a:	push   esi
  42b12b:	push   ds
  42b12c:	push   si
  42b12e:	imul   ebp,DWORD PTR [ecx+0x66a9cdcc],0xffffffe8
  42b135:	push   esi
  42b136:	push   esi
  42b137:	push   esi
  42b138:	int    0xa9
  42b13a:	add    edi,ebp
  42b13c:	push   esi
  42b13d:	push   esi
  42b13e:	push   esi
  42b13f:	int    0xa9
  42b141:	rcl    DWORD PTR [edx-0x72a9a9aa],1
  42b147:	dec    ebp
  42b148:	int3   
  42b149:	imul   ecx,DWORD PTR [ebp-0x25],0xffffff8d
  42b14d:	dec    ebp
  42b14e:	imul   cx,WORD PTR [ebp-0x19],0xff8d
  42b153:	dec    ebp
  42b154:	add    ebp,DWORD PTR [ebx+0x4d]
  42b157:	stc    
  42b158:	lea    ecx,[ebp-0x2f]
  42b15b:	imul   ecx,DWORD PTR [ebp-0x16],0xffffffd2
  42b15f:	dec    ebp
  42b160:	pop    edi
  42b161:	pushf  
  42b162:	xor    BYTE PTR [ebx],cl
  42b164:	retf   
  42b165:	imul   ecx,DWORD PTR [ebp-0x48],0x79
  42b169:	cdq    
  42b16a:	mov    bl,0xe5
  42b16c:	in     eax,0x1e
  42b16e:	stc    
  42b16f:	std    
  42b170:	xchg   esi,eax
  42b171:	stos   BYTE PTR es:[edi],al
  42b172:	stos   DWORD PTR es:[edi],eax
  42b173:	mov    bl,0xe5
  42b175:	in     eax,0xd2
  42b177:	dec    ebp
  42b178:	xchg   ebp,eax
  42b179:	pushf  
  42b17a:	xor    dl,dl
  42b17c:	xchg   ebp,eax
  42b17d:	or     ecx,ebx
  42b17f:	imul   ecx,DWORD PTR [ebp-0x21],0xffffffd2
  42b183:	test   eax,0x8d649cb8
  42b188:	stos   BYTE PTR es:[edi],al
  42b189:	jg     0x42b1d4
  42b18b:	jg     0x42b172
  42b18d:	in     eax,0x6b
  42b18f:	test   eax,0x95a9d2b8
  42b194:	ror    BYTE PTR [ebp-0x48],cl
  42b197:	pushf  
  42b198:	int    0xb
  42b19a:	and    eax,0xfb7e6618
  42b19f:	shr    BYTE PTR [ecx+0xbcd9c5f],cl
  42b1a5:	and    eax,0x8d02209b
  42b1aa:	test   eax,0x81e79b67
  42b1af:	stc    
  42b1b0:	push   esi
  42b1b1:	push   esi
  42b1b2:	shr    BYTE PTR [ecx-0x631a2d25],cl
  42b1b8:	int    0x8a
  42b1ba:	stos   BYTE PTR es:[edi],al
  42b1bb:	shl    DWORD PTR [ecx],cl
  42b1bd:	dec    ebx
  42b1be:	in     eax,0xe5
  42b1c0:	ror    BYTE PTR [ebp+0x5f],cl
  42b1c3:	pushf  
  42b1c4:	xor    BYTE PTR [esi-0x34f42e80],dl
  42b1ca:	sbb    cl,al
  42b1cc:	xchg   esi,eax
  42b1cd:	stos   BYTE PTR es:[edi],al
  42b1ce:	adc    DWORD PTR [ebx-0x562d1a1b],esi
  42b1d4:	out    0xd2,eax
  42b1d6:	in     eax,0x9c
  42b1d8:	int    0x8a
  42b1da:	stos   BYTE PTR es:[edi],al
  42b1db:	shl    DWORD PTR [ecx],cl
  42b1dd:	dec    ebx
  42b1de:	in     eax,0xe5
  42b1e0:	ror    BYTE PTR [ebp+0x5f],cl
  42b1e3:	pushf  
  42b1e4:	xor    BYTE PTR [esi-0x34f42e80],dl
  42b1ea:	sbb    cl,al
  42b1ec:	xchg   esi,eax
  42b1ed:	stos   BYTE PTR es:[edi],al
  42b1ee:	pop    ds
  42b1ef:	mov    bl,0xe5
  42b1f1:	in     eax,0xd2
  42b1f3:	test   eax,0x9ce5d2f9
  42b1f8:	int    0x8a
  42b1fa:	stos   BYTE PTR es:[edi],al
  42b1fb:	shl    DWORD PTR [ecx],cl
  42b1fd:	dec    ebx
  42b1fe:	in     eax,0xe5
  42b200:	ror    BYTE PTR [ebp+0x5f],cl
  42b203:	pushf  
  42b204:	xor    BYTE PTR [esi-0x34f42e80],dl
  42b20a:	sbb    cl,al
  42b20c:	xchg   esi,eax
  42b20d:	stos   BYTE PTR es:[edi],al
  42b20e:	xor    esi,DWORD PTR [ebx-0x562d1a1b]
  42b214:	jmp    0xaa8a:0xcd9ce5d2
  42b21b:	shl    DWORD PTR [ecx],cl
  42b21d:	dec    ebx
  42b21e:	in     eax,0xe5
  42b220:	ror    BYTE PTR [ebp+0x5f],cl
  42b223:	pushf  
  42b224:	xor    BYTE PTR [esi-0x34f42e80],dl
  42b22a:	sbb    cl,al
  42b22c:	xchg   esi,eax
  42b22d:	stos   BYTE PTR es:[edi],al
  42b22e:	sbb    al,0xb3
  42b230:	in     eax,0xe5
  42b232:	shr    BYTE PTR [ecx-0x631a2d19],cl
  42b238:	int    0x8a
  42b23a:	stos   BYTE PTR es:[edi],al
  42b23b:	shl    DWORD PTR [ecx],cl
  42b23d:	dec    ebx
  42b23e:	in     eax,0xe5
  42b240:	ror    BYTE PTR [ebp-0x25],cl
  42b243:	rcl    BYTE PTR [esp+ebx*4+0x57a58a30],cl
  42b24a:	xor    DWORD PTR [ebx-0x1b],ecx
  42b24d:	in     eax,0xb0
  42b24f:	rcl    edx,0x4d
  42b252:	stc    
  42b253:	rcl    BYTE PTR [esp+ebx*4+0x57a58a30],cl
  42b25a:	xor    DWORD PTR [ebx-0x1b],ecx
  42b25d:	in     eax,0x48
  42b25f:	rcl    edx,0x4d
  42b262:	fcmovnbe st,st(2)
  42b264:	xchg   esp,eax
  42b265:	pushf  
  42b266:	xor    BYTE PTR [edx+0x4bbb57a5],cl
  42b26c:	in     eax,0xe5
  42b26e:	(bad)  
  42b26f:	xchg   si,ax
  42b271:	mov    bh,0xd4
  42b273:	in     eax,0xe5
  42b275:	in     eax,0xd2
  42b277:	test   eax,0x9ce5d2f9
  42b27c:	int    0x8a
  42b27e:	stos   BYTE PTR es:[edi],al
  42b27f:	shl    DWORD PTR [ecx],cl
  42b281:	dec    ebx
  42b282:	in     eax,0xe5
  42b284:	ror    BYTE PTR [ebp-0x19],cl
  42b287:	rcl    BYTE PTR [esp+ebx*4+0x57a58a30],cl
  42b28e:	xor    DWORD PTR [ebx-0x1b],ecx
  42b291:	in     eax,0xb0
  42b293:	rcl    edx,0x4d
  42b296:	jmp    0xa58a:0x309c94d2
  42b29d:	push   edi
  42b29e:	xor    DWORD PTR [ebx-0x1b],ecx
  42b2a1:	in     eax,0x48
  42b2a3:	rcl    edx,0x4d
  42b2a6:	out    0xd2,eax
  42b2a8:	xchg   esp,eax
  42b2a9:	pushf  
  42b2aa:	xor    BYTE PTR [edx+0x4bbb57a5],cl
  42b2b0:	in     eax,0xe5
  42b2b2:	(bad)  
  42b2b3:	xchg   si,ax
  42b2b5:	mov    bh,0x91
  42b2b7:	in     eax,0xe5
  42b2b9:	in     eax,0xd2
  42b2bb:	test   eax,0x9ce5d2ea
  42b2c0:	int    0x8a
  42b2c2:	stos   BYTE PTR es:[edi],al
  42b2c3:	shl    DWORD PTR [ecx],cl
  42b2c5:	dec    ebx
  42b2c6:	in     eax,0xe5
  42b2c8:	ror    BYTE PTR [ebp-0x7],cl
  42b2cb:	rcl    BYTE PTR [esp+ebx*4+0x57a58a30],cl
  42b2d2:	xor    DWORD PTR [ebx-0x1b],ecx
  42b2d5:	in     eax,0xb0
  42b2d7:	rcl    edx,0x4d
  42b2da:	fcmovnbe st,st(2)
  42b2dc:	xchg   esp,eax
  42b2dd:	pushf  
  42b2de:	xor    BYTE PTR [edx+0x4b3157a5],cl
  42b2e4:	in     eax,0xe5
  42b2e6:	dec    eax
  42b2e7:	rcl    edx,0x4d
  42b2ea:	stc    
  42b2eb:	rcl    BYTE PTR [esp+ebx*4+0x57a58a30],cl
  42b2f2:	mov    ebx,0xd6e5e54b
  42b2f7:	data16 jle 0x42b295
  42b2fa:	shr    BYTE PTR [ecx-0x631a2d16],cl
  42b300:	int    0x8a
  42b302:	stos   BYTE PTR es:[edi],al
  42b303:	shl    DWORD PTR [ecx],cl
  42b305:	dec    ebx
  42b306:	in     eax,0xe5
  42b308:	ror    BYTE PTR [ebp-0x25],cl
  42b30b:	rcl    BYTE PTR [esp+ebx*4+0x57a58a30],cl
  42b312:	xor    DWORD PTR [ebx-0x1b],ecx
  42b315:	in     eax,0xb0
  42b317:	rcl    edx,0x4d
  42b31a:	out    0xd2,eax
  42b31c:	xchg   esp,eax
  42b31d:	pushf  
  42b31e:	xor    BYTE PTR [edx+0x4b3157a5],cl
  42b324:	in     eax,0xe5
  42b326:	dec    eax
  42b327:	rcl    edx,0x4d
  42b32a:	jmp    0xa58a:0x309c94d2
  42b331:	push   edi
  42b332:	mov    ebx,0xd6e5e54b
  42b337:	data16 jle 0x42b38a
  42b33a:	lea    ebp,[ecx+0x2fe79b67]
  42b340:	xlat   BYTE PTR ds:[ebx]
  42b341:	push   esi
  42b342:	push   esi
  42b343:	ror    BYTE PTR [ebp-0x58],cl
  42b346:	sbb    cl,al
  42b348:	je     0x42b392
  42b34a:	shr    BYTE PTR [ecx+0xbcd9c5f],cl
  42b350:	and    eax,0xd2dfa96b
  42b355:	test   eax,0x8dcd9c95
  42b35a:	stos   BYTE PTR es:[edi],al
  42b35b:	jg     0x42b3a6
  42b35d:	jg     0x42b344
  42b35f:	in     eax,0x9c
  42b361:	int    0xd2
  42b363:	dec    ebp
  42b364:	pop    edi
  42b365:	shl    BYTE PTR [ebp-0x21],cl
  42b368:	pushf  
  42b369:	xor    BYTE PTR [ebx],cl
  42b36b:	retf   
  42b36c:	sbb    BYTE PTR [ebp-0x22f556a],ch
  42b372:	push   esi
  42b373:	push   esi
  42b374:	shr    BYTE PTR [ecx-0x20b22da1],cl
  42b37a:	pushf  
  42b37b:	int    0xb
  42b37d:	and    eax,0xae7e6618
  42b382:	shr    BYTE PTR [ecx+0x1c4dd295],cl
  42b388:	pushf  
  42b389:	int    0x8d
  42b38b:	stos   BYTE PTR es:[edi],al
  42b38c:	pop    edi
  42b38d:	dec    ecx
  42b38e:	jg     0x42b375
  42b390:	in     eax,0x9d
  42b392:	xchg   edi,eax
  42b393:	and    BYTE PTR [esi+edx*2],bl
  42b396:	jle    0x42b361
  42b398:	lea    ebp,[ecx+0x14e79b35]
  42b39e:	icebp  
  42b39f:	push   esi
  42b3a0:	push   esi
  42b3a1:	shr    BYTE PTR [ecx-0x47b22da1],cl
  42b3a7:	pushf  
  42b3a8:	int    0xb
  42b3aa:	and    eax,0xfb74c118
  42b3af:	shr    BYTE PTR [ecx+0xbcd9c5f],cl
  42b3b5:	and    eax,0x8d1c209b
  42b3ba:	test   eax,0x28e79b35
  42b3bf:	ss push esi
  42b3c1:	push   esi
  42b3c2:	shr    BYTE PTR [ecx+0x1cd11ec9],cl
  42b3c8:	imul   ebp,DWORD PTR [ecx-0x6f81a921],0x56
  42b3cf:	jle    0x42b3b0
  42b3d1:	shr    BYTE PTR [ecx-0x2756f413],cl
  42b3d7:	fwait
  42b3d8:	out    0x7c,eax
  42b3da:	icebp  
  42b3db:	push   esi
  42b3dc:	push   esi
  42b3dd:	shr    BYTE PTR [ecx-0x47b22da1],cl
  42b3e3:	pushf  
  42b3e4:	int    0xb
  42b3e6:	and    eax,0xae74c118
  42b3eb:	and    ch,ah
  42b3ed:	push   esi
  42b3ee:	jle    0x42b380
  42b3f0:	shr    BYTE PTR [ecx-0x2756f413],cl
  42b3f6:	fwait
  42b3f7:	out    0x8b,eax
  42b3f9:	ss push esi
  42b3fb:	push   esi
  42b3fc:	shr    BYTE PTR [ecx-0x6fb22d2c],cl
  42b402:	mov    bl,0x5f
  42b404:	shr    BYTE PTR [ecx+0x1ca90b90],cl
  42b40a:	imul   ebp,DWORD PTR [ecx-0x6a562de4],0xffffffd2
  42b411:	dec    ebp
  42b412:	sbb    al,0x9c
  42b414:	int    0xb
  42b416:	and    eax,0xd2c1af96
  42b41b:	dec    ebp
  42b41c:	pop    edi
  42b41d:	shl    BYTE PTR [ebp+0x19],cl
  42b420:	pushf  
  42b421:	xor    BYTE PTR [ebp+0x7f49aea5],cl
  42b427:	in     eax,0xe5
  42b429:	sbb    cl,al
  42b42b:	xchg   esi,eax
  42b42c:	out    dx,al
  42b42d:	or     eax,ebp
  42b42f:	push   esi
  42b430:	push   esi
  42b431:	sar    BYTE PTR [esi+0x50],cl
  42b434:	shr    BYTE PTR [ecx-0x62f99428],cl
  42b43a:	dec    eax
  42b43b:	fadd   QWORD PTR [esi+0x63]
  42b43e:	pop    ds
  42b43f:	add    BYTE PTR [ecx],dl
  42b441:	lds    esp,FWORD PTR [ebp+0x0]
  42b444:	jne    0x42b445
  42b446:	add    eax,0xdf716d09
  42b44b:	in     eax,0x75
  42b44d:	rcr    bl,cl
  42b44f:	push   ds
  42b450:	jmp    0xdb1e:0xf2a9d2f9
  42b457:	fistp  QWORD PTR [ebp+0x63df14d2]
  42b45d:	enter  0xf91e,0x56
  42b461:	jle    0x42b443
  42b463:	and    al,ch
  42b465:	jns    0x42b3fd
  42b467:	mov    bl,0xe5
  42b469:	in     eax,0xd2
  42b46b:	test   eax,0xe8f91ef2
  42b470:	jle    0x42b452
  42b472:	and    ch,bh
  42b474:	jns    0x42b45b
  42b476:	mov    bl,0xe5
  42b478:	in     eax,0xd2
  42b47a:	test   eax,0xfdf91ef2
  42b47f:	jle    0x42b461
  42b481:	and    BYTE PTR [edx-0x1a1a0e87],dl
  42b487:	in     eax,0xd2
  42b489:	test   eax,0x92f91ef2
  42b48e:	jle    0x42b470
  42b490:	and    dh,cl
  42b492:	jns    0x42b4a1
  42b494:	in     eax,0xe5
  42b496:	in     eax,0xd2
  42b498:	test   eax,0x36f91ef2
  42b49d:	xchg   esi,eax
  42b49e:	mov    bh,0xa8
  42b4a0:	in     eax,0xe5
  42b4a2:	in     eax,0xd2
  42b4a4:	test   eax,0x1a446b50
  42b4a9:	add    dl,dl
  42b4ab:	test   eax,0x1a446b1c
  42b4b0:	(bad)  
  42b4b2:	test   eax,0x1a446b02
  42b4b7:	sbb    al,0xd2
  42b4b9:	test   eax,0x1a446b5f
  42b4be:	push   eax
  42b4bf:	rol    BYTE PTR [edx+ebx*1+0x50],cl
  42b4c3:	shl    BYTE PTR [ecx],cl
  42b4c5:	sbb    bl,bh
  42b4c7:	mov    edi,0xe5e57f48
  42b4cc:	pushf  
  42b4cd:	int    0x8d
  42b4cf:	xchg   edi,eax
  42b4d0:	mov    bl,0xb
  42b4d2:	(bad)  
  42b4d3:	imul   esi,DWORD PTR [ebx+0x21a44d2],0xffffffd2
  42b4da:	pop    ecx
  42b4db:	xor    eax,0xd2e5e5b3
  42b4e0:	pop    edi
  42b4e1:	rol    BYTE PTR [edx+ebx*1+0x2],cl
  42b4e5:	rcr    BYTE PTR [ecx+0x35],cl
  42b4e8:	mov    bl,0xe5
  42b4ea:	in     eax,0xd2
  42b4ec:	in     eax,0xb
  42b4ee:	out    dx,eax
  42b4ef:	cmp    al,0xd2
  42b4f1:	and    DWORD PTR [edx],ebx
  42b4f3:	add    dl,dl
  42b4f5:	imul   ebx,eax,0xffffffb3
  42b4f8:	in     eax,0xe5
  42b4fa:	shl    dh,cl
  42b4fc:	fbld   TBYTE PTR [eax]
  42b4fe:	add    al,0x68
  42b500:	in     eax,0x7f
  42b502:	in     eax,0xe5
  42b504:	push   esi
  42b505:	jmp    0x5727d5a5
  42b50a:	lods   eax,DWORD PTR ds:[esi]
  42b50b:	imul   ecx,DWORD PTR [ebx],0xffffffd2
  42b50e:	inc    esp
  42b50f:	sbb    dl,BYTE PTR [eax-0x64]
  42b512:	int    0xb
  42b514:	(bad)  
  42b515:	imul   eax,DWORD PTR [edx+ebx*1+0x60],0xffffffd2
  42b51a:	inc    esp
  42b51b:	sbb    bl,bh
  42b51d:	push   esi
  42b51e:	je     0x42b53a
  42b520:	add    cl,BYTE PTR [ebp-0x640de5bc]
  42b526:	mov    ebp,0x1a1a7456
  42b52b:	push   esi
  42b52c:	je     0x42b548
  42b52e:	repnz out 0xab,eax
  42b531:	rcl    BYTE PTR [esi+0x56],1
  42b534:	rol    BYTE PTR [edx+ebx*1+0x50],cl
  42b538:	ror    BYTE PTR [ecx-0x64],cl
  42b53b:	int    0xb
  42b53d:	(bad)  
  42b53e:	sbb    BYTE PTR [esi+0x74],ah
  42b541:	xchg   dl,dl
  42b543:	inc    esp
  42b544:	sbb    bl,BYTE PTR [edx+edx*8]
  42b547:	and    DWORD PTR [edx],ebx
  42b549:	fistp  WORD PTR [ebp+ecx*8-0x506939f5]
  42b550:	inc    esp
  42b551:	sbb    ah,BYTE PTR [eax+0x6b]
  42b554:	mov    bl,0x9d
  42b556:	mov    ds:0x1ef2a9d2,eax
  42b55b:	stc    
  42b55c:	into   
  42b55d:	jle    0x42b563
  42b55f:	and    BYTE PTR [ebp-0x562def63],dl
  42b565:	repnz push ds
  42b567:	stc    
  42b568:	xchg   ebp,eax
  42b569:	jle    0x42b56f
  42b56b:	and    cl,dh
  42b56d:	popf   
  42b56e:	dec    eax
  42b56f:	shr    BYTE PTR [ecx-0xe06e10e],cl
  42b575:	jle    0x42b511
  42b577:	and    BYTE PTR [esi],dh
  42b579:	push   esi
  42b57a:	jle    0x42b5dc
  42b57c:	push   esi
  42b57d:	jle    0x42b59b
  42b57f:	mov    ebp,0x56507e56
  42b584:	jle    0x42b588
  42b586:	push   esi
  42b587:	jle    0x42b5e8
  42b589:	out    0x7a,eax
  42b58b:	stos   DWORD PTR es:[edi],eax
  42b58c:	push   esi
  42b58d:	push   esi
  42b58e:	imul   ecx,DWORD PTR [ebx],0xffffffd2
  42b591:	or     edi,edi
  42b593:	add    eax,0x1451d209
  42b598:	jno    0x42b5fa
  42b59a:	in     eax,0x75
  42b59c:	rcr    bl,cl
  42b59e:	push   ds
  42b59f:	fild   DWORD PTR [edx]
  42b5a1:	int    0xa9
  42b5a3:	stc    
  42b5a4:	push   esi
  42b5a5:	push   esi
  42b5a6:	push   esi
  42b5a7:	push   esi
  42b5a8:	int    0xa9
  42b5aa:	leave  
  42b5ab:	call   0xd2990c06
  42b5b0:	test   eax,0x7f4846f9
  42b5b5:	in     eax,0xe5
  42b5b7:	ror    DWORD PTR [ecx+0x7f],cl
  42b5ba:	in     eax,0xe5
  42b5bc:	imul   ebp,DWORD PTR [ecx+0x2a9d2e8],0x6b
  42b5c3:	test   eax,0x56562002
  42b5c8:	jle    0x42b5cc
  42b5ca:	lea    ebp,[ecx+0x5f7e56e8]
  42b5d0:	fwait
  42b5d1:	push   esi
  42b5d2:	jle    0x42b5d6
  42b5d4:	push   esi
  42b5d5:	jle    0x42b5a0
  42b5d7:	push   esi
  42b5d8:	jle    0x42b5d3
  42b5da:	out    0x93,eax
  42b5dc:	stos   DWORD PTR es:[edi],eax
  42b5dd:	push   esi
  42b5de:	push   esi
  42b5df:	imul   ebp,DWORD PTR [ecx-0x17562d18],0x6d
  42b5e6:	jno    0x42b647
  42b5e8:	in     eax,0xe5
  42b5ea:	in     eax,0xe5
  42b5ec:	in     eax,0xe5
  42b5ee:	in     eax,0xe5
  42b5f0:	in     eax,0xe5
  42b5f2:	in     eax,0xe5
  42b5f4:	in     eax,0xe5
  42b5f6:	in     eax,0xe5
  42b5f8:	in     eax,0xe5
  42b5fa:	in     eax,0xe5
  42b5fc:	in     eax,0xe5
  42b5fe:	in     eax,0xe5
	...
  42b608:	add    al,0x0
  42b60a:	add    BYTE PTR [eax],al
  42b60c:	sub    eax,0xb0000100
  42b611:	pop    ss
  42b612:	add    BYTE PTR [eax-0x7ffffe80],al
  42b618:	aam    0x17
  42b61a:	add    BYTE PTR [eax-0x7ffffe60],al
  42b620:	add    al,0x18
  42b622:	add    BYTE PTR [eax-0x7ffffe38],al
  42b628:	cmp    BYTE PTR [eax],bl
  42b62a:	add    BYTE PTR [eax-0x7ffffe20],al
  42b630:	jb     0x42b64a
  42b632:	add    BYTE PTR [eax-0x7ffffe00],al
  42b638:	mov    BYTE PTR [eax],bl
  42b63a:	add    BYTE PTR [eax-0x7ffffde8],al
  42b640:	rcr    BYTE PTR [eax],1
  42b642:	add    BYTE PTR [eax-0x7ffffdb0],al
  42b648:	add    bl,BYTE PTR [ecx]
  42b64a:	add    BYTE PTR [eax-0x7ffffd90],al
  42b650:	push   esi
  42b651:	sbb    DWORD PTR [eax],eax
  42b653:	and    BYTE PTR [eax-0x6f7ffffe],0x19
  42b65a:	add    BYTE PTR [eax-0x7ffffd48],al
  42b660:	mov    al,ds:0xd8800019
  42b665:	add    al,BYTE PTR [eax]
  42b667:	and    dh,0x19
  42b66a:	add    BYTE PTR [eax-0x7ffffcf8],al
  42b670:	adc    BYTE PTR [edx],bl
  42b672:	add    BYTE PTR [eax-0x7ffffcd8],al
  42b678:	cmp    bl,BYTE PTR [edx]
  42b67a:	add    BYTE PTR [eax-0x7ffffcb0],al
  42b680:	data16 sbb al,BYTE PTR [eax]
  42b683:	cmp    BYTE PTR [eax+0x3],0x0
  42b687:	and    dl,0x1a
  42b68a:	add    BYTE PTR [eax-0x7ffffc58],al
  42b690:	(bad)  
  42b691:	sbb    al,BYTE PTR [eax]
  42b693:	add    al,0x3
  42b696:	add    BYTE PTR [eax-0x7fffe4ac],al
  42b69c:	loopne 0x42b6a1
  42b69e:	add    BYTE PTR [eax-0x7fffe456],al
  42b6a4:	or     BYTE PTR [eax+eax*1],al
  42b6a7:	and    al,0x1b
  42b6aa:	add    BYTE PTR [eax-0x7ffffbe0],al
  42b6b0:	jle    0x42b6ce
  42b6b2:	add    BYTE PTR [eax-0x7ffffb80],al
  42b6b8:	rcr    BYTE PTR [eax+eax*1],1
  42b6bb:	xor    BYTE PTR [eax-0x197ffffc],0x1c
  42b6c2:	add    BYTE PTR [eax-0x7ffffb38],al
  42b6c8:	inc    esp
  42b6c9:	sbb    eax,0x4f08000
  42b6ce:	add    BYTE PTR [eax-0x7fffe294],al
  42b6d4:	or     BYTE PTR ds:0x1d928000,al
  42b6da:	add    BYTE PTR [eax-0x7ffffae0],al
  42b6e0:	mov    al,0x1d
  42b6e2:	add    BYTE PTR [eax-0x7ffffac0],al
  42b6e8:	ret    0x1d
  42b6eb:	sub    BYTE PTR [eax+0x5],0x0
  42b6ef:	adc    dh,0x1d
  42b6f2:	add    BYTE PTR [eax-0x7ffffa80],al
  42b6f8:	add    al,0x1e
  42b6fa:	add    BYTE PTR [eax-0x7ffffa60],al
  42b700:	push   ss
  42b701:	push   ds
  42b702:	add    BYTE PTR [eax-0x7ffffa40],al
  42b708:	cs push ds
  42b70a:	add    BYTE PTR [eax-0x7ffffa28],al
  42b710:	pop    edx
  42b711:	push   ds
  42b712:	add    BYTE PTR [eax-0x7ffffa10],al
  42b718:	ins    BYTE PTR es:[edi],dx
  42b719:	push   ds
  42b71a:	add    BYTE PTR [eax-0x7ffff9f8],al
  42b720:	xchg   esi,eax
  42b721:	push   ds
  42b722:	add    BYTE PTR [eax-0x7ffff9e0],al
  42b728:	rcr    BYTE PTR [esi],1
  42b72a:	add    BYTE PTR [eax-0x7ffff9c8],al
  42b730:	add    BYTE PTR [edi],bl
  42b732:	add    BYTE PTR [eax-0x7ffff9a0],al
  42b738:	cs pop ds
  42b73a:	add    BYTE PTR [eax-0x7ffff980],al
  42b740:	dec    edx
  42b741:	pop    ds
  42b742:	add    BYTE PTR [eax-0x7ffff968],al
  42b748:	popw   ds
  42b74a:	add    BYTE PTR [eax-0x7ffff950],al
  42b750:	retf   0x1f
  42b753:	sub    al,0x6
  42b756:	add    BYTE PTR [eax-0x7fffe01c],al
  42b75c:	add    BYTE PTR [edi],al
  42b75e:	add    BYTE PTR [eax-0x7fffe008],al
  42b764:	and    BYTE PTR [edi],al
  42b766:	add    BYTE PTR [eax-0x7fffdfee],al
  42b76c:	inc    eax
  42b76d:	pop    es
  42b76e:	add    BYTE PTR [eax-0x7fffdfaa],al
  42b774:	pusha  
  42b775:	pop    es
  42b776:	add    BYTE PTR [eax+0x3],al
  42b77c:	js     0x42b785
  42b77e:	add    BYTE PTR [eax+0x0],al
  42b784:	add    BYTE PTR [eax],al
  42b786:	add    BYTE PTR [eax],al
  42b788:	add    al,0x0
  42b78a:	add    BYTE PTR [eax],al
  42b78c:	add    DWORD PTR [eax],eax
  42b78e:	add    DWORD PTR [eax],eax
  42b790:	rcl    BYTE PTR [edi],0x0
  42b793:	sbb    BYTE PTR [eax+0x74800007],0x58
  42b79a:	add    BYTE PTR [eax],al
  42b79c:	mov    al,0x7
  42b79e:	add    BYTE PTR [eax+0x0],al
  42b7a4:	add    BYTE PTR [eax],al
  42b7a6:	add    BYTE PTR [eax],al
  42b7a8:	add    al,0x0
  42b7aa:	add    BYTE PTR [eax],al
  42b7ac:	add    DWORD PTR [eax],eax
  42b7ae:	add    al,BYTE PTR [eax]
  42b7b0:	in     al,dx
  42b7b1:	pop    ss
  42b7b2:	add    BYTE PTR [eax-0x7ffff838],al
  42b7b8:	pop    esi
  42b7b9:	add    BYTE PTR cs:[eax],al
  42b7bc:	loopne 0x42b7c5
  42b7be:	add    BYTE PTR [eax+0x6ce9],al
  42b7c4:	clc    
  42b7c5:	pop    es
  42b7c6:	add    BYTE PTR [eax+0x0],al
  42b7cc:	add    BYTE PTR [eax],al
  42b7ce:	add    BYTE PTR [eax],al
  42b7d0:	add    al,0x0
  42b7d2:	add    BYTE PTR [eax],al
  42b7d4:	add    DWORD PTR [eax],eax
  42b7d6:	add    BYTE PTR [eax],al
  42b7d8:	sbb    bl,BYTE PTR [eax]
  42b7da:	add    BYTE PTR [eax-0x7ffff7f0],al
	...
  42b7e8:	add    al,0x0
  42b7ea:	add    BYTE PTR [eax],al
  42b7ec:	add    al,BYTE PTR [eax]
  42b7ee:	add    BYTE PTR [eax],al
  42b7f0:	dec    esi
  42b7f1:	sbb    BYTE PTR [eax],al
  42b7f3:	sub    BYTE PTR [eax],0x8
  42b7f6:	add    BYTE PTR [eax-0x7fffe79e],al
  42b7fc:	inc    eax
  42b7fd:	or     BYTE PTR [eax],al
  42b7ff:	add    BYTE PTR [eax],0x0
  42b802:	add    BYTE PTR [eax],al
  42b804:	add    BYTE PTR [eax],al
  42b806:	add    BYTE PTR [eax],al
  42b808:	add    al,0x0
  42b80a:	add    BYTE PTR [eax],al
  42b80c:	add    BYTE PTR [eax],al
  42b80e:	add    DWORD PTR [eax],eax
  42b810:	inc    eax
  42b811:	pop    ebx
  42b812:	add    BYTE PTR [eax],al
  42b814:	pop    eax
  42b815:	or     BYTE PTR [eax],al
  42b817:	add    BYTE PTR [eax],0x0
  42b81a:	add    BYTE PTR [eax],al
  42b81c:	add    BYTE PTR [eax],al
  42b81e:	add    BYTE PTR [eax],al
  42b820:	add    al,0x0
  42b822:	add    BYTE PTR [eax],al
  42b824:	add    al,BYTE PTR [eax]
  42b826:	add    eax,DWORD PTR [eax]
  42b828:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42b829:	sbb    BYTE PTR [eax],al
  42b82b:	xor    BYTE PTR [eax+0x8],0x0
  42b82f:	xor    BYTE PTR [esi-0x777fffe8],0x8
  42b836:	add    BYTE PTR [eax+0x123a],al
  42b83c:	mov    al,ds:0x4b800008
  42b841:	daa    
  42b842:	add    BYTE PTR [eax],al
  42b844:	mov    eax,0xd9800008
  42b849:	sub    BYTE PTR [eax],al
  42b84b:	add    al,dl
  42b84d:	or     BYTE PTR [eax],al
  42b84f:	add    BYTE PTR [eax],0x0
  42b852:	add    BYTE PTR [eax],al
  42b854:	add    BYTE PTR [eax],al
  42b856:	add    BYTE PTR [eax],al
  42b858:	add    al,0x0
  42b85a:	add    BYTE PTR [eax],al
  42b85c:	add    DWORD PTR [eax],eax
  42b85e:	add    DWORD PTR [eax],eax
  42b860:	in     al,0x18
  42b862:	add    BYTE PTR [eax-0x7ffff718],al
  42b868:	jp     0x42b89b
  42b86a:	add    BYTE PTR [eax],al
  42b86c:	add    BYTE PTR [ecx],cl
  42b86e:	add    BYTE PTR [eax+0x0],al
  42b874:	add    BYTE PTR [eax],al
  42b876:	add    BYTE PTR [eax],al
  42b878:	add    al,0x0
  42b87a:	add    BYTE PTR [eax],al
  42b87c:	add    eax,DWORD PTR [eax]
  42b87e:	add    DWORD PTR [eax],eax
  42b880:	adc    bl,BYTE PTR [ecx]
  42b882:	add    BYTE PTR [eax-0x7ffff6e8],al
  42b888:	sub    al,0x19
  42b88a:	add    BYTE PTR [eax-0x7ffff6d0],al
  42b890:	inc    eax
  42b891:	sbb    DWORD PTR [eax],eax
  42b893:	or     BYTE PTR [eax+0x9],0x0
  42b897:	cmp    BYTE PTR [ecx],0x46
  42b89a:	add    BYTE PTR [eax],al
  42b89c:	pusha  
  42b89d:	or     DWORD PTR [eax],eax
  42b89f:	add    BYTE PTR [eax],0x0
  42b8a2:	add    BYTE PTR [eax],al
  42b8a4:	add    BYTE PTR [eax],al
  42b8a6:	add    BYTE PTR [eax],al
  42b8a8:	add    al,0x0
  42b8aa:	add    BYTE PTR [eax],al
  42b8ac:	add    DWORD PTR [eax],eax
  42b8ae:	add    BYTE PTR [eax],al
  42b8b0:	jb     0x42b8cb
  42b8b2:	add    BYTE PTR [eax-0x7ffff688],al
	...
  42b8c0:	add    al,0x0
  42b8c2:	add    BYTE PTR [eax],al
  42b8c4:	add    BYTE PTR [eax],al
  42b8c6:	add    al,BYTE PTR [eax]
  42b8c8:	sub    eax,DWORD PTR [edi+0x0]
  42b8cb:	add    BYTE PTR [eax-0x747ffff7],dl
  42b8d1:	jle    0x42b8d3
  42b8d3:	add    BYTE PTR [eax+0x800009],ch
  42b8d9:	add    BYTE PTR [eax],al
  42b8db:	add    BYTE PTR [eax],al
  42b8dd:	add    BYTE PTR [eax],al
  42b8df:	add    BYTE PTR [eax+eax*1],al
  42b8e2:	add    BYTE PTR [eax],al
  42b8e4:	add    al,BYTE PTR [eax]
  42b8e6:	add    al,BYTE PTR [eax]
  42b8e8:	mov    esi,0xc0800019
  42b8ed:	or     DWORD PTR [eax],eax
  42b8ef:	or     dh,0x19
  42b8f2:	add    BYTE PTR [eax-0x7ffff628],al
  42b8f8:	push   ss
  42b8f9:	push   cs
  42b8fa:	add    BYTE PTR [eax],al
  42b8fc:	lock or DWORD PTR [eax],eax
  42b8ff:	add    BYTE PTR [ecx+0x65],0x0
  42b903:	add    BYTE PTR [eax],cl
  42b905:	or     al,BYTE PTR [eax]
  42b907:	add    BYTE PTR [eax],0x0
  42b90a:	add    BYTE PTR [eax],al
  42b90c:	add    BYTE PTR [eax],al
  42b90e:	add    BYTE PTR [eax],al
  42b910:	add    al,0x0
  42b912:	add    BYTE PTR [eax],al
  42b914:	add    DWORD PTR [eax],eax
  42b916:	add    DWORD PTR [eax],eax
  42b918:	add    BYTE PTR [edx],bl
  42b91a:	add    BYTE PTR [eax-0x7ffff5e0],al
  42b920:	fld    TBYTE PTR [esi+0x0]
  42b923:	add    BYTE PTR [eax],bh
  42b925:	or     al,BYTE PTR [eax]
  42b927:	add    BYTE PTR [eax],0x0
  42b92a:	add    BYTE PTR [eax],al
  42b92c:	add    BYTE PTR [eax],al
  42b92e:	add    BYTE PTR [eax],al
  42b930:	add    al,0x0
  42b932:	add    BYTE PTR [eax],al
  42b934:	add    DWORD PTR [eax],eax
  42b936:	add    al,BYTE PTR [eax]
  42b938:	and    al,0x1a
  42b93a:	add    BYTE PTR [eax-0x7ffff5b0],al
  42b940:	pushf  
  42b941:	pop    es
  42b942:	add    BYTE PTR [eax],al
  42b944:	push   0x7b80000a
  42b949:	xor    eax,DWORD PTR [eax]
  42b94b:	add    BYTE PTR [eax+0x80000a],al
  42b951:	add    BYTE PTR [eax],al
  42b953:	add    BYTE PTR [eax],al
  42b955:	add    BYTE PTR [eax],al
  42b957:	add    BYTE PTR [eax+eax*1],al
  42b95a:	add    BYTE PTR [eax],al
  42b95c:	add    DWORD PTR [eax],eax
  42b95e:	add    al,BYTE PTR [eax]
  42b960:	push   edx
  42b961:	sbb    al,BYTE PTR [eax]
  42b963:	sbb    BYTE PTR [eax-0x717ffff6],0x17
  42b96a:	add    BYTE PTR [eax],al
  42b96c:	mov    al,0xa
  42b96e:	add    BYTE PTR [eax+0x3a0a],al
  42b974:	enter  0xa,0x80
	...
  42b980:	add    al,0x0
  42b982:	add    BYTE PTR [eax],al
  42b984:	add    al,0x0
  42b986:	add    BYTE PTR [eax],al
  42b988:	sbb    BYTE PTR [edx],0x0
  42b98b:	and    al,0xa
  42b98e:	add    BYTE PTR [eax-0x7fffe566],al
  42b994:	clc    
  42b995:	or     al,BYTE PTR [eax]
  42b997:	cmp    BYTE PTR [eax+0x1080001a],0xb
  42b99e:	add    BYTE PTR [eax-0x7fffe536],al
  42b9a4:	sub    BYTE PTR [ebx],cl
  42b9a6:	add    BYTE PTR [eax+0x0],al
  42b9ac:	add    BYTE PTR [eax],al
  42b9ae:	add    BYTE PTR [eax],al
  42b9b0:	add    al,0x0
  42b9b2:	add    BYTE PTR [eax],al
  42b9b4:	add    BYTE PTR [eax],al
  42b9b6:	add    DWORD PTR [eax],eax
  42b9b8:	add    DWORD PTR [ebp+0x0],ebp
  42b9bb:	add    BYTE PTR [eax+0xb],al
  42b9be:	add    BYTE PTR [eax+0x0],al
  42b9c4:	add    BYTE PTR [eax],al
  42b9c6:	add    BYTE PTR [eax],al
  42b9c8:	add    al,0x0
  42b9ca:	add    BYTE PTR [eax],al
  42b9cc:	add    al,BYTE PTR [eax]
  42b9ce:	add    BYTE PTR [eax],al
  42b9d0:	sbb    al,0x1b
  42b9d2:	add    BYTE PTR [eax-0x7ffff4a8],al
  42b9d8:	cmp    bl,BYTE PTR [ebx]
  42b9da:	add    BYTE PTR [eax-0x7ffff490],al
	...
  42b9e8:	add    al,0x0
  42b9ea:	add    BYTE PTR [eax],al
  42b9ec:	add    eax,DWORD PTR [eax]
  42b9ee:	add    BYTE PTR [eax],al
  42b9f0:	sbb    eax,DWORD PTR fs:[eax]
  42b9f3:	or     BYTE PTR [eax+0x7a80000b],0x1b
  42b9fa:	add    BYTE PTR [eax-0x7ffff460],al
  42ba00:	xchg   edx,eax
  42ba01:	sbb    eax,DWORD PTR [eax]
  42ba03:	cmp    BYTE PTR [eax+0x80000b],0x0
  42ba0a:	add    BYTE PTR [eax],al
  42ba0c:	add    BYTE PTR [eax],al
  42ba0e:	add    BYTE PTR [eax],al
  42ba10:	add    al,0x0
  42ba12:	add    BYTE PTR [eax],al
  42ba14:	add    DWORD PTR [eax],eax
  42ba16:	add    BYTE PTR [eax],al
  42ba18:	ret    0x1b
  42ba1b:	adc    al,0xb
  42ba1e:	add    BYTE PTR [eax+0x0],al
  42ba24:	add    BYTE PTR [eax],al
  42ba26:	add    BYTE PTR [eax],al
  42ba28:	add    al,0x0
  42ba2a:	add    BYTE PTR [eax],al
  42ba2c:	push   es
  42ba2d:	add    BYTE PTR [eax+eax*1],al
  42ba30:	lock sbb eax,DWORD PTR [eax]
  42ba33:	sub    al,0xb
  42ba36:	add    BYTE PTR [eax-0x7fffe3fa],al
  42ba3c:	add    BYTE PTR [eax+eax*1],cl
  42ba3f:	sbb    BYTE PTR [esi],0x1c
  42ba42:	add    BYTE PTR [eax-0x7ffff3e8],al
  42ba48:	xor    bl,BYTE PTR [eax+eax*1]
  42ba4b:	xor    BYTE PTR [eax],0xc
  42ba4e:	add    BYTE PTR [eax-0x7fffe3b4],al
  42ba54:	dec    eax
  42ba55:	or     al,0x0
  42ba57:	and    BYTE PTR [esp+ebx*1+0x0],0x80
  42ba5c:	pusha  
  42ba5d:	or     al,0x0
  42ba5f:	adc    BYTE PTR ds:0x7800002d,0xc
  42ba66:	add    BYTE PTR [eax+0x49e6],al
  42ba6c:	nop
  42ba6d:	or     al,0x0
  42ba6f:	and    BYTE PTR [ebx+0x66],0x0
  42ba73:	add    BYTE PTR [eax-0x97ffff4],ch
  42ba79:	ins    DWORD PTR es:[edi],dx
  42ba7a:	add    BYTE PTR [eax],al
  42ba7c:	ror    BYTE PTR [eax+eax*1],0x80
	...
  42ba88:	add    al,0x0
  42ba8a:	add    BYTE PTR [eax],al
  42ba8c:	add    al,BYTE PTR [eax]
  42ba8e:	add    al,BYTE PTR [eax]
  42ba90:	pushf  
  42ba91:	sbb    al,0x0
  42ba93:	sbb    al,0xc
  42ba96:	add    BYTE PTR [eax-0x7fffe346],al
  42ba9c:	lock or al,0x0
  42ba9f:	xor    BYTE PTR [ebx+0x8000040],0xd
  42baa6:	add    BYTE PTR [eax+0x69ab],al
  42baac:	and    BYTE PTR ds:0x8000,cl
  42bab2:	add    BYTE PTR [eax],al
  42bab4:	add    BYTE PTR [eax],al
  42bab6:	add    BYTE PTR [eax],al
  42bab8:	add    al,0x0
  42baba:	add    BYTE PTR [eax],al
  42babc:	add    BYTE PTR [eax],al
  42babe:	add    DWORD PTR [eax],eax
  42bac0:	sub    al,0x2b
  42bac2:	add    BYTE PTR [eax],al
  42bac4:	cmp    BYTE PTR ds:0x8000,cl
  42baca:	add    BYTE PTR [eax],al
  42bacc:	add    BYTE PTR [eax],al
  42bace:	add    BYTE PTR [eax],al
  42bad0:	add    al,0x0
  42bad2:	add    BYTE PTR [eax],al
  42bad4:	add    eax,DWORD PTR [eax]
  42bad6:	add    BYTE PTR [eax],al
  42bad8:	neg    BYTE PTR [eax+eax*1]
  42badb:	adc    BYTE PTR [eax+0xd],0x0
  42badf:	adc    BYTE PTR [edx],0x1d
  42bae2:	add    BYTE PTR [eax-0x7ffff298],al
  42bae8:	sub    al,0x1d
  42baea:	add    BYTE PTR [eax-0x7ffff280],al
	...
  42baf8:	add    al,0x0
  42bafa:	add    BYTE PTR [eax],al
  42bafc:	add    DWORD PTR [eax],eax
  42bafe:	add    BYTE PTR [eax],al
  42bb00:	push   esi
  42bb01:	sbb    eax,0xd988000
  42bb06:	add    BYTE PTR [eax+0x0],al
  42bb0c:	add    BYTE PTR [eax],al
  42bb0e:	add    BYTE PTR [eax],al
  42bb10:	add    al,0x0
  42bb12:	add    BYTE PTR [eax],al
  42bb14:	add    DWORD PTR [eax],eax
  42bb16:	add    BYTE PTR [eax],al
  42bb18:	jle    0x42bb37
  42bb1a:	add    BYTE PTR [eax-0x7ffff250],al
	...
  42bb28:	add    al,0x0
  42bb2a:	add    BYTE PTR [eax],al
  42bb2c:	add    BYTE PTR [eax],al
  42bb2e:	add    al,BYTE PTR [eax]
  42bb30:	sti    
  42bb31:	adc    BYTE PTR [eax],al
  42bb33:	add    al,cl
  42bb35:	or     eax,0x428d8000
  42bb3a:	add    BYTE PTR [eax],al
  42bb3c:	loopne 0x42bb4b
  42bb3e:	add    BYTE PTR [eax+0x0],al
  42bb44:	add    BYTE PTR [eax],al
  42bb46:	add    BYTE PTR [eax],al
  42bb48:	add    al,0x0
  42bb4a:	add    BYTE PTR [eax],al
  42bb4c:	add    BYTE PTR [eax],al
  42bb4e:	add    eax,DWORD PTR [eax]
  42bb50:	iret   
  42bb51:	push   eax
  42bb52:	add    BYTE PTR [eax],al
  42bb54:	clc    
  42bb55:	or     eax,0x59588000
  42bb5a:	add    BYTE PTR [eax],al
  42bb5c:	adc    BYTE PTR [esi],cl
  42bb5e:	add    BYTE PTR [eax+0x79f9],al
  42bb64:	sub    BYTE PTR [esi],cl
  42bb66:	add    BYTE PTR [eax+0x0],al
  42bb6c:	add    BYTE PTR [eax],al
  42bb6e:	add    BYTE PTR [eax],al
  42bb70:	add    al,0x0
  42bb72:	add    BYTE PTR [eax],al
  42bb74:	add    BYTE PTR [eax],al
  42bb76:	add    DWORD PTR [eax],eax
  42bb78:	call   0xe:0x40000070
  42bb7f:	add    BYTE PTR [eax],0x0
  42bb82:	add    BYTE PTR [eax],al
  42bb84:	add    BYTE PTR [eax],al
  42bb86:	add    BYTE PTR [eax],al
  42bb88:	add    al,0x0
  42bb8a:	add    BYTE PTR [eax],al
  42bb8c:	add    DWORD PTR [eax],eax
  42bb8e:	add    DWORD PTR [eax],eax
  42bb90:	call   0x58c2bbb2
  42bb95:	push   cs
  42bb96:	add    BYTE PTR [eax+0x30a5],al
  42bb9c:	jo     0x42bbac
  42bb9e:	add    BYTE PTR [eax+0x0],al
  42bba4:	add    BYTE PTR [eax],al
  42bba6:	add    BYTE PTR [eax],al
  42bba8:	add    al,0x0
  42bbaa:	add    BYTE PTR [eax],al
  42bbac:	add    BYTE PTR [eax],al
  42bbae:	add    al,BYTE PTR [eax]
  42bbb0:	dec    DWORD PTR [eax]
  42bbb2:	add    BYTE PTR [eax],al
  42bbb4:	mov    BYTE PTR [esi],cl
  42bbb6:	add    BYTE PTR [eax+0x4471],al
  42bbbc:	mov    al,ds:0x80000e
  42bbc1:	add    BYTE PTR [eax],al
  42bbc3:	add    BYTE PTR [eax],al
  42bbc5:	add    BYTE PTR [eax],al
  42bbc7:	add    BYTE PTR [eax+eax*1],al
  42bbca:	add    BYTE PTR [eax],al
  42bbcc:	add    BYTE PTR [eax],al
  42bbce:	add    DWORD PTR [eax],eax
  42bbd0:	xchg   edx,eax
  42bbd1:	das    
  42bbd2:	add    BYTE PTR [eax],al
  42bbd4:	mov    eax,0x80000e
  42bbd9:	add    BYTE PTR [eax],al
  42bbdb:	add    BYTE PTR [eax],al
  42bbdd:	add    BYTE PTR [eax],al
  42bbdf:	add    BYTE PTR [eax+eax*1],al
  42bbe2:	add    BYTE PTR [eax],al
  42bbe4:	add    DWORD PTR [eax],eax
  42bbe6:	add    BYTE PTR [eax],al
  42bbe8:	inc    edx
  42bbe9:	push   ds
  42bbea:	add    BYTE PTR [eax-0x7ffff130],al
	...
  42bbf8:	add    al,0x0
  42bbfa:	add    BYTE PTR [eax],al
  42bbfc:	add    BYTE PTR [eax],al
  42bbfe:	add    DWORD PTR [eax],eax
  42bc00:	jae    0x42bc54
  42bc02:	add    BYTE PTR [eax],al
  42bc04:	call   0xc2bc17
  42bc09:	add    BYTE PTR [eax],al
  42bc0b:	add    BYTE PTR [eax],al
  42bc0d:	add    BYTE PTR [eax],al
  42bc0f:	add    BYTE PTR [eax+eax*1],al
  42bc12:	add    BYTE PTR [eax],al
  42bc14:	add    DWORD PTR [eax],eax
  42bc16:	add    BYTE PTR [eax],al
  42bc18:	test   BYTE PTR [esi],bl
  42bc1a:	add    BYTE PTR [eax-0x7ffff100],al
	...
  42bc28:	add    al,0x0
  42bc2a:	add    BYTE PTR [eax],al
  42bc2c:	add    DWORD PTR [eax],eax
  42bc2e:	add    BYTE PTR [eax],al
  42bc30:	mov    ah,0x1e
  42bc32:	add    BYTE PTR [eax-0x7ffff0e8],al
	...
  42bc40:	add    al,0x0
  42bc42:	add    BYTE PTR [eax],al
  42bc44:	add    DWORD PTR [eax],eax
  42bc46:	add    al,BYTE PTR [eax]
  42bc48:	loop   0x42bc68
  42bc4a:	add    BYTE PTR [eax-0x7ffff0d0],al
  42bc50:	add    DWORD PTR ds:0xf480000,edx
  42bc56:	add    BYTE PTR [eax+0x3814],al
  42bc5c:	pusha  
  42bc5d:	sldt   WORD PTR [eax+0x0]
  42bc64:	add    BYTE PTR [eax],al
  42bc66:	add    BYTE PTR [eax],al
  42bc68:	add    al,0x0
  42bc6a:	add    BYTE PTR [eax],al
  42bc6c:	add    DWORD PTR [eax],eax
  42bc6e:	add    DWORD PTR [eax],eax
  42bc70:	sbb    BYTE PTR [edi],bl
  42bc72:	add    BYTE PTR [eax-0x7ffff088],al
  42bc78:	test   eax,0x9000002e
  42bc7d:	sldt   WORD PTR [eax+0x0]
  42bc84:	add    BYTE PTR [eax],al
  42bc86:	add    BYTE PTR [eax],al
  42bc88:	add    al,0x0
  42bc8a:	add    BYTE PTR [eax],al
  42bc8c:	add    BYTE PTR [eax],al
  42bc8e:	add    DWORD PTR [eax],eax
  42bc90:	adc    BYTE PTR [esi+0x0],bl
  42bc93:	add    BYTE PTR [eax+0x80000f],ch
  42bc99:	add    BYTE PTR [eax],al
  42bc9b:	add    BYTE PTR [eax],al
  42bc9d:	add    BYTE PTR [eax],al
  42bc9f:	add    BYTE PTR [eax+eax*1],al
  42bca2:	add    BYTE PTR [eax],al
  42bca4:	add    BYTE PTR [eax],al
  42bca6:	add    DWORD PTR [eax],eax
  42bca8:	and    eax,0xc0000054
  42bcad:	sldt   WORD PTR [eax+0x0]
  42bcb4:	add    BYTE PTR [eax],al
  42bcb6:	add    BYTE PTR [eax],al
  42bcb8:	add    al,0x0
  42bcba:	add    BYTE PTR [eax],al
  42bcbc:	add    eax,DWORD PTR [eax]
  42bcbe:	add    al,BYTE PTR [eax]
  42bcc0:	sbb    BYTE PTR [edi],0x0
  42bcc3:	sbb    al,0xf
  42bcc6:	add    BYTE PTR [eax-0x7fffe062],al
  42bccc:	lock sldt WORD PTR [eax-0x7fffe04e]
  42bcd4:	or     BYTE PTR [eax],dl
  42bcd6:	add    BYTE PTR [eax+0x1cff],al
  42bcdc:	and    BYTE PTR [eax],dl
  42bcde:	add    BYTE PTR [eax+0x698d],al
  42bce4:	cmp    BYTE PTR [eax],dl
  42bce6:	add    BYTE PTR [eax+0x0],al
  42bcec:	add    BYTE PTR [eax],al
  42bcee:	add    BYTE PTR [eax],al
  42bcf0:	add    al,0x0
  42bcf2:	add    BYTE PTR [eax],al
  42bcf4:	add    BYTE PTR [eax],al
  42bcf6:	add    DWORD PTR [eax],eax
  42bcf8:	inc    esp
  42bcf9:	pop    esi
  42bcfa:	add    BYTE PTR [eax],al
  42bcfc:	push   eax
  42bcfd:	adc    BYTE PTR [eax],al
  42bcff:	add    BYTE PTR [eax],0x0
  42bd02:	add    BYTE PTR [eax],al
  42bd04:	add    BYTE PTR [eax],al
  42bd06:	add    BYTE PTR [eax],al
  42bd08:	add    al,0x0
  42bd0a:	add    BYTE PTR [eax],al
  42bd0c:	add    BYTE PTR [eax],al
  42bd0e:	add    al,BYTE PTR [eax]
  42bd10:	mov    WORD PTR [ebx],es
  42bd12:	add    BYTE PTR [eax],al
  42bd14:	push   0x7b800010
  42bd19:	dec    esp
  42bd1a:	add    BYTE PTR [eax],al
  42bd1c:	adc    BYTE PTR [eax],0x0
  42bd1f:	add    BYTE PTR [eax],0x0
  42bd22:	add    BYTE PTR [eax],al
  42bd24:	add    BYTE PTR [eax],al
  42bd26:	add    BYTE PTR [eax],al
  42bd28:	add    al,0x0
  42bd2a:	add    BYTE PTR [eax],al
  42bd2c:	add    BYTE PTR [eax],al
  42bd2e:	add    al,BYTE PTR [eax]
  42bd30:	mov    DWORD PTR ds:0x10980000,ecx
  42bd36:	add    BYTE PTR [eax+0x69c2],al
  42bd3c:	mov    al,0x10
  42bd3e:	add    BYTE PTR [eax+0x0],al
  42bd44:	add    BYTE PTR [eax],al
  42bd46:	add    BYTE PTR [eax],al
  42bd48:	add    al,0x0
  42bd4a:	add    BYTE PTR [eax],al
  42bd4c:	add    al,BYTE PTR [eax]
  42bd4e:	add    BYTE PTR [eax],al
  42bd50:	and    BYTE PTR es:[eax],al
  42bd53:	or     al,0x10
  42bd56:	add    BYTE PTR [eax-0x7fffdfc0],al
  42bd5c:	loopne 0x42bd6e
  42bd5e:	add    BYTE PTR [eax+0x0],al
  42bd64:	add    BYTE PTR [eax],al
  42bd66:	add    BYTE PTR [eax],al
  42bd68:	add    al,0x0
  42bd6a:	add    BYTE PTR [eax],al
  42bd6c:	add    BYTE PTR [eax],al
  42bd6e:	add    DWORD PTR [eax],eax
  42bd70:	add    BYTE PTR [edx+0x0],bh
  42bd73:	add    al,bh
  42bd75:	adc    BYTE PTR [eax],al
  42bd77:	add    BYTE PTR [eax],0x0
  42bd7a:	add    BYTE PTR [eax],al
  42bd7c:	add    BYTE PTR [eax],al
  42bd7e:	add    BYTE PTR [eax],al
  42bd80:	add    al,0x0
  42bd82:	add    BYTE PTR [eax],al
  42bd84:	add    BYTE PTR [eax],al
  42bd86:	add    al,BYTE PTR [eax]
  42bd88:	add    DWORD PTR [eax],eax
  42bd8a:	add    BYTE PTR [eax],al
  42bd8c:	adc    BYTE PTR [ecx],dl
  42bd8e:	add    BYTE PTR [eax+0x2],al
  42bd94:	sub    BYTE PTR [ecx],dl
  42bd96:	add    BYTE PTR [eax+0x0],al
  42bd9c:	add    BYTE PTR [eax],al
  42bd9e:	add    BYTE PTR [eax],al
  42bda0:	add    al,0x0
  42bda2:	add    BYTE PTR [eax],al
  42bda4:	add    BYTE PTR [eax],al
  42bda6:	add    DWORD PTR [eax],eax
  42bda8:	or     DWORD PTR [eax+eax*1],eax
  42bdab:	add    BYTE PTR [eax+0x11],al
	...
  42bdb6:	add    BYTE PTR [eax],al
  42bdb8:	add    al,0x0
  42bdba:	add    BYTE PTR [eax],al
  42bdbc:	add    BYTE PTR [eax],al
  42bdbe:	add    DWORD PTR [eax],eax
  42bdc0:	or     DWORD PTR [eax+eax*1],eax
  42bdc3:	add    BYTE PTR [eax+0x11],dl
	...
  42bdce:	add    BYTE PTR [eax],al
  42bdd0:	add    al,0x0
  42bdd2:	add    BYTE PTR [eax],al
  42bdd4:	add    BYTE PTR [eax],al
  42bdd6:	add    DWORD PTR [eax],eax
  42bdd8:	or     DWORD PTR [eax+eax*1],eax
  42bddb:	add    BYTE PTR [eax+0x11],ah
	...
  42bde6:	add    BYTE PTR [eax],al
  42bde8:	add    al,0x0
  42bdea:	add    BYTE PTR [eax],al
  42bdec:	add    BYTE PTR [eax],al
  42bdee:	add    DWORD PTR [eax],eax
  42bdf0:	or     DWORD PTR [eax+eax*1],eax
  42bdf3:	add    BYTE PTR [eax+0x11],dh
	...
  42bdfe:	add    BYTE PTR [eax],al
  42be00:	add    al,0x0
  42be02:	add    BYTE PTR [eax],al
  42be04:	add    BYTE PTR [eax],al
  42be06:	add    DWORD PTR [eax],eax
  42be08:	or     DWORD PTR [eax+eax*1],eax
  42be0b:	add    BYTE PTR [eax+0x11],al
  42be11:	add    BYTE PTR [eax],al
  42be13:	add    BYTE PTR [eax],al
  42be15:	add    BYTE PTR [eax],al
  42be17:	add    BYTE PTR [eax+eax*1],al
  42be1a:	add    BYTE PTR [eax],al
  42be1c:	add    BYTE PTR [eax],al
  42be1e:	add    DWORD PTR [eax],eax
  42be20:	or     DWORD PTR [eax+eax*1],eax
  42be23:	add    BYTE PTR [eax+0x11],dl
  42be29:	add    BYTE PTR [eax],al
  42be2b:	add    BYTE PTR [eax],al
  42be2d:	add    BYTE PTR [eax],al
  42be2f:	add    BYTE PTR [eax+eax*1],al
  42be32:	add    BYTE PTR [eax],al
  42be34:	add    BYTE PTR [eax],al
  42be36:	add    DWORD PTR [eax],eax
  42be38:	or     DWORD PTR [eax+eax*1],eax
  42be3b:	add    BYTE PTR [eax+0x11],ah
  42be41:	add    BYTE PTR [eax],al
  42be43:	add    BYTE PTR [eax],al
  42be45:	add    BYTE PTR [eax],al
  42be47:	add    BYTE PTR [eax+eax*1],al
  42be4a:	add    BYTE PTR [eax],al
  42be4c:	add    BYTE PTR [eax],al
  42be4e:	add    DWORD PTR [eax],eax
  42be50:	or     DWORD PTR [eax+eax*1],eax
  42be53:	add    BYTE PTR [eax+0x11],dh
  42be59:	add    BYTE PTR [eax],al
  42be5b:	add    BYTE PTR [eax],al
  42be5d:	add    BYTE PTR [eax],al
  42be5f:	add    BYTE PTR [eax+eax*1],al
  42be62:	add    BYTE PTR [eax],al
  42be64:	add    BYTE PTR [eax],al
  42be66:	add    DWORD PTR [eax],eax
  42be68:	or     DWORD PTR [eax+eax*1],eax
  42be6b:	add    al,al
  42be6d:	adc    DWORD PTR [eax],eax
	...
  42be77:	add    BYTE PTR [eax+eax*1],al
  42be7a:	add    BYTE PTR [eax],al
  42be7c:	add    BYTE PTR [eax],al
  42be7e:	add    DWORD PTR [eax],eax
  42be80:	or     DWORD PTR [eax+eax*1],eax
  42be83:	add    al,dl
  42be85:	adc    DWORD PTR [eax],eax
	...
  42be8f:	add    BYTE PTR [eax+eax*1],al
  42be92:	add    BYTE PTR [eax],al
  42be94:	add    BYTE PTR [eax],al
  42be96:	add    DWORD PTR [eax],eax
  42be98:	or     DWORD PTR [eax+eax*1],eax
  42be9b:	add    al,ah
  42be9d:	adc    DWORD PTR [eax],eax
	...
  42bea7:	add    BYTE PTR [eax+eax*1],al
  42beaa:	add    BYTE PTR [eax],al
  42beac:	add    BYTE PTR [eax],al
  42beae:	add    DWORD PTR [eax],eax
  42beb0:	or     DWORD PTR [eax+eax*1],eax
  42beb3:	add    al,dh
  42beb5:	adc    DWORD PTR [eax],eax
	...
  42bebf:	add    BYTE PTR [eax+eax*1],al
  42bec2:	add    BYTE PTR [eax],al
  42bec4:	add    BYTE PTR [eax],al
  42bec6:	add    DWORD PTR [eax],eax
  42bec8:	or     DWORD PTR [eax+eax*1],eax
  42becb:	add    BYTE PTR [eax],al
  42becd:	adc    al,BYTE PTR [eax]
	...
  42bed7:	add    BYTE PTR [eax+eax*1],al
  42beda:	add    BYTE PTR [eax],al
  42bedc:	add    BYTE PTR [eax],al
  42bede:	add    DWORD PTR [eax],eax
  42bee0:	or     DWORD PTR [eax+eax*1],eax
  42bee3:	add    BYTE PTR [eax],dl
  42bee5:	adc    al,BYTE PTR [eax]
	...
  42beef:	add    BYTE PTR [eax+eax*1],al
  42bef2:	add    BYTE PTR [eax],al
  42bef4:	add    BYTE PTR [eax],al
  42bef6:	add    DWORD PTR [eax],eax
  42bef8:	or     DWORD PTR [eax+eax*1],eax
  42befb:	add    BYTE PTR [eax],ah
  42befd:	adc    al,BYTE PTR [eax]
	...
  42bf07:	add    BYTE PTR [eax+eax*1],al
  42bf0a:	add    BYTE PTR [eax],al
  42bf0c:	add    BYTE PTR [eax],al
  42bf0e:	add    DWORD PTR [eax],eax
  42bf10:	or     DWORD PTR [eax+eax*1],eax
  42bf13:	add    BYTE PTR [eax],dh
  42bf15:	adc    al,BYTE PTR [eax]
	...
  42bf1f:	add    BYTE PTR [eax+eax*1],al
  42bf22:	add    BYTE PTR [eax],al
  42bf24:	add    BYTE PTR [eax],al
  42bf26:	add    DWORD PTR [eax],eax
  42bf28:	or     DWORD PTR [eax+eax*1],eax
  42bf2b:	add    BYTE PTR [eax+0x12],al
	...
  42bf36:	add    BYTE PTR [eax],al
  42bf38:	add    al,0x0
  42bf3a:	add    BYTE PTR [eax],al
  42bf3c:	add    BYTE PTR [eax],al
  42bf3e:	add    DWORD PTR [eax],eax
  42bf40:	or     DWORD PTR [eax+eax*1],eax
  42bf43:	add    BYTE PTR [eax+0x12],dl
	...
  42bf4e:	add    BYTE PTR [eax],al
  42bf50:	add    al,0x0
  42bf52:	add    BYTE PTR [eax],al
  42bf54:	add    BYTE PTR [eax],al
  42bf56:	add    DWORD PTR [eax],eax
  42bf58:	or     DWORD PTR [eax+eax*1],eax
  42bf5b:	add    BYTE PTR [eax+0x12],ah
	...
  42bf66:	add    BYTE PTR [eax],al
  42bf68:	add    al,0x0
  42bf6a:	add    BYTE PTR [eax],al
  42bf6c:	add    BYTE PTR [eax],al
  42bf6e:	add    DWORD PTR [eax],eax
  42bf70:	or     DWORD PTR [eax+eax*1],eax
  42bf73:	add    BYTE PTR [eax+0x12],dh
	...
  42bf7e:	add    BYTE PTR [eax],al
  42bf80:	add    al,0x0
  42bf82:	add    BYTE PTR [eax],al
  42bf84:	add    BYTE PTR [eax],al
  42bf86:	add    DWORD PTR [eax],eax
  42bf88:	or     DWORD PTR [eax+eax*1],eax
  42bf8b:	add    BYTE PTR [eax+0x12],al
  42bf91:	add    BYTE PTR [eax],al
  42bf93:	add    BYTE PTR [eax],al
  42bf95:	add    BYTE PTR [eax],al
  42bf97:	add    BYTE PTR [eax+eax*1],al
  42bf9a:	add    BYTE PTR [eax],al
  42bf9c:	add    BYTE PTR [eax],al
  42bf9e:	add    DWORD PTR [eax],eax
  42bfa0:	or     DWORD PTR [eax+eax*1],eax
  42bfa3:	add    BYTE PTR [eax+0x12],dl
  42bfa9:	add    BYTE PTR [eax],al
  42bfab:	add    BYTE PTR [eax],al
  42bfad:	add    BYTE PTR [eax],al
  42bfaf:	add    BYTE PTR [eax+eax*1],al
  42bfb2:	add    BYTE PTR [eax],al
  42bfb4:	add    BYTE PTR [eax],al
  42bfb6:	add    DWORD PTR [eax],eax
  42bfb8:	or     DWORD PTR [eax+eax*1],eax
  42bfbb:	add    BYTE PTR [eax+0x12],ah
  42bfc1:	add    BYTE PTR [eax],al
  42bfc3:	add    BYTE PTR [eax],al
  42bfc5:	add    BYTE PTR [eax],al
  42bfc7:	add    BYTE PTR [eax+eax*1],al
  42bfca:	add    BYTE PTR [eax],al
  42bfcc:	add    BYTE PTR [eax],al
  42bfce:	add    DWORD PTR [eax],eax
  42bfd0:	or     DWORD PTR [eax+eax*1],eax
  42bfd3:	add    BYTE PTR [eax+0x12],dh
  42bfd9:	add    BYTE PTR [eax],al
  42bfdb:	add    BYTE PTR [eax],al
  42bfdd:	add    BYTE PTR [eax],al
  42bfdf:	add    BYTE PTR [eax+eax*1],al
  42bfe2:	add    BYTE PTR [eax],al
  42bfe4:	add    BYTE PTR [eax],al
  42bfe6:	add    DWORD PTR [eax],eax
  42bfe8:	or     DWORD PTR [eax+eax*1],eax
  42bfeb:	add    al,al
  42bfed:	adc    al,BYTE PTR [eax]
	...
  42bff7:	add    BYTE PTR [eax+eax*1],al
  42bffa:	add    BYTE PTR [eax],al
  42bffc:	add    BYTE PTR [eax],al
  42bffe:	add    DWORD PTR [eax],eax
  42c000:	or     DWORD PTR [eax+eax*1],eax
  42c003:	add    al,dl
  42c005:	adc    al,BYTE PTR [eax]
	...
  42c00f:	add    BYTE PTR [eax+eax*1],al
  42c012:	add    BYTE PTR [eax],al
  42c014:	add    BYTE PTR [eax],al
  42c016:	add    DWORD PTR [eax],eax
  42c018:	or     DWORD PTR [eax+eax*1],eax
  42c01b:	add    al,ah
  42c01d:	adc    al,BYTE PTR [eax]
	...
  42c027:	add    BYTE PTR [eax+eax*1],al
  42c02a:	add    BYTE PTR [eax],al
  42c02c:	add    BYTE PTR [eax],al
  42c02e:	add    DWORD PTR [eax],eax
  42c030:	or     DWORD PTR [eax+eax*1],eax
  42c033:	add    al,dh
  42c035:	adc    al,BYTE PTR [eax]
	...
  42c03f:	add    BYTE PTR [eax+eax*1],al
  42c042:	add    BYTE PTR [eax],al
  42c044:	add    BYTE PTR [eax],al
  42c046:	add    DWORD PTR [eax],eax
  42c048:	or     DWORD PTR [eax+eax*1],eax
  42c04b:	add    BYTE PTR [eax],al
  42c04d:	adc    eax,DWORD PTR [eax]
	...
  42c057:	add    BYTE PTR [eax+eax*1],al
  42c05a:	add    BYTE PTR [eax],al
  42c05c:	add    BYTE PTR [eax],al
  42c05e:	add    DWORD PTR [eax],eax
  42c060:	or     DWORD PTR [eax+eax*1],eax
  42c063:	add    BYTE PTR [eax],dl
  42c065:	adc    eax,DWORD PTR [eax]
	...
  42c06f:	add    BYTE PTR [eax+eax*1],al
  42c072:	add    BYTE PTR [eax],al
  42c074:	add    BYTE PTR [eax],al
  42c076:	add    DWORD PTR [eax],eax
  42c078:	or     DWORD PTR [eax+eax*1],eax
  42c07b:	add    BYTE PTR [eax],ah
  42c07d:	adc    eax,DWORD PTR [eax]
	...
  42c087:	add    BYTE PTR [eax+eax*1],al
  42c08a:	add    BYTE PTR [eax],al
  42c08c:	add    BYTE PTR [eax],al
  42c08e:	add    DWORD PTR [eax],eax
  42c090:	or     DWORD PTR [eax+eax*1],eax
  42c093:	add    BYTE PTR [eax],dh
  42c095:	adc    eax,DWORD PTR [eax]
	...
  42c09f:	add    BYTE PTR [eax+eax*1],al
  42c0a2:	add    BYTE PTR [eax],al
  42c0a4:	add    BYTE PTR [eax],al
  42c0a6:	add    DWORD PTR [eax],eax
  42c0a8:	or     DWORD PTR [eax+eax*1],eax
  42c0ab:	add    BYTE PTR [eax+0x13],al
	...
  42c0b6:	add    BYTE PTR [eax],al
  42c0b8:	add    al,0x0
  42c0ba:	add    BYTE PTR [eax],al
  42c0bc:	add    BYTE PTR [eax],al
  42c0be:	add    DWORD PTR [eax],eax
  42c0c0:	or     DWORD PTR [eax+eax*1],eax
  42c0c3:	add    BYTE PTR [eax+0x13],dl
	...
  42c0ce:	add    BYTE PTR [eax],al
  42c0d0:	add    al,0x0
  42c0d2:	add    BYTE PTR [eax],al
  42c0d4:	add    BYTE PTR [eax],al
  42c0d6:	add    DWORD PTR [eax],eax
  42c0d8:	or     DWORD PTR [eax+eax*1],eax
  42c0db:	add    BYTE PTR [eax+0x13],ah
	...
  42c0e6:	add    BYTE PTR [eax],al
  42c0e8:	add    al,0x0
  42c0ea:	add    BYTE PTR [eax],al
  42c0ec:	add    BYTE PTR [eax],al
  42c0ee:	add    DWORD PTR [eax],eax
  42c0f0:	or     DWORD PTR [eax+eax*1],eax
  42c0f3:	add    BYTE PTR [eax+0x13],dh
	...
  42c0fe:	add    BYTE PTR [eax],al
  42c100:	add    al,0x0
  42c102:	add    BYTE PTR [eax],al
  42c104:	add    BYTE PTR [eax],al
  42c106:	add    DWORD PTR [eax],eax
  42c108:	or     DWORD PTR [eax+eax*1],eax
  42c10b:	add    BYTE PTR [eax+0x13],al
  42c111:	add    BYTE PTR [eax],al
  42c113:	add    BYTE PTR [eax],al
  42c115:	add    BYTE PTR [eax],al
  42c117:	add    BYTE PTR [eax+eax*1],al
  42c11a:	add    BYTE PTR [eax],al
  42c11c:	add    BYTE PTR [eax],al
  42c11e:	add    DWORD PTR [eax],eax
  42c120:	or     DWORD PTR [eax+eax*1],eax
  42c123:	add    BYTE PTR [eax+0x13],dl
  42c129:	add    BYTE PTR [eax],al
  42c12b:	add    BYTE PTR [eax],al
  42c12d:	add    BYTE PTR [eax],al
  42c12f:	add    BYTE PTR [eax+eax*1],al
  42c132:	add    BYTE PTR [eax],al
  42c134:	add    BYTE PTR [eax],al
  42c136:	add    DWORD PTR [eax],eax
  42c138:	or     DWORD PTR [eax+eax*1],eax
  42c13b:	add    BYTE PTR [eax+0x13],ah
  42c141:	add    BYTE PTR [eax],al
  42c143:	add    BYTE PTR [eax],al
  42c145:	add    BYTE PTR [eax],al
  42c147:	add    BYTE PTR [eax+eax*1],al
  42c14a:	add    BYTE PTR [eax],al
  42c14c:	add    BYTE PTR [eax],al
  42c14e:	add    DWORD PTR [eax],eax
  42c150:	or     DWORD PTR [eax+eax*1],eax
  42c153:	add    BYTE PTR [eax+0x13],dh
  42c159:	add    BYTE PTR [eax],al
  42c15b:	add    BYTE PTR [eax],al
  42c15d:	add    BYTE PTR [eax],al
  42c15f:	add    BYTE PTR [eax+eax*1],al
  42c162:	add    BYTE PTR [eax],al
  42c164:	add    BYTE PTR [eax],al
  42c166:	add    DWORD PTR [eax],eax
  42c168:	or     DWORD PTR [eax+eax*1],eax
  42c16b:	add    al,al
  42c16d:	adc    eax,DWORD PTR [eax]
	...
  42c177:	add    BYTE PTR [eax+eax*1],al
  42c17a:	add    BYTE PTR [eax],al
  42c17c:	add    BYTE PTR [eax],al
  42c17e:	add    DWORD PTR [eax],eax
  42c180:	or     DWORD PTR [eax+eax*1],eax
  42c183:	add    al,dl
  42c185:	adc    eax,DWORD PTR [eax]
	...
  42c18f:	add    BYTE PTR [eax+eax*1],al
  42c192:	add    BYTE PTR [eax],al
  42c194:	add    BYTE PTR [eax],al
  42c196:	add    DWORD PTR [eax],eax
  42c198:	or     DWORD PTR [eax+eax*1],eax
  42c19b:	add    al,ah
  42c19d:	adc    eax,DWORD PTR [eax]
	...
  42c1a7:	add    BYTE PTR [eax+eax*1],al
  42c1aa:	add    BYTE PTR [eax],al
  42c1ac:	add    BYTE PTR [eax],al
  42c1ae:	add    DWORD PTR [eax],eax
  42c1b0:	or     DWORD PTR [eax+eax*1],eax
  42c1b3:	add    al,dh
  42c1b5:	adc    eax,DWORD PTR [eax]
	...
  42c1bf:	add    BYTE PTR [eax+eax*1],al
  42c1c2:	add    BYTE PTR [eax],al
  42c1c4:	add    BYTE PTR [eax],al
  42c1c6:	add    DWORD PTR [eax],eax
  42c1c8:	or     DWORD PTR [eax+eax*1],eax
  42c1cb:	add    BYTE PTR [eax],al
  42c1cd:	adc    al,0x0
	...
  42c1d7:	add    BYTE PTR [eax+eax*1],al
  42c1da:	add    BYTE PTR [eax],al
  42c1dc:	add    BYTE PTR [eax],al
  42c1de:	add    DWORD PTR [eax],eax
  42c1e0:	or     DWORD PTR [eax+eax*1],eax
  42c1e3:	add    BYTE PTR [eax],dl
  42c1e5:	adc    al,0x0
	...
  42c1ef:	add    BYTE PTR [eax+eax*1],al
  42c1f2:	add    BYTE PTR [eax],al
  42c1f4:	add    BYTE PTR [eax],al
  42c1f6:	add    DWORD PTR [eax],eax
  42c1f8:	or     DWORD PTR [eax+eax*1],eax
  42c1fb:	add    BYTE PTR [eax],ah
  42c1fd:	adc    al,0x0
	...
  42c207:	add    BYTE PTR [eax+eax*1],al
  42c20a:	add    BYTE PTR [eax],al
  42c20c:	add    BYTE PTR [eax],al
  42c20e:	add    DWORD PTR [eax],eax
  42c210:	or     DWORD PTR [eax+eax*1],eax
  42c213:	add    BYTE PTR [eax],dh
  42c215:	adc    al,0x0
	...
  42c21f:	add    BYTE PTR [eax+eax*1],al
  42c222:	add    BYTE PTR [eax],al
  42c224:	add    BYTE PTR [eax],al
  42c226:	add    DWORD PTR [eax],eax
  42c228:	or     DWORD PTR [eax+eax*1],eax
  42c22b:	add    BYTE PTR [eax+0x14],al
	...
  42c236:	add    BYTE PTR [eax],al
  42c238:	add    al,0x0
  42c23a:	add    BYTE PTR [eax],al
  42c23c:	add    BYTE PTR [eax],al
  42c23e:	add    DWORD PTR [eax],eax
  42c240:	or     DWORD PTR [eax+eax*1],eax
  42c243:	add    BYTE PTR [eax+0x14],dl
	...
  42c24e:	add    BYTE PTR [eax],al
  42c250:	add    al,0x0
  42c252:	add    BYTE PTR [eax],al
  42c254:	add    BYTE PTR [eax],al
  42c256:	add    DWORD PTR [eax],eax
  42c258:	or     DWORD PTR [eax+eax*1],eax
  42c25b:	add    BYTE PTR [eax+0x14],ah
	...
  42c266:	add    BYTE PTR [eax],al
  42c268:	add    al,0x0
  42c26a:	add    BYTE PTR [eax],al
  42c26c:	add    BYTE PTR [eax],al
  42c26e:	add    DWORD PTR [eax],eax
  42c270:	or     DWORD PTR [eax+eax*1],eax
  42c273:	add    BYTE PTR [eax+0x14],dh
	...
  42c27e:	add    BYTE PTR [eax],al
  42c280:	add    al,0x0
  42c282:	add    BYTE PTR [eax],al
  42c284:	add    BYTE PTR [eax],al
  42c286:	add    DWORD PTR [eax],eax
  42c288:	or     DWORD PTR [eax+eax*1],eax
  42c28b:	add    BYTE PTR [eax+0x14],al
  42c291:	add    BYTE PTR [eax],al
  42c293:	add    BYTE PTR [eax],al
  42c295:	add    BYTE PTR [eax],al
  42c297:	add    BYTE PTR [eax+eax*1],al
  42c29a:	add    BYTE PTR [eax],al
  42c29c:	add    BYTE PTR [eax],al
  42c29e:	add    DWORD PTR [eax],eax
  42c2a0:	or     DWORD PTR [eax+eax*1],eax
  42c2a3:	add    BYTE PTR [eax+0x14],dl
  42c2a9:	add    BYTE PTR [eax],al
  42c2ab:	add    BYTE PTR [eax],al
  42c2ad:	add    BYTE PTR [eax],al
  42c2af:	add    BYTE PTR [eax+eax*1],al
  42c2b2:	add    BYTE PTR [eax],al
  42c2b4:	add    BYTE PTR [eax],al
  42c2b6:	add    DWORD PTR [eax],eax
  42c2b8:	or     DWORD PTR [eax+eax*1],eax
  42c2bb:	add    BYTE PTR [eax+0x14],ah
  42c2c1:	add    BYTE PTR [eax],al
  42c2c3:	add    BYTE PTR [eax],al
  42c2c5:	add    BYTE PTR [eax],al
  42c2c7:	add    BYTE PTR [eax+eax*1],al
  42c2ca:	add    BYTE PTR [eax],al
  42c2cc:	add    BYTE PTR [eax],al
  42c2ce:	add    DWORD PTR [eax],eax
  42c2d0:	or     DWORD PTR [eax+eax*1],eax
  42c2d3:	add    BYTE PTR [eax+0x14],dh
  42c2d9:	add    BYTE PTR [eax],al
  42c2db:	add    BYTE PTR [eax],al
  42c2dd:	add    BYTE PTR [eax],al
  42c2df:	add    BYTE PTR [eax+eax*1],al
  42c2e2:	add    BYTE PTR [eax],al
  42c2e4:	add    BYTE PTR [eax],al
  42c2e6:	add    DWORD PTR [eax],eax
  42c2e8:	or     DWORD PTR [eax+eax*1],eax
  42c2eb:	add    al,al
  42c2ed:	adc    al,0x0
	...
  42c2f7:	add    BYTE PTR [eax+eax*1],al
  42c2fa:	add    BYTE PTR [eax],al
  42c2fc:	add    BYTE PTR [eax],al
  42c2fe:	add    DWORD PTR [eax],eax
  42c300:	or     DWORD PTR [eax+eax*1],eax
  42c303:	add    al,dl
  42c305:	adc    al,0x0
	...
  42c30f:	add    BYTE PTR [eax+eax*1],al
  42c312:	add    BYTE PTR [eax],al
  42c314:	add    BYTE PTR [eax],al
  42c316:	add    DWORD PTR [eax],eax
  42c318:	or     DWORD PTR [eax+eax*1],eax
  42c31b:	add    al,ah
  42c31d:	adc    al,0x0
	...
  42c327:	add    BYTE PTR [eax+eax*1],al
  42c32a:	add    BYTE PTR [eax],al
  42c32c:	add    BYTE PTR [eax],al
  42c32e:	add    DWORD PTR [eax],eax
  42c330:	or     DWORD PTR [eax+eax*1],eax
  42c333:	add    al,dh
  42c335:	adc    al,0x0
	...
  42c33f:	add    BYTE PTR [eax+eax*1],al
  42c342:	add    BYTE PTR [eax],al
  42c344:	add    BYTE PTR [eax],al
  42c346:	add    DWORD PTR [eax],eax
  42c348:	or     DWORD PTR [eax+eax*1],eax
  42c34b:	add    BYTE PTR [eax],al
  42c34d:	adc    eax,0x0
  42c352:	add    BYTE PTR [eax],al
  42c354:	add    BYTE PTR [eax],al
  42c356:	add    BYTE PTR [eax],al
  42c358:	add    al,0x0
  42c35a:	add    BYTE PTR [eax],al
  42c35c:	add    BYTE PTR [eax],al
  42c35e:	add    DWORD PTR [eax],eax
  42c360:	or     DWORD PTR [eax+eax*1],eax
  42c363:	add    BYTE PTR [eax],dl
  42c365:	adc    eax,0x0
  42c36a:	add    BYTE PTR [eax],al
  42c36c:	add    BYTE PTR [eax],al
  42c36e:	add    BYTE PTR [eax],al
  42c370:	add    al,0x0
  42c372:	add    BYTE PTR [eax],al
  42c374:	add    BYTE PTR [eax],al
  42c376:	add    DWORD PTR [eax],eax
  42c378:	or     DWORD PTR [eax+eax*1],eax
  42c37b:	add    BYTE PTR [eax],ah
  42c37d:	adc    eax,0x0
  42c382:	add    BYTE PTR [eax],al
  42c384:	add    BYTE PTR [eax],al
  42c386:	add    BYTE PTR [eax],al
  42c388:	add    al,0x0
  42c38a:	add    BYTE PTR [eax],al
  42c38c:	add    BYTE PTR [eax],al
  42c38e:	add    DWORD PTR [eax],eax
  42c390:	or     DWORD PTR [eax+eax*1],eax
  42c393:	add    BYTE PTR [eax],dh
  42c395:	adc    eax,0x0
  42c39a:	add    BYTE PTR [eax],al
  42c39c:	add    BYTE PTR [eax],al
  42c39e:	add    BYTE PTR [eax],al
  42c3a0:	add    al,0x0
  42c3a2:	add    BYTE PTR [eax],al
  42c3a4:	add    BYTE PTR [eax],al
  42c3a6:	add    DWORD PTR [eax],eax
  42c3a8:	or     DWORD PTR [eax+eax*1],eax
  42c3ab:	add    BYTE PTR [eax+0x15],al
	...
  42c3b6:	add    BYTE PTR [eax],al
  42c3b8:	add    al,0x0
  42c3ba:	add    BYTE PTR [eax],al
  42c3bc:	add    BYTE PTR [eax],al
  42c3be:	add    DWORD PTR [eax],eax
  42c3c0:	or     DWORD PTR [eax+eax*1],eax
  42c3c3:	add    BYTE PTR [eax+0x15],dl
	...
  42c3ce:	add    BYTE PTR [eax],al
  42c3d0:	add    al,0x0
  42c3d2:	add    BYTE PTR [eax],al
  42c3d4:	add    BYTE PTR [eax],al
  42c3d6:	add    DWORD PTR [eax],eax
  42c3d8:	or     DWORD PTR [eax+eax*1],eax
  42c3db:	add    BYTE PTR [eax+0x15],ah
	...
  42c3e6:	add    BYTE PTR [eax],al
  42c3e8:	add    al,0x0
  42c3ea:	add    BYTE PTR [eax],al
  42c3ec:	add    BYTE PTR [eax],al
  42c3ee:	add    DWORD PTR [eax],eax
  42c3f0:	or     DWORD PTR [eax+eax*1],eax
  42c3f3:	add    BYTE PTR [eax+0x15],dh
	...
  42c3fe:	add    BYTE PTR [eax],al
  42c400:	add    al,0x0
  42c402:	add    BYTE PTR [eax],al
  42c404:	add    BYTE PTR [eax],al
  42c406:	add    DWORD PTR [eax],eax
  42c408:	or     DWORD PTR [eax+eax*1],eax
  42c40b:	add    BYTE PTR [eax+0x15],al
  42c411:	add    BYTE PTR [eax],al
  42c413:	add    BYTE PTR [eax],al
  42c415:	add    BYTE PTR [eax],al
  42c417:	add    BYTE PTR [eax+eax*1],al
  42c41a:	add    BYTE PTR [eax],al
  42c41c:	add    BYTE PTR [eax],al
  42c41e:	add    DWORD PTR [eax],eax
  42c420:	or     DWORD PTR [eax+eax*1],eax
  42c423:	add    BYTE PTR [eax+0x15],dl
  42c429:	add    BYTE PTR [eax],al
  42c42b:	add    BYTE PTR [eax],al
  42c42d:	add    BYTE PTR [eax],al
  42c42f:	add    BYTE PTR [eax+eax*1],al
  42c432:	add    BYTE PTR [eax],al
  42c434:	add    BYTE PTR [eax],al
  42c436:	add    DWORD PTR [eax],eax
  42c438:	or     DWORD PTR [eax+eax*1],eax
  42c43b:	add    BYTE PTR [eax+0x15],ah
  42c441:	add    BYTE PTR [eax],al
  42c443:	add    BYTE PTR [eax],al
  42c445:	add    BYTE PTR [eax],al
  42c447:	add    BYTE PTR [eax+eax*1],al
  42c44a:	add    BYTE PTR [eax],al
  42c44c:	add    BYTE PTR [eax],al
  42c44e:	add    DWORD PTR [eax],eax
  42c450:	or     DWORD PTR [eax+eax*1],eax
  42c453:	add    BYTE PTR [eax+0x15],dh
  42c459:	add    BYTE PTR [eax],al
  42c45b:	add    BYTE PTR [eax],al
  42c45d:	add    BYTE PTR [eax],al
  42c45f:	add    BYTE PTR [eax+eax*1],al
  42c462:	add    BYTE PTR [eax],al
  42c464:	add    BYTE PTR [eax],al
  42c466:	add    DWORD PTR [eax],eax
  42c468:	or     DWORD PTR [eax+eax*1],eax
  42c46b:	add    al,al
  42c46d:	adc    eax,0x0
  42c472:	add    BYTE PTR [eax],al
  42c474:	add    BYTE PTR [eax],al
  42c476:	add    BYTE PTR [eax],al
  42c478:	add    al,0x0
  42c47a:	add    BYTE PTR [eax],al
  42c47c:	add    BYTE PTR [eax],al
  42c47e:	add    DWORD PTR [eax],eax
  42c480:	or     DWORD PTR [eax+eax*1],eax
  42c483:	add    al,dl
  42c485:	adc    eax,0x0
  42c48a:	add    BYTE PTR [eax],al
  42c48c:	add    BYTE PTR [eax],al
  42c48e:	add    BYTE PTR [eax],al
  42c490:	add    al,0x0
  42c492:	add    BYTE PTR [eax],al
  42c494:	add    BYTE PTR [eax],al
  42c496:	add    DWORD PTR [eax],eax
  42c498:	or     DWORD PTR [eax+eax*1],eax
  42c49b:	add    al,ah
  42c49d:	adc    eax,0x0
  42c4a2:	add    BYTE PTR [eax],al
  42c4a4:	add    BYTE PTR [eax],al
  42c4a6:	add    BYTE PTR [eax],al
  42c4a8:	add    al,0x0
  42c4aa:	add    BYTE PTR [eax],al
  42c4ac:	add    BYTE PTR [eax],al
  42c4ae:	add    DWORD PTR [eax],eax
  42c4b0:	or     DWORD PTR [eax+eax*1],eax
  42c4b3:	add    al,dh
  42c4b5:	adc    eax,0x0
  42c4ba:	add    BYTE PTR [eax],al
  42c4bc:	add    BYTE PTR [eax],al
  42c4be:	add    BYTE PTR [eax],al
  42c4c0:	add    al,0x0
  42c4c2:	add    BYTE PTR [eax],al
  42c4c4:	add    BYTE PTR [eax],al
  42c4c6:	add    DWORD PTR [eax],eax
  42c4c8:	or     DWORD PTR [eax+eax*1],eax
  42c4cb:	add    BYTE PTR [eax],al
  42c4cd:	push   ss
	...
  42c4d6:	add    BYTE PTR [eax],al
  42c4d8:	add    al,0x0
  42c4da:	add    BYTE PTR [eax],al
  42c4dc:	add    BYTE PTR [eax],al
  42c4de:	add    DWORD PTR [eax],eax
  42c4e0:	or     DWORD PTR [eax+eax*1],eax
  42c4e3:	add    BYTE PTR [eax],dl
  42c4e5:	push   ss
	...
  42c4ee:	add    BYTE PTR [eax],al
  42c4f0:	add    al,0x0
  42c4f2:	add    BYTE PTR [eax],al
  42c4f4:	add    BYTE PTR [eax],al
  42c4f6:	add    DWORD PTR [eax],eax
  42c4f8:	or     DWORD PTR [eax+eax*1],eax
  42c4fb:	add    BYTE PTR [eax],ah
  42c4fd:	push   ss
	...
  42c506:	add    BYTE PTR [eax],al
  42c508:	add    al,0x0
  42c50a:	add    BYTE PTR [eax],al
  42c50c:	add    BYTE PTR [eax],al
  42c50e:	add    DWORD PTR [eax],eax
  42c510:	or     DWORD PTR [eax+eax*1],eax
  42c513:	add    BYTE PTR [eax],dh
  42c515:	push   ss
	...
  42c51e:	add    BYTE PTR [eax],al
  42c520:	add    al,0x0
  42c522:	add    BYTE PTR [eax],al
  42c524:	add    BYTE PTR [eax],al
  42c526:	add    DWORD PTR [eax],eax
  42c528:	or     DWORD PTR [eax+eax*1],eax
  42c52b:	add    BYTE PTR [eax+0x16],al
	...
  42c536:	add    BYTE PTR [eax],al
  42c538:	add    al,0x0
  42c53a:	add    BYTE PTR [eax],al
  42c53c:	add    BYTE PTR [eax],al
  42c53e:	add    DWORD PTR [eax],eax
  42c540:	or     DWORD PTR [eax+eax*1],eax
  42c543:	add    BYTE PTR [eax+0x16],dl
	...
  42c54e:	add    BYTE PTR [eax],al
  42c550:	add    al,0x0
  42c552:	add    BYTE PTR [eax],al
  42c554:	add    BYTE PTR [eax],al
  42c556:	add    DWORD PTR [eax],eax
  42c558:	or     DWORD PTR [eax+eax*1],eax
  42c55b:	add    BYTE PTR [eax+0x16],ah
	...
  42c566:	add    BYTE PTR [eax],al
  42c568:	add    al,0x0
  42c56a:	add    BYTE PTR [eax],al
  42c56c:	add    BYTE PTR [eax],al
  42c56e:	add    DWORD PTR [eax],eax
  42c570:	or     DWORD PTR [eax+eax*1],eax
  42c573:	add    BYTE PTR [eax+0x16],dh
	...
  42c57e:	add    BYTE PTR [eax],al
  42c580:	add    al,0x0
  42c582:	add    BYTE PTR [eax],al
  42c584:	add    BYTE PTR [eax],al
  42c586:	add    DWORD PTR [eax],eax
  42c588:	or     DWORD PTR [eax+eax*1],eax
  42c58b:	add    BYTE PTR [eax+0x16],al
  42c591:	add    BYTE PTR [eax],al
  42c593:	add    BYTE PTR [eax],al
  42c595:	add    BYTE PTR [eax],al
  42c597:	add    BYTE PTR [eax+eax*1],al
  42c59a:	add    BYTE PTR [eax],al
  42c59c:	add    BYTE PTR [eax],al
  42c59e:	add    DWORD PTR [eax],eax
  42c5a0:	or     DWORD PTR [eax+eax*1],eax
  42c5a3:	add    BYTE PTR [eax+0x16],dl
  42c5a9:	add    BYTE PTR [eax],al
  42c5ab:	add    BYTE PTR [eax],al
  42c5ad:	add    BYTE PTR [eax],al
  42c5af:	add    BYTE PTR [eax+eax*1],al
  42c5b2:	add    BYTE PTR [eax],al
  42c5b4:	add    BYTE PTR [eax],al
  42c5b6:	add    DWORD PTR [eax],eax
  42c5b8:	or     DWORD PTR [eax+eax*1],eax
  42c5bb:	add    BYTE PTR [eax+0x16],ah
  42c5c1:	add    BYTE PTR [eax],al
  42c5c3:	add    BYTE PTR [eax],al
  42c5c5:	add    BYTE PTR [eax],al
  42c5c7:	add    BYTE PTR [eax+eax*1],al
  42c5ca:	add    BYTE PTR [eax],al
  42c5cc:	add    BYTE PTR [eax],al
  42c5ce:	add    DWORD PTR [eax],eax
  42c5d0:	or     DWORD PTR [eax+eax*1],eax
  42c5d3:	add    BYTE PTR [eax+0x16],dh
  42c5d9:	add    BYTE PTR [eax],al
  42c5db:	add    BYTE PTR [eax],al
  42c5dd:	add    BYTE PTR [eax],al
  42c5df:	add    BYTE PTR [eax+eax*1],al
  42c5e2:	add    BYTE PTR [eax],al
  42c5e4:	add    BYTE PTR [eax],al
  42c5e6:	add    DWORD PTR [eax],eax
  42c5e8:	or     DWORD PTR [eax+eax*1],eax
  42c5eb:	add    al,al
  42c5ed:	push   ss
	...
  42c5f6:	add    BYTE PTR [eax],al
  42c5f8:	add    al,0x0
  42c5fa:	add    BYTE PTR [eax],al
  42c5fc:	add    BYTE PTR [eax],al
  42c5fe:	add    DWORD PTR [eax],eax
  42c600:	or     DWORD PTR [eax+eax*1],eax
  42c603:	add    al,dl
  42c605:	push   ss
	...
  42c60e:	add    BYTE PTR [eax],al
  42c610:	add    al,0x0
  42c612:	add    BYTE PTR [eax],al
  42c614:	add    BYTE PTR [eax],al
  42c616:	add    DWORD PTR [eax],eax
  42c618:	or     DWORD PTR [eax+eax*1],eax
  42c61b:	add    al,ah
  42c61d:	push   ss
	...
  42c626:	add    BYTE PTR [eax],al
  42c628:	add    al,0x0
  42c62a:	add    BYTE PTR [eax],al
  42c62c:	add    BYTE PTR [eax],al
  42c62e:	add    DWORD PTR [eax],eax
  42c630:	or     DWORD PTR [eax+eax*1],eax
  42c633:	add    al,dh
  42c635:	push   ss
	...
  42c63e:	add    BYTE PTR [eax],al
  42c640:	add    al,0x0
  42c642:	add    BYTE PTR [eax],al
  42c644:	add    BYTE PTR [eax],al
  42c646:	add    DWORD PTR [eax],eax
  42c648:	or     DWORD PTR [eax+eax*1],eax
  42c64b:	add    BYTE PTR [eax],al
  42c64d:	pop    ss
	...
  42c656:	add    BYTE PTR [eax],al
  42c658:	add    al,0x0
  42c65a:	add    BYTE PTR [eax],al
  42c65c:	add    BYTE PTR [eax],al
  42c65e:	add    DWORD PTR [eax],eax
  42c660:	or     DWORD PTR [eax+eax*1],eax
  42c663:	add    BYTE PTR [eax],dl
  42c665:	pop    ss
	...
  42c66e:	add    BYTE PTR [eax],al
  42c670:	add    al,0x0
  42c672:	add    BYTE PTR [eax],al
  42c674:	add    BYTE PTR [eax],al
  42c676:	add    DWORD PTR [eax],eax
  42c678:	or     DWORD PTR [eax+eax*1],eax
  42c67b:	add    BYTE PTR [eax],ah
  42c67d:	pop    ss
	...
  42c686:	add    BYTE PTR [eax],al
  42c688:	add    al,0x0
  42c68a:	add    BYTE PTR [eax],al
  42c68c:	add    BYTE PTR [eax],al
  42c68e:	add    DWORD PTR [eax],eax
  42c690:	or     DWORD PTR [eax+eax*1],eax
  42c693:	add    BYTE PTR [eax],dh
  42c695:	pop    ss
	...
  42c69e:	add    BYTE PTR [eax],al
  42c6a0:	add    al,0x0
  42c6a2:	add    BYTE PTR [eax],al
  42c6a4:	add    BYTE PTR [eax],al
  42c6a6:	add    DWORD PTR [eax],eax
  42c6a8:	or     DWORD PTR [eax+eax*1],eax
  42c6ab:	add    BYTE PTR [eax+0x17],al
	...
  42c6b6:	add    BYTE PTR [eax],al
  42c6b8:	add    al,0x0
  42c6ba:	add    BYTE PTR [eax],al
  42c6bc:	add    BYTE PTR [eax],al
  42c6be:	add    DWORD PTR [eax],eax
  42c6c0:	or     DWORD PTR [eax+eax*1],eax
  42c6c3:	add    BYTE PTR [eax+0x17],dl
	...
  42c6ce:	add    BYTE PTR [eax],al
  42c6d0:	add    al,0x0
  42c6d2:	add    BYTE PTR [eax],al
  42c6d4:	add    BYTE PTR [eax],al
  42c6d6:	add    DWORD PTR [eax],eax
  42c6d8:	or     DWORD PTR [eax+eax*1],eax
  42c6db:	add    BYTE PTR [eax+0x17],ah
	...
  42c6e6:	add    BYTE PTR [eax],al
  42c6e8:	add    al,0x0
  42c6ea:	add    BYTE PTR [eax],al
  42c6ec:	add    BYTE PTR [eax],al
  42c6ee:	add    DWORD PTR [eax],eax
  42c6f0:	or     DWORD PTR [eax+eax*1],eax
  42c6f3:	add    BYTE PTR [eax+0x17],dh
	...
  42c6fe:	add    BYTE PTR [eax],al
  42c700:	add    al,0x0
  42c702:	add    BYTE PTR [eax],al
  42c704:	add    BYTE PTR [eax],al
  42c706:	add    DWORD PTR [eax],eax
  42c708:	or     DWORD PTR [eax+eax*1],eax
  42c70b:	add    BYTE PTR [eax+0x17],al
  42c711:	add    BYTE PTR [eax],al
  42c713:	add    BYTE PTR [eax],al
  42c715:	add    BYTE PTR [eax],al
  42c717:	add    BYTE PTR [eax+eax*1],al
  42c71a:	add    BYTE PTR [eax],al
  42c71c:	add    BYTE PTR [eax],al
  42c71e:	add    DWORD PTR [eax],eax
  42c720:	or     DWORD PTR [eax+eax*1],eax
  42c723:	add    BYTE PTR [eax+0x17],dl
  42c729:	add    BYTE PTR [eax],al
  42c72b:	add    BYTE PTR [eax],al
  42c72d:	add    BYTE PTR [eax],al
  42c72f:	add    BYTE PTR [eax+eax*1],al
  42c732:	add    BYTE PTR [eax],al
  42c734:	add    BYTE PTR [eax],al
  42c736:	add    DWORD PTR [eax],eax
  42c738:	or     DWORD PTR [eax+eax*1],eax
  42c73b:	add    BYTE PTR [eax-0x7fffffe9],ah
  42c741:	(bad)  
  42c742:	add    al,BYTE PTR [eax]
  42c744:	sub    DWORD PTR [ecx],eax
  42c746:	add    BYTE PTR [eax],al
  42c748:	in     al,0x4
  42c74a:	add    BYTE PTR [eax],al
  42c74c:	add    BYTE PTR [eax],al
  42c74e:	add    BYTE PTR [eax],al
  42c750:	test   eax,0x290002d7
  42c755:	add    DWORD PTR [eax],eax
  42c757:	add    ah,ah
  42c759:	add    al,0x0
  42c75b:	add    BYTE PTR [eax],al
  42c75d:	add    BYTE PTR [eax],al
  42c75f:	add    dl,dl
  42c761:	fadd   DWORD PTR [edx]
  42c763:	add    BYTE PTR [ecx],ch
  42c765:	add    DWORD PTR [eax],eax
  42c767:	add    ah,ah
  42c769:	add    al,0x0
  42c76b:	add    BYTE PTR [eax],al
  42c76d:	add    BYTE PTR [eax],al
  42c76f:	add    bl,bh
  42c771:	fld    DWORD PTR [edx]
  42c773:	add    BYTE PTR [ecx],ch
  42c775:	add    DWORD PTR [eax],eax
  42c777:	add    ah,ah
  42c779:	add    al,0x0
  42c77b:	add    BYTE PTR [eax],al
  42c77d:	add    BYTE PTR [eax],al
  42c77f:	add    BYTE PTR [ebx+ebx*8],ah
  42c782:	add    al,BYTE PTR [eax]
  42c784:	sub    DWORD PTR [ecx],eax
  42c786:	add    BYTE PTR [eax],al
  42c788:	in     al,0x4
  42c78a:	add    BYTE PTR [eax],al
  42c78c:	add    BYTE PTR [eax],al
  42c78e:	add    BYTE PTR [eax],al
  42c790:	dec    ebp
  42c791:	fadd   QWORD PTR [edx]
  42c793:	add    BYTE PTR [ecx],ch
  42c795:	add    DWORD PTR [eax],eax
  42c797:	add    ah,ah
  42c799:	add    al,0x0
  42c79b:	add    BYTE PTR [eax],al
  42c79d:	add    BYTE PTR [eax],al
  42c79f:	add    BYTE PTR [esi-0x23],dh
  42c7a2:	add    al,BYTE PTR [eax]
  42c7a4:	sub    DWORD PTR [ecx],eax
  42c7a6:	add    BYTE PTR [eax],al
  42c7a8:	in     al,0x4
  42c7aa:	add    BYTE PTR [eax],al
  42c7ac:	add    BYTE PTR [eax],al
  42c7ae:	add    BYTE PTR [eax],al
  42c7b0:	lahf   
  42c7b1:	fiadd  WORD PTR [edx]
  42c7b3:	add    BYTE PTR [ecx],ch
  42c7b5:	add    DWORD PTR [eax],eax
  42c7b7:	add    ah,ah
  42c7b9:	add    al,0x0
  42c7bb:	add    BYTE PTR [eax],al
  42c7bd:	add    BYTE PTR [eax],al
  42c7bf:	add    al,cl
  42c7c1:	fild   WORD PTR [edx]
  42c7c3:	add    BYTE PTR [ecx],ch
  42c7c5:	add    DWORD PTR [eax],eax
  42c7c7:	add    ah,ah
  42c7c9:	add    al,0x0
  42c7cb:	add    BYTE PTR [eax],al
  42c7cd:	add    BYTE PTR [eax],al
  42c7cf:	add    cl,dh
  42c7d1:	loopne 0x42c7d5
  42c7d3:	add    BYTE PTR [ecx],ch
  42c7d5:	add    DWORD PTR [eax],eax
  42c7d7:	add    ah,ah
  42c7d9:	add    al,0x0
  42c7db:	add    BYTE PTR [eax],al
  42c7dd:	add    BYTE PTR [eax],al
  42c7df:	add    BYTE PTR [edx],bl
  42c7e1:	loop   0x42c7e5
  42c7e3:	add    BYTE PTR [ecx],ch
  42c7e5:	add    DWORD PTR [eax],eax
  42c7e7:	add    ah,ah
  42c7e9:	add    al,0x0
  42c7eb:	add    BYTE PTR [eax],al
  42c7ed:	add    BYTE PTR [eax],al
  42c7ef:	add    BYTE PTR [ebx-0x1d],al
  42c7f2:	add    al,BYTE PTR [eax]
  42c7f4:	sub    DWORD PTR [ecx],eax
  42c7f6:	add    BYTE PTR [eax],al
  42c7f8:	in     al,0x4
  42c7fa:	add    BYTE PTR [eax],al
  42c7fc:	add    BYTE PTR [eax],al
  42c7fe:	add    BYTE PTR [eax],al
  42c800:	ins    BYTE PTR es:[edi],dx
  42c801:	in     al,0x2
  42c803:	add    BYTE PTR [ecx],ch
  42c805:	add    DWORD PTR [eax],eax
  42c807:	add    ah,ah
  42c809:	add    al,0x0
  42c80b:	add    BYTE PTR [eax],al
  42c80d:	add    BYTE PTR [eax],al
  42c80f:	add    BYTE PTR [ebp+0x290002e5],dl
  42c815:	add    DWORD PTR [eax],eax
  42c817:	add    ah,ah
  42c819:	add    al,0x0
  42c81b:	add    BYTE PTR [eax],al
  42c81d:	add    BYTE PTR [eax],al
  42c81f:	add    BYTE PTR [esi+0x290002e6],bh
  42c825:	add    DWORD PTR [eax],eax
  42c827:	add    ah,ah
  42c829:	add    al,0x0
  42c82b:	add    BYTE PTR [eax],al
  42c82d:	add    BYTE PTR [eax],al
  42c82f:	add    bh,ah
  42c831:	out    0x2,eax
  42c833:	add    BYTE PTR [ecx],ch
  42c835:	add    DWORD PTR [eax],eax
  42c837:	add    ah,ah
  42c839:	add    al,0x0
  42c83b:	add    BYTE PTR [eax],al
  42c83d:	add    BYTE PTR [eax],al
  42c83f:	add    BYTE PTR [eax],dl
  42c841:	jmp    0x16bc848
  42c846:	add    BYTE PTR [eax],al
  42c848:	in     al,0x4
  42c84a:	add    BYTE PTR [eax],al
  42c84c:	add    BYTE PTR [eax],al
  42c84e:	add    BYTE PTR [eax],al
  42c850:	cmp    edx,ebp
  42c852:	add    al,BYTE PTR [eax]
  42c854:	sub    DWORD PTR [ecx],eax
  42c856:	add    BYTE PTR [eax],al
  42c858:	in     al,0x4
  42c85a:	add    BYTE PTR [eax],al
  42c85c:	add    BYTE PTR [eax],al
  42c85e:	add    BYTE PTR [eax],al
  42c860:	(bad)  
  42c861:	jmp    0x42c865
  42c863:	add    BYTE PTR [ecx],ch
  42c865:	add    DWORD PTR [eax],eax
  42c867:	add    ah,ah
  42c869:	add    al,0x0
  42c86b:	add    BYTE PTR [eax],al
  42c86d:	add    BYTE PTR [eax],al
  42c86f:	add    BYTE PTR [ebx+0x290002ec],cl
  42c875:	add    DWORD PTR [eax],eax
  42c877:	add    ah,ah
  42c879:	add    al,0x0
  42c87b:	add    BYTE PTR [eax],al
  42c87d:	add    BYTE PTR [eax],al
  42c87f:	add    BYTE PTR [ebp+ebp*8+0x1290002],dh
  42c886:	add    BYTE PTR [eax],al
  42c888:	in     al,0x4
  42c88a:	add    BYTE PTR [eax],al
  42c88c:	add    BYTE PTR [eax],al
  42c88e:	add    BYTE PTR [eax],al
  42c890:	fucomp st(6)
  42c892:	add    al,BYTE PTR [eax]
  42c894:	sub    DWORD PTR [ecx],eax
  42c896:	add    BYTE PTR [eax],al
  42c898:	in     al,0x4
  42c89a:	add    BYTE PTR [eax],al
  42c89c:	add    BYTE PTR [eax],al
  42c89e:	add    BYTE PTR [eax],al
  42c8a0:	push   es
  42c8a1:	lock add al,BYTE PTR [eax]
  42c8a4:	sub    DWORD PTR [ecx],eax
  42c8a6:	add    BYTE PTR [eax],al
  42c8a8:	in     al,0x4
  42c8aa:	add    BYTE PTR [eax],al
  42c8ac:	add    BYTE PTR [eax],al
  42c8ae:	add    BYTE PTR [eax],al
  42c8b0:	das    
  42c8b1:	icebp  
  42c8b2:	add    al,BYTE PTR [eax]
  42c8b4:	sub    DWORD PTR [ecx],eax
  42c8b6:	add    BYTE PTR [eax],al
  42c8b8:	in     al,0x4
  42c8ba:	add    BYTE PTR [eax],al
  42c8bc:	add    BYTE PTR [eax],al
  42c8be:	add    BYTE PTR [eax],al
  42c8c0:	pop    eax
  42c8c1:	repnz add al,BYTE PTR [eax]
  42c8c4:	sub    DWORD PTR [ecx],eax
  42c8c6:	add    BYTE PTR [eax],al
  42c8c8:	in     al,0x4
  42c8ca:	add    BYTE PTR [eax],al
  42c8cc:	add    BYTE PTR [eax],al
  42c8ce:	add    BYTE PTR [eax],al
  42c8d0:	xor    ebx,0x1290002
  42c8d6:	add    BYTE PTR [eax],al
  42c8d8:	in     al,0x4
  42c8da:	add    BYTE PTR [eax],al
  42c8dc:	add    BYTE PTR [eax],al
  42c8de:	add    BYTE PTR [eax],al
  42c8e0:	stos   BYTE PTR es:[edi],al
  42c8e1:	hlt    
  42c8e2:	add    al,BYTE PTR [eax]
  42c8e4:	sub    DWORD PTR [ecx],eax
  42c8e6:	add    BYTE PTR [eax],al
  42c8e8:	in     al,0x4
  42c8ea:	add    BYTE PTR [eax],al
  42c8ec:	add    BYTE PTR [eax],al
  42c8ee:	add    BYTE PTR [eax],al
  42c8f0:	shl    ebp,cl
  42c8f2:	add    al,BYTE PTR [eax]
  42c8f4:	sub    DWORD PTR [ecx],eax
  42c8f6:	add    BYTE PTR [eax],al
  42c8f8:	in     al,0x4
  42c8fa:	add    BYTE PTR [eax],al
  42c8fc:	add    BYTE PTR [eax],al
  42c8fe:	add    BYTE PTR [eax],al
  42c900:	cld    
  42c901:	test   BYTE PTR [edx],0x0
  42c904:	sub    DWORD PTR [ecx],eax
  42c906:	add    BYTE PTR [eax],al
  42c908:	in     al,0x4
  42c90a:	add    BYTE PTR [eax],al
  42c90c:	add    BYTE PTR [eax],al
  42c90e:	add    BYTE PTR [eax],al
  42c910:	and    eax,0x290002f8
  42c915:	add    DWORD PTR [eax],eax
  42c917:	add    ah,ah
  42c919:	add    al,0x0
  42c91b:	add    BYTE PTR [eax],al
  42c91d:	add    BYTE PTR [eax],al
  42c91f:	add    BYTE PTR [esi-0x7],cl
  42c922:	add    al,BYTE PTR [eax]
  42c924:	sub    DWORD PTR [ecx],eax
  42c926:	add    BYTE PTR [eax],al
  42c928:	in     al,0x4
  42c92a:	add    BYTE PTR [eax],al
  42c92c:	add    BYTE PTR [eax],al
  42c92e:	add    BYTE PTR [eax],al
  42c930:	ja     0x42c92c
  42c932:	add    al,BYTE PTR [eax]
  42c934:	sub    DWORD PTR [ecx],eax
  42c936:	add    BYTE PTR [eax],al
  42c938:	in     al,0x4
  42c93a:	add    BYTE PTR [eax],al
  42c93c:	add    BYTE PTR [eax],al
  42c93e:	add    BYTE PTR [eax],al
  42c940:	mov    al,ds:0x290002fb
  42c945:	add    DWORD PTR [eax],eax
  42c947:	add    ah,ah
  42c949:	add    al,0x0
  42c94b:	add    BYTE PTR [eax],al
  42c94d:	add    BYTE PTR [eax],al
  42c94f:	add    cl,cl
  42c951:	cld    
  42c952:	add    al,BYTE PTR [eax]
  42c954:	sub    DWORD PTR [ecx],eax
  42c956:	add    BYTE PTR [eax],al
  42c958:	in     al,0x4
  42c95a:	add    BYTE PTR [eax],al
  42c95c:	add    BYTE PTR [eax],al
  42c95e:	add    BYTE PTR [eax],al
  42c960:	repnz std 
  42c962:	add    al,BYTE PTR [eax]
  42c964:	sub    DWORD PTR [ecx],eax
  42c966:	add    BYTE PTR [eax],al
  42c968:	in     al,0x4
  42c96a:	add    BYTE PTR [eax],al
  42c96c:	add    BYTE PTR [eax],al
  42c96e:	add    BYTE PTR [eax],al
  42c970:	sbb    edi,edi
  42c972:	add    al,BYTE PTR [eax]
  42c974:	sub    DWORD PTR [ecx],eax
  42c976:	add    BYTE PTR [eax],al
  42c978:	in     al,0x4
  42c97a:	add    BYTE PTR [eax],al
  42c97c:	add    BYTE PTR [eax],al
  42c97e:	add    BYTE PTR [eax],al
  42c980:	inc    esp
  42c981:	add    BYTE PTR [ebx],al
  42c983:	add    BYTE PTR [ecx],ch
  42c985:	add    DWORD PTR [eax],eax
  42c987:	add    ah,ah
  42c989:	add    al,0x0
  42c98b:	add    BYTE PTR [eax],al
  42c98d:	add    BYTE PTR [eax],al
  42c98f:	add    BYTE PTR [ebp+0x1],ch
  42c992:	add    eax,DWORD PTR [eax]
  42c994:	sub    DWORD PTR [ecx],eax
  42c996:	add    BYTE PTR [eax],al
  42c998:	in     al,0x4
  42c99a:	add    BYTE PTR [eax],al
  42c99c:	add    BYTE PTR [eax],al
  42c99e:	add    BYTE PTR [eax],al
  42c9a0:	xchg   esi,eax
  42c9a1:	add    al,BYTE PTR [ebx]
  42c9a3:	add    BYTE PTR [ecx],ch
  42c9a5:	add    DWORD PTR [eax],eax
  42c9a7:	add    ah,ah
  42c9a9:	add    al,0x0
  42c9ab:	add    BYTE PTR [eax],al
  42c9ad:	add    BYTE PTR [eax],al
  42c9af:	add    BYTE PTR [edi+0x29000303],bh
  42c9b5:	add    DWORD PTR [eax],eax
  42c9b7:	add    ah,ah
  42c9b9:	add    al,0x0
  42c9bb:	add    BYTE PTR [eax],al
  42c9bd:	add    BYTE PTR [eax],al
  42c9bf:	add    al,ch
  42c9c1:	add    al,0x3
  42c9c3:	add    BYTE PTR [ecx],ch
  42c9c5:	add    DWORD PTR [eax],eax
  42c9c7:	add    ah,ah
  42c9c9:	add    al,0x0
  42c9cb:	add    BYTE PTR [eax],al
  42c9cd:	add    BYTE PTR [eax],al
  42c9cf:	add    BYTE PTR [ecx],dl
  42c9d1:	push   es
  42c9d2:	add    eax,DWORD PTR [eax]
  42c9d4:	sub    DWORD PTR [ecx],eax
  42c9d6:	add    BYTE PTR [eax],al
  42c9d8:	in     al,0x4
  42c9da:	add    BYTE PTR [eax],al
  42c9dc:	add    BYTE PTR [eax],al
  42c9de:	add    BYTE PTR [eax],al
  42c9e0:	cmp    al,BYTE PTR [edi]
  42c9e2:	add    eax,DWORD PTR [eax]
  42c9e4:	sub    DWORD PTR [ecx],eax
  42c9e6:	add    BYTE PTR [eax],al
  42c9e8:	in     al,0x4
  42c9ea:	add    BYTE PTR [eax],al
  42c9ec:	add    BYTE PTR [eax],al
  42c9ee:	add    BYTE PTR [eax],al
  42c9f0:	arpl   WORD PTR [eax],cx
  42c9f2:	add    eax,DWORD PTR [eax]
  42c9f4:	sub    DWORD PTR [ecx],eax
  42c9f6:	add    BYTE PTR [eax],al
  42c9f8:	in     al,0x4
  42c9fa:	add    BYTE PTR [eax],al
  42c9fc:	add    BYTE PTR [eax],al
  42c9fe:	add    BYTE PTR [eax],al
  42ca00:	mov    WORD PTR [ecx],cs
  42ca02:	add    eax,DWORD PTR [eax]
  42ca04:	sub    DWORD PTR [ecx],eax
  42ca06:	add    BYTE PTR [eax],al
  42ca08:	in     al,0x4
  42ca0a:	add    BYTE PTR [eax],al
  42ca0c:	add    BYTE PTR [eax],al
  42ca0e:	add    BYTE PTR [eax],al
  42ca10:	mov    ch,0xa
  42ca12:	add    eax,DWORD PTR [eax]
  42ca14:	sub    DWORD PTR [ecx],eax
  42ca16:	add    BYTE PTR [eax],al
  42ca18:	in     al,0x4
  42ca1a:	add    BYTE PTR [eax],al
  42ca1c:	add    BYTE PTR [eax],al
  42ca1e:	add    BYTE PTR [eax],al
  42ca20:	fimul  WORD PTR [ebx]
  42ca22:	add    eax,DWORD PTR [eax]
  42ca24:	sub    DWORD PTR [ecx],eax
  42ca26:	add    BYTE PTR [eax],al
  42ca28:	in     al,0x4
  42ca2a:	add    BYTE PTR [eax],al
  42ca2c:	add    BYTE PTR [eax],al
  42ca2e:	add    BYTE PTR [eax],al
  42ca30:	pop    es
  42ca31:	or     eax,0x1290003
  42ca36:	add    BYTE PTR [eax],al
  42ca38:	in     al,0x4
  42ca3a:	add    BYTE PTR [eax],al
  42ca3c:	add    BYTE PTR [eax],al
  42ca3e:	add    BYTE PTR [eax],al
  42ca40:	xor    BYTE PTR [esi],cl
  42ca42:	add    eax,DWORD PTR [eax]
  42ca44:	sub    DWORD PTR [ecx],eax
  42ca46:	add    BYTE PTR [eax],al
  42ca48:	in     al,0x4
  42ca4a:	add    BYTE PTR [eax],al
  42ca4c:	add    BYTE PTR [eax],al
  42ca4e:	add    BYTE PTR [eax],al
  42ca50:	pop    ecx
  42ca51:	lsl    eax,WORD PTR [eax]
  42ca54:	sub    DWORD PTR [ecx],eax
  42ca56:	add    BYTE PTR [eax],al
  42ca58:	in     al,0x4
  42ca5a:	add    BYTE PTR [eax],al
  42ca5c:	add    BYTE PTR [eax],al
  42ca5e:	add    BYTE PTR [eax],al
  42ca60:	adc    BYTE PTR [eax],0x3
  42ca63:	add    BYTE PTR [ecx],ch
  42ca65:	add    DWORD PTR [eax],eax
  42ca67:	add    ah,ah
  42ca69:	add    al,0x0
  42ca6b:	add    BYTE PTR [eax],al
  42ca6d:	add    BYTE PTR [eax],al
  42ca6f:	add    BYTE PTR [ebx+0x29000311],ch
  42ca75:	add    DWORD PTR [eax],eax
  42ca77:	add    ah,ah
  42ca79:	add    al,0x0
  42ca7b:	add    BYTE PTR [eax],al
  42ca7d:	add    BYTE PTR [eax],al
  42ca7f:	add    ah,dl
  42ca81:	adc    al,BYTE PTR [ebx]
  42ca83:	add    BYTE PTR [ecx],ch
  42ca85:	add    DWORD PTR [eax],eax
  42ca87:	add    ah,ah
  42ca89:	add    al,0x0
  42ca8b:	add    BYTE PTR [eax],al
  42ca8d:	add    BYTE PTR [eax],al
  42ca8f:	add    ch,bh
  42ca91:	adc    eax,DWORD PTR [ebx]
  42ca93:	add    BYTE PTR [ecx],ch
  42ca95:	add    DWORD PTR [eax],eax
  42ca97:	add    ah,ah
  42ca99:	add    al,0x0
  42ca9b:	add    BYTE PTR [eax],al
  42ca9d:	add    BYTE PTR [eax],al
  42ca9f:	add    BYTE PTR [esi],ah
  42caa1:	adc    eax,0x1290003
  42caa6:	add    BYTE PTR [eax],al
  42caa8:	in     al,0x4
  42caaa:	add    BYTE PTR [eax],al
  42caac:	add    BYTE PTR [eax],al
  42caae:	add    BYTE PTR [eax],al
  42cab0:	dec    edi
  42cab1:	push   ss
  42cab2:	add    eax,DWORD PTR [eax]
  42cab4:	sub    DWORD PTR [ecx],eax
  42cab6:	add    BYTE PTR [eax],al
  42cab8:	in     al,0x4
  42caba:	add    BYTE PTR [eax],al
  42cabc:	add    BYTE PTR [eax],al
  42cabe:	add    BYTE PTR [eax],al
  42cac0:	js     0x42cad9
  42cac2:	add    eax,DWORD PTR [eax]
  42cac4:	sub    DWORD PTR [ecx],eax
  42cac6:	add    BYTE PTR [eax],al
  42cac8:	in     al,0x4
  42caca:	add    BYTE PTR [eax],al
  42cacc:	add    BYTE PTR [eax],al
  42cace:	add    BYTE PTR [eax],al
  42cad0:	mov    eax,ds:0x29000318
  42cad5:	add    DWORD PTR [eax],eax
  42cad7:	add    ah,ah
  42cad9:	add    al,0x0
  42cadb:	add    BYTE PTR [eax],al
  42cadd:	add    BYTE PTR [eax],al
  42cadf:	add    dl,cl
  42cae1:	sbb    DWORD PTR [ebx],eax
  42cae3:	add    BYTE PTR [ecx],ch
  42cae5:	add    DWORD PTR [eax],eax
  42cae7:	add    ah,ah
  42cae9:	add    al,0x0
  42caeb:	add    BYTE PTR [eax],al
  42caed:	add    BYTE PTR [eax],al
  42caef:	add    bl,dh
  42caf1:	sbb    al,BYTE PTR [ebx]
  42caf3:	add    BYTE PTR [ecx],ch
  42caf5:	add    DWORD PTR [eax],eax
  42caf7:	add    ah,ah
  42caf9:	add    al,0x0
  42cafb:	add    BYTE PTR [eax],al
  42cafd:	add    BYTE PTR [eax],al
  42caff:	add    BYTE PTR [esp+ebx*1],bl
  42cb02:	add    eax,DWORD PTR [eax]
  42cb04:	sub    DWORD PTR [ecx],eax
  42cb06:	add    BYTE PTR [eax],al
  42cb08:	in     al,0x4
  42cb0a:	add    BYTE PTR [eax],al
  42cb0c:	add    BYTE PTR [eax],al
  42cb0e:	add    BYTE PTR [eax],al
  42cb10:	inc    ebp
  42cb11:	sbb    eax,0x1290003
  42cb16:	add    BYTE PTR [eax],al
  42cb18:	in     al,0x4
  42cb1a:	add    BYTE PTR [eax],al
  42cb1c:	add    BYTE PTR [eax],al
  42cb1e:	add    BYTE PTR [eax],al
  42cb20:	outs   dx,BYTE PTR ds:[esi]
  42cb21:	push   ds
  42cb22:	add    eax,DWORD PTR [eax]
  42cb24:	sub    DWORD PTR [ecx],eax
  42cb26:	add    BYTE PTR [eax],al
  42cb28:	in     al,0x4
  42cb2a:	add    BYTE PTR [eax],al
  42cb2c:	add    BYTE PTR [eax],al
  42cb2e:	add    BYTE PTR [eax],al
  42cb30:	xchg   edi,eax
  42cb31:	pop    ds
  42cb32:	add    eax,DWORD PTR [eax]
  42cb34:	sub    DWORD PTR [ecx],eax
  42cb36:	add    BYTE PTR [eax],al
  42cb38:	in     al,0x4
  42cb3a:	add    BYTE PTR [eax],al
  42cb3c:	add    BYTE PTR [eax],al
  42cb3e:	add    BYTE PTR [eax],al
  42cb40:	shl    BYTE PTR [eax],0x3
  42cb43:	add    BYTE PTR [ecx],ch
  42cb45:	add    DWORD PTR [eax],eax
  42cb47:	add    ah,ah
  42cb49:	add    al,0x0
  42cb4b:	add    BYTE PTR [eax],al
  42cb4d:	add    BYTE PTR [eax],al
  42cb4f:	add    cl,ch
  42cb51:	and    DWORD PTR [ebx],eax
  42cb53:	add    BYTE PTR [ecx],ch
  42cb55:	add    DWORD PTR [eax],eax
  42cb57:	add    ah,ah
  42cb59:	add    al,0x0
  42cb5b:	add    BYTE PTR [eax],al
  42cb5d:	add    BYTE PTR [eax],al
  42cb5f:	add    BYTE PTR [edx],dl
  42cb61:	and    eax,DWORD PTR [ebx]
  42cb63:	add    BYTE PTR [ecx],ch
  42cb65:	add    DWORD PTR [eax],eax
  42cb67:	add    ah,ah
  42cb69:	add    al,0x0
  42cb6b:	add    BYTE PTR [eax],al
  42cb6d:	add    BYTE PTR [eax],al
  42cb6f:	add    BYTE PTR [ebx],bh
  42cb71:	and    al,0x3
  42cb73:	add    BYTE PTR [ecx],ch
  42cb75:	add    DWORD PTR [eax],eax
  42cb77:	add    ah,ah
  42cb79:	add    al,0x0
  42cb7b:	add    BYTE PTR [eax],al
  42cb7d:	add    BYTE PTR [eax],al
  42cb7f:	add    BYTE PTR [ebp+eiz*1+0x3],ah
  42cb83:	add    BYTE PTR [ecx],ch
  42cb85:	add    DWORD PTR [eax],eax
  42cb87:	add    ah,ah
  42cb89:	add    al,0x0
  42cb8b:	add    BYTE PTR [eax],al
  42cb8d:	add    BYTE PTR [eax],al
  42cb8f:	add    BYTE PTR [ebp+0x29000326],cl
  42cb95:	add    DWORD PTR [eax],eax
  42cb97:	add    ah,ah
  42cb99:	add    al,0x0
  42cb9b:	add    BYTE PTR [eax],al
  42cb9d:	add    BYTE PTR [eax],al
  42cb9f:	add    BYTE PTR [esi+0x29000327],dh
  42cba5:	add    DWORD PTR [eax],eax
  42cba7:	add    ah,ah
  42cba9:	add    al,0x0
  42cbab:	add    BYTE PTR [eax],al
  42cbad:	add    BYTE PTR [eax],al
  42cbaf:	add    bh,bl
  42cbb1:	sub    BYTE PTR [ebx],al
  42cbb3:	add    BYTE PTR [ecx],ch
  42cbb5:	add    DWORD PTR [eax],eax
  42cbb7:	add    ah,ah
  42cbb9:	add    al,0x0
  42cbbb:	add    BYTE PTR [eax],al
  42cbbd:	add    BYTE PTR [eax],al
  42cbbf:	add    BYTE PTR [eax],cl
  42cbc1:	sub    al,BYTE PTR [ebx]
  42cbc3:	add    BYTE PTR [ecx],ch
  42cbc5:	add    DWORD PTR [eax],eax
  42cbc7:	add    ah,ah
  42cbc9:	add    al,0x0
  42cbcb:	add    BYTE PTR [eax],al
  42cbcd:	add    BYTE PTR [eax],al
  42cbcf:	add    BYTE PTR [ecx],dh
  42cbd1:	sub    eax,DWORD PTR [ebx]
  42cbd3:	add    BYTE PTR [ecx],ch
  42cbd5:	add    DWORD PTR [eax],eax
  42cbd7:	add    ah,ah
  42cbd9:	add    al,0x0
  42cbdb:	add    BYTE PTR [eax],al
  42cbdd:	add    BYTE PTR [eax],al
  42cbdf:	add    BYTE PTR [edx+0x2c],bl
  42cbe2:	add    eax,DWORD PTR [eax]
  42cbe4:	sub    DWORD PTR [ecx],eax
  42cbe6:	add    BYTE PTR [eax],al
  42cbe8:	in     al,0x4
  42cbea:	add    BYTE PTR [eax],al
  42cbec:	add    BYTE PTR [eax],al
  42cbee:	add    BYTE PTR [eax],al
  42cbf0:	sub    DWORD PTR ds:0x1290003,0x0
  42cbf7:	add    ah,ah
  42cbf9:	add    al,0x0
  42cbfb:	add    BYTE PTR [eax],al
  42cbfd:	add    BYTE PTR [eax],al
  42cbff:	add    BYTE PTR [esi+ebp*1+0x1290003],ch
  42cc06:	add    BYTE PTR [eax],al
  42cc08:	in     al,0x4
  42cc0a:	add    BYTE PTR [eax],al
  42cc0c:	add    BYTE PTR [eax],al
  42cc0e:	add    BYTE PTR [eax],al
  42cc10:	aad    0x2f
  42cc12:	add    eax,DWORD PTR [eax]
  42cc14:	sub    DWORD PTR [ecx],eax
  42cc16:	add    BYTE PTR [eax],al
  42cc18:	in     al,0x4
  42cc1a:	add    BYTE PTR [eax],al
  42cc1c:	add    BYTE PTR [eax],al
  42cc1e:	add    BYTE PTR [eax],al
  42cc20:	(bad)  
  42cc21:	xor    BYTE PTR [ebx],al
  42cc23:	add    BYTE PTR [ecx],ch
  42cc25:	add    DWORD PTR [eax],eax
  42cc27:	add    ah,ah
  42cc29:	add    al,0x0
  42cc2b:	add    BYTE PTR [eax],al
  42cc2d:	add    BYTE PTR [eax],al
  42cc2f:	add    BYTE PTR [edi],ah
  42cc31:	xor    al,BYTE PTR [ebx]
  42cc33:	add    BYTE PTR [ecx],ch
  42cc35:	add    DWORD PTR [eax],eax
  42cc37:	add    ah,ah
  42cc39:	add    al,0x0
  42cc3b:	add    BYTE PTR [eax],al
  42cc3d:	add    BYTE PTR [eax],al
  42cc3f:	add    BYTE PTR [eax+0x33],dl
  42cc42:	add    eax,DWORD PTR [eax]
  42cc44:	sub    DWORD PTR [ecx],eax
  42cc46:	add    BYTE PTR [eax],al
  42cc48:	in     al,0x4
  42cc4a:	add    BYTE PTR [eax],al
  42cc4c:	add    BYTE PTR [eax],al
  42cc4e:	add    BYTE PTR [eax],al
  42cc50:	jns    0x42cc86
  42cc52:	add    eax,DWORD PTR [eax]
  42cc54:	sub    DWORD PTR [ecx],eax
  42cc56:	add    BYTE PTR [eax],al
  42cc58:	in     al,0x4
  42cc5a:	add    BYTE PTR [eax],al
  42cc5c:	add    BYTE PTR [eax],al
  42cc5e:	add    BYTE PTR [eax],al
  42cc60:	mov    ds:0x29000335,al
  42cc65:	add    DWORD PTR [eax],eax
  42cc67:	add    ah,ah
  42cc69:	add    al,0x0
  42cc6b:	add    BYTE PTR [eax],al
  42cc6d:	add    BYTE PTR [eax],al
  42cc6f:	add    bl,cl
  42cc71:	add    eax,DWORD PTR ss:[eax]
  42cc74:	sub    DWORD PTR [ecx],eax
  42cc76:	add    BYTE PTR [eax],al
  42cc78:	in     al,0x4
  42cc7a:	add    BYTE PTR [eax],al
  42cc7c:	add    BYTE PTR [eax],al
  42cc7e:	add    BYTE PTR [eax],al
  42cc80:	hlt    
  42cc81:	aaa    
  42cc82:	add    eax,DWORD PTR [eax]
  42cc84:	sub    DWORD PTR [ecx],eax
  42cc86:	add    BYTE PTR [eax],al
  42cc88:	in     al,0x4
  42cc8a:	add    BYTE PTR [eax],al
  42cc8c:	add    BYTE PTR [eax],al
  42cc8e:	add    BYTE PTR [eax],al
  42cc90:	sbb    eax,0x29000339
  42cc95:	add    DWORD PTR [eax],eax
  42cc97:	add    ah,ah
  42cc99:	add    al,0x0
  42cc9b:	add    BYTE PTR [eax],al
  42cc9d:	add    BYTE PTR [eax],al
  42cc9f:	add    BYTE PTR [esi+0x3a],al
  42cca2:	add    eax,DWORD PTR [eax]
  42cca4:	sub    DWORD PTR [ecx],eax
  42cca6:	add    BYTE PTR [eax],al
  42cca8:	in     al,0x4
  42ccaa:	add    BYTE PTR [eax],al
  42ccac:	add    BYTE PTR [eax],al
  42ccae:	add    BYTE PTR [eax],al
  42ccb0:	outs   dx,DWORD PTR ds:[esi]
  42ccb1:	cmp    eax,DWORD PTR [ebx]
  42ccb3:	add    BYTE PTR [ecx],ch
  42ccb5:	add    DWORD PTR [eax],eax
  42ccb7:	add    ah,ah
  42ccb9:	add    al,0x0
  42ccbb:	add    BYTE PTR [eax],al
  42ccbd:	add    BYTE PTR [eax],al
  42ccbf:	add    BYTE PTR [eax+0x2900033c],bl
  42ccc5:	add    DWORD PTR [eax],eax
  42ccc7:	add    ah,ah
  42ccc9:	add    al,0x0
  42cccb:	add    BYTE PTR [eax],al
  42cccd:	add    BYTE PTR [eax],al
  42cccf:	add    cl,al
  42ccd1:	cmp    eax,0x1290003
  42ccd6:	add    BYTE PTR [eax],al
  42ccd8:	in     al,0x4
  42ccda:	add    BYTE PTR [eax],al
  42ccdc:	add    BYTE PTR [eax],al
  42ccde:	add    BYTE PTR [eax],al
  42cce0:	jmp    0x1:0x2900033e
  42cce7:	add    ah,ah
  42cce9:	add    al,0x0
  42cceb:	add    BYTE PTR [eax],al
  42cced:	add    BYTE PTR [eax],al
  42ccef:	add    BYTE PTR [ebx],dl
  42ccf1:	inc    eax
  42ccf2:	add    eax,DWORD PTR [eax]
  42ccf4:	sub    DWORD PTR [ecx],eax
  42ccf6:	add    BYTE PTR [eax],al
  42ccf8:	in     al,0x4
  42ccfa:	add    BYTE PTR [eax],al
  42ccfc:	add    BYTE PTR [eax],al
  42ccfe:	add    BYTE PTR [eax],al
  42cd00:	cmp    al,0x41
  42cd02:	add    eax,DWORD PTR [eax]
  42cd04:	sub    DWORD PTR [ecx],eax
  42cd06:	add    BYTE PTR [eax],al
  42cd08:	in     al,0x4
  42cd0a:	add    BYTE PTR [eax],al
  42cd0c:	add    BYTE PTR [eax],al
  42cd0e:	add    BYTE PTR [eax],al
  42cd10:	gs inc edx
  42cd12:	add    eax,DWORD PTR [eax]
  42cd14:	and    BYTE PTR [eax],al
  42cd16:	add    BYTE PTR [eax],al
  42cd18:	in     al,0x4
  42cd1a:	add    BYTE PTR [eax],al
  42cd1c:	add    BYTE PTR [eax],al
  42cd1e:	add    BYTE PTR [eax],al
  42cd20:	test   DWORD PTR [edx+0x3],eax
  42cd23:	add    BYTE PTR [ecx],ch
  42cd25:	add    DWORD PTR [eax],eax
  42cd27:	add    ah,ah
  42cd29:	add    al,0x0
  42cd2b:	add    BYTE PTR [eax],al
  42cd2d:	add    BYTE PTR [eax],al
  42cd2f:	add    BYTE PTR [esi+0x29000343],ch
  42cd35:	add    DWORD PTR [eax],eax
  42cd37:	add    ah,ah
  42cd39:	add    al,0x0
  42cd3b:	add    BYTE PTR [eax],al
  42cd3d:	add    BYTE PTR [eax],al
  42cd3f:	add    bh,dl
  42cd41:	inc    esp
  42cd42:	add    eax,DWORD PTR [eax]
  42cd44:	sub    DWORD PTR [ecx],eax
  42cd46:	add    BYTE PTR [eax],al
  42cd48:	in     al,0x4
  42cd4a:	add    BYTE PTR [eax],al
  42cd4c:	add    BYTE PTR [eax],al
  42cd4e:	add    BYTE PTR [eax],al
  42cd50:	add    BYTE PTR [esi+0x3],al
  42cd53:	add    BYTE PTR [ecx],ch
  42cd55:	add    DWORD PTR [eax],eax
  42cd57:	add    ah,ah
  42cd59:	add    al,0x0
  42cd5b:	add    BYTE PTR [eax],al
  42cd5d:	add    BYTE PTR [eax],al
  42cd5f:	add    BYTE PTR [ecx],ch
  42cd61:	inc    edi
  42cd62:	add    eax,DWORD PTR [eax]
  42cd64:	sub    DWORD PTR [ecx],eax
  42cd66:	add    BYTE PTR [eax],al
  42cd68:	in     al,0x4
  42cd6a:	add    BYTE PTR [eax],al
  42cd6c:	add    BYTE PTR [eax],al
  42cd6e:	add    BYTE PTR [eax],al
  42cd70:	push   edx
  42cd71:	dec    eax
  42cd72:	add    eax,DWORD PTR [eax]
  42cd74:	sub    DWORD PTR [ecx],eax
  42cd76:	add    BYTE PTR [eax],al
  42cd78:	in     al,0x4
  42cd7a:	add    BYTE PTR [eax],al
  42cd7c:	add    BYTE PTR [eax],al
  42cd7e:	add    BYTE PTR [eax],al
  42cd80:	jnp    0x42cdcb
  42cd82:	add    eax,DWORD PTR [eax]
  42cd84:	sub    DWORD PTR [ecx],eax
  42cd86:	add    BYTE PTR [eax],al
  42cd88:	in     al,0x4
  42cd8a:	add    BYTE PTR [eax],al
  42cd8c:	add    BYTE PTR [eax],al
  42cd8e:	add    BYTE PTR [eax],al
  42cd90:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42cd91:	dec    edx
  42cd92:	add    eax,DWORD PTR [eax]
  42cd94:	test   al,0xc
  42cd96:	add    BYTE PTR [eax],al
  42cd98:	in     al,0x4
  42cd9a:	add    BYTE PTR [eax],al
  42cd9c:	add    BYTE PTR [eax],al
  42cd9e:	add    BYTE PTR [eax],al
  42cda0:	dec    esp
  42cda1:	jno    0x42cda6
  42cda3:	add    BYTE PTR [eax-0x1bfffff4],ch
  42cda9:	add    al,0x0
  42cdab:	add    BYTE PTR [eax],al
  42cdad:	add    BYTE PTR [eax],al
  42cdaf:	add    BYTE PTR [edi],al
  42cdb1:	add    BYTE PTR [ecx+0x0],al
  42cdb4:	inc    ebx
  42cdb5:	add    BYTE PTR [edx+0x0],cl
  42cdb8:	pop    eax
  42cdb9:	add    BYTE PTR [eax+eax*1+0x42],dl
  42cdbd:	add    BYTE PTR [eax+0x0],dl
  42cdc0:	or     DWORD PTR [eax],eax
  42cdc2:	dec    esi
  42cdc3:	add    BYTE PTR [edi+0x0],cl
  42cdc6:	dec    esp
  42cdc7:	add    BYTE PTR [edx+0x0],bl
  42cdca:	inc    ebx
  42cdcb:	add    BYTE PTR [ebx+0x0],cl
  42cdce:	dec    ebp
  42cdcf:	add    BYTE PTR [ebp+0x0],cl
  42cdd2:	pop    eax
  42cdd3:	add    BYTE PTR [ebx],cl
  42cdd5:	add    BYTE PTR [ecx+0x0],al
  42cdd8:	dec    ebx
  42cdd9:	add    BYTE PTR [ebp+0x0],cl
  42cddc:	push   edi
  42cddd:	add    BYTE PTR [ebp+0x0],al
  42cde0:	dec    edx
  42cde1:	add    BYTE PTR [ebp+0x0],cl
  42cde4:	dec    ebx
  42cde5:	add    BYTE PTR [ebp+0x0],cl
  42cde8:	dec    esi
  42cde9:	add    BYTE PTR [edi+0x0],al
  42cdec:	or     eax,DWORD PTR [eax]
  42cdee:	pop    ecx
  42cdef:	add    BYTE PTR [esi+0x0],al
  42cdf2:	push   edi
  42cdf3:	add    BYTE PTR [eax+eax*1+0x45],al
  42cdf7:	add    BYTE PTR [edx+0x0],bl
  42cdfa:	inc    edi
  42cdfb:	add    BYTE PTR [ebx+0x0],al
  42cdfe:	push   esi
  42cdff:	add    BYTE PTR [edx+0x0],al
  42ce02:	dec    esi
  42ce03:	add    BYTE PTR [edx],cl
  42ce05:	add    BYTE PTR [edx+0x0],al
  42ce08:	dec    edi
  42ce09:	add    BYTE PTR [eax+0x0],bl
  42ce0c:	inc    ebp
  42ce0d:	add    BYTE PTR [eax+0x0],bl
  42ce10:	dec    edx
  42ce11:	add    BYTE PTR [ebx+0x0],al
  42ce14:	inc    ebx
  42ce15:	add    BYTE PTR [eax+0x0],cl
  42ce18:	pop    edx
  42ce19:	add    BYTE PTR [esi],cl
  42ce1b:	add    BYTE PTR [eax+eax*1+0x59],dl
  42ce1f:	add    BYTE PTR [eax+eax*1+0x55],dl
  42ce23:	add    BYTE PTR [edx+0x0],al
  42ce26:	inc    esi
  42ce27:	add    BYTE PTR [edi+0x0],dl
  42ce2a:	push   ebp
  42ce2b:	add    BYTE PTR [esi+0x0],cl
  42ce2e:	inc    ecx
  42ce2f:	add    BYTE PTR [ebp+0x0],cl
  42ce32:	inc    edi
  42ce33:	add    BYTE PTR [eax+0x0],dl
  42ce36:	push   esp
  42ce37:	add    BYTE PTR [edx],cl
  42ce39:	add    BYTE PTR [eax+eax*1+0x50],al
  42ce3d:	add    BYTE PTR [ebp+0x0],cl
  42ce40:	inc    esi
  42ce41:	add    BYTE PTR [edx+0x0],cl
  42ce44:	pop    ecx
  42ce45:	add    BYTE PTR [ecx+0x0],dl
  42ce48:	inc    esi
  42ce49:	add    BYTE PTR [ecx+0x0],al
  42ce4c:	dec    edi
  42ce4d:	add    BYTE PTR [ecx],cl
  42ce4f:	add    BYTE PTR [eax+eax*1+0x44],cl
  42ce53:	add    BYTE PTR [ebp+0x0],dl
  42ce56:	dec    ecx
  42ce57:	add    BYTE PTR [eax+0x0],cl
  42ce5a:	dec    edx
  42ce5b:	add    BYTE PTR [eax+eax*1+0x57],dl
  42ce5f:	add    BYTE PTR [eax+eax*1+0x7],dl
  42ce63:	add    BYTE PTR [edx+0x0],dl
  42ce66:	inc    ecx
  42ce67:	add    BYTE PTR [ebp+0x0],al
  42ce6a:	inc    edx
  42ce6b:	add    BYTE PTR [edx+0x0],dl
  42ce6e:	dec    esi
  42ce6f:	add    BYTE PTR [esi+0x0],al
  42ce72:	or     al,BYTE PTR [eax]
  42ce74:	inc    esp
  42ce75:	add    BYTE PTR [eax+0x0],bl
  42ce78:	dec    esi
  42ce79:	add    BYTE PTR [eax+0x0],bl
  42ce7c:	dec    ebx
  42ce7d:	add    BYTE PTR [ebx+0x0],dl
  42ce80:	push   esp
  42ce81:	add    BYTE PTR [esi+0x0],al
  42ce84:	push   edi
  42ce85:	add    BYTE PTR [eax+0x0],dl
  42ce88:	or     eax,0x5a004400
  42ce8d:	add    BYTE PTR [eax+eax*1+0x51],al
  42ce91:	add    BYTE PTR [eax+eax*1+0x5a],cl
  42ce95:	add    BYTE PTR [edx+0x0],al
  42ce98:	dec    edi
  42ce99:	add    BYTE PTR [eax+0x0],dl
  42ce9c:	pop    eax
  42ce9d:	add    BYTE PTR [ecx+0x0],bl
  42cea0:	dec    esp
  42cea1:	add    BYTE PTR [edx+0x0],bl
  42cea4:	or     BYTE PTR [eax],al
  42cea6:	dec    ebp
  42cea7:	add    BYTE PTR [eax+0x0],bl
  42ceaa:	dec    ecx
  42ceab:	add    BYTE PTR [edi+0x0],cl
  42ceae:	dec    edx
  42ceaf:	add    BYTE PTR [ebx+0x0],al
  42ceb2:	dec    edx
  42ceb3:	add    BYTE PTR [ebp+0x0],al
  42ceb6:	or     al,0x0
  42ceb8:	dec    esi
  42ceb9:	add    BYTE PTR [edi+0x0],al
  42cebc:	dec    ecx
  42cebd:	add    BYTE PTR [ecx+0x0],bl
  42cec0:	inc    ecx
  42cec1:	add    BYTE PTR [esi+0x0],cl
  42cec4:	dec    edi
  42cec5:	add    BYTE PTR [edi+0x0],al
  42cec8:	push   ecx
  42cec9:	add    BYTE PTR [ecx+0x0],al
  42cecc:	inc    ecx
  42cecd:	add    BYTE PTR [edi+0x0],dl
  42ced0:	or     DWORD PTR [eax],eax
  42ced2:	inc    ebp
  42ced3:	add    BYTE PTR [eax+eax*1+0x41],cl
  42ced7:	add    BYTE PTR [esi+0x0],dl
  42ceda:	dec    esi
  42cedb:	add    BYTE PTR [ecx+0x0],bl
  42cede:	dec    eax
  42cedf:	add    BYTE PTR [edx+0x0],al
  42cee2:	inc    ebx
  42cee3:	add    BYTE PTR [esi],cl
  42cee5:	add    BYTE PTR [ecx+0x0],bl
  42cee8:	inc    ebx
  42cee9:	add    BYTE PTR [eax+0x0],dl
  42ceec:	inc    esp
  42ceed:	add    BYTE PTR [ebp+0x0],dl
  42cef0:	push   ebx
  42cef1:	add    BYTE PTR [eax+0x0],bl
  42cef4:	inc    ecx
  42cef5:	add    BYTE PTR [esi+0x0],dl
  42cef8:	push   edi
  42cef9:	add    BYTE PTR [edi+0x0],al
  42cefc:	inc    ebx
  42cefd:	add    BYTE PTR [ebp+0x0],al
  42cf00:	inc    ebx
  42cf01:	add    BYTE PTR [edi],al
  42cf03:	add    BYTE PTR [edi+0x0],al
  42cf06:	inc    esp
  42cf07:	add    BYTE PTR [eax+eax*1+0x52],dl
  42cf0b:	add    BYTE PTR [ebp+0x0],cl
  42cf0e:	pop    edx
  42cf0f:	add    BYTE PTR [esi+0x0],al
  42cf12:	or     al,0x0
  42cf14:	inc    ecx
  42cf15:	add    BYTE PTR [esi+0x0],al
  42cf18:	push   eax
  42cf19:	add    BYTE PTR [edi+0x0],al
  42cf1c:	pop    eax
  42cf1d:	add    BYTE PTR [esi+0x0],al
  42cf20:	dec    esi
  42cf21:	add    BYTE PTR [ecx+0x0],bl
  42cf24:	dec    esp
  42cf25:	add    BYTE PTR [edi+0x0],dl
  42cf28:	inc    ebp
  42cf29:	add    BYTE PTR [edi+0x0],dl
  42cf2c:	or     DWORD PTR [eax],eax
  42cf2e:	inc    esi
  42cf2f:	add    BYTE PTR [ebx+0x0],al
  42cf32:	push   ecx
  42cf33:	add    BYTE PTR [eax+eax*1+0x58],cl
  42cf37:	add    BYTE PTR [ecx+0x0],cl
  42cf3a:	pop    eax
  42cf3b:	add    BYTE PTR [edx+0x0],al
  42cf3e:	push   edx
  42cf3f:	add    BYTE PTR [edx],cl
  42cf41:	add    BYTE PTR [ebx+0x0],dl
  42cf44:	push   ebx
  42cf45:	add    BYTE PTR [eax+eax*1+0x54],dl
  42cf49:	add    BYTE PTR [edx+0x0],dl
  42cf4c:	push   edx
  42cf4d:	add    BYTE PTR [edi+0x0],cl
  42cf50:	dec    ebx
  42cf51:	add    BYTE PTR [edi+0x0],al
  42cf54:	pop    edx
  42cf55:	add    BYTE PTR ds:0x49004700,cl
  42cf5b:	add    BYTE PTR [edx+0x0],al
  42cf5e:	inc    esi
  42cf5f:	add    BYTE PTR [edx+0x0],dl
  42cf62:	pop    eax
  42cf63:	add    BYTE PTR [ecx+0x0],cl
  42cf66:	inc    esi
  42cf67:	add    BYTE PTR [ecx+0x0],bl
  42cf6a:	inc    esi
  42cf6b:	add    BYTE PTR [ecx+0x0],al
  42cf6e:	dec    esp
  42cf6f:	add    BYTE PTR [ebp+0x0],cl
  42cf72:	push   cs
  42cf73:	add    BYTE PTR [edx+0x0],dl
  42cf76:	pop    ecx
  42cf77:	add    BYTE PTR [esi+0x0],dl
  42cf7a:	dec    ebp
  42cf7b:	add    BYTE PTR [eax+eax*1+0x52],cl
  42cf7f:	add    BYTE PTR [esi+0x0],al
  42cf82:	pop    ecx
  42cf83:	add    BYTE PTR [ecx+0x0],dl
  42cf86:	pop    eax
  42cf87:	add    BYTE PTR [eax+0x0],bl
  42cf8a:	dec    ebx
  42cf8b:	add    BYTE PTR [ebx+0x0],al
  42cf8e:	pop    eax
  42cf8f:	add    BYTE PTR [edi],al
  42cf91:	add    BYTE PTR [edi+0x0],al
  42cf94:	dec    esi
  42cf95:	add    BYTE PTR [ecx+0x0],bl
  42cf98:	inc    edi
  42cf99:	add    BYTE PTR [edi+0x0],cl
  42cf9c:	inc    edi
  42cf9d:	add    BYTE PTR [edi+0x0],cl
  42cfa0:	push   cs
  42cfa1:	add    BYTE PTR [eax+0x0],cl
  42cfa4:	inc    esp
  42cfa5:	add    BYTE PTR [edx+0x0],cl
  42cfa8:	inc    ebx
  42cfa9:	add    BYTE PTR [esi+0x0],dl
  42cfac:	dec    esp
  42cfad:	add    BYTE PTR [ebp+0x0],cl
  42cfb0:	push   edi
  42cfb1:	add    BYTE PTR [ecx+0x0],cl
  42cfb4:	push   ebx
  42cfb5:	add    BYTE PTR [edx+0x0],bl
  42cfb8:	dec    ebp
  42cfb9:	add    BYTE PTR [ecx+0x0],al
  42cfbc:	push   ecx
  42cfbd:	add    BYTE PTR [edi],al
  42cfbf:	add    BYTE PTR [eax+0x0],dl
  42cfc2:	push   ecx
  42cfc3:	add    BYTE PTR [eax+eax*1+0x44],dl
  42cfc7:	add    BYTE PTR [eax+eax*1+0x49],al
  42cfcb:	add    BYTE PTR [edx+0x0],dl
  42cfce:	or     eax,DWORD PTR [eax]
  42cfd0:	push   esi
  42cfd1:	add    BYTE PTR [edi+0x0],cl
  42cfd4:	push   ebp
  42cfd5:	add    BYTE PTR [ecx+0x0],al
  42cfd8:	dec    edi
  42cfd9:	add    BYTE PTR [eax+eax*1+0x4f],al
  42cfdd:	add    BYTE PTR [ecx+0x0],cl
  42cfe0:	push   ecx
  42cfe1:	add    BYTE PTR [eax+eax*1+0x4c],dl
  42cfe5:	add    BYTE PTR [eax+eax*1],cl
  42cfe8:	dec    eax
  42cfe9:	add    BYTE PTR [ecx+0x0],dl
  42cfec:	push   edx
  42cfed:	add    BYTE PTR [ebp+0x0],dl
  42cff0:	inc    ecx
  42cff1:	add    BYTE PTR [edx+0x0],al
  42cff4:	push   esp
  42cff5:	add    BYTE PTR [esi+0x0],al
  42cff8:	pop    edx
  42cff9:	add    BYTE PTR [eax+0x0],bl
  42cffc:	push   edx
  42cffd:	add    BYTE PTR [eax+eax*1+0x7],al
  42d001:	add    BYTE PTR [ecx+0x0],dl
  42d004:	push   ecx
  42d005:	add    BYTE PTR [esi+0x0],dl
  42d008:	inc    esi
  42d009:	add    BYTE PTR [edi+0x0],dl
  42d00c:	push   ebp
  42d00d:	add    BYTE PTR [edi+0x0],cl
  42d010:	or     DWORD PTR [eax],eax
  42d012:	dec    edx
  42d013:	add    BYTE PTR [ebp+0x0],cl
  42d016:	dec    eax
  42d017:	add    BYTE PTR [esi+0x0],al
  42d01a:	push   edx
  42d01b:	add    BYTE PTR [ebx+0x0],al
  42d01e:	dec    eax
  42d01f:	add    BYTE PTR [eax+eax*1+0x54],al
  42d023:	add    BYTE PTR [edx],cl
  42d025:	add    BYTE PTR [edx+0x0],al
  42d028:	dec    ebp
  42d029:	add    BYTE PTR [esi+0x0],cl
  42d02c:	push   edx
  42d02d:	add    BYTE PTR [edx+0x0],cl
  42d030:	dec    ebp
  42d031:	add    BYTE PTR [esi+0x0],dl
  42d034:	push   ecx
  42d035:	add    BYTE PTR [eax+0x0],dl
  42d038:	inc    ebx
  42d039:	add    BYTE PTR [ebx],cl
  42d03b:	add    BYTE PTR [ebx+0x0],cl
  42d03e:	dec    ebx
  42d03f:	add    BYTE PTR [ebx+0x0],al
  42d042:	push   ecx
  42d043:	add    BYTE PTR [ecx+0x0],cl
  42d046:	push   edi
  42d047:	add    BYTE PTR [ecx+0x0],dl
  42d04a:	dec    esi
  42d04b:	add    BYTE PTR [eax+eax*1+0x53],cl
  42d04f:	add    BYTE PTR [edi+0x0],al
  42d052:	or     DWORD PTR [eax],eax
  42d054:	push   esp
  42d055:	add    BYTE PTR [eax+0x0],dl
  42d058:	dec    edi
  42d059:	add    BYTE PTR [esi+0x0],cl
  42d05c:	push   esi
  42d05d:	add    BYTE PTR [edx+0x0],al
  42d060:	inc    edx
  42d061:	add    BYTE PTR [ebx+0x0],dl
  42d064:	push   esp
  42d065:	add    BYTE PTR [eax+eax*1],cl
  42d068:	dec    ebx
  42d069:	add    BYTE PTR [ecx+0x0],dl
  42d06c:	pop    eax
  42d06d:	add    BYTE PTR [esi+0x0],cl
  42d070:	push   esp
  42d071:	add    BYTE PTR [ebx+0x0],al
  42d074:	pop    edx
  42d075:	add    BYTE PTR [ecx+0x0],bl
  42d078:	dec    esi
  42d079:	add    BYTE PTR [eax+eax*1+0x59],dl
  42d07d:	add    BYTE PTR [edx+0x0],dl
  42d080:	or     al,0x0
  42d082:	inc    ecx
  42d083:	add    BYTE PTR [edx+0x0],dl
  42d086:	inc    ecx
  42d087:	add    BYTE PTR [edx+0x0],bl
  42d08a:	inc    ecx
  42d08b:	add    BYTE PTR [edi+0x0],al
  42d08e:	inc    edx
  42d08f:	add    BYTE PTR [ebx+0x0],cl
  42d092:	push   edi
  42d093:	add    BYTE PTR [ebx+0x0],al
  42d096:	dec    ebx
  42d097:	add    BYTE PTR [esi+0x0],cl
  42d09a:	push   cs
  42d09b:	add    BYTE PTR [ebp+0x0],al
  42d09e:	push   ebx
  42d09f:	add    BYTE PTR [ebx+0x0],al
  42d0a2:	inc    esi
  42d0a3:	add    BYTE PTR [edx+0x0],dl
  42d0a6:	push   esp
  42d0a7:	add    BYTE PTR [esi+0x0],al
  42d0aa:	push   edx
  42d0ab:	add    BYTE PTR [ebx+0x0],cl
  42d0ae:	push   ecx
  42d0af:	add    BYTE PTR [edi+0x0],dl
  42d0b2:	inc    edx
  42d0b3:	add    BYTE PTR [edx+0x0],dl
  42d0b6:	dec    ecx
  42d0b7:	add    BYTE PTR [eax],cl
  42d0b9:	add    BYTE PTR [edx+0x0],dl
  42d0bc:	push   ecx
  42d0bd:	add    BYTE PTR [ebp+0x0],cl
  42d0c0:	push   ebp
  42d0c1:	add    BYTE PTR [edx+0x0],dl
  42d0c4:	dec    edx
  42d0c5:	add    BYTE PTR [eax+eax*1+0x49],cl
  42d0c9:	add    BYTE PTR [ebx],cl
  42d0cb:	add    BYTE PTR [eax+eax*1+0x52],dl
  42d0cf:	add    BYTE PTR [eax+eax*1+0x4a],cl
  42d0d3:	add    BYTE PTR [edx+0x0],bl
  42d0d6:	push   edx
  42d0d7:	add    BYTE PTR [eax+eax*1+0x52],cl
  42d0db:	add    BYTE PTR [esi+0x0],cl
  42d0de:	push   edx
  42d0df:	add    BYTE PTR [eax+0x0],dl
  42d0e2:	or     eax,0x55004b00
  42d0e7:	add    BYTE PTR [edi+0x0],al
  42d0ea:	dec    eax
  42d0eb:	add    BYTE PTR [eax+0x0],cl
  42d0ee:	push   edx
  42d0ef:	add    BYTE PTR [ecx+0x0],dl
  42d0f2:	dec    ebp
  42d0f3:	add    BYTE PTR [esi+0x0],al
  42d0f6:	dec    edx
  42d0f7:	add    BYTE PTR [esi+0x0],cl
  42d0fa:	inc    ecx
  42d0fb:	add    BYTE PTR [esi+0x0],al
  42d0fe:	push   cs
  42d0ff:	add    BYTE PTR [ebx+0x0],cl
  42d102:	push   edi
  42d103:	add    BYTE PTR [ecx+0x0],bl
  42d106:	push   ebx
  42d107:	add    BYTE PTR [edx+0x0],al
  42d10a:	dec    esi
  42d10b:	add    BYTE PTR [eax+0x0],bl
  42d10e:	inc    edx
  42d10f:	add    BYTE PTR [edx+0x0],bl
  42d112:	dec    esi
  42d113:	add    BYTE PTR [edi+0x0],dl
  42d116:	dec    ebp
  42d117:	add    BYTE PTR [esi+0x0],cl
  42d11a:	push   esp
  42d11b:	add    BYTE PTR [esi],cl
  42d11d:	add    BYTE PTR [eax+eax*1+0x55],al
  42d121:	add    BYTE PTR [ebx+0x0],cl
  42d124:	push   eax
  42d125:	add    BYTE PTR [ebp+0x0],dl
  42d128:	dec    eax
  42d129:	add    BYTE PTR [eax+0x0],bl
  42d12c:	inc    ecx
  42d12d:	add    BYTE PTR [ebp+0x0],cl
  42d130:	dec    edx
  42d131:	add    BYTE PTR [ecx+0x0],cl
  42d134:	push   ebx
  42d135:	add    BYTE PTR [ebx+0x0],cl
  42d138:	dec    edx
  42d139:	add    BYTE PTR [eax+eax*1],cl
  42d13c:	push   ebp
  42d13d:	add    BYTE PTR [eax+eax*1+0x47],dl
  42d141:	add    BYTE PTR [ecx+0x0],dl
  42d144:	dec    esp
  42d145:	add    BYTE PTR [esi+0x0],al
  42d148:	inc    ebx
  42d149:	add    BYTE PTR [edx+0x0],dl
  42d14c:	inc    ebx
  42d14d:	add    BYTE PTR [edx+0x0],bl
  42d150:	dec    edi
  42d151:	add    BYTE PTR [ebx+0x0],dl
  42d154:	pop    es
  42d155:	add    BYTE PTR [eax+eax*1+0x44],cl
  42d159:	add    BYTE PTR [ebp+0x0],cl
  42d15c:	inc    edi
  42d15d:	add    BYTE PTR [esi+0x0],cl
  42d160:	pop    eax
  42d161:	add    BYTE PTR [edx+0x0],bl
  42d164:	or     al,BYTE PTR [eax]
  42d166:	inc    ebp
  42d167:	add    BYTE PTR [edx+0x0],cl
  42d16a:	push   ebx
  42d16b:	add    BYTE PTR [eax+0x0],cl
  42d16e:	inc    ebp
  42d16f:	add    BYTE PTR [edx+0x0],bl
  42d172:	push   ebx
  42d173:	add    BYTE PTR [eax+0x0],bl
  42d176:	push   esi
  42d177:	add    BYTE PTR [esi+0x0],al
  42d17a:	or     eax,DWORD PTR [eax]
  42d17c:	push   edi
  42d17d:	add    BYTE PTR [edx+0x0],dl
  42d180:	inc    ecx
  42d181:	add    BYTE PTR [esi+0x0],dl
  42d184:	dec    ebp
  42d185:	add    BYTE PTR [edx+0x0],cl
  42d188:	dec    esi
  42d189:	add    BYTE PTR [eax+eax*1+0x55],cl
  42d18d:	add    BYTE PTR [ebp+0x0],dl
  42d190:	inc    ebx
  42d191:	add    BYTE PTR [ebx],cl
  42d193:	add    BYTE PTR [ecx+0x0],bl
  42d196:	push   ebp
  42d197:	add    BYTE PTR [ebp+0x0],al
  42d19a:	inc    ebp
  42d19b:	add    BYTE PTR [edi+0x0],dl
  42d19e:	inc    ebp
  42d19f:	add    BYTE PTR [edx+0x0],cl
  42d1a2:	inc    ecx
  42d1a3:	add    BYTE PTR [edi+0x0],al
  42d1a6:	inc    ecx
  42d1a7:	add    BYTE PTR [esi+0x0],al
  42d1aa:	or     eax,DWORD PTR [eax]
  42d1ac:	dec    esp
  42d1ad:	add    BYTE PTR [ebx+0x0],cl
  42d1b0:	dec    eax
  42d1b1:	add    BYTE PTR [edi+0x0],al
  42d1b4:	pop    eax
  42d1b5:	add    BYTE PTR [edx+0x0],bl
  42d1b8:	inc    edx
  42d1b9:	add    BYTE PTR [edi+0x0],dl
  42d1bc:	push   esp
  42d1bd:	add    BYTE PTR [esi+0x0],al
  42d1c0:	push   edi
  42d1c1:	add    BYTE PTR [esi],cl
  42d1c3:	add    BYTE PTR [ecx+0x0],al
  42d1c6:	push   ebp
  42d1c7:	add    BYTE PTR [ecx+0x0],al
  42d1ca:	inc    esp
  42d1cb:	add    BYTE PTR [eax+eax*1+0x52],al
  42d1cf:	add    BYTE PTR [eax+eax*1+0x52],al
  42d1d3:	add    BYTE PTR [ecx+0x0],dl
  42d1d6:	inc    ebp
  42d1d7:	add    BYTE PTR [esi+0x0],al
  42d1da:	push   edi
  42d1db:	add    BYTE PTR [eax+eax*1+0x58],cl
  42d1df:	add    BYTE PTR [edi],al
  42d1e1:	add    BYTE PTR [eax+eax*1+0x54],cl
  42d1e5:	add    BYTE PTR [ebp+0x0],dl
  42d1e8:	push   esi
  42d1e9:	add    BYTE PTR [esi+0x0],al
  42d1ec:	pop    ecx
  42d1ed:	add    BYTE PTR [edi+0x0],dl
  42d1f0:	or     al,BYTE PTR [eax]
  42d1f2:	inc    esp
  42d1f3:	add    BYTE PTR [eax+eax*1+0x58],dl
  42d1f7:	add    BYTE PTR [edi+0x0],al
  42d1fa:	push   esp
  42d1fb:	add    BYTE PTR [edx+0x0],al
  42d1fe:	inc    edi
  42d1ff:	add    BYTE PTR [eax+eax*1+0x4e],al
  42d203:	add    BYTE PTR [ebp+0x0],al
  42d206:	or     eax,DWORD PTR [eax]
  42d208:	inc    ebp
  42d209:	add    BYTE PTR [ebx+0x0],dl
  42d20c:	pop    edx
  42d20d:	add    BYTE PTR [eax+0x0],bl
  42d210:	inc    esp
  42d211:	add    BYTE PTR [edx+0x0],dl
  42d214:	dec    ecx
  42d215:	add    BYTE PTR [edi+0x0],dl
  42d218:	push   eax
  42d219:	add    BYTE PTR [ecx+0x0],bl
  42d21c:	inc    ecx
  42d21d:	add    BYTE PTR [ecx],cl
  42d21f:	add    BYTE PTR [esi+0x0],al
  42d222:	inc    edi
  42d223:	add    BYTE PTR [eax+eax*1+0x58],cl
  42d227:	add    BYTE PTR [esi+0x0],al
  42d22a:	dec    eax
  42d22b:	add    BYTE PTR [ebp+0x0],al
  42d22e:	inc    ebp
  42d22f:	add    BYTE PTR [eax+eax*1+0xc],al
  42d233:	add    BYTE PTR [esi+0x0],cl
  42d236:	dec    edi
  42d237:	add    BYTE PTR [edx+0x0],bl
  42d23a:	inc    ebx
  42d23b:	add    BYTE PTR [eax+eax*1+0x50],dl
  42d23f:	add    BYTE PTR [edi+0x0],dl
  42d242:	inc    esp
  42d243:	add    BYTE PTR [ebx+0x0],dl
  42d246:	push   ecx
  42d247:	add    BYTE PTR [ecx+0x0],al
  42d24a:	inc    esi
  42d24b:	add    BYTE PTR [ebx],cl
  42d24d:	add    BYTE PTR [edi+0x0],cl
  42d250:	pop    eax
  42d251:	add    BYTE PTR [eax+eax*1+0x4a],cl
  42d255:	add    BYTE PTR [edi+0x0],cl
  42d258:	pop    ecx
  42d259:	add    BYTE PTR [eax+0x0],cl
  42d25c:	dec    edx
  42d25d:	add    BYTE PTR [eax+eax*1+0x54],al
  42d261:	add    BYTE PTR [ebp+0x0],dl
  42d264:	or     al,0x0
  42d266:	push   ebp
  42d267:	add    BYTE PTR [esi+0x0],al
  42d26a:	inc    ecx
  42d26b:	add    BYTE PTR [esi+0x0],al
  42d26e:	inc    ecx
  42d26f:	add    BYTE PTR [eax+eax*1+0x41],cl
  42d273:	add    BYTE PTR [eax+eax*1+0x53],cl
  42d277:	add    BYTE PTR [eax+eax*1+0x42],dl
  42d27b:	add    BYTE PTR [ecx+0x0],cl
  42d27e:	push   cs
  42d27f:	add    BYTE PTR [ebp+0x0],cl
  42d282:	dec    esp
  42d283:	add    BYTE PTR [esi+0x0],dl
  42d286:	dec    edx
  42d287:	add    BYTE PTR [esi+0x0],cl
  42d28a:	inc    ebp
  42d28b:	add    BYTE PTR [edx+0x0],bl
  42d28e:	pop    edx
  42d28f:	add    BYTE PTR [ebx+0x0],cl
  42d292:	dec    edx
  42d293:	add    BYTE PTR [ecx+0x0],dl
  42d296:	inc    edx
  42d297:	add    BYTE PTR [esi+0x0],al
  42d29a:	push   eax
  42d29b:	add    BYTE PTR [esi],cl
  42d29d:	add    BYTE PTR [esi+0x0],al
  42d2a0:	dec    ebx
  42d2a1:	add    BYTE PTR [ebp+0x0],al
  42d2a4:	dec    esp
  42d2a5:	add    BYTE PTR [edx+0x0],dl
  42d2a8:	pop    ecx
  42d2a9:	add    BYTE PTR [esi+0x0],cl
  42d2ac:	dec    esi
  42d2ad:	add    BYTE PTR [ebp+0x0],dl
  42d2b0:	pop    ecx
  42d2b1:	add    BYTE PTR [ecx+0x0],bl
  42d2b4:	inc    ebx
  42d2b5:	add    BYTE PTR [edx+0x0],bl
  42d2b8:	inc    ebx
  42d2b9:	add    BYTE PTR [edx],cl
  42d2bb:	add    BYTE PTR [ebp+0x0],dl
  42d2be:	inc    edx
  42d2bf:	add    BYTE PTR [ebx+0x0],al
  42d2c2:	dec    ebp
  42d2c3:	add    BYTE PTR [esi+0x0],dl
  42d2c6:	push   edi
  42d2c7:	add    BYTE PTR [edi+0x0],cl
  42d2ca:	inc    esp
  42d2cb:	add    BYTE PTR [ebx+0x0],al
  42d2ce:	push   edx
  42d2cf:	add    BYTE PTR [edx],cl
  42d2d1:	add    BYTE PTR [esi+0x0],cl
  42d2d4:	dec    edi
  42d2d5:	add    BYTE PTR [eax+eax*1+0x53],al
  42d2d9:	add    BYTE PTR [esi+0x0],al
  42d2dc:	pop    edx
  42d2dd:	add    BYTE PTR [edi+0x0],cl
  42d2e0:	inc    ecx
  42d2e1:	add    BYTE PTR [edi+0x0],al
  42d2e4:	inc    ebp
  42d2e5:	add    BYTE PTR [edi],al
  42d2e7:	add    BYTE PTR [esi+0x0],cl
  42d2ea:	push   ebp
  42d2eb:	add    BYTE PTR [ecx+0x0],cl
  42d2ee:	dec    esp
  42d2ef:	add    BYTE PTR [ebx+0x0],dl
  42d2f2:	push   esi
  42d2f3:	add    BYTE PTR [eax+eax*1+0xd],al
  42d2f7:	add    BYTE PTR [edx+0x0],cl
  42d2fa:	pop    eax
  42d2fb:	add    BYTE PTR [ecx+0x0],bl
  42d2fe:	push   ecx
  42d2ff:	add    BYTE PTR [eax+0x0],cl
  42d302:	push   eax
  42d303:	add    BYTE PTR [ebx+0x0],dl
  42d306:	dec    eax
  42d307:	add    BYTE PTR [eax+0x0],cl
  42d30a:	inc    edi
  42d30b:	add    BYTE PTR [eax+0x0],bl
  42d30e:	push   eax
  42d30f:	add    BYTE PTR [esi+0x0],cl
  42d312:	or     al,0x0
  42d314:	dec    esi
  42d315:	add    BYTE PTR [eax+0x0],bl
  42d318:	push   esp
  42d319:	add    BYTE PTR [ecx+0x0],cl
  42d31c:	dec    ebx
  42d31d:	add    BYTE PTR [eax+eax*1+0x4c],al
  42d321:	add    BYTE PTR [ebp+0x0],al
  42d324:	dec    ebx
  42d325:	add    BYTE PTR [ecx+0x0],al
  42d328:	dec    edx
  42d329:	add    BYTE PTR [esi+0x0],dl
  42d32c:	or     eax,DWORD PTR [eax]
  42d32e:	push   ebx
  42d32f:	add    BYTE PTR [esi+0x0],cl
  42d332:	push   edi
  42d333:	add    BYTE PTR [eax+0x0],dl
  42d336:	inc    ebp
  42d337:	add    BYTE PTR [edi+0x0],dl
  42d33a:	push   ebp
  42d33b:	add    BYTE PTR [ecx+0x0],dl
  42d33e:	push   ebp
  42d33f:	add    BYTE PTR [esi+0x0],al
  42d342:	push   ebx
  42d343:	add    BYTE PTR [eax],cl
  42d345:	add    BYTE PTR [edi+0x0],cl
  42d348:	inc    esi
  42d349:	add    BYTE PTR [edx+0x0],dl
  42d34c:	dec    eax
  42d34d:	add    BYTE PTR [eax+0x0],dl
  42d350:	push   ebp
  42d351:	add    BYTE PTR [eax+0x0],dl
  42d354:	pop    ecx
  42d355:	add    BYTE PTR [edx],cl
  42d357:	add    BYTE PTR [edi+0x0],dl
  42d35a:	dec    eax
  42d35b:	add    BYTE PTR [edx+0x0],al
  42d35e:	dec    ecx
  42d35f:	add    BYTE PTR [eax+eax*1+0x50],dl
  42d363:	add    BYTE PTR [eax+0x0],cl
  42d366:	push   edx
  42d367:	add    BYTE PTR [ecx+0x0],bl
  42d36a:	push   edi
  42d36b:	add    BYTE PTR [eax],cl
  42d36d:	add    BYTE PTR [edi+0x0],cl
  42d370:	push   eax
  42d371:	add    BYTE PTR [eax+eax*1+0x53],al
  42d375:	add    BYTE PTR [edx+0x0],dl
  42d378:	pop    edx
  42d379:	add    BYTE PTR [ebp+0x0],dl
  42d37c:	inc    edx
  42d37d:	add    BYTE PTR [ecx],cl
  42d37f:	add    BYTE PTR [ebp+0x0],al
  42d382:	pop    ecx
  42d383:	add    BYTE PTR [esi+0x0],dl
  42d386:	push   ebx
  42d387:	add    BYTE PTR [edx+0x0],bl
  42d38a:	push   edx
  42d38b:	add    BYTE PTR [edx+0x0],al
  42d38e:	dec    edi
  42d38f:	add    BYTE PTR [edx+0x0],bl
  42d392:	push   cs
  42d393:	add    BYTE PTR [eax+0x0],dl
  42d396:	inc    ecx
  42d397:	add    BYTE PTR [ebp+0x0],al
  42d39a:	inc    esi
  42d39b:	add    BYTE PTR [esi+0x0],dl
  42d39e:	inc    esp
  42d39f:	add    BYTE PTR [edi+0x0],dl
  42d3a2:	push   edx
  42d3a3:	add    BYTE PTR [ecx+0x0],cl
  42d3a6:	push   eax
  42d3a7:	add    BYTE PTR [edi+0x0],cl
  42d3aa:	dec    edx
  42d3ab:	add    BYTE PTR [ebp+0x0],dl
  42d3ae:	push   esi
  42d3af:	add    BYTE PTR [eax],cl
  42d3b1:	add    BYTE PTR [eax+0x0],dl
  42d3b4:	push   esp
  42d3b5:	add    BYTE PTR [ecx+0x0],cl
  42d3b8:	dec    eax
  42d3b9:	add    BYTE PTR [eax+0x0],bl
  42d3bc:	push   edi
  42d3bd:	add    BYTE PTR [ecx+0x0],bl
  42d3c0:	dec    esp
  42d3c1:	add    BYTE PTR [ecx],cl
  42d3c3:	add    BYTE PTR [edx+0x0],dl
  42d3c6:	inc    edi
  42d3c7:	add    BYTE PTR [esi+0x0],cl
  42d3ca:	push   eax
  42d3cb:	add    BYTE PTR [ebp+0x0],dl
  42d3ce:	pop    edx
  42d3cf:	add    BYTE PTR [edx+0x0],bl
  42d3d2:	dec    edi
  42d3d3:	add    BYTE PTR [ecx+0x0],al
  42d3d6:	or     BYTE PTR [eax],al
  42d3d8:	push   edx
  42d3d9:	add    BYTE PTR [ecx+0x0],bl
  42d3dc:	inc    ebp
  42d3dd:	add    BYTE PTR [ebp+0x0],cl
  42d3e0:	push   ebx
  42d3e1:	add    BYTE PTR [edx+0x0],dl
  42d3e4:	inc    ebx
  42d3e5:	add    BYTE PTR [ecx+0x0],al
  42d3e8:	or     eax,0x4f005a00
  42d3ed:	add    BYTE PTR [edi+0x0],cl
  42d3f0:	pop    eax
  42d3f1:	add    BYTE PTR [edx+0x0],bl
  42d3f4:	push   ecx
  42d3f5:	add    BYTE PTR [edx+0x0],dl
  42d3f8:	dec    ebp
  42d3f9:	add    BYTE PTR [eax+eax*1+0x57],al
  42d3fd:	add    BYTE PTR [esi+0x0],cl
  42d400:	dec    ebx
  42d401:	add    BYTE PTR [ecx+0x0],al
  42d404:	or     BYTE PTR [eax],al
  42d406:	push   ebx
  42d407:	add    BYTE PTR [esi+0x0],dl
  42d40a:	push   edx
  42d40b:	add    BYTE PTR [ebp+0x0],dl
  42d40e:	push   edi
  42d40f:	add    BYTE PTR [eax+eax*1+0x51],al
  42d413:	add    BYTE PTR [ebx+0x0],al
  42d416:	or     eax,DWORD PTR [eax]
  42d418:	push   esp
  42d419:	add    BYTE PTR [eax+0x0],dl
  42d41c:	push   edx
  42d41d:	add    BYTE PTR [eax+eax*1+0x57],dl
  42d421:	add    BYTE PTR [ecx+0x0],bl
  42d424:	inc    esi
  42d425:	add    BYTE PTR [edi+0x0],al
  42d428:	push   esp
  42d429:	add    BYTE PTR [esi+0x0],cl
  42d42c:	inc    ebp
  42d42d:	add    BYTE PTR [ecx],cl
  42d42f:	add    BYTE PTR [ebp+0x0],dl
  42d432:	inc    edi
  42d433:	add    BYTE PTR [esi+0x0],cl
  42d436:	dec    eax
  42d437:	add    BYTE PTR [edx+0x0],al
  42d43a:	push   esp
  42d43b:	add    BYTE PTR [esi+0x0],dl
  42d43e:	dec    edx
  42d43f:	add    BYTE PTR [eax+0x0],dl
  42d442:	or     eax,DWORD PTR [eax]
  42d444:	dec    esi
  42d445:	add    BYTE PTR [esi+0x0],dl
  42d448:	pop    eax
  42d449:	add    BYTE PTR [esi+0x0],dl
  42d44c:	inc    ebx
  42d44d:	add    BYTE PTR [ecx+0x0],bl
  42d450:	push   ebp
  42d451:	add    BYTE PTR [ebp+0x0],dl
  42d454:	inc    ebx
  42d455:	add    BYTE PTR [ebp+0x0],cl
  42d458:	push   ebp
  42d459:	add    BYTE PTR [eax],cl
  42d45b:	add    BYTE PTR [ebp+0x0],dl
  42d45e:	dec    ebp
  42d45f:	add    BYTE PTR [eax+0x0],bl
  42d462:	pop    edx
  42d463:	add    BYTE PTR [edx+0x0],bl
  42d466:	pop    edx
  42d467:	add    BYTE PTR [edi+0x0],al
  42d46a:	inc    esp
  42d46b:	add    BYTE PTR [ebx],cl
  42d46d:	add    BYTE PTR [ebp+0x0],dl
  42d470:	push   ebx
  42d471:	add    BYTE PTR [edx+0x0],cl
  42d474:	inc    ecx
  42d475:	add    BYTE PTR [ebx+0x0],cl
  42d478:	inc    edx
  42d479:	add    BYTE PTR [eax+eax*1+0x59],al
  42d47d:	add    BYTE PTR [ebp+0x0],dl
  42d480:	dec    ebx
  42d481:	add    BYTE PTR [ebp+0x0],cl
  42d484:	or     BYTE PTR [eax],al
  42d486:	inc    ecx
  42d487:	add    BYTE PTR [edi+0x0],cl
  42d48a:	push   eax
  42d48b:	add    BYTE PTR [eax+0x0],dl
  42d48e:	dec    ecx
  42d48f:	add    BYTE PTR [edx+0x0],bl
  42d492:	inc    esp
  42d493:	add    BYTE PTR [eax+0x0],cl
  42d496:	push   cs
  42d497:	add    BYTE PTR [ebp+0x0],dl
  42d49a:	push   esp
  42d49b:	add    BYTE PTR [ecx+0x0],bl
  42d49e:	inc    ebp
  42d49f:	add    BYTE PTR [edx+0x0],dl
  42d4a2:	inc    esi
  42d4a3:	add    BYTE PTR [ebp+0x0],dl
  42d4a6:	inc    ebx
  42d4a7:	add    BYTE PTR [ebp+0x0],cl
  42d4aa:	push   ecx
  42d4ab:	add    BYTE PTR [edx+0x0],cl
  42d4ae:	dec    eax
  42d4af:	add    BYTE PTR [ebx+0x0],cl
  42d4b2:	push   ecx
  42d4b3:	add    BYTE PTR ds:0x49005600,cl
  42d4b9:	add    BYTE PTR [eax+eax*1+0x4a],dl
  42d4bd:	add    BYTE PTR [edi+0x0],cl
  42d4c0:	dec    eax
  42d4c1:	add    BYTE PTR [eax+0x0],dl
  42d4c4:	push   esi
  42d4c5:	add    BYTE PTR [ebx+0x0],dl
  42d4c8:	push   eax
  42d4c9:	add    BYTE PTR [ebp+0x0],dl
  42d4cc:	inc    esp
  42d4cd:	add    BYTE PTR [ebp+0x0],dl
  42d4d0:	or     BYTE PTR [eax],al
  42d4d2:	push   esi
  42d4d3:	add    BYTE PTR [edi+0x0],al
  42d4d6:	inc    ebx
  42d4d7:	add    BYTE PTR [eax+eax*1+0x47],al
  42d4db:	add    BYTE PTR [edx+0x0],cl
  42d4de:	inc    ecx
  42d4df:	add    BYTE PTR [edi+0x0],al
  42d4e2:	push   cs
  42d4e3:	add    BYTE PTR [edi+0x0],dl
  42d4e6:	push   esi
  42d4e7:	add    BYTE PTR [edx+0x0],dl
  42d4ea:	push   eax
  42d4eb:	add    BYTE PTR [edi+0x0],cl
  42d4ee:	dec    edx
  42d4ef:	add    BYTE PTR [esi+0x0],cl
  42d4f2:	push   ebp
  42d4f3:	add    BYTE PTR [eax+0x0],bl
  42d4f6:	inc    ebp
  42d4f7:	add    BYTE PTR [eax+eax*1+0x50],al
  42d4fb:	add    BYTE PTR [edx+0x0],al
  42d4fe:	push   ecx
  42d4ff:	add    BYTE PTR [ebx],cl
  42d501:	add    BYTE PTR [esi+0x0],dl
  42d504:	dec    edx
  42d505:	add    BYTE PTR [eax+eax*1+0x47],cl
  42d509:	add    BYTE PTR [edi+0x0],dl
  42d50c:	inc    edi
  42d50d:	add    BYTE PTR [edi+0x0],al
  42d510:	pop    edx
  42d511:	add    BYTE PTR [ecx+0x0],bl
  42d514:	push   edx
  42d515:	add    BYTE PTR [eax+0x0],dl
  42d518:	or     al,BYTE PTR [eax]
  42d51a:	pop    ecx
  42d51b:	add    BYTE PTR [esi+0x0],cl
  42d51e:	inc    ebp
  42d51f:	add    BYTE PTR [esi+0x0],cl
  42d522:	dec    esp
  42d523:	add    BYTE PTR [edi+0x0],cl
  42d526:	inc    ebx
  42d527:	add    BYTE PTR [edx+0x0],cl
  42d52a:	push   edi
  42d52b:	add    BYTE PTR [eax+0x0],cl
  42d52e:	or     eax,0x4b005700
  42d533:	add    BYTE PTR [edi+0x0],al
  42d536:	push   esi
  42d537:	add    BYTE PTR [edi+0x0],al
  42d53a:	inc    esi
  42d53b:	add    BYTE PTR [ecx+0x0],bl
  42d53e:	dec    ebp
  42d53f:	add    BYTE PTR [eax+eax*1+0x57],cl
  42d543:	add    BYTE PTR [eax+eax*1+0x43],dl
  42d547:	add    BYTE PTR [eax+eax*1+0xd],al
  42d54b:	add    BYTE PTR [edi+0x0],dl
  42d54e:	dec    ebx
  42d54f:	add    BYTE PTR [eax+eax*1+0x45],dl
  42d553:	add    BYTE PTR [ebx+0x0],dl
  42d556:	dec    ebx
  42d557:	add    BYTE PTR [edx+0x0],dl
  42d55a:	push   ebx
  42d55b:	add    BYTE PTR [ecx+0x0],bl
  42d55e:	pop    eax
  42d55f:	add    BYTE PTR [eax+0x0],dl
  42d562:	push   ebx
  42d563:	add    BYTE PTR [ecx+0x0],cl
  42d566:	or     al,0x0
  42d568:	pop    ecx
  42d569:	add    BYTE PTR [ebx+0x0],al
  42d56c:	dec    ecx
  42d56d:	add    BYTE PTR [edi+0x0],al
  42d570:	push   esp
  42d571:	add    BYTE PTR [ecx+0x0],cl
  42d574:	push   edi
  42d575:	add    BYTE PTR [ebp+0x0],al
  42d578:	inc    esi
  42d579:	add    BYTE PTR [ecx+0x0],al
  42d57c:	inc    esp
  42d57d:	add    BYTE PTR [ecx+0x0],al
  42d580:	push   cs
  42d581:	add    BYTE PTR [edi+0x0],al
  42d584:	push   esp
  42d585:	add    BYTE PTR [eax+0x0],cl
  42d588:	push   ecx
  42d589:	add    BYTE PTR [ecx+0x0],al
  42d58c:	dec    esi
  42d58d:	add    BYTE PTR [ebp+0x0],cl
  42d590:	push   ecx
  42d591:	add    BYTE PTR [eax+eax*1+0x49],al
  42d595:	add    BYTE PTR [ebx+0x0],cl
  42d598:	push   esi
  42d599:	add    BYTE PTR [edx+0x0],al
  42d59c:	pop    eax
  42d59d:	add    BYTE PTR [ecx],cl
  42d59f:	add    BYTE PTR [eax+0x0],dl
  42d5a2:	dec    eax
  42d5a3:	add    BYTE PTR [ecx+0x0],dl
  42d5a6:	push   esi
  42d5a7:	add    BYTE PTR [eax+0x0],dl
  42d5aa:	push   esi
  42d5ab:	add    BYTE PTR [eax+eax*1+0x49],dl
  42d5af:	add    BYTE PTR [edi+0x0],cl
  42d5b2:	or     eax,DWORD PTR [eax]
  42d5b4:	pop    edx
  42d5b5:	add    BYTE PTR [esi+0x0],dl
  42d5b8:	push   edx
  42d5b9:	add    BYTE PTR [edi+0x0],dl
  42d5bc:	dec    esi
  42d5bd:	add    BYTE PTR [eax+eax*1+0x43],al
  42d5c1:	add    BYTE PTR [edi+0x0],dl
  42d5c4:	dec    ecx
  42d5c5:	add    BYTE PTR [edx+0x0],dl
  42d5c8:	push   eax
  42d5c9:	add    BYTE PTR [eax+eax*1],cl
  42d5cc:	pop    ecx
  42d5cd:	add    BYTE PTR [edi+0x0],dl
  42d5d0:	inc    ebx
  42d5d1:	add    BYTE PTR [esi+0x0],dl
  42d5d4:	push   esp
  42d5d5:	add    BYTE PTR [edx+0x0],bl
  42d5d8:	inc    ebp
  42d5d9:	add    BYTE PTR [eax+0x0],bl
  42d5dc:	dec    edi
  42d5dd:	add    BYTE PTR [esi+0x0],dl
  42d5e0:	inc    edx
  42d5e1:	add    BYTE PTR [edx+0x0],cl
  42d5e4:	or     DWORD PTR [eax],eax
  42d5e6:	pop    ecx
  42d5e7:	add    BYTE PTR [edi+0x0],dl
  42d5ea:	inc    ebp
  42d5eb:	add    BYTE PTR [ebx+0x0],cl
  42d5ee:	push   esp
  42d5ef:	add    BYTE PTR [ecx+0x0],al
  42d5f2:	inc    edx
  42d5f3:	add    BYTE PTR [edx+0x0],al
  42d5f6:	push   esp
  42d5f7:	add    BYTE PTR [eax+eax*1],cl
  42d5fa:	pop    edx
  42d5fb:	add    BYTE PTR [edx+0x0],al
  42d5fe:	push   edi
  42d5ff:	add    BYTE PTR [edx+0x0],al
  42d602:	dec    edi
  42d603:	add    BYTE PTR [ecx+0x0],dl
  42d606:	inc    edi
  42d607:	add    BYTE PTR [ebp+0x0],dl
  42d60a:	pop    ecx
  42d60b:	add    BYTE PTR [edi+0x0],al
  42d60e:	push   eax
  42d60f:	add    BYTE PTR [esi+0x0],al
  42d612:	or     DWORD PTR [eax],eax
  42d614:	pop    edx
  42d615:	add    BYTE PTR [edi+0x0],al
  42d618:	inc    edx
  42d619:	add    BYTE PTR [edx+0x0],cl
  42d61c:	push   edx
  42d61d:	add    BYTE PTR [esi+0x0],cl
  42d620:	dec    eax
  42d621:	add    BYTE PTR [ebx+0x0],dl
  42d624:	dec    esp
  42d625:	add    BYTE PTR [eax+eax*1],cl
  42d628:	pop    edx
  42d629:	add    BYTE PTR [ebx+0x0],al
  42d62c:	inc    esi
  42d62d:	add    BYTE PTR [eax+0x0],bl
  42d630:	push   esp
  42d631:	add    BYTE PTR [esi+0x0],cl
  42d634:	inc    ebx
  42d635:	add    BYTE PTR [esi+0x0],al
  42d638:	push   edx
  42d639:	add    BYTE PTR [ebx+0x0],al
  42d63c:	dec    esi
  42d63d:	add    BYTE PTR [esi+0x0],dl
  42d640:	or     al,BYTE PTR [eax]
  42d642:	pop    edx
  42d643:	add    BYTE PTR [eax+eax*1+0x48],dl
  42d647:	add    BYTE PTR [eax+eax*1+0x5a],cl
  42d64b:	add    BYTE PTR [ebx+0x0],cl
  42d64e:	inc    edi
  42d64f:	add    BYTE PTR [eax+eax*1+0x4a],dl
  42d653:	add    BYTE PTR [edx+0x0],dl
  42d656:	push   cs
  42d657:	add    BYTE PTR [edx+0x0],bl
  42d65a:	push   edx
  42d65b:	add    BYTE PTR [ebp+0x0],al
  42d65e:	pop    eax
  42d65f:	add    BYTE PTR [ebx+0x0],dl
  42d662:	push   ebp
  42d663:	add    BYTE PTR [edi+0x0],dl
  42d666:	push   edx
  42d667:	add    BYTE PTR [edi+0x0],dl
  42d66a:	inc    esp
  42d66b:	add    BYTE PTR [eax+0x0],dl
  42d66e:	push   esp
  42d66f:	add    BYTE PTR [ecx+0x0],al
  42d672:	push   ecx
	...
  42d67f:	add    BYTE PTR [esi],dh
  42d681:	popa   
  42d682:	xchg   edx,eax
  42d683:	pop    esi
  42d684:	xlat   BYTE PTR ds:[ebx]
  42d685:	(bad)  
  42d686:	(bad)  
  42d687:	imul   ebx,DWORD PTR [edi],0x556293af
  42d68d:	(bad)  
  42d68e:	lock or DWORD PTR [edi],ebp
  42d691:	fwait
  42d692:	add    DWORD PTR [eax],eax
  42d694:	adc    DWORD PTR [ecx],eax
  42d696:	add    BYTE PTR [eax],al
  42d698:	xor    DWORD PTR [edx],edi
  42d69a:	retf   0x9eac
  42d69d:	adc    eax,DWORD PTR [eax-0x3e5606]
  42d6a3:	aaa    
  42d6a4:	push   es
  42d6a5:	adc    eax,0x94cd11dc
  42d6aa:	xchg   al,bl
  42d6ac:	cmp    eax,0x5110be2
  42d6b1:	addr16 sahf 
  42d6b3:	jge    0x42d660
  42d6b5:	mov    BYTE PTR [ebx+0x58],ah
  42d6b8:	sub    edi,DWORD PTR gs:[edx+0x4b136999]
  42d6bf:	mov    DWORD PTR [ebx],ebx
  42d6c1:	xor    al,0xbb
  42d6c3:	ins    DWORD PTR es:[edi],dx
  42d6c4:	in     eax,0x3
  42d6c6:	cwde   
  42d6c7:	xor    al,0x99
  42d6c9:	mov    ds:0xebccfe08,al
  42d6ce:	(bad)  
  42d6cf:	pop    ebx
  42d6d0:	retf   
  42d6d1:	push   0x13
  42d6d3:	lock add DWORD PTR [ecx-0x1d],ebp
  42d6d7:	scas   eax,DWORD PTR es:[edi]
  42d6d8:	in     al,dx
  42d6d9:	pop    ebp
  42d6da:	in     eax,dx
  42d6db:	dec    esp
  42d6dc:	mov    al,0xc2
  42d6de:	adc    eax,0x61563d1b
  42d6e3:	pop    es
  42d6e4:	pop    esp
  42d6e5:	mov    ah,0xf2
  42d6e7:	daa    
  42d6e8:	mov    ebp,0x27a03214
  42d6ed:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42d6ee:	int3   
  42d6ef:	loop   0x42d68a
  42d6f1:	inc    esi
  42d6f2:	stos   BYTE PTR es:[edi],al
  42d6f3:	xor    BYTE PTR [ebx],bh
  42d6f5:	fmul   DWORD PTR [ecx+0xeb81573]
  42d6fb:	mov    al,0x2e
  42d6fd:	in     al,dx
  42d6fe:	jns    0x42d701
  42d700:	out    dx,eax
  42d701:	mov    dl,0x64
  42d703:	dec    esp
  42d704:	sub    al,0xf1
  42d706:	imul   edi,DWORD PTR [edx-0xc1ec657],0x4f
  42d70d:	jp     0x42d782
  42d70f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42d710:	call   0x66fe:0x92d1ae0
  42d717:	es into 
  42d719:	and    DWORD PTR [ecx+ebp*2-0x33885a7],edx
  42d720:	xchg   ebp,eax
  42d721:	enter  0xd990,0x14
  42d725:	stos   DWORD PTR es:[edi],eax
  42d726:	into   
  42d727:	cld    
  42d728:	cmp    eax,0x435b723a
  42d72d:	sbb    bl,BYTE PTR [ebx+0x64]
  42d730:	push   esp
  42d731:	jae    0x42d74b
  42d733:	xchg   esp,eax
  42d734:	xor    BYTE PTR [edx-0x70a8c8ae],bl
  42d73a:	ret    0x37dc
  42d73d:	test   al,0xc1
  42d73f:	inc    ebp
  42d740:	popf   
  42d741:	retf   
  42d742:	out    0x43,al
  42d744:	ja     0x42d792
  42d746:	(bad)  
  42d749:	pop    es
  42d74a:	add    al,0x7b
  42d74c:	fstp   DWORD PTR [esi-0x6a]
  42d74f:	(bad)  
  42d750:	rcl    BYTE PTR cs:[ecx-0x43e6ed7f],1
  42d757:	js     0x42d758
  42d759:	mov    ds:0xf155ef1b,eax
  42d75e:	sbb    BYTE PTR [eax-0x7e],bh
  42d761:	pop    esp
  42d762:	xor    esi,esp
  42d764:	sbb    ch,BYTE PTR [edi-0x26]
  42d767:	clc    
  42d768:	mov    ebp,0xfb82cdcd
  42d76d:	mov    eax,ds:0x21b7bd2d
  42d772:	not    ecx
  42d774:	je     0x42d77e
  42d776:	xchg   ebp,eax
  42d777:	adc    al,0x68
  42d779:	popf   
  42d77a:	sbb    DWORD PTR [edx-0x3dc7f6a],0x1e
  42d781:	jnp    0x42d71b
  42d783:	push   edi
  42d784:	add    al,0xca
  42d786:	mov    ds,WORD PTR [edx+eiz*8-0x5fc580f3]
  42d78d:	ss xor al,0xf0
  42d790:	adc    eax,DWORD PTR [edi+ecx*2-0x450bb661]
  42d797:	mov    dh,0x4f
  42d799:	cwde   
  42d79a:	push   cs
  42d79b:	out    dx,eax
  42d79c:	fiadd  DWORD PTR [ebx+eiz*4]
  42d79f:	lods   eax,DWORD PTR ds:[esi]
  42d7a0:	shl    BYTE PTR [edx-0x3bc71480],cl
  42d7a6:	loop   0x42d72b
  42d7a8:	jb     0x42d7e7
  42d7aa:	fsub   DWORD PTR [edx-0x1f]
  42d7ad:	out    0xfb,eax
  42d7af:	mov    edi,0xf99c0edc
  42d7b4:	std    
  42d7b5:	xchg   ebx,eax
  42d7b6:	shl    BYTE PTR [ecx-0x3a],1
  42d7b9:	inc    eax
  42d7ba:	pushf  
  42d7bb:	add    DWORD PTR [eax],eax
  42d7bd:	adc    DWORD PTR [ecx],eax
  42d7bf:	add    BYTE PTR [eax],al
  42d7c1:	jno    0x42d77d
  42d7c3:	xchg   ebx,eax
  42d7c4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42d7c5:	mov    ecx,0x157adef6
  42d7ca:	mov    esi,0x90f087b
  42d7cf:	in     eax,dx
  42d7d0:	loope  0x42d7a7
  42d7d2:	aam    0x6e
  42d7d4:	pop    edx
  42d7d5:	sbb    ah,0xc2
  42d7d8:	mov    cl,0xac
  42d7da:	cmp    DWORD PTR [ebx-0x3f],ecx
  42d7dd:	mov    bh,0x91
  42d7df:	cmovne esp,DWORD PTR [eax-0x7b761c40]
  42d7e6:	jnp    0x42d78b
  42d7e8:	popa   
  42d7e9:	ss push edx
  42d7eb:	pop    ebp
  42d7ec:	sbb    cl,BYTE PTR [esi+edx*8+0x152744a]
  42d7f3:	test   al,0xca
  42d7f5:	jle    0x42d7c9
  42d7f7:	mov    cl,0xc2
  42d7f9:	xor    eax,0x4c461c27
  42d7fe:	add    DWORD PTR [ecx-0x650ae1ff],ebp
  42d804:	mov    ds,WORD PTR [edi+eax*2]
  42d807:	ret    0xacac
  42d80a:	inc    esi
  42d80b:	sbb    DWORD PTR [eax+0x29d56b85],0x45
  42d812:	shl    BYTE PTR [ecx],1
  42d814:	xor    ebp,ebx
  42d816:	aad    0x2c
  42d818:	retf   
  42d819:	adc    DWORD PTR [edi+0x19],eax
  42d81c:	dec    ebx
  42d81d:	xchg   bl,bh
  42d81f:	sahf   
  42d820:	mov    ah,0x7f
  42d822:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42d823:	push   ds
  42d824:	sti    
  42d825:	jnp    0x42d80e
  42d827:	dec    ecx
  42d828:	std    
  42d829:	and    esp,DWORD PTR [esi-0x12]
  42d82c:	and    BYTE PTR [si-0x20],bl
  42d830:	mov    esi,0x697142df
  42d835:	mov    esi,0xff91756b
  42d83a:	ss mov ecx,ebx
  42d83d:	ins    DWORD PTR es:[edi],dx
  42d83e:	repz les ebx,FWORD PTR [edi+eax*2+0x1552ee00]
  42d846:	dec    esp
  42d847:	inc    eax
  42d848:	pusha  
  42d849:	push   ebx
  42d84a:	loope  0x42d88c
  42d84c:	ror    edi,0x26
  42d84f:	xchg   esp,eax
  42d850:	std    
  42d851:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42d852:	mov    cl,0xd4
  42d854:	loop   0x42d8b7
  42d856:	outs   dx,BYTE PTR ds:[esi]
  42d857:	push   edx
  42d858:	(bad)  
  42d859:	mov    edi,0xab3b133d
  42d85e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42d85f:	pop    esp
  42d860:	inc    edi
  42d861:	add    eax,ecx
  42d863:	jmp    0xbac99d0c
  42d868:	pop    ds
  42d869:	test   bl,cl
  42d86b:	test   DWORD PTR [eax-0x4f300b3d],edx
  42d871:	je     0x42d8f1
  42d873:	int3   
  42d874:	sub    dl,BYTE PTR [eax+0x4d]
  42d877:	xchg   edi,eax
  42d878:	push   edx
  42d879:	call   0xe9a0:0xd51c9507
  42d880:	fistp  QWORD PTR [eax-0xd]
  42d883:	cmp    al,0x19
  42d885:	mov    ds:0x1048c7af,eax
  42d88b:	xor    ch,BYTE PTR [ebx]
  42d88d:	dec    esi
  42d88e:	addr16 (bad) 
  42d891:	rcl    DWORD PTR [eax],1
  42d893:	test   DWORD PTR [edx],edx
  42d895:	mov    dl,0x80
  42d897:	cmp    cl,BYTE PTR [ebp-0x5e769c4a]
  42d89d:	(bad)  ds:0x6034d6f1
  42d8a3:	mov    esi,0x7fdb0758
  42d8a8:	ds out 0x74,al
  42d8ab:	mov    edx,?
  42d8ad:	jae    0x42d8ee
  42d8af:	pushf  
  42d8b0:	rol    DWORD PTR [edi],cl
  42d8b2:	pop    es
  42d8b3:	rcl    DWORD PTR [ebx+0x304e6a79],1
  42d8b9:	or     bl,BYTE PTR ds:0xeff05dff
  42d8bf:	mov    bh,0xd
  42d8c1:	jnp    0x42d8a5
  42d8c3:	pop    edx
  42d8c4:	pop    ds
  42d8c5:	mov    ds:0xdd056a20,eax
  42d8ca:	dec    edx
  42d8cb:	fcos   
  42d8cd:	retf   
  42d8ce:	aas    
  42d8cf:	fnstcw WORD PTR [esi+ebx*8]
  42d8d2:	push   eax
  42d8d3:	or     edx,DWORD PTR [edx-0x3c]
  42d8d6:	pop    ebx
  42d8d7:	fst    st(6)
  42d8d9:	lahf   
  42d8da:	or     dl,al
  42d8dc:	dec    eax
  42d8dd:	das    
  42d8de:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42d8df:	adc    ebx,esp
  42d8e1:	ret    0xcb2c
  42d8e4:	add    DWORD PTR [eax],eax
  42d8e6:	adc    DWORD PTR [ecx],eax
  42d8e8:	add    BYTE PTR [eax],al
  42d8ea:	repnz icebp 
  42d8ec:	dec    ebx
  42d8ed:	ins    BYTE PTR es:[edi],dx
  42d8ee:	mov    ds:0xaaed0609,al
  42d8f3:	icebp  
  42d8f4:	in     al,0x58
  42d8f6:	and    dl,BYTE PTR [ebp+0x52]
  42d8f9:	bound  ecx,QWORD PTR [esi+ebx*4-0x5c]
  42d8fd:	cmp    eax,0xee146140
  42d902:	into   
  42d903:	aaa    
  42d904:	sti    
  42d905:	iret   
  42d906:	(bad)  
  42d907:	fwait
  42d908:	inc    edx
  42d909:	xor    al,BYTE PTR [eax]
  42d90b:	sbb    esp,DWORD PTR [ebp-0x59]
  42d90e:	xor    esi,edi
  42d910:	xchg   ebp,eax
  42d911:	clc    
  42d912:	test   DWORD PTR [ecx-0x8],ebp
  42d915:	lahf   
  42d916:	and    al,BYTE PTR [esi]
  42d918:	cmp    BYTE PTR [ebp+ebx*4+0x9],dl
  42d91c:	pop    edx
  42d91d:	add    DWORD PTR [eax],0x9d966dd6
  42d923:	out    dx,eax
  42d924:	sub    BYTE PTR [ebp+0x7d],bh
  42d927:	rcr    BYTE PTR [esi+0x0],1
  42d92a:	loopne 0x42d974
  42d92c:	dec    ecx
  42d92d:	xchg   ecx,eax
  42d92e:	add    eax,0xd9f50aaa
  42d933:	jno    0x42d98d
  42d935:	mov    bl,0xb0
  42d937:	or     al,0x6d
  42d939:	cmp    DWORD PTR [edi-0x67],edi
  42d93c:	push   eax
  42d93d:	aad    0xec
  42d93f:	push   eax
  42d940:	scas   eax,DWORD PTR es:[edi]
  42d941:	sbb    al,0x61
  42d943:	mov    al,0xf7
  42d945:	mov    ebx,0xc6b0dc91
  42d94a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42d94b:	mov    ds:0xf0d6ada2,al
  42d950:	aas    
  42d951:	mov    ds:0xdc38895e,eax
  42d956:	mov    ds:0x4e2d9684,al
  42d95b:	idiv   DWORD PTR [esp+ebx*2-0x6b0fe65b]
  42d962:	lods   eax,DWORD PTR ds:[esi]
  42d963:	repnz (bad) 
  42d965:	adc    eax,0x2236ccc3
  42d96a:	arpl   WORD PTR [edx],bx
  42d96c:	sar    BYTE PTR [ebx+ecx*2],0x17
  42d970:	mov    edx,DWORD PTR [ebx-0x187c10ec]
  42d976:	rcl    edx,0x3
  42d979:	xchg   BYTE PTR [ecx],bh
  42d97b:	fcmove st,st(1)
  42d97d:	int    0x5d
  42d97f:	loop   0x42d9a0
  42d981:	test   al,0xe
  42d983:	push   0xfffffff4
  42d985:	loopne 0x42d9bd
  42d987:	out    dx,al
  42d988:	adc    eax,0xe32b364d
  42d98d:	aam    0xa7
  42d98f:	scas   al,BYTE PTR es:[edi]
  42d990:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42d991:	idiv   DWORD PTR [edx-0x1b]
  42d994:	out    dx,al
  42d995:	sbb    DWORD PTR [esp+edi*1],ecx
  42d998:	xor    eax,0x7bdeace5
  42d99d:	xchg   esi,eax
  42d99e:	jae    0x42d999
  42d9a0:	iret   
  42d9a1:	inc    ecx
  42d9a2:	bnd jns 0x42d9f3
  42d9a5:	outs   dx,DWORD PTR ds:[esi]
  42d9a6:	loop   0x42d9bf
  42d9a8:	mov    ebp,0xc102f79a
  42d9ad:	add    al,0xcc
  42d9b0:	test   al,0x42
  42d9b2:	dec    edx
  42d9b3:	lds    eax,FWORD PTR [edi+0x1007f561]
  42d9b9:	cmp    eax,0x8d5e2515
  42d9be:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42d9bf:	imul   bl
  42d9c1:	push   ss
  42d9c2:	add    BYTE PTR [ecx-0x27ab3a60],cl
  42d9c8:	gs ins DWORD PTR es:[edi],dx
  42d9ca:	push   ecx
  42d9cb:	and    DWORD PTR [ebx],0xffffffc4
  42d9ce:	jge    0x42d97b
  42d9d0:	mov    esi,0x5dfda175
  42d9d5:	xchg   ebx,eax
  42d9d6:	shr    esp,cl
  42d9d8:	fsubp  st(0),st
  42d9da:	mov    ecx,0x35fddc97
  42d9df:	mov    edi,0xb3d829ca
  42d9e4:	imul   edx,DWORD PTR [ebx+0x4d],0x8013efa0
  42d9eb:	fld    QWORD PTR [ebx]
  42d9ed:	mov    esp,0xf2687a7a
  42d9f2:	lods   eax,DWORD PTR ds:[esi]
  42d9f3:	div    BYTE PTR [ebp+eiz*4-0x2d5034f2]
  42d9fa:	and    eax,0x704ddb2f
  42d9ff:	std    
  42da00:	idiv   BYTE PTR [edi]
  42da02:	fisttp WORD PTR [ebp-0xf]
  42da05:	(bad)  
  42da06:	out    0x7e,al
  42da08:	cwde   
  42da09:	push   0x1cd4eea
  42da0e:	add    BYTE PTR [ecx],dl
  42da10:	add    DWORD PTR [eax],eax
  42da12:	add    BYTE PTR [esi],cl
  42da14:	mov    bh,BYTE PTR [esi-0x28]
  42da17:	aaa    
  42da18:	das    
  42da19:	push   ebx
  42da1a:	ins    DWORD PTR es:[edi],dx
  42da1b:	jmp    0x1f250b54
  42da20:	stc    
  42da21:	sub    dl,BYTE PTR [eax-0x52ae2573]
  42da27:	push   ebx
  42da28:	and    BYTE PTR [edi+0x2c],ah
  42da2b:	ins    BYTE PTR es:[edi],dx
  42da2c:	int3   
  42da2d:	and    esp,DWORD PTR [edi+0x49]
  42da30:	jne    0x42da6a
  42da32:	cli    
  42da33:	mov    edx,0x6ca0267e
  42da38:	aad    0x1
  42da3a:	mov    bl,0xbb
  42da3c:	and    bh,BYTE PTR [ebx]
  42da3e:	inc    esp
  42da3f:	xchg   ebx,eax
  42da40:	lods   al,BYTE PTR ds:[esi]
  42da41:	fsubp  st(5),st
  42da43:	mov    cl,0x16
  42da45:	(bad)  
  42da46:	shr    BYTE PTR [eax+eax*4],0xc9
  42da4a:	mov    dh,0x82
  42da4c:	fcomp  DWORD PTR [edx+edi*4-0x28]
  42da50:	arpl   WORD PTR [esp+edx*2+0x28],sp
  42da54:	inc    ecx
  42da55:	inc    esi
  42da56:	xchg   ebx,eax
  42da57:	xchg   DWORD PTR [edi-0x63],esi
  42da5a:	call   0xd73b516e
  42da5f:	mov    ebp,0xd8fff787
  42da64:	xor    eax,0x45fec618
  42da69:	pop    edi
  42da6a:	inc    esp
  42da6b:	lds    ebx,FWORD PTR [edi-0x71]
  42da6e:	outs   dx,BYTE PTR ds:[esi]
  42da6f:	push   edi
  42da70:	add    eax,0x3a4dad7a
  42da75:	neg    DWORD PTR [edi-0x2e]
  42da78:	fnstsw WORD PTR [ecx+0x6ca41ca6]
  42da7e:	inc    esi
  42da7f:	(bad)  [esi-0x33d71236]
  42da85:	lock test esp,ecx
  42da88:	adc    DWORD PTR [ecx+0x3],esp
  42da8b:	mov    dl,0xae
  42da8d:	add    eax,0x1c9400b1
  42da92:	mov    eax,ds:0xb9ba2b27
  42da97:	push   esi
  42da98:	push   esp
  42da99:	jne    0x42da8c
  42da9b:	scas   eax,DWORD PTR es:[edi]
  42da9c:	into   
  42da9d:	xchg   edi,eax
  42da9e:	lahf   
  42da9f:	scas   eax,DWORD PTR es:[edi]
  42daa0:	retf   0xe75
  42daa3:	inc    ecx
  42daa4:	(bad)
  42daa7:	cmc    
  42daa8:	push   ebx
  42daa9:	xor    eax,0x6c084d46
  42daae:	enter  0x4dc5,0x71
  42dab2:	stc    
  42dab3:	mov    eax,0xf5727515
  42dab8:	mov    ebp,0x4bee4173
  42dabd:	sbb    BYTE PTR [ecx],ch
  42dabf:	inc    ebp
  42dac0:	ret    
  42dac1:	add    ebx,DWORD PTR [ecx+0x58]
  42dac4:	cmp    ebp,eax
  42dac6:	cmp    al,0x33
  42dac8:	mov    bl,0x7
  42daca:	pop    ebp
  42dacb:	mov    bl,BYTE PTR [eax-0x6]
  42dace:	add    ebx,DWORD PTR [edx]
  42dad0:	(bad)  
  42dad1:	cdq    
  42dad2:	add    DWORD PTR [edx-0x4d],ebp
  42dad5:	sbb    al,BYTE PTR [ecx]
  42dad7:	jno    0x42db30
  42dad9:	pusha  
  42dada:	pushf  
  42dadb:	cmp    ebp,DWORD PTR [edx]
  42dadd:	mov    ch,0xf
  42dadf:	xor    esi,DWORD PTR [edi-0x57]
  42dae2:	mov    ebp,ebp
  42dae4:	push   0xffffffca
  42dae6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42dae7:	popa   
  42dae8:	in     eax,0x4
  42daea:	pop    ss
  42daeb:	jns    0x42dab6
  42daed:	sub    ebx,eax
  42daef:	test   BYTE PTR [ebx+0x72],dl
  42daf2:	pop    ecx
  42daf3:	pop    ebp
  42daf4:	mov    ah,BYTE PTR [eax+ecx*1-0x3134d2e0]
  42dafb:	xchg   edi,eax
  42dafc:	call   FWORD PTR [edi]
  42dafe:	push   esi
  42daff:	add    al,0x10
  42db01:	out    dx,eax
  42db02:	inc    edx
  42db03:	inc    eax
  42db04:	mov    ebx,0xee8a94a5
  42db09:	mov    ch,0x7f
  42db0b:	dec    ecx
  42db0c:	lahf   
  42db0d:	(bad)  
  42db0e:	loop   0x42db3f
  42db10:	aad    0xa3
  42db12:	outs   dx,BYTE PTR ds:[esi]
  42db13:	xchg   ebp,eax
  42db14:	xlat   BYTE PTR ds:[ebx]
  42db15:	(bad)  
  42db16:	outs   dx,DWORD PTR ds:[esi]
  42db17:	je     0x42db2c
  42db19:	mov    ds:0xe5442584,al
  42db1e:	adc    esi,ebx
  42db20:	and    DWORD PTR [ecx-0x5],0xffffffd6
  42db24:	mov    edx,DWORD PTR [ecx+eax*8-0x702a203b]
  42db2b:	fiadd  WORD PTR [ebp+0x6dec2524]
  42db31:	iret   
  42db32:	mov    cl,0x8a
  42db34:	cmp    eax,0x110001cc
  42db39:	add    DWORD PTR [eax],eax
  42db3b:	add    BYTE PTR [ecx-0x3b25e5d8],ch
  42db41:	in     eax,dx
  42db42:	fst    QWORD PTR [eax]
  42db44:	icebp  
  42db45:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42db46:	dec    esp
  42db47:	popa   
  42db48:	(bad)  [edx]
  42db4a:	ins    DWORD PTR es:[edi],dx
  42db4b:	lock dec di
  42db4e:	sbb    ecx,0xffffffe7
  42db51:	sbb    eax,0x4453c3e5
  42db56:	imul   edi,DWORD PTR [esi-0x6d28212f],0x7e
  42db5d:	gs inc esi
  42db5f:	test   BYTE PTR [esi],ch
  42db61:	jae    0x42daf1
  42db63:	push   edi
  42db64:	dec    ebx
  42db65:	popf   
  42db66:	xor    al,0xca
  42db68:	mov    ecx,0x97693cdc
  42db6d:	and    eax,0xe0d421ca
  42db72:	js     0x42db36
  42db74:	cdq    
  42db75:	fwait
  42db76:	sbb    bh,BYTE PTR [ebx]
  42db78:	xor    esp,esp
  42db7a:	je     0x42db30
  42db7c:	into   
  42db7d:	cmp    edi,DWORD PTR [ecx-0x14]
  42db80:	mov    eax,0x3758c181
  42db85:	push   edi
  42db86:	jmp    0x630a:0x265a518a
  42db8d:	adc    bh,ch
  42db8f:	add    eax,0x795a90a5
  42db94:	mov    dl,0xae
  42db96:	adc    DWORD PTR [ecx+eiz*4],0x97bccd58
  42db9d:	jmp    0x5626:0x7e714919
  42dba4:	push   0xcf97b3ed
  42dba9:	add    bl,BYTE PTR [esi+esi*4-0x63]
  42dbad:	add    eax,0xc7cb14f0
  42dbb2:	add    DWORD PTR [edi-0x25],edx
  42dbb5:	push   ebx
  42dbb6:	and    eax,0xc41e9c70
  42dbbb:	mov    ?,WORD PTR [ecx+0x7b97abb3]
  42dbc1:	pop    ebp
  42dbc2:	mov    ecx,0x52f0e777
  42dbc7:	lods   al,BYTE PTR ds:[esi]
  42dbc8:	sti    
  42dbc9:	push   edx
  42dbca:	(bad)  
  42dbcb:	pop    ss
  42dbcc:	imul   edi,ebp,0xfa037aa1
  42dbd2:	jo     0x42db8d
  42dbd4:	cdq    
  42dbd5:	arpl   WORD PTR [edi+0x52d3eebb],dx
  42dbdb:	rcl    DWORD PTR [ecx+0x12c34099],cl
  42dbe1:	dec    esp
  42dbe2:	arpl   WORD PTR [ecx+0xc1a7b34],cx
  42dbe8:	scas   al,BYTE PTR es:[edi]
  42dbe9:	int    0x48
  42dbeb:	mov    WORD PTR [ebx],cs
  42dbed:	and    bl,ah
  42dbef:	pop    ebp
  42dbf0:	fst    st(3)
  42dbf2:	mov    dh,0xab
  42dbf4:	stos   DWORD PTR es:[edi],eax
  42dbf5:	out    0x1f,al
  42dbf7:	test   eax,0xed3ebd4f
  42dbfc:	cld    
  42dbfd:	ja     0x42dc72
  42dbff:	and    edx,DWORD PTR [ebx*8-0x48a77580]
  42dc06:	ds ins DWORD PTR es:[edi],dx
  42dc08:	repnz mov esp,0x905310a1
  42dc0e:	mov    esi,0xb90ef99
  42dc13:	in     eax,dx
  42dc14:	sub    eax,0x22c60141
  42dc19:	ins    DWORD PTR es:[edi],dx
  42dc1a:	loop   0x42dc81
  42dc1c:	fdivr  QWORD PTR [ebp-0x66]
  42dc1f:	inc    ecx
  42dc20:	dec    esp
  42dc21:	lods   eax,DWORD PTR ds:[esi]
  42dc22:	and    eax,0xc408a1ae
  42dc27:	inc    ecx
  42dc28:	icebp  
  42dc29:	imul   ebx,DWORD PTR [edx],0x2f
  42dc2c:	loopne 0x42dc00
  42dc2e:	jno    0x42dc49
  42dc30:	cmp    eax,0xf210445a
  42dc35:	sbb    edi,DWORD PTR [edi+0x209ccbf4]
  42dc3b:	add    BYTE PTR [esi],ah
  42dc3d:	mov    cl,0xb8
  42dc3f:	xchg   ecx,eax
  42dc40:	repz jne 0x42dcba
  42dc43:	inc    esi
  42dc44:	xor    ebx,DWORD PTR [ebx]
  42dc46:	mov    ch,0x7f
  42dc48:	stos   BYTE PTR es:[edi],al
  42dc49:	cmc    
  42dc4a:	add    DWORD PTR [ecx],0xb1bae980
  42dc50:	xchg   edi,eax
  42dc51:	repz lahf 
  42dc53:	out    dx,eax
  42dc54:	(bad)  
  42dc55:	jmp    0xae6:0x53466d92
  42dc5c:	sahf   
  42dc5d:	add    al,0x1
  42dc60:	add    BYTE PTR [ecx],dl
  42dc62:	add    DWORD PTR [eax],eax
  42dc64:	add    BYTE PTR [eax+0x31b4149f],dh
  42dc6a:	xor    DWORD PTR fs:[ecx+ecx*1],esi
  42dc6e:	jge    0x42dc60
  42dc70:	push   ebx
  42dc71:	adc    DWORD PTR [edi-0x50],eax
  42dc74:	cs test eax,0xbc4c6236
  42dc7a:	inc    edi
  42dc7b:	hlt    
  42dc7c:	mov    DWORD PTR [eax-0xb],esp
  42dc7f:	inc    esp
  42dc80:	outs   dx,DWORD PTR ds:[esi]
  42dc81:	push   ecx
  42dc82:	mov    al,0x1d
  42dc84:	dec    esp
  42dc85:	cld    
  42dc86:	arpl   bx,cx
  42dc88:	lods   al,BYTE PTR ds:[esi]
  42dc89:	sbb    BYTE PTR [esi+0x10c71634],dl
  42dc8f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42dc90:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42dc91:	or     dh,ah
  42dc93:	and    BYTE PTR [ebx-0x5e3dd99e],0xc8
  42dc9a:	add    al,0x17
  42dc9c:	adc    ecx,DWORD PTR [eax]
  42dc9e:	adc    BYTE PTR [ebx-0x2a],dh
  42dca1:	fild   QWORD PTR [ebx+0x140d9148]
  42dca7:	add    al,0x59
  42dca9:	cmp    edx,ecx
  42dcab:	mov    ebx,0x79acf51d
  42dcb0:	adc    edi,DWORD PTR [ebx+0x3a038b7d]
  42dcb6:	pop    eax
  42dcb7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42dcb8:	fnstcw WORD PTR [esi-0x27]
  42dcbb:	jmp    0x5816:0xd6edfe08
  42dcc2:	push   eax
  42dcc3:	repz add BYTE PTR [ecx+0x27635d7d],dh
  42dcca:	fld    TBYTE PTR [edi+0x649edb4c]
  42dcd0:	test   al,0xde
  42dcd2:	into   
  42dcd3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42dcd4:	lea    ebx,[eax-0x7f]
  42dcd7:	test   DWORD PTR es:[ecx+edx*4-0x4],esi
  42dcdc:	xchg   esp,eax
  42dcdd:	pop    ebx
  42dcde:	push   edx
  42dcdf:	or     BYTE PTR [esp+esi*4],al
  42dce2:	adc    al,0x68
  42dce4:	inc    edx
  42dce5:	sub    eax,0xf66f172b
  42dcea:	inc    esi
  42dceb:	das    
  42dcec:	jmp    0x392ee306
  42dcf1:	scas   al,BYTE PTR es:[edi]
  42dcf2:	sub    dh,dl
  42dcf4:	imul   edx,DWORD PTR [ebp+0x33],0xcd07a1ea
  42dcfb:	in     eax,0x6a
  42dcfd:	xchg   ebp,eax
  42dcfe:	leave  
  42dcff:	cmc    
  42dd00:	add    BYTE PTR [ebx],bh
  42dd02:	push   cs
  42dd03:	(bad)  
  42dd04:	cdq    
  42dd05:	sub    al,ah
  42dd07:	ins    DWORD PTR es:[edi],dx
  42dd08:	mul    BYTE PTR ds:[ebx-0x4e548ce7]
  42dd0f:	hlt    
  42dd10:	lahf   
  42dd11:	mov    dh,0x8
  42dd13:	jl     0x42dca9
  42dd15:	in     al,0x4d
  42dd17:	test   BYTE PTR [ecx],0xfa
  42dd1a:	loop   0x42dca9
  42dd1c:	xchg   DWORD PTR [ebp-0x136f6803],esp
  42dd22:	enter  0xe993,0x97
  42dd26:	test   BYTE PTR [eax-0x49],bl
  42dd29:	push   0xffffffa2
  42dd2b:	dec    esp
  42dd2c:	adc    DWORD PTR [ebp+ebp*1-0x61],ebx
  42dd30:	push   ss
  42dd31:	mov    WORD PTR [esi-0x65],?
  42dd34:	iret   
  42dd35:	pop    ss
  42dd36:	jae    0x42dcdb
  42dd38:	mov    edi,0x4d49480d
  42dd3d:	jbe    0x42ddab
  42dd3f:	jmp    0xc018:0xb2712871
  42dd46:	and    BYTE PTR [ebx-0x17],cl
  42dd49:	(bad)  
  42dd4a:	aad    0x10
  42dd4c:	adc    al,0xe
  42dd4e:	(bad)  
  42dd50:	adc    dl,ch
  42dd52:	(bad)  
  42dd53:	rcr    ch,1
  42dd55:	ins    DWORD PTR es:[edi],dx
  42dd56:	(bad)  
  42dd59:	imul   eax,esp,0x679c8a3f
  42dd5f:	icebp  
  42dd60:	stc    
  42dd61:	xor    al,0xa9
  42dd63:	sub    bl,BYTE PTR [edi]
  42dd65:	outs   dx,DWORD PTR ds:[esi]
  42dd66:	push   ax
  42dd68:	sbb    al,0xd5
  42dd6a:	add    eax,0xb14b3cf1
  42dd6f:	test   BYTE PTR [esi+edx*2+0x43],ah
  42dd73:	out    0x35,al
  42dd75:	sti    
  42dd76:	xor    bh,BYTE PTR [esi]
  42dd78:	mov    dl,0xab
  42dd7a:	mov    esi,0x34bf3baf
  42dd7f:	inc    edi
  42dd80:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42dd81:	repz adc eax,eax
  42dd84:	xor    al,al
  42dd86:	ds mov esp,0x1110001
  42dd8c:	add    BYTE PTR [eax],al
  42dd8e:	les    esi,FWORD PTR [ecx+0xd2a6273]
  42dd94:	in     al,0xd1
  42dd96:	add    al,0x3b
  42dd98:	js     0x42ddb3
  42dd9a:	pop    ss
  42dd9b:	aas    
  42dd9c:	out    0xec,al
  42dd9e:	lds    esi,FWORD PTR [edx]
  42dda0:	(bad)  
  42dda1:	fldenv [ebp+0x456b07bd]
  42dda7:	push   es
  42dda8:	scas   al,BYTE PTR es:[edi]
  42dda9:	ins    DWORD PTR es:[edi],dx
  42ddaa:	shr    BYTE PTR [esi+ecx*4+0x11],0x2f
  42ddaf:	and    al,0xe0
  42ddb1:	shl    eax,cl
  42ddb3:	or     BYTE PTR [esi-0x17],0x55
  42ddb7:	popa   
  42ddb8:	out    0xdb,eax
  42ddba:	xor    esp,ebp
  42ddbc:	or     eax,eax
  42ddbe:	shl    edx,1
  42ddc0:	push   cs
  42ddc1:	add    DWORD PTR [ecx+0x2733b2ea],ebx
  42ddc7:	mov    cl,0x4f
  42ddc9:	or     bl,BYTE PTR [ecx+0x4229a512]
  42ddcf:	inc    ecx
  42ddd0:	dec    ebp
  42ddd1:	cmp    al,0xe3
  42ddd3:	aaa    
  42ddd4:	ror    BYTE PTR [eax],cl
  42ddd6:	scas   eax,DWORD PTR es:[edi]
  42ddd7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42ddd8:	cmp    bl,ch
  42ddda:	mov    esp,0x3e68bf57
  42dddf:	mov    edi,0x9ce92ee8
  42dde4:	(bad)  
  42dde5:	les    edi,FWORD PTR [esi+0x65e56214]
  42ddeb:	es pop edx
  42dded:	mov    ds:0xe21df470,al
  42ddf2:	xor    al,0xda
  42ddf4:	cwde   
  42ddf5:	mov    al,ds:0x9d75bde0
  42ddfa:	lds    edi,FWORD PTR [edi-0x50cf568f]
  42de00:	stos   DWORD PTR es:[edi],eax
  42de01:	(bad)  
  42de03:	fs mov dl,0x9c
  42de06:	inc    edi
  42de07:	in     eax,dx
  42de08:	mov    esp,ebp
  42de0a:	cmp    bh,dh
  42de0c:	stos   DWORD PTR es:[edi],eax
  42de0d:	lds    ebx,FWORD PTR [edx]
  42de0f:	push   cs
  42de10:	or     esi,DWORD PTR [eax-0x75]
  42de13:	ins    DWORD PTR es:[edi],dx
  42de14:	push   0xe0e46c30
  42de19:	mov    ch,0x3d
  42de1b:	or     ebp,DWORD PTR [ebx-0x15]
  42de1e:	add    DWORD PTR ds:0xb86847c,0xffffffa5
  42de25:	dec    esp
  42de26:	in     eax,0xdf
  42de28:	stos   BYTE PTR es:[edi],al
  42de29:	mov    ?,WORD PTR [esi]
  42de2b:	sbb    dl,BYTE PTR [ebp+eiz*4-0x7]
  42de2f:	lods   eax,DWORD PTR ds:[esi]
  42de30:	push   ecx
  42de31:	dec    edi
  42de32:	stos   BYTE PTR es:[edi],al
  42de33:	test   al,0xa7
  42de35:	ja     0x42de56
  42de37:	xor    ebx,DWORD PTR [edi+0x4797ec07]
  42de3d:	dec    ebp
  42de3e:	enter  0x9283,0x28
  42de42:	pushf  
  42de43:	mov    cs:0x2cae7f35,eax
  42de49:	ficom  WORD PTR [ebp+0x585b97bb]
  42de4f:	enter  0x487d,0x9a
  42de53:	sahf   
  42de54:	cmc    
  42de55:	pop    ds
  42de56:	imul   ebx,DWORD PTR [ecx+0x33],0x5372c6cc
  42de5d:	shl    ebp,1
  42de5f:	push   eax
  42de60:	jecxz  0x42de1d
  42de62:	inc    esi
  42de63:	data16 fcom DWORD PTR [edx]
  42de66:	push   0x8e6ed9b8
  42de6b:	jns    0x42dead
  42de6d:	and    eax,0x8781aa7d
  42de72:	loop   0x42de68
  42de74:	out    dx,eax
  42de75:	add    dl,BYTE PTR [eax]
  42de77:	test   DWORD PTR [edx],edi
  42de79:	aad    0x95
  42de7b:	int    0xd6
  42de7d:	ja     0x42def3
  42de7f:	cmc    
  42de80:	(bad)  
  42de81:	mov    ecx,0xf3f1dade
  42de86:	xor    al,0x83
  42de88:	push   ecx
  42de89:	hlt    
  42de8a:	mov    ds:0x90c07229,eax
  42de8f:	mov    ah,0xf8
  42de91:	and    DWORD PTR [edi+ebp*1],eax
  42de94:	mov    edx,0x43508239
  42de99:	push   esp
  42de9a:	mov    ebx,0xa7f3950c
  42de9f:	or     ecx,ebx
  42dea1:	push   es
  42dea2:	adc    eax,0xdf1bddc6
  42dea7:	fnsave ds:0x80a1d58
  42dead:	xor    edi,DWORD PTR [ebp+0x2d]
  42deb0:	mov    ebx,0x1110001
  42deb5:	add    BYTE PTR [eax],al
  42deb7:	xchg   ebp,eax
  42deb8:	(bad)  
  42deb9:	sub    esi,DWORD PTR [eax+0x636623cb]
  42debf:	outs   dx,BYTE PTR ds:[esi]
  42dec0:	mov    ebp,0xee68bc51
  42dec5:	xor    al,BYTE PTR [esi-0xb561150]
  42decb:	pop    edi
  42decc:	xchg   dl,dl
  42dece:	(bad)
  42ded2:	sub    esp,esi
  42ded4:	jo     0x42decd
  42ded6:	inc    ebx
  42ded7:	imul   edx,DWORD PTR [ebx+0x60],0xffffffcd
  42dedb:	mov    edi,0x604f15ea
  42dee0:	cli    
  42dee1:	or     BYTE PTR [edx+0x52c90209],bl
  42dee7:	sub    edi,esi
  42dee9:	push   esi
  42deea:	ret    
  42deeb:	aaa    
  42deec:	xchg   ecx,eax
  42deed:	mul    DWORD PTR [esi-0x1b]
  42def0:	ret    
  42def1:	in     al,0x6d
  42def3:	mov    bh,ah
  42def5:	popa   
  42def6:	fldcw  WORD PTR [ecx]
  42def8:	mov    esi,0x2d51d090
  42defd:	in     al,0x81
  42deff:	clc    
  42df00:	pop    esi
  42df01:	jg     0x42dee1
  42df03:	jp     0x42df61
  42df05:	jmp    0x67f1:0x2b91e8d0
  42df0c:	cmp    DWORD PTR [ebx+0x6b],esi
  42df0f:	push   0x9e4b0c2d
  42df14:	fs xchg edx,eax
  42df16:	mov    ds:0x7b050a98,al
  42df1b:	test   eax,0x9ea589c7
  42df20:	xor    al,0xcb
  42df22:	push   es
  42df23:	adc    eax,ebp
  42df25:	outs   dx,BYTE PTR ds:[esi]
  42df26:	add    dl,al
  42df28:	mov    eax,ds:0x3f247a
  42df2d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42df2e:	call   0xb941:0xc86b2bd9
  42df35:	scas   eax,DWORD PTR es:[edi]
  42df36:	lods   al,BYTE PTR ds:[esi]
  42df37:	jo     0x42def6
  42df39:	hlt    
  42df3a:	pop    edi
  42df3b:	mov    eax,0x2a6ee347
  42df40:	mov    ebp,0xfe3836f7
  42df45:	mov    ecx,0x34ab809b
  42df4a:	cmp    DWORD PTR [ecx+0x47],0x76c68818
  42df51:	fcomp  QWORD PTR [edi-0x5d]
  42df54:	ins    DWORD PTR es:[edi],dx
  42df55:	adc    DWORD PTR [di-0x5a],edi
  42df59:	sar    BYTE PTR [edx-0x24],1
  42df5c:	out    0x13,eax
  42df5e:	popa   
  42df5f:	test   DWORD PTR [ebx],ecx
  42df61:	jne    0x42df81
  42df63:	sbb    al,0xe1
  42df66:	and    al,dl
  42df68:	lods   eax,DWORD PTR ds:[esi]
  42df69:	imul   edx,DWORD PTR [edi],0xffffff94
  42df6c:	ss add al,0xb7
  42df6f:	pop    esi
  42df70:	(bad)  
  42df71:	mov    ds:0xd76a5f5,eax
  42df76:	push   esp
  42df77:	ja     0x42df25
  42df79:	pop    esi
  42df7a:	dec    dx
  42df7c:	mov    ebp,esi
  42df7e:	inc    esi
  42df7f:	pop    edi
  42df80:	add    BYTE PTR [edx+eiz*2],bl
  42df83:	or     al,0x46
  42df85:	xchg   esp,eax
  42df86:	leave  
  42df87:	(bad)  
  42df88:	arpl   WORD PTR [ebp-0x4a],ax
  42df8b:	fldcw  WORD PTR [ebx]
  42df8d:	iret   
  42df8e:	stc    
  42df8f:	inc    esp
  42df90:	pop    edi
  42df91:	or     al,0x9a
  42df93:	ins    BYTE PTR es:[edi],dx
  42df94:	mov    cs,WORD PTR [ebx-0x54]
  42df97:	lock adc BYTE PTR [ebp+0x73],bh
  42df9b:	sub    ecx,esp
  42df9d:	adc    dl,BYTE PTR [edx+0x66]
  42dfa0:	mov    esp,0xe7e3545
  42dfa5:	cli    
  42dfa6:	ret    0x626
  42dfa9:	inc    esp
  42dfaa:	pop    ebp
  42dfab:	dec    edx
  42dfac:	repnz (bad) 
  42dfae:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42dfaf:	arpl   WORD PTR [esi+eiz*4],si
  42dfb2:	or     cl,BYTE PTR [edx-0x3b]
  42dfb5:	lock dec esp
  42dfb7:	xchg   esi,eax
  42dfb8:	add    BYTE PTR [edi-0x74],bh
  42dfbb:	arpl   WORD PTR [esi],bx
  42dfbd:	and    ecx,eax
  42dfbf:	loopne 0x42dfc7
  42dfc1:	xchg   DWORD PTR [ecx-0x6],esi
  42dfc4:	in     eax,dx
  42dfc5:	sbb    ebx,DWORD PTR [eax+0x5b]
  42dfc8:	xchg   ebp,eax
  42dfc9:	je     0x42df99
  42dfcb:	imul   bh
  42dfcd:	(bad)  
  42dfce:	mov    ebp,0xce1dc277
  42dfd3:	mov    ebx,0xf8b3917b
  42dfd8:	cld    
  42dfd9:	xchg   edi,eax
  42dfda:	add    DWORD PTR [eax],eax
  42dfdc:	adc    DWORD PTR [ecx],eax
  42dfde:	add    BYTE PTR [eax],al
  42dfe0:	fdiv   QWORD PTR [eax]
  42dfe2:	add    al,0x1f
  42dfe4:	inc    ebx
  42dfe5:	pop    es
  42dfe6:	jne    0x42dfc3
  42dfe8:	loop   0x42e068
  42dfea:	inc    esi
  42dfeb:	push   ecx
  42dfec:	or     bh,dh
  42dfee:	adc    bh,0xad
  42dff1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42dff2:	adc    edx,edi
  42dff4:	mov    ch,0x97
  42dff6:	adc    ecx,edi
  42dff8:	jbe    0x42dffe
  42dffa:	mov    edx,0x9f2fe786
  42dfff:	pop    edx
  42e000:	adc    DWORD PTR [ebp+ecx*8+0x5a4a2d41],eax
  42e007:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42e008:	test   BYTE PTR [edx-0x16],al
  42e00b:	cs stc 
  42e00d:	inc    edx
  42e00e:	mov    edi,0x52041092
  42e013:	pop    ebp
  42e014:	in     eax,0x51
  42e016:	adc    dl,BYTE PTR [esi-0x3cf6b295]
  42e01c:	cmc    
  42e01d:	daa    
  42e01e:	out    dx,al
  42e01f:	xchg   ecx,eax
  42e020:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42e021:	gs loopne 0x42e037
  42e024:	dec    edx
  42e025:	mov    ecx,0x46bca6a5
  42e02a:	hlt    
  42e02b:	xchg   eax,esi
  42e02d:	pop    ss
  42e02e:	xchg   ecx,eax
  42e02f:	mov    ecx,0xea6dbcc0
  42e034:	gs pop es
  42e036:	and    BYTE PTR [edx-0x4a5b00c2],ch
  42e03c:	lds    edi,FWORD PTR [ecx-0x23cb46d4]
  42e042:	in     al,dx
  42e043:	scas   al,BYTE PTR es:[edi]
  42e044:	xchg   esp,eax
  42e045:	sub    esi,esp
  42e047:	add    eax,0xe6dc8c52
  42e04c:	pop    eax
  42e04d:	test   al,0xc9
  42e04f:	fdivrp st(4),st
  42e051:	sub    BYTE PTR [esi+ecx*2+0x19930366],0xa8
  42e059:	outs   dx,BYTE PTR ds:[esi]
  42e05a:	aaa    
  42e05b:	or     al,0x82
  42e05d:	leave  
  42e05e:	xchg   esp,eax
  42e05f:	xlat   BYTE PTR ds:[ebx]
  42e060:	lds    esp,FWORD PTR [edi+0x44448429]
  42e066:	mov    eax,DWORD PTR [esi]
  42e068:	pop    ecx
  42e069:	cwde   
  42e06a:	retf   
  42e06b:	out    0x57,al
  42e06d:	scas   al,BYTE PTR es:[edi]
  42e06e:	jmp    0x1557:0x767ff577
  42e075:	jecxz  0x42e062
  42e077:	aad    0xa6
  42e079:	jns    0x42e01f
  42e07b:	int3   
  42e07c:	cmp    ecx,edx
  42e07e:	adc    ebp,DWORD PTR ds:0xe665f7f7
  42e084:	(bad)  
  42e085:	(bad)  
  42e086:	outs   dx,BYTE PTR ds:[esi]
  42e087:	add    DWORD PTR [esp+edi*8],0x3d
  42e08b:	add    al,0x68
  42e08d:	push   edi
  42e08e:	clc    
  42e08f:	out    dx,eax
  42e090:	dec    esp
  42e091:	in     eax,0x85
  42e093:	jecxz  0x42e06f
  42e095:	xor    al,0xb4
  42e097:	mov    esp,0x5ff76a60
  42e09c:	addr16 loopne 0x42e11d
  42e09f:	std    
  42e0a0:	popf   
  42e0a1:	sbb    DWORD PTR ds:0x879067ae,esi
  42e0a7:	fwait
  42e0a8:	je     0x42e0d0
  42e0aa:	cmp    DWORD PTR [esi+0x64],0x50
  42e0ae:	mov    dh,0xfc
  42e0b0:	lds    esi,FWORD PTR [edx]
  42e0b2:	mov    ebp,0x6c0401eb
  42e0b7:	sbb    eax,0x1e332009
  42e0bc:	xchg   ebx,eax
  42e0bd:	fnstenv [ebp+0x73aef531]
  42e0c3:	mov    esi,0x3aa60f87
  42e0c8:	add    eax,0x8cbdce08
  42e0cd:	push   ecx
  42e0ce:	das    
  42e0cf:	pop    edx
  42e0d0:	cmp    dh,al
  42e0d2:	adc    DWORD PTR [edx+ecx*2-0x4c],ebx
  42e0d6:	repnz and DWORD PTR [ebp+0x73],0x2e
  42e0db:	pop    ebx
  42e0dc:	jb     0x42e0e8
  42e0de:	aam    0x2d
  42e0e0:	push   ds
  42e0e1:	pfrcpit2 mm4,mm5
  42e0e5:	arpl   WORD PTR [ecx+esi*4-0x25bdae5f],sp
  42e0ec:	adc    DWORD PTR [edx-0x3d],ecx
  42e0ef:	retf   0xb161
  42e0f2:	sbb    al,0x68
  42e0f4:	pop    ds
  42e0f5:	in     eax,dx
  42e0f6:	jg     0x42e0ef
  42e0f8:	mov    esi,0xfd3e275b
  42e0fd:	push   ss
  42e0fe:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42e0ff:	and    BYTE PTR [ecx+0x1d909],dh
  42e105:	adc    DWORD PTR [ecx],eax
  42e107:	add    BYTE PTR [eax],al
  42e109:	mov    eax,ds:0x3d91d6e
  42e10e:	gs push 0x4a
  42e111:	add    al,0x7e
  42e113:	and    DWORD PTR [eax],ebx
  42e115:	aad    0x85
  42e117:	jae    0x42e15c
  42e119:	mov    ebx,0xa30ce954
  42e11e:	mov    WORD PTR [ebx-0x64714492],cs
  42e124:	idiv   BYTE PTR [esi+0x50b7a308]
  42e12a:	push   esp
  42e12b:	fnstsw WORD PTR [ebx+0x2a]
  42e12e:	(bad)  
  42e12f:	out    0xb3,al
  42e131:	xchg   DWORD PTR [ebp+0x53],edx
  42e134:	add    cl,ch
  42e136:	adc    BYTE PTR [ecx],0x48
  42e139:	fwait
  42e13a:	ins    BYTE PTR es:[edi],dx
  42e13b:	in     al,0x3f
  42e13d:	pusha  
  42e13e:	scas   eax,DWORD PTR es:[edi]
  42e13f:	lea    eax,[esi+0x4f978d24]
  42e145:	xor    WORD PTR [eax+0x10078e46],dx
  42e14c:	xor    dl,BYTE PTR [esi-0x33c4c198]
  42e152:	call   0xb9db:0x27b7282c
  42e159:	cld    
  42e15a:	jg     0x42e184
  42e15c:	daa    
  42e15d:	pop    edi
  42e15e:	das    
  42e15f:	fstp   DWORD PTR [esi+0x1a4efcb0]
  42e165:	jge    0x42e0f1
  42e167:	mov    bh,0x22
  42e169:	mov    eax,cs:0x4f14c604
  42e16f:	shl    BYTE PTR [eax-0x4f071b04],0xe8
  42e176:	aas    
  42e177:	push   ss
  42e178:	cdq    
  42e179:	fmul   QWORD PTR [ebx+0x3c]
  42e17c:	add    al,0x8e
  42e17e:	bound  eax,QWORD PTR [eax+0xbd7a06e]
  42e184:	pop    eax
  42e185:	jg     0x42e1bd
  42e187:	(bad)  
  42e188:	pop    esi
  42e189:	out    dx,al
  42e18a:	pop    ds
  42e18b:	push   ebx
  42e18c:	(bad)
  42e18f:	and    DWORD PTR [ecx+0x64eeae0e],ebx
  42e195:	mov    esi,0x17690c66
  42e19a:	jl     0x42e15e
  42e19c:	(bad)  
  42e19d:	mov    cs,WORD PTR [eax-0x73]
  42e1a0:	pop    eax
  42e1a1:	sbb    edi,DWORD PTR ds:0x43187e0a
  42e1a7:	xchg   esi,eax
  42e1a8:	mov    al,ds:0x3f2929e6
  42e1ad:	pop    ecx
  42e1ae:	jb     0x42e1a5
  42e1b0:	test   ebp,edi
  42e1b2:	aad    0x85
  42e1b4:	outs   dx,DWORD PTR ds:[esi]
  42e1b5:	in     eax,0x38
  42e1b7:	adc    DWORD PTR [ecx-0x4f1085af],0xffffffd7
  42e1be:	jle    0x42e1e6
  42e1c0:	jae    0x42e1a6
  42e1c2:	mov    esp,0xca017b21
  42e1c7:	push   ebx
  42e1c8:	adc    dl,ch
  42e1ca:	jge    0x42e1c3
  42e1cc:	add    dh,BYTE PTR [edi]
  42e1ce:	das    
  42e1cf:	or     DWORD PTR [edi],esi
  42e1d1:	mov    dh,0xb
  42e1d3:	pusha  
  42e1d4:	sub    BYTE PTR ds:0xb6fc77b8,0x2f
  42e1db:	pusha  
  42e1dc:	retf   
  42e1dd:	adc    BYTE PTR [ebp-0x3a],dl
  42e1e0:	loopne 0x42e1f0
  42e1e2:	sti    
  42e1e3:	xor    cl,ah
  42e1e5:	xchg   ebp,eax
  42e1e6:	dec    esp
  42e1e7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42e1e8:	out    dx,eax
  42e1e9:	mov    dl,0xfd
  42e1eb:	mov    al,ds:0xae356192
  42e1f0:	pop    ecx
  42e1f1:	addr16 cwde 
  42e1f3:	xchg   ebx,eax
  42e1f4:	sbb    ebx,DWORD PTR [ebx+0xbbfa038]
  42e1fa:	mov    esi,0xcb1973b2
  42e1ff:	(bad)  
  42e200:	icebp  
  42e201:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42e202:	cdq    
  42e203:	sub    DWORD PTR [edi+0x3269faaf],esi
  42e209:	scas   eax,DWORD PTR es:[edi]
  42e20a:	fimul  DWORD PTR [edx-0x7434acfb]
  42e210:	dec    esi
  42e211:	cmp    DWORD PTR [ebx+0x68],edx
  42e214:	mov    BYTE PTR [ecx-0x60],bl
  42e217:	jae    0x42e26d
  42e219:	imul   eax,DWORD PTR [esi-0x49],0x7d
  42e21d:	test   ebp,edi
  42e21f:	iret   
  42e220:	(bad)  
  42e221:	neg    DWORD PTR [edx+0x337c41a1]
  42e227:	outs   dx,BYTE PTR ds:[esi]
  42e228:	fpatan 
  42e22a:	sbb    bl,dl
  42e22c:	add    DWORD PTR [eax],eax
  42e22e:	adc    DWORD PTR [ecx],eax
  42e230:	add    BYTE PTR [eax],al
  42e232:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42e233:	das    
  42e234:	stos   BYTE PTR es:[edi],al
  42e235:	jae    0x42e1f3
  42e237:	test   DWORD PTR [ecx+eax*1-0x50],esp
  42e23b:	mov    bh,0x72
  42e23d:	call   0xb60e:0x4227824d
  42e244:	int    0x6
  42e246:	(bad)  
  42e247:	mov    eax,ds:0xa4bbd8e8
  42e24c:	add    DWORD PTR [esi+ecx*1-0x7e],esp
  42e250:	and    DWORD PTR [eax+eiz*4-0x1c],0x7b
  42e255:	les    ecx,FWORD PTR [ebp-0x26]
  42e258:	xchg   BYTE PTR [ebx+0x49],dh
  42e25b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42e25c:	das    
  42e25d:	fld    QWORD PTR [ebx+esi*4-0x30]
  42e261:	(bad)  
  42e262:	cli    
  42e263:	xchg   dl,dh
  42e265:	pop    edi
  42e266:	jne    0x42e26b
  42e268:	and    bh,BYTE PTR [edx-0x32]
  42e26b:	in     al,dx
  42e26c:	addr16 jl 0x42e248
  42e26f:	push   ebx
  42e270:	ret    
  42e271:	dec    eax
  42e272:	add    esp,DWORD PTR [edi+0x46da788a]
  42e278:	hlt    
  42e279:	cli    
  42e27a:	xlat   BYTE PTR ds:[ebx]
  42e27b:	jp     0x42e229
  42e27d:	jb     0x42e22b
  42e27f:	dec    esp
  42e280:	shl    DWORD PTR [edi],0x12
  42e283:	or     DWORD PTR [edx-0x12a94b],edi
  42e289:	retf   0x918f
  42e28c:	sbb    BYTE PTR [ebp-0x4692e3f3],cl
  42e292:	enter  0xca1e,0xb
  42e296:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42e297:	cmc    
  42e298:	out    0x3a,eax
  42e29a:	jo     0x42e2fb
  42e29c:	push   ds
  42e29d:	jae    0x42e2be
  42e29f:	push   eax
  42e2a0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42e2a1:	dec    eax
  42e2a2:	xchg   esp,eax
  42e2a3:	push   edx
  42e2a4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42e2a5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42e2a6:	setnp  BYTE PTR [ebx+esi*8+0x20]
  42e2ab:	rol    DWORD PTR [edi-0x39],cl
  42e2ae:	call   FWORD PTR [edx]
  42e2b0:	fimul  WORD PTR [ebx-0x50]
  42e2b3:	xor    bh,BYTE PTR [esi+ecx*8+0x5e]
  42e2b7:	adc    cl,BYTE PTR [ebx-0x28]
  42e2ba:	xchg   DWORD PTR [ebx],ebx
  42e2bc:	mov    WORD PTR [ebp-0x2f],ss
  42e2bf:	sub    edx,DWORD PTR [eax-0x21]
  42e2c2:	mov    ah,0x48
  42e2c4:	mov    bl,cl
  42e2c6:	imul   dl
  42e2c8:	xchg   edi,eax
  42e2c9:	sbb    eax,DWORD PTR [esi+0x2f1c8d0f]
  42e2cf:	(bad)  
  42e2d0:	jb     0x42e318
  42e2d2:	cdq    
  42e2d3:	sub    eax,0xb8f32539
  42e2d8:	loope  0x42e2f0
  42e2da:	arpl   WORD PTR [ebx-0x7f],bp
  42e2dd:	jae    0x42e2d0
  42e2df:	mov    esi,0xf792b971
  42e2e4:	addr16 inc ebp
  42e2e6:	push   ebx
  42e2e7:	popf   
  42e2e8:	mov    DWORD PTR [edi-0x424782a4],0xf6bf7807
  42e2f2:	push   ebp
  42e2f3:	add    esi,eax
  42e2f5:	sbb    dl,bh
  42e2f7:	pop    ds
  42e2f8:	dec    eax
  42e2f9:	dec    eax
  42e2fa:	jo     0x42e2e2
  42e2fc:	mov    BYTE PTR [ebp-0x56],al
  42e2ff:	enter  0xf17,0xd7
  42e303:	inc    ebp
  42e304:	xor    eax,0x27ecc269
  42e309:	push   0xffffffe3
  42e30b:	push   eax
  42e30c:	add    al,0xa0
  42e30e:	imul   bh
  42e310:	sub    edi,DWORD PTR [edi+0x9947406]
  42e316:	or     al,BYTE PTR [ecx]
  42e318:	push   0x22
  42e31a:	add    DWORD PTR [ebx+0x5ebbd918],0x4837429c
  42e324:	scas   eax,DWORD PTR es:[edi]
  42e325:	lods   al,BYTE PTR ds:[esi]
  42e326:	daa    
  42e327:	imul   ebp,DWORD PTR [edx-0x1d332bb1],0xffffffc3
  42e32e:	jecxz  0x42e2d9
  42e330:	sahf   
  42e331:	lds    eax,FWORD PTR [esi]
  42e333:	fadd   st,st(5)
  42e335:	push   cs
  42e336:	mov    ecx,0xddaf0e31
  42e33b:	in     eax,dx
  42e33c:	pushf  
  42e33d:	shl    DWORD PTR [ebp+0x53],0x15
  42e341:	lock mov ah,0xf7
  42e344:	sbb    al,0x9d
  42e346:	cmp    edi,edi
  42e348:	mov    ebx,0xda46dcf7
  42e34d:	inc    ebp
  42e34e:	add    al,0x59
  42e350:	jo     0x42e39f
  42e352:	push   ebx
  42e353:	clc    
  42e354:	xlat   BYTE PTR ds:[ebx]
  42e355:	add    DWORD PTR [eax],eax
  42e357:	adc    DWORD PTR [ecx],eax
  42e359:	add    BYTE PTR [eax],al
  42e35b:	ins    BYTE PTR es:[edi],dx
  42e35c:	dec    ebx
  42e35d:	pop    ebp
  42e35e:	sub    eax,0x917df805
  42e363:	and    al,dh
  42e365:	pop    edx
  42e366:	leave  
  42e367:	fdiv   DWORD PTR [ecx]
  42e369:	dec    ecx
  42e36a:	test   DWORD PTR [eax-0x2a4091b8],ebp
  42e370:	clc    
  42e371:	sub    edi,ebx
  42e373:	xlat   BYTE PTR ds:[ebx]
  42e374:	lea    eax,[esi+esi*2]
  42e377:	or     al,0x39
  42e379:	adc    bl,0x6
  42e37c:	icebp  
  42e37d:	mov    bl,0xf0
  42e37f:	inc    ecx
  42e380:	pop    esi
  42e381:	aam    0x3f
  42e383:	pop    ss
  42e384:	loop   0x42e32e
  42e386:	adc    dh,BYTE PTR [edx-0xb]
  42e389:	mov    bl,0x17
  42e38b:	inc    ebx
  42e38c:	adc    esi,DWORD PTR [esi-0x14]
  42e38f:	xlat   BYTE PTR ds:[ebx]
  42e390:	dec    ebx
  42e391:	sub    BYTE PTR ds:0xa16fe8f7,dl
  42e397:	jb     0x42e414
  42e399:	fcmovbe st,st(2)
  42e39b:	xchg   esi,eax
  42e39c:	add    dh,cl
  42e39e:	leave  
  42e39f:	imul   ebx,ecx,0xe
  42e3a2:	inc    edi
  42e3a3:	jge    0x42e41d
  42e3a5:	mov    cl,BYTE PTR [ebp+0x52]
  42e3a8:	sub    eax,0xdee07a73
  42e3ad:	lods   al,BYTE PTR ds:[esi]
  42e3ae:	in     al,dx
  42e3af:	cld    
  42e3b0:	mov    ebx,0xb3cf41d2
  42e3b5:	inc    edx
  42e3b6:	mov    bl,0x43
  42e3b8:	cmp    BYTE PTR [edx+0x15961dfd],ch
  42e3be:	fild   DWORD PTR [ecx+eiz*1+0x2893c890]
  42e3c5:	push   ds
  42e3c6:	jg     0x42e41a
  42e3c8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42e3c9:	xor    cl,cl
  42e3cb:	mov    ebp,DWORD PTR ds:0xad4502ca
  42e3d1:	in     eax,dx
  42e3d2:	push   ss
  42e3d3:	test   DWORD PTR [edi-0x1d],0x2388d2
  42e3da:	sbb    BYTE PTR [ecx-0x76cffcd4],ah
  42e3e0:	push   ebx
  42e3e1:	jmp    0x42e398
  42e3e3:	sahf   
  42e3e4:	add    edi,0xffffffa5
  42e3e7:	xchg   esi,eax
  42e3e8:	adc    cl,0xc4
  42e3eb:	xchg   esi,eax
  42e3ec:	fisttp WORD PTR [ebp-0x66]
  42e3ef:	cmc    
  42e3f0:	cld    
  42e3f1:	int3   
  42e3f2:	add    al,BYTE PTR [edx+0x9]
  42e3f5:	out    dx,eax
  42e3f6:	test   edi,esp
  42e3f8:	sti    
  42e3f9:	sbb    BYTE PTR [esi+ecx*8+0x51647d89],0x61
  42e401:	inc    ebx
  42e402:	jmp    0x42e3be
  42e404:	sar    DWORD PTR [ecx],0x3b
  42e407:	push   ecx
  42e408:	aaa    
  42e409:	mul    DWORD PTR [esi]
  42e40b:	mov    bl,0xb1
  42e40d:	cs jp  0x42e3f0
  42e410:	fisttp WORD PTR [ecx+0x73db7ba3]
  42e416:	(bad)
  42e419:	cmp    BYTE PTR [ecx-0x2c],bh
  42e41c:	dec    esp
  42e41d:	es add ah,dh
  42e420:	dec    eax
  42e421:	ja     0x42e492
  42e423:	retf   0x5404
  42e426:	dec    esi
  42e427:	jp     0x42e441
  42e429:	lea    ebx,[eax]
  42e42b:	shl    esp,cl
  42e42d:	xchg   ebx,eax
  42e42e:	and    ebp,DWORD PTR [ecx+0x4069e3f8]
  42e434:	arpl   WORD PTR ds:0x7f18fa04,di
  42e43a:	mov    edi,0x672069b6
  42e43f:	pop    ebx
  42e440:	or     BYTE PTR [edx],dl
  42e442:	push   esp
  42e443:	mov    edx,0x29093be8
  42e448:	inc    ebp
  42e449:	inc    edi
  42e44a:	popa   
  42e44b:	(bad)  [eax]
  42e44d:	sub    al,0x56
  42e44f:	loop   0x42e4a0
  42e451:	jnp    0x42e474
  42e453:	add    ch,BYTE PTR [edi]
  42e455:	cld    
  42e456:	sbb    esi,DWORD PTR [esi-0x24]
  42e459:	mov    edi,0x65941a6e
  42e45e:	iret   
  42e45f:	lods   al,BYTE PTR ds:[esi]
  42e460:	iret   
  42e461:	fbld   TBYTE PTR [edx+0x39]
  42e464:	iret   
  42e465:	jo     0x42e48f
  42e467:	mov    eax,0xb59e81a7
  42e46c:	sub    al,0xe0
  42e46e:	jle    0x42e421
  42e470:	(bad)  
  42e471:	mov    edi,0xd6bafdef
  42e476:	xor    eax,0xa6d5c167
  42e47b:	jmp    edi
  42e47d:	(bad)  
  42e47e:	add    DWORD PTR [eax],eax
  42e480:	adc    DWORD PTR [ecx],eax
  42e482:	add    BYTE PTR [eax],al
  42e484:	shl    cl,0x67
  42e487:	pop    ebp
  42e488:	ja     0x42e436
  42e48a:	sbb    al,0xba
  42e48c:	inc    edi
  42e48d:	mov    esp,0xe05b4ca
  42e492:	jns    0x42e46c
  42e494:	pop    edx
  42e495:	mov    ebp,0xce189a6e
  42e49a:	xchg   BYTE PTR [edi+edx*4-0x14],bh
  42e49e:	jmp    0x92b44d12
  42e4a3:	stos   DWORD PTR es:[edi],eax
  42e4a4:	push   edi
  42e4a5:	inc    edx
  42e4a6:	outs   dx,BYTE PTR ds:[esi]
  42e4a7:	mov    ds:0xc892540c,eax
  42e4ac:	mov    ebx,0x38fd7736
  42e4b1:	jl     0x42e517
  42e4b3:	test   eax,esp
  42e4b5:	dec    edi
  42e4b6:	jns    0x42e494
  42e4b8:	sub    eax,0xf7c1c73a
  42e4bd:	mov    ah,0xe5
  42e4bf:	and    BYTE PTR [edx-0x586f808f],0xda
  42e4c6:	and    ebx,0xfffffff0
  42e4c9:	cmp    al,dh
  42e4cb:	fcom   DWORD PTR [esi-0x80]
  42e4ce:	mov    ch,0xd1
  42e4d0:	scas   al,BYTE PTR es:[edi]
  42e4d1:	stc    
  42e4d2:	jmp    0x42e4a7
  42e4d4:	add    al,0xa4
  42e4d6:	imul   esi,DWORD PTR [ecx],0x5ca320e8
  42e4dc:	call   0x56f2044f
  42e4e1:	xchg   edx,eax
  42e4e2:	pop    es
  42e4e3:	add    dh,BYTE PTR [ecx+0x161c9b3]
  42e4e9:	jne    0x42e4c9
  42e4eb:	in     al,0x5f
  42e4ed:	pop    edi
  42e4ee:	jae    0x42e559
  42e4f0:	test   BYTE PTR [eax-0x4d7ffe52],0x4b
  42e4f7:	inc    eax
  42e4f8:	mov    edx,0x29230e2d
  42e4fd:	(bad)  
  42e4fe:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42e4ff:	iret   
  42e500:	adc    DWORD PTR [eax*8-0x60b983e0],0x78
  42e508:	clc    
  42e509:	test   DWORD PTR [esi+eax*4],eax
  42e50c:	ja     0x42e54a
  42e50e:	jnp    0x42e51b
  42e510:	push   0x609f0d6f
  42e515:	xlat   BYTE PTR ds:[ebx]
  42e516:	inc    ebx
  42e517:	loopne 0x42e4a1
  42e519:	or     al,0xbf
  42e51b:	imul   eax,DWORD PTR [eax],0xd667b8b5
  42e521:	shr    DWORD PTR [ebx],cl
  42e523:	mov    ecx,0x23273795
  42e528:	aaa    
  42e529:	std    
  42e52a:	out    dx,eax
  42e52b:	loope  0x42e55d
  42e52d:	sahf   
  42e52e:	ss pushf 
  42e530:	add    bl,BYTE PTR [eax+0x65]
  42e533:	mov    ebp,0xe30b178f
  42e538:	inc    edi
  42e539:	jae    0x42e56b
  42e53b:	and    DWORD PTR [esi+0x36a97d86],edi
  42e541:	and    bl,dh
  42e543:	ins    DWORD PTR es:[edi],dx
  42e544:	jmp    0x42e560
  42e546:	xchg   edx,eax
  42e547:	and    al,0xfd
  42e549:	lock cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42e54b:	add    edx,DWORD PTR [edx+ebx*2]
  42e54e:	(bad)  
  42e550:	xchg   esp,ebp
  42e552:	ins    BYTE PTR es:[edi],dx
  42e553:	ret    
  42e554:	add    eax,0xfc33e03b
  42e559:	fwait
  42e55a:	data16 (bad) 
  42e55c:	push   eax
  42e55d:	or     DWORD PTR [si],ecx
  42e560:	jmp    0xb6f370ee
  42e565:	ins    BYTE PTR es:[edi],dx
  42e566:	in     eax,0xe6
  42e568:	fist   WORD PTR [eax-0x5a5eff75]
  42e56e:	mov    ebx,0x9bf0cfa7
  42e573:	loope  0x42e5b6
  42e575:	sahf   
  42e576:	shl    DWORD PTR [ecx+ebx*2-0x1065222c],0xbe
  42e57e:	cmp    ah,BYTE PTR [ebp-0x462859a]
  42e584:	icebp  
  42e585:	adc    al,0xb0
  42e588:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42e589:	repz and ebp,ebx
  42e58c:	and    DWORD PTR [ebx-0x1b],edx
  42e58f:	out    0x27,eax
  42e591:	ret    
  42e592:	ins    DWORD PTR es:[edi],dx
  42e593:	out    0xc6,al
  42e595:	push   ebx
  42e596:	pushf  
  42e597:	out    dx,eax
  42e598:	sub    edi,0xfffffff3
  42e59b:	jg     0x42e579
  42e59d:	cmp    edx,0x25c6b95d
  42e5a3:	test   eax,0x1d5d644
  42e5a8:	add    BYTE PTR [ecx],dl
  42e5aa:	add    DWORD PTR [eax],eax
  42e5ac:	add    dl,bl
  42e5ae:	sbb    eax,0x3c2f6831
  42e5b3:	mov    ebp,0x27db32f0
  42e5b8:	cmp    eax,0x8cc9eac7
  42e5bd:	mov    dl,0x76
  42e5bf:	mov    esp,0xfd3ef4e2
  42e5c4:	(bad)  
  42e5c5:	mov    cl,0x1f
  42e5c7:	fsubr  QWORD PTR [ebx+eax*2+0x5756ce65]
  42e5ce:	dec    ebx
  42e5cf:	sahf   
  42e5d0:	outs   dx,DWORD PTR ds:[esi]
  42e5d1:	and    bh,cl
  42e5d3:	stos   DWORD PTR es:[edi],eax
  42e5d4:	sub    dl,BYTE PTR [esi-0x51]
  42e5d7:	xor    esi,DWORD PTR [edx]
  42e5d9:	ror    bh,cl
  42e5db:	push   esi
  42e5dc:	ins    BYTE PTR es:[edi],dx
  42e5dd:	inc    edx
  42e5de:	or     bl,BYTE PTR [ebx]
  42e5e0:	iret   
  42e5e1:	adc    ch,cl
  42e5e3:	mov    ebp,0xb6a11e7d
  42e5e8:	mov    ds:0x2a9f7ec4,al
  42e5ed:	mov    bh,0xc4
  42e5ef:	ja     0x42e65c
  42e5f1:	or     eax,0x75ab15e3
  42e5f6:	cli    
  42e5f7:	nop
  42e5f8:	stos   DWORD PTR es:[edi],eax
  42e5f9:	fdecstp 
  42e5fb:	cld    
  42e5fc:	push   edx
  42e5fd:	div    bl
  42e5ff:	setge  dl
  42e602:	push   edi
  42e603:	add    eax,0x2c437124
  42e608:	(bad)  
  42e60a:	jle    0x42e5b5
  42e60c:	loope  0x42e65d
  42e60e:	lods   al,BYTE PTR ds:[esi]
  42e60f:	mov    eax,ds:0xbac61763
  42e614:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42e615:	mov    WORD PTR [esp+edx*2],?
  42e618:	out    dx,eax
  42e619:	mov    WORD PTR [ebx+0x2932ce93],cs
  42e61f:	xor    al,al
  42e621:	addr16 push 0x26
  42e624:	mov    edx,0x5b316dd5
  42e629:	les    eax,FWORD PTR [esi]
  42e62b:	cld    
  42e62c:	jmp    0x42e608
  42e62e:	jg     0x42e5ff
  42e630:	rol    DWORD PTR [ecx-0x5a8a2e89],0x70
  42e637:	aad    0x37
  42e639:	sub    al,0xde
  42e63b:	int3   
  42e63c:	xchg   BYTE PTR [ebx],ah
  42e63e:	xchg   dl,bl
  42e640:	xchg   ecx,eax
  42e641:	imul   eax,DWORD PTR [eax+0x4d],0xffffffcc
  42e645:	ins    BYTE PTR es:[edi],dx
  42e646:	mov    edi,0xe8cd6dc1
  42e64b:	leave  
  42e64c:	in     eax,dx
  42e64d:	pop    eax
  42e64e:	in     eax,0x32
  42e650:	inc    ecx
  42e651:	nop
  42e652:	adc    esp,DWORD PTR [esi]
  42e654:	bound  ecx,QWORD PTR [eax]
  42e656:	jae    0x42e69a
  42e658:	test   al,0x5e
  42e65a:	push   ds
  42e65b:	std    
  42e65c:	daa    
  42e65d:	mov    dh,0xb0
  42e65f:	lock and DWORD PTR [eax],esi
  42e662:	popf   
  42e663:	jle    0x42e6d5
  42e665:	pusha  
  42e666:	mov    esp,0x6a60dfba
  42e66b:	mov    eax,0x6eb71e1
  42e670:	fidiv  WORD PTR ds:0x48911473
  42e676:	or     DWORD PTR [ecx+0x198e8201],esi
  42e67c:	sbb    edx,DWORD PTR [edx-0x29]
  42e67f:	mov    esi,0xdbd81d75
  42e684:	clc    
  42e685:	mov    dl,0xa5
  42e687:	or     ebx,DWORD PTR [eax+0x61]
  42e68a:	je     0x42e6af
  42e68c:	loope  0x42e6ac
  42e68e:	add    eax,0xffffff92
  42e691:	retf   0x4e18
  42e694:	sub    eax,0x3e6a3ed
  42e699:	xor    DWORD PTR [ebx-0x12fc269f],eax
  42e69f:	push   0xffffffbf
  42e6a1:	ds push ebp
  42e6a3:	imul   esi,DWORD PTR [ecx-0x78],0xffffff93
  42e6a7:	mov    ecx,ecx
  42e6a9:	stos   BYTE PTR es:[di],al
  42e6ab:	mov    al,0xb6
  42e6ad:	mov    bl,0xba
  42e6af:	std    
  42e6b0:	sar    BYTE PTR [edi+ebx*8-0x74],cl
  42e6b4:	dec    edx
  42e6b5:	rol    DWORD PTR [ebp-0x4],cl
  42e6b8:	pusha  
  42e6b9:	sub    DWORD PTR [ecx-0x2c52cc88],esi
  42e6bf:	lds    ebp,FWORD PTR [ebx]
  42e6c1:	mov    ebp,0xefd7ff3f
  42e6c6:	mov    edi,0xc72813fc
  42e6cb:	imul   edi,DWORD PTR [ebx+0x19f73fa],0x0
  42e6d2:	adc    DWORD PTR [ecx],eax
  42e6d4:	add    BYTE PTR [eax],al
  42e6d6:	push   esp
  42e6d7:	fwait
  42e6d8:	mov    ebx,0x4db621d1
  42e6dd:	mov    eax,fs
  42e6df:	xlat   BYTE PTR ds:[ebx]
  42e6e0:	jns    0x42e6a9
  42e6e2:	iret   
  42e6e3:	mov    ecx,DWORD PTR [ebp-0x65]
  42e6e6:	jg     0x42e69e
  42e6e8:	mov    esi,0x624ee13e
  42e6ed:	outs   dx,DWORD PTR ds:[esi]
  42e6ee:	mov    edi,0xa2e66454
  42e6f3:	adc    edx,edi
  42e6f5:	push   edi
  42e6f6:	sbb    BYTE PTR [eax],cl
  42e6f8:	jp     0x42e757
  42e6fa:	popa   
  42e6fb:	fcomp  DWORD PTR [esi+0x6a]
  42e6fe:	pusha  
  42e6ff:	xor    dl,dh
  42e701:	fistp  DWORD PTR [ebx]
  42e703:	icebp  
  42e704:	jo     0x42e721
  42e706:	sbb    al,0x6e
  42e708:	mov    ebx,DWORD PTR [edx+0x5a]
  42e70b:	es scas eax,DWORD PTR es:[edi]
  42e70d:	das    
  42e70e:	xchg   ecx,eax
  42e70f:	ja     0x42e74a
  42e711:	pusha  
  42e712:	cmc    
  42e713:	jmp    0x42e794
  42e715:	jp     0x42e6d8
  42e717:	fnstenv ds:0x58d2394c
  42e71d:	imul   ebx,DWORD PTR [ebp+ebx*8+0x71],0xffffffed
  42e722:	pop    edx
  42e723:	inc    ecx
  42e724:	sub    BYTE PTR [eax+0x2],bl
  42e727:	arpl   WORD PTR [ebx+0x733a0aa4],sp
  42e72d:	cmc    
  42e72e:	push   esp
  42e72f:	fcomp  st(2)
  42e731:	int3   
  42e732:	push   ecx
  42e733:	rol    DWORD PTR [ecx-0x18],0x34
  42e737:	pop    edi
  42e738:	not    BYTE PTR [edx+0x2d]
  42e73b:	call   0x7563:0x43d25f5c
  42e742:	rcr    BYTE PTR [ebx],0x95
  42e745:	addr16 ds pop edx
  42e748:	adc    bl,BYTE PTR [edx]
  42e74a:	mov    ebx,0x50268a8c
  42e74f:	retf   
  42e750:	sbb    eax,0x9493e843
  42e755:	loope  0x42e7d5
  42e757:	sub    eax,DWORD PTR [ebx]
  42e759:	xor    eax,0x263f2073
  42e75e:	jnp    0x42e7c1
  42e760:	xchg   edx,eax
  42e761:	sbb    BYTE PTR [ebx],cl
  42e763:	jmp    0xd08a61d3
  42e768:	pop    ecx
  42e769:	and    eax,0x5da30190
  42e76e:	fild   WORD PTR [edx-0x70]
  42e771:	sbb    cl,BYTE PTR [eax+esi*2-0x41]
  42e775:	aaa    
  42e776:	jbe    0x42e7b8
  42e778:	fcmovb st,st(7)
  42e77a:	mov    ds:0xfd6d7527,eax
  42e77f:	xor    al,0x18
  42e781:	(bad)  
  42e783:	(bad)  
  42e784:	adc    al,0xdb
  42e786:	mov    DWORD PTR [esi+0x54],eax
  42e789:	mov    ch,0x10
  42e78b:	cmp    BYTE PTR [edi+0x2eae7fc7],bh
  42e791:	inc    edi
  42e792:	xor    al,ch
  42e794:	hlt    
  42e795:	xor    esp,ecx
  42e797:	push   0x16
  42e799:	js     0x42e751
  42e79b:	cmp    al,0xc
  42e79d:	fsub   DWORD PTR [ecx-0x7a]
  42e7a0:	mov    esi,0x41a053db
  42e7a5:	in     al,dx
  42e7a6:	retf   0x5f78
  42e7a9:	mov    esi,0x1ac572bb
  42e7ae:	bnd jns 0x42e740
  42e7b1:	pop    eax
  42e7b2:	dec    edx
  42e7b3:	mov    dl,0xda
  42e7b5:	jbe    0x42e76a
  42e7b7:	or     eax,0x7e17af14
  42e7bc:	jl     0x42e7cf
  42e7be:	xlat   BYTE PTR ds:[ebx]
  42e7bf:	(bad)  
  42e7c0:	inc    edi
  42e7c1:	rol    DWORD PTR [ecx+eax*4],1
  42e7c4:	fcmovb st,st(1)
  42e7c6:	rcl    DWORD PTR [edx],1
  42e7c8:	sub    al,0xad
  42e7ca:	adc    BYTE PTR [ecx],0xdb
  42e7cd:	lahf   
  42e7ce:	dec    esp
  42e7cf:	stos   DWORD PTR es:[edi],eax
  42e7d0:	int3   
  42e7d1:	ret    0x607c
  42e7d4:	cmp    BYTE PTR [ecx+edi*4],0xa5
  42e7d8:	dec    esp
  42e7d9:	es pop ds
  42e7db:	(bad)  
  42e7dc:	out    0x5a,al
  42e7de:	cwde   
  42e7df:	lods   eax,DWORD PTR ds:[esi]
  42e7e0:	loop   0x42e80b
  42e7e2:	mov    bh,0xf0
  42e7e4:	out    0xe0,al
  42e7e6:	jnp    0x42e840
  42e7e8:	loopne 0x42e79a
  42e7ea:	or     al,0xb8
  42e7ec:	pop    esp
  42e7ed:	cld    
  42e7ee:	hlt    
  42e7ef:	sub    DWORD PTR [ecx],0xffffffb7
  42e7f2:	sbb    al,dh
  42e7f4:	mov    al,0xb
  42e7f6:	sub    DWORD PTR [edx-0x62],esp
  42e7f9:	add    DWORD PTR [eax],eax
  42e7fb:	adc    DWORD PTR [ecx],eax
  42e7fd:	add    BYTE PTR [eax],al
  42e7ff:	or     edi,DWORD PTR [eax]
  42e801:	fwait
  42e802:	push   esi
  42e803:	ret    
  42e804:	ss (bad) 
  42e806:	jl     0x42e850
  42e808:	mov    ds:0xe9ce099d,al
  42e80d:	mul    BYTE PTR [edi]
  42e80f:	push   ss
  42e810:	ins    BYTE PTR es:[edi],dx
  42e811:	lds    eax,FWORD PTR [ecx-0x38]
  42e814:	mov    cl,0x59
  42e816:	fcmovne st,st(5)
  42e818:	call   0x187b:0x1e5a1f81
  42e81f:	je     0x42e7d3
  42e821:	int3   
  42e822:	xlat   BYTE PTR ds:[ebx]
  42e823:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42e824:	and    ebp,DWORD PTR [edx]
  42e826:	sub    al,0x4
  42e828:	or     DWORD PTR [ebx+0xabeb371],edi
  42e82e:	int    0x29
  42e830:	mov    ds:0x3f12d38c,al
  42e835:	and    DWORD PTR [ebx-0x54],0x56
  42e839:	out    0x96,al
  42e83b:	sbb    DWORD PTR [ebx+0x5a0d7ccd],0x21
  42e842:	test   BYTE PTR [eax+0x4d],al
  42e845:	jo     0x42e844
  42e847:	push   edx
  42e848:	test   DWORD PTR [ecx],edx
  42e84a:	mov    ch,0x6d
  42e84c:	loope  0x42e7ee
  42e84e:	add    DWORD PTR [edi-0x6d6f0a98],0x8074a490
  42e858:	cdq    
  42e859:	fistp  WORD PTR [edx-0xe]
  42e85c:	push   0xffffff98
  42e85e:	adc    bh,BYTE PTR [ebp+0x4011f2e5]
  42e864:	imul   ecx,DWORD PTR [edi+0x1595750d],0x7b
  42e86b:	imul   esp,DWORD PTR [edx+0x47c87bd],0xaa748085
  42e875:	std    
  42e876:	aad    0x1c
  42e878:	and    edi,DWORD PTR [ecx+ebx*4+0x23d9fcf9]
  42e87f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42e880:	xchg   BYTE PTR [esi+0x6df51768],al
  42e886:	adc    bh,BYTE PTR [edi]
  42e888:	pop    ecx
  42e889:	sub    al,0x41
  42e88b:	int3   
  42e88c:	sbb    bl,BYTE PTR [eax-0x80]
  42e88f:	mov    esi,0xfebf36bc
  42e894:	fistp  QWORD PTR [ebx]
  42e896:	dec    eax
  42e897:	jae    0x42e8e9
  42e899:	add    bh,BYTE PTR [eax+0x33]
  42e89c:	or     BYTE PTR [ebx+0x22f0c24b],bl
  42e8a2:	fwait
  42e8a3:	repz jnp 0x42e865
  42e8a6:	push   edi
  42e8a7:	mov    ebp,0xd870803
  42e8ac:	int3   
  42e8ad:	bound  esi,QWORD PTR [edi]
  42e8af:	dec    eax
  42e8b0:	jbe    0x42e8e5
  42e8b2:	and    DWORD PTR [ebx+0x12fa7ab3],edx
  42e8b8:	test   dh,0x51
  42e8bb:	jecxz  0x42e852
  42e8bd:	inc    BYTE PTR [edx+ebx*8-0x744e5491]
  42e8c4:	pop    esi
  42e8c5:	push   cs
  42e8c6:	jecxz  0x42e91c
  42e8c8:	jns    0x42e88c
  42e8ca:	push   ecx
  42e8cb:	lahf   
  42e8cc:	lods   al,BYTE PTR ds:[esi]
  42e8cd:	stos   DWORD PTR es:[edi],eax
  42e8ce:	xchg   ebx,eax
  42e8cf:	and    DWORD PTR [ebx+0x78],ebp
  42e8d2:	push   esp
  42e8d3:	push   esp
  42e8d4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42e8d5:	dec    edx
  42e8d6:	add    eax,0xa8c13fe5
  42e8db:	fldenv [eax+0x6b]
  42e8de:	dec    ebx
  42e8df:	arpl   WORD PTR [edi],bx
  42e8e1:	mov    ah,0x35
  42e8e3:	test   al,0x1
  42e8e5:	pop    ebp
  42e8e6:	add    al,0xbf
  42e8e8:	fiadd  WORD PTR [ebp+0x29]
  42e8eb:	sahf   
  42e8ec:	mov    ebp,0x3fa1c854
  42e8f1:	scas   eax,DWORD PTR es:[edi]
  42e8f2:	and    BYTE PTR [ebx],cl
  42e8f4:	and    al,0xae
  42e8f6:	mov    ebp,0x9384f4a9
  42e8fb:	push   ss
  42e8fc:	mov    edi,0x941a22a9
  42e901:	mov    edx,0x3ee4768d
  42e906:	les    esi,FWORD PTR [esi+0x71ccc6f8]
  42e90c:	fsubr  QWORD PTR [ebx-0x38df851f]
  42e912:	sub    bl,BYTE PTR [esi]
  42e914:	out    dx,eax
  42e915:	push   DWORD PTR [edi+edi*8]
  42e918:	inc    edx
  42e919:	shl    BYTE PTR [ecx-0x19],cl
  42e91c:	mov    ecx,0x193e3082
  42e921:	jmp    0x0:0x1110001
  42e928:	fidiv  DWORD PTR [edx]
  42e92a:	push   0xffffffd5
  42e92c:	je     0x42e8fb
  42e92e:	pop    esi
  42e92f:	mov    eax,ds:0x20cce51f
  42e934:	fdivr  DWORD PTR [ebp-0x4a]
  42e937:	jle    0x42e919
  42e939:	fs push es
  42e93b:	es cmp eax,0x43decc58
  42e941:	sub    DWORD PTR [eax+0x4024664],esp
  42e947:	push   ss
  42e948:	add    al,0x28
  42e94a:	mov    ebp,0x73606479
  42e94f:	leave  
  42e950:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42e951:	ins    DWORD PTR es:[edi],dx
  42e952:	mov    eax,0xbd1253e2
  42e957:	inc    ecx
  42e958:	inc    esp
  42e959:	pushf  
  42e95a:	in     eax,0xc0
  42e95c:	scas   al,BYTE PTR es:[edi]
  42e95d:	push   ebp
  42e95e:	mov    edi,0x658a27d4
  42e963:	add    BYTE PTR [ebx+0x5c],dl
  42e966:	ins    DWORD PTR es:[edi],dx
  42e967:	stc    
  42e968:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42e969:	and    al,0x5
  42e96b:	mov    edx,0xe0a29c9f
  42e970:	adc    bh,BYTE PTR [edx]
  42e972:	rol    DWORD PTR [ebx+0x1e],0x5d
  42e976:	cli    
  42e977:	fmulp  st(7),st
  42e979:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42e97a:	fst    DWORD PTR [ebx]
  42e97c:	lds    ebp,FWORD PTR ds:0xe77b77e9
  42e982:	sub    BYTE PTR [esi+0x4c],ch
  42e985:	dec    esp
  42e986:	fwait
  42e987:	(bad)  
  42e988:	jae    0x42e93d
  42e98a:	add    ecx,DWORD PTR [ebp+0x650bf307]
  42e990:	sub    bh,cl
  42e992:	sub    ch,BYTE PTR [esi-0x2d76384a]
  42e998:	pop    edi
  42e999:	pop    ds
  42e99a:	test   al,0xd2
  42e99c:	cld    
  42e99d:	mov    ch,0xba
  42e99f:	(bad)  
  42e9a0:	ja     0x42e93d
  42e9a2:	sub    BYTE PTR [eax-0x5844cbee],ch
  42e9a8:	ss xchg esp,eax
  42e9aa:	loop   0x42e988
  42e9ac:	inc    ecx
  42e9ad:	xor    al,0xb8
  42e9af:	out    dx,al
  42e9b0:	icebp  
  42e9b1:	cs dec ebx
  42e9b3:	mov    eax,ds:0x2e628788
  42e9b8:	cli    
  42e9b9:	jbe    0x42ea12
  42e9bb:	sbb    ecx,DWORD PTR [edx+ebx*8+0x1c]
  42e9bf:	aaa    
  42e9c0:	pop    ebx
  42e9c1:	xchg   ebx,eax
  42e9c2:	sub    DWORD PTR [edx-0x4e],ebp
  42e9c5:	pop    esp
  42e9c6:	stc    
  42e9c7:	sbb    eax,0x7c02b6d9
  42e9cc:	adc    BYTE PTR [ebp-0x14],bh
  42e9cf:	test   ebx,edx
  42e9d1:	cmp    bh,BYTE PTR [ebp-0x28]
  42e9d4:	xchg   ebx,eax
  42e9d5:	or     DWORD PTR [ebx+eiz*4],eax
  42e9d8:	js     0x42e9b8
  42e9da:	pop    edi
  42e9db:	shr    al,0xcd
  42e9de:	fcomp  DWORD PTR [edi+edi*1+0x7f5edc46]
  42e9e5:	xchg   edi,eax
  42e9e6:	bound  ecx,QWORD PTR [esi-0x2c]
  42e9e9:	inc    edx
  42e9ea:	in     al,0x33
  42e9ec:	or     bh,dl
  42e9ee:	cdq    
  42e9ef:	mov    bl,0x8b
  42e9f1:	daa    
  42e9f2:	and    al,0xa9
  42e9f4:	inc    edi
  42e9f5:	sar    DWORD PTR [ebx-0x35],1
  42e9f8:	idiv   ebx
  42e9fa:	dec    edx
  42e9fb:	push   ecx
  42e9fc:	icebp  
  42e9fd:	mov    bh,0xbe
  42e9ff:	out    dx,al
  42ea00:	xchg   ebx,eax
  42ea01:	ret    
  42ea02:	int    0x5e
  42ea04:	pop    edx
  42ea05:	or     eax,eax
  42ea07:	or     DWORD PTR [ebx+0x44faaa77],ebx
  42ea0d:	(bad)  
  42ea0e:	pop    eax
  42ea0f:	mov    ss,WORD PTR [ebp-0xbec816d]
  42ea15:	les    eax,FWORD PTR [eax-0x4dc38753]
  42ea1b:	xchg   edi,eax
  42ea1c:	xchg   BYTE PTR ds:0x8a423437,ch
  42ea22:	scas   al,BYTE PTR es:[edi]
  42ea23:	inc    ecx
  42ea24:	enter  0x20cb,0xad
  42ea28:	inc    edi
  42ea29:	xchg   esi,eax
  42ea2a:	test   al,0x59
  42ea2c:	dec    ebp
  42ea2d:	xor    eax,0x4010826b
  42ea32:	push   ss
  42ea33:	out    0x34,eax
  42ea35:	in     al,0xe
  42ea37:	push   ecx
  42ea38:	enter  0x2233,0x99
  42ea3c:	push   edi
  42ea3d:	cdq    
  42ea3e:	(bad)  
  42ea3f:	jmp    DWORD PTR [esi-0x22]
  42ea42:	xchg   DWORD PTR [ebp-0x64],esp
  42ea45:	pop    es
  42ea46:	xor    BYTE PTR ds:[edi],ch
  42ea49:	dec    esp
  42ea4a:	in     eax,dx
  42ea4b:	add    DWORD PTR [eax],eax
  42ea4d:	adc    DWORD PTR [ecx],eax
  42ea4f:	add    BYTE PTR [eax],al
  42ea51:	mov    edi,0x722125e4
  42ea56:	bound  ebp,QWORD PTR [edi+0x2986d12f]
  42ea5c:	retf   0xe1f
  42ea5f:	in     eax,dx
  42ea60:	sbb    ecx,edx
  42ea62:	imul   ebp,DWORD PTR [esi+0x72],0x71
  42ea66:	adc    DWORD PTR [eax+0x67],0x387f922
  42ea6d:	dec    ebp
  42ea6e:	and    edx,DWORD PTR [edi]
  42ea70:	lds    edi,FWORD PTR [edi+ebx*2-0x7890f510]
  42ea77:	fisub  DWORD PTR [ecx+0x55]
  42ea7a:	je     0x42ea26
  42ea7c:	pop    edx
  42ea7d:	in     al,dx
  42ea7e:	repz fisub DWORD PTR [edi]
  42ea81:	sahf   
  42ea82:	into   
  42ea83:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42ea84:	add    eax,0x9f4d32e
  42ea89:	retf   0xc01
  42ea8c:	cmp    esp,DWORD PTR [ebx-0x53]
  42ea8f:	xchg   esp,eax
  42ea90:	or     eax,0xd8896fb7
  42ea95:	mov    ?,esi
  42ea97:	aas    
  42ea98:	shl    esi,cl
  42ea9a:	mov    al,0x54
  42ea9c:	gs in  al,dx
  42ea9e:	popa   
  42ea9f:	hlt    
  42eaa0:	dec    esi
  42eaa1:	ret    
  42eaa2:	sahf   
  42eaa3:	push   ebx
  42eaa4:	daa    
  42eaa5:	sar    DWORD PTR [esi+0x8],0xb9
  42eaa9:	out    dx,eax
  42eaaa:	test   DWORD PTR [esi+0x60fd79eb],ebx
  42eab0:	shl    BYTE PTR ds:[ebx+0x627e60fa],0x24
  42eab8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42eab9:	outs   dx,BYTE PTR ds:[esi]
  42eaba:	xor    eax,0xd84ef01a
  42eabf:	dec    eax
  42eac1:	add    al,0x78
  42eac3:	loope  0x42ea5d
  42eac5:	dec    ebp
  42eac6:	or     esp,DWORD PTR [edi+0x2f325d03]
  42eacc:	pop    ebx
  42eacd:	mov    bh,0x9c
  42eacf:	popa   
  42ead0:	pop    esp
  42ead1:	push   ss
  42ead2:	add    esp,eax
  42ead4:	repz pop es
  42ead6:	sub    al,BYTE PTR [edi+edx*2]
  42ead9:	lea    edi,[ecx-0x1c]
  42eadc:	sbb    eax,0xa0b4415c
  42eae1:	loop   0x42eb21
  42eae3:	jp     0x42eabc
  42eae5:	adc    al,0x36
  42eae7:	adc    ebx,esp
  42eae9:	fld    DWORD PTR [ebx+esi*8]
  42eaec:	call   0x9381:0xa47433c0
  42eaf3:	fadd   DWORD PTR [esi+0x51]
  42eaf6:	fwait
  42eaf7:	test   esp,esi
  42eaf9:	mov    fs,WORD PTR [eax]
  42eafb:	mov    dl,0xcf
  42eafd:	jmp    0x42eb65
  42eaff:	adc    DWORD PTR [ecx],eax
  42eb01:	sub    al,0xed
  42eb03:	outs   dx,DWORD PTR ds:[esi]
  42eb04:	aas    
  42eb05:	add    al,0x5b
  42eb07:	push   0x68
  42eb09:	add    dl,ch
  42eb0b:	pop    esp
  42eb0c:	push   ecx
  42eb0d:	push   es
  42eb0e:	dec    ebx
  42eb0f:	out    0x35,al
  42eb11:	and    bh,cl
  42eb13:	ja     0x42eb60
  42eb15:	sub    DWORD PTR [eax],0x640f165f
  42eb1b:	pusha  
  42eb1c:	dec    ebx
  42eb1d:	push   ebx
  42eb1e:	sub    al,0x7
  42eb20:	or     al,0x53
  42eb22:	cmp    bl,ch
  42eb24:	mov    BYTE PTR [eax],bh
  42eb26:	enter  0x1aa2,0xbe
  42eb2a:	cmp    ch,0x7c
  42eb2d:	sti    
  42eb2e:	mov    cl,0x5b
  42eb30:	xchg   BYTE PTR [ecx],bl
  42eb32:	inc    ebp
  42eb33:	adc    ah,ch
  42eb35:	jmp    0xe263:0xecf2944f
  42eb3c:	add    BYTE PTR [ebx+0x38],0x88
  42eb40:	(bad)  
  42eb41:	ja     0x42eade
  42eb43:	sub    DWORD PTR [edi+0x365f4888],edx
  42eb49:	mov    bh,0xe
  42eb4b:	inc    ebx
  42eb4c:	in     al,0x31
  42eb4e:	push   ds
  42eb4f:	mov    ecx,0x51e158f6
  42eb54:	in     eax,0x11
  42eb56:	not    BYTE PTR [edi+0x7560e78f]
  42eb5c:	inc    esi
  42eb5d:	fsub   QWORD PTR [edx-0xb]
  42eb60:	sbb    eax,0x7dc865d
  42eb65:	sbb    eax,0xdf9edf5f
  42eb6a:	xchg   esi,eax
  42eb6b:	add    esi,DWORD PTR [edx]
  42eb6d:	sbb    eax,0x4a5f49bf
  42eb72:	sub    ch,bl
  42eb74:	add    DWORD PTR [eax],eax
  42eb76:	adc    DWORD PTR [ecx],eax
  42eb78:	add    BYTE PTR [eax],al
  42eb7a:	in     al,0x21
  42eb7c:	push   eax
  42eb7d:	xor    eax,ebx
  42eb7f:	inc    ebx
  42eb80:	adc    eax,0x131418b2
  42eb85:	push   eax
  42eb86:	jmp    0x5a47:0x5f47f6f2
  42eb8d:	(bad)  [esi]
  42eb8f:	jmp    0x484705cc
  42eb94:	nop
  42eb95:	out    0x5,eax
  42eb97:	mov    dh,BYTE PTR [esi]
  42eb99:	rcl    ah,1
  42eb9b:	jl     0x42eb9c
  42eb9d:	jbe    0x42ebc1
  42eb9f:	jmp    0x42ebb9
  42eba1:	js     0x42eb3a
  42eba3:	pop    ss
  42eba4:	les    esp,FWORD PTR [edi-0x6d]
  42eba7:	mov    cl,0x6e
  42eba9:	sbb    al,0x81
  42ebab:	jmp    0x42eb47
  42ebad:	push   edx
  42ebae:	iret   
  42ebaf:	(bad)  
  42ebb0:	fs in  al,dx
  42ebb2:	mov    eax,0x9f519124
  42ebb7:	xor    DWORD PTR [edi],esp
  42ebb9:	push   ebx
  42ebba:	xor    cl,ah
  42ebbc:	stos   DWORD PTR es:[edi],eax
  42ebbd:	nop
  42ebbe:	inc    esi
  42ebbf:	popf   
  42ebc0:	popa   
  42ebc1:	rol    dh,0xcb
  42ebc4:	test   eax,esi
  42ebc6:	stc    
  42ebc7:	lea    esp,[ebx+0x6]
  42ebca:	sub    al,0x5d
  42ebcc:	push   ecx
  42ebcd:	cmp    eax,0x2183b5de
  42ebd2:	mov    bl,BYTE PTR [edx-0x7b]
  42ebd5:	add    ah,BYTE PTR [ecx+0xd87aa84]
  42ebdb:	scas   al,BYTE PTR es:[edi]
  42ebdc:	xchg   ebp,eax
  42ebdd:	xor    ah,ah
  42ebdf:	jmp    0xdde5b0d7
  42ebe4:	popf   
  42ebe5:	sub    eax,0x4e958022
  42ebea:	mov    bl,0x29
  42ebec:	mov    cl,0xa5
  42ebee:	sbb    cl,dl
  42ebf0:	rcr    DWORD PTR [edx],cl
  42ebf2:	(bad)  
  42ebf3:	ror    BYTE PTR [ebp-0x58],cl
  42ebf6:	inc    ebp
  42ebf7:	jne    0x42ebbc
  42ebf9:	push   esi
  42ebfa:	mov    ds:0x11f8b19b,eax
  42ebff:	out    0xd3,al
  42ec01:	mov    edi,0x6091355f
  42ec06:	ds das 
  42ec08:	mov    esi,0x52f751bd
  42ec0d:	push   edx
  42ec0e:	mov    dl,0xfc
  42ec10:	pop    ds
  42ec11:	pop    ecx
  42ec12:	push   ss
  42ec13:	mov    ?,WORD PTR [edx+0x2266afc0]
  42ec19:	sbb    eax,0x592ce58f
  42ec1e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42ec1f:	out    0x75,al
  42ec21:	xor    BYTE PTR [ebx],0xc1
  42ec24:	retf   
  42ec25:	out    dx,eax
  42ec26:	inc    edi
  42ec27:	fld    TBYTE PTR [eax+0x42cab9e0]
  42ec2d:	fsubr  QWORD PTR [edx+0x5]
  42ec30:	xor    ebx,DWORD PTR ds:0x2f83fae7
  42ec36:	sti    
  42ec37:	xchg   bl,ch
  42ec39:	add    ebx,DWORD PTR [ebx]
  42ec3b:	outs   dx,BYTE PTR ds:[esi]
  42ec3c:	imul   ebx,DWORD PTR [edx+edx*8-0x66124791],0xb0c4f7ee
  42ec47:	jge    0x42ec2d
  42ec49:	(bad)  
  42ec4a:	js     0x42ec32
  42ec4c:	je     0x42ebde
  42ec4e:	lahf   
  42ec4f:	sbb    ch,BYTE PTR [edi]
  42ec51:	mov    ds:0x47d8e6ac,al
  42ec56:	clc    
  42ec57:	in     al,dx
  42ec58:	pmullw mm0,QWORD PTR [edi]
  42ec5b:	test   DWORD PTR [eax-0x2e3f7ad3],esi
  42ec61:	lods   eax,DWORD PTR ds:[esi]
  42ec62:	call   0x7eaa:0x1c2d95b
  42ec69:	cmp    ch,BYTE PTR [edi-0x33]
  42ec6c:	sbb    ecx,0xffffffbf
  42ec6f:	and    ah,dh
  42ec71:	sub    eax,0x59e33d03
  42ec76:	fnsave [edi-0x41]
  42ec79:	cmp    al,0xd5
  42ec7b:	mov    edx,0xecdd1e4d
  42ec80:	mov    dl,0x5e
  42ec82:	in     al,dx
  42ec83:	push   ebp
  42ec84:	pop    ebx
  42ec85:	jo     0x42ec3d
  42ec87:	or     bl,BYTE PTR [edx]
  42ec89:	loope  0x42eca9
  42ec8b:	xchg   esp,eax
  42ec8c:	or     esp,ecx
  42ec8e:	aad    0xff
  42ec90:	push   DWORD PTR [ebx+ecx*2-0x3d50c899]
  42ec97:	out    dx,eax
  42ec98:	inc    ebp
  42ec99:	push   ebp
  42ec9a:	sub    bh,BYTE PTR [ebx]
  42ec9c:	in     al,dx
  42ec9d:	add    DWORD PTR [eax],eax
  42ec9f:	adc    DWORD PTR [ecx],eax
  42eca1:	add    BYTE PTR [eax],al
  42eca3:	daa    
  42eca4:	daa    
  42eca5:	sub    DWORD PTR [ecx-0x2d],ecx
  42eca8:	xor    DWORD PTR [ebx+0x2468e862],ebp
  42ecae:	in     eax,0x72
  42ecb0:	sbb    dl,BYTE PTR [esi]
  42ecb2:	cdq    
  42ecb3:	mov    bl,0xd3
  42ecb5:	icebp  
  42ecb6:	or     eax,0x6ae287cc
  42ecbb:	sub    dl,BYTE PTR [esi-0x74]
  42ecbe:	test   BYTE PTR [edx+0x6],ah
  42ecc1:	push   ecx
  42ecc2:	ss jmp 0x42ecdc
  42ecc5:	add    DWORD PTR [ebx-0x24],0xffffffbc
  42ecc9:	mov    ds:0xc28daf05,eax
  42ecce:	mov    ecx,DWORD PTR [edx-0x3e]
  42ecd1:	cmp    DWORD PTR [eax+0x6993dcef],ecx
  42ecd7:	inc    esi
  42ecd8:	pop    es
  42ecd9:	jbe    0x42ed56
  42ecdb:	mov    esi,0x155893ae
  42ece0:	jge    0x42ec83
  42ece2:	push   edx
  42ece3:	push   ebp
  42ece4:	add    cl,al
  42ece6:	fstp   DWORD PTR [eax-0x2be5785]
  42ecec:	stos   DWORD PTR es:[edi],eax
  42eced:	jb     0x42ed2a
  42ecef:	fdivr  QWORD PTR [ebx+0x34]
  42ecf2:	lds    eax,FWORD PTR [ebx-0x73]
  42ecf5:	and    BYTE PTR [esp+edi*1-0x7a9fd855],dh
  42ecfc:	push   cs
  42ecfd:	push   ds
  42ecfe:	push   ebp
  42ecff:	ins    DWORD PTR es:[edi],dx
  42ed00:	cmc    
  42ed01:	mov    ebx,0x948b3f51
  42ed06:	inc    esi
  42ed07:	push   cs
  42ed08:	mov    eax,ds:0xf7a299ad
  42ed0d:	cmp    BYTE PTR [eax-0x68],dh
  42ed10:	loopne 0x42ed60
  42ed12:	or     edx,DWORD PTR [edi-0x59]
  42ed15:	les    edi,FWORD PTR [edi]
  42ed17:	sub    dh,bh
  42ed19:	into   
  42ed1a:	add    bh,al
  42ed1c:	fldlg2 
  42ed1e:	push   ebp
  42ed1f:	call   0xc55f:0xe4f05278
  42ed26:	pop    es
  42ed27:	je     0x42ed75
  42ed29:	xchg   ecx,eax
  42ed2a:	mov    esi,0xfc8db0e2
  42ed2f:	mov    bl,0xc0
  42ed31:	cmp    al,0x23
  42ed33:	retf   
  42ed34:	inc    ebx
  42ed35:	out    dx,eax
  42ed36:	push   eax
  42ed37:	jmp    0x42ecd9
  42ed39:	lfs    eax,FWORD PTR [ebx-0x172bf1e2]
  42ed40:	mov    eax,ds:0xe61bbc55
  42ed45:	and    ecx,esp
  42ed47:	call   DWORD PTR [ebp+ecx*1+0x1cf6d006]
  42ed4e:	add    ch,dl
  42ed50:	cmc    
  42ed51:	push   0xffffff8d
  42ed53:	and    eax,0x2641706c
  42ed58:	mov    esp,0x468a1535
  42ed5d:	fistp  QWORD PTR [edi+0x3]
  42ed60:	mov    al,ds:0x3f4ead38
  42ed65:	sti    
  42ed66:	jb     0x42ed75
  42ed68:	scas   al,BYTE PTR es:[edi]
  42ed69:	pop    esp
  42ed6a:	repz inc ebx
  42ed6c:	mov    cs,esi
  42ed6e:	and    BYTE PTR [edi],dl
  42ed70:	lods   eax,DWORD PTR ds:[esi]
  42ed71:	pop    eax
  42ed72:	sub    BYTE PTR [edx-0x4d],ah
  42ed75:	jecxz  0x42ed14
  42ed77:	gs xchg esp,eax
  42ed79:	aaa    
  42ed7a:	xor    ecx,DWORD PTR [bx]
  42ed7d:	push   es
  42ed7e:	pop    ebx
  42ed7f:	loop   0x42ed0f
  42ed81:	fdivp  st(7),st
  42ed83:	sub    cl,ch
  42ed85:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42ed86:	dec    eax
  42ed87:	enter  0xc0cf,0x16
  42ed8b:	mov    ecx,0xcfc76b65
  42ed90:	popf   
  42ed91:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42ed92:	sub    bh,BYTE PTR [esi-0x2e]
  42ed95:	adc    al,0x3c
  42ed97:	xlat   BYTE PTR ds:[ebx]
  42ed98:	stos   DWORD PTR es:[edi],eax
  42ed99:	sbb    BYTE PTR [esi],bh
  42ed9b:	pop    ebx
  42ed9c:	pop    ecx
  42ed9d:	xchg   esp,esi
  42ed9f:	push   edx
  42eda0:	cmp    eax,0xd7192d6d
  42eda5:	add    ebp,ebp
  42eda7:	call   edi
  42eda9:	in     eax,dx
  42edaa:	outs   dx,BYTE PTR ds:[esi]
  42edab:	scas   eax,DWORD PTR es:[edi]
  42edac:	aam    0xb9
  42edae:	mov    esp,0xb8b45170
  42edb3:	test   edi,0x9f621e5c
  42edb9:	(bad)  
  42edba:	(bad)  
  42edbb:	std    
  42edbc:	xchg   esp,eax
  42edbd:	fisttp QWORD PTR [edi]
  42edbf:	aaa    
  42edc0:	adc    bh,BYTE PTR [ebx+eax*8+0x1af72f7]
  42edc7:	add    BYTE PTR [ecx],dl
  42edc9:	add    DWORD PTR [eax],eax
  42edcb:	add    BYTE PTR ds:0xf173cedf,dl
  42edd1:	and    eax,0x95043d2
  42edd6:	enter  0x119d,0x2f
  42edda:	pop    ds
  42eddb:	not    BYTE PTR [edx+eiz*2-0x304783ec]
  42ede2:	lods   al,BYTE PTR ds:[esi]
  42ede3:	sahf   
  42ede4:	int3   
  42ede5:	sar    ebp,0xb4
  42ede8:	cmp    al,BYTE PTR [ebp+0x709f391e]
  42edee:	jle    0x42ee59
  42edf0:	jecxz  0x42ee5d
  42edf2:	push   esi
  42edf3:	fnstsw WORD PTR [edx-0x1d]
  42edf6:	sbb    edi,DWORD PTR [ebx+0x6a]
  42edf9:	pop    eax
  42edfa:	adc    edx,DWORD PTR [ebp-0x3b1a52dd]
  42ee00:	jne    0x42ee2a
  42ee02:	push   cs
  42ee03:	inc    eax
  42ee04:	stc    
  42ee05:	xchg   esp,eax
  42ee06:	add    edi,ebp
  42ee08:	daa    
  42ee09:	jnp    0x42ee23
  42ee0b:	mov    ds:0x313967b,al
  42ee10:	pop    ecx
  42ee11:	imul   ebp,DWORD PTR [ebx+esi*4-0x6],0xffffffc9
  42ee16:	sar    DWORD PTR [ecx-0x7756e84a],1
  42ee1c:	fbstp  TBYTE PTR [esi-0x3c1576f1]
  42ee22:	jbe    0x42edd8
  42ee24:	shl    DWORD PTR [eax+0x2c273a18],1
  42ee2a:	xor    bh,0x9f
  42ee2d:	in     eax,dx
  42ee2e:	dec    ebp
  42ee2f:	stos   DWORD PTR es:[edi],eax
  42ee30:	minps  xmm3,XMMWORD PTR [ebp-0x25]
  42ee34:	cmp    DWORD PTR ds:0x6af3f104,ecx
  42ee3a:	cmc    
  42ee3b:	ds adc al,0x7f
  42ee3e:	jne    0x42ee5a
  42ee40:	or     DWORD PTR [ecx-0x566c6e32],ebp
  42ee46:	cmp    DWORD PTR [ecx],ecx
  42ee48:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42ee49:	xchg   esi,eax
  42ee4a:	mov    edx,0xaad1aa72
  42ee4f:	ret    0x7554
  42ee52:	sbb    dl,BYTE PTR ds:0x3de062ca
  42ee58:	mov    bh,0x71
  42ee5a:	loopne 0x42ee94
  42ee5c:	mov    bl,0x3d
  42ee5e:	and    ecx,eax
  42ee60:	aaa    
  42ee61:	in     eax,dx
  42ee62:	mul    BYTE PTR [ecx-0x1c]
  42ee65:	mov    ch,0xb6
  42ee67:	mov    bh,0x89
  42ee69:	ret    0x2f8a
  42ee6c:	adc    dh,BYTE PTR [esi]
  42ee6e:	hlt    
  42ee6f:	(bad)  
  42ee71:	xor    DWORD PTR [edx],edi
  42ee73:	in     al,0xf3
  42ee75:	out    dx,eax
  42ee76:	xchg   esp,eax
  42ee77:	cwde   
  42ee78:	lgs    esp,FWORD PTR [ebx]
  42ee7b:	lds    ebp,FWORD PTR [eax-0x2b3fc7ff]
  42ee81:	xor    eax,0xe9e21ad5
  42ee86:	cwde   
  42ee87:	cwde   
  42ee88:	inc    edx
  42ee89:	fs mov al,0xb5
  42ee8c:	mov    ecx,0x83ddb43
  42ee91:	xchg   ebx,eax
  42ee92:	aas    
  42ee93:	and    al,0x27
  42ee95:	push   ds
  42ee96:	pop    esp
  42ee97:	or     bh,BYTE PTR [ebp-0x76a368ca]
  42ee9d:	jbe    0x42ee64
  42ee9f:	jnp    0x42ee61
  42eea1:	xor    eax,DWORD PTR [edx-0x7ad94fd8]
  42eea7:	int    0xdb
  42eea9:	(bad)
  42eead:	stos   BYTE PTR es:[edi],al
  42eeae:	xor    eax,0xe757a0ed
  42eeb3:	and    eax,0xbd2f063b
  42eeb8:	sbb    bh,bh
  42eeba:	sub    eax,DWORD PTR [esi+0x73]
  42eebd:	add    eax,0x53727c8
  42eec2:	mov    BYTE PTR [edx+0x2bbba2ef],cl
  42eec8:	mov    dl,0xea
  42eeca:	mov    esi,0x1f8d949f
  42eecf:	push   0x665c407b
  42eed4:	(bad)  
  42eed5:	out    0x89,al
  42eed7:	popf   
  42eed8:	in     eax,dx
  42eed9:	xor    BYTE PTR [edi+eax*2],0xaa
  42eedd:	out    dx,eax
  42eede:	xor    eax,0xd9fe01ec
  42eee3:	out    dx,eax
  42eee4:	call   FWORD PTR [eax+edi*4-0x1d]
  42eee8:	xor    edi,DWORD PTR [edi+0x1b]
  42eeeb:	enter  0xe6e1,0xe6
  42eeef:	add    DWORD PTR [eax],eax
  42eef1:	adc    DWORD PTR [ecx],eax
  42eef3:	add    BYTE PTR [eax],al
  42eef5:	mov    ah,0x4f
  42eef7:	test   DWORD PTR [edi-0x21504576],esi
  42eefd:	cdq    
  42eefe:	out    dx,al
  42eeff:	mov    cl,0xc3
  42ef01:	scas   al,BYTE PTR es:[edi]
  42ef02:	jg     0x42ee9b
  42ef04:	pop    ebp
  42ef05:	scas   al,BYTE PTR es:[edi]
  42ef06:	into   
  42ef07:	fild   QWORD PTR [ecx-0x6f]
  42ef0a:	shl    DWORD PTR ds:0x9a8cf297,0x17
  42ef11:	ret    
  42ef12:	mov    DWORD PTR [eax-0x1aef842e],ebx
  42ef18:	pop    ecx
  42ef19:	adc    ah,BYTE PTR [edi+0x1f084d36]
  42ef1f:	mov    ebx,0xfc2a2673
  42ef24:	jno    0x42ef99
  42ef26:	fs dec eax
  42ef28:	es sahf 
  42ef2a:	fisub  WORD PTR [ecx]
  42ef2c:	pop    esp
  42ef2d:	pop    ebx
  42ef2e:	test   al,0xef
  42ef30:	and    cl,cl
  42ef32:	ficom  DWORD PTR [eax]
  42ef34:	fadd   st(1),st
  42ef36:	push   cs
  42ef37:	mov    al,0xb7
  42ef39:	and    edi,DWORD PTR ds:0xa532ce25
  42ef3f:	(bad)  
  42ef40:	dec    esi
  42ef41:	sti    
  42ef42:	aam    0xad
  42ef44:	ins    BYTE PTR es:[edi],dx
  42ef45:	out    dx,eax
  42ef46:	retf   0xfa5
  42ef49:	mov    bh,0xc5
  42ef4b:	inc    edx
  42ef4c:	jg     0x42ef0e
  42ef4e:	out    dx,al
  42ef4f:	scas   al,BYTE PTR es:[edi]
  42ef50:	fs xor eax,ebp
  42ef53:	(bad)  
  42ef54:	pop    eax
  42ef55:	xchg   edi,eax
  42ef56:	daa    
  42ef57:	repnz fisubr DWORD PTR [edi+0x75]
  42ef5b:	lods   al,BYTE PTR ds:[esi]
  42ef5c:	arpl   ax,si
  42ef5e:	xchg   edi,eax
  42ef5f:	mov    eax,ds:0xf7af5578
  42ef64:	xlat   BYTE PTR ds:[ebx]
  42ef65:	pop    bp
  42ef67:	test   edi,esp
  42ef69:	jbe    0x42ef02
  42ef6b:	adc    al,0x38
  42ef6d:	jle    0x42ef77
  42ef6f:	mov    BYTE PTR [ebp+0x1],ch
  42ef72:	push   eax
  42ef73:	mov    eax,ds:0xbfc50644
  42ef78:	mov    ecx,0x2d65a3f8
  42ef7d:	out    dx,eax
  42ef7e:	fwait
  42ef7f:	sub    BYTE PTR [ebx-0x33],ah
  42ef82:	inc    edi
  42ef83:	xor    edx,DWORD PTR [edi]
  42ef85:	retf   
  42ef86:	dec    edx
  42ef87:	rol    al,1
  42ef89:	jns    0x42ef61
  42ef8b:	cdq    
  42ef8c:	popf   
  42ef8d:	or     dh,0x86
  42ef90:	call   0xa02c0c36
  42ef95:	retf   0x7645
  42ef98:	jbe    0x42ef40
  42ef9a:	inc    ecx
  42ef9b:	jae    0x42ef22
  42ef9d:	leave  
  42ef9e:	gs stos BYTE PTR es:[edi],al
  42efa0:	repnz pop es
  42efa2:	pop    es
  42efa3:	cs jbe 0x42ef68
  42efa6:	cmp    DWORD PTR [eax+0x1e],0x2c
  42efaa:	jns    0x42ef99
  42efac:	dec    ebx
  42efad:	mov    edx,0x1fd91434
  42efb2:	adc    eax,0x9cc5543b
  42efb7:	inc    ebx
  42efb8:	call   0xf15114bc
  42efbd:	test   al,0x7c
  42efbf:	push   es
  42efc0:	(bad)  
  42efc1:	mov    DWORD PTR ds:[ebx+0x7cd64adc],edx
  42efc8:	int3   
  42efc9:	push   ds
  42efca:	leave  
  42efcb:	imul   ebx,DWORD PTR ds:0xa1a5123,0xfffffff5
  42efd2:	and    ch,BYTE PTR [esi+0xe8ee651]
  42efd8:	jb     0x42efcc
  42efda:	and    BYTE PTR [ecx],bh
  42efdc:	lods   al,BYTE PTR ds:[esi]
  42efdd:	push   es
  42efde:	sub    ch,BYTE PTR [ebp+0x8]
  42efe1:	or     cl,BYTE PTR [eax+0x44]
  42efe4:	push   0xb7a98d60
  42efe9:	lfs    esp,FWORD PTR [edx-0x46]
  42efed:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42efee:	out    dx,eax
  42efef:	lds    esi,FWORD PTR [edi-0x6b]
  42eff2:	mov    ah,0x51
  42eff4:	pop    eax
  42eff5:	mov    bh,0x10
  42eff7:	hlt    
  42eff8:	adc    dh,BYTE PTR [ebp+0x4885d851]
  42effe:	xor    DWORD PTR [ebp-0x41],eax
  42f001:	xor    eax,0x65d8f117
  42f006:	mov    ah,0x49
  42f008:	and    BYTE PTR ds:0xe9bd7dfd,bl
  42f00e:	aad    0xb6
  42f010:	dec    ebp
  42f011:	popf   
  42f012:	in     eax,dx
  42f013:	pop    edi
  42f014:	mov    ds:0x1e5d543,al
  42f019:	add    BYTE PTR [ecx],dl
  42f01b:	add    DWORD PTR [eax],eax
  42f01d:	add    al,dh
  42f01f:	push   ds
  42f020:	jmp    0xe9a1:0xaab30634
  42f027:	(bad)  
  42f028:	out    0x2c,eax
  42f02a:	hlt    
  42f02b:	inc    edi
  42f02c:	loop   0x42efc3
  42f02e:	add    al,BYTE PTR [edi-0x23]
  42f031:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42f032:	xchg   edx,eax
  42f033:	pop    es
  42f034:	popf   
  42f035:	int    0x94
  42f037:	iretw  
  42f039:	cmp    eax,0xeb5bb9ab
  42f03e:	nop
  42f03f:	dec    ecx
  42f040:	stos   DWORD PTR es:[edi],eax
  42f041:	outs   dx,DWORD PTR ds:[esi]
  42f042:	retf   0x987e
  42f045:	push   esp
  42f046:	mov    ebp,DWORD PTR [ecx]
  42f048:	arpl   WORD PTR [esi],di
  42f04a:	in     al,dx
  42f04b:	mov    al,0x8f
  42f04d:	imul   esp,DWORD PTR [ebx],0xa3c870cd
  42f053:	add    ah,BYTE PTR [eax]
  42f055:	imul   ebp,DWORD PTR [eax],0x2b3e7a26
  42f05b:	mov    DWORD PTR [esi+0x580a2e1e],0xbcc90e6
  42f065:	push   ebx
  42f066:	lahf   
  42f067:	cmp    bl,dl
  42f069:	sub    BYTE PTR [esi],0x39
  42f06c:	or     eax,0x8f301b1f
  42f071:	jge    0x42f017
  42f073:	sbb    eax,0x968964f8
  42f078:	data16 fild QWORD PTR [ebx+0x3]
  42f07c:	clc    
  42f07d:	cmp    BYTE PTR [edx-0x3f],ah
  42f080:	test   ah,bh
  42f082:	cmp    esi,ebp
  42f084:	inc    ebp
  42f085:	adc    bl,BYTE PTR [edi+0x31]
  42f088:	mov    bl,0x52
  42f08a:	jge    0x42f083
  42f08c:	jb     0x42f054
  42f08e:	mov    WORD PTR [esi],fs
  42f090:	sbb    al,0xd2
  42f092:	ds cmp al,0x6a
  42f095:	lahf   
  42f096:	add    DWORD PTR [edx+0x910a5cd],ecx
  42f09c:	les    esi,FWORD PTR [edi]
  42f09e:	cmp    dh,BYTE PTR [eax+0x1b903ef1]
  42f0a4:	icebp  
  42f0a5:	push   ebx
  42f0a6:	add    BYTE PTR [edi],ah
  42f0a8:	or     eax,0x76fc7565
  42f0ad:	mov    al,ds:0x81d89952
  42f0b2:	not    DWORD PTR [edi-0x73]
  42f0b5:	ror    DWORD PTR [edi-0x1a3aea54],cl
  42f0bb:	inc    ebx
  42f0bc:	les    eax,FWORD PTR [eax]
  42f0be:	jp     0x42f04e
  42f0c0:	lods   al,BYTE PTR ds:[esi]
  42f0c1:	test   DWORD PTR [ecx+0x75],edi
  42f0c4:	push   cs
  42f0c5:	cmp    ch,dl
  42f0c7:	dec    esp
  42f0c8:	inc    ebp
  42f0c9:	xchg   edi,eax
  42f0ca:	xor    BYTE PTR [ecx],ah
  42f0cc:	pop    ecx
  42f0cd:	xor    eax,0xdcead7a7
  42f0d2:	jbe    0x42f11a
  42f0d4:	cs jo  0x42f136
  42f0d7:	ss cmp al,0x94
  42f0da:	out    dx,al
  42f0db:	out    dx,al
  42f0dc:	jb     0x42f0cb
  42f0de:	test   BYTE PTR [esi+eiz*8+0x18],dh
  42f0e2:	in     eax,dx
  42f0e3:	cmp    eax,0xdc4ac24f
  42f0e8:	div    BYTE PTR [edi+eiz*4]
  42f0eb:	ret    
  42f0ec:	mov    eax,ds:0x796d1c71
  42f0f1:	mov    ebp,DWORD PTR gs:[ebx+0x7dc36653]
  42f0f8:	dec    ebp
  42f0f9:	mov    ecx,0x7a1032ab
  42f0fe:	push   DWORD PTR [esi+0x7e]
  42f101:	push   ds
  42f102:	push   ebx
  42f103:	rsqrtps xmm3,xmm1
  42f106:	xchg   ebp,eax
  42f107:	add    BYTE PTR [ebp-0x79b4f9aa],cl
  42f10d:	stc    
  42f10e:	push   ecx
  42f10f:	jo     0x42f0a8
  42f111:	cmp    eax,0x57934f41
  42f116:	xchg   BYTE PTR [edi],bh
  42f118:	inc    eax
  42f119:	mov    eax,0x128ecdf9
  42f11e:	loope  0x42f0ec
  42f120:	data16 (bad) 
  42f123:	icebp  
  42f124:	cmp    ebx,DWORD PTR [esi+ecx*4]
  42f127:	stc    
  42f128:	and    cl,cl
  42f12a:	xor    DWORD PTR [edi-0x6f61ed6a],0xd57e5405
  42f134:	jg     0x42f0f0
  42f136:	out    dx,eax
  42f137:	push   eax
  42f138:	inc    edx
  42f139:	push   es
  42f13a:	(bad)  
  42f13c:	add    edx,DWORD PTR ds:0xde5e
  42f141:	add    DWORD PTR [eax],eax
  42f143:	adc    DWORD PTR [ecx],eax
  42f145:	add    BYTE PTR [eax],al
  42f147:	cmp    bl,al
  42f149:	call   0xf23:0x1d8c9310
  42f150:	enter  0xff3f,0x63
  42f154:	fisubr WORD PTR [ecx+0x3a612d95]
  42f15a:	bound  edx,QWORD PTR [edx]
  42f15c:	lock pop ds
  42f15e:	ins    BYTE PTR es:[edi],dx
  42f15f:	pop    edx
  42f160:	jp     0x42f171
  42f162:	and    dl,0xe6
  42f165:	mov    ebp,0xdb42adf1
  42f16a:	inc    esi
  42f16b:	dec    esp
  42f16c:	jb     0x42f0f6
  42f16e:	js     0x42f0fb
  42f170:	mov    ebp,0x678474c0
  42f175:	(bad)  
  42f176:	addr16 jmp 0x7ae1:0xc111d8a0
  42f17e:	ficomp WORD PTR [edi+edx*4]
  42f181:	pop    ebx
  42f182:	mov    BYTE PTR [ebx],bh
  42f184:	imul   esi,DWORD PTR [esp+esi*1-0x22139d73],0x80dad4b9
  42f18f:	pop    edi
  42f190:	enter  0x6b45,0xe5
  42f194:	cdq    
  42f195:	cmp    eax,0xd4106abb
  42f19a:	iret   
  42f19b:	or     DWORD PTR [edi-0x663def8e],ebp
  42f1a1:	push   es
  42f1a2:	outs   dx,DWORD PTR es:[esi]
  42f1a4:	(bad)  
  42f1a5:	(bad)  
  42f1a7:	aam    0x85
  42f1a9:	and    bh,BYTE PTR [esi+0x6c]
  42f1ac:	fincstp 
  42f1ae:	jmp    0x42f1e9
  42f1b0:	mov    ch,0x14
  42f1b2:	fidivr DWORD PTR [edx]
  42f1b4:	cmc    
  42f1b5:	mov    al,ds:0xddb7463e
  42f1ba:	or     dl,BYTE PTR [edi]
  42f1bc:	fadd   st,st(0)
  42f1be:	mov    ebx,0xf299680f
  42f1c3:	xchg   edi,eax
  42f1c4:	inc    ebp
  42f1c5:	(bad)  
  42f1c6:	lea    esp,[edx]
  42f1c8:	or     edi,edx
  42f1ca:	fucomip st,st(7)
  42f1cc:	lods   eax,DWORD PTR ds:[esi]
  42f1cd:	xchg   DWORD PTR [di-0x71],edx
  42f1d1:	adc    ebp,DWORD PTR [ebp+0x77]
  42f1d4:	dec    ebp
  42f1d5:	test   eax,0xadaeb0d8
  42f1da:	inc    eax
  42f1db:	test   eax,0xdfef2fd1
  42f1e0:	adc    BYTE PTR [ebp-0x21fc92fd],dl
  42f1e6:	sub    al,0xe6
  42f1e8:	sub    BYTE PTR [eax+ebp*2],al
  42f1eb:	mov    esi,0x99274984
  42f1f0:	bound  esp,QWORD PTR [ecx]
  42f1f2:	in     al,0x82
  42f1f4:	cwde   
  42f1f5:	bound  ecx,QWORD PTR [ebx-0x6aabbe35]
  42f1fb:	outs   dx,BYTE PTR ds:[esi]
  42f1fc:	dec    eax
  42f1fd:	fild   QWORD PTR [edi]
  42f1ff:	and    ebx,DWORD PTR [edx]
  42f201:	xchg   edi,eax
  42f202:	mov    ecx,0xb91b89b4
  42f207:	jge    0x42f1ae
  42f209:	mov    cl,BYTE PTR [ebx]
  42f20b:	in     al,dx
  42f20c:	ret    0x217b
  42f20f:	jp     0x42f1d2
  42f211:	push   eax
  42f212:	(bad)  
  42f213:	outs   dx,DWORD PTR ds:[esi]
  42f214:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42f215:	lods   eax,DWORD PTR ds:[esi]
  42f216:	out    0x52,al
  42f218:	lds    ebp,FWORD PTR [esi+0x17]
  42f21b:	repz xlat BYTE PTR ds:[ebx]
  42f21d:	inc    esi
  42f21e:	cmp    eax,0x25299aff
  42f223:	cmp    DWORD PTR [edi],edx
  42f225:	aas    
  42f226:	retf   
  42f227:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42f228:	mov    bh,0xc0
  42f22a:	mov    ss,WORD PTR [edi-0x42]
  42f22d:	in     eax,dx
  42f22e:	adc    bh,BYTE PTR [edi+0x3d80d00]
  42f234:	or     BYTE PTR [ecx],dh
  42f236:	or     al,0xe9
  42f238:	fs push ebx
  42f23a:	mov    dh,0x7f
  42f23c:	sbb    al,0xd9
  42f23e:	loope  0x42f277
  42f240:	(bad)  
  42f241:	aas    
  42f242:	push   ds
  42f243:	xor    eax,DWORD PTR [ecx]
  42f245:	mov    bh,0xe7
  42f247:	nop
  42f248:	(bad)  
  42f24b:	mov    al,ds:0x1e4460a6
  42f250:	mov    bl,0x5c
  42f252:	jb     0x42f1e5
  42f254:	outs   dx,DWORD PTR ds:[esi]
  42f255:	imul   edx,DWORD PTR [edx-0x3a9641bd],0xffacd728
  42f25f:	push   DWORD PTR [ebx-0x30]
  42f262:	fs dec esp
  42f264:	inc    ebx
  42f265:	call   0x1:0xdc3c6d00
  42f26c:	adc    DWORD PTR [ecx],eax
  42f26e:	add    BYTE PTR [eax],al
  42f270:	cwde   
  42f271:	push   0x92ea81c6
  42f276:	add    dl,BYTE PTR [edx]
  42f278:	dec    edi
  42f279:	inc    eax
  42f27a:	xchg   ebx,eax
  42f27b:	fimul  WORD PTR [ebx+0x25]
  42f27e:	repz icebp 
  42f280:	push   ebx
  42f281:	mov    ecx,0x469dc242
  42f286:	mov    dh,0x90
  42f288:	dec    eax
  42f289:	lods   al,BYTE PTR ds:[esi]
  42f28a:	(bad)  
  42f28b:	pushf  
  42f28c:	clc    
  42f28d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42f28e:	fcom   DWORD PTR [esi+0x25bf1c28]
  42f294:	jns    0x42f298
  42f296:	xor    eax,0xa415aba9
  42f29b:	inc    edi
  42f29c:	add    dh,BYTE PTR [edi-0x537c5179]
  42f2a2:	jmp    0x5b2:0x8997
  42f2a8:	adc    eax,0xaddbbed5
  42f2ad:	sbb    DWORD PTR [esp+esi*2],esi
  42f2b0:	ret    0x611f
  42f2b3:	mov    dl,cl
  42f2b5:	ja     0x42f2a2
  42f2b7:	test   al,0x8c
  42f2b9:	cmc    
  42f2ba:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42f2bb:	popf   
  42f2bc:	pop    edi
  42f2bd:	dec    ebp
  42f2be:	sbb    bl,dh
  42f2c0:	mov    eax,0xac7b7fff
  42f2c5:	or     eax,0x6c62be7f
  42f2ca:	add    DWORD PTR [edx],edi
  42f2cc:	pop    ds
  42f2cd:	pop    ebp
  42f2ce:	sbb    cl,BYTE PTR [esi-0xf]
  42f2d1:	fwait
  42f2d2:	idiv   ebp
  42f2d4:	(bad)  
  42f2d5:	repz sub bh,BYTE PTR [ebp+0x58]
  42f2d9:	pop    esp
  42f2da:	mov    ecx,0x303e55a9
  42f2df:	cli    
  42f2e0:	push   esp
  42f2e1:	sbb    ch,BYTE PTR [ebp+0x5]
  42f2e4:	pop    es
  42f2e5:	out    dx,eax
  42f2e6:	mov    BYTE PTR [ecx-0x4b],bh
  42f2e9:	xchg   edi,eax
  42f2ea:	cmp    eax,0x23e70a08
  42f2ef:	sbb    al,0x8
  42f2f1:	jp     0x42f32e
  42f2f3:	inc    edi
  42f2f4:	xor    DWORD PTR gs:[ebx+esi*1-0x1],edx
  42f2f9:	ins    BYTE PTR es:[edi],dx
  42f2fa:	outs   dx,DWORD PTR ds:[esi]
  42f2fb:	(bad)  
  42f2fc:	pop    esp
  42f2fd:	xor    BYTE PTR [eax],dl
  42f2ff:	int3   
  42f300:	stos   BYTE PTR es:[edi],al
  42f301:	out    dx,al
  42f302:	ins    BYTE PTR es:[edi],dx
  42f303:	iret   
  42f304:	add    al,0xa3
  42f306:	std    
  42f307:	rcr    DWORD PTR [esi+esi*4+0x32],cl
  42f30b:	popa   
  42f30c:	mov    esi,0xf1ecd133
  42f311:	dec    esi
  42f312:	loop   0x42f384
  42f314:	cmp    cl,al
  42f316:	in     al,0x1
  42f318:	fs test edi,0x4e0ac1f1
  42f31f:	(bad)  
  42f320:	xor    dl,bh
  42f322:	cmp    esi,DWORD PTR [esi+edx*4]
  42f325:	(bad)  
  42f326:	sti    
  42f327:	mov    WORD PTR [edi+eax*2+0x48a0b81e],es
  42f32e:	jne    0x42f384
  42f330:	cli    
  42f331:	jbe    0x42f3b0
  42f333:	xor    DWORD PTR [eax-0x5c],ebx
  42f336:	inc    ebx
  42f337:	mov    al,0xc0
  42f339:	aaa    
  42f33a:	sbb    al,bh
  42f33c:	push   edx
  42f33d:	or     esp,ebx
  42f33f:	(bad)  
  42f340:	js     0x42f337
  42f342:	les    esp,FWORD PTR [ebx]
  42f344:	mov    edx,0xc0f1b3c3
  42f349:	test   DWORD PTR [edx-0x5f],esp
  42f34c:	in     eax,dx
  42f34d:	sbb    edi,0x18f87b80
  42f353:	gs add bh,cl
  42f356:	jge    0x42f3ce
  42f358:	push   ebx
  42f359:	fistp  DWORD PTR [ebx+eiz*1]
  42f35c:	add    ch,ah
  42f35e:	jnp    0x42f341
  42f360:	lods   al,BYTE PTR ds:[esi]
  42f361:	adc    al,0xd8
  42f363:	sahf   
  42f364:	int3   
  42f365:	in     al,dx
  42f366:	xor    DWORD PTR [edx+0x34],ecx
  42f369:	sub    DWORD PTR [ecx+0x61],esi
  42f36c:	push   esp
  42f36d:	mov    dl,0xd8
  42f36f:	leave  
  42f370:	lea    ebp,ds:0x8f3ad42c
  42f376:	cs fdivr st,st(5)
  42f379:	sub    dl,cl
  42f37b:	pop    esi
  42f37c:	je     0x42f315
  42f37e:	cli    
  42f37f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42f380:	pop    edx
  42f381:	inc    esp
  42f382:	adc    edx,DWORD PTR [ebx]
  42f384:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42f385:	push   edi
  42f386:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42f387:	cmc    
  42f388:	repz lahf 
  42f38a:	pop    ecx
  42f38b:	lods   al,BYTE PTR ds:[esi]
  42f38c:	jno    0x42f331
  42f38e:	sbb    eax,edi
  42f390:	xchg   esp,eax
  42f391:	sub    ebx,ebx
  42f393:	add    DWORD PTR [eax],eax
  42f395:	adc    DWORD PTR [ecx],eax
  42f397:	add    BYTE PTR [eax],al
  42f399:	cmp    DWORD PTR [eax-0x3a],esp
  42f39c:	aam    0x7c
  42f39e:	lods   al,BYTE PTR ds:[esi]
  42f39f:	sbb    BYTE PTR [esi-0x1fff3ebb],ah
  42f3a5:	inc    ecx
  42f3a6:	ja     0x42f416
  42f3a8:	push   eax
  42f3a9:	or     ebx,ebx
  42f3ab:	push   esp
  42f3ac:	jp     0x42f32f
  42f3ae:	sbb    al,BYTE PTR [ebp+0x76354c82]
  42f3b4:	(bad)  
  42f3b5:	mov    esi,0x6e222bb6
  42f3ba:	test   BYTE PTR [eax+0xd8febc7],bh
  42f3c0:	add    eax,0xd06602c0
  42f3c5:	xor    edi,DWORD PTR [edi]
  42f3c7:	inc    edx
  42f3c8:	xor    eax,0x72ea6d0
  42f3cd:	xchg   edi,eax
  42f3ce:	xor    eax,ebp
  42f3d0:	xchg   ecx,eax
  42f3d1:	sbb    al,0xd5
  42f3d3:	call   0x15925afc
  42f3d8:	dec    edi
  42f3d9:	jle    0x42f384
  42f3db:	jg     0x42f3f5
  42f3dd:	enter  0xd6dd,0xab
  42f3e1:	sbb    al,0xf7
  42f3e3:	test   al,0xf5
  42f3e5:	(bad)  
  42f3e6:	stc    
  42f3e7:	jl     0x42f39b
  42f3e9:	in     al,dx
  42f3ea:	adc    al,BYTE PTR [ebx+ebp*1+0x39274745]
  42f3f1:	mov    ebx,0xc4bd1ae8
  42f3f6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42f3f7:	lahf   
  42f3f8:	xor    DWORD PTR [eax+0x79],eax
  42f3fb:	dec    edx
  42f3fc:	js     0x42f3c4
  42f3fe:	push   0x383c790b
  42f403:	push   esp
  42f404:	cld    
  42f405:	jbe    0x42f401
  42f407:	cld    
  42f408:	ins    BYTE PTR es:[edi],dx
  42f409:	dec    esi
  42f40a:	dec    esi
  42f40b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42f40c:	or     al,0xa0
  42f40e:	je     0x42f48c
  42f410:	fadd   QWORD PTR [edi-0x59]
  42f413:	test   BYTE PTR [esp+edi*4-0x4f9f2a7b],ch
  42f41a:	xchg   DWORD PTR [ecx-0x40f30254],edx
  42f420:	xchg   esp,eax
  42f421:	in     eax,0xd0
  42f423:	out    0xd6,eax
  42f425:	jo     0x42f493
  42f427:	retf   0xfe93
  42f42a:	cmc    
  42f42b:	es sahf 
  42f42d:	stos   DWORD PTR es:[edi],eax
  42f42e:	jmp    0xf77a:0x8d8d2c6
  42f435:	hlt    
  42f436:	xor    dl,cl
  42f438:	mov    al,ds:0xbfca202f
  42f43d:	sub    eax,0xa40081dd
  42f442:	(bad)
  42f446:	sar    DWORD PTR gs:[esi-0x25],cl
  42f44a:	xchg   edi,eax
  42f44b:	xor    cl,bl
  42f44d:	enter  0xc9cd,0x67
  42f451:	add    dl,BYTE PTR [ebx+0x45]
  42f454:	(bad)  [ebp+0x11]
  42f457:	xor    WORD PTR [esp+edx*2+0x75],0x66
  42f45d:	xchg   ecx,eax
  42f45e:	jmp    0x42f3ff
  42f460:	push   eax
  42f461:	ror    DWORD PTR [ebx+0x3c326efa],0xb6
  42f468:	mov    BYTE PTR [edx+edx*8-0x11],bh
  42f46c:	mov    WORD PTR [ebp-0x5ba9b144],gs
  42f472:	cmp    ch,bh
  42f474:	or     eax,ebx
  42f476:	add    DWORD PTR ds:0x62c35f0a,eax
  42f47c:	push   ds
  42f47d:	aam    0xc
  42f47f:	cmp    ah,bl
  42f481:	dec    edi
  42f482:	mov    ah,0x63
  42f484:	enter  0x85e3,0x7b
  42f488:	lock (bad) 
  42f48a:	in     eax,dx
  42f48b:	fs or  dl,bl
  42f48e:	cmp    eax,0xa4e47cd1
  42f493:	pop    ds
  42f494:	test   eax,0xa7e91c46
  42f499:	fidiv  DWORD PTR [eax]
  42f49b:	scas   al,BYTE PTR es:[edi]
  42f49c:	es or  al,ah
  42f49f:	loope  0x42f4bd
  42f4a1:	or     al,0xe7
  42f4a3:	mov    bh,dl
  42f4a5:	mov    ah,0x8f
  42f4a7:	and    esi,DWORD PTR ds:0x5b414777
  42f4ad:	cld    
  42f4ae:	pop    edi
  42f4af:	(bad)  
  42f4b0:	out    0xfb,eax
  42f4b2:	jp     0x42f444
  42f4b4:	(bad)  
  42f4b5:	pushf  
  42f4b6:	mov    edx,0x4df8ef38
  42f4bb:	fld    QWORD PTR [ecx]
  42f4bd:	add    BYTE PTR [ecx],dl
  42f4bf:	add    DWORD PTR [eax],eax
  42f4c1:	add    dl,ah
  42f4c3:	lods   eax,DWORD PTR ds:[esi]
  42f4c4:	cdq    
  42f4c5:	jno    0x42f4e9
  42f4c7:	inc    edx
  42f4c8:	dec    ebx
  42f4c9:	adc    edx,DWORD PTR [eax+0x41cf0788]
  42f4cf:	imul   ebx,DWORD PTR ds:0xcdf0ee8b,0x87308099
  42f4d9:	test   eax,0x8e4fe76d
  42f4de:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42f4df:	cmp    BYTE PTR [eax-0xee29265],al
  42f4e5:	or     esp,ebp
  42f4e7:	pop    ebp
  42f4e8:	jb     0x42f4ea
  42f4ea:	jl     0x42f46f
  42f4ec:	fmulp  st(0),st
  42f4ee:	shl    BYTE PTR [esi-0x7b],1
  42f4f1:	mov    esp,0xb7bc969f
  42f4f6:	dec    edi
  42f4f7:	add    ebx,DWORD PTR [ebx-0x57]
  42f4fa:	xor    eax,0xd70f3e21
  42f4ff:	xchg   ecx,eax
  42f500:	xchg   DWORD PTR [ecx],edi
  42f502:	aas    
  42f503:	mov    bl,0x81
  42f505:	test   BYTE PTR [ecx+0x5a11ed80],dh
  42f50b:	mov    ebx,0x4e0c2e9a
  42f510:	ins    BYTE PTR es:[edi],dx
  42f511:	nop
  42f512:	ret    
  42f513:	xchg   DWORD PTR [ebp-0x53],edi
  42f516:	addr16 loopne 0x42f524
  42f519:	mov    esp,0xdbf93d2b
  42f51e:	xlat   BYTE PTR ds:[bx]
  42f520:	and    eax,0x4adb50b
  42f525:	jb     0x42f4e3
  42f527:	add    esi,DWORD PTR [edx+eiz*4-0x61]
  42f52b:	dec    ecx
  42f52c:	ss loopne 0x42f51b
  42f52f:	rcl    ebx,1
  42f531:	mov    ch,ah
  42f533:	mov    ds:0x395ad707,eax
  42f538:	inc    ebx
  42f539:	dec    esi
  42f53a:	xor    cl,BYTE PTR [eax+0x2d0521a4]
  42f540:	jp     0x42f5b7
  42f542:	pop    es
  42f543:	jne    0x42f551
  42f545:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42f546:	es loopne 0x42f532
  42f549:	push   ebx
  42f54a:	les    esp,FWORD PTR [eax+0x1a]
  42f54d:	cmp    eax,0x91a0e7df
  42f552:	jg     0x42f530
  42f554:	sub    eax,0x68f075f0
  42f559:	rol    DWORD PTR [edi+eax*1+0x16],cl
  42f55d:	in     al,dx
  42f55e:	pop    esi
  42f55f:	mov    ds:0xe2d049e4,al
  42f564:	aaa    
  42f565:	out    0xe,eax
  42f567:	xor    cl,BYTE PTR [esi+0x44]
  42f56a:	push   edx
  42f56b:	test   BYTE PTR [ecx],ah
  42f56d:	dec    edx
  42f56e:	push   esi
  42f56f:	and    edx,esi
  42f571:	jmp    DWORD PTR [edi]
  42f573:	scas   eax,DWORD PTR es:[edi]
  42f574:	xor    al,0x4b
  42f576:	aad    0x3e
  42f578:	push   ss
  42f579:	add    eax,0x76907cfd
  42f57e:	pusha  
  42f57f:	jle    0x42f52f
  42f581:	sub    eax,0xc20500cf
  42f586:	ret    0xa1c
  42f589:	mov    ds:0x1f0b8f55,eax
  42f58e:	jmp    0x449d:0x90a1635b
  42f595:	nop
  42f596:	sbb    esp,ebp
  42f598:	scas   eax,DWORD PTR es:[edi]
  42f599:	mov    ds:0x4714a08d,eax
  42f59e:	lahf   
  42f59f:	aaa    
  42f5a0:	fidiv  WORD PTR [edi-0x54]
  42f5a3:	imul   ebp,DWORD PTR ds:0x4d15c90f,0x0
  42f5aa:	cmp    BYTE PTR [ecx],dh
  42f5ac:	imul   ebp,DWORD PTR [esi+0x74e0cf00],0xffffff99
  42f5b3:	mov    ecx,0x88f73323
  42f5b8:	arpl   WORD PTR [ecx],ax
  42f5ba:	mov    ebp,0x22ea0123
  42f5bf:	sbb    DWORD PTR [edx-0x66],esi
  42f5c2:	shl    DWORD PTR [edi+0x26a8ad95],0x7b
  42f5c9:	iret   
  42f5ca:	pop    esp
  42f5cb:	bnd jl 0x42f59f
  42f5ce:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42f5cf:	nop
  42f5d0:	(bad)  
  42f5d1:	pop    esi
  42f5d2:	xchg   esp,eax
  42f5d3:	cmp    BYTE PTR es:[ebx+0x2fbf9fac],al
  42f5da:	mov    edx,0x499a79b9
  42f5df:	js     0x42f584
  42f5e1:	ins    DWORD PTR es:[edi],dx
  42f5e2:	ror    DWORD PTR [eax],cl
  42f5e4:	jmp    0x153f5ea
  42f5e9:	add    BYTE PTR [eax],al
  42f5eb:	nop
  42f5ec:	lods   eax,DWORD PTR ds:[esi]
  42f5ed:	adc    esp,DWORD PTR [eax-0x51]
  42f5f0:	or     DWORD PTR [edx+0x6e38f9d9],edi
  42f5f6:	inc    ebx
  42f5f7:	rcr    BYTE PTR [eax-0x28],cl
  42f5fa:	push   esi
  42f5fb:	xchg   edi,eax
  42f5fc:	sti    
  42f5fd:	add    ebp,DWORD PTR [edx+ebp*8+0x1272fbad]
  42f604:	cmc    
  42f605:	push   ebx
  42f606:	les    ebp,FWORD PTR [ebx-0x40a49e54]
  42f60c:	jmp    0x42f5a5
  42f60e:	add    ah,BYTE PTR [ecx]
  42f610:	and    al,0xbb
  42f612:	scas   al,BYTE PTR es:[edi]
  42f613:	pop    edx
  42f614:	nop
  42f615:	jecxz  0x42f5bb
  42f617:	sub    eax,0x31250b33
  42f61c:	dec    eax
  42f61d:	adc    DWORD PTR [ebx+0x6e],0x78
  42f621:	mov    sp,WORD PTR [ebx+0x3d8410de]
  42f628:	test   al,0x32
  42f62a:	xchg   edi,eax
  42f62b:	adc    BYTE PTR [ebx+ebx*4-0x3a9cc6ae],ch
  42f632:	mov    ah,0xd4
  42f634:	addr16 repz (bad) 
  42f637:	out    0x8f,al
  42f639:	ret    
  42f63a:	mov    bh,0x39
  42f63c:	shl    DWORD PTR [edi],0x79
  42f63f:	pushf  
  42f640:	and    BYTE PTR [edi],dh
  42f642:	mov    edi,0xeb5f8759
  42f647:	and    DWORD PTR [esi+0x76],edi
  42f64a:	mov    DWORD PTR [eax+0x4ea91eb6],edx
  42f650:	cmc    
  42f651:	push   eax
  42f652:	pop    ebp
  42f653:	je     0x42f6d3
  42f655:	ins    BYTE PTR es:[edi],dx
  42f656:	sub    al,0xf3
  42f658:	dec    edx
  42f659:	xor    bl,0x1f
  42f65c:	test   al,0x17
  42f65e:	inc    ebp
  42f65f:	icebp  
  42f660:	das    
  42f661:	pop    ds
  42f662:	mov    eax,ebp
  42f664:	pop    eax
  42f665:	mov    al,0xb0
  42f667:	mov    BYTE PTR [ebx-0x7d],0xc0
  42f66b:	and    BYTE PTR ds:0xef604a2d,bh
  42f671:	adc    DWORD PTR [ebx],ebp
  42f673:	arpl   di,si
  42f675:	pop    esi
  42f676:	push   es
  42f677:	loop   0x42f6ad
  42f679:	jmp    DWORD PTR [ecx+0x13]
  42f67c:	xor    dl,ch
  42f67e:	sub    dh,0xa4
  42f681:	mov    ebx,0x3888dd5c
  42f686:	into   
  42f687:	daa    
  42f688:	mov    ah,0x45
  42f68a:	push   0xffffffbd
  42f68c:	out    dx,al
  42f68d:	push   cs
  42f68e:	(bad)  
  42f68f:	fcom   QWORD PTR [esi+0x6585c251]
  42f695:	pushf  
  42f696:	xor    ebx,ebp
  42f698:	loopne 0x42f70e
  42f69a:	lds    ebp,FWORD PTR [edi]
  42f69c:	in     eax,0xc5
  42f69e:	addr16 enter 0xabad,0xf6
  42f6a3:	mov    dl,0xc1
  42f6a5:	sbb    al,0x4c
  42f6a7:	cmp    DWORD PTR [ebx+eax*2],ebx
  42f6aa:	xchg   BYTE PTR [edx],al
  42f6ac:	cdq    
  42f6ad:	out    0x49,al
  42f6af:	pop    edx
  42f6b0:	rcl    BYTE PTR [edi],1
  42f6b2:	std    
  42f6b3:	rcr    DWORD PTR [ebp+0x10],cl
  42f6b6:	push   ecx
  42f6b7:	stos   DWORD PTR es:[edi],eax
  42f6b8:	rcr    BYTE PTR [edx],0xad
  42f6bb:	inc    esi
  42f6bc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42f6bd:	xchg   esp,eax
  42f6be:	ror    dl,0x7d
  42f6c1:	pop    edi
  42f6c2:	dec    esi
  42f6c3:	jns    0x42f738
  42f6c5:	push   ebp
  42f6c6:	xchg   ecx,eax
  42f6c7:	cmp    bh,dh
  42f6c9:	es icebp 
  42f6cb:	repnz mov BYTE PTR [esi],cl
  42f6ce:	inc    esp
  42f6cf:	adc    BYTE PTR [ebx-0x38],al
  42f6d2:	pop    ebx
  42f6d3:	icebp  
  42f6d4:	dec    ebp
  42f6d5:	ret    
  42f6d6:	mov    ecx,0x24fd8203
  42f6db:	lock or BYTE PTR [edi-0x7649be1c],dl
  42f6e2:	pushf  
  42f6e3:	and    dl,0xa0
  42f6e6:	mov    cl,0x15
  42f6e8:	inc    esi
  42f6e9:	(bad)  
  42f6ea:	dec    ebp
  42f6eb:	push   eax
  42f6ec:	hlt    
  42f6ed:	lahf   
  42f6ee:	cwde   
  42f6ef:	or     DWORD PTR [ebp+0x5d],ebx
  42f6f2:	cld    
  42f6f3:	adc    esi,DWORD PTR [edi-0x5e]
  42f6f6:	mov    al,0x80
  42f6f8:	pusha  
  42f6f9:	call   0xe264b5c3
  42f6fe:	div    esi
  42f700:	div    edi
  42f702:	and    edi,esi
  42f704:	cmp    cl,BYTE PTR [edx+0x11]
  42f707:	cdq    
  42f708:	pop    ds
  42f709:	push   0x7b
  42f70b:	push   cs
  42f70c:	mul    edi
  42f70e:	add    DWORD PTR [eax],eax
  42f710:	adc    DWORD PTR [ecx],eax
  42f712:	add    BYTE PTR [eax],al
  42f714:	je     0x42f6a2
  42f716:	jo     0x42f707
  42f718:	adc    DWORD PTR [esi-0x4c45795e],edi
  42f71e:	cmc    
  42f71f:	int3   
  42f720:	mov    esi,edi
  42f722:	and    DWORD PTR [edx-0x738f556d],edi
  42f728:	push   ds
  42f729:	call   0x5552:0xf3e70750
  42f730:	arpl   WORD PTR [ecx],bp
  42f732:	pop    esp
  42f733:	or     edx,DWORD PTR [ebx+0x7e]
  42f736:	dec    DWORD PTR [ebx+0x57fa06ee]
  42f73c:	sub    eax,0x908f0a24
  42f741:	pop    eax
  42f742:	test   bh,0xa0
  42f745:	add    al,0x11
  42f747:	call   0x14ffaa73
  42f74c:	xchg   ebx,eax
  42f74d:	lock jo 0x42f760
  42f750:	mov    BYTE PTR [edx+ebx*2],0xfe
  42f754:	js     0x42f707
  42f756:	inc    ecx
  42f757:	ficom  DWORD PTR [edx-0xe]
  42f75a:	jg     0x42f72d
  42f75c:	fnsave [eax+0x6c9c63f6]
  42f762:	fsub   st,st(1)
  42f764:	jb     0x42f6e8
  42f766:	jae    0x42f766
  42f768:	cmp    DWORD PTR [esi+0xb],0x6405b88f
  42f76f:	popa   
  42f770:	mov    dh,0xe2
  42f772:	jb     0x42f73f
  42f774:	jbe    0x42f7a9
  42f776:	cmc    
  42f777:	push   eax
  42f778:	ss xor eax,0x5a061184
  42f77e:	mov    edx,0xd65ebde8
  42f783:	leave  
  42f784:	xchg   edx,eax
  42f785:	sbb    DWORD PTR [eax+0x17],ebp
  42f788:	xchg   ebx,eax
  42f789:	mov    al,ds:0x484a4e1e
  42f78e:	inc    ebx
  42f78f:	ss mov edi,0x4333ab9c
  42f795:	dec    edi
  42f796:	pop    edx
  42f797:	jb     0x42f745
  42f799:	push   ecx
  42f79a:	in     eax,0x1b
  42f79c:	mul    DWORD PTR [edx]
  42f79e:	sbb    DWORD PTR [edx+0x3d],0xea4b1e20
  42f7a5:	push   0x23974965
  42f7aa:	jo     0x42f738
  42f7ac:	inc    esp
  42f7ad:	jmp    0xd5c6c92e
  42f7b2:	dec    eax
  42f7b3:	mov    ah,0x68
  42f7b5:	stc    
  42f7b6:	nop
  42f7b7:	jne    0x42f764
  42f7b9:	clc    
  42f7ba:	mov    esp,0x544a00e8
  42f7bf:	mov    bl,0xc7
  42f7c1:	dec    edx
  42f7c2:	gs int3 
  42f7c4:	cli    
  42f7c5:	popa   
  42f7c6:	stc    
  42f7c7:	sahf   
  42f7c8:	pop    ebp
  42f7c9:	cmp    BYTE PTR es:[ecx-0x158bd2d],bh
  42f7d0:	inc    ebp
  42f7d1:	push   esi
  42f7d2:	test   BYTE PTR [ecx-0x3e],al
  42f7d5:	sbb    edx,esi
  42f7d7:	lods   eax,DWORD PTR ds:[esi]
  42f7d8:	aad    0xfe
  42f7da:	(bad)  
  42f7db:	pop    ds
  42f7dc:	ss jl  0x42f798
  42f7df:	test   BYTE PTR [edi+0xe206a2e],dh
  42f7e5:	lods   eax,DWORD PTR ds:[esi]
  42f7e6:	dec    ebp
  42f7e7:	ja     0x42f7e5
  42f7e9:	cld    
  42f7ea:	mov    esp,DWORD PTR [eax-0x44]
  42f7ed:	pop    ss
  42f7ee:	push   ss
  42f7ef:	jmp    0x42f775
  42f7f1:	lock rol DWORD PTR [edi+ecx*8+0x18],1
  42f7f6:	push   esi
  42f7f7:	xchg   esi,eax
  42f7f8:	jge    0x42f7ae
  42f7fa:	mov    ch,0x37
  42f7fc:	jae    0x42f7f7
  42f7fe:	sti    
  42f7ff:	or     DWORD PTR [ebp+ebp*4+0x6677bf7f],edx
  42f806:	mov    cl,0x3f
  42f808:	dec    eax
  42f809:	jecxz  0x42f7df
  42f80b:	push   ss
  42f80c:	inc    edx
  42f80d:	ds xor cl,BYTE PTR gs:[edi]
  42f811:	jl     0x42f79e
  42f813:	xor    ebp,DWORD PTR [esi+eiz*1-0x2fe702e0]
  42f81a:	sub    DWORD PTR [ebx-0x2e26d5b2],esp
  42f820:	push   es
  42f821:	cli    
  42f822:	rcl    DWORD PTR [edx],0xe5
  42f825:	cmp    ecx,DWORD PTR [ecx]
  42f827:	nop
  42f828:	cmp    BYTE PTR [edx-0x76f44447],dh
  42f82e:	jmp    0x42e68886
  42f833:	(bad)  
  42f834:	pop    ecx
  42f835:	sub    ebx,edi
  42f837:	add    DWORD PTR [eax],eax
  42f839:	adc    DWORD PTR [ecx],eax
  42f83b:	add    BYTE PTR [eax],al
  42f83d:	popa   
  42f83e:	and    eax,0xa55c95a3
  42f843:	int    0x8f
  42f845:	std    
  42f846:	or     DWORD PTR [ecx-0x57],esp
  42f849:	retf   0xd4f1
  42f84c:	in     eax,dx
  42f84d:	mov    ds:0x7b71e73c,eax
  42f852:	push   esp
  42f853:	cmp    al,0x6a
  42f855:	add    esi,DWORD PTR [ecx+0x2a5e5f70]
  42f85b:	jg     0x42f857
  42f85d:	xor    DWORD PTR [ebx+ebx*1],ebp
  42f860:	cdq    
  42f861:	cvtdq2ps xmm7,XMMWORD PTR [edx-0x6c]
  42f865:	sti    
  42f866:	xor    al,0x6a
  42f868:	mov    ah,0x29
  42f86a:	popa   
  42f86b:	ret    
  42f86c:	cmp    bl,ch
  42f86e:	xchg   BYTE PTR [ebp-0x4b],bl
  42f871:	femms  
  42f873:	mov    esi,0xdf262a68
  42f878:	push   esi
  42f879:	push   0x22
  42f87b:	jb     0x42f829
  42f87d:	sub    eax,0x9b535cb7
  42f882:	fisttp DWORD PTR [edx+0x3238171c]
  42f888:	mov    ?,WORD PTR [eax+0x42]
  42f88b:	icebp  
  42f88c:	mov    ds:0x227d5fb3,eax
  42f891:	jmp    0x42f8f6
  42f893:	or     edi,DWORD PTR [ebp-0x67]
  42f896:	adc    eax,0x35cb693
  42f89b:	mov    ecx,0xb1778630
  42f8a0:	(bad)  
  42f8a2:	pop    ebx
  42f8a3:	sti    
  42f8a4:	stos   BYTE PTR es:[edi],al
  42f8a5:	dec    edx
  42f8a6:	push   edx
  42f8a7:	es dec edi
  42f8a9:	lea    esi,[esi]
  42f8ab:	mov    eax,ds:0xb61dfe95
  42f8b0:	cdq    
  42f8b1:	push   ebp
  42f8b2:	or     DWORD PTR [ebp+0x249ccf5a],0x7ad61098
  42f8bc:	retf   0x487a
  42f8bf:	xchg   edi,eax
  42f8c0:	sbb    eax,0x513236b7
  42f8c5:	mov    DWORD PTR ds:0x86a0936c,edi
  42f8cb:	loope  0x42f949
  42f8cd:	and    al,0xe2
  42f8cf:	jae    0x42f8e3
  42f8d1:	pop    es
  42f8d2:	jg     0x42f92b
  42f8d4:	mov    WORD PTR [eax+0x55],?
  42f8d7:	pop    es
  42f8d8:	cld    
  42f8d9:	and    al,0x6f
  42f8db:	(bad)  
  42f8dc:	mov    BYTE PTR [edx-0x52],dh
  42f8df:	cld    
  42f8e0:	add    al,0x95
  42f8e2:	xchg   ebp,eax
  42f8e3:	loopne 0x42f957
  42f8e5:	sbb    al,0xfc
  42f8e7:	(bad)  
  42f8e8:	cmp    ecx,DWORD PTR [eax]
  42f8ea:	pushf  
  42f8eb:	fld    QWORD PTR [ebx-0x306cbf73]
  42f8f1:	out    0xbf,al
  42f8f3:	push   esi
  42f8f4:	test   eax,0x399815ea
  42f8f9:	(bad)  
  42f8fa:	jne    0x42f93a
  42f8fc:	(bad)  
  42f8fd:	pop    eax
  42f8fe:	popf   
  42f8ff:	push   eax
  42f900:	pop    edx
  42f901:	jmp    0xe163:0xe1249960
  42f908:	mov    ds:0x15f28447,eax
  42f90d:	mov    DWORD PTR ds:0x98e8abc7,edi
  42f913:	mov    cl,0x75
  42f915:	add    eax,0x1c1d1919
  42f91a:	pushf  
  42f91b:	jns    0x42f92c
  42f91d:	cmp    DWORD PTR [esp+eax*1+0x306ef14c],esi
  42f924:	sub    BYTE PTR [ecx+0x4eb30a56],dl
  42f92a:	in     al,0x18
  42f92c:	aam    0x4e
  42f92e:	adc    bl,dh
  42f930:	push   sp
  42f932:	test   BYTE PTR [edi],bh
  42f934:	fs fucom st(7)
  42f937:	xchg   BYTE PTR [eax],ch
  42f939:	fsubr  st(0),st
  42f93b:	(bad)  
  42f93c:	cli    
  42f93d:	fmul   QWORD PTR [eax+0x5441f911]
  42f943:	adc    al,0xcc
  42f945:	sbb    BYTE PTR [ecx-0x60052174],dl
  42f94b:	adc    edx,0xffffff87
  42f94e:	sub    bl,ah
  42f950:	lea    edx,[edx-0x4c00131]
  42f956:	arpl   dx,di
  42f958:	cmp    eax,0x8979f9ce
  42f95d:	pushf  
  42f95e:	cmp    bh,ah
  42f960:	add    DWORD PTR [eax],eax
  42f962:	adc    DWORD PTR [ecx],eax
  42f964:	add    BYTE PTR [eax],al
  42f966:	stos   DWORD PTR es:[edi],eax
  42f967:	mov    DWORD PTR [ebx-0x2d23aacc],0x526ff247
  42f971:	fnstenv [eax+edx*1-0x1bc0203c]
  42f978:	xor    al,0x49
  42f97a:	retf   
  42f97b:	add    ah,BYTE PTR [ebx+0x60]
  42f97e:	jb     0x42f9d2
  42f980:	jo     0x42f92b
  42f982:	or     eax,0x1291f5bc
  42f987:	push   ebx
  42f988:	xor    al,0x2d
  42f98a:	in     eax,dx
  42f98b:	mov    BYTE PTR [esi],dh
  42f98d:	rol    DWORD PTR [ebp+0x60],cl
  42f990:	adc    al,0x76
  42f992:	sub    ecx,DWORD PTR [edx-0xb]
  42f995:	(bad)  
  42f996:	ror    BYTE PTR [ebx+0x68],0x23
  42f99a:	cmp    cl,BYTE PTR [edi-0x63d2ba70]
  42f9a0:	loopne 0x42f990
  42f9a2:	xchg   edi,eax
  42f9a3:	cmp    esi,ecx
  42f9a5:	mov    ch,bl
  42f9a7:	xchg   esp,eax
  42f9a8:	repnz xchg ebp,eax
  42f9aa:	add    eax,0x816ea5f9
  42f9af:	mov    eax,ds:0xea65113e
  42f9b4:	xchg   esi,eax
  42f9b5:	mov    ebx,0x275943b7
  42f9ba:	mov    ch,0x4b
  42f9bc:	adc    al,dl
  42f9be:	mov    ebx,0x70ca7338
  42f9c3:	xchg   esi,eax
  42f9c4:	adc    dh,cl
  42f9c6:	inc    eax
  42f9c7:	rol    DWORD PTR [esi*2-0x95f73a5],0xe2
  42f9cf:	out    dx,eax
  42f9d0:	jb     0x42f963
  42f9d2:	push   edx
  42f9d3:	rcr    ch,0xd4
  42f9d6:	loopne 0x42fa33
  42f9d8:	inc    esp
  42f9d9:	rcr    BYTE PTR ds:0x10596565,0xbc
  42f9e0:	xor    esi,esi
  42f9e2:	mov    ebx,0x70781423
  42f9e7:	lahf   
  42f9e8:	inc    esi
  42f9e9:	jl     0x42f9f5
  42f9eb:	xchg   ebp,eax
  42f9ec:	xor    eax,0x54e384
  42f9f1:	cmp    cl,bh
  42f9f3:	xchg   esp,eax
  42f9f4:	xor    BYTE PTR [ebx+ecx*2-0x3f599b62],cl
  42f9fb:	push   ds
  42f9fc:	outs   dx,DWORD PTR ds:[esi]
  42f9fd:	pushf  
  42f9fe:	add    eax,DWORD PTR [esi]
  42fa00:	and    eax,0xda3cb52c
  42fa05:	into   
  42fa06:	add    DWORD PTR [ebx+0x697e0ef0],ebx
  42fa0c:	cwde   
  42fa0d:	push   edi
  42fa0e:	aaa    
  42fa0f:	adc    ecx,DWORD PTR [eax]
  42fa11:	out    dx,eax
  42fa12:	shl    DWORD PTR [eax+0x27],1
  42fa15:	mov    eax,0x58360a24
  42fa1a:	jmp    0x42fa05
  42fa1c:	(bad)  
  42fa1d:	pop    ebx
  42fa1e:	inc    eax
  42fa1f:	imul   ebx,ebp,0x8667ffaa
  42fa25:	fldenv [edx+0x4d383d91]
  42fa2b:	dec    ecx
  42fa2c:	(bad)  
  42fa2e:	inc    edx
  42fa2f:	adc    eax,0x4eb62137
  42fa34:	sub    BYTE PTR [eax-0x5],0xab
  42fa38:	mov    eax,cs:0x6962d4f4
  42fa3e:	xor    BYTE PTR [edi],dl
  42fa40:	mov    ecx,0xc88681af
  42fa45:	setb   BYTE PTR [eax+0x250ee995]
  42fa4c:	ss ja  0x42f9e1
  42fa4f:	in     al,0x9
  42fa51:	out    dx,al
  42fa52:	out    dx,eax
  42fa53:	xchg   BYTE PTR [esi-0xb],bh
  42fa56:	inc    edi
  42fa57:	stos   DWORD PTR es:[edi],eax
  42fa58:	inc    esi
  42fa59:	std    
  42fa5a:	data16 aam 0x8b
  42fa5d:	dec    ebx
  42fa5e:	mov    ah,0xf3
  42fa60:	pushf  
  42fa61:	inc    edx
  42fa62:	shld   DWORD PTR [edi-0x29eed774],eax,cl
  42fa69:	sub    DWORD PTR [ebp+ebx*2-0x23],esi
  42fa6d:	push   ecx
  42fa6e:	lods   eax,DWORD PTR ds:[esi]
  42fa6f:	aam    0x19
  42fa71:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42fa72:	jmp    0x76d9ff6
  42fa77:	jmp    0xebfc:0xfffc3d01
  42fa7e:	pop    ss
  42fa7f:	jo     0x42fab9
  42fa81:	push   ds
  42fa82:	dec    esp
  42fa83:	mov    fs,WORD PTR [eax+esi*4+0x9]
  42fa87:	dec    ebx
  42fa88:	std    
  42fa89:	add    DWORD PTR [eax],eax
  42fa8b:	adc    DWORD PTR [ecx],eax
  42fa8d:	add    BYTE PTR [eax],al
  42fa8f:	add    eax,0x88c749a
  42fa94:	sbb    edi,edx
  42fa96:	mov    ebp,0xd4d0e608
  42fa9b:	or     edx,DWORD PTR [ebx-0xa]
  42fa9e:	mul    DWORD PTR [ecx]
  42faa0:	fisttp DWORD PTR [ebx+0x68a894f4]
  42faa6:	(bad)  
  42faa7:	push   edx
  42faa8:	jbe    0x42fac5
  42faaa:	add    DWORD PTR [edi],ebx
  42faac:	pop    edx
  42faad:	lods   eax,DWORD PTR ds:[esi]
  42faae:	xchg   DWORD PTR [ecx],edx
  42fab0:	pop    ecx
  42fab1:	xor    DWORD PTR [ebx],0x6e
  42fab4:	cmp    DWORD PTR [eax+eiz*4],ecx
  42fab7:	adc    eax,0x87aac158
  42fabc:	int3   
  42fabd:	xor    DWORD PTR [esi+eiz*4-0x7434721],0x2f
  42fac5:	aad    0xcc
  42fac7:	mov    BYTE PTR [edx],dl
  42fac9:	jge    0x42fb08
  42facb:	jle    0x42fa57
  42facd:	shr    BYTE PTR [ebp-0x3229d696],0x6e
  42fad4:	cmp    ebp,ebx
  42fad6:	leave  
  42fad7:	call   0x4185:0x62c31fec
  42fade:	sub    esi,0x1a
  42fae1:	jmp    0xad4c:0xbb367931
  42fae8:	pop    eax
  42fae9:	loopne 0x42faad
  42faeb:	frstor [esi+0x4]
  42faee:	push   0xffffff93
  42faf0:	neg    BYTE PTR [ebx-0x261babc2]
  42faf6:	shr    al,cl
  42faf8:	mov    bl,ah
  42fafa:	add    al,0xff
  42fafc:	or     al,0xcc
  42fafe:	fdivr  DWORD PTR [ebp+0x33]
  42fb01:	hlt    
  42fb02:	div    BYTE PTR [ecx-0x53]
  42fb05:	lds    ebx,FWORD PTR [edi-0x45]
  42fb08:	pop    ebx
  42fb09:	fst    QWORD PTR [esi-0x56]
  42fb0c:	mov    ah,0x6f
  42fb0e:	jg     0x42fb4d
  42fb10:	pop    esi
  42fb11:	mov    ebx,0x704e41fd
  42fb16:	out    dx,al
  42fb17:	mov    ch,0x14
  42fb19:	or     BYTE PTR [edi+0x45],ch
  42fb1c:	and    bl,BYTE PTR es:[esi+0x1f27deb3]
  42fb23:	mov    ch,0x5
  42fb25:	adc    al,0x7d
  42fb27:	neg    BYTE PTR [esp+eiz*4]
  42fb2a:	pop    ebp
  42fb2b:	ins    BYTE PTR es:[edi],dx
  42fb2c:	bound  esi,QWORD PTR [edx-0xd]
  42fb2f:	std    
  42fb30:	loope  0x42fb2f
  42fb32:	jmp    0xd104e56b
  42fb37:	xor    DWORD PTR [edi-0x4b],0x44
  42fb3b:	mov    bl,0x60
  42fb3d:	in     al,dx
  42fb3e:	dec    ebp
  42fb3f:	lahf   
  42fb40:	les    edx,FWORD PTR [eax]
  42fb42:	xchg   BYTE PTR [esi],cl
  42fb44:	outs   dx,DWORD PTR ds:[esi]
  42fb45:	or     bl,ch
  42fb47:	loope  0x42fbb5
  42fb49:	cli    
  42fb4a:	mov    ah,0x8d
  42fb4c:	retf   0x2d07
  42fb4f:	xchg   esp,eax
  42fb50:	pop    es
  42fb51:	inc    ecx
  42fb52:	pop    eax
  42fb53:	pop    eax
  42fb54:	mov    ss,WORD PTR [ebx+0x72a28c1f]
  42fb5a:	psubusb mm5,QWORD PTR [ebp-0x42]
  42fb5e:	pop    eax
  42fb5f:	add    al,0xf8
  42fb61:	in     eax,0xb3
  42fb63:	stc    
  42fb64:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42fb65:	adc    BYTE PTR [esi],0x14
  42fb68:	shl    BYTE PTR ds:0x439d15ce,0x85
  42fb6f:	inc    ecx
  42fb70:	dec    edx
  42fb71:	sub    dh,BYTE PTR [eax-0x196ad007]
  42fb77:	enter  0x536d,0xb2
  42fb7b:	cwde   
  42fb7c:	push   esp
  42fb7d:	ret    0x3a9d
  42fb80:	mov    cl,0x3
  42fb82:	cld    
  42fb83:	xor    al,0xc9
  42fb85:	gs lahf 
  42fb87:	cmc    
  42fb88:	or     eax,0xb2ad1dd6
  42fb8d:	rcr    BYTE PTR [esi+ebp*4+0x2],0xb9
  42fb92:	inc    ebx
  42fb93:	in     eax,dx
  42fb94:	mov    ah,0x41
  42fb96:	aaa    
  42fb97:	push   es
  42fb98:	or     dh,ah
  42fb9a:	popf   
  42fb9b:	mov    al,0xa0
  42fb9d:	retf   
  42fb9e:	mov    bl,0xe0
  42fba0:	ja     0x42fb73
  42fba2:	imul   esp,DWORD PTR [ecx-0x28004411],0x51
  42fba9:	xor    al,0xa1
  42fbab:	xor    ah,bl
  42fbad:	xchg   esi,eax
  42fbae:	mov    dh,0xd
  42fbb0:	mov    eax,ds:0x110001f2
  42fbb5:	add    DWORD PTR [eax],eax
  42fbb7:	add    bl,dh
  42fbb9:	repz xor DWORD PTR [ebx-0x3f14b0e4],esi
  42fbc0:	repnz in al,dx
  42fbc2:	ss push eax
  42fbc4:	pusha  
  42fbc5:	jl     0x42fbc8
  42fbc7:	fmul   DWORD PTR [ebp-0x5d04f8ab]
  42fbcd:	and    BYTE PTR ds:0x8d10e25c,cl
  42fbd3:	pop    eax
  42fbd4:	adc    DWORD PTR [esi-0x13],edi
  42fbd7:	push   eax
  42fbd8:	outs   dx,BYTE PTR ds:[esi]
  42fbd9:	dec    ebx
  42fbda:	pop    esp
  42fbdb:	sub    BYTE PTR es:[ecx+esi*1],0x41
  42fbe0:	fcmovbe st,st(5)
  42fbe2:	(bad)  
  42fbe3:	cdq    
  42fbe4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42fbe5:	dec    esp
  42fbe6:	cmp    eax,DWORD PTR [ecx+0x4406dd01]
  42fbec:	inc    edx
  42fbed:	inc    eax
  42fbee:	dec    edx
  42fbef:	clc    
  42fbf0:	pop    ecx
  42fbf1:	lea    esi,[ecx+0x50]
  42fbf4:	mov    edx,0x8cdccb27
  42fbf9:	mov    ebx,0xbcb06e20
  42fbfe:	cli    
  42fbff:	pop    ecx
  42fc00:	jge    0x42fbf6
  42fc02:	(bad)  
  42fc03:	call   DWORD PTR [edx]
  42fc05:	(bad)  
  42fc06:	in     eax,0x5d
  42fc08:	aas    
  42fc09:	punpckldq mm6,mm4
  42fc0c:	es ja  0x42fbc5
  42fc0f:	pop    es
  42fc10:	pushf  
  42fc11:	inc    ebp
  42fc12:	jge    0x42fbbf
  42fc14:	jle    0x42fbca
  42fc16:	cwde   
  42fc17:	sub    al,0x83
  42fc19:	and    ebp,DWORD PTR [ebx+0x42e9b2ac]
  42fc1f:	push   ecx
  42fc20:	mov    ds:0x58049b17,eax
  42fc25:	pushf  
  42fc26:	stos   BYTE PTR es:[edi],al
  42fc27:	lods   eax,DWORD PTR ds:[esi]
  42fc28:	enter  0xc902,0x8f
  42fc2c:	push   ebp
  42fc2d:	out    0x63,eax
  42fc2f:	(bad)  
  42fc30:	xor    al,0x21
  42fc32:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42fc33:	xor    eax,0x4be03b6a
  42fc38:	out    0xf,eax
  42fc3a:	jnp    0x42fc98
  42fc3c:	xchg   esp,eax
  42fc3d:	xchg   ebx,eax
  42fc3e:	or     ah,BYTE PTR [eax-0x15df8b97]
  42fc44:	(bad)  
  42fc45:	rol    DWORD PTR [ecx],1
  42fc47:	xor    edx,DWORD PTR [eax+0x3e14ceba]
  42fc4d:	xor    bh,BYTE PTR [ecx-0x4a]
  42fc50:	or     al,0x9d
  42fc52:	xchg   ebx,eax
  42fc53:	jmp    0x9d27e761
  42fc58:	jmp    0xfb4b:0x642b8181
  42fc5f:	mov    ds:0xb9b7466,eax
  42fc64:	cmp    al,dl
  42fc66:	jmp    0xdaf1:0xa431146b
  42fc6d:	leave  
  42fc6e:	sti    
  42fc6f:	not    bl
  42fc71:	xor    eax,0x25be5d4c
  42fc76:	imul   dl
  42fc78:	retf   
  42fc79:	and    al,0x35
  42fc7c:	sub    al,0xfe
  42fc7e:	out    dx,eax
  42fc7f:	inc    esi
  42fc80:	add    eax,0xc81fde05
  42fc85:	push   esi
  42fc86:	loope  0x42fc89
  42fc88:	nop
  42fc89:	xchg   ebp,eax
  42fc8a:	and    al,0x77
  42fc8c:	sub    BYTE PTR [ebx],al
  42fc8e:	out    0xa8,al
  42fc90:	pop    esp
  42fc91:	sbb    DWORD PTR [ecx+0x2f],eax
  42fc94:	pop    ss
  42fc95:	call   0x137a:0xb7c72750
  42fc9c:	arpl   WORD PTR [edx+0x2e6a63e1],sp
  42fca2:	loop   0x42fca7
  42fca4:	sbb    eax,0xd1798215
  42fca9:	adc    al,0x32
  42fcab:	inc    ebx
  42fcac:	xor    BYTE PTR [esi-0x4e],dl
  42fcaf:	xchg   edi,eax
  42fcb0:	xchg   esi,eax
  42fcb1:	(bad)  
  42fcb2:	mov    ebx,0xf7bb4eec
  42fcb7:	test   DWORD PTR [esi-0x23],ecx
  42fcba:	push   0x2a
  42fcbc:	sbb    BYTE PTR [edx],bh
  42fcbe:	dec    esi
  42fcbf:	sub    ah,BYTE PTR [ecx+0x258fbce]
  42fcc5:	or     ebx,DWORD PTR [ebx+0xe]
  42fcc8:	iret   
  42fcc9:	adc    BYTE PTR [esi+0x7e],ah
  42fccc:	sbb    BYTE PTR [esi+0x18],bh
  42fccf:	jbe    0x42fd3f
  42fcd1:	push   ebx
  42fcd2:	out    0xc7,eax
  42fcd4:	nop
  42fcd5:	cdq    
  42fcd6:	adc    al,0x18
  42fcd8:	mov    dh,0x7f
  42fcda:	lock add DWORD PTR [eax],eax
  42fcdd:	adc    DWORD PTR [ecx],eax
  42fcdf:	add    BYTE PTR [eax],al
  42fce1:	push   edi
  42fce2:	gs xchg esp,eax
  42fce4:	loope  0x42fca5
  42fce6:	imul   eax,DWORD PTR [eax+0x2c6e6e43],0xffffffe6
  42fced:	mov    ch,0xbe
  42fcef:	into   
  42fcf0:	sub    dl,cl
  42fcf2:	xor    al,0x79
  42fcf4:	push   ebp
  42fcf5:	or     ch,al
  42fcf7:	xchg   edi,eax
  42fcf8:	iret   
  42fcf9:	cdq    
  42fcfa:	and    WORD PTR [edi-0x60f9267d],bp
  42fd01:	fs (bad) 
  42fd03:	xor    dh,dl
  42fd05:	jg     0x42fd4f
  42fd07:	dec    edi
  42fd08:	mov    ebp,0x1d600c0a
  42fd0d:	cld    
  42fd0e:	jae    0x42fc90
  42fd10:	or     ebp,DWORD PTR [ebp-0x3cc69487]
  42fd16:	push   eax
  42fd17:	popa   
  42fd18:	jmp    0xb431adbf
  42fd1d:	out    dx,al
  42fd1e:	jmp    0xc8586285
  42fd23:	sub    BYTE PTR es:[eax],ah
  42fd26:	jno    0x42fd4c
  42fd28:	pop    ebx
  42fd29:	sub    BYTE PTR [esi+0x61],ch
  42fd2c:	and    al,BYTE PTR [ebp-0x5991c113]
  42fd32:	ds (bad) 
  42fd34:	mov    BYTE PTR [esi-0x4dc52d1],ah
  42fd3a:	(bad)  
  42fd3b:	in     al,dx
  42fd3c:	std    
  42fd3d:	ins    DWORD PTR es:[edi],dx
  42fd3e:	into   
  42fd3f:	or     BYTE PTR [ebp-0x2a],bl
  42fd42:	aam    0x0
  42fd44:	jb     0x42fce1
  42fd46:	ja     0x42fce8
  42fd48:	pop    edx
  42fd49:	shl    eax,1
  42fd4b:	les    ecx,FWORD PTR [ecx+0x14]
  42fd4e:	xchg   DWORD PTR [ecx+0x719beb7e],edx
  42fd54:	xchg   esi,eax
  42fd55:	dec    ebp
  42fd56:	and    BYTE PTR [ecx-0x3d2e4ca3],bl
  42fd5c:	push   esp
  42fd5d:	call   0x2ce50f73
  42fd62:	loope  0x42fdba
  42fd64:	cmp    bh,ch
  42fd66:	ins    DWORD PTR es:[edi],dx
  42fd67:	mov    ebp,0x97dc4c38
  42fd6c:	scas   eax,DWORD PTR es:[edi]
  42fd6d:	sbb    ch,BYTE PTR [edx]
  42fd6f:	(bad)  
  42fd71:	mov    es,WORD PTR [esi+0x7d]
  42fd74:	aad    0x93
  42fd76:	mov    eax,0x9999e7fd
  42fd7b:	out    0xfb,eax
  42fd7d:	in     al,0x2d
  42fd7f:	jmp    0xcfd02c21
  42fd84:	sub    al,0xed
  42fd87:	lock ss xchg edx,edi
  42fd8b:	jno    0x42fd27
  42fd8d:	call   0x9af1:0x55d9d0fc
  42fd94:	ret    0x80c5
  42fd97:	(bad)  [edi]
  42fd99:	jmp    0xae1b8147
  42fd9e:	inc    ebx
  42fd9f:	cdq    
  42fda0:	por    mm4,mm3
  42fda3:	ins    DWORD PTR es:[edi],dx
  42fda4:	sbb    cl,BYTE PTR [ecx+0x2f]
  42fda7:	out    dx,eax
  42fda8:	push   ds
  42fda9:	outs   dx,BYTE PTR ds:[esi]
  42fdaa:	add    al,0x11
  42fdac:	in     al,0x92
  42fdae:	xchg   ebx,eax
  42fdaf:	sbb    DWORD PTR [eax+0x3e],esp
  42fdb2:	xchg   edx,eax
  42fdb3:	(bad)  
  42fdb4:	pop    esp
  42fdb5:	push   es
  42fdb6:	mov    eax,0x7623b287
  42fdbb:	add    bl,0xc5
  42fdbe:	sub    edi,edi
  42fdc0:	jmp    0x15c2f167
  42fdc5:	mov    al,0x38
  42fdc7:	push   eax
  42fdc8:	xor    BYTE PTR [ecx+eiz*1+0x4a],dh
  42fdcc:	dec    eax
  42fdcd:	scas   al,BYTE PTR es:[edi]
  42fdce:	jno    0x42fdaa
  42fdd0:	nop
  42fdd1:	add    ecx,DWORD PTR [edx+0x78]
  42fdd4:	sbb    DWORD PTR [edi],edx
  42fdd6:	out    dx,eax
  42fdd7:	xchg   edx,eax
  42fdd8:	fisub  WORD PTR [edx+ebp*8]
  42fddb:	add    DWORD PTR [esp+edi*4],0xffffffc7
  42fddf:	or     al,0xeb
  42fde1:	(bad)  
  42fde2:	sub    DWORD PTR [eax+0x20],edx
  42fde5:	ds (bad) 
  42fde7:	push   0x3e
  42fde9:	pop    edx
  42fdea:	repnz fcomp QWORD PTR [ebp+0x3f]
  42fdee:	push   esp
  42fdef:	aas    
  42fdf0:	push   esp
  42fdf1:	or     BYTE PTR [edi],0xa6
  42fdf4:	outs   dx,DWORD PTR ds:[esi]
  42fdf5:	and    edi,ebp
  42fdf7:	jmp    0x44dac4b
  42fdfc:	jns    0x42fe6b
  42fdfe:	or     eax,0x900a1714
  42fe03:	icebp  
  42fe04:	add    DWORD PTR [eax],eax
  42fe06:	adc    DWORD PTR [ecx],eax
  42fe08:	add    BYTE PTR [eax],al
  42fe0a:	mov    ds,WORD PTR [esi]
  42fe0c:	retf   
  42fe0d:	mov    ah,0xf6
  42fe0f:	(bad)  
  42fe10:	xchg   esi,eax
  42fe11:	mov    esi,0x9bfb79dd
  42fe16:	lock mov edx,ebx
  42fe19:	icebp  
  42fe1a:	add    bh,BYTE PTR [ebp+edi*4-0x4c]
  42fe1e:	add    al,0x11
  42fe20:	fist   DWORD PTR [edi+0x4d462c27]
  42fe26:	sbb    DWORD PTR es:[ebp+0x7a3b34b3],ebx
  42fe2d:	mov    dh,0xa5
  42fe2f:	shr    BYTE PTR [eax],0x9f
  42fe32:	rcr    BYTE PTR [edi-0x1d],0x9f
  42fe36:	and    DWORD PTR gs:[ebx-0x53aca7ae],0x324e6ed6
  42fe41:	mov    ds:0x37333074,eax
  42fe46:	gs and al,0x6b
  42fe49:	sbb    eax,0x9d339e5f
  42fe4e:	outs   dx,DWORD PTR es:[esi]
  42fe50:	(bad)  
  42fe51:	fdivr  QWORD PTR [eax]
  42fe53:	push   esp
  42fe54:	mov    ?,edx
  42fe56:	es inc edi
  42fe58:	mov    ds:0x8968162b,al
  42fe5d:	call   0xa1d289bd
  42fe62:	ins    DWORD PTR es:[edi],dx
  42fe63:	fldenv [ebp+0x6c]
  42fe66:	push   es
  42fe67:	inc    edx
  42fe68:	in     eax,dx
  42fe69:	icebp  
  42fe6a:	mov    dl,0x9f
  42fe6c:	test   al,0x3f
  42fe6e:	mov    edx,DWORD PTR [ecx+0x39995749]
  42fe74:	push   ss
  42fe75:	xchg   BYTE PTR [ebp+0x23],bh
  42fe78:	out    dx,al
  42fe79:	repz mov bh,dl
  42fe7c:	sti    
  42fe7d:	adc    dl,BYTE PTR [esp+edx*8]
  42fe80:	out    0xe8,al
  42fe82:	mov    esp,0x735cd8bf
  42fe87:	call   0x17e8:0x42cb6f80
  42fe8e:	or     DWORD PTR [ebx],0x50b66f75
  42fe94:	loop   0x42fece
  42fe96:	mov    cl,dl
  42fe98:	push   ecx
  42fe99:	or     DWORD PTR [edx+ecx*4-0x63],edx
  42fe9d:	and    al,BYTE PTR [ebp-0x1a]
  42fea0:	enter  0xb386,0x1a
  42fea4:	daa    
  42fea5:	jmp    0x143b:0xe2a7f0c1
  42feac:	aas    
  42fead:	mov    edi,0xe4dfff3c
  42feb2:	(bad)  
  42feb4:	jbe    0x42fe50
  42feb6:	rcl    BYTE PTR [ecx+0x46fc4022],1
  42febc:	idiv   DWORD PTR [esi]
  42febe:	sub    cl,BYTE PTR [edi+0x78]
  42fec1:	fwait
  42fec2:	adc    bh,BYTE PTR [esi+edx*8]
  42fec5:	add    bh,BYTE PTR [esi]
  42fec7:	mov    ecx,0xcc901b65
  42fecc:	cmp    DWORD PTR [ebp-0x58],0x7e
  42fed0:	pop    ebp
  42fed1:	and    eax,0xbcf34130
  42fed6:	xor    eax,0xe20ecac1
  42fedb:	mov    ch,0xbe
  42fedd:	arpl   WORD PTR ds:0x6e4025c6,cx
  42fee3:	sbb    DWORD PTR [ebp-0x141601a3],edi
  42fee9:	cmp    al,0xdb
  42feeb:	call   0x866a:0x6d86f7e
  42fef2:	cmp    DWORD PTR [esi],ebp
  42fef4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42fef5:	shl    DWORD PTR [ebp-0x710f53ab],0x1f
  42fefc:	adc    al,0x48
  42fefe:	aam    0x5c
  42ff00:	aas    
  42ff01:	in     al,0x7c
  42ff03:	fwait
  42ff04:	repnz lahf 
  42ff06:	xor    eax,0x953b7c74
  42ff0b:	add    cl,BYTE PTR [edx+ebx*2]
  42ff0e:	cmc    
  42ff0f:	cs retf 
  42ff11:	ficom  WORD PTR [ecx]
  42ff13:	call   0xaf87:0xaab05f83
  42ff1a:	sbb    edx,DWORD PTR [edx]
  42ff1c:	push   ecx
  42ff1d:	call   0x943eea8d
  42ff22:	jns    0x42ff58
  42ff24:	and    BYTE PTR [ebx+0x18],dh
  42ff27:	cmp    ecx,DWORD PTR [eax-0x3806a152]
  42ff2d:	add    DWORD PTR [eax],eax
  42ff2f:	adc    DWORD PTR [ecx],eax
  42ff31:	add    BYTE PTR [eax],al
  42ff33:	xor    al,0xb
  42ff35:	daa    
  42ff36:	mov    al,0x92
  42ff38:	data16 and bl,BYTE PTR [ecx-0x30]
  42ff3c:	and    al,0xd4
  42ff3e:	mov    ch,0xae
  42ff40:	mov    al,ds:0xa24a7e8f
  42ff45:	js     0x42ff16
  42ff47:	add    edx,DWORD PTR [ecx]
  42ff49:	bnd jae 0x42ff13
  42ff4c:	or     dh,BYTE PTR [ecx+ecx*8-0x48a6276c]
  42ff53:	jo     0x42fed7
  42ff55:	push   0xea3087bd
  42ff5a:	mov    esp,0xbff0ac69
  42ff5f:	jp     0x42ff1b
  42ff61:	mov    BYTE PTR [eax-0x6d91ad85],ah
  42ff67:	les    esi,FWORD PTR [esp+esi*1]
  42ff6a:	push   esi
  42ff6b:	push   eax
  42ff6c:	fisubr WORD PTR [eax-0x2e]
  42ff6f:	daa    
  42ff70:	jmp    0xdf10:0xebe98650
  42ff77:	bnd jne 0x42ff0a
  42ff7a:	and    BYTE PTR [ebx],0xba
  42ff7d:	test   al,0x8c
  42ff7f:	inc    edi
  42ff80:	fdivr  DWORD PTR [esi-0xda017e1]
  42ff86:	xor    eax,0xab28a987
  42ff8b:	dec    ecx
  42ff8c:	imul   edx,DWORD PTR [ebx-0xc],0xffffffe4
  42ff90:	mov    dh,0x6
  42ff92:	cmp    eax,0x58dfee86
  42ff97:	js     0x42ff4b
  42ff99:	cmp    dl,cl
  42ff9b:	stos   DWORD PTR es:[edi],eax
  42ff9c:	inc    esp
  42ff9d:	outs   dx,BYTE PTR ds:[esi]
  42ff9e:	xchg   ebp,eax
  42ff9f:	das    
  42ffa0:	in     al,dx
  42ffa1:	iret   
  42ffa2:	sub    BYTE PTR [esi+eax*8-0x34],dh
  42ffa6:	cmp    esi,0x69661ade
  42ffac:	or     DWORD PTR ds:0xca407184,esi
  42ffb2:	mov    al,0x61
  42ffb4:	mov    ebx,0x507f798b
  42ffb9:	fmul   DWORD PTR ds:0x58b25688
  42ffbf:	dec    esi
  42ffc0:	sub    BYTE PTR [edx],ah
  42ffc2:	enter  0x1434,0x8f
  42ffc6:	add    edi,DWORD PTR [eax-0x20]
  42ffc9:	mov    cl,0x20
  42ffcb:	bound  ebp,QWORD PTR [esi]
  42ffcd:	das    
  42ffce:	aas    
  42ffcf:	jb     0x42ffa5
  42ffd1:	cld    
  42ffd2:	dec    eax
  42ffd3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42ffd4:	xor    BYTE PTR [eax-0x21f992b1],dh
  42ffda:	jne    0x430002
  42ffdc:	and    al,0x7
  42ffde:	jle    0x430043
  42ffe0:	daa    
  42ffe1:	xor    eax,0xf8b140e9
  42ffe6:	xor    ah,bl
  42ffe8:	loopne 0x430037
  42ffea:	dec    ebx
  42ffeb:	push   0x56
  42ffed:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42ffee:	cmp    al,0x26
  42fff0:	(bad)  
  42fff2:	into   
  42fff3:	jle    0x430069
  42fff5:	mov    ds:0xc8f2e993,eax
  42fffa:	mov    esp,0x27b41bed
  42ffff:	jp     0x42ffb3
  430001:	test   DWORD PTR [edi+0x7ebc1209],ecx
  430007:	(bad)  
  430008:	out    0x26,al
  43000a:	sbb    al,0x2f
  43000c:	push   edx
  43000d:	jbe    0x43008a
  43000f:	dec    edi
  430010:	into   
  430011:	aam    0x7c
  430013:	stos   DWORD PTR es:[edi],eax
  430014:	xchg   edi,eax
  430015:	sub    bh,0xb2
  430018:	mov    edx,0x60f40bb2
  43001d:	sbb    dl,ah
  43001f:	out    dx,eax
  430020:	inc    ecx
  430021:	call   0x6220:0xa3c9e476
  430028:	adc    al,0x50
  43002a:	or     al,al
  43002c:	iret   
  43002d:	into   
  43002e:	jg     0x42fff2
  430030:	in     eax,0x4
  430032:	fistp  QWORD PTR [ecx]
  430034:	add    ecx,DWORD PTR [esi-0x56]
  430037:	xor    cl,BYTE PTR [ebp-0x33fa0a6e]
  43003d:	in     al,0xa4
  43003f:	sub    ch,bh
  430041:	call   0x1925:0xa61a8816
  430048:	mov    ebp,0xaba73e9b
  43004d:	stc    
  43004e:	xor    al,0xdd
  430050:	add    al,0x5f
  430052:	test   eax,0x1c6e896
  430057:	add    BYTE PTR [ecx],dl
  430059:	add    DWORD PTR [eax],eax
  43005b:	add    BYTE PTR [ecx+0x23],bh
  43005e:	(bad)  
  43005f:	cld    
  430060:	call   0x98ef7b12
  430065:	pop    ds
  430066:	xlat   BYTE PTR ds:[ebx]
  430067:	popa   
  430068:	add    dh,cl
  43006a:	rcl    ebx,1
  43006c:	cdq    
  43006d:	mov    edi,edx
  43006f:	addr16 mov ebp,0x6d0bb86a
  430075:	aam    0x6d
  430077:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  430078:	mov    ebp,DWORD PTR [ebx+0x1a76eaaa]
  43007e:	(bad)  
  43007f:	adc    BYTE PTR [edx-0x467c1b3b],ch
  430085:	adc    eax,0x3f1e7ec2
  43008a:	sbb    eax,0x8f99c3b7
  43008f:	sub    DWORD PTR [edi+ebp*1],ebp
  430092:	add    al,0x25
  430094:	inc    esi
  430095:	push   0xffffffdb
  430097:	shl    esi,1
  430099:	sbb    ebp,0xffffffe9
  43009c:	sub    cl,cl
  43009e:	cwde   
  43009f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4300a0:	ins    DWORD PTR es:[edi],dx
  4300a1:	sub    DWORD PTR [edi-0x3eaf6447],edi
  4300a7:	fisub  DWORD PTR [edi-0x5f3c1988]
  4300ad:	pusha  
  4300ae:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4300af:	mov    bh,0x12
  4300b1:	ret    
  4300b2:	mov    WORD PTR [eax+0x9],fs
  4300b5:	adc    ch,BYTE PTR [edi-0x44f30512]
  4300bb:	mov    edi,edx
  4300bd:	mov    ebp,0x54a855a7
  4300c2:	scas   eax,DWORD PTR es:[edi]
  4300c3:	or     eax,0x1a9b5c59
  4300c8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4300c9:	pop    ecx
  4300ca:	xor    eax,0xec1fe356
  4300cf:	push   ebp
  4300d0:	test   al,0x57
  4300d2:	shr    BYTE PTR [edi],1
  4300d4:	clc    
  4300d5:	cmc    
  4300d6:	and    ch,bl
  4300d8:	test   DWORD PTR [edx],ebx
  4300da:	inc    esi
  4300db:	jmp    0x9129:0xea139213
  4300e2:	xor    edx,0xf6f69318
  4300e8:	(bad)  
  4300e9:	xor    BYTE PTR [ecx+0x7eba36f7],cl
  4300ef:	inc    ecx
  4300f0:	pop    edx
  4300f1:	jne    0x43010b
  4300f3:	pop    esi
  4300f4:	xor    dh,dl
  4300f6:	jns    0x430097
  4300f8:	enter  0xee89,0xdb
  4300fc:	adc    al,0xf7
  4300fe:	into   
  4300ff:	int3   
  430100:	or     bl,BYTE PTR [ecx-0x49]
  430103:	xor    DWORD PTR [ebx],0xffffffa5
  430106:	(bad)  
  430108:	mov    ecx,0x50df37d2
  43010d:	leave  
  43010e:	xlat   BYTE PTR ds:[ebx]
  43010f:	xchg   esp,eax
  430110:	mov    edx,0x61ae020
  430115:	push   ebx
  430116:	(bad)  
  430117:	push   ss
  430118:	push   esp
  430119:	add    eax,0x5259adbb
  43011e:	rol    DWORD PTR [ebx-0x7],0xbf
  430122:	stc    
  430123:	rol    DWORD PTR [edi],cl
  430125:	aas    
  430126:	pop    esp
  430127:	sub    al,0x42
  430129:	cld    
  43012a:	je     0x4301a6
  43012c:	stc    
  43012d:	out    dx,al
  43012e:	scas   eax,DWORD PTR es:[edi]
  43012f:	fstp   QWORD PTR [esi-0x4bcce89c]
  430135:	stos   DWORD PTR es:[edi],eax
  430136:	or     BYTE PTR [eax],dh
  430138:	jo     0x430142
  43013a:	mov    ds:0x577c2880,ax
  430140:	dec    edx
  430141:	push   ebx
  430142:	and    dh,dh
  430144:	or     ebp,DWORD PTR ds:0x1b318131
  43014a:	cli    
  43014b:	cld    
  43014c:	push   edi
  43014d:	fisubr WORD PTR [edi-0x48]
  430150:	push   0x42
  430152:	jne    0x4300fc
  430154:	xchg   BYTE PTR [edi],dh
  430156:	push   eax
  430157:	or     BYTE PTR [edi-0x148dcf72],al
  43015d:	imul   ecx,DWORD PTR [ecx-0x5dd957a2],0xffffffc1
  430164:	or     ah,0xa
  430167:	lea    esi,[ebx]
  430169:	inc    edi
  43016a:	lods   eax,DWORD PTR ds:[esi]
  43016b:	popf   
  43016c:	test   DWORD PTR [esi+0x54],ebx
  43016f:	and    ebp,ecx
  430171:	sub    edi,ebp
  430173:	(bad)  
  430174:	xlat   BYTE PTR ds:[ebx]
  430175:	dec    ecx
  430176:	mov    ebp,0x38abba5f
  43017b:	jg     0x43018f
  43017d:	or     cl,cl
  43017f:	add    DWORD PTR [eax],eax
  430181:	adc    DWORD PTR [ecx],eax
  430183:	add    BYTE PTR [eax],al
  430185:	in     al,0x26
  430187:	pop    ss
  430188:	cmp    DWORD PTR [ebp-0x3536f937],edi
  43018e:	jle    0x4301c1
  430190:	adc    DWORD PTR [esi-0x58],esi
  430193:	sbb    edi,DWORD PTR [edi+0x54e0d765]
  430199:	pop    ds
  43019a:	mov    esi,0x96c19650
  43019f:	or     al,0xca
  4301a1:	push   es
  4301a2:	fidivr DWORD PTR [ebx+0x4b3a87c9]
  4301a8:	hlt    
  4301a9:	adc    al,0x80
  4301ab:	mov    ebx,0xb978a3
  4301b0:	ss (bad) 
  4301b2:	jne    0x430222
  4301b4:	sar    DWORD PTR [ebx+0x6dc52eb3],0x1f
  4301bb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4301bc:	pop    edx
  4301bd:	push   ecx
  4301be:	sub    ebp,edi
  4301c0:	mov    edx,0xc17a096b
  4301c5:	loop   0x4301c4
  4301c7:	inc    eax
  4301c8:	dec    esp
  4301c9:	std    
  4301ca:	fcomp  DWORD PTR [edx]
  4301cc:	icebp  
  4301cd:	loop   0x430159
  4301cf:	mov    ebp,0x1e01e4e6
  4301d4:	mov    ebx,DWORD PTR [edi-0x27]
  4301d7:	push   esp
  4301d8:	xchg   edx,eax
  4301d9:	xchg   edx,eax
  4301da:	cmp    dh,BYTE PTR [edi]
  4301dc:	jno    0x43016e
  4301de:	jg     0x4301c4
  4301e0:	xor    ah,BYTE PTR [ecx+edi*8-0x220a6eb7]
  4301e7:	xchg   ebp,eax
  4301e8:	in     al,0x1d
  4301ea:	mov    DWORD PTR [ebx-0x54d0c1f7],ecx
  4301f0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4301f1:	and    al,0x74
  4301f3:	cdq    
  4301f4:	std    
  4301f5:	or     BYTE PTR [edx+0x7],ch
  4301f8:	sar    edx,1
  4301fa:	(bad)  
  4301fb:	rcl    DWORD PTR [eax],cl
  4301fd:	mov    bl,0x46
  4301ff:	jo     0x43020e
  430201:	push   0xffffffae
  430203:	xchg   ebx,eax
  430204:	repnz xor dl,BYTE PTR [ecx-0x70]
  430208:	loop   0x4301f8
  43020a:	mov    eax,0x708c3995
  43020f:	idiv   BYTE PTR [esp+ecx*4]
  430212:	xchg   edi,eax
  430213:	lds    ebp,FWORD PTR [ebx-0x44]
  430216:	cdq    
  430217:	mov    al,ds:0x6f389dd1
  43021c:	push   ds
  43021d:	test   BYTE PTR [eax+0xc],0x3e
  430221:	or     bh,al
  430223:	xchg   esi,eax
  430224:	data16 and al,BYTE PTR [ecx+0x538e7394]
  43022b:	hlt    
  43022c:	int    0x43
  43022e:	xchg   edx,eax
  43022f:	mov    eax,ds:0x4acab112
  430234:	mov    ds:0x3ef0d132,eax
  430239:	aas    
  43023a:	loop   0x43027a
  43023c:	aaa    
  43023d:	fdivrp st(1),st
  43023f:	imul   eax,DWORD PTR [esi+esi*4-0x7df9abc0],0xffffff9a
  430247:	call   0x266091ef
  43024c:	pop    eax
  43024d:	adc    eax,0x41e0f7df
  430252:	pop    eax
  430253:	fsubr  DWORD PTR [edx]
  430255:	jne    0x4301e4
  430257:	dec    edx
  430258:	adc    edi,DWORD PTR [edx+0x40]
  43025b:	pop    esi
  43025c:	dec    esp
  43025d:	inc    ebx
  43025e:	mov    esp,0x48ee814c
  430263:	push   ds
  430264:	lahf   
  430265:	xor    bh,BYTE PTR [edi]
  430267:	addr16 jbe 0x43025b
  43026a:	push   eax
  43026b:	fcmovnu st,st(6)
  43026d:	aad    0x8b
  43026f:	mov    al,ds:0x2e971f41
  430274:	dec    eax
  430275:	push   ds
  430276:	imul   ebp,DWORD PTR [esi],0xffffff99
  430279:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43027a:	jmp    esp
  43027c:	jmp    0x430254
  43027e:	push   edx
  43027f:	fimul  WORD PTR [eax]
  430281:	pusha  
  430282:	push   es
  430283:	dec    edx
  430284:	les    esi,FWORD PTR [ebx]
  430286:	je     0x430256
  430288:	lea    ebx,[edi+0x7b447c13]
  43028e:	sbb    eax,0x53abaee6
  430293:	add    BYTE PTR [ebp-0x7299619],al
  430299:	in     al,0xff
  43029b:	out    dx,al
  43029c:	jge    0x43027d
  43029e:	sub    DWORD PTR [eax],esi
  4302a0:	sub    eax,0x9237d30
  4302a5:	stos   DWORD PTR es:[edi],eax
  4302a6:	sbb    ecx,edx
  4302a8:	add    DWORD PTR [eax],eax
  4302aa:	adc    DWORD PTR [ecx],eax
  4302ac:	add    BYTE PTR [eax],al
  4302ae:	nop
  4302af:	push   ebx
  4302b0:	inc    edi
  4302b1:	je     0x430235
  4302b3:	push   esi
  4302b4:	loope  0x4302be
  4302b6:	js     0x430324
  4302b8:	add    eax,0x9fe789c7
  4302bd:	mov    ah,0x9c
  4302bf:	scas   eax,DWORD PTR es:[edi]
  4302c0:	sbb    ebp,eax
  4302c2:	lahf   
  4302c3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4302c4:	in     al,dx
  4302c5:	dec    ebx
  4302c6:	adc    edx,edi
  4302c8:	int    0xf4
  4302ca:	jl     0x4302e4
  4302cc:	outs   dx,BYTE PTR ds:[esi]
  4302cd:	jmp    0x4302e6
  4302cf:	mov    cs:0x5de41e48,al
  4302d5:	inc    ebx
  4302d6:	es push es
  4302d8:	mov    ch,0x99
  4302da:	cld    
  4302db:	inc    ebx
  4302dc:	sub    BYTE PTR [eax+ebx*8],0xae
  4302e0:	mov    esi,0x6cffaab
  4302e5:	loopne 0x43027a
  4302e7:	xor    eax,0xa8d366
  4302ec:	shl    cl,1
  4302ee:	add    DWORD PTR [edi],esi
  4302f0:	retf   
  4302f1:	adc    al,0x16
  4302f3:	adc    eax,0x2d8dc31e
  4302f8:	in     eax,0xdf
  4302fa:	mov    es,WORD PTR [ebx-0x9efef7a]
  430300:	sahf   
  430301:	enter  0xb660,0xf9
  430305:	mov    al,0x42
  430307:	jno    0x430322
  430309:	ror    BYTE PTR [ebp-0xf04cb4f],cl
  43030f:	shr    DWORD PTR ds:0x1becaaf,0x94
  430316:	int3   
  430317:	sti    
  430318:	cld    
  430319:	popf   
  43031a:	jmp    0x9236f3db
  43031f:	xchg   DWORD PTR [esi+0x2f7ffdd4],edi
  430325:	add    esp,edx
  430327:	jmp    0x430338
  430329:	test   DWORD PTR [edi],0x64c616ae
  43032f:	imul   DWORD PTR [edx+ebx*1-0x5a507a6a]
  430336:	inc    ebx
  430337:	stos   BYTE PTR es:[edi],al
  430338:	sub    edx,DWORD PTR [esi+ebx*4]
  43033b:	repz cmp eax,0xb646c7cd
  430341:	dec    ebx
  430342:	sahf   
  430343:	xor    BYTE PTR [edi-0xf90c9c1],0x4b
  43034a:	in     eax,0x6
  43034c:	mov    WORD PTR [esi],es
  43034e:	pop    ebp
  43034f:	sub    bl,al
  430351:	mov    eax,0x31341637
  430356:	inc    eax
  430357:	sbb    eax,0xd94cbdf7
  43035c:	mov    esp,0xd68f322b
  430361:	loop   0x4302eb
  430363:	mov    esp,0xdb8ed155
  430368:	std    
  430369:	or     al,dh
  43036b:	sub    BYTE PTR [esi-0x47],0x1c
  43036f:	jno    0x4303ec
  430371:	mov    ds:0x9c751ea4,al
  430376:	dec    eax
  430377:	push   ecx
  430378:	std    
  430379:	xor    al,ch
  43037b:	mov    al,ds:0x71bb2f72
  430380:	je     0x4303c5
  430382:	sbb    al,0x6b
  430384:	stos   DWORD PTR es:[edi],eax
  430385:	sub    ebx,0x82cc4360
  43038b:	ret    0x4892
  43038e:	ret    0x5406
  430391:	push   ss
  430392:	aad    0x84
  430394:	sti    
  430395:	push   0x467a4950
  43039a:	in     eax,0x87
  43039c:	mov    ebx,DWORD PTR [ebx+esi*2+0x25c22c71]
  4303a3:	mov    al,ds:0x15b92dc
  4303a8:	ss mov dl,0x2f
  4303ab:	sti    
  4303ac:	jns    0x430376
  4303ae:	inc    ecx
  4303af:	xlat   BYTE PTR ds:[ebx]
  4303b0:	and    dh,ch
  4303b2:	adc    ebp,edx
  4303b4:	sbb    BYTE PTR [ecx],ch
  4303b6:	sbb    BYTE PTR [esp+eiz*2-0x33225c0a],ah
  4303bd:	nop
  4303be:	ss sbb eax,0xbbc101a7
  4303c4:	out    0xdd,eax
  4303c6:	jmp    FWORD PTR [edi-0x2b]
  4303c9:	dec    esp
  4303ca:	std    
  4303cb:	cmp    eax,0x71ada45c
  4303d0:	mov    edi,0x1110001
  4303d5:	add    BYTE PTR [eax],al
  4303d7:	imul   esi,DWORD PTR [ebp+0x25],0x1897e99d
  4303de:	fstp   st(6)
  4303e0:	in     al,dx
  4303e1:	xchg   ebp,eax
  4303e2:	enter  0x6662,0xf6
  4303e6:	dec    edi
  4303e7:	pop    ecx
  4303e8:	mov    BYTE PTR [ecx],bh
  4303ea:	push   es
  4303eb:	adc    eax,0x817cc2d6
  4303f0:	(bad)  
  4303f1:	sbb    ch,BYTE PTR [eax+ebx*4-0x2bb01eca]
  4303f8:	stos   DWORD PTR es:[edi],eax
  4303f9:	lds    ebp,FWORD PTR [eax]
  4303fb:	ss lsl esp,si
  4303ff:	ja     0x43045f
  430401:	lock mov bh,0x27
  430404:	pop    ebx
  430405:	xor    esp,edi
  430407:	in     al,dx
  430408:	fmul   st(5),st
  43040a:	pop    ds
  43040b:	push   esi
  43040c:	pop    DWORD PTR ds:0x75e60136
  430412:	sbb    al,0x2a
  430414:	sub    al,0x71
  430416:	sahf   
  430417:	and    ecx,DWORD PTR [edi]
  430419:	jge    0x3056c0fa
  43041f:	jno    0x4303fe
  430421:	mov    ah,0x24
  430423:	cmc    
  430424:	(bad)  [edx+0x2f]
  430427:	repnz inc ebp
  430429:	xor    DWORD PTR [edx+0x7ed2b412],0xffffffae
  430430:	loopne 0x43047e
  430432:	outs   dx,BYTE PTR ds:[esi]
  430433:	sahf   
  430434:	mov    ds:0xa641a230,eax
  430439:	ror    DWORD PTR [esi],0x8d
  43043c:	mov    cl,bh
  43043e:	addr16 cmp eax,0xb80ab4e0
  430444:	daa    
  430445:	inc    esi
  430446:	shl    ebp,0xa5
  430449:	inc    ebx
  43044a:	int3   
  43044b:	xchg   DWORD PTR [ebx+ebx*8],esp
  43044e:	mov    cl,0x28
  430450:	scas   al,BYTE PTR es:[edi]
  430451:	pop    esp
  430452:	cli    
  430453:	(bad)  
  430454:	cli    
  430455:	stos   BYTE PTR es:[edi],al
  430456:	enter  0xe112,0x41
  43045a:	cmp    al,0x26
  43045c:	cmp    eax,0xd51f21ce
  430461:	test   BYTE PTR [eax],cl
  430463:	outs   dx,DWORD PTR ds:[esi]
  430464:	and    al,BYTE PTR [eax+0x621b81ce]
  43046a:	mov    al,ds:0x7e3e4bb
  43046f:	stos   DWORD PTR es:[edi],eax
  430470:	sub    al,0x94
  430472:	sbb    ah,BYTE PTR [esi]
  430474:	cs xchg ecx,eax
  430476:	outs   dx,DWORD PTR ds:[esi]
  430477:	es jnp 0x430403
  43047a:	add    cl,ah
  43047c:	(bad)  
  43047e:	out    dx,eax
  43047f:	pop    esp
  430480:	xchg   ebx,eax
  430481:	cmc    
  430482:	lds    edi,FWORD PTR [eax]
  430484:	sbb    DWORD PTR [esi-0x6d11d159],ebx
  43048a:	push   0xa94172a7
  43048f:	inc    edx
  430490:	jb     0x430460
  430492:	jge    0x430450
  430494:	pop    edx
  430495:	hlt    
  430496:	lods   eax,DWORD PTR ds:[esi]
  430497:	in     eax,dx
  430498:	fs inc edx
  43049a:	lds    esp,FWORD PTR ds:0x311045c7
  4304a0:	mov    dh,0xcd
  4304a2:	rcr    DWORD PTR [ebp+0x3b],1
  4304a5:	or     ecx,esi
  4304a7:	xchg   ecx,eax
  4304a8:	sub    DWORD PTR [ecx+ebp*8-0x662fa9a2],esi
  4304af:	pop    es
  4304b0:	outs   dx,DWORD PTR ds:[esi]
  4304b1:	adc    dh,cl
  4304b3:	mov    DWORD PTR [ebx-0x15],edx
  4304b6:	ss cmp al,0xb5
  4304b9:	xchg   ebp,eax
  4304ba:	shl    DWORD PTR [esi-0x11],1
  4304bd:	mov    bl,0xef
  4304bf:	or     BYTE PTR [edx-0x78],bh
  4304c2:	xor    al,0xce
  4304c4:	sub    ebp,DWORD PTR [esi-0x9]
  4304c7:	loope  0x43052a
  4304c9:	into   
  4304ca:	jl     0x4304f4
  4304cc:	or     eax,0x10cfc713
  4304d1:	mov    eax,ds:0xba985442
  4304d6:	xchg   DWORD PTR [ebx+ecx*8-0xa],edx
  4304da:	in     eax,0xe
  4304dc:	daa    
  4304dd:	cmp    al,bl
  4304df:	xor    bl,dh
  4304e1:	(bad)  
  4304e2:	out    dx,al
  4304e3:	outs   dx,DWORD PTR ds:[esi]
  4304e4:	cmp    ebp,eax
  4304e6:	mov    ebp,0xebd99adb
  4304eb:	out    0xeb,al
  4304ed:	neg    BYTE PTR [edi+0x18bf5afd]
  4304f3:	out    0xa1,al
  4304f5:	jecxz  0x430495
  4304f7:	outs   dx,DWORD PTR ds:[esi]
  4304f8:	mov    bh,0xa3
  4304fa:	add    DWORD PTR [eax],eax
  4304fc:	adc    DWORD PTR [ecx],eax
  4304fe:	add    BYTE PTR [eax],al
  430500:	imul   edi,eax,0xffffffaa
  430503:	xchg   DWORD PTR ds:0x24e09e04,ebp
  430509:	js     0x430522
  43050b:	mov    ebx,0x6551c5f1
  430510:	pusha  
  430511:	add    dh,BYTE PTR [ebx+0x5198f4de]
  430517:	jns    0x430555
  430519:	xchg   esp,eax
  43051a:	loope  0x4304c0
  43051c:	push   ss
  43051d:	mov    ecx,ebx
  43051f:	push   ebp
  430520:	addr16 cmp edi,ebx
  430523:	cmp    edx,DWORD PTR ds:0x9f633f6f
  430529:	adc    eax,0x2633b883
  43052e:	imul   edx,DWORD PTR [eax-0x6940b129],0xa3919285
  430538:	cmovge ebx,DWORD PTR [eax]
  43053b:	and    al,0xbe
  43053d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43053e:	sub    BYTE PTR ds:0x2c194071,0xa2
  430545:	pop    ds
  430546:	sbb    al,0x46
  430548:	xor    al,0x5f
  43054a:	cs ds sbb al,0x34
  43054e:	retf   0x7f71
  430551:	aam    0x95
  430553:	sbb    DWORD PTR [eax],ebx
  430555:	and    bl,cl
  430557:	mov    eax,0x59313ebf
  43055c:	jg     0x430544
  43055e:	jmp    0xd90b:0x18125653
  430565:	pop    ecx
  430566:	pushf  
  430567:	mov    ?,WORD PTR [eax+ebx*8-0x16609ed7]
  43056e:	ror    DWORD PTR [eax],1
  430570:	jno    0x430586
  430572:	scas   eax,DWORD PTR es:[edi]
  430573:	rcr    DWORD PTR [edi-0x60],0x4a
  430577:	mov    esp,0xa530d1bf
  43057c:	pop    es
  43057d:	loope  0x430545
  43057f:	(bad)  
  430581:	mov    WORD PTR [esi-0x18],cs
  430584:	cmp    bl,ch
  430586:	inc    edi
  430587:	stos   BYTE PTR es:[edi],al
  430588:	cli    
  430589:	inc    eax
  43058a:	and    bl,BYTE PTR es:[esi-0x22]
  43058e:	fcomp  DWORD PTR [eax+eax*4+0x4e0d00df]
  430595:	dec    esi
  430596:	enter  0xa5b,0x77
  43059a:	mov    ebx,0xe471d35b
  43059f:	aad    0x17
  4305a1:	pop    ss
  4305a2:	aaa    
  4305a3:	xchg   ecx,eax
  4305a4:	rcl    DWORD PTR [esi],cl
  4305a6:	shl    DWORD PTR [ebx-0x55],0xa7
  4305aa:	inc    esp
  4305ab:	mov    eax,DWORD PTR [eax+esi*4+0x23]
  4305af:	cs xchg esp,eax
  4305b1:	fsubr  st,st(6)
  4305b3:	cmp    esi,ebp
  4305b5:	push   esi
  4305b6:	inc    edi
  4305b7:	loop   0x4305bf
  4305b9:	sub    DWORD PTR [edi],esi
  4305bb:	sbb    eax,DWORD PTR [edx+0x2abdd9ae]
  4305c1:	sahf   
  4305c2:	and    BYTE PTR [ebx],al
  4305c4:	jb     0x4305e0
  4305c6:	lods   eax,DWORD PTR ds:[esi]
  4305c7:	mov    al,ds:0x84c841f9
  4305cc:	push   ds
  4305cd:	icebp  
  4305ce:	sub    dl,0xe9
  4305d1:	and    BYTE PTR [ebp+0x16],0x70
  4305d5:	fsubr  DWORD PTR [esi+0x1001ee9e]
  4305db:	push   esp
  4305dc:	test   BYTE PTR [ebx-0x36],cl
  4305df:	out    0xdb,eax
  4305e1:	pop    ecx
  4305e2:	push   es
  4305e3:	fisub  WORD PTR [eax+0x4c]
  4305e6:	inc    esp
  4305e7:	pushf  
  4305e8:	xor    bh,BYTE PTR [esi+0x49]
  4305eb:	cmc    
  4305ec:	inc    ecx
  4305ed:	ret    0x5772
  4305f0:	jnp    0x4305f4
  4305f2:	ret    
  4305f3:	cdq    
  4305f4:	or     ecx,esp
  4305f6:	or     DWORD PTR [edi+0xa],eax
  4305f9:	out    0x56,al
  4305fb:	xchg   esp,eax
  4305fc:	sub    esi,ecx
  4305fe:	jg     0x43065f
  430600:	sti    
  430601:	sbb    esi,esp
  430603:	int    0xca
  430605:	mov    ah,BYTE PTR [eax+0x63071b73]
  43060b:	imul   edi,DWORD PTR [eax-0x7ed5d153],0xd7e99ed9
  430615:	out    dx,eax
  430616:	idiv   edi
  430618:	sahf   
  430619:	sub    al,0xfd
  43061b:	add    al,0x4d
  43061d:	sbb    eax,DWORD PTR [eax+0x19]
  430620:	jno    0x4305ea
  430622:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  430623:	add    DWORD PTR [eax],eax
  430625:	adc    DWORD PTR [ecx],eax
  430627:	add    BYTE PTR [eax],al
  430629:	sub    bh,al
  43062b:	dec    esi
  43062c:	daa    
  43062d:	imul   ebp,ebx,0x14
  430630:	fninit 
  430632:	les    ecx,FWORD PTR [edx]
  430634:	test   eax,0x7102e2a0
  430639:	xor    eax,0x7efc23b6
  43063e:	sub    BYTE PTR [edi],0xca
  430641:	arpl   cx,di
  430643:	pop    ebx
  430644:	xchg   edx,eax
  430645:	imul   ecx,DWORD PTR [ebp+edx*4-0x3d],0x8608a59e
  43064d:	add    ebx,DWORD PTR [esp+ebp*2-0x762c33f1]
  430654:	jo     0x430613
  430656:	adc    eax,DWORD PTR [ebp+0x47]
  430659:	mov    ds:0xe7679eb,al
  43065e:	sub    al,0x3f
  430660:	mov    ah,0xd3
  430662:	jbe    0x4306af
  430664:	ins    DWORD PTR es:[edi],dx
  430665:	push   0x5fa6e0aa
  43066a:	mov    ds:0x4c099c85,eax
  43066f:	mov    ds:0x70ed2ac2,eax
  430674:	mov    ch,bl
  430676:	push   eax
  430677:	dec    ebx
  430678:	sub    cl,0x70
  43067b:	jmp    0x2552:0xe1aff0fa
  430682:	push   ds
  430683:	in     al,dx
  430684:	push   0xffffffff
  430686:	mov    ds:0xa45ef24a,al
  43068b:	fs push edi
  43068d:	imul   ecx,ebx,0xffffff9c
  430690:	sar    DWORD PTR [ebx],1
  430692:	les    eax,FWORD PTR [ebx-0xd33956d]
  430698:	xchg   esi,eax
  430699:	nop
  43069a:	mov    BYTE PTR [edi],ah
  43069c:	(bad)  
  43069d:	mul    BYTE PTR [ecx-0x39a2abeb]
  4306a3:	pop    ebp
  4306a4:	mov    al,0x1
  4306a6:	aaa    
  4306a7:	or     bh,BYTE PTR [esi-0x41]
  4306aa:	pop    esp
  4306ab:	sub    dh,BYTE PTR [esi]
  4306ad:	loop   0x430648
  4306af:	sahf   
  4306b0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4306b1:	cmp    DWORD PTR [esi],eax
  4306b3:	cmp    esp,DWORD PTR [ecx*8+0x34219a82]
  4306ba:	loop   0x4306ac
  4306bc:	cmp    ebp,ebx
  4306be:	adc    eax,edi
  4306c0:	imul   edi,DWORD PTR [esi],0xee29f5b4
  4306c6:	dec    ebx
  4306c7:	mov    ss,edx
  4306c9:	je     0x430703
  4306cb:	retf   0x477c
  4306ce:	dec    ebx
  4306cf:	rol    DWORD PTR [ebx-0x4e6049ad],1
  4306d5:	and    ah,BYTE PTR [ecx-0x61837ccc]
  4306db:	adc    al,0xb9
  4306dd:	dec    ebp
  4306de:	and    DWORD PTR [edx+edi*4+0xbc235eb],esi
  4306e5:	scas   al,BYTE PTR es:[edi]
  4306e6:	sbb    DWORD PTR [esi+0x29],ebp
  4306e9:	cdq    
  4306ea:	not    BYTE PTR [edx+0x550f5f8e]
  4306f0:	sub    al,0x5
  4306f2:	jg     0x4306e9
  4306f4:	imul   BYTE PTR [ebp-0x72]
  4306f7:	jle    0x4306dc
  4306f9:	pop    ecx
  4306fa:	dec    esp
  4306fb:	out    dx,al
  4306fc:	mov    al,0x70
  4306fe:	sbb    eax,DWORD PTR [eax+esi*2+0x7d]
  430702:	inc    edi
  430703:	loop   0x4306b6
  430705:	pop    esp
  430706:	jno    0x4306cc
  430708:	dec    ecx
  430709:	sbb    cl,ah
  43070b:	add    dh,BYTE PTR [esi]
  43070d:	lock jg 0x4306e4
  430710:	jmp    FWORD PTR [ebp+0x2b]
  430713:	pop    esp
  430714:	push   es
  430715:	fmul   QWORD PTR [eax+0x35b725c1]
  43071b:	and    ebx,edx
  43071d:	or     bh,dh
  43071f:	lds    ecx,FWORD PTR [ecx-0x3e]
  430722:	lock jb 0x430726
  430725:	pop    es
  430726:	fucomip st,st(4)
  430728:	jbe    0x4307a3
  43072a:	sti    
  43072b:	sub    DWORD PTR [eax-0xb],ebx
  43072e:	jp     0x4306c9
  430730:	mov    al,ds:0xa052ef7c
  430735:	shl    edx,0x89
  430738:	mov    esp,0xb4cc833
  43073d:	xor    ecx,DWORD PTR [edi-0x5d000789]
  430743:	xchg   ebx,eax
  430744:	retf   0xfb24
  430747:	test   al,0xc2
  430749:	repnz mov ah,0xd3
  43074c:	add    DWORD PTR [eax],eax
  43074e:	adc    DWORD PTR [ecx],eax
  430750:	add    BYTE PTR [eax],al
  430752:	(bad)  
  430753:	cmp    edx,DWORD PTR [ebp-0x3abbf1c2]
  430759:	repnz mov esp,0x8ec54702
  43075f:	ss std 
  430761:	dec    esi
  430762:	(bad)  
  430763:	cld    
  430764:	cmc    
  430765:	iret   
  430766:	and    al,cl
  430768:	enter  0x6dda,0x9a
  43076c:	add    ebx,DWORD PTR [ebp+0x33]
  43076f:	cwde   
  430770:	int3   
  430771:	adc    eax,0xec7cd81d
  430776:	adc    BYTE PTR cs:[ebx],bh
  430779:	mov    ah,dl
  43077b:	and    al,0x7e
  43077d:	push   es
  43077e:	sub    ebx,DWORD PTR [eax+ebx*4]
  430781:	mov    edi,0x5b50ee27
  430786:	jno    0x43070a
  430788:	mov    esp,0x28872c70
  43078d:	inc    edx
  43078e:	pop    edx
  43078f:	fist   WORD PTR [ebp-0x1d]
  430792:	int3   
  430793:	jnp    0x430783
  430795:	jno    0x4307dc
  430797:	mov    bl,0xfd
  430799:	imul   ecx,DWORD PTR [ecx-0x5f],0x5
  43079d:	jno    0x430742
  43079f:	lahf   
  4307a0:	jno    0x430786
  4307a2:	sub    ch,dl
  4307a4:	cmp    ah,dl
  4307a6:	sar    BYTE PTR [edx+0x50],1
  4307a9:	and    eax,0x6dad8252
  4307ae:	sbb    ch,BYTE PTR [ecx]
  4307b0:	mov    ?,WORD PTR [ecx]
  4307b2:	push   ecx
  4307b3:	push   ebx
  4307b4:	mov    eax,ds:0x56c2cb85
  4307b9:	mov    ebp,0xec505131
  4307be:	xor    bh,BYTE PTR [eax+eiz*8+0x38]
  4307c2:	jp     0x430807
  4307c4:	sub    al,0x44
  4307c6:	imul   ebp,esi,0x61dd64e7
  4307cc:	fwait
  4307cd:	dec    edx
  4307ce:	inc    esi
  4307cf:	mov    eax,ecx
  4307d1:	jmp    0x48e4d20b
  4307d6:	test   esp,esi
  4307d8:	in     al,dx
  4307d9:	mov    al,ds:0xe913f1ea
  4307de:	jp     0x4307d2
  4307e0:	mov    edi,0x87336b3f
  4307e5:	arpl   bx,si
  4307e7:	in     eax,dx
  4307e8:	clc    
  4307e9:	fwait
  4307ea:	inc    esi
  4307eb:	mov    DWORD PTR [ebp-0xd142687],eax
  4307f1:	push   ebx
  4307f2:	push   ds
  4307f3:	add    al,0x46
  4307f5:	mov    ds:0x60b51658,al
  4307fa:	cwde   
  4307fb:	cmp    al,0x4c
  4307fd:	fldcw  WORD PTR [edx+0x4]
  430800:	fisub  DWORD PTR [edx+edi*4-0x4b]
  430804:	jns    0x430801
  430806:	mov    ds:0xb935921b,al
  43080b:	push   eax
  43080c:	xchg   ecx,eax
  43080d:	retf   0x77e1
  430810:	jl     0x4307df
  430812:	sbb    al,0xcc
  430814:	imul   esi,DWORD PTR [edi+eiz*2+0x75],0x4c124773
  43081c:	stos   DWORD PTR es:[edi],eax
  43081d:	outs   dx,DWORD PTR ds:[esi]
  43081e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43081f:	fwait
  430820:	rol    BYTE PTR [ebp-0x77ca98cd],cl
  430826:	and    DWORD PTR [edi+esi*4-0x4b446382],esp
  43082d:	adc    al,0x99
  43082f:	stos   BYTE PTR es:[edi],al
  430830:	js     0x4307c3
  430832:	push   ebp
  430833:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  430834:	mov    ss,WORD PTR [edi]
  430836:	xor    eax,0xfa808aa3
  43083b:	jae    0x430846
  43083d:	jo     0x4307e7
  43083f:	fimul  WORD PTR [edx]
  430841:	jl     0x4308a9
  430843:	push   ds
  430844:	aad    0x93
  430846:	loop   0x4308b6
  430848:	(bad)
  43084c:	jae    0x4308b3
  43084e:	out    0x6e,al
  430850:	xor    eax,0x4aae3412
  430855:	sub    eax,0x9117bb7d
  43085a:	pop    ds
  43085b:	out    dx,eax
  43085c:	imul   BYTE PTR [edi-0x2f26f1fe]
  430862:	fisubr DWORD PTR [esi+0x6d]
  430865:	push   0x6e2d6b28
  43086a:	outs   dx,DWORD PTR ds:[esi]
  43086b:	jae    0x430850
  43086d:	in     eax,0x4c
  43086f:	add    ah,al
  430871:	(bad)  
  430872:	mov    ch,al
  430874:	aam    0x1
  430876:	add    BYTE PTR [ecx],dl
  430878:	add    DWORD PTR [eax],eax
  43087a:	add    BYTE PTR [ecx+ebx*8-0x68],ch
  43087e:	fs test DWORD PTR es:[ebx-0xf],edi
  430883:	iret   
  430884:	mov    DWORD PTR [esi-0x53ef8e77],ecx
  43088a:	add    ah,bh
  43088c:	jae    0x43085d
  43088e:	adc    BYTE PTR [edi+0x50],cl
  430891:	or     eax,0x85aa163f
  430896:	mov    ss:0x13dbd0ea,al
  43089c:	fsub   st(7),st
  43089e:	fldenv [eax]
  4308a0:	jecxz  0x4308c3
  4308a2:	scas   al,BYTE PTR es:[edi]
  4308a3:	sub    DWORD PTR ds:0xbeb6343b,0xffffff86
  4308aa:	ret    
  4308ab:	mov    esi,0xdc8d99a8
  4308b0:	ret    
  4308b1:	sub    esp,ebx
  4308b3:	ror    BYTE PTR [edi+0x32],cl
  4308b6:	dec    esi
  4308b7:	pop    edi
  4308b8:	std    
  4308b9:	test   al,0x97
  4308bb:	mov    ss,WORD PTR [ebx]
  4308bd:	imul   edx,DWORD PTR [edx-0x672d146c],0x20
  4308c4:	or     ebp,DWORD PTR [eax+0x2]
  4308c7:	add    bl,BYTE PTR [ecx-0x24]
  4308ca:	mov    cl,0xbb
  4308cc:	hlt    
  4308cd:	xchg   ebx,eax
  4308ce:	imul   ebx,DWORD PTR [esi+ebp*1+0x32d91c76],0x722ffc59
  4308d9:	hlt    
  4308da:	dec    eax
  4308db:	dec    eax
  4308dc:	jmp    0x40b9:0x86d0c8bd
  4308e3:	dec    ecx
  4308e4:	fisub  DWORD PTR [ebx]
  4308e6:	pop    DWORD PTR [edi-0x63]
  4308e9:	dec    edi
  4308ea:	lea    ebx,es:[edx]
  4308ed:	bnd jns 0x430884
  4308f0:	mov    bl,bh
  4308f2:	fbstp  TBYTE PTR [edx-0x7a]
  4308f5:	and    ecx,DWORD PTR [ecx+0x660a3c84]
  4308fb:	xchg   edx,eax
  4308fc:	hlt    
  4308fd:	mov    ch,0x34
  4308ff:	or     eax,0x8316ede3
  430904:	mov    edi,0x32cfc0b6
  430909:	add    ch,BYTE PTR [eax-0x69]
  43090c:	jle    0x430936
  43090e:	dec    ebp
  43090f:	and    ebx,DWORD PTR [esi]
  430911:	cmc    
  430912:	ret    
  430913:	mov    ah,0x91
  430915:	pop    esi
  430916:	mov    ds:0x1bf1fc49,al
  43091b:	sbb    eax,0x1230a383
  430920:	push   ecx
  430921:	pop    eax
  430922:	das    
  430923:	and    eax,0x7e44d6b6
  430928:	imul   eax,eax,0x9cca9997
  43092e:	cmp    eax,0xc291a164
  430933:	xor    al,0x8a
  430935:	inc    edx
  430936:	aad    0x2a
  430938:	imul   ecx,DWORD PTR [edi],0x22
  43093b:	ror    DWORD PTR [ecx+0x2c5e1a9b],0x54
  430942:	mov    dh,0x6
  430944:	mov    BYTE PTR [ecx],ah
  430946:	sar    BYTE PTR [ecx+ebp*2],cl
  430949:	and    dl,BYTE PTR [ecx]
  43094b:	mov    bh,0x60
  43094d:	dec    eax
  43094e:	in     al,dx
  43094f:	fild   QWORD PTR [eax+0x4e]
  430952:	scas   eax,DWORD PTR es:[edi]
  430953:	pop    ecx
  430954:	test   al,0xc1
  430956:	outs   dx,DWORD PTR fs:[esi]
  430958:	add    DWORD PTR [edi-0x1a],ecx
  43095b:	xlat   BYTE PTR ds:[ebx]
  43095c:	jl     0x43097f
  43095e:	push   esp
  43095f:	and    dh,0xfc
  430962:	mov    dh,0xb2
  430964:	aas    
  430965:	(bad)  
  430967:	xor    DWORD PTR [ecx-0x7c8042fe],edi
  43096d:	leave  
  43096e:	les    esi,FWORD PTR [ecx+0x30]
  430971:	into   
  430972:	psrld  mm2,QWORD PTR [ebx-0x48]
  430976:	or     ebp,DWORD PTR [edi-0x2c8193d4]
  43097c:	retf   0x393f
  43097f:	xchg   esi,eax
  430980:	sub    dl,BYTE PTR [ebx*2-0x34ebaa8d]
  430987:	retf   
  430988:	jns    0x430a06
  43098a:	popa   
  43098b:	mov    esi,0xc79f0ee9
  430990:	call   edi
  430992:	stc    
  430993:	or     BYTE PTR cs:[edx+0x79610faa],al
  43099a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43099b:	enter  0xd2a3,0x1
  43099f:	add    BYTE PTR [ecx],dl
  4309a1:	add    DWORD PTR [eax],eax
  4309a3:	add    bl,bh
  4309a5:	shrd   DWORD PTR [edx+0x64],esi,0xde
  4309aa:	je     0x430941
  4309ac:	mov    WORD PTR [esi-0x5bb434e4],ss
  4309b2:	push   edi
  4309b3:	jmp    0x519ed923
  4309b8:	or     BYTE PTR [ecx],al
  4309ba:	out    0xe4,al
  4309bc:	jbe    0x430992
  4309be:	pop    esi
  4309bf:	add    BYTE PTR [edi-0x69],bl
  4309c2:	and    DWORD PTR [ecx],0x2e197e53
  4309c8:	fidiv  WORD PTR [ecx+0xe327e04]
  4309ce:	mov    ds:0xad98eeb7,eax
  4309d3:	pop    edx
  4309d4:	jmp    0xd70c07bb
  4309d9:	leave  
  4309da:	sar    ebx,1
  4309dc:	jns    0x4309e7
  4309de:	jp     0x4309dd
  4309e0:	xor    eax,0x1d6b1168
  4309e5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4309e6:	cmp    al,0xac
  4309e8:	mov    ah,0x6f
  4309ea:	das    
  4309eb:	or     edi,DWORD PTR [esi]
  4309ed:	retf   
  4309ee:	je     0x430a50
  4309f0:	or     eax,0xfa98d9e6
  4309f5:	and    DWORD PTR [ebp+0x2ca646a],0x5da1192
  4309ff:	jbe    0x430a01
  430a01:	sbb    BYTE PTR [edx+0x768ed539],bl
  430a07:	mov    eax,0x352f514b
  430a0c:	and    eax,0x62082e8b
  430a11:	sub    eax,0x57b5ea21
  430a16:	jmp    0x57b3:0x52a295ed
  430a1d:	mov    esi,0x481e2272
  430a22:	icebp  
  430a23:	mov    ebp,0x515440f4
  430a28:	fidiv  WORD PTR [ebp+0x424c3658]
  430a2e:	xchg   ecx,eax
  430a2f:	pop    ebx
  430a30:	mov    ebx,0xfe3301b2
  430a35:	cdq    
  430a36:	test   BYTE PTR [ecx+eax*1-0x5d0bb7e3],0xaf
  430a3e:	inc    DWORD PTR [edi-0x6e]
  430a41:	gs dec ebx
  430a43:	jmp    0x430a92
  430a45:	or     BYTE PTR [edx-0x72078b57],0x67
  430a4c:	mov    esp,0x39a81ea0
  430a51:	ds dec esp
  430a53:	or     DWORD PTR [ebx],0x2758f3f0
  430a59:	outs   dx,DWORD PTR ds:[esi]
  430a5a:	and    BYTE PTR [eax+0x1d82f2b0],dl
  430a60:	and    eax,0x970e332f
  430a65:	lahf   
  430a66:	mov    al,ds:0xbd574278
  430a6b:	iret   
  430a6c:	fmul   QWORD PTR [ebx-0x77]
  430a6f:	sub    ah,BYTE PTR [ebp+0x52696ac8]
  430a75:	retf   
  430a76:	dec    ebx
  430a77:	fstp   TBYTE PTR [ebp+eiz*2+0x1]
  430a7b:	inc    ebx
  430a7c:	leave  
  430a7d:	mov    al,ds:0xdb966a55
  430a83:	push   ss
  430a84:	icebp  
  430a85:	xchg   BYTE PTR [ebp+0x65],al
  430a88:	ds aas 
  430a8a:	xor    dl,ch
  430a8c:	test   BYTE PTR [ecx-0x38],dh
  430a8f:	push   ebp
  430a90:	jp     0x430a93
  430a92:	xor    eax,0x2a2ca64b
  430a97:	scas   eax,DWORD PTR es:[edi]
  430a98:	adc    ah,ch
  430a9a:	dec    ebx
  430a9b:	ror    BYTE PTR [edx-0x47],cl
  430a9e:	sub    ah,BYTE PTR [eax-0x67]
  430aa1:	frstor [edx+edi*8]
  430aa4:	inc    ecx
  430aa5:	fcmovnbe st,st(3)
  430aa7:	push   edx
  430aa8:	jbe    0x430b20
  430aaa:	push   ss
  430aab:	cmp    al,ah
  430aad:	(bad)  
  430aae:	ror    ch,1
  430ab0:	sub    cl,BYTE PTR [ebx]
  430ab2:	dec    ecx
  430ab3:	ret    0x50f5
  430ab6:	call   0xf7ffc1e7
  430abb:	fucomi st,st(7)
  430abd:	sub    edi,esi
  430abf:	iret   
  430ac0:	iret   
  430ac1:	je     0x430af2
  430ac3:	dec    ch
  430ac5:	jo     0x430a96
  430ac7:	add    DWORD PTR [eax],eax
  430ac9:	adc    DWORD PTR [ecx],eax
  430acb:	add    BYTE PTR [eax],al
  430acd:	rcr    BYTE PTR [eax],1
  430acf:	ret    0xeaa9
  430ad2:	mov    ds,WORD PTR [edi+0x5f4668f4]
  430ad8:	dec    eax
  430ad9:	sbb    al,0x8
  430adb:	fst    DWORD PTR [ebx-0x75ce12fe]
  430ae1:	push   0xffffffd0
  430ae3:	sub    al,0x35
  430ae5:	int3   
  430ae6:	dec    BYTE PTR [edx]
  430ae8:	pop    esp
  430ae9:	cld    
  430aea:	jns    0x430b5e
  430aec:	pop    esi
  430aed:	rcl    edx,0xd
  430af0:	out    0x4c,al
  430af2:	jnp    0x430b0f
  430af4:	pusha  
  430af5:	dec    ebx
  430af6:	adc    eax,0x7a39ab11
  430afb:	shr    al,cl
  430afd:	mul    BYTE PTR [esi+0x3b]
  430b00:	lds    esp,FWORD PTR [eax+0x7a]
  430b03:	or     al,0xda
  430b05:	dec    eax
  430b06:	and    eax,0xda20f3e1
  430b0b:	(bad)  
  430b0c:	aas    
  430b0d:	fwait
  430b0e:	push   ebx
  430b0f:	jg     0x430aac
  430b11:	dec    esp
  430b12:	je     0x430b15
  430b14:	bound  ebx,QWORD PTR [esp+edx*4-0x620fdee4]
  430b1b:	adc    DWORD PTR [edi-0x21bc4116],eax
  430b21:	add    al,0x2e
  430b23:	loope  0x430aa9
  430b25:	(bad)  
  430b26:	and    ebx,esi
  430b28:	sub    al,BYTE PTR [esi]
  430b2a:	jmp    0x430b64
  430b2c:	scas   al,BYTE PTR es:[edi]
  430b2d:	aaa    
  430b2e:	dec    esi
  430b2f:	inc    ebx
  430b30:	xchg   esi,eax
  430b31:	jbe    0x430bae
  430b33:	jecxz  0x430b13
  430b35:	cmp    bl,ah
  430b37:	enter  0xf303,0x76
  430b3b:	jge    0x430b58
  430b3d:	xchg   al,bl
  430b3f:	fistp  WORD PTR [ebx+0x1]
  430b42:	popa   
  430b43:	push   ebp
  430b44:	mov    eax,0xc9fa11cc
  430b49:	and    eax,0x1da4567b
  430b4e:	xchg   BYTE PTR [esi],bl
  430b50:	xchg   ebp,eax
  430b51:	ins    DWORD PTR es:[edi],dx
  430b52:	popf   
  430b53:	or     DWORD PTR [edi],edi
  430b55:	test   al,0xf3
  430b57:	cs pop esp
  430b59:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  430b5a:	adc    al,0x8e
  430b5c:	and    dh,BYTE PTR [edi-0x5b]
  430b5f:	jmp    0xb00ad6d2
  430b64:	es xchg edi,eax
  430b66:	pop    ds
  430b67:	mov    ds:0x155d4294,eax
  430b6c:	xchg   BYTE PTR [ebx+eiz*1],bl
  430b6f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  430b70:	xchg   ecx,eax
  430b71:	dec    edx
  430b72:	scas   eax,DWORD PTR es:[edi]
  430b73:	inc    esi
  430b74:	(bad)  
  430b75:	repz popf 
  430b77:	pop    ebx
  430b78:	retf   
  430b79:	cwde   
  430b7a:	push   0x6b
  430b7c:	jmp    0x430bc4
  430b7e:	mov    ch,0xad
  430b80:	popf   
  430b81:	jae    0x430b8c
  430b83:	out    dx,eax
  430b84:	outs   dx,DWORD PTR ds:[esi]
  430b85:	idiv   BYTE PTR [ecx]
  430b87:	inc    eax
  430b88:	mov    al,ds:0xc3a50ae1
  430b8d:	ss ja  0x430b54
  430b90:	xor    BYTE PTR [ebp-0x1d],dl
  430b93:	mov    cl,0x1f
  430b95:	xchg   ah,bh
  430b97:	xchg   DWORD PTR [esi+edx*4+0x78de5b78],ecx
  430b9e:	int3   
  430b9f:	mov    bl,0xcf
  430ba1:	into   
  430ba2:	xchg   edi,eax
  430ba3:	mov    cl,0x61
  430ba5:	add    edi,DWORD PTR ds:0x9f4d12d6
  430bab:	fisub  DWORD PTR [edi+0x4ac1270f]
  430bb1:	loopne 0x430bbe
  430bb3:	jmp    0xe49f2c43
  430bb8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  430bb9:	data16 aaa 
  430bbb:	mov    BYTE PTR [eax+0x4a],ah
  430bbe:	mov    al,ds:0x50e91879
  430bc3:	and    cl,BYTE PTR [esi-0x37cedf21]
  430bc9:	out    0x95,al
  430bcb:	adc    al,0x7c
  430bcd:	pop    edi
  430bce:	fs ja  0x430ba7
  430bd1:	and    al,0x99
  430bd3:	fbstp  TBYTE PTR [eax+0x155ecae2]
  430bd9:	cdq    
  430bda:	pop    DWORD PTR [esi+0x6a]
  430bdd:	aas    
  430bde:	jns    0x430c25
  430be0:	in     al,dx
  430be1:	loope  0x430bdf
  430be3:	jmp    0xec4e965
  430be8:	(bad)  
  430be9:	js     0x430c33
  430beb:	in     eax,dx
  430bec:	jns    0x430b85
  430bee:	xchg   esp,eax
  430bef:	mov    cl,0x1
  430bf1:	add    BYTE PTR [ecx],dl
  430bf3:	add    DWORD PTR [eax],eax
  430bf5:	add    BYTE PTR [ebx-0x36],dh
  430bf8:	test   al,0x7b
  430bfa:	cdq    
  430bfb:	outs   dx,DWORD PTR ds:[esi]
  430bfc:	scas   al,BYTE PTR es:[edi]
  430bfd:	retf   0x7a0
  430c00:	js     0x430ba8
  430c02:	dec    esi
  430c03:	lods   al,BYTE PTR ds:[esi]
  430c04:	xchg   edx,eax
  430c05:	mov    ds:0xae609938,al
  430c0a:	in     eax,dx
  430c0b:	test   eax,0xc193aa68
  430c10:	(bad)  
  430c11:	cmc    
  430c12:	shl    DWORD PTR ds:0x23540673,0x92
  430c19:	mov    dl,0x18
  430c1b:	adc    eax,0xa75c70e4
  430c20:	test   DWORD PTR [eax],0x6755f721
  430c26:	ss push ss
  430c28:	mov    eax,0x936dea47
  430c2d:	arpl   WORD PTR [ebx],sp
  430c2f:	out    dx,eax
  430c30:	add    al,0xbf
  430c32:	jno    0x430c07
  430c34:	stc    
  430c35:	dec    ebp
  430c36:	push   0xc24221ee
  430c3b:	xchg   BYTE PTR [ebp+0x19fa0b70],ah
  430c41:	jge    0x430c97
  430c43:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  430c44:	mov    BYTE PTR [ecx+0x5e8714b4],al
  430c4a:	dec    edx
  430c4b:	and    ah,al
  430c4d:	pop    ebp
  430c4e:	test   BYTE PTR [ecx-0x19],al
  430c51:	jnp    0x430c21
  430c53:	dec    BYTE PTR [esi-0x64f735a2]
  430c59:	cmp    al,0x6a
  430c5b:	push   0x65
  430c5d:	dec    ecx
  430c5e:	push   0x9d73ca7b
  430c63:	mul    edx
  430c65:	adc    eax,0x70ded564
  430c6a:	in     al,0x52
  430c6c:	sbb    eax,0xf6a19da5
  430c71:	or     al,0xa9
  430c73:	loop   0x430c9d
  430c75:	sbb    eax,0xcb43ed29
  430c7a:	xchg   ebx,eax
  430c7b:	js     0x430c58
  430c7d:	out    0xcb,al
  430c7f:	adc    eax,DWORD PTR [ebp+0x44]
  430c82:	aad    0x3e
  430c84:	xchg   ebx,eax
  430c85:	(bad)  
  430c86:	mov    ebx,0xf1f6126f
  430c8b:	push   cs
  430c8c:	adc    dh,BYTE PTR ds:0xb2c0424a
  430c92:	(bad)  
  430c93:	jo     0x430cc0
  430c95:	sbb    eax,0xd6b6688e
  430c9a:	fild   QWORD PTR [ebp-0x4792e582]
  430ca0:	mov    bh,0x5e
  430ca2:	in     al,dx
  430ca3:	or     cl,bl
  430ca5:	in     eax,0xa4
  430ca7:	ret    0x5802
  430caa:	sub    ch,cl
  430cac:	xor    eax,0x7297914e
  430cb1:	pop    es
  430cb2:	push   0xffffffd8
  430cb4:	mov    ebx,0x4ece8cdb
  430cb9:	xor    DWORD PTR [eax+0x7a303dbd],0xffffff81
  430cc0:	inc    ebx
  430cc1:	pop    eax
  430cc2:	mov    edi,0x8c61e66d
  430cc7:	daa    
  430cc8:	jmp    0x3f32ac5
  430ccd:	nop
  430cce:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  430ccf:	sbb    BYTE PTR [ecx-0xb],0x26
  430cd3:	pop    esi
  430cd4:	arpl   WORD PTR [esi+0xf1faaf3],cx
  430cda:	ins    BYTE PTR es:[edi],dx
  430cdb:	pop    es
  430cdc:	(bad)  
  430cdd:	jecxz  0x430c81
  430cdf:	loopne 0x430d39
  430ce1:	xchg   ebp,eax
  430ce2:	inc    ebp
  430ce3:	aam    0x5d
  430ce5:	xor    eax,0x9e2c23f1
  430cea:	pop    DWORD PTR [ecx]
  430cec:	xor    cl,ah
  430cee:	in     eax,dx
  430cef:	mov    ds:0x23cc94b,al
  430cf4:	inc    ebp
  430cf5:	int3   
  430cf6:	and    al,0x68
  430cf8:	sub    BYTE PTR [edi],0xe7
  430cfb:	cmp    al,BYTE PTR [ebx-0x6f8bcfd6]
  430d01:	jge    0x430d49
  430d03:	aas    
  430d04:	xchg   ecx,eax
  430d05:	lea    edx,[esi+0x75]
  430d08:	or     eax,0x7f785360
  430d0d:	ja     0x430d3e
  430d0f:	cmp    eax,0xfde46064
  430d14:	lods   eax,DWORD PTR ds:[esi]
  430d15:	push   esp
  430d16:	mov    al,ds:0x1b083
  430d1b:	adc    DWORD PTR [ecx],eax
  430d1d:	add    BYTE PTR [eax],al
  430d1f:	jns    0x430ce6
  430d21:	or     al,BYTE PTR [eax+0x403a9cdd]
  430d27:	push   ds
  430d28:	ins    BYTE PTR es:[edi],dx
  430d29:	outs   dx,BYTE PTR ds:[esi]
  430d2a:	int3   
  430d2b:	and    cl,bl
  430d2d:	out    0x82,eax
  430d2f:	aad    0x9b
  430d31:	(bad)  
  430d32:	inc    edx
  430d33:	sbb    eax,0xe542334b
  430d38:	bound  esi,QWORD PTR ds:0xccdd1db0
  430d3e:	pop    esi
  430d3f:	outs   dx,DWORD PTR ds:[esi]
  430d40:	push   es
  430d41:	adc    eax,0x1565fec0
  430d46:	mov    WORD PTR [edi-0x40],?
  430d49:	sbb    edi,esp
  430d4b:	lock push es
  430d4d:	aas    
  430d4e:	adc    BYTE PTR [ebx-0xe21a319],cl
  430d54:	fbstp  TBYTE PTR [edi+0x7e608777]
  430d5a:	xchg   ebp,eax
  430d5b:	call   0x17e2:0x54962af5
  430d62:	fstp   DWORD PTR [esi-0x617ab223]
  430d68:	aas    
  430d69:	sysret 
  430d6b:	inc    edi
  430d6c:	and    DWORD PTR [ebp-0x1],0x4d
  430d70:	arpl   WORD PTR [ecx],di
  430d72:	pop    ebp
  430d73:	push   edx
  430d74:	xchg   edi,eax
  430d75:	mov    cl,0x8
  430d77:	call   0x95f4:0x7ff0d33b
  430d7e:	cmp    eax,ecx
  430d80:	mov    eax,0x8e34864b
  430d85:	popa   
  430d86:	xor    eax,DWORD PTR [edi-0x34]
  430d89:	sahf   
  430d8a:	aaa    
  430d8b:	inc    ecx
  430d8c:	mov    al,0xe5
  430d8e:	sub    DWORD PTR [eax-0x2a382f6f],ebp
  430d94:	fnsave [edx]
  430d96:	push   cs
  430d97:	scas   eax,DWORD PTR es:[edi]
  430d98:	inc    esi
  430d99:	xchg   esp,eax
  430d9a:	sar    DWORD PTR [esi+0x47f60f87],1
  430da0:	dec    eax
  430da1:	xchg   esp,eax
  430da2:	ss sti 
  430da4:	mov    es,WORD PTR [ecx+0x47ededbc]
  430daa:	in     eax,dx
  430dab:	(bad)  
  430dac:	mov    eax,0xf1bdb967
  430db1:	repnz xchg edi,eax
  430db3:	mov    al,ds:0x882a3a70
  430db8:	cmp    ebx,DWORD PTR [ecx+eax*4-0x7b]
  430dbc:	dec    ecx
  430dbd:	pop    es
  430dbe:	jmp    0x430d99
  430dc0:	retf   0x171
  430dc3:	push   es
  430dc4:	fidivr DWORD PTR [ebx+edx*1+0x4c63c8ce]
  430dcb:	jno    0x430e09
  430dcd:	sub    al,0xa1
  430dcf:	inc    BYTE PTR [edi-0x43]
  430dd2:	ins    BYTE PTR es:[edi],dx
  430dd3:	cwde   
  430dd4:	mov    bh,0xf1
  430dd6:	(bad)  
  430dd7:	xchg   ecx,eax
  430dd8:	mov    bh,0xd
  430dda:	call   FWORD PTR [esi]
  430ddc:	lods   al,BYTE PTR ds:[esi]
  430ddd:	clc    
  430dde:	xor    al,0x77
  430de0:	mul    DWORD PTR [edx+0x1e]
  430de3:	sub    ebx,DWORD PTR [edi]
  430de5:	imul   esp,DWORD PTR [ebx-0x7d32471c],0x4c33c827
  430def:	les    esi,FWORD PTR [ebp-0x64f230ff]
  430df5:	mov    ds:0x39ff9d6a,eax
  430dfa:	xor    edx,DWORD PTR [ebx]
  430dfc:	fs leave 
  430dfe:	xchg   ebp,eax
  430dff:	test   al,0xf0
  430e01:	inc    esi
  430e02:	fiadd  WORD PTR [ebx+0x8f65d5c]
  430e08:	and    cl,BYTE PTR [ebx-0x54]
  430e0b:	xlat   BYTE PTR ds:[ebx]
  430e0c:	lods   al,BYTE PTR ds:[esi]
  430e0d:	aad    0x7f
  430e0f:	add    esi,esi
  430e11:	add    BYTE PTR [esi+0x48a94210],dh
  430e17:	add    eax,0x555a3e2e
  430e1c:	leave  
  430e1d:	loope  0x430e94
  430e1f:	and    eax,0x2a99adad
  430e24:	stos   BYTE PTR es:[edi],al
  430e25:	adc    BYTE PTR [ebx+edi*2-0x39],al
  430e29:	pop    ds
  430e2a:	fidiv  DWORD PTR [ecx]
  430e2c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  430e2d:	aas    
  430e2e:	xor    eax,0x20c63d75
  430e33:	jae    0x430e30
  430e35:	idiv   DWORD PTR [edi-0x32]
  430e38:	xchg   edi,eax
  430e39:	loope  0x430dbf
  430e3b:	retf   
  430e3c:	test   al,0xb7
  430e3e:	mov    dh,0x41
  430e40:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  430e41:	mov    dl,0x1
  430e43:	add    BYTE PTR [ecx],dl
  430e45:	add    DWORD PTR [eax],eax
  430e47:	add    BYTE PTR [ecx+0x15e57d96],ch
  430e4d:	mov    ebp,DWORD PTR [eax]
  430e4f:	inc    edx
  430e50:	shl    DWORD PTR [eax],0xee
  430e53:	enter  0xd6c,0xc1
  430e57:	retf   
  430e58:	inc    esi
  430e59:	xchg   DWORD PTR [esi-0x38a0398f],esi
  430e5f:	iret   
  430e60:	sub    DWORD PTR [ebp+edi*2-0x3d],0x45
  430e65:	sbb    al,0xca
  430e67:	add    esp,DWORD PTR [ebx-0x2]
  430e6a:	in     al,dx
  430e6b:	scas   eax,DWORD PTR es:[edi]
  430e6c:	rcr    BYTE PTR [esi-0x70b98c0e],0x43
  430e73:	inc    ebp
  430e74:	lock mov edx,0xfd4e3c22
  430e7a:	fst    st(2)
  430e7c:	lahf   
  430e7d:	mov    eax,esi
  430e7f:	or     esi,ebx
  430e81:	xchg   ebp,eax
  430e82:	mov    edi,0x3a642376
  430e87:	jmp    0x430e3f
  430e89:	into   
  430e8a:	xchg   DWORD PTR [esi+esi*4],ecx
  430e8d:	mov    dl,0x78
  430e8f:	add    bh,BYTE PTR [ecx-0x789e7b33]
  430e95:	clc    
  430e96:	inc    ecx
  430e97:	out    0xda,eax
  430e99:	push   0x5e74d28b
  430e9e:	jmp    0x492dfcd9
  430ea3:	sub    cl,ah
  430ea5:	cmp    DWORD PTR [edi-0x7cb000cb],ebp
  430eab:	xchg   ecx,eax
  430eac:	fstp   TBYTE PTR [ecx-0x787b3944]
  430eb2:	or     al,0xd2
  430eb4:	(bad)  
  430eb5:	sti    
  430eb6:	jmp    0x350c0c81
  430ebb:	lahf   
  430ebc:	in     eax,0xfd
  430ebe:	xor    edx,eax
  430ec0:	cmp    edi,DWORD PTR [eax+0x41]
  430ec3:	loop   0x430ec3
  430ec5:	int3   
  430ec6:	cmp    dl,ah
  430ec8:	mov    ss,eax
  430eca:	dec    ebx
  430ecb:	pop    ds
  430ecc:	std    
  430ecd:	popa   
  430ece:	pop    ebx
  430ecf:	adc    DWORD PTR [esi+0x753a031],esi
  430ed5:	pop    esp
  430ed6:	dec    eax
  430ed7:	fistp  DWORD PTR [ebx-0x1a]
  430eda:	jbe    0x430e7c
  430edc:	and    bh,al
  430ede:	out    dx,al
  430edf:	aaa    
  430ee0:	push   ds
  430ee1:	addr16 sbb ax,0x98a3
  430ee6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  430ee7:	fisubr WORD PTR [ebp+0x4dfabd63]
  430eed:	pop    ss
  430eee:	pop    ss
  430eef:	aam    0xe9
  430ef1:	ror    BYTE PTR [esi+0x6e],0x2e
  430ef5:	fcom   QWORD PTR [edx]
  430ef7:	repz adc al,0x58
  430efa:	sbb    al,BYTE PTR [edi+0x2778bd61]
  430f00:	stos   DWORD PTR es:[edi],eax
  430f01:	rol    DWORD PTR [ebx],0xe6
  430f04:	rcl    BYTE PTR [ecx-0x25],cl
  430f07:	mov    ?,WORD PTR [esi-0x7a]
  430f0a:	addr16 out 0xc7,eax
  430f0d:	jmp    0x430f05
  430f0f:	test   DWORD PTR [ecx],0xe803853d
  430f15:	rcr    BYTE PTR [ecx-0x64],cl
  430f18:	into   
  430f19:	dec    eax
  430f1a:	fbld   TBYTE PTR [eax+0x1e]
  430f1d:	pusha  
  430f1e:	add    eax,0x9fee7655
  430f23:	inc    ebx
  430f24:	cmp    bl,BYTE PTR [ebp+0x4407ad2e]
  430f2a:	jno    0x430f83
  430f2c:	xchg   esp,eax
  430f2d:	and    edi,DWORD PTR ds:0xb1cd56c7
  430f33:	add    DWORD PTR [edi-0x15],ebp
  430f36:	mov    cl,0x53
  430f38:	test   BYTE PTR [eax-0x7],dh
  430f3b:	ins    BYTE PTR es:[edi],dx
  430f3c:	or     ah,BYTE PTR [ebp+0x3b]
  430f3f:	jle    0x430f4b
  430f41:	out    0x70,eax
  430f43:	mov    al,0xa0
  430f45:	int    0x21
  430f47:	call   DWORD PTR [ecx-0x46]
  430f4a:	sbb    esp,ebp
  430f4c:	mov    eax,ds:0x1d6d55d0
  430f51:	sub    al,0x40
  430f53:	add    ah,bh
  430f55:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  430f56:	jb     0x430f70
  430f58:	stos   BYTE PTR es:[edi],al
  430f59:	nop
  430f5a:	sbb    eax,0x1b8f0206
  430f5f:	xchg   esp,eax
  430f60:	lahf   
  430f61:	push   es
  430f62:	add    al,0xae
  430f64:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  430f65:	test   eax,esp
  430f67:	push   0x4d
  430f69:	jmp    0x11431124
  430f6e:	add    DWORD PTR [eax],eax
  430f70:	add    BYTE PTR [ecx+0x5695285d],cl
  430f76:	aaa    
  430f77:	lods   eax,DWORD PTR ds:[esi]
  430f78:	sbb    esi,esi
  430f7a:	push   ds
  430f7b:	adc    eax,ebx
  430f7d:	leave  
  430f7e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  430f7f:	mov    DWORD PTR [ecx],eax
  430f81:	pushf  
  430f82:	and    dl,BYTE PTR [edx+eiz*2+0x58]
  430f86:	in     eax,0x53
  430f88:	cmp    dh,BYTE PTR [esi-0x4e]
  430f8b:	rol    edi,1
  430f8d:	aas    
  430f8e:	es xchg edx,eax
  430f90:	push   esi
  430f91:	xchg   edi,eax
  430f92:	test   al,0x81
  430f94:	push   0xfb294ef
  430f99:	push   esi
  430f9a:	fistp  DWORD PTR [esi+0x3a81dc37]
  430fa0:	lds    ebp,FWORD PTR [edi-0x2ebd66cd]
  430fa6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  430fa7:	call   0x978c:0x60b2e589
  430fae:	sub    al,BYTE PTR [eax-0x42068d9f]
  430fb4:	pop    ebx
  430fb5:	popw   es
  430fb7:	jne    0x430f9e
  430fb9:	dec    edx
  430fba:	add    ebx,ecx
  430fbc:	out    0x56,eax
  430fbe:	mov    gs,WORD PTR [ebx+0x67]
  430fc1:	sti    
  430fc2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  430fc3:	in     eax,0xcb
  430fc5:	jb     0x430f8a
  430fc7:	je     0x430f95
  430fc9:	push   edi
  430fca:	add    ebp,DWORD PTR [ebx]
  430fcc:	fcom   st(1)
  430fce:	ja     0x43102b
  430fd0:	in     eax,dx
  430fd1:	or     BYTE PTR [ebp+0x21901104],bh
  430fd7:	dec    ebx
  430fd8:	dec    ecx
  430fd9:	outs   dx,BYTE PTR ds:[esi]
  430fda:	and    eax,0x19bc953d
  430fdf:	xor    bh,BYTE PTR [ebx-0x4cf4cbf0]
  430fe5:	mov    edi,0xd104cf8f
  430fea:	scas   eax,DWORD PTR es:[edi]
  430feb:	ss popa 
  430fed:	(bad)  
  430fee:	lods   eax,DWORD PTR ds:[esi]
  430fef:	pushf  
  430ff0:	out    0x45,al
  430ff2:	jnp    0x430fbc
  430ff4:	xor    DWORD PTR [edi+0x4c61ca37],ebx
  430ffa:	mov    ch,0x84
  430ffc:	out    dx,eax
  430ffd:	sbb    esi,ebx
  430fff:	aad    0xac
  431001:	lahf   
  431002:	xor    eax,0x393e9bc6
  431007:	dec    ebx
  431008:	sbb    ch,BYTE PTR ds:0xe1910b68
  43100e:	and    eax,0xc3c99920
  431013:	rcl    BYTE PTR [esi],0x1c
  431016:	push   ds
  431017:	mov    WORD PTR [eax-0x34d26d04],gs
  43101d:	inc    ebx
  43101e:	stos   DWORD PTR es:[edi],eax
  43101f:	sbb    al,0x16
  431021:	adc    BYTE PTR [esi],bl
  431023:	(bad)  
  431024:	fimul  WORD PTR [eax]
  431026:	jae    0x431051
  431028:	loop   0x430fc3
  43102a:	push   esi
  43102b:	inc    ecx
  43102c:	adc    ebp,esi
  43102e:	std    
  43102f:	mov    bl,0xef
  431031:	xchg   esi,eax
  431032:	mov    DWORD PTR [edx+0x7c],edi
  431035:	rcl    BYTE PTR [edx],1
  431037:	sbb    bh,0x8f
  43103a:	dec    eax
  43103b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43103c:	popf   
  43103d:	outs   dx,BYTE PTR ds:[esi]
  43103e:	stos   BYTE PTR es:[edi],al
  43103f:	cdq    
  431040:	scas   al,BYTE PTR es:[edi]
  431041:	repz push edx
  431043:	sbb    ebx,DWORD PTR [edi+0xcf4aec6]
  431049:	inc    eax
  43104a:	and    al,BYTE PTR [edi+0xe]
  43104d:	xchg   ebx,eax
  43104e:	mov    edx,0x690ec090
  431053:	test   al,0x30
  431055:	fdivr  DWORD PTR [esi+0x676b97ec]
  43105b:	fld    DWORD PTR [eax+0x2b221640]
  431061:	inc    ebx
  431062:	pop    DWORD PTR [eax]
  431064:	(bad)  [edi+0x1]
  431067:	call   0x3163898d
  43106c:	mov    dh,0xb2
  43106e:	dec    ebp
  43106f:	fcom   st(6)
  431071:	stos   DWORD PTR es:[edi],eax
  431072:	mov    ecx,0xa373fce
  431077:	mov    bl,0xc
  431079:	jmp    0x4310ca
  43107b:	sub    bh,BYTE PTR [eax-0x4]
  43107e:	sar    BYTE PTR [ebp+0x7ef0ec46],0x5a
  431085:	in     al,0xde
  431087:	in     al,0xfe
  431089:	jle    0x4310a3
  43108b:	test   BYTE PTR [ecx],bh
  43108d:	adc    eax,0x5656e2a
  431092:	cli    
  431093:	mov    bh,0x1
  431095:	add    BYTE PTR [ecx],dl
  431097:	add    DWORD PTR [eax],eax
  431099:	add    BYTE PTR [edx+0x75],ah
  43109c:	arpl   WORD PTR [edi+0x35],cx
  43109f:	or     eax,0xf45d27d1
  4310a4:	push   esi
  4310a5:	pop    edx
  4310a6:	in     eax,dx
  4310a7:	leave  
  4310a8:	cs aam 0xec
  4310ab:	mov    ss,ecx
  4310ad:	sub    cl,BYTE PTR [edx]
  4310af:	pop    ds
  4310b0:	arpl   WORD PTR [edi-0x9273ddc],si
  4310b6:	xchg   edi,eax
  4310b7:	test   eax,0xf555323e
  4310bc:	push   ds
  4310bd:	jo     0x43107e
  4310bf:	mov    eax,0x71fb3d6a
  4310c4:	push   ss
  4310c5:	call   0x135a:0xbae780df
  4310cc:	es mov ebx,0x1aea5961
  4310d2:	xchg   ebx,eax
  4310d3:	or     al,0xbd
  4310d5:	jg     0x4310a2
  4310d7:	in     eax,dx
  4310d8:	addr16 mov ch,0x5
  4310db:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4310dc:	and    DWORD PTR [ebx+0x12],esi
  4310df:	pop    ss
  4310e0:	psadbw mm1,QWORD PTR [edx+ebx*2-0xf]
  4310e5:	pop    esi
  4310e6:	in     al,dx
  4310e7:	fs dec esi
  4310e9:	add    al,0xb
  4310eb:	add    ebp,DWORD PTR [esi+0x62ff8211]
  4310f1:	fadd   DWORD PTR [esi+0x59ab10ab]
  4310f7:	xchg   dl,dh
  4310f9:	add    esp,DWORD PTR [ebx]
  4310fb:	jecxz  0x431126
  4310fd:	mov    WORD PTR [edi+0x3d0c6062],?
  431103:	xor    BYTE PTR [edx],dl
  431105:	rcl    ecx,0x96
  431108:	popa   
  431109:	push   edx
  43110a:	xchg   BYTE PTR [ecx-0x36037cdd],ch
  431110:	push   ebp
  431111:	mov    al,0xc3
  431113:	ja     0x4310d7
  431115:	out    dx,al
  431116:	push   es
  431117:	mov    esi,0x502e3966
  43111c:	ror    DWORD PTR [esi],cl
  43111e:	sti    
  43111f:	mov    dh,0x62
  431121:	mov    ds:0x87bf172c,al
  431126:	or     al,0x68
  431128:	sub    al,0x6e
  43112a:	scas   eax,DWORD PTR es:[edi]
  43112b:	retf   0xc1ce
  43112e:	js     0x43116f
  431130:	loop   0x43111b
  431132:	nop
  431133:	or     eax,0x33de0a4
  431138:	mov    BYTE PTR [esi],bl
  43113a:	mov    esp,0xe05d8c93
  43113f:	sar    BYTE PTR [ecx+0xf8db302],cl
  431145:	push   edi
  431146:	leave  
  431147:	retf   
  431148:	lods   eax,DWORD PTR ds:[esi]
  431149:	les    edi,FWORD PTR [ebx]
  43114b:	pop    ds
  43114c:	lods   eax,DWORD PTR ds:[esi]
  43114d:	retf   
  43114e:	ins    BYTE PTR es:[edi],dx
  43114f:	or     BYTE PTR [ebp+0x46bfb8fd],bh
  431155:	out    0x3c,al
  431157:	das    
  431158:	das    
  431159:	sbb    BYTE PTR [ecx],cl
  43115b:	aad    0x9c
  43115d:	popa   
  43115e:	ror    DWORD PTR [ecx+esi*8],cl
  431161:	pop    edx
  431162:	inc    esi
  431163:	pop    esi
  431164:	call   FWORD PTR [edx]
  431166:	add    DWORD PTR [edx],ebp
  431168:	adc    eax,0x44dcc768
  43116d:	mov    DWORD PTR [eax+0x6bab4390],edx
  431173:	dec    ebx
  431174:	aaa    
  431175:	addr16 into 
  431177:	push   0x45
  431179:	sahf   
  43117a:	push   esi
  43117b:	push   0x7e
  43117d:	test   DWORD PTR [ebx+0x56c26419],esp
  431183:	push   ebx
  431184:	shr    BYTE PTR [eax-0x51],1
  431187:	ins    DWORD PTR es:[edi],dx
  431188:	shl    BYTE PTR [esi-0x4666f759],cl
  43118e:	test   DWORD PTR [edi],0x65ccc5b5
  431194:	cli    
  431195:	nop
  431196:	out    0x69,al
  431198:	gs xchg ebx,eax
  43119a:	jg     0x43116d
  43119c:	inc    esp
  43119d:	mov    ah,0x7e
  43119f:	push   0xc0086b5d
  4311a4:	push   edi
  4311a5:	pop    ss
  4311a6:	sbb    bl,al
  4311a8:	cld    
  4311a9:	xchg   DWORD PTR ss:[ecx+0x68],ebx
  4311ad:	mov    eax,0xf9d0b910
  4311b2:	imul   ebx,DWORD PTR [edi-0x18],0x2e62ad60
  4311b9:	sbb    eax,0x1b90b71
  4311be:	add    BYTE PTR [ecx],dl
  4311c0:	add    DWORD PTR [eax],eax
  4311c2:	add    BYTE PTR [ebx],ah
  4311c4:	and    BYTE PTR [edi],dh
  4311c6:	icebp  
  4311c7:	add    eax,0x107357e5
  4311cc:	inc    esp
  4311cd:	fstp   QWORD PTR [ecx]
  4311cf:	mov    al,BYTE PTR [edi-0x50bfa6f7]
  4311d5:	xchg   BYTE PTR [ecx-0x5b],dl
  4311d8:	push   0x5238e0b3
  4311dd:	not    ch
  4311df:	fucom  st(5)
  4311e1:	addr16 add al,0xdf
  4311e4:	test   DWORD PTR [esi],edi
  4311e6:	cmp    BYTE PTR es:[edx],ch
  4311e9:	xchg   edi,eax
  4311ea:	push   esi
  4311eb:	add    edx,esp
  4311ed:	and    dh,BYTE PTR [eax+esi*4]
  4311f0:	sbb    eax,0x7bc0681d
  4311f5:	xor    DWORD PTR [esi],0x76
  4311f8:	mov    ecx,0x7afae402
  4311fd:	pop    esp
  4311fe:	jno    0x4311c6
  431200:	adc    al,ah
  431202:	(bad)  
  431203:	mov    ds:0x76119e62,al
  431208:	xchg   ebp,eax
  431209:	dec    ecx
  43120a:	and    eax,0x1e96696c
  43120f:	mov    ax,0x6824
  431213:	test   al,0x3c
  431215:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  431216:	pop    ebp
  431217:	clc    
  431218:	pop    eax
  431219:	repnz adc BYTE PTR [edx+esi*4-0x54e5ee3c],0x6b
  431222:	cmp    eax,0x9f5f6f33
  431227:	xchg   ebx,eax
  431228:	shl    DWORD PTR [eax+ebx*4-0x29],1
  43122c:	jae    0x4311bb
  43122e:	add    al,BYTE PTR [eax]
  431230:	dec    edi
  431231:	popa   
  431232:	cmp    DWORD PTR [esi+0x38e67486],edi
  431238:	mov    ds:0x337e0aa0,eax
  43123d:	cmc    
  43123e:	lods   al,BYTE PTR ds:[esi]
  43123f:	sub    al,0x71
  431241:	mov    ecx,0x7eef411e
  431246:	imul   esp,DWORD PTR [eax],0x5
  431249:	xchg   edi,eax
  43124a:	scas   al,BYTE PTR es:[edi]
  43124b:	mov    al,0xa6
  43124d:	(bad)  
  43124e:	ret    0xbf0a
  431251:	test   al,0x97
  431253:	jp     0x4311db
  431255:	jg     0x43128b
  431257:	sahf   
  431258:	sbb    ah,BYTE PTR [ebx-0x743406d]
  43125e:	pop    ecx
  43125f:	int    0xf3
  431261:	fsubr  DWORD PTR ds:0x6259e47a
  431267:	add    al,0xa
  431269:	ret    0x884f
  43126c:	dec    edx
  43126d:	out    dx,eax
  43126e:	mov    WORD PTR [ebx],gs
  431270:	sahf   
  431271:	xchg   edi,eax
  431272:	das    
  431273:	in     eax,dx
  431274:	jae    0x43128d
  431276:	outs   dx,BYTE PTR ds:[esi]
  431277:	inc    ebx
  431278:	adc    esp,esi
  43127a:	ins    BYTE PTR es:[edi],dx
  43127b:	icebp  
  43127c:	lahf   
  43127d:	sahf   
  43127e:	pop    edi
  43127f:	xor    edx,ebx
  431281:	adc    al,0x6b
  431283:	pushf  
  431284:	mov    dh,0xae
  431286:	aad    0x11
  431288:	jno    0x43123d
  43128a:	push   ebp
  43128b:	and    eax,0x424aff58
  431290:	or     ebx,DWORD PTR [ebp-0x29b6ac53]
  431296:	pop    esi
  431297:	nop
  431298:	jns    0x431255
  43129a:	xor    eax,0xa0de8b0d
  43129f:	pusha  
  4312a0:	inc    edi
  4312a1:	lock pop es
  4312a3:	dec    ecx
  4312a4:	mov    bl,ah
  4312a6:	mov    DWORD PTR [esp+eiz*8+0x73aef5c6],esp
  4312ad:	cmp    BYTE PTR [ebp+0x797d84e5],0x6d
  4312b4:	inc    ebx
  4312b5:	cmp    ebp,ebp
  4312b7:	xchg   esi,eax
  4312b8:	rcr    BYTE PTR [edi-0x43aeb605],0xf6
  4312bf:	ja     0x43124f
  4312c1:	mov    cl,0x92
  4312c3:	fwait
  4312c4:	pop    ebp
  4312c5:	xchg   esi,eax
  4312c6:	sbb    DWORD PTR [ecx*1-0x3e8d29e2],eax
  4312cd:	sbb    DWORD PTR [esi],ebx
  4312cf:	cmp    ah,BYTE PTR [edx+ebx*8]
  4312d2:	ret    
  4312d3:	mov    esi,0xcbe70a7
  4312d8:	dec    esi
  4312da:	mov    bh,0xfb
  4312dc:	mov    dh,0x20
  4312de:	in     eax,dx
  4312df:	add    ah,BYTE PTR [ecx-0x62]
  4312e2:	mov    ch,BYTE PTR [ebx-0x28]
  4312e5:	mov    ch,0x1
  4312e7:	add    BYTE PTR [ecx],dl
  4312e9:	add    DWORD PTR [eax],eax
  4312eb:	add    BYTE PTR [edi-0x24],bh
  4312ee:	or     BYTE PTR ds:0x2c4bcdf5,ah
  4312f4:	je     0x4312b5
  4312f6:	xchg   esp,eax
  4312f7:	mov    ?,WORD PTR [ecx-0x6d364045]
  4312fd:	inc    edx
  4312fe:	frstor [edi]
  431300:	imul   eax,DWORD PTR [ebx],0xfe75f4f9
  431306:	rcl    BYTE PTR [esi+0x1d],0x37
  43130a:	data16 loope 0x4312d8
  43130d:	scas   al,BYTE PTR es:[edi]
  43130e:	clc    
  43130f:	lahf   
  431310:	add    BYTE PTR [ebx+0x51b310da],bh
  431316:	or     BYTE PTR [eax-0x6c8be07f],cl
  43131c:	sti    
  43131d:	imul   ebx,edi,0xffffffc3
  431320:	jp     0x4312f8
  431322:	inc    ebp
  431323:	inc    esi
  431324:	repnz cmp eax,0x739e380
  43132a:	xchg   esi,eax
  43132b:	(bad)  
  43132c:	retf   0xc56
  43132f:	mov    ah,0xeb
  431331:	adc    esp,DWORD PTR [edi]
  431333:	(bad)  
  431334:	mov    ecx,0x71566f5
  431339:	or     bl,BYTE PTR [ebx+0x33]
  43133c:	fstp   DWORD PTR [ebx+edi*8-0x36]
  431340:	test   al,0x62
  431342:	xchg   dl,dl
  431344:	fnstsw WORD PTR [ecx-0x14]
  431347:	inc    edx
  431348:	repz jae 0x431351
  43134b:	adc    BYTE PTR [ebp+0x5c],dl
  43134e:	pop    esp
  43134f:	push   esi
  431350:	mov    dl,0xf4
  431352:	rcr    DWORD PTR ds:0x33dd3f3a,0x5c
  431359:	jo     0x431304
  43135b:	lahf   
  43135c:	icebp  
  43135d:	push   cs
  43135e:	push   edx
  43135f:	sbb    BYTE PTR [edx],0xe0
  431362:	mov    eax,ds:0x6ca65afd
  431367:	or     eax,0x2948d371
  43136c:	ja     0x431362
  43136e:	dec    edi
  43136f:	push   ebp
  431370:	fstp   DWORD PTR [ebp+0x43]
  431373:	inc    edx
  431374:	xor    BYTE PTR [ecx],0x1a
  431377:	mov    ebp,0x67d5910d
  43137c:	nop
  43137d:	(bad)  
  43137e:	mov    esi,0x1cef0e96
  431383:	imul   edx,DWORD PTR [ebx],0x4c0e811d
  431389:	cmp    esi,DWORD PTR [esi-0xbcdcf2b]
  43138f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  431390:	nop
  431391:	xor    al,0xcb
  431393:	data16 stc 
  431395:	je     0x431359
  431397:	jg     0x431323
  431399:	int    0x48
  43139b:	and    al,0x1f
  43139d:	mov    bh,ah
  43139f:	sbb    edx,DWORD PTR [ebx+0x5a]
  4313a2:	xchg   ch,dl
  4313a4:	sbb    BYTE PTR [edi-0x6bf9b0c],0xe2
  4313ab:	jle    0x431390
  4313ad:	push   edx
  4313ae:	cdq    
  4313af:	dec    esp
  4313b0:	loopne 0x431418
  4313b2:	xor    ebx,DWORD PTR [esi+0xe3e6cda]
  4313b8:	fidivr DWORD PTR [edi+0x7c]
  4313bb:	int3   
  4313bc:	inc    esp
  4313bd:	lahf   
  4313be:	add    BYTE PTR [edx-0x6b91b056],al
  4313c4:	push   edi
  4313c5:	aaa    
  4313c6:	xchg   ebp,eax
  4313c7:	xlat   BYTE PTR ds:[ebx]
  4313c8:	inc    edi
  4313c9:	mov    WORD PTR [ebx],gs
  4313cb:	(bad)  
  4313cc:	jmp    0x6686:0xab951715
  4313d3:	gs adc eax,0x686957f2
  4313d9:	dec    edi
  4313da:	mov    ah,0x5a
  4313dc:	pop    ecx
  4313dd:	test   DWORD PTR [edi-0x2a],0xef4ec8cf
  4313e4:	mov    bl,0xc
  4313e6:	pop    ds
  4313e7:	int    0x6
  4313e9:	and    DWORD PTR [esi-0x2c],esp
  4313ec:	ds add cl,bl
  4313ef:	or     al,0xca
  4313f1:	loop   0x43140a
  4313f3:	inc    ebp
  4313f4:	mov    ds:0x34484a0e,al
  4313f9:	push   ss
  4313fa:	lea    ebx,[edi+0x45bfdeb2]
  431400:	pop    ss
  431401:	gs (bad) 
  431403:	fdivp  st(7),st
  431405:	fsub   QWORD PTR [ebx-0x63]
  431408:	mov    al,ds:0x7d541529
  43140d:	sbb    al,0xba
  43140f:	add    DWORD PTR [eax],eax
  431411:	adc    DWORD PTR [ecx],eax
  431413:	add    BYTE PTR [eax],al
  431415:	test   eax,0xe8512bbc
  43141a:	sbb    DWORD PTR ds:0xba800ccc,esp
  431420:	jp     0x43144f
  431422:	sahf   
  431423:	xor    esp,eax
  431425:	out    dx,al
  431426:	push   cs
  431427:	push   ebp
  431428:	iret   
  431429:	mov    ds:0xa2ffae41,al
  43142e:	not    DWORD PTR [ebx*8+0x6a67d94c]
  431435:	sub    eax,0x5ed48e5c
  43143a:	sub    esp,ecx
  43143c:	and    BYTE PTR [edx],dl
  43143e:	add    ebp,ebx
  431440:	sbb    bh,bl
  431442:	popf   
  431443:	jle    0x4314c0
  431445:	pushf  
  431446:	in     al,0x50
  431448:	push   ecx
  431449:	adc    bl,BYTE PTR [ebp-0x58]
  43144c:	scas   eax,DWORD PTR es:[edi]
  43144d:	sets   BYTE PTR [edi-0x78804012]
  431454:	fstp   st(0)
  431456:	(bad)  
  431457:	mov    al,ds:0x765542f1
  43145c:	lahf   
  43145d:	push   eax
  43145e:	mov    ?,WORD PTR [eax+0x32601c6]
  431464:	jl     0x43144c
  431466:	adc    bl,cl
  431468:	pop    edx
  431469:	ins    DWORD PTR es:[edi],dx
  43146a:	or     ch,ch
  43146c:	sbb    BYTE PTR [edi],cl
  43146e:	sar    DWORD PTR [ecx],0xb0
  431471:	add    eax,0xeff44920
  431476:	dec    ebp
  431477:	push   cs
  431478:	test   eax,0xa6dbbf35
  43147d:	stc    
  43147e:	dec    ecx
  43147f:	scas   al,BYTE PTR es:[edi]
  431480:	ss ja  0x43149a
  431483:	xor    al,0x93
  431485:	xor    ch,dl
  431487:	not    DWORD PTR [ecx-0x69c4345c]
  43148d:	dec    eax
  43148e:	ret    
  43148f:	push   esp
  431490:	mov    esi,0xb5768356
  431495:	dec    esp
  431496:	dec    ebx
  431497:	lahf   
  431498:	mov    esp,?
  43149a:	and    al,0x8
  43149c:	jbe    0x43143b
  43149e:	lods   eax,DWORD PTR ds:[esi]
  43149f:	into   
  4314a0:	xor    BYTE PTR [edx+0x8],dl
  4314a3:	xchg   ecx,eax
  4314a4:	and    DWORD PTR [ebx-0x4de4313e],edx
  4314aa:	add    DWORD PTR [ebx+0x1b],esi
  4314ad:	push   cs
  4314ae:	xchg   edi,eax
  4314af:	sub    BYTE PTR [ecx-0x2d],ah
  4314b2:	outs   dx,BYTE PTR ds:[esi]
  4314b3:	inc    ebp
  4314b4:	aaa    
  4314b5:	and    ch,dl
  4314b7:	test   BYTE PTR [edx+0x44],bl
  4314ba:	int    0x9c
  4314bc:	mov    eax,0x63242671
  4314c1:	jmp    0x3186babb
  4314c6:	aaa    
  4314c7:	aaa    
  4314c8:	push   esp
  4314c9:	dec    ebp
  4314ca:	pop    ebx
  4314cb:	pop    esp
  4314cc:	jg     0x4314ce
  4314ce:	scas   al,BYTE PTR es:[edi]
  4314cf:	mov    edx,0xdbda2207
  4314d4:	inc    edi
  4314d5:	test   DWORD PTR [esi-0x604a206],ebx
  4314db:	xor    eax,0xe09e5caa
  4314e0:	int3   
  4314e1:	(bad)  
  4314e2:	fidiv  DWORD PTR [eax+0x53]
  4314e5:	or     al,0x67
  4314e7:	sbb    ah,bl
  4314e9:	aaa    
  4314ea:	xor    al,0x8c
  4314ec:	retf   
  4314ed:	jp     0x431528
  4314ef:	sub    eax,0xbfe02365
  4314f4:	sbb    al,0x4e
  4314f6:	lock push ebx
  4314f8:	xchg   DWORD PTR ds:0x64e0213d,esi
  4314fe:	ins    DWORD PTR es:[edi],dx
  4314ff:	ss cmc 
  431501:	sub    dl,BYTE PTR [eax-0x45]
  431504:	aam    0xbe
  431506:	adc    eax,0x7a322937
  43150b:	add    al,0x75
  43150d:	cmp    eax,0x59aca9ec
  431512:	fs popa 
  431514:	call   FWORD PTR [esi]
  431516:	pop    ecx
  431517:	and    al,0xe2
  431519:	xchg   edx,eax
  43151a:	lods   eax,DWORD PTR ds:[esi]
  43151b:	(bad)  
  43151c:	(bad)  
  43151d:	call   0x43c0ca5e
  431522:	jmp    0x85c95495
  431527:	jp     0x4314ed
  431529:	sbb    edi,edi
  43152b:	mov    edi,0xe71efedf
  431530:	cmp    ah,BYTE PTR [ecx+0x10]
  431533:	jle    0x43151a
  431535:	xor    eax,0x1b4c7
  43153a:	adc    DWORD PTR [ecx],eax
  43153c:	add    BYTE PTR [eax],al
  43153e:	fadd   QWORD PTR ds:0x8a61b37d
  431544:	out    dx,al
  431545:	fisttp DWORD PTR [ecx*8-0x3cb36035]
  43154c:	jmp    0x5b75:0xb8308620
  431553:	sub    edx,0xffffffc4
  431556:	dec    edi
  431557:	call   0xd387:0x8d98034d
  43155e:	in     al,0x5d
  431560:	mov    ds,WORD PTR [edi-0x4a]
  431563:	push   esi
  431564:	in     al,0xe7
  431566:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  431567:	stc    
  431568:	imul   edi,DWORD PTR [esi-0x229986ca],0xffffff90
  43156f:	jmp    0x49e9:0x7ce510af
  431576:	ds push ebx
  431578:	int3   
  431579:	(bad)  
  43157a:	icebp  
  43157b:	add    eax,0xdf417a
  431580:	psrlq  mm7,QWORD PTR [edx-0x39fe394e]
  431587:	inc    esp
  431588:	adc    DWORD PTR [ecx-0x14c233d],ecx
  43158e:	push   cs
  43158f:	(bad)  
  431590:	cmp    ch,BYTE PTR [ebp+edi*1-0x11]
  431594:	lods   al,BYTE PTR ds:[esi]
  431595:	pop    ebx
  431596:	cmp    eax,0xaa585341
  43159b:	inc    ebp
  43159c:	mov    ds:0x4f27943b,eax
  4315a1:	push   eax
  4315a2:	icebp  
  4315a3:	test   DWORD PTR [esi],ebx
  4315a5:	pop    ebp
  4315a6:	imul   esi,DWORD PTR [eax+eax*2+0x39124963],0x5486e5c6
  4315b1:	jo     0x43157f
  4315b3:	or     bh,BYTE PTR [ecx-0x325559eb]
  4315b9:	dec    esi
  4315ba:	sahf   
  4315bb:	ins    DWORD PTR es:[edi],dx
  4315bc:	xlat   BYTE PTR ds:[ebx]
  4315bd:	push   edi
  4315be:	inc    eax
  4315bf:	jb     0x431632
  4315c1:	xor    al,BYTE PTR [edi-0x10]
  4315c4:	and    eax,0x2f2f9509
  4315c9:	icebp  
  4315ca:	push   esp
  4315cb:	test   BYTE PTR [esi],dl
  4315cd:	sub    edi,ebp
  4315cf:	mov    edi,0x97b8f197
  4315d4:	cmp    cl,BYTE PTR [edi]
  4315d6:	fsubr  st(6),st
  4315d8:	or     ebp,DWORD PTR [ecx-0x5f8ba38a]
  4315de:	std    
  4315df:	cmp    esp,DWORD PTR [edx]
  4315e1:	dec    ecx
  4315e2:	jb     0x431572
  4315e4:	mov    esp,0x24827517
  4315e9:	mov    esi,0x9aca5342
  4315ee:	pop    eax
  4315ef:	xor    eax,0x675c1b01
  4315f4:	ja     0x4315a9
  4315f6:	adc    DWORD PTR [eax+0x1a6829de],esi
  4315fc:	pop    ebp
  4315fd:	popa   
  4315fe:	inc    eax
  4315ff:	xor    al,ch
  431601:	mov    ch,0x5e
  431603:	pop    ss
  431604:	dec    esi
  431605:	fwait
  431606:	sub    esi,edx
  431608:	pusha  
  431609:	cmps   DWORD PTR cs:[esi],DWORD PTR es:[edi]
  43160b:	gs xchg edx,eax
  43160d:	es jecxz 0x43164f
  431610:	int    0x69
  431612:	xor    BYTE PTR [ebx],bh
  431614:	push   edx
  431615:	xchg   esi,eax
  431616:	out    0x9c,al
  431618:	cmp    edx,edi
  43161a:	cld    
  43161b:	mov    ds:0x1ef80fad,eax
  431620:	mov    ds:0xbefdff01,eax
  431625:	mov    ebp,0xa18be2fd
  43162a:	pushf  
  43162b:	xlat   BYTE PTR ds:[ebx]
  43162c:	nop
  43162d:	dec    ebx
  43162e:	mov    ebx,0xa2799c18
  431633:	popf   
  431634:	nop
  431635:	dec    ecx
  431636:	xor    BYTE PTR [esi+ebx*8+0x6a6befe9],ch
  43163d:	outs   dx,BYTE PTR ds:[esi]
  43163e:	pop    ebx
  43163f:	ret    0x34c4
  431642:	mov    edx,0xcede9c4
  431647:	sahf   
  431648:	and    BYTE PTR [ebp+0x7f96c896],bl
  43164e:	mov    ch,0x56
  431650:	(bad)  
  431651:	in     al,dx
  431652:	ss std 
  431654:	aas    
  431655:	fsubrp st(7),st
  431657:	cdq    
  431658:	jns    0x43161c
  43165a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43165b:	in     al,0x37
  43165d:	push   0x1b3b664
  431662:	add    BYTE PTR [ecx],dl
  431664:	add    DWORD PTR [eax],eax
  431666:	add    BYTE PTR [edi-0x748442a],dl
  43166c:	(bad)  
  43166d:	adc    DWORD PTR [ebp+0x38],esi
  431670:	icebp  
  431671:	pop    edi
  431672:	mov    ds:0xc09091e9,al
  431677:	mov    cl,0x47
  431679:	popa   
  43167a:	push   cs
  43167b:	scas   al,BYTE PTR es:[edi]
  43167c:	je     0x4316c5
  43167e:	pop    edi
  43167f:	push   ss
  431680:	sub    dh,bh
  431682:	pop    ds
  431683:	shl    BYTE PTR ds:0xbf703b7,cl
  431689:	xor    DWORD PTR [eax-0x77],eax
  43168c:	pop    eax
  43168d:	mov    esi,ecx
  43168f:	push   eax
  431690:	(bad)
  431693:	dec    eax
  431694:	jae    0x431663
  431696:	mov    DWORD PTR [ebp+0x7e],eax
  431699:	outs   dx,BYTE PTR ds:[esi]
  43169a:	or     dh,BYTE PTR [esi-0x5a]
  43169d:	(bad)  
  43169e:	sub    esp,DWORD PTR [ecx+0x3be4e0ed]
  4316a4:	sub    al,0xca
  4316a6:	es call 0x9b0857ca
  4316ac:	outs   dx,DWORD PTR ds:[esi]
  4316ad:	mov    edi,0xe7eeb785
  4316b2:	push   cs
  4316b3:	mov    dl,0x4
  4316b5:	mov    bh,0x2f
  4316b7:	cmp    ah,0xc8
  4316ba:	(bad)  
  4316bb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4316bc:	push   cs
  4316bd:	pop    edi
  4316be:	xor    DWORD PTR [ecx],0x67
  4316c1:	inc    eax
  4316c2:	sub    cl,cl
  4316c4:	or     edi,ecx
  4316c6:	or     DWORD PTR [esi+0x3a],ecx
  4316c9:	(bad)  
  4316ca:	adc    dh,cl
  4316cc:	jmp    0xb5bd:0x9c5bb5ca
  4316d3:	repz add eax,0x8ad7c89
  4316d9:	push   ebx
  4316da:	lock push 0x266bb9e4
  4316e0:	neg    DWORD PTR [eax+0x3b1b23fc]
  4316e6:	in     eax,0x9f
  4316e8:	sbb    al,0x8d
  4316ea:	ret    
  4316eb:	fxch   st(5)
  4316ed:	add    edi,DWORD PTR [esi-0x6b]
  4316f0:	sub    edx,edi
  4316f2:	push   edi
  4316f3:	jle    0x4316e9
  4316f5:	xchg   edi,eax
  4316f6:	sub    al,0xb0
  4316f8:	sbb    cl,cl
  4316fa:	xlat   BYTE PTR ds:[ebx]
  4316fb:	pop    ebp
  4316fc:	leave  
  4316fd:	pop    eax
  4316fe:	jns    0x4316c5
  431700:	popa   
  431701:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  431702:	iret   
  431703:	or     DWORD PTR [eax],0xffffffb0
  431706:	jns    0x431701
  431708:	push   ebx
  431709:	test   BYTE PTR [esi],ch
  43170b:	sar    BYTE PTR [esi+ecx*8-0x38],1
  43170f:	sar    ebx,1
  431711:	sahf   
  431712:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  431713:	fcmovnb st,st(1)
  431715:	xchg   BYTE PTR [ecx-0x532c5110],dl
  43171b:	bound  ebx,QWORD PTR [ebx]
  43171d:	add    DWORD PTR [edx-0x1b],edi
  431720:	xchg   edx,eax
  431721:	ss test eax,0x8de95c6
  431727:	out    dx,al
  431728:	(bad)  
  431729:	cmc    
  43172a:	mov    esi,0x8384bdce
  43172f:	aad    0x1f
  431731:	pop    ecx
  431732:	das    
  431733:	fwait
  431734:	popa   
  431735:	push   edi
  431736:	(bad)  
  431737:	mov    esp,0x7cf6bbbf
  43173c:	loopne 0x431733
  43173e:	shl    BYTE PTR [ecx-0x453e8307],cl
  431744:	or     eax,0x4bc0a44c
  431749:	ret    0x3c8a
  43174c:	fnsave [edx-0x1b]
  43174f:	push   cs
  431750:	scas   al,BYTE PTR es:[edi]
  431751:	sbb    edx,DWORD PTR [edx-0x1d]
  431754:	inc    edi
  431755:	cmp    DWORD PTR [ecx-0x7c],edi
  431758:	fsubr  DWORD PTR ds:0x8b5692f
  43175e:	dec    ecx
  43175f:	pop    ebp
  431760:	cmp    esp,DWORD PTR [esi+ebp*2+0x4f]
  431764:	sahf   
  431765:	loop   0x4317cf
  431767:	stc    
  431768:	push   eax
  431769:	in     al,dx
  43176a:	mov    WORD PTR [edi],cs
  43176c:	add    esi,edx
  43176e:	mov    al,ds:0xcc4d13a4
  431773:	mov    esp,DWORD PTR [eax-0x5b]
  431776:	inc    eax
  431777:	popf   
  431778:	les    esp,FWORD PTR [edx-0x21112f54]
  43177e:	cld    
  43177f:	mov    dh,0xa9
  431781:	dec    ecx
  431782:	inc    eax
  431783:	or     edi,DWORD PTR [ebp-0x15fc6828]
  431789:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43178a:	add    DWORD PTR [eax],eax
  43178c:	adc    DWORD PTR [ecx],eax
  43178e:	add    BYTE PTR [eax],al
  431790:	add    DWORD PTR [ecx-0x7fb06ea1],ebx
  431796:	add    eax,0xc0a7fecd
  43179b:	ror    BYTE PTR [edx+0x1d],1
  43179e:	fstp   TBYTE PTR [ebp+0xd]
  4317a1:	fdiv   QWORD PTR [ebp+edx*2+0x1c06257f]
  4317a8:	rol    DWORD PTR [ebp-0x318ea1a0],1
  4317ae:	adc    BYTE PTR [esi],ch
  4317b0:	pop    eax
  4317b1:	sbb    edx,esp
  4317b3:	scas   al,BYTE PTR es:[edi]
  4317b4:	mov    bl,0x26
  4317b6:	cmp    ebx,edi
  4317b8:	cld    
  4317b9:	popf   
  4317ba:	adc    al,0x6f
  4317bc:	pop    esp
  4317bd:	das    
  4317be:	xchg   ecx,eax
  4317bf:	push   eax
  4317c0:	and    BYTE PTR [eax-0x34],bh
  4317c3:	push   esp
  4317c4:	fidivr WORD PTR [ebx+esi*2-0x70]
  4317c8:	shl    BYTE PTR [ebx+eax*2-0x66f0fba4],cl
  4317cf:	and    DWORD PTR [eax+0x4282eabe],esi
  4317d5:	es and eax,0x54032097
  4317db:	repnz dec esp
  4317dd:	adc    eax,0xbeaf77fb
  4317e2:	mov    BYTE PTR [edx+0x28],ch
  4317e5:	jns    0x4317ea
  4317e7:	push   0xffffff8a
  4317e9:	test   DWORD PTR [eax-0x5d],edx
  4317ec:	call   0xbcabe6d9
  4317f1:	add    al,0xca
  4317f3:	push   eax
  4317f4:	add    al,0x68
  4317f6:	xchg   esi,eax
  4317f7:	jnp    0x431783
  4317f9:	mov    ds:0x75963ca2,al
  4317fe:	stc    
  4317ff:	test   al,0x91
  431801:	addr16 mov dl,0x44
  431804:	xchg   ebx,eax
  431805:	and    ecx,DWORD PTR [edx+0x70]
  431808:	push   0x5fd9aafc
  43180d:	pushf  
  43180e:	retfw  
  431810:	cli    
  431811:	pop    eax
  431812:	jo     0x4317ac
  431814:	or     BYTE PTR [edi+edi*2+0x45678362],bh
  43181b:	and    DWORD PTR [ebp-0x3e],esi
  43181e:	or     BYTE PTR [ebp-0x7f],bh
  431821:	fisub  DWORD PTR [edi]
  431823:	js     0x431845
  431825:	cmc    
  431826:	mov    edi,0xa12e2daa
  43182b:	int    0x9d
  43182d:	push   0xdb4235be
  431832:	dec    eax
  431833:	add    bh,bh
  431835:	sbb    bl,ch
  431837:	xchg   esp,eax
  431838:	out    dx,al
  431839:	scas   eax,DWORD PTR es:[edi]
  43183a:	iret   
  43183b:	cmp    dl,bh
  43183d:	lock idiv DWORD PTR [ebp+eiz*4-0x4a]
  431842:	out    0x3a,al
  431844:	pop    es
  431845:	push   edi
  431846:	in     al,dx
  431847:	js     0x431844
  431849:	jmp    0xf958e468
  43184e:	loop   0x431819
  431850:	clc    
  431851:	call   DWORD PTR [ebx]
  431853:	out    0x5a,eax
  431855:	pop    ecx
  431856:	and    DWORD PTR [esi-0x59],edi
  431859:	mov    bl,0x7b
  43185b:	imul   ecx,DWORD PTR [eax],0x161886da
  431861:	jg     0x43187f
  431863:	adc    eax,edi
  431865:	jecxz  0x43182e
  431867:	aaa    
  431868:	push   ss
  431869:	mov    ebx,0xf8c24756
  43186e:	loop   0x43180a
  431870:	inc    edx
  431871:	add    eax,0x19cb90ac
  431876:	ins    BYTE PTR es:[edi],dx
  431877:	ret    0xd9a2
  43187a:	cs out dx,al
  43187c:	mov    al,ds:0xb8cfcba3
  431881:	and    BYTE PTR [esi],ch
  431883:	repnz push es
  431885:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  431886:	pusha  
  431887:	aad    0x23
  431889:	dec    BYTE PTR [edi]
  43188b:	mov    ss,esp
  43188d:	ror    BYTE PTR [esp+esi*1-0x7b],0x3f
  431892:	dec    edi
  431893:	add    edx,edx
  431895:	xchg   ecx,eax
  431896:	ss stos BYTE PTR es:[edi],al
  431898:	(bad)  
  431899:	or     DWORD PTR [ebx-0x7a98b523],ecx
  43189f:	add    al,0x68
  4318a1:	lea    edi,[edi]
  4318a3:	lahf   
  4318a4:	xchg   edi,eax
  4318a5:	mov    edi,0x2b3f8db7
  4318aa:	add    ebp,DWORD PTR [edx]
  4318ac:	and    ebx,DWORD PTR [edi+ecx*8]
  4318af:	sub    al,0x9d
  4318b1:	or     al,0xa9
  4318b3:	add    DWORD PTR [eax],eax
  4318b5:	adc    DWORD PTR [ecx],eax
  4318b7:	add    BYTE PTR [eax],al
  4318b9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4318ba:	inc    ebx
  4318bb:	imul   DWORD PTR [ecx]
  4318bd:	pop    ecx
  4318be:	aas    
  4318bf:	mov    esp,0xf2f47b9f
  4318c4:	stos   BYTE PTR es:[edi],al
  4318c5:	or     al,0xe9
  4318c7:	add    esi,DWORD PTR [ebx-0x10]
  4318ca:	mov    ebp,0x6c51c1a6
  4318cf:	fcomi  st,st(7)
  4318d1:	das    
  4318d2:	mov    dh,0xd8
  4318d4:	cld    
  4318d5:	and    eax,0x96cdecb5
  4318da:	pop    ebp
  4318db:	mov    eax,ds:0x48fdd9b9
  4318e0:	sub    DWORD PTR [ecx-0x59],esp
  4318e3:	cdq    
  4318e4:	loopne 0x431962
  4318e6:	sub    BYTE PTR [ecx+0x335b5e96],0x33
  4318ed:	scas   eax,DWORD PTR es:[edi]
  4318ee:	add    eax,0x1a9946dd
  4318f3:	ret    
  4318f4:	push   esi
  4318f5:	push   eax
  4318f6:	popa   
  4318f7:	ins    BYTE PTR es:[edi],dx
  4318f8:	push   ecx
  4318f9:	sbb    bh,bl
  4318fb:	add    al,0xa8
  4318fd:	inc    ebx
  4318fe:	repnz gs into 
  431901:	call   0xb430:0xf1ecee10
  431908:	cdq    
  431909:	test   bh,ah
  43190b:	test   eax,0xe635f7e7
  431910:	fwait
  431911:	add    BYTE PTR [edx-0x3abcfe70],cl
  431917:	adc    dl,BYTE PTR [edx-0x27]
  43191a:	sbb    bh,ah
  43191c:	add    cl,BYTE PTR [ebp+0x3c]
  43191f:	mov    esi,0x2009ba6e
  431924:	add    eax,0x1d0cae8e
  431929:	call   0xa812d46e
  43192e:	sub    BYTE PTR [esi+0x1f],ch
  431931:	push   cs
  431932:	adc    esi,ebp
  431934:	aas    
  431935:	jne    0x43193e
  431937:	mov    eax,ds:0xa821027e
  43193c:	outs   dx,BYTE PTR ds:[esi]
  43193d:	cli    
  43193e:	push   ebp
  43193f:	mov    eax,ds:0x546e072e
  431944:	sbb    edi,eax
  431946:	sahf   
  431947:	mov    edx,0x7b1cef28
  43194c:	or     DWORD PTR [eax+0x5d],ecx
  43194f:	lods   eax,DWORD PTR ds:[esi]
  431950:	sub    DWORD PTR [edi+eiz*1+0x4be53aa8],0xa0ce6347
  43195b:	pop    edx
  43195c:	dec    esi
  43195d:	jne    0x43191c
  43195f:	cld    
  431960:	in     eax,0x7b
  431962:	sahf   
  431963:	mov    ds:0xcac575b5,al
  431968:	pop    es
  431969:	call   0x19a5:0x88062b5
  431970:	mov    edx,0x7aacd81d
  431975:	les    ebx,FWORD PTR [ebp-0x30]
  431978:	std    
  431979:	mov    fs,WORD PTR [ebp-0x6a]
  43197c:	call   0xe775dd1c
  431981:	cmp    BYTE PTR [edx+eax*2],ah
  431984:	clc    
  431985:	mov    eax,0xf8af56be
  43198a:	push   es
  43198b:	inc    ebp
  43198c:	xchg   ecx,eax
  43198d:	imul   BYTE PTR [ecx-0x30adc9be]
  431993:	mov    dh,0xc6
  431995:	(bad)  
  431996:	pop    edi
  431997:	rol    al,0x5d
  43199a:	sti    
  43199b:	lods   eax,DWORD PTR ds:[esi]
  43199c:	mov    ?,WORD PTR [ebp-0x4d057789]
  4319a2:	jle    0x431931
  4319a4:	pushfw 
  4319a6:	mov    eax,ds:0x958709a9
  4319ab:	push   fs
  4319ad:	adc    ecx,DWORD PTR [eax-0x4e7d280b]
  4319b3:	cmp    DWORD PTR [esi+0x2b8019b8],ecx
  4319b9:	addr16 mov bh,0xad
  4319bc:	std    
  4319bd:	jle    0x431958
  4319bf:	mov    ecx,0xc0d7d8e9
  4319c4:	test   eax,0x665e7979
  4319c9:	and    cl,0x12
  4319cc:	add    eax,0xfb1ff71e
  4319d1:	push   esi
  4319d3:	dec    esi
  4319d4:	sub    DWORD PTR ds:0xfc8b62fd,ebx
  4319da:	fldenv [ebp+0x1110001]
  4319e0:	add    BYTE PTR [eax],al
  4319e2:	stos   BYTE PTR es:[edi],al
  4319e3:	in     eax,0x81
  4319e5:	in     eax,dx
  4319e6:	popa   
  4319e7:	fld    st(1)
  4319e9:	out    0x4e,al
  4319eb:	sub    ecx,DWORD PTR [esp+ebp*8-0x27c031e3]
  4319f2:	mov    ch,0x89
  4319f4:	add    al,0x52
  4319f6:	lea    esi,[edi+0x323f072d]
  4319fc:	push   ds
  4319fd:	inc    edx
  4319fe:	and    dl,BYTE PTR [eax+ecx*1]
  431a01:	pop    ds
  431a02:	mov    dh,0xde
  431a04:	sub    DWORD PTR [edx+0x7d],edi
  431a07:	ins    DWORD PTR es:[edi],dx
  431a08:	push   es
  431a09:	xchg   edi,eax
  431a0a:	sbb    ah,BYTE PTR [esi+esi*1+0x69]
  431a0e:	xor    BYTE PTR [eax],dh
  431a10:	neg    ebx
  431a12:	jns    0x431a30
  431a14:	popf   
  431a15:	leave  
  431a16:	xchg   edi,eax
  431a17:	dec    edx
  431a18:	rcr    DWORD PTR [ebp+0x1a],1
  431a1b:	popa   
  431a1c:	shl    DWORD PTR [eax+eiz*1],cl
  431a1f:	cmp    esp,DWORD PTR [ebx-0x3539880c]
  431a25:	cdq    
  431a26:	xor    BYTE PTR [edx+0x49],ah
  431a29:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  431a2a:	ficomp DWORD PTR [esi+0x4c]
  431a2d:	xor    DWORD PTR [eax],edx
  431a2f:	ins    BYTE PTR es:[edi],dx
  431a30:	xor    ebx,DWORD PTR [ebx]
  431a32:	frstor [edx+0x319b329a]
  431a38:	mov    WORD PTR [ebx+eiz*2+0x2b],cs
  431a3c:	mov    bl,BYTE PTR [esp+edi*2+0x69d5bcde]
  431a43:	div    BYTE PTR [esi-0x16]
  431a46:	jb     0x431abf
  431a48:	pop    edx
  431a49:	outs   dx,DWORD PTR ds:[esi]
  431a4a:	jmp    0x775c541b
  431a4f:	dec    esi
  431a50:	lds    ebx,FWORD PTR [edx]
  431a52:	out    dx,eax
  431a53:	xor    DWORD PTR [ebp+0x3b],edx
  431a56:	add    edi,edi
  431a58:	(bad)  
  431a59:	retf   
  431a5a:	call   0x2044:0xb9b85ffe
  431a61:	lds    esi,FWORD PTR [edx]
  431a63:	inc    ecx
  431a64:	mov    edi,?
  431a66:	mov    edi,edx
  431a68:	stc    
  431a69:	std    
  431a6a:	sti    
  431a6b:	jne    0x431a1a
  431a6d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  431a6e:	or     al,0x8d
  431a70:	push   ebx
  431a71:	inc    ebp
  431a72:	jne    0x431a48
  431a74:	stos   BYTE PTR es:[edi],al
  431a75:	aas    
  431a76:	or     al,0x5f
  431a78:	clc    
  431a79:	arpl   WORD PTR [ebx],ax
  431a7b:	les    esi,FWORD PTR [ebx-0x5f5f1aec]
  431a81:	mov    dl,0x96
  431a83:	lea    eax,[edx+edx*4+0x6]
  431a87:	bnd lock jno 0x431a6f
  431a8b:	add    BYTE PTR [esi-0x385cefce],al
  431a91:	or     esp,DWORD PTR ds:[edi]
  431a94:	mov    bh,0xe0
  431a96:	daa    
  431a97:	mov    cl,0x44
  431a99:	test   BYTE PTR [edi-0x52f2ac85],0xa5
  431aa0:	mov    eax,ds:0x42693e14
  431aa5:	add    cl,BYTE PTR [edx-0x2d86ebd5]
  431aab:	ins    DWORD PTR es:[edi],dx
  431aac:	xchg   edi,eax
  431aad:	pusha  
  431aae:	inc    esp
  431aaf:	xchg   esp,eax
  431ab0:	xchg   ebx,eax
  431ab1:	repz dec DWORD PTR [eax]
  431ab4:	cld    
  431ab5:	xchg   ebx,eax
  431ab6:	xchg   ecx,eax
  431ab7:	sub    al,0x4d
  431ab9:	(bad)  
  431aba:	stos   BYTE PTR es:[edi],al
  431abb:	out    0xec,eax
  431abd:	jecxz  0x431b30
  431abf:	cmp    BYTE PTR [esi-0x235b2e3b],dl
  431ac5:	cli    
  431ac6:	sbb    ah,BYTE PTR [ebp+eax*2+0x52]
  431aca:	push   edx
  431acb:	or     eax,0x3c435bc0
  431ad0:	mov    ah,0x31
  431ad2:	aas    
  431ad3:	lea    esi,[ecx+0x2fd8031e]
  431ad9:	sub    esi,0xa4b8ba74
  431adf:	sbb    ebx,DWORD PTR [edx-0x227d010b]
  431ae5:	jle    0x431a75
  431ae7:	lock dec eax
  431ae9:	dec    edi
  431aea:	clc    
  431aeb:	lahf   
  431aec:	and    edi,edi
  431aee:	xor    cl,al
  431af0:	popa   
  431af1:	or     eax,0xa4a078ca
  431af6:	fwait
  431af7:	cld    
  431af8:	lahf   
  431af9:	jg     0x431ade
  431afb:	mov    ah,dh
  431afd:	jns    0x431b45
  431aff:	hlt    
  431b00:	(bad)  
  431b01:	in     al,0x27
  431b03:	sti    
  431b04:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  431b05:	add    DWORD PTR [eax],eax
  431b07:	adc    DWORD PTR [ecx],eax
  431b09:	add    BYTE PTR [eax],al
  431b0b:	mov    si,0xa35
  431b0f:	and    BYTE PTR [ebp-0x19c3f417],dh
  431b15:	stc    
  431b16:	push   0x64016243
  431b1b:	js     0x431b63
  431b1d:	cmp    DWORD PTR [ecx+0x6755a1d3],esp
  431b23:	stos   BYTE PTR es:[edi],al
  431b24:	test   BYTE PTR [esi+0x5e],bh
  431b27:	pop    eax
  431b28:	adc    cl,BYTE PTR [eax]
  431b2a:	inc    edx
  431b2b:	jnp    0x431b40
  431b2d:	(bad)  
  431b2f:	pusha  
  431b30:	mov    ebx,0x5cccae40
  431b35:	push   ebx
  431b36:	shl    BYTE PTR [eax+0xd],cl
  431b39:	fld    TBYTE PTR [esi]
  431b3b:	or     dh,al
  431b3d:	push   ebx
  431b3e:	xchg   ecx,eax
  431b3f:	jp     0x431b21
  431b41:	push   edi
  431b42:	fst    DWORD PTR [ecx]
  431b44:	mov    ecx,0x3a894911
  431b49:	adc    BYTE PTR [edi+ecx*4],ah
  431b4c:	inc    edi
  431b4d:	in     eax,dx
  431b4e:	jo     0x431b48
  431b50:	inc    ebp
  431b51:	jnp    0x431af4
  431b53:	inc    ebp
  431b54:	xchg   ebp,edx
  431b56:	jmp    DWORD PTR [esi+edi*1-0xad0d56d]
  431b5d:	mov    ds:0xb570b1c0,al
  431b62:	ror    BYTE PTR [ecx-0x27fd552a],0xcf
  431b69:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  431b6a:	xor    ch,ch
  431b6c:	or     al,0xb5
  431b6e:	in     al,0x13
  431b70:	xor    al,0x40
  431b72:	stos   BYTE PTR es:[edi],al
  431b73:	jle    0x431b44
  431b75:	xchg   esi,eax
  431b76:	push   eax
  431b77:	cmp    esi,DWORD PTR [ecx]
  431b79:	xchg   ebp,eax
  431b7a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  431b7b:	dec    ebx
  431b7c:	mov    esi,0xaa12fd72
  431b81:	(bad)  
  431b82:	cli    
  431b83:	fsubr  QWORD PTR [edi-0x7335b1fd]
  431b89:	mov    ah,BYTE PTR [esi+ecx*1-0x341410ac]
  431b90:	mov    fs:0xd12464,eax
  431b96:	mov    edx,DWORD PTR [ebx]
  431b98:	and    eax,0xb3d729df
  431b9d:	sub    bh,BYTE PTR [eax+0x8]
  431ba0:	fs push esi
  431ba2:	les    ebx,FWORD PTR [ebx]
  431ba4:	lds    ecx,FWORD PTR [eax+0x69346c5a]
  431baa:	sub    DWORD PTR [edx-0x4a458346],ebx
  431bb0:	mov    bh,0x73
  431bb3:	addr16 addr16 mov al,ds:0x8cf5
  431bb8:	inc    ebp
  431bb9:	mov    eax,0xd6cd3acb
  431bbe:	inc    ebx
  431bbf:	mov    ecx,0xe74e0f2a
  431bc4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  431bc5:	je     0x431c29
  431bc7:	inc    ebx
  431bc8:	xor    DWORD PTR [eax],ecx
  431bca:	jl     0x431c2a
  431bcc:	test   eax,0x45dabd74
  431bd1:	scas   eax,DWORD PTR es:[edi]
  431bd2:	aad    0xd3
  431bd4:	or     ah,dl
  431bd6:	pop    esi
  431bd7:	ss jnp 0x431c56
  431bda:	cld    
  431bdb:	xchg   edx,eax
  431bdc:	or     ecx,esi
  431bde:	repz cld 
  431be0:	or     esp,DWORD PTR [edi+0x74]
  431be3:	jae    0x431be2
  431be5:	mov    eax,0x95ee996c
  431bea:	mov    ebp,0xdbfda497
  431bef:	sahf   
  431bf0:	fidiv  DWORD PTR [ecx+0x3a]
  431bf3:	neg    esi
  431bf5:	pop    eax
  431bf6:	stc    
  431bf7:	inc    BYTE PTR [esp+ebx*8]
  431bfa:	mov    edi,0x7976aaea
  431bff:	and    eax,0xfedfd93d
  431c04:	xchg   esi,eax
  431c05:	imul   ecx,ebx,0x37
  431c08:	cmp    cl,BYTE PTR [edi+0x5d]
  431c0b:	es hlt 
  431c0d:	dec    edx
  431c0e:	jo     0x431c26
  431c10:	aad    0xb8
  431c12:	sbb    ebx,DWORD PTR [eax+0x5a]
  431c15:	mov    esi,0x644a74a6
  431c1a:	or     al,0x7
  431c1c:	out    dx,eax
  431c1d:	mov    DWORD PTR cs:[ecx],edi
  431c20:	leave  
  431c21:	mov    edi,0x5a5feff
  431c26:	(bad)  
  431c28:	sti    
  431c29:	xchg   ebp,eax
  431c2a:	es mov ah,0x92
  431c2d:	rol    DWORD PTR [ecx],1
  431c2f:	add    BYTE PTR [ecx],dl
  431c31:	add    DWORD PTR [eax],eax
  431c33:	add    BYTE PTR [ecx*2-0x2c0477ec],ch
  431c3a:	sti    
  431c3b:	es add eax,0x89d870c3
  431c41:	scas   eax,DWORD PTR es:[edi]
  431c42:	xchg   edi,eax
  431c43:	dec    esp
  431c44:	or     esi,DWORD PTR [esi+eiz*1]
  431c47:	popa   
  431c48:	sub    DWORD PTR [ebp+0x67],0x5297bf42
  431c4f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  431c50:	test   al,0x69
  431c52:	stos   DWORD PTR es:[edi],eax
  431c53:	or     ah,BYTE PTR [edx+edx*2+0x2f0a10d7]
  431c5a:	and    DWORD PTR ss:[ebp-0x1ecf847f],edi
  431c61:	jmp    0x431cc8
  431c63:	aad    0xe8
  431c65:	std    
  431c66:	out    0x71,al
  431c68:	retf   
  431c69:	push   esp
  431c6a:	xor    bh,BYTE PTR [esi-0x22fe6ac6]
  431c70:	jg     0x431c70
  431c72:	adc    al,0x88
  431c74:	pop    esp
  431c75:	dec    esi
  431c76:	inc    edi
  431c77:	add    eax,0x8d7be617
  431c7c:	push   0xf9f10bc8
  431c81:	scas   al,BYTE PTR es:[edi]
  431c82:	inc    esi
  431c83:	sub    edi,DWORD PTR [esi-0x400525ac]
  431c89:	fidivr WORD PTR [edi+0x2d]
  431c8c:	sar    DWORD PTR [esi+0x21c42b52],0xbd
  431c93:	cmp    eax,0xf1f397ac
  431c98:	pop    esp
  431c99:	xor    al,0x31
  431c9b:	imul   ebp,DWORD PTR [esi+0x71f23626],0xfa327d02
  431ca5:	fisttp DWORD PTR [esi-0x58]
  431ca8:	pushf  
  431ca9:	inc    ebx
  431caa:	mov    edx,0x8d262d09
  431caf:	bound  esi,QWORD PTR [ebx+esi*2+0x7]
  431cb3:	sub    BYTE PTR [ecx+0x8],0x66
  431cb7:	jge    0x431c93
  431cb9:	and    ah,BYTE PTR [eax]
  431cbb:	dec    ecx
  431cbc:	jae    0x431d2a
  431cbe:	sub    ebx,ebp
  431cc0:	inc    edx
  431cc1:	mov    ds:0xec424beb,eax
  431cc6:	and    al,0x63
  431cc8:	repnz out 0x53,eax
  431ccb:	mov    cl,0xa3
  431ccd:	int3   
  431cce:	mov    ch,0x6b
  431cd0:	xchg   ebx,eax
  431cd1:	int3   
  431cd2:	xchg   BYTE PTR [eax],dh
  431cd4:	jno    0x431d24
  431cd6:	aam    0x27
  431cd8:	ins    BYTE PTR es:[edi],dx
  431cd9:	enter  0x1227,0xc5
  431cdd:	daa    
  431cde:	sbb    DWORD PTR [esp+ecx*1+0x4fc46762],0x4288c706
  431ce9:	in     al,0x5c
  431ceb:	mov    bl,0xa8
  431ced:	outs   dx,BYTE PTR ds:[esi]
  431cee:	mov    ah,0x7d
  431cf0:	cmc    
  431cf1:	mov    ds:0xd78a2af0,eax
  431cf6:	push   ss
  431cf7:	fwait
  431cf8:	dec    eax
  431cf9:	jns    0x431d1d
  431cfb:	pop    eax
  431cfc:	arpl   sp,bx
  431cfe:	xchg   esp,eax
  431cff:	push   ecx
  431d00:	xor    DWORD PTR [eax],esi
  431d02:	adc    ah,BYTE PTR [edi-0x459b5a2]
  431d08:	cmp    DWORD PTR [ecx-0x13dd6eab],0x18db9374
  431d12:	fwait
  431d13:	or     DWORD PTR [esi+0x6a800620],esp
  431d19:	or     DWORD PTR ds:0x97ff657f,esp
  431d1f:	xchg   esi,eax
  431d20:	pop    edx
  431d21:	hlt    
  431d22:	(bad)  [eax]
  431d24:	or     bh,0xa3
  431d27:	daa    
  431d28:	aaa    
  431d29:	xlat   BYTE PTR ds:[ebx]
  431d2a:	xchg   esi,eax
  431d2b:	mov    ch,0x2f
  431d2d:	push   esi
  431d2e:	lods   eax,DWORD PTR ds:[esi]
  431d2f:	jnp    0x431ce7
  431d31:	rol    BYTE PTR [edx-0x52],0xf
  431d35:	(bad)  
  431d36:	push   edx
  431d37:	arpl   WORD PTR [esi],bx
  431d39:	enter  0x21c9,0x81
  431d3d:	xlat   BYTE PTR ds:[ebx]
  431d3e:	cmc    
  431d3f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  431d40:	das    
  431d41:	imul   edx,DWORD PTR [esi],0xffffffd0
  431d44:	dec    ecx
  431d45:	push   0xebbec94a
  431d4a:	mov    edi,0x9e79de7f
  431d4f:	aad    0x68
  431d51:	pop    es
  431d52:	ret    
  431d53:	loopne 0x431d8d
  431d55:	mov    ah,0x1
  431d58:	add    BYTE PTR [ecx],dl
  431d5a:	add    DWORD PTR [eax],eax
  431d5c:	add    BYTE PTR [eax],al
  431d5e:	inc    ebp
  431d5f:	mov    dh,0xc3
  431d61:	shl    BYTE PTR [ebx-0x44],0xc7
  431d65:	outs   dx,DWORD PTR ds:[esi]
  431d66:	ffree  st(2)
  431d68:	sbb    al,BYTE PTR ds:0x334c9a4f
  431d6e:	and    ebx,edi
  431d70:	xchg   ebx,eax
  431d71:	repnz mov edi,0xb941ec32
  431d77:	ins    BYTE PTR es:[edi],dx
  431d78:	push   0x3bae7f5f
  431d7d:	ja     0x431dee
  431d7f:	xor    al,0xe6
  431d81:	add    bh,BYTE PTR [eax-0x5ee128d8]
  431d87:	or     edx,ebx
  431d89:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  431d8a:	lea    edi,[edx+edx*4]
  431d8d:	push   0x22
  431d8f:	dec    eax
  431d90:	sti    
  431d91:	shr    DWORD PTR [eax+0x8],cl
  431d94:	push   eax
  431d95:	iret   
  431d96:	stc    
  431d97:	out    0xa1,eax
  431d99:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  431d9a:	pusha  
  431d9b:	mov    esi,0x626381b5
  431da0:	mov    dl,0xf0
  431da2:	or     ecx,0x0
  431da5:	das    
  431da6:	cmc    
  431da7:	daa    
  431da8:	std    
  431da9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  431daa:	je     0x431d51
  431dac:	clc    
  431dad:	add    ebx,ebp
  431daf:	hlt    
  431db0:	inc    ecx
  431db1:	std    
  431db2:	or     BYTE PTR [esi],al
  431db4:	in     eax,dx
  431db5:	test   edx,ebx
  431db7:	pop    edi
  431db8:	add    DWORD PTR [ebx+0x2],eax
  431dbb:	(bad)  
  431dbc:	mov    ?,WORD PTR [edx]
  431dbe:	cmp    eax,0xd823f86e
  431dc3:	into   
  431dc4:	pop    es
  431dc5:	mov    WORD PTR [ebp+0x55e63b28],sp
  431dcc:	and    DWORD PTR ds:0x82ee2614,ebp
  431dd2:	or     al,0x2c
  431dd4:	push   es
  431dd5:	lds    ebp,FWORD PTR [eax+0x102fc479]
  431ddb:	inc    ebp
  431ddc:	sub    al,0xbe
  431dde:	jnp    0x431dea
  431de0:	mov    cl,0x95
  431de2:	lds    ebx,FWORD PTR [esp+eax*8+0x4b36c64f]
  431de9:	push   edx
  431dea:	inc    ecx
  431deb:	ins    BYTE PTR es:[edi],dx
  431dec:	arpl   WORD PTR [esi+0x0],bx
  431def:	std    
  431df0:	xor    DWORD PTR [edx+edi*1],eax
  431df3:	mov    ds:0xc18c1c5e,al
  431df8:	outs   dx,DWORD PTR ds:[esi]
  431df9:	mov    BYTE PTR [esi-0x10],al
  431dfc:	cwde   
  431dfd:	mov    al,0xfc
  431dff:	and    eax,ebx
  431e01:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  431e02:	outs   dx,DWORD PTR ds:[esi]
  431e03:	sub    ebx,DWORD PTR [ebx+edi*8-0x63]
  431e07:	pop    edx
  431e08:	pusha  
  431e09:	retf   0x32dc
  431e0c:	shr    BYTE PTR [esi],1
  431e0e:	jmp    0x220a:0x252bb6b7
  431e15:	test   eax,0xbce6b09a
  431e1a:	sub    al,bh
  431e1c:	jmp    0x8dc7bf8a
  431e21:	int3   
  431e22:	jg     0x431e9e
  431e24:	xor    BYTE PTR [bp+0x32f9],al
  431e29:	mov    ds:0x6cfe88a7,al
  431e2e:	inc    edx
  431e2f:	jae    0x431e1a
  431e31:	adc    eax,ecx
  431e33:	dec    esi
  431e34:	and    ebx,ebx
  431e36:	lea    ecx,[ecx]
  431e38:	stc    
  431e39:	into   
  431e3a:	in     eax,dx
  431e3b:	sbb    eax,0x7e48d716
  431e40:	push   edi
  431e41:	aaa    
  431e42:	pop    esi
  431e43:	pop    ebx
  431e44:	test   eax,0x8ef5e9bd
  431e49:	sub    dh,dl
  431e4b:	pop    esi
  431e4c:	xchg   BYTE PTR [edx-0x521d7db7],dl
  431e52:	mov    dh,0xff
  431e54:	mul    DWORD PTR [esi+0xe]
  431e57:	cmp    eax,0xc1482362
  431e5c:	xor    BYTE PTR [edi+0x640ffd2],dl
  431e62:	xor    al,0x74
  431e64:	xchg   ebx,eax
  431e65:	mov    ah,0x34
  431e67:	fld    QWORD PTR [edi-0x3c]
  431e6a:	mov    ebx,DWORD PTR ds:0x82c45ee
  431e70:	xor    BYTE PTR [esp+esi*1+0x198acbc],bh
  431e77:	xchg   ebp,eax
  431e78:	sbb    dh,al
  431e7a:	push   cs
  431e7b:	jle    0x431e0c
  431e7d:	not    edi
  431e7f:	lds    eax,FWORD PTR [ecx]
  431e81:	add    BYTE PTR [ecx],dl
  431e83:	add    DWORD PTR [eax],eax
  431e85:	add    BYTE PTR [esi],ah
  431e87:	scas   al,BYTE PTR es:[edi]
  431e88:	push   0x1bfe4525
  431e8d:	pop    es
  431e8e:	out    0xec,eax
  431e90:	inc    edi
  431e91:	sbb    edi,edx
  431e93:	icebp  
  431e94:	pop    ss
  431e95:	out    dx,eax
  431e96:	and    BYTE PTR [ecx-0x4db33a15],ah
  431e9c:	cmp    dh,ch
  431e9e:	out    0x14,eax
  431ea0:	daa    
  431ea1:	ror    DWORD PTR [ebp+0x1],0x6
  431ea5:	fld    DWORD PTR [esi-0x5b713e7a]
  431eab:	bound  edi,QWORD PTR [ebx]
  431ead:	int3   
  431eae:	outs   dx,DWORD PTR ds:[esi]
  431eaf:	mov    cl,0xf2
  431eb1:	lahf   
  431eb2:	sahf   
  431eb3:	(bad)  
  431eb5:	stc    
  431eb6:	push   eax
  431eb7:	pop    esp
  431eb8:	mov    eax,0x7299d45
  431ebd:	std    
  431ebe:	jg     0x431f25
  431ec0:	outs   dx,DWORD PTR ds:[esi]
  431ec1:	jmp    eax
  431ec3:	add    dl,BYTE PTR [esi]
  431ec5:	vmaxps xmm4,xmm5,XMMWORD PTR fs:[esi]
  431eca:	lea    ebp,[edx-0x54]
  431ecd:	adc    eax,ecx
  431ecf:	(bad)  
  431ed0:	jp     0x431e59
  431ed2:	dec    ebx
  431ed3:	into   
  431ed4:	jns    0x431e59
  431ed6:	and    BYTE PTR [ecx+esi*1],bh
  431ed9:	lods   al,BYTE PTR ds:[esi]
  431eda:	lds    ebp,FWORD PTR [ecx-0xb2e579f]
  431ee0:	pop    ss
  431ee1:	sub    ah,cl
  431ee3:	test   al,0xfa
  431ee5:	in     eax,0x40
  431ee7:	(bad)  
  431ee9:	push   esp
  431eea:	push   es
  431eeb:	mov    dh,0x72
  431eed:	sbb    al,0x6a
  431eef:	push   eax
  431ef0:	sbb    DWORD PTR [ecx],edx
  431ef2:	sti    
  431ef3:	lock or al,0x92
  431ef6:	xor    DWORD PTR [edi-0x11],ebp
  431ef9:	adc    eax,edi
  431efb:	add    BYTE PTR [eax+ebx*1+0x3b],0xcb
  431f00:	pop    edi
  431f01:	popa   
  431f02:	jmp    0xc412f463
  431f07:	ss dec ecx
  431f09:	jne    0x431ebb
  431f0b:	xor    DWORD PTR [edx+0x689b54c7],edi
  431f11:	out    0x57,eax
  431f13:	in     al,dx
  431f14:	and    eax,0x889aaeb1
  431f19:	stc    
  431f1a:	mov    DWORD PTR ds:[edi-0x68],ecx
  431f1e:	test   al,0x2b
  431f20:	(bad)  
  431f21:	fisubr WORD PTR [esi+0x3dea0621]
  431f27:	dec    esp
  431f28:	xor    DWORD PTR [esi-0x65],esp
  431f2b:	ja     0x431ecc
  431f2d:	adc    ch,ah
  431f2f:	enter  0x4355,0x68
  431f33:	fdivr  DWORD PTR [esi+esi*2]
  431f36:	dec    edx
  431f37:	call   0xb63da770
  431f3c:	sahf   
  431f3d:	daa    
  431f3e:	dec    ecx
  431f3f:	mov    al,0xb
  431f41:	lea    ebx,[esi]
  431f43:	aam    0x37
  431f45:	mov    ah,0x0
  431f47:	mov    al,al
  431f49:	adc    BYTE PTR [edx],dl
  431f4b:	jle    0x431fb2
  431f4d:	je     0x431f52
  431f4f:	jl     0x431f09
  431f51:	(bad)  
  431f52:	mov    cl,bl
  431f54:	mov    ebp,0xfdc83513
  431f59:	jl     0x431f42
  431f5b:	aad    0x38
  431f5d:	mov    DWORD PTR [ebx],edx
  431f5f:	(bad)  
  431f60:	loop   0x431fb9
  431f62:	mov    al,0x9a
  431f64:	xlat   BYTE PTR ds:[ebx]
  431f65:	outs   dx,DWORD PTR ds:[esi]
  431f66:	mov    eax,0xa31af7d5
  431f6b:	es jecxz 0x431f04
  431f6e:	mov    dh,0x46
  431f70:	cmp    esi,DWORD PTR [esi]
  431f72:	fild   QWORD PTR [ecx]
  431f74:	loope  0x431fe2
  431f76:	test   eax,0x47cb0c92
  431f7b:	scas   eax,DWORD PTR es:[edi]
  431f7c:	xor    ch,BYTE PTR [ebx]
  431f7e:	push   edx
  431f7f:	daa    
  431f80:	and    bl,BYTE PTR [ebx]
  431f82:	push   cs
  431f83:	ficom  DWORD PTR ds:0xef80de4e
  431f89:	push   ebp
  431f8a:	mov    ds:0xa576cc69,al
  431f8f:	inc    ebp
  431f90:	cmp    DWORD PTR [edx],0x71
  431f93:	loopne 0x431f7d
  431f95:	ror    DWORD PTR [ebx-0x444743a7],0xfd
  431f9c:	mov    edi,0xc4f8fe5b
  431fa1:	sar    BYTE PTR [eax+eax*2],1
  431fa4:	sub    al,0x2
  431fa6:	mov    eax,ds:0x1c3b5
  431fab:	adc    DWORD PTR [ecx],eax
  431fad:	add    BYTE PTR [eax],al
  431faf:	cli    
  431fb0:	arpl   WORD PTR [eax],ax
  431fb2:	ds inc ecx
  431fb4:	mov    edi,0x2d918546
  431fb9:	dec    eax
  431fba:	int3   
  431fbb:	ret    0x9b24
  431fbe:	or     BYTE PTR [ecx],dh
  431fc0:	and    esi,esp
  431fc2:	or     DWORD PTR [esi+0x71d2981c],esi
  431fc8:	mov    esi,0xf5c99ab1
  431fcd:	popa   
  431fce:	nop
  431fcf:	pushf  
  431fd0:	retf   
  431fd1:	das    
  431fd2:	test   eax,0x3985a001
  431fd7:	pop    edi
  431fd8:	inc    esp
  431fd9:	dec    eax
  431fda:	in     eax,0xf1
  431fdc:	aam    0x85
  431fde:	ss sbb al,0xad
  431fe1:	mov    ds,WORD PTR [ebx-0x7c]
  431fe4:	arpl   WORD PTR [edi],dx
  431fe6:	(bad)  
  431fe7:	and    ebx,esp
  431fe9:	sbb    al,0x47
  431feb:	add    al,al
  431fed:	mov    BYTE PTR [edx],dl
  431fef:	or     DWORD PTR [ecx+ebp*4+0x1ea089],ebx
  431ff6:	mov    WORD PTR [ebp-0x7cd02def],?
  431ffc:	cmp    eax,0x1d3671ac
  432001:	shl    esi,0x4a
  432004:	retf   0x9b37
  432007:	sub    al,0x33
  432009:	fs inc edi
  43200b:	mov    ebx,ebp
  43200d:	fiadd  DWORD PTR ds:0x28608bc9
  432013:	mov    bl,0x24
  432015:	mov    esi,0x5731bf15
  43201a:	cmp    DWORD PTR [esi-0x1c],esi
  43201d:	lahf   
  43201e:	rcl    BYTE PTR [ebx],1
  432020:	or     DWORD PTR [ecx-0x69754dae],eax
  432026:	push   ss
  432027:	out    dx,al
  432028:	mov    cl,0x41
  43202a:	pop    edi
  43202b:	pop    es
  43202c:	in     al,0x22
  43202e:	out    dx,eax
  43202f:	sbb    al,BYTE PTR [edx]
  432031:	jmp    0x432096
  432033:	push   ds
  432034:	cmp    al,ah
  432036:	sub    eax,edi
  432038:	xlat   BYTE PTR ds:[ebx]
  432039:	es xchg dh,ch
  43203c:	jge    0x431fe8
  43203e:	in     al,dx
  43203f:	jns    0x431fd9
  432041:	mov    eax,0x4148117e
  432046:	sub    eax,0x7235fe69
  43204b:	dec    ecx
  43204c:	push   cs
  43204d:	lds    ebx,FWORD PTR [ecx+0x350124bb]
  432053:	adc    eax,0x41ab8873
  432058:	xor    BYTE PTR ds:0xb270c52d,0x70
  43205f:	xor    ah,BYTE PTR [ebx]
  432061:	sbb    edx,ecx
  432063:	std    
  432064:	(bad)  
  432066:	and    ecx,DWORD PTR [esi]
  432068:	sub    esp,DWORD PTR [eax+0x35]
  43206b:	dec    edi
  43206c:	(bad)  
  43206d:	fcomip st,st(0)
  43206f:	mov    ds:0xf6479dcb,eax
  432074:	jmp    0x5fab:0xabe35869
  43207b:	and    ebp,DWORD PTR [ebx+edx*2+0x6d2a165c]
  432082:	loope  0x4320fe
  432084:	xor    ebp,DWORD PTR [bp-0x6]
  432088:	jns    0x432031
  43208a:	ja     0x432024
  43208c:	jnp    0x43204d
  43208e:	mov    edi,DWORD PTR [eax+0x2246726b]
  432094:	add    BYTE PTR [eax+0x2f],bl
  432097:	ja     0x4320de
  432099:	test   bh,0x2e
  43209c:	pop    ecx
  43209d:	and    al,0x86
  43209f:	mov    dh,0x1
  4320a1:	shl    DWORD PTR [ebx+0x65fcea2f],1
  4320a7:	push   eax
  4320a8:	gs mov bh,0x5
  4320ab:	sub    bl,dh
  4320ad:	aad    0x9d
  4320af:	sbb    BYTE PTR [ecx+edi*2+0x25],ah
  4320b3:	retf   
  4320b4:	jns    0x43205e
  4320b6:	xor    DWORD PTR [eax],eax
  4320b8:	cmp    DWORD PTR [esi+0x7b459d07],0x6d
  4320bf:	and    al,0xf1
  4320c1:	or     BYTE PTR [edi+0x6f],0x7f
  4320c5:	out    dx,eax
  4320c6:	icebp  
  4320c7:	sahf   
  4320c8:	pop    ebp
  4320c9:	push   esi
  4320ca:	sbb    BYTE PTR [edi-0x748f687c],dh
  4320d0:	mov    dl,0xf3
  4320d2:	add    DWORD PTR [eax],eax
  4320d4:	adc    DWORD PTR [ecx],eax
  4320d6:	add    BYTE PTR [eax],al
  4320d8:	jbe    0x4320c6
  4320da:	inc    ebx
  4320db:	xchg   edi,eax
  4320dc:	cld    
  4320dd:	loope  0x43208d
  4320df:	mov    eax,0x97ab4eac
  4320e4:	bound  esp,QWORD PTR [eax+0x40]
  4320e7:	mov    cl,0x1a
  4320e9:	mov    cl,0x62
  4320eb:	in     eax,0x45
  4320ed:	aad    0xad
  4320ef:	dec    ecx
  4320f0:	pop    ecx
  4320f1:	sub    ah,BYTE PTR [eax]
  4320f3:	retf   
  4320f4:	pop    ebp
  4320f5:	daa    
  4320f6:	add    BYTE PTR ds:0x614e8307,cl
  4320fc:	push   esp
  4320fd:	rol    BYTE PTR [edx-0x5a],cl
  432100:	and    bh,BYTE PTR [ecx+0x22c07b17]
  432106:	pop    ebx
  432107:	sahf   
  432108:	or     eax,0x9badfbf6
  43210d:	xchg   esi,eax
  43210e:	add    cl,bh
  432110:	inc    ebp
  432111:	push   ecx
  432112:	sub    al,0x2f
  432114:	mov    eax,eax
  432116:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  432117:	jb     0x4320b2
  432119:	xchg   ebp,eax
  43211a:	aaa    
  43211b:	xor    al,BYTE PTR ds:0x1c5da2d4
  432121:	adc    esi,DWORD PTR [ebp-0x5d4fe102]
  432127:	mov    ds,WORD PTR [ebx-0x20]
  43212a:	ja     0x43215b
  43212c:	aaa    
  43212d:	and    ebp,DWORD PTR [ecx-0x2ca7292a]
  432133:	dec    esp
  432134:	test   bh,dl
  432136:	inc    eax
  432137:	lahf   
  432138:	fwait
  432139:	pop    esp
  43213a:	and    al,BYTE PTR [esi+ebx*2+0x1a53bbf]
  432141:	mov    bl,0x92
  432143:	jae    0x4321ae
  432145:	fisub  WORD PTR [eax-0x7b9533cb]
  43214b:	and    ebp,ebx
  43214d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  43214e:	bsr    esp,DWORD PTR [eax]
  432151:	jo     0x432113
  432153:	adc    eax,0x5107a615
  432158:	loop   0x4320e1
  43215a:	pop    ebp
  43215b:	call   0xe7152cc9
  432160:	push   es
  432161:	dec    ebx
  432162:	jnp    0x43218d
  432164:	fs (bad) 
  432166:	ins    BYTE PTR es:[edi],dx
  432167:	call   0xeeaaff0c
  43216c:	and    eax,0x831b2b6f
  432171:	fnstenv [edx]
  432173:	mov    esi,0x25195ff7
  432178:	adc    ebp,esp
  43217a:	fidiv  DWORD PTR [ecx-0x162b618c]
  432180:	jp     0x4321db
  432182:	mov    ds:0x5767cb47,al
  432187:	xor    BYTE PTR [edx-0x1953b83c],cl
  43218d:	push   ss
  43218e:	mov    ebx,0x15a3fe4
  432193:	jne    0x432119
  432195:	clc    
  432196:	std    
  432197:	mov    dl,0x49
  432199:	pop    ebp
  43219a:	xchg   BYTE PTR [edi-0x607b811c],ah
  4321a0:	cmc    
  4321a1:	inc    esp
  4321a2:	fs ja  0x43221c
  4321a5:	sub    eax,0x5552b9ee
  4321aa:	(bad)  
  4321ab:	fistp  QWORD PTR [edi-0x47]
  4321ae:	push   ebp
  4321af:	dec    esi
  4321b0:	call   0xfc160f23
  4321b5:	xor    DWORD PTR [esi+ebx*1-0x6c6f992a],eax
  4321bc:	xchg   esi,eax
  4321bd:	sbb    DWORD PTR [ecx+esi*2-0x7fc2c3ab],ebx
  4321c4:	cmc    
  4321c5:	mov    cl,0x79
  4321c7:	xchg   esp,eax
  4321c8:	and    BYTE PTR [edi-0x57],ch
  4321cb:	inc    edx
  4321cc:	ins    BYTE PTR es:[edi],dx
  4321cd:	outs   dx,DWORD PTR ds:[esi]
  4321ce:	xchg   ebx,esp
  4321d0:	out    dx,al
  4321d1:	(bad)  
  4321d2:	test   eax,0x43be740c
  4321d7:	sub    esp,DWORD PTR [ebp+0x5f3503ee]
  4321dd:	in     eax,0xeb
  4321df:	stc    
  4321e0:	mov    ecx,0xa89f0105
  4321e5:	je     0x4321f0
  4321e7:	add    eax,0xf7273482
  4321ec:	loop   0x4321e5
  4321ee:	repnz xor eax,0xc2bff9f7
  4321f4:	xor    dl,BYTE PTR ds:0x6e216174
  4321fa:	out    dx,eax
  4321fb:	add    DWORD PTR [eax],eax
  4321fd:	adc    DWORD PTR [ecx],eax
  4321ff:	add    BYTE PTR [eax],al
  432201:	mov    ebp,0x4d2fc0b6
  432206:	push   edx
  432207:	out    dx,eax
  432208:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  432209:	sbb    eax,0x3b98c4cc
  43220e:	sbb    bh,BYTE PTR [edx+0x16]
  432211:	lock xchg esi,eax
  432213:	pop    edi
  432214:	aas    
  432215:	sub    ebp,DWORD PTR [edx+0x1c59f78e]
  43221b:	ins    DWORD PTR es:[edi],dx
  43221c:	out    dx,al
  43221d:	in     al,dx
  43221e:	icebp  
  43221f:	inc    ebp
  432220:	icebp  
  432221:	in     al,dx
  432222:	dec    esp
  432223:	lods   al,BYTE PTR ds:[esi]
  432224:	cmp    ebx,DWORD PTR [esi+0x0]
  432227:	rcl    BYTE PTR [edx+0x337bfc0],0x4b
  43222e:	daa    
  43222f:	cwde   
  432230:	sub    BYTE PTR [edx-0x62fc542a],dh
  432236:	out    0xa4,al
  432238:	xchg   edi,eax
  432239:	repnz repnz mov bh,BYTE PTR [esi]
  43223d:	pop    esp
  43223e:	push   ds
  43223f:	mov    edx,0xb3292722
  432244:	or     ecx,DWORD PTR [ecx]
  432246:	loop   0x43223b
  432248:	jno    0x43226a
  43224a:	in     al,dx
  43224b:	and    eax,0x1aea8323
  432250:	jno    0x43229c
  432252:	cmp    BYTE PTR [edx+0x2c],dl
  432255:	stos   DWORD PTR es:[edi],eax
  432256:	mov    es:0x88426878,al
  43225c:	mov    dh,0x4c
  43225e:	lahf   
  43225f:	imul   ebx,ebx,0xffffffee
  432262:	lods   eax,DWORD PTR ds:[esi]
  432263:	inc    eax
  432264:	dec    ebp
  432265:	jl     0x432211
  432267:	adc    eax,0x8fe0f3be
  43226c:	gs ret 
  43226e:	and    edi,esi
  432270:	sub    eax,0xdf735258
  432275:	push   0x60
  432277:	dec    eax
  432278:	pop    ecx
  432279:	mov    ecx,?
  43227b:	sbb    al,0xa6
  43227d:	repnz xchg ch,ah
  432280:	add    BYTE PTR [edx-0x29],0xff
  432284:	lea    esp,[ebx]
  432286:	xor    ebx,DWORD PTR [ecx+0x5967068]
  43228c:	sbb    bh,dl
  43228e:	xor    al,BYTE PTR [edi+0x66cfa474]
  432294:	out    dx,eax
  432295:	or     dh,bl
  432297:	dec    ebp
  432298:	mov    esp,0xc5f24cd2
  43229d:	int3   
  43229e:	dec    edi
  43229f:	xchg   ebx,eax
  4322a0:	pop    eax
  4322a1:	push   0xd81b454b
  4322a6:	clc    
  4322a7:	pop    ebx
  4322a9:	dec    ebp
  4322aa:	cmp    DWORD PTR [esi+ebp*1],ecx
  4322ad:	popf   
  4322ae:	dec    ebp
  4322af:	mov    ebx,0x7d5b822c
  4322b4:	(bad)  
  4322b5:	adc    cl,BYTE PTR [esi]
  4322b7:	xchg   esp,eax
  4322b8:	js     0x4322bf
  4322ba:	je     0x43230d
  4322bc:	xor    BYTE PTR [ebp-0x56e64fdb],dl
  4322c2:	repz mov ds:0x25eacfd5,al
  4322c8:	rcr    BYTE PTR [esi+0x36ebf78f],0x59
  4322cf:	xor    al,0xf4
  4322d1:	add    bh,ah
  4322d3:	(bad)  
  4322d4:	adc    edi,esp
  4322d6:	pop    edi
  4322d7:	xchg   ecx,eax
  4322d8:	cwde   
  4322d9:	mov    ebx,0x18db8f59
  4322de:	prefetch BYTE PTR [ebx]
  4322e1:	xchg   esp,eax
  4322e2:	clc    
  4322e3:	push   ebp
  4322e4:	cmp    al,0x6d
  4322e6:	arpl   WORD PTR ds:0xf4ac35e0,dx
  4322ec:	faddp  st(4),st
  4322ee:	jnp    0x43227d
  4322f0:	add    eax,0xca7aa082
  4322f5:	mov    BYTE PTR [ebp-0x30acb4a2],bl
  4322fb:	xlat   BYTE PTR ds:[ebx]
  4322fc:	lea    esp,[ebx-0x4fd8d2f9]
  432302:	pop    eax
  432303:	ins    BYTE PTR es:[edi],dx
  432304:	cmp    bh,BYTE PTR [ebx+0x325f68ee]
  43230a:	std    
  43230b:	addr16 mov ah,0x29
  43230e:	popa   
  43230f:	xor    BYTE PTR [edx-0x689cc6c9],bh
  432315:	(bad)  
  432316:	fcomip st,st(6)
  432318:	std    
  432319:	jnp    0x43230a
  43231b:	jmp    0x4322b0
  43231d:	sub    ah,dh
  43231f:	fld    st(2)
  432321:	xor    eax,0x1f5d4
  432326:	adc    DWORD PTR [ecx],eax
  432328:	add    BYTE PTR [eax],al
  43232a:	adc    ebx,DWORD PTR ds:0xb789fcce
  432330:	ret    
  432331:	sub    ah,BYTE PTR [esi+0x275e682f]
  432337:	sbb    eax,0x590ce2f9
  43233c:	rcl    edi,1
  43233e:	repnz imul edx,DWORD PTR [esi+ebp*4],0x83d5202b
  432346:	push   eax
  432347:	jne    0x432309
  432349:	sahf   
  43234a:	out    dx,eax
  43234b:	lods   eax,DWORD PTR ds:[esi]
  43234c:	inc    ecx
  43234d:	sub    al,0x2b
  43234f:	leave  
  432350:	mov    bh,0x5a
  432352:	sub    edx,edi
  432354:	add    BYTE PTR [ebx+0x27],0xed
  432358:	jp     0x43233e
  43235a:	mov    ds:0x9dcea104,eax
  43235f:	cld    
  432360:	xchg   edi,eax
  432361:	dec    esp
  432362:	mov    edi,0xd6d728ad
  432367:	push   esi
  432368:	jno    0x4323d2
  43236a:	dec    edx
  43236b:	cmp    DWORD PTR [esp+esi*4-0x60],eax
  43236f:	pop    ecx
  432370:	pop    edi
  432371:	mov    ebx,0x877961ea
  432376:	jb     0x43238b
  432378:	add    al,0xdc
  43237a:	add    DWORD PTR [eax],esi
  43237c:	mov    ebp,DWORD PTR [eax]
  43237e:	icebp  
  43237f:	test   al,0x25
  432381:	push   eax
  432382:	loop   0x43239a
  432384:	jb     0x4323eb
  432386:	sub    BYTE PTR [ebx],ah
  432388:	adc    edx,DWORD PTR ds:[edi]
  43238b:	jecxz  0x432378
  43238d:	jnp    0x432371
  43238f:	mov    ?,edi
  432391:	dec    ecx
  432392:	cmp    eax,0x681ed69
  432397:	outs   dx,DWORD PTR ds:[esi]
  432398:	(bad)  
  432399:	xor    edx,ebp
  43239b:	shr    BYTE PTR [edx],0xec
  43239e:	fldenv [edi+0x68]
  4323a1:	sub    al,0x18
  4323a3:	adc    ebp,0xc53f6007
  4323a9:	push   ebx
  4323aa:	inc    esi
  4323ab:	jmp    0x432358
  4323ad:	cld    
  4323ae:	data16 cmp BYTE PTR [ecx+0x11d31eeb],bl
  4323b5:	ins    BYTE PTR es:[edi],dx
  4323b6:	sbb    edi,esi
  4323b8:	enter  0x22bf,0x86
  4323bc:	cwde   
  4323bd:	adc    DWORD PTR [esi],esi
  4323bf:	pop    edi
  4323c0:	out    dx,eax
  4323c1:	jne    0x432404
  4323c3:	scas   eax,DWORD PTR es:[edi]
  4323c4:	xor    al,0x2b
  4323c6:	jae    0x432391
  4323c8:	adc    eax,0x61ff0ae3
  4323cd:	mov    bh,0x8
  4323cf:	add    eax,0xef3d5457
  4323d4:	pop    eax
  4323d5:	mov    eax,0x73c28435
  4323da:	lods   eax,DWORD PTR ds:[esi]
  4323db:	sbb    eax,0xb2af919d
  4323e0:	dec    edi
  4323e1:	add    dl,BYTE PTR ds:[edx-0x5d723b76]
  4323e8:	or     ch,BYTE PTR ds:0xba21e6a3
  4323ee:	jmp    0x1a72c95c
  4323f3:	mov    edx,0x31d82213
  4323f8:	popa   
  4323f9:	imul   esi,DWORD PTR [ebp-0x6a205ff0],0xffffffbd
  432400:	xchg   BYTE PTR [ecx+0x51],bh
  432403:	add    BYTE PTR [ebx],ch
  432405:	int    0xb1
  432407:	mov    al,ds:0xda6a9db7
  43240c:	jae    0x4323b2
  43240e:	cmp    eax,0x9b473ac8
  432413:	sbb    ebp,ebx
  432415:	daa    
  432416:	pop    esi
  432417:	mov    ebp,0x3c094b33
  43241c:	inc    edx
  43241d:	mov    ds:0x61f8f45c,al
  432422:	idiv   dh
  432424:	xlat   BYTE PTR ds:[ebx]
  432425:	or     al,0x2b
  432427:	jae    0x4324a4
  432429:	aas    
  43242a:	cli    
  43242b:	daa    
  43242c:	xchg   edx,eax
  43242d:	dec    esp
  43242e:	push   edi
  43242f:	retf   
  432430:	mov    ch,0x5b
  432432:	in     eax,0xd3
  432434:	xchg   edx,eax
  432435:	pop    edx
  432436:	jg     0x432489
  432438:	push   0xffffff84
  43243a:	popf   
  43243b:	cmp    eax,DWORD PTR [edi-0x2c02eebb]
  432441:	jg     0x4323f2
  432443:	test   eax,0xad276b6b
  432448:	pop    es
  432449:	hlt    
  43244a:	(bad)  
  43244b:	ret    
  43244c:	hlt    
  43244d:	add    DWORD PTR [eax],eax
  43244f:	adc    DWORD PTR [ecx],eax
  432451:	add    BYTE PTR [eax],al
  432453:	or     dl,BYTE PTR [ebp-0x4f15ebb4]
  432459:	or     eax,0xeeb588a4
  43245e:	xchg   ebx,eax
  43245f:	add    eax,0x46cfe3d1
  432464:	call   0x9fba:0x9a63ea41
  43246b:	fistp  QWORD PTR [edx+0x3a]
  43246e:	sub    ch,BYTE PTR [edx]
  432470:	xor    esp,DWORD PTR [ecx-0x5d]
  432473:	cdq    
  432474:	(bad)  [esi+0x61]
  432477:	sbb    DWORD PTR [eax+0x3c],0xffffffd7
  43247b:	push   esi
  43247c:	or     cl,BYTE PTR [edx]
  43247e:	dec    esp
  43247f:	push   es
  432480:	fild   WORD PTR [edi+0x4d]
  432483:	loopne 0x432492
  432485:	sub    bl,BYTE PTR [eax]
  432487:	mov    ah,al
  432489:	dec    eax
  43248a:	and    eax,0xb1ff7443
  43248f:	adc    BYTE PTR [ebx],dh
  432491:	pop    edi
  432492:	fist   DWORD PTR [edx+ebx*4+0x3913006c]
  432499:	mov    ?,WORD PTR [ebp-0x1a8260d6]
  43249f:	imul   eax,DWORD PTR [ecx+ebx*8+0x13],0xf50ac538
  4324a7:	and    eax,0x82326919
  4324ac:	xor    eax,0x6fc88f2b
  4324b1:	ins    BYTE PTR es:[edi],dx
  4324b2:	loop   0x4324b0
  4324b4:	sub    ecx,ebx
  4324b6:	mov    ebp,0xe6b0cb9
  4324bb:	outs   dx,DWORD PTR ds:[esi]
  4324bc:	inc    edx
  4324bd:	sbb    ecx,DWORD PTR es:[eax]
  4324c0:	sbb    DWORD PTR [edx-0x3681c0e4],eax
  4324c6:	nop
  4324c7:	push   cs
  4324c8:	inc    ebx
  4324c9:	aaa    
  4324ca:	in     eax,0x67
  4324cc:	cmp    al,0xaf
  4324ce:	test   al,0x7e
  4324d0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4324d1:	inc    edi
  4324d2:	xor    al,0x38
  4324d4:	xor    DWORD PTR [esp+edi*4+0x77],ebx
  4324d8:	pushf  
  4324d9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4324da:	shl    BYTE PTR [ebx+0x2afadd84],1
  4324e0:	pop    ebp
  4324e1:	and    al,0xc3
  4324e3:	cwde   
  4324e4:	popf   
  4324e5:	mov    ds:0xe5037210,eax
  4324ea:	jge    0x43251c
  4324ec:	adc    esi,DWORD PTR [edx+eax*2]
  4324ef:	adc    esi,DWORD PTR [ebx-0x249c43b]
  4324f5:	jo     0x4324cf
  4324f7:	push   DWORD PTR [edi]
  4324f9:	pop    ebx
  4324fa:	js     0x43251b
  4324fc:	sub    eax,0xe3ce0a68
  432501:	cld    
  432502:	or     bh,bl
  432504:	or     eax,0xb7634b1c
  432509:	hlt    
  43250a:	hlt    
  43250b:	pop    ebp
  43250c:	jge    0x4324c0
  43250e:	psubw  mm0,QWORD PTR [edx+0x295dcd87]
  432515:	movs   BYTE PTR es:[edi],BYTE PTR fs:[esi]
  432517:	mov    bl,0xd8
  432519:	sbb    cl,BYTE PTR [edx+0x179dfe07]
  43251f:	(bad)  
  432521:	mov    esp,fs
  432523:	cli    
  432524:	mov    eax,ds:0x4971309a
  432529:	les    esi,FWORD PTR es:[eax+0x54892c6b]
  432530:	mov    al,0x7f
  432532:	ds js  0x432528
  432535:	pop    ebx
  432536:	pusha  
  432537:	dec    esi
  432538:	pop    edi
  432539:	pop    es
  43253a:	mov    esp,DWORD PTR [edi-0xf299437]
  432540:	out    dx,eax
  432541:	pusha  
  432542:	push   ebp
  432543:	data16 cld 
  432545:	push   0x6af3a1c0
  43254a:	jecxz  0x432543
  43254c:	jno    0x432540
  43254e:	shl    DWORD PTR [ebx+0x63],cl
  432551:	and    eax,0x4910bebd
  432556:	fcmovu st,st(1)
  432558:	clc    
  432559:	mov    edi,0x71abb5e7
  43255e:	mov    ds:0x1a7a6c59,eax
  432563:	or     DWORD PTR [ebp+0x2fd20f97],esi
  432569:	(bad)  
  43256b:	test   DWORD PTR [edi],0x53bc51d8
  432571:	fsubrp st(6),st
  432573:	pop    ss
  432574:	aas    
  432575:	lods   al,BYTE PTR ds:[esi]
  432576:	add    DWORD PTR [eax],eax
  432578:	adc    DWORD PTR [ecx],eax
  43257a:	add    BYTE PTR [eax],al
  43257c:	or     cl,cl
  43257e:	call   0xca07:0x36633e6
  432585:	nop
  432586:	jae    0x4325ac
  432588:	mov    ecx,0xdb158d60
  43258d:	test   al,0xbc
  43258f:	arpl   WORD PTR [edi-0x5],bp
  432592:	sub    DWORD PTR [edx+ebp*4+0x24b81e7e],eax
  432599:	inc    eax
  43259a:	inc    edi
  43259b:	jmp    0x4325ce
  43259d:	lods   al,BYTE PTR ds:[esi]
  43259e:	mov    ch,BYTE PTR [eax+0x4c]
  4325a1:	mov    edx,0x26ce73a5
  4325a6:	mov    dh,BYTE PTR [edx+edx*4+0x50]
  4325aa:	shr    BYTE PTR [esi],cl
  4325ac:	cli    
  4325ad:	in     eax,dx
  4325ae:	pop    ds
  4325af:	data16 sti 
  4325b1:	and    bh,bh
  4325b3:	(bad)  
  4325b4:	retf   0xa1b6
  4325b7:	test   DWORD PTR [edx],esp
  4325b9:	cmp    esp,edx
  4325bb:	xchg   edi,eax
  4325bc:	fwait
  4325bd:	(bad)  
  4325be:	pushf  
  4325bf:	mov    al,cl
  4325c1:	adc    esi,DWORD PTR [edx+0x3b503954]
  4325c7:	xchg   ecx,eax
  4325c8:	shr    DWORD PTR [ecx],1
  4325ca:	pop    eax
  4325cb:	and    eax,0x8c362300
  4325d0:	push   0xd81c9385
  4325d5:	shr    BYTE PTR [edx+eiz*8],cl
  4325d8:	addr16 push 0x725151c3
  4325de:	in     eax,dx
  4325df:	data16 mov cl,BYTE PTR [eax-0x44]
  4325e3:	shl    BYTE PTR [edx-0x6],1
  4325e6:	push   edi
  4325e7:	xchg   ch,dl
  4325e9:	adc    DWORD PTR ds:0xe4acba61,ebx
  4325ef:	mov    DWORD PTR [edi],esp
  4325f1:	inc    ebp
  4325f2:	imul   esi,DWORD PTR [ebx-0x2c9a16e1],0x396500e3
  4325fc:	adc    eax,0xbe1bbd63
  432601:	cld    
  432602:	jecxz  0x43264e
  432604:	(bad)  
  432605:	xor    edi,DWORD PTR [ecx-0xfd63e46]
  43260b:	cmc    
  43260c:	dec    edi
  43260d:	and    ebx,esp
  43260f:	sub    al,0xf1
  432611:	or     edi,DWORD PTR [eax+0x5c496195]
  432617:	mov    al,0x61
  432619:	rol    edi,1
  43261b:	loopne 0x4325a5
  43261d:	lods   al,BYTE PTR ds:[esi]
  43261e:	xchg   ecx,eax
  43261f:	(bad)  
  432620:	out    0x32,al
  432622:	and    ch,BYTE PTR cs:0x2314884a
  432629:	sbb    DWORD PTR [ebp+0x17],0x4cf27840
  432630:	adc    edi,DWORD PTR [edx-0x38]
  432633:	stc    
  432634:	xor    ebx,ecx
  432636:	fdiv   st,st(3)
  432638:	aad    0x34
  43263a:	retf   
  43263b:	cs inc edi
  43263d:	add    al,al
  43263f:	in     al,0xf6
  432641:	ja     0x4326ac
  432643:	loope  0x4325ca
  432645:	cmp    ah,bh
  432647:	ret    
  432648:	bound  edx,QWORD PTR [ebp*4-0x1b8fc056]
  43264f:	cdq    
  432650:	mov    ch,0x64
  432652:	sbb    ah,ch
  432654:	into   
  432655:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  432656:	fcom   st(4)
  432659:	push   ebp
  43265a:	out    dx,eax
  43265b:	dec    eax
  43265c:	scas   al,BYTE PTR es:[edi]
  43265d:	jb     0x432627
  43265f:	std    
  432660:	ds (bad) 
  432662:	dec    eax
  432663:	pop    edx
  432664:	es cs mov dh,0xe
  432668:	imul   ecx,DWORD PTR ss:[edx-0x2dee1736],0x38
  432670:	mov    esp,0x45c37d9c
  432675:	aaa    
  432676:	mov    ecx,0xc3db40e9
  43267b:	lock rcr bh,1
  43267e:	leave  
  43267f:	stos   DWORD PTR es:[edi],eax
  432680:	retf   0xd102
  432683:	jns    0x4326b2
  432685:	addr16 mov ds:0xe7f,al
  432689:	mov    edx,DWORD PTR [esi+0x4]
  43268c:	xor    al,0x5e
  43268e:	jae    0x432708
  432690:	out    0x7d,al
  432692:	out    dx,eax
  432693:	fdivp  st(3),st
  432695:	cli    
  432696:	jp     0x432696
  432698:	iret   
  432699:	xor    DWORD PTR [eax+0x5d],0xffffffb2
  43269d:	push   eax
  43269e:	lods   eax,DWORD PTR ds:[esi]
  43269f:	add    DWORD PTR [eax],eax
  4326a1:	adc    DWORD PTR [ecx],eax
  4326a3:	add    BYTE PTR [eax],al
  4326a5:	push   cs
  4326a6:	(bad)  
  4326a8:	ins    DWORD PTR es:[edi],dx
  4326a9:	call   0xbc9e:0x4544d42e
  4326b0:	and    eax,0x25ea7f70
  4326b5:	inc    edi
  4326b6:	mov    edx,0x7647a595
  4326bb:	mov    ebp,0x2c7efd57
  4326c0:	int3   
  4326c1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4326c2:	or     BYTE PTR [esi-0x2],dh
  4326c5:	test   DWORD PTR [eax],ebx
  4326c7:	dec    ebp
  4326c8:	lea    ecx,[edx]
  4326ca:	sub    ebp,DWORD PTR [ecx-0x61]
  4326cd:	pop    ebx
  4326ce:	loop   0x432662
  4326d0:	bound  ecx,QWORD PTR [edx+0x40]
  4326d3:	pop    ss
  4326d4:	and    eax,0x4fe2ae59
  4326d9:	xor    DWORD PTR [eax],0x94908535
  4326df:	mov    ah,0xb9
  4326e1:	jecxz  0x4326b4
  4326e3:	add    al,0xc6
  4326e5:	or     DWORD PTR [ebx-0x25],esp
  4326e8:	mov    gs,WORD PTR [esi]
  4326ea:	add    DWORD PTR [ecx],ebx
  4326ec:	jnp    0x432694
  4326ee:	cli    
  4326ef:	xchg   esi,eax
  4326f0:	fsub   DWORD PTR [ebx+0x57]
  4326f3:	fistp  WORD PTR [ebx+0x16]
  4326f6:	pop    edi
  4326f7:	cmp    eax,0x5719c436
  4326fc:	sub    bh,bl
  4326fe:	jo     0x4326ab
  432700:	sbb    ch,BYTE PTR [edx+0x6f]
  432703:	push   edx
  432704:	test   al,0x4b
  432706:	inc    edx
  432707:	pop    ds
  432708:	sbb    cl,BYTE PTR [edi-0x2a388f60]
  43270e:	mul    BYTE PTR es:[ebp+0x9588650]
  432715:	and    ch,BYTE PTR [edx-0x29bb11ea]
  43271b:	stos   DWORD PTR es:[edi],eax
  43271c:	jae    0x4326c7
  43271e:	dec    ebx
  43271f:	pop    ebx
  432720:	dec    ecx
  432721:	jnp    0x43273b
  432723:	xchg   edx,eax
  432724:	adc    ecx,edi
  432726:	mov    ds:0x6648618c,al
  43272b:	fwait
  43272c:	retf   
  43272d:	xchg   edi,eax
  43272e:	mov    eax,0x7c91da4
  432733:	das    
  432734:	int    0xb
  432736:	xor    DWORD PTR [ecx-0x7517fa3d],ebp
  43273c:	jno    0x432731
  43273e:	xor    dh,BYTE PTR [edx-0x2a]
  432741:	sbb    BYTE PTR [esi-0x46],bh
  432744:	pusha  
  432745:	cmp    bh,BYTE PTR [ebp+0x59a54475]
  43274b:	sub    eax,0x374f2e63
  432750:	sbb    eax,0xaed0cf11
  432755:	adc    DWORD PTR [eax],edi
  432757:	mov    ecx,0x7d3f73e7
  43275c:	jns    0x432708
  43275e:	ja     0x432789
  432760:	nop
  432761:	dec    ebp
  432762:	jl     0x432748
  432764:	mov    eax,DWORD PTR [ecx+edx*2-0x3eecc348]
  43276b:	sbb    BYTE PTR [edx],ch
  43276d:	sub    BYTE PTR [edi+0x17],0x30
  432771:	scas   al,BYTE PTR es:[edi]
  432772:	sti    
  432773:	jp     0x43270a
  432775:	daa    
  432776:	out    dx,al
  432777:	(bad)  
  432778:	inc    esp
  432779:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43277a:	int    0x56
  43277c:	push   0xfffffff0
  43277e:	jbe    0x4327ad
  432780:	xor    edi,DWORD PTR [ebp-0x6085062f]
  432786:	mov    eax,0x8102989b
  43278b:	mov    ch,0xf1
  43278d:	scas   al,BYTE PTR es:[edi]
  43278e:	cmp    ch,BYTE PTR [ebx+eax*4-0x1e]
  432792:	scas   eax,DWORD PTR es:[edi]
  432793:	inc    ecx
  432794:	add    al,BYTE PTR [edx+0x58]
  432797:	cmp    bh,BYTE PTR [eax+0x41]
  43279a:	out    dx,eax
  43279b:	std    
  43279c:	pop    ss
  43279d:	outs   dx,BYTE PTR ds:[esi]
  43279e:	mov    WORD PTR [edi],es
  4327a0:	in     al,dx
  4327a1:	nop
  4327a2:	push   edx
  4327a3:	shl    DWORD PTR gs:[ebx-0x6d],0xb6
  4327a8:	push   es
  4327a9:	jo     0x432777
  4327ab:	aaa    
  4327ac:	mov    ebx,0x3d5e7c8
  4327b1:	pusha  
  4327b2:	lods   al,BYTE PTR ds:[esi]
  4327b3:	jle    0x432810
  4327b5:	jecxz  0x432807
  4327b7:	inc    edx
  4327b8:	pop    DWORD PTR [esi-0x29a63061]
  4327be:	leave  
  4327bf:	fadd   DWORD PTR [edi+0x1253525b]
  4327c5:	inc    ebx
  4327c6:	popa   
  4327c7:	scas   al,BYTE PTR es:[edi]
  4327c8:	add    DWORD PTR [eax],eax
  4327ca:	adc    DWORD PTR [ecx],eax
  4327cc:	add    BYTE PTR [eax],al
  4327ce:	xlat   BYTE PTR ds:[ebx]
  4327cf:	repz push 0xfe4ae665
  4327d5:	mov    al,ds:0xbb568165
  4327da:	adc    edx,ebx
  4327dc:	in     eax,0x90
  4327de:	ds out dx,eax
  4327e0:	sub    eax,0x88576355
  4327e5:	ret    
  4327e6:	jmp    0x432818
  4327e8:	lods   al,BYTE PTR ds:[esi]
  4327e9:	jp     0x43276b
  4327eb:	adc    BYTE PTR [ebx],ah
  4327ed:	mov    edx,DWORD PTR [ebp+eiz*8+0x2c]
  4327f1:	sbb    eax,0xd8dc26dc
  4327f6:	das    
  4327f7:	push   0x33dd2f16
  4327fc:	mov    ch,0xe
  4327fe:	or     BYTE PTR [edi-0x59],0xcb
  432802:	pushf  
  432803:	sbb    al,0x30
  432805:	adc    al,0xb2
  432807:	aaa    
  432808:	jecxz  0x432857
  43280a:	mov    edx,0x2b5f3ff3
  43280f:	mov    bl,0x18
  432811:	jmp    0x5bed0b8a
  432816:	sti    
  432817:	mov    dh,BYTE PTR [ebx+0x716f5610]
  43281d:	jne    0x43284f
  43281f:	in     al,0x54
  432821:	fisttp WORD PTR [edx+esi*2+0x33088394]
  432828:	push   edi
  432829:	jns    0x432817
  43282b:	sbb    al,0x8c
  43282d:	ffreep st(2)
  43282f:	in     eax,dx
  432830:	cld    
  432831:	lock in eax,0x8d
  432834:	inc    bl
  432836:	lahf   
  432837:	jne    0x432865
  432839:	mov    cl,0xc4
  43283b:	mov    edx,0xe84077f5
  432840:	xlat   BYTE PTR ds:[ebx]
  432841:	in     eax,0x4f
  432843:	pop    esi
  432844:	cmp    BYTE PTR [ebp-0x2879eb6e],al
  43284a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43284b:	inc    ebx
  43284c:	popa   
  43284d:	push   edx
  43284e:	mov    bl,0x75
  432850:	dec    ebx
  432851:	and    ebp,esp
  432853:	add    eax,0xb29e77b6
  432858:	push   ecx
  432859:	mov    WORD PTR [ebx],ss
  43285b:	out    dx,al
  43285c:	(bad)  
  43285d:	adc    al,ch
  43285f:	xor    ch,BYTE PTR [eax-0xe304716]
  432865:	bound  edx,QWORD PTR [edx+0x673a8878]
  43286b:	(bad)  
  43286c:	xor    DWORD PTR [ecx-0x4ad56b5d],ebp
  432872:	mov    bh,0x52
  432874:	push   0xbf701c32
  432879:	dec    ebp
  43287a:	pop    esp
  43287b:	mov    dh,0x6f
  43287d:	clc    
  43287e:	sbb    bl,BYTE PTR [eax+ecx*4+0x4d]
  432882:	data16 mov es,WORD PTR [ebx]
  432885:	ja     0x43288b
  432887:	xchg   edi,eax
  432888:	jbe    0x4328a1
  43288a:	icebp  
  43288b:	xchg   ebx,eax
  43288c:	fcomp  QWORD PTR [eax+0x54]
  43288f:	pop    ss
  432890:	ins    DWORD PTR es:[edi],dx
  432891:	and    DWORD PTR [ecx-0x3e],eax
  432894:	or     al,BYTE PTR [ecx+ebx*2-0x40]
  432898:	xlat   BYTE PTR ds:[ebx]
  432899:	or     DWORD PTR [edi+0x2d],edi
  43289c:	or     al,0x7c
  43289e:	mov    cl,0xbb
  4328a0:	call   0xa90:0x4276824a
  4328a7:	neg    DWORD PTR [esp+ebx*2]
  4328aa:	popa   
  4328ab:	punpckhdq mm2,QWORD PTR [eax]
  4328ae:	inc    esi
  4328af:	repnz mov cl,0x18
  4328b2:	in     eax,0x5f
  4328b4:	xchg   ebp,eax
  4328b5:	pop    esi
  4328b6:	sbb    al,0x72
  4328b8:	sub    ebp,esi
  4328ba:	in     al,0xe7
  4328bc:	fidivr DWORD PTR [edx-0x16dd23ea]
  4328c2:	jecxz  0x4328a5
  4328c4:	xchg   ecx,esi
  4328c6:	push   ss
  4328c7:	dec    ebx
  4328c8:	popa   
  4328c9:	pop    ecx
  4328ca:	popa   
  4328cb:	cmc    
  4328cc:	jmp    0x4328a4
  4328ce:	les    edx,FWORD PTR [edx]
  4328d0:	xchg   DWORD PTR [edx+0x6d],ebx
  4328d3:	sbb    eax,0x5a85cbf
  4328d8:	lods   eax,DWORD PTR ds:[esi]
  4328d9:	or     eax,0x4503324a
  4328de:	test   al,0x84
  4328e0:	imul   ebx,DWORD PTR [ecx-0x6b0202f3],0x87ab1ae9
  4328ea:	pop    ebx
  4328eb:	hlt    
  4328ec:	stos   DWORD PTR es:[edi],eax
  4328ed:	cmp    dh,BYTE PTR [ecx+0x1d081]
  4328f3:	adc    DWORD PTR [ecx],eax
  4328f5:	add    BYTE PTR [eax],al
  4328f7:	sub    ah,dl
  4328f9:	adc    al,dl
  4328fb:	mov    ch,0x74
  4328fd:	repnz sub eax,0x16dced5c
  432903:	out    dx,eax
  432904:	pop    edx
  432905:	add    DWORD PTR [esi-0x3120cd1c],0xffffff96
  43290c:	jge    0x43296f
  43290e:	mov    edx,0x2af6de29
  432913:	xchg   ebx,eax
  432914:	dec    edi
  432915:	xchg   edi,eax
  432916:	jecxz  0x432994
  432918:	sub    DWORD PTR [eax-0x67],edx
  43291b:	adc    dh,BYTE PTR [esi]
  43291d:	xchg   esi,eax
  43291e:	push   esp
  43291f:	fwait
  432920:	aad    0xcf
  432922:	loopne 0x432995
  432924:	add    DWORD PTR [eax-0x64],ebp
  432927:	jns    0x432976
  432929:	add    ah,BYTE PTR [edi-0x3d]
  43292c:	sbb    DWORD PTR [ecx+0xcf74f10],ebp
  432932:	mov    bl,0x2
  432934:	dec    eax
  432935:	lock ret 
  432937:	mov    eax,?
  432939:	lahf   
  43293a:	ins    DWORD PTR es:[edi],dx
  43293b:	dec    esi
  43293c:	adc    eax,0x7a727146
  432941:	cmp    ebx,DWORD PTR [esp+ebp*8-0x41b6a88c]
  432948:	mov    WORD PTR [edx-0x2e],fs
  43294b:	mov    ch,0xf5
  43294d:	iret   
  43294e:	mov    bl,0x55
  432950:	scas   eax,DWORD PTR es:[edi]
  432951:	test   DWORD PTR [esi-0x7a],esi
  432954:	xchg   esi,eax
  432955:	cmp    esp,DWORD PTR [ebx-0x3f8fc373]
  43295b:	leave  
  43295c:	(bad)  
  43295d:	daa    
  43295e:	gs fcmovbe st,st(1)
  432961:	call   0xb81b:0x557f3c51
  432968:	(bad)  
  432969:	jne    0x432965
  43296b:	loope  0x43290d
  43296d:	fcomp  QWORD PTR [ebx+0x5f74eb72]
  432973:	neg    BYTE PTR [edi]
  432975:	(bad)  
  432976:	imul   esp
  432978:	mov    ch,0xb2
  43297a:	cmc    
  43297b:	fist   DWORD PTR [ebx-0x3d]
  43297e:	adc    edx,DWORD PTR [ecx-0x4]
  432981:	jb     0x4329e7
  432983:	push   cs
  432984:	mov    ebp,0x2d5c5965
  432989:	jb     0x432921
  43298b:	fadd   st,st(0)
  43298d:	sub    ah,BYTE PTR [ecx-0x2bf9931f]
  432993:	in     al,0xf8
  432995:	jmp    0x6f53:0x2643cd0d
  43299c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  43299d:	adc    al,0xb1
  43299f:	cmp    eax,0xc952d004
  4329a4:	repz and BYTE PTR [ebx-0x54c55c2e],dh
  4329ab:	call   0x63e951fb
  4329b0:	jae    0x432943
  4329b2:	pop    ebx
  4329b3:	sbb    al,0x28
  4329b5:	out    dx,al
  4329b6:	fld    QWORD PTR [ecx]
  4329b8:	lds    edx,FWORD PTR [eax]
  4329ba:	arpl   dx,bp
  4329bc:	jg     0x4329f7
  4329be:	sti    
  4329bf:	jmp    0x4329b1
  4329c1:	pop    edx
  4329c2:	push   ds
  4329c3:	dec    esi
  4329c4:	push   eax
  4329c5:	int    0xa7
  4329c7:	stos   DWORD PTR es:[edi],eax
  4329c8:	fnsave [ebx-0x54cf3e7]
  4329ce:	test   BYTE PTR ds:0x1dcfc112,dh
  4329d4:	imul   eax,DWORD PTR [edi],0xffffffae
  4329d7:	out    0x9c,eax
  4329d9:	jae    0x432a13
  4329db:	out    0x30,eax
  4329dd:	xor    eax,0xf0c2d8e3
  4329e2:	bound  esp,QWORD PTR [eax]
  4329e4:	scas   eax,DWORD PTR es:[edi]
  4329e5:	lods   eax,DWORD PTR ds:[esi]
  4329e6:	(bad)  
  4329e7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4329e8:	mov    edi,fs
  4329ea:	push   0x54
  4329ec:	xor    bl,cl
  4329ee:	pushf  
  4329ef:	sbb    al,0x92
  4329f1:	pop    ds
  4329f2:	in     al,dx
  4329f3:	aas    
  4329f4:	lea    eax,ds:0xc5cc598b
  4329fb:	fisub  WORD PTR [ecx-0x80]
  4329fe:	sbb    bh,BYTE PTR [ebp+0xd]
  432a01:	dec    ecx
  432a03:	aam    0x67
  432a05:	sahf   
  432a06:	inc    edi
  432a07:	xchg   ecx,eax
  432a08:	mov    bl,0xad
  432a0a:	fs ja  0x432a8b
  432a0d:	push   DWORD PTR [ebx-0x276ef413]
  432a13:	loope  0x432a07
  432a15:	sbb    al,0xbf
  432a17:	xchg   BYTE PTR [esi],bl
  432a19:	call   0x0:0x1110001
  432a20:	pop    eax
  432a21:	mov    bl,0xc3
  432a23:	cmp    BYTE PTR [ecx-0x6b1a4509],0x53
  432a2a:	pop    edi
  432a2b:	(bad)  
  432a2c:	outs   dx,DWORD PTR ds:[esi]
  432a2d:	fnstsw WORD PTR [eax]
  432a2f:	sub    al,0x64
  432a31:	mov    ah,0xc8
  432a33:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  432a34:	data16 cmp al,BYTE PTR [eax-0x30687fc]
  432a3b:	push   cs
  432a3c:	les    edi,FWORD PTR [ebx-0x4f532da4]
  432a42:	add    eax,0xeb142157
  432a47:	sub    eax,ebp
  432a49:	(bad)  
  432a4a:	lea    edi,[esi-0x3]
  432a4d:	retf   
  432a4e:	add    DWORD PTR [edx-0x28081bde],0x854e26ef
  432a58:	xchg   esp,eax
  432a59:	push   ebp
  432a5a:	(bad)  
  432a5c:	xor    al,0x8d
  432a5e:	out    0x55,al
  432a60:	not    esi
  432a62:	fld    TBYTE PTR [ecx+0x45]
  432a65:	rcl    BYTE PTR [ecx+0x3a9bd657],cl
  432a6b:	daa    
  432a6c:	es cmp esp,ebp
  432a6f:	fmul   QWORD PTR [esi]
  432a71:	rcl    al,cl
  432a73:	mov    eax,DWORD PTR [ecx]
  432a75:	scas   eax,DWORD PTR es:[edi]
  432a76:	lahf   
  432a77:	xor    BYTE PTR [eax+eiz*4+0x4e],dh
  432a7b:	mov    ds:0x232873f2,al
  432a80:	vpmuludq xmm2,xmm3,XMMWORD PTR [ebx+0x4285f8c8]
  432a88:	or     edi,DWORD PTR [edi]
  432a8a:	jbe    0x432a68
  432a8c:	mov    DWORD PTR [ebx-0x13],edx
  432a8f:	mov    DWORD PTR [ebx],eax
  432a91:	sub    al,0x7d
  432a93:	into   
  432a94:	mov    fs,WORD PTR [ecx+ebx*2-0x67]
  432a98:	push   edx
  432a99:	(bad)  
  432a9a:	jno    0x432ac5
  432a9c:	add    edx,DWORD PTR [ecx-0x4e]
  432a9f:	mov    edi,0x6c10101e
  432aa4:	push   ds
  432aa5:	push   edi
  432aa6:	and    eax,ecx
  432aa8:	aas    
  432aa9:	mov    ds:0xe7c095ea,eax
  432aae:	xchg   esp,eax
  432aaf:	xchg   ebx,eax
  432ab0:	sub    DWORD PTR [edx+0x17b38c7f],edx
  432ab6:	jno    0x432aeb
  432ab8:	mov    ds:0xdeabb185,eax
  432abd:	js     0x432a88
  432abf:	mov    ecx,0xa583d14f
  432ac4:	mov    ecx,0x4a70cf18
  432ac9:	in     eax,dx
  432aca:	inc    edx
  432acb:	pop    esi
  432acc:	in     eax,0xf1
  432ace:	push   0x30e31f47
  432ad3:	add    esp,DWORD PTR [ebx+0x2a]
  432ad6:	xor    ebp,DWORD PTR [ebx+edx*4]
  432ad9:	push   0xde4d0689
  432ade:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  432adf:	dec    ebx
  432ae0:	sub    esp,0x6270e632
  432ae6:	and    DWORD PTR [ecx],esp
  432ae8:	push   0x21
  432aea:	dec    edi
  432aeb:	dec    eax
  432aec:	inc    esp
  432aed:	adc    eax,0xfeb09420
  432af2:	cmovns ecx,DWORD PTR [eax]
  432af5:	cmp    ebx,DWORD PTR [ecx]
  432af7:	dec    edi
  432af8:	lock ja 0x432ac0
  432afb:	cs (bad) 
  432afd:	(bad)  
  432afe:	mov    dh,0xf9
  432b00:	or     BYTE PTR [edx],ch
  432b02:	push   ebp
  432b03:	xchg   DWORD PTR [edi+0x13551083],esi
  432b09:	dec    edi
  432b0a:	test   eax,0x7f2ef88f
  432b0f:	jmp    0x28de:0xf42a39f4
  432b16:	sbb    al,0x12
  432b18:	nop
  432b19:	sbb    BYTE PTR [esi+0x77],al
  432b1c:	scas   al,BYTE PTR es:[edi]
  432b1d:	inc    ecx
  432b1e:	xor    al,0x78
  432b20:	pop    ds
  432b21:	(bad)  
  432b22:	nop
  432b23:	imul   esi,DWORD PTR [eax],0x53dc3da4
  432b29:	stc    
  432b2a:	or     eax,0x23c1af6f
  432b2f:	dec    edx
  432b30:	cmp    DWORD PTR [edi-0xadb0ab9],esp
  432b36:	mov    dh,0xf7
  432b38:	(bad)  
  432b39:	mov    edx,0xb56c31cf
  432b3e:	iret   
  432b3f:	mov    dh,BYTE PTR [edi+0x1990d]
  432b45:	adc    DWORD PTR [ecx],eax
  432b47:	add    BYTE PTR [eax],al
  432b49:	and    ah,BYTE PTR [edx-0x2f]
  432b4c:	sbb    eax,0x18413800
  432b51:	jl     0x432b00
  432b53:	cmp    DWORD PTR [ebp+0x62],eax
  432b56:	cmp    edi,DWORD PTR [eax-0x6a0461e8]
  432b5c:	out    0xe9,al
  432b5e:	addr16 jno 0x432af6
  432b61:	inc    ebp
  432b62:	(bad)  
  432b63:	xchg   BYTE PTR ds:0xe3e6bd93,ah
  432b69:	sbb    ebx,DWORD PTR [eax+0x55]
  432b6c:	inc    edi
  432b6d:	js     0xdd4e0186
  432b73:	mov    edi,0x2b46bed9
  432b78:	aaa    
  432b79:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  432b7a:	push   ebp
  432b7b:	mov    eax,0xc2bec2a8
  432b80:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  432b81:	sub    BYTE PTR [ebp+0x17],ah
  432b84:	fwait
  432b85:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  432b86:	xchg   ebx,eax
  432b87:	sbb    DWORD PTR [eax-0x61],edx
  432b8a:	clc    
  432b8b:	mov    cl,0x24
  432b8d:	cmp    dh,BYTE PTR [edx]
  432b8f:	(bad)  
  432b90:	xor    BYTE PTR [ebx-0x5ae2c5ae],ah
  432b96:	fmul   st(2),st
  432b98:	scas   al,BYTE PTR es:[edi]
  432b99:	add    eax,0x7da739eb
  432b9e:	xlat   BYTE PTR ds:[ebx]
  432b9f:	mov    edx,0x2f4f2582
  432ba4:	inc    esp
  432ba5:	mov    edx,DWORD PTR [edi]
  432ba7:	repnz pop esp
  432ba9:	mov    dh,0x7c
  432bab:	or     dh,BYTE PTR [eax+0x12]
  432bae:	aas    
  432baf:	sub    al,0x3b
  432bb1:	into   
  432bb2:	hlt    
  432bb3:	adc    al,0x16
  432bb5:	lods   al,BYTE PTR ds:[esi]
  432bb6:	cmp    DWORD PTR [esi],esi
  432bb8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  432bb9:	lods   eax,DWORD PTR ds:[esi]
  432bba:	icebp  
  432bbb:	add    eax,0x74a40c1e
  432bc0:	imul   esp,DWORD PTR [ebp+esi*2+0x5f3be54e],0xfe51d322
  432bcb:	es cmc 
  432bcd:	sbb    BYTE PTR [ebx+0x4dedbe09],bl
  432bd3:	xchg   ecx,eax
  432bd4:	pop    ss
  432bd5:	add    cl,dh
  432bd7:	mov    al,0x39
  432bd9:	fwait
  432bda:	xor    al,0x4e
  432bdc:	ret    0xfc65
  432bdf:	sub    al,0xd2
  432be1:	adc    DWORD PTR [edi],0xffffffa4
  432be4:	in     al,dx
  432be5:	jp     0x432b74
  432be7:	js     0x432bff
  432be9:	std    
  432bea:	pop    esi
  432beb:	aad    0x69
  432bed:	ins    DWORD PTR es:[di],dx
  432bef:	ret    
  432bf0:	into   
  432bf1:	mov    BYTE PTR [ebx],bl
  432bf3:	dec    eax
  432bf4:	jmp    0x7c9c:0x97af150b
  432bfb:	mov    eax,ds:0x84db9e71
  432c00:	out    dx,al
  432c01:	leave  
  432c02:	stc    
  432c03:	popa   
  432c04:	cmp    edx,ecx
  432c06:	call   0xc015:0xccab7c50
  432c0d:	mov    esp,0x182722d8
  432c12:	sub    al,0xb3
  432c14:	add    BYTE PTR [ecx+0x204b16d7],al
  432c1a:	cwde   
  432c1b:	aas    
  432c1c:	(bad)  
  432c1d:	mov    eax,0xb1bab7b2
  432c22:	ins    DWORD PTR es:[edi],dx
  432c23:	adc    al,0x71
  432c25:	mov    dl,BYTE PTR [eax]
  432c27:	mov    eax,ds:0x9701aa89
  432c2c:	xchg   ebp,eax
  432c2e:	xchg   ecx,eax
  432c2f:	xor    BYTE PTR [edi+0x456eb956],bh
  432c35:	and    eax,0x8579ac10
  432c3a:	(bad)  
  432c3b:	pop    ebp
  432c3c:	bnd jmp 0xb008faa1
  432c42:	mov    al,0x91
  432c44:	outs   dx,BYTE PTR ds:[esi]
  432c45:	(bad)  
  432c46:	mov    bl,0xc8
  432c48:	push   edi
  432c49:	xor    eax,0x4247f05
  432c4e:	(bad)  [ecx]
  432c50:	jg     0x432bed
  432c52:	inc    ebp
  432c53:	in     eax,dx
  432c54:	in     eax,dx
  432c55:	cmp    bl,0x51
  432c58:	sub    eax,0xc4a4cb2
  432c5d:	jbe    0x432c6d
  432c5f:	jbe    0x432cdf
  432c61:	jp     0x432c81
  432c63:	push   es
  432c64:	dec    ebx
  432c65:	cmp    ebx,DWORD PTR [edx-0x5b1e4d5d]
  432c6b:	ret    0x1
  432c6e:	adc    DWORD PTR [ecx],eax
  432c70:	add    BYTE PTR [eax],al
  432c72:	div    BYTE PTR [edx+0x5c]
  432c75:	jmp    0xf814b2e4
  432c7a:	jmp    0x432c17
  432c7c:	adc    DWORD PTR [edi+ecx*8-0x22],esp
  432c80:	dec    ebp
  432c81:	out    dx,eax
  432c82:	and    ah,BYTE PTR [eax]
  432c84:	fist   DWORD PTR [eax+ebp*4+0x2a4925e7]
  432c8b:	jge    0x432c2e
  432c8d:	dec    esp
  432c8e:	add    esi,DWORD PTR [ebx-0x5fb2ef1b]
  432c94:	add    al,0x97
  432c96:	loopne 0x432c35
  432c98:	sub    ah,dh
  432c9a:	add    BYTE PTR [edi-0x38],al
  432c9d:	jg     0x432c7a
  432c9f:	cmp    BYTE PTR [edx],0x67
  432ca2:	sbb    bl,ah
  432ca4:	loope  0x432c3c
  432ca6:	shr    BYTE PTR [edi-0x27],cl
  432ca9:	push   esi
  432caa:	pop    es
  432cab:	add    al,0xe5
  432cad:	inc    eax
  432cae:	cdq    
  432caf:	in     al,0x57
  432cb1:	fdivr  st(6),st
  432cb3:	xor    BYTE PTR [esi],ah
  432cb5:	mov    edx,0x11e753d5
  432cba:	div    BYTE PTR [esi-0x7f]
  432cbd:	cmp    al,0xca
  432cbf:	push   edx
  432cc0:	adc    BYTE PTR [ebx+0x203b300d],dl
  432cc6:	fld    TBYTE PTR [ecx-0x718e31b]
  432ccc:	clc    
  432ccd:	clc    
  432cce:	xchg   esp,eax
  432ccf:	scas   al,BYTE PTR es:[edi]
  432cd0:	adc    esi,ecx
  432cd2:	or     BYTE PTR [eax-0x593d0fee],dl
  432cd8:	xor    al,BYTE PTR [edi]
  432cda:	icebp  
  432cdb:	cli    
  432cdc:	lds    cx,DWORD PTR [ecx]
  432cdf:	cdq    
  432ce0:	fs int3 
  432ce2:	push   edi
  432ce3:	dec    ebx
  432ce4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  432ce5:	sahf   
  432ce6:	imul   ebp,DWORD PTR [ecx+0x11],0xffffffa3
  432cea:	and    eax,DWORD PTR [ebx]
  432cec:	mov    esp,ecx
  432cee:	and    eax,0xca707ee4
  432cf3:	and    al,BYTE PTR [eax]
  432cf5:	push   eax
  432cf6:	pop    es
  432cf7:	aaa    
  432cf8:	add    BYTE PTR [ebp+0x43860390],0xec
  432cff:	sub    eax,0xd12a11dd
  432d04:	ret    0xe968
  432d07:	addr16 add al,0x63
  432d0a:	leave  
  432d0b:	jbe    0x432d33
  432d0d:	icebp  
  432d0e:	mov    cl,0xe4
  432d10:	setg   cl
  432d13:	div    DWORD PTR [ebx-0x67c599ac]
  432d19:	pushf  
  432d1a:	sbb    eax,0x67fa6ded
  432d1f:	jge    0x432d30
  432d21:	and    bh,BYTE PTR [ecx-0x38]
  432d24:	pop    ecx
  432d25:	test   DWORD PTR [ecx+0x62],0x3cf24b8d
  432d2c:	mov    edx,0xc2c88917
  432d31:	cwde   
  432d32:	inc    edi
  432d33:	loope  0x432d5b
  432d35:	lahf   
  432d36:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  432d37:	push   edx
  432d38:	daa    
  432d39:	jl     0x432cf1
  432d3b:	sub    BYTE PTR [edx],dh
  432d3d:	jl     0x432d89
  432d3f:	jb     0x432d17
  432d41:	push   0x56039d52
  432d46:	push   esi
  432d47:	xchg   edx,eax
  432d48:	test   BYTE PTR ds:0x982956b5,dl
  432d4e:	fwait
  432d4f:	dec    esp
  432d50:	shl    DWORD PTR [esi+eax*1+0x74faab6b],0x4
  432d58:	icebp  
  432d59:	xor    ebx,ebp
  432d5b:	push   es
  432d5c:	mov    BYTE PTR [edx-0x1c],bh
  432d5f:	daa    
  432d60:	mov    eax,ds:0x2429e6c0
  432d65:	loopne 0x432d6c
  432d67:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  432d68:	rol    DWORD PTR [esi],0x8c
  432d6b:	stos   BYTE PTR es:[edi],al
  432d6c:	mov    ds:0x8ec10010,eax
  432d71:	adc    DWORD PTR [ecx+0x3131acff],0x66
  432d78:	mov    edi,0xc1e41dd2
  432d7d:	add    al,0x89
  432d7f:	pop    ebx
  432d80:	neg    edi
  432d82:	mov    ebp,0xe4aa5c08
  432d87:	(bad)  
  432d88:	test   BYTE PTR [esi-0x4],0x47
  432d8c:	stc    
  432d8d:	xor    DWORD PTR [esi+0x7405db84],esi
  432d93:	xchg   ebx,eax
  432d94:	rol    DWORD PTR [ecx],0x0
  432d97:	adc    DWORD PTR [ecx],eax
  432d99:	add    BYTE PTR [eax],al
  432d9b:	(bad)  
  432d9c:	and    al,BYTE PTR [edi]
  432d9e:	mov    edx,0x367e10c0
  432da3:	mov    DWORD PTR ds:0xe6194951,edi
  432da9:	fs enter 0x2d85,0x49
  432dae:	sub    ch,dh
  432db0:	aaa    
  432db1:	mov    ?,WORD PTR [ebp-0x41]
  432db4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  432db5:	mov    WORD PTR [eax+ebx*1-0x32cd9f72],gs
  432dbc:	fwait
  432dbd:	jb     0x432dd7
  432dbf:	ja     0x432d5b
  432dc1:	dec    ebx
  432dc2:	lahf   
  432dc3:	in     eax,0x8d
  432dc5:	mov    cl,0x66
  432dc7:	cs scas eax,DWORD PTR es:[edi]
  432dc9:	add    bh,BYTE PTR [edx]
  432dcb:	sub    BYTE PTR [esi+0xf],bh
  432dce:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  432dcf:	mov    ds,WORD PTR [eax+0x7f476558]
  432dd5:	or     eax,DWORD PTR [esi+0x76555cca]
  432ddb:	jnp    0x432dea
  432ddd:	out    dx,eax
  432dde:	leave  
  432ddf:	dec    DWORD PTR [edi+0xd]
  432de2:	and    ah,BYTE PTR [edi+0x7522970d]
  432de8:	pop    ss
  432de9:	les    edi,FWORD PTR [ecx+0x79]
  432dec:	repnz lea edi,[edx]
  432def:	and    dh,BYTE PTR ds:0x5dca5bdb
  432df5:	int3   
  432df6:	outs   dx,BYTE PTR ds:[esi]
  432df7:	(bad)  
  432df8:	and    dl,al
  432dfa:	sub    eax,0xa1612515
  432dff:	sbb    al,0xc6
  432e01:	sub    DWORD PTR [esi],0x77
  432e04:	jbe    0x432e3d
  432e06:	lahf   
  432e07:	(bad)
  432e0a:	neg    BYTE PTR [edx+edx*1]
  432e0d:	jl     0x432e8b
  432e0f:	mov    ebp,esi
  432e11:	xchg   esp,eax
  432e12:	cwde   
  432e13:	rol    DWORD PTR [ebx],1
  432e15:	jnp    0x432df5
  432e17:	pushf  
  432e18:	add    eax,0x4b1f534e
  432e1d:	push   es
  432e1e:	push   ss
  432e1f:	daa    
  432e20:	(bad)  
  432e21:	and    ah,BYTE PTR [esp+ecx*1+0x3]
  432e25:	bound  ebx,QWORD PTR [ecx+0x192bbec9]
  432e2b:	scas   al,BYTE PTR es:[edi]
  432e2c:	push   cs
  432e2d:	(bad)  
  432e2f:	les    ebx,FWORD PTR [edi+0x6b]
  432e32:	or     edx,DWORD PTR [edi-0x54]
  432e35:	ret    
  432e36:	dec    edx
  432e37:	mov    ebx,DWORD PTR ds:0x5f01a6da
  432e3d:	scas   al,BYTE PTR es:[edi]
  432e3e:	leave  
  432e3f:	mov    dl,0x1a
  432e41:	in     eax,0xd4
  432e43:	fadd   DWORD PTR [ebx-0x6]
  432e46:	add    edi,DWORD PTR [edi+0x23]
  432e49:	pop    ecx
  432e4a:	aaa    
  432e4b:	das    
  432e4c:	pop    ecx
  432e4d:	cmp    al,0x88
  432e4f:	or     al,0xab
  432e51:	sub    al,0x9
  432e53:	jp     0x432eb9
  432e55:	retf   
  432e56:	stc    
  432e57:	and    BYTE PTR [eax-0x4d2c9dbd],0xa0
  432e5e:	jmp    0x1ceb:0xf2302f3d
  432e65:	rcl    BYTE PTR [ebx+0x1e089ef],0x19
  432e6c:	cmp    BYTE PTR [edx+0x12],ch
  432e6f:	jge    0x432ebd
  432e71:	mov    ecx,0xe731876a
  432e76:	push   ecx
  432e77:	into   
  432e78:	dec    eax
  432e79:	cmc    
  432e7a:	scas   eax,DWORD PTR es:[edi]
  432e7b:	out    0x8e,eax
  432e7d:	pusha  
  432e7e:	push   es
  432e7f:	push   ebx
  432e80:	or     DWORD PTR [esi+0x4d01e561],edx
  432e86:	mov    al,0x58
  432e88:	cmps   BYTE PTR ds:[si],BYTE PTR es:[di]
  432e8a:	or     eax,0x5a32b9f3
  432e8f:	out    0x6f,eax
  432e91:	and    ebp,DWORD PTR [esi-0x55]
  432e94:	mov    ah,BYTE PTR [esi]
  432e96:	fsubr  st,st(2)
  432e98:	mov    dl,0xf2
  432e9a:	aad    0xe8
  432e9c:	adc    eax,DWORD PTR [eax+edi*8-0xb44cba4]
  432ea3:	jp     0x432e60
  432ea5:	imul   edx,DWORD PTR [esi+edi*8+0x412ce79f],0x71
  432ead:	or     eax,0xe7fee7ea
  432eb2:	jge    0x432e53
  432eb4:	mov    BYTE PTR [edi+0x78],bl
  432eb7:	fwait
  432eb8:	iret   
  432eb9:	xchg   DWORD PTR [ebp+0x8],ecx
  432ebc:	jmp    0x432e54
  432ebe:	add    DWORD PTR [eax],eax
  432ec0:	adc    DWORD PTR [ecx],eax
  432ec2:	add    BYTE PTR [eax],al
  432ec4:	cmp    al,0x3c
  432ec6:	push   esp
  432ec7:	cmp    BYTE PTR [ecx+0x1a9a1bf3],ch
  432ecd:	mov    cl,0xa6
  432ecf:	mov    DWORD PTR [edx],ebp
  432ed1:	js     0x432ed3
  432ed3:	cli    
  432ed4:	sti    
  432ed5:	and    eax,0xb94d1650
  432eda:	or     ch,BYTE PTR [eax+0x47]
  432edd:	cs in  eax,0xba
  432ee0:	jg     0x432e97
  432ee2:	dec    esi
  432ee3:	xor    eax,0xb849fd27
  432ee8:	inc    ecx
  432ee9:	jae    0x432f0d
  432eeb:	jmp    0x7256:0xdea59098
  432ef2:	mov    edx,0xaa8c6ae2
  432ef7:	(bad)  
  432ef8:	xor    al,0xbc
  432efa:	stc    
  432efb:	jle    0x432ea0
  432efd:	mov    eax,ds:0x275ef607
  432f02:	or     dh,dl
  432f04:	aaa    
  432f05:	addr16 cmp edi,esi
  432f08:	pop    ecx
  432f09:	and    ebx,edx
  432f0b:	pop    ss
  432f0c:	(bad)  
  432f0e:	lea    edx,[eax]
  432f10:	mov    ebx,0xba85021c
  432f15:	fdivr  st(0),st
  432f17:	cmp    al,0xda
  432f19:	cmp    DWORD PTR [edx-0x54],edi
  432f1c:	xchg   ebp,eax
  432f1d:	int    0xec
  432f1f:	scas   al,BYTE PTR es:[edi]
  432f20:	and    al,0xfb
  432f22:	(bad)  
  432f23:	ins    BYTE PTR es:[edi],dx
  432f24:	stos   BYTE PTR es:[edi],al
  432f25:	scas   al,BYTE PTR es:[edi]
  432f26:	mov    edi,ebp
  432f28:	add    eax,ecx
  432f2a:	add    ecx,DWORD PTR [esi-0x32]
  432f2d:	test   al,0xd9
  432f2f:	fwait
  432f30:	bound  ebp,QWORD PTR [esi+0x52]
  432f33:	xchg   esp,eax
  432f34:	inc    edi
  432f35:	push   0x56
  432f37:	xchg   edi,eax
  432f38:	dec    DWORD PTR [eax+eiz*1]
  432f3b:	mov    eax,0x7e9b914b
  432f40:	aad    0xf0
  432f42:	mov    esi,0xe5a7db3a
  432f47:	or     bh,BYTE PTR [ebp+0x553175d2]
  432f4d:	jne    0x432ee4
  432f4f:	or     DWORD PTR [ecx],edi
  432f51:	rdtsc  
  432f53:	fidiv  DWORD PTR [edi-0x1c]
  432f56:	int3   
  432f57:	popa   
  432f58:	sub    ecx,DWORD PTR [ecx+0x17ceaf3c]
  432f5e:	adc    eax,0xed60f9c1
  432f63:	fisub  DWORD PTR [edx-0xc]
  432f66:	jae    0x432ef0
  432f68:	sub    BYTE PTR [esi+0x4ec44365],dl
  432f6e:	adc    BYTE PTR [ebp-0x4f],dl
  432f71:	dec    eax
  432f72:	mov    ebx,0x4c97dde7
  432f77:	test   BYTE PTR cs:[edi+0x4a07d834],cl
  432f7e:	div    esp
  432f80:	(bad)  
  432f81:	enter  0x65ac,0x57
  432f85:	push   ebp
  432f86:	xor    al,0x97
  432f88:	xor    edx,ecx
  432f8a:	cli    
  432f8b:	adc    bh,al
  432f8d:	call   0xb7c77fe4
  432f92:	add    edi,ecx
  432f94:	inc    ebx
  432f95:	repnz ds stos BYTE PTR es:[edi],al
  432f98:	mov    ds:0xa7bc83dd,eax
  432f9d:	lea    ecx,[ebx+ebx*1]
  432fa0:	push   esp
  432fa1:	fisttp WORD PTR [edx+ebp*1-0x2c]
  432fa5:	xor    edx,DWORD PTR [ebx]
  432fa7:	pusha  
  432fa8:	add    al,bl
  432faa:	sub    eax,0xd80cd8ed
  432faf:	daa    
  432fb0:	add    eax,0x60114ccb
  432fb5:	pushf  
  432fb6:	(bad)  
  432fb7:	aam    0x63
  432fb9:	pop    esp
  432fba:	std    
  432fbb:	idiv   DWORD PTR ds:0x68f4d31
  432fc1:	in     eax,0x17
  432fc3:	pop    edx
  432fc4:	ret    
  432fc5:	repz fstp DWORD PTR [eax+0x61]
  432fc9:	jmp    0x907f487
  432fce:	cmp    al,0xa8
  432fd0:	jno    0x432f92
  432fd2:	fld    QWORD PTR [edx]
  432fd4:	mov    bh,0x1e
  432fd6:	mov    dh,dh
  432fd8:	mov    esi,esi
  432fda:	std    
  432fdb:	jg     0x432f7c
  432fdd:	jnp    0x43305b
  432fdf:	sbb    DWORD PTR [ecx+0x30],esi
  432fe2:	pusha  
  432fe3:	mov    dh,0xe2
  432fe5:	in     eax,0xf6
  432fe7:	add    DWORD PTR [eax],eax
  432fe9:	adc    DWORD PTR [ecx],eax
  432feb:	add    BYTE PTR [eax],al
  432fed:	sub    ebp,DWORD PTR [eiz*2+0x8f3b2a7]
  432ff4:	(bad)  
  432ff5:	xchg   ebp,eax
  432ff6:	bound  ebx,QWORD PTR [ebx]
  432ff8:	bound  edi,QWORD PTR [edi]
  432ffa:	mov    dl,BYTE PTR [ebx+0x26]
  432ffd:	jbe    0x433068
  432fff:	xlat   BYTE PTR ds:[ebx]
  433000:	mov    BYTE PTR [ebx+0x17],0x75
  433004:	xor    ebx,0x7ceaaf54
  43300a:	imul   esp,DWORD PTR fs:[edi],0x1b6ca48
  433011:	verr   WORD PTR [edx+eiz*8-0x3097a740]
  433019:	xchg   edx,eax
  43301a:	push   cx
  43301c:	ss in  eax,0x79
  43301f:	push   0x5d40a860
  433024:	data16 cmp al,cl
  433027:	jbe    0x433053
  433029:	and    BYTE PTR [ebx],bh
  43302b:	xor    dl,BYTE PTR [edx-0x4b]
  43302e:	out    0xfb,eax
  433030:	sub    eax,DWORD PTR [edx]
  433032:	lds    ecx,FWORD PTR [eax+0x7596a8cb]
  433038:	pusha  
  433039:	(bad)  
  43303b:	push   eax
  43303c:	sahf   
  43303d:	push   esp
  43303e:	inc    ebp
  43303f:	dec    esi
  433040:	test   al,0x64
  433042:	sub    eax,0xb1acdfda
  433047:	cmc    
  433048:	shl    dh,0xb8
  43304b:	dec    esi
  43304c:	xchg   esi,eax
  43304d:	inc    esi
  43304e:	repnz lods eax,DWORD PTR ds:[esi]
  433050:	push   ss
  433051:	add    edx,DWORD PTR ss:[edx+0x407ee4ae]
  433058:	test   BYTE PTR [eax],ah
  43305a:	xchg   edx,ebp
  43305c:	outs   dx,BYTE PTR ds:[esi]
  43305d:	cmp    al,0xda
  43305f:	xor    al,0x9a
  433061:	(bad)  
  433062:	icebp  
  433063:	mov    ebp,0x5ba9ccfb
  433068:	adc    al,0xa6
  43306a:	mov    edx,0xc15f5aa9
  43306f:	out    dx,al
  433070:	scas   al,BYTE PTR es:[edi]
  433071:	and    al,bh
  433073:	ror    BYTE PTR [esi],0x5d
  433076:	jge    0x4330b1
  433078:	add    al,BYTE PTR [ecx-0x57fab3db]
  43307e:	jns    0x4330c1
  433080:	inc    eax
  433081:	and    al,0x3c
  433083:	lds    ecx,FWORD PTR [ecx+eax*1-0x54]
  433087:	fsincos 
  433089:	hlt    
  43308a:	or     eax,0x5fa5f32f
  43308f:	bound  ebx,QWORD PTR [edx-0x47]
  433092:	(bad)  [eax-0x18467631]
  433098:	adc    al,0xb
  43309a:	retf   
  43309b:	push   ds
  43309c:	push   edx
  43309d:	int3   
  43309e:	adc    BYTE PTR [edx-0x39],ah
  4330a1:	leave  
  4330a2:	jp     0x4330f5
  4330a4:	mov    ebx,0x23f107d1
  4330a9:	sbb    DWORD PTR [ebx+0x5ea752cf],0x8
  4330b0:	pop    eax
  4330b1:	xchg   edx,eax
  4330b2:	push   ecx
  4330b3:	aas    
  4330b4:	ret    0x150c
  4330b7:	push   es
  4330b8:	mov    edx,0xa28beb01
  4330bd:	test   DWORD PTR [eax+0x60],edi
  4330c0:	mov    dl,0x7d
  4330c2:	sub    BYTE PTR [eax],0x9e
  4330c5:	in     al,0x7b
  4330c7:	cmp    BYTE PTR [ebx],ah
  4330c9:	sub    bh,dl
  4330cb:	inc    eax
  4330cc:	push   esi
  4330cd:	cmp    BYTE PTR [eax+ebx*2],ch
  4330d0:	leave  
  4330d1:	pop    ecx
  4330d2:	adc    BYTE PTR [ecx],dh
  4330d4:	xor    ebp,esp
  4330d6:	outs   dx,DWORD PTR ds:[esi]
  4330d7:	mov    ah,0xaf
  4330d9:	jne    0x433078
  4330db:	pop    ds
  4330dc:	xchg   edi,eax
  4330dd:	lods   eax,DWORD PTR ds:[esi]
  4330de:	push   ecx
  4330df:	inc    ebp
  4330e0:	inc    ecx
  4330e1:	push   es
  4330e2:	pushf  
  4330e3:	gs pop edi
  4330e5:	imul   edx,DWORD PTR [ebx-0x2f],0x2b369306
  4330ec:	sub    bl,BYTE PTR [esi]
  4330ee:	in     al,0x5c
  4330f0:	push   cs
  4330f1:	adc    BYTE PTR [ebx+0x3aeee245],0x6
  4330f8:	jo     0x43315e
  4330fa:	mov    ebx,0x46c7e6cb
  4330ff:	ret    0x6817
  433102:	xchg   edi,eax
  433103:	std    
  433104:	jg     0x4330f4
  433106:	adc    al,0xc2
  433108:	add    dl,ch
  43310a:	add    DWORD PTR [edi+0x24],eax
  43310d:	cmp    BYTE PTR [eax],bl
  43310f:	cli    
  433110:	add    DWORD PTR [eax],eax
  433112:	adc    DWORD PTR [ecx],eax
  433114:	add    BYTE PTR [eax],al
  433116:	xlat   BYTE PTR ds:[ebx]
  433117:	add    bl,BYTE PTR ds:0x533d70d0
  43311d:	gs mov al,0xa2
  433120:	cmp    BYTE PTR [edi-0x6ce815cc],dl
  433126:	ins    BYTE PTR es:[edi],dx
  433127:	inc    esi
  433128:	push   ebx
  433129:	pop    es
  43312a:	mov    WORD PTR [edi+ecx*4],ss
  43312d:	fild   DWORD PTR [eax]
  43312f:	jge    0x433155
  433131:	loopne 0x43312f
  433133:	mov    esi,0x98ad091
  433138:	mov    es,WORD PTR [edx]
  43313a:	jo     0x433156
  43313c:	clc    
  43313d:	or     esp,DWORD PTR [edx+0x4e60c1fe]
  433143:	adc    al,0x5d
  433145:	mov    ds:0xac1f8022,al
  43314a:	xor    al,0xd4
  43314c:	sar    DWORD PTR [edx+0x1a],cl
  43314f:	add    eax,0x17d3f00c
  433154:	mov    al,ds:0x7f557fa9
  433159:	push   es
  43315a:	sahf   
  43315b:	pop    ebp
  43315c:	ret    0x5f82
  43315f:	sti    
  433160:	(bad)  
  433161:	push   es
  433162:	mov    al,0xf8
  433164:	fldcw  WORD PTR [esi+0x5f6c2954]
  43316a:	mov    ch,0xa9
  43316c:	imul   dl
  43316e:	pop    es
  43316f:	dec    edi
  433170:	sbb    al,0xc
  433172:	stos   DWORD PTR es:[edi],eax
  433173:	pop    esp
  433174:	in     al,0x91
  433176:	rcl    DWORD PTR [esi+0x5d87f7ff],cl
  43317c:	inc    esi
  43317d:	dec    eax
  43317e:	test   DWORD PTR [ebp-0x1c],edi
  433181:	jae    0x43311d
  433183:	aam    0xac
  433185:	(bad)  
  433186:	enter  0x4b1e,0x0
  43318a:	repz push 0x74555a5b
  433190:	mov    al,0x9e
  433192:	mov    ch,0xe0
  433194:	mov    edx,0x6c473c29
  433199:	or     eax,edx
  43319b:	and    eax,0x28ec1939
  4331a0:	arpl   WORD PTR [ebx],sp
  4331a2:	jg     0x433148
  4331a4:	mov    BYTE PTR [ebx-0x76fff592],ch
  4331aa:	jne    0x4331d7
  4331ac:	adc    bl,BYTE PTR [eax]
  4331ae:	scas   eax,DWORD PTR es:[edi]
  4331af:	cmp    BYTE PTR [ebx],0xd6
  4331b2:	in     al,dx
  4331b3:	lds    edx,FWORD PTR ds:0x9435f22c
  4331b9:	xchg   DWORD PTR [ebx],eax
  4331bb:	dec    ecx
  4331bc:	pop    ebp
  4331bd:	lahf   
  4331be:	xor    edi,ecx
  4331c0:	enter  0xcae3,0x96
  4331c4:	iret   
  4331c5:	daa    
  4331c6:	or     edi,DWORD PTR [ebx+0x4d69f76a]
  4331cc:	push   ecx
  4331cd:	lods   eax,DWORD PTR ds:[esi]
  4331ce:	call   0x53e6715a
  4331d3:	cmp    cl,cl
  4331d5:	pop    ecx
  4331d6:	out    dx,eax
  4331d7:	lods   eax,DWORD PTR ds:[esi]
  4331d9:	jecxz  0x433207
  4331db:	(bad)  
  4331dc:	repz jg 0x4331a0
  4331df:	cli    
  4331e0:	sbb    eax,0xe91785a
  4331e5:	jns    0x4331da
  4331e7:	mov    ch,0x34
  4331e9:	loopne 0x433269
  4331eb:	rol    DWORD PTR [edx-0x6e543b2c],0x56
  4331f2:	fistp  QWORD PTR [edx+esi*1]
  4331f5:	push   cs
  4331f6:	push   ebp
  4331f7:	ins    DWORD PTR es:[edi],dx
  4331f8:	sub    cl,BYTE PTR [edx+0x6b68dd9a]
  4331fe:	sub    eax,edi
  433200:	mov    cl,0x3e
  433202:	mov    ecx,0xa224532f
  433207:	xchg   ecx,eax
  433208:	and    ebx,DWORD PTR [edi]
  43320a:	sub    eax,0x22bf89fa
  43320f:	mov    esi,0x3a7a5fb3
  433214:	push   eax
  433215:	shr    dl,cl
  433217:	or     al,al
  433219:	xchg   edx,eax
  43321a:	or     DWORD PTR [esi+0x2f0deed2],0xeca3b0ca
  433224:	call   0xa3b2:0x94e25f7f
  43322b:	mul    BYTE PTR [edi-0x3b712a0d]
  433231:	pop    esp
  433232:	ret    
  433233:	inc    ecx
  433234:	pop    ebp
  433235:	dec    edi
  433236:	mov    esp,0x19d51
  43323b:	adc    DWORD PTR [ecx],eax
  43323d:	add    BYTE PTR [eax],al
  43323f:	pop    edx
  433240:	ins    BYTE PTR es:[edi],dx
  433241:	push   ebx
  433242:	mov    BYTE PTR [esi+0x5],dh
  433245:	test   DWORD PTR ds:0xd0a06c8f,0x6cc07c32
  43324f:	inc    esp
  433250:	in     al,0xc9
  433252:	or     al,BYTE PTR [edi]
  433254:	fwait
  433255:	jbe    0x433265
  433257:	jge    0x43322c
  433259:	jmp    0xde50b7ed
  43325e:	pushf  
  43325f:	sub    eax,0x16f9e4af
  433264:	aas    
  433265:	pop    es
  433266:	fild   WORD PTR [edi+0x2]
  433269:	imul   ebp,DWORD PTR [ebp-0x12670141],0xe2ce4401
  433273:	pop    ds
  433274:	jae    0x4331fc
  433276:	mov    esp,0xdb5bfe3b
  43327b:	pop    eax
  43327c:	mov    ds:0xe8a72036,al
  433281:	inc    ebx
  433282:	push   esi
  433283:	mov    al,ds:0xd9debbff
  433288:	xlat   BYTE PTR ds:[ebx]
  433289:	cmp    DWORD PTR [esi+0x3],edi
  43328c:	daa    
  43328d:	in     eax,dx
  43328e:	jmp    0xc36c:0xd81f43c9
  433295:	add    al,BYTE PTR [eax+edx*8+0xf4d4fec]
  43329c:	push   eax
  43329d:	xchg   ebp,eax
  43329e:	inc    edx
  43329f:	gs sub ch,dh
  4332a2:	mov    ds:0xf6fffbc8,eax
  4332a7:	fstp   QWORD PTR [eax+0x74b9555]
  4332ad:	xor    eax,0x4ad8b92b
  4332b2:	and    BYTE PTR [ecx],al
  4332b4:	jne    0x43330b
  4332b6:	push   ebx
  4332b7:	addr16 add bh,ch
  4332ba:	imul   edx,DWORD PTR [eax-0x6ac25877],0x17
  4332c1:	xchg   ebp,eax
  4332c2:	test   esp,esp
  4332c4:	sbb    BYTE PTR [edx-0x2cb61b2f],ah
  4332ca:	ficomp WORD PTR [ebx+0x5c53dfd4]
  4332d1:	(bad)  
  4332d2:	sub    eax,0xc2e8f425
  4332d7:	rcr    DWORD PTR [edi],0xef
  4332da:	inc    esp
  4332db:	adc    BYTE PTR ds:0xc50ce4f9,bl
  4332e1:	push   esi
  4332e2:	mov    al,0xae
  4332e4:	cmp    BYTE PTR [edi],dh
  4332e6:	pop    edx
  4332e7:	call   0x5406:0xb282b81d
  4332ee:	sbb    edi,DWORD PTR [ebx]
  4332f0:	mov    dl,0x1
  4332f2:	rol    ebx,cl
  4332f4:	into   
  4332f5:	(bad)  
  4332f6:	je     0x433346
  4332f8:	xchg   esp,eax
  4332f9:	push   ebx
  4332fa:	mov    fs,WORD PTR [edx-0x46]
  4332fd:	pushf  
  4332fe:	aas    
  4332ff:	loope  0x43334e
  433301:	(bad)  
  433302:	in     eax,0xc3
  433304:	fdivr  st(1),st
  433306:	js     0x433292
  433308:	xchg   edi,eax
  433309:	lahf   
  43330a:	test   DWORD PTR [eax-0x5e],esi
  43330d:	cdq    
  43330e:	rcr    DWORD PTR [ecx],cl
  433310:	xchg   BYTE PTR [ecx-0x31],dh
  433313:	data16 movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  433315:	inc    ebp
  433316:	fld    TBYTE PTR [eax+eax*2-0x75b225c2]
  43331d:	add    BYTE PTR [edi+ecx*2+0x48],bh
  433321:	or     dl,bl
  433323:	xchg   DWORD PTR [ebx],esi
  433325:	mov    DWORD PTR [ebx],eax
  433327:	pop    edx
  433328:	adc    BYTE PTR [eax],bh
  43332a:	sbb    eax,0xf136c00d
  43332f:	clc    
  433330:	es cld 
  433332:	in     eax,0x3d
  433334:	shr    BYTE PTR [bp+si+0x7b],cl
  433338:	mov    ebp,0x329ada1
  43333d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43333e:	out    0x5,eax
  433340:	fld    DWORD PTR [esi+0x3e88ca51]
  433346:	dec    esi
  433347:	leave  
  433348:	xchg   esp,eax
  433349:	sti    
  43334a:	loop   0x4333c8
  43334c:	shl    BYTE PTR [edx+0x58],1
  43334f:	mov    ah,0xf
  433351:	pusha  
  433352:	imul   eax,DWORD PTR [ecx],0x6e6f096f
  433358:	and    ch,bl
  43335a:	xchg   edx,eax
  43335b:	dec    eax
  43335c:	call   0x6f5a7acb
  433361:	fild   WORD PTR [ecx]
  433363:	add    BYTE PTR [ecx],dl
  433365:	add    DWORD PTR [eax],eax
  433367:	add    BYTE PTR [edi+0x72],al
  43336a:	push   esp
  43336b:	test   BYTE PTR [ecx+eiz*8+0x7fc50b94],bh
  433372:	jae    0x4332ff
  433374:	retf   
  433375:	inc    esi
  433376:	loope  0x433322
  433378:	inc    edx
  433379:	pop    ds
  43337a:	and    al,0x57
  43337c:	xor    eax,0x2f714039
  433381:	push   ebp
  433382:	sbb    ecx,DWORD PTR [esi-0x7a]
  433385:	dec    ebx
  433386:	dec    ecx
  433387:	pop    ebx
  433388:	mov    ds:0xcd3907ea,al
  43338d:	cmp    al,0x4
  43338f:	mov    ?,ebx
  433391:	leave  
  433392:	xor    bh,dl
  433394:	inc    ebx
  433395:	cmp    BYTE PTR [ecx-0x77e97104],cl
  43339b:	es sti 
  43339d:	gs and eax,0xa4651d0f
  4333a3:	jbe    0x43338c
  4333a5:	clc    
  4333a6:	sub    eax,0x732ae2e6
  4333ab:	(bad)  
  4333ac:	mov    dl,0x96
  4333ae:	dec    ebp
  4333af:	loopne 0x433398
  4333b1:	push   es
  4333b2:	dec    edx
  4333b3:	scas   al,BYTE PTR es:[edi]
  4333b4:	pusha  
  4333b5:	mov    ch,0x43
  4333b7:	cmp    DWORD PTR [edx],edx
  4333b9:	clc    
  4333ba:	and    DWORD PTR [ebp-0x36dd9520],esp
  4333c0:	dec    ebp
  4333c1:	cdq    
  4333c2:	dec    ebp
  4333c3:	push   es
  4333c4:	aam    0x43
  4333c6:	arpl   WORD PTR [ebx-0x20],di
  4333c9:	jb     0x4333b0
  4333cb:	mov    edi,0x5c3f557f
  4333d0:	push   eax
  4333d1:	and    DWORD PTR [eax],0x2d
  4333d4:	mov    bl,0xed
  4333d6:	loop   0x43339d
  4333d8:	loope  0x433399
  4333da:	or     dh,BYTE PTR [edi+0x63c31d5b]
  4333e0:	push   cs
  4333e1:	mov    WORD PTR [esi+ebp*4],ss
  4333e4:	push   0x22cc7b70
  4333e9:	xchg   esi,eax
  4333ea:	stos   DWORD PTR es:[edi],eax
  4333eb:	cmp    ebx,ecx
  4333ed:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4333ee:	inc    ecx
  4333ef:	xlat   BYTE PTR ds:[ebx]
  4333f0:	mov    eax,ds:0x91919574
  4333f5:	xor    BYTE PTR [ecx+edx*8],0xd2
  4333f9:	cmc    
  4333fa:	repz sbb DWORD PTR [esp+esi*2],eax
  4333fe:	jmp    0x353ad17a
  433403:	mov    ah,0xce
  433405:	aad    0x79
  433407:	or     eax,0x36897986
  43340c:	sti    
  43340d:	es add ch,ah
  433410:	pop    ecx
  433411:	cmp    DWORD PTR [edx],ecx
  433413:	add    ebp,DWORD PTR [edx]
  433415:	xchg   edi,eax
  433416:	sub    DWORD PTR ds:[eax-0x1cab7132],edi
  43341d:	icebp  
  43341e:	cmp    eax,0xa6d6a5af
  433423:	popa   
  433424:	add    al,0x98
  433426:	lds    edi,FWORD PTR [esi]
  433428:	mov    dh,0x52
  43342a:	pop    esp
  43342b:	push   edi
  43342c:	pop    ds
  43342d:	test   eax,0xa122e11
  433432:	dec    edx
  433433:	aam    0x95
  433435:	lea    edi,[edx]
  433437:	outs   dx,DWORD PTR ds:[esi]
  433438:	or     edx,ebp
  43343a:	push   edi
  43343b:	jle    0x433456
  43343d:	xacquire lock add BYTE PTR [edx],bl
  433441:	mov    ebx,0x76a3aa02
  433446:	sub    al,0x5b
  433448:	cmc    
  433449:	jb     0x433476
  43344b:	xchg   ebx,eax
  43344c:	fimul  DWORD PTR [edi-0x4aa9c7]
  433452:	dec    esi
  433453:	mov    esp,0x8d223be4
  433458:	ins    DWORD PTR es:[edi],dx
  433459:	and    DWORD PTR [edi],0xe
  43345c:	ror    dh,cl
  43345e:	and    ch,BYTE PTR [edx-0x80]
  433461:	sub    DWORD PTR [ecx+0x50],ebp
  433464:	loope  0x433444
  433466:	test   DWORD PTR [edi-0x256c8431],eax
  43346c:	sub    ch,BYTE PTR [eax]
  43346e:	clc    
  43346f:	or     BYTE PTR [edi+ebp*4+0xa2941aa],0x39
  433477:	inc    ebp
  433478:	retf   
  433479:	retf   
  43347a:	xor    al,ah
  43347c:	dec    ecx
  43347d:	sti    
  43347e:	fldpi  
  433480:	mov    dl,0xc3
  433482:	xor    BYTE PTR [edi-0x2052a8ea],0x4
  433489:	jle    0x43348b
  43348b:	add    al,BYTE PTR [eax]
  43348d:	adc    DWORD PTR [ecx],eax
  43348f:	add    BYTE PTR [eax],al
  433491:	cmp    dl,dh
  433493:	jns    0x43346b
  433495:	lock xor DWORD PTR [eax-0x5b06b9ca],0xffffffd1
  43349d:	frstor ss:[edx-0x62c7543]
  4334a4:	leave  
  4334a5:	push   ds
  4334a6:	mov    ah,0x81
  4334a8:	mov    BYTE PTR [ecx*8+0x54b6dd55],ah
  4334af:	sub    al,0x85
  4334b1:	mov    es,WORD PTR [edi-0x12]
  4334b4:	sar    BYTE PTR [eax+0x2d],0x4f
  4334b8:	repnz pop edx
  4334ba:	test   DWORD PTR [ecx-0x3e],ecx
  4334bd:	ss ret 
  4334bf:	or     DWORD PTR [eax],ebp
  4334c1:	jmp    0x67e6f527
  4334c6:	pop    ss
  4334c7:	imul   ebp,DWORD PTR [ebx+eax*4-0x7b859d74],0xde84117d
  4334d2:	std    
  4334d3:	std    
  4334d4:	cdq    
  4334d5:	xchg   esi,eax
  4334d6:	jl     0x433536
  4334d8:	and    al,ah
  4334da:	inc    edx
  4334db:	std    
  4334dc:	pop    esi
  4334dd:	jns    0x433537
  4334df:	into   
  4334e0:	lods   eax,DWORD PTR ds:[esi]
  4334e1:	bound  edx,QWORD PTR [ebx-0x50]
  4334e4:	scas   eax,DWORD PTR es:[edi]
  4334e5:	sub    al,BYTE PTR [ebx+ebp*4+0x4de226e3]
  4334ec:	rol    ah,1
  4334ee:	repz adc DWORD PTR [ebx-0xa57d97e],ecx
  4334f5:	push   eax
  4334f6:	outs   dx,DWORD PTR ds:[esi]
  4334f7:	cwde   
  4334f8:	and    BYTE PTR [edx-0xec06b36],dl
  4334fe:	pop    edx
  4334ff:	mov    ebx,0xef7bbccd
  433504:	push   ecx
  433505:	setno  BYTE PTR [ebx]
  433508:	mov    esp,0xa0e592
  43350d:	in     al,0x1b
  43350f:	jle    0x43352e
  433511:	xchg   ebx,eax
  433512:	aam    0xeb
  433514:	push   esi
  433515:	je     0x43352b
  433517:	stos   DWORD PTR es:[edi],eax
  433518:	adc    dl,BYTE PTR [esi-0x7fdd78bd]
  43351e:	sub    bl,ah
  433520:	mov    eax,ds:0xf89e7c63
  433525:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  433526:	adc    esp,DWORD PTR [ebx]
  433528:	or     al,0xcc
  43352a:	dec    edi
  43352b:	xchg   ebx,eax
  43352c:	fs pop ds
  43352e:	test   DWORD PTR [ebx+0x20],eax
  433531:	popa   
  433532:	loope  0x43354d
  433534:	loope  0x433534
  433536:	push   ds
  433537:	adc    ah,cl
  433539:	push   0xd488f51c
  43353e:	and    eax,0x18d49515
  433543:	xchg   edi,eax
  433544:	xlat   BYTE PTR ds:[ebx]
  433545:	mov    BYTE PTR [ebx+0x33],dh
  433548:	and    eax,0xcad90651
  43354d:	jnp    0x43351f
  43354f:	test   DWORD PTR [edx],0x987ad9f1
  433555:	xchg   DWORD PTR [ebx-0x47e531c2],ebp
  43355b:	pop    eax
  43355c:	mov    al,ds:0x88403b03
  433561:	mov    ecx,0xf052bb7c
  433566:	add    edi,DWORD PTR [ecx+0x7e]
  433569:	into   
  43356a:	xor    eax,0xe5f716cb
  43356f:	mov    bl,0x82
  433571:	scas   al,BYTE PTR es:[edi]
  433572:	sbb    DWORD PTR [ebx+edx*4+0x53],ebp
  433576:	(bad)  
  433577:	shl    BYTE PTR [edi+esi*2],1
  43357a:	push   ebx
  43357b:	cwde   
  43357c:	inc    eax
  43357d:	cli    
  43357e:	mov    DWORD PTR [ecx+eax*8],esi
  433581:	xchg   esi,eax
  433583:	sbb    BYTE PTR [ecx+0x6e52e14],cl
  433589:	sbb    DWORD PTR [esi+0x260fb784],eax
  43358f:	cmp    ch,0xa5
  433592:	ins    BYTE PTR es:[edi],dx
  433593:	sbb    edx,ebx
  433595:	mov    ds:0x66d64b64,al
  43359a:	bound  edx,QWORD PTR [edx+0x5b]
  43359d:	jge    0x4335cf
  43359f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4335a0:	mov    ebx,0xe460fbd0
  4335a5:	lods   eax,DWORD PTR ds:[esi]
  4335a6:	jmp    FWORD PTR [ebp-0x39418905]
  4335ac:	aam    0x30
  4335ae:	cmp    ch,BYTE PTR [ebx-0x92245b]
  4335b4:	add    DWORD PTR [eax],eax
  4335b6:	adc    DWORD PTR [ecx],eax
  4335b8:	add    BYTE PTR [eax],al
  4335ba:	push   esp
  4335bb:	or     bl,bh
  4335bd:	and    BYTE PTR [edi-0x5e960906],ah
  4335c3:	jne    0x4335d9
  4335c5:	out    0x38,eax
  4335c7:	dec    edx
  4335c8:	pop    ds
  4335c9:	das    
  4335ca:	into   
  4335cb:	js     0x433632
  4335cd:	inc    ecx
  4335ce:	ss xor al,0xe7
  4335d1:	push   ss
  4335d2:	mov    al,0x77
  4335d4:	mov    dh,0x0
  4335d6:	test   eax,0xab693e95
  4335db:	test   eax,0x5a3316ad
  4335e0:	push   esi
  4335e1:	pop    eax
  4335e2:	add    DWORD PTR ds:0x9304927f,eax
  4335e8:	dec    edi
  4335e9:	inc    esp
  4335ea:	dec    ecx
  4335eb:	jp     0x43365c
  4335ed:	jns    0x433575
  4335ef:	inc    ebp
  4335f0:	repnz sbb bh,BYTE PTR [eax+edi*4+0x34c5525a]
  4335f8:	pop    ds
  4335f9:	and    al,0x7
  4335fb:	add    BYTE PTR cs:[ecx],0x87
  4335ff:	push   ebp
  433600:	sahf   
  433601:	sti    
  433602:	xchg   edi,eax
  433603:	mov    ah,0x1a
  433605:	ret    0x190e
  433608:	aas    
  433609:	mov    edi,0x3e34bb32
  43360e:	add    ebp,DWORD PTR [edi+0x5d]
  433611:	adc    cl,al
  433613:	loope  0x43365e
  433615:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  433617:	mov    ah,0x99
  433619:	in     al,0x89
  43361b:	dec    DWORD PTR [esp+edi*2+0x72]
  43361f:	cmc    
  433620:	push   0xffffffc8
  433622:	or     edi,DWORD PTR [ecx]
  433624:	inc    esi
  433625:	push   0xffffff9b
  433627:	mov    al,0x5
  433629:	push   esp
  43362a:	mov    ebx,0xa5fbf81e
  43362f:	xchg   DWORD PTR [eax],ebp
  433631:	jo     0x4335c8
  433633:	xchg   ebp,eax
  433634:	aaa    
  433635:	mov    dh,BYTE PTR [edx]
  433637:	in     al,0x8c
  433639:	stos   DWORD PTR es:[edi],eax
  43363a:	jbe    0x433684
  43363c:	sbb    al,0xb6
  43363e:	mov    eax,0x7b3e4242
  433643:	inc    edx
  433644:	outs   dx,BYTE PTR ds:[esi]
  433645:	xchg   esp,eax
  433646:	inc    ecx
  433647:	inc    edi
  433648:	or     eax,0x1a548ed
  43364d:	xor    dl,BYTE PTR [edx+0x59]
  433650:	add    eax,0xfbcf7252
  433655:	xor    al,0xfd
  433657:	jmp    0x433621
  433659:	xchg   ebx,eax
  43365a:	and    esp,0x70c1b154
  433660:	inc    ebp
  433661:	xchg   esp,eax
  433662:	cmp    BYTE PTR [edx+0x5],ch
  433665:	sub    BYTE PTR [esi+edx*4],dl
  433668:	fmul   QWORD PTR [ecx+0x4e]
  43366b:	ficom  DWORD PTR [ecx+0x7b]
  43366e:	push   ds
  43366f:	xor    BYTE PTR [ecx],ch
  433671:	xor    BYTE PTR [ebx-0x33],bl
  433674:	dec    esp
  433675:	pusha  
  433676:	(bad)  
  433677:	imul   esi,DWORD PTR [eax+0x6d07c417],0xe5a5309c
  433681:	push   eax
  433682:	inc    dl
  433684:	scas   al,BYTE PTR es:[edi]
  433685:	pop    ebp
  433686:	neg    cl
  433688:	addr16 fs pushf 
  43368b:	pushf  
  43368c:	out    0x4,eax
  43368e:	mov    DWORD PTR [edi-0x51c52519],esi
  433694:	inc    esp
  433695:	test   DWORD PTR [ebp-0x2f535525],0x1f319113
  43369f:	cli    
  4336a0:	mov    ah,0xd3
  4336a2:	mov    bl,0x7f
  4336a4:	mov    gs,edx
  4336a6:	fild   DWORD PTR [esi]
  4336a8:	xchg   edi,eax
  4336a9:	jns    0x433632
  4336ab:	inc    edx
  4336ac:	out    0xfd,eax
  4336ae:	add    bl,BYTE PTR [ebp-0x5b]
  4336b1:	clc    
  4336b2:	fs addr16 ret 0x1b79
  4336b7:	xchg   edx,eax
  4336b8:	mov    ds:0x9deaae1c,eax
  4336bd:	xchg   BYTE PTR [esi+0x6684d374],ah
  4336c3:	mov    esi,0x61327cfd
  4336c8:	idiv   ch
  4336ca:	push   edi
  4336cb:	repnz push eax
  4336cd:	push   ebx
  4336ce:	ret    0xc3f3
  4336d1:	repz jo 0x43368c
  4336d4:	adc    al,0xa1
  4336d6:	pop    ecx
  4336d7:	push   es
  4336d8:	push   ds
  4336d9:	adc    eax,0x1fe5cdd
  4336de:	add    BYTE PTR [ecx],dl
  4336e0:	add    DWORD PTR [eax],eax
  4336e2:	add    cl,bl
  4336e4:	pop    ds
  4336e5:	(bad)  
  4336e6:	cmp    ah,BYTE PTR [ebp+edi*8-0x51]
  4336ea:	cmp    eax,0xe096b6f6
  4336ef:	xchg   ebp,eax
  4336f0:	inc    esp
  4336f1:	sub    edx,DWORD PTR [eax+edx*8+0x59]
  4336f5:	push   edi
  4336f6:	and    al,BYTE PTR [ebp-0x36eb6a50]
  4336fc:	cmp    al,0xdf
  4336fe:	std    
  4336ff:	dec    eax
  433700:	or     eax,0x1d33ef49
  433705:	and    al,0xb8
  433707:	call   0x78372272
  43370c:	pop    eax
  43370d:	sar    dl,cl
  43370f:	scas   eax,DWORD PTR es:[edi]
  433710:	xor    al,0x1
  433712:	xchg   esi,eax
  433713:	mov    ecx,0x236a0a61
  433718:	pusha  
  433719:	in     eax,dx
  43371a:	arpl   WORD PTR ds:0x8c948e32,cx
  433720:	stos   WORD PTR es:[edi],ax
  433722:	pshufw mm5,QWORD PTR [eax+0x62ab626e],0x63
  43372a:	out    0x7b,eax
  43372c:	add    DWORD PTR [eax+0x347ffb2d],ebp
  433732:	jmp    0xdc28:0xa1fcd0fc
  433739:	jns    0x433772
  43373b:	mov    al,0x16
  43373d:	ror    DWORD PTR [edi],cl
  43373f:	je     0x433719
  433741:	xlat   BYTE PTR ds:[ebx]
  433742:	cwde   
  433743:	jge    0x4337b6
  433745:	les    edx,FWORD PTR [eax+0x46]
  433748:	nop
  433749:	push   ebp
  43374a:	adc    dl,BYTE PTR [ecx]
  43374c:	call   0xad7f912e
  433751:	inc    esi
  433752:	cld    
  433753:	in     al,dx
  433754:	stos   DWORD PTR es:[edi],eax
  433755:	dec    esp
  433756:	mov    esp,0x78751692
  43375b:	in     eax,dx
  43375c:	lea    edi,[esi+ebp*4+0x49099617]
  433763:	fsub   st,st(3)
  433765:	or     BYTE PTR [edx-0x48],bl
  433768:	dec    esi
  433769:	push   cs
  43376a:	lods   eax,DWORD PTR ds:[esi]
  43376b:	mov    cl,bl
  43376d:	out    0x1f,al
  43376f:	add    ch,BYTE PTR ds:0xaa504def
  433775:	stos   DWORD PTR es:[edi],eax
  433776:	ds lahf 
  433778:	dec    eax
  433779:	loopne 0x43373f
  43377b:	ror    BYTE PTR [edi],0x85
  43377e:	jg     0x4337bc
  433780:	fmulp  st(6),st
  433782:	and    al,0xb9
  433784:	std    
  433785:	rcr    BYTE PTR [ecx-0x32],cl
  433788:	jo     0x433794
  43378a:	lock xor ecx,ebx
  43378d:	adc    bl,cl
  43378f:	add    edx,DWORD PTR [esi]
  433791:	push   esp
  433792:	push   edx
  433793:	cmp    BYTE PTR [ebx+0x5c],ch
  433796:	out    0xe3,eax
  433798:	dec    ebp
  433799:	inc    esi
  43379a:	add    eax,DWORD PTR [edx+0x20]
  43379d:	jl     0x433780
  43379f:	sbb    cl,BYTE PTR [esi-0x58bd84c0]
  4337a5:	pushf  
  4337a6:	in     al,0x24
  4337a8:	cld    
  4337a9:	sbb    al,0xd7
  4337ab:	push   edx
  4337ac:	test   al,0x92
  4337ae:	cmp    esp,DWORD PTR [eax+0x2361278a]
  4337b4:	dec    edx
  4337b5:	cmp    esi,esi
  4337b7:	adc    DWORD PTR [ecx+0x7f62e378],0xfd09b8a6
  4337c1:	jecxz  0x43379b
  4337c3:	mov    esi,0xff3c13aa
  4337c8:	imul   edx,DWORD PTR [esi+0x67ac2fd6],0x8b30c5fb
  4337d2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4337d3:	mov    ebx,0x49945511
  4337d8:	sub    dh,bh
  4337da:	cwde   
  4337db:	mov    BYTE PTR [ecx+edi*8-0x44],al
  4337df:	std    
  4337e0:	pop    ebx
  4337e1:	addr16 mov ebp,0xa4658320
  4337e7:	(bad)  
  4337e8:	cmp    DWORD PTR [ecx-0x61],esp
  4337eb:	repnz sbb ch,bl
  4337ee:	int    0xd2
  4337f0:	mov    bh,0x29
  4337f2:	mov    bh,0x7e
  4337f4:	scas   eax,DWORD PTR es:[edi]
  4337f5:	adc    esp,DWORD PTR [eax-0x6b]
  4337f8:	cld    
  4337f9:	idiv   edi
  4337fb:	cmp    ebx,DWORD PTR [ecx+0x71146a92]
  433801:	arpl   WORD PTR [ebx+0x64],ax
  433804:	sbb    eax,0x110001aa
  433809:	add    DWORD PTR [eax],eax
  43380b:	add    BYTE PTR [esi+0x5a],ah
  43380e:	imul   edi,DWORD PTR [edx-0x4b83080b],0xffffff96
  433815:	xor    al,0x60
  433817:	lock push 0xffffffc1
  43381a:	stc    
  43381b:	jnp    0x433819
  43381d:	inc    esp
  43381e:	rol    dh,1
  433820:	mov    ebx,0xb6cffb75
  433825:	out    dx,eax
  433826:	xor    eax,0xd74cf9c8
  43382b:	or     BYTE PTR ds:[eax+0x0],dl
  43382f:	push   ebp
  433830:	push   esp
  433831:	test   eax,0x20d9ccdb
  433836:	xlat   BYTE PTR ds:[ebx]
  433837:	adc    esi,0xc7e89f4c
  43383d:	scas   eax,DWORD PTR es:[edi]
  43383e:	sbb    BYTE PTR [esi-0x71],0x3e
  433842:	inc    ecx
  433843:	mov    edx,0x59d68ed5
  433848:	cmp    cl,BYTE PTR [edi-0x12854b1f]
  43384e:	les    ebx,FWORD PTR [ebx-0x229ae6ed]
  433854:	fs loopne 0x433880
  433857:	sub    BYTE PTR ds:0x972d1fe9,bh
  43385d:	icebp  
  43385e:	jecxz  0x4337fc
  433860:	or     DWORD PTR [eax+0x6d],ecx
  433863:	arpl   WORD PTR [edx],bp
  433865:	jbe    0x4337e8
  433867:	cmp    ebp,esp
  433869:	pushf  
  43386a:	mov    ebp,0x6076248e
  43386f:	jmp    0x2059:0xfc60e416
  433876:	call   0x29b5:0x733bcbe7
  43387d:	mov    al,ds:0x1f77a902
  433882:	pop    esp
  433883:	imul   ecx,DWORD PTR [eax],0x512cfdae
  433889:	jle    0x4338c0
  43388b:	or     eax,0xbfbd7a96
  433890:	lods   al,BYTE PTR ds:[esi]
  433891:	test   WORD PTR [edx+0x70],si
  433895:	sub    BYTE PTR [eax],bl
  433897:	jmp    DWORD PTR [ecx+0x34df1353]
  43389d:	mov    es,WORD PTR [ebp+0x51]
  4338a0:	xchg   BYTE PTR es:[esi+ebp*8],bl
  4338a4:	imul   DWORD PTR [eax]
  4338a6:	mov    ebp,0xf9d819e
  4338ab:	mov    ah,0xa5
  4338ad:	adc    BYTE PTR [edx+0x2a],ch
  4338b0:	in     al,dx
  4338b1:	aad    0x9f
  4338b3:	pmulhw mm2,QWORD PTR [ecx+ebx*1-0x1]
  4338b8:	adc    eax,0xe23246d
  4338bd:	ret    0xec27
  4338c0:	out    dx,al
  4338c1:	out    0xc1,eax
  4338c3:	xchg   edi,eax
  4338c4:	and    DWORD PTR [ebp-0x7690b524],0x6bf4dd89
  4338ce:	mov    ?,WORD PTR [ebx]
  4338d0:	popf   
  4338d1:	mov    al,fs:0x46e55c1d
  4338d7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4338d8:	stc    
  4338d9:	sub    DWORD PTR [eax-0x35d1899d],ecx
  4338df:	or     eax,0x110220e1
  4338e4:	pop    ebp
  4338e5:	jmp    0xdffd3906
  4338ea:	push   es
  4338eb:	cdq    
  4338ec:	(bad)  
  4338ed:	addr16 and al,0xb4
  4338f0:	jle    0x43387e
  4338f2:	inc    esi
  4338f3:	les    ebp,FWORD PTR [edx+0x7790a621]
  4338f9:	inc    edi
  4338fa:	mov    dh,0x8c
  4338fc:	jnp    0x4338f4
  4338fe:	and    DWORD PTR [esi+0x3063fe58],ebx
  433904:	or     ah,BYTE PTR [esi]
  433906:	add    edx,DWORD PTR [ecx]
  433908:	cli    
  433909:	xchg   ebp,eax
  43390a:	movs   BYTE PTR es:[di],BYTE PTR ds:[si]
  43390c:	stos   BYTE PTR es:[edi],al
  43390d:	stc    
  43390e:	dec    esp
  43390f:	scas   al,BYTE PTR es:[edi]
  433910:	outs   dx,BYTE PTR ds:[esi]
  433911:	mov    dh,0x4a
  433913:	test   al,0x9d
  433915:	shl    BYTE PTR [ebp-0x1e1e324f],cl
  43391b:	loopne 0x433957
  43391d:	push   ebp
  43391f:	mov    dh,0x6f
  433921:	mov    esi,0xaef5ff6f
  433926:	xor    eax,0xdc6427eb
  43392b:	rcl    ecx,1
  43392d:	cs stos DWORD PTR es:[edi],eax
  43392f:	add    DWORD PTR [eax],eax
  433931:	adc    DWORD PTR [ecx],eax
  433933:	add    BYTE PTR [eax],al
  433935:	loopne 0x4338fb
  433937:	das    
  433938:	mov    al,0xc2
  43393a:	sbb    al,0x75
  43393c:	pop    esp
  43393d:	adc    DWORD PTR [edx],eax
  43393f:	mov    esp,0xecbc21d8
  433944:	push   esp
  433945:	cmp    dl,ah
  433947:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  433948:	inc    ecx
  433949:	fsubr  DWORD PTR [ebx+0x66]
  43394c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  43394d:	mov    DWORD PTR [ebp+ebx*2+0x12],eax
  433951:	jle    0x43396a
  433953:	xor    al,BYTE PTR [edi-0x32]
  433956:	pop    ds
  433957:	dec    edi
  433958:	cwde   
  433959:	mov    ds:0xce710477,eax
  43395e:	add    eax,0xd7912d98
  433963:	jge    0x4339c2
  433965:	mov    edx,0xdf7435ef
  43396a:	retf   
  43396b:	jmp    0x89b:0xbbd91a8
  433972:	push   ss
  433973:	popf   
  433974:	std    
  433975:	mov    eax,0xaf60267b
  43397a:	mov    WORD PTR [ebp+0x689ef3de],es
  433980:	ficomp DWORD PTR [esi+0x41b177c]
  433986:	mov    eax,0x265407f
  43398b:	in     eax,0x75
  43398d:	or     esp,DWORD PTR [ebx+eax*2]
  433990:	(bad)  
  433991:	xchg   ebx,eax
  433992:	cmp    BYTE PTR [esi+0x3eec7754],ah
  433998:	xlat   BYTE PTR ds:[ebx]
  433999:	dec    edx
  43399a:	dec    edx
  43399b:	add    al,0x69
  43399d:	fwait
  43399e:	loop   0x43394c
  4339a0:	add    DWORD PTR [edi],ebx
  4339a2:	daa    
  4339a3:	mov    DWORD PTR [edx],ebp
  4339a5:	lock dec ebx
  4339a7:	mov    ebp,0x2eb5875c
  4339ac:	mov    dl,0x44
  4339ae:	shr    BYTE PTR [edx+ebx*2],cl
  4339b1:	imul   eax,edx,0x24357da5
  4339b7:	fwait
  4339b8:	idiv   DWORD PTR [ecx+0x76b9674c]
  4339be:	push   esi
  4339bf:	pop    ebp
  4339c0:	shr    DWORD PTR [ecx],1
  4339c2:	arpl   ax,ax
  4339c4:	push   ds
  4339c5:	push   0xfffffffa
  4339c7:	dec    ebx
  4339c8:	cmp    esi,DWORD PTR [ecx]
  4339ca:	jns    0x4339a0
  4339cc:	add    BYTE PTR ds:0x29abb7c7,bl
  4339d2:	xor    ebp,DWORD PTR [edx-0xd]
  4339d5:	xor    eax,0x5fea7222
  4339da:	push   edi
  4339db:	sub    eax,0xe5f1679b
  4339e0:	mov    dh,0x73
  4339e2:	(bad)
  4339e5:	fisttp DWORD PTR [edi]
  4339e7:	inc    edi
  4339e8:	outs   dx,BYTE PTR ds:[esi]
  4339e9:	neg    BYTE PTR [ecx+0x1]
  4339ec:	test   eax,0xc19018c8
  4339f1:	cdq    
  4339f2:	gs icebp 
  4339f4:	adc    DWORD PTR [eax+0x2596397f],esp
  4339fa:	sti    
  4339fb:	icebp  
  4339fc:	ret    
  4339fd:	cli    
  4339fe:	pop    edx
  4339ff:	mov    bl,0xd3
  433a01:	sbb    eax,0xc9212a2a
  433a06:	xchg   ecx,eax
  433a07:	jbe    0x4339ec
  433a09:	push   ss
  433a0a:	sar    DWORD PTR [edx+0x68657f9e],cl
  433a10:	cli    
  433a11:	pop    edx
  433a12:	mov    edi,0x4efce70
  433a17:	push   ss
  433a18:	mov    dl,0xdb
  433a1a:	shl    BYTE PTR ds:0xb1ea7c6a,cl
  433a20:	imul   eax,DWORD PTR [edx],0x77
  433a23:	pop    eax
  433a24:	and    ebp,DWORD PTR [ebx+0x42ad0224]
  433a2a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  433a2b:	cmp    BYTE PTR [ebp+0x6482c491],bl
  433a31:	rcr    DWORD PTR [edi+0xe081210],0xd3
  433a38:	mov    dh,BYTE PTR [esi]
  433a3a:	mov    dl,0x39
  433a3c:	xlat   BYTE PTR ds:[ebx]
  433a3d:	daa    
  433a3e:	loop   0x433a3a
  433a40:	les    edx,FWORD PTR [ebp+0x15]
  433a43:	data16 je 0x433a41
  433a46:	retf   0xa1a9
  433a49:	call   0xf50d:0xf9fb9ae3
  433a50:	ror    BYTE PTR [edx-0x6f],0xc3
  433a54:	xor    ch,BYTE PTR [edi+ebx*2-0x32]
  433a58:	add    DWORD PTR [eax],eax
  433a5a:	adc    DWORD PTR [ecx],eax
  433a5c:	add    BYTE PTR [eax],al
  433a5e:	cmp    edx,DWORD PTR [ebp+0x1613e6f2]
  433a64:	jg     0x4339fc
  433a66:	repz dec esi
  433a68:	mov    ah,BYTE PTR [ebp+0x1c]
  433a6b:	ret    0x65ba
  433a6e:	add    edx,edi
  433a70:	and    DWORD PTR [ebx+0x40],edi
  433a73:	fld    QWORD PTR [ecx-0x12]
  433a76:	shl    BYTE PTR [esi-0x27b2068f],1
  433a7c:	jo     0x433a5e
  433a7e:	arpl   di,dx
  433a80:	mov    ecx,DWORD PTR [esi-0x57]
  433a83:	inc    edi
  433a84:	mov    eax,ds:0x76158e21
  433a89:	mov    edi,0x4ae492b0
  433a8e:	scas   al,BYTE PTR es:[edi]
  433a8f:	push   ebx
  433a90:	out    0x22,eax
  433a92:	mov    esi,edi
  433a94:	sub    DWORD PTR [eax+0x695c864e],ebp
  433a9a:	test   cl,dl
  433a9c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  433a9d:	inc    esi
  433a9e:	cs jns 0x433a7d
  433aa1:	(bad)  
  433aa2:	fisttp DWORD PTR [eax]
  433aa4:	jnp    0x433a7b
  433aa6:	dec    eax
  433aa7:	hlt    
  433aa8:	jb     0x433a88
  433aaa:	add    ebp,ebx
  433aac:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  433aad:	cs adc bh,cl
  433ab0:	mov    al,0x60
  433ab2:	cli    
  433ab3:	ins    DWORD PTR es:[edi],dx
  433ab4:	sub    edi,DWORD PTR [eax]
  433ab6:	inc    eax
  433ab7:	mov    ch,0x63
  433ab9:	xchg   esi,eax
  433aba:	cmc    
  433abb:	mov    dh,0x90
  433abd:	or     DWORD PTR [ebp+0x71],ecx
  433ac0:	frstor [esi+0x69]
  433ac3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  433ac4:	mov    ch,0x41
  433ac6:	cld    
  433ac7:	xor    BYTE PTR [edx+0x246ae241],0xe6
  433ace:	test   DWORD PTR [ebp+0x59463a71],esi
  433ad4:	push   edx
  433ad5:	das    
  433ad6:	int3   
  433ad7:	xor    DWORD PTR [ecx],ebp
  433ad9:	and    bl,al
  433adb:	mov    eax,ds:0xeb19a3e2
  433ae0:	stos   DWORD PTR es:[edi],eax
  433ae1:	popf   
  433ae2:	jbe    0x433b47
  433ae4:	cmp    esi,eax
  433ae6:	lahf   
  433ae7:	xlat   BYTE PTR ds:[ebx]
  433ae8:	ins    DWORD PTR es:[edi],dx
  433ae9:	fisub  WORD PTR [ebx]
  433aeb:	(bad)  [edi]
  433aed:	adc    dh,0x71
  433af0:	jbe    0x433ab4
  433af2:	inc    ebp
  433af3:	xor    esi,DWORD PTR [ebp-0x47f94287]
  433af9:	pop    esp
  433afa:	pop    edi
  433afb:	xchg   edx,eax
  433afc:	out    dx,al
  433afd:	lahf   
  433afe:	lds    esi,FWORD PTR [esi]
  433b00:	arpl   ax,di
  433b02:	sbb    DWORD PTR [ebx-0x61],ebx
  433b05:	jne    0x433aeb
  433b07:	adc    BYTE PTR [ebx-0x37d684f5],ah
  433b0d:	mov    esi,0xadd4404e
  433b12:	std    
  433b13:	imul   ecx,DWORD PTR [ebx-0x24],0x334ace79
  433b1a:	js     0x433ac8
  433b1c:	dec    eax
  433b1d:	cld    
  433b1e:	lea    esi,[ebp-0x59]
  433b21:	cmp    DWORD PTR [edi-0x1],ebp
  433b24:	pushf  
  433b25:	mov    eax,ds:0xa75109e5
  433b2a:	and    al,0x95
  433b2c:	xchg   BYTE PTR [esi+0x639dc4fc],dl
  433b32:	pusha  
  433b33:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  433b34:	and    eax,0x21889149
  433b39:	jbe    0x433af7
  433b3b:	stc    
  433b3c:	and    al,0x11
  433b3e:	in     eax,0x91
  433b40:	(bad)  
  433b42:	fs call 0xc246:0x7f1e5058
  433b4a:	and    eax,0x98bab17a
  433b4f:	hlt    
  433b50:	push   esp
  433b51:	push   ss
  433b52:	aam    0x84
  433b54:	add    edx,ebp
  433b56:	push   ss
  433b57:	xchg   edx,eax
  433b58:	es mov edx,0xc539f4a9
  433b5e:	(bad)  
  433b5f:	in     eax,dx
  433b60:	adc    eax,0x8ebe7f53
  433b65:	(bad)  
  433b66:	in     al,dx
  433b67:	sbb    DWORD PTR [eax+0xa],0x12
  433b6b:	scas   al,BYTE PTR es:[edi]
  433b6c:	mul    DWORD PTR [ecx]
  433b6e:	addr16 jg 0x433b58
  433b71:	jmp    0x6cef:0x7f9dfa91
  433b78:	lods   eax,DWORD PTR ds:[esi]
  433b79:	mov    esp,0x9397459f
  433b7e:	pop    ss
  433b7f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  433b80:	mov    ds:0x1110001,al
  433b85:	add    BYTE PTR [eax],al
  433b87:	push   ebp
  433b88:	or     al,0xe9
  433b8a:	mov    ah,0xd8
  433b8c:	xchg   esi,eax
  433b8d:	enter  0x6ca4,0x5e
  433b91:	add    DWORD PTR [ebx],esi
  433b93:	xor    edx,ebx
  433b95:	addr16 sbb al,0xd4
  433b98:	fs push 0x20
  433b9b:	xor    ebp,DWORD PTR [edx+0x45]
  433b9e:	shr    BYTE PTR [edi-0x3ce1e81c],cl
  433ba4:	cmc    
  433ba5:	xor    bl,BYTE PTR [ecx+0x55]
  433ba8:	fldenv [ecx]
  433baa:	jno    0x433bce
  433bac:	lds    ecx,FWORD PTR [esi]
  433bae:	jmp    DWORD PTR [eax-0x75a8106a]
  433bb4:	sbb    al,BYTE PTR [ebx-0x569d559e]
  433bba:	jle    0x433b9d
  433bbc:	std    
  433bbd:	jg     0x433b69
  433bbf:	je     0x433c0a
  433bc1:	(bad)  
  433bc3:	push   ds
  433bc4:	in     al,0x97
  433bc6:	dec    ecx
  433bc7:	mov    bl,bh
  433bc9:	leave  
  433bca:	xchg   BYTE PTR [edi+0x37],cl
  433bcd:	push   es
  433bce:	jo     0x433bd8
  433bd0:	outs   dx,BYTE PTR ds:[esi]
  433bd1:	hlt    
  433bd2:	or     DWORD PTR [esi],ebx
  433bd4:	jge    0x433bf6
  433bd6:	pop    edx
  433bd7:	add    edx,0x11
  433bda:	and    eax,ebp
  433bdc:	sbb    BYTE PTR [ecx],bh
  433bde:	and    bl,bh
  433be0:	sbb    eax,0x43536ba3
  433be5:	lods   al,BYTE PTR ds:[esi]
  433be6:	xor    al,0x60
  433be8:	mov    ss,WORD PTR [ebx-0x5a]
  433beb:	mov    eax,0xd53da51d
  433bf0:	xchg   esp,eax
  433bf1:	cmp    bh,cl
  433bf3:	jle    0x433c06
  433bf5:	pop    edx
  433bf6:	rep outs dx,DWORD PTR ds:[esi]
  433bf8:	gs popf 
  433bfa:	push   0xc563be3f
  433bff:	lock adc DWORD PTR [edx],0x2e40afb3
  433c06:	push   ebx
  433c07:	sbb    esp,DWORD PTR [ecx+0x19a72bad]
  433c0d:	push   edi
  433c0e:	xchg   esp,eax
  433c0f:	enter  0x5c2f,0x10
  433c13:	pop    ebx
  433c14:	pop    ds
  433c15:	pushf  
  433c16:	and    bh,dh
  433c18:	lahf   
  433c19:	or     al,0x6
  433c1b:	jg     0x433ba5
  433c1d:	adc    eax,0x84e3b64f
  433c22:	cmp    DWORD PTR [ebp+0x5f2b2ae5],ebp
  433c28:	sub    bl,BYTE PTR [edi]
  433c2a:	xchg   esp,eax
  433c2b:	call   0x7c87:0xb192d25e
  433c32:	in     al,0x6f
  433c34:	push   0xffffffda
  433c36:	mov    eax,DWORD PTR [edx+ebx*2]
  433c39:	(bad)  
  433c3a:	mov    WORD PTR [ecx+ebp*4],?
  433c3d:	pop    eax
  433c3e:	cmp    DWORD PTR [ebx],ebx
  433c40:	push   edi
  433c41:	push   0xffffffda
  433c43:	out    0x77,al
  433c45:	mov    esi,DWORD PTR [ecx]
  433c47:	and    eax,0xa4739000
  433c4c:	(bad)  
  433c4d:	jb     0x433c5b
  433c4f:	js     0x433ca3
  433c51:	pop    ss
  433c52:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  433c53:	vcvtsi2ss xmm5,xmm7,DWORD PTR [ecx]
  433c57:	jne    0x433c6b
  433c59:	mov    DWORD PTR [eax],0xc44c667e
  433c5f:	sbb    al,0xc4
  433c61:	ins    BYTE PTR es:[edi],dx
  433c62:	es jo  0x433c7b
  433c65:	fs push esi
  433c67:	stc    
  433c68:	int3   
  433c69:	retf   0x80a7
  433c6c:	add    al,0x43
  433c6e:	mov    esi,0x13bcb716
  433c73:	dec    BYTE PTR [edx]
  433c75:	jo     0x433cea
  433c77:	stos   BYTE PTR es:[edi],al
  433c78:	bound  esp,QWORD PTR [ecx+0x7f]
  433c7b:	xchg   ebx,eax
  433c7c:	mov    BYTE PTR [esi+0x570f0aa4],bl
  433c82:	cmp    ch,0xc5
  433c85:	xchg   BYTE PTR [edi+0x24e181a2],dh
  433c8b:	dec    edi
  433c8c:	cld    
  433c8d:	xchg   BYTE PTR fs:[ecx],bh
  433c90:	arpl   WORD PTR [edx],sp
  433c92:	sbb    eax,0xda3ad858
  433c97:	jb     0x433c91
  433c99:	sub    DWORD PTR [esi-0x66],0x7f
  433c9d:	(bad)  
  433c9e:	cld    
  433c9f:	jecxz  0x433cc5
  433ca1:	lds    esi,FWORD PTR [esi+edx*8-0x545bbf29]
  433ca8:	xchg   ecx,eax
  433ca9:	loope  0x433cac
  433cab:	add    BYTE PTR [ecx],dl
  433cad:	add    DWORD PTR [eax],eax
  433caf:	add    BYTE PTR [edi],bh
  433cb1:	pusha  
  433cb2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  433cb3:	dec    ebp
  433cb4:	push   esi
  433cb5:	mov    WORD PTR [edi-0x46],?
  433cb8:	xor    dl,BYTE PTR [ebp+0x65]
  433cbb:	pop    ds
  433cbc:	fs and eax,0x38224a8f
  433cc2:	push   ecx
  433cc3:	and    eax,0xda3e71aa
  433cc8:	mov    ah,0x15
  433cca:	xor    BYTE PTR [eax+esi*4-0x2d],dl
  433cce:	clc    
  433ccf:	rep lods eax,DWORD PTR ds:[esi]
  433cd2:	xchg   cl,dl
  433cd4:	and    ch,BYTE PTR [esi-0x76]
  433cd7:	xor    ebp,DWORD PTR [ebx-0x748f54a0]
  433cdd:	pop    ds
  433cde:	rol    DWORD PTR [ebx-0x3c94f945],0x30
  433ce5:	dec    ecx
  433ce6:	std    
  433ce7:	inc    ebx
  433ce8:	out    dx,eax
  433ce9:	dec    bl
  433ceb:	arpl   bx,sp
  433ced:	push   eax
  433cee:	retf   
  433cef:	inc    ebx
  433cf0:	push   ecx
  433cf1:	outs   dx,DWORD PTR ds:[esi]
  433cf2:	ss cmc 
  433cf4:	mov    ch,0x4d
  433cf6:	push   ss
  433cf7:	lock jg 0x433d2f
  433cfa:	sbb    eax,0x42d4a55f
  433cff:	jl     0x433c87
  433d01:	or     BYTE PTR [ebx],0x2c
  433d04:	cmp    BYTE PTR ds:0xf8a39708,bh
  433d0a:	in     al,0x5e
  433d0c:	cdq    
  433d0d:	jns    0x433ca6
  433d0f:	lock cld 
  433d11:	push   esp
  433d12:	sahf   
  433d13:	data16 (bad) 
  433d15:	fbld   TBYTE PTR es:[eax-0x2a9f330]
  433d1c:	mov    al,ds:0x952561c0
  433d21:	rol    DWORD PTR [eax],cl
  433d23:	mov    BYTE PTR [edx],bh
  433d25:	push   edi
  433d26:	mov    edx,0xd6446fae
  433d2b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  433d2c:	jmp    0x39be:0x5a678319
  433d33:	aas    
  433d34:	pop    edx
  433d35:	sbb    dh,cl
  433d37:	in     eax,dx
  433d38:	xor    al,0x48
  433d3a:	push   ecx
  433d3b:	(bad)  
  433d3c:	mov    ch,0x83
  433d3e:	cmp    al,0x7d
  433d40:	sbb    eax,0x49d5c6bf
  433d45:	popf   
  433d46:	mov    ebx,0xc06b4fdc
  433d4b:	pop    es
  433d4c:	and    BYTE PTR ds:0x57e6826f,ah
  433d52:	pop    edi
  433d53:	pop    esp
  433d54:	mov    bh,0x10
  433d56:	add    dh,BYTE PTR [eax+0x69f8863b]
  433d5c:	scas   eax,DWORD PTR es:[edi]
  433d5d:	sbb    eax,0xfc311404
  433d62:	lods   al,BYTE PTR ds:[esi]
  433d63:	push   edi
  433d64:	cwde   
  433d65:	and    al,0xa9
  433d67:	xchg   DWORD PTR [ebx-0x72da2118],eax
  433d6d:	mov    bl,0x9b
  433d6f:	cmc    
  433d70:	dec    edx
  433d71:	hlt    
  433d72:	sub    DWORD PTR [eax-0x3853a044],ecx
  433d78:	jg     0x433d6a
  433d7a:	icebp  
  433d7b:	(bad)  
  433d7c:	cld    
  433d7d:	cmp    al,0xf1
  433d7f:	or     esi,edi
  433d81:	pop    es
  433d82:	cwde   
  433d83:	lock fisubr DWORD PTR [ecx+0x77]
  433d87:	repz xchg ebx,eax
  433d89:	mov    dh,0x1c
  433d8b:	pop    edi
  433d8c:	rep outs dx,DWORD PTR ds:[esi]
  433d8e:	pop    esi
  433d8f:	retf   0xb04d
  433d92:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  433d93:	push   esi
  433d94:	xchg   esi,eax
  433d95:	mov    DWORD PTR [ebx],ebp
  433d97:	sub    dl,dl
  433d99:	aaa    
  433d9a:	push   0x3be5d03c
  433d9f:	pop    ss
  433da0:	js     0x433dbd
  433da2:	mov    al,ds:0x835e358e
  433da7:	add    edi,edx
  433da9:	cli    
  433daa:	retf   0x3917
  433dad:	push   ebx
  433dae:	(bad)  
  433daf:	jmp    0x58dc:0x26a1c9a
  433db6:	stos   DWORD PTR es:[edi],eax
  433db7:	pop    edi
  433db8:	dec    edi
  433db9:	and    ebx,ecx
  433dbb:	inc    edx
  433dbc:	daa    
  433dbd:	setnp  BYTE PTR [edx-0x64]
  433dc1:	mov    ds:0xdf40d779,eax
  433dc6:	out    dx,al
  433dc7:	mov    bh,0xfb
  433dc9:	js     0x433df3
  433dcb:	mov    al,0xbd
  433dcd:	push   ebp
  433dce:	sub    al,0x6d
  433dd0:	cli    
  433dd1:	mov    bl,0xe3
  433dd3:	add    DWORD PTR [eax],eax
  433dd5:	adc    DWORD PTR [ecx],eax
  433dd7:	add    BYTE PTR [eax],al
  433dd9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  433dda:	push   esp
  433ddb:	(bad)  
  433ddc:	mov    ecx,0x19ad565
  433de1:	jb     0x433e28
  433de3:	aaa    
  433de4:	imul   eax,DWORD PTR [ecx-0x1e],0xffffffe2
  433de8:	and    DWORD PTR [edx-0x70821ad0],ebx
  433dee:	pop    ebp
  433def:	dec    edx
  433df0:	pop    ebx
  433df1:	and    ch,BYTE PTR [ebx]
  433df3:	xor    esi,DWORD PTR [edx+ebx*8-0x527e0eee]
  433dfa:	jne    0x433de2
  433dfc:	or     BYTE PTR [eax+0x1f],ch
  433dff:	retf   0x4a04
  433e02:	mul    DWORD PTR [ebx]
  433e04:	push   esi
  433e05:	sbb    edx,DWORD PTR [esi]
  433e07:	adc    DWORD PTR ss:[bx-0x48],0xc6dfb067
  433e10:	xor    dl,dh
  433e12:	or     eax,0x3976296
  433e17:	sbb    ecx,DWORD PTR fs:0x632faebd
  433e1e:	daa    
  433e1f:	aas    
  433e20:	(bad)  
  433e21:	jbe    0x433dbe
  433e23:	bound  ecx,QWORD PTR [esi+edx*4]
  433e26:	sahf   
  433e27:	dec    edx
  433e28:	xchg   DWORD PTR [ebx+0x1c],edx
  433e2b:	push   ecx
  433e2c:	cmp    al,0x7c
  433e2e:	std    
  433e2f:	add    DWORD PTR [esi+0xdc02833],esi
  433e35:	ja     0x433eaf
  433e37:	aaa    
  433e38:	sbb    edx,DWORD PTR [edi]
  433e3a:	or     BYTE PTR [eax-0x43],bl
  433e3d:	lods   eax,DWORD PTR ds:[esi]
  433e3e:	or     ah,BYTE PTR [ebx]
  433e40:	pusha  
  433e41:	retf   0xb4aa
  433e44:	or     BYTE PTR [esi-0x29bd2f38],dl
  433e4a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  433e4b:	xchg   BYTE PTR [ecx+0x57f2d301],cl
  433e51:	imul   ecx,DWORD PTR [eax+0xa],0xffffff9d
  433e55:	pop    ebp
  433e56:	mov    cl,0xb3
  433e58:	shr    BYTE PTR [ebx+0x6d],0xbf
  433e5c:	mov    ch,0x94
  433e5e:	cdq    
  433e5f:	fsub   DWORD PTR [ebp-0x7e0df0d6]
  433e65:	cli    
  433e66:	inc    esi
  433e67:	push   edx
  433e68:	adc    eax,0xa066dc71
  433e6d:	shl    bh,1
  433e6f:	iret   
  433e70:	int3   
  433e71:	sub    al,0x46
  433e73:	or     eax,ebx
  433e75:	push   esp
  433e76:	pop    ecx
  433e77:	fcom   QWORD PTR [ebp-0x22018bc2]
  433e7d:	ret    
  433e7e:	mov    al,0xbc
  433e80:	std    
  433e81:	sbb    DWORD PTR [eax+0x62],ebp
  433e84:	and    edi,edx
  433e86:	(bad)  [ebp+0x31]
  433e89:	dec    esi
  433e8a:	in     eax,dx
  433e8b:	push   0xd69c51c6
  433e90:	xchg   DWORD PTR [eax+0x26283f49],esp
  433e96:	jmp    0xa8d939f5
  433e9b:	xor    edx,DWORD PTR [ecx]
  433e9d:	sub    eax,0x91e68b13
  433ea2:	je     0x433ec0
  433ea4:	inc    esi
  433ea5:	retf   0x8bb6
  433ea8:	iret   
  433ea9:	sbb    BYTE PTR [ecx],0x6e
  433eac:	xchg   ebp,eax
  433ead:	or     eax,0xc8ee183e
  433eb2:	or     dl,BYTE PTR [ebp-0x6a807d0]
  433eb8:	jl     0x433f09
  433eba:	mov    eax,ds:0x4de04470
  433ebf:	mov    ebx,0x6d4890f8
  433ec4:	dec    esp
  433ec5:	pop    ecx
  433ec6:	jbe    0x433efa
  433ec8:	push   esp
  433ec9:	sbb    esp,DWORD PTR [eax+0x6deb8c23]
  433ecf:	cmp    BYTE PTR [edx+ecx*2],cl
  433ed2:	arpl   WORD PTR [ebx],bp
  433ed4:	out    0x5,al
  433ed6:	sub    DWORD PTR [esi],ecx
  433ed8:	hlt    
  433ed9:	jg     0x433ea6
  433edb:	push   ds
  433edc:	xchg   BYTE PTR ds:0x844ba3ef,ch
  433ee2:	ficom  DWORD PTR [edx+0x460e30ce]
  433ee8:	mov    ecx,DWORD PTR [eax-0x5e]
  433eeb:	and    BYTE PTR [ebp-0x102603f],bl
  433ef1:	arpl   bp,ax
  433ef3:	mov    al,al
  433ef5:	mov    bl,0xc6
  433ef7:	neg    DWORD PTR [ebx-0x6b]
  433efa:	mov    ds:0x110001e2,al
  433eff:	add    DWORD PTR [eax],eax
  433f01:	add    BYTE PTR [ecx-0x14],bh
  433f04:	imul   esi,ebp,0x34bb86b7
  433f0a:	les    edx,FWORD PTR [ebp-0x4f063da]
  433f10:	mov    al,BYTE PTR es:[ebx+0x62]
  433f14:	out    dx,al
  433f15:	adc    esp,DWORD PTR [ecx]
  433f17:	call   0xf0c67dc7
  433f1c:	out    0xe0,eax
  433f1e:	add    al,0xa9
  433f20:	ss mov eax,0xa2ceacc0
  433f26:	imul   edx,esp,0xffffff93
  433f29:	inc    edi
  433f2a:	add    esi,eax
  433f2c:	mov    dh,0xb9
  433f2e:	outs   dx,BYTE PTR ds:[esi]
  433f2f:	push   ss
  433f30:	sbb    BYTE PTR [ecx-0x4d9f95e5],dl
  433f36:	push   ecx
  433f37:	pop    esi
  433f38:	sbb    bl,bh
  433f3a:	aas    
  433f3b:	adc    eax,0x2bf860f7
  433f40:	cs inc ecx
  433f42:	neg    DWORD PTR [ebx]
  433f44:	push   eax
  433f45:	push   esp
  433f46:	mov    bl,0xb
  433f48:	pop    ecx
  433f49:	sub    eax,0xe05be017
  433f4e:	in     al,0x4b
  433f50:	iret   
  433f51:	data16 jne 0x433f19
  433f54:	(bad)  
  433f55:	mov    ebp,0xada6c972
  433f5a:	ret    
  433f5b:	cmp    BYTE PTR [eax+0x1883f6c1],ch
  433f61:	int3   
  433f62:	cld    
  433f63:	(bad)  
  433f64:	jmp    0x433f89
  433f66:	add    BYTE PTR [eax+0x751ab0fc],bh
  433f6c:	out    0x14,eax
  433f6e:	inc    ecx
  433f6f:	and    DWORD PTR [edx+0xf],esp
  433f72:	setno  BYTE PTR ds:0xe3ae9520
  433f79:	in     al,0xbe
  433f7b:	es pop eax
  433f7d:	push   ecx
  433f7e:	cmp    eax,0xe21052c6
  433f83:	pop    es
  433f84:	fdiv   DWORD PTR [eax-0x7577769b]
  433f8a:	and    BYTE PTR ds:0xb8e478d,0x89
  433f91:	xchg   ecx,eax
  433f92:	add    eax,0x618eb01e
  433f97:	xor    al,0x3c
  433f99:	dec    edx
  433f9a:	jbe    0x433f5d
  433f9c:	test   ah,0x8a
  433f9f:	or     DWORD PTR [edx+eiz*4-0x23115e49],ebp
  433fa6:	test   eax,0x8a369dca
  433fab:	call   0xf8aa831c
  433fb0:	sar    DWORD PTR [eax],0x16
  433fb3:	adc    bl,BYTE PTR [edi]
  433fb5:	add    BYTE PTR [esi+0x53],0x1c
  433fb9:	test   al,0xa3
  433fbb:	ja     0x433f6c
  433fbd:	xor    dh,BYTE PTR [edi-0x15f0e37d]
  433fc3:	xlat   BYTE PTR ds:[ebx]
  433fc4:	into   
  433fc5:	test   al,0x75
  433fc7:	call   0xaabd:0x82359adb
  433fce:	add    al,0x51
  433fd0:	mov    ecx,0x74ae68be
  433fd5:	mov    dh,0x35
  433fd7:	adc    DWORD PTR [ebx-0x23],ecx
  433fda:	or     BYTE PTR [edi+esi*4-0xebcc07a],dl
  433fe1:	xchg   ebx,eax
  433fe2:	mov    dl,0x45
  433fe4:	in     al,0xef
  433fe6:	jge    0x43400b
  433fe8:	adc    esi,ebx
  433fea:	inc    ebp
  433feb:	jmp    0x433f86
  433fed:	hlt    
  433fee:	aam    0x55
  433ff0:	mov    eax,ds:0x919b44d1
  433ff5:	mov    ebp,DWORD PTR [esi+0x5d]
  433ff8:	push   ds
  433ff9:	mov    edx,0x98aa988d
  433ffe:	sub    dh,BYTE PTR [eax+0x228bada9]
  434004:	add    dl,dh
  434006:	push   edi
  434007:	sbb    ah,ah
  434009:	es scas eax,DWORD PTR es:[edi]
  43400b:	xchg   BYTE PTR [esi],ch
  43400d:	adc    eax,ecx
  43400f:	adc    bl,BYTE PTR [edx-0x25]
  434012:	sbb    cl,BYTE PTR [edx-0x298aadb2]
  434018:	jge    0x433fc9
  43401a:	(bad)  
  43401b:	fcmovb st,st(0)
  43401d:	cld    
  43401e:	dec    eax
  43401f:	mov    BYTE PTR [edx+0x25],cl
  434022:	xchg   ebp,eax
  434023:	and    al,0x1
  434026:	add    BYTE PTR [ecx],dl
  434028:	add    DWORD PTR [eax],eax
  43402a:	add    BYTE PTR [edx],dl
  43402c:	out    0x3c,eax
  43402e:	xchg   ebx,eax
  43402f:	push   cs
  434030:	mov    al,ds:0x4176191e
  434035:	cmp    eax,0xb31b00f7
  43403a:	stos   BYTE PTR es:[edi],al
  43403b:	addr16 xor edi,edx
  43403e:	movs   BYTE PTR es:[di],BYTE PTR ds:[si]
  434040:	jbe    0x43408b
  434042:	ret    0xcf3
  434045:	hlt    
  434046:	fucomp st(1)
  434048:	push   ds
  434049:	push   edi
  43404a:	jno    0x433fd3
  43404c:	outs   dx,DWORD PTR ds:[esi]
  43404d:	adc    eax,0xbc702594
  434052:	sbb    al,bh
  434054:	test   DWORD PTR [edx],esp
  434056:	outs   dx,DWORD PTR ds:[esi]
  434057:	jb     0x434031
  434059:	test   cl,0x3
  43405c:	jnp    0x43403d
  43405e:	sbb    BYTE PTR [ebp+0x54],cl
  434061:	ficomp WORD PTR [eax+0x5ad21046]
  434067:	fstp   DWORD PTR [ebx]
  434069:	mov    esi,0xa18b5568
  43406e:	cmp    ecx,esi
  434070:	pushf  
  434071:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  434072:	scas   al,BYTE PTR es:[edi]
  434073:	fwait
  434074:	or     ebp,DWORD PTR [ebx-0x8]
  434077:	fwait
  434078:	daa    
  434079:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43407a:	clc    
  43407b:	mov    ch,0xaa
  43407d:	stos   DWORD PTR es:[edi],eax
  43407e:	int3   
  43407f:	in     al,0xf1
  434081:	popa   
  434082:	mov    ch,0x50
  434084:	push   0x5a
  434086:	mov    ah,BYTE PTR [ebx]
  434088:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  434089:	pop    esp
  43408a:	fwait
  43408b:	je     0x434055
  43408d:	jo     0x4340dc
  43408f:	sbb    al,BYTE PTR [edx-0x5d18677f]
  434095:	push   edx
  434096:	and    al,0xa3
  434098:	out    dx,eax
  434099:	fdiv   QWORD PTR ds:[edi]
  43409c:	inc    ebx
  43409d:	imul   ebp,DWORD PTR [edi],0xffffffb7
  4340a0:	stos   DWORD PTR es:[edi],eax
  4340a1:	fimul  DWORD PTR [edi-0x4a]
  4340a4:	and    eax,0x9cbbd8f3
  4340a9:	dec    esi
  4340aa:	outs   dx,DWORD PTR ds:[esi]
  4340ab:	xchg   ecx,eax
  4340ad:	in     eax,0xb8
  4340af:	xor    dh,0xa0
  4340b2:	test   BYTE PTR [ebx+ebx*8+0x34],0xdc
  4340b7:	cmp    al,0x91
  4340b9:	xor    al,0x83
  4340bb:	ret    0x3c95
  4340be:	lea    ebx,[edx]
  4340c0:	js     0x4340c3
  4340c2:	into   
  4340c3:	out    dx,eax
  4340c4:	xchg   ecx,eax
  4340c5:	lock mov edx,0x2815e4c0
  4340cb:	pop    esp
  4340cc:	ins    DWORD PTR es:[edi],dx
  4340cd:	sub    edi,0x1ae42f98
  4340d3:	dec    esp
  4340d4:	mov    ah,0xa0
  4340d6:	les    esi,FWORD PTR [ebx-0x7d2ed06c]
  4340dc:	out    dx,al
  4340dd:	cmp    eax,0x5f7b9fe3
  4340e2:	test   eax,0x4ffcf3f
  4340e7:	div    BYTE PTR [ecx]
  4340e9:	enter  0x615d,0xcb
  4340ed:	or     ebx,DWORD PTR [ebp+0x221658a3]
  4340f3:	pop    ecx
  4340f4:	(bad)  
  4340f5:	mov    ?,ecx
  4340f7:	fcom   QWORD PTR ds:0xd0534852
  4340fd:	fwait
  4340fe:	jp     0x4340a9
  434100:	mov    eax,ds:0xe5f3e8e5
  434105:	sar    cl,0xba
  434108:	test   BYTE PTR [ebp+0x79c2fece],cl
  43410e:	enter  0x3e,0x1d
  434112:	jle    0x43411c
  434114:	pop    ebx
  434115:	jmp    0x7d4e:0xe6a28b55
  43411c:	mov    bl,0x79
  43411e:	mov    al,0x2
  434120:	jae    0x434166
  434122:	sbb    al,0xc8
  434124:	rcl    BYTE PTR [ebp-0x1f],cl
  434127:	mov    ah,0x81
  434129:	enter  0xe26d,0x7b
  43412d:	out    dx,al
  43412e:	pop    esp
  43412f:	sbb    al,0xb5
  434131:	fisttp DWORD PTR ds:0x5660098
  434137:	push   ebx
  434138:	adc    BYTE PTR [eax],ch
  43413a:	lods   al,BYTE PTR ds:[esi]
  43413b:	cmp    al,dl
  43413d:	pop    es
  43413e:	add    eax,0xdc4bd749
  434143:	lahf   
  434144:	cmp    DWORD PTR [ecx],edx
  434146:	jnp    0x434199
  434148:	lock xchg edi,eax
  43414a:	push   eax
  43414b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43414c:	(bad)  
  43414d:	in     al,0x1
  43414f:	add    BYTE PTR [ecx],dl
  434151:	add    DWORD PTR [eax],eax
  434153:	add    BYTE PTR [edx+0x3],ah
  434156:	daa    
  434157:	gs gs pop es
  43415a:	xchg   ebp,eax
  43415b:	pop    ebx
  43415c:	dec    eax
  43415d:	hlt    
  43415e:	xor    al,0x79
  434160:	cwde   
  434161:	ja     0x4341b1
  434163:	arpl   WORD PTR [edx+0x7b],di
  434166:	popf   
  434167:	rcr    BYTE PTR ds:0xba725aa8,1
  43416d:	jnp    0x434108
  43416f:	ss jle 0x434175
  434172:	inc    ebp
  434173:	jmp    FWORD PTR [eax]
  434175:	jne    0x4340f9
  434177:	adc    BYTE PTR [eax+edx*8],bh
  43417a:	mov    ah,BYTE PTR [ecx]
  43417c:	push   0xaf844e76
  434181:	pushf  
  434182:	fs loope 0x434199
  434185:	xor    ebp,DWORD PTR [eax+0x39efb788]
  43418b:	daa    
  43418c:	rcr    DWORD PTR [ecx-0x6a],0x8a
  434190:	(bad)  
  434191:	xor    dh,BYTE PTR [edi+ecx*8]
  434194:	mov    edi,0x93e1dc2e
  434199:	jp     0x4341f4
  43419b:	and    bh,BYTE PTR [ebx]
  43419d:	jle    0x434179
  43419f:	arpl   bx,ax
  4341a1:	cmp    cl,cl
  4341a3:	adc    BYTE PTR [ecx+0x62cc43bf],0xfe
  4341aa:	iret   
  4341ab:	aad    0x63
  4341ad:	jle    0x43413f
  4341af:	mov    BYTE PTR [edx],bh
  4341b1:	mov    ds:0xe49df00d,eax
  4341b6:	lods   al,BYTE PTR ds:[esi]
  4341b7:	jbe    0x4341af
  4341b9:	push   0x4c
  4341bb:	and    cl,BYTE PTR [eax]
  4341bd:	xchg   esi,eax
  4341be:	adc    DWORD PTR [eax-0x3a115e92],ecx
  4341c4:	cmp    al,0xac
  4341c6:	fisubr DWORD PTR [ebx-0x1]
  4341c9:	mov    edx,0x3baa8a64
  4341ce:	inc    eax
  4341cf:	mov    edx,0x9ed715d
  4341d4:	cwde   
  4341d5:	and    DWORD PTR [esi],edi
  4341d7:	adc    eax,0xa7542a48
  4341dc:	ret    
  4341dd:	(bad)  
  4341de:	retf   
  4341df:	pop    ds
  4341e0:	popf   
  4341e1:	pop    ebx
  4341e2:	vmovdqa YMMWORD PTR [ebx],ymm1
  4341e6:	sar    bl,1
  4341e8:	jmp    0x434190
  4341ea:	fidiv  WORD PTR [edx]
  4341ec:	mov    dl,0x88
  4341ee:	imul   esi,DWORD PTR [edi+0x5624388c],0x12
  4341f5:	(bad)  
  4341f6:	pop    ecx
  4341f7:	inc    esi
  4341f8:	pop    ds
  4341f9:	sub    al,0xe8
  4341fb:	adc    eax,0x76eaf42a
  434200:	xchg   edi,eax
  434201:	jne    0x434187
  434203:	push   eax
  434204:	int3   
  434205:	pop    ds
  434206:	dec    ebx
  434207:	call   0x92ecc4f
  43420c:	and    BYTE PTR [edi+esi*8+0x5621f92d],cl
  434213:	xchg   ecx,eax
  434214:	cmp    al,0xee
  434216:	jno    0x43424e
  434218:	ja     0x43423f
  43421a:	push   cs
  43421b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43421c:	icebp  
  43421d:	jns    0x434233
  43421f:	in     eax,dx
  434220:	jge    0x43421d
  434222:	add    al,0xce
  434224:	adc    DWORD PTR [edi+0x7c57b8bb],edi
  43422a:	mov    esi,0xe759b690
  43422f:	lock lahf 
  434231:	push   eax
  434232:	and    BYTE PTR [esi+0x0],bl
  434235:	mov    ah,0xc5
  434237:	cli    
  434238:	xor    eax,0xb87c204e
  43423d:	imul   esp,DWORD PTR [edi+0x15],0x4047fdff
  434244:	pop    edx
  434245:	xchg   edi,eax
  434246:	sbb    eax,0x5184a112
  43424b:	xor    eax,0x8c2a7b6b
  434250:	pushf  
  434251:	loopne 0x4341d3
  434253:	data16 adc al,BYTE PTR [bx+di+0x5172]
  434259:	std    
  43425a:	mov    esi,0x1259aafb
  43425f:	push   ebx
  434260:	pop    esi
  434261:	leave  
  434262:	dec    DWORD PTR [eax+0x752a8e8f]
  434268:	jbe    0x43425f
  43426a:	jg     0x4341fb
  43426c:	cli    
  43426d:	xor    eax,0x4c83dcc2
  434272:	cmc    
  434273:	pushf  
  434274:	push   edi
  434275:	pop    DWORD PTR [ecx]
  434277:	add    al,BYTE PTR [eax]
  434279:	or     BYTE PTR [eax],al
  43427b:	add    BYTE PTR [eax],al
  43427d:	sub    esi,ecx
  43427f:	pop    edi
  434280:	mov    dh,BYTE PTR [edi+0x42]
  434283:	cwde   
  434284:	inc    edx
  434285:	cmp    BYTE PTR [edx-0x16905fc],ch
  43428b:	(bad)  
  43428c:	jmp    0xa310:0x447fca5c
  434293:	dec    eax
  434294:	cmp    al,0x4f
  434296:	mov    ebp,0x1110001
  43429b:	add    BYTE PTR [eax],al
  43429d:	push   cs
  43429e:	push   ebp
  43429f:	arpl   WORD PTR [ecx+ebp*2],ax
  4342a2:	mov    eax,0xedd3ef75
  4342a7:	jbe    0x4342f6
  4342a9:	dec    edi
  4342aa:	cwde   
  4342ab:	jns    0x4342b4
  4342ad:	xor    edi,esi
  4342af:	outs   dx,DWORD PTR ds:[esi]
  4342b0:	jbe    0x4342be
  4342b2:	mov    edi,DWORD PTR [ebx+0x41fbf1b8]
  4342b8:	push   ebp
  4342b9:	sbb    al,0x21
  4342bb:	lea    ecx,ds:0xbb1889f3
  4342c1:	mov    al,ds:0x39c4950e
  4342c6:	dec    ebx
  4342c7:	outs   dx,BYTE PTR ds:[esi]
  4342c8:	fldl2e 
  4342ca:	fadd   QWORD PTR [esi]
  4342cc:	dec    esp
  4342cd:	(bad)  
  4342ce:	ja     0x4342ed
  4342d0:	rcl    ecx,cl
  4342d2:	xchg   edi,eax
  4342d3:	mov    dh,ah
  4342d5:	out    0x7c,eax
  4342d7:	jl     0x434342
  4342d9:	xor    cl,BYTE PTR [esi-0xa0d228a]
  4342df:	js     0x4342cb
  4342e1:	sub    eax,edx
  4342e3:	fwait
  4342e4:	popa   
  4342e5:	xchg   ecx,eax
  4342e6:	cwde   
  4342e7:	jle    0x4342ca
  4342e9:	adc    dh,ch
  4342eb:	sbb    cl,BYTE PTR [ebx-0x6e6ff8ba]
  4342f1:	jns    0x4342d7
  4342f3:	shr    ecx,cl
  4342f5:	mov    dh,0x1d
  4342f7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4342f8:	fwait
  4342f9:	xor    DWORD PTR [edi],0x8664a56e
  4342ff:	adc    al,0x61
  434301:	cmp    DWORD PTR [ebx],0x11
  434304:	mov    eax,0xf1ca2129
  434309:	js     0x434311
  43430b:	or     edx,DWORD PTR [edi+0x8]
  43430e:	xchg   BYTE PTR [edi+0x35],dl
  434311:	enter  0x26f9,0xd1
  434315:	mov    al,bl
  434317:	push   esp
  434318:	mov    eax,0xb05016fe
  43431d:	pop    es
  43431e:	lods   eax,DWORD PTR ds:[esi]
  43431f:	push   cs
  434320:	adc    DWORD PTR [ebx],edx
  434322:	(bad)  
  434323:	inc    esp
  434324:	sti    
  434325:	push   eax
  434326:	add    edi,DWORD PTR fs:[eax]
  434329:	outs   dx,BYTE PTR ds:[esi]
  43432a:	gs cmc 
  43432c:	lods   eax,DWORD PTR ds:[esi]
  43432d:	xchg   ebx,eax
  43432e:	xchg   edx,eax
  43432f:	or     eax,0xffec6db
  434334:	ror    BYTE PTR [esi+0x4f89c194],0x70
  43433b:	js     0x43434b
  43433d:	hlt    
  43433e:	test   eax,0xf2c55b2d
  434343:	xor    edi,DWORD PTR [eax]
  434345:	test   BYTE PTR [ecx+0x19ec04c1],0x3d
  43434c:	mov    ecx,0x368ac3a0
  434351:	push   es
  434352:	in     al,dx
  434353:	and    DWORD PTR [eax],0xa5a53d01
  434359:	jmp    0xaae77676
  43435e:	lea    edx,[edx+0x71]
  434361:	call   0x6b5500d6
  434366:	xchg   esp,eax
  434367:	nop
  434368:	pop    ss
  434369:	into   
  43436a:	sub    bl,bl
  43436c:	scas   eax,DWORD PTR es:[edi]
  43436d:	adc    DWORD PTR [ebx-0x6b050504],0x1a
  434374:	cli    
  434375:	xchg   esp,edx
  434377:	xor    BYTE PTR [edx-0x17],bh
  43437a:	sub    BYTE PTR [ebp-0x7f8cce53],ch
  434380:	add    BYTE PTR [ebx-0x57],cl
  434383:	je     0x434328
  434385:	repnz out dx,eax
  434387:	pushf  
  434388:	loope  0x4343ee
  43438a:	sub    cl,ch
  43438c:	jecxz  0x434354
  43438e:	pusha  
  43438f:	into   
  434390:	std    
  434391:	call   0x97a0:0x4ee1476e
  434398:	pop    esp
  434399:	mov    bh,BYTE PTR [ecx-0x7879e1a3]
  43439f:	dec    edx
  4343a0:	sbb    DWORD PTR [edi+eax*4+0x1122fa00],esp
  4343a7:	fucomp st(0)
  4343a9:	idiv   DWORD PTR [esi+ebx*8]
  4343ac:	cmc    
  4343ad:	js     0x43433b
  4343af:	(bad)  
  4343b0:	repnz dec eax
  4343b2:	sti    
  4343b3:	jge    0x434373
  4343b5:	(bad)  
  4343b6:	pop    esp
  4343b7:	xor    dh,BYTE PTR [edx*8+0x359ec5ed]
  4343be:	pusha  
  4343bf:	mov    esi,0x1110001
  4343c4:	add    BYTE PTR [eax],al
  4343c6:	fwait
  4343c7:	sbb    eax,0x2138a2f7
  4343cc:	jg     0x434362
  4343ce:	lock mov eax,0x685d5c7e
  4343d4:	out    dx,eax
  4343d5:	add    eax,0x161448f3
  4343da:	loop   0x434430
  4343dc:	outs   dx,DWORD PTR ds:[esi]
  4343dd:	and    BYTE PTR ds:0x45aa2266,dh
  4343e3:	ds (bad) 
  4343e5:	jae    0x4343bb
  4343e7:	push   ebp
  4343e8:	or     BYTE PTR [ecx-0x671d8dc6],ch
  4343ee:	sar    DWORD PTR fs:[ebx],0x8c
  4343f2:	add    al,0xf
  4343f4:	cmp    ebx,DWORD PTR [ebx+0x5b992e97]
  4343fa:	mov    ds:0xb7c8bf2c,eax
  4343ff:	(bad)  
  434400:	sar    BYTE PTR ds:[ebx],cl
  434403:	pmulhw mm4,QWORD PTR [esi+0xd]
  434407:	push   ebx
  434408:	jne    0x43442b
  43440a:	mov    ch,0x98
  43440c:	rcr    DWORD PTR [ebx+0x5d],1
  43440f:	jo     0x434425
  434411:	push   esp
  434412:	cs (bad) 
  434415:	fst    DWORD PTR [ebx+0x6efd585d]
  43441b:	inc    ecx
  43441c:	cli    
  43441d:	mov    edx,0xfec893dd
  434422:	jcxz   0x434413
  434425:	jne    0x434432
  434427:	pop    ss
  434428:	movs   DWORD PTR es:[di],DWORD PTR ds:[si]
  43442a:	ret    
  43442b:	stos   BYTE PTR es:[edi],al
  43442c:	pop    ds
  43442d:	mov    cl,0x12
  43442f:	inc    ebx
  434430:	and    cl,BYTE PTR [ebp+0x67]
  434433:	xor    BYTE PTR [eax],ah
  434435:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  434436:	mov    bh,0xa3
  434438:	pop    eax
  434439:	lods   al,BYTE PTR ds:[esi]
  43443a:	mov    ch,0x1f
  43443c:	jns    0x4343f5
  43443e:	mov    eax,ds:0xd222e99
  434443:	xor    al,0x70
  434445:	mov    ?,WORD PTR [esi]
  434447:	pushf  
  434448:	lods   eax,DWORD PTR ds:[esi]
  434449:	jbe    0x434463
  43444b:	push   ebx
  43444c:	push   es
  43444d:	xchg   DWORD PTR [ebx-0x6a],edx
  434450:	xchg   edi,eax
  434451:	or     ebp,DWORD PTR [ecx-0x3f913b21]
  434457:	and    DWORD PTR [esi-0x6d],ebp
  43445a:	cmc    
  43445b:	adc    al,0xb2
  43445d:	test   BYTE PTR [ecx+0xf],dh
  434460:	push   ds
  434461:	ror    DWORD PTR [ebp+esi*1-0x600fe294],0xe1
  434469:	fsubr  QWORD PTR [edi+0x79afa581]
  43446f:	stos   BYTE PTR es:[edi],al
  434470:	mov    bh,0x8e
  434472:	mov    dl,BYTE PTR gs:[esi-0x3c]
  434476:	cdq    
  434477:	jo     0x4344ee
  434479:	sub    esi,edx
  43447b:	out    dx,eax
  43447c:	out    dx,al
  43447d:	enter  0x9006,0x21
  434481:	arpl   dx,di
  434483:	into   
  434484:	add    DWORD PTR [edi],esi
  434486:	and    al,0x97
  434488:	push   esp
  434489:	cmc    
  43448a:	sub    eax,0x5f8dbc0a
  43448f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  434490:	mov    dl,0xe8
  434492:	clc    
  434493:	xchg   ecx,eax
  434494:	ja     0x434433
  434496:	imul   edi,DWORD PTR es:[ecx-0x32d1c35d],0xcd4aaf5a
  4344a1:	sub    al,0x90
  4344a3:	imul   ebp,DWORD PTR [esi-0x59648e5c],0xffffff83
  4344aa:	mov    dh,BYTE PTR [ebx+0x53]
  4344ad:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4344ae:	mov    ecx,edi
  4344b0:	shl    DWORD PTR [edi-0xc],cl
  4344b3:	popa   
  4344b4:	or     al,0x62
  4344b6:	jmp    0x4344eb
  4344b8:	xlat   BYTE PTR ds:[ebx]
  4344b9:	sub    eax,DWORD PTR [edx]
  4344bb:	aas    
  4344bc:	adc    BYTE PTR [edi+esi*4-0x17943b61],ch
  4344c3:	pop    edi
  4344c4:	pop    ebx
  4344c5:	ficom  WORD PTR [ecx]
  4344c7:	cmp    eax,0x2901ddd4
  4344cc:	aaa    
  4344cd:	xchg   edi,eax
  4344ce:	bound  edi,QWORD PTR [esi+edi*1+0x46]
  4344d2:	add    al,0x77
  4344d4:	hlt    
  4344d5:	push   es
  4344d6:	inc    esp
  4344d7:	rcl    BYTE PTR [ebp+0x8],1
  4344da:	pop    edi
  4344db:	lea    ebx,[edi-0x29]
  4344de:	fist   WORD PTR [ebx]
  4344e0:	mov    esp,0xbce1167b
  4344e5:	in     eax,dx
  4344e6:	add    DWORD PTR [eax+eiz*4+0x1110001],0x72030000
  4344f1:	leave  
  4344f2:	dec    edx
  4344f3:	sbb    al,0xe2
  4344f5:	or     ah,BYTE PTR [ecx-0x5b]
  4344f8:	xor    bl,ch
  4344fa:	mov    ebx,0x59251e68
  4344ff:	add    BYTE PTR [edx+0x2e70c08a],cl
  434505:	mov    bh,0x5b
  434507:	int3   
  434508:	and    ch,cl
  43450a:	pop    esi
  43450b:	in     al,0x37
  43450d:	nop
  43450e:	inc    ebx
  43450f:	hlt    
  434510:	fadd   DWORD PTR [ecx-0x7cbc64e4]
  434516:	jmp    0x76f5:0x729cb7ea
  43451d:	rol    bh,0x7a
  434520:	mov    ds:0xcbabfe23,al
  434525:	cs pop esp
  434527:	pop    ss
  434528:	mov    ds,WORD PTR [edi-0x3]
  43452b:	mov    esp,0xbde28882
  434530:	popf   
  434531:	xor    eax,0xffffffea
  434534:	ss pop eax
  434536:	add    esi,DWORD PTR [edi]
  434538:	xchg   ebp,eax
  434539:	adc    BYTE PTR [edx],cl
  43453b:	and    ebp,DWORD PTR [esi+0x0]
  43453e:	std    
  43453f:	stos   BYTE PTR es:[edi],al
  434540:	or     DWORD PTR [ebx],eax
  434542:	mov    bl,0xc7
  434544:	lods   eax,DWORD PTR ds:[esi]
  434545:	sahf   
  434546:	out    0x41,eax
  434548:	pop    esp
  434549:	rcl    DWORD PTR [eax+ebp*1],cl
  43454c:	pushf  
  43454d:	jbe    0x4344f5
  43454f:	or     eax,0xf3d70558
  434554:	shl    BYTE PTR [ebp-0x73],1
  434557:	adc    eax,0x494ccee
  43455c:	add    BYTE PTR [ecx],bl
  43455e:	popf   
  43455f:	fdivr  st(5),st
  434561:	clc    
  434562:	inc    edi
  434563:	xchg   ch,dh
  434565:	out    0x2e,eax
  434567:	or     ah,BYTE PTR [ebp-0x2555e4b2]
  43456d:	clc    
  43456e:	scas   al,BYTE PTR es:[edi]
  43456f:	aad    0x32
  434571:	and    DWORD PTR [ebx+0x32abfcc5],esi
  434577:	jo     0x434569
  434579:	mov    WORD PTR [ebp-0x68],es
  43457c:	je     0x43458b
  43457e:	jl     0x4345fb
  434580:	jmp    0xc5e867b7
  434585:	push   esp
  434586:	push   ebx
  434587:	stos   BYTE PTR es:[edi],al
  434588:	jle    0x434549
  43458a:	add    al,0x40
  43458c:	stc    
  43458d:	loop   0x43455a
  43458f:	popf   
  434590:	ror    bl,1
  434592:	mov    ss,WORD PTR [ebp+0x18016709]
  434598:	inc    ecx
  434599:	ror    ch,0x35
  43459c:	ffree  st(1)
  43459e:	mov    eax,ds:0x7c63038e
  4345a3:	xlat   BYTE PTR ds:[ebx]
  4345a4:	out    0x58,al
  4345a6:	ficom  WORD PTR [edi+0x31]
  4345a9:	retf   0x63d3
  4345ac:	js     0x4345ae
  4345ae:	out    dx,eax
  4345af:	imul   edx,DWORD PTR [ecx+0x6],0xffffff96
  4345b3:	xchg   ebp,eax
  4345b4:	(bad)  
  4345b5:	fcmovu st,st(7)
  4345b7:	inc    edi
  4345b8:	or     DWORD PTR [ebp+edx*1-0x13],ecx
  4345bc:	pop    es
  4345bd:	add    al,0x44
  4345bf:	adc    ebp,ebx
  4345c1:	jge    0x4345ed
  4345c3:	loope  0x434574
  4345c5:	leave  
  4345c6:	mov    edx,DWORD PTR cs:[ebx+edx*8+0x50]
  4345cb:	mov    al,ds:0xb7846585
  4345d0:	shr    DWORD PTR [edi-0x2d9645b3],0x14
  4345d7:	sub    dl,BYTE PTR [ecx+0x9770a99]
  4345dd:	sahf   
  4345de:	pop    ss
  4345df:	cli    
  4345e0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4345e1:	popf   
  4345e2:	push   ecx
  4345e3:	aam    0x72
  4345e5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4345e6:	add    ebx,DWORD PTR [esi+0x563b18da]
  4345ec:	ret    
  4345ed:	pusha  
  4345ee:	pusha  
  4345ef:	jmp    0x70007bb5
  4345f4:	imul   edx,DWORD PTR [ecx],0x77
  4345f7:	mov    edx,0x63d7d915
  4345fc:	pop    ebx
  4345fd:	xchg   esp,eax
  4345fe:	jmp    0x8766:0x85d1d282
  434605:	jbe    0x4345fa
  434607:	cmc    
  434608:	(bad)  
  434609:	push   ebx
  43460a:	adc    al,0x96
  43460c:	daa    
  43460d:	jp     0x4345b7
  43460f:	mov    edx,DWORD PTR [ebp+0x110001a1]
  434615:	add    DWORD PTR [eax],eax
  434617:	add    BYTE PTR [eax+0x5],bl
  43461a:	into   
  43461b:	and    bl,bh
  43461d:	push   ebp
  43461e:	popa   
  43461f:	jp     0x434609
  434621:	inc    edi
  434622:	inc    ebp
  434623:	ds pop eax
  434625:	ins    BYTE PTR es:[edi],dx
  434626:	and    cl,ah
  434628:	ja     0x43466e
  43462a:	retf   0x49d8
  43462d:	lea    ebp,[esi-0x2d]
  434630:	push   es
  434631:	cmps   WORD PTR ds:[esi],WORD PTR es:[edi]
  434633:	push   edi
  434634:	and    bl,BYTE PTR cs:[edi]
  434637:	and    DWORD PTR [edi-0xd],esp
  43463a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43463b:	push   ebp
  43463c:	enter  0xae7c,0x9f
  434640:	xor    al,0xf2
  434642:	mov    esp,0xe1df22be
  434647:	(bad)  [ebp+0x64]
  43464a:	cmp    BYTE PTR [edi-0x1c],bh
  43464d:	imul   esp,DWORD PTR [ebx-0x71],0xffffff85
  434651:	loopne 0x43469d
  434653:	das    
  434654:	test   BYTE PTR [ebx-0x45],0x5c
  434658:	in     al,0x60
  43465a:	sbb    eax,0x6c51e326
  43465f:	cmp    al,0x30
  434661:	scas   al,BYTE PTR es:[edi]
  434662:	dec    ecx
  434663:	rcl    BYTE PTR [ecx],cl
  434665:	xor    ah,BYTE PTR [edi]
  434667:	mov    bh,0xc0
  434669:	ds ret 
  43466b:	cmp    edi,eax
  43466d:	(bad)  
  43466e:	fwait
  43466f:	scas   al,BYTE PTR es:[edi]
  434670:	das    
  434671:	gs fwait
  434673:	jo     0x434628
  434675:	popa   
  434676:	loopne 0x434639
  434678:	inc    eax
  434679:	ins    DWORD PTR es:[edi],dx
  43467a:	les    eax,FWORD PTR [edx-0x5d9dbc47]
  434680:	mov    ebp,0xaa5cd0da
  434685:	push   edx
  434686:	das    
  434687:	cmp    DWORD PTR [edx],0x78cc8acc
  43468d:	jge    0x434629
  43468f:	adc    cl,bl
  434691:	ficomp DWORD PTR [edi-0x19375a27]
  434697:	dec    ebp
  434698:	fimul  WORD PTR ss:[ecx-0x55]
  43469c:	add    ecx,edx
  43469e:	sub    ah,bh
  4346a0:	cmc    
  4346a1:	call   0x77cbf371
  4346a6:	ficomp DWORD PTR [ebp-0x24eaa846]
  4346ac:	jmp    0x4a7cf0a5
  4346b1:	xchg   ebp,eax
  4346b2:	ss (bad) 
  4346b4:	mov    bh,0x35
  4346b6:	push   es
  4346b7:	pushf  
  4346b8:	ins    DWORD PTR es:[edi],dx
  4346b9:	add    DWORD PTR [edi+0x2f6f1f62],0xffffffc1
  4346c0:	pusha  
  4346c1:	inc    eax
  4346c2:	enter  0x893,0x16
  4346c6:	dec    edi
  4346c7:	outs   dx,DWORD PTR ds:[esi]
  4346c8:	xchg   esi,eax
  4346c9:	in     ax,dx
  4346cb:	ss and cl,dh
  4346ce:	mov    al,ds:0x2ec454f0
  4346d3:	in     eax,dx
  4346d4:	pusha  
  4346d5:	push   0x5a
  4346d7:	xchg   DWORD PTR [ecx],ebp
  4346d9:	stos   BYTE PTR es:[edi],al
  4346da:	or     eax,0x258d6a3
  4346df:	pop    edx
  4346e0:	sbb    bh,BYTE PTR [ebp+0x64]
  4346e3:	stc    
  4346e4:	xchg   esp,eax
  4346e5:	jo     0x43471d
  4346e7:	inc    ebx
  4346e8:	mov    ch,0xb9
  4346ea:	lahf   
  4346eb:	add    DWORD PTR [edx],0x6549e6bb
  4346f1:	push   es
  4346f2:	(bad)  
  4346f3:	(bad)  
  4346f4:	imul   eax,edi,0x59
  4346f7:	dec    esp
  4346f8:	fld    st(2)
  4346fa:	mov    eax,ds:0xc6033c20
  4346ff:	dec    edx
  434700:	aam    0xf7
  434702:	jl     0x4346e2
  434704:	ins    DWORD PTR es:[edi],dx
  434705:	push   edx
  434706:	fistp  DWORD PTR [eax+0x78f47c35]
  43470c:	add    dh,ch
  43470e:	retf   0x5acd
  434711:	push   edx
  434712:	mov    edx,0x7e09d81c
  434717:	repz push ecx
  434719:	mov    eax,0xe5de4d69
  43471e:	imul   ebx,DWORD PTR [ebx-0x68],0xda97d77
  434725:	scas   al,BYTE PTR es:[edi]
  434726:	xchg   ecx,eax
  434727:	das    
  434728:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  434729:	loop   0x434753
  43472b:	sti    
  43472c:	test   eax,0x6bf2fbfb
  434731:	popf   
  434732:	mov    eax,edi
  434734:	and    esp,DWORD PTR [edi+ebx*2]
  434737:	push   eax
  434738:	fdivr  st(6),st
  43473a:	test   DWORD PTR [ecx],0x11100
  434740:	add    dl,al
  434742:	xchg   edx,eax
  434743:	call   0xb4d0c11d
  434748:	popa   
  434749:	dec    esi
  43474a:	add    ch,BYTE PTR [edi-0x24]
  43474d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  43474e:	cmc    
  43474f:	(bad)  
  434750:	repnz bound esi,QWORD PTR [ebp+0x6669ca87]
  434757:	and    al,0x35
  434759:	adc    BYTE PTR [esi-0xb],bh
  43475c:	aaa    
  43475d:	and    al,0x57
  43475f:	mov    eax,0x567fb082
  434764:	ss add edi,edx
  434767:	push   esi
  434768:	les    edi,FWORD PTR [ebx]
  43476a:	dec    esi
  43476b:	add    ecx,edx
  43476d:	js     0x434773
  43476f:	pop    cx
  434771:	and    al,0x63
  434773:	xor    ecx,DWORD PTR [ebx+0x7c00d13]
  434779:	aam    0x20
  43477b:	or     al,ah
  43477d:	add    edx,0xf8da3d4a
  434783:	aas    
  434784:	(bad)  
  434786:	lea    ebx,[edi+0x4a]
  434789:	hlt    
  43478a:	or     al,0xab
  43478c:	push   edi
  43478d:	jmp    0xcf75:0x82cf4280
  434794:	jne    0x4347cc
  434796:	mov    ecx,0x734e3b64
  43479b:	scas   eax,DWORD PTR es:[edi]
  43479c:	fcom   QWORD PTR ds:0xa5e109b8
  4347a2:	(bad)  
  4347a3:	push   eax
  4347a4:	clc    
  4347a5:	loopne 0x4347d9
  4347a7:	adc    dl,ah
  4347a9:	cmp    BYTE PTR [ebx+0x4e],bl
  4347ac:	sub    al,0xb8
  4347ae:	into   
  4347af:	repnz leave 
  4347b1:	in     eax,0xfd
  4347b3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4347b4:	xlat   BYTE PTR ds:[ebx]
  4347b5:	shl    DWORD PTR [esi],cl
  4347b7:	pop    ebp
  4347b8:	push   esp
  4347b9:	or     DWORD PTR [edx-0x78],ecx
  4347bc:	imul   edi,DWORD PTR [eax-0x7d],0xffffffa0
  4347c0:	test   eax,0xe7850fdb
  4347c5:	ins    DWORD PTR es:[di],dx
  4347c7:	sti    
  4347c8:	fsubr  DWORD PTR [ecx+0x6ff041ee]
  4347ce:	lea    ebp,[esi+0x30d4de3d]
  4347d4:	in     eax,0xcb
  4347d6:	aam    0x61
  4347d8:	mov    ds:0x1ee4f3a6,al
  4347dd:	lds    ebx,FWORD PTR [eax-0x49]
  4347e0:	jp     0x434766
  4347e2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4347e3:	and    eax,0xa2a878b
  4347e8:	push   ds
  4347e9:	pop    edi
  4347ea:	scas   eax,DWORD PTR es:[edi]
  4347eb:	ror    bl,0x2f
  4347ee:	sti    
  4347ef:	int    0x16
  4347f1:	test   eax,0x1968a20a
  4347f6:	loopne 0x43485f
  4347f8:	add    bh,dl
  4347fa:	pop    ebp
  4347fb:	inc    edx
  4347fc:	jl     0x4347f1
  4347fe:	push   ds
  4347ff:	sti    
  434800:	out    0xeb,al
  434802:	retf   0x5c4b
  434805:	in     al,0xad
  434807:	mov    eax,0x8f76903f
  43480c:	(bad)  
  43480d:	cli    
  43480e:	mov    ds:0xd23b5ab2,eax
  434813:	jge    0x43488e
  434815:	int    0x16
  434817:	cmp    BYTE PTR [eax],0x8a
  43481a:	jge    0x4347df
  43481c:	mov    ebp,0xb35b2891
  434821:	inc    ebp
  434822:	sub    BYTE PTR [eax],ah
  434824:	add    al,0x23
  434826:	fisub  DWORD PTR [edx]
  434828:	mov    eax,ds:0x2ca04af5
  43482d:	and    al,0x12
  43482f:	sub    ch,bh
  434831:	loop   0x434864
  434833:	and    al,0x64
  434835:	dec    ebx
  434836:	mov    ah,0xa6
  434838:	mov    al,ds:0x3f19ae73
  43483e:	sbb    DWORD PTR [esi-0x47],ebx
  434841:	rol    DWORD PTR [eax],1
  434843:	pop    ss
  434844:	sahf   
  434845:	cdq    
  434846:	ins    BYTE PTR es:[edi],dx
  434847:	lock lock lea ebx,[esi-0x65]
  43484c:	sub    DWORD PTR [edx+0x2d878507],edx
  434852:	idiv   ch
  434854:	lods   eax,DWORD PTR ds:[esi]
  434855:	test   eax,0xfff6f9af
  43485a:	retf   
  43485b:	jmp    0x4347ea
  43485d:	jo     0x434832
  43485f:	push   esp
  434860:	hlt    
  434861:	pop    DWORD PTR [edi]
  434863:	stc    
  434864:	add    DWORD PTR [eax],eax
  434866:	adc    DWORD PTR [ecx],eax
  434868:	add    BYTE PTR [eax],al
  43486a:	les    ecx,FWORD PTR [esi+0x79]
  43486d:	mov    ebp,0x6e6cec81
  434872:	inc    ecx
  434873:	mov    eax,0x1f535596
  434878:	shl    esi,0x85
  43487b:	test   al,0xaa
  43487d:	push   ds
  43487e:	mov    ch,0xb2
  434880:	jne    0x4348f3
  434882:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  434883:	ror    DWORD PTR [ebx-0x2ecacb97],1
  434889:	jno    0x4348c5
  43488b:	dec    esi
  43488c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  43488d:	jmp    0x434847
  43488f:	push   0x41
  434891:	repz fs popf 
  434894:	add    ebx,ecx
  434896:	(bad)  
  434897:	mov    edx,DWORD PTR [edi+0xb]
  43489a:	sub    BYTE PTR [edi],0x9e
  43489d:	int    0xc4
  43489f:	lods   eax,DWORD PTR ds:[esi]
  4348a0:	xchg   edi,eax
  4348a1:	pop    esi
  4348a2:	jp     0x43491a
  4348a4:	dec    ebx
  4348a5:	in     al,dx
  4348a6:	xor    edi,DWORD PTR [ebx]
  4348a8:	pop    ss
  4348a9:	in     eax,0x73
  4348ab:	pop    ecx
  4348ac:	mov    eax,ds:0xcd7d2c4c
  4348b1:	les    edx,FWORD PTR [ebp+0x1cc4d78]
  4348b7:	add    eax,0x42c4d322
  4348bc:	dec    eax
  4348bd:	sbb    eax,ecx
  4348bf:	nop
  4348c0:	iret   
  4348c1:	xchg   ebp,eax
  4348c2:	imul   ecx,DWORD PTR [ebp+0x3d3ff864],0x72
  4348c9:	outs   dx,BYTE PTR ds:[esi]
  4348ca:	push   0xd7790c4e
  4348cf:	mov    cl,0xd4
  4348d1:	inc    esi
  4348d2:	push   edi
  4348d3:	dec    edi
  4348d4:	sbb    al,0xd4
  4348d6:	je     0x43490e
  4348d8:	aaa    
  4348d9:	jge    0x4348d2
  4348db:	test   al,0xea
  4348dd:	mov    edx,0x60129b7e
  4348e2:	jb     0x434937
  4348e4:	add    eax,0x924d1878
  4348e9:	sbb    edx,ebx
  4348eb:	pop    edx
  4348ec:	sub    al,bl
  4348ee:	sbb    eax,0x2ce54a1f
  4348f3:	dec    esi
  4348f4:	bound  ebx,QWORD PTR [ecx+0x773e295d]
  4348fa:	jns    0x4348fd
  4348fc:	nop
  4348fd:	out    0x70,al
  4348ff:	(bad)  
  434900:	push   ebx
  434901:	shl    ch,1
  434903:	pushf  
  434904:	outs   dx,BYTE PTR ss:[esi]
  434906:	dec    edx
  434907:	in     al,0x97
  434909:	loop   0x4348f4
  43490b:	lods   eax,DWORD PTR ds:[esi]
  43490c:	jle    0x43489b
  43490e:	add    BYTE PTR [edi],0x3c
  434911:	pop    ebp
  434912:	jl     0x434911
  434914:	mov    al,0x5b
  434916:	(bad)  
  434917:	jnp    0x43491d
  434919:	jo     0x3e494278
  43491f:	out    0x3e,al
  434921:	mov    BYTE PTR [edi-0xb73122c],0xb
  434928:	xor    BYTE PTR [ebx],cl
  43492a:	pextrw edi,(bad),0xc5
  43492c:	mov    edi,0xee2e3a60
  434931:	sub    esi,ecx
  434933:	test   dh,ah
  434935:	fistp  DWORD PTR [eax+0x6e9da3bc]
  43493b:	scas   al,BYTE PTR es:[edi]
  43493c:	cmp    ecx,ecx
  43493e:	aam    0x2f
  434940:	mov    edi,0xa58f35e3
  434945:	stos   BYTE PTR es:[edi],al
  434946:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  434947:	or     DWORD PTR [edx],edx
  434949:	in     al,0xd
  43494b:	mov    eax,DWORD PTR [edx]
  43494d:	sub    BYTE PTR [edx+0x31],dl
  434950:	in     al,0x72
  434952:	lea    ebp,[edx+0x62]
  434955:	push   ds
  434956:	int    0x9c
  434958:	fisubr WORD PTR [esi]
  43495a:	push   0x36
  43495c:	inc    esp
  43495d:	test   al,ah
  43495f:	mov    ah,0xd5
  434961:	call   0x53c2:0x1686ffd5
  434968:	out    dx,al
  434969:	xor    dl,bh
  43496b:	ret    
  43496c:	xchg   ebp,eax
  43496d:	push   esi
  43496e:	adc    DWORD PTR [edi],edx
  434970:	cdq    
  434971:	mov    esp,0xd13f7884
  434976:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  434977:	stc    
  434978:	push   ebp
  434979:	pop    esp
  43497a:	pop    edi
  43497b:	data16 arpl WORD PTR [edi+0x51],bx
  43497f:	pop    edi
  434980:	jge    0x4349f0
  434982:	ja     0x434952
  434984:	aad    0xa
  434986:	xor    eax,0x3060477c
  43498b:	pop    ebp
  43498c:	out    dx,al
  43498d:	add    DWORD PTR [eax],eax
  43498f:	adc    DWORD PTR [ecx],eax
  434991:	add    BYTE PTR [eax],al
  434993:	push   0x15d3367a
  434998:	adc    ebx,DWORD PTR [esi+0x199e9474]
  43499e:	jb     0x4349a8
  4349a0:	(bad)  
  4349a1:	cmp    DWORD PTR [edi-0x26],ebp
  4349a4:	mov    esp,0x3c0d7862
  4349a9:	mov    cl,BYTE PTR ds:0x5e5699c6
  4349af:	pop    edi
  4349b0:	mov    dh,BYTE PTR [edx-0x50b09f52]
  4349b6:	cmc    
  4349b7:	enter  0x6b6e,0xc5
  4349bb:	dec    edx
  4349bc:	rol    DWORD PTR [eax],cl
  4349be:	cld    
  4349bf:	(bad)  
  4349c0:	mov    ebp,0x16212f62
  4349c5:	cmp    al,0xb5
  4349c7:	(bad)  
  4349c8:	sub    al,0x97
  4349ca:	fs dec edi
  4349cc:	pop    esi
  4349cd:	xchg   esp,eax
  4349ce:	jo     0x434976
  4349d0:	pop    edx
  4349d1:	mov    dl,0x3f
  4349d3:	js     0x4349ea
  4349d5:	fs xchg dl,cl
  4349d8:	out    0x27,al
  4349da:	cmp    al,dl
  4349dc:	dec    ebx
  4349dd:	test   DWORD PTR [ecx+0x77],edi
  4349e0:	pop    es
  4349e1:	xor    eax,0x278a295
  4349e6:	aad    0x8e
  4349e8:	aas    
  4349e9:	(bad)  
  4349ea:	in     al,0xd7
  4349ec:	push   ebx
  4349ed:	push   esp
  4349ee:	loope  0x434a3a
  4349f0:	fcomp  DWORD PTR [ebp-0x30]
  4349f3:	inc    edx
  4349f4:	popf   
  4349f5:	pop    ss
  4349f6:	mov    esp,0x1b131b3e
  4349fb:	mov    ecx,0xb6d1d03f
  434a00:	jns    0x434a4c
  434a02:	aaa    
  434a03:	mov    esi,0x5ea9036c
  434a08:	aaa    
  434a09:	mov    cl,0x71
  434a0b:	call   0x61fd7d3d
  434a10:	sti    
  434a11:	fmul   DWORD PTR [edi]
  434a13:	sub    eax,0x55dff0ca
  434a18:	pushf  
  434a19:	arpl   WORD PTR [edx],si
  434a1b:	cmp    DWORD PTR [edx+edi*1],eax
  434a1e:	or     DWORD PTR [ebx-0x65c8f28d],0xffffffcf
  434a25:	jl     0x434a87
  434a27:	inc    ebx
  434a28:	pop    esp
  434a29:	mov    ecx,0x537f2aef
  434a2e:	std    
  434a2f:	lea    cx,[ebx-0x14]
  434a33:	bound  esi,QWORD PTR [esi-0x3b]
  434a36:	add    BYTE PTR [eax+esi*4-0x157b0630],0x47
  434a3e:	inc    eax
  434a3f:	sub    bl,dl
  434a41:	and    al,0x8
  434a43:	les    edx,FWORD PTR [ecx+edi*8]
  434a46:	and    eax,0x4fb80383
  434a4b:	mov    edi,0xd6f73963
  434a50:	jbe    0x434a5d
  434a52:	sub    al,BYTE PTR [esi]
  434a54:	push   ds
  434a55:	ret    
  434a56:	mov    al,ds:0xcc6a0d4f
  434a5b:	test   DWORD PTR [edi],ecx
  434a5d:	push   ebx
  434a5e:	dec    ebx
  434a5f:	pop    ss
  434a60:	addr16 sub esi,0xffffffe3
  434a64:	xor    BYTE PTR [edx+0xd],dl
  434a67:	xchg   ecx,eax
  434a68:	imul   esp,eax,0xffffffd9
  434a6b:	add    DWORD PTR [edx-0x52749d9f],0xd186bf74
  434a75:	push   esi
  434a76:	adc    al,0x3f
  434a78:	retf   0x8f4e
  434a7b:	inc    esp
  434a7c:	and    esp,esi
  434a7e:	sbb    eax,0xcea71c34
  434a83:	inc    esi
  434a84:	cmp    BYTE PTR [ecx+0x78a14ee9],0xd4
  434a8b:	ins    DWORD PTR es:[di],dx
  434a8d:	xor    edi,DWORD PTR [esp+ecx*2]
  434a90:	and    al,BYTE PTR [ebx-0x50]
  434a93:	cs stc 
  434a95:	ret    0xf098
  434a98:	push   ds
  434a99:	out    0x65,al
  434a9b:	adc    eax,0xcf13481b
  434aa0:	adc    al,0x43
  434aa2:	mov    dh,0x12
  434aa4:	sub    BYTE PTR [eax],al
  434aa6:	add    BYTE PTR [eax],al
  434aa8:	and    BYTE PTR [eax],al
  434aaa:	add    BYTE PTR [eax],al
  434aac:	inc    eax
  434aad:	add    BYTE PTR [eax],al
  434aaf:	add    BYTE PTR [ecx],al
  434ab1:	add    BYTE PTR [eax],bl
  434ab3:	add    BYTE PTR [eax],al
  434ab5:	add    BYTE PTR [eax],al
  434ab7:	add    BYTE PTR [eax],al
  434ab9:	or     al,0x0
	...
  434acb:	add    BYTE PTR [edi+0x7a],al
  434ace:	repz mov edi,0x61a1fbb
  434ad4:	loope  0x434a95
  434ad6:	mov    ebx,0x9891f81f
  434adb:	mov    edi,0xbbbf1fbb
  434ae0:	pop    ds
  434ae1:	mov    edi,0xbbbf1fbb
  434ae6:	pop    ds
  434ae7:	mov    edi,0xbbbf1fbb
  434aec:	pop    ds
  434aed:	mov    edi,0xbbbf1fbb
  434af2:	pop    ds
  434af3:	mov    edi,0xbbbf1fbb
  434af8:	pop    ds
  434af9:	mov    bh,0x61
  434afb:	pop    eax
  434afc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  434afd:	outs   dx,BYTE PTR ds:[esi]
  434afe:	in     eax,0xbf
  434b00:	mov    ebx,0x2727ed1f
  434b05:	sub    BYTE PTR [bx+di],ch
  434b08:	mov    edi,0xbbbf1fbb
  434b0d:	pop    ds
  434b0e:	mov    edi,0xbbbf1fbb
  434b13:	pop    ds
  434b14:	mov    edi,0xbbbf1fbb
  434b19:	pop    ds
  434b1a:	mov    edi,0xbbbf1fbb
  434b1f:	pop    ds
  434b20:	mov    edi,0xbbbf1fbb
  434b25:	pop    ds
  434b26:	mov    edi,0xbbbf1fbb
  434b2b:	pop    ds
  434b2c:	mov    ch,0xac
  434b2e:	fidivr DWORD PTR [edi-0x4440e045]
  434b34:	pop    ds
  434b35:	mov    edi,0xbbbf1fbb
  434b3a:	pop    ds
  434b3b:	mov    edi,0xbbbf1fbb
  434b40:	pop    ds
  434b41:	mov    edi,0xbbbf1fbb
  434b46:	pop    ds
  434b47:	clc    
  434b48:	stos   DWORD PTR es:[edi],eax
  434b49:	inc    eax
  434b4a:	mov    edi,0xbbbf1fbb
  434b4f:	pop    ds
  434b50:	mov    edi,0x57311fbb
  434b55:	iret   
  434b56:	mov    edi,0x437b1fbb
  434b5b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  434b5c:	mov    edi,0xc3831fbb
  434b61:	sar    BYTE PTR [edi-0x4440e045],0x1f
  434b68:	cmps   DWORD PTR cs:[esi],DWORD PTR es:[edi]
  434b6a:	lea    edi,[edi-0x4440e045]
  434b70:	pop    ds
  434b71:	loopne 0x434b42
  434b73:	adc    eax,0xc81fbbbf
  434b78:	in     al,0x5d
  434b7a:	cmp    al,0x88
  434b7c:	adc    eax,0xbf1fbbbf
  434b81:	mov    ebx,0x1fbbbf1f
  434b86:	mov    edi,0xd9571fbb
  434b8b:	mov    cl,0xbf
  434b8d:	mov    ebx,0x5093551f
  434b92:	mov    edi,0xbbbf1fbb
  434b97:	pop    ds
  434b98:	mov    edi,0xbbbf1fbb
  434b9d:	pop    ds
  434b9e:	mov    edi,0xbbbf1fbb
  434ba3:	pop    ds
  434ba4:	mov    edi,0xcb2d1fbb
  434ba9:	enter  0xbbbf,0x1f
  434bad:	(bad)  
  434bae:	ds ret 0xbbbf
  434bb2:	pop    ds
  434bb3:	mov    edi,0x7f4e1fbb
  434bb8:	in     eax,0xd2
  434bba:	sub    cl,BYTE PTR [eax-0x40e04441]
  434bc0:	mov    ebx,0xb0cadd1f
  434bc5:	mov    edi,0xbbbf1fbb
  434bca:	pop    ds
  434bcb:	mov    edi,0x21781fbb
  434bd0:	dec    eax
  434bd1:	mov    edi,0xbbbf1fbb
  434bd6:	pop    ds
  434bd7:	mov    edi,0xbbbf1fbb
  434bdc:	pop    ds
  434bdd:	mov    edi,0xbbbf1fbb
  434be2:	pop    ds
  434be3:	into   
  434be4:	addr16 xchg ebp,eax
  434be6:	mov    edi,0xbbbf1fbb
  434beb:	pop    ds
  434bec:	mov    edi,0x136d1fbb
  434bf1:	sub    bh,BYTE PTR [edi-0x4440e045]
  434bf7:	pop    ds
  434bf8:	mov    edi,0xbbbf1fbb
  434bfd:	pop    ds
  434bfe:	mov    edi,0xbbbf1fbb
  434c03:	pop    ds
  434c04:	mov    edi,0xbbbf1fbb
  434c09:	pop    ds
  434c0a:	mov    edi,0xbbbf1fbb
  434c0f:	pop    ds
  434c10:	mov    edi,0xbbbf1fbb
  434c15:	pop    ds
  434c16:	jne    0x434c07
  434c18:	stos   DWORD PTR es:[edi],eax
  434c19:	mov    edi,0xbbbf1fbb
  434c1e:	pop    ds
  434c1f:	repnz sub eax,0x1fbbbffd
  434c25:	mov    edi,0x54461fbb
  434c2a:	cs mov edi,0xbbbf1fbb
  434c30:	pop    ds
  434c31:	mov    edi,0xbbbf1fbb
  434c36:	pop    ds
  434c37:	mov    edi,0xce9d1fbb
  434c3c:	cmp    DWORD PTR [edi-0x4440e045],edi
  434c42:	pop    ds
  434c43:	mov    edi,0x888a1fbb
  434c48:	pusha  
  434c49:	mov    WORD PTR [ecx],es
  434c4b:	mov    dh,0xbf
  434c4d:	mov    ebx,0x1fbbbf1f
  434c52:	mov    edi,0xbbbf1fbb
  434c57:	pop    ds
  434c58:	mov    edi,0x93a1fbb
  434c5d:	dec    ecx
  434c5e:	mov    edi,0x64451fbb
  434c63:	dec    esp
  434c64:	mov    edi,0xbbbf1fbb
  434c69:	pop    ds
  434c6a:	mov    edi,0xbbbf1fbb
  434c6f:	pop    ds
  434c70:	mov    edi,0xd5b1fbb
  434c75:	add    BYTE PTR [edi-0x4440e045],bh
  434c7b:	pop    ds
  434c7c:	pop    eax
  434c7d:	or     ebx,edx
  434c7f:	cmp    cl,bh
  434c81:	mov    ebx,0xbf818eb6
  434c86:	mov    ebx,0x1fbbbf1f
  434c8b:	mov    edi,0xbbbf1fbb
  434c90:	pop    ds
  434c91:	lods   eax,DWORD PTR ds:[esi]
  434c92:	pop    ds
  434c93:	adc    ecx,DWORD PTR [ebx]
  434c95:	cmp    ebp,DWORD PTR [eax-0x40621b57]
  434c9b:	mov    ebx,0xf39e861f
  434ca0:	mov    edi,0xea701fbb
  434ca5:	retf   0x24c3
  434ca8:	xchg   ebp,eax
  434ca9:	jne    0x434cc5
  434cab:	mov    eax,ds:0xbfd7bd97
  434cb0:	mov    ebx,0x1fbbbf1f
  434cb5:	jo     0x434cba
  434cb7:	ins    DWORD PTR es:[edi],dx
  434cb8:	mov    edi,0xbbbf1fbb
  434cbd:	pop    ds
  434cbe:	mov    edi,0xbbbf1fbb
  434cc3:	pop    ds
  434cc4:	adc    BYTE PTR [edi+eax*1-0x40e04441],al
  434ccb:	mov    ebx,0x1fbbbf1f
  434cd0:	mov    edi,0xbbbf1fbb
  434cd5:	pop    ds
  434cd6:	mov    edi,0xbbbf1fbb
  434cdb:	pop    ds
  434cdc:	mov    edi,0xbbbf1fbb
  434ce1:	pop    ds
  434ce2:	mov    edi,0xbbbf1fbb
  434ce7:	pop    ds
  434ce8:	mov    edi,0xbbbf1fbb
  434ced:	pop    ds
  434cee:	mov    edi,0xbbbf1fbb
  434cf3:	pop    ds
  434cf4:	xlat   BYTE PTR ds:[ebx]
  434cf5:	scas   eax,DWORD PTR es:[edi]
  434cf6:	xchg   edx,eax
  434cf7:	mov    edi,0xbbbf1fbb
  434cfc:	pop    ds
  434cfd:	mov    edi,0xbbbf1fbb
  434d02:	pop    ds
  434d03:	mov    edi,0xbbbf1fbb
  434d08:	pop    ds
  434d09:	mov    edi,0xbbbf1fbb
  434d0e:	pop    ds
  434d0f:	cld    
  434d10:	jo     0x434d72
  434d12:	mov    edi,0xbbbf1fbb
  434d17:	pop    ds
  434d18:	mov    edi,0xf94c1fbb
  434d1d:	xor    DWORD PTR [ebp-0x6f],ecx
  434d20:	jg     0x434ce1
  434d22:	mov    ebx,0x1fbbbf1f
  434d27:	mov    edi,0x3ec41fbb
  434d2c:	nop
  434d2d:	mov    edi,0xbbbf1fbb
  434d32:	pop    ds
  434d33:	mov    edi,0xbbbf1fbb
  434d38:	pop    ds
  434d39:	cmp    bh,BYTE PTR [esi+0x35]
  434d3c:	mov    edi,0xbbbf1fbb
  434d41:	pop    ds
  434d42:	mov    edi,0xbbbf1fbb
  434d47:	pop    ds
  434d48:	mov    edi,0xb5421fbb
  434d4d:	test   BYTE PTR [edi-0x4440e045],bh
  434d53:	pop    ds
  434d54:	js     0x434cd9
  434d56:	jp     0x434d17
  434d58:	mov    ebx,0x1fbbbf1f
  434d5d:	mov    edi,0xbbbf1fbb
  434d62:	pop    ds
  434d63:	mov    edi,0xbbbf1fbb
  434d68:	pop    ds
  434d69:	mov    edi,0xbbbf1fbb
  434d6e:	pop    ds
  434d6f:	mov    edi,0xbbbf1fbb
  434d74:	pop    ds
  434d75:	mov    edi,0x63a1fbb
  434d7a:	clc    
  434d7b:	mov    edi,0xbbbf1fbb
  434d80:	pop    ds
  434d81:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  434d82:	mov    ?,WORD PTR [esi-0x52]
  434d85:	cwde   
  434d86:	jg     0x434d47
  434d88:	mov    ebx,0x1fbbbf1f
  434d8d:	mov    edi,0xbbbf1fbb
  434d92:	pop    ds
  434d93:	mov    edi,0xbbbf1fbb
  434d98:	pop    ds
  434d99:	mov    edi,0xbbbf1fbb
  434d9e:	pop    ds
  434d9f:	mov    edi,0xbbbf1fbb
  434da4:	pop    ds
  434da5:	mov    edi,0xbbbf1fbb
  434daa:	pop    ds
  434dab:	mov    edi,0x97441fbb
  434db0:	pushf  
  434db1:	mov    edi,0xbbbf1fbb
  434db6:	pop    ds
  434db7:	mov    edi,0xbbbf1fbb
  434dbc:	pop    ds
  434dbd:	(bad)  
  434dbe:	push   eax
  434dbf:	mov    dl,0xbf
  434dc1:	mov    ebx,0x1fbbbf1f
  434dc6:	mov    edi,0xe69d1fbb
  434dcb:	mov    ah,0xbf
  434dcd:	mov    ebx,0x49ed651f
  434dd2:	pop    ecx
  434dd3:	jmp    0x434da3
  434dd5:	mov    edi,0xbbbf1fbb
  434dda:	pop    ds
  434ddb:	mov    edi,0xbbbf1fbb
  434de0:	pop    ds
  434de1:	mov    ah,0xf1
  434de3:	ins    BYTE PTR es:[edi],dx
  434de4:	mov    edi,0xbbbf1fbb
  434de9:	pop    ds
  434dea:	mov    edi,0x51081fbb
  434def:	aaa    
  434df0:	mov    edi,0xbbbf1fbb
  434df5:	pop    ds
  434df6:	mov    edi,0xadb31fbb
  434dfb:	je     0x434dbc
  434dfd:	mov    ebx,0x1fbbbf1f
  434e02:	mov    edi,0xbbbf1fbb
  434e07:	pop    ds
  434e08:	mov    edi,0xbbbf1fbb
  434e0d:	pop    ds
  434e0e:	mov    edi,0xbbbf1fbb
  434e13:	pop    ds
  434e14:	inc    ecx
  434e15:	xchg   edi,eax
  434e16:	cmp    al,0x94
  434e18:	mov    cl,0x63
  434e1a:	mov    edi,0xbbbf1fbb
  434e1f:	pop    ds
  434e20:	jns    0x434e64
  434e22:	cmp    DWORD PTR [edi-0x3db2e045],edi
  434e28:	bound  edi,QWORD PTR [edi-0x4440e045]
  434e2e:	pop    ds
  434e2f:	xchg   edi,eax
  434e30:	daa    
  434e31:	cli    
  434e32:	mov    edi,0xd5591fbb
  434e37:	fwait
  434e38:	push   eax
  434e3a:	sub    DWORD PTR [edx+0x39],0x1fbbbf4d
  434e41:	mov    edi,0xbbbf1fbb
  434e46:	pop    ds
  434e47:	neg    edx
  434e49:	jmp    0x434e0a
  434e4b:	mov    ebx,0x1fbbbf1f
  434e50:	mov    edi,0xbbbf1fbb
  434e55:	pop    ds
  434e56:	mov    edi,0xbbbf1fbb
  434e5b:	pop    ds
  434e5c:	(bad)  
  434e5d:	mov    ds:0x1fbbbf3c,al
  434e62:	mov    edi,0xbbbf1fbb
  434e67:	pop    ds
  434e68:	mov    edi,0xbbbf1fbb
  434e6d:	pop    ds
  434e6e:	mov    edi,0x66171fbb
  434e73:	cmp    al,0xbf
  434e75:	mov    ebx,0x1fbbbf1f
  434e7a:	mov    edi,0x3aec1fbb
  434e7f:	jo     0x434e4d
  434e81:	cwde   
  434e82:	inc    ebp
  434e83:	mov    edi,0xbbbf1fbb
  434e88:	pop    ds
  434e89:	mov    edi,0xb1f71fbb
  434e8e:	(bad)  
  434e8f:	mov    edi,0xbbbf1fbb
  434e94:	pop    ds
  434e95:	mov    edi,0xbbbf1fbb
  434e9a:	pop    ds
  434e9b:	mov    edi,0xbbbf1fbb
  434ea0:	pop    ds
  434ea1:	mov    edi,0xbbbf1fbb
  434ea6:	pop    ds
  434ea7:	mov    edi,0x3c91fbb
  434eac:	cmp    al,0xbf
  434eae:	mov    ebx,0x1fbbbf1f
  434eb3:	out    dx,eax
  434eb4:	fnstenv [eax]
  434eb6:	mov    edi,0xbbbf1fbb
  434ebb:	pop    ds
  434ebc:	mov    edi,0xbbbf1fbb
  434ec1:	pop    ds
  434ec2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  434ec3:	popf   
  434ec4:	cmp    edi,DWORD PTR [edi-0x4440e045]
  434eca:	pop    ds
  434ecb:	mov    edi,0x26d91fbb
  434ed0:	dec    ebx
  434ed1:	mov    edi,0x72f11fbb
  434ed6:	mov    esp,0x6c1fbbbf
  434edb:	sub    edi,0x4fc03019
  434ee1:	cmp    DWORD PTR [ecx],ebx
  434ee3:	mov    edi,0xbbbf1fbb
  434ee8:	pop    ds
  434ee9:	mov    edi,0xe5f11fbb
  434eee:	gs push edx
  434ef0:	pop    ebx
  434ef1:	mov    al,ds:0xbf1fbbbf
  434ef6:	mov    ebx,0x1fbbbf1f
  434efb:	mov    edi,0xbbbf1fbb
  434f00:	pop    ds
  434f01:	mov    edi,0x4db81fbb
  434f06:	scas   eax,DWORD PTR es:[edi]
  434f07:	mov    edi,0xbbbf1fbb
  434f0c:	pop    ds
  434f0d:	mov    edi,0xbbbf1fbb
  434f12:	pop    ds
  434f13:	mov    edi,0xbbbf1fbb
  434f18:	pop    ds
  434f19:	pop    ebx
  434f1a:	int    0xec
  434f1c:	mov    edi,0xbbbf1fbb
  434f21:	pop    ds
  434f22:	mov    edi,0x62e51fbb
  434f27:	aas    
  434f28:	mov    ds:0xbbbfe58e,al
  434f2d:	pop    ds
  434f2e:	mov    edi,0x846d1fbb
  434f33:	jbe    0x434ec0
  434f35:	push   es
  434f36:	and    al,0xbf
  434f38:	mov    ebx,0x1fbbbf1f
  434f3d:	mov    edi,0xbbbf1fbb
  434f42:	pop    ds
  434f43:	mov    edi,0xbbbf1fbb
  434f48:	pop    ds
  434f49:	mov    edi,0xbbbf1fbb
  434f4e:	pop    ds
  434f4f:	mov    edi,0xbbbf1fbb
  434f54:	pop    ds
  434f55:	hlt    
  434f56:	(bad)  
  434f57:	jp     0x434ef7
  434f59:	inc    DWORD PTR [ebp-0x40e04441]
  434f5f:	mov    ebx,0xa78b331f
  434f64:	mov    edi,0xbbbf1fbb
  434f69:	pop    ds
  434f6a:	mov    edi,0xbbbf1fbb
  434f6f:	pop    ds
  434f70:	pop    ebp
  434f71:	mov    ebx,0x30922a8f
  434f76:	mov    edi,0xee751fbb
  434f7b:	pop    ebx
  434f7c:	mov    edi,0xbbbf1fbb
  434f81:	pop    ds
  434f82:	mov    edi,0x35c11fbb
  434f87:	int3   
  434f88:	mov    edi,0xbbbf1fbb
  434f8d:	pop    ds
  434f8e:	ret    
  434f8f:	push   edx
  434f90:	stos   DWORD PTR es:[edi],eax
  434f91:	adc    DWORD PTR [edi+0x1fbbbf00],ecx
  434f97:	add    al,0x7
  434f99:	stos   BYTE PTR es:[edi],al
  434f9a:	mov    edi,0xbbbf1fbb
  434f9f:	pop    ds
  434fa0:	mov    edi,0xbbbf1fbb
  434fa5:	pop    ds
  434fa6:	sbb    al,0x9d
  434fa8:	add    eax,0x8d1fbbbf
  434fad:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  434fae:	bound  edi,QWORD PTR [edi+0x46f01fbb]
  434fb4:	sbb    eax,0xc709c99f
  434fb9:	cld    
  434fba:	sar    DWORD PTR [edi-0x4440e045],1
  434fc0:	pop    ds
  434fc1:	mov    edi,0xbbbf1fbb
  434fc6:	pop    ds
  434fc7:	mov    edi,0xbbbf1fbb
  434fcc:	pop    ds
  434fcd:	mov    edi,0xb1c01fbb
  434fd2:	mov    esp,0xbff39214
  434fd7:	mov    ebx,0x1fbbbf1f
  434fdc:	mov    edi,0xbbbf1fbb
  434fe1:	pop    ds
  434fe2:	mov    edi,0x1d661fbb
  434fe7:	push   eax
  434fe8:	mov    edi,0xbbbf1fbb
  434fed:	pop    ds
  434fee:	retf   
  434fef:	mov    ch,0x29
  434ff1:	mov    edi,0x727b1fbb
  434ff6:	cdq    
  434ff7:	mov    edi,0xbbbf1fbb
  434ffc:	pop    ds
  434ffd:	mov    edi,0xbbbf1fbb
  435002:	pop    ds
  435003:	mov    eax,ds:0xbbbf7a0f
  435008:	pop    ds
  435009:	repnz popf 
  43500b:	movsx  edi,WORD PTR [ebx+0x1fbbbf1f]
  435012:	mov    edi,0xbbbf1fbb
  435017:	pop    ds
  435018:	mov    edi,0x3d9b1fbb
  43501d:	loope  0x434ff3
  43501f:	adc    eax,0x1fbbbffa
  435024:	mov    edi,0xe6e01fbb
  435029:	dec    ecx
  43502a:	mov    edi,0xbbbf1fbb
  43502f:	pop    ds
  435030:	mov    edi,0x24651fbb
  435035:	sub    al,0xbf
  435037:	mov    ebx,0x1fbbbf1f
  43503c:	mov    edi,0xbbbf1fbb
  435041:	pop    ds
  435042:	mov    edi,0xbbbf1fbb
  435047:	pop    ds
  435048:	jno    0x435086
  43504a:	in     al,dx
  43504b:	mov    edi,0xbbbf1fbb
  435050:	pop    ds
  435051:	mov    edi,0xd4a1fbb
  435056:	mov    esi,0xbf1fbbbf
  43505b:	mov    ebx,0x1fbbbf1f
  435060:	mov    edi,0xbbbf1fbb
  435065:	pop    ds
  435066:	cmp    BYTE PTR [ecx],al
  435068:	mov    bl,0xff
  43506a:	sub    DWORD PTR [edi-0x41],0xbbbf1fbb
  435071:	pop    ds
  435072:	xchg   BYTE PTR [eax+0x7e],cl
  435075:	mov    ecx,0xbbbf9753
  43507a:	pop    ds
  43507b:	mov    edi,0xbbbf1fbb
  435080:	pop    ds
  435081:	pop    esp
  435082:	test   DWORD PTR [edi+edi*4-0x4440e045],ebx
  435089:	pop    ds
  43508a:	mov    edi,0x399f1fbb
  43508f:	and    al,0xbf
  435091:	mov    ebx,0x1fbbbf1f
  435096:	mov    edi,0xbbbf1fbb
  43509b:	pop    ds
  43509c:	mov    edi,0xbbbf1fbb
  4350a1:	pop    ds
  4350a2:	mov    edi,0xbbbf1fbb
  4350a7:	pop    ds
  4350a8:	mov    edi,0xbbbf1fbb
  4350ad:	pop    ds
  4350ae:	jge    0x43509a
  4350b0:	jae    0x435071
  4350b2:	mov    ebx,0x7aea431f
  4350b7:	adc    edi,esi
  4350b9:	sar    DWORD PTR [edi-0x4440e045],cl
  4350bf:	pop    ds
  4350c0:	mov    edi,0xbbbf1fbb
  4350c5:	pop    ds
  4350c6:	mov    edi,0xbbbf1fbb
  4350cb:	pop    ds
  4350cc:	call   0xbf1f:0xbbbf80fd
  4350d3:	mov    ebx,0x1fbbbf1f
  4350d8:	push   0x34
  4350da:	popf   
  4350db:	mov    edi,0xbbbf1fbb
  4350e0:	pop    ds
  4350e1:	mov    edi,0xbbbf1fbb
  4350e6:	pop    ds
  4350e7:	mov    edi,0xbbbf1fbb
  4350ec:	pop    ds
  4350ed:	mov    edi,0xbbbf1fbb
  4350f2:	pop    ds
  4350f3:	mov    edi,0xbbbf1fbb
  4350f8:	pop    ds
  4350f9:	lds    edi,FWORD PTR [edx]
  4350fb:	push   esi
  4350fc:	mov    edi,0xd7cd1fbb
  435101:	cmp    BYTE PTR [edi-0x4440e045],0x1f
  435108:	mov    edi,0xbbbf1fbb
  43510d:	pop    ds
  43510e:	mov    edi,0xbbbf1fbb
  435113:	pop    ds
  435114:	mov    edi,0xde5b1fbb
  435119:	inc    esi
  43511a:	mov    edi,0x60fe1fbb
  43511f:	nop
  435120:	mov    edi,0xbbbf1fbb
  435125:	pop    ds
  435126:	xchg   edx,eax
  435127:	sub    al,0xa4
  435129:	mov    edi,0xbbbf1fbb
  43512e:	pop    ds
  43512f:	mov    edi,0x24731fbb
  435134:	fimul  DWORD PTR [ebp-0x444042f1]
  43513a:	pop    ds
  43513b:	mov    edi,0xbbbf1fbb
  435140:	pop    ds
  435141:	mov    edi,0x6d671fbb
  435146:	stc    
  435147:	mov    edi,0xccf71fbb
  43514c:	hlt    
  43514d:	mov    edi,0xbbbf1fbb
  435152:	pop    ds
  435153:	mov    edi,0xbbbf1fbb
  435158:	pop    ds
  435159:	xlat   BYTE PTR ds:[ebx]
  43515a:	adc    bl,dl
  43515c:	mov    edi,0xbbbf1fbb
  435161:	pop    ds
  435162:	mov    edi,0xbbbf1fbb
  435167:	pop    ds
  435168:	mov    edi,0x74b91fbb
  43516d:	jnp    0x43512e
  43516f:	mov    ebx,0x1fbbbf1f
  435174:	pop    ecx
  435175:	sub    al,0xd
  435177:	mov    edi,0xbbbf1fbb
  43517c:	pop    ds
  43517d:	mov    edi,0xfd951fbb
  435182:	mov    edi,DWORD PTR [edi-0x6ba6e045]
  435188:	and    al,0xbf
  43518a:	mov    ebx,0x1fbbbf1f
  43518f:	xchg   edi,eax
  435190:	int    0x2
  435192:	shr    BYTE PTR [eax+0x29],1
  435195:	mov    edi,0xf8a91fbb
  43519a:	mov    ?,WORD PTR [edi-0x4440e045]
  4351a0:	pop    ds
  4351a1:	fdiv   QWORD PTR [eax-0x6f]
  4351a4:	fucomp st(3)
  4351a6:	pop    eax
  4351a7:	mov    edi,0xbbbf1fbb
  4351ac:	pop    ds
  4351ad:	mov    edi,0xbbbf1fbb
  4351b2:	pop    ds
  4351b3:	mov    edi,0xaefb1fbb
  4351b8:	push   ebx
  4351b9:	hlt    
  4351ba:	push   cs
  4351bb:	mov    ch,0xbf
  4351bd:	mov    ebx,0xe6ca931f
  4351c2:	mov    edi,0xb13f1fbb
  4351c7:	push   esi
  4351c8:	add    al,0xb1
  4351ca:	pop    edx
  4351cb:	mov    edi,0xbbbf1fbb
  4351d0:	pop    ds
  4351d1:	mov    edi,0xbbbf1fbb
  4351d6:	pop    ds
  4351d7:	mov    edi,0xbbbf1fbb
  4351dc:	pop    ds
  4351dd:	mov    edi,0xbbbf1fbb
  4351e2:	pop    ds
  4351e3:	mov    edi,0xbbbf1fbb
  4351e8:	pop    ds
  4351e9:	mov    edi,0xd7561fbb
  4351ee:	xor    bh,BYTE PTR [edi-0x4440e045]
  4351f4:	pop    ds
  4351f5:	mov    edi,0xbbbf1fbb
  4351fa:	pop    ds
  4351fb:	mov    edi,0xbbbf1fbb
  435200:	pop    ds
  435201:	and    al,BYTE PTR [esi+0x1fbbbfc9]
  435207:	mov    edi,0xb9781fbb
  43520c:	dec    edx
  43520d:	mov    edi,0xbbbf1fbb
  435212:	pop    ds
  435213:	mov    edi,0xbbbf1fbb
  435218:	pop    ds
  435219:	in     eax,0xfc
  43521b:	dec    edx
  43521c:	mov    edi,0xbbbf1fbb
  435221:	pop    ds
  435222:	mov    edi,0x71961fbb
  435227:	jo     0x4351e8
  435229:	mov    ebx,0x1fbbbf1f
  43522e:	mov    edi,0xbbbf1fbb
  435233:	pop    ds
  435234:	mov    edi,0xbbbf1fbb
  435239:	pop    ds
  43523a:	mov    edi,0xbbbf1fbb
  43523f:	pop    ds
  435240:	mov    edi,0xbbbf1fbb
  435245:	pop    ds
  435246:	mov    edi,0xbbbf1fbb
  43524b:	pop    ds
  43524c:	outs   dx,BYTE PTR ds:[esi]
  43524d:	dec    edx
  43524e:	push   0xffffffbf
  435250:	mov    ebx,0x1fbbbf1f
  435255:	mov    edi,0x66331fbb
  43525a:	jle    0x43521b
  43525c:	mov    ebx,0xa838b31f
  435261:	ins    DWORD PTR es:[edi],dx
  435262:	push   es
  435263:	sub    edi,DWORD PTR [edi-0x4440e045]
  435269:	pop    ds
  43526a:	call   0x335c79f
  43526f:	mov    edi,0xc51fbbbf
  435274:	push   esp
  435275:	cmc    
  435276:	mov    edi,0xbbbf1fbb
  43527b:	pop    ds
  43527c:	mov    edi,0xbbbf1fbb
  435281:	pop    ds
  435282:	repz xor eax,0x1fbbbf3a
  435288:	mov    edi,0xbbbf1fbb
  43528d:	pop    ds
  43528e:	mov    edi,0xbbbf1fbb
  435293:	pop    ds
  435294:	mov    edi,0xbbbf1fbb
  435299:	pop    ds
  43529a:	mov    edi,0xac471fbb
  43529f:	dec    ebx
  4352a0:	mov    edi,0x76ed1fbb
  4352a5:	fwait
  4352a6:	mov    edi,0xbbbf1fbb
  4352ab:	pop    ds
  4352ac:	mov    edi,0x39e91fbb
  4352b1:	sbb    BYTE PTR [edi+0x18dc1fbb],bh
  4352b7:	fidivr WORD PTR [edi-0x4440e045]
  4352bd:	pop    ds
  4352be:	mov    edi,0xbbbf1fbb
  4352c3:	pop    ds
  4352c4:	mov    edi,0xbbbf1fbb
  4352c9:	pop    ds
  4352ca:	sahf   
  4352cb:	xchg   edx,eax
  4352cc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4352cd:	mov    edi,0xbbbf1fbb
  4352d2:	pop    ds
  4352d3:	int    0x90
  4352d5:	push   ebx
  4352d6:	mov    edi,0xbbbf1fbb
  4352db:	pop    ds
  4352dc:	mov    ds:0x6c73e65d,al
  4352e1:	sub    al,0xbf
  4352e3:	mov    ebx,0x1fbbbf1f
  4352e8:	mov    edi,0xbbbf1fbb
  4352ed:	pop    ds
  4352ee:	mov    edi,0xbbbf1fbb
  4352f3:	pop    ds
  4352f4:	mov    edi,0xbbbf1fbb
  4352f9:	pop    ds
  4352fa:	mov    edi,0xbbbf1fbb
  4352ff:	pop    ds
  435300:	mov    eax,ds:0xbbbfa7da
  435305:	pop    ds
  435306:	jp     0x435329
  435308:	xchg   esi,eax
  435309:	push   cs
  43530a:	(bad)  
  43530b:	push   0xffffffbf
  43530d:	mov    ebx,0x1fbbbf1f
  435312:	mov    eax,0xbbbfa062
  435317:	pop    ds
  435318:	mov    edi,0xbbbf1fbb
  43531d:	pop    ds
  43531e:	mov    edi,0xbbbf1fbb
  435323:	pop    ds
  435324:	mov    edi,0xbbbf1fbb
  435329:	pop    ds
  43532a:	lea    ecx,[edx+0xb]
  43532d:	mov    edi,0x354d1fbb
  435332:	and    esi,DWORD PTR [ebp-0x5e835dee]
  435338:	test   bh,al
  43533a:	pop    ss
  43533b:	js     0x4352fc
  43533d:	mov    ebx,0x1fbbbf1f
  435342:	mov    edi,0xbbbf1fbb
  435347:	pop    ds
  435348:	mov    edi,0xbbbf1fbb
  43534d:	pop    ds
  43534e:	add    DWORD PTR [esi-0x5e],ebx
  435351:	mov    edi,0xbbbf1fbb
  435356:	pop    ds
  435357:	mov    edi,0xbbbf1fbb
  43535c:	pop    ds
  43535d:	mov    edi,0xf0441fbb
  435362:	jle    0x435323
  435364:	mov    ebx,0x1fbbbf1f
  435369:	mov    edi,0xbbbf1fbb
  43536e:	pop    ds
  43536f:	mov    edi,0x804c1fbb
  435374:	out    0xbf,al
  435376:	mov    ebx,0x1fbbbf1f
  43537b:	push   edx
  43537c:	xor    DWORD PTR [ebx-0x40e04441],esp
  435382:	mov    ebx,0x1fbbbf1f
  435387:	mov    edi,0xbbbf1fbb
  43538c:	pop    ds
  43538d:	mov    edi,0xbbbf1fbb
  435392:	pop    ds
  435393:	mov    edi,0xbbbf1fbb
  435398:	pop    ds
  435399:	inc    edx
  43539a:	out    dx,eax
  43539b:	out    dx,eax
  43539c:	mov    edi,0xbbbf1fbb
  4353a1:	pop    ds
  4353a2:	mov    edi,0xbbbf1fbb
  4353a7:	pop    ds
  4353a8:	mov    edi,0xbbbf1fbb
  4353ad:	pop    ds
  4353ae:	mov    edi,0xbbbf1fbb
  4353b3:	pop    ds
  4353b4:	mov    edi,0x217b1fbb
  4353b9:	idiv   BYTE PTR [edi-0x4440e045]
  4353bf:	pop    ds
  4353c0:	mov    edi,0xbbbf1fbb
  4353c5:	pop    ds
  4353c6:	mov    edi,0x50ad1fbb
  4353cb:	in     eax,0xbf
  4353cd:	mov    ebx,0xa120501f
  4353d2:	mov    edi,0xbbbf1fbb
  4353d7:	pop    ds
  4353d8:	mov    edi,0xca881fbb
  4353dd:	mov    ds:0xbf2f0b34,al
  4353e2:	mov    ebx,0x1fbbbf1f
  4353e7:	mov    edi,0xbbbf1fbb
  4353ec:	pop    ds
  4353ed:	mov    edi,0xbbbf1fbb
  4353f2:	pop    ds
  4353f3:	push   ebx
  4353f4:	retf   0xbfa6
  4353f7:	mov    ebx,0x1fbbbf1f
  4353fc:	mov    edi,0xbbbf1fbb
  435401:	pop    ds
  435402:	mov    edi,0xbbbf1fbb
  435407:	pop    ds
  435408:	mov    edi,0xbbbf1fbb
  43540d:	pop    ds
  43540e:	xor    ah,ch
  435410:	push   cs
  435411:	mov    edi,0xbbbf1fbb
  435416:	pop    ds
  435417:	jmp    0x435481
  435419:	and    eax,0xbb1fbbbf
  43541e:	or     eax,0x1fbbbfe0
  435423:	mov    edi,0xbbbf1fbb
  435428:	pop    ds
  435429:	mov    bh,0xec
  43542b:	pop    eax
  43542c:	mov    edi,0xa58b1fbb
  435431:	add    dh,BYTE PTR [edi]
  435433:	call   0xcd10811d
  435438:	mov    edi,0xbbbf1fbb
  43543d:	pop    ds
  43543e:	mov    edi,0xbbbf1fbb
  435443:	pop    ds
  435444:	mov    edi,0xbbbf1fbb
  435449:	pop    ds
  43544a:	mov    edi,0xbbbf1fbb
  43544f:	pop    ds
  435450:	popf   
  435451:	mov    esi,0x923545fb
  435456:	mov    edi,0xbbbf1fbb
  43545b:	pop    ds
  43545c:	mov    edi,0xbbbf1fbb
  435461:	pop    ds
  435462:	mov    edi,0xbbbf1fbb
  435467:	pop    ds
  435468:	test   DWORD PTR [ecx],edx
  43546a:	mov    BYTE PTR [edi-0x4440e045],bh
  435470:	pop    ds
  435471:	mov    edi,0x34cf1fbb
  435476:	jb     0x435437
  435478:	mov    ebx,0x1fbbbf1f
  43547d:	mov    edi,0xbbbf1fbb
  435482:	pop    ds
  435483:	mov    edi,0xbbbf1fbb
  435488:	pop    ds
  435489:	mov    edi,0xbbbf1fbb
  43548e:	pop    ds
  43548f:	dec    edx
  435490:	loop   0x435432
  435492:	mov    edi,0xbbbf1fbb
  435497:	pop    ds
  435498:	mov    edi,0xbbbf1fbb
  43549d:	pop    ds
  43549e:	mov    edi,0xbbbf1fbb
  4354a3:	pop    ds
  4354a4:	mov    edi,0xbbbf1fbb
  4354a9:	pop    ds
  4354aa:	mov    edi,0xbbbf1fbb
  4354af:	pop    ds
  4354b0:	mov    edi,0xbbbf1fbb
  4354b5:	pop    ds
  4354b6:	mov    edi,0xd49f1fbb
  4354bb:	mov    DWORD PTR [edi-0x56],esp
  4354be:	add    DWORD PTR [edi-0x4440e045],edi
  4354c4:	pop    ds
  4354c5:	inc    esp
  4354c6:	out    dx,eax
  4354c7:	cmp    eax,0x481fbbbf
  4354cc:	inc    eax
  4354cd:	into   
  4354ce:	push   ebp
  4354cf:	push   es
  4354d0:	in     al,dx
  4354d1:	(bad)  
  4354d3:	idiv   DWORD PTR [edi-0x4440e045]
  4354d9:	pop    ds
  4354da:	mov    edi,0xbbbf1fbb
  4354df:	pop    ds
  4354e0:	mov    edi,0xbbbf1fbb
  4354e5:	pop    ds
  4354e6:	mov    edi,0xbbbf1fbb
  4354eb:	pop    ds
  4354ec:	mov    dl,0x21
  4354ee:	pop    esi
  4354ef:	popf   
  4354f0:	and    ebx,DWORD PTR [ebp-0x40e04441]
  4354f6:	mov    ebx,0xe1aa021f
  4354fb:	jnp    0x43552f
  4354fd:	push   esp
  4354fe:	mov    edi,0xbbbf1fbb
  435503:	pop    ds
  435504:	sbb    eax,0x441bd333
  435509:	out    0xbf,eax
  43550b:	mov    ebx,0x1fbbbf1f
  435510:	out    0x12,al
  435512:	les    edi,FWORD PTR [edi-0x4440e045]
  435518:	pop    ds
  435519:	mov    edi,0xbbbf1fbb
  43551e:	pop    ds
  43551f:	mov    edi,0x35a51fbb
  435524:	mov    ds:0xbf1fbbbf,al
  435529:	mov    ebx,0x1fbbbf1f
  43552e:	mov    edi,0x965a1fbb
  435533:	outs   dx,BYTE PTR ds:[esi]
  435534:	mov    edi,0xbbbf1fbb
  435539:	pop    ds
  43553a:	mov    edi,0xbbbf1fbb
  43553f:	pop    ds
  435540:	mov    edi,0xbbbf1fbb
  435545:	pop    ds
  435546:	mov    edi,0x62351fbb
  43554b:	sub    DWORD PTR [esi-0x4440ae55],ebp
  435551:	pop    ds
  435552:	mov    edi,0xbbbf1fbb
  435557:	pop    ds
  435558:	mov    edi,0xf9971fbb
  43555d:	outs   dx,DWORD PTR ds:[esi]
  43555e:	mov    edi,0xbbbf1fbb
  435563:	pop    ds
  435564:	mov    edi,0xbbbf1fbb
  435569:	pop    ds
  43556a:	mov    edi,0xbbbf1fbb
  43556f:	pop    ds
  435570:	lods   eax,DWORD PTR ds:[esi]
  435571:	adc    bl,BYTE PTR [ecx]
  435573:	mov    edi,0xbbbf1fbb
  435578:	pop    ds
  435579:	mov    edi,0xc7c01fbb
  43557e:	mov    bl,0xbc
  435580:	(bad)  
  435581:	xor    DWORD PTR [ebx+0x7c],edx
  435584:	pop    ecx
  435585:	mov    edi,0xbbbf1fbb
  43558a:	pop    ds
  43558b:	pop    es
  43558c:	ja     0x43551d
  43558e:	mov    edi,0xbbbf1fbb
  435593:	pop    ds
  435594:	mov    edi,0xbbbf1fbb
  435599:	pop    ds
  43559a:	sbb    BYTE PTR [edx-0x13],ch
  43559d:	mov    edi,0x98ca1fbb
  4355a2:	cli    
  4355a3:	mov    edi,0x74aa1fbb
  4355a8:	enter  0xbbbf,0x1f
  4355ac:	mov    edi,0xbbbf1fbb
  4355b1:	pop    ds
  4355b2:	ror    BYTE PTR [edx],cl
  4355b4:	fcomp  st(4)
  4355b6:	sbb    al,0x50
  4355b8:	pop    esp
  4355b9:	jge    0x435547
  4355bb:	mov    edi,0xbbbf1fbb
  4355c0:	pop    ds
  4355c1:	mov    edi,0x71d61fbb
  4355c6:	mov    BYTE PTR [edi+0x19601fbb],bh
  4355cc:	sahf   
  4355cd:	mov    edi,0xbbbf1fbb
  4355d2:	pop    ds
  4355d3:	mov    edi,0xbbbf1fbb
  4355d8:	pop    ds
  4355d9:	mov    edi,0x2afc1fbb
  4355de:	arpl   WORD PTR [edi-0x4440371b],di
  4355e4:	pop    ds
  4355e5:	inc    esi
  4355e6:	xchg   esp,eax
  4355e7:	popa   
  4355e8:	pop    ebp
  4355e9:	add    DWORD PTR [esi-0x40f0c06a],edx
  4355ef:	mov    ebx,0x1fbbbf1f
  4355f4:	mov    edi,0xbbbf1fbb
  4355f9:	pop    ds
  4355fa:	mov    edi,0xbbbf1fbb
  4355ff:	pop    ds
  435600:	mov    edi,0x9ba21fbb
  435605:	add    al,0xbf
  435607:	mov    ebx,0x5f5a181f
  43560c:	mov    edi,0xbbbf1fbb
  435611:	pop    ds
  435612:	mov    edi,0xb4ae1fbb
  435617:	xchg   esp,eax
  435618:	or     ecx,DWORD PTR [edi+0x74]
  43561b:	mov    edi,0xbbbf1fbb
  435620:	pop    ds
  435621:	mov    edi,0x4db41fbb
  435626:	mov    edx,0xbf1fbbbf
  43562b:	mov    ebx,0x1fbbbf1f
  435630:	mov    edi,0xbbbf1fbb
  435635:	pop    ds
  435636:	mov    edi,0xbbbf1fbb
  43563b:	pop    ds
  43563c:	mov    edi,0xbbbf1fbb
  435641:	pop    ds
  435642:	mov    edi,0xbbbf1fbb
  435647:	pop    ds
  435648:	mov    edi,0xbbbf1fbb
  43564d:	pop    ds
  43564e:	mov    edi,0xb1091fbb
  435653:	cmp    eax,0xbf1fbbbf
  435658:	mov    ebx,0x1fbbbf1f
  43565d:	mov    edi,0xc42f1fbb
  435662:	adc    al,0xbf
  435664:	mov    ebx,0x1fbbbf1f
  435669:	mov    edi,0xbbbf1fbb
  43566e:	pop    ds
  43566f:	push   ecx
  435670:	ret    0x3057
  435673:	bound  ebp,QWORD PTR [edx]
  435675:	mov    edi,0xbbbf1fbb
  43567a:	pop    ds
  43567b:	sar    DWORD PTR [ebp-0x4f],cl
  43567e:	mov    edi,0xbbbf1fbb
  435683:	pop    ds
  435684:	in     eax,0xed
  435686:	es mov edi,0xbbbf1fbb
  43568c:	pop    ds
  43568d:	mov    edi,0xbbbf1fbb
  435692:	pop    ds
  435693:	mov    edi,0xbbbf1fbb
  435698:	pop    ds
  435699:	mov    edi,0xbbbf1fbb
  43569e:	pop    ds
  43569f:	mov    edi,0xbbbf1fbb
  4356a4:	pop    ds
  4356a5:	jne    0x4356c7
  4356a7:	xchg   ebp,eax
  4356a8:	mov    edi,0xbbbf1fbb
  4356ad:	pop    ds
  4356ae:	ret    
  4356af:	mov    ds:0x1fbbbf30,eax
  4356b4:	mov    edi,0xbbbf1fbb
  4356b9:	pop    ds
  4356ba:	mov    edi,0xbbbf1fbb
  4356bf:	pop    ds
  4356c0:	mov    edi,0xbbbf1fbb
  4356c5:	pop    ds
  4356c6:	mov    edi,0xbbbf1fbb
  4356cb:	pop    ds
	...
  4356e8:	sbb    eax,0xf9e46a39
  4356ed:	xchg   esp,eax
  4356ee:	mov    eax,0x3f770fa4
  4356f3:	fsub   QWORD PTR [esi-0x5ee36595]
  4356f9:	popf   
  4356fa:	imul   edx,DWORD PTR [esi+edx*2],0xffffff90
  4356fe:	inc    ebx
  4356ff:	push   esp
  435700:	push   esi
  435701:	shr    edx,cl
  435703:	mov    al,0xf4
  435705:	psubq  mm7,mm0
  435708:	fcomp  DWORD PTR [edx+0x45cee072]
  43570e:	xor    esp,ebx
  435710:	push   edi
  435711:	push   0xffffffd3
  435713:	add    BYTE PTR fs:[eax],al
	...
  43574a:	add    BYTE PTR [eax],al
  43574c:	sub    BYTE PTR [eax],al
  43574e:	add    BYTE PTR [eax],al
  435750:	and    BYTE PTR [eax],al
  435752:	add    BYTE PTR [eax],al
  435754:	inc    eax
  435755:	add    BYTE PTR [eax],al
  435757:	add    BYTE PTR [ecx],al
  435759:	add    BYTE PTR [eax],bl
  43575b:	add    BYTE PTR [eax],al
  43575d:	add    BYTE PTR [eax],al
  43575f:	add    BYTE PTR [eax],al
  435761:	or     al,0x0
	...
  435773:	add    BYTE PTR [eax+ecx*4],al
  435776:	fadd   DWORD PTR [eax+ecx*4]
  435779:	fadd   DWORD PTR [eax+ecx*4]
  43577c:	fmul   DWORD PTR [ebx+0x4c1cc873]
  435782:	push   edx
  435783:	push   0xffffff88
  435785:	mov    ch,0x4
  435787:	mov    al,bl
  435789:	add    al,0x88
  43578b:	fadd   DWORD PTR [eax+ecx*4]
  43578e:	fadd   DWORD PTR [eax+ecx*4]
  435791:	fsubr  DWORD PTR [edx-0x77fb7ce7]
  435797:	fsub   DWORD PTR [edi]
  435799:	jb     0x435747
  43579b:	add    al,0x88
  43579d:	fadd   DWORD PTR [eax+ecx*4]
  4357a0:	fadd   DWORD PTR [eax+ecx*4]
  4357a3:	fadd   DWORD PTR [eax+ecx*4]
  4357a6:	fadd   st,st(1)
  4357a8:	popa   
  4357a9:	inc    eax
  4357aa:	add    al,0x88
  4357ac:	fadd   DWORD PTR [eax+ecx*4]
  4357af:	fadd   DWORD PTR [eax+ecx*4]
  4357b2:	fadd   DWORD PTR [eax+ecx*4]
  4357b5:	fadd   DWORD PTR [eax+ecx*4]
  4357b8:	fadd   DWORD PTR [eax+ecx*4]
  4357bb:	fadd   DWORD PTR [eax+ecx*4]
  4357be:	fadd   DWORD PTR [eax+ecx*4]
  4357c1:	fadd   DWORD PTR [eax+ecx*4]
  4357c4:	fadd   DWORD PTR [eax+ecx*4]
  4357c7:	fadd   DWORD PTR [eax+ecx*4]
  4357ca:	fadd   DWORD PTR [eax+ecx*4]
  4357cd:	fadd   DWORD PTR [eax+ecx*4]
  4357d0:	fcom   DWORD PTR [ebp-0x77fb0936]
  4357d6:	fadd   DWORD PTR [eax+ecx*4]
  4357d9:	fadd   DWORD PTR [eax+ecx*4]
  4357dc:	fdiv   DWORD PTR [esp+edx*1-0x6f]
  4357e0:	add    al,0x88
  4357e2:	fadd   DWORD PTR [eax+ecx*4]
  4357e5:	fdivr  DWORD PTR [edx-0x77fb618d]
  4357eb:	fadd   DWORD PTR [eax+ecx*4]
  4357ee:	fadd   DWORD PTR [eax+ecx*4]
  4357f1:	fsubr  DWORD PTR [esi-0x7a]
  4357f4:	cmp    ecx,eax
  4357f6:	dec    esp
  4357f7:	adc    BYTE PTR [eax+ecx*4],al
  4357fa:	fadd   DWORD PTR [eax+ecx*4]
  4357fd:	fadd   DWORD PTR [eax+ecx*4]
  435800:	fadd   DWORD PTR [eax+ecx*4]
  435803:	fadd   DWORD PTR [eax+ecx*4]
  435806:	fadd   DWORD PTR [eax+ecx*4]
  435809:	fadd   DWORD PTR [eax+ecx*4]
  43580c:	fadd   DWORD PTR [eax+ecx*4]
  43580f:	fadd   DWORD PTR [eax+ecx*4]
  435812:	fadd   DWORD PTR [eax+ecx*4]
  435815:	fadd   DWORD PTR [eax+ecx*4]
  435818:	fadd   DWORD PTR [eax+ecx*4]
  43581b:	fadd   DWORD PTR [eax+ecx*4]
  43581e:	fadd   DWORD PTR [eax+ecx*4]
  435821:	fadd   DWORD PTR [eax+ecx*4]
  435824:	fadd   DWORD PTR [eax+ecx*4]
  435827:	fadd   DWORD PTR [eax+ecx*4]
  43582a:	fadd   DWORD PTR [eax+ecx*4]
  43582d:	fadd   DWORD PTR [eax+ecx*4]
  435830:	fadd   DWORD PTR [eax+ecx*4]
  435833:	fadd   DWORD PTR [eax+ecx*4]
  435836:	fsub   DWORD PTR [edx-0x464d181f]
  43583c:	hlt    
  43583d:	add    al,0x88
  43583f:	fcomp  DWORD PTR [ecx-0x77fb7b70]
  435845:	fadd   DWORD PTR [eax+ecx*4]
  435848:	fadd   DWORD PTR [eax+ecx*4]
  43584b:	fadd   DWORD PTR [eax+ecx*4]
  43584e:	fadd   DWORD PTR [eax+ecx*4]
  435851:	fadd   DWORD PTR [eax+ecx*4]
  435854:	fadd   DWORD PTR [eax+ecx*4]
  435857:	fadd   DWORD PTR [eax+ecx*4]
  43585a:	fcomp  DWORD PTR [edi]
  43585c:	test   al,0xf
  43585e:	dec    edi
  43585f:	adc    eax,0xd88804c8
  435864:	add    al,0x88
  435866:	fdiv   DWORD PTR [ebp-0x4d]
  435869:	aam    0x4
  43586b:	mov    al,bl
  43586d:	add    al,0x88
  43586f:	fsubr  DWORD PTR ds:0x88046aad
  435875:	fadd   DWORD PTR [eax+ecx*4]
  435878:	fcom   DWORD PTR [eax]
  43587a:	jo     0x435880
  43587c:	add    al,0x88
  43587e:	fdiv   DWORD PTR [ecx-0x77fb57b0]
  435884:	fadd   DWORD PTR [eax+ecx*4]
  435887:	fcomp  DWORD PTR [esp+eax*1-0x3]
  43588b:	add    al,0x88
  43588d:	fcom   DWORD PTR [edi-0x79]
  435890:	mov    ebp,0xe89e212f
  435895:	jge    0x4358fd
  435897:	push   esp
  435898:	xchg   ebp,eax
  435899:	jno    0x43584b
  43589b:	xchg   ecx,eax
  43589c:	jmp    0x4358a2
  43589e:	mov    al,bl
  4358a0:	add    al,0x88
  4358a2:	fcomp  DWORD PTR [ebp-0x77fb081f]
  4358a8:	fadd   DWORD PTR [eax+ecx*4]
  4358ab:	fadd   DWORD PTR [eax+ecx*4]
  4358ae:	fadd   DWORD PTR [eax+ecx*4]
  4358b1:	fadd   DWORD PTR [eax+ecx*4]
  4358b4:	fadd   DWORD PTR [eax+ecx*4]
  4358b7:	fadd   DWORD PTR [eax+ecx*4]
  4358ba:	fadd   DWORD PTR [eax+ecx*4]
  4358bd:	fadd   DWORD PTR [eax+ecx*4]
  4358c0:	fadd   DWORD PTR [eax+ecx*4]
  4358c3:	fadd   DWORD PTR [eax+ecx*4]
  4358c6:	fadd   DWORD PTR [eax+ecx*4]
  4358c9:	fmul   st,st(4)
  4358cb:	push   cs
  4358cc:	js     0x43594a
  4358ce:	pop    ecx
  4358cf:	das    
  4358d0:	add    al,0x88
  4358d2:	fmul   DWORD PTR [edi-0x60e4f997]
  4358d8:	sbb    DWORD PTR [eax+ecx*4],eax
  4358db:	fadd   DWORD PTR [eax+ecx*4]
  4358de:	fadd   DWORD PTR [eax+ecx*4]
  4358e1:	fadd   DWORD PTR [eax+ecx*4]
  4358e4:	fadd   DWORD PTR [eax+ecx*4]
  4358e7:	fmul   st,st(2)
  4358e9:	and    BYTE PTR [edx+0x4727b69],al
  4358ef:	mov    al,bl
  4358f1:	add    al,0x88
  4358f3:	fadd   DWORD PTR [eax+ecx*4]
  4358f6:	fadd   DWORD PTR [eax+ecx*4]
  4358f9:	fadd   DWORD PTR [eax+ecx*4]
  4358fc:	fcomp  DWORD PTR [esi+ebx*1]
  4358ff:	cwde   
  435900:	add    al,0x88
  435902:	fadd   DWORD PTR [eax+ecx*4]
  435905:	fmul   DWORD PTR [ebp-0x5c]
  435908:	inc    ebp
  435909:	adc    dh,BYTE PTR [ebp-0x2777fb81]
  43590f:	and    DWORD PTR [ebx+edx*4+0x31],esp
  435913:	or     cl,BYTE PTR [eax+0x4d88804]
  435919:	mov    al,bl
  43591b:	add    al,0x88
  43591d:	fdivr  DWORD PTR [edx]
  43591f:	and    DWORD PTR cs:[ecx+0x59ea764d],0xffffffad
  435927:	add    al,0x88
  435929:	fadd   DWORD PTR [eax+ecx*4]
  43592c:	fadd   DWORD PTR [eax+ecx*4]
  43592f:	fadd   DWORD PTR [eax+ecx*4]
  435932:	fadd   DWORD PTR [eax+ecx*4]
  435935:	fadd   DWORD PTR [eax+ecx*4]
  435938:	fadd   DWORD PTR [eax+ecx*4]
  43593b:	fadd   DWORD PTR [eax+ecx*4]
  43593e:	fadd   DWORD PTR [eax+ecx*4]
  435941:	fcomp  DWORD PTR [ebx+0x77]
  435944:	inc    edi
  435945:	add    al,0x88
  435947:	fadd   DWORD PTR [eax+ecx*4]
  43594a:	fadd   DWORD PTR [eax+ecx*4]
  43594d:	fadd   DWORD PTR [eax+ecx*4]
  435950:	fsub   DWORD PTR [edi-0x77fb9852]
  435956:	fadd   DWORD PTR [eax+ecx*4]
  435959:	fadd   DWORD PTR [eax+ecx*4]
  43595c:	fadd   DWORD PTR [eax+ecx*4]
  43595f:	fadd   DWORD PTR [eax+ecx*4]
  435962:	fadd   DWORD PTR [eax+ecx*4]
  435965:	fadd   DWORD PTR [eax+ecx*4]
  435968:	fadd   DWORD PTR [eax+ecx*4]
  43596b:	fadd   DWORD PTR [eax+ecx*4]
  43596e:	fadd   DWORD PTR [eax+ecx*4]
  435971:	fadd   DWORD PTR [eax+ecx*4]
  435974:	fdiv   st,st(4)
  435976:	lea    ecx,[eax]
  435978:	add    al,0x88
  43597a:	fadd   DWORD PTR [eax+ecx*4]
  43597d:	fdivr  DWORD PTR [edi+eax*1+0x7d36ae4f]
  435984:	add    al,0x88
  435986:	fadd   DWORD PTR [eax+ecx*4]
  435989:	fadd   DWORD PTR [eax+ecx*4]
  43598c:	fadd   DWORD PTR [eax+ecx*4]
  43598f:	fadd   DWORD PTR [eax+ecx*4]
  435992:	fadd   DWORD PTR [eax+ecx*4]
  435995:	fcomp  st(2)
  435997:	push   0xd8880400
  43599c:	add    al,0x88
  43599e:	fadd   DWORD PTR [eax+ecx*4]
  4359a1:	fadd   DWORD PTR [eax+ecx*4]
  4359a4:	fadd   DWORD PTR [eax+ecx*4]
  4359a7:	fadd   DWORD PTR [eax+ecx*4]
  4359aa:	fsub   DWORD PTR [ecx]
  4359ac:	mov    cl,0xc2
  4359ae:	(bad)  
  4359af:	jp     0x43598a
  4359b1:	add    al,0x88
  4359b3:	fadd   DWORD PTR [eax+ecx*4]
  4359b6:	fadd   DWORD PTR [eax+ecx*4]
  4359b9:	fadd   DWORD PTR [eax+ecx*4]
  4359bc:	fadd   DWORD PTR [eax+ecx*4]
  4359bf:	fadd   DWORD PTR [eax+ecx*4]
  4359c2:	fadd   DWORD PTR [eax+ecx*4]
  4359c5:	fdivr  DWORD PTR [esi-0x77fbe358]
  4359cb:	fadd   DWORD PTR [eax+ecx*4]
  4359ce:	fadd   DWORD PTR [eax+ecx*4]
  4359d1:	fadd   DWORD PTR [eax+ecx*4]
  4359d4:	fadd   DWORD PTR [eax+ecx*4]
  4359d7:	fadd   DWORD PTR [eax+ecx*4]
  4359da:	fadd   DWORD PTR [eax+ecx*4]
  4359dd:	fadd   DWORD PTR [eax+ecx*4]
  4359e0:	fdiv   DWORD PTR [ebx-0x8]
  4359e3:	mov    DWORD PTR [eax+ecx*4],eax
  4359e6:	fcomp  DWORD PTR [eax]
  4359e8:	xor    DWORD PTR [esi+0x43f6563],edx
  4359ee:	mov    al,bl
  4359f0:	add    al,0x88
  4359f2:	fadd   DWORD PTR [eax+ecx*4]
  4359f5:	fadd   DWORD PTR [eax+ecx*4]
  4359f8:	fadd   DWORD PTR [eax+ecx*4]
  4359fb:	fadd   DWORD PTR [eax+ecx*4]
  4359fe:	fadd   DWORD PTR [eax+ecx*4]
  435a01:	fdiv   DWORD PTR [edi]
  435a03:	pop    ebx
  435a04:	add    DWORD PTR [eax+ecx*4],0xffffffd8
  435a08:	add    al,0x88
  435a0a:	fadd   DWORD PTR [eax+ecx*4]
  435a0d:	fsub   st,st(2)
  435a0f:	test   eax,0xd88804cc
  435a14:	add    al,0x88
  435a16:	fadd   DWORD PTR [eax+ecx*4]
  435a19:	fadd   DWORD PTR [eax+ecx*4]
  435a1c:	fadd   DWORD PTR [eax+ecx*4]
  435a1f:	fadd   DWORD PTR [eax+ecx*4]
  435a22:	fadd   DWORD PTR [eax+ecx*4]
  435a25:	fadd   DWORD PTR [eax+ecx*4]
  435a28:	fadd   DWORD PTR [eax+ecx*4]
  435a2b:	fadd   DWORD PTR [eax+ecx*4]
  435a2e:	fadd   DWORD PTR [eax+ecx*4]
  435a31:	fadd   DWORD PTR [eax+ecx*4]
  435a34:	fadd   DWORD PTR [eax+ecx*4]
  435a37:	fdivr  DWORD PTR [esp+edi*1+0x9]
  435a3b:	add    al,0x88
  435a3d:	fadd   DWORD PTR [eax+ecx*4]
  435a40:	fadd   DWORD PTR [eax+ecx*4]
  435a43:	fadd   DWORD PTR [eax+ecx*4]
  435a46:	fadd   DWORD PTR [eax+ecx*4]
  435a49:	fadd   DWORD PTR [eax+ecx*4]
  435a4c:	fsubr  st,st(0)
  435a4e:	enter  0x4c82,0xb3
  435a52:	inc    DWORD PTR [eax+ecx*4]
  435a55:	fadd   DWORD PTR [eax+ecx*4]
  435a58:	fadd   DWORD PTR [eax+ecx*4]
  435a5b:	fadd   DWORD PTR [eax+ecx*4]
  435a5e:	fadd   DWORD PTR [eax+ecx*4]
  435a61:	fadd   DWORD PTR [eax+ecx*4]
  435a64:	fadd   DWORD PTR [eax+ecx*4]
  435a67:	fadd   DWORD PTR [eax+ecx*4]
  435a6a:	fadd   DWORD PTR [eax+ecx*4]
  435a6d:	fadd   DWORD PTR [eax+ecx*4]
  435a70:	fmul   DWORD PTR [ebp-0x77fbe7bd]
  435a76:	fsubr  DWORD PTR [ebx]
  435a78:	dec    esp
  435a79:	or     DWORD PTR [eax+ecx*4],eax
  435a7c:	fmul   DWORD PTR [ecx-0x77fb0ff0]
  435a82:	fadd   DWORD PTR [eax+ecx*4]
  435a85:	fdiv   st,st(0)
  435a87:	lea    ebp,[edx-0x80]
  435a8a:	mov    BYTE PTR [esp+eax*1-0x69172778],ah
  435a91:	inc    ebp
  435a92:	add    al,0x88
  435a94:	fadd   DWORD PTR [eax+ecx*4]
  435a97:	fadd   DWORD PTR [eax+ecx*4]
  435a9a:	fadd   DWORD PTR [eax+ecx*4]
  435a9d:	fmul   st,st(4)
  435a9f:	add    DWORD PTR [ecx+0x4],esi
  435aa2:	mov    al,bl
  435aa4:	add    al,0x88
  435aa6:	fadd   DWORD PTR [eax+ecx*4]
  435aa9:	fadd   DWORD PTR [eax+ecx*4]
  435aac:	fsub   st,st(6)
  435aae:	int    0xcd
  435ab0:	add    al,0x88
  435ab2:	fadd   DWORD PTR [eax+ecx*4]
  435ab5:	fadd   DWORD PTR [eax+ecx*4]
  435ab8:	fadd   DWORD PTR [eax+ecx*4]
  435abb:	fadd   DWORD PTR [eax+ecx*4]
  435abe:	fcomp  DWORD PTR [ebp-0x9]
  435ac1:	adc    al,BYTE PTR [eax+ecx*4]
  435ac4:	fsubr  st,st(2)
  435ac6:	mov    cl,0x7a
  435ac8:	dec    eax
  435ac9:	adc    dl,ah
  435acb:	add    al,0x88
  435acd:	fadd   DWORD PTR [eax+ecx*4]
  435ad0:	fadd   DWORD PTR [eax+ecx*4]
  435ad3:	fadd   DWORD PTR [eax+ecx*4]
  435ad6:	fcomp  DWORD PTR [edx-0x2bc31153]
  435adc:	mov    BYTE PTR [eax+ecx*4],0xd8
  435ae0:	add    al,0x88
  435ae2:	fadd   DWORD PTR [eax+ecx*4]
  435ae5:	fadd   DWORD PTR [eax+ecx*4]
  435ae8:	fadd   DWORD PTR [eax+ecx*4]
  435aeb:	fadd   DWORD PTR [eax+ecx*4]
  435aee:	fadd   DWORD PTR [eax+ecx*4]
  435af1:	fmul   DWORD PTR [eax]
  435af3:	dec    edx
  435af4:	(bad)  
  435af5:	call   0x8847bff2
  435afa:	fadd   DWORD PTR [eax+ecx*4]
  435afd:	fadd   DWORD PTR [eax+ecx*4]
  435b00:	fdiv   st,st(3)
  435b02:	push   0x8
  435b04:	add    al,0x88
  435b06:	fadd   DWORD PTR [eax+ecx*4]
  435b09:	fadd   DWORD PTR [eax+ecx*4]
  435b0c:	fadd   DWORD PTR [eax+ecx*4]
  435b0f:	fdiv   DWORD PTR [ecx+0x1c]
  435b12:	sbb    al,BYTE PTR [eax+ecx*4]
  435b15:	fsubr  st,st(5)
  435b17:	dec    ebx
  435b18:	pop    ebp
  435b19:	add    al,0x88
  435b1b:	fdiv   st,st(0)
  435b1d:	mov    al,ds:0xd8880428
  435b22:	add    al,0x88
  435b24:	fsub   DWORD PTR [esi]
  435b26:	hlt    
  435b27:	js     0x435b97
  435b29:	sar    DWORD PTR [eax],cl
  435b2b:	add    al,0x88
  435b2d:	fadd   DWORD PTR [eax+ecx*4]
  435b30:	fadd   DWORD PTR [eax+ecx*4]
  435b33:	fadd   DWORD PTR [eax+ecx*4]
  435b36:	fdivr  DWORD PTR [ebx-0x77fbadf9]
  435b3c:	fadd   DWORD PTR [eax+ecx*4]
  435b3f:	fcom   st(2)
  435b41:	adc    DWORD PTR gs:[eax+ecx*4],eax
  435b45:	fadd   DWORD PTR [eax+ecx*4]
  435b48:	fadd   DWORD PTR [eax+ecx*4]
  435b4b:	fadd   DWORD PTR [eax+ecx*4]
  435b4e:	fadd   DWORD PTR [eax+ecx*4]
  435b51:	fadd   DWORD PTR [eax+ecx*4]
  435b54:	fadd   DWORD PTR [eax+ecx*4]
  435b57:	fsubr  DWORD PTR [ebp+0x1c]
  435b5a:	imul   esp,DWORD PTR [esi-0x69],0xfffffffc
  435b5e:	neg    BYTE PTR [edi+eax*2+0x4]
  435b62:	mov    al,bl
  435b64:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  435b65:	mov    eax,ds:0xd888049c
  435b6a:	add    al,0x88
  435b6c:	fadd   DWORD PTR [eax+ecx*4]
  435b6f:	fadd   DWORD PTR [eax+ecx*4]
  435b72:	fadd   DWORD PTR [eax+ecx*4]
  435b75:	fadd   DWORD PTR [eax+ecx*4]
  435b78:	fadd   DWORD PTR [eax+ecx*4]
  435b7b:	fadd   DWORD PTR [eax+ecx*4]
  435b7e:	fadd   DWORD PTR [eax+ecx*4]
  435b81:	fadd   DWORD PTR [eax+ecx*4]
  435b84:	fcomp  DWORD PTR [edi]
  435b86:	mov    ah,0xd5
  435b88:	or     DWORD PTR [esi],eax
  435b8a:	mov    WORD PTR [eax+ecx*4],es
  435b8d:	fmul   st,st(7)
  435b8f:	mov    eax,0xd8880483
  435b94:	add    al,0x88
  435b96:	fadd   DWORD PTR [eax+ecx*4]
  435b99:	fadd   DWORD PTR [eax+ecx*4]
  435b9c:	fadd   DWORD PTR [eax+ecx*4]
  435b9f:	fadd   DWORD PTR [eax+ecx*4]
  435ba2:	fadd   DWORD PTR [eax+ecx*4]
  435ba5:	fadd   DWORD PTR [eax+ecx*4]
  435ba8:	fadd   DWORD PTR [eax+ecx*4]
  435bab:	fsub   DWORD PTR [edx-0x72]
  435bae:	pop    es
  435baf:	add    al,0x88
  435bb1:	fadd   DWORD PTR [eax+ecx*4]
  435bb4:	fadd   DWORD PTR [eax+ecx*4]
  435bb7:	fadd   DWORD PTR [eax+ecx*4]
  435bba:	fsubr  DWORD PTR [ecx-0x77fb7f70]
  435bc0:	fcomp  st(7)
  435bc2:	sti    
  435bc3:	sub    eax,DWORD PTR [eax+ecx*4]
  435bc6:	fadd   DWORD PTR [eax+ecx*4]
  435bc9:	fcomp  DWORD PTR [ecx]
  435bcb:	dec    esi
  435bcc:	repz sbb al,0xa7
  435bcf:	cmp    DWORD PTR [eax+ecx*4],eax
  435bd2:	fadd   DWORD PTR [eax+ecx*4]
  435bd5:	fadd   DWORD PTR [ebx+0x26855bce]
  435bdb:	mov    eax,ds:0x855ae4a6
  435be0:	and    al,0x48
  435be2:	add    al,0x88
  435be4:	fadd   DWORD PTR [eax+ecx*4]
  435be7:	fadd   DWORD PTR [eax+ecx*4]
  435bea:	fcom   DWORD PTR [ecx]
  435bec:	or     bl,BYTE PTR [edi+0x5dd88804]
  435bf2:	ret    
  435bf3:	(bad)  
  435bf4:	cdq    
  435bf5:	ror    ah,1
  435bf7:	add    al,0x88
  435bf9:	fcomp  st(2)
  435bfb:	aas    
  435bfc:	mov    BYTE PTR [eax+ecx*4],0xd8
  435c00:	cmp    DWORD PTR ds:0xd8880413,ebx
  435c06:	cmp    eax,0x8804f9fc
  435c0b:	fdiv   DWORD PTR [ebp-0x43]
  435c0e:	xor    al,0x4
  435c10:	mov    al,bl
  435c12:	add    al,0x88
  435c14:	fadd   DWORD PTR [ebx-0x6e]
  435c17:	scas   eax,DWORD PTR es:[edi]
  435c18:	(bad)  
  435c19:	push   ebp
  435c1a:	je     0x435c27
  435c1c:	jmp    0xd8cb60e1
  435c21:	add    al,0x88
  435c23:	fadd   DWORD PTR [eax+ecx*4]
  435c26:	fadd   DWORD PTR [eax+ecx*4]
  435c29:	fsub   DWORD PTR [edi+0x3f59662a]
  435c2f:	test   eax,0x4d88804
  435c34:	mov    al,bl
  435c36:	add    al,0x88
  435c38:	fdivr  DWORD PTR [ebx+esi*2-0xa]
  435c3c:	add    al,0x88
  435c3e:	fadd   DWORD PTR [eax+ecx*4]
  435c41:	fadd   DWORD PTR [eax+ecx*4]
  435c44:	fadd   DWORD PTR [eax+ecx*4]
  435c47:	fadd   DWORD PTR [eax+ecx*4]
  435c4a:	fadd   DWORD PTR [eax+ecx*4]
  435c4d:	fadd   DWORD PTR [eax+ecx*4]
  435c50:	fadd   DWORD PTR [eax+ecx*4]
  435c53:	fadd   DWORD PTR [eax+ecx*4]
  435c56:	fadd   DWORD PTR [eax+ecx*4]
  435c59:	fcomp  DWORD PTR [edx]
  435c5b:	sub    edx,esp
  435c5d:	add    al,0x88
  435c5f:	fadd   DWORD PTR [eax+ecx*4]
  435c62:	fadd   DWORD PTR [eax+ecx*4]
  435c65:	fsub   DWORD PTR [edi+0x2df7e0db]
  435c6b:	mov    BYTE PTR [eax+ecx*4],0xd8
  435c6f:	out    0x31,eax
  435c71:	jp     0x435c77
  435c73:	mov    al,bl
  435c75:	add    al,0x88
  435c77:	fadd   DWORD PTR [eax+ecx*4]
  435c7a:	fadd   DWORD PTR [eax+ecx*4]
  435c7d:	fadd   DWORD PTR [eax+ecx*4]
  435c80:	fadd   DWORD PTR [eax+ecx*4]
  435c83:	fadd   DWORD PTR [eax+ecx*4]
  435c86:	fsubr  DWORD PTR [ecx-0x17]
  435c89:	dec    eax
  435c8a:	add    al,0x88
  435c8c:	fsubr  DWORD PTR [edx+0x40]
  435c8f:	cs add al,0x88
  435c92:	fcom   DWORD PTR [esi]
  435c94:	std    
  435c95:	xchg   esi,eax
  435c96:	add    al,0x88
  435c98:	fadd   DWORD PTR [eax+ecx*4]
  435c9b:	fsubr  DWORD PTR [ecx+eax*8+0x3020cd40]
  435ca2:	scas   eax,DWORD PTR es:[edi]
  435ca3:	int    0x51
  435ca5:	add    al,0x56
  435ca7:	inc    ebp
  435ca8:	clc    
  435ca9:	ins    BYTE PTR es:[edi],dx
  435caa:	and    al,BYTE PTR [eax+ecx*4]
  435cad:	fadd   DWORD PTR [eax+ecx*4]
  435cb0:	fadd   DWORD PTR [eax+ecx*4]
  435cb3:	fadd   DWORD PTR [eax+ecx*4]
  435cb6:	fadd   DWORD PTR [eax+ecx*4]
  435cb9:	fadd   DWORD PTR [eax+ecx*4]
  435cbc:	fadd   DWORD PTR [eax+ecx*4]
  435cbf:	fdiv   DWORD PTR [ebx]
  435cc1:	outs   dx,BYTE PTR ds:[esi]
  435cc2:	outs   dx,BYTE PTR ds:[esi]
  435cc3:	mov    ebp,0xeedc54ac
  435cc8:	stos   BYTE PTR es:[edi],al
  435cc9:	add    al,0x88
  435ccb:	fdiv   st,st(2)
  435ccd:	mov    al,ds:0x8bc0b466
  435cd2:	add    al,0x88
  435cd4:	fadd   DWORD PTR [eax+ecx*4]
  435cd7:	fadd   DWORD PTR [ebx+0xa2d465f]
  435cdd:	test   DWORD PTR [eax+ecx*4],0xd88804d8
  435ce4:	add    al,0x88
  435ce6:	fsub   DWORD PTR [esi+0x4b]
  435ce9:	add    BYTE PTR [eax+ecx*4],al
  435cec:	fadd   DWORD PTR [eax+ecx*4]
  435cef:	fadd   DWORD PTR [eax+ecx*4]
  435cf2:	fadd   DWORD PTR [eax+ecx*4]
  435cf5:	fadd   DWORD PTR [eax+ecx*4]
  435cf8:	fdiv   st,st(7)
  435cfa:	adc    DWORD PTR [edx+0x4d88804],edi
  435d00:	mov    al,bl
  435d02:	add    al,0x88
  435d04:	fadd   DWORD PTR [eax+ecx*4]
  435d07:	fmul   DWORD PTR [edx-0x71]
  435d0a:	mov    DWORD PTR [eax+ecx*4],eax
  435d0d:	fadd   DWORD PTR [eax+ecx*4]
  435d10:	fadd   DWORD PTR [eax+ecx*4]
  435d13:	fcom   DWORD PTR [edx-0x77fbb862]
  435d19:	fsub   DWORD PTR [ecx]
  435d1b:	and    bl,BYTE PTR [edx]
  435d1d:	add    al,0x88
  435d1f:	fadd   DWORD PTR [eax+ecx*4]
  435d22:	fadd   DWORD PTR [eax+ecx*4]
  435d25:	fadd   DWORD PTR [eax+ecx*4]
  435d28:	fadd   DWORD PTR [eax+ecx*4]
  435d2b:	fadd   DWORD PTR [eax+ecx*4]
  435d2e:	fadd   DWORD PTR [eax+ecx*4]
  435d31:	fadd   DWORD PTR [eax+ecx*4]
  435d34:	fadd   DWORD PTR [eax+ecx*4]
  435d37:	fadd   DWORD PTR [eax+ecx*4]
  435d3a:	fadd   DWORD PTR [eax+ecx*4]
  435d3d:	fcomp  DWORD PTR [eax-0x2374d7fc]
  435d43:	or     BYTE PTR [eax+ecx*4],al
  435d46:	fsubr  DWORD PTR [eax+0x7d7bf6ee]
  435d4c:	inc    ebp
  435d4d:	nop
  435d4e:	dec    ecx
  435d4f:	leave  
  435d50:	add    al,0x88
  435d52:	fadd   DWORD PTR [eax+ecx*4]
  435d55:	fadd   DWORD PTR [eax+ecx*4]
  435d58:	fadd   DWORD PTR [eax+ecx*4]
  435d5b:	fadd   DWORD PTR [ebx-0x77fbbea1]
  435d61:	fdivr  DWORD PTR [ebx]
  435d63:	inc    edi
  435d64:	inc    edi
  435d65:	add    al,0x88
  435d67:	fdiv   st,st(1)
  435d69:	iret   
  435d6a:	or     al,0x4
  435d6c:	mov    al,bl
  435d6e:	add    al,0x88
  435d70:	fsub   DWORD PTR [edx]
  435d72:	fisttp QWORD PTR [edi+0x47]
  435d75:	push   0xd888046d
  435d7a:	cwde   
  435d7b:	adc    DWORD PTR [esp+eax*1-0x78],0xffffffd8
  435d80:	add    al,0x88
  435d82:	fcom   st(1)
  435d84:	pop    esi
  435d85:	iret   
  435d86:	add    al,0x88
  435d88:	fadd   DWORD PTR [eax+ecx*4]
  435d8b:	fadd   DWORD PTR [eax+ecx*4]
  435d8e:	fcom   DWORD PTR [ebx+eiz*2+0x2b]
  435d92:	add    al,0x88
  435d94:	fadd   DWORD PTR [eax+ecx*4]
  435d97:	fadd   DWORD PTR [eax+ecx*4]
  435d9a:	fadd   DWORD PTR [eax+ecx*4]
  435d9d:	fadd   DWORD PTR [eax+ecx*4]
  435da0:	fadd   DWORD PTR [eax+ecx*4]
  435da3:	fsub   DWORD PTR [ecx-0x25]
  435da6:	aam    0x46
  435da8:	xor    DWORD PTR [esp+eax*1-0x78],ebx
  435dac:	fadd   DWORD PTR [eax+ecx*4]
  435daf:	fadd   DWORD PTR [eax+ecx*4]
  435db2:	fadd   DWORD PTR [eax+ecx*4]
  435db5:	fadd   DWORD PTR [eax+ecx*4]
  435db8:	fadd   DWORD PTR [eax+ecx*4]
  435dbb:	fadd   DWORD PTR [eax+ecx*4]
  435dbe:	fadd   DWORD PTR [eax+ecx*4]
  435dc1:	fadd   DWORD PTR [eax+ecx*4]
  435dc4:	fadd   DWORD PTR [eax+ecx*4]
  435dc7:	fadd   DWORD PTR [eax+ecx*4]
  435dca:	fadd   DWORD PTR [eax+ecx*4]
  435dcd:	fadd   DWORD PTR [eax+ecx*4]
  435dd0:	fadd   DWORD PTR [eax+ecx*4]
  435dd3:	fadd   DWORD PTR [eax+ecx*4]
  435dd6:	fcom   DWORD PTR [eax-0x4e]
  435dd9:	int3   
  435dda:	add    al,0x88
  435ddc:	fadd   DWORD PTR [eax+ecx*4]
  435ddf:	fadd   DWORD PTR [eax+ecx*4]
  435de2:	fadd   DWORD PTR [eax+ecx*4]
  435de5:	fadd   DWORD PTR [eax+ecx*4]
  435de8:	fadd   DWORD PTR [eax+ecx*4]
  435deb:	fadd   DWORD PTR [eax+ecx*4]
  435dee:	fadd   DWORD PTR [eax+ecx*4]
  435df1:	fadd   DWORD PTR [eax+ecx*4]
  435df4:	fadd   DWORD PTR [eax+ecx*4]
  435df7:	fadd   DWORD PTR [ebx+0x5c]
  435dfa:	rol    DWORD PTR [eax+ecx*4],cl
  435dfd:	fadd   DWORD PTR [eax+ecx*4]
  435e00:	fadd   DWORD PTR [eax+ecx*4]
  435e03:	fadd   DWORD PTR [eax+ecx*4]
  435e06:	fadd   DWORD PTR [eax+ecx*4]
  435e09:	fadd   DWORD PTR [eax+ecx*4]
  435e0c:	fadd   DWORD PTR [eax+ecx*4]
  435e0f:	fsubr  DWORD PTR [eax-0x58]
  435e12:	retf   
  435e13:	add    al,0x88
  435e15:	fadd   DWORD PTR [eax+ecx*4]
  435e18:	fcomp  DWORD PTR [ebx]
  435e1a:	sbb    dl,al
  435e1c:	dec    edx
  435e1d:	or     DWORD PTR [esi],esp
  435e1f:	add    al,0x88
  435e21:	fadd   DWORD PTR [eax+ecx*4]
  435e24:	fadd   DWORD PTR [eax+ecx*4]
  435e27:	fadd   DWORD PTR [eax+ecx*4]
  435e2a:	fdivr  DWORD PTR [eax+0x69]
  435e2d:	enter  0x8804,0xd8
  435e31:	add    al,0x88
  435e33:	fadd   DWORD PTR [eax+ecx*4]
  435e36:	fcomp  st(4)
  435e38:	ret    
  435e39:	jno    0x435e3f
  435e3b:	mov    al,bl
  435e3d:	add    al,0x88
  435e3f:	fadd   DWORD PTR [eax+ecx*4]
  435e42:	fadd   DWORD PTR [eax+ecx*4]
  435e45:	fadd   DWORD PTR [eax+ecx*4]
  435e48:	fadd   DWORD PTR [eax+ecx*4]
  435e4b:	fadd   DWORD PTR [eax+ecx*4]
  435e4e:	fdivr  DWORD PTR [esp+ebp*4]
  435e51:	pop    ebx
  435e52:	aaa    
  435e53:	mov    al,0xd9
  435e55:	add    al,0x88
  435e57:	fadd   DWORD PTR [eax+ecx*4]
  435e5a:	fadd   DWORD PTR [eax+ecx*4]
  435e5d:	fadd   DWORD PTR [eax+ecx*4]
  435e60:	fadd   DWORD PTR [eax+ecx*4]
  435e63:	fadd   DWORD PTR [eax+ecx*4]
  435e66:	fadd   DWORD PTR [eax+ecx*4]
  435e69:	fadd   DWORD PTR [eax+ecx*4]
  435e6c:	fadd   DWORD PTR [eax+ecx*4]
  435e6f:	fadd   DWORD PTR [eax+ecx*4]
  435e72:	fcom   DWORD PTR [ecx-0x7b2783b1]
  435e78:	jg     0x435e7e
  435e7a:	mov    al,bl
  435e7c:	add    al,0x88
  435e7e:	fadd   DWORD PTR [eax+ecx*4]
  435e81:	fadd   DWORD PTR [eax+ecx*4]
  435e84:	fsubr  DWORD PTR [ebx-0x77fb4633]
  435e8a:	fadd   DWORD PTR [eax+ecx*4]
  435e8d:	fcom   DWORD PTR [esi+ecx*4+0x4e]
  435e91:	add    al,0x88
  435e93:	fadd   DWORD PTR [eax+ecx*4]
  435e96:	fadd   DWORD PTR [eax+ecx*4]
  435e99:	fadd   DWORD PTR [eax+ecx*4]
  435e9c:	fsubr  DWORD PTR [esi]
  435e9e:	mov    bh,0x39
  435ea0:	add    al,0x88
  435ea2:	fadd   DWORD PTR [ebx+0x7]
  435ea5:	(bad)  
  435ea6:	push   ecx
  435ea7:	subps  xmm0,XMMWORD PTR [eax+ecx*4]
  435eab:	fdivr  st,st(2)
  435ead:	cwde   
  435eae:	jmp    0xd888:0x455b9e4
  435eb5:	add    al,0x88
  435eb7:	fadd   DWORD PTR [eax+ecx*4]
  435eba:	fadd   DWORD PTR [eax+ecx*4]
  435ebd:	fsub   st,st(2)
  435ebf:	and    eax,0xd88804a5
  435ec4:	add    al,0x88
  435ec6:	fadd   DWORD PTR [eax+ecx*4]
  435ec9:	fadd   DWORD PTR [eax+ecx*4]
  435ecc:	fadd   DWORD PTR [eax+ecx*4]
  435ecf:	fadd   DWORD PTR [eax+ecx*4]
  435ed2:	fadd   DWORD PTR [eax+ecx*4]
  435ed5:	fadd   DWORD PTR [eax+ecx*4]
  435ed8:	fcomp  DWORD PTR [ebp+0x15]
  435edb:	mov    ?,ebp
  435edd:	sbb    cl,dl
  435edf:	add    al,0x88
  435ee1:	fadd   DWORD PTR [eax+ecx*4]
  435ee4:	fadd   DWORD PTR [eax+ecx*4]
  435ee7:	fadd   DWORD PTR [eax+ecx*4]
  435eea:	fmul   DWORD PTR [esi-0x77fb6a8c]
  435ef0:	fadd   DWORD PTR [eax+ecx*4]
  435ef3:	fsub   DWORD PTR [eax-0x77fbf3ce]
  435ef9:	fmul   DWORD PTR [ecx-0x55266fee]
  435eff:	inc    esp
  435f00:	test   BYTE PTR [ebx+edx*2],cl
  435f03:	and    DWORD PTR [ebx],ebx
  435f05:	out    dx,eax
  435f06:	add    al,0x88
  435f08:	fadd   DWORD PTR [eax+ecx*4]
  435f0b:	fcom   DWORD PTR [edi+0x17]
  435f0e:	mov    eax,ds:0x63d88804
  435f13:	out    0x15,eax
  435f15:	add    al,0x88
  435f17:	fdiv   DWORD PTR [ebp-0x33]
  435f1a:	xchg   esp,eax
  435f1b:	add    al,0x88
  435f1d:	fadd   DWORD PTR [eax+ecx*4]
  435f20:	fdivr  DWORD PTR [ecx]
  435f22:	mov    ebp,0xd88804de
  435f27:	add    al,0x88
  435f29:	fadd   DWORD PTR [eax+ecx*4]
  435f2c:	fsub   DWORD PTR [edx+ebx*1+0x6d]
  435f30:	add    al,0x88
  435f32:	fsub   DWORD PTR [ebp-0x77fbe500]
  435f38:	fadd   DWORD PTR [eax+ecx*4]
  435f3b:	fadd   DWORD PTR [eax+ecx*4]
  435f3e:	fadd   DWORD PTR [eax+ecx*4]
  435f41:	fadd   DWORD PTR [eax+ecx*4]
  435f44:	fadd   DWORD PTR [eax+ecx*4]
  435f47:	fadd   DWORD PTR [eax+ecx*4]
  435f4a:	fadd   DWORD PTR [eax+ecx*4]
  435f4d:	fadd   DWORD PTR [eax+ecx*4]
  435f50:	fadd   DWORD PTR [eax+ecx*4]
  435f53:	fadd   DWORD PTR [eax+ecx*4]
  435f56:	fadd   DWORD PTR ds:0x2558726b
  435f5c:	fsub   DWORD PTR [eax-0x77fbfb23]
  435f62:	fadd   DWORD PTR [eax+ecx*4]
  435f65:	fadd   DWORD PTR [eax+ecx*4]
  435f68:	fmul   DWORD PTR [eax-0x77fb6561]
  435f6e:	fadd   DWORD PTR [eax+ecx*4]
  435f71:	fadd   DWORD PTR [eax+ecx*4]
  435f74:	fadd   DWORD PTR [eax+ecx*4]
  435f77:	fadd   DWORD PTR [eax+ecx*4]
  435f7a:	fsubr  DWORD PTR [eax+eiz*1-0x2bb8c21b]
  435f81:	pop    es
  435f82:	sub    DWORD PTR [esp+eax*1-0x78],ebx
  435f86:	fadd   DWORD PTR [eax+ecx*4]
  435f89:	fadd   DWORD PTR [eax+ecx*4]
  435f8c:	fadd   DWORD PTR [eax+ecx*4]
  435f8f:	fdiv   st,st(0)
  435f91:	cld    
  435f92:	gs add al,0x88
  435f95:	fadd   DWORD PTR [eax+ecx*4]
  435f98:	fadd   DWORD PTR [eax+ecx*4]
  435f9b:	fadd   DWORD PTR [eax+ecx*4]
  435f9e:	fadd   DWORD PTR [eax+ecx*4]
  435fa1:	fadd   DWORD PTR [eax+ecx*4]
  435fa4:	fadd   DWORD PTR [eax+ecx*4]
  435fa7:	fdiv   DWORD PTR [eax]
  435fa9:	and    dh,bl
  435fab:	add    al,0x88
  435fad:	fadd   DWORD PTR [eax+ecx*4]
  435fb0:	fcom   DWORD PTR [ecx-0x55]
  435fb3:	xlat   BYTE PTR ds:[ebx]
  435fb4:	add    al,0x88
  435fb6:	fadd   DWORD PTR [eax+ecx*4]
  435fb9:	fcom   st(7)
  435fbb:	lods   al,BYTE PTR ds:[esi]
  435fbc:	das    
  435fbd:	add    al,0x88
  435fbf:	fsub   DWORD PTR [ebx]
  435fc1:	xor    edi,esi
  435fc3:	add    al,0x88
  435fc5:	fadd   DWORD PTR [eax+ecx*4]
  435fc8:	fcomp  DWORD PTR [eax+0x50]
  435fcb:	add    eax,0xf0d88804
  435fd0:	jge    0x435fb5
  435fd2:	add    al,0x88
  435fd4:	fadd   DWORD PTR [eax+ecx*4]
  435fd7:	fsub   DWORD PTR [ebp-0x77fb2bd8]
  435fdd:	fsubr  DWORD PTR [ebx-0x32]
  435fe0:	cld    
  435fe1:	add    al,0x88
  435fe3:	fadd   DWORD PTR [eax+ecx*4]
  435fe6:	fadd   DWORD PTR [eax+ecx*4]
  435fe9:	fadd   DWORD PTR [eax+ecx*4]
  435fec:	fadd   DWORD PTR [eax+ecx*4]
  435fef:	fdivr  DWORD PTR [eax]
  435ff1:	(bad)  
  435ff2:	fld    DWORD PTR [eax+ecx*4]
  435ff5:	fadd   DWORD PTR [eax+ecx*4]
  435ff8:	fadd   DWORD PTR [eax+ecx*4]
  435ffb:	fadd   DWORD PTR [eax+ecx*4]
  435ffe:	fsubr  DWORD PTR ds:0x88047b54
  436004:	fadd   DWORD PTR [eax+ecx*4]
  436007:	fadd   DWORD PTR [eax+ecx*4]
  43600a:	fadd   DWORD PTR [eax+ecx*4]
  43600d:	fadd   DWORD PTR [eax+ecx*4]
  436010:	fadd   DWORD PTR [eax+ecx*4]
  436013:	fadd   DWORD PTR [eax+ecx*4]
  436016:	fcom   st(0)
  436018:	int3   
  436019:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43601a:	inc    edi
  43601b:	into   
  43601c:	pop    edx
  43601d:	add    al,0x88
  43601f:	fadd   DWORD PTR [eax+ecx*4]
  436022:	fdiv   DWORD PTR [edx+ebx*1-0x6c]
  436026:	adc    DWORD PTR [edx-0x13],esi
  436029:	add    al,0x88
  43602b:	fadd   DWORD PTR [eax+ecx*4]
  43602e:	fadd   DWORD PTR [eax+ecx*4]
  436031:	fadd   DWORD PTR [eax+ecx*4]
  436034:	fadd   DWORD PTR [eax+ecx*4]
  436037:	fadd   DWORD PTR [eax+ecx*4]
  43603a:	fadd   DWORD PTR [eax+ecx*4]
  43603d:	fadd   DWORD PTR [eax+ecx*4]
  436040:	fadd   DWORD PTR [eax+ecx*4]
  436043:	fmul   DWORD PTR [eax]
  436045:	dec    ecx
  436046:	adc    DWORD PTR [eax+ecx*4],eax
  436049:	fadd   DWORD PTR [eax+ecx*4]
  43604c:	fmul   st,st(6)
  43604e:	in     al,0x97
  436050:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  436051:	aas    
  436052:	dec    edi
  436053:	add    al,0x88
  436055:	fadd   DWORD PTR [eax+ecx*4]
  436058:	fcom   DWORD PTR [edx-0x4a]
  43605b:	mov    ds:0x4d88804,al
  436060:	mov    al,bl
  436062:	jns    0x4360b2
  436064:	add    DWORD PTR [eax+ecx*4],eax
  436067:	fadd   DWORD PTR [eax+ecx*4]
  43606a:	fadd   DWORD PTR [eax+ecx*4]
  43606d:	fadd   DWORD PTR [eax+ecx*4]
  436070:	fadd   DWORD PTR [eax+ecx*4]
  436073:	fadd   DWORD PTR [eax+ecx*4]
  436076:	fadd   DWORD PTR [eax+ecx*4]
  436079:	fadd   DWORD PTR [eax+ecx*4]
  43607c:	fadd   DWORD PTR [eax+ecx*4]
  43607f:	fsubr  DWORD PTR [edi+0x4e6f5f02]
  436085:	push   ss
  436086:	add    al,0x88
  436088:	fadd   DWORD PTR [eax+ecx*4]
  43608b:	fdiv   st,st(2)
  43608d:	ds ins DWORD PTR es:[edi],dx
  43608f:	add    al,0x88
  436091:	fadd   DWORD PTR [eax+ecx*4]
  436094:	fadd   DWORD PTR [eax+ecx*4]
  436097:	fadd   DWORD PTR [eax+ecx*4]
  43609a:	fadd   DWORD PTR [eax+ecx*4]
  43609d:	fcomp  DWORD PTR [edi+0x53]
  4360a0:	fild   WORD PTR [eax+ecx*4]
  4360a3:	fadd   DWORD PTR [eax+ecx*4]
  4360a6:	fadd   DWORD PTR [eax+ecx*4]
  4360a9:	fadd   DWORD PTR [eax+ecx*4]
  4360ac:	fadd   DWORD PTR [eax+ecx*4]
  4360af:	fadd   DWORD PTR [eax+ecx*4]
  4360b2:	fadd   DWORD PTR [eax+ecx*4]
  4360b5:	fmul   DWORD PTR [esi]
  4360b7:	mov    DWORD PTR [edi+0x2a],esi
  4360ba:	mov    DWORD PTR [ecx+0x4d88804],esp
  4360c0:	mov    al,bl
  4360c2:	add    al,0x88
  4360c4:	fadd   DWORD PTR [eax+ecx*4]
  4360c7:	fdiv   st,st(6)
  4360c9:	adc    cl,bh
  4360cb:	add    al,0x88
  4360cd:	fadd   DWORD PTR [eax+ecx*4]
  4360d0:	fsub   st,st(7)
  4360d2:	fild   DWORD PTR [eax]
  4360d4:	add    al,0x88
  4360d6:	fadd   DWORD PTR [eax]
  4360d8:	push   ebx
  4360d9:	or     eax,0x4d88804
  4360de:	mov    al,bl
  4360e0:	add    al,0x88
  4360e2:	fadd   DWORD PTR [eax+ecx*4]
  4360e5:	fadd   DWORD PTR [eax+ecx*4]
  4360e8:	fmul   DWORD PTR [edi-0x77fb29c3]
  4360ee:	fadd   DWORD PTR [eax+ecx*4]
  4360f1:	fadd   DWORD PTR [eax+ecx*4]
  4360f4:	fdiv   DWORD PTR [edi-0x77fb56a3]
  4360fa:	fadd   DWORD PTR [eax+ecx*4]
  4360fd:	fadd   st,st(4)
  4360ff:	cld    
  436100:	aas    
  436101:	add    al,0x88
  436103:	fsubr  DWORD PTR ds:0xccdca70f
  436109:	jmp    0x43610f
  43610b:	mov    al,bl
  43610d:	add    al,0x88
  43610f:	fadd   DWORD PTR [eax+ecx*4]
  436112:	fadd   DWORD PTR [eax+ecx*4]
  436115:	fdiv   DWORD PTR [esi]
  436117:	fdiv   st(4),st
  436119:	add    al,0x88
  43611b:	fadd   DWORD PTR [eax+ecx*4]
  43611e:	fadd   DWORD PTR [eax+ecx*4]
  436121:	fadd   DWORD PTR [eax+ecx*4]
  436124:	fdivr  DWORD PTR [eax-0x5]
  436127:	mov    DWORD PTR [eax+ecx*4],0xd88804d8
  43612e:	int3   
  43612f:	in     eax,dx
  436130:	mov    WORD PTR [ebx+0x62],ss
  436133:	scas   eax,DWORD PTR es:[edi]
  436134:	add    al,0x88
  436136:	fcomp  DWORD PTR [eax]
  436138:	jg     0x436103
  43613a:	add    al,0x88
  43613c:	fadd   DWORD PTR [eax+ecx*4]
  43613f:	fadd   DWORD PTR [eax+ecx*4]
  436142:	fadd   DWORD PTR [eax+ecx*4]
  436145:	fsubr  DWORD PTR [ebx]
  436147:	xchg   edx,eax
  436148:	and    BYTE PTR [eax+ecx*4],al
  43614b:	fadd   DWORD PTR [eax+ecx*4]
  43614e:	fdivr  st,st(2)
  436150:	call   0xd8cb65df
  436155:	ret    
  436156:	or     al,0x48
  436158:	add    al,0x88
  43615a:	fsub   st,st(5)
  43615c:	iret   
  43615d:	into   
  43615e:	add    al,0x88
  436160:	fadd   DWORD PTR [eax+ecx*4]
  436163:	fadd   DWORD PTR [eax+ecx*4]
  436166:	fadd   DWORD PTR [eax+ecx*4]
  436169:	fcom   DWORD PTR [ebx-0x43]
  43616c:	push   es
  43616d:	add    al,0x88
  43616f:	fadd   DWORD PTR [eax+ecx*4]
  436172:	fcomp  DWORD PTR [eax]
  436174:	aam    0x5f
  436176:	add    al,0x88
  436178:	fadd   DWORD PTR [eax+ecx*4]
  43617b:	fdivr  st,st(3)
  43617d:	mov    ch,0x2c
  43617f:	add    al,0x88
  436181:	fadd   DWORD PTR [eax+ecx*4]
  436184:	fadd   DWORD PTR [eax+ecx*4]
  436187:	fcom   st(2)
  436189:	xlat   BYTE PTR ds:[ebx]
  43618a:	xchg   ecx,eax
  43618b:	add    al,0x88
  43618d:	fadd   DWORD PTR [eax+ecx*4]
  436190:	fsubr  DWORD PTR ds:0x636e735
  436196:	and    eax,DWORD PTR [eax+ecx*4]
  436199:	fcomp  DWORD PTR [edx]
  43619b:	out    0x2a,al
  43619d:	add    al,0x88
  43619f:	fadd   DWORD PTR [eax+ecx*4]
  4361a2:	fadd   DWORD PTR [eax+ecx*4]
  4361a5:	fadd   DWORD PTR [eax+ecx*4]
  4361a8:	fadd   DWORD PTR [eax+ecx*4]
  4361ab:	fadd   DWORD PTR [eax+ecx*4]
  4361ae:	fadd   DWORD PTR [eax+ecx*4]
  4361b1:	fadd   DWORD PTR [eax+ecx*4]
  4361b4:	fadd   DWORD PTR [eax+ecx*4]
  4361b7:	fadd   DWORD PTR [eax+ecx*4]
  4361ba:	fmul   DWORD PTR [edx+0x22]
  4361bd:	fld    DWORD PTR [eax+ecx*4]
  4361c0:	fadd   DWORD PTR [eax+ecx*4]
  4361c3:	fadd   DWORD PTR [eax+ecx*4]
  4361c6:	fdivr  DWORD PTR ds:0x88047af2
  4361cc:	fadd   DWORD PTR [eax+ecx*4]
  4361cf:	fadd   DWORD PTR [eax+ecx*4]
  4361d2:	fadd   DWORD PTR [eax+ecx*4]
  4361d5:	fadd   DWORD PTR [eax+ecx*4]
  4361d8:	fdiv   DWORD PTR [ebx+0x17]
  4361db:	call   0x51be9e4
  4361e0:	mov    al,bl
  4361e2:	add    al,0x88
  4361e4:	fadd   DWORD PTR [eax+ecx*4]
  4361e7:	fadd   st,st(5)
  4361e9:	cmp    eax,0xd88804b9
  4361ee:	add    al,0x88
  4361f0:	fadd   DWORD PTR [eax+ecx*4]
  4361f3:	fadd   DWORD PTR [eax+ecx*4]
  4361f6:	fadd   DWORD PTR [eax+ecx*4]
  4361f9:	fdiv   DWORD PTR [edx]
  4361fb:	mov    es,WORD PTR ds:0x4345585
  436201:	mov    al,bl
  436203:	jg     0x436225
  436205:	jg     0x43620b
  436207:	mov    al,bl
  436209:	add    al,0x88
  43620b:	fdiv   DWORD PTR [edx+0x52]
  43620e:	xor    ebp,DWORD PTR [esi+edi*1]
  436211:	sub    al,BYTE PTR [eax+ecx*4]
  436214:	fadd   DWORD PTR [eax+ecx*4]
  436217:	fcomp  DWORD PTR [esi+0x5f]
  43621a:	push   ebp
  43621b:	add    al,0x88
  43621d:	fsubr  st,st(0)
  43621f:	pop    esi
  436220:	(bad)  
  436221:	jne    0x4361f3
  436223:	pop    es
  436224:	sub    edx,DWORD PTR [esi]
  436226:	outs   dx,BYTE PTR ds:[esi]
  436227:	cli    
  436228:	sar    BYTE PTR [ecx+0x3cd88804],0xdb
  43622f:	sub    eax,0x43e2753
  436234:	mov    al,bl
  436236:	add    al,0x88
  436238:	fcomp  DWORD PTR [eax+ebp*4+0x5f1c0b5]
  43623f:	add    al,0x88
  436241:	fadd   DWORD PTR [eax+ecx*4]
  436244:	fcom   DWORD PTR [edi-0x6]
  436247:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  436248:	mov    ebx,DWORD PTR [esp]
  43624b:	add    al,0x88
  43624d:	fadd   DWORD PTR [eax+ecx*4]
  436250:	fadd   DWORD PTR [eax+ecx*4]
  436253:	fadd   DWORD PTR [eax+ecx*4]
  436256:	fadd   DWORD PTR [eax+ecx*4]
  436259:	fadd   DWORD PTR [eax+ecx*4]
  43625c:	fdiv   st,st(5)
  43625e:	clc    
  43625f:	mov    ah,0x4
  436261:	mov    al,bl
  436263:	add    al,0x88
  436265:	fadd   DWORD PTR [eax+ecx*4]
  436268:	fadd   DWORD PTR [eax+ecx*4]
  43626b:	fcomp  DWORD PTR [eax]
  43626d:	scas   al,BYTE PTR es:[edi]
  43626e:	rol    BYTE PTR [eax+ecx*4],0xd8
  436272:	add    al,0x88
  436274:	fdivr  DWORD PTR [edi-0x77fbaa95]
  43627a:	fdiv   DWORD PTR [eax+edx*4]
  43627d:	mov    ds:0x5ad88804,al
  436282:	iret   
  436283:	retf   
  436284:	pop    ebx
  436285:	xor    ebp,DWORD PTR [edx+0x4]
  436288:	mov    al,bl
  43628a:	add    al,0x88
  43628c:	fadd   DWORD PTR [eax+ecx*4]
  43628f:	fadd   DWORD PTR [eax+ecx*4]
  436292:	fdivr  DWORD PTR [edx]
  436294:	cmp    ecx,DWORD PTR [esp+eax*1-0x77fb2778]
  43629b:	fadd   DWORD PTR [eax+ecx*4]
  43629e:	fadd   DWORD PTR [eax+ecx*4]
  4362a1:	fadd   DWORD PTR [eax+ecx*4]
  4362a4:	fadd   DWORD PTR [eax+ecx*4]
  4362a7:	fadd   st,st(7)
  4362a9:	loop   0x436292
  4362ab:	add    al,0x88
  4362ad:	fadd   DWORD PTR [eax+ecx*4]
  4362b0:	fadd   DWORD PTR [eax+ecx*4]
  4362b3:	fsub   DWORD PTR [ebp+0x35]
  4362b6:	lahf   
  4362b7:	add    al,0x88
  4362b9:	fadd   DWORD PTR [eax+ecx*4]
  4362bc:	fadd   DWORD PTR [eax+ecx*4]
  4362bf:	fadd   DWORD PTR [eax+ecx*4]
  4362c2:	fcom   st(0)
  4362c4:	popf   
  4362c5:	fld    QWORD PTR [eax+ecx*4]
  4362c8:	fadd   DWORD PTR [eax+ecx*4]
  4362cb:	fadd   DWORD PTR [eax+ecx*4]
  4362ce:	fadd   DWORD PTR [eax+ecx*4]
  4362d1:	fcomp  DWORD PTR [ebx]
  4362d3:	arpl   WORD PTR [ebp+0x4],di
  4362d6:	mov    al,bl
  4362d8:	add    al,0x88
  4362da:	fdiv   DWORD PTR [ebp-0x77fb5f63]
  4362e0:	fadd   DWORD PTR [eax+ecx*4]
  4362e3:	fadd   DWORD PTR [eax+ecx*4]
  4362e6:	fadd   DWORD PTR [eax+ecx*4]
  4362e9:	fadd   DWORD PTR [eax+ecx*4]
  4362ec:	fadd   DWORD PTR [eax+ecx*4]
  4362ef:	fadd   DWORD PTR [eax+ecx*4]
  4362f2:	fadd   DWORD PTR [eax+ecx*4]
  4362f5:	fadd   DWORD PTR [eax+ecx*4]
  4362f8:	fcomp  st(6)
  4362fa:	inc    esp
  4362fb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4362fc:	add    al,0x88
  4362fe:	fadd   DWORD PTR [eax+ecx*4]
  436301:	fadd   DWORD PTR [eax+ecx*4]
  436304:	fadd   DWORD PTR [eax+ecx*4]
  436307:	fadd   DWORD PTR [eax+ecx*4]
  43630a:	fadd   DWORD PTR [eax+ecx*4]
  43630d:	fsubr  DWORD PTR [esi]
  43630f:	mov    ds:0xac1e7817,al
  436314:	add    al,0x88
  436316:	fadd   DWORD PTR [eax+ecx*4]
  436319:	fadd   DWORD PTR [eax+ecx*4]
  43631c:	fadd   DWORD PTR [eax+ecx*4]
  43631f:	fadd   DWORD PTR [eax+ecx*4]
  436322:	fsub   DWORD PTR [edx+0x2c]
  436325:	mov    esp,0x49852f3
  43632a:	mov    al,bl
  43632c:	add    al,0x88
  43632e:	fadd   DWORD PTR [eax+ecx*4]
  436331:	fadd   DWORD PTR [eax+ecx*4]
  436334:	fadd   DWORD PTR [eax+ecx*4]
  436337:	fadd   DWORD PTR [eax+ecx*4]
  43633a:	fadd   DWORD PTR [eax+ecx*4]
  43633d:	fadd   DWORD PTR [eax+ecx*4]
  436340:	fadd   DWORD PTR [eax+ecx*4]
  436343:	fmul   DWORD PTR [ebp+0x215df4d4]
  436349:	sub    DWORD PTR [eax+ecx*4],eax
  43634c:	fadd   DWORD PTR [eax+ecx*4]
  43634f:	fdiv   DWORD PTR [ebx-0x41eeb6f4]
  436355:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  436356:	mov    al,0x26
  436358:	test   eax,0xc4d88804
  43635d:	inc    edx
  43635e:	ss add al,0x88
  436361:	fadd   DWORD PTR [eax+ecx*4]
  436364:	fadd   DWORD PTR [eax+ecx*4]
  436367:	fadd   DWORD PTR [eax+ecx*4]
  43636a:	fcom   DWORD PTR [esi]
  43636c:	bound  ebx,QWORD PTR [edi+0x4]
  43636f:	mov    al,bl
  436371:	add    al,0x88
  436373:	fadd   DWORD PTR [eax]
	...
  43637d:	add    BYTE PTR [esi+0x1d],bh
  436380:	add    BYTE PTR [ecx],al
  436382:	jae    0x43636d
  436384:	add    BYTE PTR [ecx],al
  436386:	push   ds
  436387:	enter  0x100,0xe1
  43638b:	mov    dh,0x0
  43638d:	add    esi,ecx
  43638f:	jbe    0x436391
  436391:	add    DWORD PTR [esi+0x6d],ebx
  436394:	add    BYTE PTR [ecx],al
  436396:	jle    0x436385
  436398:	add    BYTE PTR [ecx],al
  43639a:	daa    
  43639b:	jmp    0x100:0x1ecc0000
  4363a2:	inc    ebp
  4363a3:	retf   0x100
  4363a6:	cmp    bl,bl
  4363a8:	add    BYTE PTR [ecx],al
  4363aa:	xchg   ecx,eax
  4363ab:	mov    eax,DWORD PTR [eax]
  4363ad:	add    DWORD PTR [ebx-0x34],edi
  4363b0:	add    BYTE PTR [ecx],al
  4363b2:	mov    bh,0xb5
  4363b4:	add    BYTE PTR [ecx],al
  4363b6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4363b7:	pop    ebx
  4363b8:	add    BYTE PTR [ecx],al
  4363ba:	jle    0x436355
  4363bc:	add    BYTE PTR [eax],al
  4363be:	jnp    0x436435
  4363c0:	add    BYTE PTR [ecx],al
  4363c2:	mov    al,0xed
  4363c4:	add    BYTE PTR [eax],al
  4363c6:	fwait
  4363c7:	mov    WORD PTR [eax],es
  4363c9:	add    DWORD PTR [esi-0x23feff35],edi
  4363cf:	clc    
  4363d0:	add    BYTE PTR [ecx],al
  4363d2:	mov    dl,0xb1
  4363d4:	add    BYTE PTR [eax],al
  4363d6:	sbb    bl,dh
	...
